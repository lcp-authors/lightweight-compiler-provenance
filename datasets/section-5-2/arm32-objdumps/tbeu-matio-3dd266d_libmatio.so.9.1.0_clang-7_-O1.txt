
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

00001790 <_init>:
    1790:	push	{r3, lr}
    1794:	bl	1a98 <call_weak_fn>
    1798:	pop	{r3, pc}

Disassembly of section .plt:

0000179c <.plt>:
    179c:	push	{lr}		; (str lr, [sp, #-4]!)
    17a0:	ldr	lr, [pc, #4]	; 17ac <.plt+0x10>
    17a4:	add	lr, pc, lr
    17a8:	ldr	pc, [lr, #8]!
    17ac:	.word	0x00059854

000017b0 <calloc@plt>:
    17b0:	add	ip, pc, #0, 12
    17b4:	add	ip, ip, #364544	; 0x59000
    17b8:	ldr	pc, [ip, #2132]!	; 0x854

000017bc <Mat_VarReadNext@plt>:
    17bc:	add	ip, pc, #0, 12
    17c0:	add	ip, ip, #364544	; 0x59000
    17c4:	ldr	pc, [ip, #2124]!	; 0x84c

000017c8 <strcmp@plt>:
    17c8:	add	ip, pc, #0, 12
    17cc:	add	ip, ip, #364544	; 0x59000
    17d0:	ldr	pc, [ip, #2116]!	; 0x844

000017d4 <__cxa_finalize@plt>:
    17d4:	add	ip, pc, #0, 12
    17d8:	add	ip, ip, #364544	; 0x59000
    17dc:	ldr	pc, [ip, #2108]!	; 0x83c

000017e0 <Mat_Open@plt>:
    17e0:	add	ip, pc, #0, 12
    17e4:	add	ip, ip, #364544	; 0x59000
    17e8:	ldr	pc, [ip, #2100]!	; 0x834

000017ec <printf@plt>:
    17ec:	add	ip, pc, #0, 12
    17f0:	add	ip, ip, #364544	; 0x59000
    17f4:	ldr	pc, [ip, #2092]!	; 0x82c

000017f8 <fopen@plt>:
    17f8:	add	ip, pc, #0, 12
    17fc:	add	ip, ip, #364544	; 0x59000
    1800:	ldr	pc, [ip, #2084]!	; 0x824

00001804 <inflate@plt>:
    1804:	add	ip, pc, #0, 12
    1808:	add	ip, ip, #364544	; 0x59000
    180c:	ldr	pc, [ip, #2076]!	; 0x81c

00001810 <fflush@plt>:
    1810:	add	ip, pc, #0, 12
    1814:	add	ip, ip, #364544	; 0x59000
    1818:	ldr	pc, [ip, #2068]!	; 0x814

0000181c <free@plt>:
    181c:	add	ip, pc, #0, 12
    1820:	add	ip, ip, #364544	; 0x59000
    1824:	ldr	pc, [ip, #2060]!	; 0x80c

00001828 <Mat_Warning@plt>:
    1828:	add	ip, pc, #0, 12
    182c:	add	ip, ip, #364544	; 0x59000
    1830:	ldr	pc, [ip, #2052]!	; 0x804

00001834 <memcpy@plt>:
    1834:	add	ip, pc, #0, 12
    1838:	add	ip, ip, #364544	; 0x59000
    183c:	ldr	pc, [ip, #2044]!	; 0x7fc

00001840 <Mat_VarWrite@plt>:
    1840:	add	ip, pc, #0, 12
    1844:	add	ip, ip, #364544	; 0x59000
    1848:	ldr	pc, [ip, #2036]!	; 0x7f4

0000184c <time@plt>:
    184c:	add	ip, pc, #0, 12
    1850:	add	ip, ip, #364544	; 0x59000
    1854:	ldr	pc, [ip, #2028]!	; 0x7ec

00001858 <ftell@plt>:
    1858:	add	ip, pc, #0, 12
    185c:	add	ip, ip, #364544	; 0x59000
    1860:	ldr	pc, [ip, #2020]!	; 0x7e4

00001864 <fwrite_unlocked@plt>:
    1864:	add	ip, pc, #0, 12
    1868:	add	ip, ip, #364544	; 0x59000
    186c:	ldr	pc, [ip, #2012]!	; 0x7dc

00001870 <ctime@plt>:
    1870:	add	ip, pc, #0, 12
    1874:	add	ip, ip, #364544	; 0x59000
    1878:	ldr	pc, [ip, #2004]!	; 0x7d4

0000187c <strdup@plt>:
    187c:	add	ip, pc, #0, 12
    1880:	add	ip, ip, #364544	; 0x59000
    1884:	ldr	pc, [ip, #1996]!	; 0x7cc

00001888 <realloc@plt>:
    1888:	add	ip, pc, #0, 12
    188c:	add	ip, ip, #364544	; 0x59000
    1890:	ldr	pc, [ip, #1988]!	; 0x7c4

00001894 <Mat_VarReadInfo@plt>:
    1894:	add	ip, pc, #0, 12
    1898:	add	ip, ip, #364544	; 0x59000
    189c:	ldr	pc, [ip, #1980]!	; 0x7bc

000018a0 <zError@plt>:
    18a0:	add	ip, pc, #0, 12
    18a4:	add	ip, ip, #364544	; 0x59000
    18a8:	ldr	pc, [ip, #1972]!	; 0x7b4

000018ac <deflate@plt>:
    18ac:	add	ip, pc, #0, 12
    18b0:	add	ip, ip, #364544	; 0x59000
    18b4:	ldr	pc, [ip, #1964]!	; 0x7ac

000018b8 <Mat_VarCalloc@plt>:
    18b8:	add	ip, pc, #0, 12
    18bc:	add	ip, ip, #364544	; 0x59000
    18c0:	ldr	pc, [ip, #1956]!	; 0x7a4

000018c4 <fwrite@plt>:
    18c4:	add	ip, pc, #0, 12
    18c8:	add	ip, ip, #364544	; 0x59000
    18cc:	ldr	pc, [ip, #1948]!	; 0x79c

000018d0 <fread@plt>:
    18d0:	add	ip, pc, #0, 12
    18d4:	add	ip, ip, #364544	; 0x59000
    18d8:	ldr	pc, [ip, #1940]!	; 0x794

000018dc <puts@plt>:
    18dc:	add	ip, pc, #0, 12
    18e0:	add	ip, ip, #364544	; 0x59000
    18e4:	ldr	pc, [ip, #1932]!	; 0x78c

000018e8 <malloc@plt>:
    18e8:	add	ip, pc, #0, 12
    18ec:	add	ip, ip, #364544	; 0x59000
    18f0:	ldr	pc, [ip, #1924]!	; 0x784

000018f4 <deflateInit_@plt>:
    18f4:	add	ip, pc, #0, 12
    18f8:	add	ip, ip, #364544	; 0x59000
    18fc:	ldr	pc, [ip, #1916]!	; 0x77c

00001900 <mktemp@plt>:
    1900:	add	ip, pc, #0, 12
    1904:	add	ip, ip, #364544	; 0x59000
    1908:	ldr	pc, [ip, #1908]!	; 0x774

0000190c <__gmon_start__@plt>:
    190c:	add	ip, pc, #0, 12
    1910:	add	ip, ip, #364544	; 0x59000
    1914:	ldr	pc, [ip, #1900]!	; 0x76c

00001918 <exit@plt>:
    1918:	add	ip, pc, #0, 12
    191c:	add	ip, ip, #364544	; 0x59000
    1920:	ldr	pc, [ip, #1892]!	; 0x764

00001924 <feof@plt>:
    1924:	add	ip, pc, #0, 12
    1928:	add	ip, ip, #364544	; 0x59000
    192c:	ldr	pc, [ip, #1884]!	; 0x75c

00001930 <Mat_VarFree@plt>:
    1930:	add	ip, pc, #0, 12
    1934:	add	ip, ip, #364544	; 0x59000
    1938:	ldr	pc, [ip, #1876]!	; 0x754

0000193c <Mat_SizeOf@plt>:
    193c:	add	ip, pc, #0, 12
    1940:	add	ip, ip, #364544	; 0x59000
    1944:	ldr	pc, [ip, #1868]!	; 0x74c

00001948 <Mat_GetDir@plt>:
    1948:	add	ip, pc, #0, 12
    194c:	add	ip, ip, #364544	; 0x59000
    1950:	ldr	pc, [ip, #1860]!	; 0x744

00001954 <inflateEnd@plt>:
    1954:	add	ip, pc, #0, 12
    1958:	add	ip, ip, #364544	; 0x59000
    195c:	ldr	pc, [ip, #1852]!	; 0x73c

00001960 <inflateCopy@plt>:
    1960:	add	ip, pc, #0, 12
    1964:	add	ip, ip, #364544	; 0x59000
    1968:	ldr	pc, [ip, #1844]!	; 0x734

0000196c <strlen@plt>:
    196c:	add	ip, pc, #0, 12
    1970:	add	ip, ip, #364544	; 0x59000
    1974:	ldr	pc, [ip, #1836]!	; 0x72c

00001978 <fprintf@plt>:
    1978:	add	ip, pc, #0, 12
    197c:	add	ip, ip, #364544	; 0x59000
    1980:	ldr	pc, [ip, #1828]!	; 0x724

00001984 <Mat_VarPrint@plt>:
    1984:	add	ip, pc, #0, 12
    1988:	add	ip, ip, #364544	; 0x59000
    198c:	ldr	pc, [ip, #1820]!	; 0x71c

00001990 <snprintf@plt>:
    1990:	add	ip, pc, #0, 12
    1994:	add	ip, ip, #364544	; 0x59000
    1998:	ldr	pc, [ip, #1812]!	; 0x714

0000199c <Mat_Rewind@plt>:
    199c:	add	ip, pc, #0, 12
    19a0:	add	ip, ip, #364544	; 0x59000
    19a4:	ldr	pc, [ip, #1804]!	; 0x70c

000019a8 <memset@plt>:
    19a8:	add	ip, pc, #0, 12
    19ac:	add	ip, ip, #364544	; 0x59000
    19b0:	ldr	pc, [ip, #1796]!	; 0x704

000019b4 <putchar@plt>:
    19b4:	add	ip, pc, #0, 12
    19b8:	add	ip, ip, #364544	; 0x59000
    19bc:	ldr	pc, [ip, #1788]!	; 0x6fc

000019c0 <Mat_Close@plt>:
    19c0:	add	ip, pc, #0, 12
    19c4:	add	ip, ip, #364544	; 0x59000
    19c8:	ldr	pc, [ip, #1780]!	; 0x6f4

000019cc <Mat_Critical@plt>:
    19cc:	add	ip, pc, #0, 12
    19d0:	add	ip, ip, #364544	; 0x59000
    19d4:	ldr	pc, [ip, #1772]!	; 0x6ec

000019d8 <deflateEnd@plt>:
    19d8:	add	ip, pc, #0, 12
    19dc:	add	ip, ip, #364544	; 0x59000
    19e0:	ldr	pc, [ip, #1764]!	; 0x6e4

000019e4 <fclose@plt>:
    19e4:	add	ip, pc, #0, 12
    19e8:	add	ip, ip, #364544	; 0x59000
    19ec:	ldr	pc, [ip, #1756]!	; 0x6dc

000019f0 <inflateInit_@plt>:
    19f0:	add	ip, pc, #0, 12
    19f4:	add	ip, ip, #364544	; 0x59000
    19f8:	ldr	pc, [ip, #1748]!	; 0x6d4

000019fc <Mat_CreateVer@plt>:
    19fc:	add	ip, pc, #0, 12
    1a00:	add	ip, ip, #364544	; 0x59000
    1a04:	ldr	pc, [ip, #1740]!	; 0x6cc

00001a08 <fputc@plt>:
    1a08:	add	ip, pc, #0, 12
    1a0c:	add	ip, ip, #364544	; 0x59000
    1a10:	ldr	pc, [ip, #1732]!	; 0x6c4

00001a14 <remove@plt>:
    1a14:	add	ip, pc, #0, 12
    1a18:	add	ip, ip, #364544	; 0x59000
    1a1c:	ldr	pc, [ip, #1724]!	; 0x6bc

00001a20 <vsnprintf@plt>:
    1a20:	add	ip, pc, #0, 12
    1a24:	add	ip, ip, #364544	; 0x59000
    1a28:	ldr	pc, [ip, #1716]!	; 0x6b4

00001a2c <Mat_VarGetStructFieldByName@plt>:
    1a2c:	add	ip, pc, #0, 12
    1a30:	add	ip, ip, #364544	; 0x59000
    1a34:	ldr	pc, [ip, #1708]!	; 0x6ac

00001a38 <Mat_SizeOfClass@plt>:
    1a38:	add	ip, pc, #0, 12
    1a3c:	add	ip, ip, #364544	; 0x59000
    1a40:	ldr	pc, [ip, #1700]!	; 0x6a4

00001a44 <Mat_VarGetStructFieldByIndex@plt>:
    1a44:	add	ip, pc, #0, 12
    1a48:	add	ip, ip, #364544	; 0x59000
    1a4c:	ldr	pc, [ip, #1692]!	; 0x69c

00001a50 <fread_unlocked@plt>:
    1a50:	add	ip, pc, #0, 12
    1a54:	add	ip, ip, #364544	; 0x59000
    1a58:	ldr	pc, [ip, #1684]!	; 0x694

00001a5c <Mat_VarGetSize@plt>:
    1a5c:	add	ip, pc, #0, 12
    1a60:	add	ip, ip, #364544	; 0x59000
    1a64:	ldr	pc, [ip, #1676]!	; 0x68c

00001a68 <fseek@plt>:
    1a68:	add	ip, pc, #0, 12
    1a6c:	add	ip, ip, #364544	; 0x59000
    1a70:	ldr	pc, [ip, #1668]!	; 0x684

00001a74 <abort@plt>:
    1a74:	add	ip, pc, #0, 12
    1a78:	add	ip, ip, #364544	; 0x59000
    1a7c:	ldr	pc, [ip, #1660]!	; 0x67c

00001a80 <Mat_VarDuplicate@plt>:
    1a80:	add	ip, pc, #0, 12
    1a84:	add	ip, ip, #364544	; 0x59000
    1a88:	ldr	pc, [ip, #1652]!	; 0x674

00001a8c <Mat_VarReadNextInfo@plt>:
    1a8c:	add	ip, pc, #0, 12
    1a90:	add	ip, ip, #364544	; 0x59000
    1a94:	ldr	pc, [ip, #1644]!	; 0x66c

Disassembly of section .text:

00001a98 <call_weak_fn>:
    1a98:	ldr	r3, [pc, #20]	; 1ab4 <call_weak_fn+0x1c>
    1a9c:	ldr	r2, [pc, #20]	; 1ab8 <call_weak_fn+0x20>
    1aa0:	add	r3, pc, r3
    1aa4:	ldr	r2, [r3, r2]
    1aa8:	cmp	r2, #0
    1aac:	bxeq	lr
    1ab0:	b	190c <__gmon_start__@plt>
    1ab4:	.word	0x00059558
    1ab8:	.word	0x00000110

00001abc <deregister_tm_clones>:
    1abc:	ldr	r0, [pc, #44]	; 1af0 <deregister_tm_clones+0x34>
    1ac0:	ldr	r3, [pc, #44]	; 1af4 <deregister_tm_clones+0x38>
    1ac4:	add	r0, pc, r0
    1ac8:	add	r3, pc, r3
    1acc:	cmp	r3, r0
    1ad0:	ldr	r3, [pc, #32]	; 1af8 <deregister_tm_clones+0x3c>
    1ad4:	add	r3, pc, r3
    1ad8:	bxeq	lr
    1adc:	ldr	r2, [pc, #24]	; 1afc <deregister_tm_clones+0x40>
    1ae0:	ldr	r3, [r3, r2]
    1ae4:	cmp	r3, #0
    1ae8:	bxeq	lr
    1aec:	bx	r3
    1af0:	.word	0x00059654
    1af4:	.word	0x00059650
    1af8:	.word	0x00059524
    1afc:	.word	0x00000108

00001b00 <register_tm_clones>:
    1b00:	ldr	r0, [pc, #56]	; 1b40 <register_tm_clones+0x40>
    1b04:	ldr	r3, [pc, #56]	; 1b44 <register_tm_clones+0x44>
    1b08:	add	r0, pc, r0
    1b0c:	add	r3, pc, r3
    1b10:	sub	r1, r3, r0
    1b14:	ldr	r3, [pc, #44]	; 1b48 <register_tm_clones+0x48>
    1b18:	asr	r1, r1, #2
    1b1c:	add	r3, pc, r3
    1b20:	add	r1, r1, r1, lsr #31
    1b24:	asrs	r1, r1, #1
    1b28:	bxeq	lr
    1b2c:	ldr	r2, [pc, #24]	; 1b4c <register_tm_clones+0x4c>
    1b30:	ldr	r3, [r3, r2]
    1b34:	cmp	r3, #0
    1b38:	bxeq	lr
    1b3c:	bx	r3
    1b40:	.word	0x00059610
    1b44:	.word	0x0005960c
    1b48:	.word	0x000594dc
    1b4c:	.word	0x00000118

00001b50 <__do_global_dtors_aux>:
    1b50:	ldr	r3, [pc, #76]	; 1ba4 <__do_global_dtors_aux+0x54>
    1b54:	ldr	r2, [pc, #76]	; 1ba8 <__do_global_dtors_aux+0x58>
    1b58:	add	r3, pc, r3
    1b5c:	add	r2, pc, r2
    1b60:	ldrb	r3, [r3]
    1b64:	cmp	r3, #0
    1b68:	bxne	lr
    1b6c:	ldr	r3, [pc, #56]	; 1bac <__do_global_dtors_aux+0x5c>
    1b70:	push	{r4, lr}
    1b74:	ldr	r3, [r2, r3]
    1b78:	cmp	r3, #0
    1b7c:	beq	1b8c <__do_global_dtors_aux+0x3c>
    1b80:	ldr	r3, [pc, #40]	; 1bb0 <__do_global_dtors_aux+0x60>
    1b84:	ldr	r0, [pc, r3]
    1b88:	bl	17d4 <__cxa_finalize@plt>
    1b8c:	bl	1abc <deregister_tm_clones>
    1b90:	ldr	r3, [pc, #28]	; 1bb4 <__do_global_dtors_aux+0x64>
    1b94:	mov	r2, #1
    1b98:	add	r3, pc, r3
    1b9c:	strb	r2, [r3]
    1ba0:	pop	{r4, pc}
    1ba4:	.word	0x000595c0
    1ba8:	.word	0x0005949c
    1bac:	.word	0x00000104
    1bb0:	.word	0x00059590
    1bb4:	.word	0x00059580

00001bb8 <frame_dummy>:
    1bb8:	b	1b00 <register_tm_clones>

00001bbc <Mat_int64Swap>:
    1bbc:	push	{r4, r5, fp, lr}
    1bc0:	add	fp, sp, #8
    1bc4:	ldrd	r2, [r0]
    1bc8:	mov	ip, #65280	; 0xff00
    1bcc:	and	lr, ip, r3, lsr #8
    1bd0:	lsr	r1, r3, #24
    1bd4:	orr	r1, r1, r3, lsl #24
    1bd8:	and	r3, r3, #65280	; 0xff00
    1bdc:	orr	r1, r1, r3, lsl #8
    1be0:	orr	r4, r1, lr
    1be4:	and	r1, ip, r2, lsr #8
    1be8:	lsl	r3, r2, #8
    1bec:	uxtb16	r3, r3
    1bf0:	orr	r3, r3, r2, lsl #24
    1bf4:	orr	r1, r3, r1
    1bf8:	orr	r5, r1, r2, lsr #24
    1bfc:	strd	r4, [r0]
    1c00:	mov	r0, r4
    1c04:	mov	r1, r5
    1c08:	pop	{r4, r5, fp, pc}

00001c0c <Mat_uint64Swap>:
    1c0c:	ldrd	r2, [r0]
    1c10:	rev	r1, r2
    1c14:	rev	r2, r3
    1c18:	str	r2, [r0]
    1c1c:	str	r1, [r0, #4]
    1c20:	mov	r0, r2
    1c24:	bx	lr

00001c28 <Mat_int32Swap>:
    1c28:	ldr	r1, [r0]
    1c2c:	rev	r1, r1
    1c30:	str	r1, [r0]
    1c34:	mov	r0, r1
    1c38:	bx	lr

00001c3c <Mat_uint32Swap>:
    1c3c:	ldr	r1, [r0]
    1c40:	rev	r1, r1
    1c44:	str	r1, [r0]
    1c48:	mov	r0, r1
    1c4c:	bx	lr

00001c50 <Mat_int16Swap>:
    1c50:	ldrh	r1, [r0]
    1c54:	rev16	r2, r1
    1c58:	strh	r2, [r0]
    1c5c:	revsh	r0, r1
    1c60:	bx	lr

00001c64 <Mat_uint16Swap>:
    1c64:	ldrh	r1, [r0]
    1c68:	rev16	r2, r1
    1c6c:	strh	r2, [r0]
    1c70:	rev	r0, r1
    1c74:	lsr	r0, r0, #16
    1c78:	bx	lr

00001c7c <Mat_floatSwap>:
    1c7c:	ldr	r1, [r0]
    1c80:	uxtb	r2, r1
    1c84:	eor	r2, r2, r1, lsr #24
    1c88:	and	r3, r1, #-16777216	; 0xff000000
    1c8c:	eor	r3, r3, r2, lsl #24
    1c90:	eor	ip, r2, r3, lsr #24
    1c94:	and	r2, r1, #16711680	; 0xff0000
    1c98:	eor	r1, r1, r1, lsr #8
    1c9c:	and	r1, r1, #65280	; 0xff00
    1ca0:	eor	r2, r2, r1, lsl #8
    1ca4:	orr	r3, r2, r3
    1ca8:	orr	r3, r3, ip
    1cac:	eor	r1, r1, r2, lsr #8
    1cb0:	orr	r1, r3, r1
    1cb4:	str	r1, [r0]
    1cb8:	vmov	s0, r1
    1cbc:	bx	lr

00001cc0 <Mat_doubleSwap>:
    1cc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1cc4:	add	fp, sp, #24
    1cc8:	ldr	r4, [r0]
    1ccc:	ldr	r3, [r0, #4]
    1cd0:	uxtb	r1, r4
    1cd4:	eor	ip, r1, r3, lsr #24
    1cd8:	and	r1, r3, #-16777216	; 0xff000000
    1cdc:	eor	lr, r1, ip, lsl #24
    1ce0:	eor	ip, ip, lr, lsr #24
    1ce4:	mov	r2, r4
    1ce8:	bfc	r2, #0, #16
    1cec:	orr	r2, r2, ip
    1cf0:	eor	r1, r4, r3, lsr #8
    1cf4:	and	r1, r1, #65280	; 0xff00
    1cf8:	orr	r1, r2, r1
    1cfc:	eor	r2, r3, r1, lsl #8
    1d00:	eor	r1, r1, r2, lsr #8
    1d04:	and	r1, r1, #65280	; 0xff00
    1d08:	lsr	r5, r4, #24
    1d0c:	orr	r5, r5, r3, lsl #8
    1d10:	eor	r5, r5, r4
    1d14:	eor	r6, r3, r3, lsr #24
    1d18:	lsl	r6, r6, #24
    1d1c:	orr	r6, r6, r5, lsr #8
    1d20:	eor	r6, r6, r3
    1d24:	and	r7, r6, #65280	; 0xff00
    1d28:	orr	r7, r7, lr
    1d2c:	and	r2, r2, #16711680	; 0xff0000
    1d30:	orr	r2, r7, r2
    1d34:	lsr	r7, r4, #8
    1d38:	orr	r7, r7, r3, lsl #24
    1d3c:	eor	r7, r7, r4
    1d40:	eor	r4, r3, r3, lsr #8
    1d44:	lsl	r4, r4, #8
    1d48:	orr	r4, r4, r7, lsr #24
    1d4c:	eor	r3, r4, r3
    1d50:	uxtb	r4, r3
    1d54:	orr	r9, r4, r2
    1d58:	orr	r1, ip, r1
    1d5c:	eor	r2, r7, r3, lsl #24
    1d60:	and	r2, r2, #-16777216	; 0xff000000
    1d64:	orr	r1, r2, r1
    1d68:	eor	r2, r5, r6, lsl #8
    1d6c:	and	r2, r2, #16711680	; 0xff0000
    1d70:	orr	r8, r1, r2
    1d74:	strd	r8, [r0]
    1d78:	vmov	d0, r8, r9
    1d7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00001d80 <strdup_vprintf>:
    1d80:	push	{r4, r5, r6, sl, fp, lr}
    1d84:	add	fp, sp, #16
    1d88:	sub	sp, sp, #8
    1d8c:	mov	r4, r0
    1d90:	str	r1, [sp, #4]
    1d94:	ldr	r3, [sp, #4]
    1d98:	str	r3, [sp]
    1d9c:	mov	r0, #0
    1da0:	mov	r1, #0
    1da4:	mov	r2, r4
    1da8:	bl	1a20 <vsnprintf@plt>
    1dac:	mov	r6, r0
    1db0:	add	r0, r0, #2
    1db4:	bl	18e8 <malloc@plt>
    1db8:	mov	r5, r0
    1dbc:	cmp	r0, #0
    1dc0:	beq	1dd8 <strdup_vprintf+0x58>
    1dc4:	add	r1, r6, #1
    1dc8:	ldr	r3, [sp, #4]
    1dcc:	mov	r0, r5
    1dd0:	mov	r2, r4
    1dd4:	bl	1a20 <vsnprintf@plt>
    1dd8:	mov	r0, r5
    1ddc:	sub	sp, fp, #16
    1de0:	pop	{r4, r5, r6, sl, fp, pc}

00001de4 <strdup_printf>:
    1de4:	sub	sp, sp, #12
    1de8:	push	{fp, lr}
    1dec:	mov	fp, sp
    1df0:	sub	sp, sp, #4
    1df4:	add	ip, fp, #8
    1df8:	stm	ip, {r1, r2, r3}
    1dfc:	add	r1, fp, #8
    1e00:	str	r1, [sp]
    1e04:	bl	1d80 <strdup_vprintf>
    1e08:	mov	sp, fp
    1e0c:	pop	{fp, lr}
    1e10:	add	sp, sp, #12
    1e14:	bx	lr

00001e18 <Mat_SetVerbose>:
    1e18:	ldr	r2, [pc, #24]	; 1e38 <Mat_SetVerbose+0x20>
    1e1c:	add	r2, pc, r2
    1e20:	str	r1, [r2]
    1e24:	ldr	r1, [pc, #16]	; 1e3c <Mat_SetVerbose+0x24>
    1e28:	add	r1, pc, r1
    1e2c:	str	r0, [r1]
    1e30:	mov	r0, #0
    1e34:	bx	lr
    1e38:	.word	0x00059304
    1e3c:	.word	0x000592f4

00001e40 <Mat_SetDebug>:
    1e40:	ldr	r1, [pc, #12]	; 1e54 <Mat_SetDebug+0x14>
    1e44:	add	r1, pc, r1
    1e48:	str	r0, [r1]
    1e4c:	mov	r0, #0
    1e50:	bx	lr
    1e54:	.word	0x000592e0

00001e58 <Mat_Message>:
    1e58:	sub	sp, sp, #12
    1e5c:	push	{fp, lr}
    1e60:	mov	fp, sp
    1e64:	sub	sp, sp, #4
    1e68:	mov	ip, r0
    1e6c:	add	r0, fp, #8
    1e70:	stm	r0, {r1, r2, r3}
    1e74:	ldr	r0, [pc, #64]	; 1ebc <Mat_Message+0x64>
    1e78:	ldr	r0, [pc, r0]
    1e7c:	cmp	r0, #0
    1e80:	bne	1ea8 <Mat_Message+0x50>
    1e84:	ldr	r0, [pc, #52]	; 1ec0 <Mat_Message+0x68>
    1e88:	ldr	r0, [pc, r0]
    1e8c:	cmp	r0, #0
    1e90:	beq	1ea8 <Mat_Message+0x50>
    1e94:	add	r2, fp, #8
    1e98:	str	r2, [sp]
    1e9c:	mov	r0, #8
    1ea0:	mov	r1, ip
    1ea4:	bl	1ec4 <mat_log>
    1ea8:	mov	r0, #0
    1eac:	mov	sp, fp
    1eb0:	pop	{fp, lr}
    1eb4:	add	sp, sp, #12
    1eb8:	bx	lr
    1ebc:	.word	0x000592a8
    1ec0:	.word	0x000592a0

00001ec4 <mat_log>:
    1ec4:	push	{r4, r5, fp, lr}
    1ec8:	add	fp, sp, #8
    1ecc:	mov	r4, r0
    1ed0:	ldr	r0, [pc, #56]	; 1f10 <mat_log+0x4c>
    1ed4:	ldr	r0, [pc, r0]
    1ed8:	cmp	r0, #0
    1edc:	popeq	{r4, r5, fp, pc}
    1ee0:	mov	r0, r1
    1ee4:	mov	r1, r2
    1ee8:	bl	1d80 <strdup_vprintf>
    1eec:	mov	r5, r0
    1ef0:	ldr	r2, [pc, #28]	; 1f14 <mat_log+0x50>
    1ef4:	ldr	r2, [pc, r2]
    1ef8:	mov	r0, r4
    1efc:	mov	r1, r5
    1f00:	blx	r2
    1f04:	mov	r0, r5
    1f08:	pop	{r4, r5, fp, lr}
    1f0c:	b	181c <free@plt>
    1f10:	.word	0x00059254
    1f14:	.word	0x00059234

00001f18 <Mat_DebugMessage>:
    1f18:	sub	sp, sp, #8
    1f1c:	push	{fp, lr}
    1f20:	mov	fp, sp
    1f24:	sub	sp, sp, #8
    1f28:	str	r3, [fp, #12]
    1f2c:	str	r2, [fp, #8]
    1f30:	ldr	r2, [pc, #60]	; 1f74 <Mat_DebugMessage+0x5c>
    1f34:	ldr	r2, [pc, r2]
    1f38:	cmp	r2, #0
    1f3c:	bne	1f60 <Mat_DebugMessage+0x48>
    1f40:	ldr	r2, [pc, #48]	; 1f78 <Mat_DebugMessage+0x60>
    1f44:	ldr	r2, [pc, r2]
    1f48:	cmp	r2, r0
    1f4c:	blt	1f60 <Mat_DebugMessage+0x48>
    1f50:	add	r2, fp, #8
    1f54:	str	r2, [sp, #4]
    1f58:	mov	r0, #16
    1f5c:	bl	1ec4 <mat_log>
    1f60:	mov	r0, #0
    1f64:	mov	sp, fp
    1f68:	pop	{fp, lr}
    1f6c:	add	sp, sp, #8
    1f70:	bx	lr
    1f74:	.word	0x000591ec
    1f78:	.word	0x000591e0

00001f7c <Mat_VerbMessage>:
    1f7c:	sub	sp, sp, #8
    1f80:	push	{fp, lr}
    1f84:	mov	fp, sp
    1f88:	sub	sp, sp, #8
    1f8c:	str	r3, [fp, #12]
    1f90:	str	r2, [fp, #8]
    1f94:	ldr	r2, [pc, #60]	; 1fd8 <Mat_VerbMessage+0x5c>
    1f98:	ldr	r2, [pc, r2]
    1f9c:	cmp	r2, #0
    1fa0:	bne	1fc4 <Mat_VerbMessage+0x48>
    1fa4:	ldr	r2, [pc, #48]	; 1fdc <Mat_VerbMessage+0x60>
    1fa8:	ldr	r2, [pc, r2]
    1fac:	cmp	r2, r0
    1fb0:	blt	1fc4 <Mat_VerbMessage+0x48>
    1fb4:	add	r2, fp, #8
    1fb8:	str	r2, [sp, #4]
    1fbc:	mov	r0, #8
    1fc0:	bl	1ec4 <mat_log>
    1fc4:	mov	r0, #0
    1fc8:	mov	sp, fp
    1fcc:	pop	{fp, lr}
    1fd0:	add	sp, sp, #8
    1fd4:	bx	lr
    1fd8:	.word	0x00059188
    1fdc:	.word	0x00059174

00001fe0 <Mat_Critical>:
    1fe0:	sub	sp, sp, #12
    1fe4:	push	{fp, lr}
    1fe8:	mov	fp, sp
    1fec:	sub	sp, sp, #4
    1ff0:	mov	ip, r0
    1ff4:	add	r0, fp, #8
    1ff8:	stm	r0, {r1, r2, r3}
    1ffc:	add	r2, fp, #8
    2000:	str	r2, [sp]
    2004:	mov	r0, #2
    2008:	mov	r1, ip
    200c:	bl	1ec4 <mat_log>
    2010:	mov	sp, fp
    2014:	pop	{fp, lr}
    2018:	add	sp, sp, #12
    201c:	bx	lr

00002020 <Mat_Error>:
    2020:	sub	sp, sp, #12
    2024:	push	{fp, lr}
    2028:	mov	fp, sp
    202c:	sub	sp, sp, #4
    2030:	mov	ip, r0
    2034:	add	r0, fp, #8
    2038:	stm	r0, {r1, r2, r3}
    203c:	add	r2, fp, #8
    2040:	str	r2, [sp]
    2044:	mov	r0, #1
    2048:	mov	r1, ip
    204c:	bl	1ec4 <mat_log>
    2050:	bl	1a74 <abort@plt>

00002054 <Mat_Help>:
    2054:	push	{fp, lr}
    2058:	mov	fp, sp
    205c:	mov	r1, r0
    2060:	ldr	r0, [r0]
    2064:	cmp	r0, #0
    2068:	beq	2080 <Mat_Help+0x2c>
    206c:	add	r4, r1, #4
    2070:	bl	18dc <puts@plt>
    2074:	ldr	r0, [r4], #4
    2078:	cmp	r0, #0
    207c:	bne	2070 <Mat_Help+0x1c>
    2080:	mov	r0, #0
    2084:	bl	1918 <exit@plt>

00002088 <Mat_LogClose>:
    2088:	ldr	r0, [pc, #16]	; 20a0 <Mat_LogClose+0x18>
    208c:	add	r0, pc, r0
    2090:	mov	r1, #0
    2094:	str	r1, [r0]
    2098:	mov	r0, #1
    209c:	bx	lr
    20a0:	.word	0x0005909c

000020a4 <Mat_LogInit>:
    20a4:	ldr	r0, [pc, #48]	; 20dc <Mat_LogInit+0x38>
    20a8:	add	r0, pc, r0
    20ac:	mov	r1, #0
    20b0:	str	r1, [r0]
    20b4:	ldr	r0, [pc, #36]	; 20e0 <Mat_LogInit+0x3c>
    20b8:	add	r0, pc, r0
    20bc:	ldr	r2, [pc, #32]	; 20e4 <Mat_LogInit+0x40>
    20c0:	add	r2, pc, r2
    20c4:	str	r2, [r0]
    20c8:	ldr	r0, [pc, #24]	; 20e8 <Mat_LogInit+0x44>
    20cc:	add	r0, pc, r0
    20d0:	str	r1, [r0]
    20d4:	mov	r0, #0
    20d8:	bx	lr
    20dc:	.word	0x00059074
    20e0:	.word	0x00059070
    20e4:	.word	0x00000024
    20e8:	.word	0x00059054

000020ec <mat_logfunc>:
    20ec:	push	{r4, sl, fp, lr}
    20f0:	add	fp, sp, #8
    20f4:	mov	r3, r1
    20f8:	and	r1, r0, #2
    20fc:	ldr	r2, [pc, #336]	; 2254 <mat_logfunc+0x168>
    2100:	ldr	r2, [pc, r2]
    2104:	cmp	r2, #0
    2108:	beq	212c <mat_logfunc+0x40>
    210c:	cmp	r1, #0
    2110:	beq	214c <mat_logfunc+0x60>
    2114:	ldr	r4, [pc, #316]	; 2258 <mat_logfunc+0x16c>
    2118:	ldr	r4, [pc, r4]
    211c:	ldr	r0, [r4]
    2120:	ldr	r1, [pc, #308]	; 225c <mat_logfunc+0x170>
    2124:	add	r1, pc, r1
    2128:	b	21c8 <mat_logfunc+0xdc>
    212c:	cmp	r1, #0
    2130:	beq	217c <mat_logfunc+0x90>
    2134:	ldr	r4, [pc, #324]	; 2280 <mat_logfunc+0x194>
    2138:	ldr	r4, [pc, r4]
    213c:	ldr	r0, [r4]
    2140:	ldr	r1, [pc, #316]	; 2284 <mat_logfunc+0x198>
    2144:	add	r1, pc, r1
    2148:	b	21fc <mat_logfunc+0x110>
    214c:	tst	r0, #1
    2150:	bne	2210 <mat_logfunc+0x124>
    2154:	tst	r0, #4
    2158:	bne	21b4 <mat_logfunc+0xc8>
    215c:	tst	r0, #16
    2160:	beq	2194 <mat_logfunc+0xa8>
    2164:	ldr	r4, [pc, #260]	; 2270 <mat_logfunc+0x184>
    2168:	ldr	r4, [pc, r4]
    216c:	ldr	r0, [r4]
    2170:	ldr	r1, [pc, #252]	; 2274 <mat_logfunc+0x188>
    2174:	add	r1, pc, r1
    2178:	b	21c8 <mat_logfunc+0xdc>
    217c:	tst	r0, #1
    2180:	bne	222c <mat_logfunc+0x140>
    2184:	tst	r0, #4
    2188:	bne	21d0 <mat_logfunc+0xe4>
    218c:	tst	r0, #16
    2190:	bne	21e8 <mat_logfunc+0xfc>
    2194:	tst	r0, #8
    2198:	popeq	{r4, sl, fp, pc}
    219c:	ldr	r4, [pc, #212]	; 2278 <mat_logfunc+0x18c>
    21a0:	ldr	r4, [pc, r4]
    21a4:	ldr	r0, [r4]
    21a8:	ldr	r1, [pc, #204]	; 227c <mat_logfunc+0x190>
    21ac:	add	r1, pc, r1
    21b0:	b	21fc <mat_logfunc+0x110>
    21b4:	ldr	r4, [pc, #172]	; 2268 <mat_logfunc+0x17c>
    21b8:	ldr	r4, [pc, r4]
    21bc:	ldr	r0, [r4]
    21c0:	ldr	r1, [pc, #164]	; 226c <mat_logfunc+0x180>
    21c4:	add	r1, pc, r1
    21c8:	bl	1978 <fprintf@plt>
    21cc:	b	2204 <mat_logfunc+0x118>
    21d0:	ldr	r4, [pc, #184]	; 2290 <mat_logfunc+0x1a4>
    21d4:	ldr	r4, [pc, r4]
    21d8:	ldr	r0, [r4]
    21dc:	ldr	r1, [pc, #176]	; 2294 <mat_logfunc+0x1a8>
    21e0:	add	r1, pc, r1
    21e4:	b	21fc <mat_logfunc+0x110>
    21e8:	ldr	r4, [pc, #168]	; 2298 <mat_logfunc+0x1ac>
    21ec:	ldr	r4, [pc, r4]
    21f0:	ldr	r0, [r4]
    21f4:	ldr	r1, [pc, #160]	; 229c <mat_logfunc+0x1b0>
    21f8:	add	r1, pc, r1
    21fc:	mov	r2, r3
    2200:	bl	1978 <fprintf@plt>
    2204:	ldr	r0, [r4]
    2208:	pop	{r4, sl, fp, lr}
    220c:	b	1810 <fflush@plt>
    2210:	ldr	r4, [pc, #72]	; 2260 <mat_logfunc+0x174>
    2214:	ldr	r4, [pc, r4]
    2218:	ldr	r0, [r4]
    221c:	ldr	r1, [pc, #64]	; 2264 <mat_logfunc+0x178>
    2220:	add	r1, pc, r1
    2224:	bl	1978 <fprintf@plt>
    2228:	b	2248 <mat_logfunc+0x15c>
    222c:	ldr	r4, [pc, #84]	; 2288 <mat_logfunc+0x19c>
    2230:	ldr	r4, [pc, r4]
    2234:	ldr	r0, [r4]
    2238:	ldr	r1, [pc, #76]	; 228c <mat_logfunc+0x1a0>
    223c:	add	r1, pc, r1
    2240:	mov	r2, r3
    2244:	bl	1978 <fprintf@plt>
    2248:	ldr	r0, [r4]
    224c:	bl	1810 <fflush@plt>
    2250:	bl	1a74 <abort@plt>
    2254:	.word	0x0005902c
    2258:	.word	0x00058fec
    225c:	.word	0x00046dc4
    2260:	.word	0x00058ef0
    2264:	.word	0x00046cc8
    2268:	.word	0x00058f4c
    226c:	.word	0x00046d30
    2270:	.word	0x00058f9c
    2274:	.word	0x00046d8c
    2278:	.word	0x00058f6c
    227c:	.word	0x00046d7a
    2280:	.word	0x00058fcc
    2284:	.word	0x00046dc8
    2288:	.word	0x00058ed4
    228c:	.word	0x00046cd0
    2290:	.word	0x00058f30
    2294:	.word	0x00046d36
    2298:	.word	0x00058f18
    229c:	.word	0x00046d28

000022a0 <Mat_LogInitFunc>:
    22a0:	ldr	r2, [pc, #52]	; 22dc <Mat_LogInitFunc+0x3c>
    22a4:	add	r2, pc, r2
    22a8:	str	r0, [r2]
    22ac:	ldr	r0, [pc, #44]	; 22e0 <Mat_LogInitFunc+0x40>
    22b0:	add	r0, pc, r0
    22b4:	str	r1, [r0]
    22b8:	ldr	r0, [pc, #36]	; 22e4 <Mat_LogInitFunc+0x44>
    22bc:	add	r0, pc, r0
    22c0:	mov	r1, #0
    22c4:	str	r1, [r0]
    22c8:	ldr	r0, [pc, #24]	; 22e8 <Mat_LogInitFunc+0x48>
    22cc:	add	r0, pc, r0
    22d0:	str	r1, [r0]
    22d4:	mov	r0, #0
    22d8:	bx	lr
    22dc:	.word	0x00058e88
    22e0:	.word	0x00058e78
    22e4:	.word	0x00058e60
    22e8:	.word	0x00058e54

000022ec <Mat_Warning>:
    22ec:	sub	sp, sp, #12
    22f0:	push	{fp, lr}
    22f4:	mov	fp, sp
    22f8:	sub	sp, sp, #4
    22fc:	mov	ip, r0
    2300:	add	r0, fp, #8
    2304:	stm	r0, {r1, r2, r3}
    2308:	add	r2, fp, #8
    230c:	str	r2, [sp]
    2310:	mov	r0, #4
    2314:	mov	r1, ip
    2318:	bl	1ec4 <mat_log>
    231c:	mov	sp, fp
    2320:	pop	{fp, lr}
    2324:	add	sp, sp, #12
    2328:	bx	lr

0000232c <Mat_SizeOf>:
    232c:	sub	r0, r0, #1
    2330:	cmp	r0, #17
    2334:	movhi	r0, #0
    2338:	ldrls	r1, [pc, #8]	; 2348 <Mat_SizeOf+0x1c>
    233c:	addls	r1, pc, r1
    2340:	ldrls	r0, [r1, r0, lsl #2]
    2344:	bx	lr
    2348:	.word	0x00046bfc

0000234c <InflateSkip>:
    234c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2350:	add	fp, sp, #28
    2354:	sub	sp, sp, #4
    2358:	sub	sp, sp, #1024	; 0x400
    235c:	cmp	r2, #1
    2360:	blt	23f8 <InflateSkip+0xac>
    2364:	mov	r4, r2
    2368:	mov	r5, r1
    236c:	mov	r8, r0
    2370:	cmp	r2, #512	; 0x200
    2374:	mov	r6, r2
    2378:	movge	r6, #512	; 0x200
    237c:	ldr	r0, [r1, #4]
    2380:	mov	r9, #0
    2384:	cmp	r0, #0
    2388:	bne	23b0 <InflateSkip+0x64>
    238c:	add	r0, sp, #512	; 0x200
    2390:	str	r0, [r5]
    2394:	ldr	r3, [r8]
    2398:	mov	r1, #1
    239c:	mov	r2, r6
    23a0:	bl	18d0 <fread@plt>
    23a4:	ldr	r1, [r5, #4]
    23a8:	add	r9, r1, r0
    23ac:	str	r9, [r5, #4]
    23b0:	mov	sl, sp
    23b4:	str	sl, [r5, #12]
    23b8:	str	r6, [r5, #16]
    23bc:	mov	r0, r5
    23c0:	mov	r1, #3
    23c4:	bl	1804 <inflate@plt>
    23c8:	cmp	r0, #0
    23cc:	beq	2400 <InflateSkip+0xb4>
    23d0:	cmp	r0, #1
    23d4:	beq	24e8 <InflateSkip+0x19c>
    23d8:	cmp	r0, #2
    23dc:	mvneq	r0, #2
    23e0:	bl	18a0 <zError@plt>
    23e4:	mov	r1, r0
    23e8:	ldr	r0, [pc, #260]	; 24f4 <InflateSkip+0x1a8>
    23ec:	add	r0, pc, r0
    23f0:	bl	19cc <Mat_Critical@plt>
    23f4:	b	24e8 <InflateSkip+0x19c>
    23f8:	mov	r9, #0
    23fc:	b	24e8 <InflateSkip+0x19c>
    2400:	ldr	r0, [r5, #16]
    2404:	cmp	r0, #0
    2408:	beq	2420 <InflateSkip+0xd4>
    240c:	mov	r7, r6
    2410:	mov	r6, #0
    2414:	cmp	r6, r4
    2418:	blt	243c <InflateSkip+0xf0>
    241c:	b	24bc <InflateSkip+0x170>
    2420:	sub	r7, r4, r6
    2424:	cmp	r7, #512	; 0x200
    2428:	movge	r7, #512	; 0x200
    242c:	str	sl, [r5, #12]
    2430:	str	r7, [r5, #16]
    2434:	cmp	r6, r4
    2438:	bge	24bc <InflateSkip+0x170>
    243c:	ldr	r0, [r5, #4]
    2440:	cmp	r0, #0
    2444:	bne	2470 <InflateSkip+0x124>
    2448:	add	r0, sp, #512	; 0x200
    244c:	str	r0, [r5]
    2450:	ldr	r3, [r8]
    2454:	mov	r1, #1
    2458:	mov	r2, r7
    245c:	bl	18d0 <fread@plt>
    2460:	ldr	r1, [r5, #4]
    2464:	add	r0, r1, r0
    2468:	str	r0, [r5, #4]
    246c:	add	r9, r0, r9
    2470:	mov	r0, r5
    2474:	mov	r1, #3
    2478:	bl	1804 <inflate@plt>
    247c:	cmp	r0, #0
    2480:	bne	2498 <InflateSkip+0x14c>
    2484:	ldr	r0, [r5, #16]
    2488:	cmp	r0, #0
    248c:	bne	2434 <InflateSkip+0xe8>
    2490:	add	r6, r6, r7
    2494:	b	2420 <InflateSkip+0xd4>
    2498:	cmp	r0, #1
    249c:	beq	24bc <InflateSkip+0x170>
    24a0:	cmp	r0, #2
    24a4:	mvneq	r0, #2
    24a8:	bl	18a0 <zError@plt>
    24ac:	mov	r1, r0
    24b0:	ldr	r0, [pc, #64]	; 24f8 <InflateSkip+0x1ac>
    24b4:	add	r0, pc, r0
    24b8:	bl	19cc <Mat_Critical@plt>
    24bc:	ldr	r1, [r5, #4]
    24c0:	cmp	r1, #0
    24c4:	beq	24e8 <InflateSkip+0x19c>
    24c8:	ldr	r0, [r8]
    24cc:	rsb	r1, r1, #0
    24d0:	mov	r2, #1
    24d4:	bl	1a68 <fseek@plt>
    24d8:	ldr	r0, [r5, #4]
    24dc:	mov	r1, #0
    24e0:	str	r1, [r5, #4]
    24e4:	sub	r9, r9, r0
    24e8:	mov	r0, r9
    24ec:	sub	sp, fp, #28
    24f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    24f4:	.word	0x00046b94
    24f8:	.word	0x00046acc

000024fc <InflateSkip2>:
    24fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2500:	add	fp, sp, #28
    2504:	sub	sp, sp, #68	; 0x44
    2508:	mov	r7, r2
    250c:	mov	r5, r1
    2510:	mov	r8, r0
    2514:	ldr	r0, [r1, #52]	; 0x34
    2518:	ldr	r1, [r0, #12]
    251c:	ldr	r0, [r1, #4]
    2520:	mov	r4, #0
    2524:	cmp	r0, #0
    2528:	bne	254c <InflateSkip2+0x50>
    252c:	add	r0, sp, #36	; 0x24
    2530:	mov	r2, #1
    2534:	stm	r1, {r0, r2}
    2538:	ldr	r3, [r8]
    253c:	mov	r1, #1
    2540:	mov	r2, #1
    2544:	bl	18d0 <fread@plt>
    2548:	mov	r4, r0
    254c:	ldr	r0, [r5, #52]	; 0x34
    2550:	ldr	r0, [r0, #12]
    2554:	add	r6, sp, #4
    2558:	mov	r1, #1
    255c:	str	r6, [r0, #12]
    2560:	str	r1, [r0, #16]
    2564:	mov	r1, #0
    2568:	bl	1804 <inflate@plt>
    256c:	cmp	r0, #0
    2570:	beq	25a4 <InflateSkip2+0xa8>
    2574:	ldr	r5, [r5, #36]	; 0x24
    2578:	cmp	r0, #2
    257c:	mvneq	r0, #2
    2580:	bl	18a0 <zError@plt>
    2584:	mov	r2, r0
    2588:	ldr	r0, [pc, #280]	; 26a8 <InflateSkip2+0x1ac>
    258c:	add	r0, pc, r0
    2590:	mov	r1, r5
    2594:	bl	19cc <Mat_Critical@plt>
    2598:	mov	r0, r4
    259c:	sub	sp, fp, #28
    25a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    25a4:	ldr	r0, [r5, #52]	; 0x34
    25a8:	ldr	r0, [r0, #12]
    25ac:	ldr	r1, [r0, #16]
    25b0:	cmp	r1, #0
    25b4:	moveq	r1, #1
    25b8:	streq	r6, [r0, #12]
    25bc:	streq	r1, [r0, #16]
    25c0:	ldr	r0, [r5, #52]	; 0x34
    25c4:	ldr	r0, [r0, #12]
    25c8:	mov	r2, r0
    25cc:	ldr	r3, [r2, #4]!
    25d0:	cmp	r3, #0
    25d4:	mov	r1, r3
    25d8:	movwne	r1, #1
    25dc:	cmp	r7, #1
    25e0:	blt	2674 <InflateSkip2+0x178>
    25e4:	mov	r6, #0
    25e8:	mov	r9, #1
    25ec:	add	sl, sp, #36	; 0x24
    25f0:	tst	r1, #1
    25f4:	bne	261c <InflateSkip2+0x120>
    25f8:	str	r9, [r2]
    25fc:	str	sl, [r0]
    2600:	ldr	r3, [r8]
    2604:	mov	r0, sl
    2608:	mov	r1, #1
    260c:	mov	r2, #1
    2610:	bl	18d0 <fread@plt>
    2614:	add	r4, r0, r4
    2618:	add	r6, r6, #1
    261c:	ldr	r0, [r5, #52]	; 0x34
    2620:	ldr	r0, [r0, #12]
    2624:	mov	r1, #0
    2628:	bl	1804 <inflate@plt>
    262c:	cmp	r0, #0
    2630:	bne	2574 <InflateSkip2+0x78>
    2634:	ldr	r0, [r5, #52]	; 0x34
    2638:	ldr	r0, [r0, #12]
    263c:	ldr	r1, [r0, #16]
    2640:	cmp	r1, #0
    2644:	addeq	r1, sp, #4
    2648:	streq	r1, [r0, #12]
    264c:	streq	r9, [r0, #16]
    2650:	ldr	r0, [r5, #52]	; 0x34
    2654:	ldr	r0, [r0, #12]
    2658:	mov	r2, r0
    265c:	ldr	r3, [r2, #4]!
    2660:	cmp	r3, #0
    2664:	mov	r1, r3
    2668:	movwne	r1, #1
    266c:	cmp	r6, r7
    2670:	blt	25f0 <InflateSkip2+0xf4>
    2674:	cmp	r1, #0
    2678:	beq	2598 <InflateSkip2+0x9c>
    267c:	ldr	r0, [r8]
    2680:	rsb	r1, r3, #0
    2684:	mov	r2, #1
    2688:	bl	1a68 <fseek@plt>
    268c:	ldr	r0, [r5, #52]	; 0x34
    2690:	ldr	r0, [r0, #12]
    2694:	ldr	r1, [r0, #4]
    2698:	mov	r2, #0
    269c:	str	r2, [r0, #4]
    26a0:	sub	r4, r4, r1
    26a4:	b	2598 <InflateSkip2+0x9c>
    26a8:	.word	0x00046a15

000026ac <InflateSkipData>:
    26ac:	push	{r4, r5, fp, lr}
    26b0:	add	fp, sp, #8
    26b4:	mov	r4, r3
    26b8:	mov	r3, r0
    26bc:	mov	r0, #0
    26c0:	cmp	r3, #0
    26c4:	cmpne	r1, #0
    26c8:	bne	26d0 <InflateSkipData+0x24>
    26cc:	pop	{r4, r5, fp, pc}
    26d0:	cmp	r4, #1
    26d4:	blt	26cc <InflateSkipData+0x20>
    26d8:	sub	r2, r2, #1
    26dc:	cmp	r2, #12
    26e0:	bhi	26cc <InflateSkipData+0x20>
    26e4:	uxth	ip, r2
    26e8:	movw	lr, #6527	; 0x197f
    26ec:	mov	r5, #1
    26f0:	tst	r5, lr, lsr ip
    26f4:	popeq	{r4, r5, fp, pc}
    26f8:	ldr	r0, [pc, #24]	; 2718 <InflateSkipData+0x6c>
    26fc:	add	r0, pc, r0
    2700:	ldr	r0, [r0, r2, lsl #2]
    2704:	mul	r2, r0, r4
    2708:	mov	r0, r3
    270c:	bl	234c <InflateSkip>
    2710:	mov	r0, r4
    2714:	pop	{r4, r5, fp, pc}
    2718:	.word	0x00046adc

0000271c <InflateVarTag>:
    271c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2720:	add	fp, sp, #24
    2724:	sub	sp, sp, #32
    2728:	cmp	r2, #0
    272c:	beq	27b8 <InflateVarTag+0x9c>
    2730:	mov	r7, r2
    2734:	mov	r5, r1
    2738:	mov	r8, r0
    273c:	ldr	r0, [r1, #52]	; 0x34
    2740:	ldr	r1, [r0, #12]
    2744:	ldr	r0, [r1, #4]
    2748:	mov	r4, #0
    274c:	cmp	r0, #0
    2750:	bne	2774 <InflateVarTag+0x58>
    2754:	mov	r0, sp
    2758:	mov	r2, #1
    275c:	stm	r1, {r0, r2}
    2760:	ldr	r3, [r8]
    2764:	mov	r1, #1
    2768:	mov	r2, #1
    276c:	bl	18d0 <fread@plt>
    2770:	mov	r4, r0
    2774:	ldr	r0, [r5, #52]	; 0x34
    2778:	ldr	r0, [r0, #12]
    277c:	mov	r1, #8
    2780:	str	r7, [r0, #12]
    2784:	str	r1, [r0, #16]
    2788:	mov	r1, #0
    278c:	bl	1804 <inflate@plt>
    2790:	cmp	r0, #0
    2794:	beq	27c0 <InflateVarTag+0xa4>
    2798:	cmp	r0, #2
    279c:	mvneq	r0, #2
    27a0:	bl	18a0 <zError@plt>
    27a4:	mov	r1, r0
    27a8:	ldr	r0, [pc, #184]	; 2868 <InflateVarTag+0x14c>
    27ac:	add	r0, pc, r0
    27b0:	bl	19cc <Mat_Critical@plt>
    27b4:	b	285c <InflateVarTag+0x140>
    27b8:	mov	r4, #0
    27bc:	b	285c <InflateVarTag+0x140>
    27c0:	mov	r9, #1
    27c4:	mov	r7, sp
    27c8:	mov	r6, #1
    27cc:	ldr	r0, [r5, #52]	; 0x34
    27d0:	ldr	r0, [r0, #12]
    27d4:	ldr	r1, [r0, #4]
    27d8:	ldr	r2, [r0, #16]
    27dc:	cmp	r2, #0
    27e0:	beq	282c <InflateVarTag+0x110>
    27e4:	cmp	r6, #1
    27e8:	cmpeq	r1, #0
    27ec:	bne	282c <InflateVarTag+0x110>
    27f0:	stm	r0, {r7, r9}
    27f4:	ldr	r3, [r8]
    27f8:	mov	r0, r7
    27fc:	mov	r1, #1
    2800:	mov	r2, #1
    2804:	bl	18d0 <fread@plt>
    2808:	mov	r6, r0
    280c:	add	r4, r0, r4
    2810:	ldr	r0, [r5, #52]	; 0x34
    2814:	ldr	r0, [r0, #12]
    2818:	mov	r1, #0
    281c:	bl	1804 <inflate@plt>
    2820:	cmp	r0, #0
    2824:	beq	27cc <InflateVarTag+0xb0>
    2828:	b	2798 <InflateVarTag+0x7c>
    282c:	cmp	r1, #0
    2830:	beq	285c <InflateVarTag+0x140>
    2834:	ldr	r0, [r8]
    2838:	rsb	r1, r1, #0
    283c:	mov	r2, #1
    2840:	bl	1a68 <fseek@plt>
    2844:	ldr	r0, [r5, #52]	; 0x34
    2848:	ldr	r0, [r0, #12]
    284c:	ldr	r1, [r0, #4]
    2850:	mov	r2, #0
    2854:	str	r2, [r0, #4]
    2858:	sub	r4, r4, r1
    285c:	mov	r0, r4
    2860:	sub	sp, fp, #24
    2864:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2868:	.word	0x0004681c

0000286c <InflateArrayFlags>:
    286c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2870:	add	fp, sp, #24
    2874:	sub	sp, sp, #32
    2878:	cmp	r2, #0
    287c:	beq	2908 <InflateArrayFlags+0x9c>
    2880:	mov	r7, r2
    2884:	mov	r5, r1
    2888:	mov	r8, r0
    288c:	ldr	r0, [r1, #52]	; 0x34
    2890:	ldr	r1, [r0, #12]
    2894:	ldr	r0, [r1, #4]
    2898:	mov	r4, #0
    289c:	cmp	r0, #0
    28a0:	bne	28c4 <InflateArrayFlags+0x58>
    28a4:	mov	r0, sp
    28a8:	mov	r2, #1
    28ac:	stm	r1, {r0, r2}
    28b0:	ldr	r3, [r8]
    28b4:	mov	r1, #1
    28b8:	mov	r2, #1
    28bc:	bl	18d0 <fread@plt>
    28c0:	mov	r4, r0
    28c4:	ldr	r0, [r5, #52]	; 0x34
    28c8:	ldr	r0, [r0, #12]
    28cc:	mov	r1, #16
    28d0:	str	r7, [r0, #12]
    28d4:	str	r1, [r0, #16]
    28d8:	mov	r1, #0
    28dc:	bl	1804 <inflate@plt>
    28e0:	cmp	r0, #0
    28e4:	beq	2910 <InflateArrayFlags+0xa4>
    28e8:	cmp	r0, #2
    28ec:	mvneq	r0, #2
    28f0:	bl	18a0 <zError@plt>
    28f4:	mov	r1, r0
    28f8:	ldr	r0, [pc, #184]	; 29b8 <InflateArrayFlags+0x14c>
    28fc:	add	r0, pc, r0
    2900:	bl	19cc <Mat_Critical@plt>
    2904:	b	29ac <InflateArrayFlags+0x140>
    2908:	mov	r4, #0
    290c:	b	29ac <InflateArrayFlags+0x140>
    2910:	mov	r9, #1
    2914:	mov	r7, sp
    2918:	mov	r6, #1
    291c:	ldr	r0, [r5, #52]	; 0x34
    2920:	ldr	r0, [r0, #12]
    2924:	ldr	r1, [r0, #4]
    2928:	ldr	r2, [r0, #16]
    292c:	cmp	r2, #0
    2930:	beq	297c <InflateArrayFlags+0x110>
    2934:	cmp	r6, #1
    2938:	cmpeq	r1, #0
    293c:	bne	297c <InflateArrayFlags+0x110>
    2940:	stm	r0, {r7, r9}
    2944:	ldr	r3, [r8]
    2948:	mov	r0, r7
    294c:	mov	r1, #1
    2950:	mov	r2, #1
    2954:	bl	18d0 <fread@plt>
    2958:	mov	r6, r0
    295c:	add	r4, r0, r4
    2960:	ldr	r0, [r5, #52]	; 0x34
    2964:	ldr	r0, [r0, #12]
    2968:	mov	r1, #0
    296c:	bl	1804 <inflate@plt>
    2970:	cmp	r0, #0
    2974:	beq	291c <InflateArrayFlags+0xb0>
    2978:	b	28e8 <InflateArrayFlags+0x7c>
    297c:	cmp	r1, #0
    2980:	beq	29ac <InflateArrayFlags+0x140>
    2984:	ldr	r0, [r8]
    2988:	rsb	r1, r1, #0
    298c:	mov	r2, #1
    2990:	bl	1a68 <fseek@plt>
    2994:	ldr	r0, [r5, #52]	; 0x34
    2998:	ldr	r0, [r0, #12]
    299c:	ldr	r1, [r0, #4]
    29a0:	mov	r2, #0
    29a4:	str	r2, [r0, #4]
    29a8:	sub	r4, r4, r1
    29ac:	mov	r0, r4
    29b0:	sub	sp, fp, #24
    29b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    29b8:	.word	0x000466ef

000029bc <InflateRankDims>:
    29bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    29c0:	add	fp, sp, #28
    29c4:	sub	sp, sp, #44	; 0x2c
    29c8:	cmp	r2, #0
    29cc:	beq	2a5c <InflateRankDims+0xa0>
    29d0:	mov	r6, r3
    29d4:	mov	sl, r2
    29d8:	mov	r5, r1
    29dc:	mov	r9, r0
    29e0:	ldr	r0, [r1, #52]	; 0x34
    29e4:	ldr	r1, [r0, #12]
    29e8:	ldr	r0, [r1, #4]
    29ec:	mov	r4, #0
    29f0:	cmp	r0, #0
    29f4:	bne	2a18 <InflateRankDims+0x5c>
    29f8:	add	r0, sp, #12
    29fc:	mov	r2, #1
    2a00:	stm	r1, {r0, r2}
    2a04:	ldr	r3, [r9]
    2a08:	mov	r1, #1
    2a0c:	mov	r2, #1
    2a10:	bl	18d0 <fread@plt>
    2a14:	mov	r4, r0
    2a18:	ldr	r0, [r5, #52]	; 0x34
    2a1c:	ldr	r0, [r0, #12]
    2a20:	mov	r1, #8
    2a24:	str	sl, [r0, #12]
    2a28:	str	r1, [r0, #16]
    2a2c:	mov	r1, #0
    2a30:	bl	1804 <inflate@plt>
    2a34:	cmp	r0, #0
    2a38:	beq	2a64 <InflateRankDims+0xa8>
    2a3c:	cmp	r0, #2
    2a40:	mvneq	r0, #2
    2a44:	bl	18a0 <zError@plt>
    2a48:	mov	r1, r0
    2a4c:	ldr	r0, [pc, #584]	; 2c9c <InflateRankDims+0x2e0>
    2a50:	add	r0, pc, r0
    2a54:	bl	19cc <Mat_Critical@plt>
    2a58:	b	2bb8 <InflateRankDims+0x1fc>
    2a5c:	mov	r4, #0
    2a60:	b	2bb8 <InflateRankDims+0x1fc>
    2a64:	str	r6, [sp]
    2a68:	mov	r7, #1
    2a6c:	add	r8, sp, #12
    2a70:	mov	r6, #1
    2a74:	ldr	r0, [r5, #52]	; 0x34
    2a78:	ldr	r0, [r0, #12]
    2a7c:	ldr	r1, [r0, #16]
    2a80:	cmp	r1, #0
    2a84:	beq	2ad8 <InflateRankDims+0x11c>
    2a88:	cmp	r6, #1
    2a8c:	ldreq	r1, [r0, #4]
    2a90:	cmpeq	r1, #0
    2a94:	bne	2ad8 <InflateRankDims+0x11c>
    2a98:	str	r8, [r0]
    2a9c:	str	r7, [r0, #4]
    2aa0:	ldr	r3, [r9]
    2aa4:	mov	r0, r8
    2aa8:	mov	r1, #1
    2aac:	mov	r2, #1
    2ab0:	bl	18d0 <fread@plt>
    2ab4:	mov	r6, r0
    2ab8:	add	r4, r0, r4
    2abc:	ldr	r0, [r5, #52]	; 0x34
    2ac0:	ldr	r0, [r0, #12]
    2ac4:	mov	r1, #0
    2ac8:	bl	1804 <inflate@plt>
    2acc:	cmp	r0, #0
    2ad0:	beq	2a74 <InflateRankDims+0xb8>
    2ad4:	b	2a3c <InflateRankDims+0x80>
    2ad8:	ldm	sl, {r0, r1}
    2adc:	stmib	sp, {r0, r1}
    2ae0:	ldr	r0, [r9, #20]
    2ae4:	cmp	r0, #0
    2ae8:	beq	2b04 <InflateRankDims+0x148>
    2aec:	add	r0, sp, #4
    2af0:	add	r6, r0, #4
    2af4:	add	r0, sp, #4
    2af8:	bl	1c28 <Mat_int32Swap>
    2afc:	mov	r0, r6
    2b00:	bl	1c28 <Mat_int32Swap>
    2b04:	ldrh	r0, [sp, #4]
    2b08:	cmp	r0, #5
    2b0c:	bne	2bac <InflateRankDims+0x1f0>
    2b10:	ldr	r6, [sp, #8]
    2b14:	asr	r0, r6, #31
    2b18:	add	r0, r6, r0, lsr #29
    2b1c:	bic	r0, r0, #7
    2b20:	subs	r0, r6, r0
    2b24:	rsb	r0, r0, #8
    2b28:	addne	r6, r6, r0
    2b2c:	ldr	r0, [r5, #52]	; 0x34
    2b30:	ldr	r0, [r0, #12]
    2b34:	ldr	r1, [r0, #4]
    2b38:	cmp	r1, #0
    2b3c:	bne	2b64 <InflateRankDims+0x1a8>
    2b40:	mov	r1, #1
    2b44:	str	r8, [r0]
    2b48:	str	r1, [r0, #4]
    2b4c:	ldr	r3, [r9]
    2b50:	mov	r0, r8
    2b54:	mov	r1, #1
    2b58:	mov	r2, #1
    2b5c:	bl	18d0 <fread@plt>
    2b60:	add	r4, r0, r4
    2b64:	ldr	r0, [r5, #52]	; 0x34
    2b68:	ldr	r1, [r0, #12]
    2b6c:	str	r6, [r1, #16]
    2b70:	add	r0, r6, #2
    2b74:	lsl	r0, r0, #2
    2b78:	ldr	r2, [sp]
    2b7c:	cmp	r0, r2
    2b80:	bls	2bc4 <InflateRankDims+0x208>
    2b84:	mov	r0, r6
    2b88:	mov	r1, #4
    2b8c:	bl	17b0 <calloc@plt>
    2b90:	ldr	r1, [fp, #8]
    2b94:	str	r0, [r1]
    2b98:	cmp	r0, #0
    2b9c:	beq	2c84 <InflateRankDims+0x2c8>
    2ba0:	ldr	r1, [r5, #52]	; 0x34
    2ba4:	ldr	r1, [r1, #12]
    2ba8:	b	2bc8 <InflateRankDims+0x20c>
    2bac:	ldr	r0, [pc, #228]	; 2c98 <InflateRankDims+0x2dc>
    2bb0:	add	r0, pc, r0
    2bb4:	bl	19cc <Mat_Critical@plt>
    2bb8:	mov	r0, r4
    2bbc:	sub	sp, fp, #28
    2bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2bc4:	add	r0, sl, #8
    2bc8:	str	r0, [r1, #12]
    2bcc:	ldr	r0, [r5, #52]	; 0x34
    2bd0:	ldr	r0, [r0, #12]
    2bd4:	mov	r1, #0
    2bd8:	bl	1804 <inflate@plt>
    2bdc:	cmp	r0, #0
    2be0:	bne	2a3c <InflateRankDims+0x80>
    2be4:	mov	r6, #1
    2be8:	mov	r7, #1
    2bec:	ldr	r0, [r5, #52]	; 0x34
    2bf0:	ldr	r0, [r0, #12]
    2bf4:	ldr	r1, [r0, #4]
    2bf8:	ldr	r2, [r0, #16]
    2bfc:	cmp	r2, #0
    2c00:	beq	2c50 <InflateRankDims+0x294>
    2c04:	cmp	r7, #1
    2c08:	cmpeq	r1, #0
    2c0c:	bne	2c50 <InflateRankDims+0x294>
    2c10:	str	r8, [r0]
    2c14:	str	r6, [r0, #4]
    2c18:	ldr	r3, [r9]
    2c1c:	mov	r0, r8
    2c20:	mov	r1, #1
    2c24:	mov	r2, #1
    2c28:	bl	18d0 <fread@plt>
    2c2c:	mov	r7, r0
    2c30:	add	r4, r0, r4
    2c34:	ldr	r0, [r5, #52]	; 0x34
    2c38:	ldr	r0, [r0, #12]
    2c3c:	mov	r1, #0
    2c40:	bl	1804 <inflate@plt>
    2c44:	cmp	r0, #0
    2c48:	beq	2bec <InflateRankDims+0x230>
    2c4c:	b	2a3c <InflateRankDims+0x80>
    2c50:	cmp	r1, #0
    2c54:	beq	2bb8 <InflateRankDims+0x1fc>
    2c58:	ldr	r0, [r9]
    2c5c:	rsb	r1, r1, #0
    2c60:	mov	r2, #1
    2c64:	bl	1a68 <fseek@plt>
    2c68:	ldr	r0, [r5, #52]	; 0x34
    2c6c:	ldr	r0, [r0, #12]
    2c70:	ldr	r1, [r0, #4]
    2c74:	mov	r2, #0
    2c78:	str	r2, [r0, #4]
    2c7c:	sub	r4, r4, r1
    2c80:	b	2bb8 <InflateRankDims+0x1fc>
    2c84:	mov	r0, #0
    2c88:	str	r0, [sl, #4]
    2c8c:	ldr	r0, [pc, #12]	; 2ca0 <InflateRankDims+0x2e4>
    2c90:	add	r0, pc, r0
    2c94:	b	2bb4 <InflateRankDims+0x1f8>
    2c98:	.word	0x00046487
    2c9c:	.word	0x000465c2
    2ca0:	.word	0x000463e5

00002ca4 <InflateVarNameTag>:
    2ca4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2ca8:	add	fp, sp, #24
    2cac:	sub	sp, sp, #32
    2cb0:	cmp	r2, #0
    2cb4:	beq	2d40 <InflateVarNameTag+0x9c>
    2cb8:	mov	r7, r2
    2cbc:	mov	r5, r1
    2cc0:	mov	r8, r0
    2cc4:	ldr	r0, [r1, #52]	; 0x34
    2cc8:	ldr	r1, [r0, #12]
    2ccc:	ldr	r0, [r1, #4]
    2cd0:	mov	r4, #0
    2cd4:	cmp	r0, #0
    2cd8:	bne	2cfc <InflateVarNameTag+0x58>
    2cdc:	mov	r0, sp
    2ce0:	mov	r2, #1
    2ce4:	stm	r1, {r0, r2}
    2ce8:	ldr	r3, [r8]
    2cec:	mov	r1, #1
    2cf0:	mov	r2, #1
    2cf4:	bl	18d0 <fread@plt>
    2cf8:	mov	r4, r0
    2cfc:	ldr	r0, [r5, #52]	; 0x34
    2d00:	ldr	r0, [r0, #12]
    2d04:	mov	r1, #8
    2d08:	str	r7, [r0, #12]
    2d0c:	str	r1, [r0, #16]
    2d10:	mov	r1, #0
    2d14:	bl	1804 <inflate@plt>
    2d18:	cmp	r0, #0
    2d1c:	beq	2d48 <InflateVarNameTag+0xa4>
    2d20:	cmp	r0, #2
    2d24:	mvneq	r0, #2
    2d28:	bl	18a0 <zError@plt>
    2d2c:	mov	r1, r0
    2d30:	ldr	r0, [pc, #184]	; 2df0 <InflateVarNameTag+0x14c>
    2d34:	add	r0, pc, r0
    2d38:	bl	19cc <Mat_Critical@plt>
    2d3c:	b	2de4 <InflateVarNameTag+0x140>
    2d40:	mov	r4, #0
    2d44:	b	2de4 <InflateVarNameTag+0x140>
    2d48:	mov	r9, #1
    2d4c:	mov	r7, sp
    2d50:	mov	r6, #1
    2d54:	ldr	r0, [r5, #52]	; 0x34
    2d58:	ldr	r0, [r0, #12]
    2d5c:	ldr	r1, [r0, #4]
    2d60:	ldr	r2, [r0, #16]
    2d64:	cmp	r2, #0
    2d68:	beq	2db4 <InflateVarNameTag+0x110>
    2d6c:	cmp	r6, #1
    2d70:	cmpeq	r1, #0
    2d74:	bne	2db4 <InflateVarNameTag+0x110>
    2d78:	stm	r0, {r7, r9}
    2d7c:	ldr	r3, [r8]
    2d80:	mov	r0, r7
    2d84:	mov	r1, #1
    2d88:	mov	r2, #1
    2d8c:	bl	18d0 <fread@plt>
    2d90:	mov	r6, r0
    2d94:	add	r4, r0, r4
    2d98:	ldr	r0, [r5, #52]	; 0x34
    2d9c:	ldr	r0, [r0, #12]
    2da0:	mov	r1, #0
    2da4:	bl	1804 <inflate@plt>
    2da8:	cmp	r0, #0
    2dac:	beq	2d54 <InflateVarNameTag+0xb0>
    2db0:	b	2d20 <InflateVarNameTag+0x7c>
    2db4:	cmp	r1, #0
    2db8:	beq	2de4 <InflateVarNameTag+0x140>
    2dbc:	ldr	r0, [r8]
    2dc0:	rsb	r1, r1, #0
    2dc4:	mov	r2, #1
    2dc8:	bl	1a68 <fseek@plt>
    2dcc:	ldr	r0, [r5, #52]	; 0x34
    2dd0:	ldr	r0, [r0, #12]
    2dd4:	ldr	r1, [r0, #4]
    2dd8:	mov	r2, #0
    2ddc:	str	r2, [r0, #4]
    2de0:	sub	r4, r4, r1
    2de4:	mov	r0, r4
    2de8:	sub	sp, fp, #24
    2dec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2df0:	.word	0x00046362

00002df4 <InflateVarName>:
    2df4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2df8:	add	fp, sp, #24
    2dfc:	sub	sp, sp, #32
    2e00:	cmp	r2, #0
    2e04:	beq	2e90 <InflateVarName+0x9c>
    2e08:	mov	r8, r3
    2e0c:	mov	r7, r2
    2e10:	mov	r5, r1
    2e14:	mov	r9, r0
    2e18:	ldr	r0, [r1, #52]	; 0x34
    2e1c:	ldr	r1, [r0, #12]
    2e20:	ldr	r0, [r1, #4]
    2e24:	mov	r4, #0
    2e28:	cmp	r0, #0
    2e2c:	bne	2e50 <InflateVarName+0x5c>
    2e30:	mov	r0, sp
    2e34:	mov	r2, #1
    2e38:	stm	r1, {r0, r2}
    2e3c:	ldr	r3, [r9]
    2e40:	mov	r1, #1
    2e44:	mov	r2, #1
    2e48:	bl	18d0 <fread@plt>
    2e4c:	mov	r4, r0
    2e50:	ldr	r0, [r5, #52]	; 0x34
    2e54:	ldr	r0, [r0, #12]
    2e58:	str	r7, [r0, #12]
    2e5c:	str	r8, [r0, #16]
    2e60:	mov	r1, #0
    2e64:	bl	1804 <inflate@plt>
    2e68:	cmp	r0, #0
    2e6c:	beq	2e98 <InflateVarName+0xa4>
    2e70:	cmp	r0, #2
    2e74:	mvneq	r0, #2
    2e78:	bl	18a0 <zError@plt>
    2e7c:	mov	r1, r0
    2e80:	ldr	r0, [pc, #184]	; 2f40 <InflateVarName+0x14c>
    2e84:	add	r0, pc, r0
    2e88:	bl	19cc <Mat_Critical@plt>
    2e8c:	b	2f34 <InflateVarName+0x140>
    2e90:	mov	r4, #0
    2e94:	b	2f34 <InflateVarName+0x140>
    2e98:	mov	r8, #1
    2e9c:	mov	r7, sp
    2ea0:	mov	r6, #1
    2ea4:	ldr	r0, [r5, #52]	; 0x34
    2ea8:	ldr	r0, [r0, #12]
    2eac:	ldr	r1, [r0, #4]
    2eb0:	ldr	r2, [r0, #16]
    2eb4:	cmp	r2, #0
    2eb8:	beq	2f04 <InflateVarName+0x110>
    2ebc:	cmp	r6, #1
    2ec0:	cmpeq	r1, #0
    2ec4:	bne	2f04 <InflateVarName+0x110>
    2ec8:	stm	r0, {r7, r8}
    2ecc:	ldr	r3, [r9]
    2ed0:	mov	r0, r7
    2ed4:	mov	r1, #1
    2ed8:	mov	r2, #1
    2edc:	bl	18d0 <fread@plt>
    2ee0:	mov	r6, r0
    2ee4:	add	r4, r0, r4
    2ee8:	ldr	r0, [r5, #52]	; 0x34
    2eec:	ldr	r0, [r0, #12]
    2ef0:	mov	r1, #0
    2ef4:	bl	1804 <inflate@plt>
    2ef8:	cmp	r0, #0
    2efc:	beq	2ea4 <InflateVarName+0xb0>
    2f00:	b	2e70 <InflateVarName+0x7c>
    2f04:	cmp	r1, #0
    2f08:	beq	2f34 <InflateVarName+0x140>
    2f0c:	ldr	r0, [r9]
    2f10:	rsb	r1, r1, #0
    2f14:	mov	r2, #1
    2f18:	bl	1a68 <fseek@plt>
    2f1c:	ldr	r0, [r5, #52]	; 0x34
    2f20:	ldr	r0, [r0, #12]
    2f24:	ldr	r1, [r0, #4]
    2f28:	mov	r2, #0
    2f2c:	str	r2, [r0, #4]
    2f30:	sub	r4, r4, r1
    2f34:	mov	r0, r4
    2f38:	sub	sp, fp, #24
    2f3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2f40:	.word	0x00046239

00002f44 <InflateDataTag>:
    2f44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2f48:	add	fp, sp, #24
    2f4c:	sub	sp, sp, #32
    2f50:	cmp	r2, #0
    2f54:	beq	3078 <InflateDataTag+0x134>
    2f58:	mov	r7, r2
    2f5c:	mov	r5, r1
    2f60:	mov	r8, r0
    2f64:	ldr	r0, [r1, #52]	; 0x34
    2f68:	ldr	r1, [r0, #12]
    2f6c:	ldr	r0, [r1, #4]
    2f70:	mov	r4, #0
    2f74:	cmp	r0, #0
    2f78:	bne	2f9c <InflateDataTag+0x58>
    2f7c:	mov	r0, sp
    2f80:	mov	r2, #1
    2f84:	stm	r1, {r0, r2}
    2f88:	ldr	r3, [r8]
    2f8c:	mov	r1, #1
    2f90:	mov	r2, #1
    2f94:	bl	18d0 <fread@plt>
    2f98:	mov	r4, r0
    2f9c:	ldr	r0, [r5, #52]	; 0x34
    2fa0:	ldr	r0, [r0, #12]
    2fa4:	mov	r1, #8
    2fa8:	str	r7, [r0, #12]
    2fac:	str	r1, [r0, #16]
    2fb0:	mov	r1, #0
    2fb4:	bl	1804 <inflate@plt>
    2fb8:	cmp	r0, #1
    2fbc:	beq	30a4 <InflateDataTag+0x160>
    2fc0:	cmp	r0, #0
    2fc4:	bne	3080 <InflateDataTag+0x13c>
    2fc8:	mov	r9, #1
    2fcc:	mov	r7, sp
    2fd0:	mov	r6, #1
    2fd4:	ldr	r0, [r5, #52]	; 0x34
    2fd8:	ldr	r0, [r0, #12]
    2fdc:	ldr	r1, [r0, #16]
    2fe0:	cmp	r1, #0
    2fe4:	beq	3038 <InflateDataTag+0xf4>
    2fe8:	cmp	r6, #1
    2fec:	ldreq	r1, [r0, #4]
    2ff0:	cmpeq	r1, #0
    2ff4:	bne	3038 <InflateDataTag+0xf4>
    2ff8:	stm	r0, {r7, r9}
    2ffc:	ldr	r3, [r8]
    3000:	mov	r0, r7
    3004:	mov	r1, #1
    3008:	mov	r2, #1
    300c:	bl	18d0 <fread@plt>
    3010:	mov	r6, r0
    3014:	add	r4, r0, r4
    3018:	ldr	r0, [r5, #52]	; 0x34
    301c:	ldr	r0, [r0, #12]
    3020:	mov	r1, #0
    3024:	bl	1804 <inflate@plt>
    3028:	cmp	r0, #0
    302c:	beq	2fd4 <InflateDataTag+0x90>
    3030:	cmp	r0, #1
    3034:	bne	3080 <InflateDataTag+0x13c>
    3038:	ldr	r0, [r5, #52]	; 0x34
    303c:	ldr	r0, [r0, #12]
    3040:	ldr	r1, [r0, #4]
    3044:	cmp	r1, #0
    3048:	beq	30a4 <InflateDataTag+0x160>
    304c:	ldr	r0, [r8]
    3050:	rsb	r1, r1, #0
    3054:	mov	r2, #1
    3058:	bl	1a68 <fseek@plt>
    305c:	ldr	r0, [r5, #52]	; 0x34
    3060:	ldr	r0, [r0, #12]
    3064:	ldr	r1, [r0, #4]
    3068:	mov	r2, #0
    306c:	str	r2, [r0, #4]
    3070:	sub	r4, r4, r1
    3074:	b	30a4 <InflateDataTag+0x160>
    3078:	mov	r4, #0
    307c:	b	30a4 <InflateDataTag+0x160>
    3080:	ldr	r5, [r5, #36]	; 0x24
    3084:	cmp	r0, #2
    3088:	mvneq	r0, #2
    308c:	bl	18a0 <zError@plt>
    3090:	mov	r2, r0
    3094:	ldr	r0, [pc, #20]	; 30b0 <InflateDataTag+0x16c>
    3098:	add	r0, pc, r0
    309c:	mov	r1, r5
    30a0:	bl	19cc <Mat_Critical@plt>
    30a4:	mov	r0, r4
    30a8:	sub	sp, fp, #24
    30ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    30b0:	.word	0x00046049

000030b4 <InflateDataType>:
    30b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    30b8:	add	fp, sp, #24
    30bc:	sub	sp, sp, #32
    30c0:	cmp	r2, #0
    30c4:	beq	3144 <InflateDataType+0x90>
    30c8:	mov	r7, r2
    30cc:	mov	r5, r1
    30d0:	mov	r8, r0
    30d4:	ldr	r0, [r1, #4]
    30d8:	mov	r4, #0
    30dc:	cmp	r0, #0
    30e0:	bne	3104 <InflateDataType+0x50>
    30e4:	mov	r0, sp
    30e8:	mov	r1, #1
    30ec:	stm	r5, {r0, r1}
    30f0:	ldr	r3, [r8]
    30f4:	mov	r1, #1
    30f8:	mov	r2, #1
    30fc:	bl	18d0 <fread@plt>
    3100:	mov	r4, r0
    3104:	mov	r0, #4
    3108:	str	r7, [r5, #12]
    310c:	str	r0, [r5, #16]
    3110:	mov	r0, r5
    3114:	mov	r1, #0
    3118:	bl	1804 <inflate@plt>
    311c:	cmp	r0, #0
    3120:	beq	314c <InflateDataType+0x98>
    3124:	cmp	r0, #2
    3128:	mvneq	r0, #2
    312c:	bl	18a0 <zError@plt>
    3130:	mov	r1, r0
    3134:	ldr	r0, [pc, #164]	; 31e0 <InflateDataType+0x12c>
    3138:	add	r0, pc, r0
    313c:	bl	19cc <Mat_Critical@plt>
    3140:	b	31d4 <InflateDataType+0x120>
    3144:	mov	r4, #0
    3148:	b	31d4 <InflateDataType+0x120>
    314c:	mov	r9, #1
    3150:	mov	r7, sp
    3154:	mov	r6, #1
    3158:	ldr	r1, [r5, #4]
    315c:	ldr	r0, [r5, #16]
    3160:	cmp	r0, #0
    3164:	beq	31ac <InflateDataType+0xf8>
    3168:	cmp	r6, #1
    316c:	cmpeq	r1, #0
    3170:	bne	31ac <InflateDataType+0xf8>
    3174:	stm	r5, {r7, r9}
    3178:	ldr	r3, [r8]
    317c:	mov	r0, r7
    3180:	mov	r1, #1
    3184:	mov	r2, #1
    3188:	bl	18d0 <fread@plt>
    318c:	mov	r6, r0
    3190:	add	r4, r0, r4
    3194:	mov	r0, r5
    3198:	mov	r1, #0
    319c:	bl	1804 <inflate@plt>
    31a0:	cmp	r0, #0
    31a4:	beq	3158 <InflateDataType+0xa4>
    31a8:	b	3124 <InflateDataType+0x70>
    31ac:	cmp	r1, #0
    31b0:	beq	31d4 <InflateDataType+0x120>
    31b4:	ldr	r0, [r8]
    31b8:	rsb	r1, r1, #0
    31bc:	mov	r2, #1
    31c0:	bl	1a68 <fseek@plt>
    31c4:	ldr	r0, [r5, #4]
    31c8:	mov	r1, #0
    31cc:	str	r1, [r5, #4]
    31d0:	sub	r4, r4, r0
    31d4:	mov	r0, r4
    31d8:	sub	sp, fp, #24
    31dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    31e0:	.word	0x00045fd2

000031e4 <InflateData>:
    31e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    31e8:	add	fp, sp, #24
    31ec:	sub	sp, sp, #8
    31f0:	sub	sp, sp, #1024	; 0x400
    31f4:	mov	r4, #0
    31f8:	cmp	r2, #0
    31fc:	movne	r7, r3
    3200:	cmpne	r3, #0
    3204:	bne	3214 <InflateData+0x30>
    3208:	mov	r0, r4
    320c:	sub	sp, fp, #24
    3210:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3214:	mov	r6, r2
    3218:	mov	r5, r1
    321c:	mov	r8, r0
    3220:	ldr	r0, [r1, #4]
    3224:	mov	r4, #0
    3228:	cmp	r0, #0
    322c:	bne	325c <InflateData+0x78>
    3230:	cmp	r7, #1024	; 0x400
    3234:	mov	r2, r7
    3238:	movcs	r2, #1024	; 0x400
    323c:	ldr	r3, [r8]
    3240:	add	r9, sp, #4
    3244:	mov	r0, r9
    3248:	mov	r1, #1
    324c:	bl	18d0 <fread@plt>
    3250:	mov	r4, r0
    3254:	str	r9, [r5]
    3258:	str	r0, [r5, #4]
    325c:	str	r6, [r5, #12]
    3260:	str	r7, [r5, #16]
    3264:	mov	r0, r5
    3268:	mov	r1, #3
    326c:	bl	1804 <inflate@plt>
    3270:	cmp	r0, #1
    3274:	beq	3208 <InflateData+0x24>
    3278:	cmp	r0, #0
    327c:	bne	3300 <InflateData+0x11c>
    3280:	ldr	r0, [r5, #16]
    3284:	cmp	r0, #0
    3288:	beq	3344 <InflateData+0x160>
    328c:	add	r6, sp, #4
    3290:	ldr	r1, [r5, #4]
    3294:	cmp	r1, #0
    3298:	bne	3350 <InflateData+0x16c>
    329c:	add	r0, r4, #1024	; 0x400
    32a0:	mov	r2, #1024	; 0x400
    32a4:	cmp	r0, r7
    32a8:	bcc	32bc <InflateData+0xd8>
    32ac:	sub	r2, r7, r4
    32b0:	add	r0, r4, #1
    32b4:	cmp	r0, r7
    32b8:	movwhi	r2, #1
    32bc:	ldr	r3, [r8]
    32c0:	mov	r0, r6
    32c4:	mov	r1, #1
    32c8:	bl	18d0 <fread@plt>
    32cc:	str	r6, [r5]
    32d0:	str	r0, [r5, #4]
    32d4:	add	r4, r0, r4
    32d8:	mov	r0, r5
    32dc:	mov	r1, #3
    32e0:	bl	1804 <inflate@plt>
    32e4:	cmn	r0, #5
    32e8:	cmpne	r0, #0
    32ec:	bne	3320 <InflateData+0x13c>
    32f0:	ldr	r0, [r5, #16]
    32f4:	cmp	r0, #0
    32f8:	bne	3290 <InflateData+0xac>
    32fc:	b	3344 <InflateData+0x160>
    3300:	cmp	r0, #2
    3304:	mvneq	r0, #2
    3308:	bl	18a0 <zError@plt>
    330c:	mov	r1, r0
    3310:	ldr	r0, [pc, #96]	; 3378 <InflateData+0x194>
    3314:	add	r0, pc, r0
    3318:	bl	19cc <Mat_Critical@plt>
    331c:	b	3208 <InflateData+0x24>
    3320:	cmp	r0, #1
    3324:	beq	3344 <InflateData+0x160>
    3328:	cmp	r0, #2
    332c:	mvneq	r0, #2
    3330:	bl	18a0 <zError@plt>
    3334:	mov	r1, r0
    3338:	ldr	r0, [pc, #52]	; 3374 <InflateData+0x190>
    333c:	add	r0, pc, r0
    3340:	bl	19cc <Mat_Critical@plt>
    3344:	ldr	r1, [r5, #4]
    3348:	cmp	r1, #0
    334c:	beq	3208 <InflateData+0x24>
    3350:	ldr	r0, [r8]
    3354:	rsb	r1, r1, #0
    3358:	mov	r2, #1
    335c:	bl	1a68 <fseek@plt>
    3360:	ldr	r0, [r5, #4]
    3364:	mov	r1, #0
    3368:	str	r1, [r5, #4]
    336c:	sub	r4, r4, r0
    3370:	b	3208 <InflateData+0x24>
    3374:	.word	0x00045df3
    3378:	.word	0x00045e1b

0000337c <InflateFieldNameLength>:
    337c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3380:	add	fp, sp, #24
    3384:	sub	sp, sp, #32
    3388:	cmp	r2, #0
    338c:	beq	3418 <InflateFieldNameLength+0x9c>
    3390:	mov	r7, r2
    3394:	mov	r5, r1
    3398:	mov	r8, r0
    339c:	ldr	r0, [r1, #52]	; 0x34
    33a0:	ldr	r1, [r0, #12]
    33a4:	ldr	r0, [r1, #4]
    33a8:	mov	r4, #0
    33ac:	cmp	r0, #0
    33b0:	bne	33d4 <InflateFieldNameLength+0x58>
    33b4:	mov	r0, sp
    33b8:	mov	r2, #1
    33bc:	stm	r1, {r0, r2}
    33c0:	ldr	r3, [r8]
    33c4:	mov	r1, #1
    33c8:	mov	r2, #1
    33cc:	bl	18d0 <fread@plt>
    33d0:	mov	r4, r0
    33d4:	ldr	r0, [r5, #52]	; 0x34
    33d8:	ldr	r0, [r0, #12]
    33dc:	mov	r1, #8
    33e0:	str	r7, [r0, #12]
    33e4:	str	r1, [r0, #16]
    33e8:	mov	r1, #0
    33ec:	bl	1804 <inflate@plt>
    33f0:	cmp	r0, #0
    33f4:	beq	3420 <InflateFieldNameLength+0xa4>
    33f8:	cmp	r0, #2
    33fc:	mvneq	r0, #2
    3400:	bl	18a0 <zError@plt>
    3404:	mov	r1, r0
    3408:	ldr	r0, [pc, #184]	; 34c8 <InflateFieldNameLength+0x14c>
    340c:	add	r0, pc, r0
    3410:	bl	19cc <Mat_Critical@plt>
    3414:	b	34bc <InflateFieldNameLength+0x140>
    3418:	mov	r4, #0
    341c:	b	34bc <InflateFieldNameLength+0x140>
    3420:	mov	r9, #1
    3424:	mov	r7, sp
    3428:	mov	r6, #1
    342c:	ldr	r0, [r5, #52]	; 0x34
    3430:	ldr	r0, [r0, #12]
    3434:	ldr	r1, [r0, #4]
    3438:	ldr	r2, [r0, #16]
    343c:	cmp	r2, #0
    3440:	beq	348c <InflateFieldNameLength+0x110>
    3444:	cmp	r6, #1
    3448:	cmpeq	r1, #0
    344c:	bne	348c <InflateFieldNameLength+0x110>
    3450:	stm	r0, {r7, r9}
    3454:	ldr	r3, [r8]
    3458:	mov	r0, r7
    345c:	mov	r1, #1
    3460:	mov	r2, #1
    3464:	bl	18d0 <fread@plt>
    3468:	mov	r6, r0
    346c:	add	r4, r0, r4
    3470:	ldr	r0, [r5, #52]	; 0x34
    3474:	ldr	r0, [r0, #12]
    3478:	mov	r1, #0
    347c:	bl	1804 <inflate@plt>
    3480:	cmp	r0, #0
    3484:	beq	342c <InflateFieldNameLength+0xb0>
    3488:	b	33f8 <InflateFieldNameLength+0x7c>
    348c:	cmp	r1, #0
    3490:	beq	34bc <InflateFieldNameLength+0x140>
    3494:	ldr	r0, [r8]
    3498:	rsb	r1, r1, #0
    349c:	mov	r2, #1
    34a0:	bl	1a68 <fseek@plt>
    34a4:	ldr	r0, [r5, #52]	; 0x34
    34a8:	ldr	r0, [r0, #12]
    34ac:	ldr	r1, [r0, #4]
    34b0:	mov	r2, #0
    34b4:	str	r2, [r0, #4]
    34b8:	sub	r4, r4, r1
    34bc:	mov	r0, r4
    34c0:	sub	sp, fp, #24
    34c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    34c8:	.word	0x00045d44

000034cc <InflateFieldNamesTag>:
    34cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    34d0:	add	fp, sp, #24
    34d4:	sub	sp, sp, #32
    34d8:	cmp	r2, #0
    34dc:	beq	3568 <InflateFieldNamesTag+0x9c>
    34e0:	mov	r7, r2
    34e4:	mov	r5, r1
    34e8:	mov	r8, r0
    34ec:	ldr	r0, [r1, #52]	; 0x34
    34f0:	ldr	r1, [r0, #12]
    34f4:	ldr	r0, [r1, #4]
    34f8:	mov	r4, #0
    34fc:	cmp	r0, #0
    3500:	bne	3524 <InflateFieldNamesTag+0x58>
    3504:	mov	r0, sp
    3508:	mov	r2, #1
    350c:	stm	r1, {r0, r2}
    3510:	ldr	r3, [r8]
    3514:	mov	r1, #1
    3518:	mov	r2, #1
    351c:	bl	18d0 <fread@plt>
    3520:	mov	r4, r0
    3524:	ldr	r0, [r5, #52]	; 0x34
    3528:	ldr	r0, [r0, #12]
    352c:	mov	r1, #8
    3530:	str	r7, [r0, #12]
    3534:	str	r1, [r0, #16]
    3538:	mov	r1, #0
    353c:	bl	1804 <inflate@plt>
    3540:	cmp	r0, #0
    3544:	beq	3570 <InflateFieldNamesTag+0xa4>
    3548:	cmp	r0, #2
    354c:	mvneq	r0, #2
    3550:	bl	18a0 <zError@plt>
    3554:	mov	r1, r0
    3558:	ldr	r0, [pc, #184]	; 3618 <InflateFieldNamesTag+0x14c>
    355c:	add	r0, pc, r0
    3560:	bl	19cc <Mat_Critical@plt>
    3564:	b	360c <InflateFieldNamesTag+0x140>
    3568:	mov	r4, #0
    356c:	b	360c <InflateFieldNamesTag+0x140>
    3570:	mov	r9, #1
    3574:	mov	r7, sp
    3578:	mov	r6, #1
    357c:	ldr	r0, [r5, #52]	; 0x34
    3580:	ldr	r0, [r0, #12]
    3584:	ldr	r1, [r0, #4]
    3588:	ldr	r2, [r0, #16]
    358c:	cmp	r2, #0
    3590:	beq	35dc <InflateFieldNamesTag+0x110>
    3594:	cmp	r6, #1
    3598:	cmpeq	r1, #0
    359c:	bne	35dc <InflateFieldNamesTag+0x110>
    35a0:	stm	r0, {r7, r9}
    35a4:	ldr	r3, [r8]
    35a8:	mov	r0, r7
    35ac:	mov	r1, #1
    35b0:	mov	r2, #1
    35b4:	bl	18d0 <fread@plt>
    35b8:	mov	r6, r0
    35bc:	add	r4, r0, r4
    35c0:	ldr	r0, [r5, #52]	; 0x34
    35c4:	ldr	r0, [r0, #12]
    35c8:	mov	r1, #0
    35cc:	bl	1804 <inflate@plt>
    35d0:	cmp	r0, #0
    35d4:	beq	357c <InflateFieldNamesTag+0xb0>
    35d8:	b	3548 <InflateFieldNamesTag+0x7c>
    35dc:	cmp	r1, #0
    35e0:	beq	360c <InflateFieldNamesTag+0x140>
    35e4:	ldr	r0, [r8]
    35e8:	rsb	r1, r1, #0
    35ec:	mov	r2, #1
    35f0:	bl	1a68 <fseek@plt>
    35f4:	ldr	r0, [r5, #52]	; 0x34
    35f8:	ldr	r0, [r0, #12]
    35fc:	ldr	r1, [r0, #4]
    3600:	mov	r2, #0
    3604:	str	r2, [r0, #4]
    3608:	sub	r4, r4, r1
    360c:	mov	r0, r4
    3610:	sub	sp, fp, #24
    3614:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3618:	.word	0x00045c20

0000361c <InflateFieldNames>:
    361c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3620:	add	fp, sp, #28
    3624:	sub	sp, sp, #36	; 0x24
    3628:	cmp	r2, #0
    362c:	beq	36c4 <InflateFieldNames+0xa8>
    3630:	mov	r8, r3
    3634:	mov	r7, r2
    3638:	mov	r5, r1
    363c:	mov	r9, r0
    3640:	ldr	sl, [fp, #12]
    3644:	ldr	r6, [fp, #8]
    3648:	ldr	r0, [r1, #52]	; 0x34
    364c:	ldr	r1, [r0, #12]
    3650:	ldr	r0, [r1, #4]
    3654:	mov	r4, #0
    3658:	cmp	r0, #0
    365c:	bne	3680 <InflateFieldNames+0x64>
    3660:	add	r0, sp, #4
    3664:	mov	r2, #1
    3668:	stm	r1, {r0, r2}
    366c:	ldr	r3, [r9]
    3670:	mov	r1, #1
    3674:	mov	r2, #1
    3678:	bl	18d0 <fread@plt>
    367c:	mov	r4, r0
    3680:	ldr	r0, [r5, #52]	; 0x34
    3684:	ldr	r0, [r0, #12]
    3688:	mla	r1, r6, r8, sl
    368c:	str	r7, [r0, #12]
    3690:	str	r1, [r0, #16]
    3694:	mov	r1, #0
    3698:	bl	1804 <inflate@plt>
    369c:	cmp	r0, #0
    36a0:	beq	36cc <InflateFieldNames+0xb0>
    36a4:	cmp	r0, #2
    36a8:	mvneq	r0, #2
    36ac:	bl	18a0 <zError@plt>
    36b0:	mov	r1, r0
    36b4:	ldr	r0, [pc, #184]	; 3774 <InflateFieldNames+0x158>
    36b8:	add	r0, pc, r0
    36bc:	bl	19cc <Mat_Critical@plt>
    36c0:	b	3768 <InflateFieldNames+0x14c>
    36c4:	mov	r4, #0
    36c8:	b	3768 <InflateFieldNames+0x14c>
    36cc:	mov	r8, #1
    36d0:	add	r7, sp, #4
    36d4:	mov	r6, #1
    36d8:	ldr	r0, [r5, #52]	; 0x34
    36dc:	ldr	r0, [r0, #12]
    36e0:	ldr	r1, [r0, #4]
    36e4:	ldr	r2, [r0, #16]
    36e8:	cmp	r2, #0
    36ec:	beq	3738 <InflateFieldNames+0x11c>
    36f0:	cmp	r6, #1
    36f4:	cmpeq	r1, #0
    36f8:	bne	3738 <InflateFieldNames+0x11c>
    36fc:	stm	r0, {r7, r8}
    3700:	ldr	r3, [r9]
    3704:	mov	r0, r7
    3708:	mov	r1, #1
    370c:	mov	r2, #1
    3710:	bl	18d0 <fread@plt>
    3714:	mov	r6, r0
    3718:	add	r4, r0, r4
    371c:	ldr	r0, [r5, #52]	; 0x34
    3720:	ldr	r0, [r0, #12]
    3724:	mov	r1, #0
    3728:	bl	1804 <inflate@plt>
    372c:	cmp	r0, #0
    3730:	beq	36d8 <InflateFieldNames+0xbc>
    3734:	b	36a4 <InflateFieldNames+0x88>
    3738:	cmp	r1, #0
    373c:	beq	3768 <InflateFieldNames+0x14c>
    3740:	ldr	r0, [r9]
    3744:	rsb	r1, r1, #0
    3748:	mov	r2, #1
    374c:	bl	1a68 <fseek@plt>
    3750:	ldr	r0, [r5, #52]	; 0x34
    3754:	ldr	r0, [r0, #12]
    3758:	ldr	r1, [r0, #4]
    375c:	mov	r2, #0
    3760:	str	r2, [r0, #4]
    3764:	sub	r4, r4, r1
    3768:	mov	r0, r4
    376c:	sub	sp, fp, #28
    3770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3774:	.word	0x00045aee

00003778 <ReadDoubleData>:
    3778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    377c:	add	fp, sp, #28
    3780:	sub	sp, sp, #28
    3784:	sub	sp, sp, #2048	; 0x800
    3788:	mov	r4, #0
    378c:	str	r0, [sp, #20]
    3790:	cmp	r0, #0
    3794:	movne	r8, r1
    3798:	cmpne	r1, #0
    379c:	bne	37ac <ReadDoubleData+0x34>
    37a0:	mov	r0, r4
    37a4:	sub	sp, fp, #28
    37a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    37ac:	ldr	r0, [sp, #20]
    37b0:	ldr	r0, [r0]
    37b4:	cmp	r0, #0
    37b8:	beq	37a0 <ReadDoubleData+0x28>
    37bc:	mov	r6, r3
    37c0:	mov	r5, r2
    37c4:	mov	r0, r2
    37c8:	bl	193c <Mat_SizeOf@plt>
    37cc:	mov	r7, r0
    37d0:	sub	r0, r5, #1
    37d4:	cmp	r0, #12
    37d8:	bhi	37a0 <ReadDoubleData+0x28>
    37dc:	add	r1, pc, #8
    37e0:	ldr	r0, [r1, r0, lsl #2]
    37e4:	str	r7, [sp, #16]
    37e8:	add	pc, r1, r0
    37ec:	.word	0x00000034
    37f0:	.word	0x00000084
    37f4:	.word	0x000000d4
    37f8:	.word	0x0000013c
    37fc:	.word	0x000001a4
    3800:	.word	0x0000020c
    3804:	.word	0x00000274
    3808:	.word	0xffffffb4
    380c:	.word	0x000002d8
    3810:	.word	0xffffffb4
    3814:	.word	0xffffffb4
    3818:	.word	0x00000320
    381c:	.word	0x00000384
    3820:	cmp	r6, #256	; 0x100
    3824:	bgt	3bd4 <ReadDoubleData+0x45c>
    3828:	ldr	r0, [sp, #20]
    382c:	ldr	r3, [r0]
    3830:	add	r4, sp, #24
    3834:	mov	r0, r4
    3838:	mov	r1, r7
    383c:	mov	r2, r6
    3840:	bl	18d0 <fread@plt>
    3844:	mov	r5, r0
    3848:	cmp	r6, #1
    384c:	blt	4bec <ReadDoubleData+0x1474>
    3850:	ldrsb	r0, [r4], #1
    3854:	vmov	s0, r0
    3858:	vcvt.f64.s32	d16, s0
    385c:	vstr	d16, [r8]
    3860:	subs	r6, r6, #1
    3864:	add	r8, r8, #8
    3868:	bne	3850 <ReadDoubleData+0xd8>
    386c:	b	4bec <ReadDoubleData+0x1474>
    3870:	cmp	r6, #256	; 0x100
    3874:	bgt	3ca4 <ReadDoubleData+0x52c>
    3878:	ldr	r0, [sp, #20]
    387c:	ldr	r3, [r0]
    3880:	add	r4, sp, #24
    3884:	mov	r0, r4
    3888:	mov	r1, r7
    388c:	mov	r2, r6
    3890:	bl	18d0 <fread@plt>
    3894:	mov	r5, r0
    3898:	cmp	r6, #1
    389c:	blt	4bec <ReadDoubleData+0x1474>
    38a0:	ldrb	r0, [r4], #1
    38a4:	vmov	s0, r0
    38a8:	vcvt.f64.u32	d16, s0
    38ac:	vstr	d16, [r8]
    38b0:	subs	r6, r6, #1
    38b4:	add	r8, r8, #8
    38b8:	bne	38a0 <ReadDoubleData+0x128>
    38bc:	b	4bec <ReadDoubleData+0x1474>
    38c0:	ldr	r0, [sp, #20]
    38c4:	ldr	r0, [r0, #20]
    38c8:	cmp	r0, #0
    38cc:	beq	3d70 <ReadDoubleData+0x5f8>
    38d0:	cmp	r6, #256	; 0x100
    38d4:	bgt	3fa0 <ReadDoubleData+0x828>
    38d8:	ldr	r0, [sp, #20]
    38dc:	ldr	r3, [r0]
    38e0:	add	r4, sp, #24
    38e4:	mov	r0, r4
    38e8:	mov	r1, r7
    38ec:	mov	r2, r6
    38f0:	bl	18d0 <fread@plt>
    38f4:	mov	r5, r0
    38f8:	cmp	r6, #1
    38fc:	blt	4bec <ReadDoubleData+0x1474>
    3900:	mov	r0, r4
    3904:	bl	1c50 <Mat_int16Swap>
    3908:	vmov	s0, r0
    390c:	vcvt.f64.s32	d16, s0
    3910:	vstr	d16, [r8]
    3914:	subs	r6, r6, #1
    3918:	add	r8, r8, #8
    391c:	add	r4, r4, #2
    3920:	bne	3900 <ReadDoubleData+0x188>
    3924:	b	4bec <ReadDoubleData+0x1474>
    3928:	ldr	r0, [sp, #20]
    392c:	ldr	r0, [r0, #20]
    3930:	cmp	r0, #0
    3934:	beq	3dc0 <ReadDoubleData+0x648>
    3938:	cmp	r6, #256	; 0x100
    393c:	bgt	4090 <ReadDoubleData+0x918>
    3940:	ldr	r0, [sp, #20]
    3944:	ldr	r3, [r0]
    3948:	add	r4, sp, #24
    394c:	mov	r0, r4
    3950:	mov	r1, r7
    3954:	mov	r2, r6
    3958:	bl	18d0 <fread@plt>
    395c:	mov	r5, r0
    3960:	cmp	r6, #1
    3964:	blt	4bec <ReadDoubleData+0x1474>
    3968:	mov	r0, r4
    396c:	bl	1c64 <Mat_uint16Swap>
    3970:	vmov	s0, r0
    3974:	vcvt.f64.u32	d16, s0
    3978:	vstr	d16, [r8]
    397c:	subs	r6, r6, #1
    3980:	add	r8, r8, #8
    3984:	add	r4, r4, #2
    3988:	bne	3968 <ReadDoubleData+0x1f0>
    398c:	b	4bec <ReadDoubleData+0x1474>
    3990:	ldr	r0, [sp, #20]
    3994:	ldr	r0, [r0, #20]
    3998:	cmp	r0, #0
    399c:	beq	3e10 <ReadDoubleData+0x698>
    39a0:	cmp	r6, #256	; 0x100
    39a4:	bgt	4180 <ReadDoubleData+0xa08>
    39a8:	ldr	r0, [sp, #20]
    39ac:	ldr	r3, [r0]
    39b0:	add	r4, sp, #24
    39b4:	mov	r0, r4
    39b8:	mov	r1, r7
    39bc:	mov	r2, r6
    39c0:	bl	18d0 <fread@plt>
    39c4:	mov	r5, r0
    39c8:	cmp	r6, #1
    39cc:	blt	4bec <ReadDoubleData+0x1474>
    39d0:	mov	r0, r4
    39d4:	bl	1c28 <Mat_int32Swap>
    39d8:	vmov	s0, r0
    39dc:	vcvt.f64.s32	d16, s0
    39e0:	vstr	d16, [r8]
    39e4:	subs	r6, r6, #1
    39e8:	add	r8, r8, #8
    39ec:	add	r4, r4, #4
    39f0:	bne	39d0 <ReadDoubleData+0x258>
    39f4:	b	4bec <ReadDoubleData+0x1474>
    39f8:	ldr	r0, [sp, #20]
    39fc:	ldr	r0, [r0, #20]
    3a00:	cmp	r0, #0
    3a04:	beq	3e60 <ReadDoubleData+0x6e8>
    3a08:	cmp	r6, #256	; 0x100
    3a0c:	bgt	4270 <ReadDoubleData+0xaf8>
    3a10:	ldr	r0, [sp, #20]
    3a14:	ldr	r3, [r0]
    3a18:	add	r4, sp, #24
    3a1c:	mov	r0, r4
    3a20:	mov	r1, r7
    3a24:	mov	r2, r6
    3a28:	bl	18d0 <fread@plt>
    3a2c:	mov	r5, r0
    3a30:	cmp	r6, #1
    3a34:	blt	4bec <ReadDoubleData+0x1474>
    3a38:	mov	r0, r4
    3a3c:	bl	1c3c <Mat_uint32Swap>
    3a40:	vmov	s0, r0
    3a44:	vcvt.f64.u32	d16, s0
    3a48:	vstr	d16, [r8]
    3a4c:	subs	r6, r6, #1
    3a50:	add	r8, r8, #8
    3a54:	add	r4, r4, #4
    3a58:	bne	3a38 <ReadDoubleData+0x2c0>
    3a5c:	b	4bec <ReadDoubleData+0x1474>
    3a60:	ldr	r0, [sp, #20]
    3a64:	ldr	r0, [r0, #20]
    3a68:	cmp	r0, #0
    3a6c:	beq	3eb0 <ReadDoubleData+0x738>
    3a70:	cmp	r6, #256	; 0x100
    3a74:	bgt	4360 <ReadDoubleData+0xbe8>
    3a78:	ldr	r0, [sp, #20]
    3a7c:	ldr	r3, [r0]
    3a80:	add	r4, sp, #24
    3a84:	mov	r0, r4
    3a88:	mov	r1, r7
    3a8c:	mov	r2, r6
    3a90:	bl	18d0 <fread@plt>
    3a94:	mov	r5, r0
    3a98:	cmp	r6, #1
    3a9c:	blt	4bec <ReadDoubleData+0x1474>
    3aa0:	mov	r0, r4
    3aa4:	bl	1c7c <Mat_floatSwap>
    3aa8:	vcvt.f64.f32	d16, s0
    3aac:	vstr	d16, [r8]
    3ab0:	subs	r6, r6, #1
    3ab4:	add	r8, r8, #8
    3ab8:	add	r4, r4, #4
    3abc:	bne	3aa0 <ReadDoubleData+0x328>
    3ac0:	b	4bec <ReadDoubleData+0x1474>
    3ac4:	ldr	r4, [sp, #20]
    3ac8:	ldr	r3, [r4]
    3acc:	mov	r0, r8
    3ad0:	mov	r1, r7
    3ad4:	mov	r2, r6
    3ad8:	bl	18d0 <fread@plt>
    3adc:	mov	r5, r0
    3ae0:	ldr	r0, [r4, #20]
    3ae4:	cmp	r0, #0
    3ae8:	beq	4bec <ReadDoubleData+0x1474>
    3aec:	cmp	r6, #1
    3af0:	blt	4bec <ReadDoubleData+0x1474>
    3af4:	mov	r0, r8
    3af8:	bl	1cc0 <Mat_doubleSwap>
    3afc:	subs	r6, r6, #1
    3b00:	add	r8, r8, #8
    3b04:	bne	3af4 <ReadDoubleData+0x37c>
    3b08:	b	4bec <ReadDoubleData+0x1474>
    3b0c:	ldr	r0, [sp, #20]
    3b10:	ldr	r0, [r0, #20]
    3b14:	cmp	r0, #0
    3b18:	beq	3f00 <ReadDoubleData+0x788>
    3b1c:	cmp	r6, #256	; 0x100
    3b20:	bgt	4448 <ReadDoubleData+0xcd0>
    3b24:	ldr	r0, [sp, #20]
    3b28:	ldr	r3, [r0]
    3b2c:	add	r4, sp, #24
    3b30:	mov	r0, r4
    3b34:	mov	r1, r7
    3b38:	mov	r2, r6
    3b3c:	bl	18d0 <fread@plt>
    3b40:	mov	r5, r0
    3b44:	cmp	r6, #1
    3b48:	blt	4bec <ReadDoubleData+0x1474>
    3b4c:	mov	r0, r4
    3b50:	bl	1bbc <Mat_int64Swap>
    3b54:	bl	48b60 <__aeabi_l2d>
    3b58:	strd	r0, [r8]
    3b5c:	subs	r6, r6, #1
    3b60:	add	r8, r8, #8
    3b64:	add	r4, r4, #8
    3b68:	bne	3b4c <ReadDoubleData+0x3d4>
    3b6c:	b	4bec <ReadDoubleData+0x1474>
    3b70:	ldr	r0, [sp, #20]
    3b74:	ldr	r0, [r0, #20]
    3b78:	cmp	r0, #0
    3b7c:	beq	3f50 <ReadDoubleData+0x7d8>
    3b80:	cmp	r6, #256	; 0x100
    3b84:	bgt	4530 <ReadDoubleData+0xdb8>
    3b88:	ldr	r0, [sp, #20]
    3b8c:	ldr	r3, [r0]
    3b90:	add	r4, sp, #24
    3b94:	mov	r0, r4
    3b98:	mov	r1, r7
    3b9c:	mov	r2, r6
    3ba0:	bl	18d0 <fread@plt>
    3ba4:	mov	r5, r0
    3ba8:	cmp	r6, #1
    3bac:	blt	4bec <ReadDoubleData+0x1474>
    3bb0:	mov	r0, r4
    3bb4:	bl	1c0c <Mat_uint64Swap>
    3bb8:	bl	48b4c <__aeabi_ul2d>
    3bbc:	strd	r0, [r8]
    3bc0:	subs	r6, r6, #1
    3bc4:	add	r8, r8, #8
    3bc8:	add	r4, r4, #8
    3bcc:	bne	3bb0 <ReadDoubleData+0x438>
    3bd0:	b	4bec <ReadDoubleData+0x1474>
    3bd4:	add	r1, r8, #2048	; 0x800
    3bd8:	str	r6, [sp, #4]
    3bdc:	sub	sl, r6, #256	; 0x100
    3be0:	mov	r0, #0
    3be4:	add	r4, sp, #24
    3be8:	mov	r5, #0
    3bec:	mov	r9, r0
    3bf0:	mov	r6, r1
    3bf4:	ldr	r0, [sp, #20]
    3bf8:	ldr	r3, [r0]
    3bfc:	mov	r0, r4
    3c00:	mov	r1, r7
    3c04:	mov	r2, #256	; 0x100
    3c08:	bl	18d0 <fread@plt>
    3c0c:	mov	r1, r8
    3c10:	mov	r2, #0
    3c14:	add	r3, r4, r2
    3c18:	ldrsb	r3, [r3]
    3c1c:	vmov	s0, r3
    3c20:	vcvt.f64.s32	d16, s0
    3c24:	vstmia	r1!, {d16}
    3c28:	add	r2, r2, #1
    3c2c:	cmp	r2, #256	; 0x100
    3c30:	bne	3c14 <ReadDoubleData+0x49c>
    3c34:	add	r5, r0, r5
    3c38:	add	r8, r8, #2048	; 0x800
    3c3c:	add	r1, r6, #2048	; 0x800
    3c40:	add	r0, r9, #256	; 0x100
    3c44:	cmp	r0, sl
    3c48:	blt	3bec <ReadDoubleData+0x474>
    3c4c:	ldr	r2, [sp, #4]
    3c50:	cmp	r0, r2
    3c54:	bge	4bec <ReadDoubleData+0x1474>
    3c58:	mov	r1, r7
    3c5c:	sub	r7, r2, r0
    3c60:	ldr	r0, [sp, #20]
    3c64:	ldr	r3, [r0]
    3c68:	add	r4, sp, #24
    3c6c:	mov	r0, r4
    3c70:	mov	r2, r7
    3c74:	bl	18d0 <fread@plt>
    3c78:	add	r5, r0, r5
    3c7c:	cmp	r7, #1
    3c80:	blt	4be8 <ReadDoubleData+0x1470>
    3c84:	sub	r0, sl, r9
    3c88:	ldrsb	r1, [r4], #1
    3c8c:	vmov	s0, r1
    3c90:	vcvt.f64.s32	d16, s0
    3c94:	vstmia	r6!, {d16}
    3c98:	subs	r0, r0, #1
    3c9c:	bne	3c88 <ReadDoubleData+0x510>
    3ca0:	b	4be8 <ReadDoubleData+0x1470>
    3ca4:	add	r1, r8, #2048	; 0x800
    3ca8:	str	r6, [sp, #4]
    3cac:	sub	sl, r6, #256	; 0x100
    3cb0:	mov	r0, #0
    3cb4:	add	r4, sp, #24
    3cb8:	mov	r5, #0
    3cbc:	mov	r9, r0
    3cc0:	mov	r6, r1
    3cc4:	ldr	r0, [sp, #20]
    3cc8:	ldr	r3, [r0]
    3ccc:	mov	r0, r4
    3cd0:	mov	r1, r7
    3cd4:	mov	r2, #256	; 0x100
    3cd8:	bl	18d0 <fread@plt>
    3cdc:	mov	r1, r8
    3ce0:	mov	r2, #0
    3ce4:	ldrb	r3, [r4, r2]
    3ce8:	vmov	s0, r3
    3cec:	vcvt.f64.u32	d16, s0
    3cf0:	vstmia	r1!, {d16}
    3cf4:	add	r2, r2, #1
    3cf8:	cmp	r2, #256	; 0x100
    3cfc:	bne	3ce4 <ReadDoubleData+0x56c>
    3d00:	add	r5, r0, r5
    3d04:	add	r8, r8, #2048	; 0x800
    3d08:	add	r1, r6, #2048	; 0x800
    3d0c:	add	r0, r9, #256	; 0x100
    3d10:	cmp	r0, sl
    3d14:	blt	3cbc <ReadDoubleData+0x544>
    3d18:	ldr	r2, [sp, #4]
    3d1c:	cmp	r0, r2
    3d20:	bge	4bec <ReadDoubleData+0x1474>
    3d24:	mov	r1, r7
    3d28:	sub	r7, r2, r0
    3d2c:	ldr	r0, [sp, #20]
    3d30:	ldr	r3, [r0]
    3d34:	add	r4, sp, #24
    3d38:	mov	r0, r4
    3d3c:	mov	r2, r7
    3d40:	bl	18d0 <fread@plt>
    3d44:	add	r5, r0, r5
    3d48:	cmp	r7, #1
    3d4c:	blt	4be8 <ReadDoubleData+0x1470>
    3d50:	sub	r0, sl, r9
    3d54:	ldrb	r1, [r4], #1
    3d58:	vmov	s0, r1
    3d5c:	vcvt.f64.u32	d16, s0
    3d60:	vstmia	r6!, {d16}
    3d64:	subs	r0, r0, #1
    3d68:	bne	3d54 <ReadDoubleData+0x5dc>
    3d6c:	b	4be8 <ReadDoubleData+0x1470>
    3d70:	cmp	r6, #256	; 0x100
    3d74:	bgt	4618 <ReadDoubleData+0xea0>
    3d78:	ldr	r0, [sp, #20]
    3d7c:	ldr	r3, [r0]
    3d80:	add	r4, sp, #24
    3d84:	mov	r0, r4
    3d88:	mov	r1, r7
    3d8c:	mov	r2, r6
    3d90:	bl	18d0 <fread@plt>
    3d94:	mov	r5, r0
    3d98:	cmp	r6, #1
    3d9c:	blt	4bec <ReadDoubleData+0x1474>
    3da0:	ldrsh	r0, [r4], #2
    3da4:	vmov	s0, r0
    3da8:	vcvt.f64.s32	d16, s0
    3dac:	vstr	d16, [r8]
    3db0:	subs	r6, r6, #1
    3db4:	add	r8, r8, #8
    3db8:	bne	3da0 <ReadDoubleData+0x628>
    3dbc:	b	4bec <ReadDoubleData+0x1474>
    3dc0:	cmp	r6, #256	; 0x100
    3dc4:	bgt	46e8 <ReadDoubleData+0xf70>
    3dc8:	ldr	r0, [sp, #20]
    3dcc:	ldr	r3, [r0]
    3dd0:	add	r4, sp, #24
    3dd4:	mov	r0, r4
    3dd8:	mov	r1, r7
    3ddc:	mov	r2, r6
    3de0:	bl	18d0 <fread@plt>
    3de4:	mov	r5, r0
    3de8:	cmp	r6, #1
    3dec:	blt	4bec <ReadDoubleData+0x1474>
    3df0:	ldrh	r0, [r4], #2
    3df4:	vmov	s0, r0
    3df8:	vcvt.f64.u32	d16, s0
    3dfc:	vstr	d16, [r8]
    3e00:	subs	r6, r6, #1
    3e04:	add	r8, r8, #8
    3e08:	bne	3df0 <ReadDoubleData+0x678>
    3e0c:	b	4bec <ReadDoubleData+0x1474>
    3e10:	cmp	r6, #256	; 0x100
    3e14:	bgt	47b8 <ReadDoubleData+0x1040>
    3e18:	ldr	r0, [sp, #20]
    3e1c:	ldr	r3, [r0]
    3e20:	add	r4, sp, #24
    3e24:	mov	r0, r4
    3e28:	mov	r1, r7
    3e2c:	mov	r2, r6
    3e30:	bl	18d0 <fread@plt>
    3e34:	mov	r5, r0
    3e38:	cmp	r6, #1
    3e3c:	blt	4bec <ReadDoubleData+0x1474>
    3e40:	ldr	r0, [r4], #4
    3e44:	vmov	s0, r0
    3e48:	vcvt.f64.s32	d16, s0
    3e4c:	vstr	d16, [r8]
    3e50:	subs	r6, r6, #1
    3e54:	add	r8, r8, #8
    3e58:	bne	3e40 <ReadDoubleData+0x6c8>
    3e5c:	b	4bec <ReadDoubleData+0x1474>
    3e60:	cmp	r6, #256	; 0x100
    3e64:	bgt	4884 <ReadDoubleData+0x110c>
    3e68:	ldr	r0, [sp, #20]
    3e6c:	ldr	r3, [r0]
    3e70:	add	r4, sp, #24
    3e74:	mov	r0, r4
    3e78:	mov	r1, r7
    3e7c:	mov	r2, r6
    3e80:	bl	18d0 <fread@plt>
    3e84:	mov	r5, r0
    3e88:	cmp	r6, #1
    3e8c:	blt	4bec <ReadDoubleData+0x1474>
    3e90:	ldr	r0, [r4], #4
    3e94:	vmov	s0, r0
    3e98:	vcvt.f64.u32	d16, s0
    3e9c:	vstr	d16, [r8]
    3ea0:	subs	r6, r6, #1
    3ea4:	add	r8, r8, #8
    3ea8:	bne	3e90 <ReadDoubleData+0x718>
    3eac:	b	4bec <ReadDoubleData+0x1474>
    3eb0:	cmp	r6, #256	; 0x100
    3eb4:	bgt	4950 <ReadDoubleData+0x11d8>
    3eb8:	ldr	r0, [sp, #20]
    3ebc:	ldr	r3, [r0]
    3ec0:	add	r4, sp, #24
    3ec4:	mov	r0, r4
    3ec8:	mov	r1, r7
    3ecc:	mov	r2, r6
    3ed0:	bl	18d0 <fread@plt>
    3ed4:	mov	r5, r0
    3ed8:	cmp	r6, #1
    3edc:	blt	4bec <ReadDoubleData+0x1474>
    3ee0:	vldr	s0, [r4]
    3ee4:	vcvt.f64.f32	d16, s0
    3ee8:	vstr	d16, [r8]
    3eec:	subs	r6, r6, #1
    3ef0:	add	r8, r8, #8
    3ef4:	add	r4, r4, #4
    3ef8:	bne	3ee0 <ReadDoubleData+0x768>
    3efc:	b	4bec <ReadDoubleData+0x1474>
    3f00:	cmp	r6, #256	; 0x100
    3f04:	bgt	4a1c <ReadDoubleData+0x12a4>
    3f08:	ldr	r0, [sp, #20]
    3f0c:	ldr	r3, [r0]
    3f10:	add	r4, sp, #24
    3f14:	mov	r0, r4
    3f18:	mov	r1, r7
    3f1c:	mov	r2, r6
    3f20:	bl	18d0 <fread@plt>
    3f24:	mov	r5, r0
    3f28:	cmp	r6, #1
    3f2c:	blt	4bec <ReadDoubleData+0x1474>
    3f30:	ldrd	r0, [r4]
    3f34:	bl	48b60 <__aeabi_l2d>
    3f38:	strd	r0, [r8]
    3f3c:	subs	r6, r6, #1
    3f40:	add	r8, r8, #8
    3f44:	add	r4, r4, #8
    3f48:	bne	3f30 <ReadDoubleData+0x7b8>
    3f4c:	b	4bec <ReadDoubleData+0x1474>
    3f50:	cmp	r6, #256	; 0x100
    3f54:	bgt	4b04 <ReadDoubleData+0x138c>
    3f58:	ldr	r0, [sp, #20]
    3f5c:	ldr	r3, [r0]
    3f60:	add	r4, sp, #24
    3f64:	mov	r0, r4
    3f68:	mov	r1, r7
    3f6c:	mov	r2, r6
    3f70:	bl	18d0 <fread@plt>
    3f74:	mov	r5, r0
    3f78:	cmp	r6, #1
    3f7c:	blt	4bec <ReadDoubleData+0x1474>
    3f80:	ldrd	r0, [r4]
    3f84:	bl	48b4c <__aeabi_ul2d>
    3f88:	strd	r0, [r8]
    3f8c:	subs	r6, r6, #1
    3f90:	add	r8, r8, #8
    3f94:	add	r4, r4, #8
    3f98:	bne	3f80 <ReadDoubleData+0x808>
    3f9c:	b	4bec <ReadDoubleData+0x1474>
    3fa0:	add	r1, r8, #2048	; 0x800
    3fa4:	str	r6, [sp, #4]
    3fa8:	sub	r0, r6, #256	; 0x100
    3fac:	str	r0, [sp, #8]
    3fb0:	mov	r0, #0
    3fb4:	add	r4, sp, #24
    3fb8:	mov	r5, #0
    3fbc:	str	r0, [sp, #12]
    3fc0:	mov	sl, r1
    3fc4:	ldr	r0, [sp, #20]
    3fc8:	ldr	r3, [r0]
    3fcc:	mov	r0, r4
    3fd0:	mov	r1, r7
    3fd4:	mov	r2, #256	; 0x100
    3fd8:	bl	18d0 <fread@plt>
    3fdc:	mov	r6, r0
    3fe0:	mov	r7, r8
    3fe4:	mov	r9, #0
    3fe8:	add	r0, r4, r9
    3fec:	bl	1c50 <Mat_int16Swap>
    3ff0:	vmov	s0, r0
    3ff4:	vcvt.f64.s32	d16, s0
    3ff8:	vstmia	r7!, {d16}
    3ffc:	add	r9, r9, #2
    4000:	cmp	r9, #512	; 0x200
    4004:	bne	3fe8 <ReadDoubleData+0x870>
    4008:	add	r5, r6, r5
    400c:	add	r8, r8, #2048	; 0x800
    4010:	add	r1, sl, #2048	; 0x800
    4014:	ldr	r6, [sp, #12]
    4018:	add	r0, r6, #256	; 0x100
    401c:	ldr	r2, [sp, #8]
    4020:	cmp	r0, r2
    4024:	ldr	r7, [sp, #16]
    4028:	blt	3fbc <ReadDoubleData+0x844>
    402c:	ldr	r1, [sp, #4]
    4030:	cmp	r0, r1
    4034:	bge	4bec <ReadDoubleData+0x1474>
    4038:	sub	r8, r1, r0
    403c:	ldr	r0, [sp, #20]
    4040:	ldr	r3, [r0]
    4044:	add	r4, sp, #24
    4048:	mov	r0, r4
    404c:	mov	r1, r7
    4050:	mov	r2, r8
    4054:	bl	18d0 <fread@plt>
    4058:	add	r5, r0, r5
    405c:	cmp	r8, #1
    4060:	blt	4bec <ReadDoubleData+0x1474>
    4064:	ldr	r0, [sp, #8]
    4068:	sub	r6, r0, r6
    406c:	mov	r0, r4
    4070:	bl	1c50 <Mat_int16Swap>
    4074:	vmov	s0, r0
    4078:	vcvt.f64.s32	d16, s0
    407c:	vstmia	sl!, {d16}
    4080:	subs	r6, r6, #1
    4084:	add	r4, r4, #2
    4088:	bne	406c <ReadDoubleData+0x8f4>
    408c:	b	4bec <ReadDoubleData+0x1474>
    4090:	add	r1, r8, #2048	; 0x800
    4094:	str	r6, [sp, #4]
    4098:	sub	r0, r6, #256	; 0x100
    409c:	str	r0, [sp, #8]
    40a0:	mov	r0, #0
    40a4:	add	r4, sp, #24
    40a8:	mov	r5, #0
    40ac:	str	r0, [sp, #12]
    40b0:	mov	sl, r1
    40b4:	ldr	r0, [sp, #20]
    40b8:	ldr	r3, [r0]
    40bc:	mov	r0, r4
    40c0:	mov	r1, r7
    40c4:	mov	r2, #256	; 0x100
    40c8:	bl	18d0 <fread@plt>
    40cc:	mov	r6, r0
    40d0:	mov	r7, r8
    40d4:	mov	r9, #0
    40d8:	add	r0, r4, r9
    40dc:	bl	1c64 <Mat_uint16Swap>
    40e0:	vmov	s0, r0
    40e4:	vcvt.f64.u32	d16, s0
    40e8:	vstmia	r7!, {d16}
    40ec:	add	r9, r9, #2
    40f0:	cmp	r9, #512	; 0x200
    40f4:	bne	40d8 <ReadDoubleData+0x960>
    40f8:	add	r5, r6, r5
    40fc:	add	r8, r8, #2048	; 0x800
    4100:	add	r1, sl, #2048	; 0x800
    4104:	ldr	r6, [sp, #12]
    4108:	add	r0, r6, #256	; 0x100
    410c:	ldr	r2, [sp, #8]
    4110:	cmp	r0, r2
    4114:	ldr	r7, [sp, #16]
    4118:	blt	40ac <ReadDoubleData+0x934>
    411c:	ldr	r1, [sp, #4]
    4120:	cmp	r0, r1
    4124:	bge	4bec <ReadDoubleData+0x1474>
    4128:	sub	r8, r1, r0
    412c:	ldr	r0, [sp, #20]
    4130:	ldr	r3, [r0]
    4134:	add	r4, sp, #24
    4138:	mov	r0, r4
    413c:	mov	r1, r7
    4140:	mov	r2, r8
    4144:	bl	18d0 <fread@plt>
    4148:	add	r5, r0, r5
    414c:	cmp	r8, #1
    4150:	blt	4bec <ReadDoubleData+0x1474>
    4154:	ldr	r0, [sp, #8]
    4158:	sub	r6, r0, r6
    415c:	mov	r0, r4
    4160:	bl	1c64 <Mat_uint16Swap>
    4164:	vmov	s0, r0
    4168:	vcvt.f64.u32	d16, s0
    416c:	vstmia	sl!, {d16}
    4170:	subs	r6, r6, #1
    4174:	add	r4, r4, #2
    4178:	bne	415c <ReadDoubleData+0x9e4>
    417c:	b	4bec <ReadDoubleData+0x1474>
    4180:	add	r1, r8, #2048	; 0x800
    4184:	str	r6, [sp, #4]
    4188:	sub	r0, r6, #256	; 0x100
    418c:	str	r0, [sp, #8]
    4190:	mov	r0, #0
    4194:	add	r4, sp, #24
    4198:	mov	r5, #0
    419c:	str	r0, [sp, #12]
    41a0:	mov	sl, r1
    41a4:	ldr	r0, [sp, #20]
    41a8:	ldr	r3, [r0]
    41ac:	mov	r0, r4
    41b0:	mov	r1, r7
    41b4:	mov	r2, #256	; 0x100
    41b8:	bl	18d0 <fread@plt>
    41bc:	mov	r6, r0
    41c0:	mov	r7, r8
    41c4:	mov	r9, #0
    41c8:	add	r0, r4, r9
    41cc:	bl	1c28 <Mat_int32Swap>
    41d0:	vmov	s0, r0
    41d4:	vcvt.f64.s32	d16, s0
    41d8:	vstmia	r7!, {d16}
    41dc:	add	r9, r9, #4
    41e0:	cmp	r9, #1024	; 0x400
    41e4:	bne	41c8 <ReadDoubleData+0xa50>
    41e8:	add	r5, r6, r5
    41ec:	add	r8, r8, #2048	; 0x800
    41f0:	add	r1, sl, #2048	; 0x800
    41f4:	ldr	r6, [sp, #12]
    41f8:	add	r0, r6, #256	; 0x100
    41fc:	ldr	r2, [sp, #8]
    4200:	cmp	r0, r2
    4204:	ldr	r7, [sp, #16]
    4208:	blt	419c <ReadDoubleData+0xa24>
    420c:	ldr	r1, [sp, #4]
    4210:	cmp	r0, r1
    4214:	bge	4bec <ReadDoubleData+0x1474>
    4218:	sub	r8, r1, r0
    421c:	ldr	r0, [sp, #20]
    4220:	ldr	r3, [r0]
    4224:	add	r4, sp, #24
    4228:	mov	r0, r4
    422c:	mov	r1, r7
    4230:	mov	r2, r8
    4234:	bl	18d0 <fread@plt>
    4238:	add	r5, r0, r5
    423c:	cmp	r8, #1
    4240:	blt	4bec <ReadDoubleData+0x1474>
    4244:	ldr	r0, [sp, #8]
    4248:	sub	r6, r0, r6
    424c:	mov	r0, r4
    4250:	bl	1c28 <Mat_int32Swap>
    4254:	vmov	s0, r0
    4258:	vcvt.f64.s32	d16, s0
    425c:	vstmia	sl!, {d16}
    4260:	subs	r6, r6, #1
    4264:	add	r4, r4, #4
    4268:	bne	424c <ReadDoubleData+0xad4>
    426c:	b	4bec <ReadDoubleData+0x1474>
    4270:	add	r1, r8, #2048	; 0x800
    4274:	str	r6, [sp, #4]
    4278:	sub	r0, r6, #256	; 0x100
    427c:	str	r0, [sp, #8]
    4280:	mov	r0, #0
    4284:	add	r4, sp, #24
    4288:	mov	r5, #0
    428c:	str	r0, [sp, #12]
    4290:	mov	sl, r1
    4294:	ldr	r0, [sp, #20]
    4298:	ldr	r3, [r0]
    429c:	mov	r0, r4
    42a0:	mov	r1, r7
    42a4:	mov	r2, #256	; 0x100
    42a8:	bl	18d0 <fread@plt>
    42ac:	mov	r6, r0
    42b0:	mov	r7, r8
    42b4:	mov	r9, #0
    42b8:	add	r0, r4, r9
    42bc:	bl	1c3c <Mat_uint32Swap>
    42c0:	vmov	s0, r0
    42c4:	vcvt.f64.u32	d16, s0
    42c8:	vstmia	r7!, {d16}
    42cc:	add	r9, r9, #4
    42d0:	cmp	r9, #1024	; 0x400
    42d4:	bne	42b8 <ReadDoubleData+0xb40>
    42d8:	add	r5, r6, r5
    42dc:	add	r8, r8, #2048	; 0x800
    42e0:	add	r1, sl, #2048	; 0x800
    42e4:	ldr	r6, [sp, #12]
    42e8:	add	r0, r6, #256	; 0x100
    42ec:	ldr	r2, [sp, #8]
    42f0:	cmp	r0, r2
    42f4:	ldr	r7, [sp, #16]
    42f8:	blt	428c <ReadDoubleData+0xb14>
    42fc:	ldr	r1, [sp, #4]
    4300:	cmp	r0, r1
    4304:	bge	4bec <ReadDoubleData+0x1474>
    4308:	sub	r8, r1, r0
    430c:	ldr	r0, [sp, #20]
    4310:	ldr	r3, [r0]
    4314:	add	r4, sp, #24
    4318:	mov	r0, r4
    431c:	mov	r1, r7
    4320:	mov	r2, r8
    4324:	bl	18d0 <fread@plt>
    4328:	add	r5, r0, r5
    432c:	cmp	r8, #1
    4330:	blt	4bec <ReadDoubleData+0x1474>
    4334:	ldr	r0, [sp, #8]
    4338:	sub	r6, r0, r6
    433c:	mov	r0, r4
    4340:	bl	1c3c <Mat_uint32Swap>
    4344:	vmov	s0, r0
    4348:	vcvt.f64.u32	d16, s0
    434c:	vstmia	sl!, {d16}
    4350:	subs	r6, r6, #1
    4354:	add	r4, r4, #4
    4358:	bne	433c <ReadDoubleData+0xbc4>
    435c:	b	4bec <ReadDoubleData+0x1474>
    4360:	add	r1, r8, #2048	; 0x800
    4364:	str	r6, [sp, #4]
    4368:	sub	r0, r6, #256	; 0x100
    436c:	str	r0, [sp, #8]
    4370:	mov	r0, #0
    4374:	add	r4, sp, #24
    4378:	mov	r5, #0
    437c:	str	r0, [sp, #12]
    4380:	mov	sl, r1
    4384:	ldr	r0, [sp, #20]
    4388:	ldr	r3, [r0]
    438c:	mov	r0, r4
    4390:	mov	r1, r7
    4394:	mov	r2, #256	; 0x100
    4398:	bl	18d0 <fread@plt>
    439c:	mov	r6, r0
    43a0:	mov	r7, r8
    43a4:	mov	r9, #0
    43a8:	add	r0, r4, r9
    43ac:	bl	1c7c <Mat_floatSwap>
    43b0:	vcvt.f64.f32	d16, s0
    43b4:	vstmia	r7!, {d16}
    43b8:	add	r9, r9, #4
    43bc:	cmp	r9, #1024	; 0x400
    43c0:	bne	43a8 <ReadDoubleData+0xc30>
    43c4:	add	r5, r6, r5
    43c8:	add	r8, r8, #2048	; 0x800
    43cc:	add	r1, sl, #2048	; 0x800
    43d0:	ldr	r6, [sp, #12]
    43d4:	add	r0, r6, #256	; 0x100
    43d8:	ldr	r2, [sp, #8]
    43dc:	cmp	r0, r2
    43e0:	ldr	r7, [sp, #16]
    43e4:	blt	437c <ReadDoubleData+0xc04>
    43e8:	ldr	r1, [sp, #4]
    43ec:	cmp	r0, r1
    43f0:	bge	4bec <ReadDoubleData+0x1474>
    43f4:	sub	r8, r1, r0
    43f8:	ldr	r0, [sp, #20]
    43fc:	ldr	r3, [r0]
    4400:	add	r4, sp, #24
    4404:	mov	r0, r4
    4408:	mov	r1, r7
    440c:	mov	r2, r8
    4410:	bl	18d0 <fread@plt>
    4414:	add	r5, r0, r5
    4418:	cmp	r8, #1
    441c:	blt	4bec <ReadDoubleData+0x1474>
    4420:	ldr	r0, [sp, #8]
    4424:	sub	r6, r0, r6
    4428:	mov	r0, r4
    442c:	bl	1c7c <Mat_floatSwap>
    4430:	vcvt.f64.f32	d16, s0
    4434:	vstmia	sl!, {d16}
    4438:	subs	r6, r6, #1
    443c:	add	r4, r4, #4
    4440:	bne	4428 <ReadDoubleData+0xcb0>
    4444:	b	4bec <ReadDoubleData+0x1474>
    4448:	add	r1, r8, #2048	; 0x800
    444c:	str	r6, [sp, #4]
    4450:	sub	r0, r6, #256	; 0x100
    4454:	str	r0, [sp, #12]
    4458:	mov	r0, #0
    445c:	add	r4, sp, #24
    4460:	mov	r5, #0
    4464:	mov	r7, r0
    4468:	mov	r6, r1
    446c:	ldr	r0, [sp, #20]
    4470:	ldr	r3, [r0]
    4474:	mov	r0, r4
    4478:	ldr	r1, [sp, #16]
    447c:	mov	r2, #256	; 0x100
    4480:	bl	18d0 <fread@plt>
    4484:	mov	sl, r0
    4488:	mov	r9, #0
    448c:	add	r0, r4, r9
    4490:	bl	1bbc <Mat_int64Swap>
    4494:	bl	48b60 <__aeabi_l2d>
    4498:	mov	r2, r8
    449c:	str	r0, [r2, r9]!
    44a0:	str	r1, [r2, #4]
    44a4:	add	r9, r9, #8
    44a8:	cmp	r9, #2048	; 0x800
    44ac:	bne	448c <ReadDoubleData+0xd14>
    44b0:	add	r5, sl, r5
    44b4:	add	r8, r8, #2048	; 0x800
    44b8:	add	r1, r6, #2048	; 0x800
    44bc:	add	r0, r7, #256	; 0x100
    44c0:	ldr	r2, [sp, #12]
    44c4:	cmp	r0, r2
    44c8:	blt	4464 <ReadDoubleData+0xcec>
    44cc:	ldr	r2, [sp, #4]
    44d0:	cmp	r0, r2
    44d4:	bge	4be8 <ReadDoubleData+0x1470>
    44d8:	sub	r8, r2, r0
    44dc:	ldr	r0, [sp, #20]
    44e0:	ldr	r3, [r0]
    44e4:	add	r4, sp, #24
    44e8:	mov	r0, r4
    44ec:	ldr	r1, [sp, #16]
    44f0:	mov	r2, r8
    44f4:	bl	18d0 <fread@plt>
    44f8:	add	r5, r0, r5
    44fc:	cmp	r8, #1
    4500:	blt	4be8 <ReadDoubleData+0x1470>
    4504:	ldr	r0, [sp, #12]
    4508:	sub	r7, r0, r7
    450c:	mov	r0, r4
    4510:	bl	1bbc <Mat_int64Swap>
    4514:	bl	48b60 <__aeabi_l2d>
    4518:	strd	r0, [r6]
    451c:	add	r6, r6, #8
    4520:	subs	r7, r7, #1
    4524:	add	r4, r4, #8
    4528:	bne	450c <ReadDoubleData+0xd94>
    452c:	b	4be8 <ReadDoubleData+0x1470>
    4530:	add	r1, r8, #2048	; 0x800
    4534:	str	r6, [sp, #4]
    4538:	sub	r0, r6, #256	; 0x100
    453c:	str	r0, [sp, #12]
    4540:	mov	r0, #0
    4544:	add	r4, sp, #24
    4548:	mov	r5, #0
    454c:	mov	r7, r0
    4550:	mov	r6, r1
    4554:	ldr	r0, [sp, #20]
    4558:	ldr	r3, [r0]
    455c:	mov	r0, r4
    4560:	ldr	r1, [sp, #16]
    4564:	mov	r2, #256	; 0x100
    4568:	bl	18d0 <fread@plt>
    456c:	mov	sl, r0
    4570:	mov	r9, #0
    4574:	add	r0, r4, r9
    4578:	bl	1c0c <Mat_uint64Swap>
    457c:	bl	48b4c <__aeabi_ul2d>
    4580:	mov	r2, r8
    4584:	str	r0, [r2, r9]!
    4588:	str	r1, [r2, #4]
    458c:	add	r9, r9, #8
    4590:	cmp	r9, #2048	; 0x800
    4594:	bne	4574 <ReadDoubleData+0xdfc>
    4598:	add	r5, sl, r5
    459c:	add	r8, r8, #2048	; 0x800
    45a0:	add	r1, r6, #2048	; 0x800
    45a4:	add	r0, r7, #256	; 0x100
    45a8:	ldr	r2, [sp, #12]
    45ac:	cmp	r0, r2
    45b0:	blt	454c <ReadDoubleData+0xdd4>
    45b4:	ldr	r2, [sp, #4]
    45b8:	cmp	r0, r2
    45bc:	bge	4be8 <ReadDoubleData+0x1470>
    45c0:	sub	r8, r2, r0
    45c4:	ldr	r0, [sp, #20]
    45c8:	ldr	r3, [r0]
    45cc:	add	r4, sp, #24
    45d0:	mov	r0, r4
    45d4:	ldr	r1, [sp, #16]
    45d8:	mov	r2, r8
    45dc:	bl	18d0 <fread@plt>
    45e0:	add	r5, r0, r5
    45e4:	cmp	r8, #1
    45e8:	blt	4be8 <ReadDoubleData+0x1470>
    45ec:	ldr	r0, [sp, #12]
    45f0:	sub	r7, r0, r7
    45f4:	mov	r0, r4
    45f8:	bl	1c0c <Mat_uint64Swap>
    45fc:	bl	48b4c <__aeabi_ul2d>
    4600:	strd	r0, [r6]
    4604:	add	r6, r6, #8
    4608:	subs	r7, r7, #1
    460c:	add	r4, r4, #8
    4610:	bne	45f4 <ReadDoubleData+0xe7c>
    4614:	b	4be8 <ReadDoubleData+0x1470>
    4618:	add	r1, r8, #2048	; 0x800
    461c:	str	r6, [sp, #4]
    4620:	sub	sl, r6, #256	; 0x100
    4624:	mov	r0, #0
    4628:	add	r4, sp, #24
    462c:	mov	r5, #0
    4630:	mov	r9, r0
    4634:	mov	r6, r1
    4638:	ldr	r0, [sp, #20]
    463c:	ldr	r3, [r0]
    4640:	mov	r0, r4
    4644:	mov	r1, r7
    4648:	mov	r2, #256	; 0x100
    464c:	bl	18d0 <fread@plt>
    4650:	mov	r1, r8
    4654:	mov	r2, #0
    4658:	add	r3, r4, r2
    465c:	ldrsh	r3, [r3]
    4660:	vmov	s0, r3
    4664:	vcvt.f64.s32	d16, s0
    4668:	vstmia	r1!, {d16}
    466c:	add	r2, r2, #2
    4670:	cmp	r2, #512	; 0x200
    4674:	bne	4658 <ReadDoubleData+0xee0>
    4678:	add	r5, r0, r5
    467c:	add	r8, r8, #2048	; 0x800
    4680:	add	r1, r6, #2048	; 0x800
    4684:	add	r0, r9, #256	; 0x100
    4688:	cmp	r0, sl
    468c:	blt	4630 <ReadDoubleData+0xeb8>
    4690:	ldr	r2, [sp, #4]
    4694:	cmp	r0, r2
    4698:	bge	4bec <ReadDoubleData+0x1474>
    469c:	mov	r1, r7
    46a0:	sub	r7, r2, r0
    46a4:	ldr	r0, [sp, #20]
    46a8:	ldr	r3, [r0]
    46ac:	add	r4, sp, #24
    46b0:	mov	r0, r4
    46b4:	mov	r2, r7
    46b8:	bl	18d0 <fread@plt>
    46bc:	add	r5, r0, r5
    46c0:	cmp	r7, #1
    46c4:	blt	4be8 <ReadDoubleData+0x1470>
    46c8:	sub	r0, sl, r9
    46cc:	ldrsh	r1, [r4], #2
    46d0:	vmov	s0, r1
    46d4:	vcvt.f64.s32	d16, s0
    46d8:	vstmia	r6!, {d16}
    46dc:	subs	r0, r0, #1
    46e0:	bne	46cc <ReadDoubleData+0xf54>
    46e4:	b	4be8 <ReadDoubleData+0x1470>
    46e8:	add	r1, r8, #2048	; 0x800
    46ec:	str	r6, [sp, #4]
    46f0:	sub	sl, r6, #256	; 0x100
    46f4:	mov	r0, #0
    46f8:	add	r4, sp, #24
    46fc:	mov	r5, #0
    4700:	mov	r9, r0
    4704:	mov	r6, r1
    4708:	ldr	r0, [sp, #20]
    470c:	ldr	r3, [r0]
    4710:	mov	r0, r4
    4714:	mov	r1, r7
    4718:	mov	r2, #256	; 0x100
    471c:	bl	18d0 <fread@plt>
    4720:	mov	r1, r8
    4724:	mov	r2, #0
    4728:	add	r3, r4, r2
    472c:	ldrh	r3, [r3]
    4730:	vmov	s0, r3
    4734:	vcvt.f64.u32	d16, s0
    4738:	vstmia	r1!, {d16}
    473c:	add	r2, r2, #2
    4740:	cmp	r2, #512	; 0x200
    4744:	bne	4728 <ReadDoubleData+0xfb0>
    4748:	add	r5, r0, r5
    474c:	add	r8, r8, #2048	; 0x800
    4750:	add	r1, r6, #2048	; 0x800
    4754:	add	r0, r9, #256	; 0x100
    4758:	cmp	r0, sl
    475c:	blt	4700 <ReadDoubleData+0xf88>
    4760:	ldr	r2, [sp, #4]
    4764:	cmp	r0, r2
    4768:	bge	4bec <ReadDoubleData+0x1474>
    476c:	mov	r1, r7
    4770:	sub	r7, r2, r0
    4774:	ldr	r0, [sp, #20]
    4778:	ldr	r3, [r0]
    477c:	add	r4, sp, #24
    4780:	mov	r0, r4
    4784:	mov	r2, r7
    4788:	bl	18d0 <fread@plt>
    478c:	add	r5, r0, r5
    4790:	cmp	r7, #1
    4794:	blt	4be8 <ReadDoubleData+0x1470>
    4798:	sub	r0, sl, r9
    479c:	ldrh	r1, [r4], #2
    47a0:	vmov	s0, r1
    47a4:	vcvt.f64.u32	d16, s0
    47a8:	vstmia	r6!, {d16}
    47ac:	subs	r0, r0, #1
    47b0:	bne	479c <ReadDoubleData+0x1024>
    47b4:	b	4be8 <ReadDoubleData+0x1470>
    47b8:	add	r1, r8, #2048	; 0x800
    47bc:	str	r6, [sp, #4]
    47c0:	sub	sl, r6, #256	; 0x100
    47c4:	mov	r0, #0
    47c8:	add	r4, sp, #24
    47cc:	mov	r5, #0
    47d0:	mov	r9, r0
    47d4:	mov	r6, r1
    47d8:	ldr	r0, [sp, #20]
    47dc:	ldr	r3, [r0]
    47e0:	mov	r0, r4
    47e4:	mov	r1, r7
    47e8:	mov	r2, #256	; 0x100
    47ec:	bl	18d0 <fread@plt>
    47f0:	mov	r1, r8
    47f4:	mov	r2, #0
    47f8:	add	r3, r4, r2, lsl #2
    47fc:	vldr	s0, [r3]
    4800:	vcvt.f64.s32	d16, s0
    4804:	vstmia	r1!, {d16}
    4808:	add	r2, r2, #1
    480c:	cmp	r2, #256	; 0x100
    4810:	bne	47f8 <ReadDoubleData+0x1080>
    4814:	add	r5, r0, r5
    4818:	add	r8, r8, #2048	; 0x800
    481c:	add	r1, r6, #2048	; 0x800
    4820:	add	r0, r9, #256	; 0x100
    4824:	cmp	r0, sl
    4828:	blt	47d0 <ReadDoubleData+0x1058>
    482c:	ldr	r2, [sp, #4]
    4830:	cmp	r0, r2
    4834:	bge	4bec <ReadDoubleData+0x1474>
    4838:	mov	r1, r7
    483c:	sub	r7, r2, r0
    4840:	ldr	r0, [sp, #20]
    4844:	ldr	r3, [r0]
    4848:	add	r4, sp, #24
    484c:	mov	r0, r4
    4850:	mov	r2, r7
    4854:	bl	18d0 <fread@plt>
    4858:	add	r5, r0, r5
    485c:	cmp	r7, #1
    4860:	blt	4be8 <ReadDoubleData+0x1470>
    4864:	sub	r0, sl, r9
    4868:	ldr	r1, [r4], #4
    486c:	vmov	s0, r1
    4870:	vcvt.f64.s32	d16, s0
    4874:	vstmia	r6!, {d16}
    4878:	subs	r0, r0, #1
    487c:	bne	4868 <ReadDoubleData+0x10f0>
    4880:	b	4be8 <ReadDoubleData+0x1470>
    4884:	add	r1, r8, #2048	; 0x800
    4888:	str	r6, [sp, #4]
    488c:	sub	sl, r6, #256	; 0x100
    4890:	mov	r0, #0
    4894:	add	r4, sp, #24
    4898:	mov	r5, #0
    489c:	mov	r9, r0
    48a0:	mov	r6, r1
    48a4:	ldr	r0, [sp, #20]
    48a8:	ldr	r3, [r0]
    48ac:	mov	r0, r4
    48b0:	mov	r1, r7
    48b4:	mov	r2, #256	; 0x100
    48b8:	bl	18d0 <fread@plt>
    48bc:	mov	r1, r8
    48c0:	mov	r2, #0
    48c4:	add	r3, r4, r2, lsl #2
    48c8:	vldr	s0, [r3]
    48cc:	vcvt.f64.u32	d16, s0
    48d0:	vstmia	r1!, {d16}
    48d4:	add	r2, r2, #1
    48d8:	cmp	r2, #256	; 0x100
    48dc:	bne	48c4 <ReadDoubleData+0x114c>
    48e0:	add	r5, r0, r5
    48e4:	add	r8, r8, #2048	; 0x800
    48e8:	add	r1, r6, #2048	; 0x800
    48ec:	add	r0, r9, #256	; 0x100
    48f0:	cmp	r0, sl
    48f4:	blt	489c <ReadDoubleData+0x1124>
    48f8:	ldr	r2, [sp, #4]
    48fc:	cmp	r0, r2
    4900:	bge	4bec <ReadDoubleData+0x1474>
    4904:	mov	r1, r7
    4908:	sub	r7, r2, r0
    490c:	ldr	r0, [sp, #20]
    4910:	ldr	r3, [r0]
    4914:	add	r4, sp, #24
    4918:	mov	r0, r4
    491c:	mov	r2, r7
    4920:	bl	18d0 <fread@plt>
    4924:	add	r5, r0, r5
    4928:	cmp	r7, #1
    492c:	blt	4be8 <ReadDoubleData+0x1470>
    4930:	sub	r0, sl, r9
    4934:	ldr	r1, [r4], #4
    4938:	vmov	s0, r1
    493c:	vcvt.f64.u32	d16, s0
    4940:	vstmia	r6!, {d16}
    4944:	subs	r0, r0, #1
    4948:	bne	4934 <ReadDoubleData+0x11bc>
    494c:	b	4be8 <ReadDoubleData+0x1470>
    4950:	add	r1, r8, #2048	; 0x800
    4954:	str	r6, [sp, #4]
    4958:	sub	sl, r6, #256	; 0x100
    495c:	mov	r0, #0
    4960:	add	r4, sp, #24
    4964:	mov	r5, #0
    4968:	mov	r9, r0
    496c:	mov	r6, r1
    4970:	ldr	r0, [sp, #20]
    4974:	ldr	r3, [r0]
    4978:	mov	r0, r4
    497c:	mov	r1, r7
    4980:	mov	r2, #256	; 0x100
    4984:	bl	18d0 <fread@plt>
    4988:	mov	r1, r8
    498c:	mov	r2, #0
    4990:	add	r3, r4, r2
    4994:	vldr	s0, [r3]
    4998:	vcvt.f64.f32	d16, s0
    499c:	vstmia	r1!, {d16}
    49a0:	add	r2, r2, #4
    49a4:	cmp	r2, #1024	; 0x400
    49a8:	bne	4990 <ReadDoubleData+0x1218>
    49ac:	add	r5, r0, r5
    49b0:	add	r8, r8, #2048	; 0x800
    49b4:	add	r1, r6, #2048	; 0x800
    49b8:	add	r0, r9, #256	; 0x100
    49bc:	cmp	r0, sl
    49c0:	blt	4968 <ReadDoubleData+0x11f0>
    49c4:	ldr	r2, [sp, #4]
    49c8:	cmp	r0, r2
    49cc:	bge	4bec <ReadDoubleData+0x1474>
    49d0:	mov	r1, r7
    49d4:	sub	r7, r2, r0
    49d8:	ldr	r0, [sp, #20]
    49dc:	ldr	r3, [r0]
    49e0:	add	r4, sp, #24
    49e4:	mov	r0, r4
    49e8:	mov	r2, r7
    49ec:	bl	18d0 <fread@plt>
    49f0:	add	r5, r0, r5
    49f4:	cmp	r7, #1
    49f8:	blt	4be8 <ReadDoubleData+0x1470>
    49fc:	sub	r0, sl, r9
    4a00:	vldr	s0, [r4]
    4a04:	vcvt.f64.f32	d16, s0
    4a08:	vstmia	r6!, {d16}
    4a0c:	subs	r0, r0, #1
    4a10:	add	r4, r4, #4
    4a14:	bne	4a00 <ReadDoubleData+0x1288>
    4a18:	b	4be8 <ReadDoubleData+0x1470>
    4a1c:	add	r1, r8, #2048	; 0x800
    4a20:	str	r6, [sp, #4]
    4a24:	sub	r0, r6, #256	; 0x100
    4a28:	str	r0, [sp, #12]
    4a2c:	mov	r0, #0
    4a30:	add	r4, sp, #24
    4a34:	mov	r5, #0
    4a38:	mov	r7, r0
    4a3c:	mov	sl, r1
    4a40:	ldr	r0, [sp, #20]
    4a44:	ldr	r3, [r0]
    4a48:	mov	r0, r4
    4a4c:	ldr	r1, [sp, #16]
    4a50:	mov	r2, #256	; 0x100
    4a54:	bl	18d0 <fread@plt>
    4a58:	mov	r6, r0
    4a5c:	mov	r9, #0
    4a60:	ldr	r0, [r4, r9]
    4a64:	add	r1, r4, r9
    4a68:	ldr	r1, [r1, #4]
    4a6c:	bl	48b60 <__aeabi_l2d>
    4a70:	mov	r2, r8
    4a74:	str	r0, [r2, r9]!
    4a78:	str	r1, [r2, #4]
    4a7c:	add	r9, r9, #8
    4a80:	cmp	r9, #2048	; 0x800
    4a84:	bne	4a60 <ReadDoubleData+0x12e8>
    4a88:	add	r5, r6, r5
    4a8c:	add	r8, r8, #2048	; 0x800
    4a90:	add	r1, sl, #2048	; 0x800
    4a94:	add	r0, r7, #256	; 0x100
    4a98:	ldr	r2, [sp, #12]
    4a9c:	cmp	r0, r2
    4aa0:	blt	4a38 <ReadDoubleData+0x12c0>
    4aa4:	ldr	r1, [sp, #4]
    4aa8:	cmp	r0, r1
    4aac:	bge	4be8 <ReadDoubleData+0x1470>
    4ab0:	sub	r6, r1, r0
    4ab4:	ldr	r0, [sp, #20]
    4ab8:	ldr	r3, [r0]
    4abc:	add	r4, sp, #24
    4ac0:	mov	r0, r4
    4ac4:	ldr	r1, [sp, #16]
    4ac8:	mov	r2, r6
    4acc:	bl	18d0 <fread@plt>
    4ad0:	add	r5, r0, r5
    4ad4:	cmp	r6, #1
    4ad8:	blt	4be8 <ReadDoubleData+0x1470>
    4adc:	ldr	r0, [sp, #12]
    4ae0:	sub	r6, r0, r7
    4ae4:	ldrd	r0, [r4]
    4ae8:	bl	48b60 <__aeabi_l2d>
    4aec:	strd	r0, [sl]
    4af0:	add	sl, sl, #8
    4af4:	subs	r6, r6, #1
    4af8:	add	r4, r4, #8
    4afc:	bne	4ae4 <ReadDoubleData+0x136c>
    4b00:	b	4be8 <ReadDoubleData+0x1470>
    4b04:	add	r1, r8, #2048	; 0x800
    4b08:	str	r6, [sp, #4]
    4b0c:	sub	r0, r6, #256	; 0x100
    4b10:	str	r0, [sp, #12]
    4b14:	mov	r0, #0
    4b18:	add	r4, sp, #24
    4b1c:	mov	r5, #0
    4b20:	mov	r7, r0
    4b24:	mov	sl, r1
    4b28:	ldr	r0, [sp, #20]
    4b2c:	ldr	r3, [r0]
    4b30:	mov	r0, r4
    4b34:	ldr	r1, [sp, #16]
    4b38:	mov	r2, #256	; 0x100
    4b3c:	bl	18d0 <fread@plt>
    4b40:	mov	r6, r0
    4b44:	mov	r9, #0
    4b48:	ldr	r0, [r4, r9]
    4b4c:	add	r1, r4, r9
    4b50:	ldr	r1, [r1, #4]
    4b54:	bl	48b4c <__aeabi_ul2d>
    4b58:	mov	r2, r8
    4b5c:	str	r0, [r2, r9]!
    4b60:	str	r1, [r2, #4]
    4b64:	add	r9, r9, #8
    4b68:	cmp	r9, #2048	; 0x800
    4b6c:	bne	4b48 <ReadDoubleData+0x13d0>
    4b70:	add	r5, r6, r5
    4b74:	add	r8, r8, #2048	; 0x800
    4b78:	add	r1, sl, #2048	; 0x800
    4b7c:	add	r0, r7, #256	; 0x100
    4b80:	ldr	r2, [sp, #12]
    4b84:	cmp	r0, r2
    4b88:	blt	4b20 <ReadDoubleData+0x13a8>
    4b8c:	ldr	r1, [sp, #4]
    4b90:	cmp	r0, r1
    4b94:	bge	4be8 <ReadDoubleData+0x1470>
    4b98:	sub	r6, r1, r0
    4b9c:	ldr	r0, [sp, #20]
    4ba0:	ldr	r3, [r0]
    4ba4:	add	r4, sp, #24
    4ba8:	mov	r0, r4
    4bac:	ldr	r1, [sp, #16]
    4bb0:	mov	r2, r6
    4bb4:	bl	18d0 <fread@plt>
    4bb8:	add	r5, r0, r5
    4bbc:	cmp	r6, #1
    4bc0:	blt	4be8 <ReadDoubleData+0x1470>
    4bc4:	ldr	r0, [sp, #12]
    4bc8:	sub	r6, r0, r7
    4bcc:	ldrd	r0, [r4]
    4bd0:	bl	48b4c <__aeabi_ul2d>
    4bd4:	strd	r0, [sl]
    4bd8:	add	sl, sl, #8
    4bdc:	subs	r6, r6, #1
    4be0:	add	r4, r4, #8
    4be4:	bne	4bcc <ReadDoubleData+0x1454>
    4be8:	ldr	r7, [sp, #16]
    4bec:	mul	r4, r5, r7
    4bf0:	b	37a0 <ReadDoubleData+0x28>

00004bf4 <ReadCompressedDoubleData>:
    4bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4bf8:	add	fp, sp, #28
    4bfc:	sub	sp, sp, #20
    4c00:	sub	sp, sp, #1024	; 0x400
    4c04:	mov	r4, r3
    4c08:	mov	r8, r2
    4c0c:	str	r1, [sp, #8]
    4c10:	str	r0, [sp, #12]
    4c14:	mov	r0, r3
    4c18:	bl	193c <Mat_SizeOf@plt>
    4c1c:	mov	r5, r0
    4c20:	sub	r1, r4, #1
    4c24:	mov	r0, #0
    4c28:	cmp	r1, #12
    4c2c:	bhi	5e98 <ReadCompressedDoubleData+0x12a4>
    4c30:	ldr	r7, [fp, #8]
    4c34:	add	r2, pc, #4
    4c38:	ldr	r1, [r2, r1, lsl #2]
    4c3c:	add	pc, r2, r1
    4c40:	.word	0x00000034
    4c44:	.word	0x00000084
    4c48:	.word	0x000000d0
    4c4c:	.word	0x00000134
    4c50:	.word	0x00000198
    4c54:	.word	0x000001fc
    4c58:	.word	0x00000260
    4c5c:	.word	0x00001258
    4c60:	.word	0x000002c0
    4c64:	.word	0x00001258
    4c68:	.word	0x00001258
    4c6c:	.word	0x00000304
    4c70:	.word	0x00000364
    4c74:	cmp	r7, #1024	; 0x400
    4c78:	bgt	5004 <ReadCompressedDoubleData+0x410>
    4c7c:	mul	r3, r5, r7
    4c80:	add	r4, sp, #16
    4c84:	ldr	r0, [sp, #12]
    4c88:	ldr	r1, [sp, #8]
    4c8c:	mov	r2, r4
    4c90:	bl	31e4 <InflateData>
    4c94:	cmp	r7, #1
    4c98:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4c9c:	mov	r0, #0
    4ca0:	add	r1, r4, r0
    4ca4:	ldrsb	r1, [r1]
    4ca8:	vmov	s0, r1
    4cac:	vcvt.f64.s32	d16, s0
    4cb0:	vstmia	r8!, {d16}
    4cb4:	add	r0, r0, #1
    4cb8:	cmp	r7, r0
    4cbc:	bne	4ca0 <ReadCompressedDoubleData+0xac>
    4cc0:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4cc4:	cmp	r7, #1024	; 0x400
    4cc8:	bgt	50c0 <ReadCompressedDoubleData+0x4cc>
    4ccc:	mul	r3, r5, r7
    4cd0:	add	r4, sp, #16
    4cd4:	ldr	r0, [sp, #12]
    4cd8:	ldr	r1, [sp, #8]
    4cdc:	mov	r2, r4
    4ce0:	bl	31e4 <InflateData>
    4ce4:	cmp	r7, #1
    4ce8:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4cec:	mov	r0, #0
    4cf0:	ldrb	r1, [r4, r0]
    4cf4:	vmov	s0, r1
    4cf8:	vcvt.f64.u32	d16, s0
    4cfc:	vstmia	r8!, {d16}
    4d00:	add	r0, r0, #1
    4d04:	cmp	r7, r0
    4d08:	bne	4cf0 <ReadCompressedDoubleData+0xfc>
    4d0c:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4d10:	ldr	r0, [sp, #12]
    4d14:	ldr	r0, [r0, #20]
    4d18:	cmp	r0, #0
    4d1c:	beq	5178 <ReadCompressedDoubleData+0x584>
    4d20:	cmp	r7, #512	; 0x200
    4d24:	bgt	538c <ReadCompressedDoubleData+0x798>
    4d28:	mul	r3, r5, r7
    4d2c:	add	r4, sp, #16
    4d30:	ldr	r0, [sp, #12]
    4d34:	ldr	r1, [sp, #8]
    4d38:	mov	r2, r4
    4d3c:	bl	31e4 <InflateData>
    4d40:	cmp	r7, #1
    4d44:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4d48:	mov	r6, r7
    4d4c:	mov	r0, r4
    4d50:	bl	1c50 <Mat_int16Swap>
    4d54:	vmov	s0, r0
    4d58:	vcvt.f64.s32	d16, s0
    4d5c:	vstr	d16, [r8]
    4d60:	subs	r6, r6, #1
    4d64:	add	r8, r8, #8
    4d68:	add	r4, r4, #2
    4d6c:	bne	4d4c <ReadCompressedDoubleData+0x158>
    4d70:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4d74:	ldr	r0, [sp, #12]
    4d78:	ldr	r0, [r0, #20]
    4d7c:	cmp	r0, #0
    4d80:	beq	51c4 <ReadCompressedDoubleData+0x5d0>
    4d84:	cmp	r7, #512	; 0x200
    4d88:	bgt	545c <ReadCompressedDoubleData+0x868>
    4d8c:	mul	r3, r5, r7
    4d90:	add	r4, sp, #16
    4d94:	ldr	r0, [sp, #12]
    4d98:	ldr	r1, [sp, #8]
    4d9c:	mov	r2, r4
    4da0:	bl	31e4 <InflateData>
    4da4:	cmp	r7, #1
    4da8:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4dac:	mov	r6, r7
    4db0:	mov	r0, r4
    4db4:	bl	1c64 <Mat_uint16Swap>
    4db8:	vmov	s0, r0
    4dbc:	vcvt.f64.u32	d16, s0
    4dc0:	vstr	d16, [r8]
    4dc4:	subs	r6, r6, #1
    4dc8:	add	r8, r8, #8
    4dcc:	add	r4, r4, #2
    4dd0:	bne	4db0 <ReadCompressedDoubleData+0x1bc>
    4dd4:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4dd8:	ldr	r0, [sp, #12]
    4ddc:	ldr	r0, [r0, #20]
    4de0:	cmp	r0, #0
    4de4:	beq	5210 <ReadCompressedDoubleData+0x61c>
    4de8:	cmp	r7, #256	; 0x100
    4dec:	bgt	552c <ReadCompressedDoubleData+0x938>
    4df0:	mul	r3, r5, r7
    4df4:	add	r4, sp, #16
    4df8:	ldr	r0, [sp, #12]
    4dfc:	ldr	r1, [sp, #8]
    4e00:	mov	r2, r4
    4e04:	bl	31e4 <InflateData>
    4e08:	cmp	r7, #1
    4e0c:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4e10:	mov	r6, r7
    4e14:	mov	r0, r4
    4e18:	bl	1c28 <Mat_int32Swap>
    4e1c:	vmov	s0, r0
    4e20:	vcvt.f64.s32	d16, s0
    4e24:	vstr	d16, [r8]
    4e28:	subs	r6, r6, #1
    4e2c:	add	r8, r8, #8
    4e30:	add	r4, r4, #4
    4e34:	bne	4e14 <ReadCompressedDoubleData+0x220>
    4e38:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4e3c:	ldr	r0, [sp, #12]
    4e40:	ldr	r0, [r0, #20]
    4e44:	cmp	r0, #0
    4e48:	beq	525c <ReadCompressedDoubleData+0x668>
    4e4c:	cmp	r7, #256	; 0x100
    4e50:	bgt	55fc <ReadCompressedDoubleData+0xa08>
    4e54:	mul	r3, r5, r7
    4e58:	add	r4, sp, #16
    4e5c:	ldr	r0, [sp, #12]
    4e60:	ldr	r1, [sp, #8]
    4e64:	mov	r2, r4
    4e68:	bl	31e4 <InflateData>
    4e6c:	cmp	r7, #1
    4e70:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4e74:	mov	r6, r7
    4e78:	mov	r0, r4
    4e7c:	bl	1c3c <Mat_uint32Swap>
    4e80:	vmov	s0, r0
    4e84:	vcvt.f64.u32	d16, s0
    4e88:	vstr	d16, [r8]
    4e8c:	subs	r6, r6, #1
    4e90:	add	r8, r8, #8
    4e94:	add	r4, r4, #4
    4e98:	bne	4e78 <ReadCompressedDoubleData+0x284>
    4e9c:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4ea0:	ldr	r0, [sp, #12]
    4ea4:	ldr	r0, [r0, #20]
    4ea8:	cmp	r0, #0
    4eac:	beq	52a8 <ReadCompressedDoubleData+0x6b4>
    4eb0:	cmp	r7, #256	; 0x100
    4eb4:	bgt	56cc <ReadCompressedDoubleData+0xad8>
    4eb8:	mul	r3, r5, r7
    4ebc:	add	r4, sp, #16
    4ec0:	ldr	r0, [sp, #12]
    4ec4:	ldr	r1, [sp, #8]
    4ec8:	mov	r2, r4
    4ecc:	bl	31e4 <InflateData>
    4ed0:	cmp	r7, #1
    4ed4:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4ed8:	mov	r6, r7
    4edc:	mov	r0, r4
    4ee0:	bl	1c7c <Mat_floatSwap>
    4ee4:	vcvt.f64.f32	d16, s0
    4ee8:	vstr	d16, [r8]
    4eec:	subs	r6, r6, #1
    4ef0:	add	r8, r8, #8
    4ef4:	add	r4, r4, #4
    4ef8:	bne	4edc <ReadCompressedDoubleData+0x2e8>
    4efc:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4f00:	mul	r3, r5, r7
    4f04:	ldr	r0, [sp, #12]
    4f08:	ldr	r4, [r0, #20]
    4f0c:	ldr	r1, [sp, #8]
    4f10:	mov	r2, r8
    4f14:	bl	31e4 <InflateData>
    4f18:	cmp	r4, #0
    4f1c:	beq	5e94 <ReadCompressedDoubleData+0x12a0>
    4f20:	cmp	r7, #1
    4f24:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4f28:	mov	r4, r7
    4f2c:	mov	r0, r8
    4f30:	bl	1cc0 <Mat_doubleSwap>
    4f34:	subs	r4, r4, #1
    4f38:	add	r8, r8, #8
    4f3c:	bne	4f2c <ReadCompressedDoubleData+0x338>
    4f40:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4f44:	ldr	r0, [sp, #12]
    4f48:	ldr	r0, [r0, #20]
    4f4c:	cmp	r0, #0
    4f50:	beq	52f4 <ReadCompressedDoubleData+0x700>
    4f54:	cmp	r7, #128	; 0x80
    4f58:	bgt	5798 <ReadCompressedDoubleData+0xba4>
    4f5c:	mul	r3, r5, r7
    4f60:	add	r4, sp, #16
    4f64:	ldr	r0, [sp, #12]
    4f68:	ldr	r1, [sp, #8]
    4f6c:	mov	r2, r4
    4f70:	bl	31e4 <InflateData>
    4f74:	cmp	r7, #1
    4f78:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4f7c:	mov	r6, r7
    4f80:	mov	r0, r4
    4f84:	bl	1bbc <Mat_int64Swap>
    4f88:	bl	48b60 <__aeabi_l2d>
    4f8c:	strd	r0, [r8]
    4f90:	add	r4, r4, #8
    4f94:	subs	r6, r6, #1
    4f98:	add	r8, r8, #8
    4f9c:	bne	4f80 <ReadCompressedDoubleData+0x38c>
    4fa0:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    4fa4:	ldr	r0, [sp, #12]
    4fa8:	ldr	r0, [r0, #20]
    4fac:	cmp	r0, #0
    4fb0:	beq	5340 <ReadCompressedDoubleData+0x74c>
    4fb4:	cmp	r7, #128	; 0x80
    4fb8:	bgt	5868 <ReadCompressedDoubleData+0xc74>
    4fbc:	mul	r3, r5, r7
    4fc0:	add	r4, sp, #16
    4fc4:	ldr	r0, [sp, #12]
    4fc8:	ldr	r1, [sp, #8]
    4fcc:	mov	r2, r4
    4fd0:	bl	31e4 <InflateData>
    4fd4:	cmp	r7, #1
    4fd8:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    4fdc:	mov	r6, r7
    4fe0:	mov	r0, r4
    4fe4:	bl	1c0c <Mat_uint64Swap>
    4fe8:	bl	48b4c <__aeabi_ul2d>
    4fec:	strd	r0, [r8]
    4ff0:	add	r4, r4, #8
    4ff4:	subs	r6, r6, #1
    4ff8:	add	r8, r8, #8
    4ffc:	bne	4fe0 <ReadCompressedDoubleData+0x3ec>
    5000:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    5004:	add	r0, r8, #8192	; 0x2000
    5008:	lsl	r4, r5, #10
    500c:	sub	r9, r7, #1024	; 0x400
    5010:	mov	r1, #0
    5014:	add	r6, sp, #16
    5018:	mov	sl, r1
    501c:	mov	r7, r0
    5020:	ldr	r0, [sp, #12]
    5024:	ldr	r1, [sp, #8]
    5028:	mov	r2, r6
    502c:	mov	r3, r4
    5030:	bl	31e4 <InflateData>
    5034:	mov	r0, r8
    5038:	mov	r1, #0
    503c:	add	r2, r6, r1
    5040:	ldrsb	r2, [r2]
    5044:	vmov	s0, r2
    5048:	vcvt.f64.s32	d16, s0
    504c:	vstmia	r0!, {d16}
    5050:	add	r1, r1, #1
    5054:	cmp	r1, #1024	; 0x400
    5058:	bne	503c <ReadCompressedDoubleData+0x448>
    505c:	add	r8, r8, #8192	; 0x2000
    5060:	add	r0, r7, #8192	; 0x2000
    5064:	add	r1, sl, #1024	; 0x400
    5068:	cmp	r1, r9
    506c:	blt	5018 <ReadCompressedDoubleData+0x424>
    5070:	ldr	r0, [fp, #8]
    5074:	mov	r6, r0
    5078:	sub	r6, r0, r1
    507c:	mul	r3, r6, r5
    5080:	add	r4, sp, #16
    5084:	ldr	r0, [sp, #12]
    5088:	ldr	r1, [sp, #8]
    508c:	mov	r2, r4
    5090:	bl	31e4 <InflateData>
    5094:	mov	r2, r6
    5098:	cmp	r6, #1
    509c:	blt	5c2c <ReadCompressedDoubleData+0x1038>
    50a0:	sub	r0, r9, sl
    50a4:	ldrsb	r1, [r4], #1
    50a8:	vmov	s0, r1
    50ac:	vcvt.f64.s32	d16, s0
    50b0:	vstmia	r7!, {d16}
    50b4:	subs	r0, r0, #1
    50b8:	bne	50a4 <ReadCompressedDoubleData+0x4b0>
    50bc:	b	5c2c <ReadCompressedDoubleData+0x1038>
    50c0:	add	r0, r8, #8192	; 0x2000
    50c4:	lsl	r4, r5, #10
    50c8:	sub	r9, r7, #1024	; 0x400
    50cc:	mov	r1, #0
    50d0:	add	r6, sp, #16
    50d4:	mov	sl, r1
    50d8:	mov	r7, r0
    50dc:	ldr	r0, [sp, #12]
    50e0:	ldr	r1, [sp, #8]
    50e4:	mov	r2, r6
    50e8:	mov	r3, r4
    50ec:	bl	31e4 <InflateData>
    50f0:	mov	r0, r8
    50f4:	mov	r1, #0
    50f8:	ldrb	r2, [r6, r1]
    50fc:	vmov	s0, r2
    5100:	vcvt.f64.u32	d16, s0
    5104:	vstmia	r0!, {d16}
    5108:	add	r1, r1, #1
    510c:	cmp	r1, #1024	; 0x400
    5110:	bne	50f8 <ReadCompressedDoubleData+0x504>
    5114:	add	r8, r8, #8192	; 0x2000
    5118:	add	r0, r7, #8192	; 0x2000
    511c:	add	r1, sl, #1024	; 0x400
    5120:	cmp	r1, r9
    5124:	blt	50d4 <ReadCompressedDoubleData+0x4e0>
    5128:	ldr	r0, [fp, #8]
    512c:	mov	r6, r0
    5130:	sub	r6, r0, r1
    5134:	mul	r3, r6, r5
    5138:	add	r4, sp, #16
    513c:	ldr	r0, [sp, #12]
    5140:	ldr	r1, [sp, #8]
    5144:	mov	r2, r4
    5148:	bl	31e4 <InflateData>
    514c:	mov	r2, r6
    5150:	cmp	r6, #1
    5154:	blt	5c2c <ReadCompressedDoubleData+0x1038>
    5158:	sub	r0, r9, sl
    515c:	ldrb	r1, [r4], #1
    5160:	vmov	s0, r1
    5164:	vcvt.f64.u32	d16, s0
    5168:	vstmia	r7!, {d16}
    516c:	subs	r0, r0, #1
    5170:	bne	515c <ReadCompressedDoubleData+0x568>
    5174:	b	5c2c <ReadCompressedDoubleData+0x1038>
    5178:	cmp	r7, #512	; 0x200
    517c:	bgt	5938 <ReadCompressedDoubleData+0xd44>
    5180:	mul	r3, r5, r7
    5184:	add	r4, sp, #16
    5188:	ldr	r0, [sp, #12]
    518c:	ldr	r1, [sp, #8]
    5190:	mov	r2, r4
    5194:	bl	31e4 <InflateData>
    5198:	cmp	r7, #1
    519c:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    51a0:	mov	r0, r7
    51a4:	ldrsh	r1, [r4], #2
    51a8:	vmov	s0, r1
    51ac:	vcvt.f64.s32	d16, s0
    51b0:	vstr	d16, [r8]
    51b4:	subs	r0, r0, #1
    51b8:	add	r8, r8, #8
    51bc:	bne	51a4 <ReadCompressedDoubleData+0x5b0>
    51c0:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    51c4:	cmp	r7, #512	; 0x200
    51c8:	bgt	59fc <ReadCompressedDoubleData+0xe08>
    51cc:	mul	r3, r5, r7
    51d0:	add	r4, sp, #16
    51d4:	ldr	r0, [sp, #12]
    51d8:	ldr	r1, [sp, #8]
    51dc:	mov	r2, r4
    51e0:	bl	31e4 <InflateData>
    51e4:	cmp	r7, #1
    51e8:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    51ec:	mov	r0, r7
    51f0:	ldrh	r1, [r4], #2
    51f4:	vmov	s0, r1
    51f8:	vcvt.f64.u32	d16, s0
    51fc:	vstr	d16, [r8]
    5200:	subs	r0, r0, #1
    5204:	add	r8, r8, #8
    5208:	bne	51f0 <ReadCompressedDoubleData+0x5fc>
    520c:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    5210:	cmp	r7, #256	; 0x100
    5214:	bgt	5ac0 <ReadCompressedDoubleData+0xecc>
    5218:	mul	r3, r5, r7
    521c:	add	r4, sp, #16
    5220:	ldr	r0, [sp, #12]
    5224:	ldr	r1, [sp, #8]
    5228:	mov	r2, r4
    522c:	bl	31e4 <InflateData>
    5230:	cmp	r7, #1
    5234:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5238:	mov	r0, #0
    523c:	add	r1, r4, r0, lsl #2
    5240:	vldr	s0, [r1]
    5244:	vcvt.f64.s32	d16, s0
    5248:	vstmia	r8!, {d16}
    524c:	add	r0, r0, #1
    5250:	cmp	r7, r0
    5254:	bne	523c <ReadCompressedDoubleData+0x648>
    5258:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    525c:	cmp	r7, #256	; 0x100
    5260:	bgt	5b78 <ReadCompressedDoubleData+0xf84>
    5264:	mul	r3, r5, r7
    5268:	add	r4, sp, #16
    526c:	ldr	r0, [sp, #12]
    5270:	ldr	r1, [sp, #8]
    5274:	mov	r2, r4
    5278:	bl	31e4 <InflateData>
    527c:	cmp	r7, #1
    5280:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5284:	mov	r0, #0
    5288:	add	r1, r4, r0, lsl #2
    528c:	vldr	s0, [r1]
    5290:	vcvt.f64.u32	d16, s0
    5294:	vstmia	r8!, {d16}
    5298:	add	r0, r0, #1
    529c:	cmp	r7, r0
    52a0:	bne	5288 <ReadCompressedDoubleData+0x694>
    52a4:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    52a8:	cmp	r7, #256	; 0x100
    52ac:	bgt	5c34 <ReadCompressedDoubleData+0x1040>
    52b0:	mul	r3, r5, r7
    52b4:	add	r4, sp, #16
    52b8:	ldr	r0, [sp, #12]
    52bc:	ldr	r1, [sp, #8]
    52c0:	mov	r2, r4
    52c4:	bl	31e4 <InflateData>
    52c8:	cmp	r7, #1
    52cc:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    52d0:	mov	r0, r7
    52d4:	vldr	s0, [r4]
    52d8:	vcvt.f64.f32	d16, s0
    52dc:	vstr	d16, [r8]
    52e0:	subs	r0, r0, #1
    52e4:	add	r8, r8, #8
    52e8:	add	r4, r4, #4
    52ec:	bne	52d4 <ReadCompressedDoubleData+0x6e0>
    52f0:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    52f4:	cmp	r7, #128	; 0x80
    52f8:	bgt	5cf0 <ReadCompressedDoubleData+0x10fc>
    52fc:	mul	r3, r5, r7
    5300:	add	r4, sp, #16
    5304:	ldr	r0, [sp, #12]
    5308:	ldr	r1, [sp, #8]
    530c:	mov	r2, r4
    5310:	bl	31e4 <InflateData>
    5314:	cmp	r7, #1
    5318:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    531c:	mov	r6, r7
    5320:	ldrd	r0, [r4]
    5324:	bl	48b60 <__aeabi_l2d>
    5328:	strd	r0, [r8]
    532c:	add	r4, r4, #8
    5330:	subs	r6, r6, #1
    5334:	add	r8, r8, #8
    5338:	bne	5320 <ReadCompressedDoubleData+0x72c>
    533c:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    5340:	cmp	r7, #128	; 0x80
    5344:	bgt	5dc0 <ReadCompressedDoubleData+0x11cc>
    5348:	mul	r3, r5, r7
    534c:	add	r4, sp, #16
    5350:	ldr	r0, [sp, #12]
    5354:	ldr	r1, [sp, #8]
    5358:	mov	r2, r4
    535c:	bl	31e4 <InflateData>
    5360:	cmp	r7, #1
    5364:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5368:	mov	r6, r7
    536c:	ldrd	r0, [r4]
    5370:	bl	48b4c <__aeabi_ul2d>
    5374:	strd	r0, [r8]
    5378:	add	r4, r4, #8
    537c:	subs	r6, r6, #1
    5380:	add	r8, r8, #8
    5384:	bne	536c <ReadCompressedDoubleData+0x778>
    5388:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    538c:	add	r0, r8, #4096	; 0x1000
    5390:	str	r5, [sp]
    5394:	lsl	r9, r5, #9
    5398:	sub	r1, r7, #512	; 0x200
    539c:	str	r1, [sp, #4]
    53a0:	mov	r1, #0
    53a4:	add	r4, sp, #16
    53a8:	mov	sl, r1
    53ac:	mov	r6, r0
    53b0:	ldr	r0, [sp, #12]
    53b4:	ldr	r1, [sp, #8]
    53b8:	mov	r2, r4
    53bc:	mov	r3, r9
    53c0:	bl	31e4 <InflateData>
    53c4:	mov	r5, r8
    53c8:	mov	r7, #0
    53cc:	add	r0, r4, r7
    53d0:	bl	1c50 <Mat_int16Swap>
    53d4:	vmov	s0, r0
    53d8:	vcvt.f64.s32	d16, s0
    53dc:	vstmia	r5!, {d16}
    53e0:	add	r7, r7, #2
    53e4:	cmp	r7, #1024	; 0x400
    53e8:	bne	53cc <ReadCompressedDoubleData+0x7d8>
    53ec:	add	r8, r8, #4096	; 0x1000
    53f0:	add	r0, r6, #4096	; 0x1000
    53f4:	add	r1, sl, #512	; 0x200
    53f8:	ldr	r2, [sp, #4]
    53fc:	cmp	r1, r2
    5400:	blt	53a8 <ReadCompressedDoubleData+0x7b4>
    5404:	ldr	r7, [fp, #8]
    5408:	sub	r7, r7, r1
    540c:	ldr	r5, [sp]
    5410:	mul	r3, r7, r5
    5414:	add	r4, sp, #16
    5418:	ldr	r0, [sp, #12]
    541c:	ldr	r1, [sp, #8]
    5420:	mov	r2, r4
    5424:	bl	31e4 <InflateData>
    5428:	cmp	r7, #1
    542c:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5430:	ldr	r0, [sp, #4]
    5434:	sub	r5, r0, sl
    5438:	mov	r0, r4
    543c:	bl	1c50 <Mat_int16Swap>
    5440:	vmov	s0, r0
    5444:	vcvt.f64.s32	d16, s0
    5448:	vstmia	r6!, {d16}
    544c:	subs	r5, r5, #1
    5450:	add	r4, r4, #2
    5454:	bne	5438 <ReadCompressedDoubleData+0x844>
    5458:	b	5790 <ReadCompressedDoubleData+0xb9c>
    545c:	add	r0, r8, #4096	; 0x1000
    5460:	str	r5, [sp]
    5464:	lsl	r9, r5, #9
    5468:	sub	r1, r7, #512	; 0x200
    546c:	str	r1, [sp, #4]
    5470:	mov	r1, #0
    5474:	add	r4, sp, #16
    5478:	mov	sl, r1
    547c:	mov	r6, r0
    5480:	ldr	r0, [sp, #12]
    5484:	ldr	r1, [sp, #8]
    5488:	mov	r2, r4
    548c:	mov	r3, r9
    5490:	bl	31e4 <InflateData>
    5494:	mov	r5, r8
    5498:	mov	r7, #0
    549c:	add	r0, r4, r7
    54a0:	bl	1c64 <Mat_uint16Swap>
    54a4:	vmov	s0, r0
    54a8:	vcvt.f64.u32	d16, s0
    54ac:	vstmia	r5!, {d16}
    54b0:	add	r7, r7, #2
    54b4:	cmp	r7, #1024	; 0x400
    54b8:	bne	549c <ReadCompressedDoubleData+0x8a8>
    54bc:	add	r8, r8, #4096	; 0x1000
    54c0:	add	r0, r6, #4096	; 0x1000
    54c4:	add	r1, sl, #512	; 0x200
    54c8:	ldr	r2, [sp, #4]
    54cc:	cmp	r1, r2
    54d0:	blt	5478 <ReadCompressedDoubleData+0x884>
    54d4:	ldr	r7, [fp, #8]
    54d8:	sub	r7, r7, r1
    54dc:	ldr	r5, [sp]
    54e0:	mul	r3, r7, r5
    54e4:	add	r4, sp, #16
    54e8:	ldr	r0, [sp, #12]
    54ec:	ldr	r1, [sp, #8]
    54f0:	mov	r2, r4
    54f4:	bl	31e4 <InflateData>
    54f8:	cmp	r7, #1
    54fc:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5500:	ldr	r0, [sp, #4]
    5504:	sub	r5, r0, sl
    5508:	mov	r0, r4
    550c:	bl	1c64 <Mat_uint16Swap>
    5510:	vmov	s0, r0
    5514:	vcvt.f64.u32	d16, s0
    5518:	vstmia	r6!, {d16}
    551c:	subs	r5, r5, #1
    5520:	add	r4, r4, #2
    5524:	bne	5508 <ReadCompressedDoubleData+0x914>
    5528:	b	5790 <ReadCompressedDoubleData+0xb9c>
    552c:	add	r0, r8, #2048	; 0x800
    5530:	str	r5, [sp]
    5534:	lsl	r9, r5, #8
    5538:	sub	r1, r7, #256	; 0x100
    553c:	str	r1, [sp, #4]
    5540:	mov	r1, #0
    5544:	add	r4, sp, #16
    5548:	mov	sl, r1
    554c:	mov	r6, r0
    5550:	ldr	r0, [sp, #12]
    5554:	ldr	r1, [sp, #8]
    5558:	mov	r2, r4
    555c:	mov	r3, r9
    5560:	bl	31e4 <InflateData>
    5564:	mov	r5, r8
    5568:	mov	r7, #0
    556c:	add	r0, r4, r7
    5570:	bl	1c28 <Mat_int32Swap>
    5574:	vmov	s0, r0
    5578:	vcvt.f64.s32	d16, s0
    557c:	vstmia	r5!, {d16}
    5580:	add	r7, r7, #4
    5584:	cmp	r7, #1024	; 0x400
    5588:	bne	556c <ReadCompressedDoubleData+0x978>
    558c:	add	r8, r8, #2048	; 0x800
    5590:	add	r0, r6, #2048	; 0x800
    5594:	add	r1, sl, #256	; 0x100
    5598:	ldr	r2, [sp, #4]
    559c:	cmp	r1, r2
    55a0:	blt	5548 <ReadCompressedDoubleData+0x954>
    55a4:	ldr	r7, [fp, #8]
    55a8:	sub	r7, r7, r1
    55ac:	ldr	r5, [sp]
    55b0:	mul	r3, r7, r5
    55b4:	add	r4, sp, #16
    55b8:	ldr	r0, [sp, #12]
    55bc:	ldr	r1, [sp, #8]
    55c0:	mov	r2, r4
    55c4:	bl	31e4 <InflateData>
    55c8:	cmp	r7, #1
    55cc:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    55d0:	ldr	r0, [sp, #4]
    55d4:	sub	r5, r0, sl
    55d8:	mov	r0, r4
    55dc:	bl	1c28 <Mat_int32Swap>
    55e0:	vmov	s0, r0
    55e4:	vcvt.f64.s32	d16, s0
    55e8:	vstmia	r6!, {d16}
    55ec:	subs	r5, r5, #1
    55f0:	add	r4, r4, #4
    55f4:	bne	55d8 <ReadCompressedDoubleData+0x9e4>
    55f8:	b	5790 <ReadCompressedDoubleData+0xb9c>
    55fc:	add	r0, r8, #2048	; 0x800
    5600:	str	r5, [sp]
    5604:	lsl	r9, r5, #8
    5608:	sub	r1, r7, #256	; 0x100
    560c:	str	r1, [sp, #4]
    5610:	mov	r1, #0
    5614:	add	r4, sp, #16
    5618:	mov	sl, r1
    561c:	mov	r6, r0
    5620:	ldr	r0, [sp, #12]
    5624:	ldr	r1, [sp, #8]
    5628:	mov	r2, r4
    562c:	mov	r3, r9
    5630:	bl	31e4 <InflateData>
    5634:	mov	r5, r8
    5638:	mov	r7, #0
    563c:	add	r0, r4, r7
    5640:	bl	1c3c <Mat_uint32Swap>
    5644:	vmov	s0, r0
    5648:	vcvt.f64.u32	d16, s0
    564c:	vstmia	r5!, {d16}
    5650:	add	r7, r7, #4
    5654:	cmp	r7, #1024	; 0x400
    5658:	bne	563c <ReadCompressedDoubleData+0xa48>
    565c:	add	r8, r8, #2048	; 0x800
    5660:	add	r0, r6, #2048	; 0x800
    5664:	add	r1, sl, #256	; 0x100
    5668:	ldr	r2, [sp, #4]
    566c:	cmp	r1, r2
    5670:	blt	5618 <ReadCompressedDoubleData+0xa24>
    5674:	ldr	r7, [fp, #8]
    5678:	sub	r7, r7, r1
    567c:	ldr	r5, [sp]
    5680:	mul	r3, r7, r5
    5684:	add	r4, sp, #16
    5688:	ldr	r0, [sp, #12]
    568c:	ldr	r1, [sp, #8]
    5690:	mov	r2, r4
    5694:	bl	31e4 <InflateData>
    5698:	cmp	r7, #1
    569c:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    56a0:	ldr	r0, [sp, #4]
    56a4:	sub	r5, r0, sl
    56a8:	mov	r0, r4
    56ac:	bl	1c3c <Mat_uint32Swap>
    56b0:	vmov	s0, r0
    56b4:	vcvt.f64.u32	d16, s0
    56b8:	vstmia	r6!, {d16}
    56bc:	subs	r5, r5, #1
    56c0:	add	r4, r4, #4
    56c4:	bne	56a8 <ReadCompressedDoubleData+0xab4>
    56c8:	b	5790 <ReadCompressedDoubleData+0xb9c>
    56cc:	add	r0, r8, #2048	; 0x800
    56d0:	str	r5, [sp]
    56d4:	lsl	r9, r5, #8
    56d8:	sub	r1, r7, #256	; 0x100
    56dc:	str	r1, [sp, #4]
    56e0:	mov	r1, #0
    56e4:	add	r4, sp, #16
    56e8:	mov	sl, r1
    56ec:	mov	r6, r0
    56f0:	ldr	r0, [sp, #12]
    56f4:	ldr	r1, [sp, #8]
    56f8:	mov	r2, r4
    56fc:	mov	r3, r9
    5700:	bl	31e4 <InflateData>
    5704:	mov	r5, r8
    5708:	mov	r7, #0
    570c:	add	r0, r4, r7
    5710:	bl	1c7c <Mat_floatSwap>
    5714:	vcvt.f64.f32	d16, s0
    5718:	vstmia	r5!, {d16}
    571c:	add	r7, r7, #4
    5720:	cmp	r7, #1024	; 0x400
    5724:	bne	570c <ReadCompressedDoubleData+0xb18>
    5728:	add	r8, r8, #2048	; 0x800
    572c:	add	r0, r6, #2048	; 0x800
    5730:	add	r1, sl, #256	; 0x100
    5734:	ldr	r2, [sp, #4]
    5738:	cmp	r1, r2
    573c:	blt	56e8 <ReadCompressedDoubleData+0xaf4>
    5740:	ldr	r7, [fp, #8]
    5744:	sub	r7, r7, r1
    5748:	ldr	r5, [sp]
    574c:	mul	r3, r7, r5
    5750:	add	r4, sp, #16
    5754:	ldr	r0, [sp, #12]
    5758:	ldr	r1, [sp, #8]
    575c:	mov	r2, r4
    5760:	bl	31e4 <InflateData>
    5764:	cmp	r7, #1
    5768:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    576c:	ldr	r0, [sp, #4]
    5770:	sub	r5, r0, sl
    5774:	mov	r0, r4
    5778:	bl	1c7c <Mat_floatSwap>
    577c:	vcvt.f64.f32	d16, s0
    5780:	vstmia	r6!, {d16}
    5784:	subs	r5, r5, #1
    5788:	add	r4, r4, #4
    578c:	bne	5774 <ReadCompressedDoubleData+0xb80>
    5790:	ldr	r5, [sp]
    5794:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    5798:	add	r0, r8, #1024	; 0x400
    579c:	lsl	r9, r5, #7
    57a0:	sub	r1, r7, #128	; 0x80
    57a4:	str	r1, [sp, #4]
    57a8:	mov	r1, #0
    57ac:	add	r4, sp, #16
    57b0:	mov	sl, r1
    57b4:	mov	r6, r0
    57b8:	ldr	r0, [sp, #12]
    57bc:	ldr	r1, [sp, #8]
    57c0:	mov	r2, r4
    57c4:	mov	r3, r9
    57c8:	bl	31e4 <InflateData>
    57cc:	mov	r7, #0
    57d0:	add	r0, r4, r7
    57d4:	bl	1bbc <Mat_int64Swap>
    57d8:	bl	48b60 <__aeabi_l2d>
    57dc:	mov	r2, r8
    57e0:	str	r0, [r2, r7]!
    57e4:	str	r1, [r2, #4]
    57e8:	add	r7, r7, #8
    57ec:	cmp	r7, #1024	; 0x400
    57f0:	bne	57d0 <ReadCompressedDoubleData+0xbdc>
    57f4:	add	r8, r8, #1024	; 0x400
    57f8:	add	r0, r6, #1024	; 0x400
    57fc:	add	r1, sl, #128	; 0x80
    5800:	ldr	r2, [sp, #4]
    5804:	cmp	r1, r2
    5808:	blt	57b0 <ReadCompressedDoubleData+0xbbc>
    580c:	ldr	r7, [fp, #8]
    5810:	sub	r7, r7, r1
    5814:	mul	r3, r7, r5
    5818:	add	r4, sp, #16
    581c:	ldr	r0, [sp, #12]
    5820:	ldr	r1, [sp, #8]
    5824:	mov	r2, r4
    5828:	bl	31e4 <InflateData>
    582c:	cmp	r7, #1
    5830:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5834:	mov	r8, r7
    5838:	mov	r7, r5
    583c:	ldr	r0, [sp, #4]
    5840:	sub	r5, r0, sl
    5844:	mov	r0, r4
    5848:	bl	1bbc <Mat_int64Swap>
    584c:	bl	48b60 <__aeabi_l2d>
    5850:	strd	r0, [r6]
    5854:	add	r6, r6, #8
    5858:	add	r4, r4, #8
    585c:	subs	r5, r5, #1
    5860:	bne	5844 <ReadCompressedDoubleData+0xc50>
    5864:	b	5e8c <ReadCompressedDoubleData+0x1298>
    5868:	add	r0, r8, #1024	; 0x400
    586c:	lsl	r9, r5, #7
    5870:	sub	r1, r7, #128	; 0x80
    5874:	str	r1, [sp, #4]
    5878:	mov	r1, #0
    587c:	add	r4, sp, #16
    5880:	mov	sl, r1
    5884:	mov	r6, r0
    5888:	ldr	r0, [sp, #12]
    588c:	ldr	r1, [sp, #8]
    5890:	mov	r2, r4
    5894:	mov	r3, r9
    5898:	bl	31e4 <InflateData>
    589c:	mov	r7, #0
    58a0:	add	r0, r4, r7
    58a4:	bl	1c0c <Mat_uint64Swap>
    58a8:	bl	48b4c <__aeabi_ul2d>
    58ac:	mov	r2, r8
    58b0:	str	r0, [r2, r7]!
    58b4:	str	r1, [r2, #4]
    58b8:	add	r7, r7, #8
    58bc:	cmp	r7, #1024	; 0x400
    58c0:	bne	58a0 <ReadCompressedDoubleData+0xcac>
    58c4:	add	r8, r8, #1024	; 0x400
    58c8:	add	r0, r6, #1024	; 0x400
    58cc:	add	r1, sl, #128	; 0x80
    58d0:	ldr	r2, [sp, #4]
    58d4:	cmp	r1, r2
    58d8:	blt	5880 <ReadCompressedDoubleData+0xc8c>
    58dc:	ldr	r7, [fp, #8]
    58e0:	sub	r7, r7, r1
    58e4:	mul	r3, r7, r5
    58e8:	add	r4, sp, #16
    58ec:	ldr	r0, [sp, #12]
    58f0:	ldr	r1, [sp, #8]
    58f4:	mov	r2, r4
    58f8:	bl	31e4 <InflateData>
    58fc:	cmp	r7, #1
    5900:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5904:	mov	r8, r7
    5908:	mov	r7, r5
    590c:	ldr	r0, [sp, #4]
    5910:	sub	r5, r0, sl
    5914:	mov	r0, r4
    5918:	bl	1c0c <Mat_uint64Swap>
    591c:	bl	48b4c <__aeabi_ul2d>
    5920:	strd	r0, [r6]
    5924:	add	r6, r6, #8
    5928:	add	r4, r4, #8
    592c:	subs	r5, r5, #1
    5930:	bne	5914 <ReadCompressedDoubleData+0xd20>
    5934:	b	5e8c <ReadCompressedDoubleData+0x1298>
    5938:	add	r0, r8, #4096	; 0x1000
    593c:	lsl	r4, r5, #9
    5940:	mov	sl, r7
    5944:	sub	r1, r7, #512	; 0x200
    5948:	str	r1, [sp, #4]
    594c:	mov	r1, #0
    5950:	add	r6, sp, #16
    5954:	mov	r9, r1
    5958:	mov	r7, r0
    595c:	ldr	r0, [sp, #12]
    5960:	ldr	r1, [sp, #8]
    5964:	mov	r2, r6
    5968:	mov	r3, r4
    596c:	bl	31e4 <InflateData>
    5970:	mov	r0, r8
    5974:	mov	r1, #0
    5978:	add	r2, r6, r1
    597c:	ldrsh	r2, [r2]
    5980:	vmov	s0, r2
    5984:	vcvt.f64.s32	d16, s0
    5988:	vstmia	r0!, {d16}
    598c:	add	r1, r1, #2
    5990:	cmp	r1, #1024	; 0x400
    5994:	bne	5978 <ReadCompressedDoubleData+0xd84>
    5998:	add	r8, r8, #4096	; 0x1000
    599c:	add	r0, r7, #4096	; 0x1000
    59a0:	add	r1, r9, #512	; 0x200
    59a4:	ldr	r2, [sp, #4]
    59a8:	cmp	r1, r2
    59ac:	blt	5954 <ReadCompressedDoubleData+0xd60>
    59b0:	sub	sl, sl, r1
    59b4:	mul	r3, sl, r5
    59b8:	add	r4, sp, #16
    59bc:	ldr	r0, [sp, #12]
    59c0:	ldr	r1, [sp, #8]
    59c4:	mov	r2, r4
    59c8:	bl	31e4 <InflateData>
    59cc:	mov	r2, sl
    59d0:	cmp	sl, #1
    59d4:	blt	5c2c <ReadCompressedDoubleData+0x1038>
    59d8:	ldr	r0, [sp, #4]
    59dc:	sub	r0, r0, r9
    59e0:	ldrsh	r1, [r4], #2
    59e4:	vmov	s0, r1
    59e8:	vcvt.f64.s32	d16, s0
    59ec:	vstmia	r7!, {d16}
    59f0:	subs	r0, r0, #1
    59f4:	bne	59e0 <ReadCompressedDoubleData+0xdec>
    59f8:	b	5c2c <ReadCompressedDoubleData+0x1038>
    59fc:	add	r0, r8, #4096	; 0x1000
    5a00:	lsl	r4, r5, #9
    5a04:	mov	sl, r7
    5a08:	sub	r1, r7, #512	; 0x200
    5a0c:	str	r1, [sp, #4]
    5a10:	mov	r1, #0
    5a14:	add	r6, sp, #16
    5a18:	mov	r9, r1
    5a1c:	mov	r7, r0
    5a20:	ldr	r0, [sp, #12]
    5a24:	ldr	r1, [sp, #8]
    5a28:	mov	r2, r6
    5a2c:	mov	r3, r4
    5a30:	bl	31e4 <InflateData>
    5a34:	mov	r0, r8
    5a38:	mov	r1, #0
    5a3c:	add	r2, r6, r1
    5a40:	ldrh	r2, [r2]
    5a44:	vmov	s0, r2
    5a48:	vcvt.f64.u32	d16, s0
    5a4c:	vstmia	r0!, {d16}
    5a50:	add	r1, r1, #2
    5a54:	cmp	r1, #1024	; 0x400
    5a58:	bne	5a3c <ReadCompressedDoubleData+0xe48>
    5a5c:	add	r8, r8, #4096	; 0x1000
    5a60:	add	r0, r7, #4096	; 0x1000
    5a64:	add	r1, r9, #512	; 0x200
    5a68:	ldr	r2, [sp, #4]
    5a6c:	cmp	r1, r2
    5a70:	blt	5a18 <ReadCompressedDoubleData+0xe24>
    5a74:	sub	sl, sl, r1
    5a78:	mul	r3, sl, r5
    5a7c:	add	r4, sp, #16
    5a80:	ldr	r0, [sp, #12]
    5a84:	ldr	r1, [sp, #8]
    5a88:	mov	r2, r4
    5a8c:	bl	31e4 <InflateData>
    5a90:	mov	r2, sl
    5a94:	cmp	sl, #1
    5a98:	blt	5c2c <ReadCompressedDoubleData+0x1038>
    5a9c:	ldr	r0, [sp, #4]
    5aa0:	sub	r0, r0, r9
    5aa4:	ldrh	r1, [r4], #2
    5aa8:	vmov	s0, r1
    5aac:	vcvt.f64.u32	d16, s0
    5ab0:	vstmia	r7!, {d16}
    5ab4:	subs	r0, r0, #1
    5ab8:	bne	5aa4 <ReadCompressedDoubleData+0xeb0>
    5abc:	b	5c2c <ReadCompressedDoubleData+0x1038>
    5ac0:	add	r0, r8, #2048	; 0x800
    5ac4:	lsl	r4, r5, #8
    5ac8:	sub	r9, r7, #256	; 0x100
    5acc:	mov	r1, #0
    5ad0:	add	r6, sp, #16
    5ad4:	mov	sl, r1
    5ad8:	mov	r7, r0
    5adc:	ldr	r0, [sp, #12]
    5ae0:	ldr	r1, [sp, #8]
    5ae4:	mov	r2, r6
    5ae8:	mov	r3, r4
    5aec:	bl	31e4 <InflateData>
    5af0:	mov	r0, r8
    5af4:	mov	r1, #0
    5af8:	add	r2, r6, r1, lsl #2
    5afc:	vldr	s0, [r2]
    5b00:	vcvt.f64.s32	d16, s0
    5b04:	vstmia	r0!, {d16}
    5b08:	add	r1, r1, #1
    5b0c:	cmp	r1, #256	; 0x100
    5b10:	bne	5af8 <ReadCompressedDoubleData+0xf04>
    5b14:	add	r8, r8, #2048	; 0x800
    5b18:	add	r0, r7, #2048	; 0x800
    5b1c:	add	r1, sl, #256	; 0x100
    5b20:	cmp	r1, r9
    5b24:	blt	5ad4 <ReadCompressedDoubleData+0xee0>
    5b28:	ldr	r0, [fp, #8]
    5b2c:	mov	r6, r0
    5b30:	sub	r6, r0, r1
    5b34:	mul	r3, r6, r5
    5b38:	add	r4, sp, #16
    5b3c:	ldr	r0, [sp, #12]
    5b40:	ldr	r1, [sp, #8]
    5b44:	mov	r2, r4
    5b48:	bl	31e4 <InflateData>
    5b4c:	mov	r2, r6
    5b50:	cmp	r6, #1
    5b54:	blt	5c2c <ReadCompressedDoubleData+0x1038>
    5b58:	sub	r0, r9, sl
    5b5c:	ldr	r1, [r4], #4
    5b60:	vmov	s0, r1
    5b64:	vcvt.f64.s32	d16, s0
    5b68:	vstmia	r7!, {d16}
    5b6c:	subs	r0, r0, #1
    5b70:	bne	5b5c <ReadCompressedDoubleData+0xf68>
    5b74:	b	5c2c <ReadCompressedDoubleData+0x1038>
    5b78:	add	r0, r8, #2048	; 0x800
    5b7c:	lsl	r4, r5, #8
    5b80:	sub	r9, r7, #256	; 0x100
    5b84:	mov	r1, #0
    5b88:	add	r6, sp, #16
    5b8c:	mov	sl, r1
    5b90:	mov	r7, r0
    5b94:	ldr	r0, [sp, #12]
    5b98:	ldr	r1, [sp, #8]
    5b9c:	mov	r2, r6
    5ba0:	mov	r3, r4
    5ba4:	bl	31e4 <InflateData>
    5ba8:	mov	r0, r8
    5bac:	mov	r1, #0
    5bb0:	add	r2, r6, r1, lsl #2
    5bb4:	vldr	s0, [r2]
    5bb8:	vcvt.f64.u32	d16, s0
    5bbc:	vstmia	r0!, {d16}
    5bc0:	add	r1, r1, #1
    5bc4:	cmp	r1, #256	; 0x100
    5bc8:	bne	5bb0 <ReadCompressedDoubleData+0xfbc>
    5bcc:	add	r8, r8, #2048	; 0x800
    5bd0:	add	r0, r7, #2048	; 0x800
    5bd4:	add	r1, sl, #256	; 0x100
    5bd8:	cmp	r1, r9
    5bdc:	blt	5b8c <ReadCompressedDoubleData+0xf98>
    5be0:	ldr	r0, [fp, #8]
    5be4:	mov	r6, r0
    5be8:	sub	r6, r0, r1
    5bec:	mul	r3, r6, r5
    5bf0:	add	r4, sp, #16
    5bf4:	ldr	r0, [sp, #12]
    5bf8:	ldr	r1, [sp, #8]
    5bfc:	mov	r2, r4
    5c00:	bl	31e4 <InflateData>
    5c04:	mov	r2, r6
    5c08:	cmp	r6, #1
    5c0c:	blt	5c2c <ReadCompressedDoubleData+0x1038>
    5c10:	sub	r0, r9, sl
    5c14:	ldr	r1, [r4], #4
    5c18:	vmov	s0, r1
    5c1c:	vcvt.f64.u32	d16, s0
    5c20:	vstmia	r7!, {d16}
    5c24:	subs	r0, r0, #1
    5c28:	bne	5c14 <ReadCompressedDoubleData+0x1020>
    5c2c:	mov	r7, r2
    5c30:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    5c34:	add	r0, r8, #2048	; 0x800
    5c38:	lsl	r4, r5, #8
    5c3c:	sub	r9, r7, #256	; 0x100
    5c40:	mov	r1, #0
    5c44:	add	r6, sp, #16
    5c48:	mov	sl, r1
    5c4c:	mov	r7, r0
    5c50:	ldr	r0, [sp, #12]
    5c54:	ldr	r1, [sp, #8]
    5c58:	mov	r2, r6
    5c5c:	mov	r3, r4
    5c60:	bl	31e4 <InflateData>
    5c64:	mov	r0, r8
    5c68:	mov	r1, #0
    5c6c:	add	r2, r6, r1
    5c70:	vldr	s0, [r2]
    5c74:	vcvt.f64.f32	d16, s0
    5c78:	vstmia	r0!, {d16}
    5c7c:	add	r1, r1, #4
    5c80:	cmp	r1, #1024	; 0x400
    5c84:	bne	5c6c <ReadCompressedDoubleData+0x1078>
    5c88:	add	r8, r8, #2048	; 0x800
    5c8c:	add	r0, r7, #2048	; 0x800
    5c90:	add	r1, sl, #256	; 0x100
    5c94:	cmp	r1, r9
    5c98:	blt	5c48 <ReadCompressedDoubleData+0x1054>
    5c9c:	ldr	r0, [fp, #8]
    5ca0:	mov	r6, r0
    5ca4:	sub	r6, r0, r1
    5ca8:	mul	r3, r6, r5
    5cac:	add	r4, sp, #16
    5cb0:	ldr	r0, [sp, #12]
    5cb4:	ldr	r1, [sp, #8]
    5cb8:	mov	r2, r4
    5cbc:	bl	31e4 <InflateData>
    5cc0:	mov	r1, r6
    5cc4:	cmp	r6, #1
    5cc8:	blt	5ce8 <ReadCompressedDoubleData+0x10f4>
    5ccc:	sub	r0, r9, sl
    5cd0:	vldr	s0, [r4]
    5cd4:	vcvt.f64.f32	d16, s0
    5cd8:	vstmia	r7!, {d16}
    5cdc:	subs	r0, r0, #1
    5ce0:	add	r4, r4, #4
    5ce4:	bne	5cd0 <ReadCompressedDoubleData+0x10dc>
    5ce8:	mov	r7, r1
    5cec:	b	5e94 <ReadCompressedDoubleData+0x12a0>
    5cf0:	add	r0, r8, #1024	; 0x400
    5cf4:	lsl	r9, r5, #7
    5cf8:	sub	r1, r7, #128	; 0x80
    5cfc:	str	r1, [sp, #4]
    5d00:	mov	r1, #0
    5d04:	add	r4, sp, #16
    5d08:	mov	sl, r1
    5d0c:	mov	r6, r0
    5d10:	ldr	r0, [sp, #12]
    5d14:	ldr	r1, [sp, #8]
    5d18:	mov	r2, r4
    5d1c:	mov	r3, r9
    5d20:	bl	31e4 <InflateData>
    5d24:	mov	r7, #0
    5d28:	ldr	r0, [r4, r7]
    5d2c:	add	r1, r4, r7
    5d30:	ldr	r1, [r1, #4]
    5d34:	bl	48b60 <__aeabi_l2d>
    5d38:	mov	r2, r8
    5d3c:	str	r0, [r2, r7]!
    5d40:	str	r1, [r2, #4]
    5d44:	add	r7, r7, #8
    5d48:	cmp	r7, #1024	; 0x400
    5d4c:	bne	5d28 <ReadCompressedDoubleData+0x1134>
    5d50:	add	r8, r8, #1024	; 0x400
    5d54:	add	r0, r6, #1024	; 0x400
    5d58:	add	r1, sl, #128	; 0x80
    5d5c:	ldr	r2, [sp, #4]
    5d60:	cmp	r1, r2
    5d64:	blt	5d08 <ReadCompressedDoubleData+0x1114>
    5d68:	ldr	r7, [fp, #8]
    5d6c:	sub	r7, r7, r1
    5d70:	mul	r3, r7, r5
    5d74:	add	r4, sp, #16
    5d78:	ldr	r0, [sp, #12]
    5d7c:	ldr	r1, [sp, #8]
    5d80:	mov	r2, r4
    5d84:	bl	31e4 <InflateData>
    5d88:	cmp	r7, #1
    5d8c:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5d90:	mov	r8, r7
    5d94:	mov	r7, r5
    5d98:	ldr	r0, [sp, #4]
    5d9c:	sub	r5, r0, sl
    5da0:	ldrd	r0, [r4]
    5da4:	bl	48b60 <__aeabi_l2d>
    5da8:	strd	r0, [r6]
    5dac:	add	r6, r6, #8
    5db0:	add	r4, r4, #8
    5db4:	subs	r5, r5, #1
    5db8:	bne	5da0 <ReadCompressedDoubleData+0x11ac>
    5dbc:	b	5e8c <ReadCompressedDoubleData+0x1298>
    5dc0:	add	r0, r8, #1024	; 0x400
    5dc4:	lsl	r9, r5, #7
    5dc8:	sub	r1, r7, #128	; 0x80
    5dcc:	str	r1, [sp, #4]
    5dd0:	mov	r1, #0
    5dd4:	add	r4, sp, #16
    5dd8:	mov	sl, r1
    5ddc:	mov	r6, r0
    5de0:	ldr	r0, [sp, #12]
    5de4:	ldr	r1, [sp, #8]
    5de8:	mov	r2, r4
    5dec:	mov	r3, r9
    5df0:	bl	31e4 <InflateData>
    5df4:	mov	r7, #0
    5df8:	ldr	r0, [r4, r7]
    5dfc:	add	r1, r4, r7
    5e00:	ldr	r1, [r1, #4]
    5e04:	bl	48b4c <__aeabi_ul2d>
    5e08:	mov	r2, r8
    5e0c:	str	r0, [r2, r7]!
    5e10:	str	r1, [r2, #4]
    5e14:	add	r7, r7, #8
    5e18:	cmp	r7, #1024	; 0x400
    5e1c:	bne	5df8 <ReadCompressedDoubleData+0x1204>
    5e20:	add	r8, r8, #1024	; 0x400
    5e24:	add	r0, r6, #1024	; 0x400
    5e28:	add	r1, sl, #128	; 0x80
    5e2c:	ldr	r2, [sp, #4]
    5e30:	cmp	r1, r2
    5e34:	blt	5dd8 <ReadCompressedDoubleData+0x11e4>
    5e38:	ldr	r7, [fp, #8]
    5e3c:	sub	r7, r7, r1
    5e40:	mul	r3, r7, r5
    5e44:	add	r4, sp, #16
    5e48:	ldr	r0, [sp, #12]
    5e4c:	ldr	r1, [sp, #8]
    5e50:	mov	r2, r4
    5e54:	bl	31e4 <InflateData>
    5e58:	cmp	r7, #1
    5e5c:	blt	5e94 <ReadCompressedDoubleData+0x12a0>
    5e60:	mov	r8, r7
    5e64:	mov	r7, r5
    5e68:	ldr	r0, [sp, #4]
    5e6c:	sub	r5, r0, sl
    5e70:	ldrd	r0, [r4]
    5e74:	bl	48b4c <__aeabi_ul2d>
    5e78:	strd	r0, [r6]
    5e7c:	add	r6, r6, #8
    5e80:	add	r4, r4, #8
    5e84:	subs	r5, r5, #1
    5e88:	bne	5e70 <ReadCompressedDoubleData+0x127c>
    5e8c:	mov	r5, r7
    5e90:	mov	r7, r8
    5e94:	mul	r0, r7, r5
    5e98:	sub	sp, fp, #28
    5e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005ea0 <ReadSingleData>:
    5ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5ea4:	add	fp, sp, #28
    5ea8:	sub	sp, sp, #36	; 0x24
    5eac:	sub	sp, sp, #2048	; 0x800
    5eb0:	mov	r6, r0
    5eb4:	mov	r0, #0
    5eb8:	cmp	r6, #0
    5ebc:	beq	5ed4 <ReadSingleData+0x34>
    5ec0:	mov	r9, r1
    5ec4:	cmp	r1, #0
    5ec8:	ldrne	r1, [r6]
    5ecc:	cmpne	r1, #0
    5ed0:	bne	5edc <ReadSingleData+0x3c>
    5ed4:	sub	sp, fp, #28
    5ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5edc:	mov	r5, r3
    5ee0:	mov	r8, r2
    5ee4:	mov	r0, r2
    5ee8:	bl	193c <Mat_SizeOf@plt>
    5eec:	mov	r7, r0
    5ef0:	sub	r0, r8, #1
    5ef4:	mov	r1, #0
    5ef8:	str	r1, [sp, #16]
    5efc:	cmp	r0, #11
    5f00:	str	r7, [sp, #24]
    5f04:	str	r6, [sp, #28]
    5f08:	bhi	729c <ReadSingleData+0x13fc>
    5f0c:	add	r1, pc, #4
    5f10:	ldr	r0, [r1, r0, lsl #2]
    5f14:	add	pc, r1, r0
    5f18:	.word	0x00000030
    5f1c:	.word	0x00000078
    5f20:	.word	0x000000c0
    5f24:	.word	0x00000120
    5f28:	.word	0x00000180
    5f2c:	.word	0x000001e0
    5f30:	.word	0x00000240
    5f34:	.word	0x00001384
    5f38:	.word	0x00000298
    5f3c:	.word	0x00001384
    5f40:	.word	0x00001384
    5f44:	.word	0x000002f8
    5f48:	cmp	r5, #256	; 0x100
    5f4c:	bgt	6270 <ReadSingleData+0x3d0>
    5f50:	ldr	r3, [r6]
    5f54:	add	r4, sp, #32
    5f58:	mov	r0, r4
    5f5c:	mov	r1, r7
    5f60:	mov	r2, r5
    5f64:	bl	18d0 <fread@plt>
    5f68:	cmp	r5, #1
    5f6c:	blt	65b0 <ReadSingleData+0x710>
    5f70:	ldrsb	r1, [r4], #1
    5f74:	vmov	s0, r1
    5f78:	vcvt.f32.s32	s0, s0
    5f7c:	vstr	s0, [r9]
    5f80:	subs	r5, r5, #1
    5f84:	add	r9, r9, #4
    5f88:	bne	5f70 <ReadSingleData+0xd0>
    5f8c:	b	65b0 <ReadSingleData+0x710>
    5f90:	cmp	r5, #256	; 0x100
    5f94:	bgt	6340 <ReadSingleData+0x4a0>
    5f98:	ldr	r3, [r6]
    5f9c:	add	r4, sp, #32
    5fa0:	mov	r0, r4
    5fa4:	mov	r1, r7
    5fa8:	mov	r2, r5
    5fac:	bl	18d0 <fread@plt>
    5fb0:	cmp	r5, #1
    5fb4:	blt	65b0 <ReadSingleData+0x710>
    5fb8:	ldrb	r1, [r4], #1
    5fbc:	vmov	s0, r1
    5fc0:	vcvt.f32.u32	s0, s0
    5fc4:	vstr	s0, [r9]
    5fc8:	subs	r5, r5, #1
    5fcc:	add	r9, r9, #4
    5fd0:	bne	5fb8 <ReadSingleData+0x118>
    5fd4:	b	65b0 <ReadSingleData+0x710>
    5fd8:	ldr	r0, [r6, #20]
    5fdc:	cmp	r0, #0
    5fe0:	beq	640c <ReadSingleData+0x56c>
    5fe4:	cmp	r5, #256	; 0x100
    5fe8:	bgt	6608 <ReadSingleData+0x768>
    5fec:	ldr	r3, [r6]
    5ff0:	add	r4, sp, #32
    5ff4:	mov	r0, r4
    5ff8:	mov	r1, r7
    5ffc:	mov	r2, r5
    6000:	bl	18d0 <fread@plt>
    6004:	mov	r6, r0
    6008:	cmp	r5, #1
    600c:	blt	6208 <ReadSingleData+0x368>
    6010:	mov	r0, r4
    6014:	bl	1c50 <Mat_int16Swap>
    6018:	vmov	s0, r0
    601c:	vcvt.f32.s32	s0, s0
    6020:	vstr	s0, [r9]
    6024:	subs	r5, r5, #1
    6028:	add	r9, r9, #4
    602c:	add	r4, r4, #2
    6030:	bne	6010 <ReadSingleData+0x170>
    6034:	b	6208 <ReadSingleData+0x368>
    6038:	ldr	r0, [r6, #20]
    603c:	cmp	r0, #0
    6040:	beq	6454 <ReadSingleData+0x5b4>
    6044:	cmp	r5, #256	; 0x100
    6048:	bgt	66fc <ReadSingleData+0x85c>
    604c:	ldr	r3, [r6]
    6050:	add	r4, sp, #32
    6054:	mov	r0, r4
    6058:	mov	r1, r7
    605c:	mov	r2, r5
    6060:	bl	18d0 <fread@plt>
    6064:	mov	r6, r0
    6068:	cmp	r5, #1
    606c:	blt	6208 <ReadSingleData+0x368>
    6070:	mov	r0, r4
    6074:	bl	1c64 <Mat_uint16Swap>
    6078:	vmov	s0, r0
    607c:	vcvt.f32.u32	s0, s0
    6080:	vstr	s0, [r9]
    6084:	subs	r5, r5, #1
    6088:	add	r9, r9, #4
    608c:	add	r4, r4, #2
    6090:	bne	6070 <ReadSingleData+0x1d0>
    6094:	b	6208 <ReadSingleData+0x368>
    6098:	ldr	r0, [r6, #20]
    609c:	cmp	r0, #0
    60a0:	beq	649c <ReadSingleData+0x5fc>
    60a4:	cmp	r5, #256	; 0x100
    60a8:	bgt	67f0 <ReadSingleData+0x950>
    60ac:	ldr	r3, [r6]
    60b0:	add	r4, sp, #32
    60b4:	mov	r0, r4
    60b8:	mov	r1, r7
    60bc:	mov	r2, r5
    60c0:	bl	18d0 <fread@plt>
    60c4:	mov	r6, r0
    60c8:	cmp	r5, #1
    60cc:	blt	6208 <ReadSingleData+0x368>
    60d0:	mov	r0, r4
    60d4:	bl	1c28 <Mat_int32Swap>
    60d8:	vmov	s0, r0
    60dc:	vcvt.f32.s32	s0, s0
    60e0:	vstr	s0, [r9]
    60e4:	subs	r5, r5, #1
    60e8:	add	r9, r9, #4
    60ec:	add	r4, r4, #4
    60f0:	bne	60d0 <ReadSingleData+0x230>
    60f4:	b	6208 <ReadSingleData+0x368>
    60f8:	ldr	r0, [r6, #20]
    60fc:	cmp	r0, #0
    6100:	beq	64e4 <ReadSingleData+0x644>
    6104:	cmp	r5, #256	; 0x100
    6108:	bgt	68dc <ReadSingleData+0xa3c>
    610c:	ldr	r3, [r6]
    6110:	add	r4, sp, #32
    6114:	mov	r0, r4
    6118:	mov	r1, r7
    611c:	mov	r2, r5
    6120:	bl	18d0 <fread@plt>
    6124:	mov	r6, r0
    6128:	cmp	r5, #1
    612c:	blt	6208 <ReadSingleData+0x368>
    6130:	mov	r0, r4
    6134:	bl	1c3c <Mat_uint32Swap>
    6138:	vmov	s0, r0
    613c:	vcvt.f32.u32	s0, s0
    6140:	vstr	s0, [r9]
    6144:	subs	r5, r5, #1
    6148:	add	r9, r9, #4
    614c:	add	r4, r4, #4
    6150:	bne	6130 <ReadSingleData+0x290>
    6154:	b	6208 <ReadSingleData+0x368>
    6158:	ldr	r0, [r6, #20]
    615c:	cmp	r0, #0
    6160:	beq	652c <ReadSingleData+0x68c>
    6164:	cmp	r5, #256	; 0x100
    6168:	bgt	69c8 <ReadSingleData+0xb28>
    616c:	ldr	r3, [r6]
    6170:	add	r4, sp, #32
    6174:	mov	r0, r4
    6178:	mov	r1, r7
    617c:	mov	r2, r5
    6180:	bl	18d0 <fread@plt>
    6184:	mov	r6, r0
    6188:	cmp	r5, #1
    618c:	blt	6208 <ReadSingleData+0x368>
    6190:	mov	r0, r4
    6194:	bl	1c7c <Mat_floatSwap>
    6198:	vstr	s0, [r9]
    619c:	subs	r5, r5, #1
    61a0:	add	r9, r9, #4
    61a4:	add	r4, r4, #4
    61a8:	bne	6190 <ReadSingleData+0x2f0>
    61ac:	b	6208 <ReadSingleData+0x368>
    61b0:	ldr	r0, [r6, #20]
    61b4:	cmp	r0, #0
    61b8:	beq	656c <ReadSingleData+0x6cc>
    61bc:	cmp	r5, #256	; 0x100
    61c0:	bgt	6aa4 <ReadSingleData+0xc04>
    61c4:	ldr	r3, [r6]
    61c8:	add	r4, sp, #32
    61cc:	mov	r0, r4
    61d0:	mov	r1, r7
    61d4:	mov	r2, r5
    61d8:	bl	18d0 <fread@plt>
    61dc:	mov	r6, r0
    61e0:	cmp	r5, #1
    61e4:	blt	6208 <ReadSingleData+0x368>
    61e8:	mov	r0, r4
    61ec:	bl	1cc0 <Mat_doubleSwap>
    61f0:	vcvt.f32.f64	s0, d0
    61f4:	vstr	s0, [r9]
    61f8:	subs	r5, r5, #1
    61fc:	add	r9, r9, #4
    6200:	add	r4, r4, #8
    6204:	bne	61e8 <ReadSingleData+0x348>
    6208:	mov	r5, r6
    620c:	b	7528 <ReadSingleData+0x1688>
    6210:	ldr	r0, [r6, #20]
    6214:	cmp	r0, #0
    6218:	beq	65b8 <ReadSingleData+0x718>
    621c:	cmp	r5, #256	; 0x100
    6220:	bgt	6b98 <ReadSingleData+0xcf8>
    6224:	ldr	r3, [r6]
    6228:	add	r4, sp, #32
    622c:	mov	r0, r4
    6230:	mov	r1, r7
    6234:	mov	r2, r5
    6238:	bl	18d0 <fread@plt>
    623c:	str	r0, [sp, #16]
    6240:	cmp	r5, #1
    6244:	blt	729c <ReadSingleData+0x13fc>
    6248:	mov	r6, r5
    624c:	mov	r7, r9
    6250:	mov	r0, r4
    6254:	bl	1bbc <Mat_int64Swap>
    6258:	bl	48d94 <__aeabi_l2f>
    625c:	str	r0, [r7], #4
    6260:	subs	r6, r6, #1
    6264:	add	r4, r4, #8
    6268:	bne	6250 <ReadSingleData+0x3b0>
    626c:	b	6c9c <ReadSingleData+0xdfc>
    6270:	add	r1, r9, #1024	; 0x400
    6274:	str	r5, [sp, #8]
    6278:	sub	r8, r5, #256	; 0x100
    627c:	mov	r0, #0
    6280:	add	r4, sp, #32
    6284:	mov	r5, #0
    6288:	mov	sl, r0
    628c:	mov	r6, r1
    6290:	ldr	r0, [sp, #28]
    6294:	ldr	r3, [r0]
    6298:	mov	r0, r4
    629c:	mov	r1, r7
    62a0:	mov	r2, #256	; 0x100
    62a4:	bl	18d0 <fread@plt>
    62a8:	mov	r1, r9
    62ac:	mov	r2, #0
    62b0:	add	r3, r4, r2
    62b4:	ldrsb	r3, [r3]
    62b8:	vmov	s0, r3
    62bc:	vcvt.f32.s32	s0, s0
    62c0:	vstmia	r1!, {s0}
    62c4:	add	r2, r2, #1
    62c8:	cmp	r2, #256	; 0x100
    62cc:	bne	62b0 <ReadSingleData+0x410>
    62d0:	add	r5, r0, r5
    62d4:	add	r9, r9, #1024	; 0x400
    62d8:	add	r1, r6, #1024	; 0x400
    62dc:	add	r0, sl, #256	; 0x100
    62e0:	cmp	r0, r8
    62e4:	blt	6288 <ReadSingleData+0x3e8>
    62e8:	ldr	r2, [sp, #8]
    62ec:	cmp	r0, r2
    62f0:	bge	7528 <ReadSingleData+0x1688>
    62f4:	mov	r1, r7
    62f8:	sub	r7, r2, r0
    62fc:	ldr	r0, [sp, #28]
    6300:	ldr	r3, [r0]
    6304:	add	r4, sp, #32
    6308:	mov	r0, r4
    630c:	mov	r2, r7
    6310:	bl	18d0 <fread@plt>
    6314:	add	r5, r0, r5
    6318:	cmp	r7, #1
    631c:	blt	7524 <ReadSingleData+0x1684>
    6320:	sub	r0, r8, sl
    6324:	ldrsb	r1, [r4], #1
    6328:	vmov	s0, r1
    632c:	vcvt.f32.s32	s0, s0
    6330:	vstmia	r6!, {s0}
    6334:	subs	r0, r0, #1
    6338:	bne	6324 <ReadSingleData+0x484>
    633c:	b	7524 <ReadSingleData+0x1684>
    6340:	add	r1, r9, #1024	; 0x400
    6344:	str	r5, [sp, #8]
    6348:	sub	r8, r5, #256	; 0x100
    634c:	mov	r0, #0
    6350:	add	r4, sp, #32
    6354:	mov	r5, #0
    6358:	mov	sl, r0
    635c:	mov	r6, r1
    6360:	ldr	r0, [sp, #28]
    6364:	ldr	r3, [r0]
    6368:	mov	r0, r4
    636c:	mov	r1, r7
    6370:	mov	r2, #256	; 0x100
    6374:	bl	18d0 <fread@plt>
    6378:	mov	r1, r9
    637c:	mov	r2, #0
    6380:	ldrb	r3, [r4, r2]
    6384:	vmov	s0, r3
    6388:	vcvt.f32.u32	s0, s0
    638c:	vstmia	r1!, {s0}
    6390:	add	r2, r2, #1
    6394:	cmp	r2, #256	; 0x100
    6398:	bne	6380 <ReadSingleData+0x4e0>
    639c:	add	r5, r0, r5
    63a0:	add	r9, r9, #1024	; 0x400
    63a4:	add	r1, r6, #1024	; 0x400
    63a8:	add	r0, sl, #256	; 0x100
    63ac:	cmp	r0, r8
    63b0:	blt	6358 <ReadSingleData+0x4b8>
    63b4:	ldr	r2, [sp, #8]
    63b8:	cmp	r0, r2
    63bc:	bge	7528 <ReadSingleData+0x1688>
    63c0:	mov	r1, r7
    63c4:	sub	r7, r2, r0
    63c8:	ldr	r0, [sp, #28]
    63cc:	ldr	r3, [r0]
    63d0:	add	r4, sp, #32
    63d4:	mov	r0, r4
    63d8:	mov	r2, r7
    63dc:	bl	18d0 <fread@plt>
    63e0:	add	r5, r0, r5
    63e4:	cmp	r7, #1
    63e8:	blt	7524 <ReadSingleData+0x1684>
    63ec:	sub	r0, r8, sl
    63f0:	ldrb	r1, [r4], #1
    63f4:	vmov	s0, r1
    63f8:	vcvt.f32.u32	s0, s0
    63fc:	vstmia	r6!, {s0}
    6400:	subs	r0, r0, #1
    6404:	bne	63f0 <ReadSingleData+0x550>
    6408:	b	7524 <ReadSingleData+0x1684>
    640c:	cmp	r5, #256	; 0x100
    6410:	bgt	6cb0 <ReadSingleData+0xe10>
    6414:	ldr	r3, [r6]
    6418:	add	r4, sp, #32
    641c:	mov	r0, r4
    6420:	mov	r1, r7
    6424:	mov	r2, r5
    6428:	bl	18d0 <fread@plt>
    642c:	cmp	r5, #1
    6430:	blt	65b0 <ReadSingleData+0x710>
    6434:	ldrsh	r1, [r4], #2
    6438:	vmov	s0, r1
    643c:	vcvt.f32.s32	s0, s0
    6440:	vstr	s0, [r9]
    6444:	subs	r5, r5, #1
    6448:	add	r9, r9, #4
    644c:	bne	6434 <ReadSingleData+0x594>
    6450:	b	65b0 <ReadSingleData+0x710>
    6454:	cmp	r5, #256	; 0x100
    6458:	bgt	6d80 <ReadSingleData+0xee0>
    645c:	ldr	r3, [r6]
    6460:	add	r4, sp, #32
    6464:	mov	r0, r4
    6468:	mov	r1, r7
    646c:	mov	r2, r5
    6470:	bl	18d0 <fread@plt>
    6474:	cmp	r5, #1
    6478:	blt	65b0 <ReadSingleData+0x710>
    647c:	ldrh	r1, [r4], #2
    6480:	vmov	s0, r1
    6484:	vcvt.f32.u32	s0, s0
    6488:	vstr	s0, [r9]
    648c:	subs	r5, r5, #1
    6490:	add	r9, r9, #4
    6494:	bne	647c <ReadSingleData+0x5dc>
    6498:	b	65b0 <ReadSingleData+0x710>
    649c:	cmp	r5, #256	; 0x100
    64a0:	bgt	6e50 <ReadSingleData+0xfb0>
    64a4:	ldr	r3, [r6]
    64a8:	add	r4, sp, #32
    64ac:	mov	r0, r4
    64b0:	mov	r1, r7
    64b4:	mov	r2, r5
    64b8:	bl	18d0 <fread@plt>
    64bc:	cmp	r5, #1
    64c0:	blt	65b0 <ReadSingleData+0x710>
    64c4:	ldr	r1, [r4], #4
    64c8:	vmov	s0, r1
    64cc:	vcvt.f32.s32	s0, s0
    64d0:	vstr	s0, [r9]
    64d4:	subs	r5, r5, #1
    64d8:	add	r9, r9, #4
    64dc:	bne	64c4 <ReadSingleData+0x624>
    64e0:	b	65b0 <ReadSingleData+0x710>
    64e4:	cmp	r5, #256	; 0x100
    64e8:	bgt	6f1c <ReadSingleData+0x107c>
    64ec:	ldr	r3, [r6]
    64f0:	add	r4, sp, #32
    64f4:	mov	r0, r4
    64f8:	mov	r1, r7
    64fc:	mov	r2, r5
    6500:	bl	18d0 <fread@plt>
    6504:	cmp	r5, #1
    6508:	blt	65b0 <ReadSingleData+0x710>
    650c:	ldr	r1, [r4], #4
    6510:	vmov	s0, r1
    6514:	vcvt.f32.u32	s0, s0
    6518:	vstr	s0, [r9]
    651c:	subs	r5, r5, #1
    6520:	add	r9, r9, #4
    6524:	bne	650c <ReadSingleData+0x66c>
    6528:	b	65b0 <ReadSingleData+0x710>
    652c:	cmp	r5, #256	; 0x100
    6530:	bgt	6fe8 <ReadSingleData+0x1148>
    6534:	ldr	r3, [r6]
    6538:	add	r0, sp, #32
    653c:	mov	r1, r7
    6540:	mov	r2, r5
    6544:	bl	18d0 <fread@plt>
    6548:	mov	r4, r0
    654c:	cmp	r5, #0
    6550:	ble	7290 <ReadSingleData+0x13f0>
    6554:	lsl	r2, r5, #2
    6558:	add	r1, sp, #32
    655c:	mov	r0, r9
    6560:	bl	1834 <memcpy@plt>
    6564:	mov	r5, r4
    6568:	b	7528 <ReadSingleData+0x1688>
    656c:	cmp	r5, #256	; 0x100
    6570:	bgt	7094 <ReadSingleData+0x11f4>
    6574:	ldr	r3, [r6]
    6578:	add	r4, sp, #32
    657c:	mov	r0, r4
    6580:	mov	r1, r7
    6584:	mov	r2, r5
    6588:	bl	18d0 <fread@plt>
    658c:	cmp	r5, #1
    6590:	blt	65b0 <ReadSingleData+0x710>
    6594:	vldr	d16, [r4]
    6598:	vcvt.f32.f64	s0, d16
    659c:	vstr	s0, [r9]
    65a0:	subs	r5, r5, #1
    65a4:	add	r9, r9, #4
    65a8:	add	r4, r4, #8
    65ac:	bne	6594 <ReadSingleData+0x6f4>
    65b0:	mov	r5, r0
    65b4:	b	7528 <ReadSingleData+0x1688>
    65b8:	cmp	r5, #256	; 0x100
    65bc:	bgt	7164 <ReadSingleData+0x12c4>
    65c0:	ldr	r3, [r6]
    65c4:	add	r4, sp, #32
    65c8:	mov	r0, r4
    65cc:	mov	r1, r7
    65d0:	mov	r2, r5
    65d4:	bl	18d0 <fread@plt>
    65d8:	str	r0, [sp, #16]
    65dc:	cmp	r5, #1
    65e0:	blt	729c <ReadSingleData+0x13fc>
    65e4:	mov	r6, r5
    65e8:	mov	r7, r9
    65ec:	ldrd	r0, [r4]
    65f0:	bl	48d94 <__aeabi_l2f>
    65f4:	str	r0, [r7], #4
    65f8:	subs	r6, r6, #1
    65fc:	add	r4, r4, #8
    6600:	bne	65ec <ReadSingleData+0x74c>
    6604:	b	6c9c <ReadSingleData+0xdfc>
    6608:	add	r3, r9, #1024	; 0x400
    660c:	str	r5, [sp, #8]
    6610:	sub	r0, r5, #256	; 0x100
    6614:	str	r0, [sp, #16]
    6618:	mov	r0, #0
    661c:	add	r4, sp, #32
    6620:	mov	r5, #0
    6624:	mov	r1, r7
    6628:	str	r0, [sp, #20]
    662c:	mov	r8, r3
    6630:	ldr	r3, [r6]
    6634:	mov	r0, r4
    6638:	mov	r2, #256	; 0x100
    663c:	bl	18d0 <fread@plt>
    6640:	mov	r6, r0
    6644:	mov	r7, r9
    6648:	mov	sl, #0
    664c:	add	r0, r4, sl
    6650:	bl	1c50 <Mat_int16Swap>
    6654:	vmov	s0, r0
    6658:	vcvt.f32.s32	s0, s0
    665c:	vstmia	r7!, {s0}
    6660:	add	sl, sl, #2
    6664:	cmp	sl, #512	; 0x200
    6668:	bne	664c <ReadSingleData+0x7ac>
    666c:	add	r5, r6, r5
    6670:	add	r9, r9, #1024	; 0x400
    6674:	add	r3, r8, #1024	; 0x400
    6678:	ldr	r7, [sp, #20]
    667c:	add	r0, r7, #256	; 0x100
    6680:	ldr	r2, [sp, #16]
    6684:	cmp	r0, r2
    6688:	ldr	r1, [sp, #24]
    668c:	ldr	r6, [sp, #28]
    6690:	blt	6628 <ReadSingleData+0x788>
    6694:	mov	r9, r1
    6698:	ldr	r1, [sp, #8]
    669c:	cmp	r0, r1
    66a0:	bge	6b90 <ReadSingleData+0xcf0>
    66a4:	mov	r2, r6
    66a8:	sub	r6, r1, r0
    66ac:	ldr	r3, [r2]
    66b0:	add	r4, sp, #32
    66b4:	mov	r0, r4
    66b8:	mov	r1, r9
    66bc:	mov	r2, r6
    66c0:	bl	18d0 <fread@plt>
    66c4:	add	r5, r0, r5
    66c8:	cmp	r6, #1
    66cc:	blt	6b90 <ReadSingleData+0xcf0>
    66d0:	ldr	r0, [sp, #16]
    66d4:	sub	r6, r0, r7
    66d8:	mov	r0, r4
    66dc:	bl	1c50 <Mat_int16Swap>
    66e0:	vmov	s0, r0
    66e4:	vcvt.f32.s32	s0, s0
    66e8:	vstmia	r8!, {s0}
    66ec:	subs	r6, r6, #1
    66f0:	add	r4, r4, #2
    66f4:	bne	66d8 <ReadSingleData+0x838>
    66f8:	b	6b90 <ReadSingleData+0xcf0>
    66fc:	add	r3, r9, #1024	; 0x400
    6700:	str	r5, [sp, #8]
    6704:	sub	r0, r5, #256	; 0x100
    6708:	str	r0, [sp, #16]
    670c:	mov	r0, #0
    6710:	add	r4, sp, #32
    6714:	mov	r5, #0
    6718:	mov	r1, r7
    671c:	str	r0, [sp, #20]
    6720:	mov	r8, r3
    6724:	ldr	r3, [r6]
    6728:	mov	r0, r4
    672c:	mov	r2, #256	; 0x100
    6730:	bl	18d0 <fread@plt>
    6734:	mov	r6, r0
    6738:	mov	r7, r9
    673c:	mov	sl, #0
    6740:	add	r0, r4, sl
    6744:	bl	1c64 <Mat_uint16Swap>
    6748:	vmov	s0, r0
    674c:	vcvt.f32.u32	s0, s0
    6750:	vstmia	r7!, {s0}
    6754:	add	sl, sl, #2
    6758:	cmp	sl, #512	; 0x200
    675c:	bne	6740 <ReadSingleData+0x8a0>
    6760:	add	r5, r6, r5
    6764:	add	r9, r9, #1024	; 0x400
    6768:	add	r3, r8, #1024	; 0x400
    676c:	ldr	r7, [sp, #20]
    6770:	add	r0, r7, #256	; 0x100
    6774:	ldr	r2, [sp, #16]
    6778:	cmp	r0, r2
    677c:	ldr	r1, [sp, #24]
    6780:	ldr	r6, [sp, #28]
    6784:	blt	671c <ReadSingleData+0x87c>
    6788:	mov	r9, r1
    678c:	ldr	r1, [sp, #8]
    6790:	cmp	r0, r1
    6794:	bge	6b90 <ReadSingleData+0xcf0>
    6798:	mov	r2, r6
    679c:	sub	r6, r1, r0
    67a0:	ldr	r3, [r2]
    67a4:	add	r4, sp, #32
    67a8:	mov	r0, r4
    67ac:	mov	r1, r9
    67b0:	mov	r2, r6
    67b4:	bl	18d0 <fread@plt>
    67b8:	add	r5, r0, r5
    67bc:	cmp	r6, #1
    67c0:	blt	6b90 <ReadSingleData+0xcf0>
    67c4:	ldr	r0, [sp, #16]
    67c8:	sub	r6, r0, r7
    67cc:	mov	r0, r4
    67d0:	bl	1c64 <Mat_uint16Swap>
    67d4:	vmov	s0, r0
    67d8:	vcvt.f32.u32	s0, s0
    67dc:	vstmia	r8!, {s0}
    67e0:	subs	r6, r6, #1
    67e4:	add	r4, r4, #2
    67e8:	bne	67cc <ReadSingleData+0x92c>
    67ec:	b	6b90 <ReadSingleData+0xcf0>
    67f0:	add	r1, r9, #1024	; 0x400
    67f4:	str	r5, [sp, #8]
    67f8:	sub	r0, r5, #256	; 0x100
    67fc:	str	r0, [sp, #20]
    6800:	mov	r0, #0
    6804:	add	r4, sp, #32
    6808:	mov	r5, #0
    680c:	mov	sl, r0
    6810:	mov	r8, r1
    6814:	ldr	r3, [r6]
    6818:	mov	r0, r4
    681c:	mov	r1, r7
    6820:	mov	r2, #256	; 0x100
    6824:	bl	18d0 <fread@plt>
    6828:	mov	r6, r0
    682c:	mov	r7, #0
    6830:	add	r0, r4, r7
    6834:	bl	1c28 <Mat_int32Swap>
    6838:	add	r1, r9, r7
    683c:	vmov	s0, r0
    6840:	vcvt.f32.s32	s0, s0
    6844:	vstr	s0, [r1]
    6848:	add	r7, r7, #4
    684c:	cmp	r7, #1024	; 0x400
    6850:	bne	6830 <ReadSingleData+0x990>
    6854:	add	r5, r6, r5
    6858:	add	r9, r9, #1024	; 0x400
    685c:	add	r1, r8, #1024	; 0x400
    6860:	add	r0, sl, #256	; 0x100
    6864:	ldr	r2, [sp, #20]
    6868:	cmp	r0, r2
    686c:	ldr	r7, [sp, #24]
    6870:	ldr	r6, [sp, #28]
    6874:	blt	680c <ReadSingleData+0x96c>
    6878:	ldr	r1, [sp, #8]
    687c:	cmp	r0, r1
    6880:	bge	7528 <ReadSingleData+0x1688>
    6884:	mov	r2, r6
    6888:	sub	r6, r1, r0
    688c:	ldr	r3, [r2]
    6890:	add	r4, sp, #32
    6894:	mov	r0, r4
    6898:	mov	r1, r7
    689c:	mov	r2, r6
    68a0:	bl	18d0 <fread@plt>
    68a4:	add	r5, r0, r5
    68a8:	cmp	r6, #1
    68ac:	blt	7528 <ReadSingleData+0x1688>
    68b0:	ldr	r0, [sp, #20]
    68b4:	sub	r6, r0, sl
    68b8:	mov	r0, r4
    68bc:	bl	1c28 <Mat_int32Swap>
    68c0:	vmov	s0, r0
    68c4:	vcvt.f32.s32	s0, s0
    68c8:	vstmia	r8!, {s0}
    68cc:	subs	r6, r6, #1
    68d0:	add	r4, r4, #4
    68d4:	bne	68b8 <ReadSingleData+0xa18>
    68d8:	b	7528 <ReadSingleData+0x1688>
    68dc:	add	r1, r9, #1024	; 0x400
    68e0:	str	r5, [sp, #8]
    68e4:	sub	r0, r5, #256	; 0x100
    68e8:	str	r0, [sp, #20]
    68ec:	mov	r0, #0
    68f0:	add	r4, sp, #32
    68f4:	mov	r5, #0
    68f8:	mov	sl, r0
    68fc:	mov	r8, r1
    6900:	ldr	r3, [r6]
    6904:	mov	r0, r4
    6908:	mov	r1, r7
    690c:	mov	r2, #256	; 0x100
    6910:	bl	18d0 <fread@plt>
    6914:	mov	r6, r0
    6918:	mov	r7, #0
    691c:	add	r0, r4, r7
    6920:	bl	1c3c <Mat_uint32Swap>
    6924:	add	r1, r9, r7
    6928:	vmov	s0, r0
    692c:	vcvt.f32.u32	s0, s0
    6930:	vstr	s0, [r1]
    6934:	add	r7, r7, #4
    6938:	cmp	r7, #1024	; 0x400
    693c:	bne	691c <ReadSingleData+0xa7c>
    6940:	add	r5, r6, r5
    6944:	add	r9, r9, #1024	; 0x400
    6948:	add	r1, r8, #1024	; 0x400
    694c:	add	r0, sl, #256	; 0x100
    6950:	ldr	r2, [sp, #20]
    6954:	cmp	r0, r2
    6958:	ldr	r7, [sp, #24]
    695c:	ldr	r6, [sp, #28]
    6960:	blt	68f8 <ReadSingleData+0xa58>
    6964:	ldr	r1, [sp, #8]
    6968:	cmp	r0, r1
    696c:	bge	7528 <ReadSingleData+0x1688>
    6970:	mov	r2, r6
    6974:	sub	r6, r1, r0
    6978:	ldr	r3, [r2]
    697c:	add	r4, sp, #32
    6980:	mov	r0, r4
    6984:	mov	r1, r7
    6988:	mov	r2, r6
    698c:	bl	18d0 <fread@plt>
    6990:	add	r5, r0, r5
    6994:	cmp	r6, #1
    6998:	blt	7528 <ReadSingleData+0x1688>
    699c:	ldr	r0, [sp, #20]
    69a0:	sub	r6, r0, sl
    69a4:	mov	r0, r4
    69a8:	bl	1c3c <Mat_uint32Swap>
    69ac:	vmov	s0, r0
    69b0:	vcvt.f32.u32	s0, s0
    69b4:	vstmia	r8!, {s0}
    69b8:	subs	r6, r6, #1
    69bc:	add	r4, r4, #4
    69c0:	bne	69a4 <ReadSingleData+0xb04>
    69c4:	b	7528 <ReadSingleData+0x1688>
    69c8:	add	r1, r9, #1024	; 0x400
    69cc:	str	r5, [sp, #8]
    69d0:	sub	r0, r5, #256	; 0x100
    69d4:	str	r0, [sp, #20]
    69d8:	mov	r0, #0
    69dc:	add	r4, sp, #32
    69e0:	mov	r5, #0
    69e4:	mov	sl, r0
    69e8:	mov	r8, r1
    69ec:	ldr	r3, [r6]
    69f0:	mov	r0, r4
    69f4:	mov	r1, r7
    69f8:	mov	r2, #256	; 0x100
    69fc:	bl	18d0 <fread@plt>
    6a00:	mov	r6, r0
    6a04:	mov	r7, #0
    6a08:	add	r0, r4, r7
    6a0c:	bl	1c7c <Mat_floatSwap>
    6a10:	add	r0, r9, r7
    6a14:	vstr	s0, [r0]
    6a18:	add	r7, r7, #4
    6a1c:	cmp	r7, #1024	; 0x400
    6a20:	bne	6a08 <ReadSingleData+0xb68>
    6a24:	add	r5, r6, r5
    6a28:	add	r9, r9, #1024	; 0x400
    6a2c:	add	r1, r8, #1024	; 0x400
    6a30:	add	r0, sl, #256	; 0x100
    6a34:	ldr	r2, [sp, #20]
    6a38:	cmp	r0, r2
    6a3c:	ldr	r7, [sp, #24]
    6a40:	ldr	r6, [sp, #28]
    6a44:	blt	69e4 <ReadSingleData+0xb44>
    6a48:	ldr	r1, [sp, #8]
    6a4c:	cmp	r0, r1
    6a50:	bge	7528 <ReadSingleData+0x1688>
    6a54:	mov	r2, r6
    6a58:	sub	r6, r1, r0
    6a5c:	ldr	r3, [r2]
    6a60:	add	r4, sp, #32
    6a64:	mov	r0, r4
    6a68:	mov	r1, r7
    6a6c:	mov	r2, r6
    6a70:	bl	18d0 <fread@plt>
    6a74:	add	r5, r0, r5
    6a78:	cmp	r6, #1
    6a7c:	blt	7528 <ReadSingleData+0x1688>
    6a80:	ldr	r0, [sp, #20]
    6a84:	sub	r6, r0, sl
    6a88:	mov	r0, r4
    6a8c:	bl	1c7c <Mat_floatSwap>
    6a90:	vstmia	r8!, {s0}
    6a94:	subs	r6, r6, #1
    6a98:	add	r4, r4, #4
    6a9c:	bne	6a88 <ReadSingleData+0xbe8>
    6aa0:	b	7528 <ReadSingleData+0x1688>
    6aa4:	add	r3, r9, #1024	; 0x400
    6aa8:	str	r5, [sp, #8]
    6aac:	sub	r0, r5, #256	; 0x100
    6ab0:	str	r0, [sp, #16]
    6ab4:	mov	r0, #0
    6ab8:	mov	r5, #0
    6abc:	mov	r1, r7
    6ac0:	str	r0, [sp, #20]
    6ac4:	mov	r8, r3
    6ac8:	ldr	r3, [r6]
    6acc:	add	r4, sp, #32
    6ad0:	mov	r0, r4
    6ad4:	mov	r2, #256	; 0x100
    6ad8:	bl	18d0 <fread@plt>
    6adc:	mov	r6, r0
    6ae0:	mov	r7, #0
    6ae4:	add	sl, r9, r7
    6ae8:	mov	r0, r4
    6aec:	bl	1cc0 <Mat_doubleSwap>
    6af0:	vcvt.f32.f64	s0, d0
    6af4:	vstr	s0, [sl]
    6af8:	add	r7, r7, #4
    6afc:	add	r4, r4, #8
    6b00:	cmp	r7, #1024	; 0x400
    6b04:	bne	6ae4 <ReadSingleData+0xc44>
    6b08:	add	r5, r6, r5
    6b0c:	add	r9, r9, #1024	; 0x400
    6b10:	add	r3, r8, #1024	; 0x400
    6b14:	ldr	r7, [sp, #20]
    6b18:	add	r0, r7, #256	; 0x100
    6b1c:	ldr	r2, [sp, #16]
    6b20:	cmp	r0, r2
    6b24:	ldr	r1, [sp, #24]
    6b28:	ldr	r6, [sp, #28]
    6b2c:	blt	6ac0 <ReadSingleData+0xc20>
    6b30:	mov	r9, r1
    6b34:	ldr	r1, [sp, #8]
    6b38:	cmp	r0, r1
    6b3c:	bge	6b90 <ReadSingleData+0xcf0>
    6b40:	mov	r2, r6
    6b44:	sub	r6, r1, r0
    6b48:	ldr	r3, [r2]
    6b4c:	add	r4, sp, #32
    6b50:	mov	r0, r4
    6b54:	mov	r1, r9
    6b58:	mov	r2, r6
    6b5c:	bl	18d0 <fread@plt>
    6b60:	add	r5, r0, r5
    6b64:	cmp	r6, #1
    6b68:	blt	6b90 <ReadSingleData+0xcf0>
    6b6c:	ldr	r0, [sp, #16]
    6b70:	sub	r6, r0, r7
    6b74:	mov	r0, r4
    6b78:	bl	1cc0 <Mat_doubleSwap>
    6b7c:	vcvt.f32.f64	s0, d0
    6b80:	vstmia	r8!, {s0}
    6b84:	subs	r6, r6, #1
    6b88:	add	r4, r4, #8
    6b8c:	bne	6b74 <ReadSingleData+0xcd4>
    6b90:	mov	r7, r9
    6b94:	b	7528 <ReadSingleData+0x1688>
    6b98:	str	r8, [sp]
    6b9c:	add	r1, r9, #1024	; 0x400
    6ba0:	str	r5, [sp, #8]
    6ba4:	sub	r0, r5, #256	; 0x100
    6ba8:	str	r0, [sp, #12]
    6bac:	mov	r0, #0
    6bb0:	mov	r7, r9
    6bb4:	mov	r5, #0
    6bb8:	str	r0, [sp, #20]
    6bbc:	mov	r6, r1
    6bc0:	ldr	r0, [sp, #28]
    6bc4:	ldr	r3, [r0]
    6bc8:	add	r4, sp, #32
    6bcc:	mov	r0, r4
    6bd0:	ldr	r1, [sp, #24]
    6bd4:	mov	r2, #256	; 0x100
    6bd8:	bl	18d0 <fread@plt>
    6bdc:	mov	r8, r0
    6be0:	mov	sl, #0
    6be4:	mov	r0, r4
    6be8:	bl	1bbc <Mat_int64Swap>
    6bec:	bl	48d94 <__aeabi_l2f>
    6bf0:	str	r0, [r7, sl]
    6bf4:	add	sl, sl, #4
    6bf8:	add	r4, r4, #8
    6bfc:	cmp	sl, #1024	; 0x400
    6c00:	bne	6be4 <ReadSingleData+0xd44>
    6c04:	add	r5, r8, r5
    6c08:	add	r7, r7, #1024	; 0x400
    6c0c:	add	r1, r6, #1024	; 0x400
    6c10:	mov	sl, r6
    6c14:	ldr	r6, [sp, #20]
    6c18:	add	r0, r6, #256	; 0x100
    6c1c:	ldr	r2, [sp, #12]
    6c20:	cmp	r0, r2
    6c24:	blt	6bb8 <ReadSingleData+0xd18>
    6c28:	str	r5, [sp, #16]
    6c2c:	ldr	r5, [sp, #8]
    6c30:	cmp	r0, r5
    6c34:	bge	7278 <ReadSingleData+0x13d8>
    6c38:	sub	r8, r5, r0
    6c3c:	ldr	r0, [sp, #28]
    6c40:	ldr	r3, [r0]
    6c44:	add	r4, sp, #32
    6c48:	mov	r0, r4
    6c4c:	ldr	r7, [sp, #24]
    6c50:	mov	r1, r7
    6c54:	mov	r2, r8
    6c58:	bl	18d0 <fread@plt>
    6c5c:	ldr	r1, [sp, #16]
    6c60:	add	r1, r0, r1
    6c64:	str	r1, [sp, #16]
    6c68:	cmp	r8, #1
    6c6c:	blt	727c <ReadSingleData+0x13dc>
    6c70:	ldr	r0, [sp, #12]
    6c74:	sub	r7, r0, r6
    6c78:	ldr	r8, [sp]
    6c7c:	mov	r6, sl
    6c80:	mov	r0, r4
    6c84:	bl	1bbc <Mat_int64Swap>
    6c88:	bl	48d94 <__aeabi_l2f>
    6c8c:	str	r0, [r6], #4
    6c90:	subs	r7, r7, #1
    6c94:	add	r4, r4, #8
    6c98:	bne	6c80 <ReadSingleData+0xde0>
    6c9c:	ldr	r7, [sp, #24]
    6ca0:	ldr	r6, [sp, #28]
    6ca4:	cmp	r8, #13
    6ca8:	beq	72a4 <ReadSingleData+0x1404>
    6cac:	b	7350 <ReadSingleData+0x14b0>
    6cb0:	add	r1, r9, #1024	; 0x400
    6cb4:	str	r5, [sp, #8]
    6cb8:	sub	r8, r5, #256	; 0x100
    6cbc:	mov	r0, #0
    6cc0:	add	r4, sp, #32
    6cc4:	mov	r5, #0
    6cc8:	mov	sl, r0
    6ccc:	mov	r6, r1
    6cd0:	ldr	r0, [sp, #28]
    6cd4:	ldr	r3, [r0]
    6cd8:	mov	r0, r4
    6cdc:	mov	r1, r7
    6ce0:	mov	r2, #256	; 0x100
    6ce4:	bl	18d0 <fread@plt>
    6ce8:	mov	r1, r9
    6cec:	mov	r2, #0
    6cf0:	add	r3, r4, r2
    6cf4:	ldrsh	r3, [r3]
    6cf8:	vmov	s0, r3
    6cfc:	vcvt.f32.s32	s0, s0
    6d00:	vstmia	r1!, {s0}
    6d04:	add	r2, r2, #2
    6d08:	cmp	r2, #512	; 0x200
    6d0c:	bne	6cf0 <ReadSingleData+0xe50>
    6d10:	add	r5, r0, r5
    6d14:	add	r9, r9, #1024	; 0x400
    6d18:	add	r1, r6, #1024	; 0x400
    6d1c:	add	r0, sl, #256	; 0x100
    6d20:	cmp	r0, r8
    6d24:	blt	6cc8 <ReadSingleData+0xe28>
    6d28:	ldr	r2, [sp, #8]
    6d2c:	cmp	r0, r2
    6d30:	bge	7528 <ReadSingleData+0x1688>
    6d34:	mov	r1, r7
    6d38:	sub	r7, r2, r0
    6d3c:	ldr	r0, [sp, #28]
    6d40:	ldr	r3, [r0]
    6d44:	add	r4, sp, #32
    6d48:	mov	r0, r4
    6d4c:	mov	r2, r7
    6d50:	bl	18d0 <fread@plt>
    6d54:	add	r5, r0, r5
    6d58:	cmp	r7, #1
    6d5c:	blt	7524 <ReadSingleData+0x1684>
    6d60:	sub	r0, r8, sl
    6d64:	ldrsh	r1, [r4], #2
    6d68:	vmov	s0, r1
    6d6c:	vcvt.f32.s32	s0, s0
    6d70:	vstmia	r6!, {s0}
    6d74:	subs	r0, r0, #1
    6d78:	bne	6d64 <ReadSingleData+0xec4>
    6d7c:	b	7524 <ReadSingleData+0x1684>
    6d80:	add	r1, r9, #1024	; 0x400
    6d84:	str	r5, [sp, #8]
    6d88:	sub	r8, r5, #256	; 0x100
    6d8c:	mov	r0, #0
    6d90:	add	r4, sp, #32
    6d94:	mov	r5, #0
    6d98:	mov	sl, r0
    6d9c:	mov	r6, r1
    6da0:	ldr	r0, [sp, #28]
    6da4:	ldr	r3, [r0]
    6da8:	mov	r0, r4
    6dac:	mov	r1, r7
    6db0:	mov	r2, #256	; 0x100
    6db4:	bl	18d0 <fread@plt>
    6db8:	mov	r1, r9
    6dbc:	mov	r2, #0
    6dc0:	add	r3, r4, r2
    6dc4:	ldrh	r3, [r3]
    6dc8:	vmov	s0, r3
    6dcc:	vcvt.f32.u32	s0, s0
    6dd0:	vstmia	r1!, {s0}
    6dd4:	add	r2, r2, #2
    6dd8:	cmp	r2, #512	; 0x200
    6ddc:	bne	6dc0 <ReadSingleData+0xf20>
    6de0:	add	r5, r0, r5
    6de4:	add	r9, r9, #1024	; 0x400
    6de8:	add	r1, r6, #1024	; 0x400
    6dec:	add	r0, sl, #256	; 0x100
    6df0:	cmp	r0, r8
    6df4:	blt	6d98 <ReadSingleData+0xef8>
    6df8:	ldr	r2, [sp, #8]
    6dfc:	cmp	r0, r2
    6e00:	bge	7528 <ReadSingleData+0x1688>
    6e04:	mov	r1, r7
    6e08:	sub	r7, r2, r0
    6e0c:	ldr	r0, [sp, #28]
    6e10:	ldr	r3, [r0]
    6e14:	add	r4, sp, #32
    6e18:	mov	r0, r4
    6e1c:	mov	r2, r7
    6e20:	bl	18d0 <fread@plt>
    6e24:	add	r5, r0, r5
    6e28:	cmp	r7, #1
    6e2c:	blt	7524 <ReadSingleData+0x1684>
    6e30:	sub	r0, r8, sl
    6e34:	ldrh	r1, [r4], #2
    6e38:	vmov	s0, r1
    6e3c:	vcvt.f32.u32	s0, s0
    6e40:	vstmia	r6!, {s0}
    6e44:	subs	r0, r0, #1
    6e48:	bne	6e34 <ReadSingleData+0xf94>
    6e4c:	b	7524 <ReadSingleData+0x1684>
    6e50:	add	r1, r9, #1024	; 0x400
    6e54:	str	r5, [sp, #8]
    6e58:	sub	r8, r5, #256	; 0x100
    6e5c:	mov	r0, #0
    6e60:	add	r4, sp, #32
    6e64:	mov	r5, #0
    6e68:	mov	sl, r0
    6e6c:	mov	r6, r1
    6e70:	ldr	r0, [sp, #28]
    6e74:	ldr	r3, [r0]
    6e78:	mov	r0, r4
    6e7c:	mov	r1, r7
    6e80:	mov	r2, #256	; 0x100
    6e84:	bl	18d0 <fread@plt>
    6e88:	mov	r1, #0
    6e8c:	add	r2, r4, r1
    6e90:	vldr	s0, [r2]
    6e94:	add	r2, r9, r1
    6e98:	vcvt.f32.s32	s0, s0
    6e9c:	vstr	s0, [r2]
    6ea0:	add	r1, r1, #4
    6ea4:	cmp	r1, #1024	; 0x400
    6ea8:	bne	6e8c <ReadSingleData+0xfec>
    6eac:	add	r5, r0, r5
    6eb0:	add	r9, r9, #1024	; 0x400
    6eb4:	add	r1, r6, #1024	; 0x400
    6eb8:	add	r0, sl, #256	; 0x100
    6ebc:	cmp	r0, r8
    6ec0:	blt	6e68 <ReadSingleData+0xfc8>
    6ec4:	ldr	r2, [sp, #8]
    6ec8:	cmp	r0, r2
    6ecc:	bge	7528 <ReadSingleData+0x1688>
    6ed0:	mov	r1, r7
    6ed4:	sub	r7, r2, r0
    6ed8:	ldr	r0, [sp, #28]
    6edc:	ldr	r3, [r0]
    6ee0:	add	r4, sp, #32
    6ee4:	mov	r0, r4
    6ee8:	mov	r2, r7
    6eec:	bl	18d0 <fread@plt>
    6ef0:	add	r5, r0, r5
    6ef4:	cmp	r7, #1
    6ef8:	blt	7524 <ReadSingleData+0x1684>
    6efc:	sub	r0, r8, sl
    6f00:	ldr	r1, [r4], #4
    6f04:	vmov	s0, r1
    6f08:	vcvt.f32.s32	s0, s0
    6f0c:	vstmia	r6!, {s0}
    6f10:	subs	r0, r0, #1
    6f14:	bne	6f00 <ReadSingleData+0x1060>
    6f18:	b	7524 <ReadSingleData+0x1684>
    6f1c:	add	r1, r9, #1024	; 0x400
    6f20:	str	r5, [sp, #8]
    6f24:	sub	r8, r5, #256	; 0x100
    6f28:	mov	r0, #0
    6f2c:	add	r4, sp, #32
    6f30:	mov	r5, #0
    6f34:	mov	sl, r0
    6f38:	mov	r6, r1
    6f3c:	ldr	r0, [sp, #28]
    6f40:	ldr	r3, [r0]
    6f44:	mov	r0, r4
    6f48:	mov	r1, r7
    6f4c:	mov	r2, #256	; 0x100
    6f50:	bl	18d0 <fread@plt>
    6f54:	mov	r1, #0
    6f58:	add	r2, r4, r1
    6f5c:	vldr	s0, [r2]
    6f60:	add	r2, r9, r1
    6f64:	vcvt.f32.u32	s0, s0
    6f68:	vstr	s0, [r2]
    6f6c:	add	r1, r1, #4
    6f70:	cmp	r1, #1024	; 0x400
    6f74:	bne	6f58 <ReadSingleData+0x10b8>
    6f78:	add	r5, r0, r5
    6f7c:	add	r9, r9, #1024	; 0x400
    6f80:	add	r1, r6, #1024	; 0x400
    6f84:	add	r0, sl, #256	; 0x100
    6f88:	cmp	r0, r8
    6f8c:	blt	6f34 <ReadSingleData+0x1094>
    6f90:	ldr	r2, [sp, #8]
    6f94:	cmp	r0, r2
    6f98:	bge	7528 <ReadSingleData+0x1688>
    6f9c:	mov	r1, r7
    6fa0:	sub	r7, r2, r0
    6fa4:	ldr	r0, [sp, #28]
    6fa8:	ldr	r3, [r0]
    6fac:	add	r4, sp, #32
    6fb0:	mov	r0, r4
    6fb4:	mov	r2, r7
    6fb8:	bl	18d0 <fread@plt>
    6fbc:	add	r5, r0, r5
    6fc0:	cmp	r7, #1
    6fc4:	blt	7524 <ReadSingleData+0x1684>
    6fc8:	sub	r0, r8, sl
    6fcc:	ldr	r1, [r4], #4
    6fd0:	vmov	s0, r1
    6fd4:	vcvt.f32.u32	s0, s0
    6fd8:	vstmia	r6!, {s0}
    6fdc:	subs	r0, r0, #1
    6fe0:	bne	6fcc <ReadSingleData+0x112c>
    6fe4:	b	7524 <ReadSingleData+0x1684>
    6fe8:	lsl	r4, r5, #2
    6fec:	str	r5, [sp, #8]
    6ff0:	sub	r0, r5, #256	; 0x100
    6ff4:	str	r0, [sp, #20]
    6ff8:	mov	r7, r6
    6ffc:	mov	r6, #0
    7000:	add	r8, sp, #32
    7004:	mov	r5, #0
    7008:	ldr	r3, [r7]
    700c:	mov	r0, r8
    7010:	ldr	r1, [sp, #24]
    7014:	mov	r2, #256	; 0x100
    7018:	bl	18d0 <fread@plt>
    701c:	mov	sl, r0
    7020:	add	r0, r9, r6, lsl #2
    7024:	mov	r1, r8
    7028:	mov	r2, #1024	; 0x400
    702c:	bl	1834 <memcpy@plt>
    7030:	add	r5, sl, r5
    7034:	sub	r4, r4, #1024	; 0x400
    7038:	add	r6, r6, #256	; 0x100
    703c:	ldr	r0, [sp, #20]
    7040:	cmp	r6, r0
    7044:	blt	7008 <ReadSingleData+0x1168>
    7048:	ldr	r0, [sp, #8]
    704c:	cmp	r6, r0
    7050:	bge	7524 <ReadSingleData+0x1684>
    7054:	sub	r8, r0, r6
    7058:	ldr	r0, [sp, #28]
    705c:	ldr	r3, [r0]
    7060:	add	r0, sp, #32
    7064:	ldr	r7, [sp, #24]
    7068:	mov	r1, r7
    706c:	mov	r2, r8
    7070:	bl	18d0 <fread@plt>
    7074:	add	r5, r0, r5
    7078:	cmp	r8, #0
    707c:	ble	7528 <ReadSingleData+0x1688>
    7080:	add	r0, r9, r6, lsl #2
    7084:	add	r1, sp, #32
    7088:	mov	r2, r4
    708c:	bl	1834 <memcpy@plt>
    7090:	b	7528 <ReadSingleData+0x1688>
    7094:	add	r1, r9, #1024	; 0x400
    7098:	str	r5, [sp, #8]
    709c:	sub	r8, r5, #256	; 0x100
    70a0:	mov	r0, #0
    70a4:	add	r4, sp, #32
    70a8:	mov	r5, #0
    70ac:	mov	sl, r0
    70b0:	mov	r6, r1
    70b4:	ldr	r0, [sp, #28]
    70b8:	ldr	r3, [r0]
    70bc:	mov	r0, r4
    70c0:	mov	r1, r7
    70c4:	mov	r2, #256	; 0x100
    70c8:	bl	18d0 <fread@plt>
    70cc:	mov	r1, #0
    70d0:	mov	r2, r4
    70d4:	vldr	d16, [r2]
    70d8:	add	r3, r9, r1
    70dc:	vcvt.f32.f64	s0, d16
    70e0:	vstr	s0, [r3]
    70e4:	add	r1, r1, #4
    70e8:	add	r2, r2, #8
    70ec:	cmp	r1, #1024	; 0x400
    70f0:	bne	70d4 <ReadSingleData+0x1234>
    70f4:	add	r5, r0, r5
    70f8:	add	r9, r9, #1024	; 0x400
    70fc:	add	r1, r6, #1024	; 0x400
    7100:	add	r0, sl, #256	; 0x100
    7104:	cmp	r0, r8
    7108:	blt	70ac <ReadSingleData+0x120c>
    710c:	ldr	r2, [sp, #8]
    7110:	cmp	r0, r2
    7114:	bge	7528 <ReadSingleData+0x1688>
    7118:	mov	r1, r7
    711c:	sub	r7, r2, r0
    7120:	ldr	r0, [sp, #28]
    7124:	ldr	r3, [r0]
    7128:	add	r4, sp, #32
    712c:	mov	r0, r4
    7130:	mov	r2, r7
    7134:	bl	18d0 <fread@plt>
    7138:	add	r5, r0, r5
    713c:	cmp	r7, #1
    7140:	blt	7524 <ReadSingleData+0x1684>
    7144:	sub	r0, r8, sl
    7148:	vldr	d16, [r4]
    714c:	vcvt.f32.f64	s0, d16
    7150:	vstmia	r6!, {s0}
    7154:	subs	r0, r0, #1
    7158:	add	r4, r4, #8
    715c:	bne	7148 <ReadSingleData+0x12a8>
    7160:	b	7524 <ReadSingleData+0x1684>
    7164:	str	r8, [sp]
    7168:	add	r1, r9, #1024	; 0x400
    716c:	str	r5, [sp, #8]
    7170:	sub	r0, r5, #256	; 0x100
    7174:	str	r0, [sp, #4]
    7178:	mov	r0, #0
    717c:	add	r4, sp, #32
    7180:	mov	sl, r9
    7184:	mov	r5, #0
    7188:	str	r0, [sp, #12]
    718c:	str	r1, [sp, #20]
    7190:	ldr	r3, [r6]
    7194:	mov	r0, r4
    7198:	mov	r1, r7
    719c:	mov	r2, #256	; 0x100
    71a0:	bl	18d0 <fread@plt>
    71a4:	mov	r8, r0
    71a8:	mov	r7, sl
    71ac:	mov	r6, #0
    71b0:	ldr	r0, [r4, r6]
    71b4:	add	r1, r4, r6
    71b8:	ldr	r1, [r1, #4]
    71bc:	bl	48d94 <__aeabi_l2f>
    71c0:	str	r0, [r7], #4
    71c4:	add	r6, r6, #8
    71c8:	cmp	r6, #2048	; 0x800
    71cc:	bne	71b0 <ReadSingleData+0x1310>
    71d0:	add	r5, r8, r5
    71d4:	add	sl, sl, #1024	; 0x400
    71d8:	ldr	r0, [sp, #20]
    71dc:	add	r1, r0, #1024	; 0x400
    71e0:	ldr	r0, [sp, #12]
    71e4:	add	r0, r0, #256	; 0x100
    71e8:	ldr	r2, [sp, #4]
    71ec:	cmp	r0, r2
    71f0:	ldr	r7, [sp, #24]
    71f4:	ldr	r6, [sp, #28]
    71f8:	blt	7188 <ReadSingleData+0x12e8>
    71fc:	str	r5, [sp, #16]
    7200:	ldr	r5, [sp, #8]
    7204:	cmp	r0, r5
    7208:	bge	7280 <ReadSingleData+0x13e0>
    720c:	sub	r8, r5, r0
    7210:	ldr	r3, [r6]
    7214:	add	r4, sp, #32
    7218:	mov	r0, r4
    721c:	mov	r1, r7
    7220:	mov	r2, r8
    7224:	bl	18d0 <fread@plt>
    7228:	ldr	r1, [sp, #16]
    722c:	add	r1, r0, r1
    7230:	str	r1, [sp, #16]
    7234:	cmp	r8, #1
    7238:	blt	7298 <ReadSingleData+0x13f8>
    723c:	ldr	r0, [sp, #4]
    7240:	ldr	r1, [sp, #12]
    7244:	sub	r7, r0, r1
    7248:	ldr	r8, [sp]
    724c:	ldr	sl, [sp, #20]
    7250:	ldrd	r0, [r4]
    7254:	bl	48d94 <__aeabi_l2f>
    7258:	str	r0, [sl], #4
    725c:	subs	r7, r7, #1
    7260:	add	r4, r4, #8
    7264:	bne	7250 <ReadSingleData+0x13b0>
    7268:	ldr	r7, [sp, #24]
    726c:	cmp	r8, #13
    7270:	beq	72a4 <ReadSingleData+0x1404>
    7274:	b	7350 <ReadSingleData+0x14b0>
    7278:	ldr	r7, [sp, #24]
    727c:	ldr	r6, [sp, #28]
    7280:	ldr	r8, [sp]
    7284:	cmp	r8, #13
    7288:	beq	72a4 <ReadSingleData+0x1404>
    728c:	b	7350 <ReadSingleData+0x14b0>
    7290:	mov	r5, r4
    7294:	b	7528 <ReadSingleData+0x1688>
    7298:	ldr	r8, [sp]
    729c:	cmp	r8, #13
    72a0:	bne	7350 <ReadSingleData+0x14b0>
    72a4:	ldr	r0, [r6, #20]
    72a8:	cmp	r0, #0
    72ac:	beq	7304 <ReadSingleData+0x1464>
    72b0:	cmp	r5, #256	; 0x100
    72b4:	bgt	7358 <ReadSingleData+0x14b8>
    72b8:	ldr	r3, [r6]
    72bc:	add	r4, sp, #32
    72c0:	mov	r0, r4
    72c4:	mov	r1, r7
    72c8:	mov	r2, r5
    72cc:	bl	18d0 <fread@plt>
    72d0:	ldr	r1, [sp, #16]
    72d4:	add	r1, r0, r1
    72d8:	str	r1, [sp, #16]
    72dc:	cmp	r5, #1
    72e0:	blt	7350 <ReadSingleData+0x14b0>
    72e4:	mov	r0, r4
    72e8:	bl	1c0c <Mat_uint64Swap>
    72ec:	bl	48d84 <__aeabi_ul2f>
    72f0:	str	r0, [r9], #4
    72f4:	subs	r5, r5, #1
    72f8:	add	r4, r4, #8
    72fc:	bne	72e4 <ReadSingleData+0x1444>
    7300:	b	7350 <ReadSingleData+0x14b0>
    7304:	cmp	r5, #256	; 0x100
    7308:	bgt	743c <ReadSingleData+0x159c>
    730c:	ldr	r3, [r6]
    7310:	add	r4, sp, #32
    7314:	mov	r0, r4
    7318:	mov	r1, r7
    731c:	mov	r2, r5
    7320:	bl	18d0 <fread@plt>
    7324:	ldr	r1, [sp, #16]
    7328:	add	r1, r0, r1
    732c:	str	r1, [sp, #16]
    7330:	cmp	r5, #1
    7334:	blt	7350 <ReadSingleData+0x14b0>
    7338:	ldrd	r0, [r4]
    733c:	bl	48d84 <__aeabi_ul2f>
    7340:	str	r0, [r9], #4
    7344:	subs	r5, r5, #1
    7348:	add	r4, r4, #8
    734c:	bne	7338 <ReadSingleData+0x1498>
    7350:	ldr	r5, [sp, #16]
    7354:	b	7528 <ReadSingleData+0x1688>
    7358:	add	r1, r9, #1024	; 0x400
    735c:	str	r5, [sp, #8]
    7360:	sub	r0, r5, #256	; 0x100
    7364:	str	r0, [sp, #20]
    7368:	mov	r0, #0
    736c:	ldr	r5, [sp, #16]
    7370:	mov	sl, r0
    7374:	mov	r8, r1
    7378:	ldr	r3, [r6]
    737c:	add	r6, sp, #32
    7380:	mov	r0, r6
    7384:	mov	r1, r7
    7388:	mov	r2, #256	; 0x100
    738c:	bl	18d0 <fread@plt>
    7390:	mov	r4, r0
    7394:	mov	r7, #0
    7398:	mov	r0, r6
    739c:	bl	1c0c <Mat_uint64Swap>
    73a0:	bl	48d84 <__aeabi_ul2f>
    73a4:	str	r0, [r9, r7]
    73a8:	add	r7, r7, #4
    73ac:	add	r6, r6, #8
    73b0:	cmp	r7, #1024	; 0x400
    73b4:	bne	7398 <ReadSingleData+0x14f8>
    73b8:	add	r5, r4, r5
    73bc:	add	r9, r9, #1024	; 0x400
    73c0:	add	r1, r8, #1024	; 0x400
    73c4:	add	r0, sl, #256	; 0x100
    73c8:	ldr	r2, [sp, #20]
    73cc:	cmp	r0, r2
    73d0:	ldr	r7, [sp, #24]
    73d4:	ldr	r6, [sp, #28]
    73d8:	blt	7370 <ReadSingleData+0x14d0>
    73dc:	ldr	r1, [sp, #8]
    73e0:	cmp	r0, r1
    73e4:	bge	7528 <ReadSingleData+0x1688>
    73e8:	mov	r2, r6
    73ec:	sub	r6, r1, r0
    73f0:	ldr	r3, [r2]
    73f4:	add	r4, sp, #32
    73f8:	mov	r0, r4
    73fc:	mov	r1, r7
    7400:	mov	r2, r6
    7404:	bl	18d0 <fread@plt>
    7408:	add	r5, r0, r5
    740c:	cmp	r6, #1
    7410:	blt	7528 <ReadSingleData+0x1688>
    7414:	ldr	r0, [sp, #20]
    7418:	sub	r6, r0, sl
    741c:	mov	r0, r4
    7420:	bl	1c0c <Mat_uint64Swap>
    7424:	bl	48d84 <__aeabi_ul2f>
    7428:	str	r0, [r8], #4
    742c:	subs	r6, r6, #1
    7430:	add	r4, r4, #8
    7434:	bne	741c <ReadSingleData+0x157c>
    7438:	b	7528 <ReadSingleData+0x1688>
    743c:	add	r1, r9, #1024	; 0x400
    7440:	str	r5, [sp, #8]
    7444:	sub	r0, r5, #256	; 0x100
    7448:	str	r0, [sp, #12]
    744c:	mov	r0, #0
    7450:	add	r4, sp, #32
    7454:	ldr	r5, [sp, #16]
    7458:	str	r0, [sp, #20]
    745c:	mov	r6, r1
    7460:	ldr	r0, [sp, #28]
    7464:	ldr	r3, [r0]
    7468:	mov	r0, r4
    746c:	mov	r1, r7
    7470:	mov	r2, #256	; 0x100
    7474:	bl	18d0 <fread@plt>
    7478:	mov	r8, r0
    747c:	mov	r7, r9
    7480:	mov	sl, #0
    7484:	ldr	r0, [r4, sl]
    7488:	add	r1, r4, sl
    748c:	ldr	r1, [r1, #4]
    7490:	bl	48d84 <__aeabi_ul2f>
    7494:	str	r0, [r7], #4
    7498:	add	sl, sl, #8
    749c:	cmp	sl, #2048	; 0x800
    74a0:	bne	7484 <ReadSingleData+0x15e4>
    74a4:	add	r5, r8, r5
    74a8:	add	r9, r9, #1024	; 0x400
    74ac:	add	r1, r6, #1024	; 0x400
    74b0:	mov	r8, r6
    74b4:	ldr	r6, [sp, #20]
    74b8:	add	r0, r6, #256	; 0x100
    74bc:	ldr	r2, [sp, #12]
    74c0:	cmp	r0, r2
    74c4:	ldr	r7, [sp, #24]
    74c8:	blt	7458 <ReadSingleData+0x15b8>
    74cc:	ldr	r2, [sp, #8]
    74d0:	cmp	r0, r2
    74d4:	bge	7528 <ReadSingleData+0x1688>
    74d8:	mov	r1, r7
    74dc:	sub	r7, r2, r0
    74e0:	ldr	r0, [sp, #28]
    74e4:	ldr	r3, [r0]
    74e8:	add	r4, sp, #32
    74ec:	mov	r0, r4
    74f0:	mov	r2, r7
    74f4:	bl	18d0 <fread@plt>
    74f8:	add	r5, r0, r5
    74fc:	cmp	r7, #1
    7500:	blt	7524 <ReadSingleData+0x1684>
    7504:	ldr	r0, [sp, #12]
    7508:	sub	r7, r0, r6
    750c:	ldrd	r0, [r4]
    7510:	bl	48d84 <__aeabi_ul2f>
    7514:	str	r0, [r8], #4
    7518:	subs	r7, r7, #1
    751c:	add	r4, r4, #8
    7520:	bne	750c <ReadSingleData+0x166c>
    7524:	ldr	r7, [sp, #24]
    7528:	mul	r0, r5, r7
    752c:	sub	sp, fp, #28
    7530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007534 <ReadCompressedSingleData>:
    7534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7538:	add	fp, sp, #28
    753c:	sub	sp, sp, #20
    7540:	mov	r7, r0
    7544:	mov	r0, #0
    7548:	cmp	r1, #0
    754c:	beq	7560 <ReadCompressedSingleData+0x2c>
    7550:	cmp	r7, #0
    7554:	movne	r5, r2
    7558:	cmpne	r2, #0
    755c:	bne	7568 <ReadCompressedSingleData+0x34>
    7560:	sub	sp, fp, #28
    7564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7568:	mov	r4, r3
    756c:	mov	r6, r1
    7570:	ldr	sl, [fp, #8]
    7574:	mov	r0, r3
    7578:	bl	193c <Mat_SizeOf@plt>
    757c:	mov	r9, r0
    7580:	sub	r0, r4, #1
    7584:	cmp	r0, #12
    7588:	bhi	7aec <ReadCompressedSingleData+0x5b8>
    758c:	add	r1, pc, #4
    7590:	ldr	r0, [r1, r0, lsl #2]
    7594:	add	pc, r1, r0
    7598:	.word	0x00000034
    759c:	.word	0x00000078
    75a0:	.word	0x000000bc
    75a4:	.word	0x00000110
    75a8:	.word	0x00000164
    75ac:	.word	0x000001b8
    75b0:	.word	0x0000020c
    75b4:	.word	0x00000554
    75b8:	.word	0x00000258
    75bc:	.word	0x00000554
    75c0:	.word	0x00000554
    75c4:	.word	0x000002a8
    75c8:	.word	0x000004cc
    75cc:	cmp	sl, #1
    75d0:	blt	7aec <ReadCompressedSingleData+0x5b8>
    75d4:	add	r8, sp, #8
    75d8:	mov	r4, sl
    75dc:	mov	r0, r7
    75e0:	mov	r1, r6
    75e4:	mov	r2, r8
    75e8:	mov	r3, r9
    75ec:	bl	31e4 <InflateData>
    75f0:	ldrsb	r0, [sp, #8]
    75f4:	vmov	s0, r0
    75f8:	vcvt.f32.s32	s0, s0
    75fc:	vstr	s0, [r5]
    7600:	subs	r4, r4, #1
    7604:	add	r5, r5, #4
    7608:	bne	75dc <ReadCompressedSingleData+0xa8>
    760c:	b	7aec <ReadCompressedSingleData+0x5b8>
    7610:	cmp	sl, #1
    7614:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7618:	add	r8, sp, #8
    761c:	mov	r4, sl
    7620:	mov	r0, r7
    7624:	mov	r1, r6
    7628:	mov	r2, r8
    762c:	mov	r3, r9
    7630:	bl	31e4 <InflateData>
    7634:	ldrb	r0, [sp, #8]
    7638:	vmov	s0, r0
    763c:	vcvt.f32.u32	s0, s0
    7640:	vstr	s0, [r5]
    7644:	subs	r4, r4, #1
    7648:	add	r5, r5, #4
    764c:	bne	7620 <ReadCompressedSingleData+0xec>
    7650:	b	7aec <ReadCompressedSingleData+0x5b8>
    7654:	ldr	r0, [r7, #20]
    7658:	cmp	r0, #0
    765c:	beq	7890 <ReadCompressedSingleData+0x35c>
    7660:	cmp	sl, #1
    7664:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7668:	add	r8, sp, #8
    766c:	mov	r4, sl
    7670:	mov	r0, r7
    7674:	mov	r1, r6
    7678:	mov	r2, r8
    767c:	mov	r3, r9
    7680:	bl	31e4 <InflateData>
    7684:	mov	r0, r8
    7688:	bl	1c50 <Mat_int16Swap>
    768c:	vmov	s0, r0
    7690:	vcvt.f32.s32	s0, s0
    7694:	vstr	s0, [r5]
    7698:	subs	r4, r4, #1
    769c:	add	r5, r5, #4
    76a0:	bne	7670 <ReadCompressedSingleData+0x13c>
    76a4:	b	7aec <ReadCompressedSingleData+0x5b8>
    76a8:	ldr	r0, [r7, #20]
    76ac:	cmp	r0, #0
    76b0:	beq	78d4 <ReadCompressedSingleData+0x3a0>
    76b4:	cmp	sl, #1
    76b8:	blt	7aec <ReadCompressedSingleData+0x5b8>
    76bc:	add	r8, sp, #8
    76c0:	mov	r4, sl
    76c4:	mov	r0, r7
    76c8:	mov	r1, r6
    76cc:	mov	r2, r8
    76d0:	mov	r3, r9
    76d4:	bl	31e4 <InflateData>
    76d8:	mov	r0, r8
    76dc:	bl	1c64 <Mat_uint16Swap>
    76e0:	vmov	s0, r0
    76e4:	vcvt.f32.u32	s0, s0
    76e8:	vstr	s0, [r5]
    76ec:	subs	r4, r4, #1
    76f0:	add	r5, r5, #4
    76f4:	bne	76c4 <ReadCompressedSingleData+0x190>
    76f8:	b	7aec <ReadCompressedSingleData+0x5b8>
    76fc:	ldr	r0, [r7, #20]
    7700:	cmp	r0, #0
    7704:	beq	7918 <ReadCompressedSingleData+0x3e4>
    7708:	cmp	sl, #1
    770c:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7710:	add	r8, sp, #8
    7714:	mov	r4, sl
    7718:	mov	r0, r7
    771c:	mov	r1, r6
    7720:	mov	r2, r8
    7724:	mov	r3, r9
    7728:	bl	31e4 <InflateData>
    772c:	mov	r0, r8
    7730:	bl	1c28 <Mat_int32Swap>
    7734:	vmov	s0, r0
    7738:	vcvt.f32.s32	s0, s0
    773c:	vstr	s0, [r5]
    7740:	subs	r4, r4, #1
    7744:	add	r5, r5, #4
    7748:	bne	7718 <ReadCompressedSingleData+0x1e4>
    774c:	b	7aec <ReadCompressedSingleData+0x5b8>
    7750:	ldr	r0, [r7, #20]
    7754:	cmp	r0, #0
    7758:	beq	7958 <ReadCompressedSingleData+0x424>
    775c:	cmp	sl, #1
    7760:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7764:	add	r8, sp, #8
    7768:	mov	r4, sl
    776c:	mov	r0, r7
    7770:	mov	r1, r6
    7774:	mov	r2, r8
    7778:	mov	r3, r9
    777c:	bl	31e4 <InflateData>
    7780:	mov	r0, r8
    7784:	bl	1c3c <Mat_uint32Swap>
    7788:	vmov	s0, r0
    778c:	vcvt.f32.u32	s0, s0
    7790:	vstr	s0, [r5]
    7794:	subs	r4, r4, #1
    7798:	add	r5, r5, #4
    779c:	bne	776c <ReadCompressedSingleData+0x238>
    77a0:	b	7aec <ReadCompressedSingleData+0x5b8>
    77a4:	ldr	r0, [r7, #20]
    77a8:	cmp	r0, #0
    77ac:	beq	7998 <ReadCompressedSingleData+0x464>
    77b0:	cmp	sl, #1
    77b4:	blt	7aec <ReadCompressedSingleData+0x5b8>
    77b8:	add	r8, sp, #8
    77bc:	mov	r4, sl
    77c0:	mov	r0, r7
    77c4:	mov	r1, r6
    77c8:	mov	r2, r8
    77cc:	mov	r3, r9
    77d0:	bl	31e4 <InflateData>
    77d4:	mov	r0, r8
    77d8:	bl	1c7c <Mat_floatSwap>
    77dc:	vstr	s0, [r5]
    77e0:	subs	r4, r4, #1
    77e4:	add	r5, r5, #4
    77e8:	bne	77c0 <ReadCompressedSingleData+0x28c>
    77ec:	b	7aec <ReadCompressedSingleData+0x5b8>
    77f0:	ldr	r0, [r7, #20]
    77f4:	cmp	r0, #0
    77f8:	beq	79d0 <ReadCompressedSingleData+0x49c>
    77fc:	cmp	sl, #1
    7800:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7804:	add	r8, sp, #8
    7808:	mov	r4, sl
    780c:	mov	r0, r7
    7810:	mov	r1, r6
    7814:	mov	r2, r8
    7818:	mov	r3, r9
    781c:	bl	31e4 <InflateData>
    7820:	mov	r0, r8
    7824:	bl	1cc0 <Mat_doubleSwap>
    7828:	vcvt.f32.f64	s0, d0
    782c:	vstr	s0, [r5]
    7830:	subs	r4, r4, #1
    7834:	add	r5, r5, #4
    7838:	bne	780c <ReadCompressedSingleData+0x2d8>
    783c:	b	7aec <ReadCompressedSingleData+0x5b8>
    7840:	ldr	r0, [r7, #20]
    7844:	cmp	r0, #0
    7848:	beq	7a10 <ReadCompressedSingleData+0x4dc>
    784c:	cmp	sl, #1
    7850:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7854:	str	r4, [sp, #4]
    7858:	mov	r4, r5
    785c:	mov	r0, r7
    7860:	mov	r1, r6
    7864:	add	r8, sp, #8
    7868:	mov	r2, r8
    786c:	mov	r3, r9
    7870:	bl	31e4 <InflateData>
    7874:	mov	r0, r8
    7878:	bl	1bbc <Mat_int64Swap>
    787c:	bl	48d94 <__aeabi_l2f>
    7880:	str	r0, [r4], #4
    7884:	subs	sl, sl, #1
    7888:	bne	785c <ReadCompressedSingleData+0x328>
    788c:	b	7a54 <ReadCompressedSingleData+0x520>
    7890:	cmp	sl, #1
    7894:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7898:	add	r8, sp, #8
    789c:	mov	r4, sl
    78a0:	mov	r0, r7
    78a4:	mov	r1, r6
    78a8:	mov	r2, r8
    78ac:	mov	r3, r9
    78b0:	bl	31e4 <InflateData>
    78b4:	ldrsh	r0, [sp, #8]
    78b8:	vmov	s0, r0
    78bc:	vcvt.f32.s32	s0, s0
    78c0:	vstr	s0, [r5]
    78c4:	subs	r4, r4, #1
    78c8:	add	r5, r5, #4
    78cc:	bne	78a0 <ReadCompressedSingleData+0x36c>
    78d0:	b	7aec <ReadCompressedSingleData+0x5b8>
    78d4:	cmp	sl, #1
    78d8:	blt	7aec <ReadCompressedSingleData+0x5b8>
    78dc:	add	r8, sp, #8
    78e0:	mov	r4, sl
    78e4:	mov	r0, r7
    78e8:	mov	r1, r6
    78ec:	mov	r2, r8
    78f0:	mov	r3, r9
    78f4:	bl	31e4 <InflateData>
    78f8:	ldrh	r0, [sp, #8]
    78fc:	vmov	s0, r0
    7900:	vcvt.f32.u32	s0, s0
    7904:	vstr	s0, [r5]
    7908:	subs	r4, r4, #1
    790c:	add	r5, r5, #4
    7910:	bne	78e4 <ReadCompressedSingleData+0x3b0>
    7914:	b	7aec <ReadCompressedSingleData+0x5b8>
    7918:	cmp	sl, #1
    791c:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7920:	add	r8, sp, #8
    7924:	mov	r4, sl
    7928:	mov	r0, r7
    792c:	mov	r1, r6
    7930:	mov	r2, r8
    7934:	mov	r3, r9
    7938:	bl	31e4 <InflateData>
    793c:	vldr	s0, [sp, #8]
    7940:	vcvt.f32.s32	s0, s0
    7944:	vstr	s0, [r5]
    7948:	subs	r4, r4, #1
    794c:	add	r5, r5, #4
    7950:	bne	7928 <ReadCompressedSingleData+0x3f4>
    7954:	b	7aec <ReadCompressedSingleData+0x5b8>
    7958:	cmp	sl, #1
    795c:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7960:	add	r8, sp, #8
    7964:	mov	r4, sl
    7968:	mov	r0, r7
    796c:	mov	r1, r6
    7970:	mov	r2, r8
    7974:	mov	r3, r9
    7978:	bl	31e4 <InflateData>
    797c:	vldr	s0, [sp, #8]
    7980:	vcvt.f32.u32	s0, s0
    7984:	vstr	s0, [r5]
    7988:	subs	r4, r4, #1
    798c:	add	r5, r5, #4
    7990:	bne	7968 <ReadCompressedSingleData+0x434>
    7994:	b	7aec <ReadCompressedSingleData+0x5b8>
    7998:	cmp	sl, #1
    799c:	blt	7aec <ReadCompressedSingleData+0x5b8>
    79a0:	add	r8, sp, #8
    79a4:	mov	r4, sl
    79a8:	mov	r0, r7
    79ac:	mov	r1, r6
    79b0:	mov	r2, r8
    79b4:	mov	r3, r9
    79b8:	bl	31e4 <InflateData>
    79bc:	ldr	r0, [sp, #8]
    79c0:	str	r0, [r5], #4
    79c4:	subs	r4, r4, #1
    79c8:	bne	79a8 <ReadCompressedSingleData+0x474>
    79cc:	b	7aec <ReadCompressedSingleData+0x5b8>
    79d0:	cmp	sl, #1
    79d4:	blt	7aec <ReadCompressedSingleData+0x5b8>
    79d8:	add	r8, sp, #8
    79dc:	mov	r4, sl
    79e0:	mov	r0, r7
    79e4:	mov	r1, r6
    79e8:	mov	r2, r8
    79ec:	mov	r3, r9
    79f0:	bl	31e4 <InflateData>
    79f4:	vldr	d16, [sp, #8]
    79f8:	vcvt.f32.f64	s0, d16
    79fc:	vstr	s0, [r5]
    7a00:	subs	r4, r4, #1
    7a04:	add	r5, r5, #4
    7a08:	bne	79e0 <ReadCompressedSingleData+0x4ac>
    7a0c:	b	7aec <ReadCompressedSingleData+0x5b8>
    7a10:	cmp	sl, #1
    7a14:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7a18:	str	r4, [sp, #4]
    7a1c:	add	r8, sp, #8
    7a20:	mov	r4, sl
    7a24:	mov	sl, r5
    7a28:	mov	r0, r7
    7a2c:	mov	r1, r6
    7a30:	mov	r2, r8
    7a34:	mov	r3, r9
    7a38:	bl	31e4 <InflateData>
    7a3c:	ldr	r0, [sp, #8]
    7a40:	ldr	r1, [sp, #12]
    7a44:	bl	48d94 <__aeabi_l2f>
    7a48:	str	r0, [sl], #4
    7a4c:	subs	r4, r4, #1
    7a50:	bne	7a28 <ReadCompressedSingleData+0x4f4>
    7a54:	ldr	r0, [sp, #4]
    7a58:	cmp	r0, #13
    7a5c:	ldr	sl, [fp, #8]
    7a60:	bne	7aec <ReadCompressedSingleData+0x5b8>
    7a64:	ldr	r0, [r7, #20]
    7a68:	cmp	r0, #0
    7a6c:	beq	7ab0 <ReadCompressedSingleData+0x57c>
    7a70:	cmp	sl, #1
    7a74:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7a78:	add	r8, sp, #8
    7a7c:	mov	r4, sl
    7a80:	mov	r0, r7
    7a84:	mov	r1, r6
    7a88:	mov	r2, r8
    7a8c:	mov	r3, r9
    7a90:	bl	31e4 <InflateData>
    7a94:	mov	r0, r8
    7a98:	bl	1c0c <Mat_uint64Swap>
    7a9c:	bl	48d84 <__aeabi_ul2f>
    7aa0:	str	r0, [r5], #4
    7aa4:	subs	r4, r4, #1
    7aa8:	bne	7a80 <ReadCompressedSingleData+0x54c>
    7aac:	b	7aec <ReadCompressedSingleData+0x5b8>
    7ab0:	cmp	sl, #1
    7ab4:	blt	7aec <ReadCompressedSingleData+0x5b8>
    7ab8:	add	r8, sp, #8
    7abc:	mov	r4, sl
    7ac0:	mov	r0, r7
    7ac4:	mov	r1, r6
    7ac8:	mov	r2, r8
    7acc:	mov	r3, r9
    7ad0:	bl	31e4 <InflateData>
    7ad4:	ldr	r0, [sp, #8]
    7ad8:	ldr	r1, [sp, #12]
    7adc:	bl	48d84 <__aeabi_ul2f>
    7ae0:	str	r0, [r5], #4
    7ae4:	subs	r4, r4, #1
    7ae8:	bne	7ac0 <ReadCompressedSingleData+0x58c>
    7aec:	mul	r0, r9, sl
    7af0:	sub	sp, fp, #28
    7af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007af8 <ReadInt64Data>:
    7af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7afc:	add	fp, sp, #28
    7b00:	sub	sp, sp, #28
    7b04:	sub	sp, sp, #2048	; 0x800
    7b08:	mov	r5, r0
    7b0c:	mov	r0, #0
    7b10:	cmp	r5, #0
    7b14:	beq	7b2c <ReadInt64Data+0x34>
    7b18:	mov	r7, r1
    7b1c:	cmp	r1, #0
    7b20:	ldrne	r1, [r5]
    7b24:	cmpne	r1, #0
    7b28:	bne	7b34 <ReadInt64Data+0x3c>
    7b2c:	sub	sp, fp, #28
    7b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7b34:	mov	r6, r3
    7b38:	mov	r9, r2
    7b3c:	mov	r0, r2
    7b40:	bl	193c <Mat_SizeOf@plt>
    7b44:	mov	sl, r0
    7b48:	sub	r0, r9, #1
    7b4c:	mov	r8, #0
    7b50:	cmp	r0, #11
    7b54:	str	sl, [sp, #20]
    7b58:	str	r5, [sp, #16]
    7b5c:	bhi	8eb0 <ReadInt64Data+0x13b8>
    7b60:	add	r1, pc, #4
    7b64:	ldr	r0, [r1, r0, lsl #2]
    7b68:	add	pc, r1, r0
    7b6c:	.word	0x00000030
    7b70:	.word	0x00000078
    7b74:	.word	0x000000c0
    7b78:	.word	0x0000011c
    7b7c:	.word	0x00000178
    7b80:	.word	0x000001d4
    7b84:	.word	0x00000230
    7b88:	.word	0x00001344
    7b8c:	.word	0x00000290
    7b90:	.word	0x00001344
    7b94:	.word	0x00001344
    7b98:	.word	0x000002f0
    7b9c:	cmp	r6, #256	; 0x100
    7ba0:	bgt	7ec8 <ReadInt64Data+0x3d0>
    7ba4:	ldr	r3, [r5]
    7ba8:	add	r4, sp, #24
    7bac:	mov	r0, r4
    7bb0:	mov	r1, sl
    7bb4:	mov	r2, r6
    7bb8:	bl	18d0 <fread@plt>
    7bbc:	mov	r8, r0
    7bc0:	cmp	r6, #1
    7bc4:	blt	9020 <ReadInt64Data+0x1528>
    7bc8:	ldrsb	r0, [r4], #1
    7bcc:	asr	r1, r0, #31
    7bd0:	strd	r0, [r7]
    7bd4:	subs	r6, r6, #1
    7bd8:	add	r7, r7, #8
    7bdc:	bne	7bc8 <ReadInt64Data+0xd0>
    7be0:	b	9020 <ReadInt64Data+0x1528>
    7be4:	cmp	r6, #256	; 0x100
    7be8:	bgt	7f94 <ReadInt64Data+0x49c>
    7bec:	ldr	r3, [r5]
    7bf0:	add	r4, sp, #24
    7bf4:	mov	r0, r4
    7bf8:	mov	r1, sl
    7bfc:	mov	r2, r6
    7c00:	bl	18d0 <fread@plt>
    7c04:	mov	r8, r0
    7c08:	cmp	r6, #1
    7c0c:	blt	9020 <ReadInt64Data+0x1528>
    7c10:	mov	r1, #0
    7c14:	ldrb	r0, [r4], #1
    7c18:	strd	r0, [r7]
    7c1c:	subs	r6, r6, #1
    7c20:	add	r7, r7, #8
    7c24:	bne	7c14 <ReadInt64Data+0x11c>
    7c28:	b	9020 <ReadInt64Data+0x1528>
    7c2c:	ldr	r0, [r5, #20]
    7c30:	cmp	r0, #0
    7c34:	beq	8064 <ReadInt64Data+0x56c>
    7c38:	cmp	r6, #256	; 0x100
    7c3c:	bgt	8260 <ReadInt64Data+0x768>
    7c40:	ldr	r3, [r5]
    7c44:	add	r4, sp, #24
    7c48:	mov	r0, r4
    7c4c:	mov	r1, sl
    7c50:	mov	r2, r6
    7c54:	bl	18d0 <fread@plt>
    7c58:	mov	r8, r0
    7c5c:	cmp	r6, #1
    7c60:	blt	9020 <ReadInt64Data+0x1528>
    7c64:	mov	r0, r4
    7c68:	bl	1c50 <Mat_int16Swap>
    7c6c:	asr	r1, r0, #31
    7c70:	strd	r0, [r7]
    7c74:	subs	r6, r6, #1
    7c78:	add	r7, r7, #8
    7c7c:	add	r4, r4, #2
    7c80:	bne	7c64 <ReadInt64Data+0x16c>
    7c84:	b	9020 <ReadInt64Data+0x1528>
    7c88:	ldr	r0, [r5, #20]
    7c8c:	cmp	r0, #0
    7c90:	beq	80ac <ReadInt64Data+0x5b4>
    7c94:	cmp	r6, #256	; 0x100
    7c98:	bgt	8348 <ReadInt64Data+0x850>
    7c9c:	ldr	r3, [r5]
    7ca0:	add	r4, sp, #24
    7ca4:	mov	r0, r4
    7ca8:	mov	r1, sl
    7cac:	mov	r2, r6
    7cb0:	bl	18d0 <fread@plt>
    7cb4:	mov	r8, r0
    7cb8:	cmp	r6, #1
    7cbc:	blt	9020 <ReadInt64Data+0x1528>
    7cc0:	mov	r5, #0
    7cc4:	mov	r0, r4
    7cc8:	bl	1c64 <Mat_uint16Swap>
    7ccc:	stm	r7, {r0, r5}
    7cd0:	subs	r6, r6, #1
    7cd4:	add	r7, r7, #8
    7cd8:	add	r4, r4, #2
    7cdc:	bne	7cc4 <ReadInt64Data+0x1cc>
    7ce0:	b	9020 <ReadInt64Data+0x1528>
    7ce4:	ldr	r0, [r5, #20]
    7ce8:	cmp	r0, #0
    7cec:	beq	80f4 <ReadInt64Data+0x5fc>
    7cf0:	cmp	r6, #256	; 0x100
    7cf4:	bgt	8440 <ReadInt64Data+0x948>
    7cf8:	ldr	r3, [r5]
    7cfc:	add	r4, sp, #24
    7d00:	mov	r0, r4
    7d04:	mov	r1, sl
    7d08:	mov	r2, r6
    7d0c:	bl	18d0 <fread@plt>
    7d10:	mov	r8, r0
    7d14:	cmp	r6, #1
    7d18:	blt	9020 <ReadInt64Data+0x1528>
    7d1c:	mov	r0, r4
    7d20:	bl	1c28 <Mat_int32Swap>
    7d24:	asr	r1, r0, #31
    7d28:	strd	r0, [r7]
    7d2c:	subs	r6, r6, #1
    7d30:	add	r7, r7, #8
    7d34:	add	r4, r4, #4
    7d38:	bne	7d1c <ReadInt64Data+0x224>
    7d3c:	b	9020 <ReadInt64Data+0x1528>
    7d40:	ldr	r0, [r5, #20]
    7d44:	cmp	r0, #0
    7d48:	beq	813c <ReadInt64Data+0x644>
    7d4c:	cmp	r6, #256	; 0x100
    7d50:	bgt	8528 <ReadInt64Data+0xa30>
    7d54:	ldr	r3, [r5]
    7d58:	add	r4, sp, #24
    7d5c:	mov	r0, r4
    7d60:	mov	r1, sl
    7d64:	mov	r2, r6
    7d68:	bl	18d0 <fread@plt>
    7d6c:	mov	r8, r0
    7d70:	cmp	r6, #1
    7d74:	blt	9020 <ReadInt64Data+0x1528>
    7d78:	mov	r5, #0
    7d7c:	mov	r0, r4
    7d80:	bl	1c3c <Mat_uint32Swap>
    7d84:	stm	r7, {r0, r5}
    7d88:	subs	r6, r6, #1
    7d8c:	add	r7, r7, #8
    7d90:	add	r4, r4, #4
    7d94:	bne	7d7c <ReadInt64Data+0x284>
    7d98:	b	9020 <ReadInt64Data+0x1528>
    7d9c:	ldr	r0, [r5, #20]
    7da0:	cmp	r0, #0
    7da4:	beq	8184 <ReadInt64Data+0x68c>
    7da8:	cmp	r6, #256	; 0x100
    7dac:	bgt	8620 <ReadInt64Data+0xb28>
    7db0:	ldr	r3, [r5]
    7db4:	add	r4, sp, #24
    7db8:	mov	r0, r4
    7dbc:	mov	r1, sl
    7dc0:	mov	r2, r6
    7dc4:	bl	18d0 <fread@plt>
    7dc8:	mov	r8, r0
    7dcc:	cmp	r6, #1
    7dd0:	blt	9020 <ReadInt64Data+0x1528>
    7dd4:	mov	r0, r4
    7dd8:	bl	1c7c <Mat_floatSwap>
    7ddc:	vmov	r0, s0
    7de0:	bl	48e10 <__aeabi_f2lz>
    7de4:	strd	r0, [r7]
    7de8:	subs	r6, r6, #1
    7dec:	add	r7, r7, #8
    7df0:	add	r4, r4, #4
    7df4:	bne	7dd4 <ReadInt64Data+0x2dc>
    7df8:	b	9020 <ReadInt64Data+0x1528>
    7dfc:	ldr	r0, [r5, #20]
    7e00:	cmp	r0, #0
    7e04:	beq	81cc <ReadInt64Data+0x6d4>
    7e08:	cmp	r6, #256	; 0x100
    7e0c:	bgt	8710 <ReadInt64Data+0xc18>
    7e10:	ldr	r3, [r5]
    7e14:	add	r4, sp, #24
    7e18:	mov	r0, r4
    7e1c:	mov	r1, sl
    7e20:	mov	r2, r6
    7e24:	bl	18d0 <fread@plt>
    7e28:	mov	r8, r0
    7e2c:	cmp	r6, #1
    7e30:	blt	9020 <ReadInt64Data+0x1528>
    7e34:	mov	r0, r4
    7e38:	bl	1cc0 <Mat_doubleSwap>
    7e3c:	vmov	r0, r1, d0
    7e40:	bl	48e3c <__aeabi_d2lz>
    7e44:	strd	r0, [r7]
    7e48:	subs	r6, r6, #1
    7e4c:	add	r7, r7, #8
    7e50:	add	r4, r4, #8
    7e54:	bne	7e34 <ReadInt64Data+0x33c>
    7e58:	b	9020 <ReadInt64Data+0x1528>
    7e5c:	ldr	r0, [r5, #20]
    7e60:	cmp	r0, #0
    7e64:	beq	821c <ReadInt64Data+0x724>
    7e68:	cmp	r6, #256	; 0x100
    7e6c:	bgt	87fc <ReadInt64Data+0xd04>
    7e70:	ldr	r3, [r5]
    7e74:	add	r4, sp, #24
    7e78:	mov	r0, r4
    7e7c:	mov	r1, sl
    7e80:	mov	r2, r6
    7e84:	bl	18d0 <fread@plt>
    7e88:	mov	r8, r0
    7e8c:	cmp	r6, #1
    7e90:	blt	8eb0 <ReadInt64Data+0x13b8>
    7e94:	str	r9, [sp]
    7e98:	mov	r9, r6
    7e9c:	mov	r5, r6
    7ea0:	mov	r6, r7
    7ea4:	mov	r0, r4
    7ea8:	bl	1bbc <Mat_int64Swap>
    7eac:	strd	r0, [r6]
    7eb0:	subs	r5, r5, #1
    7eb4:	add	r6, r6, #8
    7eb8:	add	r4, r4, #8
    7ebc:	bne	7ea4 <ReadInt64Data+0x3ac>
    7ec0:	mov	r6, r9
    7ec4:	b	8ea8 <ReadInt64Data+0x13b0>
    7ec8:	add	r1, r7, #2048	; 0x800
    7ecc:	str	r6, [sp, #4]
    7ed0:	sub	r9, r6, #256	; 0x100
    7ed4:	mov	r0, #0
    7ed8:	add	r4, sp, #24
    7edc:	mov	r8, #0
    7ee0:	mov	sl, r0
    7ee4:	mov	r6, r1
    7ee8:	ldr	r3, [r5]
    7eec:	mov	r0, r4
    7ef0:	ldr	r1, [sp, #20]
    7ef4:	mov	r2, #256	; 0x100
    7ef8:	bl	18d0 <fread@plt>
    7efc:	mov	r1, r7
    7f00:	mov	r2, #0
    7f04:	add	r3, r4, r2
    7f08:	ldrsb	r3, [r3]
    7f0c:	asr	r5, r3, #31
    7f10:	stm	r1, {r3, r5}
    7f14:	add	r1, r1, #8
    7f18:	add	r2, r2, #1
    7f1c:	cmp	r2, #256	; 0x100
    7f20:	bne	7f04 <ReadInt64Data+0x40c>
    7f24:	add	r8, r0, r8
    7f28:	add	r7, r7, #2048	; 0x800
    7f2c:	add	r1, r6, #2048	; 0x800
    7f30:	add	r0, sl, #256	; 0x100
    7f34:	cmp	r0, r9
    7f38:	ldr	r5, [sp, #16]
    7f3c:	blt	7ee0 <ReadInt64Data+0x3e8>
    7f40:	ldr	r1, [sp, #4]
    7f44:	cmp	r0, r1
    7f48:	bge	901c <ReadInt64Data+0x1524>
    7f4c:	sub	r7, r1, r0
    7f50:	ldr	r3, [r5]
    7f54:	add	r4, sp, #24
    7f58:	mov	r0, r4
    7f5c:	ldr	r1, [sp, #20]
    7f60:	mov	r2, r7
    7f64:	bl	18d0 <fread@plt>
    7f68:	add	r8, r0, r8
    7f6c:	cmp	r7, #1
    7f70:	blt	901c <ReadInt64Data+0x1524>
    7f74:	sub	r0, r9, sl
    7f78:	ldrsb	r2, [r4], #1
    7f7c:	asr	r3, r2, #31
    7f80:	strd	r2, [r6]
    7f84:	add	r6, r6, #8
    7f88:	subs	r0, r0, #1
    7f8c:	bne	7f78 <ReadInt64Data+0x480>
    7f90:	b	901c <ReadInt64Data+0x1524>
    7f94:	add	r0, r7, #2048	; 0x800
    7f98:	str	r6, [sp, #4]
    7f9c:	sub	r9, r6, #256	; 0x100
    7fa0:	mov	r5, #0
    7fa4:	add	r4, sp, #24
    7fa8:	mov	r1, #0
    7fac:	mov	r8, #0
    7fb0:	mov	sl, r1
    7fb4:	mov	r6, r0
    7fb8:	ldr	r0, [sp, #16]
    7fbc:	ldr	r3, [r0]
    7fc0:	mov	r0, r4
    7fc4:	ldr	r1, [sp, #20]
    7fc8:	mov	r2, #256	; 0x100
    7fcc:	bl	18d0 <fread@plt>
    7fd0:	mov	r1, r7
    7fd4:	mov	r2, #0
    7fd8:	ldrb	r3, [r4, r2]
    7fdc:	stm	r1, {r3, r5}
    7fe0:	add	r1, r1, #8
    7fe4:	add	r2, r2, #1
    7fe8:	cmp	r2, #256	; 0x100
    7fec:	bne	7fd8 <ReadInt64Data+0x4e0>
    7ff0:	add	r8, r0, r8
    7ff4:	add	r7, r7, #2048	; 0x800
    7ff8:	add	r0, r6, #2048	; 0x800
    7ffc:	add	r1, sl, #256	; 0x100
    8000:	cmp	r1, r9
    8004:	blt	7fb0 <ReadInt64Data+0x4b8>
    8008:	ldr	r0, [sp, #4]
    800c:	cmp	r1, r0
    8010:	bge	901c <ReadInt64Data+0x1524>
    8014:	sub	r7, r0, r1
    8018:	ldr	r0, [sp, #16]
    801c:	ldr	r3, [r0]
    8020:	add	r4, sp, #24
    8024:	mov	r0, r4
    8028:	ldr	r1, [sp, #20]
    802c:	mov	r2, r7
    8030:	bl	18d0 <fread@plt>
    8034:	add	r8, r0, r8
    8038:	cmp	r7, #1
    803c:	blt	901c <ReadInt64Data+0x1524>
    8040:	sub	r0, r9, sl
    8044:	mov	r1, #0
    8048:	ldrb	r2, [r4], #1
    804c:	str	r2, [r6]
    8050:	str	r1, [r6, #4]
    8054:	add	r6, r6, #8
    8058:	subs	r0, r0, #1
    805c:	bne	8048 <ReadInt64Data+0x550>
    8060:	b	901c <ReadInt64Data+0x1524>
    8064:	cmp	r6, #256	; 0x100
    8068:	bgt	88f4 <ReadInt64Data+0xdfc>
    806c:	ldr	r3, [r5]
    8070:	add	r4, sp, #24
    8074:	mov	r0, r4
    8078:	mov	r1, sl
    807c:	mov	r2, r6
    8080:	bl	18d0 <fread@plt>
    8084:	mov	r8, r0
    8088:	cmp	r6, #1
    808c:	blt	9020 <ReadInt64Data+0x1528>
    8090:	ldrsh	r0, [r4], #2
    8094:	asr	r1, r0, #31
    8098:	strd	r0, [r7]
    809c:	subs	r6, r6, #1
    80a0:	add	r7, r7, #8
    80a4:	bne	8090 <ReadInt64Data+0x598>
    80a8:	b	9020 <ReadInt64Data+0x1528>
    80ac:	cmp	r6, #256	; 0x100
    80b0:	bgt	89c0 <ReadInt64Data+0xec8>
    80b4:	ldr	r3, [r5]
    80b8:	add	r4, sp, #24
    80bc:	mov	r0, r4
    80c0:	mov	r1, sl
    80c4:	mov	r2, r6
    80c8:	bl	18d0 <fread@plt>
    80cc:	mov	r8, r0
    80d0:	cmp	r6, #1
    80d4:	blt	9020 <ReadInt64Data+0x1528>
    80d8:	mov	r1, #0
    80dc:	ldrh	r0, [r4], #2
    80e0:	strd	r0, [r7]
    80e4:	subs	r6, r6, #1
    80e8:	add	r7, r7, #8
    80ec:	bne	80dc <ReadInt64Data+0x5e4>
    80f0:	b	9020 <ReadInt64Data+0x1528>
    80f4:	cmp	r6, #256	; 0x100
    80f8:	bgt	8a94 <ReadInt64Data+0xf9c>
    80fc:	ldr	r3, [r5]
    8100:	add	r4, sp, #24
    8104:	mov	r0, r4
    8108:	mov	r1, sl
    810c:	mov	r2, r6
    8110:	bl	18d0 <fread@plt>
    8114:	mov	r8, r0
    8118:	cmp	r6, #1
    811c:	blt	9020 <ReadInt64Data+0x1528>
    8120:	ldr	r0, [r4], #4
    8124:	asr	r1, r0, #31
    8128:	strd	r0, [r7]
    812c:	subs	r6, r6, #1
    8130:	add	r7, r7, #8
    8134:	bne	8120 <ReadInt64Data+0x628>
    8138:	b	9020 <ReadInt64Data+0x1528>
    813c:	cmp	r6, #256	; 0x100
    8140:	bgt	8b5c <ReadInt64Data+0x1064>
    8144:	ldr	r3, [r5]
    8148:	add	r4, sp, #24
    814c:	mov	r0, r4
    8150:	mov	r1, sl
    8154:	mov	r2, r6
    8158:	bl	18d0 <fread@plt>
    815c:	mov	r8, r0
    8160:	cmp	r6, #1
    8164:	blt	9020 <ReadInt64Data+0x1528>
    8168:	mov	r1, #0
    816c:	ldr	r0, [r4], #4
    8170:	strd	r0, [r7]
    8174:	subs	r6, r6, #1
    8178:	add	r7, r7, #8
    817c:	bne	816c <ReadInt64Data+0x674>
    8180:	b	9020 <ReadInt64Data+0x1528>
    8184:	cmp	r6, #256	; 0x100
    8188:	bgt	8c2c <ReadInt64Data+0x1134>
    818c:	ldr	r3, [r5]
    8190:	add	r4, sp, #24
    8194:	mov	r0, r4
    8198:	mov	r1, sl
    819c:	mov	r2, r6
    81a0:	bl	18d0 <fread@plt>
    81a4:	mov	r8, r0
    81a8:	cmp	r6, #1
    81ac:	blt	9020 <ReadInt64Data+0x1528>
    81b0:	ldr	r0, [r4], #4
    81b4:	bl	48e10 <__aeabi_f2lz>
    81b8:	strd	r0, [r7]
    81bc:	subs	r6, r6, #1
    81c0:	add	r7, r7, #8
    81c4:	bne	81b0 <ReadInt64Data+0x6b8>
    81c8:	b	9020 <ReadInt64Data+0x1528>
    81cc:	cmp	r6, #256	; 0x100
    81d0:	bgt	8d04 <ReadInt64Data+0x120c>
    81d4:	ldr	r3, [r5]
    81d8:	add	r4, sp, #24
    81dc:	mov	r0, r4
    81e0:	mov	r1, sl
    81e4:	mov	r2, r6
    81e8:	bl	18d0 <fread@plt>
    81ec:	mov	r8, r0
    81f0:	cmp	r6, #1
    81f4:	blt	9020 <ReadInt64Data+0x1528>
    81f8:	vldr	d16, [r4]
    81fc:	vmov	r0, r1, d16
    8200:	bl	48e3c <__aeabi_d2lz>
    8204:	strd	r0, [r7]
    8208:	subs	r6, r6, #1
    820c:	add	r7, r7, #8
    8210:	add	r4, r4, #8
    8214:	bne	81f8 <ReadInt64Data+0x700>
    8218:	b	9020 <ReadInt64Data+0x1528>
    821c:	cmp	r6, #256	; 0x100
    8220:	bgt	8dec <ReadInt64Data+0x12f4>
    8224:	ldr	r3, [r5]
    8228:	add	r0, sp, #24
    822c:	mov	r1, sl
    8230:	mov	r2, r6
    8234:	bl	18d0 <fread@plt>
    8238:	mov	r8, r0
    823c:	cmp	r6, #0
    8240:	ble	8eb0 <ReadInt64Data+0x13b8>
    8244:	lsl	r2, r6, #3
    8248:	add	r1, sp, #24
    824c:	mov	r0, r7
    8250:	bl	1834 <memcpy@plt>
    8254:	cmp	r9, #13
    8258:	beq	8eb8 <ReadInt64Data+0x13c0>
    825c:	b	9020 <ReadInt64Data+0x1528>
    8260:	add	r1, r7, #2048	; 0x800
    8264:	str	r6, [sp, #4]
    8268:	sub	r0, r6, #256	; 0x100
    826c:	str	r0, [sp, #12]
    8270:	mov	r0, #0
    8274:	mov	r8, #0
    8278:	mov	sl, r0
    827c:	mov	r9, r1
    8280:	ldr	r3, [r5]
    8284:	add	r4, sp, #24
    8288:	mov	r0, r4
    828c:	ldr	r1, [sp, #20]
    8290:	mov	r2, #256	; 0x100
    8294:	bl	18d0 <fread@plt>
    8298:	mov	r6, r0
    829c:	mov	r5, #0
    82a0:	mov	r0, r4
    82a4:	bl	1c50 <Mat_int16Swap>
    82a8:	mov	r1, r7
    82ac:	str	r0, [r1, r5]!
    82b0:	asr	r0, r0, #31
    82b4:	str	r0, [r1, #4]
    82b8:	add	r5, r5, #8
    82bc:	add	r4, r4, #2
    82c0:	cmp	r5, #2048	; 0x800
    82c4:	bne	82a0 <ReadInt64Data+0x7a8>
    82c8:	add	r8, r6, r8
    82cc:	add	r7, r7, #2048	; 0x800
    82d0:	add	r1, r9, #2048	; 0x800
    82d4:	add	r0, sl, #256	; 0x100
    82d8:	ldr	r2, [sp, #12]
    82dc:	cmp	r0, r2
    82e0:	ldr	r5, [sp, #16]
    82e4:	blt	8278 <ReadInt64Data+0x780>
    82e8:	ldr	r1, [sp, #4]
    82ec:	cmp	r0, r1
    82f0:	bge	901c <ReadInt64Data+0x1524>
    82f4:	sub	r6, r1, r0
    82f8:	ldr	r3, [r5]
    82fc:	add	r4, sp, #24
    8300:	mov	r0, r4
    8304:	ldr	r1, [sp, #20]
    8308:	mov	r2, r6
    830c:	bl	18d0 <fread@plt>
    8310:	add	r8, r0, r8
    8314:	cmp	r6, #1
    8318:	blt	901c <ReadInt64Data+0x1524>
    831c:	ldr	r0, [sp, #12]
    8320:	sub	r5, r0, sl
    8324:	mov	r0, r4
    8328:	bl	1c50 <Mat_int16Swap>
    832c:	asr	r1, r0, #31
    8330:	strd	r0, [r9]
    8334:	add	r9, r9, #8
    8338:	subs	r5, r5, #1
    833c:	add	r4, r4, #2
    8340:	bne	8324 <ReadInt64Data+0x82c>
    8344:	b	901c <ReadInt64Data+0x1524>
    8348:	add	r0, r7, #2048	; 0x800
    834c:	str	r6, [sp, #4]
    8350:	sub	r1, r6, #256	; 0x100
    8354:	str	r1, [sp, #8]
    8358:	mov	sl, #0
    835c:	mov	r1, #0
    8360:	mov	r8, #0
    8364:	str	r1, [sp, #12]
    8368:	mov	r9, r0
    836c:	ldr	r3, [r5]
    8370:	add	r4, sp, #24
    8374:	mov	r0, r4
    8378:	ldr	r1, [sp, #20]
    837c:	mov	r2, #256	; 0x100
    8380:	bl	18d0 <fread@plt>
    8384:	mov	r6, r0
    8388:	mov	r5, #0
    838c:	mov	r0, r4
    8390:	bl	1c64 <Mat_uint16Swap>
    8394:	mov	r1, r7
    8398:	str	r0, [r1, r5]!
    839c:	str	sl, [r1, #4]
    83a0:	add	r5, r5, #8
    83a4:	add	r4, r4, #2
    83a8:	cmp	r5, #2048	; 0x800
    83ac:	bne	838c <ReadInt64Data+0x894>
    83b0:	add	r8, r6, r8
    83b4:	add	r7, r7, #2048	; 0x800
    83b8:	add	r0, r9, #2048	; 0x800
    83bc:	ldr	r1, [sp, #12]
    83c0:	add	r1, r1, #256	; 0x100
    83c4:	ldr	r2, [sp, #8]
    83c8:	cmp	r1, r2
    83cc:	ldr	r5, [sp, #16]
    83d0:	blt	8364 <ReadInt64Data+0x86c>
    83d4:	ldr	r0, [sp, #4]
    83d8:	cmp	r1, r0
    83dc:	bge	901c <ReadInt64Data+0x1524>
    83e0:	sub	r6, r0, r1
    83e4:	ldr	r3, [r5]
    83e8:	add	r4, sp, #24
    83ec:	mov	r0, r4
    83f0:	ldr	sl, [sp, #20]
    83f4:	mov	r1, sl
    83f8:	mov	r2, r6
    83fc:	bl	18d0 <fread@plt>
    8400:	add	r8, r0, r8
    8404:	cmp	r6, #1
    8408:	blt	9020 <ReadInt64Data+0x1528>
    840c:	ldr	r0, [sp, #8]
    8410:	ldr	r1, [sp, #12]
    8414:	sub	r5, r0, r1
    8418:	mov	r7, #0
    841c:	mov	r0, r4
    8420:	bl	1c64 <Mat_uint16Swap>
    8424:	mov	r6, r0
    8428:	strd	r6, [r9]
    842c:	add	r9, r9, #8
    8430:	subs	r5, r5, #1
    8434:	add	r4, r4, #2
    8438:	bne	841c <ReadInt64Data+0x924>
    843c:	b	9020 <ReadInt64Data+0x1528>
    8440:	add	r1, r7, #2048	; 0x800
    8444:	str	r6, [sp, #4]
    8448:	sub	r0, r6, #256	; 0x100
    844c:	str	r0, [sp, #12]
    8450:	mov	r0, #0
    8454:	mov	r8, #0
    8458:	mov	sl, r0
    845c:	mov	r9, r1
    8460:	ldr	r3, [r5]
    8464:	add	r4, sp, #24
    8468:	mov	r0, r4
    846c:	ldr	r1, [sp, #20]
    8470:	mov	r2, #256	; 0x100
    8474:	bl	18d0 <fread@plt>
    8478:	mov	r6, r0
    847c:	mov	r5, #0
    8480:	mov	r0, r4
    8484:	bl	1c28 <Mat_int32Swap>
    8488:	mov	r1, r7
    848c:	str	r0, [r1, r5]!
    8490:	asr	r0, r0, #31
    8494:	str	r0, [r1, #4]
    8498:	add	r5, r5, #8
    849c:	add	r4, r4, #4
    84a0:	cmp	r5, #2048	; 0x800
    84a4:	bne	8480 <ReadInt64Data+0x988>
    84a8:	add	r8, r6, r8
    84ac:	add	r7, r7, #2048	; 0x800
    84b0:	add	r1, r9, #2048	; 0x800
    84b4:	add	r0, sl, #256	; 0x100
    84b8:	ldr	r2, [sp, #12]
    84bc:	cmp	r0, r2
    84c0:	ldr	r5, [sp, #16]
    84c4:	blt	8458 <ReadInt64Data+0x960>
    84c8:	ldr	r1, [sp, #4]
    84cc:	cmp	r0, r1
    84d0:	bge	901c <ReadInt64Data+0x1524>
    84d4:	sub	r6, r1, r0
    84d8:	ldr	r3, [r5]
    84dc:	add	r4, sp, #24
    84e0:	mov	r0, r4
    84e4:	ldr	r1, [sp, #20]
    84e8:	mov	r2, r6
    84ec:	bl	18d0 <fread@plt>
    84f0:	add	r8, r0, r8
    84f4:	cmp	r6, #1
    84f8:	blt	901c <ReadInt64Data+0x1524>
    84fc:	ldr	r0, [sp, #12]
    8500:	sub	r5, r0, sl
    8504:	mov	r0, r4
    8508:	bl	1c28 <Mat_int32Swap>
    850c:	asr	r1, r0, #31
    8510:	strd	r0, [r9]
    8514:	add	r9, r9, #8
    8518:	subs	r5, r5, #1
    851c:	add	r4, r4, #4
    8520:	bne	8504 <ReadInt64Data+0xa0c>
    8524:	b	901c <ReadInt64Data+0x1524>
    8528:	add	r0, r7, #2048	; 0x800
    852c:	str	r6, [sp, #4]
    8530:	sub	r1, r6, #256	; 0x100
    8534:	str	r1, [sp, #8]
    8538:	mov	sl, #0
    853c:	mov	r1, #0
    8540:	mov	r8, #0
    8544:	str	r1, [sp, #12]
    8548:	mov	r9, r0
    854c:	ldr	r3, [r5]
    8550:	add	r4, sp, #24
    8554:	mov	r0, r4
    8558:	ldr	r1, [sp, #20]
    855c:	mov	r2, #256	; 0x100
    8560:	bl	18d0 <fread@plt>
    8564:	mov	r6, r0
    8568:	mov	r5, #0
    856c:	mov	r0, r4
    8570:	bl	1c3c <Mat_uint32Swap>
    8574:	mov	r1, r7
    8578:	str	r0, [r1, r5]!
    857c:	str	sl, [r1, #4]
    8580:	add	r5, r5, #8
    8584:	add	r4, r4, #4
    8588:	cmp	r5, #2048	; 0x800
    858c:	bne	856c <ReadInt64Data+0xa74>
    8590:	add	r8, r6, r8
    8594:	add	r7, r7, #2048	; 0x800
    8598:	add	r0, r9, #2048	; 0x800
    859c:	ldr	r1, [sp, #12]
    85a0:	add	r1, r1, #256	; 0x100
    85a4:	ldr	r2, [sp, #8]
    85a8:	cmp	r1, r2
    85ac:	ldr	r5, [sp, #16]
    85b0:	blt	8544 <ReadInt64Data+0xa4c>
    85b4:	ldr	r0, [sp, #4]
    85b8:	cmp	r1, r0
    85bc:	bge	901c <ReadInt64Data+0x1524>
    85c0:	sub	r6, r0, r1
    85c4:	ldr	r3, [r5]
    85c8:	add	r4, sp, #24
    85cc:	mov	r0, r4
    85d0:	ldr	sl, [sp, #20]
    85d4:	mov	r1, sl
    85d8:	mov	r2, r6
    85dc:	bl	18d0 <fread@plt>
    85e0:	add	r8, r0, r8
    85e4:	cmp	r6, #1
    85e8:	blt	9020 <ReadInt64Data+0x1528>
    85ec:	ldr	r0, [sp, #8]
    85f0:	ldr	r1, [sp, #12]
    85f4:	sub	r5, r0, r1
    85f8:	mov	r7, #0
    85fc:	mov	r0, r4
    8600:	bl	1c3c <Mat_uint32Swap>
    8604:	mov	r6, r0
    8608:	strd	r6, [r9]
    860c:	add	r9, r9, #8
    8610:	subs	r5, r5, #1
    8614:	add	r4, r4, #4
    8618:	bne	85fc <ReadInt64Data+0xb04>
    861c:	b	9020 <ReadInt64Data+0x1528>
    8620:	add	r1, r7, #2048	; 0x800
    8624:	str	r6, [sp, #4]
    8628:	sub	r0, r6, #256	; 0x100
    862c:	str	r0, [sp, #12]
    8630:	mov	r0, #0
    8634:	mov	r8, #0
    8638:	mov	sl, r0
    863c:	mov	r9, r1
    8640:	ldr	r3, [r5]
    8644:	add	r6, sp, #24
    8648:	mov	r0, r6
    864c:	ldr	r1, [sp, #20]
    8650:	mov	r2, #256	; 0x100
    8654:	bl	18d0 <fread@plt>
    8658:	mov	r4, r0
    865c:	mov	r5, #0
    8660:	mov	r0, r6
    8664:	bl	1c7c <Mat_floatSwap>
    8668:	vmov	r0, s0
    866c:	bl	48e10 <__aeabi_f2lz>
    8670:	mov	r2, r7
    8674:	str	r0, [r2, r5]!
    8678:	str	r1, [r2, #4]
    867c:	add	r5, r5, #8
    8680:	add	r6, r6, #4
    8684:	cmp	r5, #2048	; 0x800
    8688:	bne	8660 <ReadInt64Data+0xb68>
    868c:	add	r8, r4, r8
    8690:	add	r7, r7, #2048	; 0x800
    8694:	add	r1, r9, #2048	; 0x800
    8698:	add	r0, sl, #256	; 0x100
    869c:	ldr	r2, [sp, #12]
    86a0:	cmp	r0, r2
    86a4:	ldr	r5, [sp, #16]
    86a8:	blt	8638 <ReadInt64Data+0xb40>
    86ac:	ldr	r1, [sp, #4]
    86b0:	cmp	r0, r1
    86b4:	bge	901c <ReadInt64Data+0x1524>
    86b8:	sub	r6, r1, r0
    86bc:	ldr	r3, [r5]
    86c0:	add	r4, sp, #24
    86c4:	mov	r0, r4
    86c8:	ldr	r1, [sp, #20]
    86cc:	mov	r2, r6
    86d0:	bl	18d0 <fread@plt>
    86d4:	add	r8, r0, r8
    86d8:	cmp	r6, #1
    86dc:	blt	901c <ReadInt64Data+0x1524>
    86e0:	ldr	r0, [sp, #12]
    86e4:	sub	r5, r0, sl
    86e8:	mov	r0, r4
    86ec:	bl	1c7c <Mat_floatSwap>
    86f0:	vmov	r0, s0
    86f4:	bl	48e10 <__aeabi_f2lz>
    86f8:	strd	r0, [r9]
    86fc:	add	r9, r9, #8
    8700:	subs	r5, r5, #1
    8704:	add	r4, r4, #4
    8708:	bne	86e8 <ReadInt64Data+0xbf0>
    870c:	b	901c <ReadInt64Data+0x1524>
    8710:	add	r1, r7, #2048	; 0x800
    8714:	str	r6, [sp, #4]
    8718:	sub	r0, r6, #256	; 0x100
    871c:	str	r0, [sp, #12]
    8720:	mov	r0, #0
    8724:	add	r4, sp, #24
    8728:	mov	r8, #0
    872c:	mov	sl, r0
    8730:	mov	r9, r1
    8734:	ldr	r3, [r5]
    8738:	mov	r0, r4
    873c:	ldr	r1, [sp, #20]
    8740:	mov	r2, #256	; 0x100
    8744:	bl	18d0 <fread@plt>
    8748:	mov	r6, r0
    874c:	mov	r5, #0
    8750:	add	r0, r4, r5
    8754:	bl	1cc0 <Mat_doubleSwap>
    8758:	vmov	r0, r1, d0
    875c:	bl	48e3c <__aeabi_d2lz>
    8760:	mov	r2, r7
    8764:	str	r0, [r2, r5]!
    8768:	str	r1, [r2, #4]
    876c:	add	r5, r5, #8
    8770:	cmp	r5, #2048	; 0x800
    8774:	bne	8750 <ReadInt64Data+0xc58>
    8778:	add	r8, r6, r8
    877c:	add	r7, r7, #2048	; 0x800
    8780:	add	r1, r9, #2048	; 0x800
    8784:	add	r0, sl, #256	; 0x100
    8788:	ldr	r2, [sp, #12]
    878c:	cmp	r0, r2
    8790:	ldr	r5, [sp, #16]
    8794:	blt	872c <ReadInt64Data+0xc34>
    8798:	ldr	r1, [sp, #4]
    879c:	cmp	r0, r1
    87a0:	bge	901c <ReadInt64Data+0x1524>
    87a4:	sub	r6, r1, r0
    87a8:	ldr	r3, [r5]
    87ac:	add	r4, sp, #24
    87b0:	mov	r0, r4
    87b4:	ldr	r1, [sp, #20]
    87b8:	mov	r2, r6
    87bc:	bl	18d0 <fread@plt>
    87c0:	add	r8, r0, r8
    87c4:	cmp	r6, #1
    87c8:	blt	901c <ReadInt64Data+0x1524>
    87cc:	ldr	r0, [sp, #12]
    87d0:	sub	r5, r0, sl
    87d4:	mov	r0, r4
    87d8:	bl	1cc0 <Mat_doubleSwap>
    87dc:	vmov	r0, r1, d0
    87e0:	bl	48e3c <__aeabi_d2lz>
    87e4:	strd	r0, [r9]
    87e8:	add	r9, r9, #8
    87ec:	subs	r5, r5, #1
    87f0:	add	r4, r4, #8
    87f4:	bne	87d4 <ReadInt64Data+0xcdc>
    87f8:	b	901c <ReadInt64Data+0x1524>
    87fc:	str	r9, [sp]
    8800:	add	r1, r7, #2048	; 0x800
    8804:	str	r6, [sp, #4]
    8808:	sub	r0, r6, #256	; 0x100
    880c:	str	r0, [sp, #8]
    8810:	mov	r0, #0
    8814:	add	r4, sp, #24
    8818:	mov	r5, r7
    881c:	mov	r8, #0
    8820:	str	r0, [sp, #12]
    8824:	mov	r9, r1
    8828:	ldr	r0, [sp, #16]
    882c:	ldr	r3, [r0]
    8830:	mov	r0, r4
    8834:	mov	r1, sl
    8838:	mov	r2, #256	; 0x100
    883c:	bl	18d0 <fread@plt>
    8840:	mov	r6, r0
    8844:	mov	sl, #0
    8848:	add	r0, r4, sl
    884c:	bl	1bbc <Mat_int64Swap>
    8850:	mov	r2, r5
    8854:	str	r0, [r2, sl]!
    8858:	str	r1, [r2, #4]
    885c:	add	sl, sl, #8
    8860:	cmp	sl, #2048	; 0x800
    8864:	bne	8848 <ReadInt64Data+0xd50>
    8868:	add	r8, r6, r8
    886c:	add	r5, r5, #2048	; 0x800
    8870:	add	r1, r9, #2048	; 0x800
    8874:	ldr	r0, [sp, #12]
    8878:	add	r0, r0, #256	; 0x100
    887c:	ldr	r2, [sp, #8]
    8880:	cmp	r0, r2
    8884:	ldr	sl, [sp, #20]
    8888:	blt	8820 <ReadInt64Data+0xd28>
    888c:	ldr	r6, [sp, #4]
    8890:	cmp	r0, r6
    8894:	bge	8ea8 <ReadInt64Data+0x13b0>
    8898:	sub	r6, r6, r0
    889c:	ldr	r5, [sp, #16]
    88a0:	ldr	r3, [r5]
    88a4:	add	r4, sp, #24
    88a8:	mov	r0, r4
    88ac:	mov	r1, sl
    88b0:	mov	r2, r6
    88b4:	bl	18d0 <fread@plt>
    88b8:	add	r8, r0, r8
    88bc:	cmp	r6, #1
    88c0:	blt	8e9c <ReadInt64Data+0x13a4>
    88c4:	ldr	r0, [sp, #8]
    88c8:	ldr	r1, [sp, #12]
    88cc:	sub	r5, r0, r1
    88d0:	mov	r0, r4
    88d4:	bl	1bbc <Mat_int64Swap>
    88d8:	strd	r0, [r9]
    88dc:	add	r9, r9, #8
    88e0:	subs	r5, r5, #1
    88e4:	add	r4, r4, #8
    88e8:	bne	88d0 <ReadInt64Data+0xdd8>
    88ec:	ldr	r6, [sp, #4]
    88f0:	b	8ea8 <ReadInt64Data+0x13b0>
    88f4:	add	r1, r7, #2048	; 0x800
    88f8:	str	r6, [sp, #4]
    88fc:	sub	r9, r6, #256	; 0x100
    8900:	mov	r0, #0
    8904:	add	r4, sp, #24
    8908:	mov	r8, #0
    890c:	mov	sl, r0
    8910:	mov	r6, r1
    8914:	ldr	r3, [r5]
    8918:	mov	r0, r4
    891c:	ldr	r1, [sp, #20]
    8920:	mov	r2, #256	; 0x100
    8924:	bl	18d0 <fread@plt>
    8928:	mov	r1, r7
    892c:	mov	r2, #0
    8930:	add	r3, r4, r2
    8934:	ldrsh	r3, [r3]
    8938:	asr	r5, r3, #31
    893c:	stm	r1, {r3, r5}
    8940:	add	r1, r1, #8
    8944:	add	r2, r2, #2
    8948:	cmp	r2, #512	; 0x200
    894c:	bne	8930 <ReadInt64Data+0xe38>
    8950:	add	r8, r0, r8
    8954:	add	r7, r7, #2048	; 0x800
    8958:	add	r1, r6, #2048	; 0x800
    895c:	add	r0, sl, #256	; 0x100
    8960:	cmp	r0, r9
    8964:	ldr	r5, [sp, #16]
    8968:	blt	890c <ReadInt64Data+0xe14>
    896c:	ldr	r1, [sp, #4]
    8970:	cmp	r0, r1
    8974:	bge	901c <ReadInt64Data+0x1524>
    8978:	sub	r7, r1, r0
    897c:	ldr	r3, [r5]
    8980:	add	r4, sp, #24
    8984:	mov	r0, r4
    8988:	ldr	r1, [sp, #20]
    898c:	mov	r2, r7
    8990:	bl	18d0 <fread@plt>
    8994:	add	r8, r0, r8
    8998:	cmp	r7, #1
    899c:	blt	901c <ReadInt64Data+0x1524>
    89a0:	sub	r0, r9, sl
    89a4:	ldrsh	r2, [r4], #2
    89a8:	asr	r3, r2, #31
    89ac:	strd	r2, [r6]
    89b0:	add	r6, r6, #8
    89b4:	subs	r0, r0, #1
    89b8:	bne	89a4 <ReadInt64Data+0xeac>
    89bc:	b	901c <ReadInt64Data+0x1524>
    89c0:	add	r0, r7, #2048	; 0x800
    89c4:	str	r6, [sp, #4]
    89c8:	sub	r9, r6, #256	; 0x100
    89cc:	mov	r5, #0
    89d0:	add	r4, sp, #24
    89d4:	mov	r1, #0
    89d8:	mov	r8, #0
    89dc:	mov	sl, r1
    89e0:	mov	r6, r0
    89e4:	ldr	r0, [sp, #16]
    89e8:	ldr	r3, [r0]
    89ec:	mov	r0, r4
    89f0:	ldr	r1, [sp, #20]
    89f4:	mov	r2, #256	; 0x100
    89f8:	bl	18d0 <fread@plt>
    89fc:	mov	r1, r7
    8a00:	mov	r2, #0
    8a04:	add	r3, r4, r2
    8a08:	ldrh	r3, [r3]
    8a0c:	stm	r1, {r3, r5}
    8a10:	add	r1, r1, #8
    8a14:	add	r2, r2, #2
    8a18:	cmp	r2, #512	; 0x200
    8a1c:	bne	8a04 <ReadInt64Data+0xf0c>
    8a20:	add	r8, r0, r8
    8a24:	add	r7, r7, #2048	; 0x800
    8a28:	add	r0, r6, #2048	; 0x800
    8a2c:	add	r1, sl, #256	; 0x100
    8a30:	cmp	r1, r9
    8a34:	blt	89dc <ReadInt64Data+0xee4>
    8a38:	ldr	r0, [sp, #4]
    8a3c:	cmp	r1, r0
    8a40:	bge	901c <ReadInt64Data+0x1524>
    8a44:	sub	r7, r0, r1
    8a48:	ldr	r0, [sp, #16]
    8a4c:	ldr	r3, [r0]
    8a50:	add	r4, sp, #24
    8a54:	mov	r0, r4
    8a58:	ldr	r1, [sp, #20]
    8a5c:	mov	r2, r7
    8a60:	bl	18d0 <fread@plt>
    8a64:	add	r8, r0, r8
    8a68:	cmp	r7, #1
    8a6c:	blt	901c <ReadInt64Data+0x1524>
    8a70:	sub	r0, r9, sl
    8a74:	mov	r1, #0
    8a78:	ldrh	r2, [r4], #2
    8a7c:	str	r2, [r6]
    8a80:	str	r1, [r6, #4]
    8a84:	add	r6, r6, #8
    8a88:	subs	r0, r0, #1
    8a8c:	bne	8a78 <ReadInt64Data+0xf80>
    8a90:	b	901c <ReadInt64Data+0x1524>
    8a94:	add	r1, r7, #2048	; 0x800
    8a98:	str	r6, [sp, #4]
    8a9c:	sub	r9, r6, #256	; 0x100
    8aa0:	mov	r0, #0
    8aa4:	add	r4, sp, #24
    8aa8:	mov	r8, #0
    8aac:	mov	sl, r0
    8ab0:	mov	r6, r1
    8ab4:	ldr	r3, [r5]
    8ab8:	mov	r0, r4
    8abc:	ldr	r1, [sp, #20]
    8ac0:	mov	r2, #256	; 0x100
    8ac4:	bl	18d0 <fread@plt>
    8ac8:	mov	r1, r7
    8acc:	mov	r2, #0
    8ad0:	ldr	r3, [r4, r2, lsl #2]
    8ad4:	asr	r5, r3, #31
    8ad8:	stm	r1, {r3, r5}
    8adc:	add	r1, r1, #8
    8ae0:	add	r2, r2, #1
    8ae4:	cmp	r2, #256	; 0x100
    8ae8:	bne	8ad0 <ReadInt64Data+0xfd8>
    8aec:	add	r8, r0, r8
    8af0:	add	r7, r7, #2048	; 0x800
    8af4:	add	r1, r6, #2048	; 0x800
    8af8:	add	r0, sl, #256	; 0x100
    8afc:	cmp	r0, r9
    8b00:	ldr	r5, [sp, #16]
    8b04:	blt	8aac <ReadInt64Data+0xfb4>
    8b08:	ldr	r1, [sp, #4]
    8b0c:	cmp	r0, r1
    8b10:	bge	901c <ReadInt64Data+0x1524>
    8b14:	sub	r7, r1, r0
    8b18:	ldr	r3, [r5]
    8b1c:	add	r4, sp, #24
    8b20:	mov	r0, r4
    8b24:	ldr	r1, [sp, #20]
    8b28:	mov	r2, r7
    8b2c:	bl	18d0 <fread@plt>
    8b30:	add	r8, r0, r8
    8b34:	cmp	r7, #1
    8b38:	blt	901c <ReadInt64Data+0x1524>
    8b3c:	sub	r0, r9, sl
    8b40:	ldr	r2, [r4], #4
    8b44:	asr	r3, r2, #31
    8b48:	strd	r2, [r6]
    8b4c:	add	r6, r6, #8
    8b50:	subs	r0, r0, #1
    8b54:	bne	8b40 <ReadInt64Data+0x1048>
    8b58:	b	901c <ReadInt64Data+0x1524>
    8b5c:	add	r0, r7, #2048	; 0x800
    8b60:	str	r6, [sp, #4]
    8b64:	sub	r9, r6, #256	; 0x100
    8b68:	mov	r5, #0
    8b6c:	add	r4, sp, #24
    8b70:	mov	r1, #0
    8b74:	mov	r8, #0
    8b78:	mov	sl, r1
    8b7c:	mov	r6, r0
    8b80:	ldr	r0, [sp, #16]
    8b84:	ldr	r3, [r0]
    8b88:	mov	r0, r4
    8b8c:	ldr	r1, [sp, #20]
    8b90:	mov	r2, #256	; 0x100
    8b94:	bl	18d0 <fread@plt>
    8b98:	mov	r1, r7
    8b9c:	mov	r2, #0
    8ba0:	ldr	r3, [r4, r2, lsl #2]
    8ba4:	stm	r1, {r3, r5}
    8ba8:	add	r1, r1, #8
    8bac:	add	r2, r2, #1
    8bb0:	cmp	r2, #256	; 0x100
    8bb4:	bne	8ba0 <ReadInt64Data+0x10a8>
    8bb8:	add	r8, r0, r8
    8bbc:	add	r7, r7, #2048	; 0x800
    8bc0:	add	r0, r6, #2048	; 0x800
    8bc4:	add	r1, sl, #256	; 0x100
    8bc8:	cmp	r1, r9
    8bcc:	blt	8b78 <ReadInt64Data+0x1080>
    8bd0:	ldr	r0, [sp, #4]
    8bd4:	cmp	r1, r0
    8bd8:	bge	901c <ReadInt64Data+0x1524>
    8bdc:	sub	r7, r0, r1
    8be0:	ldr	r0, [sp, #16]
    8be4:	ldr	r3, [r0]
    8be8:	add	r4, sp, #24
    8bec:	mov	r0, r4
    8bf0:	ldr	r1, [sp, #20]
    8bf4:	mov	r2, r7
    8bf8:	bl	18d0 <fread@plt>
    8bfc:	add	r8, r0, r8
    8c00:	cmp	r7, #1
    8c04:	blt	901c <ReadInt64Data+0x1524>
    8c08:	sub	r0, r9, sl
    8c0c:	mov	r1, #0
    8c10:	ldr	r2, [r4], #4
    8c14:	str	r2, [r6]
    8c18:	str	r1, [r6, #4]
    8c1c:	add	r6, r6, #8
    8c20:	subs	r0, r0, #1
    8c24:	bne	8c10 <ReadInt64Data+0x1118>
    8c28:	b	901c <ReadInt64Data+0x1524>
    8c2c:	add	r1, r7, #2048	; 0x800
    8c30:	str	r6, [sp, #4]
    8c34:	sub	r0, r6, #256	; 0x100
    8c38:	str	r0, [sp, #12]
    8c3c:	mov	r0, #0
    8c40:	mov	r8, #0
    8c44:	mov	sl, r0
    8c48:	mov	r4, r1
    8c4c:	ldr	r3, [r5]
    8c50:	add	r9, sp, #24
    8c54:	mov	r0, r9
    8c58:	ldr	r1, [sp, #20]
    8c5c:	mov	r2, #256	; 0x100
    8c60:	bl	18d0 <fread@plt>
    8c64:	mov	r6, r0
    8c68:	mov	r5, #0
    8c6c:	ldr	r0, [r9], #4
    8c70:	bl	48e10 <__aeabi_f2lz>
    8c74:	mov	r2, r7
    8c78:	str	r0, [r2, r5]!
    8c7c:	str	r1, [r2, #4]
    8c80:	add	r5, r5, #8
    8c84:	cmp	r5, #2048	; 0x800
    8c88:	bne	8c6c <ReadInt64Data+0x1174>
    8c8c:	add	r8, r6, r8
    8c90:	add	r7, r7, #2048	; 0x800
    8c94:	add	r1, r4, #2048	; 0x800
    8c98:	add	r0, sl, #256	; 0x100
    8c9c:	ldr	r2, [sp, #12]
    8ca0:	cmp	r0, r2
    8ca4:	ldr	r5, [sp, #16]
    8ca8:	blt	8c44 <ReadInt64Data+0x114c>
    8cac:	ldr	r1, [sp, #4]
    8cb0:	cmp	r0, r1
    8cb4:	bge	901c <ReadInt64Data+0x1524>
    8cb8:	sub	r6, r1, r0
    8cbc:	ldr	r3, [r5]
    8cc0:	add	r7, sp, #24
    8cc4:	mov	r0, r7
    8cc8:	ldr	r1, [sp, #20]
    8ccc:	mov	r2, r6
    8cd0:	bl	18d0 <fread@plt>
    8cd4:	add	r8, r0, r8
    8cd8:	cmp	r6, #1
    8cdc:	blt	901c <ReadInt64Data+0x1524>
    8ce0:	ldr	r0, [sp, #12]
    8ce4:	sub	r5, r0, sl
    8ce8:	ldr	r0, [r7], #4
    8cec:	bl	48e10 <__aeabi_f2lz>
    8cf0:	strd	r0, [r4]
    8cf4:	add	r4, r4, #8
    8cf8:	subs	r5, r5, #1
    8cfc:	bne	8ce8 <ReadInt64Data+0x11f0>
    8d00:	b	901c <ReadInt64Data+0x1524>
    8d04:	add	r1, r7, #2048	; 0x800
    8d08:	str	r6, [sp, #4]
    8d0c:	sub	r0, r6, #256	; 0x100
    8d10:	str	r0, [sp, #12]
    8d14:	mov	r0, #0
    8d18:	add	r4, sp, #24
    8d1c:	mov	r8, #0
    8d20:	mov	sl, r0
    8d24:	mov	r9, r1
    8d28:	ldr	r3, [r5]
    8d2c:	mov	r0, r4
    8d30:	ldr	r1, [sp, #20]
    8d34:	mov	r2, #256	; 0x100
    8d38:	bl	18d0 <fread@plt>
    8d3c:	mov	r6, r0
    8d40:	mov	r5, #0
    8d44:	add	r0, r4, r5
    8d48:	vldr	d16, [r0]
    8d4c:	vmov	r0, r1, d16
    8d50:	bl	48e3c <__aeabi_d2lz>
    8d54:	mov	r2, r7
    8d58:	str	r0, [r2, r5]!
    8d5c:	str	r1, [r2, #4]
    8d60:	add	r5, r5, #8
    8d64:	cmp	r5, #2048	; 0x800
    8d68:	bne	8d44 <ReadInt64Data+0x124c>
    8d6c:	add	r8, r6, r8
    8d70:	add	r7, r7, #2048	; 0x800
    8d74:	add	r1, r9, #2048	; 0x800
    8d78:	add	r0, sl, #256	; 0x100
    8d7c:	ldr	r2, [sp, #12]
    8d80:	cmp	r0, r2
    8d84:	ldr	r5, [sp, #16]
    8d88:	blt	8d20 <ReadInt64Data+0x1228>
    8d8c:	ldr	r1, [sp, #4]
    8d90:	cmp	r0, r1
    8d94:	bge	901c <ReadInt64Data+0x1524>
    8d98:	sub	r6, r1, r0
    8d9c:	ldr	r3, [r5]
    8da0:	add	r4, sp, #24
    8da4:	mov	r0, r4
    8da8:	ldr	r1, [sp, #20]
    8dac:	mov	r2, r6
    8db0:	bl	18d0 <fread@plt>
    8db4:	add	r8, r0, r8
    8db8:	cmp	r6, #1
    8dbc:	blt	901c <ReadInt64Data+0x1524>
    8dc0:	ldr	r0, [sp, #12]
    8dc4:	sub	r5, r0, sl
    8dc8:	vldr	d16, [r4]
    8dcc:	vmov	r0, r1, d16
    8dd0:	bl	48e3c <__aeabi_d2lz>
    8dd4:	strd	r0, [r9]
    8dd8:	add	r9, r9, #8
    8ddc:	subs	r5, r5, #1
    8de0:	add	r4, r4, #8
    8de4:	bne	8dc8 <ReadInt64Data+0x12d0>
    8de8:	b	901c <ReadInt64Data+0x1524>
    8dec:	str	r9, [sp]
    8df0:	lsl	r4, r6, #3
    8df4:	str	r6, [sp, #4]
    8df8:	mov	r5, sl
    8dfc:	sub	r0, r6, #256	; 0x100
    8e00:	str	r0, [sp, #12]
    8e04:	mov	r6, #0
    8e08:	mov	r8, #0
    8e0c:	ldr	r0, [sp, #16]
    8e10:	ldr	r3, [r0]
    8e14:	add	sl, sp, #24
    8e18:	mov	r0, sl
    8e1c:	mov	r1, r5
    8e20:	mov	r2, #256	; 0x100
    8e24:	bl	18d0 <fread@plt>
    8e28:	mov	r9, r0
    8e2c:	add	r0, r7, r6, lsl #3
    8e30:	mov	r1, sl
    8e34:	mov	r2, #2048	; 0x800
    8e38:	bl	1834 <memcpy@plt>
    8e3c:	add	r8, r9, r8
    8e40:	sub	r4, r4, #2048	; 0x800
    8e44:	add	r6, r6, #256	; 0x100
    8e48:	ldr	r0, [sp, #12]
    8e4c:	cmp	r6, r0
    8e50:	blt	8e0c <ReadInt64Data+0x1314>
    8e54:	mov	sl, r5
    8e58:	ldr	r0, [sp, #4]
    8e5c:	cmp	r6, r0
    8e60:	bge	8ea4 <ReadInt64Data+0x13ac>
    8e64:	sub	r9, r0, r6
    8e68:	ldr	r5, [sp, #16]
    8e6c:	ldr	r3, [r5]
    8e70:	add	r0, sp, #24
    8e74:	mov	r1, sl
    8e78:	mov	r2, r9
    8e7c:	bl	18d0 <fread@plt>
    8e80:	add	r8, r0, r8
    8e84:	cmp	r9, #0
    8e88:	ble	8e9c <ReadInt64Data+0x13a4>
    8e8c:	add	r0, r7, r6, lsl #3
    8e90:	add	r1, sp, #24
    8e94:	mov	r2, r4
    8e98:	bl	1834 <memcpy@plt>
    8e9c:	ldr	r6, [sp, #4]
    8ea0:	b	8eac <ReadInt64Data+0x13b4>
    8ea4:	mov	r6, r0
    8ea8:	ldr	r5, [sp, #16]
    8eac:	ldr	r9, [sp]
    8eb0:	cmp	r9, #13
    8eb4:	bne	9020 <ReadInt64Data+0x1528>
    8eb8:	ldr	r0, [r5, #20]
    8ebc:	cmp	r0, #0
    8ec0:	beq	8f10 <ReadInt64Data+0x1418>
    8ec4:	cmp	r6, #256	; 0x100
    8ec8:	bgt	8f48 <ReadInt64Data+0x1450>
    8ecc:	ldr	r3, [r5]
    8ed0:	add	r4, sp, #24
    8ed4:	mov	r0, r4
    8ed8:	mov	r1, sl
    8edc:	mov	r2, r6
    8ee0:	bl	18d0 <fread@plt>
    8ee4:	add	r8, r0, r8
    8ee8:	cmp	r6, #1
    8eec:	blt	9020 <ReadInt64Data+0x1528>
    8ef0:	mov	r0, r4
    8ef4:	bl	1c0c <Mat_uint64Swap>
    8ef8:	strd	r0, [r7]
    8efc:	subs	r6, r6, #1
    8f00:	add	r7, r7, #8
    8f04:	add	r4, r4, #8
    8f08:	bne	8ef0 <ReadInt64Data+0x13f8>
    8f0c:	b	9020 <ReadInt64Data+0x1528>
    8f10:	cmp	r6, #256	; 0x100
    8f14:	bgt	902c <ReadInt64Data+0x1534>
    8f18:	ldr	r3, [r5]
    8f1c:	add	r0, sp, #24
    8f20:	mov	r1, sl
    8f24:	mov	r2, r6
    8f28:	bl	18d0 <fread@plt>
    8f2c:	add	r8, r0, r8
    8f30:	cmp	r6, #0
    8f34:	ble	9020 <ReadInt64Data+0x1528>
    8f38:	lsl	r2, r6, #3
    8f3c:	add	r1, sp, #24
    8f40:	mov	r0, r7
    8f44:	b	90c8 <ReadInt64Data+0x15d0>
    8f48:	add	r1, r7, #2048	; 0x800
    8f4c:	str	r6, [sp, #4]
    8f50:	sub	r0, r6, #256	; 0x100
    8f54:	str	r0, [sp, #12]
    8f58:	mov	r0, #0
    8f5c:	add	r4, sp, #24
    8f60:	mov	sl, r0
    8f64:	mov	r9, r1
    8f68:	ldr	r3, [r5]
    8f6c:	mov	r0, r4
    8f70:	ldr	r1, [sp, #20]
    8f74:	mov	r2, #256	; 0x100
    8f78:	bl	18d0 <fread@plt>
    8f7c:	mov	r6, r0
    8f80:	mov	r5, #0
    8f84:	add	r0, r4, r5
    8f88:	bl	1c0c <Mat_uint64Swap>
    8f8c:	mov	r2, r7
    8f90:	str	r0, [r2, r5]!
    8f94:	str	r1, [r2, #4]
    8f98:	add	r5, r5, #8
    8f9c:	cmp	r5, #2048	; 0x800
    8fa0:	bne	8f84 <ReadInt64Data+0x148c>
    8fa4:	add	r8, r6, r8
    8fa8:	add	r7, r7, #2048	; 0x800
    8fac:	add	r1, r9, #2048	; 0x800
    8fb0:	add	r0, sl, #256	; 0x100
    8fb4:	ldr	r2, [sp, #12]
    8fb8:	cmp	r0, r2
    8fbc:	ldr	r5, [sp, #16]
    8fc0:	blt	8f60 <ReadInt64Data+0x1468>
    8fc4:	ldr	r1, [sp, #4]
    8fc8:	cmp	r0, r1
    8fcc:	bge	901c <ReadInt64Data+0x1524>
    8fd0:	sub	r6, r1, r0
    8fd4:	ldr	r3, [r5]
    8fd8:	add	r4, sp, #24
    8fdc:	mov	r0, r4
    8fe0:	ldr	r1, [sp, #20]
    8fe4:	mov	r2, r6
    8fe8:	bl	18d0 <fread@plt>
    8fec:	add	r8, r0, r8
    8ff0:	cmp	r6, #1
    8ff4:	blt	901c <ReadInt64Data+0x1524>
    8ff8:	ldr	r0, [sp, #12]
    8ffc:	sub	r5, r0, sl
    9000:	mov	r0, r4
    9004:	bl	1c0c <Mat_uint64Swap>
    9008:	strd	r0, [r9]
    900c:	add	r9, r9, #8
    9010:	subs	r5, r5, #1
    9014:	add	r4, r4, #8
    9018:	bne	9000 <ReadInt64Data+0x1508>
    901c:	ldr	sl, [sp, #20]
    9020:	mul	r0, r8, sl
    9024:	sub	sp, fp, #28
    9028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    902c:	lsl	r4, r6, #3
    9030:	str	r6, [sp, #4]
    9034:	sub	r0, r6, #256	; 0x100
    9038:	str	r0, [sp, #12]
    903c:	mov	r6, #0
    9040:	add	r9, sp, #24
    9044:	ldr	r3, [r5]
    9048:	mov	r0, r9
    904c:	mov	r1, sl
    9050:	mov	r2, #256	; 0x100
    9054:	bl	18d0 <fread@plt>
    9058:	mov	sl, r0
    905c:	add	r0, r7, r6, lsl #3
    9060:	mov	r1, r9
    9064:	mov	r2, #2048	; 0x800
    9068:	bl	1834 <memcpy@plt>
    906c:	add	r8, sl, r8
    9070:	ldr	sl, [sp, #20]
    9074:	sub	r4, r4, #2048	; 0x800
    9078:	add	r6, r6, #256	; 0x100
    907c:	ldr	r0, [sp, #12]
    9080:	cmp	r6, r0
    9084:	blt	9044 <ReadInt64Data+0x154c>
    9088:	ldr	r0, [sp, #4]
    908c:	cmp	r6, r0
    9090:	bge	9020 <ReadInt64Data+0x1528>
    9094:	sub	r5, r0, r6
    9098:	ldr	r0, [sp, #16]
    909c:	ldr	r3, [r0]
    90a0:	add	r0, sp, #24
    90a4:	mov	r1, sl
    90a8:	mov	r2, r5
    90ac:	bl	18d0 <fread@plt>
    90b0:	add	r8, r0, r8
    90b4:	cmp	r5, #0
    90b8:	ble	9020 <ReadInt64Data+0x1528>
    90bc:	add	r0, r7, r6, lsl #3
    90c0:	add	r1, sp, #24
    90c4:	mov	r2, r4
    90c8:	bl	1834 <memcpy@plt>
    90cc:	b	9020 <ReadInt64Data+0x1528>

000090d0 <ReadCompressedInt64Data>:
    90d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    90d4:	add	fp, sp, #28
    90d8:	sub	sp, sp, #20
    90dc:	mov	r7, r0
    90e0:	mov	r0, #0
    90e4:	cmp	r1, #0
    90e8:	beq	90fc <ReadCompressedInt64Data+0x2c>
    90ec:	cmp	r7, #0
    90f0:	movne	r5, r2
    90f4:	cmpne	r2, #0
    90f8:	bne	9104 <ReadCompressedInt64Data+0x34>
    90fc:	sub	sp, fp, #28
    9100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9104:	mov	r4, r3
    9108:	mov	r8, r1
    910c:	ldr	sl, [fp, #8]
    9110:	mov	r0, r3
    9114:	bl	193c <Mat_SizeOf@plt>
    9118:	mov	r6, r0
    911c:	sub	r0, r4, #1
    9120:	cmp	r0, #12
    9124:	bhi	9698 <ReadCompressedInt64Data+0x5c8>
    9128:	add	r1, pc, #4
    912c:	ldr	r0, [r1, r0, lsl #2]
    9130:	add	pc, r1, r0
    9134:	.word	0x00000034
    9138:	.word	0x00000074
    913c:	.word	0x000000c0
    9140:	.word	0x00000110
    9144:	.word	0x00000160
    9148:	.word	0x000001b0
    914c:	.word	0x00000200
    9150:	.word	0x00000564
    9154:	.word	0x00000254
    9158:	.word	0x00000564
    915c:	.word	0x00000564
    9160:	.word	0x000002a8
    9164:	.word	0x000004dc
    9168:	cmp	sl, #1
    916c:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    9170:	add	r9, sp, #8
    9174:	mov	r4, sl
    9178:	mov	r0, r7
    917c:	mov	r1, r8
    9180:	mov	r2, r9
    9184:	mov	r3, r6
    9188:	bl	31e4 <InflateData>
    918c:	ldrsb	r0, [sp, #8]
    9190:	asr	r1, r0, #31
    9194:	strd	r0, [r5]
    9198:	subs	r4, r4, #1
    919c:	add	r5, r5, #8
    91a0:	bne	9178 <ReadCompressedInt64Data+0xa8>
    91a4:	b	9698 <ReadCompressedInt64Data+0x5c8>
    91a8:	cmp	sl, #1
    91ac:	mov	sl, r6
    91b0:	blt	91e8 <ReadCompressedInt64Data+0x118>
    91b4:	add	r4, sp, #8
    91b8:	mov	r9, #0
    91bc:	ldr	r6, [fp, #8]
    91c0:	mov	r0, r7
    91c4:	mov	r1, r8
    91c8:	mov	r2, r4
    91cc:	mov	r3, sl
    91d0:	bl	31e4 <InflateData>
    91d4:	ldrb	r0, [sp, #8]
    91d8:	stm	r5, {r0, r9}
    91dc:	subs	r6, r6, #1
    91e0:	add	r5, r5, #8
    91e4:	bne	91c0 <ReadCompressedInt64Data+0xf0>
    91e8:	mov	r6, sl
    91ec:	ldr	sl, [fp, #8]
    91f0:	b	9698 <ReadCompressedInt64Data+0x5c8>
    91f4:	ldr	r0, [r7, #20]
    91f8:	cmp	r0, #0
    91fc:	beq	9430 <ReadCompressedInt64Data+0x360>
    9200:	cmp	sl, #1
    9204:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    9208:	add	r9, sp, #8
    920c:	mov	r4, sl
    9210:	mov	r0, r7
    9214:	mov	r1, r8
    9218:	mov	r2, r9
    921c:	mov	r3, r6
    9220:	bl	31e4 <InflateData>
    9224:	mov	r0, r9
    9228:	bl	1c50 <Mat_int16Swap>
    922c:	asr	r1, r0, #31
    9230:	strd	r0, [r5]
    9234:	subs	r4, r4, #1
    9238:	add	r5, r5, #8
    923c:	bne	9210 <ReadCompressedInt64Data+0x140>
    9240:	b	9698 <ReadCompressedInt64Data+0x5c8>
    9244:	ldr	r0, [r7, #20]
    9248:	cmp	r0, #0
    924c:	beq	9470 <ReadCompressedInt64Data+0x3a0>
    9250:	cmp	sl, #1
    9254:	blt	952c <ReadCompressedInt64Data+0x45c>
    9258:	add	sl, sp, #8
    925c:	mov	r9, #0
    9260:	ldr	r4, [fp, #8]
    9264:	mov	r0, r7
    9268:	mov	r1, r8
    926c:	mov	r2, sl
    9270:	mov	r3, r6
    9274:	bl	31e4 <InflateData>
    9278:	mov	r0, sl
    927c:	bl	1c64 <Mat_uint16Swap>
    9280:	stm	r5, {r0, r9}
    9284:	subs	r4, r4, #1
    9288:	add	r5, r5, #8
    928c:	bne	9264 <ReadCompressedInt64Data+0x194>
    9290:	b	952c <ReadCompressedInt64Data+0x45c>
    9294:	ldr	r0, [r7, #20]
    9298:	cmp	r0, #0
    929c:	beq	94b0 <ReadCompressedInt64Data+0x3e0>
    92a0:	cmp	sl, #1
    92a4:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    92a8:	add	r9, sp, #8
    92ac:	mov	r4, sl
    92b0:	mov	r0, r7
    92b4:	mov	r1, r8
    92b8:	mov	r2, r9
    92bc:	mov	r3, r6
    92c0:	bl	31e4 <InflateData>
    92c4:	mov	r0, r9
    92c8:	bl	1c28 <Mat_int32Swap>
    92cc:	asr	r1, r0, #31
    92d0:	strd	r0, [r5]
    92d4:	subs	r4, r4, #1
    92d8:	add	r5, r5, #8
    92dc:	bne	92b0 <ReadCompressedInt64Data+0x1e0>
    92e0:	b	9698 <ReadCompressedInt64Data+0x5c8>
    92e4:	ldr	r0, [r7, #20]
    92e8:	cmp	r0, #0
    92ec:	beq	94f0 <ReadCompressedInt64Data+0x420>
    92f0:	cmp	sl, #1
    92f4:	blt	952c <ReadCompressedInt64Data+0x45c>
    92f8:	add	sl, sp, #8
    92fc:	mov	r9, #0
    9300:	ldr	r4, [fp, #8]
    9304:	mov	r0, r7
    9308:	mov	r1, r8
    930c:	mov	r2, sl
    9310:	mov	r3, r6
    9314:	bl	31e4 <InflateData>
    9318:	mov	r0, sl
    931c:	bl	1c3c <Mat_uint32Swap>
    9320:	stm	r5, {r0, r9}
    9324:	subs	r4, r4, #1
    9328:	add	r5, r5, #8
    932c:	bne	9304 <ReadCompressedInt64Data+0x234>
    9330:	b	952c <ReadCompressedInt64Data+0x45c>
    9334:	ldr	r0, [r7, #20]
    9338:	cmp	r0, #0
    933c:	beq	9534 <ReadCompressedInt64Data+0x464>
    9340:	cmp	sl, #1
    9344:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    9348:	add	r9, sp, #8
    934c:	mov	r4, sl
    9350:	mov	r0, r7
    9354:	mov	r1, r8
    9358:	mov	r2, r9
    935c:	mov	r3, r6
    9360:	bl	31e4 <InflateData>
    9364:	mov	r0, r9
    9368:	bl	1c7c <Mat_floatSwap>
    936c:	vmov	r0, s0
    9370:	bl	48e10 <__aeabi_f2lz>
    9374:	strd	r0, [r5]
    9378:	subs	r4, r4, #1
    937c:	add	r5, r5, #8
    9380:	bne	9350 <ReadCompressedInt64Data+0x280>
    9384:	b	9698 <ReadCompressedInt64Data+0x5c8>
    9388:	ldr	r0, [r7, #20]
    938c:	cmp	r0, #0
    9390:	beq	9574 <ReadCompressedInt64Data+0x4a4>
    9394:	cmp	sl, #1
    9398:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    939c:	add	r9, sp, #8
    93a0:	mov	r4, sl
    93a4:	mov	r0, r7
    93a8:	mov	r1, r8
    93ac:	mov	r2, r9
    93b0:	mov	r3, r6
    93b4:	bl	31e4 <InflateData>
    93b8:	mov	r0, r9
    93bc:	bl	1cc0 <Mat_doubleSwap>
    93c0:	vmov	r0, r1, d0
    93c4:	bl	48e3c <__aeabi_d2lz>
    93c8:	strd	r0, [r5]
    93cc:	subs	r4, r4, #1
    93d0:	add	r5, r5, #8
    93d4:	bne	93a4 <ReadCompressedInt64Data+0x2d4>
    93d8:	b	9698 <ReadCompressedInt64Data+0x5c8>
    93dc:	ldr	r0, [r7, #20]
    93e0:	cmp	r0, #0
    93e4:	beq	95b8 <ReadCompressedInt64Data+0x4e8>
    93e8:	cmp	sl, #1
    93ec:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    93f0:	str	r4, [sp]
    93f4:	add	r4, sp, #8
    93f8:	mov	r9, r5
    93fc:	str	r6, [sp, #4]
    9400:	mov	r0, r7
    9404:	mov	r1, r8
    9408:	mov	r2, r4
    940c:	ldr	r3, [sp, #4]
    9410:	bl	31e4 <InflateData>
    9414:	mov	r0, r4
    9418:	bl	1bbc <Mat_int64Swap>
    941c:	strd	r0, [r9]
    9420:	subs	sl, sl, #1
    9424:	add	r9, r9, #8
    9428:	bne	9400 <ReadCompressedInt64Data+0x330>
    942c:	b	95fc <ReadCompressedInt64Data+0x52c>
    9430:	cmp	sl, #1
    9434:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    9438:	add	r9, sp, #8
    943c:	mov	r4, sl
    9440:	mov	r0, r7
    9444:	mov	r1, r8
    9448:	mov	r2, r9
    944c:	mov	r3, r6
    9450:	bl	31e4 <InflateData>
    9454:	ldrsh	r0, [sp, #8]
    9458:	asr	r1, r0, #31
    945c:	strd	r0, [r5]
    9460:	subs	r4, r4, #1
    9464:	add	r5, r5, #8
    9468:	bne	9440 <ReadCompressedInt64Data+0x370>
    946c:	b	9698 <ReadCompressedInt64Data+0x5c8>
    9470:	cmp	sl, #1
    9474:	blt	952c <ReadCompressedInt64Data+0x45c>
    9478:	add	sl, sp, #8
    947c:	mov	r9, #0
    9480:	ldr	r4, [fp, #8]
    9484:	mov	r0, r7
    9488:	mov	r1, r8
    948c:	mov	r2, sl
    9490:	mov	r3, r6
    9494:	bl	31e4 <InflateData>
    9498:	ldrh	r0, [sp, #8]
    949c:	stm	r5, {r0, r9}
    94a0:	subs	r4, r4, #1
    94a4:	add	r5, r5, #8
    94a8:	bne	9484 <ReadCompressedInt64Data+0x3b4>
    94ac:	b	952c <ReadCompressedInt64Data+0x45c>
    94b0:	cmp	sl, #1
    94b4:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    94b8:	add	r9, sp, #8
    94bc:	mov	r4, sl
    94c0:	mov	r0, r7
    94c4:	mov	r1, r8
    94c8:	mov	r2, r9
    94cc:	mov	r3, r6
    94d0:	bl	31e4 <InflateData>
    94d4:	ldr	r0, [sp, #8]
    94d8:	asr	r1, r0, #31
    94dc:	strd	r0, [r5]
    94e0:	subs	r4, r4, #1
    94e4:	add	r5, r5, #8
    94e8:	bne	94c0 <ReadCompressedInt64Data+0x3f0>
    94ec:	b	9698 <ReadCompressedInt64Data+0x5c8>
    94f0:	cmp	sl, #1
    94f4:	blt	952c <ReadCompressedInt64Data+0x45c>
    94f8:	add	sl, sp, #8
    94fc:	mov	r9, #0
    9500:	ldr	r4, [fp, #8]
    9504:	mov	r0, r7
    9508:	mov	r1, r8
    950c:	mov	r2, sl
    9510:	mov	r3, r6
    9514:	bl	31e4 <InflateData>
    9518:	ldr	r0, [sp, #8]
    951c:	stm	r5, {r0, r9}
    9520:	subs	r4, r4, #1
    9524:	add	r5, r5, #8
    9528:	bne	9504 <ReadCompressedInt64Data+0x434>
    952c:	ldr	sl, [fp, #8]
    9530:	b	9698 <ReadCompressedInt64Data+0x5c8>
    9534:	cmp	sl, #1
    9538:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    953c:	add	r9, sp, #8
    9540:	mov	r4, sl
    9544:	mov	r0, r7
    9548:	mov	r1, r8
    954c:	mov	r2, r9
    9550:	mov	r3, r6
    9554:	bl	31e4 <InflateData>
    9558:	ldr	r0, [sp, #8]
    955c:	bl	48e10 <__aeabi_f2lz>
    9560:	strd	r0, [r5]
    9564:	subs	r4, r4, #1
    9568:	add	r5, r5, #8
    956c:	bne	9544 <ReadCompressedInt64Data+0x474>
    9570:	b	9698 <ReadCompressedInt64Data+0x5c8>
    9574:	cmp	sl, #1
    9578:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    957c:	add	r9, sp, #8
    9580:	mov	r4, sl
    9584:	mov	r0, r7
    9588:	mov	r1, r8
    958c:	mov	r2, r9
    9590:	mov	r3, r6
    9594:	bl	31e4 <InflateData>
    9598:	vldr	d16, [sp, #8]
    959c:	vmov	r0, r1, d16
    95a0:	bl	48e3c <__aeabi_d2lz>
    95a4:	strd	r0, [r5]
    95a8:	subs	r4, r4, #1
    95ac:	add	r5, r5, #8
    95b0:	bne	9584 <ReadCompressedInt64Data+0x4b4>
    95b4:	b	9698 <ReadCompressedInt64Data+0x5c8>
    95b8:	cmp	sl, #1
    95bc:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    95c0:	str	r4, [sp]
    95c4:	add	r9, sp, #8
    95c8:	str	r6, [sp, #4]
    95cc:	mov	r6, r5
    95d0:	mov	r0, r7
    95d4:	mov	r1, r8
    95d8:	mov	r2, r9
    95dc:	ldr	r3, [sp, #4]
    95e0:	bl	31e4 <InflateData>
    95e4:	ldr	r0, [sp, #8]
    95e8:	ldr	r1, [sp, #12]
    95ec:	strd	r0, [r6]
    95f0:	subs	sl, sl, #1
    95f4:	add	r6, r6, #8
    95f8:	bne	95d0 <ReadCompressedInt64Data+0x500>
    95fc:	ldr	r0, [sp]
    9600:	cmp	r0, #13
    9604:	ldr	sl, [fp, #8]
    9608:	ldr	r6, [sp, #4]
    960c:	bne	9698 <ReadCompressedInt64Data+0x5c8>
    9610:	ldr	r0, [r7, #20]
    9614:	cmp	r0, #0
    9618:	beq	965c <ReadCompressedInt64Data+0x58c>
    961c:	cmp	sl, #1
    9620:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    9624:	add	r9, sp, #8
    9628:	mov	r4, sl
    962c:	mov	r0, r7
    9630:	mov	r1, r8
    9634:	mov	r2, r9
    9638:	mov	r3, r6
    963c:	bl	31e4 <InflateData>
    9640:	mov	r0, r9
    9644:	bl	1c0c <Mat_uint64Swap>
    9648:	strd	r0, [r5]
    964c:	subs	r4, r4, #1
    9650:	add	r5, r5, #8
    9654:	bne	962c <ReadCompressedInt64Data+0x55c>
    9658:	b	9698 <ReadCompressedInt64Data+0x5c8>
    965c:	cmp	sl, #1
    9660:	blt	9698 <ReadCompressedInt64Data+0x5c8>
    9664:	add	r9, sp, #8
    9668:	mov	r4, sl
    966c:	mov	r0, r7
    9670:	mov	r1, r8
    9674:	mov	r2, r9
    9678:	mov	r3, r6
    967c:	bl	31e4 <InflateData>
    9680:	ldr	r0, [sp, #8]
    9684:	ldr	r1, [sp, #12]
    9688:	strd	r0, [r5]
    968c:	subs	r4, r4, #1
    9690:	add	r5, r5, #8
    9694:	bne	966c <ReadCompressedInt64Data+0x59c>
    9698:	mul	r0, r6, sl
    969c:	sub	sp, fp, #28
    96a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000096a4 <ReadUInt64Data>:
    96a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    96a8:	add	fp, sp, #28
    96ac:	sub	sp, sp, #28
    96b0:	sub	sp, sp, #2048	; 0x800
    96b4:	mov	r5, r0
    96b8:	mov	r0, #0
    96bc:	cmp	r5, #0
    96c0:	beq	96d8 <ReadUInt64Data+0x34>
    96c4:	mov	r7, r1
    96c8:	cmp	r1, #0
    96cc:	ldrne	r1, [r5]
    96d0:	cmpne	r1, #0
    96d4:	bne	96e0 <ReadUInt64Data+0x3c>
    96d8:	sub	sp, fp, #28
    96dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    96e0:	mov	r6, r3
    96e4:	mov	r9, r2
    96e8:	mov	r0, r2
    96ec:	bl	193c <Mat_SizeOf@plt>
    96f0:	mov	sl, r0
    96f4:	sub	r0, r9, #1
    96f8:	mov	r8, #0
    96fc:	cmp	r0, #11
    9700:	str	sl, [sp, #20]
    9704:	str	r5, [sp, #16]
    9708:	bhi	aa5c <ReadUInt64Data+0x13b8>
    970c:	add	r1, pc, #4
    9710:	ldr	r0, [r1, r0, lsl #2]
    9714:	add	pc, r1, r0
    9718:	.word	0x00000030
    971c:	.word	0x00000078
    9720:	.word	0x000000c0
    9724:	.word	0x0000011c
    9728:	.word	0x00000178
    972c:	.word	0x000001d4
    9730:	.word	0x00000230
    9734:	.word	0x00001344
    9738:	.word	0x00000290
    973c:	.word	0x00001344
    9740:	.word	0x00001344
    9744:	.word	0x000002f0
    9748:	cmp	r6, #256	; 0x100
    974c:	bgt	9a74 <ReadUInt64Data+0x3d0>
    9750:	ldr	r3, [r5]
    9754:	add	r4, sp, #24
    9758:	mov	r0, r4
    975c:	mov	r1, sl
    9760:	mov	r2, r6
    9764:	bl	18d0 <fread@plt>
    9768:	mov	r8, r0
    976c:	cmp	r6, #1
    9770:	blt	abcc <ReadUInt64Data+0x1528>
    9774:	ldrsb	r0, [r4], #1
    9778:	asr	r1, r0, #31
    977c:	strd	r0, [r7]
    9780:	subs	r6, r6, #1
    9784:	add	r7, r7, #8
    9788:	bne	9774 <ReadUInt64Data+0xd0>
    978c:	b	abcc <ReadUInt64Data+0x1528>
    9790:	cmp	r6, #256	; 0x100
    9794:	bgt	9b40 <ReadUInt64Data+0x49c>
    9798:	ldr	r3, [r5]
    979c:	add	r4, sp, #24
    97a0:	mov	r0, r4
    97a4:	mov	r1, sl
    97a8:	mov	r2, r6
    97ac:	bl	18d0 <fread@plt>
    97b0:	mov	r8, r0
    97b4:	cmp	r6, #1
    97b8:	blt	abcc <ReadUInt64Data+0x1528>
    97bc:	mov	r1, #0
    97c0:	ldrb	r0, [r4], #1
    97c4:	strd	r0, [r7]
    97c8:	subs	r6, r6, #1
    97cc:	add	r7, r7, #8
    97d0:	bne	97c0 <ReadUInt64Data+0x11c>
    97d4:	b	abcc <ReadUInt64Data+0x1528>
    97d8:	ldr	r0, [r5, #20]
    97dc:	cmp	r0, #0
    97e0:	beq	9c10 <ReadUInt64Data+0x56c>
    97e4:	cmp	r6, #256	; 0x100
    97e8:	bgt	9e0c <ReadUInt64Data+0x768>
    97ec:	ldr	r3, [r5]
    97f0:	add	r4, sp, #24
    97f4:	mov	r0, r4
    97f8:	mov	r1, sl
    97fc:	mov	r2, r6
    9800:	bl	18d0 <fread@plt>
    9804:	mov	r8, r0
    9808:	cmp	r6, #1
    980c:	blt	abcc <ReadUInt64Data+0x1528>
    9810:	mov	r0, r4
    9814:	bl	1c50 <Mat_int16Swap>
    9818:	asr	r1, r0, #31
    981c:	strd	r0, [r7]
    9820:	subs	r6, r6, #1
    9824:	add	r7, r7, #8
    9828:	add	r4, r4, #2
    982c:	bne	9810 <ReadUInt64Data+0x16c>
    9830:	b	abcc <ReadUInt64Data+0x1528>
    9834:	ldr	r0, [r5, #20]
    9838:	cmp	r0, #0
    983c:	beq	9c58 <ReadUInt64Data+0x5b4>
    9840:	cmp	r6, #256	; 0x100
    9844:	bgt	9ef4 <ReadUInt64Data+0x850>
    9848:	ldr	r3, [r5]
    984c:	add	r4, sp, #24
    9850:	mov	r0, r4
    9854:	mov	r1, sl
    9858:	mov	r2, r6
    985c:	bl	18d0 <fread@plt>
    9860:	mov	r8, r0
    9864:	cmp	r6, #1
    9868:	blt	abcc <ReadUInt64Data+0x1528>
    986c:	mov	r5, #0
    9870:	mov	r0, r4
    9874:	bl	1c64 <Mat_uint16Swap>
    9878:	stm	r7, {r0, r5}
    987c:	subs	r6, r6, #1
    9880:	add	r7, r7, #8
    9884:	add	r4, r4, #2
    9888:	bne	9870 <ReadUInt64Data+0x1cc>
    988c:	b	abcc <ReadUInt64Data+0x1528>
    9890:	ldr	r0, [r5, #20]
    9894:	cmp	r0, #0
    9898:	beq	9ca0 <ReadUInt64Data+0x5fc>
    989c:	cmp	r6, #256	; 0x100
    98a0:	bgt	9fec <ReadUInt64Data+0x948>
    98a4:	ldr	r3, [r5]
    98a8:	add	r4, sp, #24
    98ac:	mov	r0, r4
    98b0:	mov	r1, sl
    98b4:	mov	r2, r6
    98b8:	bl	18d0 <fread@plt>
    98bc:	mov	r8, r0
    98c0:	cmp	r6, #1
    98c4:	blt	abcc <ReadUInt64Data+0x1528>
    98c8:	mov	r0, r4
    98cc:	bl	1c28 <Mat_int32Swap>
    98d0:	asr	r1, r0, #31
    98d4:	strd	r0, [r7]
    98d8:	subs	r6, r6, #1
    98dc:	add	r7, r7, #8
    98e0:	add	r4, r4, #4
    98e4:	bne	98c8 <ReadUInt64Data+0x224>
    98e8:	b	abcc <ReadUInt64Data+0x1528>
    98ec:	ldr	r0, [r5, #20]
    98f0:	cmp	r0, #0
    98f4:	beq	9ce8 <ReadUInt64Data+0x644>
    98f8:	cmp	r6, #256	; 0x100
    98fc:	bgt	a0d4 <ReadUInt64Data+0xa30>
    9900:	ldr	r3, [r5]
    9904:	add	r4, sp, #24
    9908:	mov	r0, r4
    990c:	mov	r1, sl
    9910:	mov	r2, r6
    9914:	bl	18d0 <fread@plt>
    9918:	mov	r8, r0
    991c:	cmp	r6, #1
    9920:	blt	abcc <ReadUInt64Data+0x1528>
    9924:	mov	r5, #0
    9928:	mov	r0, r4
    992c:	bl	1c3c <Mat_uint32Swap>
    9930:	stm	r7, {r0, r5}
    9934:	subs	r6, r6, #1
    9938:	add	r7, r7, #8
    993c:	add	r4, r4, #4
    9940:	bne	9928 <ReadUInt64Data+0x284>
    9944:	b	abcc <ReadUInt64Data+0x1528>
    9948:	ldr	r0, [r5, #20]
    994c:	cmp	r0, #0
    9950:	beq	9d30 <ReadUInt64Data+0x68c>
    9954:	cmp	r6, #256	; 0x100
    9958:	bgt	a1cc <ReadUInt64Data+0xb28>
    995c:	ldr	r3, [r5]
    9960:	add	r4, sp, #24
    9964:	mov	r0, r4
    9968:	mov	r1, sl
    996c:	mov	r2, r6
    9970:	bl	18d0 <fread@plt>
    9974:	mov	r8, r0
    9978:	cmp	r6, #1
    997c:	blt	abcc <ReadUInt64Data+0x1528>
    9980:	mov	r0, r4
    9984:	bl	1c7c <Mat_floatSwap>
    9988:	vmov	r0, s0
    998c:	bl	48e68 <__aeabi_f2ulz>
    9990:	strd	r0, [r7]
    9994:	subs	r6, r6, #1
    9998:	add	r7, r7, #8
    999c:	add	r4, r4, #4
    99a0:	bne	9980 <ReadUInt64Data+0x2dc>
    99a4:	b	abcc <ReadUInt64Data+0x1528>
    99a8:	ldr	r0, [r5, #20]
    99ac:	cmp	r0, #0
    99b0:	beq	9d78 <ReadUInt64Data+0x6d4>
    99b4:	cmp	r6, #256	; 0x100
    99b8:	bgt	a2bc <ReadUInt64Data+0xc18>
    99bc:	ldr	r3, [r5]
    99c0:	add	r4, sp, #24
    99c4:	mov	r0, r4
    99c8:	mov	r1, sl
    99cc:	mov	r2, r6
    99d0:	bl	18d0 <fread@plt>
    99d4:	mov	r8, r0
    99d8:	cmp	r6, #1
    99dc:	blt	abcc <ReadUInt64Data+0x1528>
    99e0:	mov	r0, r4
    99e4:	bl	1cc0 <Mat_doubleSwap>
    99e8:	vmov	r0, r1, d0
    99ec:	bl	48ea8 <__aeabi_d2ulz>
    99f0:	strd	r0, [r7]
    99f4:	subs	r6, r6, #1
    99f8:	add	r7, r7, #8
    99fc:	add	r4, r4, #8
    9a00:	bne	99e0 <ReadUInt64Data+0x33c>
    9a04:	b	abcc <ReadUInt64Data+0x1528>
    9a08:	ldr	r0, [r5, #20]
    9a0c:	cmp	r0, #0
    9a10:	beq	9dc8 <ReadUInt64Data+0x724>
    9a14:	cmp	r6, #256	; 0x100
    9a18:	bgt	a3a8 <ReadUInt64Data+0xd04>
    9a1c:	ldr	r3, [r5]
    9a20:	add	r4, sp, #24
    9a24:	mov	r0, r4
    9a28:	mov	r1, sl
    9a2c:	mov	r2, r6
    9a30:	bl	18d0 <fread@plt>
    9a34:	mov	r8, r0
    9a38:	cmp	r6, #1
    9a3c:	blt	aa5c <ReadUInt64Data+0x13b8>
    9a40:	str	r9, [sp]
    9a44:	mov	r9, r6
    9a48:	mov	r5, r6
    9a4c:	mov	r6, r7
    9a50:	mov	r0, r4
    9a54:	bl	1bbc <Mat_int64Swap>
    9a58:	strd	r0, [r6]
    9a5c:	subs	r5, r5, #1
    9a60:	add	r6, r6, #8
    9a64:	add	r4, r4, #8
    9a68:	bne	9a50 <ReadUInt64Data+0x3ac>
    9a6c:	mov	r6, r9
    9a70:	b	aa54 <ReadUInt64Data+0x13b0>
    9a74:	add	r1, r7, #2048	; 0x800
    9a78:	str	r6, [sp, #4]
    9a7c:	sub	r9, r6, #256	; 0x100
    9a80:	mov	r0, #0
    9a84:	add	r4, sp, #24
    9a88:	mov	r8, #0
    9a8c:	mov	sl, r0
    9a90:	mov	r6, r1
    9a94:	ldr	r3, [r5]
    9a98:	mov	r0, r4
    9a9c:	ldr	r1, [sp, #20]
    9aa0:	mov	r2, #256	; 0x100
    9aa4:	bl	18d0 <fread@plt>
    9aa8:	mov	r1, r7
    9aac:	mov	r2, #0
    9ab0:	add	r3, r4, r2
    9ab4:	ldrsb	r3, [r3]
    9ab8:	asr	r5, r3, #31
    9abc:	stm	r1, {r3, r5}
    9ac0:	add	r1, r1, #8
    9ac4:	add	r2, r2, #1
    9ac8:	cmp	r2, #256	; 0x100
    9acc:	bne	9ab0 <ReadUInt64Data+0x40c>
    9ad0:	add	r8, r0, r8
    9ad4:	add	r7, r7, #2048	; 0x800
    9ad8:	add	r1, r6, #2048	; 0x800
    9adc:	add	r0, sl, #256	; 0x100
    9ae0:	cmp	r0, r9
    9ae4:	ldr	r5, [sp, #16]
    9ae8:	blt	9a8c <ReadUInt64Data+0x3e8>
    9aec:	ldr	r1, [sp, #4]
    9af0:	cmp	r0, r1
    9af4:	bge	abc8 <ReadUInt64Data+0x1524>
    9af8:	sub	r7, r1, r0
    9afc:	ldr	r3, [r5]
    9b00:	add	r4, sp, #24
    9b04:	mov	r0, r4
    9b08:	ldr	r1, [sp, #20]
    9b0c:	mov	r2, r7
    9b10:	bl	18d0 <fread@plt>
    9b14:	add	r8, r0, r8
    9b18:	cmp	r7, #1
    9b1c:	blt	abc8 <ReadUInt64Data+0x1524>
    9b20:	sub	r0, r9, sl
    9b24:	ldrsb	r2, [r4], #1
    9b28:	asr	r3, r2, #31
    9b2c:	strd	r2, [r6]
    9b30:	add	r6, r6, #8
    9b34:	subs	r0, r0, #1
    9b38:	bne	9b24 <ReadUInt64Data+0x480>
    9b3c:	b	abc8 <ReadUInt64Data+0x1524>
    9b40:	add	r0, r7, #2048	; 0x800
    9b44:	str	r6, [sp, #4]
    9b48:	sub	r9, r6, #256	; 0x100
    9b4c:	mov	r5, #0
    9b50:	add	r4, sp, #24
    9b54:	mov	r1, #0
    9b58:	mov	r8, #0
    9b5c:	mov	sl, r1
    9b60:	mov	r6, r0
    9b64:	ldr	r0, [sp, #16]
    9b68:	ldr	r3, [r0]
    9b6c:	mov	r0, r4
    9b70:	ldr	r1, [sp, #20]
    9b74:	mov	r2, #256	; 0x100
    9b78:	bl	18d0 <fread@plt>
    9b7c:	mov	r1, r7
    9b80:	mov	r2, #0
    9b84:	ldrb	r3, [r4, r2]
    9b88:	stm	r1, {r3, r5}
    9b8c:	add	r1, r1, #8
    9b90:	add	r2, r2, #1
    9b94:	cmp	r2, #256	; 0x100
    9b98:	bne	9b84 <ReadUInt64Data+0x4e0>
    9b9c:	add	r8, r0, r8
    9ba0:	add	r7, r7, #2048	; 0x800
    9ba4:	add	r0, r6, #2048	; 0x800
    9ba8:	add	r1, sl, #256	; 0x100
    9bac:	cmp	r1, r9
    9bb0:	blt	9b5c <ReadUInt64Data+0x4b8>
    9bb4:	ldr	r0, [sp, #4]
    9bb8:	cmp	r1, r0
    9bbc:	bge	abc8 <ReadUInt64Data+0x1524>
    9bc0:	sub	r7, r0, r1
    9bc4:	ldr	r0, [sp, #16]
    9bc8:	ldr	r3, [r0]
    9bcc:	add	r4, sp, #24
    9bd0:	mov	r0, r4
    9bd4:	ldr	r1, [sp, #20]
    9bd8:	mov	r2, r7
    9bdc:	bl	18d0 <fread@plt>
    9be0:	add	r8, r0, r8
    9be4:	cmp	r7, #1
    9be8:	blt	abc8 <ReadUInt64Data+0x1524>
    9bec:	sub	r0, r9, sl
    9bf0:	mov	r1, #0
    9bf4:	ldrb	r2, [r4], #1
    9bf8:	str	r2, [r6]
    9bfc:	str	r1, [r6, #4]
    9c00:	add	r6, r6, #8
    9c04:	subs	r0, r0, #1
    9c08:	bne	9bf4 <ReadUInt64Data+0x550>
    9c0c:	b	abc8 <ReadUInt64Data+0x1524>
    9c10:	cmp	r6, #256	; 0x100
    9c14:	bgt	a4a0 <ReadUInt64Data+0xdfc>
    9c18:	ldr	r3, [r5]
    9c1c:	add	r4, sp, #24
    9c20:	mov	r0, r4
    9c24:	mov	r1, sl
    9c28:	mov	r2, r6
    9c2c:	bl	18d0 <fread@plt>
    9c30:	mov	r8, r0
    9c34:	cmp	r6, #1
    9c38:	blt	abcc <ReadUInt64Data+0x1528>
    9c3c:	ldrsh	r0, [r4], #2
    9c40:	asr	r1, r0, #31
    9c44:	strd	r0, [r7]
    9c48:	subs	r6, r6, #1
    9c4c:	add	r7, r7, #8
    9c50:	bne	9c3c <ReadUInt64Data+0x598>
    9c54:	b	abcc <ReadUInt64Data+0x1528>
    9c58:	cmp	r6, #256	; 0x100
    9c5c:	bgt	a56c <ReadUInt64Data+0xec8>
    9c60:	ldr	r3, [r5]
    9c64:	add	r4, sp, #24
    9c68:	mov	r0, r4
    9c6c:	mov	r1, sl
    9c70:	mov	r2, r6
    9c74:	bl	18d0 <fread@plt>
    9c78:	mov	r8, r0
    9c7c:	cmp	r6, #1
    9c80:	blt	abcc <ReadUInt64Data+0x1528>
    9c84:	mov	r1, #0
    9c88:	ldrh	r0, [r4], #2
    9c8c:	strd	r0, [r7]
    9c90:	subs	r6, r6, #1
    9c94:	add	r7, r7, #8
    9c98:	bne	9c88 <ReadUInt64Data+0x5e4>
    9c9c:	b	abcc <ReadUInt64Data+0x1528>
    9ca0:	cmp	r6, #256	; 0x100
    9ca4:	bgt	a640 <ReadUInt64Data+0xf9c>
    9ca8:	ldr	r3, [r5]
    9cac:	add	r4, sp, #24
    9cb0:	mov	r0, r4
    9cb4:	mov	r1, sl
    9cb8:	mov	r2, r6
    9cbc:	bl	18d0 <fread@plt>
    9cc0:	mov	r8, r0
    9cc4:	cmp	r6, #1
    9cc8:	blt	abcc <ReadUInt64Data+0x1528>
    9ccc:	ldr	r0, [r4], #4
    9cd0:	asr	r1, r0, #31
    9cd4:	strd	r0, [r7]
    9cd8:	subs	r6, r6, #1
    9cdc:	add	r7, r7, #8
    9ce0:	bne	9ccc <ReadUInt64Data+0x628>
    9ce4:	b	abcc <ReadUInt64Data+0x1528>
    9ce8:	cmp	r6, #256	; 0x100
    9cec:	bgt	a708 <ReadUInt64Data+0x1064>
    9cf0:	ldr	r3, [r5]
    9cf4:	add	r4, sp, #24
    9cf8:	mov	r0, r4
    9cfc:	mov	r1, sl
    9d00:	mov	r2, r6
    9d04:	bl	18d0 <fread@plt>
    9d08:	mov	r8, r0
    9d0c:	cmp	r6, #1
    9d10:	blt	abcc <ReadUInt64Data+0x1528>
    9d14:	mov	r1, #0
    9d18:	ldr	r0, [r4], #4
    9d1c:	strd	r0, [r7]
    9d20:	subs	r6, r6, #1
    9d24:	add	r7, r7, #8
    9d28:	bne	9d18 <ReadUInt64Data+0x674>
    9d2c:	b	abcc <ReadUInt64Data+0x1528>
    9d30:	cmp	r6, #256	; 0x100
    9d34:	bgt	a7d8 <ReadUInt64Data+0x1134>
    9d38:	ldr	r3, [r5]
    9d3c:	add	r4, sp, #24
    9d40:	mov	r0, r4
    9d44:	mov	r1, sl
    9d48:	mov	r2, r6
    9d4c:	bl	18d0 <fread@plt>
    9d50:	mov	r8, r0
    9d54:	cmp	r6, #1
    9d58:	blt	abcc <ReadUInt64Data+0x1528>
    9d5c:	ldr	r0, [r4], #4
    9d60:	bl	48e68 <__aeabi_f2ulz>
    9d64:	strd	r0, [r7]
    9d68:	subs	r6, r6, #1
    9d6c:	add	r7, r7, #8
    9d70:	bne	9d5c <ReadUInt64Data+0x6b8>
    9d74:	b	abcc <ReadUInt64Data+0x1528>
    9d78:	cmp	r6, #256	; 0x100
    9d7c:	bgt	a8b0 <ReadUInt64Data+0x120c>
    9d80:	ldr	r3, [r5]
    9d84:	add	r4, sp, #24
    9d88:	mov	r0, r4
    9d8c:	mov	r1, sl
    9d90:	mov	r2, r6
    9d94:	bl	18d0 <fread@plt>
    9d98:	mov	r8, r0
    9d9c:	cmp	r6, #1
    9da0:	blt	abcc <ReadUInt64Data+0x1528>
    9da4:	vldr	d16, [r4]
    9da8:	vmov	r0, r1, d16
    9dac:	bl	48ea8 <__aeabi_d2ulz>
    9db0:	strd	r0, [r7]
    9db4:	subs	r6, r6, #1
    9db8:	add	r7, r7, #8
    9dbc:	add	r4, r4, #8
    9dc0:	bne	9da4 <ReadUInt64Data+0x700>
    9dc4:	b	abcc <ReadUInt64Data+0x1528>
    9dc8:	cmp	r6, #256	; 0x100
    9dcc:	bgt	a998 <ReadUInt64Data+0x12f4>
    9dd0:	ldr	r3, [r5]
    9dd4:	add	r0, sp, #24
    9dd8:	mov	r1, sl
    9ddc:	mov	r2, r6
    9de0:	bl	18d0 <fread@plt>
    9de4:	mov	r8, r0
    9de8:	cmp	r6, #0
    9dec:	ble	aa5c <ReadUInt64Data+0x13b8>
    9df0:	lsl	r2, r6, #3
    9df4:	add	r1, sp, #24
    9df8:	mov	r0, r7
    9dfc:	bl	1834 <memcpy@plt>
    9e00:	cmp	r9, #13
    9e04:	beq	aa64 <ReadUInt64Data+0x13c0>
    9e08:	b	abcc <ReadUInt64Data+0x1528>
    9e0c:	add	r1, r7, #2048	; 0x800
    9e10:	str	r6, [sp, #4]
    9e14:	sub	r0, r6, #256	; 0x100
    9e18:	str	r0, [sp, #12]
    9e1c:	mov	r0, #0
    9e20:	mov	r8, #0
    9e24:	mov	sl, r0
    9e28:	mov	r9, r1
    9e2c:	ldr	r3, [r5]
    9e30:	add	r4, sp, #24
    9e34:	mov	r0, r4
    9e38:	ldr	r1, [sp, #20]
    9e3c:	mov	r2, #256	; 0x100
    9e40:	bl	18d0 <fread@plt>
    9e44:	mov	r6, r0
    9e48:	mov	r5, #0
    9e4c:	mov	r0, r4
    9e50:	bl	1c50 <Mat_int16Swap>
    9e54:	mov	r1, r7
    9e58:	str	r0, [r1, r5]!
    9e5c:	asr	r0, r0, #31
    9e60:	str	r0, [r1, #4]
    9e64:	add	r5, r5, #8
    9e68:	add	r4, r4, #2
    9e6c:	cmp	r5, #2048	; 0x800
    9e70:	bne	9e4c <ReadUInt64Data+0x7a8>
    9e74:	add	r8, r6, r8
    9e78:	add	r7, r7, #2048	; 0x800
    9e7c:	add	r1, r9, #2048	; 0x800
    9e80:	add	r0, sl, #256	; 0x100
    9e84:	ldr	r2, [sp, #12]
    9e88:	cmp	r0, r2
    9e8c:	ldr	r5, [sp, #16]
    9e90:	blt	9e24 <ReadUInt64Data+0x780>
    9e94:	ldr	r1, [sp, #4]
    9e98:	cmp	r0, r1
    9e9c:	bge	abc8 <ReadUInt64Data+0x1524>
    9ea0:	sub	r6, r1, r0
    9ea4:	ldr	r3, [r5]
    9ea8:	add	r4, sp, #24
    9eac:	mov	r0, r4
    9eb0:	ldr	r1, [sp, #20]
    9eb4:	mov	r2, r6
    9eb8:	bl	18d0 <fread@plt>
    9ebc:	add	r8, r0, r8
    9ec0:	cmp	r6, #1
    9ec4:	blt	abc8 <ReadUInt64Data+0x1524>
    9ec8:	ldr	r0, [sp, #12]
    9ecc:	sub	r5, r0, sl
    9ed0:	mov	r0, r4
    9ed4:	bl	1c50 <Mat_int16Swap>
    9ed8:	asr	r1, r0, #31
    9edc:	strd	r0, [r9]
    9ee0:	add	r9, r9, #8
    9ee4:	subs	r5, r5, #1
    9ee8:	add	r4, r4, #2
    9eec:	bne	9ed0 <ReadUInt64Data+0x82c>
    9ef0:	b	abc8 <ReadUInt64Data+0x1524>
    9ef4:	add	r0, r7, #2048	; 0x800
    9ef8:	str	r6, [sp, #4]
    9efc:	sub	r1, r6, #256	; 0x100
    9f00:	str	r1, [sp, #8]
    9f04:	mov	sl, #0
    9f08:	mov	r1, #0
    9f0c:	mov	r8, #0
    9f10:	str	r1, [sp, #12]
    9f14:	mov	r9, r0
    9f18:	ldr	r3, [r5]
    9f1c:	add	r4, sp, #24
    9f20:	mov	r0, r4
    9f24:	ldr	r1, [sp, #20]
    9f28:	mov	r2, #256	; 0x100
    9f2c:	bl	18d0 <fread@plt>
    9f30:	mov	r6, r0
    9f34:	mov	r5, #0
    9f38:	mov	r0, r4
    9f3c:	bl	1c64 <Mat_uint16Swap>
    9f40:	mov	r1, r7
    9f44:	str	r0, [r1, r5]!
    9f48:	str	sl, [r1, #4]
    9f4c:	add	r5, r5, #8
    9f50:	add	r4, r4, #2
    9f54:	cmp	r5, #2048	; 0x800
    9f58:	bne	9f38 <ReadUInt64Data+0x894>
    9f5c:	add	r8, r6, r8
    9f60:	add	r7, r7, #2048	; 0x800
    9f64:	add	r0, r9, #2048	; 0x800
    9f68:	ldr	r1, [sp, #12]
    9f6c:	add	r1, r1, #256	; 0x100
    9f70:	ldr	r2, [sp, #8]
    9f74:	cmp	r1, r2
    9f78:	ldr	r5, [sp, #16]
    9f7c:	blt	9f10 <ReadUInt64Data+0x86c>
    9f80:	ldr	r0, [sp, #4]
    9f84:	cmp	r1, r0
    9f88:	bge	abc8 <ReadUInt64Data+0x1524>
    9f8c:	sub	r6, r0, r1
    9f90:	ldr	r3, [r5]
    9f94:	add	r4, sp, #24
    9f98:	mov	r0, r4
    9f9c:	ldr	sl, [sp, #20]
    9fa0:	mov	r1, sl
    9fa4:	mov	r2, r6
    9fa8:	bl	18d0 <fread@plt>
    9fac:	add	r8, r0, r8
    9fb0:	cmp	r6, #1
    9fb4:	blt	abcc <ReadUInt64Data+0x1528>
    9fb8:	ldr	r0, [sp, #8]
    9fbc:	ldr	r1, [sp, #12]
    9fc0:	sub	r5, r0, r1
    9fc4:	mov	r7, #0
    9fc8:	mov	r0, r4
    9fcc:	bl	1c64 <Mat_uint16Swap>
    9fd0:	mov	r6, r0
    9fd4:	strd	r6, [r9]
    9fd8:	add	r9, r9, #8
    9fdc:	subs	r5, r5, #1
    9fe0:	add	r4, r4, #2
    9fe4:	bne	9fc8 <ReadUInt64Data+0x924>
    9fe8:	b	abcc <ReadUInt64Data+0x1528>
    9fec:	add	r1, r7, #2048	; 0x800
    9ff0:	str	r6, [sp, #4]
    9ff4:	sub	r0, r6, #256	; 0x100
    9ff8:	str	r0, [sp, #12]
    9ffc:	mov	r0, #0
    a000:	mov	r8, #0
    a004:	mov	sl, r0
    a008:	mov	r9, r1
    a00c:	ldr	r3, [r5]
    a010:	add	r4, sp, #24
    a014:	mov	r0, r4
    a018:	ldr	r1, [sp, #20]
    a01c:	mov	r2, #256	; 0x100
    a020:	bl	18d0 <fread@plt>
    a024:	mov	r6, r0
    a028:	mov	r5, #0
    a02c:	mov	r0, r4
    a030:	bl	1c28 <Mat_int32Swap>
    a034:	mov	r1, r7
    a038:	str	r0, [r1, r5]!
    a03c:	asr	r0, r0, #31
    a040:	str	r0, [r1, #4]
    a044:	add	r5, r5, #8
    a048:	add	r4, r4, #4
    a04c:	cmp	r5, #2048	; 0x800
    a050:	bne	a02c <ReadUInt64Data+0x988>
    a054:	add	r8, r6, r8
    a058:	add	r7, r7, #2048	; 0x800
    a05c:	add	r1, r9, #2048	; 0x800
    a060:	add	r0, sl, #256	; 0x100
    a064:	ldr	r2, [sp, #12]
    a068:	cmp	r0, r2
    a06c:	ldr	r5, [sp, #16]
    a070:	blt	a004 <ReadUInt64Data+0x960>
    a074:	ldr	r1, [sp, #4]
    a078:	cmp	r0, r1
    a07c:	bge	abc8 <ReadUInt64Data+0x1524>
    a080:	sub	r6, r1, r0
    a084:	ldr	r3, [r5]
    a088:	add	r4, sp, #24
    a08c:	mov	r0, r4
    a090:	ldr	r1, [sp, #20]
    a094:	mov	r2, r6
    a098:	bl	18d0 <fread@plt>
    a09c:	add	r8, r0, r8
    a0a0:	cmp	r6, #1
    a0a4:	blt	abc8 <ReadUInt64Data+0x1524>
    a0a8:	ldr	r0, [sp, #12]
    a0ac:	sub	r5, r0, sl
    a0b0:	mov	r0, r4
    a0b4:	bl	1c28 <Mat_int32Swap>
    a0b8:	asr	r1, r0, #31
    a0bc:	strd	r0, [r9]
    a0c0:	add	r9, r9, #8
    a0c4:	subs	r5, r5, #1
    a0c8:	add	r4, r4, #4
    a0cc:	bne	a0b0 <ReadUInt64Data+0xa0c>
    a0d0:	b	abc8 <ReadUInt64Data+0x1524>
    a0d4:	add	r0, r7, #2048	; 0x800
    a0d8:	str	r6, [sp, #4]
    a0dc:	sub	r1, r6, #256	; 0x100
    a0e0:	str	r1, [sp, #8]
    a0e4:	mov	sl, #0
    a0e8:	mov	r1, #0
    a0ec:	mov	r8, #0
    a0f0:	str	r1, [sp, #12]
    a0f4:	mov	r9, r0
    a0f8:	ldr	r3, [r5]
    a0fc:	add	r4, sp, #24
    a100:	mov	r0, r4
    a104:	ldr	r1, [sp, #20]
    a108:	mov	r2, #256	; 0x100
    a10c:	bl	18d0 <fread@plt>
    a110:	mov	r6, r0
    a114:	mov	r5, #0
    a118:	mov	r0, r4
    a11c:	bl	1c3c <Mat_uint32Swap>
    a120:	mov	r1, r7
    a124:	str	r0, [r1, r5]!
    a128:	str	sl, [r1, #4]
    a12c:	add	r5, r5, #8
    a130:	add	r4, r4, #4
    a134:	cmp	r5, #2048	; 0x800
    a138:	bne	a118 <ReadUInt64Data+0xa74>
    a13c:	add	r8, r6, r8
    a140:	add	r7, r7, #2048	; 0x800
    a144:	add	r0, r9, #2048	; 0x800
    a148:	ldr	r1, [sp, #12]
    a14c:	add	r1, r1, #256	; 0x100
    a150:	ldr	r2, [sp, #8]
    a154:	cmp	r1, r2
    a158:	ldr	r5, [sp, #16]
    a15c:	blt	a0f0 <ReadUInt64Data+0xa4c>
    a160:	ldr	r0, [sp, #4]
    a164:	cmp	r1, r0
    a168:	bge	abc8 <ReadUInt64Data+0x1524>
    a16c:	sub	r6, r0, r1
    a170:	ldr	r3, [r5]
    a174:	add	r4, sp, #24
    a178:	mov	r0, r4
    a17c:	ldr	sl, [sp, #20]
    a180:	mov	r1, sl
    a184:	mov	r2, r6
    a188:	bl	18d0 <fread@plt>
    a18c:	add	r8, r0, r8
    a190:	cmp	r6, #1
    a194:	blt	abcc <ReadUInt64Data+0x1528>
    a198:	ldr	r0, [sp, #8]
    a19c:	ldr	r1, [sp, #12]
    a1a0:	sub	r5, r0, r1
    a1a4:	mov	r7, #0
    a1a8:	mov	r0, r4
    a1ac:	bl	1c3c <Mat_uint32Swap>
    a1b0:	mov	r6, r0
    a1b4:	strd	r6, [r9]
    a1b8:	add	r9, r9, #8
    a1bc:	subs	r5, r5, #1
    a1c0:	add	r4, r4, #4
    a1c4:	bne	a1a8 <ReadUInt64Data+0xb04>
    a1c8:	b	abcc <ReadUInt64Data+0x1528>
    a1cc:	add	r1, r7, #2048	; 0x800
    a1d0:	str	r6, [sp, #4]
    a1d4:	sub	r0, r6, #256	; 0x100
    a1d8:	str	r0, [sp, #12]
    a1dc:	mov	r0, #0
    a1e0:	mov	r8, #0
    a1e4:	mov	sl, r0
    a1e8:	mov	r9, r1
    a1ec:	ldr	r3, [r5]
    a1f0:	add	r6, sp, #24
    a1f4:	mov	r0, r6
    a1f8:	ldr	r1, [sp, #20]
    a1fc:	mov	r2, #256	; 0x100
    a200:	bl	18d0 <fread@plt>
    a204:	mov	r4, r0
    a208:	mov	r5, #0
    a20c:	mov	r0, r6
    a210:	bl	1c7c <Mat_floatSwap>
    a214:	vmov	r0, s0
    a218:	bl	48e68 <__aeabi_f2ulz>
    a21c:	mov	r2, r7
    a220:	str	r0, [r2, r5]!
    a224:	str	r1, [r2, #4]
    a228:	add	r5, r5, #8
    a22c:	add	r6, r6, #4
    a230:	cmp	r5, #2048	; 0x800
    a234:	bne	a20c <ReadUInt64Data+0xb68>
    a238:	add	r8, r4, r8
    a23c:	add	r7, r7, #2048	; 0x800
    a240:	add	r1, r9, #2048	; 0x800
    a244:	add	r0, sl, #256	; 0x100
    a248:	ldr	r2, [sp, #12]
    a24c:	cmp	r0, r2
    a250:	ldr	r5, [sp, #16]
    a254:	blt	a1e4 <ReadUInt64Data+0xb40>
    a258:	ldr	r1, [sp, #4]
    a25c:	cmp	r0, r1
    a260:	bge	abc8 <ReadUInt64Data+0x1524>
    a264:	sub	r6, r1, r0
    a268:	ldr	r3, [r5]
    a26c:	add	r4, sp, #24
    a270:	mov	r0, r4
    a274:	ldr	r1, [sp, #20]
    a278:	mov	r2, r6
    a27c:	bl	18d0 <fread@plt>
    a280:	add	r8, r0, r8
    a284:	cmp	r6, #1
    a288:	blt	abc8 <ReadUInt64Data+0x1524>
    a28c:	ldr	r0, [sp, #12]
    a290:	sub	r5, r0, sl
    a294:	mov	r0, r4
    a298:	bl	1c7c <Mat_floatSwap>
    a29c:	vmov	r0, s0
    a2a0:	bl	48e68 <__aeabi_f2ulz>
    a2a4:	strd	r0, [r9]
    a2a8:	add	r9, r9, #8
    a2ac:	subs	r5, r5, #1
    a2b0:	add	r4, r4, #4
    a2b4:	bne	a294 <ReadUInt64Data+0xbf0>
    a2b8:	b	abc8 <ReadUInt64Data+0x1524>
    a2bc:	add	r1, r7, #2048	; 0x800
    a2c0:	str	r6, [sp, #4]
    a2c4:	sub	r0, r6, #256	; 0x100
    a2c8:	str	r0, [sp, #12]
    a2cc:	mov	r0, #0
    a2d0:	add	r4, sp, #24
    a2d4:	mov	r8, #0
    a2d8:	mov	sl, r0
    a2dc:	mov	r9, r1
    a2e0:	ldr	r3, [r5]
    a2e4:	mov	r0, r4
    a2e8:	ldr	r1, [sp, #20]
    a2ec:	mov	r2, #256	; 0x100
    a2f0:	bl	18d0 <fread@plt>
    a2f4:	mov	r6, r0
    a2f8:	mov	r5, #0
    a2fc:	add	r0, r4, r5
    a300:	bl	1cc0 <Mat_doubleSwap>
    a304:	vmov	r0, r1, d0
    a308:	bl	48ea8 <__aeabi_d2ulz>
    a30c:	mov	r2, r7
    a310:	str	r0, [r2, r5]!
    a314:	str	r1, [r2, #4]
    a318:	add	r5, r5, #8
    a31c:	cmp	r5, #2048	; 0x800
    a320:	bne	a2fc <ReadUInt64Data+0xc58>
    a324:	add	r8, r6, r8
    a328:	add	r7, r7, #2048	; 0x800
    a32c:	add	r1, r9, #2048	; 0x800
    a330:	add	r0, sl, #256	; 0x100
    a334:	ldr	r2, [sp, #12]
    a338:	cmp	r0, r2
    a33c:	ldr	r5, [sp, #16]
    a340:	blt	a2d8 <ReadUInt64Data+0xc34>
    a344:	ldr	r1, [sp, #4]
    a348:	cmp	r0, r1
    a34c:	bge	abc8 <ReadUInt64Data+0x1524>
    a350:	sub	r6, r1, r0
    a354:	ldr	r3, [r5]
    a358:	add	r4, sp, #24
    a35c:	mov	r0, r4
    a360:	ldr	r1, [sp, #20]
    a364:	mov	r2, r6
    a368:	bl	18d0 <fread@plt>
    a36c:	add	r8, r0, r8
    a370:	cmp	r6, #1
    a374:	blt	abc8 <ReadUInt64Data+0x1524>
    a378:	ldr	r0, [sp, #12]
    a37c:	sub	r5, r0, sl
    a380:	mov	r0, r4
    a384:	bl	1cc0 <Mat_doubleSwap>
    a388:	vmov	r0, r1, d0
    a38c:	bl	48ea8 <__aeabi_d2ulz>
    a390:	strd	r0, [r9]
    a394:	add	r9, r9, #8
    a398:	subs	r5, r5, #1
    a39c:	add	r4, r4, #8
    a3a0:	bne	a380 <ReadUInt64Data+0xcdc>
    a3a4:	b	abc8 <ReadUInt64Data+0x1524>
    a3a8:	str	r9, [sp]
    a3ac:	add	r1, r7, #2048	; 0x800
    a3b0:	str	r6, [sp, #4]
    a3b4:	sub	r0, r6, #256	; 0x100
    a3b8:	str	r0, [sp, #8]
    a3bc:	mov	r0, #0
    a3c0:	add	r4, sp, #24
    a3c4:	mov	r5, r7
    a3c8:	mov	r8, #0
    a3cc:	str	r0, [sp, #12]
    a3d0:	mov	r9, r1
    a3d4:	ldr	r0, [sp, #16]
    a3d8:	ldr	r3, [r0]
    a3dc:	mov	r0, r4
    a3e0:	mov	r1, sl
    a3e4:	mov	r2, #256	; 0x100
    a3e8:	bl	18d0 <fread@plt>
    a3ec:	mov	r6, r0
    a3f0:	mov	sl, #0
    a3f4:	add	r0, r4, sl
    a3f8:	bl	1bbc <Mat_int64Swap>
    a3fc:	mov	r2, r5
    a400:	str	r0, [r2, sl]!
    a404:	str	r1, [r2, #4]
    a408:	add	sl, sl, #8
    a40c:	cmp	sl, #2048	; 0x800
    a410:	bne	a3f4 <ReadUInt64Data+0xd50>
    a414:	add	r8, r6, r8
    a418:	add	r5, r5, #2048	; 0x800
    a41c:	add	r1, r9, #2048	; 0x800
    a420:	ldr	r0, [sp, #12]
    a424:	add	r0, r0, #256	; 0x100
    a428:	ldr	r2, [sp, #8]
    a42c:	cmp	r0, r2
    a430:	ldr	sl, [sp, #20]
    a434:	blt	a3cc <ReadUInt64Data+0xd28>
    a438:	ldr	r6, [sp, #4]
    a43c:	cmp	r0, r6
    a440:	bge	aa54 <ReadUInt64Data+0x13b0>
    a444:	sub	r6, r6, r0
    a448:	ldr	r5, [sp, #16]
    a44c:	ldr	r3, [r5]
    a450:	add	r4, sp, #24
    a454:	mov	r0, r4
    a458:	mov	r1, sl
    a45c:	mov	r2, r6
    a460:	bl	18d0 <fread@plt>
    a464:	add	r8, r0, r8
    a468:	cmp	r6, #1
    a46c:	blt	aa48 <ReadUInt64Data+0x13a4>
    a470:	ldr	r0, [sp, #8]
    a474:	ldr	r1, [sp, #12]
    a478:	sub	r5, r0, r1
    a47c:	mov	r0, r4
    a480:	bl	1bbc <Mat_int64Swap>
    a484:	strd	r0, [r9]
    a488:	add	r9, r9, #8
    a48c:	subs	r5, r5, #1
    a490:	add	r4, r4, #8
    a494:	bne	a47c <ReadUInt64Data+0xdd8>
    a498:	ldr	r6, [sp, #4]
    a49c:	b	aa54 <ReadUInt64Data+0x13b0>
    a4a0:	add	r1, r7, #2048	; 0x800
    a4a4:	str	r6, [sp, #4]
    a4a8:	sub	r9, r6, #256	; 0x100
    a4ac:	mov	r0, #0
    a4b0:	add	r4, sp, #24
    a4b4:	mov	r8, #0
    a4b8:	mov	sl, r0
    a4bc:	mov	r6, r1
    a4c0:	ldr	r3, [r5]
    a4c4:	mov	r0, r4
    a4c8:	ldr	r1, [sp, #20]
    a4cc:	mov	r2, #256	; 0x100
    a4d0:	bl	18d0 <fread@plt>
    a4d4:	mov	r1, r7
    a4d8:	mov	r2, #0
    a4dc:	add	r3, r4, r2
    a4e0:	ldrsh	r3, [r3]
    a4e4:	asr	r5, r3, #31
    a4e8:	stm	r1, {r3, r5}
    a4ec:	add	r1, r1, #8
    a4f0:	add	r2, r2, #2
    a4f4:	cmp	r2, #512	; 0x200
    a4f8:	bne	a4dc <ReadUInt64Data+0xe38>
    a4fc:	add	r8, r0, r8
    a500:	add	r7, r7, #2048	; 0x800
    a504:	add	r1, r6, #2048	; 0x800
    a508:	add	r0, sl, #256	; 0x100
    a50c:	cmp	r0, r9
    a510:	ldr	r5, [sp, #16]
    a514:	blt	a4b8 <ReadUInt64Data+0xe14>
    a518:	ldr	r1, [sp, #4]
    a51c:	cmp	r0, r1
    a520:	bge	abc8 <ReadUInt64Data+0x1524>
    a524:	sub	r7, r1, r0
    a528:	ldr	r3, [r5]
    a52c:	add	r4, sp, #24
    a530:	mov	r0, r4
    a534:	ldr	r1, [sp, #20]
    a538:	mov	r2, r7
    a53c:	bl	18d0 <fread@plt>
    a540:	add	r8, r0, r8
    a544:	cmp	r7, #1
    a548:	blt	abc8 <ReadUInt64Data+0x1524>
    a54c:	sub	r0, r9, sl
    a550:	ldrsh	r2, [r4], #2
    a554:	asr	r3, r2, #31
    a558:	strd	r2, [r6]
    a55c:	add	r6, r6, #8
    a560:	subs	r0, r0, #1
    a564:	bne	a550 <ReadUInt64Data+0xeac>
    a568:	b	abc8 <ReadUInt64Data+0x1524>
    a56c:	add	r0, r7, #2048	; 0x800
    a570:	str	r6, [sp, #4]
    a574:	sub	r9, r6, #256	; 0x100
    a578:	mov	r5, #0
    a57c:	add	r4, sp, #24
    a580:	mov	r1, #0
    a584:	mov	r8, #0
    a588:	mov	sl, r1
    a58c:	mov	r6, r0
    a590:	ldr	r0, [sp, #16]
    a594:	ldr	r3, [r0]
    a598:	mov	r0, r4
    a59c:	ldr	r1, [sp, #20]
    a5a0:	mov	r2, #256	; 0x100
    a5a4:	bl	18d0 <fread@plt>
    a5a8:	mov	r1, r7
    a5ac:	mov	r2, #0
    a5b0:	add	r3, r4, r2
    a5b4:	ldrh	r3, [r3]
    a5b8:	stm	r1, {r3, r5}
    a5bc:	add	r1, r1, #8
    a5c0:	add	r2, r2, #2
    a5c4:	cmp	r2, #512	; 0x200
    a5c8:	bne	a5b0 <ReadUInt64Data+0xf0c>
    a5cc:	add	r8, r0, r8
    a5d0:	add	r7, r7, #2048	; 0x800
    a5d4:	add	r0, r6, #2048	; 0x800
    a5d8:	add	r1, sl, #256	; 0x100
    a5dc:	cmp	r1, r9
    a5e0:	blt	a588 <ReadUInt64Data+0xee4>
    a5e4:	ldr	r0, [sp, #4]
    a5e8:	cmp	r1, r0
    a5ec:	bge	abc8 <ReadUInt64Data+0x1524>
    a5f0:	sub	r7, r0, r1
    a5f4:	ldr	r0, [sp, #16]
    a5f8:	ldr	r3, [r0]
    a5fc:	add	r4, sp, #24
    a600:	mov	r0, r4
    a604:	ldr	r1, [sp, #20]
    a608:	mov	r2, r7
    a60c:	bl	18d0 <fread@plt>
    a610:	add	r8, r0, r8
    a614:	cmp	r7, #1
    a618:	blt	abc8 <ReadUInt64Data+0x1524>
    a61c:	sub	r0, r9, sl
    a620:	mov	r1, #0
    a624:	ldrh	r2, [r4], #2
    a628:	str	r2, [r6]
    a62c:	str	r1, [r6, #4]
    a630:	add	r6, r6, #8
    a634:	subs	r0, r0, #1
    a638:	bne	a624 <ReadUInt64Data+0xf80>
    a63c:	b	abc8 <ReadUInt64Data+0x1524>
    a640:	add	r1, r7, #2048	; 0x800
    a644:	str	r6, [sp, #4]
    a648:	sub	r9, r6, #256	; 0x100
    a64c:	mov	r0, #0
    a650:	add	r4, sp, #24
    a654:	mov	r8, #0
    a658:	mov	sl, r0
    a65c:	mov	r6, r1
    a660:	ldr	r3, [r5]
    a664:	mov	r0, r4
    a668:	ldr	r1, [sp, #20]
    a66c:	mov	r2, #256	; 0x100
    a670:	bl	18d0 <fread@plt>
    a674:	mov	r1, r7
    a678:	mov	r2, #0
    a67c:	ldr	r3, [r4, r2, lsl #2]
    a680:	asr	r5, r3, #31
    a684:	stm	r1, {r3, r5}
    a688:	add	r1, r1, #8
    a68c:	add	r2, r2, #1
    a690:	cmp	r2, #256	; 0x100
    a694:	bne	a67c <ReadUInt64Data+0xfd8>
    a698:	add	r8, r0, r8
    a69c:	add	r7, r7, #2048	; 0x800
    a6a0:	add	r1, r6, #2048	; 0x800
    a6a4:	add	r0, sl, #256	; 0x100
    a6a8:	cmp	r0, r9
    a6ac:	ldr	r5, [sp, #16]
    a6b0:	blt	a658 <ReadUInt64Data+0xfb4>
    a6b4:	ldr	r1, [sp, #4]
    a6b8:	cmp	r0, r1
    a6bc:	bge	abc8 <ReadUInt64Data+0x1524>
    a6c0:	sub	r7, r1, r0
    a6c4:	ldr	r3, [r5]
    a6c8:	add	r4, sp, #24
    a6cc:	mov	r0, r4
    a6d0:	ldr	r1, [sp, #20]
    a6d4:	mov	r2, r7
    a6d8:	bl	18d0 <fread@plt>
    a6dc:	add	r8, r0, r8
    a6e0:	cmp	r7, #1
    a6e4:	blt	abc8 <ReadUInt64Data+0x1524>
    a6e8:	sub	r0, r9, sl
    a6ec:	ldr	r2, [r4], #4
    a6f0:	asr	r3, r2, #31
    a6f4:	strd	r2, [r6]
    a6f8:	add	r6, r6, #8
    a6fc:	subs	r0, r0, #1
    a700:	bne	a6ec <ReadUInt64Data+0x1048>
    a704:	b	abc8 <ReadUInt64Data+0x1524>
    a708:	add	r0, r7, #2048	; 0x800
    a70c:	str	r6, [sp, #4]
    a710:	sub	r9, r6, #256	; 0x100
    a714:	mov	r5, #0
    a718:	add	r4, sp, #24
    a71c:	mov	r1, #0
    a720:	mov	r8, #0
    a724:	mov	sl, r1
    a728:	mov	r6, r0
    a72c:	ldr	r0, [sp, #16]
    a730:	ldr	r3, [r0]
    a734:	mov	r0, r4
    a738:	ldr	r1, [sp, #20]
    a73c:	mov	r2, #256	; 0x100
    a740:	bl	18d0 <fread@plt>
    a744:	mov	r1, r7
    a748:	mov	r2, #0
    a74c:	ldr	r3, [r4, r2, lsl #2]
    a750:	stm	r1, {r3, r5}
    a754:	add	r1, r1, #8
    a758:	add	r2, r2, #1
    a75c:	cmp	r2, #256	; 0x100
    a760:	bne	a74c <ReadUInt64Data+0x10a8>
    a764:	add	r8, r0, r8
    a768:	add	r7, r7, #2048	; 0x800
    a76c:	add	r0, r6, #2048	; 0x800
    a770:	add	r1, sl, #256	; 0x100
    a774:	cmp	r1, r9
    a778:	blt	a724 <ReadUInt64Data+0x1080>
    a77c:	ldr	r0, [sp, #4]
    a780:	cmp	r1, r0
    a784:	bge	abc8 <ReadUInt64Data+0x1524>
    a788:	sub	r7, r0, r1
    a78c:	ldr	r0, [sp, #16]
    a790:	ldr	r3, [r0]
    a794:	add	r4, sp, #24
    a798:	mov	r0, r4
    a79c:	ldr	r1, [sp, #20]
    a7a0:	mov	r2, r7
    a7a4:	bl	18d0 <fread@plt>
    a7a8:	add	r8, r0, r8
    a7ac:	cmp	r7, #1
    a7b0:	blt	abc8 <ReadUInt64Data+0x1524>
    a7b4:	sub	r0, r9, sl
    a7b8:	mov	r1, #0
    a7bc:	ldr	r2, [r4], #4
    a7c0:	str	r2, [r6]
    a7c4:	str	r1, [r6, #4]
    a7c8:	add	r6, r6, #8
    a7cc:	subs	r0, r0, #1
    a7d0:	bne	a7bc <ReadUInt64Data+0x1118>
    a7d4:	b	abc8 <ReadUInt64Data+0x1524>
    a7d8:	add	r1, r7, #2048	; 0x800
    a7dc:	str	r6, [sp, #4]
    a7e0:	sub	r0, r6, #256	; 0x100
    a7e4:	str	r0, [sp, #12]
    a7e8:	mov	r0, #0
    a7ec:	mov	r8, #0
    a7f0:	mov	sl, r0
    a7f4:	mov	r4, r1
    a7f8:	ldr	r3, [r5]
    a7fc:	add	r9, sp, #24
    a800:	mov	r0, r9
    a804:	ldr	r1, [sp, #20]
    a808:	mov	r2, #256	; 0x100
    a80c:	bl	18d0 <fread@plt>
    a810:	mov	r6, r0
    a814:	mov	r5, #0
    a818:	ldr	r0, [r9], #4
    a81c:	bl	48e68 <__aeabi_f2ulz>
    a820:	mov	r2, r7
    a824:	str	r0, [r2, r5]!
    a828:	str	r1, [r2, #4]
    a82c:	add	r5, r5, #8
    a830:	cmp	r5, #2048	; 0x800
    a834:	bne	a818 <ReadUInt64Data+0x1174>
    a838:	add	r8, r6, r8
    a83c:	add	r7, r7, #2048	; 0x800
    a840:	add	r1, r4, #2048	; 0x800
    a844:	add	r0, sl, #256	; 0x100
    a848:	ldr	r2, [sp, #12]
    a84c:	cmp	r0, r2
    a850:	ldr	r5, [sp, #16]
    a854:	blt	a7f0 <ReadUInt64Data+0x114c>
    a858:	ldr	r1, [sp, #4]
    a85c:	cmp	r0, r1
    a860:	bge	abc8 <ReadUInt64Data+0x1524>
    a864:	sub	r6, r1, r0
    a868:	ldr	r3, [r5]
    a86c:	add	r7, sp, #24
    a870:	mov	r0, r7
    a874:	ldr	r1, [sp, #20]
    a878:	mov	r2, r6
    a87c:	bl	18d0 <fread@plt>
    a880:	add	r8, r0, r8
    a884:	cmp	r6, #1
    a888:	blt	abc8 <ReadUInt64Data+0x1524>
    a88c:	ldr	r0, [sp, #12]
    a890:	sub	r5, r0, sl
    a894:	ldr	r0, [r7], #4
    a898:	bl	48e68 <__aeabi_f2ulz>
    a89c:	strd	r0, [r4]
    a8a0:	add	r4, r4, #8
    a8a4:	subs	r5, r5, #1
    a8a8:	bne	a894 <ReadUInt64Data+0x11f0>
    a8ac:	b	abc8 <ReadUInt64Data+0x1524>
    a8b0:	add	r1, r7, #2048	; 0x800
    a8b4:	str	r6, [sp, #4]
    a8b8:	sub	r0, r6, #256	; 0x100
    a8bc:	str	r0, [sp, #12]
    a8c0:	mov	r0, #0
    a8c4:	add	r4, sp, #24
    a8c8:	mov	r8, #0
    a8cc:	mov	sl, r0
    a8d0:	mov	r9, r1
    a8d4:	ldr	r3, [r5]
    a8d8:	mov	r0, r4
    a8dc:	ldr	r1, [sp, #20]
    a8e0:	mov	r2, #256	; 0x100
    a8e4:	bl	18d0 <fread@plt>
    a8e8:	mov	r6, r0
    a8ec:	mov	r5, #0
    a8f0:	add	r0, r4, r5
    a8f4:	vldr	d16, [r0]
    a8f8:	vmov	r0, r1, d16
    a8fc:	bl	48ea8 <__aeabi_d2ulz>
    a900:	mov	r2, r7
    a904:	str	r0, [r2, r5]!
    a908:	str	r1, [r2, #4]
    a90c:	add	r5, r5, #8
    a910:	cmp	r5, #2048	; 0x800
    a914:	bne	a8f0 <ReadUInt64Data+0x124c>
    a918:	add	r8, r6, r8
    a91c:	add	r7, r7, #2048	; 0x800
    a920:	add	r1, r9, #2048	; 0x800
    a924:	add	r0, sl, #256	; 0x100
    a928:	ldr	r2, [sp, #12]
    a92c:	cmp	r0, r2
    a930:	ldr	r5, [sp, #16]
    a934:	blt	a8cc <ReadUInt64Data+0x1228>
    a938:	ldr	r1, [sp, #4]
    a93c:	cmp	r0, r1
    a940:	bge	abc8 <ReadUInt64Data+0x1524>
    a944:	sub	r6, r1, r0
    a948:	ldr	r3, [r5]
    a94c:	add	r4, sp, #24
    a950:	mov	r0, r4
    a954:	ldr	r1, [sp, #20]
    a958:	mov	r2, r6
    a95c:	bl	18d0 <fread@plt>
    a960:	add	r8, r0, r8
    a964:	cmp	r6, #1
    a968:	blt	abc8 <ReadUInt64Data+0x1524>
    a96c:	ldr	r0, [sp, #12]
    a970:	sub	r5, r0, sl
    a974:	vldr	d16, [r4]
    a978:	vmov	r0, r1, d16
    a97c:	bl	48ea8 <__aeabi_d2ulz>
    a980:	strd	r0, [r9]
    a984:	add	r9, r9, #8
    a988:	subs	r5, r5, #1
    a98c:	add	r4, r4, #8
    a990:	bne	a974 <ReadUInt64Data+0x12d0>
    a994:	b	abc8 <ReadUInt64Data+0x1524>
    a998:	str	r9, [sp]
    a99c:	lsl	r4, r6, #3
    a9a0:	str	r6, [sp, #4]
    a9a4:	mov	r5, sl
    a9a8:	sub	r0, r6, #256	; 0x100
    a9ac:	str	r0, [sp, #12]
    a9b0:	mov	r6, #0
    a9b4:	mov	r8, #0
    a9b8:	ldr	r0, [sp, #16]
    a9bc:	ldr	r3, [r0]
    a9c0:	add	sl, sp, #24
    a9c4:	mov	r0, sl
    a9c8:	mov	r1, r5
    a9cc:	mov	r2, #256	; 0x100
    a9d0:	bl	18d0 <fread@plt>
    a9d4:	mov	r9, r0
    a9d8:	add	r0, r7, r6, lsl #3
    a9dc:	mov	r1, sl
    a9e0:	mov	r2, #2048	; 0x800
    a9e4:	bl	1834 <memcpy@plt>
    a9e8:	add	r8, r9, r8
    a9ec:	sub	r4, r4, #2048	; 0x800
    a9f0:	add	r6, r6, #256	; 0x100
    a9f4:	ldr	r0, [sp, #12]
    a9f8:	cmp	r6, r0
    a9fc:	blt	a9b8 <ReadUInt64Data+0x1314>
    aa00:	mov	sl, r5
    aa04:	ldr	r0, [sp, #4]
    aa08:	cmp	r6, r0
    aa0c:	bge	aa50 <ReadUInt64Data+0x13ac>
    aa10:	sub	r9, r0, r6
    aa14:	ldr	r5, [sp, #16]
    aa18:	ldr	r3, [r5]
    aa1c:	add	r0, sp, #24
    aa20:	mov	r1, sl
    aa24:	mov	r2, r9
    aa28:	bl	18d0 <fread@plt>
    aa2c:	add	r8, r0, r8
    aa30:	cmp	r9, #0
    aa34:	ble	aa48 <ReadUInt64Data+0x13a4>
    aa38:	add	r0, r7, r6, lsl #3
    aa3c:	add	r1, sp, #24
    aa40:	mov	r2, r4
    aa44:	bl	1834 <memcpy@plt>
    aa48:	ldr	r6, [sp, #4]
    aa4c:	b	aa58 <ReadUInt64Data+0x13b4>
    aa50:	mov	r6, r0
    aa54:	ldr	r5, [sp, #16]
    aa58:	ldr	r9, [sp]
    aa5c:	cmp	r9, #13
    aa60:	bne	abcc <ReadUInt64Data+0x1528>
    aa64:	ldr	r0, [r5, #20]
    aa68:	cmp	r0, #0
    aa6c:	beq	aabc <ReadUInt64Data+0x1418>
    aa70:	cmp	r6, #256	; 0x100
    aa74:	bgt	aaf4 <ReadUInt64Data+0x1450>
    aa78:	ldr	r3, [r5]
    aa7c:	add	r4, sp, #24
    aa80:	mov	r0, r4
    aa84:	mov	r1, sl
    aa88:	mov	r2, r6
    aa8c:	bl	18d0 <fread@plt>
    aa90:	add	r8, r0, r8
    aa94:	cmp	r6, #1
    aa98:	blt	abcc <ReadUInt64Data+0x1528>
    aa9c:	mov	r0, r4
    aaa0:	bl	1c0c <Mat_uint64Swap>
    aaa4:	strd	r0, [r7]
    aaa8:	subs	r6, r6, #1
    aaac:	add	r7, r7, #8
    aab0:	add	r4, r4, #8
    aab4:	bne	aa9c <ReadUInt64Data+0x13f8>
    aab8:	b	abcc <ReadUInt64Data+0x1528>
    aabc:	cmp	r6, #256	; 0x100
    aac0:	bgt	abd8 <ReadUInt64Data+0x1534>
    aac4:	ldr	r3, [r5]
    aac8:	add	r0, sp, #24
    aacc:	mov	r1, sl
    aad0:	mov	r2, r6
    aad4:	bl	18d0 <fread@plt>
    aad8:	add	r8, r0, r8
    aadc:	cmp	r6, #0
    aae0:	ble	abcc <ReadUInt64Data+0x1528>
    aae4:	lsl	r2, r6, #3
    aae8:	add	r1, sp, #24
    aaec:	mov	r0, r7
    aaf0:	b	ac74 <ReadUInt64Data+0x15d0>
    aaf4:	add	r1, r7, #2048	; 0x800
    aaf8:	str	r6, [sp, #4]
    aafc:	sub	r0, r6, #256	; 0x100
    ab00:	str	r0, [sp, #12]
    ab04:	mov	r0, #0
    ab08:	add	r4, sp, #24
    ab0c:	mov	sl, r0
    ab10:	mov	r9, r1
    ab14:	ldr	r3, [r5]
    ab18:	mov	r0, r4
    ab1c:	ldr	r1, [sp, #20]
    ab20:	mov	r2, #256	; 0x100
    ab24:	bl	18d0 <fread@plt>
    ab28:	mov	r6, r0
    ab2c:	mov	r5, #0
    ab30:	add	r0, r4, r5
    ab34:	bl	1c0c <Mat_uint64Swap>
    ab38:	mov	r2, r7
    ab3c:	str	r0, [r2, r5]!
    ab40:	str	r1, [r2, #4]
    ab44:	add	r5, r5, #8
    ab48:	cmp	r5, #2048	; 0x800
    ab4c:	bne	ab30 <ReadUInt64Data+0x148c>
    ab50:	add	r8, r6, r8
    ab54:	add	r7, r7, #2048	; 0x800
    ab58:	add	r1, r9, #2048	; 0x800
    ab5c:	add	r0, sl, #256	; 0x100
    ab60:	ldr	r2, [sp, #12]
    ab64:	cmp	r0, r2
    ab68:	ldr	r5, [sp, #16]
    ab6c:	blt	ab0c <ReadUInt64Data+0x1468>
    ab70:	ldr	r1, [sp, #4]
    ab74:	cmp	r0, r1
    ab78:	bge	abc8 <ReadUInt64Data+0x1524>
    ab7c:	sub	r6, r1, r0
    ab80:	ldr	r3, [r5]
    ab84:	add	r4, sp, #24
    ab88:	mov	r0, r4
    ab8c:	ldr	r1, [sp, #20]
    ab90:	mov	r2, r6
    ab94:	bl	18d0 <fread@plt>
    ab98:	add	r8, r0, r8
    ab9c:	cmp	r6, #1
    aba0:	blt	abc8 <ReadUInt64Data+0x1524>
    aba4:	ldr	r0, [sp, #12]
    aba8:	sub	r5, r0, sl
    abac:	mov	r0, r4
    abb0:	bl	1c0c <Mat_uint64Swap>
    abb4:	strd	r0, [r9]
    abb8:	add	r9, r9, #8
    abbc:	subs	r5, r5, #1
    abc0:	add	r4, r4, #8
    abc4:	bne	abac <ReadUInt64Data+0x1508>
    abc8:	ldr	sl, [sp, #20]
    abcc:	mul	r0, r8, sl
    abd0:	sub	sp, fp, #28
    abd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    abd8:	lsl	r4, r6, #3
    abdc:	str	r6, [sp, #4]
    abe0:	sub	r0, r6, #256	; 0x100
    abe4:	str	r0, [sp, #12]
    abe8:	mov	r6, #0
    abec:	add	r9, sp, #24
    abf0:	ldr	r3, [r5]
    abf4:	mov	r0, r9
    abf8:	mov	r1, sl
    abfc:	mov	r2, #256	; 0x100
    ac00:	bl	18d0 <fread@plt>
    ac04:	mov	sl, r0
    ac08:	add	r0, r7, r6, lsl #3
    ac0c:	mov	r1, r9
    ac10:	mov	r2, #2048	; 0x800
    ac14:	bl	1834 <memcpy@plt>
    ac18:	add	r8, sl, r8
    ac1c:	ldr	sl, [sp, #20]
    ac20:	sub	r4, r4, #2048	; 0x800
    ac24:	add	r6, r6, #256	; 0x100
    ac28:	ldr	r0, [sp, #12]
    ac2c:	cmp	r6, r0
    ac30:	blt	abf0 <ReadUInt64Data+0x154c>
    ac34:	ldr	r0, [sp, #4]
    ac38:	cmp	r6, r0
    ac3c:	bge	abcc <ReadUInt64Data+0x1528>
    ac40:	sub	r5, r0, r6
    ac44:	ldr	r0, [sp, #16]
    ac48:	ldr	r3, [r0]
    ac4c:	add	r0, sp, #24
    ac50:	mov	r1, sl
    ac54:	mov	r2, r5
    ac58:	bl	18d0 <fread@plt>
    ac5c:	add	r8, r0, r8
    ac60:	cmp	r5, #0
    ac64:	ble	abcc <ReadUInt64Data+0x1528>
    ac68:	add	r0, r7, r6, lsl #3
    ac6c:	add	r1, sp, #24
    ac70:	mov	r2, r4
    ac74:	bl	1834 <memcpy@plt>
    ac78:	b	abcc <ReadUInt64Data+0x1528>

0000ac7c <ReadCompressedUInt64Data>:
    ac7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ac80:	add	fp, sp, #28
    ac84:	sub	sp, sp, #20
    ac88:	mov	r7, r0
    ac8c:	mov	r0, #0
    ac90:	cmp	r1, #0
    ac94:	beq	aca8 <ReadCompressedUInt64Data+0x2c>
    ac98:	cmp	r7, #0
    ac9c:	movne	r5, r2
    aca0:	cmpne	r2, #0
    aca4:	bne	acb0 <ReadCompressedUInt64Data+0x34>
    aca8:	sub	sp, fp, #28
    acac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    acb0:	mov	r4, r3
    acb4:	mov	r8, r1
    acb8:	ldr	sl, [fp, #8]
    acbc:	mov	r0, r3
    acc0:	bl	193c <Mat_SizeOf@plt>
    acc4:	mov	r6, r0
    acc8:	sub	r0, r4, #1
    accc:	cmp	r0, #12
    acd0:	bhi	b244 <ReadCompressedUInt64Data+0x5c8>
    acd4:	add	r1, pc, #4
    acd8:	ldr	r0, [r1, r0, lsl #2]
    acdc:	add	pc, r1, r0
    ace0:	.word	0x00000034
    ace4:	.word	0x00000074
    ace8:	.word	0x000000c0
    acec:	.word	0x00000110
    acf0:	.word	0x00000160
    acf4:	.word	0x000001b0
    acf8:	.word	0x00000200
    acfc:	.word	0x00000564
    ad00:	.word	0x00000254
    ad04:	.word	0x00000564
    ad08:	.word	0x00000564
    ad0c:	.word	0x000002a8
    ad10:	.word	0x000004dc
    ad14:	cmp	sl, #1
    ad18:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    ad1c:	add	r9, sp, #8
    ad20:	mov	r4, sl
    ad24:	mov	r0, r7
    ad28:	mov	r1, r8
    ad2c:	mov	r2, r9
    ad30:	mov	r3, r6
    ad34:	bl	31e4 <InflateData>
    ad38:	ldrsb	r0, [sp, #8]
    ad3c:	asr	r1, r0, #31
    ad40:	strd	r0, [r5]
    ad44:	subs	r4, r4, #1
    ad48:	add	r5, r5, #8
    ad4c:	bne	ad24 <ReadCompressedUInt64Data+0xa8>
    ad50:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    ad54:	cmp	sl, #1
    ad58:	mov	sl, r6
    ad5c:	blt	ad94 <ReadCompressedUInt64Data+0x118>
    ad60:	add	r4, sp, #8
    ad64:	mov	r9, #0
    ad68:	ldr	r6, [fp, #8]
    ad6c:	mov	r0, r7
    ad70:	mov	r1, r8
    ad74:	mov	r2, r4
    ad78:	mov	r3, sl
    ad7c:	bl	31e4 <InflateData>
    ad80:	ldrb	r0, [sp, #8]
    ad84:	stm	r5, {r0, r9}
    ad88:	subs	r6, r6, #1
    ad8c:	add	r5, r5, #8
    ad90:	bne	ad6c <ReadCompressedUInt64Data+0xf0>
    ad94:	mov	r6, sl
    ad98:	ldr	sl, [fp, #8]
    ad9c:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    ada0:	ldr	r0, [r7, #20]
    ada4:	cmp	r0, #0
    ada8:	beq	afdc <ReadCompressedUInt64Data+0x360>
    adac:	cmp	sl, #1
    adb0:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    adb4:	add	r9, sp, #8
    adb8:	mov	r4, sl
    adbc:	mov	r0, r7
    adc0:	mov	r1, r8
    adc4:	mov	r2, r9
    adc8:	mov	r3, r6
    adcc:	bl	31e4 <InflateData>
    add0:	mov	r0, r9
    add4:	bl	1c50 <Mat_int16Swap>
    add8:	asr	r1, r0, #31
    addc:	strd	r0, [r5]
    ade0:	subs	r4, r4, #1
    ade4:	add	r5, r5, #8
    ade8:	bne	adbc <ReadCompressedUInt64Data+0x140>
    adec:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    adf0:	ldr	r0, [r7, #20]
    adf4:	cmp	r0, #0
    adf8:	beq	b01c <ReadCompressedUInt64Data+0x3a0>
    adfc:	cmp	sl, #1
    ae00:	blt	b0d8 <ReadCompressedUInt64Data+0x45c>
    ae04:	add	sl, sp, #8
    ae08:	mov	r9, #0
    ae0c:	ldr	r4, [fp, #8]
    ae10:	mov	r0, r7
    ae14:	mov	r1, r8
    ae18:	mov	r2, sl
    ae1c:	mov	r3, r6
    ae20:	bl	31e4 <InflateData>
    ae24:	mov	r0, sl
    ae28:	bl	1c64 <Mat_uint16Swap>
    ae2c:	stm	r5, {r0, r9}
    ae30:	subs	r4, r4, #1
    ae34:	add	r5, r5, #8
    ae38:	bne	ae10 <ReadCompressedUInt64Data+0x194>
    ae3c:	b	b0d8 <ReadCompressedUInt64Data+0x45c>
    ae40:	ldr	r0, [r7, #20]
    ae44:	cmp	r0, #0
    ae48:	beq	b05c <ReadCompressedUInt64Data+0x3e0>
    ae4c:	cmp	sl, #1
    ae50:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    ae54:	add	r9, sp, #8
    ae58:	mov	r4, sl
    ae5c:	mov	r0, r7
    ae60:	mov	r1, r8
    ae64:	mov	r2, r9
    ae68:	mov	r3, r6
    ae6c:	bl	31e4 <InflateData>
    ae70:	mov	r0, r9
    ae74:	bl	1c28 <Mat_int32Swap>
    ae78:	asr	r1, r0, #31
    ae7c:	strd	r0, [r5]
    ae80:	subs	r4, r4, #1
    ae84:	add	r5, r5, #8
    ae88:	bne	ae5c <ReadCompressedUInt64Data+0x1e0>
    ae8c:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    ae90:	ldr	r0, [r7, #20]
    ae94:	cmp	r0, #0
    ae98:	beq	b09c <ReadCompressedUInt64Data+0x420>
    ae9c:	cmp	sl, #1
    aea0:	blt	b0d8 <ReadCompressedUInt64Data+0x45c>
    aea4:	add	sl, sp, #8
    aea8:	mov	r9, #0
    aeac:	ldr	r4, [fp, #8]
    aeb0:	mov	r0, r7
    aeb4:	mov	r1, r8
    aeb8:	mov	r2, sl
    aebc:	mov	r3, r6
    aec0:	bl	31e4 <InflateData>
    aec4:	mov	r0, sl
    aec8:	bl	1c3c <Mat_uint32Swap>
    aecc:	stm	r5, {r0, r9}
    aed0:	subs	r4, r4, #1
    aed4:	add	r5, r5, #8
    aed8:	bne	aeb0 <ReadCompressedUInt64Data+0x234>
    aedc:	b	b0d8 <ReadCompressedUInt64Data+0x45c>
    aee0:	ldr	r0, [r7, #20]
    aee4:	cmp	r0, #0
    aee8:	beq	b0e0 <ReadCompressedUInt64Data+0x464>
    aeec:	cmp	sl, #1
    aef0:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    aef4:	add	r9, sp, #8
    aef8:	mov	r4, sl
    aefc:	mov	r0, r7
    af00:	mov	r1, r8
    af04:	mov	r2, r9
    af08:	mov	r3, r6
    af0c:	bl	31e4 <InflateData>
    af10:	mov	r0, r9
    af14:	bl	1c7c <Mat_floatSwap>
    af18:	vmov	r0, s0
    af1c:	bl	48e68 <__aeabi_f2ulz>
    af20:	strd	r0, [r5]
    af24:	subs	r4, r4, #1
    af28:	add	r5, r5, #8
    af2c:	bne	aefc <ReadCompressedUInt64Data+0x280>
    af30:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    af34:	ldr	r0, [r7, #20]
    af38:	cmp	r0, #0
    af3c:	beq	b120 <ReadCompressedUInt64Data+0x4a4>
    af40:	cmp	sl, #1
    af44:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    af48:	add	r9, sp, #8
    af4c:	mov	r4, sl
    af50:	mov	r0, r7
    af54:	mov	r1, r8
    af58:	mov	r2, r9
    af5c:	mov	r3, r6
    af60:	bl	31e4 <InflateData>
    af64:	mov	r0, r9
    af68:	bl	1cc0 <Mat_doubleSwap>
    af6c:	vmov	r0, r1, d0
    af70:	bl	48ea8 <__aeabi_d2ulz>
    af74:	strd	r0, [r5]
    af78:	subs	r4, r4, #1
    af7c:	add	r5, r5, #8
    af80:	bne	af50 <ReadCompressedUInt64Data+0x2d4>
    af84:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    af88:	ldr	r0, [r7, #20]
    af8c:	cmp	r0, #0
    af90:	beq	b164 <ReadCompressedUInt64Data+0x4e8>
    af94:	cmp	sl, #1
    af98:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    af9c:	str	r4, [sp]
    afa0:	add	r4, sp, #8
    afa4:	mov	r9, r5
    afa8:	str	r6, [sp, #4]
    afac:	mov	r0, r7
    afb0:	mov	r1, r8
    afb4:	mov	r2, r4
    afb8:	ldr	r3, [sp, #4]
    afbc:	bl	31e4 <InflateData>
    afc0:	mov	r0, r4
    afc4:	bl	1bbc <Mat_int64Swap>
    afc8:	strd	r0, [r9]
    afcc:	subs	sl, sl, #1
    afd0:	add	r9, r9, #8
    afd4:	bne	afac <ReadCompressedUInt64Data+0x330>
    afd8:	b	b1a8 <ReadCompressedUInt64Data+0x52c>
    afdc:	cmp	sl, #1
    afe0:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    afe4:	add	r9, sp, #8
    afe8:	mov	r4, sl
    afec:	mov	r0, r7
    aff0:	mov	r1, r8
    aff4:	mov	r2, r9
    aff8:	mov	r3, r6
    affc:	bl	31e4 <InflateData>
    b000:	ldrsh	r0, [sp, #8]
    b004:	asr	r1, r0, #31
    b008:	strd	r0, [r5]
    b00c:	subs	r4, r4, #1
    b010:	add	r5, r5, #8
    b014:	bne	afec <ReadCompressedUInt64Data+0x370>
    b018:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    b01c:	cmp	sl, #1
    b020:	blt	b0d8 <ReadCompressedUInt64Data+0x45c>
    b024:	add	sl, sp, #8
    b028:	mov	r9, #0
    b02c:	ldr	r4, [fp, #8]
    b030:	mov	r0, r7
    b034:	mov	r1, r8
    b038:	mov	r2, sl
    b03c:	mov	r3, r6
    b040:	bl	31e4 <InflateData>
    b044:	ldrh	r0, [sp, #8]
    b048:	stm	r5, {r0, r9}
    b04c:	subs	r4, r4, #1
    b050:	add	r5, r5, #8
    b054:	bne	b030 <ReadCompressedUInt64Data+0x3b4>
    b058:	b	b0d8 <ReadCompressedUInt64Data+0x45c>
    b05c:	cmp	sl, #1
    b060:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    b064:	add	r9, sp, #8
    b068:	mov	r4, sl
    b06c:	mov	r0, r7
    b070:	mov	r1, r8
    b074:	mov	r2, r9
    b078:	mov	r3, r6
    b07c:	bl	31e4 <InflateData>
    b080:	ldr	r0, [sp, #8]
    b084:	asr	r1, r0, #31
    b088:	strd	r0, [r5]
    b08c:	subs	r4, r4, #1
    b090:	add	r5, r5, #8
    b094:	bne	b06c <ReadCompressedUInt64Data+0x3f0>
    b098:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    b09c:	cmp	sl, #1
    b0a0:	blt	b0d8 <ReadCompressedUInt64Data+0x45c>
    b0a4:	add	sl, sp, #8
    b0a8:	mov	r9, #0
    b0ac:	ldr	r4, [fp, #8]
    b0b0:	mov	r0, r7
    b0b4:	mov	r1, r8
    b0b8:	mov	r2, sl
    b0bc:	mov	r3, r6
    b0c0:	bl	31e4 <InflateData>
    b0c4:	ldr	r0, [sp, #8]
    b0c8:	stm	r5, {r0, r9}
    b0cc:	subs	r4, r4, #1
    b0d0:	add	r5, r5, #8
    b0d4:	bne	b0b0 <ReadCompressedUInt64Data+0x434>
    b0d8:	ldr	sl, [fp, #8]
    b0dc:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    b0e0:	cmp	sl, #1
    b0e4:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    b0e8:	add	r9, sp, #8
    b0ec:	mov	r4, sl
    b0f0:	mov	r0, r7
    b0f4:	mov	r1, r8
    b0f8:	mov	r2, r9
    b0fc:	mov	r3, r6
    b100:	bl	31e4 <InflateData>
    b104:	ldr	r0, [sp, #8]
    b108:	bl	48e68 <__aeabi_f2ulz>
    b10c:	strd	r0, [r5]
    b110:	subs	r4, r4, #1
    b114:	add	r5, r5, #8
    b118:	bne	b0f0 <ReadCompressedUInt64Data+0x474>
    b11c:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    b120:	cmp	sl, #1
    b124:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    b128:	add	r9, sp, #8
    b12c:	mov	r4, sl
    b130:	mov	r0, r7
    b134:	mov	r1, r8
    b138:	mov	r2, r9
    b13c:	mov	r3, r6
    b140:	bl	31e4 <InflateData>
    b144:	vldr	d16, [sp, #8]
    b148:	vmov	r0, r1, d16
    b14c:	bl	48ea8 <__aeabi_d2ulz>
    b150:	strd	r0, [r5]
    b154:	subs	r4, r4, #1
    b158:	add	r5, r5, #8
    b15c:	bne	b130 <ReadCompressedUInt64Data+0x4b4>
    b160:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    b164:	cmp	sl, #1
    b168:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    b16c:	str	r4, [sp]
    b170:	add	r9, sp, #8
    b174:	str	r6, [sp, #4]
    b178:	mov	r6, r5
    b17c:	mov	r0, r7
    b180:	mov	r1, r8
    b184:	mov	r2, r9
    b188:	ldr	r3, [sp, #4]
    b18c:	bl	31e4 <InflateData>
    b190:	ldr	r0, [sp, #8]
    b194:	ldr	r1, [sp, #12]
    b198:	strd	r0, [r6]
    b19c:	subs	sl, sl, #1
    b1a0:	add	r6, r6, #8
    b1a4:	bne	b17c <ReadCompressedUInt64Data+0x500>
    b1a8:	ldr	r0, [sp]
    b1ac:	cmp	r0, #13
    b1b0:	ldr	sl, [fp, #8]
    b1b4:	ldr	r6, [sp, #4]
    b1b8:	bne	b244 <ReadCompressedUInt64Data+0x5c8>
    b1bc:	ldr	r0, [r7, #20]
    b1c0:	cmp	r0, #0
    b1c4:	beq	b208 <ReadCompressedUInt64Data+0x58c>
    b1c8:	cmp	sl, #1
    b1cc:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    b1d0:	add	r9, sp, #8
    b1d4:	mov	r4, sl
    b1d8:	mov	r0, r7
    b1dc:	mov	r1, r8
    b1e0:	mov	r2, r9
    b1e4:	mov	r3, r6
    b1e8:	bl	31e4 <InflateData>
    b1ec:	mov	r0, r9
    b1f0:	bl	1c0c <Mat_uint64Swap>
    b1f4:	strd	r0, [r5]
    b1f8:	subs	r4, r4, #1
    b1fc:	add	r5, r5, #8
    b200:	bne	b1d8 <ReadCompressedUInt64Data+0x55c>
    b204:	b	b244 <ReadCompressedUInt64Data+0x5c8>
    b208:	cmp	sl, #1
    b20c:	blt	b244 <ReadCompressedUInt64Data+0x5c8>
    b210:	add	r9, sp, #8
    b214:	mov	r4, sl
    b218:	mov	r0, r7
    b21c:	mov	r1, r8
    b220:	mov	r2, r9
    b224:	mov	r3, r6
    b228:	bl	31e4 <InflateData>
    b22c:	ldr	r0, [sp, #8]
    b230:	ldr	r1, [sp, #12]
    b234:	strd	r0, [r5]
    b238:	subs	r4, r4, #1
    b23c:	add	r5, r5, #8
    b240:	bne	b218 <ReadCompressedUInt64Data+0x59c>
    b244:	mul	r0, r6, sl
    b248:	sub	sp, fp, #28
    b24c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b250 <ReadInt32Data>:
    b250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b254:	add	fp, sp, #28
    b258:	sub	sp, sp, #36	; 0x24
    b25c:	sub	sp, sp, #2048	; 0x800
    b260:	mov	r5, r0
    b264:	mov	r0, #0
    b268:	cmp	r5, #0
    b26c:	beq	b284 <ReadInt32Data+0x34>
    b270:	mov	r9, r1
    b274:	cmp	r1, #0
    b278:	ldrne	r1, [r5]
    b27c:	cmpne	r1, #0
    b280:	bne	b28c <ReadInt32Data+0x3c>
    b284:	sub	sp, fp, #28
    b288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b28c:	mov	r6, r3
    b290:	mov	sl, r2
    b294:	mov	r0, r2
    b298:	bl	193c <Mat_SizeOf@plt>
    b29c:	mov	r7, r0
    b2a0:	sub	r0, sl, #1
    b2a4:	mov	r1, #0
    b2a8:	str	r1, [sp, #20]
    b2ac:	cmp	r0, #11
    b2b0:	str	r7, [sp, #24]
    b2b4:	str	r5, [sp, #28]
    b2b8:	bhi	c484 <ReadInt32Data+0x1234>
    b2bc:	add	r1, pc, #4
    b2c0:	ldr	r0, [r1, r0, lsl #2]
    b2c4:	add	pc, r1, r0
    b2c8:	.word	0x00000030
    b2cc:	.word	0x00000070
    b2d0:	.word	0x000000b0
    b2d4:	.word	0x00000104
    b2d8:	.word	0x00000158
    b2dc:	.word	0x000001ac
    b2e0:	.word	0x00000200
    b2e4:	.word	0x000011bc
    b2e8:	.word	0x0000025c
    b2ec:	.word	0x000011bc
    b2f0:	.word	0x000011bc
    b2f4:	.word	0x000002b8
    b2f8:	cmp	r6, #256	; 0x100
    b2fc:	bgt	b5ec <ReadInt32Data+0x39c>
    b300:	ldr	r3, [r5]
    b304:	add	r4, sp, #32
    b308:	mov	r0, r4
    b30c:	mov	r1, r7
    b310:	mov	r2, r6
    b314:	bl	18d0 <fread@plt>
    b318:	mov	r5, r0
    b31c:	cmp	r6, #1
    b320:	blt	c6c8 <ReadInt32Data+0x1478>
    b324:	ldrsb	r0, [r4], #1
    b328:	str	r0, [r9], #4
    b32c:	subs	r6, r6, #1
    b330:	bne	b324 <ReadInt32Data+0xd4>
    b334:	b	c6c8 <ReadInt32Data+0x1478>
    b338:	cmp	r6, #256	; 0x100
    b33c:	bgt	b6a8 <ReadInt32Data+0x458>
    b340:	ldr	r3, [r5]
    b344:	add	r4, sp, #32
    b348:	mov	r0, r4
    b34c:	mov	r1, r7
    b350:	mov	r2, r6
    b354:	bl	18d0 <fread@plt>
    b358:	mov	r5, r0
    b35c:	cmp	r6, #1
    b360:	blt	c6c8 <ReadInt32Data+0x1478>
    b364:	ldrb	r0, [r4], #1
    b368:	str	r0, [r9], #4
    b36c:	subs	r6, r6, #1
    b370:	bne	b364 <ReadInt32Data+0x114>
    b374:	b	c6c8 <ReadInt32Data+0x1478>
    b378:	ldr	r0, [r5, #20]
    b37c:	cmp	r0, #0
    b380:	beq	b760 <ReadInt32Data+0x510>
    b384:	cmp	r6, #256	; 0x100
    b388:	bgt	b968 <ReadInt32Data+0x718>
    b38c:	ldr	r3, [r5]
    b390:	add	r4, sp, #32
    b394:	mov	r0, r4
    b398:	mov	r1, r7
    b39c:	mov	r2, r6
    b3a0:	bl	18d0 <fread@plt>
    b3a4:	mov	r5, r0
    b3a8:	cmp	r6, #1
    b3ac:	blt	c6c8 <ReadInt32Data+0x1478>
    b3b0:	mov	r0, r4
    b3b4:	bl	1c50 <Mat_int16Swap>
    b3b8:	str	r0, [r9], #4
    b3bc:	subs	r6, r6, #1
    b3c0:	add	r4, r4, #2
    b3c4:	bne	b3b0 <ReadInt32Data+0x160>
    b3c8:	b	c6c8 <ReadInt32Data+0x1478>
    b3cc:	ldr	r0, [r5, #20]
    b3d0:	cmp	r0, #0
    b3d4:	beq	b7a0 <ReadInt32Data+0x550>
    b3d8:	cmp	r6, #256	; 0x100
    b3dc:	bgt	ba40 <ReadInt32Data+0x7f0>
    b3e0:	ldr	r3, [r5]
    b3e4:	add	r4, sp, #32
    b3e8:	mov	r0, r4
    b3ec:	mov	r1, r7
    b3f0:	mov	r2, r6
    b3f4:	bl	18d0 <fread@plt>
    b3f8:	mov	r5, r0
    b3fc:	cmp	r6, #1
    b400:	blt	c6c8 <ReadInt32Data+0x1478>
    b404:	mov	r0, r4
    b408:	bl	1c64 <Mat_uint16Swap>
    b40c:	str	r0, [r9], #4
    b410:	subs	r6, r6, #1
    b414:	add	r4, r4, #2
    b418:	bne	b404 <ReadInt32Data+0x1b4>
    b41c:	b	c6c8 <ReadInt32Data+0x1478>
    b420:	ldr	r0, [r5, #20]
    b424:	cmp	r0, #0
    b428:	beq	b7e0 <ReadInt32Data+0x590>
    b42c:	cmp	r6, #256	; 0x100
    b430:	bgt	bb18 <ReadInt32Data+0x8c8>
    b434:	ldr	r3, [r5]
    b438:	add	r4, sp, #32
    b43c:	mov	r0, r4
    b440:	mov	r1, r7
    b444:	mov	r2, r6
    b448:	bl	18d0 <fread@plt>
    b44c:	mov	r5, r0
    b450:	cmp	r6, #1
    b454:	blt	c6c8 <ReadInt32Data+0x1478>
    b458:	mov	r0, r4
    b45c:	bl	1c28 <Mat_int32Swap>
    b460:	str	r0, [r9], #4
    b464:	subs	r6, r6, #1
    b468:	add	r4, r4, #4
    b46c:	bne	b458 <ReadInt32Data+0x208>
    b470:	b	c6c8 <ReadInt32Data+0x1478>
    b474:	ldr	r0, [r5, #20]
    b478:	cmp	r0, #0
    b47c:	beq	b84c <ReadInt32Data+0x5fc>
    b480:	cmp	r6, #256	; 0x100
    b484:	bgt	bbf0 <ReadInt32Data+0x9a0>
    b488:	ldr	r3, [r5]
    b48c:	add	r4, sp, #32
    b490:	mov	r0, r4
    b494:	mov	r1, r7
    b498:	mov	r2, r6
    b49c:	bl	18d0 <fread@plt>
    b4a0:	mov	r5, r0
    b4a4:	cmp	r6, #1
    b4a8:	blt	c6c8 <ReadInt32Data+0x1478>
    b4ac:	mov	r0, r4
    b4b0:	bl	1c3c <Mat_uint32Swap>
    b4b4:	str	r0, [r9], #4
    b4b8:	subs	r6, r6, #1
    b4bc:	add	r4, r4, #4
    b4c0:	bne	b4ac <ReadInt32Data+0x25c>
    b4c4:	b	c6c8 <ReadInt32Data+0x1478>
    b4c8:	ldr	r0, [r5, #20]
    b4cc:	cmp	r0, #0
    b4d0:	beq	b888 <ReadInt32Data+0x638>
    b4d4:	cmp	r6, #256	; 0x100
    b4d8:	bgt	bcc8 <ReadInt32Data+0xa78>
    b4dc:	ldr	r3, [r5]
    b4e0:	add	r4, sp, #32
    b4e4:	mov	r0, r4
    b4e8:	mov	r1, r7
    b4ec:	mov	r2, r6
    b4f0:	bl	18d0 <fread@plt>
    b4f4:	mov	r5, r0
    b4f8:	cmp	r6, #1
    b4fc:	blt	c6c8 <ReadInt32Data+0x1478>
    b500:	mov	r0, r4
    b504:	bl	1c7c <Mat_floatSwap>
    b508:	vcvt.s32.f32	s0, s0
    b50c:	vmov	r0, s0
    b510:	str	r0, [r9], #4
    b514:	subs	r6, r6, #1
    b518:	add	r4, r4, #4
    b51c:	bne	b500 <ReadInt32Data+0x2b0>
    b520:	b	c6c8 <ReadInt32Data+0x1478>
    b524:	ldr	r0, [r5, #20]
    b528:	cmp	r0, #0
    b52c:	beq	b8d4 <ReadInt32Data+0x684>
    b530:	cmp	r6, #256	; 0x100
    b534:	bgt	bdb0 <ReadInt32Data+0xb60>
    b538:	ldr	r3, [r5]
    b53c:	add	r4, sp, #32
    b540:	mov	r0, r4
    b544:	mov	r1, r7
    b548:	mov	r2, r6
    b54c:	bl	18d0 <fread@plt>
    b550:	mov	r5, r0
    b554:	cmp	r6, #1
    b558:	blt	c6c8 <ReadInt32Data+0x1478>
    b55c:	mov	r0, r4
    b560:	bl	1cc0 <Mat_doubleSwap>
    b564:	vcvt.s32.f64	s0, d0
    b568:	vmov	r0, s0
    b56c:	str	r0, [r9], #4
    b570:	subs	r6, r6, #1
    b574:	add	r4, r4, #8
    b578:	bne	b55c <ReadInt32Data+0x30c>
    b57c:	b	c6c8 <ReadInt32Data+0x1478>
    b580:	ldr	r0, [r5, #20]
    b584:	cmp	r0, #0
    b588:	beq	b920 <ReadInt32Data+0x6d0>
    b58c:	cmp	r6, #256	; 0x100
    b590:	bgt	be9c <ReadInt32Data+0xc4c>
    b594:	ldr	r3, [r5]
    b598:	add	r4, sp, #32
    b59c:	mov	r0, r4
    b5a0:	mov	r1, r7
    b5a4:	mov	r2, r6
    b5a8:	bl	18d0 <fread@plt>
    b5ac:	str	r0, [sp, #20]
    b5b0:	cmp	r6, #1
    b5b4:	blt	c484 <ReadInt32Data+0x1234>
    b5b8:	mov	r8, r6
    b5bc:	mov	r7, r9
    b5c0:	mov	r0, r4
    b5c4:	bl	1bbc <Mat_int64Swap>
    b5c8:	str	r0, [r7], #4
    b5cc:	subs	r6, r6, #1
    b5d0:	add	r4, r4, #8
    b5d4:	bne	b5c0 <ReadInt32Data+0x370>
    b5d8:	ldr	r7, [sp, #24]
    b5dc:	mov	r6, r8
    b5e0:	cmp	sl, #13
    b5e4:	beq	c48c <ReadInt32Data+0x123c>
    b5e8:	b	c4e4 <ReadInt32Data+0x1294>
    b5ec:	add	r1, r9, #1024	; 0x400
    b5f0:	str	r6, [sp, #8]
    b5f4:	sub	r8, r6, #256	; 0x100
    b5f8:	mov	r0, #0
    b5fc:	add	r4, sp, #32
    b600:	mov	r5, #0
    b604:	mov	sl, r0
    b608:	mov	r6, r1
    b60c:	ldr	r0, [sp, #28]
    b610:	ldr	r3, [r0]
    b614:	mov	r0, r4
    b618:	mov	r1, r7
    b61c:	mov	r2, #256	; 0x100
    b620:	bl	18d0 <fread@plt>
    b624:	mov	r1, #0
    b628:	add	r2, r4, r1
    b62c:	ldrsb	r2, [r2]
    b630:	str	r2, [r9, r1, lsl #2]
    b634:	add	r1, r1, #1
    b638:	cmp	r1, #256	; 0x100
    b63c:	bne	b628 <ReadInt32Data+0x3d8>
    b640:	add	r5, r0, r5
    b644:	add	r9, r9, #1024	; 0x400
    b648:	add	r1, r6, #1024	; 0x400
    b64c:	add	r0, sl, #256	; 0x100
    b650:	cmp	r0, r8
    b654:	blt	b604 <ReadInt32Data+0x3b4>
    b658:	ldr	r2, [sp, #8]
    b65c:	cmp	r0, r2
    b660:	bge	c6c8 <ReadInt32Data+0x1478>
    b664:	mov	r1, r7
    b668:	sub	r7, r2, r0
    b66c:	ldr	r0, [sp, #28]
    b670:	ldr	r3, [r0]
    b674:	add	r4, sp, #32
    b678:	mov	r0, r4
    b67c:	mov	r2, r7
    b680:	bl	18d0 <fread@plt>
    b684:	add	r5, r0, r5
    b688:	cmp	r7, #1
    b68c:	blt	c6c4 <ReadInt32Data+0x1474>
    b690:	sub	r0, r8, sl
    b694:	ldrsb	r1, [r4], #1
    b698:	str	r1, [r6], #4
    b69c:	subs	r0, r0, #1
    b6a0:	bne	b694 <ReadInt32Data+0x444>
    b6a4:	b	c6c4 <ReadInt32Data+0x1474>
    b6a8:	add	r1, r9, #1024	; 0x400
    b6ac:	str	r6, [sp, #8]
    b6b0:	sub	r8, r6, #256	; 0x100
    b6b4:	mov	r0, #0
    b6b8:	add	r4, sp, #32
    b6bc:	mov	r5, #0
    b6c0:	mov	sl, r0
    b6c4:	mov	r6, r1
    b6c8:	ldr	r0, [sp, #28]
    b6cc:	ldr	r3, [r0]
    b6d0:	mov	r0, r4
    b6d4:	mov	r1, r7
    b6d8:	mov	r2, #256	; 0x100
    b6dc:	bl	18d0 <fread@plt>
    b6e0:	mov	r1, #0
    b6e4:	ldrb	r2, [r4, r1]
    b6e8:	str	r2, [r9, r1, lsl #2]
    b6ec:	add	r1, r1, #1
    b6f0:	cmp	r1, #256	; 0x100
    b6f4:	bne	b6e4 <ReadInt32Data+0x494>
    b6f8:	add	r5, r0, r5
    b6fc:	add	r9, r9, #1024	; 0x400
    b700:	add	r1, r6, #1024	; 0x400
    b704:	add	r0, sl, #256	; 0x100
    b708:	cmp	r0, r8
    b70c:	blt	b6c0 <ReadInt32Data+0x470>
    b710:	ldr	r2, [sp, #8]
    b714:	cmp	r0, r2
    b718:	bge	c6c8 <ReadInt32Data+0x1478>
    b71c:	mov	r1, r7
    b720:	sub	r7, r2, r0
    b724:	ldr	r0, [sp, #28]
    b728:	ldr	r3, [r0]
    b72c:	add	r4, sp, #32
    b730:	mov	r0, r4
    b734:	mov	r2, r7
    b738:	bl	18d0 <fread@plt>
    b73c:	add	r5, r0, r5
    b740:	cmp	r7, #1
    b744:	blt	c6c4 <ReadInt32Data+0x1474>
    b748:	sub	r0, r8, sl
    b74c:	ldrb	r1, [r4], #1
    b750:	str	r1, [r6], #4
    b754:	subs	r0, r0, #1
    b758:	bne	b74c <ReadInt32Data+0x4fc>
    b75c:	b	c6c4 <ReadInt32Data+0x1474>
    b760:	cmp	r6, #256	; 0x100
    b764:	bgt	bfb0 <ReadInt32Data+0xd60>
    b768:	ldr	r3, [r5]
    b76c:	add	r4, sp, #32
    b770:	mov	r0, r4
    b774:	mov	r1, r7
    b778:	mov	r2, r6
    b77c:	bl	18d0 <fread@plt>
    b780:	mov	r5, r0
    b784:	cmp	r6, #1
    b788:	blt	c6c8 <ReadInt32Data+0x1478>
    b78c:	ldrsh	r0, [r4], #2
    b790:	str	r0, [r9], #4
    b794:	subs	r6, r6, #1
    b798:	bne	b78c <ReadInt32Data+0x53c>
    b79c:	b	c6c8 <ReadInt32Data+0x1478>
    b7a0:	cmp	r6, #256	; 0x100
    b7a4:	bgt	c06c <ReadInt32Data+0xe1c>
    b7a8:	ldr	r3, [r5]
    b7ac:	add	r4, sp, #32
    b7b0:	mov	r0, r4
    b7b4:	mov	r1, r7
    b7b8:	mov	r2, r6
    b7bc:	bl	18d0 <fread@plt>
    b7c0:	mov	r5, r0
    b7c4:	cmp	r6, #1
    b7c8:	blt	c6c8 <ReadInt32Data+0x1478>
    b7cc:	ldrh	r0, [r4], #2
    b7d0:	str	r0, [r9], #4
    b7d4:	subs	r6, r6, #1
    b7d8:	bne	b7cc <ReadInt32Data+0x57c>
    b7dc:	b	c6c8 <ReadInt32Data+0x1478>
    b7e0:	cmp	r6, #256	; 0x100
    b7e4:	ble	b854 <ReadInt32Data+0x604>
    b7e8:	lsl	r4, r6, #2
    b7ec:	str	r6, [sp, #8]
    b7f0:	sub	r0, r6, #256	; 0x100
    b7f4:	str	r0, [sp, #20]
    b7f8:	mov	r6, #0
    b7fc:	add	r8, sp, #32
    b800:	mov	r7, #0
    b804:	ldr	r3, [r5]
    b808:	mov	r0, r8
    b80c:	ldr	r1, [sp, #24]
    b810:	mov	r2, #256	; 0x100
    b814:	bl	18d0 <fread@plt>
    b818:	mov	sl, r0
    b81c:	add	r0, r9, r6, lsl #2
    b820:	mov	r1, r8
    b824:	mov	r2, #1024	; 0x400
    b828:	bl	1834 <memcpy@plt>
    b82c:	add	r7, sl, r7
    b830:	ldr	r5, [sp, #28]
    b834:	sub	r4, r4, #1024	; 0x400
    b838:	add	r6, r6, #256	; 0x100
    b83c:	ldr	r0, [sp, #20]
    b840:	cmp	r6, r0
    b844:	blt	b804 <ReadInt32Data+0x5b4>
    b848:	b	c188 <ReadInt32Data+0xf38>
    b84c:	cmp	r6, #256	; 0x100
    b850:	bgt	c128 <ReadInt32Data+0xed8>
    b854:	ldr	r3, [r5]
    b858:	add	r0, sp, #32
    b85c:	mov	r1, r7
    b860:	mov	r2, r6
    b864:	bl	18d0 <fread@plt>
    b868:	mov	r5, r0
    b86c:	cmp	r6, #0
    b870:	ble	c6c8 <ReadInt32Data+0x1478>
    b874:	lsl	r2, r6, #2
    b878:	add	r1, sp, #32
    b87c:	mov	r0, r9
    b880:	bl	1834 <memcpy@plt>
    b884:	b	c6c8 <ReadInt32Data+0x1478>
    b888:	cmp	r6, #256	; 0x100
    b88c:	bgt	c1d8 <ReadInt32Data+0xf88>
    b890:	ldr	r3, [r5]
    b894:	add	r4, sp, #32
    b898:	mov	r0, r4
    b89c:	mov	r1, r7
    b8a0:	mov	r2, r6
    b8a4:	bl	18d0 <fread@plt>
    b8a8:	mov	r5, r0
    b8ac:	cmp	r6, #1
    b8b0:	blt	c6c8 <ReadInt32Data+0x1478>
    b8b4:	vldr	s0, [r4]
    b8b8:	vcvt.s32.f32	s0, s0
    b8bc:	vmov	r0, s0
    b8c0:	str	r0, [r9], #4
    b8c4:	subs	r6, r6, #1
    b8c8:	add	r4, r4, #4
    b8cc:	bne	b8b4 <ReadInt32Data+0x664>
    b8d0:	b	c6c8 <ReadInt32Data+0x1478>
    b8d4:	cmp	r6, #256	; 0x100
    b8d8:	bgt	c2a8 <ReadInt32Data+0x1058>
    b8dc:	ldr	r3, [r5]
    b8e0:	add	r4, sp, #32
    b8e4:	mov	r0, r4
    b8e8:	mov	r1, r7
    b8ec:	mov	r2, r6
    b8f0:	bl	18d0 <fread@plt>
    b8f4:	mov	r5, r0
    b8f8:	cmp	r6, #1
    b8fc:	blt	c6c8 <ReadInt32Data+0x1478>
    b900:	vldr	d16, [r4]
    b904:	vcvt.s32.f64	s0, d16
    b908:	vmov	r0, s0
    b90c:	str	r0, [r9], #4
    b910:	subs	r6, r6, #1
    b914:	add	r4, r4, #8
    b918:	bne	b900 <ReadInt32Data+0x6b0>
    b91c:	b	c6c8 <ReadInt32Data+0x1478>
    b920:	cmp	r6, #256	; 0x100
    b924:	bgt	c37c <ReadInt32Data+0x112c>
    b928:	ldr	r3, [r5]
    b92c:	add	r4, sp, #32
    b930:	mov	r0, r4
    b934:	mov	r1, r7
    b938:	mov	r2, r6
    b93c:	bl	18d0 <fread@plt>
    b940:	str	r0, [sp, #20]
    b944:	cmp	r6, #1
    b948:	blt	c484 <ReadInt32Data+0x1234>
    b94c:	mov	r0, r6
    b950:	mov	r1, r9
    b954:	ldr	r2, [r4], #8
    b958:	str	r2, [r1], #4
    b95c:	subs	r0, r0, #1
    b960:	bne	b954 <ReadInt32Data+0x704>
    b964:	b	c484 <ReadInt32Data+0x1234>
    b968:	add	r1, r9, #1024	; 0x400
    b96c:	str	r6, [sp, #8]
    b970:	sub	r0, r6, #256	; 0x100
    b974:	str	r0, [sp, #20]
    b978:	mov	r0, #0
    b97c:	add	r4, sp, #32
    b980:	mov	r5, #0
    b984:	mov	sl, r0
    b988:	mov	r8, r1
    b98c:	ldr	r0, [sp, #28]
    b990:	ldr	r3, [r0]
    b994:	mov	r0, r4
    b998:	mov	r1, r7
    b99c:	mov	r2, #256	; 0x100
    b9a0:	bl	18d0 <fread@plt>
    b9a4:	mov	r6, r0
    b9a8:	mov	r7, #0
    b9ac:	add	r0, r4, r7
    b9b0:	bl	1c50 <Mat_int16Swap>
    b9b4:	str	r0, [r9, r7, lsl #1]
    b9b8:	add	r7, r7, #2
    b9bc:	cmp	r7, #512	; 0x200
    b9c0:	bne	b9ac <ReadInt32Data+0x75c>
    b9c4:	add	r5, r6, r5
    b9c8:	add	r9, r9, #1024	; 0x400
    b9cc:	add	r1, r8, #1024	; 0x400
    b9d0:	add	r0, sl, #256	; 0x100
    b9d4:	ldr	r2, [sp, #20]
    b9d8:	cmp	r0, r2
    b9dc:	ldr	r7, [sp, #24]
    b9e0:	blt	b984 <ReadInt32Data+0x734>
    b9e4:	ldr	r1, [sp, #8]
    b9e8:	cmp	r0, r1
    b9ec:	bge	c6c8 <ReadInt32Data+0x1478>
    b9f0:	sub	r6, r1, r0
    b9f4:	ldr	r0, [sp, #28]
    b9f8:	ldr	r3, [r0]
    b9fc:	add	r4, sp, #32
    ba00:	mov	r0, r4
    ba04:	mov	r1, r7
    ba08:	mov	r2, r6
    ba0c:	bl	18d0 <fread@plt>
    ba10:	add	r5, r0, r5
    ba14:	cmp	r6, #1
    ba18:	blt	c6c8 <ReadInt32Data+0x1478>
    ba1c:	ldr	r0, [sp, #20]
    ba20:	sub	r6, r0, sl
    ba24:	mov	r0, r4
    ba28:	bl	1c50 <Mat_int16Swap>
    ba2c:	str	r0, [r8], #4
    ba30:	subs	r6, r6, #1
    ba34:	add	r4, r4, #2
    ba38:	bne	ba24 <ReadInt32Data+0x7d4>
    ba3c:	b	c6c8 <ReadInt32Data+0x1478>
    ba40:	add	r1, r9, #1024	; 0x400
    ba44:	str	r6, [sp, #8]
    ba48:	sub	r0, r6, #256	; 0x100
    ba4c:	str	r0, [sp, #20]
    ba50:	mov	r0, #0
    ba54:	add	r4, sp, #32
    ba58:	mov	r5, #0
    ba5c:	mov	sl, r0
    ba60:	mov	r8, r1
    ba64:	ldr	r0, [sp, #28]
    ba68:	ldr	r3, [r0]
    ba6c:	mov	r0, r4
    ba70:	mov	r1, r7
    ba74:	mov	r2, #256	; 0x100
    ba78:	bl	18d0 <fread@plt>
    ba7c:	mov	r6, r0
    ba80:	mov	r7, #0
    ba84:	add	r0, r4, r7
    ba88:	bl	1c64 <Mat_uint16Swap>
    ba8c:	str	r0, [r9, r7, lsl #1]
    ba90:	add	r7, r7, #2
    ba94:	cmp	r7, #512	; 0x200
    ba98:	bne	ba84 <ReadInt32Data+0x834>
    ba9c:	add	r5, r6, r5
    baa0:	add	r9, r9, #1024	; 0x400
    baa4:	add	r1, r8, #1024	; 0x400
    baa8:	add	r0, sl, #256	; 0x100
    baac:	ldr	r2, [sp, #20]
    bab0:	cmp	r0, r2
    bab4:	ldr	r7, [sp, #24]
    bab8:	blt	ba5c <ReadInt32Data+0x80c>
    babc:	ldr	r1, [sp, #8]
    bac0:	cmp	r0, r1
    bac4:	bge	c6c8 <ReadInt32Data+0x1478>
    bac8:	sub	r6, r1, r0
    bacc:	ldr	r0, [sp, #28]
    bad0:	ldr	r3, [r0]
    bad4:	add	r4, sp, #32
    bad8:	mov	r0, r4
    badc:	mov	r1, r7
    bae0:	mov	r2, r6
    bae4:	bl	18d0 <fread@plt>
    bae8:	add	r5, r0, r5
    baec:	cmp	r6, #1
    baf0:	blt	c6c8 <ReadInt32Data+0x1478>
    baf4:	ldr	r0, [sp, #20]
    baf8:	sub	r6, r0, sl
    bafc:	mov	r0, r4
    bb00:	bl	1c64 <Mat_uint16Swap>
    bb04:	str	r0, [r8], #4
    bb08:	subs	r6, r6, #1
    bb0c:	add	r4, r4, #2
    bb10:	bne	bafc <ReadInt32Data+0x8ac>
    bb14:	b	c6c8 <ReadInt32Data+0x1478>
    bb18:	add	r1, r9, #1024	; 0x400
    bb1c:	str	r6, [sp, #8]
    bb20:	sub	r0, r6, #256	; 0x100
    bb24:	str	r0, [sp, #20]
    bb28:	mov	r0, #0
    bb2c:	add	r4, sp, #32
    bb30:	mov	r5, #0
    bb34:	mov	sl, r0
    bb38:	mov	r8, r1
    bb3c:	ldr	r0, [sp, #28]
    bb40:	ldr	r3, [r0]
    bb44:	mov	r0, r4
    bb48:	mov	r1, r7
    bb4c:	mov	r2, #256	; 0x100
    bb50:	bl	18d0 <fread@plt>
    bb54:	mov	r6, r0
    bb58:	mov	r7, #0
    bb5c:	add	r0, r4, r7
    bb60:	bl	1c28 <Mat_int32Swap>
    bb64:	str	r0, [r9, r7]
    bb68:	add	r7, r7, #4
    bb6c:	cmp	r7, #1024	; 0x400
    bb70:	bne	bb5c <ReadInt32Data+0x90c>
    bb74:	add	r5, r6, r5
    bb78:	add	r9, r9, #1024	; 0x400
    bb7c:	add	r1, r8, #1024	; 0x400
    bb80:	add	r0, sl, #256	; 0x100
    bb84:	ldr	r2, [sp, #20]
    bb88:	cmp	r0, r2
    bb8c:	ldr	r7, [sp, #24]
    bb90:	blt	bb34 <ReadInt32Data+0x8e4>
    bb94:	ldr	r1, [sp, #8]
    bb98:	cmp	r0, r1
    bb9c:	bge	c6c8 <ReadInt32Data+0x1478>
    bba0:	sub	r6, r1, r0
    bba4:	ldr	r0, [sp, #28]
    bba8:	ldr	r3, [r0]
    bbac:	add	r4, sp, #32
    bbb0:	mov	r0, r4
    bbb4:	mov	r1, r7
    bbb8:	mov	r2, r6
    bbbc:	bl	18d0 <fread@plt>
    bbc0:	add	r5, r0, r5
    bbc4:	cmp	r6, #1
    bbc8:	blt	c6c8 <ReadInt32Data+0x1478>
    bbcc:	ldr	r0, [sp, #20]
    bbd0:	sub	r6, r0, sl
    bbd4:	mov	r0, r4
    bbd8:	bl	1c28 <Mat_int32Swap>
    bbdc:	str	r0, [r8], #4
    bbe0:	subs	r6, r6, #1
    bbe4:	add	r4, r4, #4
    bbe8:	bne	bbd4 <ReadInt32Data+0x984>
    bbec:	b	c6c8 <ReadInt32Data+0x1478>
    bbf0:	add	r1, r9, #1024	; 0x400
    bbf4:	str	r6, [sp, #8]
    bbf8:	sub	r0, r6, #256	; 0x100
    bbfc:	str	r0, [sp, #20]
    bc00:	mov	r0, #0
    bc04:	add	r4, sp, #32
    bc08:	mov	r5, #0
    bc0c:	mov	sl, r0
    bc10:	mov	r8, r1
    bc14:	ldr	r0, [sp, #28]
    bc18:	ldr	r3, [r0]
    bc1c:	mov	r0, r4
    bc20:	mov	r1, r7
    bc24:	mov	r2, #256	; 0x100
    bc28:	bl	18d0 <fread@plt>
    bc2c:	mov	r6, r0
    bc30:	mov	r7, #0
    bc34:	add	r0, r4, r7
    bc38:	bl	1c3c <Mat_uint32Swap>
    bc3c:	str	r0, [r9, r7]
    bc40:	add	r7, r7, #4
    bc44:	cmp	r7, #1024	; 0x400
    bc48:	bne	bc34 <ReadInt32Data+0x9e4>
    bc4c:	add	r5, r6, r5
    bc50:	add	r9, r9, #1024	; 0x400
    bc54:	add	r1, r8, #1024	; 0x400
    bc58:	add	r0, sl, #256	; 0x100
    bc5c:	ldr	r2, [sp, #20]
    bc60:	cmp	r0, r2
    bc64:	ldr	r7, [sp, #24]
    bc68:	blt	bc0c <ReadInt32Data+0x9bc>
    bc6c:	ldr	r1, [sp, #8]
    bc70:	cmp	r0, r1
    bc74:	bge	c6c8 <ReadInt32Data+0x1478>
    bc78:	sub	r6, r1, r0
    bc7c:	ldr	r0, [sp, #28]
    bc80:	ldr	r3, [r0]
    bc84:	add	r4, sp, #32
    bc88:	mov	r0, r4
    bc8c:	mov	r1, r7
    bc90:	mov	r2, r6
    bc94:	bl	18d0 <fread@plt>
    bc98:	add	r5, r0, r5
    bc9c:	cmp	r6, #1
    bca0:	blt	c6c8 <ReadInt32Data+0x1478>
    bca4:	ldr	r0, [sp, #20]
    bca8:	sub	r6, r0, sl
    bcac:	mov	r0, r4
    bcb0:	bl	1c3c <Mat_uint32Swap>
    bcb4:	str	r0, [r8], #4
    bcb8:	subs	r6, r6, #1
    bcbc:	add	r4, r4, #4
    bcc0:	bne	bcac <ReadInt32Data+0xa5c>
    bcc4:	b	c6c8 <ReadInt32Data+0x1478>
    bcc8:	add	r1, r9, #1024	; 0x400
    bccc:	str	r6, [sp, #8]
    bcd0:	sub	r0, r6, #256	; 0x100
    bcd4:	str	r0, [sp, #20]
    bcd8:	mov	r0, #0
    bcdc:	add	r4, sp, #32
    bce0:	mov	r5, #0
    bce4:	mov	sl, r0
    bce8:	mov	r8, r1
    bcec:	ldr	r0, [sp, #28]
    bcf0:	ldr	r3, [r0]
    bcf4:	mov	r0, r4
    bcf8:	mov	r1, r7
    bcfc:	mov	r2, #256	; 0x100
    bd00:	bl	18d0 <fread@plt>
    bd04:	mov	r6, r0
    bd08:	mov	r7, #0
    bd0c:	add	r0, r4, r7
    bd10:	bl	1c7c <Mat_floatSwap>
    bd14:	vcvt.s32.f32	s0, s0
    bd18:	vmov	r0, s0
    bd1c:	str	r0, [r9, r7]
    bd20:	add	r7, r7, #4
    bd24:	cmp	r7, #1024	; 0x400
    bd28:	bne	bd0c <ReadInt32Data+0xabc>
    bd2c:	add	r5, r6, r5
    bd30:	add	r9, r9, #1024	; 0x400
    bd34:	add	r1, r8, #1024	; 0x400
    bd38:	add	r0, sl, #256	; 0x100
    bd3c:	ldr	r2, [sp, #20]
    bd40:	cmp	r0, r2
    bd44:	ldr	r7, [sp, #24]
    bd48:	blt	bce4 <ReadInt32Data+0xa94>
    bd4c:	ldr	r1, [sp, #8]
    bd50:	cmp	r0, r1
    bd54:	bge	c6c8 <ReadInt32Data+0x1478>
    bd58:	sub	r6, r1, r0
    bd5c:	ldr	r0, [sp, #28]
    bd60:	ldr	r3, [r0]
    bd64:	add	r4, sp, #32
    bd68:	mov	r0, r4
    bd6c:	mov	r1, r7
    bd70:	mov	r2, r6
    bd74:	bl	18d0 <fread@plt>
    bd78:	add	r5, r0, r5
    bd7c:	cmp	r6, #1
    bd80:	blt	c6c8 <ReadInt32Data+0x1478>
    bd84:	ldr	r0, [sp, #20]
    bd88:	sub	r6, r0, sl
    bd8c:	mov	r0, r4
    bd90:	bl	1c7c <Mat_floatSwap>
    bd94:	vcvt.s32.f32	s0, s0
    bd98:	vmov	r0, s0
    bd9c:	str	r0, [r8], #4
    bda0:	subs	r6, r6, #1
    bda4:	add	r4, r4, #4
    bda8:	bne	bd8c <ReadInt32Data+0xb3c>
    bdac:	b	c6c8 <ReadInt32Data+0x1478>
    bdb0:	add	r1, r9, #1024	; 0x400
    bdb4:	str	r6, [sp, #8]
    bdb8:	sub	r0, r6, #256	; 0x100
    bdbc:	str	r0, [sp, #20]
    bdc0:	mov	r0, #0
    bdc4:	mov	r5, #0
    bdc8:	mov	sl, r0
    bdcc:	mov	r8, r1
    bdd0:	ldr	r0, [sp, #28]
    bdd4:	ldr	r3, [r0]
    bdd8:	add	r6, sp, #32
    bddc:	mov	r0, r6
    bde0:	mov	r1, r7
    bde4:	mov	r2, #256	; 0x100
    bde8:	bl	18d0 <fread@plt>
    bdec:	mov	r4, r0
    bdf0:	mov	r7, #0
    bdf4:	mov	r0, r6
    bdf8:	bl	1cc0 <Mat_doubleSwap>
    bdfc:	vcvt.s32.f64	s0, d0
    be00:	vmov	r0, s0
    be04:	str	r0, [r9, r7, lsl #2]
    be08:	add	r6, r6, #8
    be0c:	add	r7, r7, #1
    be10:	cmp	r7, #256	; 0x100
    be14:	bne	bdf4 <ReadInt32Data+0xba4>
    be18:	add	r5, r4, r5
    be1c:	add	r9, r9, #1024	; 0x400
    be20:	add	r1, r8, #1024	; 0x400
    be24:	add	r0, sl, #256	; 0x100
    be28:	ldr	r2, [sp, #20]
    be2c:	cmp	r0, r2
    be30:	ldr	r7, [sp, #24]
    be34:	blt	bdc8 <ReadInt32Data+0xb78>
    be38:	ldr	r1, [sp, #8]
    be3c:	cmp	r0, r1
    be40:	bge	c6c8 <ReadInt32Data+0x1478>
    be44:	sub	r6, r1, r0
    be48:	ldr	r0, [sp, #28]
    be4c:	ldr	r3, [r0]
    be50:	add	r4, sp, #32
    be54:	mov	r0, r4
    be58:	mov	r1, r7
    be5c:	mov	r2, r6
    be60:	bl	18d0 <fread@plt>
    be64:	add	r5, r0, r5
    be68:	cmp	r6, #1
    be6c:	blt	c6c8 <ReadInt32Data+0x1478>
    be70:	ldr	r0, [sp, #20]
    be74:	sub	r6, r0, sl
    be78:	mov	r0, r4
    be7c:	bl	1cc0 <Mat_doubleSwap>
    be80:	vcvt.s32.f64	s0, d0
    be84:	vmov	r0, s0
    be88:	str	r0, [r8], #4
    be8c:	subs	r6, r6, #1
    be90:	add	r4, r4, #8
    be94:	bne	be78 <ReadInt32Data+0xc28>
    be98:	b	c6c8 <ReadInt32Data+0x1478>
    be9c:	str	sl, [sp, #4]
    bea0:	add	r1, r9, #1024	; 0x400
    bea4:	str	r6, [sp, #8]
    bea8:	sub	r0, r6, #256	; 0x100
    beac:	str	r0, [sp, #12]
    beb0:	mov	r0, #0
    beb4:	mov	r7, r9
    beb8:	mov	r2, #0
    bebc:	str	r2, [sp, #20]
    bec0:	str	r0, [sp, #16]
    bec4:	mov	r6, r1
    bec8:	ldr	r3, [r5]
    becc:	add	r4, sp, #32
    bed0:	mov	r0, r4
    bed4:	ldr	r1, [sp, #24]
    bed8:	mov	r2, #256	; 0x100
    bedc:	bl	18d0 <fread@plt>
    bee0:	mov	r8, r0
    bee4:	mov	sl, #0
    bee8:	mov	r0, r4
    beec:	bl	1bbc <Mat_int64Swap>
    bef0:	str	r0, [r7, sl, lsl #2]
    bef4:	add	r4, r4, #8
    bef8:	add	sl, sl, #1
    befc:	cmp	sl, #256	; 0x100
    bf00:	bne	bee8 <ReadInt32Data+0xc98>
    bf04:	ldr	r0, [sp, #20]
    bf08:	add	r0, r8, r0
    bf0c:	str	r0, [sp, #20]
    bf10:	add	r7, r7, #1024	; 0x400
    bf14:	add	r1, r6, #1024	; 0x400
    bf18:	mov	r3, r6
    bf1c:	ldr	r6, [sp, #16]
    bf20:	add	r0, r6, #256	; 0x100
    bf24:	ldr	r2, [sp, #12]
    bf28:	cmp	r0, r2
    bf2c:	ldr	r5, [sp, #28]
    bf30:	blt	bec0 <ReadInt32Data+0xc70>
    bf34:	str	r3, [sp]
    bf38:	ldr	r1, [sp, #8]
    bf3c:	cmp	r0, r1
    bf40:	bge	c45c <ReadInt32Data+0x120c>
    bf44:	sub	r8, r1, r0
    bf48:	ldr	r3, [r5]
    bf4c:	add	r4, sp, #32
    bf50:	mov	r0, r4
    bf54:	ldr	r7, [sp, #24]
    bf58:	mov	r1, r7
    bf5c:	mov	r2, r8
    bf60:	bl	18d0 <fread@plt>
    bf64:	ldr	r1, [sp, #20]
    bf68:	add	r1, r0, r1
    bf6c:	str	r1, [sp, #20]
    bf70:	cmp	r8, #1
    bf74:	blt	c47c <ReadInt32Data+0x122c>
    bf78:	ldr	r0, [sp, #12]
    bf7c:	sub	r7, r0, r6
    bf80:	ldm	sp, {r6, sl}
    bf84:	mov	r0, r4
    bf88:	bl	1bbc <Mat_int64Swap>
    bf8c:	str	r0, [r6], #4
    bf90:	subs	r7, r7, #1
    bf94:	add	r4, r4, #8
    bf98:	bne	bf84 <ReadInt32Data+0xd34>
    bf9c:	ldr	r7, [sp, #24]
    bfa0:	ldr	r6, [sp, #8]
    bfa4:	cmp	sl, #13
    bfa8:	beq	c48c <ReadInt32Data+0x123c>
    bfac:	b	c4e4 <ReadInt32Data+0x1294>
    bfb0:	add	r1, r9, #1024	; 0x400
    bfb4:	str	r6, [sp, #8]
    bfb8:	sub	r8, r6, #256	; 0x100
    bfbc:	mov	r0, #0
    bfc0:	add	r4, sp, #32
    bfc4:	mov	r5, #0
    bfc8:	mov	sl, r0
    bfcc:	mov	r6, r1
    bfd0:	ldr	r0, [sp, #28]
    bfd4:	ldr	r3, [r0]
    bfd8:	mov	r0, r4
    bfdc:	mov	r1, r7
    bfe0:	mov	r2, #256	; 0x100
    bfe4:	bl	18d0 <fread@plt>
    bfe8:	mov	r1, #0
    bfec:	add	r2, r4, r1
    bff0:	ldrsh	r2, [r2]
    bff4:	str	r2, [r9, r1, lsl #1]
    bff8:	add	r1, r1, #2
    bffc:	cmp	r1, #512	; 0x200
    c000:	bne	bfec <ReadInt32Data+0xd9c>
    c004:	add	r5, r0, r5
    c008:	add	r9, r9, #1024	; 0x400
    c00c:	add	r1, r6, #1024	; 0x400
    c010:	add	r0, sl, #256	; 0x100
    c014:	cmp	r0, r8
    c018:	blt	bfc8 <ReadInt32Data+0xd78>
    c01c:	ldr	r2, [sp, #8]
    c020:	cmp	r0, r2
    c024:	bge	c6c8 <ReadInt32Data+0x1478>
    c028:	mov	r1, r7
    c02c:	sub	r7, r2, r0
    c030:	ldr	r0, [sp, #28]
    c034:	ldr	r3, [r0]
    c038:	add	r4, sp, #32
    c03c:	mov	r0, r4
    c040:	mov	r2, r7
    c044:	bl	18d0 <fread@plt>
    c048:	add	r5, r0, r5
    c04c:	cmp	r7, #1
    c050:	blt	c6c4 <ReadInt32Data+0x1474>
    c054:	sub	r0, r8, sl
    c058:	ldrsh	r1, [r4], #2
    c05c:	str	r1, [r6], #4
    c060:	subs	r0, r0, #1
    c064:	bne	c058 <ReadInt32Data+0xe08>
    c068:	b	c6c4 <ReadInt32Data+0x1474>
    c06c:	add	r1, r9, #1024	; 0x400
    c070:	str	r6, [sp, #8]
    c074:	sub	r8, r6, #256	; 0x100
    c078:	mov	r0, #0
    c07c:	add	r4, sp, #32
    c080:	mov	r5, #0
    c084:	mov	sl, r0
    c088:	mov	r6, r1
    c08c:	ldr	r0, [sp, #28]
    c090:	ldr	r3, [r0]
    c094:	mov	r0, r4
    c098:	mov	r1, r7
    c09c:	mov	r2, #256	; 0x100
    c0a0:	bl	18d0 <fread@plt>
    c0a4:	mov	r1, #0
    c0a8:	add	r2, r4, r1
    c0ac:	ldrh	r2, [r2]
    c0b0:	str	r2, [r9, r1, lsl #1]
    c0b4:	add	r1, r1, #2
    c0b8:	cmp	r1, #512	; 0x200
    c0bc:	bne	c0a8 <ReadInt32Data+0xe58>
    c0c0:	add	r5, r0, r5
    c0c4:	add	r9, r9, #1024	; 0x400
    c0c8:	add	r1, r6, #1024	; 0x400
    c0cc:	add	r0, sl, #256	; 0x100
    c0d0:	cmp	r0, r8
    c0d4:	blt	c084 <ReadInt32Data+0xe34>
    c0d8:	ldr	r2, [sp, #8]
    c0dc:	cmp	r0, r2
    c0e0:	bge	c6c8 <ReadInt32Data+0x1478>
    c0e4:	mov	r1, r7
    c0e8:	sub	r7, r2, r0
    c0ec:	ldr	r0, [sp, #28]
    c0f0:	ldr	r3, [r0]
    c0f4:	add	r4, sp, #32
    c0f8:	mov	r0, r4
    c0fc:	mov	r2, r7
    c100:	bl	18d0 <fread@plt>
    c104:	add	r5, r0, r5
    c108:	cmp	r7, #1
    c10c:	blt	c6c4 <ReadInt32Data+0x1474>
    c110:	sub	r0, r8, sl
    c114:	ldrh	r1, [r4], #2
    c118:	str	r1, [r6], #4
    c11c:	subs	r0, r0, #1
    c120:	bne	c114 <ReadInt32Data+0xec4>
    c124:	b	c6c4 <ReadInt32Data+0x1474>
    c128:	lsl	r4, r6, #2
    c12c:	str	r6, [sp, #8]
    c130:	sub	r0, r6, #256	; 0x100
    c134:	str	r0, [sp, #20]
    c138:	mov	r6, #0
    c13c:	add	r8, sp, #32
    c140:	mov	r7, #0
    c144:	ldr	r3, [r5]
    c148:	mov	r0, r8
    c14c:	ldr	r1, [sp, #24]
    c150:	mov	r2, #256	; 0x100
    c154:	bl	18d0 <fread@plt>
    c158:	mov	sl, r0
    c15c:	add	r0, r9, r6, lsl #2
    c160:	mov	r1, r8
    c164:	mov	r2, #1024	; 0x400
    c168:	bl	1834 <memcpy@plt>
    c16c:	add	r7, sl, r7
    c170:	ldr	r5, [sp, #28]
    c174:	sub	r4, r4, #1024	; 0x400
    c178:	add	r6, r6, #256	; 0x100
    c17c:	ldr	r0, [sp, #20]
    c180:	cmp	r6, r0
    c184:	blt	c144 <ReadInt32Data+0xef4>
    c188:	mov	sl, r7
    c18c:	ldr	r0, [sp, #8]
    c190:	cmp	r6, r0
    c194:	bge	c450 <ReadInt32Data+0x1200>
    c198:	sub	r8, r0, r6
    c19c:	ldr	r3, [r5]
    c1a0:	add	r0, sp, #32
    c1a4:	ldr	r7, [sp, #24]
    c1a8:	mov	r1, r7
    c1ac:	mov	r2, r8
    c1b0:	bl	18d0 <fread@plt>
    c1b4:	mov	r5, sl
    c1b8:	add	r5, r0, sl
    c1bc:	cmp	r8, #0
    c1c0:	ble	c6c8 <ReadInt32Data+0x1478>
    c1c4:	add	r0, r9, r6, lsl #2
    c1c8:	add	r1, sp, #32
    c1cc:	mov	r2, r4
    c1d0:	bl	1834 <memcpy@plt>
    c1d4:	b	c6c8 <ReadInt32Data+0x1478>
    c1d8:	add	r1, r9, #1024	; 0x400
    c1dc:	str	r6, [sp, #8]
    c1e0:	sub	r8, r6, #256	; 0x100
    c1e4:	mov	r0, #0
    c1e8:	add	r4, sp, #32
    c1ec:	mov	r5, #0
    c1f0:	mov	sl, r0
    c1f4:	mov	r6, r1
    c1f8:	ldr	r0, [sp, #28]
    c1fc:	ldr	r3, [r0]
    c200:	mov	r0, r4
    c204:	mov	r1, r7
    c208:	mov	r2, #256	; 0x100
    c20c:	bl	18d0 <fread@plt>
    c210:	mov	r1, #0
    c214:	add	r2, r4, r1
    c218:	vldr	s0, [r2]
    c21c:	vcvt.s32.f32	s0, s0
    c220:	vmov	r2, s0
    c224:	str	r2, [r9, r1]
    c228:	add	r1, r1, #4
    c22c:	cmp	r1, #1024	; 0x400
    c230:	bne	c214 <ReadInt32Data+0xfc4>
    c234:	add	r5, r0, r5
    c238:	add	r9, r9, #1024	; 0x400
    c23c:	add	r1, r6, #1024	; 0x400
    c240:	add	r0, sl, #256	; 0x100
    c244:	cmp	r0, r8
    c248:	blt	c1f0 <ReadInt32Data+0xfa0>
    c24c:	ldr	r2, [sp, #8]
    c250:	cmp	r0, r2
    c254:	bge	c6c8 <ReadInt32Data+0x1478>
    c258:	mov	r1, r7
    c25c:	sub	r7, r2, r0
    c260:	ldr	r0, [sp, #28]
    c264:	ldr	r3, [r0]
    c268:	add	r4, sp, #32
    c26c:	mov	r0, r4
    c270:	mov	r2, r7
    c274:	bl	18d0 <fread@plt>
    c278:	add	r5, r0, r5
    c27c:	cmp	r7, #1
    c280:	blt	c6c4 <ReadInt32Data+0x1474>
    c284:	sub	r0, r8, sl
    c288:	vldr	s0, [r4]
    c28c:	vcvt.s32.f32	s0, s0
    c290:	vmov	r1, s0
    c294:	str	r1, [r6], #4
    c298:	subs	r0, r0, #1
    c29c:	add	r4, r4, #4
    c2a0:	bne	c288 <ReadInt32Data+0x1038>
    c2a4:	b	c6c4 <ReadInt32Data+0x1474>
    c2a8:	add	r1, r9, #1024	; 0x400
    c2ac:	str	r6, [sp, #8]
    c2b0:	sub	r8, r6, #256	; 0x100
    c2b4:	mov	r0, #0
    c2b8:	add	r4, sp, #32
    c2bc:	mov	r5, #0
    c2c0:	mov	sl, r0
    c2c4:	mov	r6, r1
    c2c8:	ldr	r0, [sp, #28]
    c2cc:	ldr	r3, [r0]
    c2d0:	mov	r0, r4
    c2d4:	mov	r1, r7
    c2d8:	mov	r2, #256	; 0x100
    c2dc:	bl	18d0 <fread@plt>
    c2e0:	mov	r1, r4
    c2e4:	mov	r2, #0
    c2e8:	vldr	d16, [r1]
    c2ec:	vcvt.s32.f64	s0, d16
    c2f0:	vmov	r3, s0
    c2f4:	str	r3, [r9, r2, lsl #2]
    c2f8:	add	r1, r1, #8
    c2fc:	add	r2, r2, #1
    c300:	cmp	r2, #256	; 0x100
    c304:	bne	c2e8 <ReadInt32Data+0x1098>
    c308:	add	r5, r0, r5
    c30c:	add	r9, r9, #1024	; 0x400
    c310:	add	r1, r6, #1024	; 0x400
    c314:	add	r0, sl, #256	; 0x100
    c318:	cmp	r0, r8
    c31c:	blt	c2c0 <ReadInt32Data+0x1070>
    c320:	ldr	r2, [sp, #8]
    c324:	cmp	r0, r2
    c328:	bge	c6c8 <ReadInt32Data+0x1478>
    c32c:	mov	r1, r7
    c330:	sub	r7, r2, r0
    c334:	ldr	r0, [sp, #28]
    c338:	ldr	r3, [r0]
    c33c:	add	r4, sp, #32
    c340:	mov	r0, r4
    c344:	mov	r2, r7
    c348:	bl	18d0 <fread@plt>
    c34c:	add	r5, r0, r5
    c350:	cmp	r7, #1
    c354:	blt	c6c4 <ReadInt32Data+0x1474>
    c358:	sub	r0, r8, sl
    c35c:	vldr	d16, [r4]
    c360:	vcvt.s32.f64	s0, d16
    c364:	vmov	r1, s0
    c368:	str	r1, [r6], #4
    c36c:	subs	r0, r0, #1
    c370:	add	r4, r4, #8
    c374:	bne	c35c <ReadInt32Data+0x110c>
    c378:	b	c6c4 <ReadInt32Data+0x1474>
    c37c:	str	sl, [sp, #4]
    c380:	add	r1, r9, #1024	; 0x400
    c384:	str	r6, [sp, #8]
    c388:	sub	r8, r6, #256	; 0x100
    c38c:	mov	r0, #0
    c390:	add	r4, sp, #32
    c394:	mov	r7, r9
    c398:	mov	r5, #0
    c39c:	mov	sl, r0
    c3a0:	mov	r6, r1
    c3a4:	ldr	r0, [sp, #28]
    c3a8:	ldr	r3, [r0]
    c3ac:	mov	r0, r4
    c3b0:	ldr	r1, [sp, #24]
    c3b4:	mov	r2, #256	; 0x100
    c3b8:	bl	18d0 <fread@plt>
    c3bc:	mov	r1, r4
    c3c0:	mov	r2, #0
    c3c4:	ldr	r3, [r1], #8
    c3c8:	str	r3, [r7, r2, lsl #2]
    c3cc:	add	r2, r2, #1
    c3d0:	cmp	r2, #256	; 0x100
    c3d4:	bne	c3c4 <ReadInt32Data+0x1174>
    c3d8:	add	r5, r0, r5
    c3dc:	add	r7, r7, #1024	; 0x400
    c3e0:	add	r1, r6, #1024	; 0x400
    c3e4:	add	r0, sl, #256	; 0x100
    c3e8:	cmp	r0, r8
    c3ec:	blt	c39c <ReadInt32Data+0x114c>
    c3f0:	ldr	r1, [sp, #8]
    c3f4:	cmp	r0, r1
    c3f8:	bge	c468 <ReadInt32Data+0x1218>
    c3fc:	sub	r2, r1, r0
    c400:	str	r2, [sp, #16]
    c404:	ldr	r0, [sp, #28]
    c408:	ldr	r3, [r0]
    c40c:	add	r4, sp, #32
    c410:	mov	r0, r4
    c414:	ldr	r7, [sp, #24]
    c418:	mov	r1, r7
    c41c:	bl	18d0 <fread@plt>
    c420:	add	r5, r0, r5
    c424:	ldr	r0, [sp, #16]
    c428:	cmp	r0, #1
    c42c:	str	r5, [sp, #20]
    c430:	blt	c448 <ReadInt32Data+0x11f8>
    c434:	sub	r0, r8, sl
    c438:	ldr	r1, [r4], #8
    c43c:	str	r1, [r6], #4
    c440:	subs	r0, r0, #1
    c444:	bne	c438 <ReadInt32Data+0x11e8>
    c448:	ldr	r6, [sp, #8]
    c44c:	b	c474 <ReadInt32Data+0x1224>
    c450:	ldr	r7, [sp, #24]
    c454:	mov	r5, sl
    c458:	b	c6c8 <ReadInt32Data+0x1478>
    c45c:	ldr	r7, [sp, #24]
    c460:	mov	r6, r1
    c464:	b	c480 <ReadInt32Data+0x1230>
    c468:	str	r5, [sp, #20]
    c46c:	ldr	r7, [sp, #24]
    c470:	mov	r6, r1
    c474:	ldr	r5, [sp, #28]
    c478:	b	c480 <ReadInt32Data+0x1230>
    c47c:	ldr	r6, [sp, #8]
    c480:	ldr	sl, [sp, #4]
    c484:	cmp	sl, #13
    c488:	bne	c4e4 <ReadInt32Data+0x1294>
    c48c:	ldr	r0, [r5, #20]
    c490:	cmp	r0, #0
    c494:	beq	c4ec <ReadInt32Data+0x129c>
    c498:	cmp	r6, #256	; 0x100
    c49c:	bgt	c530 <ReadInt32Data+0x12e0>
    c4a0:	ldr	r3, [r5]
    c4a4:	add	r4, sp, #32
    c4a8:	mov	r0, r4
    c4ac:	mov	r1, r7
    c4b0:	mov	r2, r6
    c4b4:	bl	18d0 <fread@plt>
    c4b8:	ldr	r5, [sp, #20]
    c4bc:	add	r5, r0, r5
    c4c0:	cmp	r6, #1
    c4c4:	blt	c6c8 <ReadInt32Data+0x1478>
    c4c8:	mov	r0, r4
    c4cc:	bl	1c0c <Mat_uint64Swap>
    c4d0:	str	r0, [r9], #4
    c4d4:	subs	r6, r6, #1
    c4d8:	add	r4, r4, #8
    c4dc:	bne	c4c8 <ReadInt32Data+0x1278>
    c4e0:	b	c6c8 <ReadInt32Data+0x1478>
    c4e4:	ldr	r5, [sp, #20]
    c4e8:	b	c6c8 <ReadInt32Data+0x1478>
    c4ec:	cmp	r6, #256	; 0x100
    c4f0:	bgt	c60c <ReadInt32Data+0x13bc>
    c4f4:	ldr	r3, [r5]
    c4f8:	add	r4, sp, #32
    c4fc:	mov	r0, r4
    c500:	mov	r1, r7
    c504:	mov	r2, r6
    c508:	bl	18d0 <fread@plt>
    c50c:	ldr	r5, [sp, #20]
    c510:	add	r5, r0, r5
    c514:	cmp	r6, #1
    c518:	blt	c6c8 <ReadInt32Data+0x1478>
    c51c:	ldr	r0, [r4], #8
    c520:	str	r0, [r9], #4
    c524:	subs	r6, r6, #1
    c528:	bne	c51c <ReadInt32Data+0x12cc>
    c52c:	b	c6c8 <ReadInt32Data+0x1478>
    c530:	add	r1, r9, #1024	; 0x400
    c534:	str	r6, [sp, #8]
    c538:	sub	r0, r6, #256	; 0x100
    c53c:	str	r0, [sp, #16]
    c540:	mov	r0, #0
    c544:	ldr	r5, [sp, #20]
    c548:	mov	sl, r0
    c54c:	mov	r8, r1
    c550:	ldr	r0, [sp, #28]
    c554:	ldr	r3, [r0]
    c558:	add	r6, sp, #32
    c55c:	mov	r0, r6
    c560:	mov	r1, r7
    c564:	mov	r2, #256	; 0x100
    c568:	bl	18d0 <fread@plt>
    c56c:	mov	r4, r0
    c570:	mov	r7, #0
    c574:	mov	r0, r6
    c578:	bl	1c0c <Mat_uint64Swap>
    c57c:	str	r0, [r9, r7, lsl #2]
    c580:	add	r6, r6, #8
    c584:	add	r7, r7, #1
    c588:	cmp	r7, #256	; 0x100
    c58c:	bne	c574 <ReadInt32Data+0x1324>
    c590:	add	r5, r4, r5
    c594:	add	r9, r9, #1024	; 0x400
    c598:	add	r1, r8, #1024	; 0x400
    c59c:	add	r0, sl, #256	; 0x100
    c5a0:	ldr	r2, [sp, #16]
    c5a4:	cmp	r0, r2
    c5a8:	ldr	r7, [sp, #24]
    c5ac:	blt	c548 <ReadInt32Data+0x12f8>
    c5b0:	ldr	r1, [sp, #8]
    c5b4:	cmp	r0, r1
    c5b8:	bge	c6c8 <ReadInt32Data+0x1478>
    c5bc:	sub	r6, r1, r0
    c5c0:	ldr	r0, [sp, #28]
    c5c4:	ldr	r3, [r0]
    c5c8:	add	r4, sp, #32
    c5cc:	mov	r0, r4
    c5d0:	mov	r1, r7
    c5d4:	mov	r2, r6
    c5d8:	bl	18d0 <fread@plt>
    c5dc:	add	r5, r0, r5
    c5e0:	cmp	r6, #1
    c5e4:	blt	c6c8 <ReadInt32Data+0x1478>
    c5e8:	ldr	r0, [sp, #16]
    c5ec:	sub	r6, r0, sl
    c5f0:	mov	r0, r4
    c5f4:	bl	1c0c <Mat_uint64Swap>
    c5f8:	str	r0, [r8], #4
    c5fc:	subs	r6, r6, #1
    c600:	add	r4, r4, #8
    c604:	bne	c5f0 <ReadInt32Data+0x13a0>
    c608:	b	c6c8 <ReadInt32Data+0x1478>
    c60c:	add	r1, r9, #1024	; 0x400
    c610:	str	r6, [sp, #8]
    c614:	sub	r8, r6, #256	; 0x100
    c618:	mov	r0, #0
    c61c:	add	r4, sp, #32
    c620:	ldr	r5, [sp, #20]
    c624:	mov	sl, r0
    c628:	mov	r6, r1
    c62c:	ldr	r0, [sp, #28]
    c630:	ldr	r3, [r0]
    c634:	mov	r0, r4
    c638:	mov	r1, r7
    c63c:	mov	r2, #256	; 0x100
    c640:	bl	18d0 <fread@plt>
    c644:	mov	r1, r4
    c648:	mov	r2, #0
    c64c:	ldr	r3, [r1], #8
    c650:	str	r3, [r9, r2, lsl #2]
    c654:	add	r2, r2, #1
    c658:	cmp	r2, #256	; 0x100
    c65c:	bne	c64c <ReadInt32Data+0x13fc>
    c660:	add	r5, r0, r5
    c664:	add	r9, r9, #1024	; 0x400
    c668:	add	r1, r6, #1024	; 0x400
    c66c:	add	r0, sl, #256	; 0x100
    c670:	cmp	r0, r8
    c674:	blt	c624 <ReadInt32Data+0x13d4>
    c678:	ldr	r2, [sp, #8]
    c67c:	cmp	r0, r2
    c680:	bge	c6c8 <ReadInt32Data+0x1478>
    c684:	mov	r1, r7
    c688:	sub	r7, r2, r0
    c68c:	ldr	r0, [sp, #28]
    c690:	ldr	r3, [r0]
    c694:	add	r4, sp, #32
    c698:	mov	r0, r4
    c69c:	mov	r2, r7
    c6a0:	bl	18d0 <fread@plt>
    c6a4:	add	r5, r0, r5
    c6a8:	cmp	r7, #1
    c6ac:	blt	c6c4 <ReadInt32Data+0x1474>
    c6b0:	sub	r0, r8, sl
    c6b4:	ldr	r1, [r4], #8
    c6b8:	str	r1, [r6], #4
    c6bc:	subs	r0, r0, #1
    c6c0:	bne	c6b4 <ReadInt32Data+0x1464>
    c6c4:	ldr	r7, [sp, #24]
    c6c8:	mul	r0, r5, r7
    c6cc:	sub	sp, fp, #28
    c6d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c6d4 <ReadCompressedInt32Data>:
    c6d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6d8:	add	fp, sp, #28
    c6dc:	sub	sp, sp, #20
    c6e0:	mov	r7, r0
    c6e4:	mov	r0, #0
    c6e8:	cmp	r1, #0
    c6ec:	beq	c700 <ReadCompressedInt32Data+0x2c>
    c6f0:	cmp	r7, #0
    c6f4:	movne	r5, r2
    c6f8:	cmpne	r2, #0
    c6fc:	bne	c708 <ReadCompressedInt32Data+0x34>
    c700:	sub	sp, fp, #28
    c704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c708:	mov	r4, r3
    c70c:	mov	r8, r1
    c710:	ldr	sl, [fp, #8]
    c714:	mov	r0, r3
    c718:	bl	193c <Mat_SizeOf@plt>
    c71c:	mov	r6, r0
    c720:	sub	r0, r4, #1
    c724:	cmp	r0, #12
    c728:	bhi	cc18 <ReadCompressedInt32Data+0x544>
    c72c:	add	r1, pc, #4
    c730:	ldr	r0, [r1, r0, lsl #2]
    c734:	add	pc, r1, r0
    c738:	.word	0x00000034
    c73c:	.word	0x0000006c
    c740:	.word	0x000000a4
    c744:	.word	0x000000ec
    c748:	.word	0x00000134
    c74c:	.word	0x0000017c
    c750:	.word	0x000001c4
    c754:	.word	0x000004e0
    c758:	.word	0x00000214
    c75c:	.word	0x000004e0
    c760:	.word	0x000004e0
    c764:	.word	0x00000264
    c768:	.word	0x00000464
    c76c:	cmp	sl, #1
    c770:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c774:	add	r9, sp, #8
    c778:	mov	r4, sl
    c77c:	mov	r0, r7
    c780:	mov	r1, r8
    c784:	mov	r2, r9
    c788:	mov	r3, r6
    c78c:	bl	31e4 <InflateData>
    c790:	ldrsb	r0, [sp, #8]
    c794:	str	r0, [r5], #4
    c798:	subs	r4, r4, #1
    c79c:	bne	c77c <ReadCompressedInt32Data+0xa8>
    c7a0:	b	cc18 <ReadCompressedInt32Data+0x544>
    c7a4:	cmp	sl, #1
    c7a8:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c7ac:	add	r9, sp, #8
    c7b0:	mov	r4, sl
    c7b4:	mov	r0, r7
    c7b8:	mov	r1, r8
    c7bc:	mov	r2, r9
    c7c0:	mov	r3, r6
    c7c4:	bl	31e4 <InflateData>
    c7c8:	ldrb	r0, [sp, #8]
    c7cc:	str	r0, [r5], #4
    c7d0:	subs	r4, r4, #1
    c7d4:	bne	c7b4 <ReadCompressedInt32Data+0xe0>
    c7d8:	b	cc18 <ReadCompressedInt32Data+0x544>
    c7dc:	ldr	r0, [r7, #20]
    c7e0:	cmp	r0, #0
    c7e4:	beq	c9ec <ReadCompressedInt32Data+0x318>
    c7e8:	cmp	sl, #1
    c7ec:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c7f0:	add	r9, sp, #8
    c7f4:	mov	r4, sl
    c7f8:	mov	r0, r7
    c7fc:	mov	r1, r8
    c800:	mov	r2, r9
    c804:	mov	r3, r6
    c808:	bl	31e4 <InflateData>
    c80c:	mov	r0, r9
    c810:	bl	1c50 <Mat_int16Swap>
    c814:	str	r0, [r5], #4
    c818:	subs	r4, r4, #1
    c81c:	bne	c7f8 <ReadCompressedInt32Data+0x124>
    c820:	b	cc18 <ReadCompressedInt32Data+0x544>
    c824:	ldr	r0, [r7, #20]
    c828:	cmp	r0, #0
    c82c:	beq	ca24 <ReadCompressedInt32Data+0x350>
    c830:	cmp	sl, #1
    c834:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c838:	add	r9, sp, #8
    c83c:	mov	r4, sl
    c840:	mov	r0, r7
    c844:	mov	r1, r8
    c848:	mov	r2, r9
    c84c:	mov	r3, r6
    c850:	bl	31e4 <InflateData>
    c854:	mov	r0, r9
    c858:	bl	1c64 <Mat_uint16Swap>
    c85c:	str	r0, [r5], #4
    c860:	subs	r4, r4, #1
    c864:	bne	c840 <ReadCompressedInt32Data+0x16c>
    c868:	b	cc18 <ReadCompressedInt32Data+0x544>
    c86c:	ldr	r0, [r7, #20]
    c870:	cmp	r0, #0
    c874:	beq	ca5c <ReadCompressedInt32Data+0x388>
    c878:	cmp	sl, #1
    c87c:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c880:	add	r9, sp, #8
    c884:	mov	r4, sl
    c888:	mov	r0, r7
    c88c:	mov	r1, r8
    c890:	mov	r2, r9
    c894:	mov	r3, r6
    c898:	bl	31e4 <InflateData>
    c89c:	mov	r0, r9
    c8a0:	bl	1c28 <Mat_int32Swap>
    c8a4:	str	r0, [r5], #4
    c8a8:	subs	r4, r4, #1
    c8ac:	bne	c888 <ReadCompressedInt32Data+0x1b4>
    c8b0:	b	cc18 <ReadCompressedInt32Data+0x544>
    c8b4:	ldr	r0, [r7, #20]
    c8b8:	cmp	r0, #0
    c8bc:	beq	ca94 <ReadCompressedInt32Data+0x3c0>
    c8c0:	cmp	sl, #1
    c8c4:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c8c8:	add	r9, sp, #8
    c8cc:	mov	r4, sl
    c8d0:	mov	r0, r7
    c8d4:	mov	r1, r8
    c8d8:	mov	r2, r9
    c8dc:	mov	r3, r6
    c8e0:	bl	31e4 <InflateData>
    c8e4:	mov	r0, r9
    c8e8:	bl	1c3c <Mat_uint32Swap>
    c8ec:	str	r0, [r5], #4
    c8f0:	subs	r4, r4, #1
    c8f4:	bne	c8d0 <ReadCompressedInt32Data+0x1fc>
    c8f8:	b	cc18 <ReadCompressedInt32Data+0x544>
    c8fc:	ldr	r0, [r7, #20]
    c900:	cmp	r0, #0
    c904:	beq	cacc <ReadCompressedInt32Data+0x3f8>
    c908:	cmp	sl, #1
    c90c:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c910:	add	r9, sp, #8
    c914:	mov	r4, sl
    c918:	mov	r0, r7
    c91c:	mov	r1, r8
    c920:	mov	r2, r9
    c924:	mov	r3, r6
    c928:	bl	31e4 <InflateData>
    c92c:	mov	r0, r9
    c930:	bl	1c7c <Mat_floatSwap>
    c934:	vcvt.s32.f32	s0, s0
    c938:	vmov	r0, s0
    c93c:	str	r0, [r5], #4
    c940:	subs	r4, r4, #1
    c944:	bne	c918 <ReadCompressedInt32Data+0x244>
    c948:	b	cc18 <ReadCompressedInt32Data+0x544>
    c94c:	ldr	r0, [r7, #20]
    c950:	cmp	r0, #0
    c954:	beq	cb0c <ReadCompressedInt32Data+0x438>
    c958:	cmp	sl, #1
    c95c:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c960:	add	r9, sp, #8
    c964:	mov	r4, sl
    c968:	mov	r0, r7
    c96c:	mov	r1, r8
    c970:	mov	r2, r9
    c974:	mov	r3, r6
    c978:	bl	31e4 <InflateData>
    c97c:	mov	r0, r9
    c980:	bl	1cc0 <Mat_doubleSwap>
    c984:	vcvt.s32.f64	s0, d0
    c988:	vmov	r0, s0
    c98c:	str	r0, [r5], #4
    c990:	subs	r4, r4, #1
    c994:	bne	c968 <ReadCompressedInt32Data+0x294>
    c998:	b	cc18 <ReadCompressedInt32Data+0x544>
    c99c:	ldr	r0, [r7, #20]
    c9a0:	cmp	r0, #0
    c9a4:	beq	cb4c <ReadCompressedInt32Data+0x478>
    c9a8:	cmp	sl, #1
    c9ac:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c9b0:	str	r4, [sp]
    c9b4:	add	r4, sp, #8
    c9b8:	mov	r9, r5
    c9bc:	str	r6, [sp, #4]
    c9c0:	mov	r0, r7
    c9c4:	mov	r1, r8
    c9c8:	mov	r2, r4
    c9cc:	ldr	r3, [sp, #4]
    c9d0:	bl	31e4 <InflateData>
    c9d4:	mov	r0, r4
    c9d8:	bl	1bbc <Mat_int64Swap>
    c9dc:	str	r0, [r9], #4
    c9e0:	subs	sl, sl, #1
    c9e4:	bne	c9c0 <ReadCompressedInt32Data+0x2ec>
    c9e8:	b	cb88 <ReadCompressedInt32Data+0x4b4>
    c9ec:	cmp	sl, #1
    c9f0:	blt	cc18 <ReadCompressedInt32Data+0x544>
    c9f4:	add	r9, sp, #8
    c9f8:	mov	r4, sl
    c9fc:	mov	r0, r7
    ca00:	mov	r1, r8
    ca04:	mov	r2, r9
    ca08:	mov	r3, r6
    ca0c:	bl	31e4 <InflateData>
    ca10:	ldrsh	r0, [sp, #8]
    ca14:	str	r0, [r5], #4
    ca18:	subs	r4, r4, #1
    ca1c:	bne	c9fc <ReadCompressedInt32Data+0x328>
    ca20:	b	cc18 <ReadCompressedInt32Data+0x544>
    ca24:	cmp	sl, #1
    ca28:	blt	cc18 <ReadCompressedInt32Data+0x544>
    ca2c:	add	r9, sp, #8
    ca30:	mov	r4, sl
    ca34:	mov	r0, r7
    ca38:	mov	r1, r8
    ca3c:	mov	r2, r9
    ca40:	mov	r3, r6
    ca44:	bl	31e4 <InflateData>
    ca48:	ldrh	r0, [sp, #8]
    ca4c:	str	r0, [r5], #4
    ca50:	subs	r4, r4, #1
    ca54:	bne	ca34 <ReadCompressedInt32Data+0x360>
    ca58:	b	cc18 <ReadCompressedInt32Data+0x544>
    ca5c:	cmp	sl, #1
    ca60:	blt	cc18 <ReadCompressedInt32Data+0x544>
    ca64:	add	r9, sp, #8
    ca68:	mov	r4, sl
    ca6c:	mov	r0, r7
    ca70:	mov	r1, r8
    ca74:	mov	r2, r9
    ca78:	mov	r3, r6
    ca7c:	bl	31e4 <InflateData>
    ca80:	ldr	r0, [sp, #8]
    ca84:	str	r0, [r5], #4
    ca88:	subs	r4, r4, #1
    ca8c:	bne	ca6c <ReadCompressedInt32Data+0x398>
    ca90:	b	cc18 <ReadCompressedInt32Data+0x544>
    ca94:	cmp	sl, #1
    ca98:	blt	cc18 <ReadCompressedInt32Data+0x544>
    ca9c:	add	r9, sp, #8
    caa0:	mov	r4, sl
    caa4:	mov	r0, r7
    caa8:	mov	r1, r8
    caac:	mov	r2, r9
    cab0:	mov	r3, r6
    cab4:	bl	31e4 <InflateData>
    cab8:	ldr	r0, [sp, #8]
    cabc:	str	r0, [r5], #4
    cac0:	subs	r4, r4, #1
    cac4:	bne	caa4 <ReadCompressedInt32Data+0x3d0>
    cac8:	b	cc18 <ReadCompressedInt32Data+0x544>
    cacc:	cmp	sl, #1
    cad0:	blt	cc18 <ReadCompressedInt32Data+0x544>
    cad4:	add	r9, sp, #8
    cad8:	mov	r4, sl
    cadc:	mov	r0, r7
    cae0:	mov	r1, r8
    cae4:	mov	r2, r9
    cae8:	mov	r3, r6
    caec:	bl	31e4 <InflateData>
    caf0:	vldr	s0, [sp, #8]
    caf4:	vcvt.s32.f32	s0, s0
    caf8:	vmov	r0, s0
    cafc:	str	r0, [r5], #4
    cb00:	subs	r4, r4, #1
    cb04:	bne	cadc <ReadCompressedInt32Data+0x408>
    cb08:	b	cc18 <ReadCompressedInt32Data+0x544>
    cb0c:	cmp	sl, #1
    cb10:	blt	cc18 <ReadCompressedInt32Data+0x544>
    cb14:	add	r9, sp, #8
    cb18:	mov	r4, sl
    cb1c:	mov	r0, r7
    cb20:	mov	r1, r8
    cb24:	mov	r2, r9
    cb28:	mov	r3, r6
    cb2c:	bl	31e4 <InflateData>
    cb30:	vldr	d16, [sp, #8]
    cb34:	vcvt.s32.f64	s0, d16
    cb38:	vmov	r0, s0
    cb3c:	str	r0, [r5], #4
    cb40:	subs	r4, r4, #1
    cb44:	bne	cb1c <ReadCompressedInt32Data+0x448>
    cb48:	b	cc18 <ReadCompressedInt32Data+0x544>
    cb4c:	cmp	sl, #1
    cb50:	blt	cc18 <ReadCompressedInt32Data+0x544>
    cb54:	str	r4, [sp]
    cb58:	add	r9, sp, #8
    cb5c:	str	r6, [sp, #4]
    cb60:	mov	r6, r5
    cb64:	mov	r0, r7
    cb68:	mov	r1, r8
    cb6c:	mov	r2, r9
    cb70:	ldr	r3, [sp, #4]
    cb74:	bl	31e4 <InflateData>
    cb78:	ldr	r0, [sp, #8]
    cb7c:	str	r0, [r6], #4
    cb80:	subs	sl, sl, #1
    cb84:	bne	cb64 <ReadCompressedInt32Data+0x490>
    cb88:	ldr	r0, [sp]
    cb8c:	cmp	r0, #13
    cb90:	ldr	sl, [fp, #8]
    cb94:	ldr	r6, [sp, #4]
    cb98:	bne	cc18 <ReadCompressedInt32Data+0x544>
    cb9c:	ldr	r0, [r7, #20]
    cba0:	cmp	r0, #0
    cba4:	beq	cbe4 <ReadCompressedInt32Data+0x510>
    cba8:	cmp	sl, #1
    cbac:	blt	cc18 <ReadCompressedInt32Data+0x544>
    cbb0:	add	r9, sp, #8
    cbb4:	mov	r4, sl
    cbb8:	mov	r0, r7
    cbbc:	mov	r1, r8
    cbc0:	mov	r2, r9
    cbc4:	mov	r3, r6
    cbc8:	bl	31e4 <InflateData>
    cbcc:	mov	r0, r9
    cbd0:	bl	1c0c <Mat_uint64Swap>
    cbd4:	str	r0, [r5], #4
    cbd8:	subs	r4, r4, #1
    cbdc:	bne	cbb8 <ReadCompressedInt32Data+0x4e4>
    cbe0:	b	cc18 <ReadCompressedInt32Data+0x544>
    cbe4:	cmp	sl, #1
    cbe8:	blt	cc18 <ReadCompressedInt32Data+0x544>
    cbec:	add	r9, sp, #8
    cbf0:	mov	r4, sl
    cbf4:	mov	r0, r7
    cbf8:	mov	r1, r8
    cbfc:	mov	r2, r9
    cc00:	mov	r3, r6
    cc04:	bl	31e4 <InflateData>
    cc08:	ldr	r0, [sp, #8]
    cc0c:	str	r0, [r5], #4
    cc10:	subs	r4, r4, #1
    cc14:	bne	cbf4 <ReadCompressedInt32Data+0x520>
    cc18:	mul	r0, r6, sl
    cc1c:	sub	sp, fp, #28
    cc20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000cc24 <ReadUInt32Data>:
    cc24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc28:	add	fp, sp, #28
    cc2c:	sub	sp, sp, #36	; 0x24
    cc30:	sub	sp, sp, #2048	; 0x800
    cc34:	mov	r5, r0
    cc38:	mov	r0, #0
    cc3c:	cmp	r5, #0
    cc40:	beq	cc58 <ReadUInt32Data+0x34>
    cc44:	mov	r9, r1
    cc48:	cmp	r1, #0
    cc4c:	ldrne	r1, [r5]
    cc50:	cmpne	r1, #0
    cc54:	bne	cc60 <ReadUInt32Data+0x3c>
    cc58:	sub	sp, fp, #28
    cc5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc60:	mov	r6, r3
    cc64:	mov	sl, r2
    cc68:	mov	r0, r2
    cc6c:	bl	193c <Mat_SizeOf@plt>
    cc70:	mov	r7, r0
    cc74:	sub	r0, sl, #1
    cc78:	mov	r1, #0
    cc7c:	str	r1, [sp, #20]
    cc80:	cmp	r0, #11
    cc84:	str	r7, [sp, #24]
    cc88:	str	r5, [sp, #28]
    cc8c:	bhi	de58 <ReadUInt32Data+0x1234>
    cc90:	add	r1, pc, #4
    cc94:	ldr	r0, [r1, r0, lsl #2]
    cc98:	add	pc, r1, r0
    cc9c:	.word	0x00000030
    cca0:	.word	0x00000070
    cca4:	.word	0x000000b0
    cca8:	.word	0x00000104
    ccac:	.word	0x00000158
    ccb0:	.word	0x000001ac
    ccb4:	.word	0x00000200
    ccb8:	.word	0x000011bc
    ccbc:	.word	0x0000025c
    ccc0:	.word	0x000011bc
    ccc4:	.word	0x000011bc
    ccc8:	.word	0x000002b8
    cccc:	cmp	r6, #256	; 0x100
    ccd0:	bgt	cfc0 <ReadUInt32Data+0x39c>
    ccd4:	ldr	r3, [r5]
    ccd8:	add	r4, sp, #32
    ccdc:	mov	r0, r4
    cce0:	mov	r1, r7
    cce4:	mov	r2, r6
    cce8:	bl	18d0 <fread@plt>
    ccec:	mov	r5, r0
    ccf0:	cmp	r6, #1
    ccf4:	blt	e09c <ReadUInt32Data+0x1478>
    ccf8:	ldrsb	r0, [r4], #1
    ccfc:	str	r0, [r9], #4
    cd00:	subs	r6, r6, #1
    cd04:	bne	ccf8 <ReadUInt32Data+0xd4>
    cd08:	b	e09c <ReadUInt32Data+0x1478>
    cd0c:	cmp	r6, #256	; 0x100
    cd10:	bgt	d07c <ReadUInt32Data+0x458>
    cd14:	ldr	r3, [r5]
    cd18:	add	r4, sp, #32
    cd1c:	mov	r0, r4
    cd20:	mov	r1, r7
    cd24:	mov	r2, r6
    cd28:	bl	18d0 <fread@plt>
    cd2c:	mov	r5, r0
    cd30:	cmp	r6, #1
    cd34:	blt	e09c <ReadUInt32Data+0x1478>
    cd38:	ldrb	r0, [r4], #1
    cd3c:	str	r0, [r9], #4
    cd40:	subs	r6, r6, #1
    cd44:	bne	cd38 <ReadUInt32Data+0x114>
    cd48:	b	e09c <ReadUInt32Data+0x1478>
    cd4c:	ldr	r0, [r5, #20]
    cd50:	cmp	r0, #0
    cd54:	beq	d134 <ReadUInt32Data+0x510>
    cd58:	cmp	r6, #256	; 0x100
    cd5c:	bgt	d33c <ReadUInt32Data+0x718>
    cd60:	ldr	r3, [r5]
    cd64:	add	r4, sp, #32
    cd68:	mov	r0, r4
    cd6c:	mov	r1, r7
    cd70:	mov	r2, r6
    cd74:	bl	18d0 <fread@plt>
    cd78:	mov	r5, r0
    cd7c:	cmp	r6, #1
    cd80:	blt	e09c <ReadUInt32Data+0x1478>
    cd84:	mov	r0, r4
    cd88:	bl	1c50 <Mat_int16Swap>
    cd8c:	str	r0, [r9], #4
    cd90:	subs	r6, r6, #1
    cd94:	add	r4, r4, #2
    cd98:	bne	cd84 <ReadUInt32Data+0x160>
    cd9c:	b	e09c <ReadUInt32Data+0x1478>
    cda0:	ldr	r0, [r5, #20]
    cda4:	cmp	r0, #0
    cda8:	beq	d174 <ReadUInt32Data+0x550>
    cdac:	cmp	r6, #256	; 0x100
    cdb0:	bgt	d414 <ReadUInt32Data+0x7f0>
    cdb4:	ldr	r3, [r5]
    cdb8:	add	r4, sp, #32
    cdbc:	mov	r0, r4
    cdc0:	mov	r1, r7
    cdc4:	mov	r2, r6
    cdc8:	bl	18d0 <fread@plt>
    cdcc:	mov	r5, r0
    cdd0:	cmp	r6, #1
    cdd4:	blt	e09c <ReadUInt32Data+0x1478>
    cdd8:	mov	r0, r4
    cddc:	bl	1c64 <Mat_uint16Swap>
    cde0:	str	r0, [r9], #4
    cde4:	subs	r6, r6, #1
    cde8:	add	r4, r4, #2
    cdec:	bne	cdd8 <ReadUInt32Data+0x1b4>
    cdf0:	b	e09c <ReadUInt32Data+0x1478>
    cdf4:	ldr	r0, [r5, #20]
    cdf8:	cmp	r0, #0
    cdfc:	beq	d1b4 <ReadUInt32Data+0x590>
    ce00:	cmp	r6, #256	; 0x100
    ce04:	bgt	d4ec <ReadUInt32Data+0x8c8>
    ce08:	ldr	r3, [r5]
    ce0c:	add	r4, sp, #32
    ce10:	mov	r0, r4
    ce14:	mov	r1, r7
    ce18:	mov	r2, r6
    ce1c:	bl	18d0 <fread@plt>
    ce20:	mov	r5, r0
    ce24:	cmp	r6, #1
    ce28:	blt	e09c <ReadUInt32Data+0x1478>
    ce2c:	mov	r0, r4
    ce30:	bl	1c28 <Mat_int32Swap>
    ce34:	str	r0, [r9], #4
    ce38:	subs	r6, r6, #1
    ce3c:	add	r4, r4, #4
    ce40:	bne	ce2c <ReadUInt32Data+0x208>
    ce44:	b	e09c <ReadUInt32Data+0x1478>
    ce48:	ldr	r0, [r5, #20]
    ce4c:	cmp	r0, #0
    ce50:	beq	d220 <ReadUInt32Data+0x5fc>
    ce54:	cmp	r6, #256	; 0x100
    ce58:	bgt	d5c4 <ReadUInt32Data+0x9a0>
    ce5c:	ldr	r3, [r5]
    ce60:	add	r4, sp, #32
    ce64:	mov	r0, r4
    ce68:	mov	r1, r7
    ce6c:	mov	r2, r6
    ce70:	bl	18d0 <fread@plt>
    ce74:	mov	r5, r0
    ce78:	cmp	r6, #1
    ce7c:	blt	e09c <ReadUInt32Data+0x1478>
    ce80:	mov	r0, r4
    ce84:	bl	1c3c <Mat_uint32Swap>
    ce88:	str	r0, [r9], #4
    ce8c:	subs	r6, r6, #1
    ce90:	add	r4, r4, #4
    ce94:	bne	ce80 <ReadUInt32Data+0x25c>
    ce98:	b	e09c <ReadUInt32Data+0x1478>
    ce9c:	ldr	r0, [r5, #20]
    cea0:	cmp	r0, #0
    cea4:	beq	d25c <ReadUInt32Data+0x638>
    cea8:	cmp	r6, #256	; 0x100
    ceac:	bgt	d69c <ReadUInt32Data+0xa78>
    ceb0:	ldr	r3, [r5]
    ceb4:	add	r4, sp, #32
    ceb8:	mov	r0, r4
    cebc:	mov	r1, r7
    cec0:	mov	r2, r6
    cec4:	bl	18d0 <fread@plt>
    cec8:	mov	r5, r0
    cecc:	cmp	r6, #1
    ced0:	blt	e09c <ReadUInt32Data+0x1478>
    ced4:	mov	r0, r4
    ced8:	bl	1c7c <Mat_floatSwap>
    cedc:	vcvt.u32.f32	s0, s0
    cee0:	vmov	r0, s0
    cee4:	str	r0, [r9], #4
    cee8:	subs	r6, r6, #1
    ceec:	add	r4, r4, #4
    cef0:	bne	ced4 <ReadUInt32Data+0x2b0>
    cef4:	b	e09c <ReadUInt32Data+0x1478>
    cef8:	ldr	r0, [r5, #20]
    cefc:	cmp	r0, #0
    cf00:	beq	d2a8 <ReadUInt32Data+0x684>
    cf04:	cmp	r6, #256	; 0x100
    cf08:	bgt	d784 <ReadUInt32Data+0xb60>
    cf0c:	ldr	r3, [r5]
    cf10:	add	r4, sp, #32
    cf14:	mov	r0, r4
    cf18:	mov	r1, r7
    cf1c:	mov	r2, r6
    cf20:	bl	18d0 <fread@plt>
    cf24:	mov	r5, r0
    cf28:	cmp	r6, #1
    cf2c:	blt	e09c <ReadUInt32Data+0x1478>
    cf30:	mov	r0, r4
    cf34:	bl	1cc0 <Mat_doubleSwap>
    cf38:	vcvt.u32.f64	s0, d0
    cf3c:	vmov	r0, s0
    cf40:	str	r0, [r9], #4
    cf44:	subs	r6, r6, #1
    cf48:	add	r4, r4, #8
    cf4c:	bne	cf30 <ReadUInt32Data+0x30c>
    cf50:	b	e09c <ReadUInt32Data+0x1478>
    cf54:	ldr	r0, [r5, #20]
    cf58:	cmp	r0, #0
    cf5c:	beq	d2f4 <ReadUInt32Data+0x6d0>
    cf60:	cmp	r6, #256	; 0x100
    cf64:	bgt	d870 <ReadUInt32Data+0xc4c>
    cf68:	ldr	r3, [r5]
    cf6c:	add	r4, sp, #32
    cf70:	mov	r0, r4
    cf74:	mov	r1, r7
    cf78:	mov	r2, r6
    cf7c:	bl	18d0 <fread@plt>
    cf80:	str	r0, [sp, #20]
    cf84:	cmp	r6, #1
    cf88:	blt	de58 <ReadUInt32Data+0x1234>
    cf8c:	mov	r8, r6
    cf90:	mov	r7, r9
    cf94:	mov	r0, r4
    cf98:	bl	1bbc <Mat_int64Swap>
    cf9c:	str	r0, [r7], #4
    cfa0:	subs	r6, r6, #1
    cfa4:	add	r4, r4, #8
    cfa8:	bne	cf94 <ReadUInt32Data+0x370>
    cfac:	ldr	r7, [sp, #24]
    cfb0:	mov	r6, r8
    cfb4:	cmp	sl, #13
    cfb8:	beq	de60 <ReadUInt32Data+0x123c>
    cfbc:	b	deb8 <ReadUInt32Data+0x1294>
    cfc0:	add	r1, r9, #1024	; 0x400
    cfc4:	str	r6, [sp, #8]
    cfc8:	sub	r8, r6, #256	; 0x100
    cfcc:	mov	r0, #0
    cfd0:	add	r4, sp, #32
    cfd4:	mov	r5, #0
    cfd8:	mov	sl, r0
    cfdc:	mov	r6, r1
    cfe0:	ldr	r0, [sp, #28]
    cfe4:	ldr	r3, [r0]
    cfe8:	mov	r0, r4
    cfec:	mov	r1, r7
    cff0:	mov	r2, #256	; 0x100
    cff4:	bl	18d0 <fread@plt>
    cff8:	mov	r1, #0
    cffc:	add	r2, r4, r1
    d000:	ldrsb	r2, [r2]
    d004:	str	r2, [r9, r1, lsl #2]
    d008:	add	r1, r1, #1
    d00c:	cmp	r1, #256	; 0x100
    d010:	bne	cffc <ReadUInt32Data+0x3d8>
    d014:	add	r5, r0, r5
    d018:	add	r9, r9, #1024	; 0x400
    d01c:	add	r1, r6, #1024	; 0x400
    d020:	add	r0, sl, #256	; 0x100
    d024:	cmp	r0, r8
    d028:	blt	cfd8 <ReadUInt32Data+0x3b4>
    d02c:	ldr	r2, [sp, #8]
    d030:	cmp	r0, r2
    d034:	bge	e09c <ReadUInt32Data+0x1478>
    d038:	mov	r1, r7
    d03c:	sub	r7, r2, r0
    d040:	ldr	r0, [sp, #28]
    d044:	ldr	r3, [r0]
    d048:	add	r4, sp, #32
    d04c:	mov	r0, r4
    d050:	mov	r2, r7
    d054:	bl	18d0 <fread@plt>
    d058:	add	r5, r0, r5
    d05c:	cmp	r7, #1
    d060:	blt	e098 <ReadUInt32Data+0x1474>
    d064:	sub	r0, r8, sl
    d068:	ldrsb	r1, [r4], #1
    d06c:	str	r1, [r6], #4
    d070:	subs	r0, r0, #1
    d074:	bne	d068 <ReadUInt32Data+0x444>
    d078:	b	e098 <ReadUInt32Data+0x1474>
    d07c:	add	r1, r9, #1024	; 0x400
    d080:	str	r6, [sp, #8]
    d084:	sub	r8, r6, #256	; 0x100
    d088:	mov	r0, #0
    d08c:	add	r4, sp, #32
    d090:	mov	r5, #0
    d094:	mov	sl, r0
    d098:	mov	r6, r1
    d09c:	ldr	r0, [sp, #28]
    d0a0:	ldr	r3, [r0]
    d0a4:	mov	r0, r4
    d0a8:	mov	r1, r7
    d0ac:	mov	r2, #256	; 0x100
    d0b0:	bl	18d0 <fread@plt>
    d0b4:	mov	r1, #0
    d0b8:	ldrb	r2, [r4, r1]
    d0bc:	str	r2, [r9, r1, lsl #2]
    d0c0:	add	r1, r1, #1
    d0c4:	cmp	r1, #256	; 0x100
    d0c8:	bne	d0b8 <ReadUInt32Data+0x494>
    d0cc:	add	r5, r0, r5
    d0d0:	add	r9, r9, #1024	; 0x400
    d0d4:	add	r1, r6, #1024	; 0x400
    d0d8:	add	r0, sl, #256	; 0x100
    d0dc:	cmp	r0, r8
    d0e0:	blt	d094 <ReadUInt32Data+0x470>
    d0e4:	ldr	r2, [sp, #8]
    d0e8:	cmp	r0, r2
    d0ec:	bge	e09c <ReadUInt32Data+0x1478>
    d0f0:	mov	r1, r7
    d0f4:	sub	r7, r2, r0
    d0f8:	ldr	r0, [sp, #28]
    d0fc:	ldr	r3, [r0]
    d100:	add	r4, sp, #32
    d104:	mov	r0, r4
    d108:	mov	r2, r7
    d10c:	bl	18d0 <fread@plt>
    d110:	add	r5, r0, r5
    d114:	cmp	r7, #1
    d118:	blt	e098 <ReadUInt32Data+0x1474>
    d11c:	sub	r0, r8, sl
    d120:	ldrb	r1, [r4], #1
    d124:	str	r1, [r6], #4
    d128:	subs	r0, r0, #1
    d12c:	bne	d120 <ReadUInt32Data+0x4fc>
    d130:	b	e098 <ReadUInt32Data+0x1474>
    d134:	cmp	r6, #256	; 0x100
    d138:	bgt	d984 <ReadUInt32Data+0xd60>
    d13c:	ldr	r3, [r5]
    d140:	add	r4, sp, #32
    d144:	mov	r0, r4
    d148:	mov	r1, r7
    d14c:	mov	r2, r6
    d150:	bl	18d0 <fread@plt>
    d154:	mov	r5, r0
    d158:	cmp	r6, #1
    d15c:	blt	e09c <ReadUInt32Data+0x1478>
    d160:	ldrsh	r0, [r4], #2
    d164:	str	r0, [r9], #4
    d168:	subs	r6, r6, #1
    d16c:	bne	d160 <ReadUInt32Data+0x53c>
    d170:	b	e09c <ReadUInt32Data+0x1478>
    d174:	cmp	r6, #256	; 0x100
    d178:	bgt	da40 <ReadUInt32Data+0xe1c>
    d17c:	ldr	r3, [r5]
    d180:	add	r4, sp, #32
    d184:	mov	r0, r4
    d188:	mov	r1, r7
    d18c:	mov	r2, r6
    d190:	bl	18d0 <fread@plt>
    d194:	mov	r5, r0
    d198:	cmp	r6, #1
    d19c:	blt	e09c <ReadUInt32Data+0x1478>
    d1a0:	ldrh	r0, [r4], #2
    d1a4:	str	r0, [r9], #4
    d1a8:	subs	r6, r6, #1
    d1ac:	bne	d1a0 <ReadUInt32Data+0x57c>
    d1b0:	b	e09c <ReadUInt32Data+0x1478>
    d1b4:	cmp	r6, #256	; 0x100
    d1b8:	ble	d228 <ReadUInt32Data+0x604>
    d1bc:	lsl	r4, r6, #2
    d1c0:	str	r6, [sp, #8]
    d1c4:	sub	r0, r6, #256	; 0x100
    d1c8:	str	r0, [sp, #20]
    d1cc:	mov	r6, #0
    d1d0:	add	r8, sp, #32
    d1d4:	mov	r7, #0
    d1d8:	ldr	r3, [r5]
    d1dc:	mov	r0, r8
    d1e0:	ldr	r1, [sp, #24]
    d1e4:	mov	r2, #256	; 0x100
    d1e8:	bl	18d0 <fread@plt>
    d1ec:	mov	sl, r0
    d1f0:	add	r0, r9, r6, lsl #2
    d1f4:	mov	r1, r8
    d1f8:	mov	r2, #1024	; 0x400
    d1fc:	bl	1834 <memcpy@plt>
    d200:	add	r7, sl, r7
    d204:	ldr	r5, [sp, #28]
    d208:	sub	r4, r4, #1024	; 0x400
    d20c:	add	r6, r6, #256	; 0x100
    d210:	ldr	r0, [sp, #20]
    d214:	cmp	r6, r0
    d218:	blt	d1d8 <ReadUInt32Data+0x5b4>
    d21c:	b	db5c <ReadUInt32Data+0xf38>
    d220:	cmp	r6, #256	; 0x100
    d224:	bgt	dafc <ReadUInt32Data+0xed8>
    d228:	ldr	r3, [r5]
    d22c:	add	r0, sp, #32
    d230:	mov	r1, r7
    d234:	mov	r2, r6
    d238:	bl	18d0 <fread@plt>
    d23c:	mov	r5, r0
    d240:	cmp	r6, #0
    d244:	ble	e09c <ReadUInt32Data+0x1478>
    d248:	lsl	r2, r6, #2
    d24c:	add	r1, sp, #32
    d250:	mov	r0, r9
    d254:	bl	1834 <memcpy@plt>
    d258:	b	e09c <ReadUInt32Data+0x1478>
    d25c:	cmp	r6, #256	; 0x100
    d260:	bgt	dbac <ReadUInt32Data+0xf88>
    d264:	ldr	r3, [r5]
    d268:	add	r4, sp, #32
    d26c:	mov	r0, r4
    d270:	mov	r1, r7
    d274:	mov	r2, r6
    d278:	bl	18d0 <fread@plt>
    d27c:	mov	r5, r0
    d280:	cmp	r6, #1
    d284:	blt	e09c <ReadUInt32Data+0x1478>
    d288:	vldr	s0, [r4]
    d28c:	vcvt.u32.f32	s0, s0
    d290:	vmov	r0, s0
    d294:	str	r0, [r9], #4
    d298:	subs	r6, r6, #1
    d29c:	add	r4, r4, #4
    d2a0:	bne	d288 <ReadUInt32Data+0x664>
    d2a4:	b	e09c <ReadUInt32Data+0x1478>
    d2a8:	cmp	r6, #256	; 0x100
    d2ac:	bgt	dc7c <ReadUInt32Data+0x1058>
    d2b0:	ldr	r3, [r5]
    d2b4:	add	r4, sp, #32
    d2b8:	mov	r0, r4
    d2bc:	mov	r1, r7
    d2c0:	mov	r2, r6
    d2c4:	bl	18d0 <fread@plt>
    d2c8:	mov	r5, r0
    d2cc:	cmp	r6, #1
    d2d0:	blt	e09c <ReadUInt32Data+0x1478>
    d2d4:	vldr	d16, [r4]
    d2d8:	vcvt.u32.f64	s0, d16
    d2dc:	vmov	r0, s0
    d2e0:	str	r0, [r9], #4
    d2e4:	subs	r6, r6, #1
    d2e8:	add	r4, r4, #8
    d2ec:	bne	d2d4 <ReadUInt32Data+0x6b0>
    d2f0:	b	e09c <ReadUInt32Data+0x1478>
    d2f4:	cmp	r6, #256	; 0x100
    d2f8:	bgt	dd50 <ReadUInt32Data+0x112c>
    d2fc:	ldr	r3, [r5]
    d300:	add	r4, sp, #32
    d304:	mov	r0, r4
    d308:	mov	r1, r7
    d30c:	mov	r2, r6
    d310:	bl	18d0 <fread@plt>
    d314:	str	r0, [sp, #20]
    d318:	cmp	r6, #1
    d31c:	blt	de58 <ReadUInt32Data+0x1234>
    d320:	mov	r0, r6
    d324:	mov	r1, r9
    d328:	ldr	r2, [r4], #8
    d32c:	str	r2, [r1], #4
    d330:	subs	r0, r0, #1
    d334:	bne	d328 <ReadUInt32Data+0x704>
    d338:	b	de58 <ReadUInt32Data+0x1234>
    d33c:	add	r1, r9, #1024	; 0x400
    d340:	str	r6, [sp, #8]
    d344:	sub	r0, r6, #256	; 0x100
    d348:	str	r0, [sp, #20]
    d34c:	mov	r0, #0
    d350:	add	r4, sp, #32
    d354:	mov	r5, #0
    d358:	mov	sl, r0
    d35c:	mov	r8, r1
    d360:	ldr	r0, [sp, #28]
    d364:	ldr	r3, [r0]
    d368:	mov	r0, r4
    d36c:	mov	r1, r7
    d370:	mov	r2, #256	; 0x100
    d374:	bl	18d0 <fread@plt>
    d378:	mov	r6, r0
    d37c:	mov	r7, #0
    d380:	add	r0, r4, r7
    d384:	bl	1c50 <Mat_int16Swap>
    d388:	str	r0, [r9, r7, lsl #1]
    d38c:	add	r7, r7, #2
    d390:	cmp	r7, #512	; 0x200
    d394:	bne	d380 <ReadUInt32Data+0x75c>
    d398:	add	r5, r6, r5
    d39c:	add	r9, r9, #1024	; 0x400
    d3a0:	add	r1, r8, #1024	; 0x400
    d3a4:	add	r0, sl, #256	; 0x100
    d3a8:	ldr	r2, [sp, #20]
    d3ac:	cmp	r0, r2
    d3b0:	ldr	r7, [sp, #24]
    d3b4:	blt	d358 <ReadUInt32Data+0x734>
    d3b8:	ldr	r1, [sp, #8]
    d3bc:	cmp	r0, r1
    d3c0:	bge	e09c <ReadUInt32Data+0x1478>
    d3c4:	sub	r6, r1, r0
    d3c8:	ldr	r0, [sp, #28]
    d3cc:	ldr	r3, [r0]
    d3d0:	add	r4, sp, #32
    d3d4:	mov	r0, r4
    d3d8:	mov	r1, r7
    d3dc:	mov	r2, r6
    d3e0:	bl	18d0 <fread@plt>
    d3e4:	add	r5, r0, r5
    d3e8:	cmp	r6, #1
    d3ec:	blt	e09c <ReadUInt32Data+0x1478>
    d3f0:	ldr	r0, [sp, #20]
    d3f4:	sub	r6, r0, sl
    d3f8:	mov	r0, r4
    d3fc:	bl	1c50 <Mat_int16Swap>
    d400:	str	r0, [r8], #4
    d404:	subs	r6, r6, #1
    d408:	add	r4, r4, #2
    d40c:	bne	d3f8 <ReadUInt32Data+0x7d4>
    d410:	b	e09c <ReadUInt32Data+0x1478>
    d414:	add	r1, r9, #1024	; 0x400
    d418:	str	r6, [sp, #8]
    d41c:	sub	r0, r6, #256	; 0x100
    d420:	str	r0, [sp, #20]
    d424:	mov	r0, #0
    d428:	add	r4, sp, #32
    d42c:	mov	r5, #0
    d430:	mov	sl, r0
    d434:	mov	r8, r1
    d438:	ldr	r0, [sp, #28]
    d43c:	ldr	r3, [r0]
    d440:	mov	r0, r4
    d444:	mov	r1, r7
    d448:	mov	r2, #256	; 0x100
    d44c:	bl	18d0 <fread@plt>
    d450:	mov	r6, r0
    d454:	mov	r7, #0
    d458:	add	r0, r4, r7
    d45c:	bl	1c64 <Mat_uint16Swap>
    d460:	str	r0, [r9, r7, lsl #1]
    d464:	add	r7, r7, #2
    d468:	cmp	r7, #512	; 0x200
    d46c:	bne	d458 <ReadUInt32Data+0x834>
    d470:	add	r5, r6, r5
    d474:	add	r9, r9, #1024	; 0x400
    d478:	add	r1, r8, #1024	; 0x400
    d47c:	add	r0, sl, #256	; 0x100
    d480:	ldr	r2, [sp, #20]
    d484:	cmp	r0, r2
    d488:	ldr	r7, [sp, #24]
    d48c:	blt	d430 <ReadUInt32Data+0x80c>
    d490:	ldr	r1, [sp, #8]
    d494:	cmp	r0, r1
    d498:	bge	e09c <ReadUInt32Data+0x1478>
    d49c:	sub	r6, r1, r0
    d4a0:	ldr	r0, [sp, #28]
    d4a4:	ldr	r3, [r0]
    d4a8:	add	r4, sp, #32
    d4ac:	mov	r0, r4
    d4b0:	mov	r1, r7
    d4b4:	mov	r2, r6
    d4b8:	bl	18d0 <fread@plt>
    d4bc:	add	r5, r0, r5
    d4c0:	cmp	r6, #1
    d4c4:	blt	e09c <ReadUInt32Data+0x1478>
    d4c8:	ldr	r0, [sp, #20]
    d4cc:	sub	r6, r0, sl
    d4d0:	mov	r0, r4
    d4d4:	bl	1c64 <Mat_uint16Swap>
    d4d8:	str	r0, [r8], #4
    d4dc:	subs	r6, r6, #1
    d4e0:	add	r4, r4, #2
    d4e4:	bne	d4d0 <ReadUInt32Data+0x8ac>
    d4e8:	b	e09c <ReadUInt32Data+0x1478>
    d4ec:	add	r1, r9, #1024	; 0x400
    d4f0:	str	r6, [sp, #8]
    d4f4:	sub	r0, r6, #256	; 0x100
    d4f8:	str	r0, [sp, #20]
    d4fc:	mov	r0, #0
    d500:	add	r4, sp, #32
    d504:	mov	r5, #0
    d508:	mov	sl, r0
    d50c:	mov	r8, r1
    d510:	ldr	r0, [sp, #28]
    d514:	ldr	r3, [r0]
    d518:	mov	r0, r4
    d51c:	mov	r1, r7
    d520:	mov	r2, #256	; 0x100
    d524:	bl	18d0 <fread@plt>
    d528:	mov	r6, r0
    d52c:	mov	r7, #0
    d530:	add	r0, r4, r7
    d534:	bl	1c28 <Mat_int32Swap>
    d538:	str	r0, [r9, r7]
    d53c:	add	r7, r7, #4
    d540:	cmp	r7, #1024	; 0x400
    d544:	bne	d530 <ReadUInt32Data+0x90c>
    d548:	add	r5, r6, r5
    d54c:	add	r9, r9, #1024	; 0x400
    d550:	add	r1, r8, #1024	; 0x400
    d554:	add	r0, sl, #256	; 0x100
    d558:	ldr	r2, [sp, #20]
    d55c:	cmp	r0, r2
    d560:	ldr	r7, [sp, #24]
    d564:	blt	d508 <ReadUInt32Data+0x8e4>
    d568:	ldr	r1, [sp, #8]
    d56c:	cmp	r0, r1
    d570:	bge	e09c <ReadUInt32Data+0x1478>
    d574:	sub	r6, r1, r0
    d578:	ldr	r0, [sp, #28]
    d57c:	ldr	r3, [r0]
    d580:	add	r4, sp, #32
    d584:	mov	r0, r4
    d588:	mov	r1, r7
    d58c:	mov	r2, r6
    d590:	bl	18d0 <fread@plt>
    d594:	add	r5, r0, r5
    d598:	cmp	r6, #1
    d59c:	blt	e09c <ReadUInt32Data+0x1478>
    d5a0:	ldr	r0, [sp, #20]
    d5a4:	sub	r6, r0, sl
    d5a8:	mov	r0, r4
    d5ac:	bl	1c28 <Mat_int32Swap>
    d5b0:	str	r0, [r8], #4
    d5b4:	subs	r6, r6, #1
    d5b8:	add	r4, r4, #4
    d5bc:	bne	d5a8 <ReadUInt32Data+0x984>
    d5c0:	b	e09c <ReadUInt32Data+0x1478>
    d5c4:	add	r1, r9, #1024	; 0x400
    d5c8:	str	r6, [sp, #8]
    d5cc:	sub	r0, r6, #256	; 0x100
    d5d0:	str	r0, [sp, #20]
    d5d4:	mov	r0, #0
    d5d8:	add	r4, sp, #32
    d5dc:	mov	r5, #0
    d5e0:	mov	sl, r0
    d5e4:	mov	r8, r1
    d5e8:	ldr	r0, [sp, #28]
    d5ec:	ldr	r3, [r0]
    d5f0:	mov	r0, r4
    d5f4:	mov	r1, r7
    d5f8:	mov	r2, #256	; 0x100
    d5fc:	bl	18d0 <fread@plt>
    d600:	mov	r6, r0
    d604:	mov	r7, #0
    d608:	add	r0, r4, r7
    d60c:	bl	1c3c <Mat_uint32Swap>
    d610:	str	r0, [r9, r7]
    d614:	add	r7, r7, #4
    d618:	cmp	r7, #1024	; 0x400
    d61c:	bne	d608 <ReadUInt32Data+0x9e4>
    d620:	add	r5, r6, r5
    d624:	add	r9, r9, #1024	; 0x400
    d628:	add	r1, r8, #1024	; 0x400
    d62c:	add	r0, sl, #256	; 0x100
    d630:	ldr	r2, [sp, #20]
    d634:	cmp	r0, r2
    d638:	ldr	r7, [sp, #24]
    d63c:	blt	d5e0 <ReadUInt32Data+0x9bc>
    d640:	ldr	r1, [sp, #8]
    d644:	cmp	r0, r1
    d648:	bge	e09c <ReadUInt32Data+0x1478>
    d64c:	sub	r6, r1, r0
    d650:	ldr	r0, [sp, #28]
    d654:	ldr	r3, [r0]
    d658:	add	r4, sp, #32
    d65c:	mov	r0, r4
    d660:	mov	r1, r7
    d664:	mov	r2, r6
    d668:	bl	18d0 <fread@plt>
    d66c:	add	r5, r0, r5
    d670:	cmp	r6, #1
    d674:	blt	e09c <ReadUInt32Data+0x1478>
    d678:	ldr	r0, [sp, #20]
    d67c:	sub	r6, r0, sl
    d680:	mov	r0, r4
    d684:	bl	1c3c <Mat_uint32Swap>
    d688:	str	r0, [r8], #4
    d68c:	subs	r6, r6, #1
    d690:	add	r4, r4, #4
    d694:	bne	d680 <ReadUInt32Data+0xa5c>
    d698:	b	e09c <ReadUInt32Data+0x1478>
    d69c:	add	r1, r9, #1024	; 0x400
    d6a0:	str	r6, [sp, #8]
    d6a4:	sub	r0, r6, #256	; 0x100
    d6a8:	str	r0, [sp, #20]
    d6ac:	mov	r0, #0
    d6b0:	add	r4, sp, #32
    d6b4:	mov	r5, #0
    d6b8:	mov	sl, r0
    d6bc:	mov	r8, r1
    d6c0:	ldr	r0, [sp, #28]
    d6c4:	ldr	r3, [r0]
    d6c8:	mov	r0, r4
    d6cc:	mov	r1, r7
    d6d0:	mov	r2, #256	; 0x100
    d6d4:	bl	18d0 <fread@plt>
    d6d8:	mov	r6, r0
    d6dc:	mov	r7, #0
    d6e0:	add	r0, r4, r7
    d6e4:	bl	1c7c <Mat_floatSwap>
    d6e8:	vcvt.u32.f32	s0, s0
    d6ec:	vmov	r0, s0
    d6f0:	str	r0, [r9, r7]
    d6f4:	add	r7, r7, #4
    d6f8:	cmp	r7, #1024	; 0x400
    d6fc:	bne	d6e0 <ReadUInt32Data+0xabc>
    d700:	add	r5, r6, r5
    d704:	add	r9, r9, #1024	; 0x400
    d708:	add	r1, r8, #1024	; 0x400
    d70c:	add	r0, sl, #256	; 0x100
    d710:	ldr	r2, [sp, #20]
    d714:	cmp	r0, r2
    d718:	ldr	r7, [sp, #24]
    d71c:	blt	d6b8 <ReadUInt32Data+0xa94>
    d720:	ldr	r1, [sp, #8]
    d724:	cmp	r0, r1
    d728:	bge	e09c <ReadUInt32Data+0x1478>
    d72c:	sub	r6, r1, r0
    d730:	ldr	r0, [sp, #28]
    d734:	ldr	r3, [r0]
    d738:	add	r4, sp, #32
    d73c:	mov	r0, r4
    d740:	mov	r1, r7
    d744:	mov	r2, r6
    d748:	bl	18d0 <fread@plt>
    d74c:	add	r5, r0, r5
    d750:	cmp	r6, #1
    d754:	blt	e09c <ReadUInt32Data+0x1478>
    d758:	ldr	r0, [sp, #20]
    d75c:	sub	r6, r0, sl
    d760:	mov	r0, r4
    d764:	bl	1c7c <Mat_floatSwap>
    d768:	vcvt.u32.f32	s0, s0
    d76c:	vmov	r0, s0
    d770:	str	r0, [r8], #4
    d774:	subs	r6, r6, #1
    d778:	add	r4, r4, #4
    d77c:	bne	d760 <ReadUInt32Data+0xb3c>
    d780:	b	e09c <ReadUInt32Data+0x1478>
    d784:	add	r1, r9, #1024	; 0x400
    d788:	str	r6, [sp, #8]
    d78c:	sub	r0, r6, #256	; 0x100
    d790:	str	r0, [sp, #20]
    d794:	mov	r0, #0
    d798:	mov	r5, #0
    d79c:	mov	sl, r0
    d7a0:	mov	r8, r1
    d7a4:	ldr	r0, [sp, #28]
    d7a8:	ldr	r3, [r0]
    d7ac:	add	r6, sp, #32
    d7b0:	mov	r0, r6
    d7b4:	mov	r1, r7
    d7b8:	mov	r2, #256	; 0x100
    d7bc:	bl	18d0 <fread@plt>
    d7c0:	mov	r4, r0
    d7c4:	mov	r7, #0
    d7c8:	mov	r0, r6
    d7cc:	bl	1cc0 <Mat_doubleSwap>
    d7d0:	vcvt.u32.f64	s0, d0
    d7d4:	vmov	r0, s0
    d7d8:	str	r0, [r9, r7, lsl #2]
    d7dc:	add	r6, r6, #8
    d7e0:	add	r7, r7, #1
    d7e4:	cmp	r7, #256	; 0x100
    d7e8:	bne	d7c8 <ReadUInt32Data+0xba4>
    d7ec:	add	r5, r4, r5
    d7f0:	add	r9, r9, #1024	; 0x400
    d7f4:	add	r1, r8, #1024	; 0x400
    d7f8:	add	r0, sl, #256	; 0x100
    d7fc:	ldr	r2, [sp, #20]
    d800:	cmp	r0, r2
    d804:	ldr	r7, [sp, #24]
    d808:	blt	d79c <ReadUInt32Data+0xb78>
    d80c:	ldr	r1, [sp, #8]
    d810:	cmp	r0, r1
    d814:	bge	e09c <ReadUInt32Data+0x1478>
    d818:	sub	r6, r1, r0
    d81c:	ldr	r0, [sp, #28]
    d820:	ldr	r3, [r0]
    d824:	add	r4, sp, #32
    d828:	mov	r0, r4
    d82c:	mov	r1, r7
    d830:	mov	r2, r6
    d834:	bl	18d0 <fread@plt>
    d838:	add	r5, r0, r5
    d83c:	cmp	r6, #1
    d840:	blt	e09c <ReadUInt32Data+0x1478>
    d844:	ldr	r0, [sp, #20]
    d848:	sub	r6, r0, sl
    d84c:	mov	r0, r4
    d850:	bl	1cc0 <Mat_doubleSwap>
    d854:	vcvt.u32.f64	s0, d0
    d858:	vmov	r0, s0
    d85c:	str	r0, [r8], #4
    d860:	subs	r6, r6, #1
    d864:	add	r4, r4, #8
    d868:	bne	d84c <ReadUInt32Data+0xc28>
    d86c:	b	e09c <ReadUInt32Data+0x1478>
    d870:	str	sl, [sp, #4]
    d874:	add	r1, r9, #1024	; 0x400
    d878:	str	r6, [sp, #8]
    d87c:	sub	r0, r6, #256	; 0x100
    d880:	str	r0, [sp, #12]
    d884:	mov	r0, #0
    d888:	mov	r7, r9
    d88c:	mov	r2, #0
    d890:	str	r2, [sp, #20]
    d894:	str	r0, [sp, #16]
    d898:	mov	r6, r1
    d89c:	ldr	r3, [r5]
    d8a0:	add	r4, sp, #32
    d8a4:	mov	r0, r4
    d8a8:	ldr	r1, [sp, #24]
    d8ac:	mov	r2, #256	; 0x100
    d8b0:	bl	18d0 <fread@plt>
    d8b4:	mov	r8, r0
    d8b8:	mov	sl, #0
    d8bc:	mov	r0, r4
    d8c0:	bl	1bbc <Mat_int64Swap>
    d8c4:	str	r0, [r7, sl, lsl #2]
    d8c8:	add	r4, r4, #8
    d8cc:	add	sl, sl, #1
    d8d0:	cmp	sl, #256	; 0x100
    d8d4:	bne	d8bc <ReadUInt32Data+0xc98>
    d8d8:	ldr	r0, [sp, #20]
    d8dc:	add	r0, r8, r0
    d8e0:	str	r0, [sp, #20]
    d8e4:	add	r7, r7, #1024	; 0x400
    d8e8:	add	r1, r6, #1024	; 0x400
    d8ec:	mov	r3, r6
    d8f0:	ldr	r6, [sp, #16]
    d8f4:	add	r0, r6, #256	; 0x100
    d8f8:	ldr	r2, [sp, #12]
    d8fc:	cmp	r0, r2
    d900:	ldr	r5, [sp, #28]
    d904:	blt	d894 <ReadUInt32Data+0xc70>
    d908:	str	r3, [sp]
    d90c:	ldr	r1, [sp, #8]
    d910:	cmp	r0, r1
    d914:	bge	de30 <ReadUInt32Data+0x120c>
    d918:	sub	r8, r1, r0
    d91c:	ldr	r3, [r5]
    d920:	add	r4, sp, #32
    d924:	mov	r0, r4
    d928:	ldr	r7, [sp, #24]
    d92c:	mov	r1, r7
    d930:	mov	r2, r8
    d934:	bl	18d0 <fread@plt>
    d938:	ldr	r1, [sp, #20]
    d93c:	add	r1, r0, r1
    d940:	str	r1, [sp, #20]
    d944:	cmp	r8, #1
    d948:	blt	de50 <ReadUInt32Data+0x122c>
    d94c:	ldr	r0, [sp, #12]
    d950:	sub	r7, r0, r6
    d954:	ldm	sp, {r6, sl}
    d958:	mov	r0, r4
    d95c:	bl	1bbc <Mat_int64Swap>
    d960:	str	r0, [r6], #4
    d964:	subs	r7, r7, #1
    d968:	add	r4, r4, #8
    d96c:	bne	d958 <ReadUInt32Data+0xd34>
    d970:	ldr	r7, [sp, #24]
    d974:	ldr	r6, [sp, #8]
    d978:	cmp	sl, #13
    d97c:	beq	de60 <ReadUInt32Data+0x123c>
    d980:	b	deb8 <ReadUInt32Data+0x1294>
    d984:	add	r1, r9, #1024	; 0x400
    d988:	str	r6, [sp, #8]
    d98c:	sub	r8, r6, #256	; 0x100
    d990:	mov	r0, #0
    d994:	add	r4, sp, #32
    d998:	mov	r5, #0
    d99c:	mov	sl, r0
    d9a0:	mov	r6, r1
    d9a4:	ldr	r0, [sp, #28]
    d9a8:	ldr	r3, [r0]
    d9ac:	mov	r0, r4
    d9b0:	mov	r1, r7
    d9b4:	mov	r2, #256	; 0x100
    d9b8:	bl	18d0 <fread@plt>
    d9bc:	mov	r1, #0
    d9c0:	add	r2, r4, r1
    d9c4:	ldrsh	r2, [r2]
    d9c8:	str	r2, [r9, r1, lsl #1]
    d9cc:	add	r1, r1, #2
    d9d0:	cmp	r1, #512	; 0x200
    d9d4:	bne	d9c0 <ReadUInt32Data+0xd9c>
    d9d8:	add	r5, r0, r5
    d9dc:	add	r9, r9, #1024	; 0x400
    d9e0:	add	r1, r6, #1024	; 0x400
    d9e4:	add	r0, sl, #256	; 0x100
    d9e8:	cmp	r0, r8
    d9ec:	blt	d99c <ReadUInt32Data+0xd78>
    d9f0:	ldr	r2, [sp, #8]
    d9f4:	cmp	r0, r2
    d9f8:	bge	e09c <ReadUInt32Data+0x1478>
    d9fc:	mov	r1, r7
    da00:	sub	r7, r2, r0
    da04:	ldr	r0, [sp, #28]
    da08:	ldr	r3, [r0]
    da0c:	add	r4, sp, #32
    da10:	mov	r0, r4
    da14:	mov	r2, r7
    da18:	bl	18d0 <fread@plt>
    da1c:	add	r5, r0, r5
    da20:	cmp	r7, #1
    da24:	blt	e098 <ReadUInt32Data+0x1474>
    da28:	sub	r0, r8, sl
    da2c:	ldrsh	r1, [r4], #2
    da30:	str	r1, [r6], #4
    da34:	subs	r0, r0, #1
    da38:	bne	da2c <ReadUInt32Data+0xe08>
    da3c:	b	e098 <ReadUInt32Data+0x1474>
    da40:	add	r1, r9, #1024	; 0x400
    da44:	str	r6, [sp, #8]
    da48:	sub	r8, r6, #256	; 0x100
    da4c:	mov	r0, #0
    da50:	add	r4, sp, #32
    da54:	mov	r5, #0
    da58:	mov	sl, r0
    da5c:	mov	r6, r1
    da60:	ldr	r0, [sp, #28]
    da64:	ldr	r3, [r0]
    da68:	mov	r0, r4
    da6c:	mov	r1, r7
    da70:	mov	r2, #256	; 0x100
    da74:	bl	18d0 <fread@plt>
    da78:	mov	r1, #0
    da7c:	add	r2, r4, r1
    da80:	ldrh	r2, [r2]
    da84:	str	r2, [r9, r1, lsl #1]
    da88:	add	r1, r1, #2
    da8c:	cmp	r1, #512	; 0x200
    da90:	bne	da7c <ReadUInt32Data+0xe58>
    da94:	add	r5, r0, r5
    da98:	add	r9, r9, #1024	; 0x400
    da9c:	add	r1, r6, #1024	; 0x400
    daa0:	add	r0, sl, #256	; 0x100
    daa4:	cmp	r0, r8
    daa8:	blt	da58 <ReadUInt32Data+0xe34>
    daac:	ldr	r2, [sp, #8]
    dab0:	cmp	r0, r2
    dab4:	bge	e09c <ReadUInt32Data+0x1478>
    dab8:	mov	r1, r7
    dabc:	sub	r7, r2, r0
    dac0:	ldr	r0, [sp, #28]
    dac4:	ldr	r3, [r0]
    dac8:	add	r4, sp, #32
    dacc:	mov	r0, r4
    dad0:	mov	r2, r7
    dad4:	bl	18d0 <fread@plt>
    dad8:	add	r5, r0, r5
    dadc:	cmp	r7, #1
    dae0:	blt	e098 <ReadUInt32Data+0x1474>
    dae4:	sub	r0, r8, sl
    dae8:	ldrh	r1, [r4], #2
    daec:	str	r1, [r6], #4
    daf0:	subs	r0, r0, #1
    daf4:	bne	dae8 <ReadUInt32Data+0xec4>
    daf8:	b	e098 <ReadUInt32Data+0x1474>
    dafc:	lsl	r4, r6, #2
    db00:	str	r6, [sp, #8]
    db04:	sub	r0, r6, #256	; 0x100
    db08:	str	r0, [sp, #20]
    db0c:	mov	r6, #0
    db10:	add	r8, sp, #32
    db14:	mov	r7, #0
    db18:	ldr	r3, [r5]
    db1c:	mov	r0, r8
    db20:	ldr	r1, [sp, #24]
    db24:	mov	r2, #256	; 0x100
    db28:	bl	18d0 <fread@plt>
    db2c:	mov	sl, r0
    db30:	add	r0, r9, r6, lsl #2
    db34:	mov	r1, r8
    db38:	mov	r2, #1024	; 0x400
    db3c:	bl	1834 <memcpy@plt>
    db40:	add	r7, sl, r7
    db44:	ldr	r5, [sp, #28]
    db48:	sub	r4, r4, #1024	; 0x400
    db4c:	add	r6, r6, #256	; 0x100
    db50:	ldr	r0, [sp, #20]
    db54:	cmp	r6, r0
    db58:	blt	db18 <ReadUInt32Data+0xef4>
    db5c:	mov	sl, r7
    db60:	ldr	r0, [sp, #8]
    db64:	cmp	r6, r0
    db68:	bge	de24 <ReadUInt32Data+0x1200>
    db6c:	sub	r8, r0, r6
    db70:	ldr	r3, [r5]
    db74:	add	r0, sp, #32
    db78:	ldr	r7, [sp, #24]
    db7c:	mov	r1, r7
    db80:	mov	r2, r8
    db84:	bl	18d0 <fread@plt>
    db88:	mov	r5, sl
    db8c:	add	r5, r0, sl
    db90:	cmp	r8, #0
    db94:	ble	e09c <ReadUInt32Data+0x1478>
    db98:	add	r0, r9, r6, lsl #2
    db9c:	add	r1, sp, #32
    dba0:	mov	r2, r4
    dba4:	bl	1834 <memcpy@plt>
    dba8:	b	e09c <ReadUInt32Data+0x1478>
    dbac:	add	r1, r9, #1024	; 0x400
    dbb0:	str	r6, [sp, #8]
    dbb4:	sub	r8, r6, #256	; 0x100
    dbb8:	mov	r0, #0
    dbbc:	add	r4, sp, #32
    dbc0:	mov	r5, #0
    dbc4:	mov	sl, r0
    dbc8:	mov	r6, r1
    dbcc:	ldr	r0, [sp, #28]
    dbd0:	ldr	r3, [r0]
    dbd4:	mov	r0, r4
    dbd8:	mov	r1, r7
    dbdc:	mov	r2, #256	; 0x100
    dbe0:	bl	18d0 <fread@plt>
    dbe4:	mov	r1, #0
    dbe8:	add	r2, r4, r1
    dbec:	vldr	s0, [r2]
    dbf0:	vcvt.u32.f32	s0, s0
    dbf4:	vmov	r2, s0
    dbf8:	str	r2, [r9, r1]
    dbfc:	add	r1, r1, #4
    dc00:	cmp	r1, #1024	; 0x400
    dc04:	bne	dbe8 <ReadUInt32Data+0xfc4>
    dc08:	add	r5, r0, r5
    dc0c:	add	r9, r9, #1024	; 0x400
    dc10:	add	r1, r6, #1024	; 0x400
    dc14:	add	r0, sl, #256	; 0x100
    dc18:	cmp	r0, r8
    dc1c:	blt	dbc4 <ReadUInt32Data+0xfa0>
    dc20:	ldr	r2, [sp, #8]
    dc24:	cmp	r0, r2
    dc28:	bge	e09c <ReadUInt32Data+0x1478>
    dc2c:	mov	r1, r7
    dc30:	sub	r7, r2, r0
    dc34:	ldr	r0, [sp, #28]
    dc38:	ldr	r3, [r0]
    dc3c:	add	r4, sp, #32
    dc40:	mov	r0, r4
    dc44:	mov	r2, r7
    dc48:	bl	18d0 <fread@plt>
    dc4c:	add	r5, r0, r5
    dc50:	cmp	r7, #1
    dc54:	blt	e098 <ReadUInt32Data+0x1474>
    dc58:	sub	r0, r8, sl
    dc5c:	vldr	s0, [r4]
    dc60:	vcvt.u32.f32	s0, s0
    dc64:	vmov	r1, s0
    dc68:	str	r1, [r6], #4
    dc6c:	subs	r0, r0, #1
    dc70:	add	r4, r4, #4
    dc74:	bne	dc5c <ReadUInt32Data+0x1038>
    dc78:	b	e098 <ReadUInt32Data+0x1474>
    dc7c:	add	r1, r9, #1024	; 0x400
    dc80:	str	r6, [sp, #8]
    dc84:	sub	r8, r6, #256	; 0x100
    dc88:	mov	r0, #0
    dc8c:	add	r4, sp, #32
    dc90:	mov	r5, #0
    dc94:	mov	sl, r0
    dc98:	mov	r6, r1
    dc9c:	ldr	r0, [sp, #28]
    dca0:	ldr	r3, [r0]
    dca4:	mov	r0, r4
    dca8:	mov	r1, r7
    dcac:	mov	r2, #256	; 0x100
    dcb0:	bl	18d0 <fread@plt>
    dcb4:	mov	r1, r4
    dcb8:	mov	r2, #0
    dcbc:	vldr	d16, [r1]
    dcc0:	vcvt.u32.f64	s0, d16
    dcc4:	vmov	r3, s0
    dcc8:	str	r3, [r9, r2, lsl #2]
    dccc:	add	r1, r1, #8
    dcd0:	add	r2, r2, #1
    dcd4:	cmp	r2, #256	; 0x100
    dcd8:	bne	dcbc <ReadUInt32Data+0x1098>
    dcdc:	add	r5, r0, r5
    dce0:	add	r9, r9, #1024	; 0x400
    dce4:	add	r1, r6, #1024	; 0x400
    dce8:	add	r0, sl, #256	; 0x100
    dcec:	cmp	r0, r8
    dcf0:	blt	dc94 <ReadUInt32Data+0x1070>
    dcf4:	ldr	r2, [sp, #8]
    dcf8:	cmp	r0, r2
    dcfc:	bge	e09c <ReadUInt32Data+0x1478>
    dd00:	mov	r1, r7
    dd04:	sub	r7, r2, r0
    dd08:	ldr	r0, [sp, #28]
    dd0c:	ldr	r3, [r0]
    dd10:	add	r4, sp, #32
    dd14:	mov	r0, r4
    dd18:	mov	r2, r7
    dd1c:	bl	18d0 <fread@plt>
    dd20:	add	r5, r0, r5
    dd24:	cmp	r7, #1
    dd28:	blt	e098 <ReadUInt32Data+0x1474>
    dd2c:	sub	r0, r8, sl
    dd30:	vldr	d16, [r4]
    dd34:	vcvt.u32.f64	s0, d16
    dd38:	vmov	r1, s0
    dd3c:	str	r1, [r6], #4
    dd40:	subs	r0, r0, #1
    dd44:	add	r4, r4, #8
    dd48:	bne	dd30 <ReadUInt32Data+0x110c>
    dd4c:	b	e098 <ReadUInt32Data+0x1474>
    dd50:	str	sl, [sp, #4]
    dd54:	add	r1, r9, #1024	; 0x400
    dd58:	str	r6, [sp, #8]
    dd5c:	sub	r8, r6, #256	; 0x100
    dd60:	mov	r0, #0
    dd64:	add	r4, sp, #32
    dd68:	mov	r7, r9
    dd6c:	mov	r5, #0
    dd70:	mov	sl, r0
    dd74:	mov	r6, r1
    dd78:	ldr	r0, [sp, #28]
    dd7c:	ldr	r3, [r0]
    dd80:	mov	r0, r4
    dd84:	ldr	r1, [sp, #24]
    dd88:	mov	r2, #256	; 0x100
    dd8c:	bl	18d0 <fread@plt>
    dd90:	mov	r1, r4
    dd94:	mov	r2, #0
    dd98:	ldr	r3, [r1], #8
    dd9c:	str	r3, [r7, r2, lsl #2]
    dda0:	add	r2, r2, #1
    dda4:	cmp	r2, #256	; 0x100
    dda8:	bne	dd98 <ReadUInt32Data+0x1174>
    ddac:	add	r5, r0, r5
    ddb0:	add	r7, r7, #1024	; 0x400
    ddb4:	add	r1, r6, #1024	; 0x400
    ddb8:	add	r0, sl, #256	; 0x100
    ddbc:	cmp	r0, r8
    ddc0:	blt	dd70 <ReadUInt32Data+0x114c>
    ddc4:	ldr	r1, [sp, #8]
    ddc8:	cmp	r0, r1
    ddcc:	bge	de3c <ReadUInt32Data+0x1218>
    ddd0:	sub	r2, r1, r0
    ddd4:	str	r2, [sp, #16]
    ddd8:	ldr	r0, [sp, #28]
    dddc:	ldr	r3, [r0]
    dde0:	add	r4, sp, #32
    dde4:	mov	r0, r4
    dde8:	ldr	r7, [sp, #24]
    ddec:	mov	r1, r7
    ddf0:	bl	18d0 <fread@plt>
    ddf4:	add	r5, r0, r5
    ddf8:	ldr	r0, [sp, #16]
    ddfc:	cmp	r0, #1
    de00:	str	r5, [sp, #20]
    de04:	blt	de1c <ReadUInt32Data+0x11f8>
    de08:	sub	r0, r8, sl
    de0c:	ldr	r1, [r4], #8
    de10:	str	r1, [r6], #4
    de14:	subs	r0, r0, #1
    de18:	bne	de0c <ReadUInt32Data+0x11e8>
    de1c:	ldr	r6, [sp, #8]
    de20:	b	de48 <ReadUInt32Data+0x1224>
    de24:	ldr	r7, [sp, #24]
    de28:	mov	r5, sl
    de2c:	b	e09c <ReadUInt32Data+0x1478>
    de30:	ldr	r7, [sp, #24]
    de34:	mov	r6, r1
    de38:	b	de54 <ReadUInt32Data+0x1230>
    de3c:	str	r5, [sp, #20]
    de40:	ldr	r7, [sp, #24]
    de44:	mov	r6, r1
    de48:	ldr	r5, [sp, #28]
    de4c:	b	de54 <ReadUInt32Data+0x1230>
    de50:	ldr	r6, [sp, #8]
    de54:	ldr	sl, [sp, #4]
    de58:	cmp	sl, #13
    de5c:	bne	deb8 <ReadUInt32Data+0x1294>
    de60:	ldr	r0, [r5, #20]
    de64:	cmp	r0, #0
    de68:	beq	dec0 <ReadUInt32Data+0x129c>
    de6c:	cmp	r6, #256	; 0x100
    de70:	bgt	df04 <ReadUInt32Data+0x12e0>
    de74:	ldr	r3, [r5]
    de78:	add	r4, sp, #32
    de7c:	mov	r0, r4
    de80:	mov	r1, r7
    de84:	mov	r2, r6
    de88:	bl	18d0 <fread@plt>
    de8c:	ldr	r5, [sp, #20]
    de90:	add	r5, r0, r5
    de94:	cmp	r6, #1
    de98:	blt	e09c <ReadUInt32Data+0x1478>
    de9c:	mov	r0, r4
    dea0:	bl	1c0c <Mat_uint64Swap>
    dea4:	str	r0, [r9], #4
    dea8:	subs	r6, r6, #1
    deac:	add	r4, r4, #8
    deb0:	bne	de9c <ReadUInt32Data+0x1278>
    deb4:	b	e09c <ReadUInt32Data+0x1478>
    deb8:	ldr	r5, [sp, #20]
    debc:	b	e09c <ReadUInt32Data+0x1478>
    dec0:	cmp	r6, #256	; 0x100
    dec4:	bgt	dfe0 <ReadUInt32Data+0x13bc>
    dec8:	ldr	r3, [r5]
    decc:	add	r4, sp, #32
    ded0:	mov	r0, r4
    ded4:	mov	r1, r7
    ded8:	mov	r2, r6
    dedc:	bl	18d0 <fread@plt>
    dee0:	ldr	r5, [sp, #20]
    dee4:	add	r5, r0, r5
    dee8:	cmp	r6, #1
    deec:	blt	e09c <ReadUInt32Data+0x1478>
    def0:	ldr	r0, [r4], #8
    def4:	str	r0, [r9], #4
    def8:	subs	r6, r6, #1
    defc:	bne	def0 <ReadUInt32Data+0x12cc>
    df00:	b	e09c <ReadUInt32Data+0x1478>
    df04:	add	r1, r9, #1024	; 0x400
    df08:	str	r6, [sp, #8]
    df0c:	sub	r0, r6, #256	; 0x100
    df10:	str	r0, [sp, #16]
    df14:	mov	r0, #0
    df18:	ldr	r5, [sp, #20]
    df1c:	mov	sl, r0
    df20:	mov	r8, r1
    df24:	ldr	r0, [sp, #28]
    df28:	ldr	r3, [r0]
    df2c:	add	r6, sp, #32
    df30:	mov	r0, r6
    df34:	mov	r1, r7
    df38:	mov	r2, #256	; 0x100
    df3c:	bl	18d0 <fread@plt>
    df40:	mov	r4, r0
    df44:	mov	r7, #0
    df48:	mov	r0, r6
    df4c:	bl	1c0c <Mat_uint64Swap>
    df50:	str	r0, [r9, r7, lsl #2]
    df54:	add	r6, r6, #8
    df58:	add	r7, r7, #1
    df5c:	cmp	r7, #256	; 0x100
    df60:	bne	df48 <ReadUInt32Data+0x1324>
    df64:	add	r5, r4, r5
    df68:	add	r9, r9, #1024	; 0x400
    df6c:	add	r1, r8, #1024	; 0x400
    df70:	add	r0, sl, #256	; 0x100
    df74:	ldr	r2, [sp, #16]
    df78:	cmp	r0, r2
    df7c:	ldr	r7, [sp, #24]
    df80:	blt	df1c <ReadUInt32Data+0x12f8>
    df84:	ldr	r1, [sp, #8]
    df88:	cmp	r0, r1
    df8c:	bge	e09c <ReadUInt32Data+0x1478>
    df90:	sub	r6, r1, r0
    df94:	ldr	r0, [sp, #28]
    df98:	ldr	r3, [r0]
    df9c:	add	r4, sp, #32
    dfa0:	mov	r0, r4
    dfa4:	mov	r1, r7
    dfa8:	mov	r2, r6
    dfac:	bl	18d0 <fread@plt>
    dfb0:	add	r5, r0, r5
    dfb4:	cmp	r6, #1
    dfb8:	blt	e09c <ReadUInt32Data+0x1478>
    dfbc:	ldr	r0, [sp, #16]
    dfc0:	sub	r6, r0, sl
    dfc4:	mov	r0, r4
    dfc8:	bl	1c0c <Mat_uint64Swap>
    dfcc:	str	r0, [r8], #4
    dfd0:	subs	r6, r6, #1
    dfd4:	add	r4, r4, #8
    dfd8:	bne	dfc4 <ReadUInt32Data+0x13a0>
    dfdc:	b	e09c <ReadUInt32Data+0x1478>
    dfe0:	add	r1, r9, #1024	; 0x400
    dfe4:	str	r6, [sp, #8]
    dfe8:	sub	r8, r6, #256	; 0x100
    dfec:	mov	r0, #0
    dff0:	add	r4, sp, #32
    dff4:	ldr	r5, [sp, #20]
    dff8:	mov	sl, r0
    dffc:	mov	r6, r1
    e000:	ldr	r0, [sp, #28]
    e004:	ldr	r3, [r0]
    e008:	mov	r0, r4
    e00c:	mov	r1, r7
    e010:	mov	r2, #256	; 0x100
    e014:	bl	18d0 <fread@plt>
    e018:	mov	r1, r4
    e01c:	mov	r2, #0
    e020:	ldr	r3, [r1], #8
    e024:	str	r3, [r9, r2, lsl #2]
    e028:	add	r2, r2, #1
    e02c:	cmp	r2, #256	; 0x100
    e030:	bne	e020 <ReadUInt32Data+0x13fc>
    e034:	add	r5, r0, r5
    e038:	add	r9, r9, #1024	; 0x400
    e03c:	add	r1, r6, #1024	; 0x400
    e040:	add	r0, sl, #256	; 0x100
    e044:	cmp	r0, r8
    e048:	blt	dff8 <ReadUInt32Data+0x13d4>
    e04c:	ldr	r2, [sp, #8]
    e050:	cmp	r0, r2
    e054:	bge	e09c <ReadUInt32Data+0x1478>
    e058:	mov	r1, r7
    e05c:	sub	r7, r2, r0
    e060:	ldr	r0, [sp, #28]
    e064:	ldr	r3, [r0]
    e068:	add	r4, sp, #32
    e06c:	mov	r0, r4
    e070:	mov	r2, r7
    e074:	bl	18d0 <fread@plt>
    e078:	add	r5, r0, r5
    e07c:	cmp	r7, #1
    e080:	blt	e098 <ReadUInt32Data+0x1474>
    e084:	sub	r0, r8, sl
    e088:	ldr	r1, [r4], #8
    e08c:	str	r1, [r6], #4
    e090:	subs	r0, r0, #1
    e094:	bne	e088 <ReadUInt32Data+0x1464>
    e098:	ldr	r7, [sp, #24]
    e09c:	mul	r0, r5, r7
    e0a0:	sub	sp, fp, #28
    e0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000e0a8 <ReadCompressedUInt32Data>:
    e0a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e0ac:	add	fp, sp, #28
    e0b0:	sub	sp, sp, #20
    e0b4:	mov	r7, r0
    e0b8:	mov	r0, #0
    e0bc:	cmp	r1, #0
    e0c0:	beq	e0d4 <ReadCompressedUInt32Data+0x2c>
    e0c4:	cmp	r7, #0
    e0c8:	movne	r5, r2
    e0cc:	cmpne	r2, #0
    e0d0:	bne	e0dc <ReadCompressedUInt32Data+0x34>
    e0d4:	sub	sp, fp, #28
    e0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0dc:	mov	r4, r3
    e0e0:	mov	r8, r1
    e0e4:	ldr	sl, [fp, #8]
    e0e8:	mov	r0, r3
    e0ec:	bl	193c <Mat_SizeOf@plt>
    e0f0:	mov	r6, r0
    e0f4:	sub	r0, r4, #1
    e0f8:	cmp	r0, #12
    e0fc:	bhi	e5ec <ReadCompressedUInt32Data+0x544>
    e100:	add	r1, pc, #4
    e104:	ldr	r0, [r1, r0, lsl #2]
    e108:	add	pc, r1, r0
    e10c:	.word	0x00000034
    e110:	.word	0x0000006c
    e114:	.word	0x000000a4
    e118:	.word	0x000000ec
    e11c:	.word	0x00000134
    e120:	.word	0x0000017c
    e124:	.word	0x000001c4
    e128:	.word	0x000004e0
    e12c:	.word	0x00000214
    e130:	.word	0x000004e0
    e134:	.word	0x000004e0
    e138:	.word	0x00000264
    e13c:	.word	0x00000464
    e140:	cmp	sl, #1
    e144:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e148:	add	r9, sp, #8
    e14c:	mov	r4, sl
    e150:	mov	r0, r7
    e154:	mov	r1, r8
    e158:	mov	r2, r9
    e15c:	mov	r3, r6
    e160:	bl	31e4 <InflateData>
    e164:	ldrsb	r0, [sp, #8]
    e168:	str	r0, [r5], #4
    e16c:	subs	r4, r4, #1
    e170:	bne	e150 <ReadCompressedUInt32Data+0xa8>
    e174:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e178:	cmp	sl, #1
    e17c:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e180:	add	r9, sp, #8
    e184:	mov	r4, sl
    e188:	mov	r0, r7
    e18c:	mov	r1, r8
    e190:	mov	r2, r9
    e194:	mov	r3, r6
    e198:	bl	31e4 <InflateData>
    e19c:	ldrb	r0, [sp, #8]
    e1a0:	str	r0, [r5], #4
    e1a4:	subs	r4, r4, #1
    e1a8:	bne	e188 <ReadCompressedUInt32Data+0xe0>
    e1ac:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e1b0:	ldr	r0, [r7, #20]
    e1b4:	cmp	r0, #0
    e1b8:	beq	e3c0 <ReadCompressedUInt32Data+0x318>
    e1bc:	cmp	sl, #1
    e1c0:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e1c4:	add	r9, sp, #8
    e1c8:	mov	r4, sl
    e1cc:	mov	r0, r7
    e1d0:	mov	r1, r8
    e1d4:	mov	r2, r9
    e1d8:	mov	r3, r6
    e1dc:	bl	31e4 <InflateData>
    e1e0:	mov	r0, r9
    e1e4:	bl	1c50 <Mat_int16Swap>
    e1e8:	str	r0, [r5], #4
    e1ec:	subs	r4, r4, #1
    e1f0:	bne	e1cc <ReadCompressedUInt32Data+0x124>
    e1f4:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e1f8:	ldr	r0, [r7, #20]
    e1fc:	cmp	r0, #0
    e200:	beq	e3f8 <ReadCompressedUInt32Data+0x350>
    e204:	cmp	sl, #1
    e208:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e20c:	add	r9, sp, #8
    e210:	mov	r4, sl
    e214:	mov	r0, r7
    e218:	mov	r1, r8
    e21c:	mov	r2, r9
    e220:	mov	r3, r6
    e224:	bl	31e4 <InflateData>
    e228:	mov	r0, r9
    e22c:	bl	1c64 <Mat_uint16Swap>
    e230:	str	r0, [r5], #4
    e234:	subs	r4, r4, #1
    e238:	bne	e214 <ReadCompressedUInt32Data+0x16c>
    e23c:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e240:	ldr	r0, [r7, #20]
    e244:	cmp	r0, #0
    e248:	beq	e430 <ReadCompressedUInt32Data+0x388>
    e24c:	cmp	sl, #1
    e250:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e254:	add	r9, sp, #8
    e258:	mov	r4, sl
    e25c:	mov	r0, r7
    e260:	mov	r1, r8
    e264:	mov	r2, r9
    e268:	mov	r3, r6
    e26c:	bl	31e4 <InflateData>
    e270:	mov	r0, r9
    e274:	bl	1c28 <Mat_int32Swap>
    e278:	str	r0, [r5], #4
    e27c:	subs	r4, r4, #1
    e280:	bne	e25c <ReadCompressedUInt32Data+0x1b4>
    e284:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e288:	ldr	r0, [r7, #20]
    e28c:	cmp	r0, #0
    e290:	beq	e468 <ReadCompressedUInt32Data+0x3c0>
    e294:	cmp	sl, #1
    e298:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e29c:	add	r9, sp, #8
    e2a0:	mov	r4, sl
    e2a4:	mov	r0, r7
    e2a8:	mov	r1, r8
    e2ac:	mov	r2, r9
    e2b0:	mov	r3, r6
    e2b4:	bl	31e4 <InflateData>
    e2b8:	mov	r0, r9
    e2bc:	bl	1c3c <Mat_uint32Swap>
    e2c0:	str	r0, [r5], #4
    e2c4:	subs	r4, r4, #1
    e2c8:	bne	e2a4 <ReadCompressedUInt32Data+0x1fc>
    e2cc:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e2d0:	ldr	r0, [r7, #20]
    e2d4:	cmp	r0, #0
    e2d8:	beq	e4a0 <ReadCompressedUInt32Data+0x3f8>
    e2dc:	cmp	sl, #1
    e2e0:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e2e4:	add	r9, sp, #8
    e2e8:	mov	r4, sl
    e2ec:	mov	r0, r7
    e2f0:	mov	r1, r8
    e2f4:	mov	r2, r9
    e2f8:	mov	r3, r6
    e2fc:	bl	31e4 <InflateData>
    e300:	mov	r0, r9
    e304:	bl	1c7c <Mat_floatSwap>
    e308:	vcvt.u32.f32	s0, s0
    e30c:	vmov	r0, s0
    e310:	str	r0, [r5], #4
    e314:	subs	r4, r4, #1
    e318:	bne	e2ec <ReadCompressedUInt32Data+0x244>
    e31c:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e320:	ldr	r0, [r7, #20]
    e324:	cmp	r0, #0
    e328:	beq	e4e0 <ReadCompressedUInt32Data+0x438>
    e32c:	cmp	sl, #1
    e330:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e334:	add	r9, sp, #8
    e338:	mov	r4, sl
    e33c:	mov	r0, r7
    e340:	mov	r1, r8
    e344:	mov	r2, r9
    e348:	mov	r3, r6
    e34c:	bl	31e4 <InflateData>
    e350:	mov	r0, r9
    e354:	bl	1cc0 <Mat_doubleSwap>
    e358:	vcvt.u32.f64	s0, d0
    e35c:	vmov	r0, s0
    e360:	str	r0, [r5], #4
    e364:	subs	r4, r4, #1
    e368:	bne	e33c <ReadCompressedUInt32Data+0x294>
    e36c:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e370:	ldr	r0, [r7, #20]
    e374:	cmp	r0, #0
    e378:	beq	e520 <ReadCompressedUInt32Data+0x478>
    e37c:	cmp	sl, #1
    e380:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e384:	str	r4, [sp]
    e388:	add	r4, sp, #8
    e38c:	mov	r9, r5
    e390:	str	r6, [sp, #4]
    e394:	mov	r0, r7
    e398:	mov	r1, r8
    e39c:	mov	r2, r4
    e3a0:	ldr	r3, [sp, #4]
    e3a4:	bl	31e4 <InflateData>
    e3a8:	mov	r0, r4
    e3ac:	bl	1bbc <Mat_int64Swap>
    e3b0:	str	r0, [r9], #4
    e3b4:	subs	sl, sl, #1
    e3b8:	bne	e394 <ReadCompressedUInt32Data+0x2ec>
    e3bc:	b	e55c <ReadCompressedUInt32Data+0x4b4>
    e3c0:	cmp	sl, #1
    e3c4:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e3c8:	add	r9, sp, #8
    e3cc:	mov	r4, sl
    e3d0:	mov	r0, r7
    e3d4:	mov	r1, r8
    e3d8:	mov	r2, r9
    e3dc:	mov	r3, r6
    e3e0:	bl	31e4 <InflateData>
    e3e4:	ldrsh	r0, [sp, #8]
    e3e8:	str	r0, [r5], #4
    e3ec:	subs	r4, r4, #1
    e3f0:	bne	e3d0 <ReadCompressedUInt32Data+0x328>
    e3f4:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e3f8:	cmp	sl, #1
    e3fc:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e400:	add	r9, sp, #8
    e404:	mov	r4, sl
    e408:	mov	r0, r7
    e40c:	mov	r1, r8
    e410:	mov	r2, r9
    e414:	mov	r3, r6
    e418:	bl	31e4 <InflateData>
    e41c:	ldrh	r0, [sp, #8]
    e420:	str	r0, [r5], #4
    e424:	subs	r4, r4, #1
    e428:	bne	e408 <ReadCompressedUInt32Data+0x360>
    e42c:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e430:	cmp	sl, #1
    e434:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e438:	add	r9, sp, #8
    e43c:	mov	r4, sl
    e440:	mov	r0, r7
    e444:	mov	r1, r8
    e448:	mov	r2, r9
    e44c:	mov	r3, r6
    e450:	bl	31e4 <InflateData>
    e454:	ldr	r0, [sp, #8]
    e458:	str	r0, [r5], #4
    e45c:	subs	r4, r4, #1
    e460:	bne	e440 <ReadCompressedUInt32Data+0x398>
    e464:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e468:	cmp	sl, #1
    e46c:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e470:	add	r9, sp, #8
    e474:	mov	r4, sl
    e478:	mov	r0, r7
    e47c:	mov	r1, r8
    e480:	mov	r2, r9
    e484:	mov	r3, r6
    e488:	bl	31e4 <InflateData>
    e48c:	ldr	r0, [sp, #8]
    e490:	str	r0, [r5], #4
    e494:	subs	r4, r4, #1
    e498:	bne	e478 <ReadCompressedUInt32Data+0x3d0>
    e49c:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e4a0:	cmp	sl, #1
    e4a4:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e4a8:	add	r9, sp, #8
    e4ac:	mov	r4, sl
    e4b0:	mov	r0, r7
    e4b4:	mov	r1, r8
    e4b8:	mov	r2, r9
    e4bc:	mov	r3, r6
    e4c0:	bl	31e4 <InflateData>
    e4c4:	vldr	s0, [sp, #8]
    e4c8:	vcvt.u32.f32	s0, s0
    e4cc:	vmov	r0, s0
    e4d0:	str	r0, [r5], #4
    e4d4:	subs	r4, r4, #1
    e4d8:	bne	e4b0 <ReadCompressedUInt32Data+0x408>
    e4dc:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e4e0:	cmp	sl, #1
    e4e4:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e4e8:	add	r9, sp, #8
    e4ec:	mov	r4, sl
    e4f0:	mov	r0, r7
    e4f4:	mov	r1, r8
    e4f8:	mov	r2, r9
    e4fc:	mov	r3, r6
    e500:	bl	31e4 <InflateData>
    e504:	vldr	d16, [sp, #8]
    e508:	vcvt.u32.f64	s0, d16
    e50c:	vmov	r0, s0
    e510:	str	r0, [r5], #4
    e514:	subs	r4, r4, #1
    e518:	bne	e4f0 <ReadCompressedUInt32Data+0x448>
    e51c:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e520:	cmp	sl, #1
    e524:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e528:	str	r4, [sp]
    e52c:	add	r9, sp, #8
    e530:	str	r6, [sp, #4]
    e534:	mov	r6, r5
    e538:	mov	r0, r7
    e53c:	mov	r1, r8
    e540:	mov	r2, r9
    e544:	ldr	r3, [sp, #4]
    e548:	bl	31e4 <InflateData>
    e54c:	ldr	r0, [sp, #8]
    e550:	str	r0, [r6], #4
    e554:	subs	sl, sl, #1
    e558:	bne	e538 <ReadCompressedUInt32Data+0x490>
    e55c:	ldr	r0, [sp]
    e560:	cmp	r0, #13
    e564:	ldr	sl, [fp, #8]
    e568:	ldr	r6, [sp, #4]
    e56c:	bne	e5ec <ReadCompressedUInt32Data+0x544>
    e570:	ldr	r0, [r7, #20]
    e574:	cmp	r0, #0
    e578:	beq	e5b8 <ReadCompressedUInt32Data+0x510>
    e57c:	cmp	sl, #1
    e580:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e584:	add	r9, sp, #8
    e588:	mov	r4, sl
    e58c:	mov	r0, r7
    e590:	mov	r1, r8
    e594:	mov	r2, r9
    e598:	mov	r3, r6
    e59c:	bl	31e4 <InflateData>
    e5a0:	mov	r0, r9
    e5a4:	bl	1c0c <Mat_uint64Swap>
    e5a8:	str	r0, [r5], #4
    e5ac:	subs	r4, r4, #1
    e5b0:	bne	e58c <ReadCompressedUInt32Data+0x4e4>
    e5b4:	b	e5ec <ReadCompressedUInt32Data+0x544>
    e5b8:	cmp	sl, #1
    e5bc:	blt	e5ec <ReadCompressedUInt32Data+0x544>
    e5c0:	add	r9, sp, #8
    e5c4:	mov	r4, sl
    e5c8:	mov	r0, r7
    e5cc:	mov	r1, r8
    e5d0:	mov	r2, r9
    e5d4:	mov	r3, r6
    e5d8:	bl	31e4 <InflateData>
    e5dc:	ldr	r0, [sp, #8]
    e5e0:	str	r0, [r5], #4
    e5e4:	subs	r4, r4, #1
    e5e8:	bne	e5c8 <ReadCompressedUInt32Data+0x520>
    e5ec:	mul	r0, r6, sl
    e5f0:	sub	sp, fp, #28
    e5f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000e5f8 <ReadInt16Data>:
    e5f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e5fc:	add	fp, sp, #28
    e600:	sub	sp, sp, #36	; 0x24
    e604:	sub	sp, sp, #2048	; 0x800
    e608:	mov	sl, r0
    e60c:	mov	r0, #0
    e610:	cmp	sl, #0
    e614:	beq	e62c <ReadInt16Data+0x34>
    e618:	mov	r9, r1
    e61c:	cmp	r1, #0
    e620:	ldrne	r1, [sl]
    e624:	cmpne	r1, #0
    e628:	bne	e634 <ReadInt16Data+0x3c>
    e62c:	sub	sp, fp, #28
    e630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e634:	mov	r6, r3
    e638:	mov	r5, r2
    e63c:	mov	r0, r2
    e640:	bl	193c <Mat_SizeOf@plt>
    e644:	mov	r7, r0
    e648:	sub	r0, r5, #1
    e64c:	mov	r1, #0
    e650:	str	r1, [sp, #20]
    e654:	cmp	r0, #11
    e658:	str	r7, [sp, #24]
    e65c:	str	sl, [sp, #28]
    e660:	bhi	f84c <ReadInt16Data+0x1254>
    e664:	add	r1, pc, #4
    e668:	ldr	r0, [r1, r0, lsl #2]
    e66c:	add	pc, r1, r0
    e670:	.word	0x00000030
    e674:	.word	0x00000070
    e678:	.word	0x000000b0
    e67c:	.word	0x00000104
    e680:	.word	0x00000158
    e684:	.word	0x000001ac
    e688:	.word	0x00000200
    e68c:	.word	0x000011dc
    e690:	.word	0x0000025c
    e694:	.word	0x000011dc
    e698:	.word	0x000011dc
    e69c:	.word	0x000002b8
    e6a0:	cmp	r6, #256	; 0x100
    e6a4:	bgt	e994 <ReadInt16Data+0x39c>
    e6a8:	ldr	r3, [sl]
    e6ac:	add	r4, sp, #32
    e6b0:	mov	r0, r4
    e6b4:	mov	r1, r7
    e6b8:	mov	r2, r6
    e6bc:	bl	18d0 <fread@plt>
    e6c0:	mov	r5, r0
    e6c4:	cmp	r6, #1
    e6c8:	blt	faa0 <ReadInt16Data+0x14a8>
    e6cc:	ldrsb	r0, [r4], #1
    e6d0:	strh	r0, [r9], #2
    e6d4:	subs	r6, r6, #1
    e6d8:	bne	e6cc <ReadInt16Data+0xd4>
    e6dc:	b	faa0 <ReadInt16Data+0x14a8>
    e6e0:	cmp	r6, #256	; 0x100
    e6e4:	bgt	ea54 <ReadInt16Data+0x45c>
    e6e8:	ldr	r3, [sl]
    e6ec:	add	r4, sp, #32
    e6f0:	mov	r0, r4
    e6f4:	mov	r1, r7
    e6f8:	mov	r2, r6
    e6fc:	bl	18d0 <fread@plt>
    e700:	mov	r5, r0
    e704:	cmp	r6, #1
    e708:	blt	faa0 <ReadInt16Data+0x14a8>
    e70c:	ldrb	r0, [r4], #1
    e710:	strh	r0, [r9], #2
    e714:	subs	r6, r6, #1
    e718:	bne	e70c <ReadInt16Data+0x114>
    e71c:	b	faa0 <ReadInt16Data+0x14a8>
    e720:	ldr	r0, [sl, #20]
    e724:	cmp	r0, #0
    e728:	beq	eb10 <ReadInt16Data+0x518>
    e72c:	cmp	r6, #256	; 0x100
    e730:	bgt	ed18 <ReadInt16Data+0x720>
    e734:	ldr	r3, [sl]
    e738:	add	r4, sp, #32
    e73c:	mov	r0, r4
    e740:	mov	r1, r7
    e744:	mov	r2, r6
    e748:	bl	18d0 <fread@plt>
    e74c:	mov	r5, r0
    e750:	cmp	r6, #1
    e754:	blt	faa0 <ReadInt16Data+0x14a8>
    e758:	mov	r0, r4
    e75c:	bl	1c50 <Mat_int16Swap>
    e760:	strh	r0, [r9], #2
    e764:	subs	r6, r6, #1
    e768:	add	r4, r4, #2
    e76c:	bne	e758 <ReadInt16Data+0x160>
    e770:	b	faa0 <ReadInt16Data+0x14a8>
    e774:	ldr	r0, [sl, #20]
    e778:	cmp	r0, #0
    e77c:	beq	eb7c <ReadInt16Data+0x584>
    e780:	cmp	r6, #256	; 0x100
    e784:	bgt	edf4 <ReadInt16Data+0x7fc>
    e788:	ldr	r3, [sl]
    e78c:	add	r4, sp, #32
    e790:	mov	r0, r4
    e794:	mov	r1, r7
    e798:	mov	r2, r6
    e79c:	bl	18d0 <fread@plt>
    e7a0:	mov	r5, r0
    e7a4:	cmp	r6, #1
    e7a8:	blt	faa0 <ReadInt16Data+0x14a8>
    e7ac:	mov	r0, r4
    e7b0:	bl	1c64 <Mat_uint16Swap>
    e7b4:	strh	r0, [r9], #2
    e7b8:	subs	r6, r6, #1
    e7bc:	add	r4, r4, #2
    e7c0:	bne	e7ac <ReadInt16Data+0x1b4>
    e7c4:	b	faa0 <ReadInt16Data+0x14a8>
    e7c8:	ldr	r0, [sl, #20]
    e7cc:	cmp	r0, #0
    e7d0:	beq	ebb8 <ReadInt16Data+0x5c0>
    e7d4:	cmp	r6, #256	; 0x100
    e7d8:	bgt	eed0 <ReadInt16Data+0x8d8>
    e7dc:	ldr	r3, [sl]
    e7e0:	add	r4, sp, #32
    e7e4:	mov	r0, r4
    e7e8:	mov	r1, r7
    e7ec:	mov	r2, r6
    e7f0:	bl	18d0 <fread@plt>
    e7f4:	mov	r5, r0
    e7f8:	cmp	r6, #1
    e7fc:	blt	faa0 <ReadInt16Data+0x14a8>
    e800:	mov	r0, r4
    e804:	bl	1c28 <Mat_int32Swap>
    e808:	strh	r0, [r9], #2
    e80c:	subs	r6, r6, #1
    e810:	add	r4, r4, #4
    e814:	bne	e800 <ReadInt16Data+0x208>
    e818:	b	faa0 <ReadInt16Data+0x14a8>
    e81c:	ldr	r0, [sl, #20]
    e820:	cmp	r0, #0
    e824:	beq	ebf8 <ReadInt16Data+0x600>
    e828:	cmp	r6, #256	; 0x100
    e82c:	bgt	efb4 <ReadInt16Data+0x9bc>
    e830:	ldr	r3, [sl]
    e834:	add	r4, sp, #32
    e838:	mov	r0, r4
    e83c:	mov	r1, r7
    e840:	mov	r2, r6
    e844:	bl	18d0 <fread@plt>
    e848:	mov	r5, r0
    e84c:	cmp	r6, #1
    e850:	blt	faa0 <ReadInt16Data+0x14a8>
    e854:	mov	r0, r4
    e858:	bl	1c3c <Mat_uint32Swap>
    e85c:	strh	r0, [r9], #2
    e860:	subs	r6, r6, #1
    e864:	add	r4, r4, #4
    e868:	bne	e854 <ReadInt16Data+0x25c>
    e86c:	b	faa0 <ReadInt16Data+0x14a8>
    e870:	ldr	r0, [sl, #20]
    e874:	cmp	r0, #0
    e878:	beq	ec38 <ReadInt16Data+0x640>
    e87c:	cmp	r6, #256	; 0x100
    e880:	bgt	f098 <ReadInt16Data+0xaa0>
    e884:	ldr	r3, [sl]
    e888:	add	r4, sp, #32
    e88c:	mov	r0, r4
    e890:	mov	r1, r7
    e894:	mov	r2, r6
    e898:	bl	18d0 <fread@plt>
    e89c:	mov	r5, r0
    e8a0:	cmp	r6, #1
    e8a4:	blt	faa0 <ReadInt16Data+0x14a8>
    e8a8:	mov	r0, r4
    e8ac:	bl	1c7c <Mat_floatSwap>
    e8b0:	vcvt.s32.f32	s0, s0
    e8b4:	vmov	r0, s0
    e8b8:	strh	r0, [r9], #2
    e8bc:	subs	r6, r6, #1
    e8c0:	add	r4, r4, #4
    e8c4:	bne	e8a8 <ReadInt16Data+0x2b0>
    e8c8:	b	faa0 <ReadInt16Data+0x14a8>
    e8cc:	ldr	r0, [sl, #20]
    e8d0:	cmp	r0, #0
    e8d4:	beq	ec84 <ReadInt16Data+0x68c>
    e8d8:	cmp	r6, #256	; 0x100
    e8dc:	bgt	f188 <ReadInt16Data+0xb90>
    e8e0:	ldr	r3, [sl]
    e8e4:	add	r4, sp, #32
    e8e8:	mov	r0, r4
    e8ec:	mov	r1, r7
    e8f0:	mov	r2, r6
    e8f4:	bl	18d0 <fread@plt>
    e8f8:	mov	r5, r0
    e8fc:	cmp	r6, #1
    e900:	blt	faa0 <ReadInt16Data+0x14a8>
    e904:	mov	r0, r4
    e908:	bl	1cc0 <Mat_doubleSwap>
    e90c:	vcvt.s32.f64	s0, d0
    e910:	vmov	r0, s0
    e914:	strh	r0, [r9], #2
    e918:	subs	r6, r6, #1
    e91c:	add	r4, r4, #8
    e920:	bne	e904 <ReadInt16Data+0x30c>
    e924:	b	faa0 <ReadInt16Data+0x14a8>
    e928:	ldr	r0, [sl, #20]
    e92c:	cmp	r0, #0
    e930:	beq	ecd0 <ReadInt16Data+0x6d8>
    e934:	cmp	r6, #256	; 0x100
    e938:	bgt	f278 <ReadInt16Data+0xc80>
    e93c:	ldr	r3, [sl]
    e940:	add	r4, sp, #32
    e944:	mov	r0, r4
    e948:	mov	r1, r7
    e94c:	mov	r2, r6
    e950:	bl	18d0 <fread@plt>
    e954:	str	r0, [sp, #20]
    e958:	cmp	r6, #1
    e95c:	blt	f84c <ReadInt16Data+0x1254>
    e960:	mov	r8, r6
    e964:	mov	r7, r9
    e968:	mov	r0, r4
    e96c:	bl	1bbc <Mat_int64Swap>
    e970:	strh	r0, [r7], #2
    e974:	subs	r6, r6, #1
    e978:	add	r4, r4, #8
    e97c:	bne	e968 <ReadInt16Data+0x370>
    e980:	ldr	r7, [sp, #24]
    e984:	mov	r6, r8
    e988:	cmp	r5, #13
    e98c:	beq	f854 <ReadInt16Data+0x125c>
    e990:	b	f9d4 <ReadInt16Data+0x13dc>
    e994:	add	r1, r9, #512	; 0x200
    e998:	str	r6, [sp, #8]
    e99c:	sub	r8, r6, #256	; 0x100
    e9a0:	mov	r0, #0
    e9a4:	add	r4, sp, #32
    e9a8:	mov	r5, #0
    e9ac:	mov	sl, r0
    e9b0:	mov	r6, r1
    e9b4:	ldr	r0, [sp, #28]
    e9b8:	ldr	r3, [r0]
    e9bc:	mov	r0, r4
    e9c0:	mov	r1, r7
    e9c4:	mov	r2, #256	; 0x100
    e9c8:	bl	18d0 <fread@plt>
    e9cc:	mov	r1, r9
    e9d0:	mov	r2, #0
    e9d4:	add	r3, r4, r2
    e9d8:	ldrsb	r3, [r3]
    e9dc:	strh	r3, [r1], #2
    e9e0:	add	r2, r2, #1
    e9e4:	cmp	r2, #256	; 0x100
    e9e8:	bne	e9d4 <ReadInt16Data+0x3dc>
    e9ec:	add	r5, r0, r5
    e9f0:	add	r9, r9, #512	; 0x200
    e9f4:	add	r1, r6, #512	; 0x200
    e9f8:	add	r0, sl, #256	; 0x100
    e9fc:	cmp	r0, r8
    ea00:	blt	e9ac <ReadInt16Data+0x3b4>
    ea04:	ldr	r2, [sp, #8]
    ea08:	cmp	r0, r2
    ea0c:	bge	faa0 <ReadInt16Data+0x14a8>
    ea10:	mov	r1, r7
    ea14:	sub	r7, r2, r0
    ea18:	ldr	r0, [sp, #28]
    ea1c:	ldr	r3, [r0]
    ea20:	add	r4, sp, #32
    ea24:	mov	r0, r4
    ea28:	mov	r2, r7
    ea2c:	bl	18d0 <fread@plt>
    ea30:	add	r5, r0, r5
    ea34:	cmp	r7, #1
    ea38:	blt	fa9c <ReadInt16Data+0x14a4>
    ea3c:	sub	r0, r8, sl
    ea40:	ldrsb	r1, [r4], #1
    ea44:	strh	r1, [r6], #2
    ea48:	subs	r0, r0, #1
    ea4c:	bne	ea40 <ReadInt16Data+0x448>
    ea50:	b	fa9c <ReadInt16Data+0x14a4>
    ea54:	add	r1, r9, #512	; 0x200
    ea58:	str	r6, [sp, #8]
    ea5c:	sub	r8, r6, #256	; 0x100
    ea60:	mov	r0, #0
    ea64:	add	r4, sp, #32
    ea68:	mov	r5, #0
    ea6c:	mov	sl, r0
    ea70:	mov	r6, r1
    ea74:	ldr	r0, [sp, #28]
    ea78:	ldr	r3, [r0]
    ea7c:	mov	r0, r4
    ea80:	mov	r1, r7
    ea84:	mov	r2, #256	; 0x100
    ea88:	bl	18d0 <fread@plt>
    ea8c:	mov	r1, r9
    ea90:	mov	r2, #0
    ea94:	ldrb	r3, [r4, r2]
    ea98:	strh	r3, [r1], #2
    ea9c:	add	r2, r2, #1
    eaa0:	cmp	r2, #256	; 0x100
    eaa4:	bne	ea94 <ReadInt16Data+0x49c>
    eaa8:	add	r5, r0, r5
    eaac:	add	r9, r9, #512	; 0x200
    eab0:	add	r1, r6, #512	; 0x200
    eab4:	add	r0, sl, #256	; 0x100
    eab8:	cmp	r0, r8
    eabc:	blt	ea6c <ReadInt16Data+0x474>
    eac0:	ldr	r2, [sp, #8]
    eac4:	cmp	r0, r2
    eac8:	bge	faa0 <ReadInt16Data+0x14a8>
    eacc:	mov	r1, r7
    ead0:	sub	r7, r2, r0
    ead4:	ldr	r0, [sp, #28]
    ead8:	ldr	r3, [r0]
    eadc:	add	r4, sp, #32
    eae0:	mov	r0, r4
    eae4:	mov	r2, r7
    eae8:	bl	18d0 <fread@plt>
    eaec:	add	r5, r0, r5
    eaf0:	cmp	r7, #1
    eaf4:	blt	fa9c <ReadInt16Data+0x14a4>
    eaf8:	sub	r0, r8, sl
    eafc:	ldrb	r1, [r4], #1
    eb00:	strh	r1, [r6], #2
    eb04:	subs	r0, r0, #1
    eb08:	bne	eafc <ReadInt16Data+0x504>
    eb0c:	b	fa9c <ReadInt16Data+0x14a4>
    eb10:	cmp	r6, #256	; 0x100
    eb14:	ble	eb84 <ReadInt16Data+0x58c>
    eb18:	lsl	r4, r6, #1
    eb1c:	str	r6, [sp, #8]
    eb20:	sub	r0, r6, #256	; 0x100
    eb24:	str	r0, [sp, #20]
    eb28:	mov	r6, #0
    eb2c:	add	r8, sp, #32
    eb30:	mov	r5, #0
    eb34:	ldr	r3, [sl]
    eb38:	mov	r0, r8
    eb3c:	mov	r1, r7
    eb40:	mov	r2, #256	; 0x100
    eb44:	bl	18d0 <fread@plt>
    eb48:	mov	sl, r0
    eb4c:	add	r0, r9, r6, lsl #1
    eb50:	mov	r1, r8
    eb54:	mov	r2, #512	; 0x200
    eb58:	bl	1834 <memcpy@plt>
    eb5c:	add	r5, sl, r5
    eb60:	ldr	sl, [sp, #28]
    eb64:	sub	r4, r4, #512	; 0x200
    eb68:	add	r6, r6, #256	; 0x100
    eb6c:	ldr	r0, [sp, #20]
    eb70:	cmp	r6, r0
    eb74:	blt	eb34 <ReadInt16Data+0x53c>
    eb78:	b	f3e0 <ReadInt16Data+0xde8>
    eb7c:	cmp	r6, #256	; 0x100
    eb80:	bgt	f380 <ReadInt16Data+0xd88>
    eb84:	ldr	r3, [sl]
    eb88:	add	r0, sp, #32
    eb8c:	mov	r1, r7
    eb90:	mov	r2, r6
    eb94:	bl	18d0 <fread@plt>
    eb98:	mov	r5, r0
    eb9c:	cmp	r6, #0
    eba0:	ble	faa0 <ReadInt16Data+0x14a8>
    eba4:	lsl	r2, r6, #1
    eba8:	add	r1, sp, #32
    ebac:	mov	r0, r9
    ebb0:	bl	1834 <memcpy@plt>
    ebb4:	b	faa0 <ReadInt16Data+0x14a8>
    ebb8:	cmp	r6, #256	; 0x100
    ebbc:	bgt	f428 <ReadInt16Data+0xe30>
    ebc0:	ldr	r3, [sl]
    ebc4:	add	r4, sp, #32
    ebc8:	mov	r0, r4
    ebcc:	mov	r1, r7
    ebd0:	mov	r2, r6
    ebd4:	bl	18d0 <fread@plt>
    ebd8:	mov	r5, r0
    ebdc:	cmp	r6, #1
    ebe0:	blt	faa0 <ReadInt16Data+0x14a8>
    ebe4:	ldr	r0, [r4], #4
    ebe8:	strh	r0, [r9], #2
    ebec:	subs	r6, r6, #1
    ebf0:	bne	ebe4 <ReadInt16Data+0x5ec>
    ebf4:	b	faa0 <ReadInt16Data+0x14a8>
    ebf8:	cmp	r6, #256	; 0x100
    ebfc:	bgt	f4e4 <ReadInt16Data+0xeec>
    ec00:	ldr	r3, [sl]
    ec04:	add	r4, sp, #32
    ec08:	mov	r0, r4
    ec0c:	mov	r1, r7
    ec10:	mov	r2, r6
    ec14:	bl	18d0 <fread@plt>
    ec18:	mov	r5, r0
    ec1c:	cmp	r6, #1
    ec20:	blt	faa0 <ReadInt16Data+0x14a8>
    ec24:	ldr	r0, [r4], #4
    ec28:	strh	r0, [r9], #2
    ec2c:	subs	r6, r6, #1
    ec30:	bne	ec24 <ReadInt16Data+0x62c>
    ec34:	b	faa0 <ReadInt16Data+0x14a8>
    ec38:	cmp	r6, #256	; 0x100
    ec3c:	bgt	f5a0 <ReadInt16Data+0xfa8>
    ec40:	ldr	r3, [sl]
    ec44:	add	r4, sp, #32
    ec48:	mov	r0, r4
    ec4c:	mov	r1, r7
    ec50:	mov	r2, r6
    ec54:	bl	18d0 <fread@plt>
    ec58:	mov	r5, r0
    ec5c:	cmp	r6, #1
    ec60:	blt	faa0 <ReadInt16Data+0x14a8>
    ec64:	vldr	s0, [r4]
    ec68:	vcvt.s32.f32	s0, s0
    ec6c:	vmov	r0, s0
    ec70:	strh	r0, [r9], #2
    ec74:	subs	r6, r6, #1
    ec78:	add	r4, r4, #4
    ec7c:	bne	ec64 <ReadInt16Data+0x66c>
    ec80:	b	faa0 <ReadInt16Data+0x14a8>
    ec84:	cmp	r6, #256	; 0x100
    ec88:	bgt	f67c <ReadInt16Data+0x1084>
    ec8c:	ldr	r3, [sl]
    ec90:	add	r4, sp, #32
    ec94:	mov	r0, r4
    ec98:	mov	r1, r7
    ec9c:	mov	r2, r6
    eca0:	bl	18d0 <fread@plt>
    eca4:	mov	r5, r0
    eca8:	cmp	r6, #1
    ecac:	blt	faa0 <ReadInt16Data+0x14a8>
    ecb0:	vldr	d16, [r4]
    ecb4:	vcvt.s32.f64	s0, d16
    ecb8:	vmov	r0, s0
    ecbc:	strh	r0, [r9], #2
    ecc0:	subs	r6, r6, #1
    ecc4:	add	r4, r4, #8
    ecc8:	bne	ecb0 <ReadInt16Data+0x6b8>
    eccc:	b	faa0 <ReadInt16Data+0x14a8>
    ecd0:	cmp	r6, #256	; 0x100
    ecd4:	bgt	f758 <ReadInt16Data+0x1160>
    ecd8:	ldr	r3, [sl]
    ecdc:	add	r4, sp, #32
    ece0:	mov	r0, r4
    ece4:	mov	r1, r7
    ece8:	mov	r2, r6
    ecec:	bl	18d0 <fread@plt>
    ecf0:	str	r0, [sp, #20]
    ecf4:	cmp	r6, #1
    ecf8:	blt	f84c <ReadInt16Data+0x1254>
    ecfc:	mov	r0, r6
    ed00:	mov	r1, r9
    ed04:	ldrh	r2, [r4], #8
    ed08:	strh	r2, [r1], #2
    ed0c:	subs	r0, r0, #1
    ed10:	bne	ed04 <ReadInt16Data+0x70c>
    ed14:	b	f84c <ReadInt16Data+0x1254>
    ed18:	add	r1, r9, #512	; 0x200
    ed1c:	str	r6, [sp, #8]
    ed20:	sub	r0, r6, #256	; 0x100
    ed24:	str	r0, [sp, #20]
    ed28:	mov	r0, #0
    ed2c:	add	r4, sp, #32
    ed30:	mov	r5, #0
    ed34:	mov	sl, r0
    ed38:	mov	r8, r1
    ed3c:	ldr	r0, [sp, #28]
    ed40:	ldr	r3, [r0]
    ed44:	mov	r0, r4
    ed48:	mov	r1, r7
    ed4c:	mov	r2, #256	; 0x100
    ed50:	bl	18d0 <fread@plt>
    ed54:	mov	r6, r0
    ed58:	mov	r7, #0
    ed5c:	add	r0, r4, r7
    ed60:	bl	1c50 <Mat_int16Swap>
    ed64:	add	r1, r9, r7
    ed68:	strh	r0, [r1]
    ed6c:	add	r7, r7, #2
    ed70:	cmp	r7, #512	; 0x200
    ed74:	bne	ed5c <ReadInt16Data+0x764>
    ed78:	add	r5, r6, r5
    ed7c:	add	r9, r9, #512	; 0x200
    ed80:	add	r1, r8, #512	; 0x200
    ed84:	add	r0, sl, #256	; 0x100
    ed88:	ldr	r2, [sp, #20]
    ed8c:	cmp	r0, r2
    ed90:	ldr	r7, [sp, #24]
    ed94:	blt	ed34 <ReadInt16Data+0x73c>
    ed98:	ldr	r1, [sp, #8]
    ed9c:	cmp	r0, r1
    eda0:	bge	faa0 <ReadInt16Data+0x14a8>
    eda4:	sub	r6, r1, r0
    eda8:	ldr	r0, [sp, #28]
    edac:	ldr	r3, [r0]
    edb0:	add	r4, sp, #32
    edb4:	mov	r0, r4
    edb8:	mov	r1, r7
    edbc:	mov	r2, r6
    edc0:	bl	18d0 <fread@plt>
    edc4:	add	r5, r0, r5
    edc8:	cmp	r6, #1
    edcc:	blt	faa0 <ReadInt16Data+0x14a8>
    edd0:	ldr	r0, [sp, #20]
    edd4:	sub	r6, r0, sl
    edd8:	mov	r0, r4
    eddc:	bl	1c50 <Mat_int16Swap>
    ede0:	strh	r0, [r8], #2
    ede4:	subs	r6, r6, #1
    ede8:	add	r4, r4, #2
    edec:	bne	edd8 <ReadInt16Data+0x7e0>
    edf0:	b	faa0 <ReadInt16Data+0x14a8>
    edf4:	add	r1, r9, #512	; 0x200
    edf8:	str	r6, [sp, #8]
    edfc:	sub	r0, r6, #256	; 0x100
    ee00:	str	r0, [sp, #20]
    ee04:	mov	r0, #0
    ee08:	add	r4, sp, #32
    ee0c:	mov	r5, #0
    ee10:	mov	sl, r0
    ee14:	mov	r8, r1
    ee18:	ldr	r0, [sp, #28]
    ee1c:	ldr	r3, [r0]
    ee20:	mov	r0, r4
    ee24:	mov	r1, r7
    ee28:	mov	r2, #256	; 0x100
    ee2c:	bl	18d0 <fread@plt>
    ee30:	mov	r6, r0
    ee34:	mov	r7, #0
    ee38:	add	r0, r4, r7
    ee3c:	bl	1c64 <Mat_uint16Swap>
    ee40:	add	r1, r9, r7
    ee44:	strh	r0, [r1]
    ee48:	add	r7, r7, #2
    ee4c:	cmp	r7, #512	; 0x200
    ee50:	bne	ee38 <ReadInt16Data+0x840>
    ee54:	add	r5, r6, r5
    ee58:	add	r9, r9, #512	; 0x200
    ee5c:	add	r1, r8, #512	; 0x200
    ee60:	add	r0, sl, #256	; 0x100
    ee64:	ldr	r2, [sp, #20]
    ee68:	cmp	r0, r2
    ee6c:	ldr	r7, [sp, #24]
    ee70:	blt	ee10 <ReadInt16Data+0x818>
    ee74:	ldr	r1, [sp, #8]
    ee78:	cmp	r0, r1
    ee7c:	bge	faa0 <ReadInt16Data+0x14a8>
    ee80:	sub	r6, r1, r0
    ee84:	ldr	r0, [sp, #28]
    ee88:	ldr	r3, [r0]
    ee8c:	add	r4, sp, #32
    ee90:	mov	r0, r4
    ee94:	mov	r1, r7
    ee98:	mov	r2, r6
    ee9c:	bl	18d0 <fread@plt>
    eea0:	add	r5, r0, r5
    eea4:	cmp	r6, #1
    eea8:	blt	faa0 <ReadInt16Data+0x14a8>
    eeac:	ldr	r0, [sp, #20]
    eeb0:	sub	r6, r0, sl
    eeb4:	mov	r0, r4
    eeb8:	bl	1c64 <Mat_uint16Swap>
    eebc:	strh	r0, [r8], #2
    eec0:	subs	r6, r6, #1
    eec4:	add	r4, r4, #2
    eec8:	bne	eeb4 <ReadInt16Data+0x8bc>
    eecc:	b	faa0 <ReadInt16Data+0x14a8>
    eed0:	add	r1, r9, #512	; 0x200
    eed4:	str	r6, [sp, #8]
    eed8:	sub	r0, r6, #256	; 0x100
    eedc:	str	r0, [sp, #16]
    eee0:	mov	r0, #0
    eee4:	mov	r5, #0
    eee8:	str	r0, [sp, #20]
    eeec:	mov	r8, r1
    eef0:	ldr	r3, [sl]
    eef4:	add	r6, sp, #32
    eef8:	mov	r0, r6
    eefc:	mov	r1, r7
    ef00:	mov	r2, #256	; 0x100
    ef04:	bl	18d0 <fread@plt>
    ef08:	mov	r4, r0
    ef0c:	mov	r7, #0
    ef10:	add	sl, r9, r7
    ef14:	mov	r0, r6
    ef18:	bl	1c28 <Mat_int32Swap>
    ef1c:	strh	r0, [sl]
    ef20:	add	r7, r7, #2
    ef24:	add	r6, r6, #4
    ef28:	cmp	r7, #512	; 0x200
    ef2c:	bne	ef10 <ReadInt16Data+0x918>
    ef30:	add	r5, r4, r5
    ef34:	add	r9, r9, #512	; 0x200
    ef38:	add	r1, r8, #512	; 0x200
    ef3c:	ldr	r0, [sp, #20]
    ef40:	add	r0, r0, #256	; 0x100
    ef44:	ldr	r2, [sp, #16]
    ef48:	cmp	r0, r2
    ef4c:	ldr	r7, [sp, #24]
    ef50:	ldr	sl, [sp, #28]
    ef54:	blt	eee8 <ReadInt16Data+0x8f0>
    ef58:	ldr	r1, [sp, #8]
    ef5c:	cmp	r0, r1
    ef60:	bge	faa0 <ReadInt16Data+0x14a8>
    ef64:	sub	r6, r1, r0
    ef68:	ldr	r3, [sl]
    ef6c:	add	r4, sp, #32
    ef70:	mov	r0, r4
    ef74:	mov	r1, r7
    ef78:	mov	r2, r6
    ef7c:	bl	18d0 <fread@plt>
    ef80:	add	r5, r0, r5
    ef84:	cmp	r6, #1
    ef88:	blt	faa0 <ReadInt16Data+0x14a8>
    ef8c:	ldr	r0, [sp, #16]
    ef90:	ldr	r1, [sp, #20]
    ef94:	sub	r6, r0, r1
    ef98:	mov	r0, r4
    ef9c:	bl	1c28 <Mat_int32Swap>
    efa0:	strh	r0, [r8], #2
    efa4:	subs	r6, r6, #1
    efa8:	add	r4, r4, #4
    efac:	bne	ef98 <ReadInt16Data+0x9a0>
    efb0:	b	faa0 <ReadInt16Data+0x14a8>
    efb4:	add	r1, r9, #512	; 0x200
    efb8:	str	r6, [sp, #8]
    efbc:	sub	r0, r6, #256	; 0x100
    efc0:	str	r0, [sp, #16]
    efc4:	mov	r0, #0
    efc8:	mov	r5, #0
    efcc:	str	r0, [sp, #20]
    efd0:	mov	r8, r1
    efd4:	ldr	r3, [sl]
    efd8:	add	r6, sp, #32
    efdc:	mov	r0, r6
    efe0:	mov	r1, r7
    efe4:	mov	r2, #256	; 0x100
    efe8:	bl	18d0 <fread@plt>
    efec:	mov	r4, r0
    eff0:	mov	r7, #0
    eff4:	add	sl, r9, r7
    eff8:	mov	r0, r6
    effc:	bl	1c3c <Mat_uint32Swap>
    f000:	strh	r0, [sl]
    f004:	add	r7, r7, #2
    f008:	add	r6, r6, #4
    f00c:	cmp	r7, #512	; 0x200
    f010:	bne	eff4 <ReadInt16Data+0x9fc>
    f014:	add	r5, r4, r5
    f018:	add	r9, r9, #512	; 0x200
    f01c:	add	r1, r8, #512	; 0x200
    f020:	ldr	r0, [sp, #20]
    f024:	add	r0, r0, #256	; 0x100
    f028:	ldr	r2, [sp, #16]
    f02c:	cmp	r0, r2
    f030:	ldr	r7, [sp, #24]
    f034:	ldr	sl, [sp, #28]
    f038:	blt	efcc <ReadInt16Data+0x9d4>
    f03c:	ldr	r1, [sp, #8]
    f040:	cmp	r0, r1
    f044:	bge	faa0 <ReadInt16Data+0x14a8>
    f048:	sub	r6, r1, r0
    f04c:	ldr	r3, [sl]
    f050:	add	r4, sp, #32
    f054:	mov	r0, r4
    f058:	mov	r1, r7
    f05c:	mov	r2, r6
    f060:	bl	18d0 <fread@plt>
    f064:	add	r5, r0, r5
    f068:	cmp	r6, #1
    f06c:	blt	faa0 <ReadInt16Data+0x14a8>
    f070:	ldr	r0, [sp, #16]
    f074:	ldr	r1, [sp, #20]
    f078:	sub	r6, r0, r1
    f07c:	mov	r0, r4
    f080:	bl	1c3c <Mat_uint32Swap>
    f084:	strh	r0, [r8], #2
    f088:	subs	r6, r6, #1
    f08c:	add	r4, r4, #4
    f090:	bne	f07c <ReadInt16Data+0xa84>
    f094:	b	faa0 <ReadInt16Data+0x14a8>
    f098:	add	r1, r9, #512	; 0x200
    f09c:	str	r6, [sp, #8]
    f0a0:	sub	r0, r6, #256	; 0x100
    f0a4:	str	r0, [sp, #20]
    f0a8:	mov	r0, #0
    f0ac:	mov	r5, #0
    f0b0:	mov	sl, r0
    f0b4:	mov	r8, r1
    f0b8:	ldr	r0, [sp, #28]
    f0bc:	ldr	r3, [r0]
    f0c0:	add	r6, sp, #32
    f0c4:	mov	r0, r6
    f0c8:	mov	r1, r7
    f0cc:	mov	r2, #256	; 0x100
    f0d0:	bl	18d0 <fread@plt>
    f0d4:	mov	r4, r0
    f0d8:	mov	r7, #0
    f0dc:	mov	r0, r6
    f0e0:	bl	1c7c <Mat_floatSwap>
    f0e4:	vcvt.s32.f32	s0, s0
    f0e8:	add	r0, r9, r7
    f0ec:	vmov	r1, s0
    f0f0:	strh	r1, [r0]
    f0f4:	add	r7, r7, #2
    f0f8:	add	r6, r6, #4
    f0fc:	cmp	r7, #512	; 0x200
    f100:	bne	f0dc <ReadInt16Data+0xae4>
    f104:	add	r5, r4, r5
    f108:	add	r9, r9, #512	; 0x200
    f10c:	add	r1, r8, #512	; 0x200
    f110:	add	r0, sl, #256	; 0x100
    f114:	ldr	r2, [sp, #20]
    f118:	cmp	r0, r2
    f11c:	ldr	r7, [sp, #24]
    f120:	blt	f0b0 <ReadInt16Data+0xab8>
    f124:	ldr	r1, [sp, #8]
    f128:	cmp	r0, r1
    f12c:	bge	faa0 <ReadInt16Data+0x14a8>
    f130:	sub	r6, r1, r0
    f134:	ldr	r0, [sp, #28]
    f138:	ldr	r3, [r0]
    f13c:	add	r4, sp, #32
    f140:	mov	r0, r4
    f144:	mov	r1, r7
    f148:	mov	r2, r6
    f14c:	bl	18d0 <fread@plt>
    f150:	add	r5, r0, r5
    f154:	cmp	r6, #1
    f158:	blt	faa0 <ReadInt16Data+0x14a8>
    f15c:	ldr	r0, [sp, #20]
    f160:	sub	r6, r0, sl
    f164:	mov	r0, r4
    f168:	bl	1c7c <Mat_floatSwap>
    f16c:	vcvt.s32.f32	s0, s0
    f170:	vmov	r0, s0
    f174:	strh	r0, [r8], #2
    f178:	subs	r6, r6, #1
    f17c:	add	r4, r4, #4
    f180:	bne	f164 <ReadInt16Data+0xb6c>
    f184:	b	faa0 <ReadInt16Data+0x14a8>
    f188:	add	r1, r9, #512	; 0x200
    f18c:	str	r6, [sp, #8]
    f190:	sub	r0, r6, #256	; 0x100
    f194:	str	r0, [sp, #20]
    f198:	mov	r0, #0
    f19c:	mov	r5, #0
    f1a0:	mov	sl, r0
    f1a4:	mov	r8, r1
    f1a8:	ldr	r0, [sp, #28]
    f1ac:	ldr	r3, [r0]
    f1b0:	add	r6, sp, #32
    f1b4:	mov	r0, r6
    f1b8:	mov	r1, r7
    f1bc:	mov	r2, #256	; 0x100
    f1c0:	bl	18d0 <fread@plt>
    f1c4:	mov	r4, r0
    f1c8:	mov	r7, #0
    f1cc:	mov	r0, r6
    f1d0:	bl	1cc0 <Mat_doubleSwap>
    f1d4:	vcvt.s32.f64	s0, d0
    f1d8:	add	r0, r9, r7
    f1dc:	vmov	r1, s0
    f1e0:	strh	r1, [r0]
    f1e4:	add	r7, r7, #2
    f1e8:	add	r6, r6, #8
    f1ec:	cmp	r7, #512	; 0x200
    f1f0:	bne	f1cc <ReadInt16Data+0xbd4>
    f1f4:	add	r5, r4, r5
    f1f8:	add	r9, r9, #512	; 0x200
    f1fc:	add	r1, r8, #512	; 0x200
    f200:	add	r0, sl, #256	; 0x100
    f204:	ldr	r2, [sp, #20]
    f208:	cmp	r0, r2
    f20c:	ldr	r7, [sp, #24]
    f210:	blt	f1a0 <ReadInt16Data+0xba8>
    f214:	ldr	r1, [sp, #8]
    f218:	cmp	r0, r1
    f21c:	bge	faa0 <ReadInt16Data+0x14a8>
    f220:	sub	r6, r1, r0
    f224:	ldr	r0, [sp, #28]
    f228:	ldr	r3, [r0]
    f22c:	add	r4, sp, #32
    f230:	mov	r0, r4
    f234:	mov	r1, r7
    f238:	mov	r2, r6
    f23c:	bl	18d0 <fread@plt>
    f240:	add	r5, r0, r5
    f244:	cmp	r6, #1
    f248:	blt	faa0 <ReadInt16Data+0x14a8>
    f24c:	ldr	r0, [sp, #20]
    f250:	sub	r6, r0, sl
    f254:	mov	r0, r4
    f258:	bl	1cc0 <Mat_doubleSwap>
    f25c:	vcvt.s32.f64	s0, d0
    f260:	vmov	r0, s0
    f264:	strh	r0, [r8], #2
    f268:	subs	r6, r6, #1
    f26c:	add	r4, r4, #8
    f270:	bne	f254 <ReadInt16Data+0xc5c>
    f274:	b	faa0 <ReadInt16Data+0x14a8>
    f278:	str	r5, [sp, #4]
    f27c:	add	r1, r9, #512	; 0x200
    f280:	str	r6, [sp, #8]
    f284:	sub	r0, r6, #256	; 0x100
    f288:	str	r0, [sp, #12]
    f28c:	mov	r0, #0
    f290:	mov	r7, r9
    f294:	mov	r2, #0
    f298:	str	r2, [sp, #20]
    f29c:	mov	r5, r0
    f2a0:	str	r1, [sp, #16]
    f2a4:	ldr	r3, [sl]
    f2a8:	add	r4, sp, #32
    f2ac:	mov	r0, r4
    f2b0:	ldr	r1, [sp, #24]
    f2b4:	mov	r2, #256	; 0x100
    f2b8:	bl	18d0 <fread@plt>
    f2bc:	mov	r8, r0
    f2c0:	mov	sl, #0
    f2c4:	add	r6, r7, sl
    f2c8:	mov	r0, r4
    f2cc:	bl	1bbc <Mat_int64Swap>
    f2d0:	strh	r0, [r6]
    f2d4:	add	sl, sl, #2
    f2d8:	add	r4, r4, #8
    f2dc:	cmp	sl, #512	; 0x200
    f2e0:	bne	f2c4 <ReadInt16Data+0xccc>
    f2e4:	ldr	r0, [sp, #20]
    f2e8:	add	r0, r8, r0
    f2ec:	str	r0, [sp, #20]
    f2f0:	add	r7, r7, #512	; 0x200
    f2f4:	ldr	r0, [sp, #16]
    f2f8:	add	r1, r0, #512	; 0x200
    f2fc:	mov	r0, r5
    f300:	add	r0, r5, #256	; 0x100
    f304:	ldr	r2, [sp, #12]
    f308:	cmp	r0, r2
    f30c:	ldr	sl, [sp, #28]
    f310:	blt	f29c <ReadInt16Data+0xca4>
    f314:	ldr	r6, [sp, #8]
    f318:	cmp	r0, r6
    f31c:	bge	f378 <ReadInt16Data+0xd80>
    f320:	sub	r8, r6, r0
    f324:	ldr	r3, [sl]
    f328:	add	r4, sp, #32
    f32c:	mov	r0, r4
    f330:	ldr	r7, [sp, #24]
    f334:	mov	r1, r7
    f338:	mov	r2, r8
    f33c:	bl	18d0 <fread@plt>
    f340:	ldr	r1, [sp, #20]
    f344:	add	r1, r0, r1
    f348:	str	r1, [sp, #20]
    f34c:	cmp	r8, #1
    f350:	blt	f848 <ReadInt16Data+0x1250>
    f354:	ldr	r0, [sp, #12]
    f358:	sub	r7, r0, r5
    f35c:	ldr	r5, [sp, #16]
    f360:	mov	r0, r4
    f364:	bl	1bbc <Mat_int64Swap>
    f368:	strh	r0, [r5], #2
    f36c:	subs	r7, r7, #1
    f370:	add	r4, r4, #8
    f374:	bne	f360 <ReadInt16Data+0xd68>
    f378:	ldr	r7, [sp, #24]
    f37c:	b	f848 <ReadInt16Data+0x1250>
    f380:	lsl	r4, r6, #1
    f384:	str	r6, [sp, #8]
    f388:	sub	r0, r6, #256	; 0x100
    f38c:	str	r0, [sp, #20]
    f390:	mov	r6, #0
    f394:	add	r8, sp, #32
    f398:	mov	r5, #0
    f39c:	ldr	r3, [sl]
    f3a0:	mov	r0, r8
    f3a4:	mov	r1, r7
    f3a8:	mov	r2, #256	; 0x100
    f3ac:	bl	18d0 <fread@plt>
    f3b0:	mov	sl, r0
    f3b4:	add	r0, r9, r6, lsl #1
    f3b8:	mov	r1, r8
    f3bc:	mov	r2, #512	; 0x200
    f3c0:	bl	1834 <memcpy@plt>
    f3c4:	add	r5, sl, r5
    f3c8:	ldr	sl, [sp, #28]
    f3cc:	sub	r4, r4, #512	; 0x200
    f3d0:	add	r6, r6, #256	; 0x100
    f3d4:	ldr	r0, [sp, #20]
    f3d8:	cmp	r6, r0
    f3dc:	blt	f39c <ReadInt16Data+0xda4>
    f3e0:	ldr	r0, [sp, #8]
    f3e4:	cmp	r6, r0
    f3e8:	bge	fa9c <ReadInt16Data+0x14a4>
    f3ec:	sub	r8, r0, r6
    f3f0:	ldr	r3, [sl]
    f3f4:	add	r0, sp, #32
    f3f8:	ldr	r7, [sp, #24]
    f3fc:	mov	r1, r7
    f400:	mov	r2, r8
    f404:	bl	18d0 <fread@plt>
    f408:	add	r5, r0, r5
    f40c:	cmp	r8, #0
    f410:	ble	faa0 <ReadInt16Data+0x14a8>
    f414:	add	r0, r9, r6, lsl #1
    f418:	add	r1, sp, #32
    f41c:	mov	r2, r4
    f420:	bl	1834 <memcpy@plt>
    f424:	b	faa0 <ReadInt16Data+0x14a8>
    f428:	add	r1, r9, #512	; 0x200
    f42c:	str	r6, [sp, #8]
    f430:	sub	r8, r6, #256	; 0x100
    f434:	mov	r0, #0
    f438:	add	r4, sp, #32
    f43c:	mov	r5, #0
    f440:	mov	sl, r0
    f444:	mov	r6, r1
    f448:	ldr	r0, [sp, #28]
    f44c:	ldr	r3, [r0]
    f450:	mov	r0, r4
    f454:	mov	r1, r7
    f458:	mov	r2, #256	; 0x100
    f45c:	bl	18d0 <fread@plt>
    f460:	mov	r1, #0
    f464:	ldr	r2, [r4, r1, lsl #1]
    f468:	add	r3, r9, r1
    f46c:	strh	r2, [r3]
    f470:	add	r1, r1, #2
    f474:	cmp	r1, #512	; 0x200
    f478:	bne	f464 <ReadInt16Data+0xe6c>
    f47c:	add	r5, r0, r5
    f480:	add	r9, r9, #512	; 0x200
    f484:	add	r1, r6, #512	; 0x200
    f488:	add	r0, sl, #256	; 0x100
    f48c:	cmp	r0, r8
    f490:	blt	f440 <ReadInt16Data+0xe48>
    f494:	ldr	r2, [sp, #8]
    f498:	cmp	r0, r2
    f49c:	bge	faa0 <ReadInt16Data+0x14a8>
    f4a0:	mov	r1, r7
    f4a4:	sub	r7, r2, r0
    f4a8:	ldr	r0, [sp, #28]
    f4ac:	ldr	r3, [r0]
    f4b0:	add	r4, sp, #32
    f4b4:	mov	r0, r4
    f4b8:	mov	r2, r7
    f4bc:	bl	18d0 <fread@plt>
    f4c0:	add	r5, r0, r5
    f4c4:	cmp	r7, #1
    f4c8:	blt	fa9c <ReadInt16Data+0x14a4>
    f4cc:	sub	r0, r8, sl
    f4d0:	ldr	r1, [r4], #4
    f4d4:	strh	r1, [r6], #2
    f4d8:	subs	r0, r0, #1
    f4dc:	bne	f4d0 <ReadInt16Data+0xed8>
    f4e0:	b	fa9c <ReadInt16Data+0x14a4>
    f4e4:	add	r1, r9, #512	; 0x200
    f4e8:	str	r6, [sp, #8]
    f4ec:	sub	r8, r6, #256	; 0x100
    f4f0:	mov	r0, #0
    f4f4:	add	r4, sp, #32
    f4f8:	mov	r5, #0
    f4fc:	mov	sl, r0
    f500:	mov	r6, r1
    f504:	ldr	r0, [sp, #28]
    f508:	ldr	r3, [r0]
    f50c:	mov	r0, r4
    f510:	mov	r1, r7
    f514:	mov	r2, #256	; 0x100
    f518:	bl	18d0 <fread@plt>
    f51c:	mov	r1, #0
    f520:	ldr	r2, [r4, r1, lsl #1]
    f524:	add	r3, r9, r1
    f528:	strh	r2, [r3]
    f52c:	add	r1, r1, #2
    f530:	cmp	r1, #512	; 0x200
    f534:	bne	f520 <ReadInt16Data+0xf28>
    f538:	add	r5, r0, r5
    f53c:	add	r9, r9, #512	; 0x200
    f540:	add	r1, r6, #512	; 0x200
    f544:	add	r0, sl, #256	; 0x100
    f548:	cmp	r0, r8
    f54c:	blt	f4fc <ReadInt16Data+0xf04>
    f550:	ldr	r2, [sp, #8]
    f554:	cmp	r0, r2
    f558:	bge	faa0 <ReadInt16Data+0x14a8>
    f55c:	mov	r1, r7
    f560:	sub	r7, r2, r0
    f564:	ldr	r0, [sp, #28]
    f568:	ldr	r3, [r0]
    f56c:	add	r4, sp, #32
    f570:	mov	r0, r4
    f574:	mov	r2, r7
    f578:	bl	18d0 <fread@plt>
    f57c:	add	r5, r0, r5
    f580:	cmp	r7, #1
    f584:	blt	fa9c <ReadInt16Data+0x14a4>
    f588:	sub	r0, r8, sl
    f58c:	ldr	r1, [r4], #4
    f590:	strh	r1, [r6], #2
    f594:	subs	r0, r0, #1
    f598:	bne	f58c <ReadInt16Data+0xf94>
    f59c:	b	fa9c <ReadInt16Data+0x14a4>
    f5a0:	add	r1, r9, #512	; 0x200
    f5a4:	str	r6, [sp, #8]
    f5a8:	sub	r8, r6, #256	; 0x100
    f5ac:	mov	r0, #0
    f5b0:	add	r4, sp, #32
    f5b4:	mov	r5, #0
    f5b8:	mov	sl, r0
    f5bc:	mov	r6, r1
    f5c0:	ldr	r0, [sp, #28]
    f5c4:	ldr	r3, [r0]
    f5c8:	mov	r0, r4
    f5cc:	mov	r1, r7
    f5d0:	mov	r2, #256	; 0x100
    f5d4:	bl	18d0 <fread@plt>
    f5d8:	mov	r1, #0
    f5dc:	mov	r2, r4
    f5e0:	vldr	s0, [r2]
    f5e4:	vcvt.s32.f32	s0, s0
    f5e8:	add	r3, r9, r1
    f5ec:	vmov	r7, s0
    f5f0:	strh	r7, [r3]
    f5f4:	add	r1, r1, #2
    f5f8:	add	r2, r2, #4
    f5fc:	cmp	r1, #512	; 0x200
    f600:	bne	f5e0 <ReadInt16Data+0xfe8>
    f604:	add	r5, r0, r5
    f608:	add	r9, r9, #512	; 0x200
    f60c:	add	r1, r6, #512	; 0x200
    f610:	add	r0, sl, #256	; 0x100
    f614:	cmp	r0, r8
    f618:	ldr	r7, [sp, #24]
    f61c:	blt	f5b8 <ReadInt16Data+0xfc0>
    f620:	ldr	r2, [sp, #8]
    f624:	cmp	r0, r2
    f628:	bge	faa0 <ReadInt16Data+0x14a8>
    f62c:	mov	r1, r7
    f630:	sub	r7, r2, r0
    f634:	ldr	r0, [sp, #28]
    f638:	ldr	r3, [r0]
    f63c:	add	r4, sp, #32
    f640:	mov	r0, r4
    f644:	mov	r2, r7
    f648:	bl	18d0 <fread@plt>
    f64c:	add	r5, r0, r5
    f650:	cmp	r7, #1
    f654:	blt	fa9c <ReadInt16Data+0x14a4>
    f658:	sub	r0, r8, sl
    f65c:	vldr	s0, [r4]
    f660:	vcvt.s32.f32	s0, s0
    f664:	vmov	r1, s0
    f668:	strh	r1, [r6], #2
    f66c:	subs	r0, r0, #1
    f670:	add	r4, r4, #4
    f674:	bne	f65c <ReadInt16Data+0x1064>
    f678:	b	fa9c <ReadInt16Data+0x14a4>
    f67c:	add	r1, r9, #512	; 0x200
    f680:	str	r6, [sp, #8]
    f684:	sub	r8, r6, #256	; 0x100
    f688:	mov	r0, #0
    f68c:	add	r4, sp, #32
    f690:	mov	r5, #0
    f694:	mov	sl, r0
    f698:	mov	r6, r1
    f69c:	ldr	r0, [sp, #28]
    f6a0:	ldr	r3, [r0]
    f6a4:	mov	r0, r4
    f6a8:	mov	r1, r7
    f6ac:	mov	r2, #256	; 0x100
    f6b0:	bl	18d0 <fread@plt>
    f6b4:	mov	r1, #0
    f6b8:	mov	r2, r4
    f6bc:	vldr	d16, [r2]
    f6c0:	vcvt.s32.f64	s0, d16
    f6c4:	add	r3, r9, r1
    f6c8:	vmov	r7, s0
    f6cc:	strh	r7, [r3]
    f6d0:	add	r1, r1, #2
    f6d4:	add	r2, r2, #8
    f6d8:	cmp	r1, #512	; 0x200
    f6dc:	bne	f6bc <ReadInt16Data+0x10c4>
    f6e0:	add	r5, r0, r5
    f6e4:	add	r9, r9, #512	; 0x200
    f6e8:	add	r1, r6, #512	; 0x200
    f6ec:	add	r0, sl, #256	; 0x100
    f6f0:	cmp	r0, r8
    f6f4:	ldr	r7, [sp, #24]
    f6f8:	blt	f694 <ReadInt16Data+0x109c>
    f6fc:	ldr	r2, [sp, #8]
    f700:	cmp	r0, r2
    f704:	bge	faa0 <ReadInt16Data+0x14a8>
    f708:	mov	r1, r7
    f70c:	sub	r7, r2, r0
    f710:	ldr	r0, [sp, #28]
    f714:	ldr	r3, [r0]
    f718:	add	r4, sp, #32
    f71c:	mov	r0, r4
    f720:	mov	r2, r7
    f724:	bl	18d0 <fread@plt>
    f728:	add	r5, r0, r5
    f72c:	cmp	r7, #1
    f730:	blt	fa9c <ReadInt16Data+0x14a4>
    f734:	sub	r0, r8, sl
    f738:	vldr	d16, [r4]
    f73c:	vcvt.s32.f64	s0, d16
    f740:	vmov	r1, s0
    f744:	strh	r1, [r6], #2
    f748:	subs	r0, r0, #1
    f74c:	add	r4, r4, #8
    f750:	bne	f738 <ReadInt16Data+0x1140>
    f754:	b	fa9c <ReadInt16Data+0x14a4>
    f758:	str	r5, [sp, #4]
    f75c:	add	r1, r9, #512	; 0x200
    f760:	str	r6, [sp, #8]
    f764:	sub	r0, r6, #256	; 0x100
    f768:	str	r0, [sp, #16]
    f76c:	mov	r0, #0
    f770:	add	r8, sp, #32
    f774:	mov	r7, r9
    f778:	mov	r5, #0
    f77c:	mov	sl, r0
    f780:	mov	r6, r1
    f784:	ldr	r0, [sp, #28]
    f788:	ldr	r3, [r0]
    f78c:	mov	r0, r8
    f790:	ldr	r1, [sp, #24]
    f794:	mov	r2, #256	; 0x100
    f798:	bl	18d0 <fread@plt>
    f79c:	mov	r1, #0
    f7a0:	mov	r2, r8
    f7a4:	add	r3, r7, r1
    f7a8:	ldrh	r4, [r2], #8
    f7ac:	strh	r4, [r3]
    f7b0:	add	r1, r1, #2
    f7b4:	cmp	r1, #512	; 0x200
    f7b8:	bne	f7a4 <ReadInt16Data+0x11ac>
    f7bc:	add	r5, r0, r5
    f7c0:	add	r7, r7, #512	; 0x200
    f7c4:	add	r1, r6, #512	; 0x200
    f7c8:	add	r0, sl, #256	; 0x100
    f7cc:	ldr	r2, [sp, #16]
    f7d0:	cmp	r0, r2
    f7d4:	blt	f77c <ReadInt16Data+0x1184>
    f7d8:	ldr	r1, [sp, #8]
    f7dc:	cmp	r0, r1
    f7e0:	bge	f838 <ReadInt16Data+0x1240>
    f7e4:	sub	r8, r1, r0
    f7e8:	ldr	r0, [sp, #28]
    f7ec:	ldr	r3, [r0]
    f7f0:	add	r4, sp, #32
    f7f4:	mov	r0, r4
    f7f8:	ldr	r7, [sp, #24]
    f7fc:	mov	r1, r7
    f800:	mov	r2, r8
    f804:	bl	18d0 <fread@plt>
    f808:	add	r5, r0, r5
    f80c:	cmp	r8, #1
    f810:	str	r5, [sp, #20]
    f814:	blt	f830 <ReadInt16Data+0x1238>
    f818:	ldr	r0, [sp, #16]
    f81c:	sub	r0, r0, sl
    f820:	ldrh	r1, [r4], #8
    f824:	strh	r1, [r6], #2
    f828:	subs	r0, r0, #1
    f82c:	bne	f820 <ReadInt16Data+0x1228>
    f830:	ldr	r6, [sp, #8]
    f834:	b	f844 <ReadInt16Data+0x124c>
    f838:	str	r5, [sp, #20]
    f83c:	ldr	r7, [sp, #24]
    f840:	mov	r6, r1
    f844:	ldr	sl, [sp, #28]
    f848:	ldr	r5, [sp, #4]
    f84c:	cmp	r5, #13
    f850:	bne	f9d4 <ReadInt16Data+0x13dc>
    f854:	ldr	r0, [sl, #20]
    f858:	cmp	r0, #0
    f85c:	beq	f8ac <ReadInt16Data+0x12b4>
    f860:	cmp	r6, #256	; 0x100
    f864:	bgt	f8f0 <ReadInt16Data+0x12f8>
    f868:	ldr	r3, [sl]
    f86c:	add	r4, sp, #32
    f870:	mov	r0, r4
    f874:	mov	r1, r7
    f878:	mov	r2, r6
    f87c:	bl	18d0 <fread@plt>
    f880:	ldr	r5, [sp, #20]
    f884:	add	r5, r0, r5
    f888:	cmp	r6, #1
    f88c:	blt	faa0 <ReadInt16Data+0x14a8>
    f890:	mov	r0, r4
    f894:	bl	1c0c <Mat_uint64Swap>
    f898:	strh	r0, [r9], #2
    f89c:	subs	r6, r6, #1
    f8a0:	add	r4, r4, #8
    f8a4:	bne	f890 <ReadInt16Data+0x1298>
    f8a8:	b	faa0 <ReadInt16Data+0x14a8>
    f8ac:	cmp	r6, #256	; 0x100
    f8b0:	bgt	f9dc <ReadInt16Data+0x13e4>
    f8b4:	ldr	r3, [sl]
    f8b8:	add	r4, sp, #32
    f8bc:	mov	r0, r4
    f8c0:	mov	r1, r7
    f8c4:	mov	r2, r6
    f8c8:	bl	18d0 <fread@plt>
    f8cc:	ldr	r5, [sp, #20]
    f8d0:	add	r5, r0, r5
    f8d4:	cmp	r6, #1
    f8d8:	blt	faa0 <ReadInt16Data+0x14a8>
    f8dc:	ldrh	r0, [r4], #8
    f8e0:	strh	r0, [r9], #2
    f8e4:	subs	r6, r6, #1
    f8e8:	bne	f8dc <ReadInt16Data+0x12e4>
    f8ec:	b	faa0 <ReadInt16Data+0x14a8>
    f8f0:	add	r1, r9, #512	; 0x200
    f8f4:	str	r6, [sp, #8]
    f8f8:	sub	r5, r6, #256	; 0x100
    f8fc:	mov	r0, #0
    f900:	str	r0, [sp, #16]
    f904:	mov	r8, r1
    f908:	ldr	r3, [sl]
    f90c:	add	r6, sp, #32
    f910:	mov	r0, r6
    f914:	mov	r1, r7
    f918:	mov	r2, #256	; 0x100
    f91c:	bl	18d0 <fread@plt>
    f920:	mov	r4, r0
    f924:	mov	r7, #0
    f928:	add	sl, r9, r7
    f92c:	mov	r0, r6
    f930:	bl	1c0c <Mat_uint64Swap>
    f934:	strh	r0, [sl]
    f938:	add	r7, r7, #2
    f93c:	add	r6, r6, #8
    f940:	cmp	r7, #512	; 0x200
    f944:	bne	f928 <ReadInt16Data+0x1330>
    f948:	ldr	r0, [sp, #20]
    f94c:	add	r0, r4, r0
    f950:	str	r0, [sp, #20]
    f954:	add	r9, r9, #512	; 0x200
    f958:	add	r1, r8, #512	; 0x200
    f95c:	ldr	r0, [sp, #16]
    f960:	add	r0, r0, #256	; 0x100
    f964:	cmp	r0, r5
    f968:	ldr	r7, [sp, #24]
    f96c:	ldr	sl, [sp, #28]
    f970:	blt	f900 <ReadInt16Data+0x1308>
    f974:	ldr	r1, [sp, #8]
    f978:	cmp	r0, r1
    f97c:	bge	f9d4 <ReadInt16Data+0x13dc>
    f980:	mov	r9, r5
    f984:	sub	r6, r1, r0
    f988:	ldr	r3, [sl]
    f98c:	add	r4, sp, #32
    f990:	mov	r0, r4
    f994:	mov	r1, r7
    f998:	mov	r2, r6
    f99c:	bl	18d0 <fread@plt>
    f9a0:	ldr	r5, [sp, #20]
    f9a4:	add	r5, r0, r5
    f9a8:	cmp	r6, #1
    f9ac:	blt	faa0 <ReadInt16Data+0x14a8>
    f9b0:	ldr	r0, [sp, #16]
    f9b4:	sub	r6, r9, r0
    f9b8:	mov	r0, r4
    f9bc:	bl	1c0c <Mat_uint64Swap>
    f9c0:	strh	r0, [r8], #2
    f9c4:	subs	r6, r6, #1
    f9c8:	add	r4, r4, #8
    f9cc:	bne	f9b8 <ReadInt16Data+0x13c0>
    f9d0:	b	faa0 <ReadInt16Data+0x14a8>
    f9d4:	ldr	r5, [sp, #20]
    f9d8:	b	faa0 <ReadInt16Data+0x14a8>
    f9dc:	add	r1, r9, #512	; 0x200
    f9e0:	str	r6, [sp, #8]
    f9e4:	sub	r8, r6, #256	; 0x100
    f9e8:	mov	r0, #0
    f9ec:	add	r4, sp, #32
    f9f0:	ldr	r5, [sp, #20]
    f9f4:	mov	sl, r0
    f9f8:	mov	r6, r1
    f9fc:	ldr	r0, [sp, #28]
    fa00:	ldr	r3, [r0]
    fa04:	mov	r0, r4
    fa08:	mov	r1, r7
    fa0c:	mov	r2, #256	; 0x100
    fa10:	bl	18d0 <fread@plt>
    fa14:	mov	r1, #0
    fa18:	mov	r2, r4
    fa1c:	add	r3, r9, r1
    fa20:	ldrh	r7, [r2], #8
    fa24:	strh	r7, [r3]
    fa28:	add	r1, r1, #2
    fa2c:	cmp	r1, #512	; 0x200
    fa30:	bne	fa1c <ReadInt16Data+0x1424>
    fa34:	add	r5, r0, r5
    fa38:	add	r9, r9, #512	; 0x200
    fa3c:	add	r1, r6, #512	; 0x200
    fa40:	add	r0, sl, #256	; 0x100
    fa44:	cmp	r0, r8
    fa48:	ldr	r7, [sp, #24]
    fa4c:	blt	f9f4 <ReadInt16Data+0x13fc>
    fa50:	ldr	r2, [sp, #8]
    fa54:	cmp	r0, r2
    fa58:	bge	faa0 <ReadInt16Data+0x14a8>
    fa5c:	mov	r1, r7
    fa60:	sub	r7, r2, r0
    fa64:	ldr	r0, [sp, #28]
    fa68:	ldr	r3, [r0]
    fa6c:	add	r4, sp, #32
    fa70:	mov	r0, r4
    fa74:	mov	r2, r7
    fa78:	bl	18d0 <fread@plt>
    fa7c:	add	r5, r0, r5
    fa80:	cmp	r7, #1
    fa84:	blt	fa9c <ReadInt16Data+0x14a4>
    fa88:	sub	r0, r8, sl
    fa8c:	ldrh	r1, [r4], #8
    fa90:	strh	r1, [r6], #2
    fa94:	subs	r0, r0, #1
    fa98:	bne	fa8c <ReadInt16Data+0x1494>
    fa9c:	ldr	r7, [sp, #24]
    faa0:	mul	r0, r5, r7
    faa4:	sub	sp, fp, #28
    faa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000faac <ReadCompressedInt16Data>:
    faac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fab0:	add	fp, sp, #28
    fab4:	sub	sp, sp, #20
    fab8:	mov	r7, r0
    fabc:	mov	r0, #0
    fac0:	cmp	r1, #0
    fac4:	beq	fad8 <ReadCompressedInt16Data+0x2c>
    fac8:	cmp	r7, #0
    facc:	movne	r5, r2
    fad0:	cmpne	r2, #0
    fad4:	bne	fae0 <ReadCompressedInt16Data+0x34>
    fad8:	sub	sp, fp, #28
    fadc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fae0:	mov	r4, r3
    fae4:	mov	r8, r1
    fae8:	ldr	sl, [fp, #8]
    faec:	mov	r0, r3
    faf0:	bl	193c <Mat_SizeOf@plt>
    faf4:	mov	r6, r0
    faf8:	sub	r0, r4, #1
    fafc:	cmp	r0, #12
    fb00:	bhi	fff0 <ReadCompressedInt16Data+0x544>
    fb04:	add	r1, pc, #4
    fb08:	ldr	r0, [r1, r0, lsl #2]
    fb0c:	add	pc, r1, r0
    fb10:	.word	0x00000034
    fb14:	.word	0x0000006c
    fb18:	.word	0x000000a4
    fb1c:	.word	0x000000ec
    fb20:	.word	0x00000134
    fb24:	.word	0x0000017c
    fb28:	.word	0x000001c4
    fb2c:	.word	0x000004e0
    fb30:	.word	0x00000214
    fb34:	.word	0x000004e0
    fb38:	.word	0x000004e0
    fb3c:	.word	0x00000264
    fb40:	.word	0x00000464
    fb44:	cmp	sl, #1
    fb48:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fb4c:	add	r9, sp, #8
    fb50:	mov	r4, sl
    fb54:	mov	r0, r7
    fb58:	mov	r1, r8
    fb5c:	mov	r2, r9
    fb60:	mov	r3, r6
    fb64:	bl	31e4 <InflateData>
    fb68:	ldrsb	r0, [sp, #8]
    fb6c:	strh	r0, [r5], #2
    fb70:	subs	r4, r4, #1
    fb74:	bne	fb54 <ReadCompressedInt16Data+0xa8>
    fb78:	b	fff0 <ReadCompressedInt16Data+0x544>
    fb7c:	cmp	sl, #1
    fb80:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fb84:	add	r9, sp, #8
    fb88:	mov	r4, sl
    fb8c:	mov	r0, r7
    fb90:	mov	r1, r8
    fb94:	mov	r2, r9
    fb98:	mov	r3, r6
    fb9c:	bl	31e4 <InflateData>
    fba0:	ldrb	r0, [sp, #8]
    fba4:	strh	r0, [r5], #2
    fba8:	subs	r4, r4, #1
    fbac:	bne	fb8c <ReadCompressedInt16Data+0xe0>
    fbb0:	b	fff0 <ReadCompressedInt16Data+0x544>
    fbb4:	ldr	r0, [r7, #20]
    fbb8:	cmp	r0, #0
    fbbc:	beq	fdc4 <ReadCompressedInt16Data+0x318>
    fbc0:	cmp	sl, #1
    fbc4:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fbc8:	add	r9, sp, #8
    fbcc:	mov	r4, sl
    fbd0:	mov	r0, r7
    fbd4:	mov	r1, r8
    fbd8:	mov	r2, r9
    fbdc:	mov	r3, r6
    fbe0:	bl	31e4 <InflateData>
    fbe4:	mov	r0, r9
    fbe8:	bl	1c50 <Mat_int16Swap>
    fbec:	strh	r0, [r5], #2
    fbf0:	subs	r4, r4, #1
    fbf4:	bne	fbd0 <ReadCompressedInt16Data+0x124>
    fbf8:	b	fff0 <ReadCompressedInt16Data+0x544>
    fbfc:	ldr	r0, [r7, #20]
    fc00:	cmp	r0, #0
    fc04:	beq	fdfc <ReadCompressedInt16Data+0x350>
    fc08:	cmp	sl, #1
    fc0c:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fc10:	add	r9, sp, #8
    fc14:	mov	r4, sl
    fc18:	mov	r0, r7
    fc1c:	mov	r1, r8
    fc20:	mov	r2, r9
    fc24:	mov	r3, r6
    fc28:	bl	31e4 <InflateData>
    fc2c:	mov	r0, r9
    fc30:	bl	1c64 <Mat_uint16Swap>
    fc34:	strh	r0, [r5], #2
    fc38:	subs	r4, r4, #1
    fc3c:	bne	fc18 <ReadCompressedInt16Data+0x16c>
    fc40:	b	fff0 <ReadCompressedInt16Data+0x544>
    fc44:	ldr	r0, [r7, #20]
    fc48:	cmp	r0, #0
    fc4c:	beq	fe34 <ReadCompressedInt16Data+0x388>
    fc50:	cmp	sl, #1
    fc54:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fc58:	add	r9, sp, #8
    fc5c:	mov	r4, sl
    fc60:	mov	r0, r7
    fc64:	mov	r1, r8
    fc68:	mov	r2, r9
    fc6c:	mov	r3, r6
    fc70:	bl	31e4 <InflateData>
    fc74:	mov	r0, r9
    fc78:	bl	1c28 <Mat_int32Swap>
    fc7c:	strh	r0, [r5], #2
    fc80:	subs	r4, r4, #1
    fc84:	bne	fc60 <ReadCompressedInt16Data+0x1b4>
    fc88:	b	fff0 <ReadCompressedInt16Data+0x544>
    fc8c:	ldr	r0, [r7, #20]
    fc90:	cmp	r0, #0
    fc94:	beq	fe6c <ReadCompressedInt16Data+0x3c0>
    fc98:	cmp	sl, #1
    fc9c:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fca0:	add	r9, sp, #8
    fca4:	mov	r4, sl
    fca8:	mov	r0, r7
    fcac:	mov	r1, r8
    fcb0:	mov	r2, r9
    fcb4:	mov	r3, r6
    fcb8:	bl	31e4 <InflateData>
    fcbc:	mov	r0, r9
    fcc0:	bl	1c3c <Mat_uint32Swap>
    fcc4:	strh	r0, [r5], #2
    fcc8:	subs	r4, r4, #1
    fccc:	bne	fca8 <ReadCompressedInt16Data+0x1fc>
    fcd0:	b	fff0 <ReadCompressedInt16Data+0x544>
    fcd4:	ldr	r0, [r7, #20]
    fcd8:	cmp	r0, #0
    fcdc:	beq	fea4 <ReadCompressedInt16Data+0x3f8>
    fce0:	cmp	sl, #1
    fce4:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fce8:	add	r9, sp, #8
    fcec:	mov	r4, sl
    fcf0:	mov	r0, r7
    fcf4:	mov	r1, r8
    fcf8:	mov	r2, r9
    fcfc:	mov	r3, r6
    fd00:	bl	31e4 <InflateData>
    fd04:	mov	r0, r9
    fd08:	bl	1c7c <Mat_floatSwap>
    fd0c:	vcvt.s32.f32	s0, s0
    fd10:	vmov	r0, s0
    fd14:	strh	r0, [r5], #2
    fd18:	subs	r4, r4, #1
    fd1c:	bne	fcf0 <ReadCompressedInt16Data+0x244>
    fd20:	b	fff0 <ReadCompressedInt16Data+0x544>
    fd24:	ldr	r0, [r7, #20]
    fd28:	cmp	r0, #0
    fd2c:	beq	fee4 <ReadCompressedInt16Data+0x438>
    fd30:	cmp	sl, #1
    fd34:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fd38:	add	r9, sp, #8
    fd3c:	mov	r4, sl
    fd40:	mov	r0, r7
    fd44:	mov	r1, r8
    fd48:	mov	r2, r9
    fd4c:	mov	r3, r6
    fd50:	bl	31e4 <InflateData>
    fd54:	mov	r0, r9
    fd58:	bl	1cc0 <Mat_doubleSwap>
    fd5c:	vcvt.s32.f64	s0, d0
    fd60:	vmov	r0, s0
    fd64:	strh	r0, [r5], #2
    fd68:	subs	r4, r4, #1
    fd6c:	bne	fd40 <ReadCompressedInt16Data+0x294>
    fd70:	b	fff0 <ReadCompressedInt16Data+0x544>
    fd74:	ldr	r0, [r7, #20]
    fd78:	cmp	r0, #0
    fd7c:	beq	ff24 <ReadCompressedInt16Data+0x478>
    fd80:	cmp	sl, #1
    fd84:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fd88:	str	r4, [sp]
    fd8c:	add	r4, sp, #8
    fd90:	mov	r9, r5
    fd94:	str	r6, [sp, #4]
    fd98:	mov	r0, r7
    fd9c:	mov	r1, r8
    fda0:	mov	r2, r4
    fda4:	ldr	r3, [sp, #4]
    fda8:	bl	31e4 <InflateData>
    fdac:	mov	r0, r4
    fdb0:	bl	1bbc <Mat_int64Swap>
    fdb4:	strh	r0, [r9], #2
    fdb8:	subs	sl, sl, #1
    fdbc:	bne	fd98 <ReadCompressedInt16Data+0x2ec>
    fdc0:	b	ff60 <ReadCompressedInt16Data+0x4b4>
    fdc4:	cmp	sl, #1
    fdc8:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fdcc:	add	r9, sp, #8
    fdd0:	mov	r4, sl
    fdd4:	mov	r0, r7
    fdd8:	mov	r1, r8
    fddc:	mov	r2, r9
    fde0:	mov	r3, r6
    fde4:	bl	31e4 <InflateData>
    fde8:	ldrh	r0, [sp, #8]
    fdec:	strh	r0, [r5], #2
    fdf0:	subs	r4, r4, #1
    fdf4:	bne	fdd4 <ReadCompressedInt16Data+0x328>
    fdf8:	b	fff0 <ReadCompressedInt16Data+0x544>
    fdfc:	cmp	sl, #1
    fe00:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fe04:	add	r9, sp, #8
    fe08:	mov	r4, sl
    fe0c:	mov	r0, r7
    fe10:	mov	r1, r8
    fe14:	mov	r2, r9
    fe18:	mov	r3, r6
    fe1c:	bl	31e4 <InflateData>
    fe20:	ldrh	r0, [sp, #8]
    fe24:	strh	r0, [r5], #2
    fe28:	subs	r4, r4, #1
    fe2c:	bne	fe0c <ReadCompressedInt16Data+0x360>
    fe30:	b	fff0 <ReadCompressedInt16Data+0x544>
    fe34:	cmp	sl, #1
    fe38:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fe3c:	add	r9, sp, #8
    fe40:	mov	r4, sl
    fe44:	mov	r0, r7
    fe48:	mov	r1, r8
    fe4c:	mov	r2, r9
    fe50:	mov	r3, r6
    fe54:	bl	31e4 <InflateData>
    fe58:	ldr	r0, [sp, #8]
    fe5c:	strh	r0, [r5], #2
    fe60:	subs	r4, r4, #1
    fe64:	bne	fe44 <ReadCompressedInt16Data+0x398>
    fe68:	b	fff0 <ReadCompressedInt16Data+0x544>
    fe6c:	cmp	sl, #1
    fe70:	blt	fff0 <ReadCompressedInt16Data+0x544>
    fe74:	add	r9, sp, #8
    fe78:	mov	r4, sl
    fe7c:	mov	r0, r7
    fe80:	mov	r1, r8
    fe84:	mov	r2, r9
    fe88:	mov	r3, r6
    fe8c:	bl	31e4 <InflateData>
    fe90:	ldr	r0, [sp, #8]
    fe94:	strh	r0, [r5], #2
    fe98:	subs	r4, r4, #1
    fe9c:	bne	fe7c <ReadCompressedInt16Data+0x3d0>
    fea0:	b	fff0 <ReadCompressedInt16Data+0x544>
    fea4:	cmp	sl, #1
    fea8:	blt	fff0 <ReadCompressedInt16Data+0x544>
    feac:	add	r9, sp, #8
    feb0:	mov	r4, sl
    feb4:	mov	r0, r7
    feb8:	mov	r1, r8
    febc:	mov	r2, r9
    fec0:	mov	r3, r6
    fec4:	bl	31e4 <InflateData>
    fec8:	vldr	s0, [sp, #8]
    fecc:	vcvt.s32.f32	s0, s0
    fed0:	vmov	r0, s0
    fed4:	strh	r0, [r5], #2
    fed8:	subs	r4, r4, #1
    fedc:	bne	feb4 <ReadCompressedInt16Data+0x408>
    fee0:	b	fff0 <ReadCompressedInt16Data+0x544>
    fee4:	cmp	sl, #1
    fee8:	blt	fff0 <ReadCompressedInt16Data+0x544>
    feec:	add	r9, sp, #8
    fef0:	mov	r4, sl
    fef4:	mov	r0, r7
    fef8:	mov	r1, r8
    fefc:	mov	r2, r9
    ff00:	mov	r3, r6
    ff04:	bl	31e4 <InflateData>
    ff08:	vldr	d16, [sp, #8]
    ff0c:	vcvt.s32.f64	s0, d16
    ff10:	vmov	r0, s0
    ff14:	strh	r0, [r5], #2
    ff18:	subs	r4, r4, #1
    ff1c:	bne	fef4 <ReadCompressedInt16Data+0x448>
    ff20:	b	fff0 <ReadCompressedInt16Data+0x544>
    ff24:	cmp	sl, #1
    ff28:	blt	fff0 <ReadCompressedInt16Data+0x544>
    ff2c:	str	r4, [sp]
    ff30:	add	r9, sp, #8
    ff34:	str	r6, [sp, #4]
    ff38:	mov	r6, r5
    ff3c:	mov	r0, r7
    ff40:	mov	r1, r8
    ff44:	mov	r2, r9
    ff48:	ldr	r3, [sp, #4]
    ff4c:	bl	31e4 <InflateData>
    ff50:	ldrh	r0, [sp, #8]
    ff54:	strh	r0, [r6], #2
    ff58:	subs	sl, sl, #1
    ff5c:	bne	ff3c <ReadCompressedInt16Data+0x490>
    ff60:	ldr	r0, [sp]
    ff64:	cmp	r0, #13
    ff68:	ldr	sl, [fp, #8]
    ff6c:	ldr	r6, [sp, #4]
    ff70:	bne	fff0 <ReadCompressedInt16Data+0x544>
    ff74:	ldr	r0, [r7, #20]
    ff78:	cmp	r0, #0
    ff7c:	beq	ffbc <ReadCompressedInt16Data+0x510>
    ff80:	cmp	sl, #1
    ff84:	blt	fff0 <ReadCompressedInt16Data+0x544>
    ff88:	add	r9, sp, #8
    ff8c:	mov	r4, sl
    ff90:	mov	r0, r7
    ff94:	mov	r1, r8
    ff98:	mov	r2, r9
    ff9c:	mov	r3, r6
    ffa0:	bl	31e4 <InflateData>
    ffa4:	mov	r0, r9
    ffa8:	bl	1c0c <Mat_uint64Swap>
    ffac:	strh	r0, [r5], #2
    ffb0:	subs	r4, r4, #1
    ffb4:	bne	ff90 <ReadCompressedInt16Data+0x4e4>
    ffb8:	b	fff0 <ReadCompressedInt16Data+0x544>
    ffbc:	cmp	sl, #1
    ffc0:	blt	fff0 <ReadCompressedInt16Data+0x544>
    ffc4:	add	r9, sp, #8
    ffc8:	mov	r4, sl
    ffcc:	mov	r0, r7
    ffd0:	mov	r1, r8
    ffd4:	mov	r2, r9
    ffd8:	mov	r3, r6
    ffdc:	bl	31e4 <InflateData>
    ffe0:	ldrh	r0, [sp, #8]
    ffe4:	strh	r0, [r5], #2
    ffe8:	subs	r4, r4, #1
    ffec:	bne	ffcc <ReadCompressedInt16Data+0x520>
    fff0:	mul	r0, r6, sl
    fff4:	sub	sp, fp, #28
    fff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000fffc <ReadUInt16Data>:
    fffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10000:	add	fp, sp, #28
   10004:	sub	sp, sp, #36	; 0x24
   10008:	sub	sp, sp, #2048	; 0x800
   1000c:	mov	sl, r0
   10010:	mov	r0, #0
   10014:	cmp	sl, #0
   10018:	beq	10030 <ReadUInt16Data+0x34>
   1001c:	mov	r9, r1
   10020:	cmp	r1, #0
   10024:	ldrne	r1, [sl]
   10028:	cmpne	r1, #0
   1002c:	bne	10038 <ReadUInt16Data+0x3c>
   10030:	sub	sp, fp, #28
   10034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10038:	mov	r6, r3
   1003c:	mov	r5, r2
   10040:	mov	r0, r2
   10044:	bl	193c <Mat_SizeOf@plt>
   10048:	mov	r7, r0
   1004c:	sub	r0, r5, #1
   10050:	mov	r1, #0
   10054:	str	r1, [sp, #20]
   10058:	cmp	r0, #11
   1005c:	str	r7, [sp, #24]
   10060:	str	sl, [sp, #28]
   10064:	bhi	11250 <ReadUInt16Data+0x1254>
   10068:	add	r1, pc, #4
   1006c:	ldr	r0, [r1, r0, lsl #2]
   10070:	add	pc, r1, r0
   10074:	.word	0x00000030
   10078:	.word	0x00000070
   1007c:	.word	0x000000b0
   10080:	.word	0x00000104
   10084:	.word	0x00000158
   10088:	.word	0x000001ac
   1008c:	.word	0x00000200
   10090:	.word	0x000011dc
   10094:	.word	0x0000025c
   10098:	.word	0x000011dc
   1009c:	.word	0x000011dc
   100a0:	.word	0x000002b8
   100a4:	cmp	r6, #256	; 0x100
   100a8:	bgt	10398 <ReadUInt16Data+0x39c>
   100ac:	ldr	r3, [sl]
   100b0:	add	r4, sp, #32
   100b4:	mov	r0, r4
   100b8:	mov	r1, r7
   100bc:	mov	r2, r6
   100c0:	bl	18d0 <fread@plt>
   100c4:	mov	r5, r0
   100c8:	cmp	r6, #1
   100cc:	blt	114a4 <ReadUInt16Data+0x14a8>
   100d0:	ldrsb	r0, [r4], #1
   100d4:	strh	r0, [r9], #2
   100d8:	subs	r6, r6, #1
   100dc:	bne	100d0 <ReadUInt16Data+0xd4>
   100e0:	b	114a4 <ReadUInt16Data+0x14a8>
   100e4:	cmp	r6, #256	; 0x100
   100e8:	bgt	10458 <ReadUInt16Data+0x45c>
   100ec:	ldr	r3, [sl]
   100f0:	add	r4, sp, #32
   100f4:	mov	r0, r4
   100f8:	mov	r1, r7
   100fc:	mov	r2, r6
   10100:	bl	18d0 <fread@plt>
   10104:	mov	r5, r0
   10108:	cmp	r6, #1
   1010c:	blt	114a4 <ReadUInt16Data+0x14a8>
   10110:	ldrb	r0, [r4], #1
   10114:	strh	r0, [r9], #2
   10118:	subs	r6, r6, #1
   1011c:	bne	10110 <ReadUInt16Data+0x114>
   10120:	b	114a4 <ReadUInt16Data+0x14a8>
   10124:	ldr	r0, [sl, #20]
   10128:	cmp	r0, #0
   1012c:	beq	10514 <ReadUInt16Data+0x518>
   10130:	cmp	r6, #256	; 0x100
   10134:	bgt	1071c <ReadUInt16Data+0x720>
   10138:	ldr	r3, [sl]
   1013c:	add	r4, sp, #32
   10140:	mov	r0, r4
   10144:	mov	r1, r7
   10148:	mov	r2, r6
   1014c:	bl	18d0 <fread@plt>
   10150:	mov	r5, r0
   10154:	cmp	r6, #1
   10158:	blt	114a4 <ReadUInt16Data+0x14a8>
   1015c:	mov	r0, r4
   10160:	bl	1c50 <Mat_int16Swap>
   10164:	strh	r0, [r9], #2
   10168:	subs	r6, r6, #1
   1016c:	add	r4, r4, #2
   10170:	bne	1015c <ReadUInt16Data+0x160>
   10174:	b	114a4 <ReadUInt16Data+0x14a8>
   10178:	ldr	r0, [sl, #20]
   1017c:	cmp	r0, #0
   10180:	beq	10580 <ReadUInt16Data+0x584>
   10184:	cmp	r6, #256	; 0x100
   10188:	bgt	107f8 <ReadUInt16Data+0x7fc>
   1018c:	ldr	r3, [sl]
   10190:	add	r4, sp, #32
   10194:	mov	r0, r4
   10198:	mov	r1, r7
   1019c:	mov	r2, r6
   101a0:	bl	18d0 <fread@plt>
   101a4:	mov	r5, r0
   101a8:	cmp	r6, #1
   101ac:	blt	114a4 <ReadUInt16Data+0x14a8>
   101b0:	mov	r0, r4
   101b4:	bl	1c64 <Mat_uint16Swap>
   101b8:	strh	r0, [r9], #2
   101bc:	subs	r6, r6, #1
   101c0:	add	r4, r4, #2
   101c4:	bne	101b0 <ReadUInt16Data+0x1b4>
   101c8:	b	114a4 <ReadUInt16Data+0x14a8>
   101cc:	ldr	r0, [sl, #20]
   101d0:	cmp	r0, #0
   101d4:	beq	105bc <ReadUInt16Data+0x5c0>
   101d8:	cmp	r6, #256	; 0x100
   101dc:	bgt	108d4 <ReadUInt16Data+0x8d8>
   101e0:	ldr	r3, [sl]
   101e4:	add	r4, sp, #32
   101e8:	mov	r0, r4
   101ec:	mov	r1, r7
   101f0:	mov	r2, r6
   101f4:	bl	18d0 <fread@plt>
   101f8:	mov	r5, r0
   101fc:	cmp	r6, #1
   10200:	blt	114a4 <ReadUInt16Data+0x14a8>
   10204:	mov	r0, r4
   10208:	bl	1c28 <Mat_int32Swap>
   1020c:	strh	r0, [r9], #2
   10210:	subs	r6, r6, #1
   10214:	add	r4, r4, #4
   10218:	bne	10204 <ReadUInt16Data+0x208>
   1021c:	b	114a4 <ReadUInt16Data+0x14a8>
   10220:	ldr	r0, [sl, #20]
   10224:	cmp	r0, #0
   10228:	beq	105fc <ReadUInt16Data+0x600>
   1022c:	cmp	r6, #256	; 0x100
   10230:	bgt	109b8 <ReadUInt16Data+0x9bc>
   10234:	ldr	r3, [sl]
   10238:	add	r4, sp, #32
   1023c:	mov	r0, r4
   10240:	mov	r1, r7
   10244:	mov	r2, r6
   10248:	bl	18d0 <fread@plt>
   1024c:	mov	r5, r0
   10250:	cmp	r6, #1
   10254:	blt	114a4 <ReadUInt16Data+0x14a8>
   10258:	mov	r0, r4
   1025c:	bl	1c3c <Mat_uint32Swap>
   10260:	strh	r0, [r9], #2
   10264:	subs	r6, r6, #1
   10268:	add	r4, r4, #4
   1026c:	bne	10258 <ReadUInt16Data+0x25c>
   10270:	b	114a4 <ReadUInt16Data+0x14a8>
   10274:	ldr	r0, [sl, #20]
   10278:	cmp	r0, #0
   1027c:	beq	1063c <ReadUInt16Data+0x640>
   10280:	cmp	r6, #256	; 0x100
   10284:	bgt	10a9c <ReadUInt16Data+0xaa0>
   10288:	ldr	r3, [sl]
   1028c:	add	r4, sp, #32
   10290:	mov	r0, r4
   10294:	mov	r1, r7
   10298:	mov	r2, r6
   1029c:	bl	18d0 <fread@plt>
   102a0:	mov	r5, r0
   102a4:	cmp	r6, #1
   102a8:	blt	114a4 <ReadUInt16Data+0x14a8>
   102ac:	mov	r0, r4
   102b0:	bl	1c7c <Mat_floatSwap>
   102b4:	vcvt.u32.f32	s0, s0
   102b8:	vmov	r0, s0
   102bc:	strh	r0, [r9], #2
   102c0:	subs	r6, r6, #1
   102c4:	add	r4, r4, #4
   102c8:	bne	102ac <ReadUInt16Data+0x2b0>
   102cc:	b	114a4 <ReadUInt16Data+0x14a8>
   102d0:	ldr	r0, [sl, #20]
   102d4:	cmp	r0, #0
   102d8:	beq	10688 <ReadUInt16Data+0x68c>
   102dc:	cmp	r6, #256	; 0x100
   102e0:	bgt	10b8c <ReadUInt16Data+0xb90>
   102e4:	ldr	r3, [sl]
   102e8:	add	r4, sp, #32
   102ec:	mov	r0, r4
   102f0:	mov	r1, r7
   102f4:	mov	r2, r6
   102f8:	bl	18d0 <fread@plt>
   102fc:	mov	r5, r0
   10300:	cmp	r6, #1
   10304:	blt	114a4 <ReadUInt16Data+0x14a8>
   10308:	mov	r0, r4
   1030c:	bl	1cc0 <Mat_doubleSwap>
   10310:	vcvt.u32.f64	s0, d0
   10314:	vmov	r0, s0
   10318:	strh	r0, [r9], #2
   1031c:	subs	r6, r6, #1
   10320:	add	r4, r4, #8
   10324:	bne	10308 <ReadUInt16Data+0x30c>
   10328:	b	114a4 <ReadUInt16Data+0x14a8>
   1032c:	ldr	r0, [sl, #20]
   10330:	cmp	r0, #0
   10334:	beq	106d4 <ReadUInt16Data+0x6d8>
   10338:	cmp	r6, #256	; 0x100
   1033c:	bgt	10c7c <ReadUInt16Data+0xc80>
   10340:	ldr	r3, [sl]
   10344:	add	r4, sp, #32
   10348:	mov	r0, r4
   1034c:	mov	r1, r7
   10350:	mov	r2, r6
   10354:	bl	18d0 <fread@plt>
   10358:	str	r0, [sp, #20]
   1035c:	cmp	r6, #1
   10360:	blt	11250 <ReadUInt16Data+0x1254>
   10364:	mov	r8, r6
   10368:	mov	r7, r9
   1036c:	mov	r0, r4
   10370:	bl	1bbc <Mat_int64Swap>
   10374:	strh	r0, [r7], #2
   10378:	subs	r6, r6, #1
   1037c:	add	r4, r4, #8
   10380:	bne	1036c <ReadUInt16Data+0x370>
   10384:	ldr	r7, [sp, #24]
   10388:	mov	r6, r8
   1038c:	cmp	r5, #13
   10390:	beq	11258 <ReadUInt16Data+0x125c>
   10394:	b	113d8 <ReadUInt16Data+0x13dc>
   10398:	add	r1, r9, #512	; 0x200
   1039c:	str	r6, [sp, #8]
   103a0:	sub	r8, r6, #256	; 0x100
   103a4:	mov	r0, #0
   103a8:	add	r4, sp, #32
   103ac:	mov	r5, #0
   103b0:	mov	sl, r0
   103b4:	mov	r6, r1
   103b8:	ldr	r0, [sp, #28]
   103bc:	ldr	r3, [r0]
   103c0:	mov	r0, r4
   103c4:	mov	r1, r7
   103c8:	mov	r2, #256	; 0x100
   103cc:	bl	18d0 <fread@plt>
   103d0:	mov	r1, r9
   103d4:	mov	r2, #0
   103d8:	add	r3, r4, r2
   103dc:	ldrsb	r3, [r3]
   103e0:	strh	r3, [r1], #2
   103e4:	add	r2, r2, #1
   103e8:	cmp	r2, #256	; 0x100
   103ec:	bne	103d8 <ReadUInt16Data+0x3dc>
   103f0:	add	r5, r0, r5
   103f4:	add	r9, r9, #512	; 0x200
   103f8:	add	r1, r6, #512	; 0x200
   103fc:	add	r0, sl, #256	; 0x100
   10400:	cmp	r0, r8
   10404:	blt	103b0 <ReadUInt16Data+0x3b4>
   10408:	ldr	r2, [sp, #8]
   1040c:	cmp	r0, r2
   10410:	bge	114a4 <ReadUInt16Data+0x14a8>
   10414:	mov	r1, r7
   10418:	sub	r7, r2, r0
   1041c:	ldr	r0, [sp, #28]
   10420:	ldr	r3, [r0]
   10424:	add	r4, sp, #32
   10428:	mov	r0, r4
   1042c:	mov	r2, r7
   10430:	bl	18d0 <fread@plt>
   10434:	add	r5, r0, r5
   10438:	cmp	r7, #1
   1043c:	blt	114a0 <ReadUInt16Data+0x14a4>
   10440:	sub	r0, r8, sl
   10444:	ldrsb	r1, [r4], #1
   10448:	strh	r1, [r6], #2
   1044c:	subs	r0, r0, #1
   10450:	bne	10444 <ReadUInt16Data+0x448>
   10454:	b	114a0 <ReadUInt16Data+0x14a4>
   10458:	add	r1, r9, #512	; 0x200
   1045c:	str	r6, [sp, #8]
   10460:	sub	r8, r6, #256	; 0x100
   10464:	mov	r0, #0
   10468:	add	r4, sp, #32
   1046c:	mov	r5, #0
   10470:	mov	sl, r0
   10474:	mov	r6, r1
   10478:	ldr	r0, [sp, #28]
   1047c:	ldr	r3, [r0]
   10480:	mov	r0, r4
   10484:	mov	r1, r7
   10488:	mov	r2, #256	; 0x100
   1048c:	bl	18d0 <fread@plt>
   10490:	mov	r1, r9
   10494:	mov	r2, #0
   10498:	ldrb	r3, [r4, r2]
   1049c:	strh	r3, [r1], #2
   104a0:	add	r2, r2, #1
   104a4:	cmp	r2, #256	; 0x100
   104a8:	bne	10498 <ReadUInt16Data+0x49c>
   104ac:	add	r5, r0, r5
   104b0:	add	r9, r9, #512	; 0x200
   104b4:	add	r1, r6, #512	; 0x200
   104b8:	add	r0, sl, #256	; 0x100
   104bc:	cmp	r0, r8
   104c0:	blt	10470 <ReadUInt16Data+0x474>
   104c4:	ldr	r2, [sp, #8]
   104c8:	cmp	r0, r2
   104cc:	bge	114a4 <ReadUInt16Data+0x14a8>
   104d0:	mov	r1, r7
   104d4:	sub	r7, r2, r0
   104d8:	ldr	r0, [sp, #28]
   104dc:	ldr	r3, [r0]
   104e0:	add	r4, sp, #32
   104e4:	mov	r0, r4
   104e8:	mov	r2, r7
   104ec:	bl	18d0 <fread@plt>
   104f0:	add	r5, r0, r5
   104f4:	cmp	r7, #1
   104f8:	blt	114a0 <ReadUInt16Data+0x14a4>
   104fc:	sub	r0, r8, sl
   10500:	ldrb	r1, [r4], #1
   10504:	strh	r1, [r6], #2
   10508:	subs	r0, r0, #1
   1050c:	bne	10500 <ReadUInt16Data+0x504>
   10510:	b	114a0 <ReadUInt16Data+0x14a4>
   10514:	cmp	r6, #256	; 0x100
   10518:	ble	10588 <ReadUInt16Data+0x58c>
   1051c:	lsl	r4, r6, #1
   10520:	str	r6, [sp, #8]
   10524:	sub	r0, r6, #256	; 0x100
   10528:	str	r0, [sp, #20]
   1052c:	mov	r6, #0
   10530:	add	r8, sp, #32
   10534:	mov	r5, #0
   10538:	ldr	r3, [sl]
   1053c:	mov	r0, r8
   10540:	mov	r1, r7
   10544:	mov	r2, #256	; 0x100
   10548:	bl	18d0 <fread@plt>
   1054c:	mov	sl, r0
   10550:	add	r0, r9, r6, lsl #1
   10554:	mov	r1, r8
   10558:	mov	r2, #512	; 0x200
   1055c:	bl	1834 <memcpy@plt>
   10560:	add	r5, sl, r5
   10564:	ldr	sl, [sp, #28]
   10568:	sub	r4, r4, #512	; 0x200
   1056c:	add	r6, r6, #256	; 0x100
   10570:	ldr	r0, [sp, #20]
   10574:	cmp	r6, r0
   10578:	blt	10538 <ReadUInt16Data+0x53c>
   1057c:	b	10de4 <ReadUInt16Data+0xde8>
   10580:	cmp	r6, #256	; 0x100
   10584:	bgt	10d84 <ReadUInt16Data+0xd88>
   10588:	ldr	r3, [sl]
   1058c:	add	r0, sp, #32
   10590:	mov	r1, r7
   10594:	mov	r2, r6
   10598:	bl	18d0 <fread@plt>
   1059c:	mov	r5, r0
   105a0:	cmp	r6, #0
   105a4:	ble	114a4 <ReadUInt16Data+0x14a8>
   105a8:	lsl	r2, r6, #1
   105ac:	add	r1, sp, #32
   105b0:	mov	r0, r9
   105b4:	bl	1834 <memcpy@plt>
   105b8:	b	114a4 <ReadUInt16Data+0x14a8>
   105bc:	cmp	r6, #256	; 0x100
   105c0:	bgt	10e2c <ReadUInt16Data+0xe30>
   105c4:	ldr	r3, [sl]
   105c8:	add	r4, sp, #32
   105cc:	mov	r0, r4
   105d0:	mov	r1, r7
   105d4:	mov	r2, r6
   105d8:	bl	18d0 <fread@plt>
   105dc:	mov	r5, r0
   105e0:	cmp	r6, #1
   105e4:	blt	114a4 <ReadUInt16Data+0x14a8>
   105e8:	ldr	r0, [r4], #4
   105ec:	strh	r0, [r9], #2
   105f0:	subs	r6, r6, #1
   105f4:	bne	105e8 <ReadUInt16Data+0x5ec>
   105f8:	b	114a4 <ReadUInt16Data+0x14a8>
   105fc:	cmp	r6, #256	; 0x100
   10600:	bgt	10ee8 <ReadUInt16Data+0xeec>
   10604:	ldr	r3, [sl]
   10608:	add	r4, sp, #32
   1060c:	mov	r0, r4
   10610:	mov	r1, r7
   10614:	mov	r2, r6
   10618:	bl	18d0 <fread@plt>
   1061c:	mov	r5, r0
   10620:	cmp	r6, #1
   10624:	blt	114a4 <ReadUInt16Data+0x14a8>
   10628:	ldr	r0, [r4], #4
   1062c:	strh	r0, [r9], #2
   10630:	subs	r6, r6, #1
   10634:	bne	10628 <ReadUInt16Data+0x62c>
   10638:	b	114a4 <ReadUInt16Data+0x14a8>
   1063c:	cmp	r6, #256	; 0x100
   10640:	bgt	10fa4 <ReadUInt16Data+0xfa8>
   10644:	ldr	r3, [sl]
   10648:	add	r4, sp, #32
   1064c:	mov	r0, r4
   10650:	mov	r1, r7
   10654:	mov	r2, r6
   10658:	bl	18d0 <fread@plt>
   1065c:	mov	r5, r0
   10660:	cmp	r6, #1
   10664:	blt	114a4 <ReadUInt16Data+0x14a8>
   10668:	vldr	s0, [r4]
   1066c:	vcvt.u32.f32	s0, s0
   10670:	vmov	r0, s0
   10674:	strh	r0, [r9], #2
   10678:	subs	r6, r6, #1
   1067c:	add	r4, r4, #4
   10680:	bne	10668 <ReadUInt16Data+0x66c>
   10684:	b	114a4 <ReadUInt16Data+0x14a8>
   10688:	cmp	r6, #256	; 0x100
   1068c:	bgt	11080 <ReadUInt16Data+0x1084>
   10690:	ldr	r3, [sl]
   10694:	add	r4, sp, #32
   10698:	mov	r0, r4
   1069c:	mov	r1, r7
   106a0:	mov	r2, r6
   106a4:	bl	18d0 <fread@plt>
   106a8:	mov	r5, r0
   106ac:	cmp	r6, #1
   106b0:	blt	114a4 <ReadUInt16Data+0x14a8>
   106b4:	vldr	d16, [r4]
   106b8:	vcvt.u32.f64	s0, d16
   106bc:	vmov	r0, s0
   106c0:	strh	r0, [r9], #2
   106c4:	subs	r6, r6, #1
   106c8:	add	r4, r4, #8
   106cc:	bne	106b4 <ReadUInt16Data+0x6b8>
   106d0:	b	114a4 <ReadUInt16Data+0x14a8>
   106d4:	cmp	r6, #256	; 0x100
   106d8:	bgt	1115c <ReadUInt16Data+0x1160>
   106dc:	ldr	r3, [sl]
   106e0:	add	r4, sp, #32
   106e4:	mov	r0, r4
   106e8:	mov	r1, r7
   106ec:	mov	r2, r6
   106f0:	bl	18d0 <fread@plt>
   106f4:	str	r0, [sp, #20]
   106f8:	cmp	r6, #1
   106fc:	blt	11250 <ReadUInt16Data+0x1254>
   10700:	mov	r0, r6
   10704:	mov	r1, r9
   10708:	ldrh	r2, [r4], #8
   1070c:	strh	r2, [r1], #2
   10710:	subs	r0, r0, #1
   10714:	bne	10708 <ReadUInt16Data+0x70c>
   10718:	b	11250 <ReadUInt16Data+0x1254>
   1071c:	add	r1, r9, #512	; 0x200
   10720:	str	r6, [sp, #8]
   10724:	sub	r0, r6, #256	; 0x100
   10728:	str	r0, [sp, #20]
   1072c:	mov	r0, #0
   10730:	add	r4, sp, #32
   10734:	mov	r5, #0
   10738:	mov	sl, r0
   1073c:	mov	r8, r1
   10740:	ldr	r0, [sp, #28]
   10744:	ldr	r3, [r0]
   10748:	mov	r0, r4
   1074c:	mov	r1, r7
   10750:	mov	r2, #256	; 0x100
   10754:	bl	18d0 <fread@plt>
   10758:	mov	r6, r0
   1075c:	mov	r7, #0
   10760:	add	r0, r4, r7
   10764:	bl	1c50 <Mat_int16Swap>
   10768:	add	r1, r9, r7
   1076c:	strh	r0, [r1]
   10770:	add	r7, r7, #2
   10774:	cmp	r7, #512	; 0x200
   10778:	bne	10760 <ReadUInt16Data+0x764>
   1077c:	add	r5, r6, r5
   10780:	add	r9, r9, #512	; 0x200
   10784:	add	r1, r8, #512	; 0x200
   10788:	add	r0, sl, #256	; 0x100
   1078c:	ldr	r2, [sp, #20]
   10790:	cmp	r0, r2
   10794:	ldr	r7, [sp, #24]
   10798:	blt	10738 <ReadUInt16Data+0x73c>
   1079c:	ldr	r1, [sp, #8]
   107a0:	cmp	r0, r1
   107a4:	bge	114a4 <ReadUInt16Data+0x14a8>
   107a8:	sub	r6, r1, r0
   107ac:	ldr	r0, [sp, #28]
   107b0:	ldr	r3, [r0]
   107b4:	add	r4, sp, #32
   107b8:	mov	r0, r4
   107bc:	mov	r1, r7
   107c0:	mov	r2, r6
   107c4:	bl	18d0 <fread@plt>
   107c8:	add	r5, r0, r5
   107cc:	cmp	r6, #1
   107d0:	blt	114a4 <ReadUInt16Data+0x14a8>
   107d4:	ldr	r0, [sp, #20]
   107d8:	sub	r6, r0, sl
   107dc:	mov	r0, r4
   107e0:	bl	1c50 <Mat_int16Swap>
   107e4:	strh	r0, [r8], #2
   107e8:	subs	r6, r6, #1
   107ec:	add	r4, r4, #2
   107f0:	bne	107dc <ReadUInt16Data+0x7e0>
   107f4:	b	114a4 <ReadUInt16Data+0x14a8>
   107f8:	add	r1, r9, #512	; 0x200
   107fc:	str	r6, [sp, #8]
   10800:	sub	r0, r6, #256	; 0x100
   10804:	str	r0, [sp, #20]
   10808:	mov	r0, #0
   1080c:	add	r4, sp, #32
   10810:	mov	r5, #0
   10814:	mov	sl, r0
   10818:	mov	r8, r1
   1081c:	ldr	r0, [sp, #28]
   10820:	ldr	r3, [r0]
   10824:	mov	r0, r4
   10828:	mov	r1, r7
   1082c:	mov	r2, #256	; 0x100
   10830:	bl	18d0 <fread@plt>
   10834:	mov	r6, r0
   10838:	mov	r7, #0
   1083c:	add	r0, r4, r7
   10840:	bl	1c64 <Mat_uint16Swap>
   10844:	add	r1, r9, r7
   10848:	strh	r0, [r1]
   1084c:	add	r7, r7, #2
   10850:	cmp	r7, #512	; 0x200
   10854:	bne	1083c <ReadUInt16Data+0x840>
   10858:	add	r5, r6, r5
   1085c:	add	r9, r9, #512	; 0x200
   10860:	add	r1, r8, #512	; 0x200
   10864:	add	r0, sl, #256	; 0x100
   10868:	ldr	r2, [sp, #20]
   1086c:	cmp	r0, r2
   10870:	ldr	r7, [sp, #24]
   10874:	blt	10814 <ReadUInt16Data+0x818>
   10878:	ldr	r1, [sp, #8]
   1087c:	cmp	r0, r1
   10880:	bge	114a4 <ReadUInt16Data+0x14a8>
   10884:	sub	r6, r1, r0
   10888:	ldr	r0, [sp, #28]
   1088c:	ldr	r3, [r0]
   10890:	add	r4, sp, #32
   10894:	mov	r0, r4
   10898:	mov	r1, r7
   1089c:	mov	r2, r6
   108a0:	bl	18d0 <fread@plt>
   108a4:	add	r5, r0, r5
   108a8:	cmp	r6, #1
   108ac:	blt	114a4 <ReadUInt16Data+0x14a8>
   108b0:	ldr	r0, [sp, #20]
   108b4:	sub	r6, r0, sl
   108b8:	mov	r0, r4
   108bc:	bl	1c64 <Mat_uint16Swap>
   108c0:	strh	r0, [r8], #2
   108c4:	subs	r6, r6, #1
   108c8:	add	r4, r4, #2
   108cc:	bne	108b8 <ReadUInt16Data+0x8bc>
   108d0:	b	114a4 <ReadUInt16Data+0x14a8>
   108d4:	add	r1, r9, #512	; 0x200
   108d8:	str	r6, [sp, #8]
   108dc:	sub	r0, r6, #256	; 0x100
   108e0:	str	r0, [sp, #16]
   108e4:	mov	r0, #0
   108e8:	mov	r5, #0
   108ec:	str	r0, [sp, #20]
   108f0:	mov	r8, r1
   108f4:	ldr	r3, [sl]
   108f8:	add	r6, sp, #32
   108fc:	mov	r0, r6
   10900:	mov	r1, r7
   10904:	mov	r2, #256	; 0x100
   10908:	bl	18d0 <fread@plt>
   1090c:	mov	r4, r0
   10910:	mov	r7, #0
   10914:	add	sl, r9, r7
   10918:	mov	r0, r6
   1091c:	bl	1c28 <Mat_int32Swap>
   10920:	strh	r0, [sl]
   10924:	add	r7, r7, #2
   10928:	add	r6, r6, #4
   1092c:	cmp	r7, #512	; 0x200
   10930:	bne	10914 <ReadUInt16Data+0x918>
   10934:	add	r5, r4, r5
   10938:	add	r9, r9, #512	; 0x200
   1093c:	add	r1, r8, #512	; 0x200
   10940:	ldr	r0, [sp, #20]
   10944:	add	r0, r0, #256	; 0x100
   10948:	ldr	r2, [sp, #16]
   1094c:	cmp	r0, r2
   10950:	ldr	r7, [sp, #24]
   10954:	ldr	sl, [sp, #28]
   10958:	blt	108ec <ReadUInt16Data+0x8f0>
   1095c:	ldr	r1, [sp, #8]
   10960:	cmp	r0, r1
   10964:	bge	114a4 <ReadUInt16Data+0x14a8>
   10968:	sub	r6, r1, r0
   1096c:	ldr	r3, [sl]
   10970:	add	r4, sp, #32
   10974:	mov	r0, r4
   10978:	mov	r1, r7
   1097c:	mov	r2, r6
   10980:	bl	18d0 <fread@plt>
   10984:	add	r5, r0, r5
   10988:	cmp	r6, #1
   1098c:	blt	114a4 <ReadUInt16Data+0x14a8>
   10990:	ldr	r0, [sp, #16]
   10994:	ldr	r1, [sp, #20]
   10998:	sub	r6, r0, r1
   1099c:	mov	r0, r4
   109a0:	bl	1c28 <Mat_int32Swap>
   109a4:	strh	r0, [r8], #2
   109a8:	subs	r6, r6, #1
   109ac:	add	r4, r4, #4
   109b0:	bne	1099c <ReadUInt16Data+0x9a0>
   109b4:	b	114a4 <ReadUInt16Data+0x14a8>
   109b8:	add	r1, r9, #512	; 0x200
   109bc:	str	r6, [sp, #8]
   109c0:	sub	r0, r6, #256	; 0x100
   109c4:	str	r0, [sp, #16]
   109c8:	mov	r0, #0
   109cc:	mov	r5, #0
   109d0:	str	r0, [sp, #20]
   109d4:	mov	r8, r1
   109d8:	ldr	r3, [sl]
   109dc:	add	r6, sp, #32
   109e0:	mov	r0, r6
   109e4:	mov	r1, r7
   109e8:	mov	r2, #256	; 0x100
   109ec:	bl	18d0 <fread@plt>
   109f0:	mov	r4, r0
   109f4:	mov	r7, #0
   109f8:	add	sl, r9, r7
   109fc:	mov	r0, r6
   10a00:	bl	1c3c <Mat_uint32Swap>
   10a04:	strh	r0, [sl]
   10a08:	add	r7, r7, #2
   10a0c:	add	r6, r6, #4
   10a10:	cmp	r7, #512	; 0x200
   10a14:	bne	109f8 <ReadUInt16Data+0x9fc>
   10a18:	add	r5, r4, r5
   10a1c:	add	r9, r9, #512	; 0x200
   10a20:	add	r1, r8, #512	; 0x200
   10a24:	ldr	r0, [sp, #20]
   10a28:	add	r0, r0, #256	; 0x100
   10a2c:	ldr	r2, [sp, #16]
   10a30:	cmp	r0, r2
   10a34:	ldr	r7, [sp, #24]
   10a38:	ldr	sl, [sp, #28]
   10a3c:	blt	109d0 <ReadUInt16Data+0x9d4>
   10a40:	ldr	r1, [sp, #8]
   10a44:	cmp	r0, r1
   10a48:	bge	114a4 <ReadUInt16Data+0x14a8>
   10a4c:	sub	r6, r1, r0
   10a50:	ldr	r3, [sl]
   10a54:	add	r4, sp, #32
   10a58:	mov	r0, r4
   10a5c:	mov	r1, r7
   10a60:	mov	r2, r6
   10a64:	bl	18d0 <fread@plt>
   10a68:	add	r5, r0, r5
   10a6c:	cmp	r6, #1
   10a70:	blt	114a4 <ReadUInt16Data+0x14a8>
   10a74:	ldr	r0, [sp, #16]
   10a78:	ldr	r1, [sp, #20]
   10a7c:	sub	r6, r0, r1
   10a80:	mov	r0, r4
   10a84:	bl	1c3c <Mat_uint32Swap>
   10a88:	strh	r0, [r8], #2
   10a8c:	subs	r6, r6, #1
   10a90:	add	r4, r4, #4
   10a94:	bne	10a80 <ReadUInt16Data+0xa84>
   10a98:	b	114a4 <ReadUInt16Data+0x14a8>
   10a9c:	add	r1, r9, #512	; 0x200
   10aa0:	str	r6, [sp, #8]
   10aa4:	sub	r0, r6, #256	; 0x100
   10aa8:	str	r0, [sp, #20]
   10aac:	mov	r0, #0
   10ab0:	mov	r5, #0
   10ab4:	mov	sl, r0
   10ab8:	mov	r8, r1
   10abc:	ldr	r0, [sp, #28]
   10ac0:	ldr	r3, [r0]
   10ac4:	add	r6, sp, #32
   10ac8:	mov	r0, r6
   10acc:	mov	r1, r7
   10ad0:	mov	r2, #256	; 0x100
   10ad4:	bl	18d0 <fread@plt>
   10ad8:	mov	r4, r0
   10adc:	mov	r7, #0
   10ae0:	mov	r0, r6
   10ae4:	bl	1c7c <Mat_floatSwap>
   10ae8:	vcvt.u32.f32	s0, s0
   10aec:	add	r0, r9, r7
   10af0:	vmov	r1, s0
   10af4:	strh	r1, [r0]
   10af8:	add	r7, r7, #2
   10afc:	add	r6, r6, #4
   10b00:	cmp	r7, #512	; 0x200
   10b04:	bne	10ae0 <ReadUInt16Data+0xae4>
   10b08:	add	r5, r4, r5
   10b0c:	add	r9, r9, #512	; 0x200
   10b10:	add	r1, r8, #512	; 0x200
   10b14:	add	r0, sl, #256	; 0x100
   10b18:	ldr	r2, [sp, #20]
   10b1c:	cmp	r0, r2
   10b20:	ldr	r7, [sp, #24]
   10b24:	blt	10ab4 <ReadUInt16Data+0xab8>
   10b28:	ldr	r1, [sp, #8]
   10b2c:	cmp	r0, r1
   10b30:	bge	114a4 <ReadUInt16Data+0x14a8>
   10b34:	sub	r6, r1, r0
   10b38:	ldr	r0, [sp, #28]
   10b3c:	ldr	r3, [r0]
   10b40:	add	r4, sp, #32
   10b44:	mov	r0, r4
   10b48:	mov	r1, r7
   10b4c:	mov	r2, r6
   10b50:	bl	18d0 <fread@plt>
   10b54:	add	r5, r0, r5
   10b58:	cmp	r6, #1
   10b5c:	blt	114a4 <ReadUInt16Data+0x14a8>
   10b60:	ldr	r0, [sp, #20]
   10b64:	sub	r6, r0, sl
   10b68:	mov	r0, r4
   10b6c:	bl	1c7c <Mat_floatSwap>
   10b70:	vcvt.u32.f32	s0, s0
   10b74:	vmov	r0, s0
   10b78:	strh	r0, [r8], #2
   10b7c:	subs	r6, r6, #1
   10b80:	add	r4, r4, #4
   10b84:	bne	10b68 <ReadUInt16Data+0xb6c>
   10b88:	b	114a4 <ReadUInt16Data+0x14a8>
   10b8c:	add	r1, r9, #512	; 0x200
   10b90:	str	r6, [sp, #8]
   10b94:	sub	r0, r6, #256	; 0x100
   10b98:	str	r0, [sp, #20]
   10b9c:	mov	r0, #0
   10ba0:	mov	r5, #0
   10ba4:	mov	sl, r0
   10ba8:	mov	r8, r1
   10bac:	ldr	r0, [sp, #28]
   10bb0:	ldr	r3, [r0]
   10bb4:	add	r6, sp, #32
   10bb8:	mov	r0, r6
   10bbc:	mov	r1, r7
   10bc0:	mov	r2, #256	; 0x100
   10bc4:	bl	18d0 <fread@plt>
   10bc8:	mov	r4, r0
   10bcc:	mov	r7, #0
   10bd0:	mov	r0, r6
   10bd4:	bl	1cc0 <Mat_doubleSwap>
   10bd8:	vcvt.u32.f64	s0, d0
   10bdc:	add	r0, r9, r7
   10be0:	vmov	r1, s0
   10be4:	strh	r1, [r0]
   10be8:	add	r7, r7, #2
   10bec:	add	r6, r6, #8
   10bf0:	cmp	r7, #512	; 0x200
   10bf4:	bne	10bd0 <ReadUInt16Data+0xbd4>
   10bf8:	add	r5, r4, r5
   10bfc:	add	r9, r9, #512	; 0x200
   10c00:	add	r1, r8, #512	; 0x200
   10c04:	add	r0, sl, #256	; 0x100
   10c08:	ldr	r2, [sp, #20]
   10c0c:	cmp	r0, r2
   10c10:	ldr	r7, [sp, #24]
   10c14:	blt	10ba4 <ReadUInt16Data+0xba8>
   10c18:	ldr	r1, [sp, #8]
   10c1c:	cmp	r0, r1
   10c20:	bge	114a4 <ReadUInt16Data+0x14a8>
   10c24:	sub	r6, r1, r0
   10c28:	ldr	r0, [sp, #28]
   10c2c:	ldr	r3, [r0]
   10c30:	add	r4, sp, #32
   10c34:	mov	r0, r4
   10c38:	mov	r1, r7
   10c3c:	mov	r2, r6
   10c40:	bl	18d0 <fread@plt>
   10c44:	add	r5, r0, r5
   10c48:	cmp	r6, #1
   10c4c:	blt	114a4 <ReadUInt16Data+0x14a8>
   10c50:	ldr	r0, [sp, #20]
   10c54:	sub	r6, r0, sl
   10c58:	mov	r0, r4
   10c5c:	bl	1cc0 <Mat_doubleSwap>
   10c60:	vcvt.u32.f64	s0, d0
   10c64:	vmov	r0, s0
   10c68:	strh	r0, [r8], #2
   10c6c:	subs	r6, r6, #1
   10c70:	add	r4, r4, #8
   10c74:	bne	10c58 <ReadUInt16Data+0xc5c>
   10c78:	b	114a4 <ReadUInt16Data+0x14a8>
   10c7c:	str	r5, [sp, #4]
   10c80:	add	r1, r9, #512	; 0x200
   10c84:	str	r6, [sp, #8]
   10c88:	sub	r0, r6, #256	; 0x100
   10c8c:	str	r0, [sp, #12]
   10c90:	mov	r0, #0
   10c94:	mov	r7, r9
   10c98:	mov	r2, #0
   10c9c:	str	r2, [sp, #20]
   10ca0:	mov	r5, r0
   10ca4:	str	r1, [sp, #16]
   10ca8:	ldr	r3, [sl]
   10cac:	add	r4, sp, #32
   10cb0:	mov	r0, r4
   10cb4:	ldr	r1, [sp, #24]
   10cb8:	mov	r2, #256	; 0x100
   10cbc:	bl	18d0 <fread@plt>
   10cc0:	mov	r8, r0
   10cc4:	mov	sl, #0
   10cc8:	add	r6, r7, sl
   10ccc:	mov	r0, r4
   10cd0:	bl	1bbc <Mat_int64Swap>
   10cd4:	strh	r0, [r6]
   10cd8:	add	sl, sl, #2
   10cdc:	add	r4, r4, #8
   10ce0:	cmp	sl, #512	; 0x200
   10ce4:	bne	10cc8 <ReadUInt16Data+0xccc>
   10ce8:	ldr	r0, [sp, #20]
   10cec:	add	r0, r8, r0
   10cf0:	str	r0, [sp, #20]
   10cf4:	add	r7, r7, #512	; 0x200
   10cf8:	ldr	r0, [sp, #16]
   10cfc:	add	r1, r0, #512	; 0x200
   10d00:	mov	r0, r5
   10d04:	add	r0, r5, #256	; 0x100
   10d08:	ldr	r2, [sp, #12]
   10d0c:	cmp	r0, r2
   10d10:	ldr	sl, [sp, #28]
   10d14:	blt	10ca0 <ReadUInt16Data+0xca4>
   10d18:	ldr	r6, [sp, #8]
   10d1c:	cmp	r0, r6
   10d20:	bge	10d7c <ReadUInt16Data+0xd80>
   10d24:	sub	r8, r6, r0
   10d28:	ldr	r3, [sl]
   10d2c:	add	r4, sp, #32
   10d30:	mov	r0, r4
   10d34:	ldr	r7, [sp, #24]
   10d38:	mov	r1, r7
   10d3c:	mov	r2, r8
   10d40:	bl	18d0 <fread@plt>
   10d44:	ldr	r1, [sp, #20]
   10d48:	add	r1, r0, r1
   10d4c:	str	r1, [sp, #20]
   10d50:	cmp	r8, #1
   10d54:	blt	1124c <ReadUInt16Data+0x1250>
   10d58:	ldr	r0, [sp, #12]
   10d5c:	sub	r7, r0, r5
   10d60:	ldr	r5, [sp, #16]
   10d64:	mov	r0, r4
   10d68:	bl	1bbc <Mat_int64Swap>
   10d6c:	strh	r0, [r5], #2
   10d70:	subs	r7, r7, #1
   10d74:	add	r4, r4, #8
   10d78:	bne	10d64 <ReadUInt16Data+0xd68>
   10d7c:	ldr	r7, [sp, #24]
   10d80:	b	1124c <ReadUInt16Data+0x1250>
   10d84:	lsl	r4, r6, #1
   10d88:	str	r6, [sp, #8]
   10d8c:	sub	r0, r6, #256	; 0x100
   10d90:	str	r0, [sp, #20]
   10d94:	mov	r6, #0
   10d98:	add	r8, sp, #32
   10d9c:	mov	r5, #0
   10da0:	ldr	r3, [sl]
   10da4:	mov	r0, r8
   10da8:	mov	r1, r7
   10dac:	mov	r2, #256	; 0x100
   10db0:	bl	18d0 <fread@plt>
   10db4:	mov	sl, r0
   10db8:	add	r0, r9, r6, lsl #1
   10dbc:	mov	r1, r8
   10dc0:	mov	r2, #512	; 0x200
   10dc4:	bl	1834 <memcpy@plt>
   10dc8:	add	r5, sl, r5
   10dcc:	ldr	sl, [sp, #28]
   10dd0:	sub	r4, r4, #512	; 0x200
   10dd4:	add	r6, r6, #256	; 0x100
   10dd8:	ldr	r0, [sp, #20]
   10ddc:	cmp	r6, r0
   10de0:	blt	10da0 <ReadUInt16Data+0xda4>
   10de4:	ldr	r0, [sp, #8]
   10de8:	cmp	r6, r0
   10dec:	bge	114a0 <ReadUInt16Data+0x14a4>
   10df0:	sub	r8, r0, r6
   10df4:	ldr	r3, [sl]
   10df8:	add	r0, sp, #32
   10dfc:	ldr	r7, [sp, #24]
   10e00:	mov	r1, r7
   10e04:	mov	r2, r8
   10e08:	bl	18d0 <fread@plt>
   10e0c:	add	r5, r0, r5
   10e10:	cmp	r8, #0
   10e14:	ble	114a4 <ReadUInt16Data+0x14a8>
   10e18:	add	r0, r9, r6, lsl #1
   10e1c:	add	r1, sp, #32
   10e20:	mov	r2, r4
   10e24:	bl	1834 <memcpy@plt>
   10e28:	b	114a4 <ReadUInt16Data+0x14a8>
   10e2c:	add	r1, r9, #512	; 0x200
   10e30:	str	r6, [sp, #8]
   10e34:	sub	r8, r6, #256	; 0x100
   10e38:	mov	r0, #0
   10e3c:	add	r4, sp, #32
   10e40:	mov	r5, #0
   10e44:	mov	sl, r0
   10e48:	mov	r6, r1
   10e4c:	ldr	r0, [sp, #28]
   10e50:	ldr	r3, [r0]
   10e54:	mov	r0, r4
   10e58:	mov	r1, r7
   10e5c:	mov	r2, #256	; 0x100
   10e60:	bl	18d0 <fread@plt>
   10e64:	mov	r1, #0
   10e68:	ldr	r2, [r4, r1, lsl #1]
   10e6c:	add	r3, r9, r1
   10e70:	strh	r2, [r3]
   10e74:	add	r1, r1, #2
   10e78:	cmp	r1, #512	; 0x200
   10e7c:	bne	10e68 <ReadUInt16Data+0xe6c>
   10e80:	add	r5, r0, r5
   10e84:	add	r9, r9, #512	; 0x200
   10e88:	add	r1, r6, #512	; 0x200
   10e8c:	add	r0, sl, #256	; 0x100
   10e90:	cmp	r0, r8
   10e94:	blt	10e44 <ReadUInt16Data+0xe48>
   10e98:	ldr	r2, [sp, #8]
   10e9c:	cmp	r0, r2
   10ea0:	bge	114a4 <ReadUInt16Data+0x14a8>
   10ea4:	mov	r1, r7
   10ea8:	sub	r7, r2, r0
   10eac:	ldr	r0, [sp, #28]
   10eb0:	ldr	r3, [r0]
   10eb4:	add	r4, sp, #32
   10eb8:	mov	r0, r4
   10ebc:	mov	r2, r7
   10ec0:	bl	18d0 <fread@plt>
   10ec4:	add	r5, r0, r5
   10ec8:	cmp	r7, #1
   10ecc:	blt	114a0 <ReadUInt16Data+0x14a4>
   10ed0:	sub	r0, r8, sl
   10ed4:	ldr	r1, [r4], #4
   10ed8:	strh	r1, [r6], #2
   10edc:	subs	r0, r0, #1
   10ee0:	bne	10ed4 <ReadUInt16Data+0xed8>
   10ee4:	b	114a0 <ReadUInt16Data+0x14a4>
   10ee8:	add	r1, r9, #512	; 0x200
   10eec:	str	r6, [sp, #8]
   10ef0:	sub	r8, r6, #256	; 0x100
   10ef4:	mov	r0, #0
   10ef8:	add	r4, sp, #32
   10efc:	mov	r5, #0
   10f00:	mov	sl, r0
   10f04:	mov	r6, r1
   10f08:	ldr	r0, [sp, #28]
   10f0c:	ldr	r3, [r0]
   10f10:	mov	r0, r4
   10f14:	mov	r1, r7
   10f18:	mov	r2, #256	; 0x100
   10f1c:	bl	18d0 <fread@plt>
   10f20:	mov	r1, #0
   10f24:	ldr	r2, [r4, r1, lsl #1]
   10f28:	add	r3, r9, r1
   10f2c:	strh	r2, [r3]
   10f30:	add	r1, r1, #2
   10f34:	cmp	r1, #512	; 0x200
   10f38:	bne	10f24 <ReadUInt16Data+0xf28>
   10f3c:	add	r5, r0, r5
   10f40:	add	r9, r9, #512	; 0x200
   10f44:	add	r1, r6, #512	; 0x200
   10f48:	add	r0, sl, #256	; 0x100
   10f4c:	cmp	r0, r8
   10f50:	blt	10f00 <ReadUInt16Data+0xf04>
   10f54:	ldr	r2, [sp, #8]
   10f58:	cmp	r0, r2
   10f5c:	bge	114a4 <ReadUInt16Data+0x14a8>
   10f60:	mov	r1, r7
   10f64:	sub	r7, r2, r0
   10f68:	ldr	r0, [sp, #28]
   10f6c:	ldr	r3, [r0]
   10f70:	add	r4, sp, #32
   10f74:	mov	r0, r4
   10f78:	mov	r2, r7
   10f7c:	bl	18d0 <fread@plt>
   10f80:	add	r5, r0, r5
   10f84:	cmp	r7, #1
   10f88:	blt	114a0 <ReadUInt16Data+0x14a4>
   10f8c:	sub	r0, r8, sl
   10f90:	ldr	r1, [r4], #4
   10f94:	strh	r1, [r6], #2
   10f98:	subs	r0, r0, #1
   10f9c:	bne	10f90 <ReadUInt16Data+0xf94>
   10fa0:	b	114a0 <ReadUInt16Data+0x14a4>
   10fa4:	add	r1, r9, #512	; 0x200
   10fa8:	str	r6, [sp, #8]
   10fac:	sub	r8, r6, #256	; 0x100
   10fb0:	mov	r0, #0
   10fb4:	add	r4, sp, #32
   10fb8:	mov	r5, #0
   10fbc:	mov	sl, r0
   10fc0:	mov	r6, r1
   10fc4:	ldr	r0, [sp, #28]
   10fc8:	ldr	r3, [r0]
   10fcc:	mov	r0, r4
   10fd0:	mov	r1, r7
   10fd4:	mov	r2, #256	; 0x100
   10fd8:	bl	18d0 <fread@plt>
   10fdc:	mov	r1, #0
   10fe0:	mov	r2, r4
   10fe4:	vldr	s0, [r2]
   10fe8:	vcvt.u32.f32	s0, s0
   10fec:	add	r3, r9, r1
   10ff0:	vmov	r7, s0
   10ff4:	strh	r7, [r3]
   10ff8:	add	r1, r1, #2
   10ffc:	add	r2, r2, #4
   11000:	cmp	r1, #512	; 0x200
   11004:	bne	10fe4 <ReadUInt16Data+0xfe8>
   11008:	add	r5, r0, r5
   1100c:	add	r9, r9, #512	; 0x200
   11010:	add	r1, r6, #512	; 0x200
   11014:	add	r0, sl, #256	; 0x100
   11018:	cmp	r0, r8
   1101c:	ldr	r7, [sp, #24]
   11020:	blt	10fbc <ReadUInt16Data+0xfc0>
   11024:	ldr	r2, [sp, #8]
   11028:	cmp	r0, r2
   1102c:	bge	114a4 <ReadUInt16Data+0x14a8>
   11030:	mov	r1, r7
   11034:	sub	r7, r2, r0
   11038:	ldr	r0, [sp, #28]
   1103c:	ldr	r3, [r0]
   11040:	add	r4, sp, #32
   11044:	mov	r0, r4
   11048:	mov	r2, r7
   1104c:	bl	18d0 <fread@plt>
   11050:	add	r5, r0, r5
   11054:	cmp	r7, #1
   11058:	blt	114a0 <ReadUInt16Data+0x14a4>
   1105c:	sub	r0, r8, sl
   11060:	vldr	s0, [r4]
   11064:	vcvt.u32.f32	s0, s0
   11068:	vmov	r1, s0
   1106c:	strh	r1, [r6], #2
   11070:	subs	r0, r0, #1
   11074:	add	r4, r4, #4
   11078:	bne	11060 <ReadUInt16Data+0x1064>
   1107c:	b	114a0 <ReadUInt16Data+0x14a4>
   11080:	add	r1, r9, #512	; 0x200
   11084:	str	r6, [sp, #8]
   11088:	sub	r8, r6, #256	; 0x100
   1108c:	mov	r0, #0
   11090:	add	r4, sp, #32
   11094:	mov	r5, #0
   11098:	mov	sl, r0
   1109c:	mov	r6, r1
   110a0:	ldr	r0, [sp, #28]
   110a4:	ldr	r3, [r0]
   110a8:	mov	r0, r4
   110ac:	mov	r1, r7
   110b0:	mov	r2, #256	; 0x100
   110b4:	bl	18d0 <fread@plt>
   110b8:	mov	r1, #0
   110bc:	mov	r2, r4
   110c0:	vldr	d16, [r2]
   110c4:	vcvt.u32.f64	s0, d16
   110c8:	add	r3, r9, r1
   110cc:	vmov	r7, s0
   110d0:	strh	r7, [r3]
   110d4:	add	r1, r1, #2
   110d8:	add	r2, r2, #8
   110dc:	cmp	r1, #512	; 0x200
   110e0:	bne	110c0 <ReadUInt16Data+0x10c4>
   110e4:	add	r5, r0, r5
   110e8:	add	r9, r9, #512	; 0x200
   110ec:	add	r1, r6, #512	; 0x200
   110f0:	add	r0, sl, #256	; 0x100
   110f4:	cmp	r0, r8
   110f8:	ldr	r7, [sp, #24]
   110fc:	blt	11098 <ReadUInt16Data+0x109c>
   11100:	ldr	r2, [sp, #8]
   11104:	cmp	r0, r2
   11108:	bge	114a4 <ReadUInt16Data+0x14a8>
   1110c:	mov	r1, r7
   11110:	sub	r7, r2, r0
   11114:	ldr	r0, [sp, #28]
   11118:	ldr	r3, [r0]
   1111c:	add	r4, sp, #32
   11120:	mov	r0, r4
   11124:	mov	r2, r7
   11128:	bl	18d0 <fread@plt>
   1112c:	add	r5, r0, r5
   11130:	cmp	r7, #1
   11134:	blt	114a0 <ReadUInt16Data+0x14a4>
   11138:	sub	r0, r8, sl
   1113c:	vldr	d16, [r4]
   11140:	vcvt.u32.f64	s0, d16
   11144:	vmov	r1, s0
   11148:	strh	r1, [r6], #2
   1114c:	subs	r0, r0, #1
   11150:	add	r4, r4, #8
   11154:	bne	1113c <ReadUInt16Data+0x1140>
   11158:	b	114a0 <ReadUInt16Data+0x14a4>
   1115c:	str	r5, [sp, #4]
   11160:	add	r1, r9, #512	; 0x200
   11164:	str	r6, [sp, #8]
   11168:	sub	r0, r6, #256	; 0x100
   1116c:	str	r0, [sp, #16]
   11170:	mov	r0, #0
   11174:	add	r8, sp, #32
   11178:	mov	r7, r9
   1117c:	mov	r5, #0
   11180:	mov	sl, r0
   11184:	mov	r6, r1
   11188:	ldr	r0, [sp, #28]
   1118c:	ldr	r3, [r0]
   11190:	mov	r0, r8
   11194:	ldr	r1, [sp, #24]
   11198:	mov	r2, #256	; 0x100
   1119c:	bl	18d0 <fread@plt>
   111a0:	mov	r1, #0
   111a4:	mov	r2, r8
   111a8:	add	r3, r7, r1
   111ac:	ldrh	r4, [r2], #8
   111b0:	strh	r4, [r3]
   111b4:	add	r1, r1, #2
   111b8:	cmp	r1, #512	; 0x200
   111bc:	bne	111a8 <ReadUInt16Data+0x11ac>
   111c0:	add	r5, r0, r5
   111c4:	add	r7, r7, #512	; 0x200
   111c8:	add	r1, r6, #512	; 0x200
   111cc:	add	r0, sl, #256	; 0x100
   111d0:	ldr	r2, [sp, #16]
   111d4:	cmp	r0, r2
   111d8:	blt	11180 <ReadUInt16Data+0x1184>
   111dc:	ldr	r1, [sp, #8]
   111e0:	cmp	r0, r1
   111e4:	bge	1123c <ReadUInt16Data+0x1240>
   111e8:	sub	r8, r1, r0
   111ec:	ldr	r0, [sp, #28]
   111f0:	ldr	r3, [r0]
   111f4:	add	r4, sp, #32
   111f8:	mov	r0, r4
   111fc:	ldr	r7, [sp, #24]
   11200:	mov	r1, r7
   11204:	mov	r2, r8
   11208:	bl	18d0 <fread@plt>
   1120c:	add	r5, r0, r5
   11210:	cmp	r8, #1
   11214:	str	r5, [sp, #20]
   11218:	blt	11234 <ReadUInt16Data+0x1238>
   1121c:	ldr	r0, [sp, #16]
   11220:	sub	r0, r0, sl
   11224:	ldrh	r1, [r4], #8
   11228:	strh	r1, [r6], #2
   1122c:	subs	r0, r0, #1
   11230:	bne	11224 <ReadUInt16Data+0x1228>
   11234:	ldr	r6, [sp, #8]
   11238:	b	11248 <ReadUInt16Data+0x124c>
   1123c:	str	r5, [sp, #20]
   11240:	ldr	r7, [sp, #24]
   11244:	mov	r6, r1
   11248:	ldr	sl, [sp, #28]
   1124c:	ldr	r5, [sp, #4]
   11250:	cmp	r5, #13
   11254:	bne	113d8 <ReadUInt16Data+0x13dc>
   11258:	ldr	r0, [sl, #20]
   1125c:	cmp	r0, #0
   11260:	beq	112b0 <ReadUInt16Data+0x12b4>
   11264:	cmp	r6, #256	; 0x100
   11268:	bgt	112f4 <ReadUInt16Data+0x12f8>
   1126c:	ldr	r3, [sl]
   11270:	add	r4, sp, #32
   11274:	mov	r0, r4
   11278:	mov	r1, r7
   1127c:	mov	r2, r6
   11280:	bl	18d0 <fread@plt>
   11284:	ldr	r5, [sp, #20]
   11288:	add	r5, r0, r5
   1128c:	cmp	r6, #1
   11290:	blt	114a4 <ReadUInt16Data+0x14a8>
   11294:	mov	r0, r4
   11298:	bl	1c0c <Mat_uint64Swap>
   1129c:	strh	r0, [r9], #2
   112a0:	subs	r6, r6, #1
   112a4:	add	r4, r4, #8
   112a8:	bne	11294 <ReadUInt16Data+0x1298>
   112ac:	b	114a4 <ReadUInt16Data+0x14a8>
   112b0:	cmp	r6, #256	; 0x100
   112b4:	bgt	113e0 <ReadUInt16Data+0x13e4>
   112b8:	ldr	r3, [sl]
   112bc:	add	r4, sp, #32
   112c0:	mov	r0, r4
   112c4:	mov	r1, r7
   112c8:	mov	r2, r6
   112cc:	bl	18d0 <fread@plt>
   112d0:	ldr	r5, [sp, #20]
   112d4:	add	r5, r0, r5
   112d8:	cmp	r6, #1
   112dc:	blt	114a4 <ReadUInt16Data+0x14a8>
   112e0:	ldrh	r0, [r4], #8
   112e4:	strh	r0, [r9], #2
   112e8:	subs	r6, r6, #1
   112ec:	bne	112e0 <ReadUInt16Data+0x12e4>
   112f0:	b	114a4 <ReadUInt16Data+0x14a8>
   112f4:	add	r1, r9, #512	; 0x200
   112f8:	str	r6, [sp, #8]
   112fc:	sub	r5, r6, #256	; 0x100
   11300:	mov	r0, #0
   11304:	str	r0, [sp, #16]
   11308:	mov	r8, r1
   1130c:	ldr	r3, [sl]
   11310:	add	r6, sp, #32
   11314:	mov	r0, r6
   11318:	mov	r1, r7
   1131c:	mov	r2, #256	; 0x100
   11320:	bl	18d0 <fread@plt>
   11324:	mov	r4, r0
   11328:	mov	r7, #0
   1132c:	add	sl, r9, r7
   11330:	mov	r0, r6
   11334:	bl	1c0c <Mat_uint64Swap>
   11338:	strh	r0, [sl]
   1133c:	add	r7, r7, #2
   11340:	add	r6, r6, #8
   11344:	cmp	r7, #512	; 0x200
   11348:	bne	1132c <ReadUInt16Data+0x1330>
   1134c:	ldr	r0, [sp, #20]
   11350:	add	r0, r4, r0
   11354:	str	r0, [sp, #20]
   11358:	add	r9, r9, #512	; 0x200
   1135c:	add	r1, r8, #512	; 0x200
   11360:	ldr	r0, [sp, #16]
   11364:	add	r0, r0, #256	; 0x100
   11368:	cmp	r0, r5
   1136c:	ldr	r7, [sp, #24]
   11370:	ldr	sl, [sp, #28]
   11374:	blt	11304 <ReadUInt16Data+0x1308>
   11378:	ldr	r1, [sp, #8]
   1137c:	cmp	r0, r1
   11380:	bge	113d8 <ReadUInt16Data+0x13dc>
   11384:	mov	r9, r5
   11388:	sub	r6, r1, r0
   1138c:	ldr	r3, [sl]
   11390:	add	r4, sp, #32
   11394:	mov	r0, r4
   11398:	mov	r1, r7
   1139c:	mov	r2, r6
   113a0:	bl	18d0 <fread@plt>
   113a4:	ldr	r5, [sp, #20]
   113a8:	add	r5, r0, r5
   113ac:	cmp	r6, #1
   113b0:	blt	114a4 <ReadUInt16Data+0x14a8>
   113b4:	ldr	r0, [sp, #16]
   113b8:	sub	r6, r9, r0
   113bc:	mov	r0, r4
   113c0:	bl	1c0c <Mat_uint64Swap>
   113c4:	strh	r0, [r8], #2
   113c8:	subs	r6, r6, #1
   113cc:	add	r4, r4, #8
   113d0:	bne	113bc <ReadUInt16Data+0x13c0>
   113d4:	b	114a4 <ReadUInt16Data+0x14a8>
   113d8:	ldr	r5, [sp, #20]
   113dc:	b	114a4 <ReadUInt16Data+0x14a8>
   113e0:	add	r1, r9, #512	; 0x200
   113e4:	str	r6, [sp, #8]
   113e8:	sub	r8, r6, #256	; 0x100
   113ec:	mov	r0, #0
   113f0:	add	r4, sp, #32
   113f4:	ldr	r5, [sp, #20]
   113f8:	mov	sl, r0
   113fc:	mov	r6, r1
   11400:	ldr	r0, [sp, #28]
   11404:	ldr	r3, [r0]
   11408:	mov	r0, r4
   1140c:	mov	r1, r7
   11410:	mov	r2, #256	; 0x100
   11414:	bl	18d0 <fread@plt>
   11418:	mov	r1, #0
   1141c:	mov	r2, r4
   11420:	add	r3, r9, r1
   11424:	ldrh	r7, [r2], #8
   11428:	strh	r7, [r3]
   1142c:	add	r1, r1, #2
   11430:	cmp	r1, #512	; 0x200
   11434:	bne	11420 <ReadUInt16Data+0x1424>
   11438:	add	r5, r0, r5
   1143c:	add	r9, r9, #512	; 0x200
   11440:	add	r1, r6, #512	; 0x200
   11444:	add	r0, sl, #256	; 0x100
   11448:	cmp	r0, r8
   1144c:	ldr	r7, [sp, #24]
   11450:	blt	113f8 <ReadUInt16Data+0x13fc>
   11454:	ldr	r2, [sp, #8]
   11458:	cmp	r0, r2
   1145c:	bge	114a4 <ReadUInt16Data+0x14a8>
   11460:	mov	r1, r7
   11464:	sub	r7, r2, r0
   11468:	ldr	r0, [sp, #28]
   1146c:	ldr	r3, [r0]
   11470:	add	r4, sp, #32
   11474:	mov	r0, r4
   11478:	mov	r2, r7
   1147c:	bl	18d0 <fread@plt>
   11480:	add	r5, r0, r5
   11484:	cmp	r7, #1
   11488:	blt	114a0 <ReadUInt16Data+0x14a4>
   1148c:	sub	r0, r8, sl
   11490:	ldrh	r1, [r4], #8
   11494:	strh	r1, [r6], #2
   11498:	subs	r0, r0, #1
   1149c:	bne	11490 <ReadUInt16Data+0x1494>
   114a0:	ldr	r7, [sp, #24]
   114a4:	mul	r0, r5, r7
   114a8:	sub	sp, fp, #28
   114ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114b0 <ReadCompressedUInt16Data>:
   114b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114b4:	add	fp, sp, #28
   114b8:	sub	sp, sp, #20
   114bc:	mov	r7, r0
   114c0:	mov	r0, #0
   114c4:	cmp	r1, #0
   114c8:	beq	114dc <ReadCompressedUInt16Data+0x2c>
   114cc:	cmp	r7, #0
   114d0:	movne	r5, r2
   114d4:	cmpne	r2, #0
   114d8:	bne	114e4 <ReadCompressedUInt16Data+0x34>
   114dc:	sub	sp, fp, #28
   114e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114e4:	mov	r4, r3
   114e8:	mov	r8, r1
   114ec:	ldr	sl, [fp, #8]
   114f0:	mov	r0, r3
   114f4:	bl	193c <Mat_SizeOf@plt>
   114f8:	mov	r6, r0
   114fc:	sub	r0, r4, #1
   11500:	cmp	r0, #12
   11504:	bhi	119f4 <ReadCompressedUInt16Data+0x544>
   11508:	add	r1, pc, #4
   1150c:	ldr	r0, [r1, r0, lsl #2]
   11510:	add	pc, r1, r0
   11514:	.word	0x00000034
   11518:	.word	0x0000006c
   1151c:	.word	0x000000a4
   11520:	.word	0x000000ec
   11524:	.word	0x00000134
   11528:	.word	0x0000017c
   1152c:	.word	0x000001c4
   11530:	.word	0x000004e0
   11534:	.word	0x00000214
   11538:	.word	0x000004e0
   1153c:	.word	0x000004e0
   11540:	.word	0x00000264
   11544:	.word	0x00000464
   11548:	cmp	sl, #1
   1154c:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   11550:	add	r9, sp, #8
   11554:	mov	r4, sl
   11558:	mov	r0, r7
   1155c:	mov	r1, r8
   11560:	mov	r2, r9
   11564:	mov	r3, r6
   11568:	bl	31e4 <InflateData>
   1156c:	ldrsb	r0, [sp, #8]
   11570:	strh	r0, [r5], #2
   11574:	subs	r4, r4, #1
   11578:	bne	11558 <ReadCompressedUInt16Data+0xa8>
   1157c:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11580:	cmp	sl, #1
   11584:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   11588:	add	r9, sp, #8
   1158c:	mov	r4, sl
   11590:	mov	r0, r7
   11594:	mov	r1, r8
   11598:	mov	r2, r9
   1159c:	mov	r3, r6
   115a0:	bl	31e4 <InflateData>
   115a4:	ldrb	r0, [sp, #8]
   115a8:	strh	r0, [r5], #2
   115ac:	subs	r4, r4, #1
   115b0:	bne	11590 <ReadCompressedUInt16Data+0xe0>
   115b4:	b	119f4 <ReadCompressedUInt16Data+0x544>
   115b8:	ldr	r0, [r7, #20]
   115bc:	cmp	r0, #0
   115c0:	beq	117c8 <ReadCompressedUInt16Data+0x318>
   115c4:	cmp	sl, #1
   115c8:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   115cc:	add	r9, sp, #8
   115d0:	mov	r4, sl
   115d4:	mov	r0, r7
   115d8:	mov	r1, r8
   115dc:	mov	r2, r9
   115e0:	mov	r3, r6
   115e4:	bl	31e4 <InflateData>
   115e8:	mov	r0, r9
   115ec:	bl	1c50 <Mat_int16Swap>
   115f0:	strh	r0, [r5], #2
   115f4:	subs	r4, r4, #1
   115f8:	bne	115d4 <ReadCompressedUInt16Data+0x124>
   115fc:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11600:	ldr	r0, [r7, #20]
   11604:	cmp	r0, #0
   11608:	beq	11800 <ReadCompressedUInt16Data+0x350>
   1160c:	cmp	sl, #1
   11610:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   11614:	add	r9, sp, #8
   11618:	mov	r4, sl
   1161c:	mov	r0, r7
   11620:	mov	r1, r8
   11624:	mov	r2, r9
   11628:	mov	r3, r6
   1162c:	bl	31e4 <InflateData>
   11630:	mov	r0, r9
   11634:	bl	1c64 <Mat_uint16Swap>
   11638:	strh	r0, [r5], #2
   1163c:	subs	r4, r4, #1
   11640:	bne	1161c <ReadCompressedUInt16Data+0x16c>
   11644:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11648:	ldr	r0, [r7, #20]
   1164c:	cmp	r0, #0
   11650:	beq	11838 <ReadCompressedUInt16Data+0x388>
   11654:	cmp	sl, #1
   11658:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   1165c:	add	r9, sp, #8
   11660:	mov	r4, sl
   11664:	mov	r0, r7
   11668:	mov	r1, r8
   1166c:	mov	r2, r9
   11670:	mov	r3, r6
   11674:	bl	31e4 <InflateData>
   11678:	mov	r0, r9
   1167c:	bl	1c28 <Mat_int32Swap>
   11680:	strh	r0, [r5], #2
   11684:	subs	r4, r4, #1
   11688:	bne	11664 <ReadCompressedUInt16Data+0x1b4>
   1168c:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11690:	ldr	r0, [r7, #20]
   11694:	cmp	r0, #0
   11698:	beq	11870 <ReadCompressedUInt16Data+0x3c0>
   1169c:	cmp	sl, #1
   116a0:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   116a4:	add	r9, sp, #8
   116a8:	mov	r4, sl
   116ac:	mov	r0, r7
   116b0:	mov	r1, r8
   116b4:	mov	r2, r9
   116b8:	mov	r3, r6
   116bc:	bl	31e4 <InflateData>
   116c0:	mov	r0, r9
   116c4:	bl	1c3c <Mat_uint32Swap>
   116c8:	strh	r0, [r5], #2
   116cc:	subs	r4, r4, #1
   116d0:	bne	116ac <ReadCompressedUInt16Data+0x1fc>
   116d4:	b	119f4 <ReadCompressedUInt16Data+0x544>
   116d8:	ldr	r0, [r7, #20]
   116dc:	cmp	r0, #0
   116e0:	beq	118a8 <ReadCompressedUInt16Data+0x3f8>
   116e4:	cmp	sl, #1
   116e8:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   116ec:	add	r9, sp, #8
   116f0:	mov	r4, sl
   116f4:	mov	r0, r7
   116f8:	mov	r1, r8
   116fc:	mov	r2, r9
   11700:	mov	r3, r6
   11704:	bl	31e4 <InflateData>
   11708:	mov	r0, r9
   1170c:	bl	1c7c <Mat_floatSwap>
   11710:	vcvt.u32.f32	s0, s0
   11714:	vmov	r0, s0
   11718:	strh	r0, [r5], #2
   1171c:	subs	r4, r4, #1
   11720:	bne	116f4 <ReadCompressedUInt16Data+0x244>
   11724:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11728:	ldr	r0, [r7, #20]
   1172c:	cmp	r0, #0
   11730:	beq	118e8 <ReadCompressedUInt16Data+0x438>
   11734:	cmp	sl, #1
   11738:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   1173c:	add	r9, sp, #8
   11740:	mov	r4, sl
   11744:	mov	r0, r7
   11748:	mov	r1, r8
   1174c:	mov	r2, r9
   11750:	mov	r3, r6
   11754:	bl	31e4 <InflateData>
   11758:	mov	r0, r9
   1175c:	bl	1cc0 <Mat_doubleSwap>
   11760:	vcvt.u32.f64	s0, d0
   11764:	vmov	r0, s0
   11768:	strh	r0, [r5], #2
   1176c:	subs	r4, r4, #1
   11770:	bne	11744 <ReadCompressedUInt16Data+0x294>
   11774:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11778:	ldr	r0, [r7, #20]
   1177c:	cmp	r0, #0
   11780:	beq	11928 <ReadCompressedUInt16Data+0x478>
   11784:	cmp	sl, #1
   11788:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   1178c:	str	r4, [sp]
   11790:	add	r4, sp, #8
   11794:	mov	r9, r5
   11798:	str	r6, [sp, #4]
   1179c:	mov	r0, r7
   117a0:	mov	r1, r8
   117a4:	mov	r2, r4
   117a8:	ldr	r3, [sp, #4]
   117ac:	bl	31e4 <InflateData>
   117b0:	mov	r0, r4
   117b4:	bl	1bbc <Mat_int64Swap>
   117b8:	strh	r0, [r9], #2
   117bc:	subs	sl, sl, #1
   117c0:	bne	1179c <ReadCompressedUInt16Data+0x2ec>
   117c4:	b	11964 <ReadCompressedUInt16Data+0x4b4>
   117c8:	cmp	sl, #1
   117cc:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   117d0:	add	r9, sp, #8
   117d4:	mov	r4, sl
   117d8:	mov	r0, r7
   117dc:	mov	r1, r8
   117e0:	mov	r2, r9
   117e4:	mov	r3, r6
   117e8:	bl	31e4 <InflateData>
   117ec:	ldrh	r0, [sp, #8]
   117f0:	strh	r0, [r5], #2
   117f4:	subs	r4, r4, #1
   117f8:	bne	117d8 <ReadCompressedUInt16Data+0x328>
   117fc:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11800:	cmp	sl, #1
   11804:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   11808:	add	r9, sp, #8
   1180c:	mov	r4, sl
   11810:	mov	r0, r7
   11814:	mov	r1, r8
   11818:	mov	r2, r9
   1181c:	mov	r3, r6
   11820:	bl	31e4 <InflateData>
   11824:	ldrh	r0, [sp, #8]
   11828:	strh	r0, [r5], #2
   1182c:	subs	r4, r4, #1
   11830:	bne	11810 <ReadCompressedUInt16Data+0x360>
   11834:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11838:	cmp	sl, #1
   1183c:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   11840:	add	r9, sp, #8
   11844:	mov	r4, sl
   11848:	mov	r0, r7
   1184c:	mov	r1, r8
   11850:	mov	r2, r9
   11854:	mov	r3, r6
   11858:	bl	31e4 <InflateData>
   1185c:	ldr	r0, [sp, #8]
   11860:	strh	r0, [r5], #2
   11864:	subs	r4, r4, #1
   11868:	bne	11848 <ReadCompressedUInt16Data+0x398>
   1186c:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11870:	cmp	sl, #1
   11874:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   11878:	add	r9, sp, #8
   1187c:	mov	r4, sl
   11880:	mov	r0, r7
   11884:	mov	r1, r8
   11888:	mov	r2, r9
   1188c:	mov	r3, r6
   11890:	bl	31e4 <InflateData>
   11894:	ldr	r0, [sp, #8]
   11898:	strh	r0, [r5], #2
   1189c:	subs	r4, r4, #1
   118a0:	bne	11880 <ReadCompressedUInt16Data+0x3d0>
   118a4:	b	119f4 <ReadCompressedUInt16Data+0x544>
   118a8:	cmp	sl, #1
   118ac:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   118b0:	add	r9, sp, #8
   118b4:	mov	r4, sl
   118b8:	mov	r0, r7
   118bc:	mov	r1, r8
   118c0:	mov	r2, r9
   118c4:	mov	r3, r6
   118c8:	bl	31e4 <InflateData>
   118cc:	vldr	s0, [sp, #8]
   118d0:	vcvt.u32.f32	s0, s0
   118d4:	vmov	r0, s0
   118d8:	strh	r0, [r5], #2
   118dc:	subs	r4, r4, #1
   118e0:	bne	118b8 <ReadCompressedUInt16Data+0x408>
   118e4:	b	119f4 <ReadCompressedUInt16Data+0x544>
   118e8:	cmp	sl, #1
   118ec:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   118f0:	add	r9, sp, #8
   118f4:	mov	r4, sl
   118f8:	mov	r0, r7
   118fc:	mov	r1, r8
   11900:	mov	r2, r9
   11904:	mov	r3, r6
   11908:	bl	31e4 <InflateData>
   1190c:	vldr	d16, [sp, #8]
   11910:	vcvt.u32.f64	s0, d16
   11914:	vmov	r0, s0
   11918:	strh	r0, [r5], #2
   1191c:	subs	r4, r4, #1
   11920:	bne	118f8 <ReadCompressedUInt16Data+0x448>
   11924:	b	119f4 <ReadCompressedUInt16Data+0x544>
   11928:	cmp	sl, #1
   1192c:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   11930:	str	r4, [sp]
   11934:	add	r9, sp, #8
   11938:	str	r6, [sp, #4]
   1193c:	mov	r6, r5
   11940:	mov	r0, r7
   11944:	mov	r1, r8
   11948:	mov	r2, r9
   1194c:	ldr	r3, [sp, #4]
   11950:	bl	31e4 <InflateData>
   11954:	ldrh	r0, [sp, #8]
   11958:	strh	r0, [r6], #2
   1195c:	subs	sl, sl, #1
   11960:	bne	11940 <ReadCompressedUInt16Data+0x490>
   11964:	ldr	r0, [sp]
   11968:	cmp	r0, #13
   1196c:	ldr	sl, [fp, #8]
   11970:	ldr	r6, [sp, #4]
   11974:	bne	119f4 <ReadCompressedUInt16Data+0x544>
   11978:	ldr	r0, [r7, #20]
   1197c:	cmp	r0, #0
   11980:	beq	119c0 <ReadCompressedUInt16Data+0x510>
   11984:	cmp	sl, #1
   11988:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   1198c:	add	r9, sp, #8
   11990:	mov	r4, sl
   11994:	mov	r0, r7
   11998:	mov	r1, r8
   1199c:	mov	r2, r9
   119a0:	mov	r3, r6
   119a4:	bl	31e4 <InflateData>
   119a8:	mov	r0, r9
   119ac:	bl	1c0c <Mat_uint64Swap>
   119b0:	strh	r0, [r5], #2
   119b4:	subs	r4, r4, #1
   119b8:	bne	11994 <ReadCompressedUInt16Data+0x4e4>
   119bc:	b	119f4 <ReadCompressedUInt16Data+0x544>
   119c0:	cmp	sl, #1
   119c4:	blt	119f4 <ReadCompressedUInt16Data+0x544>
   119c8:	add	r9, sp, #8
   119cc:	mov	r4, sl
   119d0:	mov	r0, r7
   119d4:	mov	r1, r8
   119d8:	mov	r2, r9
   119dc:	mov	r3, r6
   119e0:	bl	31e4 <InflateData>
   119e4:	ldrh	r0, [sp, #8]
   119e8:	strh	r0, [r5], #2
   119ec:	subs	r4, r4, #1
   119f0:	bne	119d0 <ReadCompressedUInt16Data+0x520>
   119f4:	mul	r0, r6, sl
   119f8:	sub	sp, fp, #28
   119fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011a00 <ReadInt8Data>:
   11a00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a04:	add	fp, sp, #28
   11a08:	sub	sp, sp, #28
   11a0c:	sub	sp, sp, #2048	; 0x800
   11a10:	mov	r4, r0
   11a14:	mov	r0, #0
   11a18:	cmp	r4, #0
   11a1c:	beq	11a34 <ReadInt8Data+0x34>
   11a20:	mov	r8, r1
   11a24:	cmp	r1, #0
   11a28:	ldrne	r1, [r4]
   11a2c:	cmpne	r1, #0
   11a30:	bne	11a3c <ReadInt8Data+0x3c>
   11a34:	sub	sp, fp, #28
   11a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a3c:	mov	r6, r3
   11a40:	mov	r5, r2
   11a44:	mov	r0, r2
   11a48:	bl	193c <Mat_SizeOf@plt>
   11a4c:	mov	r9, r0
   11a50:	sub	r0, r5, #1
   11a54:	mov	sl, #0
   11a58:	cmp	r0, #11
   11a5c:	str	r4, [sp, #20]
   11a60:	bhi	12c4c <ReadInt8Data+0x124c>
   11a64:	add	r1, pc, #4
   11a68:	ldr	r0, [r1, r0, lsl #2]
   11a6c:	add	pc, r1, r0
   11a70:	.word	0x00000030
   11a74:	.word	0x00000098
   11a78:	.word	0x000000d4
   11a7c:	.word	0x00000128
   11a80:	.word	0x0000017c
   11a84:	.word	0x000001d0
   11a88:	.word	0x00000224
   11a8c:	.word	0x000011dc
   11a90:	.word	0x00000280
   11a94:	.word	0x000011dc
   11a98:	.word	0x000011dc
   11a9c:	.word	0x000002dc
   11aa0:	cmp	r6, #256	; 0x100
   11aa4:	ble	11b10 <ReadInt8Data+0x110>
   11aa8:	str	r6, [sp, #8]
   11aac:	sub	r0, r6, #256	; 0x100
   11ab0:	str	r0, [sp, #16]
   11ab4:	mov	r5, r4
   11ab8:	mov	r4, #0
   11abc:	mov	r6, r8
   11ac0:	add	r8, sp, #24
   11ac4:	mov	sl, #0
   11ac8:	ldr	r3, [r5]
   11acc:	mov	r0, r8
   11ad0:	mov	r1, r9
   11ad4:	mov	r2, #256	; 0x100
   11ad8:	bl	18d0 <fread@plt>
   11adc:	mov	r7, r0
   11ae0:	add	r0, r6, r4
   11ae4:	mov	r1, r8
   11ae8:	mov	r2, #256	; 0x100
   11aec:	bl	1834 <memcpy@plt>
   11af0:	add	sl, r7, sl
   11af4:	add	r4, r4, #256	; 0x100
   11af8:	ldr	r0, [sp, #16]
   11afc:	cmp	r4, r0
   11b00:	blt	11ac8 <ReadInt8Data+0xc8>
   11b04:	b	11e08 <ReadInt8Data+0x408>
   11b08:	cmp	r6, #256	; 0x100
   11b0c:	bgt	11dac <ReadInt8Data+0x3ac>
   11b10:	ldr	r3, [r4]
   11b14:	add	r0, sp, #24
   11b18:	mov	r1, r9
   11b1c:	mov	r2, r6
   11b20:	bl	18d0 <fread@plt>
   11b24:	mov	sl, r0
   11b28:	cmp	r6, #0
   11b2c:	ble	12e90 <ReadInt8Data+0x1490>
   11b30:	add	r1, sp, #24
   11b34:	mov	r0, r8
   11b38:	mov	r2, r6
   11b3c:	bl	1834 <memcpy@plt>
   11b40:	b	12e90 <ReadInt8Data+0x1490>
   11b44:	ldr	r0, [r4, #20]
   11b48:	cmp	r0, #0
   11b4c:	beq	11e50 <ReadInt8Data+0x450>
   11b50:	cmp	r6, #256	; 0x100
   11b54:	bgt	1203c <ReadInt8Data+0x63c>
   11b58:	ldr	r3, [r4]
   11b5c:	add	r4, sp, #24
   11b60:	mov	r0, r4
   11b64:	mov	r1, r9
   11b68:	mov	r2, r6
   11b6c:	bl	18d0 <fread@plt>
   11b70:	mov	sl, r0
   11b74:	cmp	r6, #1
   11b78:	blt	12e90 <ReadInt8Data+0x1490>
   11b7c:	mov	r0, r4
   11b80:	bl	1c50 <Mat_int16Swap>
   11b84:	strb	r0, [r8], #1
   11b88:	subs	r6, r6, #1
   11b8c:	add	r4, r4, #2
   11b90:	bne	11b7c <ReadInt8Data+0x17c>
   11b94:	b	12e90 <ReadInt8Data+0x1490>
   11b98:	ldr	r0, [r4, #20]
   11b9c:	cmp	r0, #0
   11ba0:	beq	11e90 <ReadInt8Data+0x490>
   11ba4:	cmp	r6, #256	; 0x100
   11ba8:	bgt	1211c <ReadInt8Data+0x71c>
   11bac:	ldr	r3, [r4]
   11bb0:	add	r4, sp, #24
   11bb4:	mov	r0, r4
   11bb8:	mov	r1, r9
   11bbc:	mov	r2, r6
   11bc0:	bl	18d0 <fread@plt>
   11bc4:	mov	sl, r0
   11bc8:	cmp	r6, #1
   11bcc:	blt	12e90 <ReadInt8Data+0x1490>
   11bd0:	mov	r0, r4
   11bd4:	bl	1c64 <Mat_uint16Swap>
   11bd8:	strb	r0, [r8], #1
   11bdc:	subs	r6, r6, #1
   11be0:	add	r4, r4, #2
   11be4:	bne	11bd0 <ReadInt8Data+0x1d0>
   11be8:	b	12e90 <ReadInt8Data+0x1490>
   11bec:	ldr	r0, [r4, #20]
   11bf0:	cmp	r0, #0
   11bf4:	beq	11ed0 <ReadInt8Data+0x4d0>
   11bf8:	cmp	r6, #256	; 0x100
   11bfc:	bgt	121fc <ReadInt8Data+0x7fc>
   11c00:	ldr	r3, [r4]
   11c04:	add	r4, sp, #24
   11c08:	mov	r0, r4
   11c0c:	mov	r1, r9
   11c10:	mov	r2, r6
   11c14:	bl	18d0 <fread@plt>
   11c18:	mov	sl, r0
   11c1c:	cmp	r6, #1
   11c20:	blt	12e90 <ReadInt8Data+0x1490>
   11c24:	mov	r0, r4
   11c28:	bl	1c28 <Mat_int32Swap>
   11c2c:	strb	r0, [r8], #1
   11c30:	subs	r6, r6, #1
   11c34:	add	r4, r4, #4
   11c38:	bne	11c24 <ReadInt8Data+0x224>
   11c3c:	b	12e90 <ReadInt8Data+0x1490>
   11c40:	ldr	r0, [r4, #20]
   11c44:	cmp	r0, #0
   11c48:	beq	11f10 <ReadInt8Data+0x510>
   11c4c:	cmp	r6, #256	; 0x100
   11c50:	bgt	122dc <ReadInt8Data+0x8dc>
   11c54:	ldr	r3, [r4]
   11c58:	add	r4, sp, #24
   11c5c:	mov	r0, r4
   11c60:	mov	r1, r9
   11c64:	mov	r2, r6
   11c68:	bl	18d0 <fread@plt>
   11c6c:	mov	sl, r0
   11c70:	cmp	r6, #1
   11c74:	blt	12e90 <ReadInt8Data+0x1490>
   11c78:	mov	r0, r4
   11c7c:	bl	1c3c <Mat_uint32Swap>
   11c80:	strb	r0, [r8], #1
   11c84:	subs	r6, r6, #1
   11c88:	add	r4, r4, #4
   11c8c:	bne	11c78 <ReadInt8Data+0x278>
   11c90:	b	12e90 <ReadInt8Data+0x1490>
   11c94:	ldr	r0, [r4, #20]
   11c98:	cmp	r0, #0
   11c9c:	beq	11f50 <ReadInt8Data+0x550>
   11ca0:	cmp	r6, #256	; 0x100
   11ca4:	bgt	123bc <ReadInt8Data+0x9bc>
   11ca8:	ldr	r3, [r4]
   11cac:	add	r4, sp, #24
   11cb0:	mov	r0, r4
   11cb4:	mov	r1, r9
   11cb8:	mov	r2, r6
   11cbc:	bl	18d0 <fread@plt>
   11cc0:	mov	sl, r0
   11cc4:	cmp	r6, #1
   11cc8:	blt	12e90 <ReadInt8Data+0x1490>
   11ccc:	mov	r0, r4
   11cd0:	bl	1c7c <Mat_floatSwap>
   11cd4:	vcvt.s32.f32	s0, s0
   11cd8:	vmov	r0, s0
   11cdc:	strb	r0, [r8], #1
   11ce0:	subs	r6, r6, #1
   11ce4:	add	r4, r4, #4
   11ce8:	bne	11ccc <ReadInt8Data+0x2cc>
   11cec:	b	12e90 <ReadInt8Data+0x1490>
   11cf0:	ldr	r0, [r4, #20]
   11cf4:	cmp	r0, #0
   11cf8:	beq	11f9c <ReadInt8Data+0x59c>
   11cfc:	cmp	r6, #256	; 0x100
   11d00:	bgt	124ac <ReadInt8Data+0xaac>
   11d04:	ldr	r3, [r4]
   11d08:	add	r4, sp, #24
   11d0c:	mov	r0, r4
   11d10:	mov	r1, r9
   11d14:	mov	r2, r6
   11d18:	bl	18d0 <fread@plt>
   11d1c:	mov	sl, r0
   11d20:	cmp	r6, #1
   11d24:	blt	12e90 <ReadInt8Data+0x1490>
   11d28:	mov	r0, r4
   11d2c:	bl	1cc0 <Mat_doubleSwap>
   11d30:	vcvt.s32.f64	s0, d0
   11d34:	vmov	r0, s0
   11d38:	strb	r0, [r8], #1
   11d3c:	subs	r6, r6, #1
   11d40:	add	r4, r4, #8
   11d44:	bne	11d28 <ReadInt8Data+0x328>
   11d48:	b	12e90 <ReadInt8Data+0x1490>
   11d4c:	ldr	r0, [r4, #20]
   11d50:	cmp	r0, #0
   11d54:	beq	11fe8 <ReadInt8Data+0x5e8>
   11d58:	cmp	r6, #256	; 0x100
   11d5c:	bgt	1259c <ReadInt8Data+0xb9c>
   11d60:	ldr	r3, [r4]
   11d64:	add	r4, sp, #24
   11d68:	mov	r0, r4
   11d6c:	mov	r1, r9
   11d70:	mov	r2, r6
   11d74:	bl	18d0 <fread@plt>
   11d78:	mov	sl, r0
   11d7c:	cmp	r6, #1
   11d80:	blt	1202c <ReadInt8Data+0x62c>
   11d84:	str	r5, [sp, #12]
   11d88:	mov	r5, r6
   11d8c:	mov	r7, r8
   11d90:	mov	r0, r4
   11d94:	bl	1bbc <Mat_int64Swap>
   11d98:	strb	r0, [r7], #1
   11d9c:	subs	r5, r5, #1
   11da0:	add	r4, r4, #8
   11da4:	bne	11d90 <ReadInt8Data+0x390>
   11da8:	b	12c44 <ReadInt8Data+0x1244>
   11dac:	str	r6, [sp, #8]
   11db0:	sub	r0, r6, #256	; 0x100
   11db4:	str	r0, [sp, #16]
   11db8:	mov	r5, r4
   11dbc:	mov	r4, #0
   11dc0:	mov	r6, r8
   11dc4:	add	r8, sp, #24
   11dc8:	mov	sl, #0
   11dcc:	ldr	r3, [r5]
   11dd0:	mov	r0, r8
   11dd4:	mov	r1, r9
   11dd8:	mov	r2, #256	; 0x100
   11ddc:	bl	18d0 <fread@plt>
   11de0:	mov	r7, r0
   11de4:	add	r0, r6, r4
   11de8:	mov	r1, r8
   11dec:	mov	r2, #256	; 0x100
   11df0:	bl	1834 <memcpy@plt>
   11df4:	add	sl, r7, sl
   11df8:	add	r4, r4, #256	; 0x100
   11dfc:	ldr	r0, [sp, #16]
   11e00:	cmp	r4, r0
   11e04:	blt	11dcc <ReadInt8Data+0x3cc>
   11e08:	ldr	r0, [sp, #8]
   11e0c:	cmp	r4, r0
   11e10:	bge	12e90 <ReadInt8Data+0x1490>
   11e14:	sub	r7, r0, r4
   11e18:	ldr	r0, [sp, #20]
   11e1c:	ldr	r3, [r0]
   11e20:	add	r0, sp, #24
   11e24:	mov	r1, r9
   11e28:	mov	r2, r7
   11e2c:	bl	18d0 <fread@plt>
   11e30:	add	sl, r0, sl
   11e34:	cmp	r7, #0
   11e38:	ble	12e90 <ReadInt8Data+0x1490>
   11e3c:	add	r0, r6, r4
   11e40:	add	r1, sp, #24
   11e44:	mov	r2, r7
   11e48:	bl	1834 <memcpy@plt>
   11e4c:	b	12e90 <ReadInt8Data+0x1490>
   11e50:	cmp	r6, #256	; 0x100
   11e54:	bgt	12678 <ReadInt8Data+0xc78>
   11e58:	ldr	r3, [r4]
   11e5c:	add	r4, sp, #24
   11e60:	mov	r0, r4
   11e64:	mov	r1, r9
   11e68:	mov	r2, r6
   11e6c:	bl	18d0 <fread@plt>
   11e70:	mov	sl, r0
   11e74:	cmp	r6, #1
   11e78:	blt	12e90 <ReadInt8Data+0x1490>
   11e7c:	ldrb	r0, [r4], #2
   11e80:	strb	r0, [r8], #1
   11e84:	subs	r6, r6, #1
   11e88:	bne	11e7c <ReadInt8Data+0x47c>
   11e8c:	b	12e90 <ReadInt8Data+0x1490>
   11e90:	cmp	r6, #256	; 0x100
   11e94:	bgt	12744 <ReadInt8Data+0xd44>
   11e98:	ldr	r3, [r4]
   11e9c:	add	r4, sp, #24
   11ea0:	mov	r0, r4
   11ea4:	mov	r1, r9
   11ea8:	mov	r2, r6
   11eac:	bl	18d0 <fread@plt>
   11eb0:	mov	sl, r0
   11eb4:	cmp	r6, #1
   11eb8:	blt	12e90 <ReadInt8Data+0x1490>
   11ebc:	ldrb	r0, [r4], #2
   11ec0:	strb	r0, [r8], #1
   11ec4:	subs	r6, r6, #1
   11ec8:	bne	11ebc <ReadInt8Data+0x4bc>
   11ecc:	b	12e90 <ReadInt8Data+0x1490>
   11ed0:	cmp	r6, #256	; 0x100
   11ed4:	bgt	12810 <ReadInt8Data+0xe10>
   11ed8:	ldr	r3, [r4]
   11edc:	add	r4, sp, #24
   11ee0:	mov	r0, r4
   11ee4:	mov	r1, r9
   11ee8:	mov	r2, r6
   11eec:	bl	18d0 <fread@plt>
   11ef0:	mov	sl, r0
   11ef4:	cmp	r6, #1
   11ef8:	blt	12e90 <ReadInt8Data+0x1490>
   11efc:	ldr	r0, [r4], #4
   11f00:	strb	r0, [r8], #1
   11f04:	subs	r6, r6, #1
   11f08:	bne	11efc <ReadInt8Data+0x4fc>
   11f0c:	b	12e90 <ReadInt8Data+0x1490>
   11f10:	cmp	r6, #256	; 0x100
   11f14:	bgt	128cc <ReadInt8Data+0xecc>
   11f18:	ldr	r3, [r4]
   11f1c:	add	r4, sp, #24
   11f20:	mov	r0, r4
   11f24:	mov	r1, r9
   11f28:	mov	r2, r6
   11f2c:	bl	18d0 <fread@plt>
   11f30:	mov	sl, r0
   11f34:	cmp	r6, #1
   11f38:	blt	12e90 <ReadInt8Data+0x1490>
   11f3c:	ldr	r0, [r4], #4
   11f40:	strb	r0, [r8], #1
   11f44:	subs	r6, r6, #1
   11f48:	bne	11f3c <ReadInt8Data+0x53c>
   11f4c:	b	12e90 <ReadInt8Data+0x1490>
   11f50:	cmp	r6, #256	; 0x100
   11f54:	bgt	12988 <ReadInt8Data+0xf88>
   11f58:	ldr	r3, [r4]
   11f5c:	add	r4, sp, #24
   11f60:	mov	r0, r4
   11f64:	mov	r1, r9
   11f68:	mov	r2, r6
   11f6c:	bl	18d0 <fread@plt>
   11f70:	mov	sl, r0
   11f74:	cmp	r6, #1
   11f78:	blt	12e90 <ReadInt8Data+0x1490>
   11f7c:	vldr	s0, [r4]
   11f80:	vcvt.s32.f32	s0, s0
   11f84:	vmov	r0, s0
   11f88:	strb	r0, [r8], #1
   11f8c:	subs	r6, r6, #1
   11f90:	add	r4, r4, #4
   11f94:	bne	11f7c <ReadInt8Data+0x57c>
   11f98:	b	12e90 <ReadInt8Data+0x1490>
   11f9c:	cmp	r6, #256	; 0x100
   11fa0:	bgt	12a6c <ReadInt8Data+0x106c>
   11fa4:	ldr	r3, [r4]
   11fa8:	add	r4, sp, #24
   11fac:	mov	r0, r4
   11fb0:	mov	r1, r9
   11fb4:	mov	r2, r6
   11fb8:	bl	18d0 <fread@plt>
   11fbc:	mov	sl, r0
   11fc0:	cmp	r6, #1
   11fc4:	blt	12e90 <ReadInt8Data+0x1490>
   11fc8:	vldr	d16, [r4]
   11fcc:	vcvt.s32.f64	s0, d16
   11fd0:	vmov	r0, s0
   11fd4:	strb	r0, [r8], #1
   11fd8:	subs	r6, r6, #1
   11fdc:	add	r4, r4, #8
   11fe0:	bne	11fc8 <ReadInt8Data+0x5c8>
   11fe4:	b	12e90 <ReadInt8Data+0x1490>
   11fe8:	cmp	r6, #256	; 0x100
   11fec:	bgt	12b50 <ReadInt8Data+0x1150>
   11ff0:	ldr	r3, [r4]
   11ff4:	add	r4, sp, #24
   11ff8:	mov	r0, r4
   11ffc:	mov	r1, r9
   12000:	mov	r2, r6
   12004:	bl	18d0 <fread@plt>
   12008:	mov	sl, r0
   1200c:	cmp	r6, #1
   12010:	blt	1202c <ReadInt8Data+0x62c>
   12014:	mov	r0, r6
   12018:	mov	r1, r8
   1201c:	ldrb	r2, [r4], #8
   12020:	strb	r2, [r1], #1
   12024:	subs	r0, r0, #1
   12028:	bne	1201c <ReadInt8Data+0x61c>
   1202c:	ldr	r4, [sp, #20]
   12030:	cmp	r5, #13
   12034:	beq	12c54 <ReadInt8Data+0x1254>
   12038:	b	12e90 <ReadInt8Data+0x1490>
   1203c:	str	r9, [sp, #16]
   12040:	str	r6, [sp, #8]
   12044:	sub	r0, r6, #256	; 0x100
   12048:	str	r0, [sp, #12]
   1204c:	mov	r7, #0
   12050:	add	r6, sp, #24
   12054:	str	r8, [sp, #4]
   12058:	mov	r5, r8
   1205c:	mov	sl, #0
   12060:	mov	r9, r7
   12064:	ldr	r3, [r4]
   12068:	mov	r7, r6
   1206c:	mov	r0, r6
   12070:	ldr	r1, [sp, #16]
   12074:	mov	r2, #256	; 0x100
   12078:	bl	18d0 <fread@plt>
   1207c:	mov	r8, r0
   12080:	mov	r4, #0
   12084:	mov	r0, r7
   12088:	bl	1c50 <Mat_int16Swap>
   1208c:	strb	r0, [r5, r4]
   12090:	add	r7, r7, #2
   12094:	add	r4, r4, #1
   12098:	cmp	r4, #256	; 0x100
   1209c:	bne	12084 <ReadInt8Data+0x684>
   120a0:	add	sl, r8, sl
   120a4:	add	r5, r5, #256	; 0x100
   120a8:	add	r7, r9, #256	; 0x100
   120ac:	ldr	r0, [sp, #12]
   120b0:	cmp	r7, r0
   120b4:	ldr	r4, [sp, #20]
   120b8:	blt	12060 <ReadInt8Data+0x660>
   120bc:	ldr	r0, [sp, #8]
   120c0:	cmp	r7, r0
   120c4:	bge	12dc0 <ReadInt8Data+0x13c0>
   120c8:	sub	r8, r0, r7
   120cc:	ldr	r3, [r4]
   120d0:	add	r4, sp, #24
   120d4:	mov	r0, r4
   120d8:	ldr	r1, [sp, #16]
   120dc:	mov	r2, r8
   120e0:	bl	18d0 <fread@plt>
   120e4:	add	sl, r0, sl
   120e8:	cmp	r8, #1
   120ec:	blt	12dc0 <ReadInt8Data+0x13c0>
   120f0:	ldr	r0, [sp, #12]
   120f4:	sub	r5, r0, r9
   120f8:	ldr	r6, [sp, #4]
   120fc:	mov	r0, r4
   12100:	bl	1c50 <Mat_int16Swap>
   12104:	strb	r0, [r6, r7]
   12108:	add	r6, r6, #1
   1210c:	subs	r5, r5, #1
   12110:	add	r4, r4, #2
   12114:	bne	120fc <ReadInt8Data+0x6fc>
   12118:	b	12dc0 <ReadInt8Data+0x13c0>
   1211c:	str	r9, [sp, #16]
   12120:	str	r6, [sp, #8]
   12124:	sub	r0, r6, #256	; 0x100
   12128:	str	r0, [sp, #12]
   1212c:	mov	r7, #0
   12130:	add	r6, sp, #24
   12134:	str	r8, [sp, #4]
   12138:	mov	r5, r8
   1213c:	mov	sl, #0
   12140:	mov	r9, r7
   12144:	ldr	r3, [r4]
   12148:	mov	r7, r6
   1214c:	mov	r0, r6
   12150:	ldr	r1, [sp, #16]
   12154:	mov	r2, #256	; 0x100
   12158:	bl	18d0 <fread@plt>
   1215c:	mov	r8, r0
   12160:	mov	r4, #0
   12164:	mov	r0, r7
   12168:	bl	1c64 <Mat_uint16Swap>
   1216c:	strb	r0, [r5, r4]
   12170:	add	r7, r7, #2
   12174:	add	r4, r4, #1
   12178:	cmp	r4, #256	; 0x100
   1217c:	bne	12164 <ReadInt8Data+0x764>
   12180:	add	sl, r8, sl
   12184:	add	r5, r5, #256	; 0x100
   12188:	add	r7, r9, #256	; 0x100
   1218c:	ldr	r0, [sp, #12]
   12190:	cmp	r7, r0
   12194:	ldr	r4, [sp, #20]
   12198:	blt	12140 <ReadInt8Data+0x740>
   1219c:	ldr	r0, [sp, #8]
   121a0:	cmp	r7, r0
   121a4:	bge	12dc0 <ReadInt8Data+0x13c0>
   121a8:	sub	r8, r0, r7
   121ac:	ldr	r3, [r4]
   121b0:	add	r4, sp, #24
   121b4:	mov	r0, r4
   121b8:	ldr	r1, [sp, #16]
   121bc:	mov	r2, r8
   121c0:	bl	18d0 <fread@plt>
   121c4:	add	sl, r0, sl
   121c8:	cmp	r8, #1
   121cc:	blt	12dc0 <ReadInt8Data+0x13c0>
   121d0:	ldr	r0, [sp, #12]
   121d4:	sub	r5, r0, r9
   121d8:	ldr	r6, [sp, #4]
   121dc:	mov	r0, r4
   121e0:	bl	1c64 <Mat_uint16Swap>
   121e4:	strb	r0, [r6, r7]
   121e8:	add	r6, r6, #1
   121ec:	subs	r5, r5, #1
   121f0:	add	r4, r4, #2
   121f4:	bne	121dc <ReadInt8Data+0x7dc>
   121f8:	b	12dc0 <ReadInt8Data+0x13c0>
   121fc:	str	r9, [sp, #16]
   12200:	str	r6, [sp, #8]
   12204:	sub	r0, r6, #256	; 0x100
   12208:	str	r0, [sp, #12]
   1220c:	mov	r7, #0
   12210:	add	r6, sp, #24
   12214:	str	r8, [sp, #4]
   12218:	mov	r5, r8
   1221c:	mov	sl, #0
   12220:	mov	r9, r7
   12224:	ldr	r3, [r4]
   12228:	mov	r7, r6
   1222c:	mov	r0, r6
   12230:	ldr	r1, [sp, #16]
   12234:	mov	r2, #256	; 0x100
   12238:	bl	18d0 <fread@plt>
   1223c:	mov	r8, r0
   12240:	mov	r4, #0
   12244:	mov	r0, r7
   12248:	bl	1c28 <Mat_int32Swap>
   1224c:	strb	r0, [r5, r4]
   12250:	add	r7, r7, #4
   12254:	add	r4, r4, #1
   12258:	cmp	r4, #256	; 0x100
   1225c:	bne	12244 <ReadInt8Data+0x844>
   12260:	add	sl, r8, sl
   12264:	add	r5, r5, #256	; 0x100
   12268:	add	r7, r9, #256	; 0x100
   1226c:	ldr	r0, [sp, #12]
   12270:	cmp	r7, r0
   12274:	ldr	r4, [sp, #20]
   12278:	blt	12220 <ReadInt8Data+0x820>
   1227c:	ldr	r0, [sp, #8]
   12280:	cmp	r7, r0
   12284:	bge	12dc0 <ReadInt8Data+0x13c0>
   12288:	sub	r8, r0, r7
   1228c:	ldr	r3, [r4]
   12290:	add	r4, sp, #24
   12294:	mov	r0, r4
   12298:	ldr	r1, [sp, #16]
   1229c:	mov	r2, r8
   122a0:	bl	18d0 <fread@plt>
   122a4:	add	sl, r0, sl
   122a8:	cmp	r8, #1
   122ac:	blt	12dc0 <ReadInt8Data+0x13c0>
   122b0:	ldr	r0, [sp, #12]
   122b4:	sub	r5, r0, r9
   122b8:	ldr	r6, [sp, #4]
   122bc:	mov	r0, r4
   122c0:	bl	1c28 <Mat_int32Swap>
   122c4:	strb	r0, [r6, r7]
   122c8:	add	r6, r6, #1
   122cc:	subs	r5, r5, #1
   122d0:	add	r4, r4, #4
   122d4:	bne	122bc <ReadInt8Data+0x8bc>
   122d8:	b	12dc0 <ReadInt8Data+0x13c0>
   122dc:	str	r9, [sp, #16]
   122e0:	str	r6, [sp, #8]
   122e4:	sub	r0, r6, #256	; 0x100
   122e8:	str	r0, [sp, #12]
   122ec:	mov	r7, #0
   122f0:	add	r6, sp, #24
   122f4:	str	r8, [sp, #4]
   122f8:	mov	r5, r8
   122fc:	mov	sl, #0
   12300:	mov	r9, r7
   12304:	ldr	r3, [r4]
   12308:	mov	r7, r6
   1230c:	mov	r0, r6
   12310:	ldr	r1, [sp, #16]
   12314:	mov	r2, #256	; 0x100
   12318:	bl	18d0 <fread@plt>
   1231c:	mov	r8, r0
   12320:	mov	r4, #0
   12324:	mov	r0, r7
   12328:	bl	1c3c <Mat_uint32Swap>
   1232c:	strb	r0, [r5, r4]
   12330:	add	r7, r7, #4
   12334:	add	r4, r4, #1
   12338:	cmp	r4, #256	; 0x100
   1233c:	bne	12324 <ReadInt8Data+0x924>
   12340:	add	sl, r8, sl
   12344:	add	r5, r5, #256	; 0x100
   12348:	add	r7, r9, #256	; 0x100
   1234c:	ldr	r0, [sp, #12]
   12350:	cmp	r7, r0
   12354:	ldr	r4, [sp, #20]
   12358:	blt	12300 <ReadInt8Data+0x900>
   1235c:	ldr	r0, [sp, #8]
   12360:	cmp	r7, r0
   12364:	bge	12dc0 <ReadInt8Data+0x13c0>
   12368:	sub	r8, r0, r7
   1236c:	ldr	r3, [r4]
   12370:	add	r4, sp, #24
   12374:	mov	r0, r4
   12378:	ldr	r1, [sp, #16]
   1237c:	mov	r2, r8
   12380:	bl	18d0 <fread@plt>
   12384:	add	sl, r0, sl
   12388:	cmp	r8, #1
   1238c:	blt	12dc0 <ReadInt8Data+0x13c0>
   12390:	ldr	r0, [sp, #12]
   12394:	sub	r5, r0, r9
   12398:	ldr	r6, [sp, #4]
   1239c:	mov	r0, r4
   123a0:	bl	1c3c <Mat_uint32Swap>
   123a4:	strb	r0, [r6, r7]
   123a8:	add	r6, r6, #1
   123ac:	subs	r5, r5, #1
   123b0:	add	r4, r4, #4
   123b4:	bne	1239c <ReadInt8Data+0x99c>
   123b8:	b	12dc0 <ReadInt8Data+0x13c0>
   123bc:	str	r9, [sp, #16]
   123c0:	str	r6, [sp, #8]
   123c4:	sub	r0, r6, #256	; 0x100
   123c8:	str	r0, [sp, #12]
   123cc:	mov	r7, #0
   123d0:	add	r6, sp, #24
   123d4:	str	r8, [sp, #4]
   123d8:	mov	r5, r8
   123dc:	mov	sl, #0
   123e0:	mov	r9, r7
   123e4:	ldr	r3, [r4]
   123e8:	mov	r7, r6
   123ec:	mov	r0, r6
   123f0:	ldr	r1, [sp, #16]
   123f4:	mov	r2, #256	; 0x100
   123f8:	bl	18d0 <fread@plt>
   123fc:	mov	r8, r0
   12400:	mov	r4, #0
   12404:	mov	r0, r7
   12408:	bl	1c7c <Mat_floatSwap>
   1240c:	vcvt.s32.f32	s0, s0
   12410:	vmov	r0, s0
   12414:	strb	r0, [r5, r4]
   12418:	add	r7, r7, #4
   1241c:	add	r4, r4, #1
   12420:	cmp	r4, #256	; 0x100
   12424:	bne	12404 <ReadInt8Data+0xa04>
   12428:	add	sl, r8, sl
   1242c:	add	r5, r5, #256	; 0x100
   12430:	add	r7, r9, #256	; 0x100
   12434:	ldr	r0, [sp, #12]
   12438:	cmp	r7, r0
   1243c:	ldr	r4, [sp, #20]
   12440:	blt	123e0 <ReadInt8Data+0x9e0>
   12444:	ldr	r0, [sp, #8]
   12448:	cmp	r7, r0
   1244c:	bge	12dc0 <ReadInt8Data+0x13c0>
   12450:	sub	r8, r0, r7
   12454:	ldr	r3, [r4]
   12458:	add	r4, sp, #24
   1245c:	mov	r0, r4
   12460:	ldr	r1, [sp, #16]
   12464:	mov	r2, r8
   12468:	bl	18d0 <fread@plt>
   1246c:	add	sl, r0, sl
   12470:	cmp	r8, #1
   12474:	blt	12dc0 <ReadInt8Data+0x13c0>
   12478:	ldr	r0, [sp, #12]
   1247c:	sub	r5, r0, r9
   12480:	ldr	r6, [sp, #4]
   12484:	mov	r0, r4
   12488:	bl	1c7c <Mat_floatSwap>
   1248c:	vcvt.s32.f32	s0, s0
   12490:	vmov	r0, s0
   12494:	strb	r0, [r6, r7]
   12498:	add	r6, r6, #1
   1249c:	subs	r5, r5, #1
   124a0:	add	r4, r4, #4
   124a4:	bne	12484 <ReadInt8Data+0xa84>
   124a8:	b	12dc0 <ReadInt8Data+0x13c0>
   124ac:	str	r9, [sp, #16]
   124b0:	str	r6, [sp, #8]
   124b4:	sub	r0, r6, #256	; 0x100
   124b8:	str	r0, [sp, #12]
   124bc:	mov	r9, #0
   124c0:	add	r6, sp, #24
   124c4:	str	r8, [sp, #4]
   124c8:	mov	r5, r8
   124cc:	mov	sl, #0
   124d0:	mov	r8, r9
   124d4:	ldr	r3, [r4]
   124d8:	mov	r7, r6
   124dc:	mov	r0, r6
   124e0:	ldr	r1, [sp, #16]
   124e4:	mov	r2, #256	; 0x100
   124e8:	bl	18d0 <fread@plt>
   124ec:	mov	r9, r0
   124f0:	mov	r4, #0
   124f4:	mov	r0, r7
   124f8:	bl	1cc0 <Mat_doubleSwap>
   124fc:	vcvt.s32.f64	s0, d0
   12500:	vmov	r0, s0
   12504:	strb	r0, [r5, r4]
   12508:	add	r7, r7, #8
   1250c:	add	r4, r4, #1
   12510:	cmp	r4, #256	; 0x100
   12514:	bne	124f4 <ReadInt8Data+0xaf4>
   12518:	add	sl, r9, sl
   1251c:	add	r5, r5, #256	; 0x100
   12520:	add	r9, r8, #256	; 0x100
   12524:	ldr	r0, [sp, #12]
   12528:	cmp	r9, r0
   1252c:	ldr	r4, [sp, #20]
   12530:	blt	124d0 <ReadInt8Data+0xad0>
   12534:	ldr	r0, [sp, #8]
   12538:	cmp	r9, r0
   1253c:	bge	12dc0 <ReadInt8Data+0x13c0>
   12540:	sub	r7, r0, r9
   12544:	ldr	r3, [r4]
   12548:	add	r4, sp, #24
   1254c:	mov	r0, r4
   12550:	ldr	r1, [sp, #16]
   12554:	mov	r2, r7
   12558:	bl	18d0 <fread@plt>
   1255c:	add	sl, r0, sl
   12560:	cmp	r7, #1
   12564:	blt	12dc0 <ReadInt8Data+0x13c0>
   12568:	ldr	r0, [sp, #12]
   1256c:	sub	r5, r0, r8
   12570:	ldr	r6, [sp, #4]
   12574:	mov	r0, r4
   12578:	bl	1cc0 <Mat_doubleSwap>
   1257c:	vcvt.s32.f64	s0, d0
   12580:	vmov	r0, s0
   12584:	strb	r0, [r6, r9]
   12588:	add	r6, r6, #1
   1258c:	subs	r5, r5, #1
   12590:	add	r4, r4, #8
   12594:	bne	12574 <ReadInt8Data+0xb74>
   12598:	b	12dc0 <ReadInt8Data+0x13c0>
   1259c:	str	r5, [sp, #12]
   125a0:	str	r9, [sp, #16]
   125a4:	str	r6, [sp, #8]
   125a8:	sub	r6, r6, #256	; 0x100
   125ac:	mov	r7, #0
   125b0:	str	r8, [sp, #4]
   125b4:	mov	r5, r8
   125b8:	mov	sl, #0
   125bc:	mov	r9, r7
   125c0:	ldr	r3, [r4]
   125c4:	add	r7, sp, #24
   125c8:	mov	r0, r7
   125cc:	ldr	r1, [sp, #16]
   125d0:	mov	r2, #256	; 0x100
   125d4:	bl	18d0 <fread@plt>
   125d8:	mov	r8, r0
   125dc:	mov	r4, #0
   125e0:	mov	r0, r7
   125e4:	bl	1bbc <Mat_int64Swap>
   125e8:	strb	r0, [r5, r4]
   125ec:	add	r7, r7, #8
   125f0:	add	r4, r4, #1
   125f4:	cmp	r4, #256	; 0x100
   125f8:	bne	125e0 <ReadInt8Data+0xbe0>
   125fc:	add	sl, r8, sl
   12600:	add	r5, r5, #256	; 0x100
   12604:	add	r7, r9, #256	; 0x100
   12608:	cmp	r7, r6
   1260c:	ldr	r4, [sp, #20]
   12610:	blt	125bc <ReadInt8Data+0xbbc>
   12614:	mov	r5, r6
   12618:	ldr	r6, [sp, #8]
   1261c:	cmp	r7, r6
   12620:	bge	12c30 <ReadInt8Data+0x1230>
   12624:	mov	r0, r4
   12628:	sub	r4, r6, r7
   1262c:	ldr	r3, [r0]
   12630:	add	r8, sp, #24
   12634:	mov	r0, r8
   12638:	ldr	r1, [sp, #16]
   1263c:	mov	r2, r4
   12640:	bl	18d0 <fread@plt>
   12644:	add	sl, r0, sl
   12648:	cmp	r4, #1
   1264c:	blt	12c24 <ReadInt8Data+0x1224>
   12650:	sub	r5, r5, r9
   12654:	ldr	r4, [sp, #4]
   12658:	mov	r0, r8
   1265c:	bl	1bbc <Mat_int64Swap>
   12660:	strb	r0, [r4, r7]
   12664:	add	r4, r4, #1
   12668:	subs	r5, r5, #1
   1266c:	add	r8, r8, #8
   12670:	bne	12658 <ReadInt8Data+0xc58>
   12674:	b	12c24 <ReadInt8Data+0x1224>
   12678:	mov	r5, r9
   1267c:	str	r6, [sp, #8]
   12680:	sub	r0, r6, #256	; 0x100
   12684:	str	r0, [sp, #16]
   12688:	mov	r7, #0
   1268c:	add	r9, sp, #24
   12690:	mov	r6, r8
   12694:	mov	r4, r8
   12698:	mov	sl, #0
   1269c:	mov	r8, r7
   126a0:	ldr	r0, [sp, #20]
   126a4:	ldr	r3, [r0]
   126a8:	mov	r0, r9
   126ac:	mov	r1, r5
   126b0:	mov	r2, #256	; 0x100
   126b4:	bl	18d0 <fread@plt>
   126b8:	mov	r1, r9
   126bc:	mov	r2, #0
   126c0:	ldrb	r3, [r1], #2
   126c4:	strb	r3, [r4, r2]
   126c8:	add	r2, r2, #1
   126cc:	cmp	r2, #256	; 0x100
   126d0:	bne	126c0 <ReadInt8Data+0xcc0>
   126d4:	add	sl, r0, sl
   126d8:	add	r4, r4, #256	; 0x100
   126dc:	add	r7, r8, #256	; 0x100
   126e0:	ldr	r0, [sp, #16]
   126e4:	cmp	r7, r0
   126e8:	blt	1269c <ReadInt8Data+0xc9c>
   126ec:	ldr	r0, [sp, #8]
   126f0:	cmp	r7, r0
   126f4:	bge	12e8c <ReadInt8Data+0x148c>
   126f8:	sub	r9, r0, r7
   126fc:	ldr	r0, [sp, #20]
   12700:	ldr	r3, [r0]
   12704:	add	r4, sp, #24
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r9
   12714:	bl	18d0 <fread@plt>
   12718:	add	sl, r0, sl
   1271c:	cmp	r9, #1
   12720:	blt	12e8c <ReadInt8Data+0x148c>
   12724:	ldr	r0, [sp, #16]
   12728:	sub	r0, r0, r8
   1272c:	ldrb	r1, [r4], #2
   12730:	strb	r1, [r6, r7]
   12734:	add	r6, r6, #1
   12738:	subs	r0, r0, #1
   1273c:	bne	1272c <ReadInt8Data+0xd2c>
   12740:	b	12e8c <ReadInt8Data+0x148c>
   12744:	mov	r5, r9
   12748:	str	r6, [sp, #8]
   1274c:	sub	r0, r6, #256	; 0x100
   12750:	str	r0, [sp, #16]
   12754:	mov	r7, #0
   12758:	add	r9, sp, #24
   1275c:	mov	r6, r8
   12760:	mov	r4, r8
   12764:	mov	sl, #0
   12768:	mov	r8, r7
   1276c:	ldr	r0, [sp, #20]
   12770:	ldr	r3, [r0]
   12774:	mov	r0, r9
   12778:	mov	r1, r5
   1277c:	mov	r2, #256	; 0x100
   12780:	bl	18d0 <fread@plt>
   12784:	mov	r1, r9
   12788:	mov	r2, #0
   1278c:	ldrb	r3, [r1], #2
   12790:	strb	r3, [r4, r2]
   12794:	add	r2, r2, #1
   12798:	cmp	r2, #256	; 0x100
   1279c:	bne	1278c <ReadInt8Data+0xd8c>
   127a0:	add	sl, r0, sl
   127a4:	add	r4, r4, #256	; 0x100
   127a8:	add	r7, r8, #256	; 0x100
   127ac:	ldr	r0, [sp, #16]
   127b0:	cmp	r7, r0
   127b4:	blt	12768 <ReadInt8Data+0xd68>
   127b8:	ldr	r0, [sp, #8]
   127bc:	cmp	r7, r0
   127c0:	bge	12e8c <ReadInt8Data+0x148c>
   127c4:	sub	r9, r0, r7
   127c8:	ldr	r0, [sp, #20]
   127cc:	ldr	r3, [r0]
   127d0:	add	r4, sp, #24
   127d4:	mov	r0, r4
   127d8:	mov	r1, r5
   127dc:	mov	r2, r9
   127e0:	bl	18d0 <fread@plt>
   127e4:	add	sl, r0, sl
   127e8:	cmp	r9, #1
   127ec:	blt	12e8c <ReadInt8Data+0x148c>
   127f0:	ldr	r0, [sp, #16]
   127f4:	sub	r0, r0, r8
   127f8:	ldrb	r1, [r4], #2
   127fc:	strb	r1, [r6, r7]
   12800:	add	r6, r6, #1
   12804:	subs	r0, r0, #1
   12808:	bne	127f8 <ReadInt8Data+0xdf8>
   1280c:	b	12e8c <ReadInt8Data+0x148c>
   12810:	str	r9, [sp, #16]
   12814:	str	r6, [sp, #8]
   12818:	mov	r5, r8
   1281c:	sub	r8, r6, #256	; 0x100
   12820:	mov	r7, #0
   12824:	add	r4, sp, #24
   12828:	mov	r6, r5
   1282c:	mov	sl, #0
   12830:	mov	r9, r7
   12834:	ldr	r0, [sp, #20]
   12838:	ldr	r3, [r0]
   1283c:	mov	r0, r4
   12840:	ldr	r1, [sp, #16]
   12844:	mov	r2, #256	; 0x100
   12848:	bl	18d0 <fread@plt>
   1284c:	mov	r1, #0
   12850:	ldr	r2, [r4, r1, lsl #2]
   12854:	strb	r2, [r5, r1]
   12858:	add	r1, r1, #1
   1285c:	cmp	r1, #256	; 0x100
   12860:	bne	12850 <ReadInt8Data+0xe50>
   12864:	add	sl, r0, sl
   12868:	add	r5, r5, #256	; 0x100
   1286c:	add	r7, r9, #256	; 0x100
   12870:	cmp	r7, r8
   12874:	blt	12830 <ReadInt8Data+0xe30>
   12878:	ldr	r0, [sp, #8]
   1287c:	cmp	r7, r0
   12880:	bge	12dc0 <ReadInt8Data+0x13c0>
   12884:	sub	r5, r0, r7
   12888:	ldr	r0, [sp, #20]
   1288c:	ldr	r3, [r0]
   12890:	add	r4, sp, #24
   12894:	mov	r0, r4
   12898:	ldr	r1, [sp, #16]
   1289c:	mov	r2, r5
   128a0:	bl	18d0 <fread@plt>
   128a4:	add	sl, r0, sl
   128a8:	cmp	r5, #1
   128ac:	blt	12dc0 <ReadInt8Data+0x13c0>
   128b0:	sub	r0, r8, r9
   128b4:	ldr	r1, [r4], #4
   128b8:	strb	r1, [r6, r7]
   128bc:	add	r6, r6, #1
   128c0:	subs	r0, r0, #1
   128c4:	bne	128b4 <ReadInt8Data+0xeb4>
   128c8:	b	12dc0 <ReadInt8Data+0x13c0>
   128cc:	str	r9, [sp, #16]
   128d0:	str	r6, [sp, #8]
   128d4:	mov	r5, r8
   128d8:	sub	r8, r6, #256	; 0x100
   128dc:	mov	r7, #0
   128e0:	add	r4, sp, #24
   128e4:	mov	r6, r5
   128e8:	mov	sl, #0
   128ec:	mov	r9, r7
   128f0:	ldr	r0, [sp, #20]
   128f4:	ldr	r3, [r0]
   128f8:	mov	r0, r4
   128fc:	ldr	r1, [sp, #16]
   12900:	mov	r2, #256	; 0x100
   12904:	bl	18d0 <fread@plt>
   12908:	mov	r1, #0
   1290c:	ldr	r2, [r4, r1, lsl #2]
   12910:	strb	r2, [r5, r1]
   12914:	add	r1, r1, #1
   12918:	cmp	r1, #256	; 0x100
   1291c:	bne	1290c <ReadInt8Data+0xf0c>
   12920:	add	sl, r0, sl
   12924:	add	r5, r5, #256	; 0x100
   12928:	add	r7, r9, #256	; 0x100
   1292c:	cmp	r7, r8
   12930:	blt	128ec <ReadInt8Data+0xeec>
   12934:	ldr	r0, [sp, #8]
   12938:	cmp	r7, r0
   1293c:	bge	12dc0 <ReadInt8Data+0x13c0>
   12940:	sub	r5, r0, r7
   12944:	ldr	r0, [sp, #20]
   12948:	ldr	r3, [r0]
   1294c:	add	r4, sp, #24
   12950:	mov	r0, r4
   12954:	ldr	r1, [sp, #16]
   12958:	mov	r2, r5
   1295c:	bl	18d0 <fread@plt>
   12960:	add	sl, r0, sl
   12964:	cmp	r5, #1
   12968:	blt	12dc0 <ReadInt8Data+0x13c0>
   1296c:	sub	r0, r8, r9
   12970:	ldr	r1, [r4], #4
   12974:	strb	r1, [r6, r7]
   12978:	add	r6, r6, #1
   1297c:	subs	r0, r0, #1
   12980:	bne	12970 <ReadInt8Data+0xf70>
   12984:	b	12dc0 <ReadInt8Data+0x13c0>
   12988:	mov	r5, r9
   1298c:	str	r6, [sp, #8]
   12990:	sub	r0, r6, #256	; 0x100
   12994:	str	r0, [sp, #16]
   12998:	mov	r7, #0
   1299c:	add	r9, sp, #24
   129a0:	mov	r6, r8
   129a4:	mov	r4, r8
   129a8:	mov	sl, #0
   129ac:	mov	r8, r7
   129b0:	ldr	r0, [sp, #20]
   129b4:	ldr	r3, [r0]
   129b8:	mov	r0, r9
   129bc:	mov	r1, r5
   129c0:	mov	r2, #256	; 0x100
   129c4:	bl	18d0 <fread@plt>
   129c8:	mov	r1, r9
   129cc:	mov	r2, #0
   129d0:	vldr	s0, [r1]
   129d4:	vcvt.s32.f32	s0, s0
   129d8:	vmov	r3, s0
   129dc:	strb	r3, [r4, r2]
   129e0:	add	r1, r1, #4
   129e4:	add	r2, r2, #1
   129e8:	cmp	r2, #256	; 0x100
   129ec:	bne	129d0 <ReadInt8Data+0xfd0>
   129f0:	add	sl, r0, sl
   129f4:	add	r4, r4, #256	; 0x100
   129f8:	add	r7, r8, #256	; 0x100
   129fc:	ldr	r0, [sp, #16]
   12a00:	cmp	r7, r0
   12a04:	blt	129ac <ReadInt8Data+0xfac>
   12a08:	ldr	r0, [sp, #8]
   12a0c:	cmp	r7, r0
   12a10:	bge	12e8c <ReadInt8Data+0x148c>
   12a14:	sub	r9, r0, r7
   12a18:	ldr	r0, [sp, #20]
   12a1c:	ldr	r3, [r0]
   12a20:	add	r4, sp, #24
   12a24:	mov	r0, r4
   12a28:	mov	r1, r5
   12a2c:	mov	r2, r9
   12a30:	bl	18d0 <fread@plt>
   12a34:	add	sl, r0, sl
   12a38:	cmp	r9, #1
   12a3c:	blt	12e8c <ReadInt8Data+0x148c>
   12a40:	ldr	r0, [sp, #16]
   12a44:	sub	r0, r0, r8
   12a48:	vldr	s0, [r4]
   12a4c:	vcvt.s32.f32	s0, s0
   12a50:	vmov	r1, s0
   12a54:	strb	r1, [r6, r7]
   12a58:	add	r6, r6, #1
   12a5c:	subs	r0, r0, #1
   12a60:	add	r4, r4, #4
   12a64:	bne	12a48 <ReadInt8Data+0x1048>
   12a68:	b	12e8c <ReadInt8Data+0x148c>
   12a6c:	mov	r5, r9
   12a70:	str	r6, [sp, #8]
   12a74:	sub	r0, r6, #256	; 0x100
   12a78:	str	r0, [sp, #16]
   12a7c:	mov	r7, #0
   12a80:	add	r9, sp, #24
   12a84:	mov	r6, r8
   12a88:	mov	r4, r8
   12a8c:	mov	sl, #0
   12a90:	mov	r8, r7
   12a94:	ldr	r0, [sp, #20]
   12a98:	ldr	r3, [r0]
   12a9c:	mov	r0, r9
   12aa0:	mov	r1, r5
   12aa4:	mov	r2, #256	; 0x100
   12aa8:	bl	18d0 <fread@plt>
   12aac:	mov	r1, r9
   12ab0:	mov	r2, #0
   12ab4:	vldr	d16, [r1]
   12ab8:	vcvt.s32.f64	s0, d16
   12abc:	vmov	r3, s0
   12ac0:	strb	r3, [r4, r2]
   12ac4:	add	r1, r1, #8
   12ac8:	add	r2, r2, #1
   12acc:	cmp	r2, #256	; 0x100
   12ad0:	bne	12ab4 <ReadInt8Data+0x10b4>
   12ad4:	add	sl, r0, sl
   12ad8:	add	r4, r4, #256	; 0x100
   12adc:	add	r7, r8, #256	; 0x100
   12ae0:	ldr	r0, [sp, #16]
   12ae4:	cmp	r7, r0
   12ae8:	blt	12a90 <ReadInt8Data+0x1090>
   12aec:	ldr	r0, [sp, #8]
   12af0:	cmp	r7, r0
   12af4:	bge	12e8c <ReadInt8Data+0x148c>
   12af8:	sub	r9, r0, r7
   12afc:	ldr	r0, [sp, #20]
   12b00:	ldr	r3, [r0]
   12b04:	add	r4, sp, #24
   12b08:	mov	r0, r4
   12b0c:	mov	r1, r5
   12b10:	mov	r2, r9
   12b14:	bl	18d0 <fread@plt>
   12b18:	add	sl, r0, sl
   12b1c:	cmp	r9, #1
   12b20:	blt	12e8c <ReadInt8Data+0x148c>
   12b24:	ldr	r0, [sp, #16]
   12b28:	sub	r0, r0, r8
   12b2c:	vldr	d16, [r4]
   12b30:	vcvt.s32.f64	s0, d16
   12b34:	vmov	r1, s0
   12b38:	strb	r1, [r6, r7]
   12b3c:	add	r6, r6, #1
   12b40:	subs	r0, r0, #1
   12b44:	add	r4, r4, #8
   12b48:	bne	12b2c <ReadInt8Data+0x112c>
   12b4c:	b	12e8c <ReadInt8Data+0x148c>
   12b50:	str	r5, [sp, #12]
   12b54:	str	r9, [sp, #16]
   12b58:	str	r6, [sp, #8]
   12b5c:	mov	r5, r8
   12b60:	sub	r8, r6, #256	; 0x100
   12b64:	mov	r7, #0
   12b68:	add	r4, sp, #24
   12b6c:	str	r5, [sp, #4]
   12b70:	mov	sl, #0
   12b74:	mov	r9, r7
   12b78:	ldr	r0, [sp, #20]
   12b7c:	ldr	r3, [r0]
   12b80:	mov	r0, r4
   12b84:	ldr	r1, [sp, #16]
   12b88:	mov	r2, #256	; 0x100
   12b8c:	bl	18d0 <fread@plt>
   12b90:	mov	r1, r4
   12b94:	mov	r2, #0
   12b98:	ldrb	r3, [r1], #8
   12b9c:	strb	r3, [r5, r2]
   12ba0:	add	r2, r2, #1
   12ba4:	cmp	r2, #256	; 0x100
   12ba8:	bne	12b98 <ReadInt8Data+0x1198>
   12bac:	add	sl, r0, sl
   12bb0:	add	r5, r5, #256	; 0x100
   12bb4:	add	r7, r9, #256	; 0x100
   12bb8:	cmp	r7, r8
   12bbc:	blt	12b74 <ReadInt8Data+0x1174>
   12bc0:	ldr	r6, [sp, #8]
   12bc4:	cmp	r7, r6
   12bc8:	bge	12c3c <ReadInt8Data+0x123c>
   12bcc:	sub	r5, r6, r7
   12bd0:	ldr	r0, [sp, #20]
   12bd4:	ldr	r3, [r0]
   12bd8:	add	r4, sp, #24
   12bdc:	mov	r0, r4
   12be0:	ldr	r1, [sp, #16]
   12be4:	mov	r2, r5
   12be8:	bl	18d0 <fread@plt>
   12bec:	add	sl, r0, sl
   12bf0:	cmp	r5, #1
   12bf4:	blt	12c24 <ReadInt8Data+0x1224>
   12bf8:	sub	r0, r8, r9
   12bfc:	ldr	r8, [sp, #4]
   12c00:	mov	r1, r8
   12c04:	ldrb	r2, [r4], #8
   12c08:	strb	r2, [r1, r7]
   12c0c:	add	r1, r1, #1
   12c10:	subs	r0, r0, #1
   12c14:	bne	12c04 <ReadInt8Data+0x1204>
   12c18:	ldr	r9, [sp, #16]
   12c1c:	ldr	r6, [sp, #8]
   12c20:	b	12c44 <ReadInt8Data+0x1244>
   12c24:	ldr	r9, [sp, #16]
   12c28:	ldr	r6, [sp, #8]
   12c2c:	b	12c40 <ReadInt8Data+0x1240>
   12c30:	ldr	r9, [sp, #16]
   12c34:	ldr	r8, [sp, #4]
   12c38:	b	12c48 <ReadInt8Data+0x1248>
   12c3c:	ldr	r9, [sp, #16]
   12c40:	ldr	r8, [sp, #4]
   12c44:	ldr	r4, [sp, #20]
   12c48:	ldr	r5, [sp, #12]
   12c4c:	cmp	r5, #13
   12c50:	bne	12e90 <ReadInt8Data+0x1490>
   12c54:	ldr	r0, [r4, #20]
   12c58:	cmp	r0, #0
   12c5c:	beq	12ca8 <ReadInt8Data+0x12a8>
   12c60:	cmp	r6, #256	; 0x100
   12c64:	bgt	12ce8 <ReadInt8Data+0x12e8>
   12c68:	ldr	r3, [r4]
   12c6c:	add	r4, sp, #24
   12c70:	mov	r0, r4
   12c74:	mov	r1, r9
   12c78:	mov	r2, r6
   12c7c:	bl	18d0 <fread@plt>
   12c80:	add	sl, r0, sl
   12c84:	cmp	r6, #1
   12c88:	blt	12e90 <ReadInt8Data+0x1490>
   12c8c:	mov	r0, r4
   12c90:	bl	1c0c <Mat_uint64Swap>
   12c94:	strb	r0, [r8], #1
   12c98:	subs	r6, r6, #1
   12c9c:	add	r4, r4, #8
   12ca0:	bne	12c8c <ReadInt8Data+0x128c>
   12ca4:	b	12e90 <ReadInt8Data+0x1490>
   12ca8:	cmp	r6, #256	; 0x100
   12cac:	bgt	12dc8 <ReadInt8Data+0x13c8>
   12cb0:	ldr	r3, [r4]
   12cb4:	add	r4, sp, #24
   12cb8:	mov	r0, r4
   12cbc:	mov	r1, r9
   12cc0:	mov	r2, r6
   12cc4:	bl	18d0 <fread@plt>
   12cc8:	add	sl, r0, sl
   12ccc:	cmp	r6, #1
   12cd0:	blt	12e90 <ReadInt8Data+0x1490>
   12cd4:	ldrb	r0, [r4], #8
   12cd8:	strb	r0, [r8], #1
   12cdc:	subs	r6, r6, #1
   12ce0:	bne	12cd4 <ReadInt8Data+0x12d4>
   12ce4:	b	12e90 <ReadInt8Data+0x1490>
   12ce8:	str	r9, [sp, #16]
   12cec:	str	r6, [sp, #8]
   12cf0:	sub	r0, r6, #256	; 0x100
   12cf4:	str	r0, [sp, #12]
   12cf8:	mov	r7, #0
   12cfc:	add	r6, sp, #24
   12d00:	str	r8, [sp, #4]
   12d04:	mov	r5, r8
   12d08:	mov	r9, r7
   12d0c:	ldr	r3, [r4]
   12d10:	mov	r7, r6
   12d14:	mov	r0, r6
   12d18:	ldr	r1, [sp, #16]
   12d1c:	mov	r2, #256	; 0x100
   12d20:	bl	18d0 <fread@plt>
   12d24:	mov	r8, r0
   12d28:	mov	r4, #0
   12d2c:	mov	r0, r7
   12d30:	bl	1c0c <Mat_uint64Swap>
   12d34:	strb	r0, [r5, r4]
   12d38:	add	r7, r7, #8
   12d3c:	add	r4, r4, #1
   12d40:	cmp	r4, #256	; 0x100
   12d44:	bne	12d2c <ReadInt8Data+0x132c>
   12d48:	add	sl, r8, sl
   12d4c:	add	r5, r5, #256	; 0x100
   12d50:	add	r7, r9, #256	; 0x100
   12d54:	ldr	r0, [sp, #12]
   12d58:	cmp	r7, r0
   12d5c:	ldr	r4, [sp, #20]
   12d60:	blt	12d08 <ReadInt8Data+0x1308>
   12d64:	ldr	r0, [sp, #8]
   12d68:	cmp	r7, r0
   12d6c:	bge	12dc0 <ReadInt8Data+0x13c0>
   12d70:	sub	r8, r0, r7
   12d74:	ldr	r3, [r4]
   12d78:	add	r4, sp, #24
   12d7c:	mov	r0, r4
   12d80:	ldr	r1, [sp, #16]
   12d84:	mov	r2, r8
   12d88:	bl	18d0 <fread@plt>
   12d8c:	add	sl, r0, sl
   12d90:	cmp	r8, #1
   12d94:	blt	12dc0 <ReadInt8Data+0x13c0>
   12d98:	ldr	r0, [sp, #12]
   12d9c:	sub	r5, r0, r9
   12da0:	ldr	r6, [sp, #4]
   12da4:	mov	r0, r4
   12da8:	bl	1c0c <Mat_uint64Swap>
   12dac:	strb	r0, [r6, r7]
   12db0:	add	r6, r6, #1
   12db4:	subs	r5, r5, #1
   12db8:	add	r4, r4, #8
   12dbc:	bne	12da4 <ReadInt8Data+0x13a4>
   12dc0:	ldr	r9, [sp, #16]
   12dc4:	b	12e90 <ReadInt8Data+0x1490>
   12dc8:	mov	r5, r9
   12dcc:	str	r6, [sp, #8]
   12dd0:	sub	r0, r6, #256	; 0x100
   12dd4:	str	r0, [sp, #16]
   12dd8:	mov	r7, #0
   12ddc:	add	r9, sp, #24
   12de0:	mov	r6, r8
   12de4:	mov	r4, r8
   12de8:	mov	r8, r7
   12dec:	ldr	r0, [sp, #20]
   12df0:	ldr	r3, [r0]
   12df4:	mov	r0, r9
   12df8:	mov	r1, r5
   12dfc:	mov	r2, #256	; 0x100
   12e00:	bl	18d0 <fread@plt>
   12e04:	mov	r1, r9
   12e08:	mov	r2, #0
   12e0c:	ldrb	r3, [r1], #8
   12e10:	strb	r3, [r4, r2]
   12e14:	add	r2, r2, #1
   12e18:	cmp	r2, #256	; 0x100
   12e1c:	bne	12e0c <ReadInt8Data+0x140c>
   12e20:	add	sl, r0, sl
   12e24:	add	r4, r4, #256	; 0x100
   12e28:	add	r7, r8, #256	; 0x100
   12e2c:	ldr	r0, [sp, #16]
   12e30:	cmp	r7, r0
   12e34:	blt	12de8 <ReadInt8Data+0x13e8>
   12e38:	ldr	r0, [sp, #8]
   12e3c:	cmp	r7, r0
   12e40:	bge	12e8c <ReadInt8Data+0x148c>
   12e44:	sub	r9, r0, r7
   12e48:	ldr	r0, [sp, #20]
   12e4c:	ldr	r3, [r0]
   12e50:	add	r4, sp, #24
   12e54:	mov	r0, r4
   12e58:	mov	r1, r5
   12e5c:	mov	r2, r9
   12e60:	bl	18d0 <fread@plt>
   12e64:	add	sl, r0, sl
   12e68:	cmp	r9, #1
   12e6c:	blt	12e8c <ReadInt8Data+0x148c>
   12e70:	ldr	r0, [sp, #16]
   12e74:	sub	r0, r0, r8
   12e78:	ldrb	r1, [r4], #8
   12e7c:	strb	r1, [r6, r7]
   12e80:	add	r6, r6, #1
   12e84:	subs	r0, r0, #1
   12e88:	bne	12e78 <ReadInt8Data+0x1478>
   12e8c:	mov	r9, r5
   12e90:	mul	r0, sl, r9
   12e94:	sub	sp, fp, #28
   12e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e9c <ReadCompressedInt8Data>:
   12e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea0:	add	fp, sp, #28
   12ea4:	sub	sp, sp, #20
   12ea8:	mov	r7, r0
   12eac:	mov	r0, #0
   12eb0:	cmp	r1, #0
   12eb4:	beq	12ec8 <ReadCompressedInt8Data+0x2c>
   12eb8:	cmp	r7, #0
   12ebc:	movne	r5, r2
   12ec0:	cmpne	r2, #0
   12ec4:	bne	12ed0 <ReadCompressedInt8Data+0x34>
   12ec8:	sub	sp, fp, #28
   12ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ed0:	mov	r4, r3
   12ed4:	mov	r8, r1
   12ed8:	ldr	sl, [fp, #8]
   12edc:	mov	r0, r3
   12ee0:	bl	193c <Mat_SizeOf@plt>
   12ee4:	mov	r6, r0
   12ee8:	sub	r0, r4, #1
   12eec:	cmp	r0, #12
   12ef0:	bhi	133e0 <ReadCompressedInt8Data+0x544>
   12ef4:	add	r1, pc, #4
   12ef8:	ldr	r0, [r1, r0, lsl #2]
   12efc:	add	pc, r1, r0
   12f00:	.word	0x00000034
   12f04:	.word	0x0000006c
   12f08:	.word	0x000000a4
   12f0c:	.word	0x000000ec
   12f10:	.word	0x00000134
   12f14:	.word	0x0000017c
   12f18:	.word	0x000001c4
   12f1c:	.word	0x000004e0
   12f20:	.word	0x00000214
   12f24:	.word	0x000004e0
   12f28:	.word	0x000004e0
   12f2c:	.word	0x00000264
   12f30:	.word	0x00000464
   12f34:	cmp	sl, #1
   12f38:	blt	133e0 <ReadCompressedInt8Data+0x544>
   12f3c:	add	r9, sp, #8
   12f40:	mov	r4, sl
   12f44:	mov	r0, r7
   12f48:	mov	r1, r8
   12f4c:	mov	r2, r9
   12f50:	mov	r3, r6
   12f54:	bl	31e4 <InflateData>
   12f58:	ldrb	r0, [sp, #8]
   12f5c:	strb	r0, [r5], #1
   12f60:	subs	r4, r4, #1
   12f64:	bne	12f44 <ReadCompressedInt8Data+0xa8>
   12f68:	b	133e0 <ReadCompressedInt8Data+0x544>
   12f6c:	cmp	sl, #1
   12f70:	blt	133e0 <ReadCompressedInt8Data+0x544>
   12f74:	add	r9, sp, #8
   12f78:	mov	r4, sl
   12f7c:	mov	r0, r7
   12f80:	mov	r1, r8
   12f84:	mov	r2, r9
   12f88:	mov	r3, r6
   12f8c:	bl	31e4 <InflateData>
   12f90:	ldrb	r0, [sp, #8]
   12f94:	strb	r0, [r5], #1
   12f98:	subs	r4, r4, #1
   12f9c:	bne	12f7c <ReadCompressedInt8Data+0xe0>
   12fa0:	b	133e0 <ReadCompressedInt8Data+0x544>
   12fa4:	ldr	r0, [r7, #20]
   12fa8:	cmp	r0, #0
   12fac:	beq	131b4 <ReadCompressedInt8Data+0x318>
   12fb0:	cmp	sl, #1
   12fb4:	blt	133e0 <ReadCompressedInt8Data+0x544>
   12fb8:	add	r9, sp, #8
   12fbc:	mov	r4, sl
   12fc0:	mov	r0, r7
   12fc4:	mov	r1, r8
   12fc8:	mov	r2, r9
   12fcc:	mov	r3, r6
   12fd0:	bl	31e4 <InflateData>
   12fd4:	mov	r0, r9
   12fd8:	bl	1c50 <Mat_int16Swap>
   12fdc:	strb	r0, [r5], #1
   12fe0:	subs	r4, r4, #1
   12fe4:	bne	12fc0 <ReadCompressedInt8Data+0x124>
   12fe8:	b	133e0 <ReadCompressedInt8Data+0x544>
   12fec:	ldr	r0, [r7, #20]
   12ff0:	cmp	r0, #0
   12ff4:	beq	131ec <ReadCompressedInt8Data+0x350>
   12ff8:	cmp	sl, #1
   12ffc:	blt	133e0 <ReadCompressedInt8Data+0x544>
   13000:	add	r9, sp, #8
   13004:	mov	r4, sl
   13008:	mov	r0, r7
   1300c:	mov	r1, r8
   13010:	mov	r2, r9
   13014:	mov	r3, r6
   13018:	bl	31e4 <InflateData>
   1301c:	mov	r0, r9
   13020:	bl	1c64 <Mat_uint16Swap>
   13024:	strb	r0, [r5], #1
   13028:	subs	r4, r4, #1
   1302c:	bne	13008 <ReadCompressedInt8Data+0x16c>
   13030:	b	133e0 <ReadCompressedInt8Data+0x544>
   13034:	ldr	r0, [r7, #20]
   13038:	cmp	r0, #0
   1303c:	beq	13224 <ReadCompressedInt8Data+0x388>
   13040:	cmp	sl, #1
   13044:	blt	133e0 <ReadCompressedInt8Data+0x544>
   13048:	add	r9, sp, #8
   1304c:	mov	r4, sl
   13050:	mov	r0, r7
   13054:	mov	r1, r8
   13058:	mov	r2, r9
   1305c:	mov	r3, r6
   13060:	bl	31e4 <InflateData>
   13064:	mov	r0, r9
   13068:	bl	1c28 <Mat_int32Swap>
   1306c:	strb	r0, [r5], #1
   13070:	subs	r4, r4, #1
   13074:	bne	13050 <ReadCompressedInt8Data+0x1b4>
   13078:	b	133e0 <ReadCompressedInt8Data+0x544>
   1307c:	ldr	r0, [r7, #20]
   13080:	cmp	r0, #0
   13084:	beq	1325c <ReadCompressedInt8Data+0x3c0>
   13088:	cmp	sl, #1
   1308c:	blt	133e0 <ReadCompressedInt8Data+0x544>
   13090:	add	r9, sp, #8
   13094:	mov	r4, sl
   13098:	mov	r0, r7
   1309c:	mov	r1, r8
   130a0:	mov	r2, r9
   130a4:	mov	r3, r6
   130a8:	bl	31e4 <InflateData>
   130ac:	mov	r0, r9
   130b0:	bl	1c3c <Mat_uint32Swap>
   130b4:	strb	r0, [r5], #1
   130b8:	subs	r4, r4, #1
   130bc:	bne	13098 <ReadCompressedInt8Data+0x1fc>
   130c0:	b	133e0 <ReadCompressedInt8Data+0x544>
   130c4:	ldr	r0, [r7, #20]
   130c8:	cmp	r0, #0
   130cc:	beq	13294 <ReadCompressedInt8Data+0x3f8>
   130d0:	cmp	sl, #1
   130d4:	blt	133e0 <ReadCompressedInt8Data+0x544>
   130d8:	add	r9, sp, #8
   130dc:	mov	r4, sl
   130e0:	mov	r0, r7
   130e4:	mov	r1, r8
   130e8:	mov	r2, r9
   130ec:	mov	r3, r6
   130f0:	bl	31e4 <InflateData>
   130f4:	mov	r0, r9
   130f8:	bl	1c7c <Mat_floatSwap>
   130fc:	vcvt.s32.f32	s0, s0
   13100:	vmov	r0, s0
   13104:	strb	r0, [r5], #1
   13108:	subs	r4, r4, #1
   1310c:	bne	130e0 <ReadCompressedInt8Data+0x244>
   13110:	b	133e0 <ReadCompressedInt8Data+0x544>
   13114:	ldr	r0, [r7, #20]
   13118:	cmp	r0, #0
   1311c:	beq	132d4 <ReadCompressedInt8Data+0x438>
   13120:	cmp	sl, #1
   13124:	blt	133e0 <ReadCompressedInt8Data+0x544>
   13128:	add	r9, sp, #8
   1312c:	mov	r4, sl
   13130:	mov	r0, r7
   13134:	mov	r1, r8
   13138:	mov	r2, r9
   1313c:	mov	r3, r6
   13140:	bl	31e4 <InflateData>
   13144:	mov	r0, r9
   13148:	bl	1cc0 <Mat_doubleSwap>
   1314c:	vcvt.s32.f64	s0, d0
   13150:	vmov	r0, s0
   13154:	strb	r0, [r5], #1
   13158:	subs	r4, r4, #1
   1315c:	bne	13130 <ReadCompressedInt8Data+0x294>
   13160:	b	133e0 <ReadCompressedInt8Data+0x544>
   13164:	ldr	r0, [r7, #20]
   13168:	cmp	r0, #0
   1316c:	beq	13314 <ReadCompressedInt8Data+0x478>
   13170:	cmp	sl, #1
   13174:	blt	133e0 <ReadCompressedInt8Data+0x544>
   13178:	str	r4, [sp]
   1317c:	add	r4, sp, #8
   13180:	mov	r9, r5
   13184:	str	r6, [sp, #4]
   13188:	mov	r0, r7
   1318c:	mov	r1, r8
   13190:	mov	r2, r4
   13194:	ldr	r3, [sp, #4]
   13198:	bl	31e4 <InflateData>
   1319c:	mov	r0, r4
   131a0:	bl	1bbc <Mat_int64Swap>
   131a4:	strb	r0, [r9], #1
   131a8:	subs	sl, sl, #1
   131ac:	bne	13188 <ReadCompressedInt8Data+0x2ec>
   131b0:	b	13350 <ReadCompressedInt8Data+0x4b4>
   131b4:	cmp	sl, #1
   131b8:	blt	133e0 <ReadCompressedInt8Data+0x544>
   131bc:	add	r9, sp, #8
   131c0:	mov	r4, sl
   131c4:	mov	r0, r7
   131c8:	mov	r1, r8
   131cc:	mov	r2, r9
   131d0:	mov	r3, r6
   131d4:	bl	31e4 <InflateData>
   131d8:	ldrb	r0, [sp, #8]
   131dc:	strb	r0, [r5], #1
   131e0:	subs	r4, r4, #1
   131e4:	bne	131c4 <ReadCompressedInt8Data+0x328>
   131e8:	b	133e0 <ReadCompressedInt8Data+0x544>
   131ec:	cmp	sl, #1
   131f0:	blt	133e0 <ReadCompressedInt8Data+0x544>
   131f4:	add	r9, sp, #8
   131f8:	mov	r4, sl
   131fc:	mov	r0, r7
   13200:	mov	r1, r8
   13204:	mov	r2, r9
   13208:	mov	r3, r6
   1320c:	bl	31e4 <InflateData>
   13210:	ldrb	r0, [sp, #8]
   13214:	strb	r0, [r5], #1
   13218:	subs	r4, r4, #1
   1321c:	bne	131fc <ReadCompressedInt8Data+0x360>
   13220:	b	133e0 <ReadCompressedInt8Data+0x544>
   13224:	cmp	sl, #1
   13228:	blt	133e0 <ReadCompressedInt8Data+0x544>
   1322c:	add	r9, sp, #8
   13230:	mov	r4, sl
   13234:	mov	r0, r7
   13238:	mov	r1, r8
   1323c:	mov	r2, r9
   13240:	mov	r3, r6
   13244:	bl	31e4 <InflateData>
   13248:	ldr	r0, [sp, #8]
   1324c:	strb	r0, [r5], #1
   13250:	subs	r4, r4, #1
   13254:	bne	13234 <ReadCompressedInt8Data+0x398>
   13258:	b	133e0 <ReadCompressedInt8Data+0x544>
   1325c:	cmp	sl, #1
   13260:	blt	133e0 <ReadCompressedInt8Data+0x544>
   13264:	add	r9, sp, #8
   13268:	mov	r4, sl
   1326c:	mov	r0, r7
   13270:	mov	r1, r8
   13274:	mov	r2, r9
   13278:	mov	r3, r6
   1327c:	bl	31e4 <InflateData>
   13280:	ldr	r0, [sp, #8]
   13284:	strb	r0, [r5], #1
   13288:	subs	r4, r4, #1
   1328c:	bne	1326c <ReadCompressedInt8Data+0x3d0>
   13290:	b	133e0 <ReadCompressedInt8Data+0x544>
   13294:	cmp	sl, #1
   13298:	blt	133e0 <ReadCompressedInt8Data+0x544>
   1329c:	add	r9, sp, #8
   132a0:	mov	r4, sl
   132a4:	mov	r0, r7
   132a8:	mov	r1, r8
   132ac:	mov	r2, r9
   132b0:	mov	r3, r6
   132b4:	bl	31e4 <InflateData>
   132b8:	vldr	s0, [sp, #8]
   132bc:	vcvt.s32.f32	s0, s0
   132c0:	vmov	r0, s0
   132c4:	strb	r0, [r5], #1
   132c8:	subs	r4, r4, #1
   132cc:	bne	132a4 <ReadCompressedInt8Data+0x408>
   132d0:	b	133e0 <ReadCompressedInt8Data+0x544>
   132d4:	cmp	sl, #1
   132d8:	blt	133e0 <ReadCompressedInt8Data+0x544>
   132dc:	add	r9, sp, #8
   132e0:	mov	r4, sl
   132e4:	mov	r0, r7
   132e8:	mov	r1, r8
   132ec:	mov	r2, r9
   132f0:	mov	r3, r6
   132f4:	bl	31e4 <InflateData>
   132f8:	vldr	d16, [sp, #8]
   132fc:	vcvt.s32.f64	s0, d16
   13300:	vmov	r0, s0
   13304:	strb	r0, [r5], #1
   13308:	subs	r4, r4, #1
   1330c:	bne	132e4 <ReadCompressedInt8Data+0x448>
   13310:	b	133e0 <ReadCompressedInt8Data+0x544>
   13314:	cmp	sl, #1
   13318:	blt	133e0 <ReadCompressedInt8Data+0x544>
   1331c:	str	r4, [sp]
   13320:	add	r9, sp, #8
   13324:	str	r6, [sp, #4]
   13328:	mov	r6, r5
   1332c:	mov	r0, r7
   13330:	mov	r1, r8
   13334:	mov	r2, r9
   13338:	ldr	r3, [sp, #4]
   1333c:	bl	31e4 <InflateData>
   13340:	ldrb	r0, [sp, #8]
   13344:	strb	r0, [r6], #1
   13348:	subs	sl, sl, #1
   1334c:	bne	1332c <ReadCompressedInt8Data+0x490>
   13350:	ldr	r0, [sp]
   13354:	cmp	r0, #13
   13358:	ldr	sl, [fp, #8]
   1335c:	ldr	r6, [sp, #4]
   13360:	bne	133e0 <ReadCompressedInt8Data+0x544>
   13364:	ldr	r0, [r7, #20]
   13368:	cmp	r0, #0
   1336c:	beq	133ac <ReadCompressedInt8Data+0x510>
   13370:	cmp	sl, #1
   13374:	blt	133e0 <ReadCompressedInt8Data+0x544>
   13378:	add	r9, sp, #8
   1337c:	mov	r4, sl
   13380:	mov	r0, r7
   13384:	mov	r1, r8
   13388:	mov	r2, r9
   1338c:	mov	r3, r6
   13390:	bl	31e4 <InflateData>
   13394:	mov	r0, r9
   13398:	bl	1c0c <Mat_uint64Swap>
   1339c:	strb	r0, [r5], #1
   133a0:	subs	r4, r4, #1
   133a4:	bne	13380 <ReadCompressedInt8Data+0x4e4>
   133a8:	b	133e0 <ReadCompressedInt8Data+0x544>
   133ac:	cmp	sl, #1
   133b0:	blt	133e0 <ReadCompressedInt8Data+0x544>
   133b4:	add	r9, sp, #8
   133b8:	mov	r4, sl
   133bc:	mov	r0, r7
   133c0:	mov	r1, r8
   133c4:	mov	r2, r9
   133c8:	mov	r3, r6
   133cc:	bl	31e4 <InflateData>
   133d0:	ldrb	r0, [sp, #8]
   133d4:	strb	r0, [r5], #1
   133d8:	subs	r4, r4, #1
   133dc:	bne	133bc <ReadCompressedInt8Data+0x520>
   133e0:	mul	r0, r6, sl
   133e4:	sub	sp, fp, #28
   133e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000133ec <ReadUInt8Data>:
   133ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133f0:	add	fp, sp, #28
   133f4:	sub	sp, sp, #28
   133f8:	sub	sp, sp, #2048	; 0x800
   133fc:	mov	r4, r0
   13400:	mov	r0, #0
   13404:	cmp	r4, #0
   13408:	beq	13420 <ReadUInt8Data+0x34>
   1340c:	mov	r8, r1
   13410:	cmp	r1, #0
   13414:	ldrne	r1, [r4]
   13418:	cmpne	r1, #0
   1341c:	bne	13428 <ReadUInt8Data+0x3c>
   13420:	sub	sp, fp, #28
   13424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13428:	mov	r6, r3
   1342c:	mov	r5, r2
   13430:	mov	r0, r2
   13434:	bl	193c <Mat_SizeOf@plt>
   13438:	mov	r9, r0
   1343c:	sub	r0, r5, #1
   13440:	mov	sl, #0
   13444:	cmp	r0, #11
   13448:	str	r4, [sp, #20]
   1344c:	bhi	14638 <ReadUInt8Data+0x124c>
   13450:	add	r1, pc, #4
   13454:	ldr	r0, [r1, r0, lsl #2]
   13458:	add	pc, r1, r0
   1345c:	.word	0x00000030
   13460:	.word	0x00000098
   13464:	.word	0x000000d4
   13468:	.word	0x00000128
   1346c:	.word	0x0000017c
   13470:	.word	0x000001d0
   13474:	.word	0x00000224
   13478:	.word	0x000011dc
   1347c:	.word	0x00000280
   13480:	.word	0x000011dc
   13484:	.word	0x000011dc
   13488:	.word	0x000002dc
   1348c:	cmp	r6, #256	; 0x100
   13490:	ble	134fc <ReadUInt8Data+0x110>
   13494:	str	r6, [sp, #8]
   13498:	sub	r0, r6, #256	; 0x100
   1349c:	str	r0, [sp, #16]
   134a0:	mov	r5, r4
   134a4:	mov	r4, #0
   134a8:	mov	r6, r8
   134ac:	add	r8, sp, #24
   134b0:	mov	sl, #0
   134b4:	ldr	r3, [r5]
   134b8:	mov	r0, r8
   134bc:	mov	r1, r9
   134c0:	mov	r2, #256	; 0x100
   134c4:	bl	18d0 <fread@plt>
   134c8:	mov	r7, r0
   134cc:	add	r0, r6, r4
   134d0:	mov	r1, r8
   134d4:	mov	r2, #256	; 0x100
   134d8:	bl	1834 <memcpy@plt>
   134dc:	add	sl, r7, sl
   134e0:	add	r4, r4, #256	; 0x100
   134e4:	ldr	r0, [sp, #16]
   134e8:	cmp	r4, r0
   134ec:	blt	134b4 <ReadUInt8Data+0xc8>
   134f0:	b	137f4 <ReadUInt8Data+0x408>
   134f4:	cmp	r6, #256	; 0x100
   134f8:	bgt	13798 <ReadUInt8Data+0x3ac>
   134fc:	ldr	r3, [r4]
   13500:	add	r0, sp, #24
   13504:	mov	r1, r9
   13508:	mov	r2, r6
   1350c:	bl	18d0 <fread@plt>
   13510:	mov	sl, r0
   13514:	cmp	r6, #0
   13518:	ble	1487c <ReadUInt8Data+0x1490>
   1351c:	add	r1, sp, #24
   13520:	mov	r0, r8
   13524:	mov	r2, r6
   13528:	bl	1834 <memcpy@plt>
   1352c:	b	1487c <ReadUInt8Data+0x1490>
   13530:	ldr	r0, [r4, #20]
   13534:	cmp	r0, #0
   13538:	beq	1383c <ReadUInt8Data+0x450>
   1353c:	cmp	r6, #256	; 0x100
   13540:	bgt	13a28 <ReadUInt8Data+0x63c>
   13544:	ldr	r3, [r4]
   13548:	add	r4, sp, #24
   1354c:	mov	r0, r4
   13550:	mov	r1, r9
   13554:	mov	r2, r6
   13558:	bl	18d0 <fread@plt>
   1355c:	mov	sl, r0
   13560:	cmp	r6, #1
   13564:	blt	1487c <ReadUInt8Data+0x1490>
   13568:	mov	r0, r4
   1356c:	bl	1c50 <Mat_int16Swap>
   13570:	strb	r0, [r8], #1
   13574:	subs	r6, r6, #1
   13578:	add	r4, r4, #2
   1357c:	bne	13568 <ReadUInt8Data+0x17c>
   13580:	b	1487c <ReadUInt8Data+0x1490>
   13584:	ldr	r0, [r4, #20]
   13588:	cmp	r0, #0
   1358c:	beq	1387c <ReadUInt8Data+0x490>
   13590:	cmp	r6, #256	; 0x100
   13594:	bgt	13b08 <ReadUInt8Data+0x71c>
   13598:	ldr	r3, [r4]
   1359c:	add	r4, sp, #24
   135a0:	mov	r0, r4
   135a4:	mov	r1, r9
   135a8:	mov	r2, r6
   135ac:	bl	18d0 <fread@plt>
   135b0:	mov	sl, r0
   135b4:	cmp	r6, #1
   135b8:	blt	1487c <ReadUInt8Data+0x1490>
   135bc:	mov	r0, r4
   135c0:	bl	1c64 <Mat_uint16Swap>
   135c4:	strb	r0, [r8], #1
   135c8:	subs	r6, r6, #1
   135cc:	add	r4, r4, #2
   135d0:	bne	135bc <ReadUInt8Data+0x1d0>
   135d4:	b	1487c <ReadUInt8Data+0x1490>
   135d8:	ldr	r0, [r4, #20]
   135dc:	cmp	r0, #0
   135e0:	beq	138bc <ReadUInt8Data+0x4d0>
   135e4:	cmp	r6, #256	; 0x100
   135e8:	bgt	13be8 <ReadUInt8Data+0x7fc>
   135ec:	ldr	r3, [r4]
   135f0:	add	r4, sp, #24
   135f4:	mov	r0, r4
   135f8:	mov	r1, r9
   135fc:	mov	r2, r6
   13600:	bl	18d0 <fread@plt>
   13604:	mov	sl, r0
   13608:	cmp	r6, #1
   1360c:	blt	1487c <ReadUInt8Data+0x1490>
   13610:	mov	r0, r4
   13614:	bl	1c28 <Mat_int32Swap>
   13618:	strb	r0, [r8], #1
   1361c:	subs	r6, r6, #1
   13620:	add	r4, r4, #4
   13624:	bne	13610 <ReadUInt8Data+0x224>
   13628:	b	1487c <ReadUInt8Data+0x1490>
   1362c:	ldr	r0, [r4, #20]
   13630:	cmp	r0, #0
   13634:	beq	138fc <ReadUInt8Data+0x510>
   13638:	cmp	r6, #256	; 0x100
   1363c:	bgt	13cc8 <ReadUInt8Data+0x8dc>
   13640:	ldr	r3, [r4]
   13644:	add	r4, sp, #24
   13648:	mov	r0, r4
   1364c:	mov	r1, r9
   13650:	mov	r2, r6
   13654:	bl	18d0 <fread@plt>
   13658:	mov	sl, r0
   1365c:	cmp	r6, #1
   13660:	blt	1487c <ReadUInt8Data+0x1490>
   13664:	mov	r0, r4
   13668:	bl	1c3c <Mat_uint32Swap>
   1366c:	strb	r0, [r8], #1
   13670:	subs	r6, r6, #1
   13674:	add	r4, r4, #4
   13678:	bne	13664 <ReadUInt8Data+0x278>
   1367c:	b	1487c <ReadUInt8Data+0x1490>
   13680:	ldr	r0, [r4, #20]
   13684:	cmp	r0, #0
   13688:	beq	1393c <ReadUInt8Data+0x550>
   1368c:	cmp	r6, #256	; 0x100
   13690:	bgt	13da8 <ReadUInt8Data+0x9bc>
   13694:	ldr	r3, [r4]
   13698:	add	r4, sp, #24
   1369c:	mov	r0, r4
   136a0:	mov	r1, r9
   136a4:	mov	r2, r6
   136a8:	bl	18d0 <fread@plt>
   136ac:	mov	sl, r0
   136b0:	cmp	r6, #1
   136b4:	blt	1487c <ReadUInt8Data+0x1490>
   136b8:	mov	r0, r4
   136bc:	bl	1c7c <Mat_floatSwap>
   136c0:	vcvt.u32.f32	s0, s0
   136c4:	vmov	r0, s0
   136c8:	strb	r0, [r8], #1
   136cc:	subs	r6, r6, #1
   136d0:	add	r4, r4, #4
   136d4:	bne	136b8 <ReadUInt8Data+0x2cc>
   136d8:	b	1487c <ReadUInt8Data+0x1490>
   136dc:	ldr	r0, [r4, #20]
   136e0:	cmp	r0, #0
   136e4:	beq	13988 <ReadUInt8Data+0x59c>
   136e8:	cmp	r6, #256	; 0x100
   136ec:	bgt	13e98 <ReadUInt8Data+0xaac>
   136f0:	ldr	r3, [r4]
   136f4:	add	r4, sp, #24
   136f8:	mov	r0, r4
   136fc:	mov	r1, r9
   13700:	mov	r2, r6
   13704:	bl	18d0 <fread@plt>
   13708:	mov	sl, r0
   1370c:	cmp	r6, #1
   13710:	blt	1487c <ReadUInt8Data+0x1490>
   13714:	mov	r0, r4
   13718:	bl	1cc0 <Mat_doubleSwap>
   1371c:	vcvt.u32.f64	s0, d0
   13720:	vmov	r0, s0
   13724:	strb	r0, [r8], #1
   13728:	subs	r6, r6, #1
   1372c:	add	r4, r4, #8
   13730:	bne	13714 <ReadUInt8Data+0x328>
   13734:	b	1487c <ReadUInt8Data+0x1490>
   13738:	ldr	r0, [r4, #20]
   1373c:	cmp	r0, #0
   13740:	beq	139d4 <ReadUInt8Data+0x5e8>
   13744:	cmp	r6, #256	; 0x100
   13748:	bgt	13f88 <ReadUInt8Data+0xb9c>
   1374c:	ldr	r3, [r4]
   13750:	add	r4, sp, #24
   13754:	mov	r0, r4
   13758:	mov	r1, r9
   1375c:	mov	r2, r6
   13760:	bl	18d0 <fread@plt>
   13764:	mov	sl, r0
   13768:	cmp	r6, #1
   1376c:	blt	13a18 <ReadUInt8Data+0x62c>
   13770:	str	r5, [sp, #12]
   13774:	mov	r5, r6
   13778:	mov	r7, r8
   1377c:	mov	r0, r4
   13780:	bl	1bbc <Mat_int64Swap>
   13784:	strb	r0, [r7], #1
   13788:	subs	r5, r5, #1
   1378c:	add	r4, r4, #8
   13790:	bne	1377c <ReadUInt8Data+0x390>
   13794:	b	14630 <ReadUInt8Data+0x1244>
   13798:	str	r6, [sp, #8]
   1379c:	sub	r0, r6, #256	; 0x100
   137a0:	str	r0, [sp, #16]
   137a4:	mov	r5, r4
   137a8:	mov	r4, #0
   137ac:	mov	r6, r8
   137b0:	add	r8, sp, #24
   137b4:	mov	sl, #0
   137b8:	ldr	r3, [r5]
   137bc:	mov	r0, r8
   137c0:	mov	r1, r9
   137c4:	mov	r2, #256	; 0x100
   137c8:	bl	18d0 <fread@plt>
   137cc:	mov	r7, r0
   137d0:	add	r0, r6, r4
   137d4:	mov	r1, r8
   137d8:	mov	r2, #256	; 0x100
   137dc:	bl	1834 <memcpy@plt>
   137e0:	add	sl, r7, sl
   137e4:	add	r4, r4, #256	; 0x100
   137e8:	ldr	r0, [sp, #16]
   137ec:	cmp	r4, r0
   137f0:	blt	137b8 <ReadUInt8Data+0x3cc>
   137f4:	ldr	r0, [sp, #8]
   137f8:	cmp	r4, r0
   137fc:	bge	1487c <ReadUInt8Data+0x1490>
   13800:	sub	r7, r0, r4
   13804:	ldr	r0, [sp, #20]
   13808:	ldr	r3, [r0]
   1380c:	add	r0, sp, #24
   13810:	mov	r1, r9
   13814:	mov	r2, r7
   13818:	bl	18d0 <fread@plt>
   1381c:	add	sl, r0, sl
   13820:	cmp	r7, #0
   13824:	ble	1487c <ReadUInt8Data+0x1490>
   13828:	add	r0, r6, r4
   1382c:	add	r1, sp, #24
   13830:	mov	r2, r7
   13834:	bl	1834 <memcpy@plt>
   13838:	b	1487c <ReadUInt8Data+0x1490>
   1383c:	cmp	r6, #256	; 0x100
   13840:	bgt	14064 <ReadUInt8Data+0xc78>
   13844:	ldr	r3, [r4]
   13848:	add	r4, sp, #24
   1384c:	mov	r0, r4
   13850:	mov	r1, r9
   13854:	mov	r2, r6
   13858:	bl	18d0 <fread@plt>
   1385c:	mov	sl, r0
   13860:	cmp	r6, #1
   13864:	blt	1487c <ReadUInt8Data+0x1490>
   13868:	ldrb	r0, [r4], #2
   1386c:	strb	r0, [r8], #1
   13870:	subs	r6, r6, #1
   13874:	bne	13868 <ReadUInt8Data+0x47c>
   13878:	b	1487c <ReadUInt8Data+0x1490>
   1387c:	cmp	r6, #256	; 0x100
   13880:	bgt	14130 <ReadUInt8Data+0xd44>
   13884:	ldr	r3, [r4]
   13888:	add	r4, sp, #24
   1388c:	mov	r0, r4
   13890:	mov	r1, r9
   13894:	mov	r2, r6
   13898:	bl	18d0 <fread@plt>
   1389c:	mov	sl, r0
   138a0:	cmp	r6, #1
   138a4:	blt	1487c <ReadUInt8Data+0x1490>
   138a8:	ldrb	r0, [r4], #2
   138ac:	strb	r0, [r8], #1
   138b0:	subs	r6, r6, #1
   138b4:	bne	138a8 <ReadUInt8Data+0x4bc>
   138b8:	b	1487c <ReadUInt8Data+0x1490>
   138bc:	cmp	r6, #256	; 0x100
   138c0:	bgt	141fc <ReadUInt8Data+0xe10>
   138c4:	ldr	r3, [r4]
   138c8:	add	r4, sp, #24
   138cc:	mov	r0, r4
   138d0:	mov	r1, r9
   138d4:	mov	r2, r6
   138d8:	bl	18d0 <fread@plt>
   138dc:	mov	sl, r0
   138e0:	cmp	r6, #1
   138e4:	blt	1487c <ReadUInt8Data+0x1490>
   138e8:	ldr	r0, [r4], #4
   138ec:	strb	r0, [r8], #1
   138f0:	subs	r6, r6, #1
   138f4:	bne	138e8 <ReadUInt8Data+0x4fc>
   138f8:	b	1487c <ReadUInt8Data+0x1490>
   138fc:	cmp	r6, #256	; 0x100
   13900:	bgt	142b8 <ReadUInt8Data+0xecc>
   13904:	ldr	r3, [r4]
   13908:	add	r4, sp, #24
   1390c:	mov	r0, r4
   13910:	mov	r1, r9
   13914:	mov	r2, r6
   13918:	bl	18d0 <fread@plt>
   1391c:	mov	sl, r0
   13920:	cmp	r6, #1
   13924:	blt	1487c <ReadUInt8Data+0x1490>
   13928:	ldr	r0, [r4], #4
   1392c:	strb	r0, [r8], #1
   13930:	subs	r6, r6, #1
   13934:	bne	13928 <ReadUInt8Data+0x53c>
   13938:	b	1487c <ReadUInt8Data+0x1490>
   1393c:	cmp	r6, #256	; 0x100
   13940:	bgt	14374 <ReadUInt8Data+0xf88>
   13944:	ldr	r3, [r4]
   13948:	add	r4, sp, #24
   1394c:	mov	r0, r4
   13950:	mov	r1, r9
   13954:	mov	r2, r6
   13958:	bl	18d0 <fread@plt>
   1395c:	mov	sl, r0
   13960:	cmp	r6, #1
   13964:	blt	1487c <ReadUInt8Data+0x1490>
   13968:	vldr	s0, [r4]
   1396c:	vcvt.u32.f32	s0, s0
   13970:	vmov	r0, s0
   13974:	strb	r0, [r8], #1
   13978:	subs	r6, r6, #1
   1397c:	add	r4, r4, #4
   13980:	bne	13968 <ReadUInt8Data+0x57c>
   13984:	b	1487c <ReadUInt8Data+0x1490>
   13988:	cmp	r6, #256	; 0x100
   1398c:	bgt	14458 <ReadUInt8Data+0x106c>
   13990:	ldr	r3, [r4]
   13994:	add	r4, sp, #24
   13998:	mov	r0, r4
   1399c:	mov	r1, r9
   139a0:	mov	r2, r6
   139a4:	bl	18d0 <fread@plt>
   139a8:	mov	sl, r0
   139ac:	cmp	r6, #1
   139b0:	blt	1487c <ReadUInt8Data+0x1490>
   139b4:	vldr	d16, [r4]
   139b8:	vcvt.u32.f64	s0, d16
   139bc:	vmov	r0, s0
   139c0:	strb	r0, [r8], #1
   139c4:	subs	r6, r6, #1
   139c8:	add	r4, r4, #8
   139cc:	bne	139b4 <ReadUInt8Data+0x5c8>
   139d0:	b	1487c <ReadUInt8Data+0x1490>
   139d4:	cmp	r6, #256	; 0x100
   139d8:	bgt	1453c <ReadUInt8Data+0x1150>
   139dc:	ldr	r3, [r4]
   139e0:	add	r4, sp, #24
   139e4:	mov	r0, r4
   139e8:	mov	r1, r9
   139ec:	mov	r2, r6
   139f0:	bl	18d0 <fread@plt>
   139f4:	mov	sl, r0
   139f8:	cmp	r6, #1
   139fc:	blt	13a18 <ReadUInt8Data+0x62c>
   13a00:	mov	r0, r6
   13a04:	mov	r1, r8
   13a08:	ldrb	r2, [r4], #8
   13a0c:	strb	r2, [r1], #1
   13a10:	subs	r0, r0, #1
   13a14:	bne	13a08 <ReadUInt8Data+0x61c>
   13a18:	ldr	r4, [sp, #20]
   13a1c:	cmp	r5, #13
   13a20:	beq	14640 <ReadUInt8Data+0x1254>
   13a24:	b	1487c <ReadUInt8Data+0x1490>
   13a28:	str	r9, [sp, #16]
   13a2c:	str	r6, [sp, #8]
   13a30:	sub	r0, r6, #256	; 0x100
   13a34:	str	r0, [sp, #12]
   13a38:	mov	r7, #0
   13a3c:	add	r6, sp, #24
   13a40:	str	r8, [sp, #4]
   13a44:	mov	r5, r8
   13a48:	mov	sl, #0
   13a4c:	mov	r9, r7
   13a50:	ldr	r3, [r4]
   13a54:	mov	r7, r6
   13a58:	mov	r0, r6
   13a5c:	ldr	r1, [sp, #16]
   13a60:	mov	r2, #256	; 0x100
   13a64:	bl	18d0 <fread@plt>
   13a68:	mov	r8, r0
   13a6c:	mov	r4, #0
   13a70:	mov	r0, r7
   13a74:	bl	1c50 <Mat_int16Swap>
   13a78:	strb	r0, [r5, r4]
   13a7c:	add	r7, r7, #2
   13a80:	add	r4, r4, #1
   13a84:	cmp	r4, #256	; 0x100
   13a88:	bne	13a70 <ReadUInt8Data+0x684>
   13a8c:	add	sl, r8, sl
   13a90:	add	r5, r5, #256	; 0x100
   13a94:	add	r7, r9, #256	; 0x100
   13a98:	ldr	r0, [sp, #12]
   13a9c:	cmp	r7, r0
   13aa0:	ldr	r4, [sp, #20]
   13aa4:	blt	13a4c <ReadUInt8Data+0x660>
   13aa8:	ldr	r0, [sp, #8]
   13aac:	cmp	r7, r0
   13ab0:	bge	147ac <ReadUInt8Data+0x13c0>
   13ab4:	sub	r8, r0, r7
   13ab8:	ldr	r3, [r4]
   13abc:	add	r4, sp, #24
   13ac0:	mov	r0, r4
   13ac4:	ldr	r1, [sp, #16]
   13ac8:	mov	r2, r8
   13acc:	bl	18d0 <fread@plt>
   13ad0:	add	sl, r0, sl
   13ad4:	cmp	r8, #1
   13ad8:	blt	147ac <ReadUInt8Data+0x13c0>
   13adc:	ldr	r0, [sp, #12]
   13ae0:	sub	r5, r0, r9
   13ae4:	ldr	r6, [sp, #4]
   13ae8:	mov	r0, r4
   13aec:	bl	1c50 <Mat_int16Swap>
   13af0:	strb	r0, [r6, r7]
   13af4:	add	r6, r6, #1
   13af8:	subs	r5, r5, #1
   13afc:	add	r4, r4, #2
   13b00:	bne	13ae8 <ReadUInt8Data+0x6fc>
   13b04:	b	147ac <ReadUInt8Data+0x13c0>
   13b08:	str	r9, [sp, #16]
   13b0c:	str	r6, [sp, #8]
   13b10:	sub	r0, r6, #256	; 0x100
   13b14:	str	r0, [sp, #12]
   13b18:	mov	r7, #0
   13b1c:	add	r6, sp, #24
   13b20:	str	r8, [sp, #4]
   13b24:	mov	r5, r8
   13b28:	mov	sl, #0
   13b2c:	mov	r9, r7
   13b30:	ldr	r3, [r4]
   13b34:	mov	r7, r6
   13b38:	mov	r0, r6
   13b3c:	ldr	r1, [sp, #16]
   13b40:	mov	r2, #256	; 0x100
   13b44:	bl	18d0 <fread@plt>
   13b48:	mov	r8, r0
   13b4c:	mov	r4, #0
   13b50:	mov	r0, r7
   13b54:	bl	1c64 <Mat_uint16Swap>
   13b58:	strb	r0, [r5, r4]
   13b5c:	add	r7, r7, #2
   13b60:	add	r4, r4, #1
   13b64:	cmp	r4, #256	; 0x100
   13b68:	bne	13b50 <ReadUInt8Data+0x764>
   13b6c:	add	sl, r8, sl
   13b70:	add	r5, r5, #256	; 0x100
   13b74:	add	r7, r9, #256	; 0x100
   13b78:	ldr	r0, [sp, #12]
   13b7c:	cmp	r7, r0
   13b80:	ldr	r4, [sp, #20]
   13b84:	blt	13b2c <ReadUInt8Data+0x740>
   13b88:	ldr	r0, [sp, #8]
   13b8c:	cmp	r7, r0
   13b90:	bge	147ac <ReadUInt8Data+0x13c0>
   13b94:	sub	r8, r0, r7
   13b98:	ldr	r3, [r4]
   13b9c:	add	r4, sp, #24
   13ba0:	mov	r0, r4
   13ba4:	ldr	r1, [sp, #16]
   13ba8:	mov	r2, r8
   13bac:	bl	18d0 <fread@plt>
   13bb0:	add	sl, r0, sl
   13bb4:	cmp	r8, #1
   13bb8:	blt	147ac <ReadUInt8Data+0x13c0>
   13bbc:	ldr	r0, [sp, #12]
   13bc0:	sub	r5, r0, r9
   13bc4:	ldr	r6, [sp, #4]
   13bc8:	mov	r0, r4
   13bcc:	bl	1c64 <Mat_uint16Swap>
   13bd0:	strb	r0, [r6, r7]
   13bd4:	add	r6, r6, #1
   13bd8:	subs	r5, r5, #1
   13bdc:	add	r4, r4, #2
   13be0:	bne	13bc8 <ReadUInt8Data+0x7dc>
   13be4:	b	147ac <ReadUInt8Data+0x13c0>
   13be8:	str	r9, [sp, #16]
   13bec:	str	r6, [sp, #8]
   13bf0:	sub	r0, r6, #256	; 0x100
   13bf4:	str	r0, [sp, #12]
   13bf8:	mov	r7, #0
   13bfc:	add	r6, sp, #24
   13c00:	str	r8, [sp, #4]
   13c04:	mov	r5, r8
   13c08:	mov	sl, #0
   13c0c:	mov	r9, r7
   13c10:	ldr	r3, [r4]
   13c14:	mov	r7, r6
   13c18:	mov	r0, r6
   13c1c:	ldr	r1, [sp, #16]
   13c20:	mov	r2, #256	; 0x100
   13c24:	bl	18d0 <fread@plt>
   13c28:	mov	r8, r0
   13c2c:	mov	r4, #0
   13c30:	mov	r0, r7
   13c34:	bl	1c28 <Mat_int32Swap>
   13c38:	strb	r0, [r5, r4]
   13c3c:	add	r7, r7, #4
   13c40:	add	r4, r4, #1
   13c44:	cmp	r4, #256	; 0x100
   13c48:	bne	13c30 <ReadUInt8Data+0x844>
   13c4c:	add	sl, r8, sl
   13c50:	add	r5, r5, #256	; 0x100
   13c54:	add	r7, r9, #256	; 0x100
   13c58:	ldr	r0, [sp, #12]
   13c5c:	cmp	r7, r0
   13c60:	ldr	r4, [sp, #20]
   13c64:	blt	13c0c <ReadUInt8Data+0x820>
   13c68:	ldr	r0, [sp, #8]
   13c6c:	cmp	r7, r0
   13c70:	bge	147ac <ReadUInt8Data+0x13c0>
   13c74:	sub	r8, r0, r7
   13c78:	ldr	r3, [r4]
   13c7c:	add	r4, sp, #24
   13c80:	mov	r0, r4
   13c84:	ldr	r1, [sp, #16]
   13c88:	mov	r2, r8
   13c8c:	bl	18d0 <fread@plt>
   13c90:	add	sl, r0, sl
   13c94:	cmp	r8, #1
   13c98:	blt	147ac <ReadUInt8Data+0x13c0>
   13c9c:	ldr	r0, [sp, #12]
   13ca0:	sub	r5, r0, r9
   13ca4:	ldr	r6, [sp, #4]
   13ca8:	mov	r0, r4
   13cac:	bl	1c28 <Mat_int32Swap>
   13cb0:	strb	r0, [r6, r7]
   13cb4:	add	r6, r6, #1
   13cb8:	subs	r5, r5, #1
   13cbc:	add	r4, r4, #4
   13cc0:	bne	13ca8 <ReadUInt8Data+0x8bc>
   13cc4:	b	147ac <ReadUInt8Data+0x13c0>
   13cc8:	str	r9, [sp, #16]
   13ccc:	str	r6, [sp, #8]
   13cd0:	sub	r0, r6, #256	; 0x100
   13cd4:	str	r0, [sp, #12]
   13cd8:	mov	r7, #0
   13cdc:	add	r6, sp, #24
   13ce0:	str	r8, [sp, #4]
   13ce4:	mov	r5, r8
   13ce8:	mov	sl, #0
   13cec:	mov	r9, r7
   13cf0:	ldr	r3, [r4]
   13cf4:	mov	r7, r6
   13cf8:	mov	r0, r6
   13cfc:	ldr	r1, [sp, #16]
   13d00:	mov	r2, #256	; 0x100
   13d04:	bl	18d0 <fread@plt>
   13d08:	mov	r8, r0
   13d0c:	mov	r4, #0
   13d10:	mov	r0, r7
   13d14:	bl	1c3c <Mat_uint32Swap>
   13d18:	strb	r0, [r5, r4]
   13d1c:	add	r7, r7, #4
   13d20:	add	r4, r4, #1
   13d24:	cmp	r4, #256	; 0x100
   13d28:	bne	13d10 <ReadUInt8Data+0x924>
   13d2c:	add	sl, r8, sl
   13d30:	add	r5, r5, #256	; 0x100
   13d34:	add	r7, r9, #256	; 0x100
   13d38:	ldr	r0, [sp, #12]
   13d3c:	cmp	r7, r0
   13d40:	ldr	r4, [sp, #20]
   13d44:	blt	13cec <ReadUInt8Data+0x900>
   13d48:	ldr	r0, [sp, #8]
   13d4c:	cmp	r7, r0
   13d50:	bge	147ac <ReadUInt8Data+0x13c0>
   13d54:	sub	r8, r0, r7
   13d58:	ldr	r3, [r4]
   13d5c:	add	r4, sp, #24
   13d60:	mov	r0, r4
   13d64:	ldr	r1, [sp, #16]
   13d68:	mov	r2, r8
   13d6c:	bl	18d0 <fread@plt>
   13d70:	add	sl, r0, sl
   13d74:	cmp	r8, #1
   13d78:	blt	147ac <ReadUInt8Data+0x13c0>
   13d7c:	ldr	r0, [sp, #12]
   13d80:	sub	r5, r0, r9
   13d84:	ldr	r6, [sp, #4]
   13d88:	mov	r0, r4
   13d8c:	bl	1c3c <Mat_uint32Swap>
   13d90:	strb	r0, [r6, r7]
   13d94:	add	r6, r6, #1
   13d98:	subs	r5, r5, #1
   13d9c:	add	r4, r4, #4
   13da0:	bne	13d88 <ReadUInt8Data+0x99c>
   13da4:	b	147ac <ReadUInt8Data+0x13c0>
   13da8:	str	r9, [sp, #16]
   13dac:	str	r6, [sp, #8]
   13db0:	sub	r0, r6, #256	; 0x100
   13db4:	str	r0, [sp, #12]
   13db8:	mov	r7, #0
   13dbc:	add	r6, sp, #24
   13dc0:	str	r8, [sp, #4]
   13dc4:	mov	r5, r8
   13dc8:	mov	sl, #0
   13dcc:	mov	r9, r7
   13dd0:	ldr	r3, [r4]
   13dd4:	mov	r7, r6
   13dd8:	mov	r0, r6
   13ddc:	ldr	r1, [sp, #16]
   13de0:	mov	r2, #256	; 0x100
   13de4:	bl	18d0 <fread@plt>
   13de8:	mov	r8, r0
   13dec:	mov	r4, #0
   13df0:	mov	r0, r7
   13df4:	bl	1c7c <Mat_floatSwap>
   13df8:	vcvt.u32.f32	s0, s0
   13dfc:	vmov	r0, s0
   13e00:	strb	r0, [r5, r4]
   13e04:	add	r7, r7, #4
   13e08:	add	r4, r4, #1
   13e0c:	cmp	r4, #256	; 0x100
   13e10:	bne	13df0 <ReadUInt8Data+0xa04>
   13e14:	add	sl, r8, sl
   13e18:	add	r5, r5, #256	; 0x100
   13e1c:	add	r7, r9, #256	; 0x100
   13e20:	ldr	r0, [sp, #12]
   13e24:	cmp	r7, r0
   13e28:	ldr	r4, [sp, #20]
   13e2c:	blt	13dcc <ReadUInt8Data+0x9e0>
   13e30:	ldr	r0, [sp, #8]
   13e34:	cmp	r7, r0
   13e38:	bge	147ac <ReadUInt8Data+0x13c0>
   13e3c:	sub	r8, r0, r7
   13e40:	ldr	r3, [r4]
   13e44:	add	r4, sp, #24
   13e48:	mov	r0, r4
   13e4c:	ldr	r1, [sp, #16]
   13e50:	mov	r2, r8
   13e54:	bl	18d0 <fread@plt>
   13e58:	add	sl, r0, sl
   13e5c:	cmp	r8, #1
   13e60:	blt	147ac <ReadUInt8Data+0x13c0>
   13e64:	ldr	r0, [sp, #12]
   13e68:	sub	r5, r0, r9
   13e6c:	ldr	r6, [sp, #4]
   13e70:	mov	r0, r4
   13e74:	bl	1c7c <Mat_floatSwap>
   13e78:	vcvt.u32.f32	s0, s0
   13e7c:	vmov	r0, s0
   13e80:	strb	r0, [r6, r7]
   13e84:	add	r6, r6, #1
   13e88:	subs	r5, r5, #1
   13e8c:	add	r4, r4, #4
   13e90:	bne	13e70 <ReadUInt8Data+0xa84>
   13e94:	b	147ac <ReadUInt8Data+0x13c0>
   13e98:	str	r9, [sp, #16]
   13e9c:	str	r6, [sp, #8]
   13ea0:	sub	r0, r6, #256	; 0x100
   13ea4:	str	r0, [sp, #12]
   13ea8:	mov	r9, #0
   13eac:	add	r6, sp, #24
   13eb0:	str	r8, [sp, #4]
   13eb4:	mov	r5, r8
   13eb8:	mov	sl, #0
   13ebc:	mov	r8, r9
   13ec0:	ldr	r3, [r4]
   13ec4:	mov	r7, r6
   13ec8:	mov	r0, r6
   13ecc:	ldr	r1, [sp, #16]
   13ed0:	mov	r2, #256	; 0x100
   13ed4:	bl	18d0 <fread@plt>
   13ed8:	mov	r9, r0
   13edc:	mov	r4, #0
   13ee0:	mov	r0, r7
   13ee4:	bl	1cc0 <Mat_doubleSwap>
   13ee8:	vcvt.u32.f64	s0, d0
   13eec:	vmov	r0, s0
   13ef0:	strb	r0, [r5, r4]
   13ef4:	add	r7, r7, #8
   13ef8:	add	r4, r4, #1
   13efc:	cmp	r4, #256	; 0x100
   13f00:	bne	13ee0 <ReadUInt8Data+0xaf4>
   13f04:	add	sl, r9, sl
   13f08:	add	r5, r5, #256	; 0x100
   13f0c:	add	r9, r8, #256	; 0x100
   13f10:	ldr	r0, [sp, #12]
   13f14:	cmp	r9, r0
   13f18:	ldr	r4, [sp, #20]
   13f1c:	blt	13ebc <ReadUInt8Data+0xad0>
   13f20:	ldr	r0, [sp, #8]
   13f24:	cmp	r9, r0
   13f28:	bge	147ac <ReadUInt8Data+0x13c0>
   13f2c:	sub	r7, r0, r9
   13f30:	ldr	r3, [r4]
   13f34:	add	r4, sp, #24
   13f38:	mov	r0, r4
   13f3c:	ldr	r1, [sp, #16]
   13f40:	mov	r2, r7
   13f44:	bl	18d0 <fread@plt>
   13f48:	add	sl, r0, sl
   13f4c:	cmp	r7, #1
   13f50:	blt	147ac <ReadUInt8Data+0x13c0>
   13f54:	ldr	r0, [sp, #12]
   13f58:	sub	r5, r0, r8
   13f5c:	ldr	r6, [sp, #4]
   13f60:	mov	r0, r4
   13f64:	bl	1cc0 <Mat_doubleSwap>
   13f68:	vcvt.u32.f64	s0, d0
   13f6c:	vmov	r0, s0
   13f70:	strb	r0, [r6, r9]
   13f74:	add	r6, r6, #1
   13f78:	subs	r5, r5, #1
   13f7c:	add	r4, r4, #8
   13f80:	bne	13f60 <ReadUInt8Data+0xb74>
   13f84:	b	147ac <ReadUInt8Data+0x13c0>
   13f88:	str	r5, [sp, #12]
   13f8c:	str	r9, [sp, #16]
   13f90:	str	r6, [sp, #8]
   13f94:	sub	r6, r6, #256	; 0x100
   13f98:	mov	r7, #0
   13f9c:	str	r8, [sp, #4]
   13fa0:	mov	r5, r8
   13fa4:	mov	sl, #0
   13fa8:	mov	r9, r7
   13fac:	ldr	r3, [r4]
   13fb0:	add	r7, sp, #24
   13fb4:	mov	r0, r7
   13fb8:	ldr	r1, [sp, #16]
   13fbc:	mov	r2, #256	; 0x100
   13fc0:	bl	18d0 <fread@plt>
   13fc4:	mov	r8, r0
   13fc8:	mov	r4, #0
   13fcc:	mov	r0, r7
   13fd0:	bl	1bbc <Mat_int64Swap>
   13fd4:	strb	r0, [r5, r4]
   13fd8:	add	r7, r7, #8
   13fdc:	add	r4, r4, #1
   13fe0:	cmp	r4, #256	; 0x100
   13fe4:	bne	13fcc <ReadUInt8Data+0xbe0>
   13fe8:	add	sl, r8, sl
   13fec:	add	r5, r5, #256	; 0x100
   13ff0:	add	r7, r9, #256	; 0x100
   13ff4:	cmp	r7, r6
   13ff8:	ldr	r4, [sp, #20]
   13ffc:	blt	13fa8 <ReadUInt8Data+0xbbc>
   14000:	mov	r5, r6
   14004:	ldr	r6, [sp, #8]
   14008:	cmp	r7, r6
   1400c:	bge	1461c <ReadUInt8Data+0x1230>
   14010:	mov	r0, r4
   14014:	sub	r4, r6, r7
   14018:	ldr	r3, [r0]
   1401c:	add	r8, sp, #24
   14020:	mov	r0, r8
   14024:	ldr	r1, [sp, #16]
   14028:	mov	r2, r4
   1402c:	bl	18d0 <fread@plt>
   14030:	add	sl, r0, sl
   14034:	cmp	r4, #1
   14038:	blt	14610 <ReadUInt8Data+0x1224>
   1403c:	sub	r5, r5, r9
   14040:	ldr	r4, [sp, #4]
   14044:	mov	r0, r8
   14048:	bl	1bbc <Mat_int64Swap>
   1404c:	strb	r0, [r4, r7]
   14050:	add	r4, r4, #1
   14054:	subs	r5, r5, #1
   14058:	add	r8, r8, #8
   1405c:	bne	14044 <ReadUInt8Data+0xc58>
   14060:	b	14610 <ReadUInt8Data+0x1224>
   14064:	mov	r5, r9
   14068:	str	r6, [sp, #8]
   1406c:	sub	r0, r6, #256	; 0x100
   14070:	str	r0, [sp, #16]
   14074:	mov	r7, #0
   14078:	add	r9, sp, #24
   1407c:	mov	r6, r8
   14080:	mov	r4, r8
   14084:	mov	sl, #0
   14088:	mov	r8, r7
   1408c:	ldr	r0, [sp, #20]
   14090:	ldr	r3, [r0]
   14094:	mov	r0, r9
   14098:	mov	r1, r5
   1409c:	mov	r2, #256	; 0x100
   140a0:	bl	18d0 <fread@plt>
   140a4:	mov	r1, r9
   140a8:	mov	r2, #0
   140ac:	ldrb	r3, [r1], #2
   140b0:	strb	r3, [r4, r2]
   140b4:	add	r2, r2, #1
   140b8:	cmp	r2, #256	; 0x100
   140bc:	bne	140ac <ReadUInt8Data+0xcc0>
   140c0:	add	sl, r0, sl
   140c4:	add	r4, r4, #256	; 0x100
   140c8:	add	r7, r8, #256	; 0x100
   140cc:	ldr	r0, [sp, #16]
   140d0:	cmp	r7, r0
   140d4:	blt	14088 <ReadUInt8Data+0xc9c>
   140d8:	ldr	r0, [sp, #8]
   140dc:	cmp	r7, r0
   140e0:	bge	14878 <ReadUInt8Data+0x148c>
   140e4:	sub	r9, r0, r7
   140e8:	ldr	r0, [sp, #20]
   140ec:	ldr	r3, [r0]
   140f0:	add	r4, sp, #24
   140f4:	mov	r0, r4
   140f8:	mov	r1, r5
   140fc:	mov	r2, r9
   14100:	bl	18d0 <fread@plt>
   14104:	add	sl, r0, sl
   14108:	cmp	r9, #1
   1410c:	blt	14878 <ReadUInt8Data+0x148c>
   14110:	ldr	r0, [sp, #16]
   14114:	sub	r0, r0, r8
   14118:	ldrb	r1, [r4], #2
   1411c:	strb	r1, [r6, r7]
   14120:	add	r6, r6, #1
   14124:	subs	r0, r0, #1
   14128:	bne	14118 <ReadUInt8Data+0xd2c>
   1412c:	b	14878 <ReadUInt8Data+0x148c>
   14130:	mov	r5, r9
   14134:	str	r6, [sp, #8]
   14138:	sub	r0, r6, #256	; 0x100
   1413c:	str	r0, [sp, #16]
   14140:	mov	r7, #0
   14144:	add	r9, sp, #24
   14148:	mov	r6, r8
   1414c:	mov	r4, r8
   14150:	mov	sl, #0
   14154:	mov	r8, r7
   14158:	ldr	r0, [sp, #20]
   1415c:	ldr	r3, [r0]
   14160:	mov	r0, r9
   14164:	mov	r1, r5
   14168:	mov	r2, #256	; 0x100
   1416c:	bl	18d0 <fread@plt>
   14170:	mov	r1, r9
   14174:	mov	r2, #0
   14178:	ldrb	r3, [r1], #2
   1417c:	strb	r3, [r4, r2]
   14180:	add	r2, r2, #1
   14184:	cmp	r2, #256	; 0x100
   14188:	bne	14178 <ReadUInt8Data+0xd8c>
   1418c:	add	sl, r0, sl
   14190:	add	r4, r4, #256	; 0x100
   14194:	add	r7, r8, #256	; 0x100
   14198:	ldr	r0, [sp, #16]
   1419c:	cmp	r7, r0
   141a0:	blt	14154 <ReadUInt8Data+0xd68>
   141a4:	ldr	r0, [sp, #8]
   141a8:	cmp	r7, r0
   141ac:	bge	14878 <ReadUInt8Data+0x148c>
   141b0:	sub	r9, r0, r7
   141b4:	ldr	r0, [sp, #20]
   141b8:	ldr	r3, [r0]
   141bc:	add	r4, sp, #24
   141c0:	mov	r0, r4
   141c4:	mov	r1, r5
   141c8:	mov	r2, r9
   141cc:	bl	18d0 <fread@plt>
   141d0:	add	sl, r0, sl
   141d4:	cmp	r9, #1
   141d8:	blt	14878 <ReadUInt8Data+0x148c>
   141dc:	ldr	r0, [sp, #16]
   141e0:	sub	r0, r0, r8
   141e4:	ldrb	r1, [r4], #2
   141e8:	strb	r1, [r6, r7]
   141ec:	add	r6, r6, #1
   141f0:	subs	r0, r0, #1
   141f4:	bne	141e4 <ReadUInt8Data+0xdf8>
   141f8:	b	14878 <ReadUInt8Data+0x148c>
   141fc:	str	r9, [sp, #16]
   14200:	str	r6, [sp, #8]
   14204:	mov	r5, r8
   14208:	sub	r8, r6, #256	; 0x100
   1420c:	mov	r7, #0
   14210:	add	r4, sp, #24
   14214:	mov	r6, r5
   14218:	mov	sl, #0
   1421c:	mov	r9, r7
   14220:	ldr	r0, [sp, #20]
   14224:	ldr	r3, [r0]
   14228:	mov	r0, r4
   1422c:	ldr	r1, [sp, #16]
   14230:	mov	r2, #256	; 0x100
   14234:	bl	18d0 <fread@plt>
   14238:	mov	r1, #0
   1423c:	ldr	r2, [r4, r1, lsl #2]
   14240:	strb	r2, [r5, r1]
   14244:	add	r1, r1, #1
   14248:	cmp	r1, #256	; 0x100
   1424c:	bne	1423c <ReadUInt8Data+0xe50>
   14250:	add	sl, r0, sl
   14254:	add	r5, r5, #256	; 0x100
   14258:	add	r7, r9, #256	; 0x100
   1425c:	cmp	r7, r8
   14260:	blt	1421c <ReadUInt8Data+0xe30>
   14264:	ldr	r0, [sp, #8]
   14268:	cmp	r7, r0
   1426c:	bge	147ac <ReadUInt8Data+0x13c0>
   14270:	sub	r5, r0, r7
   14274:	ldr	r0, [sp, #20]
   14278:	ldr	r3, [r0]
   1427c:	add	r4, sp, #24
   14280:	mov	r0, r4
   14284:	ldr	r1, [sp, #16]
   14288:	mov	r2, r5
   1428c:	bl	18d0 <fread@plt>
   14290:	add	sl, r0, sl
   14294:	cmp	r5, #1
   14298:	blt	147ac <ReadUInt8Data+0x13c0>
   1429c:	sub	r0, r8, r9
   142a0:	ldr	r1, [r4], #4
   142a4:	strb	r1, [r6, r7]
   142a8:	add	r6, r6, #1
   142ac:	subs	r0, r0, #1
   142b0:	bne	142a0 <ReadUInt8Data+0xeb4>
   142b4:	b	147ac <ReadUInt8Data+0x13c0>
   142b8:	str	r9, [sp, #16]
   142bc:	str	r6, [sp, #8]
   142c0:	mov	r5, r8
   142c4:	sub	r8, r6, #256	; 0x100
   142c8:	mov	r7, #0
   142cc:	add	r4, sp, #24
   142d0:	mov	r6, r5
   142d4:	mov	sl, #0
   142d8:	mov	r9, r7
   142dc:	ldr	r0, [sp, #20]
   142e0:	ldr	r3, [r0]
   142e4:	mov	r0, r4
   142e8:	ldr	r1, [sp, #16]
   142ec:	mov	r2, #256	; 0x100
   142f0:	bl	18d0 <fread@plt>
   142f4:	mov	r1, #0
   142f8:	ldr	r2, [r4, r1, lsl #2]
   142fc:	strb	r2, [r5, r1]
   14300:	add	r1, r1, #1
   14304:	cmp	r1, #256	; 0x100
   14308:	bne	142f8 <ReadUInt8Data+0xf0c>
   1430c:	add	sl, r0, sl
   14310:	add	r5, r5, #256	; 0x100
   14314:	add	r7, r9, #256	; 0x100
   14318:	cmp	r7, r8
   1431c:	blt	142d8 <ReadUInt8Data+0xeec>
   14320:	ldr	r0, [sp, #8]
   14324:	cmp	r7, r0
   14328:	bge	147ac <ReadUInt8Data+0x13c0>
   1432c:	sub	r5, r0, r7
   14330:	ldr	r0, [sp, #20]
   14334:	ldr	r3, [r0]
   14338:	add	r4, sp, #24
   1433c:	mov	r0, r4
   14340:	ldr	r1, [sp, #16]
   14344:	mov	r2, r5
   14348:	bl	18d0 <fread@plt>
   1434c:	add	sl, r0, sl
   14350:	cmp	r5, #1
   14354:	blt	147ac <ReadUInt8Data+0x13c0>
   14358:	sub	r0, r8, r9
   1435c:	ldr	r1, [r4], #4
   14360:	strb	r1, [r6, r7]
   14364:	add	r6, r6, #1
   14368:	subs	r0, r0, #1
   1436c:	bne	1435c <ReadUInt8Data+0xf70>
   14370:	b	147ac <ReadUInt8Data+0x13c0>
   14374:	mov	r5, r9
   14378:	str	r6, [sp, #8]
   1437c:	sub	r0, r6, #256	; 0x100
   14380:	str	r0, [sp, #16]
   14384:	mov	r7, #0
   14388:	add	r9, sp, #24
   1438c:	mov	r6, r8
   14390:	mov	r4, r8
   14394:	mov	sl, #0
   14398:	mov	r8, r7
   1439c:	ldr	r0, [sp, #20]
   143a0:	ldr	r3, [r0]
   143a4:	mov	r0, r9
   143a8:	mov	r1, r5
   143ac:	mov	r2, #256	; 0x100
   143b0:	bl	18d0 <fread@plt>
   143b4:	mov	r1, r9
   143b8:	mov	r2, #0
   143bc:	vldr	s0, [r1]
   143c0:	vcvt.u32.f32	s0, s0
   143c4:	vmov	r3, s0
   143c8:	strb	r3, [r4, r2]
   143cc:	add	r1, r1, #4
   143d0:	add	r2, r2, #1
   143d4:	cmp	r2, #256	; 0x100
   143d8:	bne	143bc <ReadUInt8Data+0xfd0>
   143dc:	add	sl, r0, sl
   143e0:	add	r4, r4, #256	; 0x100
   143e4:	add	r7, r8, #256	; 0x100
   143e8:	ldr	r0, [sp, #16]
   143ec:	cmp	r7, r0
   143f0:	blt	14398 <ReadUInt8Data+0xfac>
   143f4:	ldr	r0, [sp, #8]
   143f8:	cmp	r7, r0
   143fc:	bge	14878 <ReadUInt8Data+0x148c>
   14400:	sub	r9, r0, r7
   14404:	ldr	r0, [sp, #20]
   14408:	ldr	r3, [r0]
   1440c:	add	r4, sp, #24
   14410:	mov	r0, r4
   14414:	mov	r1, r5
   14418:	mov	r2, r9
   1441c:	bl	18d0 <fread@plt>
   14420:	add	sl, r0, sl
   14424:	cmp	r9, #1
   14428:	blt	14878 <ReadUInt8Data+0x148c>
   1442c:	ldr	r0, [sp, #16]
   14430:	sub	r0, r0, r8
   14434:	vldr	s0, [r4]
   14438:	vcvt.u32.f32	s0, s0
   1443c:	vmov	r1, s0
   14440:	strb	r1, [r6, r7]
   14444:	add	r6, r6, #1
   14448:	subs	r0, r0, #1
   1444c:	add	r4, r4, #4
   14450:	bne	14434 <ReadUInt8Data+0x1048>
   14454:	b	14878 <ReadUInt8Data+0x148c>
   14458:	mov	r5, r9
   1445c:	str	r6, [sp, #8]
   14460:	sub	r0, r6, #256	; 0x100
   14464:	str	r0, [sp, #16]
   14468:	mov	r7, #0
   1446c:	add	r9, sp, #24
   14470:	mov	r6, r8
   14474:	mov	r4, r8
   14478:	mov	sl, #0
   1447c:	mov	r8, r7
   14480:	ldr	r0, [sp, #20]
   14484:	ldr	r3, [r0]
   14488:	mov	r0, r9
   1448c:	mov	r1, r5
   14490:	mov	r2, #256	; 0x100
   14494:	bl	18d0 <fread@plt>
   14498:	mov	r1, r9
   1449c:	mov	r2, #0
   144a0:	vldr	d16, [r1]
   144a4:	vcvt.u32.f64	s0, d16
   144a8:	vmov	r3, s0
   144ac:	strb	r3, [r4, r2]
   144b0:	add	r1, r1, #8
   144b4:	add	r2, r2, #1
   144b8:	cmp	r2, #256	; 0x100
   144bc:	bne	144a0 <ReadUInt8Data+0x10b4>
   144c0:	add	sl, r0, sl
   144c4:	add	r4, r4, #256	; 0x100
   144c8:	add	r7, r8, #256	; 0x100
   144cc:	ldr	r0, [sp, #16]
   144d0:	cmp	r7, r0
   144d4:	blt	1447c <ReadUInt8Data+0x1090>
   144d8:	ldr	r0, [sp, #8]
   144dc:	cmp	r7, r0
   144e0:	bge	14878 <ReadUInt8Data+0x148c>
   144e4:	sub	r9, r0, r7
   144e8:	ldr	r0, [sp, #20]
   144ec:	ldr	r3, [r0]
   144f0:	add	r4, sp, #24
   144f4:	mov	r0, r4
   144f8:	mov	r1, r5
   144fc:	mov	r2, r9
   14500:	bl	18d0 <fread@plt>
   14504:	add	sl, r0, sl
   14508:	cmp	r9, #1
   1450c:	blt	14878 <ReadUInt8Data+0x148c>
   14510:	ldr	r0, [sp, #16]
   14514:	sub	r0, r0, r8
   14518:	vldr	d16, [r4]
   1451c:	vcvt.u32.f64	s0, d16
   14520:	vmov	r1, s0
   14524:	strb	r1, [r6, r7]
   14528:	add	r6, r6, #1
   1452c:	subs	r0, r0, #1
   14530:	add	r4, r4, #8
   14534:	bne	14518 <ReadUInt8Data+0x112c>
   14538:	b	14878 <ReadUInt8Data+0x148c>
   1453c:	str	r5, [sp, #12]
   14540:	str	r9, [sp, #16]
   14544:	str	r6, [sp, #8]
   14548:	mov	r5, r8
   1454c:	sub	r8, r6, #256	; 0x100
   14550:	mov	r7, #0
   14554:	add	r4, sp, #24
   14558:	str	r5, [sp, #4]
   1455c:	mov	sl, #0
   14560:	mov	r9, r7
   14564:	ldr	r0, [sp, #20]
   14568:	ldr	r3, [r0]
   1456c:	mov	r0, r4
   14570:	ldr	r1, [sp, #16]
   14574:	mov	r2, #256	; 0x100
   14578:	bl	18d0 <fread@plt>
   1457c:	mov	r1, r4
   14580:	mov	r2, #0
   14584:	ldrb	r3, [r1], #8
   14588:	strb	r3, [r5, r2]
   1458c:	add	r2, r2, #1
   14590:	cmp	r2, #256	; 0x100
   14594:	bne	14584 <ReadUInt8Data+0x1198>
   14598:	add	sl, r0, sl
   1459c:	add	r5, r5, #256	; 0x100
   145a0:	add	r7, r9, #256	; 0x100
   145a4:	cmp	r7, r8
   145a8:	blt	14560 <ReadUInt8Data+0x1174>
   145ac:	ldr	r6, [sp, #8]
   145b0:	cmp	r7, r6
   145b4:	bge	14628 <ReadUInt8Data+0x123c>
   145b8:	sub	r5, r6, r7
   145bc:	ldr	r0, [sp, #20]
   145c0:	ldr	r3, [r0]
   145c4:	add	r4, sp, #24
   145c8:	mov	r0, r4
   145cc:	ldr	r1, [sp, #16]
   145d0:	mov	r2, r5
   145d4:	bl	18d0 <fread@plt>
   145d8:	add	sl, r0, sl
   145dc:	cmp	r5, #1
   145e0:	blt	14610 <ReadUInt8Data+0x1224>
   145e4:	sub	r0, r8, r9
   145e8:	ldr	r8, [sp, #4]
   145ec:	mov	r1, r8
   145f0:	ldrb	r2, [r4], #8
   145f4:	strb	r2, [r1, r7]
   145f8:	add	r1, r1, #1
   145fc:	subs	r0, r0, #1
   14600:	bne	145f0 <ReadUInt8Data+0x1204>
   14604:	ldr	r9, [sp, #16]
   14608:	ldr	r6, [sp, #8]
   1460c:	b	14630 <ReadUInt8Data+0x1244>
   14610:	ldr	r9, [sp, #16]
   14614:	ldr	r6, [sp, #8]
   14618:	b	1462c <ReadUInt8Data+0x1240>
   1461c:	ldr	r9, [sp, #16]
   14620:	ldr	r8, [sp, #4]
   14624:	b	14634 <ReadUInt8Data+0x1248>
   14628:	ldr	r9, [sp, #16]
   1462c:	ldr	r8, [sp, #4]
   14630:	ldr	r4, [sp, #20]
   14634:	ldr	r5, [sp, #12]
   14638:	cmp	r5, #13
   1463c:	bne	1487c <ReadUInt8Data+0x1490>
   14640:	ldr	r0, [r4, #20]
   14644:	cmp	r0, #0
   14648:	beq	14694 <ReadUInt8Data+0x12a8>
   1464c:	cmp	r6, #256	; 0x100
   14650:	bgt	146d4 <ReadUInt8Data+0x12e8>
   14654:	ldr	r3, [r4]
   14658:	add	r4, sp, #24
   1465c:	mov	r0, r4
   14660:	mov	r1, r9
   14664:	mov	r2, r6
   14668:	bl	18d0 <fread@plt>
   1466c:	add	sl, r0, sl
   14670:	cmp	r6, #1
   14674:	blt	1487c <ReadUInt8Data+0x1490>
   14678:	mov	r0, r4
   1467c:	bl	1c0c <Mat_uint64Swap>
   14680:	strb	r0, [r8], #1
   14684:	subs	r6, r6, #1
   14688:	add	r4, r4, #8
   1468c:	bne	14678 <ReadUInt8Data+0x128c>
   14690:	b	1487c <ReadUInt8Data+0x1490>
   14694:	cmp	r6, #256	; 0x100
   14698:	bgt	147b4 <ReadUInt8Data+0x13c8>
   1469c:	ldr	r3, [r4]
   146a0:	add	r4, sp, #24
   146a4:	mov	r0, r4
   146a8:	mov	r1, r9
   146ac:	mov	r2, r6
   146b0:	bl	18d0 <fread@plt>
   146b4:	add	sl, r0, sl
   146b8:	cmp	r6, #1
   146bc:	blt	1487c <ReadUInt8Data+0x1490>
   146c0:	ldrb	r0, [r4], #8
   146c4:	strb	r0, [r8], #1
   146c8:	subs	r6, r6, #1
   146cc:	bne	146c0 <ReadUInt8Data+0x12d4>
   146d0:	b	1487c <ReadUInt8Data+0x1490>
   146d4:	str	r9, [sp, #16]
   146d8:	str	r6, [sp, #8]
   146dc:	sub	r0, r6, #256	; 0x100
   146e0:	str	r0, [sp, #12]
   146e4:	mov	r7, #0
   146e8:	add	r6, sp, #24
   146ec:	str	r8, [sp, #4]
   146f0:	mov	r5, r8
   146f4:	mov	r9, r7
   146f8:	ldr	r3, [r4]
   146fc:	mov	r7, r6
   14700:	mov	r0, r6
   14704:	ldr	r1, [sp, #16]
   14708:	mov	r2, #256	; 0x100
   1470c:	bl	18d0 <fread@plt>
   14710:	mov	r8, r0
   14714:	mov	r4, #0
   14718:	mov	r0, r7
   1471c:	bl	1c0c <Mat_uint64Swap>
   14720:	strb	r0, [r5, r4]
   14724:	add	r7, r7, #8
   14728:	add	r4, r4, #1
   1472c:	cmp	r4, #256	; 0x100
   14730:	bne	14718 <ReadUInt8Data+0x132c>
   14734:	add	sl, r8, sl
   14738:	add	r5, r5, #256	; 0x100
   1473c:	add	r7, r9, #256	; 0x100
   14740:	ldr	r0, [sp, #12]
   14744:	cmp	r7, r0
   14748:	ldr	r4, [sp, #20]
   1474c:	blt	146f4 <ReadUInt8Data+0x1308>
   14750:	ldr	r0, [sp, #8]
   14754:	cmp	r7, r0
   14758:	bge	147ac <ReadUInt8Data+0x13c0>
   1475c:	sub	r8, r0, r7
   14760:	ldr	r3, [r4]
   14764:	add	r4, sp, #24
   14768:	mov	r0, r4
   1476c:	ldr	r1, [sp, #16]
   14770:	mov	r2, r8
   14774:	bl	18d0 <fread@plt>
   14778:	add	sl, r0, sl
   1477c:	cmp	r8, #1
   14780:	blt	147ac <ReadUInt8Data+0x13c0>
   14784:	ldr	r0, [sp, #12]
   14788:	sub	r5, r0, r9
   1478c:	ldr	r6, [sp, #4]
   14790:	mov	r0, r4
   14794:	bl	1c0c <Mat_uint64Swap>
   14798:	strb	r0, [r6, r7]
   1479c:	add	r6, r6, #1
   147a0:	subs	r5, r5, #1
   147a4:	add	r4, r4, #8
   147a8:	bne	14790 <ReadUInt8Data+0x13a4>
   147ac:	ldr	r9, [sp, #16]
   147b0:	b	1487c <ReadUInt8Data+0x1490>
   147b4:	mov	r5, r9
   147b8:	str	r6, [sp, #8]
   147bc:	sub	r0, r6, #256	; 0x100
   147c0:	str	r0, [sp, #16]
   147c4:	mov	r7, #0
   147c8:	add	r9, sp, #24
   147cc:	mov	r6, r8
   147d0:	mov	r4, r8
   147d4:	mov	r8, r7
   147d8:	ldr	r0, [sp, #20]
   147dc:	ldr	r3, [r0]
   147e0:	mov	r0, r9
   147e4:	mov	r1, r5
   147e8:	mov	r2, #256	; 0x100
   147ec:	bl	18d0 <fread@plt>
   147f0:	mov	r1, r9
   147f4:	mov	r2, #0
   147f8:	ldrb	r3, [r1], #8
   147fc:	strb	r3, [r4, r2]
   14800:	add	r2, r2, #1
   14804:	cmp	r2, #256	; 0x100
   14808:	bne	147f8 <ReadUInt8Data+0x140c>
   1480c:	add	sl, r0, sl
   14810:	add	r4, r4, #256	; 0x100
   14814:	add	r7, r8, #256	; 0x100
   14818:	ldr	r0, [sp, #16]
   1481c:	cmp	r7, r0
   14820:	blt	147d4 <ReadUInt8Data+0x13e8>
   14824:	ldr	r0, [sp, #8]
   14828:	cmp	r7, r0
   1482c:	bge	14878 <ReadUInt8Data+0x148c>
   14830:	sub	r9, r0, r7
   14834:	ldr	r0, [sp, #20]
   14838:	ldr	r3, [r0]
   1483c:	add	r4, sp, #24
   14840:	mov	r0, r4
   14844:	mov	r1, r5
   14848:	mov	r2, r9
   1484c:	bl	18d0 <fread@plt>
   14850:	add	sl, r0, sl
   14854:	cmp	r9, #1
   14858:	blt	14878 <ReadUInt8Data+0x148c>
   1485c:	ldr	r0, [sp, #16]
   14860:	sub	r0, r0, r8
   14864:	ldrb	r1, [r4], #8
   14868:	strb	r1, [r6, r7]
   1486c:	add	r6, r6, #1
   14870:	subs	r0, r0, #1
   14874:	bne	14864 <ReadUInt8Data+0x1478>
   14878:	mov	r9, r5
   1487c:	mul	r0, sl, r9
   14880:	sub	sp, fp, #28
   14884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014888 <ReadCompressedUInt8Data>:
   14888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1488c:	add	fp, sp, #28
   14890:	sub	sp, sp, #20
   14894:	mov	r7, r0
   14898:	mov	r0, #0
   1489c:	cmp	r1, #0
   148a0:	beq	148b4 <ReadCompressedUInt8Data+0x2c>
   148a4:	cmp	r7, #0
   148a8:	movne	r5, r2
   148ac:	cmpne	r2, #0
   148b0:	bne	148bc <ReadCompressedUInt8Data+0x34>
   148b4:	sub	sp, fp, #28
   148b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148bc:	mov	r4, r3
   148c0:	mov	r8, r1
   148c4:	ldr	sl, [fp, #8]
   148c8:	mov	r0, r3
   148cc:	bl	193c <Mat_SizeOf@plt>
   148d0:	mov	r6, r0
   148d4:	sub	r0, r4, #1
   148d8:	cmp	r0, #12
   148dc:	bhi	14dcc <ReadCompressedUInt8Data+0x544>
   148e0:	add	r1, pc, #4
   148e4:	ldr	r0, [r1, r0, lsl #2]
   148e8:	add	pc, r1, r0
   148ec:	.word	0x00000034
   148f0:	.word	0x0000006c
   148f4:	.word	0x000000a4
   148f8:	.word	0x000000ec
   148fc:	.word	0x00000134
   14900:	.word	0x0000017c
   14904:	.word	0x000001c4
   14908:	.word	0x000004e0
   1490c:	.word	0x00000214
   14910:	.word	0x000004e0
   14914:	.word	0x000004e0
   14918:	.word	0x00000264
   1491c:	.word	0x00000464
   14920:	cmp	sl, #1
   14924:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14928:	add	r9, sp, #8
   1492c:	mov	r4, sl
   14930:	mov	r0, r7
   14934:	mov	r1, r8
   14938:	mov	r2, r9
   1493c:	mov	r3, r6
   14940:	bl	31e4 <InflateData>
   14944:	ldrb	r0, [sp, #8]
   14948:	strb	r0, [r5], #1
   1494c:	subs	r4, r4, #1
   14950:	bne	14930 <ReadCompressedUInt8Data+0xa8>
   14954:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14958:	cmp	sl, #1
   1495c:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14960:	add	r9, sp, #8
   14964:	mov	r4, sl
   14968:	mov	r0, r7
   1496c:	mov	r1, r8
   14970:	mov	r2, r9
   14974:	mov	r3, r6
   14978:	bl	31e4 <InflateData>
   1497c:	ldrb	r0, [sp, #8]
   14980:	strb	r0, [r5], #1
   14984:	subs	r4, r4, #1
   14988:	bne	14968 <ReadCompressedUInt8Data+0xe0>
   1498c:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14990:	ldr	r0, [r7, #20]
   14994:	cmp	r0, #0
   14998:	beq	14ba0 <ReadCompressedUInt8Data+0x318>
   1499c:	cmp	sl, #1
   149a0:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   149a4:	add	r9, sp, #8
   149a8:	mov	r4, sl
   149ac:	mov	r0, r7
   149b0:	mov	r1, r8
   149b4:	mov	r2, r9
   149b8:	mov	r3, r6
   149bc:	bl	31e4 <InflateData>
   149c0:	mov	r0, r9
   149c4:	bl	1c50 <Mat_int16Swap>
   149c8:	strb	r0, [r5], #1
   149cc:	subs	r4, r4, #1
   149d0:	bne	149ac <ReadCompressedUInt8Data+0x124>
   149d4:	b	14dcc <ReadCompressedUInt8Data+0x544>
   149d8:	ldr	r0, [r7, #20]
   149dc:	cmp	r0, #0
   149e0:	beq	14bd8 <ReadCompressedUInt8Data+0x350>
   149e4:	cmp	sl, #1
   149e8:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   149ec:	add	r9, sp, #8
   149f0:	mov	r4, sl
   149f4:	mov	r0, r7
   149f8:	mov	r1, r8
   149fc:	mov	r2, r9
   14a00:	mov	r3, r6
   14a04:	bl	31e4 <InflateData>
   14a08:	mov	r0, r9
   14a0c:	bl	1c64 <Mat_uint16Swap>
   14a10:	strb	r0, [r5], #1
   14a14:	subs	r4, r4, #1
   14a18:	bne	149f4 <ReadCompressedUInt8Data+0x16c>
   14a1c:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14a20:	ldr	r0, [r7, #20]
   14a24:	cmp	r0, #0
   14a28:	beq	14c10 <ReadCompressedUInt8Data+0x388>
   14a2c:	cmp	sl, #1
   14a30:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14a34:	add	r9, sp, #8
   14a38:	mov	r4, sl
   14a3c:	mov	r0, r7
   14a40:	mov	r1, r8
   14a44:	mov	r2, r9
   14a48:	mov	r3, r6
   14a4c:	bl	31e4 <InflateData>
   14a50:	mov	r0, r9
   14a54:	bl	1c28 <Mat_int32Swap>
   14a58:	strb	r0, [r5], #1
   14a5c:	subs	r4, r4, #1
   14a60:	bne	14a3c <ReadCompressedUInt8Data+0x1b4>
   14a64:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14a68:	ldr	r0, [r7, #20]
   14a6c:	cmp	r0, #0
   14a70:	beq	14c48 <ReadCompressedUInt8Data+0x3c0>
   14a74:	cmp	sl, #1
   14a78:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14a7c:	add	r9, sp, #8
   14a80:	mov	r4, sl
   14a84:	mov	r0, r7
   14a88:	mov	r1, r8
   14a8c:	mov	r2, r9
   14a90:	mov	r3, r6
   14a94:	bl	31e4 <InflateData>
   14a98:	mov	r0, r9
   14a9c:	bl	1c3c <Mat_uint32Swap>
   14aa0:	strb	r0, [r5], #1
   14aa4:	subs	r4, r4, #1
   14aa8:	bne	14a84 <ReadCompressedUInt8Data+0x1fc>
   14aac:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14ab0:	ldr	r0, [r7, #20]
   14ab4:	cmp	r0, #0
   14ab8:	beq	14c80 <ReadCompressedUInt8Data+0x3f8>
   14abc:	cmp	sl, #1
   14ac0:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14ac4:	add	r9, sp, #8
   14ac8:	mov	r4, sl
   14acc:	mov	r0, r7
   14ad0:	mov	r1, r8
   14ad4:	mov	r2, r9
   14ad8:	mov	r3, r6
   14adc:	bl	31e4 <InflateData>
   14ae0:	mov	r0, r9
   14ae4:	bl	1c7c <Mat_floatSwap>
   14ae8:	vcvt.u32.f32	s0, s0
   14aec:	vmov	r0, s0
   14af0:	strb	r0, [r5], #1
   14af4:	subs	r4, r4, #1
   14af8:	bne	14acc <ReadCompressedUInt8Data+0x244>
   14afc:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14b00:	ldr	r0, [r7, #20]
   14b04:	cmp	r0, #0
   14b08:	beq	14cc0 <ReadCompressedUInt8Data+0x438>
   14b0c:	cmp	sl, #1
   14b10:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14b14:	add	r9, sp, #8
   14b18:	mov	r4, sl
   14b1c:	mov	r0, r7
   14b20:	mov	r1, r8
   14b24:	mov	r2, r9
   14b28:	mov	r3, r6
   14b2c:	bl	31e4 <InflateData>
   14b30:	mov	r0, r9
   14b34:	bl	1cc0 <Mat_doubleSwap>
   14b38:	vcvt.u32.f64	s0, d0
   14b3c:	vmov	r0, s0
   14b40:	strb	r0, [r5], #1
   14b44:	subs	r4, r4, #1
   14b48:	bne	14b1c <ReadCompressedUInt8Data+0x294>
   14b4c:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14b50:	ldr	r0, [r7, #20]
   14b54:	cmp	r0, #0
   14b58:	beq	14d00 <ReadCompressedUInt8Data+0x478>
   14b5c:	cmp	sl, #1
   14b60:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14b64:	str	r4, [sp]
   14b68:	add	r4, sp, #8
   14b6c:	mov	r9, r5
   14b70:	str	r6, [sp, #4]
   14b74:	mov	r0, r7
   14b78:	mov	r1, r8
   14b7c:	mov	r2, r4
   14b80:	ldr	r3, [sp, #4]
   14b84:	bl	31e4 <InflateData>
   14b88:	mov	r0, r4
   14b8c:	bl	1bbc <Mat_int64Swap>
   14b90:	strb	r0, [r9], #1
   14b94:	subs	sl, sl, #1
   14b98:	bne	14b74 <ReadCompressedUInt8Data+0x2ec>
   14b9c:	b	14d3c <ReadCompressedUInt8Data+0x4b4>
   14ba0:	cmp	sl, #1
   14ba4:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14ba8:	add	r9, sp, #8
   14bac:	mov	r4, sl
   14bb0:	mov	r0, r7
   14bb4:	mov	r1, r8
   14bb8:	mov	r2, r9
   14bbc:	mov	r3, r6
   14bc0:	bl	31e4 <InflateData>
   14bc4:	ldrb	r0, [sp, #8]
   14bc8:	strb	r0, [r5], #1
   14bcc:	subs	r4, r4, #1
   14bd0:	bne	14bb0 <ReadCompressedUInt8Data+0x328>
   14bd4:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14bd8:	cmp	sl, #1
   14bdc:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14be0:	add	r9, sp, #8
   14be4:	mov	r4, sl
   14be8:	mov	r0, r7
   14bec:	mov	r1, r8
   14bf0:	mov	r2, r9
   14bf4:	mov	r3, r6
   14bf8:	bl	31e4 <InflateData>
   14bfc:	ldrb	r0, [sp, #8]
   14c00:	strb	r0, [r5], #1
   14c04:	subs	r4, r4, #1
   14c08:	bne	14be8 <ReadCompressedUInt8Data+0x360>
   14c0c:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14c10:	cmp	sl, #1
   14c14:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14c18:	add	r9, sp, #8
   14c1c:	mov	r4, sl
   14c20:	mov	r0, r7
   14c24:	mov	r1, r8
   14c28:	mov	r2, r9
   14c2c:	mov	r3, r6
   14c30:	bl	31e4 <InflateData>
   14c34:	ldr	r0, [sp, #8]
   14c38:	strb	r0, [r5], #1
   14c3c:	subs	r4, r4, #1
   14c40:	bne	14c20 <ReadCompressedUInt8Data+0x398>
   14c44:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14c48:	cmp	sl, #1
   14c4c:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14c50:	add	r9, sp, #8
   14c54:	mov	r4, sl
   14c58:	mov	r0, r7
   14c5c:	mov	r1, r8
   14c60:	mov	r2, r9
   14c64:	mov	r3, r6
   14c68:	bl	31e4 <InflateData>
   14c6c:	ldr	r0, [sp, #8]
   14c70:	strb	r0, [r5], #1
   14c74:	subs	r4, r4, #1
   14c78:	bne	14c58 <ReadCompressedUInt8Data+0x3d0>
   14c7c:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14c80:	cmp	sl, #1
   14c84:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14c88:	add	r9, sp, #8
   14c8c:	mov	r4, sl
   14c90:	mov	r0, r7
   14c94:	mov	r1, r8
   14c98:	mov	r2, r9
   14c9c:	mov	r3, r6
   14ca0:	bl	31e4 <InflateData>
   14ca4:	vldr	s0, [sp, #8]
   14ca8:	vcvt.u32.f32	s0, s0
   14cac:	vmov	r0, s0
   14cb0:	strb	r0, [r5], #1
   14cb4:	subs	r4, r4, #1
   14cb8:	bne	14c90 <ReadCompressedUInt8Data+0x408>
   14cbc:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14cc0:	cmp	sl, #1
   14cc4:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14cc8:	add	r9, sp, #8
   14ccc:	mov	r4, sl
   14cd0:	mov	r0, r7
   14cd4:	mov	r1, r8
   14cd8:	mov	r2, r9
   14cdc:	mov	r3, r6
   14ce0:	bl	31e4 <InflateData>
   14ce4:	vldr	d16, [sp, #8]
   14ce8:	vcvt.u32.f64	s0, d16
   14cec:	vmov	r0, s0
   14cf0:	strb	r0, [r5], #1
   14cf4:	subs	r4, r4, #1
   14cf8:	bne	14cd0 <ReadCompressedUInt8Data+0x448>
   14cfc:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14d00:	cmp	sl, #1
   14d04:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14d08:	str	r4, [sp]
   14d0c:	add	r9, sp, #8
   14d10:	str	r6, [sp, #4]
   14d14:	mov	r6, r5
   14d18:	mov	r0, r7
   14d1c:	mov	r1, r8
   14d20:	mov	r2, r9
   14d24:	ldr	r3, [sp, #4]
   14d28:	bl	31e4 <InflateData>
   14d2c:	ldrb	r0, [sp, #8]
   14d30:	strb	r0, [r6], #1
   14d34:	subs	sl, sl, #1
   14d38:	bne	14d18 <ReadCompressedUInt8Data+0x490>
   14d3c:	ldr	r0, [sp]
   14d40:	cmp	r0, #13
   14d44:	ldr	sl, [fp, #8]
   14d48:	ldr	r6, [sp, #4]
   14d4c:	bne	14dcc <ReadCompressedUInt8Data+0x544>
   14d50:	ldr	r0, [r7, #20]
   14d54:	cmp	r0, #0
   14d58:	beq	14d98 <ReadCompressedUInt8Data+0x510>
   14d5c:	cmp	sl, #1
   14d60:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14d64:	add	r9, sp, #8
   14d68:	mov	r4, sl
   14d6c:	mov	r0, r7
   14d70:	mov	r1, r8
   14d74:	mov	r2, r9
   14d78:	mov	r3, r6
   14d7c:	bl	31e4 <InflateData>
   14d80:	mov	r0, r9
   14d84:	bl	1c0c <Mat_uint64Swap>
   14d88:	strb	r0, [r5], #1
   14d8c:	subs	r4, r4, #1
   14d90:	bne	14d6c <ReadCompressedUInt8Data+0x4e4>
   14d94:	b	14dcc <ReadCompressedUInt8Data+0x544>
   14d98:	cmp	sl, #1
   14d9c:	blt	14dcc <ReadCompressedUInt8Data+0x544>
   14da0:	add	r9, sp, #8
   14da4:	mov	r4, sl
   14da8:	mov	r0, r7
   14dac:	mov	r1, r8
   14db0:	mov	r2, r9
   14db4:	mov	r3, r6
   14db8:	bl	31e4 <InflateData>
   14dbc:	ldrb	r0, [sp, #8]
   14dc0:	strb	r0, [r5], #1
   14dc4:	subs	r4, r4, #1
   14dc8:	bne	14da8 <ReadCompressedUInt8Data+0x520>
   14dcc:	mul	r0, r6, sl
   14dd0:	sub	sp, fp, #28
   14dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014dd8 <ReadCompressedCharData>:
   14dd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ddc:	add	fp, sp, #24
   14de0:	mov	r6, r0
   14de4:	mov	r0, #0
   14de8:	cmp	r6, #0
   14dec:	movne	r4, r2
   14df0:	cmpne	r2, #0
   14df4:	bne	14dfc <ReadCompressedCharData+0x24>
   14df8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14dfc:	mov	r7, r1
   14e00:	ldr	r1, [r6]
   14e04:	cmp	r1, #0
   14e08:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e0c:	mov	r5, r3
   14e10:	ldr	r9, [fp, #8]
   14e14:	mov	r0, r3
   14e18:	bl	193c <Mat_SizeOf@plt>
   14e1c:	mov	r8, r0
   14e20:	sub	r0, r5, #2
   14e24:	cmp	r0, #15
   14e28:	bhi	14edc <ReadCompressedCharData+0x104>
   14e2c:	add	r1, pc, #4
   14e30:	ldr	r0, [r1, r0, lsl #2]
   14e34:	add	pc, r1, r0
   14e38:	.word	0x00000040
   14e3c:	.word	0x000000a4
   14e40:	.word	0x0000005c
   14e44:	.word	0x000000a4
   14e48:	.word	0x000000a4
   14e4c:	.word	0x000000a4
   14e50:	.word	0x000000a4
   14e54:	.word	0x000000a4
   14e58:	.word	0x000000a4
   14e5c:	.word	0x000000a4
   14e60:	.word	0x000000a4
   14e64:	.word	0x000000a4
   14e68:	.word	0x000000a4
   14e6c:	.word	0x000000a4
   14e70:	.word	0x00000040
   14e74:	.word	0x0000005c
   14e78:	mul	r3, r8, r9
   14e7c:	mov	r0, r6
   14e80:	mov	r1, r7
   14e84:	mov	r2, r4
   14e88:	bl	31e4 <InflateData>
   14e8c:	mul	r0, r8, r9
   14e90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e94:	mul	r3, r8, r9
   14e98:	mov	r0, r6
   14e9c:	mov	r1, r7
   14ea0:	mov	r2, r4
   14ea4:	bl	31e4 <InflateData>
   14ea8:	ldr	r0, [r6, #20]
   14eac:	cmp	r0, #0
   14eb0:	beq	14ed4 <ReadCompressedCharData+0xfc>
   14eb4:	cmp	r9, #1
   14eb8:	blt	14ed4 <ReadCompressedCharData+0xfc>
   14ebc:	mov	r5, r9
   14ec0:	mov	r0, r4
   14ec4:	bl	1c64 <Mat_uint16Swap>
   14ec8:	add	r4, r4, #2
   14ecc:	subs	r5, r5, #1
   14ed0:	bne	14ec0 <ReadCompressedCharData+0xe8>
   14ed4:	mul	r0, r8, r9
   14ed8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14edc:	ldr	r0, [pc, #16]	; 14ef4 <ReadCompressedCharData+0x11c>
   14ee0:	add	r0, pc, r0
   14ee4:	mov	r1, r5
   14ee8:	bl	1828 <Mat_Warning@plt>
   14eec:	mul	r0, r8, r9
   14ef0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ef4:	.word	0x0003432c

00014ef8 <ReadCharData>:
   14ef8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14efc:	add	fp, sp, #24
   14f00:	sub	sp, sp, #8
   14f04:	mov	r4, #0
   14f08:	cmp	r0, #0
   14f0c:	movne	r6, r1
   14f10:	cmpne	r1, #0
   14f14:	bne	14f24 <ReadCharData+0x2c>
   14f18:	mov	r0, r4
   14f1c:	sub	sp, fp, #24
   14f20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14f24:	mov	r7, r0
   14f28:	ldr	r0, [r0]
   14f2c:	cmp	r0, #0
   14f30:	beq	14f18 <ReadCharData+0x20>
   14f34:	mov	r5, r3
   14f38:	mov	r9, r2
   14f3c:	mov	r0, r2
   14f40:	bl	193c <Mat_SizeOf@plt>
   14f44:	mov	r8, r0
   14f48:	sub	r0, r9, #2
   14f4c:	cmp	r0, #15
   14f50:	bhi	15008 <ReadCharData+0x110>
   14f54:	add	r1, pc, #4
   14f58:	ldr	r0, [r1, r0, lsl #2]
   14f5c:	add	pc, r1, r0
   14f60:	.word	0x00000040
   14f64:	.word	0x000000a8
   14f68:	.word	0x0000005c
   14f6c:	.word	0x000000a8
   14f70:	.word	0x000000a8
   14f74:	.word	0x000000a8
   14f78:	.word	0x000000a8
   14f7c:	.word	0x000000a8
   14f80:	.word	0x000000a8
   14f84:	.word	0x000000a8
   14f88:	.word	0x000000a8
   14f8c:	.word	0x000000a8
   14f90:	.word	0x000000a8
   14f94:	.word	0x000000a8
   14f98:	.word	0x00000040
   14f9c:	.word	0x0000005c
   14fa0:	ldr	r3, [r7]
   14fa4:	mov	r0, r6
   14fa8:	mov	r1, r8
   14fac:	mov	r2, r5
   14fb0:	sub	sp, fp, #24
   14fb4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   14fb8:	b	18d0 <fread@plt>
   14fbc:	ldr	r0, [r7, #20]
   14fc0:	mov	r4, #0
   14fc4:	cmp	r0, #0
   14fc8:	beq	1501c <ReadCharData+0x124>
   14fcc:	cmp	r5, #1
   14fd0:	blt	14f18 <ReadCharData+0x20>
   14fd4:	add	r9, sp, #6
   14fd8:	ldr	r3, [r7]
   14fdc:	mov	r0, r9
   14fe0:	mov	r1, r8
   14fe4:	mov	r2, #1
   14fe8:	bl	18d0 <fread@plt>
   14fec:	add	r4, r0, r4
   14ff0:	mov	r0, r9
   14ff4:	bl	1c64 <Mat_uint16Swap>
   14ff8:	strb	r0, [r6], #1
   14ffc:	subs	r5, r5, #1
   15000:	bne	14fd8 <ReadCharData+0xe0>
   15004:	b	14f18 <ReadCharData+0x20>
   15008:	ldr	r0, [pc, #68]	; 15054 <ReadCharData+0x15c>
   1500c:	add	r0, pc, r0
   15010:	mov	r1, r9
   15014:	bl	1828 <Mat_Warning@plt>
   15018:	b	14f18 <ReadCharData+0x20>
   1501c:	cmp	r5, #1
   15020:	blt	14f18 <ReadCharData+0x20>
   15024:	add	r9, sp, #6
   15028:	ldr	r3, [r7]
   1502c:	mov	r0, r9
   15030:	mov	r1, r8
   15034:	mov	r2, #1
   15038:	bl	18d0 <fread@plt>
   1503c:	add	r4, r0, r4
   15040:	ldrb	r0, [sp, #6]
   15044:	strb	r0, [r6], #1
   15048:	subs	r5, r5, #1
   1504c:	bne	15028 <ReadCharData+0x130>
   15050:	b	14f18 <ReadCharData+0x20>
   15054:	.word	0x0003424b

00015058 <ReadDataSlabN>:
   15058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1505c:	add	fp, sp, #28
   15060:	sub	sp, sp, #164	; 0xa4
   15064:	mov	r5, r2
   15068:	mov	r4, r0
   1506c:	vmov.i32	q8, #0	; 0x00000000
   15070:	mov	r0, #36	; 0x24
   15074:	sub	r7, fp, #72	; 0x48
   15078:	mov	r6, r7
   1507c:	vst1.64	{d16-d17}, [r6], r0
   15080:	mov	r2, #0
   15084:	str	r2, [r6]
   15088:	add	r7, r7, #16
   1508c:	vst1.64	{d16-d17}, [r7]
   15090:	str	r2, [fp, #-40]	; 0xffffffd8
   15094:	add	r7, sp, #80	; 0x50
   15098:	add	r6, r7, #16
   1509c:	vst1.64	{d16-d17}, [r6]
   150a0:	vst1.64	{d16-d17}, [r7], r0
   150a4:	str	r2, [r7]
   150a8:	str	r2, [sp, #112]	; 0x70
   150ac:	add	r7, sp, #40	; 0x28
   150b0:	add	r6, r7, #16
   150b4:	vst1.64	{d16-d17}, [r6]
   150b8:	vst1.64	{d16-d17}, [r7], r0
   150bc:	str	r2, [r7]
   150c0:	str	r2, [sp, #72]	; 0x48
   150c4:	mvn	r0, #0
   150c8:	cmp	r4, #0
   150cc:	cmpne	r1, #0
   150d0:	bne	150dc <ReadDataSlabN+0x84>
   150d4:	sub	sp, fp, #28
   150d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150dc:	ldr	r2, [fp, #8]
   150e0:	cmp	r2, #10
   150e4:	bgt	150d4 <ReadDataSlabN+0x7c>
   150e8:	ldr	r2, [fp, #24]
   150ec:	cmp	r2, #0
   150f0:	ldrne	r2, [fp, #20]
   150f4:	cmpne	r2, #0
   150f8:	beq	150d4 <ReadDataSlabN+0x7c>
   150fc:	ldr	r2, [fp, #16]
   15100:	cmp	r2, #0
   15104:	addne	r2, sp, #24
   15108:	stmne	r2, {r1, r3, r4}
   1510c:	ldrne	r1, [r4]
   15110:	cmpne	r1, #0
   15114:	beq	150d4 <ReadDataSlabN+0x7c>
   15118:	ldr	r0, [sp, #28]
   1511c:	bl	193c <Mat_SizeOf@plt>
   15120:	mov	r6, r0
   15124:	sub	r0, r5, #6
   15128:	cmp	r0, #9
   1512c:	bhi	18864 <ReadDataSlabN+0x380c>
   15130:	ldr	r9, [fp, #12]
   15134:	add	r1, pc, #12
   15138:	ldr	r0, [r1, r0, lsl #2]
   1513c:	add	lr, sp, #40	; 0x28
   15140:	str	r6, [sp, #36]	; 0x24
   15144:	add	pc, r1, r0
   15148:	.word	0x00000028
   1514c:	.word	0x00000318
   15150:	.word	0x000003e8
   15154:	.word	0x000004b8
   15158:	.word	0x00000588
   1515c:	.word	0x00000658
   15160:	.word	0x00000728
   15164:	.word	0x000007f8
   15168:	.word	0x000008c8
   1516c:	.word	0x00000994
   15170:	ldr	r7, [fp, #20]
   15174:	ldr	r0, [r7]
   15178:	sub	r0, r0, #1
   1517c:	str	r0, [fp, #-72]	; 0xffffffb8
   15180:	ldr	r0, [r9]
   15184:	str	r0, [sp, #40]	; 0x28
   15188:	ldr	r5, [fp, #24]
   1518c:	ldr	r0, [r5]
   15190:	str	r0, [sp, #16]
   15194:	mov	r8, #0
   15198:	ldr	r0, [fp, #8]
   1519c:	cmp	r0, #2
   151a0:	ldr	sl, [sp, #32]
   151a4:	blt	1523c <ReadDataSlabN+0x1e4>
   151a8:	mov	r8, #0
   151ac:	mov	r0, #1
   151b0:	mov	r4, r9
   151b4:	sub	r3, fp, #72	; 0x48
   151b8:	ldr	r2, [r7, r0, lsl #2]
   151bc:	sub	r2, r2, #1
   151c0:	str	r2, [r3, r0, lsl #2]
   151c4:	sub	ip, r0, #1
   151c8:	ldr	r7, [r9, ip, lsl #2]
   151cc:	str	r7, [lr, r0, lsl #2]
   151d0:	mov	r5, #0
   151d4:	mov	r1, r4
   151d8:	ldr	r3, [r1, -r5, lsl #2]!
   151dc:	mul	r2, r2, r3
   151e0:	ldr	r1, [r1, #4]
   151e4:	mul	r7, r1, r7
   151e8:	add	r5, r5, #1
   151ec:	cmp	r0, r5
   151f0:	bne	151d4 <ReadDataSlabN+0x17c>
   151f4:	str	r7, [lr, r0, lsl #2]
   151f8:	sub	r3, fp, #72	; 0x48
   151fc:	str	r2, [r3, r0, lsl #2]
   15200:	ldr	r1, [lr, ip, lsl #2]
   15204:	ldr	r2, [fp, #16]
   15208:	ldr	r2, [r2, r0, lsl #2]
   1520c:	mla	r8, r2, r1, r8
   15210:	ldr	r5, [fp, #24]
   15214:	ldr	r1, [r5, r0, lsl #2]
   15218:	ldr	r2, [sp, #16]
   1521c:	mul	r2, r1, r2
   15220:	str	r2, [sp, #16]
   15224:	add	r4, r4, #4
   15228:	add	r0, r0, #1
   1522c:	ldr	r1, [fp, #8]
   15230:	cmp	r0, r1
   15234:	ldr	r7, [fp, #20]
   15238:	bne	151b8 <ReadDataSlabN+0x160>
   1523c:	mul	r1, r8, r6
   15240:	ldr	r0, [sl]
   15244:	mov	r2, #1
   15248:	bl	1a68 <fseek@plt>
   1524c:	ldr	r0, [r7]
   15250:	cmp	r0, #1
   15254:	bne	15bac <ReadDataSlabN+0xb54>
   15258:	ldr	r0, [sp, #16]
   1525c:	cmp	r0, #1
   15260:	sub	r1, fp, #72	; 0x48
   15264:	blt	18864 <ReadDataSlabN+0x380c>
   15268:	ldr	r0, [fp, #16]
   1526c:	add	r4, r0, #4
   15270:	add	r0, r5, #4
   15274:	str	r0, [sp, #20]
   15278:	add	r0, sp, #80	; 0x50
   1527c:	orr	r7, r0, #4
   15280:	orr	r0, r1, #4
   15284:	str	r0, [sp, #4]
   15288:	mov	r5, #0
   1528c:	str	r4, [sp, #12]
   15290:	ldr	r4, [fp, #16]
   15294:	ldr	r0, [r4]
   15298:	cmp	r0, #0
   1529c:	beq	152c8 <ReadDataSlabN+0x270>
   152a0:	ldr	r6, [sp, #36]	; 0x24
   152a4:	mul	r1, r0, r6
   152a8:	ldr	sl, [sp, #32]
   152ac:	ldr	r0, [sl]
   152b0:	mov	r2, #1
   152b4:	bl	1a68 <fseek@plt>
   152b8:	ldr	r0, [r4]
   152bc:	add	r8, r0, r8
   152c0:	ldr	r0, [sp, #24]
   152c4:	b	152d4 <ReadDataSlabN+0x27c>
   152c8:	ldr	r0, [sp, #24]
   152cc:	ldr	r6, [sp, #36]	; 0x24
   152d0:	ldr	sl, [sp, #32]
   152d4:	str	r5, [sp, #8]
   152d8:	add	r1, r0, r5, lsl #3
   152dc:	ldr	r0, [fp, #24]
   152e0:	mov	r9, r0
   152e4:	ldr	r3, [r0]
   152e8:	mov	r0, sl
   152ec:	ldr	r2, [sp, #28]
   152f0:	bl	3778 <ReadDoubleData>
   152f4:	ldr	r5, [r4]
   152f8:	ldr	r0, [fp, #12]
   152fc:	ldr	r4, [r0]
   15300:	sub	r0, r4, r5
   15304:	ldr	r1, [r9]
   15308:	sub	r0, r0, r1
   1530c:	mul	r1, r0, r6
   15310:	ldr	r0, [sl]
   15314:	mov	r2, #1
   15318:	bl	1a68 <fseek@plt>
   1531c:	add	r0, r4, r8
   15320:	sub	r8, r0, r5
   15324:	ldr	r0, [fp, #8]
   15328:	cmp	r0, #2
   1532c:	blt	1543c <ReadDataSlabN+0x3e4>
   15330:	mov	r0, #0
   15334:	add	r3, sp, #40	; 0x28
   15338:	ldr	r4, [sp, #12]
   1533c:	mov	r5, r0
   15340:	ldr	r0, [r7, r0, lsl #2]
   15344:	add	r0, r0, #1
   15348:	str	r0, [r7, r5, lsl #2]
   1534c:	ldr	r1, [sp, #20]
   15350:	ldr	r1, [r1, r5, lsl #2]
   15354:	sdiv	r2, r0, r1
   15358:	mls	r0, r2, r1, r0
   1535c:	cmp	r0, #0
   15360:	bne	15420 <ReadDataSlabN+0x3c8>
   15364:	mov	r0, #0
   15368:	str	r0, [r7, r5, lsl #2]
   1536c:	add	r9, r3, r5, lsl #2
   15370:	ldr	r0, [r9, #4]
   15374:	sdiv	r1, r8, r0
   15378:	mls	r1, r1, r0, r8
   1537c:	cmp	r1, #0
   15380:	beq	153d0 <ReadDataSlabN+0x378>
   15384:	ldr	r2, [r3, r5, lsl #2]
   15388:	ldr	r3, [r4, r5, lsl #2]
   1538c:	sub	r0, r0, r1
   15390:	mla	r0, r3, r2, r0
   15394:	mul	r1, r0, r6
   15398:	ldr	r0, [sl]
   1539c:	mov	r2, #1
   153a0:	bl	1a68 <fseek@plt>
   153a4:	add	r3, sp, #40	; 0x28
   153a8:	ldr	r0, [r9, #4]
   153ac:	add	r1, r0, r8
   153b0:	sdiv	r2, r8, r0
   153b4:	mul	r0, r2, r0
   153b8:	sub	r0, r0, r8
   153bc:	add	r0, r1, r0
   153c0:	ldr	r1, [r3, r5, lsl #2]
   153c4:	ldr	r2, [r4, r5, lsl #2]
   153c8:	mla	r8, r2, r1, r0
   153cc:	b	15408 <ReadDataSlabN+0x3b0>
   153d0:	ldr	r0, [r4, r5, lsl #2]
   153d4:	cmp	r0, #0
   153d8:	beq	15408 <ReadDataSlabN+0x3b0>
   153dc:	ldr	r4, [r3, r5, lsl #2]
   153e0:	mul	r0, r0, r6
   153e4:	mul	r1, r0, r4
   153e8:	ldr	r0, [sl]
   153ec:	mov	r2, #1
   153f0:	bl	1a68 <fseek@plt>
   153f4:	add	r3, sp, #40	; 0x28
   153f8:	ldr	r0, [sp, #12]
   153fc:	ldr	r0, [r0, r5, lsl #2]
   15400:	mla	r8, r0, r4, r8
   15404:	ldr	r4, [sp, #12]
   15408:	add	r0, r5, #1
   1540c:	add	r1, r5, #2
   15410:	ldr	r2, [fp, #8]
   15414:	cmp	r1, r2
   15418:	blt	1533c <ReadDataSlabN+0x2e4>
   1541c:	b	1543c <ReadDataSlabN+0x3e4>
   15420:	ldr	r0, [sp, #4]
   15424:	ldr	r4, [r0, r5, lsl #2]
   15428:	mul	r1, r4, r6
   1542c:	ldr	r0, [sl]
   15430:	mov	r2, #1
   15434:	bl	1a68 <fseek@plt>
   15438:	add	r8, r4, r8
   1543c:	ldr	r0, [fp, #24]
   15440:	ldr	r0, [r0]
   15444:	ldr	r5, [sp, #8]
   15448:	add	r5, r0, r5
   1544c:	mov	r0, #0
   15450:	ldr	r1, [sp, #16]
   15454:	cmp	r5, r1
   15458:	blt	15290 <ReadDataSlabN+0x238>
   1545c:	b	150d4 <ReadDataSlabN+0x7c>
   15460:	ldr	r6, [fp, #20]
   15464:	ldr	r0, [r6]
   15468:	sub	r0, r0, #1
   1546c:	str	r0, [fp, #-72]	; 0xffffffb8
   15470:	ldr	r0, [r9]
   15474:	str	r0, [sp, #40]	; 0x28
   15478:	ldr	r5, [fp, #24]
   1547c:	ldr	r0, [r5]
   15480:	str	r0, [sp, #16]
   15484:	mov	r4, #0
   15488:	ldr	r0, [fp, #8]
   1548c:	cmp	r0, #2
   15490:	ldr	sl, [sp, #32]
   15494:	blt	15e2c <ReadDataSlabN+0xdd4>
   15498:	mov	r4, #0
   1549c:	mov	r0, #1
   154a0:	mov	r3, r9
   154a4:	ldr	r8, [fp, #16]
   154a8:	sub	r7, fp, #72	; 0x48
   154ac:	ldr	r2, [r6, r0, lsl #2]
   154b0:	sub	r2, r2, #1
   154b4:	str	r2, [r7, r0, lsl #2]
   154b8:	sub	ip, r0, #1
   154bc:	ldr	r7, [r9, ip, lsl #2]
   154c0:	str	r7, [lr, r0, lsl #2]
   154c4:	mov	r5, #0
   154c8:	mov	r1, r3
   154cc:	ldr	r6, [r1, -r5, lsl #2]!
   154d0:	mul	r2, r2, r6
   154d4:	ldr	r1, [r1, #4]
   154d8:	mul	r7, r1, r7
   154dc:	add	r5, r5, #1
   154e0:	cmp	r0, r5
   154e4:	bne	154c8 <ReadDataSlabN+0x470>
   154e8:	str	r7, [lr, r0, lsl #2]
   154ec:	sub	r7, fp, #72	; 0x48
   154f0:	str	r2, [r7, r0, lsl #2]
   154f4:	ldr	r1, [lr, ip, lsl #2]
   154f8:	ldr	r2, [r8, r0, lsl #2]
   154fc:	mla	r4, r2, r1, r4
   15500:	ldr	r5, [fp, #24]
   15504:	ldr	r1, [r5, r0, lsl #2]
   15508:	ldr	r2, [sp, #16]
   1550c:	mul	r2, r1, r2
   15510:	str	r2, [sp, #16]
   15514:	add	r3, r3, #4
   15518:	add	r0, r0, #1
   1551c:	ldr	r1, [fp, #8]
   15520:	cmp	r0, r1
   15524:	ldr	r6, [fp, #20]
   15528:	bne	154ac <ReadDataSlabN+0x454>
   1552c:	b	15e30 <ReadDataSlabN+0xdd8>
   15530:	ldr	r7, [fp, #20]
   15534:	ldr	r0, [r7]
   15538:	sub	r0, r0, #1
   1553c:	str	r0, [fp, #-72]	; 0xffffffb8
   15540:	ldr	r0, [r9]
   15544:	str	r0, [sp, #40]	; 0x28
   15548:	ldr	r5, [fp, #24]
   1554c:	ldr	r0, [r5]
   15550:	str	r0, [sp, #12]
   15554:	mov	r4, #0
   15558:	ldr	r0, [fp, #8]
   1555c:	cmp	r0, #2
   15560:	ldr	sl, [sp, #32]
   15564:	blt	1605c <ReadDataSlabN+0x1004>
   15568:	mov	r4, #0
   1556c:	mov	r0, #1
   15570:	mov	r6, r9
   15574:	ldr	r8, [fp, #16]
   15578:	sub	r3, fp, #72	; 0x48
   1557c:	ldr	r2, [r7, r0, lsl #2]
   15580:	sub	r2, r2, #1
   15584:	str	r2, [r3, r0, lsl #2]
   15588:	sub	ip, r0, #1
   1558c:	ldr	r7, [r9, ip, lsl #2]
   15590:	str	r7, [lr, r0, lsl #2]
   15594:	mov	r5, #0
   15598:	mov	r1, r6
   1559c:	ldr	r3, [r1, -r5, lsl #2]!
   155a0:	mul	r2, r2, r3
   155a4:	ldr	r1, [r1, #4]
   155a8:	mul	r7, r1, r7
   155ac:	add	r5, r5, #1
   155b0:	cmp	r0, r5
   155b4:	bne	15598 <ReadDataSlabN+0x540>
   155b8:	str	r7, [lr, r0, lsl #2]
   155bc:	sub	r3, fp, #72	; 0x48
   155c0:	str	r2, [r3, r0, lsl #2]
   155c4:	ldr	r1, [lr, ip, lsl #2]
   155c8:	ldr	r2, [r8, r0, lsl #2]
   155cc:	mla	r4, r2, r1, r4
   155d0:	ldr	r5, [fp, #24]
   155d4:	ldr	r1, [r5, r0, lsl #2]
   155d8:	ldr	r2, [sp, #12]
   155dc:	mul	r2, r1, r2
   155e0:	str	r2, [sp, #12]
   155e4:	add	r6, r6, #4
   155e8:	add	r0, r0, #1
   155ec:	ldr	r1, [fp, #8]
   155f0:	cmp	r0, r1
   155f4:	ldr	r7, [fp, #20]
   155f8:	bne	1557c <ReadDataSlabN+0x524>
   155fc:	b	16060 <ReadDataSlabN+0x1008>
   15600:	ldr	r7, [fp, #20]
   15604:	ldr	r0, [r7]
   15608:	sub	r0, r0, #1
   1560c:	str	r0, [fp, #-72]	; 0xffffffb8
   15610:	ldr	r0, [r9]
   15614:	str	r0, [sp, #40]	; 0x28
   15618:	ldr	r5, [fp, #24]
   1561c:	ldr	r0, [r5]
   15620:	str	r0, [sp, #12]
   15624:	mov	r4, #0
   15628:	ldr	r0, [fp, #8]
   1562c:	cmp	r0, #2
   15630:	ldr	sl, [sp, #32]
   15634:	blt	16284 <ReadDataSlabN+0x122c>
   15638:	mov	r4, #0
   1563c:	mov	r0, #1
   15640:	mov	r6, r9
   15644:	ldr	r8, [fp, #16]
   15648:	sub	r3, fp, #72	; 0x48
   1564c:	ldr	r2, [r7, r0, lsl #2]
   15650:	sub	r2, r2, #1
   15654:	str	r2, [r3, r0, lsl #2]
   15658:	sub	ip, r0, #1
   1565c:	ldr	r7, [r9, ip, lsl #2]
   15660:	str	r7, [lr, r0, lsl #2]
   15664:	mov	r5, #0
   15668:	mov	r1, r6
   1566c:	ldr	r3, [r1, -r5, lsl #2]!
   15670:	mul	r2, r2, r3
   15674:	ldr	r1, [r1, #4]
   15678:	mul	r7, r1, r7
   1567c:	add	r5, r5, #1
   15680:	cmp	r0, r5
   15684:	bne	15668 <ReadDataSlabN+0x610>
   15688:	str	r7, [lr, r0, lsl #2]
   1568c:	sub	r3, fp, #72	; 0x48
   15690:	str	r2, [r3, r0, lsl #2]
   15694:	ldr	r1, [lr, ip, lsl #2]
   15698:	ldr	r2, [r8, r0, lsl #2]
   1569c:	mla	r4, r2, r1, r4
   156a0:	ldr	r5, [fp, #24]
   156a4:	ldr	r1, [r5, r0, lsl #2]
   156a8:	ldr	r2, [sp, #12]
   156ac:	mul	r2, r1, r2
   156b0:	str	r2, [sp, #12]
   156b4:	add	r6, r6, #4
   156b8:	add	r0, r0, #1
   156bc:	ldr	r1, [fp, #8]
   156c0:	cmp	r0, r1
   156c4:	ldr	r7, [fp, #20]
   156c8:	bne	1564c <ReadDataSlabN+0x5f4>
   156cc:	b	16288 <ReadDataSlabN+0x1230>
   156d0:	ldr	r7, [fp, #20]
   156d4:	ldr	r0, [r7]
   156d8:	sub	r0, r0, #1
   156dc:	str	r0, [fp, #-72]	; 0xffffffb8
   156e0:	ldr	r0, [r9]
   156e4:	str	r0, [sp, #40]	; 0x28
   156e8:	ldr	r5, [fp, #24]
   156ec:	ldr	r0, [r5]
   156f0:	str	r0, [sp, #16]
   156f4:	mov	r4, #0
   156f8:	ldr	r0, [fp, #8]
   156fc:	cmp	r0, #2
   15700:	ldr	sl, [sp, #32]
   15704:	blt	164ac <ReadDataSlabN+0x1454>
   15708:	mov	r4, #0
   1570c:	mov	r0, #1
   15710:	mov	r6, r9
   15714:	ldr	r8, [fp, #16]
   15718:	sub	r3, fp, #72	; 0x48
   1571c:	ldr	r2, [r7, r0, lsl #2]
   15720:	sub	r2, r2, #1
   15724:	str	r2, [r3, r0, lsl #2]
   15728:	sub	ip, r0, #1
   1572c:	ldr	r7, [r9, ip, lsl #2]
   15730:	str	r7, [lr, r0, lsl #2]
   15734:	mov	r5, #0
   15738:	mov	r1, r6
   1573c:	ldr	r3, [r1, -r5, lsl #2]!
   15740:	mul	r2, r2, r3
   15744:	ldr	r1, [r1, #4]
   15748:	mul	r7, r1, r7
   1574c:	add	r5, r5, #1
   15750:	cmp	r0, r5
   15754:	bne	15738 <ReadDataSlabN+0x6e0>
   15758:	str	r7, [lr, r0, lsl #2]
   1575c:	sub	r3, fp, #72	; 0x48
   15760:	str	r2, [r3, r0, lsl #2]
   15764:	ldr	r1, [lr, ip, lsl #2]
   15768:	ldr	r2, [r8, r0, lsl #2]
   1576c:	mla	r4, r2, r1, r4
   15770:	ldr	r5, [fp, #24]
   15774:	ldr	r1, [r5, r0, lsl #2]
   15778:	ldr	r2, [sp, #16]
   1577c:	mul	r2, r1, r2
   15780:	str	r2, [sp, #16]
   15784:	add	r6, r6, #4
   15788:	add	r0, r0, #1
   1578c:	ldr	r1, [fp, #8]
   15790:	cmp	r0, r1
   15794:	ldr	r7, [fp, #20]
   15798:	bne	1571c <ReadDataSlabN+0x6c4>
   1579c:	b	164b0 <ReadDataSlabN+0x1458>
   157a0:	ldr	r7, [fp, #20]
   157a4:	ldr	r0, [r7]
   157a8:	sub	r0, r0, #1
   157ac:	str	r0, [fp, #-72]	; 0xffffffb8
   157b0:	ldr	r0, [r9]
   157b4:	str	r0, [sp, #40]	; 0x28
   157b8:	ldr	r5, [fp, #24]
   157bc:	ldr	r0, [r5]
   157c0:	str	r0, [sp, #16]
   157c4:	mov	r4, #0
   157c8:	ldr	r0, [fp, #8]
   157cc:	cmp	r0, #2
   157d0:	ldr	sl, [sp, #32]
   157d4:	blt	166dc <ReadDataSlabN+0x1684>
   157d8:	mov	r4, #0
   157dc:	mov	r0, #1
   157e0:	mov	r6, r9
   157e4:	ldr	r8, [fp, #16]
   157e8:	sub	r3, fp, #72	; 0x48
   157ec:	ldr	r2, [r7, r0, lsl #2]
   157f0:	sub	r2, r2, #1
   157f4:	str	r2, [r3, r0, lsl #2]
   157f8:	sub	ip, r0, #1
   157fc:	ldr	r7, [r9, ip, lsl #2]
   15800:	str	r7, [lr, r0, lsl #2]
   15804:	mov	r5, #0
   15808:	mov	r1, r6
   1580c:	ldr	r3, [r1, -r5, lsl #2]!
   15810:	mul	r2, r2, r3
   15814:	ldr	r1, [r1, #4]
   15818:	mul	r7, r1, r7
   1581c:	add	r5, r5, #1
   15820:	cmp	r0, r5
   15824:	bne	15808 <ReadDataSlabN+0x7b0>
   15828:	str	r7, [lr, r0, lsl #2]
   1582c:	sub	r3, fp, #72	; 0x48
   15830:	str	r2, [r3, r0, lsl #2]
   15834:	ldr	r1, [lr, ip, lsl #2]
   15838:	ldr	r2, [r8, r0, lsl #2]
   1583c:	mla	r4, r2, r1, r4
   15840:	ldr	r5, [fp, #24]
   15844:	ldr	r1, [r5, r0, lsl #2]
   15848:	ldr	r2, [sp, #16]
   1584c:	mul	r2, r1, r2
   15850:	str	r2, [sp, #16]
   15854:	add	r6, r6, #4
   15858:	add	r0, r0, #1
   1585c:	ldr	r1, [fp, #8]
   15860:	cmp	r0, r1
   15864:	ldr	r7, [fp, #20]
   15868:	bne	157ec <ReadDataSlabN+0x794>
   1586c:	b	166e0 <ReadDataSlabN+0x1688>
   15870:	ldr	r7, [fp, #20]
   15874:	ldr	r0, [r7]
   15878:	sub	r0, r0, #1
   1587c:	str	r0, [fp, #-72]	; 0xffffffb8
   15880:	ldr	r0, [r9]
   15884:	str	r0, [sp, #40]	; 0x28
   15888:	ldr	r5, [fp, #24]
   1588c:	ldr	r0, [r5]
   15890:	str	r0, [sp, #16]
   15894:	mov	r4, #0
   15898:	ldr	r0, [fp, #8]
   1589c:	cmp	r0, #2
   158a0:	ldr	sl, [sp, #32]
   158a4:	blt	1690c <ReadDataSlabN+0x18b4>
   158a8:	mov	r4, #0
   158ac:	mov	r0, #1
   158b0:	mov	r6, r9
   158b4:	ldr	r8, [fp, #16]
   158b8:	sub	r3, fp, #72	; 0x48
   158bc:	ldr	r2, [r7, r0, lsl #2]
   158c0:	sub	r2, r2, #1
   158c4:	str	r2, [r3, r0, lsl #2]
   158c8:	sub	ip, r0, #1
   158cc:	ldr	r7, [r9, ip, lsl #2]
   158d0:	str	r7, [lr, r0, lsl #2]
   158d4:	mov	r5, #0
   158d8:	mov	r1, r6
   158dc:	ldr	r3, [r1, -r5, lsl #2]!
   158e0:	mul	r2, r2, r3
   158e4:	ldr	r1, [r1, #4]
   158e8:	mul	r7, r1, r7
   158ec:	add	r5, r5, #1
   158f0:	cmp	r0, r5
   158f4:	bne	158d8 <ReadDataSlabN+0x880>
   158f8:	str	r7, [lr, r0, lsl #2]
   158fc:	sub	r3, fp, #72	; 0x48
   15900:	str	r2, [r3, r0, lsl #2]
   15904:	ldr	r1, [lr, ip, lsl #2]
   15908:	ldr	r2, [r8, r0, lsl #2]
   1590c:	mla	r4, r2, r1, r4
   15910:	ldr	r5, [fp, #24]
   15914:	ldr	r1, [r5, r0, lsl #2]
   15918:	ldr	r2, [sp, #16]
   1591c:	mul	r2, r1, r2
   15920:	str	r2, [sp, #16]
   15924:	add	r6, r6, #4
   15928:	add	r0, r0, #1
   1592c:	ldr	r1, [fp, #8]
   15930:	cmp	r0, r1
   15934:	ldr	r7, [fp, #20]
   15938:	bne	158bc <ReadDataSlabN+0x864>
   1593c:	b	16910 <ReadDataSlabN+0x18b8>
   15940:	ldr	r7, [fp, #20]
   15944:	ldr	r0, [r7]
   15948:	sub	r0, r0, #1
   1594c:	str	r0, [fp, #-72]	; 0xffffffb8
   15950:	ldr	r0, [r9]
   15954:	str	r0, [sp, #40]	; 0x28
   15958:	ldr	r5, [fp, #24]
   1595c:	ldr	r0, [r5]
   15960:	str	r0, [sp, #16]
   15964:	mov	r4, #0
   15968:	ldr	r0, [fp, #8]
   1596c:	cmp	r0, #2
   15970:	ldr	sl, [sp, #32]
   15974:	blt	16b3c <ReadDataSlabN+0x1ae4>
   15978:	mov	r4, #0
   1597c:	mov	r0, #1
   15980:	mov	r6, r9
   15984:	ldr	r8, [fp, #16]
   15988:	sub	r3, fp, #72	; 0x48
   1598c:	ldr	r2, [r7, r0, lsl #2]
   15990:	sub	r2, r2, #1
   15994:	str	r2, [r3, r0, lsl #2]
   15998:	sub	ip, r0, #1
   1599c:	ldr	r7, [r9, ip, lsl #2]
   159a0:	str	r7, [lr, r0, lsl #2]
   159a4:	mov	r5, #0
   159a8:	mov	r1, r6
   159ac:	ldr	r3, [r1, -r5, lsl #2]!
   159b0:	mul	r2, r2, r3
   159b4:	ldr	r1, [r1, #4]
   159b8:	mul	r7, r1, r7
   159bc:	add	r5, r5, #1
   159c0:	cmp	r0, r5
   159c4:	bne	159a8 <ReadDataSlabN+0x950>
   159c8:	str	r7, [lr, r0, lsl #2]
   159cc:	sub	r3, fp, #72	; 0x48
   159d0:	str	r2, [r3, r0, lsl #2]
   159d4:	ldr	r1, [lr, ip, lsl #2]
   159d8:	ldr	r2, [r8, r0, lsl #2]
   159dc:	mla	r4, r2, r1, r4
   159e0:	ldr	r5, [fp, #24]
   159e4:	ldr	r1, [r5, r0, lsl #2]
   159e8:	ldr	r2, [sp, #16]
   159ec:	mul	r2, r1, r2
   159f0:	str	r2, [sp, #16]
   159f4:	add	r6, r6, #4
   159f8:	add	r0, r0, #1
   159fc:	ldr	r1, [fp, #8]
   15a00:	cmp	r0, r1
   15a04:	ldr	r7, [fp, #20]
   15a08:	bne	1598c <ReadDataSlabN+0x934>
   15a0c:	b	16b40 <ReadDataSlabN+0x1ae8>
   15a10:	ldr	r7, [fp, #20]
   15a14:	ldr	r0, [r7]
   15a18:	sub	r0, r0, #1
   15a1c:	str	r0, [fp, #-72]	; 0xffffffb8
   15a20:	ldr	r0, [r9]
   15a24:	str	r0, [sp, #40]	; 0x28
   15a28:	ldr	r5, [fp, #24]
   15a2c:	ldr	r0, [r5]
   15a30:	str	r0, [sp, #16]
   15a34:	mov	r4, #0
   15a38:	ldr	r0, [fp, #8]
   15a3c:	cmp	r0, #2
   15a40:	blt	16d6c <ReadDataSlabN+0x1d14>
   15a44:	mov	r4, #0
   15a48:	mov	r0, #1
   15a4c:	mov	r6, r9
   15a50:	ldr	sl, [fp, #16]
   15a54:	sub	r3, fp, #72	; 0x48
   15a58:	ldr	r2, [r7, r0, lsl #2]
   15a5c:	sub	r2, r2, #1
   15a60:	str	r2, [r3, r0, lsl #2]
   15a64:	sub	ip, r0, #1
   15a68:	ldr	r7, [r9, ip, lsl #2]
   15a6c:	str	r7, [lr, r0, lsl #2]
   15a70:	mov	r5, #0
   15a74:	mov	r1, r6
   15a78:	ldr	r3, [r1, -r5, lsl #2]!
   15a7c:	mul	r2, r2, r3
   15a80:	ldr	r1, [r1, #4]
   15a84:	mul	r7, r1, r7
   15a88:	add	r5, r5, #1
   15a8c:	cmp	r0, r5
   15a90:	bne	15a74 <ReadDataSlabN+0xa1c>
   15a94:	str	r7, [lr, r0, lsl #2]
   15a98:	sub	r3, fp, #72	; 0x48
   15a9c:	str	r2, [r3, r0, lsl #2]
   15aa0:	ldr	r1, [lr, ip, lsl #2]
   15aa4:	ldr	r2, [sl, r0, lsl #2]
   15aa8:	mla	r4, r2, r1, r4
   15aac:	ldr	r5, [fp, #24]
   15ab0:	ldr	r1, [r5, r0, lsl #2]
   15ab4:	ldr	r2, [sp, #16]
   15ab8:	mul	r2, r1, r2
   15abc:	str	r2, [sp, #16]
   15ac0:	add	r6, r6, #4
   15ac4:	add	r0, r0, #1
   15ac8:	ldr	r1, [fp, #8]
   15acc:	cmp	r0, r1
   15ad0:	ldr	r7, [fp, #20]
   15ad4:	bne	15a58 <ReadDataSlabN+0xa00>
   15ad8:	b	16d70 <ReadDataSlabN+0x1d18>
   15adc:	ldr	r7, [fp, #20]
   15ae0:	ldr	r0, [r7]
   15ae4:	sub	r0, r0, #1
   15ae8:	str	r0, [fp, #-72]	; 0xffffffb8
   15aec:	ldr	r0, [r9]
   15af0:	str	r0, [sp, #40]	; 0x28
   15af4:	ldr	r5, [fp, #24]
   15af8:	ldr	r0, [r5]
   15afc:	str	r0, [sp, #16]
   15b00:	mov	r4, #0
   15b04:	ldr	r0, [fp, #8]
   15b08:	cmp	r0, #2
   15b0c:	ldr	sl, [sp, #32]
   15b10:	blt	16fb8 <ReadDataSlabN+0x1f60>
   15b14:	mov	r4, #0
   15b18:	mov	r0, #1
   15b1c:	mov	r6, r9
   15b20:	ldr	r8, [fp, #16]
   15b24:	sub	r3, fp, #72	; 0x48
   15b28:	ldr	r2, [r7, r0, lsl #2]
   15b2c:	sub	r2, r2, #1
   15b30:	str	r2, [r3, r0, lsl #2]
   15b34:	sub	ip, r0, #1
   15b38:	ldr	r7, [r9, ip, lsl #2]
   15b3c:	str	r7, [lr, r0, lsl #2]
   15b40:	mov	r5, #0
   15b44:	mov	r1, r6
   15b48:	ldr	r3, [r1, -r5, lsl #2]!
   15b4c:	mul	r2, r2, r3
   15b50:	ldr	r1, [r1, #4]
   15b54:	mul	r7, r1, r7
   15b58:	add	r5, r5, #1
   15b5c:	cmp	r0, r5
   15b60:	bne	15b44 <ReadDataSlabN+0xaec>
   15b64:	str	r7, [lr, r0, lsl #2]
   15b68:	sub	r3, fp, #72	; 0x48
   15b6c:	str	r2, [r3, r0, lsl #2]
   15b70:	ldr	r1, [lr, ip, lsl #2]
   15b74:	ldr	r2, [r8, r0, lsl #2]
   15b78:	mla	r4, r2, r1, r4
   15b7c:	ldr	r5, [fp, #24]
   15b80:	ldr	r1, [r5, r0, lsl #2]
   15b84:	ldr	r2, [sp, #16]
   15b88:	mul	r2, r1, r2
   15b8c:	str	r2, [sp, #16]
   15b90:	add	r6, r6, #4
   15b94:	add	r0, r0, #1
   15b98:	ldr	r1, [fp, #8]
   15b9c:	cmp	r0, r1
   15ba0:	ldr	r7, [fp, #20]
   15ba4:	bne	15b28 <ReadDataSlabN+0xad0>
   15ba8:	b	16fbc <ReadDataSlabN+0x1f64>
   15bac:	ldr	r0, [sp, #16]
   15bb0:	cmp	r0, #1
   15bb4:	sub	r1, fp, #72	; 0x48
   15bb8:	blt	18864 <ReadDataSlabN+0x380c>
   15bbc:	ldr	r0, [fp, #16]
   15bc0:	add	sl, r0, #4
   15bc4:	add	r9, r5, #4
   15bc8:	add	r0, sp, #80	; 0x50
   15bcc:	orr	r4, r0, #4
   15bd0:	orr	r0, r1, #4
   15bd4:	str	r0, [sp]
   15bd8:	mov	r6, #0
   15bdc:	stmib	sp, {r9, sl}
   15be0:	str	r4, [sp, #20]
   15be4:	ldr	r5, [fp, #16]
   15be8:	ldr	r0, [r5]
   15bec:	cmp	r0, #0
   15bf0:	beq	15c1c <ReadDataSlabN+0xbc4>
   15bf4:	ldr	r1, [sp, #36]	; 0x24
   15bf8:	mul	r1, r0, r1
   15bfc:	ldr	r4, [sp, #32]
   15c00:	ldr	r0, [r4]
   15c04:	mov	r2, #1
   15c08:	bl	1a68 <fseek@plt>
   15c0c:	ldr	r0, [r5]
   15c10:	add	r8, r0, r8
   15c14:	ldr	r0, [fp, #24]
   15c18:	b	15c24 <ReadDataSlabN+0xbcc>
   15c1c:	ldr	r0, [fp, #24]
   15c20:	ldr	r4, [sp, #32]
   15c24:	mov	sl, r4
   15c28:	ldr	r0, [r0]
   15c2c:	cmp	r0, #1
   15c30:	str	r6, [sp, #12]
   15c34:	blt	15ca0 <ReadDataSlabN+0xc48>
   15c38:	ldr	r0, [sp, #24]
   15c3c:	add	r5, r0, r6, lsl #3
   15c40:	mov	r7, #0
   15c44:	ldr	r6, [sp, #36]	; 0x24
   15c48:	ldr	r9, [fp, #20]
   15c4c:	ldr	r4, [sp, #28]
   15c50:	mov	r0, sl
   15c54:	mov	r1, r5
   15c58:	mov	r2, r4
   15c5c:	mov	r3, #1
   15c60:	bl	3778 <ReadDoubleData>
   15c64:	ldr	r0, [r9]
   15c68:	sub	r0, r0, #1
   15c6c:	mul	r1, r0, r6
   15c70:	ldr	r0, [sl]
   15c74:	mov	r2, #1
   15c78:	bl	1a68 <fseek@plt>
   15c7c:	ldr	r0, [r9]
   15c80:	add	r8, r0, r8
   15c84:	add	r5, r5, #8
   15c88:	add	r7, r7, #1
   15c8c:	ldr	r0, [fp, #24]
   15c90:	ldr	r0, [r0]
   15c94:	cmp	r7, r0
   15c98:	blt	15c50 <ReadDataSlabN+0xbf8>
   15c9c:	b	15ca8 <ReadDataSlabN+0xc50>
   15ca0:	ldr	r6, [sp, #36]	; 0x24
   15ca4:	ldr	r9, [fp, #20]
   15ca8:	ldr	r1, [fp, #12]
   15cac:	ldr	r1, [r1]
   15cb0:	ldr	r2, [r9]
   15cb4:	mls	r0, r2, r0, r1
   15cb8:	ldr	r1, [fp, #16]
   15cbc:	ldr	r1, [r1]
   15cc0:	sub	r5, r0, r1
   15cc4:	mul	r1, r5, r6
   15cc8:	ldr	r0, [sl]
   15ccc:	mov	r2, #1
   15cd0:	bl	1a68 <fseek@plt>
   15cd4:	add	r8, r5, r8
   15cd8:	ldr	r0, [fp, #8]
   15cdc:	cmp	r0, #2
   15ce0:	blt	15de4 <ReadDataSlabN+0xd8c>
   15ce4:	mov	r0, #0
   15ce8:	add	r3, sp, #40	; 0x28
   15cec:	ldr	r7, [fp, #24]
   15cf0:	ldmib	sp, {r9, sl}
   15cf4:	ldr	r4, [sp, #20]
   15cf8:	mov	r5, r0
   15cfc:	ldr	r0, [r4, r0, lsl #2]
   15d00:	add	r0, r0, #1
   15d04:	str	r0, [r4, r5, lsl #2]
   15d08:	ldr	r1, [r9, r5, lsl #2]
   15d0c:	sdiv	r2, r0, r1
   15d10:	mls	r0, r2, r1, r0
   15d14:	cmp	r0, #0
   15d18:	bne	15dec <ReadDataSlabN+0xd94>
   15d1c:	mov	r0, #0
   15d20:	str	r0, [r4, r5, lsl #2]
   15d24:	add	r7, r3, r5, lsl #2
   15d28:	ldr	r0, [r7, #4]
   15d2c:	sdiv	r1, r8, r0
   15d30:	mls	r1, r1, r0, r8
   15d34:	cmp	r1, #0
   15d38:	beq	15d90 <ReadDataSlabN+0xd38>
   15d3c:	ldr	r2, [r3, r5, lsl #2]
   15d40:	ldr	r3, [sl, r5, lsl #2]
   15d44:	sub	r0, r0, r1
   15d48:	mla	r0, r3, r2, r0
   15d4c:	mul	r1, r0, r6
   15d50:	ldr	r0, [sp, #32]
   15d54:	ldr	r0, [r0]
   15d58:	mov	r2, #1
   15d5c:	bl	1a68 <fseek@plt>
   15d60:	ldr	r4, [sp, #20]
   15d64:	add	r3, sp, #40	; 0x28
   15d68:	ldr	r0, [r7, #4]
   15d6c:	add	r1, r0, r8
   15d70:	sdiv	r2, r8, r0
   15d74:	mul	r0, r2, r0
   15d78:	sub	r0, r0, r8
   15d7c:	add	r0, r1, r0
   15d80:	ldr	r1, [r3, r5, lsl #2]
   15d84:	ldr	r2, [sl, r5, lsl #2]
   15d88:	mla	r8, r2, r1, r0
   15d8c:	b	15dc8 <ReadDataSlabN+0xd70>
   15d90:	ldr	r0, [sl, r5, lsl #2]
   15d94:	cmp	r0, #0
   15d98:	beq	15dc8 <ReadDataSlabN+0xd70>
   15d9c:	ldr	r7, [r3, r5, lsl #2]
   15da0:	mul	r0, r0, r6
   15da4:	mul	r1, r0, r7
   15da8:	ldr	r0, [sp, #32]
   15dac:	ldr	r0, [r0]
   15db0:	mov	r2, #1
   15db4:	bl	1a68 <fseek@plt>
   15db8:	ldr	r4, [sp, #20]
   15dbc:	add	r3, sp, #40	; 0x28
   15dc0:	ldr	r0, [sl, r5, lsl #2]
   15dc4:	mla	r8, r0, r7, r8
   15dc8:	ldr	r7, [fp, #24]
   15dcc:	add	r0, r5, #1
   15dd0:	add	r1, r5, #2
   15dd4:	ldr	r2, [fp, #8]
   15dd8:	cmp	r1, r2
   15ddc:	blt	15cf8 <ReadDataSlabN+0xca0>
   15de0:	b	15e0c <ReadDataSlabN+0xdb4>
   15de4:	ldr	r7, [fp, #24]
   15de8:	b	15e0c <ReadDataSlabN+0xdb4>
   15dec:	ldr	r0, [sp]
   15df0:	ldr	r5, [r0, r5, lsl #2]
   15df4:	mul	r1, r5, r6
   15df8:	ldr	r0, [sp, #32]
   15dfc:	ldr	r0, [r0]
   15e00:	mov	r2, #1
   15e04:	bl	1a68 <fseek@plt>
   15e08:	add	r8, r5, r8
   15e0c:	ldr	r0, [r7]
   15e10:	ldr	r6, [sp, #12]
   15e14:	add	r6, r0, r6
   15e18:	mov	r0, #0
   15e1c:	ldr	r1, [sp, #16]
   15e20:	cmp	r6, r1
   15e24:	blt	15be4 <ReadDataSlabN+0xb8c>
   15e28:	b	150d4 <ReadDataSlabN+0x7c>
   15e2c:	ldr	r8, [fp, #16]
   15e30:	ldr	r0, [sp, #36]	; 0x24
   15e34:	mul	r1, r4, r0
   15e38:	ldr	r0, [sl]
   15e3c:	mov	r2, #1
   15e40:	bl	1a68 <fseek@plt>
   15e44:	ldr	r0, [r6]
   15e48:	cmp	r0, #1
   15e4c:	bne	171e8 <ReadDataSlabN+0x2190>
   15e50:	ldr	r0, [sp, #16]
   15e54:	cmp	r0, #1
   15e58:	sub	r0, fp, #72	; 0x48
   15e5c:	blt	18864 <ReadDataSlabN+0x380c>
   15e60:	add	r1, r8, #4
   15e64:	str	r1, [sp, #12]
   15e68:	add	r1, r5, #4
   15e6c:	str	r1, [sp, #20]
   15e70:	add	r1, sp, #80	; 0x50
   15e74:	orr	r7, r1, #4
   15e78:	orr	r0, r0, #4
   15e7c:	str	r0, [sp, #4]
   15e80:	mov	r6, #0
   15e84:	ldr	r5, [fp, #16]
   15e88:	ldr	r0, [r5]
   15e8c:	cmp	r0, #0
   15e90:	beq	15eb8 <ReadDataSlabN+0xe60>
   15e94:	ldr	r9, [sp, #36]	; 0x24
   15e98:	mul	r1, r0, r9
   15e9c:	ldr	sl, [sp, #32]
   15ea0:	ldr	r0, [sl]
   15ea4:	mov	r2, #1
   15ea8:	bl	1a68 <fseek@plt>
   15eac:	ldr	r0, [r5]
   15eb0:	add	r4, r0, r4
   15eb4:	b	15ec0 <ReadDataSlabN+0xe68>
   15eb8:	ldr	r9, [sp, #36]	; 0x24
   15ebc:	ldr	sl, [sp, #32]
   15ec0:	ldr	r0, [sp, #24]
   15ec4:	str	r6, [sp, #8]
   15ec8:	add	r1, r0, r6, lsl #2
   15ecc:	ldr	r0, [fp, #24]
   15ed0:	mov	r8, r0
   15ed4:	ldr	r3, [r0]
   15ed8:	mov	r0, sl
   15edc:	ldr	r2, [sp, #28]
   15ee0:	bl	5ea0 <ReadSingleData>
   15ee4:	ldr	r6, [r5]
   15ee8:	ldr	r0, [fp, #12]
   15eec:	ldr	r5, [r0]
   15ef0:	sub	r0, r5, r6
   15ef4:	ldr	r1, [r8]
   15ef8:	sub	r0, r0, r1
   15efc:	mul	r1, r0, r9
   15f00:	ldr	r0, [sl]
   15f04:	mov	r2, #1
   15f08:	bl	1a68 <fseek@plt>
   15f0c:	add	r0, r5, r4
   15f10:	sub	r4, r0, r6
   15f14:	ldr	r0, [fp, #8]
   15f18:	cmp	r0, #2
   15f1c:	blt	16038 <ReadDataSlabN+0xfe0>
   15f20:	mov	r0, #0
   15f24:	add	r3, sp, #40	; 0x28
   15f28:	ldr	r5, [sp, #12]
   15f2c:	mov	r8, r0
   15f30:	ldr	r0, [r7, r0, lsl #2]
   15f34:	add	r0, r0, #1
   15f38:	str	r0, [r7, r8, lsl #2]
   15f3c:	ldr	r1, [sp, #20]
   15f40:	ldr	r1, [r1, r8, lsl #2]
   15f44:	sdiv	r2, r0, r1
   15f48:	mls	r0, r2, r1, r0
   15f4c:	cmp	r0, #0
   15f50:	bne	16018 <ReadDataSlabN+0xfc0>
   15f54:	mov	r0, #0
   15f58:	str	r0, [r7, r8, lsl #2]
   15f5c:	add	r9, r3, r8, lsl #2
   15f60:	ldr	r0, [r9, #4]
   15f64:	sdiv	r1, r4, r0
   15f68:	mls	r1, r1, r0, r4
   15f6c:	cmp	r1, #0
   15f70:	beq	15fc4 <ReadDataSlabN+0xf6c>
   15f74:	ldr	r2, [r3, r8, lsl #2]
   15f78:	ldr	r3, [r5, r8, lsl #2]
   15f7c:	sub	r0, r0, r1
   15f80:	mla	r0, r3, r2, r0
   15f84:	ldr	r1, [sp, #36]	; 0x24
   15f88:	mul	r1, r0, r1
   15f8c:	ldr	r0, [sl]
   15f90:	mov	r2, #1
   15f94:	bl	1a68 <fseek@plt>
   15f98:	add	r3, sp, #40	; 0x28
   15f9c:	ldr	r0, [r9, #4]
   15fa0:	add	r1, r0, r4
   15fa4:	sdiv	r2, r4, r0
   15fa8:	mul	r0, r2, r0
   15fac:	sub	r0, r0, r4
   15fb0:	add	r0, r1, r0
   15fb4:	ldr	r1, [r3, r8, lsl #2]
   15fb8:	ldr	r2, [r5, r8, lsl #2]
   15fbc:	mla	r4, r2, r1, r0
   15fc0:	b	16000 <ReadDataSlabN+0xfa8>
   15fc4:	ldr	r0, [r5, r8, lsl #2]
   15fc8:	cmp	r0, #0
   15fcc:	beq	16000 <ReadDataSlabN+0xfa8>
   15fd0:	ldr	r5, [r3, r8, lsl #2]
   15fd4:	ldr	r1, [sp, #36]	; 0x24
   15fd8:	mul	r0, r0, r1
   15fdc:	mul	r1, r0, r5
   15fe0:	ldr	r0, [sl]
   15fe4:	mov	r2, #1
   15fe8:	bl	1a68 <fseek@plt>
   15fec:	add	r3, sp, #40	; 0x28
   15ff0:	ldr	r0, [sp, #12]
   15ff4:	ldr	r0, [r0, r8, lsl #2]
   15ff8:	mla	r4, r0, r5, r4
   15ffc:	ldr	r5, [sp, #12]
   16000:	add	r0, r8, #1
   16004:	add	r1, r8, #2
   16008:	ldr	r2, [fp, #8]
   1600c:	cmp	r1, r2
   16010:	blt	15f2c <ReadDataSlabN+0xed4>
   16014:	b	16038 <ReadDataSlabN+0xfe0>
   16018:	ldr	r0, [sp, #4]
   1601c:	ldr	r5, [r0, r8, lsl #2]
   16020:	ldr	r0, [sp, #36]	; 0x24
   16024:	mul	r1, r5, r0
   16028:	ldr	r0, [sl]
   1602c:	mov	r2, #1
   16030:	bl	1a68 <fseek@plt>
   16034:	add	r4, r5, r4
   16038:	ldr	r0, [fp, #24]
   1603c:	ldr	r0, [r0]
   16040:	ldr	r6, [sp, #8]
   16044:	add	r6, r0, r6
   16048:	mov	r0, #0
   1604c:	ldr	r1, [sp, #16]
   16050:	cmp	r6, r1
   16054:	blt	15e84 <ReadDataSlabN+0xe2c>
   16058:	b	150d4 <ReadDataSlabN+0x7c>
   1605c:	ldr	r8, [fp, #16]
   16060:	ldr	r0, [sp, #36]	; 0x24
   16064:	mul	r1, r4, r0
   16068:	ldr	r0, [sl]
   1606c:	mov	r2, #1
   16070:	bl	1a68 <fseek@plt>
   16074:	ldr	r0, [r7]
   16078:	cmp	r0, #1
   1607c:	bne	17480 <ReadDataSlabN+0x2428>
   16080:	ldr	r0, [sp, #12]
   16084:	cmp	r0, #1
   16088:	sub	r0, fp, #72	; 0x48
   1608c:	blt	18864 <ReadDataSlabN+0x380c>
   16090:	add	r1, r8, #4
   16094:	str	r1, [sp, #16]
   16098:	add	r1, r5, #4
   1609c:	str	r1, [sp, #20]
   160a0:	add	r1, sp, #80	; 0x50
   160a4:	orr	r7, r1, #4
   160a8:	orr	r0, r0, #4
   160ac:	str	r0, [sp, #4]
   160b0:	mov	r6, #0
   160b4:	ldr	r5, [fp, #16]
   160b8:	ldr	r0, [r5]
   160bc:	cmp	r0, #0
   160c0:	beq	160e8 <ReadDataSlabN+0x1090>
   160c4:	ldr	r9, [sp, #36]	; 0x24
   160c8:	mul	r1, r0, r9
   160cc:	ldr	sl, [sp, #32]
   160d0:	ldr	r0, [sl]
   160d4:	mov	r2, #1
   160d8:	bl	1a68 <fseek@plt>
   160dc:	ldr	r0, [r5]
   160e0:	add	r4, r0, r4
   160e4:	b	160f0 <ReadDataSlabN+0x1098>
   160e8:	ldr	r9, [sp, #36]	; 0x24
   160ec:	ldr	sl, [sp, #32]
   160f0:	ldr	r0, [sp, #24]
   160f4:	str	r6, [sp, #8]
   160f8:	add	r1, r0, r6
   160fc:	ldr	r0, [fp, #24]
   16100:	mov	r8, r0
   16104:	ldr	r3, [r0]
   16108:	mov	r0, sl
   1610c:	ldr	r2, [sp, #28]
   16110:	bl	11a00 <ReadInt8Data>
   16114:	ldr	r6, [r5]
   16118:	ldr	r0, [fp, #12]
   1611c:	ldr	r5, [r0]
   16120:	sub	r0, r5, r6
   16124:	ldr	r1, [r8]
   16128:	sub	r0, r0, r1
   1612c:	mul	r1, r0, r9
   16130:	ldr	r0, [sl]
   16134:	mov	r2, #1
   16138:	bl	1a68 <fseek@plt>
   1613c:	add	r0, r5, r4
   16140:	sub	r4, r0, r6
   16144:	ldr	r0, [fp, #8]
   16148:	cmp	r0, #2
   1614c:	blt	16260 <ReadDataSlabN+0x1208>
   16150:	mov	r0, #0
   16154:	add	r3, sp, #40	; 0x28
   16158:	ldr	r6, [sp, #36]	; 0x24
   1615c:	ldr	r5, [sp, #16]
   16160:	mov	r8, r0
   16164:	ldr	r0, [r7, r0, lsl #2]
   16168:	add	r0, r0, #1
   1616c:	str	r0, [r7, r8, lsl #2]
   16170:	ldr	r1, [sp, #20]
   16174:	ldr	r1, [r1, r8, lsl #2]
   16178:	sdiv	r2, r0, r1
   1617c:	mls	r0, r2, r1, r0
   16180:	cmp	r0, #0
   16184:	bne	16244 <ReadDataSlabN+0x11ec>
   16188:	mov	r0, #0
   1618c:	str	r0, [r7, r8, lsl #2]
   16190:	add	r9, r3, r8, lsl #2
   16194:	ldr	r0, [r9, #4]
   16198:	sdiv	r1, r4, r0
   1619c:	mls	r1, r1, r0, r4
   161a0:	cmp	r1, #0
   161a4:	beq	161f4 <ReadDataSlabN+0x119c>
   161a8:	ldr	r2, [r3, r8, lsl #2]
   161ac:	ldr	r3, [r5, r8, lsl #2]
   161b0:	sub	r0, r0, r1
   161b4:	mla	r0, r3, r2, r0
   161b8:	mul	r1, r0, r6
   161bc:	ldr	r0, [sl]
   161c0:	mov	r2, #1
   161c4:	bl	1a68 <fseek@plt>
   161c8:	add	r3, sp, #40	; 0x28
   161cc:	ldr	r0, [r9, #4]
   161d0:	add	r1, r0, r4
   161d4:	sdiv	r2, r4, r0
   161d8:	mul	r0, r2, r0
   161dc:	sub	r0, r0, r4
   161e0:	add	r0, r1, r0
   161e4:	ldr	r1, [r3, r8, lsl #2]
   161e8:	ldr	r2, [r5, r8, lsl #2]
   161ec:	mla	r4, r2, r1, r0
   161f0:	b	1622c <ReadDataSlabN+0x11d4>
   161f4:	ldr	r0, [r5, r8, lsl #2]
   161f8:	cmp	r0, #0
   161fc:	beq	1622c <ReadDataSlabN+0x11d4>
   16200:	ldr	r5, [r3, r8, lsl #2]
   16204:	mul	r0, r0, r6
   16208:	mul	r1, r0, r5
   1620c:	ldr	r0, [sl]
   16210:	mov	r2, #1
   16214:	bl	1a68 <fseek@plt>
   16218:	add	r3, sp, #40	; 0x28
   1621c:	ldr	r0, [sp, #16]
   16220:	ldr	r0, [r0, r8, lsl #2]
   16224:	mla	r4, r0, r5, r4
   16228:	ldr	r5, [sp, #16]
   1622c:	add	r0, r8, #1
   16230:	add	r1, r8, #2
   16234:	ldr	r2, [fp, #8]
   16238:	cmp	r1, r2
   1623c:	blt	16160 <ReadDataSlabN+0x1108>
   16240:	b	16260 <ReadDataSlabN+0x1208>
   16244:	ldr	r0, [sp, #4]
   16248:	ldr	r5, [r0, r8, lsl #2]
   1624c:	mul	r1, r5, r6
   16250:	ldr	r0, [sl]
   16254:	mov	r2, #1
   16258:	bl	1a68 <fseek@plt>
   1625c:	add	r4, r5, r4
   16260:	ldr	r0, [fp, #24]
   16264:	ldr	r0, [r0]
   16268:	ldr	r6, [sp, #8]
   1626c:	add	r6, r0, r6
   16270:	mov	r0, #0
   16274:	ldr	r1, [sp, #12]
   16278:	cmp	r6, r1
   1627c:	blt	160b4 <ReadDataSlabN+0x105c>
   16280:	b	150d4 <ReadDataSlabN+0x7c>
   16284:	ldr	r8, [fp, #16]
   16288:	ldr	r0, [sp, #36]	; 0x24
   1628c:	mul	r1, r4, r0
   16290:	ldr	r0, [sl]
   16294:	mov	r2, #1
   16298:	bl	1a68 <fseek@plt>
   1629c:	ldr	r0, [r7]
   162a0:	cmp	r0, #1
   162a4:	bne	176e4 <ReadDataSlabN+0x268c>
   162a8:	ldr	r0, [sp, #12]
   162ac:	cmp	r0, #1
   162b0:	sub	r0, fp, #72	; 0x48
   162b4:	blt	18864 <ReadDataSlabN+0x380c>
   162b8:	add	r1, r8, #4
   162bc:	str	r1, [sp, #16]
   162c0:	add	r1, r5, #4
   162c4:	str	r1, [sp, #20]
   162c8:	add	r1, sp, #80	; 0x50
   162cc:	orr	r7, r1, #4
   162d0:	orr	r0, r0, #4
   162d4:	str	r0, [sp, #4]
   162d8:	mov	r6, #0
   162dc:	ldr	r5, [fp, #16]
   162e0:	ldr	r0, [r5]
   162e4:	cmp	r0, #0
   162e8:	beq	16310 <ReadDataSlabN+0x12b8>
   162ec:	ldr	r9, [sp, #36]	; 0x24
   162f0:	mul	r1, r0, r9
   162f4:	ldr	sl, [sp, #32]
   162f8:	ldr	r0, [sl]
   162fc:	mov	r2, #1
   16300:	bl	1a68 <fseek@plt>
   16304:	ldr	r0, [r5]
   16308:	add	r4, r0, r4
   1630c:	b	16318 <ReadDataSlabN+0x12c0>
   16310:	ldr	r9, [sp, #36]	; 0x24
   16314:	ldr	sl, [sp, #32]
   16318:	ldr	r0, [sp, #24]
   1631c:	str	r6, [sp, #8]
   16320:	add	r1, r0, r6
   16324:	ldr	r0, [fp, #24]
   16328:	mov	r8, r0
   1632c:	ldr	r3, [r0]
   16330:	mov	r0, sl
   16334:	ldr	r2, [sp, #28]
   16338:	bl	133ec <ReadUInt8Data>
   1633c:	ldr	r6, [r5]
   16340:	ldr	r0, [fp, #12]
   16344:	ldr	r5, [r0]
   16348:	sub	r0, r5, r6
   1634c:	ldr	r1, [r8]
   16350:	sub	r0, r0, r1
   16354:	mul	r1, r0, r9
   16358:	ldr	r0, [sl]
   1635c:	mov	r2, #1
   16360:	bl	1a68 <fseek@plt>
   16364:	add	r0, r5, r4
   16368:	sub	r4, r0, r6
   1636c:	ldr	r0, [fp, #8]
   16370:	cmp	r0, #2
   16374:	blt	16488 <ReadDataSlabN+0x1430>
   16378:	mov	r0, #0
   1637c:	add	r3, sp, #40	; 0x28
   16380:	ldr	r6, [sp, #36]	; 0x24
   16384:	ldr	r5, [sp, #16]
   16388:	mov	r8, r0
   1638c:	ldr	r0, [r7, r0, lsl #2]
   16390:	add	r0, r0, #1
   16394:	str	r0, [r7, r8, lsl #2]
   16398:	ldr	r1, [sp, #20]
   1639c:	ldr	r1, [r1, r8, lsl #2]
   163a0:	sdiv	r2, r0, r1
   163a4:	mls	r0, r2, r1, r0
   163a8:	cmp	r0, #0
   163ac:	bne	1646c <ReadDataSlabN+0x1414>
   163b0:	mov	r0, #0
   163b4:	str	r0, [r7, r8, lsl #2]
   163b8:	add	r9, r3, r8, lsl #2
   163bc:	ldr	r0, [r9, #4]
   163c0:	sdiv	r1, r4, r0
   163c4:	mls	r1, r1, r0, r4
   163c8:	cmp	r1, #0
   163cc:	beq	1641c <ReadDataSlabN+0x13c4>
   163d0:	ldr	r2, [r3, r8, lsl #2]
   163d4:	ldr	r3, [r5, r8, lsl #2]
   163d8:	sub	r0, r0, r1
   163dc:	mla	r0, r3, r2, r0
   163e0:	mul	r1, r0, r6
   163e4:	ldr	r0, [sl]
   163e8:	mov	r2, #1
   163ec:	bl	1a68 <fseek@plt>
   163f0:	add	r3, sp, #40	; 0x28
   163f4:	ldr	r0, [r9, #4]
   163f8:	add	r1, r0, r4
   163fc:	sdiv	r2, r4, r0
   16400:	mul	r0, r2, r0
   16404:	sub	r0, r0, r4
   16408:	add	r0, r1, r0
   1640c:	ldr	r1, [r3, r8, lsl #2]
   16410:	ldr	r2, [r5, r8, lsl #2]
   16414:	mla	r4, r2, r1, r0
   16418:	b	16454 <ReadDataSlabN+0x13fc>
   1641c:	ldr	r0, [r5, r8, lsl #2]
   16420:	cmp	r0, #0
   16424:	beq	16454 <ReadDataSlabN+0x13fc>
   16428:	ldr	r5, [r3, r8, lsl #2]
   1642c:	mul	r0, r0, r6
   16430:	mul	r1, r0, r5
   16434:	ldr	r0, [sl]
   16438:	mov	r2, #1
   1643c:	bl	1a68 <fseek@plt>
   16440:	add	r3, sp, #40	; 0x28
   16444:	ldr	r0, [sp, #16]
   16448:	ldr	r0, [r0, r8, lsl #2]
   1644c:	mla	r4, r0, r5, r4
   16450:	ldr	r5, [sp, #16]
   16454:	add	r0, r8, #1
   16458:	add	r1, r8, #2
   1645c:	ldr	r2, [fp, #8]
   16460:	cmp	r1, r2
   16464:	blt	16388 <ReadDataSlabN+0x1330>
   16468:	b	16488 <ReadDataSlabN+0x1430>
   1646c:	ldr	r0, [sp, #4]
   16470:	ldr	r5, [r0, r8, lsl #2]
   16474:	mul	r1, r5, r6
   16478:	ldr	r0, [sl]
   1647c:	mov	r2, #1
   16480:	bl	1a68 <fseek@plt>
   16484:	add	r4, r5, r4
   16488:	ldr	r0, [fp, #24]
   1648c:	ldr	r0, [r0]
   16490:	ldr	r6, [sp, #8]
   16494:	add	r6, r0, r6
   16498:	mov	r0, #0
   1649c:	ldr	r1, [sp, #12]
   164a0:	cmp	r6, r1
   164a4:	blt	162dc <ReadDataSlabN+0x1284>
   164a8:	b	150d4 <ReadDataSlabN+0x7c>
   164ac:	ldr	r8, [fp, #16]
   164b0:	ldr	r0, [sp, #36]	; 0x24
   164b4:	mul	r1, r4, r0
   164b8:	ldr	r0, [sl]
   164bc:	mov	r2, #1
   164c0:	bl	1a68 <fseek@plt>
   164c4:	ldr	r0, [r7]
   164c8:	cmp	r0, #1
   164cc:	bne	17948 <ReadDataSlabN+0x28f0>
   164d0:	ldr	r0, [sp, #16]
   164d4:	cmp	r0, #1
   164d8:	sub	r0, fp, #72	; 0x48
   164dc:	blt	18864 <ReadDataSlabN+0x380c>
   164e0:	add	r1, r8, #4
   164e4:	str	r1, [sp, #12]
   164e8:	add	r1, r5, #4
   164ec:	str	r1, [sp, #20]
   164f0:	add	r1, sp, #80	; 0x50
   164f4:	orr	r7, r1, #4
   164f8:	orr	r0, r0, #4
   164fc:	str	r0, [sp, #4]
   16500:	mov	r6, #0
   16504:	ldr	r5, [fp, #16]
   16508:	ldr	r0, [r5]
   1650c:	cmp	r0, #0
   16510:	beq	16538 <ReadDataSlabN+0x14e0>
   16514:	ldr	r9, [sp, #36]	; 0x24
   16518:	mul	r1, r0, r9
   1651c:	ldr	sl, [sp, #32]
   16520:	ldr	r0, [sl]
   16524:	mov	r2, #1
   16528:	bl	1a68 <fseek@plt>
   1652c:	ldr	r0, [r5]
   16530:	add	r4, r0, r4
   16534:	b	16540 <ReadDataSlabN+0x14e8>
   16538:	ldr	r9, [sp, #36]	; 0x24
   1653c:	ldr	sl, [sp, #32]
   16540:	ldr	r0, [sp, #24]
   16544:	str	r6, [sp, #8]
   16548:	add	r1, r0, r6, lsl #1
   1654c:	ldr	r0, [fp, #24]
   16550:	mov	r8, r0
   16554:	ldr	r3, [r0]
   16558:	mov	r0, sl
   1655c:	ldr	r2, [sp, #28]
   16560:	bl	e5f8 <ReadInt16Data>
   16564:	ldr	r6, [r5]
   16568:	ldr	r0, [fp, #12]
   1656c:	ldr	r5, [r0]
   16570:	sub	r0, r5, r6
   16574:	ldr	r1, [r8]
   16578:	sub	r0, r0, r1
   1657c:	mul	r1, r0, r9
   16580:	ldr	r0, [sl]
   16584:	mov	r2, #1
   16588:	bl	1a68 <fseek@plt>
   1658c:	add	r0, r5, r4
   16590:	sub	r4, r0, r6
   16594:	ldr	r0, [fp, #8]
   16598:	cmp	r0, #2
   1659c:	blt	166b8 <ReadDataSlabN+0x1660>
   165a0:	mov	r0, #0
   165a4:	add	r3, sp, #40	; 0x28
   165a8:	ldr	r5, [sp, #12]
   165ac:	mov	r8, r0
   165b0:	ldr	r0, [r7, r0, lsl #2]
   165b4:	add	r0, r0, #1
   165b8:	str	r0, [r7, r8, lsl #2]
   165bc:	ldr	r1, [sp, #20]
   165c0:	ldr	r1, [r1, r8, lsl #2]
   165c4:	sdiv	r2, r0, r1
   165c8:	mls	r0, r2, r1, r0
   165cc:	cmp	r0, #0
   165d0:	bne	16698 <ReadDataSlabN+0x1640>
   165d4:	mov	r0, #0
   165d8:	str	r0, [r7, r8, lsl #2]
   165dc:	add	r9, r3, r8, lsl #2
   165e0:	ldr	r0, [r9, #4]
   165e4:	sdiv	r1, r4, r0
   165e8:	mls	r1, r1, r0, r4
   165ec:	cmp	r1, #0
   165f0:	beq	16644 <ReadDataSlabN+0x15ec>
   165f4:	ldr	r2, [r3, r8, lsl #2]
   165f8:	ldr	r3, [r5, r8, lsl #2]
   165fc:	sub	r0, r0, r1
   16600:	mla	r0, r3, r2, r0
   16604:	ldr	r1, [sp, #36]	; 0x24
   16608:	mul	r1, r0, r1
   1660c:	ldr	r0, [sl]
   16610:	mov	r2, #1
   16614:	bl	1a68 <fseek@plt>
   16618:	add	r3, sp, #40	; 0x28
   1661c:	ldr	r0, [r9, #4]
   16620:	add	r1, r0, r4
   16624:	sdiv	r2, r4, r0
   16628:	mul	r0, r2, r0
   1662c:	sub	r0, r0, r4
   16630:	add	r0, r1, r0
   16634:	ldr	r1, [r3, r8, lsl #2]
   16638:	ldr	r2, [r5, r8, lsl #2]
   1663c:	mla	r4, r2, r1, r0
   16640:	b	16680 <ReadDataSlabN+0x1628>
   16644:	ldr	r0, [r5, r8, lsl #2]
   16648:	cmp	r0, #0
   1664c:	beq	16680 <ReadDataSlabN+0x1628>
   16650:	ldr	r5, [r3, r8, lsl #2]
   16654:	ldr	r1, [sp, #36]	; 0x24
   16658:	mul	r0, r0, r1
   1665c:	mul	r1, r0, r5
   16660:	ldr	r0, [sl]
   16664:	mov	r2, #1
   16668:	bl	1a68 <fseek@plt>
   1666c:	add	r3, sp, #40	; 0x28
   16670:	ldr	r0, [sp, #12]
   16674:	ldr	r0, [r0, r8, lsl #2]
   16678:	mla	r4, r0, r5, r4
   1667c:	ldr	r5, [sp, #12]
   16680:	add	r0, r8, #1
   16684:	add	r1, r8, #2
   16688:	ldr	r2, [fp, #8]
   1668c:	cmp	r1, r2
   16690:	blt	165ac <ReadDataSlabN+0x1554>
   16694:	b	166b8 <ReadDataSlabN+0x1660>
   16698:	ldr	r0, [sp, #4]
   1669c:	ldr	r5, [r0, r8, lsl #2]
   166a0:	ldr	r0, [sp, #36]	; 0x24
   166a4:	mul	r1, r5, r0
   166a8:	ldr	r0, [sl]
   166ac:	mov	r2, #1
   166b0:	bl	1a68 <fseek@plt>
   166b4:	add	r4, r5, r4
   166b8:	ldr	r0, [fp, #24]
   166bc:	ldr	r0, [r0]
   166c0:	ldr	r6, [sp, #8]
   166c4:	add	r6, r0, r6
   166c8:	mov	r0, #0
   166cc:	ldr	r1, [sp, #16]
   166d0:	cmp	r6, r1
   166d4:	blt	16504 <ReadDataSlabN+0x14ac>
   166d8:	b	150d4 <ReadDataSlabN+0x7c>
   166dc:	ldr	r8, [fp, #16]
   166e0:	ldr	r0, [sp, #36]	; 0x24
   166e4:	mul	r1, r4, r0
   166e8:	ldr	r0, [sl]
   166ec:	mov	r2, #1
   166f0:	bl	1a68 <fseek@plt>
   166f4:	ldr	r0, [r7]
   166f8:	cmp	r0, #1
   166fc:	bne	17bd0 <ReadDataSlabN+0x2b78>
   16700:	ldr	r0, [sp, #16]
   16704:	cmp	r0, #1
   16708:	sub	r0, fp, #72	; 0x48
   1670c:	blt	18864 <ReadDataSlabN+0x380c>
   16710:	add	r1, r8, #4
   16714:	str	r1, [sp, #12]
   16718:	add	r1, r5, #4
   1671c:	str	r1, [sp, #20]
   16720:	add	r1, sp, #80	; 0x50
   16724:	orr	r7, r1, #4
   16728:	orr	r0, r0, #4
   1672c:	str	r0, [sp, #4]
   16730:	mov	r6, #0
   16734:	ldr	r5, [fp, #16]
   16738:	ldr	r0, [r5]
   1673c:	cmp	r0, #0
   16740:	beq	16768 <ReadDataSlabN+0x1710>
   16744:	ldr	r9, [sp, #36]	; 0x24
   16748:	mul	r1, r0, r9
   1674c:	ldr	sl, [sp, #32]
   16750:	ldr	r0, [sl]
   16754:	mov	r2, #1
   16758:	bl	1a68 <fseek@plt>
   1675c:	ldr	r0, [r5]
   16760:	add	r4, r0, r4
   16764:	b	16770 <ReadDataSlabN+0x1718>
   16768:	ldr	r9, [sp, #36]	; 0x24
   1676c:	ldr	sl, [sp, #32]
   16770:	ldr	r0, [sp, #24]
   16774:	str	r6, [sp, #8]
   16778:	add	r1, r0, r6, lsl #1
   1677c:	ldr	r0, [fp, #24]
   16780:	mov	r8, r0
   16784:	ldr	r3, [r0]
   16788:	mov	r0, sl
   1678c:	ldr	r2, [sp, #28]
   16790:	bl	fffc <ReadUInt16Data>
   16794:	ldr	r6, [r5]
   16798:	ldr	r0, [fp, #12]
   1679c:	ldr	r5, [r0]
   167a0:	sub	r0, r5, r6
   167a4:	ldr	r1, [r8]
   167a8:	sub	r0, r0, r1
   167ac:	mul	r1, r0, r9
   167b0:	ldr	r0, [sl]
   167b4:	mov	r2, #1
   167b8:	bl	1a68 <fseek@plt>
   167bc:	add	r0, r5, r4
   167c0:	sub	r4, r0, r6
   167c4:	ldr	r0, [fp, #8]
   167c8:	cmp	r0, #2
   167cc:	blt	168e8 <ReadDataSlabN+0x1890>
   167d0:	mov	r0, #0
   167d4:	add	r3, sp, #40	; 0x28
   167d8:	ldr	r5, [sp, #12]
   167dc:	mov	r8, r0
   167e0:	ldr	r0, [r7, r0, lsl #2]
   167e4:	add	r0, r0, #1
   167e8:	str	r0, [r7, r8, lsl #2]
   167ec:	ldr	r1, [sp, #20]
   167f0:	ldr	r1, [r1, r8, lsl #2]
   167f4:	sdiv	r2, r0, r1
   167f8:	mls	r0, r2, r1, r0
   167fc:	cmp	r0, #0
   16800:	bne	168c8 <ReadDataSlabN+0x1870>
   16804:	mov	r0, #0
   16808:	str	r0, [r7, r8, lsl #2]
   1680c:	add	r9, r3, r8, lsl #2
   16810:	ldr	r0, [r9, #4]
   16814:	sdiv	r1, r4, r0
   16818:	mls	r1, r1, r0, r4
   1681c:	cmp	r1, #0
   16820:	beq	16874 <ReadDataSlabN+0x181c>
   16824:	ldr	r2, [r3, r8, lsl #2]
   16828:	ldr	r3, [r5, r8, lsl #2]
   1682c:	sub	r0, r0, r1
   16830:	mla	r0, r3, r2, r0
   16834:	ldr	r1, [sp, #36]	; 0x24
   16838:	mul	r1, r0, r1
   1683c:	ldr	r0, [sl]
   16840:	mov	r2, #1
   16844:	bl	1a68 <fseek@plt>
   16848:	add	r3, sp, #40	; 0x28
   1684c:	ldr	r0, [r9, #4]
   16850:	add	r1, r0, r4
   16854:	sdiv	r2, r4, r0
   16858:	mul	r0, r2, r0
   1685c:	sub	r0, r0, r4
   16860:	add	r0, r1, r0
   16864:	ldr	r1, [r3, r8, lsl #2]
   16868:	ldr	r2, [r5, r8, lsl #2]
   1686c:	mla	r4, r2, r1, r0
   16870:	b	168b0 <ReadDataSlabN+0x1858>
   16874:	ldr	r0, [r5, r8, lsl #2]
   16878:	cmp	r0, #0
   1687c:	beq	168b0 <ReadDataSlabN+0x1858>
   16880:	ldr	r5, [r3, r8, lsl #2]
   16884:	ldr	r1, [sp, #36]	; 0x24
   16888:	mul	r0, r0, r1
   1688c:	mul	r1, r0, r5
   16890:	ldr	r0, [sl]
   16894:	mov	r2, #1
   16898:	bl	1a68 <fseek@plt>
   1689c:	add	r3, sp, #40	; 0x28
   168a0:	ldr	r0, [sp, #12]
   168a4:	ldr	r0, [r0, r8, lsl #2]
   168a8:	mla	r4, r0, r5, r4
   168ac:	ldr	r5, [sp, #12]
   168b0:	add	r0, r8, #1
   168b4:	add	r1, r8, #2
   168b8:	ldr	r2, [fp, #8]
   168bc:	cmp	r1, r2
   168c0:	blt	167dc <ReadDataSlabN+0x1784>
   168c4:	b	168e8 <ReadDataSlabN+0x1890>
   168c8:	ldr	r0, [sp, #4]
   168cc:	ldr	r5, [r0, r8, lsl #2]
   168d0:	ldr	r0, [sp, #36]	; 0x24
   168d4:	mul	r1, r5, r0
   168d8:	ldr	r0, [sl]
   168dc:	mov	r2, #1
   168e0:	bl	1a68 <fseek@plt>
   168e4:	add	r4, r5, r4
   168e8:	ldr	r0, [fp, #24]
   168ec:	ldr	r0, [r0]
   168f0:	ldr	r6, [sp, #8]
   168f4:	add	r6, r0, r6
   168f8:	mov	r0, #0
   168fc:	ldr	r1, [sp, #16]
   16900:	cmp	r6, r1
   16904:	blt	16734 <ReadDataSlabN+0x16dc>
   16908:	b	150d4 <ReadDataSlabN+0x7c>
   1690c:	ldr	r8, [fp, #16]
   16910:	ldr	r0, [sp, #36]	; 0x24
   16914:	mul	r1, r4, r0
   16918:	ldr	r0, [sl]
   1691c:	mov	r2, #1
   16920:	bl	1a68 <fseek@plt>
   16924:	ldr	r0, [r7]
   16928:	cmp	r0, #1
   1692c:	bne	17e58 <ReadDataSlabN+0x2e00>
   16930:	ldr	r0, [sp, #16]
   16934:	cmp	r0, #1
   16938:	sub	r0, fp, #72	; 0x48
   1693c:	blt	18864 <ReadDataSlabN+0x380c>
   16940:	add	r1, r8, #4
   16944:	str	r1, [sp, #12]
   16948:	add	r1, r5, #4
   1694c:	str	r1, [sp, #20]
   16950:	add	r1, sp, #80	; 0x50
   16954:	orr	r7, r1, #4
   16958:	orr	r0, r0, #4
   1695c:	str	r0, [sp, #4]
   16960:	mov	r6, #0
   16964:	ldr	r5, [fp, #16]
   16968:	ldr	r0, [r5]
   1696c:	cmp	r0, #0
   16970:	beq	16998 <ReadDataSlabN+0x1940>
   16974:	ldr	r9, [sp, #36]	; 0x24
   16978:	mul	r1, r0, r9
   1697c:	ldr	sl, [sp, #32]
   16980:	ldr	r0, [sl]
   16984:	mov	r2, #1
   16988:	bl	1a68 <fseek@plt>
   1698c:	ldr	r0, [r5]
   16990:	add	r4, r0, r4
   16994:	b	169a0 <ReadDataSlabN+0x1948>
   16998:	ldr	r9, [sp, #36]	; 0x24
   1699c:	ldr	sl, [sp, #32]
   169a0:	ldr	r0, [sp, #24]
   169a4:	str	r6, [sp, #8]
   169a8:	add	r1, r0, r6, lsl #2
   169ac:	ldr	r0, [fp, #24]
   169b0:	mov	r8, r0
   169b4:	ldr	r3, [r0]
   169b8:	mov	r0, sl
   169bc:	ldr	r2, [sp, #28]
   169c0:	bl	b250 <ReadInt32Data>
   169c4:	ldr	r6, [r5]
   169c8:	ldr	r0, [fp, #12]
   169cc:	ldr	r5, [r0]
   169d0:	sub	r0, r5, r6
   169d4:	ldr	r1, [r8]
   169d8:	sub	r0, r0, r1
   169dc:	mul	r1, r0, r9
   169e0:	ldr	r0, [sl]
   169e4:	mov	r2, #1
   169e8:	bl	1a68 <fseek@plt>
   169ec:	add	r0, r5, r4
   169f0:	sub	r4, r0, r6
   169f4:	ldr	r0, [fp, #8]
   169f8:	cmp	r0, #2
   169fc:	blt	16b18 <ReadDataSlabN+0x1ac0>
   16a00:	mov	r0, #0
   16a04:	add	r3, sp, #40	; 0x28
   16a08:	ldr	r5, [sp, #12]
   16a0c:	mov	r8, r0
   16a10:	ldr	r0, [r7, r0, lsl #2]
   16a14:	add	r0, r0, #1
   16a18:	str	r0, [r7, r8, lsl #2]
   16a1c:	ldr	r1, [sp, #20]
   16a20:	ldr	r1, [r1, r8, lsl #2]
   16a24:	sdiv	r2, r0, r1
   16a28:	mls	r0, r2, r1, r0
   16a2c:	cmp	r0, #0
   16a30:	bne	16af8 <ReadDataSlabN+0x1aa0>
   16a34:	mov	r0, #0
   16a38:	str	r0, [r7, r8, lsl #2]
   16a3c:	add	r9, r3, r8, lsl #2
   16a40:	ldr	r0, [r9, #4]
   16a44:	sdiv	r1, r4, r0
   16a48:	mls	r1, r1, r0, r4
   16a4c:	cmp	r1, #0
   16a50:	beq	16aa4 <ReadDataSlabN+0x1a4c>
   16a54:	ldr	r2, [r3, r8, lsl #2]
   16a58:	ldr	r3, [r5, r8, lsl #2]
   16a5c:	sub	r0, r0, r1
   16a60:	mla	r0, r3, r2, r0
   16a64:	ldr	r1, [sp, #36]	; 0x24
   16a68:	mul	r1, r0, r1
   16a6c:	ldr	r0, [sl]
   16a70:	mov	r2, #1
   16a74:	bl	1a68 <fseek@plt>
   16a78:	add	r3, sp, #40	; 0x28
   16a7c:	ldr	r0, [r9, #4]
   16a80:	add	r1, r0, r4
   16a84:	sdiv	r2, r4, r0
   16a88:	mul	r0, r2, r0
   16a8c:	sub	r0, r0, r4
   16a90:	add	r0, r1, r0
   16a94:	ldr	r1, [r3, r8, lsl #2]
   16a98:	ldr	r2, [r5, r8, lsl #2]
   16a9c:	mla	r4, r2, r1, r0
   16aa0:	b	16ae0 <ReadDataSlabN+0x1a88>
   16aa4:	ldr	r0, [r5, r8, lsl #2]
   16aa8:	cmp	r0, #0
   16aac:	beq	16ae0 <ReadDataSlabN+0x1a88>
   16ab0:	ldr	r5, [r3, r8, lsl #2]
   16ab4:	ldr	r1, [sp, #36]	; 0x24
   16ab8:	mul	r0, r0, r1
   16abc:	mul	r1, r0, r5
   16ac0:	ldr	r0, [sl]
   16ac4:	mov	r2, #1
   16ac8:	bl	1a68 <fseek@plt>
   16acc:	add	r3, sp, #40	; 0x28
   16ad0:	ldr	r0, [sp, #12]
   16ad4:	ldr	r0, [r0, r8, lsl #2]
   16ad8:	mla	r4, r0, r5, r4
   16adc:	ldr	r5, [sp, #12]
   16ae0:	add	r0, r8, #1
   16ae4:	add	r1, r8, #2
   16ae8:	ldr	r2, [fp, #8]
   16aec:	cmp	r1, r2
   16af0:	blt	16a0c <ReadDataSlabN+0x19b4>
   16af4:	b	16b18 <ReadDataSlabN+0x1ac0>
   16af8:	ldr	r0, [sp, #4]
   16afc:	ldr	r5, [r0, r8, lsl #2]
   16b00:	ldr	r0, [sp, #36]	; 0x24
   16b04:	mul	r1, r5, r0
   16b08:	ldr	r0, [sl]
   16b0c:	mov	r2, #1
   16b10:	bl	1a68 <fseek@plt>
   16b14:	add	r4, r5, r4
   16b18:	ldr	r0, [fp, #24]
   16b1c:	ldr	r0, [r0]
   16b20:	ldr	r6, [sp, #8]
   16b24:	add	r6, r0, r6
   16b28:	mov	r0, #0
   16b2c:	ldr	r1, [sp, #16]
   16b30:	cmp	r6, r1
   16b34:	blt	16964 <ReadDataSlabN+0x190c>
   16b38:	b	150d4 <ReadDataSlabN+0x7c>
   16b3c:	ldr	r8, [fp, #16]
   16b40:	ldr	r0, [sp, #36]	; 0x24
   16b44:	mul	r1, r4, r0
   16b48:	ldr	r0, [sl]
   16b4c:	mov	r2, #1
   16b50:	bl	1a68 <fseek@plt>
   16b54:	ldr	r0, [r7]
   16b58:	cmp	r0, #1
   16b5c:	bne	180e0 <ReadDataSlabN+0x3088>
   16b60:	ldr	r0, [sp, #16]
   16b64:	cmp	r0, #1
   16b68:	sub	r0, fp, #72	; 0x48
   16b6c:	blt	18864 <ReadDataSlabN+0x380c>
   16b70:	add	r1, r8, #4
   16b74:	str	r1, [sp, #12]
   16b78:	add	r1, r5, #4
   16b7c:	str	r1, [sp, #20]
   16b80:	add	r1, sp, #80	; 0x50
   16b84:	orr	r7, r1, #4
   16b88:	orr	r0, r0, #4
   16b8c:	str	r0, [sp, #4]
   16b90:	mov	r6, #0
   16b94:	ldr	r5, [fp, #16]
   16b98:	ldr	r0, [r5]
   16b9c:	cmp	r0, #0
   16ba0:	beq	16bc8 <ReadDataSlabN+0x1b70>
   16ba4:	ldr	r9, [sp, #36]	; 0x24
   16ba8:	mul	r1, r0, r9
   16bac:	ldr	sl, [sp, #32]
   16bb0:	ldr	r0, [sl]
   16bb4:	mov	r2, #1
   16bb8:	bl	1a68 <fseek@plt>
   16bbc:	ldr	r0, [r5]
   16bc0:	add	r4, r0, r4
   16bc4:	b	16bd0 <ReadDataSlabN+0x1b78>
   16bc8:	ldr	r9, [sp, #36]	; 0x24
   16bcc:	ldr	sl, [sp, #32]
   16bd0:	ldr	r0, [sp, #24]
   16bd4:	str	r6, [sp, #8]
   16bd8:	add	r1, r0, r6, lsl #2
   16bdc:	ldr	r0, [fp, #24]
   16be0:	mov	r8, r0
   16be4:	ldr	r3, [r0]
   16be8:	mov	r0, sl
   16bec:	ldr	r2, [sp, #28]
   16bf0:	bl	cc24 <ReadUInt32Data>
   16bf4:	ldr	r6, [r5]
   16bf8:	ldr	r0, [fp, #12]
   16bfc:	ldr	r5, [r0]
   16c00:	sub	r0, r5, r6
   16c04:	ldr	r1, [r8]
   16c08:	sub	r0, r0, r1
   16c0c:	mul	r1, r0, r9
   16c10:	ldr	r0, [sl]
   16c14:	mov	r2, #1
   16c18:	bl	1a68 <fseek@plt>
   16c1c:	add	r0, r5, r4
   16c20:	sub	r4, r0, r6
   16c24:	ldr	r0, [fp, #8]
   16c28:	cmp	r0, #2
   16c2c:	blt	16d48 <ReadDataSlabN+0x1cf0>
   16c30:	mov	r0, #0
   16c34:	add	r3, sp, #40	; 0x28
   16c38:	ldr	r5, [sp, #12]
   16c3c:	mov	r8, r0
   16c40:	ldr	r0, [r7, r0, lsl #2]
   16c44:	add	r0, r0, #1
   16c48:	str	r0, [r7, r8, lsl #2]
   16c4c:	ldr	r1, [sp, #20]
   16c50:	ldr	r1, [r1, r8, lsl #2]
   16c54:	sdiv	r2, r0, r1
   16c58:	mls	r0, r2, r1, r0
   16c5c:	cmp	r0, #0
   16c60:	bne	16d28 <ReadDataSlabN+0x1cd0>
   16c64:	mov	r0, #0
   16c68:	str	r0, [r7, r8, lsl #2]
   16c6c:	add	r9, r3, r8, lsl #2
   16c70:	ldr	r0, [r9, #4]
   16c74:	sdiv	r1, r4, r0
   16c78:	mls	r1, r1, r0, r4
   16c7c:	cmp	r1, #0
   16c80:	beq	16cd4 <ReadDataSlabN+0x1c7c>
   16c84:	ldr	r2, [r3, r8, lsl #2]
   16c88:	ldr	r3, [r5, r8, lsl #2]
   16c8c:	sub	r0, r0, r1
   16c90:	mla	r0, r3, r2, r0
   16c94:	ldr	r1, [sp, #36]	; 0x24
   16c98:	mul	r1, r0, r1
   16c9c:	ldr	r0, [sl]
   16ca0:	mov	r2, #1
   16ca4:	bl	1a68 <fseek@plt>
   16ca8:	add	r3, sp, #40	; 0x28
   16cac:	ldr	r0, [r9, #4]
   16cb0:	add	r1, r0, r4
   16cb4:	sdiv	r2, r4, r0
   16cb8:	mul	r0, r2, r0
   16cbc:	sub	r0, r0, r4
   16cc0:	add	r0, r1, r0
   16cc4:	ldr	r1, [r3, r8, lsl #2]
   16cc8:	ldr	r2, [r5, r8, lsl #2]
   16ccc:	mla	r4, r2, r1, r0
   16cd0:	b	16d10 <ReadDataSlabN+0x1cb8>
   16cd4:	ldr	r0, [r5, r8, lsl #2]
   16cd8:	cmp	r0, #0
   16cdc:	beq	16d10 <ReadDataSlabN+0x1cb8>
   16ce0:	ldr	r5, [r3, r8, lsl #2]
   16ce4:	ldr	r1, [sp, #36]	; 0x24
   16ce8:	mul	r0, r0, r1
   16cec:	mul	r1, r0, r5
   16cf0:	ldr	r0, [sl]
   16cf4:	mov	r2, #1
   16cf8:	bl	1a68 <fseek@plt>
   16cfc:	add	r3, sp, #40	; 0x28
   16d00:	ldr	r0, [sp, #12]
   16d04:	ldr	r0, [r0, r8, lsl #2]
   16d08:	mla	r4, r0, r5, r4
   16d0c:	ldr	r5, [sp, #12]
   16d10:	add	r0, r8, #1
   16d14:	add	r1, r8, #2
   16d18:	ldr	r2, [fp, #8]
   16d1c:	cmp	r1, r2
   16d20:	blt	16c3c <ReadDataSlabN+0x1be4>
   16d24:	b	16d48 <ReadDataSlabN+0x1cf0>
   16d28:	ldr	r0, [sp, #4]
   16d2c:	ldr	r5, [r0, r8, lsl #2]
   16d30:	ldr	r0, [sp, #36]	; 0x24
   16d34:	mul	r1, r5, r0
   16d38:	ldr	r0, [sl]
   16d3c:	mov	r2, #1
   16d40:	bl	1a68 <fseek@plt>
   16d44:	add	r4, r5, r4
   16d48:	ldr	r0, [fp, #24]
   16d4c:	ldr	r0, [r0]
   16d50:	ldr	r6, [sp, #8]
   16d54:	add	r6, r0, r6
   16d58:	mov	r0, #0
   16d5c:	ldr	r1, [sp, #16]
   16d60:	cmp	r6, r1
   16d64:	blt	16b94 <ReadDataSlabN+0x1b3c>
   16d68:	b	150d4 <ReadDataSlabN+0x7c>
   16d6c:	ldr	sl, [fp, #16]
   16d70:	ldr	r0, [sp, #36]	; 0x24
   16d74:	mul	r1, r4, r0
   16d78:	ldr	r0, [sp, #32]
   16d7c:	ldr	r0, [r0]
   16d80:	mov	r2, #1
   16d84:	bl	1a68 <fseek@plt>
   16d88:	ldr	r0, [r7]
   16d8c:	cmp	r0, #1
   16d90:	ldr	r8, [sp, #28]
   16d94:	bne	18368 <ReadDataSlabN+0x3310>
   16d98:	ldr	r0, [sp, #16]
   16d9c:	cmp	r0, #1
   16da0:	sub	r0, fp, #72	; 0x48
   16da4:	blt	18864 <ReadDataSlabN+0x380c>
   16da8:	mov	r6, r8
   16dac:	add	r1, sl, #4
   16db0:	str	r1, [sp, #12]
   16db4:	add	r1, r5, #4
   16db8:	str	r1, [sp, #20]
   16dbc:	add	r1, sp, #80	; 0x50
   16dc0:	orr	sl, r1, #4
   16dc4:	orr	r0, r0, #4
   16dc8:	str	r0, [sp, #4]
   16dcc:	mov	r7, #0
   16dd0:	ldr	r5, [fp, #16]
   16dd4:	ldr	r0, [r5]
   16dd8:	cmp	r0, #0
   16ddc:	beq	16e04 <ReadDataSlabN+0x1dac>
   16de0:	ldr	r9, [sp, #36]	; 0x24
   16de4:	mul	r1, r0, r9
   16de8:	ldr	r8, [sp, #32]
   16dec:	ldr	r0, [r8]
   16df0:	mov	r2, #1
   16df4:	bl	1a68 <fseek@plt>
   16df8:	ldr	r0, [r5]
   16dfc:	add	r4, r0, r4
   16e00:	b	16e0c <ReadDataSlabN+0x1db4>
   16e04:	ldr	r9, [sp, #36]	; 0x24
   16e08:	ldr	r8, [sp, #32]
   16e0c:	mov	r2, r6
   16e10:	ldr	r0, [sp, #24]
   16e14:	str	r7, [sp, #8]
   16e18:	add	r1, r0, r7, lsl #3
   16e1c:	ldr	r0, [fp, #24]
   16e20:	mov	r7, r0
   16e24:	ldr	r3, [r0]
   16e28:	mov	r0, r8
   16e2c:	bl	7af8 <ReadInt64Data>
   16e30:	ldr	r6, [r5]
   16e34:	ldr	r0, [fp, #12]
   16e38:	ldr	r5, [r0]
   16e3c:	sub	r0, r5, r6
   16e40:	ldr	r1, [r7]
   16e44:	sub	r0, r0, r1
   16e48:	mul	r1, r0, r9
   16e4c:	ldr	r0, [r8]
   16e50:	mov	r2, #1
   16e54:	bl	1a68 <fseek@plt>
   16e58:	add	r0, r5, r4
   16e5c:	sub	r4, r0, r6
   16e60:	ldr	r0, [fp, #8]
   16e64:	cmp	r0, #2
   16e68:	blt	16f6c <ReadDataSlabN+0x1f14>
   16e6c:	mov	r7, r8
   16e70:	mov	r0, #0
   16e74:	ldr	r6, [sp, #28]
   16e78:	add	r3, sp, #40	; 0x28
   16e7c:	ldr	r5, [sp, #12]
   16e80:	mov	r8, r0
   16e84:	ldr	r0, [sl, r0, lsl #2]
   16e88:	add	r0, r0, #1
   16e8c:	str	r0, [sl, r8, lsl #2]
   16e90:	ldr	r1, [sp, #20]
   16e94:	ldr	r1, [r1, r8, lsl #2]
   16e98:	sdiv	r2, r0, r1
   16e9c:	mls	r0, r2, r1, r0
   16ea0:	cmp	r0, #0
   16ea4:	bne	16f74 <ReadDataSlabN+0x1f1c>
   16ea8:	mov	r0, #0
   16eac:	str	r0, [sl, r8, lsl #2]
   16eb0:	add	r9, r3, r8, lsl #2
   16eb4:	ldr	r0, [r9, #4]
   16eb8:	sdiv	r1, r4, r0
   16ebc:	mls	r1, r1, r0, r4
   16ec0:	cmp	r1, #0
   16ec4:	beq	16f18 <ReadDataSlabN+0x1ec0>
   16ec8:	ldr	r2, [r3, r8, lsl #2]
   16ecc:	ldr	r3, [r5, r8, lsl #2]
   16ed0:	sub	r0, r0, r1
   16ed4:	mla	r0, r3, r2, r0
   16ed8:	ldr	r1, [sp, #36]	; 0x24
   16edc:	mul	r1, r0, r1
   16ee0:	ldr	r0, [r7]
   16ee4:	mov	r2, #1
   16ee8:	bl	1a68 <fseek@plt>
   16eec:	add	r3, sp, #40	; 0x28
   16ef0:	ldr	r0, [r9, #4]
   16ef4:	add	r1, r0, r4
   16ef8:	sdiv	r2, r4, r0
   16efc:	mul	r0, r2, r0
   16f00:	sub	r0, r0, r4
   16f04:	add	r0, r1, r0
   16f08:	ldr	r1, [r3, r8, lsl #2]
   16f0c:	ldr	r2, [r5, r8, lsl #2]
   16f10:	mla	r4, r2, r1, r0
   16f14:	b	16f54 <ReadDataSlabN+0x1efc>
   16f18:	ldr	r0, [r5, r8, lsl #2]
   16f1c:	cmp	r0, #0
   16f20:	beq	16f54 <ReadDataSlabN+0x1efc>
   16f24:	ldr	r5, [r3, r8, lsl #2]
   16f28:	ldr	r1, [sp, #36]	; 0x24
   16f2c:	mul	r0, r0, r1
   16f30:	mul	r1, r0, r5
   16f34:	ldr	r0, [r7]
   16f38:	mov	r2, #1
   16f3c:	bl	1a68 <fseek@plt>
   16f40:	add	r3, sp, #40	; 0x28
   16f44:	ldr	r0, [sp, #12]
   16f48:	ldr	r0, [r0, r8, lsl #2]
   16f4c:	mla	r4, r0, r5, r4
   16f50:	ldr	r5, [sp, #12]
   16f54:	add	r0, r8, #1
   16f58:	add	r1, r8, #2
   16f5c:	ldr	r2, [fp, #8]
   16f60:	cmp	r1, r2
   16f64:	blt	16e80 <ReadDataSlabN+0x1e28>
   16f68:	b	16f94 <ReadDataSlabN+0x1f3c>
   16f6c:	ldr	r6, [sp, #28]
   16f70:	b	16f94 <ReadDataSlabN+0x1f3c>
   16f74:	ldr	r0, [sp, #4]
   16f78:	ldr	r5, [r0, r8, lsl #2]
   16f7c:	ldr	r0, [sp, #36]	; 0x24
   16f80:	mul	r1, r5, r0
   16f84:	ldr	r0, [r7]
   16f88:	mov	r2, #1
   16f8c:	bl	1a68 <fseek@plt>
   16f90:	add	r4, r5, r4
   16f94:	ldr	r0, [fp, #24]
   16f98:	ldr	r0, [r0]
   16f9c:	ldr	r7, [sp, #8]
   16fa0:	add	r7, r0, r7
   16fa4:	mov	r0, #0
   16fa8:	ldr	r1, [sp, #16]
   16fac:	cmp	r7, r1
   16fb0:	blt	16dd0 <ReadDataSlabN+0x1d78>
   16fb4:	b	150d4 <ReadDataSlabN+0x7c>
   16fb8:	ldr	r8, [fp, #16]
   16fbc:	ldr	r0, [sp, #36]	; 0x24
   16fc0:	mul	r1, r4, r0
   16fc4:	ldr	r0, [sl]
   16fc8:	mov	r2, #1
   16fcc:	bl	1a68 <fseek@plt>
   16fd0:	ldr	r0, [r7]
   16fd4:	cmp	r0, #1
   16fd8:	bne	185dc <ReadDataSlabN+0x3584>
   16fdc:	ldr	r0, [sp, #16]
   16fe0:	cmp	r0, #1
   16fe4:	sub	r0, fp, #72	; 0x48
   16fe8:	blt	18864 <ReadDataSlabN+0x380c>
   16fec:	add	r1, r8, #4
   16ff0:	str	r1, [sp, #12]
   16ff4:	add	r1, r5, #4
   16ff8:	str	r1, [sp, #20]
   16ffc:	add	r1, sp, #80	; 0x50
   17000:	orr	r7, r1, #4
   17004:	orr	r0, r0, #4
   17008:	str	r0, [sp, #4]
   1700c:	mov	r6, #0
   17010:	ldr	r5, [fp, #16]
   17014:	ldr	r0, [r5]
   17018:	cmp	r0, #0
   1701c:	beq	17044 <ReadDataSlabN+0x1fec>
   17020:	ldr	r9, [sp, #36]	; 0x24
   17024:	mul	r1, r0, r9
   17028:	ldr	sl, [sp, #32]
   1702c:	ldr	r0, [sl]
   17030:	mov	r2, #1
   17034:	bl	1a68 <fseek@plt>
   17038:	ldr	r0, [r5]
   1703c:	add	r4, r0, r4
   17040:	b	1704c <ReadDataSlabN+0x1ff4>
   17044:	ldr	r9, [sp, #36]	; 0x24
   17048:	ldr	sl, [sp, #32]
   1704c:	ldr	r0, [sp, #24]
   17050:	str	r6, [sp, #8]
   17054:	add	r1, r0, r6, lsl #3
   17058:	ldr	r0, [fp, #24]
   1705c:	mov	r8, r0
   17060:	ldr	r3, [r0]
   17064:	mov	r0, sl
   17068:	ldr	r2, [sp, #28]
   1706c:	bl	96a4 <ReadUInt64Data>
   17070:	ldr	r6, [r5]
   17074:	ldr	r0, [fp, #12]
   17078:	ldr	r5, [r0]
   1707c:	sub	r0, r5, r6
   17080:	ldr	r1, [r8]
   17084:	sub	r0, r0, r1
   17088:	mul	r1, r0, r9
   1708c:	ldr	r0, [sl]
   17090:	mov	r2, #1
   17094:	bl	1a68 <fseek@plt>
   17098:	add	r0, r5, r4
   1709c:	sub	r4, r0, r6
   170a0:	ldr	r0, [fp, #8]
   170a4:	cmp	r0, #2
   170a8:	blt	171c4 <ReadDataSlabN+0x216c>
   170ac:	mov	r0, #0
   170b0:	add	r3, sp, #40	; 0x28
   170b4:	ldr	r5, [sp, #12]
   170b8:	mov	r8, r0
   170bc:	ldr	r0, [r7, r0, lsl #2]
   170c0:	add	r0, r0, #1
   170c4:	str	r0, [r7, r8, lsl #2]
   170c8:	ldr	r1, [sp, #20]
   170cc:	ldr	r1, [r1, r8, lsl #2]
   170d0:	sdiv	r2, r0, r1
   170d4:	mls	r0, r2, r1, r0
   170d8:	cmp	r0, #0
   170dc:	bne	171a4 <ReadDataSlabN+0x214c>
   170e0:	mov	r0, #0
   170e4:	str	r0, [r7, r8, lsl #2]
   170e8:	add	r9, r3, r8, lsl #2
   170ec:	ldr	r0, [r9, #4]
   170f0:	sdiv	r1, r4, r0
   170f4:	mls	r1, r1, r0, r4
   170f8:	cmp	r1, #0
   170fc:	beq	17150 <ReadDataSlabN+0x20f8>
   17100:	ldr	r2, [r3, r8, lsl #2]
   17104:	ldr	r3, [r5, r8, lsl #2]
   17108:	sub	r0, r0, r1
   1710c:	mla	r0, r3, r2, r0
   17110:	ldr	r1, [sp, #36]	; 0x24
   17114:	mul	r1, r0, r1
   17118:	ldr	r0, [sl]
   1711c:	mov	r2, #1
   17120:	bl	1a68 <fseek@plt>
   17124:	add	r3, sp, #40	; 0x28
   17128:	ldr	r0, [r9, #4]
   1712c:	add	r1, r0, r4
   17130:	sdiv	r2, r4, r0
   17134:	mul	r0, r2, r0
   17138:	sub	r0, r0, r4
   1713c:	add	r0, r1, r0
   17140:	ldr	r1, [r3, r8, lsl #2]
   17144:	ldr	r2, [r5, r8, lsl #2]
   17148:	mla	r4, r2, r1, r0
   1714c:	b	1718c <ReadDataSlabN+0x2134>
   17150:	ldr	r0, [r5, r8, lsl #2]
   17154:	cmp	r0, #0
   17158:	beq	1718c <ReadDataSlabN+0x2134>
   1715c:	ldr	r5, [r3, r8, lsl #2]
   17160:	ldr	r1, [sp, #36]	; 0x24
   17164:	mul	r0, r0, r1
   17168:	mul	r1, r0, r5
   1716c:	ldr	r0, [sl]
   17170:	mov	r2, #1
   17174:	bl	1a68 <fseek@plt>
   17178:	add	r3, sp, #40	; 0x28
   1717c:	ldr	r0, [sp, #12]
   17180:	ldr	r0, [r0, r8, lsl #2]
   17184:	mla	r4, r0, r5, r4
   17188:	ldr	r5, [sp, #12]
   1718c:	add	r0, r8, #1
   17190:	add	r1, r8, #2
   17194:	ldr	r2, [fp, #8]
   17198:	cmp	r1, r2
   1719c:	blt	170b8 <ReadDataSlabN+0x2060>
   171a0:	b	171c4 <ReadDataSlabN+0x216c>
   171a4:	ldr	r0, [sp, #4]
   171a8:	ldr	r5, [r0, r8, lsl #2]
   171ac:	ldr	r0, [sp, #36]	; 0x24
   171b0:	mul	r1, r5, r0
   171b4:	ldr	r0, [sl]
   171b8:	mov	r2, #1
   171bc:	bl	1a68 <fseek@plt>
   171c0:	add	r4, r5, r4
   171c4:	ldr	r0, [fp, #24]
   171c8:	ldr	r0, [r0]
   171cc:	ldr	r6, [sp, #8]
   171d0:	add	r6, r0, r6
   171d4:	mov	r0, #0
   171d8:	ldr	r1, [sp, #16]
   171dc:	cmp	r6, r1
   171e0:	blt	17010 <ReadDataSlabN+0x1fb8>
   171e4:	b	150d4 <ReadDataSlabN+0x7c>
   171e8:	ldr	r0, [sp, #16]
   171ec:	cmp	r0, #1
   171f0:	sub	r0, fp, #72	; 0x48
   171f4:	blt	18864 <ReadDataSlabN+0x380c>
   171f8:	add	r8, r8, #4
   171fc:	add	r9, r5, #4
   17200:	add	r1, sp, #80	; 0x50
   17204:	orr	r6, r1, #4
   17208:	orr	r0, r0, #4
   1720c:	str	r0, [sp]
   17210:	mov	r0, #0
   17214:	str	r0, [sp, #20]
   17218:	str	r8, [sp, #8]
   1721c:	str	r9, [sp, #4]
   17220:	str	r6, [sp, #12]
   17224:	ldr	r5, [fp, #16]
   17228:	ldr	r0, [r5]
   1722c:	cmp	r0, #0
   17230:	beq	17260 <ReadDataSlabN+0x2208>
   17234:	mov	r7, r5
   17238:	ldr	r1, [sp, #36]	; 0x24
   1723c:	mul	r1, r0, r1
   17240:	ldr	r5, [sp, #32]
   17244:	ldr	r0, [r5]
   17248:	mov	r2, #1
   1724c:	bl	1a68 <fseek@plt>
   17250:	ldr	r0, [r7]
   17254:	add	r4, r0, r4
   17258:	ldr	r7, [fp, #24]
   1725c:	b	17268 <ReadDataSlabN+0x2210>
   17260:	ldr	r7, [fp, #24]
   17264:	ldr	r5, [sp, #32]
   17268:	mov	r2, r5
   1726c:	ldr	r0, [r7]
   17270:	cmp	r0, #1
   17274:	blt	172e8 <ReadDataSlabN+0x2290>
   17278:	ldr	r0, [sp, #24]
   1727c:	ldr	r1, [sp, #20]
   17280:	add	r5, r0, r1, lsl #2
   17284:	mov	r9, #0
   17288:	ldr	r8, [fp, #20]
   1728c:	ldr	r7, [sp, #28]
   17290:	ldr	sl, [fp, #24]
   17294:	mov	r6, r2
   17298:	mov	r0, r6
   1729c:	mov	r1, r5
   172a0:	mov	r2, r7
   172a4:	mov	r3, #1
   172a8:	bl	5ea0 <ReadSingleData>
   172ac:	ldr	r0, [r8]
   172b0:	sub	r0, r0, #1
   172b4:	ldr	r1, [sp, #36]	; 0x24
   172b8:	mul	r1, r0, r1
   172bc:	ldr	r0, [r6]
   172c0:	mov	r2, #1
   172c4:	bl	1a68 <fseek@plt>
   172c8:	ldr	r0, [r8]
   172cc:	add	r4, r0, r4
   172d0:	add	r5, r5, #4
   172d4:	add	r9, r9, #1
   172d8:	ldr	r0, [sl]
   172dc:	cmp	r9, r0
   172e0:	blt	17298 <ReadDataSlabN+0x2240>
   172e4:	b	172f0 <ReadDataSlabN+0x2298>
   172e8:	ldr	r8, [fp, #20]
   172ec:	mov	r6, r2
   172f0:	ldr	r1, [fp, #12]
   172f4:	ldr	r1, [r1]
   172f8:	ldr	r2, [r8]
   172fc:	mls	r0, r2, r0, r1
   17300:	ldr	r1, [fp, #16]
   17304:	ldr	r1, [r1]
   17308:	sub	r5, r0, r1
   1730c:	ldr	r0, [sp, #36]	; 0x24
   17310:	mul	r1, r5, r0
   17314:	ldr	r0, [r6]
   17318:	mov	r2, #1
   1731c:	bl	1a68 <fseek@plt>
   17320:	add	r4, r5, r4
   17324:	ldr	r0, [fp, #8]
   17328:	cmp	r0, #2
   1732c:	blt	17434 <ReadDataSlabN+0x23dc>
   17330:	mov	sl, r6
   17334:	mov	r0, #0
   17338:	add	r3, sp, #40	; 0x28
   1733c:	ldr	r8, [sp, #8]
   17340:	ldr	r9, [sp, #4]
   17344:	ldr	r6, [sp, #12]
   17348:	ldr	r7, [fp, #24]
   1734c:	mov	r5, r0
   17350:	ldr	r0, [r6, r0, lsl #2]
   17354:	add	r0, r0, #1
   17358:	str	r0, [r6, r5, lsl #2]
   1735c:	ldr	r1, [r9, r5, lsl #2]
   17360:	sdiv	r2, r0, r1
   17364:	mls	r0, r2, r1, r0
   17368:	cmp	r0, #0
   1736c:	bne	1743c <ReadDataSlabN+0x23e4>
   17370:	mov	r0, #0
   17374:	str	r0, [r6, r5, lsl #2]
   17378:	add	r7, r3, r5, lsl #2
   1737c:	ldr	r0, [r7, #4]
   17380:	sdiv	r1, r4, r0
   17384:	mls	r1, r1, r0, r4
   17388:	cmp	r1, #0
   1738c:	beq	173e0 <ReadDataSlabN+0x2388>
   17390:	ldr	r2, [r3, r5, lsl #2]
   17394:	ldr	r3, [r8, r5, lsl #2]
   17398:	sub	r0, r0, r1
   1739c:	mla	r0, r3, r2, r0
   173a0:	ldr	r1, [sp, #36]	; 0x24
   173a4:	mul	r1, r0, r1
   173a8:	ldr	r0, [sl]
   173ac:	mov	r2, #1
   173b0:	bl	1a68 <fseek@plt>
   173b4:	add	r3, sp, #40	; 0x28
   173b8:	ldr	r0, [r7, #4]
   173bc:	add	r1, r0, r4
   173c0:	sdiv	r2, r4, r0
   173c4:	mul	r0, r2, r0
   173c8:	sub	r0, r0, r4
   173cc:	add	r0, r1, r0
   173d0:	ldr	r1, [r3, r5, lsl #2]
   173d4:	ldr	r2, [r8, r5, lsl #2]
   173d8:	mla	r4, r2, r1, r0
   173dc:	b	17418 <ReadDataSlabN+0x23c0>
   173e0:	ldr	r0, [r8, r5, lsl #2]
   173e4:	cmp	r0, #0
   173e8:	beq	17418 <ReadDataSlabN+0x23c0>
   173ec:	ldr	r6, [r3, r5, lsl #2]
   173f0:	ldr	r1, [sp, #36]	; 0x24
   173f4:	mul	r0, r0, r1
   173f8:	mul	r1, r0, r6
   173fc:	ldr	r0, [sl]
   17400:	mov	r2, #1
   17404:	bl	1a68 <fseek@plt>
   17408:	add	r3, sp, #40	; 0x28
   1740c:	ldr	r0, [r8, r5, lsl #2]
   17410:	mla	r4, r0, r6, r4
   17414:	ldr	r6, [sp, #12]
   17418:	ldr	r7, [fp, #24]
   1741c:	add	r0, r5, #1
   17420:	add	r1, r5, #2
   17424:	ldr	r2, [fp, #8]
   17428:	cmp	r1, r2
   1742c:	blt	1734c <ReadDataSlabN+0x22f4>
   17430:	b	1745c <ReadDataSlabN+0x2404>
   17434:	ldr	r7, [fp, #24]
   17438:	b	1745c <ReadDataSlabN+0x2404>
   1743c:	ldr	r0, [sp]
   17440:	ldr	r5, [r0, r5, lsl #2]
   17444:	ldr	r0, [sp, #36]	; 0x24
   17448:	mul	r1, r5, r0
   1744c:	ldr	r0, [sl]
   17450:	mov	r2, #1
   17454:	bl	1a68 <fseek@plt>
   17458:	add	r4, r5, r4
   1745c:	ldr	r0, [r7]
   17460:	ldr	r2, [sp, #20]
   17464:	add	r2, r0, r2
   17468:	mov	r0, #0
   1746c:	ldr	r1, [sp, #16]
   17470:	str	r2, [sp, #20]
   17474:	cmp	r2, r1
   17478:	blt	17224 <ReadDataSlabN+0x21cc>
   1747c:	b	150d4 <ReadDataSlabN+0x7c>
   17480:	ldr	r0, [sp, #12]
   17484:	cmp	r0, #1
   17488:	sub	r0, fp, #72	; 0x48
   1748c:	blt	18864 <ReadDataSlabN+0x380c>
   17490:	add	r9, r8, #4
   17494:	add	r1, r5, #4
   17498:	str	r1, [sp, #20]
   1749c:	add	r1, sp, #80	; 0x50
   174a0:	orr	r7, r1, #4
   174a4:	orr	r0, r0, #4
   174a8:	str	r0, [sp]
   174ac:	mov	r5, #0
   174b0:	str	r9, [sp, #4]
   174b4:	str	r7, [sp, #16]
   174b8:	ldr	r8, [fp, #16]
   174bc:	ldr	r0, [r8]
   174c0:	cmp	r0, #0
   174c4:	beq	174f0 <ReadDataSlabN+0x2498>
   174c8:	ldr	r1, [sp, #36]	; 0x24
   174cc:	mul	r1, r0, r1
   174d0:	ldr	sl, [sp, #32]
   174d4:	ldr	r0, [sl]
   174d8:	mov	r2, #1
   174dc:	bl	1a68 <fseek@plt>
   174e0:	ldr	r0, [r8]
   174e4:	add	r4, r0, r4
   174e8:	ldr	r0, [fp, #24]
   174ec:	b	174f8 <ReadDataSlabN+0x24a0>
   174f0:	ldr	r0, [fp, #24]
   174f4:	ldr	sl, [sp, #32]
   174f8:	ldr	r0, [r0]
   174fc:	cmp	r0, #1
   17500:	str	r5, [sp, #8]
   17504:	blt	1756c <ReadDataSlabN+0x2514>
   17508:	ldr	r0, [sp, #24]
   1750c:	add	r7, r0, r5
   17510:	mov	r5, #0
   17514:	ldr	r6, [sp, #36]	; 0x24
   17518:	ldr	r9, [fp, #20]
   1751c:	ldr	r8, [sp, #28]
   17520:	add	r1, r7, r5
   17524:	mov	r0, sl
   17528:	mov	r2, r8
   1752c:	mov	r3, #1
   17530:	bl	11a00 <ReadInt8Data>
   17534:	ldr	r0, [r9]
   17538:	sub	r0, r0, #1
   1753c:	mul	r1, r0, r6
   17540:	ldr	r0, [sl]
   17544:	mov	r2, #1
   17548:	bl	1a68 <fseek@plt>
   1754c:	ldr	r0, [r9]
   17550:	add	r4, r0, r4
   17554:	add	r5, r5, #1
   17558:	ldr	r0, [fp, #24]
   1755c:	ldr	r0, [r0]
   17560:	cmp	r5, r0
   17564:	blt	17520 <ReadDataSlabN+0x24c8>
   17568:	b	17574 <ReadDataSlabN+0x251c>
   1756c:	ldr	r6, [sp, #36]	; 0x24
   17570:	ldr	r9, [fp, #20]
   17574:	ldr	r1, [fp, #12]
   17578:	ldr	r1, [r1]
   1757c:	ldr	r2, [r9]
   17580:	mls	r0, r2, r0, r1
   17584:	ldr	r1, [fp, #16]
   17588:	ldr	r1, [r1]
   1758c:	sub	r5, r0, r1
   17590:	mul	r1, r5, r6
   17594:	ldr	r0, [sl]
   17598:	mov	r2, #1
   1759c:	bl	1a68 <fseek@plt>
   175a0:	add	r4, r5, r4
   175a4:	ldr	r0, [fp, #8]
   175a8:	cmp	r0, #2
   175ac:	blt	176c0 <ReadDataSlabN+0x2668>
   175b0:	mov	r0, #0
   175b4:	add	r3, sp, #40	; 0x28
   175b8:	ldr	r9, [sp, #4]
   175bc:	ldr	r7, [sp, #16]
   175c0:	mov	r8, r0
   175c4:	ldr	r0, [r7, r0, lsl #2]
   175c8:	add	r0, r0, #1
   175cc:	str	r0, [r7, r8, lsl #2]
   175d0:	ldr	r1, [sp, #20]
   175d4:	ldr	r1, [r1, r8, lsl #2]
   175d8:	sdiv	r2, r0, r1
   175dc:	mls	r0, r2, r1, r0
   175e0:	cmp	r0, #0
   175e4:	bne	176a4 <ReadDataSlabN+0x264c>
   175e8:	mov	r0, #0
   175ec:	str	r0, [r7, r8, lsl #2]
   175f0:	add	r5, r3, r8, lsl #2
   175f4:	ldr	r0, [r5, #4]
   175f8:	sdiv	r1, r4, r0
   175fc:	mls	r1, r1, r0, r4
   17600:	cmp	r1, #0
   17604:	beq	17658 <ReadDataSlabN+0x2600>
   17608:	ldr	r2, [r3, r8, lsl #2]
   1760c:	ldr	r3, [r9, r8, lsl #2]
   17610:	sub	r0, r0, r1
   17614:	mla	r0, r3, r2, r0
   17618:	mul	r1, r0, r6
   1761c:	ldr	r0, [sl]
   17620:	mov	r2, #1
   17624:	bl	1a68 <fseek@plt>
   17628:	ldr	r7, [sp, #16]
   1762c:	add	r3, sp, #40	; 0x28
   17630:	ldr	r0, [r5, #4]
   17634:	add	r1, r0, r4
   17638:	sdiv	r2, r4, r0
   1763c:	mul	r0, r2, r0
   17640:	sub	r0, r0, r4
   17644:	add	r0, r1, r0
   17648:	ldr	r1, [r3, r8, lsl #2]
   1764c:	ldr	r2, [r9, r8, lsl #2]
   17650:	mla	r4, r2, r1, r0
   17654:	b	1768c <ReadDataSlabN+0x2634>
   17658:	ldr	r0, [r9, r8, lsl #2]
   1765c:	cmp	r0, #0
   17660:	beq	1768c <ReadDataSlabN+0x2634>
   17664:	ldr	r5, [r3, r8, lsl #2]
   17668:	mul	r0, r0, r6
   1766c:	mul	r1, r0, r5
   17670:	ldr	r0, [sl]
   17674:	mov	r2, #1
   17678:	bl	1a68 <fseek@plt>
   1767c:	ldr	r7, [sp, #16]
   17680:	add	r3, sp, #40	; 0x28
   17684:	ldr	r0, [r9, r8, lsl #2]
   17688:	mla	r4, r0, r5, r4
   1768c:	add	r0, r8, #1
   17690:	add	r1, r8, #2
   17694:	ldr	r2, [fp, #8]
   17698:	cmp	r1, r2
   1769c:	blt	175c0 <ReadDataSlabN+0x2568>
   176a0:	b	176c0 <ReadDataSlabN+0x2668>
   176a4:	ldr	r0, [sp]
   176a8:	ldr	r5, [r0, r8, lsl #2]
   176ac:	mul	r1, r5, r6
   176b0:	ldr	r0, [sl]
   176b4:	mov	r2, #1
   176b8:	bl	1a68 <fseek@plt>
   176bc:	add	r4, r5, r4
   176c0:	ldr	r0, [fp, #24]
   176c4:	ldr	r0, [r0]
   176c8:	ldr	r5, [sp, #8]
   176cc:	add	r5, r0, r5
   176d0:	mov	r0, #0
   176d4:	ldr	r1, [sp, #12]
   176d8:	cmp	r5, r1
   176dc:	blt	174b8 <ReadDataSlabN+0x2460>
   176e0:	b	150d4 <ReadDataSlabN+0x7c>
   176e4:	ldr	r0, [sp, #12]
   176e8:	cmp	r0, #1
   176ec:	sub	r0, fp, #72	; 0x48
   176f0:	blt	18864 <ReadDataSlabN+0x380c>
   176f4:	add	r9, r8, #4
   176f8:	add	r1, r5, #4
   176fc:	str	r1, [sp, #20]
   17700:	add	r1, sp, #80	; 0x50
   17704:	orr	r7, r1, #4
   17708:	orr	r0, r0, #4
   1770c:	str	r0, [sp]
   17710:	mov	r5, #0
   17714:	str	r9, [sp, #4]
   17718:	str	r7, [sp, #16]
   1771c:	ldr	r8, [fp, #16]
   17720:	ldr	r0, [r8]
   17724:	cmp	r0, #0
   17728:	beq	17754 <ReadDataSlabN+0x26fc>
   1772c:	ldr	r1, [sp, #36]	; 0x24
   17730:	mul	r1, r0, r1
   17734:	ldr	sl, [sp, #32]
   17738:	ldr	r0, [sl]
   1773c:	mov	r2, #1
   17740:	bl	1a68 <fseek@plt>
   17744:	ldr	r0, [r8]
   17748:	add	r4, r0, r4
   1774c:	ldr	r0, [fp, #24]
   17750:	b	1775c <ReadDataSlabN+0x2704>
   17754:	ldr	r0, [fp, #24]
   17758:	ldr	sl, [sp, #32]
   1775c:	ldr	r0, [r0]
   17760:	cmp	r0, #1
   17764:	str	r5, [sp, #8]
   17768:	blt	177d0 <ReadDataSlabN+0x2778>
   1776c:	ldr	r0, [sp, #24]
   17770:	add	r7, r0, r5
   17774:	mov	r5, #0
   17778:	ldr	r6, [sp, #36]	; 0x24
   1777c:	ldr	r9, [fp, #20]
   17780:	ldr	r8, [sp, #28]
   17784:	add	r1, r7, r5
   17788:	mov	r0, sl
   1778c:	mov	r2, r8
   17790:	mov	r3, #1
   17794:	bl	133ec <ReadUInt8Data>
   17798:	ldr	r0, [r9]
   1779c:	sub	r0, r0, #1
   177a0:	mul	r1, r0, r6
   177a4:	ldr	r0, [sl]
   177a8:	mov	r2, #1
   177ac:	bl	1a68 <fseek@plt>
   177b0:	ldr	r0, [r9]
   177b4:	add	r4, r0, r4
   177b8:	add	r5, r5, #1
   177bc:	ldr	r0, [fp, #24]
   177c0:	ldr	r0, [r0]
   177c4:	cmp	r5, r0
   177c8:	blt	17784 <ReadDataSlabN+0x272c>
   177cc:	b	177d8 <ReadDataSlabN+0x2780>
   177d0:	ldr	r6, [sp, #36]	; 0x24
   177d4:	ldr	r9, [fp, #20]
   177d8:	ldr	r1, [fp, #12]
   177dc:	ldr	r1, [r1]
   177e0:	ldr	r2, [r9]
   177e4:	mls	r0, r2, r0, r1
   177e8:	ldr	r1, [fp, #16]
   177ec:	ldr	r1, [r1]
   177f0:	sub	r5, r0, r1
   177f4:	mul	r1, r5, r6
   177f8:	ldr	r0, [sl]
   177fc:	mov	r2, #1
   17800:	bl	1a68 <fseek@plt>
   17804:	add	r4, r5, r4
   17808:	ldr	r0, [fp, #8]
   1780c:	cmp	r0, #2
   17810:	blt	17924 <ReadDataSlabN+0x28cc>
   17814:	mov	r0, #0
   17818:	add	r3, sp, #40	; 0x28
   1781c:	ldr	r9, [sp, #4]
   17820:	ldr	r7, [sp, #16]
   17824:	mov	r8, r0
   17828:	ldr	r0, [r7, r0, lsl #2]
   1782c:	add	r0, r0, #1
   17830:	str	r0, [r7, r8, lsl #2]
   17834:	ldr	r1, [sp, #20]
   17838:	ldr	r1, [r1, r8, lsl #2]
   1783c:	sdiv	r2, r0, r1
   17840:	mls	r0, r2, r1, r0
   17844:	cmp	r0, #0
   17848:	bne	17908 <ReadDataSlabN+0x28b0>
   1784c:	mov	r0, #0
   17850:	str	r0, [r7, r8, lsl #2]
   17854:	add	r5, r3, r8, lsl #2
   17858:	ldr	r0, [r5, #4]
   1785c:	sdiv	r1, r4, r0
   17860:	mls	r1, r1, r0, r4
   17864:	cmp	r1, #0
   17868:	beq	178bc <ReadDataSlabN+0x2864>
   1786c:	ldr	r2, [r3, r8, lsl #2]
   17870:	ldr	r3, [r9, r8, lsl #2]
   17874:	sub	r0, r0, r1
   17878:	mla	r0, r3, r2, r0
   1787c:	mul	r1, r0, r6
   17880:	ldr	r0, [sl]
   17884:	mov	r2, #1
   17888:	bl	1a68 <fseek@plt>
   1788c:	ldr	r7, [sp, #16]
   17890:	add	r3, sp, #40	; 0x28
   17894:	ldr	r0, [r5, #4]
   17898:	add	r1, r0, r4
   1789c:	sdiv	r2, r4, r0
   178a0:	mul	r0, r2, r0
   178a4:	sub	r0, r0, r4
   178a8:	add	r0, r1, r0
   178ac:	ldr	r1, [r3, r8, lsl #2]
   178b0:	ldr	r2, [r9, r8, lsl #2]
   178b4:	mla	r4, r2, r1, r0
   178b8:	b	178f0 <ReadDataSlabN+0x2898>
   178bc:	ldr	r0, [r9, r8, lsl #2]
   178c0:	cmp	r0, #0
   178c4:	beq	178f0 <ReadDataSlabN+0x2898>
   178c8:	ldr	r5, [r3, r8, lsl #2]
   178cc:	mul	r0, r0, r6
   178d0:	mul	r1, r0, r5
   178d4:	ldr	r0, [sl]
   178d8:	mov	r2, #1
   178dc:	bl	1a68 <fseek@plt>
   178e0:	ldr	r7, [sp, #16]
   178e4:	add	r3, sp, #40	; 0x28
   178e8:	ldr	r0, [r9, r8, lsl #2]
   178ec:	mla	r4, r0, r5, r4
   178f0:	add	r0, r8, #1
   178f4:	add	r1, r8, #2
   178f8:	ldr	r2, [fp, #8]
   178fc:	cmp	r1, r2
   17900:	blt	17824 <ReadDataSlabN+0x27cc>
   17904:	b	17924 <ReadDataSlabN+0x28cc>
   17908:	ldr	r0, [sp]
   1790c:	ldr	r5, [r0, r8, lsl #2]
   17910:	mul	r1, r5, r6
   17914:	ldr	r0, [sl]
   17918:	mov	r2, #1
   1791c:	bl	1a68 <fseek@plt>
   17920:	add	r4, r5, r4
   17924:	ldr	r0, [fp, #24]
   17928:	ldr	r0, [r0]
   1792c:	ldr	r5, [sp, #8]
   17930:	add	r5, r0, r5
   17934:	mov	r0, #0
   17938:	ldr	r1, [sp, #12]
   1793c:	cmp	r5, r1
   17940:	blt	1771c <ReadDataSlabN+0x26c4>
   17944:	b	150d4 <ReadDataSlabN+0x7c>
   17948:	ldr	r0, [sp, #16]
   1794c:	cmp	r0, #1
   17950:	sub	r0, fp, #72	; 0x48
   17954:	blt	18864 <ReadDataSlabN+0x380c>
   17958:	add	r8, r8, #4
   1795c:	add	r9, r5, #4
   17960:	add	r1, sp, #80	; 0x50
   17964:	orr	r6, r1, #4
   17968:	orr	r0, r0, #4
   1796c:	str	r0, [sp]
   17970:	mov	r0, #0
   17974:	str	r0, [sp, #12]
   17978:	str	r8, [sp, #8]
   1797c:	str	r9, [sp, #4]
   17980:	str	r6, [sp, #20]
   17984:	ldr	r5, [fp, #16]
   17988:	ldr	r0, [r5]
   1798c:	cmp	r0, #0
   17990:	beq	179bc <ReadDataSlabN+0x2964>
   17994:	ldr	r1, [sp, #36]	; 0x24
   17998:	mul	r1, r0, r1
   1799c:	ldr	sl, [sp, #32]
   179a0:	ldr	r0, [sl]
   179a4:	mov	r2, #1
   179a8:	bl	1a68 <fseek@plt>
   179ac:	ldr	r0, [r5]
   179b0:	add	r4, r0, r4
   179b4:	ldr	r7, [fp, #24]
   179b8:	b	179c4 <ReadDataSlabN+0x296c>
   179bc:	ldr	r7, [fp, #24]
   179c0:	ldr	sl, [sp, #32]
   179c4:	ldr	r0, [r7]
   179c8:	cmp	r0, #1
   179cc:	blt	17a3c <ReadDataSlabN+0x29e4>
   179d0:	ldr	r0, [sp, #24]
   179d4:	ldr	r1, [sp, #12]
   179d8:	add	r5, r0, r1, lsl #1
   179dc:	mov	r9, #0
   179e0:	ldr	r8, [fp, #20]
   179e4:	ldr	r7, [sp, #28]
   179e8:	ldr	r6, [fp, #24]
   179ec:	mov	r0, sl
   179f0:	mov	r1, r5
   179f4:	mov	r2, r7
   179f8:	mov	r3, #1
   179fc:	bl	e5f8 <ReadInt16Data>
   17a00:	ldr	r0, [r8]
   17a04:	sub	r0, r0, #1
   17a08:	ldr	r1, [sp, #36]	; 0x24
   17a0c:	mul	r1, r0, r1
   17a10:	ldr	r0, [sl]
   17a14:	mov	r2, #1
   17a18:	bl	1a68 <fseek@plt>
   17a1c:	ldr	r0, [r8]
   17a20:	add	r4, r0, r4
   17a24:	add	r5, r5, #2
   17a28:	add	r9, r9, #1
   17a2c:	ldr	r0, [r6]
   17a30:	cmp	r9, r0
   17a34:	blt	179ec <ReadDataSlabN+0x2994>
   17a38:	b	17a40 <ReadDataSlabN+0x29e8>
   17a3c:	ldr	r8, [fp, #20]
   17a40:	ldr	r1, [fp, #12]
   17a44:	ldr	r1, [r1]
   17a48:	ldr	r2, [r8]
   17a4c:	mls	r0, r2, r0, r1
   17a50:	ldr	r1, [fp, #16]
   17a54:	ldr	r1, [r1]
   17a58:	sub	r5, r0, r1
   17a5c:	ldr	r0, [sp, #36]	; 0x24
   17a60:	mul	r1, r5, r0
   17a64:	ldr	r0, [sl]
   17a68:	mov	r2, #1
   17a6c:	bl	1a68 <fseek@plt>
   17a70:	add	r4, r5, r4
   17a74:	ldr	r0, [fp, #8]
   17a78:	cmp	r0, #2
   17a7c:	blt	17b84 <ReadDataSlabN+0x2b2c>
   17a80:	mov	r0, #0
   17a84:	add	r3, sp, #40	; 0x28
   17a88:	ldr	r8, [sp, #8]
   17a8c:	ldr	r9, [sp, #4]
   17a90:	ldr	r6, [sp, #20]
   17a94:	ldr	r7, [fp, #24]
   17a98:	mov	r5, r0
   17a9c:	ldr	r0, [r6, r0, lsl #2]
   17aa0:	add	r0, r0, #1
   17aa4:	str	r0, [r6, r5, lsl #2]
   17aa8:	ldr	r1, [r9, r5, lsl #2]
   17aac:	sdiv	r2, r0, r1
   17ab0:	mls	r0, r2, r1, r0
   17ab4:	cmp	r0, #0
   17ab8:	bne	17b8c <ReadDataSlabN+0x2b34>
   17abc:	mov	r0, #0
   17ac0:	str	r0, [r6, r5, lsl #2]
   17ac4:	add	r7, r3, r5, lsl #2
   17ac8:	ldr	r0, [r7, #4]
   17acc:	sdiv	r1, r4, r0
   17ad0:	mls	r1, r1, r0, r4
   17ad4:	cmp	r1, #0
   17ad8:	beq	17b30 <ReadDataSlabN+0x2ad8>
   17adc:	ldr	r2, [r3, r5, lsl #2]
   17ae0:	ldr	r3, [r8, r5, lsl #2]
   17ae4:	sub	r0, r0, r1
   17ae8:	mla	r0, r3, r2, r0
   17aec:	ldr	r1, [sp, #36]	; 0x24
   17af0:	mul	r1, r0, r1
   17af4:	ldr	r0, [sl]
   17af8:	mov	r2, #1
   17afc:	bl	1a68 <fseek@plt>
   17b00:	ldr	r6, [sp, #20]
   17b04:	add	r3, sp, #40	; 0x28
   17b08:	ldr	r0, [r7, #4]
   17b0c:	add	r1, r0, r4
   17b10:	sdiv	r2, r4, r0
   17b14:	mul	r0, r2, r0
   17b18:	sub	r0, r0, r4
   17b1c:	add	r0, r1, r0
   17b20:	ldr	r1, [r3, r5, lsl #2]
   17b24:	ldr	r2, [r8, r5, lsl #2]
   17b28:	mla	r4, r2, r1, r0
   17b2c:	b	17b68 <ReadDataSlabN+0x2b10>
   17b30:	ldr	r0, [r8, r5, lsl #2]
   17b34:	cmp	r0, #0
   17b38:	beq	17b68 <ReadDataSlabN+0x2b10>
   17b3c:	ldr	r7, [r3, r5, lsl #2]
   17b40:	ldr	r1, [sp, #36]	; 0x24
   17b44:	mul	r0, r0, r1
   17b48:	mul	r1, r0, r7
   17b4c:	ldr	r0, [sl]
   17b50:	mov	r2, #1
   17b54:	bl	1a68 <fseek@plt>
   17b58:	ldr	r6, [sp, #20]
   17b5c:	add	r3, sp, #40	; 0x28
   17b60:	ldr	r0, [r8, r5, lsl #2]
   17b64:	mla	r4, r0, r7, r4
   17b68:	ldr	r7, [fp, #24]
   17b6c:	add	r0, r5, #1
   17b70:	add	r1, r5, #2
   17b74:	ldr	r2, [fp, #8]
   17b78:	cmp	r1, r2
   17b7c:	blt	17a98 <ReadDataSlabN+0x2a40>
   17b80:	b	17bac <ReadDataSlabN+0x2b54>
   17b84:	ldr	r7, [fp, #24]
   17b88:	b	17bac <ReadDataSlabN+0x2b54>
   17b8c:	ldr	r0, [sp]
   17b90:	ldr	r5, [r0, r5, lsl #2]
   17b94:	ldr	r0, [sp, #36]	; 0x24
   17b98:	mul	r1, r5, r0
   17b9c:	ldr	r0, [sl]
   17ba0:	mov	r2, #1
   17ba4:	bl	1a68 <fseek@plt>
   17ba8:	add	r4, r5, r4
   17bac:	ldr	r0, [r7]
   17bb0:	ldr	r2, [sp, #12]
   17bb4:	add	r2, r0, r2
   17bb8:	mov	r0, #0
   17bbc:	ldr	r1, [sp, #16]
   17bc0:	str	r2, [sp, #12]
   17bc4:	cmp	r2, r1
   17bc8:	blt	17984 <ReadDataSlabN+0x292c>
   17bcc:	b	150d4 <ReadDataSlabN+0x7c>
   17bd0:	ldr	r0, [sp, #16]
   17bd4:	cmp	r0, #1
   17bd8:	sub	r0, fp, #72	; 0x48
   17bdc:	blt	18864 <ReadDataSlabN+0x380c>
   17be0:	add	r8, r8, #4
   17be4:	add	r9, r5, #4
   17be8:	add	r1, sp, #80	; 0x50
   17bec:	orr	r6, r1, #4
   17bf0:	orr	r0, r0, #4
   17bf4:	str	r0, [sp]
   17bf8:	mov	r0, #0
   17bfc:	str	r0, [sp, #12]
   17c00:	str	r8, [sp, #8]
   17c04:	str	r9, [sp, #4]
   17c08:	str	r6, [sp, #20]
   17c0c:	ldr	r5, [fp, #16]
   17c10:	ldr	r0, [r5]
   17c14:	cmp	r0, #0
   17c18:	beq	17c44 <ReadDataSlabN+0x2bec>
   17c1c:	ldr	r1, [sp, #36]	; 0x24
   17c20:	mul	r1, r0, r1
   17c24:	ldr	sl, [sp, #32]
   17c28:	ldr	r0, [sl]
   17c2c:	mov	r2, #1
   17c30:	bl	1a68 <fseek@plt>
   17c34:	ldr	r0, [r5]
   17c38:	add	r4, r0, r4
   17c3c:	ldr	r7, [fp, #24]
   17c40:	b	17c4c <ReadDataSlabN+0x2bf4>
   17c44:	ldr	r7, [fp, #24]
   17c48:	ldr	sl, [sp, #32]
   17c4c:	ldr	r0, [r7]
   17c50:	cmp	r0, #1
   17c54:	blt	17cc4 <ReadDataSlabN+0x2c6c>
   17c58:	ldr	r0, [sp, #24]
   17c5c:	ldr	r1, [sp, #12]
   17c60:	add	r5, r0, r1, lsl #1
   17c64:	mov	r9, #0
   17c68:	ldr	r8, [fp, #20]
   17c6c:	ldr	r7, [sp, #28]
   17c70:	ldr	r6, [fp, #24]
   17c74:	mov	r0, sl
   17c78:	mov	r1, r5
   17c7c:	mov	r2, r7
   17c80:	mov	r3, #1
   17c84:	bl	fffc <ReadUInt16Data>
   17c88:	ldr	r0, [r8]
   17c8c:	sub	r0, r0, #1
   17c90:	ldr	r1, [sp, #36]	; 0x24
   17c94:	mul	r1, r0, r1
   17c98:	ldr	r0, [sl]
   17c9c:	mov	r2, #1
   17ca0:	bl	1a68 <fseek@plt>
   17ca4:	ldr	r0, [r8]
   17ca8:	add	r4, r0, r4
   17cac:	add	r5, r5, #2
   17cb0:	add	r9, r9, #1
   17cb4:	ldr	r0, [r6]
   17cb8:	cmp	r9, r0
   17cbc:	blt	17c74 <ReadDataSlabN+0x2c1c>
   17cc0:	b	17cc8 <ReadDataSlabN+0x2c70>
   17cc4:	ldr	r8, [fp, #20]
   17cc8:	ldr	r1, [fp, #12]
   17ccc:	ldr	r1, [r1]
   17cd0:	ldr	r2, [r8]
   17cd4:	mls	r0, r2, r0, r1
   17cd8:	ldr	r1, [fp, #16]
   17cdc:	ldr	r1, [r1]
   17ce0:	sub	r5, r0, r1
   17ce4:	ldr	r0, [sp, #36]	; 0x24
   17ce8:	mul	r1, r5, r0
   17cec:	ldr	r0, [sl]
   17cf0:	mov	r2, #1
   17cf4:	bl	1a68 <fseek@plt>
   17cf8:	add	r4, r5, r4
   17cfc:	ldr	r0, [fp, #8]
   17d00:	cmp	r0, #2
   17d04:	blt	17e0c <ReadDataSlabN+0x2db4>
   17d08:	mov	r0, #0
   17d0c:	add	r3, sp, #40	; 0x28
   17d10:	ldr	r8, [sp, #8]
   17d14:	ldr	r9, [sp, #4]
   17d18:	ldr	r6, [sp, #20]
   17d1c:	ldr	r7, [fp, #24]
   17d20:	mov	r5, r0
   17d24:	ldr	r0, [r6, r0, lsl #2]
   17d28:	add	r0, r0, #1
   17d2c:	str	r0, [r6, r5, lsl #2]
   17d30:	ldr	r1, [r9, r5, lsl #2]
   17d34:	sdiv	r2, r0, r1
   17d38:	mls	r0, r2, r1, r0
   17d3c:	cmp	r0, #0
   17d40:	bne	17e14 <ReadDataSlabN+0x2dbc>
   17d44:	mov	r0, #0
   17d48:	str	r0, [r6, r5, lsl #2]
   17d4c:	add	r7, r3, r5, lsl #2
   17d50:	ldr	r0, [r7, #4]
   17d54:	sdiv	r1, r4, r0
   17d58:	mls	r1, r1, r0, r4
   17d5c:	cmp	r1, #0
   17d60:	beq	17db8 <ReadDataSlabN+0x2d60>
   17d64:	ldr	r2, [r3, r5, lsl #2]
   17d68:	ldr	r3, [r8, r5, lsl #2]
   17d6c:	sub	r0, r0, r1
   17d70:	mla	r0, r3, r2, r0
   17d74:	ldr	r1, [sp, #36]	; 0x24
   17d78:	mul	r1, r0, r1
   17d7c:	ldr	r0, [sl]
   17d80:	mov	r2, #1
   17d84:	bl	1a68 <fseek@plt>
   17d88:	ldr	r6, [sp, #20]
   17d8c:	add	r3, sp, #40	; 0x28
   17d90:	ldr	r0, [r7, #4]
   17d94:	add	r1, r0, r4
   17d98:	sdiv	r2, r4, r0
   17d9c:	mul	r0, r2, r0
   17da0:	sub	r0, r0, r4
   17da4:	add	r0, r1, r0
   17da8:	ldr	r1, [r3, r5, lsl #2]
   17dac:	ldr	r2, [r8, r5, lsl #2]
   17db0:	mla	r4, r2, r1, r0
   17db4:	b	17df0 <ReadDataSlabN+0x2d98>
   17db8:	ldr	r0, [r8, r5, lsl #2]
   17dbc:	cmp	r0, #0
   17dc0:	beq	17df0 <ReadDataSlabN+0x2d98>
   17dc4:	ldr	r7, [r3, r5, lsl #2]
   17dc8:	ldr	r1, [sp, #36]	; 0x24
   17dcc:	mul	r0, r0, r1
   17dd0:	mul	r1, r0, r7
   17dd4:	ldr	r0, [sl]
   17dd8:	mov	r2, #1
   17ddc:	bl	1a68 <fseek@plt>
   17de0:	ldr	r6, [sp, #20]
   17de4:	add	r3, sp, #40	; 0x28
   17de8:	ldr	r0, [r8, r5, lsl #2]
   17dec:	mla	r4, r0, r7, r4
   17df0:	ldr	r7, [fp, #24]
   17df4:	add	r0, r5, #1
   17df8:	add	r1, r5, #2
   17dfc:	ldr	r2, [fp, #8]
   17e00:	cmp	r1, r2
   17e04:	blt	17d20 <ReadDataSlabN+0x2cc8>
   17e08:	b	17e34 <ReadDataSlabN+0x2ddc>
   17e0c:	ldr	r7, [fp, #24]
   17e10:	b	17e34 <ReadDataSlabN+0x2ddc>
   17e14:	ldr	r0, [sp]
   17e18:	ldr	r5, [r0, r5, lsl #2]
   17e1c:	ldr	r0, [sp, #36]	; 0x24
   17e20:	mul	r1, r5, r0
   17e24:	ldr	r0, [sl]
   17e28:	mov	r2, #1
   17e2c:	bl	1a68 <fseek@plt>
   17e30:	add	r4, r5, r4
   17e34:	ldr	r0, [r7]
   17e38:	ldr	r2, [sp, #12]
   17e3c:	add	r2, r0, r2
   17e40:	mov	r0, #0
   17e44:	ldr	r1, [sp, #16]
   17e48:	str	r2, [sp, #12]
   17e4c:	cmp	r2, r1
   17e50:	blt	17c0c <ReadDataSlabN+0x2bb4>
   17e54:	b	150d4 <ReadDataSlabN+0x7c>
   17e58:	ldr	r0, [sp, #16]
   17e5c:	cmp	r0, #1
   17e60:	sub	r0, fp, #72	; 0x48
   17e64:	blt	18864 <ReadDataSlabN+0x380c>
   17e68:	add	r8, r8, #4
   17e6c:	add	r9, r5, #4
   17e70:	add	r1, sp, #80	; 0x50
   17e74:	orr	r6, r1, #4
   17e78:	orr	r0, r0, #4
   17e7c:	str	r0, [sp]
   17e80:	mov	r0, #0
   17e84:	str	r0, [sp, #12]
   17e88:	str	r8, [sp, #8]
   17e8c:	str	r9, [sp, #4]
   17e90:	str	r6, [sp, #20]
   17e94:	ldr	r5, [fp, #16]
   17e98:	ldr	r0, [r5]
   17e9c:	cmp	r0, #0
   17ea0:	beq	17ecc <ReadDataSlabN+0x2e74>
   17ea4:	ldr	r1, [sp, #36]	; 0x24
   17ea8:	mul	r1, r0, r1
   17eac:	ldr	sl, [sp, #32]
   17eb0:	ldr	r0, [sl]
   17eb4:	mov	r2, #1
   17eb8:	bl	1a68 <fseek@plt>
   17ebc:	ldr	r0, [r5]
   17ec0:	add	r4, r0, r4
   17ec4:	ldr	r7, [fp, #24]
   17ec8:	b	17ed4 <ReadDataSlabN+0x2e7c>
   17ecc:	ldr	r7, [fp, #24]
   17ed0:	ldr	sl, [sp, #32]
   17ed4:	ldr	r0, [r7]
   17ed8:	cmp	r0, #1
   17edc:	blt	17f4c <ReadDataSlabN+0x2ef4>
   17ee0:	ldr	r0, [sp, #24]
   17ee4:	ldr	r1, [sp, #12]
   17ee8:	add	r5, r0, r1, lsl #2
   17eec:	mov	r9, #0
   17ef0:	ldr	r8, [fp, #20]
   17ef4:	ldr	r7, [sp, #28]
   17ef8:	ldr	r6, [fp, #24]
   17efc:	mov	r0, sl
   17f00:	mov	r1, r5
   17f04:	mov	r2, r7
   17f08:	mov	r3, #1
   17f0c:	bl	b250 <ReadInt32Data>
   17f10:	ldr	r0, [r8]
   17f14:	sub	r0, r0, #1
   17f18:	ldr	r1, [sp, #36]	; 0x24
   17f1c:	mul	r1, r0, r1
   17f20:	ldr	r0, [sl]
   17f24:	mov	r2, #1
   17f28:	bl	1a68 <fseek@plt>
   17f2c:	ldr	r0, [r8]
   17f30:	add	r4, r0, r4
   17f34:	add	r5, r5, #4
   17f38:	add	r9, r9, #1
   17f3c:	ldr	r0, [r6]
   17f40:	cmp	r9, r0
   17f44:	blt	17efc <ReadDataSlabN+0x2ea4>
   17f48:	b	17f50 <ReadDataSlabN+0x2ef8>
   17f4c:	ldr	r8, [fp, #20]
   17f50:	ldr	r1, [fp, #12]
   17f54:	ldr	r1, [r1]
   17f58:	ldr	r2, [r8]
   17f5c:	mls	r0, r2, r0, r1
   17f60:	ldr	r1, [fp, #16]
   17f64:	ldr	r1, [r1]
   17f68:	sub	r5, r0, r1
   17f6c:	ldr	r0, [sp, #36]	; 0x24
   17f70:	mul	r1, r5, r0
   17f74:	ldr	r0, [sl]
   17f78:	mov	r2, #1
   17f7c:	bl	1a68 <fseek@plt>
   17f80:	add	r4, r5, r4
   17f84:	ldr	r0, [fp, #8]
   17f88:	cmp	r0, #2
   17f8c:	blt	18094 <ReadDataSlabN+0x303c>
   17f90:	mov	r0, #0
   17f94:	add	r3, sp, #40	; 0x28
   17f98:	ldr	r8, [sp, #8]
   17f9c:	ldr	r9, [sp, #4]
   17fa0:	ldr	r6, [sp, #20]
   17fa4:	ldr	r7, [fp, #24]
   17fa8:	mov	r5, r0
   17fac:	ldr	r0, [r6, r0, lsl #2]
   17fb0:	add	r0, r0, #1
   17fb4:	str	r0, [r6, r5, lsl #2]
   17fb8:	ldr	r1, [r9, r5, lsl #2]
   17fbc:	sdiv	r2, r0, r1
   17fc0:	mls	r0, r2, r1, r0
   17fc4:	cmp	r0, #0
   17fc8:	bne	1809c <ReadDataSlabN+0x3044>
   17fcc:	mov	r0, #0
   17fd0:	str	r0, [r6, r5, lsl #2]
   17fd4:	add	r7, r3, r5, lsl #2
   17fd8:	ldr	r0, [r7, #4]
   17fdc:	sdiv	r1, r4, r0
   17fe0:	mls	r1, r1, r0, r4
   17fe4:	cmp	r1, #0
   17fe8:	beq	18040 <ReadDataSlabN+0x2fe8>
   17fec:	ldr	r2, [r3, r5, lsl #2]
   17ff0:	ldr	r3, [r8, r5, lsl #2]
   17ff4:	sub	r0, r0, r1
   17ff8:	mla	r0, r3, r2, r0
   17ffc:	ldr	r1, [sp, #36]	; 0x24
   18000:	mul	r1, r0, r1
   18004:	ldr	r0, [sl]
   18008:	mov	r2, #1
   1800c:	bl	1a68 <fseek@plt>
   18010:	ldr	r6, [sp, #20]
   18014:	add	r3, sp, #40	; 0x28
   18018:	ldr	r0, [r7, #4]
   1801c:	add	r1, r0, r4
   18020:	sdiv	r2, r4, r0
   18024:	mul	r0, r2, r0
   18028:	sub	r0, r0, r4
   1802c:	add	r0, r1, r0
   18030:	ldr	r1, [r3, r5, lsl #2]
   18034:	ldr	r2, [r8, r5, lsl #2]
   18038:	mla	r4, r2, r1, r0
   1803c:	b	18078 <ReadDataSlabN+0x3020>
   18040:	ldr	r0, [r8, r5, lsl #2]
   18044:	cmp	r0, #0
   18048:	beq	18078 <ReadDataSlabN+0x3020>
   1804c:	ldr	r7, [r3, r5, lsl #2]
   18050:	ldr	r1, [sp, #36]	; 0x24
   18054:	mul	r0, r0, r1
   18058:	mul	r1, r0, r7
   1805c:	ldr	r0, [sl]
   18060:	mov	r2, #1
   18064:	bl	1a68 <fseek@plt>
   18068:	ldr	r6, [sp, #20]
   1806c:	add	r3, sp, #40	; 0x28
   18070:	ldr	r0, [r8, r5, lsl #2]
   18074:	mla	r4, r0, r7, r4
   18078:	ldr	r7, [fp, #24]
   1807c:	add	r0, r5, #1
   18080:	add	r1, r5, #2
   18084:	ldr	r2, [fp, #8]
   18088:	cmp	r1, r2
   1808c:	blt	17fa8 <ReadDataSlabN+0x2f50>
   18090:	b	180bc <ReadDataSlabN+0x3064>
   18094:	ldr	r7, [fp, #24]
   18098:	b	180bc <ReadDataSlabN+0x3064>
   1809c:	ldr	r0, [sp]
   180a0:	ldr	r5, [r0, r5, lsl #2]
   180a4:	ldr	r0, [sp, #36]	; 0x24
   180a8:	mul	r1, r5, r0
   180ac:	ldr	r0, [sl]
   180b0:	mov	r2, #1
   180b4:	bl	1a68 <fseek@plt>
   180b8:	add	r4, r5, r4
   180bc:	ldr	r0, [r7]
   180c0:	ldr	r2, [sp, #12]
   180c4:	add	r2, r0, r2
   180c8:	mov	r0, #0
   180cc:	ldr	r1, [sp, #16]
   180d0:	str	r2, [sp, #12]
   180d4:	cmp	r2, r1
   180d8:	blt	17e94 <ReadDataSlabN+0x2e3c>
   180dc:	b	150d4 <ReadDataSlabN+0x7c>
   180e0:	ldr	r0, [sp, #16]
   180e4:	cmp	r0, #1
   180e8:	sub	r0, fp, #72	; 0x48
   180ec:	blt	18864 <ReadDataSlabN+0x380c>
   180f0:	add	r8, r8, #4
   180f4:	add	r9, r5, #4
   180f8:	add	r1, sp, #80	; 0x50
   180fc:	orr	r6, r1, #4
   18100:	orr	r0, r0, #4
   18104:	str	r0, [sp]
   18108:	mov	r0, #0
   1810c:	str	r0, [sp, #12]
   18110:	str	r8, [sp, #8]
   18114:	str	r9, [sp, #4]
   18118:	str	r6, [sp, #20]
   1811c:	ldr	r5, [fp, #16]
   18120:	ldr	r0, [r5]
   18124:	cmp	r0, #0
   18128:	beq	18154 <ReadDataSlabN+0x30fc>
   1812c:	ldr	r1, [sp, #36]	; 0x24
   18130:	mul	r1, r0, r1
   18134:	ldr	sl, [sp, #32]
   18138:	ldr	r0, [sl]
   1813c:	mov	r2, #1
   18140:	bl	1a68 <fseek@plt>
   18144:	ldr	r0, [r5]
   18148:	add	r4, r0, r4
   1814c:	ldr	r7, [fp, #24]
   18150:	b	1815c <ReadDataSlabN+0x3104>
   18154:	ldr	r7, [fp, #24]
   18158:	ldr	sl, [sp, #32]
   1815c:	ldr	r0, [r7]
   18160:	cmp	r0, #1
   18164:	blt	181d4 <ReadDataSlabN+0x317c>
   18168:	ldr	r0, [sp, #24]
   1816c:	ldr	r1, [sp, #12]
   18170:	add	r5, r0, r1, lsl #2
   18174:	mov	r9, #0
   18178:	ldr	r8, [fp, #20]
   1817c:	ldr	r7, [sp, #28]
   18180:	ldr	r6, [fp, #24]
   18184:	mov	r0, sl
   18188:	mov	r1, r5
   1818c:	mov	r2, r7
   18190:	mov	r3, #1
   18194:	bl	cc24 <ReadUInt32Data>
   18198:	ldr	r0, [r8]
   1819c:	sub	r0, r0, #1
   181a0:	ldr	r1, [sp, #36]	; 0x24
   181a4:	mul	r1, r0, r1
   181a8:	ldr	r0, [sl]
   181ac:	mov	r2, #1
   181b0:	bl	1a68 <fseek@plt>
   181b4:	ldr	r0, [r8]
   181b8:	add	r4, r0, r4
   181bc:	add	r5, r5, #4
   181c0:	add	r9, r9, #1
   181c4:	ldr	r0, [r6]
   181c8:	cmp	r9, r0
   181cc:	blt	18184 <ReadDataSlabN+0x312c>
   181d0:	b	181d8 <ReadDataSlabN+0x3180>
   181d4:	ldr	r8, [fp, #20]
   181d8:	ldr	r1, [fp, #12]
   181dc:	ldr	r1, [r1]
   181e0:	ldr	r2, [r8]
   181e4:	mls	r0, r2, r0, r1
   181e8:	ldr	r1, [fp, #16]
   181ec:	ldr	r1, [r1]
   181f0:	sub	r5, r0, r1
   181f4:	ldr	r0, [sp, #36]	; 0x24
   181f8:	mul	r1, r5, r0
   181fc:	ldr	r0, [sl]
   18200:	mov	r2, #1
   18204:	bl	1a68 <fseek@plt>
   18208:	add	r4, r5, r4
   1820c:	ldr	r0, [fp, #8]
   18210:	cmp	r0, #2
   18214:	blt	1831c <ReadDataSlabN+0x32c4>
   18218:	mov	r0, #0
   1821c:	add	r3, sp, #40	; 0x28
   18220:	ldr	r8, [sp, #8]
   18224:	ldr	r9, [sp, #4]
   18228:	ldr	r6, [sp, #20]
   1822c:	ldr	r7, [fp, #24]
   18230:	mov	r5, r0
   18234:	ldr	r0, [r6, r0, lsl #2]
   18238:	add	r0, r0, #1
   1823c:	str	r0, [r6, r5, lsl #2]
   18240:	ldr	r1, [r9, r5, lsl #2]
   18244:	sdiv	r2, r0, r1
   18248:	mls	r0, r2, r1, r0
   1824c:	cmp	r0, #0
   18250:	bne	18324 <ReadDataSlabN+0x32cc>
   18254:	mov	r0, #0
   18258:	str	r0, [r6, r5, lsl #2]
   1825c:	add	r7, r3, r5, lsl #2
   18260:	ldr	r0, [r7, #4]
   18264:	sdiv	r1, r4, r0
   18268:	mls	r1, r1, r0, r4
   1826c:	cmp	r1, #0
   18270:	beq	182c8 <ReadDataSlabN+0x3270>
   18274:	ldr	r2, [r3, r5, lsl #2]
   18278:	ldr	r3, [r8, r5, lsl #2]
   1827c:	sub	r0, r0, r1
   18280:	mla	r0, r3, r2, r0
   18284:	ldr	r1, [sp, #36]	; 0x24
   18288:	mul	r1, r0, r1
   1828c:	ldr	r0, [sl]
   18290:	mov	r2, #1
   18294:	bl	1a68 <fseek@plt>
   18298:	ldr	r6, [sp, #20]
   1829c:	add	r3, sp, #40	; 0x28
   182a0:	ldr	r0, [r7, #4]
   182a4:	add	r1, r0, r4
   182a8:	sdiv	r2, r4, r0
   182ac:	mul	r0, r2, r0
   182b0:	sub	r0, r0, r4
   182b4:	add	r0, r1, r0
   182b8:	ldr	r1, [r3, r5, lsl #2]
   182bc:	ldr	r2, [r8, r5, lsl #2]
   182c0:	mla	r4, r2, r1, r0
   182c4:	b	18300 <ReadDataSlabN+0x32a8>
   182c8:	ldr	r0, [r8, r5, lsl #2]
   182cc:	cmp	r0, #0
   182d0:	beq	18300 <ReadDataSlabN+0x32a8>
   182d4:	ldr	r7, [r3, r5, lsl #2]
   182d8:	ldr	r1, [sp, #36]	; 0x24
   182dc:	mul	r0, r0, r1
   182e0:	mul	r1, r0, r7
   182e4:	ldr	r0, [sl]
   182e8:	mov	r2, #1
   182ec:	bl	1a68 <fseek@plt>
   182f0:	ldr	r6, [sp, #20]
   182f4:	add	r3, sp, #40	; 0x28
   182f8:	ldr	r0, [r8, r5, lsl #2]
   182fc:	mla	r4, r0, r7, r4
   18300:	ldr	r7, [fp, #24]
   18304:	add	r0, r5, #1
   18308:	add	r1, r5, #2
   1830c:	ldr	r2, [fp, #8]
   18310:	cmp	r1, r2
   18314:	blt	18230 <ReadDataSlabN+0x31d8>
   18318:	b	18344 <ReadDataSlabN+0x32ec>
   1831c:	ldr	r7, [fp, #24]
   18320:	b	18344 <ReadDataSlabN+0x32ec>
   18324:	ldr	r0, [sp]
   18328:	ldr	r5, [r0, r5, lsl #2]
   1832c:	ldr	r0, [sp, #36]	; 0x24
   18330:	mul	r1, r5, r0
   18334:	ldr	r0, [sl]
   18338:	mov	r2, #1
   1833c:	bl	1a68 <fseek@plt>
   18340:	add	r4, r5, r4
   18344:	ldr	r0, [r7]
   18348:	ldr	r2, [sp, #12]
   1834c:	add	r2, r0, r2
   18350:	mov	r0, #0
   18354:	ldr	r1, [sp, #16]
   18358:	str	r2, [sp, #12]
   1835c:	cmp	r2, r1
   18360:	blt	1811c <ReadDataSlabN+0x30c4>
   18364:	b	150d4 <ReadDataSlabN+0x7c>
   18368:	ldr	r0, [sp, #16]
   1836c:	cmp	r0, #1
   18370:	sub	r0, fp, #72	; 0x48
   18374:	blt	18864 <ReadDataSlabN+0x380c>
   18378:	add	r1, sl, #4
   1837c:	str	r1, [sp, #8]
   18380:	add	r1, r5, #4
   18384:	str	r1, [sp, #4]
   18388:	add	r1, sp, #80	; 0x50
   1838c:	orr	r1, r1, #4
   18390:	str	r1, [sp, #20]
   18394:	orr	r0, r0, #4
   18398:	str	r0, [sp]
   1839c:	mov	r6, #0
   183a0:	ldr	r5, [fp, #16]
   183a4:	ldr	r0, [r5]
   183a8:	cmp	r0, #0
   183ac:	beq	183d8 <ReadDataSlabN+0x3380>
   183b0:	ldr	r1, [sp, #36]	; 0x24
   183b4:	mul	r1, r0, r1
   183b8:	ldr	sl, [sp, #32]
   183bc:	ldr	r0, [sl]
   183c0:	mov	r2, #1
   183c4:	bl	1a68 <fseek@plt>
   183c8:	ldr	r0, [r5]
   183cc:	add	r4, r0, r4
   183d0:	ldr	r7, [fp, #24]
   183d4:	b	183e0 <ReadDataSlabN+0x3388>
   183d8:	ldr	r7, [fp, #24]
   183dc:	ldr	sl, [sp, #32]
   183e0:	ldr	r0, [r7]
   183e4:	cmp	r0, #1
   183e8:	str	r6, [sp, #12]
   183ec:	blt	18454 <ReadDataSlabN+0x33fc>
   183f0:	ldr	r0, [sp, #24]
   183f4:	add	r5, r0, r6, lsl #3
   183f8:	mov	r9, #0
   183fc:	mov	r6, r8
   18400:	ldr	r8, [fp, #20]
   18404:	mov	r0, sl
   18408:	mov	r1, r5
   1840c:	mov	r2, r6
   18410:	mov	r3, #1
   18414:	bl	7af8 <ReadInt64Data>
   18418:	ldr	r0, [r8]
   1841c:	sub	r0, r0, #1
   18420:	ldr	r1, [sp, #36]	; 0x24
   18424:	mul	r1, r0, r1
   18428:	ldr	r0, [sl]
   1842c:	mov	r2, #1
   18430:	bl	1a68 <fseek@plt>
   18434:	ldr	r0, [r8]
   18438:	add	r4, r0, r4
   1843c:	add	r5, r5, #8
   18440:	add	r9, r9, #1
   18444:	ldr	r0, [r7]
   18448:	cmp	r9, r0
   1844c:	blt	18404 <ReadDataSlabN+0x33ac>
   18450:	b	18458 <ReadDataSlabN+0x3400>
   18454:	ldr	r8, [fp, #20]
   18458:	ldr	r1, [fp, #12]
   1845c:	ldr	r1, [r1]
   18460:	ldr	r2, [r8]
   18464:	mls	r0, r2, r0, r1
   18468:	ldr	r1, [fp, #16]
   1846c:	ldr	r1, [r1]
   18470:	sub	r5, r0, r1
   18474:	ldr	r0, [sp, #36]	; 0x24
   18478:	mul	r1, r5, r0
   1847c:	ldr	r0, [sl]
   18480:	mov	r2, #1
   18484:	bl	1a68 <fseek@plt>
   18488:	add	r4, r5, r4
   1848c:	ldr	r0, [fp, #8]
   18490:	cmp	r0, #2
   18494:	blt	185b8 <ReadDataSlabN+0x3560>
   18498:	mov	r0, #0
   1849c:	add	r3, sp, #40	; 0x28
   184a0:	ldr	r8, [sp, #8]
   184a4:	ldr	r9, [sp, #4]
   184a8:	ldr	r6, [sp, #20]
   184ac:	mov	r5, r0
   184b0:	ldr	r0, [r6, r0, lsl #2]
   184b4:	add	r0, r0, #1
   184b8:	str	r0, [r6, r5, lsl #2]
   184bc:	ldr	r1, [r9, r5, lsl #2]
   184c0:	sdiv	r2, r0, r1
   184c4:	mls	r0, r2, r1, r0
   184c8:	cmp	r0, #0
   184cc:	bne	18598 <ReadDataSlabN+0x3540>
   184d0:	mov	r0, #0
   184d4:	str	r0, [r6, r5, lsl #2]
   184d8:	add	r7, r3, r5, lsl #2
   184dc:	ldr	r0, [r7, #4]
   184e0:	sdiv	r1, r4, r0
   184e4:	mls	r1, r1, r0, r4
   184e8:	cmp	r1, #0
   184ec:	beq	18544 <ReadDataSlabN+0x34ec>
   184f0:	ldr	r2, [r3, r5, lsl #2]
   184f4:	ldr	r3, [r8, r5, lsl #2]
   184f8:	sub	r0, r0, r1
   184fc:	mla	r0, r3, r2, r0
   18500:	ldr	r1, [sp, #36]	; 0x24
   18504:	mul	r1, r0, r1
   18508:	ldr	r0, [sl]
   1850c:	mov	r2, #1
   18510:	bl	1a68 <fseek@plt>
   18514:	ldr	r6, [sp, #20]
   18518:	add	r3, sp, #40	; 0x28
   1851c:	ldr	r0, [r7, #4]
   18520:	add	r1, r0, r4
   18524:	sdiv	r2, r4, r0
   18528:	mul	r0, r2, r0
   1852c:	sub	r0, r0, r4
   18530:	add	r0, r1, r0
   18534:	ldr	r1, [r3, r5, lsl #2]
   18538:	ldr	r2, [r8, r5, lsl #2]
   1853c:	mla	r4, r2, r1, r0
   18540:	b	1857c <ReadDataSlabN+0x3524>
   18544:	ldr	r0, [r8, r5, lsl #2]
   18548:	cmp	r0, #0
   1854c:	beq	1857c <ReadDataSlabN+0x3524>
   18550:	ldr	r7, [r3, r5, lsl #2]
   18554:	ldr	r1, [sp, #36]	; 0x24
   18558:	mul	r0, r0, r1
   1855c:	mul	r1, r0, r7
   18560:	ldr	r0, [sl]
   18564:	mov	r2, #1
   18568:	bl	1a68 <fseek@plt>
   1856c:	ldr	r6, [sp, #20]
   18570:	add	r3, sp, #40	; 0x28
   18574:	ldr	r0, [r8, r5, lsl #2]
   18578:	mla	r4, r0, r7, r4
   1857c:	ldr	r7, [fp, #24]
   18580:	add	r0, r5, #1
   18584:	add	r1, r5, #2
   18588:	ldr	r2, [fp, #8]
   1858c:	cmp	r1, r2
   18590:	blt	184ac <ReadDataSlabN+0x3454>
   18594:	b	185b8 <ReadDataSlabN+0x3560>
   18598:	ldr	r0, [sp]
   1859c:	ldr	r5, [r0, r5, lsl #2]
   185a0:	ldr	r0, [sp, #36]	; 0x24
   185a4:	mul	r1, r5, r0
   185a8:	ldr	r0, [sl]
   185ac:	mov	r2, #1
   185b0:	bl	1a68 <fseek@plt>
   185b4:	add	r4, r5, r4
   185b8:	ldr	r0, [r7]
   185bc:	ldr	r6, [sp, #12]
   185c0:	add	r6, r0, r6
   185c4:	mov	r0, #0
   185c8:	ldr	r1, [sp, #16]
   185cc:	cmp	r6, r1
   185d0:	ldr	r8, [sp, #28]
   185d4:	blt	183a0 <ReadDataSlabN+0x3348>
   185d8:	b	150d4 <ReadDataSlabN+0x7c>
   185dc:	ldr	r0, [sp, #16]
   185e0:	cmp	r0, #1
   185e4:	sub	r0, fp, #72	; 0x48
   185e8:	blt	18864 <ReadDataSlabN+0x380c>
   185ec:	add	r8, r8, #4
   185f0:	add	r9, r5, #4
   185f4:	add	r1, sp, #80	; 0x50
   185f8:	orr	r6, r1, #4
   185fc:	orr	r0, r0, #4
   18600:	str	r0, [sp]
   18604:	mov	r0, #0
   18608:	str	r0, [sp, #12]
   1860c:	str	r8, [sp, #8]
   18610:	str	r9, [sp, #4]
   18614:	str	r6, [sp, #20]
   18618:	ldr	r5, [fp, #16]
   1861c:	ldr	r0, [r5]
   18620:	cmp	r0, #0
   18624:	beq	18650 <ReadDataSlabN+0x35f8>
   18628:	ldr	r1, [sp, #36]	; 0x24
   1862c:	mul	r1, r0, r1
   18630:	ldr	sl, [sp, #32]
   18634:	ldr	r0, [sl]
   18638:	mov	r2, #1
   1863c:	bl	1a68 <fseek@plt>
   18640:	ldr	r0, [r5]
   18644:	add	r4, r0, r4
   18648:	ldr	r7, [fp, #24]
   1864c:	b	18658 <ReadDataSlabN+0x3600>
   18650:	ldr	r7, [fp, #24]
   18654:	ldr	sl, [sp, #32]
   18658:	ldr	r0, [r7]
   1865c:	cmp	r0, #1
   18660:	blt	186d0 <ReadDataSlabN+0x3678>
   18664:	ldr	r0, [sp, #24]
   18668:	ldr	r1, [sp, #12]
   1866c:	add	r5, r0, r1, lsl #3
   18670:	mov	r9, #0
   18674:	ldr	r8, [fp, #20]
   18678:	ldr	r7, [sp, #28]
   1867c:	ldr	r6, [fp, #24]
   18680:	mov	r0, sl
   18684:	mov	r1, r5
   18688:	mov	r2, r7
   1868c:	mov	r3, #1
   18690:	bl	96a4 <ReadUInt64Data>
   18694:	ldr	r0, [r8]
   18698:	sub	r0, r0, #1
   1869c:	ldr	r1, [sp, #36]	; 0x24
   186a0:	mul	r1, r0, r1
   186a4:	ldr	r0, [sl]
   186a8:	mov	r2, #1
   186ac:	bl	1a68 <fseek@plt>
   186b0:	ldr	r0, [r8]
   186b4:	add	r4, r0, r4
   186b8:	add	r5, r5, #8
   186bc:	add	r9, r9, #1
   186c0:	ldr	r0, [r6]
   186c4:	cmp	r9, r0
   186c8:	blt	18680 <ReadDataSlabN+0x3628>
   186cc:	b	186d4 <ReadDataSlabN+0x367c>
   186d0:	ldr	r8, [fp, #20]
   186d4:	ldr	r1, [fp, #12]
   186d8:	ldr	r1, [r1]
   186dc:	ldr	r2, [r8]
   186e0:	mls	r0, r2, r0, r1
   186e4:	ldr	r1, [fp, #16]
   186e8:	ldr	r1, [r1]
   186ec:	sub	r5, r0, r1
   186f0:	ldr	r0, [sp, #36]	; 0x24
   186f4:	mul	r1, r5, r0
   186f8:	ldr	r0, [sl]
   186fc:	mov	r2, #1
   18700:	bl	1a68 <fseek@plt>
   18704:	add	r4, r5, r4
   18708:	ldr	r0, [fp, #8]
   1870c:	cmp	r0, #2
   18710:	blt	18818 <ReadDataSlabN+0x37c0>
   18714:	mov	r0, #0
   18718:	add	r3, sp, #40	; 0x28
   1871c:	ldr	r8, [sp, #8]
   18720:	ldr	r9, [sp, #4]
   18724:	ldr	r6, [sp, #20]
   18728:	ldr	r7, [fp, #24]
   1872c:	mov	r5, r0
   18730:	ldr	r0, [r6, r0, lsl #2]
   18734:	add	r0, r0, #1
   18738:	str	r0, [r6, r5, lsl #2]
   1873c:	ldr	r1, [r9, r5, lsl #2]
   18740:	sdiv	r2, r0, r1
   18744:	mls	r0, r2, r1, r0
   18748:	cmp	r0, #0
   1874c:	bne	18820 <ReadDataSlabN+0x37c8>
   18750:	mov	r0, #0
   18754:	str	r0, [r6, r5, lsl #2]
   18758:	add	r7, r3, r5, lsl #2
   1875c:	ldr	r0, [r7, #4]
   18760:	sdiv	r1, r4, r0
   18764:	mls	r1, r1, r0, r4
   18768:	cmp	r1, #0
   1876c:	beq	187c4 <ReadDataSlabN+0x376c>
   18770:	ldr	r2, [r3, r5, lsl #2]
   18774:	ldr	r3, [r8, r5, lsl #2]
   18778:	sub	r0, r0, r1
   1877c:	mla	r0, r3, r2, r0
   18780:	ldr	r1, [sp, #36]	; 0x24
   18784:	mul	r1, r0, r1
   18788:	ldr	r0, [sl]
   1878c:	mov	r2, #1
   18790:	bl	1a68 <fseek@plt>
   18794:	ldr	r6, [sp, #20]
   18798:	add	r3, sp, #40	; 0x28
   1879c:	ldr	r0, [r7, #4]
   187a0:	add	r1, r0, r4
   187a4:	sdiv	r2, r4, r0
   187a8:	mul	r0, r2, r0
   187ac:	sub	r0, r0, r4
   187b0:	add	r0, r1, r0
   187b4:	ldr	r1, [r3, r5, lsl #2]
   187b8:	ldr	r2, [r8, r5, lsl #2]
   187bc:	mla	r4, r2, r1, r0
   187c0:	b	187fc <ReadDataSlabN+0x37a4>
   187c4:	ldr	r0, [r8, r5, lsl #2]
   187c8:	cmp	r0, #0
   187cc:	beq	187fc <ReadDataSlabN+0x37a4>
   187d0:	ldr	r7, [r3, r5, lsl #2]
   187d4:	ldr	r1, [sp, #36]	; 0x24
   187d8:	mul	r0, r0, r1
   187dc:	mul	r1, r0, r7
   187e0:	ldr	r0, [sl]
   187e4:	mov	r2, #1
   187e8:	bl	1a68 <fseek@plt>
   187ec:	ldr	r6, [sp, #20]
   187f0:	add	r3, sp, #40	; 0x28
   187f4:	ldr	r0, [r8, r5, lsl #2]
   187f8:	mla	r4, r0, r7, r4
   187fc:	ldr	r7, [fp, #24]
   18800:	add	r0, r5, #1
   18804:	add	r1, r5, #2
   18808:	ldr	r2, [fp, #8]
   1880c:	cmp	r1, r2
   18810:	blt	1872c <ReadDataSlabN+0x36d4>
   18814:	b	18840 <ReadDataSlabN+0x37e8>
   18818:	ldr	r7, [fp, #24]
   1881c:	b	18840 <ReadDataSlabN+0x37e8>
   18820:	ldr	r0, [sp]
   18824:	ldr	r5, [r0, r5, lsl #2]
   18828:	ldr	r0, [sp, #36]	; 0x24
   1882c:	mul	r1, r5, r0
   18830:	ldr	r0, [sl]
   18834:	mov	r2, #1
   18838:	bl	1a68 <fseek@plt>
   1883c:	add	r4, r5, r4
   18840:	ldr	r0, [r7]
   18844:	ldr	r2, [sp, #12]
   18848:	add	r2, r0, r2
   1884c:	mov	r0, #0
   18850:	ldr	r1, [sp, #16]
   18854:	str	r2, [sp, #12]
   18858:	cmp	r2, r1
   1885c:	blt	18618 <ReadDataSlabN+0x35c0>
   18860:	b	150d4 <ReadDataSlabN+0x7c>
   18864:	mov	r0, #0
   18868:	sub	sp, fp, #28
   1886c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018870 <ReadCompressedDataSlabN>:
   18870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18874:	add	fp, sp, #28
   18878:	sub	sp, sp, #228	; 0xe4
   1887c:	mov	r4, r3
   18880:	mov	r5, r2
   18884:	mov	r7, r0
   18888:	vmov.i32	q8, #0	; 0x00000000
   1888c:	mov	r0, #36	; 0x24
   18890:	sub	r6, fp, #72	; 0x48
   18894:	mov	r2, r6
   18898:	vst1.64	{d16-d17}, [r2], r0
   1889c:	mov	r3, #0
   188a0:	str	r3, [r2]
   188a4:	add	r2, r6, #16
   188a8:	vst1.64	{d16-d17}, [r2]
   188ac:	str	r3, [fp, #-40]	; 0xffffffd8
   188b0:	sub	r6, fp, #112	; 0x70
   188b4:	add	r2, r6, #16
   188b8:	vst1.64	{d16-d17}, [r2]
   188bc:	mov	r2, r6
   188c0:	vst1.64	{d16-d17}, [r2], r0
   188c4:	str	r3, [r2]
   188c8:	str	r3, [fp, #-80]	; 0xffffffb0
   188cc:	add	sl, sp, #104	; 0x68
   188d0:	add	r2, sl, #16
   188d4:	vst1.64	{d16-d17}, [r2]
   188d8:	mov	r2, sl
   188dc:	vst1.64	{d16-d17}, [r2], r0
   188e0:	str	r3, [r2]
   188e4:	str	r3, [sp, #136]	; 0x88
   188e8:	add	r0, sp, #48	; 0x30
   188ec:	add	r2, r0, #32
   188f0:	vst1.64	{d16-d17}, [r2]
   188f4:	add	r2, r0, #16
   188f8:	vst1.64	{d16-d17}, [r2]
   188fc:	mov	r2, #52	; 0x34
   18900:	vst1.64	{d16-d17}, [r0], r2
   18904:	str	r3, [r0]
   18908:	str	r3, [sp, #96]	; 0x60
   1890c:	mov	r0, #1
   18910:	cmp	r7, #0
   18914:	cmpne	r5, #0
   18918:	bne	18924 <ReadCompressedDataSlabN+0xb4>
   1891c:	sub	sp, fp, #28
   18920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18924:	ldr	r2, [fp, #12]
   18928:	cmp	r2, #10
   1892c:	bgt	1891c <ReadCompressedDataSlabN+0xac>
   18930:	ldr	r2, [fp, #28]
   18934:	cmp	r2, #0
   18938:	ldrne	r2, [fp, #24]
   1893c:	cmpne	r2, #0
   18940:	beq	1891c <ReadCompressedDataSlabN+0xac>
   18944:	ldr	r2, [fp, #20]
   18948:	cmp	r2, #0
   1894c:	ldrne	r2, [r7]
   18950:	cmpne	r2, #0
   18954:	beq	1891c <ReadCompressedDataSlabN+0xac>
   18958:	str	r7, [sp, #44]	; 0x2c
   1895c:	add	r0, sp, #48	; 0x30
   18960:	bl	1960 <inflateCopy@plt>
   18964:	sub	r0, r4, #6
   18968:	cmp	r0, #9
   1896c:	bhi	1c834 <ReadCompressedDataSlabN+0x3fc4>
   18970:	ldr	r9, [fp, #16]
   18974:	add	r1, pc, #8
   18978:	ldr	r0, [r1, r0, lsl #2]
   1897c:	str	r5, [sp, #36]	; 0x24
   18980:	add	pc, r1, r0
   18984:	.word	0x00000028
   18988:	.word	0x0000035c
   1898c:	.word	0x000006a0
   18990:	.word	0x000009d8
   18994:	.word	0x00000d10
   18998:	.word	0x00001054
   1899c:	.word	0x00001398
   189a0:	.word	0x000016dc
   189a4:	.word	0x00001a20
   189a8:	.word	0x00001d50
   189ac:	ldr	r8, [fp, #24]
   189b0:	ldr	r0, [r8]
   189b4:	sub	r0, r0, #1
   189b8:	str	r0, [fp, #-72]	; 0xffffffb8
   189bc:	ldr	r0, [r9]
   189c0:	str	r0, [sp, #104]	; 0x68
   189c4:	ldr	r0, [fp, #28]
   189c8:	ldr	r0, [r0]
   189cc:	str	r0, [sp, #28]
   189d0:	mov	r3, #0
   189d4:	ldr	r0, [fp, #12]
   189d8:	cmp	r0, #2
   189dc:	ldr	r0, [sp, #44]	; 0x2c
   189e0:	blt	18a78 <ReadCompressedDataSlabN+0x208>
   189e4:	mov	r3, #0
   189e8:	mov	r7, #1
   189ec:	mov	r8, r9
   189f0:	ldr	lr, [fp, #20]
   189f4:	sub	r4, fp, #72	; 0x48
   189f8:	ldr	r1, [fp, #24]
   189fc:	ldr	r2, [r1, r7, lsl #2]
   18a00:	sub	r2, r2, #1
   18a04:	str	r2, [r4, r7, lsl #2]
   18a08:	sub	ip, r7, #1
   18a0c:	ldr	r6, [r9, ip, lsl #2]
   18a10:	str	r6, [sl, r7, lsl #2]
   18a14:	mov	r4, #0
   18a18:	mov	r1, r8
   18a1c:	ldr	r5, [r1, -r4, lsl #2]!
   18a20:	mul	r2, r2, r5
   18a24:	ldr	r1, [r1, #4]
   18a28:	mul	r6, r1, r6
   18a2c:	add	r4, r4, #1
   18a30:	cmp	r7, r4
   18a34:	bne	18a18 <ReadCompressedDataSlabN+0x1a8>
   18a38:	str	r6, [sl, r7, lsl #2]
   18a3c:	sub	r4, fp, #72	; 0x48
   18a40:	str	r2, [r4, r7, lsl #2]
   18a44:	ldr	r1, [sl, ip, lsl #2]
   18a48:	ldr	r2, [lr, r7, lsl #2]
   18a4c:	mla	r3, r2, r1, r3
   18a50:	ldr	r1, [fp, #28]
   18a54:	ldr	r1, [r1, r7, lsl #2]
   18a58:	ldr	r2, [sp, #28]
   18a5c:	mul	r2, r1, r2
   18a60:	str	r2, [sp, #28]
   18a64:	add	r8, r8, #4
   18a68:	add	r7, r7, #1
   18a6c:	ldr	r1, [fp, #12]
   18a70:	cmp	r7, r1
   18a74:	bne	189f8 <ReadCompressedDataSlabN+0x188>
   18a78:	add	r1, sp, #48	; 0x30
   18a7c:	ldr	r2, [fp, #8]
   18a80:	mov	r5, r3
   18a84:	bl	26ac <InflateSkipData>
   18a88:	ldr	r0, [fp, #24]
   18a8c:	ldr	r0, [r0]
   18a90:	cmp	r0, #1
   18a94:	bne	1aa18 <ReadCompressedDataSlabN+0x21a8>
   18a98:	ldr	r0, [sp, #28]
   18a9c:	cmp	r0, #1
   18aa0:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   18aa4:	mov	r6, r5
   18aa8:	ldr	r0, [fp, #20]
   18aac:	add	r7, r0, #4
   18ab0:	ldr	r0, [fp, #28]
   18ab4:	add	r0, r0, #4
   18ab8:	str	r0, [sp, #40]	; 0x28
   18abc:	sub	r0, fp, #112	; 0x70
   18ac0:	orr	r4, r0, #4
   18ac4:	sub	r0, fp, #72	; 0x48
   18ac8:	orr	r0, r0, #4
   18acc:	str	r0, [sp, #20]
   18ad0:	add	r1, sp, #48	; 0x30
   18ad4:	mov	r0, #0
   18ad8:	str	r0, [sp, #32]
   18adc:	str	r7, [sp, #24]
   18ae0:	ldr	r9, [fp, #20]
   18ae4:	ldr	r3, [r9]
   18ae8:	cmp	r3, #0
   18aec:	beq	18b1c <ReadCompressedDataSlabN+0x2ac>
   18af0:	mov	r7, r9
   18af4:	ldr	r0, [sp, #44]	; 0x2c
   18af8:	mov	r8, r0
   18afc:	ldr	r9, [fp, #8]
   18b00:	mov	r5, r1
   18b04:	mov	r2, r9
   18b08:	bl	26ac <InflateSkipData>
   18b0c:	ldr	r0, [r7]
   18b10:	add	r6, r0, r6
   18b14:	ldr	r7, [fp, #28]
   18b18:	b	18b2c <ReadCompressedDataSlabN+0x2bc>
   18b1c:	ldr	r8, [sp, #44]	; 0x2c
   18b20:	ldr	r7, [fp, #28]
   18b24:	ldr	r9, [fp, #8]
   18b28:	mov	r5, r1
   18b2c:	ldr	r0, [r7]
   18b30:	str	r0, [sp]
   18b34:	ldr	r0, [sp, #36]	; 0x24
   18b38:	ldr	r1, [sp, #32]
   18b3c:	add	r2, r0, r1, lsl #3
   18b40:	mov	r0, r8
   18b44:	mov	r1, r5
   18b48:	mov	r3, r9
   18b4c:	bl	4bf4 <ReadCompressedDoubleData>
   18b50:	ldr	r0, [fp, #20]
   18b54:	mov	r2, r9
   18b58:	mov	r9, r0
   18b5c:	ldr	r0, [r0]
   18b60:	ldr	r1, [fp, #16]
   18b64:	ldr	r1, [r1]
   18b68:	sub	r0, r1, r0
   18b6c:	ldr	r1, [r7]
   18b70:	sub	r3, r0, r1
   18b74:	mov	r0, r8
   18b78:	mov	r1, r5
   18b7c:	bl	26ac <InflateSkipData>
   18b80:	ldr	r0, [fp, #16]
   18b84:	ldr	r0, [r0]
   18b88:	add	r0, r0, r6
   18b8c:	ldr	r1, [r9]
   18b90:	sub	r6, r0, r1
   18b94:	ldr	r0, [fp, #12]
   18b98:	cmp	r0, #2
   18b9c:	blt	18cb8 <ReadCompressedDataSlabN+0x448>
   18ba0:	mov	r0, #0
   18ba4:	ldr	r8, [fp, #8]
   18ba8:	ldr	r7, [sp, #24]
   18bac:	mov	r9, r0
   18bb0:	ldr	r0, [r4, r0, lsl #2]
   18bb4:	add	r0, r0, #1
   18bb8:	str	r0, [r4, r9, lsl #2]
   18bbc:	ldr	r1, [sp, #40]	; 0x28
   18bc0:	ldr	r1, [r1, r9, lsl #2]
   18bc4:	sdiv	r2, r0, r1
   18bc8:	mls	r0, r2, r1, r0
   18bcc:	cmp	r0, #0
   18bd0:	bne	18c90 <ReadCompressedDataSlabN+0x420>
   18bd4:	mov	r0, #0
   18bd8:	str	r0, [r4, r9, lsl #2]
   18bdc:	mov	r5, sl
   18be0:	add	sl, sl, r9, lsl #2
   18be4:	ldr	r0, [sl, #4]
   18be8:	sdiv	r1, r6, r0
   18bec:	mls	r1, r1, r0, r6
   18bf0:	cmp	r1, #0
   18bf4:	beq	18c44 <ReadCompressedDataSlabN+0x3d4>
   18bf8:	ldr	r2, [r5, r9, lsl #2]
   18bfc:	ldr	r3, [r7, r9, lsl #2]
   18c00:	sub	r0, r0, r1
   18c04:	mla	r3, r3, r2, r0
   18c08:	ldr	r0, [sp, #44]	; 0x2c
   18c0c:	add	r1, sp, #48	; 0x30
   18c10:	mov	r2, r8
   18c14:	bl	26ac <InflateSkipData>
   18c18:	ldr	r0, [sl, #4]
   18c1c:	add	r1, r0, r6
   18c20:	sdiv	r2, r6, r0
   18c24:	mul	r0, r2, r0
   18c28:	sub	r0, r0, r6
   18c2c:	add	r0, r1, r0
   18c30:	ldr	r1, [r5, r9, lsl #2]
   18c34:	ldr	r2, [r7, r9, lsl #2]
   18c38:	mla	r6, r2, r1, r0
   18c3c:	mov	sl, r5
   18c40:	b	18c78 <ReadCompressedDataSlabN+0x408>
   18c44:	ldr	r0, [r7, r9, lsl #2]
   18c48:	add	sl, sp, #104	; 0x68
   18c4c:	cmp	r0, #0
   18c50:	beq	18c78 <ReadCompressedDataSlabN+0x408>
   18c54:	ldr	r1, [sl, r9, lsl #2]
   18c58:	mul	r3, r1, r0
   18c5c:	ldr	r0, [sp, #44]	; 0x2c
   18c60:	add	r1, sp, #48	; 0x30
   18c64:	mov	r2, r8
   18c68:	bl	26ac <InflateSkipData>
   18c6c:	ldr	r0, [sl, r9, lsl #2]
   18c70:	ldr	r1, [r7, r9, lsl #2]
   18c74:	mla	r6, r1, r0, r6
   18c78:	add	r0, r9, #1
   18c7c:	add	r1, r9, #2
   18c80:	ldr	r2, [fp, #12]
   18c84:	cmp	r1, r2
   18c88:	blt	18bac <ReadCompressedDataSlabN+0x33c>
   18c8c:	b	18cb8 <ReadCompressedDataSlabN+0x448>
   18c90:	ldr	r0, [sp, #20]
   18c94:	ldr	r5, [r0, r9, lsl #2]
   18c98:	cmp	r5, #0
   18c9c:	beq	18cb8 <ReadCompressedDataSlabN+0x448>
   18ca0:	ldr	r0, [sp, #44]	; 0x2c
   18ca4:	add	r1, sp, #48	; 0x30
   18ca8:	mov	r2, r8
   18cac:	mov	r3, r5
   18cb0:	bl	26ac <InflateSkipData>
   18cb4:	add	r6, r5, r6
   18cb8:	ldr	r0, [fp, #28]
   18cbc:	ldr	r0, [r0]
   18cc0:	ldr	r1, [sp, #32]
   18cc4:	add	r1, r0, r1
   18cc8:	ldr	r0, [sp, #28]
   18ccc:	str	r1, [sp, #32]
   18cd0:	cmp	r1, r0
   18cd4:	add	r1, sp, #48	; 0x30
   18cd8:	blt	18ae0 <ReadCompressedDataSlabN+0x270>
   18cdc:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   18ce0:	ldr	r0, [fp, #24]
   18ce4:	ldr	r0, [r0]
   18ce8:	sub	r0, r0, #1
   18cec:	str	r0, [fp, #-72]	; 0xffffffb8
   18cf0:	ldr	r0, [r9]
   18cf4:	str	r0, [sp, #104]	; 0x68
   18cf8:	ldr	r0, [fp, #28]
   18cfc:	ldr	r1, [r0]
   18d00:	mov	r3, #0
   18d04:	ldr	r0, [fp, #12]
   18d08:	cmp	r0, #2
   18d0c:	str	r1, [sp, #20]
   18d10:	blt	18dac <ReadCompressedDataSlabN+0x53c>
   18d14:	mov	r3, #0
   18d18:	mov	r7, #1
   18d1c:	mov	r5, r9
   18d20:	ldr	r0, [fp, #20]
   18d24:	sub	r8, fp, #72	; 0x48
   18d28:	mov	lr, r3
   18d2c:	ldr	r1, [fp, #24]
   18d30:	ldr	r2, [r1, r7, lsl #2]
   18d34:	sub	r2, r2, #1
   18d38:	str	r2, [r8, r7, lsl #2]
   18d3c:	sub	ip, r7, #1
   18d40:	ldr	r6, [r9, ip, lsl #2]
   18d44:	str	r6, [sl, r7, lsl #2]
   18d48:	mov	r4, #0
   18d4c:	mov	r1, r5
   18d50:	ldr	r3, [r1, -r4, lsl #2]!
   18d54:	mul	r2, r2, r3
   18d58:	ldr	r1, [r1, #4]
   18d5c:	mul	r6, r1, r6
   18d60:	add	r4, r4, #1
   18d64:	cmp	r7, r4
   18d68:	bne	18d4c <ReadCompressedDataSlabN+0x4dc>
   18d6c:	str	r6, [sl, r7, lsl #2]
   18d70:	str	r2, [r8, r7, lsl #2]
   18d74:	ldr	r1, [sl, ip, lsl #2]
   18d78:	ldr	r2, [r0, r7, lsl #2]
   18d7c:	mov	r3, lr
   18d80:	mla	r3, r2, r1, lr
   18d84:	ldr	r1, [fp, #28]
   18d88:	ldr	r1, [r1, r7, lsl #2]
   18d8c:	ldr	r2, [sp, #20]
   18d90:	mul	r2, r1, r2
   18d94:	str	r2, [sp, #20]
   18d98:	add	r5, r5, #4
   18d9c:	add	r7, r7, #1
   18da0:	ldr	r1, [fp, #12]
   18da4:	cmp	r7, r1
   18da8:	bne	18d28 <ReadCompressedDataSlabN+0x4b8>
   18dac:	add	r1, sp, #48	; 0x30
   18db0:	ldr	r0, [sp, #44]	; 0x2c
   18db4:	ldr	r2, [fp, #8]
   18db8:	str	r3, [sp, #28]
   18dbc:	bl	26ac <InflateSkipData>
   18dc0:	ldr	r0, [fp, #24]
   18dc4:	ldr	r0, [r0]
   18dc8:	cmp	r0, #1
   18dcc:	bne	1ad04 <ReadCompressedDataSlabN+0x2494>
   18dd0:	ldr	r8, [sp, #20]
   18dd4:	cmp	r8, #1
   18dd8:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   18ddc:	ldr	r0, [fp, #20]
   18de0:	add	r6, r0, #4
   18de4:	ldr	r0, [fp, #28]
   18de8:	add	r8, r0, #4
   18dec:	sub	r0, fp, #112	; 0x70
   18df0:	orr	r4, r0, #4
   18df4:	sub	r0, fp, #72	; 0x48
   18df8:	orr	r0, r0, #4
   18dfc:	str	r0, [sp, #24]
   18e00:	add	r1, sp, #48	; 0x30
   18e04:	mov	r0, #0
   18e08:	str	r0, [sp, #40]	; 0x28
   18e0c:	str	r8, [sp, #32]
   18e10:	ldr	r9, [fp, #20]
   18e14:	ldr	r3, [r9]
   18e18:	cmp	r3, #0
   18e1c:	beq	18e4c <ReadCompressedDataSlabN+0x5dc>
   18e20:	ldr	r5, [sp, #44]	; 0x2c
   18e24:	mov	r0, r5
   18e28:	ldr	r7, [fp, #8]
   18e2c:	mov	r8, r1
   18e30:	mov	r2, r7
   18e34:	bl	26ac <InflateSkipData>
   18e38:	ldr	r0, [r9]
   18e3c:	ldr	r1, [sp, #28]
   18e40:	add	r1, r0, r1
   18e44:	str	r1, [sp, #28]
   18e48:	b	18e58 <ReadCompressedDataSlabN+0x5e8>
   18e4c:	ldr	r5, [sp, #44]	; 0x2c
   18e50:	ldr	r7, [fp, #8]
   18e54:	mov	r8, r1
   18e58:	ldr	r0, [fp, #28]
   18e5c:	ldr	r0, [r0]
   18e60:	str	r0, [sp]
   18e64:	ldr	r0, [sp, #36]	; 0x24
   18e68:	ldr	r1, [sp, #40]	; 0x28
   18e6c:	add	r2, r0, r1, lsl #2
   18e70:	mov	r0, r5
   18e74:	mov	r1, r8
   18e78:	mov	r3, r7
   18e7c:	bl	7534 <ReadCompressedSingleData>
   18e80:	ldr	r9, [fp, #20]
   18e84:	ldr	r0, [r9]
   18e88:	ldr	r1, [fp, #16]
   18e8c:	ldr	r1, [r1]
   18e90:	sub	r0, r1, r0
   18e94:	ldr	r1, [fp, #28]
   18e98:	ldr	r1, [r1]
   18e9c:	sub	r3, r0, r1
   18ea0:	mov	r0, r5
   18ea4:	mov	r1, r8
   18ea8:	mov	r2, r7
   18eac:	bl	26ac <InflateSkipData>
   18eb0:	ldr	r0, [fp, #16]
   18eb4:	ldr	r0, [r0]
   18eb8:	ldr	r1, [sp, #28]
   18ebc:	add	r0, r0, r1
   18ec0:	ldr	r1, [r9]
   18ec4:	sub	r3, r0, r1
   18ec8:	ldr	r0, [fp, #12]
   18ecc:	cmp	r0, #2
   18ed0:	blt	18ff8 <ReadCompressedDataSlabN+0x788>
   18ed4:	mov	r0, #0
   18ed8:	ldr	r8, [sp, #32]
   18edc:	mov	r9, r0
   18ee0:	ldr	r0, [r4, r0, lsl #2]
   18ee4:	add	r0, r0, #1
   18ee8:	str	r0, [r4, r9, lsl #2]
   18eec:	ldr	r1, [r8, r9, lsl #2]
   18ef0:	sdiv	r2, r0, r1
   18ef4:	mls	r0, r2, r1, r0
   18ef8:	cmp	r0, #0
   18efc:	bne	18fc8 <ReadCompressedDataSlabN+0x758>
   18f00:	mov	r0, #0
   18f04:	str	r0, [r4, r9, lsl #2]
   18f08:	mov	r5, sl
   18f0c:	add	sl, sl, r9, lsl #2
   18f10:	ldr	r0, [sl, #4]
   18f14:	sdiv	r1, r3, r0
   18f18:	mls	r1, r1, r0, r3
   18f1c:	cmp	r1, #0
   18f20:	beq	18f74 <ReadCompressedDataSlabN+0x704>
   18f24:	ldr	r2, [r5, r9, lsl #2]
   18f28:	mov	r7, r3
   18f2c:	ldr	r3, [r6, r9, lsl #2]
   18f30:	sub	r0, r0, r1
   18f34:	mla	r3, r3, r2, r0
   18f38:	ldr	r0, [sp, #44]	; 0x2c
   18f3c:	add	r1, sp, #48	; 0x30
   18f40:	ldr	r2, [fp, #8]
   18f44:	bl	26ac <InflateSkipData>
   18f48:	ldr	r0, [sl, #4]
   18f4c:	add	r1, r0, r7
   18f50:	sdiv	r2, r7, r0
   18f54:	mul	r0, r2, r0
   18f58:	sub	r0, r0, r7
   18f5c:	add	r0, r1, r0
   18f60:	ldr	r1, [r5, r9, lsl #2]
   18f64:	ldr	r2, [r6, r9, lsl #2]
   18f68:	mla	r3, r2, r1, r0
   18f6c:	mov	sl, r5
   18f70:	b	18fb0 <ReadCompressedDataSlabN+0x740>
   18f74:	ldr	r0, [r6, r9, lsl #2]
   18f78:	add	sl, sp, #104	; 0x68
   18f7c:	cmp	r0, #0
   18f80:	beq	18fb0 <ReadCompressedDataSlabN+0x740>
   18f84:	ldr	r1, [sl, r9, lsl #2]
   18f88:	mov	r5, r3
   18f8c:	mul	r3, r1, r0
   18f90:	ldr	r0, [sp, #44]	; 0x2c
   18f94:	add	r1, sp, #48	; 0x30
   18f98:	ldr	r2, [fp, #8]
   18f9c:	bl	26ac <InflateSkipData>
   18fa0:	mov	r3, r5
   18fa4:	ldr	r0, [sl, r9, lsl #2]
   18fa8:	ldr	r1, [r6, r9, lsl #2]
   18fac:	mla	r3, r1, r0, r5
   18fb0:	add	r0, r9, #1
   18fb4:	add	r1, r9, #2
   18fb8:	ldr	r2, [fp, #12]
   18fbc:	cmp	r1, r2
   18fc0:	blt	18edc <ReadCompressedDataSlabN+0x66c>
   18fc4:	b	18ff8 <ReadCompressedDataSlabN+0x788>
   18fc8:	ldr	r0, [sp, #24]
   18fcc:	ldr	r7, [r0, r9, lsl #2]
   18fd0:	cmp	r7, #0
   18fd4:	beq	18ff8 <ReadCompressedDataSlabN+0x788>
   18fd8:	ldr	r0, [sp, #44]	; 0x2c
   18fdc:	add	r1, sp, #48	; 0x30
   18fe0:	ldr	r2, [fp, #8]
   18fe4:	mov	r5, r3
   18fe8:	mov	r3, r7
   18fec:	bl	26ac <InflateSkipData>
   18ff0:	mov	r3, r5
   18ff4:	add	r3, r7, r5
   18ff8:	str	r3, [sp, #28]
   18ffc:	ldr	r0, [fp, #28]
   19000:	ldr	r0, [r0]
   19004:	ldr	r1, [sp, #40]	; 0x28
   19008:	add	r1, r0, r1
   1900c:	ldr	r0, [sp, #20]
   19010:	str	r1, [sp, #40]	; 0x28
   19014:	cmp	r1, r0
   19018:	add	r1, sp, #48	; 0x30
   1901c:	blt	18e10 <ReadCompressedDataSlabN+0x5a0>
   19020:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19024:	ldr	r8, [fp, #24]
   19028:	ldr	r0, [r8]
   1902c:	sub	r0, r0, #1
   19030:	str	r0, [fp, #-72]	; 0xffffffb8
   19034:	ldr	r0, [r9]
   19038:	str	r0, [sp, #104]	; 0x68
   1903c:	ldr	r0, [fp, #28]
   19040:	ldr	r0, [r0]
   19044:	str	r0, [sp, #28]
   19048:	mov	r8, #0
   1904c:	ldr	r0, [fp, #12]
   19050:	cmp	r0, #2
   19054:	ldr	r0, [sp, #44]	; 0x2c
   19058:	blt	190f0 <ReadCompressedDataSlabN+0x880>
   1905c:	mov	r8, #0
   19060:	mov	r7, #1
   19064:	mov	r5, r9
   19068:	ldr	lr, [fp, #20]
   1906c:	sub	r3, fp, #72	; 0x48
   19070:	ldr	r1, [fp, #24]
   19074:	ldr	r2, [r1, r7, lsl #2]
   19078:	sub	r2, r2, #1
   1907c:	str	r2, [r3, r7, lsl #2]
   19080:	sub	ip, r7, #1
   19084:	ldr	r6, [r9, ip, lsl #2]
   19088:	str	r6, [sl, r7, lsl #2]
   1908c:	mov	r4, #0
   19090:	mov	r1, r5
   19094:	ldr	r3, [r1, -r4, lsl #2]!
   19098:	mul	r2, r2, r3
   1909c:	ldr	r1, [r1, #4]
   190a0:	mul	r6, r1, r6
   190a4:	add	r4, r4, #1
   190a8:	cmp	r7, r4
   190ac:	bne	19090 <ReadCompressedDataSlabN+0x820>
   190b0:	str	r6, [sl, r7, lsl #2]
   190b4:	sub	r3, fp, #72	; 0x48
   190b8:	str	r2, [r3, r7, lsl #2]
   190bc:	ldr	r1, [sl, ip, lsl #2]
   190c0:	ldr	r2, [lr, r7, lsl #2]
   190c4:	mla	r8, r2, r1, r8
   190c8:	ldr	r1, [fp, #28]
   190cc:	ldr	r1, [r1, r7, lsl #2]
   190d0:	ldr	r2, [sp, #28]
   190d4:	mul	r2, r1, r2
   190d8:	str	r2, [sp, #28]
   190dc:	add	r5, r5, #4
   190e0:	add	r7, r7, #1
   190e4:	ldr	r1, [fp, #12]
   190e8:	cmp	r7, r1
   190ec:	bne	19070 <ReadCompressedDataSlabN+0x800>
   190f0:	add	r1, sp, #48	; 0x30
   190f4:	ldr	r2, [fp, #8]
   190f8:	mov	r7, r8
   190fc:	mov	r3, r8
   19100:	bl	26ac <InflateSkipData>
   19104:	ldr	r0, [fp, #24]
   19108:	ldr	r0, [r0]
   1910c:	cmp	r0, #1
   19110:	bne	1b00c <ReadCompressedDataSlabN+0x279c>
   19114:	ldr	r0, [sp, #28]
   19118:	cmp	r0, #1
   1911c:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19120:	mov	r6, r7
   19124:	ldr	r0, [fp, #20]
   19128:	add	r7, r0, #4
   1912c:	ldr	r0, [fp, #28]
   19130:	add	r0, r0, #4
   19134:	str	r0, [sp, #40]	; 0x28
   19138:	sub	r0, fp, #112	; 0x70
   1913c:	orr	r4, r0, #4
   19140:	sub	r0, fp, #72	; 0x48
   19144:	orr	r0, r0, #4
   19148:	str	r0, [sp, #20]
   1914c:	add	r1, sp, #48	; 0x30
   19150:	mov	r0, #0
   19154:	str	r0, [sp, #32]
   19158:	str	r7, [sp, #24]
   1915c:	ldr	r9, [fp, #20]
   19160:	ldr	r3, [r9]
   19164:	cmp	r3, #0
   19168:	beq	19198 <ReadCompressedDataSlabN+0x928>
   1916c:	mov	r7, r9
   19170:	ldr	r0, [sp, #44]	; 0x2c
   19174:	mov	r8, r0
   19178:	ldr	r9, [fp, #8]
   1917c:	mov	r5, r1
   19180:	mov	r2, r9
   19184:	bl	26ac <InflateSkipData>
   19188:	ldr	r0, [r7]
   1918c:	add	r6, r0, r6
   19190:	ldr	r7, [fp, #28]
   19194:	b	191a8 <ReadCompressedDataSlabN+0x938>
   19198:	ldr	r8, [sp, #44]	; 0x2c
   1919c:	ldr	r7, [fp, #28]
   191a0:	ldr	r9, [fp, #8]
   191a4:	mov	r5, r1
   191a8:	ldr	r0, [r7]
   191ac:	str	r0, [sp]
   191b0:	ldr	r0, [sp, #36]	; 0x24
   191b4:	ldr	r1, [sp, #32]
   191b8:	add	r2, r0, r1
   191bc:	mov	r0, r8
   191c0:	mov	r1, r5
   191c4:	mov	r3, r9
   191c8:	bl	12e9c <ReadCompressedInt8Data>
   191cc:	ldr	r0, [fp, #20]
   191d0:	mov	r2, r9
   191d4:	mov	r9, r0
   191d8:	ldr	r0, [r0]
   191dc:	ldr	r1, [fp, #16]
   191e0:	ldr	r1, [r1]
   191e4:	sub	r0, r1, r0
   191e8:	ldr	r1, [r7]
   191ec:	sub	r3, r0, r1
   191f0:	mov	r0, r8
   191f4:	mov	r1, r5
   191f8:	bl	26ac <InflateSkipData>
   191fc:	ldr	r0, [fp, #16]
   19200:	ldr	r0, [r0]
   19204:	add	r0, r0, r6
   19208:	ldr	r1, [r9]
   1920c:	sub	r6, r0, r1
   19210:	ldr	r0, [fp, #12]
   19214:	cmp	r0, #2
   19218:	blt	19334 <ReadCompressedDataSlabN+0xac4>
   1921c:	mov	r0, #0
   19220:	ldr	r8, [fp, #8]
   19224:	ldr	r7, [sp, #24]
   19228:	mov	r9, r0
   1922c:	ldr	r0, [r4, r0, lsl #2]
   19230:	add	r0, r0, #1
   19234:	str	r0, [r4, r9, lsl #2]
   19238:	ldr	r1, [sp, #40]	; 0x28
   1923c:	ldr	r1, [r1, r9, lsl #2]
   19240:	sdiv	r2, r0, r1
   19244:	mls	r0, r2, r1, r0
   19248:	cmp	r0, #0
   1924c:	bne	1930c <ReadCompressedDataSlabN+0xa9c>
   19250:	mov	r0, #0
   19254:	str	r0, [r4, r9, lsl #2]
   19258:	mov	r5, sl
   1925c:	add	sl, sl, r9, lsl #2
   19260:	ldr	r0, [sl, #4]
   19264:	sdiv	r1, r6, r0
   19268:	mls	r1, r1, r0, r6
   1926c:	cmp	r1, #0
   19270:	beq	192c0 <ReadCompressedDataSlabN+0xa50>
   19274:	ldr	r2, [r5, r9, lsl #2]
   19278:	ldr	r3, [r7, r9, lsl #2]
   1927c:	sub	r0, r0, r1
   19280:	mla	r3, r3, r2, r0
   19284:	ldr	r0, [sp, #44]	; 0x2c
   19288:	add	r1, sp, #48	; 0x30
   1928c:	mov	r2, r8
   19290:	bl	26ac <InflateSkipData>
   19294:	ldr	r0, [sl, #4]
   19298:	add	r1, r0, r6
   1929c:	sdiv	r2, r6, r0
   192a0:	mul	r0, r2, r0
   192a4:	sub	r0, r0, r6
   192a8:	add	r0, r1, r0
   192ac:	ldr	r1, [r5, r9, lsl #2]
   192b0:	ldr	r2, [r7, r9, lsl #2]
   192b4:	mla	r6, r2, r1, r0
   192b8:	mov	sl, r5
   192bc:	b	192f4 <ReadCompressedDataSlabN+0xa84>
   192c0:	ldr	r0, [r7, r9, lsl #2]
   192c4:	add	sl, sp, #104	; 0x68
   192c8:	cmp	r0, #0
   192cc:	beq	192f4 <ReadCompressedDataSlabN+0xa84>
   192d0:	ldr	r1, [sl, r9, lsl #2]
   192d4:	mul	r3, r1, r0
   192d8:	ldr	r0, [sp, #44]	; 0x2c
   192dc:	add	r1, sp, #48	; 0x30
   192e0:	mov	r2, r8
   192e4:	bl	26ac <InflateSkipData>
   192e8:	ldr	r0, [sl, r9, lsl #2]
   192ec:	ldr	r1, [r7, r9, lsl #2]
   192f0:	mla	r6, r1, r0, r6
   192f4:	add	r0, r9, #1
   192f8:	add	r1, r9, #2
   192fc:	ldr	r2, [fp, #12]
   19300:	cmp	r1, r2
   19304:	blt	19228 <ReadCompressedDataSlabN+0x9b8>
   19308:	b	19334 <ReadCompressedDataSlabN+0xac4>
   1930c:	ldr	r0, [sp, #20]
   19310:	ldr	r5, [r0, r9, lsl #2]
   19314:	cmp	r5, #0
   19318:	beq	19334 <ReadCompressedDataSlabN+0xac4>
   1931c:	ldr	r0, [sp, #44]	; 0x2c
   19320:	add	r1, sp, #48	; 0x30
   19324:	mov	r2, r8
   19328:	mov	r3, r5
   1932c:	bl	26ac <InflateSkipData>
   19330:	add	r6, r5, r6
   19334:	ldr	r0, [fp, #28]
   19338:	ldr	r0, [r0]
   1933c:	ldr	r1, [sp, #32]
   19340:	add	r1, r0, r1
   19344:	ldr	r0, [sp, #28]
   19348:	str	r1, [sp, #32]
   1934c:	cmp	r1, r0
   19350:	add	r1, sp, #48	; 0x30
   19354:	blt	1915c <ReadCompressedDataSlabN+0x8ec>
   19358:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1935c:	ldr	r8, [fp, #24]
   19360:	ldr	r0, [r8]
   19364:	sub	r0, r0, #1
   19368:	str	r0, [fp, #-72]	; 0xffffffb8
   1936c:	ldr	r0, [r9]
   19370:	str	r0, [sp, #104]	; 0x68
   19374:	ldr	r0, [fp, #28]
   19378:	ldr	r0, [r0]
   1937c:	str	r0, [sp, #28]
   19380:	mov	r8, #0
   19384:	ldr	r0, [fp, #12]
   19388:	cmp	r0, #2
   1938c:	ldr	r0, [sp, #44]	; 0x2c
   19390:	blt	19428 <ReadCompressedDataSlabN+0xbb8>
   19394:	mov	r8, #0
   19398:	mov	r7, #1
   1939c:	mov	r5, r9
   193a0:	ldr	lr, [fp, #20]
   193a4:	sub	r3, fp, #72	; 0x48
   193a8:	ldr	r1, [fp, #24]
   193ac:	ldr	r2, [r1, r7, lsl #2]
   193b0:	sub	r2, r2, #1
   193b4:	str	r2, [r3, r7, lsl #2]
   193b8:	sub	ip, r7, #1
   193bc:	ldr	r6, [r9, ip, lsl #2]
   193c0:	str	r6, [sl, r7, lsl #2]
   193c4:	mov	r4, #0
   193c8:	mov	r1, r5
   193cc:	ldr	r3, [r1, -r4, lsl #2]!
   193d0:	mul	r2, r2, r3
   193d4:	ldr	r1, [r1, #4]
   193d8:	mul	r6, r1, r6
   193dc:	add	r4, r4, #1
   193e0:	cmp	r7, r4
   193e4:	bne	193c8 <ReadCompressedDataSlabN+0xb58>
   193e8:	str	r6, [sl, r7, lsl #2]
   193ec:	sub	r3, fp, #72	; 0x48
   193f0:	str	r2, [r3, r7, lsl #2]
   193f4:	ldr	r1, [sl, ip, lsl #2]
   193f8:	ldr	r2, [lr, r7, lsl #2]
   193fc:	mla	r8, r2, r1, r8
   19400:	ldr	r1, [fp, #28]
   19404:	ldr	r1, [r1, r7, lsl #2]
   19408:	ldr	r2, [sp, #28]
   1940c:	mul	r2, r1, r2
   19410:	str	r2, [sp, #28]
   19414:	add	r5, r5, #4
   19418:	add	r7, r7, #1
   1941c:	ldr	r1, [fp, #12]
   19420:	cmp	r7, r1
   19424:	bne	193a8 <ReadCompressedDataSlabN+0xb38>
   19428:	add	r1, sp, #48	; 0x30
   1942c:	ldr	r2, [fp, #8]
   19430:	mov	r7, r8
   19434:	mov	r3, r8
   19438:	bl	26ac <InflateSkipData>
   1943c:	ldr	r0, [fp, #24]
   19440:	ldr	r0, [r0]
   19444:	cmp	r0, #1
   19448:	bne	1b314 <ReadCompressedDataSlabN+0x2aa4>
   1944c:	ldr	r0, [sp, #28]
   19450:	cmp	r0, #1
   19454:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19458:	mov	r6, r7
   1945c:	ldr	r0, [fp, #20]
   19460:	add	r7, r0, #4
   19464:	ldr	r0, [fp, #28]
   19468:	add	r0, r0, #4
   1946c:	str	r0, [sp, #40]	; 0x28
   19470:	sub	r0, fp, #112	; 0x70
   19474:	orr	r4, r0, #4
   19478:	sub	r0, fp, #72	; 0x48
   1947c:	orr	r0, r0, #4
   19480:	str	r0, [sp, #20]
   19484:	add	r1, sp, #48	; 0x30
   19488:	mov	r0, #0
   1948c:	str	r0, [sp, #32]
   19490:	str	r7, [sp, #24]
   19494:	ldr	r9, [fp, #20]
   19498:	ldr	r3, [r9]
   1949c:	cmp	r3, #0
   194a0:	beq	194d0 <ReadCompressedDataSlabN+0xc60>
   194a4:	mov	r7, r9
   194a8:	ldr	r0, [sp, #44]	; 0x2c
   194ac:	mov	r8, r0
   194b0:	ldr	r9, [fp, #8]
   194b4:	mov	r5, r1
   194b8:	mov	r2, r9
   194bc:	bl	26ac <InflateSkipData>
   194c0:	ldr	r0, [r7]
   194c4:	add	r6, r0, r6
   194c8:	ldr	r7, [fp, #28]
   194cc:	b	194e0 <ReadCompressedDataSlabN+0xc70>
   194d0:	ldr	r8, [sp, #44]	; 0x2c
   194d4:	ldr	r7, [fp, #28]
   194d8:	ldr	r9, [fp, #8]
   194dc:	mov	r5, r1
   194e0:	ldr	r0, [r7]
   194e4:	str	r0, [sp]
   194e8:	ldr	r0, [sp, #36]	; 0x24
   194ec:	ldr	r1, [sp, #32]
   194f0:	add	r2, r0, r1
   194f4:	mov	r0, r8
   194f8:	mov	r1, r5
   194fc:	mov	r3, r9
   19500:	bl	14888 <ReadCompressedUInt8Data>
   19504:	ldr	r0, [fp, #20]
   19508:	mov	r2, r9
   1950c:	mov	r9, r0
   19510:	ldr	r0, [r0]
   19514:	ldr	r1, [fp, #16]
   19518:	ldr	r1, [r1]
   1951c:	sub	r0, r1, r0
   19520:	ldr	r1, [r7]
   19524:	sub	r3, r0, r1
   19528:	mov	r0, r8
   1952c:	mov	r1, r5
   19530:	bl	26ac <InflateSkipData>
   19534:	ldr	r0, [fp, #16]
   19538:	ldr	r0, [r0]
   1953c:	add	r0, r0, r6
   19540:	ldr	r1, [r9]
   19544:	sub	r6, r0, r1
   19548:	ldr	r0, [fp, #12]
   1954c:	cmp	r0, #2
   19550:	blt	1966c <ReadCompressedDataSlabN+0xdfc>
   19554:	mov	r0, #0
   19558:	ldr	r8, [fp, #8]
   1955c:	ldr	r7, [sp, #24]
   19560:	mov	r9, r0
   19564:	ldr	r0, [r4, r0, lsl #2]
   19568:	add	r0, r0, #1
   1956c:	str	r0, [r4, r9, lsl #2]
   19570:	ldr	r1, [sp, #40]	; 0x28
   19574:	ldr	r1, [r1, r9, lsl #2]
   19578:	sdiv	r2, r0, r1
   1957c:	mls	r0, r2, r1, r0
   19580:	cmp	r0, #0
   19584:	bne	19644 <ReadCompressedDataSlabN+0xdd4>
   19588:	mov	r0, #0
   1958c:	str	r0, [r4, r9, lsl #2]
   19590:	mov	r5, sl
   19594:	add	sl, sl, r9, lsl #2
   19598:	ldr	r0, [sl, #4]
   1959c:	sdiv	r1, r6, r0
   195a0:	mls	r1, r1, r0, r6
   195a4:	cmp	r1, #0
   195a8:	beq	195f8 <ReadCompressedDataSlabN+0xd88>
   195ac:	ldr	r2, [r5, r9, lsl #2]
   195b0:	ldr	r3, [r7, r9, lsl #2]
   195b4:	sub	r0, r0, r1
   195b8:	mla	r3, r3, r2, r0
   195bc:	ldr	r0, [sp, #44]	; 0x2c
   195c0:	add	r1, sp, #48	; 0x30
   195c4:	mov	r2, r8
   195c8:	bl	26ac <InflateSkipData>
   195cc:	ldr	r0, [sl, #4]
   195d0:	add	r1, r0, r6
   195d4:	sdiv	r2, r6, r0
   195d8:	mul	r0, r2, r0
   195dc:	sub	r0, r0, r6
   195e0:	add	r0, r1, r0
   195e4:	ldr	r1, [r5, r9, lsl #2]
   195e8:	ldr	r2, [r7, r9, lsl #2]
   195ec:	mla	r6, r2, r1, r0
   195f0:	mov	sl, r5
   195f4:	b	1962c <ReadCompressedDataSlabN+0xdbc>
   195f8:	ldr	r0, [r7, r9, lsl #2]
   195fc:	add	sl, sp, #104	; 0x68
   19600:	cmp	r0, #0
   19604:	beq	1962c <ReadCompressedDataSlabN+0xdbc>
   19608:	ldr	r1, [sl, r9, lsl #2]
   1960c:	mul	r3, r1, r0
   19610:	ldr	r0, [sp, #44]	; 0x2c
   19614:	add	r1, sp, #48	; 0x30
   19618:	mov	r2, r8
   1961c:	bl	26ac <InflateSkipData>
   19620:	ldr	r0, [sl, r9, lsl #2]
   19624:	ldr	r1, [r7, r9, lsl #2]
   19628:	mla	r6, r1, r0, r6
   1962c:	add	r0, r9, #1
   19630:	add	r1, r9, #2
   19634:	ldr	r2, [fp, #12]
   19638:	cmp	r1, r2
   1963c:	blt	19560 <ReadCompressedDataSlabN+0xcf0>
   19640:	b	1966c <ReadCompressedDataSlabN+0xdfc>
   19644:	ldr	r0, [sp, #20]
   19648:	ldr	r5, [r0, r9, lsl #2]
   1964c:	cmp	r5, #0
   19650:	beq	1966c <ReadCompressedDataSlabN+0xdfc>
   19654:	ldr	r0, [sp, #44]	; 0x2c
   19658:	add	r1, sp, #48	; 0x30
   1965c:	mov	r2, r8
   19660:	mov	r3, r5
   19664:	bl	26ac <InflateSkipData>
   19668:	add	r6, r5, r6
   1966c:	ldr	r0, [fp, #28]
   19670:	ldr	r0, [r0]
   19674:	ldr	r1, [sp, #32]
   19678:	add	r1, r0, r1
   1967c:	ldr	r0, [sp, #28]
   19680:	str	r1, [sp, #32]
   19684:	cmp	r1, r0
   19688:	add	r1, sp, #48	; 0x30
   1968c:	blt	19494 <ReadCompressedDataSlabN+0xc24>
   19690:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19694:	ldr	r0, [fp, #24]
   19698:	ldr	r0, [r0]
   1969c:	sub	r0, r0, #1
   196a0:	str	r0, [fp, #-72]	; 0xffffffb8
   196a4:	ldr	r0, [r9]
   196a8:	str	r0, [sp, #104]	; 0x68
   196ac:	ldr	r0, [fp, #28]
   196b0:	ldr	r1, [r0]
   196b4:	mov	r3, #0
   196b8:	ldr	r0, [fp, #12]
   196bc:	cmp	r0, #2
   196c0:	str	r1, [sp, #20]
   196c4:	blt	19760 <ReadCompressedDataSlabN+0xef0>
   196c8:	mov	r3, #0
   196cc:	mov	r7, #1
   196d0:	mov	r5, r9
   196d4:	ldr	r0, [fp, #20]
   196d8:	sub	r8, fp, #72	; 0x48
   196dc:	mov	lr, r3
   196e0:	ldr	r1, [fp, #24]
   196e4:	ldr	r2, [r1, r7, lsl #2]
   196e8:	sub	r2, r2, #1
   196ec:	str	r2, [r8, r7, lsl #2]
   196f0:	sub	ip, r7, #1
   196f4:	ldr	r6, [r9, ip, lsl #2]
   196f8:	str	r6, [sl, r7, lsl #2]
   196fc:	mov	r4, #0
   19700:	mov	r1, r5
   19704:	ldr	r3, [r1, -r4, lsl #2]!
   19708:	mul	r2, r2, r3
   1970c:	ldr	r1, [r1, #4]
   19710:	mul	r6, r1, r6
   19714:	add	r4, r4, #1
   19718:	cmp	r7, r4
   1971c:	bne	19700 <ReadCompressedDataSlabN+0xe90>
   19720:	str	r6, [sl, r7, lsl #2]
   19724:	str	r2, [r8, r7, lsl #2]
   19728:	ldr	r1, [sl, ip, lsl #2]
   1972c:	ldr	r2, [r0, r7, lsl #2]
   19730:	mov	r3, lr
   19734:	mla	r3, r2, r1, lr
   19738:	ldr	r1, [fp, #28]
   1973c:	ldr	r1, [r1, r7, lsl #2]
   19740:	ldr	r2, [sp, #20]
   19744:	mul	r2, r1, r2
   19748:	str	r2, [sp, #20]
   1974c:	add	r5, r5, #4
   19750:	add	r7, r7, #1
   19754:	ldr	r1, [fp, #12]
   19758:	cmp	r7, r1
   1975c:	bne	196dc <ReadCompressedDataSlabN+0xe6c>
   19760:	add	r1, sp, #48	; 0x30
   19764:	ldr	r0, [sp, #44]	; 0x2c
   19768:	ldr	r2, [fp, #8]
   1976c:	str	r3, [sp, #28]
   19770:	bl	26ac <InflateSkipData>
   19774:	ldr	r0, [fp, #24]
   19778:	ldr	r0, [r0]
   1977c:	cmp	r0, #1
   19780:	bne	1b61c <ReadCompressedDataSlabN+0x2dac>
   19784:	ldr	r8, [sp, #20]
   19788:	cmp	r8, #1
   1978c:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19790:	ldr	r0, [fp, #20]
   19794:	add	r6, r0, #4
   19798:	ldr	r0, [fp, #28]
   1979c:	add	r8, r0, #4
   197a0:	sub	r0, fp, #112	; 0x70
   197a4:	orr	r4, r0, #4
   197a8:	sub	r0, fp, #72	; 0x48
   197ac:	orr	r0, r0, #4
   197b0:	str	r0, [sp, #24]
   197b4:	add	r1, sp, #48	; 0x30
   197b8:	mov	r0, #0
   197bc:	str	r0, [sp, #40]	; 0x28
   197c0:	str	r8, [sp, #32]
   197c4:	ldr	r9, [fp, #20]
   197c8:	ldr	r3, [r9]
   197cc:	cmp	r3, #0
   197d0:	beq	19800 <ReadCompressedDataSlabN+0xf90>
   197d4:	ldr	r5, [sp, #44]	; 0x2c
   197d8:	mov	r0, r5
   197dc:	ldr	r7, [fp, #8]
   197e0:	mov	r8, r1
   197e4:	mov	r2, r7
   197e8:	bl	26ac <InflateSkipData>
   197ec:	ldr	r0, [r9]
   197f0:	ldr	r1, [sp, #28]
   197f4:	add	r1, r0, r1
   197f8:	str	r1, [sp, #28]
   197fc:	b	1980c <ReadCompressedDataSlabN+0xf9c>
   19800:	ldr	r5, [sp, #44]	; 0x2c
   19804:	ldr	r7, [fp, #8]
   19808:	mov	r8, r1
   1980c:	ldr	r0, [fp, #28]
   19810:	ldr	r0, [r0]
   19814:	str	r0, [sp]
   19818:	ldr	r0, [sp, #36]	; 0x24
   1981c:	ldr	r1, [sp, #40]	; 0x28
   19820:	add	r2, r0, r1, lsl #1
   19824:	mov	r0, r5
   19828:	mov	r1, r8
   1982c:	mov	r3, r7
   19830:	bl	faac <ReadCompressedInt16Data>
   19834:	ldr	r9, [fp, #20]
   19838:	ldr	r0, [r9]
   1983c:	ldr	r1, [fp, #16]
   19840:	ldr	r1, [r1]
   19844:	sub	r0, r1, r0
   19848:	ldr	r1, [fp, #28]
   1984c:	ldr	r1, [r1]
   19850:	sub	r3, r0, r1
   19854:	mov	r0, r5
   19858:	mov	r1, r8
   1985c:	mov	r2, r7
   19860:	bl	26ac <InflateSkipData>
   19864:	ldr	r0, [fp, #16]
   19868:	ldr	r0, [r0]
   1986c:	ldr	r1, [sp, #28]
   19870:	add	r0, r0, r1
   19874:	ldr	r1, [r9]
   19878:	sub	r3, r0, r1
   1987c:	ldr	r0, [fp, #12]
   19880:	cmp	r0, #2
   19884:	blt	199ac <ReadCompressedDataSlabN+0x113c>
   19888:	mov	r0, #0
   1988c:	ldr	r8, [sp, #32]
   19890:	mov	r9, r0
   19894:	ldr	r0, [r4, r0, lsl #2]
   19898:	add	r0, r0, #1
   1989c:	str	r0, [r4, r9, lsl #2]
   198a0:	ldr	r1, [r8, r9, lsl #2]
   198a4:	sdiv	r2, r0, r1
   198a8:	mls	r0, r2, r1, r0
   198ac:	cmp	r0, #0
   198b0:	bne	1997c <ReadCompressedDataSlabN+0x110c>
   198b4:	mov	r0, #0
   198b8:	str	r0, [r4, r9, lsl #2]
   198bc:	mov	r5, sl
   198c0:	add	sl, sl, r9, lsl #2
   198c4:	ldr	r0, [sl, #4]
   198c8:	sdiv	r1, r3, r0
   198cc:	mls	r1, r1, r0, r3
   198d0:	cmp	r1, #0
   198d4:	beq	19928 <ReadCompressedDataSlabN+0x10b8>
   198d8:	ldr	r2, [r5, r9, lsl #2]
   198dc:	mov	r7, r3
   198e0:	ldr	r3, [r6, r9, lsl #2]
   198e4:	sub	r0, r0, r1
   198e8:	mla	r3, r3, r2, r0
   198ec:	ldr	r0, [sp, #44]	; 0x2c
   198f0:	add	r1, sp, #48	; 0x30
   198f4:	ldr	r2, [fp, #8]
   198f8:	bl	26ac <InflateSkipData>
   198fc:	ldr	r0, [sl, #4]
   19900:	add	r1, r0, r7
   19904:	sdiv	r2, r7, r0
   19908:	mul	r0, r2, r0
   1990c:	sub	r0, r0, r7
   19910:	add	r0, r1, r0
   19914:	ldr	r1, [r5, r9, lsl #2]
   19918:	ldr	r2, [r6, r9, lsl #2]
   1991c:	mla	r3, r2, r1, r0
   19920:	mov	sl, r5
   19924:	b	19964 <ReadCompressedDataSlabN+0x10f4>
   19928:	ldr	r0, [r6, r9, lsl #2]
   1992c:	add	sl, sp, #104	; 0x68
   19930:	cmp	r0, #0
   19934:	beq	19964 <ReadCompressedDataSlabN+0x10f4>
   19938:	ldr	r1, [sl, r9, lsl #2]
   1993c:	mov	r5, r3
   19940:	mul	r3, r1, r0
   19944:	ldr	r0, [sp, #44]	; 0x2c
   19948:	add	r1, sp, #48	; 0x30
   1994c:	ldr	r2, [fp, #8]
   19950:	bl	26ac <InflateSkipData>
   19954:	mov	r3, r5
   19958:	ldr	r0, [sl, r9, lsl #2]
   1995c:	ldr	r1, [r6, r9, lsl #2]
   19960:	mla	r3, r1, r0, r5
   19964:	add	r0, r9, #1
   19968:	add	r1, r9, #2
   1996c:	ldr	r2, [fp, #12]
   19970:	cmp	r1, r2
   19974:	blt	19890 <ReadCompressedDataSlabN+0x1020>
   19978:	b	199ac <ReadCompressedDataSlabN+0x113c>
   1997c:	ldr	r0, [sp, #24]
   19980:	ldr	r7, [r0, r9, lsl #2]
   19984:	cmp	r7, #0
   19988:	beq	199ac <ReadCompressedDataSlabN+0x113c>
   1998c:	ldr	r0, [sp, #44]	; 0x2c
   19990:	add	r1, sp, #48	; 0x30
   19994:	ldr	r2, [fp, #8]
   19998:	mov	r5, r3
   1999c:	mov	r3, r7
   199a0:	bl	26ac <InflateSkipData>
   199a4:	mov	r3, r5
   199a8:	add	r3, r7, r5
   199ac:	str	r3, [sp, #28]
   199b0:	ldr	r0, [fp, #28]
   199b4:	ldr	r0, [r0]
   199b8:	ldr	r1, [sp, #40]	; 0x28
   199bc:	add	r1, r0, r1
   199c0:	ldr	r0, [sp, #20]
   199c4:	str	r1, [sp, #40]	; 0x28
   199c8:	cmp	r1, r0
   199cc:	add	r1, sp, #48	; 0x30
   199d0:	blt	197c4 <ReadCompressedDataSlabN+0xf54>
   199d4:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   199d8:	ldr	r0, [fp, #24]
   199dc:	ldr	r0, [r0]
   199e0:	sub	r0, r0, #1
   199e4:	str	r0, [fp, #-72]	; 0xffffffb8
   199e8:	ldr	r0, [r9]
   199ec:	str	r0, [sp, #104]	; 0x68
   199f0:	ldr	r0, [fp, #28]
   199f4:	ldr	r1, [r0]
   199f8:	mov	r3, #0
   199fc:	ldr	r0, [fp, #12]
   19a00:	cmp	r0, #2
   19a04:	str	r1, [sp, #20]
   19a08:	blt	19aa4 <ReadCompressedDataSlabN+0x1234>
   19a0c:	mov	r3, #0
   19a10:	mov	r7, #1
   19a14:	mov	r5, r9
   19a18:	ldr	r0, [fp, #20]
   19a1c:	sub	r8, fp, #72	; 0x48
   19a20:	mov	lr, r3
   19a24:	ldr	r1, [fp, #24]
   19a28:	ldr	r2, [r1, r7, lsl #2]
   19a2c:	sub	r2, r2, #1
   19a30:	str	r2, [r8, r7, lsl #2]
   19a34:	sub	ip, r7, #1
   19a38:	ldr	r6, [r9, ip, lsl #2]
   19a3c:	str	r6, [sl, r7, lsl #2]
   19a40:	mov	r4, #0
   19a44:	mov	r1, r5
   19a48:	ldr	r3, [r1, -r4, lsl #2]!
   19a4c:	mul	r2, r2, r3
   19a50:	ldr	r1, [r1, #4]
   19a54:	mul	r6, r1, r6
   19a58:	add	r4, r4, #1
   19a5c:	cmp	r7, r4
   19a60:	bne	19a44 <ReadCompressedDataSlabN+0x11d4>
   19a64:	str	r6, [sl, r7, lsl #2]
   19a68:	str	r2, [r8, r7, lsl #2]
   19a6c:	ldr	r1, [sl, ip, lsl #2]
   19a70:	ldr	r2, [r0, r7, lsl #2]
   19a74:	mov	r3, lr
   19a78:	mla	r3, r2, r1, lr
   19a7c:	ldr	r1, [fp, #28]
   19a80:	ldr	r1, [r1, r7, lsl #2]
   19a84:	ldr	r2, [sp, #20]
   19a88:	mul	r2, r1, r2
   19a8c:	str	r2, [sp, #20]
   19a90:	add	r5, r5, #4
   19a94:	add	r7, r7, #1
   19a98:	ldr	r1, [fp, #12]
   19a9c:	cmp	r7, r1
   19aa0:	bne	19a20 <ReadCompressedDataSlabN+0x11b0>
   19aa4:	add	r1, sp, #48	; 0x30
   19aa8:	ldr	r0, [sp, #44]	; 0x2c
   19aac:	ldr	r2, [fp, #8]
   19ab0:	str	r3, [sp, #28]
   19ab4:	bl	26ac <InflateSkipData>
   19ab8:	ldr	r0, [fp, #24]
   19abc:	ldr	r0, [r0]
   19ac0:	cmp	r0, #1
   19ac4:	bne	1b924 <ReadCompressedDataSlabN+0x30b4>
   19ac8:	ldr	r8, [sp, #20]
   19acc:	cmp	r8, #1
   19ad0:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19ad4:	ldr	r0, [fp, #20]
   19ad8:	add	r6, r0, #4
   19adc:	ldr	r0, [fp, #28]
   19ae0:	add	r8, r0, #4
   19ae4:	sub	r0, fp, #112	; 0x70
   19ae8:	orr	r4, r0, #4
   19aec:	sub	r0, fp, #72	; 0x48
   19af0:	orr	r0, r0, #4
   19af4:	str	r0, [sp, #24]
   19af8:	add	r1, sp, #48	; 0x30
   19afc:	mov	r0, #0
   19b00:	str	r0, [sp, #40]	; 0x28
   19b04:	str	r8, [sp, #32]
   19b08:	ldr	r9, [fp, #20]
   19b0c:	ldr	r3, [r9]
   19b10:	cmp	r3, #0
   19b14:	beq	19b44 <ReadCompressedDataSlabN+0x12d4>
   19b18:	ldr	r5, [sp, #44]	; 0x2c
   19b1c:	mov	r0, r5
   19b20:	ldr	r7, [fp, #8]
   19b24:	mov	r8, r1
   19b28:	mov	r2, r7
   19b2c:	bl	26ac <InflateSkipData>
   19b30:	ldr	r0, [r9]
   19b34:	ldr	r1, [sp, #28]
   19b38:	add	r1, r0, r1
   19b3c:	str	r1, [sp, #28]
   19b40:	b	19b50 <ReadCompressedDataSlabN+0x12e0>
   19b44:	ldr	r5, [sp, #44]	; 0x2c
   19b48:	ldr	r7, [fp, #8]
   19b4c:	mov	r8, r1
   19b50:	ldr	r0, [fp, #28]
   19b54:	ldr	r0, [r0]
   19b58:	str	r0, [sp]
   19b5c:	ldr	r0, [sp, #36]	; 0x24
   19b60:	ldr	r1, [sp, #40]	; 0x28
   19b64:	add	r2, r0, r1, lsl #1
   19b68:	mov	r0, r5
   19b6c:	mov	r1, r8
   19b70:	mov	r3, r7
   19b74:	bl	114b0 <ReadCompressedUInt16Data>
   19b78:	ldr	r9, [fp, #20]
   19b7c:	ldr	r0, [r9]
   19b80:	ldr	r1, [fp, #16]
   19b84:	ldr	r1, [r1]
   19b88:	sub	r0, r1, r0
   19b8c:	ldr	r1, [fp, #28]
   19b90:	ldr	r1, [r1]
   19b94:	sub	r3, r0, r1
   19b98:	mov	r0, r5
   19b9c:	mov	r1, r8
   19ba0:	mov	r2, r7
   19ba4:	bl	26ac <InflateSkipData>
   19ba8:	ldr	r0, [fp, #16]
   19bac:	ldr	r0, [r0]
   19bb0:	ldr	r1, [sp, #28]
   19bb4:	add	r0, r0, r1
   19bb8:	ldr	r1, [r9]
   19bbc:	sub	r3, r0, r1
   19bc0:	ldr	r0, [fp, #12]
   19bc4:	cmp	r0, #2
   19bc8:	blt	19cf0 <ReadCompressedDataSlabN+0x1480>
   19bcc:	mov	r0, #0
   19bd0:	ldr	r8, [sp, #32]
   19bd4:	mov	r9, r0
   19bd8:	ldr	r0, [r4, r0, lsl #2]
   19bdc:	add	r0, r0, #1
   19be0:	str	r0, [r4, r9, lsl #2]
   19be4:	ldr	r1, [r8, r9, lsl #2]
   19be8:	sdiv	r2, r0, r1
   19bec:	mls	r0, r2, r1, r0
   19bf0:	cmp	r0, #0
   19bf4:	bne	19cc0 <ReadCompressedDataSlabN+0x1450>
   19bf8:	mov	r0, #0
   19bfc:	str	r0, [r4, r9, lsl #2]
   19c00:	mov	r5, sl
   19c04:	add	sl, sl, r9, lsl #2
   19c08:	ldr	r0, [sl, #4]
   19c0c:	sdiv	r1, r3, r0
   19c10:	mls	r1, r1, r0, r3
   19c14:	cmp	r1, #0
   19c18:	beq	19c6c <ReadCompressedDataSlabN+0x13fc>
   19c1c:	ldr	r2, [r5, r9, lsl #2]
   19c20:	mov	r7, r3
   19c24:	ldr	r3, [r6, r9, lsl #2]
   19c28:	sub	r0, r0, r1
   19c2c:	mla	r3, r3, r2, r0
   19c30:	ldr	r0, [sp, #44]	; 0x2c
   19c34:	add	r1, sp, #48	; 0x30
   19c38:	ldr	r2, [fp, #8]
   19c3c:	bl	26ac <InflateSkipData>
   19c40:	ldr	r0, [sl, #4]
   19c44:	add	r1, r0, r7
   19c48:	sdiv	r2, r7, r0
   19c4c:	mul	r0, r2, r0
   19c50:	sub	r0, r0, r7
   19c54:	add	r0, r1, r0
   19c58:	ldr	r1, [r5, r9, lsl #2]
   19c5c:	ldr	r2, [r6, r9, lsl #2]
   19c60:	mla	r3, r2, r1, r0
   19c64:	mov	sl, r5
   19c68:	b	19ca8 <ReadCompressedDataSlabN+0x1438>
   19c6c:	ldr	r0, [r6, r9, lsl #2]
   19c70:	add	sl, sp, #104	; 0x68
   19c74:	cmp	r0, #0
   19c78:	beq	19ca8 <ReadCompressedDataSlabN+0x1438>
   19c7c:	ldr	r1, [sl, r9, lsl #2]
   19c80:	mov	r5, r3
   19c84:	mul	r3, r1, r0
   19c88:	ldr	r0, [sp, #44]	; 0x2c
   19c8c:	add	r1, sp, #48	; 0x30
   19c90:	ldr	r2, [fp, #8]
   19c94:	bl	26ac <InflateSkipData>
   19c98:	mov	r3, r5
   19c9c:	ldr	r0, [sl, r9, lsl #2]
   19ca0:	ldr	r1, [r6, r9, lsl #2]
   19ca4:	mla	r3, r1, r0, r5
   19ca8:	add	r0, r9, #1
   19cac:	add	r1, r9, #2
   19cb0:	ldr	r2, [fp, #12]
   19cb4:	cmp	r1, r2
   19cb8:	blt	19bd4 <ReadCompressedDataSlabN+0x1364>
   19cbc:	b	19cf0 <ReadCompressedDataSlabN+0x1480>
   19cc0:	ldr	r0, [sp, #24]
   19cc4:	ldr	r7, [r0, r9, lsl #2]
   19cc8:	cmp	r7, #0
   19ccc:	beq	19cf0 <ReadCompressedDataSlabN+0x1480>
   19cd0:	ldr	r0, [sp, #44]	; 0x2c
   19cd4:	add	r1, sp, #48	; 0x30
   19cd8:	ldr	r2, [fp, #8]
   19cdc:	mov	r5, r3
   19ce0:	mov	r3, r7
   19ce4:	bl	26ac <InflateSkipData>
   19ce8:	mov	r3, r5
   19cec:	add	r3, r7, r5
   19cf0:	str	r3, [sp, #28]
   19cf4:	ldr	r0, [fp, #28]
   19cf8:	ldr	r0, [r0]
   19cfc:	ldr	r1, [sp, #40]	; 0x28
   19d00:	add	r1, r0, r1
   19d04:	ldr	r0, [sp, #20]
   19d08:	str	r1, [sp, #40]	; 0x28
   19d0c:	cmp	r1, r0
   19d10:	add	r1, sp, #48	; 0x30
   19d14:	blt	19b08 <ReadCompressedDataSlabN+0x1298>
   19d18:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19d1c:	ldr	r0, [fp, #24]
   19d20:	ldr	r0, [r0]
   19d24:	sub	r0, r0, #1
   19d28:	str	r0, [fp, #-72]	; 0xffffffb8
   19d2c:	ldr	r0, [r9]
   19d30:	str	r0, [sp, #104]	; 0x68
   19d34:	ldr	r0, [fp, #28]
   19d38:	ldr	r1, [r0]
   19d3c:	mov	r3, #0
   19d40:	ldr	r0, [fp, #12]
   19d44:	cmp	r0, #2
   19d48:	str	r1, [sp, #20]
   19d4c:	blt	19de8 <ReadCompressedDataSlabN+0x1578>
   19d50:	mov	r3, #0
   19d54:	mov	r7, #1
   19d58:	mov	r5, r9
   19d5c:	ldr	r0, [fp, #20]
   19d60:	sub	r8, fp, #72	; 0x48
   19d64:	mov	lr, r3
   19d68:	ldr	r1, [fp, #24]
   19d6c:	ldr	r2, [r1, r7, lsl #2]
   19d70:	sub	r2, r2, #1
   19d74:	str	r2, [r8, r7, lsl #2]
   19d78:	sub	ip, r7, #1
   19d7c:	ldr	r6, [r9, ip, lsl #2]
   19d80:	str	r6, [sl, r7, lsl #2]
   19d84:	mov	r4, #0
   19d88:	mov	r1, r5
   19d8c:	ldr	r3, [r1, -r4, lsl #2]!
   19d90:	mul	r2, r2, r3
   19d94:	ldr	r1, [r1, #4]
   19d98:	mul	r6, r1, r6
   19d9c:	add	r4, r4, #1
   19da0:	cmp	r7, r4
   19da4:	bne	19d88 <ReadCompressedDataSlabN+0x1518>
   19da8:	str	r6, [sl, r7, lsl #2]
   19dac:	str	r2, [r8, r7, lsl #2]
   19db0:	ldr	r1, [sl, ip, lsl #2]
   19db4:	ldr	r2, [r0, r7, lsl #2]
   19db8:	mov	r3, lr
   19dbc:	mla	r3, r2, r1, lr
   19dc0:	ldr	r1, [fp, #28]
   19dc4:	ldr	r1, [r1, r7, lsl #2]
   19dc8:	ldr	r2, [sp, #20]
   19dcc:	mul	r2, r1, r2
   19dd0:	str	r2, [sp, #20]
   19dd4:	add	r5, r5, #4
   19dd8:	add	r7, r7, #1
   19ddc:	ldr	r1, [fp, #12]
   19de0:	cmp	r7, r1
   19de4:	bne	19d64 <ReadCompressedDataSlabN+0x14f4>
   19de8:	add	r1, sp, #48	; 0x30
   19dec:	ldr	r0, [sp, #44]	; 0x2c
   19df0:	ldr	r2, [fp, #8]
   19df4:	str	r3, [sp, #28]
   19df8:	bl	26ac <InflateSkipData>
   19dfc:	ldr	r0, [fp, #24]
   19e00:	ldr	r0, [r0]
   19e04:	cmp	r0, #1
   19e08:	bne	1bc2c <ReadCompressedDataSlabN+0x33bc>
   19e0c:	ldr	r8, [sp, #20]
   19e10:	cmp	r8, #1
   19e14:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   19e18:	ldr	r0, [fp, #20]
   19e1c:	add	r6, r0, #4
   19e20:	ldr	r0, [fp, #28]
   19e24:	add	r8, r0, #4
   19e28:	sub	r0, fp, #112	; 0x70
   19e2c:	orr	r4, r0, #4
   19e30:	sub	r0, fp, #72	; 0x48
   19e34:	orr	r0, r0, #4
   19e38:	str	r0, [sp, #24]
   19e3c:	add	r1, sp, #48	; 0x30
   19e40:	mov	r0, #0
   19e44:	str	r0, [sp, #40]	; 0x28
   19e48:	str	r8, [sp, #32]
   19e4c:	ldr	r9, [fp, #20]
   19e50:	ldr	r3, [r9]
   19e54:	cmp	r3, #0
   19e58:	beq	19e88 <ReadCompressedDataSlabN+0x1618>
   19e5c:	ldr	r5, [sp, #44]	; 0x2c
   19e60:	mov	r0, r5
   19e64:	ldr	r7, [fp, #8]
   19e68:	mov	r8, r1
   19e6c:	mov	r2, r7
   19e70:	bl	26ac <InflateSkipData>
   19e74:	ldr	r0, [r9]
   19e78:	ldr	r1, [sp, #28]
   19e7c:	add	r1, r0, r1
   19e80:	str	r1, [sp, #28]
   19e84:	b	19e94 <ReadCompressedDataSlabN+0x1624>
   19e88:	ldr	r5, [sp, #44]	; 0x2c
   19e8c:	ldr	r7, [fp, #8]
   19e90:	mov	r8, r1
   19e94:	ldr	r0, [fp, #28]
   19e98:	ldr	r0, [r0]
   19e9c:	str	r0, [sp]
   19ea0:	ldr	r0, [sp, #36]	; 0x24
   19ea4:	ldr	r1, [sp, #40]	; 0x28
   19ea8:	add	r2, r0, r1, lsl #2
   19eac:	mov	r0, r5
   19eb0:	mov	r1, r8
   19eb4:	mov	r3, r7
   19eb8:	bl	c6d4 <ReadCompressedInt32Data>
   19ebc:	ldr	r9, [fp, #20]
   19ec0:	ldr	r0, [r9]
   19ec4:	ldr	r1, [fp, #16]
   19ec8:	ldr	r1, [r1]
   19ecc:	sub	r0, r1, r0
   19ed0:	ldr	r1, [fp, #28]
   19ed4:	ldr	r1, [r1]
   19ed8:	sub	r3, r0, r1
   19edc:	mov	r0, r5
   19ee0:	mov	r1, r8
   19ee4:	mov	r2, r7
   19ee8:	bl	26ac <InflateSkipData>
   19eec:	ldr	r0, [fp, #16]
   19ef0:	ldr	r0, [r0]
   19ef4:	ldr	r1, [sp, #28]
   19ef8:	add	r0, r0, r1
   19efc:	ldr	r1, [r9]
   19f00:	sub	r3, r0, r1
   19f04:	ldr	r0, [fp, #12]
   19f08:	cmp	r0, #2
   19f0c:	blt	1a034 <ReadCompressedDataSlabN+0x17c4>
   19f10:	mov	r0, #0
   19f14:	ldr	r8, [sp, #32]
   19f18:	mov	r9, r0
   19f1c:	ldr	r0, [r4, r0, lsl #2]
   19f20:	add	r0, r0, #1
   19f24:	str	r0, [r4, r9, lsl #2]
   19f28:	ldr	r1, [r8, r9, lsl #2]
   19f2c:	sdiv	r2, r0, r1
   19f30:	mls	r0, r2, r1, r0
   19f34:	cmp	r0, #0
   19f38:	bne	1a004 <ReadCompressedDataSlabN+0x1794>
   19f3c:	mov	r0, #0
   19f40:	str	r0, [r4, r9, lsl #2]
   19f44:	mov	r5, sl
   19f48:	add	sl, sl, r9, lsl #2
   19f4c:	ldr	r0, [sl, #4]
   19f50:	sdiv	r1, r3, r0
   19f54:	mls	r1, r1, r0, r3
   19f58:	cmp	r1, #0
   19f5c:	beq	19fb0 <ReadCompressedDataSlabN+0x1740>
   19f60:	ldr	r2, [r5, r9, lsl #2]
   19f64:	mov	r7, r3
   19f68:	ldr	r3, [r6, r9, lsl #2]
   19f6c:	sub	r0, r0, r1
   19f70:	mla	r3, r3, r2, r0
   19f74:	ldr	r0, [sp, #44]	; 0x2c
   19f78:	add	r1, sp, #48	; 0x30
   19f7c:	ldr	r2, [fp, #8]
   19f80:	bl	26ac <InflateSkipData>
   19f84:	ldr	r0, [sl, #4]
   19f88:	add	r1, r0, r7
   19f8c:	sdiv	r2, r7, r0
   19f90:	mul	r0, r2, r0
   19f94:	sub	r0, r0, r7
   19f98:	add	r0, r1, r0
   19f9c:	ldr	r1, [r5, r9, lsl #2]
   19fa0:	ldr	r2, [r6, r9, lsl #2]
   19fa4:	mla	r3, r2, r1, r0
   19fa8:	mov	sl, r5
   19fac:	b	19fec <ReadCompressedDataSlabN+0x177c>
   19fb0:	ldr	r0, [r6, r9, lsl #2]
   19fb4:	add	sl, sp, #104	; 0x68
   19fb8:	cmp	r0, #0
   19fbc:	beq	19fec <ReadCompressedDataSlabN+0x177c>
   19fc0:	ldr	r1, [sl, r9, lsl #2]
   19fc4:	mov	r5, r3
   19fc8:	mul	r3, r1, r0
   19fcc:	ldr	r0, [sp, #44]	; 0x2c
   19fd0:	add	r1, sp, #48	; 0x30
   19fd4:	ldr	r2, [fp, #8]
   19fd8:	bl	26ac <InflateSkipData>
   19fdc:	mov	r3, r5
   19fe0:	ldr	r0, [sl, r9, lsl #2]
   19fe4:	ldr	r1, [r6, r9, lsl #2]
   19fe8:	mla	r3, r1, r0, r5
   19fec:	add	r0, r9, #1
   19ff0:	add	r1, r9, #2
   19ff4:	ldr	r2, [fp, #12]
   19ff8:	cmp	r1, r2
   19ffc:	blt	19f18 <ReadCompressedDataSlabN+0x16a8>
   1a000:	b	1a034 <ReadCompressedDataSlabN+0x17c4>
   1a004:	ldr	r0, [sp, #24]
   1a008:	ldr	r7, [r0, r9, lsl #2]
   1a00c:	cmp	r7, #0
   1a010:	beq	1a034 <ReadCompressedDataSlabN+0x17c4>
   1a014:	ldr	r0, [sp, #44]	; 0x2c
   1a018:	add	r1, sp, #48	; 0x30
   1a01c:	ldr	r2, [fp, #8]
   1a020:	mov	r5, r3
   1a024:	mov	r3, r7
   1a028:	bl	26ac <InflateSkipData>
   1a02c:	mov	r3, r5
   1a030:	add	r3, r7, r5
   1a034:	str	r3, [sp, #28]
   1a038:	ldr	r0, [fp, #28]
   1a03c:	ldr	r0, [r0]
   1a040:	ldr	r1, [sp, #40]	; 0x28
   1a044:	add	r1, r0, r1
   1a048:	ldr	r0, [sp, #20]
   1a04c:	str	r1, [sp, #40]	; 0x28
   1a050:	cmp	r1, r0
   1a054:	add	r1, sp, #48	; 0x30
   1a058:	blt	19e4c <ReadCompressedDataSlabN+0x15dc>
   1a05c:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1a060:	ldr	r0, [fp, #24]
   1a064:	ldr	r0, [r0]
   1a068:	sub	r0, r0, #1
   1a06c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a070:	ldr	r0, [r9]
   1a074:	str	r0, [sp, #104]	; 0x68
   1a078:	ldr	r0, [fp, #28]
   1a07c:	ldr	r1, [r0]
   1a080:	mov	r3, #0
   1a084:	ldr	r0, [fp, #12]
   1a088:	cmp	r0, #2
   1a08c:	str	r1, [sp, #20]
   1a090:	blt	1a12c <ReadCompressedDataSlabN+0x18bc>
   1a094:	mov	r3, #0
   1a098:	mov	r7, #1
   1a09c:	mov	r5, r9
   1a0a0:	ldr	r0, [fp, #20]
   1a0a4:	sub	r8, fp, #72	; 0x48
   1a0a8:	mov	lr, r3
   1a0ac:	ldr	r1, [fp, #24]
   1a0b0:	ldr	r2, [r1, r7, lsl #2]
   1a0b4:	sub	r2, r2, #1
   1a0b8:	str	r2, [r8, r7, lsl #2]
   1a0bc:	sub	ip, r7, #1
   1a0c0:	ldr	r6, [r9, ip, lsl #2]
   1a0c4:	str	r6, [sl, r7, lsl #2]
   1a0c8:	mov	r4, #0
   1a0cc:	mov	r1, r5
   1a0d0:	ldr	r3, [r1, -r4, lsl #2]!
   1a0d4:	mul	r2, r2, r3
   1a0d8:	ldr	r1, [r1, #4]
   1a0dc:	mul	r6, r1, r6
   1a0e0:	add	r4, r4, #1
   1a0e4:	cmp	r7, r4
   1a0e8:	bne	1a0cc <ReadCompressedDataSlabN+0x185c>
   1a0ec:	str	r6, [sl, r7, lsl #2]
   1a0f0:	str	r2, [r8, r7, lsl #2]
   1a0f4:	ldr	r1, [sl, ip, lsl #2]
   1a0f8:	ldr	r2, [r0, r7, lsl #2]
   1a0fc:	mov	r3, lr
   1a100:	mla	r3, r2, r1, lr
   1a104:	ldr	r1, [fp, #28]
   1a108:	ldr	r1, [r1, r7, lsl #2]
   1a10c:	ldr	r2, [sp, #20]
   1a110:	mul	r2, r1, r2
   1a114:	str	r2, [sp, #20]
   1a118:	add	r5, r5, #4
   1a11c:	add	r7, r7, #1
   1a120:	ldr	r1, [fp, #12]
   1a124:	cmp	r7, r1
   1a128:	bne	1a0a8 <ReadCompressedDataSlabN+0x1838>
   1a12c:	add	r1, sp, #48	; 0x30
   1a130:	ldr	r0, [sp, #44]	; 0x2c
   1a134:	ldr	r2, [fp, #8]
   1a138:	str	r3, [sp, #28]
   1a13c:	bl	26ac <InflateSkipData>
   1a140:	ldr	r0, [fp, #24]
   1a144:	ldr	r0, [r0]
   1a148:	cmp	r0, #1
   1a14c:	bne	1bf34 <ReadCompressedDataSlabN+0x36c4>
   1a150:	ldr	r8, [sp, #20]
   1a154:	cmp	r8, #1
   1a158:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1a15c:	ldr	r0, [fp, #20]
   1a160:	add	r6, r0, #4
   1a164:	ldr	r0, [fp, #28]
   1a168:	add	r8, r0, #4
   1a16c:	sub	r0, fp, #112	; 0x70
   1a170:	orr	r4, r0, #4
   1a174:	sub	r0, fp, #72	; 0x48
   1a178:	orr	r0, r0, #4
   1a17c:	str	r0, [sp, #24]
   1a180:	add	r1, sp, #48	; 0x30
   1a184:	mov	r0, #0
   1a188:	str	r0, [sp, #40]	; 0x28
   1a18c:	str	r8, [sp, #32]
   1a190:	ldr	r9, [fp, #20]
   1a194:	ldr	r3, [r9]
   1a198:	cmp	r3, #0
   1a19c:	beq	1a1cc <ReadCompressedDataSlabN+0x195c>
   1a1a0:	ldr	r5, [sp, #44]	; 0x2c
   1a1a4:	mov	r0, r5
   1a1a8:	ldr	r7, [fp, #8]
   1a1ac:	mov	r8, r1
   1a1b0:	mov	r2, r7
   1a1b4:	bl	26ac <InflateSkipData>
   1a1b8:	ldr	r0, [r9]
   1a1bc:	ldr	r1, [sp, #28]
   1a1c0:	add	r1, r0, r1
   1a1c4:	str	r1, [sp, #28]
   1a1c8:	b	1a1d8 <ReadCompressedDataSlabN+0x1968>
   1a1cc:	ldr	r5, [sp, #44]	; 0x2c
   1a1d0:	ldr	r7, [fp, #8]
   1a1d4:	mov	r8, r1
   1a1d8:	ldr	r0, [fp, #28]
   1a1dc:	ldr	r0, [r0]
   1a1e0:	str	r0, [sp]
   1a1e4:	ldr	r0, [sp, #36]	; 0x24
   1a1e8:	ldr	r1, [sp, #40]	; 0x28
   1a1ec:	add	r2, r0, r1, lsl #2
   1a1f0:	mov	r0, r5
   1a1f4:	mov	r1, r8
   1a1f8:	mov	r3, r7
   1a1fc:	bl	e0a8 <ReadCompressedUInt32Data>
   1a200:	ldr	r9, [fp, #20]
   1a204:	ldr	r0, [r9]
   1a208:	ldr	r1, [fp, #16]
   1a20c:	ldr	r1, [r1]
   1a210:	sub	r0, r1, r0
   1a214:	ldr	r1, [fp, #28]
   1a218:	ldr	r1, [r1]
   1a21c:	sub	r3, r0, r1
   1a220:	mov	r0, r5
   1a224:	mov	r1, r8
   1a228:	mov	r2, r7
   1a22c:	bl	26ac <InflateSkipData>
   1a230:	ldr	r0, [fp, #16]
   1a234:	ldr	r0, [r0]
   1a238:	ldr	r1, [sp, #28]
   1a23c:	add	r0, r0, r1
   1a240:	ldr	r1, [r9]
   1a244:	sub	r3, r0, r1
   1a248:	ldr	r0, [fp, #12]
   1a24c:	cmp	r0, #2
   1a250:	blt	1a378 <ReadCompressedDataSlabN+0x1b08>
   1a254:	mov	r0, #0
   1a258:	ldr	r8, [sp, #32]
   1a25c:	mov	r9, r0
   1a260:	ldr	r0, [r4, r0, lsl #2]
   1a264:	add	r0, r0, #1
   1a268:	str	r0, [r4, r9, lsl #2]
   1a26c:	ldr	r1, [r8, r9, lsl #2]
   1a270:	sdiv	r2, r0, r1
   1a274:	mls	r0, r2, r1, r0
   1a278:	cmp	r0, #0
   1a27c:	bne	1a348 <ReadCompressedDataSlabN+0x1ad8>
   1a280:	mov	r0, #0
   1a284:	str	r0, [r4, r9, lsl #2]
   1a288:	mov	r5, sl
   1a28c:	add	sl, sl, r9, lsl #2
   1a290:	ldr	r0, [sl, #4]
   1a294:	sdiv	r1, r3, r0
   1a298:	mls	r1, r1, r0, r3
   1a29c:	cmp	r1, #0
   1a2a0:	beq	1a2f4 <ReadCompressedDataSlabN+0x1a84>
   1a2a4:	ldr	r2, [r5, r9, lsl #2]
   1a2a8:	mov	r7, r3
   1a2ac:	ldr	r3, [r6, r9, lsl #2]
   1a2b0:	sub	r0, r0, r1
   1a2b4:	mla	r3, r3, r2, r0
   1a2b8:	ldr	r0, [sp, #44]	; 0x2c
   1a2bc:	add	r1, sp, #48	; 0x30
   1a2c0:	ldr	r2, [fp, #8]
   1a2c4:	bl	26ac <InflateSkipData>
   1a2c8:	ldr	r0, [sl, #4]
   1a2cc:	add	r1, r0, r7
   1a2d0:	sdiv	r2, r7, r0
   1a2d4:	mul	r0, r2, r0
   1a2d8:	sub	r0, r0, r7
   1a2dc:	add	r0, r1, r0
   1a2e0:	ldr	r1, [r5, r9, lsl #2]
   1a2e4:	ldr	r2, [r6, r9, lsl #2]
   1a2e8:	mla	r3, r2, r1, r0
   1a2ec:	mov	sl, r5
   1a2f0:	b	1a330 <ReadCompressedDataSlabN+0x1ac0>
   1a2f4:	ldr	r0, [r6, r9, lsl #2]
   1a2f8:	add	sl, sp, #104	; 0x68
   1a2fc:	cmp	r0, #0
   1a300:	beq	1a330 <ReadCompressedDataSlabN+0x1ac0>
   1a304:	ldr	r1, [sl, r9, lsl #2]
   1a308:	mov	r5, r3
   1a30c:	mul	r3, r1, r0
   1a310:	ldr	r0, [sp, #44]	; 0x2c
   1a314:	add	r1, sp, #48	; 0x30
   1a318:	ldr	r2, [fp, #8]
   1a31c:	bl	26ac <InflateSkipData>
   1a320:	mov	r3, r5
   1a324:	ldr	r0, [sl, r9, lsl #2]
   1a328:	ldr	r1, [r6, r9, lsl #2]
   1a32c:	mla	r3, r1, r0, r5
   1a330:	add	r0, r9, #1
   1a334:	add	r1, r9, #2
   1a338:	ldr	r2, [fp, #12]
   1a33c:	cmp	r1, r2
   1a340:	blt	1a25c <ReadCompressedDataSlabN+0x19ec>
   1a344:	b	1a378 <ReadCompressedDataSlabN+0x1b08>
   1a348:	ldr	r0, [sp, #24]
   1a34c:	ldr	r7, [r0, r9, lsl #2]
   1a350:	cmp	r7, #0
   1a354:	beq	1a378 <ReadCompressedDataSlabN+0x1b08>
   1a358:	ldr	r0, [sp, #44]	; 0x2c
   1a35c:	add	r1, sp, #48	; 0x30
   1a360:	ldr	r2, [fp, #8]
   1a364:	mov	r5, r3
   1a368:	mov	r3, r7
   1a36c:	bl	26ac <InflateSkipData>
   1a370:	mov	r3, r5
   1a374:	add	r3, r7, r5
   1a378:	str	r3, [sp, #28]
   1a37c:	ldr	r0, [fp, #28]
   1a380:	ldr	r0, [r0]
   1a384:	ldr	r1, [sp, #40]	; 0x28
   1a388:	add	r1, r0, r1
   1a38c:	ldr	r0, [sp, #20]
   1a390:	str	r1, [sp, #40]	; 0x28
   1a394:	cmp	r1, r0
   1a398:	add	r1, sp, #48	; 0x30
   1a39c:	blt	1a190 <ReadCompressedDataSlabN+0x1920>
   1a3a0:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1a3a4:	ldr	r8, [fp, #24]
   1a3a8:	ldr	r0, [r8]
   1a3ac:	sub	r0, r0, #1
   1a3b0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a3b4:	ldr	r0, [r9]
   1a3b8:	str	r0, [sp, #104]	; 0x68
   1a3bc:	ldr	r0, [fp, #28]
   1a3c0:	ldr	r0, [r0]
   1a3c4:	str	r0, [sp, #24]
   1a3c8:	mov	r8, #0
   1a3cc:	ldr	r0, [fp, #12]
   1a3d0:	cmp	r0, #2
   1a3d4:	ldr	r0, [sp, #44]	; 0x2c
   1a3d8:	blt	1a470 <ReadCompressedDataSlabN+0x1c00>
   1a3dc:	mov	r8, #0
   1a3e0:	mov	r7, #1
   1a3e4:	mov	r5, r9
   1a3e8:	ldr	lr, [fp, #20]
   1a3ec:	sub	r3, fp, #72	; 0x48
   1a3f0:	ldr	r1, [fp, #24]
   1a3f4:	ldr	r2, [r1, r7, lsl #2]
   1a3f8:	sub	r2, r2, #1
   1a3fc:	str	r2, [r3, r7, lsl #2]
   1a400:	sub	ip, r7, #1
   1a404:	ldr	r6, [r9, ip, lsl #2]
   1a408:	str	r6, [sl, r7, lsl #2]
   1a40c:	mov	r4, #0
   1a410:	mov	r1, r5
   1a414:	ldr	r3, [r1, -r4, lsl #2]!
   1a418:	mul	r2, r2, r3
   1a41c:	ldr	r1, [r1, #4]
   1a420:	mul	r6, r1, r6
   1a424:	add	r4, r4, #1
   1a428:	cmp	r7, r4
   1a42c:	bne	1a410 <ReadCompressedDataSlabN+0x1ba0>
   1a430:	str	r6, [sl, r7, lsl #2]
   1a434:	sub	r3, fp, #72	; 0x48
   1a438:	str	r2, [r3, r7, lsl #2]
   1a43c:	ldr	r1, [sl, ip, lsl #2]
   1a440:	ldr	r2, [lr, r7, lsl #2]
   1a444:	mla	r8, r2, r1, r8
   1a448:	ldr	r1, [fp, #28]
   1a44c:	ldr	r1, [r1, r7, lsl #2]
   1a450:	ldr	r2, [sp, #24]
   1a454:	mul	r2, r1, r2
   1a458:	str	r2, [sp, #24]
   1a45c:	add	r5, r5, #4
   1a460:	add	r7, r7, #1
   1a464:	ldr	r1, [fp, #12]
   1a468:	cmp	r7, r1
   1a46c:	bne	1a3f0 <ReadCompressedDataSlabN+0x1b80>
   1a470:	add	r1, sp, #48	; 0x30
   1a474:	ldr	r2, [fp, #8]
   1a478:	mov	r7, r8
   1a47c:	mov	r3, r8
   1a480:	bl	26ac <InflateSkipData>
   1a484:	ldr	r0, [fp, #24]
   1a488:	ldr	r0, [r0]
   1a48c:	cmp	r0, #1
   1a490:	bne	1c23c <ReadCompressedDataSlabN+0x39cc>
   1a494:	ldr	r0, [sp, #24]
   1a498:	cmp	r0, #1
   1a49c:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1a4a0:	mov	r6, r7
   1a4a4:	ldr	r0, [fp, #20]
   1a4a8:	add	r8, r0, #4
   1a4ac:	ldr	r0, [fp, #28]
   1a4b0:	add	r0, r0, #4
   1a4b4:	str	r0, [sp, #32]
   1a4b8:	sub	r0, fp, #112	; 0x70
   1a4bc:	orr	r4, r0, #4
   1a4c0:	sub	r0, fp, #72	; 0x48
   1a4c4:	orr	r0, r0, #4
   1a4c8:	str	r0, [sp, #28]
   1a4cc:	add	r1, sp, #48	; 0x30
   1a4d0:	mov	r0, #0
   1a4d4:	str	r0, [sp, #40]	; 0x28
   1a4d8:	ldr	r9, [fp, #20]
   1a4dc:	ldr	r3, [r9]
   1a4e0:	cmp	r3, #0
   1a4e4:	beq	1a510 <ReadCompressedDataSlabN+0x1ca0>
   1a4e8:	ldr	r9, [sp, #44]	; 0x2c
   1a4ec:	mov	r0, r9
   1a4f0:	ldr	r7, [fp, #8]
   1a4f4:	mov	r5, r1
   1a4f8:	mov	r2, r7
   1a4fc:	bl	26ac <InflateSkipData>
   1a500:	ldr	r0, [fp, #20]
   1a504:	ldr	r0, [r0]
   1a508:	add	r6, r0, r6
   1a50c:	b	1a51c <ReadCompressedDataSlabN+0x1cac>
   1a510:	ldr	r9, [sp, #44]	; 0x2c
   1a514:	ldr	r7, [fp, #8]
   1a518:	mov	r5, r1
   1a51c:	ldr	r0, [fp, #28]
   1a520:	ldr	r0, [r0]
   1a524:	str	r0, [sp]
   1a528:	ldr	r0, [sp, #36]	; 0x24
   1a52c:	ldr	r1, [sp, #40]	; 0x28
   1a530:	add	r2, r0, r1, lsl #3
   1a534:	mov	r0, r9
   1a538:	mov	r1, r5
   1a53c:	mov	r3, r7
   1a540:	bl	90d0 <ReadCompressedInt64Data>
   1a544:	ldr	r0, [fp, #20]
   1a548:	mov	r2, r9
   1a54c:	mov	r9, r0
   1a550:	ldr	r0, [r0]
   1a554:	ldr	r1, [fp, #16]
   1a558:	ldr	r1, [r1]
   1a55c:	sub	r0, r1, r0
   1a560:	ldr	r1, [fp, #28]
   1a564:	ldr	r1, [r1]
   1a568:	sub	r3, r0, r1
   1a56c:	mov	r0, r2
   1a570:	mov	r1, r5
   1a574:	mov	r2, r7
   1a578:	bl	26ac <InflateSkipData>
   1a57c:	ldr	r0, [fp, #16]
   1a580:	ldr	r0, [r0]
   1a584:	add	r0, r0, r6
   1a588:	ldr	r1, [r9]
   1a58c:	sub	r6, r0, r1
   1a590:	ldr	r0, [fp, #12]
   1a594:	cmp	r0, #2
   1a598:	blt	1a6ac <ReadCompressedDataSlabN+0x1e3c>
   1a59c:	mov	r0, #0
   1a5a0:	ldr	r7, [sp, #32]
   1a5a4:	mov	r9, r0
   1a5a8:	ldr	r0, [r4, r0, lsl #2]
   1a5ac:	add	r0, r0, #1
   1a5b0:	str	r0, [r4, r9, lsl #2]
   1a5b4:	ldr	r1, [r7, r9, lsl #2]
   1a5b8:	sdiv	r2, r0, r1
   1a5bc:	mls	r0, r2, r1, r0
   1a5c0:	cmp	r0, #0
   1a5c4:	bne	1a684 <ReadCompressedDataSlabN+0x1e14>
   1a5c8:	mov	r0, #0
   1a5cc:	str	r0, [r4, r9, lsl #2]
   1a5d0:	mov	r5, sl
   1a5d4:	add	sl, sl, r9, lsl #2
   1a5d8:	ldr	r0, [sl, #4]
   1a5dc:	sdiv	r1, r6, r0
   1a5e0:	mls	r1, r1, r0, r6
   1a5e4:	cmp	r1, #0
   1a5e8:	beq	1a638 <ReadCompressedDataSlabN+0x1dc8>
   1a5ec:	ldr	r2, [r5, r9, lsl #2]
   1a5f0:	ldr	r3, [r8, r9, lsl #2]
   1a5f4:	sub	r0, r0, r1
   1a5f8:	mla	r3, r3, r2, r0
   1a5fc:	ldr	r0, [sp, #44]	; 0x2c
   1a600:	add	r1, sp, #48	; 0x30
   1a604:	ldr	r2, [fp, #8]
   1a608:	bl	26ac <InflateSkipData>
   1a60c:	ldr	r0, [sl, #4]
   1a610:	add	r1, r0, r6
   1a614:	sdiv	r2, r6, r0
   1a618:	mul	r0, r2, r0
   1a61c:	sub	r0, r0, r6
   1a620:	add	r0, r1, r0
   1a624:	ldr	r1, [r5, r9, lsl #2]
   1a628:	ldr	r2, [r8, r9, lsl #2]
   1a62c:	mla	r6, r2, r1, r0
   1a630:	mov	sl, r5
   1a634:	b	1a66c <ReadCompressedDataSlabN+0x1dfc>
   1a638:	ldr	r0, [r8, r9, lsl #2]
   1a63c:	add	sl, sp, #104	; 0x68
   1a640:	cmp	r0, #0
   1a644:	beq	1a66c <ReadCompressedDataSlabN+0x1dfc>
   1a648:	ldr	r1, [sl, r9, lsl #2]
   1a64c:	mul	r3, r1, r0
   1a650:	ldr	r0, [sp, #44]	; 0x2c
   1a654:	add	r1, sp, #48	; 0x30
   1a658:	ldr	r2, [fp, #8]
   1a65c:	bl	26ac <InflateSkipData>
   1a660:	ldr	r0, [sl, r9, lsl #2]
   1a664:	ldr	r1, [r8, r9, lsl #2]
   1a668:	mla	r6, r1, r0, r6
   1a66c:	add	r0, r9, #1
   1a670:	add	r1, r9, #2
   1a674:	ldr	r2, [fp, #12]
   1a678:	cmp	r1, r2
   1a67c:	blt	1a5a4 <ReadCompressedDataSlabN+0x1d34>
   1a680:	b	1a6ac <ReadCompressedDataSlabN+0x1e3c>
   1a684:	ldr	r0, [sp, #28]
   1a688:	ldr	r5, [r0, r9, lsl #2]
   1a68c:	cmp	r5, #0
   1a690:	beq	1a6ac <ReadCompressedDataSlabN+0x1e3c>
   1a694:	ldr	r0, [sp, #44]	; 0x2c
   1a698:	add	r1, sp, #48	; 0x30
   1a69c:	ldr	r2, [fp, #8]
   1a6a0:	mov	r3, r5
   1a6a4:	bl	26ac <InflateSkipData>
   1a6a8:	add	r6, r5, r6
   1a6ac:	ldr	r0, [fp, #28]
   1a6b0:	ldr	r0, [r0]
   1a6b4:	ldr	r1, [sp, #40]	; 0x28
   1a6b8:	add	r1, r0, r1
   1a6bc:	ldr	r0, [sp, #24]
   1a6c0:	str	r1, [sp, #40]	; 0x28
   1a6c4:	cmp	r1, r0
   1a6c8:	add	r1, sp, #48	; 0x30
   1a6cc:	blt	1a4d8 <ReadCompressedDataSlabN+0x1c68>
   1a6d0:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1a6d4:	ldr	r0, [fp, #24]
   1a6d8:	ldr	r0, [r0]
   1a6dc:	sub	r0, r0, #1
   1a6e0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a6e4:	ldr	r0, [r9]
   1a6e8:	str	r0, [sp, #104]	; 0x68
   1a6ec:	ldr	r0, [fp, #28]
   1a6f0:	ldr	r1, [r0]
   1a6f4:	mov	r3, #0
   1a6f8:	ldr	r0, [fp, #12]
   1a6fc:	cmp	r0, #2
   1a700:	str	r1, [sp, #20]
   1a704:	blt	1a7a0 <ReadCompressedDataSlabN+0x1f30>
   1a708:	mov	r3, #0
   1a70c:	mov	r7, #1
   1a710:	mov	r5, r9
   1a714:	ldr	r0, [fp, #20]
   1a718:	sub	r8, fp, #72	; 0x48
   1a71c:	mov	lr, r3
   1a720:	ldr	r1, [fp, #24]
   1a724:	ldr	r2, [r1, r7, lsl #2]
   1a728:	sub	r2, r2, #1
   1a72c:	str	r2, [r8, r7, lsl #2]
   1a730:	sub	ip, r7, #1
   1a734:	ldr	r6, [r9, ip, lsl #2]
   1a738:	str	r6, [sl, r7, lsl #2]
   1a73c:	mov	r4, #0
   1a740:	mov	r1, r5
   1a744:	ldr	r3, [r1, -r4, lsl #2]!
   1a748:	mul	r2, r2, r3
   1a74c:	ldr	r1, [r1, #4]
   1a750:	mul	r6, r1, r6
   1a754:	add	r4, r4, #1
   1a758:	cmp	r7, r4
   1a75c:	bne	1a740 <ReadCompressedDataSlabN+0x1ed0>
   1a760:	str	r6, [sl, r7, lsl #2]
   1a764:	str	r2, [r8, r7, lsl #2]
   1a768:	ldr	r1, [sl, ip, lsl #2]
   1a76c:	ldr	r2, [r0, r7, lsl #2]
   1a770:	mov	r3, lr
   1a774:	mla	r3, r2, r1, lr
   1a778:	ldr	r1, [fp, #28]
   1a77c:	ldr	r1, [r1, r7, lsl #2]
   1a780:	ldr	r2, [sp, #20]
   1a784:	mul	r2, r1, r2
   1a788:	str	r2, [sp, #20]
   1a78c:	add	r5, r5, #4
   1a790:	add	r7, r7, #1
   1a794:	ldr	r1, [fp, #12]
   1a798:	cmp	r7, r1
   1a79c:	bne	1a71c <ReadCompressedDataSlabN+0x1eac>
   1a7a0:	add	r1, sp, #48	; 0x30
   1a7a4:	ldr	r0, [sp, #44]	; 0x2c
   1a7a8:	ldr	r2, [fp, #8]
   1a7ac:	str	r3, [sp, #28]
   1a7b0:	bl	26ac <InflateSkipData>
   1a7b4:	ldr	r0, [fp, #24]
   1a7b8:	ldr	r0, [r0]
   1a7bc:	cmp	r0, #1
   1a7c0:	bne	1c530 <ReadCompressedDataSlabN+0x3cc0>
   1a7c4:	ldr	r8, [sp, #20]
   1a7c8:	cmp	r8, #1
   1a7cc:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1a7d0:	ldr	r0, [fp, #20]
   1a7d4:	add	r6, r0, #4
   1a7d8:	ldr	r0, [fp, #28]
   1a7dc:	add	r8, r0, #4
   1a7e0:	sub	r0, fp, #112	; 0x70
   1a7e4:	orr	r4, r0, #4
   1a7e8:	sub	r0, fp, #72	; 0x48
   1a7ec:	orr	r0, r0, #4
   1a7f0:	str	r0, [sp, #24]
   1a7f4:	add	r1, sp, #48	; 0x30
   1a7f8:	mov	r0, #0
   1a7fc:	str	r0, [sp, #40]	; 0x28
   1a800:	str	r8, [sp, #32]
   1a804:	ldr	r9, [fp, #20]
   1a808:	ldr	r3, [r9]
   1a80c:	cmp	r3, #0
   1a810:	beq	1a840 <ReadCompressedDataSlabN+0x1fd0>
   1a814:	ldr	r5, [sp, #44]	; 0x2c
   1a818:	mov	r0, r5
   1a81c:	ldr	r7, [fp, #8]
   1a820:	mov	r8, r1
   1a824:	mov	r2, r7
   1a828:	bl	26ac <InflateSkipData>
   1a82c:	ldr	r0, [r9]
   1a830:	ldr	r1, [sp, #28]
   1a834:	add	r1, r0, r1
   1a838:	str	r1, [sp, #28]
   1a83c:	b	1a84c <ReadCompressedDataSlabN+0x1fdc>
   1a840:	ldr	r5, [sp, #44]	; 0x2c
   1a844:	ldr	r7, [fp, #8]
   1a848:	mov	r8, r1
   1a84c:	ldr	r0, [fp, #28]
   1a850:	ldr	r0, [r0]
   1a854:	str	r0, [sp]
   1a858:	ldr	r0, [sp, #36]	; 0x24
   1a85c:	ldr	r1, [sp, #40]	; 0x28
   1a860:	add	r2, r0, r1, lsl #3
   1a864:	mov	r0, r5
   1a868:	mov	r1, r8
   1a86c:	mov	r3, r7
   1a870:	bl	ac7c <ReadCompressedUInt64Data>
   1a874:	ldr	r9, [fp, #20]
   1a878:	ldr	r0, [r9]
   1a87c:	ldr	r1, [fp, #16]
   1a880:	ldr	r1, [r1]
   1a884:	sub	r0, r1, r0
   1a888:	ldr	r1, [fp, #28]
   1a88c:	ldr	r1, [r1]
   1a890:	sub	r3, r0, r1
   1a894:	mov	r0, r5
   1a898:	mov	r1, r8
   1a89c:	mov	r2, r7
   1a8a0:	bl	26ac <InflateSkipData>
   1a8a4:	ldr	r0, [fp, #16]
   1a8a8:	ldr	r0, [r0]
   1a8ac:	ldr	r1, [sp, #28]
   1a8b0:	add	r0, r0, r1
   1a8b4:	ldr	r1, [r9]
   1a8b8:	sub	r3, r0, r1
   1a8bc:	ldr	r0, [fp, #12]
   1a8c0:	cmp	r0, #2
   1a8c4:	blt	1a9ec <ReadCompressedDataSlabN+0x217c>
   1a8c8:	mov	r0, #0
   1a8cc:	ldr	r8, [sp, #32]
   1a8d0:	mov	r9, r0
   1a8d4:	ldr	r0, [r4, r0, lsl #2]
   1a8d8:	add	r0, r0, #1
   1a8dc:	str	r0, [r4, r9, lsl #2]
   1a8e0:	ldr	r1, [r8, r9, lsl #2]
   1a8e4:	sdiv	r2, r0, r1
   1a8e8:	mls	r0, r2, r1, r0
   1a8ec:	cmp	r0, #0
   1a8f0:	bne	1a9bc <ReadCompressedDataSlabN+0x214c>
   1a8f4:	mov	r0, #0
   1a8f8:	str	r0, [r4, r9, lsl #2]
   1a8fc:	mov	r5, sl
   1a900:	add	sl, sl, r9, lsl #2
   1a904:	ldr	r0, [sl, #4]
   1a908:	sdiv	r1, r3, r0
   1a90c:	mls	r1, r1, r0, r3
   1a910:	cmp	r1, #0
   1a914:	beq	1a968 <ReadCompressedDataSlabN+0x20f8>
   1a918:	ldr	r2, [r5, r9, lsl #2]
   1a91c:	mov	r7, r3
   1a920:	ldr	r3, [r6, r9, lsl #2]
   1a924:	sub	r0, r0, r1
   1a928:	mla	r3, r3, r2, r0
   1a92c:	ldr	r0, [sp, #44]	; 0x2c
   1a930:	add	r1, sp, #48	; 0x30
   1a934:	ldr	r2, [fp, #8]
   1a938:	bl	26ac <InflateSkipData>
   1a93c:	ldr	r0, [sl, #4]
   1a940:	add	r1, r0, r7
   1a944:	sdiv	r2, r7, r0
   1a948:	mul	r0, r2, r0
   1a94c:	sub	r0, r0, r7
   1a950:	add	r0, r1, r0
   1a954:	ldr	r1, [r5, r9, lsl #2]
   1a958:	ldr	r2, [r6, r9, lsl #2]
   1a95c:	mla	r3, r2, r1, r0
   1a960:	mov	sl, r5
   1a964:	b	1a9a4 <ReadCompressedDataSlabN+0x2134>
   1a968:	ldr	r0, [r6, r9, lsl #2]
   1a96c:	add	sl, sp, #104	; 0x68
   1a970:	cmp	r0, #0
   1a974:	beq	1a9a4 <ReadCompressedDataSlabN+0x2134>
   1a978:	ldr	r1, [sl, r9, lsl #2]
   1a97c:	mov	r5, r3
   1a980:	mul	r3, r1, r0
   1a984:	ldr	r0, [sp, #44]	; 0x2c
   1a988:	add	r1, sp, #48	; 0x30
   1a98c:	ldr	r2, [fp, #8]
   1a990:	bl	26ac <InflateSkipData>
   1a994:	mov	r3, r5
   1a998:	ldr	r0, [sl, r9, lsl #2]
   1a99c:	ldr	r1, [r6, r9, lsl #2]
   1a9a0:	mla	r3, r1, r0, r5
   1a9a4:	add	r0, r9, #1
   1a9a8:	add	r1, r9, #2
   1a9ac:	ldr	r2, [fp, #12]
   1a9b0:	cmp	r1, r2
   1a9b4:	blt	1a8d0 <ReadCompressedDataSlabN+0x2060>
   1a9b8:	b	1a9ec <ReadCompressedDataSlabN+0x217c>
   1a9bc:	ldr	r0, [sp, #24]
   1a9c0:	ldr	r7, [r0, r9, lsl #2]
   1a9c4:	cmp	r7, #0
   1a9c8:	beq	1a9ec <ReadCompressedDataSlabN+0x217c>
   1a9cc:	ldr	r0, [sp, #44]	; 0x2c
   1a9d0:	add	r1, sp, #48	; 0x30
   1a9d4:	ldr	r2, [fp, #8]
   1a9d8:	mov	r5, r3
   1a9dc:	mov	r3, r7
   1a9e0:	bl	26ac <InflateSkipData>
   1a9e4:	mov	r3, r5
   1a9e8:	add	r3, r7, r5
   1a9ec:	str	r3, [sp, #28]
   1a9f0:	ldr	r0, [fp, #28]
   1a9f4:	ldr	r0, [r0]
   1a9f8:	ldr	r1, [sp, #40]	; 0x28
   1a9fc:	add	r1, r0, r1
   1aa00:	ldr	r0, [sp, #20]
   1aa04:	str	r1, [sp, #40]	; 0x28
   1aa08:	cmp	r1, r0
   1aa0c:	add	r1, sp, #48	; 0x30
   1aa10:	blt	1a804 <ReadCompressedDataSlabN+0x1f94>
   1aa14:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1aa18:	ldr	r0, [sp, #28]
   1aa1c:	cmp	r0, #1
   1aa20:	ldr	r8, [sp, #36]	; 0x24
   1aa24:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1aa28:	ldr	r0, [fp, #20]
   1aa2c:	add	r9, r0, #4
   1aa30:	ldr	r0, [fp, #28]
   1aa34:	add	r0, r0, #4
   1aa38:	str	r0, [sp, #40]	; 0x28
   1aa3c:	sub	r0, fp, #112	; 0x70
   1aa40:	orr	r3, r0, #4
   1aa44:	sub	r0, fp, #72	; 0x48
   1aa48:	orr	r0, r0, #4
   1aa4c:	str	r0, [sp, #8]
   1aa50:	add	r0, r8, #8
   1aa54:	str	r0, [sp, #12]
   1aa58:	mov	sl, #1
   1aa5c:	add	r1, sp, #48	; 0x30
   1aa60:	mov	r2, #0
   1aa64:	str	r9, [sp, #16]
   1aa68:	str	r3, [sp, #32]
   1aa6c:	str	r2, [sp, #20]
   1aa70:	str	r5, [sp, #24]
   1aa74:	ldr	r4, [fp, #20]
   1aa78:	ldr	r3, [r4]
   1aa7c:	cmp	r3, #0
   1aa80:	beq	1aab4 <ReadCompressedDataSlabN+0x2244>
   1aa84:	ldr	r5, [sp, #44]	; 0x2c
   1aa88:	mov	r0, r5
   1aa8c:	mov	r8, r1
   1aa90:	ldr	r6, [fp, #8]
   1aa94:	mov	r2, r6
   1aa98:	bl	26ac <InflateSkipData>
   1aa9c:	ldr	r0, [r4]
   1aaa0:	ldr	r1, [sp, #24]
   1aaa4:	add	r1, r0, r1
   1aaa8:	str	r1, [sp, #24]
   1aaac:	ldr	r7, [fp, #28]
   1aab0:	b	1aac4 <ReadCompressedDataSlabN+0x2254>
   1aab4:	ldr	r5, [sp, #44]	; 0x2c
   1aab8:	ldr	r7, [fp, #28]
   1aabc:	mov	r8, r1
   1aac0:	ldr	r6, [fp, #8]
   1aac4:	ldr	r4, [r7]
   1aac8:	str	sl, [sp]
   1aacc:	ldr	r7, [sp, #20]
   1aad0:	ldr	r0, [sp, #36]	; 0x24
   1aad4:	add	r2, r0, r7, lsl #3
   1aad8:	mov	r0, r5
   1aadc:	mov	r1, r8
   1aae0:	mov	r3, r6
   1aae4:	bl	4bf4 <ReadCompressedDoubleData>
   1aae8:	cmp	r4, #2
   1aaec:	blt	1ab6c <ReadCompressedDataSlabN+0x22fc>
   1aaf0:	ldr	r0, [sp, #12]
   1aaf4:	add	r6, r0, r7, lsl #3
   1aaf8:	mov	r8, #0
   1aafc:	ldr	r5, [sp, #24]
   1ab00:	ldr	r0, [fp, #24]
   1ab04:	mov	sl, r0
   1ab08:	ldr	r0, [r0]
   1ab0c:	sub	r3, r0, #1
   1ab10:	ldr	r9, [sp, #44]	; 0x2c
   1ab14:	mov	r0, r9
   1ab18:	add	r1, sp, #48	; 0x30
   1ab1c:	ldr	r7, [fp, #8]
   1ab20:	mov	r2, r7
   1ab24:	bl	26ac <InflateSkipData>
   1ab28:	ldr	r0, [fp, #28]
   1ab2c:	ldr	r4, [r0]
   1ab30:	ldr	sl, [sl]
   1ab34:	mov	r0, #1
   1ab38:	str	r0, [sp]
   1ab3c:	mov	r0, r9
   1ab40:	add	r1, sp, #48	; 0x30
   1ab44:	mov	r2, r6
   1ab48:	mov	r3, r7
   1ab4c:	bl	4bf4 <ReadCompressedDoubleData>
   1ab50:	add	r5, sl, r5
   1ab54:	add	r6, r6, #8
   1ab58:	add	r8, r8, #1
   1ab5c:	sub	r0, r4, #1
   1ab60:	cmp	r8, r0
   1ab64:	blt	1ab00 <ReadCompressedDataSlabN+0x2290>
   1ab68:	b	1ab70 <ReadCompressedDataSlabN+0x2300>
   1ab6c:	ldr	r5, [sp, #24]
   1ab70:	ldr	r0, [fp, #16]
   1ab74:	ldr	r0, [r0]
   1ab78:	ldr	r1, [fp, #24]
   1ab7c:	ldr	r1, [r1]
   1ab80:	ldr	r2, [fp, #28]
   1ab84:	ldr	r2, [r2]
   1ab88:	sub	r2, r2, #1
   1ab8c:	mls	r0, r2, r1, r0
   1ab90:	ldr	r1, [fp, #20]
   1ab94:	ldr	r1, [r1]
   1ab98:	sub	r4, r0, r1
   1ab9c:	sub	r3, r4, #1
   1aba0:	ldr	sl, [sp, #44]	; 0x2c
   1aba4:	mov	r0, sl
   1aba8:	add	r1, sp, #48	; 0x30
   1abac:	ldr	r2, [fp, #8]
   1abb0:	bl	26ac <InflateSkipData>
   1abb4:	add	r5, r4, r5
   1abb8:	ldr	r0, [fp, #12]
   1abbc:	cmp	r0, #2
   1abc0:	blt	1acdc <ReadCompressedDataSlabN+0x246c>
   1abc4:	mov	r0, #0
   1abc8:	add	r7, sp, #104	; 0x68
   1abcc:	ldr	r9, [sp, #16]
   1abd0:	ldr	r3, [sp, #32]
   1abd4:	mov	r6, r0
   1abd8:	ldr	r0, [r3, r0, lsl #2]
   1abdc:	add	r0, r0, #1
   1abe0:	str	r0, [r3, r6, lsl #2]
   1abe4:	ldr	r1, [sp, #40]	; 0x28
   1abe8:	ldr	r1, [r1, r6, lsl #2]
   1abec:	sdiv	r2, r0, r1
   1abf0:	mls	r0, r2, r1, r0
   1abf4:	cmp	r0, #0
   1abf8:	bne	1acb4 <ReadCompressedDataSlabN+0x2444>
   1abfc:	mov	r0, #0
   1ac00:	str	r0, [r3, r6, lsl #2]
   1ac04:	add	r4, r7, r6, lsl #2
   1ac08:	ldr	r0, [r4, #4]
   1ac0c:	sdiv	r1, r5, r0
   1ac10:	mls	r1, r1, r0, r5
   1ac14:	cmp	r1, #0
   1ac18:	beq	1ac68 <ReadCompressedDataSlabN+0x23f8>
   1ac1c:	ldr	r2, [r7, r6, lsl #2]
   1ac20:	ldr	r3, [r9, r6, lsl #2]
   1ac24:	sub	r0, r0, r1
   1ac28:	mla	r3, r3, r2, r0
   1ac2c:	mov	r0, sl
   1ac30:	add	r1, sp, #48	; 0x30
   1ac34:	ldr	r2, [fp, #8]
   1ac38:	bl	26ac <InflateSkipData>
   1ac3c:	ldr	r3, [sp, #32]
   1ac40:	ldr	r0, [r4, #4]
   1ac44:	add	r1, r0, r5
   1ac48:	sdiv	r2, r5, r0
   1ac4c:	mul	r0, r2, r0
   1ac50:	sub	r0, r0, r5
   1ac54:	add	r0, r1, r0
   1ac58:	ldr	r1, [r7, r6, lsl #2]
   1ac5c:	ldr	r2, [r9, r6, lsl #2]
   1ac60:	mla	r5, r2, r1, r0
   1ac64:	b	1ac9c <ReadCompressedDataSlabN+0x242c>
   1ac68:	ldr	r0, [r9, r6, lsl #2]
   1ac6c:	cmp	r0, #0
   1ac70:	beq	1ac9c <ReadCompressedDataSlabN+0x242c>
   1ac74:	ldr	r1, [r7, r6, lsl #2]
   1ac78:	mul	r3, r1, r0
   1ac7c:	mov	r0, sl
   1ac80:	add	r1, sp, #48	; 0x30
   1ac84:	ldr	r2, [fp, #8]
   1ac88:	bl	26ac <InflateSkipData>
   1ac8c:	ldr	r3, [sp, #32]
   1ac90:	ldr	r0, [r7, r6, lsl #2]
   1ac94:	ldr	r1, [r9, r6, lsl #2]
   1ac98:	mla	r5, r1, r0, r5
   1ac9c:	add	r0, r6, #1
   1aca0:	add	r1, r6, #2
   1aca4:	ldr	r2, [fp, #12]
   1aca8:	cmp	r1, r2
   1acac:	blt	1abd4 <ReadCompressedDataSlabN+0x2364>
   1acb0:	b	1acdc <ReadCompressedDataSlabN+0x246c>
   1acb4:	ldr	r0, [sp, #8]
   1acb8:	ldr	r6, [r0, r6, lsl #2]
   1acbc:	cmp	r6, #0
   1acc0:	beq	1acdc <ReadCompressedDataSlabN+0x246c>
   1acc4:	mov	r0, sl
   1acc8:	add	r1, sp, #48	; 0x30
   1accc:	ldr	r2, [fp, #8]
   1acd0:	mov	r3, r6
   1acd4:	bl	26ac <InflateSkipData>
   1acd8:	add	r5, r6, r5
   1acdc:	ldr	r0, [fp, #28]
   1ace0:	ldr	r0, [r0]
   1ace4:	ldr	r2, [sp, #20]
   1ace8:	add	r2, r0, r2
   1acec:	ldr	r0, [sp, #28]
   1acf0:	cmp	r2, r0
   1acf4:	mov	sl, #1
   1acf8:	add	r1, sp, #48	; 0x30
   1acfc:	blt	1aa6c <ReadCompressedDataSlabN+0x21fc>
   1ad00:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1ad04:	ldr	r0, [sp, #20]
   1ad08:	cmp	r0, #1
   1ad0c:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1ad10:	ldr	r0, [fp, #20]
   1ad14:	add	r5, r0, #4
   1ad18:	ldr	r0, [fp, #28]
   1ad1c:	add	r0, r0, #4
   1ad20:	str	r0, [sp, #40]	; 0x28
   1ad24:	sub	r0, fp, #112	; 0x70
   1ad28:	orr	r7, r0, #4
   1ad2c:	sub	r0, fp, #72	; 0x48
   1ad30:	orr	r0, r0, #4
   1ad34:	str	r0, [sp, #8]
   1ad38:	ldr	r0, [sp, #36]	; 0x24
   1ad3c:	add	r0, r0, #4
   1ad40:	str	r0, [sp, #12]
   1ad44:	mov	r9, #1
   1ad48:	add	r6, sp, #48	; 0x30
   1ad4c:	mov	sl, #0
   1ad50:	str	r5, [sp, #32]
   1ad54:	str	r7, [sp, #24]
   1ad58:	ldr	r4, [fp, #20]
   1ad5c:	ldr	r3, [r4]
   1ad60:	cmp	r3, #0
   1ad64:	beq	1ad98 <ReadCompressedDataSlabN+0x2528>
   1ad68:	mov	r8, r4
   1ad6c:	ldr	r4, [sp, #44]	; 0x2c
   1ad70:	mov	r0, r4
   1ad74:	mov	r1, r6
   1ad78:	ldr	r5, [fp, #8]
   1ad7c:	mov	r2, r5
   1ad80:	bl	26ac <InflateSkipData>
   1ad84:	ldr	r0, [r8]
   1ad88:	ldr	r1, [sp, #28]
   1ad8c:	add	r1, r0, r1
   1ad90:	str	r1, [sp, #28]
   1ad94:	b	1ada0 <ReadCompressedDataSlabN+0x2530>
   1ad98:	ldr	r4, [sp, #44]	; 0x2c
   1ad9c:	ldr	r5, [fp, #8]
   1ada0:	ldr	r0, [fp, #28]
   1ada4:	ldr	r7, [r0]
   1ada8:	str	r9, [sp]
   1adac:	ldr	r0, [sp, #36]	; 0x24
   1adb0:	add	r2, r0, sl, lsl #2
   1adb4:	mov	r0, r4
   1adb8:	mov	r1, r6
   1adbc:	mov	r3, r5
   1adc0:	bl	7534 <ReadCompressedSingleData>
   1adc4:	cmp	r7, #2
   1adc8:	str	sl, [sp, #16]
   1adcc:	blt	1ae4c <ReadCompressedDataSlabN+0x25dc>
   1add0:	ldr	r0, [sp, #12]
   1add4:	add	r6, r0, sl, lsl #2
   1add8:	mov	r4, #0
   1addc:	ldr	r7, [sp, #28]
   1ade0:	ldr	r0, [fp, #24]
   1ade4:	mov	sl, r0
   1ade8:	ldr	r0, [r0]
   1adec:	sub	r3, r0, #1
   1adf0:	ldr	r8, [sp, #44]	; 0x2c
   1adf4:	mov	r0, r8
   1adf8:	add	r1, sp, #48	; 0x30
   1adfc:	ldr	r9, [fp, #8]
   1ae00:	mov	r2, r9
   1ae04:	bl	26ac <InflateSkipData>
   1ae08:	ldr	r0, [fp, #28]
   1ae0c:	ldr	r5, [r0]
   1ae10:	ldr	sl, [sl]
   1ae14:	mov	r0, #1
   1ae18:	str	r0, [sp]
   1ae1c:	mov	r0, r8
   1ae20:	add	r1, sp, #48	; 0x30
   1ae24:	mov	r2, r6
   1ae28:	mov	r3, r9
   1ae2c:	bl	7534 <ReadCompressedSingleData>
   1ae30:	add	r7, sl, r7
   1ae34:	add	r6, r6, #4
   1ae38:	add	r4, r4, #1
   1ae3c:	sub	r0, r5, #1
   1ae40:	cmp	r4, r0
   1ae44:	blt	1ade0 <ReadCompressedDataSlabN+0x2570>
   1ae48:	b	1ae50 <ReadCompressedDataSlabN+0x25e0>
   1ae4c:	ldr	r7, [sp, #28]
   1ae50:	ldr	r0, [fp, #16]
   1ae54:	ldr	r0, [r0]
   1ae58:	ldr	r1, [fp, #24]
   1ae5c:	ldr	r1, [r1]
   1ae60:	ldr	r2, [fp, #28]
   1ae64:	ldr	r2, [r2]
   1ae68:	sub	r2, r2, #1
   1ae6c:	mls	r0, r2, r1, r0
   1ae70:	ldr	r1, [fp, #20]
   1ae74:	ldr	r1, [r1]
   1ae78:	sub	r4, r0, r1
   1ae7c:	sub	r3, r4, #1
   1ae80:	ldr	r0, [sp, #44]	; 0x2c
   1ae84:	add	r1, sp, #48	; 0x30
   1ae88:	ldr	sl, [fp, #8]
   1ae8c:	mov	r2, sl
   1ae90:	bl	26ac <InflateSkipData>
   1ae94:	add	r7, r4, r7
   1ae98:	ldr	r0, [fp, #12]
   1ae9c:	cmp	r0, #2
   1aea0:	mov	r3, r7
   1aea4:	blt	1afac <ReadCompressedDataSlabN+0x273c>
   1aea8:	mov	r0, #0
   1aeac:	add	r9, sp, #104	; 0x68
   1aeb0:	ldr	r8, [sp, #20]
   1aeb4:	ldr	r5, [sp, #32]
   1aeb8:	ldr	r7, [sp, #24]
   1aebc:	mov	r6, r0
   1aec0:	ldr	r0, [r7, r0, lsl #2]
   1aec4:	add	r0, r0, #1
   1aec8:	str	r0, [r7, r6, lsl #2]
   1aecc:	ldr	r1, [sp, #40]	; 0x28
   1aed0:	ldr	r1, [r1, r6, lsl #2]
   1aed4:	sdiv	r2, r0, r1
   1aed8:	mls	r0, r2, r1, r0
   1aedc:	cmp	r0, #0
   1aee0:	bne	1afb4 <ReadCompressedDataSlabN+0x2744>
   1aee4:	mov	r0, #0
   1aee8:	str	r0, [r7, r6, lsl #2]
   1aeec:	add	r4, r9, r6, lsl #2
   1aef0:	ldr	r0, [r4, #4]
   1aef4:	sdiv	r1, r3, r0
   1aef8:	mls	r1, r1, r0, r3
   1aefc:	cmp	r1, #0
   1af00:	beq	1af58 <ReadCompressedDataSlabN+0x26e8>
   1af04:	ldr	r2, [r9, r6, lsl #2]
   1af08:	mov	r7, r3
   1af0c:	ldr	r3, [r5, r6, lsl #2]
   1af10:	sub	r0, r0, r1
   1af14:	mla	r3, r3, r2, r0
   1af18:	ldr	r0, [sp, #44]	; 0x2c
   1af1c:	add	r1, sp, #48	; 0x30
   1af20:	mov	r2, sl
   1af24:	bl	26ac <InflateSkipData>
   1af28:	ldr	r5, [sp, #32]
   1af2c:	ldr	r0, [r4, #4]
   1af30:	add	r1, r0, r7
   1af34:	sdiv	r2, r7, r0
   1af38:	mul	r0, r2, r0
   1af3c:	sub	r0, r0, r7
   1af40:	ldr	r7, [sp, #24]
   1af44:	add	r0, r1, r0
   1af48:	ldr	r1, [r9, r6, lsl #2]
   1af4c:	ldr	r2, [r5, r6, lsl #2]
   1af50:	mla	r3, r2, r1, r0
   1af54:	b	1af94 <ReadCompressedDataSlabN+0x2724>
   1af58:	ldr	r0, [r5, r6, lsl #2]
   1af5c:	cmp	r0, #0
   1af60:	beq	1af94 <ReadCompressedDataSlabN+0x2724>
   1af64:	ldr	r1, [r9, r6, lsl #2]
   1af68:	mov	r4, r3
   1af6c:	mul	r3, r1, r0
   1af70:	ldr	r0, [sp, #44]	; 0x2c
   1af74:	add	r1, sp, #48	; 0x30
   1af78:	mov	r2, sl
   1af7c:	bl	26ac <InflateSkipData>
   1af80:	ldr	r5, [sp, #32]
   1af84:	mov	r3, r4
   1af88:	ldr	r0, [r9, r6, lsl #2]
   1af8c:	ldr	r1, [r5, r6, lsl #2]
   1af90:	mla	r3, r1, r0, r4
   1af94:	add	r0, r6, #1
   1af98:	add	r1, r6, #2
   1af9c:	ldr	r2, [fp, #12]
   1afa0:	cmp	r1, r2
   1afa4:	blt	1aebc <ReadCompressedDataSlabN+0x264c>
   1afa8:	b	1afe4 <ReadCompressedDataSlabN+0x2774>
   1afac:	ldr	r8, [sp, #20]
   1afb0:	b	1afe4 <ReadCompressedDataSlabN+0x2774>
   1afb4:	ldr	r0, [sp, #8]
   1afb8:	ldr	r6, [r0, r6, lsl #2]
   1afbc:	cmp	r6, #0
   1afc0:	beq	1afe4 <ReadCompressedDataSlabN+0x2774>
   1afc4:	ldr	r0, [sp, #44]	; 0x2c
   1afc8:	add	r1, sp, #48	; 0x30
   1afcc:	mov	r2, sl
   1afd0:	mov	r4, r3
   1afd4:	mov	r3, r6
   1afd8:	bl	26ac <InflateSkipData>
   1afdc:	mov	r3, r4
   1afe0:	add	r3, r6, r4
   1afe4:	str	r3, [sp, #28]
   1afe8:	ldr	r0, [fp, #28]
   1afec:	ldr	r0, [r0]
   1aff0:	ldr	sl, [sp, #16]
   1aff4:	add	sl, r0, sl
   1aff8:	cmp	sl, r8
   1affc:	mov	r9, #1
   1b000:	add	r6, sp, #48	; 0x30
   1b004:	blt	1ad58 <ReadCompressedDataSlabN+0x24e8>
   1b008:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b00c:	ldr	r0, [sp, #28]
   1b010:	cmp	r0, #1
   1b014:	ldr	r8, [sp, #36]	; 0x24
   1b018:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b01c:	ldr	r0, [fp, #20]
   1b020:	add	r5, r0, #4
   1b024:	ldr	r0, [fp, #28]
   1b028:	add	r9, r0, #4
   1b02c:	sub	r0, fp, #112	; 0x70
   1b030:	orr	r3, r0, #4
   1b034:	sub	r0, fp, #72	; 0x48
   1b038:	orr	r0, r0, #4
   1b03c:	str	r0, [sp, #4]
   1b040:	add	r0, r8, #1
   1b044:	str	r0, [sp, #8]
   1b048:	mov	sl, #1
   1b04c:	add	r6, sp, #48	; 0x30
   1b050:	mov	r0, #0
   1b054:	str	r0, [sp, #20]
   1b058:	str	r5, [sp, #16]
   1b05c:	str	r9, [sp, #12]
   1b060:	str	r3, [sp, #32]
   1b064:	str	r7, [sp, #24]
   1b068:	ldr	r4, [fp, #20]
   1b06c:	ldr	r3, [r4]
   1b070:	cmp	r3, #0
   1b074:	beq	1b0ac <ReadCompressedDataSlabN+0x283c>
   1b078:	mov	r7, r4
   1b07c:	ldr	r4, [sp, #44]	; 0x2c
   1b080:	mov	r0, r4
   1b084:	mov	r1, r6
   1b088:	ldr	r5, [fp, #8]
   1b08c:	mov	r2, r5
   1b090:	bl	26ac <InflateSkipData>
   1b094:	ldr	r0, [r7]
   1b098:	ldr	r1, [sp, #24]
   1b09c:	add	r1, r0, r1
   1b0a0:	str	r1, [sp, #24]
   1b0a4:	ldr	r7, [fp, #28]
   1b0a8:	b	1b0b8 <ReadCompressedDataSlabN+0x2848>
   1b0ac:	ldr	r4, [sp, #44]	; 0x2c
   1b0b0:	ldr	r7, [fp, #28]
   1b0b4:	ldr	r5, [fp, #8]
   1b0b8:	ldr	r7, [r7]
   1b0bc:	str	sl, [sp]
   1b0c0:	ldr	r0, [sp, #20]
   1b0c4:	add	r2, r8, r0
   1b0c8:	mov	r8, r0
   1b0cc:	mov	r0, r4
   1b0d0:	mov	r1, r6
   1b0d4:	mov	r3, r5
   1b0d8:	bl	12e9c <ReadCompressedInt8Data>
   1b0dc:	cmp	r7, #2
   1b0e0:	blt	1b168 <ReadCompressedDataSlabN+0x28f8>
   1b0e4:	ldr	r0, [sp, #8]
   1b0e8:	add	r0, r0, r8
   1b0ec:	str	r0, [sp, #40]	; 0x28
   1b0f0:	mov	r4, #0
   1b0f4:	ldr	r7, [sp, #24]
   1b0f8:	ldr	r0, [fp, #24]
   1b0fc:	mov	r6, r0
   1b100:	ldr	r0, [r0]
   1b104:	sub	r3, r0, #1
   1b108:	ldr	sl, [sp, #44]	; 0x2c
   1b10c:	mov	r0, sl
   1b110:	add	r9, sp, #48	; 0x30
   1b114:	mov	r1, r9
   1b118:	ldr	r8, [fp, #8]
   1b11c:	mov	r2, r8
   1b120:	bl	26ac <InflateSkipData>
   1b124:	ldr	r0, [fp, #28]
   1b128:	ldr	r5, [r0]
   1b12c:	ldr	r6, [r6]
   1b130:	mov	r0, #1
   1b134:	str	r0, [sp]
   1b138:	ldr	r0, [sp, #40]	; 0x28
   1b13c:	add	r2, r0, r4
   1b140:	mov	r0, sl
   1b144:	mov	r1, r9
   1b148:	mov	r3, r8
   1b14c:	bl	12e9c <ReadCompressedInt8Data>
   1b150:	add	r7, r6, r7
   1b154:	add	r4, r4, #1
   1b158:	sub	r0, r5, #1
   1b15c:	cmp	r4, r0
   1b160:	blt	1b0f8 <ReadCompressedDataSlabN+0x2888>
   1b164:	b	1b16c <ReadCompressedDataSlabN+0x28fc>
   1b168:	ldr	r7, [sp, #24]
   1b16c:	ldr	r0, [fp, #16]
   1b170:	ldr	r0, [r0]
   1b174:	ldr	r1, [fp, #24]
   1b178:	ldr	r1, [r1]
   1b17c:	ldr	r2, [fp, #28]
   1b180:	ldr	r2, [r2]
   1b184:	sub	r2, r2, #1
   1b188:	mls	r0, r2, r1, r0
   1b18c:	ldr	r1, [fp, #20]
   1b190:	ldr	r1, [r1]
   1b194:	sub	r4, r0, r1
   1b198:	sub	r3, r4, #1
   1b19c:	ldr	r0, [sp, #44]	; 0x2c
   1b1a0:	add	r1, sp, #48	; 0x30
   1b1a4:	ldr	r2, [fp, #8]
   1b1a8:	bl	26ac <InflateSkipData>
   1b1ac:	add	r7, r4, r7
   1b1b0:	ldr	r0, [fp, #12]
   1b1b4:	cmp	r0, #2
   1b1b8:	blt	1b2b8 <ReadCompressedDataSlabN+0x2a48>
   1b1bc:	mov	r0, #0
   1b1c0:	ldr	r8, [sp, #36]	; 0x24
   1b1c4:	ldr	r5, [sp, #16]
   1b1c8:	ldr	r9, [sp, #12]
   1b1cc:	ldr	r3, [sp, #32]
   1b1d0:	mov	sl, r0
   1b1d4:	ldr	r0, [r3, r0, lsl #2]
   1b1d8:	add	r0, r0, #1
   1b1dc:	str	r0, [r3, sl, lsl #2]
   1b1e0:	ldr	r1, [r9, sl, lsl #2]
   1b1e4:	sdiv	r2, r0, r1
   1b1e8:	mls	r0, r2, r1, r0
   1b1ec:	cmp	r0, #0
   1b1f0:	bne	1b2c0 <ReadCompressedDataSlabN+0x2a50>
   1b1f4:	mov	r0, #0
   1b1f8:	str	r0, [r3, sl, lsl #2]
   1b1fc:	add	r6, sp, #104	; 0x68
   1b200:	add	r4, r6, sl, lsl #2
   1b204:	ldr	r0, [r4, #4]
   1b208:	sdiv	r1, r7, r0
   1b20c:	mls	r1, r1, r0, r7
   1b210:	cmp	r1, #0
   1b214:	beq	1b264 <ReadCompressedDataSlabN+0x29f4>
   1b218:	ldr	r2, [r6, sl, lsl #2]
   1b21c:	ldr	r3, [r5, sl, lsl #2]
   1b220:	sub	r0, r0, r1
   1b224:	mla	r3, r3, r2, r0
   1b228:	ldr	r0, [sp, #44]	; 0x2c
   1b22c:	add	r1, sp, #48	; 0x30
   1b230:	ldr	r2, [fp, #8]
   1b234:	bl	26ac <InflateSkipData>
   1b238:	ldr	r3, [sp, #32]
   1b23c:	ldr	r0, [r4, #4]
   1b240:	add	r1, r0, r7
   1b244:	sdiv	r2, r7, r0
   1b248:	mul	r0, r2, r0
   1b24c:	sub	r0, r0, r7
   1b250:	add	r0, r1, r0
   1b254:	ldr	r1, [r6, sl, lsl #2]
   1b258:	ldr	r2, [r5, sl, lsl #2]
   1b25c:	mla	r7, r2, r1, r0
   1b260:	b	1b2a0 <ReadCompressedDataSlabN+0x2a30>
   1b264:	ldr	r0, [r5, sl, lsl #2]
   1b268:	cmp	r0, #0
   1b26c:	beq	1b2a0 <ReadCompressedDataSlabN+0x2a30>
   1b270:	add	r1, sp, #104	; 0x68
   1b274:	mov	r4, r1
   1b278:	ldr	r1, [r1, sl, lsl #2]
   1b27c:	mul	r3, r1, r0
   1b280:	ldr	r0, [sp, #44]	; 0x2c
   1b284:	add	r1, sp, #48	; 0x30
   1b288:	ldr	r2, [fp, #8]
   1b28c:	bl	26ac <InflateSkipData>
   1b290:	ldr	r3, [sp, #32]
   1b294:	ldr	r0, [r4, sl, lsl #2]
   1b298:	ldr	r1, [r5, sl, lsl #2]
   1b29c:	mla	r7, r1, r0, r7
   1b2a0:	add	r0, sl, #1
   1b2a4:	add	r1, sl, #2
   1b2a8:	ldr	r2, [fp, #12]
   1b2ac:	cmp	r1, r2
   1b2b0:	blt	1b1d0 <ReadCompressedDataSlabN+0x2960>
   1b2b4:	b	1b2e8 <ReadCompressedDataSlabN+0x2a78>
   1b2b8:	ldr	r8, [sp, #36]	; 0x24
   1b2bc:	b	1b2e8 <ReadCompressedDataSlabN+0x2a78>
   1b2c0:	ldr	r0, [sp, #4]
   1b2c4:	ldr	r4, [r0, sl, lsl #2]
   1b2c8:	cmp	r4, #0
   1b2cc:	beq	1b2e8 <ReadCompressedDataSlabN+0x2a78>
   1b2d0:	ldr	r0, [sp, #44]	; 0x2c
   1b2d4:	add	r1, sp, #48	; 0x30
   1b2d8:	ldr	r2, [fp, #8]
   1b2dc:	mov	r3, r4
   1b2e0:	bl	26ac <InflateSkipData>
   1b2e4:	add	r7, r4, r7
   1b2e8:	ldr	r0, [fp, #28]
   1b2ec:	ldr	r0, [r0]
   1b2f0:	ldr	r1, [sp, #20]
   1b2f4:	add	r1, r0, r1
   1b2f8:	ldr	r0, [sp, #28]
   1b2fc:	str	r1, [sp, #20]
   1b300:	cmp	r1, r0
   1b304:	mov	sl, #1
   1b308:	add	r6, sp, #48	; 0x30
   1b30c:	blt	1b064 <ReadCompressedDataSlabN+0x27f4>
   1b310:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b314:	ldr	r0, [sp, #28]
   1b318:	cmp	r0, #1
   1b31c:	ldr	r8, [sp, #36]	; 0x24
   1b320:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b324:	ldr	r0, [fp, #20]
   1b328:	add	r5, r0, #4
   1b32c:	ldr	r0, [fp, #28]
   1b330:	add	r9, r0, #4
   1b334:	sub	r0, fp, #112	; 0x70
   1b338:	orr	r3, r0, #4
   1b33c:	sub	r0, fp, #72	; 0x48
   1b340:	orr	r0, r0, #4
   1b344:	str	r0, [sp, #4]
   1b348:	add	r0, r8, #1
   1b34c:	str	r0, [sp, #8]
   1b350:	mov	sl, #1
   1b354:	add	r6, sp, #48	; 0x30
   1b358:	mov	r0, #0
   1b35c:	str	r0, [sp, #20]
   1b360:	str	r5, [sp, #16]
   1b364:	str	r9, [sp, #12]
   1b368:	str	r3, [sp, #32]
   1b36c:	str	r7, [sp, #24]
   1b370:	ldr	r4, [fp, #20]
   1b374:	ldr	r3, [r4]
   1b378:	cmp	r3, #0
   1b37c:	beq	1b3b4 <ReadCompressedDataSlabN+0x2b44>
   1b380:	mov	r7, r4
   1b384:	ldr	r4, [sp, #44]	; 0x2c
   1b388:	mov	r0, r4
   1b38c:	mov	r1, r6
   1b390:	ldr	r5, [fp, #8]
   1b394:	mov	r2, r5
   1b398:	bl	26ac <InflateSkipData>
   1b39c:	ldr	r0, [r7]
   1b3a0:	ldr	r1, [sp, #24]
   1b3a4:	add	r1, r0, r1
   1b3a8:	str	r1, [sp, #24]
   1b3ac:	ldr	r7, [fp, #28]
   1b3b0:	b	1b3c0 <ReadCompressedDataSlabN+0x2b50>
   1b3b4:	ldr	r4, [sp, #44]	; 0x2c
   1b3b8:	ldr	r7, [fp, #28]
   1b3bc:	ldr	r5, [fp, #8]
   1b3c0:	ldr	r7, [r7]
   1b3c4:	str	sl, [sp]
   1b3c8:	ldr	r0, [sp, #20]
   1b3cc:	add	r2, r8, r0
   1b3d0:	mov	r8, r0
   1b3d4:	mov	r0, r4
   1b3d8:	mov	r1, r6
   1b3dc:	mov	r3, r5
   1b3e0:	bl	14888 <ReadCompressedUInt8Data>
   1b3e4:	cmp	r7, #2
   1b3e8:	blt	1b470 <ReadCompressedDataSlabN+0x2c00>
   1b3ec:	ldr	r0, [sp, #8]
   1b3f0:	add	r0, r0, r8
   1b3f4:	str	r0, [sp, #40]	; 0x28
   1b3f8:	mov	r4, #0
   1b3fc:	ldr	r7, [sp, #24]
   1b400:	ldr	r0, [fp, #24]
   1b404:	mov	r6, r0
   1b408:	ldr	r0, [r0]
   1b40c:	sub	r3, r0, #1
   1b410:	ldr	sl, [sp, #44]	; 0x2c
   1b414:	mov	r0, sl
   1b418:	add	r9, sp, #48	; 0x30
   1b41c:	mov	r1, r9
   1b420:	ldr	r8, [fp, #8]
   1b424:	mov	r2, r8
   1b428:	bl	26ac <InflateSkipData>
   1b42c:	ldr	r0, [fp, #28]
   1b430:	ldr	r5, [r0]
   1b434:	ldr	r6, [r6]
   1b438:	mov	r0, #1
   1b43c:	str	r0, [sp]
   1b440:	ldr	r0, [sp, #40]	; 0x28
   1b444:	add	r2, r0, r4
   1b448:	mov	r0, sl
   1b44c:	mov	r1, r9
   1b450:	mov	r3, r8
   1b454:	bl	14888 <ReadCompressedUInt8Data>
   1b458:	add	r7, r6, r7
   1b45c:	add	r4, r4, #1
   1b460:	sub	r0, r5, #1
   1b464:	cmp	r4, r0
   1b468:	blt	1b400 <ReadCompressedDataSlabN+0x2b90>
   1b46c:	b	1b474 <ReadCompressedDataSlabN+0x2c04>
   1b470:	ldr	r7, [sp, #24]
   1b474:	ldr	r0, [fp, #16]
   1b478:	ldr	r0, [r0]
   1b47c:	ldr	r1, [fp, #24]
   1b480:	ldr	r1, [r1]
   1b484:	ldr	r2, [fp, #28]
   1b488:	ldr	r2, [r2]
   1b48c:	sub	r2, r2, #1
   1b490:	mls	r0, r2, r1, r0
   1b494:	ldr	r1, [fp, #20]
   1b498:	ldr	r1, [r1]
   1b49c:	sub	r4, r0, r1
   1b4a0:	sub	r3, r4, #1
   1b4a4:	ldr	r0, [sp, #44]	; 0x2c
   1b4a8:	add	r1, sp, #48	; 0x30
   1b4ac:	ldr	r2, [fp, #8]
   1b4b0:	bl	26ac <InflateSkipData>
   1b4b4:	add	r7, r4, r7
   1b4b8:	ldr	r0, [fp, #12]
   1b4bc:	cmp	r0, #2
   1b4c0:	blt	1b5c0 <ReadCompressedDataSlabN+0x2d50>
   1b4c4:	mov	r0, #0
   1b4c8:	ldr	r8, [sp, #36]	; 0x24
   1b4cc:	ldr	r5, [sp, #16]
   1b4d0:	ldr	r9, [sp, #12]
   1b4d4:	ldr	r3, [sp, #32]
   1b4d8:	mov	sl, r0
   1b4dc:	ldr	r0, [r3, r0, lsl #2]
   1b4e0:	add	r0, r0, #1
   1b4e4:	str	r0, [r3, sl, lsl #2]
   1b4e8:	ldr	r1, [r9, sl, lsl #2]
   1b4ec:	sdiv	r2, r0, r1
   1b4f0:	mls	r0, r2, r1, r0
   1b4f4:	cmp	r0, #0
   1b4f8:	bne	1b5c8 <ReadCompressedDataSlabN+0x2d58>
   1b4fc:	mov	r0, #0
   1b500:	str	r0, [r3, sl, lsl #2]
   1b504:	add	r6, sp, #104	; 0x68
   1b508:	add	r4, r6, sl, lsl #2
   1b50c:	ldr	r0, [r4, #4]
   1b510:	sdiv	r1, r7, r0
   1b514:	mls	r1, r1, r0, r7
   1b518:	cmp	r1, #0
   1b51c:	beq	1b56c <ReadCompressedDataSlabN+0x2cfc>
   1b520:	ldr	r2, [r6, sl, lsl #2]
   1b524:	ldr	r3, [r5, sl, lsl #2]
   1b528:	sub	r0, r0, r1
   1b52c:	mla	r3, r3, r2, r0
   1b530:	ldr	r0, [sp, #44]	; 0x2c
   1b534:	add	r1, sp, #48	; 0x30
   1b538:	ldr	r2, [fp, #8]
   1b53c:	bl	26ac <InflateSkipData>
   1b540:	ldr	r3, [sp, #32]
   1b544:	ldr	r0, [r4, #4]
   1b548:	add	r1, r0, r7
   1b54c:	sdiv	r2, r7, r0
   1b550:	mul	r0, r2, r0
   1b554:	sub	r0, r0, r7
   1b558:	add	r0, r1, r0
   1b55c:	ldr	r1, [r6, sl, lsl #2]
   1b560:	ldr	r2, [r5, sl, lsl #2]
   1b564:	mla	r7, r2, r1, r0
   1b568:	b	1b5a8 <ReadCompressedDataSlabN+0x2d38>
   1b56c:	ldr	r0, [r5, sl, lsl #2]
   1b570:	cmp	r0, #0
   1b574:	beq	1b5a8 <ReadCompressedDataSlabN+0x2d38>
   1b578:	add	r1, sp, #104	; 0x68
   1b57c:	mov	r4, r1
   1b580:	ldr	r1, [r1, sl, lsl #2]
   1b584:	mul	r3, r1, r0
   1b588:	ldr	r0, [sp, #44]	; 0x2c
   1b58c:	add	r1, sp, #48	; 0x30
   1b590:	ldr	r2, [fp, #8]
   1b594:	bl	26ac <InflateSkipData>
   1b598:	ldr	r3, [sp, #32]
   1b59c:	ldr	r0, [r4, sl, lsl #2]
   1b5a0:	ldr	r1, [r5, sl, lsl #2]
   1b5a4:	mla	r7, r1, r0, r7
   1b5a8:	add	r0, sl, #1
   1b5ac:	add	r1, sl, #2
   1b5b0:	ldr	r2, [fp, #12]
   1b5b4:	cmp	r1, r2
   1b5b8:	blt	1b4d8 <ReadCompressedDataSlabN+0x2c68>
   1b5bc:	b	1b5f0 <ReadCompressedDataSlabN+0x2d80>
   1b5c0:	ldr	r8, [sp, #36]	; 0x24
   1b5c4:	b	1b5f0 <ReadCompressedDataSlabN+0x2d80>
   1b5c8:	ldr	r0, [sp, #4]
   1b5cc:	ldr	r4, [r0, sl, lsl #2]
   1b5d0:	cmp	r4, #0
   1b5d4:	beq	1b5f0 <ReadCompressedDataSlabN+0x2d80>
   1b5d8:	ldr	r0, [sp, #44]	; 0x2c
   1b5dc:	add	r1, sp, #48	; 0x30
   1b5e0:	ldr	r2, [fp, #8]
   1b5e4:	mov	r3, r4
   1b5e8:	bl	26ac <InflateSkipData>
   1b5ec:	add	r7, r4, r7
   1b5f0:	ldr	r0, [fp, #28]
   1b5f4:	ldr	r0, [r0]
   1b5f8:	ldr	r1, [sp, #20]
   1b5fc:	add	r1, r0, r1
   1b600:	ldr	r0, [sp, #28]
   1b604:	str	r1, [sp, #20]
   1b608:	cmp	r1, r0
   1b60c:	mov	sl, #1
   1b610:	add	r6, sp, #48	; 0x30
   1b614:	blt	1b36c <ReadCompressedDataSlabN+0x2afc>
   1b618:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b61c:	ldr	r0, [sp, #20]
   1b620:	cmp	r0, #1
   1b624:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b628:	ldr	r0, [fp, #20]
   1b62c:	add	r5, r0, #4
   1b630:	ldr	r0, [fp, #28]
   1b634:	add	r0, r0, #4
   1b638:	str	r0, [sp, #40]	; 0x28
   1b63c:	sub	r0, fp, #112	; 0x70
   1b640:	orr	r7, r0, #4
   1b644:	sub	r0, fp, #72	; 0x48
   1b648:	orr	r0, r0, #4
   1b64c:	str	r0, [sp, #8]
   1b650:	ldr	r0, [sp, #36]	; 0x24
   1b654:	add	r0, r0, #2
   1b658:	str	r0, [sp, #12]
   1b65c:	mov	r9, #1
   1b660:	add	r6, sp, #48	; 0x30
   1b664:	mov	sl, #0
   1b668:	str	r5, [sp, #32]
   1b66c:	str	r7, [sp, #24]
   1b670:	ldr	r4, [fp, #20]
   1b674:	ldr	r3, [r4]
   1b678:	cmp	r3, #0
   1b67c:	beq	1b6b0 <ReadCompressedDataSlabN+0x2e40>
   1b680:	mov	r8, r4
   1b684:	ldr	r4, [sp, #44]	; 0x2c
   1b688:	mov	r0, r4
   1b68c:	mov	r1, r6
   1b690:	ldr	r5, [fp, #8]
   1b694:	mov	r2, r5
   1b698:	bl	26ac <InflateSkipData>
   1b69c:	ldr	r0, [r8]
   1b6a0:	ldr	r1, [sp, #28]
   1b6a4:	add	r1, r0, r1
   1b6a8:	str	r1, [sp, #28]
   1b6ac:	b	1b6b8 <ReadCompressedDataSlabN+0x2e48>
   1b6b0:	ldr	r4, [sp, #44]	; 0x2c
   1b6b4:	ldr	r5, [fp, #8]
   1b6b8:	ldr	r0, [fp, #28]
   1b6bc:	ldr	r7, [r0]
   1b6c0:	str	r9, [sp]
   1b6c4:	ldr	r0, [sp, #36]	; 0x24
   1b6c8:	add	r2, r0, sl, lsl #1
   1b6cc:	mov	r0, r4
   1b6d0:	mov	r1, r6
   1b6d4:	mov	r3, r5
   1b6d8:	bl	faac <ReadCompressedInt16Data>
   1b6dc:	cmp	r7, #2
   1b6e0:	str	sl, [sp, #16]
   1b6e4:	blt	1b764 <ReadCompressedDataSlabN+0x2ef4>
   1b6e8:	ldr	r0, [sp, #12]
   1b6ec:	add	r6, r0, sl, lsl #1
   1b6f0:	mov	r4, #0
   1b6f4:	ldr	r7, [sp, #28]
   1b6f8:	ldr	r0, [fp, #24]
   1b6fc:	mov	sl, r0
   1b700:	ldr	r0, [r0]
   1b704:	sub	r3, r0, #1
   1b708:	ldr	r8, [sp, #44]	; 0x2c
   1b70c:	mov	r0, r8
   1b710:	add	r1, sp, #48	; 0x30
   1b714:	ldr	r9, [fp, #8]
   1b718:	mov	r2, r9
   1b71c:	bl	26ac <InflateSkipData>
   1b720:	ldr	r0, [fp, #28]
   1b724:	ldr	r5, [r0]
   1b728:	ldr	sl, [sl]
   1b72c:	mov	r0, #1
   1b730:	str	r0, [sp]
   1b734:	mov	r0, r8
   1b738:	add	r1, sp, #48	; 0x30
   1b73c:	mov	r2, r6
   1b740:	mov	r3, r9
   1b744:	bl	faac <ReadCompressedInt16Data>
   1b748:	add	r7, sl, r7
   1b74c:	add	r6, r6, #2
   1b750:	add	r4, r4, #1
   1b754:	sub	r0, r5, #1
   1b758:	cmp	r4, r0
   1b75c:	blt	1b6f8 <ReadCompressedDataSlabN+0x2e88>
   1b760:	b	1b768 <ReadCompressedDataSlabN+0x2ef8>
   1b764:	ldr	r7, [sp, #28]
   1b768:	ldr	r0, [fp, #16]
   1b76c:	ldr	r0, [r0]
   1b770:	ldr	r1, [fp, #24]
   1b774:	ldr	r1, [r1]
   1b778:	ldr	r2, [fp, #28]
   1b77c:	ldr	r2, [r2]
   1b780:	sub	r2, r2, #1
   1b784:	mls	r0, r2, r1, r0
   1b788:	ldr	r1, [fp, #20]
   1b78c:	ldr	r1, [r1]
   1b790:	sub	r4, r0, r1
   1b794:	sub	r3, r4, #1
   1b798:	ldr	r0, [sp, #44]	; 0x2c
   1b79c:	add	r1, sp, #48	; 0x30
   1b7a0:	ldr	sl, [fp, #8]
   1b7a4:	mov	r2, sl
   1b7a8:	bl	26ac <InflateSkipData>
   1b7ac:	add	r7, r4, r7
   1b7b0:	ldr	r0, [fp, #12]
   1b7b4:	cmp	r0, #2
   1b7b8:	mov	r3, r7
   1b7bc:	blt	1b8c4 <ReadCompressedDataSlabN+0x3054>
   1b7c0:	mov	r0, #0
   1b7c4:	add	r9, sp, #104	; 0x68
   1b7c8:	ldr	r8, [sp, #20]
   1b7cc:	ldr	r5, [sp, #32]
   1b7d0:	ldr	r7, [sp, #24]
   1b7d4:	mov	r6, r0
   1b7d8:	ldr	r0, [r7, r0, lsl #2]
   1b7dc:	add	r0, r0, #1
   1b7e0:	str	r0, [r7, r6, lsl #2]
   1b7e4:	ldr	r1, [sp, #40]	; 0x28
   1b7e8:	ldr	r1, [r1, r6, lsl #2]
   1b7ec:	sdiv	r2, r0, r1
   1b7f0:	mls	r0, r2, r1, r0
   1b7f4:	cmp	r0, #0
   1b7f8:	bne	1b8cc <ReadCompressedDataSlabN+0x305c>
   1b7fc:	mov	r0, #0
   1b800:	str	r0, [r7, r6, lsl #2]
   1b804:	add	r4, r9, r6, lsl #2
   1b808:	ldr	r0, [r4, #4]
   1b80c:	sdiv	r1, r3, r0
   1b810:	mls	r1, r1, r0, r3
   1b814:	cmp	r1, #0
   1b818:	beq	1b870 <ReadCompressedDataSlabN+0x3000>
   1b81c:	ldr	r2, [r9, r6, lsl #2]
   1b820:	mov	r7, r3
   1b824:	ldr	r3, [r5, r6, lsl #2]
   1b828:	sub	r0, r0, r1
   1b82c:	mla	r3, r3, r2, r0
   1b830:	ldr	r0, [sp, #44]	; 0x2c
   1b834:	add	r1, sp, #48	; 0x30
   1b838:	mov	r2, sl
   1b83c:	bl	26ac <InflateSkipData>
   1b840:	ldr	r5, [sp, #32]
   1b844:	ldr	r0, [r4, #4]
   1b848:	add	r1, r0, r7
   1b84c:	sdiv	r2, r7, r0
   1b850:	mul	r0, r2, r0
   1b854:	sub	r0, r0, r7
   1b858:	ldr	r7, [sp, #24]
   1b85c:	add	r0, r1, r0
   1b860:	ldr	r1, [r9, r6, lsl #2]
   1b864:	ldr	r2, [r5, r6, lsl #2]
   1b868:	mla	r3, r2, r1, r0
   1b86c:	b	1b8ac <ReadCompressedDataSlabN+0x303c>
   1b870:	ldr	r0, [r5, r6, lsl #2]
   1b874:	cmp	r0, #0
   1b878:	beq	1b8ac <ReadCompressedDataSlabN+0x303c>
   1b87c:	ldr	r1, [r9, r6, lsl #2]
   1b880:	mov	r4, r3
   1b884:	mul	r3, r1, r0
   1b888:	ldr	r0, [sp, #44]	; 0x2c
   1b88c:	add	r1, sp, #48	; 0x30
   1b890:	mov	r2, sl
   1b894:	bl	26ac <InflateSkipData>
   1b898:	ldr	r5, [sp, #32]
   1b89c:	mov	r3, r4
   1b8a0:	ldr	r0, [r9, r6, lsl #2]
   1b8a4:	ldr	r1, [r5, r6, lsl #2]
   1b8a8:	mla	r3, r1, r0, r4
   1b8ac:	add	r0, r6, #1
   1b8b0:	add	r1, r6, #2
   1b8b4:	ldr	r2, [fp, #12]
   1b8b8:	cmp	r1, r2
   1b8bc:	blt	1b7d4 <ReadCompressedDataSlabN+0x2f64>
   1b8c0:	b	1b8fc <ReadCompressedDataSlabN+0x308c>
   1b8c4:	ldr	r8, [sp, #20]
   1b8c8:	b	1b8fc <ReadCompressedDataSlabN+0x308c>
   1b8cc:	ldr	r0, [sp, #8]
   1b8d0:	ldr	r6, [r0, r6, lsl #2]
   1b8d4:	cmp	r6, #0
   1b8d8:	beq	1b8fc <ReadCompressedDataSlabN+0x308c>
   1b8dc:	ldr	r0, [sp, #44]	; 0x2c
   1b8e0:	add	r1, sp, #48	; 0x30
   1b8e4:	mov	r2, sl
   1b8e8:	mov	r4, r3
   1b8ec:	mov	r3, r6
   1b8f0:	bl	26ac <InflateSkipData>
   1b8f4:	mov	r3, r4
   1b8f8:	add	r3, r6, r4
   1b8fc:	str	r3, [sp, #28]
   1b900:	ldr	r0, [fp, #28]
   1b904:	ldr	r0, [r0]
   1b908:	ldr	sl, [sp, #16]
   1b90c:	add	sl, r0, sl
   1b910:	cmp	sl, r8
   1b914:	mov	r9, #1
   1b918:	add	r6, sp, #48	; 0x30
   1b91c:	blt	1b670 <ReadCompressedDataSlabN+0x2e00>
   1b920:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b924:	ldr	r0, [sp, #20]
   1b928:	cmp	r0, #1
   1b92c:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1b930:	ldr	r0, [fp, #20]
   1b934:	add	r5, r0, #4
   1b938:	ldr	r0, [fp, #28]
   1b93c:	add	r0, r0, #4
   1b940:	str	r0, [sp, #40]	; 0x28
   1b944:	sub	r0, fp, #112	; 0x70
   1b948:	orr	r7, r0, #4
   1b94c:	sub	r0, fp, #72	; 0x48
   1b950:	orr	r0, r0, #4
   1b954:	str	r0, [sp, #8]
   1b958:	ldr	r0, [sp, #36]	; 0x24
   1b95c:	add	r0, r0, #2
   1b960:	str	r0, [sp, #12]
   1b964:	mov	r9, #1
   1b968:	add	r6, sp, #48	; 0x30
   1b96c:	mov	sl, #0
   1b970:	str	r5, [sp, #32]
   1b974:	str	r7, [sp, #24]
   1b978:	ldr	r4, [fp, #20]
   1b97c:	ldr	r3, [r4]
   1b980:	cmp	r3, #0
   1b984:	beq	1b9b8 <ReadCompressedDataSlabN+0x3148>
   1b988:	mov	r8, r4
   1b98c:	ldr	r4, [sp, #44]	; 0x2c
   1b990:	mov	r0, r4
   1b994:	mov	r1, r6
   1b998:	ldr	r5, [fp, #8]
   1b99c:	mov	r2, r5
   1b9a0:	bl	26ac <InflateSkipData>
   1b9a4:	ldr	r0, [r8]
   1b9a8:	ldr	r1, [sp, #28]
   1b9ac:	add	r1, r0, r1
   1b9b0:	str	r1, [sp, #28]
   1b9b4:	b	1b9c0 <ReadCompressedDataSlabN+0x3150>
   1b9b8:	ldr	r4, [sp, #44]	; 0x2c
   1b9bc:	ldr	r5, [fp, #8]
   1b9c0:	ldr	r0, [fp, #28]
   1b9c4:	ldr	r7, [r0]
   1b9c8:	str	r9, [sp]
   1b9cc:	ldr	r0, [sp, #36]	; 0x24
   1b9d0:	add	r2, r0, sl, lsl #1
   1b9d4:	mov	r0, r4
   1b9d8:	mov	r1, r6
   1b9dc:	mov	r3, r5
   1b9e0:	bl	114b0 <ReadCompressedUInt16Data>
   1b9e4:	cmp	r7, #2
   1b9e8:	str	sl, [sp, #16]
   1b9ec:	blt	1ba6c <ReadCompressedDataSlabN+0x31fc>
   1b9f0:	ldr	r0, [sp, #12]
   1b9f4:	add	r6, r0, sl, lsl #1
   1b9f8:	mov	r4, #0
   1b9fc:	ldr	r7, [sp, #28]
   1ba00:	ldr	r0, [fp, #24]
   1ba04:	mov	sl, r0
   1ba08:	ldr	r0, [r0]
   1ba0c:	sub	r3, r0, #1
   1ba10:	ldr	r8, [sp, #44]	; 0x2c
   1ba14:	mov	r0, r8
   1ba18:	add	r1, sp, #48	; 0x30
   1ba1c:	ldr	r9, [fp, #8]
   1ba20:	mov	r2, r9
   1ba24:	bl	26ac <InflateSkipData>
   1ba28:	ldr	r0, [fp, #28]
   1ba2c:	ldr	r5, [r0]
   1ba30:	ldr	sl, [sl]
   1ba34:	mov	r0, #1
   1ba38:	str	r0, [sp]
   1ba3c:	mov	r0, r8
   1ba40:	add	r1, sp, #48	; 0x30
   1ba44:	mov	r2, r6
   1ba48:	mov	r3, r9
   1ba4c:	bl	114b0 <ReadCompressedUInt16Data>
   1ba50:	add	r7, sl, r7
   1ba54:	add	r6, r6, #2
   1ba58:	add	r4, r4, #1
   1ba5c:	sub	r0, r5, #1
   1ba60:	cmp	r4, r0
   1ba64:	blt	1ba00 <ReadCompressedDataSlabN+0x3190>
   1ba68:	b	1ba70 <ReadCompressedDataSlabN+0x3200>
   1ba6c:	ldr	r7, [sp, #28]
   1ba70:	ldr	r0, [fp, #16]
   1ba74:	ldr	r0, [r0]
   1ba78:	ldr	r1, [fp, #24]
   1ba7c:	ldr	r1, [r1]
   1ba80:	ldr	r2, [fp, #28]
   1ba84:	ldr	r2, [r2]
   1ba88:	sub	r2, r2, #1
   1ba8c:	mls	r0, r2, r1, r0
   1ba90:	ldr	r1, [fp, #20]
   1ba94:	ldr	r1, [r1]
   1ba98:	sub	r4, r0, r1
   1ba9c:	sub	r3, r4, #1
   1baa0:	ldr	r0, [sp, #44]	; 0x2c
   1baa4:	add	r1, sp, #48	; 0x30
   1baa8:	ldr	sl, [fp, #8]
   1baac:	mov	r2, sl
   1bab0:	bl	26ac <InflateSkipData>
   1bab4:	add	r7, r4, r7
   1bab8:	ldr	r0, [fp, #12]
   1babc:	cmp	r0, #2
   1bac0:	mov	r3, r7
   1bac4:	blt	1bbcc <ReadCompressedDataSlabN+0x335c>
   1bac8:	mov	r0, #0
   1bacc:	add	r9, sp, #104	; 0x68
   1bad0:	ldr	r8, [sp, #20]
   1bad4:	ldr	r5, [sp, #32]
   1bad8:	ldr	r7, [sp, #24]
   1badc:	mov	r6, r0
   1bae0:	ldr	r0, [r7, r0, lsl #2]
   1bae4:	add	r0, r0, #1
   1bae8:	str	r0, [r7, r6, lsl #2]
   1baec:	ldr	r1, [sp, #40]	; 0x28
   1baf0:	ldr	r1, [r1, r6, lsl #2]
   1baf4:	sdiv	r2, r0, r1
   1baf8:	mls	r0, r2, r1, r0
   1bafc:	cmp	r0, #0
   1bb00:	bne	1bbd4 <ReadCompressedDataSlabN+0x3364>
   1bb04:	mov	r0, #0
   1bb08:	str	r0, [r7, r6, lsl #2]
   1bb0c:	add	r4, r9, r6, lsl #2
   1bb10:	ldr	r0, [r4, #4]
   1bb14:	sdiv	r1, r3, r0
   1bb18:	mls	r1, r1, r0, r3
   1bb1c:	cmp	r1, #0
   1bb20:	beq	1bb78 <ReadCompressedDataSlabN+0x3308>
   1bb24:	ldr	r2, [r9, r6, lsl #2]
   1bb28:	mov	r7, r3
   1bb2c:	ldr	r3, [r5, r6, lsl #2]
   1bb30:	sub	r0, r0, r1
   1bb34:	mla	r3, r3, r2, r0
   1bb38:	ldr	r0, [sp, #44]	; 0x2c
   1bb3c:	add	r1, sp, #48	; 0x30
   1bb40:	mov	r2, sl
   1bb44:	bl	26ac <InflateSkipData>
   1bb48:	ldr	r5, [sp, #32]
   1bb4c:	ldr	r0, [r4, #4]
   1bb50:	add	r1, r0, r7
   1bb54:	sdiv	r2, r7, r0
   1bb58:	mul	r0, r2, r0
   1bb5c:	sub	r0, r0, r7
   1bb60:	ldr	r7, [sp, #24]
   1bb64:	add	r0, r1, r0
   1bb68:	ldr	r1, [r9, r6, lsl #2]
   1bb6c:	ldr	r2, [r5, r6, lsl #2]
   1bb70:	mla	r3, r2, r1, r0
   1bb74:	b	1bbb4 <ReadCompressedDataSlabN+0x3344>
   1bb78:	ldr	r0, [r5, r6, lsl #2]
   1bb7c:	cmp	r0, #0
   1bb80:	beq	1bbb4 <ReadCompressedDataSlabN+0x3344>
   1bb84:	ldr	r1, [r9, r6, lsl #2]
   1bb88:	mov	r4, r3
   1bb8c:	mul	r3, r1, r0
   1bb90:	ldr	r0, [sp, #44]	; 0x2c
   1bb94:	add	r1, sp, #48	; 0x30
   1bb98:	mov	r2, sl
   1bb9c:	bl	26ac <InflateSkipData>
   1bba0:	ldr	r5, [sp, #32]
   1bba4:	mov	r3, r4
   1bba8:	ldr	r0, [r9, r6, lsl #2]
   1bbac:	ldr	r1, [r5, r6, lsl #2]
   1bbb0:	mla	r3, r1, r0, r4
   1bbb4:	add	r0, r6, #1
   1bbb8:	add	r1, r6, #2
   1bbbc:	ldr	r2, [fp, #12]
   1bbc0:	cmp	r1, r2
   1bbc4:	blt	1badc <ReadCompressedDataSlabN+0x326c>
   1bbc8:	b	1bc04 <ReadCompressedDataSlabN+0x3394>
   1bbcc:	ldr	r8, [sp, #20]
   1bbd0:	b	1bc04 <ReadCompressedDataSlabN+0x3394>
   1bbd4:	ldr	r0, [sp, #8]
   1bbd8:	ldr	r6, [r0, r6, lsl #2]
   1bbdc:	cmp	r6, #0
   1bbe0:	beq	1bc04 <ReadCompressedDataSlabN+0x3394>
   1bbe4:	ldr	r0, [sp, #44]	; 0x2c
   1bbe8:	add	r1, sp, #48	; 0x30
   1bbec:	mov	r2, sl
   1bbf0:	mov	r4, r3
   1bbf4:	mov	r3, r6
   1bbf8:	bl	26ac <InflateSkipData>
   1bbfc:	mov	r3, r4
   1bc00:	add	r3, r6, r4
   1bc04:	str	r3, [sp, #28]
   1bc08:	ldr	r0, [fp, #28]
   1bc0c:	ldr	r0, [r0]
   1bc10:	ldr	sl, [sp, #16]
   1bc14:	add	sl, r0, sl
   1bc18:	cmp	sl, r8
   1bc1c:	mov	r9, #1
   1bc20:	add	r6, sp, #48	; 0x30
   1bc24:	blt	1b978 <ReadCompressedDataSlabN+0x3108>
   1bc28:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1bc2c:	ldr	r0, [sp, #20]
   1bc30:	cmp	r0, #1
   1bc34:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1bc38:	ldr	r0, [fp, #20]
   1bc3c:	add	r5, r0, #4
   1bc40:	ldr	r0, [fp, #28]
   1bc44:	add	r0, r0, #4
   1bc48:	str	r0, [sp, #40]	; 0x28
   1bc4c:	sub	r0, fp, #112	; 0x70
   1bc50:	orr	r7, r0, #4
   1bc54:	sub	r0, fp, #72	; 0x48
   1bc58:	orr	r0, r0, #4
   1bc5c:	str	r0, [sp, #8]
   1bc60:	ldr	r0, [sp, #36]	; 0x24
   1bc64:	add	r0, r0, #4
   1bc68:	str	r0, [sp, #12]
   1bc6c:	mov	r9, #1
   1bc70:	add	r6, sp, #48	; 0x30
   1bc74:	mov	sl, #0
   1bc78:	str	r5, [sp, #32]
   1bc7c:	str	r7, [sp, #24]
   1bc80:	ldr	r4, [fp, #20]
   1bc84:	ldr	r3, [r4]
   1bc88:	cmp	r3, #0
   1bc8c:	beq	1bcc0 <ReadCompressedDataSlabN+0x3450>
   1bc90:	mov	r8, r4
   1bc94:	ldr	r4, [sp, #44]	; 0x2c
   1bc98:	mov	r0, r4
   1bc9c:	mov	r1, r6
   1bca0:	ldr	r5, [fp, #8]
   1bca4:	mov	r2, r5
   1bca8:	bl	26ac <InflateSkipData>
   1bcac:	ldr	r0, [r8]
   1bcb0:	ldr	r1, [sp, #28]
   1bcb4:	add	r1, r0, r1
   1bcb8:	str	r1, [sp, #28]
   1bcbc:	b	1bcc8 <ReadCompressedDataSlabN+0x3458>
   1bcc0:	ldr	r4, [sp, #44]	; 0x2c
   1bcc4:	ldr	r5, [fp, #8]
   1bcc8:	ldr	r0, [fp, #28]
   1bccc:	ldr	r7, [r0]
   1bcd0:	str	r9, [sp]
   1bcd4:	ldr	r0, [sp, #36]	; 0x24
   1bcd8:	add	r2, r0, sl, lsl #2
   1bcdc:	mov	r0, r4
   1bce0:	mov	r1, r6
   1bce4:	mov	r3, r5
   1bce8:	bl	c6d4 <ReadCompressedInt32Data>
   1bcec:	cmp	r7, #2
   1bcf0:	str	sl, [sp, #16]
   1bcf4:	blt	1bd74 <ReadCompressedDataSlabN+0x3504>
   1bcf8:	ldr	r0, [sp, #12]
   1bcfc:	add	r6, r0, sl, lsl #2
   1bd00:	mov	r4, #0
   1bd04:	ldr	r7, [sp, #28]
   1bd08:	ldr	r0, [fp, #24]
   1bd0c:	mov	sl, r0
   1bd10:	ldr	r0, [r0]
   1bd14:	sub	r3, r0, #1
   1bd18:	ldr	r8, [sp, #44]	; 0x2c
   1bd1c:	mov	r0, r8
   1bd20:	add	r1, sp, #48	; 0x30
   1bd24:	ldr	r9, [fp, #8]
   1bd28:	mov	r2, r9
   1bd2c:	bl	26ac <InflateSkipData>
   1bd30:	ldr	r0, [fp, #28]
   1bd34:	ldr	r5, [r0]
   1bd38:	ldr	sl, [sl]
   1bd3c:	mov	r0, #1
   1bd40:	str	r0, [sp]
   1bd44:	mov	r0, r8
   1bd48:	add	r1, sp, #48	; 0x30
   1bd4c:	mov	r2, r6
   1bd50:	mov	r3, r9
   1bd54:	bl	c6d4 <ReadCompressedInt32Data>
   1bd58:	add	r7, sl, r7
   1bd5c:	add	r6, r6, #4
   1bd60:	add	r4, r4, #1
   1bd64:	sub	r0, r5, #1
   1bd68:	cmp	r4, r0
   1bd6c:	blt	1bd08 <ReadCompressedDataSlabN+0x3498>
   1bd70:	b	1bd78 <ReadCompressedDataSlabN+0x3508>
   1bd74:	ldr	r7, [sp, #28]
   1bd78:	ldr	r0, [fp, #16]
   1bd7c:	ldr	r0, [r0]
   1bd80:	ldr	r1, [fp, #24]
   1bd84:	ldr	r1, [r1]
   1bd88:	ldr	r2, [fp, #28]
   1bd8c:	ldr	r2, [r2]
   1bd90:	sub	r2, r2, #1
   1bd94:	mls	r0, r2, r1, r0
   1bd98:	ldr	r1, [fp, #20]
   1bd9c:	ldr	r1, [r1]
   1bda0:	sub	r4, r0, r1
   1bda4:	sub	r3, r4, #1
   1bda8:	ldr	r0, [sp, #44]	; 0x2c
   1bdac:	add	r1, sp, #48	; 0x30
   1bdb0:	ldr	sl, [fp, #8]
   1bdb4:	mov	r2, sl
   1bdb8:	bl	26ac <InflateSkipData>
   1bdbc:	add	r7, r4, r7
   1bdc0:	ldr	r0, [fp, #12]
   1bdc4:	cmp	r0, #2
   1bdc8:	mov	r3, r7
   1bdcc:	blt	1bed4 <ReadCompressedDataSlabN+0x3664>
   1bdd0:	mov	r0, #0
   1bdd4:	add	r9, sp, #104	; 0x68
   1bdd8:	ldr	r8, [sp, #20]
   1bddc:	ldr	r5, [sp, #32]
   1bde0:	ldr	r7, [sp, #24]
   1bde4:	mov	r6, r0
   1bde8:	ldr	r0, [r7, r0, lsl #2]
   1bdec:	add	r0, r0, #1
   1bdf0:	str	r0, [r7, r6, lsl #2]
   1bdf4:	ldr	r1, [sp, #40]	; 0x28
   1bdf8:	ldr	r1, [r1, r6, lsl #2]
   1bdfc:	sdiv	r2, r0, r1
   1be00:	mls	r0, r2, r1, r0
   1be04:	cmp	r0, #0
   1be08:	bne	1bedc <ReadCompressedDataSlabN+0x366c>
   1be0c:	mov	r0, #0
   1be10:	str	r0, [r7, r6, lsl #2]
   1be14:	add	r4, r9, r6, lsl #2
   1be18:	ldr	r0, [r4, #4]
   1be1c:	sdiv	r1, r3, r0
   1be20:	mls	r1, r1, r0, r3
   1be24:	cmp	r1, #0
   1be28:	beq	1be80 <ReadCompressedDataSlabN+0x3610>
   1be2c:	ldr	r2, [r9, r6, lsl #2]
   1be30:	mov	r7, r3
   1be34:	ldr	r3, [r5, r6, lsl #2]
   1be38:	sub	r0, r0, r1
   1be3c:	mla	r3, r3, r2, r0
   1be40:	ldr	r0, [sp, #44]	; 0x2c
   1be44:	add	r1, sp, #48	; 0x30
   1be48:	mov	r2, sl
   1be4c:	bl	26ac <InflateSkipData>
   1be50:	ldr	r5, [sp, #32]
   1be54:	ldr	r0, [r4, #4]
   1be58:	add	r1, r0, r7
   1be5c:	sdiv	r2, r7, r0
   1be60:	mul	r0, r2, r0
   1be64:	sub	r0, r0, r7
   1be68:	ldr	r7, [sp, #24]
   1be6c:	add	r0, r1, r0
   1be70:	ldr	r1, [r9, r6, lsl #2]
   1be74:	ldr	r2, [r5, r6, lsl #2]
   1be78:	mla	r3, r2, r1, r0
   1be7c:	b	1bebc <ReadCompressedDataSlabN+0x364c>
   1be80:	ldr	r0, [r5, r6, lsl #2]
   1be84:	cmp	r0, #0
   1be88:	beq	1bebc <ReadCompressedDataSlabN+0x364c>
   1be8c:	ldr	r1, [r9, r6, lsl #2]
   1be90:	mov	r4, r3
   1be94:	mul	r3, r1, r0
   1be98:	ldr	r0, [sp, #44]	; 0x2c
   1be9c:	add	r1, sp, #48	; 0x30
   1bea0:	mov	r2, sl
   1bea4:	bl	26ac <InflateSkipData>
   1bea8:	ldr	r5, [sp, #32]
   1beac:	mov	r3, r4
   1beb0:	ldr	r0, [r9, r6, lsl #2]
   1beb4:	ldr	r1, [r5, r6, lsl #2]
   1beb8:	mla	r3, r1, r0, r4
   1bebc:	add	r0, r6, #1
   1bec0:	add	r1, r6, #2
   1bec4:	ldr	r2, [fp, #12]
   1bec8:	cmp	r1, r2
   1becc:	blt	1bde4 <ReadCompressedDataSlabN+0x3574>
   1bed0:	b	1bf0c <ReadCompressedDataSlabN+0x369c>
   1bed4:	ldr	r8, [sp, #20]
   1bed8:	b	1bf0c <ReadCompressedDataSlabN+0x369c>
   1bedc:	ldr	r0, [sp, #8]
   1bee0:	ldr	r6, [r0, r6, lsl #2]
   1bee4:	cmp	r6, #0
   1bee8:	beq	1bf0c <ReadCompressedDataSlabN+0x369c>
   1beec:	ldr	r0, [sp, #44]	; 0x2c
   1bef0:	add	r1, sp, #48	; 0x30
   1bef4:	mov	r2, sl
   1bef8:	mov	r4, r3
   1befc:	mov	r3, r6
   1bf00:	bl	26ac <InflateSkipData>
   1bf04:	mov	r3, r4
   1bf08:	add	r3, r6, r4
   1bf0c:	str	r3, [sp, #28]
   1bf10:	ldr	r0, [fp, #28]
   1bf14:	ldr	r0, [r0]
   1bf18:	ldr	sl, [sp, #16]
   1bf1c:	add	sl, r0, sl
   1bf20:	cmp	sl, r8
   1bf24:	mov	r9, #1
   1bf28:	add	r6, sp, #48	; 0x30
   1bf2c:	blt	1bc80 <ReadCompressedDataSlabN+0x3410>
   1bf30:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1bf34:	ldr	r0, [sp, #20]
   1bf38:	cmp	r0, #1
   1bf3c:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1bf40:	ldr	r0, [fp, #20]
   1bf44:	add	r5, r0, #4
   1bf48:	ldr	r0, [fp, #28]
   1bf4c:	add	r0, r0, #4
   1bf50:	str	r0, [sp, #40]	; 0x28
   1bf54:	sub	r0, fp, #112	; 0x70
   1bf58:	orr	r7, r0, #4
   1bf5c:	sub	r0, fp, #72	; 0x48
   1bf60:	orr	r0, r0, #4
   1bf64:	str	r0, [sp, #8]
   1bf68:	ldr	r0, [sp, #36]	; 0x24
   1bf6c:	add	r0, r0, #4
   1bf70:	str	r0, [sp, #12]
   1bf74:	mov	r9, #1
   1bf78:	add	r6, sp, #48	; 0x30
   1bf7c:	mov	sl, #0
   1bf80:	str	r5, [sp, #32]
   1bf84:	str	r7, [sp, #24]
   1bf88:	ldr	r4, [fp, #20]
   1bf8c:	ldr	r3, [r4]
   1bf90:	cmp	r3, #0
   1bf94:	beq	1bfc8 <ReadCompressedDataSlabN+0x3758>
   1bf98:	mov	r8, r4
   1bf9c:	ldr	r4, [sp, #44]	; 0x2c
   1bfa0:	mov	r0, r4
   1bfa4:	mov	r1, r6
   1bfa8:	ldr	r5, [fp, #8]
   1bfac:	mov	r2, r5
   1bfb0:	bl	26ac <InflateSkipData>
   1bfb4:	ldr	r0, [r8]
   1bfb8:	ldr	r1, [sp, #28]
   1bfbc:	add	r1, r0, r1
   1bfc0:	str	r1, [sp, #28]
   1bfc4:	b	1bfd0 <ReadCompressedDataSlabN+0x3760>
   1bfc8:	ldr	r4, [sp, #44]	; 0x2c
   1bfcc:	ldr	r5, [fp, #8]
   1bfd0:	ldr	r0, [fp, #28]
   1bfd4:	ldr	r7, [r0]
   1bfd8:	str	r9, [sp]
   1bfdc:	ldr	r0, [sp, #36]	; 0x24
   1bfe0:	add	r2, r0, sl, lsl #2
   1bfe4:	mov	r0, r4
   1bfe8:	mov	r1, r6
   1bfec:	mov	r3, r5
   1bff0:	bl	e0a8 <ReadCompressedUInt32Data>
   1bff4:	cmp	r7, #2
   1bff8:	str	sl, [sp, #16]
   1bffc:	blt	1c07c <ReadCompressedDataSlabN+0x380c>
   1c000:	ldr	r0, [sp, #12]
   1c004:	add	r6, r0, sl, lsl #2
   1c008:	mov	r4, #0
   1c00c:	ldr	r7, [sp, #28]
   1c010:	ldr	r0, [fp, #24]
   1c014:	mov	sl, r0
   1c018:	ldr	r0, [r0]
   1c01c:	sub	r3, r0, #1
   1c020:	ldr	r8, [sp, #44]	; 0x2c
   1c024:	mov	r0, r8
   1c028:	add	r1, sp, #48	; 0x30
   1c02c:	ldr	r9, [fp, #8]
   1c030:	mov	r2, r9
   1c034:	bl	26ac <InflateSkipData>
   1c038:	ldr	r0, [fp, #28]
   1c03c:	ldr	r5, [r0]
   1c040:	ldr	sl, [sl]
   1c044:	mov	r0, #1
   1c048:	str	r0, [sp]
   1c04c:	mov	r0, r8
   1c050:	add	r1, sp, #48	; 0x30
   1c054:	mov	r2, r6
   1c058:	mov	r3, r9
   1c05c:	bl	e0a8 <ReadCompressedUInt32Data>
   1c060:	add	r7, sl, r7
   1c064:	add	r6, r6, #4
   1c068:	add	r4, r4, #1
   1c06c:	sub	r0, r5, #1
   1c070:	cmp	r4, r0
   1c074:	blt	1c010 <ReadCompressedDataSlabN+0x37a0>
   1c078:	b	1c080 <ReadCompressedDataSlabN+0x3810>
   1c07c:	ldr	r7, [sp, #28]
   1c080:	ldr	r0, [fp, #16]
   1c084:	ldr	r0, [r0]
   1c088:	ldr	r1, [fp, #24]
   1c08c:	ldr	r1, [r1]
   1c090:	ldr	r2, [fp, #28]
   1c094:	ldr	r2, [r2]
   1c098:	sub	r2, r2, #1
   1c09c:	mls	r0, r2, r1, r0
   1c0a0:	ldr	r1, [fp, #20]
   1c0a4:	ldr	r1, [r1]
   1c0a8:	sub	r4, r0, r1
   1c0ac:	sub	r3, r4, #1
   1c0b0:	ldr	r0, [sp, #44]	; 0x2c
   1c0b4:	add	r1, sp, #48	; 0x30
   1c0b8:	ldr	sl, [fp, #8]
   1c0bc:	mov	r2, sl
   1c0c0:	bl	26ac <InflateSkipData>
   1c0c4:	add	r7, r4, r7
   1c0c8:	ldr	r0, [fp, #12]
   1c0cc:	cmp	r0, #2
   1c0d0:	mov	r3, r7
   1c0d4:	blt	1c1dc <ReadCompressedDataSlabN+0x396c>
   1c0d8:	mov	r0, #0
   1c0dc:	add	r9, sp, #104	; 0x68
   1c0e0:	ldr	r8, [sp, #20]
   1c0e4:	ldr	r5, [sp, #32]
   1c0e8:	ldr	r7, [sp, #24]
   1c0ec:	mov	r6, r0
   1c0f0:	ldr	r0, [r7, r0, lsl #2]
   1c0f4:	add	r0, r0, #1
   1c0f8:	str	r0, [r7, r6, lsl #2]
   1c0fc:	ldr	r1, [sp, #40]	; 0x28
   1c100:	ldr	r1, [r1, r6, lsl #2]
   1c104:	sdiv	r2, r0, r1
   1c108:	mls	r0, r2, r1, r0
   1c10c:	cmp	r0, #0
   1c110:	bne	1c1e4 <ReadCompressedDataSlabN+0x3974>
   1c114:	mov	r0, #0
   1c118:	str	r0, [r7, r6, lsl #2]
   1c11c:	add	r4, r9, r6, lsl #2
   1c120:	ldr	r0, [r4, #4]
   1c124:	sdiv	r1, r3, r0
   1c128:	mls	r1, r1, r0, r3
   1c12c:	cmp	r1, #0
   1c130:	beq	1c188 <ReadCompressedDataSlabN+0x3918>
   1c134:	ldr	r2, [r9, r6, lsl #2]
   1c138:	mov	r7, r3
   1c13c:	ldr	r3, [r5, r6, lsl #2]
   1c140:	sub	r0, r0, r1
   1c144:	mla	r3, r3, r2, r0
   1c148:	ldr	r0, [sp, #44]	; 0x2c
   1c14c:	add	r1, sp, #48	; 0x30
   1c150:	mov	r2, sl
   1c154:	bl	26ac <InflateSkipData>
   1c158:	ldr	r5, [sp, #32]
   1c15c:	ldr	r0, [r4, #4]
   1c160:	add	r1, r0, r7
   1c164:	sdiv	r2, r7, r0
   1c168:	mul	r0, r2, r0
   1c16c:	sub	r0, r0, r7
   1c170:	ldr	r7, [sp, #24]
   1c174:	add	r0, r1, r0
   1c178:	ldr	r1, [r9, r6, lsl #2]
   1c17c:	ldr	r2, [r5, r6, lsl #2]
   1c180:	mla	r3, r2, r1, r0
   1c184:	b	1c1c4 <ReadCompressedDataSlabN+0x3954>
   1c188:	ldr	r0, [r5, r6, lsl #2]
   1c18c:	cmp	r0, #0
   1c190:	beq	1c1c4 <ReadCompressedDataSlabN+0x3954>
   1c194:	ldr	r1, [r9, r6, lsl #2]
   1c198:	mov	r4, r3
   1c19c:	mul	r3, r1, r0
   1c1a0:	ldr	r0, [sp, #44]	; 0x2c
   1c1a4:	add	r1, sp, #48	; 0x30
   1c1a8:	mov	r2, sl
   1c1ac:	bl	26ac <InflateSkipData>
   1c1b0:	ldr	r5, [sp, #32]
   1c1b4:	mov	r3, r4
   1c1b8:	ldr	r0, [r9, r6, lsl #2]
   1c1bc:	ldr	r1, [r5, r6, lsl #2]
   1c1c0:	mla	r3, r1, r0, r4
   1c1c4:	add	r0, r6, #1
   1c1c8:	add	r1, r6, #2
   1c1cc:	ldr	r2, [fp, #12]
   1c1d0:	cmp	r1, r2
   1c1d4:	blt	1c0ec <ReadCompressedDataSlabN+0x387c>
   1c1d8:	b	1c214 <ReadCompressedDataSlabN+0x39a4>
   1c1dc:	ldr	r8, [sp, #20]
   1c1e0:	b	1c214 <ReadCompressedDataSlabN+0x39a4>
   1c1e4:	ldr	r0, [sp, #8]
   1c1e8:	ldr	r6, [r0, r6, lsl #2]
   1c1ec:	cmp	r6, #0
   1c1f0:	beq	1c214 <ReadCompressedDataSlabN+0x39a4>
   1c1f4:	ldr	r0, [sp, #44]	; 0x2c
   1c1f8:	add	r1, sp, #48	; 0x30
   1c1fc:	mov	r2, sl
   1c200:	mov	r4, r3
   1c204:	mov	r3, r6
   1c208:	bl	26ac <InflateSkipData>
   1c20c:	mov	r3, r4
   1c210:	add	r3, r6, r4
   1c214:	str	r3, [sp, #28]
   1c218:	ldr	r0, [fp, #28]
   1c21c:	ldr	r0, [r0]
   1c220:	ldr	sl, [sp, #16]
   1c224:	add	sl, r0, sl
   1c228:	cmp	sl, r8
   1c22c:	mov	r9, #1
   1c230:	add	r6, sp, #48	; 0x30
   1c234:	blt	1bf88 <ReadCompressedDataSlabN+0x3718>
   1c238:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1c23c:	ldr	r0, [sp, #24]
   1c240:	cmp	r0, #1
   1c244:	ldr	r9, [sp, #36]	; 0x24
   1c248:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1c24c:	ldr	r0, [fp, #20]
   1c250:	add	r0, r0, #4
   1c254:	str	r0, [sp, #16]
   1c258:	ldr	r0, [fp, #28]
   1c25c:	add	r0, r0, #4
   1c260:	str	r0, [sp, #32]
   1c264:	sub	r0, fp, #112	; 0x70
   1c268:	orr	r0, r0, #4
   1c26c:	str	r0, [sp, #28]
   1c270:	sub	r0, fp, #72	; 0x48
   1c274:	orr	r0, r0, #4
   1c278:	str	r0, [sp, #8]
   1c27c:	add	r0, r9, #8
   1c280:	str	r0, [sp, #12]
   1c284:	mov	r6, #1
   1c288:	mov	r1, #0
   1c28c:	str	r1, [sp, #20]
   1c290:	ldr	r4, [fp, #20]
   1c294:	ldr	r3, [r4]
   1c298:	cmp	r3, #0
   1c29c:	beq	1c2d0 <ReadCompressedDataSlabN+0x3a60>
   1c2a0:	ldr	sl, [sp, #44]	; 0x2c
   1c2a4:	mov	r0, sl
   1c2a8:	add	r4, sp, #48	; 0x30
   1c2ac:	mov	r1, r4
   1c2b0:	ldr	r5, [fp, #8]
   1c2b4:	mov	r2, r5
   1c2b8:	bl	26ac <InflateSkipData>
   1c2bc:	ldr	r0, [fp, #20]
   1c2c0:	ldr	r0, [r0]
   1c2c4:	add	r7, r0, r7
   1c2c8:	str	r7, [sp, #40]	; 0x28
   1c2cc:	b	1c2e0 <ReadCompressedDataSlabN+0x3a70>
   1c2d0:	str	r7, [sp, #40]	; 0x28
   1c2d4:	ldr	sl, [sp, #44]	; 0x2c
   1c2d8:	ldr	r5, [fp, #8]
   1c2dc:	add	r4, sp, #48	; 0x30
   1c2e0:	ldr	r7, [sp, #20]
   1c2e4:	ldr	r0, [fp, #28]
   1c2e8:	ldr	r8, [r0]
   1c2ec:	str	r6, [sp]
   1c2f0:	ldr	r0, [sp, #36]	; 0x24
   1c2f4:	add	r2, r0, r7, lsl #3
   1c2f8:	mov	r0, sl
   1c2fc:	mov	r1, r4
   1c300:	mov	r3, r5
   1c304:	bl	90d0 <ReadCompressedInt64Data>
   1c308:	cmp	r8, #2
   1c30c:	blt	1c398 <ReadCompressedDataSlabN+0x3b28>
   1c310:	ldr	r0, [sp, #12]
   1c314:	add	r6, r0, r7, lsl #3
   1c318:	mov	r4, #0
   1c31c:	ldr	r7, [sp, #40]	; 0x28
   1c320:	ldr	r0, [fp, #24]
   1c324:	mov	sl, r0
   1c328:	ldr	r0, [r0]
   1c32c:	sub	r3, r0, #1
   1c330:	ldr	r5, [sp, #44]	; 0x2c
   1c334:	mov	r0, r5
   1c338:	add	r8, sp, #48	; 0x30
   1c33c:	mov	r1, r8
   1c340:	ldr	r9, [fp, #8]
   1c344:	mov	r2, r9
   1c348:	bl	26ac <InflateSkipData>
   1c34c:	ldr	r0, [fp, #28]
   1c350:	ldr	r0, [r0]
   1c354:	str	r0, [sp, #40]	; 0x28
   1c358:	ldr	sl, [sl]
   1c35c:	mov	r0, #1
   1c360:	str	r0, [sp]
   1c364:	mov	r0, r5
   1c368:	mov	r1, r8
   1c36c:	mov	r2, r6
   1c370:	mov	r3, r9
   1c374:	bl	90d0 <ReadCompressedInt64Data>
   1c378:	add	r7, sl, r7
   1c37c:	add	r6, r6, #8
   1c380:	add	r4, r4, #1
   1c384:	ldr	r0, [sp, #40]	; 0x28
   1c388:	sub	r0, r0, #1
   1c38c:	cmp	r4, r0
   1c390:	blt	1c320 <ReadCompressedDataSlabN+0x3ab0>
   1c394:	b	1c39c <ReadCompressedDataSlabN+0x3b2c>
   1c398:	ldr	r7, [sp, #40]	; 0x28
   1c39c:	ldr	r0, [fp, #16]
   1c3a0:	ldr	r0, [r0]
   1c3a4:	ldr	r1, [fp, #24]
   1c3a8:	ldr	r1, [r1]
   1c3ac:	ldr	r2, [fp, #28]
   1c3b0:	ldr	r2, [r2]
   1c3b4:	sub	r2, r2, #1
   1c3b8:	mls	r0, r2, r1, r0
   1c3bc:	ldr	r1, [fp, #20]
   1c3c0:	ldr	r1, [r1]
   1c3c4:	sub	r4, r0, r1
   1c3c8:	sub	r3, r4, #1
   1c3cc:	ldr	r0, [sp, #44]	; 0x2c
   1c3d0:	add	r1, sp, #48	; 0x30
   1c3d4:	ldr	r8, [fp, #8]
   1c3d8:	mov	r2, r8
   1c3dc:	bl	26ac <InflateSkipData>
   1c3e0:	add	r7, r4, r7
   1c3e4:	ldr	r0, [fp, #12]
   1c3e8:	cmp	r0, #2
   1c3ec:	blt	1c50c <ReadCompressedDataSlabN+0x3c9c>
   1c3f0:	mov	r0, #0
   1c3f4:	add	r5, sp, #104	; 0x68
   1c3f8:	mov	sl, r5
   1c3fc:	ldr	r5, [sp, #16]
   1c400:	ldr	r3, [sp, #28]
   1c404:	mov	r6, r0
   1c408:	ldr	r0, [r3, r0, lsl #2]
   1c40c:	add	r0, r0, #1
   1c410:	str	r0, [r3, r6, lsl #2]
   1c414:	ldr	r1, [sp, #32]
   1c418:	ldr	r1, [r1, r6, lsl #2]
   1c41c:	sdiv	r2, r0, r1
   1c420:	mls	r0, r2, r1, r0
   1c424:	cmp	r0, #0
   1c428:	bne	1c4e4 <ReadCompressedDataSlabN+0x3c74>
   1c42c:	mov	r0, #0
   1c430:	str	r0, [r3, r6, lsl #2]
   1c434:	add	r4, sl, r6, lsl #2
   1c438:	ldr	r0, [r4, #4]
   1c43c:	sdiv	r1, r7, r0
   1c440:	mls	r1, r1, r0, r7
   1c444:	cmp	r1, #0
   1c448:	beq	1c498 <ReadCompressedDataSlabN+0x3c28>
   1c44c:	ldr	r2, [sl, r6, lsl #2]
   1c450:	ldr	r3, [r5, r6, lsl #2]
   1c454:	sub	r0, r0, r1
   1c458:	mla	r3, r3, r2, r0
   1c45c:	ldr	r0, [sp, #44]	; 0x2c
   1c460:	add	r1, sp, #48	; 0x30
   1c464:	mov	r2, r8
   1c468:	bl	26ac <InflateSkipData>
   1c46c:	ldr	r3, [sp, #28]
   1c470:	ldr	r0, [r4, #4]
   1c474:	add	r1, r0, r7
   1c478:	sdiv	r2, r7, r0
   1c47c:	mul	r0, r2, r0
   1c480:	sub	r0, r0, r7
   1c484:	add	r0, r1, r0
   1c488:	ldr	r1, [sl, r6, lsl #2]
   1c48c:	ldr	r2, [r5, r6, lsl #2]
   1c490:	mla	r7, r2, r1, r0
   1c494:	b	1c4cc <ReadCompressedDataSlabN+0x3c5c>
   1c498:	ldr	r0, [r5, r6, lsl #2]
   1c49c:	cmp	r0, #0
   1c4a0:	beq	1c4cc <ReadCompressedDataSlabN+0x3c5c>
   1c4a4:	ldr	r1, [sl, r6, lsl #2]
   1c4a8:	mul	r3, r1, r0
   1c4ac:	ldr	r0, [sp, #44]	; 0x2c
   1c4b0:	add	r1, sp, #48	; 0x30
   1c4b4:	mov	r2, r8
   1c4b8:	bl	26ac <InflateSkipData>
   1c4bc:	ldr	r3, [sp, #28]
   1c4c0:	ldr	r0, [sl, r6, lsl #2]
   1c4c4:	ldr	r1, [r5, r6, lsl #2]
   1c4c8:	mla	r7, r1, r0, r7
   1c4cc:	add	r0, r6, #1
   1c4d0:	add	r1, r6, #2
   1c4d4:	ldr	r2, [fp, #12]
   1c4d8:	cmp	r1, r2
   1c4dc:	blt	1c404 <ReadCompressedDataSlabN+0x3b94>
   1c4e0:	b	1c50c <ReadCompressedDataSlabN+0x3c9c>
   1c4e4:	ldr	r0, [sp, #8]
   1c4e8:	ldr	r6, [r0, r6, lsl #2]
   1c4ec:	cmp	r6, #0
   1c4f0:	beq	1c50c <ReadCompressedDataSlabN+0x3c9c>
   1c4f4:	ldr	r0, [sp, #44]	; 0x2c
   1c4f8:	add	r1, sp, #48	; 0x30
   1c4fc:	mov	r2, r8
   1c500:	mov	r3, r6
   1c504:	bl	26ac <InflateSkipData>
   1c508:	add	r7, r6, r7
   1c50c:	ldr	r0, [fp, #28]
   1c510:	ldr	r0, [r0]
   1c514:	ldr	r1, [sp, #20]
   1c518:	add	r1, r0, r1
   1c51c:	ldr	r0, [sp, #24]
   1c520:	cmp	r1, r0
   1c524:	mov	r6, #1
   1c528:	blt	1c28c <ReadCompressedDataSlabN+0x3a1c>
   1c52c:	b	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1c530:	ldr	r0, [sp, #20]
   1c534:	cmp	r0, #1
   1c538:	blt	1c834 <ReadCompressedDataSlabN+0x3fc4>
   1c53c:	ldr	r0, [fp, #20]
   1c540:	add	r5, r0, #4
   1c544:	ldr	r0, [fp, #28]
   1c548:	add	r0, r0, #4
   1c54c:	str	r0, [sp, #40]	; 0x28
   1c550:	sub	r0, fp, #112	; 0x70
   1c554:	orr	r7, r0, #4
   1c558:	sub	r0, fp, #72	; 0x48
   1c55c:	orr	r0, r0, #4
   1c560:	str	r0, [sp, #8]
   1c564:	ldr	r0, [sp, #36]	; 0x24
   1c568:	add	r0, r0, #8
   1c56c:	str	r0, [sp, #12]
   1c570:	mov	r9, #1
   1c574:	add	r6, sp, #48	; 0x30
   1c578:	mov	sl, #0
   1c57c:	str	r5, [sp, #32]
   1c580:	str	r7, [sp, #24]
   1c584:	ldr	r4, [fp, #20]
   1c588:	ldr	r3, [r4]
   1c58c:	cmp	r3, #0
   1c590:	beq	1c5c4 <ReadCompressedDataSlabN+0x3d54>
   1c594:	mov	r8, r4
   1c598:	ldr	r4, [sp, #44]	; 0x2c
   1c59c:	mov	r0, r4
   1c5a0:	mov	r1, r6
   1c5a4:	ldr	r5, [fp, #8]
   1c5a8:	mov	r2, r5
   1c5ac:	bl	26ac <InflateSkipData>
   1c5b0:	ldr	r0, [r8]
   1c5b4:	ldr	r1, [sp, #28]
   1c5b8:	add	r1, r0, r1
   1c5bc:	str	r1, [sp, #28]
   1c5c0:	b	1c5cc <ReadCompressedDataSlabN+0x3d5c>
   1c5c4:	ldr	r4, [sp, #44]	; 0x2c
   1c5c8:	ldr	r5, [fp, #8]
   1c5cc:	ldr	r0, [fp, #28]
   1c5d0:	ldr	r7, [r0]
   1c5d4:	str	r9, [sp]
   1c5d8:	ldr	r0, [sp, #36]	; 0x24
   1c5dc:	add	r2, r0, sl, lsl #3
   1c5e0:	mov	r0, r4
   1c5e4:	mov	r1, r6
   1c5e8:	mov	r3, r5
   1c5ec:	bl	ac7c <ReadCompressedUInt64Data>
   1c5f0:	cmp	r7, #2
   1c5f4:	str	sl, [sp, #16]
   1c5f8:	blt	1c678 <ReadCompressedDataSlabN+0x3e08>
   1c5fc:	ldr	r0, [sp, #12]
   1c600:	add	r6, r0, sl, lsl #3
   1c604:	mov	r4, #0
   1c608:	ldr	r7, [sp, #28]
   1c60c:	ldr	r0, [fp, #24]
   1c610:	mov	sl, r0
   1c614:	ldr	r0, [r0]
   1c618:	sub	r3, r0, #1
   1c61c:	ldr	r8, [sp, #44]	; 0x2c
   1c620:	mov	r0, r8
   1c624:	add	r1, sp, #48	; 0x30
   1c628:	ldr	r9, [fp, #8]
   1c62c:	mov	r2, r9
   1c630:	bl	26ac <InflateSkipData>
   1c634:	ldr	r0, [fp, #28]
   1c638:	ldr	r5, [r0]
   1c63c:	ldr	sl, [sl]
   1c640:	mov	r0, #1
   1c644:	str	r0, [sp]
   1c648:	mov	r0, r8
   1c64c:	add	r1, sp, #48	; 0x30
   1c650:	mov	r2, r6
   1c654:	mov	r3, r9
   1c658:	bl	ac7c <ReadCompressedUInt64Data>
   1c65c:	add	r7, sl, r7
   1c660:	add	r6, r6, #8
   1c664:	add	r4, r4, #1
   1c668:	sub	r0, r5, #1
   1c66c:	cmp	r4, r0
   1c670:	blt	1c60c <ReadCompressedDataSlabN+0x3d9c>
   1c674:	b	1c67c <ReadCompressedDataSlabN+0x3e0c>
   1c678:	ldr	r7, [sp, #28]
   1c67c:	ldr	r0, [fp, #16]
   1c680:	ldr	r0, [r0]
   1c684:	ldr	r1, [fp, #24]
   1c688:	ldr	r1, [r1]
   1c68c:	ldr	r2, [fp, #28]
   1c690:	ldr	r2, [r2]
   1c694:	sub	r2, r2, #1
   1c698:	mls	r0, r2, r1, r0
   1c69c:	ldr	r1, [fp, #20]
   1c6a0:	ldr	r1, [r1]
   1c6a4:	sub	r4, r0, r1
   1c6a8:	sub	r3, r4, #1
   1c6ac:	ldr	r0, [sp, #44]	; 0x2c
   1c6b0:	add	r1, sp, #48	; 0x30
   1c6b4:	ldr	sl, [fp, #8]
   1c6b8:	mov	r2, sl
   1c6bc:	bl	26ac <InflateSkipData>
   1c6c0:	add	r7, r4, r7
   1c6c4:	ldr	r0, [fp, #12]
   1c6c8:	cmp	r0, #2
   1c6cc:	mov	r3, r7
   1c6d0:	blt	1c7d8 <ReadCompressedDataSlabN+0x3f68>
   1c6d4:	mov	r0, #0
   1c6d8:	add	r9, sp, #104	; 0x68
   1c6dc:	ldr	r8, [sp, #20]
   1c6e0:	ldr	r5, [sp, #32]
   1c6e4:	ldr	r7, [sp, #24]
   1c6e8:	mov	r6, r0
   1c6ec:	ldr	r0, [r7, r0, lsl #2]
   1c6f0:	add	r0, r0, #1
   1c6f4:	str	r0, [r7, r6, lsl #2]
   1c6f8:	ldr	r1, [sp, #40]	; 0x28
   1c6fc:	ldr	r1, [r1, r6, lsl #2]
   1c700:	sdiv	r2, r0, r1
   1c704:	mls	r0, r2, r1, r0
   1c708:	cmp	r0, #0
   1c70c:	bne	1c7e0 <ReadCompressedDataSlabN+0x3f70>
   1c710:	mov	r0, #0
   1c714:	str	r0, [r7, r6, lsl #2]
   1c718:	add	r4, r9, r6, lsl #2
   1c71c:	ldr	r0, [r4, #4]
   1c720:	sdiv	r1, r3, r0
   1c724:	mls	r1, r1, r0, r3
   1c728:	cmp	r1, #0
   1c72c:	beq	1c784 <ReadCompressedDataSlabN+0x3f14>
   1c730:	ldr	r2, [r9, r6, lsl #2]
   1c734:	mov	r7, r3
   1c738:	ldr	r3, [r5, r6, lsl #2]
   1c73c:	sub	r0, r0, r1
   1c740:	mla	r3, r3, r2, r0
   1c744:	ldr	r0, [sp, #44]	; 0x2c
   1c748:	add	r1, sp, #48	; 0x30
   1c74c:	mov	r2, sl
   1c750:	bl	26ac <InflateSkipData>
   1c754:	ldr	r5, [sp, #32]
   1c758:	ldr	r0, [r4, #4]
   1c75c:	add	r1, r0, r7
   1c760:	sdiv	r2, r7, r0
   1c764:	mul	r0, r2, r0
   1c768:	sub	r0, r0, r7
   1c76c:	ldr	r7, [sp, #24]
   1c770:	add	r0, r1, r0
   1c774:	ldr	r1, [r9, r6, lsl #2]
   1c778:	ldr	r2, [r5, r6, lsl #2]
   1c77c:	mla	r3, r2, r1, r0
   1c780:	b	1c7c0 <ReadCompressedDataSlabN+0x3f50>
   1c784:	ldr	r0, [r5, r6, lsl #2]
   1c788:	cmp	r0, #0
   1c78c:	beq	1c7c0 <ReadCompressedDataSlabN+0x3f50>
   1c790:	ldr	r1, [r9, r6, lsl #2]
   1c794:	mov	r4, r3
   1c798:	mul	r3, r1, r0
   1c79c:	ldr	r0, [sp, #44]	; 0x2c
   1c7a0:	add	r1, sp, #48	; 0x30
   1c7a4:	mov	r2, sl
   1c7a8:	bl	26ac <InflateSkipData>
   1c7ac:	ldr	r5, [sp, #32]
   1c7b0:	mov	r3, r4
   1c7b4:	ldr	r0, [r9, r6, lsl #2]
   1c7b8:	ldr	r1, [r5, r6, lsl #2]
   1c7bc:	mla	r3, r1, r0, r4
   1c7c0:	add	r0, r6, #1
   1c7c4:	add	r1, r6, #2
   1c7c8:	ldr	r2, [fp, #12]
   1c7cc:	cmp	r1, r2
   1c7d0:	blt	1c6e8 <ReadCompressedDataSlabN+0x3e78>
   1c7d4:	b	1c810 <ReadCompressedDataSlabN+0x3fa0>
   1c7d8:	ldr	r8, [sp, #20]
   1c7dc:	b	1c810 <ReadCompressedDataSlabN+0x3fa0>
   1c7e0:	ldr	r0, [sp, #8]
   1c7e4:	ldr	r6, [r0, r6, lsl #2]
   1c7e8:	cmp	r6, #0
   1c7ec:	beq	1c810 <ReadCompressedDataSlabN+0x3fa0>
   1c7f0:	ldr	r0, [sp, #44]	; 0x2c
   1c7f4:	add	r1, sp, #48	; 0x30
   1c7f8:	mov	r2, sl
   1c7fc:	mov	r4, r3
   1c800:	mov	r3, r6
   1c804:	bl	26ac <InflateSkipData>
   1c808:	mov	r3, r4
   1c80c:	add	r3, r6, r4
   1c810:	str	r3, [sp, #28]
   1c814:	ldr	r0, [fp, #28]
   1c818:	ldr	r0, [r0]
   1c81c:	ldr	sl, [sp, #16]
   1c820:	add	sl, r0, sl
   1c824:	cmp	sl, r8
   1c828:	mov	r9, #1
   1c82c:	add	r6, sp, #48	; 0x30
   1c830:	blt	1c584 <ReadCompressedDataSlabN+0x3d14>
   1c834:	add	r0, sp, #48	; 0x30
   1c838:	bl	1954 <inflateEnd@plt>
   1c83c:	mov	r0, #0
   1c840:	sub	sp, fp, #28
   1c844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c848 <ReadDataSlab1>:
   1c848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c84c:	add	fp, sp, #28
   1c850:	sub	sp, sp, #4
   1c854:	mov	r8, r3
   1c858:	mov	r4, r2
   1c85c:	mov	r5, r1
   1c860:	mov	sl, r0
   1c864:	mov	r0, r3
   1c868:	bl	193c <Mat_SizeOf@plt>
   1c86c:	mov	r6, r0
   1c870:	ldr	r0, [fp, #8]
   1c874:	mul	r1, r6, r0
   1c878:	ldr	r0, [sl]
   1c87c:	mov	r2, #1
   1c880:	bl	1a68 <fseek@plt>
   1c884:	sub	r0, r4, #6
   1c888:	mov	r4, #0
   1c88c:	cmp	r0, #9
   1c890:	bhi	1cbf4 <ReadDataSlab1+0x3ac>
   1c894:	ldr	r1, [fp, #12]
   1c898:	sub	r1, r1, #1
   1c89c:	mul	r9, r6, r1
   1c8a0:	ldr	r6, [fp, #16]
   1c8a4:	add	r1, pc, #4
   1c8a8:	ldr	r0, [r1, r0, lsl #2]
   1c8ac:	add	pc, r1, r0
   1c8b0:	.word	0x00000028
   1c8b4:	.word	0x00000078
   1c8b8:	.word	0x000000c8
   1c8bc:	.word	0x00000118
   1c8c0:	.word	0x00000168
   1c8c4:	.word	0x000001b8
   1c8c8:	.word	0x00000208
   1c8cc:	.word	0x00000258
   1c8d0:	.word	0x000002a8
   1c8d4:	.word	0x000002f8
   1c8d8:	cmp	r9, #0
   1c8dc:	beq	1cc00 <ReadDataSlab1+0x3b8>
   1c8e0:	cmp	r6, #1
   1c8e4:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1c8e8:	mov	r4, #0
   1c8ec:	mov	r0, sl
   1c8f0:	mov	r1, r5
   1c8f4:	mov	r2, r8
   1c8f8:	mov	r3, #1
   1c8fc:	bl	3778 <ReadDoubleData>
   1c900:	mov	r7, r0
   1c904:	ldr	r0, [sl]
   1c908:	mov	r1, r9
   1c90c:	mov	r2, #1
   1c910:	bl	1a68 <fseek@plt>
   1c914:	add	r4, r7, r4
   1c918:	subs	r6, r6, #1
   1c91c:	add	r5, r5, #8
   1c920:	bne	1c8ec <ReadDataSlab1+0xa4>
   1c924:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1c928:	cmp	r9, #0
   1c92c:	beq	1cc1c <ReadDataSlab1+0x3d4>
   1c930:	cmp	r6, #1
   1c934:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1c938:	mov	r4, #0
   1c93c:	mov	r0, sl
   1c940:	mov	r1, r5
   1c944:	mov	r2, r8
   1c948:	mov	r3, #1
   1c94c:	bl	5ea0 <ReadSingleData>
   1c950:	mov	r7, r0
   1c954:	ldr	r0, [sl]
   1c958:	mov	r1, r9
   1c95c:	mov	r2, #1
   1c960:	bl	1a68 <fseek@plt>
   1c964:	add	r4, r7, r4
   1c968:	subs	r6, r6, #1
   1c96c:	add	r5, r5, #4
   1c970:	bne	1c93c <ReadDataSlab1+0xf4>
   1c974:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1c978:	cmp	r9, #0
   1c97c:	beq	1cc38 <ReadDataSlab1+0x3f0>
   1c980:	cmp	r6, #1
   1c984:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1c988:	mov	r4, #0
   1c98c:	mov	r0, sl
   1c990:	mov	r1, r5
   1c994:	mov	r2, r8
   1c998:	mov	r3, #1
   1c99c:	bl	11a00 <ReadInt8Data>
   1c9a0:	mov	r7, r0
   1c9a4:	ldr	r0, [sl]
   1c9a8:	mov	r1, r9
   1c9ac:	mov	r2, #1
   1c9b0:	bl	1a68 <fseek@plt>
   1c9b4:	add	r4, r7, r4
   1c9b8:	subs	r6, r6, #1
   1c9bc:	add	r5, r5, #1
   1c9c0:	bne	1c98c <ReadDataSlab1+0x144>
   1c9c4:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1c9c8:	cmp	r9, #0
   1c9cc:	beq	1cc54 <ReadDataSlab1+0x40c>
   1c9d0:	cmp	r6, #1
   1c9d4:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1c9d8:	mov	r4, #0
   1c9dc:	mov	r0, sl
   1c9e0:	mov	r1, r5
   1c9e4:	mov	r2, r8
   1c9e8:	mov	r3, #1
   1c9ec:	bl	133ec <ReadUInt8Data>
   1c9f0:	mov	r7, r0
   1c9f4:	ldr	r0, [sl]
   1c9f8:	mov	r1, r9
   1c9fc:	mov	r2, #1
   1ca00:	bl	1a68 <fseek@plt>
   1ca04:	add	r4, r7, r4
   1ca08:	subs	r6, r6, #1
   1ca0c:	add	r5, r5, #1
   1ca10:	bne	1c9dc <ReadDataSlab1+0x194>
   1ca14:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1ca18:	cmp	r9, #0
   1ca1c:	beq	1cc70 <ReadDataSlab1+0x428>
   1ca20:	cmp	r6, #1
   1ca24:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1ca28:	mov	r4, #0
   1ca2c:	mov	r0, sl
   1ca30:	mov	r1, r5
   1ca34:	mov	r2, r8
   1ca38:	mov	r3, #1
   1ca3c:	bl	e5f8 <ReadInt16Data>
   1ca40:	mov	r7, r0
   1ca44:	ldr	r0, [sl]
   1ca48:	mov	r1, r9
   1ca4c:	mov	r2, #1
   1ca50:	bl	1a68 <fseek@plt>
   1ca54:	add	r4, r7, r4
   1ca58:	subs	r6, r6, #1
   1ca5c:	add	r5, r5, #2
   1ca60:	bne	1ca2c <ReadDataSlab1+0x1e4>
   1ca64:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1ca68:	cmp	r9, #0
   1ca6c:	beq	1cc8c <ReadDataSlab1+0x444>
   1ca70:	cmp	r6, #1
   1ca74:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1ca78:	mov	r4, #0
   1ca7c:	mov	r0, sl
   1ca80:	mov	r1, r5
   1ca84:	mov	r2, r8
   1ca88:	mov	r3, #1
   1ca8c:	bl	fffc <ReadUInt16Data>
   1ca90:	mov	r7, r0
   1ca94:	ldr	r0, [sl]
   1ca98:	mov	r1, r9
   1ca9c:	mov	r2, #1
   1caa0:	bl	1a68 <fseek@plt>
   1caa4:	add	r4, r7, r4
   1caa8:	subs	r6, r6, #1
   1caac:	add	r5, r5, #2
   1cab0:	bne	1ca7c <ReadDataSlab1+0x234>
   1cab4:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1cab8:	cmp	r9, #0
   1cabc:	beq	1cca8 <ReadDataSlab1+0x460>
   1cac0:	cmp	r6, #1
   1cac4:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1cac8:	mov	r4, #0
   1cacc:	mov	r0, sl
   1cad0:	mov	r1, r5
   1cad4:	mov	r2, r8
   1cad8:	mov	r3, #1
   1cadc:	bl	b250 <ReadInt32Data>
   1cae0:	mov	r7, r0
   1cae4:	ldr	r0, [sl]
   1cae8:	mov	r1, r9
   1caec:	mov	r2, #1
   1caf0:	bl	1a68 <fseek@plt>
   1caf4:	add	r4, r7, r4
   1caf8:	subs	r6, r6, #1
   1cafc:	add	r5, r5, #4
   1cb00:	bne	1cacc <ReadDataSlab1+0x284>
   1cb04:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1cb08:	cmp	r9, #0
   1cb0c:	beq	1ccc4 <ReadDataSlab1+0x47c>
   1cb10:	cmp	r6, #1
   1cb14:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1cb18:	mov	r4, #0
   1cb1c:	mov	r0, sl
   1cb20:	mov	r1, r5
   1cb24:	mov	r2, r8
   1cb28:	mov	r3, #1
   1cb2c:	bl	cc24 <ReadUInt32Data>
   1cb30:	mov	r7, r0
   1cb34:	ldr	r0, [sl]
   1cb38:	mov	r1, r9
   1cb3c:	mov	r2, #1
   1cb40:	bl	1a68 <fseek@plt>
   1cb44:	add	r4, r7, r4
   1cb48:	subs	r6, r6, #1
   1cb4c:	add	r5, r5, #4
   1cb50:	bne	1cb1c <ReadDataSlab1+0x2d4>
   1cb54:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1cb58:	cmp	r9, #0
   1cb5c:	beq	1cce0 <ReadDataSlab1+0x498>
   1cb60:	cmp	r6, #1
   1cb64:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1cb68:	mov	r4, #0
   1cb6c:	mov	r0, sl
   1cb70:	mov	r1, r5
   1cb74:	mov	r2, r8
   1cb78:	mov	r3, #1
   1cb7c:	bl	7af8 <ReadInt64Data>
   1cb80:	mov	r7, r0
   1cb84:	ldr	r0, [sl]
   1cb88:	mov	r1, r9
   1cb8c:	mov	r2, #1
   1cb90:	bl	1a68 <fseek@plt>
   1cb94:	add	r4, r7, r4
   1cb98:	subs	r6, r6, #1
   1cb9c:	add	r5, r5, #8
   1cba0:	bne	1cb6c <ReadDataSlab1+0x324>
   1cba4:	b	1cbf4 <ReadDataSlab1+0x3ac>
   1cba8:	cmp	r9, #0
   1cbac:	beq	1ccfc <ReadDataSlab1+0x4b4>
   1cbb0:	cmp	r6, #1
   1cbb4:	blt	1cbf4 <ReadDataSlab1+0x3ac>
   1cbb8:	mov	r4, #0
   1cbbc:	mov	r0, sl
   1cbc0:	mov	r1, r5
   1cbc4:	mov	r2, r8
   1cbc8:	mov	r3, #1
   1cbcc:	bl	96a4 <ReadUInt64Data>
   1cbd0:	mov	r7, r0
   1cbd4:	ldr	r0, [sl]
   1cbd8:	mov	r1, r9
   1cbdc:	mov	r2, #1
   1cbe0:	bl	1a68 <fseek@plt>
   1cbe4:	add	r4, r7, r4
   1cbe8:	subs	r6, r6, #1
   1cbec:	add	r5, r5, #8
   1cbf0:	bne	1cbbc <ReadDataSlab1+0x374>
   1cbf4:	mov	r0, r4
   1cbf8:	sub	sp, fp, #28
   1cbfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc00:	mov	r0, sl
   1cc04:	mov	r1, r5
   1cc08:	mov	r2, r8
   1cc0c:	mov	r3, r6
   1cc10:	sub	sp, fp, #28
   1cc14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc18:	b	3778 <ReadDoubleData>
   1cc1c:	mov	r0, sl
   1cc20:	mov	r1, r5
   1cc24:	mov	r2, r8
   1cc28:	mov	r3, r6
   1cc2c:	sub	sp, fp, #28
   1cc30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc34:	b	5ea0 <ReadSingleData>
   1cc38:	mov	r0, sl
   1cc3c:	mov	r1, r5
   1cc40:	mov	r2, r8
   1cc44:	mov	r3, r6
   1cc48:	sub	sp, fp, #28
   1cc4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc50:	b	11a00 <ReadInt8Data>
   1cc54:	mov	r0, sl
   1cc58:	mov	r1, r5
   1cc5c:	mov	r2, r8
   1cc60:	mov	r3, r6
   1cc64:	sub	sp, fp, #28
   1cc68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc6c:	b	133ec <ReadUInt8Data>
   1cc70:	mov	r0, sl
   1cc74:	mov	r1, r5
   1cc78:	mov	r2, r8
   1cc7c:	mov	r3, r6
   1cc80:	sub	sp, fp, #28
   1cc84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc88:	b	e5f8 <ReadInt16Data>
   1cc8c:	mov	r0, sl
   1cc90:	mov	r1, r5
   1cc94:	mov	r2, r8
   1cc98:	mov	r3, r6
   1cc9c:	sub	sp, fp, #28
   1cca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cca4:	b	fffc <ReadUInt16Data>
   1cca8:	mov	r0, sl
   1ccac:	mov	r1, r5
   1ccb0:	mov	r2, r8
   1ccb4:	mov	r3, r6
   1ccb8:	sub	sp, fp, #28
   1ccbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccc0:	b	b250 <ReadInt32Data>
   1ccc4:	mov	r0, sl
   1ccc8:	mov	r1, r5
   1cccc:	mov	r2, r8
   1ccd0:	mov	r3, r6
   1ccd4:	sub	sp, fp, #28
   1ccd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccdc:	b	cc24 <ReadUInt32Data>
   1cce0:	mov	r0, sl
   1cce4:	mov	r1, r5
   1cce8:	mov	r2, r8
   1ccec:	mov	r3, r6
   1ccf0:	sub	sp, fp, #28
   1ccf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccf8:	b	7af8 <ReadInt64Data>
   1ccfc:	mov	r0, sl
   1cd00:	mov	r1, r5
   1cd04:	mov	r2, r8
   1cd08:	mov	r3, r6
   1cd0c:	sub	sp, fp, #28
   1cd10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd14:	b	96a4 <ReadUInt64Data>

0001cd18 <ReadDataSlab2>:
   1cd18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd1c:	add	fp, sp, #28
   1cd20:	sub	sp, sp, #20
   1cd24:	mov	r9, #0
   1cd28:	cmp	r0, #0
   1cd2c:	movne	r5, r1
   1cd30:	cmpne	r1, #0
   1cd34:	beq	1cd64 <ReadDataSlab2+0x4c>
   1cd38:	ldr	r4, [fp, #20]
   1cd3c:	cmp	r4, #0
   1cd40:	ldrne	r8, [fp, #16]
   1cd44:	cmpne	r8, #0
   1cd48:	beq	1cd64 <ReadDataSlab2+0x4c>
   1cd4c:	mov	r6, r0
   1cd50:	ldr	r0, [fp, #12]
   1cd54:	cmp	r0, #0
   1cd58:	ldrne	r0, [r6]
   1cd5c:	cmpne	r0, #0
   1cd60:	bne	1cd70 <ReadDataSlab2+0x58>
   1cd64:	mov	r0, r9
   1cd68:	sub	sp, fp, #28
   1cd6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd70:	mov	sl, r3
   1cd74:	mov	r7, r2
   1cd78:	mov	r0, r3
   1cd7c:	bl	193c <Mat_SizeOf@plt>
   1cd80:	str	r0, [sp, #16]
   1cd84:	sub	r0, r7, #6
   1cd88:	cmp	r0, #9
   1cd8c:	bhi	1cd64 <ReadDataSlab2+0x4c>
   1cd90:	ldr	r7, [fp, #8]
   1cd94:	add	r1, pc, #4
   1cd98:	ldr	r0, [r1, r0, lsl #2]
   1cd9c:	add	pc, r1, r0
   1cda0:	.word	0x00000028
   1cda4:	.word	0x00000854
   1cda8:	.word	0x00000188
   1cdac:	.word	0x000002e4
   1cdb0:	.word	0x00000440
   1cdb4:	.word	0x000009b0
   1cdb8:	.word	0x00000b0c
   1cdbc:	.word	0x0000059c
   1cdc0:	.word	0x00000c68
   1cdc4:	.word	0x000006f8
   1cdc8:	ldr	r2, [r8]
   1cdcc:	cmp	r2, #1
   1cdd0:	bne	1cdec <ReadDataSlab2+0xd4>
   1cdd4:	ldr	r0, [r4]
   1cdd8:	ldr	r1, [r7]
   1cddc:	cmp	r0, r1
   1cde0:	ldreq	r1, [r8, #4]
   1cde4:	cmpeq	r1, #1
   1cde8:	beq	1db78 <ReadDataSlab2+0xe60>
   1cdec:	str	r2, [sp, #12]
   1cdf0:	ldr	r8, [r8, #4]
   1cdf4:	ldr	r0, [r7]
   1cdf8:	str	r0, [sp, #8]
   1cdfc:	ldr	r0, [r6]
   1ce00:	bl	1858 <ftell@plt>
   1ce04:	cmn	r0, #1
   1ce08:	beq	1db64 <ReadDataSlab2+0xe4c>
   1ce0c:	ldr	r0, [fp, #12]
   1ce10:	ldr	r0, [r0, #4]
   1ce14:	ldr	r1, [sp, #16]
   1ce18:	mul	r0, r0, r1
   1ce1c:	ldr	r1, [r7]
   1ce20:	mul	r1, r0, r1
   1ce24:	ldr	r0, [r6]
   1ce28:	mov	r2, #1
   1ce2c:	bl	1a68 <fseek@plt>
   1ce30:	ldr	r0, [r4, #4]
   1ce34:	cmp	r0, #1
   1ce38:	blt	1cd64 <ReadDataSlab2+0x4c>
   1ce3c:	ldr	r0, [sp, #12]
   1ce40:	sub	r0, r0, #1
   1ce44:	ldr	r1, [sp, #16]
   1ce48:	mul	r7, r0, r1
   1ce4c:	mul	r0, r8, r1
   1ce50:	ldr	r1, [sp, #8]
   1ce54:	mul	r0, r0, r1
   1ce58:	str	r0, [sp, #8]
   1ce5c:	mov	r4, #0
   1ce60:	ldr	r0, [r6]
   1ce64:	bl	1858 <ftell@plt>
   1ce68:	cmn	r0, #1
   1ce6c:	beq	1db64 <ReadDataSlab2+0xe4c>
   1ce70:	mov	r9, r0
   1ce74:	str	r4, [sp, #12]
   1ce78:	ldr	r0, [fp, #12]
   1ce7c:	ldr	r0, [r0]
   1ce80:	ldr	r1, [sp, #16]
   1ce84:	mul	r1, r0, r1
   1ce88:	ldr	r0, [r6]
   1ce8c:	mov	r2, #1
   1ce90:	bl	1a68 <fseek@plt>
   1ce94:	ldr	r4, [fp, #20]
   1ce98:	ldr	r0, [r4]
   1ce9c:	cmp	r0, #1
   1cea0:	blt	1cee0 <ReadDataSlab2+0x1c8>
   1cea4:	mov	r8, #0
   1cea8:	mov	r0, r6
   1ceac:	mov	r1, r5
   1ceb0:	mov	r2, sl
   1ceb4:	mov	r3, #1
   1ceb8:	bl	3778 <ReadDoubleData>
   1cebc:	ldr	r0, [r6]
   1cec0:	mov	r1, r7
   1cec4:	mov	r2, #1
   1cec8:	bl	1a68 <fseek@plt>
   1cecc:	add	r8, r8, #1
   1ced0:	add	r5, r5, #8
   1ced4:	ldr	r0, [r4]
   1ced8:	cmp	r8, r0
   1cedc:	blt	1cea8 <ReadDataSlab2+0x190>
   1cee0:	ldr	r0, [r6]
   1cee4:	bl	1858 <ftell@plt>
   1cee8:	cmn	r0, #1
   1ceec:	beq	1db64 <ReadDataSlab2+0xe4c>
   1cef0:	ldr	r1, [sp, #8]
   1cef4:	add	r1, r9, r1
   1cef8:	sub	r1, r1, r0
   1cefc:	ldr	r0, [r6]
   1cf00:	mov	r2, #1
   1cf04:	bl	1a68 <fseek@plt>
   1cf08:	mov	r0, r4
   1cf0c:	ldr	r4, [sp, #12]
   1cf10:	add	r4, r4, #1
   1cf14:	ldr	r0, [r0, #4]
   1cf18:	mov	r9, #0
   1cf1c:	cmp	r4, r0
   1cf20:	blt	1ce60 <ReadDataSlab2+0x148>
   1cf24:	b	1cd64 <ReadDataSlab2+0x4c>
   1cf28:	ldr	r2, [r8]
   1cf2c:	cmp	r2, #1
   1cf30:	bne	1cf4c <ReadDataSlab2+0x234>
   1cf34:	ldr	r0, [r4]
   1cf38:	ldr	r1, [r7]
   1cf3c:	cmp	r0, r1
   1cf40:	ldreq	r1, [r8, #4]
   1cf44:	cmpeq	r1, #1
   1cf48:	beq	1db94 <ReadDataSlab2+0xe7c>
   1cf4c:	str	r2, [sp, #12]
   1cf50:	ldr	r8, [r8, #4]
   1cf54:	ldr	r0, [r7]
   1cf58:	str	r0, [sp, #8]
   1cf5c:	ldr	r0, [r6]
   1cf60:	bl	1858 <ftell@plt>
   1cf64:	cmn	r0, #1
   1cf68:	beq	1db64 <ReadDataSlab2+0xe4c>
   1cf6c:	ldr	r0, [fp, #12]
   1cf70:	ldr	r0, [r0, #4]
   1cf74:	ldr	r1, [sp, #16]
   1cf78:	mul	r0, r0, r1
   1cf7c:	ldr	r1, [r7]
   1cf80:	mul	r1, r0, r1
   1cf84:	ldr	r0, [r6]
   1cf88:	mov	r2, #1
   1cf8c:	bl	1a68 <fseek@plt>
   1cf90:	ldr	r0, [r4, #4]
   1cf94:	cmp	r0, #1
   1cf98:	blt	1cd64 <ReadDataSlab2+0x4c>
   1cf9c:	ldr	r0, [sp, #12]
   1cfa0:	sub	r0, r0, #1
   1cfa4:	ldr	r1, [sp, #16]
   1cfa8:	mul	r7, r0, r1
   1cfac:	mul	r0, r8, r1
   1cfb0:	ldr	r1, [sp, #8]
   1cfb4:	mul	r0, r0, r1
   1cfb8:	str	r0, [sp, #8]
   1cfbc:	mov	r8, #0
   1cfc0:	ldr	r0, [r6]
   1cfc4:	bl	1858 <ftell@plt>
   1cfc8:	cmn	r0, #1
   1cfcc:	beq	1db64 <ReadDataSlab2+0xe4c>
   1cfd0:	mov	r9, r0
   1cfd4:	ldr	r0, [fp, #12]
   1cfd8:	ldr	r0, [r0]
   1cfdc:	ldr	r1, [sp, #16]
   1cfe0:	mul	r1, r0, r1
   1cfe4:	ldr	r0, [r6]
   1cfe8:	mov	r2, #1
   1cfec:	bl	1a68 <fseek@plt>
   1cff0:	ldr	r4, [fp, #20]
   1cff4:	ldr	r0, [r4]
   1cff8:	cmp	r0, #1
   1cffc:	blt	1d044 <ReadDataSlab2+0x32c>
   1d000:	str	r8, [sp, #12]
   1d004:	mov	r8, #0
   1d008:	add	r1, r5, r8
   1d00c:	mov	r0, r6
   1d010:	mov	r2, sl
   1d014:	mov	r3, #1
   1d018:	bl	11a00 <ReadInt8Data>
   1d01c:	ldr	r0, [r6]
   1d020:	mov	r1, r7
   1d024:	mov	r2, #1
   1d028:	bl	1a68 <fseek@plt>
   1d02c:	add	r8, r8, #1
   1d030:	ldr	r0, [r4]
   1d034:	cmp	r8, r0
   1d038:	blt	1d008 <ReadDataSlab2+0x2f0>
   1d03c:	add	r5, r5, r8
   1d040:	ldr	r8, [sp, #12]
   1d044:	ldr	r0, [r6]
   1d048:	bl	1858 <ftell@plt>
   1d04c:	cmn	r0, #1
   1d050:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d054:	ldr	r1, [sp, #8]
   1d058:	add	r1, r9, r1
   1d05c:	sub	r1, r1, r0
   1d060:	ldr	r0, [r6]
   1d064:	mov	r2, #1
   1d068:	bl	1a68 <fseek@plt>
   1d06c:	add	r8, r8, #1
   1d070:	ldr	r0, [r4, #4]
   1d074:	mov	r9, #0
   1d078:	cmp	r8, r0
   1d07c:	blt	1cfc0 <ReadDataSlab2+0x2a8>
   1d080:	b	1cd64 <ReadDataSlab2+0x4c>
   1d084:	ldr	r2, [r8]
   1d088:	cmp	r2, #1
   1d08c:	bne	1d0a8 <ReadDataSlab2+0x390>
   1d090:	ldr	r0, [r4]
   1d094:	ldr	r1, [r7]
   1d098:	cmp	r0, r1
   1d09c:	ldreq	r1, [r8, #4]
   1d0a0:	cmpeq	r1, #1
   1d0a4:	beq	1dbb0 <ReadDataSlab2+0xe98>
   1d0a8:	str	r2, [sp, #12]
   1d0ac:	ldr	r8, [r8, #4]
   1d0b0:	ldr	r0, [r7]
   1d0b4:	str	r0, [sp, #8]
   1d0b8:	ldr	r0, [r6]
   1d0bc:	bl	1858 <ftell@plt>
   1d0c0:	cmn	r0, #1
   1d0c4:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d0c8:	ldr	r0, [fp, #12]
   1d0cc:	ldr	r0, [r0, #4]
   1d0d0:	ldr	r1, [sp, #16]
   1d0d4:	mul	r0, r0, r1
   1d0d8:	ldr	r1, [r7]
   1d0dc:	mul	r1, r0, r1
   1d0e0:	ldr	r0, [r6]
   1d0e4:	mov	r2, #1
   1d0e8:	bl	1a68 <fseek@plt>
   1d0ec:	ldr	r0, [r4, #4]
   1d0f0:	cmp	r0, #1
   1d0f4:	blt	1cd64 <ReadDataSlab2+0x4c>
   1d0f8:	ldr	r0, [sp, #12]
   1d0fc:	sub	r0, r0, #1
   1d100:	ldr	r1, [sp, #16]
   1d104:	mul	r7, r0, r1
   1d108:	mul	r0, r8, r1
   1d10c:	ldr	r1, [sp, #8]
   1d110:	mul	r0, r0, r1
   1d114:	str	r0, [sp, #8]
   1d118:	mov	r8, #0
   1d11c:	ldr	r0, [r6]
   1d120:	bl	1858 <ftell@plt>
   1d124:	cmn	r0, #1
   1d128:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d12c:	mov	r9, r0
   1d130:	ldr	r0, [fp, #12]
   1d134:	ldr	r0, [r0]
   1d138:	ldr	r1, [sp, #16]
   1d13c:	mul	r1, r0, r1
   1d140:	ldr	r0, [r6]
   1d144:	mov	r2, #1
   1d148:	bl	1a68 <fseek@plt>
   1d14c:	ldr	r4, [fp, #20]
   1d150:	ldr	r0, [r4]
   1d154:	cmp	r0, #1
   1d158:	blt	1d1a0 <ReadDataSlab2+0x488>
   1d15c:	str	r8, [sp, #12]
   1d160:	mov	r8, #0
   1d164:	add	r1, r5, r8
   1d168:	mov	r0, r6
   1d16c:	mov	r2, sl
   1d170:	mov	r3, #1
   1d174:	bl	133ec <ReadUInt8Data>
   1d178:	ldr	r0, [r6]
   1d17c:	mov	r1, r7
   1d180:	mov	r2, #1
   1d184:	bl	1a68 <fseek@plt>
   1d188:	add	r8, r8, #1
   1d18c:	ldr	r0, [r4]
   1d190:	cmp	r8, r0
   1d194:	blt	1d164 <ReadDataSlab2+0x44c>
   1d198:	add	r5, r5, r8
   1d19c:	ldr	r8, [sp, #12]
   1d1a0:	ldr	r0, [r6]
   1d1a4:	bl	1858 <ftell@plt>
   1d1a8:	cmn	r0, #1
   1d1ac:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d1b0:	ldr	r1, [sp, #8]
   1d1b4:	add	r1, r9, r1
   1d1b8:	sub	r1, r1, r0
   1d1bc:	ldr	r0, [r6]
   1d1c0:	mov	r2, #1
   1d1c4:	bl	1a68 <fseek@plt>
   1d1c8:	add	r8, r8, #1
   1d1cc:	ldr	r0, [r4, #4]
   1d1d0:	mov	r9, #0
   1d1d4:	cmp	r8, r0
   1d1d8:	blt	1d11c <ReadDataSlab2+0x404>
   1d1dc:	b	1cd64 <ReadDataSlab2+0x4c>
   1d1e0:	ldr	r2, [r8]
   1d1e4:	cmp	r2, #1
   1d1e8:	bne	1d204 <ReadDataSlab2+0x4ec>
   1d1ec:	ldr	r0, [r4]
   1d1f0:	ldr	r1, [r7]
   1d1f4:	cmp	r0, r1
   1d1f8:	ldreq	r1, [r8, #4]
   1d1fc:	cmpeq	r1, #1
   1d200:	beq	1dbcc <ReadDataSlab2+0xeb4>
   1d204:	str	r2, [sp, #12]
   1d208:	ldr	r8, [r8, #4]
   1d20c:	ldr	r0, [r7]
   1d210:	str	r0, [sp, #8]
   1d214:	ldr	r0, [r6]
   1d218:	bl	1858 <ftell@plt>
   1d21c:	cmn	r0, #1
   1d220:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d224:	ldr	r0, [fp, #12]
   1d228:	ldr	r0, [r0, #4]
   1d22c:	ldr	r1, [sp, #16]
   1d230:	mul	r0, r0, r1
   1d234:	ldr	r1, [r7]
   1d238:	mul	r1, r0, r1
   1d23c:	ldr	r0, [r6]
   1d240:	mov	r2, #1
   1d244:	bl	1a68 <fseek@plt>
   1d248:	ldr	r0, [r4, #4]
   1d24c:	cmp	r0, #1
   1d250:	blt	1cd64 <ReadDataSlab2+0x4c>
   1d254:	ldr	r0, [sp, #12]
   1d258:	sub	r0, r0, #1
   1d25c:	ldr	r1, [sp, #16]
   1d260:	mul	r7, r0, r1
   1d264:	mul	r0, r8, r1
   1d268:	ldr	r1, [sp, #8]
   1d26c:	mul	r0, r0, r1
   1d270:	str	r0, [sp, #4]
   1d274:	mov	r4, #0
   1d278:	ldr	r0, [r6]
   1d27c:	bl	1858 <ftell@plt>
   1d280:	cmn	r0, #1
   1d284:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d288:	str	r0, [sp, #8]
   1d28c:	str	r4, [sp, #12]
   1d290:	ldr	r0, [fp, #12]
   1d294:	ldr	r0, [r0]
   1d298:	ldr	r1, [sp, #16]
   1d29c:	mul	r1, r0, r1
   1d2a0:	ldr	r0, [r6]
   1d2a4:	mov	r2, #1
   1d2a8:	bl	1a68 <fseek@plt>
   1d2ac:	ldr	r9, [fp, #20]
   1d2b0:	ldr	r0, [r9]
   1d2b4:	cmp	r0, #1
   1d2b8:	blt	1d2f8 <ReadDataSlab2+0x5e0>
   1d2bc:	mov	r8, #0
   1d2c0:	mov	r0, r6
   1d2c4:	mov	r1, r5
   1d2c8:	mov	r2, sl
   1d2cc:	mov	r3, #1
   1d2d0:	bl	e5f8 <ReadInt16Data>
   1d2d4:	ldr	r0, [r6]
   1d2d8:	mov	r1, r7
   1d2dc:	mov	r2, #1
   1d2e0:	bl	1a68 <fseek@plt>
   1d2e4:	add	r8, r8, #1
   1d2e8:	add	r5, r5, #2
   1d2ec:	ldr	r0, [r9]
   1d2f0:	cmp	r8, r0
   1d2f4:	blt	1d2c0 <ReadDataSlab2+0x5a8>
   1d2f8:	ldr	r0, [r6]
   1d2fc:	bl	1858 <ftell@plt>
   1d300:	cmn	r0, #1
   1d304:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d308:	ldmib	sp, {r1, r2}
   1d30c:	add	r1, r2, r1
   1d310:	sub	r1, r1, r0
   1d314:	ldr	r0, [r6]
   1d318:	mov	r2, #1
   1d31c:	bl	1a68 <fseek@plt>
   1d320:	ldr	r4, [sp, #12]
   1d324:	add	r4, r4, #1
   1d328:	ldr	r0, [r9, #4]
   1d32c:	mov	r9, #0
   1d330:	cmp	r4, r0
   1d334:	blt	1d278 <ReadDataSlab2+0x560>
   1d338:	b	1cd64 <ReadDataSlab2+0x4c>
   1d33c:	ldr	r2, [r8]
   1d340:	cmp	r2, #1
   1d344:	bne	1d360 <ReadDataSlab2+0x648>
   1d348:	ldr	r0, [r4]
   1d34c:	ldr	r1, [r7]
   1d350:	cmp	r0, r1
   1d354:	ldreq	r1, [r8, #4]
   1d358:	cmpeq	r1, #1
   1d35c:	beq	1dbe8 <ReadDataSlab2+0xed0>
   1d360:	str	r2, [sp, #12]
   1d364:	ldr	r8, [r8, #4]
   1d368:	ldr	r0, [r7]
   1d36c:	str	r0, [sp, #8]
   1d370:	ldr	r0, [r6]
   1d374:	bl	1858 <ftell@plt>
   1d378:	cmn	r0, #1
   1d37c:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d380:	ldr	r0, [fp, #12]
   1d384:	ldr	r0, [r0, #4]
   1d388:	ldr	r1, [sp, #16]
   1d38c:	mul	r0, r0, r1
   1d390:	ldr	r1, [r7]
   1d394:	mul	r1, r0, r1
   1d398:	ldr	r0, [r6]
   1d39c:	mov	r2, #1
   1d3a0:	bl	1a68 <fseek@plt>
   1d3a4:	ldr	r0, [r4, #4]
   1d3a8:	cmp	r0, #1
   1d3ac:	blt	1cd64 <ReadDataSlab2+0x4c>
   1d3b0:	ldr	r0, [sp, #12]
   1d3b4:	sub	r0, r0, #1
   1d3b8:	ldr	r1, [sp, #16]
   1d3bc:	mul	r7, r0, r1
   1d3c0:	mul	r0, r8, r1
   1d3c4:	ldr	r1, [sp, #8]
   1d3c8:	mul	r0, r0, r1
   1d3cc:	str	r0, [sp, #4]
   1d3d0:	mov	r4, #0
   1d3d4:	ldr	r0, [r6]
   1d3d8:	bl	1858 <ftell@plt>
   1d3dc:	cmn	r0, #1
   1d3e0:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d3e4:	str	r0, [sp, #8]
   1d3e8:	str	r4, [sp, #12]
   1d3ec:	ldr	r0, [fp, #12]
   1d3f0:	ldr	r0, [r0]
   1d3f4:	ldr	r1, [sp, #16]
   1d3f8:	mul	r1, r0, r1
   1d3fc:	ldr	r0, [r6]
   1d400:	mov	r2, #1
   1d404:	bl	1a68 <fseek@plt>
   1d408:	ldr	r9, [fp, #20]
   1d40c:	ldr	r0, [r9]
   1d410:	cmp	r0, #1
   1d414:	blt	1d454 <ReadDataSlab2+0x73c>
   1d418:	mov	r8, #0
   1d41c:	mov	r0, r6
   1d420:	mov	r1, r5
   1d424:	mov	r2, sl
   1d428:	mov	r3, #1
   1d42c:	bl	cc24 <ReadUInt32Data>
   1d430:	ldr	r0, [r6]
   1d434:	mov	r1, r7
   1d438:	mov	r2, #1
   1d43c:	bl	1a68 <fseek@plt>
   1d440:	add	r8, r8, #1
   1d444:	add	r5, r5, #4
   1d448:	ldr	r0, [r9]
   1d44c:	cmp	r8, r0
   1d450:	blt	1d41c <ReadDataSlab2+0x704>
   1d454:	ldr	r0, [r6]
   1d458:	bl	1858 <ftell@plt>
   1d45c:	cmn	r0, #1
   1d460:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d464:	ldmib	sp, {r1, r2}
   1d468:	add	r1, r2, r1
   1d46c:	sub	r1, r1, r0
   1d470:	ldr	r0, [r6]
   1d474:	mov	r2, #1
   1d478:	bl	1a68 <fseek@plt>
   1d47c:	ldr	r4, [sp, #12]
   1d480:	add	r4, r4, #1
   1d484:	ldr	r0, [r9, #4]
   1d488:	mov	r9, #0
   1d48c:	cmp	r4, r0
   1d490:	blt	1d3d4 <ReadDataSlab2+0x6bc>
   1d494:	b	1cd64 <ReadDataSlab2+0x4c>
   1d498:	ldr	r2, [r8]
   1d49c:	cmp	r2, #1
   1d4a0:	bne	1d4bc <ReadDataSlab2+0x7a4>
   1d4a4:	ldr	r0, [r4]
   1d4a8:	ldr	r1, [r7]
   1d4ac:	cmp	r0, r1
   1d4b0:	ldreq	r1, [r8, #4]
   1d4b4:	cmpeq	r1, #1
   1d4b8:	beq	1dc04 <ReadDataSlab2+0xeec>
   1d4bc:	str	r2, [sp, #12]
   1d4c0:	ldr	r8, [r8, #4]
   1d4c4:	ldr	r0, [r7]
   1d4c8:	str	r0, [sp, #8]
   1d4cc:	ldr	r0, [r6]
   1d4d0:	bl	1858 <ftell@plt>
   1d4d4:	cmn	r0, #1
   1d4d8:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d4dc:	ldr	r0, [fp, #12]
   1d4e0:	ldr	r0, [r0, #4]
   1d4e4:	ldr	r1, [sp, #16]
   1d4e8:	mul	r0, r0, r1
   1d4ec:	ldr	r1, [r7]
   1d4f0:	mul	r1, r0, r1
   1d4f4:	ldr	r0, [r6]
   1d4f8:	mov	r2, #1
   1d4fc:	bl	1a68 <fseek@plt>
   1d500:	ldr	r0, [r4, #4]
   1d504:	cmp	r0, #1
   1d508:	blt	1cd64 <ReadDataSlab2+0x4c>
   1d50c:	ldr	r0, [sp, #12]
   1d510:	sub	r0, r0, #1
   1d514:	ldr	r1, [sp, #16]
   1d518:	mul	r7, r0, r1
   1d51c:	mul	r0, r8, r1
   1d520:	ldr	r1, [sp, #8]
   1d524:	mul	r0, r0, r1
   1d528:	str	r0, [sp, #4]
   1d52c:	mov	r4, #0
   1d530:	ldr	r0, [r6]
   1d534:	bl	1858 <ftell@plt>
   1d538:	cmn	r0, #1
   1d53c:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d540:	str	r0, [sp, #8]
   1d544:	str	r4, [sp, #12]
   1d548:	ldr	r0, [fp, #12]
   1d54c:	ldr	r0, [r0]
   1d550:	ldr	r1, [sp, #16]
   1d554:	mul	r1, r0, r1
   1d558:	ldr	r0, [r6]
   1d55c:	mov	r2, #1
   1d560:	bl	1a68 <fseek@plt>
   1d564:	ldr	r9, [fp, #20]
   1d568:	ldr	r0, [r9]
   1d56c:	cmp	r0, #1
   1d570:	blt	1d5b0 <ReadDataSlab2+0x898>
   1d574:	mov	r8, #0
   1d578:	mov	r0, r6
   1d57c:	mov	r1, r5
   1d580:	mov	r2, sl
   1d584:	mov	r3, #1
   1d588:	bl	96a4 <ReadUInt64Data>
   1d58c:	ldr	r0, [r6]
   1d590:	mov	r1, r7
   1d594:	mov	r2, #1
   1d598:	bl	1a68 <fseek@plt>
   1d59c:	add	r8, r8, #1
   1d5a0:	add	r5, r5, #8
   1d5a4:	ldr	r0, [r9]
   1d5a8:	cmp	r8, r0
   1d5ac:	blt	1d578 <ReadDataSlab2+0x860>
   1d5b0:	ldr	r0, [r6]
   1d5b4:	bl	1858 <ftell@plt>
   1d5b8:	cmn	r0, #1
   1d5bc:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d5c0:	ldmib	sp, {r1, r2}
   1d5c4:	add	r1, r2, r1
   1d5c8:	sub	r1, r1, r0
   1d5cc:	ldr	r0, [r6]
   1d5d0:	mov	r2, #1
   1d5d4:	bl	1a68 <fseek@plt>
   1d5d8:	ldr	r4, [sp, #12]
   1d5dc:	add	r4, r4, #1
   1d5e0:	ldr	r0, [r9, #4]
   1d5e4:	mov	r9, #0
   1d5e8:	cmp	r4, r0
   1d5ec:	blt	1d530 <ReadDataSlab2+0x818>
   1d5f0:	b	1cd64 <ReadDataSlab2+0x4c>
   1d5f4:	ldr	r2, [r8]
   1d5f8:	cmp	r2, #1
   1d5fc:	bne	1d618 <ReadDataSlab2+0x900>
   1d600:	ldr	r0, [r4]
   1d604:	ldr	r1, [r7]
   1d608:	cmp	r0, r1
   1d60c:	ldreq	r1, [r8, #4]
   1d610:	cmpeq	r1, #1
   1d614:	beq	1dc20 <ReadDataSlab2+0xf08>
   1d618:	str	r2, [sp, #12]
   1d61c:	ldr	r8, [r8, #4]
   1d620:	ldr	r0, [r7]
   1d624:	str	r0, [sp, #8]
   1d628:	ldr	r0, [r6]
   1d62c:	bl	1858 <ftell@plt>
   1d630:	cmn	r0, #1
   1d634:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d638:	ldr	r0, [fp, #12]
   1d63c:	ldr	r0, [r0, #4]
   1d640:	ldr	r1, [sp, #16]
   1d644:	mul	r0, r0, r1
   1d648:	ldr	r1, [r7]
   1d64c:	mul	r1, r0, r1
   1d650:	ldr	r0, [r6]
   1d654:	mov	r2, #1
   1d658:	bl	1a68 <fseek@plt>
   1d65c:	ldr	r0, [r4, #4]
   1d660:	cmp	r0, #1
   1d664:	blt	1cd64 <ReadDataSlab2+0x4c>
   1d668:	ldr	r0, [sp, #12]
   1d66c:	sub	r0, r0, #1
   1d670:	ldr	r1, [sp, #16]
   1d674:	mul	r7, r0, r1
   1d678:	mul	r0, r8, r1
   1d67c:	ldr	r1, [sp, #8]
   1d680:	mul	r0, r0, r1
   1d684:	str	r0, [sp, #4]
   1d688:	mov	r4, #0
   1d68c:	ldr	r0, [r6]
   1d690:	bl	1858 <ftell@plt>
   1d694:	cmn	r0, #1
   1d698:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d69c:	str	r0, [sp, #8]
   1d6a0:	str	r4, [sp, #12]
   1d6a4:	ldr	r0, [fp, #12]
   1d6a8:	ldr	r0, [r0]
   1d6ac:	ldr	r1, [sp, #16]
   1d6b0:	mul	r1, r0, r1
   1d6b4:	ldr	r0, [r6]
   1d6b8:	mov	r2, #1
   1d6bc:	bl	1a68 <fseek@plt>
   1d6c0:	ldr	r9, [fp, #20]
   1d6c4:	ldr	r0, [r9]
   1d6c8:	cmp	r0, #1
   1d6cc:	blt	1d70c <ReadDataSlab2+0x9f4>
   1d6d0:	mov	r8, #0
   1d6d4:	mov	r0, r6
   1d6d8:	mov	r1, r5
   1d6dc:	mov	r2, sl
   1d6e0:	mov	r3, #1
   1d6e4:	bl	5ea0 <ReadSingleData>
   1d6e8:	ldr	r0, [r6]
   1d6ec:	mov	r1, r7
   1d6f0:	mov	r2, #1
   1d6f4:	bl	1a68 <fseek@plt>
   1d6f8:	add	r8, r8, #1
   1d6fc:	add	r5, r5, #4
   1d700:	ldr	r0, [r9]
   1d704:	cmp	r8, r0
   1d708:	blt	1d6d4 <ReadDataSlab2+0x9bc>
   1d70c:	ldr	r0, [r6]
   1d710:	bl	1858 <ftell@plt>
   1d714:	cmn	r0, #1
   1d718:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d71c:	ldmib	sp, {r1, r2}
   1d720:	add	r1, r2, r1
   1d724:	sub	r1, r1, r0
   1d728:	ldr	r0, [r6]
   1d72c:	mov	r2, #1
   1d730:	bl	1a68 <fseek@plt>
   1d734:	ldr	r4, [sp, #12]
   1d738:	add	r4, r4, #1
   1d73c:	ldr	r0, [r9, #4]
   1d740:	mov	r9, #0
   1d744:	cmp	r4, r0
   1d748:	blt	1d68c <ReadDataSlab2+0x974>
   1d74c:	b	1cd64 <ReadDataSlab2+0x4c>
   1d750:	ldr	r2, [r8]
   1d754:	cmp	r2, #1
   1d758:	bne	1d774 <ReadDataSlab2+0xa5c>
   1d75c:	ldr	r0, [r4]
   1d760:	ldr	r1, [r7]
   1d764:	cmp	r0, r1
   1d768:	ldreq	r1, [r8, #4]
   1d76c:	cmpeq	r1, #1
   1d770:	beq	1dc3c <ReadDataSlab2+0xf24>
   1d774:	str	r2, [sp, #12]
   1d778:	ldr	r8, [r8, #4]
   1d77c:	ldr	r0, [r7]
   1d780:	str	r0, [sp, #8]
   1d784:	ldr	r0, [r6]
   1d788:	bl	1858 <ftell@plt>
   1d78c:	cmn	r0, #1
   1d790:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d794:	ldr	r0, [fp, #12]
   1d798:	ldr	r0, [r0, #4]
   1d79c:	ldr	r1, [sp, #16]
   1d7a0:	mul	r0, r0, r1
   1d7a4:	ldr	r1, [r7]
   1d7a8:	mul	r1, r0, r1
   1d7ac:	ldr	r0, [r6]
   1d7b0:	mov	r2, #1
   1d7b4:	bl	1a68 <fseek@plt>
   1d7b8:	ldr	r0, [r4, #4]
   1d7bc:	cmp	r0, #1
   1d7c0:	blt	1cd64 <ReadDataSlab2+0x4c>
   1d7c4:	ldr	r0, [sp, #12]
   1d7c8:	sub	r0, r0, #1
   1d7cc:	ldr	r1, [sp, #16]
   1d7d0:	mul	r7, r0, r1
   1d7d4:	mul	r0, r8, r1
   1d7d8:	ldr	r1, [sp, #8]
   1d7dc:	mul	r0, r0, r1
   1d7e0:	str	r0, [sp, #4]
   1d7e4:	mov	r4, #0
   1d7e8:	ldr	r0, [r6]
   1d7ec:	bl	1858 <ftell@plt>
   1d7f0:	cmn	r0, #1
   1d7f4:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d7f8:	str	r0, [sp, #8]
   1d7fc:	str	r4, [sp, #12]
   1d800:	ldr	r0, [fp, #12]
   1d804:	ldr	r0, [r0]
   1d808:	ldr	r1, [sp, #16]
   1d80c:	mul	r1, r0, r1
   1d810:	ldr	r0, [r6]
   1d814:	mov	r2, #1
   1d818:	bl	1a68 <fseek@plt>
   1d81c:	ldr	r9, [fp, #20]
   1d820:	ldr	r0, [r9]
   1d824:	cmp	r0, #1
   1d828:	blt	1d868 <ReadDataSlab2+0xb50>
   1d82c:	mov	r8, #0
   1d830:	mov	r0, r6
   1d834:	mov	r1, r5
   1d838:	mov	r2, sl
   1d83c:	mov	r3, #1
   1d840:	bl	fffc <ReadUInt16Data>
   1d844:	ldr	r0, [r6]
   1d848:	mov	r1, r7
   1d84c:	mov	r2, #1
   1d850:	bl	1a68 <fseek@plt>
   1d854:	add	r8, r8, #1
   1d858:	add	r5, r5, #2
   1d85c:	ldr	r0, [r9]
   1d860:	cmp	r8, r0
   1d864:	blt	1d830 <ReadDataSlab2+0xb18>
   1d868:	ldr	r0, [r6]
   1d86c:	bl	1858 <ftell@plt>
   1d870:	cmn	r0, #1
   1d874:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d878:	ldmib	sp, {r1, r2}
   1d87c:	add	r1, r2, r1
   1d880:	sub	r1, r1, r0
   1d884:	ldr	r0, [r6]
   1d888:	mov	r2, #1
   1d88c:	bl	1a68 <fseek@plt>
   1d890:	ldr	r4, [sp, #12]
   1d894:	add	r4, r4, #1
   1d898:	ldr	r0, [r9, #4]
   1d89c:	mov	r9, #0
   1d8a0:	cmp	r4, r0
   1d8a4:	blt	1d7e8 <ReadDataSlab2+0xad0>
   1d8a8:	b	1cd64 <ReadDataSlab2+0x4c>
   1d8ac:	ldr	r2, [r8]
   1d8b0:	cmp	r2, #1
   1d8b4:	bne	1d8d0 <ReadDataSlab2+0xbb8>
   1d8b8:	ldr	r0, [r4]
   1d8bc:	ldr	r1, [r7]
   1d8c0:	cmp	r0, r1
   1d8c4:	ldreq	r1, [r8, #4]
   1d8c8:	cmpeq	r1, #1
   1d8cc:	beq	1dc58 <ReadDataSlab2+0xf40>
   1d8d0:	str	r2, [sp, #12]
   1d8d4:	ldr	r8, [r8, #4]
   1d8d8:	ldr	r0, [r7]
   1d8dc:	str	r0, [sp, #8]
   1d8e0:	ldr	r0, [r6]
   1d8e4:	bl	1858 <ftell@plt>
   1d8e8:	cmn	r0, #1
   1d8ec:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d8f0:	ldr	r0, [fp, #12]
   1d8f4:	ldr	r0, [r0, #4]
   1d8f8:	ldr	r1, [sp, #16]
   1d8fc:	mul	r0, r0, r1
   1d900:	ldr	r1, [r7]
   1d904:	mul	r1, r0, r1
   1d908:	ldr	r0, [r6]
   1d90c:	mov	r2, #1
   1d910:	bl	1a68 <fseek@plt>
   1d914:	ldr	r0, [r4, #4]
   1d918:	cmp	r0, #1
   1d91c:	blt	1cd64 <ReadDataSlab2+0x4c>
   1d920:	ldr	r0, [sp, #12]
   1d924:	sub	r0, r0, #1
   1d928:	ldr	r1, [sp, #16]
   1d92c:	mul	r7, r0, r1
   1d930:	mul	r0, r8, r1
   1d934:	ldr	r1, [sp, #8]
   1d938:	mul	r0, r0, r1
   1d93c:	str	r0, [sp, #8]
   1d940:	mov	r8, #0
   1d944:	ldr	r0, [r6]
   1d948:	bl	1858 <ftell@plt>
   1d94c:	cmn	r0, #1
   1d950:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d954:	mov	r9, r0
   1d958:	ldr	r0, [fp, #12]
   1d95c:	ldr	r0, [r0]
   1d960:	ldr	r1, [sp, #16]
   1d964:	mul	r1, r0, r1
   1d968:	ldr	r0, [r6]
   1d96c:	mov	r2, #1
   1d970:	bl	1a68 <fseek@plt>
   1d974:	ldr	r4, [fp, #20]
   1d978:	ldr	r0, [r4]
   1d97c:	cmp	r0, #1
   1d980:	str	r8, [sp, #12]
   1d984:	blt	1d9c4 <ReadDataSlab2+0xcac>
   1d988:	mov	r8, #0
   1d98c:	mov	r0, r6
   1d990:	mov	r1, r5
   1d994:	mov	r2, sl
   1d998:	mov	r3, #1
   1d99c:	bl	b250 <ReadInt32Data>
   1d9a0:	ldr	r0, [r6]
   1d9a4:	mov	r1, r7
   1d9a8:	mov	r2, #1
   1d9ac:	bl	1a68 <fseek@plt>
   1d9b0:	add	r8, r8, #1
   1d9b4:	add	r5, r5, #4
   1d9b8:	ldr	r0, [r4]
   1d9bc:	cmp	r8, r0
   1d9c0:	blt	1d98c <ReadDataSlab2+0xc74>
   1d9c4:	ldr	r0, [r6]
   1d9c8:	bl	1858 <ftell@plt>
   1d9cc:	cmn	r0, #1
   1d9d0:	beq	1db64 <ReadDataSlab2+0xe4c>
   1d9d4:	ldr	r1, [sp, #8]
   1d9d8:	add	r1, r9, r1
   1d9dc:	sub	r1, r1, r0
   1d9e0:	ldr	r0, [r6]
   1d9e4:	mov	r2, #1
   1d9e8:	bl	1a68 <fseek@plt>
   1d9ec:	ldr	r8, [sp, #12]
   1d9f0:	add	r8, r8, #1
   1d9f4:	ldr	r0, [r4, #4]
   1d9f8:	mov	r9, #0
   1d9fc:	cmp	r8, r0
   1da00:	blt	1d944 <ReadDataSlab2+0xc2c>
   1da04:	b	1cd64 <ReadDataSlab2+0x4c>
   1da08:	ldr	r2, [r8]
   1da0c:	cmp	r2, #1
   1da10:	bne	1da2c <ReadDataSlab2+0xd14>
   1da14:	ldr	r0, [r4]
   1da18:	ldr	r1, [r7]
   1da1c:	cmp	r0, r1
   1da20:	ldreq	r1, [r8, #4]
   1da24:	cmpeq	r1, #1
   1da28:	beq	1dc74 <ReadDataSlab2+0xf5c>
   1da2c:	str	r2, [sp, #12]
   1da30:	ldr	r8, [r8, #4]
   1da34:	ldr	r0, [r7]
   1da38:	str	r0, [sp, #8]
   1da3c:	ldr	r0, [r6]
   1da40:	bl	1858 <ftell@plt>
   1da44:	cmn	r0, #1
   1da48:	beq	1db64 <ReadDataSlab2+0xe4c>
   1da4c:	ldr	r0, [fp, #12]
   1da50:	ldr	r0, [r0, #4]
   1da54:	ldr	r1, [sp, #16]
   1da58:	mul	r0, r0, r1
   1da5c:	ldr	r1, [r7]
   1da60:	mul	r1, r0, r1
   1da64:	ldr	r0, [r6]
   1da68:	mov	r2, #1
   1da6c:	bl	1a68 <fseek@plt>
   1da70:	ldr	r0, [r4, #4]
   1da74:	cmp	r0, #1
   1da78:	blt	1cd64 <ReadDataSlab2+0x4c>
   1da7c:	ldr	r0, [sp, #12]
   1da80:	sub	r0, r0, #1
   1da84:	ldr	r1, [sp, #16]
   1da88:	mul	r7, r0, r1
   1da8c:	mul	r0, r8, r1
   1da90:	ldr	r1, [sp, #8]
   1da94:	mul	r0, r0, r1
   1da98:	str	r0, [sp, #8]
   1da9c:	mov	r8, #0
   1daa0:	ldr	r0, [r6]
   1daa4:	bl	1858 <ftell@plt>
   1daa8:	cmn	r0, #1
   1daac:	beq	1db64 <ReadDataSlab2+0xe4c>
   1dab0:	mov	r9, r0
   1dab4:	ldr	r0, [fp, #12]
   1dab8:	ldr	r0, [r0]
   1dabc:	ldr	r1, [sp, #16]
   1dac0:	mul	r1, r0, r1
   1dac4:	ldr	r0, [r6]
   1dac8:	mov	r2, #1
   1dacc:	bl	1a68 <fseek@plt>
   1dad0:	ldr	r4, [fp, #20]
   1dad4:	ldr	r0, [r4]
   1dad8:	cmp	r0, #1
   1dadc:	str	r8, [sp, #12]
   1dae0:	blt	1db20 <ReadDataSlab2+0xe08>
   1dae4:	mov	r8, #0
   1dae8:	mov	r0, r6
   1daec:	mov	r1, r5
   1daf0:	mov	r2, sl
   1daf4:	mov	r3, #1
   1daf8:	bl	7af8 <ReadInt64Data>
   1dafc:	ldr	r0, [r6]
   1db00:	mov	r1, r7
   1db04:	mov	r2, #1
   1db08:	bl	1a68 <fseek@plt>
   1db0c:	add	r8, r8, #1
   1db10:	add	r5, r5, #8
   1db14:	ldr	r0, [r4]
   1db18:	cmp	r8, r0
   1db1c:	blt	1dae8 <ReadDataSlab2+0xdd0>
   1db20:	ldr	r0, [r6]
   1db24:	bl	1858 <ftell@plt>
   1db28:	cmn	r0, #1
   1db2c:	beq	1db64 <ReadDataSlab2+0xe4c>
   1db30:	ldr	r1, [sp, #8]
   1db34:	add	r1, r9, r1
   1db38:	sub	r1, r1, r0
   1db3c:	ldr	r0, [r6]
   1db40:	mov	r2, #1
   1db44:	bl	1a68 <fseek@plt>
   1db48:	ldr	r8, [sp, #12]
   1db4c:	add	r8, r8, #1
   1db50:	ldr	r0, [r4, #4]
   1db54:	mov	r9, #0
   1db58:	cmp	r8, r0
   1db5c:	blt	1daa0 <ReadDataSlab2+0xd88>
   1db60:	b	1cd64 <ReadDataSlab2+0x4c>
   1db64:	ldr	r0, [pc, #292]	; 1dc90 <ReadDataSlab2+0xf78>
   1db68:	add	r0, pc, r0
   1db6c:	bl	19cc <Mat_Critical@plt>
   1db70:	mvn	r9, #0
   1db74:	b	1cd64 <ReadDataSlab2+0x4c>
   1db78:	ldr	r1, [r4, #4]
   1db7c:	mul	r3, r1, r0
   1db80:	mov	r0, r6
   1db84:	mov	r1, r5
   1db88:	mov	r2, sl
   1db8c:	bl	3778 <ReadDoubleData>
   1db90:	b	1cd64 <ReadDataSlab2+0x4c>
   1db94:	ldr	r1, [r4, #4]
   1db98:	mul	r3, r1, r0
   1db9c:	mov	r0, r6
   1dba0:	mov	r1, r5
   1dba4:	mov	r2, sl
   1dba8:	bl	11a00 <ReadInt8Data>
   1dbac:	b	1cd64 <ReadDataSlab2+0x4c>
   1dbb0:	ldr	r1, [r4, #4]
   1dbb4:	mul	r3, r1, r0
   1dbb8:	mov	r0, r6
   1dbbc:	mov	r1, r5
   1dbc0:	mov	r2, sl
   1dbc4:	bl	133ec <ReadUInt8Data>
   1dbc8:	b	1cd64 <ReadDataSlab2+0x4c>
   1dbcc:	ldr	r1, [r4, #4]
   1dbd0:	mul	r3, r1, r0
   1dbd4:	mov	r0, r6
   1dbd8:	mov	r1, r5
   1dbdc:	mov	r2, sl
   1dbe0:	bl	e5f8 <ReadInt16Data>
   1dbe4:	b	1cd64 <ReadDataSlab2+0x4c>
   1dbe8:	ldr	r1, [r4, #4]
   1dbec:	mul	r3, r1, r0
   1dbf0:	mov	r0, r6
   1dbf4:	mov	r1, r5
   1dbf8:	mov	r2, sl
   1dbfc:	bl	cc24 <ReadUInt32Data>
   1dc00:	b	1cd64 <ReadDataSlab2+0x4c>
   1dc04:	ldr	r1, [r4, #4]
   1dc08:	mul	r3, r1, r0
   1dc0c:	mov	r0, r6
   1dc10:	mov	r1, r5
   1dc14:	mov	r2, sl
   1dc18:	bl	96a4 <ReadUInt64Data>
   1dc1c:	b	1cd64 <ReadDataSlab2+0x4c>
   1dc20:	ldr	r1, [r4, #4]
   1dc24:	mul	r3, r1, r0
   1dc28:	mov	r0, r6
   1dc2c:	mov	r1, r5
   1dc30:	mov	r2, sl
   1dc34:	bl	5ea0 <ReadSingleData>
   1dc38:	b	1cd64 <ReadDataSlab2+0x4c>
   1dc3c:	ldr	r1, [r4, #4]
   1dc40:	mul	r3, r1, r0
   1dc44:	mov	r0, r6
   1dc48:	mov	r1, r5
   1dc4c:	mov	r2, sl
   1dc50:	bl	fffc <ReadUInt16Data>
   1dc54:	b	1cd64 <ReadDataSlab2+0x4c>
   1dc58:	ldr	r1, [r4, #4]
   1dc5c:	mul	r3, r1, r0
   1dc60:	mov	r0, r6
   1dc64:	mov	r1, r5
   1dc68:	mov	r2, sl
   1dc6c:	bl	b250 <ReadInt32Data>
   1dc70:	b	1cd64 <ReadDataSlab2+0x4c>
   1dc74:	ldr	r1, [r4, #4]
   1dc78:	mul	r3, r1, r0
   1dc7c:	mov	r0, r6
   1dc80:	mov	r1, r5
   1dc84:	mov	r2, sl
   1dc88:	bl	7af8 <ReadInt64Data>
   1dc8c:	b	1cd64 <ReadDataSlab2+0x4c>
   1dc90:	.word	0x0002b730

0001dc94 <ReadCompressedDataSlab1>:
   1dc94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc98:	add	fp, sp, #28
   1dc9c:	sub	sp, sp, #68	; 0x44
   1dca0:	mov	r5, r3
   1dca4:	mov	r4, r2
   1dca8:	mov	r6, r0
   1dcac:	vmov.i32	q8, #0	; 0x00000000
   1dcb0:	mov	r0, #52	; 0x34
   1dcb4:	add	r2, sp, #8
   1dcb8:	mov	r3, r2
   1dcbc:	vst1.64	{d16-d17}, [r3], r0
   1dcc0:	mov	r7, #0
   1dcc4:	str	r7, [r3]
   1dcc8:	add	r0, r2, #32
   1dccc:	vst1.64	{d16-d17}, [r0]
   1dcd0:	add	r0, r2, #16
   1dcd4:	vst1.64	{d16-d17}, [r0]
   1dcd8:	str	r7, [sp, #56]	; 0x38
   1dcdc:	cmp	r6, #0
   1dce0:	beq	1e27c <ReadCompressedDataSlab1+0x5e8>
   1dce4:	cmp	r4, #0
   1dce8:	ldrne	r0, [r6]
   1dcec:	cmpne	r0, #0
   1dcf0:	beq	1e27c <ReadCompressedDataSlab1+0x5e8>
   1dcf4:	ldr	r9, [fp, #12]
   1dcf8:	ldr	r8, [fp, #8]
   1dcfc:	add	r7, sp, #8
   1dd00:	mov	r0, r7
   1dd04:	bl	1960 <inflateCopy@plt>
   1dd08:	mov	r0, r6
   1dd0c:	mov	r1, r7
   1dd10:	mov	r2, r8
   1dd14:	mov	r3, r9
   1dd18:	bl	26ac <InflateSkipData>
   1dd1c:	sub	r0, r5, #6
   1dd20:	mov	r7, #0
   1dd24:	cmp	r0, #9
   1dd28:	bhi	1e274 <ReadCompressedDataSlab1+0x5e0>
   1dd2c:	mov	r9, r8
   1dd30:	ldr	r8, [fp, #20]
   1dd34:	ldr	r1, [fp, #16]
   1dd38:	sub	r1, r1, #1
   1dd3c:	str	r1, [sp, #4]
   1dd40:	add	r1, pc, #4
   1dd44:	ldr	r0, [r1, r0, lsl #2]
   1dd48:	add	pc, r1, r0
   1dd4c:	.word	0x00000028
   1dd50:	.word	0x0000008c
   1dd54:	.word	0x000000f0
   1dd58:	.word	0x00000154
   1dd5c:	.word	0x000001b8
   1dd60:	.word	0x0000021c
   1dd64:	.word	0x00000280
   1dd68:	.word	0x000002e4
   1dd6c:	.word	0x00000348
   1dd70:	.word	0x000003ac
   1dd74:	ldr	r0, [sp, #4]
   1dd78:	cmp	r0, #0
   1dd7c:	beq	1e15c <ReadCompressedDataSlab1+0x4c8>
   1dd80:	cmp	r8, #1
   1dd84:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1dd88:	mov	r7, #0
   1dd8c:	add	sl, sp, #8
   1dd90:	mov	r0, #1
   1dd94:	str	r0, [sp]
   1dd98:	mov	r0, r6
   1dd9c:	mov	r1, sl
   1dda0:	mov	r2, r4
   1dda4:	mov	r3, r9
   1dda8:	bl	4bf4 <ReadCompressedDoubleData>
   1ddac:	mov	r5, r0
   1ddb0:	mov	r0, r6
   1ddb4:	mov	r1, sl
   1ddb8:	mov	r2, r9
   1ddbc:	ldr	r3, [sp, #4]
   1ddc0:	bl	26ac <InflateSkipData>
   1ddc4:	add	r7, r5, r7
   1ddc8:	subs	r8, r8, #1
   1ddcc:	add	r4, r4, #8
   1ddd0:	bne	1dd90 <ReadCompressedDataSlab1+0xfc>
   1ddd4:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1ddd8:	ldr	r0, [sp, #4]
   1dddc:	cmp	r0, #0
   1dde0:	beq	1e178 <ReadCompressedDataSlab1+0x4e4>
   1dde4:	cmp	r8, #1
   1dde8:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1ddec:	mov	r7, #0
   1ddf0:	add	sl, sp, #8
   1ddf4:	mov	r0, #1
   1ddf8:	str	r0, [sp]
   1ddfc:	mov	r0, r6
   1de00:	mov	r1, sl
   1de04:	mov	r2, r4
   1de08:	mov	r3, r9
   1de0c:	bl	7534 <ReadCompressedSingleData>
   1de10:	mov	r5, r0
   1de14:	mov	r0, r6
   1de18:	mov	r1, sl
   1de1c:	mov	r2, r9
   1de20:	ldr	r3, [sp, #4]
   1de24:	bl	26ac <InflateSkipData>
   1de28:	add	r7, r5, r7
   1de2c:	subs	r8, r8, #1
   1de30:	add	r4, r4, #4
   1de34:	bne	1ddf4 <ReadCompressedDataSlab1+0x160>
   1de38:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1de3c:	ldr	r0, [sp, #4]
   1de40:	cmp	r0, #0
   1de44:	beq	1e194 <ReadCompressedDataSlab1+0x500>
   1de48:	cmp	r8, #1
   1de4c:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1de50:	mov	r7, #0
   1de54:	mov	r0, #1
   1de58:	str	r0, [sp]
   1de5c:	mov	r0, r6
   1de60:	add	sl, sp, #8
   1de64:	mov	r1, sl
   1de68:	mov	r2, r4
   1de6c:	mov	r3, r9
   1de70:	bl	12e9c <ReadCompressedInt8Data>
   1de74:	mov	r5, r0
   1de78:	mov	r0, r6
   1de7c:	mov	r1, sl
   1de80:	mov	r2, r9
   1de84:	ldr	r3, [sp, #4]
   1de88:	bl	26ac <InflateSkipData>
   1de8c:	add	r7, r5, r7
   1de90:	subs	r8, r8, #1
   1de94:	add	r4, r4, #1
   1de98:	bne	1de54 <ReadCompressedDataSlab1+0x1c0>
   1de9c:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1dea0:	ldr	r0, [sp, #4]
   1dea4:	cmp	r0, #0
   1dea8:	beq	1e1b0 <ReadCompressedDataSlab1+0x51c>
   1deac:	cmp	r8, #1
   1deb0:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1deb4:	mov	r7, #0
   1deb8:	mov	r0, #1
   1debc:	str	r0, [sp]
   1dec0:	mov	r0, r6
   1dec4:	add	sl, sp, #8
   1dec8:	mov	r1, sl
   1decc:	mov	r2, r4
   1ded0:	mov	r3, r9
   1ded4:	bl	14888 <ReadCompressedUInt8Data>
   1ded8:	mov	r5, r0
   1dedc:	mov	r0, r6
   1dee0:	mov	r1, sl
   1dee4:	mov	r2, r9
   1dee8:	ldr	r3, [sp, #4]
   1deec:	bl	26ac <InflateSkipData>
   1def0:	add	r7, r5, r7
   1def4:	subs	r8, r8, #1
   1def8:	add	r4, r4, #1
   1defc:	bne	1deb8 <ReadCompressedDataSlab1+0x224>
   1df00:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1df04:	ldr	r0, [sp, #4]
   1df08:	cmp	r0, #0
   1df0c:	beq	1e1cc <ReadCompressedDataSlab1+0x538>
   1df10:	cmp	r8, #1
   1df14:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1df18:	mov	r7, #0
   1df1c:	add	sl, sp, #8
   1df20:	mov	r0, #1
   1df24:	str	r0, [sp]
   1df28:	mov	r0, r6
   1df2c:	mov	r1, sl
   1df30:	mov	r2, r4
   1df34:	mov	r3, r9
   1df38:	bl	faac <ReadCompressedInt16Data>
   1df3c:	mov	r5, r0
   1df40:	mov	r0, r6
   1df44:	mov	r1, sl
   1df48:	mov	r2, r9
   1df4c:	ldr	r3, [sp, #4]
   1df50:	bl	26ac <InflateSkipData>
   1df54:	add	r7, r5, r7
   1df58:	subs	r8, r8, #1
   1df5c:	add	r4, r4, #2
   1df60:	bne	1df20 <ReadCompressedDataSlab1+0x28c>
   1df64:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1df68:	ldr	r0, [sp, #4]
   1df6c:	cmp	r0, #0
   1df70:	beq	1e1e8 <ReadCompressedDataSlab1+0x554>
   1df74:	cmp	r8, #1
   1df78:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1df7c:	mov	r7, #0
   1df80:	add	sl, sp, #8
   1df84:	mov	r0, #1
   1df88:	str	r0, [sp]
   1df8c:	mov	r0, r6
   1df90:	mov	r1, sl
   1df94:	mov	r2, r4
   1df98:	mov	r3, r9
   1df9c:	bl	114b0 <ReadCompressedUInt16Data>
   1dfa0:	mov	r5, r0
   1dfa4:	mov	r0, r6
   1dfa8:	mov	r1, sl
   1dfac:	mov	r2, r9
   1dfb0:	ldr	r3, [sp, #4]
   1dfb4:	bl	26ac <InflateSkipData>
   1dfb8:	add	r7, r5, r7
   1dfbc:	subs	r8, r8, #1
   1dfc0:	add	r4, r4, #2
   1dfc4:	bne	1df84 <ReadCompressedDataSlab1+0x2f0>
   1dfc8:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1dfcc:	ldr	r0, [sp, #4]
   1dfd0:	cmp	r0, #0
   1dfd4:	beq	1e204 <ReadCompressedDataSlab1+0x570>
   1dfd8:	cmp	r8, #1
   1dfdc:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1dfe0:	mov	r7, #0
   1dfe4:	add	sl, sp, #8
   1dfe8:	mov	r0, #1
   1dfec:	str	r0, [sp]
   1dff0:	mov	r0, r6
   1dff4:	mov	r1, sl
   1dff8:	mov	r2, r4
   1dffc:	mov	r3, r9
   1e000:	bl	c6d4 <ReadCompressedInt32Data>
   1e004:	mov	r5, r0
   1e008:	mov	r0, r6
   1e00c:	mov	r1, sl
   1e010:	mov	r2, r9
   1e014:	ldr	r3, [sp, #4]
   1e018:	bl	26ac <InflateSkipData>
   1e01c:	add	r7, r5, r7
   1e020:	subs	r8, r8, #1
   1e024:	add	r4, r4, #4
   1e028:	bne	1dfe8 <ReadCompressedDataSlab1+0x354>
   1e02c:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1e030:	ldr	r0, [sp, #4]
   1e034:	cmp	r0, #0
   1e038:	beq	1e220 <ReadCompressedDataSlab1+0x58c>
   1e03c:	cmp	r8, #1
   1e040:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1e044:	mov	r7, #0
   1e048:	add	sl, sp, #8
   1e04c:	mov	r0, #1
   1e050:	str	r0, [sp]
   1e054:	mov	r0, r6
   1e058:	mov	r1, sl
   1e05c:	mov	r2, r4
   1e060:	mov	r3, r9
   1e064:	bl	e0a8 <ReadCompressedUInt32Data>
   1e068:	mov	r5, r0
   1e06c:	mov	r0, r6
   1e070:	mov	r1, sl
   1e074:	mov	r2, r9
   1e078:	ldr	r3, [sp, #4]
   1e07c:	bl	26ac <InflateSkipData>
   1e080:	add	r7, r5, r7
   1e084:	subs	r8, r8, #1
   1e088:	add	r4, r4, #4
   1e08c:	bne	1e04c <ReadCompressedDataSlab1+0x3b8>
   1e090:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1e094:	ldr	r0, [sp, #4]
   1e098:	cmp	r0, #0
   1e09c:	beq	1e23c <ReadCompressedDataSlab1+0x5a8>
   1e0a0:	cmp	r8, #1
   1e0a4:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1e0a8:	mov	r7, #0
   1e0ac:	add	sl, sp, #8
   1e0b0:	mov	r0, #1
   1e0b4:	str	r0, [sp]
   1e0b8:	mov	r0, r6
   1e0bc:	mov	r1, sl
   1e0c0:	mov	r2, r4
   1e0c4:	mov	r3, r9
   1e0c8:	bl	90d0 <ReadCompressedInt64Data>
   1e0cc:	mov	r5, r0
   1e0d0:	mov	r0, r6
   1e0d4:	mov	r1, sl
   1e0d8:	mov	r2, r9
   1e0dc:	ldr	r3, [sp, #4]
   1e0e0:	bl	26ac <InflateSkipData>
   1e0e4:	add	r7, r5, r7
   1e0e8:	subs	r8, r8, #1
   1e0ec:	add	r4, r4, #8
   1e0f0:	bne	1e0b0 <ReadCompressedDataSlab1+0x41c>
   1e0f4:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1e0f8:	ldr	r0, [sp, #4]
   1e0fc:	cmp	r0, #0
   1e100:	beq	1e258 <ReadCompressedDataSlab1+0x5c4>
   1e104:	cmp	r8, #1
   1e108:	blt	1e274 <ReadCompressedDataSlab1+0x5e0>
   1e10c:	mov	r7, #0
   1e110:	add	sl, sp, #8
   1e114:	mov	r0, #1
   1e118:	str	r0, [sp]
   1e11c:	mov	r0, r6
   1e120:	mov	r1, sl
   1e124:	mov	r2, r4
   1e128:	mov	r3, r9
   1e12c:	bl	ac7c <ReadCompressedUInt64Data>
   1e130:	mov	r5, r0
   1e134:	mov	r0, r6
   1e138:	mov	r1, sl
   1e13c:	mov	r2, r9
   1e140:	ldr	r3, [sp, #4]
   1e144:	bl	26ac <InflateSkipData>
   1e148:	add	r7, r5, r7
   1e14c:	subs	r8, r8, #1
   1e150:	add	r4, r4, #8
   1e154:	bne	1e114 <ReadCompressedDataSlab1+0x480>
   1e158:	b	1e274 <ReadCompressedDataSlab1+0x5e0>
   1e15c:	str	r8, [sp]
   1e160:	add	r1, sp, #8
   1e164:	mov	r0, r6
   1e168:	mov	r2, r4
   1e16c:	mov	r3, r9
   1e170:	bl	4bf4 <ReadCompressedDoubleData>
   1e174:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e178:	str	r8, [sp]
   1e17c:	add	r1, sp, #8
   1e180:	mov	r0, r6
   1e184:	mov	r2, r4
   1e188:	mov	r3, r9
   1e18c:	bl	7534 <ReadCompressedSingleData>
   1e190:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e194:	str	r8, [sp]
   1e198:	add	r1, sp, #8
   1e19c:	mov	r0, r6
   1e1a0:	mov	r2, r4
   1e1a4:	mov	r3, r9
   1e1a8:	bl	12e9c <ReadCompressedInt8Data>
   1e1ac:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e1b0:	str	r8, [sp]
   1e1b4:	add	r1, sp, #8
   1e1b8:	mov	r0, r6
   1e1bc:	mov	r2, r4
   1e1c0:	mov	r3, r9
   1e1c4:	bl	14888 <ReadCompressedUInt8Data>
   1e1c8:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e1cc:	str	r8, [sp]
   1e1d0:	add	r1, sp, #8
   1e1d4:	mov	r0, r6
   1e1d8:	mov	r2, r4
   1e1dc:	mov	r3, r9
   1e1e0:	bl	faac <ReadCompressedInt16Data>
   1e1e4:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e1e8:	str	r8, [sp]
   1e1ec:	add	r1, sp, #8
   1e1f0:	mov	r0, r6
   1e1f4:	mov	r2, r4
   1e1f8:	mov	r3, r9
   1e1fc:	bl	114b0 <ReadCompressedUInt16Data>
   1e200:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e204:	str	r8, [sp]
   1e208:	add	r1, sp, #8
   1e20c:	mov	r0, r6
   1e210:	mov	r2, r4
   1e214:	mov	r3, r9
   1e218:	bl	c6d4 <ReadCompressedInt32Data>
   1e21c:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e220:	str	r8, [sp]
   1e224:	add	r1, sp, #8
   1e228:	mov	r0, r6
   1e22c:	mov	r2, r4
   1e230:	mov	r3, r9
   1e234:	bl	e0a8 <ReadCompressedUInt32Data>
   1e238:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e23c:	str	r8, [sp]
   1e240:	add	r1, sp, #8
   1e244:	mov	r0, r6
   1e248:	mov	r2, r4
   1e24c:	mov	r3, r9
   1e250:	bl	90d0 <ReadCompressedInt64Data>
   1e254:	b	1e270 <ReadCompressedDataSlab1+0x5dc>
   1e258:	str	r8, [sp]
   1e25c:	add	r1, sp, #8
   1e260:	mov	r0, r6
   1e264:	mov	r2, r4
   1e268:	mov	r3, r9
   1e26c:	bl	ac7c <ReadCompressedUInt64Data>
   1e270:	mov	r7, r0
   1e274:	add	r0, sp, #8
   1e278:	bl	1954 <inflateEnd@plt>
   1e27c:	mov	r0, r7
   1e280:	sub	sp, fp, #28
   1e284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e288 <ReadCompressedDataSlab2>:
   1e288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e28c:	add	fp, sp, #28
   1e290:	sub	sp, sp, #84	; 0x54
   1e294:	mov	r6, r3
   1e298:	mov	r4, r2
   1e29c:	mov	r5, r0
   1e2a0:	vmov.i32	q8, #0	; 0x00000000
   1e2a4:	mov	r0, #52	; 0x34
   1e2a8:	add	r2, sp, #24
   1e2ac:	mov	r3, r2
   1e2b0:	vst1.64	{d16-d17}, [r3], r0
   1e2b4:	mov	r0, #0
   1e2b8:	str	r0, [r3]
   1e2bc:	add	r3, r2, #32
   1e2c0:	vst1.64	{d16-d17}, [r3]
   1e2c4:	add	r2, r2, #16
   1e2c8:	vst1.64	{d16-d17}, [r2]
   1e2cc:	str	r0, [sp, #72]	; 0x48
   1e2d0:	cmp	r5, #0
   1e2d4:	cmpne	r4, #0
   1e2d8:	beq	1fd34 <ReadCompressedDataSlab2+0x1aac>
   1e2dc:	ldr	r7, [fp, #24]
   1e2e0:	cmp	r7, #0
   1e2e4:	ldrne	r0, [fp, #20]
   1e2e8:	cmpne	r0, #0
   1e2ec:	beq	1fd34 <ReadCompressedDataSlab2+0x1aac>
   1e2f0:	ldr	r0, [fp, #16]
   1e2f4:	cmp	r0, #0
   1e2f8:	ldrne	r0, [r5]
   1e2fc:	cmpne	r0, #0
   1e300:	beq	1fd34 <ReadCompressedDataSlab2+0x1aac>
   1e304:	add	r0, sp, #24
   1e308:	bl	1960 <inflateCopy@plt>
   1e30c:	sub	r0, r6, #6
   1e310:	cmp	r0, #9
   1e314:	bhi	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e318:	str	r5, [sp, #20]
   1e31c:	mov	sl, r7
   1e320:	ldr	r2, [fp, #12]
   1e324:	ldr	r8, [fp, #8]
   1e328:	add	r1, pc, #4
   1e32c:	ldr	r0, [r1, r0, lsl #2]
   1e330:	add	pc, r1, r0
   1e334:	.word	0x00000028
   1e338:	.word	0x000000b8
   1e33c:	.word	0x00000148
   1e340:	.word	0x000001d8
   1e344:	.word	0x00000268
   1e348:	.word	0x000002f8
   1e34c:	.word	0x00000388
   1e350:	.word	0x00000418
   1e354:	.word	0x00000538
   1e358:	.word	0x000004a8
   1e35c:	ldr	r7, [r2]
   1e360:	ldr	r0, [fp, #16]
   1e364:	ldr	r0, [r0, #4]
   1e368:	mul	r3, r0, r7
   1e36c:	ldr	r9, [fp, #20]
   1e370:	ldr	r0, [r9]
   1e374:	str	r0, [sp, #12]
   1e378:	ldr	r6, [r9, #4]
   1e37c:	add	r1, sp, #24
   1e380:	ldr	r5, [sp, #20]
   1e384:	mov	r0, r5
   1e388:	mov	r2, r8
   1e38c:	bl	26ac <InflateSkipData>
   1e390:	sub	r0, r6, #1
   1e394:	mul	r3, r0, r7
   1e398:	ldr	r0, [r9]
   1e39c:	cmp	r0, #1
   1e3a0:	bne	1e8fc <ReadCompressedDataSlab2+0x674>
   1e3a4:	ldr	r0, [sl]
   1e3a8:	ldr	r2, [fp, #12]
   1e3ac:	ldr	r1, [r2]
   1e3b0:	cmp	r0, r1
   1e3b4:	bne	1f5d8 <ReadCompressedDataSlab2+0x1350>
   1e3b8:	ldr	r1, [fp, #20]
   1e3bc:	ldr	r1, [r1, #4]
   1e3c0:	cmp	r1, #1
   1e3c4:	bne	1f5d8 <ReadCompressedDataSlab2+0x1350>
   1e3c8:	ldr	r1, [sl, #4]
   1e3cc:	mul	r0, r1, r0
   1e3d0:	str	r0, [sp]
   1e3d4:	add	r1, sp, #24
   1e3d8:	mov	r0, r5
   1e3dc:	mov	r2, r4
   1e3e0:	mov	r3, r8
   1e3e4:	bl	4bf4 <ReadCompressedDoubleData>
   1e3e8:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e3ec:	ldr	r7, [r2]
   1e3f0:	ldr	r0, [fp, #16]
   1e3f4:	ldr	r0, [r0, #4]
   1e3f8:	mul	r3, r0, r7
   1e3fc:	ldr	r9, [fp, #20]
   1e400:	ldr	r0, [r9]
   1e404:	str	r0, [sp, #12]
   1e408:	ldr	r6, [r9, #4]
   1e40c:	add	r1, sp, #24
   1e410:	ldr	r5, [sp, #20]
   1e414:	mov	r0, r5
   1e418:	mov	r2, r8
   1e41c:	bl	26ac <InflateSkipData>
   1e420:	sub	r0, r6, #1
   1e424:	mul	r3, r0, r7
   1e428:	ldr	r0, [r9]
   1e42c:	cmp	r0, #1
   1e430:	bne	1ea44 <ReadCompressedDataSlab2+0x7bc>
   1e434:	ldr	r0, [sl]
   1e438:	ldr	r2, [fp, #12]
   1e43c:	ldr	r1, [r2]
   1e440:	cmp	r0, r1
   1e444:	bne	1f694 <ReadCompressedDataSlab2+0x140c>
   1e448:	ldr	r1, [fp, #20]
   1e44c:	ldr	r1, [r1, #4]
   1e450:	cmp	r1, #1
   1e454:	bne	1f694 <ReadCompressedDataSlab2+0x140c>
   1e458:	ldr	r1, [sl, #4]
   1e45c:	mul	r0, r1, r0
   1e460:	str	r0, [sp]
   1e464:	add	r1, sp, #24
   1e468:	mov	r0, r5
   1e46c:	mov	r2, r4
   1e470:	mov	r3, r8
   1e474:	bl	7534 <ReadCompressedSingleData>
   1e478:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e47c:	ldr	r7, [r2]
   1e480:	ldr	r0, [fp, #16]
   1e484:	ldr	r0, [r0, #4]
   1e488:	mul	r3, r0, r7
   1e48c:	ldr	r9, [fp, #20]
   1e490:	ldr	r0, [r9]
   1e494:	str	r0, [sp, #12]
   1e498:	ldr	r6, [r9, #4]
   1e49c:	add	r1, sp, #24
   1e4a0:	ldr	r5, [sp, #20]
   1e4a4:	mov	r0, r5
   1e4a8:	mov	r2, r8
   1e4ac:	bl	26ac <InflateSkipData>
   1e4b0:	sub	r0, r6, #1
   1e4b4:	mul	r3, r0, r7
   1e4b8:	ldr	r0, [r9]
   1e4bc:	cmp	r0, #1
   1e4c0:	bne	1eb8c <ReadCompressedDataSlab2+0x904>
   1e4c4:	ldr	r0, [sl]
   1e4c8:	ldr	r2, [fp, #12]
   1e4cc:	ldr	r1, [r2]
   1e4d0:	cmp	r0, r1
   1e4d4:	bne	1f750 <ReadCompressedDataSlab2+0x14c8>
   1e4d8:	ldr	r1, [fp, #20]
   1e4dc:	ldr	r1, [r1, #4]
   1e4e0:	cmp	r1, #1
   1e4e4:	bne	1f750 <ReadCompressedDataSlab2+0x14c8>
   1e4e8:	ldr	r1, [sl, #4]
   1e4ec:	mul	r0, r1, r0
   1e4f0:	str	r0, [sp]
   1e4f4:	add	r1, sp, #24
   1e4f8:	mov	r0, r5
   1e4fc:	mov	r2, r4
   1e500:	mov	r3, r8
   1e504:	bl	12e9c <ReadCompressedInt8Data>
   1e508:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e50c:	ldr	r7, [r2]
   1e510:	ldr	r0, [fp, #16]
   1e514:	ldr	r0, [r0, #4]
   1e518:	mul	r3, r0, r7
   1e51c:	ldr	r9, [fp, #20]
   1e520:	ldr	r0, [r9]
   1e524:	str	r0, [sp, #12]
   1e528:	ldr	r6, [r9, #4]
   1e52c:	add	r1, sp, #24
   1e530:	ldr	r5, [sp, #20]
   1e534:	mov	r0, r5
   1e538:	mov	r2, r8
   1e53c:	bl	26ac <InflateSkipData>
   1e540:	sub	r0, r6, #1
   1e544:	mul	r3, r0, r7
   1e548:	ldr	r0, [r9]
   1e54c:	cmp	r0, #1
   1e550:	bne	1ece0 <ReadCompressedDataSlab2+0xa58>
   1e554:	ldr	r0, [sl]
   1e558:	ldr	r2, [fp, #12]
   1e55c:	ldr	r1, [r2]
   1e560:	cmp	r0, r1
   1e564:	bne	1f80c <ReadCompressedDataSlab2+0x1584>
   1e568:	ldr	r1, [fp, #20]
   1e56c:	ldr	r1, [r1, #4]
   1e570:	cmp	r1, #1
   1e574:	bne	1f80c <ReadCompressedDataSlab2+0x1584>
   1e578:	ldr	r1, [sl, #4]
   1e57c:	mul	r0, r1, r0
   1e580:	str	r0, [sp]
   1e584:	add	r1, sp, #24
   1e588:	mov	r0, r5
   1e58c:	mov	r2, r4
   1e590:	mov	r3, r8
   1e594:	bl	14888 <ReadCompressedUInt8Data>
   1e598:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e59c:	ldr	r7, [r2]
   1e5a0:	ldr	r0, [fp, #16]
   1e5a4:	ldr	r0, [r0, #4]
   1e5a8:	mul	r3, r0, r7
   1e5ac:	ldr	r9, [fp, #20]
   1e5b0:	ldr	r0, [r9]
   1e5b4:	str	r0, [sp, #12]
   1e5b8:	ldr	r6, [r9, #4]
   1e5bc:	add	r1, sp, #24
   1e5c0:	ldr	r5, [sp, #20]
   1e5c4:	mov	r0, r5
   1e5c8:	mov	r2, r8
   1e5cc:	bl	26ac <InflateSkipData>
   1e5d0:	sub	r0, r6, #1
   1e5d4:	mul	r3, r0, r7
   1e5d8:	ldr	r0, [r9]
   1e5dc:	cmp	r0, #1
   1e5e0:	bne	1ee34 <ReadCompressedDataSlab2+0xbac>
   1e5e4:	ldr	r0, [sl]
   1e5e8:	ldr	r2, [fp, #12]
   1e5ec:	ldr	r1, [r2]
   1e5f0:	cmp	r0, r1
   1e5f4:	bne	1f8c8 <ReadCompressedDataSlab2+0x1640>
   1e5f8:	ldr	r1, [fp, #20]
   1e5fc:	ldr	r1, [r1, #4]
   1e600:	cmp	r1, #1
   1e604:	bne	1f8c8 <ReadCompressedDataSlab2+0x1640>
   1e608:	ldr	r1, [sl, #4]
   1e60c:	mul	r0, r1, r0
   1e610:	str	r0, [sp]
   1e614:	add	r1, sp, #24
   1e618:	mov	r0, r5
   1e61c:	mov	r2, r4
   1e620:	mov	r3, r8
   1e624:	bl	faac <ReadCompressedInt16Data>
   1e628:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e62c:	ldr	r7, [r2]
   1e630:	ldr	r0, [fp, #16]
   1e634:	ldr	r0, [r0, #4]
   1e638:	mul	r3, r0, r7
   1e63c:	ldr	r9, [fp, #20]
   1e640:	ldr	r0, [r9]
   1e644:	str	r0, [sp, #16]
   1e648:	ldr	r6, [r9, #4]
   1e64c:	add	r1, sp, #24
   1e650:	ldr	r5, [sp, #20]
   1e654:	mov	r0, r5
   1e658:	mov	r2, r8
   1e65c:	bl	26ac <InflateSkipData>
   1e660:	sub	r0, r6, #1
   1e664:	mul	r3, r0, r7
   1e668:	ldr	r0, [r9]
   1e66c:	cmp	r0, #1
   1e670:	bne	1ef7c <ReadCompressedDataSlab2+0xcf4>
   1e674:	ldr	r0, [sl]
   1e678:	ldr	r2, [fp, #12]
   1e67c:	ldr	r1, [r2]
   1e680:	cmp	r0, r1
   1e684:	bne	1f984 <ReadCompressedDataSlab2+0x16fc>
   1e688:	ldr	r1, [fp, #20]
   1e68c:	ldr	r1, [r1, #4]
   1e690:	cmp	r1, #1
   1e694:	bne	1f984 <ReadCompressedDataSlab2+0x16fc>
   1e698:	ldr	r1, [sl, #4]
   1e69c:	mul	r0, r1, r0
   1e6a0:	str	r0, [sp]
   1e6a4:	add	r1, sp, #24
   1e6a8:	mov	r0, r5
   1e6ac:	mov	r2, r4
   1e6b0:	mov	r3, r8
   1e6b4:	bl	114b0 <ReadCompressedUInt16Data>
   1e6b8:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e6bc:	ldr	r7, [r2]
   1e6c0:	ldr	r0, [fp, #16]
   1e6c4:	ldr	r0, [r0, #4]
   1e6c8:	mul	r3, r0, r7
   1e6cc:	ldr	r9, [fp, #20]
   1e6d0:	ldr	r0, [r9]
   1e6d4:	str	r0, [sp, #12]
   1e6d8:	ldr	r6, [r9, #4]
   1e6dc:	add	r1, sp, #24
   1e6e0:	ldr	r5, [sp, #20]
   1e6e4:	mov	r0, r5
   1e6e8:	mov	r2, r8
   1e6ec:	bl	26ac <InflateSkipData>
   1e6f0:	sub	r0, r6, #1
   1e6f4:	mul	r3, r0, r7
   1e6f8:	ldr	r0, [r9]
   1e6fc:	cmp	r0, #1
   1e700:	bne	1f0d0 <ReadCompressedDataSlab2+0xe48>
   1e704:	ldr	r0, [sl]
   1e708:	ldr	r2, [fp, #12]
   1e70c:	ldr	r1, [r2]
   1e710:	cmp	r0, r1
   1e714:	bne	1fa40 <ReadCompressedDataSlab2+0x17b8>
   1e718:	ldr	r1, [fp, #20]
   1e71c:	ldr	r1, [r1, #4]
   1e720:	cmp	r1, #1
   1e724:	bne	1fa40 <ReadCompressedDataSlab2+0x17b8>
   1e728:	ldr	r1, [sl, #4]
   1e72c:	mul	r0, r1, r0
   1e730:	str	r0, [sp]
   1e734:	add	r1, sp, #24
   1e738:	mov	r0, r5
   1e73c:	mov	r2, r4
   1e740:	mov	r3, r8
   1e744:	bl	c6d4 <ReadCompressedInt32Data>
   1e748:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e74c:	ldr	r7, [r2]
   1e750:	ldr	r0, [fp, #16]
   1e754:	ldr	r0, [r0, #4]
   1e758:	mul	r3, r0, r7
   1e75c:	ldr	r9, [fp, #20]
   1e760:	ldr	r0, [r9]
   1e764:	str	r0, [sp, #12]
   1e768:	ldr	r6, [r9, #4]
   1e76c:	add	r1, sp, #24
   1e770:	ldr	r5, [sp, #20]
   1e774:	mov	r0, r5
   1e778:	mov	r2, r8
   1e77c:	bl	26ac <InflateSkipData>
   1e780:	sub	r0, r6, #1
   1e784:	mul	r3, r0, r7
   1e788:	ldr	r0, [r9]
   1e78c:	cmp	r0, #1
   1e790:	bne	1f218 <ReadCompressedDataSlab2+0xf90>
   1e794:	ldr	r0, [sl]
   1e798:	ldr	r2, [fp, #12]
   1e79c:	ldr	r1, [r2]
   1e7a0:	cmp	r0, r1
   1e7a4:	bne	1fafc <ReadCompressedDataSlab2+0x1874>
   1e7a8:	ldr	r1, [fp, #20]
   1e7ac:	ldr	r1, [r1, #4]
   1e7b0:	cmp	r1, #1
   1e7b4:	bne	1fafc <ReadCompressedDataSlab2+0x1874>
   1e7b8:	ldr	r1, [sl, #4]
   1e7bc:	mul	r0, r1, r0
   1e7c0:	str	r0, [sp]
   1e7c4:	add	r1, sp, #24
   1e7c8:	mov	r0, r5
   1e7cc:	mov	r2, r4
   1e7d0:	mov	r3, r8
   1e7d4:	bl	e0a8 <ReadCompressedUInt32Data>
   1e7d8:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e7dc:	ldr	r7, [r2]
   1e7e0:	ldr	r0, [fp, #16]
   1e7e4:	ldr	r0, [r0, #4]
   1e7e8:	mul	r3, r0, r7
   1e7ec:	ldr	r9, [fp, #20]
   1e7f0:	ldr	r0, [r9]
   1e7f4:	str	r0, [sp, #12]
   1e7f8:	ldr	r6, [r9, #4]
   1e7fc:	add	r1, sp, #24
   1e800:	ldr	r5, [sp, #20]
   1e804:	mov	r0, r5
   1e808:	mov	r2, r8
   1e80c:	bl	26ac <InflateSkipData>
   1e810:	sub	r0, r6, #1
   1e814:	mul	r3, r0, r7
   1e818:	ldr	r0, [r9]
   1e81c:	cmp	r0, #1
   1e820:	bne	1f360 <ReadCompressedDataSlab2+0x10d8>
   1e824:	ldr	r0, [sl]
   1e828:	ldr	r2, [fp, #12]
   1e82c:	ldr	r1, [r2]
   1e830:	cmp	r0, r1
   1e834:	bne	1fbb8 <ReadCompressedDataSlab2+0x1930>
   1e838:	ldr	r1, [fp, #20]
   1e83c:	ldr	r1, [r1, #4]
   1e840:	cmp	r1, #1
   1e844:	bne	1fbb8 <ReadCompressedDataSlab2+0x1930>
   1e848:	ldr	r1, [sl, #4]
   1e84c:	mul	r0, r1, r0
   1e850:	str	r0, [sp]
   1e854:	add	r1, sp, #24
   1e858:	mov	r0, r5
   1e85c:	mov	r2, r4
   1e860:	mov	r3, r8
   1e864:	bl	ac7c <ReadCompressedUInt64Data>
   1e868:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e86c:	ldr	r7, [r2]
   1e870:	ldr	r0, [fp, #16]
   1e874:	ldr	r0, [r0, #4]
   1e878:	mul	r3, r0, r7
   1e87c:	ldr	r9, [fp, #20]
   1e880:	ldr	r0, [r9]
   1e884:	str	r0, [sp, #12]
   1e888:	ldr	r6, [r9, #4]
   1e88c:	add	r1, sp, #24
   1e890:	ldr	r5, [sp, #20]
   1e894:	mov	r0, r5
   1e898:	mov	r2, r8
   1e89c:	bl	26ac <InflateSkipData>
   1e8a0:	sub	r0, r6, #1
   1e8a4:	mul	r3, r0, r7
   1e8a8:	ldr	r0, [r9]
   1e8ac:	cmp	r0, #1
   1e8b0:	bne	1f4a8 <ReadCompressedDataSlab2+0x1220>
   1e8b4:	ldr	r0, [sl]
   1e8b8:	ldr	r2, [fp, #12]
   1e8bc:	ldr	r1, [r2]
   1e8c0:	cmp	r0, r1
   1e8c4:	bne	1fc74 <ReadCompressedDataSlab2+0x19ec>
   1e8c8:	ldr	r1, [fp, #20]
   1e8cc:	ldr	r1, [r1, #4]
   1e8d0:	cmp	r1, #1
   1e8d4:	bne	1fc74 <ReadCompressedDataSlab2+0x19ec>
   1e8d8:	ldr	r1, [sl, #4]
   1e8dc:	mul	r0, r1, r0
   1e8e0:	str	r0, [sp]
   1e8e4:	add	r1, sp, #24
   1e8e8:	mov	r0, r5
   1e8ec:	mov	r2, r4
   1e8f0:	mov	r3, r8
   1e8f4:	bl	90d0 <ReadCompressedInt64Data>
   1e8f8:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e8fc:	ldr	r0, [sl, #4]
   1e900:	cmp	r0, #1
   1e904:	ldr	r9, [fp, #16]
   1e908:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1e90c:	mov	r7, sl
   1e910:	mov	sl, r3
   1e914:	ldr	r0, [sp, #12]
   1e918:	sub	r0, r0, #1
   1e91c:	str	r0, [sp, #12]
   1e920:	mov	r1, #0
   1e924:	add	r6, sp, #24
   1e928:	str	r3, [sp, #16]
   1e92c:	str	r1, [sp, #20]
   1e930:	ldr	r3, [r9]
   1e934:	mov	r0, r5
   1e938:	mov	r1, r6
   1e93c:	mov	r2, r8
   1e940:	bl	26ac <InflateSkipData>
   1e944:	mov	sl, r7
   1e948:	ldr	sl, [r7]
   1e94c:	mov	r0, #1
   1e950:	str	r0, [sp]
   1e954:	mov	r0, r5
   1e958:	mov	r9, r6
   1e95c:	mov	r1, r6
   1e960:	mov	r2, r4
   1e964:	mov	r3, r8
   1e968:	bl	4bf4 <ReadCompressedDoubleData>
   1e96c:	add	r4, r4, #8
   1e970:	cmp	sl, #2
   1e974:	blt	1e9d8 <ReadCompressedDataSlab2+0x750>
   1e978:	mov	sl, #0
   1e97c:	ldr	r8, [fp, #8]
   1e980:	ldr	r7, [sp, #12]
   1e984:	mov	r6, r9
   1e988:	mov	r0, r5
   1e98c:	mov	r1, r6
   1e990:	mov	r2, r8
   1e994:	mov	r3, r7
   1e998:	bl	26ac <InflateSkipData>
   1e99c:	ldr	r0, [fp, #24]
   1e9a0:	ldr	r9, [r0]
   1e9a4:	mov	r0, #1
   1e9a8:	str	r0, [sp]
   1e9ac:	mov	r0, r5
   1e9b0:	mov	r1, r6
   1e9b4:	mov	r2, r4
   1e9b8:	mov	r3, r8
   1e9bc:	bl	4bf4 <ReadCompressedDoubleData>
   1e9c0:	add	r4, r4, #8
   1e9c4:	add	sl, sl, #1
   1e9c8:	sub	r0, r9, #1
   1e9cc:	cmp	sl, r0
   1e9d0:	blt	1e988 <ReadCompressedDataSlab2+0x700>
   1e9d4:	b	1e9e0 <ReadCompressedDataSlab2+0x758>
   1e9d8:	ldr	r8, [fp, #8]
   1e9dc:	mov	r6, r9
   1e9e0:	ldr	r0, [fp, #12]
   1e9e4:	ldr	r0, [r0]
   1e9e8:	ldr	sl, [sp, #16]
   1e9ec:	add	r0, r0, sl
   1e9f0:	ldr	r1, [fp, #20]
   1e9f4:	ldr	r1, [r1]
   1e9f8:	ldr	r7, [fp, #24]
   1e9fc:	ldr	r2, [r7]
   1ea00:	sub	r2, r2, #1
   1ea04:	mul	r1, r2, r1
   1ea08:	mvn	r1, r1
   1ea0c:	add	r0, r0, r1
   1ea10:	ldr	r9, [fp, #16]
   1ea14:	ldr	r1, [r9]
   1ea18:	sub	r3, r0, r1
   1ea1c:	mov	r0, r5
   1ea20:	mov	r1, r6
   1ea24:	mov	r2, r8
   1ea28:	bl	26ac <InflateSkipData>
   1ea2c:	ldr	r1, [sp, #20]
   1ea30:	add	r1, r1, #1
   1ea34:	ldr	r0, [r7, #4]
   1ea38:	cmp	r1, r0
   1ea3c:	blt	1e92c <ReadCompressedDataSlab2+0x6a4>
   1ea40:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ea44:	ldr	r0, [sl, #4]
   1ea48:	cmp	r0, #1
   1ea4c:	ldr	r9, [fp, #16]
   1ea50:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ea54:	mov	r7, sl
   1ea58:	mov	sl, r3
   1ea5c:	ldr	r0, [sp, #12]
   1ea60:	sub	r0, r0, #1
   1ea64:	str	r0, [sp, #12]
   1ea68:	mov	r1, #0
   1ea6c:	add	r6, sp, #24
   1ea70:	str	r3, [sp, #16]
   1ea74:	str	r1, [sp, #20]
   1ea78:	ldr	r3, [r9]
   1ea7c:	mov	r0, r5
   1ea80:	mov	r1, r6
   1ea84:	mov	r2, r8
   1ea88:	bl	26ac <InflateSkipData>
   1ea8c:	mov	sl, r7
   1ea90:	ldr	sl, [r7]
   1ea94:	mov	r0, #1
   1ea98:	str	r0, [sp]
   1ea9c:	mov	r0, r5
   1eaa0:	mov	r9, r6
   1eaa4:	mov	r1, r6
   1eaa8:	mov	r2, r4
   1eaac:	mov	r3, r8
   1eab0:	bl	7534 <ReadCompressedSingleData>
   1eab4:	add	r4, r4, #4
   1eab8:	cmp	sl, #2
   1eabc:	blt	1eb20 <ReadCompressedDataSlab2+0x898>
   1eac0:	mov	sl, #0
   1eac4:	ldr	r8, [fp, #8]
   1eac8:	ldr	r7, [sp, #12]
   1eacc:	mov	r6, r9
   1ead0:	mov	r0, r5
   1ead4:	mov	r1, r6
   1ead8:	mov	r2, r8
   1eadc:	mov	r3, r7
   1eae0:	bl	26ac <InflateSkipData>
   1eae4:	ldr	r0, [fp, #24]
   1eae8:	ldr	r9, [r0]
   1eaec:	mov	r0, #1
   1eaf0:	str	r0, [sp]
   1eaf4:	mov	r0, r5
   1eaf8:	mov	r1, r6
   1eafc:	mov	r2, r4
   1eb00:	mov	r3, r8
   1eb04:	bl	7534 <ReadCompressedSingleData>
   1eb08:	add	r4, r4, #4
   1eb0c:	add	sl, sl, #1
   1eb10:	sub	r0, r9, #1
   1eb14:	cmp	sl, r0
   1eb18:	blt	1ead0 <ReadCompressedDataSlab2+0x848>
   1eb1c:	b	1eb28 <ReadCompressedDataSlab2+0x8a0>
   1eb20:	ldr	r8, [fp, #8]
   1eb24:	mov	r6, r9
   1eb28:	ldr	r0, [fp, #12]
   1eb2c:	ldr	r0, [r0]
   1eb30:	ldr	sl, [sp, #16]
   1eb34:	add	r0, r0, sl
   1eb38:	ldr	r1, [fp, #20]
   1eb3c:	ldr	r1, [r1]
   1eb40:	ldr	r7, [fp, #24]
   1eb44:	ldr	r2, [r7]
   1eb48:	sub	r2, r2, #1
   1eb4c:	mul	r1, r2, r1
   1eb50:	mvn	r1, r1
   1eb54:	add	r0, r0, r1
   1eb58:	ldr	r9, [fp, #16]
   1eb5c:	ldr	r1, [r9]
   1eb60:	sub	r3, r0, r1
   1eb64:	mov	r0, r5
   1eb68:	mov	r1, r6
   1eb6c:	mov	r2, r8
   1eb70:	bl	26ac <InflateSkipData>
   1eb74:	ldr	r1, [sp, #20]
   1eb78:	add	r1, r1, #1
   1eb7c:	ldr	r0, [r7, #4]
   1eb80:	cmp	r1, r0
   1eb84:	blt	1ea74 <ReadCompressedDataSlab2+0x7ec>
   1eb88:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1eb8c:	ldr	r0, [sl, #4]
   1eb90:	cmp	r0, #1
   1eb94:	mov	r7, r8
   1eb98:	ldr	r8, [fp, #16]
   1eb9c:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1eba0:	mov	r1, r8
   1eba4:	mov	r8, r3
   1eba8:	ldr	r0, [sp, #12]
   1ebac:	sub	r0, r0, #1
   1ebb0:	str	r0, [sp, #12]
   1ebb4:	mov	r6, #0
   1ebb8:	add	r9, sp, #24
   1ebbc:	str	r3, [sp, #16]
   1ebc0:	ldr	r3, [r1]
   1ebc4:	mov	r0, r5
   1ebc8:	mov	r8, r1
   1ebcc:	mov	r1, r9
   1ebd0:	mov	r2, r7
   1ebd4:	bl	26ac <InflateSkipData>
   1ebd8:	ldr	sl, [sl]
   1ebdc:	mov	r0, #1
   1ebe0:	str	r0, [sp]
   1ebe4:	mov	r0, r5
   1ebe8:	mov	r1, r9
   1ebec:	mov	r2, r4
   1ebf0:	mov	r3, r7
   1ebf4:	bl	12e9c <ReadCompressedInt8Data>
   1ebf8:	add	r4, r4, #1
   1ebfc:	cmp	sl, #2
   1ec00:	blt	1ec74 <ReadCompressedDataSlab2+0x9ec>
   1ec04:	mov	r1, r9
   1ec08:	str	r6, [sp, #20]
   1ec0c:	mov	sl, #0
   1ec10:	ldr	r8, [fp, #8]
   1ec14:	ldr	r6, [sp, #12]
   1ec18:	mov	r7, #1
   1ec1c:	mov	r0, r5
   1ec20:	mov	r2, r8
   1ec24:	mov	r3, r6
   1ec28:	bl	26ac <InflateSkipData>
   1ec2c:	ldr	r0, [fp, #24]
   1ec30:	ldr	r9, [r0]
   1ec34:	str	r7, [sp]
   1ec38:	add	r2, r4, sl
   1ec3c:	mov	r0, r5
   1ec40:	add	r1, sp, #24
   1ec44:	mov	r3, r8
   1ec48:	bl	12e9c <ReadCompressedInt8Data>
   1ec4c:	add	sl, sl, #1
   1ec50:	sub	r0, r9, #1
   1ec54:	add	r1, sp, #24
   1ec58:	cmp	sl, r0
   1ec5c:	blt	1ec1c <ReadCompressedDataSlab2+0x994>
   1ec60:	add	r4, r4, sl
   1ec64:	ldr	r8, [fp, #16]
   1ec68:	mov	r3, r8
   1ec6c:	ldr	r6, [sp, #20]
   1ec70:	b	1ec78 <ReadCompressedDataSlab2+0x9f0>
   1ec74:	mov	r3, r8
   1ec78:	ldr	r0, [fp, #12]
   1ec7c:	ldr	r0, [r0]
   1ec80:	ldr	r8, [sp, #16]
   1ec84:	add	r0, r0, r8
   1ec88:	ldr	r1, [fp, #20]
   1ec8c:	ldr	r1, [r1]
   1ec90:	ldr	sl, [fp, #24]
   1ec94:	ldr	r2, [sl]
   1ec98:	sub	r2, r2, #1
   1ec9c:	mul	r1, r2, r1
   1eca0:	mvn	r1, r1
   1eca4:	add	r0, r0, r1
   1eca8:	ldr	r1, [r3]
   1ecac:	sub	r3, r0, r1
   1ecb0:	mov	r0, r5
   1ecb4:	add	r9, sp, #24
   1ecb8:	mov	r1, r9
   1ecbc:	ldr	r7, [fp, #8]
   1ecc0:	mov	r2, r7
   1ecc4:	bl	26ac <InflateSkipData>
   1ecc8:	add	r6, r6, #1
   1eccc:	ldr	r0, [sl, #4]
   1ecd0:	cmp	r6, r0
   1ecd4:	ldr	r1, [fp, #16]
   1ecd8:	blt	1ebc0 <ReadCompressedDataSlab2+0x938>
   1ecdc:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ece0:	ldr	r0, [sl, #4]
   1ece4:	cmp	r0, #1
   1ece8:	mov	r7, r8
   1ecec:	ldr	r8, [fp, #16]
   1ecf0:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ecf4:	mov	r1, r8
   1ecf8:	mov	r8, r3
   1ecfc:	ldr	r0, [sp, #12]
   1ed00:	sub	r0, r0, #1
   1ed04:	str	r0, [sp, #12]
   1ed08:	mov	r6, #0
   1ed0c:	add	r9, sp, #24
   1ed10:	str	r3, [sp, #16]
   1ed14:	ldr	r3, [r1]
   1ed18:	mov	r0, r5
   1ed1c:	mov	r8, r1
   1ed20:	mov	r1, r9
   1ed24:	mov	r2, r7
   1ed28:	bl	26ac <InflateSkipData>
   1ed2c:	ldr	sl, [sl]
   1ed30:	mov	r0, #1
   1ed34:	str	r0, [sp]
   1ed38:	mov	r0, r5
   1ed3c:	mov	r1, r9
   1ed40:	mov	r2, r4
   1ed44:	mov	r3, r7
   1ed48:	bl	14888 <ReadCompressedUInt8Data>
   1ed4c:	add	r4, r4, #1
   1ed50:	cmp	sl, #2
   1ed54:	blt	1edc8 <ReadCompressedDataSlab2+0xb40>
   1ed58:	mov	r1, r9
   1ed5c:	str	r6, [sp, #20]
   1ed60:	mov	sl, #0
   1ed64:	ldr	r8, [fp, #8]
   1ed68:	ldr	r6, [sp, #12]
   1ed6c:	mov	r7, #1
   1ed70:	mov	r0, r5
   1ed74:	mov	r2, r8
   1ed78:	mov	r3, r6
   1ed7c:	bl	26ac <InflateSkipData>
   1ed80:	ldr	r0, [fp, #24]
   1ed84:	ldr	r9, [r0]
   1ed88:	str	r7, [sp]
   1ed8c:	add	r2, r4, sl
   1ed90:	mov	r0, r5
   1ed94:	add	r1, sp, #24
   1ed98:	mov	r3, r8
   1ed9c:	bl	14888 <ReadCompressedUInt8Data>
   1eda0:	add	sl, sl, #1
   1eda4:	sub	r0, r9, #1
   1eda8:	add	r1, sp, #24
   1edac:	cmp	sl, r0
   1edb0:	blt	1ed70 <ReadCompressedDataSlab2+0xae8>
   1edb4:	add	r4, r4, sl
   1edb8:	ldr	r8, [fp, #16]
   1edbc:	mov	r3, r8
   1edc0:	ldr	r6, [sp, #20]
   1edc4:	b	1edcc <ReadCompressedDataSlab2+0xb44>
   1edc8:	mov	r3, r8
   1edcc:	ldr	r0, [fp, #12]
   1edd0:	ldr	r0, [r0]
   1edd4:	ldr	r8, [sp, #16]
   1edd8:	add	r0, r0, r8
   1eddc:	ldr	r1, [fp, #20]
   1ede0:	ldr	r1, [r1]
   1ede4:	ldr	sl, [fp, #24]
   1ede8:	ldr	r2, [sl]
   1edec:	sub	r2, r2, #1
   1edf0:	mul	r1, r2, r1
   1edf4:	mvn	r1, r1
   1edf8:	add	r0, r0, r1
   1edfc:	ldr	r1, [r3]
   1ee00:	sub	r3, r0, r1
   1ee04:	mov	r0, r5
   1ee08:	add	r9, sp, #24
   1ee0c:	mov	r1, r9
   1ee10:	ldr	r7, [fp, #8]
   1ee14:	mov	r2, r7
   1ee18:	bl	26ac <InflateSkipData>
   1ee1c:	add	r6, r6, #1
   1ee20:	ldr	r0, [sl, #4]
   1ee24:	cmp	r6, r0
   1ee28:	ldr	r1, [fp, #16]
   1ee2c:	blt	1ed14 <ReadCompressedDataSlab2+0xa8c>
   1ee30:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ee34:	ldr	r0, [sl, #4]
   1ee38:	cmp	r0, #1
   1ee3c:	ldr	r9, [fp, #16]
   1ee40:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ee44:	mov	r7, sl
   1ee48:	mov	sl, r3
   1ee4c:	ldr	r0, [sp, #12]
   1ee50:	sub	r0, r0, #1
   1ee54:	str	r0, [sp, #12]
   1ee58:	mov	r1, #0
   1ee5c:	add	r6, sp, #24
   1ee60:	str	r3, [sp, #16]
   1ee64:	str	r1, [sp, #20]
   1ee68:	ldr	r3, [r9]
   1ee6c:	mov	r0, r5
   1ee70:	mov	r1, r6
   1ee74:	mov	r2, r8
   1ee78:	bl	26ac <InflateSkipData>
   1ee7c:	mov	sl, r7
   1ee80:	ldr	sl, [r7]
   1ee84:	mov	r0, #1
   1ee88:	str	r0, [sp]
   1ee8c:	mov	r0, r5
   1ee90:	mov	r9, r6
   1ee94:	mov	r1, r6
   1ee98:	mov	r2, r4
   1ee9c:	mov	r3, r8
   1eea0:	bl	faac <ReadCompressedInt16Data>
   1eea4:	add	r4, r4, #2
   1eea8:	cmp	sl, #2
   1eeac:	blt	1ef10 <ReadCompressedDataSlab2+0xc88>
   1eeb0:	mov	sl, #0
   1eeb4:	ldr	r8, [fp, #8]
   1eeb8:	ldr	r7, [sp, #12]
   1eebc:	mov	r6, r9
   1eec0:	mov	r0, r5
   1eec4:	mov	r1, r6
   1eec8:	mov	r2, r8
   1eecc:	mov	r3, r7
   1eed0:	bl	26ac <InflateSkipData>
   1eed4:	ldr	r0, [fp, #24]
   1eed8:	ldr	r9, [r0]
   1eedc:	mov	r0, #1
   1eee0:	str	r0, [sp]
   1eee4:	mov	r0, r5
   1eee8:	mov	r1, r6
   1eeec:	mov	r2, r4
   1eef0:	mov	r3, r8
   1eef4:	bl	faac <ReadCompressedInt16Data>
   1eef8:	add	r4, r4, #2
   1eefc:	add	sl, sl, #1
   1ef00:	sub	r0, r9, #1
   1ef04:	cmp	sl, r0
   1ef08:	blt	1eec0 <ReadCompressedDataSlab2+0xc38>
   1ef0c:	b	1ef18 <ReadCompressedDataSlab2+0xc90>
   1ef10:	ldr	r8, [fp, #8]
   1ef14:	mov	r6, r9
   1ef18:	ldr	r0, [fp, #12]
   1ef1c:	ldr	r0, [r0]
   1ef20:	ldr	sl, [sp, #16]
   1ef24:	add	r0, r0, sl
   1ef28:	ldr	r1, [fp, #20]
   1ef2c:	ldr	r1, [r1]
   1ef30:	ldr	r7, [fp, #24]
   1ef34:	ldr	r2, [r7]
   1ef38:	sub	r2, r2, #1
   1ef3c:	mul	r1, r2, r1
   1ef40:	mvn	r1, r1
   1ef44:	add	r0, r0, r1
   1ef48:	ldr	r9, [fp, #16]
   1ef4c:	ldr	r1, [r9]
   1ef50:	sub	r3, r0, r1
   1ef54:	mov	r0, r5
   1ef58:	mov	r1, r6
   1ef5c:	mov	r2, r8
   1ef60:	bl	26ac <InflateSkipData>
   1ef64:	ldr	r1, [sp, #20]
   1ef68:	add	r1, r1, #1
   1ef6c:	ldr	r0, [r7, #4]
   1ef70:	cmp	r1, r0
   1ef74:	blt	1ee64 <ReadCompressedDataSlab2+0xbdc>
   1ef78:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ef7c:	ldr	r0, [sl, #4]
   1ef80:	cmp	r0, #1
   1ef84:	ldr	r9, [fp, #16]
   1ef88:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1ef8c:	mov	r7, sl
   1ef90:	mov	sl, r3
   1ef94:	mov	r6, r5
   1ef98:	ldr	r0, [sp, #16]
   1ef9c:	sub	r0, r0, #1
   1efa0:	str	r0, [sp, #8]
   1efa4:	mov	r1, #0
   1efa8:	add	r5, sp, #24
   1efac:	str	r3, [sp, #12]
   1efb0:	str	r1, [sp, #16]
   1efb4:	ldr	r3, [r9]
   1efb8:	mov	r0, r6
   1efbc:	mov	r1, r5
   1efc0:	mov	r2, r8
   1efc4:	bl	26ac <InflateSkipData>
   1efc8:	mov	sl, r7
   1efcc:	ldr	sl, [r7]
   1efd0:	mov	r0, #1
   1efd4:	str	r0, [sp]
   1efd8:	mov	r0, r6
   1efdc:	mov	r9, r5
   1efe0:	mov	r1, r5
   1efe4:	mov	r2, r4
   1efe8:	mov	r3, r8
   1efec:	bl	114b0 <ReadCompressedUInt16Data>
   1eff0:	add	r4, r4, #2
   1eff4:	cmp	sl, #2
   1eff8:	blt	1f060 <ReadCompressedDataSlab2+0xdd8>
   1effc:	mov	sl, #0
   1f000:	ldr	r8, [fp, #8]
   1f004:	ldr	r7, [sp, #8]
   1f008:	mov	r5, r9
   1f00c:	ldr	r6, [sp, #20]
   1f010:	mov	r0, r6
   1f014:	mov	r1, r5
   1f018:	mov	r2, r8
   1f01c:	mov	r3, r7
   1f020:	bl	26ac <InflateSkipData>
   1f024:	ldr	r0, [fp, #24]
   1f028:	ldr	r9, [r0]
   1f02c:	mov	r0, #1
   1f030:	str	r0, [sp]
   1f034:	mov	r0, r6
   1f038:	mov	r1, r5
   1f03c:	mov	r2, r4
   1f040:	mov	r3, r8
   1f044:	bl	114b0 <ReadCompressedUInt16Data>
   1f048:	add	r4, r4, #2
   1f04c:	add	sl, sl, #1
   1f050:	sub	r0, r9, #1
   1f054:	cmp	sl, r0
   1f058:	blt	1f010 <ReadCompressedDataSlab2+0xd88>
   1f05c:	b	1f06c <ReadCompressedDataSlab2+0xde4>
   1f060:	ldr	r8, [fp, #8]
   1f064:	mov	r5, r9
   1f068:	ldr	r6, [sp, #20]
   1f06c:	ldr	r0, [fp, #12]
   1f070:	ldr	r0, [r0]
   1f074:	ldr	sl, [sp, #12]
   1f078:	add	r0, r0, sl
   1f07c:	ldr	r1, [fp, #20]
   1f080:	ldr	r1, [r1]
   1f084:	ldr	r7, [fp, #24]
   1f088:	ldr	r2, [r7]
   1f08c:	sub	r2, r2, #1
   1f090:	mul	r1, r2, r1
   1f094:	mvn	r1, r1
   1f098:	add	r0, r0, r1
   1f09c:	ldr	r9, [fp, #16]
   1f0a0:	ldr	r1, [r9]
   1f0a4:	sub	r3, r0, r1
   1f0a8:	mov	r0, r6
   1f0ac:	mov	r1, r5
   1f0b0:	mov	r2, r8
   1f0b4:	bl	26ac <InflateSkipData>
   1f0b8:	ldr	r1, [sp, #16]
   1f0bc:	add	r1, r1, #1
   1f0c0:	ldr	r0, [r7, #4]
   1f0c4:	cmp	r1, r0
   1f0c8:	blt	1efb0 <ReadCompressedDataSlab2+0xd28>
   1f0cc:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f0d0:	ldr	r0, [sl, #4]
   1f0d4:	cmp	r0, #1
   1f0d8:	ldr	r9, [fp, #16]
   1f0dc:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f0e0:	mov	r7, sl
   1f0e4:	mov	sl, r3
   1f0e8:	ldr	r0, [sp, #12]
   1f0ec:	sub	r0, r0, #1
   1f0f0:	str	r0, [sp, #12]
   1f0f4:	mov	r1, #0
   1f0f8:	add	r6, sp, #24
   1f0fc:	str	r3, [sp, #16]
   1f100:	str	r1, [sp, #20]
   1f104:	ldr	r3, [r9]
   1f108:	mov	r0, r5
   1f10c:	mov	r1, r6
   1f110:	mov	r2, r8
   1f114:	bl	26ac <InflateSkipData>
   1f118:	mov	sl, r7
   1f11c:	ldr	sl, [r7]
   1f120:	mov	r0, #1
   1f124:	str	r0, [sp]
   1f128:	mov	r0, r5
   1f12c:	mov	r9, r6
   1f130:	mov	r1, r6
   1f134:	mov	r2, r4
   1f138:	mov	r3, r8
   1f13c:	bl	c6d4 <ReadCompressedInt32Data>
   1f140:	add	r4, r4, #4
   1f144:	cmp	sl, #2
   1f148:	blt	1f1ac <ReadCompressedDataSlab2+0xf24>
   1f14c:	mov	sl, #0
   1f150:	ldr	r8, [fp, #8]
   1f154:	ldr	r7, [sp, #12]
   1f158:	mov	r6, r9
   1f15c:	mov	r0, r5
   1f160:	mov	r1, r6
   1f164:	mov	r2, r8
   1f168:	mov	r3, r7
   1f16c:	bl	26ac <InflateSkipData>
   1f170:	ldr	r0, [fp, #24]
   1f174:	ldr	r9, [r0]
   1f178:	mov	r0, #1
   1f17c:	str	r0, [sp]
   1f180:	mov	r0, r5
   1f184:	mov	r1, r6
   1f188:	mov	r2, r4
   1f18c:	mov	r3, r8
   1f190:	bl	c6d4 <ReadCompressedInt32Data>
   1f194:	add	r4, r4, #4
   1f198:	add	sl, sl, #1
   1f19c:	sub	r0, r9, #1
   1f1a0:	cmp	sl, r0
   1f1a4:	blt	1f15c <ReadCompressedDataSlab2+0xed4>
   1f1a8:	b	1f1b4 <ReadCompressedDataSlab2+0xf2c>
   1f1ac:	ldr	r8, [fp, #8]
   1f1b0:	mov	r6, r9
   1f1b4:	ldr	r0, [fp, #12]
   1f1b8:	ldr	r0, [r0]
   1f1bc:	ldr	sl, [sp, #16]
   1f1c0:	add	r0, r0, sl
   1f1c4:	ldr	r1, [fp, #20]
   1f1c8:	ldr	r1, [r1]
   1f1cc:	ldr	r7, [fp, #24]
   1f1d0:	ldr	r2, [r7]
   1f1d4:	sub	r2, r2, #1
   1f1d8:	mul	r1, r2, r1
   1f1dc:	mvn	r1, r1
   1f1e0:	add	r0, r0, r1
   1f1e4:	ldr	r9, [fp, #16]
   1f1e8:	ldr	r1, [r9]
   1f1ec:	sub	r3, r0, r1
   1f1f0:	mov	r0, r5
   1f1f4:	mov	r1, r6
   1f1f8:	mov	r2, r8
   1f1fc:	bl	26ac <InflateSkipData>
   1f200:	ldr	r1, [sp, #20]
   1f204:	add	r1, r1, #1
   1f208:	ldr	r0, [r7, #4]
   1f20c:	cmp	r1, r0
   1f210:	blt	1f100 <ReadCompressedDataSlab2+0xe78>
   1f214:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f218:	ldr	r0, [sl, #4]
   1f21c:	cmp	r0, #1
   1f220:	ldr	r9, [fp, #16]
   1f224:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f228:	mov	r7, sl
   1f22c:	mov	sl, r3
   1f230:	ldr	r0, [sp, #12]
   1f234:	sub	r0, r0, #1
   1f238:	str	r0, [sp, #12]
   1f23c:	mov	r1, #0
   1f240:	add	r6, sp, #24
   1f244:	str	r3, [sp, #16]
   1f248:	str	r1, [sp, #20]
   1f24c:	ldr	r3, [r9]
   1f250:	mov	r0, r5
   1f254:	mov	r1, r6
   1f258:	mov	r2, r8
   1f25c:	bl	26ac <InflateSkipData>
   1f260:	mov	sl, r7
   1f264:	ldr	sl, [r7]
   1f268:	mov	r0, #1
   1f26c:	str	r0, [sp]
   1f270:	mov	r0, r5
   1f274:	mov	r9, r6
   1f278:	mov	r1, r6
   1f27c:	mov	r2, r4
   1f280:	mov	r3, r8
   1f284:	bl	e0a8 <ReadCompressedUInt32Data>
   1f288:	add	r4, r4, #4
   1f28c:	cmp	sl, #2
   1f290:	blt	1f2f4 <ReadCompressedDataSlab2+0x106c>
   1f294:	mov	sl, #0
   1f298:	ldr	r8, [fp, #8]
   1f29c:	ldr	r7, [sp, #12]
   1f2a0:	mov	r6, r9
   1f2a4:	mov	r0, r5
   1f2a8:	mov	r1, r6
   1f2ac:	mov	r2, r8
   1f2b0:	mov	r3, r7
   1f2b4:	bl	26ac <InflateSkipData>
   1f2b8:	ldr	r0, [fp, #24]
   1f2bc:	ldr	r9, [r0]
   1f2c0:	mov	r0, #1
   1f2c4:	str	r0, [sp]
   1f2c8:	mov	r0, r5
   1f2cc:	mov	r1, r6
   1f2d0:	mov	r2, r4
   1f2d4:	mov	r3, r8
   1f2d8:	bl	e0a8 <ReadCompressedUInt32Data>
   1f2dc:	add	r4, r4, #4
   1f2e0:	add	sl, sl, #1
   1f2e4:	sub	r0, r9, #1
   1f2e8:	cmp	sl, r0
   1f2ec:	blt	1f2a4 <ReadCompressedDataSlab2+0x101c>
   1f2f0:	b	1f2fc <ReadCompressedDataSlab2+0x1074>
   1f2f4:	ldr	r8, [fp, #8]
   1f2f8:	mov	r6, r9
   1f2fc:	ldr	r0, [fp, #12]
   1f300:	ldr	r0, [r0]
   1f304:	ldr	sl, [sp, #16]
   1f308:	add	r0, r0, sl
   1f30c:	ldr	r1, [fp, #20]
   1f310:	ldr	r1, [r1]
   1f314:	ldr	r7, [fp, #24]
   1f318:	ldr	r2, [r7]
   1f31c:	sub	r2, r2, #1
   1f320:	mul	r1, r2, r1
   1f324:	mvn	r1, r1
   1f328:	add	r0, r0, r1
   1f32c:	ldr	r9, [fp, #16]
   1f330:	ldr	r1, [r9]
   1f334:	sub	r3, r0, r1
   1f338:	mov	r0, r5
   1f33c:	mov	r1, r6
   1f340:	mov	r2, r8
   1f344:	bl	26ac <InflateSkipData>
   1f348:	ldr	r1, [sp, #20]
   1f34c:	add	r1, r1, #1
   1f350:	ldr	r0, [r7, #4]
   1f354:	cmp	r1, r0
   1f358:	blt	1f248 <ReadCompressedDataSlab2+0xfc0>
   1f35c:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f360:	ldr	r0, [sl, #4]
   1f364:	cmp	r0, #1
   1f368:	ldr	r9, [fp, #16]
   1f36c:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f370:	mov	r7, sl
   1f374:	mov	sl, r3
   1f378:	ldr	r0, [sp, #12]
   1f37c:	sub	r0, r0, #1
   1f380:	str	r0, [sp, #12]
   1f384:	mov	r1, #0
   1f388:	add	r6, sp, #24
   1f38c:	str	r3, [sp, #16]
   1f390:	str	r1, [sp, #20]
   1f394:	ldr	r3, [r9]
   1f398:	mov	r0, r5
   1f39c:	mov	r1, r6
   1f3a0:	mov	r2, r8
   1f3a4:	bl	26ac <InflateSkipData>
   1f3a8:	mov	sl, r7
   1f3ac:	ldr	sl, [r7]
   1f3b0:	mov	r0, #1
   1f3b4:	str	r0, [sp]
   1f3b8:	mov	r0, r5
   1f3bc:	mov	r9, r6
   1f3c0:	mov	r1, r6
   1f3c4:	mov	r2, r4
   1f3c8:	mov	r3, r8
   1f3cc:	bl	ac7c <ReadCompressedUInt64Data>
   1f3d0:	add	r4, r4, #8
   1f3d4:	cmp	sl, #2
   1f3d8:	blt	1f43c <ReadCompressedDataSlab2+0x11b4>
   1f3dc:	mov	sl, #0
   1f3e0:	ldr	r8, [fp, #8]
   1f3e4:	ldr	r7, [sp, #12]
   1f3e8:	mov	r6, r9
   1f3ec:	mov	r0, r5
   1f3f0:	mov	r1, r6
   1f3f4:	mov	r2, r8
   1f3f8:	mov	r3, r7
   1f3fc:	bl	26ac <InflateSkipData>
   1f400:	ldr	r0, [fp, #24]
   1f404:	ldr	r9, [r0]
   1f408:	mov	r0, #1
   1f40c:	str	r0, [sp]
   1f410:	mov	r0, r5
   1f414:	mov	r1, r6
   1f418:	mov	r2, r4
   1f41c:	mov	r3, r8
   1f420:	bl	ac7c <ReadCompressedUInt64Data>
   1f424:	add	r4, r4, #8
   1f428:	add	sl, sl, #1
   1f42c:	sub	r0, r9, #1
   1f430:	cmp	sl, r0
   1f434:	blt	1f3ec <ReadCompressedDataSlab2+0x1164>
   1f438:	b	1f444 <ReadCompressedDataSlab2+0x11bc>
   1f43c:	ldr	r8, [fp, #8]
   1f440:	mov	r6, r9
   1f444:	ldr	r0, [fp, #12]
   1f448:	ldr	r0, [r0]
   1f44c:	ldr	sl, [sp, #16]
   1f450:	add	r0, r0, sl
   1f454:	ldr	r1, [fp, #20]
   1f458:	ldr	r1, [r1]
   1f45c:	ldr	r7, [fp, #24]
   1f460:	ldr	r2, [r7]
   1f464:	sub	r2, r2, #1
   1f468:	mul	r1, r2, r1
   1f46c:	mvn	r1, r1
   1f470:	add	r0, r0, r1
   1f474:	ldr	r9, [fp, #16]
   1f478:	ldr	r1, [r9]
   1f47c:	sub	r3, r0, r1
   1f480:	mov	r0, r5
   1f484:	mov	r1, r6
   1f488:	mov	r2, r8
   1f48c:	bl	26ac <InflateSkipData>
   1f490:	ldr	r1, [sp, #20]
   1f494:	add	r1, r1, #1
   1f498:	ldr	r0, [r7, #4]
   1f49c:	cmp	r1, r0
   1f4a0:	blt	1f390 <ReadCompressedDataSlab2+0x1108>
   1f4a4:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f4a8:	ldr	r1, [sp, #12]
   1f4ac:	ldr	r0, [sl, #4]
   1f4b0:	cmp	r0, #1
   1f4b4:	ldr	r9, [fp, #16]
   1f4b8:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f4bc:	sub	r0, r1, #1
   1f4c0:	str	r0, [sp, #12]
   1f4c4:	mov	r7, #0
   1f4c8:	add	r6, sp, #24
   1f4cc:	str	r3, [sp, #16]
   1f4d0:	ldr	r3, [r9]
   1f4d4:	mov	r0, r5
   1f4d8:	mov	r1, r6
   1f4dc:	mov	r2, r8
   1f4e0:	bl	26ac <InflateSkipData>
   1f4e4:	ldr	sl, [sl]
   1f4e8:	mov	r0, #1
   1f4ec:	str	r0, [sp]
   1f4f0:	mov	r0, r5
   1f4f4:	mov	r1, r6
   1f4f8:	mov	r2, r4
   1f4fc:	mov	r3, r8
   1f500:	bl	90d0 <ReadCompressedInt64Data>
   1f504:	add	r4, r4, #8
   1f508:	cmp	sl, #2
   1f50c:	str	r7, [sp, #20]
   1f510:	blt	1f570 <ReadCompressedDataSlab2+0x12e8>
   1f514:	mov	sl, #0
   1f518:	ldr	r8, [fp, #8]
   1f51c:	ldr	r7, [sp, #12]
   1f520:	mov	r0, r5
   1f524:	mov	r1, r6
   1f528:	mov	r2, r8
   1f52c:	mov	r3, r7
   1f530:	bl	26ac <InflateSkipData>
   1f534:	ldr	r0, [fp, #24]
   1f538:	ldr	r9, [r0]
   1f53c:	mov	r0, #1
   1f540:	str	r0, [sp]
   1f544:	mov	r0, r5
   1f548:	mov	r1, r6
   1f54c:	mov	r2, r4
   1f550:	mov	r3, r8
   1f554:	bl	90d0 <ReadCompressedInt64Data>
   1f558:	add	r4, r4, #8
   1f55c:	add	sl, sl, #1
   1f560:	sub	r0, r9, #1
   1f564:	cmp	sl, r0
   1f568:	blt	1f520 <ReadCompressedDataSlab2+0x1298>
   1f56c:	b	1f574 <ReadCompressedDataSlab2+0x12ec>
   1f570:	ldr	r8, [fp, #8]
   1f574:	ldr	r0, [fp, #12]
   1f578:	ldr	r0, [r0]
   1f57c:	ldr	r7, [sp, #16]
   1f580:	add	r0, r0, r7
   1f584:	ldr	r1, [fp, #20]
   1f588:	ldr	r1, [r1]
   1f58c:	ldr	sl, [fp, #24]
   1f590:	ldr	r2, [sl]
   1f594:	sub	r2, r2, #1
   1f598:	mul	r1, r2, r1
   1f59c:	mvn	r1, r1
   1f5a0:	add	r0, r0, r1
   1f5a4:	ldr	r9, [fp, #16]
   1f5a8:	ldr	r1, [r9]
   1f5ac:	sub	r3, r0, r1
   1f5b0:	mov	r0, r5
   1f5b4:	mov	r1, r6
   1f5b8:	mov	r2, r8
   1f5bc:	bl	26ac <InflateSkipData>
   1f5c0:	ldr	r7, [sp, #20]
   1f5c4:	add	r7, r7, #1
   1f5c8:	ldr	r0, [sl, #4]
   1f5cc:	cmp	r7, r0
   1f5d0:	blt	1f4d0 <ReadCompressedDataSlab2+0x1248>
   1f5d4:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f5d8:	ldr	r0, [sl, #4]
   1f5dc:	cmp	r0, #1
   1f5e0:	ldr	r0, [fp, #16]
   1f5e4:	str	r3, [sp, #16]
   1f5e8:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f5ec:	mov	r9, r8
   1f5f0:	mov	r6, r2
   1f5f4:	mov	r7, #0
   1f5f8:	ldr	r3, [r0]
   1f5fc:	mov	r0, r5
   1f600:	add	r1, sp, #24
   1f604:	mov	r8, r1
   1f608:	mov	r2, r9
   1f60c:	bl	26ac <InflateSkipData>
   1f610:	ldr	r0, [sl]
   1f614:	str	r0, [sp]
   1f618:	mov	r0, r5
   1f61c:	mov	r1, r8
   1f620:	mov	r2, r4
   1f624:	mov	r3, r9
   1f628:	bl	4bf4 <ReadCompressedDoubleData>
   1f62c:	ldr	r0, [r6]
   1f630:	ldr	r1, [sp, #16]
   1f634:	add	r0, r0, r1
   1f638:	ldr	r1, [fp, #20]
   1f63c:	ldr	r1, [r1]
   1f640:	mov	r8, r6
   1f644:	ldr	r6, [sl]
   1f648:	sub	r2, r6, #1
   1f64c:	mul	r1, r1, r2
   1f650:	mvn	r1, r1
   1f654:	add	r0, r0, r1
   1f658:	ldr	r1, [fp, #16]
   1f65c:	ldr	r1, [r1]
   1f660:	sub	r3, r0, r1
   1f664:	mov	r0, r5
   1f668:	add	r1, sp, #24
   1f66c:	mov	r2, r9
   1f670:	bl	26ac <InflateSkipData>
   1f674:	add	r4, r4, r6, lsl #3
   1f678:	mov	r6, r8
   1f67c:	add	r7, r7, #1
   1f680:	ldr	r0, [sl, #4]
   1f684:	cmp	r7, r0
   1f688:	ldr	r0, [fp, #16]
   1f68c:	blt	1f5f8 <ReadCompressedDataSlab2+0x1370>
   1f690:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f694:	ldr	r0, [sl, #4]
   1f698:	cmp	r0, #1
   1f69c:	ldr	r0, [fp, #16]
   1f6a0:	str	r3, [sp, #16]
   1f6a4:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f6a8:	mov	r9, r8
   1f6ac:	mov	r6, r2
   1f6b0:	mov	r7, #0
   1f6b4:	ldr	r3, [r0]
   1f6b8:	mov	r0, r5
   1f6bc:	add	r1, sp, #24
   1f6c0:	mov	r8, r1
   1f6c4:	mov	r2, r9
   1f6c8:	bl	26ac <InflateSkipData>
   1f6cc:	ldr	r0, [sl]
   1f6d0:	str	r0, [sp]
   1f6d4:	mov	r0, r5
   1f6d8:	mov	r1, r8
   1f6dc:	mov	r2, r4
   1f6e0:	mov	r3, r9
   1f6e4:	bl	7534 <ReadCompressedSingleData>
   1f6e8:	ldr	r0, [r6]
   1f6ec:	ldr	r1, [sp, #16]
   1f6f0:	add	r0, r0, r1
   1f6f4:	ldr	r1, [fp, #20]
   1f6f8:	ldr	r1, [r1]
   1f6fc:	mov	r8, r6
   1f700:	ldr	r6, [sl]
   1f704:	sub	r2, r6, #1
   1f708:	mul	r1, r1, r2
   1f70c:	mvn	r1, r1
   1f710:	add	r0, r0, r1
   1f714:	ldr	r1, [fp, #16]
   1f718:	ldr	r1, [r1]
   1f71c:	sub	r3, r0, r1
   1f720:	mov	r0, r5
   1f724:	add	r1, sp, #24
   1f728:	mov	r2, r9
   1f72c:	bl	26ac <InflateSkipData>
   1f730:	add	r4, r4, r6, lsl #2
   1f734:	mov	r6, r8
   1f738:	add	r7, r7, #1
   1f73c:	ldr	r0, [sl, #4]
   1f740:	cmp	r7, r0
   1f744:	ldr	r0, [fp, #16]
   1f748:	blt	1f6b4 <ReadCompressedDataSlab2+0x142c>
   1f74c:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f750:	ldr	r0, [sl, #4]
   1f754:	cmp	r0, #1
   1f758:	ldr	r0, [fp, #16]
   1f75c:	str	r3, [sp, #16]
   1f760:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f764:	mov	r9, r8
   1f768:	mov	r6, r2
   1f76c:	mov	r7, #0
   1f770:	ldr	r3, [r0]
   1f774:	mov	r0, r5
   1f778:	add	r1, sp, #24
   1f77c:	mov	r8, r1
   1f780:	mov	r2, r9
   1f784:	bl	26ac <InflateSkipData>
   1f788:	ldr	r0, [sl]
   1f78c:	str	r0, [sp]
   1f790:	mov	r0, r5
   1f794:	mov	r1, r8
   1f798:	mov	r2, r4
   1f79c:	mov	r3, r9
   1f7a0:	bl	12e9c <ReadCompressedInt8Data>
   1f7a4:	ldr	r0, [r6]
   1f7a8:	ldr	r1, [sp, #16]
   1f7ac:	add	r0, r0, r1
   1f7b0:	ldr	r1, [fp, #20]
   1f7b4:	ldr	r1, [r1]
   1f7b8:	mov	r8, r6
   1f7bc:	ldr	r6, [sl]
   1f7c0:	sub	r2, r6, #1
   1f7c4:	mul	r1, r1, r2
   1f7c8:	mvn	r1, r1
   1f7cc:	add	r0, r0, r1
   1f7d0:	ldr	r1, [fp, #16]
   1f7d4:	ldr	r1, [r1]
   1f7d8:	sub	r3, r0, r1
   1f7dc:	mov	r0, r5
   1f7e0:	add	r1, sp, #24
   1f7e4:	mov	r2, r9
   1f7e8:	bl	26ac <InflateSkipData>
   1f7ec:	add	r4, r4, r6
   1f7f0:	mov	r6, r8
   1f7f4:	add	r7, r7, #1
   1f7f8:	ldr	r0, [sl, #4]
   1f7fc:	cmp	r7, r0
   1f800:	ldr	r0, [fp, #16]
   1f804:	blt	1f770 <ReadCompressedDataSlab2+0x14e8>
   1f808:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f80c:	ldr	r0, [sl, #4]
   1f810:	cmp	r0, #1
   1f814:	ldr	r0, [fp, #16]
   1f818:	str	r3, [sp, #16]
   1f81c:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f820:	mov	r9, r8
   1f824:	mov	r6, r2
   1f828:	mov	r7, #0
   1f82c:	ldr	r3, [r0]
   1f830:	mov	r0, r5
   1f834:	add	r1, sp, #24
   1f838:	mov	r8, r1
   1f83c:	mov	r2, r9
   1f840:	bl	26ac <InflateSkipData>
   1f844:	ldr	r0, [sl]
   1f848:	str	r0, [sp]
   1f84c:	mov	r0, r5
   1f850:	mov	r1, r8
   1f854:	mov	r2, r4
   1f858:	mov	r3, r9
   1f85c:	bl	14888 <ReadCompressedUInt8Data>
   1f860:	ldr	r0, [r6]
   1f864:	ldr	r1, [sp, #16]
   1f868:	add	r0, r0, r1
   1f86c:	ldr	r1, [fp, #20]
   1f870:	ldr	r1, [r1]
   1f874:	mov	r8, r6
   1f878:	ldr	r6, [sl]
   1f87c:	sub	r2, r6, #1
   1f880:	mul	r1, r1, r2
   1f884:	mvn	r1, r1
   1f888:	add	r0, r0, r1
   1f88c:	ldr	r1, [fp, #16]
   1f890:	ldr	r1, [r1]
   1f894:	sub	r3, r0, r1
   1f898:	mov	r0, r5
   1f89c:	add	r1, sp, #24
   1f8a0:	mov	r2, r9
   1f8a4:	bl	26ac <InflateSkipData>
   1f8a8:	add	r4, r4, r6
   1f8ac:	mov	r6, r8
   1f8b0:	add	r7, r7, #1
   1f8b4:	ldr	r0, [sl, #4]
   1f8b8:	cmp	r7, r0
   1f8bc:	ldr	r0, [fp, #16]
   1f8c0:	blt	1f82c <ReadCompressedDataSlab2+0x15a4>
   1f8c4:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f8c8:	ldr	r0, [sl, #4]
   1f8cc:	cmp	r0, #1
   1f8d0:	ldr	r0, [fp, #16]
   1f8d4:	str	r3, [sp, #16]
   1f8d8:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f8dc:	mov	r9, r8
   1f8e0:	mov	r6, r2
   1f8e4:	mov	r7, #0
   1f8e8:	ldr	r3, [r0]
   1f8ec:	mov	r0, r5
   1f8f0:	add	r1, sp, #24
   1f8f4:	mov	r8, r1
   1f8f8:	mov	r2, r9
   1f8fc:	bl	26ac <InflateSkipData>
   1f900:	ldr	r0, [sl]
   1f904:	str	r0, [sp]
   1f908:	mov	r0, r5
   1f90c:	mov	r1, r8
   1f910:	mov	r2, r4
   1f914:	mov	r3, r9
   1f918:	bl	faac <ReadCompressedInt16Data>
   1f91c:	ldr	r0, [r6]
   1f920:	ldr	r1, [sp, #16]
   1f924:	add	r0, r0, r1
   1f928:	ldr	r1, [fp, #20]
   1f92c:	ldr	r1, [r1]
   1f930:	mov	r8, r6
   1f934:	ldr	r6, [sl]
   1f938:	sub	r2, r6, #1
   1f93c:	mul	r1, r1, r2
   1f940:	mvn	r1, r1
   1f944:	add	r0, r0, r1
   1f948:	ldr	r1, [fp, #16]
   1f94c:	ldr	r1, [r1]
   1f950:	sub	r3, r0, r1
   1f954:	mov	r0, r5
   1f958:	add	r1, sp, #24
   1f95c:	mov	r2, r9
   1f960:	bl	26ac <InflateSkipData>
   1f964:	add	r4, r4, r6, lsl #1
   1f968:	mov	r6, r8
   1f96c:	add	r7, r7, #1
   1f970:	ldr	r0, [sl, #4]
   1f974:	cmp	r7, r0
   1f978:	ldr	r0, [fp, #16]
   1f97c:	blt	1f8e8 <ReadCompressedDataSlab2+0x1660>
   1f980:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f984:	ldr	r0, [sl, #4]
   1f988:	cmp	r0, #1
   1f98c:	ldr	r0, [fp, #16]
   1f990:	str	r3, [sp, #12]
   1f994:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1f998:	mov	r9, r8
   1f99c:	mov	r6, r2
   1f9a0:	mov	r7, #0
   1f9a4:	ldr	r3, [r0]
   1f9a8:	mov	r0, r5
   1f9ac:	add	r1, sp, #24
   1f9b0:	mov	r8, r1
   1f9b4:	mov	r2, r9
   1f9b8:	bl	26ac <InflateSkipData>
   1f9bc:	ldr	r0, [sl]
   1f9c0:	str	r0, [sp]
   1f9c4:	mov	r0, r5
   1f9c8:	mov	r1, r8
   1f9cc:	mov	r2, r4
   1f9d0:	mov	r3, r9
   1f9d4:	bl	114b0 <ReadCompressedUInt16Data>
   1f9d8:	ldr	r0, [r6]
   1f9dc:	ldr	r1, [sp, #12]
   1f9e0:	add	r0, r0, r1
   1f9e4:	ldr	r1, [fp, #20]
   1f9e8:	ldr	r1, [r1]
   1f9ec:	mov	r8, r6
   1f9f0:	ldr	r6, [sl]
   1f9f4:	sub	r2, r6, #1
   1f9f8:	mul	r1, r1, r2
   1f9fc:	mvn	r1, r1
   1fa00:	add	r0, r0, r1
   1fa04:	ldr	r1, [fp, #16]
   1fa08:	ldr	r1, [r1]
   1fa0c:	sub	r3, r0, r1
   1fa10:	mov	r0, r5
   1fa14:	add	r1, sp, #24
   1fa18:	mov	r2, r9
   1fa1c:	bl	26ac <InflateSkipData>
   1fa20:	add	r4, r4, r6, lsl #1
   1fa24:	mov	r6, r8
   1fa28:	add	r7, r7, #1
   1fa2c:	ldr	r0, [sl, #4]
   1fa30:	cmp	r7, r0
   1fa34:	ldr	r0, [fp, #16]
   1fa38:	blt	1f9a4 <ReadCompressedDataSlab2+0x171c>
   1fa3c:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fa40:	ldr	r0, [sl, #4]
   1fa44:	cmp	r0, #1
   1fa48:	ldr	r0, [fp, #16]
   1fa4c:	str	r3, [sp, #16]
   1fa50:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fa54:	mov	r9, r8
   1fa58:	mov	r6, r2
   1fa5c:	mov	r7, #0
   1fa60:	ldr	r3, [r0]
   1fa64:	mov	r0, r5
   1fa68:	add	r1, sp, #24
   1fa6c:	mov	r8, r1
   1fa70:	mov	r2, r9
   1fa74:	bl	26ac <InflateSkipData>
   1fa78:	ldr	r0, [sl]
   1fa7c:	str	r0, [sp]
   1fa80:	mov	r0, r5
   1fa84:	mov	r1, r8
   1fa88:	mov	r2, r4
   1fa8c:	mov	r3, r9
   1fa90:	bl	c6d4 <ReadCompressedInt32Data>
   1fa94:	ldr	r0, [r6]
   1fa98:	ldr	r1, [sp, #16]
   1fa9c:	add	r0, r0, r1
   1faa0:	ldr	r1, [fp, #20]
   1faa4:	ldr	r1, [r1]
   1faa8:	mov	r8, r6
   1faac:	ldr	r6, [sl]
   1fab0:	sub	r2, r6, #1
   1fab4:	mul	r1, r1, r2
   1fab8:	mvn	r1, r1
   1fabc:	add	r0, r0, r1
   1fac0:	ldr	r1, [fp, #16]
   1fac4:	ldr	r1, [r1]
   1fac8:	sub	r3, r0, r1
   1facc:	mov	r0, r5
   1fad0:	add	r1, sp, #24
   1fad4:	mov	r2, r9
   1fad8:	bl	26ac <InflateSkipData>
   1fadc:	add	r4, r4, r6, lsl #2
   1fae0:	mov	r6, r8
   1fae4:	add	r7, r7, #1
   1fae8:	ldr	r0, [sl, #4]
   1faec:	cmp	r7, r0
   1faf0:	ldr	r0, [fp, #16]
   1faf4:	blt	1fa60 <ReadCompressedDataSlab2+0x17d8>
   1faf8:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fafc:	ldr	r0, [sl, #4]
   1fb00:	cmp	r0, #1
   1fb04:	ldr	r0, [fp, #16]
   1fb08:	str	r3, [sp, #16]
   1fb0c:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fb10:	mov	r9, r8
   1fb14:	mov	r6, r2
   1fb18:	mov	r7, #0
   1fb1c:	ldr	r3, [r0]
   1fb20:	mov	r0, r5
   1fb24:	add	r1, sp, #24
   1fb28:	mov	r8, r1
   1fb2c:	mov	r2, r9
   1fb30:	bl	26ac <InflateSkipData>
   1fb34:	ldr	r0, [sl]
   1fb38:	str	r0, [sp]
   1fb3c:	mov	r0, r5
   1fb40:	mov	r1, r8
   1fb44:	mov	r2, r4
   1fb48:	mov	r3, r9
   1fb4c:	bl	e0a8 <ReadCompressedUInt32Data>
   1fb50:	ldr	r0, [r6]
   1fb54:	ldr	r1, [sp, #16]
   1fb58:	add	r0, r0, r1
   1fb5c:	ldr	r1, [fp, #20]
   1fb60:	ldr	r1, [r1]
   1fb64:	mov	r8, r6
   1fb68:	ldr	r6, [sl]
   1fb6c:	sub	r2, r6, #1
   1fb70:	mul	r1, r1, r2
   1fb74:	mvn	r1, r1
   1fb78:	add	r0, r0, r1
   1fb7c:	ldr	r1, [fp, #16]
   1fb80:	ldr	r1, [r1]
   1fb84:	sub	r3, r0, r1
   1fb88:	mov	r0, r5
   1fb8c:	add	r1, sp, #24
   1fb90:	mov	r2, r9
   1fb94:	bl	26ac <InflateSkipData>
   1fb98:	add	r4, r4, r6, lsl #2
   1fb9c:	mov	r6, r8
   1fba0:	add	r7, r7, #1
   1fba4:	ldr	r0, [sl, #4]
   1fba8:	cmp	r7, r0
   1fbac:	ldr	r0, [fp, #16]
   1fbb0:	blt	1fb1c <ReadCompressedDataSlab2+0x1894>
   1fbb4:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fbb8:	ldr	r0, [sl, #4]
   1fbbc:	cmp	r0, #1
   1fbc0:	ldr	r0, [fp, #16]
   1fbc4:	str	r3, [sp, #16]
   1fbc8:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fbcc:	mov	r9, r8
   1fbd0:	mov	r6, r2
   1fbd4:	mov	r7, #0
   1fbd8:	ldr	r3, [r0]
   1fbdc:	mov	r0, r5
   1fbe0:	add	r1, sp, #24
   1fbe4:	mov	r8, r1
   1fbe8:	mov	r2, r9
   1fbec:	bl	26ac <InflateSkipData>
   1fbf0:	ldr	r0, [sl]
   1fbf4:	str	r0, [sp]
   1fbf8:	mov	r0, r5
   1fbfc:	mov	r1, r8
   1fc00:	mov	r2, r4
   1fc04:	mov	r3, r9
   1fc08:	bl	ac7c <ReadCompressedUInt64Data>
   1fc0c:	ldr	r0, [r6]
   1fc10:	ldr	r1, [sp, #16]
   1fc14:	add	r0, r0, r1
   1fc18:	ldr	r1, [fp, #20]
   1fc1c:	ldr	r1, [r1]
   1fc20:	mov	r8, r6
   1fc24:	ldr	r6, [sl]
   1fc28:	sub	r2, r6, #1
   1fc2c:	mul	r1, r1, r2
   1fc30:	mvn	r1, r1
   1fc34:	add	r0, r0, r1
   1fc38:	ldr	r1, [fp, #16]
   1fc3c:	ldr	r1, [r1]
   1fc40:	sub	r3, r0, r1
   1fc44:	mov	r0, r5
   1fc48:	add	r1, sp, #24
   1fc4c:	mov	r2, r9
   1fc50:	bl	26ac <InflateSkipData>
   1fc54:	add	r4, r4, r6, lsl #3
   1fc58:	mov	r6, r8
   1fc5c:	add	r7, r7, #1
   1fc60:	ldr	r0, [sl, #4]
   1fc64:	cmp	r7, r0
   1fc68:	ldr	r0, [fp, #16]
   1fc6c:	blt	1fbd8 <ReadCompressedDataSlab2+0x1950>
   1fc70:	b	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fc74:	ldr	r0, [sl, #4]
   1fc78:	cmp	r0, #1
   1fc7c:	ldr	r0, [fp, #16]
   1fc80:	str	r3, [sp, #16]
   1fc84:	blt	1fd2c <ReadCompressedDataSlab2+0x1aa4>
   1fc88:	mov	r9, r8
   1fc8c:	mov	r6, r2
   1fc90:	mov	r7, #0
   1fc94:	ldr	r3, [r0]
   1fc98:	mov	r0, r5
   1fc9c:	add	r1, sp, #24
   1fca0:	mov	r8, r1
   1fca4:	mov	r2, r9
   1fca8:	bl	26ac <InflateSkipData>
   1fcac:	ldr	r0, [sl]
   1fcb0:	str	r0, [sp]
   1fcb4:	mov	r0, r5
   1fcb8:	mov	r1, r8
   1fcbc:	mov	r2, r4
   1fcc0:	mov	r3, r9
   1fcc4:	bl	90d0 <ReadCompressedInt64Data>
   1fcc8:	ldr	r0, [r6]
   1fccc:	ldr	r1, [sp, #16]
   1fcd0:	add	r0, r0, r1
   1fcd4:	ldr	r1, [fp, #20]
   1fcd8:	ldr	r1, [r1]
   1fcdc:	mov	r8, r6
   1fce0:	ldr	r6, [sl]
   1fce4:	sub	r2, r6, #1
   1fce8:	mul	r1, r1, r2
   1fcec:	mvn	r1, r1
   1fcf0:	add	r0, r0, r1
   1fcf4:	ldr	r1, [fp, #16]
   1fcf8:	ldr	r1, [r1]
   1fcfc:	sub	r3, r0, r1
   1fd00:	mov	r0, r5
   1fd04:	add	r1, sp, #24
   1fd08:	mov	r2, r9
   1fd0c:	bl	26ac <InflateSkipData>
   1fd10:	add	r4, r4, r6, lsl #3
   1fd14:	mov	r6, r8
   1fd18:	add	r7, r7, #1
   1fd1c:	ldr	r0, [sl, #4]
   1fd20:	cmp	r7, r0
   1fd24:	ldr	r0, [fp, #16]
   1fd28:	blt	1fc94 <ReadCompressedDataSlab2+0x1a0c>
   1fd2c:	add	r0, sp, #24
   1fd30:	bl	1954 <inflateEnd@plt>
   1fd34:	mov	r0, #0
   1fd38:	sub	sp, fp, #28
   1fd3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fd40 <Mat_Create5>:
   1fd40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd44:	add	fp, sp, #28
   1fd48:	sub	sp, sp, #28
   1fd4c:	mov	sl, r1
   1fd50:	mov	r7, r0
   1fd54:	mov	r4, #0
   1fd58:	strh	r4, [sp, #26]
   1fd5c:	ldr	r1, [pc, #412]	; 1ff00 <Mat_Create5+0x1c0>
   1fd60:	add	r1, pc, r1
   1fd64:	bl	17f8 <fopen@plt>
   1fd68:	cmp	r0, #0
   1fd6c:	beq	1fef4 <Mat_Create5+0x1b4>
   1fd70:	mov	r5, r0
   1fd74:	mov	r0, #44	; 0x2c
   1fd78:	bl	18e8 <malloc@plt>
   1fd7c:	cmp	r0, #0
   1fd80:	beq	1fe24 <Mat_Create5+0xe4>
   1fd84:	mov	r4, r0
   1fd88:	mov	r0, #128	; 0x80
   1fd8c:	mov	r6, #0
   1fd90:	str	r6, [r4, #16]
   1fd94:	str	r0, [r4, #28]
   1fd98:	str	r6, [r4, #32]
   1fd9c:	str	r6, [r4, #36]	; 0x24
   1fda0:	str	r6, [r4, #40]	; 0x28
   1fda4:	mov	r0, #0
   1fda8:	bl	184c <time@plt>
   1fdac:	str	r0, [sp, #20]
   1fdb0:	str	r5, [r4]
   1fdb4:	ldr	r0, [pc, #328]	; 1ff04 <Mat_Create5+0x1c4>
   1fdb8:	add	r0, pc, r0
   1fdbc:	mov	r1, r7
   1fdc0:	bl	1de4 <strdup_printf>
   1fdc4:	str	r0, [r4, #12]
   1fdc8:	mov	r9, #1
   1fdcc:	str	r6, [r4, #20]
   1fdd0:	str	r9, [r4, #24]
   1fdd4:	mov	r0, #128	; 0x80
   1fdd8:	bl	18e8 <malloc@plt>
   1fddc:	mov	r7, r0
   1fde0:	str	r0, [r4, #4]
   1fde4:	mov	r0, #8
   1fde8:	bl	18e8 <malloc@plt>
   1fdec:	mov	r8, r0
   1fdf0:	str	r0, [r4, #8]
   1fdf4:	mov	r0, r7
   1fdf8:	mov	r1, #32
   1fdfc:	mov	r2, #128	; 0x80
   1fe00:	bl	19a8 <memset@plt>
   1fe04:	cmp	sl, #0
   1fe08:	beq	1fe34 <Mat_Create5+0xf4>
   1fe0c:	ldr	r2, [pc, #252]	; 1ff10 <Mat_Create5+0x1d0>
   1fe10:	add	r2, pc, r2
   1fe14:	mov	r0, r7
   1fe18:	mov	r1, #116	; 0x74
   1fe1c:	mov	r3, sl
   1fe20:	b	1fe6c <Mat_Create5+0x12c>
   1fe24:	mov	r0, r5
   1fe28:	bl	19e4 <fclose@plt>
   1fe2c:	mov	r4, #0
   1fe30:	b	1fef4 <Mat_Create5+0x1b4>
   1fe34:	add	r0, sp, #20
   1fe38:	bl	1870 <ctime@plt>
   1fe3c:	mov	r1, #15
   1fe40:	mov	r2, #5
   1fe44:	str	r9, [sp]
   1fe48:	str	r2, [sp, #4]
   1fe4c:	str	r1, [sp, #8]
   1fe50:	str	r0, [sp, #12]
   1fe54:	ldr	r2, [pc, #172]	; 1ff08 <Mat_Create5+0x1c8>
   1fe58:	add	r2, pc, r2
   1fe5c:	ldr	r3, [pc, #168]	; 1ff0c <Mat_Create5+0x1cc>
   1fe60:	add	r3, pc, r3
   1fe64:	mov	r0, r7
   1fe68:	mov	r1, #116	; 0x74
   1fe6c:	bl	1990 <snprintf@plt>
   1fe70:	cmp	r0, #116	; 0x74
   1fe74:	movcs	r0, #0
   1fe78:	strbcs	r0, [r7, #115]	; 0x73
   1fe7c:	ldr	r0, [r4, #8]
   1fe80:	movw	r1, #8224	; 0x2020
   1fe84:	movt	r1, #8224	; 0x2020
   1fe88:	str	r1, [r0, #4]
   1fe8c:	str	r1, [r0]
   1fe90:	mov	r0, #256	; 0x100
   1fe94:	str	r0, [r4, #16]
   1fe98:	strh	r0, [sp, #24]
   1fe9c:	movw	r0, #19785	; 0x4d49
   1fea0:	strh	r0, [sp, #26]
   1fea4:	mov	r0, r7
   1fea8:	mov	r1, #1
   1feac:	mov	r2, #116	; 0x74
   1feb0:	mov	r3, r5
   1feb4:	bl	18c4 <fwrite@plt>
   1feb8:	mov	r0, r8
   1febc:	mov	r1, #1
   1fec0:	mov	r2, #8
   1fec4:	mov	r3, r5
   1fec8:	bl	18c4 <fwrite@plt>
   1fecc:	add	r0, sp, #24
   1fed0:	mov	r1, #2
   1fed4:	mov	r2, #1
   1fed8:	mov	r3, r5
   1fedc:	bl	18c4 <fwrite@plt>
   1fee0:	add	r0, sp, #26
   1fee4:	mov	r1, #2
   1fee8:	mov	r2, #1
   1feec:	mov	r3, r5
   1fef0:	bl	18c4 <fwrite@plt>
   1fef4:	mov	r0, r4
   1fef8:	sub	sp, fp, #28
   1fefc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff00:	.word	0x00029559
   1ff04:	.word	0x00029e2b
   1ff08:	.word	0x00029465
   1ff0c:	.word	0x000294a5
   1ff10:	.word	0x00029dd3

0001ff14 <Mat_VarRead5>:
   1ff14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff18:	add	fp, sp, #28
   1ff1c:	sub	sp, sp, #44	; 0x2c
   1ff20:	mov	r4, r0
   1ff24:	mov	r0, #1
   1ff28:	str	r0, [fp, #-32]	; 0xffffffe0
   1ff2c:	cmp	r1, #0
   1ff30:	beq	20488 <Mat_VarRead5+0x574>
   1ff34:	mov	r5, r1
   1ff38:	ldr	r0, [r1, #4]
   1ff3c:	cmp	r0, #0
   1ff40:	beq	20488 <Mat_VarRead5+0x574>
   1ff44:	mov	r9, r5
   1ff48:	ldr	r0, [r9, #52]!	; 0x34
   1ff4c:	ldr	r1, [r0, #16]
   1ff50:	cmp	r1, #0
   1ff54:	strne	r1, [r5, #40]	; 0x28
   1ff58:	movne	r1, #0
   1ff5c:	strne	r1, [r0, #16]
   1ff60:	subne	sp, fp, #28
   1ff64:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff68:	ldr	r0, [r4]
   1ff6c:	bl	1858 <ftell@plt>
   1ff70:	cmn	r0, #1
   1ff74:	beq	1ff9c <Mat_VarRead5+0x88>
   1ff78:	mov	sl, r0
   1ff7c:	sub	r1, fp, #32
   1ff80:	mov	r0, r5
   1ff84:	bl	4479c <SafeMulDims>
   1ff88:	cmp	r0, #0
   1ff8c:	beq	1ffb0 <Mat_VarRead5+0x9c>
   1ff90:	ldr	r0, [pc, #4076]	; 20f84 <Mat_VarRead5+0x1070>
   1ff94:	add	r0, pc, r0
   1ff98:	b	1ffa4 <Mat_VarRead5+0x90>
   1ff9c:	ldr	r0, [pc, #4068]	; 20f88 <Mat_VarRead5+0x1074>
   1ffa0:	add	r0, pc, r0
   1ffa4:	bl	19cc <Mat_Critical@plt>
   1ffa8:	sub	sp, fp, #28
   1ffac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ffb0:	ldr	r1, [r5, #16]
   1ffb4:	cmp	r1, #16
   1ffb8:	bhi	20104 <Mat_VarRead5+0x1f0>
   1ffbc:	ldr	r7, [r4, #20]
   1ffc0:	add	r0, pc, #4
   1ffc4:	ldr	r2, [r0, r1, lsl #2]
   1ffc8:	add	pc, r0, r2
   1ffcc:	.word	0x00000044
   1ffd0:	.word	0x0000007c
   1ffd4:	.word	0x000000c4
   1ffd8:	.word	0x00000138
   1ffdc:	.word	0x00000144
   1ffe0:	.word	0x000001e8
   1ffe4:	.word	0x000002b8
   1ffe8:	.word	0x000002d8
   1ffec:	.word	0x000002f8
   1fff0:	.word	0x00000318
   1fff4:	.word	0x00000338
   1fff8:	.word	0x00000358
   1fffc:	.word	0x00000378
   20000:	.word	0x00000398
   20004:	.word	0x000003b8
   20008:	.word	0x000003d8
   2000c:	.word	0x000004c4
   20010:	mov	r0, #8
   20014:	mov	r6, #0
   20018:	mov	r1, #9
   2001c:	mov	r2, #2
   20020:	str	r6, [r5]
   20024:	str	r2, [r5, #4]
   20028:	str	r1, [r5, #8]
   2002c:	str	r0, [r5, #12]
   20030:	mov	r0, #8
   20034:	bl	18e8 <malloc@plt>
   20038:	str	r0, [r5, #32]
   2003c:	str	r6, [r0]
   20040:	str	r6, [r0, #4]
   20044:	b	203c8 <Mat_VarRead5+0x4b4>
   20048:	ldr	r7, [r5, #40]	; 0x28
   2004c:	cmp	r7, #0
   20050:	beq	205a0 <Mat_VarRead5+0x68c>
   20054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20058:	cmp	r0, #0
   2005c:	beq	20084 <Mat_VarRead5+0x170>
   20060:	mov	r6, #0
   20064:	ldr	r1, [r7, r6, lsl #2]
   20068:	cmp	r1, #0
   2006c:	movne	r0, r4
   20070:	blne	1ff14 <Mat_VarRead5>
   20074:	add	r6, r6, #1
   20078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2007c:	cmp	r6, r0
   20080:	bcc	20064 <Mat_VarRead5+0x150>
   20084:	mov	r0, #21
   20088:	str	r0, [r5, #8]
   2008c:	b	203c8 <Mat_VarRead5+0x4b4>
   20090:	mov	r0, #22
   20094:	str	r0, [r5, #8]
   20098:	ldr	r0, [r5]
   2009c:	cmp	r0, #0
   200a0:	beq	203c8 <Mat_VarRead5+0x4b4>
   200a4:	ldr	r0, [r5, #12]
   200a8:	cmp	r0, #0
   200ac:	ldrne	r0, [r5, #40]	; 0x28
   200b0:	cmpne	r0, #0
   200b4:	beq	203c8 <Mat_VarRead5+0x4b4>
   200b8:	ldr	r0, [r5, #52]	; 0x34
   200bc:	ldr	r2, [r0, #4]
   200c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   200c4:	add	r0, sp, #32
   200c8:	bl	4481c <SafeMul>
   200cc:	ldr	r0, [sp, #32]
   200d0:	cmp	r0, #0
   200d4:	beq	203c8 <Mat_VarRead5+0x4b4>
   200d8:	ldr	r7, [r5, #40]	; 0x28
   200dc:	mov	r6, #0
   200e0:	ldr	r1, [r7, r6, lsl #2]
   200e4:	cmp	r1, #0
   200e8:	movne	r0, r4
   200ec:	blne	1ff14 <Mat_VarRead5>
   200f0:	add	r6, r6, #1
   200f4:	ldr	r0, [sp, #32]
   200f8:	cmp	r6, r0
   200fc:	bcc	200e0 <Mat_VarRead5+0x1cc>
   20100:	b	203c8 <Mat_VarRead5+0x4b4>
   20104:	ldr	r0, [pc, #4068]	; 210f0 <Mat_VarRead5+0x11dc>
   20108:	add	r0, pc, r0
   2010c:	b	205ac <Mat_VarRead5+0x698>
   20110:	ldr	r0, [r4]
   20114:	ldr	r1, [r5, #52]	; 0x34
   20118:	ldr	r1, [r1]
   2011c:	mov	r6, #0
   20120:	mov	r2, #0
   20124:	bl	1a68 <fseek@plt>
   20128:	ldr	r0, [r5, #48]	; 0x30
   2012c:	cmp	r0, #1
   20130:	bne	204e4 <Mat_VarRead5+0x5d0>
   20134:	ldr	r0, [r9]
   20138:	ldr	r1, [r0, #12]
   2013c:	str	r6, [r1, #4]
   20140:	add	r8, sp, #32
   20144:	mov	r0, r4
   20148:	mov	r2, r8
   2014c:	bl	30b4 <InflateDataType>
   20150:	mov	r6, r7
   20154:	cmp	r7, #0
   20158:	beq	20164 <Mat_VarRead5+0x250>
   2015c:	add	r0, sp, #32
   20160:	bl	1c3c <Mat_uint32Swap>
   20164:	ldr	r0, [sp, #32]
   20168:	uxtb	r7, r0
   2016c:	cmp	r7, #25
   20170:	movcs	r7, #0
   20174:	cmp	r0, #65536	; 0x10000
   20178:	bcs	206e4 <Mat_VarRead5+0x7d0>
   2017c:	ldr	r0, [r9]
   20180:	ldr	r1, [r0, #12]
   20184:	add	r8, r8, #4
   20188:	mov	r0, r4
   2018c:	mov	r2, r8
   20190:	bl	30b4 <InflateDataType>
   20194:	cmp	r6, #0
   20198:	beq	201a4 <Mat_VarRead5+0x290>
   2019c:	mov	r0, r8
   201a0:	bl	1c3c <Mat_uint32Swap>
   201a4:	mov	r0, #0
   201a8:	str	r0, [sp, #24]
   201ac:	ldr	r6, [sp, #36]	; 0x24
   201b0:	b	206f0 <Mat_VarRead5+0x7dc>
   201b4:	str	r7, [sp, #20]
   201b8:	mov	r0, #0
   201bc:	str	r0, [sp, #28]
   201c0:	mov	r0, #28
   201c4:	str	r0, [r5, #12]
   201c8:	mov	r0, #28
   201cc:	bl	18e8 <malloc@plt>
   201d0:	str	r0, [r5, #40]	; 0x28
   201d4:	cmp	r0, #0
   201d8:	beq	205b4 <Mat_VarRead5+0x6a0>
   201dc:	mov	r7, r0
   201e0:	ldr	r0, [r5]
   201e4:	str	r0, [r7]
   201e8:	ldr	r0, [r4]
   201ec:	ldr	r1, [r5, #52]	; 0x34
   201f0:	ldr	r1, [r1]
   201f4:	mov	r6, #0
   201f8:	mov	r2, #0
   201fc:	bl	1a68 <fseek@plt>
   20200:	ldr	r0, [r5, #48]	; 0x30
   20204:	cmp	r0, #1
   20208:	str	r7, [sp, #24]
   2020c:	bne	205c4 <Mat_VarRead5+0x6b0>
   20210:	ldr	r0, [r9]
   20214:	ldr	r1, [r0, #12]
   20218:	str	r6, [r1, #4]
   2021c:	add	r2, sp, #32
   20220:	mov	r0, r4
   20224:	bl	30b4 <InflateDataType>
   20228:	ldr	r0, [r4, #20]
   2022c:	cmp	r0, #0
   20230:	beq	2023c <Mat_VarRead5+0x328>
   20234:	add	r0, sp, #32
   20238:	bl	1c3c <Mat_uint32Swap>
   2023c:	ldr	r0, [sp, #32]
   20240:	uxtb	r6, r0
   20244:	mov	r1, #0
   20248:	cmp	r6, #25
   2024c:	movcs	r6, r1
   20250:	cmp	r0, #65536	; 0x10000
   20254:	bcs	2063c <Mat_VarRead5+0x728>
   20258:	mov	r0, #0
   2025c:	str	r0, [sp, #16]
   20260:	ldr	r0, [r9]
   20264:	ldr	r1, [r0, #12]
   20268:	mov	r0, #1
   2026c:	str	r0, [sp]
   20270:	add	r2, sp, #28
   20274:	mov	r0, r4
   20278:	mov	r3, #5
   2027c:	bl	c6d4 <ReadCompressedInt32Data>
   20280:	b	2064c <Mat_VarRead5+0x738>
   20284:	ldr	r0, [r4]
   20288:	ldr	r1, [r5, #52]	; 0x34
   2028c:	ldr	r1, [r1]
   20290:	mov	r2, #0
   20294:	bl	1a68 <fseek@plt>
   20298:	mov	r0, #8
   2029c:	mov	r1, #9
   202a0:	b	203c0 <Mat_VarRead5+0x4ac>
   202a4:	ldr	r0, [r4]
   202a8:	ldr	r1, [r5, #52]	; 0x34
   202ac:	ldr	r1, [r1]
   202b0:	mov	r2, #0
   202b4:	bl	1a68 <fseek@plt>
   202b8:	mov	r0, #4
   202bc:	mov	r1, #7
   202c0:	b	203c0 <Mat_VarRead5+0x4ac>
   202c4:	ldr	r0, [r4]
   202c8:	ldr	r1, [r5, #52]	; 0x34
   202cc:	ldr	r1, [r1]
   202d0:	mov	r2, #0
   202d4:	bl	1a68 <fseek@plt>
   202d8:	mov	r0, #1
   202dc:	str	r0, [r5, #8]
   202e0:	b	203c4 <Mat_VarRead5+0x4b0>
   202e4:	ldr	r0, [r4]
   202e8:	ldr	r1, [r5, #52]	; 0x34
   202ec:	ldr	r1, [r1]
   202f0:	mov	r2, #0
   202f4:	bl	1a68 <fseek@plt>
   202f8:	mov	r0, #1
   202fc:	mov	r1, #2
   20300:	b	203c0 <Mat_VarRead5+0x4ac>
   20304:	ldr	r0, [r4]
   20308:	ldr	r1, [r5, #52]	; 0x34
   2030c:	ldr	r1, [r1]
   20310:	mov	r2, #0
   20314:	bl	1a68 <fseek@plt>
   20318:	mov	r0, #2
   2031c:	mov	r1, #3
   20320:	b	203c0 <Mat_VarRead5+0x4ac>
   20324:	ldr	r0, [r4]
   20328:	ldr	r1, [r5, #52]	; 0x34
   2032c:	ldr	r1, [r1]
   20330:	mov	r2, #0
   20334:	bl	1a68 <fseek@plt>
   20338:	mov	r0, #2
   2033c:	mov	r1, #4
   20340:	b	203c0 <Mat_VarRead5+0x4ac>
   20344:	ldr	r0, [r4]
   20348:	ldr	r1, [r5, #52]	; 0x34
   2034c:	ldr	r1, [r1]
   20350:	mov	r2, #0
   20354:	bl	1a68 <fseek@plt>
   20358:	mov	r0, #4
   2035c:	mov	r1, #5
   20360:	b	203c0 <Mat_VarRead5+0x4ac>
   20364:	ldr	r0, [r4]
   20368:	ldr	r1, [r5, #52]	; 0x34
   2036c:	ldr	r1, [r1]
   20370:	mov	r2, #0
   20374:	bl	1a68 <fseek@plt>
   20378:	mov	r0, #4
   2037c:	mov	r1, #6
   20380:	b	203c0 <Mat_VarRead5+0x4ac>
   20384:	ldr	r0, [r4]
   20388:	ldr	r1, [r5, #52]	; 0x34
   2038c:	ldr	r1, [r1]
   20390:	mov	r2, #0
   20394:	bl	1a68 <fseek@plt>
   20398:	mov	r0, #8
   2039c:	mov	r1, #12
   203a0:	b	203c0 <Mat_VarRead5+0x4ac>
   203a4:	ldr	r0, [r4]
   203a8:	ldr	r1, [r5, #52]	; 0x34
   203ac:	ldr	r1, [r1]
   203b0:	mov	r2, #0
   203b4:	bl	1a68 <fseek@plt>
   203b8:	mov	r0, #8
   203bc:	mov	r1, #13
   203c0:	str	r1, [r5, #8]
   203c4:	str	r0, [r5, #12]
   203c8:	ldr	r0, [r5, #16]
   203cc:	sub	r0, r0, #6
   203d0:	cmp	r0, #9
   203d4:	bhi	20478 <Mat_VarRead5+0x564>
   203d8:	ldr	r2, [r5, #12]
   203dc:	ldr	r6, [r5, #20]
   203e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   203e4:	mov	r0, r5
   203e8:	bl	4481c <SafeMul>
   203ec:	ldr	r0, [r5]
   203f0:	cmp	r6, #0
   203f4:	beq	20438 <Mat_VarRead5+0x524>
   203f8:	bl	4470c <ComplexMalloc>
   203fc:	cmp	r0, #0
   20400:	beq	20460 <Mat_VarRead5+0x54c>
   20404:	mov	r7, r0
   20408:	ldr	r2, [r0]
   2040c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20410:	mov	r0, r4
   20414:	mov	r1, r5
   20418:	bl	217fc <Mat_VarReadNumeric5>
   2041c:	ldr	r2, [r7, #4]
   20420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20424:	mov	r0, r4
   20428:	mov	r1, r5
   2042c:	bl	217fc <Mat_VarReadNumeric5>
   20430:	str	r7, [r5, #40]	; 0x28
   20434:	b	20478 <Mat_VarRead5+0x564>
   20438:	bl	18e8 <malloc@plt>
   2043c:	str	r0, [r5, #40]	; 0x28
   20440:	cmp	r0, #0
   20444:	beq	2046c <Mat_VarRead5+0x558>
   20448:	mov	r2, r0
   2044c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20450:	mov	r0, r4
   20454:	mov	r1, r5
   20458:	bl	217fc <Mat_VarReadNumeric5>
   2045c:	b	20478 <Mat_VarRead5+0x564>
   20460:	ldr	r0, [pc, #4056]	; 21440 <Mat_VarRead5+0x152c>
   20464:	add	r0, pc, r0
   20468:	b	20474 <Mat_VarRead5+0x560>
   2046c:	ldr	r0, [pc, #4088]	; 2146c <Mat_VarRead5+0x1558>
   20470:	add	r0, pc, r0
   20474:	bl	19cc <Mat_Critical@plt>
   20478:	ldr	r0, [r4]
   2047c:	mov	r1, sl
   20480:	mov	r2, #0
   20484:	bl	1a68 <fseek@plt>
   20488:	sub	sp, fp, #28
   2048c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20490:	ldr	r0, [r5]
   20494:	cmp	r0, #0
   20498:	ldrne	r1, [r5, #12]
   2049c:	cmpne	r1, #0
   204a0:	beq	203c8 <Mat_VarRead5+0x4b4>
   204a4:	ldr	r8, [r5, #40]	; 0x28
   204a8:	cmp	r8, #0
   204ac:	beq	204d8 <Mat_VarRead5+0x5c4>
   204b0:	cmp	r1, r0
   204b4:	bhi	204d8 <Mat_VarRead5+0x5c4>
   204b8:	udiv	r6, r0, r1
   204bc:	mov	r7, #0
   204c0:	ldr	r1, [r8, r7, lsl #2]
   204c4:	mov	r0, r4
   204c8:	bl	1ff14 <Mat_VarRead5>
   204cc:	add	r7, r7, #1
   204d0:	cmp	r7, r6
   204d4:	bcc	204c0 <Mat_VarRead5+0x5ac>
   204d8:	mov	r0, #24
   204dc:	str	r0, [r5, #8]
   204e0:	b	203c8 <Mat_VarRead5+0x4b4>
   204e4:	ldr	r3, [r4]
   204e8:	add	r8, sp, #32
   204ec:	mov	r0, #1
   204f0:	str	r0, [sp, #24]
   204f4:	mov	r0, r8
   204f8:	mov	r1, #4
   204fc:	mov	r2, #1
   20500:	bl	18d0 <fread@plt>
   20504:	mov	r6, r7
   20508:	cmp	r7, #0
   2050c:	beq	20518 <Mat_VarRead5+0x604>
   20510:	add	r0, sp, #32
   20514:	bl	1c3c <Mat_uint32Swap>
   20518:	ldr	r0, [sp, #32]
   2051c:	uxtb	r7, r0
   20520:	mov	r1, #0
   20524:	cmp	r7, #25
   20528:	movcs	r7, r1
   2052c:	cmp	r1, r0, lsr #16
   20530:	bne	20564 <Mat_VarRead5+0x650>
   20534:	ldr	r3, [r4]
   20538:	add	r8, r8, #4
   2053c:	mov	r0, r8
   20540:	mov	r1, #4
   20544:	mov	r2, #1
   20548:	bl	18d0 <fread@plt>
   2054c:	cmp	r6, #0
   20550:	beq	2055c <Mat_VarRead5+0x648>
   20554:	mov	r0, r8
   20558:	bl	1c3c <Mat_uint32Swap>
   2055c:	mov	r0, #0
   20560:	str	r0, [sp, #24]
   20564:	mov	r0, #2
   20568:	str	r0, [r5, #8]
   2056c:	mov	r0, #2
   20570:	bl	193c <Mat_SizeOf@plt>
   20574:	mov	r2, r0
   20578:	str	r0, [r5, #12]
   2057c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20580:	mov	r0, r5
   20584:	bl	4481c <SafeMul>
   20588:	cmp	r0, #0
   2058c:	beq	20704 <Mat_VarRead5+0x7f0>
   20590:	ldr	r0, [pc, #4080]	; 21588 <Mat_VarRead5+0x1674>
   20594:	add	r0, pc, r0
   20598:	bl	19cc <Mat_Critical@plt>
   2059c:	b	203c8 <Mat_VarRead5+0x4b4>
   205a0:	ldr	r1, [r5, #36]	; 0x24
   205a4:	ldr	r0, [pc, #4088]	; 215a4 <Mat_VarRead5+0x1690>
   205a8:	add	r0, pc, r0
   205ac:	bl	19cc <Mat_Critical@plt>
   205b0:	b	203c8 <Mat_VarRead5+0x4b4>
   205b4:	ldr	r0, [pc, #4076]	; 215a8 <Mat_VarRead5+0x1694>
   205b8:	add	r0, pc, r0
   205bc:	bl	19cc <Mat_Critical@plt>
   205c0:	b	203c8 <Mat_VarRead5+0x4b4>
   205c4:	ldr	r3, [r4]
   205c8:	add	r0, sp, #32
   205cc:	mov	r1, #4
   205d0:	mov	r2, #1
   205d4:	bl	18d0 <fread@plt>
   205d8:	ldr	r0, [r4, #20]
   205dc:	cmp	r0, #0
   205e0:	beq	205ec <Mat_VarRead5+0x6d8>
   205e4:	add	r0, sp, #32
   205e8:	bl	1c3c <Mat_uint32Swap>
   205ec:	ldr	r0, [sp, #32]
   205f0:	uxtb	r6, r0
   205f4:	mov	r1, #0
   205f8:	cmp	r6, #25
   205fc:	movcs	r6, r1
   20600:	cmp	r0, #65536	; 0x10000
   20604:	bcs	2063c <Mat_VarRead5+0x728>
   20608:	mov	r0, #0
   2060c:	str	r0, [sp, #16]
   20610:	ldr	r3, [r4]
   20614:	add	r0, sp, #28
   20618:	mov	r1, #4
   2061c:	mov	r2, #1
   20620:	bl	18d0 <fread@plt>
   20624:	ldr	r0, [r4, #20]
   20628:	cmp	r0, #0
   2062c:	beq	2064c <Mat_VarRead5+0x738>
   20630:	add	r0, sp, #28
   20634:	bl	1c28 <Mat_int32Swap>
   20638:	b	2064c <Mat_VarRead5+0x738>
   2063c:	lsr	r0, r0, #16
   20640:	str	r0, [sp, #28]
   20644:	mov	r0, #1
   20648:	str	r0, [sp, #16]
   2064c:	ldr	r0, [sp, #28]
   20650:	asr	r1, r0, #31
   20654:	add	r0, r0, r1, lsr #30
   20658:	asr	r7, r0, #2
   2065c:	ldr	r8, [sp, #24]
   20660:	str	r7, [r8, #8]
   20664:	bic	r0, r0, #3
   20668:	bl	18e8 <malloc@plt>
   2066c:	str	r0, [r8, #4]
   20670:	cmp	r0, #0
   20674:	beq	207a8 <Mat_VarRead5+0x894>
   20678:	mov	r2, r0
   2067c:	ldr	r0, [r5, #48]	; 0x30
   20680:	cmp	r0, #1
   20684:	beq	207b8 <Mat_VarRead5+0x8a4>
   20688:	mov	r1, #0
   2068c:	str	r1, [sp, #12]
   20690:	cmp	r0, #0
   20694:	bne	20880 <Mat_VarRead5+0x96c>
   20698:	mov	r0, r4
   2069c:	mov	r1, r2
   206a0:	mov	r2, r6
   206a4:	mov	r3, r7
   206a8:	bl	b250 <ReadInt32Data>
   206ac:	ldr	r1, [sp, #16]
   206b0:	cmp	r1, #0
   206b4:	addne	r0, r0, #4
   206b8:	asr	r1, r0, #31
   206bc:	add	r1, r0, r1, lsr #29
   206c0:	bic	r1, r1, #7
   206c4:	str	r0, [sp, #12]
   206c8:	subs	r1, r0, r1
   206cc:	beq	20808 <Mat_VarRead5+0x8f4>
   206d0:	ldr	r0, [r4]
   206d4:	rsb	r1, r1, #8
   206d8:	mov	r2, #1
   206dc:	bl	1a68 <fseek@plt>
   206e0:	b	20808 <Mat_VarRead5+0x8f4>
   206e4:	lsr	r6, r0, #16
   206e8:	mov	r0, #1
   206ec:	str	r0, [sp, #24]
   206f0:	str	r7, [r5, #8]
   206f4:	mov	r0, r7
   206f8:	bl	193c <Mat_SizeOf@plt>
   206fc:	str	r0, [r5, #12]
   20700:	str	r6, [r5]
   20704:	ldr	r0, [r5, #20]
   20708:	cmp	r0, #0
   2070c:	bne	203c8 <Mat_VarRead5+0x4b4>
   20710:	ldr	r6, [r5]
   20714:	add	r0, r6, #1
   20718:	mov	r1, #1
   2071c:	bl	17b0 <calloc@plt>
   20720:	str	r0, [r5, #40]	; 0x28
   20724:	cmp	r0, #0
   20728:	beq	209b0 <Mat_VarRead5+0xa9c>
   2072c:	cmp	r6, #0
   20730:	beq	203c8 <Mat_VarRead5+0x4b4>
   20734:	ldr	r2, [r5, #12]
   20738:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2073c:	add	r0, sp, #28
   20740:	bl	4481c <SafeMul>
   20744:	cmp	r0, #0
   20748:	bne	203c8 <Mat_VarRead5+0x4b4>
   2074c:	ldr	r0, [r5]
   20750:	ldr	r1, [sp, #28]
   20754:	cmp	r1, r0
   20758:	bhi	203c8 <Mat_VarRead5+0x4b4>
   2075c:	ldr	r0, [r5, #48]	; 0x30
   20760:	cmp	r0, #1
   20764:	beq	20d94 <Mat_VarRead5+0xe80>
   20768:	cmp	r0, #0
   2076c:	bne	203c8 <Mat_VarRead5+0x4b4>
   20770:	ldr	r1, [r5, #40]	; 0x28
   20774:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20778:	mov	r0, r4
   2077c:	mov	r2, r7
   20780:	bl	14ef8 <ReadCharData>
   20784:	ldr	r1, [sp, #24]
   20788:	cmp	r1, #0
   2078c:	addne	r0, r0, #4
   20790:	asr	r1, r0, #31
   20794:	add	r1, r0, r1, lsr #29
   20798:	bic	r1, r1, #7
   2079c:	subs	r1, r0, r1
   207a0:	bne	21678 <Mat_VarRead5+0x1764>
   207a4:	b	203c8 <Mat_VarRead5+0x4b4>
   207a8:	ldr	r0, [pc, #4060]	; 2178c <Mat_VarRead5+0x1878>
   207ac:	add	r0, pc, r0
   207b0:	bl	19cc <Mat_Critical@plt>
   207b4:	b	203c8 <Mat_VarRead5+0x4b4>
   207b8:	ldr	r0, [r9]
   207bc:	ldr	r1, [r0, #12]
   207c0:	str	r7, [sp]
   207c4:	mov	r0, r4
   207c8:	mov	r3, r6
   207cc:	bl	c6d4 <ReadCompressedInt32Data>
   207d0:	ldr	r1, [sp, #16]
   207d4:	cmp	r1, #0
   207d8:	addne	r0, r0, #4
   207dc:	asr	r1, r0, #31
   207e0:	add	r1, r0, r1, lsr #29
   207e4:	bic	r1, r1, #7
   207e8:	str	r0, [sp, #12]
   207ec:	subs	r0, r0, r1
   207f0:	beq	20808 <Mat_VarRead5+0x8f4>
   207f4:	ldr	r1, [r9]
   207f8:	ldr	r1, [r1, #12]
   207fc:	rsb	r2, r0, #8
   20800:	mov	r0, r4
   20804:	bl	234c <InflateSkip>
   20808:	ldr	r0, [r5, #48]	; 0x30
   2080c:	cmp	r0, #1
   20810:	bne	20880 <Mat_VarRead5+0x96c>
   20814:	ldr	r0, [r9]
   20818:	ldr	r1, [r0, #12]
   2081c:	mov	r6, #0
   20820:	str	r6, [r1, #4]
   20824:	add	r2, sp, #32
   20828:	mov	r0, r4
   2082c:	bl	30b4 <InflateDataType>
   20830:	ldr	r0, [r4, #20]
   20834:	cmp	r0, #0
   20838:	beq	20844 <Mat_VarRead5+0x930>
   2083c:	add	r0, sp, #32
   20840:	bl	1c3c <Mat_uint32Swap>
   20844:	ldr	r0, [sp, #32]
   20848:	uxtb	r1, r0
   2084c:	cmp	r1, #25
   20850:	movcc	r6, r1
   20854:	cmp	r0, #65536	; 0x10000
   20858:	bcs	208f8 <Mat_VarRead5+0x9e4>
   2085c:	ldr	r0, [r9]
   20860:	ldr	r1, [r0, #12]
   20864:	mov	r0, #1
   20868:	str	r0, [sp]
   2086c:	add	r2, sp, #28
   20870:	mov	r0, r4
   20874:	mov	r3, #5
   20878:	bl	c6d4 <ReadCompressedInt32Data>
   2087c:	b	20908 <Mat_VarRead5+0x9f4>
   20880:	ldr	r3, [r4]
   20884:	add	r0, sp, #32
   20888:	mov	r1, #4
   2088c:	mov	r2, #1
   20890:	bl	18d0 <fread@plt>
   20894:	ldr	r0, [r4, #20]
   20898:	cmp	r0, #0
   2089c:	beq	208a8 <Mat_VarRead5+0x994>
   208a0:	add	r0, sp, #32
   208a4:	bl	1c3c <Mat_uint32Swap>
   208a8:	ldr	r0, [sp, #32]
   208ac:	uxtb	r6, r0
   208b0:	mov	r1, #0
   208b4:	cmp	r6, #25
   208b8:	movcs	r6, r1
   208bc:	cmp	r0, #65536	; 0x10000
   208c0:	bcs	208f8 <Mat_VarRead5+0x9e4>
   208c4:	ldr	r3, [r4]
   208c8:	add	r0, sp, #28
   208cc:	mov	r1, #4
   208d0:	mov	r2, #1
   208d4:	bl	18d0 <fread@plt>
   208d8:	ldr	r0, [r4, #20]
   208dc:	cmp	r0, #0
   208e0:	beq	20908 <Mat_VarRead5+0x9f4>
   208e4:	mov	r0, #0
   208e8:	str	r0, [sp, #16]
   208ec:	add	r0, sp, #28
   208f0:	bl	1c28 <Mat_int32Swap>
   208f4:	b	20910 <Mat_VarRead5+0x9fc>
   208f8:	lsr	r0, r0, #16
   208fc:	str	r0, [sp, #28]
   20900:	mov	r0, #1
   20904:	b	2090c <Mat_VarRead5+0x9f8>
   20908:	mov	r0, #0
   2090c:	str	r0, [sp, #16]
   20910:	ldr	r0, [sp, #28]
   20914:	asr	r1, r0, #31
   20918:	add	r0, r0, r1, lsr #30
   2091c:	asr	r7, r0, #2
   20920:	ldr	r8, [sp, #24]
   20924:	str	r7, [r8, #16]
   20928:	bic	r0, r0, #3
   2092c:	bl	18e8 <malloc@plt>
   20930:	str	r0, [r8, #12]
   20934:	cmp	r0, #0
   20938:	beq	209a0 <Mat_VarRead5+0xa8c>
   2093c:	mov	r2, r0
   20940:	ldr	r0, [r5, #48]	; 0x30
   20944:	cmp	r0, #1
   20948:	beq	209c0 <Mat_VarRead5+0xaac>
   2094c:	cmp	r0, #0
   20950:	bne	20a8c <Mat_VarRead5+0xb78>
   20954:	mov	r0, r4
   20958:	mov	r1, r2
   2095c:	mov	r2, r6
   20960:	mov	r3, r7
   20964:	bl	b250 <ReadInt32Data>
   20968:	ldr	r1, [sp, #16]
   2096c:	cmp	r1, #0
   20970:	addne	r0, r0, #4
   20974:	asr	r1, r0, #31
   20978:	add	r1, r0, r1, lsr #29
   2097c:	bic	r1, r1, #7
   20980:	str	r0, [sp, #12]
   20984:	subs	r1, r0, r1
   20988:	beq	20a10 <Mat_VarRead5+0xafc>
   2098c:	ldr	r0, [r4]
   20990:	rsb	r1, r1, #8
   20994:	mov	r2, #1
   20998:	bl	1a68 <fseek@plt>
   2099c:	b	20a10 <Mat_VarRead5+0xafc>
   209a0:	ldr	r0, [pc, #3664]	; 217f8 <Mat_VarRead5+0x18e4>
   209a4:	add	r0, pc, r0
   209a8:	bl	19cc <Mat_Critical@plt>
   209ac:	b	203c8 <Mat_VarRead5+0x4b4>
   209b0:	ldr	r0, [pc, #3636]	; 217ec <Mat_VarRead5+0x18d8>
   209b4:	add	r0, pc, r0
   209b8:	bl	19cc <Mat_Critical@plt>
   209bc:	b	203c8 <Mat_VarRead5+0x4b4>
   209c0:	ldr	r0, [r9]
   209c4:	ldr	r1, [r0, #12]
   209c8:	str	r7, [sp]
   209cc:	mov	r0, r4
   209d0:	mov	r3, r6
   209d4:	bl	c6d4 <ReadCompressedInt32Data>
   209d8:	ldr	r1, [sp, #16]
   209dc:	cmp	r1, #0
   209e0:	addne	r0, r0, #4
   209e4:	asr	r1, r0, #31
   209e8:	add	r1, r0, r1, lsr #29
   209ec:	bic	r1, r1, #7
   209f0:	str	r0, [sp, #12]
   209f4:	subs	r0, r0, r1
   209f8:	beq	20a10 <Mat_VarRead5+0xafc>
   209fc:	ldr	r1, [r9]
   20a00:	ldr	r1, [r1, #12]
   20a04:	rsb	r2, r0, #8
   20a08:	mov	r0, r4
   20a0c:	bl	234c <InflateSkip>
   20a10:	ldr	r0, [r5, #48]	; 0x30
   20a14:	cmp	r0, #1
   20a18:	bne	20a8c <Mat_VarRead5+0xb78>
   20a1c:	ldr	r0, [r9]
   20a20:	ldr	r1, [r0, #12]
   20a24:	mov	r6, #0
   20a28:	str	r6, [r1, #4]
   20a2c:	add	r2, sp, #32
   20a30:	mov	r0, r4
   20a34:	bl	30b4 <InflateDataType>
   20a38:	ldr	r0, [r4, #20]
   20a3c:	cmp	r0, #0
   20a40:	beq	20a4c <Mat_VarRead5+0xb38>
   20a44:	add	r0, sp, #32
   20a48:	bl	1c3c <Mat_uint32Swap>
   20a4c:	ldr	r0, [sp, #32]
   20a50:	uxtb	r1, r0
   20a54:	cmp	r1, #25
   20a58:	movcc	r6, r1
   20a5c:	cmp	r0, #65536	; 0x10000
   20a60:	bcs	20afc <Mat_VarRead5+0xbe8>
   20a64:	ldr	r0, [r9]
   20a68:	ldr	r1, [r0, #12]
   20a6c:	mov	r0, #1
   20a70:	str	r0, [sp]
   20a74:	add	r2, sp, #28
   20a78:	mov	r0, r4
   20a7c:	mov	r3, #5
   20a80:	bl	c6d4 <ReadCompressedInt32Data>
   20a84:	mov	r8, #0
   20a88:	b	20b08 <Mat_VarRead5+0xbf4>
   20a8c:	ldr	r3, [r4]
   20a90:	add	r0, sp, #32
   20a94:	mov	r1, #4
   20a98:	mov	r2, #1
   20a9c:	bl	18d0 <fread@plt>
   20aa0:	ldr	r0, [r4, #20]
   20aa4:	cmp	r0, #0
   20aa8:	beq	20ab4 <Mat_VarRead5+0xba0>
   20aac:	add	r0, sp, #32
   20ab0:	bl	1c3c <Mat_uint32Swap>
   20ab4:	ldr	r0, [sp, #32]
   20ab8:	uxtb	r6, r0
   20abc:	mov	r8, #0
   20ac0:	cmp	r6, #25
   20ac4:	movcs	r6, r8
   20ac8:	cmp	r0, #65536	; 0x10000
   20acc:	bcs	20afc <Mat_VarRead5+0xbe8>
   20ad0:	ldr	r3, [r4]
   20ad4:	add	r0, sp, #28
   20ad8:	mov	r1, #4
   20adc:	mov	r2, #1
   20ae0:	bl	18d0 <fread@plt>
   20ae4:	ldr	r0, [r4, #20]
   20ae8:	cmp	r0, #0
   20aec:	beq	20b08 <Mat_VarRead5+0xbf4>
   20af0:	add	r0, sp, #28
   20af4:	bl	1c28 <Mat_int32Swap>
   20af8:	b	20b08 <Mat_VarRead5+0xbf4>
   20afc:	lsr	r0, r0, #16
   20b00:	str	r0, [sp, #28]
   20b04:	mov	r8, #1
   20b08:	ldr	r0, [r5, #28]
   20b0c:	cmp	r0, #0
   20b10:	mov	r7, r6
   20b14:	movwne	r7, #2
   20b18:	cmp	r6, #9
   20b1c:	movne	r7, r6
   20b20:	str	r7, [r5, #8]
   20b24:	mov	r0, r7
   20b28:	bl	193c <Mat_SizeOf@plt>
   20b2c:	cmp	r0, #0
   20b30:	beq	203c8 <Mat_VarRead5+0x4b4>
   20b34:	str	r7, [sp, #8]
   20b38:	str	r8, [sp, #16]
   20b3c:	ldr	r1, [sp, #28]
   20b40:	udiv	r7, r1, r0
   20b44:	ldr	r6, [sp, #24]
   20b48:	str	r7, [r6, #20]!
   20b4c:	ldr	r0, [r5, #8]
   20b50:	ldr	r8, [r5, #20]
   20b54:	bl	193c <Mat_SizeOf@plt>
   20b58:	mul	r0, r0, r7
   20b5c:	cmp	r8, #0
   20b60:	beq	20bf8 <Mat_VarRead5+0xce4>
   20b64:	bl	4470c <ComplexMalloc>
   20b68:	cmp	r0, #0
   20b6c:	beq	20c8c <Mat_VarRead5+0xd78>
   20b70:	mov	r8, r0
   20b74:	str	r6, [sp, #4]
   20b78:	ldr	r0, [r5, #48]	; 0x30
   20b7c:	cmp	r0, #1
   20b80:	beq	20cac <Mat_VarRead5+0xd98>
   20b84:	cmp	r0, #0
   20b88:	bne	21564 <Mat_VarRead5+0x1650>
   20b8c:	ldr	r0, [r5, #8]
   20b90:	sub	r0, r0, #1
   20b94:	cmp	r0, #12
   20b98:	bhi	20ed4 <Mat_VarRead5+0xfc0>
   20b9c:	add	r1, pc, #4
   20ba0:	ldr	r0, [r1, r0, lsl #2]
   20ba4:	add	pc, r1, r0
   20ba8:	.word	0x00000034
   20bac:	.word	0x00000230
   20bb0:	.word	0x0000024c
   20bb4:	.word	0x00000268
   20bb8:	.word	0x00000284
   20bbc:	.word	0x000002a0
   20bc0:	.word	0x000002bc
   20bc4:	.word	0x0000032c
   20bc8:	.word	0x000002d8
   20bcc:	.word	0x0000032c
   20bd0:	.word	0x0000032c
   20bd4:	.word	0x000002f4
   20bd8:	.word	0x00000310
   20bdc:	ldr	r0, [sp, #4]
   20be0:	ldr	r3, [r0]
   20be4:	ldr	r1, [r8]
   20be8:	mov	r0, r4
   20bec:	ldr	r2, [sp, #8]
   20bf0:	bl	11a00 <ReadInt8Data>
   20bf4:	b	20ed0 <Mat_VarRead5+0xfbc>
   20bf8:	bl	18e8 <malloc@plt>
   20bfc:	mov	r2, r0
   20c00:	ldr	r0, [sp, #24]
   20c04:	str	r2, [r0, #24]
   20c08:	cmp	r2, #0
   20c0c:	beq	20c9c <Mat_VarRead5+0xd88>
   20c10:	ldr	r0, [r5, #48]	; 0x30
   20c14:	cmp	r0, #1
   20c18:	beq	20d24 <Mat_VarRead5+0xe10>
   20c1c:	cmp	r0, #0
   20c20:	bne	203c8 <Mat_VarRead5+0x4b4>
   20c24:	ldr	r0, [r5, #8]
   20c28:	sub	r0, r0, #1
   20c2c:	cmp	r0, #12
   20c30:	bhi	21654 <Mat_VarRead5+0x1740>
   20c34:	add	r1, pc, #4
   20c38:	ldr	r0, [r1, r0, lsl #2]
   20c3c:	add	pc, r1, r0
   20c40:	.word	0x00000034
   20c44:	.word	0x00000930
   20c48:	.word	0x0000094c
   20c4c:	.word	0x0000096c
   20c50:	.word	0x00000984
   20c54:	.word	0x0000099c
   20c58:	.word	0x000009b4
   20c5c:	.word	0x00000a14
   20c60:	.word	0x000009cc
   20c64:	.word	0x00000a14
   20c68:	.word	0x00000a14
   20c6c:	.word	0x000009e4
   20c70:	.word	0x000009fc
   20c74:	ldr	r3, [r6]
   20c78:	mov	r0, r4
   20c7c:	mov	r1, r2
   20c80:	ldr	r2, [sp, #8]
   20c84:	bl	11a00 <ReadInt8Data>
   20c88:	b	21650 <Mat_VarRead5+0x173c>
   20c8c:	ldr	r0, [pc, #2908]	; 217f0 <Mat_VarRead5+0x18dc>
   20c90:	add	r0, pc, r0
   20c94:	bl	19cc <Mat_Critical@plt>
   20c98:	b	203c8 <Mat_VarRead5+0x4b4>
   20c9c:	ldr	r0, [pc, #2896]	; 217f4 <Mat_VarRead5+0x18e0>
   20ca0:	add	r0, pc, r0
   20ca4:	bl	19cc <Mat_Critical@plt>
   20ca8:	b	203c8 <Mat_VarRead5+0x4b4>
   20cac:	ldr	r0, [r5, #8]
   20cb0:	sub	r0, r0, #1
   20cb4:	cmp	r0, #12
   20cb8:	bhi	2116c <Mat_VarRead5+0x1258>
   20cbc:	add	r1, pc, #4
   20cc0:	ldr	r0, [r1, r0, lsl #2]
   20cc4:	add	pc, r1, r0
   20cc8:	.word	0x00000034
   20ccc:	.word	0x00000338
   20cd0:	.word	0x00000360
   20cd4:	.word	0x00000388
   20cd8:	.word	0x000003b0
   20cdc:	.word	0x000003d8
   20ce0:	.word	0x00000400
   20ce4:	.word	0x000004a4
   20ce8:	.word	0x0000042c
   20cec:	.word	0x000004a4
   20cf0:	.word	0x000004a4
   20cf4:	.word	0x00000454
   20cf8:	.word	0x0000047c
   20cfc:	ldr	r2, [r8]
   20d00:	ldr	r0, [r9]
   20d04:	ldr	r1, [r0, #12]
   20d08:	ldr	r0, [sp, #4]
   20d0c:	ldr	r0, [r0]
   20d10:	str	r0, [sp]
   20d14:	mov	r0, r4
   20d18:	ldr	r3, [sp, #8]
   20d1c:	bl	12e9c <ReadCompressedInt8Data>
   20d20:	b	21168 <Mat_VarRead5+0x1254>
   20d24:	ldr	r0, [r5, #8]
   20d28:	sub	r0, r0, #1
   20d2c:	cmp	r0, #12
   20d30:	bhi	217b0 <Mat_VarRead5+0x189c>
   20d34:	add	r1, pc, #4
   20d38:	ldr	r0, [r1, r0, lsl #2]
   20d3c:	add	pc, r1, r0
   20d40:	.word	0x00000034
   20d44:	.word	0x0000094c
   20d48:	.word	0x0000096c
   20d4c:	.word	0x0000098c
   20d50:	.word	0x000009ac
   20d54:	.word	0x000009cc
   20d58:	.word	0x000009ec
   20d5c:	.word	0x00000a70
   20d60:	.word	0x00000a0c
   20d64:	.word	0x00000a70
   20d68:	.word	0x00000a70
   20d6c:	.word	0x00000a2c
   20d70:	.word	0x00000a50
   20d74:	ldr	r0, [r9]
   20d78:	ldr	r1, [r0, #12]
   20d7c:	ldr	r0, [r6]
   20d80:	str	r0, [sp]
   20d84:	mov	r0, r4
   20d88:	ldr	r3, [sp, #8]
   20d8c:	bl	12e9c <ReadCompressedInt8Data>
   20d90:	b	217ac <Mat_VarRead5+0x1898>
   20d94:	ldr	r2, [r5, #40]	; 0x28
   20d98:	ldr	r0, [r5, #52]	; 0x34
   20d9c:	ldr	r1, [r0, #12]
   20da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20da4:	str	r0, [sp]
   20da8:	mov	r0, r4
   20dac:	mov	r3, r7
   20db0:	bl	14dd8 <ReadCompressedCharData>
   20db4:	ldr	r1, [sp, #24]
   20db8:	cmp	r1, #0
   20dbc:	addne	r0, r0, #4
   20dc0:	asr	r1, r0, #31
   20dc4:	add	r1, r0, r1, lsr #29
   20dc8:	bic	r1, r1, #7
   20dcc:	subs	r0, r0, r1
   20dd0:	bne	217d4 <Mat_VarRead5+0x18c0>
   20dd4:	b	203c8 <Mat_VarRead5+0x4b4>
   20dd8:	ldr	r0, [sp, #4]
   20ddc:	ldr	r3, [r0]
   20de0:	ldr	r1, [r8]
   20de4:	mov	r0, r4
   20de8:	ldr	r2, [sp, #8]
   20dec:	bl	133ec <ReadUInt8Data>
   20df0:	b	20ed0 <Mat_VarRead5+0xfbc>
   20df4:	ldr	r0, [sp, #4]
   20df8:	ldr	r3, [r0]
   20dfc:	ldr	r1, [r8]
   20e00:	mov	r0, r4
   20e04:	ldr	r2, [sp, #8]
   20e08:	bl	e5f8 <ReadInt16Data>
   20e0c:	b	20ed0 <Mat_VarRead5+0xfbc>
   20e10:	ldr	r0, [sp, #4]
   20e14:	ldr	r3, [r0]
   20e18:	ldr	r1, [r8]
   20e1c:	mov	r0, r4
   20e20:	ldr	r2, [sp, #8]
   20e24:	bl	fffc <ReadUInt16Data>
   20e28:	b	20ed0 <Mat_VarRead5+0xfbc>
   20e2c:	ldr	r0, [sp, #4]
   20e30:	ldr	r3, [r0]
   20e34:	ldr	r1, [r8]
   20e38:	mov	r0, r4
   20e3c:	ldr	r2, [sp, #8]
   20e40:	bl	b250 <ReadInt32Data>
   20e44:	b	20ed0 <Mat_VarRead5+0xfbc>
   20e48:	ldr	r0, [sp, #4]
   20e4c:	ldr	r3, [r0]
   20e50:	ldr	r1, [r8]
   20e54:	mov	r0, r4
   20e58:	ldr	r2, [sp, #8]
   20e5c:	bl	cc24 <ReadUInt32Data>
   20e60:	b	20ed0 <Mat_VarRead5+0xfbc>
   20e64:	ldr	r0, [sp, #4]
   20e68:	ldr	r3, [r0]
   20e6c:	ldr	r1, [r8]
   20e70:	mov	r0, r4
   20e74:	ldr	r2, [sp, #8]
   20e78:	bl	5ea0 <ReadSingleData>
   20e7c:	b	20ed0 <Mat_VarRead5+0xfbc>
   20e80:	ldr	r0, [sp, #4]
   20e84:	ldr	r3, [r0]
   20e88:	ldr	r1, [r8]
   20e8c:	mov	r0, r4
   20e90:	ldr	r2, [sp, #8]
   20e94:	bl	3778 <ReadDoubleData>
   20e98:	b	20ed0 <Mat_VarRead5+0xfbc>
   20e9c:	ldr	r0, [sp, #4]
   20ea0:	ldr	r3, [r0]
   20ea4:	ldr	r1, [r8]
   20ea8:	mov	r0, r4
   20eac:	ldr	r2, [sp, #8]
   20eb0:	bl	7af8 <ReadInt64Data>
   20eb4:	b	20ed0 <Mat_VarRead5+0xfbc>
   20eb8:	ldr	r0, [sp, #4]
   20ebc:	ldr	r3, [r0]
   20ec0:	ldr	r1, [r8]
   20ec4:	mov	r0, r4
   20ec8:	ldr	r2, [sp, #8]
   20ecc:	bl	96a4 <ReadUInt64Data>
   20ed0:	str	r0, [sp, #12]
   20ed4:	ldr	r0, [sp, #16]
   20ed8:	cmp	r0, #0
   20edc:	ldr	r1, [sp, #12]
   20ee0:	addne	r1, r1, #4
   20ee4:	asr	r0, r1, #31
   20ee8:	add	r0, r1, r0, lsr #29
   20eec:	bic	r0, r0, #7
   20ef0:	subs	r1, r1, r0
   20ef4:	beq	20f08 <Mat_VarRead5+0xff4>
   20ef8:	ldr	r0, [r4]
   20efc:	rsb	r1, r1, #8
   20f00:	mov	r2, #1
   20f04:	bl	1a68 <fseek@plt>
   20f08:	ldr	r3, [r4]
   20f0c:	add	r6, sp, #32
   20f10:	mov	r0, r6
   20f14:	mov	r1, #4
   20f18:	mov	r2, #1
   20f1c:	bl	18d0 <fread@plt>
   20f20:	ldr	r0, [sp, #20]
   20f24:	cmp	r0, #0
   20f28:	beq	20f34 <Mat_VarRead5+0x1020>
   20f2c:	add	r0, sp, #32
   20f30:	bl	1c3c <Mat_uint32Swap>
   20f34:	ldr	r0, [sp, #32]
   20f38:	uxtb	r9, r0
   20f3c:	cmp	r9, #25
   20f40:	movcs	r9, #0
   20f44:	cmp	r0, #65536	; 0x10000
   20f48:	bcs	20f8c <Mat_VarRead5+0x1078>
   20f4c:	ldr	r3, [r4]
   20f50:	add	r6, r6, #4
   20f54:	mov	r0, r6
   20f58:	mov	r1, #4
   20f5c:	mov	r2, #1
   20f60:	bl	18d0 <fread@plt>
   20f64:	ldr	r0, [sp, #20]
   20f68:	cmp	r0, #0
   20f6c:	beq	20f78 <Mat_VarRead5+0x1064>
   20f70:	mov	r0, r6
   20f74:	bl	1c3c <Mat_uint32Swap>
   20f78:	mov	r6, #0
   20f7c:	ldr	r0, [sp, #36]	; 0x24
   20f80:	b	20f94 <Mat_VarRead5+0x1080>
   20f84:	.word	0x00029390
   20f88:	.word	0x000292f8
   20f8c:	lsr	r0, r0, #16
   20f90:	mov	r6, #1
   20f94:	ldr	r1, [r5, #8]
   20f98:	sub	r1, r1, #1
   20f9c:	cmp	r1, #12
   20fa0:	bhi	21398 <Mat_VarRead5+0x1484>
   20fa4:	add	r2, pc, #4
   20fa8:	ldr	r1, [r2, r1, lsl #2]
   20fac:	add	pc, r2, r1
   20fb0:	.word	0x00000034
   20fb4:	.word	0x000002f0
   20fb8:	.word	0x0000030c
   20fbc:	.word	0x00000328
   20fc0:	.word	0x00000344
   20fc4:	.word	0x00000360
   20fc8:	.word	0x0000037c
   20fcc:	.word	0x000003e8
   20fd0:	.word	0x00000398
   20fd4:	.word	0x000003e8
   20fd8:	.word	0x000003e8
   20fdc:	.word	0x000003b4
   20fe0:	.word	0x000003d0
   20fe4:	ldr	r0, [sp, #4]
   20fe8:	ldr	r3, [r0]
   20fec:	ldr	r1, [r8, #4]
   20ff0:	mov	r0, r4
   20ff4:	mov	r2, r9
   20ff8:	bl	11a00 <ReadInt8Data>
   20ffc:	b	21398 <Mat_VarRead5+0x1484>
   21000:	ldr	r2, [r8]
   21004:	ldr	r0, [r9]
   21008:	ldr	r1, [r0, #12]
   2100c:	ldr	r0, [sp, #4]
   21010:	ldr	r0, [r0]
   21014:	str	r0, [sp]
   21018:	mov	r0, r4
   2101c:	ldr	r3, [sp, #8]
   21020:	bl	14888 <ReadCompressedUInt8Data>
   21024:	b	21168 <Mat_VarRead5+0x1254>
   21028:	ldr	r2, [r8]
   2102c:	ldr	r0, [r9]
   21030:	ldr	r1, [r0, #12]
   21034:	ldr	r0, [sp, #4]
   21038:	ldr	r0, [r0]
   2103c:	str	r0, [sp]
   21040:	mov	r0, r4
   21044:	ldr	r3, [sp, #8]
   21048:	bl	faac <ReadCompressedInt16Data>
   2104c:	b	21168 <Mat_VarRead5+0x1254>
   21050:	ldr	r2, [r8]
   21054:	ldr	r0, [r9]
   21058:	ldr	r1, [r0, #12]
   2105c:	ldr	r0, [sp, #4]
   21060:	ldr	r0, [r0]
   21064:	str	r0, [sp]
   21068:	mov	r0, r4
   2106c:	ldr	r3, [sp, #8]
   21070:	bl	114b0 <ReadCompressedUInt16Data>
   21074:	b	21168 <Mat_VarRead5+0x1254>
   21078:	ldr	r2, [r8]
   2107c:	ldr	r0, [r9]
   21080:	ldr	r1, [r0, #12]
   21084:	ldr	r0, [sp, #4]
   21088:	ldr	r0, [r0]
   2108c:	str	r0, [sp]
   21090:	mov	r0, r4
   21094:	ldr	r3, [sp, #8]
   21098:	bl	c6d4 <ReadCompressedInt32Data>
   2109c:	b	21168 <Mat_VarRead5+0x1254>
   210a0:	ldr	r2, [r8]
   210a4:	ldr	r0, [r9]
   210a8:	ldr	r1, [r0, #12]
   210ac:	ldr	r0, [sp, #4]
   210b0:	ldr	r0, [r0]
   210b4:	str	r0, [sp]
   210b8:	mov	r0, r4
   210bc:	ldr	r3, [sp, #8]
   210c0:	bl	e0a8 <ReadCompressedUInt32Data>
   210c4:	b	21168 <Mat_VarRead5+0x1254>
   210c8:	ldr	r2, [r8]
   210cc:	ldr	r0, [r9]
   210d0:	ldr	r1, [r0, #12]
   210d4:	ldr	r0, [sp, #4]
   210d8:	ldr	r0, [r0]
   210dc:	str	r0, [sp]
   210e0:	mov	r0, r4
   210e4:	ldr	r3, [sp, #8]
   210e8:	bl	7534 <ReadCompressedSingleData>
   210ec:	b	21168 <Mat_VarRead5+0x1254>
   210f0:	.word	0x0002936f
   210f4:	ldr	r2, [r8]
   210f8:	ldr	r0, [r9]
   210fc:	ldr	r1, [r0, #12]
   21100:	ldr	r0, [sp, #4]
   21104:	ldr	r0, [r0]
   21108:	str	r0, [sp]
   2110c:	mov	r0, r4
   21110:	ldr	r3, [sp, #8]
   21114:	bl	4bf4 <ReadCompressedDoubleData>
   21118:	b	21168 <Mat_VarRead5+0x1254>
   2111c:	ldr	r2, [r8]
   21120:	ldr	r0, [r9]
   21124:	ldr	r1, [r0, #12]
   21128:	ldr	r0, [sp, #4]
   2112c:	ldr	r0, [r0]
   21130:	str	r0, [sp]
   21134:	mov	r0, r4
   21138:	ldr	r3, [sp, #8]
   2113c:	bl	90d0 <ReadCompressedInt64Data>
   21140:	b	21168 <Mat_VarRead5+0x1254>
   21144:	ldr	r2, [r8]
   21148:	ldr	r0, [r9]
   2114c:	ldr	r1, [r0, #12]
   21150:	ldr	r0, [sp, #4]
   21154:	ldr	r0, [r0]
   21158:	str	r0, [sp]
   2115c:	mov	r0, r4
   21160:	ldr	r3, [sp, #8]
   21164:	bl	ac7c <ReadCompressedUInt64Data>
   21168:	str	r0, [sp, #12]
   2116c:	ldr	r0, [sp, #16]
   21170:	cmp	r0, #0
   21174:	ldr	r1, [sp, #12]
   21178:	addne	r1, r1, #4
   2117c:	asr	r0, r1, #31
   21180:	add	r0, r1, r0, lsr #29
   21184:	bic	r0, r0, #7
   21188:	subs	r0, r1, r0
   2118c:	beq	211a4 <Mat_VarRead5+0x1290>
   21190:	ldr	r1, [r9]
   21194:	ldr	r1, [r1, #12]
   21198:	rsb	r2, r0, #8
   2119c:	mov	r0, r4
   211a0:	bl	234c <InflateSkip>
   211a4:	ldr	r0, [r9]
   211a8:	ldr	r1, [r0, #12]
   211ac:	add	r7, sp, #32
   211b0:	mov	r0, r4
   211b4:	mov	r2, r7
   211b8:	bl	30b4 <InflateDataType>
   211bc:	ldr	r0, [sp, #20]
   211c0:	cmp	r0, #0
   211c4:	beq	211d0 <Mat_VarRead5+0x12bc>
   211c8:	add	r0, sp, #32
   211cc:	bl	1c3c <Mat_uint32Swap>
   211d0:	ldr	r0, [sp, #32]
   211d4:	uxtb	r6, r0
   211d8:	cmp	r6, #25
   211dc:	movcs	r6, #0
   211e0:	cmp	r0, #65536	; 0x10000
   211e4:	bcs	21220 <Mat_VarRead5+0x130c>
   211e8:	ldr	r0, [r9]
   211ec:	ldr	r1, [r0, #12]
   211f0:	add	r7, r7, #4
   211f4:	mov	r0, r4
   211f8:	mov	r2, r7
   211fc:	bl	30b4 <InflateDataType>
   21200:	ldr	r0, [sp, #20]
   21204:	cmp	r0, #0
   21208:	beq	21214 <Mat_VarRead5+0x1300>
   2120c:	mov	r0, r7
   21210:	bl	1c3c <Mat_uint32Swap>
   21214:	mov	r7, #0
   21218:	ldr	r0, [sp, #36]	; 0x24
   2121c:	b	21228 <Mat_VarRead5+0x1314>
   21220:	lsr	r0, r0, #16
   21224:	mov	r7, #1
   21228:	ldr	r1, [r5, #8]
   2122c:	sub	r1, r1, #1
   21230:	cmp	r1, #12
   21234:	bhi	21534 <Mat_VarRead5+0x1620>
   21238:	add	r2, pc, #4
   2123c:	ldr	r1, [r2, r1, lsl #2]
   21240:	add	pc, r2, r1
   21244:	.word	0x00000034
   21248:	.word	0x00000184
   2124c:	.word	0x000001ac
   21250:	.word	0x000001d4
   21254:	.word	0x00000200
   21258:	.word	0x0000022c
   2125c:	.word	0x00000254
   21260:	.word	0x000002f0
   21264:	.word	0x0000027c
   21268:	.word	0x000002f0
   2126c:	.word	0x000002f0
   21270:	.word	0x000002a4
   21274:	.word	0x000002cc
   21278:	ldr	r2, [r8, #4]
   2127c:	ldr	r0, [r9]
   21280:	ldr	r1, [r0, #12]
   21284:	ldr	r0, [sp, #4]
   21288:	ldr	r0, [r0]
   2128c:	str	r0, [sp]
   21290:	mov	r0, r4
   21294:	mov	r3, r6
   21298:	bl	12e9c <ReadCompressedInt8Data>
   2129c:	b	21534 <Mat_VarRead5+0x1620>
   212a0:	ldr	r0, [sp, #4]
   212a4:	ldr	r3, [r0]
   212a8:	ldr	r1, [r8, #4]
   212ac:	mov	r0, r4
   212b0:	mov	r2, r9
   212b4:	bl	133ec <ReadUInt8Data>
   212b8:	b	21398 <Mat_VarRead5+0x1484>
   212bc:	ldr	r0, [sp, #4]
   212c0:	ldr	r3, [r0]
   212c4:	ldr	r1, [r8, #4]
   212c8:	mov	r0, r4
   212cc:	mov	r2, r9
   212d0:	bl	e5f8 <ReadInt16Data>
   212d4:	b	21398 <Mat_VarRead5+0x1484>
   212d8:	ldr	r0, [sp, #4]
   212dc:	ldr	r3, [r0]
   212e0:	ldr	r1, [r8, #4]
   212e4:	mov	r0, r4
   212e8:	mov	r2, r9
   212ec:	bl	fffc <ReadUInt16Data>
   212f0:	b	21398 <Mat_VarRead5+0x1484>
   212f4:	ldr	r0, [sp, #4]
   212f8:	ldr	r3, [r0]
   212fc:	ldr	r1, [r8, #4]
   21300:	mov	r0, r4
   21304:	mov	r2, r9
   21308:	bl	b250 <ReadInt32Data>
   2130c:	b	21398 <Mat_VarRead5+0x1484>
   21310:	ldr	r0, [sp, #4]
   21314:	ldr	r3, [r0]
   21318:	ldr	r1, [r8, #4]
   2131c:	mov	r0, r4
   21320:	mov	r2, r9
   21324:	bl	cc24 <ReadUInt32Data>
   21328:	b	21398 <Mat_VarRead5+0x1484>
   2132c:	ldr	r0, [sp, #4]
   21330:	ldr	r3, [r0]
   21334:	ldr	r1, [r8, #4]
   21338:	mov	r0, r4
   2133c:	mov	r2, r9
   21340:	bl	5ea0 <ReadSingleData>
   21344:	b	21398 <Mat_VarRead5+0x1484>
   21348:	ldr	r0, [sp, #4]
   2134c:	ldr	r3, [r0]
   21350:	ldr	r1, [r8, #4]
   21354:	mov	r0, r4
   21358:	mov	r2, r9
   2135c:	bl	3778 <ReadDoubleData>
   21360:	b	21398 <Mat_VarRead5+0x1484>
   21364:	ldr	r0, [sp, #4]
   21368:	ldr	r3, [r0]
   2136c:	ldr	r1, [r8, #4]
   21370:	mov	r0, r4
   21374:	mov	r2, r9
   21378:	bl	7af8 <ReadInt64Data>
   2137c:	b	21398 <Mat_VarRead5+0x1484>
   21380:	ldr	r0, [sp, #4]
   21384:	ldr	r3, [r0]
   21388:	ldr	r1, [r8, #4]
   2138c:	mov	r0, r4
   21390:	mov	r2, r9
   21394:	bl	96a4 <ReadUInt64Data>
   21398:	cmp	r6, #0
   2139c:	addne	r0, r0, #4
   213a0:	asr	r1, r0, #31
   213a4:	add	r1, r0, r1, lsr #29
   213a8:	bic	r1, r1, #7
   213ac:	subs	r1, r0, r1
   213b0:	beq	21564 <Mat_VarRead5+0x1650>
   213b4:	ldr	r0, [r4]
   213b8:	rsb	r1, r1, #8
   213bc:	mov	r2, #1
   213c0:	bl	1a68 <fseek@plt>
   213c4:	b	21564 <Mat_VarRead5+0x1650>
   213c8:	ldr	r2, [r8, #4]
   213cc:	ldr	r0, [r9]
   213d0:	ldr	r1, [r0, #12]
   213d4:	ldr	r0, [sp, #4]
   213d8:	ldr	r0, [r0]
   213dc:	str	r0, [sp]
   213e0:	mov	r0, r4
   213e4:	mov	r3, r6
   213e8:	bl	14888 <ReadCompressedUInt8Data>
   213ec:	b	21534 <Mat_VarRead5+0x1620>
   213f0:	ldr	r2, [r8, #4]
   213f4:	ldr	r0, [r9]
   213f8:	ldr	r1, [r0, #12]
   213fc:	ldr	r0, [sp, #4]
   21400:	ldr	r0, [r0]
   21404:	str	r0, [sp]
   21408:	mov	r0, r4
   2140c:	mov	r3, r6
   21410:	bl	faac <ReadCompressedInt16Data>
   21414:	b	21534 <Mat_VarRead5+0x1620>
   21418:	ldr	r2, [r8, #4]
   2141c:	ldr	r0, [r9]
   21420:	ldr	r1, [r0, #12]
   21424:	ldr	r0, [sp, #4]
   21428:	ldr	r0, [r0]
   2142c:	str	r0, [sp]
   21430:	mov	r0, r4
   21434:	mov	r3, r6
   21438:	bl	114b0 <ReadCompressedUInt16Data>
   2143c:	b	21534 <Mat_VarRead5+0x1620>
   21440:	.word	0x0002903d
   21444:	ldr	r2, [r8, #4]
   21448:	ldr	r0, [r9]
   2144c:	ldr	r1, [r0, #12]
   21450:	ldr	r0, [sp, #4]
   21454:	ldr	r0, [r0]
   21458:	str	r0, [sp]
   2145c:	mov	r0, r4
   21460:	mov	r3, r6
   21464:	bl	c6d4 <ReadCompressedInt32Data>
   21468:	b	21534 <Mat_VarRead5+0x1620>
   2146c:	.word	0x00028ed4
   21470:	ldr	r2, [r8, #4]
   21474:	ldr	r0, [r9]
   21478:	ldr	r1, [r0, #12]
   2147c:	ldr	r0, [sp, #4]
   21480:	ldr	r0, [r0]
   21484:	str	r0, [sp]
   21488:	mov	r0, r4
   2148c:	mov	r3, r6
   21490:	bl	e0a8 <ReadCompressedUInt32Data>
   21494:	b	21534 <Mat_VarRead5+0x1620>
   21498:	ldr	r2, [r8, #4]
   2149c:	ldr	r0, [r9]
   214a0:	ldr	r1, [r0, #12]
   214a4:	ldr	r0, [sp, #4]
   214a8:	ldr	r0, [r0]
   214ac:	str	r0, [sp]
   214b0:	mov	r0, r4
   214b4:	mov	r3, r6
   214b8:	bl	7534 <ReadCompressedSingleData>
   214bc:	b	21534 <Mat_VarRead5+0x1620>
   214c0:	ldr	r2, [r8, #4]
   214c4:	ldr	r0, [r9]
   214c8:	ldr	r1, [r0, #12]
   214cc:	ldr	r0, [sp, #4]
   214d0:	ldr	r0, [r0]
   214d4:	str	r0, [sp]
   214d8:	mov	r0, r4
   214dc:	mov	r3, r6
   214e0:	bl	4bf4 <ReadCompressedDoubleData>
   214e4:	b	21534 <Mat_VarRead5+0x1620>
   214e8:	ldr	r2, [r8, #4]
   214ec:	ldr	r0, [r9]
   214f0:	ldr	r1, [r0, #12]
   214f4:	ldr	r0, [sp, #4]
   214f8:	ldr	r0, [r0]
   214fc:	str	r0, [sp]
   21500:	mov	r0, r4
   21504:	mov	r3, r6
   21508:	bl	90d0 <ReadCompressedInt64Data>
   2150c:	b	21534 <Mat_VarRead5+0x1620>
   21510:	ldr	r2, [r8, #4]
   21514:	ldr	r0, [r9]
   21518:	ldr	r1, [r0, #12]
   2151c:	ldr	r0, [sp, #4]
   21520:	ldr	r0, [r0]
   21524:	str	r0, [sp]
   21528:	mov	r0, r4
   2152c:	mov	r3, r6
   21530:	bl	ac7c <ReadCompressedUInt64Data>
   21534:	cmp	r7, #0
   21538:	addne	r0, r0, #4
   2153c:	asr	r1, r0, #31
   21540:	add	r1, r0, r1, lsr #29
   21544:	bic	r1, r1, #7
   21548:	subs	r0, r0, r1
   2154c:	beq	21564 <Mat_VarRead5+0x1650>
   21550:	ldr	r1, [r9]
   21554:	ldr	r1, [r1, #12]
   21558:	rsb	r2, r0, #8
   2155c:	mov	r0, r4
   21560:	bl	234c <InflateSkip>
   21564:	ldr	r0, [sp, #24]
   21568:	str	r8, [r0, #24]
   2156c:	b	203c8 <Mat_VarRead5+0x4b4>
   21570:	ldr	r3, [r6]
   21574:	mov	r0, r4
   21578:	mov	r1, r2
   2157c:	ldr	r2, [sp, #8]
   21580:	bl	133ec <ReadUInt8Data>
   21584:	b	21650 <Mat_VarRead5+0x173c>
   21588:	.word	0x00028d90
   2158c:	ldr	r3, [r6]
   21590:	mov	r0, r4
   21594:	mov	r1, r2
   21598:	ldr	r2, [sp, #8]
   2159c:	bl	e5f8 <ReadInt16Data>
   215a0:	b	21650 <Mat_VarRead5+0x173c>
   215a4:	.word	0x00028dc2
   215a8:	.word	0x00028dd1
   215ac:	ldr	r3, [r6]
   215b0:	mov	r0, r4
   215b4:	mov	r1, r2
   215b8:	ldr	r2, [sp, #8]
   215bc:	bl	fffc <ReadUInt16Data>
   215c0:	b	21650 <Mat_VarRead5+0x173c>
   215c4:	ldr	r3, [r6]
   215c8:	mov	r0, r4
   215cc:	mov	r1, r2
   215d0:	ldr	r2, [sp, #8]
   215d4:	bl	b250 <ReadInt32Data>
   215d8:	b	21650 <Mat_VarRead5+0x173c>
   215dc:	ldr	r3, [r6]
   215e0:	mov	r0, r4
   215e4:	mov	r1, r2
   215e8:	ldr	r2, [sp, #8]
   215ec:	bl	cc24 <ReadUInt32Data>
   215f0:	b	21650 <Mat_VarRead5+0x173c>
   215f4:	ldr	r3, [r6]
   215f8:	mov	r0, r4
   215fc:	mov	r1, r2
   21600:	ldr	r2, [sp, #8]
   21604:	bl	5ea0 <ReadSingleData>
   21608:	b	21650 <Mat_VarRead5+0x173c>
   2160c:	ldr	r3, [r6]
   21610:	mov	r0, r4
   21614:	mov	r1, r2
   21618:	ldr	r2, [sp, #8]
   2161c:	bl	3778 <ReadDoubleData>
   21620:	b	21650 <Mat_VarRead5+0x173c>
   21624:	ldr	r3, [r6]
   21628:	mov	r0, r4
   2162c:	mov	r1, r2
   21630:	ldr	r2, [sp, #8]
   21634:	bl	7af8 <ReadInt64Data>
   21638:	b	21650 <Mat_VarRead5+0x173c>
   2163c:	ldr	r3, [r6]
   21640:	mov	r0, r4
   21644:	mov	r1, r2
   21648:	ldr	r2, [sp, #8]
   2164c:	bl	96a4 <ReadUInt64Data>
   21650:	str	r0, [sp, #12]
   21654:	ldr	r0, [sp, #16]
   21658:	cmp	r0, #0
   2165c:	ldr	r1, [sp, #12]
   21660:	addne	r1, r1, #4
   21664:	asr	r0, r1, #31
   21668:	add	r0, r1, r0, lsr #29
   2166c:	bic	r0, r0, #7
   21670:	subs	r1, r1, r0
   21674:	beq	203c8 <Mat_VarRead5+0x4b4>
   21678:	ldr	r0, [r4]
   2167c:	rsb	r1, r1, #8
   21680:	mov	r2, #1
   21684:	bl	1a68 <fseek@plt>
   21688:	b	203c8 <Mat_VarRead5+0x4b4>
   2168c:	ldr	r0, [r9]
   21690:	ldr	r1, [r0, #12]
   21694:	ldr	r0, [r6]
   21698:	str	r0, [sp]
   2169c:	mov	r0, r4
   216a0:	ldr	r3, [sp, #8]
   216a4:	bl	14888 <ReadCompressedUInt8Data>
   216a8:	b	217ac <Mat_VarRead5+0x1898>
   216ac:	ldr	r0, [r9]
   216b0:	ldr	r1, [r0, #12]
   216b4:	ldr	r0, [r6]
   216b8:	str	r0, [sp]
   216bc:	mov	r0, r4
   216c0:	ldr	r3, [sp, #8]
   216c4:	bl	faac <ReadCompressedInt16Data>
   216c8:	b	217ac <Mat_VarRead5+0x1898>
   216cc:	ldr	r0, [r9]
   216d0:	ldr	r1, [r0, #12]
   216d4:	ldr	r0, [r6]
   216d8:	str	r0, [sp]
   216dc:	mov	r0, r4
   216e0:	ldr	r3, [sp, #8]
   216e4:	bl	114b0 <ReadCompressedUInt16Data>
   216e8:	b	217ac <Mat_VarRead5+0x1898>
   216ec:	ldr	r0, [r9]
   216f0:	ldr	r1, [r0, #12]
   216f4:	ldr	r0, [r6]
   216f8:	str	r0, [sp]
   216fc:	mov	r0, r4
   21700:	ldr	r3, [sp, #8]
   21704:	bl	c6d4 <ReadCompressedInt32Data>
   21708:	b	217ac <Mat_VarRead5+0x1898>
   2170c:	ldr	r0, [r9]
   21710:	ldr	r1, [r0, #12]
   21714:	ldr	r0, [r6]
   21718:	str	r0, [sp]
   2171c:	mov	r0, r4
   21720:	ldr	r3, [sp, #8]
   21724:	bl	e0a8 <ReadCompressedUInt32Data>
   21728:	b	217ac <Mat_VarRead5+0x1898>
   2172c:	ldr	r0, [r9]
   21730:	ldr	r1, [r0, #12]
   21734:	ldr	r0, [r6]
   21738:	str	r0, [sp]
   2173c:	mov	r0, r4
   21740:	ldr	r3, [sp, #8]
   21744:	bl	7534 <ReadCompressedSingleData>
   21748:	b	217ac <Mat_VarRead5+0x1898>
   2174c:	ldr	r0, [r9]
   21750:	ldr	r1, [r0, #12]
   21754:	ldr	r0, [r6]
   21758:	str	r0, [sp]
   2175c:	mov	r0, r4
   21760:	ldr	r3, [sp, #8]
   21764:	bl	4bf4 <ReadCompressedDoubleData>
   21768:	b	217ac <Mat_VarRead5+0x1898>
   2176c:	ldr	r0, [r9]
   21770:	ldr	r1, [r0, #12]
   21774:	ldr	r0, [r6]
   21778:	str	r0, [sp]
   2177c:	mov	r0, r4
   21780:	ldr	r3, [sp, #8]
   21784:	bl	90d0 <ReadCompressedInt64Data>
   21788:	b	217ac <Mat_VarRead5+0x1898>
   2178c:	.word	0x00028c0d
   21790:	ldr	r0, [r9]
   21794:	ldr	r1, [r0, #12]
   21798:	ldr	r0, [r6]
   2179c:	str	r0, [sp]
   217a0:	mov	r0, r4
   217a4:	ldr	r3, [sp, #8]
   217a8:	bl	ac7c <ReadCompressedUInt64Data>
   217ac:	str	r0, [sp, #12]
   217b0:	ldr	r0, [sp, #16]
   217b4:	cmp	r0, #0
   217b8:	ldr	r1, [sp, #12]
   217bc:	addne	r1, r1, #4
   217c0:	asr	r0, r1, #31
   217c4:	add	r0, r1, r0, lsr #29
   217c8:	bic	r0, r0, #7
   217cc:	subs	r0, r1, r0
   217d0:	beq	203c8 <Mat_VarRead5+0x4b4>
   217d4:	ldr	r1, [r9]
   217d8:	ldr	r1, [r1, #12]
   217dc:	rsb	r2, r0, #8
   217e0:	mov	r0, r4
   217e4:	bl	234c <InflateSkip>
   217e8:	b	203c8 <Mat_VarRead5+0x4b4>
   217ec:	.word	0x00028990
   217f0:	.word	0x00028785
   217f4:	.word	0x000287aa
   217f8:	.word	0x00028a43

000217fc <Mat_VarReadNumeric5>:
   217fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21800:	add	fp, sp, #24
   21804:	sub	sp, sp, #16
   21808:	mov	r9, r3
   2180c:	mov	r8, r2
   21810:	mov	r5, r1
   21814:	mov	r4, r0
   21818:	ldr	r0, [r1, #48]	; 0x30
   2181c:	cmp	r0, #1
   21820:	bne	2188c <Mat_VarReadNumeric5+0x90>
   21824:	ldr	r0, [r5, #52]	; 0x34
   21828:	ldr	r1, [r0, #12]
   2182c:	mov	r6, #0
   21830:	str	r6, [r1, #4]
   21834:	add	r7, sp, #8
   21838:	mov	r0, r4
   2183c:	mov	r2, r7
   21840:	bl	30b4 <InflateDataType>
   21844:	ldr	r0, [r4, #20]
   21848:	cmp	r0, #0
   2184c:	beq	21858 <Mat_VarReadNumeric5+0x5c>
   21850:	add	r0, sp, #8
   21854:	bl	1c3c <Mat_uint32Swap>
   21858:	ldr	r0, [sp, #8]
   2185c:	uxtb	r1, r0
   21860:	cmp	r1, #25
   21864:	movcc	r6, r1
   21868:	cmp	r0, #65536	; 0x10000
   2186c:	bcs	2191c <Mat_VarReadNumeric5+0x120>
   21870:	ldr	r0, [r5, #52]	; 0x34
   21874:	ldr	r1, [r0, #12]
   21878:	add	r7, r7, #4
   2187c:	mov	r0, r4
   21880:	mov	r2, r7
   21884:	bl	30b4 <InflateDataType>
   21888:	b	218e8 <Mat_VarReadNumeric5+0xec>
   2188c:	ldr	r3, [r4]
   21890:	add	r7, sp, #8
   21894:	mov	r0, r7
   21898:	mov	r1, #4
   2189c:	mov	r2, #1
   218a0:	bl	18d0 <fread@plt>
   218a4:	ldr	r0, [r4, #20]
   218a8:	cmp	r0, #0
   218ac:	beq	218b8 <Mat_VarReadNumeric5+0xbc>
   218b0:	add	r0, sp, #8
   218b4:	bl	1c3c <Mat_uint32Swap>
   218b8:	ldr	r0, [sp, #8]
   218bc:	uxtb	r6, r0
   218c0:	cmp	r6, #25
   218c4:	movcs	r6, #0
   218c8:	cmp	r0, #65536	; 0x10000
   218cc:	bcs	2191c <Mat_VarReadNumeric5+0x120>
   218d0:	ldr	r3, [r4]
   218d4:	add	r7, r7, #4
   218d8:	mov	r0, r7
   218dc:	mov	r1, #4
   218e0:	mov	r2, #1
   218e4:	bl	18d0 <fread@plt>
   218e8:	ldr	r0, [r4, #20]
   218ec:	cmp	r0, #0
   218f0:	beq	218fc <Mat_VarReadNumeric5+0x100>
   218f4:	mov	r0, r7
   218f8:	bl	1c3c <Mat_uint32Swap>
   218fc:	mov	r7, #0
   21900:	ldr	r0, [sp, #12]
   21904:	cmp	r0, #0
   21908:	bne	21924 <Mat_VarReadNumeric5+0x128>
   2190c:	mov	r0, #0
   21910:	str	r0, [r5]
   21914:	sub	sp, fp, #24
   21918:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2191c:	lsr	r0, r0, #16
   21920:	mov	r7, #1
   21924:	ldr	r1, [r5, #48]	; 0x30
   21928:	cmp	r1, #1
   2192c:	beq	21994 <Mat_VarReadNumeric5+0x198>
   21930:	cmp	r1, #0
   21934:	bne	21c4c <Mat_VarReadNumeric5+0x450>
   21938:	ldr	r1, [r5, #16]
   2193c:	sub	r1, r1, #6
   21940:	cmp	r1, #9
   21944:	bhi	21acc <Mat_VarReadNumeric5+0x2d0>
   21948:	add	r0, pc, #4
   2194c:	ldr	r1, [r0, r1, lsl #2]
   21950:	add	pc, r0, r1
   21954:	.word	0x00000028
   21958:	.word	0x000000a4
   2195c:	.word	0x000000bc
   21960:	.word	0x000000d4
   21964:	.word	0x000000ec
   21968:	.word	0x00000104
   2196c:	.word	0x0000011c
   21970:	.word	0x00000134
   21974:	.word	0x0000014c
   21978:	.word	0x00000164
   2197c:	mov	r0, r4
   21980:	mov	r1, r8
   21984:	mov	r2, r6
   21988:	mov	r3, r9
   2198c:	bl	3778 <ReadDoubleData>
   21990:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21994:	ldr	r1, [r5, #16]
   21998:	sub	r1, r1, #6
   2199c:	cmp	r1, #9
   219a0:	bhi	21c1c <Mat_VarReadNumeric5+0x420>
   219a4:	add	r0, pc, #4
   219a8:	ldr	r1, [r0, r1, lsl #2]
   219ac:	add	pc, r0, r1
   219b0:	.word	0x00000028
   219b4:	.word	0x00000150
   219b8:	.word	0x00000170
   219bc:	.word	0x00000190
   219c0:	.word	0x000001b0
   219c4:	.word	0x000001d0
   219c8:	.word	0x000001f0
   219cc:	.word	0x00000210
   219d0:	.word	0x00000230
   219d4:	.word	0x00000250
   219d8:	ldr	r0, [r5, #52]	; 0x34
   219dc:	ldr	r1, [r0, #12]
   219e0:	str	r9, [sp]
   219e4:	mov	r0, r4
   219e8:	mov	r2, r8
   219ec:	mov	r3, r6
   219f0:	bl	4bf4 <ReadCompressedDoubleData>
   219f4:	b	21c1c <Mat_VarReadNumeric5+0x420>
   219f8:	mov	r0, r4
   219fc:	mov	r1, r8
   21a00:	mov	r2, r6
   21a04:	mov	r3, r9
   21a08:	bl	5ea0 <ReadSingleData>
   21a0c:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21a10:	mov	r0, r4
   21a14:	mov	r1, r8
   21a18:	mov	r2, r6
   21a1c:	mov	r3, r9
   21a20:	bl	11a00 <ReadInt8Data>
   21a24:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21a28:	mov	r0, r4
   21a2c:	mov	r1, r8
   21a30:	mov	r2, r6
   21a34:	mov	r3, r9
   21a38:	bl	133ec <ReadUInt8Data>
   21a3c:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21a40:	mov	r0, r4
   21a44:	mov	r1, r8
   21a48:	mov	r2, r6
   21a4c:	mov	r3, r9
   21a50:	bl	e5f8 <ReadInt16Data>
   21a54:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21a58:	mov	r0, r4
   21a5c:	mov	r1, r8
   21a60:	mov	r2, r6
   21a64:	mov	r3, r9
   21a68:	bl	fffc <ReadUInt16Data>
   21a6c:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21a70:	mov	r0, r4
   21a74:	mov	r1, r8
   21a78:	mov	r2, r6
   21a7c:	mov	r3, r9
   21a80:	bl	b250 <ReadInt32Data>
   21a84:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21a88:	mov	r0, r4
   21a8c:	mov	r1, r8
   21a90:	mov	r2, r6
   21a94:	mov	r3, r9
   21a98:	bl	cc24 <ReadUInt32Data>
   21a9c:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21aa0:	mov	r0, r4
   21aa4:	mov	r1, r8
   21aa8:	mov	r2, r6
   21aac:	mov	r3, r9
   21ab0:	bl	7af8 <ReadInt64Data>
   21ab4:	b	21acc <Mat_VarReadNumeric5+0x2d0>
   21ab8:	mov	r0, r4
   21abc:	mov	r1, r8
   21ac0:	mov	r2, r6
   21ac4:	mov	r3, r9
   21ac8:	bl	96a4 <ReadUInt64Data>
   21acc:	cmp	r7, #0
   21ad0:	addne	r0, r0, #4
   21ad4:	asr	r1, r0, #31
   21ad8:	add	r1, r0, r1, lsr #29
   21adc:	bic	r1, r1, #7
   21ae0:	subs	r1, r0, r1
   21ae4:	beq	21c4c <Mat_VarReadNumeric5+0x450>
   21ae8:	ldr	r0, [r4]
   21aec:	rsb	r1, r1, #8
   21af0:	mov	r2, #1
   21af4:	bl	1a68 <fseek@plt>
   21af8:	sub	sp, fp, #24
   21afc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21b00:	ldr	r0, [r5, #52]	; 0x34
   21b04:	ldr	r1, [r0, #12]
   21b08:	str	r9, [sp]
   21b0c:	mov	r0, r4
   21b10:	mov	r2, r8
   21b14:	mov	r3, r6
   21b18:	bl	7534 <ReadCompressedSingleData>
   21b1c:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21b20:	ldr	r0, [r5, #52]	; 0x34
   21b24:	ldr	r1, [r0, #12]
   21b28:	str	r9, [sp]
   21b2c:	mov	r0, r4
   21b30:	mov	r2, r8
   21b34:	mov	r3, r6
   21b38:	bl	12e9c <ReadCompressedInt8Data>
   21b3c:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21b40:	ldr	r0, [r5, #52]	; 0x34
   21b44:	ldr	r1, [r0, #12]
   21b48:	str	r9, [sp]
   21b4c:	mov	r0, r4
   21b50:	mov	r2, r8
   21b54:	mov	r3, r6
   21b58:	bl	14888 <ReadCompressedUInt8Data>
   21b5c:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21b60:	ldr	r0, [r5, #52]	; 0x34
   21b64:	ldr	r1, [r0, #12]
   21b68:	str	r9, [sp]
   21b6c:	mov	r0, r4
   21b70:	mov	r2, r8
   21b74:	mov	r3, r6
   21b78:	bl	faac <ReadCompressedInt16Data>
   21b7c:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21b80:	ldr	r0, [r5, #52]	; 0x34
   21b84:	ldr	r1, [r0, #12]
   21b88:	str	r9, [sp]
   21b8c:	mov	r0, r4
   21b90:	mov	r2, r8
   21b94:	mov	r3, r6
   21b98:	bl	114b0 <ReadCompressedUInt16Data>
   21b9c:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21ba0:	ldr	r0, [r5, #52]	; 0x34
   21ba4:	ldr	r1, [r0, #12]
   21ba8:	str	r9, [sp]
   21bac:	mov	r0, r4
   21bb0:	mov	r2, r8
   21bb4:	mov	r3, r6
   21bb8:	bl	c6d4 <ReadCompressedInt32Data>
   21bbc:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21bc0:	ldr	r0, [r5, #52]	; 0x34
   21bc4:	ldr	r1, [r0, #12]
   21bc8:	str	r9, [sp]
   21bcc:	mov	r0, r4
   21bd0:	mov	r2, r8
   21bd4:	mov	r3, r6
   21bd8:	bl	e0a8 <ReadCompressedUInt32Data>
   21bdc:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21be0:	ldr	r0, [r5, #52]	; 0x34
   21be4:	ldr	r1, [r0, #12]
   21be8:	str	r9, [sp]
   21bec:	mov	r0, r4
   21bf0:	mov	r2, r8
   21bf4:	mov	r3, r6
   21bf8:	bl	90d0 <ReadCompressedInt64Data>
   21bfc:	b	21c1c <Mat_VarReadNumeric5+0x420>
   21c00:	ldr	r0, [r5, #52]	; 0x34
   21c04:	ldr	r1, [r0, #12]
   21c08:	str	r9, [sp]
   21c0c:	mov	r0, r4
   21c10:	mov	r2, r8
   21c14:	mov	r3, r6
   21c18:	bl	ac7c <ReadCompressedUInt64Data>
   21c1c:	cmp	r7, #0
   21c20:	addne	r0, r0, #4
   21c24:	asr	r1, r0, #31
   21c28:	add	r1, r0, r1, lsr #29
   21c2c:	bic	r1, r1, #7
   21c30:	subs	r0, r0, r1
   21c34:	beq	21c4c <Mat_VarReadNumeric5+0x450>
   21c38:	ldr	r1, [r5, #52]	; 0x34
   21c3c:	ldr	r1, [r1, #12]
   21c40:	rsb	r2, r0, #8
   21c44:	mov	r0, r4
   21c48:	bl	234c <InflateSkip>
   21c4c:	sub	sp, fp, #24
   21c50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00021c54 <Mat_VarReadData5>:
   21c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c58:	add	fp, sp, #28
   21c5c:	sub	sp, sp, #92	; 0x5c
   21c60:	mov	r9, r3
   21c64:	str	r2, [sp, #24]
   21c68:	mov	r4, r1
   21c6c:	mov	r8, r0
   21c70:	ldr	r0, [r0]
   21c74:	ldr	r1, [r1, #52]	; 0x34
   21c78:	ldr	r1, [r1]
   21c7c:	mov	r6, #0
   21c80:	mov	r2, #0
   21c84:	bl	1a68 <fseek@plt>
   21c88:	ldr	r0, [r4, #48]	; 0x30
   21c8c:	ldr	sl, [fp, #12]
   21c90:	ldr	r7, [fp, #8]
   21c94:	cmp	r0, #1
   21c98:	beq	21d14 <Mat_VarReadData5+0xc0>
   21c9c:	cmp	r0, #0
   21ca0:	bne	21e88 <Mat_VarReadData5+0x234>
   21ca4:	ldr	r3, [r8]
   21ca8:	sub	r5, fp, #36	; 0x24
   21cac:	mov	r0, r5
   21cb0:	mov	r1, #4
   21cb4:	mov	r2, #2
   21cb8:	bl	18d0 <fread@plt>
   21cbc:	ldr	r0, [r8, #20]
   21cc0:	cmp	r0, #0
   21cc4:	beq	21cd8 <Mat_VarReadData5+0x84>
   21cc8:	mov	r0, r5
   21ccc:	bl	1c28 <Mat_int32Swap>
   21cd0:	add	r0, r5, #4
   21cd4:	bl	1c28 <Mat_int32Swap>
   21cd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21cdc:	uxtb	r1, r0
   21ce0:	cmp	r1, #25
   21ce4:	movcs	r1, #0
   21ce8:	str	r1, [r4, #8]
   21cec:	cmp	r0, #65536	; 0x10000
   21cf0:	bcc	21e80 <Mat_VarReadData5+0x22c>
   21cf4:	ldr	r0, [r8]
   21cf8:	mvn	r1, #3
   21cfc:	mov	r2, #1
   21d00:	bl	1a68 <fseek@plt>
   21d04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21d08:	mov	r1, #4
   21d0c:	add	r6, r1, r0, asr #16
   21d10:	b	21e88 <Mat_VarReadData5+0x234>
   21d14:	ldr	r0, [r4, #52]	; 0x34
   21d18:	ldr	r6, [r0, #16]
   21d1c:	cmp	r6, #0
   21d20:	beq	21da4 <Mat_VarReadData5+0x150>
   21d24:	ldr	r0, [r4, #20]
   21d28:	cmp	r0, #0
   21d2c:	beq	21dd4 <Mat_VarReadData5+0x180>
   21d30:	ldr	r0, [sp, #24]
   21d34:	ldr	r1, [r0]
   21d38:	ldr	r0, [r6]
   21d3c:	ldr	r5, [r4, #32]
   21d40:	ldm	r4, {ip, lr}
   21d44:	ldr	r3, [r4, #8]
   21d48:	ldr	r2, [r4, #16]
   21d4c:	stm	sp, {r5, r9}
   21d50:	add	r5, sp, #8
   21d54:	stm	r5, {r7, sl, lr}
   21d58:	str	ip, [sp, #20]
   21d5c:	bl	2243c <GetDataSlab>
   21d60:	mov	r5, r0
   21d64:	cmp	r0, #0
   21d68:	bne	22424 <Mat_VarReadData5+0x7d0>
   21d6c:	mov	ip, r7
   21d70:	ldr	r0, [sp, #24]
   21d74:	ldr	r1, [r0, #4]
   21d78:	ldr	r0, [r6, #4]
   21d7c:	ldr	r7, [r4, #32]
   21d80:	ldr	r6, [r4]
   21d84:	ldr	r5, [r4, #4]
   21d88:	ldr	r3, [r4, #8]
   21d8c:	ldr	r2, [r4, #16]
   21d90:	stm	sp, {r7, r9, ip}
   21d94:	str	sl, [sp, #12]
   21d98:	str	r5, [sp, #16]
   21d9c:	str	r6, [sp, #20]
   21da0:	b	21e00 <Mat_VarReadData5+0x1ac>
   21da4:	ldr	r1, [r0, #12]
   21da8:	add	r0, sp, #28
   21dac:	bl	1960 <inflateCopy@plt>
   21db0:	cmp	r0, #0
   21db4:	beq	21e0c <Mat_VarReadData5+0x1b8>
   21db8:	bl	18a0 <zError@plt>
   21dbc:	mov	r1, r0
   21dc0:	ldr	r0, [pc, #1640]	; 22430 <Mat_VarReadData5+0x7dc>
   21dc4:	add	r0, pc, r0
   21dc8:	bl	19cc <Mat_Critical@plt>
   21dcc:	mvn	r5, #0
   21dd0:	b	22424 <Mat_VarReadData5+0x7d0>
   21dd4:	ldr	r0, [r4, #32]
   21dd8:	ldm	r4, {r1, r5}
   21ddc:	ldr	r3, [r4, #8]
   21de0:	ldr	r2, [r4, #16]
   21de4:	stm	sp, {r0, r9}
   21de8:	str	r7, [sp, #8]
   21dec:	str	sl, [sp, #12]
   21df0:	str	r5, [sp, #16]
   21df4:	str	r1, [sp, #20]
   21df8:	mov	r0, r6
   21dfc:	ldr	r1, [sp, #24]
   21e00:	bl	2243c <GetDataSlab>
   21e04:	mov	r5, r0
   21e08:	b	22424 <Mat_VarReadData5+0x7d0>
   21e0c:	mov	r6, #0
   21e10:	str	r6, [sp, #32]
   21e14:	add	r1, sp, #28
   21e18:	sub	r5, fp, #36	; 0x24
   21e1c:	mov	r0, r8
   21e20:	mov	r2, r5
   21e24:	bl	30b4 <InflateDataType>
   21e28:	ldr	r0, [r8, #20]
   21e2c:	cmp	r0, #0
   21e30:	beq	21e3c <Mat_VarReadData5+0x1e8>
   21e34:	sub	r0, fp, #36	; 0x24
   21e38:	bl	1c28 <Mat_int32Swap>
   21e3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21e40:	uxtb	r1, r0
   21e44:	cmp	r1, #25
   21e48:	movcs	r1, r6
   21e4c:	str	r1, [r4, #8]
   21e50:	cmp	r6, r0, lsr #16
   21e54:	bne	21d08 <Mat_VarReadData5+0xb4>
   21e58:	add	r5, r5, #4
   21e5c:	add	r1, sp, #28
   21e60:	mov	r0, r8
   21e64:	mov	r2, r5
   21e68:	bl	30b4 <InflateDataType>
   21e6c:	ldr	r0, [r8, #20]
   21e70:	cmp	r0, #0
   21e74:	beq	21e80 <Mat_VarReadData5+0x22c>
   21e78:	mov	r0, r5
   21e7c:	bl	1c28 <Mat_int32Swap>
   21e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21e84:	add	r6, r0, #8
   21e88:	asr	r0, r6, #31
   21e8c:	add	r0, r6, r0, lsr #29
   21e90:	bic	r0, r0, #7
   21e94:	subs	r0, r6, r0
   21e98:	rsb	r0, r0, #8
   21e9c:	addne	r6, r6, r0
   21ea0:	ldr	r0, [r4, #4]
   21ea4:	cmp	r0, #2
   21ea8:	bne	21fec <Mat_VarReadData5+0x398>
   21eac:	ldr	r0, [r9]
   21eb0:	ldr	r1, [r7]
   21eb4:	ldr	r2, [sl]
   21eb8:	sub	r2, r2, #1
   21ebc:	mla	r0, r2, r1, r0
   21ec0:	add	r1, r0, #1
   21ec4:	ldr	r0, [r4, #32]
   21ec8:	ldr	r2, [r0]
   21ecc:	mov	r5, #1
   21ed0:	cmp	r1, r2
   21ed4:	bhi	22424 <Mat_VarReadData5+0x7d0>
   21ed8:	ldr	r1, [r9, #4]
   21edc:	ldr	r2, [r7, #4]
   21ee0:	ldr	r3, [sl, #4]
   21ee4:	sub	r3, r3, #1
   21ee8:	mla	r1, r3, r2, r1
   21eec:	add	r1, r1, #1
   21ef0:	ldr	r2, [r0, #4]
   21ef4:	cmp	r1, r2
   21ef8:	bhi	22424 <Mat_VarReadData5+0x7d0>
   21efc:	ldr	r1, [r4, #48]	; 0x30
   21f00:	cmp	r1, #1
   21f04:	beq	22274 <Mat_VarReadData5+0x620>
   21f08:	cmp	r1, #0
   21f0c:	bne	22408 <Mat_VarReadData5+0x7b4>
   21f10:	ldr	r1, [r4, #20]
   21f14:	cmp	r1, #0
   21f18:	beq	223a8 <Mat_VarReadData5+0x754>
   21f1c:	ldr	r3, [r4, #8]
   21f20:	ldr	r2, [r4, #16]
   21f24:	ldr	r1, [sp, #24]
   21f28:	ldr	r1, [r1]
   21f2c:	stm	sp, {r0, r9}
   21f30:	str	r7, [sp, #8]
   21f34:	str	sl, [sp, #12]
   21f38:	mov	r0, r8
   21f3c:	bl	1cd18 <ReadDataSlab2>
   21f40:	ldr	r0, [r4, #52]	; 0x34
   21f44:	ldr	r0, [r0]
   21f48:	add	r1, r0, r6
   21f4c:	ldr	r0, [r8]
   21f50:	mov	r6, #0
   21f54:	mov	r2, #0
   21f58:	bl	1a68 <fseek@plt>
   21f5c:	ldr	r3, [r8]
   21f60:	sub	r5, fp, #36	; 0x24
   21f64:	mov	r0, r5
   21f68:	mov	r1, #4
   21f6c:	mov	r2, #2
   21f70:	bl	18d0 <fread@plt>
   21f74:	ldr	r0, [r8, #20]
   21f78:	cmp	r0, #0
   21f7c:	beq	21f90 <Mat_VarReadData5+0x33c>
   21f80:	mov	r0, r5
   21f84:	bl	1c28 <Mat_int32Swap>
   21f88:	add	r0, r5, #4
   21f8c:	bl	1c28 <Mat_int32Swap>
   21f90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21f94:	uxtb	r1, r0
   21f98:	cmp	r1, #25
   21f9c:	movcc	r6, r1
   21fa0:	str	r6, [r4, #8]
   21fa4:	cmp	r0, #65536	; 0x10000
   21fa8:	bcc	21fbc <Mat_VarReadData5+0x368>
   21fac:	ldr	r0, [r8]
   21fb0:	mvn	r1, #3
   21fb4:	mov	r2, #1
   21fb8:	bl	1a68 <fseek@plt>
   21fbc:	ldr	r0, [sp, #24]
   21fc0:	ldr	r1, [r0, #4]
   21fc4:	ldr	r3, [r4, #8]
   21fc8:	ldr	r2, [r4, #16]
   21fcc:	ldr	r0, [r4, #32]
   21fd0:	stm	sp, {r0, r9}
   21fd4:	ldr	r0, [fp, #8]
   21fd8:	str	r0, [sp, #8]
   21fdc:	str	sl, [sp, #12]
   21fe0:	mov	r0, r8
   21fe4:	bl	1cd18 <ReadDataSlab2>
   21fe8:	b	22408 <Mat_VarReadData5+0x7b4>
   21fec:	ldr	r1, [r4, #48]	; 0x30
   21ff0:	cmp	r1, #1
   21ff4:	beq	220e0 <Mat_VarReadData5+0x48c>
   21ff8:	cmp	r1, #0
   21ffc:	bne	22408 <Mat_VarReadData5+0x7b4>
   22000:	ldr	r1, [r4, #20]
   22004:	cmp	r1, #0
   22008:	beq	2221c <Mat_VarReadData5+0x5c8>
   2200c:	ldr	r1, [sp, #24]
   22010:	ldr	r1, [r1]
   22014:	ldr	r3, [r4, #8]
   22018:	ldr	r2, [r4, #16]
   2201c:	ldr	r5, [r4, #32]
   22020:	stm	sp, {r0, r5, r9}
   22024:	str	r7, [sp, #12]
   22028:	str	sl, [sp, #16]
   2202c:	mov	r0, r8
   22030:	bl	15058 <ReadDataSlabN>
   22034:	ldr	r0, [r4, #52]	; 0x34
   22038:	ldr	r0, [r0]
   2203c:	add	r1, r0, r6
   22040:	ldr	r0, [r8]
   22044:	mov	r6, #0
   22048:	mov	r2, #0
   2204c:	bl	1a68 <fseek@plt>
   22050:	ldr	r3, [r8]
   22054:	sub	r5, fp, #36	; 0x24
   22058:	mov	r0, r5
   2205c:	mov	r1, #4
   22060:	mov	r2, #2
   22064:	bl	18d0 <fread@plt>
   22068:	ldr	r0, [r8, #20]
   2206c:	cmp	r0, #0
   22070:	beq	22084 <Mat_VarReadData5+0x430>
   22074:	mov	r0, r5
   22078:	bl	1c28 <Mat_int32Swap>
   2207c:	add	r0, r5, #4
   22080:	bl	1c28 <Mat_int32Swap>
   22084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22088:	uxtb	r1, r0
   2208c:	cmp	r1, #25
   22090:	movcc	r6, r1
   22094:	str	r6, [r4, #8]
   22098:	cmp	r0, #65536	; 0x10000
   2209c:	bcc	220b0 <Mat_VarReadData5+0x45c>
   220a0:	ldr	r0, [r8]
   220a4:	mvn	r1, #3
   220a8:	mov	r2, #1
   220ac:	bl	1a68 <fseek@plt>
   220b0:	ldr	r0, [sp, #24]
   220b4:	ldr	r1, [r0, #4]
   220b8:	ldmib	r4, {r0, r3}
   220bc:	ldr	r2, [r4, #16]
   220c0:	ldr	r6, [r4, #32]
   220c4:	stm	sp, {r0, r6, r9}
   220c8:	ldr	r0, [fp, #8]
   220cc:	str	r0, [sp, #12]
   220d0:	str	sl, [sp, #16]
   220d4:	mov	r0, r8
   220d8:	bl	15058 <ReadDataSlabN>
   220dc:	b	22408 <Mat_VarReadData5+0x7b4>
   220e0:	ldr	r1, [r4, #20]
   220e4:	cmp	r1, #0
   220e8:	beq	22244 <Mat_VarReadData5+0x5f0>
   220ec:	ldr	r1, [sp, #24]
   220f0:	ldr	r2, [r1]
   220f4:	ldr	r1, [r4, #8]
   220f8:	ldr	r3, [r4, #16]
   220fc:	ldr	r5, [r4, #32]
   22100:	str	r1, [sp]
   22104:	stmib	sp, {r0, r5, r9}
   22108:	str	r7, [sp, #16]
   2210c:	str	sl, [sp, #20]
   22110:	add	r5, sp, #28
   22114:	mov	r0, r8
   22118:	mov	r1, r5
   2211c:	bl	18870 <ReadCompressedDataSlabN>
   22120:	ldr	r0, [r8]
   22124:	ldr	r1, [r4, #52]	; 0x34
   22128:	ldr	r1, [r1]
   2212c:	mov	r7, #0
   22130:	mov	r2, #0
   22134:	bl	1a68 <fseek@plt>
   22138:	mov	r0, r5
   2213c:	bl	1954 <inflateEnd@plt>
   22140:	ldr	r0, [r4, #52]	; 0x34
   22144:	ldr	r1, [r0, #12]
   22148:	mov	r0, r5
   2214c:	bl	1960 <inflateCopy@plt>
   22150:	mov	r5, r0
   22154:	cmp	r0, #0
   22158:	beq	22174 <Mat_VarReadData5+0x520>
   2215c:	mov	r0, r5
   22160:	bl	18a0 <zError@plt>
   22164:	mov	r1, r0
   22168:	ldr	r0, [pc, #712]	; 22438 <Mat_VarReadData5+0x7e4>
   2216c:	add	r0, pc, r0
   22170:	bl	19cc <Mat_Critical@plt>
   22174:	add	sl, sp, #28
   22178:	mov	r0, r8
   2217c:	mov	r1, sl
   22180:	mov	r2, r6
   22184:	bl	234c <InflateSkip>
   22188:	str	r7, [sp, #32]
   2218c:	sub	r2, fp, #36	; 0x24
   22190:	mov	r0, r8
   22194:	mov	r1, sl
   22198:	bl	30b4 <InflateDataType>
   2219c:	ldr	r0, [r8, #20]
   221a0:	cmp	r0, #0
   221a4:	beq	221b0 <Mat_VarReadData5+0x55c>
   221a8:	sub	r0, fp, #36	; 0x24
   221ac:	bl	1c28 <Mat_int32Swap>
   221b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   221b4:	uxtb	r1, r0
   221b8:	mov	r2, #0
   221bc:	cmp	r1, #25
   221c0:	movcs	r1, r2
   221c4:	str	r1, [r4, #8]
   221c8:	cmp	r2, r0, lsr #16
   221cc:	ldr	sl, [fp, #12]
   221d0:	bne	221e4 <Mat_VarReadData5+0x590>
   221d4:	add	r1, sp, #28
   221d8:	mov	r0, r8
   221dc:	mov	r2, #4
   221e0:	bl	234c <InflateSkip>
   221e4:	ldr	r0, [sp, #24]
   221e8:	ldr	r2, [r0, #4]
   221ec:	ldmib	r4, {r0, r1}
   221f0:	ldr	r3, [r4, #16]
   221f4:	ldr	r6, [r4, #32]
   221f8:	str	r1, [sp]
   221fc:	stmib	sp, {r0, r6, r9}
   22200:	ldr	r0, [fp, #8]
   22204:	str	r0, [sp, #16]
   22208:	str	sl, [sp, #20]
   2220c:	add	r1, sp, #28
   22210:	mov	r0, r8
   22214:	bl	18870 <ReadCompressedDataSlabN>
   22218:	b	223f8 <Mat_VarReadData5+0x7a4>
   2221c:	ldr	r3, [r4, #8]
   22220:	ldr	r2, [r4, #16]
   22224:	ldr	r1, [r4, #32]
   22228:	stm	sp, {r0, r1, r9}
   2222c:	str	r7, [sp, #12]
   22230:	str	sl, [sp, #16]
   22234:	mov	r0, r8
   22238:	ldr	r1, [sp, #24]
   2223c:	bl	15058 <ReadDataSlabN>
   22240:	b	22408 <Mat_VarReadData5+0x7b4>
   22244:	ldr	r1, [r4, #8]
   22248:	ldr	r3, [r4, #16]
   2224c:	ldr	r2, [r4, #32]
   22250:	str	r1, [sp]
   22254:	stmib	sp, {r0, r2, r9}
   22258:	str	r7, [sp, #16]
   2225c:	str	sl, [sp, #20]
   22260:	add	r1, sp, #28
   22264:	mov	r0, r8
   22268:	ldr	r2, [sp, #24]
   2226c:	bl	18870 <ReadCompressedDataSlabN>
   22270:	b	223f4 <Mat_VarReadData5+0x7a0>
   22274:	ldr	r1, [r4, #20]
   22278:	cmp	r1, #0
   2227c:	beq	223cc <Mat_VarReadData5+0x778>
   22280:	ldr	r1, [sp, #24]
   22284:	ldr	r2, [r1]
   22288:	ldr	r1, [r4, #8]
   2228c:	ldr	r3, [r4, #16]
   22290:	str	r1, [sp]
   22294:	stmib	sp, {r0, r9}
   22298:	str	r7, [sp, #12]
   2229c:	str	sl, [sp, #16]
   222a0:	add	r5, sp, #28
   222a4:	mov	r0, r8
   222a8:	mov	r1, r5
   222ac:	bl	1e288 <ReadCompressedDataSlab2>
   222b0:	ldr	r0, [r8]
   222b4:	ldr	r1, [r4, #52]	; 0x34
   222b8:	ldr	r1, [r1]
   222bc:	mov	r7, #0
   222c0:	mov	r2, #0
   222c4:	bl	1a68 <fseek@plt>
   222c8:	mov	r0, r5
   222cc:	bl	1954 <inflateEnd@plt>
   222d0:	ldr	r0, [r4, #52]	; 0x34
   222d4:	ldr	r1, [r0, #12]
   222d8:	mov	r0, r5
   222dc:	bl	1960 <inflateCopy@plt>
   222e0:	mov	r5, r0
   222e4:	cmp	r0, #0
   222e8:	beq	22304 <Mat_VarReadData5+0x6b0>
   222ec:	mov	r0, r5
   222f0:	bl	18a0 <zError@plt>
   222f4:	mov	r1, r0
   222f8:	ldr	r0, [pc, #308]	; 22434 <Mat_VarReadData5+0x7e0>
   222fc:	add	r0, pc, r0
   22300:	bl	19cc <Mat_Critical@plt>
   22304:	add	sl, sp, #28
   22308:	mov	r0, r8
   2230c:	mov	r1, sl
   22310:	mov	r2, r6
   22314:	bl	234c <InflateSkip>
   22318:	str	r7, [sp, #32]
   2231c:	sub	r2, fp, #36	; 0x24
   22320:	mov	r0, r8
   22324:	mov	r1, sl
   22328:	bl	30b4 <InflateDataType>
   2232c:	ldr	r0, [r8, #20]
   22330:	cmp	r0, #0
   22334:	beq	22340 <Mat_VarReadData5+0x6ec>
   22338:	sub	r0, fp, #36	; 0x24
   2233c:	bl	1c28 <Mat_int32Swap>
   22340:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22344:	uxtb	r1, r0
   22348:	mov	r2, #0
   2234c:	cmp	r1, #25
   22350:	movcs	r1, r2
   22354:	str	r1, [r4, #8]
   22358:	cmp	r2, r0, lsr #16
   2235c:	ldr	r6, [fp, #12]
   22360:	bne	22374 <Mat_VarReadData5+0x720>
   22364:	add	r1, sp, #28
   22368:	mov	r0, r8
   2236c:	mov	r2, #4
   22370:	bl	234c <InflateSkip>
   22374:	ldr	r0, [sp, #24]
   22378:	ldr	r2, [r0, #4]
   2237c:	ldr	r0, [r4, #8]
   22380:	ldr	r3, [r4, #16]
   22384:	ldr	r1, [r4, #32]
   22388:	stm	sp, {r0, r1, r9}
   2238c:	ldr	r0, [fp, #8]
   22390:	str	r0, [sp, #12]
   22394:	str	r6, [sp, #16]
   22398:	add	r1, sp, #28
   2239c:	mov	r0, r8
   223a0:	bl	1e288 <ReadCompressedDataSlab2>
   223a4:	b	223f8 <Mat_VarReadData5+0x7a4>
   223a8:	ldr	r3, [r4, #8]
   223ac:	ldr	r2, [r4, #16]
   223b0:	stm	sp, {r0, r9}
   223b4:	str	r7, [sp, #8]
   223b8:	str	sl, [sp, #12]
   223bc:	mov	r0, r8
   223c0:	ldr	r1, [sp, #24]
   223c4:	bl	1cd18 <ReadDataSlab2>
   223c8:	b	22408 <Mat_VarReadData5+0x7b4>
   223cc:	ldr	r1, [r4, #8]
   223d0:	ldr	r3, [r4, #16]
   223d4:	str	r1, [sp]
   223d8:	stmib	sp, {r0, r9}
   223dc:	str	r7, [sp, #12]
   223e0:	str	sl, [sp, #16]
   223e4:	add	r1, sp, #28
   223e8:	mov	r0, r8
   223ec:	ldr	r2, [sp, #24]
   223f0:	bl	1e288 <ReadCompressedDataSlab2>
   223f4:	mov	r5, #0
   223f8:	add	r0, sp, #28
   223fc:	bl	1954 <inflateEnd@plt>
   22400:	cmp	r5, #0
   22404:	bne	22424 <Mat_VarReadData5+0x7d0>
   22408:	ldr	r0, [r4, #16]
   2240c:	bl	4477c <ClassType2DataType>
   22410:	str	r0, [r4, #8]
   22414:	ldr	r0, [r4, #16]
   22418:	bl	1a38 <Mat_SizeOfClass@plt>
   2241c:	str	r0, [r4, #12]
   22420:	mov	r5, #0
   22424:	mov	r0, r5
   22428:	sub	sp, fp, #28
   2242c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22430:	.word	0x0002770b
   22434:	.word	0x000271d3
   22438:	.word	0x00027363

0002243c <GetDataSlab>:
   2243c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22440:	add	fp, sp, #28
   22444:	sub	sp, sp, #188	; 0xbc
   22448:	mov	ip, r1
   2244c:	mov	r7, r0
   22450:	cmp	r2, #6
   22454:	cmpeq	r3, #9
   22458:	beq	224cc <GetDataSlab+0x90>
   2245c:	cmp	r2, #7
   22460:	cmpeq	r3, #7
   22464:	beq	224cc <GetDataSlab+0x90>
   22468:	cmp	r2, #10
   2246c:	cmpeq	r3, #3
   22470:	beq	224cc <GetDataSlab+0x90>
   22474:	cmp	r2, #12
   22478:	cmpeq	r3, #5
   2247c:	beq	224cc <GetDataSlab+0x90>
   22480:	cmp	r2, #14
   22484:	cmpeq	r3, #12
   22488:	beq	224cc <GetDataSlab+0x90>
   2248c:	cmp	r2, #8
   22490:	cmpeq	r3, #1
   22494:	beq	224cc <GetDataSlab+0x90>
   22498:	cmp	r2, #11
   2249c:	cmpeq	r3, #4
   224a0:	beq	224cc <GetDataSlab+0x90>
   224a4:	cmp	r2, #13
   224a8:	cmpeq	r3, #6
   224ac:	beq	224cc <GetDataSlab+0x90>
   224b0:	cmp	r2, #15
   224b4:	cmpeq	r3, #13
   224b8:	beq	224cc <GetDataSlab+0x90>
   224bc:	mov	r4, #0
   224c0:	cmp	r2, #9
   224c4:	cmpeq	r3, #2
   224c8:	bne	224d0 <GetDataSlab+0x94>
   224cc:	mov	r4, #1
   224d0:	str	r3, [sp, #52]	; 0x34
   224d4:	ldr	r3, [fp, #20]
   224d8:	add	lr, fp, #8
   224dc:	ldm	lr, {r8, r9, lr}
   224e0:	ldr	r0, [fp, #24]
   224e4:	cmp	r0, #2
   224e8:	bne	22568 <GetDataSlab+0x12c>
   224ec:	ldr	r6, [r9]
   224f0:	ldr	r1, [lr]
   224f4:	ldr	r0, [r3]
   224f8:	str	r0, [sp, #60]	; 0x3c
   224fc:	sub	r0, r0, #1
   22500:	str	r1, [sp, #44]	; 0x2c
   22504:	mla	r0, r0, r1, r6
   22508:	add	r1, r0, #1
   2250c:	ldr	r5, [r8]
   22510:	mov	r0, #1
   22514:	cmp	r1, r5
   22518:	bhi	22560 <GetDataSlab+0x124>
   2251c:	str	r7, [sp, #48]	; 0x30
   22520:	str	r6, [sp, #32]
   22524:	str	r5, [sp, #40]	; 0x28
   22528:	ldr	r6, [r9, #4]
   2252c:	mov	sl, lr
   22530:	mov	r1, r8
   22534:	ldr	r8, [sl, #4]!
   22538:	ldr	r5, [r3, #4]!
   2253c:	str	r5, [sp, #56]	; 0x38
   22540:	sub	r7, r5, #1
   22544:	str	r6, [sp, #28]
   22548:	str	r8, [sp, #36]	; 0x24
   2254c:	mla	r7, r7, r8, r6
   22550:	add	r7, r7, #1
   22554:	ldr	r6, [r1, #4]
   22558:	cmp	r7, r6
   2255c:	bls	228a0 <GetDataSlab+0x464>
   22560:	sub	sp, fp, #28
   22564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22568:	str	r7, [sp, #48]	; 0x30
   2256c:	vmov.i32	q8, #0	; 0x00000000
   22570:	mov	r0, #36	; 0x24
   22574:	sub	r4, fp, #72	; 0x48
   22578:	mov	r1, r4
   2257c:	vst1.64	{d16-d17}, [r1], r0
   22580:	mov	r3, #0
   22584:	str	r3, [r1]
   22588:	add	r1, r4, #16
   2258c:	vst1.64	{d16-d17}, [r1]
   22590:	str	r3, [fp, #-40]	; 0xffffffd8
   22594:	add	r4, sp, #104	; 0x68
   22598:	add	r1, r4, #16
   2259c:	vst1.64	{d16-d17}, [r1]
   225a0:	mov	r1, r4
   225a4:	vst1.64	{d16-d17}, [r1], r0
   225a8:	str	r3, [r1]
   225ac:	str	r3, [sp, #136]	; 0x88
   225b0:	add	sl, sp, #64	; 0x40
   225b4:	add	r1, sl, #16
   225b8:	vst1.64	{d16-d17}, [r1]
   225bc:	mov	r1, sl
   225c0:	vst1.64	{d16-d17}, [r1], r0
   225c4:	str	r3, [r1]
   225c8:	str	r3, [sp, #96]	; 0x60
   225cc:	sub	r0, r2, #6
   225d0:	cmp	r0, #9
   225d4:	bhi	229dc <GetDataSlab+0x5a0>
   225d8:	add	r1, pc, #12
   225dc:	ldr	r0, [r1, r0, lsl #2]
   225e0:	str	ip, [sp, #60]	; 0x3c
   225e4:	str	r9, [sp, #56]	; 0x38
   225e8:	add	pc, r1, r0
   225ec:	.word	0x00000028
   225f0:	.word	0x000003fc
   225f4:	.word	0x00000688
   225f8:	.word	0x00000900
   225fc:	.word	0x00000b78
   22600:	.word	0x00000e00
   22604:	.word	0x00001088
   22608:	.word	0x00001304
   2260c:	.word	0x00001580
   22610:	.word	0x00001814
   22614:	ldr	r0, [sp, #52]	; 0x34
   22618:	sub	r1, r0, #1
   2261c:	mov	r0, #1
   22620:	cmp	r1, #11
   22624:	ldr	r4, [fp, #20]
   22628:	bhi	3962c <GetDataSlab+0x171f0>
   2262c:	add	r2, pc, #4
   22630:	ldr	r1, [r2, r1, lsl #2]
   22634:	add	pc, r2, r1
   22638:	.word	0x00000030
   2263c:	.word	0x00002200
   22640:	.word	0x00002438
   22644:	.word	0x0000267c
   22648:	.word	0x000028c0
   2264c:	.word	0x00002b00
   22650:	.word	0x00002d40
   22654:	.word	0x00016ff4
   22658:	.word	0x00002f84
   2265c:	.word	0x00016ff4
   22660:	.word	0x00016ff4
   22664:	.word	0x000031c8
   22668:	ldr	lr, [lr]
   2266c:	sub	r0, lr, #1
   22670:	str	r0, [fp, #-72]	; 0xffffffb8
   22674:	ldr	r0, [r8]
   22678:	str	r0, [sp, #40]	; 0x28
   2267c:	str	r0, [sp, #64]	; 0x40
   22680:	ldr	r1, [r4]
   22684:	mov	r3, #0
   22688:	ldr	r0, [fp, #24]
   2268c:	cmp	r0, #2
   22690:	str	r1, [sp, #44]	; 0x2c
   22694:	str	r1, [sp, #52]	; 0x34
   22698:	sub	r6, fp, #72	; 0x48
   2269c:	blt	22734 <GetDataSlab+0x2f8>
   226a0:	mov	r0, #1
   226a4:	mov	r3, #0
   226a8:	mov	r4, r8
   226ac:	ldr	r1, [sp, #44]	; 0x2c
   226b0:	str	r1, [sp, #52]	; 0x34
   226b4:	ldr	r1, [fp, #16]
   226b8:	ldr	r2, [r1, r0, lsl #2]
   226bc:	sub	r7, r2, #1
   226c0:	str	r7, [r6, r0, lsl #2]
   226c4:	sub	ip, r0, #1
   226c8:	ldr	r5, [r8, ip, lsl #2]
   226cc:	str	r5, [sl, r0, lsl #2]
   226d0:	mov	r2, #0
   226d4:	mov	r1, r4
   226d8:	ldr	r6, [r1, -r2, lsl #2]!
   226dc:	mul	r7, r7, r6
   226e0:	ldr	r1, [r1, #4]
   226e4:	mul	r5, r1, r5
   226e8:	add	r2, r2, #1
   226ec:	cmp	r0, r2
   226f0:	bne	226d4 <GetDataSlab+0x298>
   226f4:	str	r5, [sl, r0, lsl #2]
   226f8:	sub	r6, fp, #72	; 0x48
   226fc:	str	r7, [r6, r0, lsl #2]
   22700:	ldr	r1, [sl, ip, lsl #2]
   22704:	ldr	r2, [r9, r0, lsl #2]
   22708:	mla	r3, r2, r1, r3
   2270c:	ldr	r1, [fp, #20]
   22710:	ldr	r1, [r1, r0, lsl #2]
   22714:	ldr	r2, [sp, #52]	; 0x34
   22718:	mul	r2, r1, r2
   2271c:	str	r2, [sp, #52]	; 0x34
   22720:	add	r4, r4, #4
   22724:	add	r0, r0, #1
   22728:	ldr	r1, [fp, #24]
   2272c:	cmp	r0, r1
   22730:	bne	226b4 <GetDataSlab+0x278>
   22734:	ldr	r0, [sp, #48]	; 0x30
   22738:	add	r5, r0, r3
   2273c:	cmp	lr, #1
   22740:	mov	r1, r6
   22744:	bne	2f9e4 <GetDataSlab+0xd5a8>
   22748:	ldr	r0, [sp, #52]	; 0x34
   2274c:	cmp	r0, #1
   22750:	ldr	r0, [fp, #20]
   22754:	blt	240b8 <GetDataSlab+0x1c7c>
   22758:	add	lr, r9, #4
   2275c:	add	sl, r0, #4
   22760:	add	r0, sp, #104	; 0x68
   22764:	orr	r6, r0, #4
   22768:	orr	r9, r1, #4
   2276c:	ldr	ip, [sp, #44]	; 0x2c
   22770:	lsl	r0, ip, #3
   22774:	str	r0, [sp, #48]	; 0x30
   22778:	mov	r8, #0
   2277c:	cmp	ip, #1
   22780:	ldr	r0, [fp, #12]
   22784:	blt	227b0 <GetDataSlab+0x374>
   22788:	ldr	r0, [r0]
   2278c:	add	r0, r5, r0
   22790:	ldr	r2, [sp, #60]	; 0x3c
   22794:	ldrsb	r4, [r0], #1
   22798:	vmov	s0, r4
   2279c:	vcvt.f64.s32	d16, s0
   227a0:	vstr	d16, [r2]
   227a4:	subs	ip, ip, #1
   227a8:	add	r2, r2, #8
   227ac:	bne	22794 <GetDataSlab+0x358>
   227b0:	ldr	r0, [sp, #40]	; 0x28
   227b4:	add	r5, r5, r0
   227b8:	add	r3, r3, r0
   227bc:	ldr	r0, [fp, #24]
   227c0:	cmp	r0, #2
   227c4:	blt	22864 <GetDataSlab+0x428>
   227c8:	mov	r2, #0
   227cc:	ldr	ip, [sp, #60]	; 0x3c
   227d0:	mov	r0, r2
   227d4:	ldr	r2, [r6, r2, lsl #2]
   227d8:	add	r2, r2, #1
   227dc:	str	r2, [r6, r0, lsl #2]
   227e0:	ldr	r4, [sl, r0, lsl #2]
   227e4:	sdiv	r1, r2, r4
   227e8:	mls	r1, r1, r4, r2
   227ec:	cmp	r1, #0
   227f0:	bne	2286c <GetDataSlab+0x430>
   227f4:	mov	r1, #0
   227f8:	str	r1, [r6, r0, lsl #2]
   227fc:	add	r7, sp, #64	; 0x40
   22800:	add	r1, r7, r0, lsl #2
   22804:	ldr	r2, [r1, #4]
   22808:	sdiv	r1, r3, r2
   2280c:	mls	r4, r1, r2, r3
   22810:	cmp	r4, #0
   22814:	beq	22834 <GetDataSlab+0x3f8>
   22818:	ldr	r1, [r7, r0, lsl #2]
   2281c:	ldr	r7, [lr, r0, lsl #2]
   22820:	sub	r2, r2, r4
   22824:	mla	r1, r7, r1, r2
   22828:	add	r3, r1, r3
   2282c:	add	r5, r5, r1
   22830:	b	2284c <GetDataSlab+0x410>
   22834:	ldr	r2, [lr, r0, lsl #2]
   22838:	cmp	r2, #0
   2283c:	addne	r1, sp, #64	; 0x40
   22840:	ldrne	r1, [r1, r0, lsl #2]
   22844:	mlane	r3, r1, r2, r3
   22848:	mlane	r5, r1, r2, r5
   2284c:	add	r2, r0, #1
   22850:	add	r0, r0, #2
   22854:	ldr	r1, [fp, #24]
   22858:	cmp	r0, r1
   2285c:	blt	227d0 <GetDataSlab+0x394>
   22860:	b	22878 <GetDataSlab+0x43c>
   22864:	ldr	ip, [sp, #60]	; 0x3c
   22868:	b	22878 <GetDataSlab+0x43c>
   2286c:	ldr	r0, [r9, r0, lsl #2]
   22870:	add	r5, r5, r0
   22874:	add	r3, r0, r3
   22878:	ldr	r0, [sp, #48]	; 0x30
   2287c:	add	ip, ip, r0
   22880:	str	ip, [sp, #60]	; 0x3c
   22884:	ldr	ip, [sp, #44]	; 0x2c
   22888:	add	r8, r8, ip
   2288c:	mov	r0, #0
   22890:	ldr	r1, [sp, #52]	; 0x34
   22894:	cmp	r8, r1
   22898:	blt	2277c <GetDataSlab+0x340>
   2289c:	b	22560 <GetDataSlab+0x124>
   228a0:	mov	r8, r1
   228a4:	ldr	r5, [sp, #44]	; 0x2c
   228a8:	cmp	r5, #1
   228ac:	ldr	r6, [sp, #40]	; 0x28
   228b0:	ldreq	r5, [sp, #60]	; 0x3c
   228b4:	cmpeq	r5, r6
   228b8:	beq	24094 <GetDataSlab+0x1c58>
   228bc:	sub	r2, r2, #6
   228c0:	cmp	r2, #9
   228c4:	ldr	r4, [fp, #20]
   228c8:	bhi	22560 <GetDataSlab+0x124>
   228cc:	add	r0, pc, #4
   228d0:	ldr	r2, [r0, r2, lsl #2]
   228d4:	add	pc, r0, r2
   228d8:	.word	0x00000028
   228dc:	.word	0x000017ec
   228e0:	.word	0x000018c8
   228e4:	.word	0x00001994
   228e8:	.word	0x00001a60
   228ec:	.word	0x00001b34
   228f0:	.word	0x00001c08
   228f4:	.word	0x00001cdc
   228f8:	.word	0x00001db0
   228fc:	.word	0x00001e88
   22900:	ldr	r3, [sp, #52]	; 0x34
   22904:	sub	r1, r3, #1
   22908:	mov	r0, #1
   2290c:	cmp	r1, #11
   22910:	bhi	3dd10 <GetDataSlab+0x1b8d4>
   22914:	add	r2, pc, #8
   22918:	ldr	r1, [r2, r1, lsl #2]
   2291c:	ldr	lr, [sp, #48]	; 0x30
   22920:	add	pc, r2, r1
   22924:	.word	0x00000030
   22928:	.word	0x00018524
   2292c:	.word	0x000185a8
   22930:	.word	0x00018634
   22934:	.word	0x000186c0
   22938:	.word	0x0001874c
   2293c:	.word	0x000187d8
   22940:	.word	0x0001b3f0
   22944:	.word	0x00018860
   22948:	.word	0x0001b3f0
   2294c:	.word	0x0001b3f0
   22950:	.word	0x000188e4
   22954:	ldr	r0, [sp, #56]	; 0x38
   22958:	cmp	r0, #1
   2295c:	blt	240b8 <GetDataSlab+0x1c7c>
   22960:	ldr	r0, [sp, #32]
   22964:	ldr	r1, [sp, #28]
   22968:	mla	r0, r1, r6, r0
   2296c:	add	r1, lr, r0
   22970:	ldr	r0, [sp, #36]	; 0x24
   22974:	mul	lr, r0, r6
   22978:	mov	r3, #0
   2297c:	ldr	r4, [sp, #60]	; 0x3c
   22980:	ldr	r2, [sp, #44]	; 0x2c
   22984:	cmp	r4, #1
   22988:	blt	229c0 <GetDataSlab+0x584>
   2298c:	mov	r0, #0
   22990:	mov	r7, r4
   22994:	mov	r6, ip
   22998:	add	r5, r1, r0
   2299c:	ldrsb	r5, [r5]
   229a0:	vmov	s0, r5
   229a4:	vcvt.f64.s32	d16, s0
   229a8:	vstr	d16, [r6]
   229ac:	add	r0, r0, r2
   229b0:	subs	r7, r7, #1
   229b4:	add	r6, r6, #8
   229b8:	bne	22998 <GetDataSlab+0x55c>
   229bc:	add	ip, ip, r4, lsl #3
   229c0:	add	r1, r1, lr
   229c4:	add	r3, r3, #1
   229c8:	mov	r0, #0
   229cc:	ldr	r7, [sp, #56]	; 0x38
   229d0:	cmp	r3, r7
   229d4:	bne	22984 <GetDataSlab+0x548>
   229d8:	b	22560 <GetDataSlab+0x124>
   229dc:	mov	r0, #1
   229e0:	sub	sp, fp, #28
   229e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229e8:	ldr	r0, [sp, #52]	; 0x34
   229ec:	sub	r1, r0, #1
   229f0:	mov	r0, #1
   229f4:	cmp	r1, #11
   229f8:	ldr	r4, [fp, #20]
   229fc:	bhi	39a60 <GetDataSlab+0x17624>
   22a00:	add	r2, pc, #4
   22a04:	ldr	r1, [r2, r1, lsl #2]
   22a08:	add	pc, r2, r1
   22a0c:	.word	0x00000030
   22a10:	.word	0x00003058
   22a14:	.word	0x00003290
   22a18:	.word	0x000034d4
   22a1c:	.word	0x00003718
   22a20:	.word	0x00003958
   22a24:	.word	0x00003b98
   22a28:	.word	0x00017054
   22a2c:	.word	0x00003dd4
   22a30:	.word	0x00017054
   22a34:	.word	0x00017054
   22a38:	.word	0x00004018
   22a3c:	ldr	lr, [lr]
   22a40:	sub	r0, lr, #1
   22a44:	str	r0, [fp, #-72]	; 0xffffffb8
   22a48:	ldr	r0, [r8]
   22a4c:	str	r0, [sp, #40]	; 0x28
   22a50:	str	r0, [sp, #64]	; 0x40
   22a54:	ldr	r1, [r4]
   22a58:	mov	r3, #0
   22a5c:	ldr	r0, [fp, #24]
   22a60:	cmp	r0, #2
   22a64:	str	r1, [sp, #44]	; 0x2c
   22a68:	str	r1, [sp, #52]	; 0x34
   22a6c:	sub	r6, fp, #72	; 0x48
   22a70:	blt	22b08 <GetDataSlab+0x6cc>
   22a74:	mov	r0, #1
   22a78:	mov	r3, #0
   22a7c:	mov	r4, r8
   22a80:	ldr	r1, [sp, #44]	; 0x2c
   22a84:	str	r1, [sp, #52]	; 0x34
   22a88:	ldr	r1, [fp, #16]
   22a8c:	ldr	r2, [r1, r0, lsl #2]
   22a90:	sub	r7, r2, #1
   22a94:	str	r7, [r6, r0, lsl #2]
   22a98:	sub	ip, r0, #1
   22a9c:	ldr	r5, [r8, ip, lsl #2]
   22aa0:	str	r5, [sl, r0, lsl #2]
   22aa4:	mov	r2, #0
   22aa8:	mov	r1, r4
   22aac:	ldr	r6, [r1, -r2, lsl #2]!
   22ab0:	mul	r7, r7, r6
   22ab4:	ldr	r1, [r1, #4]
   22ab8:	mul	r5, r1, r5
   22abc:	add	r2, r2, #1
   22ac0:	cmp	r0, r2
   22ac4:	bne	22aa8 <GetDataSlab+0x66c>
   22ac8:	str	r5, [sl, r0, lsl #2]
   22acc:	sub	r6, fp, #72	; 0x48
   22ad0:	str	r7, [r6, r0, lsl #2]
   22ad4:	ldr	r1, [sl, ip, lsl #2]
   22ad8:	ldr	r2, [r9, r0, lsl #2]
   22adc:	mla	r3, r2, r1, r3
   22ae0:	ldr	r1, [fp, #20]
   22ae4:	ldr	r1, [r1, r0, lsl #2]
   22ae8:	ldr	r2, [sp, #52]	; 0x34
   22aec:	mul	r2, r1, r2
   22af0:	str	r2, [sp, #52]	; 0x34
   22af4:	add	r4, r4, #4
   22af8:	add	r0, r0, #1
   22afc:	ldr	r1, [fp, #24]
   22b00:	cmp	r0, r1
   22b04:	bne	22a88 <GetDataSlab+0x64c>
   22b08:	ldr	r0, [sp, #48]	; 0x30
   22b0c:	add	r5, r0, r3
   22b10:	cmp	lr, #1
   22b14:	mov	r1, r6
   22b18:	bne	2fb7c <GetDataSlab+0xd740>
   22b1c:	ldr	r0, [sp, #52]	; 0x34
   22b20:	cmp	r0, #1
   22b24:	ldr	r0, [fp, #20]
   22b28:	blt	240b8 <GetDataSlab+0x1c7c>
   22b2c:	add	lr, r9, #4
   22b30:	add	sl, r0, #4
   22b34:	add	r0, sp, #104	; 0x68
   22b38:	orr	r6, r0, #4
   22b3c:	orr	r9, r1, #4
   22b40:	ldr	ip, [sp, #44]	; 0x2c
   22b44:	lsl	r0, ip, #2
   22b48:	str	r0, [sp, #48]	; 0x30
   22b4c:	mov	r8, #0
   22b50:	cmp	ip, #1
   22b54:	ldr	r0, [fp, #12]
   22b58:	blt	22b84 <GetDataSlab+0x748>
   22b5c:	ldr	r0, [r0]
   22b60:	add	r0, r5, r0
   22b64:	ldr	r2, [sp, #60]	; 0x3c
   22b68:	ldrsb	r4, [r0], #1
   22b6c:	vmov	s0, r4
   22b70:	vcvt.f32.s32	s0, s0
   22b74:	vstr	s0, [r2]
   22b78:	subs	ip, ip, #1
   22b7c:	add	r2, r2, #4
   22b80:	bne	22b68 <GetDataSlab+0x72c>
   22b84:	ldr	r0, [sp, #40]	; 0x28
   22b88:	add	r5, r5, r0
   22b8c:	add	r3, r3, r0
   22b90:	ldr	r0, [fp, #24]
   22b94:	cmp	r0, #2
   22b98:	blt	22c38 <GetDataSlab+0x7fc>
   22b9c:	mov	r2, #0
   22ba0:	ldr	ip, [sp, #60]	; 0x3c
   22ba4:	mov	r0, r2
   22ba8:	ldr	r2, [r6, r2, lsl #2]
   22bac:	add	r2, r2, #1
   22bb0:	str	r2, [r6, r0, lsl #2]
   22bb4:	ldr	r4, [sl, r0, lsl #2]
   22bb8:	sdiv	r1, r2, r4
   22bbc:	mls	r1, r1, r4, r2
   22bc0:	cmp	r1, #0
   22bc4:	bne	22c40 <GetDataSlab+0x804>
   22bc8:	mov	r1, #0
   22bcc:	str	r1, [r6, r0, lsl #2]
   22bd0:	add	r7, sp, #64	; 0x40
   22bd4:	add	r1, r7, r0, lsl #2
   22bd8:	ldr	r2, [r1, #4]
   22bdc:	sdiv	r1, r3, r2
   22be0:	mls	r4, r1, r2, r3
   22be4:	cmp	r4, #0
   22be8:	beq	22c08 <GetDataSlab+0x7cc>
   22bec:	ldr	r1, [r7, r0, lsl #2]
   22bf0:	ldr	r7, [lr, r0, lsl #2]
   22bf4:	sub	r2, r2, r4
   22bf8:	mla	r1, r7, r1, r2
   22bfc:	add	r3, r1, r3
   22c00:	add	r5, r5, r1
   22c04:	b	22c20 <GetDataSlab+0x7e4>
   22c08:	ldr	r2, [lr, r0, lsl #2]
   22c0c:	cmp	r2, #0
   22c10:	addne	r1, sp, #64	; 0x40
   22c14:	ldrne	r1, [r1, r0, lsl #2]
   22c18:	mlane	r3, r1, r2, r3
   22c1c:	mlane	r5, r1, r2, r5
   22c20:	add	r2, r0, #1
   22c24:	add	r0, r0, #2
   22c28:	ldr	r1, [fp, #24]
   22c2c:	cmp	r0, r1
   22c30:	blt	22ba4 <GetDataSlab+0x768>
   22c34:	b	22c4c <GetDataSlab+0x810>
   22c38:	ldr	ip, [sp, #60]	; 0x3c
   22c3c:	b	22c4c <GetDataSlab+0x810>
   22c40:	ldr	r0, [r9, r0, lsl #2]
   22c44:	add	r5, r5, r0
   22c48:	add	r3, r0, r3
   22c4c:	ldr	r0, [sp, #48]	; 0x30
   22c50:	add	ip, ip, r0
   22c54:	str	ip, [sp, #60]	; 0x3c
   22c58:	ldr	ip, [sp, #44]	; 0x2c
   22c5c:	add	r8, r8, ip
   22c60:	mov	r0, #0
   22c64:	ldr	r1, [sp, #52]	; 0x34
   22c68:	cmp	r8, r1
   22c6c:	blt	22b50 <GetDataSlab+0x714>
   22c70:	b	22560 <GetDataSlab+0x124>
   22c74:	ldr	r0, [sp, #52]	; 0x34
   22c78:	sub	r1, r0, #1
   22c7c:	mov	r0, #1
   22c80:	cmp	r1, #11
   22c84:	ldr	r4, [fp, #20]
   22c88:	bhi	32f3c <GetDataSlab+0x10b00>
   22c8c:	add	r2, pc, #8
   22c90:	ldr	r1, [r2, r1, lsl #2]
   22c94:	sub	ip, fp, #72	; 0x48
   22c98:	add	pc, r2, r1
   22c9c:	.word	0x00000030
   22ca0:	.word	0x00003fe8
   22ca4:	.word	0x00004208
   22ca8:	.word	0x00004430
   22cac:	.word	0x00004658
   22cb0:	.word	0x0000487c
   22cb4:	.word	0x00004aa0
   22cb8:	.word	0x000102a0
   22cbc:	.word	0x00004cd8
   22cc0:	.word	0x000102a0
   22cc4:	.word	0x000102a0
   22cc8:	.word	0x00004f10
   22ccc:	ldr	lr, [lr]
   22cd0:	sub	r1, lr, #1
   22cd4:	str	r1, [fp, #-72]	; 0xffffffb8
   22cd8:	ldr	r1, [r8]
   22cdc:	str	r1, [sp, #64]	; 0x40
   22ce0:	ldr	r0, [r4]
   22ce4:	str	r0, [sp, #44]	; 0x2c
   22ce8:	mov	r2, #0
   22cec:	ldr	r0, [fp, #24]
   22cf0:	cmp	r0, #2
   22cf4:	blt	22d84 <GetDataSlab+0x948>
   22cf8:	mov	r1, #1
   22cfc:	mov	r2, #0
   22d00:	mov	r0, r8
   22d04:	ldr	r3, [fp, #16]
   22d08:	ldr	r7, [r3, r1, lsl #2]
   22d0c:	sub	r7, r7, #1
   22d10:	str	r7, [ip, r1, lsl #2]
   22d14:	sub	r8, r1, #1
   22d18:	ldr	r3, [fp, #8]
   22d1c:	ldr	r5, [r3, r8, lsl #2]
   22d20:	str	r5, [sl, r1, lsl #2]
   22d24:	mov	r4, #0
   22d28:	mov	r3, r0
   22d2c:	ldr	r6, [r3, -r4, lsl #2]!
   22d30:	mul	r7, r7, r6
   22d34:	ldr	r3, [r3, #4]
   22d38:	mul	r5, r3, r5
   22d3c:	add	r4, r4, #1
   22d40:	cmp	r1, r4
   22d44:	bne	22d28 <GetDataSlab+0x8ec>
   22d48:	str	r5, [sl, r1, lsl #2]
   22d4c:	str	r7, [ip, r1, lsl #2]
   22d50:	ldr	r3, [sl, r8, lsl #2]
   22d54:	ldr	r4, [r9, r1, lsl #2]
   22d58:	mla	r2, r4, r3, r2
   22d5c:	ldr	r4, [fp, #20]
   22d60:	ldr	r3, [r4, r1, lsl #2]
   22d64:	ldr	r5, [sp, #44]	; 0x2c
   22d68:	mul	r5, r3, r5
   22d6c:	str	r5, [sp, #44]	; 0x2c
   22d70:	add	r0, r0, #4
   22d74:	add	r1, r1, #1
   22d78:	ldr	r3, [fp, #24]
   22d7c:	cmp	r1, r3
   22d80:	bne	22d04 <GetDataSlab+0x8c8>
   22d84:	ldr	r0, [sp, #48]	; 0x30
   22d88:	add	ip, r0, r2
   22d8c:	cmp	lr, #1
   22d90:	bne	2fd14 <GetDataSlab+0xd8d8>
   22d94:	ldr	r0, [sp, #44]	; 0x2c
   22d98:	cmp	r0, #1
   22d9c:	blt	3ae3c <GetDataSlab+0x18a00>
   22da0:	add	r9, r9, #4
   22da4:	add	r8, r4, #4
   22da8:	add	r0, sp, #104	; 0x68
   22dac:	orr	r5, r0, #4
   22db0:	sub	r0, fp, #72	; 0x48
   22db4:	orr	r0, r0, #4
   22db8:	str	r0, [sp, #52]	; 0x34
   22dbc:	mov	sl, #0
   22dc0:	ldr	r0, [fp, #12]
   22dc4:	ldr	r0, [r0]
   22dc8:	add	r2, r0, r2
   22dcc:	add	r3, ip, r0
   22dd0:	ldr	r0, [r4]
   22dd4:	cmp	r0, #1
   22dd8:	blt	22e00 <GetDataSlab+0x9c4>
   22ddc:	ldr	r0, [sp, #60]	; 0x3c
   22de0:	add	r1, r0, sl
   22de4:	mov	r7, #0
   22de8:	ldrb	r0, [r3, r7]
   22dec:	strb	r0, [r1, r7]
   22df0:	add	r7, r7, #1
   22df4:	ldr	r0, [r4]
   22df8:	cmp	r7, r0
   22dfc:	blt	22de8 <GetDataSlab+0x9ac>
   22e00:	ldr	r1, [fp, #12]
   22e04:	ldr	r1, [r1]
   22e08:	ldr	r7, [fp, #8]
   22e0c:	ldr	r4, [r7]
   22e10:	sub	r1, r4, r1
   22e14:	add	ip, r3, r1
   22e18:	add	r2, r2, r1
   22e1c:	ldr	r1, [fp, #24]
   22e20:	cmp	r1, #2
   22e24:	blt	22ed0 <GetDataSlab+0xa94>
   22e28:	mov	r1, #0
   22e2c:	mov	r7, r1
   22e30:	ldr	r1, [r5, r1, lsl #2]
   22e34:	add	r1, r1, #1
   22e38:	str	r1, [r5, r7, lsl #2]
   22e3c:	ldr	r4, [r8, r7, lsl #2]
   22e40:	sdiv	lr, r1, r4
   22e44:	mls	r1, lr, r4, r1
   22e48:	cmp	r1, #0
   22e4c:	bne	22ec0 <GetDataSlab+0xa84>
   22e50:	mov	r1, #0
   22e54:	str	r1, [r5, r7, lsl #2]
   22e58:	add	r3, sp, #64	; 0x40
   22e5c:	add	r1, r3, r7, lsl #2
   22e60:	ldr	r1, [r1, #4]
   22e64:	sdiv	r4, r2, r1
   22e68:	mls	r4, r4, r1, r2
   22e6c:	cmp	r4, #0
   22e70:	beq	22e90 <GetDataSlab+0xa54>
   22e74:	ldr	r6, [r3, r7, lsl #2]
   22e78:	ldr	r3, [r9, r7, lsl #2]
   22e7c:	sub	r1, r1, r4
   22e80:	mla	r1, r3, r6, r1
   22e84:	add	r2, r1, r2
   22e88:	add	ip, ip, r1
   22e8c:	b	22ea8 <GetDataSlab+0xa6c>
   22e90:	ldr	r1, [r9, r7, lsl #2]
   22e94:	cmp	r1, #0
   22e98:	addne	r3, sp, #64	; 0x40
   22e9c:	ldrne	r3, [r3, r7, lsl #2]
   22ea0:	mlane	r2, r3, r1, r2
   22ea4:	mlane	ip, r3, r1, ip
   22ea8:	add	r1, r7, #1
   22eac:	add	r3, r7, #2
   22eb0:	ldr	r7, [fp, #24]
   22eb4:	cmp	r3, r7
   22eb8:	blt	22e2c <GetDataSlab+0x9f0>
   22ebc:	b	22ed0 <GetDataSlab+0xa94>
   22ec0:	ldr	r1, [sp, #52]	; 0x34
   22ec4:	ldr	r1, [r1, r7, lsl #2]
   22ec8:	add	ip, ip, r1
   22ecc:	add	r2, r1, r2
   22ed0:	add	sl, r0, sl
   22ed4:	mov	r0, #0
   22ed8:	ldr	r1, [sp, #44]	; 0x2c
   22edc:	cmp	sl, r1
   22ee0:	ldr	r4, [fp, #20]
   22ee4:	blt	22dc0 <GetDataSlab+0x984>
   22ee8:	b	22560 <GetDataSlab+0x124>
   22eec:	ldr	r0, [sp, #52]	; 0x34
   22ef0:	sub	r1, r0, #1
   22ef4:	mov	r0, #1
   22ef8:	cmp	r1, #11
   22efc:	ldr	r4, [fp, #20]
   22f00:	bhi	33c58 <GetDataSlab+0x1181c>
   22f04:	add	r2, pc, #8
   22f08:	ldr	r1, [r2, r1, lsl #2]
   22f0c:	sub	ip, fp, #72	; 0x48
   22f10:	add	pc, r2, r1
   22f14:	.word	0x00000030
   22f18:	.word	0x00004ed0
   22f1c:	.word	0x000050f0
   22f20:	.word	0x00005318
   22f24:	.word	0x00005540
   22f28:	.word	0x00005764
   22f2c:	.word	0x00005988
   22f30:	.word	0x00010d44
   22f34:	.word	0x00005bc0
   22f38:	.word	0x00010d44
   22f3c:	.word	0x00010d44
   22f40:	.word	0x00005df8
   22f44:	ldr	lr, [lr]
   22f48:	sub	r1, lr, #1
   22f4c:	str	r1, [fp, #-72]	; 0xffffffb8
   22f50:	ldr	r1, [r8]
   22f54:	str	r1, [sp, #64]	; 0x40
   22f58:	ldr	r0, [r4]
   22f5c:	str	r0, [sp, #44]	; 0x2c
   22f60:	mov	r2, #0
   22f64:	ldr	r0, [fp, #24]
   22f68:	cmp	r0, #2
   22f6c:	blt	22ffc <GetDataSlab+0xbc0>
   22f70:	mov	r1, #1
   22f74:	mov	r2, #0
   22f78:	mov	r0, r8
   22f7c:	ldr	r3, [fp, #16]
   22f80:	ldr	r7, [r3, r1, lsl #2]
   22f84:	sub	r7, r7, #1
   22f88:	str	r7, [ip, r1, lsl #2]
   22f8c:	sub	r8, r1, #1
   22f90:	ldr	r3, [fp, #8]
   22f94:	ldr	r5, [r3, r8, lsl #2]
   22f98:	str	r5, [sl, r1, lsl #2]
   22f9c:	mov	r4, #0
   22fa0:	mov	r3, r0
   22fa4:	ldr	r6, [r3, -r4, lsl #2]!
   22fa8:	mul	r7, r7, r6
   22fac:	ldr	r3, [r3, #4]
   22fb0:	mul	r5, r3, r5
   22fb4:	add	r4, r4, #1
   22fb8:	cmp	r1, r4
   22fbc:	bne	22fa0 <GetDataSlab+0xb64>
   22fc0:	str	r5, [sl, r1, lsl #2]
   22fc4:	str	r7, [ip, r1, lsl #2]
   22fc8:	ldr	r3, [sl, r8, lsl #2]
   22fcc:	ldr	r4, [r9, r1, lsl #2]
   22fd0:	mla	r2, r4, r3, r2
   22fd4:	ldr	r4, [fp, #20]
   22fd8:	ldr	r3, [r4, r1, lsl #2]
   22fdc:	ldr	r5, [sp, #44]	; 0x2c
   22fe0:	mul	r5, r3, r5
   22fe4:	str	r5, [sp, #44]	; 0x2c
   22fe8:	add	r0, r0, #4
   22fec:	add	r1, r1, #1
   22ff0:	ldr	r3, [fp, #24]
   22ff4:	cmp	r1, r3
   22ff8:	bne	22f7c <GetDataSlab+0xb40>
   22ffc:	ldr	r0, [sp, #48]	; 0x30
   23000:	add	ip, r0, r2
   23004:	cmp	lr, #1
   23008:	bne	2fe94 <GetDataSlab+0xda58>
   2300c:	ldr	r0, [sp, #44]	; 0x2c
   23010:	cmp	r0, #1
   23014:	blt	3ae3c <GetDataSlab+0x18a00>
   23018:	add	r9, r9, #4
   2301c:	add	r8, r4, #4
   23020:	add	r0, sp, #104	; 0x68
   23024:	orr	r5, r0, #4
   23028:	sub	r0, fp, #72	; 0x48
   2302c:	orr	r0, r0, #4
   23030:	str	r0, [sp, #52]	; 0x34
   23034:	mov	sl, #0
   23038:	ldr	r0, [fp, #12]
   2303c:	ldr	r0, [r0]
   23040:	add	r2, r0, r2
   23044:	add	r3, ip, r0
   23048:	ldr	r0, [r4]
   2304c:	cmp	r0, #1
   23050:	blt	23078 <GetDataSlab+0xc3c>
   23054:	ldr	r0, [sp, #60]	; 0x3c
   23058:	add	r1, r0, sl
   2305c:	mov	r7, #0
   23060:	ldrb	r0, [r3, r7]
   23064:	strb	r0, [r1, r7]
   23068:	add	r7, r7, #1
   2306c:	ldr	r0, [r4]
   23070:	cmp	r7, r0
   23074:	blt	23060 <GetDataSlab+0xc24>
   23078:	ldr	r1, [fp, #12]
   2307c:	ldr	r1, [r1]
   23080:	ldr	r7, [fp, #8]
   23084:	ldr	r4, [r7]
   23088:	sub	r1, r4, r1
   2308c:	add	ip, r3, r1
   23090:	add	r2, r2, r1
   23094:	ldr	r1, [fp, #24]
   23098:	cmp	r1, #2
   2309c:	blt	23148 <GetDataSlab+0xd0c>
   230a0:	mov	r1, #0
   230a4:	mov	r7, r1
   230a8:	ldr	r1, [r5, r1, lsl #2]
   230ac:	add	r1, r1, #1
   230b0:	str	r1, [r5, r7, lsl #2]
   230b4:	ldr	r4, [r8, r7, lsl #2]
   230b8:	sdiv	lr, r1, r4
   230bc:	mls	r1, lr, r4, r1
   230c0:	cmp	r1, #0
   230c4:	bne	23138 <GetDataSlab+0xcfc>
   230c8:	mov	r1, #0
   230cc:	str	r1, [r5, r7, lsl #2]
   230d0:	add	r3, sp, #64	; 0x40
   230d4:	add	r1, r3, r7, lsl #2
   230d8:	ldr	r1, [r1, #4]
   230dc:	sdiv	r4, r2, r1
   230e0:	mls	r4, r4, r1, r2
   230e4:	cmp	r4, #0
   230e8:	beq	23108 <GetDataSlab+0xccc>
   230ec:	ldr	r6, [r3, r7, lsl #2]
   230f0:	ldr	r3, [r9, r7, lsl #2]
   230f4:	sub	r1, r1, r4
   230f8:	mla	r1, r3, r6, r1
   230fc:	add	r2, r1, r2
   23100:	add	ip, ip, r1
   23104:	b	23120 <GetDataSlab+0xce4>
   23108:	ldr	r1, [r9, r7, lsl #2]
   2310c:	cmp	r1, #0
   23110:	addne	r3, sp, #64	; 0x40
   23114:	ldrne	r3, [r3, r7, lsl #2]
   23118:	mlane	r2, r3, r1, r2
   2311c:	mlane	ip, r3, r1, ip
   23120:	add	r1, r7, #1
   23124:	add	r3, r7, #2
   23128:	ldr	r7, [fp, #24]
   2312c:	cmp	r3, r7
   23130:	blt	230a4 <GetDataSlab+0xc68>
   23134:	b	23148 <GetDataSlab+0xd0c>
   23138:	ldr	r1, [sp, #52]	; 0x34
   2313c:	ldr	r1, [r1, r7, lsl #2]
   23140:	add	ip, ip, r1
   23144:	add	r2, r1, r2
   23148:	add	sl, r0, sl
   2314c:	mov	r0, #0
   23150:	ldr	r1, [sp, #44]	; 0x2c
   23154:	cmp	sl, r1
   23158:	ldr	r4, [fp, #20]
   2315c:	blt	23038 <GetDataSlab+0xbfc>
   23160:	b	22560 <GetDataSlab+0x124>
   23164:	ldr	r0, [sp, #52]	; 0x34
   23168:	sub	r1, r0, #1
   2316c:	mov	r0, #1
   23170:	cmp	r1, #11
   23174:	ldr	r4, [fp, #20]
   23178:	bhi	39e88 <GetDataSlab+0x17a4c>
   2317c:	add	r2, pc, #8
   23180:	ldr	r1, [r2, r1, lsl #2]
   23184:	sub	ip, fp, #72	; 0x48
   23188:	add	pc, r2, r1
   2318c:	.word	0x00000030
   23190:	.word	0x00005db8
   23194:	.word	0x00005fe8
   23198:	.word	0x00006220
   2319c:	.word	0x00006458
   231a0:	.word	0x00006680
   231a4:	.word	0x000068a8
   231a8:	.word	0x00016cfc
   231ac:	.word	0x00006aec
   231b0:	.word	0x00016cfc
   231b4:	.word	0x00016cfc
   231b8:	.word	0x00006d30
   231bc:	ldr	lr, [lr]
   231c0:	sub	r0, lr, #1
   231c4:	str	r0, [fp, #-72]	; 0xffffffb8
   231c8:	ldr	r0, [r8]
   231cc:	str	r0, [sp, #40]	; 0x28
   231d0:	str	r0, [sp, #64]	; 0x40
   231d4:	ldr	r1, [r4]
   231d8:	mov	r3, #0
   231dc:	ldr	r0, [fp, #24]
   231e0:	cmp	r0, #2
   231e4:	str	r1, [sp, #44]	; 0x2c
   231e8:	str	r1, [sp, #52]	; 0x34
   231ec:	blt	2328c <GetDataSlab+0xe50>
   231f0:	mov	r0, #1
   231f4:	mov	r3, #0
   231f8:	mov	r4, r8
   231fc:	ldr	r1, [sp, #44]	; 0x2c
   23200:	str	r1, [sp, #52]	; 0x34
   23204:	ldr	r1, [fp, #16]
   23208:	ldr	r2, [r1, r0, lsl #2]
   2320c:	sub	r7, r2, #1
   23210:	str	r7, [ip, r0, lsl #2]
   23214:	sub	ip, r0, #1
   23218:	ldr	r5, [r8, ip, lsl #2]
   2321c:	str	r5, [sl, r0, lsl #2]
   23220:	mov	r2, #0
   23224:	mov	r1, r4
   23228:	ldr	r6, [r1, -r2, lsl #2]!
   2322c:	mul	r7, r7, r6
   23230:	ldr	r1, [r1, #4]
   23234:	mul	r5, r1, r5
   23238:	add	r2, r2, #1
   2323c:	cmp	r0, r2
   23240:	bne	23224 <GetDataSlab+0xde8>
   23244:	str	r5, [sl, r0, lsl #2]
   23248:	sub	r1, fp, #72	; 0x48
   2324c:	mov	r2, r1
   23250:	str	r7, [r1, r0, lsl #2]
   23254:	ldr	r1, [sl, ip, lsl #2]
   23258:	mov	ip, r2
   2325c:	ldr	r2, [r9, r0, lsl #2]
   23260:	mla	r3, r2, r1, r3
   23264:	ldr	r1, [fp, #20]
   23268:	ldr	r1, [r1, r0, lsl #2]
   2326c:	ldr	r2, [sp, #52]	; 0x34
   23270:	mul	r2, r1, r2
   23274:	str	r2, [sp, #52]	; 0x34
   23278:	add	r4, r4, #4
   2327c:	add	r0, r0, #1
   23280:	ldr	r1, [fp, #24]
   23284:	cmp	r0, r1
   23288:	bne	23204 <GetDataSlab+0xdc8>
   2328c:	ldr	r0, [sp, #48]	; 0x30
   23290:	add	r5, r0, r3
   23294:	cmp	lr, #1
   23298:	bne	30014 <GetDataSlab+0xdbd8>
   2329c:	ldr	r0, [sp, #52]	; 0x34
   232a0:	cmp	r0, #1
   232a4:	ldr	r0, [fp, #20]
   232a8:	blt	3ae3c <GetDataSlab+0x18a00>
   232ac:	add	lr, r9, #4
   232b0:	add	sl, r0, #4
   232b4:	add	r0, sp, #104	; 0x68
   232b8:	orr	r6, r0, #4
   232bc:	orr	r9, ip, #4
   232c0:	ldr	r1, [sp, #44]	; 0x2c
   232c4:	lsl	r0, r1, #1
   232c8:	str	r0, [sp, #48]	; 0x30
   232cc:	mov	r8, #0
   232d0:	cmp	r1, #1
   232d4:	ldr	r0, [fp, #12]
   232d8:	blt	232fc <GetDataSlab+0xec0>
   232dc:	ldr	r0, [r0]
   232e0:	add	r0, r5, r0
   232e4:	ldr	ip, [sp, #44]	; 0x2c
   232e8:	ldr	r2, [sp, #60]	; 0x3c
   232ec:	ldrsb	r4, [r0], #1
   232f0:	strh	r4, [r2], #2
   232f4:	subs	ip, ip, #1
   232f8:	bne	232ec <GetDataSlab+0xeb0>
   232fc:	ldr	r0, [sp, #40]	; 0x28
   23300:	add	r5, r5, r0
   23304:	add	r3, r3, r0
   23308:	ldr	r0, [fp, #24]
   2330c:	cmp	r0, #2
   23310:	blt	233b0 <GetDataSlab+0xf74>
   23314:	mov	r2, #0
   23318:	ldr	ip, [sp, #60]	; 0x3c
   2331c:	mov	r0, r2
   23320:	ldr	r2, [r6, r2, lsl #2]
   23324:	add	r2, r2, #1
   23328:	str	r2, [r6, r0, lsl #2]
   2332c:	ldr	r4, [sl, r0, lsl #2]
   23330:	sdiv	r1, r2, r4
   23334:	mls	r1, r1, r4, r2
   23338:	cmp	r1, #0
   2333c:	bne	233b8 <GetDataSlab+0xf7c>
   23340:	mov	r1, #0
   23344:	str	r1, [r6, r0, lsl #2]
   23348:	add	r7, sp, #64	; 0x40
   2334c:	add	r1, r7, r0, lsl #2
   23350:	ldr	r2, [r1, #4]
   23354:	sdiv	r1, r3, r2
   23358:	mls	r4, r1, r2, r3
   2335c:	cmp	r4, #0
   23360:	beq	23380 <GetDataSlab+0xf44>
   23364:	ldr	r1, [r7, r0, lsl #2]
   23368:	ldr	r7, [lr, r0, lsl #2]
   2336c:	sub	r2, r2, r4
   23370:	mla	r1, r7, r1, r2
   23374:	add	r3, r1, r3
   23378:	add	r5, r5, r1
   2337c:	b	23398 <GetDataSlab+0xf5c>
   23380:	ldr	r2, [lr, r0, lsl #2]
   23384:	cmp	r2, #0
   23388:	addne	r1, sp, #64	; 0x40
   2338c:	ldrne	r1, [r1, r0, lsl #2]
   23390:	mlane	r3, r1, r2, r3
   23394:	mlane	r5, r1, r2, r5
   23398:	add	r2, r0, #1
   2339c:	add	r0, r0, #2
   233a0:	ldr	r1, [fp, #24]
   233a4:	cmp	r0, r1
   233a8:	blt	2331c <GetDataSlab+0xee0>
   233ac:	b	233c4 <GetDataSlab+0xf88>
   233b0:	ldr	ip, [sp, #60]	; 0x3c
   233b4:	b	233c4 <GetDataSlab+0xf88>
   233b8:	ldr	r0, [r9, r0, lsl #2]
   233bc:	add	r5, r5, r0
   233c0:	add	r3, r0, r3
   233c4:	ldr	r0, [sp, #48]	; 0x30
   233c8:	add	ip, ip, r0
   233cc:	str	ip, [sp, #60]	; 0x3c
   233d0:	ldr	r1, [sp, #44]	; 0x2c
   233d4:	add	r8, r8, r1
   233d8:	mov	r0, #0
   233dc:	ldr	r2, [sp, #52]	; 0x34
   233e0:	cmp	r8, r2
   233e4:	blt	232d0 <GetDataSlab+0xe94>
   233e8:	b	22560 <GetDataSlab+0x124>
   233ec:	ldr	r0, [sp, #52]	; 0x34
   233f0:	sub	r1, r0, #1
   233f4:	mov	r0, #1
   233f8:	cmp	r1, #11
   233fc:	ldr	r4, [fp, #20]
   23400:	bhi	3a268 <GetDataSlab+0x17e2c>
   23404:	add	r2, pc, #8
   23408:	ldr	r1, [r2, r1, lsl #2]
   2340c:	sub	ip, fp, #72	; 0x48
   23410:	add	pc, r2, r1
   23414:	.word	0x00000030
   23418:	.word	0x00006ce8
   2341c:	.word	0x00006f18
   23420:	.word	0x00007150
   23424:	.word	0x00007388
   23428:	.word	0x000075b0
   2342c:	.word	0x000077d8
   23430:	.word	0x00016e54
   23434:	.word	0x00007a1c
   23438:	.word	0x00016e54
   2343c:	.word	0x00016e54
   23440:	.word	0x00007c60
   23444:	ldr	lr, [lr]
   23448:	sub	r0, lr, #1
   2344c:	str	r0, [fp, #-72]	; 0xffffffb8
   23450:	ldr	r0, [r8]
   23454:	str	r0, [sp, #40]	; 0x28
   23458:	str	r0, [sp, #64]	; 0x40
   2345c:	ldr	r1, [r4]
   23460:	mov	r3, #0
   23464:	ldr	r0, [fp, #24]
   23468:	cmp	r0, #2
   2346c:	str	r1, [sp, #44]	; 0x2c
   23470:	str	r1, [sp, #52]	; 0x34
   23474:	blt	23514 <GetDataSlab+0x10d8>
   23478:	mov	r0, #1
   2347c:	mov	r3, #0
   23480:	mov	r4, r8
   23484:	ldr	r1, [sp, #44]	; 0x2c
   23488:	str	r1, [sp, #52]	; 0x34
   2348c:	ldr	r1, [fp, #16]
   23490:	ldr	r2, [r1, r0, lsl #2]
   23494:	sub	r7, r2, #1
   23498:	str	r7, [ip, r0, lsl #2]
   2349c:	sub	ip, r0, #1
   234a0:	ldr	r5, [r8, ip, lsl #2]
   234a4:	str	r5, [sl, r0, lsl #2]
   234a8:	mov	r2, #0
   234ac:	mov	r1, r4
   234b0:	ldr	r6, [r1, -r2, lsl #2]!
   234b4:	mul	r7, r7, r6
   234b8:	ldr	r1, [r1, #4]
   234bc:	mul	r5, r1, r5
   234c0:	add	r2, r2, #1
   234c4:	cmp	r0, r2
   234c8:	bne	234ac <GetDataSlab+0x1070>
   234cc:	str	r5, [sl, r0, lsl #2]
   234d0:	sub	r1, fp, #72	; 0x48
   234d4:	mov	r2, r1
   234d8:	str	r7, [r1, r0, lsl #2]
   234dc:	ldr	r1, [sl, ip, lsl #2]
   234e0:	mov	ip, r2
   234e4:	ldr	r2, [r9, r0, lsl #2]
   234e8:	mla	r3, r2, r1, r3
   234ec:	ldr	r1, [fp, #20]
   234f0:	ldr	r1, [r1, r0, lsl #2]
   234f4:	ldr	r2, [sp, #52]	; 0x34
   234f8:	mul	r2, r1, r2
   234fc:	str	r2, [sp, #52]	; 0x34
   23500:	add	r4, r4, #4
   23504:	add	r0, r0, #1
   23508:	ldr	r1, [fp, #24]
   2350c:	cmp	r0, r1
   23510:	bne	2348c <GetDataSlab+0x1050>
   23514:	ldr	r0, [sp, #48]	; 0x30
   23518:	add	r5, r0, r3
   2351c:	cmp	lr, #1
   23520:	bne	30194 <GetDataSlab+0xdd58>
   23524:	ldr	r0, [sp, #52]	; 0x34
   23528:	cmp	r0, #1
   2352c:	ldr	r0, [fp, #20]
   23530:	blt	3ae3c <GetDataSlab+0x18a00>
   23534:	add	lr, r9, #4
   23538:	add	sl, r0, #4
   2353c:	add	r0, sp, #104	; 0x68
   23540:	orr	r6, r0, #4
   23544:	orr	r9, ip, #4
   23548:	ldr	r1, [sp, #44]	; 0x2c
   2354c:	lsl	r0, r1, #1
   23550:	str	r0, [sp, #48]	; 0x30
   23554:	mov	r8, #0
   23558:	cmp	r1, #1
   2355c:	ldr	r0, [fp, #12]
   23560:	blt	23584 <GetDataSlab+0x1148>
   23564:	ldr	r0, [r0]
   23568:	add	r0, r5, r0
   2356c:	ldr	ip, [sp, #44]	; 0x2c
   23570:	ldr	r2, [sp, #60]	; 0x3c
   23574:	ldrsb	r4, [r0], #1
   23578:	strh	r4, [r2], #2
   2357c:	subs	ip, ip, #1
   23580:	bne	23574 <GetDataSlab+0x1138>
   23584:	ldr	r0, [sp, #40]	; 0x28
   23588:	add	r5, r5, r0
   2358c:	add	r3, r3, r0
   23590:	ldr	r0, [fp, #24]
   23594:	cmp	r0, #2
   23598:	blt	23638 <GetDataSlab+0x11fc>
   2359c:	mov	r2, #0
   235a0:	ldr	ip, [sp, #60]	; 0x3c
   235a4:	mov	r0, r2
   235a8:	ldr	r2, [r6, r2, lsl #2]
   235ac:	add	r2, r2, #1
   235b0:	str	r2, [r6, r0, lsl #2]
   235b4:	ldr	r4, [sl, r0, lsl #2]
   235b8:	sdiv	r1, r2, r4
   235bc:	mls	r1, r1, r4, r2
   235c0:	cmp	r1, #0
   235c4:	bne	23640 <GetDataSlab+0x1204>
   235c8:	mov	r1, #0
   235cc:	str	r1, [r6, r0, lsl #2]
   235d0:	add	r7, sp, #64	; 0x40
   235d4:	add	r1, r7, r0, lsl #2
   235d8:	ldr	r2, [r1, #4]
   235dc:	sdiv	r1, r3, r2
   235e0:	mls	r4, r1, r2, r3
   235e4:	cmp	r4, #0
   235e8:	beq	23608 <GetDataSlab+0x11cc>
   235ec:	ldr	r1, [r7, r0, lsl #2]
   235f0:	ldr	r7, [lr, r0, lsl #2]
   235f4:	sub	r2, r2, r4
   235f8:	mla	r1, r7, r1, r2
   235fc:	add	r3, r1, r3
   23600:	add	r5, r5, r1
   23604:	b	23620 <GetDataSlab+0x11e4>
   23608:	ldr	r2, [lr, r0, lsl #2]
   2360c:	cmp	r2, #0
   23610:	addne	r1, sp, #64	; 0x40
   23614:	ldrne	r1, [r1, r0, lsl #2]
   23618:	mlane	r3, r1, r2, r3
   2361c:	mlane	r5, r1, r2, r5
   23620:	add	r2, r0, #1
   23624:	add	r0, r0, #2
   23628:	ldr	r1, [fp, #24]
   2362c:	cmp	r0, r1
   23630:	blt	235a4 <GetDataSlab+0x1168>
   23634:	b	2364c <GetDataSlab+0x1210>
   23638:	ldr	ip, [sp, #60]	; 0x3c
   2363c:	b	2364c <GetDataSlab+0x1210>
   23640:	ldr	r0, [r9, r0, lsl #2]
   23644:	add	r5, r5, r0
   23648:	add	r3, r0, r3
   2364c:	ldr	r0, [sp, #48]	; 0x30
   23650:	add	ip, ip, r0
   23654:	str	ip, [sp, #60]	; 0x3c
   23658:	ldr	r1, [sp, #44]	; 0x2c
   2365c:	add	r8, r8, r1
   23660:	mov	r0, #0
   23664:	ldr	r2, [sp, #52]	; 0x34
   23668:	cmp	r8, r2
   2366c:	blt	23558 <GetDataSlab+0x111c>
   23670:	b	22560 <GetDataSlab+0x124>
   23674:	ldr	r0, [sp, #52]	; 0x34
   23678:	sub	r1, r0, #1
   2367c:	mov	r0, #1
   23680:	cmp	r1, #11
   23684:	ldr	r4, [fp, #20]
   23688:	bhi	3627c <GetDataSlab+0x13e40>
   2368c:	add	r2, pc, #8
   23690:	ldr	r1, [r2, r1, lsl #2]
   23694:	sub	ip, fp, #72	; 0x48
   23698:	add	pc, r2, r1
   2369c:	.word	0x00000030
   236a0:	.word	0x00007c18
   236a4:	.word	0x00007e38
   236a8:	.word	0x00008060
   236ac:	.word	0x00008288
   236b0:	.word	0x000084ac
   236b4:	.word	0x000086d0
   236b8:	.word	0x00012be0
   236bc:	.word	0x00008908
   236c0:	.word	0x00012be0
   236c4:	.word	0x00012be0
   236c8:	.word	0x00008b40
   236cc:	ldr	lr, [lr]
   236d0:	sub	r1, lr, #1
   236d4:	str	r1, [fp, #-72]	; 0xffffffb8
   236d8:	ldr	r1, [r8]
   236dc:	str	r1, [sp, #64]	; 0x40
   236e0:	ldr	r0, [r4]
   236e4:	str	r0, [sp, #44]	; 0x2c
   236e8:	mov	r2, #0
   236ec:	ldr	r0, [fp, #24]
   236f0:	cmp	r0, #2
   236f4:	blt	23784 <GetDataSlab+0x1348>
   236f8:	mov	r1, #1
   236fc:	mov	r2, #0
   23700:	mov	r0, r8
   23704:	ldr	r3, [fp, #16]
   23708:	ldr	r7, [r3, r1, lsl #2]
   2370c:	sub	r7, r7, #1
   23710:	str	r7, [ip, r1, lsl #2]
   23714:	sub	r8, r1, #1
   23718:	ldr	r3, [fp, #8]
   2371c:	ldr	r5, [r3, r8, lsl #2]
   23720:	str	r5, [sl, r1, lsl #2]
   23724:	mov	r4, #0
   23728:	mov	r3, r0
   2372c:	ldr	r6, [r3, -r4, lsl #2]!
   23730:	mul	r7, r7, r6
   23734:	ldr	r3, [r3, #4]
   23738:	mul	r5, r3, r5
   2373c:	add	r4, r4, #1
   23740:	cmp	r1, r4
   23744:	bne	23728 <GetDataSlab+0x12ec>
   23748:	str	r5, [sl, r1, lsl #2]
   2374c:	str	r7, [ip, r1, lsl #2]
   23750:	ldr	r3, [sl, r8, lsl #2]
   23754:	ldr	r4, [r9, r1, lsl #2]
   23758:	mla	r2, r4, r3, r2
   2375c:	ldr	r4, [fp, #20]
   23760:	ldr	r3, [r4, r1, lsl #2]
   23764:	ldr	r5, [sp, #44]	; 0x2c
   23768:	mul	r5, r3, r5
   2376c:	str	r5, [sp, #44]	; 0x2c
   23770:	add	r0, r0, #4
   23774:	add	r1, r1, #1
   23778:	ldr	r3, [fp, #24]
   2377c:	cmp	r1, r3
   23780:	bne	23704 <GetDataSlab+0x12c8>
   23784:	ldr	r0, [sp, #48]	; 0x30
   23788:	add	ip, r0, r2
   2378c:	cmp	lr, #1
   23790:	bne	30314 <GetDataSlab+0xded8>
   23794:	ldr	r0, [sp, #44]	; 0x2c
   23798:	cmp	r0, #1
   2379c:	blt	3ae3c <GetDataSlab+0x18a00>
   237a0:	add	r9, r9, #4
   237a4:	add	r8, r4, #4
   237a8:	add	r0, sp, #104	; 0x68
   237ac:	orr	r5, r0, #4
   237b0:	sub	r0, fp, #72	; 0x48
   237b4:	orr	r0, r0, #4
   237b8:	str	r0, [sp, #52]	; 0x34
   237bc:	mov	sl, #0
   237c0:	ldr	r0, [fp, #12]
   237c4:	ldr	r0, [r0]
   237c8:	add	r2, r0, r2
   237cc:	add	r3, ip, r0
   237d0:	ldr	r0, [r4]
   237d4:	cmp	r0, #1
   237d8:	blt	23804 <GetDataSlab+0x13c8>
   237dc:	ldr	r0, [sp, #60]	; 0x3c
   237e0:	add	r1, r0, sl, lsl #2
   237e4:	mov	r7, #0
   237e8:	add	r0, r3, r7
   237ec:	ldrsb	r0, [r0]
   237f0:	str	r0, [r1, r7, lsl #2]
   237f4:	add	r7, r7, #1
   237f8:	ldr	r0, [r4]
   237fc:	cmp	r7, r0
   23800:	blt	237e8 <GetDataSlab+0x13ac>
   23804:	ldr	r1, [fp, #12]
   23808:	ldr	r1, [r1]
   2380c:	ldr	r7, [fp, #8]
   23810:	ldr	r4, [r7]
   23814:	sub	r1, r4, r1
   23818:	add	ip, r3, r1
   2381c:	add	r2, r2, r1
   23820:	ldr	r1, [fp, #24]
   23824:	cmp	r1, #2
   23828:	blt	238d4 <GetDataSlab+0x1498>
   2382c:	mov	r1, #0
   23830:	mov	r7, r1
   23834:	ldr	r1, [r5, r1, lsl #2]
   23838:	add	r1, r1, #1
   2383c:	str	r1, [r5, r7, lsl #2]
   23840:	ldr	r4, [r8, r7, lsl #2]
   23844:	sdiv	lr, r1, r4
   23848:	mls	r1, lr, r4, r1
   2384c:	cmp	r1, #0
   23850:	bne	238c4 <GetDataSlab+0x1488>
   23854:	mov	r1, #0
   23858:	str	r1, [r5, r7, lsl #2]
   2385c:	add	r3, sp, #64	; 0x40
   23860:	add	r1, r3, r7, lsl #2
   23864:	ldr	r1, [r1, #4]
   23868:	sdiv	r4, r2, r1
   2386c:	mls	r4, r4, r1, r2
   23870:	cmp	r4, #0
   23874:	beq	23894 <GetDataSlab+0x1458>
   23878:	ldr	r6, [r3, r7, lsl #2]
   2387c:	ldr	r3, [r9, r7, lsl #2]
   23880:	sub	r1, r1, r4
   23884:	mla	r1, r3, r6, r1
   23888:	add	r2, r1, r2
   2388c:	add	ip, ip, r1
   23890:	b	238ac <GetDataSlab+0x1470>
   23894:	ldr	r1, [r9, r7, lsl #2]
   23898:	cmp	r1, #0
   2389c:	addne	r3, sp, #64	; 0x40
   238a0:	ldrne	r3, [r3, r7, lsl #2]
   238a4:	mlane	r2, r3, r1, r2
   238a8:	mlane	ip, r3, r1, ip
   238ac:	add	r1, r7, #1
   238b0:	add	r3, r7, #2
   238b4:	ldr	r7, [fp, #24]
   238b8:	cmp	r3, r7
   238bc:	blt	23830 <GetDataSlab+0x13f4>
   238c0:	b	238d4 <GetDataSlab+0x1498>
   238c4:	ldr	r1, [sp, #52]	; 0x34
   238c8:	ldr	r1, [r1, r7, lsl #2]
   238cc:	add	ip, ip, r1
   238d0:	add	r2, r1, r2
   238d4:	add	sl, r0, sl
   238d8:	mov	r0, #0
   238dc:	ldr	r1, [sp, #44]	; 0x2c
   238e0:	cmp	sl, r1
   238e4:	ldr	r4, [fp, #20]
   238e8:	blt	237c0 <GetDataSlab+0x1384>
   238ec:	b	22560 <GetDataSlab+0x124>
   238f0:	ldr	r0, [sp, #52]	; 0x34
   238f4:	sub	r1, r0, #1
   238f8:	mov	r0, #1
   238fc:	cmp	r1, #11
   23900:	ldr	r4, [fp, #20]
   23904:	bhi	36f98 <GetDataSlab+0x14b5c>
   23908:	add	r2, pc, #8
   2390c:	ldr	r1, [r2, r1, lsl #2]
   23910:	sub	ip, fp, #72	; 0x48
   23914:	add	pc, r2, r1
   23918:	.word	0x00000030
   2391c:	.word	0x00008afc
   23920:	.word	0x00008d1c
   23924:	.word	0x00008f44
   23928:	.word	0x0000916c
   2392c:	.word	0x00009394
   23930:	.word	0x000095b8
   23934:	.word	0x00013680
   23938:	.word	0x000097f0
   2393c:	.word	0x00013680
   23940:	.word	0x00013680
   23944:	.word	0x00009a28
   23948:	ldr	lr, [lr]
   2394c:	sub	r1, lr, #1
   23950:	str	r1, [fp, #-72]	; 0xffffffb8
   23954:	ldr	r1, [r8]
   23958:	str	r1, [sp, #64]	; 0x40
   2395c:	ldr	r0, [r4]
   23960:	str	r0, [sp, #44]	; 0x2c
   23964:	mov	r2, #0
   23968:	ldr	r0, [fp, #24]
   2396c:	cmp	r0, #2
   23970:	blt	23a00 <GetDataSlab+0x15c4>
   23974:	mov	r1, #1
   23978:	mov	r2, #0
   2397c:	mov	r0, r8
   23980:	ldr	r3, [fp, #16]
   23984:	ldr	r7, [r3, r1, lsl #2]
   23988:	sub	r7, r7, #1
   2398c:	str	r7, [ip, r1, lsl #2]
   23990:	sub	r8, r1, #1
   23994:	ldr	r3, [fp, #8]
   23998:	ldr	r5, [r3, r8, lsl #2]
   2399c:	str	r5, [sl, r1, lsl #2]
   239a0:	mov	r4, #0
   239a4:	mov	r3, r0
   239a8:	ldr	r6, [r3, -r4, lsl #2]!
   239ac:	mul	r7, r7, r6
   239b0:	ldr	r3, [r3, #4]
   239b4:	mul	r5, r3, r5
   239b8:	add	r4, r4, #1
   239bc:	cmp	r1, r4
   239c0:	bne	239a4 <GetDataSlab+0x1568>
   239c4:	str	r5, [sl, r1, lsl #2]
   239c8:	str	r7, [ip, r1, lsl #2]
   239cc:	ldr	r3, [sl, r8, lsl #2]
   239d0:	ldr	r4, [r9, r1, lsl #2]
   239d4:	mla	r2, r4, r3, r2
   239d8:	ldr	r4, [fp, #20]
   239dc:	ldr	r3, [r4, r1, lsl #2]
   239e0:	ldr	r5, [sp, #44]	; 0x2c
   239e4:	mul	r5, r3, r5
   239e8:	str	r5, [sp, #44]	; 0x2c
   239ec:	add	r0, r0, #4
   239f0:	add	r1, r1, #1
   239f4:	ldr	r3, [fp, #24]
   239f8:	cmp	r1, r3
   239fc:	bne	23980 <GetDataSlab+0x1544>
   23a00:	ldr	r0, [sp, #48]	; 0x30
   23a04:	add	ip, r0, r2
   23a08:	cmp	lr, #1
   23a0c:	bne	30494 <GetDataSlab+0xe058>
   23a10:	ldr	r0, [sp, #44]	; 0x2c
   23a14:	cmp	r0, #1
   23a18:	blt	3ae3c <GetDataSlab+0x18a00>
   23a1c:	add	r9, r9, #4
   23a20:	add	r8, r4, #4
   23a24:	add	r0, sp, #104	; 0x68
   23a28:	orr	r5, r0, #4
   23a2c:	sub	r0, fp, #72	; 0x48
   23a30:	orr	r0, r0, #4
   23a34:	str	r0, [sp, #52]	; 0x34
   23a38:	mov	sl, #0
   23a3c:	ldr	r0, [fp, #12]
   23a40:	ldr	r0, [r0]
   23a44:	add	r2, r0, r2
   23a48:	add	r3, ip, r0
   23a4c:	ldr	r0, [r4]
   23a50:	cmp	r0, #1
   23a54:	blt	23a80 <GetDataSlab+0x1644>
   23a58:	ldr	r0, [sp, #60]	; 0x3c
   23a5c:	add	r1, r0, sl, lsl #2
   23a60:	mov	r7, #0
   23a64:	add	r0, r3, r7
   23a68:	ldrsb	r0, [r0]
   23a6c:	str	r0, [r1, r7, lsl #2]
   23a70:	add	r7, r7, #1
   23a74:	ldr	r0, [r4]
   23a78:	cmp	r7, r0
   23a7c:	blt	23a64 <GetDataSlab+0x1628>
   23a80:	ldr	r1, [fp, #12]
   23a84:	ldr	r1, [r1]
   23a88:	ldr	r7, [fp, #8]
   23a8c:	ldr	r4, [r7]
   23a90:	sub	r1, r4, r1
   23a94:	add	ip, r3, r1
   23a98:	add	r2, r2, r1
   23a9c:	ldr	r1, [fp, #24]
   23aa0:	cmp	r1, #2
   23aa4:	blt	23b50 <GetDataSlab+0x1714>
   23aa8:	mov	r1, #0
   23aac:	mov	r7, r1
   23ab0:	ldr	r1, [r5, r1, lsl #2]
   23ab4:	add	r1, r1, #1
   23ab8:	str	r1, [r5, r7, lsl #2]
   23abc:	ldr	r4, [r8, r7, lsl #2]
   23ac0:	sdiv	lr, r1, r4
   23ac4:	mls	r1, lr, r4, r1
   23ac8:	cmp	r1, #0
   23acc:	bne	23b40 <GetDataSlab+0x1704>
   23ad0:	mov	r1, #0
   23ad4:	str	r1, [r5, r7, lsl #2]
   23ad8:	add	r3, sp, #64	; 0x40
   23adc:	add	r1, r3, r7, lsl #2
   23ae0:	ldr	r1, [r1, #4]
   23ae4:	sdiv	r4, r2, r1
   23ae8:	mls	r4, r4, r1, r2
   23aec:	cmp	r4, #0
   23af0:	beq	23b10 <GetDataSlab+0x16d4>
   23af4:	ldr	r6, [r3, r7, lsl #2]
   23af8:	ldr	r3, [r9, r7, lsl #2]
   23afc:	sub	r1, r1, r4
   23b00:	mla	r1, r3, r6, r1
   23b04:	add	r2, r1, r2
   23b08:	add	ip, ip, r1
   23b0c:	b	23b28 <GetDataSlab+0x16ec>
   23b10:	ldr	r1, [r9, r7, lsl #2]
   23b14:	cmp	r1, #0
   23b18:	addne	r3, sp, #64	; 0x40
   23b1c:	ldrne	r3, [r3, r7, lsl #2]
   23b20:	mlane	r2, r3, r1, r2
   23b24:	mlane	ip, r3, r1, ip
   23b28:	add	r1, r7, #1
   23b2c:	add	r3, r7, #2
   23b30:	ldr	r7, [fp, #24]
   23b34:	cmp	r3, r7
   23b38:	blt	23aac <GetDataSlab+0x1670>
   23b3c:	b	23b50 <GetDataSlab+0x1714>
   23b40:	ldr	r1, [sp, #52]	; 0x34
   23b44:	ldr	r1, [r1, r7, lsl #2]
   23b48:	add	ip, ip, r1
   23b4c:	add	r2, r1, r2
   23b50:	add	sl, r0, sl
   23b54:	mov	r0, #0
   23b58:	ldr	r1, [sp, #44]	; 0x2c
   23b5c:	cmp	sl, r1
   23b60:	ldr	r4, [fp, #20]
   23b64:	blt	23a3c <GetDataSlab+0x1600>
   23b68:	b	22560 <GetDataSlab+0x124>
   23b6c:	ldr	r0, [sp, #52]	; 0x34
   23b70:	sub	r1, r0, #1
   23b74:	mov	r0, #1
   23b78:	cmp	r1, #11
   23b7c:	ldr	r4, [fp, #20]
   23b80:	bhi	3a64c <GetDataSlab+0x18210>
   23b84:	add	r2, pc, #4
   23b88:	ldr	r1, [r2, r1, lsl #2]
   23b8c:	add	pc, r2, r1
   23b90:	.word	0x00000030
   23b94:	.word	0x000099e8
   23b98:	.word	0x00009c28
   23b9c:	.word	0x00009e6c
   23ba0:	.word	0x0000a0a8
   23ba4:	.word	0x0000a2e8
   23ba8:	.word	0x0000a520
   23bac:	.word	0x00016abc
   23bb0:	.word	0x0000a780
   23bb4:	.word	0x00016abc
   23bb8:	.word	0x00016abc
   23bbc:	.word	0x0000a9f4
   23bc0:	ldr	lr, [lr]
   23bc4:	sub	r0, lr, #1
   23bc8:	str	r0, [fp, #-72]	; 0xffffffb8
   23bcc:	ldr	r0, [r8]
   23bd0:	str	r0, [sp, #40]	; 0x28
   23bd4:	str	r0, [sp, #64]	; 0x40
   23bd8:	ldr	r1, [r4]
   23bdc:	mov	r3, #0
   23be0:	ldr	r0, [fp, #24]
   23be4:	cmp	r0, #2
   23be8:	str	r1, [sp, #44]	; 0x2c
   23bec:	str	r1, [sp, #52]	; 0x34
   23bf0:	sub	r5, fp, #72	; 0x48
   23bf4:	blt	23c8c <GetDataSlab+0x1850>
   23bf8:	mov	r0, #1
   23bfc:	mov	r3, #0
   23c00:	mov	r4, r8
   23c04:	ldr	r1, [sp, #44]	; 0x2c
   23c08:	str	r1, [sp, #52]	; 0x34
   23c0c:	ldr	r1, [fp, #16]
   23c10:	ldr	r2, [r1, r0, lsl #2]
   23c14:	sub	r7, r2, #1
   23c18:	str	r7, [r5, r0, lsl #2]
   23c1c:	sub	ip, r0, #1
   23c20:	ldr	r5, [r8, ip, lsl #2]
   23c24:	str	r5, [sl, r0, lsl #2]
   23c28:	mov	r2, #0
   23c2c:	mov	r1, r4
   23c30:	ldr	r6, [r1, -r2, lsl #2]!
   23c34:	mul	r7, r7, r6
   23c38:	ldr	r1, [r1, #4]
   23c3c:	mul	r5, r1, r5
   23c40:	add	r2, r2, #1
   23c44:	cmp	r0, r2
   23c48:	bne	23c2c <GetDataSlab+0x17f0>
   23c4c:	str	r5, [sl, r0, lsl #2]
   23c50:	sub	r5, fp, #72	; 0x48
   23c54:	str	r7, [r5, r0, lsl #2]
   23c58:	ldr	r1, [sl, ip, lsl #2]
   23c5c:	ldr	r2, [r9, r0, lsl #2]
   23c60:	mla	r3, r2, r1, r3
   23c64:	ldr	r1, [fp, #20]
   23c68:	ldr	r1, [r1, r0, lsl #2]
   23c6c:	ldr	r2, [sp, #52]	; 0x34
   23c70:	mul	r2, r1, r2
   23c74:	str	r2, [sp, #52]	; 0x34
   23c78:	add	r4, r4, #4
   23c7c:	add	r0, r0, #1
   23c80:	ldr	r1, [fp, #24]
   23c84:	cmp	r0, r1
   23c88:	bne	23c0c <GetDataSlab+0x17d0>
   23c8c:	ldr	r0, [sp, #48]	; 0x30
   23c90:	add	r9, r0, r3
   23c94:	cmp	lr, #1
   23c98:	bne	30614 <GetDataSlab+0xe1d8>
   23c9c:	ldr	r0, [sp, #52]	; 0x34
   23ca0:	cmp	r0, #1
   23ca4:	ldr	r1, [fp, #20]
   23ca8:	ldr	r2, [sp, #44]	; 0x2c
   23cac:	blt	3ae3c <GetDataSlab+0x18a00>
   23cb0:	ldr	r0, [fp, #12]
   23cb4:	add	lr, r0, #4
   23cb8:	add	r7, r1, #4
   23cbc:	add	r0, sp, #104	; 0x68
   23cc0:	orr	r6, r0, #4
   23cc4:	orr	r0, r5, #4
   23cc8:	str	r0, [sp, #36]	; 0x24
   23ccc:	lsl	r0, r2, #3
   23cd0:	str	r0, [sp, #48]	; 0x30
   23cd4:	mov	sl, #0
   23cd8:	mov	r8, #0
   23cdc:	cmp	r2, #1
   23ce0:	blt	23d10 <GetDataSlab+0x18d4>
   23ce4:	ldr	r0, [fp, #12]
   23ce8:	ldr	r0, [r0]
   23cec:	add	r0, r9, r0
   23cf0:	ldr	ip, [sp, #44]	; 0x2c
   23cf4:	ldr	r2, [sp, #60]	; 0x3c
   23cf8:	ldrsb	r4, [r0], #1
   23cfc:	asr	r5, r4, #31
   23d00:	strd	r4, [r2]
   23d04:	subs	ip, ip, #1
   23d08:	add	r2, r2, #8
   23d0c:	bne	23cf8 <GetDataSlab+0x18bc>
   23d10:	ldr	r0, [sp, #40]	; 0x28
   23d14:	add	r9, r9, r0
   23d18:	add	r3, r3, r0
   23d1c:	ldr	r0, [fp, #24]
   23d20:	cmp	r0, #2
   23d24:	blt	23dc0 <GetDataSlab+0x1984>
   23d28:	mov	r2, #0
   23d2c:	ldr	ip, [sp, #60]	; 0x3c
   23d30:	mov	r0, r2
   23d34:	ldr	r2, [r6, r2, lsl #2]
   23d38:	add	r2, r2, #1
   23d3c:	str	r2, [r6, r0, lsl #2]
   23d40:	ldr	r5, [r7, r0, lsl #2]
   23d44:	sdiv	r4, r2, r5
   23d48:	mls	r2, r4, r5, r2
   23d4c:	cmp	r2, #0
   23d50:	bne	23dc8 <GetDataSlab+0x198c>
   23d54:	str	sl, [r6, r0, lsl #2]
   23d58:	add	r1, sp, #64	; 0x40
   23d5c:	add	r2, r1, r0, lsl #2
   23d60:	ldr	r2, [r2, #4]
   23d64:	sdiv	r5, r3, r2
   23d68:	mls	r4, r5, r2, r3
   23d6c:	cmp	r4, #0
   23d70:	beq	23d90 <GetDataSlab+0x1954>
   23d74:	ldr	r5, [r1, r0, lsl #2]
   23d78:	ldr	r1, [lr, r0, lsl #2]
   23d7c:	sub	r2, r2, r4
   23d80:	mla	r1, r1, r5, r2
   23d84:	add	r3, r1, r3
   23d88:	add	r9, r9, r1
   23d8c:	b	23da8 <GetDataSlab+0x196c>
   23d90:	ldr	r2, [lr, r0, lsl #2]
   23d94:	cmp	r2, #0
   23d98:	addne	r1, sp, #64	; 0x40
   23d9c:	ldrne	r1, [r1, r0, lsl #2]
   23da0:	mlane	r3, r1, r2, r3
   23da4:	mlane	r9, r1, r2, r9
   23da8:	add	r2, r0, #1
   23dac:	add	r0, r0, #2
   23db0:	ldr	r1, [fp, #24]
   23db4:	cmp	r0, r1
   23db8:	blt	23d30 <GetDataSlab+0x18f4>
   23dbc:	b	23dd8 <GetDataSlab+0x199c>
   23dc0:	ldr	ip, [sp, #60]	; 0x3c
   23dc4:	b	23dd8 <GetDataSlab+0x199c>
   23dc8:	ldr	r1, [sp, #36]	; 0x24
   23dcc:	ldr	r0, [r1, r0, lsl #2]
   23dd0:	add	r9, r9, r0
   23dd4:	add	r3, r0, r3
   23dd8:	ldr	r0, [sp, #48]	; 0x30
   23ddc:	add	ip, ip, r0
   23de0:	str	ip, [sp, #60]	; 0x3c
   23de4:	ldr	r2, [sp, #44]	; 0x2c
   23de8:	add	r8, r8, r2
   23dec:	mov	r0, #0
   23df0:	ldr	r1, [sp, #52]	; 0x34
   23df4:	cmp	r8, r1
   23df8:	blt	23cdc <GetDataSlab+0x18a0>
   23dfc:	b	22560 <GetDataSlab+0x124>
   23e00:	ldr	r0, [sp, #52]	; 0x34
   23e04:	sub	r1, r0, #1
   23e08:	mov	r0, #1
   23e0c:	cmp	r1, #11
   23e10:	ldr	r4, [fp, #20]
   23e14:	bhi	3aa48 <GetDataSlab+0x1860c>
   23e18:	add	r2, pc, #4
   23e1c:	ldr	r1, [r2, r1, lsl #2]
   23e20:	add	pc, r2, r1
   23e24:	.word	0x00000030
   23e28:	.word	0x0000a994
   23e2c:	.word	0x0000abd4
   23e30:	.word	0x0000ae18
   23e34:	.word	0x0000b054
   23e38:	.word	0x0000b290
   23e3c:	.word	0x0000b4c8
   23e40:	.word	0x00016c24
   23e44:	.word	0x0000b728
   23e48:	.word	0x00016c24
   23e4c:	.word	0x00016c24
   23e50:	.word	0x0000b98c
   23e54:	ldr	lr, [lr]
   23e58:	sub	r0, lr, #1
   23e5c:	str	r0, [fp, #-72]	; 0xffffffb8
   23e60:	ldr	r0, [r8]
   23e64:	str	r0, [sp, #40]	; 0x28
   23e68:	str	r0, [sp, #64]	; 0x40
   23e6c:	ldr	r1, [r4]
   23e70:	mov	r3, #0
   23e74:	ldr	r0, [fp, #24]
   23e78:	cmp	r0, #2
   23e7c:	str	r1, [sp, #44]	; 0x2c
   23e80:	str	r1, [sp, #52]	; 0x34
   23e84:	sub	r5, fp, #72	; 0x48
   23e88:	blt	23f20 <GetDataSlab+0x1ae4>
   23e8c:	mov	r0, #1
   23e90:	mov	r3, #0
   23e94:	mov	r4, r8
   23e98:	ldr	r1, [sp, #44]	; 0x2c
   23e9c:	str	r1, [sp, #52]	; 0x34
   23ea0:	ldr	r1, [fp, #16]
   23ea4:	ldr	r2, [r1, r0, lsl #2]
   23ea8:	sub	r7, r2, #1
   23eac:	str	r7, [r5, r0, lsl #2]
   23eb0:	sub	ip, r0, #1
   23eb4:	ldr	r5, [r8, ip, lsl #2]
   23eb8:	str	r5, [sl, r0, lsl #2]
   23ebc:	mov	r2, #0
   23ec0:	mov	r1, r4
   23ec4:	ldr	r6, [r1, -r2, lsl #2]!
   23ec8:	mul	r7, r7, r6
   23ecc:	ldr	r1, [r1, #4]
   23ed0:	mul	r5, r1, r5
   23ed4:	add	r2, r2, #1
   23ed8:	cmp	r0, r2
   23edc:	bne	23ec0 <GetDataSlab+0x1a84>
   23ee0:	str	r5, [sl, r0, lsl #2]
   23ee4:	sub	r5, fp, #72	; 0x48
   23ee8:	str	r7, [r5, r0, lsl #2]
   23eec:	ldr	r1, [sl, ip, lsl #2]
   23ef0:	ldr	r2, [r9, r0, lsl #2]
   23ef4:	mla	r3, r2, r1, r3
   23ef8:	ldr	r1, [fp, #20]
   23efc:	ldr	r1, [r1, r0, lsl #2]
   23f00:	ldr	r2, [sp, #52]	; 0x34
   23f04:	mul	r2, r1, r2
   23f08:	str	r2, [sp, #52]	; 0x34
   23f0c:	add	r4, r4, #4
   23f10:	add	r0, r0, #1
   23f14:	ldr	r1, [fp, #24]
   23f18:	cmp	r0, r1
   23f1c:	bne	23ea0 <GetDataSlab+0x1a64>
   23f20:	ldr	r0, [sp, #48]	; 0x30
   23f24:	add	r9, r0, r3
   23f28:	cmp	lr, #1
   23f2c:	bne	307a4 <GetDataSlab+0xe368>
   23f30:	ldr	r0, [sp, #52]	; 0x34
   23f34:	cmp	r0, #1
   23f38:	ldr	r1, [fp, #20]
   23f3c:	ldr	r2, [sp, #44]	; 0x2c
   23f40:	blt	3ae3c <GetDataSlab+0x18a00>
   23f44:	ldr	r0, [fp, #12]
   23f48:	add	lr, r0, #4
   23f4c:	add	r7, r1, #4
   23f50:	add	r0, sp, #104	; 0x68
   23f54:	orr	r6, r0, #4
   23f58:	orr	r0, r5, #4
   23f5c:	str	r0, [sp, #36]	; 0x24
   23f60:	lsl	r0, r2, #3
   23f64:	str	r0, [sp, #48]	; 0x30
   23f68:	mov	sl, #0
   23f6c:	mov	r8, #0
   23f70:	cmp	r2, #1
   23f74:	blt	23fa4 <GetDataSlab+0x1b68>
   23f78:	ldr	r0, [fp, #12]
   23f7c:	ldr	r0, [r0]
   23f80:	add	r0, r9, r0
   23f84:	ldr	ip, [sp, #44]	; 0x2c
   23f88:	ldr	r2, [sp, #60]	; 0x3c
   23f8c:	ldrsb	r4, [r0], #1
   23f90:	asr	r5, r4, #31
   23f94:	strd	r4, [r2]
   23f98:	subs	ip, ip, #1
   23f9c:	add	r2, r2, #8
   23fa0:	bne	23f8c <GetDataSlab+0x1b50>
   23fa4:	ldr	r0, [sp, #40]	; 0x28
   23fa8:	add	r9, r9, r0
   23fac:	add	r3, r3, r0
   23fb0:	ldr	r0, [fp, #24]
   23fb4:	cmp	r0, #2
   23fb8:	blt	24054 <GetDataSlab+0x1c18>
   23fbc:	mov	r2, #0
   23fc0:	ldr	ip, [sp, #60]	; 0x3c
   23fc4:	mov	r0, r2
   23fc8:	ldr	r2, [r6, r2, lsl #2]
   23fcc:	add	r2, r2, #1
   23fd0:	str	r2, [r6, r0, lsl #2]
   23fd4:	ldr	r5, [r7, r0, lsl #2]
   23fd8:	sdiv	r4, r2, r5
   23fdc:	mls	r2, r4, r5, r2
   23fe0:	cmp	r2, #0
   23fe4:	bne	2405c <GetDataSlab+0x1c20>
   23fe8:	str	sl, [r6, r0, lsl #2]
   23fec:	add	r1, sp, #64	; 0x40
   23ff0:	add	r2, r1, r0, lsl #2
   23ff4:	ldr	r2, [r2, #4]
   23ff8:	sdiv	r5, r3, r2
   23ffc:	mls	r4, r5, r2, r3
   24000:	cmp	r4, #0
   24004:	beq	24024 <GetDataSlab+0x1be8>
   24008:	ldr	r5, [r1, r0, lsl #2]
   2400c:	ldr	r1, [lr, r0, lsl #2]
   24010:	sub	r2, r2, r4
   24014:	mla	r1, r1, r5, r2
   24018:	add	r3, r1, r3
   2401c:	add	r9, r9, r1
   24020:	b	2403c <GetDataSlab+0x1c00>
   24024:	ldr	r2, [lr, r0, lsl #2]
   24028:	cmp	r2, #0
   2402c:	addne	r1, sp, #64	; 0x40
   24030:	ldrne	r1, [r1, r0, lsl #2]
   24034:	mlane	r3, r1, r2, r3
   24038:	mlane	r9, r1, r2, r9
   2403c:	add	r2, r0, #1
   24040:	add	r0, r0, #2
   24044:	ldr	r1, [fp, #24]
   24048:	cmp	r0, r1
   2404c:	blt	23fc4 <GetDataSlab+0x1b88>
   24050:	b	2406c <GetDataSlab+0x1c30>
   24054:	ldr	ip, [sp, #60]	; 0x3c
   24058:	b	2406c <GetDataSlab+0x1c30>
   2405c:	ldr	r1, [sp, #36]	; 0x24
   24060:	ldr	r0, [r1, r0, lsl #2]
   24064:	add	r9, r9, r0
   24068:	add	r3, r0, r3
   2406c:	ldr	r0, [sp, #48]	; 0x30
   24070:	add	ip, ip, r0
   24074:	str	ip, [sp, #60]	; 0x3c
   24078:	ldr	r2, [sp, #44]	; 0x2c
   2407c:	add	r8, r8, r2
   24080:	mov	r0, #0
   24084:	ldr	r1, [sp, #52]	; 0x34
   24088:	cmp	r8, r1
   2408c:	blt	23f70 <GetDataSlab+0x1b34>
   24090:	b	22560 <GetDataSlab+0x124>
   24094:	cmp	r4, #0
   24098:	beq	228bc <GetDataSlab+0x480>
   2409c:	ldr	r4, [sp, #36]	; 0x24
   240a0:	cmp	r4, #1
   240a4:	bne	228bc <GetDataSlab+0x480>
   240a8:	ldr	r2, [fp, #28]
   240ac:	mov	r0, ip
   240b0:	ldr	r1, [sp, #48]	; 0x30
   240b4:	bl	1834 <memcpy@plt>
   240b8:	mov	r0, #0
   240bc:	sub	sp, fp, #28
   240c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   240c4:	ldr	r3, [sp, #52]	; 0x34
   240c8:	sub	r1, r3, #1
   240cc:	mov	r0, #1
   240d0:	cmp	r1, #11
   240d4:	bhi	3ddbc <GetDataSlab+0x1b980>
   240d8:	add	r2, pc, #8
   240dc:	ldr	r1, [r2, r1, lsl #2]
   240e0:	ldr	lr, [sp, #48]	; 0x30
   240e4:	add	pc, r2, r1
   240e8:	.word	0x00000030
   240ec:	.word	0x000171d4
   240f0:	.word	0x00017258
   240f4:	.word	0x000172e4
   240f8:	.word	0x00017370
   240fc:	.word	0x000173f8
   24100:	.word	0x00017480
   24104:	.word	0x00019cd8
   24108:	.word	0x00017500
   2410c:	.word	0x00019cd8
   24110:	.word	0x00019cd8
   24114:	.word	0x00017588
   24118:	ldr	r0, [sp, #56]	; 0x38
   2411c:	cmp	r0, #1
   24120:	blt	240b8 <GetDataSlab+0x1c7c>
   24124:	ldr	r0, [sp, #32]
   24128:	ldr	r1, [sp, #28]
   2412c:	mla	r0, r1, r6, r0
   24130:	add	r1, lr, r0
   24134:	ldr	r0, [sp, #36]	; 0x24
   24138:	mul	lr, r0, r6
   2413c:	mov	r3, #0
   24140:	ldr	r4, [sp, #60]	; 0x3c
   24144:	ldr	r2, [sp, #44]	; 0x2c
   24148:	cmp	r4, #1
   2414c:	blt	24184 <GetDataSlab+0x1d48>
   24150:	mov	r0, #0
   24154:	mov	r7, r4
   24158:	mov	r6, ip
   2415c:	add	r5, r1, r0
   24160:	ldrsb	r5, [r5]
   24164:	vmov	s0, r5
   24168:	vcvt.f32.s32	s0, s0
   2416c:	vstr	s0, [r6]
   24170:	add	r0, r0, r2
   24174:	subs	r7, r7, #1
   24178:	add	r6, r6, #4
   2417c:	bne	2415c <GetDataSlab+0x1d20>
   24180:	add	ip, ip, r4, lsl #2
   24184:	add	r1, r1, lr
   24188:	add	r3, r3, #1
   2418c:	mov	r0, #0
   24190:	ldr	r7, [sp, #56]	; 0x38
   24194:	cmp	r3, r7
   24198:	bne	24148 <GetDataSlab+0x1d0c>
   2419c:	b	22560 <GetDataSlab+0x124>
   241a0:	ldr	r0, [sp, #52]	; 0x34
   241a4:	sub	r2, r0, #1
   241a8:	mov	r0, #1
   241ac:	cmp	r2, #11
   241b0:	bhi	3bb10 <GetDataSlab+0x196d4>
   241b4:	add	r7, pc, #8
   241b8:	ldr	r2, [r7, r2, lsl #2]
   241bc:	ldr	r5, [sp, #48]	; 0x30
   241c0:	add	pc, r7, r2
   241c4:	.word	0x00000030
   241c8:	.word	0x0001755c
   241cc:	.word	0x000175d4
   241d0:	.word	0x00017650
   241d4:	.word	0x000176cc
   241d8:	.word	0x00017748
   241dc:	.word	0x000177c4
   241e0:	.word	0x0001794c
   241e4:	.word	0x0001784c
   241e8:	.word	0x0001794c
   241ec:	.word	0x0001794c
   241f0:	.word	0x000178d4
   241f4:	ldr	r0, [r3]
   241f8:	cmp	r0, #1
   241fc:	blt	240b8 <GetDataSlab+0x1c7c>
   24200:	ldr	r0, [sp, #32]
   24204:	ldr	r2, [sp, #28]
   24208:	mla	r0, r2, r6, r0
   2420c:	add	r2, r5, r0
   24210:	mov	r7, #0
   24214:	ldr	r0, [r4]
   24218:	cmp	r0, #1
   2421c:	blt	24248 <GetDataSlab+0x1e0c>
   24220:	mov	r0, #0
   24224:	ldr	r6, [lr]
   24228:	mul	r6, r6, r0
   2422c:	ldrb	r6, [r2, r6]
   24230:	strb	r6, [ip, r0]
   24234:	add	r0, r0, #1
   24238:	ldr	r6, [r4]
   2423c:	cmp	r0, r6
   24240:	blt	24224 <GetDataSlab+0x1de8>
   24244:	add	ip, ip, r0
   24248:	ldr	r0, [sl]
   2424c:	ldr	r6, [r8]
   24250:	mla	r2, r6, r0, r2
   24254:	add	r7, r7, #1
   24258:	ldr	r6, [r3]
   2425c:	mov	r0, #0
   24260:	cmp	r7, r6
   24264:	blt	24214 <GetDataSlab+0x1dd8>
   24268:	b	22560 <GetDataSlab+0x124>
   2426c:	ldr	r0, [sp, #52]	; 0x34
   24270:	sub	r2, r0, #1
   24274:	mov	r0, #1
   24278:	cmp	r2, #11
   2427c:	bhi	3bf8c <GetDataSlab+0x19b50>
   24280:	add	r7, pc, #8
   24284:	ldr	r2, [r7, r2, lsl #2]
   24288:	ldr	r5, [sp, #48]	; 0x30
   2428c:	add	pc, r7, r2
   24290:	.word	0x00000030
   24294:	.word	0x0001790c
   24298:	.word	0x00017984
   2429c:	.word	0x00017a00
   242a0:	.word	0x00017a7c
   242a4:	.word	0x00017af8
   242a8:	.word	0x00017b74
   242ac:	.word	0x00017cfc
   242b0:	.word	0x00017bfc
   242b4:	.word	0x00017cfc
   242b8:	.word	0x00017cfc
   242bc:	.word	0x00017c84
   242c0:	ldr	r0, [r3]
   242c4:	cmp	r0, #1
   242c8:	blt	240b8 <GetDataSlab+0x1c7c>
   242cc:	ldr	r0, [sp, #32]
   242d0:	ldr	r2, [sp, #28]
   242d4:	mla	r0, r2, r6, r0
   242d8:	add	r2, r5, r0
   242dc:	mov	r7, #0
   242e0:	ldr	r0, [r4]
   242e4:	cmp	r0, #1
   242e8:	blt	24314 <GetDataSlab+0x1ed8>
   242ec:	mov	r0, #0
   242f0:	ldr	r6, [lr]
   242f4:	mul	r6, r6, r0
   242f8:	ldrb	r6, [r2, r6]
   242fc:	strb	r6, [ip, r0]
   24300:	add	r0, r0, #1
   24304:	ldr	r6, [r4]
   24308:	cmp	r0, r6
   2430c:	blt	242f0 <GetDataSlab+0x1eb4>
   24310:	add	ip, ip, r0
   24314:	ldr	r0, [sl]
   24318:	ldr	r6, [r8]
   2431c:	mla	r2, r6, r0, r2
   24320:	add	r7, r7, #1
   24324:	ldr	r6, [r3]
   24328:	mov	r0, #0
   2432c:	cmp	r7, r6
   24330:	blt	242e0 <GetDataSlab+0x1ea4>
   24334:	b	22560 <GetDataSlab+0x124>
   24338:	ldr	lr, [sp, #52]	; 0x34
   2433c:	sub	r1, lr, #1
   24340:	mov	r0, #1
   24344:	cmp	r1, #11
   24348:	bhi	3c438 <GetDataSlab+0x19ffc>
   2434c:	add	r2, pc, #8
   24350:	ldr	r1, [r2, r1, lsl #2]
   24354:	ldr	r3, [sp, #48]	; 0x30
   24358:	add	pc, r2, r1
   2435c:	.word	0x00000030
   24360:	.word	0x00017cbc
   24364:	.word	0x00017d38
   24368:	.word	0x00017dbc
   2436c:	.word	0x00017e40
   24370:	.word	0x00017ec4
   24374:	.word	0x00017f48
   24378:	.word	0x000180dc
   2437c:	.word	0x00017fd0
   24380:	.word	0x000180dc
   24384:	.word	0x000180dc
   24388:	.word	0x00018058
   2438c:	ldr	r0, [sp, #56]	; 0x38
   24390:	cmp	r0, #1
   24394:	blt	240b8 <GetDataSlab+0x1c7c>
   24398:	ldr	r0, [sp, #32]
   2439c:	ldr	r1, [sp, #28]
   243a0:	mla	r0, r1, r6, r0
   243a4:	add	r1, r3, r0
   243a8:	ldr	r0, [sp, #36]	; 0x24
   243ac:	mul	lr, r0, r6
   243b0:	mov	r3, #0
   243b4:	ldr	r4, [sp, #60]	; 0x3c
   243b8:	ldr	r2, [sp, #44]	; 0x2c
   243bc:	cmp	r4, #1
   243c0:	blt	243f0 <GetDataSlab+0x1fb4>
   243c4:	mov	r6, #0
   243c8:	mov	r0, r4
   243cc:	mov	r7, ip
   243d0:	add	r5, r6, r2
   243d4:	add	r6, r1, r6
   243d8:	ldrsb	r6, [r6]
   243dc:	strh	r6, [r7], #2
   243e0:	subs	r0, r0, #1
   243e4:	mov	r6, r5
   243e8:	bne	243d0 <GetDataSlab+0x1f94>
   243ec:	add	ip, ip, r4, lsl #1
   243f0:	add	r1, r1, lr
   243f4:	add	r3, r3, #1
   243f8:	mov	r0, #0
   243fc:	ldr	r7, [sp, #56]	; 0x38
   24400:	cmp	r3, r7
   24404:	bne	243bc <GetDataSlab+0x1f80>
   24408:	b	22560 <GetDataSlab+0x124>
   2440c:	ldr	lr, [sp, #52]	; 0x34
   24410:	sub	r1, lr, #1
   24414:	mov	r0, #1
   24418:	cmp	r1, #11
   2441c:	bhi	3c8e8 <GetDataSlab+0x1a4ac>
   24420:	add	r2, pc, #8
   24424:	ldr	r1, [r2, r1, lsl #2]
   24428:	ldr	r3, [sp, #48]	; 0x30
   2442c:	add	pc, r2, r1
   24430:	.word	0x00000030
   24434:	.word	0x00018098
   24438:	.word	0x00018114
   2443c:	.word	0x00018198
   24440:	.word	0x0001821c
   24444:	.word	0x000182a0
   24448:	.word	0x00018324
   2444c:	.word	0x000184b8
   24450:	.word	0x000183ac
   24454:	.word	0x000184b8
   24458:	.word	0x000184b8
   2445c:	.word	0x00018434
   24460:	ldr	r0, [sp, #56]	; 0x38
   24464:	cmp	r0, #1
   24468:	blt	240b8 <GetDataSlab+0x1c7c>
   2446c:	ldr	r0, [sp, #32]
   24470:	ldr	r1, [sp, #28]
   24474:	mla	r0, r1, r6, r0
   24478:	add	r1, r3, r0
   2447c:	ldr	r0, [sp, #36]	; 0x24
   24480:	mul	lr, r0, r6
   24484:	mov	r3, #0
   24488:	ldr	r4, [sp, #60]	; 0x3c
   2448c:	ldr	r2, [sp, #44]	; 0x2c
   24490:	cmp	r4, #1
   24494:	blt	244c4 <GetDataSlab+0x2088>
   24498:	mov	r6, #0
   2449c:	mov	r0, r4
   244a0:	mov	r7, ip
   244a4:	add	r5, r6, r2
   244a8:	add	r6, r1, r6
   244ac:	ldrsb	r6, [r6]
   244b0:	strh	r6, [r7], #2
   244b4:	subs	r0, r0, #1
   244b8:	mov	r6, r5
   244bc:	bne	244a4 <GetDataSlab+0x2068>
   244c0:	add	ip, ip, r4, lsl #1
   244c4:	add	r1, r1, lr
   244c8:	add	r3, r3, #1
   244cc:	mov	r0, #0
   244d0:	ldr	r7, [sp, #56]	; 0x38
   244d4:	cmp	r3, r7
   244d8:	bne	24490 <GetDataSlab+0x2054>
   244dc:	b	22560 <GetDataSlab+0x124>
   244e0:	ldr	r0, [sp, #52]	; 0x34
   244e4:	sub	r2, r0, #1
   244e8:	mov	r0, #1
   244ec:	cmp	r2, #11
   244f0:	bhi	3cdb0 <GetDataSlab+0x1a974>
   244f4:	add	r7, pc, #8
   244f8:	ldr	r2, [r7, r2, lsl #2]
   244fc:	ldr	r5, [sp, #48]	; 0x30
   24500:	add	pc, r7, r2
   24504:	.word	0x00000030
   24508:	.word	0x00018474
   2450c:	.word	0x000184f4
   24510:	.word	0x0001857c
   24514:	.word	0x00018604
   24518:	.word	0x00018688
   2451c:	.word	0x0001870c
   24520:	.word	0x000188ac
   24524:	.word	0x0001879c
   24528:	.word	0x000188ac
   2452c:	.word	0x000188ac
   24530:	.word	0x0001882c
   24534:	ldr	r0, [r3]
   24538:	cmp	r0, #1
   2453c:	blt	240b8 <GetDataSlab+0x1c7c>
   24540:	ldr	r0, [sp, #32]
   24544:	ldr	r2, [sp, #28]
   24548:	mla	r0, r2, r6, r0
   2454c:	add	r2, r5, r0
   24550:	mov	r6, #0
   24554:	ldr	r0, [r4]
   24558:	cmp	r0, #1
   2455c:	blt	24590 <GetDataSlab+0x2154>
   24560:	mov	r0, #0
   24564:	mov	r7, #0
   24568:	ldr	r5, [lr]
   2456c:	mla	r5, r5, r7, r2
   24570:	ldrsb	r5, [r5]
   24574:	str	r5, [ip, r7, lsl #2]
   24578:	add	r0, r0, #4
   2457c:	add	r7, r7, #1
   24580:	ldr	r5, [r4]
   24584:	cmp	r7, r5
   24588:	blt	24568 <GetDataSlab+0x212c>
   2458c:	add	ip, ip, r0
   24590:	ldr	r0, [sl]
   24594:	ldr	r7, [r8]
   24598:	mla	r2, r7, r0, r2
   2459c:	add	r6, r6, #1
   245a0:	ldr	r7, [r3]
   245a4:	mov	r0, #0
   245a8:	cmp	r6, r7
   245ac:	blt	24554 <GetDataSlab+0x2118>
   245b0:	b	22560 <GetDataSlab+0x124>
   245b4:	ldr	r0, [sp, #52]	; 0x34
   245b8:	sub	r2, r0, #1
   245bc:	mov	r0, #1
   245c0:	cmp	r2, #11
   245c4:	bhi	3d27c <GetDataSlab+0x1ae40>
   245c8:	add	r7, pc, #8
   245cc:	ldr	r2, [r7, r2, lsl #2]
   245d0:	ldr	r5, [sp, #48]	; 0x30
   245d4:	add	pc, r7, r2
   245d8:	.word	0x00000030
   245dc:	.word	0x0001886c
   245e0:	.word	0x000188ec
   245e4:	.word	0x00018974
   245e8:	.word	0x000189fc
   245ec:	.word	0x00018a80
   245f0:	.word	0x00018b04
   245f4:	.word	0x00018ca4
   245f8:	.word	0x00018b94
   245fc:	.word	0x00018ca4
   24600:	.word	0x00018ca4
   24604:	.word	0x00018c24
   24608:	ldr	r0, [r3]
   2460c:	cmp	r0, #1
   24610:	blt	240b8 <GetDataSlab+0x1c7c>
   24614:	ldr	r0, [sp, #32]
   24618:	ldr	r2, [sp, #28]
   2461c:	mla	r0, r2, r6, r0
   24620:	add	r2, r5, r0
   24624:	mov	r6, #0
   24628:	ldr	r0, [r4]
   2462c:	cmp	r0, #1
   24630:	blt	24664 <GetDataSlab+0x2228>
   24634:	mov	r0, #0
   24638:	mov	r7, #0
   2463c:	ldr	r5, [lr]
   24640:	mla	r5, r5, r7, r2
   24644:	ldrsb	r5, [r5]
   24648:	str	r5, [ip, r7, lsl #2]
   2464c:	add	r0, r0, #4
   24650:	add	r7, r7, #1
   24654:	ldr	r5, [r4]
   24658:	cmp	r7, r5
   2465c:	blt	2463c <GetDataSlab+0x2200>
   24660:	add	ip, ip, r0
   24664:	ldr	r0, [sl]
   24668:	ldr	r7, [r8]
   2466c:	mla	r2, r7, r0, r2
   24670:	add	r6, r6, #1
   24674:	ldr	r7, [r3]
   24678:	mov	r0, #0
   2467c:	cmp	r6, r7
   24680:	blt	24628 <GetDataSlab+0x21ec>
   24684:	b	22560 <GetDataSlab+0x124>
   24688:	ldr	lr, [sp, #52]	; 0x34
   2468c:	sub	r1, lr, #1
   24690:	mov	r0, #1
   24694:	cmp	r1, #11
   24698:	bhi	3d778 <GetDataSlab+0x1b33c>
   2469c:	add	r2, pc, #8
   246a0:	ldr	r1, [r2, r1, lsl #2]
   246a4:	ldr	r3, [sp, #48]	; 0x30
   246a8:	add	pc, r2, r1
   246ac:	.word	0x00000030
   246b0:	.word	0x00018c64
   246b4:	.word	0x00018ce8
   246b8:	.word	0x00018d70
   246bc:	.word	0x00018dfc
   246c0:	.word	0x00018e84
   246c4:	.word	0x00018f10
   246c8:	.word	0x000190cc
   246cc:	.word	0x00018fa4
   246d0:	.word	0x000190cc
   246d4:	.word	0x000190cc
   246d8:	.word	0x00019040
   246dc:	ldr	r0, [sp, #56]	; 0x38
   246e0:	cmp	r0, #1
   246e4:	blt	240b8 <GetDataSlab+0x1c7c>
   246e8:	ldr	r0, [sp, #32]
   246ec:	ldr	r1, [sp, #28]
   246f0:	mla	r0, r1, r6, r0
   246f4:	add	r1, r3, r0
   246f8:	ldr	r0, [sp, #36]	; 0x24
   246fc:	mul	lr, r0, r6
   24700:	mov	r3, #0
   24704:	ldr	r8, [sp, #60]	; 0x3c
   24708:	cmp	r8, #1
   2470c:	blt	24744 <GetDataSlab+0x2308>
   24710:	mov	r0, #0
   24714:	mov	r7, r8
   24718:	mov	r6, ip
   2471c:	ldr	r2, [sp, #44]	; 0x2c
   24720:	add	r5, r1, r0
   24724:	ldrsb	r4, [r5]
   24728:	asr	r5, r4, #31
   2472c:	strd	r4, [r6]
   24730:	add	r0, r0, r2
   24734:	subs	r7, r7, #1
   24738:	add	r6, r6, #8
   2473c:	bne	24720 <GetDataSlab+0x22e4>
   24740:	add	ip, ip, r8, lsl #3
   24744:	add	r1, r1, lr
   24748:	add	r3, r3, #1
   2474c:	mov	r0, #0
   24750:	ldr	r2, [sp, #56]	; 0x38
   24754:	cmp	r3, r2
   24758:	bne	24708 <GetDataSlab+0x22cc>
   2475c:	b	22560 <GetDataSlab+0x124>
   24760:	ldr	lr, [sp, #52]	; 0x34
   24764:	sub	r1, lr, #1
   24768:	mov	r0, #1
   2476c:	cmp	r1, #11
   24770:	bhi	3dc78 <GetDataSlab+0x1b83c>
   24774:	add	r2, pc, #8
   24778:	ldr	r1, [r2, r1, lsl #2]
   2477c:	ldr	r3, [sp, #48]	; 0x30
   24780:	add	pc, r2, r1
   24784:	.word	0x00000030
   24788:	.word	0x0001908c
   2478c:	.word	0x00019110
   24790:	.word	0x00019198
   24794:	.word	0x00019224
   24798:	.word	0x000192ac
   2479c:	.word	0x00019338
   247a0:	.word	0x000194f4
   247a4:	.word	0x000193cc
   247a8:	.word	0x000194f4
   247ac:	.word	0x000194f4
   247b0:	.word	0x00019468
   247b4:	ldr	r0, [sp, #56]	; 0x38
   247b8:	cmp	r0, #1
   247bc:	blt	240b8 <GetDataSlab+0x1c7c>
   247c0:	ldr	r0, [sp, #32]
   247c4:	ldr	r1, [sp, #28]
   247c8:	mla	r0, r1, r6, r0
   247cc:	add	r1, r3, r0
   247d0:	ldr	r0, [sp, #36]	; 0x24
   247d4:	mul	lr, r0, r6
   247d8:	mov	r3, #0
   247dc:	ldr	r8, [sp, #60]	; 0x3c
   247e0:	cmp	r8, #1
   247e4:	blt	2481c <GetDataSlab+0x23e0>
   247e8:	mov	r0, #0
   247ec:	mov	r7, r8
   247f0:	mov	r6, ip
   247f4:	ldr	r2, [sp, #44]	; 0x2c
   247f8:	add	r5, r1, r0
   247fc:	ldrsb	r4, [r5]
   24800:	asr	r5, r4, #31
   24804:	strd	r4, [r6]
   24808:	add	r0, r0, r2
   2480c:	subs	r7, r7, #1
   24810:	add	r6, r6, #8
   24814:	bne	247f8 <GetDataSlab+0x23bc>
   24818:	add	ip, ip, r8, lsl #3
   2481c:	add	r1, r1, lr
   24820:	add	r3, r3, #1
   24824:	mov	r0, #0
   24828:	ldr	r2, [sp, #56]	; 0x38
   2482c:	cmp	r3, r2
   24830:	bne	247e0 <GetDataSlab+0x23a4>
   24834:	b	22560 <GetDataSlab+0x124>
   24838:	ldr	lr, [lr]
   2483c:	sub	r0, lr, #1
   24840:	str	r0, [fp, #-72]	; 0xffffffb8
   24844:	ldr	r0, [r8]
   24848:	str	r0, [sp, #40]	; 0x28
   2484c:	str	r0, [sp, #64]	; 0x40
   24850:	ldr	r1, [r4]
   24854:	mov	r3, #0
   24858:	ldr	r0, [fp, #24]
   2485c:	cmp	r0, #2
   24860:	str	r1, [sp, #44]	; 0x2c
   24864:	str	r1, [sp, #52]	; 0x34
   24868:	sub	r6, fp, #72	; 0x48
   2486c:	blt	24904 <GetDataSlab+0x24c8>
   24870:	mov	r0, #1
   24874:	mov	r3, #0
   24878:	mov	r4, r8
   2487c:	ldr	r1, [sp, #44]	; 0x2c
   24880:	str	r1, [sp, #52]	; 0x34
   24884:	ldr	r1, [fp, #16]
   24888:	ldr	r2, [r1, r0, lsl #2]
   2488c:	sub	r7, r2, #1
   24890:	str	r7, [r6, r0, lsl #2]
   24894:	sub	ip, r0, #1
   24898:	ldr	r5, [r8, ip, lsl #2]
   2489c:	str	r5, [sl, r0, lsl #2]
   248a0:	mov	r2, #0
   248a4:	mov	r1, r4
   248a8:	ldr	r6, [r1, -r2, lsl #2]!
   248ac:	mul	r7, r7, r6
   248b0:	ldr	r1, [r1, #4]
   248b4:	mul	r5, r1, r5
   248b8:	add	r2, r2, #1
   248bc:	cmp	r0, r2
   248c0:	bne	248a4 <GetDataSlab+0x2468>
   248c4:	str	r5, [sl, r0, lsl #2]
   248c8:	sub	r6, fp, #72	; 0x48
   248cc:	str	r7, [r6, r0, lsl #2]
   248d0:	ldr	r1, [sl, ip, lsl #2]
   248d4:	ldr	r2, [r9, r0, lsl #2]
   248d8:	mla	r3, r2, r1, r3
   248dc:	ldr	r1, [fp, #20]
   248e0:	ldr	r1, [r1, r0, lsl #2]
   248e4:	ldr	r2, [sp, #52]	; 0x34
   248e8:	mul	r2, r1, r2
   248ec:	str	r2, [sp, #52]	; 0x34
   248f0:	add	r4, r4, #4
   248f4:	add	r0, r0, #1
   248f8:	ldr	r1, [fp, #24]
   248fc:	cmp	r0, r1
   24900:	bne	24884 <GetDataSlab+0x2448>
   24904:	ldr	r0, [sp, #48]	; 0x30
   24908:	add	r5, r0, r3
   2490c:	cmp	lr, #1
   24910:	mov	r1, r6
   24914:	bne	30930 <GetDataSlab+0xe4f4>
   24918:	ldr	r0, [sp, #52]	; 0x34
   2491c:	cmp	r0, #1
   24920:	ldr	r0, [fp, #20]
   24924:	blt	240b8 <GetDataSlab+0x1c7c>
   24928:	add	lr, r9, #4
   2492c:	add	sl, r0, #4
   24930:	add	r0, sp, #104	; 0x68
   24934:	orr	r6, r0, #4
   24938:	orr	r9, r1, #4
   2493c:	ldr	ip, [sp, #44]	; 0x2c
   24940:	lsl	r0, ip, #3
   24944:	str	r0, [sp, #48]	; 0x30
   24948:	mov	r8, #0
   2494c:	cmp	ip, #1
   24950:	ldr	r0, [fp, #12]
   24954:	blt	24980 <GetDataSlab+0x2544>
   24958:	ldr	r0, [r0]
   2495c:	add	r0, r5, r0
   24960:	ldr	r2, [sp, #60]	; 0x3c
   24964:	ldrb	r4, [r0], #1
   24968:	vmov	s0, r4
   2496c:	vcvt.f64.u32	d16, s0
   24970:	vstr	d16, [r2]
   24974:	subs	ip, ip, #1
   24978:	add	r2, r2, #8
   2497c:	bne	24964 <GetDataSlab+0x2528>
   24980:	ldr	r0, [sp, #40]	; 0x28
   24984:	add	r5, r5, r0
   24988:	add	r3, r3, r0
   2498c:	ldr	r0, [fp, #24]
   24990:	cmp	r0, #2
   24994:	blt	24a34 <GetDataSlab+0x25f8>
   24998:	mov	r2, #0
   2499c:	ldr	ip, [sp, #60]	; 0x3c
   249a0:	mov	r0, r2
   249a4:	ldr	r2, [r6, r2, lsl #2]
   249a8:	add	r2, r2, #1
   249ac:	str	r2, [r6, r0, lsl #2]
   249b0:	ldr	r4, [sl, r0, lsl #2]
   249b4:	sdiv	r1, r2, r4
   249b8:	mls	r1, r1, r4, r2
   249bc:	cmp	r1, #0
   249c0:	bne	24a3c <GetDataSlab+0x2600>
   249c4:	mov	r1, #0
   249c8:	str	r1, [r6, r0, lsl #2]
   249cc:	add	r7, sp, #64	; 0x40
   249d0:	add	r1, r7, r0, lsl #2
   249d4:	ldr	r2, [r1, #4]
   249d8:	sdiv	r1, r3, r2
   249dc:	mls	r4, r1, r2, r3
   249e0:	cmp	r4, #0
   249e4:	beq	24a04 <GetDataSlab+0x25c8>
   249e8:	ldr	r1, [r7, r0, lsl #2]
   249ec:	ldr	r7, [lr, r0, lsl #2]
   249f0:	sub	r2, r2, r4
   249f4:	mla	r1, r7, r1, r2
   249f8:	add	r3, r1, r3
   249fc:	add	r5, r5, r1
   24a00:	b	24a1c <GetDataSlab+0x25e0>
   24a04:	ldr	r2, [lr, r0, lsl #2]
   24a08:	cmp	r2, #0
   24a0c:	addne	r1, sp, #64	; 0x40
   24a10:	ldrne	r1, [r1, r0, lsl #2]
   24a14:	mlane	r3, r1, r2, r3
   24a18:	mlane	r5, r1, r2, r5
   24a1c:	add	r2, r0, #1
   24a20:	add	r0, r0, #2
   24a24:	ldr	r1, [fp, #24]
   24a28:	cmp	r0, r1
   24a2c:	blt	249a0 <GetDataSlab+0x2564>
   24a30:	b	24a48 <GetDataSlab+0x260c>
   24a34:	ldr	ip, [sp, #60]	; 0x3c
   24a38:	b	24a48 <GetDataSlab+0x260c>
   24a3c:	ldr	r0, [r9, r0, lsl #2]
   24a40:	add	r5, r5, r0
   24a44:	add	r3, r0, r3
   24a48:	ldr	r0, [sp, #48]	; 0x30
   24a4c:	add	ip, ip, r0
   24a50:	str	ip, [sp, #60]	; 0x3c
   24a54:	ldr	ip, [sp, #44]	; 0x2c
   24a58:	add	r8, r8, ip
   24a5c:	mov	r0, #0
   24a60:	ldr	r1, [sp, #52]	; 0x34
   24a64:	cmp	r8, r1
   24a68:	blt	2494c <GetDataSlab+0x2510>
   24a6c:	b	22560 <GetDataSlab+0x124>
   24a70:	ldr	ip, [lr]
   24a74:	sub	r0, ip, #1
   24a78:	str	r0, [fp, #-72]	; 0xffffffb8
   24a7c:	ldr	r0, [r8]
   24a80:	str	r0, [sp, #40]	; 0x28
   24a84:	str	r0, [sp, #64]	; 0x40
   24a88:	ldr	r1, [r4]
   24a8c:	mov	r2, #0
   24a90:	ldr	r0, [fp, #24]
   24a94:	cmp	r0, #2
   24a98:	str	r1, [sp, #44]	; 0x2c
   24a9c:	str	r1, [sp, #52]	; 0x34
   24aa0:	sub	r5, fp, #72	; 0x48
   24aa4:	blt	24b3c <GetDataSlab+0x2700>
   24aa8:	mov	r1, #1
   24aac:	mov	r2, #0
   24ab0:	ldr	r6, [fp, #8]
   24ab4:	ldr	r0, [sp, #44]	; 0x2c
   24ab8:	str	r0, [sp, #52]	; 0x34
   24abc:	ldr	r0, [lr, r1, lsl #2]
   24ac0:	sub	r7, r0, #1
   24ac4:	str	r7, [r5, r1, lsl #2]
   24ac8:	sub	r8, r1, #1
   24acc:	ldr	r0, [fp, #8]
   24ad0:	ldr	r4, [r0, r8, lsl #2]
   24ad4:	str	r4, [sl, r1, lsl #2]
   24ad8:	mov	r0, #0
   24adc:	mov	r3, r6
   24ae0:	ldr	r5, [r3, -r0, lsl #2]!
   24ae4:	mul	r7, r7, r5
   24ae8:	ldr	r3, [r3, #4]
   24aec:	mul	r4, r3, r4
   24af0:	add	r0, r0, #1
   24af4:	cmp	r1, r0
   24af8:	bne	24adc <GetDataSlab+0x26a0>
   24afc:	str	r4, [sl, r1, lsl #2]
   24b00:	sub	r5, fp, #72	; 0x48
   24b04:	str	r7, [r5, r1, lsl #2]
   24b08:	ldr	r0, [sl, r8, lsl #2]
   24b0c:	ldr	r3, [r9, r1, lsl #2]
   24b10:	mla	r2, r3, r0, r2
   24b14:	ldr	r4, [fp, #20]
   24b18:	ldr	r0, [r4, r1, lsl #2]
   24b1c:	ldr	r3, [sp, #52]	; 0x34
   24b20:	mul	r3, r0, r3
   24b24:	str	r3, [sp, #52]	; 0x34
   24b28:	add	r6, r6, #4
   24b2c:	add	r1, r1, #1
   24b30:	ldr	r0, [fp, #24]
   24b34:	cmp	r1, r0
   24b38:	bne	24abc <GetDataSlab+0x2680>
   24b3c:	ldr	r0, [sp, #48]	; 0x30
   24b40:	add	sl, r0, r2, lsl #1
   24b44:	cmp	ip, #1
   24b48:	bne	30ac8 <GetDataSlab+0xe68c>
   24b4c:	ldr	r0, [sp, #52]	; 0x34
   24b50:	cmp	r0, #1
   24b54:	ldr	r1, [sp, #44]	; 0x2c
   24b58:	blt	240b8 <GetDataSlab+0x1c7c>
   24b5c:	add	lr, r4, #4
   24b60:	add	r0, sp, #104	; 0x68
   24b64:	orr	r6, r0, #4
   24b68:	sub	r0, fp, #72	; 0x48
   24b6c:	orr	r0, r0, #4
   24b70:	str	r0, [sp, #32]
   24b74:	lsl	r0, r1, #3
   24b78:	str	r0, [sp, #48]	; 0x30
   24b7c:	ldr	r0, [r9], #4
   24b80:	str	r0, [sp, #36]	; 0x24
   24b84:	str	r9, [sp, #56]	; 0x38
   24b88:	mov	ip, #0
   24b8c:	ldr	r5, [sp, #56]	; 0x38
   24b90:	cmp	r1, #1
   24b94:	blt	24bc4 <GetDataSlab+0x2788>
   24b98:	ldr	r0, [sp, #36]	; 0x24
   24b9c:	add	r0, sl, r0, lsl #1
   24ba0:	mov	r9, r1
   24ba4:	ldr	r8, [sp, #60]	; 0x3c
   24ba8:	ldrsh	r3, [r0], #2
   24bac:	vmov	s0, r3
   24bb0:	vcvt.f64.s32	d16, s0
   24bb4:	vstr	d16, [r8]
   24bb8:	subs	r9, r9, #1
   24bbc:	add	r8, r8, #8
   24bc0:	bne	24ba8 <GetDataSlab+0x276c>
   24bc4:	ldr	r0, [sp, #40]	; 0x28
   24bc8:	add	sl, sl, r0, lsl #1
   24bcc:	add	r2, r2, r0
   24bd0:	ldr	r0, [fp, #24]
   24bd4:	cmp	r0, #2
   24bd8:	blt	24c88 <GetDataSlab+0x284c>
   24bdc:	mov	r4, #0
   24be0:	mov	r8, #0
   24be4:	mov	r0, r4
   24be8:	ldr	r3, [r6, r4, lsl #2]
   24bec:	add	r3, r3, #1
   24bf0:	str	r3, [r6, r4, lsl #2]
   24bf4:	ldr	r4, [lr, r4, lsl #2]
   24bf8:	sdiv	r1, r3, r4
   24bfc:	mls	r1, r1, r4, r3
   24c00:	cmp	r1, #0
   24c04:	bne	24c78 <GetDataSlab+0x283c>
   24c08:	str	r8, [r6, r0, lsl #2]
   24c0c:	add	r7, sp, #64	; 0x40
   24c10:	add	r1, r7, r0, lsl #2
   24c14:	ldr	r4, [r1, #4]
   24c18:	sdiv	r1, r2, r4
   24c1c:	mls	r3, r1, r4, r2
   24c20:	cmp	r3, #0
   24c24:	beq	24c40 <GetDataSlab+0x2804>
   24c28:	ldr	r1, [r7, r0, lsl #2]
   24c2c:	ldr	r7, [r5, r0, lsl #2]
   24c30:	sub	r3, r4, r3
   24c34:	mla	r1, r7, r1, r3
   24c38:	add	r2, r1, r2
   24c3c:	b	24c5c <GetDataSlab+0x2820>
   24c40:	ldr	r3, [r5, r0, lsl #2]
   24c44:	cmp	r3, #0
   24c48:	beq	24c60 <GetDataSlab+0x2824>
   24c4c:	add	r1, sp, #64	; 0x40
   24c50:	ldr	r1, [r1, r0, lsl #2]
   24c54:	mla	r2, r1, r3, r2
   24c58:	mul	r1, r1, r3
   24c5c:	add	sl, sl, r1, lsl #1
   24c60:	add	r4, r0, #1
   24c64:	add	r0, r0, #2
   24c68:	ldr	r1, [fp, #24]
   24c6c:	cmp	r0, r1
   24c70:	blt	24be4 <GetDataSlab+0x27a8>
   24c74:	b	24c88 <GetDataSlab+0x284c>
   24c78:	ldr	r1, [sp, #32]
   24c7c:	ldr	r0, [r1, r0, lsl #2]
   24c80:	add	sl, sl, r0, lsl #1
   24c84:	add	r2, r0, r2
   24c88:	ldr	r0, [sp, #60]	; 0x3c
   24c8c:	ldr	r1, [sp, #48]	; 0x30
   24c90:	add	r0, r0, r1
   24c94:	str	r0, [sp, #60]	; 0x3c
   24c98:	ldr	r1, [sp, #44]	; 0x2c
   24c9c:	add	ip, ip, r1
   24ca0:	mov	r0, #0
   24ca4:	ldr	r3, [sp, #52]	; 0x34
   24ca8:	cmp	ip, r3
   24cac:	blt	24b90 <GetDataSlab+0x2754>
   24cb0:	b	22560 <GetDataSlab+0x124>
   24cb4:	ldr	ip, [lr]
   24cb8:	sub	r0, ip, #1
   24cbc:	str	r0, [fp, #-72]	; 0xffffffb8
   24cc0:	ldr	r0, [r8]
   24cc4:	str	r0, [sp, #40]	; 0x28
   24cc8:	str	r0, [sp, #64]	; 0x40
   24ccc:	ldr	r1, [r4]
   24cd0:	mov	r2, #0
   24cd4:	ldr	r0, [fp, #24]
   24cd8:	cmp	r0, #2
   24cdc:	str	r1, [sp, #44]	; 0x2c
   24ce0:	str	r1, [sp, #52]	; 0x34
   24ce4:	sub	r5, fp, #72	; 0x48
   24ce8:	blt	24d80 <GetDataSlab+0x2944>
   24cec:	mov	r1, #1
   24cf0:	mov	r2, #0
   24cf4:	ldr	r6, [fp, #8]
   24cf8:	ldr	r0, [sp, #44]	; 0x2c
   24cfc:	str	r0, [sp, #52]	; 0x34
   24d00:	ldr	r0, [lr, r1, lsl #2]
   24d04:	sub	r7, r0, #1
   24d08:	str	r7, [r5, r1, lsl #2]
   24d0c:	sub	r8, r1, #1
   24d10:	ldr	r0, [fp, #8]
   24d14:	ldr	r4, [r0, r8, lsl #2]
   24d18:	str	r4, [sl, r1, lsl #2]
   24d1c:	mov	r0, #0
   24d20:	mov	r3, r6
   24d24:	ldr	r5, [r3, -r0, lsl #2]!
   24d28:	mul	r7, r7, r5
   24d2c:	ldr	r3, [r3, #4]
   24d30:	mul	r4, r3, r4
   24d34:	add	r0, r0, #1
   24d38:	cmp	r1, r0
   24d3c:	bne	24d20 <GetDataSlab+0x28e4>
   24d40:	str	r4, [sl, r1, lsl #2]
   24d44:	sub	r5, fp, #72	; 0x48
   24d48:	str	r7, [r5, r1, lsl #2]
   24d4c:	ldr	r0, [sl, r8, lsl #2]
   24d50:	ldr	r3, [r9, r1, lsl #2]
   24d54:	mla	r2, r3, r0, r2
   24d58:	ldr	r4, [fp, #20]
   24d5c:	ldr	r0, [r4, r1, lsl #2]
   24d60:	ldr	r3, [sp, #52]	; 0x34
   24d64:	mul	r3, r0, r3
   24d68:	str	r3, [sp, #52]	; 0x34
   24d6c:	add	r6, r6, #4
   24d70:	add	r1, r1, #1
   24d74:	ldr	r0, [fp, #24]
   24d78:	cmp	r1, r0
   24d7c:	bne	24d00 <GetDataSlab+0x28c4>
   24d80:	ldr	r0, [sp, #48]	; 0x30
   24d84:	add	sl, r0, r2, lsl #1
   24d88:	cmp	ip, #1
   24d8c:	bne	30c60 <GetDataSlab+0xe824>
   24d90:	ldr	r0, [sp, #52]	; 0x34
   24d94:	cmp	r0, #1
   24d98:	ldr	r1, [sp, #44]	; 0x2c
   24d9c:	blt	240b8 <GetDataSlab+0x1c7c>
   24da0:	add	lr, r4, #4
   24da4:	add	r0, sp, #104	; 0x68
   24da8:	orr	r6, r0, #4
   24dac:	sub	r0, fp, #72	; 0x48
   24db0:	orr	r0, r0, #4
   24db4:	str	r0, [sp, #32]
   24db8:	lsl	r0, r1, #3
   24dbc:	str	r0, [sp, #48]	; 0x30
   24dc0:	ldr	r0, [r9], #4
   24dc4:	str	r0, [sp, #36]	; 0x24
   24dc8:	str	r9, [sp, #56]	; 0x38
   24dcc:	mov	ip, #0
   24dd0:	ldr	r5, [sp, #56]	; 0x38
   24dd4:	cmp	r1, #1
   24dd8:	blt	24e08 <GetDataSlab+0x29cc>
   24ddc:	ldr	r0, [sp, #36]	; 0x24
   24de0:	add	r0, sl, r0, lsl #1
   24de4:	mov	r9, r1
   24de8:	ldr	r8, [sp, #60]	; 0x3c
   24dec:	ldrh	r3, [r0], #2
   24df0:	vmov	s0, r3
   24df4:	vcvt.f64.u32	d16, s0
   24df8:	vstr	d16, [r8]
   24dfc:	subs	r9, r9, #1
   24e00:	add	r8, r8, #8
   24e04:	bne	24dec <GetDataSlab+0x29b0>
   24e08:	ldr	r0, [sp, #40]	; 0x28
   24e0c:	add	sl, sl, r0, lsl #1
   24e10:	add	r2, r2, r0
   24e14:	ldr	r0, [fp, #24]
   24e18:	cmp	r0, #2
   24e1c:	blt	24ecc <GetDataSlab+0x2a90>
   24e20:	mov	r4, #0
   24e24:	mov	r8, #0
   24e28:	mov	r0, r4
   24e2c:	ldr	r3, [r6, r4, lsl #2]
   24e30:	add	r3, r3, #1
   24e34:	str	r3, [r6, r4, lsl #2]
   24e38:	ldr	r4, [lr, r4, lsl #2]
   24e3c:	sdiv	r1, r3, r4
   24e40:	mls	r1, r1, r4, r3
   24e44:	cmp	r1, #0
   24e48:	bne	24ebc <GetDataSlab+0x2a80>
   24e4c:	str	r8, [r6, r0, lsl #2]
   24e50:	add	r7, sp, #64	; 0x40
   24e54:	add	r1, r7, r0, lsl #2
   24e58:	ldr	r4, [r1, #4]
   24e5c:	sdiv	r1, r2, r4
   24e60:	mls	r3, r1, r4, r2
   24e64:	cmp	r3, #0
   24e68:	beq	24e84 <GetDataSlab+0x2a48>
   24e6c:	ldr	r1, [r7, r0, lsl #2]
   24e70:	ldr	r7, [r5, r0, lsl #2]
   24e74:	sub	r3, r4, r3
   24e78:	mla	r1, r7, r1, r3
   24e7c:	add	r2, r1, r2
   24e80:	b	24ea0 <GetDataSlab+0x2a64>
   24e84:	ldr	r3, [r5, r0, lsl #2]
   24e88:	cmp	r3, #0
   24e8c:	beq	24ea4 <GetDataSlab+0x2a68>
   24e90:	add	r1, sp, #64	; 0x40
   24e94:	ldr	r1, [r1, r0, lsl #2]
   24e98:	mla	r2, r1, r3, r2
   24e9c:	mul	r1, r1, r3
   24ea0:	add	sl, sl, r1, lsl #1
   24ea4:	add	r4, r0, #1
   24ea8:	add	r0, r0, #2
   24eac:	ldr	r1, [fp, #24]
   24eb0:	cmp	r0, r1
   24eb4:	blt	24e28 <GetDataSlab+0x29ec>
   24eb8:	b	24ecc <GetDataSlab+0x2a90>
   24ebc:	ldr	r1, [sp, #32]
   24ec0:	ldr	r0, [r1, r0, lsl #2]
   24ec4:	add	sl, sl, r0, lsl #1
   24ec8:	add	r2, r0, r2
   24ecc:	ldr	r0, [sp, #60]	; 0x3c
   24ed0:	ldr	r1, [sp, #48]	; 0x30
   24ed4:	add	r0, r0, r1
   24ed8:	str	r0, [sp, #60]	; 0x3c
   24edc:	ldr	r1, [sp, #44]	; 0x2c
   24ee0:	add	ip, ip, r1
   24ee4:	mov	r0, #0
   24ee8:	ldr	r3, [sp, #52]	; 0x34
   24eec:	cmp	ip, r3
   24ef0:	blt	24dd4 <GetDataSlab+0x2998>
   24ef4:	b	22560 <GetDataSlab+0x124>
   24ef8:	ldr	r9, [lr]
   24efc:	sub	r0, r9, #1
   24f00:	str	r0, [fp, #-72]	; 0xffffffb8
   24f04:	ldr	r0, [r8]
   24f08:	str	r0, [sp, #40]	; 0x28
   24f0c:	str	r0, [sp, #64]	; 0x40
   24f10:	ldr	r1, [r4]
   24f14:	mov	r3, #0
   24f18:	ldr	r0, [fp, #24]
   24f1c:	cmp	r0, #2
   24f20:	str	r1, [sp, #44]	; 0x2c
   24f24:	str	r1, [sp, #52]	; 0x34
   24f28:	sub	ip, fp, #72	; 0x48
   24f2c:	blt	24fc4 <GetDataSlab+0x2b88>
   24f30:	mov	r1, #1
   24f34:	mov	r3, #0
   24f38:	mov	r2, r8
   24f3c:	ldr	r0, [sp, #44]	; 0x2c
   24f40:	str	r0, [sp, #52]	; 0x34
   24f44:	ldr	r0, [lr, r1, lsl #2]
   24f48:	sub	r7, r0, #1
   24f4c:	str	r7, [ip, r1, lsl #2]
   24f50:	sub	lr, r1, #1
   24f54:	ldr	r4, [r8, lr, lsl #2]
   24f58:	str	r4, [sl, r1, lsl #2]
   24f5c:	mov	r0, #0
   24f60:	mov	r6, r2
   24f64:	ldr	r5, [r6, -r0, lsl #2]!
   24f68:	mul	r7, r7, r5
   24f6c:	ldr	r5, [r6, #4]
   24f70:	mul	r4, r5, r4
   24f74:	add	r0, r0, #1
   24f78:	cmp	r1, r0
   24f7c:	bne	24f60 <GetDataSlab+0x2b24>
   24f80:	str	r4, [sl, r1, lsl #2]
   24f84:	str	r7, [ip, r1, lsl #2]
   24f88:	ldr	r0, [sl, lr, lsl #2]
   24f8c:	ldr	r7, [fp, #12]
   24f90:	ldr	r7, [r7, r1, lsl #2]
   24f94:	mla	r3, r7, r0, r3
   24f98:	ldr	r4, [fp, #20]
   24f9c:	ldr	r0, [r4, r1, lsl #2]
   24fa0:	ldr	r7, [sp, #52]	; 0x34
   24fa4:	mul	r7, r0, r7
   24fa8:	str	r7, [sp, #52]	; 0x34
   24fac:	add	r2, r2, #4
   24fb0:	add	r1, r1, #1
   24fb4:	ldr	r0, [fp, #24]
   24fb8:	cmp	r1, r0
   24fbc:	ldr	lr, [fp, #16]
   24fc0:	bne	24f44 <GetDataSlab+0x2b08>
   24fc4:	ldr	r0, [sp, #48]	; 0x30
   24fc8:	add	ip, r0, r3, lsl #2
   24fcc:	cmp	r9, #1
   24fd0:	bne	30df8 <GetDataSlab+0xe9bc>
   24fd4:	ldr	r0, [sp, #52]	; 0x34
   24fd8:	cmp	r0, #1
   24fdc:	ldr	lr, [sp, #44]	; 0x2c
   24fe0:	blt	240b8 <GetDataSlab+0x1c7c>
   24fe4:	ldr	r0, [fp, #12]
   24fe8:	add	r9, r0, #4
   24fec:	add	sl, r4, #4
   24ff0:	add	r0, sp, #104	; 0x68
   24ff4:	orr	r6, r0, #4
   24ff8:	sub	r0, fp, #72	; 0x48
   24ffc:	orr	r8, r0, #4
   25000:	lsl	r0, lr, #3
   25004:	str	r0, [sp, #48]	; 0x30
   25008:	mov	r5, #0
   2500c:	cmp	lr, #1
   25010:	blt	25044 <GetDataSlab+0x2c08>
   25014:	ldr	r0, [fp, #12]
   25018:	ldr	r0, [r0]
   2501c:	add	r0, ip, r0, lsl #2
   25020:	ldr	lr, [sp, #44]	; 0x2c
   25024:	ldr	r2, [sp, #60]	; 0x3c
   25028:	ldr	r4, [r0], #4
   2502c:	vmov	s0, r4
   25030:	vcvt.f64.s32	d16, s0
   25034:	vstr	d16, [r2]
   25038:	subs	lr, lr, #1
   2503c:	add	r2, r2, #8
   25040:	bne	25028 <GetDataSlab+0x2bec>
   25044:	ldr	r0, [sp, #40]	; 0x28
   25048:	add	ip, ip, r0, lsl #2
   2504c:	add	r3, r3, r0
   25050:	ldr	r0, [fp, #24]
   25054:	cmp	r0, #2
   25058:	blt	250fc <GetDataSlab+0x2cc0>
   2505c:	mov	r2, #0
   25060:	ldr	lr, [sp, #44]	; 0x2c
   25064:	mov	r0, r2
   25068:	ldr	r2, [r6, r2, lsl #2]
   2506c:	add	r2, r2, #1
   25070:	str	r2, [r6, r0, lsl #2]
   25074:	ldr	r4, [sl, r0, lsl #2]
   25078:	sdiv	r1, r2, r4
   2507c:	mls	r1, r1, r4, r2
   25080:	cmp	r1, #0
   25084:	bne	25104 <GetDataSlab+0x2cc8>
   25088:	mov	r1, #0
   2508c:	str	r1, [r6, r0, lsl #2]
   25090:	add	r7, sp, #64	; 0x40
   25094:	add	r1, r7, r0, lsl #2
   25098:	ldr	r2, [r1, #4]
   2509c:	sdiv	r1, r3, r2
   250a0:	mls	r4, r1, r2, r3
   250a4:	cmp	r4, #0
   250a8:	beq	250c4 <GetDataSlab+0x2c88>
   250ac:	ldr	r1, [r7, r0, lsl #2]
   250b0:	ldr	r7, [r9, r0, lsl #2]
   250b4:	sub	r2, r2, r4
   250b8:	mla	r1, r7, r1, r2
   250bc:	add	r3, r1, r3
   250c0:	b	250e0 <GetDataSlab+0x2ca4>
   250c4:	ldr	r2, [r9, r0, lsl #2]
   250c8:	cmp	r2, #0
   250cc:	beq	250e4 <GetDataSlab+0x2ca8>
   250d0:	add	r1, sp, #64	; 0x40
   250d4:	ldr	r1, [r1, r0, lsl #2]
   250d8:	mla	r3, r1, r2, r3
   250dc:	mul	r1, r1, r2
   250e0:	add	ip, ip, r1, lsl #2
   250e4:	add	r2, r0, #1
   250e8:	add	r0, r0, #2
   250ec:	ldr	r1, [fp, #24]
   250f0:	cmp	r0, r1
   250f4:	blt	25064 <GetDataSlab+0x2c28>
   250f8:	b	25110 <GetDataSlab+0x2cd4>
   250fc:	ldr	lr, [sp, #44]	; 0x2c
   25100:	b	25110 <GetDataSlab+0x2cd4>
   25104:	ldr	r0, [r8, r0, lsl #2]
   25108:	add	ip, ip, r0, lsl #2
   2510c:	add	r3, r0, r3
   25110:	ldr	r0, [sp, #60]	; 0x3c
   25114:	ldr	r1, [sp, #48]	; 0x30
   25118:	add	r0, r0, r1
   2511c:	str	r0, [sp, #60]	; 0x3c
   25120:	add	r5, r5, lr
   25124:	mov	r0, #0
   25128:	ldr	r1, [sp, #52]	; 0x34
   2512c:	cmp	r5, r1
   25130:	blt	2500c <GetDataSlab+0x2bd0>
   25134:	b	22560 <GetDataSlab+0x124>
   25138:	ldr	r9, [lr]
   2513c:	sub	r0, r9, #1
   25140:	str	r0, [fp, #-72]	; 0xffffffb8
   25144:	ldr	r0, [r8]
   25148:	str	r0, [sp, #40]	; 0x28
   2514c:	str	r0, [sp, #64]	; 0x40
   25150:	ldr	r1, [r4]
   25154:	mov	r3, #0
   25158:	ldr	r0, [fp, #24]
   2515c:	cmp	r0, #2
   25160:	str	r1, [sp, #44]	; 0x2c
   25164:	str	r1, [sp, #52]	; 0x34
   25168:	sub	ip, fp, #72	; 0x48
   2516c:	blt	25204 <GetDataSlab+0x2dc8>
   25170:	mov	r1, #1
   25174:	mov	r3, #0
   25178:	mov	r2, r8
   2517c:	ldr	r0, [sp, #44]	; 0x2c
   25180:	str	r0, [sp, #52]	; 0x34
   25184:	ldr	r0, [lr, r1, lsl #2]
   25188:	sub	r7, r0, #1
   2518c:	str	r7, [ip, r1, lsl #2]
   25190:	sub	lr, r1, #1
   25194:	ldr	r4, [r8, lr, lsl #2]
   25198:	str	r4, [sl, r1, lsl #2]
   2519c:	mov	r0, #0
   251a0:	mov	r6, r2
   251a4:	ldr	r5, [r6, -r0, lsl #2]!
   251a8:	mul	r7, r7, r5
   251ac:	ldr	r5, [r6, #4]
   251b0:	mul	r4, r5, r4
   251b4:	add	r0, r0, #1
   251b8:	cmp	r1, r0
   251bc:	bne	251a0 <GetDataSlab+0x2d64>
   251c0:	str	r4, [sl, r1, lsl #2]
   251c4:	str	r7, [ip, r1, lsl #2]
   251c8:	ldr	r0, [sl, lr, lsl #2]
   251cc:	ldr	r7, [fp, #12]
   251d0:	ldr	r7, [r7, r1, lsl #2]
   251d4:	mla	r3, r7, r0, r3
   251d8:	ldr	r4, [fp, #20]
   251dc:	ldr	r0, [r4, r1, lsl #2]
   251e0:	ldr	r7, [sp, #52]	; 0x34
   251e4:	mul	r7, r0, r7
   251e8:	str	r7, [sp, #52]	; 0x34
   251ec:	add	r2, r2, #4
   251f0:	add	r1, r1, #1
   251f4:	ldr	r0, [fp, #24]
   251f8:	cmp	r1, r0
   251fc:	ldr	lr, [fp, #16]
   25200:	bne	25184 <GetDataSlab+0x2d48>
   25204:	ldr	r0, [sp, #48]	; 0x30
   25208:	add	ip, r0, r3, lsl #2
   2520c:	cmp	r9, #1
   25210:	bne	30f98 <GetDataSlab+0xeb5c>
   25214:	ldr	r0, [sp, #52]	; 0x34
   25218:	cmp	r0, #1
   2521c:	ldr	lr, [sp, #44]	; 0x2c
   25220:	blt	240b8 <GetDataSlab+0x1c7c>
   25224:	ldr	r0, [fp, #12]
   25228:	add	r9, r0, #4
   2522c:	add	sl, r4, #4
   25230:	add	r0, sp, #104	; 0x68
   25234:	orr	r6, r0, #4
   25238:	sub	r0, fp, #72	; 0x48
   2523c:	orr	r8, r0, #4
   25240:	lsl	r0, lr, #3
   25244:	str	r0, [sp, #48]	; 0x30
   25248:	mov	r5, #0
   2524c:	cmp	lr, #1
   25250:	blt	25284 <GetDataSlab+0x2e48>
   25254:	ldr	r0, [fp, #12]
   25258:	ldr	r0, [r0]
   2525c:	add	r0, ip, r0, lsl #2
   25260:	ldr	lr, [sp, #44]	; 0x2c
   25264:	ldr	r2, [sp, #60]	; 0x3c
   25268:	ldr	r4, [r0], #4
   2526c:	vmov	s0, r4
   25270:	vcvt.f64.u32	d16, s0
   25274:	vstr	d16, [r2]
   25278:	subs	lr, lr, #1
   2527c:	add	r2, r2, #8
   25280:	bne	25268 <GetDataSlab+0x2e2c>
   25284:	ldr	r0, [sp, #40]	; 0x28
   25288:	add	ip, ip, r0, lsl #2
   2528c:	add	r3, r3, r0
   25290:	ldr	r0, [fp, #24]
   25294:	cmp	r0, #2
   25298:	blt	2533c <GetDataSlab+0x2f00>
   2529c:	mov	r2, #0
   252a0:	ldr	lr, [sp, #44]	; 0x2c
   252a4:	mov	r0, r2
   252a8:	ldr	r2, [r6, r2, lsl #2]
   252ac:	add	r2, r2, #1
   252b0:	str	r2, [r6, r0, lsl #2]
   252b4:	ldr	r4, [sl, r0, lsl #2]
   252b8:	sdiv	r1, r2, r4
   252bc:	mls	r1, r1, r4, r2
   252c0:	cmp	r1, #0
   252c4:	bne	25344 <GetDataSlab+0x2f08>
   252c8:	mov	r1, #0
   252cc:	str	r1, [r6, r0, lsl #2]
   252d0:	add	r7, sp, #64	; 0x40
   252d4:	add	r1, r7, r0, lsl #2
   252d8:	ldr	r2, [r1, #4]
   252dc:	sdiv	r1, r3, r2
   252e0:	mls	r4, r1, r2, r3
   252e4:	cmp	r4, #0
   252e8:	beq	25304 <GetDataSlab+0x2ec8>
   252ec:	ldr	r1, [r7, r0, lsl #2]
   252f0:	ldr	r7, [r9, r0, lsl #2]
   252f4:	sub	r2, r2, r4
   252f8:	mla	r1, r7, r1, r2
   252fc:	add	r3, r1, r3
   25300:	b	25320 <GetDataSlab+0x2ee4>
   25304:	ldr	r2, [r9, r0, lsl #2]
   25308:	cmp	r2, #0
   2530c:	beq	25324 <GetDataSlab+0x2ee8>
   25310:	add	r1, sp, #64	; 0x40
   25314:	ldr	r1, [r1, r0, lsl #2]
   25318:	mla	r3, r1, r2, r3
   2531c:	mul	r1, r1, r2
   25320:	add	ip, ip, r1, lsl #2
   25324:	add	r2, r0, #1
   25328:	add	r0, r0, #2
   2532c:	ldr	r1, [fp, #24]
   25330:	cmp	r0, r1
   25334:	blt	252a4 <GetDataSlab+0x2e68>
   25338:	b	25350 <GetDataSlab+0x2f14>
   2533c:	ldr	lr, [sp, #44]	; 0x2c
   25340:	b	25350 <GetDataSlab+0x2f14>
   25344:	ldr	r0, [r8, r0, lsl #2]
   25348:	add	ip, ip, r0, lsl #2
   2534c:	add	r3, r0, r3
   25350:	ldr	r0, [sp, #60]	; 0x3c
   25354:	ldr	r1, [sp, #48]	; 0x30
   25358:	add	r0, r0, r1
   2535c:	str	r0, [sp, #60]	; 0x3c
   25360:	add	r5, r5, lr
   25364:	mov	r0, #0
   25368:	ldr	r1, [sp, #52]	; 0x34
   2536c:	cmp	r5, r1
   25370:	blt	2524c <GetDataSlab+0x2e10>
   25374:	b	22560 <GetDataSlab+0x124>
   25378:	ldr	ip, [lr]
   2537c:	sub	r0, ip, #1
   25380:	str	r0, [fp, #-72]	; 0xffffffb8
   25384:	ldr	r0, [r8]
   25388:	str	r0, [sp, #40]	; 0x28
   2538c:	str	r0, [sp, #64]	; 0x40
   25390:	ldr	r1, [r4]
   25394:	mov	r2, #0
   25398:	ldr	r0, [fp, #24]
   2539c:	cmp	r0, #2
   253a0:	str	r1, [sp, #44]	; 0x2c
   253a4:	str	r1, [sp, #52]	; 0x34
   253a8:	sub	r5, fp, #72	; 0x48
   253ac:	blt	25444 <GetDataSlab+0x3008>
   253b0:	mov	r1, #1
   253b4:	mov	r2, #0
   253b8:	ldr	r6, [fp, #8]
   253bc:	ldr	r0, [sp, #44]	; 0x2c
   253c0:	str	r0, [sp, #52]	; 0x34
   253c4:	ldr	r0, [lr, r1, lsl #2]
   253c8:	sub	r7, r0, #1
   253cc:	str	r7, [r5, r1, lsl #2]
   253d0:	sub	r8, r1, #1
   253d4:	ldr	r0, [fp, #8]
   253d8:	ldr	r4, [r0, r8, lsl #2]
   253dc:	str	r4, [sl, r1, lsl #2]
   253e0:	mov	r0, #0
   253e4:	mov	r3, r6
   253e8:	ldr	r5, [r3, -r0, lsl #2]!
   253ec:	mul	r7, r7, r5
   253f0:	ldr	r3, [r3, #4]
   253f4:	mul	r4, r3, r4
   253f8:	add	r0, r0, #1
   253fc:	cmp	r1, r0
   25400:	bne	253e4 <GetDataSlab+0x2fa8>
   25404:	str	r4, [sl, r1, lsl #2]
   25408:	sub	r5, fp, #72	; 0x48
   2540c:	str	r7, [r5, r1, lsl #2]
   25410:	ldr	r0, [sl, r8, lsl #2]
   25414:	ldr	r3, [r9, r1, lsl #2]
   25418:	mla	r2, r3, r0, r2
   2541c:	ldr	r4, [fp, #20]
   25420:	ldr	r0, [r4, r1, lsl #2]
   25424:	ldr	r3, [sp, #52]	; 0x34
   25428:	mul	r3, r0, r3
   2542c:	str	r3, [sp, #52]	; 0x34
   25430:	add	r6, r6, #4
   25434:	add	r1, r1, #1
   25438:	ldr	r0, [fp, #24]
   2543c:	cmp	r1, r0
   25440:	bne	253c4 <GetDataSlab+0x2f88>
   25444:	ldr	r0, [sp, #48]	; 0x30
   25448:	add	sl, r0, r2, lsl #2
   2544c:	cmp	ip, #1
   25450:	bne	31138 <GetDataSlab+0xecfc>
   25454:	ldr	r0, [sp, #52]	; 0x34
   25458:	cmp	r0, #1
   2545c:	ldr	r1, [sp, #44]	; 0x2c
   25460:	blt	240b8 <GetDataSlab+0x1c7c>
   25464:	add	lr, r4, #4
   25468:	add	r0, sp, #104	; 0x68
   2546c:	orr	r6, r0, #4
   25470:	sub	r0, fp, #72	; 0x48
   25474:	orr	r0, r0, #4
   25478:	str	r0, [sp, #32]
   2547c:	lsl	r0, r1, #3
   25480:	str	r0, [sp, #48]	; 0x30
   25484:	ldr	r0, [r9], #4
   25488:	str	r0, [sp, #36]	; 0x24
   2548c:	str	r9, [sp, #56]	; 0x38
   25490:	mov	ip, #0
   25494:	ldr	r5, [sp, #56]	; 0x38
   25498:	cmp	r1, #1
   2549c:	blt	254cc <GetDataSlab+0x3090>
   254a0:	ldr	r0, [sp, #36]	; 0x24
   254a4:	add	r0, sl, r0, lsl #2
   254a8:	mov	r9, r1
   254ac:	ldr	r8, [sp, #60]	; 0x3c
   254b0:	vldr	s0, [r0]
   254b4:	vcvt.f64.f32	d16, s0
   254b8:	vstr	d16, [r8]
   254bc:	subs	r9, r9, #1
   254c0:	add	r8, r8, #8
   254c4:	add	r0, r0, #4
   254c8:	bne	254b0 <GetDataSlab+0x3074>
   254cc:	ldr	r0, [sp, #40]	; 0x28
   254d0:	add	sl, sl, r0, lsl #2
   254d4:	add	r2, r2, r0
   254d8:	ldr	r0, [fp, #24]
   254dc:	cmp	r0, #2
   254e0:	blt	25590 <GetDataSlab+0x3154>
   254e4:	mov	r4, #0
   254e8:	mov	r8, #0
   254ec:	mov	r0, r4
   254f0:	ldr	r3, [r6, r4, lsl #2]
   254f4:	add	r3, r3, #1
   254f8:	str	r3, [r6, r4, lsl #2]
   254fc:	ldr	r4, [lr, r4, lsl #2]
   25500:	sdiv	r1, r3, r4
   25504:	mls	r1, r1, r4, r3
   25508:	cmp	r1, #0
   2550c:	bne	25580 <GetDataSlab+0x3144>
   25510:	str	r8, [r6, r0, lsl #2]
   25514:	add	r7, sp, #64	; 0x40
   25518:	add	r1, r7, r0, lsl #2
   2551c:	ldr	r4, [r1, #4]
   25520:	sdiv	r1, r2, r4
   25524:	mls	r3, r1, r4, r2
   25528:	cmp	r3, #0
   2552c:	beq	25548 <GetDataSlab+0x310c>
   25530:	ldr	r1, [r7, r0, lsl #2]
   25534:	ldr	r7, [r5, r0, lsl #2]
   25538:	sub	r3, r4, r3
   2553c:	mla	r1, r7, r1, r3
   25540:	add	r2, r1, r2
   25544:	b	25564 <GetDataSlab+0x3128>
   25548:	ldr	r3, [r5, r0, lsl #2]
   2554c:	cmp	r3, #0
   25550:	beq	25568 <GetDataSlab+0x312c>
   25554:	add	r1, sp, #64	; 0x40
   25558:	ldr	r1, [r1, r0, lsl #2]
   2555c:	mla	r2, r1, r3, r2
   25560:	mul	r1, r1, r3
   25564:	add	sl, sl, r1, lsl #2
   25568:	add	r4, r0, #1
   2556c:	add	r0, r0, #2
   25570:	ldr	r1, [fp, #24]
   25574:	cmp	r0, r1
   25578:	blt	254ec <GetDataSlab+0x30b0>
   2557c:	b	25590 <GetDataSlab+0x3154>
   25580:	ldr	r1, [sp, #32]
   25584:	ldr	r0, [r1, r0, lsl #2]
   25588:	add	sl, sl, r0, lsl #2
   2558c:	add	r2, r0, r2
   25590:	ldr	r0, [sp, #60]	; 0x3c
   25594:	ldr	r1, [sp, #48]	; 0x30
   25598:	add	r0, r0, r1
   2559c:	str	r0, [sp, #60]	; 0x3c
   255a0:	ldr	r1, [sp, #44]	; 0x2c
   255a4:	add	ip, ip, r1
   255a8:	mov	r0, #0
   255ac:	ldr	r3, [sp, #52]	; 0x34
   255b0:	cmp	ip, r3
   255b4:	blt	25498 <GetDataSlab+0x305c>
   255b8:	b	22560 <GetDataSlab+0x124>
   255bc:	mov	r1, r8
   255c0:	ldr	r8, [lr]
   255c4:	sub	r0, r8, #1
   255c8:	str	r0, [fp, #-72]	; 0xffffffb8
   255cc:	ldr	r0, [r1]
   255d0:	str	r0, [sp, #40]	; 0x28
   255d4:	str	r0, [sp, #64]	; 0x40
   255d8:	ldr	r1, [r4]
   255dc:	mov	r2, #0
   255e0:	ldr	r0, [fp, #24]
   255e4:	cmp	r0, #2
   255e8:	str	r1, [sp, #44]	; 0x2c
   255ec:	str	r1, [sp, #52]	; 0x34
   255f0:	sub	ip, fp, #72	; 0x48
   255f4:	blt	2568c <GetDataSlab+0x3250>
   255f8:	mov	r1, #1
   255fc:	mov	r2, #0
   25600:	ldr	r3, [fp, #8]
   25604:	ldr	r0, [sp, #44]	; 0x2c
   25608:	str	r0, [sp, #52]	; 0x34
   2560c:	ldr	r0, [lr, r1, lsl #2]
   25610:	sub	r7, r0, #1
   25614:	str	r7, [ip, r1, lsl #2]
   25618:	sub	r9, r1, #1
   2561c:	ldr	r0, [fp, #8]
   25620:	ldr	r4, [r0, r9, lsl #2]
   25624:	str	r4, [sl, r1, lsl #2]
   25628:	mov	r0, #0
   2562c:	mov	r6, r3
   25630:	ldr	r5, [r6, -r0, lsl #2]!
   25634:	mul	r7, r7, r5
   25638:	ldr	r5, [r6, #4]
   2563c:	mul	r4, r5, r4
   25640:	add	r0, r0, #1
   25644:	cmp	r1, r0
   25648:	bne	2562c <GetDataSlab+0x31f0>
   2564c:	str	r4, [sl, r1, lsl #2]
   25650:	str	r7, [ip, r1, lsl #2]
   25654:	ldr	r0, [sl, r9, lsl #2]
   25658:	ldr	r9, [fp, #12]
   2565c:	ldr	r4, [r9, r1, lsl #2]
   25660:	mla	r2, r4, r0, r2
   25664:	ldr	r4, [fp, #20]
   25668:	ldr	r0, [r4, r1, lsl #2]
   2566c:	ldr	r5, [sp, #52]	; 0x34
   25670:	mul	r5, r0, r5
   25674:	str	r5, [sp, #52]	; 0x34
   25678:	add	r3, r3, #4
   2567c:	add	r1, r1, #1
   25680:	ldr	r0, [fp, #24]
   25684:	cmp	r1, r0
   25688:	bne	2560c <GetDataSlab+0x31d0>
   2568c:	ldr	r0, [sp, #48]	; 0x30
   25690:	add	ip, r0, r2, lsl #3
   25694:	cmp	r8, #1
   25698:	bne	312d0 <GetDataSlab+0xee94>
   2569c:	ldr	r0, [sp, #52]	; 0x34
   256a0:	cmp	r0, #1
   256a4:	ldr	r1, [sp, #44]	; 0x2c
   256a8:	blt	240b8 <GetDataSlab+0x1c7c>
   256ac:	add	sl, r4, #4
   256b0:	add	r0, sp, #104	; 0x68
   256b4:	orr	r6, r0, #4
   256b8:	sub	r0, fp, #72	; 0x48
   256bc:	orr	r0, r0, #4
   256c0:	str	r0, [sp, #32]
   256c4:	lsl	r0, r1, #3
   256c8:	str	r0, [sp, #48]	; 0x30
   256cc:	ldr	r0, [r9], #4
   256d0:	str	r0, [sp, #36]	; 0x24
   256d4:	str	r9, [sp, #56]	; 0x38
   256d8:	mov	r8, #0
   256dc:	mov	lr, #0
   256e0:	ldr	r5, [sp, #56]	; 0x38
   256e4:	cmp	r1, #1
   256e8:	blt	25714 <GetDataSlab+0x32d8>
   256ec:	ldr	r0, [sp, #36]	; 0x24
   256f0:	add	r0, ip, r0, lsl #3
   256f4:	mov	r9, r1
   256f8:	ldr	r4, [sp, #60]	; 0x3c
   256fc:	vldr	d16, [r0]
   25700:	vstr	d16, [r4]
   25704:	subs	r9, r9, #1
   25708:	add	r4, r4, #8
   2570c:	add	r0, r0, #8
   25710:	bne	256fc <GetDataSlab+0x32c0>
   25714:	ldr	r0, [sp, #40]	; 0x28
   25718:	add	ip, ip, r0, lsl #3
   2571c:	add	r2, r2, r0
   25720:	ldr	r0, [fp, #24]
   25724:	cmp	r0, #2
   25728:	blt	257d4 <GetDataSlab+0x3398>
   2572c:	mov	r4, #0
   25730:	mov	r0, r4
   25734:	ldr	r3, [r6, r4, lsl #2]
   25738:	add	r3, r3, #1
   2573c:	str	r3, [r6, r4, lsl #2]
   25740:	ldr	r4, [sl, r4, lsl #2]
   25744:	sdiv	r1, r3, r4
   25748:	mls	r1, r1, r4, r3
   2574c:	cmp	r1, #0
   25750:	bne	257c4 <GetDataSlab+0x3388>
   25754:	str	r8, [r6, r0, lsl #2]
   25758:	add	r7, sp, #64	; 0x40
   2575c:	add	r1, r7, r0, lsl #2
   25760:	ldr	r4, [r1, #4]
   25764:	sdiv	r1, r2, r4
   25768:	mls	r3, r1, r4, r2
   2576c:	cmp	r3, #0
   25770:	beq	2578c <GetDataSlab+0x3350>
   25774:	ldr	r1, [r7, r0, lsl #2]
   25778:	ldr	r7, [r5, r0, lsl #2]
   2577c:	sub	r3, r4, r3
   25780:	mla	r1, r7, r1, r3
   25784:	add	r2, r1, r2
   25788:	b	257a8 <GetDataSlab+0x336c>
   2578c:	ldr	r3, [r5, r0, lsl #2]
   25790:	cmp	r3, #0
   25794:	beq	257ac <GetDataSlab+0x3370>
   25798:	add	r1, sp, #64	; 0x40
   2579c:	ldr	r1, [r1, r0, lsl #2]
   257a0:	mla	r2, r1, r3, r2
   257a4:	mul	r1, r1, r3
   257a8:	add	ip, ip, r1, lsl #3
   257ac:	add	r4, r0, #1
   257b0:	add	r0, r0, #2
   257b4:	ldr	r1, [fp, #24]
   257b8:	cmp	r0, r1
   257bc:	blt	25730 <GetDataSlab+0x32f4>
   257c0:	b	257d4 <GetDataSlab+0x3398>
   257c4:	ldr	r1, [sp, #32]
   257c8:	ldr	r0, [r1, r0, lsl #2]
   257cc:	add	ip, ip, r0, lsl #3
   257d0:	add	r2, r0, r2
   257d4:	ldr	r0, [sp, #60]	; 0x3c
   257d8:	ldr	r1, [sp, #48]	; 0x30
   257dc:	add	r0, r0, r1
   257e0:	str	r0, [sp, #60]	; 0x3c
   257e4:	ldr	r1, [sp, #44]	; 0x2c
   257e8:	add	lr, lr, r1
   257ec:	mov	r0, #0
   257f0:	ldr	r3, [sp, #52]	; 0x34
   257f4:	cmp	lr, r3
   257f8:	blt	256e4 <GetDataSlab+0x32a8>
   257fc:	b	22560 <GetDataSlab+0x124>
   25800:	ldr	ip, [lr]
   25804:	sub	r1, ip, #1
   25808:	str	r1, [fp, #-72]	; 0xffffffb8
   2580c:	ldr	r0, [r8]
   25810:	str	r0, [sp, #28]
   25814:	str	r0, [sp, #64]	; 0x40
   25818:	ldr	r1, [r4]
   2581c:	mov	r5, #0
   25820:	ldr	r0, [fp, #24]
   25824:	cmp	r0, #2
   25828:	str	r1, [sp, #32]
   2582c:	str	r1, [sp, #40]	; 0x28
   25830:	sub	r6, fp, #72	; 0x48
   25834:	blt	258cc <GetDataSlab+0x3490>
   25838:	mov	r1, #1
   2583c:	mov	r5, #0
   25840:	mov	r0, r8
   25844:	ldr	r2, [sp, #32]
   25848:	str	r2, [sp, #40]	; 0x28
   2584c:	ldr	r3, [lr, r1, lsl #2]
   25850:	sub	r3, r3, #1
   25854:	str	r3, [r6, r1, lsl #2]
   25858:	sub	lr, r1, #1
   2585c:	ldr	r6, [r8, lr, lsl #2]
   25860:	str	r6, [sl, r1, lsl #2]
   25864:	mov	r4, #0
   25868:	mov	r2, r0
   2586c:	ldr	r7, [r2, -r4, lsl #2]!
   25870:	mul	r3, r3, r7
   25874:	ldr	r2, [r2, #4]
   25878:	mul	r6, r2, r6
   2587c:	add	r4, r4, #1
   25880:	cmp	r1, r4
   25884:	bne	25868 <GetDataSlab+0x342c>
   25888:	str	r6, [sl, r1, lsl #2]
   2588c:	sub	r6, fp, #72	; 0x48
   25890:	str	r3, [r6, r1, lsl #2]
   25894:	ldr	r2, [sl, lr, lsl #2]
   25898:	ldr	r3, [r9, r1, lsl #2]
   2589c:	mla	r5, r3, r2, r5
   258a0:	ldr	r4, [fp, #20]
   258a4:	ldr	r2, [r4, r1, lsl #2]
   258a8:	ldr	r3, [sp, #40]	; 0x28
   258ac:	mul	r3, r2, r3
   258b0:	str	r3, [sp, #40]	; 0x28
   258b4:	add	r0, r0, #4
   258b8:	add	r1, r1, #1
   258bc:	ldr	r2, [fp, #24]
   258c0:	cmp	r1, r2
   258c4:	ldr	lr, [fp, #16]
   258c8:	bne	2584c <GetDataSlab+0x3410>
   258cc:	ldr	r0, [sp, #48]	; 0x30
   258d0:	add	r9, r0, r5, lsl #3
   258d4:	cmp	ip, #1
   258d8:	bne	31460 <GetDataSlab+0xf024>
   258dc:	ldr	r0, [sp, #40]	; 0x28
   258e0:	cmp	r0, #1
   258e4:	blt	39628 <GetDataSlab+0x171ec>
   258e8:	add	r4, r4, #4
   258ec:	add	r0, sp, #104	; 0x68
   258f0:	orr	r6, r0, #4
   258f4:	sub	r0, fp, #72	; 0x48
   258f8:	orr	r0, r0, #4
   258fc:	str	r0, [sp, #12]
   25900:	ldr	ip, [sp, #32]
   25904:	lsl	r0, ip, #3
   25908:	str	r0, [sp, #24]
   2590c:	ldr	r8, [fp, #12]
   25910:	ldr	r0, [r8], #4
   25914:	str	r0, [sp, #20]
   25918:	ldr	r0, [sp, #60]	; 0x3c
   2591c:	str	r0, [sp, #44]	; 0x2c
   25920:	mov	r1, #0
   25924:	str	r4, [sp, #16]
   25928:	str	r1, [sp, #36]	; 0x24
   2592c:	cmp	ip, #1
   25930:	blt	25960 <GetDataSlab+0x3524>
   25934:	ldr	r0, [sp, #20]
   25938:	add	r7, r9, r0, lsl #3
   2593c:	ldr	sl, [sp, #32]
   25940:	ldr	r4, [sp, #44]	; 0x2c
   25944:	ldrd	r0, [r7]
   25948:	bl	48b60 <__aeabi_l2d>
   2594c:	strd	r0, [r4]
   25950:	subs	sl, sl, #1
   25954:	add	r4, r4, #8
   25958:	add	r7, r7, #8
   2595c:	bne	25944 <GetDataSlab+0x3508>
   25960:	ldr	r0, [sp, #28]
   25964:	add	r9, r9, r0, lsl #3
   25968:	add	r5, r5, r0
   2596c:	ldr	r0, [fp, #24]
   25970:	cmp	r0, #2
   25974:	blt	25a20 <GetDataSlab+0x35e4>
   25978:	mov	r1, #0
   2597c:	add	r4, sp, #64	; 0x40
   25980:	mov	sl, r4
   25984:	ldr	lr, [fp, #16]
   25988:	ldr	ip, [sp, #32]
   2598c:	ldr	r4, [sp, #16]
   25990:	mov	r0, r1
   25994:	ldr	r1, [r6, r1, lsl #2]
   25998:	add	r1, r1, #1
   2599c:	str	r1, [r6, r0, lsl #2]
   259a0:	ldr	r2, [r4, r0, lsl #2]
   259a4:	sdiv	r3, r1, r2
   259a8:	mls	r1, r3, r2, r1
   259ac:	cmp	r1, #0
   259b0:	bne	25a2c <GetDataSlab+0x35f0>
   259b4:	mov	r1, #0
   259b8:	str	r1, [r6, r0, lsl #2]
   259bc:	add	r1, sl, r0, lsl #2
   259c0:	ldr	r1, [r1, #4]
   259c4:	sdiv	r2, r5, r1
   259c8:	mls	r2, r2, r1, r5
   259cc:	cmp	r2, #0
   259d0:	beq	259ec <GetDataSlab+0x35b0>
   259d4:	ldr	r3, [sl, r0, lsl #2]
   259d8:	ldr	r7, [r8, r0, lsl #2]
   259dc:	sub	r1, r1, r2
   259e0:	mla	r1, r7, r3, r1
   259e4:	add	r5, r1, r5
   259e8:	b	25a04 <GetDataSlab+0x35c8>
   259ec:	ldr	r1, [r8, r0, lsl #2]
   259f0:	cmp	r1, #0
   259f4:	beq	25a08 <GetDataSlab+0x35cc>
   259f8:	ldr	r2, [sl, r0, lsl #2]
   259fc:	mla	r5, r2, r1, r5
   25a00:	mul	r1, r2, r1
   25a04:	add	r9, r9, r1, lsl #3
   25a08:	add	r1, r0, #1
   25a0c:	add	r0, r0, #2
   25a10:	ldr	r2, [fp, #24]
   25a14:	cmp	r0, r2
   25a18:	blt	25990 <GetDataSlab+0x3554>
   25a1c:	b	25a3c <GetDataSlab+0x3600>
   25a20:	ldr	lr, [fp, #16]
   25a24:	ldr	ip, [sp, #32]
   25a28:	b	25a3c <GetDataSlab+0x3600>
   25a2c:	ldr	r1, [sp, #12]
   25a30:	ldr	r0, [r1, r0, lsl #2]
   25a34:	add	r9, r9, r0, lsl #3
   25a38:	add	r5, r0, r5
   25a3c:	ldr	r0, [sp, #24]
   25a40:	ldr	r1, [sp, #44]	; 0x2c
   25a44:	add	r1, r1, r0
   25a48:	str	r1, [sp, #44]	; 0x2c
   25a4c:	ldr	r1, [sp, #36]	; 0x24
   25a50:	add	r1, r1, ip
   25a54:	ldr	r0, [sp, #40]	; 0x28
   25a58:	cmp	r1, r0
   25a5c:	blt	25928 <GetDataSlab+0x34ec>
   25a60:	b	31610 <GetDataSlab+0xf1d4>
   25a64:	ldr	lr, [lr]
   25a68:	sub	r0, lr, #1
   25a6c:	str	r0, [fp, #-72]	; 0xffffffb8
   25a70:	ldr	r0, [r8]
   25a74:	str	r0, [sp, #40]	; 0x28
   25a78:	str	r0, [sp, #64]	; 0x40
   25a7c:	ldr	r1, [r4]
   25a80:	mov	r3, #0
   25a84:	ldr	r0, [fp, #24]
   25a88:	cmp	r0, #2
   25a8c:	str	r1, [sp, #44]	; 0x2c
   25a90:	str	r1, [sp, #52]	; 0x34
   25a94:	sub	r6, fp, #72	; 0x48
   25a98:	blt	25b30 <GetDataSlab+0x36f4>
   25a9c:	mov	r0, #1
   25aa0:	mov	r3, #0
   25aa4:	mov	r4, r8
   25aa8:	ldr	r1, [sp, #44]	; 0x2c
   25aac:	str	r1, [sp, #52]	; 0x34
   25ab0:	ldr	r1, [fp, #16]
   25ab4:	ldr	r2, [r1, r0, lsl #2]
   25ab8:	sub	r7, r2, #1
   25abc:	str	r7, [r6, r0, lsl #2]
   25ac0:	sub	ip, r0, #1
   25ac4:	ldr	r5, [r8, ip, lsl #2]
   25ac8:	str	r5, [sl, r0, lsl #2]
   25acc:	mov	r2, #0
   25ad0:	mov	r1, r4
   25ad4:	ldr	r6, [r1, -r2, lsl #2]!
   25ad8:	mul	r7, r7, r6
   25adc:	ldr	r1, [r1, #4]
   25ae0:	mul	r5, r1, r5
   25ae4:	add	r2, r2, #1
   25ae8:	cmp	r0, r2
   25aec:	bne	25ad0 <GetDataSlab+0x3694>
   25af0:	str	r5, [sl, r0, lsl #2]
   25af4:	sub	r6, fp, #72	; 0x48
   25af8:	str	r7, [r6, r0, lsl #2]
   25afc:	ldr	r1, [sl, ip, lsl #2]
   25b00:	ldr	r2, [r9, r0, lsl #2]
   25b04:	mla	r3, r2, r1, r3
   25b08:	ldr	r1, [fp, #20]
   25b0c:	ldr	r1, [r1, r0, lsl #2]
   25b10:	ldr	r2, [sp, #52]	; 0x34
   25b14:	mul	r2, r1, r2
   25b18:	str	r2, [sp, #52]	; 0x34
   25b1c:	add	r4, r4, #4
   25b20:	add	r0, r0, #1
   25b24:	ldr	r1, [fp, #24]
   25b28:	cmp	r0, r1
   25b2c:	bne	25ab0 <GetDataSlab+0x3674>
   25b30:	ldr	r0, [sp, #48]	; 0x30
   25b34:	add	r5, r0, r3
   25b38:	cmp	lr, #1
   25b3c:	mov	r1, r6
   25b40:	bne	3161c <GetDataSlab+0xf1e0>
   25b44:	ldr	r0, [sp, #52]	; 0x34
   25b48:	cmp	r0, #1
   25b4c:	ldr	r0, [fp, #20]
   25b50:	blt	240b8 <GetDataSlab+0x1c7c>
   25b54:	add	lr, r9, #4
   25b58:	add	sl, r0, #4
   25b5c:	add	r0, sp, #104	; 0x68
   25b60:	orr	r6, r0, #4
   25b64:	orr	r9, r1, #4
   25b68:	ldr	ip, [sp, #44]	; 0x2c
   25b6c:	lsl	r0, ip, #2
   25b70:	str	r0, [sp, #48]	; 0x30
   25b74:	mov	r8, #0
   25b78:	cmp	ip, #1
   25b7c:	ldr	r0, [fp, #12]
   25b80:	blt	25bac <GetDataSlab+0x3770>
   25b84:	ldr	r0, [r0]
   25b88:	add	r0, r5, r0
   25b8c:	ldr	r2, [sp, #60]	; 0x3c
   25b90:	ldrb	r4, [r0], #1
   25b94:	vmov	s0, r4
   25b98:	vcvt.f32.u32	s0, s0
   25b9c:	vstr	s0, [r2]
   25ba0:	subs	ip, ip, #1
   25ba4:	add	r2, r2, #4
   25ba8:	bne	25b90 <GetDataSlab+0x3754>
   25bac:	ldr	r0, [sp, #40]	; 0x28
   25bb0:	add	r5, r5, r0
   25bb4:	add	r3, r3, r0
   25bb8:	ldr	r0, [fp, #24]
   25bbc:	cmp	r0, #2
   25bc0:	blt	25c60 <GetDataSlab+0x3824>
   25bc4:	mov	r2, #0
   25bc8:	ldr	ip, [sp, #60]	; 0x3c
   25bcc:	mov	r0, r2
   25bd0:	ldr	r2, [r6, r2, lsl #2]
   25bd4:	add	r2, r2, #1
   25bd8:	str	r2, [r6, r0, lsl #2]
   25bdc:	ldr	r4, [sl, r0, lsl #2]
   25be0:	sdiv	r1, r2, r4
   25be4:	mls	r1, r1, r4, r2
   25be8:	cmp	r1, #0
   25bec:	bne	25c68 <GetDataSlab+0x382c>
   25bf0:	mov	r1, #0
   25bf4:	str	r1, [r6, r0, lsl #2]
   25bf8:	add	r7, sp, #64	; 0x40
   25bfc:	add	r1, r7, r0, lsl #2
   25c00:	ldr	r2, [r1, #4]
   25c04:	sdiv	r1, r3, r2
   25c08:	mls	r4, r1, r2, r3
   25c0c:	cmp	r4, #0
   25c10:	beq	25c30 <GetDataSlab+0x37f4>
   25c14:	ldr	r1, [r7, r0, lsl #2]
   25c18:	ldr	r7, [lr, r0, lsl #2]
   25c1c:	sub	r2, r2, r4
   25c20:	mla	r1, r7, r1, r2
   25c24:	add	r3, r1, r3
   25c28:	add	r5, r5, r1
   25c2c:	b	25c48 <GetDataSlab+0x380c>
   25c30:	ldr	r2, [lr, r0, lsl #2]
   25c34:	cmp	r2, #0
   25c38:	addne	r1, sp, #64	; 0x40
   25c3c:	ldrne	r1, [r1, r0, lsl #2]
   25c40:	mlane	r3, r1, r2, r3
   25c44:	mlane	r5, r1, r2, r5
   25c48:	add	r2, r0, #1
   25c4c:	add	r0, r0, #2
   25c50:	ldr	r1, [fp, #24]
   25c54:	cmp	r0, r1
   25c58:	blt	25bcc <GetDataSlab+0x3790>
   25c5c:	b	25c74 <GetDataSlab+0x3838>
   25c60:	ldr	ip, [sp, #60]	; 0x3c
   25c64:	b	25c74 <GetDataSlab+0x3838>
   25c68:	ldr	r0, [r9, r0, lsl #2]
   25c6c:	add	r5, r5, r0
   25c70:	add	r3, r0, r3
   25c74:	ldr	r0, [sp, #48]	; 0x30
   25c78:	add	ip, ip, r0
   25c7c:	str	ip, [sp, #60]	; 0x3c
   25c80:	ldr	ip, [sp, #44]	; 0x2c
   25c84:	add	r8, r8, ip
   25c88:	mov	r0, #0
   25c8c:	ldr	r1, [sp, #52]	; 0x34
   25c90:	cmp	r8, r1
   25c94:	blt	25b78 <GetDataSlab+0x373c>
   25c98:	b	22560 <GetDataSlab+0x124>
   25c9c:	ldr	ip, [lr]
   25ca0:	sub	r0, ip, #1
   25ca4:	str	r0, [fp, #-72]	; 0xffffffb8
   25ca8:	ldr	r0, [r8]
   25cac:	str	r0, [sp, #40]	; 0x28
   25cb0:	str	r0, [sp, #64]	; 0x40
   25cb4:	ldr	r1, [r4]
   25cb8:	mov	r2, #0
   25cbc:	ldr	r0, [fp, #24]
   25cc0:	cmp	r0, #2
   25cc4:	str	r1, [sp, #44]	; 0x2c
   25cc8:	str	r1, [sp, #52]	; 0x34
   25ccc:	sub	r5, fp, #72	; 0x48
   25cd0:	blt	25d68 <GetDataSlab+0x392c>
   25cd4:	mov	r1, #1
   25cd8:	mov	r2, #0
   25cdc:	ldr	r6, [fp, #8]
   25ce0:	ldr	r0, [sp, #44]	; 0x2c
   25ce4:	str	r0, [sp, #52]	; 0x34
   25ce8:	ldr	r0, [lr, r1, lsl #2]
   25cec:	sub	r7, r0, #1
   25cf0:	str	r7, [r5, r1, lsl #2]
   25cf4:	sub	r8, r1, #1
   25cf8:	ldr	r0, [fp, #8]
   25cfc:	ldr	r4, [r0, r8, lsl #2]
   25d00:	str	r4, [sl, r1, lsl #2]
   25d04:	mov	r0, #0
   25d08:	mov	r3, r6
   25d0c:	ldr	r5, [r3, -r0, lsl #2]!
   25d10:	mul	r7, r7, r5
   25d14:	ldr	r3, [r3, #4]
   25d18:	mul	r4, r3, r4
   25d1c:	add	r0, r0, #1
   25d20:	cmp	r1, r0
   25d24:	bne	25d08 <GetDataSlab+0x38cc>
   25d28:	str	r4, [sl, r1, lsl #2]
   25d2c:	sub	r5, fp, #72	; 0x48
   25d30:	str	r7, [r5, r1, lsl #2]
   25d34:	ldr	r0, [sl, r8, lsl #2]
   25d38:	ldr	r3, [r9, r1, lsl #2]
   25d3c:	mla	r2, r3, r0, r2
   25d40:	ldr	r4, [fp, #20]
   25d44:	ldr	r0, [r4, r1, lsl #2]
   25d48:	ldr	r3, [sp, #52]	; 0x34
   25d4c:	mul	r3, r0, r3
   25d50:	str	r3, [sp, #52]	; 0x34
   25d54:	add	r6, r6, #4
   25d58:	add	r1, r1, #1
   25d5c:	ldr	r0, [fp, #24]
   25d60:	cmp	r1, r0
   25d64:	bne	25ce8 <GetDataSlab+0x38ac>
   25d68:	ldr	r0, [sp, #48]	; 0x30
   25d6c:	add	sl, r0, r2, lsl #1
   25d70:	cmp	ip, #1
   25d74:	bne	317b4 <GetDataSlab+0xf378>
   25d78:	ldr	r0, [sp, #52]	; 0x34
   25d7c:	cmp	r0, #1
   25d80:	ldr	r1, [sp, #44]	; 0x2c
   25d84:	blt	240b8 <GetDataSlab+0x1c7c>
   25d88:	add	lr, r4, #4
   25d8c:	add	r0, sp, #104	; 0x68
   25d90:	orr	r6, r0, #4
   25d94:	sub	r0, fp, #72	; 0x48
   25d98:	orr	r0, r0, #4
   25d9c:	str	r0, [sp, #32]
   25da0:	lsl	r0, r1, #2
   25da4:	str	r0, [sp, #48]	; 0x30
   25da8:	ldr	r0, [r9], #4
   25dac:	str	r0, [sp, #36]	; 0x24
   25db0:	str	r9, [sp, #56]	; 0x38
   25db4:	mov	ip, #0
   25db8:	ldr	r5, [sp, #56]	; 0x38
   25dbc:	cmp	r1, #1
   25dc0:	blt	25df0 <GetDataSlab+0x39b4>
   25dc4:	ldr	r0, [sp, #36]	; 0x24
   25dc8:	add	r0, sl, r0, lsl #1
   25dcc:	mov	r9, r1
   25dd0:	ldr	r8, [sp, #60]	; 0x3c
   25dd4:	ldrsh	r3, [r0], #2
   25dd8:	vmov	s0, r3
   25ddc:	vcvt.f32.s32	s0, s0
   25de0:	vstr	s0, [r8]
   25de4:	subs	r9, r9, #1
   25de8:	add	r8, r8, #4
   25dec:	bne	25dd4 <GetDataSlab+0x3998>
   25df0:	ldr	r0, [sp, #40]	; 0x28
   25df4:	add	sl, sl, r0, lsl #1
   25df8:	add	r2, r2, r0
   25dfc:	ldr	r0, [fp, #24]
   25e00:	cmp	r0, #2
   25e04:	blt	25eb4 <GetDataSlab+0x3a78>
   25e08:	mov	r4, #0
   25e0c:	mov	r8, #0
   25e10:	mov	r0, r4
   25e14:	ldr	r3, [r6, r4, lsl #2]
   25e18:	add	r3, r3, #1
   25e1c:	str	r3, [r6, r4, lsl #2]
   25e20:	ldr	r4, [lr, r4, lsl #2]
   25e24:	sdiv	r1, r3, r4
   25e28:	mls	r1, r1, r4, r3
   25e2c:	cmp	r1, #0
   25e30:	bne	25ea4 <GetDataSlab+0x3a68>
   25e34:	str	r8, [r6, r0, lsl #2]
   25e38:	add	r7, sp, #64	; 0x40
   25e3c:	add	r1, r7, r0, lsl #2
   25e40:	ldr	r4, [r1, #4]
   25e44:	sdiv	r1, r2, r4
   25e48:	mls	r3, r1, r4, r2
   25e4c:	cmp	r3, #0
   25e50:	beq	25e6c <GetDataSlab+0x3a30>
   25e54:	ldr	r1, [r7, r0, lsl #2]
   25e58:	ldr	r7, [r5, r0, lsl #2]
   25e5c:	sub	r3, r4, r3
   25e60:	mla	r1, r7, r1, r3
   25e64:	add	r2, r1, r2
   25e68:	b	25e88 <GetDataSlab+0x3a4c>
   25e6c:	ldr	r3, [r5, r0, lsl #2]
   25e70:	cmp	r3, #0
   25e74:	beq	25e8c <GetDataSlab+0x3a50>
   25e78:	add	r1, sp, #64	; 0x40
   25e7c:	ldr	r1, [r1, r0, lsl #2]
   25e80:	mla	r2, r1, r3, r2
   25e84:	mul	r1, r1, r3
   25e88:	add	sl, sl, r1, lsl #1
   25e8c:	add	r4, r0, #1
   25e90:	add	r0, r0, #2
   25e94:	ldr	r1, [fp, #24]
   25e98:	cmp	r0, r1
   25e9c:	blt	25e10 <GetDataSlab+0x39d4>
   25ea0:	b	25eb4 <GetDataSlab+0x3a78>
   25ea4:	ldr	r1, [sp, #32]
   25ea8:	ldr	r0, [r1, r0, lsl #2]
   25eac:	add	sl, sl, r0, lsl #1
   25eb0:	add	r2, r0, r2
   25eb4:	ldr	r0, [sp, #60]	; 0x3c
   25eb8:	ldr	r1, [sp, #48]	; 0x30
   25ebc:	add	r0, r0, r1
   25ec0:	str	r0, [sp, #60]	; 0x3c
   25ec4:	ldr	r1, [sp, #44]	; 0x2c
   25ec8:	add	ip, ip, r1
   25ecc:	mov	r0, #0
   25ed0:	ldr	r3, [sp, #52]	; 0x34
   25ed4:	cmp	ip, r3
   25ed8:	blt	25dbc <GetDataSlab+0x3980>
   25edc:	b	22560 <GetDataSlab+0x124>
   25ee0:	ldr	ip, [lr]
   25ee4:	sub	r0, ip, #1
   25ee8:	str	r0, [fp, #-72]	; 0xffffffb8
   25eec:	ldr	r0, [r8]
   25ef0:	str	r0, [sp, #40]	; 0x28
   25ef4:	str	r0, [sp, #64]	; 0x40
   25ef8:	ldr	r1, [r4]
   25efc:	mov	r2, #0
   25f00:	ldr	r0, [fp, #24]
   25f04:	cmp	r0, #2
   25f08:	str	r1, [sp, #44]	; 0x2c
   25f0c:	str	r1, [sp, #52]	; 0x34
   25f10:	sub	r5, fp, #72	; 0x48
   25f14:	blt	25fac <GetDataSlab+0x3b70>
   25f18:	mov	r1, #1
   25f1c:	mov	r2, #0
   25f20:	ldr	r6, [fp, #8]
   25f24:	ldr	r0, [sp, #44]	; 0x2c
   25f28:	str	r0, [sp, #52]	; 0x34
   25f2c:	ldr	r0, [lr, r1, lsl #2]
   25f30:	sub	r7, r0, #1
   25f34:	str	r7, [r5, r1, lsl #2]
   25f38:	sub	r8, r1, #1
   25f3c:	ldr	r0, [fp, #8]
   25f40:	ldr	r4, [r0, r8, lsl #2]
   25f44:	str	r4, [sl, r1, lsl #2]
   25f48:	mov	r0, #0
   25f4c:	mov	r3, r6
   25f50:	ldr	r5, [r3, -r0, lsl #2]!
   25f54:	mul	r7, r7, r5
   25f58:	ldr	r3, [r3, #4]
   25f5c:	mul	r4, r3, r4
   25f60:	add	r0, r0, #1
   25f64:	cmp	r1, r0
   25f68:	bne	25f4c <GetDataSlab+0x3b10>
   25f6c:	str	r4, [sl, r1, lsl #2]
   25f70:	sub	r5, fp, #72	; 0x48
   25f74:	str	r7, [r5, r1, lsl #2]
   25f78:	ldr	r0, [sl, r8, lsl #2]
   25f7c:	ldr	r3, [r9, r1, lsl #2]
   25f80:	mla	r2, r3, r0, r2
   25f84:	ldr	r4, [fp, #20]
   25f88:	ldr	r0, [r4, r1, lsl #2]
   25f8c:	ldr	r3, [sp, #52]	; 0x34
   25f90:	mul	r3, r0, r3
   25f94:	str	r3, [sp, #52]	; 0x34
   25f98:	add	r6, r6, #4
   25f9c:	add	r1, r1, #1
   25fa0:	ldr	r0, [fp, #24]
   25fa4:	cmp	r1, r0
   25fa8:	bne	25f2c <GetDataSlab+0x3af0>
   25fac:	ldr	r0, [sp, #48]	; 0x30
   25fb0:	add	sl, r0, r2, lsl #1
   25fb4:	cmp	ip, #1
   25fb8:	bne	3194c <GetDataSlab+0xf510>
   25fbc:	ldr	r0, [sp, #52]	; 0x34
   25fc0:	cmp	r0, #1
   25fc4:	ldr	r1, [sp, #44]	; 0x2c
   25fc8:	blt	240b8 <GetDataSlab+0x1c7c>
   25fcc:	add	lr, r4, #4
   25fd0:	add	r0, sp, #104	; 0x68
   25fd4:	orr	r6, r0, #4
   25fd8:	sub	r0, fp, #72	; 0x48
   25fdc:	orr	r0, r0, #4
   25fe0:	str	r0, [sp, #32]
   25fe4:	lsl	r0, r1, #2
   25fe8:	str	r0, [sp, #48]	; 0x30
   25fec:	ldr	r0, [r9], #4
   25ff0:	str	r0, [sp, #36]	; 0x24
   25ff4:	str	r9, [sp, #56]	; 0x38
   25ff8:	mov	ip, #0
   25ffc:	ldr	r5, [sp, #56]	; 0x38
   26000:	cmp	r1, #1
   26004:	blt	26034 <GetDataSlab+0x3bf8>
   26008:	ldr	r0, [sp, #36]	; 0x24
   2600c:	add	r0, sl, r0, lsl #1
   26010:	mov	r9, r1
   26014:	ldr	r8, [sp, #60]	; 0x3c
   26018:	ldrh	r3, [r0], #2
   2601c:	vmov	s0, r3
   26020:	vcvt.f32.u32	s0, s0
   26024:	vstr	s0, [r8]
   26028:	subs	r9, r9, #1
   2602c:	add	r8, r8, #4
   26030:	bne	26018 <GetDataSlab+0x3bdc>
   26034:	ldr	r0, [sp, #40]	; 0x28
   26038:	add	sl, sl, r0, lsl #1
   2603c:	add	r2, r2, r0
   26040:	ldr	r0, [fp, #24]
   26044:	cmp	r0, #2
   26048:	blt	260f8 <GetDataSlab+0x3cbc>
   2604c:	mov	r4, #0
   26050:	mov	r8, #0
   26054:	mov	r0, r4
   26058:	ldr	r3, [r6, r4, lsl #2]
   2605c:	add	r3, r3, #1
   26060:	str	r3, [r6, r4, lsl #2]
   26064:	ldr	r4, [lr, r4, lsl #2]
   26068:	sdiv	r1, r3, r4
   2606c:	mls	r1, r1, r4, r3
   26070:	cmp	r1, #0
   26074:	bne	260e8 <GetDataSlab+0x3cac>
   26078:	str	r8, [r6, r0, lsl #2]
   2607c:	add	r7, sp, #64	; 0x40
   26080:	add	r1, r7, r0, lsl #2
   26084:	ldr	r4, [r1, #4]
   26088:	sdiv	r1, r2, r4
   2608c:	mls	r3, r1, r4, r2
   26090:	cmp	r3, #0
   26094:	beq	260b0 <GetDataSlab+0x3c74>
   26098:	ldr	r1, [r7, r0, lsl #2]
   2609c:	ldr	r7, [r5, r0, lsl #2]
   260a0:	sub	r3, r4, r3
   260a4:	mla	r1, r7, r1, r3
   260a8:	add	r2, r1, r2
   260ac:	b	260cc <GetDataSlab+0x3c90>
   260b0:	ldr	r3, [r5, r0, lsl #2]
   260b4:	cmp	r3, #0
   260b8:	beq	260d0 <GetDataSlab+0x3c94>
   260bc:	add	r1, sp, #64	; 0x40
   260c0:	ldr	r1, [r1, r0, lsl #2]
   260c4:	mla	r2, r1, r3, r2
   260c8:	mul	r1, r1, r3
   260cc:	add	sl, sl, r1, lsl #1
   260d0:	add	r4, r0, #1
   260d4:	add	r0, r0, #2
   260d8:	ldr	r1, [fp, #24]
   260dc:	cmp	r0, r1
   260e0:	blt	26054 <GetDataSlab+0x3c18>
   260e4:	b	260f8 <GetDataSlab+0x3cbc>
   260e8:	ldr	r1, [sp, #32]
   260ec:	ldr	r0, [r1, r0, lsl #2]
   260f0:	add	sl, sl, r0, lsl #1
   260f4:	add	r2, r0, r2
   260f8:	ldr	r0, [sp, #60]	; 0x3c
   260fc:	ldr	r1, [sp, #48]	; 0x30
   26100:	add	r0, r0, r1
   26104:	str	r0, [sp, #60]	; 0x3c
   26108:	ldr	r1, [sp, #44]	; 0x2c
   2610c:	add	ip, ip, r1
   26110:	mov	r0, #0
   26114:	ldr	r3, [sp, #52]	; 0x34
   26118:	cmp	ip, r3
   2611c:	blt	26000 <GetDataSlab+0x3bc4>
   26120:	b	22560 <GetDataSlab+0x124>
   26124:	ldr	r9, [lr]
   26128:	sub	r0, r9, #1
   2612c:	str	r0, [fp, #-72]	; 0xffffffb8
   26130:	ldr	r0, [r8]
   26134:	str	r0, [sp, #40]	; 0x28
   26138:	str	r0, [sp, #64]	; 0x40
   2613c:	ldr	r1, [r4]
   26140:	mov	r3, #0
   26144:	ldr	r0, [fp, #24]
   26148:	cmp	r0, #2
   2614c:	str	r1, [sp, #44]	; 0x2c
   26150:	str	r1, [sp, #52]	; 0x34
   26154:	sub	ip, fp, #72	; 0x48
   26158:	blt	261f0 <GetDataSlab+0x3db4>
   2615c:	mov	r1, #1
   26160:	mov	r3, #0
   26164:	mov	r2, r8
   26168:	ldr	r0, [sp, #44]	; 0x2c
   2616c:	str	r0, [sp, #52]	; 0x34
   26170:	ldr	r0, [lr, r1, lsl #2]
   26174:	sub	r7, r0, #1
   26178:	str	r7, [ip, r1, lsl #2]
   2617c:	sub	lr, r1, #1
   26180:	ldr	r4, [r8, lr, lsl #2]
   26184:	str	r4, [sl, r1, lsl #2]
   26188:	mov	r0, #0
   2618c:	mov	r6, r2
   26190:	ldr	r5, [r6, -r0, lsl #2]!
   26194:	mul	r7, r7, r5
   26198:	ldr	r5, [r6, #4]
   2619c:	mul	r4, r5, r4
   261a0:	add	r0, r0, #1
   261a4:	cmp	r1, r0
   261a8:	bne	2618c <GetDataSlab+0x3d50>
   261ac:	str	r4, [sl, r1, lsl #2]
   261b0:	str	r7, [ip, r1, lsl #2]
   261b4:	ldr	r0, [sl, lr, lsl #2]
   261b8:	ldr	r7, [fp, #12]
   261bc:	ldr	r7, [r7, r1, lsl #2]
   261c0:	mla	r3, r7, r0, r3
   261c4:	ldr	r4, [fp, #20]
   261c8:	ldr	r0, [r4, r1, lsl #2]
   261cc:	ldr	r7, [sp, #52]	; 0x34
   261d0:	mul	r7, r0, r7
   261d4:	str	r7, [sp, #52]	; 0x34
   261d8:	add	r2, r2, #4
   261dc:	add	r1, r1, #1
   261e0:	ldr	r0, [fp, #24]
   261e4:	cmp	r1, r0
   261e8:	ldr	lr, [fp, #16]
   261ec:	bne	26170 <GetDataSlab+0x3d34>
   261f0:	ldr	r0, [sp, #48]	; 0x30
   261f4:	add	ip, r0, r3, lsl #2
   261f8:	cmp	r9, #1
   261fc:	bne	31ae4 <GetDataSlab+0xf6a8>
   26200:	ldr	r0, [sp, #52]	; 0x34
   26204:	cmp	r0, #1
   26208:	ldr	lr, [sp, #44]	; 0x2c
   2620c:	blt	240b8 <GetDataSlab+0x1c7c>
   26210:	ldr	r0, [fp, #12]
   26214:	add	r9, r0, #4
   26218:	add	sl, r4, #4
   2621c:	add	r0, sp, #104	; 0x68
   26220:	orr	r6, r0, #4
   26224:	sub	r0, fp, #72	; 0x48
   26228:	orr	r8, r0, #4
   2622c:	lsl	r0, lr, #2
   26230:	str	r0, [sp, #48]	; 0x30
   26234:	mov	r5, #0
   26238:	cmp	lr, #1
   2623c:	blt	26270 <GetDataSlab+0x3e34>
   26240:	ldr	r0, [fp, #12]
   26244:	ldr	r0, [r0]
   26248:	add	r0, ip, r0, lsl #2
   2624c:	ldr	lr, [sp, #44]	; 0x2c
   26250:	ldr	r2, [sp, #60]	; 0x3c
   26254:	ldr	r4, [r0], #4
   26258:	vmov	s0, r4
   2625c:	vcvt.f32.s32	s0, s0
   26260:	vstr	s0, [r2]
   26264:	subs	lr, lr, #1
   26268:	add	r2, r2, #4
   2626c:	bne	26254 <GetDataSlab+0x3e18>
   26270:	ldr	r0, [sp, #40]	; 0x28
   26274:	add	ip, ip, r0, lsl #2
   26278:	add	r3, r3, r0
   2627c:	ldr	r0, [fp, #24]
   26280:	cmp	r0, #2
   26284:	blt	26328 <GetDataSlab+0x3eec>
   26288:	mov	r2, #0
   2628c:	ldr	lr, [sp, #44]	; 0x2c
   26290:	mov	r0, r2
   26294:	ldr	r2, [r6, r2, lsl #2]
   26298:	add	r2, r2, #1
   2629c:	str	r2, [r6, r0, lsl #2]
   262a0:	ldr	r4, [sl, r0, lsl #2]
   262a4:	sdiv	r1, r2, r4
   262a8:	mls	r1, r1, r4, r2
   262ac:	cmp	r1, #0
   262b0:	bne	26330 <GetDataSlab+0x3ef4>
   262b4:	mov	r1, #0
   262b8:	str	r1, [r6, r0, lsl #2]
   262bc:	add	r7, sp, #64	; 0x40
   262c0:	add	r1, r7, r0, lsl #2
   262c4:	ldr	r2, [r1, #4]
   262c8:	sdiv	r1, r3, r2
   262cc:	mls	r4, r1, r2, r3
   262d0:	cmp	r4, #0
   262d4:	beq	262f0 <GetDataSlab+0x3eb4>
   262d8:	ldr	r1, [r7, r0, lsl #2]
   262dc:	ldr	r7, [r9, r0, lsl #2]
   262e0:	sub	r2, r2, r4
   262e4:	mla	r1, r7, r1, r2
   262e8:	add	r3, r1, r3
   262ec:	b	2630c <GetDataSlab+0x3ed0>
   262f0:	ldr	r2, [r9, r0, lsl #2]
   262f4:	cmp	r2, #0
   262f8:	beq	26310 <GetDataSlab+0x3ed4>
   262fc:	add	r1, sp, #64	; 0x40
   26300:	ldr	r1, [r1, r0, lsl #2]
   26304:	mla	r3, r1, r2, r3
   26308:	mul	r1, r1, r2
   2630c:	add	ip, ip, r1, lsl #2
   26310:	add	r2, r0, #1
   26314:	add	r0, r0, #2
   26318:	ldr	r1, [fp, #24]
   2631c:	cmp	r0, r1
   26320:	blt	26290 <GetDataSlab+0x3e54>
   26324:	b	2633c <GetDataSlab+0x3f00>
   26328:	ldr	lr, [sp, #44]	; 0x2c
   2632c:	b	2633c <GetDataSlab+0x3f00>
   26330:	ldr	r0, [r8, r0, lsl #2]
   26334:	add	ip, ip, r0, lsl #2
   26338:	add	r3, r0, r3
   2633c:	ldr	r0, [sp, #60]	; 0x3c
   26340:	ldr	r1, [sp, #48]	; 0x30
   26344:	add	r0, r0, r1
   26348:	str	r0, [sp, #60]	; 0x3c
   2634c:	add	r5, r5, lr
   26350:	mov	r0, #0
   26354:	ldr	r1, [sp, #52]	; 0x34
   26358:	cmp	r5, r1
   2635c:	blt	26238 <GetDataSlab+0x3dfc>
   26360:	b	22560 <GetDataSlab+0x124>
   26364:	ldr	r9, [lr]
   26368:	sub	r0, r9, #1
   2636c:	str	r0, [fp, #-72]	; 0xffffffb8
   26370:	ldr	r0, [r8]
   26374:	str	r0, [sp, #40]	; 0x28
   26378:	str	r0, [sp, #64]	; 0x40
   2637c:	ldr	r1, [r4]
   26380:	mov	r3, #0
   26384:	ldr	r0, [fp, #24]
   26388:	cmp	r0, #2
   2638c:	str	r1, [sp, #44]	; 0x2c
   26390:	str	r1, [sp, #52]	; 0x34
   26394:	sub	ip, fp, #72	; 0x48
   26398:	blt	26430 <GetDataSlab+0x3ff4>
   2639c:	mov	r1, #1
   263a0:	mov	r3, #0
   263a4:	mov	r2, r8
   263a8:	ldr	r0, [sp, #44]	; 0x2c
   263ac:	str	r0, [sp, #52]	; 0x34
   263b0:	ldr	r0, [lr, r1, lsl #2]
   263b4:	sub	r7, r0, #1
   263b8:	str	r7, [ip, r1, lsl #2]
   263bc:	sub	lr, r1, #1
   263c0:	ldr	r4, [r8, lr, lsl #2]
   263c4:	str	r4, [sl, r1, lsl #2]
   263c8:	mov	r0, #0
   263cc:	mov	r6, r2
   263d0:	ldr	r5, [r6, -r0, lsl #2]!
   263d4:	mul	r7, r7, r5
   263d8:	ldr	r5, [r6, #4]
   263dc:	mul	r4, r5, r4
   263e0:	add	r0, r0, #1
   263e4:	cmp	r1, r0
   263e8:	bne	263cc <GetDataSlab+0x3f90>
   263ec:	str	r4, [sl, r1, lsl #2]
   263f0:	str	r7, [ip, r1, lsl #2]
   263f4:	ldr	r0, [sl, lr, lsl #2]
   263f8:	ldr	r7, [fp, #12]
   263fc:	ldr	r7, [r7, r1, lsl #2]
   26400:	mla	r3, r7, r0, r3
   26404:	ldr	r4, [fp, #20]
   26408:	ldr	r0, [r4, r1, lsl #2]
   2640c:	ldr	r7, [sp, #52]	; 0x34
   26410:	mul	r7, r0, r7
   26414:	str	r7, [sp, #52]	; 0x34
   26418:	add	r2, r2, #4
   2641c:	add	r1, r1, #1
   26420:	ldr	r0, [fp, #24]
   26424:	cmp	r1, r0
   26428:	ldr	lr, [fp, #16]
   2642c:	bne	263b0 <GetDataSlab+0x3f74>
   26430:	ldr	r0, [sp, #48]	; 0x30
   26434:	add	ip, r0, r3, lsl #2
   26438:	cmp	r9, #1
   2643c:	bne	31c84 <GetDataSlab+0xf848>
   26440:	ldr	r0, [sp, #52]	; 0x34
   26444:	cmp	r0, #1
   26448:	ldr	lr, [sp, #44]	; 0x2c
   2644c:	blt	240b8 <GetDataSlab+0x1c7c>
   26450:	ldr	r0, [fp, #12]
   26454:	add	r9, r0, #4
   26458:	add	sl, r4, #4
   2645c:	add	r0, sp, #104	; 0x68
   26460:	orr	r6, r0, #4
   26464:	sub	r0, fp, #72	; 0x48
   26468:	orr	r8, r0, #4
   2646c:	lsl	r0, lr, #2
   26470:	str	r0, [sp, #48]	; 0x30
   26474:	mov	r5, #0
   26478:	cmp	lr, #1
   2647c:	blt	264b0 <GetDataSlab+0x4074>
   26480:	ldr	r0, [fp, #12]
   26484:	ldr	r0, [r0]
   26488:	add	r0, ip, r0, lsl #2
   2648c:	ldr	lr, [sp, #44]	; 0x2c
   26490:	ldr	r2, [sp, #60]	; 0x3c
   26494:	ldr	r4, [r0], #4
   26498:	vmov	s0, r4
   2649c:	vcvt.f32.u32	s0, s0
   264a0:	vstr	s0, [r2]
   264a4:	subs	lr, lr, #1
   264a8:	add	r2, r2, #4
   264ac:	bne	26494 <GetDataSlab+0x4058>
   264b0:	ldr	r0, [sp, #40]	; 0x28
   264b4:	add	ip, ip, r0, lsl #2
   264b8:	add	r3, r3, r0
   264bc:	ldr	r0, [fp, #24]
   264c0:	cmp	r0, #2
   264c4:	blt	26568 <GetDataSlab+0x412c>
   264c8:	mov	r2, #0
   264cc:	ldr	lr, [sp, #44]	; 0x2c
   264d0:	mov	r0, r2
   264d4:	ldr	r2, [r6, r2, lsl #2]
   264d8:	add	r2, r2, #1
   264dc:	str	r2, [r6, r0, lsl #2]
   264e0:	ldr	r4, [sl, r0, lsl #2]
   264e4:	sdiv	r1, r2, r4
   264e8:	mls	r1, r1, r4, r2
   264ec:	cmp	r1, #0
   264f0:	bne	26570 <GetDataSlab+0x4134>
   264f4:	mov	r1, #0
   264f8:	str	r1, [r6, r0, lsl #2]
   264fc:	add	r7, sp, #64	; 0x40
   26500:	add	r1, r7, r0, lsl #2
   26504:	ldr	r2, [r1, #4]
   26508:	sdiv	r1, r3, r2
   2650c:	mls	r4, r1, r2, r3
   26510:	cmp	r4, #0
   26514:	beq	26530 <GetDataSlab+0x40f4>
   26518:	ldr	r1, [r7, r0, lsl #2]
   2651c:	ldr	r7, [r9, r0, lsl #2]
   26520:	sub	r2, r2, r4
   26524:	mla	r1, r7, r1, r2
   26528:	add	r3, r1, r3
   2652c:	b	2654c <GetDataSlab+0x4110>
   26530:	ldr	r2, [r9, r0, lsl #2]
   26534:	cmp	r2, #0
   26538:	beq	26550 <GetDataSlab+0x4114>
   2653c:	add	r1, sp, #64	; 0x40
   26540:	ldr	r1, [r1, r0, lsl #2]
   26544:	mla	r3, r1, r2, r3
   26548:	mul	r1, r1, r2
   2654c:	add	ip, ip, r1, lsl #2
   26550:	add	r2, r0, #1
   26554:	add	r0, r0, #2
   26558:	ldr	r1, [fp, #24]
   2655c:	cmp	r0, r1
   26560:	blt	264d0 <GetDataSlab+0x4094>
   26564:	b	2657c <GetDataSlab+0x4140>
   26568:	ldr	lr, [sp, #44]	; 0x2c
   2656c:	b	2657c <GetDataSlab+0x4140>
   26570:	ldr	r0, [r8, r0, lsl #2]
   26574:	add	ip, ip, r0, lsl #2
   26578:	add	r3, r0, r3
   2657c:	ldr	r0, [sp, #60]	; 0x3c
   26580:	ldr	r1, [sp, #48]	; 0x30
   26584:	add	r0, r0, r1
   26588:	str	r0, [sp, #60]	; 0x3c
   2658c:	add	r5, r5, lr
   26590:	mov	r0, #0
   26594:	ldr	r1, [sp, #52]	; 0x34
   26598:	cmp	r5, r1
   2659c:	blt	26478 <GetDataSlab+0x403c>
   265a0:	b	22560 <GetDataSlab+0x124>
   265a4:	mov	r1, r8
   265a8:	ldr	r8, [lr]
   265ac:	sub	r0, r8, #1
   265b0:	str	r0, [fp, #-72]	; 0xffffffb8
   265b4:	ldr	r0, [r1]
   265b8:	str	r0, [sp, #40]	; 0x28
   265bc:	str	r0, [sp, #64]	; 0x40
   265c0:	ldr	r1, [r4]
   265c4:	mov	r2, #0
   265c8:	ldr	r0, [fp, #24]
   265cc:	cmp	r0, #2
   265d0:	str	r1, [sp, #44]	; 0x2c
   265d4:	str	r1, [sp, #52]	; 0x34
   265d8:	sub	ip, fp, #72	; 0x48
   265dc:	blt	26674 <GetDataSlab+0x4238>
   265e0:	mov	r1, #1
   265e4:	mov	r2, #0
   265e8:	ldr	r3, [fp, #8]
   265ec:	ldr	r0, [sp, #44]	; 0x2c
   265f0:	str	r0, [sp, #52]	; 0x34
   265f4:	ldr	r0, [lr, r1, lsl #2]
   265f8:	sub	r7, r0, #1
   265fc:	str	r7, [ip, r1, lsl #2]
   26600:	sub	r9, r1, #1
   26604:	ldr	r0, [fp, #8]
   26608:	ldr	r4, [r0, r9, lsl #2]
   2660c:	str	r4, [sl, r1, lsl #2]
   26610:	mov	r0, #0
   26614:	mov	r6, r3
   26618:	ldr	r5, [r6, -r0, lsl #2]!
   2661c:	mul	r7, r7, r5
   26620:	ldr	r5, [r6, #4]
   26624:	mul	r4, r5, r4
   26628:	add	r0, r0, #1
   2662c:	cmp	r1, r0
   26630:	bne	26614 <GetDataSlab+0x41d8>
   26634:	str	r4, [sl, r1, lsl #2]
   26638:	str	r7, [ip, r1, lsl #2]
   2663c:	ldr	r0, [sl, r9, lsl #2]
   26640:	ldr	r9, [fp, #12]
   26644:	ldr	r4, [r9, r1, lsl #2]
   26648:	mla	r2, r4, r0, r2
   2664c:	ldr	r4, [fp, #20]
   26650:	ldr	r0, [r4, r1, lsl #2]
   26654:	ldr	r5, [sp, #52]	; 0x34
   26658:	mul	r5, r0, r5
   2665c:	str	r5, [sp, #52]	; 0x34
   26660:	add	r3, r3, #4
   26664:	add	r1, r1, #1
   26668:	ldr	r0, [fp, #24]
   2666c:	cmp	r1, r0
   26670:	bne	265f4 <GetDataSlab+0x41b8>
   26674:	ldr	r0, [sp, #48]	; 0x30
   26678:	add	ip, r0, r2, lsl #2
   2667c:	cmp	r8, #1
   26680:	bne	31e24 <GetDataSlab+0xf9e8>
   26684:	ldr	r0, [sp, #52]	; 0x34
   26688:	cmp	r0, #1
   2668c:	ldr	r1, [sp, #44]	; 0x2c
   26690:	blt	240b8 <GetDataSlab+0x1c7c>
   26694:	add	sl, r4, #4
   26698:	add	r0, sp, #104	; 0x68
   2669c:	orr	r6, r0, #4
   266a0:	sub	r0, fp, #72	; 0x48
   266a4:	orr	r0, r0, #4
   266a8:	str	r0, [sp, #32]
   266ac:	lsl	r0, r1, #2
   266b0:	str	r0, [sp, #48]	; 0x30
   266b4:	ldr	r0, [r9], #4
   266b8:	str	r0, [sp, #36]	; 0x24
   266bc:	str	r9, [sp, #56]	; 0x38
   266c0:	mov	r8, #0
   266c4:	mov	lr, #0
   266c8:	ldr	r5, [sp, #56]	; 0x38
   266cc:	cmp	r1, #1
   266d0:	blt	266f4 <GetDataSlab+0x42b8>
   266d4:	ldr	r0, [sp, #36]	; 0x24
   266d8:	add	r0, ip, r0, lsl #2
   266dc:	mov	r9, r1
   266e0:	ldr	r4, [sp, #60]	; 0x3c
   266e4:	ldr	r3, [r0], #4
   266e8:	str	r3, [r4], #4
   266ec:	subs	r9, r9, #1
   266f0:	bne	266e4 <GetDataSlab+0x42a8>
   266f4:	ldr	r0, [sp, #40]	; 0x28
   266f8:	add	ip, ip, r0, lsl #2
   266fc:	add	r2, r2, r0
   26700:	ldr	r0, [fp, #24]
   26704:	cmp	r0, #2
   26708:	blt	267b4 <GetDataSlab+0x4378>
   2670c:	mov	r4, #0
   26710:	mov	r0, r4
   26714:	ldr	r3, [r6, r4, lsl #2]
   26718:	add	r3, r3, #1
   2671c:	str	r3, [r6, r4, lsl #2]
   26720:	ldr	r4, [sl, r4, lsl #2]
   26724:	sdiv	r1, r3, r4
   26728:	mls	r1, r1, r4, r3
   2672c:	cmp	r1, #0
   26730:	bne	267a4 <GetDataSlab+0x4368>
   26734:	str	r8, [r6, r0, lsl #2]
   26738:	add	r7, sp, #64	; 0x40
   2673c:	add	r1, r7, r0, lsl #2
   26740:	ldr	r4, [r1, #4]
   26744:	sdiv	r1, r2, r4
   26748:	mls	r3, r1, r4, r2
   2674c:	cmp	r3, #0
   26750:	beq	2676c <GetDataSlab+0x4330>
   26754:	ldr	r1, [r7, r0, lsl #2]
   26758:	ldr	r7, [r5, r0, lsl #2]
   2675c:	sub	r3, r4, r3
   26760:	mla	r1, r7, r1, r3
   26764:	add	r2, r1, r2
   26768:	b	26788 <GetDataSlab+0x434c>
   2676c:	ldr	r3, [r5, r0, lsl #2]
   26770:	cmp	r3, #0
   26774:	beq	2678c <GetDataSlab+0x4350>
   26778:	add	r1, sp, #64	; 0x40
   2677c:	ldr	r1, [r1, r0, lsl #2]
   26780:	mla	r2, r1, r3, r2
   26784:	mul	r1, r1, r3
   26788:	add	ip, ip, r1, lsl #2
   2678c:	add	r4, r0, #1
   26790:	add	r0, r0, #2
   26794:	ldr	r1, [fp, #24]
   26798:	cmp	r0, r1
   2679c:	blt	26710 <GetDataSlab+0x42d4>
   267a0:	b	267b4 <GetDataSlab+0x4378>
   267a4:	ldr	r1, [sp, #32]
   267a8:	ldr	r0, [r1, r0, lsl #2]
   267ac:	add	ip, ip, r0, lsl #2
   267b0:	add	r2, r0, r2
   267b4:	ldr	r0, [sp, #60]	; 0x3c
   267b8:	ldr	r1, [sp, #48]	; 0x30
   267bc:	add	r0, r0, r1
   267c0:	str	r0, [sp, #60]	; 0x3c
   267c4:	ldr	r1, [sp, #44]	; 0x2c
   267c8:	add	lr, lr, r1
   267cc:	mov	r0, #0
   267d0:	ldr	r3, [sp, #52]	; 0x34
   267d4:	cmp	lr, r3
   267d8:	blt	266cc <GetDataSlab+0x4290>
   267dc:	b	22560 <GetDataSlab+0x124>
   267e0:	ldr	ip, [lr]
   267e4:	sub	r0, ip, #1
   267e8:	str	r0, [fp, #-72]	; 0xffffffb8
   267ec:	ldr	r0, [r8]
   267f0:	str	r0, [sp, #40]	; 0x28
   267f4:	str	r0, [sp, #64]	; 0x40
   267f8:	ldr	r1, [r4]
   267fc:	mov	r2, #0
   26800:	ldr	r0, [fp, #24]
   26804:	cmp	r0, #2
   26808:	str	r1, [sp, #44]	; 0x2c
   2680c:	str	r1, [sp, #52]	; 0x34
   26810:	sub	r5, fp, #72	; 0x48
   26814:	blt	268ac <GetDataSlab+0x4470>
   26818:	mov	r1, #1
   2681c:	mov	r2, #0
   26820:	ldr	r6, [fp, #8]
   26824:	ldr	r0, [sp, #44]	; 0x2c
   26828:	str	r0, [sp, #52]	; 0x34
   2682c:	ldr	r0, [lr, r1, lsl #2]
   26830:	sub	r7, r0, #1
   26834:	str	r7, [r5, r1, lsl #2]
   26838:	sub	r8, r1, #1
   2683c:	ldr	r0, [fp, #8]
   26840:	ldr	r4, [r0, r8, lsl #2]
   26844:	str	r4, [sl, r1, lsl #2]
   26848:	mov	r0, #0
   2684c:	mov	r3, r6
   26850:	ldr	r5, [r3, -r0, lsl #2]!
   26854:	mul	r7, r7, r5
   26858:	ldr	r3, [r3, #4]
   2685c:	mul	r4, r3, r4
   26860:	add	r0, r0, #1
   26864:	cmp	r1, r0
   26868:	bne	2684c <GetDataSlab+0x4410>
   2686c:	str	r4, [sl, r1, lsl #2]
   26870:	sub	r5, fp, #72	; 0x48
   26874:	str	r7, [r5, r1, lsl #2]
   26878:	ldr	r0, [sl, r8, lsl #2]
   2687c:	ldr	r3, [r9, r1, lsl #2]
   26880:	mla	r2, r3, r0, r2
   26884:	ldr	r4, [fp, #20]
   26888:	ldr	r0, [r4, r1, lsl #2]
   2688c:	ldr	r3, [sp, #52]	; 0x34
   26890:	mul	r3, r0, r3
   26894:	str	r3, [sp, #52]	; 0x34
   26898:	add	r6, r6, #4
   2689c:	add	r1, r1, #1
   268a0:	ldr	r0, [fp, #24]
   268a4:	cmp	r1, r0
   268a8:	bne	2682c <GetDataSlab+0x43f0>
   268ac:	ldr	r0, [sp, #48]	; 0x30
   268b0:	add	sl, r0, r2, lsl #3
   268b4:	cmp	ip, #1
   268b8:	bne	31fac <GetDataSlab+0xfb70>
   268bc:	ldr	r0, [sp, #52]	; 0x34
   268c0:	cmp	r0, #1
   268c4:	ldr	r1, [sp, #44]	; 0x2c
   268c8:	blt	240b8 <GetDataSlab+0x1c7c>
   268cc:	add	lr, r4, #4
   268d0:	add	r0, sp, #104	; 0x68
   268d4:	orr	r6, r0, #4
   268d8:	sub	r0, fp, #72	; 0x48
   268dc:	orr	r0, r0, #4
   268e0:	str	r0, [sp, #32]
   268e4:	lsl	r0, r1, #2
   268e8:	str	r0, [sp, #48]	; 0x30
   268ec:	ldr	r0, [r9], #4
   268f0:	str	r0, [sp, #36]	; 0x24
   268f4:	str	r9, [sp, #56]	; 0x38
   268f8:	mov	ip, #0
   268fc:	ldr	r5, [sp, #56]	; 0x38
   26900:	cmp	r1, #1
   26904:	blt	26934 <GetDataSlab+0x44f8>
   26908:	ldr	r0, [sp, #36]	; 0x24
   2690c:	add	r0, sl, r0, lsl #3
   26910:	mov	r9, r1
   26914:	ldr	r8, [sp, #60]	; 0x3c
   26918:	vldr	d16, [r0]
   2691c:	vcvt.f32.f64	s0, d16
   26920:	vstr	s0, [r8]
   26924:	subs	r9, r9, #1
   26928:	add	r8, r8, #4
   2692c:	add	r0, r0, #8
   26930:	bne	26918 <GetDataSlab+0x44dc>
   26934:	ldr	r0, [sp, #40]	; 0x28
   26938:	add	sl, sl, r0, lsl #3
   2693c:	add	r2, r2, r0
   26940:	ldr	r0, [fp, #24]
   26944:	cmp	r0, #2
   26948:	blt	269f8 <GetDataSlab+0x45bc>
   2694c:	mov	r4, #0
   26950:	mov	r8, #0
   26954:	mov	r0, r4
   26958:	ldr	r3, [r6, r4, lsl #2]
   2695c:	add	r3, r3, #1
   26960:	str	r3, [r6, r4, lsl #2]
   26964:	ldr	r4, [lr, r4, lsl #2]
   26968:	sdiv	r1, r3, r4
   2696c:	mls	r1, r1, r4, r3
   26970:	cmp	r1, #0
   26974:	bne	269e8 <GetDataSlab+0x45ac>
   26978:	str	r8, [r6, r0, lsl #2]
   2697c:	add	r7, sp, #64	; 0x40
   26980:	add	r1, r7, r0, lsl #2
   26984:	ldr	r4, [r1, #4]
   26988:	sdiv	r1, r2, r4
   2698c:	mls	r3, r1, r4, r2
   26990:	cmp	r3, #0
   26994:	beq	269b0 <GetDataSlab+0x4574>
   26998:	ldr	r1, [r7, r0, lsl #2]
   2699c:	ldr	r7, [r5, r0, lsl #2]
   269a0:	sub	r3, r4, r3
   269a4:	mla	r1, r7, r1, r3
   269a8:	add	r2, r1, r2
   269ac:	b	269cc <GetDataSlab+0x4590>
   269b0:	ldr	r3, [r5, r0, lsl #2]
   269b4:	cmp	r3, #0
   269b8:	beq	269d0 <GetDataSlab+0x4594>
   269bc:	add	r1, sp, #64	; 0x40
   269c0:	ldr	r1, [r1, r0, lsl #2]
   269c4:	mla	r2, r1, r3, r2
   269c8:	mul	r1, r1, r3
   269cc:	add	sl, sl, r1, lsl #3
   269d0:	add	r4, r0, #1
   269d4:	add	r0, r0, #2
   269d8:	ldr	r1, [fp, #24]
   269dc:	cmp	r0, r1
   269e0:	blt	26954 <GetDataSlab+0x4518>
   269e4:	b	269f8 <GetDataSlab+0x45bc>
   269e8:	ldr	r1, [sp, #32]
   269ec:	ldr	r0, [r1, r0, lsl #2]
   269f0:	add	sl, sl, r0, lsl #3
   269f4:	add	r2, r0, r2
   269f8:	ldr	r0, [sp, #60]	; 0x3c
   269fc:	ldr	r1, [sp, #48]	; 0x30
   26a00:	add	r0, r0, r1
   26a04:	str	r0, [sp, #60]	; 0x3c
   26a08:	ldr	r1, [sp, #44]	; 0x2c
   26a0c:	add	ip, ip, r1
   26a10:	mov	r0, #0
   26a14:	ldr	r3, [sp, #52]	; 0x34
   26a18:	cmp	ip, r3
   26a1c:	blt	26900 <GetDataSlab+0x44c4>
   26a20:	b	22560 <GetDataSlab+0x124>
   26a24:	ldr	ip, [lr]
   26a28:	sub	r1, ip, #1
   26a2c:	str	r1, [fp, #-72]	; 0xffffffb8
   26a30:	ldr	r0, [r8]
   26a34:	str	r0, [sp, #28]
   26a38:	str	r0, [sp, #64]	; 0x40
   26a3c:	ldr	r1, [r4]
   26a40:	mov	r5, #0
   26a44:	ldr	r0, [fp, #24]
   26a48:	cmp	r0, #2
   26a4c:	str	r1, [sp, #32]
   26a50:	str	r1, [sp, #40]	; 0x28
   26a54:	sub	r6, fp, #72	; 0x48
   26a58:	blt	26af0 <GetDataSlab+0x46b4>
   26a5c:	mov	r1, #1
   26a60:	mov	r5, #0
   26a64:	mov	r0, r8
   26a68:	ldr	r2, [sp, #32]
   26a6c:	str	r2, [sp, #40]	; 0x28
   26a70:	ldr	r3, [lr, r1, lsl #2]
   26a74:	sub	r3, r3, #1
   26a78:	str	r3, [r6, r1, lsl #2]
   26a7c:	sub	lr, r1, #1
   26a80:	ldr	r6, [r8, lr, lsl #2]
   26a84:	str	r6, [sl, r1, lsl #2]
   26a88:	mov	r4, #0
   26a8c:	mov	r2, r0
   26a90:	ldr	r7, [r2, -r4, lsl #2]!
   26a94:	mul	r3, r3, r7
   26a98:	ldr	r2, [r2, #4]
   26a9c:	mul	r6, r2, r6
   26aa0:	add	r4, r4, #1
   26aa4:	cmp	r1, r4
   26aa8:	bne	26a8c <GetDataSlab+0x4650>
   26aac:	str	r6, [sl, r1, lsl #2]
   26ab0:	sub	r6, fp, #72	; 0x48
   26ab4:	str	r3, [r6, r1, lsl #2]
   26ab8:	ldr	r2, [sl, lr, lsl #2]
   26abc:	ldr	r3, [r9, r1, lsl #2]
   26ac0:	mla	r5, r3, r2, r5
   26ac4:	ldr	r4, [fp, #20]
   26ac8:	ldr	r2, [r4, r1, lsl #2]
   26acc:	ldr	r3, [sp, #40]	; 0x28
   26ad0:	mul	r3, r2, r3
   26ad4:	str	r3, [sp, #40]	; 0x28
   26ad8:	add	r0, r0, #4
   26adc:	add	r1, r1, #1
   26ae0:	ldr	r2, [fp, #24]
   26ae4:	cmp	r1, r2
   26ae8:	ldr	lr, [fp, #16]
   26aec:	bne	26a70 <GetDataSlab+0x4634>
   26af0:	ldr	r0, [sp, #48]	; 0x30
   26af4:	add	r9, r0, r5, lsl #3
   26af8:	cmp	ip, #1
   26afc:	bne	32144 <GetDataSlab+0xfd08>
   26b00:	ldr	r0, [sp, #40]	; 0x28
   26b04:	cmp	r0, #1
   26b08:	blt	39a5c <GetDataSlab+0x17620>
   26b0c:	add	r4, r4, #4
   26b10:	add	r0, sp, #104	; 0x68
   26b14:	orr	r6, r0, #4
   26b18:	sub	r0, fp, #72	; 0x48
   26b1c:	orr	r0, r0, #4
   26b20:	str	r0, [sp, #12]
   26b24:	ldr	ip, [sp, #32]
   26b28:	lsl	r0, ip, #2
   26b2c:	str	r0, [sp, #24]
   26b30:	ldr	r8, [fp, #12]
   26b34:	ldr	r0, [r8], #4
   26b38:	str	r0, [sp, #20]
   26b3c:	ldr	r0, [sp, #60]	; 0x3c
   26b40:	str	r0, [sp, #44]	; 0x2c
   26b44:	mov	r1, #0
   26b48:	str	r4, [sp, #16]
   26b4c:	str	r1, [sp, #36]	; 0x24
   26b50:	cmp	ip, #1
   26b54:	blt	26b80 <GetDataSlab+0x4744>
   26b58:	ldr	r0, [sp, #20]
   26b5c:	add	r7, r9, r0, lsl #3
   26b60:	ldr	sl, [sp, #32]
   26b64:	ldr	r4, [sp, #44]	; 0x2c
   26b68:	ldrd	r0, [r7]
   26b6c:	bl	48d94 <__aeabi_l2f>
   26b70:	str	r0, [r4], #4
   26b74:	subs	sl, sl, #1
   26b78:	add	r7, r7, #8
   26b7c:	bne	26b68 <GetDataSlab+0x472c>
   26b80:	ldr	r0, [sp, #28]
   26b84:	add	r9, r9, r0, lsl #3
   26b88:	add	r5, r5, r0
   26b8c:	ldr	r0, [fp, #24]
   26b90:	cmp	r0, #2
   26b94:	blt	26c40 <GetDataSlab+0x4804>
   26b98:	mov	r1, #0
   26b9c:	add	r4, sp, #64	; 0x40
   26ba0:	mov	sl, r4
   26ba4:	ldr	lr, [fp, #16]
   26ba8:	ldr	ip, [sp, #32]
   26bac:	ldr	r4, [sp, #16]
   26bb0:	mov	r0, r1
   26bb4:	ldr	r1, [r6, r1, lsl #2]
   26bb8:	add	r1, r1, #1
   26bbc:	str	r1, [r6, r0, lsl #2]
   26bc0:	ldr	r2, [r4, r0, lsl #2]
   26bc4:	sdiv	r3, r1, r2
   26bc8:	mls	r1, r3, r2, r1
   26bcc:	cmp	r1, #0
   26bd0:	bne	26c4c <GetDataSlab+0x4810>
   26bd4:	mov	r1, #0
   26bd8:	str	r1, [r6, r0, lsl #2]
   26bdc:	add	r1, sl, r0, lsl #2
   26be0:	ldr	r1, [r1, #4]
   26be4:	sdiv	r2, r5, r1
   26be8:	mls	r2, r2, r1, r5
   26bec:	cmp	r2, #0
   26bf0:	beq	26c0c <GetDataSlab+0x47d0>
   26bf4:	ldr	r3, [sl, r0, lsl #2]
   26bf8:	ldr	r7, [r8, r0, lsl #2]
   26bfc:	sub	r1, r1, r2
   26c00:	mla	r1, r7, r3, r1
   26c04:	add	r5, r1, r5
   26c08:	b	26c24 <GetDataSlab+0x47e8>
   26c0c:	ldr	r1, [r8, r0, lsl #2]
   26c10:	cmp	r1, #0
   26c14:	beq	26c28 <GetDataSlab+0x47ec>
   26c18:	ldr	r2, [sl, r0, lsl #2]
   26c1c:	mla	r5, r2, r1, r5
   26c20:	mul	r1, r2, r1
   26c24:	add	r9, r9, r1, lsl #3
   26c28:	add	r1, r0, #1
   26c2c:	add	r0, r0, #2
   26c30:	ldr	r2, [fp, #24]
   26c34:	cmp	r0, r2
   26c38:	blt	26bb0 <GetDataSlab+0x4774>
   26c3c:	b	26c5c <GetDataSlab+0x4820>
   26c40:	ldr	lr, [fp, #16]
   26c44:	ldr	ip, [sp, #32]
   26c48:	b	26c5c <GetDataSlab+0x4820>
   26c4c:	ldr	r1, [sp, #12]
   26c50:	ldr	r0, [r1, r0, lsl #2]
   26c54:	add	r9, r9, r0, lsl #3
   26c58:	add	r5, r0, r5
   26c5c:	ldr	r0, [sp, #24]
   26c60:	ldr	r1, [sp, #44]	; 0x2c
   26c64:	add	r1, r1, r0
   26c68:	str	r1, [sp, #44]	; 0x2c
   26c6c:	ldr	r1, [sp, #36]	; 0x24
   26c70:	add	r1, r1, ip
   26c74:	ldr	r0, [sp, #40]	; 0x28
   26c78:	cmp	r1, r0
   26c7c:	blt	26b4c <GetDataSlab+0x4710>
   26c80:	b	322f4 <GetDataSlab+0xfeb8>
   26c84:	ldr	lr, [lr]
   26c88:	sub	r1, lr, #1
   26c8c:	str	r1, [fp, #-72]	; 0xffffffb8
   26c90:	ldr	r1, [r8]
   26c94:	str	r1, [sp, #64]	; 0x40
   26c98:	ldr	r0, [r4]
   26c9c:	str	r0, [sp, #44]	; 0x2c
   26ca0:	mov	r2, #0
   26ca4:	ldr	r0, [fp, #24]
   26ca8:	cmp	r0, #2
   26cac:	blt	26d3c <GetDataSlab+0x4900>
   26cb0:	mov	r1, #1
   26cb4:	mov	r2, #0
   26cb8:	mov	r0, r8
   26cbc:	ldr	r3, [fp, #16]
   26cc0:	ldr	r7, [r3, r1, lsl #2]
   26cc4:	sub	r7, r7, #1
   26cc8:	str	r7, [ip, r1, lsl #2]
   26ccc:	sub	r8, r1, #1
   26cd0:	ldr	r3, [fp, #8]
   26cd4:	ldr	r5, [r3, r8, lsl #2]
   26cd8:	str	r5, [sl, r1, lsl #2]
   26cdc:	mov	r4, #0
   26ce0:	mov	r3, r0
   26ce4:	ldr	r6, [r3, -r4, lsl #2]!
   26ce8:	mul	r7, r7, r6
   26cec:	ldr	r3, [r3, #4]
   26cf0:	mul	r5, r3, r5
   26cf4:	add	r4, r4, #1
   26cf8:	cmp	r1, r4
   26cfc:	bne	26ce0 <GetDataSlab+0x48a4>
   26d00:	str	r5, [sl, r1, lsl #2]
   26d04:	str	r7, [ip, r1, lsl #2]
   26d08:	ldr	r3, [sl, r8, lsl #2]
   26d0c:	ldr	r4, [r9, r1, lsl #2]
   26d10:	mla	r2, r4, r3, r2
   26d14:	ldr	r4, [fp, #20]
   26d18:	ldr	r3, [r4, r1, lsl #2]
   26d1c:	ldr	r5, [sp, #44]	; 0x2c
   26d20:	mul	r5, r3, r5
   26d24:	str	r5, [sp, #44]	; 0x2c
   26d28:	add	r0, r0, #4
   26d2c:	add	r1, r1, #1
   26d30:	ldr	r3, [fp, #24]
   26d34:	cmp	r1, r3
   26d38:	bne	26cbc <GetDataSlab+0x4880>
   26d3c:	ldr	r0, [sp, #48]	; 0x30
   26d40:	add	ip, r0, r2
   26d44:	cmp	lr, #1
   26d48:	bne	32300 <GetDataSlab+0xfec4>
   26d4c:	ldr	r0, [sp, #44]	; 0x2c
   26d50:	cmp	r0, #1
   26d54:	blt	3ae3c <GetDataSlab+0x18a00>
   26d58:	add	r9, r9, #4
   26d5c:	add	r8, r4, #4
   26d60:	add	r0, sp, #104	; 0x68
   26d64:	orr	r5, r0, #4
   26d68:	sub	r0, fp, #72	; 0x48
   26d6c:	orr	r0, r0, #4
   26d70:	str	r0, [sp, #52]	; 0x34
   26d74:	mov	sl, #0
   26d78:	ldr	r0, [fp, #12]
   26d7c:	ldr	r0, [r0]
   26d80:	add	r2, r0, r2
   26d84:	add	r3, ip, r0
   26d88:	ldr	r0, [r4]
   26d8c:	cmp	r0, #1
   26d90:	blt	26db8 <GetDataSlab+0x497c>
   26d94:	ldr	r0, [sp, #60]	; 0x3c
   26d98:	add	r1, r0, sl
   26d9c:	mov	r7, #0
   26da0:	ldrb	r0, [r3, r7]
   26da4:	strb	r0, [r1, r7]
   26da8:	add	r7, r7, #1
   26dac:	ldr	r0, [r4]
   26db0:	cmp	r7, r0
   26db4:	blt	26da0 <GetDataSlab+0x4964>
   26db8:	ldr	r1, [fp, #12]
   26dbc:	ldr	r1, [r1]
   26dc0:	ldr	r7, [fp, #8]
   26dc4:	ldr	r4, [r7]
   26dc8:	sub	r1, r4, r1
   26dcc:	add	ip, r3, r1
   26dd0:	add	r2, r2, r1
   26dd4:	ldr	r1, [fp, #24]
   26dd8:	cmp	r1, #2
   26ddc:	blt	26e88 <GetDataSlab+0x4a4c>
   26de0:	mov	r1, #0
   26de4:	mov	r7, r1
   26de8:	ldr	r1, [r5, r1, lsl #2]
   26dec:	add	r1, r1, #1
   26df0:	str	r1, [r5, r7, lsl #2]
   26df4:	ldr	r4, [r8, r7, lsl #2]
   26df8:	sdiv	lr, r1, r4
   26dfc:	mls	r1, lr, r4, r1
   26e00:	cmp	r1, #0
   26e04:	bne	26e78 <GetDataSlab+0x4a3c>
   26e08:	mov	r1, #0
   26e0c:	str	r1, [r5, r7, lsl #2]
   26e10:	add	r3, sp, #64	; 0x40
   26e14:	add	r1, r3, r7, lsl #2
   26e18:	ldr	r1, [r1, #4]
   26e1c:	sdiv	r4, r2, r1
   26e20:	mls	r4, r4, r1, r2
   26e24:	cmp	r4, #0
   26e28:	beq	26e48 <GetDataSlab+0x4a0c>
   26e2c:	ldr	r6, [r3, r7, lsl #2]
   26e30:	ldr	r3, [r9, r7, lsl #2]
   26e34:	sub	r1, r1, r4
   26e38:	mla	r1, r3, r6, r1
   26e3c:	add	r2, r1, r2
   26e40:	add	ip, ip, r1
   26e44:	b	26e60 <GetDataSlab+0x4a24>
   26e48:	ldr	r1, [r9, r7, lsl #2]
   26e4c:	cmp	r1, #0
   26e50:	addne	r3, sp, #64	; 0x40
   26e54:	ldrne	r3, [r3, r7, lsl #2]
   26e58:	mlane	r2, r3, r1, r2
   26e5c:	mlane	ip, r3, r1, ip
   26e60:	add	r1, r7, #1
   26e64:	add	r3, r7, #2
   26e68:	ldr	r7, [fp, #24]
   26e6c:	cmp	r3, r7
   26e70:	blt	26de4 <GetDataSlab+0x49a8>
   26e74:	b	26e88 <GetDataSlab+0x4a4c>
   26e78:	ldr	r1, [sp, #52]	; 0x34
   26e7c:	ldr	r1, [r1, r7, lsl #2]
   26e80:	add	ip, ip, r1
   26e84:	add	r2, r1, r2
   26e88:	add	sl, r0, sl
   26e8c:	mov	r0, #0
   26e90:	ldr	r1, [sp, #44]	; 0x2c
   26e94:	cmp	sl, r1
   26e98:	ldr	r4, [fp, #20]
   26e9c:	blt	26d78 <GetDataSlab+0x493c>
   26ea0:	b	22560 <GetDataSlab+0x124>
   26ea4:	ldr	lr, [lr]
   26ea8:	sub	r1, lr, #1
   26eac:	str	r1, [fp, #-72]	; 0xffffffb8
   26eb0:	ldr	r1, [r8]
   26eb4:	str	r1, [sp, #64]	; 0x40
   26eb8:	ldr	r0, [r4]
   26ebc:	str	r0, [sp, #44]	; 0x2c
   26ec0:	mov	r2, #0
   26ec4:	ldr	r0, [fp, #24]
   26ec8:	cmp	r0, #2
   26ecc:	blt	26f5c <GetDataSlab+0x4b20>
   26ed0:	mov	r1, #1
   26ed4:	mov	r2, #0
   26ed8:	mov	r0, r8
   26edc:	ldr	r3, [fp, #16]
   26ee0:	ldr	r7, [r3, r1, lsl #2]
   26ee4:	sub	r7, r7, #1
   26ee8:	str	r7, [ip, r1, lsl #2]
   26eec:	sub	r8, r1, #1
   26ef0:	ldr	r3, [fp, #8]
   26ef4:	ldr	r5, [r3, r8, lsl #2]
   26ef8:	str	r5, [sl, r1, lsl #2]
   26efc:	mov	r4, #0
   26f00:	mov	r3, r0
   26f04:	ldr	r6, [r3, -r4, lsl #2]!
   26f08:	mul	r7, r7, r6
   26f0c:	ldr	r3, [r3, #4]
   26f10:	mul	r5, r3, r5
   26f14:	add	r4, r4, #1
   26f18:	cmp	r1, r4
   26f1c:	bne	26f00 <GetDataSlab+0x4ac4>
   26f20:	str	r5, [sl, r1, lsl #2]
   26f24:	str	r7, [ip, r1, lsl #2]
   26f28:	ldr	r3, [sl, r8, lsl #2]
   26f2c:	ldr	r4, [r9, r1, lsl #2]
   26f30:	mla	r2, r4, r3, r2
   26f34:	ldr	r4, [fp, #20]
   26f38:	ldr	r3, [r4, r1, lsl #2]
   26f3c:	ldr	r5, [sp, #44]	; 0x2c
   26f40:	mul	r5, r3, r5
   26f44:	str	r5, [sp, #44]	; 0x2c
   26f48:	add	r0, r0, #4
   26f4c:	add	r1, r1, #1
   26f50:	ldr	r3, [fp, #24]
   26f54:	cmp	r1, r3
   26f58:	bne	26edc <GetDataSlab+0x4aa0>
   26f5c:	ldr	r0, [sp, #48]	; 0x30
   26f60:	add	ip, r0, r2, lsl #1
   26f64:	cmp	lr, #1
   26f68:	bne	32480 <GetDataSlab+0x10044>
   26f6c:	ldr	r0, [sp, #44]	; 0x2c
   26f70:	cmp	r0, #1
   26f74:	blt	3ae3c <GetDataSlab+0x18a00>
   26f78:	add	sl, r9, #4
   26f7c:	add	r8, r4, #4
   26f80:	add	r0, sp, #104	; 0x68
   26f84:	orr	r5, r0, #4
   26f88:	sub	r0, fp, #72	; 0x48
   26f8c:	orr	r0, r0, #4
   26f90:	str	r0, [sp, #52]	; 0x34
   26f94:	mov	lr, #0
   26f98:	ldr	r0, [fp, #12]
   26f9c:	ldr	r0, [r0]
   26fa0:	add	r9, r0, r2
   26fa4:	add	r3, ip, r0, lsl #1
   26fa8:	ldr	r0, [r4]
   26fac:	cmp	r0, #1
   26fb0:	blt	26fdc <GetDataSlab+0x4ba0>
   26fb4:	ldr	r0, [sp, #60]	; 0x3c
   26fb8:	add	r7, r0, lr
   26fbc:	mov	r2, #0
   26fc0:	mov	r1, r3
   26fc4:	ldrb	r0, [r1], #2
   26fc8:	strb	r0, [r7, r2]
   26fcc:	add	r2, r2, #1
   26fd0:	ldr	r0, [r4]
   26fd4:	cmp	r2, r0
   26fd8:	blt	26fc4 <GetDataSlab+0x4b88>
   26fdc:	ldr	r1, [fp, #12]
   26fe0:	ldr	r1, [r1]
   26fe4:	ldr	r2, [fp, #8]
   26fe8:	ldr	r2, [r2]
   26fec:	sub	r1, r2, r1
   26ff0:	add	ip, r3, r1, lsl #1
   26ff4:	add	r2, r9, r1
   26ff8:	ldr	r1, [fp, #24]
   26ffc:	cmp	r1, #2
   27000:	blt	270b0 <GetDataSlab+0x4c74>
   27004:	mov	r1, #0
   27008:	mov	r9, #0
   2700c:	mov	r7, r1
   27010:	ldr	r1, [r5, r1, lsl #2]
   27014:	add	r1, r1, #1
   27018:	str	r1, [r5, r7, lsl #2]
   2701c:	ldr	r4, [r8, r7, lsl #2]
   27020:	sdiv	r6, r1, r4
   27024:	mls	r1, r6, r4, r1
   27028:	cmp	r1, #0
   2702c:	bne	270a0 <GetDataSlab+0x4c64>
   27030:	str	r9, [r5, r7, lsl #2]
   27034:	add	r3, sp, #64	; 0x40
   27038:	add	r1, r3, r7, lsl #2
   2703c:	ldr	r1, [r1, #4]
   27040:	sdiv	r4, r2, r1
   27044:	mls	r4, r4, r1, r2
   27048:	cmp	r4, #0
   2704c:	beq	27068 <GetDataSlab+0x4c2c>
   27050:	ldr	r6, [r3, r7, lsl #2]
   27054:	ldr	r3, [sl, r7, lsl #2]
   27058:	sub	r1, r1, r4
   2705c:	mla	r1, r3, r6, r1
   27060:	add	r2, r1, r2
   27064:	b	27084 <GetDataSlab+0x4c48>
   27068:	ldr	r1, [sl, r7, lsl #2]
   2706c:	cmp	r1, #0
   27070:	beq	27088 <GetDataSlab+0x4c4c>
   27074:	add	r3, sp, #64	; 0x40
   27078:	ldr	r3, [r3, r7, lsl #2]
   2707c:	mla	r2, r3, r1, r2
   27080:	mul	r1, r3, r1
   27084:	add	ip, ip, r1, lsl #1
   27088:	add	r1, r7, #1
   2708c:	add	r3, r7, #2
   27090:	ldr	r4, [fp, #24]
   27094:	cmp	r3, r4
   27098:	blt	2700c <GetDataSlab+0x4bd0>
   2709c:	b	270b0 <GetDataSlab+0x4c74>
   270a0:	ldr	r1, [sp, #52]	; 0x34
   270a4:	ldr	r1, [r1, r7, lsl #2]
   270a8:	add	ip, ip, r1, lsl #1
   270ac:	add	r2, r1, r2
   270b0:	add	lr, r0, lr
   270b4:	mov	r0, #0
   270b8:	ldr	r1, [sp, #44]	; 0x2c
   270bc:	cmp	lr, r1
   270c0:	ldr	r4, [fp, #20]
   270c4:	blt	26f98 <GetDataSlab+0x4b5c>
   270c8:	b	22560 <GetDataSlab+0x124>
   270cc:	ldr	lr, [lr]
   270d0:	sub	r1, lr, #1
   270d4:	str	r1, [fp, #-72]	; 0xffffffb8
   270d8:	ldr	r1, [r8]
   270dc:	str	r1, [sp, #64]	; 0x40
   270e0:	ldr	r0, [r4]
   270e4:	str	r0, [sp, #44]	; 0x2c
   270e8:	mov	r2, #0
   270ec:	ldr	r0, [fp, #24]
   270f0:	cmp	r0, #2
   270f4:	blt	27184 <GetDataSlab+0x4d48>
   270f8:	mov	r1, #1
   270fc:	mov	r2, #0
   27100:	mov	r0, r8
   27104:	ldr	r3, [fp, #16]
   27108:	ldr	r7, [r3, r1, lsl #2]
   2710c:	sub	r7, r7, #1
   27110:	str	r7, [ip, r1, lsl #2]
   27114:	sub	r8, r1, #1
   27118:	ldr	r3, [fp, #8]
   2711c:	ldr	r5, [r3, r8, lsl #2]
   27120:	str	r5, [sl, r1, lsl #2]
   27124:	mov	r4, #0
   27128:	mov	r3, r0
   2712c:	ldr	r6, [r3, -r4, lsl #2]!
   27130:	mul	r7, r7, r6
   27134:	ldr	r3, [r3, #4]
   27138:	mul	r5, r3, r5
   2713c:	add	r4, r4, #1
   27140:	cmp	r1, r4
   27144:	bne	27128 <GetDataSlab+0x4cec>
   27148:	str	r5, [sl, r1, lsl #2]
   2714c:	str	r7, [ip, r1, lsl #2]
   27150:	ldr	r3, [sl, r8, lsl #2]
   27154:	ldr	r4, [r9, r1, lsl #2]
   27158:	mla	r2, r4, r3, r2
   2715c:	ldr	r4, [fp, #20]
   27160:	ldr	r3, [r4, r1, lsl #2]
   27164:	ldr	r5, [sp, #44]	; 0x2c
   27168:	mul	r5, r3, r5
   2716c:	str	r5, [sp, #44]	; 0x2c
   27170:	add	r0, r0, #4
   27174:	add	r1, r1, #1
   27178:	ldr	r3, [fp, #24]
   2717c:	cmp	r1, r3
   27180:	bne	27104 <GetDataSlab+0x4cc8>
   27184:	ldr	r0, [sp, #48]	; 0x30
   27188:	add	ip, r0, r2, lsl #1
   2718c:	cmp	lr, #1
   27190:	bne	32604 <GetDataSlab+0x101c8>
   27194:	ldr	r0, [sp, #44]	; 0x2c
   27198:	cmp	r0, #1
   2719c:	blt	3ae3c <GetDataSlab+0x18a00>
   271a0:	add	sl, r9, #4
   271a4:	add	r8, r4, #4
   271a8:	add	r0, sp, #104	; 0x68
   271ac:	orr	r5, r0, #4
   271b0:	sub	r0, fp, #72	; 0x48
   271b4:	orr	r0, r0, #4
   271b8:	str	r0, [sp, #52]	; 0x34
   271bc:	mov	lr, #0
   271c0:	ldr	r0, [fp, #12]
   271c4:	ldr	r0, [r0]
   271c8:	add	r9, r0, r2
   271cc:	add	r3, ip, r0, lsl #1
   271d0:	ldr	r0, [r4]
   271d4:	cmp	r0, #1
   271d8:	blt	27204 <GetDataSlab+0x4dc8>
   271dc:	ldr	r0, [sp, #60]	; 0x3c
   271e0:	add	r7, r0, lr
   271e4:	mov	r2, #0
   271e8:	mov	r1, r3
   271ec:	ldrb	r0, [r1], #2
   271f0:	strb	r0, [r7, r2]
   271f4:	add	r2, r2, #1
   271f8:	ldr	r0, [r4]
   271fc:	cmp	r2, r0
   27200:	blt	271ec <GetDataSlab+0x4db0>
   27204:	ldr	r1, [fp, #12]
   27208:	ldr	r1, [r1]
   2720c:	ldr	r2, [fp, #8]
   27210:	ldr	r2, [r2]
   27214:	sub	r1, r2, r1
   27218:	add	ip, r3, r1, lsl #1
   2721c:	add	r2, r9, r1
   27220:	ldr	r1, [fp, #24]
   27224:	cmp	r1, #2
   27228:	blt	272d8 <GetDataSlab+0x4e9c>
   2722c:	mov	r1, #0
   27230:	mov	r9, #0
   27234:	mov	r7, r1
   27238:	ldr	r1, [r5, r1, lsl #2]
   2723c:	add	r1, r1, #1
   27240:	str	r1, [r5, r7, lsl #2]
   27244:	ldr	r4, [r8, r7, lsl #2]
   27248:	sdiv	r6, r1, r4
   2724c:	mls	r1, r6, r4, r1
   27250:	cmp	r1, #0
   27254:	bne	272c8 <GetDataSlab+0x4e8c>
   27258:	str	r9, [r5, r7, lsl #2]
   2725c:	add	r3, sp, #64	; 0x40
   27260:	add	r1, r3, r7, lsl #2
   27264:	ldr	r1, [r1, #4]
   27268:	sdiv	r4, r2, r1
   2726c:	mls	r4, r4, r1, r2
   27270:	cmp	r4, #0
   27274:	beq	27290 <GetDataSlab+0x4e54>
   27278:	ldr	r6, [r3, r7, lsl #2]
   2727c:	ldr	r3, [sl, r7, lsl #2]
   27280:	sub	r1, r1, r4
   27284:	mla	r1, r3, r6, r1
   27288:	add	r2, r1, r2
   2728c:	b	272ac <GetDataSlab+0x4e70>
   27290:	ldr	r1, [sl, r7, lsl #2]
   27294:	cmp	r1, #0
   27298:	beq	272b0 <GetDataSlab+0x4e74>
   2729c:	add	r3, sp, #64	; 0x40
   272a0:	ldr	r3, [r3, r7, lsl #2]
   272a4:	mla	r2, r3, r1, r2
   272a8:	mul	r1, r3, r1
   272ac:	add	ip, ip, r1, lsl #1
   272b0:	add	r1, r7, #1
   272b4:	add	r3, r7, #2
   272b8:	ldr	r4, [fp, #24]
   272bc:	cmp	r3, r4
   272c0:	blt	27234 <GetDataSlab+0x4df8>
   272c4:	b	272d8 <GetDataSlab+0x4e9c>
   272c8:	ldr	r1, [sp, #52]	; 0x34
   272cc:	ldr	r1, [r1, r7, lsl #2]
   272d0:	add	ip, ip, r1, lsl #1
   272d4:	add	r2, r1, r2
   272d8:	add	lr, r0, lr
   272dc:	mov	r0, #0
   272e0:	ldr	r1, [sp, #44]	; 0x2c
   272e4:	cmp	lr, r1
   272e8:	ldr	r4, [fp, #20]
   272ec:	blt	271c0 <GetDataSlab+0x4d84>
   272f0:	b	22560 <GetDataSlab+0x124>
   272f4:	ldr	lr, [lr]
   272f8:	sub	r1, lr, #1
   272fc:	str	r1, [fp, #-72]	; 0xffffffb8
   27300:	ldr	r1, [r8]
   27304:	str	r1, [sp, #64]	; 0x40
   27308:	ldr	r0, [r4]
   2730c:	str	r0, [sp, #44]	; 0x2c
   27310:	mov	r2, #0
   27314:	ldr	r0, [fp, #24]
   27318:	cmp	r0, #2
   2731c:	blt	273ac <GetDataSlab+0x4f70>
   27320:	mov	r1, #1
   27324:	mov	r2, #0
   27328:	mov	r0, r8
   2732c:	ldr	r3, [fp, #16]
   27330:	ldr	r7, [r3, r1, lsl #2]
   27334:	sub	r7, r7, #1
   27338:	str	r7, [ip, r1, lsl #2]
   2733c:	sub	r8, r1, #1
   27340:	ldr	r3, [fp, #8]
   27344:	ldr	r5, [r3, r8, lsl #2]
   27348:	str	r5, [sl, r1, lsl #2]
   2734c:	mov	r4, #0
   27350:	mov	r3, r0
   27354:	ldr	r6, [r3, -r4, lsl #2]!
   27358:	mul	r7, r7, r6
   2735c:	ldr	r3, [r3, #4]
   27360:	mul	r5, r3, r5
   27364:	add	r4, r4, #1
   27368:	cmp	r1, r4
   2736c:	bne	27350 <GetDataSlab+0x4f14>
   27370:	str	r5, [sl, r1, lsl #2]
   27374:	str	r7, [ip, r1, lsl #2]
   27378:	ldr	r3, [sl, r8, lsl #2]
   2737c:	ldr	r4, [r9, r1, lsl #2]
   27380:	mla	r2, r4, r3, r2
   27384:	ldr	r4, [fp, #20]
   27388:	ldr	r3, [r4, r1, lsl #2]
   2738c:	ldr	r5, [sp, #44]	; 0x2c
   27390:	mul	r5, r3, r5
   27394:	str	r5, [sp, #44]	; 0x2c
   27398:	add	r0, r0, #4
   2739c:	add	r1, r1, #1
   273a0:	ldr	r3, [fp, #24]
   273a4:	cmp	r1, r3
   273a8:	bne	2732c <GetDataSlab+0x4ef0>
   273ac:	ldr	r0, [sp, #48]	; 0x30
   273b0:	add	ip, r0, r2, lsl #2
   273b4:	cmp	lr, #1
   273b8:	bne	32788 <GetDataSlab+0x1034c>
   273bc:	ldr	r0, [sp, #44]	; 0x2c
   273c0:	cmp	r0, #1
   273c4:	blt	3ae3c <GetDataSlab+0x18a00>
   273c8:	add	r9, r9, #4
   273cc:	add	r8, r4, #4
   273d0:	add	r0, sp, #104	; 0x68
   273d4:	orr	r5, r0, #4
   273d8:	sub	r0, fp, #72	; 0x48
   273dc:	orr	r0, r0, #4
   273e0:	str	r0, [sp, #52]	; 0x34
   273e4:	mov	sl, #0
   273e8:	ldr	r0, [fp, #12]
   273ec:	ldr	r0, [r0]
   273f0:	add	r2, r0, r2
   273f4:	add	r3, ip, r0, lsl #2
   273f8:	ldr	r0, [r4]
   273fc:	cmp	r0, #1
   27400:	blt	27428 <GetDataSlab+0x4fec>
   27404:	ldr	r0, [sp, #60]	; 0x3c
   27408:	add	r1, r0, sl
   2740c:	mov	r7, #0
   27410:	ldr	r0, [r3, r7, lsl #2]
   27414:	strb	r0, [r1, r7]
   27418:	add	r7, r7, #1
   2741c:	ldr	r0, [r4]
   27420:	cmp	r7, r0
   27424:	blt	27410 <GetDataSlab+0x4fd4>
   27428:	ldr	r1, [fp, #12]
   2742c:	ldr	r1, [r1]
   27430:	ldr	r7, [fp, #8]
   27434:	ldr	r4, [r7]
   27438:	sub	r1, r4, r1
   2743c:	add	ip, r3, r1, lsl #2
   27440:	add	r2, r2, r1
   27444:	ldr	r1, [fp, #24]
   27448:	cmp	r1, #2
   2744c:	blt	274fc <GetDataSlab+0x50c0>
   27450:	mov	r1, #0
   27454:	mov	r7, r1
   27458:	ldr	r1, [r5, r1, lsl #2]
   2745c:	add	r1, r1, #1
   27460:	str	r1, [r5, r7, lsl #2]
   27464:	ldr	r4, [r8, r7, lsl #2]
   27468:	sdiv	lr, r1, r4
   2746c:	mls	r1, lr, r4, r1
   27470:	cmp	r1, #0
   27474:	bne	274ec <GetDataSlab+0x50b0>
   27478:	mov	r1, #0
   2747c:	str	r1, [r5, r7, lsl #2]
   27480:	add	r3, sp, #64	; 0x40
   27484:	add	r1, r3, r7, lsl #2
   27488:	ldr	r1, [r1, #4]
   2748c:	sdiv	r4, r2, r1
   27490:	mls	r4, r4, r1, r2
   27494:	cmp	r4, #0
   27498:	beq	274b4 <GetDataSlab+0x5078>
   2749c:	ldr	r6, [r3, r7, lsl #2]
   274a0:	ldr	r3, [r9, r7, lsl #2]
   274a4:	sub	r1, r1, r4
   274a8:	mla	r1, r3, r6, r1
   274ac:	add	r2, r1, r2
   274b0:	b	274d0 <GetDataSlab+0x5094>
   274b4:	ldr	r1, [r9, r7, lsl #2]
   274b8:	cmp	r1, #0
   274bc:	beq	274d4 <GetDataSlab+0x5098>
   274c0:	add	r3, sp, #64	; 0x40
   274c4:	ldr	r3, [r3, r7, lsl #2]
   274c8:	mla	r2, r3, r1, r2
   274cc:	mul	r1, r3, r1
   274d0:	add	ip, ip, r1, lsl #2
   274d4:	add	r1, r7, #1
   274d8:	add	r3, r7, #2
   274dc:	ldr	r7, [fp, #24]
   274e0:	cmp	r3, r7
   274e4:	blt	27454 <GetDataSlab+0x5018>
   274e8:	b	274fc <GetDataSlab+0x50c0>
   274ec:	ldr	r1, [sp, #52]	; 0x34
   274f0:	ldr	r1, [r1, r7, lsl #2]
   274f4:	add	ip, ip, r1, lsl #2
   274f8:	add	r2, r1, r2
   274fc:	add	sl, r0, sl
   27500:	mov	r0, #0
   27504:	ldr	r1, [sp, #44]	; 0x2c
   27508:	cmp	sl, r1
   2750c:	ldr	r4, [fp, #20]
   27510:	blt	273e8 <GetDataSlab+0x4fac>
   27514:	b	22560 <GetDataSlab+0x124>
   27518:	ldr	lr, [lr]
   2751c:	sub	r1, lr, #1
   27520:	str	r1, [fp, #-72]	; 0xffffffb8
   27524:	ldr	r1, [r8]
   27528:	str	r1, [sp, #64]	; 0x40
   2752c:	ldr	r0, [r4]
   27530:	str	r0, [sp, #44]	; 0x2c
   27534:	mov	r2, #0
   27538:	ldr	r0, [fp, #24]
   2753c:	cmp	r0, #2
   27540:	blt	275d0 <GetDataSlab+0x5194>
   27544:	mov	r1, #1
   27548:	mov	r2, #0
   2754c:	mov	r0, r8
   27550:	ldr	r3, [fp, #16]
   27554:	ldr	r7, [r3, r1, lsl #2]
   27558:	sub	r7, r7, #1
   2755c:	str	r7, [ip, r1, lsl #2]
   27560:	sub	r8, r1, #1
   27564:	ldr	r3, [fp, #8]
   27568:	ldr	r5, [r3, r8, lsl #2]
   2756c:	str	r5, [sl, r1, lsl #2]
   27570:	mov	r4, #0
   27574:	mov	r3, r0
   27578:	ldr	r6, [r3, -r4, lsl #2]!
   2757c:	mul	r7, r7, r6
   27580:	ldr	r3, [r3, #4]
   27584:	mul	r5, r3, r5
   27588:	add	r4, r4, #1
   2758c:	cmp	r1, r4
   27590:	bne	27574 <GetDataSlab+0x5138>
   27594:	str	r5, [sl, r1, lsl #2]
   27598:	str	r7, [ip, r1, lsl #2]
   2759c:	ldr	r3, [sl, r8, lsl #2]
   275a0:	ldr	r4, [r9, r1, lsl #2]
   275a4:	mla	r2, r4, r3, r2
   275a8:	ldr	r4, [fp, #20]
   275ac:	ldr	r3, [r4, r1, lsl #2]
   275b0:	ldr	r5, [sp, #44]	; 0x2c
   275b4:	mul	r5, r3, r5
   275b8:	str	r5, [sp, #44]	; 0x2c
   275bc:	add	r0, r0, #4
   275c0:	add	r1, r1, #1
   275c4:	ldr	r3, [fp, #24]
   275c8:	cmp	r1, r3
   275cc:	bne	27550 <GetDataSlab+0x5114>
   275d0:	ldr	r0, [sp, #48]	; 0x30
   275d4:	add	ip, r0, r2, lsl #2
   275d8:	cmp	lr, #1
   275dc:	bne	3290c <GetDataSlab+0x104d0>
   275e0:	ldr	r0, [sp, #44]	; 0x2c
   275e4:	cmp	r0, #1
   275e8:	blt	3ae3c <GetDataSlab+0x18a00>
   275ec:	add	r9, r9, #4
   275f0:	add	r8, r4, #4
   275f4:	add	r0, sp, #104	; 0x68
   275f8:	orr	r5, r0, #4
   275fc:	sub	r0, fp, #72	; 0x48
   27600:	orr	r0, r0, #4
   27604:	str	r0, [sp, #52]	; 0x34
   27608:	mov	sl, #0
   2760c:	ldr	r0, [fp, #12]
   27610:	ldr	r0, [r0]
   27614:	add	r2, r0, r2
   27618:	add	r3, ip, r0, lsl #2
   2761c:	ldr	r0, [r4]
   27620:	cmp	r0, #1
   27624:	blt	2764c <GetDataSlab+0x5210>
   27628:	ldr	r0, [sp, #60]	; 0x3c
   2762c:	add	r1, r0, sl
   27630:	mov	r7, #0
   27634:	ldr	r0, [r3, r7, lsl #2]
   27638:	strb	r0, [r1, r7]
   2763c:	add	r7, r7, #1
   27640:	ldr	r0, [r4]
   27644:	cmp	r7, r0
   27648:	blt	27634 <GetDataSlab+0x51f8>
   2764c:	ldr	r1, [fp, #12]
   27650:	ldr	r1, [r1]
   27654:	ldr	r7, [fp, #8]
   27658:	ldr	r4, [r7]
   2765c:	sub	r1, r4, r1
   27660:	add	ip, r3, r1, lsl #2
   27664:	add	r2, r2, r1
   27668:	ldr	r1, [fp, #24]
   2766c:	cmp	r1, #2
   27670:	blt	27720 <GetDataSlab+0x52e4>
   27674:	mov	r1, #0
   27678:	mov	r7, r1
   2767c:	ldr	r1, [r5, r1, lsl #2]
   27680:	add	r1, r1, #1
   27684:	str	r1, [r5, r7, lsl #2]
   27688:	ldr	r4, [r8, r7, lsl #2]
   2768c:	sdiv	lr, r1, r4
   27690:	mls	r1, lr, r4, r1
   27694:	cmp	r1, #0
   27698:	bne	27710 <GetDataSlab+0x52d4>
   2769c:	mov	r1, #0
   276a0:	str	r1, [r5, r7, lsl #2]
   276a4:	add	r3, sp, #64	; 0x40
   276a8:	add	r1, r3, r7, lsl #2
   276ac:	ldr	r1, [r1, #4]
   276b0:	sdiv	r4, r2, r1
   276b4:	mls	r4, r4, r1, r2
   276b8:	cmp	r4, #0
   276bc:	beq	276d8 <GetDataSlab+0x529c>
   276c0:	ldr	r6, [r3, r7, lsl #2]
   276c4:	ldr	r3, [r9, r7, lsl #2]
   276c8:	sub	r1, r1, r4
   276cc:	mla	r1, r3, r6, r1
   276d0:	add	r2, r1, r2
   276d4:	b	276f4 <GetDataSlab+0x52b8>
   276d8:	ldr	r1, [r9, r7, lsl #2]
   276dc:	cmp	r1, #0
   276e0:	beq	276f8 <GetDataSlab+0x52bc>
   276e4:	add	r3, sp, #64	; 0x40
   276e8:	ldr	r3, [r3, r7, lsl #2]
   276ec:	mla	r2, r3, r1, r2
   276f0:	mul	r1, r3, r1
   276f4:	add	ip, ip, r1, lsl #2
   276f8:	add	r1, r7, #1
   276fc:	add	r3, r7, #2
   27700:	ldr	r7, [fp, #24]
   27704:	cmp	r3, r7
   27708:	blt	27678 <GetDataSlab+0x523c>
   2770c:	b	27720 <GetDataSlab+0x52e4>
   27710:	ldr	r1, [sp, #52]	; 0x34
   27714:	ldr	r1, [r1, r7, lsl #2]
   27718:	add	ip, ip, r1, lsl #2
   2771c:	add	r2, r1, r2
   27720:	add	sl, r0, sl
   27724:	mov	r0, #0
   27728:	ldr	r1, [sp, #44]	; 0x2c
   2772c:	cmp	sl, r1
   27730:	ldr	r4, [fp, #20]
   27734:	blt	2760c <GetDataSlab+0x51d0>
   27738:	b	22560 <GetDataSlab+0x124>
   2773c:	ldr	lr, [lr]
   27740:	sub	r1, lr, #1
   27744:	str	r1, [fp, #-72]	; 0xffffffb8
   27748:	ldr	r1, [r8]
   2774c:	str	r1, [sp, #64]	; 0x40
   27750:	ldr	r0, [r4]
   27754:	str	r0, [sp, #44]	; 0x2c
   27758:	mov	r2, #0
   2775c:	ldr	r0, [fp, #24]
   27760:	cmp	r0, #2
   27764:	blt	277f4 <GetDataSlab+0x53b8>
   27768:	mov	r1, #1
   2776c:	mov	r2, #0
   27770:	mov	r0, r8
   27774:	ldr	r3, [fp, #16]
   27778:	ldr	r7, [r3, r1, lsl #2]
   2777c:	sub	r7, r7, #1
   27780:	str	r7, [ip, r1, lsl #2]
   27784:	sub	r8, r1, #1
   27788:	ldr	r3, [fp, #8]
   2778c:	ldr	r5, [r3, r8, lsl #2]
   27790:	str	r5, [sl, r1, lsl #2]
   27794:	mov	r4, #0
   27798:	mov	r3, r0
   2779c:	ldr	r6, [r3, -r4, lsl #2]!
   277a0:	mul	r7, r7, r6
   277a4:	ldr	r3, [r3, #4]
   277a8:	mul	r5, r3, r5
   277ac:	add	r4, r4, #1
   277b0:	cmp	r1, r4
   277b4:	bne	27798 <GetDataSlab+0x535c>
   277b8:	str	r5, [sl, r1, lsl #2]
   277bc:	str	r7, [ip, r1, lsl #2]
   277c0:	ldr	r3, [sl, r8, lsl #2]
   277c4:	ldr	r4, [r9, r1, lsl #2]
   277c8:	mla	r2, r4, r3, r2
   277cc:	ldr	r4, [fp, #20]
   277d0:	ldr	r3, [r4, r1, lsl #2]
   277d4:	ldr	r5, [sp, #44]	; 0x2c
   277d8:	mul	r5, r3, r5
   277dc:	str	r5, [sp, #44]	; 0x2c
   277e0:	add	r0, r0, #4
   277e4:	add	r1, r1, #1
   277e8:	ldr	r3, [fp, #24]
   277ec:	cmp	r1, r3
   277f0:	bne	27774 <GetDataSlab+0x5338>
   277f4:	ldr	r0, [sp, #48]	; 0x30
   277f8:	add	r9, r0, r2, lsl #2
   277fc:	cmp	lr, #1
   27800:	bne	32a90 <GetDataSlab+0x10654>
   27804:	ldr	r0, [sp, #44]	; 0x2c
   27808:	cmp	r0, #1
   2780c:	blt	3ae3c <GetDataSlab+0x18a00>
   27810:	ldr	r0, [fp, #12]
   27814:	add	lr, r0, #4
   27818:	mov	r0, ip
   2781c:	add	ip, r4, #4
   27820:	add	r1, sp, #104	; 0x68
   27824:	orr	r5, r1, #4
   27828:	orr	r0, r0, #4
   2782c:	str	r0, [sp, #52]	; 0x34
   27830:	mov	r8, #0
   27834:	ldr	r0, [fp, #12]
   27838:	ldr	r0, [r0]
   2783c:	mov	r1, r4
   27840:	add	r4, r0, r2
   27844:	add	sl, r9, r0, lsl #2
   27848:	ldr	r0, [r1]
   2784c:	cmp	r0, #1
   27850:	blt	27888 <GetDataSlab+0x544c>
   27854:	ldr	r0, [sp, #60]	; 0x3c
   27858:	add	r7, r0, r8
   2785c:	mov	r2, #0
   27860:	mov	r3, sl
   27864:	vldr	s0, [r3]
   27868:	vcvt.s32.f32	s0, s0
   2786c:	vmov	r0, s0
   27870:	strb	r0, [r7, r2]
   27874:	add	r3, r3, #4
   27878:	add	r2, r2, #1
   2787c:	ldr	r0, [r1]
   27880:	cmp	r2, r0
   27884:	blt	27864 <GetDataSlab+0x5428>
   27888:	ldr	r1, [fp, #12]
   2788c:	ldr	r1, [r1]
   27890:	ldr	r2, [fp, #8]
   27894:	ldr	r2, [r2]
   27898:	sub	r1, r2, r1
   2789c:	add	r9, sl, r1, lsl #2
   278a0:	add	r2, r4, r1
   278a4:	ldr	r1, [fp, #24]
   278a8:	cmp	r1, #2
   278ac:	blt	27958 <GetDataSlab+0x551c>
   278b0:	mov	r1, #0
   278b4:	add	sl, sp, #64	; 0x40
   278b8:	mov	r7, r1
   278bc:	ldr	r1, [r5, r1, lsl #2]
   278c0:	add	r1, r1, #1
   278c4:	str	r1, [r5, r7, lsl #2]
   278c8:	ldr	r4, [ip, r7, lsl #2]
   278cc:	sdiv	r6, r1, r4
   278d0:	mls	r1, r6, r4, r1
   278d4:	cmp	r1, #0
   278d8:	bne	27948 <GetDataSlab+0x550c>
   278dc:	mov	r1, #0
   278e0:	str	r1, [r5, r7, lsl #2]
   278e4:	add	r1, sl, r7, lsl #2
   278e8:	ldr	r1, [r1, #4]
   278ec:	sdiv	r4, r2, r1
   278f0:	mls	r4, r4, r1, r2
   278f4:	cmp	r4, #0
   278f8:	beq	27914 <GetDataSlab+0x54d8>
   278fc:	ldr	r6, [sl, r7, lsl #2]
   27900:	ldr	r3, [lr, r7, lsl #2]
   27904:	sub	r1, r1, r4
   27908:	mla	r1, r3, r6, r1
   2790c:	add	r2, r1, r2
   27910:	b	2792c <GetDataSlab+0x54f0>
   27914:	ldr	r1, [lr, r7, lsl #2]
   27918:	cmp	r1, #0
   2791c:	beq	27930 <GetDataSlab+0x54f4>
   27920:	ldr	r3, [sl, r7, lsl #2]
   27924:	mla	r2, r3, r1, r2
   27928:	mul	r1, r3, r1
   2792c:	add	r9, r9, r1, lsl #2
   27930:	add	r1, r7, #1
   27934:	add	r3, r7, #2
   27938:	ldr	r4, [fp, #24]
   2793c:	cmp	r3, r4
   27940:	blt	278b8 <GetDataSlab+0x547c>
   27944:	b	27958 <GetDataSlab+0x551c>
   27948:	ldr	r1, [sp, #52]	; 0x34
   2794c:	ldr	r1, [r1, r7, lsl #2]
   27950:	add	r9, r9, r1, lsl #2
   27954:	add	r2, r1, r2
   27958:	add	r8, r0, r8
   2795c:	mov	r0, #0
   27960:	ldr	r1, [sp, #44]	; 0x2c
   27964:	cmp	r8, r1
   27968:	ldr	r4, [fp, #20]
   2796c:	blt	27834 <GetDataSlab+0x53f8>
   27970:	b	22560 <GetDataSlab+0x124>
   27974:	ldr	lr, [lr]
   27978:	sub	r1, lr, #1
   2797c:	str	r1, [fp, #-72]	; 0xffffffb8
   27980:	ldr	r1, [r8]
   27984:	str	r1, [sp, #64]	; 0x40
   27988:	ldr	r0, [r4]
   2798c:	str	r0, [sp, #44]	; 0x2c
   27990:	mov	r2, #0
   27994:	ldr	r0, [fp, #24]
   27998:	cmp	r0, #2
   2799c:	blt	27a2c <GetDataSlab+0x55f0>
   279a0:	mov	r1, #1
   279a4:	mov	r2, #0
   279a8:	mov	r0, r8
   279ac:	ldr	r3, [fp, #16]
   279b0:	ldr	r7, [r3, r1, lsl #2]
   279b4:	sub	r7, r7, #1
   279b8:	str	r7, [ip, r1, lsl #2]
   279bc:	sub	r8, r1, #1
   279c0:	ldr	r3, [fp, #8]
   279c4:	ldr	r5, [r3, r8, lsl #2]
   279c8:	str	r5, [sl, r1, lsl #2]
   279cc:	mov	r4, #0
   279d0:	mov	r3, r0
   279d4:	ldr	r6, [r3, -r4, lsl #2]!
   279d8:	mul	r7, r7, r6
   279dc:	ldr	r3, [r3, #4]
   279e0:	mul	r5, r3, r5
   279e4:	add	r4, r4, #1
   279e8:	cmp	r1, r4
   279ec:	bne	279d0 <GetDataSlab+0x5594>
   279f0:	str	r5, [sl, r1, lsl #2]
   279f4:	str	r7, [ip, r1, lsl #2]
   279f8:	ldr	r3, [sl, r8, lsl #2]
   279fc:	ldr	r4, [r9, r1, lsl #2]
   27a00:	mla	r2, r4, r3, r2
   27a04:	ldr	r4, [fp, #20]
   27a08:	ldr	r3, [r4, r1, lsl #2]
   27a0c:	ldr	r5, [sp, #44]	; 0x2c
   27a10:	mul	r5, r3, r5
   27a14:	str	r5, [sp, #44]	; 0x2c
   27a18:	add	r0, r0, #4
   27a1c:	add	r1, r1, #1
   27a20:	ldr	r3, [fp, #24]
   27a24:	cmp	r1, r3
   27a28:	bne	279ac <GetDataSlab+0x5570>
   27a2c:	ldr	r0, [sp, #48]	; 0x30
   27a30:	add	r9, r0, r2, lsl #3
   27a34:	cmp	lr, #1
   27a38:	bne	32c20 <GetDataSlab+0x107e4>
   27a3c:	ldr	r0, [sp, #44]	; 0x2c
   27a40:	cmp	r0, #1
   27a44:	blt	3ae3c <GetDataSlab+0x18a00>
   27a48:	ldr	r0, [fp, #12]
   27a4c:	add	lr, r0, #4
   27a50:	mov	r0, ip
   27a54:	add	ip, r4, #4
   27a58:	add	r1, sp, #104	; 0x68
   27a5c:	orr	r5, r1, #4
   27a60:	orr	r0, r0, #4
   27a64:	str	r0, [sp, #52]	; 0x34
   27a68:	mov	r8, #0
   27a6c:	ldr	r0, [fp, #12]
   27a70:	ldr	r0, [r0]
   27a74:	mov	r1, r4
   27a78:	add	r4, r0, r2
   27a7c:	add	sl, r9, r0, lsl #3
   27a80:	ldr	r0, [r1]
   27a84:	cmp	r0, #1
   27a88:	blt	27ac0 <GetDataSlab+0x5684>
   27a8c:	ldr	r0, [sp, #60]	; 0x3c
   27a90:	add	r7, r0, r8
   27a94:	mov	r2, #0
   27a98:	mov	r3, sl
   27a9c:	vldr	d16, [r3]
   27aa0:	vcvt.s32.f64	s0, d16
   27aa4:	vmov	r0, s0
   27aa8:	strb	r0, [r7, r2]
   27aac:	add	r3, r3, #8
   27ab0:	add	r2, r2, #1
   27ab4:	ldr	r0, [r1]
   27ab8:	cmp	r2, r0
   27abc:	blt	27a9c <GetDataSlab+0x5660>
   27ac0:	ldr	r1, [fp, #12]
   27ac4:	ldr	r1, [r1]
   27ac8:	ldr	r2, [fp, #8]
   27acc:	ldr	r2, [r2]
   27ad0:	sub	r1, r2, r1
   27ad4:	add	r9, sl, r1, lsl #3
   27ad8:	add	r2, r4, r1
   27adc:	ldr	r1, [fp, #24]
   27ae0:	cmp	r1, #2
   27ae4:	blt	27b90 <GetDataSlab+0x5754>
   27ae8:	mov	r1, #0
   27aec:	add	sl, sp, #64	; 0x40
   27af0:	mov	r7, r1
   27af4:	ldr	r1, [r5, r1, lsl #2]
   27af8:	add	r1, r1, #1
   27afc:	str	r1, [r5, r7, lsl #2]
   27b00:	ldr	r4, [ip, r7, lsl #2]
   27b04:	sdiv	r6, r1, r4
   27b08:	mls	r1, r6, r4, r1
   27b0c:	cmp	r1, #0
   27b10:	bne	27b80 <GetDataSlab+0x5744>
   27b14:	mov	r1, #0
   27b18:	str	r1, [r5, r7, lsl #2]
   27b1c:	add	r1, sl, r7, lsl #2
   27b20:	ldr	r1, [r1, #4]
   27b24:	sdiv	r4, r2, r1
   27b28:	mls	r4, r4, r1, r2
   27b2c:	cmp	r4, #0
   27b30:	beq	27b4c <GetDataSlab+0x5710>
   27b34:	ldr	r6, [sl, r7, lsl #2]
   27b38:	ldr	r3, [lr, r7, lsl #2]
   27b3c:	sub	r1, r1, r4
   27b40:	mla	r1, r3, r6, r1
   27b44:	add	r2, r1, r2
   27b48:	b	27b64 <GetDataSlab+0x5728>
   27b4c:	ldr	r1, [lr, r7, lsl #2]
   27b50:	cmp	r1, #0
   27b54:	beq	27b68 <GetDataSlab+0x572c>
   27b58:	ldr	r3, [sl, r7, lsl #2]
   27b5c:	mla	r2, r3, r1, r2
   27b60:	mul	r1, r3, r1
   27b64:	add	r9, r9, r1, lsl #3
   27b68:	add	r1, r7, #1
   27b6c:	add	r3, r7, #2
   27b70:	ldr	r4, [fp, #24]
   27b74:	cmp	r3, r4
   27b78:	blt	27af0 <GetDataSlab+0x56b4>
   27b7c:	b	27b90 <GetDataSlab+0x5754>
   27b80:	ldr	r1, [sp, #52]	; 0x34
   27b84:	ldr	r1, [r1, r7, lsl #2]
   27b88:	add	r9, r9, r1, lsl #3
   27b8c:	add	r2, r1, r2
   27b90:	add	r8, r0, r8
   27b94:	mov	r0, #0
   27b98:	ldr	r1, [sp, #44]	; 0x2c
   27b9c:	cmp	r8, r1
   27ba0:	ldr	r4, [fp, #20]
   27ba4:	blt	27a6c <GetDataSlab+0x5630>
   27ba8:	b	22560 <GetDataSlab+0x124>
   27bac:	ldr	ip, [lr]
   27bb0:	sub	r1, ip, #1
   27bb4:	str	r1, [fp, #-72]	; 0xffffffb8
   27bb8:	ldr	r1, [r8]
   27bbc:	str	r1, [sp, #64]	; 0x40
   27bc0:	ldr	r0, [r4]
   27bc4:	str	r0, [sp, #44]	; 0x2c
   27bc8:	mov	r1, #0
   27bcc:	ldr	r0, [fp, #24]
   27bd0:	cmp	r0, #2
   27bd4:	blt	27c68 <GetDataSlab+0x582c>
   27bd8:	mov	r2, #1
   27bdc:	mov	r1, #0
   27be0:	mov	r0, r8
   27be4:	sub	r5, fp, #72	; 0x48
   27be8:	ldr	r7, [lr, r2, lsl #2]
   27bec:	sub	r7, r7, #1
   27bf0:	str	r7, [r5, r2, lsl #2]
   27bf4:	sub	lr, r2, #1
   27bf8:	ldr	r5, [r8, lr, lsl #2]
   27bfc:	str	r5, [sl, r2, lsl #2]
   27c00:	mov	r4, #0
   27c04:	mov	r3, r0
   27c08:	ldr	r6, [r3, -r4, lsl #2]!
   27c0c:	mul	r7, r7, r6
   27c10:	ldr	r3, [r3, #4]
   27c14:	mul	r5, r3, r5
   27c18:	add	r4, r4, #1
   27c1c:	cmp	r2, r4
   27c20:	bne	27c04 <GetDataSlab+0x57c8>
   27c24:	str	r5, [sl, r2, lsl #2]
   27c28:	sub	r5, fp, #72	; 0x48
   27c2c:	str	r7, [r5, r2, lsl #2]
   27c30:	ldr	r3, [sl, lr, lsl #2]
   27c34:	ldr	r7, [r9, r2, lsl #2]
   27c38:	mla	r1, r7, r3, r1
   27c3c:	ldr	r4, [fp, #20]
   27c40:	ldr	r3, [r4, r2, lsl #2]
   27c44:	ldr	r7, [sp, #44]	; 0x2c
   27c48:	mul	r7, r3, r7
   27c4c:	str	r7, [sp, #44]	; 0x2c
   27c50:	add	r0, r0, #4
   27c54:	add	r2, r2, #1
   27c58:	ldr	r3, [fp, #24]
   27c5c:	cmp	r2, r3
   27c60:	ldr	lr, [fp, #16]
   27c64:	bne	27be8 <GetDataSlab+0x57ac>
   27c68:	ldr	r0, [sp, #48]	; 0x30
   27c6c:	add	r8, r0, r1, lsl #3
   27c70:	cmp	ip, #1
   27c74:	bne	32db0 <GetDataSlab+0x10974>
   27c78:	ldr	r0, [sp, #44]	; 0x2c
   27c7c:	cmp	r0, #1
   27c80:	sub	r0, fp, #72	; 0x48
   27c84:	blt	32f38 <GetDataSlab+0x10afc>
   27c88:	add	sl, r9, #4
   27c8c:	add	lr, r4, #4
   27c90:	add	r2, sp, #104	; 0x68
   27c94:	orr	r5, r2, #4
   27c98:	orr	r0, r0, #4
   27c9c:	str	r0, [sp, #40]	; 0x28
   27ca0:	mov	ip, #0
   27ca4:	ldr	r0, [r9]
   27ca8:	add	r9, r0, r1
   27cac:	add	r2, r8, r0, lsl #3
   27cb0:	ldr	r0, [r4]
   27cb4:	cmp	r0, #1
   27cb8:	blt	27ce4 <GetDataSlab+0x58a8>
   27cbc:	ldr	r0, [sp, #60]	; 0x3c
   27cc0:	add	r7, r0, ip
   27cc4:	mov	r1, #0
   27cc8:	mov	r3, r2
   27ccc:	ldrb	r0, [r3], #8
   27cd0:	strb	r0, [r7, r1]
   27cd4:	add	r1, r1, #1
   27cd8:	ldr	r0, [r4]
   27cdc:	cmp	r1, r0
   27ce0:	blt	27ccc <GetDataSlab+0x5890>
   27ce4:	ldr	r1, [fp, #12]
   27ce8:	ldr	r1, [r1]
   27cec:	ldr	r3, [fp, #8]
   27cf0:	ldr	r3, [r3]
   27cf4:	sub	r1, r3, r1
   27cf8:	add	r8, r2, r1, lsl #3
   27cfc:	add	r1, r9, r1
   27d00:	ldr	r2, [fp, #24]
   27d04:	cmp	r2, #2
   27d08:	blt	27dac <GetDataSlab+0x5970>
   27d0c:	mov	r3, #0
   27d10:	ldr	r9, [fp, #12]
   27d14:	mov	r7, r3
   27d18:	ldr	r3, [r5, r3, lsl #2]
   27d1c:	add	r3, r3, #1
   27d20:	str	r3, [r5, r7, lsl #2]
   27d24:	ldr	r4, [lr, r7, lsl #2]
   27d28:	sdiv	r6, r3, r4
   27d2c:	mls	r3, r6, r4, r3
   27d30:	cmp	r3, #0
   27d34:	bne	27db4 <GetDataSlab+0x5978>
   27d38:	mov	r2, #0
   27d3c:	str	r2, [r5, r7, lsl #2]
   27d40:	add	r2, sp, #64	; 0x40
   27d44:	add	r3, r2, r7, lsl #2
   27d48:	ldr	r3, [r3, #4]
   27d4c:	sdiv	r4, r1, r3
   27d50:	mls	r4, r4, r3, r1
   27d54:	cmp	r4, #0
   27d58:	beq	27d74 <GetDataSlab+0x5938>
   27d5c:	ldr	r6, [r2, r7, lsl #2]
   27d60:	ldr	r2, [sl, r7, lsl #2]
   27d64:	sub	r3, r3, r4
   27d68:	mla	r2, r2, r6, r3
   27d6c:	add	r1, r2, r1
   27d70:	b	27d90 <GetDataSlab+0x5954>
   27d74:	ldr	r3, [sl, r7, lsl #2]
   27d78:	cmp	r3, #0
   27d7c:	beq	27d94 <GetDataSlab+0x5958>
   27d80:	add	r2, sp, #64	; 0x40
   27d84:	ldr	r2, [r2, r7, lsl #2]
   27d88:	mla	r1, r2, r3, r1
   27d8c:	mul	r2, r2, r3
   27d90:	add	r8, r8, r2, lsl #3
   27d94:	add	r3, r7, #1
   27d98:	add	r2, r7, #2
   27d9c:	ldr	r4, [fp, #24]
   27da0:	cmp	r2, r4
   27da4:	blt	27d14 <GetDataSlab+0x58d8>
   27da8:	b	27dc4 <GetDataSlab+0x5988>
   27dac:	ldr	r9, [fp, #12]
   27db0:	b	27dc4 <GetDataSlab+0x5988>
   27db4:	ldr	r2, [sp, #40]	; 0x28
   27db8:	ldr	r2, [r2, r7, lsl #2]
   27dbc:	add	r8, r8, r2, lsl #3
   27dc0:	add	r1, r2, r1
   27dc4:	add	ip, r0, ip
   27dc8:	ldr	r0, [sp, #44]	; 0x2c
   27dcc:	cmp	ip, r0
   27dd0:	ldr	r4, [fp, #20]
   27dd4:	blt	27ca4 <GetDataSlab+0x5868>
   27dd8:	mov	r0, #0
   27ddc:	ldr	lr, [fp, #16]
   27de0:	b	32f3c <GetDataSlab+0x10b00>
   27de4:	ldr	lr, [lr]
   27de8:	sub	r1, lr, #1
   27dec:	str	r1, [fp, #-72]	; 0xffffffb8
   27df0:	ldr	r1, [r8]
   27df4:	str	r1, [sp, #64]	; 0x40
   27df8:	ldr	r0, [r4]
   27dfc:	str	r0, [sp, #44]	; 0x2c
   27e00:	mov	r2, #0
   27e04:	ldr	r0, [fp, #24]
   27e08:	cmp	r0, #2
   27e0c:	blt	27e9c <GetDataSlab+0x5a60>
   27e10:	mov	r1, #1
   27e14:	mov	r2, #0
   27e18:	mov	r0, r8
   27e1c:	ldr	r3, [fp, #16]
   27e20:	ldr	r7, [r3, r1, lsl #2]
   27e24:	sub	r7, r7, #1
   27e28:	str	r7, [ip, r1, lsl #2]
   27e2c:	sub	r8, r1, #1
   27e30:	ldr	r3, [fp, #8]
   27e34:	ldr	r5, [r3, r8, lsl #2]
   27e38:	str	r5, [sl, r1, lsl #2]
   27e3c:	mov	r4, #0
   27e40:	mov	r3, r0
   27e44:	ldr	r6, [r3, -r4, lsl #2]!
   27e48:	mul	r7, r7, r6
   27e4c:	ldr	r3, [r3, #4]
   27e50:	mul	r5, r3, r5
   27e54:	add	r4, r4, #1
   27e58:	cmp	r1, r4
   27e5c:	bne	27e40 <GetDataSlab+0x5a04>
   27e60:	str	r5, [sl, r1, lsl #2]
   27e64:	str	r7, [ip, r1, lsl #2]
   27e68:	ldr	r3, [sl, r8, lsl #2]
   27e6c:	ldr	r4, [r9, r1, lsl #2]
   27e70:	mla	r2, r4, r3, r2
   27e74:	ldr	r4, [fp, #20]
   27e78:	ldr	r3, [r4, r1, lsl #2]
   27e7c:	ldr	r5, [sp, #44]	; 0x2c
   27e80:	mul	r5, r3, r5
   27e84:	str	r5, [sp, #44]	; 0x2c
   27e88:	add	r0, r0, #4
   27e8c:	add	r1, r1, #1
   27e90:	ldr	r3, [fp, #24]
   27e94:	cmp	r1, r3
   27e98:	bne	27e1c <GetDataSlab+0x59e0>
   27e9c:	ldr	r0, [sp, #48]	; 0x30
   27ea0:	add	ip, r0, r2
   27ea4:	cmp	lr, #1
   27ea8:	bne	3301c <GetDataSlab+0x10be0>
   27eac:	ldr	r0, [sp, #44]	; 0x2c
   27eb0:	cmp	r0, #1
   27eb4:	blt	3ae3c <GetDataSlab+0x18a00>
   27eb8:	add	r9, r9, #4
   27ebc:	add	r8, r4, #4
   27ec0:	add	r0, sp, #104	; 0x68
   27ec4:	orr	r5, r0, #4
   27ec8:	sub	r0, fp, #72	; 0x48
   27ecc:	orr	r0, r0, #4
   27ed0:	str	r0, [sp, #52]	; 0x34
   27ed4:	mov	sl, #0
   27ed8:	ldr	r0, [fp, #12]
   27edc:	ldr	r0, [r0]
   27ee0:	add	r2, r0, r2
   27ee4:	add	r3, ip, r0
   27ee8:	ldr	r0, [r4]
   27eec:	cmp	r0, #1
   27ef0:	blt	27f18 <GetDataSlab+0x5adc>
   27ef4:	ldr	r0, [sp, #60]	; 0x3c
   27ef8:	add	r1, r0, sl
   27efc:	mov	r7, #0
   27f00:	ldrb	r0, [r3, r7]
   27f04:	strb	r0, [r1, r7]
   27f08:	add	r7, r7, #1
   27f0c:	ldr	r0, [r4]
   27f10:	cmp	r7, r0
   27f14:	blt	27f00 <GetDataSlab+0x5ac4>
   27f18:	ldr	r1, [fp, #12]
   27f1c:	ldr	r1, [r1]
   27f20:	ldr	r7, [fp, #8]
   27f24:	ldr	r4, [r7]
   27f28:	sub	r1, r4, r1
   27f2c:	add	ip, r3, r1
   27f30:	add	r2, r2, r1
   27f34:	ldr	r1, [fp, #24]
   27f38:	cmp	r1, #2
   27f3c:	blt	27fe8 <GetDataSlab+0x5bac>
   27f40:	mov	r1, #0
   27f44:	mov	r7, r1
   27f48:	ldr	r1, [r5, r1, lsl #2]
   27f4c:	add	r1, r1, #1
   27f50:	str	r1, [r5, r7, lsl #2]
   27f54:	ldr	r4, [r8, r7, lsl #2]
   27f58:	sdiv	lr, r1, r4
   27f5c:	mls	r1, lr, r4, r1
   27f60:	cmp	r1, #0
   27f64:	bne	27fd8 <GetDataSlab+0x5b9c>
   27f68:	mov	r1, #0
   27f6c:	str	r1, [r5, r7, lsl #2]
   27f70:	add	r3, sp, #64	; 0x40
   27f74:	add	r1, r3, r7, lsl #2
   27f78:	ldr	r1, [r1, #4]
   27f7c:	sdiv	r4, r2, r1
   27f80:	mls	r4, r4, r1, r2
   27f84:	cmp	r4, #0
   27f88:	beq	27fa8 <GetDataSlab+0x5b6c>
   27f8c:	ldr	r6, [r3, r7, lsl #2]
   27f90:	ldr	r3, [r9, r7, lsl #2]
   27f94:	sub	r1, r1, r4
   27f98:	mla	r1, r3, r6, r1
   27f9c:	add	r2, r1, r2
   27fa0:	add	ip, ip, r1
   27fa4:	b	27fc0 <GetDataSlab+0x5b84>
   27fa8:	ldr	r1, [r9, r7, lsl #2]
   27fac:	cmp	r1, #0
   27fb0:	addne	r3, sp, #64	; 0x40
   27fb4:	ldrne	r3, [r3, r7, lsl #2]
   27fb8:	mlane	r2, r3, r1, r2
   27fbc:	mlane	ip, r3, r1, ip
   27fc0:	add	r1, r7, #1
   27fc4:	add	r3, r7, #2
   27fc8:	ldr	r7, [fp, #24]
   27fcc:	cmp	r3, r7
   27fd0:	blt	27f44 <GetDataSlab+0x5b08>
   27fd4:	b	27fe8 <GetDataSlab+0x5bac>
   27fd8:	ldr	r1, [sp, #52]	; 0x34
   27fdc:	ldr	r1, [r1, r7, lsl #2]
   27fe0:	add	ip, ip, r1
   27fe4:	add	r2, r1, r2
   27fe8:	add	sl, r0, sl
   27fec:	mov	r0, #0
   27ff0:	ldr	r1, [sp, #44]	; 0x2c
   27ff4:	cmp	sl, r1
   27ff8:	ldr	r4, [fp, #20]
   27ffc:	blt	27ed8 <GetDataSlab+0x5a9c>
   28000:	b	22560 <GetDataSlab+0x124>
   28004:	ldr	lr, [lr]
   28008:	sub	r1, lr, #1
   2800c:	str	r1, [fp, #-72]	; 0xffffffb8
   28010:	ldr	r1, [r8]
   28014:	str	r1, [sp, #64]	; 0x40
   28018:	ldr	r0, [r4]
   2801c:	str	r0, [sp, #44]	; 0x2c
   28020:	mov	r2, #0
   28024:	ldr	r0, [fp, #24]
   28028:	cmp	r0, #2
   2802c:	blt	280bc <GetDataSlab+0x5c80>
   28030:	mov	r1, #1
   28034:	mov	r2, #0
   28038:	mov	r0, r8
   2803c:	ldr	r3, [fp, #16]
   28040:	ldr	r7, [r3, r1, lsl #2]
   28044:	sub	r7, r7, #1
   28048:	str	r7, [ip, r1, lsl #2]
   2804c:	sub	r8, r1, #1
   28050:	ldr	r3, [fp, #8]
   28054:	ldr	r5, [r3, r8, lsl #2]
   28058:	str	r5, [sl, r1, lsl #2]
   2805c:	mov	r4, #0
   28060:	mov	r3, r0
   28064:	ldr	r6, [r3, -r4, lsl #2]!
   28068:	mul	r7, r7, r6
   2806c:	ldr	r3, [r3, #4]
   28070:	mul	r5, r3, r5
   28074:	add	r4, r4, #1
   28078:	cmp	r1, r4
   2807c:	bne	28060 <GetDataSlab+0x5c24>
   28080:	str	r5, [sl, r1, lsl #2]
   28084:	str	r7, [ip, r1, lsl #2]
   28088:	ldr	r3, [sl, r8, lsl #2]
   2808c:	ldr	r4, [r9, r1, lsl #2]
   28090:	mla	r2, r4, r3, r2
   28094:	ldr	r4, [fp, #20]
   28098:	ldr	r3, [r4, r1, lsl #2]
   2809c:	ldr	r5, [sp, #44]	; 0x2c
   280a0:	mul	r5, r3, r5
   280a4:	str	r5, [sp, #44]	; 0x2c
   280a8:	add	r0, r0, #4
   280ac:	add	r1, r1, #1
   280b0:	ldr	r3, [fp, #24]
   280b4:	cmp	r1, r3
   280b8:	bne	2803c <GetDataSlab+0x5c00>
   280bc:	ldr	r0, [sp, #48]	; 0x30
   280c0:	add	ip, r0, r2, lsl #1
   280c4:	cmp	lr, #1
   280c8:	bne	3319c <GetDataSlab+0x10d60>
   280cc:	ldr	r0, [sp, #44]	; 0x2c
   280d0:	cmp	r0, #1
   280d4:	blt	3ae3c <GetDataSlab+0x18a00>
   280d8:	add	sl, r9, #4
   280dc:	add	r8, r4, #4
   280e0:	add	r0, sp, #104	; 0x68
   280e4:	orr	r5, r0, #4
   280e8:	sub	r0, fp, #72	; 0x48
   280ec:	orr	r0, r0, #4
   280f0:	str	r0, [sp, #52]	; 0x34
   280f4:	mov	lr, #0
   280f8:	ldr	r0, [fp, #12]
   280fc:	ldr	r0, [r0]
   28100:	add	r9, r0, r2
   28104:	add	r3, ip, r0, lsl #1
   28108:	ldr	r0, [r4]
   2810c:	cmp	r0, #1
   28110:	blt	2813c <GetDataSlab+0x5d00>
   28114:	ldr	r0, [sp, #60]	; 0x3c
   28118:	add	r7, r0, lr
   2811c:	mov	r2, #0
   28120:	mov	r1, r3
   28124:	ldrb	r0, [r1], #2
   28128:	strb	r0, [r7, r2]
   2812c:	add	r2, r2, #1
   28130:	ldr	r0, [r4]
   28134:	cmp	r2, r0
   28138:	blt	28124 <GetDataSlab+0x5ce8>
   2813c:	ldr	r1, [fp, #12]
   28140:	ldr	r1, [r1]
   28144:	ldr	r2, [fp, #8]
   28148:	ldr	r2, [r2]
   2814c:	sub	r1, r2, r1
   28150:	add	ip, r3, r1, lsl #1
   28154:	add	r2, r9, r1
   28158:	ldr	r1, [fp, #24]
   2815c:	cmp	r1, #2
   28160:	blt	28210 <GetDataSlab+0x5dd4>
   28164:	mov	r1, #0
   28168:	mov	r9, #0
   2816c:	mov	r7, r1
   28170:	ldr	r1, [r5, r1, lsl #2]
   28174:	add	r1, r1, #1
   28178:	str	r1, [r5, r7, lsl #2]
   2817c:	ldr	r4, [r8, r7, lsl #2]
   28180:	sdiv	r6, r1, r4
   28184:	mls	r1, r6, r4, r1
   28188:	cmp	r1, #0
   2818c:	bne	28200 <GetDataSlab+0x5dc4>
   28190:	str	r9, [r5, r7, lsl #2]
   28194:	add	r3, sp, #64	; 0x40
   28198:	add	r1, r3, r7, lsl #2
   2819c:	ldr	r1, [r1, #4]
   281a0:	sdiv	r4, r2, r1
   281a4:	mls	r4, r4, r1, r2
   281a8:	cmp	r4, #0
   281ac:	beq	281c8 <GetDataSlab+0x5d8c>
   281b0:	ldr	r6, [r3, r7, lsl #2]
   281b4:	ldr	r3, [sl, r7, lsl #2]
   281b8:	sub	r1, r1, r4
   281bc:	mla	r1, r3, r6, r1
   281c0:	add	r2, r1, r2
   281c4:	b	281e4 <GetDataSlab+0x5da8>
   281c8:	ldr	r1, [sl, r7, lsl #2]
   281cc:	cmp	r1, #0
   281d0:	beq	281e8 <GetDataSlab+0x5dac>
   281d4:	add	r3, sp, #64	; 0x40
   281d8:	ldr	r3, [r3, r7, lsl #2]
   281dc:	mla	r2, r3, r1, r2
   281e0:	mul	r1, r3, r1
   281e4:	add	ip, ip, r1, lsl #1
   281e8:	add	r1, r7, #1
   281ec:	add	r3, r7, #2
   281f0:	ldr	r4, [fp, #24]
   281f4:	cmp	r3, r4
   281f8:	blt	2816c <GetDataSlab+0x5d30>
   281fc:	b	28210 <GetDataSlab+0x5dd4>
   28200:	ldr	r1, [sp, #52]	; 0x34
   28204:	ldr	r1, [r1, r7, lsl #2]
   28208:	add	ip, ip, r1, lsl #1
   2820c:	add	r2, r1, r2
   28210:	add	lr, r0, lr
   28214:	mov	r0, #0
   28218:	ldr	r1, [sp, #44]	; 0x2c
   2821c:	cmp	lr, r1
   28220:	ldr	r4, [fp, #20]
   28224:	blt	280f8 <GetDataSlab+0x5cbc>
   28228:	b	22560 <GetDataSlab+0x124>
   2822c:	ldr	lr, [lr]
   28230:	sub	r1, lr, #1
   28234:	str	r1, [fp, #-72]	; 0xffffffb8
   28238:	ldr	r1, [r8]
   2823c:	str	r1, [sp, #64]	; 0x40
   28240:	ldr	r0, [r4]
   28244:	str	r0, [sp, #44]	; 0x2c
   28248:	mov	r2, #0
   2824c:	ldr	r0, [fp, #24]
   28250:	cmp	r0, #2
   28254:	blt	282e4 <GetDataSlab+0x5ea8>
   28258:	mov	r1, #1
   2825c:	mov	r2, #0
   28260:	mov	r0, r8
   28264:	ldr	r3, [fp, #16]
   28268:	ldr	r7, [r3, r1, lsl #2]
   2826c:	sub	r7, r7, #1
   28270:	str	r7, [ip, r1, lsl #2]
   28274:	sub	r8, r1, #1
   28278:	ldr	r3, [fp, #8]
   2827c:	ldr	r5, [r3, r8, lsl #2]
   28280:	str	r5, [sl, r1, lsl #2]
   28284:	mov	r4, #0
   28288:	mov	r3, r0
   2828c:	ldr	r6, [r3, -r4, lsl #2]!
   28290:	mul	r7, r7, r6
   28294:	ldr	r3, [r3, #4]
   28298:	mul	r5, r3, r5
   2829c:	add	r4, r4, #1
   282a0:	cmp	r1, r4
   282a4:	bne	28288 <GetDataSlab+0x5e4c>
   282a8:	str	r5, [sl, r1, lsl #2]
   282ac:	str	r7, [ip, r1, lsl #2]
   282b0:	ldr	r3, [sl, r8, lsl #2]
   282b4:	ldr	r4, [r9, r1, lsl #2]
   282b8:	mla	r2, r4, r3, r2
   282bc:	ldr	r4, [fp, #20]
   282c0:	ldr	r3, [r4, r1, lsl #2]
   282c4:	ldr	r5, [sp, #44]	; 0x2c
   282c8:	mul	r5, r3, r5
   282cc:	str	r5, [sp, #44]	; 0x2c
   282d0:	add	r0, r0, #4
   282d4:	add	r1, r1, #1
   282d8:	ldr	r3, [fp, #24]
   282dc:	cmp	r1, r3
   282e0:	bne	28264 <GetDataSlab+0x5e28>
   282e4:	ldr	r0, [sp, #48]	; 0x30
   282e8:	add	ip, r0, r2, lsl #1
   282ec:	cmp	lr, #1
   282f0:	bne	33320 <GetDataSlab+0x10ee4>
   282f4:	ldr	r0, [sp, #44]	; 0x2c
   282f8:	cmp	r0, #1
   282fc:	blt	3ae3c <GetDataSlab+0x18a00>
   28300:	add	sl, r9, #4
   28304:	add	r8, r4, #4
   28308:	add	r0, sp, #104	; 0x68
   2830c:	orr	r5, r0, #4
   28310:	sub	r0, fp, #72	; 0x48
   28314:	orr	r0, r0, #4
   28318:	str	r0, [sp, #52]	; 0x34
   2831c:	mov	lr, #0
   28320:	ldr	r0, [fp, #12]
   28324:	ldr	r0, [r0]
   28328:	add	r9, r0, r2
   2832c:	add	r3, ip, r0, lsl #1
   28330:	ldr	r0, [r4]
   28334:	cmp	r0, #1
   28338:	blt	28364 <GetDataSlab+0x5f28>
   2833c:	ldr	r0, [sp, #60]	; 0x3c
   28340:	add	r7, r0, lr
   28344:	mov	r2, #0
   28348:	mov	r1, r3
   2834c:	ldrb	r0, [r1], #2
   28350:	strb	r0, [r7, r2]
   28354:	add	r2, r2, #1
   28358:	ldr	r0, [r4]
   2835c:	cmp	r2, r0
   28360:	blt	2834c <GetDataSlab+0x5f10>
   28364:	ldr	r1, [fp, #12]
   28368:	ldr	r1, [r1]
   2836c:	ldr	r2, [fp, #8]
   28370:	ldr	r2, [r2]
   28374:	sub	r1, r2, r1
   28378:	add	ip, r3, r1, lsl #1
   2837c:	add	r2, r9, r1
   28380:	ldr	r1, [fp, #24]
   28384:	cmp	r1, #2
   28388:	blt	28438 <GetDataSlab+0x5ffc>
   2838c:	mov	r1, #0
   28390:	mov	r9, #0
   28394:	mov	r7, r1
   28398:	ldr	r1, [r5, r1, lsl #2]
   2839c:	add	r1, r1, #1
   283a0:	str	r1, [r5, r7, lsl #2]
   283a4:	ldr	r4, [r8, r7, lsl #2]
   283a8:	sdiv	r6, r1, r4
   283ac:	mls	r1, r6, r4, r1
   283b0:	cmp	r1, #0
   283b4:	bne	28428 <GetDataSlab+0x5fec>
   283b8:	str	r9, [r5, r7, lsl #2]
   283bc:	add	r3, sp, #64	; 0x40
   283c0:	add	r1, r3, r7, lsl #2
   283c4:	ldr	r1, [r1, #4]
   283c8:	sdiv	r4, r2, r1
   283cc:	mls	r4, r4, r1, r2
   283d0:	cmp	r4, #0
   283d4:	beq	283f0 <GetDataSlab+0x5fb4>
   283d8:	ldr	r6, [r3, r7, lsl #2]
   283dc:	ldr	r3, [sl, r7, lsl #2]
   283e0:	sub	r1, r1, r4
   283e4:	mla	r1, r3, r6, r1
   283e8:	add	r2, r1, r2
   283ec:	b	2840c <GetDataSlab+0x5fd0>
   283f0:	ldr	r1, [sl, r7, lsl #2]
   283f4:	cmp	r1, #0
   283f8:	beq	28410 <GetDataSlab+0x5fd4>
   283fc:	add	r3, sp, #64	; 0x40
   28400:	ldr	r3, [r3, r7, lsl #2]
   28404:	mla	r2, r3, r1, r2
   28408:	mul	r1, r3, r1
   2840c:	add	ip, ip, r1, lsl #1
   28410:	add	r1, r7, #1
   28414:	add	r3, r7, #2
   28418:	ldr	r4, [fp, #24]
   2841c:	cmp	r3, r4
   28420:	blt	28394 <GetDataSlab+0x5f58>
   28424:	b	28438 <GetDataSlab+0x5ffc>
   28428:	ldr	r1, [sp, #52]	; 0x34
   2842c:	ldr	r1, [r1, r7, lsl #2]
   28430:	add	ip, ip, r1, lsl #1
   28434:	add	r2, r1, r2
   28438:	add	lr, r0, lr
   2843c:	mov	r0, #0
   28440:	ldr	r1, [sp, #44]	; 0x2c
   28444:	cmp	lr, r1
   28448:	ldr	r4, [fp, #20]
   2844c:	blt	28320 <GetDataSlab+0x5ee4>
   28450:	b	22560 <GetDataSlab+0x124>
   28454:	ldr	lr, [lr]
   28458:	sub	r1, lr, #1
   2845c:	str	r1, [fp, #-72]	; 0xffffffb8
   28460:	ldr	r1, [r8]
   28464:	str	r1, [sp, #64]	; 0x40
   28468:	ldr	r0, [r4]
   2846c:	str	r0, [sp, #44]	; 0x2c
   28470:	mov	r2, #0
   28474:	ldr	r0, [fp, #24]
   28478:	cmp	r0, #2
   2847c:	blt	2850c <GetDataSlab+0x60d0>
   28480:	mov	r1, #1
   28484:	mov	r2, #0
   28488:	mov	r0, r8
   2848c:	ldr	r3, [fp, #16]
   28490:	ldr	r7, [r3, r1, lsl #2]
   28494:	sub	r7, r7, #1
   28498:	str	r7, [ip, r1, lsl #2]
   2849c:	sub	r8, r1, #1
   284a0:	ldr	r3, [fp, #8]
   284a4:	ldr	r5, [r3, r8, lsl #2]
   284a8:	str	r5, [sl, r1, lsl #2]
   284ac:	mov	r4, #0
   284b0:	mov	r3, r0
   284b4:	ldr	r6, [r3, -r4, lsl #2]!
   284b8:	mul	r7, r7, r6
   284bc:	ldr	r3, [r3, #4]
   284c0:	mul	r5, r3, r5
   284c4:	add	r4, r4, #1
   284c8:	cmp	r1, r4
   284cc:	bne	284b0 <GetDataSlab+0x6074>
   284d0:	str	r5, [sl, r1, lsl #2]
   284d4:	str	r7, [ip, r1, lsl #2]
   284d8:	ldr	r3, [sl, r8, lsl #2]
   284dc:	ldr	r4, [r9, r1, lsl #2]
   284e0:	mla	r2, r4, r3, r2
   284e4:	ldr	r4, [fp, #20]
   284e8:	ldr	r3, [r4, r1, lsl #2]
   284ec:	ldr	r5, [sp, #44]	; 0x2c
   284f0:	mul	r5, r3, r5
   284f4:	str	r5, [sp, #44]	; 0x2c
   284f8:	add	r0, r0, #4
   284fc:	add	r1, r1, #1
   28500:	ldr	r3, [fp, #24]
   28504:	cmp	r1, r3
   28508:	bne	2848c <GetDataSlab+0x6050>
   2850c:	ldr	r0, [sp, #48]	; 0x30
   28510:	add	ip, r0, r2, lsl #2
   28514:	cmp	lr, #1
   28518:	bne	334a4 <GetDataSlab+0x11068>
   2851c:	ldr	r0, [sp, #44]	; 0x2c
   28520:	cmp	r0, #1
   28524:	blt	3ae3c <GetDataSlab+0x18a00>
   28528:	add	r9, r9, #4
   2852c:	add	r8, r4, #4
   28530:	add	r0, sp, #104	; 0x68
   28534:	orr	r5, r0, #4
   28538:	sub	r0, fp, #72	; 0x48
   2853c:	orr	r0, r0, #4
   28540:	str	r0, [sp, #52]	; 0x34
   28544:	mov	sl, #0
   28548:	ldr	r0, [fp, #12]
   2854c:	ldr	r0, [r0]
   28550:	add	r2, r0, r2
   28554:	add	r3, ip, r0, lsl #2
   28558:	ldr	r0, [r4]
   2855c:	cmp	r0, #1
   28560:	blt	28588 <GetDataSlab+0x614c>
   28564:	ldr	r0, [sp, #60]	; 0x3c
   28568:	add	r1, r0, sl
   2856c:	mov	r7, #0
   28570:	ldr	r0, [r3, r7, lsl #2]
   28574:	strb	r0, [r1, r7]
   28578:	add	r7, r7, #1
   2857c:	ldr	r0, [r4]
   28580:	cmp	r7, r0
   28584:	blt	28570 <GetDataSlab+0x6134>
   28588:	ldr	r1, [fp, #12]
   2858c:	ldr	r1, [r1]
   28590:	ldr	r7, [fp, #8]
   28594:	ldr	r4, [r7]
   28598:	sub	r1, r4, r1
   2859c:	add	ip, r3, r1, lsl #2
   285a0:	add	r2, r2, r1
   285a4:	ldr	r1, [fp, #24]
   285a8:	cmp	r1, #2
   285ac:	blt	2865c <GetDataSlab+0x6220>
   285b0:	mov	r1, #0
   285b4:	mov	r7, r1
   285b8:	ldr	r1, [r5, r1, lsl #2]
   285bc:	add	r1, r1, #1
   285c0:	str	r1, [r5, r7, lsl #2]
   285c4:	ldr	r4, [r8, r7, lsl #2]
   285c8:	sdiv	lr, r1, r4
   285cc:	mls	r1, lr, r4, r1
   285d0:	cmp	r1, #0
   285d4:	bne	2864c <GetDataSlab+0x6210>
   285d8:	mov	r1, #0
   285dc:	str	r1, [r5, r7, lsl #2]
   285e0:	add	r3, sp, #64	; 0x40
   285e4:	add	r1, r3, r7, lsl #2
   285e8:	ldr	r1, [r1, #4]
   285ec:	sdiv	r4, r2, r1
   285f0:	mls	r4, r4, r1, r2
   285f4:	cmp	r4, #0
   285f8:	beq	28614 <GetDataSlab+0x61d8>
   285fc:	ldr	r6, [r3, r7, lsl #2]
   28600:	ldr	r3, [r9, r7, lsl #2]
   28604:	sub	r1, r1, r4
   28608:	mla	r1, r3, r6, r1
   2860c:	add	r2, r1, r2
   28610:	b	28630 <GetDataSlab+0x61f4>
   28614:	ldr	r1, [r9, r7, lsl #2]
   28618:	cmp	r1, #0
   2861c:	beq	28634 <GetDataSlab+0x61f8>
   28620:	add	r3, sp, #64	; 0x40
   28624:	ldr	r3, [r3, r7, lsl #2]
   28628:	mla	r2, r3, r1, r2
   2862c:	mul	r1, r3, r1
   28630:	add	ip, ip, r1, lsl #2
   28634:	add	r1, r7, #1
   28638:	add	r3, r7, #2
   2863c:	ldr	r7, [fp, #24]
   28640:	cmp	r3, r7
   28644:	blt	285b4 <GetDataSlab+0x6178>
   28648:	b	2865c <GetDataSlab+0x6220>
   2864c:	ldr	r1, [sp, #52]	; 0x34
   28650:	ldr	r1, [r1, r7, lsl #2]
   28654:	add	ip, ip, r1, lsl #2
   28658:	add	r2, r1, r2
   2865c:	add	sl, r0, sl
   28660:	mov	r0, #0
   28664:	ldr	r1, [sp, #44]	; 0x2c
   28668:	cmp	sl, r1
   2866c:	ldr	r4, [fp, #20]
   28670:	blt	28548 <GetDataSlab+0x610c>
   28674:	b	22560 <GetDataSlab+0x124>
   28678:	ldr	lr, [lr]
   2867c:	sub	r1, lr, #1
   28680:	str	r1, [fp, #-72]	; 0xffffffb8
   28684:	ldr	r1, [r8]
   28688:	str	r1, [sp, #64]	; 0x40
   2868c:	ldr	r0, [r4]
   28690:	str	r0, [sp, #44]	; 0x2c
   28694:	mov	r2, #0
   28698:	ldr	r0, [fp, #24]
   2869c:	cmp	r0, #2
   286a0:	blt	28730 <GetDataSlab+0x62f4>
   286a4:	mov	r1, #1
   286a8:	mov	r2, #0
   286ac:	mov	r0, r8
   286b0:	ldr	r3, [fp, #16]
   286b4:	ldr	r7, [r3, r1, lsl #2]
   286b8:	sub	r7, r7, #1
   286bc:	str	r7, [ip, r1, lsl #2]
   286c0:	sub	r8, r1, #1
   286c4:	ldr	r3, [fp, #8]
   286c8:	ldr	r5, [r3, r8, lsl #2]
   286cc:	str	r5, [sl, r1, lsl #2]
   286d0:	mov	r4, #0
   286d4:	mov	r3, r0
   286d8:	ldr	r6, [r3, -r4, lsl #2]!
   286dc:	mul	r7, r7, r6
   286e0:	ldr	r3, [r3, #4]
   286e4:	mul	r5, r3, r5
   286e8:	add	r4, r4, #1
   286ec:	cmp	r1, r4
   286f0:	bne	286d4 <GetDataSlab+0x6298>
   286f4:	str	r5, [sl, r1, lsl #2]
   286f8:	str	r7, [ip, r1, lsl #2]
   286fc:	ldr	r3, [sl, r8, lsl #2]
   28700:	ldr	r4, [r9, r1, lsl #2]
   28704:	mla	r2, r4, r3, r2
   28708:	ldr	r4, [fp, #20]
   2870c:	ldr	r3, [r4, r1, lsl #2]
   28710:	ldr	r5, [sp, #44]	; 0x2c
   28714:	mul	r5, r3, r5
   28718:	str	r5, [sp, #44]	; 0x2c
   2871c:	add	r0, r0, #4
   28720:	add	r1, r1, #1
   28724:	ldr	r3, [fp, #24]
   28728:	cmp	r1, r3
   2872c:	bne	286b0 <GetDataSlab+0x6274>
   28730:	ldr	r0, [sp, #48]	; 0x30
   28734:	add	ip, r0, r2, lsl #2
   28738:	cmp	lr, #1
   2873c:	bne	33628 <GetDataSlab+0x111ec>
   28740:	ldr	r0, [sp, #44]	; 0x2c
   28744:	cmp	r0, #1
   28748:	blt	3ae3c <GetDataSlab+0x18a00>
   2874c:	add	r9, r9, #4
   28750:	add	r8, r4, #4
   28754:	add	r0, sp, #104	; 0x68
   28758:	orr	r5, r0, #4
   2875c:	sub	r0, fp, #72	; 0x48
   28760:	orr	r0, r0, #4
   28764:	str	r0, [sp, #52]	; 0x34
   28768:	mov	sl, #0
   2876c:	ldr	r0, [fp, #12]
   28770:	ldr	r0, [r0]
   28774:	add	r2, r0, r2
   28778:	add	r3, ip, r0, lsl #2
   2877c:	ldr	r0, [r4]
   28780:	cmp	r0, #1
   28784:	blt	287ac <GetDataSlab+0x6370>
   28788:	ldr	r0, [sp, #60]	; 0x3c
   2878c:	add	r1, r0, sl
   28790:	mov	r7, #0
   28794:	ldr	r0, [r3, r7, lsl #2]
   28798:	strb	r0, [r1, r7]
   2879c:	add	r7, r7, #1
   287a0:	ldr	r0, [r4]
   287a4:	cmp	r7, r0
   287a8:	blt	28794 <GetDataSlab+0x6358>
   287ac:	ldr	r1, [fp, #12]
   287b0:	ldr	r1, [r1]
   287b4:	ldr	r7, [fp, #8]
   287b8:	ldr	r4, [r7]
   287bc:	sub	r1, r4, r1
   287c0:	add	ip, r3, r1, lsl #2
   287c4:	add	r2, r2, r1
   287c8:	ldr	r1, [fp, #24]
   287cc:	cmp	r1, #2
   287d0:	blt	28880 <GetDataSlab+0x6444>
   287d4:	mov	r1, #0
   287d8:	mov	r7, r1
   287dc:	ldr	r1, [r5, r1, lsl #2]
   287e0:	add	r1, r1, #1
   287e4:	str	r1, [r5, r7, lsl #2]
   287e8:	ldr	r4, [r8, r7, lsl #2]
   287ec:	sdiv	lr, r1, r4
   287f0:	mls	r1, lr, r4, r1
   287f4:	cmp	r1, #0
   287f8:	bne	28870 <GetDataSlab+0x6434>
   287fc:	mov	r1, #0
   28800:	str	r1, [r5, r7, lsl #2]
   28804:	add	r3, sp, #64	; 0x40
   28808:	add	r1, r3, r7, lsl #2
   2880c:	ldr	r1, [r1, #4]
   28810:	sdiv	r4, r2, r1
   28814:	mls	r4, r4, r1, r2
   28818:	cmp	r4, #0
   2881c:	beq	28838 <GetDataSlab+0x63fc>
   28820:	ldr	r6, [r3, r7, lsl #2]
   28824:	ldr	r3, [r9, r7, lsl #2]
   28828:	sub	r1, r1, r4
   2882c:	mla	r1, r3, r6, r1
   28830:	add	r2, r1, r2
   28834:	b	28854 <GetDataSlab+0x6418>
   28838:	ldr	r1, [r9, r7, lsl #2]
   2883c:	cmp	r1, #0
   28840:	beq	28858 <GetDataSlab+0x641c>
   28844:	add	r3, sp, #64	; 0x40
   28848:	ldr	r3, [r3, r7, lsl #2]
   2884c:	mla	r2, r3, r1, r2
   28850:	mul	r1, r3, r1
   28854:	add	ip, ip, r1, lsl #2
   28858:	add	r1, r7, #1
   2885c:	add	r3, r7, #2
   28860:	ldr	r7, [fp, #24]
   28864:	cmp	r3, r7
   28868:	blt	287d8 <GetDataSlab+0x639c>
   2886c:	b	28880 <GetDataSlab+0x6444>
   28870:	ldr	r1, [sp, #52]	; 0x34
   28874:	ldr	r1, [r1, r7, lsl #2]
   28878:	add	ip, ip, r1, lsl #2
   2887c:	add	r2, r1, r2
   28880:	add	sl, r0, sl
   28884:	mov	r0, #0
   28888:	ldr	r1, [sp, #44]	; 0x2c
   2888c:	cmp	sl, r1
   28890:	ldr	r4, [fp, #20]
   28894:	blt	2876c <GetDataSlab+0x6330>
   28898:	b	22560 <GetDataSlab+0x124>
   2889c:	ldr	lr, [lr]
   288a0:	sub	r1, lr, #1
   288a4:	str	r1, [fp, #-72]	; 0xffffffb8
   288a8:	ldr	r1, [r8]
   288ac:	str	r1, [sp, #64]	; 0x40
   288b0:	ldr	r0, [r4]
   288b4:	str	r0, [sp, #44]	; 0x2c
   288b8:	mov	r2, #0
   288bc:	ldr	r0, [fp, #24]
   288c0:	cmp	r0, #2
   288c4:	blt	28954 <GetDataSlab+0x6518>
   288c8:	mov	r1, #1
   288cc:	mov	r2, #0
   288d0:	mov	r0, r8
   288d4:	ldr	r3, [fp, #16]
   288d8:	ldr	r7, [r3, r1, lsl #2]
   288dc:	sub	r7, r7, #1
   288e0:	str	r7, [ip, r1, lsl #2]
   288e4:	sub	r8, r1, #1
   288e8:	ldr	r3, [fp, #8]
   288ec:	ldr	r5, [r3, r8, lsl #2]
   288f0:	str	r5, [sl, r1, lsl #2]
   288f4:	mov	r4, #0
   288f8:	mov	r3, r0
   288fc:	ldr	r6, [r3, -r4, lsl #2]!
   28900:	mul	r7, r7, r6
   28904:	ldr	r3, [r3, #4]
   28908:	mul	r5, r3, r5
   2890c:	add	r4, r4, #1
   28910:	cmp	r1, r4
   28914:	bne	288f8 <GetDataSlab+0x64bc>
   28918:	str	r5, [sl, r1, lsl #2]
   2891c:	str	r7, [ip, r1, lsl #2]
   28920:	ldr	r3, [sl, r8, lsl #2]
   28924:	ldr	r4, [r9, r1, lsl #2]
   28928:	mla	r2, r4, r3, r2
   2892c:	ldr	r4, [fp, #20]
   28930:	ldr	r3, [r4, r1, lsl #2]
   28934:	ldr	r5, [sp, #44]	; 0x2c
   28938:	mul	r5, r3, r5
   2893c:	str	r5, [sp, #44]	; 0x2c
   28940:	add	r0, r0, #4
   28944:	add	r1, r1, #1
   28948:	ldr	r3, [fp, #24]
   2894c:	cmp	r1, r3
   28950:	bne	288d4 <GetDataSlab+0x6498>
   28954:	ldr	r0, [sp, #48]	; 0x30
   28958:	add	r9, r0, r2, lsl #2
   2895c:	cmp	lr, #1
   28960:	bne	337ac <GetDataSlab+0x11370>
   28964:	ldr	r0, [sp, #44]	; 0x2c
   28968:	cmp	r0, #1
   2896c:	blt	3ae3c <GetDataSlab+0x18a00>
   28970:	ldr	r0, [fp, #12]
   28974:	add	lr, r0, #4
   28978:	mov	r0, ip
   2897c:	add	ip, r4, #4
   28980:	add	r1, sp, #104	; 0x68
   28984:	orr	r5, r1, #4
   28988:	orr	r0, r0, #4
   2898c:	str	r0, [sp, #52]	; 0x34
   28990:	mov	r8, #0
   28994:	ldr	r0, [fp, #12]
   28998:	ldr	r0, [r0]
   2899c:	mov	r1, r4
   289a0:	add	r4, r0, r2
   289a4:	add	sl, r9, r0, lsl #2
   289a8:	ldr	r0, [r1]
   289ac:	cmp	r0, #1
   289b0:	blt	289e8 <GetDataSlab+0x65ac>
   289b4:	ldr	r0, [sp, #60]	; 0x3c
   289b8:	add	r7, r0, r8
   289bc:	mov	r2, #0
   289c0:	mov	r3, sl
   289c4:	vldr	s0, [r3]
   289c8:	vcvt.u32.f32	s0, s0
   289cc:	vmov	r0, s0
   289d0:	strb	r0, [r7, r2]
   289d4:	add	r3, r3, #4
   289d8:	add	r2, r2, #1
   289dc:	ldr	r0, [r1]
   289e0:	cmp	r2, r0
   289e4:	blt	289c4 <GetDataSlab+0x6588>
   289e8:	ldr	r1, [fp, #12]
   289ec:	ldr	r1, [r1]
   289f0:	ldr	r2, [fp, #8]
   289f4:	ldr	r2, [r2]
   289f8:	sub	r1, r2, r1
   289fc:	add	r9, sl, r1, lsl #2
   28a00:	add	r2, r4, r1
   28a04:	ldr	r1, [fp, #24]
   28a08:	cmp	r1, #2
   28a0c:	blt	28ab8 <GetDataSlab+0x667c>
   28a10:	mov	r1, #0
   28a14:	add	sl, sp, #64	; 0x40
   28a18:	mov	r7, r1
   28a1c:	ldr	r1, [r5, r1, lsl #2]
   28a20:	add	r1, r1, #1
   28a24:	str	r1, [r5, r7, lsl #2]
   28a28:	ldr	r4, [ip, r7, lsl #2]
   28a2c:	sdiv	r6, r1, r4
   28a30:	mls	r1, r6, r4, r1
   28a34:	cmp	r1, #0
   28a38:	bne	28aa8 <GetDataSlab+0x666c>
   28a3c:	mov	r1, #0
   28a40:	str	r1, [r5, r7, lsl #2]
   28a44:	add	r1, sl, r7, lsl #2
   28a48:	ldr	r1, [r1, #4]
   28a4c:	sdiv	r4, r2, r1
   28a50:	mls	r4, r4, r1, r2
   28a54:	cmp	r4, #0
   28a58:	beq	28a74 <GetDataSlab+0x6638>
   28a5c:	ldr	r6, [sl, r7, lsl #2]
   28a60:	ldr	r3, [lr, r7, lsl #2]
   28a64:	sub	r1, r1, r4
   28a68:	mla	r1, r3, r6, r1
   28a6c:	add	r2, r1, r2
   28a70:	b	28a8c <GetDataSlab+0x6650>
   28a74:	ldr	r1, [lr, r7, lsl #2]
   28a78:	cmp	r1, #0
   28a7c:	beq	28a90 <GetDataSlab+0x6654>
   28a80:	ldr	r3, [sl, r7, lsl #2]
   28a84:	mla	r2, r3, r1, r2
   28a88:	mul	r1, r3, r1
   28a8c:	add	r9, r9, r1, lsl #2
   28a90:	add	r1, r7, #1
   28a94:	add	r3, r7, #2
   28a98:	ldr	r4, [fp, #24]
   28a9c:	cmp	r3, r4
   28aa0:	blt	28a18 <GetDataSlab+0x65dc>
   28aa4:	b	28ab8 <GetDataSlab+0x667c>
   28aa8:	ldr	r1, [sp, #52]	; 0x34
   28aac:	ldr	r1, [r1, r7, lsl #2]
   28ab0:	add	r9, r9, r1, lsl #2
   28ab4:	add	r2, r1, r2
   28ab8:	add	r8, r0, r8
   28abc:	mov	r0, #0
   28ac0:	ldr	r1, [sp, #44]	; 0x2c
   28ac4:	cmp	r8, r1
   28ac8:	ldr	r4, [fp, #20]
   28acc:	blt	28994 <GetDataSlab+0x6558>
   28ad0:	b	22560 <GetDataSlab+0x124>
   28ad4:	ldr	lr, [lr]
   28ad8:	sub	r1, lr, #1
   28adc:	str	r1, [fp, #-72]	; 0xffffffb8
   28ae0:	ldr	r1, [r8]
   28ae4:	str	r1, [sp, #64]	; 0x40
   28ae8:	ldr	r0, [r4]
   28aec:	str	r0, [sp, #44]	; 0x2c
   28af0:	mov	r2, #0
   28af4:	ldr	r0, [fp, #24]
   28af8:	cmp	r0, #2
   28afc:	blt	28b8c <GetDataSlab+0x6750>
   28b00:	mov	r1, #1
   28b04:	mov	r2, #0
   28b08:	mov	r0, r8
   28b0c:	ldr	r3, [fp, #16]
   28b10:	ldr	r7, [r3, r1, lsl #2]
   28b14:	sub	r7, r7, #1
   28b18:	str	r7, [ip, r1, lsl #2]
   28b1c:	sub	r8, r1, #1
   28b20:	ldr	r3, [fp, #8]
   28b24:	ldr	r5, [r3, r8, lsl #2]
   28b28:	str	r5, [sl, r1, lsl #2]
   28b2c:	mov	r4, #0
   28b30:	mov	r3, r0
   28b34:	ldr	r6, [r3, -r4, lsl #2]!
   28b38:	mul	r7, r7, r6
   28b3c:	ldr	r3, [r3, #4]
   28b40:	mul	r5, r3, r5
   28b44:	add	r4, r4, #1
   28b48:	cmp	r1, r4
   28b4c:	bne	28b30 <GetDataSlab+0x66f4>
   28b50:	str	r5, [sl, r1, lsl #2]
   28b54:	str	r7, [ip, r1, lsl #2]
   28b58:	ldr	r3, [sl, r8, lsl #2]
   28b5c:	ldr	r4, [r9, r1, lsl #2]
   28b60:	mla	r2, r4, r3, r2
   28b64:	ldr	r4, [fp, #20]
   28b68:	ldr	r3, [r4, r1, lsl #2]
   28b6c:	ldr	r5, [sp, #44]	; 0x2c
   28b70:	mul	r5, r3, r5
   28b74:	str	r5, [sp, #44]	; 0x2c
   28b78:	add	r0, r0, #4
   28b7c:	add	r1, r1, #1
   28b80:	ldr	r3, [fp, #24]
   28b84:	cmp	r1, r3
   28b88:	bne	28b0c <GetDataSlab+0x66d0>
   28b8c:	ldr	r0, [sp, #48]	; 0x30
   28b90:	add	r9, r0, r2, lsl #3
   28b94:	cmp	lr, #1
   28b98:	bne	3393c <GetDataSlab+0x11500>
   28b9c:	ldr	r0, [sp, #44]	; 0x2c
   28ba0:	cmp	r0, #1
   28ba4:	blt	3ae3c <GetDataSlab+0x18a00>
   28ba8:	ldr	r0, [fp, #12]
   28bac:	add	lr, r0, #4
   28bb0:	mov	r0, ip
   28bb4:	add	ip, r4, #4
   28bb8:	add	r1, sp, #104	; 0x68
   28bbc:	orr	r5, r1, #4
   28bc0:	orr	r0, r0, #4
   28bc4:	str	r0, [sp, #52]	; 0x34
   28bc8:	mov	r8, #0
   28bcc:	ldr	r0, [fp, #12]
   28bd0:	ldr	r0, [r0]
   28bd4:	mov	r1, r4
   28bd8:	add	r4, r0, r2
   28bdc:	add	sl, r9, r0, lsl #3
   28be0:	ldr	r0, [r1]
   28be4:	cmp	r0, #1
   28be8:	blt	28c20 <GetDataSlab+0x67e4>
   28bec:	ldr	r0, [sp, #60]	; 0x3c
   28bf0:	add	r7, r0, r8
   28bf4:	mov	r2, #0
   28bf8:	mov	r3, sl
   28bfc:	vldr	d16, [r3]
   28c00:	vcvt.u32.f64	s0, d16
   28c04:	vmov	r0, s0
   28c08:	strb	r0, [r7, r2]
   28c0c:	add	r3, r3, #8
   28c10:	add	r2, r2, #1
   28c14:	ldr	r0, [r1]
   28c18:	cmp	r2, r0
   28c1c:	blt	28bfc <GetDataSlab+0x67c0>
   28c20:	ldr	r1, [fp, #12]
   28c24:	ldr	r1, [r1]
   28c28:	ldr	r2, [fp, #8]
   28c2c:	ldr	r2, [r2]
   28c30:	sub	r1, r2, r1
   28c34:	add	r9, sl, r1, lsl #3
   28c38:	add	r2, r4, r1
   28c3c:	ldr	r1, [fp, #24]
   28c40:	cmp	r1, #2
   28c44:	blt	28cf0 <GetDataSlab+0x68b4>
   28c48:	mov	r1, #0
   28c4c:	add	sl, sp, #64	; 0x40
   28c50:	mov	r7, r1
   28c54:	ldr	r1, [r5, r1, lsl #2]
   28c58:	add	r1, r1, #1
   28c5c:	str	r1, [r5, r7, lsl #2]
   28c60:	ldr	r4, [ip, r7, lsl #2]
   28c64:	sdiv	r6, r1, r4
   28c68:	mls	r1, r6, r4, r1
   28c6c:	cmp	r1, #0
   28c70:	bne	28ce0 <GetDataSlab+0x68a4>
   28c74:	mov	r1, #0
   28c78:	str	r1, [r5, r7, lsl #2]
   28c7c:	add	r1, sl, r7, lsl #2
   28c80:	ldr	r1, [r1, #4]
   28c84:	sdiv	r4, r2, r1
   28c88:	mls	r4, r4, r1, r2
   28c8c:	cmp	r4, #0
   28c90:	beq	28cac <GetDataSlab+0x6870>
   28c94:	ldr	r6, [sl, r7, lsl #2]
   28c98:	ldr	r3, [lr, r7, lsl #2]
   28c9c:	sub	r1, r1, r4
   28ca0:	mla	r1, r3, r6, r1
   28ca4:	add	r2, r1, r2
   28ca8:	b	28cc4 <GetDataSlab+0x6888>
   28cac:	ldr	r1, [lr, r7, lsl #2]
   28cb0:	cmp	r1, #0
   28cb4:	beq	28cc8 <GetDataSlab+0x688c>
   28cb8:	ldr	r3, [sl, r7, lsl #2]
   28cbc:	mla	r2, r3, r1, r2
   28cc0:	mul	r1, r3, r1
   28cc4:	add	r9, r9, r1, lsl #3
   28cc8:	add	r1, r7, #1
   28ccc:	add	r3, r7, #2
   28cd0:	ldr	r4, [fp, #24]
   28cd4:	cmp	r3, r4
   28cd8:	blt	28c50 <GetDataSlab+0x6814>
   28cdc:	b	28cf0 <GetDataSlab+0x68b4>
   28ce0:	ldr	r1, [sp, #52]	; 0x34
   28ce4:	ldr	r1, [r1, r7, lsl #2]
   28ce8:	add	r9, r9, r1, lsl #3
   28cec:	add	r2, r1, r2
   28cf0:	add	r8, r0, r8
   28cf4:	mov	r0, #0
   28cf8:	ldr	r1, [sp, #44]	; 0x2c
   28cfc:	cmp	r8, r1
   28d00:	ldr	r4, [fp, #20]
   28d04:	blt	28bcc <GetDataSlab+0x6790>
   28d08:	b	22560 <GetDataSlab+0x124>
   28d0c:	ldr	ip, [lr]
   28d10:	sub	r1, ip, #1
   28d14:	str	r1, [fp, #-72]	; 0xffffffb8
   28d18:	ldr	r1, [r8]
   28d1c:	str	r1, [sp, #64]	; 0x40
   28d20:	ldr	r0, [r4]
   28d24:	str	r0, [sp, #44]	; 0x2c
   28d28:	mov	r1, #0
   28d2c:	ldr	r0, [fp, #24]
   28d30:	cmp	r0, #2
   28d34:	blt	28dc8 <GetDataSlab+0x698c>
   28d38:	mov	r2, #1
   28d3c:	mov	r1, #0
   28d40:	mov	r0, r8
   28d44:	sub	r5, fp, #72	; 0x48
   28d48:	ldr	r7, [lr, r2, lsl #2]
   28d4c:	sub	r7, r7, #1
   28d50:	str	r7, [r5, r2, lsl #2]
   28d54:	sub	lr, r2, #1
   28d58:	ldr	r5, [r8, lr, lsl #2]
   28d5c:	str	r5, [sl, r2, lsl #2]
   28d60:	mov	r4, #0
   28d64:	mov	r3, r0
   28d68:	ldr	r6, [r3, -r4, lsl #2]!
   28d6c:	mul	r7, r7, r6
   28d70:	ldr	r3, [r3, #4]
   28d74:	mul	r5, r3, r5
   28d78:	add	r4, r4, #1
   28d7c:	cmp	r2, r4
   28d80:	bne	28d64 <GetDataSlab+0x6928>
   28d84:	str	r5, [sl, r2, lsl #2]
   28d88:	sub	r5, fp, #72	; 0x48
   28d8c:	str	r7, [r5, r2, lsl #2]
   28d90:	ldr	r3, [sl, lr, lsl #2]
   28d94:	ldr	r7, [r9, r2, lsl #2]
   28d98:	mla	r1, r7, r3, r1
   28d9c:	ldr	r4, [fp, #20]
   28da0:	ldr	r3, [r4, r2, lsl #2]
   28da4:	ldr	r7, [sp, #44]	; 0x2c
   28da8:	mul	r7, r3, r7
   28dac:	str	r7, [sp, #44]	; 0x2c
   28db0:	add	r0, r0, #4
   28db4:	add	r2, r2, #1
   28db8:	ldr	r3, [fp, #24]
   28dbc:	cmp	r2, r3
   28dc0:	ldr	lr, [fp, #16]
   28dc4:	bne	28d48 <GetDataSlab+0x690c>
   28dc8:	ldr	r0, [sp, #48]	; 0x30
   28dcc:	add	r8, r0, r1, lsl #3
   28dd0:	cmp	ip, #1
   28dd4:	bne	33acc <GetDataSlab+0x11690>
   28dd8:	ldr	r0, [sp, #44]	; 0x2c
   28ddc:	cmp	r0, #1
   28de0:	sub	r0, fp, #72	; 0x48
   28de4:	blt	33c54 <GetDataSlab+0x11818>
   28de8:	add	sl, r9, #4
   28dec:	add	lr, r4, #4
   28df0:	add	r2, sp, #104	; 0x68
   28df4:	orr	r5, r2, #4
   28df8:	orr	r0, r0, #4
   28dfc:	str	r0, [sp, #40]	; 0x28
   28e00:	mov	ip, #0
   28e04:	ldr	r0, [r9]
   28e08:	add	r9, r0, r1
   28e0c:	add	r2, r8, r0, lsl #3
   28e10:	ldr	r0, [r4]
   28e14:	cmp	r0, #1
   28e18:	blt	28e44 <GetDataSlab+0x6a08>
   28e1c:	ldr	r0, [sp, #60]	; 0x3c
   28e20:	add	r7, r0, ip
   28e24:	mov	r1, #0
   28e28:	mov	r3, r2
   28e2c:	ldrb	r0, [r3], #8
   28e30:	strb	r0, [r7, r1]
   28e34:	add	r1, r1, #1
   28e38:	ldr	r0, [r4]
   28e3c:	cmp	r1, r0
   28e40:	blt	28e2c <GetDataSlab+0x69f0>
   28e44:	ldr	r1, [fp, #12]
   28e48:	ldr	r1, [r1]
   28e4c:	ldr	r3, [fp, #8]
   28e50:	ldr	r3, [r3]
   28e54:	sub	r1, r3, r1
   28e58:	add	r8, r2, r1, lsl #3
   28e5c:	add	r1, r9, r1
   28e60:	ldr	r2, [fp, #24]
   28e64:	cmp	r2, #2
   28e68:	blt	28f0c <GetDataSlab+0x6ad0>
   28e6c:	mov	r3, #0
   28e70:	ldr	r9, [fp, #12]
   28e74:	mov	r7, r3
   28e78:	ldr	r3, [r5, r3, lsl #2]
   28e7c:	add	r3, r3, #1
   28e80:	str	r3, [r5, r7, lsl #2]
   28e84:	ldr	r4, [lr, r7, lsl #2]
   28e88:	sdiv	r6, r3, r4
   28e8c:	mls	r3, r6, r4, r3
   28e90:	cmp	r3, #0
   28e94:	bne	28f14 <GetDataSlab+0x6ad8>
   28e98:	mov	r2, #0
   28e9c:	str	r2, [r5, r7, lsl #2]
   28ea0:	add	r2, sp, #64	; 0x40
   28ea4:	add	r3, r2, r7, lsl #2
   28ea8:	ldr	r3, [r3, #4]
   28eac:	sdiv	r4, r1, r3
   28eb0:	mls	r4, r4, r3, r1
   28eb4:	cmp	r4, #0
   28eb8:	beq	28ed4 <GetDataSlab+0x6a98>
   28ebc:	ldr	r6, [r2, r7, lsl #2]
   28ec0:	ldr	r2, [sl, r7, lsl #2]
   28ec4:	sub	r3, r3, r4
   28ec8:	mla	r2, r2, r6, r3
   28ecc:	add	r1, r2, r1
   28ed0:	b	28ef0 <GetDataSlab+0x6ab4>
   28ed4:	ldr	r3, [sl, r7, lsl #2]
   28ed8:	cmp	r3, #0
   28edc:	beq	28ef4 <GetDataSlab+0x6ab8>
   28ee0:	add	r2, sp, #64	; 0x40
   28ee4:	ldr	r2, [r2, r7, lsl #2]
   28ee8:	mla	r1, r2, r3, r1
   28eec:	mul	r2, r2, r3
   28ef0:	add	r8, r8, r2, lsl #3
   28ef4:	add	r3, r7, #1
   28ef8:	add	r2, r7, #2
   28efc:	ldr	r4, [fp, #24]
   28f00:	cmp	r2, r4
   28f04:	blt	28e74 <GetDataSlab+0x6a38>
   28f08:	b	28f24 <GetDataSlab+0x6ae8>
   28f0c:	ldr	r9, [fp, #12]
   28f10:	b	28f24 <GetDataSlab+0x6ae8>
   28f14:	ldr	r2, [sp, #40]	; 0x28
   28f18:	ldr	r2, [r2, r7, lsl #2]
   28f1c:	add	r8, r8, r2, lsl #3
   28f20:	add	r1, r2, r1
   28f24:	add	ip, r0, ip
   28f28:	ldr	r0, [sp, #44]	; 0x2c
   28f2c:	cmp	ip, r0
   28f30:	ldr	r4, [fp, #20]
   28f34:	blt	28e04 <GetDataSlab+0x69c8>
   28f38:	mov	r0, #0
   28f3c:	ldr	lr, [fp, #16]
   28f40:	b	33c58 <GetDataSlab+0x1181c>
   28f44:	ldr	lr, [lr]
   28f48:	sub	r0, lr, #1
   28f4c:	str	r0, [fp, #-72]	; 0xffffffb8
   28f50:	ldr	r0, [r8]
   28f54:	str	r0, [sp, #40]	; 0x28
   28f58:	str	r0, [sp, #64]	; 0x40
   28f5c:	ldr	r1, [r4]
   28f60:	mov	r3, #0
   28f64:	ldr	r0, [fp, #24]
   28f68:	cmp	r0, #2
   28f6c:	str	r1, [sp, #44]	; 0x2c
   28f70:	str	r1, [sp, #52]	; 0x34
   28f74:	blt	29014 <GetDataSlab+0x6bd8>
   28f78:	mov	r0, #1
   28f7c:	mov	r3, #0
   28f80:	mov	r4, r8
   28f84:	ldr	r1, [sp, #44]	; 0x2c
   28f88:	str	r1, [sp, #52]	; 0x34
   28f8c:	ldr	r1, [fp, #16]
   28f90:	ldr	r2, [r1, r0, lsl #2]
   28f94:	sub	r7, r2, #1
   28f98:	str	r7, [ip, r0, lsl #2]
   28f9c:	sub	ip, r0, #1
   28fa0:	ldr	r5, [r8, ip, lsl #2]
   28fa4:	str	r5, [sl, r0, lsl #2]
   28fa8:	mov	r2, #0
   28fac:	mov	r1, r4
   28fb0:	ldr	r6, [r1, -r2, lsl #2]!
   28fb4:	mul	r7, r7, r6
   28fb8:	ldr	r1, [r1, #4]
   28fbc:	mul	r5, r1, r5
   28fc0:	add	r2, r2, #1
   28fc4:	cmp	r0, r2
   28fc8:	bne	28fac <GetDataSlab+0x6b70>
   28fcc:	str	r5, [sl, r0, lsl #2]
   28fd0:	sub	r1, fp, #72	; 0x48
   28fd4:	mov	r2, r1
   28fd8:	str	r7, [r1, r0, lsl #2]
   28fdc:	ldr	r1, [sl, ip, lsl #2]
   28fe0:	mov	ip, r2
   28fe4:	ldr	r2, [r9, r0, lsl #2]
   28fe8:	mla	r3, r2, r1, r3
   28fec:	ldr	r1, [fp, #20]
   28ff0:	ldr	r1, [r1, r0, lsl #2]
   28ff4:	ldr	r2, [sp, #52]	; 0x34
   28ff8:	mul	r2, r1, r2
   28ffc:	str	r2, [sp, #52]	; 0x34
   29000:	add	r4, r4, #4
   29004:	add	r0, r0, #1
   29008:	ldr	r1, [fp, #24]
   2900c:	cmp	r0, r1
   29010:	bne	28f8c <GetDataSlab+0x6b50>
   29014:	ldr	r0, [sp, #48]	; 0x30
   29018:	add	r5, r0, r3
   2901c:	cmp	lr, #1
   29020:	bne	33d38 <GetDataSlab+0x118fc>
   29024:	ldr	r0, [sp, #52]	; 0x34
   29028:	cmp	r0, #1
   2902c:	ldr	r0, [fp, #20]
   29030:	blt	3ae3c <GetDataSlab+0x18a00>
   29034:	add	lr, r9, #4
   29038:	add	sl, r0, #4
   2903c:	add	r0, sp, #104	; 0x68
   29040:	orr	r6, r0, #4
   29044:	orr	r9, ip, #4
   29048:	ldr	r1, [sp, #44]	; 0x2c
   2904c:	lsl	r0, r1, #1
   29050:	str	r0, [sp, #48]	; 0x30
   29054:	mov	r8, #0
   29058:	cmp	r1, #1
   2905c:	ldr	r0, [fp, #12]
   29060:	blt	29084 <GetDataSlab+0x6c48>
   29064:	ldr	r0, [r0]
   29068:	add	r0, r5, r0
   2906c:	ldr	ip, [sp, #44]	; 0x2c
   29070:	ldr	r2, [sp, #60]	; 0x3c
   29074:	ldrb	r4, [r0], #1
   29078:	strh	r4, [r2], #2
   2907c:	subs	ip, ip, #1
   29080:	bne	29074 <GetDataSlab+0x6c38>
   29084:	ldr	r0, [sp, #40]	; 0x28
   29088:	add	r5, r5, r0
   2908c:	add	r3, r3, r0
   29090:	ldr	r0, [fp, #24]
   29094:	cmp	r0, #2
   29098:	blt	29138 <GetDataSlab+0x6cfc>
   2909c:	mov	r2, #0
   290a0:	ldr	ip, [sp, #60]	; 0x3c
   290a4:	mov	r0, r2
   290a8:	ldr	r2, [r6, r2, lsl #2]
   290ac:	add	r2, r2, #1
   290b0:	str	r2, [r6, r0, lsl #2]
   290b4:	ldr	r4, [sl, r0, lsl #2]
   290b8:	sdiv	r1, r2, r4
   290bc:	mls	r1, r1, r4, r2
   290c0:	cmp	r1, #0
   290c4:	bne	29140 <GetDataSlab+0x6d04>
   290c8:	mov	r1, #0
   290cc:	str	r1, [r6, r0, lsl #2]
   290d0:	add	r7, sp, #64	; 0x40
   290d4:	add	r1, r7, r0, lsl #2
   290d8:	ldr	r2, [r1, #4]
   290dc:	sdiv	r1, r3, r2
   290e0:	mls	r4, r1, r2, r3
   290e4:	cmp	r4, #0
   290e8:	beq	29108 <GetDataSlab+0x6ccc>
   290ec:	ldr	r1, [r7, r0, lsl #2]
   290f0:	ldr	r7, [lr, r0, lsl #2]
   290f4:	sub	r2, r2, r4
   290f8:	mla	r1, r7, r1, r2
   290fc:	add	r3, r1, r3
   29100:	add	r5, r5, r1
   29104:	b	29120 <GetDataSlab+0x6ce4>
   29108:	ldr	r2, [lr, r0, lsl #2]
   2910c:	cmp	r2, #0
   29110:	addne	r1, sp, #64	; 0x40
   29114:	ldrne	r1, [r1, r0, lsl #2]
   29118:	mlane	r3, r1, r2, r3
   2911c:	mlane	r5, r1, r2, r5
   29120:	add	r2, r0, #1
   29124:	add	r0, r0, #2
   29128:	ldr	r1, [fp, #24]
   2912c:	cmp	r0, r1
   29130:	blt	290a4 <GetDataSlab+0x6c68>
   29134:	b	2914c <GetDataSlab+0x6d10>
   29138:	ldr	ip, [sp, #60]	; 0x3c
   2913c:	b	2914c <GetDataSlab+0x6d10>
   29140:	ldr	r0, [r9, r0, lsl #2]
   29144:	add	r5, r5, r0
   29148:	add	r3, r0, r3
   2914c:	ldr	r0, [sp, #48]	; 0x30
   29150:	add	ip, ip, r0
   29154:	str	ip, [sp, #60]	; 0x3c
   29158:	ldr	r1, [sp, #44]	; 0x2c
   2915c:	add	r8, r8, r1
   29160:	mov	r0, #0
   29164:	ldr	r2, [sp, #52]	; 0x34
   29168:	cmp	r8, r2
   2916c:	blt	29058 <GetDataSlab+0x6c1c>
   29170:	b	22560 <GetDataSlab+0x124>
   29174:	mov	r1, r8
   29178:	ldr	r8, [lr]
   2917c:	sub	r0, r8, #1
   29180:	str	r0, [fp, #-72]	; 0xffffffb8
   29184:	ldr	r0, [r1]
   29188:	str	r0, [sp, #40]	; 0x28
   2918c:	str	r0, [sp, #64]	; 0x40
   29190:	ldr	r1, [r4]
   29194:	mov	r2, #0
   29198:	ldr	r0, [fp, #24]
   2919c:	cmp	r0, #2
   291a0:	str	r1, [sp, #44]	; 0x2c
   291a4:	str	r1, [sp, #52]	; 0x34
   291a8:	blt	29240 <GetDataSlab+0x6e04>
   291ac:	mov	r1, #1
   291b0:	mov	r2, #0
   291b4:	ldr	r3, [fp, #8]
   291b8:	ldr	r0, [sp, #44]	; 0x2c
   291bc:	str	r0, [sp, #52]	; 0x34
   291c0:	ldr	r0, [lr, r1, lsl #2]
   291c4:	sub	r7, r0, #1
   291c8:	str	r7, [ip, r1, lsl #2]
   291cc:	sub	r9, r1, #1
   291d0:	ldr	r0, [fp, #8]
   291d4:	ldr	r4, [r0, r9, lsl #2]
   291d8:	str	r4, [sl, r1, lsl #2]
   291dc:	mov	r0, #0
   291e0:	mov	r6, r3
   291e4:	ldr	r5, [r6, -r0, lsl #2]!
   291e8:	mul	r7, r7, r5
   291ec:	ldr	r5, [r6, #4]
   291f0:	mul	r4, r5, r4
   291f4:	add	r0, r0, #1
   291f8:	cmp	r1, r0
   291fc:	bne	291e0 <GetDataSlab+0x6da4>
   29200:	str	r4, [sl, r1, lsl #2]
   29204:	str	r7, [ip, r1, lsl #2]
   29208:	ldr	r0, [sl, r9, lsl #2]
   2920c:	ldr	r9, [fp, #12]
   29210:	ldr	r4, [r9, r1, lsl #2]
   29214:	mla	r2, r4, r0, r2
   29218:	ldr	r4, [fp, #20]
   2921c:	ldr	r0, [r4, r1, lsl #2]
   29220:	ldr	r5, [sp, #52]	; 0x34
   29224:	mul	r5, r0, r5
   29228:	str	r5, [sp, #52]	; 0x34
   2922c:	add	r3, r3, #4
   29230:	add	r1, r1, #1
   29234:	ldr	r0, [fp, #24]
   29238:	cmp	r1, r0
   2923c:	bne	291c0 <GetDataSlab+0x6d84>
   29240:	ldr	r0, [sp, #48]	; 0x30
   29244:	add	ip, r0, r2, lsl #1
   29248:	cmp	r8, #1
   2924c:	bne	33eb8 <GetDataSlab+0x11a7c>
   29250:	ldr	r0, [sp, #52]	; 0x34
   29254:	cmp	r0, #1
   29258:	ldr	r1, [sp, #44]	; 0x2c
   2925c:	blt	3ae3c <GetDataSlab+0x18a00>
   29260:	add	sl, r4, #4
   29264:	add	r0, sp, #104	; 0x68
   29268:	orr	r6, r0, #4
   2926c:	sub	r0, fp, #72	; 0x48
   29270:	orr	r0, r0, #4
   29274:	str	r0, [sp, #32]
   29278:	lsl	r0, r1, #1
   2927c:	str	r0, [sp, #48]	; 0x30
   29280:	ldr	r0, [r9], #4
   29284:	str	r0, [sp, #36]	; 0x24
   29288:	str	r9, [sp, #56]	; 0x38
   2928c:	mov	r8, #0
   29290:	mov	lr, #0
   29294:	ldr	r5, [sp, #56]	; 0x38
   29298:	cmp	r1, #1
   2929c:	blt	292c0 <GetDataSlab+0x6e84>
   292a0:	ldr	r0, [sp, #36]	; 0x24
   292a4:	add	r0, ip, r0, lsl #1
   292a8:	mov	r9, r1
   292ac:	ldr	r4, [sp, #60]	; 0x3c
   292b0:	ldrh	r3, [r0], #2
   292b4:	strh	r3, [r4], #2
   292b8:	subs	r9, r9, #1
   292bc:	bne	292b0 <GetDataSlab+0x6e74>
   292c0:	ldr	r0, [sp, #40]	; 0x28
   292c4:	add	ip, ip, r0, lsl #1
   292c8:	add	r2, r2, r0
   292cc:	ldr	r0, [fp, #24]
   292d0:	cmp	r0, #2
   292d4:	blt	29380 <GetDataSlab+0x6f44>
   292d8:	mov	r4, #0
   292dc:	mov	r0, r4
   292e0:	ldr	r3, [r6, r4, lsl #2]
   292e4:	add	r3, r3, #1
   292e8:	str	r3, [r6, r4, lsl #2]
   292ec:	ldr	r4, [sl, r4, lsl #2]
   292f0:	sdiv	r1, r3, r4
   292f4:	mls	r1, r1, r4, r3
   292f8:	cmp	r1, #0
   292fc:	bne	29370 <GetDataSlab+0x6f34>
   29300:	str	r8, [r6, r0, lsl #2]
   29304:	add	r7, sp, #64	; 0x40
   29308:	add	r1, r7, r0, lsl #2
   2930c:	ldr	r4, [r1, #4]
   29310:	sdiv	r1, r2, r4
   29314:	mls	r3, r1, r4, r2
   29318:	cmp	r3, #0
   2931c:	beq	29338 <GetDataSlab+0x6efc>
   29320:	ldr	r1, [r7, r0, lsl #2]
   29324:	ldr	r7, [r5, r0, lsl #2]
   29328:	sub	r3, r4, r3
   2932c:	mla	r1, r7, r1, r3
   29330:	add	r2, r1, r2
   29334:	b	29354 <GetDataSlab+0x6f18>
   29338:	ldr	r3, [r5, r0, lsl #2]
   2933c:	cmp	r3, #0
   29340:	beq	29358 <GetDataSlab+0x6f1c>
   29344:	add	r1, sp, #64	; 0x40
   29348:	ldr	r1, [r1, r0, lsl #2]
   2934c:	mla	r2, r1, r3, r2
   29350:	mul	r1, r1, r3
   29354:	add	ip, ip, r1, lsl #1
   29358:	add	r4, r0, #1
   2935c:	add	r0, r0, #2
   29360:	ldr	r1, [fp, #24]
   29364:	cmp	r0, r1
   29368:	blt	292dc <GetDataSlab+0x6ea0>
   2936c:	b	29380 <GetDataSlab+0x6f44>
   29370:	ldr	r1, [sp, #32]
   29374:	ldr	r0, [r1, r0, lsl #2]
   29378:	add	ip, ip, r0, lsl #1
   2937c:	add	r2, r0, r2
   29380:	ldr	r0, [sp, #60]	; 0x3c
   29384:	ldr	r1, [sp, #48]	; 0x30
   29388:	add	r0, r0, r1
   2938c:	str	r0, [sp, #60]	; 0x3c
   29390:	ldr	r1, [sp, #44]	; 0x2c
   29394:	add	lr, lr, r1
   29398:	mov	r0, #0
   2939c:	ldr	r3, [sp, #52]	; 0x34
   293a0:	cmp	lr, r3
   293a4:	blt	29298 <GetDataSlab+0x6e5c>
   293a8:	b	22560 <GetDataSlab+0x124>
   293ac:	mov	r1, r8
   293b0:	ldr	r8, [lr]
   293b4:	sub	r0, r8, #1
   293b8:	str	r0, [fp, #-72]	; 0xffffffb8
   293bc:	ldr	r0, [r1]
   293c0:	str	r0, [sp, #40]	; 0x28
   293c4:	str	r0, [sp, #64]	; 0x40
   293c8:	ldr	r1, [r4]
   293cc:	mov	r2, #0
   293d0:	ldr	r0, [fp, #24]
   293d4:	cmp	r0, #2
   293d8:	str	r1, [sp, #44]	; 0x2c
   293dc:	str	r1, [sp, #52]	; 0x34
   293e0:	blt	29478 <GetDataSlab+0x703c>
   293e4:	mov	r1, #1
   293e8:	mov	r2, #0
   293ec:	ldr	r3, [fp, #8]
   293f0:	ldr	r0, [sp, #44]	; 0x2c
   293f4:	str	r0, [sp, #52]	; 0x34
   293f8:	ldr	r0, [lr, r1, lsl #2]
   293fc:	sub	r7, r0, #1
   29400:	str	r7, [ip, r1, lsl #2]
   29404:	sub	r9, r1, #1
   29408:	ldr	r0, [fp, #8]
   2940c:	ldr	r4, [r0, r9, lsl #2]
   29410:	str	r4, [sl, r1, lsl #2]
   29414:	mov	r0, #0
   29418:	mov	r6, r3
   2941c:	ldr	r5, [r6, -r0, lsl #2]!
   29420:	mul	r7, r7, r5
   29424:	ldr	r5, [r6, #4]
   29428:	mul	r4, r5, r4
   2942c:	add	r0, r0, #1
   29430:	cmp	r1, r0
   29434:	bne	29418 <GetDataSlab+0x6fdc>
   29438:	str	r4, [sl, r1, lsl #2]
   2943c:	str	r7, [ip, r1, lsl #2]
   29440:	ldr	r0, [sl, r9, lsl #2]
   29444:	ldr	r9, [fp, #12]
   29448:	ldr	r4, [r9, r1, lsl #2]
   2944c:	mla	r2, r4, r0, r2
   29450:	ldr	r4, [fp, #20]
   29454:	ldr	r0, [r4, r1, lsl #2]
   29458:	ldr	r5, [sp, #52]	; 0x34
   2945c:	mul	r5, r0, r5
   29460:	str	r5, [sp, #52]	; 0x34
   29464:	add	r3, r3, #4
   29468:	add	r1, r1, #1
   2946c:	ldr	r0, [fp, #24]
   29470:	cmp	r1, r0
   29474:	bne	293f8 <GetDataSlab+0x6fbc>
   29478:	ldr	r0, [sp, #48]	; 0x30
   2947c:	add	ip, r0, r2, lsl #1
   29480:	cmp	r8, #1
   29484:	bne	34040 <GetDataSlab+0x11c04>
   29488:	ldr	r0, [sp, #52]	; 0x34
   2948c:	cmp	r0, #1
   29490:	ldr	r1, [sp, #44]	; 0x2c
   29494:	blt	3ae3c <GetDataSlab+0x18a00>
   29498:	add	sl, r4, #4
   2949c:	add	r0, sp, #104	; 0x68
   294a0:	orr	r6, r0, #4
   294a4:	sub	r0, fp, #72	; 0x48
   294a8:	orr	r0, r0, #4
   294ac:	str	r0, [sp, #32]
   294b0:	lsl	r0, r1, #1
   294b4:	str	r0, [sp, #48]	; 0x30
   294b8:	ldr	r0, [r9], #4
   294bc:	str	r0, [sp, #36]	; 0x24
   294c0:	str	r9, [sp, #56]	; 0x38
   294c4:	mov	r8, #0
   294c8:	mov	lr, #0
   294cc:	ldr	r5, [sp, #56]	; 0x38
   294d0:	cmp	r1, #1
   294d4:	blt	294f8 <GetDataSlab+0x70bc>
   294d8:	ldr	r0, [sp, #36]	; 0x24
   294dc:	add	r0, ip, r0, lsl #1
   294e0:	mov	r9, r1
   294e4:	ldr	r4, [sp, #60]	; 0x3c
   294e8:	ldrh	r3, [r0], #2
   294ec:	strh	r3, [r4], #2
   294f0:	subs	r9, r9, #1
   294f4:	bne	294e8 <GetDataSlab+0x70ac>
   294f8:	ldr	r0, [sp, #40]	; 0x28
   294fc:	add	ip, ip, r0, lsl #1
   29500:	add	r2, r2, r0
   29504:	ldr	r0, [fp, #24]
   29508:	cmp	r0, #2
   2950c:	blt	295b8 <GetDataSlab+0x717c>
   29510:	mov	r4, #0
   29514:	mov	r0, r4
   29518:	ldr	r3, [r6, r4, lsl #2]
   2951c:	add	r3, r3, #1
   29520:	str	r3, [r6, r4, lsl #2]
   29524:	ldr	r4, [sl, r4, lsl #2]
   29528:	sdiv	r1, r3, r4
   2952c:	mls	r1, r1, r4, r3
   29530:	cmp	r1, #0
   29534:	bne	295a8 <GetDataSlab+0x716c>
   29538:	str	r8, [r6, r0, lsl #2]
   2953c:	add	r7, sp, #64	; 0x40
   29540:	add	r1, r7, r0, lsl #2
   29544:	ldr	r4, [r1, #4]
   29548:	sdiv	r1, r2, r4
   2954c:	mls	r3, r1, r4, r2
   29550:	cmp	r3, #0
   29554:	beq	29570 <GetDataSlab+0x7134>
   29558:	ldr	r1, [r7, r0, lsl #2]
   2955c:	ldr	r7, [r5, r0, lsl #2]
   29560:	sub	r3, r4, r3
   29564:	mla	r1, r7, r1, r3
   29568:	add	r2, r1, r2
   2956c:	b	2958c <GetDataSlab+0x7150>
   29570:	ldr	r3, [r5, r0, lsl #2]
   29574:	cmp	r3, #0
   29578:	beq	29590 <GetDataSlab+0x7154>
   2957c:	add	r1, sp, #64	; 0x40
   29580:	ldr	r1, [r1, r0, lsl #2]
   29584:	mla	r2, r1, r3, r2
   29588:	mul	r1, r1, r3
   2958c:	add	ip, ip, r1, lsl #1
   29590:	add	r4, r0, #1
   29594:	add	r0, r0, #2
   29598:	ldr	r1, [fp, #24]
   2959c:	cmp	r0, r1
   295a0:	blt	29514 <GetDataSlab+0x70d8>
   295a4:	b	295b8 <GetDataSlab+0x717c>
   295a8:	ldr	r1, [sp, #32]
   295ac:	ldr	r0, [r1, r0, lsl #2]
   295b0:	add	ip, ip, r0, lsl #1
   295b4:	add	r2, r0, r2
   295b8:	ldr	r0, [sp, #60]	; 0x3c
   295bc:	ldr	r1, [sp, #48]	; 0x30
   295c0:	add	r0, r0, r1
   295c4:	str	r0, [sp, #60]	; 0x3c
   295c8:	ldr	r1, [sp, #44]	; 0x2c
   295cc:	add	lr, lr, r1
   295d0:	mov	r0, #0
   295d4:	ldr	r3, [sp, #52]	; 0x34
   295d8:	cmp	lr, r3
   295dc:	blt	294d0 <GetDataSlab+0x7094>
   295e0:	b	22560 <GetDataSlab+0x124>
   295e4:	ldr	r9, [lr]
   295e8:	sub	r0, r9, #1
   295ec:	str	r0, [fp, #-72]	; 0xffffffb8
   295f0:	ldr	r0, [r8]
   295f4:	str	r0, [sp, #40]	; 0x28
   295f8:	str	r0, [sp, #64]	; 0x40
   295fc:	ldr	r1, [r4]
   29600:	mov	r3, #0
   29604:	ldr	r0, [fp, #24]
   29608:	cmp	r0, #2
   2960c:	str	r1, [sp, #44]	; 0x2c
   29610:	str	r1, [sp, #52]	; 0x34
   29614:	blt	296ac <GetDataSlab+0x7270>
   29618:	mov	r1, #1
   2961c:	mov	r3, #0
   29620:	mov	r2, r8
   29624:	ldr	r0, [sp, #44]	; 0x2c
   29628:	str	r0, [sp, #52]	; 0x34
   2962c:	ldr	r0, [lr, r1, lsl #2]
   29630:	sub	r7, r0, #1
   29634:	str	r7, [ip, r1, lsl #2]
   29638:	sub	lr, r1, #1
   2963c:	ldr	r4, [r8, lr, lsl #2]
   29640:	str	r4, [sl, r1, lsl #2]
   29644:	mov	r0, #0
   29648:	mov	r6, r2
   2964c:	ldr	r5, [r6, -r0, lsl #2]!
   29650:	mul	r7, r7, r5
   29654:	ldr	r5, [r6, #4]
   29658:	mul	r4, r5, r4
   2965c:	add	r0, r0, #1
   29660:	cmp	r1, r0
   29664:	bne	29648 <GetDataSlab+0x720c>
   29668:	str	r4, [sl, r1, lsl #2]
   2966c:	str	r7, [ip, r1, lsl #2]
   29670:	ldr	r0, [sl, lr, lsl #2]
   29674:	ldr	r7, [fp, #12]
   29678:	ldr	r7, [r7, r1, lsl #2]
   2967c:	mla	r3, r7, r0, r3
   29680:	ldr	r4, [fp, #20]
   29684:	ldr	r0, [r4, r1, lsl #2]
   29688:	ldr	r7, [sp, #52]	; 0x34
   2968c:	mul	r7, r0, r7
   29690:	str	r7, [sp, #52]	; 0x34
   29694:	add	r2, r2, #4
   29698:	add	r1, r1, #1
   2969c:	ldr	r0, [fp, #24]
   296a0:	cmp	r1, r0
   296a4:	ldr	lr, [fp, #16]
   296a8:	bne	2962c <GetDataSlab+0x71f0>
   296ac:	ldr	r0, [sp, #48]	; 0x30
   296b0:	add	ip, r0, r3, lsl #2
   296b4:	cmp	r9, #1
   296b8:	bne	341c8 <GetDataSlab+0x11d8c>
   296bc:	ldr	r0, [sp, #52]	; 0x34
   296c0:	cmp	r0, #1
   296c4:	ldr	sl, [sp, #44]	; 0x2c
   296c8:	blt	3ae3c <GetDataSlab+0x18a00>
   296cc:	ldr	r0, [fp, #12]
   296d0:	add	r8, r0, #4
   296d4:	add	r9, r4, #4
   296d8:	add	r0, sp, #104	; 0x68
   296dc:	orr	r6, r0, #4
   296e0:	sub	r0, fp, #72	; 0x48
   296e4:	orr	r0, r0, #4
   296e8:	str	r0, [sp, #36]	; 0x24
   296ec:	lsl	r0, sl, #1
   296f0:	str	r0, [sp, #48]	; 0x30
   296f4:	mov	lr, #0
   296f8:	cmp	sl, #1
   296fc:	blt	29720 <GetDataSlab+0x72e4>
   29700:	ldr	r0, [fp, #12]
   29704:	ldr	r0, [r0]
   29708:	add	r0, ip, r0, lsl #2
   2970c:	ldr	r2, [sp, #60]	; 0x3c
   29710:	ldr	r4, [r0], #4
   29714:	strh	r4, [r2], #2
   29718:	subs	sl, sl, #1
   2971c:	bne	29710 <GetDataSlab+0x72d4>
   29720:	ldr	r0, [sp, #40]	; 0x28
   29724:	add	ip, ip, r0, lsl #2
   29728:	add	r3, r3, r0
   2972c:	ldr	r0, [fp, #24]
   29730:	cmp	r0, #2
   29734:	add	r5, sp, #64	; 0x40
   29738:	blt	297e0 <GetDataSlab+0x73a4>
   2973c:	mov	r2, #0
   29740:	mov	sl, #0
   29744:	mov	r0, r2
   29748:	ldr	r2, [r6, r2, lsl #2]
   2974c:	add	r2, r2, #1
   29750:	str	r2, [r6, r0, lsl #2]
   29754:	ldr	r4, [r9, r0, lsl #2]
   29758:	sdiv	r1, r2, r4
   2975c:	mls	r1, r1, r4, r2
   29760:	cmp	r1, #0
   29764:	bne	297d0 <GetDataSlab+0x7394>
   29768:	str	sl, [r6, r0, lsl #2]
   2976c:	add	r1, r5, r0, lsl #2
   29770:	ldr	r2, [r1, #4]
   29774:	sdiv	r1, r3, r2
   29778:	mls	r4, r1, r2, r3
   2977c:	cmp	r4, #0
   29780:	beq	2979c <GetDataSlab+0x7360>
   29784:	ldr	r1, [r5, r0, lsl #2]
   29788:	ldr	r7, [r8, r0, lsl #2]
   2978c:	sub	r2, r2, r4
   29790:	mla	r1, r7, r1, r2
   29794:	add	r3, r1, r3
   29798:	b	297b4 <GetDataSlab+0x7378>
   2979c:	ldr	r2, [r8, r0, lsl #2]
   297a0:	cmp	r2, #0
   297a4:	beq	297b8 <GetDataSlab+0x737c>
   297a8:	ldr	r1, [r5, r0, lsl #2]
   297ac:	mla	r3, r1, r2, r3
   297b0:	mul	r1, r1, r2
   297b4:	add	ip, ip, r1, lsl #2
   297b8:	add	r2, r0, #1
   297bc:	add	r0, r0, #2
   297c0:	ldr	r1, [fp, #24]
   297c4:	cmp	r0, r1
   297c8:	blt	29744 <GetDataSlab+0x7308>
   297cc:	b	297e0 <GetDataSlab+0x73a4>
   297d0:	ldr	r1, [sp, #36]	; 0x24
   297d4:	ldr	r0, [r1, r0, lsl #2]
   297d8:	add	ip, ip, r0, lsl #2
   297dc:	add	r3, r0, r3
   297e0:	ldr	r0, [sp, #60]	; 0x3c
   297e4:	ldr	r1, [sp, #48]	; 0x30
   297e8:	add	r0, r0, r1
   297ec:	str	r0, [sp, #60]	; 0x3c
   297f0:	ldr	sl, [sp, #44]	; 0x2c
   297f4:	add	lr, lr, sl
   297f8:	mov	r0, #0
   297fc:	ldr	r1, [sp, #52]	; 0x34
   29800:	cmp	lr, r1
   29804:	blt	296f8 <GetDataSlab+0x72bc>
   29808:	b	22560 <GetDataSlab+0x124>
   2980c:	ldr	r9, [lr]
   29810:	sub	r0, r9, #1
   29814:	str	r0, [fp, #-72]	; 0xffffffb8
   29818:	ldr	r0, [r8]
   2981c:	str	r0, [sp, #40]	; 0x28
   29820:	str	r0, [sp, #64]	; 0x40
   29824:	ldr	r1, [r4]
   29828:	mov	r3, #0
   2982c:	ldr	r0, [fp, #24]
   29830:	cmp	r0, #2
   29834:	str	r1, [sp, #44]	; 0x2c
   29838:	str	r1, [sp, #52]	; 0x34
   2983c:	blt	298d4 <GetDataSlab+0x7498>
   29840:	mov	r1, #1
   29844:	mov	r3, #0
   29848:	mov	r2, r8
   2984c:	ldr	r0, [sp, #44]	; 0x2c
   29850:	str	r0, [sp, #52]	; 0x34
   29854:	ldr	r0, [lr, r1, lsl #2]
   29858:	sub	r7, r0, #1
   2985c:	str	r7, [ip, r1, lsl #2]
   29860:	sub	lr, r1, #1
   29864:	ldr	r4, [r8, lr, lsl #2]
   29868:	str	r4, [sl, r1, lsl #2]
   2986c:	mov	r0, #0
   29870:	mov	r6, r2
   29874:	ldr	r5, [r6, -r0, lsl #2]!
   29878:	mul	r7, r7, r5
   2987c:	ldr	r5, [r6, #4]
   29880:	mul	r4, r5, r4
   29884:	add	r0, r0, #1
   29888:	cmp	r1, r0
   2988c:	bne	29870 <GetDataSlab+0x7434>
   29890:	str	r4, [sl, r1, lsl #2]
   29894:	str	r7, [ip, r1, lsl #2]
   29898:	ldr	r0, [sl, lr, lsl #2]
   2989c:	ldr	r7, [fp, #12]
   298a0:	ldr	r7, [r7, r1, lsl #2]
   298a4:	mla	r3, r7, r0, r3
   298a8:	ldr	r4, [fp, #20]
   298ac:	ldr	r0, [r4, r1, lsl #2]
   298b0:	ldr	r7, [sp, #52]	; 0x34
   298b4:	mul	r7, r0, r7
   298b8:	str	r7, [sp, #52]	; 0x34
   298bc:	add	r2, r2, #4
   298c0:	add	r1, r1, #1
   298c4:	ldr	r0, [fp, #24]
   298c8:	cmp	r1, r0
   298cc:	ldr	lr, [fp, #16]
   298d0:	bne	29854 <GetDataSlab+0x7418>
   298d4:	ldr	r0, [sp, #48]	; 0x30
   298d8:	add	ip, r0, r3, lsl #2
   298dc:	cmp	r9, #1
   298e0:	bne	34364 <GetDataSlab+0x11f28>
   298e4:	ldr	r0, [sp, #52]	; 0x34
   298e8:	cmp	r0, #1
   298ec:	ldr	sl, [sp, #44]	; 0x2c
   298f0:	blt	3ae3c <GetDataSlab+0x18a00>
   298f4:	ldr	r0, [fp, #12]
   298f8:	add	r8, r0, #4
   298fc:	add	r9, r4, #4
   29900:	add	r0, sp, #104	; 0x68
   29904:	orr	r6, r0, #4
   29908:	sub	r0, fp, #72	; 0x48
   2990c:	orr	r0, r0, #4
   29910:	str	r0, [sp, #36]	; 0x24
   29914:	lsl	r0, sl, #1
   29918:	str	r0, [sp, #48]	; 0x30
   2991c:	mov	lr, #0
   29920:	cmp	sl, #1
   29924:	blt	29948 <GetDataSlab+0x750c>
   29928:	ldr	r0, [fp, #12]
   2992c:	ldr	r0, [r0]
   29930:	add	r0, ip, r0, lsl #2
   29934:	ldr	r2, [sp, #60]	; 0x3c
   29938:	ldr	r4, [r0], #4
   2993c:	strh	r4, [r2], #2
   29940:	subs	sl, sl, #1
   29944:	bne	29938 <GetDataSlab+0x74fc>
   29948:	ldr	r0, [sp, #40]	; 0x28
   2994c:	add	ip, ip, r0, lsl #2
   29950:	add	r3, r3, r0
   29954:	ldr	r0, [fp, #24]
   29958:	cmp	r0, #2
   2995c:	add	r5, sp, #64	; 0x40
   29960:	blt	29a08 <GetDataSlab+0x75cc>
   29964:	mov	r2, #0
   29968:	mov	sl, #0
   2996c:	mov	r0, r2
   29970:	ldr	r2, [r6, r2, lsl #2]
   29974:	add	r2, r2, #1
   29978:	str	r2, [r6, r0, lsl #2]
   2997c:	ldr	r4, [r9, r0, lsl #2]
   29980:	sdiv	r1, r2, r4
   29984:	mls	r1, r1, r4, r2
   29988:	cmp	r1, #0
   2998c:	bne	299f8 <GetDataSlab+0x75bc>
   29990:	str	sl, [r6, r0, lsl #2]
   29994:	add	r1, r5, r0, lsl #2
   29998:	ldr	r2, [r1, #4]
   2999c:	sdiv	r1, r3, r2
   299a0:	mls	r4, r1, r2, r3
   299a4:	cmp	r4, #0
   299a8:	beq	299c4 <GetDataSlab+0x7588>
   299ac:	ldr	r1, [r5, r0, lsl #2]
   299b0:	ldr	r7, [r8, r0, lsl #2]
   299b4:	sub	r2, r2, r4
   299b8:	mla	r1, r7, r1, r2
   299bc:	add	r3, r1, r3
   299c0:	b	299dc <GetDataSlab+0x75a0>
   299c4:	ldr	r2, [r8, r0, lsl #2]
   299c8:	cmp	r2, #0
   299cc:	beq	299e0 <GetDataSlab+0x75a4>
   299d0:	ldr	r1, [r5, r0, lsl #2]
   299d4:	mla	r3, r1, r2, r3
   299d8:	mul	r1, r1, r2
   299dc:	add	ip, ip, r1, lsl #2
   299e0:	add	r2, r0, #1
   299e4:	add	r0, r0, #2
   299e8:	ldr	r1, [fp, #24]
   299ec:	cmp	r0, r1
   299f0:	blt	2996c <GetDataSlab+0x7530>
   299f4:	b	29a08 <GetDataSlab+0x75cc>
   299f8:	ldr	r1, [sp, #36]	; 0x24
   299fc:	ldr	r0, [r1, r0, lsl #2]
   29a00:	add	ip, ip, r0, lsl #2
   29a04:	add	r3, r0, r3
   29a08:	ldr	r0, [sp, #60]	; 0x3c
   29a0c:	ldr	r1, [sp, #48]	; 0x30
   29a10:	add	r0, r0, r1
   29a14:	str	r0, [sp, #60]	; 0x3c
   29a18:	ldr	sl, [sp, #44]	; 0x2c
   29a1c:	add	lr, lr, sl
   29a20:	mov	r0, #0
   29a24:	ldr	r1, [sp, #52]	; 0x34
   29a28:	cmp	lr, r1
   29a2c:	blt	29920 <GetDataSlab+0x74e4>
   29a30:	b	22560 <GetDataSlab+0x124>
   29a34:	mov	r5, ip
   29a38:	ldr	ip, [lr]
   29a3c:	sub	r0, ip, #1
   29a40:	str	r0, [fp, #-72]	; 0xffffffb8
   29a44:	ldr	r0, [r8]
   29a48:	str	r0, [sp, #40]	; 0x28
   29a4c:	str	r0, [sp, #64]	; 0x40
   29a50:	ldr	r1, [r4]
   29a54:	mov	r2, #0
   29a58:	ldr	r0, [fp, #24]
   29a5c:	cmp	r0, #2
   29a60:	str	r1, [sp, #44]	; 0x2c
   29a64:	str	r1, [sp, #52]	; 0x34
   29a68:	blt	29b00 <GetDataSlab+0x76c4>
   29a6c:	mov	r1, #1
   29a70:	mov	r2, #0
   29a74:	ldr	r6, [fp, #8]
   29a78:	ldr	r0, [sp, #44]	; 0x2c
   29a7c:	str	r0, [sp, #52]	; 0x34
   29a80:	ldr	r0, [lr, r1, lsl #2]
   29a84:	sub	r7, r0, #1
   29a88:	str	r7, [r5, r1, lsl #2]
   29a8c:	sub	r8, r1, #1
   29a90:	ldr	r0, [fp, #8]
   29a94:	ldr	r4, [r0, r8, lsl #2]
   29a98:	str	r4, [sl, r1, lsl #2]
   29a9c:	mov	r0, #0
   29aa0:	mov	r3, r6
   29aa4:	ldr	r5, [r3, -r0, lsl #2]!
   29aa8:	mul	r7, r7, r5
   29aac:	ldr	r3, [r3, #4]
   29ab0:	mul	r4, r3, r4
   29ab4:	add	r0, r0, #1
   29ab8:	cmp	r1, r0
   29abc:	bne	29aa0 <GetDataSlab+0x7664>
   29ac0:	str	r4, [sl, r1, lsl #2]
   29ac4:	sub	r5, fp, #72	; 0x48
   29ac8:	str	r7, [r5, r1, lsl #2]
   29acc:	ldr	r0, [sl, r8, lsl #2]
   29ad0:	ldr	r3, [r9, r1, lsl #2]
   29ad4:	mla	r2, r3, r0, r2
   29ad8:	ldr	r4, [fp, #20]
   29adc:	ldr	r0, [r4, r1, lsl #2]
   29ae0:	ldr	r3, [sp, #52]	; 0x34
   29ae4:	mul	r3, r0, r3
   29ae8:	str	r3, [sp, #52]	; 0x34
   29aec:	add	r6, r6, #4
   29af0:	add	r1, r1, #1
   29af4:	ldr	r0, [fp, #24]
   29af8:	cmp	r1, r0
   29afc:	bne	29a80 <GetDataSlab+0x7644>
   29b00:	ldr	r0, [sp, #48]	; 0x30
   29b04:	add	sl, r0, r2, lsl #2
   29b08:	cmp	ip, #1
   29b0c:	bne	34500 <GetDataSlab+0x120c4>
   29b10:	ldr	r0, [sp, #52]	; 0x34
   29b14:	cmp	r0, #1
   29b18:	ldr	r1, [sp, #44]	; 0x2c
   29b1c:	blt	3ae3c <GetDataSlab+0x18a00>
   29b20:	add	lr, r4, #4
   29b24:	add	r0, sp, #104	; 0x68
   29b28:	orr	r6, r0, #4
   29b2c:	sub	r0, fp, #72	; 0x48
   29b30:	orr	r0, r0, #4
   29b34:	str	r0, [sp, #32]
   29b38:	lsl	r0, r1, #1
   29b3c:	str	r0, [sp, #48]	; 0x30
   29b40:	ldr	r0, [r9], #4
   29b44:	str	r0, [sp, #36]	; 0x24
   29b48:	str	r9, [sp, #56]	; 0x38
   29b4c:	mov	ip, #0
   29b50:	ldr	r5, [sp, #56]	; 0x38
   29b54:	cmp	r1, #1
   29b58:	blt	29b88 <GetDataSlab+0x774c>
   29b5c:	ldr	r0, [sp, #36]	; 0x24
   29b60:	add	r0, sl, r0, lsl #2
   29b64:	mov	r9, r1
   29b68:	ldr	r8, [sp, #60]	; 0x3c
   29b6c:	vldr	s0, [r0]
   29b70:	vcvt.s32.f32	s0, s0
   29b74:	vmov	r3, s0
   29b78:	strh	r3, [r8], #2
   29b7c:	subs	r9, r9, #1
   29b80:	add	r0, r0, #4
   29b84:	bne	29b6c <GetDataSlab+0x7730>
   29b88:	ldr	r0, [sp, #40]	; 0x28
   29b8c:	add	sl, sl, r0, lsl #2
   29b90:	add	r2, r2, r0
   29b94:	ldr	r0, [fp, #24]
   29b98:	cmp	r0, #2
   29b9c:	blt	29c4c <GetDataSlab+0x7810>
   29ba0:	mov	r4, #0
   29ba4:	mov	r8, #0
   29ba8:	mov	r0, r4
   29bac:	ldr	r3, [r6, r4, lsl #2]
   29bb0:	add	r3, r3, #1
   29bb4:	str	r3, [r6, r4, lsl #2]
   29bb8:	ldr	r4, [lr, r4, lsl #2]
   29bbc:	sdiv	r1, r3, r4
   29bc0:	mls	r1, r1, r4, r3
   29bc4:	cmp	r1, #0
   29bc8:	bne	29c3c <GetDataSlab+0x7800>
   29bcc:	str	r8, [r6, r0, lsl #2]
   29bd0:	add	r7, sp, #64	; 0x40
   29bd4:	add	r1, r7, r0, lsl #2
   29bd8:	ldr	r4, [r1, #4]
   29bdc:	sdiv	r1, r2, r4
   29be0:	mls	r3, r1, r4, r2
   29be4:	cmp	r3, #0
   29be8:	beq	29c04 <GetDataSlab+0x77c8>
   29bec:	ldr	r1, [r7, r0, lsl #2]
   29bf0:	ldr	r7, [r5, r0, lsl #2]
   29bf4:	sub	r3, r4, r3
   29bf8:	mla	r1, r7, r1, r3
   29bfc:	add	r2, r1, r2
   29c00:	b	29c20 <GetDataSlab+0x77e4>
   29c04:	ldr	r3, [r5, r0, lsl #2]
   29c08:	cmp	r3, #0
   29c0c:	beq	29c24 <GetDataSlab+0x77e8>
   29c10:	add	r1, sp, #64	; 0x40
   29c14:	ldr	r1, [r1, r0, lsl #2]
   29c18:	mla	r2, r1, r3, r2
   29c1c:	mul	r1, r1, r3
   29c20:	add	sl, sl, r1, lsl #2
   29c24:	add	r4, r0, #1
   29c28:	add	r0, r0, #2
   29c2c:	ldr	r1, [fp, #24]
   29c30:	cmp	r0, r1
   29c34:	blt	29ba8 <GetDataSlab+0x776c>
   29c38:	b	29c4c <GetDataSlab+0x7810>
   29c3c:	ldr	r1, [sp, #32]
   29c40:	ldr	r0, [r1, r0, lsl #2]
   29c44:	add	sl, sl, r0, lsl #2
   29c48:	add	r2, r0, r2
   29c4c:	ldr	r0, [sp, #60]	; 0x3c
   29c50:	ldr	r1, [sp, #48]	; 0x30
   29c54:	add	r0, r0, r1
   29c58:	str	r0, [sp, #60]	; 0x3c
   29c5c:	ldr	r1, [sp, #44]	; 0x2c
   29c60:	add	ip, ip, r1
   29c64:	mov	r0, #0
   29c68:	ldr	r3, [sp, #52]	; 0x34
   29c6c:	cmp	ip, r3
   29c70:	blt	29b54 <GetDataSlab+0x7718>
   29c74:	b	22560 <GetDataSlab+0x124>
   29c78:	mov	r5, ip
   29c7c:	ldr	ip, [lr]
   29c80:	sub	r0, ip, #1
   29c84:	str	r0, [fp, #-72]	; 0xffffffb8
   29c88:	ldr	r0, [r8]
   29c8c:	str	r0, [sp, #40]	; 0x28
   29c90:	str	r0, [sp, #64]	; 0x40
   29c94:	ldr	r1, [r4]
   29c98:	mov	r2, #0
   29c9c:	ldr	r0, [fp, #24]
   29ca0:	cmp	r0, #2
   29ca4:	str	r1, [sp, #44]	; 0x2c
   29ca8:	str	r1, [sp, #52]	; 0x34
   29cac:	blt	29d44 <GetDataSlab+0x7908>
   29cb0:	mov	r1, #1
   29cb4:	mov	r2, #0
   29cb8:	ldr	r6, [fp, #8]
   29cbc:	ldr	r0, [sp, #44]	; 0x2c
   29cc0:	str	r0, [sp, #52]	; 0x34
   29cc4:	ldr	r0, [lr, r1, lsl #2]
   29cc8:	sub	r7, r0, #1
   29ccc:	str	r7, [r5, r1, lsl #2]
   29cd0:	sub	r8, r1, #1
   29cd4:	ldr	r0, [fp, #8]
   29cd8:	ldr	r4, [r0, r8, lsl #2]
   29cdc:	str	r4, [sl, r1, lsl #2]
   29ce0:	mov	r0, #0
   29ce4:	mov	r3, r6
   29ce8:	ldr	r5, [r3, -r0, lsl #2]!
   29cec:	mul	r7, r7, r5
   29cf0:	ldr	r3, [r3, #4]
   29cf4:	mul	r4, r3, r4
   29cf8:	add	r0, r0, #1
   29cfc:	cmp	r1, r0
   29d00:	bne	29ce4 <GetDataSlab+0x78a8>
   29d04:	str	r4, [sl, r1, lsl #2]
   29d08:	sub	r5, fp, #72	; 0x48
   29d0c:	str	r7, [r5, r1, lsl #2]
   29d10:	ldr	r0, [sl, r8, lsl #2]
   29d14:	ldr	r3, [r9, r1, lsl #2]
   29d18:	mla	r2, r3, r0, r2
   29d1c:	ldr	r4, [fp, #20]
   29d20:	ldr	r0, [r4, r1, lsl #2]
   29d24:	ldr	r3, [sp, #52]	; 0x34
   29d28:	mul	r3, r0, r3
   29d2c:	str	r3, [sp, #52]	; 0x34
   29d30:	add	r6, r6, #4
   29d34:	add	r1, r1, #1
   29d38:	ldr	r0, [fp, #24]
   29d3c:	cmp	r1, r0
   29d40:	bne	29cc4 <GetDataSlab+0x7888>
   29d44:	ldr	r0, [sp, #48]	; 0x30
   29d48:	add	sl, r0, r2, lsl #3
   29d4c:	cmp	ip, #1
   29d50:	bne	34698 <GetDataSlab+0x1225c>
   29d54:	ldr	r0, [sp, #52]	; 0x34
   29d58:	cmp	r0, #1
   29d5c:	ldr	r1, [sp, #44]	; 0x2c
   29d60:	blt	3ae3c <GetDataSlab+0x18a00>
   29d64:	add	lr, r4, #4
   29d68:	add	r0, sp, #104	; 0x68
   29d6c:	orr	r6, r0, #4
   29d70:	sub	r0, fp, #72	; 0x48
   29d74:	orr	r0, r0, #4
   29d78:	str	r0, [sp, #32]
   29d7c:	lsl	r0, r1, #1
   29d80:	str	r0, [sp, #48]	; 0x30
   29d84:	ldr	r0, [r9], #4
   29d88:	str	r0, [sp, #36]	; 0x24
   29d8c:	str	r9, [sp, #56]	; 0x38
   29d90:	mov	ip, #0
   29d94:	ldr	r5, [sp, #56]	; 0x38
   29d98:	cmp	r1, #1
   29d9c:	blt	29dcc <GetDataSlab+0x7990>
   29da0:	ldr	r0, [sp, #36]	; 0x24
   29da4:	add	r0, sl, r0, lsl #3
   29da8:	mov	r9, r1
   29dac:	ldr	r8, [sp, #60]	; 0x3c
   29db0:	vldr	d16, [r0]
   29db4:	vcvt.s32.f64	s0, d16
   29db8:	vmov	r3, s0
   29dbc:	strh	r3, [r8], #2
   29dc0:	subs	r9, r9, #1
   29dc4:	add	r0, r0, #8
   29dc8:	bne	29db0 <GetDataSlab+0x7974>
   29dcc:	ldr	r0, [sp, #40]	; 0x28
   29dd0:	add	sl, sl, r0, lsl #3
   29dd4:	add	r2, r2, r0
   29dd8:	ldr	r0, [fp, #24]
   29ddc:	cmp	r0, #2
   29de0:	blt	29e90 <GetDataSlab+0x7a54>
   29de4:	mov	r4, #0
   29de8:	mov	r8, #0
   29dec:	mov	r0, r4
   29df0:	ldr	r3, [r6, r4, lsl #2]
   29df4:	add	r3, r3, #1
   29df8:	str	r3, [r6, r4, lsl #2]
   29dfc:	ldr	r4, [lr, r4, lsl #2]
   29e00:	sdiv	r1, r3, r4
   29e04:	mls	r1, r1, r4, r3
   29e08:	cmp	r1, #0
   29e0c:	bne	29e80 <GetDataSlab+0x7a44>
   29e10:	str	r8, [r6, r0, lsl #2]
   29e14:	add	r7, sp, #64	; 0x40
   29e18:	add	r1, r7, r0, lsl #2
   29e1c:	ldr	r4, [r1, #4]
   29e20:	sdiv	r1, r2, r4
   29e24:	mls	r3, r1, r4, r2
   29e28:	cmp	r3, #0
   29e2c:	beq	29e48 <GetDataSlab+0x7a0c>
   29e30:	ldr	r1, [r7, r0, lsl #2]
   29e34:	ldr	r7, [r5, r0, lsl #2]
   29e38:	sub	r3, r4, r3
   29e3c:	mla	r1, r7, r1, r3
   29e40:	add	r2, r1, r2
   29e44:	b	29e64 <GetDataSlab+0x7a28>
   29e48:	ldr	r3, [r5, r0, lsl #2]
   29e4c:	cmp	r3, #0
   29e50:	beq	29e68 <GetDataSlab+0x7a2c>
   29e54:	add	r1, sp, #64	; 0x40
   29e58:	ldr	r1, [r1, r0, lsl #2]
   29e5c:	mla	r2, r1, r3, r2
   29e60:	mul	r1, r1, r3
   29e64:	add	sl, sl, r1, lsl #3
   29e68:	add	r4, r0, #1
   29e6c:	add	r0, r0, #2
   29e70:	ldr	r1, [fp, #24]
   29e74:	cmp	r0, r1
   29e78:	blt	29dec <GetDataSlab+0x79b0>
   29e7c:	b	29e90 <GetDataSlab+0x7a54>
   29e80:	ldr	r1, [sp, #32]
   29e84:	ldr	r0, [r1, r0, lsl #2]
   29e88:	add	sl, sl, r0, lsl #3
   29e8c:	add	r2, r0, r2
   29e90:	ldr	r0, [sp, #60]	; 0x3c
   29e94:	ldr	r1, [sp, #48]	; 0x30
   29e98:	add	r0, r0, r1
   29e9c:	str	r0, [sp, #60]	; 0x3c
   29ea0:	ldr	r1, [sp, #44]	; 0x2c
   29ea4:	add	ip, ip, r1
   29ea8:	mov	r0, #0
   29eac:	ldr	r3, [sp, #52]	; 0x34
   29eb0:	cmp	ip, r3
   29eb4:	blt	29d98 <GetDataSlab+0x795c>
   29eb8:	b	22560 <GetDataSlab+0x124>
   29ebc:	mov	r5, ip
   29ec0:	ldr	ip, [lr]
   29ec4:	sub	r0, ip, #1
   29ec8:	str	r0, [fp, #-72]	; 0xffffffb8
   29ecc:	ldr	r0, [r8]
   29ed0:	str	r0, [sp, #36]	; 0x24
   29ed4:	str	r0, [sp, #64]	; 0x40
   29ed8:	ldr	r2, [r4]
   29edc:	mov	r1, #0
   29ee0:	ldr	r0, [fp, #24]
   29ee4:	cmp	r0, #2
   29ee8:	str	r2, [sp, #40]	; 0x28
   29eec:	str	r2, [sp, #44]	; 0x2c
   29ef0:	blt	29f88 <GetDataSlab+0x7b4c>
   29ef4:	mov	r0, #1
   29ef8:	mov	r1, #0
   29efc:	mov	r3, r8
   29f00:	ldr	r2, [sp, #40]	; 0x28
   29f04:	str	r2, [sp, #44]	; 0x2c
   29f08:	ldr	r2, [lr, r0, lsl #2]
   29f0c:	sub	r4, r2, #1
   29f10:	str	r4, [r5, r0, lsl #2]
   29f14:	sub	lr, r0, #1
   29f18:	ldr	r6, [r8, lr, lsl #2]
   29f1c:	str	r6, [sl, r0, lsl #2]
   29f20:	mov	r7, #0
   29f24:	mov	r2, r3
   29f28:	ldr	r5, [r2, -r7, lsl #2]!
   29f2c:	mul	r4, r4, r5
   29f30:	ldr	r2, [r2, #4]
   29f34:	mul	r6, r2, r6
   29f38:	add	r7, r7, #1
   29f3c:	cmp	r0, r7
   29f40:	bne	29f24 <GetDataSlab+0x7ae8>
   29f44:	str	r6, [sl, r0, lsl #2]
   29f48:	sub	r5, fp, #72	; 0x48
   29f4c:	str	r4, [r5, r0, lsl #2]
   29f50:	ldr	r2, [sl, lr, lsl #2]
   29f54:	ldr	r7, [r9, r0, lsl #2]
   29f58:	mla	r1, r7, r2, r1
   29f5c:	ldr	r4, [fp, #20]
   29f60:	ldr	r2, [r4, r0, lsl #2]
   29f64:	ldr	r7, [sp, #44]	; 0x2c
   29f68:	mul	r7, r2, r7
   29f6c:	str	r7, [sp, #44]	; 0x2c
   29f70:	add	r3, r3, #4
   29f74:	add	r0, r0, #1
   29f78:	ldr	r2, [fp, #24]
   29f7c:	cmp	r0, r2
   29f80:	ldr	lr, [fp, #16]
   29f84:	bne	29f08 <GetDataSlab+0x7acc>
   29f88:	ldr	r0, [sp, #48]	; 0x30
   29f8c:	add	r3, r0, r1, lsl #3
   29f90:	cmp	ip, #1
   29f94:	bne	34830 <GetDataSlab+0x123f4>
   29f98:	ldr	r0, [sp, #44]	; 0x2c
   29f9c:	cmp	r0, #1
   29fa0:	ldr	r2, [sp, #40]	; 0x28
   29fa4:	blt	39e84 <GetDataSlab+0x17a48>
   29fa8:	add	r8, r4, #4
   29fac:	add	r0, sp, #104	; 0x68
   29fb0:	orr	r4, r0, #4
   29fb4:	sub	r0, fp, #72	; 0x48
   29fb8:	orr	r0, r0, #4
   29fbc:	str	r0, [sp, #24]
   29fc0:	lsl	r0, r2, #1
   29fc4:	str	r0, [sp, #32]
   29fc8:	mov	sl, r9
   29fcc:	ldr	r0, [sl], #4
   29fd0:	str	r0, [sp, #28]
   29fd4:	ldr	ip, [sp, #60]	; 0x3c
   29fd8:	mov	r9, #0
   29fdc:	cmp	r2, #1
   29fe0:	blt	2a004 <GetDataSlab+0x7bc8>
   29fe4:	ldr	r0, [sp, #28]
   29fe8:	add	r7, r3, r0, lsl #3
   29fec:	ldr	lr, [sp, #40]	; 0x28
   29ff0:	mov	r0, ip
   29ff4:	ldrh	r2, [r7], #8
   29ff8:	strh	r2, [r0], #2
   29ffc:	subs	lr, lr, #1
   2a000:	bne	29ff4 <GetDataSlab+0x7bb8>
   2a004:	ldr	r0, [sp, #36]	; 0x24
   2a008:	add	r3, r3, r0, lsl #3
   2a00c:	add	r1, r1, r0
   2a010:	ldr	r0, [fp, #24]
   2a014:	cmp	r0, #2
   2a018:	blt	2a0bc <GetDataSlab+0x7c80>
   2a01c:	mov	r0, #0
   2a020:	ldr	lr, [fp, #16]
   2a024:	mov	r7, r0
   2a028:	ldr	r0, [r4, r0, lsl #2]
   2a02c:	add	r0, r0, #1
   2a030:	str	r0, [r4, r7, lsl #2]
   2a034:	ldr	r2, [r8, r7, lsl #2]
   2a038:	sdiv	r6, r0, r2
   2a03c:	mls	r0, r6, r2, r0
   2a040:	cmp	r0, #0
   2a044:	bne	2a0c4 <GetDataSlab+0x7c88>
   2a048:	mov	r0, #0
   2a04c:	str	r0, [r4, r7, lsl #2]
   2a050:	add	r6, sp, #64	; 0x40
   2a054:	add	r0, r6, r7, lsl #2
   2a058:	ldr	r0, [r0, #4]
   2a05c:	sdiv	r2, r1, r0
   2a060:	mls	r2, r2, r0, r1
   2a064:	cmp	r2, #0
   2a068:	beq	2a084 <GetDataSlab+0x7c48>
   2a06c:	ldr	r6, [r6, r7, lsl #2]
   2a070:	ldr	r5, [sl, r7, lsl #2]
   2a074:	sub	r0, r0, r2
   2a078:	mla	r0, r5, r6, r0
   2a07c:	add	r1, r0, r1
   2a080:	b	2a0a0 <GetDataSlab+0x7c64>
   2a084:	ldr	r0, [sl, r7, lsl #2]
   2a088:	cmp	r0, #0
   2a08c:	beq	2a0a4 <GetDataSlab+0x7c68>
   2a090:	add	r2, sp, #64	; 0x40
   2a094:	ldr	r2, [r2, r7, lsl #2]
   2a098:	mla	r1, r2, r0, r1
   2a09c:	mul	r0, r2, r0
   2a0a0:	add	r3, r3, r0, lsl #3
   2a0a4:	add	r0, r7, #1
   2a0a8:	add	r2, r7, #2
   2a0ac:	ldr	r7, [fp, #24]
   2a0b0:	cmp	r2, r7
   2a0b4:	blt	2a024 <GetDataSlab+0x7be8>
   2a0b8:	b	2a0d4 <GetDataSlab+0x7c98>
   2a0bc:	ldr	lr, [fp, #16]
   2a0c0:	b	2a0d4 <GetDataSlab+0x7c98>
   2a0c4:	ldr	r0, [sp, #24]
   2a0c8:	ldr	r0, [r0, r7, lsl #2]
   2a0cc:	add	r3, r3, r0, lsl #3
   2a0d0:	add	r1, r0, r1
   2a0d4:	ldr	r0, [sp, #32]
   2a0d8:	add	ip, ip, r0
   2a0dc:	ldr	r2, [sp, #40]	; 0x28
   2a0e0:	add	r9, r9, r2
   2a0e4:	ldr	r0, [sp, #44]	; 0x2c
   2a0e8:	cmp	r9, r0
   2a0ec:	blt	29fdc <GetDataSlab+0x7ba0>
   2a0f0:	mov	r0, #0
   2a0f4:	ldr	r4, [fp, #20]
   2a0f8:	b	39e88 <GetDataSlab+0x17a4c>
   2a0fc:	ldr	lr, [lr]
   2a100:	sub	r0, lr, #1
   2a104:	str	r0, [fp, #-72]	; 0xffffffb8
   2a108:	ldr	r0, [r8]
   2a10c:	str	r0, [sp, #40]	; 0x28
   2a110:	str	r0, [sp, #64]	; 0x40
   2a114:	ldr	r1, [r4]
   2a118:	mov	r3, #0
   2a11c:	ldr	r0, [fp, #24]
   2a120:	cmp	r0, #2
   2a124:	str	r1, [sp, #44]	; 0x2c
   2a128:	str	r1, [sp, #52]	; 0x34
   2a12c:	blt	2a1cc <GetDataSlab+0x7d90>
   2a130:	mov	r0, #1
   2a134:	mov	r3, #0
   2a138:	mov	r4, r8
   2a13c:	ldr	r1, [sp, #44]	; 0x2c
   2a140:	str	r1, [sp, #52]	; 0x34
   2a144:	ldr	r1, [fp, #16]
   2a148:	ldr	r2, [r1, r0, lsl #2]
   2a14c:	sub	r7, r2, #1
   2a150:	str	r7, [ip, r0, lsl #2]
   2a154:	sub	ip, r0, #1
   2a158:	ldr	r5, [r8, ip, lsl #2]
   2a15c:	str	r5, [sl, r0, lsl #2]
   2a160:	mov	r2, #0
   2a164:	mov	r1, r4
   2a168:	ldr	r6, [r1, -r2, lsl #2]!
   2a16c:	mul	r7, r7, r6
   2a170:	ldr	r1, [r1, #4]
   2a174:	mul	r5, r1, r5
   2a178:	add	r2, r2, #1
   2a17c:	cmp	r0, r2
   2a180:	bne	2a164 <GetDataSlab+0x7d28>
   2a184:	str	r5, [sl, r0, lsl #2]
   2a188:	sub	r1, fp, #72	; 0x48
   2a18c:	mov	r2, r1
   2a190:	str	r7, [r1, r0, lsl #2]
   2a194:	ldr	r1, [sl, ip, lsl #2]
   2a198:	mov	ip, r2
   2a19c:	ldr	r2, [r9, r0, lsl #2]
   2a1a0:	mla	r3, r2, r1, r3
   2a1a4:	ldr	r1, [fp, #20]
   2a1a8:	ldr	r1, [r1, r0, lsl #2]
   2a1ac:	ldr	r2, [sp, #52]	; 0x34
   2a1b0:	mul	r2, r1, r2
   2a1b4:	str	r2, [sp, #52]	; 0x34
   2a1b8:	add	r4, r4, #4
   2a1bc:	add	r0, r0, #1
   2a1c0:	ldr	r1, [fp, #24]
   2a1c4:	cmp	r0, r1
   2a1c8:	bne	2a144 <GetDataSlab+0x7d08>
   2a1cc:	ldr	r0, [sp, #48]	; 0x30
   2a1d0:	add	r5, r0, r3
   2a1d4:	cmp	lr, #1
   2a1d8:	bne	349bc <GetDataSlab+0x12580>
   2a1dc:	ldr	r0, [sp, #52]	; 0x34
   2a1e0:	cmp	r0, #1
   2a1e4:	ldr	r0, [fp, #20]
   2a1e8:	blt	3ae3c <GetDataSlab+0x18a00>
   2a1ec:	add	lr, r9, #4
   2a1f0:	add	sl, r0, #4
   2a1f4:	add	r0, sp, #104	; 0x68
   2a1f8:	orr	r6, r0, #4
   2a1fc:	orr	r9, ip, #4
   2a200:	ldr	r1, [sp, #44]	; 0x2c
   2a204:	lsl	r0, r1, #1
   2a208:	str	r0, [sp, #48]	; 0x30
   2a20c:	mov	r8, #0
   2a210:	cmp	r1, #1
   2a214:	ldr	r0, [fp, #12]
   2a218:	blt	2a23c <GetDataSlab+0x7e00>
   2a21c:	ldr	r0, [r0]
   2a220:	add	r0, r5, r0
   2a224:	ldr	ip, [sp, #44]	; 0x2c
   2a228:	ldr	r2, [sp, #60]	; 0x3c
   2a22c:	ldrb	r4, [r0], #1
   2a230:	strh	r4, [r2], #2
   2a234:	subs	ip, ip, #1
   2a238:	bne	2a22c <GetDataSlab+0x7df0>
   2a23c:	ldr	r0, [sp, #40]	; 0x28
   2a240:	add	r5, r5, r0
   2a244:	add	r3, r3, r0
   2a248:	ldr	r0, [fp, #24]
   2a24c:	cmp	r0, #2
   2a250:	blt	2a2f0 <GetDataSlab+0x7eb4>
   2a254:	mov	r2, #0
   2a258:	ldr	ip, [sp, #60]	; 0x3c
   2a25c:	mov	r0, r2
   2a260:	ldr	r2, [r6, r2, lsl #2]
   2a264:	add	r2, r2, #1
   2a268:	str	r2, [r6, r0, lsl #2]
   2a26c:	ldr	r4, [sl, r0, lsl #2]
   2a270:	sdiv	r1, r2, r4
   2a274:	mls	r1, r1, r4, r2
   2a278:	cmp	r1, #0
   2a27c:	bne	2a2f8 <GetDataSlab+0x7ebc>
   2a280:	mov	r1, #0
   2a284:	str	r1, [r6, r0, lsl #2]
   2a288:	add	r7, sp, #64	; 0x40
   2a28c:	add	r1, r7, r0, lsl #2
   2a290:	ldr	r2, [r1, #4]
   2a294:	sdiv	r1, r3, r2
   2a298:	mls	r4, r1, r2, r3
   2a29c:	cmp	r4, #0
   2a2a0:	beq	2a2c0 <GetDataSlab+0x7e84>
   2a2a4:	ldr	r1, [r7, r0, lsl #2]
   2a2a8:	ldr	r7, [lr, r0, lsl #2]
   2a2ac:	sub	r2, r2, r4
   2a2b0:	mla	r1, r7, r1, r2
   2a2b4:	add	r3, r1, r3
   2a2b8:	add	r5, r5, r1
   2a2bc:	b	2a2d8 <GetDataSlab+0x7e9c>
   2a2c0:	ldr	r2, [lr, r0, lsl #2]
   2a2c4:	cmp	r2, #0
   2a2c8:	addne	r1, sp, #64	; 0x40
   2a2cc:	ldrne	r1, [r1, r0, lsl #2]
   2a2d0:	mlane	r3, r1, r2, r3
   2a2d4:	mlane	r5, r1, r2, r5
   2a2d8:	add	r2, r0, #1
   2a2dc:	add	r0, r0, #2
   2a2e0:	ldr	r1, [fp, #24]
   2a2e4:	cmp	r0, r1
   2a2e8:	blt	2a25c <GetDataSlab+0x7e20>
   2a2ec:	b	2a304 <GetDataSlab+0x7ec8>
   2a2f0:	ldr	ip, [sp, #60]	; 0x3c
   2a2f4:	b	2a304 <GetDataSlab+0x7ec8>
   2a2f8:	ldr	r0, [r9, r0, lsl #2]
   2a2fc:	add	r5, r5, r0
   2a300:	add	r3, r0, r3
   2a304:	ldr	r0, [sp, #48]	; 0x30
   2a308:	add	ip, ip, r0
   2a30c:	str	ip, [sp, #60]	; 0x3c
   2a310:	ldr	r1, [sp, #44]	; 0x2c
   2a314:	add	r8, r8, r1
   2a318:	mov	r0, #0
   2a31c:	ldr	r2, [sp, #52]	; 0x34
   2a320:	cmp	r8, r2
   2a324:	blt	2a210 <GetDataSlab+0x7dd4>
   2a328:	b	22560 <GetDataSlab+0x124>
   2a32c:	mov	r1, r8
   2a330:	ldr	r8, [lr]
   2a334:	sub	r0, r8, #1
   2a338:	str	r0, [fp, #-72]	; 0xffffffb8
   2a33c:	ldr	r0, [r1]
   2a340:	str	r0, [sp, #40]	; 0x28
   2a344:	str	r0, [sp, #64]	; 0x40
   2a348:	ldr	r1, [r4]
   2a34c:	mov	r2, #0
   2a350:	ldr	r0, [fp, #24]
   2a354:	cmp	r0, #2
   2a358:	str	r1, [sp, #44]	; 0x2c
   2a35c:	str	r1, [sp, #52]	; 0x34
   2a360:	blt	2a3f8 <GetDataSlab+0x7fbc>
   2a364:	mov	r1, #1
   2a368:	mov	r2, #0
   2a36c:	ldr	r3, [fp, #8]
   2a370:	ldr	r0, [sp, #44]	; 0x2c
   2a374:	str	r0, [sp, #52]	; 0x34
   2a378:	ldr	r0, [lr, r1, lsl #2]
   2a37c:	sub	r7, r0, #1
   2a380:	str	r7, [ip, r1, lsl #2]
   2a384:	sub	r9, r1, #1
   2a388:	ldr	r0, [fp, #8]
   2a38c:	ldr	r4, [r0, r9, lsl #2]
   2a390:	str	r4, [sl, r1, lsl #2]
   2a394:	mov	r0, #0
   2a398:	mov	r6, r3
   2a39c:	ldr	r5, [r6, -r0, lsl #2]!
   2a3a0:	mul	r7, r7, r5
   2a3a4:	ldr	r5, [r6, #4]
   2a3a8:	mul	r4, r5, r4
   2a3ac:	add	r0, r0, #1
   2a3b0:	cmp	r1, r0
   2a3b4:	bne	2a398 <GetDataSlab+0x7f5c>
   2a3b8:	str	r4, [sl, r1, lsl #2]
   2a3bc:	str	r7, [ip, r1, lsl #2]
   2a3c0:	ldr	r0, [sl, r9, lsl #2]
   2a3c4:	ldr	r9, [fp, #12]
   2a3c8:	ldr	r4, [r9, r1, lsl #2]
   2a3cc:	mla	r2, r4, r0, r2
   2a3d0:	ldr	r4, [fp, #20]
   2a3d4:	ldr	r0, [r4, r1, lsl #2]
   2a3d8:	ldr	r5, [sp, #52]	; 0x34
   2a3dc:	mul	r5, r0, r5
   2a3e0:	str	r5, [sp, #52]	; 0x34
   2a3e4:	add	r3, r3, #4
   2a3e8:	add	r1, r1, #1
   2a3ec:	ldr	r0, [fp, #24]
   2a3f0:	cmp	r1, r0
   2a3f4:	bne	2a378 <GetDataSlab+0x7f3c>
   2a3f8:	ldr	r0, [sp, #48]	; 0x30
   2a3fc:	add	ip, r0, r2, lsl #1
   2a400:	cmp	r8, #1
   2a404:	bne	34b3c <GetDataSlab+0x12700>
   2a408:	ldr	r0, [sp, #52]	; 0x34
   2a40c:	cmp	r0, #1
   2a410:	ldr	r1, [sp, #44]	; 0x2c
   2a414:	blt	3ae3c <GetDataSlab+0x18a00>
   2a418:	add	sl, r4, #4
   2a41c:	add	r0, sp, #104	; 0x68
   2a420:	orr	r6, r0, #4
   2a424:	sub	r0, fp, #72	; 0x48
   2a428:	orr	r0, r0, #4
   2a42c:	str	r0, [sp, #32]
   2a430:	lsl	r0, r1, #1
   2a434:	str	r0, [sp, #48]	; 0x30
   2a438:	ldr	r0, [r9], #4
   2a43c:	str	r0, [sp, #36]	; 0x24
   2a440:	str	r9, [sp, #56]	; 0x38
   2a444:	mov	r8, #0
   2a448:	mov	lr, #0
   2a44c:	ldr	r5, [sp, #56]	; 0x38
   2a450:	cmp	r1, #1
   2a454:	blt	2a478 <GetDataSlab+0x803c>
   2a458:	ldr	r0, [sp, #36]	; 0x24
   2a45c:	add	r0, ip, r0, lsl #1
   2a460:	mov	r9, r1
   2a464:	ldr	r4, [sp, #60]	; 0x3c
   2a468:	ldrh	r3, [r0], #2
   2a46c:	strh	r3, [r4], #2
   2a470:	subs	r9, r9, #1
   2a474:	bne	2a468 <GetDataSlab+0x802c>
   2a478:	ldr	r0, [sp, #40]	; 0x28
   2a47c:	add	ip, ip, r0, lsl #1
   2a480:	add	r2, r2, r0
   2a484:	ldr	r0, [fp, #24]
   2a488:	cmp	r0, #2
   2a48c:	blt	2a538 <GetDataSlab+0x80fc>
   2a490:	mov	r4, #0
   2a494:	mov	r0, r4
   2a498:	ldr	r3, [r6, r4, lsl #2]
   2a49c:	add	r3, r3, #1
   2a4a0:	str	r3, [r6, r4, lsl #2]
   2a4a4:	ldr	r4, [sl, r4, lsl #2]
   2a4a8:	sdiv	r1, r3, r4
   2a4ac:	mls	r1, r1, r4, r3
   2a4b0:	cmp	r1, #0
   2a4b4:	bne	2a528 <GetDataSlab+0x80ec>
   2a4b8:	str	r8, [r6, r0, lsl #2]
   2a4bc:	add	r7, sp, #64	; 0x40
   2a4c0:	add	r1, r7, r0, lsl #2
   2a4c4:	ldr	r4, [r1, #4]
   2a4c8:	sdiv	r1, r2, r4
   2a4cc:	mls	r3, r1, r4, r2
   2a4d0:	cmp	r3, #0
   2a4d4:	beq	2a4f0 <GetDataSlab+0x80b4>
   2a4d8:	ldr	r1, [r7, r0, lsl #2]
   2a4dc:	ldr	r7, [r5, r0, lsl #2]
   2a4e0:	sub	r3, r4, r3
   2a4e4:	mla	r1, r7, r1, r3
   2a4e8:	add	r2, r1, r2
   2a4ec:	b	2a50c <GetDataSlab+0x80d0>
   2a4f0:	ldr	r3, [r5, r0, lsl #2]
   2a4f4:	cmp	r3, #0
   2a4f8:	beq	2a510 <GetDataSlab+0x80d4>
   2a4fc:	add	r1, sp, #64	; 0x40
   2a500:	ldr	r1, [r1, r0, lsl #2]
   2a504:	mla	r2, r1, r3, r2
   2a508:	mul	r1, r1, r3
   2a50c:	add	ip, ip, r1, lsl #1
   2a510:	add	r4, r0, #1
   2a514:	add	r0, r0, #2
   2a518:	ldr	r1, [fp, #24]
   2a51c:	cmp	r0, r1
   2a520:	blt	2a494 <GetDataSlab+0x8058>
   2a524:	b	2a538 <GetDataSlab+0x80fc>
   2a528:	ldr	r1, [sp, #32]
   2a52c:	ldr	r0, [r1, r0, lsl #2]
   2a530:	add	ip, ip, r0, lsl #1
   2a534:	add	r2, r0, r2
   2a538:	ldr	r0, [sp, #60]	; 0x3c
   2a53c:	ldr	r1, [sp, #48]	; 0x30
   2a540:	add	r0, r0, r1
   2a544:	str	r0, [sp, #60]	; 0x3c
   2a548:	ldr	r1, [sp, #44]	; 0x2c
   2a54c:	add	lr, lr, r1
   2a550:	mov	r0, #0
   2a554:	ldr	r3, [sp, #52]	; 0x34
   2a558:	cmp	lr, r3
   2a55c:	blt	2a450 <GetDataSlab+0x8014>
   2a560:	b	22560 <GetDataSlab+0x124>
   2a564:	mov	r1, r8
   2a568:	ldr	r8, [lr]
   2a56c:	sub	r0, r8, #1
   2a570:	str	r0, [fp, #-72]	; 0xffffffb8
   2a574:	ldr	r0, [r1]
   2a578:	str	r0, [sp, #40]	; 0x28
   2a57c:	str	r0, [sp, #64]	; 0x40
   2a580:	ldr	r1, [r4]
   2a584:	mov	r2, #0
   2a588:	ldr	r0, [fp, #24]
   2a58c:	cmp	r0, #2
   2a590:	str	r1, [sp, #44]	; 0x2c
   2a594:	str	r1, [sp, #52]	; 0x34
   2a598:	blt	2a630 <GetDataSlab+0x81f4>
   2a59c:	mov	r1, #1
   2a5a0:	mov	r2, #0
   2a5a4:	ldr	r3, [fp, #8]
   2a5a8:	ldr	r0, [sp, #44]	; 0x2c
   2a5ac:	str	r0, [sp, #52]	; 0x34
   2a5b0:	ldr	r0, [lr, r1, lsl #2]
   2a5b4:	sub	r7, r0, #1
   2a5b8:	str	r7, [ip, r1, lsl #2]
   2a5bc:	sub	r9, r1, #1
   2a5c0:	ldr	r0, [fp, #8]
   2a5c4:	ldr	r4, [r0, r9, lsl #2]
   2a5c8:	str	r4, [sl, r1, lsl #2]
   2a5cc:	mov	r0, #0
   2a5d0:	mov	r6, r3
   2a5d4:	ldr	r5, [r6, -r0, lsl #2]!
   2a5d8:	mul	r7, r7, r5
   2a5dc:	ldr	r5, [r6, #4]
   2a5e0:	mul	r4, r5, r4
   2a5e4:	add	r0, r0, #1
   2a5e8:	cmp	r1, r0
   2a5ec:	bne	2a5d0 <GetDataSlab+0x8194>
   2a5f0:	str	r4, [sl, r1, lsl #2]
   2a5f4:	str	r7, [ip, r1, lsl #2]
   2a5f8:	ldr	r0, [sl, r9, lsl #2]
   2a5fc:	ldr	r9, [fp, #12]
   2a600:	ldr	r4, [r9, r1, lsl #2]
   2a604:	mla	r2, r4, r0, r2
   2a608:	ldr	r4, [fp, #20]
   2a60c:	ldr	r0, [r4, r1, lsl #2]
   2a610:	ldr	r5, [sp, #52]	; 0x34
   2a614:	mul	r5, r0, r5
   2a618:	str	r5, [sp, #52]	; 0x34
   2a61c:	add	r3, r3, #4
   2a620:	add	r1, r1, #1
   2a624:	ldr	r0, [fp, #24]
   2a628:	cmp	r1, r0
   2a62c:	bne	2a5b0 <GetDataSlab+0x8174>
   2a630:	ldr	r0, [sp, #48]	; 0x30
   2a634:	add	ip, r0, r2, lsl #1
   2a638:	cmp	r8, #1
   2a63c:	bne	34cc4 <GetDataSlab+0x12888>
   2a640:	ldr	r0, [sp, #52]	; 0x34
   2a644:	cmp	r0, #1
   2a648:	ldr	r1, [sp, #44]	; 0x2c
   2a64c:	blt	3ae3c <GetDataSlab+0x18a00>
   2a650:	add	sl, r4, #4
   2a654:	add	r0, sp, #104	; 0x68
   2a658:	orr	r6, r0, #4
   2a65c:	sub	r0, fp, #72	; 0x48
   2a660:	orr	r0, r0, #4
   2a664:	str	r0, [sp, #32]
   2a668:	lsl	r0, r1, #1
   2a66c:	str	r0, [sp, #48]	; 0x30
   2a670:	ldr	r0, [r9], #4
   2a674:	str	r0, [sp, #36]	; 0x24
   2a678:	str	r9, [sp, #56]	; 0x38
   2a67c:	mov	r8, #0
   2a680:	mov	lr, #0
   2a684:	ldr	r5, [sp, #56]	; 0x38
   2a688:	cmp	r1, #1
   2a68c:	blt	2a6b0 <GetDataSlab+0x8274>
   2a690:	ldr	r0, [sp, #36]	; 0x24
   2a694:	add	r0, ip, r0, lsl #1
   2a698:	mov	r9, r1
   2a69c:	ldr	r4, [sp, #60]	; 0x3c
   2a6a0:	ldrh	r3, [r0], #2
   2a6a4:	strh	r3, [r4], #2
   2a6a8:	subs	r9, r9, #1
   2a6ac:	bne	2a6a0 <GetDataSlab+0x8264>
   2a6b0:	ldr	r0, [sp, #40]	; 0x28
   2a6b4:	add	ip, ip, r0, lsl #1
   2a6b8:	add	r2, r2, r0
   2a6bc:	ldr	r0, [fp, #24]
   2a6c0:	cmp	r0, #2
   2a6c4:	blt	2a770 <GetDataSlab+0x8334>
   2a6c8:	mov	r4, #0
   2a6cc:	mov	r0, r4
   2a6d0:	ldr	r3, [r6, r4, lsl #2]
   2a6d4:	add	r3, r3, #1
   2a6d8:	str	r3, [r6, r4, lsl #2]
   2a6dc:	ldr	r4, [sl, r4, lsl #2]
   2a6e0:	sdiv	r1, r3, r4
   2a6e4:	mls	r1, r1, r4, r3
   2a6e8:	cmp	r1, #0
   2a6ec:	bne	2a760 <GetDataSlab+0x8324>
   2a6f0:	str	r8, [r6, r0, lsl #2]
   2a6f4:	add	r7, sp, #64	; 0x40
   2a6f8:	add	r1, r7, r0, lsl #2
   2a6fc:	ldr	r4, [r1, #4]
   2a700:	sdiv	r1, r2, r4
   2a704:	mls	r3, r1, r4, r2
   2a708:	cmp	r3, #0
   2a70c:	beq	2a728 <GetDataSlab+0x82ec>
   2a710:	ldr	r1, [r7, r0, lsl #2]
   2a714:	ldr	r7, [r5, r0, lsl #2]
   2a718:	sub	r3, r4, r3
   2a71c:	mla	r1, r7, r1, r3
   2a720:	add	r2, r1, r2
   2a724:	b	2a744 <GetDataSlab+0x8308>
   2a728:	ldr	r3, [r5, r0, lsl #2]
   2a72c:	cmp	r3, #0
   2a730:	beq	2a748 <GetDataSlab+0x830c>
   2a734:	add	r1, sp, #64	; 0x40
   2a738:	ldr	r1, [r1, r0, lsl #2]
   2a73c:	mla	r2, r1, r3, r2
   2a740:	mul	r1, r1, r3
   2a744:	add	ip, ip, r1, lsl #1
   2a748:	add	r4, r0, #1
   2a74c:	add	r0, r0, #2
   2a750:	ldr	r1, [fp, #24]
   2a754:	cmp	r0, r1
   2a758:	blt	2a6cc <GetDataSlab+0x8290>
   2a75c:	b	2a770 <GetDataSlab+0x8334>
   2a760:	ldr	r1, [sp, #32]
   2a764:	ldr	r0, [r1, r0, lsl #2]
   2a768:	add	ip, ip, r0, lsl #1
   2a76c:	add	r2, r0, r2
   2a770:	ldr	r0, [sp, #60]	; 0x3c
   2a774:	ldr	r1, [sp, #48]	; 0x30
   2a778:	add	r0, r0, r1
   2a77c:	str	r0, [sp, #60]	; 0x3c
   2a780:	ldr	r1, [sp, #44]	; 0x2c
   2a784:	add	lr, lr, r1
   2a788:	mov	r0, #0
   2a78c:	ldr	r3, [sp, #52]	; 0x34
   2a790:	cmp	lr, r3
   2a794:	blt	2a688 <GetDataSlab+0x824c>
   2a798:	b	22560 <GetDataSlab+0x124>
   2a79c:	ldr	r9, [lr]
   2a7a0:	sub	r0, r9, #1
   2a7a4:	str	r0, [fp, #-72]	; 0xffffffb8
   2a7a8:	ldr	r0, [r8]
   2a7ac:	str	r0, [sp, #40]	; 0x28
   2a7b0:	str	r0, [sp, #64]	; 0x40
   2a7b4:	ldr	r1, [r4]
   2a7b8:	mov	r3, #0
   2a7bc:	ldr	r0, [fp, #24]
   2a7c0:	cmp	r0, #2
   2a7c4:	str	r1, [sp, #44]	; 0x2c
   2a7c8:	str	r1, [sp, #52]	; 0x34
   2a7cc:	blt	2a864 <GetDataSlab+0x8428>
   2a7d0:	mov	r1, #1
   2a7d4:	mov	r3, #0
   2a7d8:	mov	r2, r8
   2a7dc:	ldr	r0, [sp, #44]	; 0x2c
   2a7e0:	str	r0, [sp, #52]	; 0x34
   2a7e4:	ldr	r0, [lr, r1, lsl #2]
   2a7e8:	sub	r7, r0, #1
   2a7ec:	str	r7, [ip, r1, lsl #2]
   2a7f0:	sub	lr, r1, #1
   2a7f4:	ldr	r4, [r8, lr, lsl #2]
   2a7f8:	str	r4, [sl, r1, lsl #2]
   2a7fc:	mov	r0, #0
   2a800:	mov	r6, r2
   2a804:	ldr	r5, [r6, -r0, lsl #2]!
   2a808:	mul	r7, r7, r5
   2a80c:	ldr	r5, [r6, #4]
   2a810:	mul	r4, r5, r4
   2a814:	add	r0, r0, #1
   2a818:	cmp	r1, r0
   2a81c:	bne	2a800 <GetDataSlab+0x83c4>
   2a820:	str	r4, [sl, r1, lsl #2]
   2a824:	str	r7, [ip, r1, lsl #2]
   2a828:	ldr	r0, [sl, lr, lsl #2]
   2a82c:	ldr	r7, [fp, #12]
   2a830:	ldr	r7, [r7, r1, lsl #2]
   2a834:	mla	r3, r7, r0, r3
   2a838:	ldr	r4, [fp, #20]
   2a83c:	ldr	r0, [r4, r1, lsl #2]
   2a840:	ldr	r7, [sp, #52]	; 0x34
   2a844:	mul	r7, r0, r7
   2a848:	str	r7, [sp, #52]	; 0x34
   2a84c:	add	r2, r2, #4
   2a850:	add	r1, r1, #1
   2a854:	ldr	r0, [fp, #24]
   2a858:	cmp	r1, r0
   2a85c:	ldr	lr, [fp, #16]
   2a860:	bne	2a7e4 <GetDataSlab+0x83a8>
   2a864:	ldr	r0, [sp, #48]	; 0x30
   2a868:	add	ip, r0, r3, lsl #2
   2a86c:	cmp	r9, #1
   2a870:	bne	34e4c <GetDataSlab+0x12a10>
   2a874:	ldr	r0, [sp, #52]	; 0x34
   2a878:	cmp	r0, #1
   2a87c:	ldr	sl, [sp, #44]	; 0x2c
   2a880:	blt	3ae3c <GetDataSlab+0x18a00>
   2a884:	ldr	r0, [fp, #12]
   2a888:	add	r8, r0, #4
   2a88c:	add	r9, r4, #4
   2a890:	add	r0, sp, #104	; 0x68
   2a894:	orr	r6, r0, #4
   2a898:	sub	r0, fp, #72	; 0x48
   2a89c:	orr	r0, r0, #4
   2a8a0:	str	r0, [sp, #36]	; 0x24
   2a8a4:	lsl	r0, sl, #1
   2a8a8:	str	r0, [sp, #48]	; 0x30
   2a8ac:	mov	lr, #0
   2a8b0:	cmp	sl, #1
   2a8b4:	blt	2a8d8 <GetDataSlab+0x849c>
   2a8b8:	ldr	r0, [fp, #12]
   2a8bc:	ldr	r0, [r0]
   2a8c0:	add	r0, ip, r0, lsl #2
   2a8c4:	ldr	r2, [sp, #60]	; 0x3c
   2a8c8:	ldr	r4, [r0], #4
   2a8cc:	strh	r4, [r2], #2
   2a8d0:	subs	sl, sl, #1
   2a8d4:	bne	2a8c8 <GetDataSlab+0x848c>
   2a8d8:	ldr	r0, [sp, #40]	; 0x28
   2a8dc:	add	ip, ip, r0, lsl #2
   2a8e0:	add	r3, r3, r0
   2a8e4:	ldr	r0, [fp, #24]
   2a8e8:	cmp	r0, #2
   2a8ec:	add	r5, sp, #64	; 0x40
   2a8f0:	blt	2a998 <GetDataSlab+0x855c>
   2a8f4:	mov	r2, #0
   2a8f8:	mov	sl, #0
   2a8fc:	mov	r0, r2
   2a900:	ldr	r2, [r6, r2, lsl #2]
   2a904:	add	r2, r2, #1
   2a908:	str	r2, [r6, r0, lsl #2]
   2a90c:	ldr	r4, [r9, r0, lsl #2]
   2a910:	sdiv	r1, r2, r4
   2a914:	mls	r1, r1, r4, r2
   2a918:	cmp	r1, #0
   2a91c:	bne	2a988 <GetDataSlab+0x854c>
   2a920:	str	sl, [r6, r0, lsl #2]
   2a924:	add	r1, r5, r0, lsl #2
   2a928:	ldr	r2, [r1, #4]
   2a92c:	sdiv	r1, r3, r2
   2a930:	mls	r4, r1, r2, r3
   2a934:	cmp	r4, #0
   2a938:	beq	2a954 <GetDataSlab+0x8518>
   2a93c:	ldr	r1, [r5, r0, lsl #2]
   2a940:	ldr	r7, [r8, r0, lsl #2]
   2a944:	sub	r2, r2, r4
   2a948:	mla	r1, r7, r1, r2
   2a94c:	add	r3, r1, r3
   2a950:	b	2a96c <GetDataSlab+0x8530>
   2a954:	ldr	r2, [r8, r0, lsl #2]
   2a958:	cmp	r2, #0
   2a95c:	beq	2a970 <GetDataSlab+0x8534>
   2a960:	ldr	r1, [r5, r0, lsl #2]
   2a964:	mla	r3, r1, r2, r3
   2a968:	mul	r1, r1, r2
   2a96c:	add	ip, ip, r1, lsl #2
   2a970:	add	r2, r0, #1
   2a974:	add	r0, r0, #2
   2a978:	ldr	r1, [fp, #24]
   2a97c:	cmp	r0, r1
   2a980:	blt	2a8fc <GetDataSlab+0x84c0>
   2a984:	b	2a998 <GetDataSlab+0x855c>
   2a988:	ldr	r1, [sp, #36]	; 0x24
   2a98c:	ldr	r0, [r1, r0, lsl #2]
   2a990:	add	ip, ip, r0, lsl #2
   2a994:	add	r3, r0, r3
   2a998:	ldr	r0, [sp, #60]	; 0x3c
   2a99c:	ldr	r1, [sp, #48]	; 0x30
   2a9a0:	add	r0, r0, r1
   2a9a4:	str	r0, [sp, #60]	; 0x3c
   2a9a8:	ldr	sl, [sp, #44]	; 0x2c
   2a9ac:	add	lr, lr, sl
   2a9b0:	mov	r0, #0
   2a9b4:	ldr	r1, [sp, #52]	; 0x34
   2a9b8:	cmp	lr, r1
   2a9bc:	blt	2a8b0 <GetDataSlab+0x8474>
   2a9c0:	b	22560 <GetDataSlab+0x124>
   2a9c4:	ldr	r9, [lr]
   2a9c8:	sub	r0, r9, #1
   2a9cc:	str	r0, [fp, #-72]	; 0xffffffb8
   2a9d0:	ldr	r0, [r8]
   2a9d4:	str	r0, [sp, #40]	; 0x28
   2a9d8:	str	r0, [sp, #64]	; 0x40
   2a9dc:	ldr	r1, [r4]
   2a9e0:	mov	r3, #0
   2a9e4:	ldr	r0, [fp, #24]
   2a9e8:	cmp	r0, #2
   2a9ec:	str	r1, [sp, #44]	; 0x2c
   2a9f0:	str	r1, [sp, #52]	; 0x34
   2a9f4:	blt	2aa8c <GetDataSlab+0x8650>
   2a9f8:	mov	r1, #1
   2a9fc:	mov	r3, #0
   2aa00:	mov	r2, r8
   2aa04:	ldr	r0, [sp, #44]	; 0x2c
   2aa08:	str	r0, [sp, #52]	; 0x34
   2aa0c:	ldr	r0, [lr, r1, lsl #2]
   2aa10:	sub	r7, r0, #1
   2aa14:	str	r7, [ip, r1, lsl #2]
   2aa18:	sub	lr, r1, #1
   2aa1c:	ldr	r4, [r8, lr, lsl #2]
   2aa20:	str	r4, [sl, r1, lsl #2]
   2aa24:	mov	r0, #0
   2aa28:	mov	r6, r2
   2aa2c:	ldr	r5, [r6, -r0, lsl #2]!
   2aa30:	mul	r7, r7, r5
   2aa34:	ldr	r5, [r6, #4]
   2aa38:	mul	r4, r5, r4
   2aa3c:	add	r0, r0, #1
   2aa40:	cmp	r1, r0
   2aa44:	bne	2aa28 <GetDataSlab+0x85ec>
   2aa48:	str	r4, [sl, r1, lsl #2]
   2aa4c:	str	r7, [ip, r1, lsl #2]
   2aa50:	ldr	r0, [sl, lr, lsl #2]
   2aa54:	ldr	r7, [fp, #12]
   2aa58:	ldr	r7, [r7, r1, lsl #2]
   2aa5c:	mla	r3, r7, r0, r3
   2aa60:	ldr	r4, [fp, #20]
   2aa64:	ldr	r0, [r4, r1, lsl #2]
   2aa68:	ldr	r7, [sp, #52]	; 0x34
   2aa6c:	mul	r7, r0, r7
   2aa70:	str	r7, [sp, #52]	; 0x34
   2aa74:	add	r2, r2, #4
   2aa78:	add	r1, r1, #1
   2aa7c:	ldr	r0, [fp, #24]
   2aa80:	cmp	r1, r0
   2aa84:	ldr	lr, [fp, #16]
   2aa88:	bne	2aa0c <GetDataSlab+0x85d0>
   2aa8c:	ldr	r0, [sp, #48]	; 0x30
   2aa90:	add	ip, r0, r3, lsl #2
   2aa94:	cmp	r9, #1
   2aa98:	bne	34fe8 <GetDataSlab+0x12bac>
   2aa9c:	ldr	r0, [sp, #52]	; 0x34
   2aaa0:	cmp	r0, #1
   2aaa4:	ldr	sl, [sp, #44]	; 0x2c
   2aaa8:	blt	3ae3c <GetDataSlab+0x18a00>
   2aaac:	ldr	r0, [fp, #12]
   2aab0:	add	r8, r0, #4
   2aab4:	add	r9, r4, #4
   2aab8:	add	r0, sp, #104	; 0x68
   2aabc:	orr	r6, r0, #4
   2aac0:	sub	r0, fp, #72	; 0x48
   2aac4:	orr	r0, r0, #4
   2aac8:	str	r0, [sp, #36]	; 0x24
   2aacc:	lsl	r0, sl, #1
   2aad0:	str	r0, [sp, #48]	; 0x30
   2aad4:	mov	lr, #0
   2aad8:	cmp	sl, #1
   2aadc:	blt	2ab00 <GetDataSlab+0x86c4>
   2aae0:	ldr	r0, [fp, #12]
   2aae4:	ldr	r0, [r0]
   2aae8:	add	r0, ip, r0, lsl #2
   2aaec:	ldr	r2, [sp, #60]	; 0x3c
   2aaf0:	ldr	r4, [r0], #4
   2aaf4:	strh	r4, [r2], #2
   2aaf8:	subs	sl, sl, #1
   2aafc:	bne	2aaf0 <GetDataSlab+0x86b4>
   2ab00:	ldr	r0, [sp, #40]	; 0x28
   2ab04:	add	ip, ip, r0, lsl #2
   2ab08:	add	r3, r3, r0
   2ab0c:	ldr	r0, [fp, #24]
   2ab10:	cmp	r0, #2
   2ab14:	add	r5, sp, #64	; 0x40
   2ab18:	blt	2abc0 <GetDataSlab+0x8784>
   2ab1c:	mov	r2, #0
   2ab20:	mov	sl, #0
   2ab24:	mov	r0, r2
   2ab28:	ldr	r2, [r6, r2, lsl #2]
   2ab2c:	add	r2, r2, #1
   2ab30:	str	r2, [r6, r0, lsl #2]
   2ab34:	ldr	r4, [r9, r0, lsl #2]
   2ab38:	sdiv	r1, r2, r4
   2ab3c:	mls	r1, r1, r4, r2
   2ab40:	cmp	r1, #0
   2ab44:	bne	2abb0 <GetDataSlab+0x8774>
   2ab48:	str	sl, [r6, r0, lsl #2]
   2ab4c:	add	r1, r5, r0, lsl #2
   2ab50:	ldr	r2, [r1, #4]
   2ab54:	sdiv	r1, r3, r2
   2ab58:	mls	r4, r1, r2, r3
   2ab5c:	cmp	r4, #0
   2ab60:	beq	2ab7c <GetDataSlab+0x8740>
   2ab64:	ldr	r1, [r5, r0, lsl #2]
   2ab68:	ldr	r7, [r8, r0, lsl #2]
   2ab6c:	sub	r2, r2, r4
   2ab70:	mla	r1, r7, r1, r2
   2ab74:	add	r3, r1, r3
   2ab78:	b	2ab94 <GetDataSlab+0x8758>
   2ab7c:	ldr	r2, [r8, r0, lsl #2]
   2ab80:	cmp	r2, #0
   2ab84:	beq	2ab98 <GetDataSlab+0x875c>
   2ab88:	ldr	r1, [r5, r0, lsl #2]
   2ab8c:	mla	r3, r1, r2, r3
   2ab90:	mul	r1, r1, r2
   2ab94:	add	ip, ip, r1, lsl #2
   2ab98:	add	r2, r0, #1
   2ab9c:	add	r0, r0, #2
   2aba0:	ldr	r1, [fp, #24]
   2aba4:	cmp	r0, r1
   2aba8:	blt	2ab24 <GetDataSlab+0x86e8>
   2abac:	b	2abc0 <GetDataSlab+0x8784>
   2abb0:	ldr	r1, [sp, #36]	; 0x24
   2abb4:	ldr	r0, [r1, r0, lsl #2]
   2abb8:	add	ip, ip, r0, lsl #2
   2abbc:	add	r3, r0, r3
   2abc0:	ldr	r0, [sp, #60]	; 0x3c
   2abc4:	ldr	r1, [sp, #48]	; 0x30
   2abc8:	add	r0, r0, r1
   2abcc:	str	r0, [sp, #60]	; 0x3c
   2abd0:	ldr	sl, [sp, #44]	; 0x2c
   2abd4:	add	lr, lr, sl
   2abd8:	mov	r0, #0
   2abdc:	ldr	r1, [sp, #52]	; 0x34
   2abe0:	cmp	lr, r1
   2abe4:	blt	2aad8 <GetDataSlab+0x869c>
   2abe8:	b	22560 <GetDataSlab+0x124>
   2abec:	mov	r5, ip
   2abf0:	ldr	ip, [lr]
   2abf4:	sub	r0, ip, #1
   2abf8:	str	r0, [fp, #-72]	; 0xffffffb8
   2abfc:	ldr	r0, [r8]
   2ac00:	str	r0, [sp, #40]	; 0x28
   2ac04:	str	r0, [sp, #64]	; 0x40
   2ac08:	ldr	r1, [r4]
   2ac0c:	mov	r2, #0
   2ac10:	ldr	r0, [fp, #24]
   2ac14:	cmp	r0, #2
   2ac18:	str	r1, [sp, #44]	; 0x2c
   2ac1c:	str	r1, [sp, #52]	; 0x34
   2ac20:	blt	2acb8 <GetDataSlab+0x887c>
   2ac24:	mov	r1, #1
   2ac28:	mov	r2, #0
   2ac2c:	ldr	r6, [fp, #8]
   2ac30:	ldr	r0, [sp, #44]	; 0x2c
   2ac34:	str	r0, [sp, #52]	; 0x34
   2ac38:	ldr	r0, [lr, r1, lsl #2]
   2ac3c:	sub	r7, r0, #1
   2ac40:	str	r7, [r5, r1, lsl #2]
   2ac44:	sub	r8, r1, #1
   2ac48:	ldr	r0, [fp, #8]
   2ac4c:	ldr	r4, [r0, r8, lsl #2]
   2ac50:	str	r4, [sl, r1, lsl #2]
   2ac54:	mov	r0, #0
   2ac58:	mov	r3, r6
   2ac5c:	ldr	r5, [r3, -r0, lsl #2]!
   2ac60:	mul	r7, r7, r5
   2ac64:	ldr	r3, [r3, #4]
   2ac68:	mul	r4, r3, r4
   2ac6c:	add	r0, r0, #1
   2ac70:	cmp	r1, r0
   2ac74:	bne	2ac58 <GetDataSlab+0x881c>
   2ac78:	str	r4, [sl, r1, lsl #2]
   2ac7c:	sub	r5, fp, #72	; 0x48
   2ac80:	str	r7, [r5, r1, lsl #2]
   2ac84:	ldr	r0, [sl, r8, lsl #2]
   2ac88:	ldr	r3, [r9, r1, lsl #2]
   2ac8c:	mla	r2, r3, r0, r2
   2ac90:	ldr	r4, [fp, #20]
   2ac94:	ldr	r0, [r4, r1, lsl #2]
   2ac98:	ldr	r3, [sp, #52]	; 0x34
   2ac9c:	mul	r3, r0, r3
   2aca0:	str	r3, [sp, #52]	; 0x34
   2aca4:	add	r6, r6, #4
   2aca8:	add	r1, r1, #1
   2acac:	ldr	r0, [fp, #24]
   2acb0:	cmp	r1, r0
   2acb4:	bne	2ac38 <GetDataSlab+0x87fc>
   2acb8:	ldr	r0, [sp, #48]	; 0x30
   2acbc:	add	sl, r0, r2, lsl #2
   2acc0:	cmp	ip, #1
   2acc4:	bne	35184 <GetDataSlab+0x12d48>
   2acc8:	ldr	r0, [sp, #52]	; 0x34
   2accc:	cmp	r0, #1
   2acd0:	ldr	r1, [sp, #44]	; 0x2c
   2acd4:	blt	3ae3c <GetDataSlab+0x18a00>
   2acd8:	add	lr, r4, #4
   2acdc:	add	r0, sp, #104	; 0x68
   2ace0:	orr	r6, r0, #4
   2ace4:	sub	r0, fp, #72	; 0x48
   2ace8:	orr	r0, r0, #4
   2acec:	str	r0, [sp, #32]
   2acf0:	lsl	r0, r1, #1
   2acf4:	str	r0, [sp, #48]	; 0x30
   2acf8:	ldr	r0, [r9], #4
   2acfc:	str	r0, [sp, #36]	; 0x24
   2ad00:	str	r9, [sp, #56]	; 0x38
   2ad04:	mov	ip, #0
   2ad08:	ldr	r5, [sp, #56]	; 0x38
   2ad0c:	cmp	r1, #1
   2ad10:	blt	2ad40 <GetDataSlab+0x8904>
   2ad14:	ldr	r0, [sp, #36]	; 0x24
   2ad18:	add	r0, sl, r0, lsl #2
   2ad1c:	mov	r9, r1
   2ad20:	ldr	r8, [sp, #60]	; 0x3c
   2ad24:	vldr	s0, [r0]
   2ad28:	vcvt.u32.f32	s0, s0
   2ad2c:	vmov	r3, s0
   2ad30:	strh	r3, [r8], #2
   2ad34:	subs	r9, r9, #1
   2ad38:	add	r0, r0, #4
   2ad3c:	bne	2ad24 <GetDataSlab+0x88e8>
   2ad40:	ldr	r0, [sp, #40]	; 0x28
   2ad44:	add	sl, sl, r0, lsl #2
   2ad48:	add	r2, r2, r0
   2ad4c:	ldr	r0, [fp, #24]
   2ad50:	cmp	r0, #2
   2ad54:	blt	2ae04 <GetDataSlab+0x89c8>
   2ad58:	mov	r4, #0
   2ad5c:	mov	r8, #0
   2ad60:	mov	r0, r4
   2ad64:	ldr	r3, [r6, r4, lsl #2]
   2ad68:	add	r3, r3, #1
   2ad6c:	str	r3, [r6, r4, lsl #2]
   2ad70:	ldr	r4, [lr, r4, lsl #2]
   2ad74:	sdiv	r1, r3, r4
   2ad78:	mls	r1, r1, r4, r3
   2ad7c:	cmp	r1, #0
   2ad80:	bne	2adf4 <GetDataSlab+0x89b8>
   2ad84:	str	r8, [r6, r0, lsl #2]
   2ad88:	add	r7, sp, #64	; 0x40
   2ad8c:	add	r1, r7, r0, lsl #2
   2ad90:	ldr	r4, [r1, #4]
   2ad94:	sdiv	r1, r2, r4
   2ad98:	mls	r3, r1, r4, r2
   2ad9c:	cmp	r3, #0
   2ada0:	beq	2adbc <GetDataSlab+0x8980>
   2ada4:	ldr	r1, [r7, r0, lsl #2]
   2ada8:	ldr	r7, [r5, r0, lsl #2]
   2adac:	sub	r3, r4, r3
   2adb0:	mla	r1, r7, r1, r3
   2adb4:	add	r2, r1, r2
   2adb8:	b	2add8 <GetDataSlab+0x899c>
   2adbc:	ldr	r3, [r5, r0, lsl #2]
   2adc0:	cmp	r3, #0
   2adc4:	beq	2addc <GetDataSlab+0x89a0>
   2adc8:	add	r1, sp, #64	; 0x40
   2adcc:	ldr	r1, [r1, r0, lsl #2]
   2add0:	mla	r2, r1, r3, r2
   2add4:	mul	r1, r1, r3
   2add8:	add	sl, sl, r1, lsl #2
   2addc:	add	r4, r0, #1
   2ade0:	add	r0, r0, #2
   2ade4:	ldr	r1, [fp, #24]
   2ade8:	cmp	r0, r1
   2adec:	blt	2ad60 <GetDataSlab+0x8924>
   2adf0:	b	2ae04 <GetDataSlab+0x89c8>
   2adf4:	ldr	r1, [sp, #32]
   2adf8:	ldr	r0, [r1, r0, lsl #2]
   2adfc:	add	sl, sl, r0, lsl #2
   2ae00:	add	r2, r0, r2
   2ae04:	ldr	r0, [sp, #60]	; 0x3c
   2ae08:	ldr	r1, [sp, #48]	; 0x30
   2ae0c:	add	r0, r0, r1
   2ae10:	str	r0, [sp, #60]	; 0x3c
   2ae14:	ldr	r1, [sp, #44]	; 0x2c
   2ae18:	add	ip, ip, r1
   2ae1c:	mov	r0, #0
   2ae20:	ldr	r3, [sp, #52]	; 0x34
   2ae24:	cmp	ip, r3
   2ae28:	blt	2ad0c <GetDataSlab+0x88d0>
   2ae2c:	b	22560 <GetDataSlab+0x124>
   2ae30:	mov	r5, ip
   2ae34:	ldr	ip, [lr]
   2ae38:	sub	r0, ip, #1
   2ae3c:	str	r0, [fp, #-72]	; 0xffffffb8
   2ae40:	ldr	r0, [r8]
   2ae44:	str	r0, [sp, #40]	; 0x28
   2ae48:	str	r0, [sp, #64]	; 0x40
   2ae4c:	ldr	r1, [r4]
   2ae50:	mov	r2, #0
   2ae54:	ldr	r0, [fp, #24]
   2ae58:	cmp	r0, #2
   2ae5c:	str	r1, [sp, #44]	; 0x2c
   2ae60:	str	r1, [sp, #52]	; 0x34
   2ae64:	blt	2aefc <GetDataSlab+0x8ac0>
   2ae68:	mov	r1, #1
   2ae6c:	mov	r2, #0
   2ae70:	ldr	r6, [fp, #8]
   2ae74:	ldr	r0, [sp, #44]	; 0x2c
   2ae78:	str	r0, [sp, #52]	; 0x34
   2ae7c:	ldr	r0, [lr, r1, lsl #2]
   2ae80:	sub	r7, r0, #1
   2ae84:	str	r7, [r5, r1, lsl #2]
   2ae88:	sub	r8, r1, #1
   2ae8c:	ldr	r0, [fp, #8]
   2ae90:	ldr	r4, [r0, r8, lsl #2]
   2ae94:	str	r4, [sl, r1, lsl #2]
   2ae98:	mov	r0, #0
   2ae9c:	mov	r3, r6
   2aea0:	ldr	r5, [r3, -r0, lsl #2]!
   2aea4:	mul	r7, r7, r5
   2aea8:	ldr	r3, [r3, #4]
   2aeac:	mul	r4, r3, r4
   2aeb0:	add	r0, r0, #1
   2aeb4:	cmp	r1, r0
   2aeb8:	bne	2ae9c <GetDataSlab+0x8a60>
   2aebc:	str	r4, [sl, r1, lsl #2]
   2aec0:	sub	r5, fp, #72	; 0x48
   2aec4:	str	r7, [r5, r1, lsl #2]
   2aec8:	ldr	r0, [sl, r8, lsl #2]
   2aecc:	ldr	r3, [r9, r1, lsl #2]
   2aed0:	mla	r2, r3, r0, r2
   2aed4:	ldr	r4, [fp, #20]
   2aed8:	ldr	r0, [r4, r1, lsl #2]
   2aedc:	ldr	r3, [sp, #52]	; 0x34
   2aee0:	mul	r3, r0, r3
   2aee4:	str	r3, [sp, #52]	; 0x34
   2aee8:	add	r6, r6, #4
   2aeec:	add	r1, r1, #1
   2aef0:	ldr	r0, [fp, #24]
   2aef4:	cmp	r1, r0
   2aef8:	bne	2ae7c <GetDataSlab+0x8a40>
   2aefc:	ldr	r0, [sp, #48]	; 0x30
   2af00:	add	sl, r0, r2, lsl #3
   2af04:	cmp	ip, #1
   2af08:	bne	3531c <GetDataSlab+0x12ee0>
   2af0c:	ldr	r0, [sp, #52]	; 0x34
   2af10:	cmp	r0, #1
   2af14:	ldr	r1, [sp, #44]	; 0x2c
   2af18:	blt	3ae3c <GetDataSlab+0x18a00>
   2af1c:	add	lr, r4, #4
   2af20:	add	r0, sp, #104	; 0x68
   2af24:	orr	r6, r0, #4
   2af28:	sub	r0, fp, #72	; 0x48
   2af2c:	orr	r0, r0, #4
   2af30:	str	r0, [sp, #32]
   2af34:	lsl	r0, r1, #1
   2af38:	str	r0, [sp, #48]	; 0x30
   2af3c:	ldr	r0, [r9], #4
   2af40:	str	r0, [sp, #36]	; 0x24
   2af44:	str	r9, [sp, #56]	; 0x38
   2af48:	mov	ip, #0
   2af4c:	ldr	r5, [sp, #56]	; 0x38
   2af50:	cmp	r1, #1
   2af54:	blt	2af84 <GetDataSlab+0x8b48>
   2af58:	ldr	r0, [sp, #36]	; 0x24
   2af5c:	add	r0, sl, r0, lsl #3
   2af60:	mov	r9, r1
   2af64:	ldr	r8, [sp, #60]	; 0x3c
   2af68:	vldr	d16, [r0]
   2af6c:	vcvt.u32.f64	s0, d16
   2af70:	vmov	r3, s0
   2af74:	strh	r3, [r8], #2
   2af78:	subs	r9, r9, #1
   2af7c:	add	r0, r0, #8
   2af80:	bne	2af68 <GetDataSlab+0x8b2c>
   2af84:	ldr	r0, [sp, #40]	; 0x28
   2af88:	add	sl, sl, r0, lsl #3
   2af8c:	add	r2, r2, r0
   2af90:	ldr	r0, [fp, #24]
   2af94:	cmp	r0, #2
   2af98:	blt	2b048 <GetDataSlab+0x8c0c>
   2af9c:	mov	r4, #0
   2afa0:	mov	r8, #0
   2afa4:	mov	r0, r4
   2afa8:	ldr	r3, [r6, r4, lsl #2]
   2afac:	add	r3, r3, #1
   2afb0:	str	r3, [r6, r4, lsl #2]
   2afb4:	ldr	r4, [lr, r4, lsl #2]
   2afb8:	sdiv	r1, r3, r4
   2afbc:	mls	r1, r1, r4, r3
   2afc0:	cmp	r1, #0
   2afc4:	bne	2b038 <GetDataSlab+0x8bfc>
   2afc8:	str	r8, [r6, r0, lsl #2]
   2afcc:	add	r7, sp, #64	; 0x40
   2afd0:	add	r1, r7, r0, lsl #2
   2afd4:	ldr	r4, [r1, #4]
   2afd8:	sdiv	r1, r2, r4
   2afdc:	mls	r3, r1, r4, r2
   2afe0:	cmp	r3, #0
   2afe4:	beq	2b000 <GetDataSlab+0x8bc4>
   2afe8:	ldr	r1, [r7, r0, lsl #2]
   2afec:	ldr	r7, [r5, r0, lsl #2]
   2aff0:	sub	r3, r4, r3
   2aff4:	mla	r1, r7, r1, r3
   2aff8:	add	r2, r1, r2
   2affc:	b	2b01c <GetDataSlab+0x8be0>
   2b000:	ldr	r3, [r5, r0, lsl #2]
   2b004:	cmp	r3, #0
   2b008:	beq	2b020 <GetDataSlab+0x8be4>
   2b00c:	add	r1, sp, #64	; 0x40
   2b010:	ldr	r1, [r1, r0, lsl #2]
   2b014:	mla	r2, r1, r3, r2
   2b018:	mul	r1, r1, r3
   2b01c:	add	sl, sl, r1, lsl #3
   2b020:	add	r4, r0, #1
   2b024:	add	r0, r0, #2
   2b028:	ldr	r1, [fp, #24]
   2b02c:	cmp	r0, r1
   2b030:	blt	2afa4 <GetDataSlab+0x8b68>
   2b034:	b	2b048 <GetDataSlab+0x8c0c>
   2b038:	ldr	r1, [sp, #32]
   2b03c:	ldr	r0, [r1, r0, lsl #2]
   2b040:	add	sl, sl, r0, lsl #3
   2b044:	add	r2, r0, r2
   2b048:	ldr	r0, [sp, #60]	; 0x3c
   2b04c:	ldr	r1, [sp, #48]	; 0x30
   2b050:	add	r0, r0, r1
   2b054:	str	r0, [sp, #60]	; 0x3c
   2b058:	ldr	r1, [sp, #44]	; 0x2c
   2b05c:	add	ip, ip, r1
   2b060:	mov	r0, #0
   2b064:	ldr	r3, [sp, #52]	; 0x34
   2b068:	cmp	ip, r3
   2b06c:	blt	2af50 <GetDataSlab+0x8b14>
   2b070:	b	22560 <GetDataSlab+0x124>
   2b074:	mov	r5, ip
   2b078:	ldr	ip, [lr]
   2b07c:	sub	r0, ip, #1
   2b080:	str	r0, [fp, #-72]	; 0xffffffb8
   2b084:	ldr	r0, [r8]
   2b088:	str	r0, [sp, #36]	; 0x24
   2b08c:	str	r0, [sp, #64]	; 0x40
   2b090:	ldr	r2, [r4]
   2b094:	mov	r1, #0
   2b098:	ldr	r0, [fp, #24]
   2b09c:	cmp	r0, #2
   2b0a0:	str	r2, [sp, #40]	; 0x28
   2b0a4:	str	r2, [sp, #44]	; 0x2c
   2b0a8:	blt	2b140 <GetDataSlab+0x8d04>
   2b0ac:	mov	r0, #1
   2b0b0:	mov	r1, #0
   2b0b4:	mov	r3, r8
   2b0b8:	ldr	r2, [sp, #40]	; 0x28
   2b0bc:	str	r2, [sp, #44]	; 0x2c
   2b0c0:	ldr	r2, [lr, r0, lsl #2]
   2b0c4:	sub	r4, r2, #1
   2b0c8:	str	r4, [r5, r0, lsl #2]
   2b0cc:	sub	lr, r0, #1
   2b0d0:	ldr	r6, [r8, lr, lsl #2]
   2b0d4:	str	r6, [sl, r0, lsl #2]
   2b0d8:	mov	r7, #0
   2b0dc:	mov	r2, r3
   2b0e0:	ldr	r5, [r2, -r7, lsl #2]!
   2b0e4:	mul	r4, r4, r5
   2b0e8:	ldr	r2, [r2, #4]
   2b0ec:	mul	r6, r2, r6
   2b0f0:	add	r7, r7, #1
   2b0f4:	cmp	r0, r7
   2b0f8:	bne	2b0dc <GetDataSlab+0x8ca0>
   2b0fc:	str	r6, [sl, r0, lsl #2]
   2b100:	sub	r5, fp, #72	; 0x48
   2b104:	str	r4, [r5, r0, lsl #2]
   2b108:	ldr	r2, [sl, lr, lsl #2]
   2b10c:	ldr	r7, [r9, r0, lsl #2]
   2b110:	mla	r1, r7, r2, r1
   2b114:	ldr	r4, [fp, #20]
   2b118:	ldr	r2, [r4, r0, lsl #2]
   2b11c:	ldr	r7, [sp, #44]	; 0x2c
   2b120:	mul	r7, r2, r7
   2b124:	str	r7, [sp, #44]	; 0x2c
   2b128:	add	r3, r3, #4
   2b12c:	add	r0, r0, #1
   2b130:	ldr	r2, [fp, #24]
   2b134:	cmp	r0, r2
   2b138:	ldr	lr, [fp, #16]
   2b13c:	bne	2b0c0 <GetDataSlab+0x8c84>
   2b140:	ldr	r0, [sp, #48]	; 0x30
   2b144:	add	r3, r0, r1, lsl #3
   2b148:	cmp	ip, #1
   2b14c:	bne	354b4 <GetDataSlab+0x13078>
   2b150:	ldr	r0, [sp, #44]	; 0x2c
   2b154:	cmp	r0, #1
   2b158:	ldr	r2, [sp, #40]	; 0x28
   2b15c:	blt	3a264 <GetDataSlab+0x17e28>
   2b160:	add	r8, r4, #4
   2b164:	add	r0, sp, #104	; 0x68
   2b168:	orr	r4, r0, #4
   2b16c:	sub	r0, fp, #72	; 0x48
   2b170:	orr	r0, r0, #4
   2b174:	str	r0, [sp, #24]
   2b178:	lsl	r0, r2, #1
   2b17c:	str	r0, [sp, #32]
   2b180:	mov	sl, r9
   2b184:	ldr	r0, [sl], #4
   2b188:	str	r0, [sp, #28]
   2b18c:	ldr	ip, [sp, #60]	; 0x3c
   2b190:	mov	r9, #0
   2b194:	cmp	r2, #1
   2b198:	blt	2b1bc <GetDataSlab+0x8d80>
   2b19c:	ldr	r0, [sp, #28]
   2b1a0:	add	r7, r3, r0, lsl #3
   2b1a4:	ldr	lr, [sp, #40]	; 0x28
   2b1a8:	mov	r0, ip
   2b1ac:	ldrh	r2, [r7], #8
   2b1b0:	strh	r2, [r0], #2
   2b1b4:	subs	lr, lr, #1
   2b1b8:	bne	2b1ac <GetDataSlab+0x8d70>
   2b1bc:	ldr	r0, [sp, #36]	; 0x24
   2b1c0:	add	r3, r3, r0, lsl #3
   2b1c4:	add	r1, r1, r0
   2b1c8:	ldr	r0, [fp, #24]
   2b1cc:	cmp	r0, #2
   2b1d0:	blt	2b274 <GetDataSlab+0x8e38>
   2b1d4:	mov	r0, #0
   2b1d8:	ldr	lr, [fp, #16]
   2b1dc:	mov	r7, r0
   2b1e0:	ldr	r0, [r4, r0, lsl #2]
   2b1e4:	add	r0, r0, #1
   2b1e8:	str	r0, [r4, r7, lsl #2]
   2b1ec:	ldr	r2, [r8, r7, lsl #2]
   2b1f0:	sdiv	r6, r0, r2
   2b1f4:	mls	r0, r6, r2, r0
   2b1f8:	cmp	r0, #0
   2b1fc:	bne	2b27c <GetDataSlab+0x8e40>
   2b200:	mov	r0, #0
   2b204:	str	r0, [r4, r7, lsl #2]
   2b208:	add	r6, sp, #64	; 0x40
   2b20c:	add	r0, r6, r7, lsl #2
   2b210:	ldr	r0, [r0, #4]
   2b214:	sdiv	r2, r1, r0
   2b218:	mls	r2, r2, r0, r1
   2b21c:	cmp	r2, #0
   2b220:	beq	2b23c <GetDataSlab+0x8e00>
   2b224:	ldr	r6, [r6, r7, lsl #2]
   2b228:	ldr	r5, [sl, r7, lsl #2]
   2b22c:	sub	r0, r0, r2
   2b230:	mla	r0, r5, r6, r0
   2b234:	add	r1, r0, r1
   2b238:	b	2b258 <GetDataSlab+0x8e1c>
   2b23c:	ldr	r0, [sl, r7, lsl #2]
   2b240:	cmp	r0, #0
   2b244:	beq	2b25c <GetDataSlab+0x8e20>
   2b248:	add	r2, sp, #64	; 0x40
   2b24c:	ldr	r2, [r2, r7, lsl #2]
   2b250:	mla	r1, r2, r0, r1
   2b254:	mul	r0, r2, r0
   2b258:	add	r3, r3, r0, lsl #3
   2b25c:	add	r0, r7, #1
   2b260:	add	r2, r7, #2
   2b264:	ldr	r7, [fp, #24]
   2b268:	cmp	r2, r7
   2b26c:	blt	2b1dc <GetDataSlab+0x8da0>
   2b270:	b	2b28c <GetDataSlab+0x8e50>
   2b274:	ldr	lr, [fp, #16]
   2b278:	b	2b28c <GetDataSlab+0x8e50>
   2b27c:	ldr	r0, [sp, #24]
   2b280:	ldr	r0, [r0, r7, lsl #2]
   2b284:	add	r3, r3, r0, lsl #3
   2b288:	add	r1, r0, r1
   2b28c:	ldr	r0, [sp, #32]
   2b290:	add	ip, ip, r0
   2b294:	ldr	r2, [sp, #40]	; 0x28
   2b298:	add	r9, r9, r2
   2b29c:	ldr	r0, [sp, #44]	; 0x2c
   2b2a0:	cmp	r9, r0
   2b2a4:	blt	2b194 <GetDataSlab+0x8d58>
   2b2a8:	mov	r0, #0
   2b2ac:	ldr	r4, [fp, #20]
   2b2b0:	b	3a268 <GetDataSlab+0x17e2c>
   2b2b4:	ldr	lr, [lr]
   2b2b8:	sub	r1, lr, #1
   2b2bc:	str	r1, [fp, #-72]	; 0xffffffb8
   2b2c0:	ldr	r1, [r8]
   2b2c4:	str	r1, [sp, #64]	; 0x40
   2b2c8:	ldr	r0, [r4]
   2b2cc:	str	r0, [sp, #44]	; 0x2c
   2b2d0:	mov	r2, #0
   2b2d4:	ldr	r0, [fp, #24]
   2b2d8:	cmp	r0, #2
   2b2dc:	blt	2b36c <GetDataSlab+0x8f30>
   2b2e0:	mov	r1, #1
   2b2e4:	mov	r2, #0
   2b2e8:	mov	r0, r8
   2b2ec:	ldr	r3, [fp, #16]
   2b2f0:	ldr	r7, [r3, r1, lsl #2]
   2b2f4:	sub	r7, r7, #1
   2b2f8:	str	r7, [ip, r1, lsl #2]
   2b2fc:	sub	r8, r1, #1
   2b300:	ldr	r3, [fp, #8]
   2b304:	ldr	r5, [r3, r8, lsl #2]
   2b308:	str	r5, [sl, r1, lsl #2]
   2b30c:	mov	r4, #0
   2b310:	mov	r3, r0
   2b314:	ldr	r6, [r3, -r4, lsl #2]!
   2b318:	mul	r7, r7, r6
   2b31c:	ldr	r3, [r3, #4]
   2b320:	mul	r5, r3, r5
   2b324:	add	r4, r4, #1
   2b328:	cmp	r1, r4
   2b32c:	bne	2b310 <GetDataSlab+0x8ed4>
   2b330:	str	r5, [sl, r1, lsl #2]
   2b334:	str	r7, [ip, r1, lsl #2]
   2b338:	ldr	r3, [sl, r8, lsl #2]
   2b33c:	ldr	r4, [r9, r1, lsl #2]
   2b340:	mla	r2, r4, r3, r2
   2b344:	ldr	r4, [fp, #20]
   2b348:	ldr	r3, [r4, r1, lsl #2]
   2b34c:	ldr	r5, [sp, #44]	; 0x2c
   2b350:	mul	r5, r3, r5
   2b354:	str	r5, [sp, #44]	; 0x2c
   2b358:	add	r0, r0, #4
   2b35c:	add	r1, r1, #1
   2b360:	ldr	r3, [fp, #24]
   2b364:	cmp	r1, r3
   2b368:	bne	2b2ec <GetDataSlab+0x8eb0>
   2b36c:	ldr	r0, [sp, #48]	; 0x30
   2b370:	add	ip, r0, r2
   2b374:	cmp	lr, #1
   2b378:	bne	35640 <GetDataSlab+0x13204>
   2b37c:	ldr	r0, [sp, #44]	; 0x2c
   2b380:	cmp	r0, #1
   2b384:	blt	3ae3c <GetDataSlab+0x18a00>
   2b388:	add	r9, r9, #4
   2b38c:	add	r8, r4, #4
   2b390:	add	r0, sp, #104	; 0x68
   2b394:	orr	r5, r0, #4
   2b398:	sub	r0, fp, #72	; 0x48
   2b39c:	orr	r0, r0, #4
   2b3a0:	str	r0, [sp, #52]	; 0x34
   2b3a4:	mov	sl, #0
   2b3a8:	ldr	r0, [fp, #12]
   2b3ac:	ldr	r0, [r0]
   2b3b0:	add	r2, r0, r2
   2b3b4:	add	r3, ip, r0
   2b3b8:	ldr	r0, [r4]
   2b3bc:	cmp	r0, #1
   2b3c0:	blt	2b3e8 <GetDataSlab+0x8fac>
   2b3c4:	ldr	r0, [sp, #60]	; 0x3c
   2b3c8:	add	r1, r0, sl, lsl #2
   2b3cc:	mov	r7, #0
   2b3d0:	ldrb	r0, [r3, r7]
   2b3d4:	str	r0, [r1, r7, lsl #2]
   2b3d8:	add	r7, r7, #1
   2b3dc:	ldr	r0, [r4]
   2b3e0:	cmp	r7, r0
   2b3e4:	blt	2b3d0 <GetDataSlab+0x8f94>
   2b3e8:	ldr	r1, [fp, #12]
   2b3ec:	ldr	r1, [r1]
   2b3f0:	ldr	r7, [fp, #8]
   2b3f4:	ldr	r4, [r7]
   2b3f8:	sub	r1, r4, r1
   2b3fc:	add	ip, r3, r1
   2b400:	add	r2, r2, r1
   2b404:	ldr	r1, [fp, #24]
   2b408:	cmp	r1, #2
   2b40c:	blt	2b4b8 <GetDataSlab+0x907c>
   2b410:	mov	r1, #0
   2b414:	mov	r7, r1
   2b418:	ldr	r1, [r5, r1, lsl #2]
   2b41c:	add	r1, r1, #1
   2b420:	str	r1, [r5, r7, lsl #2]
   2b424:	ldr	r4, [r8, r7, lsl #2]
   2b428:	sdiv	lr, r1, r4
   2b42c:	mls	r1, lr, r4, r1
   2b430:	cmp	r1, #0
   2b434:	bne	2b4a8 <GetDataSlab+0x906c>
   2b438:	mov	r1, #0
   2b43c:	str	r1, [r5, r7, lsl #2]
   2b440:	add	r3, sp, #64	; 0x40
   2b444:	add	r1, r3, r7, lsl #2
   2b448:	ldr	r1, [r1, #4]
   2b44c:	sdiv	r4, r2, r1
   2b450:	mls	r4, r4, r1, r2
   2b454:	cmp	r4, #0
   2b458:	beq	2b478 <GetDataSlab+0x903c>
   2b45c:	ldr	r6, [r3, r7, lsl #2]
   2b460:	ldr	r3, [r9, r7, lsl #2]
   2b464:	sub	r1, r1, r4
   2b468:	mla	r1, r3, r6, r1
   2b46c:	add	r2, r1, r2
   2b470:	add	ip, ip, r1
   2b474:	b	2b490 <GetDataSlab+0x9054>
   2b478:	ldr	r1, [r9, r7, lsl #2]
   2b47c:	cmp	r1, #0
   2b480:	addne	r3, sp, #64	; 0x40
   2b484:	ldrne	r3, [r3, r7, lsl #2]
   2b488:	mlane	r2, r3, r1, r2
   2b48c:	mlane	ip, r3, r1, ip
   2b490:	add	r1, r7, #1
   2b494:	add	r3, r7, #2
   2b498:	ldr	r7, [fp, #24]
   2b49c:	cmp	r3, r7
   2b4a0:	blt	2b414 <GetDataSlab+0x8fd8>
   2b4a4:	b	2b4b8 <GetDataSlab+0x907c>
   2b4a8:	ldr	r1, [sp, #52]	; 0x34
   2b4ac:	ldr	r1, [r1, r7, lsl #2]
   2b4b0:	add	ip, ip, r1
   2b4b4:	add	r2, r1, r2
   2b4b8:	add	sl, r0, sl
   2b4bc:	mov	r0, #0
   2b4c0:	ldr	r1, [sp, #44]	; 0x2c
   2b4c4:	cmp	sl, r1
   2b4c8:	ldr	r4, [fp, #20]
   2b4cc:	blt	2b3a8 <GetDataSlab+0x8f6c>
   2b4d0:	b	22560 <GetDataSlab+0x124>
   2b4d4:	ldr	lr, [lr]
   2b4d8:	sub	r1, lr, #1
   2b4dc:	str	r1, [fp, #-72]	; 0xffffffb8
   2b4e0:	ldr	r1, [r8]
   2b4e4:	str	r1, [sp, #64]	; 0x40
   2b4e8:	ldr	r0, [r4]
   2b4ec:	str	r0, [sp, #44]	; 0x2c
   2b4f0:	mov	r2, #0
   2b4f4:	ldr	r0, [fp, #24]
   2b4f8:	cmp	r0, #2
   2b4fc:	blt	2b58c <GetDataSlab+0x9150>
   2b500:	mov	r1, #1
   2b504:	mov	r2, #0
   2b508:	mov	r0, r8
   2b50c:	ldr	r3, [fp, #16]
   2b510:	ldr	r7, [r3, r1, lsl #2]
   2b514:	sub	r7, r7, #1
   2b518:	str	r7, [ip, r1, lsl #2]
   2b51c:	sub	r8, r1, #1
   2b520:	ldr	r3, [fp, #8]
   2b524:	ldr	r5, [r3, r8, lsl #2]
   2b528:	str	r5, [sl, r1, lsl #2]
   2b52c:	mov	r4, #0
   2b530:	mov	r3, r0
   2b534:	ldr	r6, [r3, -r4, lsl #2]!
   2b538:	mul	r7, r7, r6
   2b53c:	ldr	r3, [r3, #4]
   2b540:	mul	r5, r3, r5
   2b544:	add	r4, r4, #1
   2b548:	cmp	r1, r4
   2b54c:	bne	2b530 <GetDataSlab+0x90f4>
   2b550:	str	r5, [sl, r1, lsl #2]
   2b554:	str	r7, [ip, r1, lsl #2]
   2b558:	ldr	r3, [sl, r8, lsl #2]
   2b55c:	ldr	r4, [r9, r1, lsl #2]
   2b560:	mla	r2, r4, r3, r2
   2b564:	ldr	r4, [fp, #20]
   2b568:	ldr	r3, [r4, r1, lsl #2]
   2b56c:	ldr	r5, [sp, #44]	; 0x2c
   2b570:	mul	r5, r3, r5
   2b574:	str	r5, [sp, #44]	; 0x2c
   2b578:	add	r0, r0, #4
   2b57c:	add	r1, r1, #1
   2b580:	ldr	r3, [fp, #24]
   2b584:	cmp	r1, r3
   2b588:	bne	2b50c <GetDataSlab+0x90d0>
   2b58c:	ldr	r0, [sp, #48]	; 0x30
   2b590:	add	ip, r0, r2, lsl #1
   2b594:	cmp	lr, #1
   2b598:	bne	357c0 <GetDataSlab+0x13384>
   2b59c:	ldr	r0, [sp, #44]	; 0x2c
   2b5a0:	cmp	r0, #1
   2b5a4:	blt	3ae3c <GetDataSlab+0x18a00>
   2b5a8:	add	sl, r9, #4
   2b5ac:	add	r8, r4, #4
   2b5b0:	add	r0, sp, #104	; 0x68
   2b5b4:	orr	r5, r0, #4
   2b5b8:	sub	r0, fp, #72	; 0x48
   2b5bc:	orr	r0, r0, #4
   2b5c0:	str	r0, [sp, #52]	; 0x34
   2b5c4:	mov	lr, #0
   2b5c8:	ldr	r0, [fp, #12]
   2b5cc:	ldr	r0, [r0]
   2b5d0:	add	r9, r0, r2
   2b5d4:	add	r3, ip, r0, lsl #1
   2b5d8:	ldr	r0, [r4]
   2b5dc:	cmp	r0, #1
   2b5e0:	blt	2b60c <GetDataSlab+0x91d0>
   2b5e4:	ldr	r0, [sp, #60]	; 0x3c
   2b5e8:	add	r7, r0, lr, lsl #2
   2b5ec:	mov	r2, #0
   2b5f0:	mov	r1, r3
   2b5f4:	ldrsh	r0, [r1], #2
   2b5f8:	str	r0, [r7, r2, lsl #2]
   2b5fc:	add	r2, r2, #1
   2b600:	ldr	r0, [r4]
   2b604:	cmp	r2, r0
   2b608:	blt	2b5f4 <GetDataSlab+0x91b8>
   2b60c:	ldr	r1, [fp, #12]
   2b610:	ldr	r1, [r1]
   2b614:	ldr	r2, [fp, #8]
   2b618:	ldr	r2, [r2]
   2b61c:	sub	r1, r2, r1
   2b620:	add	ip, r3, r1, lsl #1
   2b624:	add	r2, r9, r1
   2b628:	ldr	r1, [fp, #24]
   2b62c:	cmp	r1, #2
   2b630:	blt	2b6e0 <GetDataSlab+0x92a4>
   2b634:	mov	r1, #0
   2b638:	mov	r9, #0
   2b63c:	mov	r7, r1
   2b640:	ldr	r1, [r5, r1, lsl #2]
   2b644:	add	r1, r1, #1
   2b648:	str	r1, [r5, r7, lsl #2]
   2b64c:	ldr	r4, [r8, r7, lsl #2]
   2b650:	sdiv	r6, r1, r4
   2b654:	mls	r1, r6, r4, r1
   2b658:	cmp	r1, #0
   2b65c:	bne	2b6d0 <GetDataSlab+0x9294>
   2b660:	str	r9, [r5, r7, lsl #2]
   2b664:	add	r3, sp, #64	; 0x40
   2b668:	add	r1, r3, r7, lsl #2
   2b66c:	ldr	r1, [r1, #4]
   2b670:	sdiv	r4, r2, r1
   2b674:	mls	r4, r4, r1, r2
   2b678:	cmp	r4, #0
   2b67c:	beq	2b698 <GetDataSlab+0x925c>
   2b680:	ldr	r6, [r3, r7, lsl #2]
   2b684:	ldr	r3, [sl, r7, lsl #2]
   2b688:	sub	r1, r1, r4
   2b68c:	mla	r1, r3, r6, r1
   2b690:	add	r2, r1, r2
   2b694:	b	2b6b4 <GetDataSlab+0x9278>
   2b698:	ldr	r1, [sl, r7, lsl #2]
   2b69c:	cmp	r1, #0
   2b6a0:	beq	2b6b8 <GetDataSlab+0x927c>
   2b6a4:	add	r3, sp, #64	; 0x40
   2b6a8:	ldr	r3, [r3, r7, lsl #2]
   2b6ac:	mla	r2, r3, r1, r2
   2b6b0:	mul	r1, r3, r1
   2b6b4:	add	ip, ip, r1, lsl #1
   2b6b8:	add	r1, r7, #1
   2b6bc:	add	r3, r7, #2
   2b6c0:	ldr	r4, [fp, #24]
   2b6c4:	cmp	r3, r4
   2b6c8:	blt	2b63c <GetDataSlab+0x9200>
   2b6cc:	b	2b6e0 <GetDataSlab+0x92a4>
   2b6d0:	ldr	r1, [sp, #52]	; 0x34
   2b6d4:	ldr	r1, [r1, r7, lsl #2]
   2b6d8:	add	ip, ip, r1, lsl #1
   2b6dc:	add	r2, r1, r2
   2b6e0:	add	lr, r0, lr
   2b6e4:	mov	r0, #0
   2b6e8:	ldr	r1, [sp, #44]	; 0x2c
   2b6ec:	cmp	lr, r1
   2b6f0:	ldr	r4, [fp, #20]
   2b6f4:	blt	2b5c8 <GetDataSlab+0x918c>
   2b6f8:	b	22560 <GetDataSlab+0x124>
   2b6fc:	ldr	lr, [lr]
   2b700:	sub	r1, lr, #1
   2b704:	str	r1, [fp, #-72]	; 0xffffffb8
   2b708:	ldr	r1, [r8]
   2b70c:	str	r1, [sp, #64]	; 0x40
   2b710:	ldr	r0, [r4]
   2b714:	str	r0, [sp, #44]	; 0x2c
   2b718:	mov	r2, #0
   2b71c:	ldr	r0, [fp, #24]
   2b720:	cmp	r0, #2
   2b724:	blt	2b7b4 <GetDataSlab+0x9378>
   2b728:	mov	r1, #1
   2b72c:	mov	r2, #0
   2b730:	mov	r0, r8
   2b734:	ldr	r3, [fp, #16]
   2b738:	ldr	r7, [r3, r1, lsl #2]
   2b73c:	sub	r7, r7, #1
   2b740:	str	r7, [ip, r1, lsl #2]
   2b744:	sub	r8, r1, #1
   2b748:	ldr	r3, [fp, #8]
   2b74c:	ldr	r5, [r3, r8, lsl #2]
   2b750:	str	r5, [sl, r1, lsl #2]
   2b754:	mov	r4, #0
   2b758:	mov	r3, r0
   2b75c:	ldr	r6, [r3, -r4, lsl #2]!
   2b760:	mul	r7, r7, r6
   2b764:	ldr	r3, [r3, #4]
   2b768:	mul	r5, r3, r5
   2b76c:	add	r4, r4, #1
   2b770:	cmp	r1, r4
   2b774:	bne	2b758 <GetDataSlab+0x931c>
   2b778:	str	r5, [sl, r1, lsl #2]
   2b77c:	str	r7, [ip, r1, lsl #2]
   2b780:	ldr	r3, [sl, r8, lsl #2]
   2b784:	ldr	r4, [r9, r1, lsl #2]
   2b788:	mla	r2, r4, r3, r2
   2b78c:	ldr	r4, [fp, #20]
   2b790:	ldr	r3, [r4, r1, lsl #2]
   2b794:	ldr	r5, [sp, #44]	; 0x2c
   2b798:	mul	r5, r3, r5
   2b79c:	str	r5, [sp, #44]	; 0x2c
   2b7a0:	add	r0, r0, #4
   2b7a4:	add	r1, r1, #1
   2b7a8:	ldr	r3, [fp, #24]
   2b7ac:	cmp	r1, r3
   2b7b0:	bne	2b734 <GetDataSlab+0x92f8>
   2b7b4:	ldr	r0, [sp, #48]	; 0x30
   2b7b8:	add	ip, r0, r2, lsl #1
   2b7bc:	cmp	lr, #1
   2b7c0:	bne	35944 <GetDataSlab+0x13508>
   2b7c4:	ldr	r0, [sp, #44]	; 0x2c
   2b7c8:	cmp	r0, #1
   2b7cc:	blt	3ae3c <GetDataSlab+0x18a00>
   2b7d0:	add	sl, r9, #4
   2b7d4:	add	r8, r4, #4
   2b7d8:	add	r0, sp, #104	; 0x68
   2b7dc:	orr	r5, r0, #4
   2b7e0:	sub	r0, fp, #72	; 0x48
   2b7e4:	orr	r0, r0, #4
   2b7e8:	str	r0, [sp, #52]	; 0x34
   2b7ec:	mov	lr, #0
   2b7f0:	ldr	r0, [fp, #12]
   2b7f4:	ldr	r0, [r0]
   2b7f8:	add	r9, r0, r2
   2b7fc:	add	r3, ip, r0, lsl #1
   2b800:	ldr	r0, [r4]
   2b804:	cmp	r0, #1
   2b808:	blt	2b834 <GetDataSlab+0x93f8>
   2b80c:	ldr	r0, [sp, #60]	; 0x3c
   2b810:	add	r7, r0, lr, lsl #2
   2b814:	mov	r2, #0
   2b818:	mov	r1, r3
   2b81c:	ldrh	r0, [r1], #2
   2b820:	str	r0, [r7, r2, lsl #2]
   2b824:	add	r2, r2, #1
   2b828:	ldr	r0, [r4]
   2b82c:	cmp	r2, r0
   2b830:	blt	2b81c <GetDataSlab+0x93e0>
   2b834:	ldr	r1, [fp, #12]
   2b838:	ldr	r1, [r1]
   2b83c:	ldr	r2, [fp, #8]
   2b840:	ldr	r2, [r2]
   2b844:	sub	r1, r2, r1
   2b848:	add	ip, r3, r1, lsl #1
   2b84c:	add	r2, r9, r1
   2b850:	ldr	r1, [fp, #24]
   2b854:	cmp	r1, #2
   2b858:	blt	2b908 <GetDataSlab+0x94cc>
   2b85c:	mov	r1, #0
   2b860:	mov	r9, #0
   2b864:	mov	r7, r1
   2b868:	ldr	r1, [r5, r1, lsl #2]
   2b86c:	add	r1, r1, #1
   2b870:	str	r1, [r5, r7, lsl #2]
   2b874:	ldr	r4, [r8, r7, lsl #2]
   2b878:	sdiv	r6, r1, r4
   2b87c:	mls	r1, r6, r4, r1
   2b880:	cmp	r1, #0
   2b884:	bne	2b8f8 <GetDataSlab+0x94bc>
   2b888:	str	r9, [r5, r7, lsl #2]
   2b88c:	add	r3, sp, #64	; 0x40
   2b890:	add	r1, r3, r7, lsl #2
   2b894:	ldr	r1, [r1, #4]
   2b898:	sdiv	r4, r2, r1
   2b89c:	mls	r4, r4, r1, r2
   2b8a0:	cmp	r4, #0
   2b8a4:	beq	2b8c0 <GetDataSlab+0x9484>
   2b8a8:	ldr	r6, [r3, r7, lsl #2]
   2b8ac:	ldr	r3, [sl, r7, lsl #2]
   2b8b0:	sub	r1, r1, r4
   2b8b4:	mla	r1, r3, r6, r1
   2b8b8:	add	r2, r1, r2
   2b8bc:	b	2b8dc <GetDataSlab+0x94a0>
   2b8c0:	ldr	r1, [sl, r7, lsl #2]
   2b8c4:	cmp	r1, #0
   2b8c8:	beq	2b8e0 <GetDataSlab+0x94a4>
   2b8cc:	add	r3, sp, #64	; 0x40
   2b8d0:	ldr	r3, [r3, r7, lsl #2]
   2b8d4:	mla	r2, r3, r1, r2
   2b8d8:	mul	r1, r3, r1
   2b8dc:	add	ip, ip, r1, lsl #1
   2b8e0:	add	r1, r7, #1
   2b8e4:	add	r3, r7, #2
   2b8e8:	ldr	r4, [fp, #24]
   2b8ec:	cmp	r3, r4
   2b8f0:	blt	2b864 <GetDataSlab+0x9428>
   2b8f4:	b	2b908 <GetDataSlab+0x94cc>
   2b8f8:	ldr	r1, [sp, #52]	; 0x34
   2b8fc:	ldr	r1, [r1, r7, lsl #2]
   2b900:	add	ip, ip, r1, lsl #1
   2b904:	add	r2, r1, r2
   2b908:	add	lr, r0, lr
   2b90c:	mov	r0, #0
   2b910:	ldr	r1, [sp, #44]	; 0x2c
   2b914:	cmp	lr, r1
   2b918:	ldr	r4, [fp, #20]
   2b91c:	blt	2b7f0 <GetDataSlab+0x93b4>
   2b920:	b	22560 <GetDataSlab+0x124>
   2b924:	ldr	lr, [lr]
   2b928:	sub	r1, lr, #1
   2b92c:	str	r1, [fp, #-72]	; 0xffffffb8
   2b930:	ldr	r1, [r8]
   2b934:	str	r1, [sp, #64]	; 0x40
   2b938:	ldr	r0, [r4]
   2b93c:	str	r0, [sp, #44]	; 0x2c
   2b940:	mov	r2, #0
   2b944:	ldr	r0, [fp, #24]
   2b948:	cmp	r0, #2
   2b94c:	blt	2b9dc <GetDataSlab+0x95a0>
   2b950:	mov	r1, #1
   2b954:	mov	r2, #0
   2b958:	mov	r0, r8
   2b95c:	ldr	r3, [fp, #16]
   2b960:	ldr	r7, [r3, r1, lsl #2]
   2b964:	sub	r7, r7, #1
   2b968:	str	r7, [ip, r1, lsl #2]
   2b96c:	sub	r8, r1, #1
   2b970:	ldr	r3, [fp, #8]
   2b974:	ldr	r5, [r3, r8, lsl #2]
   2b978:	str	r5, [sl, r1, lsl #2]
   2b97c:	mov	r4, #0
   2b980:	mov	r3, r0
   2b984:	ldr	r6, [r3, -r4, lsl #2]!
   2b988:	mul	r7, r7, r6
   2b98c:	ldr	r3, [r3, #4]
   2b990:	mul	r5, r3, r5
   2b994:	add	r4, r4, #1
   2b998:	cmp	r1, r4
   2b99c:	bne	2b980 <GetDataSlab+0x9544>
   2b9a0:	str	r5, [sl, r1, lsl #2]
   2b9a4:	str	r7, [ip, r1, lsl #2]
   2b9a8:	ldr	r3, [sl, r8, lsl #2]
   2b9ac:	ldr	r4, [r9, r1, lsl #2]
   2b9b0:	mla	r2, r4, r3, r2
   2b9b4:	ldr	r4, [fp, #20]
   2b9b8:	ldr	r3, [r4, r1, lsl #2]
   2b9bc:	ldr	r5, [sp, #44]	; 0x2c
   2b9c0:	mul	r5, r3, r5
   2b9c4:	str	r5, [sp, #44]	; 0x2c
   2b9c8:	add	r0, r0, #4
   2b9cc:	add	r1, r1, #1
   2b9d0:	ldr	r3, [fp, #24]
   2b9d4:	cmp	r1, r3
   2b9d8:	bne	2b95c <GetDataSlab+0x9520>
   2b9dc:	ldr	r0, [sp, #48]	; 0x30
   2b9e0:	add	ip, r0, r2, lsl #2
   2b9e4:	cmp	lr, #1
   2b9e8:	bne	35ac8 <GetDataSlab+0x1368c>
   2b9ec:	ldr	r0, [sp, #44]	; 0x2c
   2b9f0:	cmp	r0, #1
   2b9f4:	blt	3ae3c <GetDataSlab+0x18a00>
   2b9f8:	add	r9, r9, #4
   2b9fc:	add	r8, r4, #4
   2ba00:	add	r0, sp, #104	; 0x68
   2ba04:	orr	r5, r0, #4
   2ba08:	sub	r0, fp, #72	; 0x48
   2ba0c:	orr	r0, r0, #4
   2ba10:	str	r0, [sp, #52]	; 0x34
   2ba14:	mov	sl, #0
   2ba18:	ldr	r0, [fp, #12]
   2ba1c:	ldr	r0, [r0]
   2ba20:	add	r2, r0, r2
   2ba24:	add	r3, ip, r0, lsl #2
   2ba28:	ldr	r0, [r4]
   2ba2c:	cmp	r0, #1
   2ba30:	blt	2ba58 <GetDataSlab+0x961c>
   2ba34:	ldr	r0, [sp, #60]	; 0x3c
   2ba38:	add	r1, r0, sl, lsl #2
   2ba3c:	mov	r7, #0
   2ba40:	ldr	r0, [r3, r7, lsl #2]
   2ba44:	str	r0, [r1, r7, lsl #2]
   2ba48:	add	r7, r7, #1
   2ba4c:	ldr	r0, [r4]
   2ba50:	cmp	r7, r0
   2ba54:	blt	2ba40 <GetDataSlab+0x9604>
   2ba58:	ldr	r1, [fp, #12]
   2ba5c:	ldr	r1, [r1]
   2ba60:	ldr	r7, [fp, #8]
   2ba64:	ldr	r4, [r7]
   2ba68:	sub	r1, r4, r1
   2ba6c:	add	ip, r3, r1, lsl #2
   2ba70:	add	r2, r2, r1
   2ba74:	ldr	r1, [fp, #24]
   2ba78:	cmp	r1, #2
   2ba7c:	blt	2bb2c <GetDataSlab+0x96f0>
   2ba80:	mov	r1, #0
   2ba84:	mov	r7, r1
   2ba88:	ldr	r1, [r5, r1, lsl #2]
   2ba8c:	add	r1, r1, #1
   2ba90:	str	r1, [r5, r7, lsl #2]
   2ba94:	ldr	r4, [r8, r7, lsl #2]
   2ba98:	sdiv	lr, r1, r4
   2ba9c:	mls	r1, lr, r4, r1
   2baa0:	cmp	r1, #0
   2baa4:	bne	2bb1c <GetDataSlab+0x96e0>
   2baa8:	mov	r1, #0
   2baac:	str	r1, [r5, r7, lsl #2]
   2bab0:	add	r3, sp, #64	; 0x40
   2bab4:	add	r1, r3, r7, lsl #2
   2bab8:	ldr	r1, [r1, #4]
   2babc:	sdiv	r4, r2, r1
   2bac0:	mls	r4, r4, r1, r2
   2bac4:	cmp	r4, #0
   2bac8:	beq	2bae4 <GetDataSlab+0x96a8>
   2bacc:	ldr	r6, [r3, r7, lsl #2]
   2bad0:	ldr	r3, [r9, r7, lsl #2]
   2bad4:	sub	r1, r1, r4
   2bad8:	mla	r1, r3, r6, r1
   2badc:	add	r2, r1, r2
   2bae0:	b	2bb00 <GetDataSlab+0x96c4>
   2bae4:	ldr	r1, [r9, r7, lsl #2]
   2bae8:	cmp	r1, #0
   2baec:	beq	2bb04 <GetDataSlab+0x96c8>
   2baf0:	add	r3, sp, #64	; 0x40
   2baf4:	ldr	r3, [r3, r7, lsl #2]
   2baf8:	mla	r2, r3, r1, r2
   2bafc:	mul	r1, r3, r1
   2bb00:	add	ip, ip, r1, lsl #2
   2bb04:	add	r1, r7, #1
   2bb08:	add	r3, r7, #2
   2bb0c:	ldr	r7, [fp, #24]
   2bb10:	cmp	r3, r7
   2bb14:	blt	2ba84 <GetDataSlab+0x9648>
   2bb18:	b	2bb2c <GetDataSlab+0x96f0>
   2bb1c:	ldr	r1, [sp, #52]	; 0x34
   2bb20:	ldr	r1, [r1, r7, lsl #2]
   2bb24:	add	ip, ip, r1, lsl #2
   2bb28:	add	r2, r1, r2
   2bb2c:	add	sl, r0, sl
   2bb30:	mov	r0, #0
   2bb34:	ldr	r1, [sp, #44]	; 0x2c
   2bb38:	cmp	sl, r1
   2bb3c:	ldr	r4, [fp, #20]
   2bb40:	blt	2ba18 <GetDataSlab+0x95dc>
   2bb44:	b	22560 <GetDataSlab+0x124>
   2bb48:	ldr	lr, [lr]
   2bb4c:	sub	r1, lr, #1
   2bb50:	str	r1, [fp, #-72]	; 0xffffffb8
   2bb54:	ldr	r1, [r8]
   2bb58:	str	r1, [sp, #64]	; 0x40
   2bb5c:	ldr	r0, [r4]
   2bb60:	str	r0, [sp, #44]	; 0x2c
   2bb64:	mov	r2, #0
   2bb68:	ldr	r0, [fp, #24]
   2bb6c:	cmp	r0, #2
   2bb70:	blt	2bc00 <GetDataSlab+0x97c4>
   2bb74:	mov	r1, #1
   2bb78:	mov	r2, #0
   2bb7c:	mov	r0, r8
   2bb80:	ldr	r3, [fp, #16]
   2bb84:	ldr	r7, [r3, r1, lsl #2]
   2bb88:	sub	r7, r7, #1
   2bb8c:	str	r7, [ip, r1, lsl #2]
   2bb90:	sub	r8, r1, #1
   2bb94:	ldr	r3, [fp, #8]
   2bb98:	ldr	r5, [r3, r8, lsl #2]
   2bb9c:	str	r5, [sl, r1, lsl #2]
   2bba0:	mov	r4, #0
   2bba4:	mov	r3, r0
   2bba8:	ldr	r6, [r3, -r4, lsl #2]!
   2bbac:	mul	r7, r7, r6
   2bbb0:	ldr	r3, [r3, #4]
   2bbb4:	mul	r5, r3, r5
   2bbb8:	add	r4, r4, #1
   2bbbc:	cmp	r1, r4
   2bbc0:	bne	2bba4 <GetDataSlab+0x9768>
   2bbc4:	str	r5, [sl, r1, lsl #2]
   2bbc8:	str	r7, [ip, r1, lsl #2]
   2bbcc:	ldr	r3, [sl, r8, lsl #2]
   2bbd0:	ldr	r4, [r9, r1, lsl #2]
   2bbd4:	mla	r2, r4, r3, r2
   2bbd8:	ldr	r4, [fp, #20]
   2bbdc:	ldr	r3, [r4, r1, lsl #2]
   2bbe0:	ldr	r5, [sp, #44]	; 0x2c
   2bbe4:	mul	r5, r3, r5
   2bbe8:	str	r5, [sp, #44]	; 0x2c
   2bbec:	add	r0, r0, #4
   2bbf0:	add	r1, r1, #1
   2bbf4:	ldr	r3, [fp, #24]
   2bbf8:	cmp	r1, r3
   2bbfc:	bne	2bb80 <GetDataSlab+0x9744>
   2bc00:	ldr	r0, [sp, #48]	; 0x30
   2bc04:	add	ip, r0, r2, lsl #2
   2bc08:	cmp	lr, #1
   2bc0c:	bne	35c4c <GetDataSlab+0x13810>
   2bc10:	ldr	r0, [sp, #44]	; 0x2c
   2bc14:	cmp	r0, #1
   2bc18:	blt	3ae3c <GetDataSlab+0x18a00>
   2bc1c:	add	r9, r9, #4
   2bc20:	add	r8, r4, #4
   2bc24:	add	r0, sp, #104	; 0x68
   2bc28:	orr	r5, r0, #4
   2bc2c:	sub	r0, fp, #72	; 0x48
   2bc30:	orr	r0, r0, #4
   2bc34:	str	r0, [sp, #52]	; 0x34
   2bc38:	mov	sl, #0
   2bc3c:	ldr	r0, [fp, #12]
   2bc40:	ldr	r0, [r0]
   2bc44:	add	r2, r0, r2
   2bc48:	add	r3, ip, r0, lsl #2
   2bc4c:	ldr	r0, [r4]
   2bc50:	cmp	r0, #1
   2bc54:	blt	2bc7c <GetDataSlab+0x9840>
   2bc58:	ldr	r0, [sp, #60]	; 0x3c
   2bc5c:	add	r1, r0, sl, lsl #2
   2bc60:	mov	r7, #0
   2bc64:	ldr	r0, [r3, r7, lsl #2]
   2bc68:	str	r0, [r1, r7, lsl #2]
   2bc6c:	add	r7, r7, #1
   2bc70:	ldr	r0, [r4]
   2bc74:	cmp	r7, r0
   2bc78:	blt	2bc64 <GetDataSlab+0x9828>
   2bc7c:	ldr	r1, [fp, #12]
   2bc80:	ldr	r1, [r1]
   2bc84:	ldr	r7, [fp, #8]
   2bc88:	ldr	r4, [r7]
   2bc8c:	sub	r1, r4, r1
   2bc90:	add	ip, r3, r1, lsl #2
   2bc94:	add	r2, r2, r1
   2bc98:	ldr	r1, [fp, #24]
   2bc9c:	cmp	r1, #2
   2bca0:	blt	2bd50 <GetDataSlab+0x9914>
   2bca4:	mov	r1, #0
   2bca8:	mov	r7, r1
   2bcac:	ldr	r1, [r5, r1, lsl #2]
   2bcb0:	add	r1, r1, #1
   2bcb4:	str	r1, [r5, r7, lsl #2]
   2bcb8:	ldr	r4, [r8, r7, lsl #2]
   2bcbc:	sdiv	lr, r1, r4
   2bcc0:	mls	r1, lr, r4, r1
   2bcc4:	cmp	r1, #0
   2bcc8:	bne	2bd40 <GetDataSlab+0x9904>
   2bccc:	mov	r1, #0
   2bcd0:	str	r1, [r5, r7, lsl #2]
   2bcd4:	add	r3, sp, #64	; 0x40
   2bcd8:	add	r1, r3, r7, lsl #2
   2bcdc:	ldr	r1, [r1, #4]
   2bce0:	sdiv	r4, r2, r1
   2bce4:	mls	r4, r4, r1, r2
   2bce8:	cmp	r4, #0
   2bcec:	beq	2bd08 <GetDataSlab+0x98cc>
   2bcf0:	ldr	r6, [r3, r7, lsl #2]
   2bcf4:	ldr	r3, [r9, r7, lsl #2]
   2bcf8:	sub	r1, r1, r4
   2bcfc:	mla	r1, r3, r6, r1
   2bd00:	add	r2, r1, r2
   2bd04:	b	2bd24 <GetDataSlab+0x98e8>
   2bd08:	ldr	r1, [r9, r7, lsl #2]
   2bd0c:	cmp	r1, #0
   2bd10:	beq	2bd28 <GetDataSlab+0x98ec>
   2bd14:	add	r3, sp, #64	; 0x40
   2bd18:	ldr	r3, [r3, r7, lsl #2]
   2bd1c:	mla	r2, r3, r1, r2
   2bd20:	mul	r1, r3, r1
   2bd24:	add	ip, ip, r1, lsl #2
   2bd28:	add	r1, r7, #1
   2bd2c:	add	r3, r7, #2
   2bd30:	ldr	r7, [fp, #24]
   2bd34:	cmp	r3, r7
   2bd38:	blt	2bca8 <GetDataSlab+0x986c>
   2bd3c:	b	2bd50 <GetDataSlab+0x9914>
   2bd40:	ldr	r1, [sp, #52]	; 0x34
   2bd44:	ldr	r1, [r1, r7, lsl #2]
   2bd48:	add	ip, ip, r1, lsl #2
   2bd4c:	add	r2, r1, r2
   2bd50:	add	sl, r0, sl
   2bd54:	mov	r0, #0
   2bd58:	ldr	r1, [sp, #44]	; 0x2c
   2bd5c:	cmp	sl, r1
   2bd60:	ldr	r4, [fp, #20]
   2bd64:	blt	2bc3c <GetDataSlab+0x9800>
   2bd68:	b	22560 <GetDataSlab+0x124>
   2bd6c:	ldr	lr, [lr]
   2bd70:	sub	r1, lr, #1
   2bd74:	str	r1, [fp, #-72]	; 0xffffffb8
   2bd78:	ldr	r1, [r8]
   2bd7c:	str	r1, [sp, #64]	; 0x40
   2bd80:	ldr	r0, [r4]
   2bd84:	str	r0, [sp, #44]	; 0x2c
   2bd88:	mov	r2, #0
   2bd8c:	ldr	r0, [fp, #24]
   2bd90:	cmp	r0, #2
   2bd94:	blt	2be24 <GetDataSlab+0x99e8>
   2bd98:	mov	r1, #1
   2bd9c:	mov	r2, #0
   2bda0:	mov	r0, r8
   2bda4:	ldr	r3, [fp, #16]
   2bda8:	ldr	r7, [r3, r1, lsl #2]
   2bdac:	sub	r7, r7, #1
   2bdb0:	str	r7, [ip, r1, lsl #2]
   2bdb4:	sub	r8, r1, #1
   2bdb8:	ldr	r3, [fp, #8]
   2bdbc:	ldr	r5, [r3, r8, lsl #2]
   2bdc0:	str	r5, [sl, r1, lsl #2]
   2bdc4:	mov	r4, #0
   2bdc8:	mov	r3, r0
   2bdcc:	ldr	r6, [r3, -r4, lsl #2]!
   2bdd0:	mul	r7, r7, r6
   2bdd4:	ldr	r3, [r3, #4]
   2bdd8:	mul	r5, r3, r5
   2bddc:	add	r4, r4, #1
   2bde0:	cmp	r1, r4
   2bde4:	bne	2bdc8 <GetDataSlab+0x998c>
   2bde8:	str	r5, [sl, r1, lsl #2]
   2bdec:	str	r7, [ip, r1, lsl #2]
   2bdf0:	ldr	r3, [sl, r8, lsl #2]
   2bdf4:	ldr	r4, [r9, r1, lsl #2]
   2bdf8:	mla	r2, r4, r3, r2
   2bdfc:	ldr	r4, [fp, #20]
   2be00:	ldr	r3, [r4, r1, lsl #2]
   2be04:	ldr	r5, [sp, #44]	; 0x2c
   2be08:	mul	r5, r3, r5
   2be0c:	str	r5, [sp, #44]	; 0x2c
   2be10:	add	r0, r0, #4
   2be14:	add	r1, r1, #1
   2be18:	ldr	r3, [fp, #24]
   2be1c:	cmp	r1, r3
   2be20:	bne	2bda4 <GetDataSlab+0x9968>
   2be24:	ldr	r0, [sp, #48]	; 0x30
   2be28:	add	r9, r0, r2, lsl #2
   2be2c:	cmp	lr, #1
   2be30:	bne	35dd0 <GetDataSlab+0x13994>
   2be34:	ldr	r0, [sp, #44]	; 0x2c
   2be38:	cmp	r0, #1
   2be3c:	blt	3ae3c <GetDataSlab+0x18a00>
   2be40:	ldr	r0, [fp, #12]
   2be44:	add	lr, r0, #4
   2be48:	mov	r0, ip
   2be4c:	add	ip, r4, #4
   2be50:	add	r1, sp, #104	; 0x68
   2be54:	orr	r5, r1, #4
   2be58:	orr	r0, r0, #4
   2be5c:	str	r0, [sp, #52]	; 0x34
   2be60:	mov	r8, #0
   2be64:	ldr	r0, [fp, #12]
   2be68:	ldr	r0, [r0]
   2be6c:	mov	r1, r4
   2be70:	add	r4, r0, r2
   2be74:	add	sl, r9, r0, lsl #2
   2be78:	ldr	r0, [r1]
   2be7c:	cmp	r0, #1
   2be80:	blt	2beb8 <GetDataSlab+0x9a7c>
   2be84:	ldr	r0, [sp, #60]	; 0x3c
   2be88:	add	r7, r0, r8, lsl #2
   2be8c:	mov	r2, #0
   2be90:	mov	r3, sl
   2be94:	vldr	s0, [r3]
   2be98:	vcvt.s32.f32	s0, s0
   2be9c:	vmov	r0, s0
   2bea0:	str	r0, [r7, r2, lsl #2]
   2bea4:	add	r3, r3, #4
   2bea8:	add	r2, r2, #1
   2beac:	ldr	r0, [r1]
   2beb0:	cmp	r2, r0
   2beb4:	blt	2be94 <GetDataSlab+0x9a58>
   2beb8:	ldr	r1, [fp, #12]
   2bebc:	ldr	r1, [r1]
   2bec0:	ldr	r2, [fp, #8]
   2bec4:	ldr	r2, [r2]
   2bec8:	sub	r1, r2, r1
   2becc:	add	r9, sl, r1, lsl #2
   2bed0:	add	r2, r4, r1
   2bed4:	ldr	r1, [fp, #24]
   2bed8:	cmp	r1, #2
   2bedc:	blt	2bf88 <GetDataSlab+0x9b4c>
   2bee0:	mov	r1, #0
   2bee4:	add	sl, sp, #64	; 0x40
   2bee8:	mov	r7, r1
   2beec:	ldr	r1, [r5, r1, lsl #2]
   2bef0:	add	r1, r1, #1
   2bef4:	str	r1, [r5, r7, lsl #2]
   2bef8:	ldr	r4, [ip, r7, lsl #2]
   2befc:	sdiv	r6, r1, r4
   2bf00:	mls	r1, r6, r4, r1
   2bf04:	cmp	r1, #0
   2bf08:	bne	2bf78 <GetDataSlab+0x9b3c>
   2bf0c:	mov	r1, #0
   2bf10:	str	r1, [r5, r7, lsl #2]
   2bf14:	add	r1, sl, r7, lsl #2
   2bf18:	ldr	r1, [r1, #4]
   2bf1c:	sdiv	r4, r2, r1
   2bf20:	mls	r4, r4, r1, r2
   2bf24:	cmp	r4, #0
   2bf28:	beq	2bf44 <GetDataSlab+0x9b08>
   2bf2c:	ldr	r6, [sl, r7, lsl #2]
   2bf30:	ldr	r3, [lr, r7, lsl #2]
   2bf34:	sub	r1, r1, r4
   2bf38:	mla	r1, r3, r6, r1
   2bf3c:	add	r2, r1, r2
   2bf40:	b	2bf5c <GetDataSlab+0x9b20>
   2bf44:	ldr	r1, [lr, r7, lsl #2]
   2bf48:	cmp	r1, #0
   2bf4c:	beq	2bf60 <GetDataSlab+0x9b24>
   2bf50:	ldr	r3, [sl, r7, lsl #2]
   2bf54:	mla	r2, r3, r1, r2
   2bf58:	mul	r1, r3, r1
   2bf5c:	add	r9, r9, r1, lsl #2
   2bf60:	add	r1, r7, #1
   2bf64:	add	r3, r7, #2
   2bf68:	ldr	r4, [fp, #24]
   2bf6c:	cmp	r3, r4
   2bf70:	blt	2bee8 <GetDataSlab+0x9aac>
   2bf74:	b	2bf88 <GetDataSlab+0x9b4c>
   2bf78:	ldr	r1, [sp, #52]	; 0x34
   2bf7c:	ldr	r1, [r1, r7, lsl #2]
   2bf80:	add	r9, r9, r1, lsl #2
   2bf84:	add	r2, r1, r2
   2bf88:	add	r8, r0, r8
   2bf8c:	mov	r0, #0
   2bf90:	ldr	r1, [sp, #44]	; 0x2c
   2bf94:	cmp	r8, r1
   2bf98:	ldr	r4, [fp, #20]
   2bf9c:	blt	2be64 <GetDataSlab+0x9a28>
   2bfa0:	b	22560 <GetDataSlab+0x124>
   2bfa4:	ldr	lr, [lr]
   2bfa8:	sub	r1, lr, #1
   2bfac:	str	r1, [fp, #-72]	; 0xffffffb8
   2bfb0:	ldr	r1, [r8]
   2bfb4:	str	r1, [sp, #64]	; 0x40
   2bfb8:	ldr	r0, [r4]
   2bfbc:	str	r0, [sp, #44]	; 0x2c
   2bfc0:	mov	r2, #0
   2bfc4:	ldr	r0, [fp, #24]
   2bfc8:	cmp	r0, #2
   2bfcc:	blt	2c05c <GetDataSlab+0x9c20>
   2bfd0:	mov	r1, #1
   2bfd4:	mov	r2, #0
   2bfd8:	mov	r0, r8
   2bfdc:	ldr	r3, [fp, #16]
   2bfe0:	ldr	r7, [r3, r1, lsl #2]
   2bfe4:	sub	r7, r7, #1
   2bfe8:	str	r7, [ip, r1, lsl #2]
   2bfec:	sub	r8, r1, #1
   2bff0:	ldr	r3, [fp, #8]
   2bff4:	ldr	r5, [r3, r8, lsl #2]
   2bff8:	str	r5, [sl, r1, lsl #2]
   2bffc:	mov	r4, #0
   2c000:	mov	r3, r0
   2c004:	ldr	r6, [r3, -r4, lsl #2]!
   2c008:	mul	r7, r7, r6
   2c00c:	ldr	r3, [r3, #4]
   2c010:	mul	r5, r3, r5
   2c014:	add	r4, r4, #1
   2c018:	cmp	r1, r4
   2c01c:	bne	2c000 <GetDataSlab+0x9bc4>
   2c020:	str	r5, [sl, r1, lsl #2]
   2c024:	str	r7, [ip, r1, lsl #2]
   2c028:	ldr	r3, [sl, r8, lsl #2]
   2c02c:	ldr	r4, [r9, r1, lsl #2]
   2c030:	mla	r2, r4, r3, r2
   2c034:	ldr	r4, [fp, #20]
   2c038:	ldr	r3, [r4, r1, lsl #2]
   2c03c:	ldr	r5, [sp, #44]	; 0x2c
   2c040:	mul	r5, r3, r5
   2c044:	str	r5, [sp, #44]	; 0x2c
   2c048:	add	r0, r0, #4
   2c04c:	add	r1, r1, #1
   2c050:	ldr	r3, [fp, #24]
   2c054:	cmp	r1, r3
   2c058:	bne	2bfdc <GetDataSlab+0x9ba0>
   2c05c:	ldr	r0, [sp, #48]	; 0x30
   2c060:	add	r9, r0, r2, lsl #3
   2c064:	cmp	lr, #1
   2c068:	bne	35f60 <GetDataSlab+0x13b24>
   2c06c:	ldr	r0, [sp, #44]	; 0x2c
   2c070:	cmp	r0, #1
   2c074:	blt	3ae3c <GetDataSlab+0x18a00>
   2c078:	ldr	r0, [fp, #12]
   2c07c:	add	lr, r0, #4
   2c080:	mov	r0, ip
   2c084:	add	ip, r4, #4
   2c088:	add	r1, sp, #104	; 0x68
   2c08c:	orr	r5, r1, #4
   2c090:	orr	r0, r0, #4
   2c094:	str	r0, [sp, #52]	; 0x34
   2c098:	mov	r8, #0
   2c09c:	ldr	r0, [fp, #12]
   2c0a0:	ldr	r0, [r0]
   2c0a4:	mov	r1, r4
   2c0a8:	add	r4, r0, r2
   2c0ac:	add	sl, r9, r0, lsl #3
   2c0b0:	ldr	r0, [r1]
   2c0b4:	cmp	r0, #1
   2c0b8:	blt	2c0f0 <GetDataSlab+0x9cb4>
   2c0bc:	ldr	r0, [sp, #60]	; 0x3c
   2c0c0:	add	r7, r0, r8, lsl #2
   2c0c4:	mov	r2, #0
   2c0c8:	mov	r3, sl
   2c0cc:	vldr	d16, [r3]
   2c0d0:	vcvt.s32.f64	s0, d16
   2c0d4:	vmov	r0, s0
   2c0d8:	str	r0, [r7, r2, lsl #2]
   2c0dc:	add	r3, r3, #8
   2c0e0:	add	r2, r2, #1
   2c0e4:	ldr	r0, [r1]
   2c0e8:	cmp	r2, r0
   2c0ec:	blt	2c0cc <GetDataSlab+0x9c90>
   2c0f0:	ldr	r1, [fp, #12]
   2c0f4:	ldr	r1, [r1]
   2c0f8:	ldr	r2, [fp, #8]
   2c0fc:	ldr	r2, [r2]
   2c100:	sub	r1, r2, r1
   2c104:	add	r9, sl, r1, lsl #3
   2c108:	add	r2, r4, r1
   2c10c:	ldr	r1, [fp, #24]
   2c110:	cmp	r1, #2
   2c114:	blt	2c1c0 <GetDataSlab+0x9d84>
   2c118:	mov	r1, #0
   2c11c:	add	sl, sp, #64	; 0x40
   2c120:	mov	r7, r1
   2c124:	ldr	r1, [r5, r1, lsl #2]
   2c128:	add	r1, r1, #1
   2c12c:	str	r1, [r5, r7, lsl #2]
   2c130:	ldr	r4, [ip, r7, lsl #2]
   2c134:	sdiv	r6, r1, r4
   2c138:	mls	r1, r6, r4, r1
   2c13c:	cmp	r1, #0
   2c140:	bne	2c1b0 <GetDataSlab+0x9d74>
   2c144:	mov	r1, #0
   2c148:	str	r1, [r5, r7, lsl #2]
   2c14c:	add	r1, sl, r7, lsl #2
   2c150:	ldr	r1, [r1, #4]
   2c154:	sdiv	r4, r2, r1
   2c158:	mls	r4, r4, r1, r2
   2c15c:	cmp	r4, #0
   2c160:	beq	2c17c <GetDataSlab+0x9d40>
   2c164:	ldr	r6, [sl, r7, lsl #2]
   2c168:	ldr	r3, [lr, r7, lsl #2]
   2c16c:	sub	r1, r1, r4
   2c170:	mla	r1, r3, r6, r1
   2c174:	add	r2, r1, r2
   2c178:	b	2c194 <GetDataSlab+0x9d58>
   2c17c:	ldr	r1, [lr, r7, lsl #2]
   2c180:	cmp	r1, #0
   2c184:	beq	2c198 <GetDataSlab+0x9d5c>
   2c188:	ldr	r3, [sl, r7, lsl #2]
   2c18c:	mla	r2, r3, r1, r2
   2c190:	mul	r1, r3, r1
   2c194:	add	r9, r9, r1, lsl #3
   2c198:	add	r1, r7, #1
   2c19c:	add	r3, r7, #2
   2c1a0:	ldr	r4, [fp, #24]
   2c1a4:	cmp	r3, r4
   2c1a8:	blt	2c120 <GetDataSlab+0x9ce4>
   2c1ac:	b	2c1c0 <GetDataSlab+0x9d84>
   2c1b0:	ldr	r1, [sp, #52]	; 0x34
   2c1b4:	ldr	r1, [r1, r7, lsl #2]
   2c1b8:	add	r9, r9, r1, lsl #3
   2c1bc:	add	r2, r1, r2
   2c1c0:	add	r8, r0, r8
   2c1c4:	mov	r0, #0
   2c1c8:	ldr	r1, [sp, #44]	; 0x2c
   2c1cc:	cmp	r8, r1
   2c1d0:	ldr	r4, [fp, #20]
   2c1d4:	blt	2c09c <GetDataSlab+0x9c60>
   2c1d8:	b	22560 <GetDataSlab+0x124>
   2c1dc:	ldr	ip, [lr]
   2c1e0:	sub	r1, ip, #1
   2c1e4:	str	r1, [fp, #-72]	; 0xffffffb8
   2c1e8:	ldr	r1, [r8]
   2c1ec:	str	r1, [sp, #64]	; 0x40
   2c1f0:	ldr	r0, [r4]
   2c1f4:	str	r0, [sp, #44]	; 0x2c
   2c1f8:	mov	r1, #0
   2c1fc:	ldr	r0, [fp, #24]
   2c200:	cmp	r0, #2
   2c204:	blt	2c298 <GetDataSlab+0x9e5c>
   2c208:	mov	r2, #1
   2c20c:	mov	r1, #0
   2c210:	mov	r0, r8
   2c214:	sub	r5, fp, #72	; 0x48
   2c218:	ldr	r7, [lr, r2, lsl #2]
   2c21c:	sub	r7, r7, #1
   2c220:	str	r7, [r5, r2, lsl #2]
   2c224:	sub	lr, r2, #1
   2c228:	ldr	r5, [r8, lr, lsl #2]
   2c22c:	str	r5, [sl, r2, lsl #2]
   2c230:	mov	r4, #0
   2c234:	mov	r3, r0
   2c238:	ldr	r6, [r3, -r4, lsl #2]!
   2c23c:	mul	r7, r7, r6
   2c240:	ldr	r3, [r3, #4]
   2c244:	mul	r5, r3, r5
   2c248:	add	r4, r4, #1
   2c24c:	cmp	r2, r4
   2c250:	bne	2c234 <GetDataSlab+0x9df8>
   2c254:	str	r5, [sl, r2, lsl #2]
   2c258:	sub	r5, fp, #72	; 0x48
   2c25c:	str	r7, [r5, r2, lsl #2]
   2c260:	ldr	r3, [sl, lr, lsl #2]
   2c264:	ldr	r7, [r9, r2, lsl #2]
   2c268:	mla	r1, r7, r3, r1
   2c26c:	ldr	r4, [fp, #20]
   2c270:	ldr	r3, [r4, r2, lsl #2]
   2c274:	ldr	r7, [sp, #44]	; 0x2c
   2c278:	mul	r7, r3, r7
   2c27c:	str	r7, [sp, #44]	; 0x2c
   2c280:	add	r0, r0, #4
   2c284:	add	r2, r2, #1
   2c288:	ldr	r3, [fp, #24]
   2c28c:	cmp	r2, r3
   2c290:	ldr	lr, [fp, #16]
   2c294:	bne	2c218 <GetDataSlab+0x9ddc>
   2c298:	ldr	r0, [sp, #48]	; 0x30
   2c29c:	add	r8, r0, r1, lsl #3
   2c2a0:	cmp	ip, #1
   2c2a4:	bne	360f0 <GetDataSlab+0x13cb4>
   2c2a8:	ldr	r0, [sp, #44]	; 0x2c
   2c2ac:	cmp	r0, #1
   2c2b0:	sub	r0, fp, #72	; 0x48
   2c2b4:	blt	36278 <GetDataSlab+0x13e3c>
   2c2b8:	add	sl, r9, #4
   2c2bc:	add	lr, r4, #4
   2c2c0:	add	r2, sp, #104	; 0x68
   2c2c4:	orr	r5, r2, #4
   2c2c8:	orr	r0, r0, #4
   2c2cc:	str	r0, [sp, #40]	; 0x28
   2c2d0:	mov	ip, #0
   2c2d4:	ldr	r0, [r9]
   2c2d8:	add	r9, r0, r1
   2c2dc:	add	r2, r8, r0, lsl #3
   2c2e0:	ldr	r0, [r4]
   2c2e4:	cmp	r0, #1
   2c2e8:	blt	2c314 <GetDataSlab+0x9ed8>
   2c2ec:	ldr	r0, [sp, #60]	; 0x3c
   2c2f0:	add	r7, r0, ip, lsl #2
   2c2f4:	mov	r1, #0
   2c2f8:	mov	r3, r2
   2c2fc:	ldr	r0, [r3], #8
   2c300:	str	r0, [r7, r1, lsl #2]
   2c304:	add	r1, r1, #1
   2c308:	ldr	r0, [r4]
   2c30c:	cmp	r1, r0
   2c310:	blt	2c2fc <GetDataSlab+0x9ec0>
   2c314:	ldr	r1, [fp, #12]
   2c318:	ldr	r1, [r1]
   2c31c:	ldr	r3, [fp, #8]
   2c320:	ldr	r3, [r3]
   2c324:	sub	r1, r3, r1
   2c328:	add	r8, r2, r1, lsl #3
   2c32c:	add	r1, r9, r1
   2c330:	ldr	r2, [fp, #24]
   2c334:	cmp	r2, #2
   2c338:	blt	2c3dc <GetDataSlab+0x9fa0>
   2c33c:	mov	r3, #0
   2c340:	ldr	r9, [fp, #12]
   2c344:	mov	r7, r3
   2c348:	ldr	r3, [r5, r3, lsl #2]
   2c34c:	add	r3, r3, #1
   2c350:	str	r3, [r5, r7, lsl #2]
   2c354:	ldr	r4, [lr, r7, lsl #2]
   2c358:	sdiv	r6, r3, r4
   2c35c:	mls	r3, r6, r4, r3
   2c360:	cmp	r3, #0
   2c364:	bne	2c3e4 <GetDataSlab+0x9fa8>
   2c368:	mov	r2, #0
   2c36c:	str	r2, [r5, r7, lsl #2]
   2c370:	add	r2, sp, #64	; 0x40
   2c374:	add	r3, r2, r7, lsl #2
   2c378:	ldr	r3, [r3, #4]
   2c37c:	sdiv	r4, r1, r3
   2c380:	mls	r4, r4, r3, r1
   2c384:	cmp	r4, #0
   2c388:	beq	2c3a4 <GetDataSlab+0x9f68>
   2c38c:	ldr	r6, [r2, r7, lsl #2]
   2c390:	ldr	r2, [sl, r7, lsl #2]
   2c394:	sub	r3, r3, r4
   2c398:	mla	r2, r2, r6, r3
   2c39c:	add	r1, r2, r1
   2c3a0:	b	2c3c0 <GetDataSlab+0x9f84>
   2c3a4:	ldr	r3, [sl, r7, lsl #2]
   2c3a8:	cmp	r3, #0
   2c3ac:	beq	2c3c4 <GetDataSlab+0x9f88>
   2c3b0:	add	r2, sp, #64	; 0x40
   2c3b4:	ldr	r2, [r2, r7, lsl #2]
   2c3b8:	mla	r1, r2, r3, r1
   2c3bc:	mul	r2, r2, r3
   2c3c0:	add	r8, r8, r2, lsl #3
   2c3c4:	add	r3, r7, #1
   2c3c8:	add	r2, r7, #2
   2c3cc:	ldr	r4, [fp, #24]
   2c3d0:	cmp	r2, r4
   2c3d4:	blt	2c344 <GetDataSlab+0x9f08>
   2c3d8:	b	2c3f4 <GetDataSlab+0x9fb8>
   2c3dc:	ldr	r9, [fp, #12]
   2c3e0:	b	2c3f4 <GetDataSlab+0x9fb8>
   2c3e4:	ldr	r2, [sp, #40]	; 0x28
   2c3e8:	ldr	r2, [r2, r7, lsl #2]
   2c3ec:	add	r8, r8, r2, lsl #3
   2c3f0:	add	r1, r2, r1
   2c3f4:	add	ip, r0, ip
   2c3f8:	ldr	r0, [sp, #44]	; 0x2c
   2c3fc:	cmp	ip, r0
   2c400:	ldr	r4, [fp, #20]
   2c404:	blt	2c2d4 <GetDataSlab+0x9e98>
   2c408:	mov	r0, #0
   2c40c:	ldr	lr, [fp, #16]
   2c410:	b	3627c <GetDataSlab+0x13e40>
   2c414:	ldr	lr, [lr]
   2c418:	sub	r1, lr, #1
   2c41c:	str	r1, [fp, #-72]	; 0xffffffb8
   2c420:	ldr	r1, [r8]
   2c424:	str	r1, [sp, #64]	; 0x40
   2c428:	ldr	r0, [r4]
   2c42c:	str	r0, [sp, #44]	; 0x2c
   2c430:	mov	r2, #0
   2c434:	ldr	r0, [fp, #24]
   2c438:	cmp	r0, #2
   2c43c:	blt	2c4cc <GetDataSlab+0xa090>
   2c440:	mov	r1, #1
   2c444:	mov	r2, #0
   2c448:	mov	r0, r8
   2c44c:	ldr	r3, [fp, #16]
   2c450:	ldr	r7, [r3, r1, lsl #2]
   2c454:	sub	r7, r7, #1
   2c458:	str	r7, [ip, r1, lsl #2]
   2c45c:	sub	r8, r1, #1
   2c460:	ldr	r3, [fp, #8]
   2c464:	ldr	r5, [r3, r8, lsl #2]
   2c468:	str	r5, [sl, r1, lsl #2]
   2c46c:	mov	r4, #0
   2c470:	mov	r3, r0
   2c474:	ldr	r6, [r3, -r4, lsl #2]!
   2c478:	mul	r7, r7, r6
   2c47c:	ldr	r3, [r3, #4]
   2c480:	mul	r5, r3, r5
   2c484:	add	r4, r4, #1
   2c488:	cmp	r1, r4
   2c48c:	bne	2c470 <GetDataSlab+0xa034>
   2c490:	str	r5, [sl, r1, lsl #2]
   2c494:	str	r7, [ip, r1, lsl #2]
   2c498:	ldr	r3, [sl, r8, lsl #2]
   2c49c:	ldr	r4, [r9, r1, lsl #2]
   2c4a0:	mla	r2, r4, r3, r2
   2c4a4:	ldr	r4, [fp, #20]
   2c4a8:	ldr	r3, [r4, r1, lsl #2]
   2c4ac:	ldr	r5, [sp, #44]	; 0x2c
   2c4b0:	mul	r5, r3, r5
   2c4b4:	str	r5, [sp, #44]	; 0x2c
   2c4b8:	add	r0, r0, #4
   2c4bc:	add	r1, r1, #1
   2c4c0:	ldr	r3, [fp, #24]
   2c4c4:	cmp	r1, r3
   2c4c8:	bne	2c44c <GetDataSlab+0xa010>
   2c4cc:	ldr	r0, [sp, #48]	; 0x30
   2c4d0:	add	ip, r0, r2
   2c4d4:	cmp	lr, #1
   2c4d8:	bne	3635c <GetDataSlab+0x13f20>
   2c4dc:	ldr	r0, [sp, #44]	; 0x2c
   2c4e0:	cmp	r0, #1
   2c4e4:	blt	3ae3c <GetDataSlab+0x18a00>
   2c4e8:	add	r9, r9, #4
   2c4ec:	add	r8, r4, #4
   2c4f0:	add	r0, sp, #104	; 0x68
   2c4f4:	orr	r5, r0, #4
   2c4f8:	sub	r0, fp, #72	; 0x48
   2c4fc:	orr	r0, r0, #4
   2c500:	str	r0, [sp, #52]	; 0x34
   2c504:	mov	sl, #0
   2c508:	ldr	r0, [fp, #12]
   2c50c:	ldr	r0, [r0]
   2c510:	add	r2, r0, r2
   2c514:	add	r3, ip, r0
   2c518:	ldr	r0, [r4]
   2c51c:	cmp	r0, #1
   2c520:	blt	2c548 <GetDataSlab+0xa10c>
   2c524:	ldr	r0, [sp, #60]	; 0x3c
   2c528:	add	r1, r0, sl, lsl #2
   2c52c:	mov	r7, #0
   2c530:	ldrb	r0, [r3, r7]
   2c534:	str	r0, [r1, r7, lsl #2]
   2c538:	add	r7, r7, #1
   2c53c:	ldr	r0, [r4]
   2c540:	cmp	r7, r0
   2c544:	blt	2c530 <GetDataSlab+0xa0f4>
   2c548:	ldr	r1, [fp, #12]
   2c54c:	ldr	r1, [r1]
   2c550:	ldr	r7, [fp, #8]
   2c554:	ldr	r4, [r7]
   2c558:	sub	r1, r4, r1
   2c55c:	add	ip, r3, r1
   2c560:	add	r2, r2, r1
   2c564:	ldr	r1, [fp, #24]
   2c568:	cmp	r1, #2
   2c56c:	blt	2c618 <GetDataSlab+0xa1dc>
   2c570:	mov	r1, #0
   2c574:	mov	r7, r1
   2c578:	ldr	r1, [r5, r1, lsl #2]
   2c57c:	add	r1, r1, #1
   2c580:	str	r1, [r5, r7, lsl #2]
   2c584:	ldr	r4, [r8, r7, lsl #2]
   2c588:	sdiv	lr, r1, r4
   2c58c:	mls	r1, lr, r4, r1
   2c590:	cmp	r1, #0
   2c594:	bne	2c608 <GetDataSlab+0xa1cc>
   2c598:	mov	r1, #0
   2c59c:	str	r1, [r5, r7, lsl #2]
   2c5a0:	add	r3, sp, #64	; 0x40
   2c5a4:	add	r1, r3, r7, lsl #2
   2c5a8:	ldr	r1, [r1, #4]
   2c5ac:	sdiv	r4, r2, r1
   2c5b0:	mls	r4, r4, r1, r2
   2c5b4:	cmp	r4, #0
   2c5b8:	beq	2c5d8 <GetDataSlab+0xa19c>
   2c5bc:	ldr	r6, [r3, r7, lsl #2]
   2c5c0:	ldr	r3, [r9, r7, lsl #2]
   2c5c4:	sub	r1, r1, r4
   2c5c8:	mla	r1, r3, r6, r1
   2c5cc:	add	r2, r1, r2
   2c5d0:	add	ip, ip, r1
   2c5d4:	b	2c5f0 <GetDataSlab+0xa1b4>
   2c5d8:	ldr	r1, [r9, r7, lsl #2]
   2c5dc:	cmp	r1, #0
   2c5e0:	addne	r3, sp, #64	; 0x40
   2c5e4:	ldrne	r3, [r3, r7, lsl #2]
   2c5e8:	mlane	r2, r3, r1, r2
   2c5ec:	mlane	ip, r3, r1, ip
   2c5f0:	add	r1, r7, #1
   2c5f4:	add	r3, r7, #2
   2c5f8:	ldr	r7, [fp, #24]
   2c5fc:	cmp	r3, r7
   2c600:	blt	2c574 <GetDataSlab+0xa138>
   2c604:	b	2c618 <GetDataSlab+0xa1dc>
   2c608:	ldr	r1, [sp, #52]	; 0x34
   2c60c:	ldr	r1, [r1, r7, lsl #2]
   2c610:	add	ip, ip, r1
   2c614:	add	r2, r1, r2
   2c618:	add	sl, r0, sl
   2c61c:	mov	r0, #0
   2c620:	ldr	r1, [sp, #44]	; 0x2c
   2c624:	cmp	sl, r1
   2c628:	ldr	r4, [fp, #20]
   2c62c:	blt	2c508 <GetDataSlab+0xa0cc>
   2c630:	b	22560 <GetDataSlab+0x124>
   2c634:	ldr	lr, [lr]
   2c638:	sub	r1, lr, #1
   2c63c:	str	r1, [fp, #-72]	; 0xffffffb8
   2c640:	ldr	r1, [r8]
   2c644:	str	r1, [sp, #64]	; 0x40
   2c648:	ldr	r0, [r4]
   2c64c:	str	r0, [sp, #44]	; 0x2c
   2c650:	mov	r2, #0
   2c654:	ldr	r0, [fp, #24]
   2c658:	cmp	r0, #2
   2c65c:	blt	2c6ec <GetDataSlab+0xa2b0>
   2c660:	mov	r1, #1
   2c664:	mov	r2, #0
   2c668:	mov	r0, r8
   2c66c:	ldr	r3, [fp, #16]
   2c670:	ldr	r7, [r3, r1, lsl #2]
   2c674:	sub	r7, r7, #1
   2c678:	str	r7, [ip, r1, lsl #2]
   2c67c:	sub	r8, r1, #1
   2c680:	ldr	r3, [fp, #8]
   2c684:	ldr	r5, [r3, r8, lsl #2]
   2c688:	str	r5, [sl, r1, lsl #2]
   2c68c:	mov	r4, #0
   2c690:	mov	r3, r0
   2c694:	ldr	r6, [r3, -r4, lsl #2]!
   2c698:	mul	r7, r7, r6
   2c69c:	ldr	r3, [r3, #4]
   2c6a0:	mul	r5, r3, r5
   2c6a4:	add	r4, r4, #1
   2c6a8:	cmp	r1, r4
   2c6ac:	bne	2c690 <GetDataSlab+0xa254>
   2c6b0:	str	r5, [sl, r1, lsl #2]
   2c6b4:	str	r7, [ip, r1, lsl #2]
   2c6b8:	ldr	r3, [sl, r8, lsl #2]
   2c6bc:	ldr	r4, [r9, r1, lsl #2]
   2c6c0:	mla	r2, r4, r3, r2
   2c6c4:	ldr	r4, [fp, #20]
   2c6c8:	ldr	r3, [r4, r1, lsl #2]
   2c6cc:	ldr	r5, [sp, #44]	; 0x2c
   2c6d0:	mul	r5, r3, r5
   2c6d4:	str	r5, [sp, #44]	; 0x2c
   2c6d8:	add	r0, r0, #4
   2c6dc:	add	r1, r1, #1
   2c6e0:	ldr	r3, [fp, #24]
   2c6e4:	cmp	r1, r3
   2c6e8:	bne	2c66c <GetDataSlab+0xa230>
   2c6ec:	ldr	r0, [sp, #48]	; 0x30
   2c6f0:	add	ip, r0, r2, lsl #1
   2c6f4:	cmp	lr, #1
   2c6f8:	bne	364dc <GetDataSlab+0x140a0>
   2c6fc:	ldr	r0, [sp, #44]	; 0x2c
   2c700:	cmp	r0, #1
   2c704:	blt	3ae3c <GetDataSlab+0x18a00>
   2c708:	add	sl, r9, #4
   2c70c:	add	r8, r4, #4
   2c710:	add	r0, sp, #104	; 0x68
   2c714:	orr	r5, r0, #4
   2c718:	sub	r0, fp, #72	; 0x48
   2c71c:	orr	r0, r0, #4
   2c720:	str	r0, [sp, #52]	; 0x34
   2c724:	mov	lr, #0
   2c728:	ldr	r0, [fp, #12]
   2c72c:	ldr	r0, [r0]
   2c730:	add	r9, r0, r2
   2c734:	add	r3, ip, r0, lsl #1
   2c738:	ldr	r0, [r4]
   2c73c:	cmp	r0, #1
   2c740:	blt	2c76c <GetDataSlab+0xa330>
   2c744:	ldr	r0, [sp, #60]	; 0x3c
   2c748:	add	r7, r0, lr, lsl #2
   2c74c:	mov	r2, #0
   2c750:	mov	r1, r3
   2c754:	ldrsh	r0, [r1], #2
   2c758:	str	r0, [r7, r2, lsl #2]
   2c75c:	add	r2, r2, #1
   2c760:	ldr	r0, [r4]
   2c764:	cmp	r2, r0
   2c768:	blt	2c754 <GetDataSlab+0xa318>
   2c76c:	ldr	r1, [fp, #12]
   2c770:	ldr	r1, [r1]
   2c774:	ldr	r2, [fp, #8]
   2c778:	ldr	r2, [r2]
   2c77c:	sub	r1, r2, r1
   2c780:	add	ip, r3, r1, lsl #1
   2c784:	add	r2, r9, r1
   2c788:	ldr	r1, [fp, #24]
   2c78c:	cmp	r1, #2
   2c790:	blt	2c840 <GetDataSlab+0xa404>
   2c794:	mov	r1, #0
   2c798:	mov	r9, #0
   2c79c:	mov	r7, r1
   2c7a0:	ldr	r1, [r5, r1, lsl #2]
   2c7a4:	add	r1, r1, #1
   2c7a8:	str	r1, [r5, r7, lsl #2]
   2c7ac:	ldr	r4, [r8, r7, lsl #2]
   2c7b0:	sdiv	r6, r1, r4
   2c7b4:	mls	r1, r6, r4, r1
   2c7b8:	cmp	r1, #0
   2c7bc:	bne	2c830 <GetDataSlab+0xa3f4>
   2c7c0:	str	r9, [r5, r7, lsl #2]
   2c7c4:	add	r3, sp, #64	; 0x40
   2c7c8:	add	r1, r3, r7, lsl #2
   2c7cc:	ldr	r1, [r1, #4]
   2c7d0:	sdiv	r4, r2, r1
   2c7d4:	mls	r4, r4, r1, r2
   2c7d8:	cmp	r4, #0
   2c7dc:	beq	2c7f8 <GetDataSlab+0xa3bc>
   2c7e0:	ldr	r6, [r3, r7, lsl #2]
   2c7e4:	ldr	r3, [sl, r7, lsl #2]
   2c7e8:	sub	r1, r1, r4
   2c7ec:	mla	r1, r3, r6, r1
   2c7f0:	add	r2, r1, r2
   2c7f4:	b	2c814 <GetDataSlab+0xa3d8>
   2c7f8:	ldr	r1, [sl, r7, lsl #2]
   2c7fc:	cmp	r1, #0
   2c800:	beq	2c818 <GetDataSlab+0xa3dc>
   2c804:	add	r3, sp, #64	; 0x40
   2c808:	ldr	r3, [r3, r7, lsl #2]
   2c80c:	mla	r2, r3, r1, r2
   2c810:	mul	r1, r3, r1
   2c814:	add	ip, ip, r1, lsl #1
   2c818:	add	r1, r7, #1
   2c81c:	add	r3, r7, #2
   2c820:	ldr	r4, [fp, #24]
   2c824:	cmp	r3, r4
   2c828:	blt	2c79c <GetDataSlab+0xa360>
   2c82c:	b	2c840 <GetDataSlab+0xa404>
   2c830:	ldr	r1, [sp, #52]	; 0x34
   2c834:	ldr	r1, [r1, r7, lsl #2]
   2c838:	add	ip, ip, r1, lsl #1
   2c83c:	add	r2, r1, r2
   2c840:	add	lr, r0, lr
   2c844:	mov	r0, #0
   2c848:	ldr	r1, [sp, #44]	; 0x2c
   2c84c:	cmp	lr, r1
   2c850:	ldr	r4, [fp, #20]
   2c854:	blt	2c728 <GetDataSlab+0xa2ec>
   2c858:	b	22560 <GetDataSlab+0x124>
   2c85c:	ldr	lr, [lr]
   2c860:	sub	r1, lr, #1
   2c864:	str	r1, [fp, #-72]	; 0xffffffb8
   2c868:	ldr	r1, [r8]
   2c86c:	str	r1, [sp, #64]	; 0x40
   2c870:	ldr	r0, [r4]
   2c874:	str	r0, [sp, #44]	; 0x2c
   2c878:	mov	r2, #0
   2c87c:	ldr	r0, [fp, #24]
   2c880:	cmp	r0, #2
   2c884:	blt	2c914 <GetDataSlab+0xa4d8>
   2c888:	mov	r1, #1
   2c88c:	mov	r2, #0
   2c890:	mov	r0, r8
   2c894:	ldr	r3, [fp, #16]
   2c898:	ldr	r7, [r3, r1, lsl #2]
   2c89c:	sub	r7, r7, #1
   2c8a0:	str	r7, [ip, r1, lsl #2]
   2c8a4:	sub	r8, r1, #1
   2c8a8:	ldr	r3, [fp, #8]
   2c8ac:	ldr	r5, [r3, r8, lsl #2]
   2c8b0:	str	r5, [sl, r1, lsl #2]
   2c8b4:	mov	r4, #0
   2c8b8:	mov	r3, r0
   2c8bc:	ldr	r6, [r3, -r4, lsl #2]!
   2c8c0:	mul	r7, r7, r6
   2c8c4:	ldr	r3, [r3, #4]
   2c8c8:	mul	r5, r3, r5
   2c8cc:	add	r4, r4, #1
   2c8d0:	cmp	r1, r4
   2c8d4:	bne	2c8b8 <GetDataSlab+0xa47c>
   2c8d8:	str	r5, [sl, r1, lsl #2]
   2c8dc:	str	r7, [ip, r1, lsl #2]
   2c8e0:	ldr	r3, [sl, r8, lsl #2]
   2c8e4:	ldr	r4, [r9, r1, lsl #2]
   2c8e8:	mla	r2, r4, r3, r2
   2c8ec:	ldr	r4, [fp, #20]
   2c8f0:	ldr	r3, [r4, r1, lsl #2]
   2c8f4:	ldr	r5, [sp, #44]	; 0x2c
   2c8f8:	mul	r5, r3, r5
   2c8fc:	str	r5, [sp, #44]	; 0x2c
   2c900:	add	r0, r0, #4
   2c904:	add	r1, r1, #1
   2c908:	ldr	r3, [fp, #24]
   2c90c:	cmp	r1, r3
   2c910:	bne	2c894 <GetDataSlab+0xa458>
   2c914:	ldr	r0, [sp, #48]	; 0x30
   2c918:	add	ip, r0, r2, lsl #1
   2c91c:	cmp	lr, #1
   2c920:	bne	36660 <GetDataSlab+0x14224>
   2c924:	ldr	r0, [sp, #44]	; 0x2c
   2c928:	cmp	r0, #1
   2c92c:	blt	3ae3c <GetDataSlab+0x18a00>
   2c930:	add	sl, r9, #4
   2c934:	add	r8, r4, #4
   2c938:	add	r0, sp, #104	; 0x68
   2c93c:	orr	r5, r0, #4
   2c940:	sub	r0, fp, #72	; 0x48
   2c944:	orr	r0, r0, #4
   2c948:	str	r0, [sp, #52]	; 0x34
   2c94c:	mov	lr, #0
   2c950:	ldr	r0, [fp, #12]
   2c954:	ldr	r0, [r0]
   2c958:	add	r9, r0, r2
   2c95c:	add	r3, ip, r0, lsl #1
   2c960:	ldr	r0, [r4]
   2c964:	cmp	r0, #1
   2c968:	blt	2c994 <GetDataSlab+0xa558>
   2c96c:	ldr	r0, [sp, #60]	; 0x3c
   2c970:	add	r7, r0, lr, lsl #2
   2c974:	mov	r2, #0
   2c978:	mov	r1, r3
   2c97c:	ldrh	r0, [r1], #2
   2c980:	str	r0, [r7, r2, lsl #2]
   2c984:	add	r2, r2, #1
   2c988:	ldr	r0, [r4]
   2c98c:	cmp	r2, r0
   2c990:	blt	2c97c <GetDataSlab+0xa540>
   2c994:	ldr	r1, [fp, #12]
   2c998:	ldr	r1, [r1]
   2c99c:	ldr	r2, [fp, #8]
   2c9a0:	ldr	r2, [r2]
   2c9a4:	sub	r1, r2, r1
   2c9a8:	add	ip, r3, r1, lsl #1
   2c9ac:	add	r2, r9, r1
   2c9b0:	ldr	r1, [fp, #24]
   2c9b4:	cmp	r1, #2
   2c9b8:	blt	2ca68 <GetDataSlab+0xa62c>
   2c9bc:	mov	r1, #0
   2c9c0:	mov	r9, #0
   2c9c4:	mov	r7, r1
   2c9c8:	ldr	r1, [r5, r1, lsl #2]
   2c9cc:	add	r1, r1, #1
   2c9d0:	str	r1, [r5, r7, lsl #2]
   2c9d4:	ldr	r4, [r8, r7, lsl #2]
   2c9d8:	sdiv	r6, r1, r4
   2c9dc:	mls	r1, r6, r4, r1
   2c9e0:	cmp	r1, #0
   2c9e4:	bne	2ca58 <GetDataSlab+0xa61c>
   2c9e8:	str	r9, [r5, r7, lsl #2]
   2c9ec:	add	r3, sp, #64	; 0x40
   2c9f0:	add	r1, r3, r7, lsl #2
   2c9f4:	ldr	r1, [r1, #4]
   2c9f8:	sdiv	r4, r2, r1
   2c9fc:	mls	r4, r4, r1, r2
   2ca00:	cmp	r4, #0
   2ca04:	beq	2ca20 <GetDataSlab+0xa5e4>
   2ca08:	ldr	r6, [r3, r7, lsl #2]
   2ca0c:	ldr	r3, [sl, r7, lsl #2]
   2ca10:	sub	r1, r1, r4
   2ca14:	mla	r1, r3, r6, r1
   2ca18:	add	r2, r1, r2
   2ca1c:	b	2ca3c <GetDataSlab+0xa600>
   2ca20:	ldr	r1, [sl, r7, lsl #2]
   2ca24:	cmp	r1, #0
   2ca28:	beq	2ca40 <GetDataSlab+0xa604>
   2ca2c:	add	r3, sp, #64	; 0x40
   2ca30:	ldr	r3, [r3, r7, lsl #2]
   2ca34:	mla	r2, r3, r1, r2
   2ca38:	mul	r1, r3, r1
   2ca3c:	add	ip, ip, r1, lsl #1
   2ca40:	add	r1, r7, #1
   2ca44:	add	r3, r7, #2
   2ca48:	ldr	r4, [fp, #24]
   2ca4c:	cmp	r3, r4
   2ca50:	blt	2c9c4 <GetDataSlab+0xa588>
   2ca54:	b	2ca68 <GetDataSlab+0xa62c>
   2ca58:	ldr	r1, [sp, #52]	; 0x34
   2ca5c:	ldr	r1, [r1, r7, lsl #2]
   2ca60:	add	ip, ip, r1, lsl #1
   2ca64:	add	r2, r1, r2
   2ca68:	add	lr, r0, lr
   2ca6c:	mov	r0, #0
   2ca70:	ldr	r1, [sp, #44]	; 0x2c
   2ca74:	cmp	lr, r1
   2ca78:	ldr	r4, [fp, #20]
   2ca7c:	blt	2c950 <GetDataSlab+0xa514>
   2ca80:	b	22560 <GetDataSlab+0x124>
   2ca84:	ldr	lr, [lr]
   2ca88:	sub	r1, lr, #1
   2ca8c:	str	r1, [fp, #-72]	; 0xffffffb8
   2ca90:	ldr	r1, [r8]
   2ca94:	str	r1, [sp, #64]	; 0x40
   2ca98:	ldr	r0, [r4]
   2ca9c:	str	r0, [sp, #44]	; 0x2c
   2caa0:	mov	r2, #0
   2caa4:	ldr	r0, [fp, #24]
   2caa8:	cmp	r0, #2
   2caac:	blt	2cb3c <GetDataSlab+0xa700>
   2cab0:	mov	r1, #1
   2cab4:	mov	r2, #0
   2cab8:	mov	r0, r8
   2cabc:	ldr	r3, [fp, #16]
   2cac0:	ldr	r7, [r3, r1, lsl #2]
   2cac4:	sub	r7, r7, #1
   2cac8:	str	r7, [ip, r1, lsl #2]
   2cacc:	sub	r8, r1, #1
   2cad0:	ldr	r3, [fp, #8]
   2cad4:	ldr	r5, [r3, r8, lsl #2]
   2cad8:	str	r5, [sl, r1, lsl #2]
   2cadc:	mov	r4, #0
   2cae0:	mov	r3, r0
   2cae4:	ldr	r6, [r3, -r4, lsl #2]!
   2cae8:	mul	r7, r7, r6
   2caec:	ldr	r3, [r3, #4]
   2caf0:	mul	r5, r3, r5
   2caf4:	add	r4, r4, #1
   2caf8:	cmp	r1, r4
   2cafc:	bne	2cae0 <GetDataSlab+0xa6a4>
   2cb00:	str	r5, [sl, r1, lsl #2]
   2cb04:	str	r7, [ip, r1, lsl #2]
   2cb08:	ldr	r3, [sl, r8, lsl #2]
   2cb0c:	ldr	r4, [r9, r1, lsl #2]
   2cb10:	mla	r2, r4, r3, r2
   2cb14:	ldr	r4, [fp, #20]
   2cb18:	ldr	r3, [r4, r1, lsl #2]
   2cb1c:	ldr	r5, [sp, #44]	; 0x2c
   2cb20:	mul	r5, r3, r5
   2cb24:	str	r5, [sp, #44]	; 0x2c
   2cb28:	add	r0, r0, #4
   2cb2c:	add	r1, r1, #1
   2cb30:	ldr	r3, [fp, #24]
   2cb34:	cmp	r1, r3
   2cb38:	bne	2cabc <GetDataSlab+0xa680>
   2cb3c:	ldr	r0, [sp, #48]	; 0x30
   2cb40:	add	ip, r0, r2, lsl #2
   2cb44:	cmp	lr, #1
   2cb48:	bne	367e4 <GetDataSlab+0x143a8>
   2cb4c:	ldr	r0, [sp, #44]	; 0x2c
   2cb50:	cmp	r0, #1
   2cb54:	blt	3ae3c <GetDataSlab+0x18a00>
   2cb58:	add	r9, r9, #4
   2cb5c:	add	r8, r4, #4
   2cb60:	add	r0, sp, #104	; 0x68
   2cb64:	orr	r5, r0, #4
   2cb68:	sub	r0, fp, #72	; 0x48
   2cb6c:	orr	r0, r0, #4
   2cb70:	str	r0, [sp, #52]	; 0x34
   2cb74:	mov	sl, #0
   2cb78:	ldr	r0, [fp, #12]
   2cb7c:	ldr	r0, [r0]
   2cb80:	add	r2, r0, r2
   2cb84:	add	r3, ip, r0, lsl #2
   2cb88:	ldr	r0, [r4]
   2cb8c:	cmp	r0, #1
   2cb90:	blt	2cbb8 <GetDataSlab+0xa77c>
   2cb94:	ldr	r0, [sp, #60]	; 0x3c
   2cb98:	add	r1, r0, sl, lsl #2
   2cb9c:	mov	r7, #0
   2cba0:	ldr	r0, [r3, r7, lsl #2]
   2cba4:	str	r0, [r1, r7, lsl #2]
   2cba8:	add	r7, r7, #1
   2cbac:	ldr	r0, [r4]
   2cbb0:	cmp	r7, r0
   2cbb4:	blt	2cba0 <GetDataSlab+0xa764>
   2cbb8:	ldr	r1, [fp, #12]
   2cbbc:	ldr	r1, [r1]
   2cbc0:	ldr	r7, [fp, #8]
   2cbc4:	ldr	r4, [r7]
   2cbc8:	sub	r1, r4, r1
   2cbcc:	add	ip, r3, r1, lsl #2
   2cbd0:	add	r2, r2, r1
   2cbd4:	ldr	r1, [fp, #24]
   2cbd8:	cmp	r1, #2
   2cbdc:	blt	2cc90 <GetDataSlab+0xa854>
   2cbe0:	mov	r1, #0
   2cbe4:	mov	r7, r1
   2cbe8:	ldr	r1, [r5, r1, lsl #2]
   2cbec:	add	r1, r1, #1
   2cbf0:	str	r1, [r5, r7, lsl #2]
   2cbf4:	ldr	r4, [r8, r7, lsl #2]
   2cbf8:	sdiv	lr, r1, r4
   2cbfc:	mls	r1, lr, r4, r1
   2cc00:	cmp	r1, #0
   2cc04:	bne	2cc80 <GetDataSlab+0xa844>
   2cc08:	mov	r1, #0
   2cc0c:	str	r1, [r5, r7, lsl #2]
   2cc10:	add	r3, sp, #64	; 0x40
   2cc14:	add	r1, r3, r7, lsl #2
   2cc18:	ldr	r1, [r1, #4]
   2cc1c:	sdiv	r4, r2, r1
   2cc20:	mls	r4, r4, r1, r2
   2cc24:	cmp	r4, #0
   2cc28:	beq	2cc44 <GetDataSlab+0xa808>
   2cc2c:	ldr	r6, [r3, r7, lsl #2]
   2cc30:	ldr	r3, [r9, r7, lsl #2]
   2cc34:	sub	r1, r1, r4
   2cc38:	mla	r1, r3, r6, r1
   2cc3c:	add	r2, r1, r2
   2cc40:	b	2cc60 <GetDataSlab+0xa824>
   2cc44:	ldr	r1, [r9, r7, lsl #2]
   2cc48:	cmp	r1, #0
   2cc4c:	beq	2cc64 <GetDataSlab+0xa828>
   2cc50:	add	r3, sp, #64	; 0x40
   2cc54:	ldr	r3, [r3, r7, lsl #2]
   2cc58:	mla	r2, r3, r1, r2
   2cc5c:	mul	r1, r3, r1
   2cc60:	add	ip, ip, r1, lsl #2
   2cc64:	ldr	r4, [fp, #20]
   2cc68:	add	r1, r7, #1
   2cc6c:	add	r3, r7, #2
   2cc70:	ldr	r7, [fp, #24]
   2cc74:	cmp	r3, r7
   2cc78:	blt	2cbe4 <GetDataSlab+0xa7a8>
   2cc7c:	b	2cc94 <GetDataSlab+0xa858>
   2cc80:	ldr	r1, [sp, #52]	; 0x34
   2cc84:	ldr	r1, [r1, r7, lsl #2]
   2cc88:	add	ip, ip, r1, lsl #2
   2cc8c:	add	r2, r1, r2
   2cc90:	ldr	r4, [fp, #20]
   2cc94:	add	sl, r0, sl
   2cc98:	mov	r0, #0
   2cc9c:	ldr	r1, [sp, #44]	; 0x2c
   2cca0:	cmp	sl, r1
   2cca4:	blt	2cb78 <GetDataSlab+0xa73c>
   2cca8:	b	22560 <GetDataSlab+0x124>
   2ccac:	ldr	lr, [lr]
   2ccb0:	sub	r1, lr, #1
   2ccb4:	str	r1, [fp, #-72]	; 0xffffffb8
   2ccb8:	ldr	r1, [r8]
   2ccbc:	str	r1, [sp, #64]	; 0x40
   2ccc0:	ldr	r0, [r4]
   2ccc4:	str	r0, [sp, #44]	; 0x2c
   2ccc8:	mov	r2, #0
   2cccc:	ldr	r0, [fp, #24]
   2ccd0:	cmp	r0, #2
   2ccd4:	blt	2cd64 <GetDataSlab+0xa928>
   2ccd8:	mov	r1, #1
   2ccdc:	mov	r2, #0
   2cce0:	mov	r0, r8
   2cce4:	ldr	r3, [fp, #16]
   2cce8:	ldr	r7, [r3, r1, lsl #2]
   2ccec:	sub	r7, r7, #1
   2ccf0:	str	r7, [ip, r1, lsl #2]
   2ccf4:	sub	r8, r1, #1
   2ccf8:	ldr	r3, [fp, #8]
   2ccfc:	ldr	r5, [r3, r8, lsl #2]
   2cd00:	str	r5, [sl, r1, lsl #2]
   2cd04:	mov	r4, #0
   2cd08:	mov	r3, r0
   2cd0c:	ldr	r6, [r3, -r4, lsl #2]!
   2cd10:	mul	r7, r7, r6
   2cd14:	ldr	r3, [r3, #4]
   2cd18:	mul	r5, r3, r5
   2cd1c:	add	r4, r4, #1
   2cd20:	cmp	r1, r4
   2cd24:	bne	2cd08 <GetDataSlab+0xa8cc>
   2cd28:	str	r5, [sl, r1, lsl #2]
   2cd2c:	str	r7, [ip, r1, lsl #2]
   2cd30:	ldr	r3, [sl, r8, lsl #2]
   2cd34:	ldr	r4, [r9, r1, lsl #2]
   2cd38:	mla	r2, r4, r3, r2
   2cd3c:	ldr	r4, [fp, #20]
   2cd40:	ldr	r3, [r4, r1, lsl #2]
   2cd44:	ldr	r5, [sp, #44]	; 0x2c
   2cd48:	mul	r5, r3, r5
   2cd4c:	str	r5, [sp, #44]	; 0x2c
   2cd50:	add	r0, r0, #4
   2cd54:	add	r1, r1, #1
   2cd58:	ldr	r3, [fp, #24]
   2cd5c:	cmp	r1, r3
   2cd60:	bne	2cce4 <GetDataSlab+0xa8a8>
   2cd64:	ldr	r0, [sp, #48]	; 0x30
   2cd68:	add	ip, r0, r2, lsl #2
   2cd6c:	cmp	lr, #1
   2cd70:	bne	36968 <GetDataSlab+0x1452c>
   2cd74:	ldr	r0, [sp, #44]	; 0x2c
   2cd78:	cmp	r0, #1
   2cd7c:	blt	3ae3c <GetDataSlab+0x18a00>
   2cd80:	add	r9, r9, #4
   2cd84:	add	r8, r4, #4
   2cd88:	add	r0, sp, #104	; 0x68
   2cd8c:	orr	r5, r0, #4
   2cd90:	sub	r0, fp, #72	; 0x48
   2cd94:	orr	r0, r0, #4
   2cd98:	str	r0, [sp, #52]	; 0x34
   2cd9c:	mov	sl, #0
   2cda0:	ldr	r0, [fp, #12]
   2cda4:	ldr	r0, [r0]
   2cda8:	add	r2, r0, r2
   2cdac:	add	r3, ip, r0, lsl #2
   2cdb0:	ldr	r0, [r4]
   2cdb4:	cmp	r0, #1
   2cdb8:	blt	2cde0 <GetDataSlab+0xa9a4>
   2cdbc:	ldr	r0, [sp, #60]	; 0x3c
   2cdc0:	add	r1, r0, sl, lsl #2
   2cdc4:	mov	r7, #0
   2cdc8:	ldr	r0, [r3, r7, lsl #2]
   2cdcc:	str	r0, [r1, r7, lsl #2]
   2cdd0:	add	r7, r7, #1
   2cdd4:	ldr	r0, [r4]
   2cdd8:	cmp	r7, r0
   2cddc:	blt	2cdc8 <GetDataSlab+0xa98c>
   2cde0:	ldr	r1, [fp, #12]
   2cde4:	ldr	r1, [r1]
   2cde8:	ldr	r7, [fp, #8]
   2cdec:	ldr	r4, [r7]
   2cdf0:	sub	r1, r4, r1
   2cdf4:	add	ip, r3, r1, lsl #2
   2cdf8:	add	r2, r2, r1
   2cdfc:	ldr	r1, [fp, #24]
   2ce00:	cmp	r1, #2
   2ce04:	blt	2ceb4 <GetDataSlab+0xaa78>
   2ce08:	mov	r1, #0
   2ce0c:	mov	r7, r1
   2ce10:	ldr	r1, [r5, r1, lsl #2]
   2ce14:	add	r1, r1, #1
   2ce18:	str	r1, [r5, r7, lsl #2]
   2ce1c:	ldr	r4, [r8, r7, lsl #2]
   2ce20:	sdiv	lr, r1, r4
   2ce24:	mls	r1, lr, r4, r1
   2ce28:	cmp	r1, #0
   2ce2c:	bne	2cea4 <GetDataSlab+0xaa68>
   2ce30:	mov	r1, #0
   2ce34:	str	r1, [r5, r7, lsl #2]
   2ce38:	add	r3, sp, #64	; 0x40
   2ce3c:	add	r1, r3, r7, lsl #2
   2ce40:	ldr	r1, [r1, #4]
   2ce44:	sdiv	r4, r2, r1
   2ce48:	mls	r4, r4, r1, r2
   2ce4c:	cmp	r4, #0
   2ce50:	beq	2ce6c <GetDataSlab+0xaa30>
   2ce54:	ldr	r6, [r3, r7, lsl #2]
   2ce58:	ldr	r3, [r9, r7, lsl #2]
   2ce5c:	sub	r1, r1, r4
   2ce60:	mla	r1, r3, r6, r1
   2ce64:	add	r2, r1, r2
   2ce68:	b	2ce88 <GetDataSlab+0xaa4c>
   2ce6c:	ldr	r1, [r9, r7, lsl #2]
   2ce70:	cmp	r1, #0
   2ce74:	beq	2ce8c <GetDataSlab+0xaa50>
   2ce78:	add	r3, sp, #64	; 0x40
   2ce7c:	ldr	r3, [r3, r7, lsl #2]
   2ce80:	mla	r2, r3, r1, r2
   2ce84:	mul	r1, r3, r1
   2ce88:	add	ip, ip, r1, lsl #2
   2ce8c:	add	r1, r7, #1
   2ce90:	add	r3, r7, #2
   2ce94:	ldr	r7, [fp, #24]
   2ce98:	cmp	r3, r7
   2ce9c:	blt	2ce0c <GetDataSlab+0xa9d0>
   2cea0:	b	2ceb4 <GetDataSlab+0xaa78>
   2cea4:	ldr	r1, [sp, #52]	; 0x34
   2cea8:	ldr	r1, [r1, r7, lsl #2]
   2ceac:	add	ip, ip, r1, lsl #2
   2ceb0:	add	r2, r1, r2
   2ceb4:	add	sl, r0, sl
   2ceb8:	mov	r0, #0
   2cebc:	ldr	r1, [sp, #44]	; 0x2c
   2cec0:	cmp	sl, r1
   2cec4:	ldr	r4, [fp, #20]
   2cec8:	blt	2cda0 <GetDataSlab+0xa964>
   2cecc:	b	22560 <GetDataSlab+0x124>
   2ced0:	ldr	lr, [lr]
   2ced4:	sub	r1, lr, #1
   2ced8:	str	r1, [fp, #-72]	; 0xffffffb8
   2cedc:	ldr	r1, [r8]
   2cee0:	str	r1, [sp, #64]	; 0x40
   2cee4:	ldr	r0, [r4]
   2cee8:	str	r0, [sp, #44]	; 0x2c
   2ceec:	mov	r2, #0
   2cef0:	ldr	r0, [fp, #24]
   2cef4:	cmp	r0, #2
   2cef8:	blt	2cf88 <GetDataSlab+0xab4c>
   2cefc:	mov	r1, #1
   2cf00:	mov	r2, #0
   2cf04:	mov	r0, r8
   2cf08:	ldr	r3, [fp, #16]
   2cf0c:	ldr	r7, [r3, r1, lsl #2]
   2cf10:	sub	r7, r7, #1
   2cf14:	str	r7, [ip, r1, lsl #2]
   2cf18:	sub	r8, r1, #1
   2cf1c:	ldr	r3, [fp, #8]
   2cf20:	ldr	r5, [r3, r8, lsl #2]
   2cf24:	str	r5, [sl, r1, lsl #2]
   2cf28:	mov	r4, #0
   2cf2c:	mov	r3, r0
   2cf30:	ldr	r6, [r3, -r4, lsl #2]!
   2cf34:	mul	r7, r7, r6
   2cf38:	ldr	r3, [r3, #4]
   2cf3c:	mul	r5, r3, r5
   2cf40:	add	r4, r4, #1
   2cf44:	cmp	r1, r4
   2cf48:	bne	2cf2c <GetDataSlab+0xaaf0>
   2cf4c:	str	r5, [sl, r1, lsl #2]
   2cf50:	str	r7, [ip, r1, lsl #2]
   2cf54:	ldr	r3, [sl, r8, lsl #2]
   2cf58:	ldr	r4, [r9, r1, lsl #2]
   2cf5c:	mla	r2, r4, r3, r2
   2cf60:	ldr	r4, [fp, #20]
   2cf64:	ldr	r3, [r4, r1, lsl #2]
   2cf68:	ldr	r5, [sp, #44]	; 0x2c
   2cf6c:	mul	r5, r3, r5
   2cf70:	str	r5, [sp, #44]	; 0x2c
   2cf74:	add	r0, r0, #4
   2cf78:	add	r1, r1, #1
   2cf7c:	ldr	r3, [fp, #24]
   2cf80:	cmp	r1, r3
   2cf84:	bne	2cf08 <GetDataSlab+0xaacc>
   2cf88:	ldr	r0, [sp, #48]	; 0x30
   2cf8c:	add	r9, r0, r2, lsl #2
   2cf90:	cmp	lr, #1
   2cf94:	bne	36aec <GetDataSlab+0x146b0>
   2cf98:	ldr	r0, [sp, #44]	; 0x2c
   2cf9c:	cmp	r0, #1
   2cfa0:	blt	3ae3c <GetDataSlab+0x18a00>
   2cfa4:	ldr	r0, [fp, #12]
   2cfa8:	add	lr, r0, #4
   2cfac:	mov	r0, ip
   2cfb0:	add	ip, r4, #4
   2cfb4:	add	r1, sp, #104	; 0x68
   2cfb8:	orr	r5, r1, #4
   2cfbc:	orr	r0, r0, #4
   2cfc0:	str	r0, [sp, #52]	; 0x34
   2cfc4:	mov	r8, #0
   2cfc8:	ldr	r0, [fp, #12]
   2cfcc:	ldr	r0, [r0]
   2cfd0:	mov	r1, r4
   2cfd4:	add	r4, r0, r2
   2cfd8:	add	sl, r9, r0, lsl #2
   2cfdc:	ldr	r0, [r1]
   2cfe0:	cmp	r0, #1
   2cfe4:	blt	2d01c <GetDataSlab+0xabe0>
   2cfe8:	ldr	r0, [sp, #60]	; 0x3c
   2cfec:	add	r7, r0, r8, lsl #2
   2cff0:	mov	r2, #0
   2cff4:	mov	r3, sl
   2cff8:	vldr	s0, [r3]
   2cffc:	vcvt.u32.f32	s0, s0
   2d000:	vmov	r0, s0
   2d004:	str	r0, [r7, r2, lsl #2]
   2d008:	add	r3, r3, #4
   2d00c:	add	r2, r2, #1
   2d010:	ldr	r0, [r1]
   2d014:	cmp	r2, r0
   2d018:	blt	2cff8 <GetDataSlab+0xabbc>
   2d01c:	ldr	r1, [fp, #12]
   2d020:	ldr	r1, [r1]
   2d024:	ldr	r2, [fp, #8]
   2d028:	ldr	r2, [r2]
   2d02c:	sub	r1, r2, r1
   2d030:	add	r9, sl, r1, lsl #2
   2d034:	add	r2, r4, r1
   2d038:	ldr	r1, [fp, #24]
   2d03c:	cmp	r1, #2
   2d040:	blt	2d0ec <GetDataSlab+0xacb0>
   2d044:	mov	r1, #0
   2d048:	add	sl, sp, #64	; 0x40
   2d04c:	mov	r7, r1
   2d050:	ldr	r1, [r5, r1, lsl #2]
   2d054:	add	r1, r1, #1
   2d058:	str	r1, [r5, r7, lsl #2]
   2d05c:	ldr	r4, [ip, r7, lsl #2]
   2d060:	sdiv	r6, r1, r4
   2d064:	mls	r1, r6, r4, r1
   2d068:	cmp	r1, #0
   2d06c:	bne	2d0dc <GetDataSlab+0xaca0>
   2d070:	mov	r1, #0
   2d074:	str	r1, [r5, r7, lsl #2]
   2d078:	add	r1, sl, r7, lsl #2
   2d07c:	ldr	r1, [r1, #4]
   2d080:	sdiv	r4, r2, r1
   2d084:	mls	r4, r4, r1, r2
   2d088:	cmp	r4, #0
   2d08c:	beq	2d0a8 <GetDataSlab+0xac6c>
   2d090:	ldr	r6, [sl, r7, lsl #2]
   2d094:	ldr	r3, [lr, r7, lsl #2]
   2d098:	sub	r1, r1, r4
   2d09c:	mla	r1, r3, r6, r1
   2d0a0:	add	r2, r1, r2
   2d0a4:	b	2d0c0 <GetDataSlab+0xac84>
   2d0a8:	ldr	r1, [lr, r7, lsl #2]
   2d0ac:	cmp	r1, #0
   2d0b0:	beq	2d0c4 <GetDataSlab+0xac88>
   2d0b4:	ldr	r3, [sl, r7, lsl #2]
   2d0b8:	mla	r2, r3, r1, r2
   2d0bc:	mul	r1, r3, r1
   2d0c0:	add	r9, r9, r1, lsl #2
   2d0c4:	add	r1, r7, #1
   2d0c8:	add	r3, r7, #2
   2d0cc:	ldr	r4, [fp, #24]
   2d0d0:	cmp	r3, r4
   2d0d4:	blt	2d04c <GetDataSlab+0xac10>
   2d0d8:	b	2d0ec <GetDataSlab+0xacb0>
   2d0dc:	ldr	r1, [sp, #52]	; 0x34
   2d0e0:	ldr	r1, [r1, r7, lsl #2]
   2d0e4:	add	r9, r9, r1, lsl #2
   2d0e8:	add	r2, r1, r2
   2d0ec:	add	r8, r0, r8
   2d0f0:	mov	r0, #0
   2d0f4:	ldr	r1, [sp, #44]	; 0x2c
   2d0f8:	cmp	r8, r1
   2d0fc:	ldr	r4, [fp, #20]
   2d100:	blt	2cfc8 <GetDataSlab+0xab8c>
   2d104:	b	22560 <GetDataSlab+0x124>
   2d108:	ldr	lr, [lr]
   2d10c:	sub	r1, lr, #1
   2d110:	str	r1, [fp, #-72]	; 0xffffffb8
   2d114:	ldr	r1, [r8]
   2d118:	str	r1, [sp, #64]	; 0x40
   2d11c:	ldr	r0, [r4]
   2d120:	str	r0, [sp, #44]	; 0x2c
   2d124:	mov	r2, #0
   2d128:	ldr	r0, [fp, #24]
   2d12c:	cmp	r0, #2
   2d130:	blt	2d1c0 <GetDataSlab+0xad84>
   2d134:	mov	r1, #1
   2d138:	mov	r2, #0
   2d13c:	mov	r0, r8
   2d140:	ldr	r3, [fp, #16]
   2d144:	ldr	r7, [r3, r1, lsl #2]
   2d148:	sub	r7, r7, #1
   2d14c:	str	r7, [ip, r1, lsl #2]
   2d150:	sub	r8, r1, #1
   2d154:	ldr	r3, [fp, #8]
   2d158:	ldr	r5, [r3, r8, lsl #2]
   2d15c:	str	r5, [sl, r1, lsl #2]
   2d160:	mov	r4, #0
   2d164:	mov	r3, r0
   2d168:	ldr	r6, [r3, -r4, lsl #2]!
   2d16c:	mul	r7, r7, r6
   2d170:	ldr	r3, [r3, #4]
   2d174:	mul	r5, r3, r5
   2d178:	add	r4, r4, #1
   2d17c:	cmp	r1, r4
   2d180:	bne	2d164 <GetDataSlab+0xad28>
   2d184:	str	r5, [sl, r1, lsl #2]
   2d188:	str	r7, [ip, r1, lsl #2]
   2d18c:	ldr	r3, [sl, r8, lsl #2]
   2d190:	ldr	r4, [r9, r1, lsl #2]
   2d194:	mla	r2, r4, r3, r2
   2d198:	ldr	r4, [fp, #20]
   2d19c:	ldr	r3, [r4, r1, lsl #2]
   2d1a0:	ldr	r5, [sp, #44]	; 0x2c
   2d1a4:	mul	r5, r3, r5
   2d1a8:	str	r5, [sp, #44]	; 0x2c
   2d1ac:	add	r0, r0, #4
   2d1b0:	add	r1, r1, #1
   2d1b4:	ldr	r3, [fp, #24]
   2d1b8:	cmp	r1, r3
   2d1bc:	bne	2d140 <GetDataSlab+0xad04>
   2d1c0:	ldr	r0, [sp, #48]	; 0x30
   2d1c4:	add	r9, r0, r2, lsl #3
   2d1c8:	cmp	lr, #1
   2d1cc:	bne	36c7c <GetDataSlab+0x14840>
   2d1d0:	ldr	r0, [sp, #44]	; 0x2c
   2d1d4:	cmp	r0, #1
   2d1d8:	blt	3ae3c <GetDataSlab+0x18a00>
   2d1dc:	ldr	r0, [fp, #12]
   2d1e0:	add	lr, r0, #4
   2d1e4:	mov	r0, ip
   2d1e8:	add	ip, r4, #4
   2d1ec:	add	r1, sp, #104	; 0x68
   2d1f0:	orr	r5, r1, #4
   2d1f4:	orr	r0, r0, #4
   2d1f8:	str	r0, [sp, #52]	; 0x34
   2d1fc:	mov	r8, #0
   2d200:	ldr	r0, [fp, #12]
   2d204:	ldr	r0, [r0]
   2d208:	mov	r1, r4
   2d20c:	add	r4, r0, r2
   2d210:	add	sl, r9, r0, lsl #3
   2d214:	ldr	r0, [r1]
   2d218:	cmp	r0, #1
   2d21c:	blt	2d254 <GetDataSlab+0xae18>
   2d220:	ldr	r0, [sp, #60]	; 0x3c
   2d224:	add	r7, r0, r8, lsl #2
   2d228:	mov	r2, #0
   2d22c:	mov	r3, sl
   2d230:	vldr	d16, [r3]
   2d234:	vcvt.u32.f64	s0, d16
   2d238:	vmov	r0, s0
   2d23c:	str	r0, [r7, r2, lsl #2]
   2d240:	add	r3, r3, #8
   2d244:	add	r2, r2, #1
   2d248:	ldr	r0, [r1]
   2d24c:	cmp	r2, r0
   2d250:	blt	2d230 <GetDataSlab+0xadf4>
   2d254:	ldr	r1, [fp, #12]
   2d258:	ldr	r1, [r1]
   2d25c:	ldr	r2, [fp, #8]
   2d260:	ldr	r2, [r2]
   2d264:	sub	r1, r2, r1
   2d268:	add	r9, sl, r1, lsl #3
   2d26c:	add	r2, r4, r1
   2d270:	ldr	r1, [fp, #24]
   2d274:	cmp	r1, #2
   2d278:	blt	2d324 <GetDataSlab+0xaee8>
   2d27c:	mov	r1, #0
   2d280:	add	sl, sp, #64	; 0x40
   2d284:	mov	r7, r1
   2d288:	ldr	r1, [r5, r1, lsl #2]
   2d28c:	add	r1, r1, #1
   2d290:	str	r1, [r5, r7, lsl #2]
   2d294:	ldr	r4, [ip, r7, lsl #2]
   2d298:	sdiv	r6, r1, r4
   2d29c:	mls	r1, r6, r4, r1
   2d2a0:	cmp	r1, #0
   2d2a4:	bne	2d314 <GetDataSlab+0xaed8>
   2d2a8:	mov	r1, #0
   2d2ac:	str	r1, [r5, r7, lsl #2]
   2d2b0:	add	r1, sl, r7, lsl #2
   2d2b4:	ldr	r1, [r1, #4]
   2d2b8:	sdiv	r4, r2, r1
   2d2bc:	mls	r4, r4, r1, r2
   2d2c0:	cmp	r4, #0
   2d2c4:	beq	2d2e0 <GetDataSlab+0xaea4>
   2d2c8:	ldr	r6, [sl, r7, lsl #2]
   2d2cc:	ldr	r3, [lr, r7, lsl #2]
   2d2d0:	sub	r1, r1, r4
   2d2d4:	mla	r1, r3, r6, r1
   2d2d8:	add	r2, r1, r2
   2d2dc:	b	2d2f8 <GetDataSlab+0xaebc>
   2d2e0:	ldr	r1, [lr, r7, lsl #2]
   2d2e4:	cmp	r1, #0
   2d2e8:	beq	2d2fc <GetDataSlab+0xaec0>
   2d2ec:	ldr	r3, [sl, r7, lsl #2]
   2d2f0:	mla	r2, r3, r1, r2
   2d2f4:	mul	r1, r3, r1
   2d2f8:	add	r9, r9, r1, lsl #3
   2d2fc:	add	r1, r7, #1
   2d300:	add	r3, r7, #2
   2d304:	ldr	r4, [fp, #24]
   2d308:	cmp	r3, r4
   2d30c:	blt	2d284 <GetDataSlab+0xae48>
   2d310:	b	2d324 <GetDataSlab+0xaee8>
   2d314:	ldr	r1, [sp, #52]	; 0x34
   2d318:	ldr	r1, [r1, r7, lsl #2]
   2d31c:	add	r9, r9, r1, lsl #3
   2d320:	add	r2, r1, r2
   2d324:	add	r8, r0, r8
   2d328:	mov	r0, #0
   2d32c:	ldr	r1, [sp, #44]	; 0x2c
   2d330:	cmp	r8, r1
   2d334:	ldr	r4, [fp, #20]
   2d338:	blt	2d200 <GetDataSlab+0xadc4>
   2d33c:	b	22560 <GetDataSlab+0x124>
   2d340:	ldr	ip, [lr]
   2d344:	sub	r1, ip, #1
   2d348:	str	r1, [fp, #-72]	; 0xffffffb8
   2d34c:	ldr	r1, [r8]
   2d350:	str	r1, [sp, #64]	; 0x40
   2d354:	ldr	r0, [r4]
   2d358:	str	r0, [sp, #44]	; 0x2c
   2d35c:	mov	r1, #0
   2d360:	ldr	r0, [fp, #24]
   2d364:	cmp	r0, #2
   2d368:	blt	2d3fc <GetDataSlab+0xafc0>
   2d36c:	mov	r2, #1
   2d370:	mov	r1, #0
   2d374:	mov	r0, r8
   2d378:	sub	r5, fp, #72	; 0x48
   2d37c:	ldr	r7, [lr, r2, lsl #2]
   2d380:	sub	r7, r7, #1
   2d384:	str	r7, [r5, r2, lsl #2]
   2d388:	sub	lr, r2, #1
   2d38c:	ldr	r5, [r8, lr, lsl #2]
   2d390:	str	r5, [sl, r2, lsl #2]
   2d394:	mov	r4, #0
   2d398:	mov	r3, r0
   2d39c:	ldr	r6, [r3, -r4, lsl #2]!
   2d3a0:	mul	r7, r7, r6
   2d3a4:	ldr	r3, [r3, #4]
   2d3a8:	mul	r5, r3, r5
   2d3ac:	add	r4, r4, #1
   2d3b0:	cmp	r2, r4
   2d3b4:	bne	2d398 <GetDataSlab+0xaf5c>
   2d3b8:	str	r5, [sl, r2, lsl #2]
   2d3bc:	sub	r5, fp, #72	; 0x48
   2d3c0:	str	r7, [r5, r2, lsl #2]
   2d3c4:	ldr	r3, [sl, lr, lsl #2]
   2d3c8:	ldr	r7, [r9, r2, lsl #2]
   2d3cc:	mla	r1, r7, r3, r1
   2d3d0:	ldr	r4, [fp, #20]
   2d3d4:	ldr	r3, [r4, r2, lsl #2]
   2d3d8:	ldr	r7, [sp, #44]	; 0x2c
   2d3dc:	mul	r7, r3, r7
   2d3e0:	str	r7, [sp, #44]	; 0x2c
   2d3e4:	add	r0, r0, #4
   2d3e8:	add	r2, r2, #1
   2d3ec:	ldr	r3, [fp, #24]
   2d3f0:	cmp	r2, r3
   2d3f4:	ldr	lr, [fp, #16]
   2d3f8:	bne	2d37c <GetDataSlab+0xaf40>
   2d3fc:	ldr	r0, [sp, #48]	; 0x30
   2d400:	add	r8, r0, r1, lsl #3
   2d404:	cmp	ip, #1
   2d408:	bne	36e0c <GetDataSlab+0x149d0>
   2d40c:	ldr	r0, [sp, #44]	; 0x2c
   2d410:	cmp	r0, #1
   2d414:	sub	r0, fp, #72	; 0x48
   2d418:	blt	36f94 <GetDataSlab+0x14b58>
   2d41c:	add	sl, r9, #4
   2d420:	add	lr, r4, #4
   2d424:	add	r2, sp, #104	; 0x68
   2d428:	orr	r5, r2, #4
   2d42c:	orr	r0, r0, #4
   2d430:	str	r0, [sp, #40]	; 0x28
   2d434:	mov	ip, #0
   2d438:	ldr	r0, [r9]
   2d43c:	add	r9, r0, r1
   2d440:	add	r2, r8, r0, lsl #3
   2d444:	ldr	r0, [r4]
   2d448:	cmp	r0, #1
   2d44c:	blt	2d478 <GetDataSlab+0xb03c>
   2d450:	ldr	r0, [sp, #60]	; 0x3c
   2d454:	add	r7, r0, ip, lsl #2
   2d458:	mov	r1, #0
   2d45c:	mov	r3, r2
   2d460:	ldr	r0, [r3], #8
   2d464:	str	r0, [r7, r1, lsl #2]
   2d468:	add	r1, r1, #1
   2d46c:	ldr	r0, [r4]
   2d470:	cmp	r1, r0
   2d474:	blt	2d460 <GetDataSlab+0xb024>
   2d478:	ldr	r1, [fp, #12]
   2d47c:	ldr	r1, [r1]
   2d480:	ldr	r3, [fp, #8]
   2d484:	ldr	r3, [r3]
   2d488:	sub	r1, r3, r1
   2d48c:	add	r8, r2, r1, lsl #3
   2d490:	add	r1, r9, r1
   2d494:	ldr	r2, [fp, #24]
   2d498:	cmp	r2, #2
   2d49c:	blt	2d540 <GetDataSlab+0xb104>
   2d4a0:	mov	r3, #0
   2d4a4:	ldr	r9, [fp, #12]
   2d4a8:	mov	r7, r3
   2d4ac:	ldr	r3, [r5, r3, lsl #2]
   2d4b0:	add	r3, r3, #1
   2d4b4:	str	r3, [r5, r7, lsl #2]
   2d4b8:	ldr	r4, [lr, r7, lsl #2]
   2d4bc:	sdiv	r6, r3, r4
   2d4c0:	mls	r3, r6, r4, r3
   2d4c4:	cmp	r3, #0
   2d4c8:	bne	2d548 <GetDataSlab+0xb10c>
   2d4cc:	mov	r2, #0
   2d4d0:	str	r2, [r5, r7, lsl #2]
   2d4d4:	add	r2, sp, #64	; 0x40
   2d4d8:	add	r3, r2, r7, lsl #2
   2d4dc:	ldr	r3, [r3, #4]
   2d4e0:	sdiv	r4, r1, r3
   2d4e4:	mls	r4, r4, r3, r1
   2d4e8:	cmp	r4, #0
   2d4ec:	beq	2d508 <GetDataSlab+0xb0cc>
   2d4f0:	ldr	r6, [r2, r7, lsl #2]
   2d4f4:	ldr	r2, [sl, r7, lsl #2]
   2d4f8:	sub	r3, r3, r4
   2d4fc:	mla	r2, r2, r6, r3
   2d500:	add	r1, r2, r1
   2d504:	b	2d524 <GetDataSlab+0xb0e8>
   2d508:	ldr	r3, [sl, r7, lsl #2]
   2d50c:	cmp	r3, #0
   2d510:	beq	2d528 <GetDataSlab+0xb0ec>
   2d514:	add	r2, sp, #64	; 0x40
   2d518:	ldr	r2, [r2, r7, lsl #2]
   2d51c:	mla	r1, r2, r3, r1
   2d520:	mul	r2, r2, r3
   2d524:	add	r8, r8, r2, lsl #3
   2d528:	add	r3, r7, #1
   2d52c:	add	r2, r7, #2
   2d530:	ldr	r4, [fp, #24]
   2d534:	cmp	r2, r4
   2d538:	blt	2d4a8 <GetDataSlab+0xb06c>
   2d53c:	b	2d558 <GetDataSlab+0xb11c>
   2d540:	ldr	r9, [fp, #12]
   2d544:	b	2d558 <GetDataSlab+0xb11c>
   2d548:	ldr	r2, [sp, #40]	; 0x28
   2d54c:	ldr	r2, [r2, r7, lsl #2]
   2d550:	add	r8, r8, r2, lsl #3
   2d554:	add	r1, r2, r1
   2d558:	add	ip, r0, ip
   2d55c:	ldr	r0, [sp, #44]	; 0x2c
   2d560:	cmp	ip, r0
   2d564:	ldr	r4, [fp, #20]
   2d568:	blt	2d438 <GetDataSlab+0xaffc>
   2d56c:	mov	r0, #0
   2d570:	ldr	lr, [fp, #16]
   2d574:	b	36f98 <GetDataSlab+0x14b5c>
   2d578:	mov	r7, sl
   2d57c:	ldr	sl, [lr]
   2d580:	sub	r0, sl, #1
   2d584:	str	r0, [fp, #-72]	; 0xffffffb8
   2d588:	ldr	r0, [r8]
   2d58c:	str	r0, [sp, #52]	; 0x34
   2d590:	str	r0, [sp, #64]	; 0x40
   2d594:	ldr	r1, [r4]
   2d598:	mov	r3, #0
   2d59c:	ldr	r0, [fp, #24]
   2d5a0:	cmp	r0, #2
   2d5a4:	str	r1, [sp, #40]	; 0x28
   2d5a8:	str	r1, [sp, #44]	; 0x2c
   2d5ac:	sub	r6, fp, #72	; 0x48
   2d5b0:	blt	2d648 <GetDataSlab+0xb20c>
   2d5b4:	mov	r0, #1
   2d5b8:	mov	r3, #0
   2d5bc:	mov	r4, r8
   2d5c0:	ldr	r1, [sp, #40]	; 0x28
   2d5c4:	str	r1, [sp, #44]	; 0x2c
   2d5c8:	ldr	r2, [lr, r0, lsl #2]
   2d5cc:	sub	r2, r2, #1
   2d5d0:	str	r2, [r6, r0, lsl #2]
   2d5d4:	sub	ip, r0, #1
   2d5d8:	ldr	r6, [r8, ip, lsl #2]
   2d5dc:	str	r6, [r7, r0, lsl #2]
   2d5e0:	mov	r7, #0
   2d5e4:	mov	r1, r4
   2d5e8:	ldr	r5, [r1, -r7, lsl #2]!
   2d5ec:	mul	r2, r2, r5
   2d5f0:	ldr	r1, [r1, #4]
   2d5f4:	mul	r6, r1, r6
   2d5f8:	add	r7, r7, #1
   2d5fc:	cmp	r0, r7
   2d600:	bne	2d5e4 <GetDataSlab+0xb1a8>
   2d604:	add	r7, sp, #64	; 0x40
   2d608:	str	r6, [r7, r0, lsl #2]
   2d60c:	sub	r6, fp, #72	; 0x48
   2d610:	str	r2, [r6, r0, lsl #2]
   2d614:	ldr	r1, [r7, ip, lsl #2]
   2d618:	ldr	r2, [r9, r0, lsl #2]
   2d61c:	mla	r3, r2, r1, r3
   2d620:	ldr	r1, [fp, #20]
   2d624:	ldr	r1, [r1, r0, lsl #2]
   2d628:	ldr	r2, [sp, #44]	; 0x2c
   2d62c:	mul	r2, r1, r2
   2d630:	str	r2, [sp, #44]	; 0x2c
   2d634:	add	r4, r4, #4
   2d638:	add	r0, r0, #1
   2d63c:	ldr	r1, [fp, #24]
   2d640:	cmp	r0, r1
   2d644:	bne	2d5c8 <GetDataSlab+0xb18c>
   2d648:	ldr	r0, [sp, #48]	; 0x30
   2d64c:	add	r5, r0, r3
   2d650:	cmp	sl, #1
   2d654:	bne	37078 <GetDataSlab+0x14c3c>
   2d658:	ldr	r0, [sp, #44]	; 0x2c
   2d65c:	cmp	r0, #1
   2d660:	ldr	r0, [fp, #20]
   2d664:	ldr	lr, [sp, #40]	; 0x28
   2d668:	blt	3ae3c <GetDataSlab+0x18a00>
   2d66c:	mov	r1, r6
   2d670:	add	ip, r9, #4
   2d674:	add	sl, r0, #4
   2d678:	add	r0, sp, #104	; 0x68
   2d67c:	orr	r6, r0, #4
   2d680:	orr	r0, r1, #4
   2d684:	str	r0, [sp, #36]	; 0x24
   2d688:	lsl	r0, lr, #3
   2d68c:	str	r0, [sp, #48]	; 0x30
   2d690:	mov	r9, #0
   2d694:	mov	r8, #0
   2d698:	cmp	lr, #1
   2d69c:	blt	2d6c8 <GetDataSlab+0xb28c>
   2d6a0:	ldr	r0, [fp, #12]
   2d6a4:	ldr	r0, [r0]
   2d6a8:	add	r0, r5, r0
   2d6ac:	ldr	lr, [sp, #40]	; 0x28
   2d6b0:	ldr	r2, [sp, #60]	; 0x3c
   2d6b4:	ldrb	r4, [r0], #1
   2d6b8:	stm	r2, {r4, r9}
   2d6bc:	subs	lr, lr, #1
   2d6c0:	add	r2, r2, #8
   2d6c4:	bne	2d6b4 <GetDataSlab+0xb278>
   2d6c8:	ldr	r0, [sp, #52]	; 0x34
   2d6cc:	add	r5, r5, r0
   2d6d0:	add	r3, r3, r0
   2d6d4:	ldr	r0, [fp, #24]
   2d6d8:	cmp	r0, #2
   2d6dc:	blt	2d778 <GetDataSlab+0xb33c>
   2d6e0:	mov	r2, #0
   2d6e4:	ldr	lr, [sp, #40]	; 0x28
   2d6e8:	mov	r0, r2
   2d6ec:	ldr	r2, [r6, r2, lsl #2]
   2d6f0:	add	r2, r2, #1
   2d6f4:	str	r2, [r6, r0, lsl #2]
   2d6f8:	ldr	r4, [sl, r0, lsl #2]
   2d6fc:	sdiv	r7, r2, r4
   2d700:	mls	r2, r7, r4, r2
   2d704:	cmp	r2, #0
   2d708:	bne	2d780 <GetDataSlab+0xb344>
   2d70c:	str	r9, [r6, r0, lsl #2]
   2d710:	add	r1, sp, #64	; 0x40
   2d714:	add	r2, r1, r0, lsl #2
   2d718:	ldr	r2, [r2, #4]
   2d71c:	sdiv	r7, r3, r2
   2d720:	mls	r4, r7, r2, r3
   2d724:	cmp	r4, #0
   2d728:	beq	2d748 <GetDataSlab+0xb30c>
   2d72c:	ldr	r7, [r1, r0, lsl #2]
   2d730:	ldr	r1, [ip, r0, lsl #2]
   2d734:	sub	r2, r2, r4
   2d738:	mla	r1, r1, r7, r2
   2d73c:	add	r3, r1, r3
   2d740:	add	r5, r5, r1
   2d744:	b	2d760 <GetDataSlab+0xb324>
   2d748:	ldr	r2, [ip, r0, lsl #2]
   2d74c:	cmp	r2, #0
   2d750:	addne	r1, sp, #64	; 0x40
   2d754:	ldrne	r1, [r1, r0, lsl #2]
   2d758:	mlane	r3, r1, r2, r3
   2d75c:	mlane	r5, r1, r2, r5
   2d760:	add	r2, r0, #1
   2d764:	add	r0, r0, #2
   2d768:	ldr	r1, [fp, #24]
   2d76c:	cmp	r0, r1
   2d770:	blt	2d6e8 <GetDataSlab+0xb2ac>
   2d774:	b	2d790 <GetDataSlab+0xb354>
   2d778:	ldr	lr, [sp, #40]	; 0x28
   2d77c:	b	2d790 <GetDataSlab+0xb354>
   2d780:	ldr	r1, [sp, #36]	; 0x24
   2d784:	ldr	r0, [r1, r0, lsl #2]
   2d788:	add	r5, r5, r0
   2d78c:	add	r3, r0, r3
   2d790:	ldr	r0, [sp, #60]	; 0x3c
   2d794:	ldr	r1, [sp, #48]	; 0x30
   2d798:	add	r0, r0, r1
   2d79c:	str	r0, [sp, #60]	; 0x3c
   2d7a0:	add	r8, r8, lr
   2d7a4:	mov	r0, #0
   2d7a8:	ldr	r1, [sp, #44]	; 0x2c
   2d7ac:	cmp	r8, r1
   2d7b0:	blt	2d698 <GetDataSlab+0xb25c>
   2d7b4:	b	22560 <GetDataSlab+0x124>
   2d7b8:	ldr	ip, [lr]
   2d7bc:	sub	r0, ip, #1
   2d7c0:	str	r0, [fp, #-72]	; 0xffffffb8
   2d7c4:	ldr	r0, [r8]
   2d7c8:	str	r0, [sp, #40]	; 0x28
   2d7cc:	str	r0, [sp, #64]	; 0x40
   2d7d0:	ldr	r1, [r4]
   2d7d4:	mov	r5, sl
   2d7d8:	mov	sl, #0
   2d7dc:	ldr	r0, [fp, #24]
   2d7e0:	cmp	r0, #2
   2d7e4:	str	r1, [sp, #44]	; 0x2c
   2d7e8:	str	r1, [sp, #52]	; 0x34
   2d7ec:	sub	r2, fp, #72	; 0x48
   2d7f0:	blt	2d888 <GetDataSlab+0xb44c>
   2d7f4:	mov	r1, #1
   2d7f8:	mov	sl, #0
   2d7fc:	ldr	r6, [fp, #8]
   2d800:	ldr	r0, [sp, #44]	; 0x2c
   2d804:	str	r0, [sp, #52]	; 0x34
   2d808:	ldr	r0, [lr, r1, lsl #2]
   2d80c:	sub	r7, r0, #1
   2d810:	str	r7, [r2, r1, lsl #2]
   2d814:	sub	r8, r1, #1
   2d818:	ldr	r0, [fp, #8]
   2d81c:	ldr	r4, [r0, r8, lsl #2]
   2d820:	str	r4, [r5, r1, lsl #2]
   2d824:	mov	r0, #0
   2d828:	mov	r3, r6
   2d82c:	ldr	r5, [r3, -r0, lsl #2]!
   2d830:	mul	r7, r7, r5
   2d834:	ldr	r3, [r3, #4]
   2d838:	mul	r4, r3, r4
   2d83c:	add	r0, r0, #1
   2d840:	cmp	r1, r0
   2d844:	bne	2d828 <GetDataSlab+0xb3ec>
   2d848:	add	r5, sp, #64	; 0x40
   2d84c:	str	r4, [r5, r1, lsl #2]
   2d850:	str	r7, [r2, r1, lsl #2]
   2d854:	ldr	r0, [r5, r8, lsl #2]
   2d858:	ldr	r3, [r9, r1, lsl #2]
   2d85c:	mla	sl, r3, r0, sl
   2d860:	ldr	r4, [fp, #20]
   2d864:	ldr	r0, [r4, r1, lsl #2]
   2d868:	ldr	r3, [sp, #52]	; 0x34
   2d86c:	mul	r3, r0, r3
   2d870:	str	r3, [sp, #52]	; 0x34
   2d874:	add	r6, r6, #4
   2d878:	add	r1, r1, #1
   2d87c:	ldr	r0, [fp, #24]
   2d880:	cmp	r1, r0
   2d884:	bne	2d808 <GetDataSlab+0xb3cc>
   2d888:	ldr	r0, [sp, #48]	; 0x30
   2d88c:	add	r5, r0, sl, lsl #1
   2d890:	cmp	ip, #1
   2d894:	bne	3721c <GetDataSlab+0x14de0>
   2d898:	ldr	r0, [sp, #52]	; 0x34
   2d89c:	cmp	r0, #1
   2d8a0:	blt	240b8 <GetDataSlab+0x1c7c>
   2d8a4:	add	lr, r4, #4
   2d8a8:	add	r0, sp, #104	; 0x68
   2d8ac:	orr	r6, r0, #4
   2d8b0:	orr	r0, r2, #4
   2d8b4:	str	r0, [sp, #32]
   2d8b8:	ldr	r1, [sp, #44]	; 0x2c
   2d8bc:	lsl	r0, r1, #3
   2d8c0:	str	r0, [sp, #48]	; 0x30
   2d8c4:	ldr	r0, [r9], #4
   2d8c8:	str	r0, [sp, #36]	; 0x24
   2d8cc:	str	r9, [sp, #56]	; 0x38
   2d8d0:	mov	ip, #0
   2d8d4:	cmp	r1, #1
   2d8d8:	blt	2d908 <GetDataSlab+0xb4cc>
   2d8dc:	ldr	r0, [sp, #36]	; 0x24
   2d8e0:	add	r0, r5, r0, lsl #1
   2d8e4:	mov	r9, r1
   2d8e8:	ldr	r8, [sp, #60]	; 0x3c
   2d8ec:	ldrsh	r4, [r0], #2
   2d8f0:	asr	r3, r4, #31
   2d8f4:	str	r4, [r8]
   2d8f8:	str	r3, [r8, #4]
   2d8fc:	subs	r9, r9, #1
   2d900:	add	r8, r8, #8
   2d904:	bne	2d8ec <GetDataSlab+0xb4b0>
   2d908:	ldr	r0, [sp, #40]	; 0x28
   2d90c:	add	r5, r5, r0, lsl #1
   2d910:	add	sl, sl, r0
   2d914:	ldr	r0, [fp, #24]
   2d918:	cmp	r0, #2
   2d91c:	blt	2d9d0 <GetDataSlab+0xb594>
   2d920:	mov	r4, #0
   2d924:	ldr	r2, [sp, #56]	; 0x38
   2d928:	mov	r8, #0
   2d92c:	mov	r0, r4
   2d930:	ldr	r3, [r6, r4, lsl #2]
   2d934:	add	r3, r3, #1
   2d938:	str	r3, [r6, r4, lsl #2]
   2d93c:	ldr	r4, [lr, r4, lsl #2]
   2d940:	sdiv	r1, r3, r4
   2d944:	mls	r1, r1, r4, r3
   2d948:	cmp	r1, #0
   2d94c:	bne	2d9c0 <GetDataSlab+0xb584>
   2d950:	str	r8, [r6, r0, lsl #2]
   2d954:	add	r7, sp, #64	; 0x40
   2d958:	add	r1, r7, r0, lsl #2
   2d95c:	ldr	r4, [r1, #4]
   2d960:	sdiv	r1, sl, r4
   2d964:	mls	r3, r1, r4, sl
   2d968:	cmp	r3, #0
   2d96c:	beq	2d988 <GetDataSlab+0xb54c>
   2d970:	ldr	r1, [r7, r0, lsl #2]
   2d974:	ldr	r7, [r2, r0, lsl #2]
   2d978:	sub	r3, r4, r3
   2d97c:	mla	r1, r7, r1, r3
   2d980:	add	sl, r1, sl
   2d984:	b	2d9a4 <GetDataSlab+0xb568>
   2d988:	ldr	r3, [r2, r0, lsl #2]
   2d98c:	cmp	r3, #0
   2d990:	beq	2d9a8 <GetDataSlab+0xb56c>
   2d994:	add	r1, sp, #64	; 0x40
   2d998:	ldr	r1, [r1, r0, lsl #2]
   2d99c:	mla	sl, r1, r3, sl
   2d9a0:	mul	r1, r1, r3
   2d9a4:	add	r5, r5, r1, lsl #1
   2d9a8:	add	r4, r0, #1
   2d9ac:	add	r0, r0, #2
   2d9b0:	ldr	r1, [fp, #24]
   2d9b4:	cmp	r0, r1
   2d9b8:	blt	2d92c <GetDataSlab+0xb4f0>
   2d9bc:	b	2d9d0 <GetDataSlab+0xb594>
   2d9c0:	ldr	r1, [sp, #32]
   2d9c4:	ldr	r0, [r1, r0, lsl #2]
   2d9c8:	add	r5, r5, r0, lsl #1
   2d9cc:	add	sl, r0, sl
   2d9d0:	ldr	r0, [sp, #60]	; 0x3c
   2d9d4:	ldr	r1, [sp, #48]	; 0x30
   2d9d8:	add	r0, r0, r1
   2d9dc:	str	r0, [sp, #60]	; 0x3c
   2d9e0:	ldr	r1, [sp, #44]	; 0x2c
   2d9e4:	add	ip, ip, r1
   2d9e8:	mov	r0, #0
   2d9ec:	ldr	r2, [sp, #52]	; 0x34
   2d9f0:	cmp	ip, r2
   2d9f4:	blt	2d8d4 <GetDataSlab+0xb498>
   2d9f8:	b	22560 <GetDataSlab+0x124>
   2d9fc:	ldr	r0, [lr]
   2da00:	str	r0, [sp, #24]
   2da04:	sub	r0, r0, #1
   2da08:	str	r0, [fp, #-72]	; 0xffffffb8
   2da0c:	ldr	r0, [r8]
   2da10:	str	r0, [sp, #44]	; 0x2c
   2da14:	str	r0, [sp, #64]	; 0x40
   2da18:	ldr	r1, [r4]
   2da1c:	mov	r2, #0
   2da20:	ldr	r0, [fp, #24]
   2da24:	cmp	r0, #2
   2da28:	str	r1, [sp, #52]	; 0x34
   2da2c:	str	r1, [sp, #56]	; 0x38
   2da30:	sub	ip, fp, #72	; 0x48
   2da34:	blt	2dac8 <GetDataSlab+0xb68c>
   2da38:	mov	r1, #1
   2da3c:	mov	r2, #0
   2da40:	mov	r6, r8
   2da44:	ldr	r0, [sp, #52]	; 0x34
   2da48:	str	r0, [sp, #56]	; 0x38
   2da4c:	ldr	r0, [lr, r1, lsl #2]
   2da50:	sub	r7, r0, #1
   2da54:	str	r7, [ip, r1, lsl #2]
   2da58:	sub	lr, r1, #1
   2da5c:	ldr	r0, [r8, lr, lsl #2]
   2da60:	str	r0, [sl, r1, lsl #2]
   2da64:	mov	r4, #0
   2da68:	mov	r3, r6
   2da6c:	ldr	r5, [r3, -r4, lsl #2]!
   2da70:	mul	r7, r7, r5
   2da74:	ldr	r3, [r3, #4]
   2da78:	mul	r0, r3, r0
   2da7c:	add	r4, r4, #1
   2da80:	cmp	r1, r4
   2da84:	bne	2da68 <GetDataSlab+0xb62c>
   2da88:	str	r0, [sl, r1, lsl #2]
   2da8c:	str	r7, [ip, r1, lsl #2]
   2da90:	ldr	r0, [sl, lr, lsl #2]
   2da94:	ldr	r3, [r9, r1, lsl #2]
   2da98:	mla	r2, r3, r0, r2
   2da9c:	ldr	r4, [fp, #20]
   2daa0:	ldr	r0, [r4, r1, lsl #2]
   2daa4:	ldr	r3, [sp, #56]	; 0x38
   2daa8:	mul	r3, r0, r3
   2daac:	str	r3, [sp, #56]	; 0x38
   2dab0:	add	r6, r6, #4
   2dab4:	add	r1, r1, #1
   2dab8:	ldr	r0, [fp, #24]
   2dabc:	cmp	r1, r0
   2dac0:	ldr	lr, [fp, #16]
   2dac4:	bne	2da4c <GetDataSlab+0xb610>
   2dac8:	ldr	r0, [sp, #48]	; 0x30
   2dacc:	add	ip, r0, r2, lsl #1
   2dad0:	ldr	r5, [sp, #24]
   2dad4:	cmp	r5, #1
   2dad8:	bne	373ac <GetDataSlab+0x14f70>
   2dadc:	ldr	r0, [sp, #56]	; 0x38
   2dae0:	cmp	r0, #1
   2dae4:	ldr	r1, [sp, #52]	; 0x34
   2dae8:	blt	240b8 <GetDataSlab+0x1c7c>
   2daec:	add	sl, r4, #4
   2daf0:	add	r0, sp, #104	; 0x68
   2daf4:	orr	r7, r0, #4
   2daf8:	sub	r0, fp, #72	; 0x48
   2dafc:	orr	r0, r0, #4
   2db00:	str	r0, [sp, #36]	; 0x24
   2db04:	lsl	r0, r1, #3
   2db08:	str	r0, [sp, #48]	; 0x30
   2db0c:	ldr	r0, [r9], #4
   2db10:	str	r0, [sp, #40]	; 0x28
   2db14:	mov	r5, r9
   2db18:	mov	r9, #0
   2db1c:	mov	r8, #0
   2db20:	cmp	r1, #1
   2db24:	blt	2db4c <GetDataSlab+0xb710>
   2db28:	ldr	r0, [sp, #40]	; 0x28
   2db2c:	add	r0, ip, r0, lsl #1
   2db30:	ldr	lr, [sp, #52]	; 0x34
   2db34:	ldr	r4, [sp, #60]	; 0x3c
   2db38:	ldrh	r3, [r0], #2
   2db3c:	stm	r4, {r3, r9}
   2db40:	subs	lr, lr, #1
   2db44:	add	r4, r4, #8
   2db48:	bne	2db38 <GetDataSlab+0xb6fc>
   2db4c:	ldr	r0, [sp, #44]	; 0x2c
   2db50:	add	ip, ip, r0, lsl #1
   2db54:	add	r2, r2, r0
   2db58:	ldr	r0, [fp, #24]
   2db5c:	cmp	r0, #2
   2db60:	blt	2dc0c <GetDataSlab+0xb7d0>
   2db64:	mov	r4, #0
   2db68:	mov	r0, r4
   2db6c:	ldr	r3, [r7, r4, lsl #2]
   2db70:	add	r3, r3, #1
   2db74:	str	r3, [r7, r4, lsl #2]
   2db78:	ldr	r4, [sl, r4, lsl #2]
   2db7c:	sdiv	r6, r3, r4
   2db80:	mls	r3, r6, r4, r3
   2db84:	cmp	r3, #0
   2db88:	bne	2dbfc <GetDataSlab+0xb7c0>
   2db8c:	str	r9, [r7, r0, lsl #2]
   2db90:	add	r1, sp, #64	; 0x40
   2db94:	add	r3, r1, r0, lsl #2
   2db98:	ldr	r4, [r3, #4]
   2db9c:	sdiv	r3, r2, r4
   2dba0:	mls	r3, r3, r4, r2
   2dba4:	cmp	r3, #0
   2dba8:	beq	2dbc4 <GetDataSlab+0xb788>
   2dbac:	ldr	r6, [r1, r0, lsl #2]
   2dbb0:	ldr	r1, [r5, r0, lsl #2]
   2dbb4:	sub	r3, r4, r3
   2dbb8:	mla	r1, r1, r6, r3
   2dbbc:	add	r2, r1, r2
   2dbc0:	b	2dbe0 <GetDataSlab+0xb7a4>
   2dbc4:	ldr	r3, [r5, r0, lsl #2]
   2dbc8:	cmp	r3, #0
   2dbcc:	beq	2dbe4 <GetDataSlab+0xb7a8>
   2dbd0:	add	r1, sp, #64	; 0x40
   2dbd4:	ldr	r1, [r1, r0, lsl #2]
   2dbd8:	mla	r2, r1, r3, r2
   2dbdc:	mul	r1, r1, r3
   2dbe0:	add	ip, ip, r1, lsl #1
   2dbe4:	add	r4, r0, #1
   2dbe8:	add	r0, r0, #2
   2dbec:	ldr	r1, [fp, #24]
   2dbf0:	cmp	r0, r1
   2dbf4:	blt	2db68 <GetDataSlab+0xb72c>
   2dbf8:	b	2dc0c <GetDataSlab+0xb7d0>
   2dbfc:	ldr	r1, [sp, #36]	; 0x24
   2dc00:	ldr	r0, [r1, r0, lsl #2]
   2dc04:	add	ip, ip, r0, lsl #1
   2dc08:	add	r2, r0, r2
   2dc0c:	ldr	r0, [sp, #60]	; 0x3c
   2dc10:	ldr	r1, [sp, #48]	; 0x30
   2dc14:	add	r0, r0, r1
   2dc18:	str	r0, [sp, #60]	; 0x3c
   2dc1c:	ldr	r1, [sp, #52]	; 0x34
   2dc20:	add	r8, r8, r1
   2dc24:	mov	r0, #0
   2dc28:	ldr	r3, [sp, #56]	; 0x38
   2dc2c:	cmp	r8, r3
   2dc30:	blt	2db20 <GetDataSlab+0xb6e4>
   2dc34:	b	22560 <GetDataSlab+0x124>
   2dc38:	ldr	ip, [lr]
   2dc3c:	sub	r0, ip, #1
   2dc40:	str	r0, [fp, #-72]	; 0xffffffb8
   2dc44:	ldr	r0, [r8]
   2dc48:	str	r0, [sp, #40]	; 0x28
   2dc4c:	str	r0, [sp, #64]	; 0x40
   2dc50:	ldr	r1, [r4]
   2dc54:	mov	r3, #0
   2dc58:	ldr	r0, [fp, #24]
   2dc5c:	cmp	r0, #2
   2dc60:	str	r1, [sp, #44]	; 0x2c
   2dc64:	str	r1, [sp, #52]	; 0x34
   2dc68:	sub	r5, fp, #72	; 0x48
   2dc6c:	blt	2dd04 <GetDataSlab+0xb8c8>
   2dc70:	mov	r1, #1
   2dc74:	mov	r3, #0
   2dc78:	mov	r2, r8
   2dc7c:	ldr	r0, [sp, #44]	; 0x2c
   2dc80:	str	r0, [sp, #52]	; 0x34
   2dc84:	ldr	r0, [lr, r1, lsl #2]
   2dc88:	sub	r7, r0, #1
   2dc8c:	str	r7, [r5, r1, lsl #2]
   2dc90:	sub	lr, r1, #1
   2dc94:	ldr	r4, [r8, lr, lsl #2]
   2dc98:	str	r4, [sl, r1, lsl #2]
   2dc9c:	mov	r0, #0
   2dca0:	mov	r6, r2
   2dca4:	ldr	r5, [r6, -r0, lsl #2]!
   2dca8:	mul	r7, r7, r5
   2dcac:	ldr	r5, [r6, #4]
   2dcb0:	mul	r4, r5, r4
   2dcb4:	add	r0, r0, #1
   2dcb8:	cmp	r1, r0
   2dcbc:	bne	2dca0 <GetDataSlab+0xb864>
   2dcc0:	str	r4, [sl, r1, lsl #2]
   2dcc4:	sub	r5, fp, #72	; 0x48
   2dcc8:	str	r7, [r5, r1, lsl #2]
   2dccc:	ldr	r0, [sl, lr, lsl #2]
   2dcd0:	ldr	r7, [r9, r1, lsl #2]
   2dcd4:	mla	r3, r7, r0, r3
   2dcd8:	ldr	r4, [fp, #20]
   2dcdc:	ldr	r0, [r4, r1, lsl #2]
   2dce0:	ldr	r7, [sp, #52]	; 0x34
   2dce4:	mul	r7, r0, r7
   2dce8:	str	r7, [sp, #52]	; 0x34
   2dcec:	add	r2, r2, #4
   2dcf0:	add	r1, r1, #1
   2dcf4:	ldr	r0, [fp, #24]
   2dcf8:	cmp	r1, r0
   2dcfc:	ldr	lr, [fp, #16]
   2dd00:	bne	2dc84 <GetDataSlab+0xb848>
   2dd04:	ldr	r0, [sp, #48]	; 0x30
   2dd08:	add	r8, r0, r3, lsl #2
   2dd0c:	cmp	ip, #1
   2dd10:	bne	37540 <GetDataSlab+0x15104>
   2dd14:	ldr	r0, [sp, #52]	; 0x34
   2dd18:	cmp	r0, #1
   2dd1c:	ldr	lr, [sp, #44]	; 0x2c
   2dd20:	blt	240b8 <GetDataSlab+0x1c7c>
   2dd24:	add	r9, r9, #4
   2dd28:	add	r7, r4, #4
   2dd2c:	add	r0, sp, #104	; 0x68
   2dd30:	orr	r6, r0, #4
   2dd34:	sub	r0, fp, #72	; 0x48
   2dd38:	orr	r0, r0, #4
   2dd3c:	str	r0, [sp, #36]	; 0x24
   2dd40:	lsl	r0, lr, #3
   2dd44:	str	r0, [sp, #48]	; 0x30
   2dd48:	mov	sl, #0
   2dd4c:	mov	ip, #0
   2dd50:	cmp	lr, #1
   2dd54:	blt	2dd84 <GetDataSlab+0xb948>
   2dd58:	ldr	r0, [fp, #12]
   2dd5c:	ldr	r0, [r0]
   2dd60:	add	r0, r8, r0, lsl #2
   2dd64:	ldr	lr, [sp, #44]	; 0x2c
   2dd68:	ldr	r2, [sp, #60]	; 0x3c
   2dd6c:	ldr	r4, [r0], #4
   2dd70:	asr	r5, r4, #31
   2dd74:	strd	r4, [r2]
   2dd78:	subs	lr, lr, #1
   2dd7c:	add	r2, r2, #8
   2dd80:	bne	2dd6c <GetDataSlab+0xb930>
   2dd84:	ldr	r0, [sp, #40]	; 0x28
   2dd88:	add	r8, r8, r0, lsl #2
   2dd8c:	add	r3, r3, r0
   2dd90:	ldr	r0, [fp, #24]
   2dd94:	cmp	r0, #2
   2dd98:	blt	2de38 <GetDataSlab+0xb9fc>
   2dd9c:	mov	r2, #0
   2dda0:	ldr	lr, [sp, #44]	; 0x2c
   2dda4:	mov	r0, r2
   2dda8:	ldr	r2, [r6, r2, lsl #2]
   2ddac:	add	r2, r2, #1
   2ddb0:	str	r2, [r6, r0, lsl #2]
   2ddb4:	ldr	r5, [r7, r0, lsl #2]
   2ddb8:	sdiv	r4, r2, r5
   2ddbc:	mls	r2, r4, r5, r2
   2ddc0:	cmp	r2, #0
   2ddc4:	bne	2de40 <GetDataSlab+0xba04>
   2ddc8:	str	sl, [r6, r0, lsl #2]
   2ddcc:	add	r1, sp, #64	; 0x40
   2ddd0:	add	r2, r1, r0, lsl #2
   2ddd4:	ldr	r2, [r2, #4]
   2ddd8:	sdiv	r5, r3, r2
   2dddc:	mls	r4, r5, r2, r3
   2dde0:	cmp	r4, #0
   2dde4:	beq	2de00 <GetDataSlab+0xb9c4>
   2dde8:	ldr	r5, [r1, r0, lsl #2]
   2ddec:	ldr	r1, [r9, r0, lsl #2]
   2ddf0:	sub	r2, r2, r4
   2ddf4:	mla	r1, r1, r5, r2
   2ddf8:	add	r3, r1, r3
   2ddfc:	b	2de1c <GetDataSlab+0xb9e0>
   2de00:	ldr	r2, [r9, r0, lsl #2]
   2de04:	cmp	r2, #0
   2de08:	beq	2de20 <GetDataSlab+0xb9e4>
   2de0c:	add	r1, sp, #64	; 0x40
   2de10:	ldr	r1, [r1, r0, lsl #2]
   2de14:	mla	r3, r1, r2, r3
   2de18:	mul	r1, r1, r2
   2de1c:	add	r8, r8, r1, lsl #2
   2de20:	add	r2, r0, #1
   2de24:	add	r0, r0, #2
   2de28:	ldr	r1, [fp, #24]
   2de2c:	cmp	r0, r1
   2de30:	blt	2dda4 <GetDataSlab+0xb968>
   2de34:	b	2de50 <GetDataSlab+0xba14>
   2de38:	ldr	lr, [sp, #44]	; 0x2c
   2de3c:	b	2de50 <GetDataSlab+0xba14>
   2de40:	ldr	r1, [sp, #36]	; 0x24
   2de44:	ldr	r0, [r1, r0, lsl #2]
   2de48:	add	r8, r8, r0, lsl #2
   2de4c:	add	r3, r0, r3
   2de50:	ldr	r0, [sp, #60]	; 0x3c
   2de54:	ldr	r1, [sp, #48]	; 0x30
   2de58:	add	r0, r0, r1
   2de5c:	str	r0, [sp, #60]	; 0x3c
   2de60:	add	ip, ip, lr
   2de64:	mov	r0, #0
   2de68:	ldr	r1, [sp, #52]	; 0x34
   2de6c:	cmp	ip, r1
   2de70:	blt	2dd50 <GetDataSlab+0xb914>
   2de74:	b	22560 <GetDataSlab+0x124>
   2de78:	ldr	ip, [lr]
   2de7c:	sub	r0, ip, #1
   2de80:	str	r0, [fp, #-72]	; 0xffffffb8
   2de84:	ldr	r0, [r8]
   2de88:	str	r0, [sp, #40]	; 0x28
   2de8c:	str	r0, [sp, #64]	; 0x40
   2de90:	ldr	r1, [r4]
   2de94:	mov	r3, #0
   2de98:	ldr	r0, [fp, #24]
   2de9c:	cmp	r0, #2
   2dea0:	str	r1, [sp, #44]	; 0x2c
   2dea4:	str	r1, [sp, #52]	; 0x34
   2dea8:	sub	r5, fp, #72	; 0x48
   2deac:	blt	2df44 <GetDataSlab+0xbb08>
   2deb0:	mov	r1, #1
   2deb4:	mov	r3, #0
   2deb8:	mov	r6, r8
   2debc:	ldr	r0, [sp, #44]	; 0x2c
   2dec0:	str	r0, [sp, #52]	; 0x34
   2dec4:	ldr	r0, [lr, r1, lsl #2]
   2dec8:	sub	r7, r0, #1
   2decc:	str	r7, [r5, r1, lsl #2]
   2ded0:	sub	lr, r1, #1
   2ded4:	ldr	r4, [r8, lr, lsl #2]
   2ded8:	str	r4, [sl, r1, lsl #2]
   2dedc:	mov	r0, #0
   2dee0:	mov	r2, r6
   2dee4:	ldr	r5, [r2, -r0, lsl #2]!
   2dee8:	mul	r7, r7, r5
   2deec:	ldr	r2, [r2, #4]
   2def0:	mul	r4, r2, r4
   2def4:	add	r0, r0, #1
   2def8:	cmp	r1, r0
   2defc:	bne	2dee0 <GetDataSlab+0xbaa4>
   2df00:	str	r4, [sl, r1, lsl #2]
   2df04:	sub	r5, fp, #72	; 0x48
   2df08:	str	r7, [r5, r1, lsl #2]
   2df0c:	ldr	r0, [sl, lr, lsl #2]
   2df10:	ldr	r2, [r9, r1, lsl #2]
   2df14:	mla	r3, r2, r0, r3
   2df18:	ldr	r4, [fp, #20]
   2df1c:	ldr	r0, [r4, r1, lsl #2]
   2df20:	ldr	r2, [sp, #52]	; 0x34
   2df24:	mul	r2, r0, r2
   2df28:	str	r2, [sp, #52]	; 0x34
   2df2c:	add	r6, r6, #4
   2df30:	add	r1, r1, #1
   2df34:	ldr	r0, [fp, #24]
   2df38:	cmp	r1, r0
   2df3c:	ldr	lr, [fp, #16]
   2df40:	bne	2dec4 <GetDataSlab+0xba88>
   2df44:	ldr	r0, [sp, #48]	; 0x30
   2df48:	add	lr, r0, r3, lsl #2
   2df4c:	cmp	ip, #1
   2df50:	bne	376e4 <GetDataSlab+0x152a8>
   2df54:	ldr	r0, [sp, #52]	; 0x34
   2df58:	cmp	r0, #1
   2df5c:	ldr	sl, [sp, #44]	; 0x2c
   2df60:	blt	240b8 <GetDataSlab+0x1c7c>
   2df64:	add	r8, r9, #4
   2df68:	add	ip, r4, #4
   2df6c:	add	r0, sp, #104	; 0x68
   2df70:	orr	r6, r0, #4
   2df74:	sub	r0, fp, #72	; 0x48
   2df78:	orr	r0, r0, #4
   2df7c:	str	r0, [sp, #32]
   2df80:	lsl	r0, sl, #3
   2df84:	str	r0, [sp, #36]	; 0x24
   2df88:	mov	r9, #0
   2df8c:	mov	r0, #0
   2df90:	str	r0, [sp, #48]	; 0x30
   2df94:	cmp	sl, #1
   2df98:	blt	2dfc0 <GetDataSlab+0xbb84>
   2df9c:	ldr	r0, [fp, #12]
   2dfa0:	ldr	r0, [r0]
   2dfa4:	add	r0, lr, r0, lsl #2
   2dfa8:	ldr	r2, [sp, #60]	; 0x3c
   2dfac:	ldr	r4, [r0], #4
   2dfb0:	stm	r2, {r4, r9}
   2dfb4:	subs	sl, sl, #1
   2dfb8:	add	r2, r2, #8
   2dfbc:	bne	2dfac <GetDataSlab+0xbb70>
   2dfc0:	ldr	r0, [sp, #40]	; 0x28
   2dfc4:	add	lr, lr, r0, lsl #2
   2dfc8:	add	r3, r3, r0
   2dfcc:	ldr	r0, [fp, #24]
   2dfd0:	cmp	r0, #2
   2dfd4:	add	r5, sp, #64	; 0x40
   2dfd8:	blt	2e07c <GetDataSlab+0xbc40>
   2dfdc:	mov	r2, #0
   2dfe0:	mov	r0, r2
   2dfe4:	ldr	r2, [r6, r2, lsl #2]
   2dfe8:	add	r2, r2, #1
   2dfec:	str	r2, [r6, r0, lsl #2]
   2dff0:	ldr	r4, [ip, r0, lsl #2]
   2dff4:	sdiv	r1, r2, r4
   2dff8:	mls	r1, r1, r4, r2
   2dffc:	cmp	r1, #0
   2e000:	bne	2e06c <GetDataSlab+0xbc30>
   2e004:	str	r9, [r6, r0, lsl #2]
   2e008:	add	r1, r5, r0, lsl #2
   2e00c:	ldr	r2, [r1, #4]
   2e010:	sdiv	r1, r3, r2
   2e014:	mls	r4, r1, r2, r3
   2e018:	cmp	r4, #0
   2e01c:	beq	2e038 <GetDataSlab+0xbbfc>
   2e020:	ldr	r1, [r5, r0, lsl #2]
   2e024:	ldr	r7, [r8, r0, lsl #2]
   2e028:	sub	r2, r2, r4
   2e02c:	mla	r1, r7, r1, r2
   2e030:	add	r3, r1, r3
   2e034:	b	2e050 <GetDataSlab+0xbc14>
   2e038:	ldr	r2, [r8, r0, lsl #2]
   2e03c:	cmp	r2, #0
   2e040:	beq	2e054 <GetDataSlab+0xbc18>
   2e044:	ldr	r1, [r5, r0, lsl #2]
   2e048:	mla	r3, r1, r2, r3
   2e04c:	mul	r1, r1, r2
   2e050:	add	lr, lr, r1, lsl #2
   2e054:	add	r2, r0, #1
   2e058:	add	r0, r0, #2
   2e05c:	ldr	r1, [fp, #24]
   2e060:	cmp	r0, r1
   2e064:	blt	2dfe0 <GetDataSlab+0xbba4>
   2e068:	b	2e07c <GetDataSlab+0xbc40>
   2e06c:	ldr	r1, [sp, #32]
   2e070:	ldr	r0, [r1, r0, lsl #2]
   2e074:	add	lr, lr, r0, lsl #2
   2e078:	add	r3, r0, r3
   2e07c:	ldr	r0, [sp, #60]	; 0x3c
   2e080:	ldr	r1, [sp, #36]	; 0x24
   2e084:	add	r0, r0, r1
   2e088:	str	r0, [sp, #60]	; 0x3c
   2e08c:	ldr	sl, [sp, #44]	; 0x2c
   2e090:	ldr	r2, [sp, #48]	; 0x30
   2e094:	add	r2, r2, sl
   2e098:	mov	r0, #0
   2e09c:	ldr	r1, [sp, #52]	; 0x34
   2e0a0:	str	r2, [sp, #48]	; 0x30
   2e0a4:	cmp	r2, r1
   2e0a8:	blt	2df94 <GetDataSlab+0xbb58>
   2e0ac:	b	22560 <GetDataSlab+0x124>
   2e0b0:	ldr	ip, [lr]
   2e0b4:	sub	r1, ip, #1
   2e0b8:	str	r1, [fp, #-72]	; 0xffffffb8
   2e0bc:	ldr	r0, [r8]
   2e0c0:	str	r0, [sp, #36]	; 0x24
   2e0c4:	str	r0, [sp, #64]	; 0x40
   2e0c8:	ldr	r1, [r4]
   2e0cc:	mov	r4, #0
   2e0d0:	ldr	r0, [fp, #24]
   2e0d4:	cmp	r0, #2
   2e0d8:	str	r1, [sp, #40]	; 0x28
   2e0dc:	str	r1, [sp, #44]	; 0x2c
   2e0e0:	sub	r5, fp, #72	; 0x48
   2e0e4:	blt	2e17c <GetDataSlab+0xbd40>
   2e0e8:	mov	r1, #1
   2e0ec:	mov	r4, #0
   2e0f0:	mov	r0, r8
   2e0f4:	ldr	r2, [sp, #40]	; 0x28
   2e0f8:	str	r2, [sp, #44]	; 0x2c
   2e0fc:	ldr	r3, [lr, r1, lsl #2]
   2e100:	sub	r3, r3, #1
   2e104:	str	r3, [r5, r1, lsl #2]
   2e108:	sub	lr, r1, #1
   2e10c:	ldr	r6, [r8, lr, lsl #2]
   2e110:	str	r6, [sl, r1, lsl #2]
   2e114:	mov	r5, #0
   2e118:	mov	r2, r0
   2e11c:	ldr	r7, [r2, -r5, lsl #2]!
   2e120:	mul	r3, r3, r7
   2e124:	ldr	r2, [r2, #4]
   2e128:	mul	r6, r2, r6
   2e12c:	add	r5, r5, #1
   2e130:	cmp	r1, r5
   2e134:	bne	2e118 <GetDataSlab+0xbcdc>
   2e138:	str	r6, [sl, r1, lsl #2]
   2e13c:	sub	r5, fp, #72	; 0x48
   2e140:	str	r3, [r5, r1, lsl #2]
   2e144:	ldr	r2, [sl, lr, lsl #2]
   2e148:	ldr	r3, [r9, r1, lsl #2]
   2e14c:	mla	r4, r3, r2, r4
   2e150:	ldr	r2, [fp, #20]
   2e154:	ldr	r2, [r2, r1, lsl #2]
   2e158:	ldr	r3, [sp, #44]	; 0x2c
   2e15c:	mul	r3, r2, r3
   2e160:	str	r3, [sp, #44]	; 0x2c
   2e164:	add	r0, r0, #4
   2e168:	add	r1, r1, #1
   2e16c:	ldr	r2, [fp, #24]
   2e170:	cmp	r1, r2
   2e174:	ldr	lr, [fp, #16]
   2e178:	bne	2e0fc <GetDataSlab+0xbcc0>
   2e17c:	ldr	r0, [sp, #48]	; 0x30
   2e180:	add	r5, r0, r4, lsl #2
   2e184:	cmp	ip, #1
   2e188:	bne	37884 <GetDataSlab+0x15448>
   2e18c:	ldr	r0, [sp, #44]	; 0x2c
   2e190:	cmp	r0, #1
   2e194:	ldr	sl, [sp, #40]	; 0x28
   2e198:	blt	240b8 <GetDataSlab+0x1c7c>
   2e19c:	ldr	r0, [fp, #20]
   2e1a0:	add	r0, r0, #4
   2e1a4:	str	r0, [sp, #28]
   2e1a8:	add	r0, sp, #104	; 0x68
   2e1ac:	orr	r7, r0, #4
   2e1b0:	sub	r0, fp, #72	; 0x48
   2e1b4:	orr	r0, r0, #4
   2e1b8:	str	r0, [sp, #24]
   2e1bc:	lsl	r0, sl, #3
   2e1c0:	str	r0, [sp, #48]	; 0x30
   2e1c4:	ldr	r0, [r9], #4
   2e1c8:	str	r0, [sp, #32]
   2e1cc:	str	r9, [sp, #56]	; 0x38
   2e1d0:	mov	r0, #0
   2e1d4:	str	r0, [sp, #52]	; 0x34
   2e1d8:	cmp	sl, #1
   2e1dc:	blt	2e208 <GetDataSlab+0xbdcc>
   2e1e0:	ldr	r0, [sp, #32]
   2e1e4:	add	r8, r5, r0, lsl #2
   2e1e8:	ldr	r9, [sp, #40]	; 0x28
   2e1ec:	ldr	sl, [sp, #60]	; 0x3c
   2e1f0:	ldr	r0, [r8], #4
   2e1f4:	bl	48e10 <__aeabi_f2lz>
   2e1f8:	strd	r0, [sl]
   2e1fc:	subs	r9, r9, #1
   2e200:	add	sl, sl, #8
   2e204:	bne	2e1f0 <GetDataSlab+0xbdb4>
   2e208:	ldr	r0, [sp, #36]	; 0x24
   2e20c:	add	r5, r5, r0, lsl #2
   2e210:	add	r4, r4, r0
   2e214:	ldr	r0, [fp, #24]
   2e218:	cmp	r0, #2
   2e21c:	add	r8, sp, #64	; 0x40
   2e220:	blt	2e2c8 <GetDataSlab+0xbe8c>
   2e224:	mov	r1, #0
   2e228:	ldr	ip, [sp, #60]	; 0x3c
   2e22c:	ldr	lr, [sp, #56]	; 0x38
   2e230:	ldr	sl, [sp, #40]	; 0x28
   2e234:	ldr	r9, [sp, #28]
   2e238:	mov	r0, r1
   2e23c:	ldr	r1, [r7, r1, lsl #2]
   2e240:	add	r1, r1, #1
   2e244:	str	r1, [r7, r0, lsl #2]
   2e248:	ldr	r2, [r9, r0, lsl #2]
   2e24c:	sdiv	r3, r1, r2
   2e250:	mls	r1, r3, r2, r1
   2e254:	cmp	r1, #0
   2e258:	bne	2e2d4 <GetDataSlab+0xbe98>
   2e25c:	mov	r1, #0
   2e260:	str	r1, [r7, r0, lsl #2]
   2e264:	add	r1, r8, r0, lsl #2
   2e268:	ldr	r1, [r1, #4]
   2e26c:	sdiv	r2, r4, r1
   2e270:	mls	r2, r2, r1, r4
   2e274:	cmp	r2, #0
   2e278:	beq	2e294 <GetDataSlab+0xbe58>
   2e27c:	ldr	r3, [r8, r0, lsl #2]
   2e280:	ldr	r6, [lr, r0, lsl #2]
   2e284:	sub	r1, r1, r2
   2e288:	mla	r1, r6, r3, r1
   2e28c:	add	r4, r1, r4
   2e290:	b	2e2ac <GetDataSlab+0xbe70>
   2e294:	ldr	r1, [lr, r0, lsl #2]
   2e298:	cmp	r1, #0
   2e29c:	beq	2e2b0 <GetDataSlab+0xbe74>
   2e2a0:	ldr	r2, [r8, r0, lsl #2]
   2e2a4:	mla	r4, r2, r1, r4
   2e2a8:	mul	r1, r2, r1
   2e2ac:	add	r5, r5, r1, lsl #2
   2e2b0:	add	r1, r0, #1
   2e2b4:	add	r0, r0, #2
   2e2b8:	ldr	r2, [fp, #24]
   2e2bc:	cmp	r0, r2
   2e2c0:	blt	2e238 <GetDataSlab+0xbdfc>
   2e2c4:	b	2e2e4 <GetDataSlab+0xbea8>
   2e2c8:	ldr	ip, [sp, #60]	; 0x3c
   2e2cc:	ldr	sl, [sp, #40]	; 0x28
   2e2d0:	b	2e2e4 <GetDataSlab+0xbea8>
   2e2d4:	ldr	r1, [sp, #24]
   2e2d8:	ldr	r0, [r1, r0, lsl #2]
   2e2dc:	add	r5, r5, r0, lsl #2
   2e2e0:	add	r4, r0, r4
   2e2e4:	ldr	r0, [sp, #48]	; 0x30
   2e2e8:	add	ip, ip, r0
   2e2ec:	str	ip, [sp, #60]	; 0x3c
   2e2f0:	ldr	r2, [sp, #52]	; 0x34
   2e2f4:	add	r2, r2, sl
   2e2f8:	mov	r0, #0
   2e2fc:	ldr	r1, [sp, #44]	; 0x2c
   2e300:	str	r2, [sp, #52]	; 0x34
   2e304:	cmp	r2, r1
   2e308:	blt	2e1d8 <GetDataSlab+0xbd9c>
   2e30c:	b	22560 <GetDataSlab+0x124>
   2e310:	ldr	ip, [lr]
   2e314:	sub	r1, ip, #1
   2e318:	str	r1, [fp, #-72]	; 0xffffffb8
   2e31c:	ldr	r0, [r8]
   2e320:	str	r0, [sp, #36]	; 0x24
   2e324:	str	r0, [sp, #64]	; 0x40
   2e328:	ldr	r1, [r4]
   2e32c:	mov	r9, #0
   2e330:	ldr	r0, [fp, #24]
   2e334:	cmp	r0, #2
   2e338:	str	r1, [sp, #40]	; 0x28
   2e33c:	str	r1, [sp, #44]	; 0x2c
   2e340:	sub	r5, fp, #72	; 0x48
   2e344:	blt	2e3dc <GetDataSlab+0xbfa0>
   2e348:	mov	r1, #1
   2e34c:	mov	r9, #0
   2e350:	mov	r4, r8
   2e354:	ldr	r0, [sp, #40]	; 0x28
   2e358:	str	r0, [sp, #44]	; 0x2c
   2e35c:	ldr	r3, [lr, r1, lsl #2]
   2e360:	sub	r3, r3, #1
   2e364:	str	r3, [r5, r1, lsl #2]
   2e368:	sub	r7, r1, #1
   2e36c:	ldr	r6, [r8, r7, lsl #2]
   2e370:	str	r6, [sl, r1, lsl #2]
   2e374:	mov	r5, #0
   2e378:	mov	r2, r4
   2e37c:	ldr	r0, [r2, -r5, lsl #2]!
   2e380:	mul	r3, r3, r0
   2e384:	ldr	r0, [r2, #4]
   2e388:	mul	r6, r0, r6
   2e38c:	add	r5, r5, #1
   2e390:	cmp	r1, r5
   2e394:	bne	2e378 <GetDataSlab+0xbf3c>
   2e398:	str	r6, [sl, r1, lsl #2]
   2e39c:	sub	r5, fp, #72	; 0x48
   2e3a0:	str	r3, [r5, r1, lsl #2]
   2e3a4:	ldr	r0, [sl, r7, lsl #2]
   2e3a8:	ldr	r2, [fp, #12]
   2e3ac:	ldr	r2, [r2, r1, lsl #2]
   2e3b0:	mla	r9, r2, r0, r9
   2e3b4:	ldr	r0, [fp, #20]
   2e3b8:	ldr	r0, [r0, r1, lsl #2]
   2e3bc:	ldr	r2, [sp, #44]	; 0x2c
   2e3c0:	mul	r2, r0, r2
   2e3c4:	str	r2, [sp, #44]	; 0x2c
   2e3c8:	add	r4, r4, #4
   2e3cc:	add	r1, r1, #1
   2e3d0:	ldr	r0, [fp, #24]
   2e3d4:	cmp	r1, r0
   2e3d8:	bne	2e35c <GetDataSlab+0xbf20>
   2e3dc:	ldr	r0, [sp, #48]	; 0x30
   2e3e0:	add	r5, r0, r9, lsl #3
   2e3e4:	cmp	ip, #1
   2e3e8:	bne	37a24 <GetDataSlab+0x155e8>
   2e3ec:	ldr	r0, [sp, #44]	; 0x2c
   2e3f0:	cmp	r0, #1
   2e3f4:	ldr	r0, [fp, #20]
   2e3f8:	ldr	lr, [sp, #40]	; 0x28
   2e3fc:	blt	240b8 <GetDataSlab+0x1c7c>
   2e400:	add	r0, r0, #4
   2e404:	str	r0, [sp, #28]
   2e408:	add	r0, sp, #104	; 0x68
   2e40c:	orr	r6, r0, #4
   2e410:	sub	r0, fp, #72	; 0x48
   2e414:	orr	r0, r0, #4
   2e418:	str	r0, [sp, #24]
   2e41c:	lsl	r0, lr, #3
   2e420:	str	r0, [sp, #48]	; 0x30
   2e424:	ldr	r0, [sp, #56]	; 0x38
   2e428:	ldr	r1, [r0], #4
   2e42c:	str	r1, [sp, #32]
   2e430:	str	r0, [sp, #56]	; 0x38
   2e434:	mov	r0, #0
   2e438:	str	r0, [sp, #52]	; 0x34
   2e43c:	cmp	lr, #1
   2e440:	blt	2e474 <GetDataSlab+0xc038>
   2e444:	ldr	r0, [sp, #32]
   2e448:	add	r8, r5, r0, lsl #3
   2e44c:	ldr	sl, [sp, #40]	; 0x28
   2e450:	ldr	r7, [sp, #60]	; 0x3c
   2e454:	vldr	d16, [r8]
   2e458:	vmov	r0, r1, d16
   2e45c:	bl	48e3c <__aeabi_d2lz>
   2e460:	strd	r0, [r7]
   2e464:	subs	sl, sl, #1
   2e468:	add	r7, r7, #8
   2e46c:	add	r8, r8, #8
   2e470:	bne	2e454 <GetDataSlab+0xc018>
   2e474:	ldr	r0, [sp, #36]	; 0x24
   2e478:	add	r5, r5, r0, lsl #3
   2e47c:	add	r9, r9, r0
   2e480:	ldr	r0, [fp, #24]
   2e484:	cmp	r0, #2
   2e488:	add	r4, sp, #64	; 0x40
   2e48c:	blt	2e53c <GetDataSlab+0xc100>
   2e490:	mov	r8, r4
   2e494:	mov	r1, #0
   2e498:	ldr	ip, [sp, #60]	; 0x3c
   2e49c:	ldr	lr, [sp, #40]	; 0x28
   2e4a0:	ldr	r4, [sp, #28]
   2e4a4:	mov	sl, #0
   2e4a8:	mov	r0, r1
   2e4ac:	ldr	r1, [r6, r1, lsl #2]
   2e4b0:	add	r1, r1, #1
   2e4b4:	str	r1, [r6, r0, lsl #2]
   2e4b8:	ldr	r2, [r4, r0, lsl #2]
   2e4bc:	sdiv	r3, r1, r2
   2e4c0:	mls	r1, r3, r2, r1
   2e4c4:	cmp	r1, #0
   2e4c8:	bne	2e548 <GetDataSlab+0xc10c>
   2e4cc:	str	sl, [r6, r0, lsl #2]
   2e4d0:	add	r1, r8, r0, lsl #2
   2e4d4:	ldr	r1, [r1, #4]
   2e4d8:	sdiv	r2, r9, r1
   2e4dc:	mls	r2, r2, r1, r9
   2e4e0:	cmp	r2, #0
   2e4e4:	beq	2e504 <GetDataSlab+0xc0c8>
   2e4e8:	ldr	r3, [r8, r0, lsl #2]
   2e4ec:	ldr	r7, [sp, #56]	; 0x38
   2e4f0:	ldr	r7, [r7, r0, lsl #2]
   2e4f4:	sub	r1, r1, r2
   2e4f8:	mla	r1, r7, r3, r1
   2e4fc:	add	r9, r1, r9
   2e500:	b	2e520 <GetDataSlab+0xc0e4>
   2e504:	ldr	r1, [sp, #56]	; 0x38
   2e508:	ldr	r1, [r1, r0, lsl #2]
   2e50c:	cmp	r1, #0
   2e510:	beq	2e524 <GetDataSlab+0xc0e8>
   2e514:	ldr	r2, [r8, r0, lsl #2]
   2e518:	mla	r9, r2, r1, r9
   2e51c:	mul	r1, r2, r1
   2e520:	add	r5, r5, r1, lsl #3
   2e524:	add	r1, r0, #1
   2e528:	add	r0, r0, #2
   2e52c:	ldr	r2, [fp, #24]
   2e530:	cmp	r0, r2
   2e534:	blt	2e4a8 <GetDataSlab+0xc06c>
   2e538:	b	2e558 <GetDataSlab+0xc11c>
   2e53c:	ldr	ip, [sp, #60]	; 0x3c
   2e540:	ldr	lr, [sp, #40]	; 0x28
   2e544:	b	2e558 <GetDataSlab+0xc11c>
   2e548:	ldr	r1, [sp, #24]
   2e54c:	ldr	r0, [r1, r0, lsl #2]
   2e550:	add	r5, r5, r0, lsl #3
   2e554:	add	r9, r0, r9
   2e558:	ldr	r0, [sp, #48]	; 0x30
   2e55c:	add	ip, ip, r0
   2e560:	str	ip, [sp, #60]	; 0x3c
   2e564:	ldr	r2, [sp, #52]	; 0x34
   2e568:	add	r2, r2, lr
   2e56c:	mov	r0, #0
   2e570:	ldr	r1, [sp, #44]	; 0x2c
   2e574:	str	r2, [sp, #52]	; 0x34
   2e578:	cmp	r2, r1
   2e57c:	blt	2e43c <GetDataSlab+0xc000>
   2e580:	b	22560 <GetDataSlab+0x124>
   2e584:	ldr	r0, [lr]
   2e588:	str	r0, [sp, #16]
   2e58c:	sub	r0, r0, #1
   2e590:	str	r0, [fp, #-72]	; 0xffffffb8
   2e594:	ldr	r0, [r8]
   2e598:	str	r0, [sp, #36]	; 0x24
   2e59c:	str	r0, [sp, #64]	; 0x40
   2e5a0:	ldr	r1, [r4]
   2e5a4:	mov	lr, #0
   2e5a8:	ldr	r0, [fp, #24]
   2e5ac:	cmp	r0, #2
   2e5b0:	str	r1, [sp, #44]	; 0x2c
   2e5b4:	mov	ip, r1
   2e5b8:	sub	r1, fp, #72	; 0x48
   2e5bc:	blt	2e648 <GetDataSlab+0xc20c>
   2e5c0:	mov	r0, #1
   2e5c4:	mov	lr, #0
   2e5c8:	ldr	r3, [fp, #8]
   2e5cc:	ldr	ip, [sp, #44]	; 0x2c
   2e5d0:	ldr	r2, [fp, #16]
   2e5d4:	ldr	r2, [r2, r0, lsl #2]
   2e5d8:	sub	r4, r2, #1
   2e5dc:	str	r4, [r1, r0, lsl #2]
   2e5e0:	sub	r8, r0, #1
   2e5e4:	ldr	r2, [fp, #8]
   2e5e8:	ldr	r6, [r2, r8, lsl #2]
   2e5ec:	str	r6, [sl, r0, lsl #2]
   2e5f0:	mov	r7, #0
   2e5f4:	mov	r2, r3
   2e5f8:	ldr	r5, [r2, -r7, lsl #2]!
   2e5fc:	mul	r4, r4, r5
   2e600:	ldr	r2, [r2, #4]
   2e604:	mul	r6, r2, r6
   2e608:	add	r7, r7, #1
   2e60c:	cmp	r0, r7
   2e610:	bne	2e5f4 <GetDataSlab+0xc1b8>
   2e614:	str	r6, [sl, r0, lsl #2]
   2e618:	str	r4, [r1, r0, lsl #2]
   2e61c:	ldr	r2, [sl, r8, lsl #2]
   2e620:	ldr	r4, [r9, r0, lsl #2]
   2e624:	mla	lr, r4, r2, lr
   2e628:	ldr	r4, [fp, #20]
   2e62c:	ldr	r2, [r4, r0, lsl #2]
   2e630:	mul	ip, r2, ip
   2e634:	add	r3, r3, #4
   2e638:	add	r0, r0, #1
   2e63c:	ldr	r2, [fp, #24]
   2e640:	cmp	r0, r2
   2e644:	bne	2e5d0 <GetDataSlab+0xc194>
   2e648:	str	ip, [sp, #40]	; 0x28
   2e64c:	ldr	r0, [sp, #48]	; 0x30
   2e650:	add	ip, r0, lr, lsl #3
   2e654:	ldr	r3, [sp, #16]
   2e658:	cmp	r3, #1
   2e65c:	bne	37bd4 <GetDataSlab+0x15798>
   2e660:	ldr	r0, [sp, #40]	; 0x28
   2e664:	cmp	r0, #1
   2e668:	ldr	r1, [sp, #44]	; 0x2c
   2e66c:	blt	3a644 <GetDataSlab+0x18208>
   2e670:	add	r8, r4, #4
   2e674:	add	r0, sp, #104	; 0x68
   2e678:	orr	r4, r0, #4
   2e67c:	sub	r0, fp, #72	; 0x48
   2e680:	orr	r0, r0, #4
   2e684:	str	r0, [sp, #24]
   2e688:	lsl	r0, r1, #3
   2e68c:	str	r0, [sp, #32]
   2e690:	mov	r5, r9
   2e694:	ldr	r0, [r5], #4
   2e698:	str	r0, [sp, #28]
   2e69c:	ldr	r3, [sp, #60]	; 0x3c
   2e6a0:	mov	r9, #0
   2e6a4:	cmp	r1, #1
   2e6a8:	blt	2e6d4 <GetDataSlab+0xc298>
   2e6ac:	ldr	r0, [sp, #28]
   2e6b0:	add	r7, ip, r0, lsl #3
   2e6b4:	ldr	r6, [sp, #44]	; 0x2c
   2e6b8:	mov	r2, r3
   2e6bc:	ldrd	r0, [r7]
   2e6c0:	strd	r0, [r2]
   2e6c4:	subs	r6, r6, #1
   2e6c8:	add	r2, r2, #8
   2e6cc:	add	r7, r7, #8
   2e6d0:	bne	2e6bc <GetDataSlab+0xc280>
   2e6d4:	ldr	r0, [sp, #36]	; 0x24
   2e6d8:	add	ip, ip, r0, lsl #3
   2e6dc:	add	lr, lr, r0
   2e6e0:	ldr	r0, [fp, #24]
   2e6e4:	cmp	r0, #2
   2e6e8:	blt	2e798 <GetDataSlab+0xc35c>
   2e6ec:	mov	r0, #0
   2e6f0:	mov	r7, #0
   2e6f4:	mov	sl, r0
   2e6f8:	ldr	r0, [r4, r0, lsl #2]
   2e6fc:	add	r0, r0, #1
   2e700:	str	r0, [r4, sl, lsl #2]
   2e704:	ldr	r1, [r8, sl, lsl #2]
   2e708:	sdiv	r2, r0, r1
   2e70c:	mls	r0, r2, r1, r0
   2e710:	cmp	r0, #0
   2e714:	bne	2e788 <GetDataSlab+0xc34c>
   2e718:	str	r7, [r4, sl, lsl #2]
   2e71c:	add	r6, sp, #64	; 0x40
   2e720:	add	r0, r6, sl, lsl #2
   2e724:	ldr	r0, [r0, #4]
   2e728:	sdiv	r1, lr, r0
   2e72c:	mls	r2, r1, r0, lr
   2e730:	cmp	r2, #0
   2e734:	beq	2e750 <GetDataSlab+0xc314>
   2e738:	ldr	r1, [r6, sl, lsl #2]
   2e73c:	ldr	r6, [r5, sl, lsl #2]
   2e740:	sub	r0, r0, r2
   2e744:	mla	r0, r6, r1, r0
   2e748:	add	lr, r0, lr
   2e74c:	b	2e76c <GetDataSlab+0xc330>
   2e750:	ldr	r0, [r5, sl, lsl #2]
   2e754:	cmp	r0, #0
   2e758:	beq	2e770 <GetDataSlab+0xc334>
   2e75c:	add	r1, sp, #64	; 0x40
   2e760:	ldr	r1, [r1, sl, lsl #2]
   2e764:	mla	lr, r1, r0, lr
   2e768:	mul	r0, r1, r0
   2e76c:	add	ip, ip, r0, lsl #3
   2e770:	add	r0, sl, #1
   2e774:	add	r1, sl, #2
   2e778:	ldr	r2, [fp, #24]
   2e77c:	cmp	r1, r2
   2e780:	blt	2e6f4 <GetDataSlab+0xc2b8>
   2e784:	b	2e798 <GetDataSlab+0xc35c>
   2e788:	ldr	r0, [sp, #24]
   2e78c:	ldr	r0, [r0, sl, lsl #2]
   2e790:	add	ip, ip, r0, lsl #3
   2e794:	add	lr, r0, lr
   2e798:	ldr	r0, [sp, #32]
   2e79c:	add	r3, r3, r0
   2e7a0:	ldr	r1, [sp, #44]	; 0x2c
   2e7a4:	add	r9, r9, r1
   2e7a8:	ldr	r0, [sp, #40]	; 0x28
   2e7ac:	cmp	r9, r0
   2e7b0:	blt	2e6a4 <GetDataSlab+0xc268>
   2e7b4:	b	37d50 <GetDataSlab+0x15914>
   2e7b8:	mov	r7, sl
   2e7bc:	ldr	sl, [lr]
   2e7c0:	sub	r0, sl, #1
   2e7c4:	str	r0, [fp, #-72]	; 0xffffffb8
   2e7c8:	ldr	r0, [r8]
   2e7cc:	str	r0, [sp, #52]	; 0x34
   2e7d0:	str	r0, [sp, #64]	; 0x40
   2e7d4:	ldr	r1, [r4]
   2e7d8:	mov	r3, #0
   2e7dc:	ldr	r0, [fp, #24]
   2e7e0:	cmp	r0, #2
   2e7e4:	str	r1, [sp, #40]	; 0x28
   2e7e8:	str	r1, [sp, #44]	; 0x2c
   2e7ec:	sub	r6, fp, #72	; 0x48
   2e7f0:	blt	2e888 <GetDataSlab+0xc44c>
   2e7f4:	mov	r0, #1
   2e7f8:	mov	r3, #0
   2e7fc:	mov	r4, r8
   2e800:	ldr	r1, [sp, #40]	; 0x28
   2e804:	str	r1, [sp, #44]	; 0x2c
   2e808:	ldr	r2, [lr, r0, lsl #2]
   2e80c:	sub	r2, r2, #1
   2e810:	str	r2, [r6, r0, lsl #2]
   2e814:	sub	ip, r0, #1
   2e818:	ldr	r6, [r8, ip, lsl #2]
   2e81c:	str	r6, [r7, r0, lsl #2]
   2e820:	mov	r7, #0
   2e824:	mov	r1, r4
   2e828:	ldr	r5, [r1, -r7, lsl #2]!
   2e82c:	mul	r2, r2, r5
   2e830:	ldr	r1, [r1, #4]
   2e834:	mul	r6, r1, r6
   2e838:	add	r7, r7, #1
   2e83c:	cmp	r0, r7
   2e840:	bne	2e824 <GetDataSlab+0xc3e8>
   2e844:	add	r7, sp, #64	; 0x40
   2e848:	str	r6, [r7, r0, lsl #2]
   2e84c:	sub	r6, fp, #72	; 0x48
   2e850:	str	r2, [r6, r0, lsl #2]
   2e854:	ldr	r1, [r7, ip, lsl #2]
   2e858:	ldr	r2, [r9, r0, lsl #2]
   2e85c:	mla	r3, r2, r1, r3
   2e860:	ldr	r1, [fp, #20]
   2e864:	ldr	r1, [r1, r0, lsl #2]
   2e868:	ldr	r2, [sp, #44]	; 0x2c
   2e86c:	mul	r2, r1, r2
   2e870:	str	r2, [sp, #44]	; 0x2c
   2e874:	add	r4, r4, #4
   2e878:	add	r0, r0, #1
   2e87c:	ldr	r1, [fp, #24]
   2e880:	cmp	r0, r1
   2e884:	bne	2e808 <GetDataSlab+0xc3cc>
   2e888:	ldr	r0, [sp, #48]	; 0x30
   2e88c:	add	r5, r0, r3
   2e890:	cmp	sl, #1
   2e894:	bne	37d5c <GetDataSlab+0x15920>
   2e898:	ldr	r0, [sp, #44]	; 0x2c
   2e89c:	cmp	r0, #1
   2e8a0:	ldr	r0, [fp, #20]
   2e8a4:	ldr	lr, [sp, #40]	; 0x28
   2e8a8:	blt	3ae3c <GetDataSlab+0x18a00>
   2e8ac:	mov	r1, r6
   2e8b0:	add	ip, r9, #4
   2e8b4:	add	sl, r0, #4
   2e8b8:	add	r0, sp, #104	; 0x68
   2e8bc:	orr	r6, r0, #4
   2e8c0:	orr	r0, r1, #4
   2e8c4:	str	r0, [sp, #36]	; 0x24
   2e8c8:	lsl	r0, lr, #3
   2e8cc:	str	r0, [sp, #48]	; 0x30
   2e8d0:	mov	r9, #0
   2e8d4:	mov	r8, #0
   2e8d8:	cmp	lr, #1
   2e8dc:	blt	2e908 <GetDataSlab+0xc4cc>
   2e8e0:	ldr	r0, [fp, #12]
   2e8e4:	ldr	r0, [r0]
   2e8e8:	add	r0, r5, r0
   2e8ec:	ldr	lr, [sp, #40]	; 0x28
   2e8f0:	ldr	r2, [sp, #60]	; 0x3c
   2e8f4:	ldrb	r4, [r0], #1
   2e8f8:	stm	r2, {r4, r9}
   2e8fc:	subs	lr, lr, #1
   2e900:	add	r2, r2, #8
   2e904:	bne	2e8f4 <GetDataSlab+0xc4b8>
   2e908:	ldr	r0, [sp, #52]	; 0x34
   2e90c:	add	r5, r5, r0
   2e910:	add	r3, r3, r0
   2e914:	ldr	r0, [fp, #24]
   2e918:	cmp	r0, #2
   2e91c:	blt	2e9b8 <GetDataSlab+0xc57c>
   2e920:	mov	r2, #0
   2e924:	ldr	lr, [sp, #40]	; 0x28
   2e928:	mov	r0, r2
   2e92c:	ldr	r2, [r6, r2, lsl #2]
   2e930:	add	r2, r2, #1
   2e934:	str	r2, [r6, r0, lsl #2]
   2e938:	ldr	r4, [sl, r0, lsl #2]
   2e93c:	sdiv	r7, r2, r4
   2e940:	mls	r2, r7, r4, r2
   2e944:	cmp	r2, #0
   2e948:	bne	2e9c0 <GetDataSlab+0xc584>
   2e94c:	str	r9, [r6, r0, lsl #2]
   2e950:	add	r1, sp, #64	; 0x40
   2e954:	add	r2, r1, r0, lsl #2
   2e958:	ldr	r2, [r2, #4]
   2e95c:	sdiv	r7, r3, r2
   2e960:	mls	r4, r7, r2, r3
   2e964:	cmp	r4, #0
   2e968:	beq	2e988 <GetDataSlab+0xc54c>
   2e96c:	ldr	r7, [r1, r0, lsl #2]
   2e970:	ldr	r1, [ip, r0, lsl #2]
   2e974:	sub	r2, r2, r4
   2e978:	mla	r1, r1, r7, r2
   2e97c:	add	r3, r1, r3
   2e980:	add	r5, r5, r1
   2e984:	b	2e9a0 <GetDataSlab+0xc564>
   2e988:	ldr	r2, [ip, r0, lsl #2]
   2e98c:	cmp	r2, #0
   2e990:	addne	r1, sp, #64	; 0x40
   2e994:	ldrne	r1, [r1, r0, lsl #2]
   2e998:	mlane	r3, r1, r2, r3
   2e99c:	mlane	r5, r1, r2, r5
   2e9a0:	add	r2, r0, #1
   2e9a4:	add	r0, r0, #2
   2e9a8:	ldr	r1, [fp, #24]
   2e9ac:	cmp	r0, r1
   2e9b0:	blt	2e928 <GetDataSlab+0xc4ec>
   2e9b4:	b	2e9d0 <GetDataSlab+0xc594>
   2e9b8:	ldr	lr, [sp, #40]	; 0x28
   2e9bc:	b	2e9d0 <GetDataSlab+0xc594>
   2e9c0:	ldr	r1, [sp, #36]	; 0x24
   2e9c4:	ldr	r0, [r1, r0, lsl #2]
   2e9c8:	add	r5, r5, r0
   2e9cc:	add	r3, r0, r3
   2e9d0:	ldr	r0, [sp, #60]	; 0x3c
   2e9d4:	ldr	r1, [sp, #48]	; 0x30
   2e9d8:	add	r0, r0, r1
   2e9dc:	str	r0, [sp, #60]	; 0x3c
   2e9e0:	add	r8, r8, lr
   2e9e4:	mov	r0, #0
   2e9e8:	ldr	r1, [sp, #44]	; 0x2c
   2e9ec:	cmp	r8, r1
   2e9f0:	blt	2e8d8 <GetDataSlab+0xc49c>
   2e9f4:	b	22560 <GetDataSlab+0x124>
   2e9f8:	ldr	ip, [lr]
   2e9fc:	sub	r0, ip, #1
   2ea00:	str	r0, [fp, #-72]	; 0xffffffb8
   2ea04:	ldr	r0, [r8]
   2ea08:	str	r0, [sp, #40]	; 0x28
   2ea0c:	str	r0, [sp, #64]	; 0x40
   2ea10:	ldr	r1, [r4]
   2ea14:	mov	r5, sl
   2ea18:	mov	sl, #0
   2ea1c:	ldr	r0, [fp, #24]
   2ea20:	cmp	r0, #2
   2ea24:	str	r1, [sp, #44]	; 0x2c
   2ea28:	str	r1, [sp, #52]	; 0x34
   2ea2c:	sub	r2, fp, #72	; 0x48
   2ea30:	blt	2eac8 <GetDataSlab+0xc68c>
   2ea34:	mov	r1, #1
   2ea38:	mov	sl, #0
   2ea3c:	ldr	r6, [fp, #8]
   2ea40:	ldr	r0, [sp, #44]	; 0x2c
   2ea44:	str	r0, [sp, #52]	; 0x34
   2ea48:	ldr	r0, [lr, r1, lsl #2]
   2ea4c:	sub	r7, r0, #1
   2ea50:	str	r7, [r2, r1, lsl #2]
   2ea54:	sub	r8, r1, #1
   2ea58:	ldr	r0, [fp, #8]
   2ea5c:	ldr	r4, [r0, r8, lsl #2]
   2ea60:	str	r4, [r5, r1, lsl #2]
   2ea64:	mov	r0, #0
   2ea68:	mov	r3, r6
   2ea6c:	ldr	r5, [r3, -r0, lsl #2]!
   2ea70:	mul	r7, r7, r5
   2ea74:	ldr	r3, [r3, #4]
   2ea78:	mul	r4, r3, r4
   2ea7c:	add	r0, r0, #1
   2ea80:	cmp	r1, r0
   2ea84:	bne	2ea68 <GetDataSlab+0xc62c>
   2ea88:	add	r5, sp, #64	; 0x40
   2ea8c:	str	r4, [r5, r1, lsl #2]
   2ea90:	str	r7, [r2, r1, lsl #2]
   2ea94:	ldr	r0, [r5, r8, lsl #2]
   2ea98:	ldr	r3, [r9, r1, lsl #2]
   2ea9c:	mla	sl, r3, r0, sl
   2eaa0:	ldr	r4, [fp, #20]
   2eaa4:	ldr	r0, [r4, r1, lsl #2]
   2eaa8:	ldr	r3, [sp, #52]	; 0x34
   2eaac:	mul	r3, r0, r3
   2eab0:	str	r3, [sp, #52]	; 0x34
   2eab4:	add	r6, r6, #4
   2eab8:	add	r1, r1, #1
   2eabc:	ldr	r0, [fp, #24]
   2eac0:	cmp	r1, r0
   2eac4:	bne	2ea48 <GetDataSlab+0xc60c>
   2eac8:	ldr	r0, [sp, #48]	; 0x30
   2eacc:	add	r5, r0, sl, lsl #1
   2ead0:	cmp	ip, #1
   2ead4:	bne	37f00 <GetDataSlab+0x15ac4>
   2ead8:	ldr	r0, [sp, #52]	; 0x34
   2eadc:	cmp	r0, #1
   2eae0:	blt	3ae3c <GetDataSlab+0x18a00>
   2eae4:	add	lr, r4, #4
   2eae8:	add	r0, sp, #104	; 0x68
   2eaec:	orr	r6, r0, #4
   2eaf0:	orr	r0, r2, #4
   2eaf4:	str	r0, [sp, #32]
   2eaf8:	ldr	r1, [sp, #44]	; 0x2c
   2eafc:	lsl	r0, r1, #3
   2eb00:	str	r0, [sp, #48]	; 0x30
   2eb04:	ldr	r0, [r9], #4
   2eb08:	str	r0, [sp, #36]	; 0x24
   2eb0c:	str	r9, [sp, #56]	; 0x38
   2eb10:	mov	ip, #0
   2eb14:	cmp	r1, #1
   2eb18:	blt	2eb48 <GetDataSlab+0xc70c>
   2eb1c:	ldr	r0, [sp, #36]	; 0x24
   2eb20:	add	r0, r5, r0, lsl #1
   2eb24:	mov	r9, r1
   2eb28:	ldr	r8, [sp, #60]	; 0x3c
   2eb2c:	ldrsh	r4, [r0], #2
   2eb30:	asr	r3, r4, #31
   2eb34:	str	r4, [r8]
   2eb38:	str	r3, [r8, #4]
   2eb3c:	subs	r9, r9, #1
   2eb40:	add	r8, r8, #8
   2eb44:	bne	2eb2c <GetDataSlab+0xc6f0>
   2eb48:	ldr	r0, [sp, #40]	; 0x28
   2eb4c:	add	r5, r5, r0, lsl #1
   2eb50:	add	sl, sl, r0
   2eb54:	ldr	r0, [fp, #24]
   2eb58:	cmp	r0, #2
   2eb5c:	blt	2ec10 <GetDataSlab+0xc7d4>
   2eb60:	mov	r4, #0
   2eb64:	ldr	r2, [sp, #56]	; 0x38
   2eb68:	mov	r8, #0
   2eb6c:	mov	r0, r4
   2eb70:	ldr	r3, [r6, r4, lsl #2]
   2eb74:	add	r3, r3, #1
   2eb78:	str	r3, [r6, r4, lsl #2]
   2eb7c:	ldr	r4, [lr, r4, lsl #2]
   2eb80:	sdiv	r1, r3, r4
   2eb84:	mls	r1, r1, r4, r3
   2eb88:	cmp	r1, #0
   2eb8c:	bne	2ec00 <GetDataSlab+0xc7c4>
   2eb90:	str	r8, [r6, r0, lsl #2]
   2eb94:	add	r7, sp, #64	; 0x40
   2eb98:	add	r1, r7, r0, lsl #2
   2eb9c:	ldr	r4, [r1, #4]
   2eba0:	sdiv	r1, sl, r4
   2eba4:	mls	r3, r1, r4, sl
   2eba8:	cmp	r3, #0
   2ebac:	beq	2ebc8 <GetDataSlab+0xc78c>
   2ebb0:	ldr	r1, [r7, r0, lsl #2]
   2ebb4:	ldr	r7, [r2, r0, lsl #2]
   2ebb8:	sub	r3, r4, r3
   2ebbc:	mla	r1, r7, r1, r3
   2ebc0:	add	sl, r1, sl
   2ebc4:	b	2ebe4 <GetDataSlab+0xc7a8>
   2ebc8:	ldr	r3, [r2, r0, lsl #2]
   2ebcc:	cmp	r3, #0
   2ebd0:	beq	2ebe8 <GetDataSlab+0xc7ac>
   2ebd4:	add	r1, sp, #64	; 0x40
   2ebd8:	ldr	r1, [r1, r0, lsl #2]
   2ebdc:	mla	sl, r1, r3, sl
   2ebe0:	mul	r1, r1, r3
   2ebe4:	add	r5, r5, r1, lsl #1
   2ebe8:	add	r4, r0, #1
   2ebec:	add	r0, r0, #2
   2ebf0:	ldr	r1, [fp, #24]
   2ebf4:	cmp	r0, r1
   2ebf8:	blt	2eb6c <GetDataSlab+0xc730>
   2ebfc:	b	2ec10 <GetDataSlab+0xc7d4>
   2ec00:	ldr	r1, [sp, #32]
   2ec04:	ldr	r0, [r1, r0, lsl #2]
   2ec08:	add	r5, r5, r0, lsl #1
   2ec0c:	add	sl, r0, sl
   2ec10:	ldr	r0, [sp, #60]	; 0x3c
   2ec14:	ldr	r1, [sp, #48]	; 0x30
   2ec18:	add	r0, r0, r1
   2ec1c:	str	r0, [sp, #60]	; 0x3c
   2ec20:	ldr	r1, [sp, #44]	; 0x2c
   2ec24:	add	ip, ip, r1
   2ec28:	mov	r0, #0
   2ec2c:	ldr	r2, [sp, #52]	; 0x34
   2ec30:	cmp	ip, r2
   2ec34:	blt	2eb14 <GetDataSlab+0xc6d8>
   2ec38:	b	22560 <GetDataSlab+0x124>
   2ec3c:	ldr	r0, [lr]
   2ec40:	str	r0, [sp, #24]
   2ec44:	sub	r0, r0, #1
   2ec48:	str	r0, [fp, #-72]	; 0xffffffb8
   2ec4c:	ldr	r0, [r8]
   2ec50:	str	r0, [sp, #44]	; 0x2c
   2ec54:	str	r0, [sp, #64]	; 0x40
   2ec58:	ldr	r1, [r4]
   2ec5c:	mov	r2, #0
   2ec60:	ldr	r0, [fp, #24]
   2ec64:	cmp	r0, #2
   2ec68:	str	r1, [sp, #52]	; 0x34
   2ec6c:	str	r1, [sp, #56]	; 0x38
   2ec70:	sub	ip, fp, #72	; 0x48
   2ec74:	blt	2ed08 <GetDataSlab+0xc8cc>
   2ec78:	mov	r1, #1
   2ec7c:	mov	r2, #0
   2ec80:	mov	r6, r8
   2ec84:	ldr	r0, [sp, #52]	; 0x34
   2ec88:	str	r0, [sp, #56]	; 0x38
   2ec8c:	ldr	r0, [lr, r1, lsl #2]
   2ec90:	sub	r7, r0, #1
   2ec94:	str	r7, [ip, r1, lsl #2]
   2ec98:	sub	lr, r1, #1
   2ec9c:	ldr	r0, [r8, lr, lsl #2]
   2eca0:	str	r0, [sl, r1, lsl #2]
   2eca4:	mov	r4, #0
   2eca8:	mov	r3, r6
   2ecac:	ldr	r5, [r3, -r4, lsl #2]!
   2ecb0:	mul	r7, r7, r5
   2ecb4:	ldr	r3, [r3, #4]
   2ecb8:	mul	r0, r3, r0
   2ecbc:	add	r4, r4, #1
   2ecc0:	cmp	r1, r4
   2ecc4:	bne	2eca8 <GetDataSlab+0xc86c>
   2ecc8:	str	r0, [sl, r1, lsl #2]
   2eccc:	str	r7, [ip, r1, lsl #2]
   2ecd0:	ldr	r0, [sl, lr, lsl #2]
   2ecd4:	ldr	r3, [r9, r1, lsl #2]
   2ecd8:	mla	r2, r3, r0, r2
   2ecdc:	ldr	r4, [fp, #20]
   2ece0:	ldr	r0, [r4, r1, lsl #2]
   2ece4:	ldr	r3, [sp, #56]	; 0x38
   2ece8:	mul	r3, r0, r3
   2ecec:	str	r3, [sp, #56]	; 0x38
   2ecf0:	add	r6, r6, #4
   2ecf4:	add	r1, r1, #1
   2ecf8:	ldr	r0, [fp, #24]
   2ecfc:	cmp	r1, r0
   2ed00:	ldr	lr, [fp, #16]
   2ed04:	bne	2ec8c <GetDataSlab+0xc850>
   2ed08:	ldr	r0, [sp, #48]	; 0x30
   2ed0c:	add	ip, r0, r2, lsl #1
   2ed10:	ldr	r5, [sp, #24]
   2ed14:	cmp	r5, #1
   2ed18:	bne	38090 <GetDataSlab+0x15c54>
   2ed1c:	ldr	r0, [sp, #56]	; 0x38
   2ed20:	cmp	r0, #1
   2ed24:	ldr	r1, [sp, #52]	; 0x34
   2ed28:	blt	3ae3c <GetDataSlab+0x18a00>
   2ed2c:	add	sl, r4, #4
   2ed30:	add	r0, sp, #104	; 0x68
   2ed34:	orr	r7, r0, #4
   2ed38:	sub	r0, fp, #72	; 0x48
   2ed3c:	orr	r0, r0, #4
   2ed40:	str	r0, [sp, #36]	; 0x24
   2ed44:	lsl	r0, r1, #3
   2ed48:	str	r0, [sp, #48]	; 0x30
   2ed4c:	ldr	r0, [r9], #4
   2ed50:	str	r0, [sp, #40]	; 0x28
   2ed54:	mov	r5, r9
   2ed58:	mov	r9, #0
   2ed5c:	mov	r8, #0
   2ed60:	cmp	r1, #1
   2ed64:	blt	2ed8c <GetDataSlab+0xc950>
   2ed68:	ldr	r0, [sp, #40]	; 0x28
   2ed6c:	add	r0, ip, r0, lsl #1
   2ed70:	ldr	lr, [sp, #52]	; 0x34
   2ed74:	ldr	r4, [sp, #60]	; 0x3c
   2ed78:	ldrh	r3, [r0], #2
   2ed7c:	stm	r4, {r3, r9}
   2ed80:	subs	lr, lr, #1
   2ed84:	add	r4, r4, #8
   2ed88:	bne	2ed78 <GetDataSlab+0xc93c>
   2ed8c:	ldr	r0, [sp, #44]	; 0x2c
   2ed90:	add	ip, ip, r0, lsl #1
   2ed94:	add	r2, r2, r0
   2ed98:	ldr	r0, [fp, #24]
   2ed9c:	cmp	r0, #2
   2eda0:	blt	2ee4c <GetDataSlab+0xca10>
   2eda4:	mov	r4, #0
   2eda8:	mov	r0, r4
   2edac:	ldr	r3, [r7, r4, lsl #2]
   2edb0:	add	r3, r3, #1
   2edb4:	str	r3, [r7, r4, lsl #2]
   2edb8:	ldr	r4, [sl, r4, lsl #2]
   2edbc:	sdiv	r6, r3, r4
   2edc0:	mls	r3, r6, r4, r3
   2edc4:	cmp	r3, #0
   2edc8:	bne	2ee3c <GetDataSlab+0xca00>
   2edcc:	str	r9, [r7, r0, lsl #2]
   2edd0:	add	r1, sp, #64	; 0x40
   2edd4:	add	r3, r1, r0, lsl #2
   2edd8:	ldr	r4, [r3, #4]
   2eddc:	sdiv	r3, r2, r4
   2ede0:	mls	r3, r3, r4, r2
   2ede4:	cmp	r3, #0
   2ede8:	beq	2ee04 <GetDataSlab+0xc9c8>
   2edec:	ldr	r6, [r1, r0, lsl #2]
   2edf0:	ldr	r1, [r5, r0, lsl #2]
   2edf4:	sub	r3, r4, r3
   2edf8:	mla	r1, r1, r6, r3
   2edfc:	add	r2, r1, r2
   2ee00:	b	2ee20 <GetDataSlab+0xc9e4>
   2ee04:	ldr	r3, [r5, r0, lsl #2]
   2ee08:	cmp	r3, #0
   2ee0c:	beq	2ee24 <GetDataSlab+0xc9e8>
   2ee10:	add	r1, sp, #64	; 0x40
   2ee14:	ldr	r1, [r1, r0, lsl #2]
   2ee18:	mla	r2, r1, r3, r2
   2ee1c:	mul	r1, r1, r3
   2ee20:	add	ip, ip, r1, lsl #1
   2ee24:	add	r4, r0, #1
   2ee28:	add	r0, r0, #2
   2ee2c:	ldr	r1, [fp, #24]
   2ee30:	cmp	r0, r1
   2ee34:	blt	2eda8 <GetDataSlab+0xc96c>
   2ee38:	b	2ee4c <GetDataSlab+0xca10>
   2ee3c:	ldr	r1, [sp, #36]	; 0x24
   2ee40:	ldr	r0, [r1, r0, lsl #2]
   2ee44:	add	ip, ip, r0, lsl #1
   2ee48:	add	r2, r0, r2
   2ee4c:	ldr	r0, [sp, #60]	; 0x3c
   2ee50:	ldr	r1, [sp, #48]	; 0x30
   2ee54:	add	r0, r0, r1
   2ee58:	str	r0, [sp, #60]	; 0x3c
   2ee5c:	ldr	r1, [sp, #52]	; 0x34
   2ee60:	add	r8, r8, r1
   2ee64:	mov	r0, #0
   2ee68:	ldr	r3, [sp, #56]	; 0x38
   2ee6c:	cmp	r8, r3
   2ee70:	blt	2ed60 <GetDataSlab+0xc924>
   2ee74:	b	22560 <GetDataSlab+0x124>
   2ee78:	ldr	ip, [lr]
   2ee7c:	sub	r0, ip, #1
   2ee80:	str	r0, [fp, #-72]	; 0xffffffb8
   2ee84:	ldr	r0, [r8]
   2ee88:	str	r0, [sp, #52]	; 0x34
   2ee8c:	str	r0, [sp, #64]	; 0x40
   2ee90:	ldr	r1, [r4]
   2ee94:	mov	r3, #0
   2ee98:	ldr	r0, [fp, #24]
   2ee9c:	cmp	r0, #2
   2eea0:	str	r1, [sp, #40]	; 0x28
   2eea4:	str	r1, [sp, #44]	; 0x2c
   2eea8:	sub	r5, fp, #72	; 0x48
   2eeac:	blt	2ef44 <GetDataSlab+0xcb08>
   2eeb0:	mov	r1, #1
   2eeb4:	mov	r3, #0
   2eeb8:	mov	r2, r8
   2eebc:	ldr	r0, [sp, #40]	; 0x28
   2eec0:	str	r0, [sp, #44]	; 0x2c
   2eec4:	ldr	r0, [lr, r1, lsl #2]
   2eec8:	sub	r7, r0, #1
   2eecc:	str	r7, [r5, r1, lsl #2]
   2eed0:	sub	r9, r1, #1
   2eed4:	ldr	r4, [r8, r9, lsl #2]
   2eed8:	str	r4, [sl, r1, lsl #2]
   2eedc:	mov	r0, #0
   2eee0:	mov	r6, r2
   2eee4:	ldr	r5, [r6, -r0, lsl #2]!
   2eee8:	mul	r7, r7, r5
   2eeec:	ldr	r5, [r6, #4]
   2eef0:	mul	r4, r5, r4
   2eef4:	add	r0, r0, #1
   2eef8:	cmp	r1, r0
   2eefc:	bne	2eee0 <GetDataSlab+0xcaa4>
   2ef00:	str	r4, [sl, r1, lsl #2]
   2ef04:	sub	r5, fp, #72	; 0x48
   2ef08:	str	r7, [r5, r1, lsl #2]
   2ef0c:	ldr	r0, [sl, r9, lsl #2]
   2ef10:	ldr	r9, [fp, #12]
   2ef14:	ldr	r4, [r9, r1, lsl #2]
   2ef18:	mla	r3, r4, r0, r3
   2ef1c:	ldr	r4, [fp, #20]
   2ef20:	ldr	r0, [r4, r1, lsl #2]
   2ef24:	ldr	r6, [sp, #44]	; 0x2c
   2ef28:	mul	r6, r0, r6
   2ef2c:	str	r6, [sp, #44]	; 0x2c
   2ef30:	add	r2, r2, #4
   2ef34:	add	r1, r1, #1
   2ef38:	ldr	r0, [fp, #24]
   2ef3c:	cmp	r1, r0
   2ef40:	bne	2eec4 <GetDataSlab+0xca88>
   2ef44:	ldr	r0, [sp, #48]	; 0x30
   2ef48:	add	lr, r0, r3, lsl #2
   2ef4c:	cmp	ip, #1
   2ef50:	bne	38224 <GetDataSlab+0x15de8>
   2ef54:	ldr	r0, [sp, #44]	; 0x2c
   2ef58:	cmp	r0, #1
   2ef5c:	ldr	sl, [sp, #40]	; 0x28
   2ef60:	blt	3ae3c <GetDataSlab+0x18a00>
   2ef64:	add	r8, r9, #4
   2ef68:	add	r9, r4, #4
   2ef6c:	add	r0, sp, #104	; 0x68
   2ef70:	orr	r6, r0, #4
   2ef74:	sub	r0, fp, #72	; 0x48
   2ef78:	orr	r0, r0, #4
   2ef7c:	str	r0, [sp, #36]	; 0x24
   2ef80:	lsl	r0, sl, #3
   2ef84:	str	r0, [sp, #48]	; 0x30
   2ef88:	mov	ip, #0
   2ef8c:	cmp	sl, #1
   2ef90:	blt	2efc0 <GetDataSlab+0xcb84>
   2ef94:	ldr	r0, [fp, #12]
   2ef98:	ldr	r0, [r0]
   2ef9c:	add	r0, lr, r0, lsl #2
   2efa0:	ldr	sl, [sp, #40]	; 0x28
   2efa4:	ldr	r2, [sp, #60]	; 0x3c
   2efa8:	ldr	r4, [r0], #4
   2efac:	asr	r5, r4, #31
   2efb0:	strd	r4, [r2]
   2efb4:	subs	sl, sl, #1
   2efb8:	add	r2, r2, #8
   2efbc:	bne	2efa8 <GetDataSlab+0xcb6c>
   2efc0:	ldr	r0, [sp, #52]	; 0x34
   2efc4:	add	lr, lr, r0, lsl #2
   2efc8:	add	r3, r3, r0
   2efcc:	ldr	r0, [fp, #24]
   2efd0:	cmp	r0, #2
   2efd4:	add	r7, sp, #64	; 0x40
   2efd8:	blt	2f074 <GetDataSlab+0xcc38>
   2efdc:	mov	r2, #0
   2efe0:	ldr	sl, [sp, #40]	; 0x28
   2efe4:	mov	r0, r2
   2efe8:	ldr	r2, [r6, r2, lsl #2]
   2efec:	add	r2, r2, #1
   2eff0:	str	r2, [r6, r0, lsl #2]
   2eff4:	ldr	r4, [r9, r0, lsl #2]
   2eff8:	sdiv	r5, r2, r4
   2effc:	mls	r2, r5, r4, r2
   2f000:	cmp	r2, #0
   2f004:	bne	2f07c <GetDataSlab+0xcc40>
   2f008:	mov	r1, #0
   2f00c:	str	r1, [r6, r0, lsl #2]
   2f010:	add	r2, r7, r0, lsl #2
   2f014:	ldr	r2, [r2, #4]
   2f018:	sdiv	r4, r3, r2
   2f01c:	mls	r4, r4, r2, r3
   2f020:	cmp	r4, #0
   2f024:	beq	2f040 <GetDataSlab+0xcc04>
   2f028:	ldr	r5, [r7, r0, lsl #2]
   2f02c:	ldr	r1, [r8, r0, lsl #2]
   2f030:	sub	r2, r2, r4
   2f034:	mla	r1, r1, r5, r2
   2f038:	add	r3, r1, r3
   2f03c:	b	2f058 <GetDataSlab+0xcc1c>
   2f040:	ldr	r2, [r8, r0, lsl #2]
   2f044:	cmp	r2, #0
   2f048:	beq	2f05c <GetDataSlab+0xcc20>
   2f04c:	ldr	r1, [r7, r0, lsl #2]
   2f050:	mla	r3, r1, r2, r3
   2f054:	mul	r1, r1, r2
   2f058:	add	lr, lr, r1, lsl #2
   2f05c:	add	r2, r0, #1
   2f060:	add	r0, r0, #2
   2f064:	ldr	r1, [fp, #24]
   2f068:	cmp	r0, r1
   2f06c:	blt	2efe4 <GetDataSlab+0xcba8>
   2f070:	b	2f08c <GetDataSlab+0xcc50>
   2f074:	ldr	sl, [sp, #40]	; 0x28
   2f078:	b	2f08c <GetDataSlab+0xcc50>
   2f07c:	ldr	r1, [sp, #36]	; 0x24
   2f080:	ldr	r0, [r1, r0, lsl #2]
   2f084:	add	lr, lr, r0, lsl #2
   2f088:	add	r3, r0, r3
   2f08c:	ldr	r0, [sp, #60]	; 0x3c
   2f090:	ldr	r1, [sp, #48]	; 0x30
   2f094:	add	r0, r0, r1
   2f098:	str	r0, [sp, #60]	; 0x3c
   2f09c:	add	ip, ip, sl
   2f0a0:	mov	r0, #0
   2f0a4:	ldr	r1, [sp, #44]	; 0x2c
   2f0a8:	cmp	ip, r1
   2f0ac:	blt	2ef8c <GetDataSlab+0xcb50>
   2f0b0:	b	22560 <GetDataSlab+0x124>
   2f0b4:	ldr	ip, [lr]
   2f0b8:	sub	r0, ip, #1
   2f0bc:	str	r0, [fp, #-72]	; 0xffffffb8
   2f0c0:	ldr	r0, [r8]
   2f0c4:	str	r0, [sp, #40]	; 0x28
   2f0c8:	str	r0, [sp, #64]	; 0x40
   2f0cc:	ldr	r1, [r4]
   2f0d0:	mov	r3, #0
   2f0d4:	ldr	r0, [fp, #24]
   2f0d8:	cmp	r0, #2
   2f0dc:	str	r1, [sp, #44]	; 0x2c
   2f0e0:	str	r1, [sp, #52]	; 0x34
   2f0e4:	sub	r5, fp, #72	; 0x48
   2f0e8:	blt	2f180 <GetDataSlab+0xcd44>
   2f0ec:	mov	r1, #1
   2f0f0:	mov	r3, #0
   2f0f4:	mov	r6, r8
   2f0f8:	ldr	r0, [sp, #44]	; 0x2c
   2f0fc:	str	r0, [sp, #52]	; 0x34
   2f100:	ldr	r0, [lr, r1, lsl #2]
   2f104:	sub	r7, r0, #1
   2f108:	str	r7, [r5, r1, lsl #2]
   2f10c:	sub	lr, r1, #1
   2f110:	ldr	r4, [r8, lr, lsl #2]
   2f114:	str	r4, [sl, r1, lsl #2]
   2f118:	mov	r0, #0
   2f11c:	mov	r2, r6
   2f120:	ldr	r5, [r2, -r0, lsl #2]!
   2f124:	mul	r7, r7, r5
   2f128:	ldr	r2, [r2, #4]
   2f12c:	mul	r4, r2, r4
   2f130:	add	r0, r0, #1
   2f134:	cmp	r1, r0
   2f138:	bne	2f11c <GetDataSlab+0xcce0>
   2f13c:	str	r4, [sl, r1, lsl #2]
   2f140:	sub	r5, fp, #72	; 0x48
   2f144:	str	r7, [r5, r1, lsl #2]
   2f148:	ldr	r0, [sl, lr, lsl #2]
   2f14c:	ldr	r2, [r9, r1, lsl #2]
   2f150:	mla	r3, r2, r0, r3
   2f154:	ldr	r4, [fp, #20]
   2f158:	ldr	r0, [r4, r1, lsl #2]
   2f15c:	ldr	r2, [sp, #52]	; 0x34
   2f160:	mul	r2, r0, r2
   2f164:	str	r2, [sp, #52]	; 0x34
   2f168:	add	r6, r6, #4
   2f16c:	add	r1, r1, #1
   2f170:	ldr	r0, [fp, #24]
   2f174:	cmp	r1, r0
   2f178:	ldr	lr, [fp, #16]
   2f17c:	bne	2f100 <GetDataSlab+0xccc4>
   2f180:	ldr	r0, [sp, #48]	; 0x30
   2f184:	add	lr, r0, r3, lsl #2
   2f188:	cmp	ip, #1
   2f18c:	bne	383d0 <GetDataSlab+0x15f94>
   2f190:	ldr	r0, [sp, #52]	; 0x34
   2f194:	cmp	r0, #1
   2f198:	ldr	sl, [sp, #44]	; 0x2c
   2f19c:	blt	3ae3c <GetDataSlab+0x18a00>
   2f1a0:	add	r8, r9, #4
   2f1a4:	add	ip, r4, #4
   2f1a8:	add	r0, sp, #104	; 0x68
   2f1ac:	orr	r6, r0, #4
   2f1b0:	sub	r0, fp, #72	; 0x48
   2f1b4:	orr	r0, r0, #4
   2f1b8:	str	r0, [sp, #32]
   2f1bc:	lsl	r0, sl, #3
   2f1c0:	str	r0, [sp, #36]	; 0x24
   2f1c4:	mov	r9, #0
   2f1c8:	mov	r0, #0
   2f1cc:	str	r0, [sp, #48]	; 0x30
   2f1d0:	cmp	sl, #1
   2f1d4:	blt	2f1fc <GetDataSlab+0xcdc0>
   2f1d8:	ldr	r0, [fp, #12]
   2f1dc:	ldr	r0, [r0]
   2f1e0:	add	r0, lr, r0, lsl #2
   2f1e4:	ldr	r2, [sp, #60]	; 0x3c
   2f1e8:	ldr	r4, [r0], #4
   2f1ec:	stm	r2, {r4, r9}
   2f1f0:	subs	sl, sl, #1
   2f1f4:	add	r2, r2, #8
   2f1f8:	bne	2f1e8 <GetDataSlab+0xcdac>
   2f1fc:	ldr	r0, [sp, #40]	; 0x28
   2f200:	add	lr, lr, r0, lsl #2
   2f204:	add	r3, r3, r0
   2f208:	ldr	r0, [fp, #24]
   2f20c:	cmp	r0, #2
   2f210:	add	r5, sp, #64	; 0x40
   2f214:	blt	2f2b8 <GetDataSlab+0xce7c>
   2f218:	mov	r2, #0
   2f21c:	mov	r0, r2
   2f220:	ldr	r2, [r6, r2, lsl #2]
   2f224:	add	r2, r2, #1
   2f228:	str	r2, [r6, r0, lsl #2]
   2f22c:	ldr	r4, [ip, r0, lsl #2]
   2f230:	sdiv	r1, r2, r4
   2f234:	mls	r1, r1, r4, r2
   2f238:	cmp	r1, #0
   2f23c:	bne	2f2a8 <GetDataSlab+0xce6c>
   2f240:	str	r9, [r6, r0, lsl #2]
   2f244:	add	r1, r5, r0, lsl #2
   2f248:	ldr	r2, [r1, #4]
   2f24c:	sdiv	r1, r3, r2
   2f250:	mls	r4, r1, r2, r3
   2f254:	cmp	r4, #0
   2f258:	beq	2f274 <GetDataSlab+0xce38>
   2f25c:	ldr	r1, [r5, r0, lsl #2]
   2f260:	ldr	r7, [r8, r0, lsl #2]
   2f264:	sub	r2, r2, r4
   2f268:	mla	r1, r7, r1, r2
   2f26c:	add	r3, r1, r3
   2f270:	b	2f28c <GetDataSlab+0xce50>
   2f274:	ldr	r2, [r8, r0, lsl #2]
   2f278:	cmp	r2, #0
   2f27c:	beq	2f290 <GetDataSlab+0xce54>
   2f280:	ldr	r1, [r5, r0, lsl #2]
   2f284:	mla	r3, r1, r2, r3
   2f288:	mul	r1, r1, r2
   2f28c:	add	lr, lr, r1, lsl #2
   2f290:	add	r2, r0, #1
   2f294:	add	r0, r0, #2
   2f298:	ldr	r1, [fp, #24]
   2f29c:	cmp	r0, r1
   2f2a0:	blt	2f21c <GetDataSlab+0xcde0>
   2f2a4:	b	2f2b8 <GetDataSlab+0xce7c>
   2f2a8:	ldr	r1, [sp, #32]
   2f2ac:	ldr	r0, [r1, r0, lsl #2]
   2f2b0:	add	lr, lr, r0, lsl #2
   2f2b4:	add	r3, r0, r3
   2f2b8:	ldr	r0, [sp, #60]	; 0x3c
   2f2bc:	ldr	r1, [sp, #36]	; 0x24
   2f2c0:	add	r0, r0, r1
   2f2c4:	str	r0, [sp, #60]	; 0x3c
   2f2c8:	ldr	sl, [sp, #44]	; 0x2c
   2f2cc:	ldr	r2, [sp, #48]	; 0x30
   2f2d0:	add	r2, r2, sl
   2f2d4:	mov	r0, #0
   2f2d8:	ldr	r1, [sp, #52]	; 0x34
   2f2dc:	str	r2, [sp, #48]	; 0x30
   2f2e0:	cmp	r2, r1
   2f2e4:	blt	2f1d0 <GetDataSlab+0xcd94>
   2f2e8:	b	22560 <GetDataSlab+0x124>
   2f2ec:	ldr	ip, [lr]
   2f2f0:	sub	r1, ip, #1
   2f2f4:	str	r1, [fp, #-72]	; 0xffffffb8
   2f2f8:	ldr	r0, [r8]
   2f2fc:	str	r0, [sp, #36]	; 0x24
   2f300:	str	r0, [sp, #64]	; 0x40
   2f304:	ldr	r1, [r4]
   2f308:	mov	r4, #0
   2f30c:	ldr	r0, [fp, #24]
   2f310:	cmp	r0, #2
   2f314:	str	r1, [sp, #40]	; 0x28
   2f318:	str	r1, [sp, #44]	; 0x2c
   2f31c:	sub	r5, fp, #72	; 0x48
   2f320:	blt	2f3b8 <GetDataSlab+0xcf7c>
   2f324:	mov	r1, #1
   2f328:	mov	r4, #0
   2f32c:	mov	r0, r8
   2f330:	ldr	r2, [sp, #40]	; 0x28
   2f334:	str	r2, [sp, #44]	; 0x2c
   2f338:	ldr	r3, [lr, r1, lsl #2]
   2f33c:	sub	r3, r3, #1
   2f340:	str	r3, [r5, r1, lsl #2]
   2f344:	sub	lr, r1, #1
   2f348:	ldr	r6, [r8, lr, lsl #2]
   2f34c:	str	r6, [sl, r1, lsl #2]
   2f350:	mov	r5, #0
   2f354:	mov	r2, r0
   2f358:	ldr	r7, [r2, -r5, lsl #2]!
   2f35c:	mul	r3, r3, r7
   2f360:	ldr	r2, [r2, #4]
   2f364:	mul	r6, r2, r6
   2f368:	add	r5, r5, #1
   2f36c:	cmp	r1, r5
   2f370:	bne	2f354 <GetDataSlab+0xcf18>
   2f374:	str	r6, [sl, r1, lsl #2]
   2f378:	sub	r5, fp, #72	; 0x48
   2f37c:	str	r3, [r5, r1, lsl #2]
   2f380:	ldr	r2, [sl, lr, lsl #2]
   2f384:	ldr	r3, [r9, r1, lsl #2]
   2f388:	mla	r4, r3, r2, r4
   2f38c:	ldr	r2, [fp, #20]
   2f390:	ldr	r2, [r2, r1, lsl #2]
   2f394:	ldr	r3, [sp, #44]	; 0x2c
   2f398:	mul	r3, r2, r3
   2f39c:	str	r3, [sp, #44]	; 0x2c
   2f3a0:	add	r0, r0, #4
   2f3a4:	add	r1, r1, #1
   2f3a8:	ldr	r2, [fp, #24]
   2f3ac:	cmp	r1, r2
   2f3b0:	ldr	lr, [fp, #16]
   2f3b4:	bne	2f338 <GetDataSlab+0xcefc>
   2f3b8:	ldr	r0, [sp, #48]	; 0x30
   2f3bc:	add	r5, r0, r4, lsl #2
   2f3c0:	cmp	ip, #1
   2f3c4:	bne	38570 <GetDataSlab+0x16134>
   2f3c8:	ldr	r0, [sp, #44]	; 0x2c
   2f3cc:	cmp	r0, #1
   2f3d0:	ldr	sl, [sp, #40]	; 0x28
   2f3d4:	blt	3ae3c <GetDataSlab+0x18a00>
   2f3d8:	ldr	r0, [fp, #20]
   2f3dc:	add	r0, r0, #4
   2f3e0:	str	r0, [sp, #28]
   2f3e4:	add	r0, sp, #104	; 0x68
   2f3e8:	orr	r7, r0, #4
   2f3ec:	sub	r0, fp, #72	; 0x48
   2f3f0:	orr	r0, r0, #4
   2f3f4:	str	r0, [sp, #24]
   2f3f8:	lsl	r0, sl, #3
   2f3fc:	str	r0, [sp, #48]	; 0x30
   2f400:	ldr	r0, [r9], #4
   2f404:	str	r0, [sp, #32]
   2f408:	str	r9, [sp, #56]	; 0x38
   2f40c:	mov	r0, #0
   2f410:	str	r0, [sp, #52]	; 0x34
   2f414:	cmp	sl, #1
   2f418:	blt	2f444 <GetDataSlab+0xd008>
   2f41c:	ldr	r0, [sp, #32]
   2f420:	add	r8, r5, r0, lsl #2
   2f424:	ldr	r9, [sp, #40]	; 0x28
   2f428:	ldr	sl, [sp, #60]	; 0x3c
   2f42c:	ldr	r0, [r8], #4
   2f430:	bl	48e68 <__aeabi_f2ulz>
   2f434:	strd	r0, [sl]
   2f438:	subs	r9, r9, #1
   2f43c:	add	sl, sl, #8
   2f440:	bne	2f42c <GetDataSlab+0xcff0>
   2f444:	ldr	r0, [sp, #36]	; 0x24
   2f448:	add	r5, r5, r0, lsl #2
   2f44c:	add	r4, r4, r0
   2f450:	ldr	r0, [fp, #24]
   2f454:	cmp	r0, #2
   2f458:	add	r8, sp, #64	; 0x40
   2f45c:	blt	2f504 <GetDataSlab+0xd0c8>
   2f460:	mov	r1, #0
   2f464:	ldr	ip, [sp, #60]	; 0x3c
   2f468:	ldr	lr, [sp, #56]	; 0x38
   2f46c:	ldr	sl, [sp, #40]	; 0x28
   2f470:	ldr	r9, [sp, #28]
   2f474:	mov	r0, r1
   2f478:	ldr	r1, [r7, r1, lsl #2]
   2f47c:	add	r1, r1, #1
   2f480:	str	r1, [r7, r0, lsl #2]
   2f484:	ldr	r2, [r9, r0, lsl #2]
   2f488:	sdiv	r3, r1, r2
   2f48c:	mls	r1, r3, r2, r1
   2f490:	cmp	r1, #0
   2f494:	bne	2f510 <GetDataSlab+0xd0d4>
   2f498:	mov	r1, #0
   2f49c:	str	r1, [r7, r0, lsl #2]
   2f4a0:	add	r1, r8, r0, lsl #2
   2f4a4:	ldr	r1, [r1, #4]
   2f4a8:	sdiv	r2, r4, r1
   2f4ac:	mls	r2, r2, r1, r4
   2f4b0:	cmp	r2, #0
   2f4b4:	beq	2f4d0 <GetDataSlab+0xd094>
   2f4b8:	ldr	r3, [r8, r0, lsl #2]
   2f4bc:	ldr	r6, [lr, r0, lsl #2]
   2f4c0:	sub	r1, r1, r2
   2f4c4:	mla	r1, r6, r3, r1
   2f4c8:	add	r4, r1, r4
   2f4cc:	b	2f4e8 <GetDataSlab+0xd0ac>
   2f4d0:	ldr	r1, [lr, r0, lsl #2]
   2f4d4:	cmp	r1, #0
   2f4d8:	beq	2f4ec <GetDataSlab+0xd0b0>
   2f4dc:	ldr	r2, [r8, r0, lsl #2]
   2f4e0:	mla	r4, r2, r1, r4
   2f4e4:	mul	r1, r2, r1
   2f4e8:	add	r5, r5, r1, lsl #2
   2f4ec:	add	r1, r0, #1
   2f4f0:	add	r0, r0, #2
   2f4f4:	ldr	r2, [fp, #24]
   2f4f8:	cmp	r0, r2
   2f4fc:	blt	2f474 <GetDataSlab+0xd038>
   2f500:	b	2f520 <GetDataSlab+0xd0e4>
   2f504:	ldr	ip, [sp, #60]	; 0x3c
   2f508:	ldr	sl, [sp, #40]	; 0x28
   2f50c:	b	2f520 <GetDataSlab+0xd0e4>
   2f510:	ldr	r1, [sp, #24]
   2f514:	ldr	r0, [r1, r0, lsl #2]
   2f518:	add	r5, r5, r0, lsl #2
   2f51c:	add	r4, r0, r4
   2f520:	ldr	r0, [sp, #48]	; 0x30
   2f524:	add	ip, ip, r0
   2f528:	str	ip, [sp, #60]	; 0x3c
   2f52c:	ldr	r2, [sp, #52]	; 0x34
   2f530:	add	r2, r2, sl
   2f534:	mov	r0, #0
   2f538:	ldr	r1, [sp, #44]	; 0x2c
   2f53c:	str	r2, [sp, #52]	; 0x34
   2f540:	cmp	r2, r1
   2f544:	blt	2f414 <GetDataSlab+0xcfd8>
   2f548:	b	22560 <GetDataSlab+0x124>
   2f54c:	ldr	ip, [lr]
   2f550:	sub	r1, ip, #1
   2f554:	str	r1, [fp, #-72]	; 0xffffffb8
   2f558:	ldr	r0, [r8]
   2f55c:	str	r0, [sp, #36]	; 0x24
   2f560:	str	r0, [sp, #64]	; 0x40
   2f564:	ldr	r1, [r4]
   2f568:	mov	r4, #0
   2f56c:	ldr	r0, [fp, #24]
   2f570:	cmp	r0, #2
   2f574:	str	r1, [sp, #40]	; 0x28
   2f578:	str	r1, [sp, #44]	; 0x2c
   2f57c:	sub	r5, fp, #72	; 0x48
   2f580:	blt	2f618 <GetDataSlab+0xd1dc>
   2f584:	mov	r1, #1
   2f588:	mov	r4, #0
   2f58c:	mov	r0, r8
   2f590:	ldr	r2, [sp, #40]	; 0x28
   2f594:	str	r2, [sp, #44]	; 0x2c
   2f598:	ldr	r3, [lr, r1, lsl #2]
   2f59c:	sub	r3, r3, #1
   2f5a0:	str	r3, [r5, r1, lsl #2]
   2f5a4:	sub	lr, r1, #1
   2f5a8:	ldr	r6, [r8, lr, lsl #2]
   2f5ac:	str	r6, [sl, r1, lsl #2]
   2f5b0:	mov	r5, #0
   2f5b4:	mov	r2, r0
   2f5b8:	ldr	r7, [r2, -r5, lsl #2]!
   2f5bc:	mul	r3, r3, r7
   2f5c0:	ldr	r2, [r2, #4]
   2f5c4:	mul	r6, r2, r6
   2f5c8:	add	r5, r5, #1
   2f5cc:	cmp	r1, r5
   2f5d0:	bne	2f5b4 <GetDataSlab+0xd178>
   2f5d4:	str	r6, [sl, r1, lsl #2]
   2f5d8:	sub	r5, fp, #72	; 0x48
   2f5dc:	str	r3, [r5, r1, lsl #2]
   2f5e0:	ldr	r2, [sl, lr, lsl #2]
   2f5e4:	ldr	r3, [r9, r1, lsl #2]
   2f5e8:	mla	r4, r3, r2, r4
   2f5ec:	ldr	r2, [fp, #20]
   2f5f0:	ldr	r2, [r2, r1, lsl #2]
   2f5f4:	ldr	r3, [sp, #44]	; 0x2c
   2f5f8:	mul	r3, r2, r3
   2f5fc:	str	r3, [sp, #44]	; 0x2c
   2f600:	add	r0, r0, #4
   2f604:	add	r1, r1, #1
   2f608:	ldr	r2, [fp, #24]
   2f60c:	cmp	r1, r2
   2f610:	ldr	lr, [fp, #16]
   2f614:	bne	2f598 <GetDataSlab+0xd15c>
   2f618:	ldr	r0, [sp, #48]	; 0x30
   2f61c:	add	r5, r0, r4, lsl #3
   2f620:	cmp	ip, #1
   2f624:	bne	38710 <GetDataSlab+0x162d4>
   2f628:	ldr	r0, [sp, #44]	; 0x2c
   2f62c:	cmp	r0, #1
   2f630:	ldr	r1, [sp, #40]	; 0x28
   2f634:	blt	3ae3c <GetDataSlab+0x18a00>
   2f638:	ldr	r0, [fp, #20]
   2f63c:	add	r0, r0, #4
   2f640:	str	r0, [sp, #28]
   2f644:	add	r0, sp, #104	; 0x68
   2f648:	orr	r7, r0, #4
   2f64c:	sub	r0, fp, #72	; 0x48
   2f650:	orr	r0, r0, #4
   2f654:	str	r0, [sp, #24]
   2f658:	lsl	r0, r1, #3
   2f65c:	str	r0, [sp, #48]	; 0x30
   2f660:	ldr	r0, [r9], #4
   2f664:	str	r0, [sp, #32]
   2f668:	str	r9, [sp, #56]	; 0x38
   2f66c:	mov	r0, #0
   2f670:	str	r0, [sp, #52]	; 0x34
   2f674:	cmp	r1, #1
   2f678:	blt	2f6ac <GetDataSlab+0xd270>
   2f67c:	ldr	r0, [sp, #32]
   2f680:	add	r8, r5, r0, lsl #3
   2f684:	ldr	r9, [sp, #40]	; 0x28
   2f688:	ldr	sl, [sp, #60]	; 0x3c
   2f68c:	vldr	d16, [r8]
   2f690:	vmov	r0, r1, d16
   2f694:	bl	48ea8 <__aeabi_d2ulz>
   2f698:	strd	r0, [sl]
   2f69c:	subs	r9, r9, #1
   2f6a0:	add	sl, sl, #8
   2f6a4:	add	r8, r8, #8
   2f6a8:	bne	2f68c <GetDataSlab+0xd250>
   2f6ac:	ldr	r0, [sp, #36]	; 0x24
   2f6b0:	add	r5, r5, r0, lsl #3
   2f6b4:	add	r4, r4, r0
   2f6b8:	ldr	r0, [fp, #24]
   2f6bc:	cmp	r0, #2
   2f6c0:	add	r8, sp, #64	; 0x40
   2f6c4:	blt	2f768 <GetDataSlab+0xd32c>
   2f6c8:	mov	r1, #0
   2f6cc:	ldr	ip, [sp, #60]	; 0x3c
   2f6d0:	ldr	lr, [sp, #56]	; 0x38
   2f6d4:	ldr	r9, [sp, #28]
   2f6d8:	mov	sl, #0
   2f6dc:	mov	r0, r1
   2f6e0:	ldr	r1, [r7, r1, lsl #2]
   2f6e4:	add	r1, r1, #1
   2f6e8:	str	r1, [r7, r0, lsl #2]
   2f6ec:	ldr	r2, [r9, r0, lsl #2]
   2f6f0:	sdiv	r3, r1, r2
   2f6f4:	mls	r1, r3, r2, r1
   2f6f8:	cmp	r1, #0
   2f6fc:	bne	2f770 <GetDataSlab+0xd334>
   2f700:	str	sl, [r7, r0, lsl #2]
   2f704:	add	r1, r8, r0, lsl #2
   2f708:	ldr	r1, [r1, #4]
   2f70c:	sdiv	r2, r4, r1
   2f710:	mls	r2, r2, r1, r4
   2f714:	cmp	r2, #0
   2f718:	beq	2f734 <GetDataSlab+0xd2f8>
   2f71c:	ldr	r3, [r8, r0, lsl #2]
   2f720:	ldr	r6, [lr, r0, lsl #2]
   2f724:	sub	r1, r1, r2
   2f728:	mla	r1, r6, r3, r1
   2f72c:	add	r4, r1, r4
   2f730:	b	2f74c <GetDataSlab+0xd310>
   2f734:	ldr	r1, [lr, r0, lsl #2]
   2f738:	cmp	r1, #0
   2f73c:	beq	2f750 <GetDataSlab+0xd314>
   2f740:	ldr	r2, [r8, r0, lsl #2]
   2f744:	mla	r4, r2, r1, r4
   2f748:	mul	r1, r2, r1
   2f74c:	add	r5, r5, r1, lsl #3
   2f750:	add	r1, r0, #1
   2f754:	add	r0, r0, #2
   2f758:	ldr	r2, [fp, #24]
   2f75c:	cmp	r0, r2
   2f760:	blt	2f6dc <GetDataSlab+0xd2a0>
   2f764:	b	2f780 <GetDataSlab+0xd344>
   2f768:	ldr	ip, [sp, #60]	; 0x3c
   2f76c:	b	2f780 <GetDataSlab+0xd344>
   2f770:	ldr	r1, [sp, #24]
   2f774:	ldr	r0, [r1, r0, lsl #2]
   2f778:	add	r5, r5, r0, lsl #3
   2f77c:	add	r4, r0, r4
   2f780:	ldr	r0, [sp, #48]	; 0x30
   2f784:	add	ip, ip, r0
   2f788:	str	ip, [sp, #60]	; 0x3c
   2f78c:	ldr	r1, [sp, #40]	; 0x28
   2f790:	ldr	r3, [sp, #52]	; 0x34
   2f794:	add	r3, r3, r1
   2f798:	mov	r0, #0
   2f79c:	ldr	r2, [sp, #44]	; 0x2c
   2f7a0:	str	r3, [sp, #52]	; 0x34
   2f7a4:	cmp	r3, r2
   2f7a8:	blt	2f674 <GetDataSlab+0xd238>
   2f7ac:	b	22560 <GetDataSlab+0x124>
   2f7b0:	ldr	r0, [lr]
   2f7b4:	str	r0, [sp, #16]
   2f7b8:	sub	r0, r0, #1
   2f7bc:	str	r0, [fp, #-72]	; 0xffffffb8
   2f7c0:	ldr	r0, [r8]
   2f7c4:	str	r0, [sp, #36]	; 0x24
   2f7c8:	str	r0, [sp, #64]	; 0x40
   2f7cc:	ldr	r1, [r4]
   2f7d0:	mov	lr, #0
   2f7d4:	ldr	r0, [fp, #24]
   2f7d8:	cmp	r0, #2
   2f7dc:	str	r1, [sp, #44]	; 0x2c
   2f7e0:	mov	ip, r1
   2f7e4:	sub	r1, fp, #72	; 0x48
   2f7e8:	blt	2f874 <GetDataSlab+0xd438>
   2f7ec:	mov	r0, #1
   2f7f0:	mov	lr, #0
   2f7f4:	ldr	r3, [fp, #8]
   2f7f8:	ldr	ip, [sp, #44]	; 0x2c
   2f7fc:	ldr	r2, [fp, #16]
   2f800:	ldr	r2, [r2, r0, lsl #2]
   2f804:	sub	r4, r2, #1
   2f808:	str	r4, [r1, r0, lsl #2]
   2f80c:	sub	r8, r0, #1
   2f810:	ldr	r2, [fp, #8]
   2f814:	ldr	r6, [r2, r8, lsl #2]
   2f818:	str	r6, [sl, r0, lsl #2]
   2f81c:	mov	r7, #0
   2f820:	mov	r2, r3
   2f824:	ldr	r5, [r2, -r7, lsl #2]!
   2f828:	mul	r4, r4, r5
   2f82c:	ldr	r2, [r2, #4]
   2f830:	mul	r6, r2, r6
   2f834:	add	r7, r7, #1
   2f838:	cmp	r0, r7
   2f83c:	bne	2f820 <GetDataSlab+0xd3e4>
   2f840:	str	r6, [sl, r0, lsl #2]
   2f844:	str	r4, [r1, r0, lsl #2]
   2f848:	ldr	r2, [sl, r8, lsl #2]
   2f84c:	ldr	r4, [r9, r0, lsl #2]
   2f850:	mla	lr, r4, r2, lr
   2f854:	ldr	r4, [fp, #20]
   2f858:	ldr	r2, [r4, r0, lsl #2]
   2f85c:	mul	ip, r2, ip
   2f860:	add	r3, r3, #4
   2f864:	add	r0, r0, #1
   2f868:	ldr	r2, [fp, #24]
   2f86c:	cmp	r0, r2
   2f870:	bne	2f7fc <GetDataSlab+0xd3c0>
   2f874:	str	ip, [sp, #40]	; 0x28
   2f878:	ldr	r0, [sp, #48]	; 0x30
   2f87c:	add	ip, r0, lr, lsl #3
   2f880:	ldr	r3, [sp, #16]
   2f884:	cmp	r3, #1
   2f888:	bne	388c0 <GetDataSlab+0x16484>
   2f88c:	ldr	r0, [sp, #40]	; 0x28
   2f890:	cmp	r0, #1
   2f894:	ldr	r1, [sp, #44]	; 0x2c
   2f898:	blt	3aa40 <GetDataSlab+0x18604>
   2f89c:	add	r8, r4, #4
   2f8a0:	add	r0, sp, #104	; 0x68
   2f8a4:	orr	r4, r0, #4
   2f8a8:	sub	r0, fp, #72	; 0x48
   2f8ac:	orr	r0, r0, #4
   2f8b0:	str	r0, [sp, #24]
   2f8b4:	lsl	r0, r1, #3
   2f8b8:	str	r0, [sp, #32]
   2f8bc:	mov	r5, r9
   2f8c0:	ldr	r0, [r5], #4
   2f8c4:	str	r0, [sp, #28]
   2f8c8:	ldr	r3, [sp, #60]	; 0x3c
   2f8cc:	mov	r9, #0
   2f8d0:	cmp	r1, #1
   2f8d4:	blt	2f900 <GetDataSlab+0xd4c4>
   2f8d8:	ldr	r0, [sp, #28]
   2f8dc:	add	r7, ip, r0, lsl #3
   2f8e0:	ldr	r6, [sp, #44]	; 0x2c
   2f8e4:	mov	r2, r3
   2f8e8:	ldrd	r0, [r7]
   2f8ec:	strd	r0, [r2]
   2f8f0:	subs	r6, r6, #1
   2f8f4:	add	r2, r2, #8
   2f8f8:	add	r7, r7, #8
   2f8fc:	bne	2f8e8 <GetDataSlab+0xd4ac>
   2f900:	ldr	r0, [sp, #36]	; 0x24
   2f904:	add	ip, ip, r0, lsl #3
   2f908:	add	lr, lr, r0
   2f90c:	ldr	r0, [fp, #24]
   2f910:	cmp	r0, #2
   2f914:	blt	2f9c4 <GetDataSlab+0xd588>
   2f918:	mov	r0, #0
   2f91c:	mov	r7, #0
   2f920:	mov	sl, r0
   2f924:	ldr	r0, [r4, r0, lsl #2]
   2f928:	add	r0, r0, #1
   2f92c:	str	r0, [r4, sl, lsl #2]
   2f930:	ldr	r1, [r8, sl, lsl #2]
   2f934:	sdiv	r2, r0, r1
   2f938:	mls	r0, r2, r1, r0
   2f93c:	cmp	r0, #0
   2f940:	bne	2f9b4 <GetDataSlab+0xd578>
   2f944:	str	r7, [r4, sl, lsl #2]
   2f948:	add	r6, sp, #64	; 0x40
   2f94c:	add	r0, r6, sl, lsl #2
   2f950:	ldr	r0, [r0, #4]
   2f954:	sdiv	r1, lr, r0
   2f958:	mls	r2, r1, r0, lr
   2f95c:	cmp	r2, #0
   2f960:	beq	2f97c <GetDataSlab+0xd540>
   2f964:	ldr	r1, [r6, sl, lsl #2]
   2f968:	ldr	r6, [r5, sl, lsl #2]
   2f96c:	sub	r0, r0, r2
   2f970:	mla	r0, r6, r1, r0
   2f974:	add	lr, r0, lr
   2f978:	b	2f998 <GetDataSlab+0xd55c>
   2f97c:	ldr	r0, [r5, sl, lsl #2]
   2f980:	cmp	r0, #0
   2f984:	beq	2f99c <GetDataSlab+0xd560>
   2f988:	add	r1, sp, #64	; 0x40
   2f98c:	ldr	r1, [r1, sl, lsl #2]
   2f990:	mla	lr, r1, r0, lr
   2f994:	mul	r0, r1, r0
   2f998:	add	ip, ip, r0, lsl #3
   2f99c:	add	r0, sl, #1
   2f9a0:	add	r1, sl, #2
   2f9a4:	ldr	r2, [fp, #24]
   2f9a8:	cmp	r1, r2
   2f9ac:	blt	2f920 <GetDataSlab+0xd4e4>
   2f9b0:	b	2f9c4 <GetDataSlab+0xd588>
   2f9b4:	ldr	r0, [sp, #24]
   2f9b8:	ldr	r0, [r0, sl, lsl #2]
   2f9bc:	add	ip, ip, r0, lsl #3
   2f9c0:	add	lr, r0, lr
   2f9c4:	ldr	r0, [sp, #32]
   2f9c8:	add	r3, r3, r0
   2f9cc:	ldr	r1, [sp, #44]	; 0x2c
   2f9d0:	add	r9, r9, r1
   2f9d4:	ldr	r0, [sp, #40]	; 0x28
   2f9d8:	cmp	r9, r0
   2f9dc:	blt	2f8d0 <GetDataSlab+0xd494>
   2f9e0:	b	38a3c <GetDataSlab+0x16600>
   2f9e4:	ldr	r0, [sp, #52]	; 0x34
   2f9e8:	cmp	r0, #1
   2f9ec:	ldr	r0, [fp, #20]
   2f9f0:	blt	240b8 <GetDataSlab+0x1c7c>
   2f9f4:	ldr	r2, [sp, #44]	; 0x2c
   2f9f8:	ldr	r7, [sp, #40]	; 0x28
   2f9fc:	mls	r7, r2, lr, r7
   2fa00:	str	r7, [sp, #48]	; 0x30
   2fa04:	mul	r7, r2, lr
   2fa08:	str	r7, [sp, #36]	; 0x24
   2fa0c:	add	r8, r9, #4
   2fa10:	add	r9, r0, #4
   2fa14:	add	r0, sp, #104	; 0x68
   2fa18:	orr	r6, r0, #4
   2fa1c:	orr	r0, r1, #4
   2fa20:	str	r0, [sp, #32]
   2fa24:	mov	r1, r2
   2fa28:	lsl	r0, r2, #3
   2fa2c:	str	r0, [sp, #40]	; 0x28
   2fa30:	mov	sl, #0
   2fa34:	ldr	r0, [fp, #12]
   2fa38:	ldr	r0, [r0]
   2fa3c:	cmp	r1, #1
   2fa40:	blt	2fa88 <GetDataSlab+0xd64c>
   2fa44:	mov	r2, r1
   2fa48:	ldr	r1, [sp, #36]	; 0x24
   2fa4c:	mov	r7, r1
   2fa50:	add	r1, r1, r3
   2fa54:	add	r3, r5, r7
   2fa58:	add	r5, r5, r0
   2fa5c:	ldr	ip, [sp, #60]	; 0x3c
   2fa60:	ldrsb	r4, [r5], lr
   2fa64:	vmov	s0, r4
   2fa68:	vcvt.f64.s32	d16, s0
   2fa6c:	vstr	d16, [ip]
   2fa70:	subs	r2, r2, #1
   2fa74:	add	ip, ip, #8
   2fa78:	bne	2fa60 <GetDataSlab+0xd624>
   2fa7c:	add	r2, r1, r0
   2fa80:	mov	r5, r3
   2fa84:	b	2fa8c <GetDataSlab+0xd650>
   2fa88:	add	r2, r0, r3
   2fa8c:	ldr	ip, [sp, #60]	; 0x3c
   2fa90:	ldr	r1, [sp, #48]	; 0x30
   2fa94:	add	r5, r5, r1
   2fa98:	sub	r0, r1, r0
   2fa9c:	add	r3, r2, r0
   2faa0:	ldr	r0, [fp, #24]
   2faa4:	cmp	r0, #2
   2faa8:	blt	2fb54 <GetDataSlab+0xd718>
   2faac:	mov	r2, #0
   2fab0:	mov	r0, r2
   2fab4:	ldr	r1, [r6, r2, lsl #2]
   2fab8:	add	r1, r1, #1
   2fabc:	str	r1, [r6, r2, lsl #2]
   2fac0:	ldr	r2, [r9, r2, lsl #2]
   2fac4:	sdiv	r4, r1, r2
   2fac8:	mls	r1, r4, r2, r1
   2facc:	cmp	r1, #0
   2fad0:	bne	2fb44 <GetDataSlab+0xd708>
   2fad4:	mov	r1, #0
   2fad8:	str	r1, [r6, r0, lsl #2]
   2fadc:	add	r4, sp, #64	; 0x40
   2fae0:	add	r1, r4, r0, lsl #2
   2fae4:	ldr	r2, [r1, #4]
   2fae8:	sdiv	r1, r3, r2
   2faec:	mls	r1, r1, r2, r3
   2faf0:	cmp	r1, #0
   2faf4:	beq	2fb14 <GetDataSlab+0xd6d8>
   2faf8:	ldr	r4, [r4, r0, lsl #2]
   2fafc:	ldr	r7, [r8, r0, lsl #2]
   2fb00:	sub	r1, r2, r1
   2fb04:	mla	r1, r7, r4, r1
   2fb08:	add	r3, r1, r3
   2fb0c:	add	r5, r5, r1
   2fb10:	b	2fb2c <GetDataSlab+0xd6f0>
   2fb14:	ldr	r1, [r8, r0, lsl #2]
   2fb18:	cmp	r1, #0
   2fb1c:	addne	r2, sp, #64	; 0x40
   2fb20:	ldrne	r2, [r2, r0, lsl #2]
   2fb24:	mlane	r3, r2, r1, r3
   2fb28:	mlane	r5, r2, r1, r5
   2fb2c:	add	r2, r0, #1
   2fb30:	add	r0, r0, #2
   2fb34:	ldr	r1, [fp, #24]
   2fb38:	cmp	r0, r1
   2fb3c:	blt	2fab0 <GetDataSlab+0xd674>
   2fb40:	b	2fb54 <GetDataSlab+0xd718>
   2fb44:	ldr	r1, [sp, #32]
   2fb48:	ldr	r0, [r1, r0, lsl #2]
   2fb4c:	add	r5, r5, r0
   2fb50:	add	r3, r0, r3
   2fb54:	ldr	r0, [sp, #40]	; 0x28
   2fb58:	add	ip, ip, r0
   2fb5c:	str	ip, [sp, #60]	; 0x3c
   2fb60:	ldr	r1, [sp, #44]	; 0x2c
   2fb64:	add	sl, sl, r1
   2fb68:	mov	r0, #0
   2fb6c:	ldr	r2, [sp, #52]	; 0x34
   2fb70:	cmp	sl, r2
   2fb74:	blt	2fa34 <GetDataSlab+0xd5f8>
   2fb78:	b	22560 <GetDataSlab+0x124>
   2fb7c:	ldr	r0, [sp, #52]	; 0x34
   2fb80:	cmp	r0, #1
   2fb84:	ldr	r0, [fp, #20]
   2fb88:	blt	240b8 <GetDataSlab+0x1c7c>
   2fb8c:	ldr	r2, [sp, #44]	; 0x2c
   2fb90:	ldr	r7, [sp, #40]	; 0x28
   2fb94:	mls	r7, r2, lr, r7
   2fb98:	str	r7, [sp, #48]	; 0x30
   2fb9c:	mul	r7, r2, lr
   2fba0:	str	r7, [sp, #36]	; 0x24
   2fba4:	add	r8, r9, #4
   2fba8:	add	r9, r0, #4
   2fbac:	add	r0, sp, #104	; 0x68
   2fbb0:	orr	r6, r0, #4
   2fbb4:	orr	r0, r1, #4
   2fbb8:	str	r0, [sp, #32]
   2fbbc:	mov	r1, r2
   2fbc0:	lsl	r0, r2, #2
   2fbc4:	str	r0, [sp, #40]	; 0x28
   2fbc8:	mov	sl, #0
   2fbcc:	ldr	r0, [fp, #12]
   2fbd0:	ldr	r0, [r0]
   2fbd4:	cmp	r1, #1
   2fbd8:	blt	2fc20 <GetDataSlab+0xd7e4>
   2fbdc:	mov	r2, r1
   2fbe0:	ldr	r1, [sp, #36]	; 0x24
   2fbe4:	mov	r7, r1
   2fbe8:	add	r1, r1, r3
   2fbec:	add	r3, r5, r7
   2fbf0:	add	r5, r5, r0
   2fbf4:	ldr	ip, [sp, #60]	; 0x3c
   2fbf8:	ldrsb	r4, [r5], lr
   2fbfc:	vmov	s0, r4
   2fc00:	vcvt.f32.s32	s0, s0
   2fc04:	vstr	s0, [ip]
   2fc08:	subs	r2, r2, #1
   2fc0c:	add	ip, ip, #4
   2fc10:	bne	2fbf8 <GetDataSlab+0xd7bc>
   2fc14:	add	r2, r1, r0
   2fc18:	mov	r5, r3
   2fc1c:	b	2fc24 <GetDataSlab+0xd7e8>
   2fc20:	add	r2, r0, r3
   2fc24:	ldr	ip, [sp, #60]	; 0x3c
   2fc28:	ldr	r1, [sp, #48]	; 0x30
   2fc2c:	add	r5, r5, r1
   2fc30:	sub	r0, r1, r0
   2fc34:	add	r3, r2, r0
   2fc38:	ldr	r0, [fp, #24]
   2fc3c:	cmp	r0, #2
   2fc40:	blt	2fcec <GetDataSlab+0xd8b0>
   2fc44:	mov	r2, #0
   2fc48:	mov	r0, r2
   2fc4c:	ldr	r1, [r6, r2, lsl #2]
   2fc50:	add	r1, r1, #1
   2fc54:	str	r1, [r6, r2, lsl #2]
   2fc58:	ldr	r2, [r9, r2, lsl #2]
   2fc5c:	sdiv	r4, r1, r2
   2fc60:	mls	r1, r4, r2, r1
   2fc64:	cmp	r1, #0
   2fc68:	bne	2fcdc <GetDataSlab+0xd8a0>
   2fc6c:	mov	r1, #0
   2fc70:	str	r1, [r6, r0, lsl #2]
   2fc74:	add	r4, sp, #64	; 0x40
   2fc78:	add	r1, r4, r0, lsl #2
   2fc7c:	ldr	r2, [r1, #4]
   2fc80:	sdiv	r1, r3, r2
   2fc84:	mls	r1, r1, r2, r3
   2fc88:	cmp	r1, #0
   2fc8c:	beq	2fcac <GetDataSlab+0xd870>
   2fc90:	ldr	r4, [r4, r0, lsl #2]
   2fc94:	ldr	r7, [r8, r0, lsl #2]
   2fc98:	sub	r1, r2, r1
   2fc9c:	mla	r1, r7, r4, r1
   2fca0:	add	r3, r1, r3
   2fca4:	add	r5, r5, r1
   2fca8:	b	2fcc4 <GetDataSlab+0xd888>
   2fcac:	ldr	r1, [r8, r0, lsl #2]
   2fcb0:	cmp	r1, #0
   2fcb4:	addne	r2, sp, #64	; 0x40
   2fcb8:	ldrne	r2, [r2, r0, lsl #2]
   2fcbc:	mlane	r3, r2, r1, r3
   2fcc0:	mlane	r5, r2, r1, r5
   2fcc4:	add	r2, r0, #1
   2fcc8:	add	r0, r0, #2
   2fccc:	ldr	r1, [fp, #24]
   2fcd0:	cmp	r0, r1
   2fcd4:	blt	2fc48 <GetDataSlab+0xd80c>
   2fcd8:	b	2fcec <GetDataSlab+0xd8b0>
   2fcdc:	ldr	r1, [sp, #32]
   2fce0:	ldr	r0, [r1, r0, lsl #2]
   2fce4:	add	r5, r5, r0
   2fce8:	add	r3, r0, r3
   2fcec:	ldr	r0, [sp, #40]	; 0x28
   2fcf0:	add	ip, ip, r0
   2fcf4:	str	ip, [sp, #60]	; 0x3c
   2fcf8:	ldr	r1, [sp, #44]	; 0x2c
   2fcfc:	add	sl, sl, r1
   2fd00:	mov	r0, #0
   2fd04:	ldr	r2, [sp, #52]	; 0x34
   2fd08:	cmp	sl, r2
   2fd0c:	blt	2fbcc <GetDataSlab+0xd790>
   2fd10:	b	22560 <GetDataSlab+0x124>
   2fd14:	ldr	r0, [sp, #44]	; 0x2c
   2fd18:	cmp	r0, #1
   2fd1c:	blt	3ae3c <GetDataSlab+0x18a00>
   2fd20:	add	r0, r9, #4
   2fd24:	str	r0, [sp, #52]	; 0x34
   2fd28:	add	r9, r4, #4
   2fd2c:	add	r0, sp, #104	; 0x68
   2fd30:	orr	r8, r0, #4
   2fd34:	sub	r0, fp, #72	; 0x48
   2fd38:	orr	r0, r0, #4
   2fd3c:	str	r0, [sp, #48]	; 0x30
   2fd40:	mov	sl, #0
   2fd44:	ldr	r1, [fp, #16]
   2fd48:	ldr	r0, [fp, #12]
   2fd4c:	ldr	r0, [r0]
   2fd50:	add	r2, r0, r2
   2fd54:	add	r3, ip, r0
   2fd58:	ldr	r0, [r4]
   2fd5c:	cmp	r0, #1
   2fd60:	blt	2fd94 <GetDataSlab+0xd958>
   2fd64:	ldr	r0, [sp, #60]	; 0x3c
   2fd68:	add	r7, r0, sl
   2fd6c:	mov	r5, #0
   2fd70:	ldrb	r0, [r3]
   2fd74:	strb	r0, [r7, r5]
   2fd78:	ldr	r0, [r1]
   2fd7c:	add	r2, r0, r2
   2fd80:	add	r3, r3, r0
   2fd84:	add	r5, r5, #1
   2fd88:	ldr	r0, [r4]
   2fd8c:	cmp	r5, r0
   2fd90:	blt	2fd70 <GetDataSlab+0xd934>
   2fd94:	ldr	r7, [fp, #8]
   2fd98:	ldr	r7, [r7]
   2fd9c:	ldr	r6, [r1]
   2fda0:	mls	r7, r6, r0, r7
   2fda4:	ldr	r6, [fp, #12]
   2fda8:	ldr	r6, [r6]
   2fdac:	sub	r5, r7, r6
   2fdb0:	add	ip, r3, r5
   2fdb4:	add	r2, r5, r2
   2fdb8:	ldr	r3, [fp, #24]
   2fdbc:	cmp	r3, #2
   2fdc0:	blt	2fe7c <GetDataSlab+0xda40>
   2fdc4:	mov	r5, #0
   2fdc8:	mov	r7, r5
   2fdcc:	ldr	r3, [r8, r5, lsl #2]
   2fdd0:	add	r3, r3, #1
   2fdd4:	str	r3, [r8, r5, lsl #2]
   2fdd8:	ldr	r5, [r9, r5, lsl #2]
   2fddc:	sdiv	r6, r3, r5
   2fde0:	mls	r3, r6, r5, r3
   2fde4:	cmp	r3, #0
   2fde8:	bne	2fe6c <GetDataSlab+0xda30>
   2fdec:	mov	r3, #0
   2fdf0:	str	r3, [r8, r7, lsl #2]
   2fdf4:	add	r4, sp, #64	; 0x40
   2fdf8:	add	r3, r4, r7, lsl #2
   2fdfc:	ldr	r5, [r3, #4]
   2fe00:	sdiv	r3, r2, r5
   2fe04:	mls	r6, r3, r5, r2
   2fe08:	cmp	r6, #0
   2fe0c:	beq	2fe34 <GetDataSlab+0xd9f8>
   2fe10:	ldr	r3, [r4, r7, lsl #2]
   2fe14:	ldr	r1, [sp, #52]	; 0x34
   2fe18:	ldr	lr, [r1, r7, lsl #2]
   2fe1c:	sub	r5, r5, r6
   2fe20:	mla	r3, lr, r3, r5
   2fe24:	ldr	r1, [fp, #16]
   2fe28:	add	r2, r3, r2
   2fe2c:	add	ip, ip, r3
   2fe30:	b	2fe50 <GetDataSlab+0xda14>
   2fe34:	ldr	r3, [sp, #52]	; 0x34
   2fe38:	ldr	r5, [r3, r7, lsl #2]
   2fe3c:	cmp	r5, #0
   2fe40:	addne	r3, sp, #64	; 0x40
   2fe44:	ldrne	r3, [r3, r7, lsl #2]
   2fe48:	mlane	r2, r3, r5, r2
   2fe4c:	mlane	ip, r3, r5, ip
   2fe50:	ldr	r4, [fp, #20]
   2fe54:	add	r5, r7, #1
   2fe58:	add	r3, r7, #2
   2fe5c:	ldr	r7, [fp, #24]
   2fe60:	cmp	r3, r7
   2fe64:	blt	2fdc8 <GetDataSlab+0xd98c>
   2fe68:	b	2fe7c <GetDataSlab+0xda40>
   2fe6c:	ldr	r3, [sp, #48]	; 0x30
   2fe70:	ldr	r3, [r3, r7, lsl #2]
   2fe74:	add	ip, ip, r3
   2fe78:	add	r2, r3, r2
   2fe7c:	add	sl, r0, sl
   2fe80:	mov	r0, #0
   2fe84:	ldr	r3, [sp, #44]	; 0x2c
   2fe88:	cmp	sl, r3
   2fe8c:	blt	2fd48 <GetDataSlab+0xd90c>
   2fe90:	b	22560 <GetDataSlab+0x124>
   2fe94:	ldr	r0, [sp, #44]	; 0x2c
   2fe98:	cmp	r0, #1
   2fe9c:	blt	3ae3c <GetDataSlab+0x18a00>
   2fea0:	add	r0, r9, #4
   2fea4:	str	r0, [sp, #52]	; 0x34
   2fea8:	add	r9, r4, #4
   2feac:	add	r0, sp, #104	; 0x68
   2feb0:	orr	r8, r0, #4
   2feb4:	sub	r0, fp, #72	; 0x48
   2feb8:	orr	r0, r0, #4
   2febc:	str	r0, [sp, #48]	; 0x30
   2fec0:	mov	sl, #0
   2fec4:	ldr	r1, [fp, #16]
   2fec8:	ldr	r0, [fp, #12]
   2fecc:	ldr	r0, [r0]
   2fed0:	add	r2, r0, r2
   2fed4:	add	r3, ip, r0
   2fed8:	ldr	r0, [r4]
   2fedc:	cmp	r0, #1
   2fee0:	blt	2ff14 <GetDataSlab+0xdad8>
   2fee4:	ldr	r0, [sp, #60]	; 0x3c
   2fee8:	add	r7, r0, sl
   2feec:	mov	r5, #0
   2fef0:	ldrb	r0, [r3]
   2fef4:	strb	r0, [r7, r5]
   2fef8:	ldr	r0, [r1]
   2fefc:	add	r2, r0, r2
   2ff00:	add	r3, r3, r0
   2ff04:	add	r5, r5, #1
   2ff08:	ldr	r0, [r4]
   2ff0c:	cmp	r5, r0
   2ff10:	blt	2fef0 <GetDataSlab+0xdab4>
   2ff14:	ldr	r7, [fp, #8]
   2ff18:	ldr	r7, [r7]
   2ff1c:	ldr	r6, [r1]
   2ff20:	mls	r7, r6, r0, r7
   2ff24:	ldr	r6, [fp, #12]
   2ff28:	ldr	r6, [r6]
   2ff2c:	sub	r5, r7, r6
   2ff30:	add	ip, r3, r5
   2ff34:	add	r2, r5, r2
   2ff38:	ldr	r3, [fp, #24]
   2ff3c:	cmp	r3, #2
   2ff40:	blt	2fffc <GetDataSlab+0xdbc0>
   2ff44:	mov	r5, #0
   2ff48:	mov	r7, r5
   2ff4c:	ldr	r3, [r8, r5, lsl #2]
   2ff50:	add	r3, r3, #1
   2ff54:	str	r3, [r8, r5, lsl #2]
   2ff58:	ldr	r5, [r9, r5, lsl #2]
   2ff5c:	sdiv	r6, r3, r5
   2ff60:	mls	r3, r6, r5, r3
   2ff64:	cmp	r3, #0
   2ff68:	bne	2ffec <GetDataSlab+0xdbb0>
   2ff6c:	mov	r3, #0
   2ff70:	str	r3, [r8, r7, lsl #2]
   2ff74:	add	r4, sp, #64	; 0x40
   2ff78:	add	r3, r4, r7, lsl #2
   2ff7c:	ldr	r5, [r3, #4]
   2ff80:	sdiv	r3, r2, r5
   2ff84:	mls	r6, r3, r5, r2
   2ff88:	cmp	r6, #0
   2ff8c:	beq	2ffb4 <GetDataSlab+0xdb78>
   2ff90:	ldr	r3, [r4, r7, lsl #2]
   2ff94:	ldr	r1, [sp, #52]	; 0x34
   2ff98:	ldr	lr, [r1, r7, lsl #2]
   2ff9c:	sub	r5, r5, r6
   2ffa0:	mla	r3, lr, r3, r5
   2ffa4:	ldr	r1, [fp, #16]
   2ffa8:	add	r2, r3, r2
   2ffac:	add	ip, ip, r3
   2ffb0:	b	2ffd0 <GetDataSlab+0xdb94>
   2ffb4:	ldr	r3, [sp, #52]	; 0x34
   2ffb8:	ldr	r5, [r3, r7, lsl #2]
   2ffbc:	cmp	r5, #0
   2ffc0:	addne	r3, sp, #64	; 0x40
   2ffc4:	ldrne	r3, [r3, r7, lsl #2]
   2ffc8:	mlane	r2, r3, r5, r2
   2ffcc:	mlane	ip, r3, r5, ip
   2ffd0:	ldr	r4, [fp, #20]
   2ffd4:	add	r5, r7, #1
   2ffd8:	add	r3, r7, #2
   2ffdc:	ldr	r7, [fp, #24]
   2ffe0:	cmp	r3, r7
   2ffe4:	blt	2ff48 <GetDataSlab+0xdb0c>
   2ffe8:	b	2fffc <GetDataSlab+0xdbc0>
   2ffec:	ldr	r3, [sp, #48]	; 0x30
   2fff0:	ldr	r3, [r3, r7, lsl #2]
   2fff4:	add	ip, ip, r3
   2fff8:	add	r2, r3, r2
   2fffc:	add	sl, r0, sl
   30000:	mov	r0, #0
   30004:	ldr	r3, [sp, #44]	; 0x2c
   30008:	cmp	sl, r3
   3000c:	blt	2fec8 <GetDataSlab+0xda8c>
   30010:	b	22560 <GetDataSlab+0x124>
   30014:	ldr	r0, [sp, #52]	; 0x34
   30018:	cmp	r0, #1
   3001c:	ldr	r0, [fp, #20]
   30020:	blt	3ae3c <GetDataSlab+0x18a00>
   30024:	ldr	r2, [sp, #44]	; 0x2c
   30028:	ldr	r1, [sp, #40]	; 0x28
   3002c:	mls	r1, r2, lr, r1
   30030:	str	r1, [sp, #48]	; 0x30
   30034:	mul	r1, r2, lr
   30038:	str	r1, [sp, #36]	; 0x24
   3003c:	add	r8, r9, #4
   30040:	add	r9, r0, #4
   30044:	add	r0, sp, #104	; 0x68
   30048:	orr	r1, r0, #4
   3004c:	orr	r0, ip, #4
   30050:	str	r0, [sp, #32]
   30054:	lsl	r0, r2, #1
   30058:	str	r0, [sp, #40]	; 0x28
   3005c:	mov	sl, #0
   30060:	ldr	r0, [fp, #12]
   30064:	ldr	r0, [r0]
   30068:	cmp	r2, #1
   3006c:	blt	300a0 <GetDataSlab+0xdc64>
   30070:	ldr	r7, [sp, #36]	; 0x24
   30074:	add	r4, r7, r3
   30078:	add	r3, r5, r7
   3007c:	add	r5, r5, r0
   30080:	ldr	ip, [sp, #60]	; 0x3c
   30084:	ldrsb	r6, [r5], lr
   30088:	strh	r6, [ip], #2
   3008c:	subs	r2, r2, #1
   30090:	bne	30084 <GetDataSlab+0xdc48>
   30094:	add	r2, r4, r0
   30098:	mov	r5, r3
   3009c:	b	300a4 <GetDataSlab+0xdc68>
   300a0:	add	r2, r0, r3
   300a4:	ldr	ip, [sp, #60]	; 0x3c
   300a8:	ldr	r3, [sp, #48]	; 0x30
   300ac:	add	r5, r5, r3
   300b0:	sub	r0, r3, r0
   300b4:	add	r3, r2, r0
   300b8:	ldr	r0, [fp, #24]
   300bc:	cmp	r0, #2
   300c0:	blt	3016c <GetDataSlab+0xdd30>
   300c4:	mov	r2, #0
   300c8:	mov	r0, r2
   300cc:	ldr	r2, [r1, r2, lsl #2]
   300d0:	add	r2, r2, #1
   300d4:	str	r2, [r1, r0, lsl #2]
   300d8:	ldr	r6, [r9, r0, lsl #2]
   300dc:	sdiv	r4, r2, r6
   300e0:	mls	r2, r4, r6, r2
   300e4:	cmp	r2, #0
   300e8:	bne	3015c <GetDataSlab+0xdd20>
   300ec:	mov	r2, #0
   300f0:	str	r2, [r1, r0, lsl #2]
   300f4:	add	r4, sp, #64	; 0x40
   300f8:	add	r2, r4, r0, lsl #2
   300fc:	ldr	r2, [r2, #4]
   30100:	sdiv	r6, r3, r2
   30104:	mls	r6, r6, r2, r3
   30108:	cmp	r6, #0
   3010c:	beq	3012c <GetDataSlab+0xdcf0>
   30110:	ldr	r4, [r4, r0, lsl #2]
   30114:	ldr	r7, [r8, r0, lsl #2]
   30118:	sub	r2, r2, r6
   3011c:	mla	r2, r7, r4, r2
   30120:	add	r3, r2, r3
   30124:	add	r5, r5, r2
   30128:	b	30144 <GetDataSlab+0xdd08>
   3012c:	ldr	r2, [r8, r0, lsl #2]
   30130:	cmp	r2, #0
   30134:	addne	r4, sp, #64	; 0x40
   30138:	ldrne	r7, [r4, r0, lsl #2]
   3013c:	mlane	r3, r7, r2, r3
   30140:	mlane	r5, r7, r2, r5
   30144:	add	r2, r0, #1
   30148:	add	r0, r0, #2
   3014c:	ldr	r4, [fp, #24]
   30150:	cmp	r0, r4
   30154:	blt	300c8 <GetDataSlab+0xdc8c>
   30158:	b	3016c <GetDataSlab+0xdd30>
   3015c:	ldr	r2, [sp, #32]
   30160:	ldr	r0, [r2, r0, lsl #2]
   30164:	add	r5, r5, r0
   30168:	add	r3, r0, r3
   3016c:	ldr	r0, [sp, #40]	; 0x28
   30170:	add	ip, ip, r0
   30174:	str	ip, [sp, #60]	; 0x3c
   30178:	ldr	r2, [sp, #44]	; 0x2c
   3017c:	add	sl, sl, r2
   30180:	mov	r0, #0
   30184:	ldr	r7, [sp, #52]	; 0x34
   30188:	cmp	sl, r7
   3018c:	blt	30060 <GetDataSlab+0xdc24>
   30190:	b	22560 <GetDataSlab+0x124>
   30194:	ldr	r0, [sp, #52]	; 0x34
   30198:	cmp	r0, #1
   3019c:	ldr	r0, [fp, #20]
   301a0:	blt	3ae3c <GetDataSlab+0x18a00>
   301a4:	ldr	r2, [sp, #44]	; 0x2c
   301a8:	ldr	r1, [sp, #40]	; 0x28
   301ac:	mls	r1, r2, lr, r1
   301b0:	str	r1, [sp, #48]	; 0x30
   301b4:	mul	r1, r2, lr
   301b8:	str	r1, [sp, #36]	; 0x24
   301bc:	add	r8, r9, #4
   301c0:	add	r9, r0, #4
   301c4:	add	r0, sp, #104	; 0x68
   301c8:	orr	r1, r0, #4
   301cc:	orr	r0, ip, #4
   301d0:	str	r0, [sp, #32]
   301d4:	lsl	r0, r2, #1
   301d8:	str	r0, [sp, #40]	; 0x28
   301dc:	mov	sl, #0
   301e0:	ldr	r0, [fp, #12]
   301e4:	ldr	r0, [r0]
   301e8:	cmp	r2, #1
   301ec:	blt	30220 <GetDataSlab+0xdde4>
   301f0:	ldr	r7, [sp, #36]	; 0x24
   301f4:	add	r4, r7, r3
   301f8:	add	r3, r5, r7
   301fc:	add	r5, r5, r0
   30200:	ldr	ip, [sp, #60]	; 0x3c
   30204:	ldrsb	r6, [r5], lr
   30208:	strh	r6, [ip], #2
   3020c:	subs	r2, r2, #1
   30210:	bne	30204 <GetDataSlab+0xddc8>
   30214:	add	r2, r4, r0
   30218:	mov	r5, r3
   3021c:	b	30224 <GetDataSlab+0xdde8>
   30220:	add	r2, r0, r3
   30224:	ldr	ip, [sp, #60]	; 0x3c
   30228:	ldr	r3, [sp, #48]	; 0x30
   3022c:	add	r5, r5, r3
   30230:	sub	r0, r3, r0
   30234:	add	r3, r2, r0
   30238:	ldr	r0, [fp, #24]
   3023c:	cmp	r0, #2
   30240:	blt	302ec <GetDataSlab+0xdeb0>
   30244:	mov	r2, #0
   30248:	mov	r0, r2
   3024c:	ldr	r2, [r1, r2, lsl #2]
   30250:	add	r2, r2, #1
   30254:	str	r2, [r1, r0, lsl #2]
   30258:	ldr	r6, [r9, r0, lsl #2]
   3025c:	sdiv	r4, r2, r6
   30260:	mls	r2, r4, r6, r2
   30264:	cmp	r2, #0
   30268:	bne	302dc <GetDataSlab+0xdea0>
   3026c:	mov	r2, #0
   30270:	str	r2, [r1, r0, lsl #2]
   30274:	add	r4, sp, #64	; 0x40
   30278:	add	r2, r4, r0, lsl #2
   3027c:	ldr	r2, [r2, #4]
   30280:	sdiv	r6, r3, r2
   30284:	mls	r6, r6, r2, r3
   30288:	cmp	r6, #0
   3028c:	beq	302ac <GetDataSlab+0xde70>
   30290:	ldr	r4, [r4, r0, lsl #2]
   30294:	ldr	r7, [r8, r0, lsl #2]
   30298:	sub	r2, r2, r6
   3029c:	mla	r2, r7, r4, r2
   302a0:	add	r3, r2, r3
   302a4:	add	r5, r5, r2
   302a8:	b	302c4 <GetDataSlab+0xde88>
   302ac:	ldr	r2, [r8, r0, lsl #2]
   302b0:	cmp	r2, #0
   302b4:	addne	r4, sp, #64	; 0x40
   302b8:	ldrne	r7, [r4, r0, lsl #2]
   302bc:	mlane	r3, r7, r2, r3
   302c0:	mlane	r5, r7, r2, r5
   302c4:	add	r2, r0, #1
   302c8:	add	r0, r0, #2
   302cc:	ldr	r4, [fp, #24]
   302d0:	cmp	r0, r4
   302d4:	blt	30248 <GetDataSlab+0xde0c>
   302d8:	b	302ec <GetDataSlab+0xdeb0>
   302dc:	ldr	r2, [sp, #32]
   302e0:	ldr	r0, [r2, r0, lsl #2]
   302e4:	add	r5, r5, r0
   302e8:	add	r3, r0, r3
   302ec:	ldr	r0, [sp, #40]	; 0x28
   302f0:	add	ip, ip, r0
   302f4:	str	ip, [sp, #60]	; 0x3c
   302f8:	ldr	r2, [sp, #44]	; 0x2c
   302fc:	add	sl, sl, r2
   30300:	mov	r0, #0
   30304:	ldr	r7, [sp, #52]	; 0x34
   30308:	cmp	sl, r7
   3030c:	blt	301e0 <GetDataSlab+0xdda4>
   30310:	b	22560 <GetDataSlab+0x124>
   30314:	ldr	r0, [sp, #44]	; 0x2c
   30318:	cmp	r0, #1
   3031c:	blt	3ae3c <GetDataSlab+0x18a00>
   30320:	add	r0, r9, #4
   30324:	str	r0, [sp, #52]	; 0x34
   30328:	add	r9, r4, #4
   3032c:	add	r0, sp, #104	; 0x68
   30330:	orr	r8, r0, #4
   30334:	sub	r0, fp, #72	; 0x48
   30338:	orr	r0, r0, #4
   3033c:	str	r0, [sp, #48]	; 0x30
   30340:	mov	sl, #0
   30344:	ldr	r1, [fp, #16]
   30348:	ldr	r0, [fp, #12]
   3034c:	ldr	r0, [r0]
   30350:	add	r2, r0, r2
   30354:	add	r3, ip, r0
   30358:	ldr	r0, [r4]
   3035c:	cmp	r0, #1
   30360:	blt	30394 <GetDataSlab+0xdf58>
   30364:	ldr	r0, [sp, #60]	; 0x3c
   30368:	add	r7, r0, sl, lsl #2
   3036c:	mov	r5, #0
   30370:	ldrsb	r0, [r3]
   30374:	str	r0, [r7, r5, lsl #2]
   30378:	ldr	r0, [r1]
   3037c:	add	r2, r0, r2
   30380:	add	r3, r3, r0
   30384:	add	r5, r5, #1
   30388:	ldr	r0, [r4]
   3038c:	cmp	r5, r0
   30390:	blt	30370 <GetDataSlab+0xdf34>
   30394:	ldr	r7, [fp, #8]
   30398:	ldr	r7, [r7]
   3039c:	ldr	r6, [r1]
   303a0:	mls	r7, r6, r0, r7
   303a4:	ldr	r6, [fp, #12]
   303a8:	ldr	r6, [r6]
   303ac:	sub	r5, r7, r6
   303b0:	add	ip, r3, r5
   303b4:	add	r2, r5, r2
   303b8:	ldr	r3, [fp, #24]
   303bc:	cmp	r3, #2
   303c0:	blt	3047c <GetDataSlab+0xe040>
   303c4:	mov	r5, #0
   303c8:	mov	r7, r5
   303cc:	ldr	r3, [r8, r5, lsl #2]
   303d0:	add	r3, r3, #1
   303d4:	str	r3, [r8, r5, lsl #2]
   303d8:	ldr	r5, [r9, r5, lsl #2]
   303dc:	sdiv	r6, r3, r5
   303e0:	mls	r3, r6, r5, r3
   303e4:	cmp	r3, #0
   303e8:	bne	3046c <GetDataSlab+0xe030>
   303ec:	mov	r3, #0
   303f0:	str	r3, [r8, r7, lsl #2]
   303f4:	add	r4, sp, #64	; 0x40
   303f8:	add	r3, r4, r7, lsl #2
   303fc:	ldr	r5, [r3, #4]
   30400:	sdiv	r3, r2, r5
   30404:	mls	r6, r3, r5, r2
   30408:	cmp	r6, #0
   3040c:	beq	30434 <GetDataSlab+0xdff8>
   30410:	ldr	r3, [r4, r7, lsl #2]
   30414:	ldr	r1, [sp, #52]	; 0x34
   30418:	ldr	lr, [r1, r7, lsl #2]
   3041c:	sub	r5, r5, r6
   30420:	mla	r3, lr, r3, r5
   30424:	ldr	r1, [fp, #16]
   30428:	add	r2, r3, r2
   3042c:	add	ip, ip, r3
   30430:	b	30450 <GetDataSlab+0xe014>
   30434:	ldr	r3, [sp, #52]	; 0x34
   30438:	ldr	r5, [r3, r7, lsl #2]
   3043c:	cmp	r5, #0
   30440:	addne	r3, sp, #64	; 0x40
   30444:	ldrne	r3, [r3, r7, lsl #2]
   30448:	mlane	r2, r3, r5, r2
   3044c:	mlane	ip, r3, r5, ip
   30450:	ldr	r4, [fp, #20]
   30454:	add	r5, r7, #1
   30458:	add	r3, r7, #2
   3045c:	ldr	r7, [fp, #24]
   30460:	cmp	r3, r7
   30464:	blt	303c8 <GetDataSlab+0xdf8c>
   30468:	b	3047c <GetDataSlab+0xe040>
   3046c:	ldr	r3, [sp, #48]	; 0x30
   30470:	ldr	r3, [r3, r7, lsl #2]
   30474:	add	ip, ip, r3
   30478:	add	r2, r3, r2
   3047c:	add	sl, r0, sl
   30480:	mov	r0, #0
   30484:	ldr	r3, [sp, #44]	; 0x2c
   30488:	cmp	sl, r3
   3048c:	blt	30348 <GetDataSlab+0xdf0c>
   30490:	b	22560 <GetDataSlab+0x124>
   30494:	ldr	r0, [sp, #44]	; 0x2c
   30498:	cmp	r0, #1
   3049c:	blt	3ae3c <GetDataSlab+0x18a00>
   304a0:	add	r0, r9, #4
   304a4:	str	r0, [sp, #52]	; 0x34
   304a8:	add	r9, r4, #4
   304ac:	add	r0, sp, #104	; 0x68
   304b0:	orr	r8, r0, #4
   304b4:	sub	r0, fp, #72	; 0x48
   304b8:	orr	r0, r0, #4
   304bc:	str	r0, [sp, #48]	; 0x30
   304c0:	mov	sl, #0
   304c4:	ldr	r1, [fp, #16]
   304c8:	ldr	r0, [fp, #12]
   304cc:	ldr	r0, [r0]
   304d0:	add	r2, r0, r2
   304d4:	add	r3, ip, r0
   304d8:	ldr	r0, [r4]
   304dc:	cmp	r0, #1
   304e0:	blt	30514 <GetDataSlab+0xe0d8>
   304e4:	ldr	r0, [sp, #60]	; 0x3c
   304e8:	add	r7, r0, sl, lsl #2
   304ec:	mov	r5, #0
   304f0:	ldrsb	r0, [r3]
   304f4:	str	r0, [r7, r5, lsl #2]
   304f8:	ldr	r0, [r1]
   304fc:	add	r2, r0, r2
   30500:	add	r3, r3, r0
   30504:	add	r5, r5, #1
   30508:	ldr	r0, [r4]
   3050c:	cmp	r5, r0
   30510:	blt	304f0 <GetDataSlab+0xe0b4>
   30514:	ldr	r7, [fp, #8]
   30518:	ldr	r7, [r7]
   3051c:	ldr	r6, [r1]
   30520:	mls	r7, r6, r0, r7
   30524:	ldr	r6, [fp, #12]
   30528:	ldr	r6, [r6]
   3052c:	sub	r5, r7, r6
   30530:	add	ip, r3, r5
   30534:	add	r2, r5, r2
   30538:	ldr	r3, [fp, #24]
   3053c:	cmp	r3, #2
   30540:	blt	305fc <GetDataSlab+0xe1c0>
   30544:	mov	r5, #0
   30548:	mov	r7, r5
   3054c:	ldr	r3, [r8, r5, lsl #2]
   30550:	add	r3, r3, #1
   30554:	str	r3, [r8, r5, lsl #2]
   30558:	ldr	r5, [r9, r5, lsl #2]
   3055c:	sdiv	r6, r3, r5
   30560:	mls	r3, r6, r5, r3
   30564:	cmp	r3, #0
   30568:	bne	305ec <GetDataSlab+0xe1b0>
   3056c:	mov	r3, #0
   30570:	str	r3, [r8, r7, lsl #2]
   30574:	add	r4, sp, #64	; 0x40
   30578:	add	r3, r4, r7, lsl #2
   3057c:	ldr	r5, [r3, #4]
   30580:	sdiv	r3, r2, r5
   30584:	mls	r6, r3, r5, r2
   30588:	cmp	r6, #0
   3058c:	beq	305b4 <GetDataSlab+0xe178>
   30590:	ldr	r3, [r4, r7, lsl #2]
   30594:	ldr	r1, [sp, #52]	; 0x34
   30598:	ldr	lr, [r1, r7, lsl #2]
   3059c:	sub	r5, r5, r6
   305a0:	mla	r3, lr, r3, r5
   305a4:	ldr	r1, [fp, #16]
   305a8:	add	r2, r3, r2
   305ac:	add	ip, ip, r3
   305b0:	b	305d0 <GetDataSlab+0xe194>
   305b4:	ldr	r3, [sp, #52]	; 0x34
   305b8:	ldr	r5, [r3, r7, lsl #2]
   305bc:	cmp	r5, #0
   305c0:	addne	r3, sp, #64	; 0x40
   305c4:	ldrne	r3, [r3, r7, lsl #2]
   305c8:	mlane	r2, r3, r5, r2
   305cc:	mlane	ip, r3, r5, ip
   305d0:	ldr	r4, [fp, #20]
   305d4:	add	r5, r7, #1
   305d8:	add	r3, r7, #2
   305dc:	ldr	r7, [fp, #24]
   305e0:	cmp	r3, r7
   305e4:	blt	30548 <GetDataSlab+0xe10c>
   305e8:	b	305fc <GetDataSlab+0xe1c0>
   305ec:	ldr	r3, [sp, #48]	; 0x30
   305f0:	ldr	r3, [r3, r7, lsl #2]
   305f4:	add	ip, ip, r3
   305f8:	add	r2, r3, r2
   305fc:	add	sl, r0, sl
   30600:	mov	r0, #0
   30604:	ldr	r3, [sp, #44]	; 0x2c
   30608:	cmp	sl, r3
   3060c:	blt	304c8 <GetDataSlab+0xe08c>
   30610:	b	22560 <GetDataSlab+0x124>
   30614:	ldr	r0, [sp, #52]	; 0x34
   30618:	cmp	r0, #1
   3061c:	ldr	r1, [fp, #20]
   30620:	ldr	r2, [sp, #44]	; 0x2c
   30624:	blt	3ae3c <GetDataSlab+0x18a00>
   30628:	ldr	r0, [sp, #40]	; 0x28
   3062c:	mls	r0, r2, lr, r0
   30630:	str	r0, [sp, #48]	; 0x30
   30634:	mul	r0, r2, lr
   30638:	str	r0, [sp, #36]	; 0x24
   3063c:	ldr	r0, [fp, #12]
   30640:	add	r8, r0, #4
   30644:	add	r6, r1, #4
   30648:	add	r0, sp, #104	; 0x68
   3064c:	orr	r7, r0, #4
   30650:	orr	r0, r5, #4
   30654:	str	r0, [sp, #32]
   30658:	lsl	r0, r2, #3
   3065c:	str	r0, [sp, #40]	; 0x28
   30660:	mov	sl, #0
   30664:	ldr	r0, [fp, #12]
   30668:	ldr	r0, [r0]
   3066c:	cmp	r2, #1
   30670:	blt	306b0 <GetDataSlab+0xe274>
   30674:	ldr	r1, [sp, #36]	; 0x24
   30678:	mov	r5, r1
   3067c:	add	r1, r1, r3
   30680:	add	r3, r9, r5
   30684:	add	r5, r9, r0
   30688:	ldr	ip, [sp, #60]	; 0x3c
   3068c:	ldrsb	r4, [r5], lr
   30690:	asr	r9, r4, #31
   30694:	stm	ip, {r4, r9}
   30698:	subs	r2, r2, #1
   3069c:	add	ip, ip, #8
   306a0:	bne	3068c <GetDataSlab+0xe250>
   306a4:	add	r2, r1, r0
   306a8:	mov	r9, r3
   306ac:	b	306b4 <GetDataSlab+0xe278>
   306b0:	add	r2, r0, r3
   306b4:	ldr	ip, [sp, #60]	; 0x3c
   306b8:	ldr	r1, [sp, #48]	; 0x30
   306bc:	add	r9, r9, r1
   306c0:	sub	r0, r1, r0
   306c4:	add	r3, r2, r0
   306c8:	ldr	r0, [fp, #24]
   306cc:	cmp	r0, #2
   306d0:	blt	3077c <GetDataSlab+0xe340>
   306d4:	mov	r2, #0
   306d8:	mov	r0, r2
   306dc:	ldr	r1, [r7, r2, lsl #2]
   306e0:	add	r1, r1, #1
   306e4:	str	r1, [r7, r2, lsl #2]
   306e8:	ldr	r2, [r6, r2, lsl #2]
   306ec:	sdiv	r5, r1, r2
   306f0:	mls	r1, r5, r2, r1
   306f4:	cmp	r1, #0
   306f8:	bne	3076c <GetDataSlab+0xe330>
   306fc:	mov	r1, #0
   30700:	str	r1, [r7, r0, lsl #2]
   30704:	add	r4, sp, #64	; 0x40
   30708:	add	r1, r4, r0, lsl #2
   3070c:	ldr	r2, [r1, #4]
   30710:	sdiv	r1, r3, r2
   30714:	mls	r1, r1, r2, r3
   30718:	cmp	r1, #0
   3071c:	beq	3073c <GetDataSlab+0xe300>
   30720:	ldr	r5, [r4, r0, lsl #2]
   30724:	ldr	r4, [r8, r0, lsl #2]
   30728:	sub	r1, r2, r1
   3072c:	mla	r1, r4, r5, r1
   30730:	add	r3, r1, r3
   30734:	add	r9, r9, r1
   30738:	b	30754 <GetDataSlab+0xe318>
   3073c:	ldr	r1, [r8, r0, lsl #2]
   30740:	cmp	r1, #0
   30744:	addne	r2, sp, #64	; 0x40
   30748:	ldrne	r2, [r2, r0, lsl #2]
   3074c:	mlane	r3, r2, r1, r3
   30750:	mlane	r9, r2, r1, r9
   30754:	add	r2, r0, #1
   30758:	add	r0, r0, #2
   3075c:	ldr	r1, [fp, #24]
   30760:	cmp	r0, r1
   30764:	blt	306d8 <GetDataSlab+0xe29c>
   30768:	b	3077c <GetDataSlab+0xe340>
   3076c:	ldr	r1, [sp, #32]
   30770:	ldr	r0, [r1, r0, lsl #2]
   30774:	add	r9, r9, r0
   30778:	add	r3, r0, r3
   3077c:	ldr	r0, [sp, #40]	; 0x28
   30780:	add	ip, ip, r0
   30784:	str	ip, [sp, #60]	; 0x3c
   30788:	ldr	r2, [sp, #44]	; 0x2c
   3078c:	add	sl, sl, r2
   30790:	mov	r0, #0
   30794:	ldr	r1, [sp, #52]	; 0x34
   30798:	cmp	sl, r1
   3079c:	blt	30664 <GetDataSlab+0xe228>
   307a0:	b	22560 <GetDataSlab+0x124>
   307a4:	ldr	r0, [sp, #52]	; 0x34
   307a8:	cmp	r0, #1
   307ac:	ldr	r1, [fp, #20]
   307b0:	ldr	r2, [sp, #44]	; 0x2c
   307b4:	blt	3ae3c <GetDataSlab+0x18a00>
   307b8:	ldr	r0, [sp, #40]	; 0x28
   307bc:	mls	r0, r2, lr, r0
   307c0:	str	r0, [sp, #48]	; 0x30
   307c4:	mul	r0, r2, lr
   307c8:	str	r0, [sp, #36]	; 0x24
   307cc:	ldr	r0, [fp, #12]
   307d0:	add	r8, r0, #4
   307d4:	add	r7, r1, #4
   307d8:	add	r0, sp, #104	; 0x68
   307dc:	orr	r1, r0, #4
   307e0:	orr	r0, r5, #4
   307e4:	str	r0, [sp, #32]
   307e8:	lsl	r0, r2, #3
   307ec:	str	r0, [sp, #40]	; 0x28
   307f0:	mov	sl, #0
   307f4:	ldr	r0, [fp, #12]
   307f8:	ldr	r0, [r0]
   307fc:	cmp	r2, #1
   30800:	blt	3083c <GetDataSlab+0xe400>
   30804:	ldr	r6, [sp, #36]	; 0x24
   30808:	add	r4, r6, r3
   3080c:	add	r3, r9, r6
   30810:	add	r5, r9, r0
   30814:	ldr	ip, [sp, #60]	; 0x3c
   30818:	ldrsb	r6, [r5], lr
   3081c:	asr	r9, r6, #31
   30820:	stm	ip, {r6, r9}
   30824:	subs	r2, r2, #1
   30828:	add	ip, ip, #8
   3082c:	bne	30818 <GetDataSlab+0xe3dc>
   30830:	add	r2, r4, r0
   30834:	mov	r9, r3
   30838:	b	30840 <GetDataSlab+0xe404>
   3083c:	add	r2, r0, r3
   30840:	ldr	ip, [sp, #60]	; 0x3c
   30844:	ldr	r3, [sp, #48]	; 0x30
   30848:	add	r9, r9, r3
   3084c:	sub	r0, r3, r0
   30850:	add	r3, r2, r0
   30854:	ldr	r0, [fp, #24]
   30858:	cmp	r0, #2
   3085c:	blt	30908 <GetDataSlab+0xe4cc>
   30860:	mov	r2, #0
   30864:	mov	r0, r2
   30868:	ldr	r2, [r1, r2, lsl #2]
   3086c:	add	r2, r2, #1
   30870:	str	r2, [r1, r0, lsl #2]
   30874:	ldr	r6, [r7, r0, lsl #2]
   30878:	sdiv	r5, r2, r6
   3087c:	mls	r2, r5, r6, r2
   30880:	cmp	r2, #0
   30884:	bne	308f8 <GetDataSlab+0xe4bc>
   30888:	mov	r2, #0
   3088c:	str	r2, [r1, r0, lsl #2]
   30890:	add	r4, sp, #64	; 0x40
   30894:	add	r2, r4, r0, lsl #2
   30898:	ldr	r2, [r2, #4]
   3089c:	sdiv	r6, r3, r2
   308a0:	mls	r6, r6, r2, r3
   308a4:	cmp	r6, #0
   308a8:	beq	308c8 <GetDataSlab+0xe48c>
   308ac:	ldr	r5, [r4, r0, lsl #2]
   308b0:	ldr	r4, [r8, r0, lsl #2]
   308b4:	sub	r2, r2, r6
   308b8:	mla	r2, r4, r5, r2
   308bc:	add	r3, r2, r3
   308c0:	add	r9, r9, r2
   308c4:	b	308e0 <GetDataSlab+0xe4a4>
   308c8:	ldr	r2, [r8, r0, lsl #2]
   308cc:	cmp	r2, #0
   308d0:	addne	r4, sp, #64	; 0x40
   308d4:	ldrne	r6, [r4, r0, lsl #2]
   308d8:	mlane	r3, r6, r2, r3
   308dc:	mlane	r9, r6, r2, r9
   308e0:	add	r2, r0, #1
   308e4:	add	r0, r0, #2
   308e8:	ldr	r4, [fp, #24]
   308ec:	cmp	r0, r4
   308f0:	blt	30864 <GetDataSlab+0xe428>
   308f4:	b	30908 <GetDataSlab+0xe4cc>
   308f8:	ldr	r2, [sp, #32]
   308fc:	ldr	r0, [r2, r0, lsl #2]
   30900:	add	r9, r9, r0
   30904:	add	r3, r0, r3
   30908:	ldr	r0, [sp, #40]	; 0x28
   3090c:	add	ip, ip, r0
   30910:	str	ip, [sp, #60]	; 0x3c
   30914:	ldr	r2, [sp, #44]	; 0x2c
   30918:	add	sl, sl, r2
   3091c:	mov	r0, #0
   30920:	ldr	r6, [sp, #52]	; 0x34
   30924:	cmp	sl, r6
   30928:	blt	307f4 <GetDataSlab+0xe3b8>
   3092c:	b	22560 <GetDataSlab+0x124>
   30930:	ldr	r0, [sp, #52]	; 0x34
   30934:	cmp	r0, #1
   30938:	ldr	r0, [fp, #20]
   3093c:	blt	240b8 <GetDataSlab+0x1c7c>
   30940:	ldr	r2, [sp, #44]	; 0x2c
   30944:	ldr	r7, [sp, #40]	; 0x28
   30948:	mls	r7, r2, lr, r7
   3094c:	str	r7, [sp, #48]	; 0x30
   30950:	mul	r7, r2, lr
   30954:	str	r7, [sp, #36]	; 0x24
   30958:	add	r8, r9, #4
   3095c:	add	r9, r0, #4
   30960:	add	r0, sp, #104	; 0x68
   30964:	orr	r6, r0, #4
   30968:	orr	r0, r1, #4
   3096c:	str	r0, [sp, #32]
   30970:	mov	r1, r2
   30974:	lsl	r0, r2, #3
   30978:	str	r0, [sp, #40]	; 0x28
   3097c:	mov	sl, #0
   30980:	ldr	r0, [fp, #12]
   30984:	ldr	r0, [r0]
   30988:	cmp	r1, #1
   3098c:	blt	309d4 <GetDataSlab+0xe598>
   30990:	mov	r2, r1
   30994:	ldr	r1, [sp, #36]	; 0x24
   30998:	mov	r7, r1
   3099c:	add	r1, r1, r3
   309a0:	add	r3, r5, r7
   309a4:	add	r5, r5, r0
   309a8:	ldr	ip, [sp, #60]	; 0x3c
   309ac:	ldrb	r4, [r5], lr
   309b0:	vmov	s0, r4
   309b4:	vcvt.f64.u32	d16, s0
   309b8:	vstr	d16, [ip]
   309bc:	subs	r2, r2, #1
   309c0:	add	ip, ip, #8
   309c4:	bne	309ac <GetDataSlab+0xe570>
   309c8:	add	r2, r1, r0
   309cc:	mov	r5, r3
   309d0:	b	309d8 <GetDataSlab+0xe59c>
   309d4:	add	r2, r0, r3
   309d8:	ldr	ip, [sp, #60]	; 0x3c
   309dc:	ldr	r1, [sp, #48]	; 0x30
   309e0:	add	r5, r5, r1
   309e4:	sub	r0, r1, r0
   309e8:	add	r3, r2, r0
   309ec:	ldr	r0, [fp, #24]
   309f0:	cmp	r0, #2
   309f4:	blt	30aa0 <GetDataSlab+0xe664>
   309f8:	mov	r2, #0
   309fc:	mov	r0, r2
   30a00:	ldr	r1, [r6, r2, lsl #2]
   30a04:	add	r1, r1, #1
   30a08:	str	r1, [r6, r2, lsl #2]
   30a0c:	ldr	r2, [r9, r2, lsl #2]
   30a10:	sdiv	r4, r1, r2
   30a14:	mls	r1, r4, r2, r1
   30a18:	cmp	r1, #0
   30a1c:	bne	30a90 <GetDataSlab+0xe654>
   30a20:	mov	r1, #0
   30a24:	str	r1, [r6, r0, lsl #2]
   30a28:	add	r4, sp, #64	; 0x40
   30a2c:	add	r1, r4, r0, lsl #2
   30a30:	ldr	r2, [r1, #4]
   30a34:	sdiv	r1, r3, r2
   30a38:	mls	r1, r1, r2, r3
   30a3c:	cmp	r1, #0
   30a40:	beq	30a60 <GetDataSlab+0xe624>
   30a44:	ldr	r4, [r4, r0, lsl #2]
   30a48:	ldr	r7, [r8, r0, lsl #2]
   30a4c:	sub	r1, r2, r1
   30a50:	mla	r1, r7, r4, r1
   30a54:	add	r3, r1, r3
   30a58:	add	r5, r5, r1
   30a5c:	b	30a78 <GetDataSlab+0xe63c>
   30a60:	ldr	r1, [r8, r0, lsl #2]
   30a64:	cmp	r1, #0
   30a68:	addne	r2, sp, #64	; 0x40
   30a6c:	ldrne	r2, [r2, r0, lsl #2]
   30a70:	mlane	r3, r2, r1, r3
   30a74:	mlane	r5, r2, r1, r5
   30a78:	add	r2, r0, #1
   30a7c:	add	r0, r0, #2
   30a80:	ldr	r1, [fp, #24]
   30a84:	cmp	r0, r1
   30a88:	blt	309fc <GetDataSlab+0xe5c0>
   30a8c:	b	30aa0 <GetDataSlab+0xe664>
   30a90:	ldr	r1, [sp, #32]
   30a94:	ldr	r0, [r1, r0, lsl #2]
   30a98:	add	r5, r5, r0
   30a9c:	add	r3, r0, r3
   30aa0:	ldr	r0, [sp, #40]	; 0x28
   30aa4:	add	ip, ip, r0
   30aa8:	str	ip, [sp, #60]	; 0x3c
   30aac:	ldr	r1, [sp, #44]	; 0x2c
   30ab0:	add	sl, sl, r1
   30ab4:	mov	r0, #0
   30ab8:	ldr	r2, [sp, #52]	; 0x34
   30abc:	cmp	sl, r2
   30ac0:	blt	30980 <GetDataSlab+0xe544>
   30ac4:	b	22560 <GetDataSlab+0x124>
   30ac8:	ldr	r0, [sp, #52]	; 0x34
   30acc:	cmp	r0, #1
   30ad0:	ldr	r1, [sp, #44]	; 0x2c
   30ad4:	blt	240b8 <GetDataSlab+0x1c7c>
   30ad8:	ldr	r0, [sp, #40]	; 0x28
   30adc:	mls	r0, r1, ip, r0
   30ae0:	ldr	r3, [r9], #4
   30ae4:	mov	lr, r9
   30ae8:	sub	r0, r0, r3
   30aec:	str	r0, [sp, #48]	; 0x30
   30af0:	add	r9, r4, #4
   30af4:	add	r0, sp, #104	; 0x68
   30af8:	orr	r6, r0, #4
   30afc:	sub	r0, fp, #72	; 0x48
   30b00:	orr	r0, r0, #4
   30b04:	str	r0, [sp, #32]
   30b08:	str	r3, [sp, #56]	; 0x38
   30b0c:	mla	r0, r1, ip, r3
   30b10:	str	r0, [sp, #36]	; 0x24
   30b14:	lsl	r0, r1, #3
   30b18:	str	r0, [sp, #40]	; 0x28
   30b1c:	lsl	r4, ip, #1
   30b20:	mov	r8, #0
   30b24:	cmp	r1, #1
   30b28:	ldr	r0, [sp, #56]	; 0x38
   30b2c:	blt	30b60 <GetDataSlab+0xe724>
   30b30:	ldr	r0, [sp, #56]	; 0x38
   30b34:	add	r0, sl, r0, lsl #1
   30b38:	ldr	ip, [sp, #44]	; 0x2c
   30b3c:	ldr	r1, [sp, #60]	; 0x3c
   30b40:	ldrsh	r3, [r0], r4
   30b44:	vmov	s0, r3
   30b48:	vcvt.f64.s32	d16, s0
   30b4c:	vstr	d16, [r1]
   30b50:	subs	ip, ip, #1
   30b54:	add	r1, r1, #8
   30b58:	bne	30b40 <GetDataSlab+0xe704>
   30b5c:	ldr	r0, [sp, #36]	; 0x24
   30b60:	ldr	r3, [sp, #48]	; 0x30
   30b64:	add	r1, sl, r3, lsl #1
   30b68:	add	sl, r1, r0, lsl #1
   30b6c:	add	r0, r0, r2
   30b70:	add	r2, r0, r3
   30b74:	ldr	r0, [fp, #24]
   30b78:	cmp	r0, #2
   30b7c:	blt	30c20 <GetDataSlab+0xe7e4>
   30b80:	mov	r1, #0
   30b84:	ldr	ip, [sp, #60]	; 0x3c
   30b88:	mov	r0, r1
   30b8c:	ldr	r1, [r6, r1, lsl #2]
   30b90:	add	r1, r1, #1
   30b94:	str	r1, [r6, r0, lsl #2]
   30b98:	ldr	r3, [r9, r0, lsl #2]
   30b9c:	sdiv	r7, r1, r3
   30ba0:	mls	r1, r7, r3, r1
   30ba4:	cmp	r1, #0
   30ba8:	bne	30c28 <GetDataSlab+0xe7ec>
   30bac:	mov	r1, #0
   30bb0:	str	r1, [r6, r0, lsl #2]
   30bb4:	add	r5, sp, #64	; 0x40
   30bb8:	add	r1, r5, r0, lsl #2
   30bbc:	ldr	r1, [r1, #4]
   30bc0:	sdiv	r3, r2, r1
   30bc4:	mls	r3, r3, r1, r2
   30bc8:	cmp	r3, #0
   30bcc:	beq	30be8 <GetDataSlab+0xe7ac>
   30bd0:	ldr	r7, [r5, r0, lsl #2]
   30bd4:	ldr	r5, [lr, r0, lsl #2]
   30bd8:	sub	r1, r1, r3
   30bdc:	mla	r1, r5, r7, r1
   30be0:	add	r2, r1, r2
   30be4:	b	30c04 <GetDataSlab+0xe7c8>
   30be8:	ldr	r1, [lr, r0, lsl #2]
   30bec:	cmp	r1, #0
   30bf0:	beq	30c08 <GetDataSlab+0xe7cc>
   30bf4:	add	r3, sp, #64	; 0x40
   30bf8:	ldr	r3, [r3, r0, lsl #2]
   30bfc:	mla	r2, r3, r1, r2
   30c00:	mul	r1, r3, r1
   30c04:	add	sl, sl, r1, lsl #1
   30c08:	add	r1, r0, #1
   30c0c:	add	r0, r0, #2
   30c10:	ldr	r3, [fp, #24]
   30c14:	cmp	r0, r3
   30c18:	blt	30b88 <GetDataSlab+0xe74c>
   30c1c:	b	30c38 <GetDataSlab+0xe7fc>
   30c20:	ldr	ip, [sp, #60]	; 0x3c
   30c24:	b	30c38 <GetDataSlab+0xe7fc>
   30c28:	ldr	r1, [sp, #32]
   30c2c:	ldr	r0, [r1, r0, lsl #2]
   30c30:	add	sl, sl, r0, lsl #1
   30c34:	add	r2, r0, r2
   30c38:	ldr	r0, [sp, #40]	; 0x28
   30c3c:	add	ip, ip, r0
   30c40:	str	ip, [sp, #60]	; 0x3c
   30c44:	ldr	r1, [sp, #44]	; 0x2c
   30c48:	add	r8, r8, r1
   30c4c:	mov	r0, #0
   30c50:	ldr	r3, [sp, #52]	; 0x34
   30c54:	cmp	r8, r3
   30c58:	blt	30b24 <GetDataSlab+0xe6e8>
   30c5c:	b	22560 <GetDataSlab+0x124>
   30c60:	ldr	r0, [sp, #52]	; 0x34
   30c64:	cmp	r0, #1
   30c68:	ldr	r1, [sp, #44]	; 0x2c
   30c6c:	blt	240b8 <GetDataSlab+0x1c7c>
   30c70:	ldr	r0, [sp, #40]	; 0x28
   30c74:	mls	r0, r1, ip, r0
   30c78:	ldr	r3, [r9], #4
   30c7c:	mov	lr, r9
   30c80:	sub	r0, r0, r3
   30c84:	str	r0, [sp, #48]	; 0x30
   30c88:	add	r9, r4, #4
   30c8c:	add	r0, sp, #104	; 0x68
   30c90:	orr	r6, r0, #4
   30c94:	sub	r0, fp, #72	; 0x48
   30c98:	orr	r0, r0, #4
   30c9c:	str	r0, [sp, #32]
   30ca0:	str	r3, [sp, #56]	; 0x38
   30ca4:	mla	r0, r1, ip, r3
   30ca8:	str	r0, [sp, #36]	; 0x24
   30cac:	lsl	r0, r1, #3
   30cb0:	str	r0, [sp, #40]	; 0x28
   30cb4:	lsl	r4, ip, #1
   30cb8:	mov	r8, #0
   30cbc:	cmp	r1, #1
   30cc0:	ldr	r0, [sp, #56]	; 0x38
   30cc4:	blt	30cf8 <GetDataSlab+0xe8bc>
   30cc8:	ldr	r0, [sp, #56]	; 0x38
   30ccc:	add	r0, sl, r0, lsl #1
   30cd0:	ldr	ip, [sp, #44]	; 0x2c
   30cd4:	ldr	r1, [sp, #60]	; 0x3c
   30cd8:	ldrh	r3, [r0], r4
   30cdc:	vmov	s0, r3
   30ce0:	vcvt.f64.u32	d16, s0
   30ce4:	vstr	d16, [r1]
   30ce8:	subs	ip, ip, #1
   30cec:	add	r1, r1, #8
   30cf0:	bne	30cd8 <GetDataSlab+0xe89c>
   30cf4:	ldr	r0, [sp, #36]	; 0x24
   30cf8:	ldr	r3, [sp, #48]	; 0x30
   30cfc:	add	r1, sl, r3, lsl #1
   30d00:	add	sl, r1, r0, lsl #1
   30d04:	add	r0, r0, r2
   30d08:	add	r2, r0, r3
   30d0c:	ldr	r0, [fp, #24]
   30d10:	cmp	r0, #2
   30d14:	blt	30db8 <GetDataSlab+0xe97c>
   30d18:	mov	r1, #0
   30d1c:	ldr	ip, [sp, #60]	; 0x3c
   30d20:	mov	r0, r1
   30d24:	ldr	r1, [r6, r1, lsl #2]
   30d28:	add	r1, r1, #1
   30d2c:	str	r1, [r6, r0, lsl #2]
   30d30:	ldr	r3, [r9, r0, lsl #2]
   30d34:	sdiv	r7, r1, r3
   30d38:	mls	r1, r7, r3, r1
   30d3c:	cmp	r1, #0
   30d40:	bne	30dc0 <GetDataSlab+0xe984>
   30d44:	mov	r1, #0
   30d48:	str	r1, [r6, r0, lsl #2]
   30d4c:	add	r5, sp, #64	; 0x40
   30d50:	add	r1, r5, r0, lsl #2
   30d54:	ldr	r1, [r1, #4]
   30d58:	sdiv	r3, r2, r1
   30d5c:	mls	r3, r3, r1, r2
   30d60:	cmp	r3, #0
   30d64:	beq	30d80 <GetDataSlab+0xe944>
   30d68:	ldr	r7, [r5, r0, lsl #2]
   30d6c:	ldr	r5, [lr, r0, lsl #2]
   30d70:	sub	r1, r1, r3
   30d74:	mla	r1, r5, r7, r1
   30d78:	add	r2, r1, r2
   30d7c:	b	30d9c <GetDataSlab+0xe960>
   30d80:	ldr	r1, [lr, r0, lsl #2]
   30d84:	cmp	r1, #0
   30d88:	beq	30da0 <GetDataSlab+0xe964>
   30d8c:	add	r3, sp, #64	; 0x40
   30d90:	ldr	r3, [r3, r0, lsl #2]
   30d94:	mla	r2, r3, r1, r2
   30d98:	mul	r1, r3, r1
   30d9c:	add	sl, sl, r1, lsl #1
   30da0:	add	r1, r0, #1
   30da4:	add	r0, r0, #2
   30da8:	ldr	r3, [fp, #24]
   30dac:	cmp	r0, r3
   30db0:	blt	30d20 <GetDataSlab+0xe8e4>
   30db4:	b	30dd0 <GetDataSlab+0xe994>
   30db8:	ldr	ip, [sp, #60]	; 0x3c
   30dbc:	b	30dd0 <GetDataSlab+0xe994>
   30dc0:	ldr	r1, [sp, #32]
   30dc4:	ldr	r0, [r1, r0, lsl #2]
   30dc8:	add	sl, sl, r0, lsl #1
   30dcc:	add	r2, r0, r2
   30dd0:	ldr	r0, [sp, #40]	; 0x28
   30dd4:	add	ip, ip, r0
   30dd8:	str	ip, [sp, #60]	; 0x3c
   30ddc:	ldr	r1, [sp, #44]	; 0x2c
   30de0:	add	r8, r8, r1
   30de4:	mov	r0, #0
   30de8:	ldr	r3, [sp, #52]	; 0x34
   30dec:	cmp	r8, r3
   30df0:	blt	30cbc <GetDataSlab+0xe880>
   30df4:	b	22560 <GetDataSlab+0x124>
   30df8:	ldr	r0, [sp, #52]	; 0x34
   30dfc:	cmp	r0, #1
   30e00:	ldr	lr, [sp, #44]	; 0x2c
   30e04:	blt	240b8 <GetDataSlab+0x1c7c>
   30e08:	ldr	r0, [sp, #40]	; 0x28
   30e0c:	mls	r0, lr, r9, r0
   30e10:	str	r0, [sp, #48]	; 0x30
   30e14:	ldr	r0, [fp, #12]
   30e18:	add	sl, r0, #4
   30e1c:	add	r8, r4, #4
   30e20:	add	r0, sp, #104	; 0x68
   30e24:	orr	r1, r0, #4
   30e28:	sub	r0, fp, #72	; 0x48
   30e2c:	orr	r0, r0, #4
   30e30:	str	r0, [sp, #32]
   30e34:	mul	r0, lr, r9
   30e38:	str	r0, [sp, #36]	; 0x24
   30e3c:	lsl	r0, lr, #3
   30e40:	str	r0, [sp, #40]	; 0x28
   30e44:	lsl	r6, r9, #2
   30e48:	mov	r9, #0
   30e4c:	ldr	r0, [fp, #12]
   30e50:	ldr	r0, [r0]
   30e54:	cmp	lr, #1
   30e58:	blt	30ea4 <GetDataSlab+0xea68>
   30e5c:	ldr	r2, [sp, #36]	; 0x24
   30e60:	mov	r4, r2
   30e64:	add	r2, r2, r3
   30e68:	add	r3, ip, r4, lsl #2
   30e6c:	add	r5, ip, r0, lsl #2
   30e70:	mov	ip, lr
   30e74:	ldr	lr, [sp, #60]	; 0x3c
   30e78:	ldr	r4, [r5], r6
   30e7c:	vmov	s0, r4
   30e80:	vcvt.f64.s32	d16, s0
   30e84:	vstr	d16, [lr]
   30e88:	subs	ip, ip, #1
   30e8c:	add	lr, lr, #8
   30e90:	bne	30e78 <GetDataSlab+0xea3c>
   30e94:	add	r2, r2, r0
   30e98:	mov	ip, r3
   30e9c:	ldr	lr, [sp, #44]	; 0x2c
   30ea0:	b	30ea8 <GetDataSlab+0xea6c>
   30ea4:	add	r2, r0, r3
   30ea8:	ldr	r3, [sp, #48]	; 0x30
   30eac:	add	ip, ip, r3, lsl #2
   30eb0:	sub	r0, r3, r0
   30eb4:	add	r3, r2, r0
   30eb8:	ldr	r0, [fp, #24]
   30ebc:	cmp	r0, #2
   30ec0:	blt	30f70 <GetDataSlab+0xeb34>
   30ec4:	mov	r2, #0
   30ec8:	mov	r0, r2
   30ecc:	ldr	r2, [r1, r2, lsl #2]
   30ed0:	add	r2, r2, #1
   30ed4:	str	r2, [r1, r0, lsl #2]
   30ed8:	ldr	r4, [r8, r0, lsl #2]
   30edc:	sdiv	r7, r2, r4
   30ee0:	mls	r2, r7, r4, r2
   30ee4:	cmp	r2, #0
   30ee8:	bne	30f60 <GetDataSlab+0xeb24>
   30eec:	mov	r2, #0
   30ef0:	str	r2, [r1, r0, lsl #2]
   30ef4:	add	r5, sp, #64	; 0x40
   30ef8:	add	r2, r5, r0, lsl #2
   30efc:	ldr	r2, [r2, #4]
   30f00:	sdiv	r7, r3, r2
   30f04:	mls	r4, r7, r2, r3
   30f08:	cmp	r4, #0
   30f0c:	beq	30f28 <GetDataSlab+0xeaec>
   30f10:	ldr	r7, [r5, r0, lsl #2]
   30f14:	ldr	r5, [sl, r0, lsl #2]
   30f18:	sub	r2, r2, r4
   30f1c:	mla	r2, r5, r7, r2
   30f20:	add	r3, r2, r3
   30f24:	b	30f44 <GetDataSlab+0xeb08>
   30f28:	ldr	r2, [sl, r0, lsl #2]
   30f2c:	cmp	r2, #0
   30f30:	beq	30f48 <GetDataSlab+0xeb0c>
   30f34:	add	r7, sp, #64	; 0x40
   30f38:	ldr	r7, [r7, r0, lsl #2]
   30f3c:	mla	r3, r7, r2, r3
   30f40:	mul	r2, r7, r2
   30f44:	add	ip, ip, r2, lsl #2
   30f48:	add	r2, r0, #1
   30f4c:	add	r0, r0, #2
   30f50:	ldr	r7, [fp, #24]
   30f54:	cmp	r0, r7
   30f58:	blt	30ec8 <GetDataSlab+0xea8c>
   30f5c:	b	30f70 <GetDataSlab+0xeb34>
   30f60:	ldr	r2, [sp, #32]
   30f64:	ldr	r0, [r2, r0, lsl #2]
   30f68:	add	ip, ip, r0, lsl #2
   30f6c:	add	r3, r0, r3
   30f70:	ldr	r0, [sp, #60]	; 0x3c
   30f74:	ldr	r2, [sp, #40]	; 0x28
   30f78:	add	r0, r0, r2
   30f7c:	str	r0, [sp, #60]	; 0x3c
   30f80:	add	r9, r9, lr
   30f84:	mov	r0, #0
   30f88:	ldr	r2, [sp, #52]	; 0x34
   30f8c:	cmp	r9, r2
   30f90:	blt	30e4c <GetDataSlab+0xea10>
   30f94:	b	22560 <GetDataSlab+0x124>
   30f98:	ldr	r0, [sp, #52]	; 0x34
   30f9c:	cmp	r0, #1
   30fa0:	ldr	lr, [sp, #44]	; 0x2c
   30fa4:	blt	240b8 <GetDataSlab+0x1c7c>
   30fa8:	ldr	r0, [sp, #40]	; 0x28
   30fac:	mls	r0, lr, r9, r0
   30fb0:	str	r0, [sp, #48]	; 0x30
   30fb4:	ldr	r0, [fp, #12]
   30fb8:	add	sl, r0, #4
   30fbc:	add	r8, r4, #4
   30fc0:	add	r0, sp, #104	; 0x68
   30fc4:	orr	r1, r0, #4
   30fc8:	sub	r0, fp, #72	; 0x48
   30fcc:	orr	r0, r0, #4
   30fd0:	str	r0, [sp, #32]
   30fd4:	mul	r0, lr, r9
   30fd8:	str	r0, [sp, #36]	; 0x24
   30fdc:	lsl	r0, lr, #3
   30fe0:	str	r0, [sp, #40]	; 0x28
   30fe4:	lsl	r6, r9, #2
   30fe8:	mov	r9, #0
   30fec:	ldr	r0, [fp, #12]
   30ff0:	ldr	r0, [r0]
   30ff4:	cmp	lr, #1
   30ff8:	blt	31044 <GetDataSlab+0xec08>
   30ffc:	ldr	r2, [sp, #36]	; 0x24
   31000:	mov	r4, r2
   31004:	add	r2, r2, r3
   31008:	add	r3, ip, r4, lsl #2
   3100c:	add	r5, ip, r0, lsl #2
   31010:	mov	ip, lr
   31014:	ldr	lr, [sp, #60]	; 0x3c
   31018:	ldr	r4, [r5], r6
   3101c:	vmov	s0, r4
   31020:	vcvt.f64.u32	d16, s0
   31024:	vstr	d16, [lr]
   31028:	subs	ip, ip, #1
   3102c:	add	lr, lr, #8
   31030:	bne	31018 <GetDataSlab+0xebdc>
   31034:	add	r2, r2, r0
   31038:	mov	ip, r3
   3103c:	ldr	lr, [sp, #44]	; 0x2c
   31040:	b	31048 <GetDataSlab+0xec0c>
   31044:	add	r2, r0, r3
   31048:	ldr	r3, [sp, #48]	; 0x30
   3104c:	add	ip, ip, r3, lsl #2
   31050:	sub	r0, r3, r0
   31054:	add	r3, r2, r0
   31058:	ldr	r0, [fp, #24]
   3105c:	cmp	r0, #2
   31060:	blt	31110 <GetDataSlab+0xecd4>
   31064:	mov	r2, #0
   31068:	mov	r0, r2
   3106c:	ldr	r2, [r1, r2, lsl #2]
   31070:	add	r2, r2, #1
   31074:	str	r2, [r1, r0, lsl #2]
   31078:	ldr	r4, [r8, r0, lsl #2]
   3107c:	sdiv	r7, r2, r4
   31080:	mls	r2, r7, r4, r2
   31084:	cmp	r2, #0
   31088:	bne	31100 <GetDataSlab+0xecc4>
   3108c:	mov	r2, #0
   31090:	str	r2, [r1, r0, lsl #2]
   31094:	add	r5, sp, #64	; 0x40
   31098:	add	r2, r5, r0, lsl #2
   3109c:	ldr	r2, [r2, #4]
   310a0:	sdiv	r7, r3, r2
   310a4:	mls	r4, r7, r2, r3
   310a8:	cmp	r4, #0
   310ac:	beq	310c8 <GetDataSlab+0xec8c>
   310b0:	ldr	r7, [r5, r0, lsl #2]
   310b4:	ldr	r5, [sl, r0, lsl #2]
   310b8:	sub	r2, r2, r4
   310bc:	mla	r2, r5, r7, r2
   310c0:	add	r3, r2, r3
   310c4:	b	310e4 <GetDataSlab+0xeca8>
   310c8:	ldr	r2, [sl, r0, lsl #2]
   310cc:	cmp	r2, #0
   310d0:	beq	310e8 <GetDataSlab+0xecac>
   310d4:	add	r7, sp, #64	; 0x40
   310d8:	ldr	r7, [r7, r0, lsl #2]
   310dc:	mla	r3, r7, r2, r3
   310e0:	mul	r2, r7, r2
   310e4:	add	ip, ip, r2, lsl #2
   310e8:	add	r2, r0, #1
   310ec:	add	r0, r0, #2
   310f0:	ldr	r7, [fp, #24]
   310f4:	cmp	r0, r7
   310f8:	blt	31068 <GetDataSlab+0xec2c>
   310fc:	b	31110 <GetDataSlab+0xecd4>
   31100:	ldr	r2, [sp, #32]
   31104:	ldr	r0, [r2, r0, lsl #2]
   31108:	add	ip, ip, r0, lsl #2
   3110c:	add	r3, r0, r3
   31110:	ldr	r0, [sp, #60]	; 0x3c
   31114:	ldr	r2, [sp, #40]	; 0x28
   31118:	add	r0, r0, r2
   3111c:	str	r0, [sp, #60]	; 0x3c
   31120:	add	r9, r9, lr
   31124:	mov	r0, #0
   31128:	ldr	r2, [sp, #52]	; 0x34
   3112c:	cmp	r9, r2
   31130:	blt	30fec <GetDataSlab+0xebb0>
   31134:	b	22560 <GetDataSlab+0x124>
   31138:	ldr	r0, [sp, #52]	; 0x34
   3113c:	cmp	r0, #1
   31140:	ldr	r1, [sp, #44]	; 0x2c
   31144:	blt	240b8 <GetDataSlab+0x1c7c>
   31148:	ldr	r0, [sp, #40]	; 0x28
   3114c:	mls	r0, r1, ip, r0
   31150:	ldr	r3, [r9], #4
   31154:	mov	lr, r9
   31158:	sub	r0, r0, r3
   3115c:	str	r0, [sp, #48]	; 0x30
   31160:	add	r9, r4, #4
   31164:	add	r0, sp, #104	; 0x68
   31168:	orr	r6, r0, #4
   3116c:	sub	r0, fp, #72	; 0x48
   31170:	orr	r0, r0, #4
   31174:	str	r0, [sp, #32]
   31178:	str	r3, [sp, #56]	; 0x38
   3117c:	mla	r0, r1, ip, r3
   31180:	str	r0, [sp, #36]	; 0x24
   31184:	lsl	r0, r1, #3
   31188:	str	r0, [sp, #40]	; 0x28
   3118c:	lsl	r4, ip, #2
   31190:	mov	r8, #0
   31194:	cmp	r1, #1
   31198:	ldr	r0, [sp, #56]	; 0x38
   3119c:	blt	311d0 <GetDataSlab+0xed94>
   311a0:	ldr	r0, [sp, #56]	; 0x38
   311a4:	add	r0, sl, r0, lsl #2
   311a8:	mov	ip, r1
   311ac:	ldr	r1, [sp, #60]	; 0x3c
   311b0:	vldr	s0, [r0]
   311b4:	vcvt.f64.f32	d16, s0
   311b8:	vstr	d16, [r1]
   311bc:	add	r0, r0, r4
   311c0:	subs	ip, ip, #1
   311c4:	add	r1, r1, #8
   311c8:	bne	311b0 <GetDataSlab+0xed74>
   311cc:	ldr	r0, [sp, #36]	; 0x24
   311d0:	ldr	r3, [sp, #48]	; 0x30
   311d4:	add	r1, sl, r3, lsl #2
   311d8:	add	sl, r1, r0, lsl #2
   311dc:	add	r0, r0, r2
   311e0:	add	r2, r0, r3
   311e4:	ldr	r0, [fp, #24]
   311e8:	cmp	r0, #2
   311ec:	blt	31290 <GetDataSlab+0xee54>
   311f0:	mov	r1, #0
   311f4:	ldr	ip, [sp, #60]	; 0x3c
   311f8:	mov	r0, r1
   311fc:	ldr	r1, [r6, r1, lsl #2]
   31200:	add	r1, r1, #1
   31204:	str	r1, [r6, r0, lsl #2]
   31208:	ldr	r3, [r9, r0, lsl #2]
   3120c:	sdiv	r7, r1, r3
   31210:	mls	r1, r7, r3, r1
   31214:	cmp	r1, #0
   31218:	bne	31298 <GetDataSlab+0xee5c>
   3121c:	mov	r1, #0
   31220:	str	r1, [r6, r0, lsl #2]
   31224:	add	r5, sp, #64	; 0x40
   31228:	add	r1, r5, r0, lsl #2
   3122c:	ldr	r1, [r1, #4]
   31230:	sdiv	r3, r2, r1
   31234:	mls	r3, r3, r1, r2
   31238:	cmp	r3, #0
   3123c:	beq	31258 <GetDataSlab+0xee1c>
   31240:	ldr	r7, [r5, r0, lsl #2]
   31244:	ldr	r5, [lr, r0, lsl #2]
   31248:	sub	r1, r1, r3
   3124c:	mla	r1, r5, r7, r1
   31250:	add	r2, r1, r2
   31254:	b	31274 <GetDataSlab+0xee38>
   31258:	ldr	r1, [lr, r0, lsl #2]
   3125c:	cmp	r1, #0
   31260:	beq	31278 <GetDataSlab+0xee3c>
   31264:	add	r3, sp, #64	; 0x40
   31268:	ldr	r3, [r3, r0, lsl #2]
   3126c:	mla	r2, r3, r1, r2
   31270:	mul	r1, r3, r1
   31274:	add	sl, sl, r1, lsl #2
   31278:	add	r1, r0, #1
   3127c:	add	r0, r0, #2
   31280:	ldr	r3, [fp, #24]
   31284:	cmp	r0, r3
   31288:	blt	311f8 <GetDataSlab+0xedbc>
   3128c:	b	312a8 <GetDataSlab+0xee6c>
   31290:	ldr	ip, [sp, #60]	; 0x3c
   31294:	b	312a8 <GetDataSlab+0xee6c>
   31298:	ldr	r1, [sp, #32]
   3129c:	ldr	r0, [r1, r0, lsl #2]
   312a0:	add	sl, sl, r0, lsl #2
   312a4:	add	r2, r0, r2
   312a8:	ldr	r0, [sp, #40]	; 0x28
   312ac:	add	ip, ip, r0
   312b0:	str	ip, [sp, #60]	; 0x3c
   312b4:	ldr	r1, [sp, #44]	; 0x2c
   312b8:	add	r8, r8, r1
   312bc:	mov	r0, #0
   312c0:	ldr	r3, [sp, #52]	; 0x34
   312c4:	cmp	r8, r3
   312c8:	blt	31194 <GetDataSlab+0xed58>
   312cc:	b	22560 <GetDataSlab+0x124>
   312d0:	ldr	r0, [sp, #52]	; 0x34
   312d4:	cmp	r0, #1
   312d8:	ldr	r1, [sp, #44]	; 0x2c
   312dc:	blt	240b8 <GetDataSlab+0x1c7c>
   312e0:	ldr	r0, [sp, #40]	; 0x28
   312e4:	mls	r0, r1, r8, r0
   312e8:	ldr	r3, [r9], #4
   312ec:	mov	lr, r9
   312f0:	sub	r0, r0, r3
   312f4:	str	r0, [sp, #48]	; 0x30
   312f8:	add	sl, r4, #4
   312fc:	add	r0, sp, #104	; 0x68
   31300:	orr	r6, r0, #4
   31304:	sub	r0, fp, #72	; 0x48
   31308:	orr	r0, r0, #4
   3130c:	str	r0, [sp, #32]
   31310:	str	r3, [sp, #56]	; 0x38
   31314:	mla	r0, r1, r8, r3
   31318:	str	r0, [sp, #36]	; 0x24
   3131c:	lsl	r0, r1, #3
   31320:	str	r0, [sp, #40]	; 0x28
   31324:	lsl	r4, r8, #3
   31328:	mov	r8, #0
   3132c:	cmp	r1, #1
   31330:	ldr	r0, [sp, #56]	; 0x38
   31334:	blt	31364 <GetDataSlab+0xef28>
   31338:	ldr	r0, [sp, #56]	; 0x38
   3133c:	add	r0, ip, r0, lsl #3
   31340:	ldr	r1, [sp, #44]	; 0x2c
   31344:	ldr	r3, [sp, #60]	; 0x3c
   31348:	vldr	d16, [r0]
   3134c:	vstr	d16, [r3]
   31350:	add	r0, r0, r4
   31354:	subs	r1, r1, #1
   31358:	add	r3, r3, #8
   3135c:	bne	31348 <GetDataSlab+0xef0c>
   31360:	ldr	r0, [sp, #36]	; 0x24
   31364:	ldr	r3, [sp, #48]	; 0x30
   31368:	add	r1, ip, r3, lsl #3
   3136c:	add	ip, r1, r0, lsl #3
   31370:	add	r0, r0, r2
   31374:	add	r2, r0, r3
   31378:	ldr	r0, [fp, #24]
   3137c:	cmp	r0, #2
   31380:	blt	31434 <GetDataSlab+0xeff8>
   31384:	mov	r9, #0
   31388:	mov	r0, r9
   3138c:	ldr	r1, [r6, r9, lsl #2]
   31390:	add	r1, r1, #1
   31394:	str	r1, [r6, r9, lsl #2]
   31398:	ldr	r3, [sl, r9, lsl #2]
   3139c:	sdiv	r7, r1, r3
   313a0:	mls	r1, r7, r3, r1
   313a4:	cmp	r1, #0
   313a8:	bne	31424 <GetDataSlab+0xefe8>
   313ac:	mov	r1, #0
   313b0:	str	r1, [r6, r0, lsl #2]
   313b4:	add	r5, sp, #64	; 0x40
   313b8:	add	r1, r5, r0, lsl #2
   313bc:	ldr	r1, [r1, #4]
   313c0:	sdiv	r3, r2, r1
   313c4:	mls	r3, r3, r1, r2
   313c8:	cmp	r3, #0
   313cc:	beq	313e8 <GetDataSlab+0xefac>
   313d0:	ldr	r7, [r5, r0, lsl #2]
   313d4:	ldr	r5, [lr, r0, lsl #2]
   313d8:	sub	r1, r1, r3
   313dc:	mla	r1, r5, r7, r1
   313e0:	add	r2, r1, r2
   313e4:	b	31408 <GetDataSlab+0xefcc>
   313e8:	mov	r1, lr
   313ec:	ldr	r1, [lr, r0, lsl #2]
   313f0:	cmp	r1, #0
   313f4:	beq	3140c <GetDataSlab+0xefd0>
   313f8:	add	r3, sp, #64	; 0x40
   313fc:	ldr	r3, [r3, r0, lsl #2]
   31400:	mla	r2, r3, r1, r2
   31404:	mul	r1, r3, r1
   31408:	add	ip, ip, r1, lsl #3
   3140c:	add	r9, r0, #1
   31410:	add	r0, r0, #2
   31414:	ldr	r1, [fp, #24]
   31418:	cmp	r0, r1
   3141c:	blt	31388 <GetDataSlab+0xef4c>
   31420:	b	31434 <GetDataSlab+0xeff8>
   31424:	ldr	r1, [sp, #32]
   31428:	ldr	r0, [r1, r0, lsl #2]
   3142c:	add	ip, ip, r0, lsl #3
   31430:	add	r2, r0, r2
   31434:	ldr	r0, [sp, #60]	; 0x3c
   31438:	ldr	r1, [sp, #40]	; 0x28
   3143c:	add	r0, r0, r1
   31440:	str	r0, [sp, #60]	; 0x3c
   31444:	ldr	r1, [sp, #44]	; 0x2c
   31448:	add	r8, r8, r1
   3144c:	mov	r0, #0
   31450:	ldr	r3, [sp, #52]	; 0x34
   31454:	cmp	r8, r3
   31458:	blt	3132c <GetDataSlab+0xeef0>
   3145c:	b	22560 <GetDataSlab+0x124>
   31460:	ldr	r0, [sp, #40]	; 0x28
   31464:	cmp	r0, #1
   31468:	blt	39628 <GetDataSlab+0x171ec>
   3146c:	ldr	r2, [sp, #32]
   31470:	ldr	r0, [sp, #28]
   31474:	mls	r0, r2, ip, r0
   31478:	ldr	r1, [fp, #12]
   3147c:	ldr	r3, [r1], #4
   31480:	sub	r0, r0, r3
   31484:	str	r0, [sp, #20]
   31488:	add	r0, r4, #4
   3148c:	str	r0, [sp, #44]	; 0x2c
   31490:	add	r0, sp, #104	; 0x68
   31494:	orr	r4, r0, #4
   31498:	sub	r0, fp, #72	; 0x48
   3149c:	orr	r0, r0, #4
   314a0:	str	r0, [sp, #4]
   314a4:	str	r3, [sp, #24]
   314a8:	mla	r0, r2, ip, r3
   314ac:	str	r0, [sp, #8]
   314b0:	lsl	r0, r2, #3
   314b4:	str	r0, [sp, #16]
   314b8:	lsl	r8, ip, #3
   314bc:	mov	r6, r1
   314c0:	mov	ip, r2
   314c4:	ldr	r0, [sp, #60]	; 0x3c
   314c8:	str	r0, [sp, #36]	; 0x24
   314cc:	mov	r1, #0
   314d0:	str	r6, [sp, #12]
   314d4:	str	r1, [sp, #28]
   314d8:	cmp	ip, #1
   314dc:	ldr	r0, [sp, #24]
   314e0:	blt	31524 <GetDataSlab+0xf0e8>
   314e4:	ldr	r0, [sp, #24]
   314e8:	add	r7, r9, r0, lsl #3
   314ec:	mov	sl, ip
   314f0:	ldr	r6, [sp, #36]	; 0x24
   314f4:	ldrd	r0, [r7]
   314f8:	bl	48b60 <__aeabi_l2d>
   314fc:	strd	r0, [r6]
   31500:	add	r7, r7, r8
   31504:	subs	sl, sl, #1
   31508:	add	r6, r6, #8
   3150c:	bne	314f4 <GetDataSlab+0xf0b8>
   31510:	ldr	r0, [sp, #8]
   31514:	add	sl, sp, #64	; 0x40
   31518:	ldr	lr, [fp, #16]
   3151c:	ldr	ip, [sp, #32]
   31520:	ldr	r6, [sp, #12]
   31524:	ldr	r2, [sp, #20]
   31528:	add	r1, r9, r2, lsl #3
   3152c:	add	r9, r1, r0, lsl #3
   31530:	add	r0, r0, r5
   31534:	add	r5, r0, r2
   31538:	ldr	r0, [fp, #24]
   3153c:	cmp	r0, #2
   31540:	blt	315ec <GetDataSlab+0xf1b0>
   31544:	mov	r1, #0
   31548:	mov	r0, r1
   3154c:	ldr	r1, [r4, r1, lsl #2]
   31550:	add	r1, r1, #1
   31554:	str	r1, [r4, r0, lsl #2]
   31558:	ldr	r2, [sp, #44]	; 0x2c
   3155c:	ldr	r2, [r2, r0, lsl #2]
   31560:	sdiv	r3, r1, r2
   31564:	mls	r1, r3, r2, r1
   31568:	cmp	r1, #0
   3156c:	bne	315dc <GetDataSlab+0xf1a0>
   31570:	mov	r1, #0
   31574:	str	r1, [r4, r0, lsl #2]
   31578:	add	r1, sl, r0, lsl #2
   3157c:	ldr	r1, [r1, #4]
   31580:	sdiv	r2, r5, r1
   31584:	mls	r2, r2, r1, r5
   31588:	cmp	r2, #0
   3158c:	beq	315a8 <GetDataSlab+0xf16c>
   31590:	ldr	r3, [sl, r0, lsl #2]
   31594:	ldr	r7, [r6, r0, lsl #2]
   31598:	sub	r1, r1, r2
   3159c:	mla	r1, r7, r3, r1
   315a0:	add	r5, r1, r5
   315a4:	b	315c0 <GetDataSlab+0xf184>
   315a8:	ldr	r1, [r6, r0, lsl #2]
   315ac:	cmp	r1, #0
   315b0:	beq	315c4 <GetDataSlab+0xf188>
   315b4:	ldr	r2, [sl, r0, lsl #2]
   315b8:	mla	r5, r2, r1, r5
   315bc:	mul	r1, r2, r1
   315c0:	add	r9, r9, r1, lsl #3
   315c4:	add	r1, r0, #1
   315c8:	add	r0, r0, #2
   315cc:	ldr	r2, [fp, #24]
   315d0:	cmp	r0, r2
   315d4:	blt	31548 <GetDataSlab+0xf10c>
   315d8:	b	315ec <GetDataSlab+0xf1b0>
   315dc:	ldr	r1, [sp, #4]
   315e0:	ldr	r0, [r1, r0, lsl #2]
   315e4:	add	r9, r9, r0, lsl #3
   315e8:	add	r5, r0, r5
   315ec:	ldr	r0, [sp, #16]
   315f0:	ldr	r1, [sp, #36]	; 0x24
   315f4:	add	r1, r1, r0
   315f8:	str	r1, [sp, #36]	; 0x24
   315fc:	ldr	r1, [sp, #28]
   31600:	add	r1, r1, ip
   31604:	ldr	r0, [sp, #40]	; 0x28
   31608:	cmp	r1, r0
   3160c:	blt	314d4 <GetDataSlab+0xf098>
   31610:	mov	r0, #0
   31614:	ldr	r4, [fp, #20]
   31618:	b	3962c <GetDataSlab+0x171f0>
   3161c:	ldr	r0, [sp, #52]	; 0x34
   31620:	cmp	r0, #1
   31624:	ldr	r0, [fp, #20]
   31628:	blt	240b8 <GetDataSlab+0x1c7c>
   3162c:	ldr	r2, [sp, #44]	; 0x2c
   31630:	ldr	r7, [sp, #40]	; 0x28
   31634:	mls	r7, r2, lr, r7
   31638:	str	r7, [sp, #48]	; 0x30
   3163c:	mul	r7, r2, lr
   31640:	str	r7, [sp, #36]	; 0x24
   31644:	add	r8, r9, #4
   31648:	add	r9, r0, #4
   3164c:	add	r0, sp, #104	; 0x68
   31650:	orr	r6, r0, #4
   31654:	orr	r0, r1, #4
   31658:	str	r0, [sp, #32]
   3165c:	mov	r1, r2
   31660:	lsl	r0, r2, #2
   31664:	str	r0, [sp, #40]	; 0x28
   31668:	mov	sl, #0
   3166c:	ldr	r0, [fp, #12]
   31670:	ldr	r0, [r0]
   31674:	cmp	r1, #1
   31678:	blt	316c0 <GetDataSlab+0xf284>
   3167c:	mov	r2, r1
   31680:	ldr	r1, [sp, #36]	; 0x24
   31684:	mov	r7, r1
   31688:	add	r1, r1, r3
   3168c:	add	r3, r5, r7
   31690:	add	r5, r5, r0
   31694:	ldr	ip, [sp, #60]	; 0x3c
   31698:	ldrb	r4, [r5], lr
   3169c:	vmov	s0, r4
   316a0:	vcvt.f32.u32	s0, s0
   316a4:	vstr	s0, [ip]
   316a8:	subs	r2, r2, #1
   316ac:	add	ip, ip, #4
   316b0:	bne	31698 <GetDataSlab+0xf25c>
   316b4:	add	r2, r1, r0
   316b8:	mov	r5, r3
   316bc:	b	316c4 <GetDataSlab+0xf288>
   316c0:	add	r2, r0, r3
   316c4:	ldr	ip, [sp, #60]	; 0x3c
   316c8:	ldr	r1, [sp, #48]	; 0x30
   316cc:	add	r5, r5, r1
   316d0:	sub	r0, r1, r0
   316d4:	add	r3, r2, r0
   316d8:	ldr	r0, [fp, #24]
   316dc:	cmp	r0, #2
   316e0:	blt	3178c <GetDataSlab+0xf350>
   316e4:	mov	r2, #0
   316e8:	mov	r0, r2
   316ec:	ldr	r1, [r6, r2, lsl #2]
   316f0:	add	r1, r1, #1
   316f4:	str	r1, [r6, r2, lsl #2]
   316f8:	ldr	r2, [r9, r2, lsl #2]
   316fc:	sdiv	r4, r1, r2
   31700:	mls	r1, r4, r2, r1
   31704:	cmp	r1, #0
   31708:	bne	3177c <GetDataSlab+0xf340>
   3170c:	mov	r1, #0
   31710:	str	r1, [r6, r0, lsl #2]
   31714:	add	r4, sp, #64	; 0x40
   31718:	add	r1, r4, r0, lsl #2
   3171c:	ldr	r2, [r1, #4]
   31720:	sdiv	r1, r3, r2
   31724:	mls	r1, r1, r2, r3
   31728:	cmp	r1, #0
   3172c:	beq	3174c <GetDataSlab+0xf310>
   31730:	ldr	r4, [r4, r0, lsl #2]
   31734:	ldr	r7, [r8, r0, lsl #2]
   31738:	sub	r1, r2, r1
   3173c:	mla	r1, r7, r4, r1
   31740:	add	r3, r1, r3
   31744:	add	r5, r5, r1
   31748:	b	31764 <GetDataSlab+0xf328>
   3174c:	ldr	r1, [r8, r0, lsl #2]
   31750:	cmp	r1, #0
   31754:	addne	r2, sp, #64	; 0x40
   31758:	ldrne	r2, [r2, r0, lsl #2]
   3175c:	mlane	r3, r2, r1, r3
   31760:	mlane	r5, r2, r1, r5
   31764:	add	r2, r0, #1
   31768:	add	r0, r0, #2
   3176c:	ldr	r1, [fp, #24]
   31770:	cmp	r0, r1
   31774:	blt	316e8 <GetDataSlab+0xf2ac>
   31778:	b	3178c <GetDataSlab+0xf350>
   3177c:	ldr	r1, [sp, #32]
   31780:	ldr	r0, [r1, r0, lsl #2]
   31784:	add	r5, r5, r0
   31788:	add	r3, r0, r3
   3178c:	ldr	r0, [sp, #40]	; 0x28
   31790:	add	ip, ip, r0
   31794:	str	ip, [sp, #60]	; 0x3c
   31798:	ldr	r1, [sp, #44]	; 0x2c
   3179c:	add	sl, sl, r1
   317a0:	mov	r0, #0
   317a4:	ldr	r2, [sp, #52]	; 0x34
   317a8:	cmp	sl, r2
   317ac:	blt	3166c <GetDataSlab+0xf230>
   317b0:	b	22560 <GetDataSlab+0x124>
   317b4:	ldr	r0, [sp, #52]	; 0x34
   317b8:	cmp	r0, #1
   317bc:	ldr	r1, [sp, #44]	; 0x2c
   317c0:	blt	240b8 <GetDataSlab+0x1c7c>
   317c4:	ldr	r0, [sp, #40]	; 0x28
   317c8:	mls	r0, r1, ip, r0
   317cc:	ldr	r3, [r9], #4
   317d0:	mov	lr, r9
   317d4:	sub	r0, r0, r3
   317d8:	str	r0, [sp, #48]	; 0x30
   317dc:	add	r9, r4, #4
   317e0:	add	r0, sp, #104	; 0x68
   317e4:	orr	r6, r0, #4
   317e8:	sub	r0, fp, #72	; 0x48
   317ec:	orr	r0, r0, #4
   317f0:	str	r0, [sp, #32]
   317f4:	str	r3, [sp, #56]	; 0x38
   317f8:	mla	r0, r1, ip, r3
   317fc:	str	r0, [sp, #36]	; 0x24
   31800:	lsl	r0, r1, #2
   31804:	str	r0, [sp, #40]	; 0x28
   31808:	lsl	r4, ip, #1
   3180c:	mov	r8, #0
   31810:	cmp	r1, #1
   31814:	ldr	r0, [sp, #56]	; 0x38
   31818:	blt	3184c <GetDataSlab+0xf410>
   3181c:	ldr	r0, [sp, #56]	; 0x38
   31820:	add	r0, sl, r0, lsl #1
   31824:	ldr	ip, [sp, #44]	; 0x2c
   31828:	ldr	r1, [sp, #60]	; 0x3c
   3182c:	ldrsh	r3, [r0], r4
   31830:	vmov	s0, r3
   31834:	vcvt.f32.s32	s0, s0
   31838:	vstr	s0, [r1]
   3183c:	subs	ip, ip, #1
   31840:	add	r1, r1, #4
   31844:	bne	3182c <GetDataSlab+0xf3f0>
   31848:	ldr	r0, [sp, #36]	; 0x24
   3184c:	ldr	r3, [sp, #48]	; 0x30
   31850:	add	r1, sl, r3, lsl #1
   31854:	add	sl, r1, r0, lsl #1
   31858:	add	r0, r0, r2
   3185c:	add	r2, r0, r3
   31860:	ldr	r0, [fp, #24]
   31864:	cmp	r0, #2
   31868:	blt	3190c <GetDataSlab+0xf4d0>
   3186c:	mov	r1, #0
   31870:	ldr	ip, [sp, #60]	; 0x3c
   31874:	mov	r0, r1
   31878:	ldr	r1, [r6, r1, lsl #2]
   3187c:	add	r1, r1, #1
   31880:	str	r1, [r6, r0, lsl #2]
   31884:	ldr	r3, [r9, r0, lsl #2]
   31888:	sdiv	r7, r1, r3
   3188c:	mls	r1, r7, r3, r1
   31890:	cmp	r1, #0
   31894:	bne	31914 <GetDataSlab+0xf4d8>
   31898:	mov	r1, #0
   3189c:	str	r1, [r6, r0, lsl #2]
   318a0:	add	r5, sp, #64	; 0x40
   318a4:	add	r1, r5, r0, lsl #2
   318a8:	ldr	r1, [r1, #4]
   318ac:	sdiv	r3, r2, r1
   318b0:	mls	r3, r3, r1, r2
   318b4:	cmp	r3, #0
   318b8:	beq	318d4 <GetDataSlab+0xf498>
   318bc:	ldr	r7, [r5, r0, lsl #2]
   318c0:	ldr	r5, [lr, r0, lsl #2]
   318c4:	sub	r1, r1, r3
   318c8:	mla	r1, r5, r7, r1
   318cc:	add	r2, r1, r2
   318d0:	b	318f0 <GetDataSlab+0xf4b4>
   318d4:	ldr	r1, [lr, r0, lsl #2]
   318d8:	cmp	r1, #0
   318dc:	beq	318f4 <GetDataSlab+0xf4b8>
   318e0:	add	r3, sp, #64	; 0x40
   318e4:	ldr	r3, [r3, r0, lsl #2]
   318e8:	mla	r2, r3, r1, r2
   318ec:	mul	r1, r3, r1
   318f0:	add	sl, sl, r1, lsl #1
   318f4:	add	r1, r0, #1
   318f8:	add	r0, r0, #2
   318fc:	ldr	r3, [fp, #24]
   31900:	cmp	r0, r3
   31904:	blt	31874 <GetDataSlab+0xf438>
   31908:	b	31924 <GetDataSlab+0xf4e8>
   3190c:	ldr	ip, [sp, #60]	; 0x3c
   31910:	b	31924 <GetDataSlab+0xf4e8>
   31914:	ldr	r1, [sp, #32]
   31918:	ldr	r0, [r1, r0, lsl #2]
   3191c:	add	sl, sl, r0, lsl #1
   31920:	add	r2, r0, r2
   31924:	ldr	r0, [sp, #40]	; 0x28
   31928:	add	ip, ip, r0
   3192c:	str	ip, [sp, #60]	; 0x3c
   31930:	ldr	r1, [sp, #44]	; 0x2c
   31934:	add	r8, r8, r1
   31938:	mov	r0, #0
   3193c:	ldr	r3, [sp, #52]	; 0x34
   31940:	cmp	r8, r3
   31944:	blt	31810 <GetDataSlab+0xf3d4>
   31948:	b	22560 <GetDataSlab+0x124>
   3194c:	ldr	r0, [sp, #52]	; 0x34
   31950:	cmp	r0, #1
   31954:	ldr	r1, [sp, #44]	; 0x2c
   31958:	blt	240b8 <GetDataSlab+0x1c7c>
   3195c:	ldr	r0, [sp, #40]	; 0x28
   31960:	mls	r0, r1, ip, r0
   31964:	ldr	r3, [r9], #4
   31968:	mov	lr, r9
   3196c:	sub	r0, r0, r3
   31970:	str	r0, [sp, #48]	; 0x30
   31974:	add	r9, r4, #4
   31978:	add	r0, sp, #104	; 0x68
   3197c:	orr	r6, r0, #4
   31980:	sub	r0, fp, #72	; 0x48
   31984:	orr	r0, r0, #4
   31988:	str	r0, [sp, #32]
   3198c:	str	r3, [sp, #56]	; 0x38
   31990:	mla	r0, r1, ip, r3
   31994:	str	r0, [sp, #36]	; 0x24
   31998:	lsl	r0, r1, #2
   3199c:	str	r0, [sp, #40]	; 0x28
   319a0:	lsl	r4, ip, #1
   319a4:	mov	r8, #0
   319a8:	cmp	r1, #1
   319ac:	ldr	r0, [sp, #56]	; 0x38
   319b0:	blt	319e4 <GetDataSlab+0xf5a8>
   319b4:	ldr	r0, [sp, #56]	; 0x38
   319b8:	add	r0, sl, r0, lsl #1
   319bc:	ldr	ip, [sp, #44]	; 0x2c
   319c0:	ldr	r1, [sp, #60]	; 0x3c
   319c4:	ldrh	r3, [r0], r4
   319c8:	vmov	s0, r3
   319cc:	vcvt.f32.u32	s0, s0
   319d0:	vstr	s0, [r1]
   319d4:	subs	ip, ip, #1
   319d8:	add	r1, r1, #4
   319dc:	bne	319c4 <GetDataSlab+0xf588>
   319e0:	ldr	r0, [sp, #36]	; 0x24
   319e4:	ldr	r3, [sp, #48]	; 0x30
   319e8:	add	r1, sl, r3, lsl #1
   319ec:	add	sl, r1, r0, lsl #1
   319f0:	add	r0, r0, r2
   319f4:	add	r2, r0, r3
   319f8:	ldr	r0, [fp, #24]
   319fc:	cmp	r0, #2
   31a00:	blt	31aa4 <GetDataSlab+0xf668>
   31a04:	mov	r1, #0
   31a08:	ldr	ip, [sp, #60]	; 0x3c
   31a0c:	mov	r0, r1
   31a10:	ldr	r1, [r6, r1, lsl #2]
   31a14:	add	r1, r1, #1
   31a18:	str	r1, [r6, r0, lsl #2]
   31a1c:	ldr	r3, [r9, r0, lsl #2]
   31a20:	sdiv	r7, r1, r3
   31a24:	mls	r1, r7, r3, r1
   31a28:	cmp	r1, #0
   31a2c:	bne	31aac <GetDataSlab+0xf670>
   31a30:	mov	r1, #0
   31a34:	str	r1, [r6, r0, lsl #2]
   31a38:	add	r5, sp, #64	; 0x40
   31a3c:	add	r1, r5, r0, lsl #2
   31a40:	ldr	r1, [r1, #4]
   31a44:	sdiv	r3, r2, r1
   31a48:	mls	r3, r3, r1, r2
   31a4c:	cmp	r3, #0
   31a50:	beq	31a6c <GetDataSlab+0xf630>
   31a54:	ldr	r7, [r5, r0, lsl #2]
   31a58:	ldr	r5, [lr, r0, lsl #2]
   31a5c:	sub	r1, r1, r3
   31a60:	mla	r1, r5, r7, r1
   31a64:	add	r2, r1, r2
   31a68:	b	31a88 <GetDataSlab+0xf64c>
   31a6c:	ldr	r1, [lr, r0, lsl #2]
   31a70:	cmp	r1, #0
   31a74:	beq	31a8c <GetDataSlab+0xf650>
   31a78:	add	r3, sp, #64	; 0x40
   31a7c:	ldr	r3, [r3, r0, lsl #2]
   31a80:	mla	r2, r3, r1, r2
   31a84:	mul	r1, r3, r1
   31a88:	add	sl, sl, r1, lsl #1
   31a8c:	add	r1, r0, #1
   31a90:	add	r0, r0, #2
   31a94:	ldr	r3, [fp, #24]
   31a98:	cmp	r0, r3
   31a9c:	blt	31a0c <GetDataSlab+0xf5d0>
   31aa0:	b	31abc <GetDataSlab+0xf680>
   31aa4:	ldr	ip, [sp, #60]	; 0x3c
   31aa8:	b	31abc <GetDataSlab+0xf680>
   31aac:	ldr	r1, [sp, #32]
   31ab0:	ldr	r0, [r1, r0, lsl #2]
   31ab4:	add	sl, sl, r0, lsl #1
   31ab8:	add	r2, r0, r2
   31abc:	ldr	r0, [sp, #40]	; 0x28
   31ac0:	add	ip, ip, r0
   31ac4:	str	ip, [sp, #60]	; 0x3c
   31ac8:	ldr	r1, [sp, #44]	; 0x2c
   31acc:	add	r8, r8, r1
   31ad0:	mov	r0, #0
   31ad4:	ldr	r3, [sp, #52]	; 0x34
   31ad8:	cmp	r8, r3
   31adc:	blt	319a8 <GetDataSlab+0xf56c>
   31ae0:	b	22560 <GetDataSlab+0x124>
   31ae4:	ldr	r0, [sp, #52]	; 0x34
   31ae8:	cmp	r0, #1
   31aec:	ldr	lr, [sp, #44]	; 0x2c
   31af0:	blt	240b8 <GetDataSlab+0x1c7c>
   31af4:	ldr	r0, [sp, #40]	; 0x28
   31af8:	mls	r0, lr, r9, r0
   31afc:	str	r0, [sp, #48]	; 0x30
   31b00:	ldr	r0, [fp, #12]
   31b04:	add	sl, r0, #4
   31b08:	add	r8, r4, #4
   31b0c:	add	r0, sp, #104	; 0x68
   31b10:	orr	r1, r0, #4
   31b14:	sub	r0, fp, #72	; 0x48
   31b18:	orr	r0, r0, #4
   31b1c:	str	r0, [sp, #32]
   31b20:	mul	r0, lr, r9
   31b24:	str	r0, [sp, #36]	; 0x24
   31b28:	lsl	r0, lr, #2
   31b2c:	str	r0, [sp, #40]	; 0x28
   31b30:	lsl	r6, r9, #2
   31b34:	mov	r9, #0
   31b38:	ldr	r0, [fp, #12]
   31b3c:	ldr	r0, [r0]
   31b40:	cmp	lr, #1
   31b44:	blt	31b90 <GetDataSlab+0xf754>
   31b48:	ldr	r2, [sp, #36]	; 0x24
   31b4c:	mov	r4, r2
   31b50:	add	r2, r2, r3
   31b54:	add	r3, ip, r4, lsl #2
   31b58:	add	r5, ip, r0, lsl #2
   31b5c:	mov	ip, lr
   31b60:	ldr	lr, [sp, #60]	; 0x3c
   31b64:	ldr	r4, [r5], r6
   31b68:	vmov	s0, r4
   31b6c:	vcvt.f32.s32	s0, s0
   31b70:	vstr	s0, [lr]
   31b74:	subs	ip, ip, #1
   31b78:	add	lr, lr, #4
   31b7c:	bne	31b64 <GetDataSlab+0xf728>
   31b80:	add	r2, r2, r0
   31b84:	mov	ip, r3
   31b88:	ldr	lr, [sp, #44]	; 0x2c
   31b8c:	b	31b94 <GetDataSlab+0xf758>
   31b90:	add	r2, r0, r3
   31b94:	ldr	r3, [sp, #48]	; 0x30
   31b98:	add	ip, ip, r3, lsl #2
   31b9c:	sub	r0, r3, r0
   31ba0:	add	r3, r2, r0
   31ba4:	ldr	r0, [fp, #24]
   31ba8:	cmp	r0, #2
   31bac:	blt	31c5c <GetDataSlab+0xf820>
   31bb0:	mov	r2, #0
   31bb4:	mov	r0, r2
   31bb8:	ldr	r2, [r1, r2, lsl #2]
   31bbc:	add	r2, r2, #1
   31bc0:	str	r2, [r1, r0, lsl #2]
   31bc4:	ldr	r4, [r8, r0, lsl #2]
   31bc8:	sdiv	r7, r2, r4
   31bcc:	mls	r2, r7, r4, r2
   31bd0:	cmp	r2, #0
   31bd4:	bne	31c4c <GetDataSlab+0xf810>
   31bd8:	mov	r2, #0
   31bdc:	str	r2, [r1, r0, lsl #2]
   31be0:	add	r5, sp, #64	; 0x40
   31be4:	add	r2, r5, r0, lsl #2
   31be8:	ldr	r2, [r2, #4]
   31bec:	sdiv	r7, r3, r2
   31bf0:	mls	r4, r7, r2, r3
   31bf4:	cmp	r4, #0
   31bf8:	beq	31c14 <GetDataSlab+0xf7d8>
   31bfc:	ldr	r7, [r5, r0, lsl #2]
   31c00:	ldr	r5, [sl, r0, lsl #2]
   31c04:	sub	r2, r2, r4
   31c08:	mla	r2, r5, r7, r2
   31c0c:	add	r3, r2, r3
   31c10:	b	31c30 <GetDataSlab+0xf7f4>
   31c14:	ldr	r2, [sl, r0, lsl #2]
   31c18:	cmp	r2, #0
   31c1c:	beq	31c34 <GetDataSlab+0xf7f8>
   31c20:	add	r7, sp, #64	; 0x40
   31c24:	ldr	r7, [r7, r0, lsl #2]
   31c28:	mla	r3, r7, r2, r3
   31c2c:	mul	r2, r7, r2
   31c30:	add	ip, ip, r2, lsl #2
   31c34:	add	r2, r0, #1
   31c38:	add	r0, r0, #2
   31c3c:	ldr	r7, [fp, #24]
   31c40:	cmp	r0, r7
   31c44:	blt	31bb4 <GetDataSlab+0xf778>
   31c48:	b	31c5c <GetDataSlab+0xf820>
   31c4c:	ldr	r2, [sp, #32]
   31c50:	ldr	r0, [r2, r0, lsl #2]
   31c54:	add	ip, ip, r0, lsl #2
   31c58:	add	r3, r0, r3
   31c5c:	ldr	r0, [sp, #60]	; 0x3c
   31c60:	ldr	r2, [sp, #40]	; 0x28
   31c64:	add	r0, r0, r2
   31c68:	str	r0, [sp, #60]	; 0x3c
   31c6c:	add	r9, r9, lr
   31c70:	mov	r0, #0
   31c74:	ldr	r2, [sp, #52]	; 0x34
   31c78:	cmp	r9, r2
   31c7c:	blt	31b38 <GetDataSlab+0xf6fc>
   31c80:	b	22560 <GetDataSlab+0x124>
   31c84:	ldr	r0, [sp, #52]	; 0x34
   31c88:	cmp	r0, #1
   31c8c:	ldr	lr, [sp, #44]	; 0x2c
   31c90:	blt	240b8 <GetDataSlab+0x1c7c>
   31c94:	ldr	r0, [sp, #40]	; 0x28
   31c98:	mls	r0, lr, r9, r0
   31c9c:	str	r0, [sp, #48]	; 0x30
   31ca0:	ldr	r0, [fp, #12]
   31ca4:	add	sl, r0, #4
   31ca8:	add	r8, r4, #4
   31cac:	add	r0, sp, #104	; 0x68
   31cb0:	orr	r1, r0, #4
   31cb4:	sub	r0, fp, #72	; 0x48
   31cb8:	orr	r0, r0, #4
   31cbc:	str	r0, [sp, #32]
   31cc0:	mul	r0, lr, r9
   31cc4:	str	r0, [sp, #36]	; 0x24
   31cc8:	lsl	r0, lr, #2
   31ccc:	str	r0, [sp, #40]	; 0x28
   31cd0:	lsl	r6, r9, #2
   31cd4:	mov	r9, #0
   31cd8:	ldr	r0, [fp, #12]
   31cdc:	ldr	r0, [r0]
   31ce0:	cmp	lr, #1
   31ce4:	blt	31d30 <GetDataSlab+0xf8f4>
   31ce8:	ldr	r2, [sp, #36]	; 0x24
   31cec:	mov	r4, r2
   31cf0:	add	r2, r2, r3
   31cf4:	add	r3, ip, r4, lsl #2
   31cf8:	add	r5, ip, r0, lsl #2
   31cfc:	mov	ip, lr
   31d00:	ldr	lr, [sp, #60]	; 0x3c
   31d04:	ldr	r4, [r5], r6
   31d08:	vmov	s0, r4
   31d0c:	vcvt.f32.u32	s0, s0
   31d10:	vstr	s0, [lr]
   31d14:	subs	ip, ip, #1
   31d18:	add	lr, lr, #4
   31d1c:	bne	31d04 <GetDataSlab+0xf8c8>
   31d20:	add	r2, r2, r0
   31d24:	mov	ip, r3
   31d28:	ldr	lr, [sp, #44]	; 0x2c
   31d2c:	b	31d34 <GetDataSlab+0xf8f8>
   31d30:	add	r2, r0, r3
   31d34:	ldr	r3, [sp, #48]	; 0x30
   31d38:	add	ip, ip, r3, lsl #2
   31d3c:	sub	r0, r3, r0
   31d40:	add	r3, r2, r0
   31d44:	ldr	r0, [fp, #24]
   31d48:	cmp	r0, #2
   31d4c:	blt	31dfc <GetDataSlab+0xf9c0>
   31d50:	mov	r2, #0
   31d54:	mov	r0, r2
   31d58:	ldr	r2, [r1, r2, lsl #2]
   31d5c:	add	r2, r2, #1
   31d60:	str	r2, [r1, r0, lsl #2]
   31d64:	ldr	r4, [r8, r0, lsl #2]
   31d68:	sdiv	r7, r2, r4
   31d6c:	mls	r2, r7, r4, r2
   31d70:	cmp	r2, #0
   31d74:	bne	31dec <GetDataSlab+0xf9b0>
   31d78:	mov	r2, #0
   31d7c:	str	r2, [r1, r0, lsl #2]
   31d80:	add	r5, sp, #64	; 0x40
   31d84:	add	r2, r5, r0, lsl #2
   31d88:	ldr	r2, [r2, #4]
   31d8c:	sdiv	r7, r3, r2
   31d90:	mls	r4, r7, r2, r3
   31d94:	cmp	r4, #0
   31d98:	beq	31db4 <GetDataSlab+0xf978>
   31d9c:	ldr	r7, [r5, r0, lsl #2]
   31da0:	ldr	r5, [sl, r0, lsl #2]
   31da4:	sub	r2, r2, r4
   31da8:	mla	r2, r5, r7, r2
   31dac:	add	r3, r2, r3
   31db0:	b	31dd0 <GetDataSlab+0xf994>
   31db4:	ldr	r2, [sl, r0, lsl #2]
   31db8:	cmp	r2, #0
   31dbc:	beq	31dd4 <GetDataSlab+0xf998>
   31dc0:	add	r7, sp, #64	; 0x40
   31dc4:	ldr	r7, [r7, r0, lsl #2]
   31dc8:	mla	r3, r7, r2, r3
   31dcc:	mul	r2, r7, r2
   31dd0:	add	ip, ip, r2, lsl #2
   31dd4:	add	r2, r0, #1
   31dd8:	add	r0, r0, #2
   31ddc:	ldr	r7, [fp, #24]
   31de0:	cmp	r0, r7
   31de4:	blt	31d54 <GetDataSlab+0xf918>
   31de8:	b	31dfc <GetDataSlab+0xf9c0>
   31dec:	ldr	r2, [sp, #32]
   31df0:	ldr	r0, [r2, r0, lsl #2]
   31df4:	add	ip, ip, r0, lsl #2
   31df8:	add	r3, r0, r3
   31dfc:	ldr	r0, [sp, #60]	; 0x3c
   31e00:	ldr	r2, [sp, #40]	; 0x28
   31e04:	add	r0, r0, r2
   31e08:	str	r0, [sp, #60]	; 0x3c
   31e0c:	add	r9, r9, lr
   31e10:	mov	r0, #0
   31e14:	ldr	r2, [sp, #52]	; 0x34
   31e18:	cmp	r9, r2
   31e1c:	blt	31cd8 <GetDataSlab+0xf89c>
   31e20:	b	22560 <GetDataSlab+0x124>
   31e24:	ldr	r0, [sp, #52]	; 0x34
   31e28:	cmp	r0, #1
   31e2c:	ldr	r1, [sp, #44]	; 0x2c
   31e30:	blt	240b8 <GetDataSlab+0x1c7c>
   31e34:	ldr	r0, [sp, #40]	; 0x28
   31e38:	mls	r0, r1, r8, r0
   31e3c:	ldr	r3, [r9], #4
   31e40:	mov	lr, r9
   31e44:	sub	r0, r0, r3
   31e48:	str	r0, [sp, #48]	; 0x30
   31e4c:	add	sl, r4, #4
   31e50:	add	r0, sp, #104	; 0x68
   31e54:	orr	r6, r0, #4
   31e58:	sub	r0, fp, #72	; 0x48
   31e5c:	orr	r0, r0, #4
   31e60:	str	r0, [sp, #32]
   31e64:	str	r3, [sp, #56]	; 0x38
   31e68:	mla	r0, r1, r8, r3
   31e6c:	str	r0, [sp, #36]	; 0x24
   31e70:	lsl	r0, r1, #2
   31e74:	str	r0, [sp, #40]	; 0x28
   31e78:	lsl	r4, r8, #2
   31e7c:	mov	r8, #0
   31e80:	cmp	r1, #1
   31e84:	ldr	r0, [sp, #56]	; 0x38
   31e88:	blt	31eb0 <GetDataSlab+0xfa74>
   31e8c:	ldr	r0, [sp, #56]	; 0x38
   31e90:	add	r0, ip, r0, lsl #2
   31e94:	ldr	r1, [sp, #44]	; 0x2c
   31e98:	ldr	r3, [sp, #60]	; 0x3c
   31e9c:	ldr	r7, [r0], r4
   31ea0:	str	r7, [r3], #4
   31ea4:	subs	r1, r1, #1
   31ea8:	bne	31e9c <GetDataSlab+0xfa60>
   31eac:	ldr	r0, [sp, #36]	; 0x24
   31eb0:	ldr	r3, [sp, #48]	; 0x30
   31eb4:	add	r1, ip, r3, lsl #2
   31eb8:	add	ip, r1, r0, lsl #2
   31ebc:	add	r0, r0, r2
   31ec0:	add	r2, r0, r3
   31ec4:	ldr	r0, [fp, #24]
   31ec8:	cmp	r0, #2
   31ecc:	blt	31f80 <GetDataSlab+0xfb44>
   31ed0:	mov	r9, #0
   31ed4:	mov	r0, r9
   31ed8:	ldr	r1, [r6, r9, lsl #2]
   31edc:	add	r1, r1, #1
   31ee0:	str	r1, [r6, r9, lsl #2]
   31ee4:	ldr	r3, [sl, r9, lsl #2]
   31ee8:	sdiv	r7, r1, r3
   31eec:	mls	r1, r7, r3, r1
   31ef0:	cmp	r1, #0
   31ef4:	bne	31f70 <GetDataSlab+0xfb34>
   31ef8:	mov	r1, #0
   31efc:	str	r1, [r6, r0, lsl #2]
   31f00:	add	r5, sp, #64	; 0x40
   31f04:	add	r1, r5, r0, lsl #2
   31f08:	ldr	r1, [r1, #4]
   31f0c:	sdiv	r3, r2, r1
   31f10:	mls	r3, r3, r1, r2
   31f14:	cmp	r3, #0
   31f18:	beq	31f34 <GetDataSlab+0xfaf8>
   31f1c:	ldr	r7, [r5, r0, lsl #2]
   31f20:	ldr	r5, [lr, r0, lsl #2]
   31f24:	sub	r1, r1, r3
   31f28:	mla	r1, r5, r7, r1
   31f2c:	add	r2, r1, r2
   31f30:	b	31f54 <GetDataSlab+0xfb18>
   31f34:	mov	r1, lr
   31f38:	ldr	r1, [lr, r0, lsl #2]
   31f3c:	cmp	r1, #0
   31f40:	beq	31f58 <GetDataSlab+0xfb1c>
   31f44:	add	r3, sp, #64	; 0x40
   31f48:	ldr	r3, [r3, r0, lsl #2]
   31f4c:	mla	r2, r3, r1, r2
   31f50:	mul	r1, r3, r1
   31f54:	add	ip, ip, r1, lsl #2
   31f58:	add	r9, r0, #1
   31f5c:	add	r0, r0, #2
   31f60:	ldr	r1, [fp, #24]
   31f64:	cmp	r0, r1
   31f68:	blt	31ed4 <GetDataSlab+0xfa98>
   31f6c:	b	31f80 <GetDataSlab+0xfb44>
   31f70:	ldr	r1, [sp, #32]
   31f74:	ldr	r0, [r1, r0, lsl #2]
   31f78:	add	ip, ip, r0, lsl #2
   31f7c:	add	r2, r0, r2
   31f80:	ldr	r0, [sp, #60]	; 0x3c
   31f84:	ldr	r1, [sp, #40]	; 0x28
   31f88:	add	r0, r0, r1
   31f8c:	str	r0, [sp, #60]	; 0x3c
   31f90:	ldr	r1, [sp, #44]	; 0x2c
   31f94:	add	r8, r8, r1
   31f98:	mov	r0, #0
   31f9c:	ldr	r3, [sp, #52]	; 0x34
   31fa0:	cmp	r8, r3
   31fa4:	blt	31e80 <GetDataSlab+0xfa44>
   31fa8:	b	22560 <GetDataSlab+0x124>
   31fac:	ldr	r0, [sp, #52]	; 0x34
   31fb0:	cmp	r0, #1
   31fb4:	ldr	r1, [sp, #44]	; 0x2c
   31fb8:	blt	240b8 <GetDataSlab+0x1c7c>
   31fbc:	ldr	r0, [sp, #40]	; 0x28
   31fc0:	mls	r0, r1, ip, r0
   31fc4:	ldr	r3, [r9], #4
   31fc8:	mov	lr, r9
   31fcc:	sub	r0, r0, r3
   31fd0:	str	r0, [sp, #48]	; 0x30
   31fd4:	add	r9, r4, #4
   31fd8:	add	r0, sp, #104	; 0x68
   31fdc:	orr	r6, r0, #4
   31fe0:	sub	r0, fp, #72	; 0x48
   31fe4:	orr	r0, r0, #4
   31fe8:	str	r0, [sp, #32]
   31fec:	str	r3, [sp, #56]	; 0x38
   31ff0:	mla	r0, r1, ip, r3
   31ff4:	str	r0, [sp, #36]	; 0x24
   31ff8:	lsl	r0, r1, #2
   31ffc:	str	r0, [sp, #40]	; 0x28
   32000:	lsl	r4, ip, #3
   32004:	mov	r8, #0
   32008:	cmp	r1, #1
   3200c:	ldr	r0, [sp, #56]	; 0x38
   32010:	blt	32044 <GetDataSlab+0xfc08>
   32014:	ldr	r0, [sp, #56]	; 0x38
   32018:	add	r0, sl, r0, lsl #3
   3201c:	mov	ip, r1
   32020:	ldr	r1, [sp, #60]	; 0x3c
   32024:	vldr	d16, [r0]
   32028:	vcvt.f32.f64	s0, d16
   3202c:	vstr	s0, [r1]
   32030:	add	r0, r0, r4
   32034:	subs	ip, ip, #1
   32038:	add	r1, r1, #4
   3203c:	bne	32024 <GetDataSlab+0xfbe8>
   32040:	ldr	r0, [sp, #36]	; 0x24
   32044:	ldr	r3, [sp, #48]	; 0x30
   32048:	add	r1, sl, r3, lsl #3
   3204c:	add	sl, r1, r0, lsl #3
   32050:	add	r0, r0, r2
   32054:	add	r2, r0, r3
   32058:	ldr	r0, [fp, #24]
   3205c:	cmp	r0, #2
   32060:	blt	32104 <GetDataSlab+0xfcc8>
   32064:	mov	r1, #0
   32068:	ldr	ip, [sp, #60]	; 0x3c
   3206c:	mov	r0, r1
   32070:	ldr	r1, [r6, r1, lsl #2]
   32074:	add	r1, r1, #1
   32078:	str	r1, [r6, r0, lsl #2]
   3207c:	ldr	r3, [r9, r0, lsl #2]
   32080:	sdiv	r7, r1, r3
   32084:	mls	r1, r7, r3, r1
   32088:	cmp	r1, #0
   3208c:	bne	3210c <GetDataSlab+0xfcd0>
   32090:	mov	r1, #0
   32094:	str	r1, [r6, r0, lsl #2]
   32098:	add	r5, sp, #64	; 0x40
   3209c:	add	r1, r5, r0, lsl #2
   320a0:	ldr	r1, [r1, #4]
   320a4:	sdiv	r3, r2, r1
   320a8:	mls	r3, r3, r1, r2
   320ac:	cmp	r3, #0
   320b0:	beq	320cc <GetDataSlab+0xfc90>
   320b4:	ldr	r7, [r5, r0, lsl #2]
   320b8:	ldr	r5, [lr, r0, lsl #2]
   320bc:	sub	r1, r1, r3
   320c0:	mla	r1, r5, r7, r1
   320c4:	add	r2, r1, r2
   320c8:	b	320e8 <GetDataSlab+0xfcac>
   320cc:	ldr	r1, [lr, r0, lsl #2]
   320d0:	cmp	r1, #0
   320d4:	beq	320ec <GetDataSlab+0xfcb0>
   320d8:	add	r3, sp, #64	; 0x40
   320dc:	ldr	r3, [r3, r0, lsl #2]
   320e0:	mla	r2, r3, r1, r2
   320e4:	mul	r1, r3, r1
   320e8:	add	sl, sl, r1, lsl #3
   320ec:	add	r1, r0, #1
   320f0:	add	r0, r0, #2
   320f4:	ldr	r3, [fp, #24]
   320f8:	cmp	r0, r3
   320fc:	blt	3206c <GetDataSlab+0xfc30>
   32100:	b	3211c <GetDataSlab+0xfce0>
   32104:	ldr	ip, [sp, #60]	; 0x3c
   32108:	b	3211c <GetDataSlab+0xfce0>
   3210c:	ldr	r1, [sp, #32]
   32110:	ldr	r0, [r1, r0, lsl #2]
   32114:	add	sl, sl, r0, lsl #3
   32118:	add	r2, r0, r2
   3211c:	ldr	r0, [sp, #40]	; 0x28
   32120:	add	ip, ip, r0
   32124:	str	ip, [sp, #60]	; 0x3c
   32128:	ldr	r1, [sp, #44]	; 0x2c
   3212c:	add	r8, r8, r1
   32130:	mov	r0, #0
   32134:	ldr	r3, [sp, #52]	; 0x34
   32138:	cmp	r8, r3
   3213c:	blt	32008 <GetDataSlab+0xfbcc>
   32140:	b	22560 <GetDataSlab+0x124>
   32144:	ldr	r0, [sp, #40]	; 0x28
   32148:	cmp	r0, #1
   3214c:	blt	39a5c <GetDataSlab+0x17620>
   32150:	ldr	r2, [sp, #32]
   32154:	ldr	r0, [sp, #28]
   32158:	mls	r0, r2, ip, r0
   3215c:	ldr	r1, [fp, #12]
   32160:	ldr	r3, [r1], #4
   32164:	sub	r0, r0, r3
   32168:	str	r0, [sp, #20]
   3216c:	add	r0, r4, #4
   32170:	str	r0, [sp, #44]	; 0x2c
   32174:	add	r0, sp, #104	; 0x68
   32178:	orr	r4, r0, #4
   3217c:	sub	r0, fp, #72	; 0x48
   32180:	orr	r0, r0, #4
   32184:	str	r0, [sp, #4]
   32188:	str	r3, [sp, #24]
   3218c:	mla	r0, r2, ip, r3
   32190:	str	r0, [sp, #8]
   32194:	lsl	r0, r2, #2
   32198:	str	r0, [sp, #16]
   3219c:	lsl	r8, ip, #3
   321a0:	mov	r6, r1
   321a4:	mov	ip, r2
   321a8:	ldr	r0, [sp, #60]	; 0x3c
   321ac:	str	r0, [sp, #36]	; 0x24
   321b0:	mov	r1, #0
   321b4:	str	r6, [sp, #12]
   321b8:	str	r1, [sp, #28]
   321bc:	cmp	ip, #1
   321c0:	ldr	r0, [sp, #24]
   321c4:	blt	32208 <GetDataSlab+0xfdcc>
   321c8:	ldr	r0, [sp, #24]
   321cc:	add	r0, r9, r0, lsl #3
   321d0:	mov	r7, ip
   321d4:	ldr	r6, [sp, #36]	; 0x24
   321d8:	add	sl, r0, r8
   321dc:	ldrd	r0, [r0]
   321e0:	bl	48d94 <__aeabi_l2f>
   321e4:	str	r0, [r6], #4
   321e8:	subs	r7, r7, #1
   321ec:	mov	r0, sl
   321f0:	bne	321d8 <GetDataSlab+0xfd9c>
   321f4:	ldr	r0, [sp, #8]
   321f8:	add	sl, sp, #64	; 0x40
   321fc:	ldr	lr, [fp, #16]
   32200:	ldr	ip, [sp, #32]
   32204:	ldr	r6, [sp, #12]
   32208:	ldr	r2, [sp, #20]
   3220c:	add	r1, r9, r2, lsl #3
   32210:	add	r9, r1, r0, lsl #3
   32214:	add	r0, r0, r5
   32218:	add	r5, r0, r2
   3221c:	ldr	r0, [fp, #24]
   32220:	cmp	r0, #2
   32224:	blt	322d0 <GetDataSlab+0xfe94>
   32228:	mov	r1, #0
   3222c:	mov	r0, r1
   32230:	ldr	r1, [r4, r1, lsl #2]
   32234:	add	r1, r1, #1
   32238:	str	r1, [r4, r0, lsl #2]
   3223c:	ldr	r2, [sp, #44]	; 0x2c
   32240:	ldr	r2, [r2, r0, lsl #2]
   32244:	sdiv	r3, r1, r2
   32248:	mls	r1, r3, r2, r1
   3224c:	cmp	r1, #0
   32250:	bne	322c0 <GetDataSlab+0xfe84>
   32254:	mov	r1, #0
   32258:	str	r1, [r4, r0, lsl #2]
   3225c:	add	r1, sl, r0, lsl #2
   32260:	ldr	r1, [r1, #4]
   32264:	sdiv	r2, r5, r1
   32268:	mls	r2, r2, r1, r5
   3226c:	cmp	r2, #0
   32270:	beq	3228c <GetDataSlab+0xfe50>
   32274:	ldr	r3, [sl, r0, lsl #2]
   32278:	ldr	r7, [r6, r0, lsl #2]
   3227c:	sub	r1, r1, r2
   32280:	mla	r1, r7, r3, r1
   32284:	add	r5, r1, r5
   32288:	b	322a4 <GetDataSlab+0xfe68>
   3228c:	ldr	r1, [r6, r0, lsl #2]
   32290:	cmp	r1, #0
   32294:	beq	322a8 <GetDataSlab+0xfe6c>
   32298:	ldr	r2, [sl, r0, lsl #2]
   3229c:	mla	r5, r2, r1, r5
   322a0:	mul	r1, r2, r1
   322a4:	add	r9, r9, r1, lsl #3
   322a8:	add	r1, r0, #1
   322ac:	add	r0, r0, #2
   322b0:	ldr	r2, [fp, #24]
   322b4:	cmp	r0, r2
   322b8:	blt	3222c <GetDataSlab+0xfdf0>
   322bc:	b	322d0 <GetDataSlab+0xfe94>
   322c0:	ldr	r1, [sp, #4]
   322c4:	ldr	r0, [r1, r0, lsl #2]
   322c8:	add	r9, r9, r0, lsl #3
   322cc:	add	r5, r0, r5
   322d0:	ldr	r0, [sp, #16]
   322d4:	ldr	r1, [sp, #36]	; 0x24
   322d8:	add	r1, r1, r0
   322dc:	str	r1, [sp, #36]	; 0x24
   322e0:	ldr	r1, [sp, #28]
   322e4:	add	r1, r1, ip
   322e8:	ldr	r0, [sp, #40]	; 0x28
   322ec:	cmp	r1, r0
   322f0:	blt	321b8 <GetDataSlab+0xfd7c>
   322f4:	mov	r0, #0
   322f8:	ldr	r4, [fp, #20]
   322fc:	b	39a60 <GetDataSlab+0x17624>
   32300:	ldr	r0, [sp, #44]	; 0x2c
   32304:	cmp	r0, #1
   32308:	blt	3ae3c <GetDataSlab+0x18a00>
   3230c:	add	r0, r9, #4
   32310:	str	r0, [sp, #52]	; 0x34
   32314:	add	r9, r4, #4
   32318:	add	r0, sp, #104	; 0x68
   3231c:	orr	r8, r0, #4
   32320:	sub	r0, fp, #72	; 0x48
   32324:	orr	r0, r0, #4
   32328:	str	r0, [sp, #48]	; 0x30
   3232c:	mov	sl, #0
   32330:	ldr	r1, [fp, #16]
   32334:	ldr	r0, [fp, #12]
   32338:	ldr	r0, [r0]
   3233c:	add	r2, r0, r2
   32340:	add	r3, ip, r0
   32344:	ldr	r0, [r4]
   32348:	cmp	r0, #1
   3234c:	blt	32380 <GetDataSlab+0xff44>
   32350:	ldr	r0, [sp, #60]	; 0x3c
   32354:	add	r7, r0, sl
   32358:	mov	r5, #0
   3235c:	ldrb	r0, [r3]
   32360:	strb	r0, [r7, r5]
   32364:	ldr	r0, [r1]
   32368:	add	r2, r0, r2
   3236c:	add	r3, r3, r0
   32370:	add	r5, r5, #1
   32374:	ldr	r0, [r4]
   32378:	cmp	r5, r0
   3237c:	blt	3235c <GetDataSlab+0xff20>
   32380:	ldr	r7, [fp, #8]
   32384:	ldr	r7, [r7]
   32388:	ldr	r6, [r1]
   3238c:	mls	r7, r6, r0, r7
   32390:	ldr	r6, [fp, #12]
   32394:	ldr	r6, [r6]
   32398:	sub	r5, r7, r6
   3239c:	add	ip, r3, r5
   323a0:	add	r2, r5, r2
   323a4:	ldr	r3, [fp, #24]
   323a8:	cmp	r3, #2
   323ac:	blt	32468 <GetDataSlab+0x1002c>
   323b0:	mov	r5, #0
   323b4:	mov	r7, r5
   323b8:	ldr	r3, [r8, r5, lsl #2]
   323bc:	add	r3, r3, #1
   323c0:	str	r3, [r8, r5, lsl #2]
   323c4:	ldr	r5, [r9, r5, lsl #2]
   323c8:	sdiv	r6, r3, r5
   323cc:	mls	r3, r6, r5, r3
   323d0:	cmp	r3, #0
   323d4:	bne	32458 <GetDataSlab+0x1001c>
   323d8:	mov	r3, #0
   323dc:	str	r3, [r8, r7, lsl #2]
   323e0:	add	r4, sp, #64	; 0x40
   323e4:	add	r3, r4, r7, lsl #2
   323e8:	ldr	r5, [r3, #4]
   323ec:	sdiv	r3, r2, r5
   323f0:	mls	r6, r3, r5, r2
   323f4:	cmp	r6, #0
   323f8:	beq	32420 <GetDataSlab+0xffe4>
   323fc:	ldr	r3, [r4, r7, lsl #2]
   32400:	ldr	r1, [sp, #52]	; 0x34
   32404:	ldr	lr, [r1, r7, lsl #2]
   32408:	sub	r5, r5, r6
   3240c:	mla	r3, lr, r3, r5
   32410:	ldr	r1, [fp, #16]
   32414:	add	r2, r3, r2
   32418:	add	ip, ip, r3
   3241c:	b	3243c <GetDataSlab+0x10000>
   32420:	ldr	r3, [sp, #52]	; 0x34
   32424:	ldr	r5, [r3, r7, lsl #2]
   32428:	cmp	r5, #0
   3242c:	addne	r3, sp, #64	; 0x40
   32430:	ldrne	r3, [r3, r7, lsl #2]
   32434:	mlane	r2, r3, r5, r2
   32438:	mlane	ip, r3, r5, ip
   3243c:	ldr	r4, [fp, #20]
   32440:	add	r5, r7, #1
   32444:	add	r3, r7, #2
   32448:	ldr	r7, [fp, #24]
   3244c:	cmp	r3, r7
   32450:	blt	323b4 <GetDataSlab+0xff78>
   32454:	b	32468 <GetDataSlab+0x1002c>
   32458:	ldr	r3, [sp, #48]	; 0x30
   3245c:	ldr	r3, [r3, r7, lsl #2]
   32460:	add	ip, ip, r3
   32464:	add	r2, r3, r2
   32468:	add	sl, r0, sl
   3246c:	mov	r0, #0
   32470:	ldr	r3, [sp, #44]	; 0x2c
   32474:	cmp	sl, r3
   32478:	blt	32334 <GetDataSlab+0xfef8>
   3247c:	b	22560 <GetDataSlab+0x124>
   32480:	ldr	r0, [sp, #44]	; 0x2c
   32484:	cmp	r0, #1
   32488:	blt	3ae3c <GetDataSlab+0x18a00>
   3248c:	add	r0, r9, #4
   32490:	str	r0, [sp, #52]	; 0x34
   32494:	add	r9, r4, #4
   32498:	add	r0, sp, #104	; 0x68
   3249c:	orr	r8, r0, #4
   324a0:	sub	r0, fp, #72	; 0x48
   324a4:	orr	r0, r0, #4
   324a8:	str	r0, [sp, #48]	; 0x30
   324ac:	mov	sl, #0
   324b0:	ldr	r1, [fp, #16]
   324b4:	ldr	r0, [fp, #12]
   324b8:	ldr	r0, [r0]
   324bc:	add	r2, r0, r2
   324c0:	add	r3, ip, r0, lsl #1
   324c4:	ldr	r0, [r4]
   324c8:	cmp	r0, #1
   324cc:	blt	32500 <GetDataSlab+0x100c4>
   324d0:	ldr	r0, [sp, #60]	; 0x3c
   324d4:	add	r7, r0, sl
   324d8:	mov	r5, #0
   324dc:	ldrb	r0, [r3]
   324e0:	strb	r0, [r7, r5]
   324e4:	ldr	r0, [r1]
   324e8:	add	r2, r0, r2
   324ec:	add	r3, r3, r0, lsl #1
   324f0:	add	r5, r5, #1
   324f4:	ldr	r0, [r4]
   324f8:	cmp	r5, r0
   324fc:	blt	324dc <GetDataSlab+0x100a0>
   32500:	ldr	r7, [fp, #8]
   32504:	ldr	r7, [r7]
   32508:	ldr	r6, [r1]
   3250c:	mls	r7, r6, r0, r7
   32510:	ldr	r6, [fp, #12]
   32514:	ldr	r6, [r6]
   32518:	sub	r5, r7, r6
   3251c:	add	ip, r3, r5, lsl #1
   32520:	add	r2, r5, r2
   32524:	ldr	r3, [fp, #24]
   32528:	cmp	r3, #2
   3252c:	blt	325ec <GetDataSlab+0x101b0>
   32530:	mov	r5, #0
   32534:	mov	r7, r5
   32538:	ldr	r3, [r8, r5, lsl #2]
   3253c:	add	r3, r3, #1
   32540:	str	r3, [r8, r5, lsl #2]
   32544:	ldr	r5, [r9, r5, lsl #2]
   32548:	sdiv	r6, r3, r5
   3254c:	mls	r3, r6, r5, r3
   32550:	cmp	r3, #0
   32554:	bne	325dc <GetDataSlab+0x101a0>
   32558:	mov	r3, #0
   3255c:	str	r3, [r8, r7, lsl #2]
   32560:	add	r4, sp, #64	; 0x40
   32564:	add	r3, r4, r7, lsl #2
   32568:	ldr	r5, [r3, #4]
   3256c:	sdiv	r3, r2, r5
   32570:	mls	r6, r3, r5, r2
   32574:	cmp	r6, #0
   32578:	beq	3259c <GetDataSlab+0x10160>
   3257c:	ldr	r3, [r4, r7, lsl #2]
   32580:	ldr	r1, [sp, #52]	; 0x34
   32584:	ldr	lr, [r1, r7, lsl #2]
   32588:	sub	r5, r5, r6
   3258c:	mla	r3, lr, r3, r5
   32590:	ldr	r1, [fp, #16]
   32594:	add	r2, r3, r2
   32598:	b	325bc <GetDataSlab+0x10180>
   3259c:	ldr	r3, [sp, #52]	; 0x34
   325a0:	ldr	r5, [r3, r7, lsl #2]
   325a4:	cmp	r5, #0
   325a8:	beq	325c0 <GetDataSlab+0x10184>
   325ac:	add	r3, sp, #64	; 0x40
   325b0:	ldr	r3, [r3, r7, lsl #2]
   325b4:	mla	r2, r3, r5, r2
   325b8:	mul	r3, r3, r5
   325bc:	add	ip, ip, r3, lsl #1
   325c0:	ldr	r4, [fp, #20]
   325c4:	add	r5, r7, #1
   325c8:	add	r3, r7, #2
   325cc:	ldr	r7, [fp, #24]
   325d0:	cmp	r3, r7
   325d4:	blt	32534 <GetDataSlab+0x100f8>
   325d8:	b	325ec <GetDataSlab+0x101b0>
   325dc:	ldr	r3, [sp, #48]	; 0x30
   325e0:	ldr	r3, [r3, r7, lsl #2]
   325e4:	add	ip, ip, r3, lsl #1
   325e8:	add	r2, r3, r2
   325ec:	add	sl, r0, sl
   325f0:	mov	r0, #0
   325f4:	ldr	r3, [sp, #44]	; 0x2c
   325f8:	cmp	sl, r3
   325fc:	blt	324b4 <GetDataSlab+0x10078>
   32600:	b	22560 <GetDataSlab+0x124>
   32604:	ldr	r0, [sp, #44]	; 0x2c
   32608:	cmp	r0, #1
   3260c:	blt	3ae3c <GetDataSlab+0x18a00>
   32610:	add	r0, r9, #4
   32614:	str	r0, [sp, #52]	; 0x34
   32618:	add	r9, r4, #4
   3261c:	add	r0, sp, #104	; 0x68
   32620:	orr	r8, r0, #4
   32624:	sub	r0, fp, #72	; 0x48
   32628:	orr	r0, r0, #4
   3262c:	str	r0, [sp, #48]	; 0x30
   32630:	mov	sl, #0
   32634:	ldr	r1, [fp, #16]
   32638:	ldr	r0, [fp, #12]
   3263c:	ldr	r0, [r0]
   32640:	add	r2, r0, r2
   32644:	add	r3, ip, r0, lsl #1
   32648:	ldr	r0, [r4]
   3264c:	cmp	r0, #1
   32650:	blt	32684 <GetDataSlab+0x10248>
   32654:	ldr	r0, [sp, #60]	; 0x3c
   32658:	add	r7, r0, sl
   3265c:	mov	r5, #0
   32660:	ldrb	r0, [r3]
   32664:	strb	r0, [r7, r5]
   32668:	ldr	r0, [r1]
   3266c:	add	r2, r0, r2
   32670:	add	r3, r3, r0, lsl #1
   32674:	add	r5, r5, #1
   32678:	ldr	r0, [r4]
   3267c:	cmp	r5, r0
   32680:	blt	32660 <GetDataSlab+0x10224>
   32684:	ldr	r7, [fp, #8]
   32688:	ldr	r7, [r7]
   3268c:	ldr	r6, [r1]
   32690:	mls	r7, r6, r0, r7
   32694:	ldr	r6, [fp, #12]
   32698:	ldr	r6, [r6]
   3269c:	sub	r5, r7, r6
   326a0:	add	ip, r3, r5, lsl #1
   326a4:	add	r2, r5, r2
   326a8:	ldr	r3, [fp, #24]
   326ac:	cmp	r3, #2
   326b0:	blt	32770 <GetDataSlab+0x10334>
   326b4:	mov	r5, #0
   326b8:	mov	r7, r5
   326bc:	ldr	r3, [r8, r5, lsl #2]
   326c0:	add	r3, r3, #1
   326c4:	str	r3, [r8, r5, lsl #2]
   326c8:	ldr	r5, [r9, r5, lsl #2]
   326cc:	sdiv	r6, r3, r5
   326d0:	mls	r3, r6, r5, r3
   326d4:	cmp	r3, #0
   326d8:	bne	32760 <GetDataSlab+0x10324>
   326dc:	mov	r3, #0
   326e0:	str	r3, [r8, r7, lsl #2]
   326e4:	add	r4, sp, #64	; 0x40
   326e8:	add	r3, r4, r7, lsl #2
   326ec:	ldr	r5, [r3, #4]
   326f0:	sdiv	r3, r2, r5
   326f4:	mls	r6, r3, r5, r2
   326f8:	cmp	r6, #0
   326fc:	beq	32720 <GetDataSlab+0x102e4>
   32700:	ldr	r3, [r4, r7, lsl #2]
   32704:	ldr	r1, [sp, #52]	; 0x34
   32708:	ldr	lr, [r1, r7, lsl #2]
   3270c:	sub	r5, r5, r6
   32710:	mla	r3, lr, r3, r5
   32714:	ldr	r1, [fp, #16]
   32718:	add	r2, r3, r2
   3271c:	b	32740 <GetDataSlab+0x10304>
   32720:	ldr	r3, [sp, #52]	; 0x34
   32724:	ldr	r5, [r3, r7, lsl #2]
   32728:	cmp	r5, #0
   3272c:	beq	32744 <GetDataSlab+0x10308>
   32730:	add	r3, sp, #64	; 0x40
   32734:	ldr	r3, [r3, r7, lsl #2]
   32738:	mla	r2, r3, r5, r2
   3273c:	mul	r3, r3, r5
   32740:	add	ip, ip, r3, lsl #1
   32744:	ldr	r4, [fp, #20]
   32748:	add	r5, r7, #1
   3274c:	add	r3, r7, #2
   32750:	ldr	r7, [fp, #24]
   32754:	cmp	r3, r7
   32758:	blt	326b8 <GetDataSlab+0x1027c>
   3275c:	b	32770 <GetDataSlab+0x10334>
   32760:	ldr	r3, [sp, #48]	; 0x30
   32764:	ldr	r3, [r3, r7, lsl #2]
   32768:	add	ip, ip, r3, lsl #1
   3276c:	add	r2, r3, r2
   32770:	add	sl, r0, sl
   32774:	mov	r0, #0
   32778:	ldr	r3, [sp, #44]	; 0x2c
   3277c:	cmp	sl, r3
   32780:	blt	32638 <GetDataSlab+0x101fc>
   32784:	b	22560 <GetDataSlab+0x124>
   32788:	ldr	r0, [sp, #44]	; 0x2c
   3278c:	cmp	r0, #1
   32790:	blt	3ae3c <GetDataSlab+0x18a00>
   32794:	add	r0, r9, #4
   32798:	str	r0, [sp, #52]	; 0x34
   3279c:	add	r9, r4, #4
   327a0:	add	r0, sp, #104	; 0x68
   327a4:	orr	r8, r0, #4
   327a8:	sub	r0, fp, #72	; 0x48
   327ac:	orr	r0, r0, #4
   327b0:	str	r0, [sp, #48]	; 0x30
   327b4:	mov	sl, #0
   327b8:	ldr	r1, [fp, #16]
   327bc:	ldr	r0, [fp, #12]
   327c0:	ldr	r0, [r0]
   327c4:	add	r2, r0, r2
   327c8:	add	r3, ip, r0, lsl #2
   327cc:	ldr	r0, [r4]
   327d0:	cmp	r0, #1
   327d4:	blt	32808 <GetDataSlab+0x103cc>
   327d8:	ldr	r0, [sp, #60]	; 0x3c
   327dc:	add	r7, r0, sl
   327e0:	mov	r5, #0
   327e4:	ldr	r0, [r3]
   327e8:	strb	r0, [r7, r5]
   327ec:	ldr	r0, [r1]
   327f0:	add	r2, r0, r2
   327f4:	add	r3, r3, r0, lsl #2
   327f8:	add	r5, r5, #1
   327fc:	ldr	r0, [r4]
   32800:	cmp	r5, r0
   32804:	blt	327e4 <GetDataSlab+0x103a8>
   32808:	ldr	r7, [fp, #8]
   3280c:	ldr	r7, [r7]
   32810:	ldr	r6, [r1]
   32814:	mls	r7, r6, r0, r7
   32818:	ldr	r6, [fp, #12]
   3281c:	ldr	r6, [r6]
   32820:	sub	r5, r7, r6
   32824:	add	ip, r3, r5, lsl #2
   32828:	add	r2, r5, r2
   3282c:	ldr	r3, [fp, #24]
   32830:	cmp	r3, #2
   32834:	blt	328f4 <GetDataSlab+0x104b8>
   32838:	mov	r5, #0
   3283c:	mov	r7, r5
   32840:	ldr	r3, [r8, r5, lsl #2]
   32844:	add	r3, r3, #1
   32848:	str	r3, [r8, r5, lsl #2]
   3284c:	ldr	r5, [r9, r5, lsl #2]
   32850:	sdiv	r6, r3, r5
   32854:	mls	r3, r6, r5, r3
   32858:	cmp	r3, #0
   3285c:	bne	328e4 <GetDataSlab+0x104a8>
   32860:	mov	r3, #0
   32864:	str	r3, [r8, r7, lsl #2]
   32868:	add	r4, sp, #64	; 0x40
   3286c:	add	r3, r4, r7, lsl #2
   32870:	ldr	r5, [r3, #4]
   32874:	sdiv	r3, r2, r5
   32878:	mls	r6, r3, r5, r2
   3287c:	cmp	r6, #0
   32880:	beq	328a4 <GetDataSlab+0x10468>
   32884:	ldr	r3, [r4, r7, lsl #2]
   32888:	ldr	r1, [sp, #52]	; 0x34
   3288c:	ldr	lr, [r1, r7, lsl #2]
   32890:	sub	r5, r5, r6
   32894:	mla	r3, lr, r3, r5
   32898:	ldr	r1, [fp, #16]
   3289c:	add	r2, r3, r2
   328a0:	b	328c4 <GetDataSlab+0x10488>
   328a4:	ldr	r3, [sp, #52]	; 0x34
   328a8:	ldr	r5, [r3, r7, lsl #2]
   328ac:	cmp	r5, #0
   328b0:	beq	328c8 <GetDataSlab+0x1048c>
   328b4:	add	r3, sp, #64	; 0x40
   328b8:	ldr	r3, [r3, r7, lsl #2]
   328bc:	mla	r2, r3, r5, r2
   328c0:	mul	r3, r3, r5
   328c4:	add	ip, ip, r3, lsl #2
   328c8:	ldr	r4, [fp, #20]
   328cc:	add	r5, r7, #1
   328d0:	add	r3, r7, #2
   328d4:	ldr	r7, [fp, #24]
   328d8:	cmp	r3, r7
   328dc:	blt	3283c <GetDataSlab+0x10400>
   328e0:	b	328f4 <GetDataSlab+0x104b8>
   328e4:	ldr	r3, [sp, #48]	; 0x30
   328e8:	ldr	r3, [r3, r7, lsl #2]
   328ec:	add	ip, ip, r3, lsl #2
   328f0:	add	r2, r3, r2
   328f4:	add	sl, r0, sl
   328f8:	mov	r0, #0
   328fc:	ldr	r3, [sp, #44]	; 0x2c
   32900:	cmp	sl, r3
   32904:	blt	327bc <GetDataSlab+0x10380>
   32908:	b	22560 <GetDataSlab+0x124>
   3290c:	ldr	r0, [sp, #44]	; 0x2c
   32910:	cmp	r0, #1
   32914:	blt	3ae3c <GetDataSlab+0x18a00>
   32918:	add	r0, r9, #4
   3291c:	str	r0, [sp, #52]	; 0x34
   32920:	add	r9, r4, #4
   32924:	add	r0, sp, #104	; 0x68
   32928:	orr	r8, r0, #4
   3292c:	sub	r0, fp, #72	; 0x48
   32930:	orr	r0, r0, #4
   32934:	str	r0, [sp, #48]	; 0x30
   32938:	mov	sl, #0
   3293c:	ldr	r1, [fp, #16]
   32940:	ldr	r0, [fp, #12]
   32944:	ldr	r0, [r0]
   32948:	add	r2, r0, r2
   3294c:	add	r3, ip, r0, lsl #2
   32950:	ldr	r0, [r4]
   32954:	cmp	r0, #1
   32958:	blt	3298c <GetDataSlab+0x10550>
   3295c:	ldr	r0, [sp, #60]	; 0x3c
   32960:	add	r7, r0, sl
   32964:	mov	r5, #0
   32968:	ldr	r0, [r3]
   3296c:	strb	r0, [r7, r5]
   32970:	ldr	r0, [r1]
   32974:	add	r2, r0, r2
   32978:	add	r3, r3, r0, lsl #2
   3297c:	add	r5, r5, #1
   32980:	ldr	r0, [r4]
   32984:	cmp	r5, r0
   32988:	blt	32968 <GetDataSlab+0x1052c>
   3298c:	ldr	r7, [fp, #8]
   32990:	ldr	r7, [r7]
   32994:	ldr	r6, [r1]
   32998:	mls	r7, r6, r0, r7
   3299c:	ldr	r6, [fp, #12]
   329a0:	ldr	r6, [r6]
   329a4:	sub	r5, r7, r6
   329a8:	add	ip, r3, r5, lsl #2
   329ac:	add	r2, r5, r2
   329b0:	ldr	r3, [fp, #24]
   329b4:	cmp	r3, #2
   329b8:	blt	32a78 <GetDataSlab+0x1063c>
   329bc:	mov	r5, #0
   329c0:	mov	r7, r5
   329c4:	ldr	r3, [r8, r5, lsl #2]
   329c8:	add	r3, r3, #1
   329cc:	str	r3, [r8, r5, lsl #2]
   329d0:	ldr	r5, [r9, r5, lsl #2]
   329d4:	sdiv	r6, r3, r5
   329d8:	mls	r3, r6, r5, r3
   329dc:	cmp	r3, #0
   329e0:	bne	32a68 <GetDataSlab+0x1062c>
   329e4:	mov	r3, #0
   329e8:	str	r3, [r8, r7, lsl #2]
   329ec:	add	r4, sp, #64	; 0x40
   329f0:	add	r3, r4, r7, lsl #2
   329f4:	ldr	r5, [r3, #4]
   329f8:	sdiv	r3, r2, r5
   329fc:	mls	r6, r3, r5, r2
   32a00:	cmp	r6, #0
   32a04:	beq	32a28 <GetDataSlab+0x105ec>
   32a08:	ldr	r3, [r4, r7, lsl #2]
   32a0c:	ldr	r1, [sp, #52]	; 0x34
   32a10:	ldr	lr, [r1, r7, lsl #2]
   32a14:	sub	r5, r5, r6
   32a18:	mla	r3, lr, r3, r5
   32a1c:	ldr	r1, [fp, #16]
   32a20:	add	r2, r3, r2
   32a24:	b	32a48 <GetDataSlab+0x1060c>
   32a28:	ldr	r3, [sp, #52]	; 0x34
   32a2c:	ldr	r5, [r3, r7, lsl #2]
   32a30:	cmp	r5, #0
   32a34:	beq	32a4c <GetDataSlab+0x10610>
   32a38:	add	r3, sp, #64	; 0x40
   32a3c:	ldr	r3, [r3, r7, lsl #2]
   32a40:	mla	r2, r3, r5, r2
   32a44:	mul	r3, r3, r5
   32a48:	add	ip, ip, r3, lsl #2
   32a4c:	ldr	r4, [fp, #20]
   32a50:	add	r5, r7, #1
   32a54:	add	r3, r7, #2
   32a58:	ldr	r7, [fp, #24]
   32a5c:	cmp	r3, r7
   32a60:	blt	329c0 <GetDataSlab+0x10584>
   32a64:	b	32a78 <GetDataSlab+0x1063c>
   32a68:	ldr	r3, [sp, #48]	; 0x30
   32a6c:	ldr	r3, [r3, r7, lsl #2]
   32a70:	add	ip, ip, r3, lsl #2
   32a74:	add	r2, r3, r2
   32a78:	add	sl, r0, sl
   32a7c:	mov	r0, #0
   32a80:	ldr	r3, [sp, #44]	; 0x2c
   32a84:	cmp	sl, r3
   32a88:	blt	32940 <GetDataSlab+0x10504>
   32a8c:	b	22560 <GetDataSlab+0x124>
   32a90:	ldr	r0, [sp, #44]	; 0x2c
   32a94:	cmp	r0, #1
   32a98:	blt	3ae3c <GetDataSlab+0x18a00>
   32a9c:	ldr	r0, [fp, #12]
   32aa0:	add	r0, r0, #4
   32aa4:	str	r0, [sp, #52]	; 0x34
   32aa8:	mov	r0, ip
   32aac:	add	ip, r4, #4
   32ab0:	add	r1, sp, #104	; 0x68
   32ab4:	orr	r8, r1, #4
   32ab8:	orr	r0, r0, #4
   32abc:	str	r0, [sp, #48]	; 0x30
   32ac0:	mov	sl, #0
   32ac4:	ldr	r1, [fp, #16]
   32ac8:	ldr	r0, [fp, #12]
   32acc:	ldr	r0, [r0]
   32ad0:	add	r2, r0, r2
   32ad4:	add	r3, r9, r0, lsl #2
   32ad8:	ldr	r0, [r4]
   32adc:	cmp	r0, #1
   32ae0:	blt	32b1c <GetDataSlab+0x106e0>
   32ae4:	ldr	r0, [sp, #60]	; 0x3c
   32ae8:	add	r7, r0, sl
   32aec:	mov	r5, #0
   32af0:	vldr	s0, [r3]
   32af4:	vcvt.s32.f32	s0, s0
   32af8:	vmov	r0, s0
   32afc:	strb	r0, [r7, r5]
   32b00:	ldr	r0, [r1]
   32b04:	add	r2, r0, r2
   32b08:	add	r3, r3, r0, lsl #2
   32b0c:	add	r5, r5, #1
   32b10:	ldr	r0, [r4]
   32b14:	cmp	r5, r0
   32b18:	blt	32af0 <GetDataSlab+0x106b4>
   32b1c:	ldr	r7, [fp, #8]
   32b20:	ldr	r5, [r7]
   32b24:	ldr	r6, [r1]
   32b28:	mls	r5, r6, r0, r5
   32b2c:	ldr	r7, [fp, #12]
   32b30:	ldr	r6, [r7]
   32b34:	sub	r5, r5, r6
   32b38:	add	r9, r3, r5, lsl #2
   32b3c:	add	r2, r5, r2
   32b40:	ldr	r3, [fp, #24]
   32b44:	cmp	r3, #2
   32b48:	blt	32c08 <GetDataSlab+0x107cc>
   32b4c:	mov	r5, #0
   32b50:	mov	r7, r5
   32b54:	ldr	r3, [r8, r5, lsl #2]
   32b58:	add	r3, r3, #1
   32b5c:	str	r3, [r8, r5, lsl #2]
   32b60:	ldr	r5, [ip, r5, lsl #2]
   32b64:	sdiv	r6, r3, r5
   32b68:	mls	r3, r6, r5, r3
   32b6c:	cmp	r3, #0
   32b70:	bne	32bf8 <GetDataSlab+0x107bc>
   32b74:	mov	r3, #0
   32b78:	str	r3, [r8, r7, lsl #2]
   32b7c:	add	r4, sp, #64	; 0x40
   32b80:	add	r3, r4, r7, lsl #2
   32b84:	ldr	r5, [r3, #4]
   32b88:	sdiv	r3, r2, r5
   32b8c:	mls	r6, r3, r5, r2
   32b90:	cmp	r6, #0
   32b94:	beq	32bb8 <GetDataSlab+0x1077c>
   32b98:	ldr	r3, [r4, r7, lsl #2]
   32b9c:	ldr	r1, [sp, #52]	; 0x34
   32ba0:	ldr	lr, [r1, r7, lsl #2]
   32ba4:	sub	r5, r5, r6
   32ba8:	mla	r3, lr, r3, r5
   32bac:	ldr	r1, [fp, #16]
   32bb0:	add	r2, r3, r2
   32bb4:	b	32bd8 <GetDataSlab+0x1079c>
   32bb8:	ldr	r3, [sp, #52]	; 0x34
   32bbc:	ldr	r5, [r3, r7, lsl #2]
   32bc0:	cmp	r5, #0
   32bc4:	beq	32bdc <GetDataSlab+0x107a0>
   32bc8:	add	r3, sp, #64	; 0x40
   32bcc:	ldr	r3, [r3, r7, lsl #2]
   32bd0:	mla	r2, r3, r5, r2
   32bd4:	mul	r3, r3, r5
   32bd8:	add	r9, r9, r3, lsl #2
   32bdc:	ldr	r4, [fp, #20]
   32be0:	add	r5, r7, #1
   32be4:	add	r3, r7, #2
   32be8:	ldr	r7, [fp, #24]
   32bec:	cmp	r3, r7
   32bf0:	blt	32b50 <GetDataSlab+0x10714>
   32bf4:	b	32c08 <GetDataSlab+0x107cc>
   32bf8:	ldr	r3, [sp, #48]	; 0x30
   32bfc:	ldr	r3, [r3, r7, lsl #2]
   32c00:	add	r9, r9, r3, lsl #2
   32c04:	add	r2, r3, r2
   32c08:	add	sl, r0, sl
   32c0c:	mov	r0, #0
   32c10:	ldr	r3, [sp, #44]	; 0x2c
   32c14:	cmp	sl, r3
   32c18:	blt	32ac8 <GetDataSlab+0x1068c>
   32c1c:	b	22560 <GetDataSlab+0x124>
   32c20:	ldr	r0, [sp, #44]	; 0x2c
   32c24:	cmp	r0, #1
   32c28:	blt	3ae3c <GetDataSlab+0x18a00>
   32c2c:	ldr	r0, [fp, #12]
   32c30:	add	r0, r0, #4
   32c34:	str	r0, [sp, #52]	; 0x34
   32c38:	mov	r0, ip
   32c3c:	add	ip, r4, #4
   32c40:	add	r1, sp, #104	; 0x68
   32c44:	orr	r8, r1, #4
   32c48:	orr	r0, r0, #4
   32c4c:	str	r0, [sp, #48]	; 0x30
   32c50:	mov	sl, #0
   32c54:	ldr	r1, [fp, #16]
   32c58:	ldr	r0, [fp, #12]
   32c5c:	ldr	r0, [r0]
   32c60:	add	r2, r0, r2
   32c64:	add	r3, r9, r0, lsl #3
   32c68:	ldr	r0, [r4]
   32c6c:	cmp	r0, #1
   32c70:	blt	32cac <GetDataSlab+0x10870>
   32c74:	ldr	r0, [sp, #60]	; 0x3c
   32c78:	add	r7, r0, sl
   32c7c:	mov	r5, #0
   32c80:	vldr	d16, [r3]
   32c84:	vcvt.s32.f64	s0, d16
   32c88:	vmov	r0, s0
   32c8c:	strb	r0, [r7, r5]
   32c90:	ldr	r0, [r1]
   32c94:	add	r2, r0, r2
   32c98:	add	r3, r3, r0, lsl #3
   32c9c:	add	r5, r5, #1
   32ca0:	ldr	r0, [r4]
   32ca4:	cmp	r5, r0
   32ca8:	blt	32c80 <GetDataSlab+0x10844>
   32cac:	ldr	r7, [fp, #8]
   32cb0:	ldr	r5, [r7]
   32cb4:	ldr	r6, [r1]
   32cb8:	mls	r5, r6, r0, r5
   32cbc:	ldr	r7, [fp, #12]
   32cc0:	ldr	r6, [r7]
   32cc4:	sub	r5, r5, r6
   32cc8:	add	r9, r3, r5, lsl #3
   32ccc:	add	r2, r5, r2
   32cd0:	ldr	r3, [fp, #24]
   32cd4:	cmp	r3, #2
   32cd8:	blt	32d98 <GetDataSlab+0x1095c>
   32cdc:	mov	r5, #0
   32ce0:	mov	r7, r5
   32ce4:	ldr	r3, [r8, r5, lsl #2]
   32ce8:	add	r3, r3, #1
   32cec:	str	r3, [r8, r5, lsl #2]
   32cf0:	ldr	r5, [ip, r5, lsl #2]
   32cf4:	sdiv	r6, r3, r5
   32cf8:	mls	r3, r6, r5, r3
   32cfc:	cmp	r3, #0
   32d00:	bne	32d88 <GetDataSlab+0x1094c>
   32d04:	mov	r3, #0
   32d08:	str	r3, [r8, r7, lsl #2]
   32d0c:	add	r4, sp, #64	; 0x40
   32d10:	add	r3, r4, r7, lsl #2
   32d14:	ldr	r5, [r3, #4]
   32d18:	sdiv	r3, r2, r5
   32d1c:	mls	r6, r3, r5, r2
   32d20:	cmp	r6, #0
   32d24:	beq	32d48 <GetDataSlab+0x1090c>
   32d28:	ldr	r3, [r4, r7, lsl #2]
   32d2c:	ldr	r1, [sp, #52]	; 0x34
   32d30:	ldr	lr, [r1, r7, lsl #2]
   32d34:	sub	r5, r5, r6
   32d38:	mla	r3, lr, r3, r5
   32d3c:	ldr	r1, [fp, #16]
   32d40:	add	r2, r3, r2
   32d44:	b	32d68 <GetDataSlab+0x1092c>
   32d48:	ldr	r3, [sp, #52]	; 0x34
   32d4c:	ldr	r5, [r3, r7, lsl #2]
   32d50:	cmp	r5, #0
   32d54:	beq	32d6c <GetDataSlab+0x10930>
   32d58:	add	r3, sp, #64	; 0x40
   32d5c:	ldr	r3, [r3, r7, lsl #2]
   32d60:	mla	r2, r3, r5, r2
   32d64:	mul	r3, r3, r5
   32d68:	add	r9, r9, r3, lsl #3
   32d6c:	ldr	r4, [fp, #20]
   32d70:	add	r5, r7, #1
   32d74:	add	r3, r7, #2
   32d78:	ldr	r7, [fp, #24]
   32d7c:	cmp	r3, r7
   32d80:	blt	32ce0 <GetDataSlab+0x108a4>
   32d84:	b	32d98 <GetDataSlab+0x1095c>
   32d88:	ldr	r3, [sp, #48]	; 0x30
   32d8c:	ldr	r3, [r3, r7, lsl #2]
   32d90:	add	r9, r9, r3, lsl #3
   32d94:	add	r2, r3, r2
   32d98:	add	sl, r0, sl
   32d9c:	mov	r0, #0
   32da0:	ldr	r3, [sp, #44]	; 0x2c
   32da4:	cmp	sl, r3
   32da8:	blt	32c58 <GetDataSlab+0x1081c>
   32dac:	b	22560 <GetDataSlab+0x124>
   32db0:	ldr	r0, [sp, #44]	; 0x2c
   32db4:	cmp	r0, #1
   32db8:	sub	r0, fp, #72	; 0x48
   32dbc:	blt	32f38 <GetDataSlab+0x10afc>
   32dc0:	add	r9, r9, #4
   32dc4:	add	r6, r4, #4
   32dc8:	add	r2, sp, #104	; 0x68
   32dcc:	orr	r5, r2, #4
   32dd0:	orr	r0, r0, #4
   32dd4:	str	r0, [sp, #40]	; 0x28
   32dd8:	mov	sl, #0
   32ddc:	ldr	ip, [sp, #60]	; 0x3c
   32de0:	ldr	r0, [fp, #12]
   32de4:	ldr	r0, [r0]
   32de8:	add	r1, r0, r1
   32dec:	add	r2, r8, r0, lsl #3
   32df0:	ldr	r0, [r4]
   32df4:	cmp	r0, #1
   32df8:	blt	32e38 <GetDataSlab+0x109fc>
   32dfc:	add	r7, ip, sl
   32e00:	mov	r3, #0
   32e04:	ldr	lr, [fp, #8]
   32e08:	mov	r8, lr
   32e0c:	ldr	lr, [fp, #16]
   32e10:	ldrb	r0, [r2]
   32e14:	strb	r0, [r7, r3]
   32e18:	ldr	r0, [lr]
   32e1c:	add	r1, r0, r1
   32e20:	add	r2, r2, r0, lsl #3
   32e24:	add	r3, r3, #1
   32e28:	ldr	r0, [r4]
   32e2c:	cmp	r3, r0
   32e30:	blt	32e10 <GetDataSlab+0x109d4>
   32e34:	b	32e44 <GetDataSlab+0x10a08>
   32e38:	ldr	lr, [fp, #8]
   32e3c:	mov	r8, lr
   32e40:	ldr	lr, [fp, #16]
   32e44:	ldr	r3, [r8]
   32e48:	ldr	r4, [lr]
   32e4c:	mls	r3, r4, r0, r3
   32e50:	ldr	r4, [fp, #12]
   32e54:	ldr	r4, [r4]
   32e58:	sub	r3, r3, r4
   32e5c:	add	r8, r2, r3, lsl #3
   32e60:	add	r1, r3, r1
   32e64:	ldr	r2, [fp, #24]
   32e68:	cmp	r2, #2
   32e6c:	blt	32f24 <GetDataSlab+0x10ae8>
   32e70:	mov	r3, #0
   32e74:	mov	r7, r3
   32e78:	ldr	r2, [r5, r3, lsl #2]
   32e7c:	add	r2, r2, #1
   32e80:	str	r2, [r5, r3, lsl #2]
   32e84:	ldr	r3, [r6, r3, lsl #2]
   32e88:	sdiv	r4, r2, r3
   32e8c:	mls	r2, r4, r3, r2
   32e90:	cmp	r2, #0
   32e94:	bne	32f14 <GetDataSlab+0x10ad8>
   32e98:	mov	r2, #0
   32e9c:	str	r2, [r5, r7, lsl #2]
   32ea0:	add	lr, sp, #64	; 0x40
   32ea4:	add	r2, lr, r7, lsl #2
   32ea8:	ldr	r3, [r2, #4]
   32eac:	sdiv	r2, r1, r3
   32eb0:	mls	r4, r2, r3, r1
   32eb4:	cmp	r4, #0
   32eb8:	beq	32ed8 <GetDataSlab+0x10a9c>
   32ebc:	ldr	r2, [lr, r7, lsl #2]
   32ec0:	ldr	ip, [r9, r7, lsl #2]
   32ec4:	sub	r3, r3, r4
   32ec8:	mla	r2, ip, r2, r3
   32ecc:	ldr	ip, [sp, #60]	; 0x3c
   32ed0:	add	r1, r2, r1
   32ed4:	b	32ef4 <GetDataSlab+0x10ab8>
   32ed8:	ldr	r3, [r9, r7, lsl #2]
   32edc:	cmp	r3, #0
   32ee0:	beq	32ef8 <GetDataSlab+0x10abc>
   32ee4:	add	r2, sp, #64	; 0x40
   32ee8:	ldr	r2, [r2, r7, lsl #2]
   32eec:	mla	r1, r2, r3, r1
   32ef0:	mul	r2, r2, r3
   32ef4:	add	r8, r8, r2, lsl #3
   32ef8:	ldr	lr, [fp, #16]
   32efc:	add	r3, r7, #1
   32f00:	add	r2, r7, #2
   32f04:	ldr	r4, [fp, #24]
   32f08:	cmp	r2, r4
   32f0c:	blt	32e74 <GetDataSlab+0x10a38>
   32f10:	b	32f24 <GetDataSlab+0x10ae8>
   32f14:	ldr	r2, [sp, #40]	; 0x28
   32f18:	ldr	r2, [r2, r7, lsl #2]
   32f1c:	add	r8, r8, r2, lsl #3
   32f20:	add	r1, r2, r1
   32f24:	add	sl, r0, sl
   32f28:	ldr	r0, [sp, #44]	; 0x2c
   32f2c:	cmp	sl, r0
   32f30:	ldr	r4, [fp, #20]
   32f34:	blt	32de0 <GetDataSlab+0x109a4>
   32f38:	mov	r0, #0
   32f3c:	ldr	r1, [sp, #52]	; 0x34
   32f40:	cmp	r1, #13
   32f44:	bne	22560 <GetDataSlab+0x124>
   32f48:	ldr	lr, [lr]
   32f4c:	sub	r1, lr, #1
   32f50:	str	r1, [fp, #-72]	; 0xffffffb8
   32f54:	ldr	r3, [fp, #8]
   32f58:	ldr	r1, [r3]
   32f5c:	str	r1, [sp, #64]	; 0x40
   32f60:	ldr	r0, [r4]
   32f64:	str	r0, [sp, #44]	; 0x2c
   32f68:	mov	r2, #0
   32f6c:	ldr	r0, [fp, #24]
   32f70:	cmp	r0, #2
   32f74:	blt	38a48 <GetDataSlab+0x1660c>
   32f78:	mov	r1, #1
   32f7c:	mov	r2, #0
   32f80:	mov	r0, r3
   32f84:	ldr	r9, [fp, #12]
   32f88:	add	ip, sp, #64	; 0x40
   32f8c:	sub	r5, fp, #72	; 0x48
   32f90:	ldr	sl, [sp, #48]	; 0x30
   32f94:	ldr	r3, [fp, #16]
   32f98:	ldr	r7, [r3, r1, lsl #2]
   32f9c:	sub	r7, r7, #1
   32fa0:	str	r7, [r5, r1, lsl #2]
   32fa4:	sub	r8, r1, #1
   32fa8:	ldr	r3, [fp, #8]
   32fac:	ldr	r5, [r3, r8, lsl #2]
   32fb0:	str	r5, [ip, r1, lsl #2]
   32fb4:	mov	r4, #0
   32fb8:	mov	r3, r0
   32fbc:	ldr	r6, [r3, -r4, lsl #2]!
   32fc0:	mul	r7, r7, r6
   32fc4:	ldr	r3, [r3, #4]
   32fc8:	mul	r5, r3, r5
   32fcc:	add	r4, r4, #1
   32fd0:	cmp	r1, r4
   32fd4:	bne	32fb8 <GetDataSlab+0x10b7c>
   32fd8:	str	r5, [ip, r1, lsl #2]
   32fdc:	sub	r5, fp, #72	; 0x48
   32fe0:	str	r7, [r5, r1, lsl #2]
   32fe4:	ldr	r3, [ip, r8, lsl #2]
   32fe8:	ldr	r4, [r9, r1, lsl #2]
   32fec:	mla	r2, r4, r3, r2
   32ff0:	ldr	r4, [fp, #20]
   32ff4:	ldr	r3, [r4, r1, lsl #2]
   32ff8:	ldr	r6, [sp, #44]	; 0x2c
   32ffc:	mul	r6, r3, r6
   33000:	str	r6, [sp, #44]	; 0x2c
   33004:	add	r0, r0, #4
   33008:	add	r1, r1, #1
   3300c:	ldr	r3, [fp, #24]
   33010:	cmp	r1, r3
   33014:	bne	32f94 <GetDataSlab+0x10b58>
   33018:	b	38a50 <GetDataSlab+0x16614>
   3301c:	ldr	r0, [sp, #44]	; 0x2c
   33020:	cmp	r0, #1
   33024:	blt	3ae3c <GetDataSlab+0x18a00>
   33028:	add	r0, r9, #4
   3302c:	str	r0, [sp, #52]	; 0x34
   33030:	add	r9, r4, #4
   33034:	add	r0, sp, #104	; 0x68
   33038:	orr	r8, r0, #4
   3303c:	sub	r0, fp, #72	; 0x48
   33040:	orr	r0, r0, #4
   33044:	str	r0, [sp, #48]	; 0x30
   33048:	mov	sl, #0
   3304c:	ldr	r1, [fp, #16]
   33050:	ldr	r0, [fp, #12]
   33054:	ldr	r0, [r0]
   33058:	add	r2, r0, r2
   3305c:	add	r3, ip, r0
   33060:	ldr	r0, [r4]
   33064:	cmp	r0, #1
   33068:	blt	3309c <GetDataSlab+0x10c60>
   3306c:	ldr	r0, [sp, #60]	; 0x3c
   33070:	add	r7, r0, sl
   33074:	mov	r5, #0
   33078:	ldrb	r0, [r3]
   3307c:	strb	r0, [r7, r5]
   33080:	ldr	r0, [r1]
   33084:	add	r2, r0, r2
   33088:	add	r3, r3, r0
   3308c:	add	r5, r5, #1
   33090:	ldr	r0, [r4]
   33094:	cmp	r5, r0
   33098:	blt	33078 <GetDataSlab+0x10c3c>
   3309c:	ldr	r7, [fp, #8]
   330a0:	ldr	r7, [r7]
   330a4:	ldr	r6, [r1]
   330a8:	mls	r7, r6, r0, r7
   330ac:	ldr	r6, [fp, #12]
   330b0:	ldr	r6, [r6]
   330b4:	sub	r5, r7, r6
   330b8:	add	ip, r3, r5
   330bc:	add	r2, r5, r2
   330c0:	ldr	r3, [fp, #24]
   330c4:	cmp	r3, #2
   330c8:	blt	33184 <GetDataSlab+0x10d48>
   330cc:	mov	r5, #0
   330d0:	mov	r7, r5
   330d4:	ldr	r3, [r8, r5, lsl #2]
   330d8:	add	r3, r3, #1
   330dc:	str	r3, [r8, r5, lsl #2]
   330e0:	ldr	r5, [r9, r5, lsl #2]
   330e4:	sdiv	r6, r3, r5
   330e8:	mls	r3, r6, r5, r3
   330ec:	cmp	r3, #0
   330f0:	bne	33174 <GetDataSlab+0x10d38>
   330f4:	mov	r3, #0
   330f8:	str	r3, [r8, r7, lsl #2]
   330fc:	add	r4, sp, #64	; 0x40
   33100:	add	r3, r4, r7, lsl #2
   33104:	ldr	r5, [r3, #4]
   33108:	sdiv	r3, r2, r5
   3310c:	mls	r6, r3, r5, r2
   33110:	cmp	r6, #0
   33114:	beq	3313c <GetDataSlab+0x10d00>
   33118:	ldr	r3, [r4, r7, lsl #2]
   3311c:	ldr	r1, [sp, #52]	; 0x34
   33120:	ldr	lr, [r1, r7, lsl #2]
   33124:	sub	r5, r5, r6
   33128:	mla	r3, lr, r3, r5
   3312c:	ldr	r1, [fp, #16]
   33130:	add	r2, r3, r2
   33134:	add	ip, ip, r3
   33138:	b	33158 <GetDataSlab+0x10d1c>
   3313c:	ldr	r3, [sp, #52]	; 0x34
   33140:	ldr	r5, [r3, r7, lsl #2]
   33144:	cmp	r5, #0
   33148:	addne	r3, sp, #64	; 0x40
   3314c:	ldrne	r3, [r3, r7, lsl #2]
   33150:	mlane	r2, r3, r5, r2
   33154:	mlane	ip, r3, r5, ip
   33158:	ldr	r4, [fp, #20]
   3315c:	add	r5, r7, #1
   33160:	add	r3, r7, #2
   33164:	ldr	r7, [fp, #24]
   33168:	cmp	r3, r7
   3316c:	blt	330d0 <GetDataSlab+0x10c94>
   33170:	b	33184 <GetDataSlab+0x10d48>
   33174:	ldr	r3, [sp, #48]	; 0x30
   33178:	ldr	r3, [r3, r7, lsl #2]
   3317c:	add	ip, ip, r3
   33180:	add	r2, r3, r2
   33184:	add	sl, r0, sl
   33188:	mov	r0, #0
   3318c:	ldr	r3, [sp, #44]	; 0x2c
   33190:	cmp	sl, r3
   33194:	blt	33050 <GetDataSlab+0x10c14>
   33198:	b	22560 <GetDataSlab+0x124>
   3319c:	ldr	r0, [sp, #44]	; 0x2c
   331a0:	cmp	r0, #1
   331a4:	blt	3ae3c <GetDataSlab+0x18a00>
   331a8:	add	r0, r9, #4
   331ac:	str	r0, [sp, #52]	; 0x34
   331b0:	add	r9, r4, #4
   331b4:	add	r0, sp, #104	; 0x68
   331b8:	orr	r8, r0, #4
   331bc:	sub	r0, fp, #72	; 0x48
   331c0:	orr	r0, r0, #4
   331c4:	str	r0, [sp, #48]	; 0x30
   331c8:	mov	sl, #0
   331cc:	ldr	r1, [fp, #16]
   331d0:	ldr	r0, [fp, #12]
   331d4:	ldr	r0, [r0]
   331d8:	add	r2, r0, r2
   331dc:	add	r3, ip, r0, lsl #1
   331e0:	ldr	r0, [r4]
   331e4:	cmp	r0, #1
   331e8:	blt	3321c <GetDataSlab+0x10de0>
   331ec:	ldr	r0, [sp, #60]	; 0x3c
   331f0:	add	r7, r0, sl
   331f4:	mov	r5, #0
   331f8:	ldrb	r0, [r3]
   331fc:	strb	r0, [r7, r5]
   33200:	ldr	r0, [r1]
   33204:	add	r2, r0, r2
   33208:	add	r3, r3, r0, lsl #1
   3320c:	add	r5, r5, #1
   33210:	ldr	r0, [r4]
   33214:	cmp	r5, r0
   33218:	blt	331f8 <GetDataSlab+0x10dbc>
   3321c:	ldr	r7, [fp, #8]
   33220:	ldr	r7, [r7]
   33224:	ldr	r6, [r1]
   33228:	mls	r7, r6, r0, r7
   3322c:	ldr	r6, [fp, #12]
   33230:	ldr	r6, [r6]
   33234:	sub	r5, r7, r6
   33238:	add	ip, r3, r5, lsl #1
   3323c:	add	r2, r5, r2
   33240:	ldr	r3, [fp, #24]
   33244:	cmp	r3, #2
   33248:	blt	33308 <GetDataSlab+0x10ecc>
   3324c:	mov	r5, #0
   33250:	mov	r7, r5
   33254:	ldr	r3, [r8, r5, lsl #2]
   33258:	add	r3, r3, #1
   3325c:	str	r3, [r8, r5, lsl #2]
   33260:	ldr	r5, [r9, r5, lsl #2]
   33264:	sdiv	r6, r3, r5
   33268:	mls	r3, r6, r5, r3
   3326c:	cmp	r3, #0
   33270:	bne	332f8 <GetDataSlab+0x10ebc>
   33274:	mov	r3, #0
   33278:	str	r3, [r8, r7, lsl #2]
   3327c:	add	r4, sp, #64	; 0x40
   33280:	add	r3, r4, r7, lsl #2
   33284:	ldr	r5, [r3, #4]
   33288:	sdiv	r3, r2, r5
   3328c:	mls	r6, r3, r5, r2
   33290:	cmp	r6, #0
   33294:	beq	332b8 <GetDataSlab+0x10e7c>
   33298:	ldr	r3, [r4, r7, lsl #2]
   3329c:	ldr	r1, [sp, #52]	; 0x34
   332a0:	ldr	lr, [r1, r7, lsl #2]
   332a4:	sub	r5, r5, r6
   332a8:	mla	r3, lr, r3, r5
   332ac:	ldr	r1, [fp, #16]
   332b0:	add	r2, r3, r2
   332b4:	b	332d8 <GetDataSlab+0x10e9c>
   332b8:	ldr	r3, [sp, #52]	; 0x34
   332bc:	ldr	r5, [r3, r7, lsl #2]
   332c0:	cmp	r5, #0
   332c4:	beq	332dc <GetDataSlab+0x10ea0>
   332c8:	add	r3, sp, #64	; 0x40
   332cc:	ldr	r3, [r3, r7, lsl #2]
   332d0:	mla	r2, r3, r5, r2
   332d4:	mul	r3, r3, r5
   332d8:	add	ip, ip, r3, lsl #1
   332dc:	ldr	r4, [fp, #20]
   332e0:	add	r5, r7, #1
   332e4:	add	r3, r7, #2
   332e8:	ldr	r7, [fp, #24]
   332ec:	cmp	r3, r7
   332f0:	blt	33250 <GetDataSlab+0x10e14>
   332f4:	b	33308 <GetDataSlab+0x10ecc>
   332f8:	ldr	r3, [sp, #48]	; 0x30
   332fc:	ldr	r3, [r3, r7, lsl #2]
   33300:	add	ip, ip, r3, lsl #1
   33304:	add	r2, r3, r2
   33308:	add	sl, r0, sl
   3330c:	mov	r0, #0
   33310:	ldr	r3, [sp, #44]	; 0x2c
   33314:	cmp	sl, r3
   33318:	blt	331d0 <GetDataSlab+0x10d94>
   3331c:	b	22560 <GetDataSlab+0x124>
   33320:	ldr	r0, [sp, #44]	; 0x2c
   33324:	cmp	r0, #1
   33328:	blt	3ae3c <GetDataSlab+0x18a00>
   3332c:	add	r0, r9, #4
   33330:	str	r0, [sp, #52]	; 0x34
   33334:	add	r9, r4, #4
   33338:	add	r0, sp, #104	; 0x68
   3333c:	orr	r8, r0, #4
   33340:	sub	r0, fp, #72	; 0x48
   33344:	orr	r0, r0, #4
   33348:	str	r0, [sp, #48]	; 0x30
   3334c:	mov	sl, #0
   33350:	ldr	r1, [fp, #16]
   33354:	ldr	r0, [fp, #12]
   33358:	ldr	r0, [r0]
   3335c:	add	r2, r0, r2
   33360:	add	r3, ip, r0, lsl #1
   33364:	ldr	r0, [r4]
   33368:	cmp	r0, #1
   3336c:	blt	333a0 <GetDataSlab+0x10f64>
   33370:	ldr	r0, [sp, #60]	; 0x3c
   33374:	add	r7, r0, sl
   33378:	mov	r5, #0
   3337c:	ldrb	r0, [r3]
   33380:	strb	r0, [r7, r5]
   33384:	ldr	r0, [r1]
   33388:	add	r2, r0, r2
   3338c:	add	r3, r3, r0, lsl #1
   33390:	add	r5, r5, #1
   33394:	ldr	r0, [r4]
   33398:	cmp	r5, r0
   3339c:	blt	3337c <GetDataSlab+0x10f40>
   333a0:	ldr	r7, [fp, #8]
   333a4:	ldr	r7, [r7]
   333a8:	ldr	r6, [r1]
   333ac:	mls	r7, r6, r0, r7
   333b0:	ldr	r6, [fp, #12]
   333b4:	ldr	r6, [r6]
   333b8:	sub	r5, r7, r6
   333bc:	add	ip, r3, r5, lsl #1
   333c0:	add	r2, r5, r2
   333c4:	ldr	r3, [fp, #24]
   333c8:	cmp	r3, #2
   333cc:	blt	3348c <GetDataSlab+0x11050>
   333d0:	mov	r5, #0
   333d4:	mov	r7, r5
   333d8:	ldr	r3, [r8, r5, lsl #2]
   333dc:	add	r3, r3, #1
   333e0:	str	r3, [r8, r5, lsl #2]
   333e4:	ldr	r5, [r9, r5, lsl #2]
   333e8:	sdiv	r6, r3, r5
   333ec:	mls	r3, r6, r5, r3
   333f0:	cmp	r3, #0
   333f4:	bne	3347c <GetDataSlab+0x11040>
   333f8:	mov	r3, #0
   333fc:	str	r3, [r8, r7, lsl #2]
   33400:	add	r4, sp, #64	; 0x40
   33404:	add	r3, r4, r7, lsl #2
   33408:	ldr	r5, [r3, #4]
   3340c:	sdiv	r3, r2, r5
   33410:	mls	r6, r3, r5, r2
   33414:	cmp	r6, #0
   33418:	beq	3343c <GetDataSlab+0x11000>
   3341c:	ldr	r3, [r4, r7, lsl #2]
   33420:	ldr	r1, [sp, #52]	; 0x34
   33424:	ldr	lr, [r1, r7, lsl #2]
   33428:	sub	r5, r5, r6
   3342c:	mla	r3, lr, r3, r5
   33430:	ldr	r1, [fp, #16]
   33434:	add	r2, r3, r2
   33438:	b	3345c <GetDataSlab+0x11020>
   3343c:	ldr	r3, [sp, #52]	; 0x34
   33440:	ldr	r5, [r3, r7, lsl #2]
   33444:	cmp	r5, #0
   33448:	beq	33460 <GetDataSlab+0x11024>
   3344c:	add	r3, sp, #64	; 0x40
   33450:	ldr	r3, [r3, r7, lsl #2]
   33454:	mla	r2, r3, r5, r2
   33458:	mul	r3, r3, r5
   3345c:	add	ip, ip, r3, lsl #1
   33460:	ldr	r4, [fp, #20]
   33464:	add	r5, r7, #1
   33468:	add	r3, r7, #2
   3346c:	ldr	r7, [fp, #24]
   33470:	cmp	r3, r7
   33474:	blt	333d4 <GetDataSlab+0x10f98>
   33478:	b	3348c <GetDataSlab+0x11050>
   3347c:	ldr	r3, [sp, #48]	; 0x30
   33480:	ldr	r3, [r3, r7, lsl #2]
   33484:	add	ip, ip, r3, lsl #1
   33488:	add	r2, r3, r2
   3348c:	add	sl, r0, sl
   33490:	mov	r0, #0
   33494:	ldr	r3, [sp, #44]	; 0x2c
   33498:	cmp	sl, r3
   3349c:	blt	33354 <GetDataSlab+0x10f18>
   334a0:	b	22560 <GetDataSlab+0x124>
   334a4:	ldr	r0, [sp, #44]	; 0x2c
   334a8:	cmp	r0, #1
   334ac:	blt	3ae3c <GetDataSlab+0x18a00>
   334b0:	add	r0, r9, #4
   334b4:	str	r0, [sp, #52]	; 0x34
   334b8:	add	r9, r4, #4
   334bc:	add	r0, sp, #104	; 0x68
   334c0:	orr	r8, r0, #4
   334c4:	sub	r0, fp, #72	; 0x48
   334c8:	orr	r0, r0, #4
   334cc:	str	r0, [sp, #48]	; 0x30
   334d0:	mov	sl, #0
   334d4:	ldr	r1, [fp, #16]
   334d8:	ldr	r0, [fp, #12]
   334dc:	ldr	r0, [r0]
   334e0:	add	r2, r0, r2
   334e4:	add	r3, ip, r0, lsl #2
   334e8:	ldr	r0, [r4]
   334ec:	cmp	r0, #1
   334f0:	blt	33524 <GetDataSlab+0x110e8>
   334f4:	ldr	r0, [sp, #60]	; 0x3c
   334f8:	add	r7, r0, sl
   334fc:	mov	r5, #0
   33500:	ldr	r0, [r3]
   33504:	strb	r0, [r7, r5]
   33508:	ldr	r0, [r1]
   3350c:	add	r2, r0, r2
   33510:	add	r3, r3, r0, lsl #2
   33514:	add	r5, r5, #1
   33518:	ldr	r0, [r4]
   3351c:	cmp	r5, r0
   33520:	blt	33500 <GetDataSlab+0x110c4>
   33524:	ldr	r7, [fp, #8]
   33528:	ldr	r7, [r7]
   3352c:	ldr	r6, [r1]
   33530:	mls	r7, r6, r0, r7
   33534:	ldr	r6, [fp, #12]
   33538:	ldr	r6, [r6]
   3353c:	sub	r5, r7, r6
   33540:	add	ip, r3, r5, lsl #2
   33544:	add	r2, r5, r2
   33548:	ldr	r3, [fp, #24]
   3354c:	cmp	r3, #2
   33550:	blt	33610 <GetDataSlab+0x111d4>
   33554:	mov	r5, #0
   33558:	mov	r7, r5
   3355c:	ldr	r3, [r8, r5, lsl #2]
   33560:	add	r3, r3, #1
   33564:	str	r3, [r8, r5, lsl #2]
   33568:	ldr	r5, [r9, r5, lsl #2]
   3356c:	sdiv	r6, r3, r5
   33570:	mls	r3, r6, r5, r3
   33574:	cmp	r3, #0
   33578:	bne	33600 <GetDataSlab+0x111c4>
   3357c:	mov	r3, #0
   33580:	str	r3, [r8, r7, lsl #2]
   33584:	add	r4, sp, #64	; 0x40
   33588:	add	r3, r4, r7, lsl #2
   3358c:	ldr	r5, [r3, #4]
   33590:	sdiv	r3, r2, r5
   33594:	mls	r6, r3, r5, r2
   33598:	cmp	r6, #0
   3359c:	beq	335c0 <GetDataSlab+0x11184>
   335a0:	ldr	r3, [r4, r7, lsl #2]
   335a4:	ldr	r1, [sp, #52]	; 0x34
   335a8:	ldr	lr, [r1, r7, lsl #2]
   335ac:	sub	r5, r5, r6
   335b0:	mla	r3, lr, r3, r5
   335b4:	ldr	r1, [fp, #16]
   335b8:	add	r2, r3, r2
   335bc:	b	335e0 <GetDataSlab+0x111a4>
   335c0:	ldr	r3, [sp, #52]	; 0x34
   335c4:	ldr	r5, [r3, r7, lsl #2]
   335c8:	cmp	r5, #0
   335cc:	beq	335e4 <GetDataSlab+0x111a8>
   335d0:	add	r3, sp, #64	; 0x40
   335d4:	ldr	r3, [r3, r7, lsl #2]
   335d8:	mla	r2, r3, r5, r2
   335dc:	mul	r3, r3, r5
   335e0:	add	ip, ip, r3, lsl #2
   335e4:	ldr	r4, [fp, #20]
   335e8:	add	r5, r7, #1
   335ec:	add	r3, r7, #2
   335f0:	ldr	r7, [fp, #24]
   335f4:	cmp	r3, r7
   335f8:	blt	33558 <GetDataSlab+0x1111c>
   335fc:	b	33610 <GetDataSlab+0x111d4>
   33600:	ldr	r3, [sp, #48]	; 0x30
   33604:	ldr	r3, [r3, r7, lsl #2]
   33608:	add	ip, ip, r3, lsl #2
   3360c:	add	r2, r3, r2
   33610:	add	sl, r0, sl
   33614:	mov	r0, #0
   33618:	ldr	r3, [sp, #44]	; 0x2c
   3361c:	cmp	sl, r3
   33620:	blt	334d8 <GetDataSlab+0x1109c>
   33624:	b	22560 <GetDataSlab+0x124>
   33628:	ldr	r0, [sp, #44]	; 0x2c
   3362c:	cmp	r0, #1
   33630:	blt	3ae3c <GetDataSlab+0x18a00>
   33634:	add	r0, r9, #4
   33638:	str	r0, [sp, #52]	; 0x34
   3363c:	add	r9, r4, #4
   33640:	add	r0, sp, #104	; 0x68
   33644:	orr	r8, r0, #4
   33648:	sub	r0, fp, #72	; 0x48
   3364c:	orr	r0, r0, #4
   33650:	str	r0, [sp, #48]	; 0x30
   33654:	mov	sl, #0
   33658:	ldr	r1, [fp, #16]
   3365c:	ldr	r0, [fp, #12]
   33660:	ldr	r0, [r0]
   33664:	add	r2, r0, r2
   33668:	add	r3, ip, r0, lsl #2
   3366c:	ldr	r0, [r4]
   33670:	cmp	r0, #1
   33674:	blt	336a8 <GetDataSlab+0x1126c>
   33678:	ldr	r0, [sp, #60]	; 0x3c
   3367c:	add	r7, r0, sl
   33680:	mov	r5, #0
   33684:	ldr	r0, [r3]
   33688:	strb	r0, [r7, r5]
   3368c:	ldr	r0, [r1]
   33690:	add	r2, r0, r2
   33694:	add	r3, r3, r0, lsl #2
   33698:	add	r5, r5, #1
   3369c:	ldr	r0, [r4]
   336a0:	cmp	r5, r0
   336a4:	blt	33684 <GetDataSlab+0x11248>
   336a8:	ldr	r7, [fp, #8]
   336ac:	ldr	r7, [r7]
   336b0:	ldr	r6, [r1]
   336b4:	mls	r7, r6, r0, r7
   336b8:	ldr	r6, [fp, #12]
   336bc:	ldr	r6, [r6]
   336c0:	sub	r5, r7, r6
   336c4:	add	ip, r3, r5, lsl #2
   336c8:	add	r2, r5, r2
   336cc:	ldr	r3, [fp, #24]
   336d0:	cmp	r3, #2
   336d4:	blt	33794 <GetDataSlab+0x11358>
   336d8:	mov	r5, #0
   336dc:	mov	r7, r5
   336e0:	ldr	r3, [r8, r5, lsl #2]
   336e4:	add	r3, r3, #1
   336e8:	str	r3, [r8, r5, lsl #2]
   336ec:	ldr	r5, [r9, r5, lsl #2]
   336f0:	sdiv	r6, r3, r5
   336f4:	mls	r3, r6, r5, r3
   336f8:	cmp	r3, #0
   336fc:	bne	33784 <GetDataSlab+0x11348>
   33700:	mov	r3, #0
   33704:	str	r3, [r8, r7, lsl #2]
   33708:	add	r4, sp, #64	; 0x40
   3370c:	add	r3, r4, r7, lsl #2
   33710:	ldr	r5, [r3, #4]
   33714:	sdiv	r3, r2, r5
   33718:	mls	r6, r3, r5, r2
   3371c:	cmp	r6, #0
   33720:	beq	33744 <GetDataSlab+0x11308>
   33724:	ldr	r3, [r4, r7, lsl #2]
   33728:	ldr	r1, [sp, #52]	; 0x34
   3372c:	ldr	lr, [r1, r7, lsl #2]
   33730:	sub	r5, r5, r6
   33734:	mla	r3, lr, r3, r5
   33738:	ldr	r1, [fp, #16]
   3373c:	add	r2, r3, r2
   33740:	b	33764 <GetDataSlab+0x11328>
   33744:	ldr	r3, [sp, #52]	; 0x34
   33748:	ldr	r5, [r3, r7, lsl #2]
   3374c:	cmp	r5, #0
   33750:	beq	33768 <GetDataSlab+0x1132c>
   33754:	add	r3, sp, #64	; 0x40
   33758:	ldr	r3, [r3, r7, lsl #2]
   3375c:	mla	r2, r3, r5, r2
   33760:	mul	r3, r3, r5
   33764:	add	ip, ip, r3, lsl #2
   33768:	ldr	r4, [fp, #20]
   3376c:	add	r5, r7, #1
   33770:	add	r3, r7, #2
   33774:	ldr	r7, [fp, #24]
   33778:	cmp	r3, r7
   3377c:	blt	336dc <GetDataSlab+0x112a0>
   33780:	b	33794 <GetDataSlab+0x11358>
   33784:	ldr	r3, [sp, #48]	; 0x30
   33788:	ldr	r3, [r3, r7, lsl #2]
   3378c:	add	ip, ip, r3, lsl #2
   33790:	add	r2, r3, r2
   33794:	add	sl, r0, sl
   33798:	mov	r0, #0
   3379c:	ldr	r3, [sp, #44]	; 0x2c
   337a0:	cmp	sl, r3
   337a4:	blt	3365c <GetDataSlab+0x11220>
   337a8:	b	22560 <GetDataSlab+0x124>
   337ac:	ldr	r0, [sp, #44]	; 0x2c
   337b0:	cmp	r0, #1
   337b4:	blt	3ae3c <GetDataSlab+0x18a00>
   337b8:	ldr	r0, [fp, #12]
   337bc:	add	r0, r0, #4
   337c0:	str	r0, [sp, #52]	; 0x34
   337c4:	mov	r0, ip
   337c8:	add	ip, r4, #4
   337cc:	add	r1, sp, #104	; 0x68
   337d0:	orr	r8, r1, #4
   337d4:	orr	r0, r0, #4
   337d8:	str	r0, [sp, #48]	; 0x30
   337dc:	mov	sl, #0
   337e0:	ldr	r1, [fp, #16]
   337e4:	ldr	r0, [fp, #12]
   337e8:	ldr	r0, [r0]
   337ec:	add	r2, r0, r2
   337f0:	add	r3, r9, r0, lsl #2
   337f4:	ldr	r0, [r4]
   337f8:	cmp	r0, #1
   337fc:	blt	33838 <GetDataSlab+0x113fc>
   33800:	ldr	r0, [sp, #60]	; 0x3c
   33804:	add	r7, r0, sl
   33808:	mov	r5, #0
   3380c:	vldr	s0, [r3]
   33810:	vcvt.u32.f32	s0, s0
   33814:	vmov	r0, s0
   33818:	strb	r0, [r7, r5]
   3381c:	ldr	r0, [r1]
   33820:	add	r2, r0, r2
   33824:	add	r3, r3, r0, lsl #2
   33828:	add	r5, r5, #1
   3382c:	ldr	r0, [r4]
   33830:	cmp	r5, r0
   33834:	blt	3380c <GetDataSlab+0x113d0>
   33838:	ldr	r7, [fp, #8]
   3383c:	ldr	r5, [r7]
   33840:	ldr	r6, [r1]
   33844:	mls	r5, r6, r0, r5
   33848:	ldr	r7, [fp, #12]
   3384c:	ldr	r6, [r7]
   33850:	sub	r5, r5, r6
   33854:	add	r9, r3, r5, lsl #2
   33858:	add	r2, r5, r2
   3385c:	ldr	r3, [fp, #24]
   33860:	cmp	r3, #2
   33864:	blt	33924 <GetDataSlab+0x114e8>
   33868:	mov	r5, #0
   3386c:	mov	r7, r5
   33870:	ldr	r3, [r8, r5, lsl #2]
   33874:	add	r3, r3, #1
   33878:	str	r3, [r8, r5, lsl #2]
   3387c:	ldr	r5, [ip, r5, lsl #2]
   33880:	sdiv	r6, r3, r5
   33884:	mls	r3, r6, r5, r3
   33888:	cmp	r3, #0
   3388c:	bne	33914 <GetDataSlab+0x114d8>
   33890:	mov	r3, #0
   33894:	str	r3, [r8, r7, lsl #2]
   33898:	add	r4, sp, #64	; 0x40
   3389c:	add	r3, r4, r7, lsl #2
   338a0:	ldr	r5, [r3, #4]
   338a4:	sdiv	r3, r2, r5
   338a8:	mls	r6, r3, r5, r2
   338ac:	cmp	r6, #0
   338b0:	beq	338d4 <GetDataSlab+0x11498>
   338b4:	ldr	r3, [r4, r7, lsl #2]
   338b8:	ldr	r1, [sp, #52]	; 0x34
   338bc:	ldr	lr, [r1, r7, lsl #2]
   338c0:	sub	r5, r5, r6
   338c4:	mla	r3, lr, r3, r5
   338c8:	ldr	r1, [fp, #16]
   338cc:	add	r2, r3, r2
   338d0:	b	338f4 <GetDataSlab+0x114b8>
   338d4:	ldr	r3, [sp, #52]	; 0x34
   338d8:	ldr	r5, [r3, r7, lsl #2]
   338dc:	cmp	r5, #0
   338e0:	beq	338f8 <GetDataSlab+0x114bc>
   338e4:	add	r3, sp, #64	; 0x40
   338e8:	ldr	r3, [r3, r7, lsl #2]
   338ec:	mla	r2, r3, r5, r2
   338f0:	mul	r3, r3, r5
   338f4:	add	r9, r9, r3, lsl #2
   338f8:	ldr	r4, [fp, #20]
   338fc:	add	r5, r7, #1
   33900:	add	r3, r7, #2
   33904:	ldr	r7, [fp, #24]
   33908:	cmp	r3, r7
   3390c:	blt	3386c <GetDataSlab+0x11430>
   33910:	b	33924 <GetDataSlab+0x114e8>
   33914:	ldr	r3, [sp, #48]	; 0x30
   33918:	ldr	r3, [r3, r7, lsl #2]
   3391c:	add	r9, r9, r3, lsl #2
   33920:	add	r2, r3, r2
   33924:	add	sl, r0, sl
   33928:	mov	r0, #0
   3392c:	ldr	r3, [sp, #44]	; 0x2c
   33930:	cmp	sl, r3
   33934:	blt	337e4 <GetDataSlab+0x113a8>
   33938:	b	22560 <GetDataSlab+0x124>
   3393c:	ldr	r0, [sp, #44]	; 0x2c
   33940:	cmp	r0, #1
   33944:	blt	3ae3c <GetDataSlab+0x18a00>
   33948:	ldr	r0, [fp, #12]
   3394c:	add	r0, r0, #4
   33950:	str	r0, [sp, #52]	; 0x34
   33954:	mov	r0, ip
   33958:	add	ip, r4, #4
   3395c:	add	r1, sp, #104	; 0x68
   33960:	orr	r8, r1, #4
   33964:	orr	r0, r0, #4
   33968:	str	r0, [sp, #48]	; 0x30
   3396c:	mov	sl, #0
   33970:	ldr	r1, [fp, #16]
   33974:	ldr	r0, [fp, #12]
   33978:	ldr	r0, [r0]
   3397c:	add	r2, r0, r2
   33980:	add	r3, r9, r0, lsl #3
   33984:	ldr	r0, [r4]
   33988:	cmp	r0, #1
   3398c:	blt	339c8 <GetDataSlab+0x1158c>
   33990:	ldr	r0, [sp, #60]	; 0x3c
   33994:	add	r7, r0, sl
   33998:	mov	r5, #0
   3399c:	vldr	d16, [r3]
   339a0:	vcvt.u32.f64	s0, d16
   339a4:	vmov	r0, s0
   339a8:	strb	r0, [r7, r5]
   339ac:	ldr	r0, [r1]
   339b0:	add	r2, r0, r2
   339b4:	add	r3, r3, r0, lsl #3
   339b8:	add	r5, r5, #1
   339bc:	ldr	r0, [r4]
   339c0:	cmp	r5, r0
   339c4:	blt	3399c <GetDataSlab+0x11560>
   339c8:	ldr	r7, [fp, #8]
   339cc:	ldr	r5, [r7]
   339d0:	ldr	r6, [r1]
   339d4:	mls	r5, r6, r0, r5
   339d8:	ldr	r7, [fp, #12]
   339dc:	ldr	r6, [r7]
   339e0:	sub	r5, r5, r6
   339e4:	add	r9, r3, r5, lsl #3
   339e8:	add	r2, r5, r2
   339ec:	ldr	r3, [fp, #24]
   339f0:	cmp	r3, #2
   339f4:	blt	33ab4 <GetDataSlab+0x11678>
   339f8:	mov	r5, #0
   339fc:	mov	r7, r5
   33a00:	ldr	r3, [r8, r5, lsl #2]
   33a04:	add	r3, r3, #1
   33a08:	str	r3, [r8, r5, lsl #2]
   33a0c:	ldr	r5, [ip, r5, lsl #2]
   33a10:	sdiv	r6, r3, r5
   33a14:	mls	r3, r6, r5, r3
   33a18:	cmp	r3, #0
   33a1c:	bne	33aa4 <GetDataSlab+0x11668>
   33a20:	mov	r3, #0
   33a24:	str	r3, [r8, r7, lsl #2]
   33a28:	add	r4, sp, #64	; 0x40
   33a2c:	add	r3, r4, r7, lsl #2
   33a30:	ldr	r5, [r3, #4]
   33a34:	sdiv	r3, r2, r5
   33a38:	mls	r6, r3, r5, r2
   33a3c:	cmp	r6, #0
   33a40:	beq	33a64 <GetDataSlab+0x11628>
   33a44:	ldr	r3, [r4, r7, lsl #2]
   33a48:	ldr	r1, [sp, #52]	; 0x34
   33a4c:	ldr	lr, [r1, r7, lsl #2]
   33a50:	sub	r5, r5, r6
   33a54:	mla	r3, lr, r3, r5
   33a58:	ldr	r1, [fp, #16]
   33a5c:	add	r2, r3, r2
   33a60:	b	33a84 <GetDataSlab+0x11648>
   33a64:	ldr	r3, [sp, #52]	; 0x34
   33a68:	ldr	r5, [r3, r7, lsl #2]
   33a6c:	cmp	r5, #0
   33a70:	beq	33a88 <GetDataSlab+0x1164c>
   33a74:	add	r3, sp, #64	; 0x40
   33a78:	ldr	r3, [r3, r7, lsl #2]
   33a7c:	mla	r2, r3, r5, r2
   33a80:	mul	r3, r3, r5
   33a84:	add	r9, r9, r3, lsl #3
   33a88:	ldr	r4, [fp, #20]
   33a8c:	add	r5, r7, #1
   33a90:	add	r3, r7, #2
   33a94:	ldr	r7, [fp, #24]
   33a98:	cmp	r3, r7
   33a9c:	blt	339fc <GetDataSlab+0x115c0>
   33aa0:	b	33ab4 <GetDataSlab+0x11678>
   33aa4:	ldr	r3, [sp, #48]	; 0x30
   33aa8:	ldr	r3, [r3, r7, lsl #2]
   33aac:	add	r9, r9, r3, lsl #3
   33ab0:	add	r2, r3, r2
   33ab4:	add	sl, r0, sl
   33ab8:	mov	r0, #0
   33abc:	ldr	r3, [sp, #44]	; 0x2c
   33ac0:	cmp	sl, r3
   33ac4:	blt	33974 <GetDataSlab+0x11538>
   33ac8:	b	22560 <GetDataSlab+0x124>
   33acc:	ldr	r0, [sp, #44]	; 0x2c
   33ad0:	cmp	r0, #1
   33ad4:	sub	r0, fp, #72	; 0x48
   33ad8:	blt	33c54 <GetDataSlab+0x11818>
   33adc:	add	r9, r9, #4
   33ae0:	add	r6, r4, #4
   33ae4:	add	r2, sp, #104	; 0x68
   33ae8:	orr	r5, r2, #4
   33aec:	orr	r0, r0, #4
   33af0:	str	r0, [sp, #40]	; 0x28
   33af4:	mov	sl, #0
   33af8:	ldr	ip, [sp, #60]	; 0x3c
   33afc:	ldr	r0, [fp, #12]
   33b00:	ldr	r0, [r0]
   33b04:	add	r1, r0, r1
   33b08:	add	r2, r8, r0, lsl #3
   33b0c:	ldr	r0, [r4]
   33b10:	cmp	r0, #1
   33b14:	blt	33b54 <GetDataSlab+0x11718>
   33b18:	add	r7, ip, sl
   33b1c:	mov	r3, #0
   33b20:	ldr	lr, [fp, #8]
   33b24:	mov	r8, lr
   33b28:	ldr	lr, [fp, #16]
   33b2c:	ldrb	r0, [r2]
   33b30:	strb	r0, [r7, r3]
   33b34:	ldr	r0, [lr]
   33b38:	add	r1, r0, r1
   33b3c:	add	r2, r2, r0, lsl #3
   33b40:	add	r3, r3, #1
   33b44:	ldr	r0, [r4]
   33b48:	cmp	r3, r0
   33b4c:	blt	33b2c <GetDataSlab+0x116f0>
   33b50:	b	33b60 <GetDataSlab+0x11724>
   33b54:	ldr	lr, [fp, #8]
   33b58:	mov	r8, lr
   33b5c:	ldr	lr, [fp, #16]
   33b60:	ldr	r3, [r8]
   33b64:	ldr	r4, [lr]
   33b68:	mls	r3, r4, r0, r3
   33b6c:	ldr	r4, [fp, #12]
   33b70:	ldr	r4, [r4]
   33b74:	sub	r3, r3, r4
   33b78:	add	r8, r2, r3, lsl #3
   33b7c:	add	r1, r3, r1
   33b80:	ldr	r2, [fp, #24]
   33b84:	cmp	r2, #2
   33b88:	blt	33c40 <GetDataSlab+0x11804>
   33b8c:	mov	r3, #0
   33b90:	mov	r7, r3
   33b94:	ldr	r2, [r5, r3, lsl #2]
   33b98:	add	r2, r2, #1
   33b9c:	str	r2, [r5, r3, lsl #2]
   33ba0:	ldr	r3, [r6, r3, lsl #2]
   33ba4:	sdiv	r4, r2, r3
   33ba8:	mls	r2, r4, r3, r2
   33bac:	cmp	r2, #0
   33bb0:	bne	33c30 <GetDataSlab+0x117f4>
   33bb4:	mov	r2, #0
   33bb8:	str	r2, [r5, r7, lsl #2]
   33bbc:	add	lr, sp, #64	; 0x40
   33bc0:	add	r2, lr, r7, lsl #2
   33bc4:	ldr	r3, [r2, #4]
   33bc8:	sdiv	r2, r1, r3
   33bcc:	mls	r4, r2, r3, r1
   33bd0:	cmp	r4, #0
   33bd4:	beq	33bf4 <GetDataSlab+0x117b8>
   33bd8:	ldr	r2, [lr, r7, lsl #2]
   33bdc:	ldr	ip, [r9, r7, lsl #2]
   33be0:	sub	r3, r3, r4
   33be4:	mla	r2, ip, r2, r3
   33be8:	ldr	ip, [sp, #60]	; 0x3c
   33bec:	add	r1, r2, r1
   33bf0:	b	33c10 <GetDataSlab+0x117d4>
   33bf4:	ldr	r3, [r9, r7, lsl #2]
   33bf8:	cmp	r3, #0
   33bfc:	beq	33c14 <GetDataSlab+0x117d8>
   33c00:	add	r2, sp, #64	; 0x40
   33c04:	ldr	r2, [r2, r7, lsl #2]
   33c08:	mla	r1, r2, r3, r1
   33c0c:	mul	r2, r2, r3
   33c10:	add	r8, r8, r2, lsl #3
   33c14:	ldr	lr, [fp, #16]
   33c18:	add	r3, r7, #1
   33c1c:	add	r2, r7, #2
   33c20:	ldr	r4, [fp, #24]
   33c24:	cmp	r2, r4
   33c28:	blt	33b90 <GetDataSlab+0x11754>
   33c2c:	b	33c40 <GetDataSlab+0x11804>
   33c30:	ldr	r2, [sp, #40]	; 0x28
   33c34:	ldr	r2, [r2, r7, lsl #2]
   33c38:	add	r8, r8, r2, lsl #3
   33c3c:	add	r1, r2, r1
   33c40:	add	sl, r0, sl
   33c44:	ldr	r0, [sp, #44]	; 0x2c
   33c48:	cmp	sl, r0
   33c4c:	ldr	r4, [fp, #20]
   33c50:	blt	33afc <GetDataSlab+0x116c0>
   33c54:	mov	r0, #0
   33c58:	ldr	r1, [sp, #52]	; 0x34
   33c5c:	cmp	r1, #13
   33c60:	bne	22560 <GetDataSlab+0x124>
   33c64:	ldr	lr, [lr]
   33c68:	sub	r1, lr, #1
   33c6c:	str	r1, [fp, #-72]	; 0xffffffb8
   33c70:	ldr	r3, [fp, #8]
   33c74:	ldr	r1, [r3]
   33c78:	str	r1, [sp, #64]	; 0x40
   33c7c:	ldr	r0, [r4]
   33c80:	str	r0, [sp, #44]	; 0x2c
   33c84:	mov	r2, #0
   33c88:	ldr	r0, [fp, #24]
   33c8c:	cmp	r0, #2
   33c90:	blt	38bbc <GetDataSlab+0x16780>
   33c94:	mov	r1, #1
   33c98:	mov	r2, #0
   33c9c:	mov	r0, r3
   33ca0:	ldr	r9, [fp, #12]
   33ca4:	add	ip, sp, #64	; 0x40
   33ca8:	sub	r5, fp, #72	; 0x48
   33cac:	ldr	sl, [sp, #48]	; 0x30
   33cb0:	ldr	r3, [fp, #16]
   33cb4:	ldr	r7, [r3, r1, lsl #2]
   33cb8:	sub	r7, r7, #1
   33cbc:	str	r7, [r5, r1, lsl #2]
   33cc0:	sub	r8, r1, #1
   33cc4:	ldr	r3, [fp, #8]
   33cc8:	ldr	r5, [r3, r8, lsl #2]
   33ccc:	str	r5, [ip, r1, lsl #2]
   33cd0:	mov	r4, #0
   33cd4:	mov	r3, r0
   33cd8:	ldr	r6, [r3, -r4, lsl #2]!
   33cdc:	mul	r7, r7, r6
   33ce0:	ldr	r3, [r3, #4]
   33ce4:	mul	r5, r3, r5
   33ce8:	add	r4, r4, #1
   33cec:	cmp	r1, r4
   33cf0:	bne	33cd4 <GetDataSlab+0x11898>
   33cf4:	str	r5, [ip, r1, lsl #2]
   33cf8:	sub	r5, fp, #72	; 0x48
   33cfc:	str	r7, [r5, r1, lsl #2]
   33d00:	ldr	r3, [ip, r8, lsl #2]
   33d04:	ldr	r4, [r9, r1, lsl #2]
   33d08:	mla	r2, r4, r3, r2
   33d0c:	ldr	r4, [fp, #20]
   33d10:	ldr	r3, [r4, r1, lsl #2]
   33d14:	ldr	r6, [sp, #44]	; 0x2c
   33d18:	mul	r6, r3, r6
   33d1c:	str	r6, [sp, #44]	; 0x2c
   33d20:	add	r0, r0, #4
   33d24:	add	r1, r1, #1
   33d28:	ldr	r3, [fp, #24]
   33d2c:	cmp	r1, r3
   33d30:	bne	33cb0 <GetDataSlab+0x11874>
   33d34:	b	38bc4 <GetDataSlab+0x16788>
   33d38:	ldr	r0, [sp, #52]	; 0x34
   33d3c:	cmp	r0, #1
   33d40:	ldr	r0, [fp, #20]
   33d44:	blt	3ae3c <GetDataSlab+0x18a00>
   33d48:	ldr	r2, [sp, #44]	; 0x2c
   33d4c:	ldr	r1, [sp, #40]	; 0x28
   33d50:	mls	r1, r2, lr, r1
   33d54:	str	r1, [sp, #48]	; 0x30
   33d58:	mul	r1, r2, lr
   33d5c:	str	r1, [sp, #36]	; 0x24
   33d60:	add	r8, r9, #4
   33d64:	add	r9, r0, #4
   33d68:	add	r0, sp, #104	; 0x68
   33d6c:	orr	r1, r0, #4
   33d70:	orr	r0, ip, #4
   33d74:	str	r0, [sp, #32]
   33d78:	lsl	r0, r2, #1
   33d7c:	str	r0, [sp, #40]	; 0x28
   33d80:	mov	sl, #0
   33d84:	ldr	r0, [fp, #12]
   33d88:	ldr	r0, [r0]
   33d8c:	cmp	r2, #1
   33d90:	blt	33dc4 <GetDataSlab+0x11988>
   33d94:	ldr	r7, [sp, #36]	; 0x24
   33d98:	add	r4, r7, r3
   33d9c:	add	r3, r5, r7
   33da0:	add	r5, r5, r0
   33da4:	ldr	ip, [sp, #60]	; 0x3c
   33da8:	ldrb	r6, [r5], lr
   33dac:	strh	r6, [ip], #2
   33db0:	subs	r2, r2, #1
   33db4:	bne	33da8 <GetDataSlab+0x1196c>
   33db8:	add	r2, r4, r0
   33dbc:	mov	r5, r3
   33dc0:	b	33dc8 <GetDataSlab+0x1198c>
   33dc4:	add	r2, r0, r3
   33dc8:	ldr	ip, [sp, #60]	; 0x3c
   33dcc:	ldr	r3, [sp, #48]	; 0x30
   33dd0:	add	r5, r5, r3
   33dd4:	sub	r0, r3, r0
   33dd8:	add	r3, r2, r0
   33ddc:	ldr	r0, [fp, #24]
   33de0:	cmp	r0, #2
   33de4:	blt	33e90 <GetDataSlab+0x11a54>
   33de8:	mov	r2, #0
   33dec:	mov	r0, r2
   33df0:	ldr	r2, [r1, r2, lsl #2]
   33df4:	add	r2, r2, #1
   33df8:	str	r2, [r1, r0, lsl #2]
   33dfc:	ldr	r6, [r9, r0, lsl #2]
   33e00:	sdiv	r4, r2, r6
   33e04:	mls	r2, r4, r6, r2
   33e08:	cmp	r2, #0
   33e0c:	bne	33e80 <GetDataSlab+0x11a44>
   33e10:	mov	r2, #0
   33e14:	str	r2, [r1, r0, lsl #2]
   33e18:	add	r4, sp, #64	; 0x40
   33e1c:	add	r2, r4, r0, lsl #2
   33e20:	ldr	r2, [r2, #4]
   33e24:	sdiv	r6, r3, r2
   33e28:	mls	r6, r6, r2, r3
   33e2c:	cmp	r6, #0
   33e30:	beq	33e50 <GetDataSlab+0x11a14>
   33e34:	ldr	r4, [r4, r0, lsl #2]
   33e38:	ldr	r7, [r8, r0, lsl #2]
   33e3c:	sub	r2, r2, r6
   33e40:	mla	r2, r7, r4, r2
   33e44:	add	r3, r2, r3
   33e48:	add	r5, r5, r2
   33e4c:	b	33e68 <GetDataSlab+0x11a2c>
   33e50:	ldr	r2, [r8, r0, lsl #2]
   33e54:	cmp	r2, #0
   33e58:	addne	r4, sp, #64	; 0x40
   33e5c:	ldrne	r7, [r4, r0, lsl #2]
   33e60:	mlane	r3, r7, r2, r3
   33e64:	mlane	r5, r7, r2, r5
   33e68:	add	r2, r0, #1
   33e6c:	add	r0, r0, #2
   33e70:	ldr	r4, [fp, #24]
   33e74:	cmp	r0, r4
   33e78:	blt	33dec <GetDataSlab+0x119b0>
   33e7c:	b	33e90 <GetDataSlab+0x11a54>
   33e80:	ldr	r2, [sp, #32]
   33e84:	ldr	r0, [r2, r0, lsl #2]
   33e88:	add	r5, r5, r0
   33e8c:	add	r3, r0, r3
   33e90:	ldr	r0, [sp, #40]	; 0x28
   33e94:	add	ip, ip, r0
   33e98:	str	ip, [sp, #60]	; 0x3c
   33e9c:	ldr	r2, [sp, #44]	; 0x2c
   33ea0:	add	sl, sl, r2
   33ea4:	mov	r0, #0
   33ea8:	ldr	r7, [sp, #52]	; 0x34
   33eac:	cmp	sl, r7
   33eb0:	blt	33d84 <GetDataSlab+0x11948>
   33eb4:	b	22560 <GetDataSlab+0x124>
   33eb8:	ldr	r0, [sp, #52]	; 0x34
   33ebc:	cmp	r0, #1
   33ec0:	ldr	r1, [sp, #44]	; 0x2c
   33ec4:	blt	3ae3c <GetDataSlab+0x18a00>
   33ec8:	ldr	r0, [sp, #40]	; 0x28
   33ecc:	mls	r0, r1, r8, r0
   33ed0:	ldr	r3, [r9], #4
   33ed4:	mov	lr, r9
   33ed8:	sub	r0, r0, r3
   33edc:	str	r0, [sp, #48]	; 0x30
   33ee0:	add	sl, r4, #4
   33ee4:	add	r0, sp, #104	; 0x68
   33ee8:	orr	r6, r0, #4
   33eec:	sub	r0, fp, #72	; 0x48
   33ef0:	orr	r0, r0, #4
   33ef4:	str	r0, [sp, #32]
   33ef8:	str	r3, [sp, #56]	; 0x38
   33efc:	mla	r0, r1, r8, r3
   33f00:	str	r0, [sp, #36]	; 0x24
   33f04:	lsl	r0, r1, #1
   33f08:	str	r0, [sp, #40]	; 0x28
   33f0c:	lsl	r4, r8, #1
   33f10:	mov	r8, #0
   33f14:	cmp	r1, #1
   33f18:	ldr	r0, [sp, #56]	; 0x38
   33f1c:	blt	33f44 <GetDataSlab+0x11b08>
   33f20:	ldr	r0, [sp, #56]	; 0x38
   33f24:	add	r0, ip, r0, lsl #1
   33f28:	ldr	r1, [sp, #44]	; 0x2c
   33f2c:	ldr	r3, [sp, #60]	; 0x3c
   33f30:	ldrh	r7, [r0], r4
   33f34:	strh	r7, [r3], #2
   33f38:	subs	r1, r1, #1
   33f3c:	bne	33f30 <GetDataSlab+0x11af4>
   33f40:	ldr	r0, [sp, #36]	; 0x24
   33f44:	ldr	r3, [sp, #48]	; 0x30
   33f48:	add	r1, ip, r3, lsl #1
   33f4c:	add	ip, r1, r0, lsl #1
   33f50:	add	r0, r0, r2
   33f54:	add	r2, r0, r3
   33f58:	ldr	r0, [fp, #24]
   33f5c:	cmp	r0, #2
   33f60:	blt	34014 <GetDataSlab+0x11bd8>
   33f64:	mov	r9, #0
   33f68:	mov	r0, r9
   33f6c:	ldr	r1, [r6, r9, lsl #2]
   33f70:	add	r1, r1, #1
   33f74:	str	r1, [r6, r9, lsl #2]
   33f78:	ldr	r3, [sl, r9, lsl #2]
   33f7c:	sdiv	r7, r1, r3
   33f80:	mls	r1, r7, r3, r1
   33f84:	cmp	r1, #0
   33f88:	bne	34004 <GetDataSlab+0x11bc8>
   33f8c:	mov	r1, #0
   33f90:	str	r1, [r6, r0, lsl #2]
   33f94:	add	r5, sp, #64	; 0x40
   33f98:	add	r1, r5, r0, lsl #2
   33f9c:	ldr	r1, [r1, #4]
   33fa0:	sdiv	r3, r2, r1
   33fa4:	mls	r3, r3, r1, r2
   33fa8:	cmp	r3, #0
   33fac:	beq	33fc8 <GetDataSlab+0x11b8c>
   33fb0:	ldr	r7, [r5, r0, lsl #2]
   33fb4:	ldr	r5, [lr, r0, lsl #2]
   33fb8:	sub	r1, r1, r3
   33fbc:	mla	r1, r5, r7, r1
   33fc0:	add	r2, r1, r2
   33fc4:	b	33fe8 <GetDataSlab+0x11bac>
   33fc8:	mov	r1, lr
   33fcc:	ldr	r1, [lr, r0, lsl #2]
   33fd0:	cmp	r1, #0
   33fd4:	beq	33fec <GetDataSlab+0x11bb0>
   33fd8:	add	r3, sp, #64	; 0x40
   33fdc:	ldr	r3, [r3, r0, lsl #2]
   33fe0:	mla	r2, r3, r1, r2
   33fe4:	mul	r1, r3, r1
   33fe8:	add	ip, ip, r1, lsl #1
   33fec:	add	r9, r0, #1
   33ff0:	add	r0, r0, #2
   33ff4:	ldr	r1, [fp, #24]
   33ff8:	cmp	r0, r1
   33ffc:	blt	33f68 <GetDataSlab+0x11b2c>
   34000:	b	34014 <GetDataSlab+0x11bd8>
   34004:	ldr	r1, [sp, #32]
   34008:	ldr	r0, [r1, r0, lsl #2]
   3400c:	add	ip, ip, r0, lsl #1
   34010:	add	r2, r0, r2
   34014:	ldr	r0, [sp, #60]	; 0x3c
   34018:	ldr	r1, [sp, #40]	; 0x28
   3401c:	add	r0, r0, r1
   34020:	str	r0, [sp, #60]	; 0x3c
   34024:	ldr	r1, [sp, #44]	; 0x2c
   34028:	add	r8, r8, r1
   3402c:	mov	r0, #0
   34030:	ldr	r3, [sp, #52]	; 0x34
   34034:	cmp	r8, r3
   34038:	blt	33f14 <GetDataSlab+0x11ad8>
   3403c:	b	22560 <GetDataSlab+0x124>
   34040:	ldr	r0, [sp, #52]	; 0x34
   34044:	cmp	r0, #1
   34048:	ldr	r1, [sp, #44]	; 0x2c
   3404c:	blt	3ae3c <GetDataSlab+0x18a00>
   34050:	ldr	r0, [sp, #40]	; 0x28
   34054:	mls	r0, r1, r8, r0
   34058:	ldr	r3, [r9], #4
   3405c:	mov	lr, r9
   34060:	sub	r0, r0, r3
   34064:	str	r0, [sp, #48]	; 0x30
   34068:	add	sl, r4, #4
   3406c:	add	r0, sp, #104	; 0x68
   34070:	orr	r6, r0, #4
   34074:	sub	r0, fp, #72	; 0x48
   34078:	orr	r0, r0, #4
   3407c:	str	r0, [sp, #32]
   34080:	str	r3, [sp, #56]	; 0x38
   34084:	mla	r0, r1, r8, r3
   34088:	str	r0, [sp, #36]	; 0x24
   3408c:	lsl	r0, r1, #1
   34090:	str	r0, [sp, #40]	; 0x28
   34094:	lsl	r4, r8, #1
   34098:	mov	r8, #0
   3409c:	cmp	r1, #1
   340a0:	ldr	r0, [sp, #56]	; 0x38
   340a4:	blt	340cc <GetDataSlab+0x11c90>
   340a8:	ldr	r0, [sp, #56]	; 0x38
   340ac:	add	r0, ip, r0, lsl #1
   340b0:	ldr	r1, [sp, #44]	; 0x2c
   340b4:	ldr	r3, [sp, #60]	; 0x3c
   340b8:	ldrh	r7, [r0], r4
   340bc:	strh	r7, [r3], #2
   340c0:	subs	r1, r1, #1
   340c4:	bne	340b8 <GetDataSlab+0x11c7c>
   340c8:	ldr	r0, [sp, #36]	; 0x24
   340cc:	ldr	r3, [sp, #48]	; 0x30
   340d0:	add	r1, ip, r3, lsl #1
   340d4:	add	ip, r1, r0, lsl #1
   340d8:	add	r0, r0, r2
   340dc:	add	r2, r0, r3
   340e0:	ldr	r0, [fp, #24]
   340e4:	cmp	r0, #2
   340e8:	blt	3419c <GetDataSlab+0x11d60>
   340ec:	mov	r9, #0
   340f0:	mov	r0, r9
   340f4:	ldr	r1, [r6, r9, lsl #2]
   340f8:	add	r1, r1, #1
   340fc:	str	r1, [r6, r9, lsl #2]
   34100:	ldr	r3, [sl, r9, lsl #2]
   34104:	sdiv	r7, r1, r3
   34108:	mls	r1, r7, r3, r1
   3410c:	cmp	r1, #0
   34110:	bne	3418c <GetDataSlab+0x11d50>
   34114:	mov	r1, #0
   34118:	str	r1, [r6, r0, lsl #2]
   3411c:	add	r5, sp, #64	; 0x40
   34120:	add	r1, r5, r0, lsl #2
   34124:	ldr	r1, [r1, #4]
   34128:	sdiv	r3, r2, r1
   3412c:	mls	r3, r3, r1, r2
   34130:	cmp	r3, #0
   34134:	beq	34150 <GetDataSlab+0x11d14>
   34138:	ldr	r7, [r5, r0, lsl #2]
   3413c:	ldr	r5, [lr, r0, lsl #2]
   34140:	sub	r1, r1, r3
   34144:	mla	r1, r5, r7, r1
   34148:	add	r2, r1, r2
   3414c:	b	34170 <GetDataSlab+0x11d34>
   34150:	mov	r1, lr
   34154:	ldr	r1, [lr, r0, lsl #2]
   34158:	cmp	r1, #0
   3415c:	beq	34174 <GetDataSlab+0x11d38>
   34160:	add	r3, sp, #64	; 0x40
   34164:	ldr	r3, [r3, r0, lsl #2]
   34168:	mla	r2, r3, r1, r2
   3416c:	mul	r1, r3, r1
   34170:	add	ip, ip, r1, lsl #1
   34174:	add	r9, r0, #1
   34178:	add	r0, r0, #2
   3417c:	ldr	r1, [fp, #24]
   34180:	cmp	r0, r1
   34184:	blt	340f0 <GetDataSlab+0x11cb4>
   34188:	b	3419c <GetDataSlab+0x11d60>
   3418c:	ldr	r1, [sp, #32]
   34190:	ldr	r0, [r1, r0, lsl #2]
   34194:	add	ip, ip, r0, lsl #1
   34198:	add	r2, r0, r2
   3419c:	ldr	r0, [sp, #60]	; 0x3c
   341a0:	ldr	r1, [sp, #40]	; 0x28
   341a4:	add	r0, r0, r1
   341a8:	str	r0, [sp, #60]	; 0x3c
   341ac:	ldr	r1, [sp, #44]	; 0x2c
   341b0:	add	r8, r8, r1
   341b4:	mov	r0, #0
   341b8:	ldr	r3, [sp, #52]	; 0x34
   341bc:	cmp	r8, r3
   341c0:	blt	3409c <GetDataSlab+0x11c60>
   341c4:	b	22560 <GetDataSlab+0x124>
   341c8:	ldr	r0, [sp, #52]	; 0x34
   341cc:	cmp	r0, #1
   341d0:	ldr	r2, [sp, #44]	; 0x2c
   341d4:	blt	3ae3c <GetDataSlab+0x18a00>
   341d8:	ldr	r0, [sp, #40]	; 0x28
   341dc:	mls	r0, r2, r9, r0
   341e0:	str	r0, [sp, #40]	; 0x28
   341e4:	ldr	r0, [fp, #12]
   341e8:	add	lr, r0, #4
   341ec:	add	r8, r4, #4
   341f0:	add	r0, sp, #104	; 0x68
   341f4:	orr	r6, r0, #4
   341f8:	sub	r0, fp, #72	; 0x48
   341fc:	orr	r0, r0, #4
   34200:	str	r0, [sp, #28]
   34204:	mul	r0, r2, r9
   34208:	str	r0, [sp, #32]
   3420c:	lsl	r0, r2, #1
   34210:	str	r0, [sp, #36]	; 0x24
   34214:	lsl	r9, r9, #2
   34218:	mov	sl, #0
   3421c:	mov	r0, #0
   34220:	str	r0, [sp, #48]	; 0x30
   34224:	ldr	r0, [fp, #12]
   34228:	ldr	r0, [r0]
   3422c:	cmp	r2, #1
   34230:	blt	3426c <GetDataSlab+0x11e30>
   34234:	ldr	r1, [sp, #32]
   34238:	add	r7, r1, r3
   3423c:	add	r3, ip, r1, lsl #2
   34240:	add	r5, ip, r0, lsl #2
   34244:	ldr	sl, [sp, #60]	; 0x3c
   34248:	ldr	r4, [r5], r9
   3424c:	strh	r4, [sl], #2
   34250:	subs	r2, r2, #1
   34254:	bne	34248 <GetDataSlab+0x11e0c>
   34258:	add	r2, r7, r0
   3425c:	mov	ip, r3
   34260:	add	r1, sp, #64	; 0x40
   34264:	mov	sl, #0
   34268:	b	34274 <GetDataSlab+0x11e38>
   3426c:	add	r2, r0, r3
   34270:	add	r1, sp, #64	; 0x40
   34274:	ldr	r3, [sp, #40]	; 0x28
   34278:	add	ip, ip, r3, lsl #2
   3427c:	sub	r0, r3, r0
   34280:	add	r3, r2, r0
   34284:	ldr	r0, [fp, #24]
   34288:	cmp	r0, #2
   3428c:	blt	34330 <GetDataSlab+0x11ef4>
   34290:	mov	r2, #0
   34294:	mov	r0, r2
   34298:	ldr	r2, [r6, r2, lsl #2]
   3429c:	add	r2, r2, #1
   342a0:	str	r2, [r6, r0, lsl #2]
   342a4:	ldr	r4, [r8, r0, lsl #2]
   342a8:	sdiv	r7, r2, r4
   342ac:	mls	r2, r7, r4, r2
   342b0:	cmp	r2, #0
   342b4:	bne	34320 <GetDataSlab+0x11ee4>
   342b8:	str	sl, [r6, r0, lsl #2]
   342bc:	add	r2, r1, r0, lsl #2
   342c0:	ldr	r2, [r2, #4]
   342c4:	sdiv	r4, r3, r2
   342c8:	mls	r4, r4, r2, r3
   342cc:	cmp	r4, #0
   342d0:	beq	342ec <GetDataSlab+0x11eb0>
   342d4:	ldr	r7, [r1, r0, lsl #2]
   342d8:	ldr	r5, [lr, r0, lsl #2]
   342dc:	sub	r2, r2, r4
   342e0:	mla	r2, r5, r7, r2
   342e4:	add	r3, r2, r3
   342e8:	b	34304 <GetDataSlab+0x11ec8>
   342ec:	ldr	r2, [lr, r0, lsl #2]
   342f0:	cmp	r2, #0
   342f4:	beq	34308 <GetDataSlab+0x11ecc>
   342f8:	ldr	r4, [r1, r0, lsl #2]
   342fc:	mla	r3, r4, r2, r3
   34300:	mul	r2, r4, r2
   34304:	add	ip, ip, r2, lsl #2
   34308:	add	r2, r0, #1
   3430c:	add	r0, r0, #2
   34310:	ldr	r4, [fp, #24]
   34314:	cmp	r0, r4
   34318:	blt	34294 <GetDataSlab+0x11e58>
   3431c:	b	34330 <GetDataSlab+0x11ef4>
   34320:	ldr	r1, [sp, #28]
   34324:	ldr	r0, [r1, r0, lsl #2]
   34328:	add	ip, ip, r0, lsl #2
   3432c:	add	r3, r0, r3
   34330:	ldr	r0, [sp, #60]	; 0x3c
   34334:	ldr	r1, [sp, #36]	; 0x24
   34338:	add	r0, r0, r1
   3433c:	str	r0, [sp, #60]	; 0x3c
   34340:	ldr	r2, [sp, #44]	; 0x2c
   34344:	ldr	r4, [sp, #48]	; 0x30
   34348:	add	r4, r4, r2
   3434c:	mov	r0, #0
   34350:	ldr	r1, [sp, #52]	; 0x34
   34354:	str	r4, [sp, #48]	; 0x30
   34358:	cmp	r4, r1
   3435c:	blt	34224 <GetDataSlab+0x11de8>
   34360:	b	22560 <GetDataSlab+0x124>
   34364:	ldr	r0, [sp, #52]	; 0x34
   34368:	cmp	r0, #1
   3436c:	ldr	r2, [sp, #44]	; 0x2c
   34370:	blt	3ae3c <GetDataSlab+0x18a00>
   34374:	ldr	r0, [sp, #40]	; 0x28
   34378:	mls	r0, r2, r9, r0
   3437c:	str	r0, [sp, #40]	; 0x28
   34380:	ldr	r0, [fp, #12]
   34384:	add	lr, r0, #4
   34388:	add	r8, r4, #4
   3438c:	add	r0, sp, #104	; 0x68
   34390:	orr	r6, r0, #4
   34394:	sub	r0, fp, #72	; 0x48
   34398:	orr	r0, r0, #4
   3439c:	str	r0, [sp, #28]
   343a0:	mul	r0, r2, r9
   343a4:	str	r0, [sp, #32]
   343a8:	lsl	r0, r2, #1
   343ac:	str	r0, [sp, #36]	; 0x24
   343b0:	lsl	r9, r9, #2
   343b4:	mov	sl, #0
   343b8:	mov	r0, #0
   343bc:	str	r0, [sp, #48]	; 0x30
   343c0:	ldr	r0, [fp, #12]
   343c4:	ldr	r0, [r0]
   343c8:	cmp	r2, #1
   343cc:	blt	34408 <GetDataSlab+0x11fcc>
   343d0:	ldr	r1, [sp, #32]
   343d4:	add	r7, r1, r3
   343d8:	add	r3, ip, r1, lsl #2
   343dc:	add	r5, ip, r0, lsl #2
   343e0:	ldr	sl, [sp, #60]	; 0x3c
   343e4:	ldr	r4, [r5], r9
   343e8:	strh	r4, [sl], #2
   343ec:	subs	r2, r2, #1
   343f0:	bne	343e4 <GetDataSlab+0x11fa8>
   343f4:	add	r2, r7, r0
   343f8:	mov	ip, r3
   343fc:	add	r1, sp, #64	; 0x40
   34400:	mov	sl, #0
   34404:	b	34410 <GetDataSlab+0x11fd4>
   34408:	add	r2, r0, r3
   3440c:	add	r1, sp, #64	; 0x40
   34410:	ldr	r3, [sp, #40]	; 0x28
   34414:	add	ip, ip, r3, lsl #2
   34418:	sub	r0, r3, r0
   3441c:	add	r3, r2, r0
   34420:	ldr	r0, [fp, #24]
   34424:	cmp	r0, #2
   34428:	blt	344cc <GetDataSlab+0x12090>
   3442c:	mov	r2, #0
   34430:	mov	r0, r2
   34434:	ldr	r2, [r6, r2, lsl #2]
   34438:	add	r2, r2, #1
   3443c:	str	r2, [r6, r0, lsl #2]
   34440:	ldr	r4, [r8, r0, lsl #2]
   34444:	sdiv	r7, r2, r4
   34448:	mls	r2, r7, r4, r2
   3444c:	cmp	r2, #0
   34450:	bne	344bc <GetDataSlab+0x12080>
   34454:	str	sl, [r6, r0, lsl #2]
   34458:	add	r2, r1, r0, lsl #2
   3445c:	ldr	r2, [r2, #4]
   34460:	sdiv	r4, r3, r2
   34464:	mls	r4, r4, r2, r3
   34468:	cmp	r4, #0
   3446c:	beq	34488 <GetDataSlab+0x1204c>
   34470:	ldr	r7, [r1, r0, lsl #2]
   34474:	ldr	r5, [lr, r0, lsl #2]
   34478:	sub	r2, r2, r4
   3447c:	mla	r2, r5, r7, r2
   34480:	add	r3, r2, r3
   34484:	b	344a0 <GetDataSlab+0x12064>
   34488:	ldr	r2, [lr, r0, lsl #2]
   3448c:	cmp	r2, #0
   34490:	beq	344a4 <GetDataSlab+0x12068>
   34494:	ldr	r4, [r1, r0, lsl #2]
   34498:	mla	r3, r4, r2, r3
   3449c:	mul	r2, r4, r2
   344a0:	add	ip, ip, r2, lsl #2
   344a4:	add	r2, r0, #1
   344a8:	add	r0, r0, #2
   344ac:	ldr	r4, [fp, #24]
   344b0:	cmp	r0, r4
   344b4:	blt	34430 <GetDataSlab+0x11ff4>
   344b8:	b	344cc <GetDataSlab+0x12090>
   344bc:	ldr	r1, [sp, #28]
   344c0:	ldr	r0, [r1, r0, lsl #2]
   344c4:	add	ip, ip, r0, lsl #2
   344c8:	add	r3, r0, r3
   344cc:	ldr	r0, [sp, #60]	; 0x3c
   344d0:	ldr	r1, [sp, #36]	; 0x24
   344d4:	add	r0, r0, r1
   344d8:	str	r0, [sp, #60]	; 0x3c
   344dc:	ldr	r2, [sp, #44]	; 0x2c
   344e0:	ldr	r4, [sp, #48]	; 0x30
   344e4:	add	r4, r4, r2
   344e8:	mov	r0, #0
   344ec:	ldr	r1, [sp, #52]	; 0x34
   344f0:	str	r4, [sp, #48]	; 0x30
   344f4:	cmp	r4, r1
   344f8:	blt	343c0 <GetDataSlab+0x11f84>
   344fc:	b	22560 <GetDataSlab+0x124>
   34500:	ldr	r0, [sp, #52]	; 0x34
   34504:	cmp	r0, #1
   34508:	ldr	r1, [sp, #44]	; 0x2c
   3450c:	blt	3ae3c <GetDataSlab+0x18a00>
   34510:	ldr	r0, [sp, #40]	; 0x28
   34514:	mls	r0, r1, ip, r0
   34518:	ldr	r3, [r9], #4
   3451c:	mov	lr, r9
   34520:	sub	r0, r0, r3
   34524:	str	r0, [sp, #48]	; 0x30
   34528:	add	r9, r4, #4
   3452c:	add	r0, sp, #104	; 0x68
   34530:	orr	r6, r0, #4
   34534:	sub	r0, fp, #72	; 0x48
   34538:	orr	r0, r0, #4
   3453c:	str	r0, [sp, #32]
   34540:	str	r3, [sp, #56]	; 0x38
   34544:	mla	r0, r1, ip, r3
   34548:	str	r0, [sp, #36]	; 0x24
   3454c:	lsl	r0, r1, #1
   34550:	str	r0, [sp, #40]	; 0x28
   34554:	lsl	r4, ip, #2
   34558:	mov	r8, #0
   3455c:	cmp	r1, #1
   34560:	ldr	r0, [sp, #56]	; 0x38
   34564:	blt	34598 <GetDataSlab+0x1215c>
   34568:	ldr	r0, [sp, #56]	; 0x38
   3456c:	add	r0, sl, r0, lsl #2
   34570:	ldr	ip, [sp, #44]	; 0x2c
   34574:	ldr	r1, [sp, #60]	; 0x3c
   34578:	vldr	s0, [r0]
   3457c:	vcvt.s32.f32	s0, s0
   34580:	add	r0, r0, r4
   34584:	vmov	r3, s0
   34588:	strh	r3, [r1], #2
   3458c:	subs	ip, ip, #1
   34590:	bne	34578 <GetDataSlab+0x1213c>
   34594:	ldr	r0, [sp, #36]	; 0x24
   34598:	ldr	r3, [sp, #48]	; 0x30
   3459c:	add	r1, sl, r3, lsl #2
   345a0:	add	sl, r1, r0, lsl #2
   345a4:	add	r0, r0, r2
   345a8:	add	r2, r0, r3
   345ac:	ldr	r0, [fp, #24]
   345b0:	cmp	r0, #2
   345b4:	blt	34658 <GetDataSlab+0x1221c>
   345b8:	mov	r1, #0
   345bc:	ldr	ip, [sp, #60]	; 0x3c
   345c0:	mov	r0, r1
   345c4:	ldr	r1, [r6, r1, lsl #2]
   345c8:	add	r1, r1, #1
   345cc:	str	r1, [r6, r0, lsl #2]
   345d0:	ldr	r3, [r9, r0, lsl #2]
   345d4:	sdiv	r7, r1, r3
   345d8:	mls	r1, r7, r3, r1
   345dc:	cmp	r1, #0
   345e0:	bne	34660 <GetDataSlab+0x12224>
   345e4:	mov	r1, #0
   345e8:	str	r1, [r6, r0, lsl #2]
   345ec:	add	r5, sp, #64	; 0x40
   345f0:	add	r1, r5, r0, lsl #2
   345f4:	ldr	r1, [r1, #4]
   345f8:	sdiv	r3, r2, r1
   345fc:	mls	r3, r3, r1, r2
   34600:	cmp	r3, #0
   34604:	beq	34620 <GetDataSlab+0x121e4>
   34608:	ldr	r7, [r5, r0, lsl #2]
   3460c:	ldr	r5, [lr, r0, lsl #2]
   34610:	sub	r1, r1, r3
   34614:	mla	r1, r5, r7, r1
   34618:	add	r2, r1, r2
   3461c:	b	3463c <GetDataSlab+0x12200>
   34620:	ldr	r1, [lr, r0, lsl #2]
   34624:	cmp	r1, #0
   34628:	beq	34640 <GetDataSlab+0x12204>
   3462c:	add	r3, sp, #64	; 0x40
   34630:	ldr	r3, [r3, r0, lsl #2]
   34634:	mla	r2, r3, r1, r2
   34638:	mul	r1, r3, r1
   3463c:	add	sl, sl, r1, lsl #2
   34640:	add	r1, r0, #1
   34644:	add	r0, r0, #2
   34648:	ldr	r3, [fp, #24]
   3464c:	cmp	r0, r3
   34650:	blt	345c0 <GetDataSlab+0x12184>
   34654:	b	34670 <GetDataSlab+0x12234>
   34658:	ldr	ip, [sp, #60]	; 0x3c
   3465c:	b	34670 <GetDataSlab+0x12234>
   34660:	ldr	r1, [sp, #32]
   34664:	ldr	r0, [r1, r0, lsl #2]
   34668:	add	sl, sl, r0, lsl #2
   3466c:	add	r2, r0, r2
   34670:	ldr	r0, [sp, #40]	; 0x28
   34674:	add	ip, ip, r0
   34678:	str	ip, [sp, #60]	; 0x3c
   3467c:	ldr	r1, [sp, #44]	; 0x2c
   34680:	add	r8, r8, r1
   34684:	mov	r0, #0
   34688:	ldr	r3, [sp, #52]	; 0x34
   3468c:	cmp	r8, r3
   34690:	blt	3455c <GetDataSlab+0x12120>
   34694:	b	22560 <GetDataSlab+0x124>
   34698:	ldr	r0, [sp, #52]	; 0x34
   3469c:	cmp	r0, #1
   346a0:	ldr	r1, [sp, #44]	; 0x2c
   346a4:	blt	3ae3c <GetDataSlab+0x18a00>
   346a8:	ldr	r0, [sp, #40]	; 0x28
   346ac:	mls	r0, r1, ip, r0
   346b0:	ldr	r3, [r9], #4
   346b4:	mov	lr, r9
   346b8:	sub	r0, r0, r3
   346bc:	str	r0, [sp, #48]	; 0x30
   346c0:	add	r9, r4, #4
   346c4:	add	r0, sp, #104	; 0x68
   346c8:	orr	r6, r0, #4
   346cc:	sub	r0, fp, #72	; 0x48
   346d0:	orr	r0, r0, #4
   346d4:	str	r0, [sp, #32]
   346d8:	str	r3, [sp, #56]	; 0x38
   346dc:	mla	r0, r1, ip, r3
   346e0:	str	r0, [sp, #36]	; 0x24
   346e4:	lsl	r0, r1, #1
   346e8:	str	r0, [sp, #40]	; 0x28
   346ec:	lsl	r4, ip, #3
   346f0:	mov	r8, #0
   346f4:	cmp	r1, #1
   346f8:	ldr	r0, [sp, #56]	; 0x38
   346fc:	blt	34730 <GetDataSlab+0x122f4>
   34700:	ldr	r0, [sp, #56]	; 0x38
   34704:	add	r0, sl, r0, lsl #3
   34708:	ldr	ip, [sp, #44]	; 0x2c
   3470c:	ldr	r1, [sp, #60]	; 0x3c
   34710:	vldr	d16, [r0]
   34714:	vcvt.s32.f64	s0, d16
   34718:	add	r0, r0, r4
   3471c:	vmov	r3, s0
   34720:	strh	r3, [r1], #2
   34724:	subs	ip, ip, #1
   34728:	bne	34710 <GetDataSlab+0x122d4>
   3472c:	ldr	r0, [sp, #36]	; 0x24
   34730:	ldr	r3, [sp, #48]	; 0x30
   34734:	add	r1, sl, r3, lsl #3
   34738:	add	sl, r1, r0, lsl #3
   3473c:	add	r0, r0, r2
   34740:	add	r2, r0, r3
   34744:	ldr	r0, [fp, #24]
   34748:	cmp	r0, #2
   3474c:	blt	347f0 <GetDataSlab+0x123b4>
   34750:	mov	r1, #0
   34754:	ldr	ip, [sp, #60]	; 0x3c
   34758:	mov	r0, r1
   3475c:	ldr	r1, [r6, r1, lsl #2]
   34760:	add	r1, r1, #1
   34764:	str	r1, [r6, r0, lsl #2]
   34768:	ldr	r3, [r9, r0, lsl #2]
   3476c:	sdiv	r7, r1, r3
   34770:	mls	r1, r7, r3, r1
   34774:	cmp	r1, #0
   34778:	bne	347f8 <GetDataSlab+0x123bc>
   3477c:	mov	r1, #0
   34780:	str	r1, [r6, r0, lsl #2]
   34784:	add	r5, sp, #64	; 0x40
   34788:	add	r1, r5, r0, lsl #2
   3478c:	ldr	r1, [r1, #4]
   34790:	sdiv	r3, r2, r1
   34794:	mls	r3, r3, r1, r2
   34798:	cmp	r3, #0
   3479c:	beq	347b8 <GetDataSlab+0x1237c>
   347a0:	ldr	r7, [r5, r0, lsl #2]
   347a4:	ldr	r5, [lr, r0, lsl #2]
   347a8:	sub	r1, r1, r3
   347ac:	mla	r1, r5, r7, r1
   347b0:	add	r2, r1, r2
   347b4:	b	347d4 <GetDataSlab+0x12398>
   347b8:	ldr	r1, [lr, r0, lsl #2]
   347bc:	cmp	r1, #0
   347c0:	beq	347d8 <GetDataSlab+0x1239c>
   347c4:	add	r3, sp, #64	; 0x40
   347c8:	ldr	r3, [r3, r0, lsl #2]
   347cc:	mla	r2, r3, r1, r2
   347d0:	mul	r1, r3, r1
   347d4:	add	sl, sl, r1, lsl #3
   347d8:	add	r1, r0, #1
   347dc:	add	r0, r0, #2
   347e0:	ldr	r3, [fp, #24]
   347e4:	cmp	r0, r3
   347e8:	blt	34758 <GetDataSlab+0x1231c>
   347ec:	b	34808 <GetDataSlab+0x123cc>
   347f0:	ldr	ip, [sp, #60]	; 0x3c
   347f4:	b	34808 <GetDataSlab+0x123cc>
   347f8:	ldr	r1, [sp, #32]
   347fc:	ldr	r0, [r1, r0, lsl #2]
   34800:	add	sl, sl, r0, lsl #3
   34804:	add	r2, r0, r2
   34808:	ldr	r0, [sp, #40]	; 0x28
   3480c:	add	ip, ip, r0
   34810:	str	ip, [sp, #60]	; 0x3c
   34814:	ldr	r1, [sp, #44]	; 0x2c
   34818:	add	r8, r8, r1
   3481c:	mov	r0, #0
   34820:	ldr	r3, [sp, #52]	; 0x34
   34824:	cmp	r8, r3
   34828:	blt	346f4 <GetDataSlab+0x122b8>
   3482c:	b	22560 <GetDataSlab+0x124>
   34830:	ldr	r0, [sp, #44]	; 0x2c
   34834:	cmp	r0, #1
   34838:	ldr	r2, [sp, #40]	; 0x28
   3483c:	blt	39e84 <GetDataSlab+0x17a48>
   34840:	ldr	r0, [sp, #36]	; 0x24
   34844:	mls	r0, r2, ip, r0
   34848:	ldr	r5, [r9], #4
   3484c:	sub	r0, r0, r5
   34850:	str	r0, [sp, #28]
   34854:	add	lr, r4, #4
   34858:	add	r0, sp, #104	; 0x68
   3485c:	orr	r4, r0, #4
   34860:	sub	r0, fp, #72	; 0x48
   34864:	orr	r0, r0, #4
   34868:	str	r0, [sp, #16]
   3486c:	str	r5, [sp, #32]
   34870:	mla	r0, r2, ip, r5
   34874:	str	r0, [sp, #20]
   34878:	lsl	r0, r2, #1
   3487c:	str	r0, [sp, #24]
   34880:	lsl	r8, ip, #3
   34884:	ldr	r0, [sp, #60]	; 0x3c
   34888:	str	r0, [sp, #36]	; 0x24
   3488c:	mov	ip, #0
   34890:	cmp	r2, #1
   34894:	ldr	r0, [sp, #32]
   34898:	blt	348c4 <GetDataSlab+0x12488>
   3489c:	ldr	r0, [sp, #32]
   348a0:	add	r7, r3, r0, lsl #3
   348a4:	ldr	r0, [sp, #40]	; 0x28
   348a8:	ldr	sl, [sp, #36]	; 0x24
   348ac:	ldrh	r2, [r7], r8
   348b0:	strh	r2, [sl], #2
   348b4:	subs	r0, r0, #1
   348b8:	bne	348ac <GetDataSlab+0x12470>
   348bc:	ldr	r0, [sp, #20]
   348c0:	add	sl, sp, #64	; 0x40
   348c4:	ldr	r5, [sp, #28]
   348c8:	add	r2, r3, r5, lsl #3
   348cc:	add	r3, r2, r0, lsl #3
   348d0:	add	r0, r0, r1
   348d4:	add	r1, r0, r5
   348d8:	ldr	r0, [fp, #24]
   348dc:	cmp	r0, #2
   348e0:	blt	34988 <GetDataSlab+0x1254c>
   348e4:	mov	r0, #0
   348e8:	mov	r7, r0
   348ec:	ldr	r0, [r4, r0, lsl #2]
   348f0:	add	r0, r0, #1
   348f4:	str	r0, [r4, r7, lsl #2]
   348f8:	ldr	r2, [lr, r7, lsl #2]
   348fc:	sdiv	r6, r0, r2
   34900:	mls	r0, r6, r2, r0
   34904:	cmp	r0, #0
   34908:	bne	34978 <GetDataSlab+0x1253c>
   3490c:	mov	r0, #0
   34910:	str	r0, [r4, r7, lsl #2]
   34914:	add	r0, sl, r7, lsl #2
   34918:	ldr	r0, [r0, #4]
   3491c:	sdiv	r2, r1, r0
   34920:	mls	r2, r2, r0, r1
   34924:	cmp	r2, #0
   34928:	beq	34944 <GetDataSlab+0x12508>
   3492c:	ldr	r6, [sl, r7, lsl #2]
   34930:	ldr	r5, [r9, r7, lsl #2]
   34934:	sub	r0, r0, r2
   34938:	mla	r0, r5, r6, r0
   3493c:	add	r1, r0, r1
   34940:	b	3495c <GetDataSlab+0x12520>
   34944:	ldr	r0, [r9, r7, lsl #2]
   34948:	cmp	r0, #0
   3494c:	beq	34960 <GetDataSlab+0x12524>
   34950:	ldr	r2, [sl, r7, lsl #2]
   34954:	mla	r1, r2, r0, r1
   34958:	mul	r0, r2, r0
   3495c:	add	r3, r3, r0, lsl #3
   34960:	add	r0, r7, #1
   34964:	add	r2, r7, #2
   34968:	ldr	r5, [fp, #24]
   3496c:	cmp	r2, r5
   34970:	blt	348e8 <GetDataSlab+0x124ac>
   34974:	b	34988 <GetDataSlab+0x1254c>
   34978:	ldr	r0, [sp, #16]
   3497c:	ldr	r0, [r0, r7, lsl #2]
   34980:	add	r3, r3, r0, lsl #3
   34984:	add	r1, r0, r1
   34988:	ldr	r0, [sp, #24]
   3498c:	ldr	r2, [sp, #36]	; 0x24
   34990:	add	r2, r2, r0
   34994:	str	r2, [sp, #36]	; 0x24
   34998:	ldr	r2, [sp, #40]	; 0x28
   3499c:	add	ip, ip, r2
   349a0:	ldr	r0, [sp, #44]	; 0x2c
   349a4:	cmp	ip, r0
   349a8:	blt	34890 <GetDataSlab+0x12454>
   349ac:	mov	r0, #0
   349b0:	ldr	r4, [fp, #20]
   349b4:	ldr	lr, [fp, #16]
   349b8:	b	39e88 <GetDataSlab+0x17a4c>
   349bc:	ldr	r0, [sp, #52]	; 0x34
   349c0:	cmp	r0, #1
   349c4:	ldr	r0, [fp, #20]
   349c8:	blt	3ae3c <GetDataSlab+0x18a00>
   349cc:	ldr	r2, [sp, #44]	; 0x2c
   349d0:	ldr	r1, [sp, #40]	; 0x28
   349d4:	mls	r1, r2, lr, r1
   349d8:	str	r1, [sp, #48]	; 0x30
   349dc:	mul	r1, r2, lr
   349e0:	str	r1, [sp, #36]	; 0x24
   349e4:	add	r8, r9, #4
   349e8:	add	r9, r0, #4
   349ec:	add	r0, sp, #104	; 0x68
   349f0:	orr	r1, r0, #4
   349f4:	orr	r0, ip, #4
   349f8:	str	r0, [sp, #32]
   349fc:	lsl	r0, r2, #1
   34a00:	str	r0, [sp, #40]	; 0x28
   34a04:	mov	sl, #0
   34a08:	ldr	r0, [fp, #12]
   34a0c:	ldr	r0, [r0]
   34a10:	cmp	r2, #1
   34a14:	blt	34a48 <GetDataSlab+0x1260c>
   34a18:	ldr	r7, [sp, #36]	; 0x24
   34a1c:	add	r4, r7, r3
   34a20:	add	r3, r5, r7
   34a24:	add	r5, r5, r0
   34a28:	ldr	ip, [sp, #60]	; 0x3c
   34a2c:	ldrb	r6, [r5], lr
   34a30:	strh	r6, [ip], #2
   34a34:	subs	r2, r2, #1
   34a38:	bne	34a2c <GetDataSlab+0x125f0>
   34a3c:	add	r2, r4, r0
   34a40:	mov	r5, r3
   34a44:	b	34a4c <GetDataSlab+0x12610>
   34a48:	add	r2, r0, r3
   34a4c:	ldr	ip, [sp, #60]	; 0x3c
   34a50:	ldr	r3, [sp, #48]	; 0x30
   34a54:	add	r5, r5, r3
   34a58:	sub	r0, r3, r0
   34a5c:	add	r3, r2, r0
   34a60:	ldr	r0, [fp, #24]
   34a64:	cmp	r0, #2
   34a68:	blt	34b14 <GetDataSlab+0x126d8>
   34a6c:	mov	r2, #0
   34a70:	mov	r0, r2
   34a74:	ldr	r2, [r1, r2, lsl #2]
   34a78:	add	r2, r2, #1
   34a7c:	str	r2, [r1, r0, lsl #2]
   34a80:	ldr	r6, [r9, r0, lsl #2]
   34a84:	sdiv	r4, r2, r6
   34a88:	mls	r2, r4, r6, r2
   34a8c:	cmp	r2, #0
   34a90:	bne	34b04 <GetDataSlab+0x126c8>
   34a94:	mov	r2, #0
   34a98:	str	r2, [r1, r0, lsl #2]
   34a9c:	add	r4, sp, #64	; 0x40
   34aa0:	add	r2, r4, r0, lsl #2
   34aa4:	ldr	r2, [r2, #4]
   34aa8:	sdiv	r6, r3, r2
   34aac:	mls	r6, r6, r2, r3
   34ab0:	cmp	r6, #0
   34ab4:	beq	34ad4 <GetDataSlab+0x12698>
   34ab8:	ldr	r4, [r4, r0, lsl #2]
   34abc:	ldr	r7, [r8, r0, lsl #2]
   34ac0:	sub	r2, r2, r6
   34ac4:	mla	r2, r7, r4, r2
   34ac8:	add	r3, r2, r3
   34acc:	add	r5, r5, r2
   34ad0:	b	34aec <GetDataSlab+0x126b0>
   34ad4:	ldr	r2, [r8, r0, lsl #2]
   34ad8:	cmp	r2, #0
   34adc:	addne	r4, sp, #64	; 0x40
   34ae0:	ldrne	r7, [r4, r0, lsl #2]
   34ae4:	mlane	r3, r7, r2, r3
   34ae8:	mlane	r5, r7, r2, r5
   34aec:	add	r2, r0, #1
   34af0:	add	r0, r0, #2
   34af4:	ldr	r4, [fp, #24]
   34af8:	cmp	r0, r4
   34afc:	blt	34a70 <GetDataSlab+0x12634>
   34b00:	b	34b14 <GetDataSlab+0x126d8>
   34b04:	ldr	r2, [sp, #32]
   34b08:	ldr	r0, [r2, r0, lsl #2]
   34b0c:	add	r5, r5, r0
   34b10:	add	r3, r0, r3
   34b14:	ldr	r0, [sp, #40]	; 0x28
   34b18:	add	ip, ip, r0
   34b1c:	str	ip, [sp, #60]	; 0x3c
   34b20:	ldr	r2, [sp, #44]	; 0x2c
   34b24:	add	sl, sl, r2
   34b28:	mov	r0, #0
   34b2c:	ldr	r7, [sp, #52]	; 0x34
   34b30:	cmp	sl, r7
   34b34:	blt	34a08 <GetDataSlab+0x125cc>
   34b38:	b	22560 <GetDataSlab+0x124>
   34b3c:	ldr	r0, [sp, #52]	; 0x34
   34b40:	cmp	r0, #1
   34b44:	ldr	r1, [sp, #44]	; 0x2c
   34b48:	blt	3ae3c <GetDataSlab+0x18a00>
   34b4c:	ldr	r0, [sp, #40]	; 0x28
   34b50:	mls	r0, r1, r8, r0
   34b54:	ldr	r3, [r9], #4
   34b58:	mov	lr, r9
   34b5c:	sub	r0, r0, r3
   34b60:	str	r0, [sp, #48]	; 0x30
   34b64:	add	sl, r4, #4
   34b68:	add	r0, sp, #104	; 0x68
   34b6c:	orr	r6, r0, #4
   34b70:	sub	r0, fp, #72	; 0x48
   34b74:	orr	r0, r0, #4
   34b78:	str	r0, [sp, #32]
   34b7c:	str	r3, [sp, #56]	; 0x38
   34b80:	mla	r0, r1, r8, r3
   34b84:	str	r0, [sp, #36]	; 0x24
   34b88:	lsl	r0, r1, #1
   34b8c:	str	r0, [sp, #40]	; 0x28
   34b90:	lsl	r4, r8, #1
   34b94:	mov	r8, #0
   34b98:	cmp	r1, #1
   34b9c:	ldr	r0, [sp, #56]	; 0x38
   34ba0:	blt	34bc8 <GetDataSlab+0x1278c>
   34ba4:	ldr	r0, [sp, #56]	; 0x38
   34ba8:	add	r0, ip, r0, lsl #1
   34bac:	ldr	r1, [sp, #44]	; 0x2c
   34bb0:	ldr	r3, [sp, #60]	; 0x3c
   34bb4:	ldrh	r7, [r0], r4
   34bb8:	strh	r7, [r3], #2
   34bbc:	subs	r1, r1, #1
   34bc0:	bne	34bb4 <GetDataSlab+0x12778>
   34bc4:	ldr	r0, [sp, #36]	; 0x24
   34bc8:	ldr	r3, [sp, #48]	; 0x30
   34bcc:	add	r1, ip, r3, lsl #1
   34bd0:	add	ip, r1, r0, lsl #1
   34bd4:	add	r0, r0, r2
   34bd8:	add	r2, r0, r3
   34bdc:	ldr	r0, [fp, #24]
   34be0:	cmp	r0, #2
   34be4:	blt	34c98 <GetDataSlab+0x1285c>
   34be8:	mov	r9, #0
   34bec:	mov	r0, r9
   34bf0:	ldr	r1, [r6, r9, lsl #2]
   34bf4:	add	r1, r1, #1
   34bf8:	str	r1, [r6, r9, lsl #2]
   34bfc:	ldr	r3, [sl, r9, lsl #2]
   34c00:	sdiv	r7, r1, r3
   34c04:	mls	r1, r7, r3, r1
   34c08:	cmp	r1, #0
   34c0c:	bne	34c88 <GetDataSlab+0x1284c>
   34c10:	mov	r1, #0
   34c14:	str	r1, [r6, r0, lsl #2]
   34c18:	add	r5, sp, #64	; 0x40
   34c1c:	add	r1, r5, r0, lsl #2
   34c20:	ldr	r1, [r1, #4]
   34c24:	sdiv	r3, r2, r1
   34c28:	mls	r3, r3, r1, r2
   34c2c:	cmp	r3, #0
   34c30:	beq	34c4c <GetDataSlab+0x12810>
   34c34:	ldr	r7, [r5, r0, lsl #2]
   34c38:	ldr	r5, [lr, r0, lsl #2]
   34c3c:	sub	r1, r1, r3
   34c40:	mla	r1, r5, r7, r1
   34c44:	add	r2, r1, r2
   34c48:	b	34c6c <GetDataSlab+0x12830>
   34c4c:	mov	r1, lr
   34c50:	ldr	r1, [lr, r0, lsl #2]
   34c54:	cmp	r1, #0
   34c58:	beq	34c70 <GetDataSlab+0x12834>
   34c5c:	add	r3, sp, #64	; 0x40
   34c60:	ldr	r3, [r3, r0, lsl #2]
   34c64:	mla	r2, r3, r1, r2
   34c68:	mul	r1, r3, r1
   34c6c:	add	ip, ip, r1, lsl #1
   34c70:	add	r9, r0, #1
   34c74:	add	r0, r0, #2
   34c78:	ldr	r1, [fp, #24]
   34c7c:	cmp	r0, r1
   34c80:	blt	34bec <GetDataSlab+0x127b0>
   34c84:	b	34c98 <GetDataSlab+0x1285c>
   34c88:	ldr	r1, [sp, #32]
   34c8c:	ldr	r0, [r1, r0, lsl #2]
   34c90:	add	ip, ip, r0, lsl #1
   34c94:	add	r2, r0, r2
   34c98:	ldr	r0, [sp, #60]	; 0x3c
   34c9c:	ldr	r1, [sp, #40]	; 0x28
   34ca0:	add	r0, r0, r1
   34ca4:	str	r0, [sp, #60]	; 0x3c
   34ca8:	ldr	r1, [sp, #44]	; 0x2c
   34cac:	add	r8, r8, r1
   34cb0:	mov	r0, #0
   34cb4:	ldr	r3, [sp, #52]	; 0x34
   34cb8:	cmp	r8, r3
   34cbc:	blt	34b98 <GetDataSlab+0x1275c>
   34cc0:	b	22560 <GetDataSlab+0x124>
   34cc4:	ldr	r0, [sp, #52]	; 0x34
   34cc8:	cmp	r0, #1
   34ccc:	ldr	r1, [sp, #44]	; 0x2c
   34cd0:	blt	3ae3c <GetDataSlab+0x18a00>
   34cd4:	ldr	r0, [sp, #40]	; 0x28
   34cd8:	mls	r0, r1, r8, r0
   34cdc:	ldr	r3, [r9], #4
   34ce0:	mov	lr, r9
   34ce4:	sub	r0, r0, r3
   34ce8:	str	r0, [sp, #48]	; 0x30
   34cec:	add	sl, r4, #4
   34cf0:	add	r0, sp, #104	; 0x68
   34cf4:	orr	r6, r0, #4
   34cf8:	sub	r0, fp, #72	; 0x48
   34cfc:	orr	r0, r0, #4
   34d00:	str	r0, [sp, #32]
   34d04:	str	r3, [sp, #56]	; 0x38
   34d08:	mla	r0, r1, r8, r3
   34d0c:	str	r0, [sp, #36]	; 0x24
   34d10:	lsl	r0, r1, #1
   34d14:	str	r0, [sp, #40]	; 0x28
   34d18:	lsl	r4, r8, #1
   34d1c:	mov	r8, #0
   34d20:	cmp	r1, #1
   34d24:	ldr	r0, [sp, #56]	; 0x38
   34d28:	blt	34d50 <GetDataSlab+0x12914>
   34d2c:	ldr	r0, [sp, #56]	; 0x38
   34d30:	add	r0, ip, r0, lsl #1
   34d34:	ldr	r1, [sp, #44]	; 0x2c
   34d38:	ldr	r3, [sp, #60]	; 0x3c
   34d3c:	ldrh	r7, [r0], r4
   34d40:	strh	r7, [r3], #2
   34d44:	subs	r1, r1, #1
   34d48:	bne	34d3c <GetDataSlab+0x12900>
   34d4c:	ldr	r0, [sp, #36]	; 0x24
   34d50:	ldr	r3, [sp, #48]	; 0x30
   34d54:	add	r1, ip, r3, lsl #1
   34d58:	add	ip, r1, r0, lsl #1
   34d5c:	add	r0, r0, r2
   34d60:	add	r2, r0, r3
   34d64:	ldr	r0, [fp, #24]
   34d68:	cmp	r0, #2
   34d6c:	blt	34e20 <GetDataSlab+0x129e4>
   34d70:	mov	r9, #0
   34d74:	mov	r0, r9
   34d78:	ldr	r1, [r6, r9, lsl #2]
   34d7c:	add	r1, r1, #1
   34d80:	str	r1, [r6, r9, lsl #2]
   34d84:	ldr	r3, [sl, r9, lsl #2]
   34d88:	sdiv	r7, r1, r3
   34d8c:	mls	r1, r7, r3, r1
   34d90:	cmp	r1, #0
   34d94:	bne	34e10 <GetDataSlab+0x129d4>
   34d98:	mov	r1, #0
   34d9c:	str	r1, [r6, r0, lsl #2]
   34da0:	add	r5, sp, #64	; 0x40
   34da4:	add	r1, r5, r0, lsl #2
   34da8:	ldr	r1, [r1, #4]
   34dac:	sdiv	r3, r2, r1
   34db0:	mls	r3, r3, r1, r2
   34db4:	cmp	r3, #0
   34db8:	beq	34dd4 <GetDataSlab+0x12998>
   34dbc:	ldr	r7, [r5, r0, lsl #2]
   34dc0:	ldr	r5, [lr, r0, lsl #2]
   34dc4:	sub	r1, r1, r3
   34dc8:	mla	r1, r5, r7, r1
   34dcc:	add	r2, r1, r2
   34dd0:	b	34df4 <GetDataSlab+0x129b8>
   34dd4:	mov	r1, lr
   34dd8:	ldr	r1, [lr, r0, lsl #2]
   34ddc:	cmp	r1, #0
   34de0:	beq	34df8 <GetDataSlab+0x129bc>
   34de4:	add	r3, sp, #64	; 0x40
   34de8:	ldr	r3, [r3, r0, lsl #2]
   34dec:	mla	r2, r3, r1, r2
   34df0:	mul	r1, r3, r1
   34df4:	add	ip, ip, r1, lsl #1
   34df8:	add	r9, r0, #1
   34dfc:	add	r0, r0, #2
   34e00:	ldr	r1, [fp, #24]
   34e04:	cmp	r0, r1
   34e08:	blt	34d74 <GetDataSlab+0x12938>
   34e0c:	b	34e20 <GetDataSlab+0x129e4>
   34e10:	ldr	r1, [sp, #32]
   34e14:	ldr	r0, [r1, r0, lsl #2]
   34e18:	add	ip, ip, r0, lsl #1
   34e1c:	add	r2, r0, r2
   34e20:	ldr	r0, [sp, #60]	; 0x3c
   34e24:	ldr	r1, [sp, #40]	; 0x28
   34e28:	add	r0, r0, r1
   34e2c:	str	r0, [sp, #60]	; 0x3c
   34e30:	ldr	r1, [sp, #44]	; 0x2c
   34e34:	add	r8, r8, r1
   34e38:	mov	r0, #0
   34e3c:	ldr	r3, [sp, #52]	; 0x34
   34e40:	cmp	r8, r3
   34e44:	blt	34d20 <GetDataSlab+0x128e4>
   34e48:	b	22560 <GetDataSlab+0x124>
   34e4c:	ldr	r0, [sp, #52]	; 0x34
   34e50:	cmp	r0, #1
   34e54:	ldr	r2, [sp, #44]	; 0x2c
   34e58:	blt	3ae3c <GetDataSlab+0x18a00>
   34e5c:	ldr	r0, [sp, #40]	; 0x28
   34e60:	mls	r0, r2, r9, r0
   34e64:	str	r0, [sp, #40]	; 0x28
   34e68:	ldr	r0, [fp, #12]
   34e6c:	add	lr, r0, #4
   34e70:	add	r8, r4, #4
   34e74:	add	r0, sp, #104	; 0x68
   34e78:	orr	r6, r0, #4
   34e7c:	sub	r0, fp, #72	; 0x48
   34e80:	orr	r0, r0, #4
   34e84:	str	r0, [sp, #28]
   34e88:	mul	r0, r2, r9
   34e8c:	str	r0, [sp, #32]
   34e90:	lsl	r0, r2, #1
   34e94:	str	r0, [sp, #36]	; 0x24
   34e98:	lsl	r9, r9, #2
   34e9c:	mov	sl, #0
   34ea0:	mov	r0, #0
   34ea4:	str	r0, [sp, #48]	; 0x30
   34ea8:	ldr	r0, [fp, #12]
   34eac:	ldr	r0, [r0]
   34eb0:	cmp	r2, #1
   34eb4:	blt	34ef0 <GetDataSlab+0x12ab4>
   34eb8:	ldr	r1, [sp, #32]
   34ebc:	add	r7, r1, r3
   34ec0:	add	r3, ip, r1, lsl #2
   34ec4:	add	r5, ip, r0, lsl #2
   34ec8:	ldr	sl, [sp, #60]	; 0x3c
   34ecc:	ldr	r4, [r5], r9
   34ed0:	strh	r4, [sl], #2
   34ed4:	subs	r2, r2, #1
   34ed8:	bne	34ecc <GetDataSlab+0x12a90>
   34edc:	add	r2, r7, r0
   34ee0:	mov	ip, r3
   34ee4:	add	r1, sp, #64	; 0x40
   34ee8:	mov	sl, #0
   34eec:	b	34ef8 <GetDataSlab+0x12abc>
   34ef0:	add	r2, r0, r3
   34ef4:	add	r1, sp, #64	; 0x40
   34ef8:	ldr	r3, [sp, #40]	; 0x28
   34efc:	add	ip, ip, r3, lsl #2
   34f00:	sub	r0, r3, r0
   34f04:	add	r3, r2, r0
   34f08:	ldr	r0, [fp, #24]
   34f0c:	cmp	r0, #2
   34f10:	blt	34fb4 <GetDataSlab+0x12b78>
   34f14:	mov	r2, #0
   34f18:	mov	r0, r2
   34f1c:	ldr	r2, [r6, r2, lsl #2]
   34f20:	add	r2, r2, #1
   34f24:	str	r2, [r6, r0, lsl #2]
   34f28:	ldr	r4, [r8, r0, lsl #2]
   34f2c:	sdiv	r7, r2, r4
   34f30:	mls	r2, r7, r4, r2
   34f34:	cmp	r2, #0
   34f38:	bne	34fa4 <GetDataSlab+0x12b68>
   34f3c:	str	sl, [r6, r0, lsl #2]
   34f40:	add	r2, r1, r0, lsl #2
   34f44:	ldr	r2, [r2, #4]
   34f48:	sdiv	r4, r3, r2
   34f4c:	mls	r4, r4, r2, r3
   34f50:	cmp	r4, #0
   34f54:	beq	34f70 <GetDataSlab+0x12b34>
   34f58:	ldr	r7, [r1, r0, lsl #2]
   34f5c:	ldr	r5, [lr, r0, lsl #2]
   34f60:	sub	r2, r2, r4
   34f64:	mla	r2, r5, r7, r2
   34f68:	add	r3, r2, r3
   34f6c:	b	34f88 <GetDataSlab+0x12b4c>
   34f70:	ldr	r2, [lr, r0, lsl #2]
   34f74:	cmp	r2, #0
   34f78:	beq	34f8c <GetDataSlab+0x12b50>
   34f7c:	ldr	r4, [r1, r0, lsl #2]
   34f80:	mla	r3, r4, r2, r3
   34f84:	mul	r2, r4, r2
   34f88:	add	ip, ip, r2, lsl #2
   34f8c:	add	r2, r0, #1
   34f90:	add	r0, r0, #2
   34f94:	ldr	r4, [fp, #24]
   34f98:	cmp	r0, r4
   34f9c:	blt	34f18 <GetDataSlab+0x12adc>
   34fa0:	b	34fb4 <GetDataSlab+0x12b78>
   34fa4:	ldr	r1, [sp, #28]
   34fa8:	ldr	r0, [r1, r0, lsl #2]
   34fac:	add	ip, ip, r0, lsl #2
   34fb0:	add	r3, r0, r3
   34fb4:	ldr	r0, [sp, #60]	; 0x3c
   34fb8:	ldr	r1, [sp, #36]	; 0x24
   34fbc:	add	r0, r0, r1
   34fc0:	str	r0, [sp, #60]	; 0x3c
   34fc4:	ldr	r2, [sp, #44]	; 0x2c
   34fc8:	ldr	r4, [sp, #48]	; 0x30
   34fcc:	add	r4, r4, r2
   34fd0:	mov	r0, #0
   34fd4:	ldr	r1, [sp, #52]	; 0x34
   34fd8:	str	r4, [sp, #48]	; 0x30
   34fdc:	cmp	r4, r1
   34fe0:	blt	34ea8 <GetDataSlab+0x12a6c>
   34fe4:	b	22560 <GetDataSlab+0x124>
   34fe8:	ldr	r0, [sp, #52]	; 0x34
   34fec:	cmp	r0, #1
   34ff0:	ldr	r2, [sp, #44]	; 0x2c
   34ff4:	blt	3ae3c <GetDataSlab+0x18a00>
   34ff8:	ldr	r0, [sp, #40]	; 0x28
   34ffc:	mls	r0, r2, r9, r0
   35000:	str	r0, [sp, #40]	; 0x28
   35004:	ldr	r0, [fp, #12]
   35008:	add	lr, r0, #4
   3500c:	add	r8, r4, #4
   35010:	add	r0, sp, #104	; 0x68
   35014:	orr	r6, r0, #4
   35018:	sub	r0, fp, #72	; 0x48
   3501c:	orr	r0, r0, #4
   35020:	str	r0, [sp, #28]
   35024:	mul	r0, r2, r9
   35028:	str	r0, [sp, #32]
   3502c:	lsl	r0, r2, #1
   35030:	str	r0, [sp, #36]	; 0x24
   35034:	lsl	r9, r9, #2
   35038:	mov	sl, #0
   3503c:	mov	r0, #0
   35040:	str	r0, [sp, #48]	; 0x30
   35044:	ldr	r0, [fp, #12]
   35048:	ldr	r0, [r0]
   3504c:	cmp	r2, #1
   35050:	blt	3508c <GetDataSlab+0x12c50>
   35054:	ldr	r1, [sp, #32]
   35058:	add	r7, r1, r3
   3505c:	add	r3, ip, r1, lsl #2
   35060:	add	r5, ip, r0, lsl #2
   35064:	ldr	sl, [sp, #60]	; 0x3c
   35068:	ldr	r4, [r5], r9
   3506c:	strh	r4, [sl], #2
   35070:	subs	r2, r2, #1
   35074:	bne	35068 <GetDataSlab+0x12c2c>
   35078:	add	r2, r7, r0
   3507c:	mov	ip, r3
   35080:	add	r1, sp, #64	; 0x40
   35084:	mov	sl, #0
   35088:	b	35094 <GetDataSlab+0x12c58>
   3508c:	add	r2, r0, r3
   35090:	add	r1, sp, #64	; 0x40
   35094:	ldr	r3, [sp, #40]	; 0x28
   35098:	add	ip, ip, r3, lsl #2
   3509c:	sub	r0, r3, r0
   350a0:	add	r3, r2, r0
   350a4:	ldr	r0, [fp, #24]
   350a8:	cmp	r0, #2
   350ac:	blt	35150 <GetDataSlab+0x12d14>
   350b0:	mov	r2, #0
   350b4:	mov	r0, r2
   350b8:	ldr	r2, [r6, r2, lsl #2]
   350bc:	add	r2, r2, #1
   350c0:	str	r2, [r6, r0, lsl #2]
   350c4:	ldr	r4, [r8, r0, lsl #2]
   350c8:	sdiv	r7, r2, r4
   350cc:	mls	r2, r7, r4, r2
   350d0:	cmp	r2, #0
   350d4:	bne	35140 <GetDataSlab+0x12d04>
   350d8:	str	sl, [r6, r0, lsl #2]
   350dc:	add	r2, r1, r0, lsl #2
   350e0:	ldr	r2, [r2, #4]
   350e4:	sdiv	r4, r3, r2
   350e8:	mls	r4, r4, r2, r3
   350ec:	cmp	r4, #0
   350f0:	beq	3510c <GetDataSlab+0x12cd0>
   350f4:	ldr	r7, [r1, r0, lsl #2]
   350f8:	ldr	r5, [lr, r0, lsl #2]
   350fc:	sub	r2, r2, r4
   35100:	mla	r2, r5, r7, r2
   35104:	add	r3, r2, r3
   35108:	b	35124 <GetDataSlab+0x12ce8>
   3510c:	ldr	r2, [lr, r0, lsl #2]
   35110:	cmp	r2, #0
   35114:	beq	35128 <GetDataSlab+0x12cec>
   35118:	ldr	r4, [r1, r0, lsl #2]
   3511c:	mla	r3, r4, r2, r3
   35120:	mul	r2, r4, r2
   35124:	add	ip, ip, r2, lsl #2
   35128:	add	r2, r0, #1
   3512c:	add	r0, r0, #2
   35130:	ldr	r4, [fp, #24]
   35134:	cmp	r0, r4
   35138:	blt	350b4 <GetDataSlab+0x12c78>
   3513c:	b	35150 <GetDataSlab+0x12d14>
   35140:	ldr	r1, [sp, #28]
   35144:	ldr	r0, [r1, r0, lsl #2]
   35148:	add	ip, ip, r0, lsl #2
   3514c:	add	r3, r0, r3
   35150:	ldr	r0, [sp, #60]	; 0x3c
   35154:	ldr	r1, [sp, #36]	; 0x24
   35158:	add	r0, r0, r1
   3515c:	str	r0, [sp, #60]	; 0x3c
   35160:	ldr	r2, [sp, #44]	; 0x2c
   35164:	ldr	r4, [sp, #48]	; 0x30
   35168:	add	r4, r4, r2
   3516c:	mov	r0, #0
   35170:	ldr	r1, [sp, #52]	; 0x34
   35174:	str	r4, [sp, #48]	; 0x30
   35178:	cmp	r4, r1
   3517c:	blt	35044 <GetDataSlab+0x12c08>
   35180:	b	22560 <GetDataSlab+0x124>
   35184:	ldr	r0, [sp, #52]	; 0x34
   35188:	cmp	r0, #1
   3518c:	ldr	r1, [sp, #44]	; 0x2c
   35190:	blt	3ae3c <GetDataSlab+0x18a00>
   35194:	ldr	r0, [sp, #40]	; 0x28
   35198:	mls	r0, r1, ip, r0
   3519c:	ldr	r3, [r9], #4
   351a0:	mov	lr, r9
   351a4:	sub	r0, r0, r3
   351a8:	str	r0, [sp, #48]	; 0x30
   351ac:	add	r9, r4, #4
   351b0:	add	r0, sp, #104	; 0x68
   351b4:	orr	r6, r0, #4
   351b8:	sub	r0, fp, #72	; 0x48
   351bc:	orr	r0, r0, #4
   351c0:	str	r0, [sp, #32]
   351c4:	str	r3, [sp, #56]	; 0x38
   351c8:	mla	r0, r1, ip, r3
   351cc:	str	r0, [sp, #36]	; 0x24
   351d0:	lsl	r0, r1, #1
   351d4:	str	r0, [sp, #40]	; 0x28
   351d8:	lsl	r4, ip, #2
   351dc:	mov	r8, #0
   351e0:	cmp	r1, #1
   351e4:	ldr	r0, [sp, #56]	; 0x38
   351e8:	blt	3521c <GetDataSlab+0x12de0>
   351ec:	ldr	r0, [sp, #56]	; 0x38
   351f0:	add	r0, sl, r0, lsl #2
   351f4:	ldr	ip, [sp, #44]	; 0x2c
   351f8:	ldr	r1, [sp, #60]	; 0x3c
   351fc:	vldr	s0, [r0]
   35200:	vcvt.u32.f32	s0, s0
   35204:	add	r0, r0, r4
   35208:	vmov	r3, s0
   3520c:	strh	r3, [r1], #2
   35210:	subs	ip, ip, #1
   35214:	bne	351fc <GetDataSlab+0x12dc0>
   35218:	ldr	r0, [sp, #36]	; 0x24
   3521c:	ldr	r3, [sp, #48]	; 0x30
   35220:	add	r1, sl, r3, lsl #2
   35224:	add	sl, r1, r0, lsl #2
   35228:	add	r0, r0, r2
   3522c:	add	r2, r0, r3
   35230:	ldr	r0, [fp, #24]
   35234:	cmp	r0, #2
   35238:	blt	352dc <GetDataSlab+0x12ea0>
   3523c:	mov	r1, #0
   35240:	ldr	ip, [sp, #60]	; 0x3c
   35244:	mov	r0, r1
   35248:	ldr	r1, [r6, r1, lsl #2]
   3524c:	add	r1, r1, #1
   35250:	str	r1, [r6, r0, lsl #2]
   35254:	ldr	r3, [r9, r0, lsl #2]
   35258:	sdiv	r7, r1, r3
   3525c:	mls	r1, r7, r3, r1
   35260:	cmp	r1, #0
   35264:	bne	352e4 <GetDataSlab+0x12ea8>
   35268:	mov	r1, #0
   3526c:	str	r1, [r6, r0, lsl #2]
   35270:	add	r5, sp, #64	; 0x40
   35274:	add	r1, r5, r0, lsl #2
   35278:	ldr	r1, [r1, #4]
   3527c:	sdiv	r3, r2, r1
   35280:	mls	r3, r3, r1, r2
   35284:	cmp	r3, #0
   35288:	beq	352a4 <GetDataSlab+0x12e68>
   3528c:	ldr	r7, [r5, r0, lsl #2]
   35290:	ldr	r5, [lr, r0, lsl #2]
   35294:	sub	r1, r1, r3
   35298:	mla	r1, r5, r7, r1
   3529c:	add	r2, r1, r2
   352a0:	b	352c0 <GetDataSlab+0x12e84>
   352a4:	ldr	r1, [lr, r0, lsl #2]
   352a8:	cmp	r1, #0
   352ac:	beq	352c4 <GetDataSlab+0x12e88>
   352b0:	add	r3, sp, #64	; 0x40
   352b4:	ldr	r3, [r3, r0, lsl #2]
   352b8:	mla	r2, r3, r1, r2
   352bc:	mul	r1, r3, r1
   352c0:	add	sl, sl, r1, lsl #2
   352c4:	add	r1, r0, #1
   352c8:	add	r0, r0, #2
   352cc:	ldr	r3, [fp, #24]
   352d0:	cmp	r0, r3
   352d4:	blt	35244 <GetDataSlab+0x12e08>
   352d8:	b	352f4 <GetDataSlab+0x12eb8>
   352dc:	ldr	ip, [sp, #60]	; 0x3c
   352e0:	b	352f4 <GetDataSlab+0x12eb8>
   352e4:	ldr	r1, [sp, #32]
   352e8:	ldr	r0, [r1, r0, lsl #2]
   352ec:	add	sl, sl, r0, lsl #2
   352f0:	add	r2, r0, r2
   352f4:	ldr	r0, [sp, #40]	; 0x28
   352f8:	add	ip, ip, r0
   352fc:	str	ip, [sp, #60]	; 0x3c
   35300:	ldr	r1, [sp, #44]	; 0x2c
   35304:	add	r8, r8, r1
   35308:	mov	r0, #0
   3530c:	ldr	r3, [sp, #52]	; 0x34
   35310:	cmp	r8, r3
   35314:	blt	351e0 <GetDataSlab+0x12da4>
   35318:	b	22560 <GetDataSlab+0x124>
   3531c:	ldr	r0, [sp, #52]	; 0x34
   35320:	cmp	r0, #1
   35324:	ldr	r1, [sp, #44]	; 0x2c
   35328:	blt	3ae3c <GetDataSlab+0x18a00>
   3532c:	ldr	r0, [sp, #40]	; 0x28
   35330:	mls	r0, r1, ip, r0
   35334:	ldr	r3, [r9], #4
   35338:	mov	lr, r9
   3533c:	sub	r0, r0, r3
   35340:	str	r0, [sp, #48]	; 0x30
   35344:	add	r9, r4, #4
   35348:	add	r0, sp, #104	; 0x68
   3534c:	orr	r6, r0, #4
   35350:	sub	r0, fp, #72	; 0x48
   35354:	orr	r0, r0, #4
   35358:	str	r0, [sp, #32]
   3535c:	str	r3, [sp, #56]	; 0x38
   35360:	mla	r0, r1, ip, r3
   35364:	str	r0, [sp, #36]	; 0x24
   35368:	lsl	r0, r1, #1
   3536c:	str	r0, [sp, #40]	; 0x28
   35370:	lsl	r4, ip, #3
   35374:	mov	r8, #0
   35378:	cmp	r1, #1
   3537c:	ldr	r0, [sp, #56]	; 0x38
   35380:	blt	353b4 <GetDataSlab+0x12f78>
   35384:	ldr	r0, [sp, #56]	; 0x38
   35388:	add	r0, sl, r0, lsl #3
   3538c:	ldr	ip, [sp, #44]	; 0x2c
   35390:	ldr	r1, [sp, #60]	; 0x3c
   35394:	vldr	d16, [r0]
   35398:	vcvt.u32.f64	s0, d16
   3539c:	add	r0, r0, r4
   353a0:	vmov	r3, s0
   353a4:	strh	r3, [r1], #2
   353a8:	subs	ip, ip, #1
   353ac:	bne	35394 <GetDataSlab+0x12f58>
   353b0:	ldr	r0, [sp, #36]	; 0x24
   353b4:	ldr	r3, [sp, #48]	; 0x30
   353b8:	add	r1, sl, r3, lsl #3
   353bc:	add	sl, r1, r0, lsl #3
   353c0:	add	r0, r0, r2
   353c4:	add	r2, r0, r3
   353c8:	ldr	r0, [fp, #24]
   353cc:	cmp	r0, #2
   353d0:	blt	35474 <GetDataSlab+0x13038>
   353d4:	mov	r1, #0
   353d8:	ldr	ip, [sp, #60]	; 0x3c
   353dc:	mov	r0, r1
   353e0:	ldr	r1, [r6, r1, lsl #2]
   353e4:	add	r1, r1, #1
   353e8:	str	r1, [r6, r0, lsl #2]
   353ec:	ldr	r3, [r9, r0, lsl #2]
   353f0:	sdiv	r7, r1, r3
   353f4:	mls	r1, r7, r3, r1
   353f8:	cmp	r1, #0
   353fc:	bne	3547c <GetDataSlab+0x13040>
   35400:	mov	r1, #0
   35404:	str	r1, [r6, r0, lsl #2]
   35408:	add	r5, sp, #64	; 0x40
   3540c:	add	r1, r5, r0, lsl #2
   35410:	ldr	r1, [r1, #4]
   35414:	sdiv	r3, r2, r1
   35418:	mls	r3, r3, r1, r2
   3541c:	cmp	r3, #0
   35420:	beq	3543c <GetDataSlab+0x13000>
   35424:	ldr	r7, [r5, r0, lsl #2]
   35428:	ldr	r5, [lr, r0, lsl #2]
   3542c:	sub	r1, r1, r3
   35430:	mla	r1, r5, r7, r1
   35434:	add	r2, r1, r2
   35438:	b	35458 <GetDataSlab+0x1301c>
   3543c:	ldr	r1, [lr, r0, lsl #2]
   35440:	cmp	r1, #0
   35444:	beq	3545c <GetDataSlab+0x13020>
   35448:	add	r3, sp, #64	; 0x40
   3544c:	ldr	r3, [r3, r0, lsl #2]
   35450:	mla	r2, r3, r1, r2
   35454:	mul	r1, r3, r1
   35458:	add	sl, sl, r1, lsl #3
   3545c:	add	r1, r0, #1
   35460:	add	r0, r0, #2
   35464:	ldr	r3, [fp, #24]
   35468:	cmp	r0, r3
   3546c:	blt	353dc <GetDataSlab+0x12fa0>
   35470:	b	3548c <GetDataSlab+0x13050>
   35474:	ldr	ip, [sp, #60]	; 0x3c
   35478:	b	3548c <GetDataSlab+0x13050>
   3547c:	ldr	r1, [sp, #32]
   35480:	ldr	r0, [r1, r0, lsl #2]
   35484:	add	sl, sl, r0, lsl #3
   35488:	add	r2, r0, r2
   3548c:	ldr	r0, [sp, #40]	; 0x28
   35490:	add	ip, ip, r0
   35494:	str	ip, [sp, #60]	; 0x3c
   35498:	ldr	r1, [sp, #44]	; 0x2c
   3549c:	add	r8, r8, r1
   354a0:	mov	r0, #0
   354a4:	ldr	r3, [sp, #52]	; 0x34
   354a8:	cmp	r8, r3
   354ac:	blt	35378 <GetDataSlab+0x12f3c>
   354b0:	b	22560 <GetDataSlab+0x124>
   354b4:	ldr	r0, [sp, #44]	; 0x2c
   354b8:	cmp	r0, #1
   354bc:	ldr	r2, [sp, #40]	; 0x28
   354c0:	blt	3a264 <GetDataSlab+0x17e28>
   354c4:	ldr	r0, [sp, #36]	; 0x24
   354c8:	mls	r0, r2, ip, r0
   354cc:	ldr	r5, [r9], #4
   354d0:	sub	r0, r0, r5
   354d4:	str	r0, [sp, #28]
   354d8:	add	lr, r4, #4
   354dc:	add	r0, sp, #104	; 0x68
   354e0:	orr	r4, r0, #4
   354e4:	sub	r0, fp, #72	; 0x48
   354e8:	orr	r0, r0, #4
   354ec:	str	r0, [sp, #16]
   354f0:	str	r5, [sp, #32]
   354f4:	mla	r0, r2, ip, r5
   354f8:	str	r0, [sp, #20]
   354fc:	lsl	r0, r2, #1
   35500:	str	r0, [sp, #24]
   35504:	lsl	r8, ip, #3
   35508:	ldr	r0, [sp, #60]	; 0x3c
   3550c:	str	r0, [sp, #36]	; 0x24
   35510:	mov	ip, #0
   35514:	cmp	r2, #1
   35518:	ldr	r0, [sp, #32]
   3551c:	blt	35548 <GetDataSlab+0x1310c>
   35520:	ldr	r0, [sp, #32]
   35524:	add	r7, r3, r0, lsl #3
   35528:	ldr	r0, [sp, #40]	; 0x28
   3552c:	ldr	sl, [sp, #36]	; 0x24
   35530:	ldrh	r2, [r7], r8
   35534:	strh	r2, [sl], #2
   35538:	subs	r0, r0, #1
   3553c:	bne	35530 <GetDataSlab+0x130f4>
   35540:	ldr	r0, [sp, #20]
   35544:	add	sl, sp, #64	; 0x40
   35548:	ldr	r5, [sp, #28]
   3554c:	add	r2, r3, r5, lsl #3
   35550:	add	r3, r2, r0, lsl #3
   35554:	add	r0, r0, r1
   35558:	add	r1, r0, r5
   3555c:	ldr	r0, [fp, #24]
   35560:	cmp	r0, #2
   35564:	blt	3560c <GetDataSlab+0x131d0>
   35568:	mov	r0, #0
   3556c:	mov	r7, r0
   35570:	ldr	r0, [r4, r0, lsl #2]
   35574:	add	r0, r0, #1
   35578:	str	r0, [r4, r7, lsl #2]
   3557c:	ldr	r2, [lr, r7, lsl #2]
   35580:	sdiv	r6, r0, r2
   35584:	mls	r0, r6, r2, r0
   35588:	cmp	r0, #0
   3558c:	bne	355fc <GetDataSlab+0x131c0>
   35590:	mov	r0, #0
   35594:	str	r0, [r4, r7, lsl #2]
   35598:	add	r0, sl, r7, lsl #2
   3559c:	ldr	r0, [r0, #4]
   355a0:	sdiv	r2, r1, r0
   355a4:	mls	r2, r2, r0, r1
   355a8:	cmp	r2, #0
   355ac:	beq	355c8 <GetDataSlab+0x1318c>
   355b0:	ldr	r6, [sl, r7, lsl #2]
   355b4:	ldr	r5, [r9, r7, lsl #2]
   355b8:	sub	r0, r0, r2
   355bc:	mla	r0, r5, r6, r0
   355c0:	add	r1, r0, r1
   355c4:	b	355e0 <GetDataSlab+0x131a4>
   355c8:	ldr	r0, [r9, r7, lsl #2]
   355cc:	cmp	r0, #0
   355d0:	beq	355e4 <GetDataSlab+0x131a8>
   355d4:	ldr	r2, [sl, r7, lsl #2]
   355d8:	mla	r1, r2, r0, r1
   355dc:	mul	r0, r2, r0
   355e0:	add	r3, r3, r0, lsl #3
   355e4:	add	r0, r7, #1
   355e8:	add	r2, r7, #2
   355ec:	ldr	r5, [fp, #24]
   355f0:	cmp	r2, r5
   355f4:	blt	3556c <GetDataSlab+0x13130>
   355f8:	b	3560c <GetDataSlab+0x131d0>
   355fc:	ldr	r0, [sp, #16]
   35600:	ldr	r0, [r0, r7, lsl #2]
   35604:	add	r3, r3, r0, lsl #3
   35608:	add	r1, r0, r1
   3560c:	ldr	r0, [sp, #24]
   35610:	ldr	r2, [sp, #36]	; 0x24
   35614:	add	r2, r2, r0
   35618:	str	r2, [sp, #36]	; 0x24
   3561c:	ldr	r2, [sp, #40]	; 0x28
   35620:	add	ip, ip, r2
   35624:	ldr	r0, [sp, #44]	; 0x2c
   35628:	cmp	ip, r0
   3562c:	blt	35514 <GetDataSlab+0x130d8>
   35630:	mov	r0, #0
   35634:	ldr	r4, [fp, #20]
   35638:	ldr	lr, [fp, #16]
   3563c:	b	3a268 <GetDataSlab+0x17e2c>
   35640:	ldr	r0, [sp, #44]	; 0x2c
   35644:	cmp	r0, #1
   35648:	blt	3ae3c <GetDataSlab+0x18a00>
   3564c:	add	r0, r9, #4
   35650:	str	r0, [sp, #52]	; 0x34
   35654:	add	r9, r4, #4
   35658:	add	r0, sp, #104	; 0x68
   3565c:	orr	r8, r0, #4
   35660:	sub	r0, fp, #72	; 0x48
   35664:	orr	r0, r0, #4
   35668:	str	r0, [sp, #48]	; 0x30
   3566c:	mov	sl, #0
   35670:	ldr	r1, [fp, #16]
   35674:	ldr	r0, [fp, #12]
   35678:	ldr	r0, [r0]
   3567c:	add	r2, r0, r2
   35680:	add	r3, ip, r0
   35684:	ldr	r0, [r4]
   35688:	cmp	r0, #1
   3568c:	blt	356c0 <GetDataSlab+0x13284>
   35690:	ldr	r0, [sp, #60]	; 0x3c
   35694:	add	r7, r0, sl, lsl #2
   35698:	mov	r5, #0
   3569c:	ldrb	r0, [r3]
   356a0:	str	r0, [r7, r5, lsl #2]
   356a4:	ldr	r0, [r1]
   356a8:	add	r2, r0, r2
   356ac:	add	r3, r3, r0
   356b0:	add	r5, r5, #1
   356b4:	ldr	r0, [r4]
   356b8:	cmp	r5, r0
   356bc:	blt	3569c <GetDataSlab+0x13260>
   356c0:	ldr	r7, [fp, #8]
   356c4:	ldr	r7, [r7]
   356c8:	ldr	r6, [r1]
   356cc:	mls	r7, r6, r0, r7
   356d0:	ldr	r6, [fp, #12]
   356d4:	ldr	r6, [r6]
   356d8:	sub	r5, r7, r6
   356dc:	add	ip, r3, r5
   356e0:	add	r2, r5, r2
   356e4:	ldr	r3, [fp, #24]
   356e8:	cmp	r3, #2
   356ec:	blt	357a8 <GetDataSlab+0x1336c>
   356f0:	mov	r5, #0
   356f4:	mov	r7, r5
   356f8:	ldr	r3, [r8, r5, lsl #2]
   356fc:	add	r3, r3, #1
   35700:	str	r3, [r8, r5, lsl #2]
   35704:	ldr	r5, [r9, r5, lsl #2]
   35708:	sdiv	r6, r3, r5
   3570c:	mls	r3, r6, r5, r3
   35710:	cmp	r3, #0
   35714:	bne	35798 <GetDataSlab+0x1335c>
   35718:	mov	r3, #0
   3571c:	str	r3, [r8, r7, lsl #2]
   35720:	add	r4, sp, #64	; 0x40
   35724:	add	r3, r4, r7, lsl #2
   35728:	ldr	r5, [r3, #4]
   3572c:	sdiv	r3, r2, r5
   35730:	mls	r6, r3, r5, r2
   35734:	cmp	r6, #0
   35738:	beq	35760 <GetDataSlab+0x13324>
   3573c:	ldr	r3, [r4, r7, lsl #2]
   35740:	ldr	r1, [sp, #52]	; 0x34
   35744:	ldr	lr, [r1, r7, lsl #2]
   35748:	sub	r5, r5, r6
   3574c:	mla	r3, lr, r3, r5
   35750:	ldr	r1, [fp, #16]
   35754:	add	r2, r3, r2
   35758:	add	ip, ip, r3
   3575c:	b	3577c <GetDataSlab+0x13340>
   35760:	ldr	r3, [sp, #52]	; 0x34
   35764:	ldr	r5, [r3, r7, lsl #2]
   35768:	cmp	r5, #0
   3576c:	addne	r3, sp, #64	; 0x40
   35770:	ldrne	r3, [r3, r7, lsl #2]
   35774:	mlane	r2, r3, r5, r2
   35778:	mlane	ip, r3, r5, ip
   3577c:	ldr	r4, [fp, #20]
   35780:	add	r5, r7, #1
   35784:	add	r3, r7, #2
   35788:	ldr	r7, [fp, #24]
   3578c:	cmp	r3, r7
   35790:	blt	356f4 <GetDataSlab+0x132b8>
   35794:	b	357a8 <GetDataSlab+0x1336c>
   35798:	ldr	r3, [sp, #48]	; 0x30
   3579c:	ldr	r3, [r3, r7, lsl #2]
   357a0:	add	ip, ip, r3
   357a4:	add	r2, r3, r2
   357a8:	add	sl, r0, sl
   357ac:	mov	r0, #0
   357b0:	ldr	r3, [sp, #44]	; 0x2c
   357b4:	cmp	sl, r3
   357b8:	blt	35674 <GetDataSlab+0x13238>
   357bc:	b	22560 <GetDataSlab+0x124>
   357c0:	ldr	r0, [sp, #44]	; 0x2c
   357c4:	cmp	r0, #1
   357c8:	blt	3ae3c <GetDataSlab+0x18a00>
   357cc:	add	r0, r9, #4
   357d0:	str	r0, [sp, #52]	; 0x34
   357d4:	add	r9, r4, #4
   357d8:	add	r0, sp, #104	; 0x68
   357dc:	orr	r8, r0, #4
   357e0:	sub	r0, fp, #72	; 0x48
   357e4:	orr	r0, r0, #4
   357e8:	str	r0, [sp, #48]	; 0x30
   357ec:	mov	sl, #0
   357f0:	ldr	r1, [fp, #16]
   357f4:	ldr	r0, [fp, #12]
   357f8:	ldr	r0, [r0]
   357fc:	add	r2, r0, r2
   35800:	add	r3, ip, r0, lsl #1
   35804:	ldr	r0, [r4]
   35808:	cmp	r0, #1
   3580c:	blt	35840 <GetDataSlab+0x13404>
   35810:	ldr	r0, [sp, #60]	; 0x3c
   35814:	add	r7, r0, sl, lsl #2
   35818:	mov	r5, #0
   3581c:	ldrsh	r0, [r3]
   35820:	str	r0, [r7, r5, lsl #2]
   35824:	ldr	r0, [r1]
   35828:	add	r2, r0, r2
   3582c:	add	r3, r3, r0, lsl #1
   35830:	add	r5, r5, #1
   35834:	ldr	r0, [r4]
   35838:	cmp	r5, r0
   3583c:	blt	3581c <GetDataSlab+0x133e0>
   35840:	ldr	r7, [fp, #8]
   35844:	ldr	r7, [r7]
   35848:	ldr	r6, [r1]
   3584c:	mls	r7, r6, r0, r7
   35850:	ldr	r6, [fp, #12]
   35854:	ldr	r6, [r6]
   35858:	sub	r5, r7, r6
   3585c:	add	ip, r3, r5, lsl #1
   35860:	add	r2, r5, r2
   35864:	ldr	r3, [fp, #24]
   35868:	cmp	r3, #2
   3586c:	blt	3592c <GetDataSlab+0x134f0>
   35870:	mov	r5, #0
   35874:	mov	r7, r5
   35878:	ldr	r3, [r8, r5, lsl #2]
   3587c:	add	r3, r3, #1
   35880:	str	r3, [r8, r5, lsl #2]
   35884:	ldr	r5, [r9, r5, lsl #2]
   35888:	sdiv	r6, r3, r5
   3588c:	mls	r3, r6, r5, r3
   35890:	cmp	r3, #0
   35894:	bne	3591c <GetDataSlab+0x134e0>
   35898:	mov	r3, #0
   3589c:	str	r3, [r8, r7, lsl #2]
   358a0:	add	r4, sp, #64	; 0x40
   358a4:	add	r3, r4, r7, lsl #2
   358a8:	ldr	r5, [r3, #4]
   358ac:	sdiv	r3, r2, r5
   358b0:	mls	r6, r3, r5, r2
   358b4:	cmp	r6, #0
   358b8:	beq	358dc <GetDataSlab+0x134a0>
   358bc:	ldr	r3, [r4, r7, lsl #2]
   358c0:	ldr	r1, [sp, #52]	; 0x34
   358c4:	ldr	lr, [r1, r7, lsl #2]
   358c8:	sub	r5, r5, r6
   358cc:	mla	r3, lr, r3, r5
   358d0:	ldr	r1, [fp, #16]
   358d4:	add	r2, r3, r2
   358d8:	b	358fc <GetDataSlab+0x134c0>
   358dc:	ldr	r3, [sp, #52]	; 0x34
   358e0:	ldr	r5, [r3, r7, lsl #2]
   358e4:	cmp	r5, #0
   358e8:	beq	35900 <GetDataSlab+0x134c4>
   358ec:	add	r3, sp, #64	; 0x40
   358f0:	ldr	r3, [r3, r7, lsl #2]
   358f4:	mla	r2, r3, r5, r2
   358f8:	mul	r3, r3, r5
   358fc:	add	ip, ip, r3, lsl #1
   35900:	ldr	r4, [fp, #20]
   35904:	add	r5, r7, #1
   35908:	add	r3, r7, #2
   3590c:	ldr	r7, [fp, #24]
   35910:	cmp	r3, r7
   35914:	blt	35874 <GetDataSlab+0x13438>
   35918:	b	3592c <GetDataSlab+0x134f0>
   3591c:	ldr	r3, [sp, #48]	; 0x30
   35920:	ldr	r3, [r3, r7, lsl #2]
   35924:	add	ip, ip, r3, lsl #1
   35928:	add	r2, r3, r2
   3592c:	add	sl, r0, sl
   35930:	mov	r0, #0
   35934:	ldr	r3, [sp, #44]	; 0x2c
   35938:	cmp	sl, r3
   3593c:	blt	357f4 <GetDataSlab+0x133b8>
   35940:	b	22560 <GetDataSlab+0x124>
   35944:	ldr	r0, [sp, #44]	; 0x2c
   35948:	cmp	r0, #1
   3594c:	blt	3ae3c <GetDataSlab+0x18a00>
   35950:	add	r0, r9, #4
   35954:	str	r0, [sp, #52]	; 0x34
   35958:	add	r9, r4, #4
   3595c:	add	r0, sp, #104	; 0x68
   35960:	orr	r8, r0, #4
   35964:	sub	r0, fp, #72	; 0x48
   35968:	orr	r0, r0, #4
   3596c:	str	r0, [sp, #48]	; 0x30
   35970:	mov	sl, #0
   35974:	ldr	r1, [fp, #16]
   35978:	ldr	r0, [fp, #12]
   3597c:	ldr	r0, [r0]
   35980:	add	r2, r0, r2
   35984:	add	r3, ip, r0, lsl #1
   35988:	ldr	r0, [r4]
   3598c:	cmp	r0, #1
   35990:	blt	359c4 <GetDataSlab+0x13588>
   35994:	ldr	r0, [sp, #60]	; 0x3c
   35998:	add	r7, r0, sl, lsl #2
   3599c:	mov	r5, #0
   359a0:	ldrh	r0, [r3]
   359a4:	str	r0, [r7, r5, lsl #2]
   359a8:	ldr	r0, [r1]
   359ac:	add	r2, r0, r2
   359b0:	add	r3, r3, r0, lsl #1
   359b4:	add	r5, r5, #1
   359b8:	ldr	r0, [r4]
   359bc:	cmp	r5, r0
   359c0:	blt	359a0 <GetDataSlab+0x13564>
   359c4:	ldr	r7, [fp, #8]
   359c8:	ldr	r7, [r7]
   359cc:	ldr	r6, [r1]
   359d0:	mls	r7, r6, r0, r7
   359d4:	ldr	r6, [fp, #12]
   359d8:	ldr	r6, [r6]
   359dc:	sub	r5, r7, r6
   359e0:	add	ip, r3, r5, lsl #1
   359e4:	add	r2, r5, r2
   359e8:	ldr	r3, [fp, #24]
   359ec:	cmp	r3, #2
   359f0:	blt	35ab0 <GetDataSlab+0x13674>
   359f4:	mov	r5, #0
   359f8:	mov	r7, r5
   359fc:	ldr	r3, [r8, r5, lsl #2]
   35a00:	add	r3, r3, #1
   35a04:	str	r3, [r8, r5, lsl #2]
   35a08:	ldr	r5, [r9, r5, lsl #2]
   35a0c:	sdiv	r6, r3, r5
   35a10:	mls	r3, r6, r5, r3
   35a14:	cmp	r3, #0
   35a18:	bne	35aa0 <GetDataSlab+0x13664>
   35a1c:	mov	r3, #0
   35a20:	str	r3, [r8, r7, lsl #2]
   35a24:	add	r4, sp, #64	; 0x40
   35a28:	add	r3, r4, r7, lsl #2
   35a2c:	ldr	r5, [r3, #4]
   35a30:	sdiv	r3, r2, r5
   35a34:	mls	r6, r3, r5, r2
   35a38:	cmp	r6, #0
   35a3c:	beq	35a60 <GetDataSlab+0x13624>
   35a40:	ldr	r3, [r4, r7, lsl #2]
   35a44:	ldr	r1, [sp, #52]	; 0x34
   35a48:	ldr	lr, [r1, r7, lsl #2]
   35a4c:	sub	r5, r5, r6
   35a50:	mla	r3, lr, r3, r5
   35a54:	ldr	r1, [fp, #16]
   35a58:	add	r2, r3, r2
   35a5c:	b	35a80 <GetDataSlab+0x13644>
   35a60:	ldr	r3, [sp, #52]	; 0x34
   35a64:	ldr	r5, [r3, r7, lsl #2]
   35a68:	cmp	r5, #0
   35a6c:	beq	35a84 <GetDataSlab+0x13648>
   35a70:	add	r3, sp, #64	; 0x40
   35a74:	ldr	r3, [r3, r7, lsl #2]
   35a78:	mla	r2, r3, r5, r2
   35a7c:	mul	r3, r3, r5
   35a80:	add	ip, ip, r3, lsl #1
   35a84:	ldr	r4, [fp, #20]
   35a88:	add	r5, r7, #1
   35a8c:	add	r3, r7, #2
   35a90:	ldr	r7, [fp, #24]
   35a94:	cmp	r3, r7
   35a98:	blt	359f8 <GetDataSlab+0x135bc>
   35a9c:	b	35ab0 <GetDataSlab+0x13674>
   35aa0:	ldr	r3, [sp, #48]	; 0x30
   35aa4:	ldr	r3, [r3, r7, lsl #2]
   35aa8:	add	ip, ip, r3, lsl #1
   35aac:	add	r2, r3, r2
   35ab0:	add	sl, r0, sl
   35ab4:	mov	r0, #0
   35ab8:	ldr	r3, [sp, #44]	; 0x2c
   35abc:	cmp	sl, r3
   35ac0:	blt	35978 <GetDataSlab+0x1353c>
   35ac4:	b	22560 <GetDataSlab+0x124>
   35ac8:	ldr	r0, [sp, #44]	; 0x2c
   35acc:	cmp	r0, #1
   35ad0:	blt	3ae3c <GetDataSlab+0x18a00>
   35ad4:	add	r0, r9, #4
   35ad8:	str	r0, [sp, #52]	; 0x34
   35adc:	add	r9, r4, #4
   35ae0:	add	r0, sp, #104	; 0x68
   35ae4:	orr	r8, r0, #4
   35ae8:	sub	r0, fp, #72	; 0x48
   35aec:	orr	r0, r0, #4
   35af0:	str	r0, [sp, #48]	; 0x30
   35af4:	mov	sl, #0
   35af8:	ldr	r1, [fp, #16]
   35afc:	ldr	r0, [fp, #12]
   35b00:	ldr	r0, [r0]
   35b04:	add	r2, r0, r2
   35b08:	add	r3, ip, r0, lsl #2
   35b0c:	ldr	r0, [r4]
   35b10:	cmp	r0, #1
   35b14:	blt	35b48 <GetDataSlab+0x1370c>
   35b18:	ldr	r0, [sp, #60]	; 0x3c
   35b1c:	add	r7, r0, sl, lsl #2
   35b20:	mov	r5, #0
   35b24:	ldr	r0, [r3]
   35b28:	str	r0, [r7, r5, lsl #2]
   35b2c:	ldr	r0, [r1]
   35b30:	add	r2, r0, r2
   35b34:	add	r3, r3, r0, lsl #2
   35b38:	add	r5, r5, #1
   35b3c:	ldr	r0, [r4]
   35b40:	cmp	r5, r0
   35b44:	blt	35b24 <GetDataSlab+0x136e8>
   35b48:	ldr	r7, [fp, #8]
   35b4c:	ldr	r7, [r7]
   35b50:	ldr	r6, [r1]
   35b54:	mls	r7, r6, r0, r7
   35b58:	ldr	r6, [fp, #12]
   35b5c:	ldr	r6, [r6]
   35b60:	sub	r5, r7, r6
   35b64:	add	ip, r3, r5, lsl #2
   35b68:	add	r2, r5, r2
   35b6c:	ldr	r3, [fp, #24]
   35b70:	cmp	r3, #2
   35b74:	blt	35c34 <GetDataSlab+0x137f8>
   35b78:	mov	r5, #0
   35b7c:	mov	r7, r5
   35b80:	ldr	r3, [r8, r5, lsl #2]
   35b84:	add	r3, r3, #1
   35b88:	str	r3, [r8, r5, lsl #2]
   35b8c:	ldr	r5, [r9, r5, lsl #2]
   35b90:	sdiv	r6, r3, r5
   35b94:	mls	r3, r6, r5, r3
   35b98:	cmp	r3, #0
   35b9c:	bne	35c24 <GetDataSlab+0x137e8>
   35ba0:	mov	r3, #0
   35ba4:	str	r3, [r8, r7, lsl #2]
   35ba8:	add	r4, sp, #64	; 0x40
   35bac:	add	r3, r4, r7, lsl #2
   35bb0:	ldr	r5, [r3, #4]
   35bb4:	sdiv	r3, r2, r5
   35bb8:	mls	r6, r3, r5, r2
   35bbc:	cmp	r6, #0
   35bc0:	beq	35be4 <GetDataSlab+0x137a8>
   35bc4:	ldr	r3, [r4, r7, lsl #2]
   35bc8:	ldr	r1, [sp, #52]	; 0x34
   35bcc:	ldr	lr, [r1, r7, lsl #2]
   35bd0:	sub	r5, r5, r6
   35bd4:	mla	r3, lr, r3, r5
   35bd8:	ldr	r1, [fp, #16]
   35bdc:	add	r2, r3, r2
   35be0:	b	35c04 <GetDataSlab+0x137c8>
   35be4:	ldr	r3, [sp, #52]	; 0x34
   35be8:	ldr	r5, [r3, r7, lsl #2]
   35bec:	cmp	r5, #0
   35bf0:	beq	35c08 <GetDataSlab+0x137cc>
   35bf4:	add	r3, sp, #64	; 0x40
   35bf8:	ldr	r3, [r3, r7, lsl #2]
   35bfc:	mla	r2, r3, r5, r2
   35c00:	mul	r3, r3, r5
   35c04:	add	ip, ip, r3, lsl #2
   35c08:	ldr	r4, [fp, #20]
   35c0c:	add	r5, r7, #1
   35c10:	add	r3, r7, #2
   35c14:	ldr	r7, [fp, #24]
   35c18:	cmp	r3, r7
   35c1c:	blt	35b7c <GetDataSlab+0x13740>
   35c20:	b	35c34 <GetDataSlab+0x137f8>
   35c24:	ldr	r3, [sp, #48]	; 0x30
   35c28:	ldr	r3, [r3, r7, lsl #2]
   35c2c:	add	ip, ip, r3, lsl #2
   35c30:	add	r2, r3, r2
   35c34:	add	sl, r0, sl
   35c38:	mov	r0, #0
   35c3c:	ldr	r3, [sp, #44]	; 0x2c
   35c40:	cmp	sl, r3
   35c44:	blt	35afc <GetDataSlab+0x136c0>
   35c48:	b	22560 <GetDataSlab+0x124>
   35c4c:	ldr	r0, [sp, #44]	; 0x2c
   35c50:	cmp	r0, #1
   35c54:	blt	3ae3c <GetDataSlab+0x18a00>
   35c58:	add	r0, r9, #4
   35c5c:	str	r0, [sp, #52]	; 0x34
   35c60:	add	r9, r4, #4
   35c64:	add	r0, sp, #104	; 0x68
   35c68:	orr	r8, r0, #4
   35c6c:	sub	r0, fp, #72	; 0x48
   35c70:	orr	r0, r0, #4
   35c74:	str	r0, [sp, #48]	; 0x30
   35c78:	mov	sl, #0
   35c7c:	ldr	r1, [fp, #16]
   35c80:	ldr	r0, [fp, #12]
   35c84:	ldr	r0, [r0]
   35c88:	add	r2, r0, r2
   35c8c:	add	r3, ip, r0, lsl #2
   35c90:	ldr	r0, [r4]
   35c94:	cmp	r0, #1
   35c98:	blt	35ccc <GetDataSlab+0x13890>
   35c9c:	ldr	r0, [sp, #60]	; 0x3c
   35ca0:	add	r7, r0, sl, lsl #2
   35ca4:	mov	r5, #0
   35ca8:	ldr	r0, [r3]
   35cac:	str	r0, [r7, r5, lsl #2]
   35cb0:	ldr	r0, [r1]
   35cb4:	add	r2, r0, r2
   35cb8:	add	r3, r3, r0, lsl #2
   35cbc:	add	r5, r5, #1
   35cc0:	ldr	r0, [r4]
   35cc4:	cmp	r5, r0
   35cc8:	blt	35ca8 <GetDataSlab+0x1386c>
   35ccc:	ldr	r7, [fp, #8]
   35cd0:	ldr	r7, [r7]
   35cd4:	ldr	r6, [r1]
   35cd8:	mls	r7, r6, r0, r7
   35cdc:	ldr	r6, [fp, #12]
   35ce0:	ldr	r6, [r6]
   35ce4:	sub	r5, r7, r6
   35ce8:	add	ip, r3, r5, lsl #2
   35cec:	add	r2, r5, r2
   35cf0:	ldr	r3, [fp, #24]
   35cf4:	cmp	r3, #2
   35cf8:	blt	35db8 <GetDataSlab+0x1397c>
   35cfc:	mov	r5, #0
   35d00:	mov	r7, r5
   35d04:	ldr	r3, [r8, r5, lsl #2]
   35d08:	add	r3, r3, #1
   35d0c:	str	r3, [r8, r5, lsl #2]
   35d10:	ldr	r5, [r9, r5, lsl #2]
   35d14:	sdiv	r6, r3, r5
   35d18:	mls	r3, r6, r5, r3
   35d1c:	cmp	r3, #0
   35d20:	bne	35da8 <GetDataSlab+0x1396c>
   35d24:	mov	r3, #0
   35d28:	str	r3, [r8, r7, lsl #2]
   35d2c:	add	r4, sp, #64	; 0x40
   35d30:	add	r3, r4, r7, lsl #2
   35d34:	ldr	r5, [r3, #4]
   35d38:	sdiv	r3, r2, r5
   35d3c:	mls	r6, r3, r5, r2
   35d40:	cmp	r6, #0
   35d44:	beq	35d68 <GetDataSlab+0x1392c>
   35d48:	ldr	r3, [r4, r7, lsl #2]
   35d4c:	ldr	r1, [sp, #52]	; 0x34
   35d50:	ldr	lr, [r1, r7, lsl #2]
   35d54:	sub	r5, r5, r6
   35d58:	mla	r3, lr, r3, r5
   35d5c:	ldr	r1, [fp, #16]
   35d60:	add	r2, r3, r2
   35d64:	b	35d88 <GetDataSlab+0x1394c>
   35d68:	ldr	r3, [sp, #52]	; 0x34
   35d6c:	ldr	r5, [r3, r7, lsl #2]
   35d70:	cmp	r5, #0
   35d74:	beq	35d8c <GetDataSlab+0x13950>
   35d78:	add	r3, sp, #64	; 0x40
   35d7c:	ldr	r3, [r3, r7, lsl #2]
   35d80:	mla	r2, r3, r5, r2
   35d84:	mul	r3, r3, r5
   35d88:	add	ip, ip, r3, lsl #2
   35d8c:	ldr	r4, [fp, #20]
   35d90:	add	r5, r7, #1
   35d94:	add	r3, r7, #2
   35d98:	ldr	r7, [fp, #24]
   35d9c:	cmp	r3, r7
   35da0:	blt	35d00 <GetDataSlab+0x138c4>
   35da4:	b	35db8 <GetDataSlab+0x1397c>
   35da8:	ldr	r3, [sp, #48]	; 0x30
   35dac:	ldr	r3, [r3, r7, lsl #2]
   35db0:	add	ip, ip, r3, lsl #2
   35db4:	add	r2, r3, r2
   35db8:	add	sl, r0, sl
   35dbc:	mov	r0, #0
   35dc0:	ldr	r3, [sp, #44]	; 0x2c
   35dc4:	cmp	sl, r3
   35dc8:	blt	35c80 <GetDataSlab+0x13844>
   35dcc:	b	22560 <GetDataSlab+0x124>
   35dd0:	ldr	r0, [sp, #44]	; 0x2c
   35dd4:	cmp	r0, #1
   35dd8:	blt	3ae3c <GetDataSlab+0x18a00>
   35ddc:	ldr	r0, [fp, #12]
   35de0:	add	r0, r0, #4
   35de4:	str	r0, [sp, #52]	; 0x34
   35de8:	mov	r0, ip
   35dec:	add	ip, r4, #4
   35df0:	add	r1, sp, #104	; 0x68
   35df4:	orr	r8, r1, #4
   35df8:	orr	r0, r0, #4
   35dfc:	str	r0, [sp, #48]	; 0x30
   35e00:	mov	sl, #0
   35e04:	ldr	r1, [fp, #16]
   35e08:	ldr	r0, [fp, #12]
   35e0c:	ldr	r0, [r0]
   35e10:	add	r2, r0, r2
   35e14:	add	r3, r9, r0, lsl #2
   35e18:	ldr	r0, [r4]
   35e1c:	cmp	r0, #1
   35e20:	blt	35e5c <GetDataSlab+0x13a20>
   35e24:	ldr	r0, [sp, #60]	; 0x3c
   35e28:	add	r7, r0, sl, lsl #2
   35e2c:	mov	r5, #0
   35e30:	vldr	s0, [r3]
   35e34:	vcvt.s32.f32	s0, s0
   35e38:	vmov	r0, s0
   35e3c:	str	r0, [r7, r5, lsl #2]
   35e40:	ldr	r0, [r1]
   35e44:	add	r2, r0, r2
   35e48:	add	r3, r3, r0, lsl #2
   35e4c:	add	r5, r5, #1
   35e50:	ldr	r0, [r4]
   35e54:	cmp	r5, r0
   35e58:	blt	35e30 <GetDataSlab+0x139f4>
   35e5c:	ldr	r7, [fp, #8]
   35e60:	ldr	r5, [r7]
   35e64:	ldr	r6, [r1]
   35e68:	mls	r5, r6, r0, r5
   35e6c:	ldr	r7, [fp, #12]
   35e70:	ldr	r6, [r7]
   35e74:	sub	r5, r5, r6
   35e78:	add	r9, r3, r5, lsl #2
   35e7c:	add	r2, r5, r2
   35e80:	ldr	r3, [fp, #24]
   35e84:	cmp	r3, #2
   35e88:	blt	35f48 <GetDataSlab+0x13b0c>
   35e8c:	mov	r5, #0
   35e90:	mov	r7, r5
   35e94:	ldr	r3, [r8, r5, lsl #2]
   35e98:	add	r3, r3, #1
   35e9c:	str	r3, [r8, r5, lsl #2]
   35ea0:	ldr	r5, [ip, r5, lsl #2]
   35ea4:	sdiv	r6, r3, r5
   35ea8:	mls	r3, r6, r5, r3
   35eac:	cmp	r3, #0
   35eb0:	bne	35f38 <GetDataSlab+0x13afc>
   35eb4:	mov	r3, #0
   35eb8:	str	r3, [r8, r7, lsl #2]
   35ebc:	add	r4, sp, #64	; 0x40
   35ec0:	add	r3, r4, r7, lsl #2
   35ec4:	ldr	r5, [r3, #4]
   35ec8:	sdiv	r3, r2, r5
   35ecc:	mls	r6, r3, r5, r2
   35ed0:	cmp	r6, #0
   35ed4:	beq	35ef8 <GetDataSlab+0x13abc>
   35ed8:	ldr	r3, [r4, r7, lsl #2]
   35edc:	ldr	r1, [sp, #52]	; 0x34
   35ee0:	ldr	lr, [r1, r7, lsl #2]
   35ee4:	sub	r5, r5, r6
   35ee8:	mla	r3, lr, r3, r5
   35eec:	ldr	r1, [fp, #16]
   35ef0:	add	r2, r3, r2
   35ef4:	b	35f18 <GetDataSlab+0x13adc>
   35ef8:	ldr	r3, [sp, #52]	; 0x34
   35efc:	ldr	r5, [r3, r7, lsl #2]
   35f00:	cmp	r5, #0
   35f04:	beq	35f1c <GetDataSlab+0x13ae0>
   35f08:	add	r3, sp, #64	; 0x40
   35f0c:	ldr	r3, [r3, r7, lsl #2]
   35f10:	mla	r2, r3, r5, r2
   35f14:	mul	r3, r3, r5
   35f18:	add	r9, r9, r3, lsl #2
   35f1c:	ldr	r4, [fp, #20]
   35f20:	add	r5, r7, #1
   35f24:	add	r3, r7, #2
   35f28:	ldr	r7, [fp, #24]
   35f2c:	cmp	r3, r7
   35f30:	blt	35e90 <GetDataSlab+0x13a54>
   35f34:	b	35f48 <GetDataSlab+0x13b0c>
   35f38:	ldr	r3, [sp, #48]	; 0x30
   35f3c:	ldr	r3, [r3, r7, lsl #2]
   35f40:	add	r9, r9, r3, lsl #2
   35f44:	add	r2, r3, r2
   35f48:	add	sl, r0, sl
   35f4c:	mov	r0, #0
   35f50:	ldr	r3, [sp, #44]	; 0x2c
   35f54:	cmp	sl, r3
   35f58:	blt	35e08 <GetDataSlab+0x139cc>
   35f5c:	b	22560 <GetDataSlab+0x124>
   35f60:	ldr	r0, [sp, #44]	; 0x2c
   35f64:	cmp	r0, #1
   35f68:	blt	3ae3c <GetDataSlab+0x18a00>
   35f6c:	ldr	r0, [fp, #12]
   35f70:	add	r0, r0, #4
   35f74:	str	r0, [sp, #52]	; 0x34
   35f78:	mov	r0, ip
   35f7c:	add	ip, r4, #4
   35f80:	add	r1, sp, #104	; 0x68
   35f84:	orr	r8, r1, #4
   35f88:	orr	r0, r0, #4
   35f8c:	str	r0, [sp, #48]	; 0x30
   35f90:	mov	sl, #0
   35f94:	ldr	r1, [fp, #16]
   35f98:	ldr	r0, [fp, #12]
   35f9c:	ldr	r0, [r0]
   35fa0:	add	r2, r0, r2
   35fa4:	add	r3, r9, r0, lsl #3
   35fa8:	ldr	r0, [r4]
   35fac:	cmp	r0, #1
   35fb0:	blt	35fec <GetDataSlab+0x13bb0>
   35fb4:	ldr	r0, [sp, #60]	; 0x3c
   35fb8:	add	r7, r0, sl, lsl #2
   35fbc:	mov	r5, #0
   35fc0:	vldr	d16, [r3]
   35fc4:	vcvt.s32.f64	s0, d16
   35fc8:	vmov	r0, s0
   35fcc:	str	r0, [r7, r5, lsl #2]
   35fd0:	ldr	r0, [r1]
   35fd4:	add	r2, r0, r2
   35fd8:	add	r3, r3, r0, lsl #3
   35fdc:	add	r5, r5, #1
   35fe0:	ldr	r0, [r4]
   35fe4:	cmp	r5, r0
   35fe8:	blt	35fc0 <GetDataSlab+0x13b84>
   35fec:	ldr	r7, [fp, #8]
   35ff0:	ldr	r5, [r7]
   35ff4:	ldr	r6, [r1]
   35ff8:	mls	r5, r6, r0, r5
   35ffc:	ldr	r7, [fp, #12]
   36000:	ldr	r6, [r7]
   36004:	sub	r5, r5, r6
   36008:	add	r9, r3, r5, lsl #3
   3600c:	add	r2, r5, r2
   36010:	ldr	r3, [fp, #24]
   36014:	cmp	r3, #2
   36018:	blt	360d8 <GetDataSlab+0x13c9c>
   3601c:	mov	r5, #0
   36020:	mov	r7, r5
   36024:	ldr	r3, [r8, r5, lsl #2]
   36028:	add	r3, r3, #1
   3602c:	str	r3, [r8, r5, lsl #2]
   36030:	ldr	r5, [ip, r5, lsl #2]
   36034:	sdiv	r6, r3, r5
   36038:	mls	r3, r6, r5, r3
   3603c:	cmp	r3, #0
   36040:	bne	360c8 <GetDataSlab+0x13c8c>
   36044:	mov	r3, #0
   36048:	str	r3, [r8, r7, lsl #2]
   3604c:	add	r4, sp, #64	; 0x40
   36050:	add	r3, r4, r7, lsl #2
   36054:	ldr	r5, [r3, #4]
   36058:	sdiv	r3, r2, r5
   3605c:	mls	r6, r3, r5, r2
   36060:	cmp	r6, #0
   36064:	beq	36088 <GetDataSlab+0x13c4c>
   36068:	ldr	r3, [r4, r7, lsl #2]
   3606c:	ldr	r1, [sp, #52]	; 0x34
   36070:	ldr	lr, [r1, r7, lsl #2]
   36074:	sub	r5, r5, r6
   36078:	mla	r3, lr, r3, r5
   3607c:	ldr	r1, [fp, #16]
   36080:	add	r2, r3, r2
   36084:	b	360a8 <GetDataSlab+0x13c6c>
   36088:	ldr	r3, [sp, #52]	; 0x34
   3608c:	ldr	r5, [r3, r7, lsl #2]
   36090:	cmp	r5, #0
   36094:	beq	360ac <GetDataSlab+0x13c70>
   36098:	add	r3, sp, #64	; 0x40
   3609c:	ldr	r3, [r3, r7, lsl #2]
   360a0:	mla	r2, r3, r5, r2
   360a4:	mul	r3, r3, r5
   360a8:	add	r9, r9, r3, lsl #3
   360ac:	ldr	r4, [fp, #20]
   360b0:	add	r5, r7, #1
   360b4:	add	r3, r7, #2
   360b8:	ldr	r7, [fp, #24]
   360bc:	cmp	r3, r7
   360c0:	blt	36020 <GetDataSlab+0x13be4>
   360c4:	b	360d8 <GetDataSlab+0x13c9c>
   360c8:	ldr	r3, [sp, #48]	; 0x30
   360cc:	ldr	r3, [r3, r7, lsl #2]
   360d0:	add	r9, r9, r3, lsl #3
   360d4:	add	r2, r3, r2
   360d8:	add	sl, r0, sl
   360dc:	mov	r0, #0
   360e0:	ldr	r3, [sp, #44]	; 0x2c
   360e4:	cmp	sl, r3
   360e8:	blt	35f98 <GetDataSlab+0x13b5c>
   360ec:	b	22560 <GetDataSlab+0x124>
   360f0:	ldr	r0, [sp, #44]	; 0x2c
   360f4:	cmp	r0, #1
   360f8:	sub	r0, fp, #72	; 0x48
   360fc:	blt	36278 <GetDataSlab+0x13e3c>
   36100:	add	r9, r9, #4
   36104:	add	r6, r4, #4
   36108:	add	r2, sp, #104	; 0x68
   3610c:	orr	r5, r2, #4
   36110:	orr	r0, r0, #4
   36114:	str	r0, [sp, #40]	; 0x28
   36118:	mov	sl, #0
   3611c:	ldr	ip, [sp, #60]	; 0x3c
   36120:	ldr	r0, [fp, #12]
   36124:	ldr	r0, [r0]
   36128:	add	r1, r0, r1
   3612c:	add	r2, r8, r0, lsl #3
   36130:	ldr	r0, [r4]
   36134:	cmp	r0, #1
   36138:	blt	36178 <GetDataSlab+0x13d3c>
   3613c:	add	r7, ip, sl, lsl #2
   36140:	mov	r3, #0
   36144:	ldr	lr, [fp, #8]
   36148:	mov	r8, lr
   3614c:	ldr	lr, [fp, #16]
   36150:	ldr	r0, [r2]
   36154:	str	r0, [r7, r3, lsl #2]
   36158:	ldr	r0, [lr]
   3615c:	add	r1, r0, r1
   36160:	add	r2, r2, r0, lsl #3
   36164:	add	r3, r3, #1
   36168:	ldr	r0, [r4]
   3616c:	cmp	r3, r0
   36170:	blt	36150 <GetDataSlab+0x13d14>
   36174:	b	36184 <GetDataSlab+0x13d48>
   36178:	ldr	lr, [fp, #8]
   3617c:	mov	r8, lr
   36180:	ldr	lr, [fp, #16]
   36184:	ldr	r3, [r8]
   36188:	ldr	r4, [lr]
   3618c:	mls	r3, r4, r0, r3
   36190:	ldr	r4, [fp, #12]
   36194:	ldr	r4, [r4]
   36198:	sub	r3, r3, r4
   3619c:	add	r8, r2, r3, lsl #3
   361a0:	add	r1, r3, r1
   361a4:	ldr	r2, [fp, #24]
   361a8:	cmp	r2, #2
   361ac:	blt	36264 <GetDataSlab+0x13e28>
   361b0:	mov	r3, #0
   361b4:	mov	r7, r3
   361b8:	ldr	r2, [r5, r3, lsl #2]
   361bc:	add	r2, r2, #1
   361c0:	str	r2, [r5, r3, lsl #2]
   361c4:	ldr	r3, [r6, r3, lsl #2]
   361c8:	sdiv	r4, r2, r3
   361cc:	mls	r2, r4, r3, r2
   361d0:	cmp	r2, #0
   361d4:	bne	36254 <GetDataSlab+0x13e18>
   361d8:	mov	r2, #0
   361dc:	str	r2, [r5, r7, lsl #2]
   361e0:	add	lr, sp, #64	; 0x40
   361e4:	add	r2, lr, r7, lsl #2
   361e8:	ldr	r3, [r2, #4]
   361ec:	sdiv	r2, r1, r3
   361f0:	mls	r4, r2, r3, r1
   361f4:	cmp	r4, #0
   361f8:	beq	36218 <GetDataSlab+0x13ddc>
   361fc:	ldr	r2, [lr, r7, lsl #2]
   36200:	ldr	ip, [r9, r7, lsl #2]
   36204:	sub	r3, r3, r4
   36208:	mla	r2, ip, r2, r3
   3620c:	ldr	ip, [sp, #60]	; 0x3c
   36210:	add	r1, r2, r1
   36214:	b	36234 <GetDataSlab+0x13df8>
   36218:	ldr	r3, [r9, r7, lsl #2]
   3621c:	cmp	r3, #0
   36220:	beq	36238 <GetDataSlab+0x13dfc>
   36224:	add	r2, sp, #64	; 0x40
   36228:	ldr	r2, [r2, r7, lsl #2]
   3622c:	mla	r1, r2, r3, r1
   36230:	mul	r2, r2, r3
   36234:	add	r8, r8, r2, lsl #3
   36238:	ldr	lr, [fp, #16]
   3623c:	add	r3, r7, #1
   36240:	add	r2, r7, #2
   36244:	ldr	r4, [fp, #24]
   36248:	cmp	r2, r4
   3624c:	blt	361b4 <GetDataSlab+0x13d78>
   36250:	b	36264 <GetDataSlab+0x13e28>
   36254:	ldr	r2, [sp, #40]	; 0x28
   36258:	ldr	r2, [r2, r7, lsl #2]
   3625c:	add	r8, r8, r2, lsl #3
   36260:	add	r1, r2, r1
   36264:	add	sl, r0, sl
   36268:	ldr	r0, [sp, #44]	; 0x2c
   3626c:	cmp	sl, r0
   36270:	ldr	r4, [fp, #20]
   36274:	blt	36120 <GetDataSlab+0x13ce4>
   36278:	mov	r0, #0
   3627c:	ldr	r1, [sp, #52]	; 0x34
   36280:	cmp	r1, #13
   36284:	bne	22560 <GetDataSlab+0x124>
   36288:	ldr	lr, [lr]
   3628c:	sub	r1, lr, #1
   36290:	str	r1, [fp, #-72]	; 0xffffffb8
   36294:	ldr	r3, [fp, #8]
   36298:	ldr	r1, [r3]
   3629c:	str	r1, [sp, #64]	; 0x40
   362a0:	ldr	r0, [r4]
   362a4:	str	r0, [sp, #44]	; 0x2c
   362a8:	mov	r2, #0
   362ac:	ldr	r0, [fp, #24]
   362b0:	cmp	r0, #2
   362b4:	blt	38d30 <GetDataSlab+0x168f4>
   362b8:	mov	r1, #1
   362bc:	mov	r2, #0
   362c0:	mov	r0, r3
   362c4:	ldr	r9, [fp, #12]
   362c8:	add	ip, sp, #64	; 0x40
   362cc:	sub	r5, fp, #72	; 0x48
   362d0:	ldr	sl, [sp, #48]	; 0x30
   362d4:	ldr	r3, [fp, #16]
   362d8:	ldr	r7, [r3, r1, lsl #2]
   362dc:	sub	r7, r7, #1
   362e0:	str	r7, [r5, r1, lsl #2]
   362e4:	sub	r8, r1, #1
   362e8:	ldr	r3, [fp, #8]
   362ec:	ldr	r5, [r3, r8, lsl #2]
   362f0:	str	r5, [ip, r1, lsl #2]
   362f4:	mov	r4, #0
   362f8:	mov	r3, r0
   362fc:	ldr	r6, [r3, -r4, lsl #2]!
   36300:	mul	r7, r7, r6
   36304:	ldr	r3, [r3, #4]
   36308:	mul	r5, r3, r5
   3630c:	add	r4, r4, #1
   36310:	cmp	r1, r4
   36314:	bne	362f8 <GetDataSlab+0x13ebc>
   36318:	str	r5, [ip, r1, lsl #2]
   3631c:	sub	r5, fp, #72	; 0x48
   36320:	str	r7, [r5, r1, lsl #2]
   36324:	ldr	r3, [ip, r8, lsl #2]
   36328:	ldr	r4, [r9, r1, lsl #2]
   3632c:	mla	r2, r4, r3, r2
   36330:	ldr	r4, [fp, #20]
   36334:	ldr	r3, [r4, r1, lsl #2]
   36338:	ldr	r6, [sp, #44]	; 0x2c
   3633c:	mul	r6, r3, r6
   36340:	str	r6, [sp, #44]	; 0x2c
   36344:	add	r0, r0, #4
   36348:	add	r1, r1, #1
   3634c:	ldr	r3, [fp, #24]
   36350:	cmp	r1, r3
   36354:	bne	362d4 <GetDataSlab+0x13e98>
   36358:	b	38d38 <GetDataSlab+0x168fc>
   3635c:	ldr	r0, [sp, #44]	; 0x2c
   36360:	cmp	r0, #1
   36364:	blt	3ae3c <GetDataSlab+0x18a00>
   36368:	add	r0, r9, #4
   3636c:	str	r0, [sp, #52]	; 0x34
   36370:	add	r9, r4, #4
   36374:	add	r0, sp, #104	; 0x68
   36378:	orr	r8, r0, #4
   3637c:	sub	r0, fp, #72	; 0x48
   36380:	orr	r0, r0, #4
   36384:	str	r0, [sp, #48]	; 0x30
   36388:	mov	sl, #0
   3638c:	ldr	r1, [fp, #16]
   36390:	ldr	r0, [fp, #12]
   36394:	ldr	r0, [r0]
   36398:	add	r2, r0, r2
   3639c:	add	r3, ip, r0
   363a0:	ldr	r0, [r4]
   363a4:	cmp	r0, #1
   363a8:	blt	363dc <GetDataSlab+0x13fa0>
   363ac:	ldr	r0, [sp, #60]	; 0x3c
   363b0:	add	r7, r0, sl, lsl #2
   363b4:	mov	r5, #0
   363b8:	ldrb	r0, [r3]
   363bc:	str	r0, [r7, r5, lsl #2]
   363c0:	ldr	r0, [r1]
   363c4:	add	r2, r0, r2
   363c8:	add	r3, r3, r0
   363cc:	add	r5, r5, #1
   363d0:	ldr	r0, [r4]
   363d4:	cmp	r5, r0
   363d8:	blt	363b8 <GetDataSlab+0x13f7c>
   363dc:	ldr	r7, [fp, #8]
   363e0:	ldr	r7, [r7]
   363e4:	ldr	r6, [r1]
   363e8:	mls	r7, r6, r0, r7
   363ec:	ldr	r6, [fp, #12]
   363f0:	ldr	r6, [r6]
   363f4:	sub	r5, r7, r6
   363f8:	add	ip, r3, r5
   363fc:	add	r2, r5, r2
   36400:	ldr	r3, [fp, #24]
   36404:	cmp	r3, #2
   36408:	blt	364c4 <GetDataSlab+0x14088>
   3640c:	mov	r5, #0
   36410:	mov	r7, r5
   36414:	ldr	r3, [r8, r5, lsl #2]
   36418:	add	r3, r3, #1
   3641c:	str	r3, [r8, r5, lsl #2]
   36420:	ldr	r5, [r9, r5, lsl #2]
   36424:	sdiv	r6, r3, r5
   36428:	mls	r3, r6, r5, r3
   3642c:	cmp	r3, #0
   36430:	bne	364b4 <GetDataSlab+0x14078>
   36434:	mov	r3, #0
   36438:	str	r3, [r8, r7, lsl #2]
   3643c:	add	r4, sp, #64	; 0x40
   36440:	add	r3, r4, r7, lsl #2
   36444:	ldr	r5, [r3, #4]
   36448:	sdiv	r3, r2, r5
   3644c:	mls	r6, r3, r5, r2
   36450:	cmp	r6, #0
   36454:	beq	3647c <GetDataSlab+0x14040>
   36458:	ldr	r3, [r4, r7, lsl #2]
   3645c:	ldr	r1, [sp, #52]	; 0x34
   36460:	ldr	lr, [r1, r7, lsl #2]
   36464:	sub	r5, r5, r6
   36468:	mla	r3, lr, r3, r5
   3646c:	ldr	r1, [fp, #16]
   36470:	add	r2, r3, r2
   36474:	add	ip, ip, r3
   36478:	b	36498 <GetDataSlab+0x1405c>
   3647c:	ldr	r3, [sp, #52]	; 0x34
   36480:	ldr	r5, [r3, r7, lsl #2]
   36484:	cmp	r5, #0
   36488:	addne	r3, sp, #64	; 0x40
   3648c:	ldrne	r3, [r3, r7, lsl #2]
   36490:	mlane	r2, r3, r5, r2
   36494:	mlane	ip, r3, r5, ip
   36498:	ldr	r4, [fp, #20]
   3649c:	add	r5, r7, #1
   364a0:	add	r3, r7, #2
   364a4:	ldr	r7, [fp, #24]
   364a8:	cmp	r3, r7
   364ac:	blt	36410 <GetDataSlab+0x13fd4>
   364b0:	b	364c4 <GetDataSlab+0x14088>
   364b4:	ldr	r3, [sp, #48]	; 0x30
   364b8:	ldr	r3, [r3, r7, lsl #2]
   364bc:	add	ip, ip, r3
   364c0:	add	r2, r3, r2
   364c4:	add	sl, r0, sl
   364c8:	mov	r0, #0
   364cc:	ldr	r3, [sp, #44]	; 0x2c
   364d0:	cmp	sl, r3
   364d4:	blt	36390 <GetDataSlab+0x13f54>
   364d8:	b	22560 <GetDataSlab+0x124>
   364dc:	ldr	r0, [sp, #44]	; 0x2c
   364e0:	cmp	r0, #1
   364e4:	blt	3ae3c <GetDataSlab+0x18a00>
   364e8:	add	r0, r9, #4
   364ec:	str	r0, [sp, #52]	; 0x34
   364f0:	add	r9, r4, #4
   364f4:	add	r0, sp, #104	; 0x68
   364f8:	orr	r8, r0, #4
   364fc:	sub	r0, fp, #72	; 0x48
   36500:	orr	r0, r0, #4
   36504:	str	r0, [sp, #48]	; 0x30
   36508:	mov	sl, #0
   3650c:	ldr	r1, [fp, #16]
   36510:	ldr	r0, [fp, #12]
   36514:	ldr	r0, [r0]
   36518:	add	r2, r0, r2
   3651c:	add	r3, ip, r0, lsl #1
   36520:	ldr	r0, [r4]
   36524:	cmp	r0, #1
   36528:	blt	3655c <GetDataSlab+0x14120>
   3652c:	ldr	r0, [sp, #60]	; 0x3c
   36530:	add	r7, r0, sl, lsl #2
   36534:	mov	r5, #0
   36538:	ldrsh	r0, [r3]
   3653c:	str	r0, [r7, r5, lsl #2]
   36540:	ldr	r0, [r1]
   36544:	add	r2, r0, r2
   36548:	add	r3, r3, r0, lsl #1
   3654c:	add	r5, r5, #1
   36550:	ldr	r0, [r4]
   36554:	cmp	r5, r0
   36558:	blt	36538 <GetDataSlab+0x140fc>
   3655c:	ldr	r7, [fp, #8]
   36560:	ldr	r7, [r7]
   36564:	ldr	r6, [r1]
   36568:	mls	r7, r6, r0, r7
   3656c:	ldr	r6, [fp, #12]
   36570:	ldr	r6, [r6]
   36574:	sub	r5, r7, r6
   36578:	add	ip, r3, r5, lsl #1
   3657c:	add	r2, r5, r2
   36580:	ldr	r3, [fp, #24]
   36584:	cmp	r3, #2
   36588:	blt	36648 <GetDataSlab+0x1420c>
   3658c:	mov	r5, #0
   36590:	mov	r7, r5
   36594:	ldr	r3, [r8, r5, lsl #2]
   36598:	add	r3, r3, #1
   3659c:	str	r3, [r8, r5, lsl #2]
   365a0:	ldr	r5, [r9, r5, lsl #2]
   365a4:	sdiv	r6, r3, r5
   365a8:	mls	r3, r6, r5, r3
   365ac:	cmp	r3, #0
   365b0:	bne	36638 <GetDataSlab+0x141fc>
   365b4:	mov	r3, #0
   365b8:	str	r3, [r8, r7, lsl #2]
   365bc:	add	r4, sp, #64	; 0x40
   365c0:	add	r3, r4, r7, lsl #2
   365c4:	ldr	r5, [r3, #4]
   365c8:	sdiv	r3, r2, r5
   365cc:	mls	r6, r3, r5, r2
   365d0:	cmp	r6, #0
   365d4:	beq	365f8 <GetDataSlab+0x141bc>
   365d8:	ldr	r3, [r4, r7, lsl #2]
   365dc:	ldr	r1, [sp, #52]	; 0x34
   365e0:	ldr	lr, [r1, r7, lsl #2]
   365e4:	sub	r5, r5, r6
   365e8:	mla	r3, lr, r3, r5
   365ec:	ldr	r1, [fp, #16]
   365f0:	add	r2, r3, r2
   365f4:	b	36618 <GetDataSlab+0x141dc>
   365f8:	ldr	r3, [sp, #52]	; 0x34
   365fc:	ldr	r5, [r3, r7, lsl #2]
   36600:	cmp	r5, #0
   36604:	beq	3661c <GetDataSlab+0x141e0>
   36608:	add	r3, sp, #64	; 0x40
   3660c:	ldr	r3, [r3, r7, lsl #2]
   36610:	mla	r2, r3, r5, r2
   36614:	mul	r3, r3, r5
   36618:	add	ip, ip, r3, lsl #1
   3661c:	ldr	r4, [fp, #20]
   36620:	add	r5, r7, #1
   36624:	add	r3, r7, #2
   36628:	ldr	r7, [fp, #24]
   3662c:	cmp	r3, r7
   36630:	blt	36590 <GetDataSlab+0x14154>
   36634:	b	36648 <GetDataSlab+0x1420c>
   36638:	ldr	r3, [sp, #48]	; 0x30
   3663c:	ldr	r3, [r3, r7, lsl #2]
   36640:	add	ip, ip, r3, lsl #1
   36644:	add	r2, r3, r2
   36648:	add	sl, r0, sl
   3664c:	mov	r0, #0
   36650:	ldr	r3, [sp, #44]	; 0x2c
   36654:	cmp	sl, r3
   36658:	blt	36510 <GetDataSlab+0x140d4>
   3665c:	b	22560 <GetDataSlab+0x124>
   36660:	ldr	r0, [sp, #44]	; 0x2c
   36664:	cmp	r0, #1
   36668:	blt	3ae3c <GetDataSlab+0x18a00>
   3666c:	add	r0, r9, #4
   36670:	str	r0, [sp, #52]	; 0x34
   36674:	add	r9, r4, #4
   36678:	add	r0, sp, #104	; 0x68
   3667c:	orr	r8, r0, #4
   36680:	sub	r0, fp, #72	; 0x48
   36684:	orr	r0, r0, #4
   36688:	str	r0, [sp, #48]	; 0x30
   3668c:	mov	sl, #0
   36690:	ldr	r1, [fp, #16]
   36694:	ldr	r0, [fp, #12]
   36698:	ldr	r0, [r0]
   3669c:	add	r2, r0, r2
   366a0:	add	r3, ip, r0, lsl #1
   366a4:	ldr	r0, [r4]
   366a8:	cmp	r0, #1
   366ac:	blt	366e0 <GetDataSlab+0x142a4>
   366b0:	ldr	r0, [sp, #60]	; 0x3c
   366b4:	add	r7, r0, sl, lsl #2
   366b8:	mov	r5, #0
   366bc:	ldrh	r0, [r3]
   366c0:	str	r0, [r7, r5, lsl #2]
   366c4:	ldr	r0, [r1]
   366c8:	add	r2, r0, r2
   366cc:	add	r3, r3, r0, lsl #1
   366d0:	add	r5, r5, #1
   366d4:	ldr	r0, [r4]
   366d8:	cmp	r5, r0
   366dc:	blt	366bc <GetDataSlab+0x14280>
   366e0:	ldr	r7, [fp, #8]
   366e4:	ldr	r7, [r7]
   366e8:	ldr	r6, [r1]
   366ec:	mls	r7, r6, r0, r7
   366f0:	ldr	r6, [fp, #12]
   366f4:	ldr	r6, [r6]
   366f8:	sub	r5, r7, r6
   366fc:	add	ip, r3, r5, lsl #1
   36700:	add	r2, r5, r2
   36704:	ldr	r3, [fp, #24]
   36708:	cmp	r3, #2
   3670c:	blt	367cc <GetDataSlab+0x14390>
   36710:	mov	r5, #0
   36714:	mov	r7, r5
   36718:	ldr	r3, [r8, r5, lsl #2]
   3671c:	add	r3, r3, #1
   36720:	str	r3, [r8, r5, lsl #2]
   36724:	ldr	r5, [r9, r5, lsl #2]
   36728:	sdiv	r6, r3, r5
   3672c:	mls	r3, r6, r5, r3
   36730:	cmp	r3, #0
   36734:	bne	367bc <GetDataSlab+0x14380>
   36738:	mov	r3, #0
   3673c:	str	r3, [r8, r7, lsl #2]
   36740:	add	r4, sp, #64	; 0x40
   36744:	add	r3, r4, r7, lsl #2
   36748:	ldr	r5, [r3, #4]
   3674c:	sdiv	r3, r2, r5
   36750:	mls	r6, r3, r5, r2
   36754:	cmp	r6, #0
   36758:	beq	3677c <GetDataSlab+0x14340>
   3675c:	ldr	r3, [r4, r7, lsl #2]
   36760:	ldr	r1, [sp, #52]	; 0x34
   36764:	ldr	lr, [r1, r7, lsl #2]
   36768:	sub	r5, r5, r6
   3676c:	mla	r3, lr, r3, r5
   36770:	ldr	r1, [fp, #16]
   36774:	add	r2, r3, r2
   36778:	b	3679c <GetDataSlab+0x14360>
   3677c:	ldr	r3, [sp, #52]	; 0x34
   36780:	ldr	r5, [r3, r7, lsl #2]
   36784:	cmp	r5, #0
   36788:	beq	367a0 <GetDataSlab+0x14364>
   3678c:	add	r3, sp, #64	; 0x40
   36790:	ldr	r3, [r3, r7, lsl #2]
   36794:	mla	r2, r3, r5, r2
   36798:	mul	r3, r3, r5
   3679c:	add	ip, ip, r3, lsl #1
   367a0:	ldr	r4, [fp, #20]
   367a4:	add	r5, r7, #1
   367a8:	add	r3, r7, #2
   367ac:	ldr	r7, [fp, #24]
   367b0:	cmp	r3, r7
   367b4:	blt	36714 <GetDataSlab+0x142d8>
   367b8:	b	367cc <GetDataSlab+0x14390>
   367bc:	ldr	r3, [sp, #48]	; 0x30
   367c0:	ldr	r3, [r3, r7, lsl #2]
   367c4:	add	ip, ip, r3, lsl #1
   367c8:	add	r2, r3, r2
   367cc:	add	sl, r0, sl
   367d0:	mov	r0, #0
   367d4:	ldr	r3, [sp, #44]	; 0x2c
   367d8:	cmp	sl, r3
   367dc:	blt	36694 <GetDataSlab+0x14258>
   367e0:	b	22560 <GetDataSlab+0x124>
   367e4:	ldr	r0, [sp, #44]	; 0x2c
   367e8:	cmp	r0, #1
   367ec:	blt	3ae3c <GetDataSlab+0x18a00>
   367f0:	add	r0, r9, #4
   367f4:	str	r0, [sp, #52]	; 0x34
   367f8:	add	r9, r4, #4
   367fc:	add	r0, sp, #104	; 0x68
   36800:	orr	r8, r0, #4
   36804:	sub	r0, fp, #72	; 0x48
   36808:	orr	r0, r0, #4
   3680c:	str	r0, [sp, #48]	; 0x30
   36810:	mov	sl, #0
   36814:	ldr	r1, [fp, #16]
   36818:	ldr	r0, [fp, #12]
   3681c:	ldr	r0, [r0]
   36820:	add	r2, r0, r2
   36824:	add	r3, ip, r0, lsl #2
   36828:	ldr	r0, [r4]
   3682c:	cmp	r0, #1
   36830:	blt	36864 <GetDataSlab+0x14428>
   36834:	ldr	r0, [sp, #60]	; 0x3c
   36838:	add	r7, r0, sl, lsl #2
   3683c:	mov	r5, #0
   36840:	ldr	r0, [r3]
   36844:	str	r0, [r7, r5, lsl #2]
   36848:	ldr	r0, [r1]
   3684c:	add	r2, r0, r2
   36850:	add	r3, r3, r0, lsl #2
   36854:	add	r5, r5, #1
   36858:	ldr	r0, [r4]
   3685c:	cmp	r5, r0
   36860:	blt	36840 <GetDataSlab+0x14404>
   36864:	ldr	r7, [fp, #8]
   36868:	ldr	r7, [r7]
   3686c:	ldr	r6, [r1]
   36870:	mls	r7, r6, r0, r7
   36874:	ldr	r6, [fp, #12]
   36878:	ldr	r6, [r6]
   3687c:	sub	r5, r7, r6
   36880:	add	ip, r3, r5, lsl #2
   36884:	add	r2, r5, r2
   36888:	ldr	r3, [fp, #24]
   3688c:	cmp	r3, #2
   36890:	blt	36950 <GetDataSlab+0x14514>
   36894:	mov	r5, #0
   36898:	mov	r7, r5
   3689c:	ldr	r3, [r8, r5, lsl #2]
   368a0:	add	r3, r3, #1
   368a4:	str	r3, [r8, r5, lsl #2]
   368a8:	ldr	r5, [r9, r5, lsl #2]
   368ac:	sdiv	r6, r3, r5
   368b0:	mls	r3, r6, r5, r3
   368b4:	cmp	r3, #0
   368b8:	bne	36940 <GetDataSlab+0x14504>
   368bc:	mov	r3, #0
   368c0:	str	r3, [r8, r7, lsl #2]
   368c4:	add	r4, sp, #64	; 0x40
   368c8:	add	r3, r4, r7, lsl #2
   368cc:	ldr	r5, [r3, #4]
   368d0:	sdiv	r3, r2, r5
   368d4:	mls	r6, r3, r5, r2
   368d8:	cmp	r6, #0
   368dc:	beq	36900 <GetDataSlab+0x144c4>
   368e0:	ldr	r3, [r4, r7, lsl #2]
   368e4:	ldr	r1, [sp, #52]	; 0x34
   368e8:	ldr	lr, [r1, r7, lsl #2]
   368ec:	sub	r5, r5, r6
   368f0:	mla	r3, lr, r3, r5
   368f4:	ldr	r1, [fp, #16]
   368f8:	add	r2, r3, r2
   368fc:	b	36920 <GetDataSlab+0x144e4>
   36900:	ldr	r3, [sp, #52]	; 0x34
   36904:	ldr	r5, [r3, r7, lsl #2]
   36908:	cmp	r5, #0
   3690c:	beq	36924 <GetDataSlab+0x144e8>
   36910:	add	r3, sp, #64	; 0x40
   36914:	ldr	r3, [r3, r7, lsl #2]
   36918:	mla	r2, r3, r5, r2
   3691c:	mul	r3, r3, r5
   36920:	add	ip, ip, r3, lsl #2
   36924:	ldr	r4, [fp, #20]
   36928:	add	r5, r7, #1
   3692c:	add	r3, r7, #2
   36930:	ldr	r7, [fp, #24]
   36934:	cmp	r3, r7
   36938:	blt	36898 <GetDataSlab+0x1445c>
   3693c:	b	36950 <GetDataSlab+0x14514>
   36940:	ldr	r3, [sp, #48]	; 0x30
   36944:	ldr	r3, [r3, r7, lsl #2]
   36948:	add	ip, ip, r3, lsl #2
   3694c:	add	r2, r3, r2
   36950:	add	sl, r0, sl
   36954:	mov	r0, #0
   36958:	ldr	r3, [sp, #44]	; 0x2c
   3695c:	cmp	sl, r3
   36960:	blt	36818 <GetDataSlab+0x143dc>
   36964:	b	22560 <GetDataSlab+0x124>
   36968:	ldr	r0, [sp, #44]	; 0x2c
   3696c:	cmp	r0, #1
   36970:	blt	3ae3c <GetDataSlab+0x18a00>
   36974:	add	r0, r9, #4
   36978:	str	r0, [sp, #52]	; 0x34
   3697c:	add	r9, r4, #4
   36980:	add	r0, sp, #104	; 0x68
   36984:	orr	r8, r0, #4
   36988:	sub	r0, fp, #72	; 0x48
   3698c:	orr	r0, r0, #4
   36990:	str	r0, [sp, #48]	; 0x30
   36994:	mov	sl, #0
   36998:	ldr	r1, [fp, #16]
   3699c:	ldr	r0, [fp, #12]
   369a0:	ldr	r0, [r0]
   369a4:	add	r2, r0, r2
   369a8:	add	r3, ip, r0, lsl #2
   369ac:	ldr	r0, [r4]
   369b0:	cmp	r0, #1
   369b4:	blt	369e8 <GetDataSlab+0x145ac>
   369b8:	ldr	r0, [sp, #60]	; 0x3c
   369bc:	add	r7, r0, sl, lsl #2
   369c0:	mov	r5, #0
   369c4:	ldr	r0, [r3]
   369c8:	str	r0, [r7, r5, lsl #2]
   369cc:	ldr	r0, [r1]
   369d0:	add	r2, r0, r2
   369d4:	add	r3, r3, r0, lsl #2
   369d8:	add	r5, r5, #1
   369dc:	ldr	r0, [r4]
   369e0:	cmp	r5, r0
   369e4:	blt	369c4 <GetDataSlab+0x14588>
   369e8:	ldr	r7, [fp, #8]
   369ec:	ldr	r7, [r7]
   369f0:	ldr	r6, [r1]
   369f4:	mls	r7, r6, r0, r7
   369f8:	ldr	r6, [fp, #12]
   369fc:	ldr	r6, [r6]
   36a00:	sub	r5, r7, r6
   36a04:	add	ip, r3, r5, lsl #2
   36a08:	add	r2, r5, r2
   36a0c:	ldr	r3, [fp, #24]
   36a10:	cmp	r3, #2
   36a14:	blt	36ad4 <GetDataSlab+0x14698>
   36a18:	mov	r5, #0
   36a1c:	mov	r7, r5
   36a20:	ldr	r3, [r8, r5, lsl #2]
   36a24:	add	r3, r3, #1
   36a28:	str	r3, [r8, r5, lsl #2]
   36a2c:	ldr	r5, [r9, r5, lsl #2]
   36a30:	sdiv	r6, r3, r5
   36a34:	mls	r3, r6, r5, r3
   36a38:	cmp	r3, #0
   36a3c:	bne	36ac4 <GetDataSlab+0x14688>
   36a40:	mov	r3, #0
   36a44:	str	r3, [r8, r7, lsl #2]
   36a48:	add	r4, sp, #64	; 0x40
   36a4c:	add	r3, r4, r7, lsl #2
   36a50:	ldr	r5, [r3, #4]
   36a54:	sdiv	r3, r2, r5
   36a58:	mls	r6, r3, r5, r2
   36a5c:	cmp	r6, #0
   36a60:	beq	36a84 <GetDataSlab+0x14648>
   36a64:	ldr	r3, [r4, r7, lsl #2]
   36a68:	ldr	r1, [sp, #52]	; 0x34
   36a6c:	ldr	lr, [r1, r7, lsl #2]
   36a70:	sub	r5, r5, r6
   36a74:	mla	r3, lr, r3, r5
   36a78:	ldr	r1, [fp, #16]
   36a7c:	add	r2, r3, r2
   36a80:	b	36aa4 <GetDataSlab+0x14668>
   36a84:	ldr	r3, [sp, #52]	; 0x34
   36a88:	ldr	r5, [r3, r7, lsl #2]
   36a8c:	cmp	r5, #0
   36a90:	beq	36aa8 <GetDataSlab+0x1466c>
   36a94:	add	r3, sp, #64	; 0x40
   36a98:	ldr	r3, [r3, r7, lsl #2]
   36a9c:	mla	r2, r3, r5, r2
   36aa0:	mul	r3, r3, r5
   36aa4:	add	ip, ip, r3, lsl #2
   36aa8:	ldr	r4, [fp, #20]
   36aac:	add	r5, r7, #1
   36ab0:	add	r3, r7, #2
   36ab4:	ldr	r7, [fp, #24]
   36ab8:	cmp	r3, r7
   36abc:	blt	36a1c <GetDataSlab+0x145e0>
   36ac0:	b	36ad4 <GetDataSlab+0x14698>
   36ac4:	ldr	r3, [sp, #48]	; 0x30
   36ac8:	ldr	r3, [r3, r7, lsl #2]
   36acc:	add	ip, ip, r3, lsl #2
   36ad0:	add	r2, r3, r2
   36ad4:	add	sl, r0, sl
   36ad8:	mov	r0, #0
   36adc:	ldr	r3, [sp, #44]	; 0x2c
   36ae0:	cmp	sl, r3
   36ae4:	blt	3699c <GetDataSlab+0x14560>
   36ae8:	b	22560 <GetDataSlab+0x124>
   36aec:	ldr	r0, [sp, #44]	; 0x2c
   36af0:	cmp	r0, #1
   36af4:	blt	3ae3c <GetDataSlab+0x18a00>
   36af8:	ldr	r0, [fp, #12]
   36afc:	add	r0, r0, #4
   36b00:	str	r0, [sp, #52]	; 0x34
   36b04:	mov	r0, ip
   36b08:	add	ip, r4, #4
   36b0c:	add	r1, sp, #104	; 0x68
   36b10:	orr	r8, r1, #4
   36b14:	orr	r0, r0, #4
   36b18:	str	r0, [sp, #48]	; 0x30
   36b1c:	mov	sl, #0
   36b20:	ldr	r1, [fp, #16]
   36b24:	ldr	r0, [fp, #12]
   36b28:	ldr	r0, [r0]
   36b2c:	add	r2, r0, r2
   36b30:	add	r3, r9, r0, lsl #2
   36b34:	ldr	r0, [r4]
   36b38:	cmp	r0, #1
   36b3c:	blt	36b78 <GetDataSlab+0x1473c>
   36b40:	ldr	r0, [sp, #60]	; 0x3c
   36b44:	add	r7, r0, sl, lsl #2
   36b48:	mov	r5, #0
   36b4c:	vldr	s0, [r3]
   36b50:	vcvt.u32.f32	s0, s0
   36b54:	vmov	r0, s0
   36b58:	str	r0, [r7, r5, lsl #2]
   36b5c:	ldr	r0, [r1]
   36b60:	add	r2, r0, r2
   36b64:	add	r3, r3, r0, lsl #2
   36b68:	add	r5, r5, #1
   36b6c:	ldr	r0, [r4]
   36b70:	cmp	r5, r0
   36b74:	blt	36b4c <GetDataSlab+0x14710>
   36b78:	ldr	r7, [fp, #8]
   36b7c:	ldr	r5, [r7]
   36b80:	ldr	r6, [r1]
   36b84:	mls	r5, r6, r0, r5
   36b88:	ldr	r7, [fp, #12]
   36b8c:	ldr	r6, [r7]
   36b90:	sub	r5, r5, r6
   36b94:	add	r9, r3, r5, lsl #2
   36b98:	add	r2, r5, r2
   36b9c:	ldr	r3, [fp, #24]
   36ba0:	cmp	r3, #2
   36ba4:	blt	36c64 <GetDataSlab+0x14828>
   36ba8:	mov	r5, #0
   36bac:	mov	r7, r5
   36bb0:	ldr	r3, [r8, r5, lsl #2]
   36bb4:	add	r3, r3, #1
   36bb8:	str	r3, [r8, r5, lsl #2]
   36bbc:	ldr	r5, [ip, r5, lsl #2]
   36bc0:	sdiv	r6, r3, r5
   36bc4:	mls	r3, r6, r5, r3
   36bc8:	cmp	r3, #0
   36bcc:	bne	36c54 <GetDataSlab+0x14818>
   36bd0:	mov	r3, #0
   36bd4:	str	r3, [r8, r7, lsl #2]
   36bd8:	add	r4, sp, #64	; 0x40
   36bdc:	add	r3, r4, r7, lsl #2
   36be0:	ldr	r5, [r3, #4]
   36be4:	sdiv	r3, r2, r5
   36be8:	mls	r6, r3, r5, r2
   36bec:	cmp	r6, #0
   36bf0:	beq	36c14 <GetDataSlab+0x147d8>
   36bf4:	ldr	r3, [r4, r7, lsl #2]
   36bf8:	ldr	r1, [sp, #52]	; 0x34
   36bfc:	ldr	lr, [r1, r7, lsl #2]
   36c00:	sub	r5, r5, r6
   36c04:	mla	r3, lr, r3, r5
   36c08:	ldr	r1, [fp, #16]
   36c0c:	add	r2, r3, r2
   36c10:	b	36c34 <GetDataSlab+0x147f8>
   36c14:	ldr	r3, [sp, #52]	; 0x34
   36c18:	ldr	r5, [r3, r7, lsl #2]
   36c1c:	cmp	r5, #0
   36c20:	beq	36c38 <GetDataSlab+0x147fc>
   36c24:	add	r3, sp, #64	; 0x40
   36c28:	ldr	r3, [r3, r7, lsl #2]
   36c2c:	mla	r2, r3, r5, r2
   36c30:	mul	r3, r3, r5
   36c34:	add	r9, r9, r3, lsl #2
   36c38:	ldr	r4, [fp, #20]
   36c3c:	add	r5, r7, #1
   36c40:	add	r3, r7, #2
   36c44:	ldr	r7, [fp, #24]
   36c48:	cmp	r3, r7
   36c4c:	blt	36bac <GetDataSlab+0x14770>
   36c50:	b	36c64 <GetDataSlab+0x14828>
   36c54:	ldr	r3, [sp, #48]	; 0x30
   36c58:	ldr	r3, [r3, r7, lsl #2]
   36c5c:	add	r9, r9, r3, lsl #2
   36c60:	add	r2, r3, r2
   36c64:	add	sl, r0, sl
   36c68:	mov	r0, #0
   36c6c:	ldr	r3, [sp, #44]	; 0x2c
   36c70:	cmp	sl, r3
   36c74:	blt	36b24 <GetDataSlab+0x146e8>
   36c78:	b	22560 <GetDataSlab+0x124>
   36c7c:	ldr	r0, [sp, #44]	; 0x2c
   36c80:	cmp	r0, #1
   36c84:	blt	3ae3c <GetDataSlab+0x18a00>
   36c88:	ldr	r0, [fp, #12]
   36c8c:	add	r0, r0, #4
   36c90:	str	r0, [sp, #52]	; 0x34
   36c94:	mov	r0, ip
   36c98:	add	ip, r4, #4
   36c9c:	add	r1, sp, #104	; 0x68
   36ca0:	orr	r8, r1, #4
   36ca4:	orr	r0, r0, #4
   36ca8:	str	r0, [sp, #48]	; 0x30
   36cac:	mov	sl, #0
   36cb0:	ldr	r1, [fp, #16]
   36cb4:	ldr	r0, [fp, #12]
   36cb8:	ldr	r0, [r0]
   36cbc:	add	r2, r0, r2
   36cc0:	add	r3, r9, r0, lsl #3
   36cc4:	ldr	r0, [r4]
   36cc8:	cmp	r0, #1
   36ccc:	blt	36d08 <GetDataSlab+0x148cc>
   36cd0:	ldr	r0, [sp, #60]	; 0x3c
   36cd4:	add	r7, r0, sl, lsl #2
   36cd8:	mov	r5, #0
   36cdc:	vldr	d16, [r3]
   36ce0:	vcvt.u32.f64	s0, d16
   36ce4:	vmov	r0, s0
   36ce8:	str	r0, [r7, r5, lsl #2]
   36cec:	ldr	r0, [r1]
   36cf0:	add	r2, r0, r2
   36cf4:	add	r3, r3, r0, lsl #3
   36cf8:	add	r5, r5, #1
   36cfc:	ldr	r0, [r4]
   36d00:	cmp	r5, r0
   36d04:	blt	36cdc <GetDataSlab+0x148a0>
   36d08:	ldr	r7, [fp, #8]
   36d0c:	ldr	r5, [r7]
   36d10:	ldr	r6, [r1]
   36d14:	mls	r5, r6, r0, r5
   36d18:	ldr	r7, [fp, #12]
   36d1c:	ldr	r6, [r7]
   36d20:	sub	r5, r5, r6
   36d24:	add	r9, r3, r5, lsl #3
   36d28:	add	r2, r5, r2
   36d2c:	ldr	r3, [fp, #24]
   36d30:	cmp	r3, #2
   36d34:	blt	36df4 <GetDataSlab+0x149b8>
   36d38:	mov	r5, #0
   36d3c:	mov	r7, r5
   36d40:	ldr	r3, [r8, r5, lsl #2]
   36d44:	add	r3, r3, #1
   36d48:	str	r3, [r8, r5, lsl #2]
   36d4c:	ldr	r5, [ip, r5, lsl #2]
   36d50:	sdiv	r6, r3, r5
   36d54:	mls	r3, r6, r5, r3
   36d58:	cmp	r3, #0
   36d5c:	bne	36de4 <GetDataSlab+0x149a8>
   36d60:	mov	r3, #0
   36d64:	str	r3, [r8, r7, lsl #2]
   36d68:	add	r4, sp, #64	; 0x40
   36d6c:	add	r3, r4, r7, lsl #2
   36d70:	ldr	r5, [r3, #4]
   36d74:	sdiv	r3, r2, r5
   36d78:	mls	r6, r3, r5, r2
   36d7c:	cmp	r6, #0
   36d80:	beq	36da4 <GetDataSlab+0x14968>
   36d84:	ldr	r3, [r4, r7, lsl #2]
   36d88:	ldr	r1, [sp, #52]	; 0x34
   36d8c:	ldr	lr, [r1, r7, lsl #2]
   36d90:	sub	r5, r5, r6
   36d94:	mla	r3, lr, r3, r5
   36d98:	ldr	r1, [fp, #16]
   36d9c:	add	r2, r3, r2
   36da0:	b	36dc4 <GetDataSlab+0x14988>
   36da4:	ldr	r3, [sp, #52]	; 0x34
   36da8:	ldr	r5, [r3, r7, lsl #2]
   36dac:	cmp	r5, #0
   36db0:	beq	36dc8 <GetDataSlab+0x1498c>
   36db4:	add	r3, sp, #64	; 0x40
   36db8:	ldr	r3, [r3, r7, lsl #2]
   36dbc:	mla	r2, r3, r5, r2
   36dc0:	mul	r3, r3, r5
   36dc4:	add	r9, r9, r3, lsl #3
   36dc8:	ldr	r4, [fp, #20]
   36dcc:	add	r5, r7, #1
   36dd0:	add	r3, r7, #2
   36dd4:	ldr	r7, [fp, #24]
   36dd8:	cmp	r3, r7
   36ddc:	blt	36d3c <GetDataSlab+0x14900>
   36de0:	b	36df4 <GetDataSlab+0x149b8>
   36de4:	ldr	r3, [sp, #48]	; 0x30
   36de8:	ldr	r3, [r3, r7, lsl #2]
   36dec:	add	r9, r9, r3, lsl #3
   36df0:	add	r2, r3, r2
   36df4:	add	sl, r0, sl
   36df8:	mov	r0, #0
   36dfc:	ldr	r3, [sp, #44]	; 0x2c
   36e00:	cmp	sl, r3
   36e04:	blt	36cb4 <GetDataSlab+0x14878>
   36e08:	b	22560 <GetDataSlab+0x124>
   36e0c:	ldr	r0, [sp, #44]	; 0x2c
   36e10:	cmp	r0, #1
   36e14:	sub	r0, fp, #72	; 0x48
   36e18:	blt	36f94 <GetDataSlab+0x14b58>
   36e1c:	add	r9, r9, #4
   36e20:	add	r6, r4, #4
   36e24:	add	r2, sp, #104	; 0x68
   36e28:	orr	r5, r2, #4
   36e2c:	orr	r0, r0, #4
   36e30:	str	r0, [sp, #40]	; 0x28
   36e34:	mov	sl, #0
   36e38:	ldr	ip, [sp, #60]	; 0x3c
   36e3c:	ldr	r0, [fp, #12]
   36e40:	ldr	r0, [r0]
   36e44:	add	r1, r0, r1
   36e48:	add	r2, r8, r0, lsl #3
   36e4c:	ldr	r0, [r4]
   36e50:	cmp	r0, #1
   36e54:	blt	36e94 <GetDataSlab+0x14a58>
   36e58:	add	r7, ip, sl, lsl #2
   36e5c:	mov	r3, #0
   36e60:	ldr	lr, [fp, #8]
   36e64:	mov	r8, lr
   36e68:	ldr	lr, [fp, #16]
   36e6c:	ldr	r0, [r2]
   36e70:	str	r0, [r7, r3, lsl #2]
   36e74:	ldr	r0, [lr]
   36e78:	add	r1, r0, r1
   36e7c:	add	r2, r2, r0, lsl #3
   36e80:	add	r3, r3, #1
   36e84:	ldr	r0, [r4]
   36e88:	cmp	r3, r0
   36e8c:	blt	36e6c <GetDataSlab+0x14a30>
   36e90:	b	36ea0 <GetDataSlab+0x14a64>
   36e94:	ldr	lr, [fp, #8]
   36e98:	mov	r8, lr
   36e9c:	ldr	lr, [fp, #16]
   36ea0:	ldr	r3, [r8]
   36ea4:	ldr	r4, [lr]
   36ea8:	mls	r3, r4, r0, r3
   36eac:	ldr	r4, [fp, #12]
   36eb0:	ldr	r4, [r4]
   36eb4:	sub	r3, r3, r4
   36eb8:	add	r8, r2, r3, lsl #3
   36ebc:	add	r1, r3, r1
   36ec0:	ldr	r2, [fp, #24]
   36ec4:	cmp	r2, #2
   36ec8:	blt	36f80 <GetDataSlab+0x14b44>
   36ecc:	mov	r3, #0
   36ed0:	mov	r7, r3
   36ed4:	ldr	r2, [r5, r3, lsl #2]
   36ed8:	add	r2, r2, #1
   36edc:	str	r2, [r5, r3, lsl #2]
   36ee0:	ldr	r3, [r6, r3, lsl #2]
   36ee4:	sdiv	r4, r2, r3
   36ee8:	mls	r2, r4, r3, r2
   36eec:	cmp	r2, #0
   36ef0:	bne	36f70 <GetDataSlab+0x14b34>
   36ef4:	mov	r2, #0
   36ef8:	str	r2, [r5, r7, lsl #2]
   36efc:	add	lr, sp, #64	; 0x40
   36f00:	add	r2, lr, r7, lsl #2
   36f04:	ldr	r3, [r2, #4]
   36f08:	sdiv	r2, r1, r3
   36f0c:	mls	r4, r2, r3, r1
   36f10:	cmp	r4, #0
   36f14:	beq	36f34 <GetDataSlab+0x14af8>
   36f18:	ldr	r2, [lr, r7, lsl #2]
   36f1c:	ldr	ip, [r9, r7, lsl #2]
   36f20:	sub	r3, r3, r4
   36f24:	mla	r2, ip, r2, r3
   36f28:	ldr	ip, [sp, #60]	; 0x3c
   36f2c:	add	r1, r2, r1
   36f30:	b	36f50 <GetDataSlab+0x14b14>
   36f34:	ldr	r3, [r9, r7, lsl #2]
   36f38:	cmp	r3, #0
   36f3c:	beq	36f54 <GetDataSlab+0x14b18>
   36f40:	add	r2, sp, #64	; 0x40
   36f44:	ldr	r2, [r2, r7, lsl #2]
   36f48:	mla	r1, r2, r3, r1
   36f4c:	mul	r2, r2, r3
   36f50:	add	r8, r8, r2, lsl #3
   36f54:	ldr	lr, [fp, #16]
   36f58:	add	r3, r7, #1
   36f5c:	add	r2, r7, #2
   36f60:	ldr	r4, [fp, #24]
   36f64:	cmp	r2, r4
   36f68:	blt	36ed0 <GetDataSlab+0x14a94>
   36f6c:	b	36f80 <GetDataSlab+0x14b44>
   36f70:	ldr	r2, [sp, #40]	; 0x28
   36f74:	ldr	r2, [r2, r7, lsl #2]
   36f78:	add	r8, r8, r2, lsl #3
   36f7c:	add	r1, r2, r1
   36f80:	add	sl, r0, sl
   36f84:	ldr	r0, [sp, #44]	; 0x2c
   36f88:	cmp	sl, r0
   36f8c:	ldr	r4, [fp, #20]
   36f90:	blt	36e3c <GetDataSlab+0x14a00>
   36f94:	mov	r0, #0
   36f98:	ldr	r1, [sp, #52]	; 0x34
   36f9c:	cmp	r1, #13
   36fa0:	bne	22560 <GetDataSlab+0x124>
   36fa4:	ldr	lr, [lr]
   36fa8:	sub	r1, lr, #1
   36fac:	str	r1, [fp, #-72]	; 0xffffffb8
   36fb0:	ldr	r3, [fp, #8]
   36fb4:	ldr	r1, [r3]
   36fb8:	str	r1, [sp, #64]	; 0x40
   36fbc:	ldr	r0, [r4]
   36fc0:	str	r0, [sp, #44]	; 0x2c
   36fc4:	mov	r2, #0
   36fc8:	ldr	r0, [fp, #24]
   36fcc:	cmp	r0, #2
   36fd0:	blt	38ea4 <GetDataSlab+0x16a68>
   36fd4:	mov	r1, #1
   36fd8:	mov	r2, #0
   36fdc:	mov	r0, r3
   36fe0:	ldr	r9, [fp, #12]
   36fe4:	add	ip, sp, #64	; 0x40
   36fe8:	sub	r5, fp, #72	; 0x48
   36fec:	ldr	sl, [sp, #48]	; 0x30
   36ff0:	ldr	r3, [fp, #16]
   36ff4:	ldr	r7, [r3, r1, lsl #2]
   36ff8:	sub	r7, r7, #1
   36ffc:	str	r7, [r5, r1, lsl #2]
   37000:	sub	r8, r1, #1
   37004:	ldr	r3, [fp, #8]
   37008:	ldr	r5, [r3, r8, lsl #2]
   3700c:	str	r5, [ip, r1, lsl #2]
   37010:	mov	r4, #0
   37014:	mov	r3, r0
   37018:	ldr	r6, [r3, -r4, lsl #2]!
   3701c:	mul	r7, r7, r6
   37020:	ldr	r3, [r3, #4]
   37024:	mul	r5, r3, r5
   37028:	add	r4, r4, #1
   3702c:	cmp	r1, r4
   37030:	bne	37014 <GetDataSlab+0x14bd8>
   37034:	str	r5, [ip, r1, lsl #2]
   37038:	sub	r5, fp, #72	; 0x48
   3703c:	str	r7, [r5, r1, lsl #2]
   37040:	ldr	r3, [ip, r8, lsl #2]
   37044:	ldr	r4, [r9, r1, lsl #2]
   37048:	mla	r2, r4, r3, r2
   3704c:	ldr	r4, [fp, #20]
   37050:	ldr	r3, [r4, r1, lsl #2]
   37054:	ldr	r6, [sp, #44]	; 0x2c
   37058:	mul	r6, r3, r6
   3705c:	str	r6, [sp, #44]	; 0x2c
   37060:	add	r0, r0, #4
   37064:	add	r1, r1, #1
   37068:	ldr	r3, [fp, #24]
   3706c:	cmp	r1, r3
   37070:	bne	36ff0 <GetDataSlab+0x14bb4>
   37074:	b	38eac <GetDataSlab+0x16a70>
   37078:	ldr	r0, [sp, #44]	; 0x2c
   3707c:	cmp	r0, #1
   37080:	ldr	r0, [fp, #20]
   37084:	ldr	lr, [sp, #40]	; 0x28
   37088:	blt	3ae3c <GetDataSlab+0x18a00>
   3708c:	ldr	r1, [sp, #52]	; 0x34
   37090:	mls	r1, lr, sl, r1
   37094:	str	r1, [sp, #36]	; 0x24
   37098:	mul	r1, lr, sl
   3709c:	str	r1, [sp, #28]
   370a0:	add	r1, r9, #4
   370a4:	str	r1, [sp, #52]	; 0x34
   370a8:	add	r8, r0, #4
   370ac:	add	r0, sp, #104	; 0x68
   370b0:	orr	r1, r0, #4
   370b4:	orr	r0, r6, #4
   370b8:	str	r0, [sp, #24]
   370bc:	lsl	r0, lr, #3
   370c0:	str	r0, [sp, #32]
   370c4:	mov	r9, #0
   370c8:	mov	r0, #0
   370cc:	str	r0, [sp, #48]	; 0x30
   370d0:	ldr	r0, [fp, #12]
   370d4:	ldr	r0, [r0]
   370d8:	cmp	lr, #1
   370dc:	blt	37120 <GetDataSlab+0x14ce4>
   370e0:	ldr	r2, [sp, #28]
   370e4:	mov	r7, r2
   370e8:	add	r2, r2, r3
   370ec:	add	r3, r5, r7
   370f0:	add	r5, r5, r0
   370f4:	mov	ip, lr
   370f8:	ldr	lr, [sp, #60]	; 0x3c
   370fc:	ldrb	r6, [r5], sl
   37100:	stm	lr, {r6, r9}
   37104:	subs	ip, ip, #1
   37108:	add	lr, lr, #8
   3710c:	bne	370fc <GetDataSlab+0x14cc0>
   37110:	add	r2, r2, r0
   37114:	mov	r5, r3
   37118:	ldr	lr, [sp, #40]	; 0x28
   3711c:	b	37124 <GetDataSlab+0x14ce8>
   37120:	add	r2, r0, r3
   37124:	ldr	r3, [sp, #36]	; 0x24
   37128:	add	r5, r5, r3
   3712c:	sub	r0, r3, r0
   37130:	add	r3, r2, r0
   37134:	ldr	r0, [fp, #24]
   37138:	cmp	r0, #2
   3713c:	ldr	ip, [sp, #60]	; 0x3c
   37140:	blt	371f0 <GetDataSlab+0x14db4>
   37144:	mov	r2, #0
   37148:	mov	r0, r2
   3714c:	ldr	r2, [r1, r2, lsl #2]
   37150:	add	r2, r2, #1
   37154:	str	r2, [r1, r0, lsl #2]
   37158:	ldr	r6, [r8, r0, lsl #2]
   3715c:	sdiv	r4, r2, r6
   37160:	mls	r2, r4, r6, r2
   37164:	cmp	r2, #0
   37168:	bne	371e0 <GetDataSlab+0x14da4>
   3716c:	str	r9, [r1, r0, lsl #2]
   37170:	add	r7, sp, #64	; 0x40
   37174:	add	r2, r7, r0, lsl #2
   37178:	ldr	r2, [r2, #4]
   3717c:	sdiv	r6, r3, r2
   37180:	mls	r6, r6, r2, r3
   37184:	cmp	r6, #0
   37188:	beq	371ac <GetDataSlab+0x14d70>
   3718c:	ldr	r4, [r7, r0, lsl #2]
   37190:	ldr	r7, [sp, #52]	; 0x34
   37194:	ldr	r7, [r7, r0, lsl #2]
   37198:	sub	r2, r2, r6
   3719c:	mla	r2, r7, r4, r2
   371a0:	add	r3, r2, r3
   371a4:	add	r5, r5, r2
   371a8:	b	371c8 <GetDataSlab+0x14d8c>
   371ac:	ldr	r2, [sp, #52]	; 0x34
   371b0:	ldr	r2, [r2, r0, lsl #2]
   371b4:	cmp	r2, #0
   371b8:	addne	r7, sp, #64	; 0x40
   371bc:	ldrne	r7, [r7, r0, lsl #2]
   371c0:	mlane	r3, r7, r2, r3
   371c4:	mlane	r5, r7, r2, r5
   371c8:	add	r2, r0, #1
   371cc:	add	r0, r0, #2
   371d0:	ldr	r7, [fp, #24]
   371d4:	cmp	r0, r7
   371d8:	blt	37148 <GetDataSlab+0x14d0c>
   371dc:	b	371f0 <GetDataSlab+0x14db4>
   371e0:	ldr	r2, [sp, #24]
   371e4:	ldr	r0, [r2, r0, lsl #2]
   371e8:	add	r5, r5, r0
   371ec:	add	r3, r0, r3
   371f0:	ldr	r0, [sp, #32]
   371f4:	add	ip, ip, r0
   371f8:	str	ip, [sp, #60]	; 0x3c
   371fc:	ldr	r7, [sp, #48]	; 0x30
   37200:	add	r7, r7, lr
   37204:	mov	r0, #0
   37208:	ldr	r2, [sp, #44]	; 0x2c
   3720c:	str	r7, [sp, #48]	; 0x30
   37210:	cmp	r7, r2
   37214:	blt	370d0 <GetDataSlab+0x14c94>
   37218:	b	22560 <GetDataSlab+0x124>
   3721c:	ldr	r0, [sp, #52]	; 0x34
   37220:	cmp	r0, #1
   37224:	blt	240b8 <GetDataSlab+0x1c7c>
   37228:	ldr	r1, [sp, #44]	; 0x2c
   3722c:	ldr	r0, [sp, #40]	; 0x28
   37230:	mls	r0, r1, ip, r0
   37234:	ldr	r3, [r9], #4
   37238:	mov	lr, r9
   3723c:	sub	r0, r0, r3
   37240:	str	r0, [sp, #48]	; 0x30
   37244:	add	r9, r4, #4
   37248:	add	r0, sp, #104	; 0x68
   3724c:	orr	r6, r0, #4
   37250:	orr	r0, r2, #4
   37254:	str	r0, [sp, #32]
   37258:	str	r3, [sp, #56]	; 0x38
   3725c:	mla	r0, r1, ip, r3
   37260:	str	r0, [sp, #36]	; 0x24
   37264:	lsl	r0, r1, #3
   37268:	str	r0, [sp, #40]	; 0x28
   3726c:	lsl	r4, ip, #1
   37270:	mov	r8, #0
   37274:	cmp	r1, #1
   37278:	ldr	r0, [sp, #56]	; 0x38
   3727c:	blt	372ac <GetDataSlab+0x14e70>
   37280:	ldr	r0, [sp, #56]	; 0x38
   37284:	add	r0, r5, r0, lsl #1
   37288:	mov	ip, r1
   3728c:	ldr	r1, [sp, #60]	; 0x3c
   37290:	ldrsh	r2, [r0], r4
   37294:	asr	r3, r2, #31
   37298:	strd	r2, [r1]
   3729c:	subs	ip, ip, #1
   372a0:	add	r1, r1, #8
   372a4:	bne	37290 <GetDataSlab+0x14e54>
   372a8:	ldr	r0, [sp, #36]	; 0x24
   372ac:	ldr	r2, [sp, #48]	; 0x30
   372b0:	add	r1, r5, r2, lsl #1
   372b4:	add	r5, r1, r0, lsl #1
   372b8:	add	r0, r0, sl
   372bc:	add	sl, r0, r2
   372c0:	ldr	r0, [fp, #24]
   372c4:	cmp	r0, #2
   372c8:	blt	3736c <GetDataSlab+0x14f30>
   372cc:	mov	r1, #0
   372d0:	ldr	ip, [sp, #60]	; 0x3c
   372d4:	mov	r0, r1
   372d8:	ldr	r1, [r6, r1, lsl #2]
   372dc:	add	r1, r1, #1
   372e0:	str	r1, [r6, r0, lsl #2]
   372e4:	ldr	r2, [r9, r0, lsl #2]
   372e8:	sdiv	r3, r1, r2
   372ec:	mls	r1, r3, r2, r1
   372f0:	cmp	r1, #0
   372f4:	bne	37374 <GetDataSlab+0x14f38>
   372f8:	mov	r1, #0
   372fc:	str	r1, [r6, r0, lsl #2]
   37300:	add	r7, sp, #64	; 0x40
   37304:	add	r1, r7, r0, lsl #2
   37308:	ldr	r1, [r1, #4]
   3730c:	sdiv	r2, sl, r1
   37310:	mls	r3, r2, r1, sl
   37314:	cmp	r3, #0
   37318:	beq	37334 <GetDataSlab+0x14ef8>
   3731c:	ldr	r2, [r7, r0, lsl #2]
   37320:	ldr	r7, [lr, r0, lsl #2]
   37324:	sub	r1, r1, r3
   37328:	mla	r1, r7, r2, r1
   3732c:	add	sl, r1, sl
   37330:	b	37350 <GetDataSlab+0x14f14>
   37334:	ldr	r1, [lr, r0, lsl #2]
   37338:	cmp	r1, #0
   3733c:	beq	37354 <GetDataSlab+0x14f18>
   37340:	add	r2, sp, #64	; 0x40
   37344:	ldr	r2, [r2, r0, lsl #2]
   37348:	mla	sl, r2, r1, sl
   3734c:	mul	r1, r2, r1
   37350:	add	r5, r5, r1, lsl #1
   37354:	add	r1, r0, #1
   37358:	add	r0, r0, #2
   3735c:	ldr	r2, [fp, #24]
   37360:	cmp	r0, r2
   37364:	blt	372d4 <GetDataSlab+0x14e98>
   37368:	b	37384 <GetDataSlab+0x14f48>
   3736c:	ldr	ip, [sp, #60]	; 0x3c
   37370:	b	37384 <GetDataSlab+0x14f48>
   37374:	ldr	r1, [sp, #32]
   37378:	ldr	r0, [r1, r0, lsl #2]
   3737c:	add	r5, r5, r0, lsl #1
   37380:	add	sl, r0, sl
   37384:	ldr	r0, [sp, #40]	; 0x28
   37388:	add	ip, ip, r0
   3738c:	str	ip, [sp, #60]	; 0x3c
   37390:	ldr	r1, [sp, #44]	; 0x2c
   37394:	add	r8, r8, r1
   37398:	mov	r0, #0
   3739c:	ldr	r2, [sp, #52]	; 0x34
   373a0:	cmp	r8, r2
   373a4:	blt	37274 <GetDataSlab+0x14e38>
   373a8:	b	22560 <GetDataSlab+0x124>
   373ac:	ldr	r0, [sp, #56]	; 0x38
   373b0:	cmp	r0, #1
   373b4:	ldr	r3, [sp, #52]	; 0x34
   373b8:	blt	240b8 <GetDataSlab+0x1c7c>
   373bc:	ldr	r0, [sp, #44]	; 0x2c
   373c0:	mls	r0, r3, r5, r0
   373c4:	ldr	r1, [r9], #4
   373c8:	mov	r8, r9
   373cc:	sub	r0, r0, r1
   373d0:	str	r0, [sp, #40]	; 0x28
   373d4:	add	lr, r4, #4
   373d8:	add	r0, sp, #104	; 0x68
   373dc:	orr	r6, r0, #4
   373e0:	sub	r0, fp, #72	; 0x48
   373e4:	orr	r0, r0, #4
   373e8:	str	r0, [sp, #28]
   373ec:	str	r1, [sp, #44]	; 0x2c
   373f0:	mla	r0, r3, r5, r1
   373f4:	str	r0, [sp, #32]
   373f8:	lsl	r0, r3, #3
   373fc:	str	r0, [sp, #36]	; 0x24
   37400:	lsl	r4, r5, #1
   37404:	mov	sl, #0
   37408:	mov	r0, #0
   3740c:	str	r0, [sp, #48]	; 0x30
   37410:	cmp	r3, #1
   37414:	ldr	r0, [sp, #44]	; 0x2c
   37418:	blt	37440 <GetDataSlab+0x15004>
   3741c:	ldr	r0, [sp, #44]	; 0x2c
   37420:	add	r1, ip, r0, lsl #1
   37424:	ldr	r7, [sp, #60]	; 0x3c
   37428:	ldrh	r0, [r1], r4
   3742c:	stm	r7, {r0, sl}
   37430:	subs	r3, r3, #1
   37434:	add	r7, r7, #8
   37438:	bne	37428 <GetDataSlab+0x14fec>
   3743c:	ldr	r0, [sp, #32]
   37440:	ldr	r3, [sp, #40]	; 0x28
   37444:	add	r1, ip, r3, lsl #1
   37448:	add	ip, r1, r0, lsl #1
   3744c:	add	r0, r0, r2
   37450:	add	r2, r0, r3
   37454:	ldr	r0, [fp, #24]
   37458:	cmp	r0, #2
   3745c:	blt	3750c <GetDataSlab+0x150d0>
   37460:	mov	r9, #0
   37464:	mov	r0, r9
   37468:	ldr	r1, [r6, r9, lsl #2]
   3746c:	add	r1, r1, #1
   37470:	str	r1, [r6, r9, lsl #2]
   37474:	ldr	r3, [lr, r9, lsl #2]
   37478:	sdiv	r7, r1, r3
   3747c:	mls	r1, r7, r3, r1
   37480:	cmp	r1, #0
   37484:	bne	374fc <GetDataSlab+0x150c0>
   37488:	str	sl, [r6, r0, lsl #2]
   3748c:	add	r5, sp, #64	; 0x40
   37490:	add	r1, r5, r0, lsl #2
   37494:	ldr	r3, [r1, #4]
   37498:	sdiv	r1, r2, r3
   3749c:	mls	r7, r1, r3, r2
   374a0:	cmp	r7, #0
   374a4:	beq	374c0 <GetDataSlab+0x15084>
   374a8:	ldr	r1, [r5, r0, lsl #2]
   374ac:	ldr	r5, [r8, r0, lsl #2]
   374b0:	sub	r3, r3, r7
   374b4:	mla	r1, r5, r1, r3
   374b8:	add	r2, r1, r2
   374bc:	b	374e0 <GetDataSlab+0x150a4>
   374c0:	mov	r1, r8
   374c4:	ldr	r3, [r8, r0, lsl #2]
   374c8:	cmp	r3, #0
   374cc:	beq	374e4 <GetDataSlab+0x150a8>
   374d0:	add	r1, sp, #64	; 0x40
   374d4:	ldr	r1, [r1, r0, lsl #2]
   374d8:	mla	r2, r1, r3, r2
   374dc:	mul	r1, r1, r3
   374e0:	add	ip, ip, r1, lsl #1
   374e4:	add	r9, r0, #1
   374e8:	add	r0, r0, #2
   374ec:	ldr	r1, [fp, #24]
   374f0:	cmp	r0, r1
   374f4:	blt	37464 <GetDataSlab+0x15028>
   374f8:	b	3750c <GetDataSlab+0x150d0>
   374fc:	ldr	r1, [sp, #28]
   37500:	ldr	r0, [r1, r0, lsl #2]
   37504:	add	ip, ip, r0, lsl #1
   37508:	add	r2, r0, r2
   3750c:	ldr	r0, [sp, #60]	; 0x3c
   37510:	ldr	r1, [sp, #36]	; 0x24
   37514:	add	r0, r0, r1
   37518:	str	r0, [sp, #60]	; 0x3c
   3751c:	ldr	r3, [sp, #52]	; 0x34
   37520:	ldr	r5, [sp, #48]	; 0x30
   37524:	add	r5, r5, r3
   37528:	mov	r0, #0
   3752c:	ldr	r1, [sp, #56]	; 0x38
   37530:	str	r5, [sp, #48]	; 0x30
   37534:	cmp	r5, r1
   37538:	blt	37410 <GetDataSlab+0x14fd4>
   3753c:	b	22560 <GetDataSlab+0x124>
   37540:	ldr	r0, [sp, #52]	; 0x34
   37544:	cmp	r0, #1
   37548:	ldr	lr, [sp, #44]	; 0x2c
   3754c:	blt	240b8 <GetDataSlab+0x1c7c>
   37550:	ldr	r0, [sp, #40]	; 0x28
   37554:	mls	r0, lr, ip, r0
   37558:	str	r0, [sp, #40]	; 0x28
   3755c:	add	sl, r9, #4
   37560:	add	r9, r4, #4
   37564:	add	r0, sp, #104	; 0x68
   37568:	orr	r1, r0, #4
   3756c:	sub	r0, fp, #72	; 0x48
   37570:	orr	r0, r0, #4
   37574:	str	r0, [sp, #28]
   37578:	mul	r0, lr, ip
   3757c:	str	r0, [sp, #32]
   37580:	lsl	r0, lr, #3
   37584:	str	r0, [sp, #36]	; 0x24
   37588:	lsl	r6, ip, #2
   3758c:	mov	r0, #0
   37590:	str	r0, [sp, #48]	; 0x30
   37594:	ldr	r0, [fp, #12]
   37598:	ldr	r0, [r0]
   3759c:	cmp	lr, #1
   375a0:	blt	375e8 <GetDataSlab+0x151ac>
   375a4:	ldr	r2, [sp, #32]
   375a8:	mov	r7, r2
   375ac:	add	r2, r2, r3
   375b0:	add	r7, r8, r7, lsl #2
   375b4:	add	r3, r8, r0, lsl #2
   375b8:	mov	ip, lr
   375bc:	ldr	lr, [sp, #60]	; 0x3c
   375c0:	ldr	r4, [r3], r6
   375c4:	asr	r5, r4, #31
   375c8:	strd	r4, [lr]
   375cc:	subs	ip, ip, #1
   375d0:	add	lr, lr, #8
   375d4:	bne	375c0 <GetDataSlab+0x15184>
   375d8:	add	r2, r2, r0
   375dc:	mov	r8, r7
   375e0:	ldr	lr, [sp, #44]	; 0x2c
   375e4:	b	375ec <GetDataSlab+0x151b0>
   375e8:	add	r2, r0, r3
   375ec:	ldr	r3, [sp, #40]	; 0x28
   375f0:	add	r8, r8, r3, lsl #2
   375f4:	sub	r0, r3, r0
   375f8:	add	r3, r2, r0
   375fc:	ldr	r0, [fp, #24]
   37600:	cmp	r0, #2
   37604:	ldr	ip, [sp, #60]	; 0x3c
   37608:	blt	376b8 <GetDataSlab+0x1527c>
   3760c:	mov	r2, #0
   37610:	mov	r0, r2
   37614:	ldr	r2, [r1, r2, lsl #2]
   37618:	add	r2, r2, #1
   3761c:	str	r2, [r1, r0, lsl #2]
   37620:	ldr	r5, [r9, r0, lsl #2]
   37624:	sdiv	r4, r2, r5
   37628:	mls	r2, r4, r5, r2
   3762c:	cmp	r2, #0
   37630:	bne	376a8 <GetDataSlab+0x1526c>
   37634:	mov	r2, #0
   37638:	str	r2, [r1, r0, lsl #2]
   3763c:	add	r7, sp, #64	; 0x40
   37640:	add	r2, r7, r0, lsl #2
   37644:	ldr	r2, [r2, #4]
   37648:	sdiv	r5, r3, r2
   3764c:	mls	r4, r5, r2, r3
   37650:	cmp	r4, #0
   37654:	beq	37670 <GetDataSlab+0x15234>
   37658:	ldr	r5, [r7, r0, lsl #2]
   3765c:	ldr	r7, [sl, r0, lsl #2]
   37660:	sub	r2, r2, r4
   37664:	mla	r2, r7, r5, r2
   37668:	add	r3, r2, r3
   3766c:	b	3768c <GetDataSlab+0x15250>
   37670:	ldr	r2, [sl, r0, lsl #2]
   37674:	cmp	r2, #0
   37678:	beq	37690 <GetDataSlab+0x15254>
   3767c:	add	r7, sp, #64	; 0x40
   37680:	ldr	r7, [r7, r0, lsl #2]
   37684:	mla	r3, r7, r2, r3
   37688:	mul	r2, r7, r2
   3768c:	add	r8, r8, r2, lsl #2
   37690:	add	r2, r0, #1
   37694:	add	r0, r0, #2
   37698:	ldr	r7, [fp, #24]
   3769c:	cmp	r0, r7
   376a0:	blt	37610 <GetDataSlab+0x151d4>
   376a4:	b	376b8 <GetDataSlab+0x1527c>
   376a8:	ldr	r2, [sp, #28]
   376ac:	ldr	r0, [r2, r0, lsl #2]
   376b0:	add	r8, r8, r0, lsl #2
   376b4:	add	r3, r0, r3
   376b8:	ldr	r0, [sp, #36]	; 0x24
   376bc:	add	ip, ip, r0
   376c0:	str	ip, [sp, #60]	; 0x3c
   376c4:	ldr	r7, [sp, #48]	; 0x30
   376c8:	add	r7, r7, lr
   376cc:	mov	r0, #0
   376d0:	ldr	r2, [sp, #52]	; 0x34
   376d4:	str	r7, [sp, #48]	; 0x30
   376d8:	cmp	r7, r2
   376dc:	blt	37594 <GetDataSlab+0x15158>
   376e0:	b	22560 <GetDataSlab+0x124>
   376e4:	ldr	r0, [sp, #52]	; 0x34
   376e8:	cmp	r0, #1
   376ec:	ldr	r2, [sp, #44]	; 0x2c
   376f0:	blt	240b8 <GetDataSlab+0x1c7c>
   376f4:	ldr	r0, [sp, #40]	; 0x28
   376f8:	mls	r0, r2, ip, r0
   376fc:	str	r0, [sp, #40]	; 0x28
   37700:	add	sl, r9, #4
   37704:	add	r9, r4, #4
   37708:	add	r0, sp, #104	; 0x68
   3770c:	orr	r7, r0, #4
   37710:	sub	r0, fp, #72	; 0x48
   37714:	orr	r0, r0, #4
   37718:	str	r0, [sp, #24]
   3771c:	mul	r0, r2, ip
   37720:	str	r0, [sp, #28]
   37724:	lsl	r0, r2, #3
   37728:	str	r0, [sp, #36]	; 0x24
   3772c:	lsl	r8, ip, #2
   37730:	mov	ip, #0
   37734:	mov	r0, #0
   37738:	str	r0, [sp, #48]	; 0x30
   3773c:	str	sl, [sp, #32]
   37740:	ldr	r0, [fp, #12]
   37744:	ldr	r0, [r0]
   37748:	cmp	r2, #1
   3774c:	blt	3778c <GetDataSlab+0x15350>
   37750:	ldr	r1, [sp, #28]
   37754:	add	r4, r1, r3
   37758:	add	r3, lr, r1, lsl #2
   3775c:	add	r5, lr, r0, lsl #2
   37760:	ldr	sl, [sp, #60]	; 0x3c
   37764:	ldr	r6, [r5], r8
   37768:	stm	sl, {r6, ip}
   3776c:	subs	r2, r2, #1
   37770:	add	sl, sl, #8
   37774:	bne	37764 <GetDataSlab+0x15328>
   37778:	add	r2, r4, r0
   3777c:	mov	lr, r3
   37780:	add	r1, sp, #64	; 0x40
   37784:	ldr	sl, [sp, #32]
   37788:	b	37794 <GetDataSlab+0x15358>
   3778c:	add	r2, r0, r3
   37790:	add	r1, sp, #64	; 0x40
   37794:	ldr	r3, [sp, #40]	; 0x28
   37798:	add	lr, lr, r3, lsl #2
   3779c:	sub	r0, r3, r0
   377a0:	add	r3, r2, r0
   377a4:	ldr	r0, [fp, #24]
   377a8:	cmp	r0, #2
   377ac:	blt	37850 <GetDataSlab+0x15414>
   377b0:	mov	r2, #0
   377b4:	mov	r0, r2
   377b8:	ldr	r2, [r7, r2, lsl #2]
   377bc:	add	r2, r2, #1
   377c0:	str	r2, [r7, r0, lsl #2]
   377c4:	ldr	r4, [r9, r0, lsl #2]
   377c8:	sdiv	r6, r2, r4
   377cc:	mls	r2, r6, r4, r2
   377d0:	cmp	r2, #0
   377d4:	bne	37840 <GetDataSlab+0x15404>
   377d8:	str	ip, [r7, r0, lsl #2]
   377dc:	add	r2, r1, r0, lsl #2
   377e0:	ldr	r2, [r2, #4]
   377e4:	sdiv	r4, r3, r2
   377e8:	mls	r4, r4, r2, r3
   377ec:	cmp	r4, #0
   377f0:	beq	3780c <GetDataSlab+0x153d0>
   377f4:	ldr	r6, [r1, r0, lsl #2]
   377f8:	ldr	r5, [sl, r0, lsl #2]
   377fc:	sub	r2, r2, r4
   37800:	mla	r2, r5, r6, r2
   37804:	add	r3, r2, r3
   37808:	b	37824 <GetDataSlab+0x153e8>
   3780c:	ldr	r2, [sl, r0, lsl #2]
   37810:	cmp	r2, #0
   37814:	beq	37828 <GetDataSlab+0x153ec>
   37818:	ldr	r4, [r1, r0, lsl #2]
   3781c:	mla	r3, r4, r2, r3
   37820:	mul	r2, r4, r2
   37824:	add	lr, lr, r2, lsl #2
   37828:	add	r2, r0, #1
   3782c:	add	r0, r0, #2
   37830:	ldr	r4, [fp, #24]
   37834:	cmp	r0, r4
   37838:	blt	377b4 <GetDataSlab+0x15378>
   3783c:	b	37850 <GetDataSlab+0x15414>
   37840:	ldr	r1, [sp, #24]
   37844:	ldr	r0, [r1, r0, lsl #2]
   37848:	add	lr, lr, r0, lsl #2
   3784c:	add	r3, r0, r3
   37850:	ldr	r0, [sp, #60]	; 0x3c
   37854:	ldr	r1, [sp, #36]	; 0x24
   37858:	add	r0, r0, r1
   3785c:	str	r0, [sp, #60]	; 0x3c
   37860:	ldr	r2, [sp, #44]	; 0x2c
   37864:	ldr	r4, [sp, #48]	; 0x30
   37868:	add	r4, r4, r2
   3786c:	mov	r0, #0
   37870:	ldr	r1, [sp, #52]	; 0x34
   37874:	str	r4, [sp, #48]	; 0x30
   37878:	cmp	r4, r1
   3787c:	blt	37740 <GetDataSlab+0x15304>
   37880:	b	22560 <GetDataSlab+0x124>
   37884:	ldr	r0, [sp, #44]	; 0x2c
   37888:	cmp	r0, #1
   3788c:	ldr	sl, [sp, #40]	; 0x28
   37890:	blt	240b8 <GetDataSlab+0x1c7c>
   37894:	ldr	r0, [sp, #36]	; 0x24
   37898:	mls	r0, sl, ip, r0
   3789c:	ldr	r1, [r9], #4
   378a0:	str	r9, [sp, #56]	; 0x38
   378a4:	sub	r0, r0, r1
   378a8:	str	r0, [sp, #32]
   378ac:	ldr	r0, [fp, #20]
   378b0:	add	r0, r0, #4
   378b4:	str	r0, [sp, #52]	; 0x34
   378b8:	add	r0, sp, #104	; 0x68
   378bc:	orr	r7, r0, #4
   378c0:	sub	r0, fp, #72	; 0x48
   378c4:	orr	r0, r0, #4
   378c8:	str	r0, [sp, #20]
   378cc:	str	r1, [sp, #36]	; 0x24
   378d0:	mla	r0, sl, ip, r1
   378d4:	str	r0, [sp, #24]
   378d8:	lsl	r0, sl, #3
   378dc:	str	r0, [sp, #28]
   378e0:	lsl	r8, ip, #2
   378e4:	mov	r0, #0
   378e8:	str	r0, [sp, #48]	; 0x30
   378ec:	cmp	sl, #1
   378f0:	ldr	r0, [sp, #36]	; 0x24
   378f4:	blt	37924 <GetDataSlab+0x154e8>
   378f8:	ldr	r0, [sp, #36]	; 0x24
   378fc:	add	r6, r5, r0, lsl #2
   37900:	ldr	r9, [sp, #60]	; 0x3c
   37904:	ldr	r0, [r6], r8
   37908:	bl	48e10 <__aeabi_f2lz>
   3790c:	strd	r0, [r9]
   37910:	subs	sl, sl, #1
   37914:	add	r9, r9, #8
   37918:	bne	37904 <GetDataSlab+0x154c8>
   3791c:	ldr	r0, [sp, #24]
   37920:	ldr	sl, [sp, #40]	; 0x28
   37924:	ldr	r2, [sp, #32]
   37928:	add	r1, r5, r2, lsl #2
   3792c:	add	r5, r1, r0, lsl #2
   37930:	add	r0, r0, r4
   37934:	add	r4, r0, r2
   37938:	ldr	r0, [fp, #24]
   3793c:	cmp	r0, #2
   37940:	ldr	ip, [sp, #60]	; 0x3c
   37944:	add	r9, sp, #64	; 0x40
   37948:	blt	379f8 <GetDataSlab+0x155bc>
   3794c:	mov	r1, #0
   37950:	ldr	lr, [sp, #56]	; 0x38
   37954:	mov	r0, r1
   37958:	ldr	r1, [r7, r1, lsl #2]
   3795c:	add	r1, r1, #1
   37960:	str	r1, [r7, r0, lsl #2]
   37964:	ldr	r2, [sp, #52]	; 0x34
   37968:	ldr	r2, [r2, r0, lsl #2]
   3796c:	sdiv	r3, r1, r2
   37970:	mls	r1, r3, r2, r1
   37974:	cmp	r1, #0
   37978:	bne	379e8 <GetDataSlab+0x155ac>
   3797c:	mov	r1, #0
   37980:	str	r1, [r7, r0, lsl #2]
   37984:	add	r1, r9, r0, lsl #2
   37988:	ldr	r1, [r1, #4]
   3798c:	sdiv	r2, r4, r1
   37990:	mls	r2, r2, r1, r4
   37994:	cmp	r2, #0
   37998:	beq	379b4 <GetDataSlab+0x15578>
   3799c:	ldr	r3, [r9, r0, lsl #2]
   379a0:	ldr	r6, [lr, r0, lsl #2]
   379a4:	sub	r1, r1, r2
   379a8:	mla	r1, r6, r3, r1
   379ac:	add	r4, r1, r4
   379b0:	b	379cc <GetDataSlab+0x15590>
   379b4:	ldr	r1, [lr, r0, lsl #2]
   379b8:	cmp	r1, #0
   379bc:	beq	379d0 <GetDataSlab+0x15594>
   379c0:	ldr	r2, [r9, r0, lsl #2]
   379c4:	mla	r4, r2, r1, r4
   379c8:	mul	r1, r2, r1
   379cc:	add	r5, r5, r1, lsl #2
   379d0:	add	r1, r0, #1
   379d4:	add	r0, r0, #2
   379d8:	ldr	r2, [fp, #24]
   379dc:	cmp	r0, r2
   379e0:	blt	37954 <GetDataSlab+0x15518>
   379e4:	b	379f8 <GetDataSlab+0x155bc>
   379e8:	ldr	r1, [sp, #20]
   379ec:	ldr	r0, [r1, r0, lsl #2]
   379f0:	add	r5, r5, r0, lsl #2
   379f4:	add	r4, r0, r4
   379f8:	ldr	r0, [sp, #28]
   379fc:	add	ip, ip, r0
   37a00:	str	ip, [sp, #60]	; 0x3c
   37a04:	ldr	r2, [sp, #48]	; 0x30
   37a08:	add	r2, r2, sl
   37a0c:	mov	r0, #0
   37a10:	ldr	r1, [sp, #44]	; 0x2c
   37a14:	str	r2, [sp, #48]	; 0x30
   37a18:	cmp	r2, r1
   37a1c:	blt	378ec <GetDataSlab+0x154b0>
   37a20:	b	22560 <GetDataSlab+0x124>
   37a24:	ldr	r0, [sp, #44]	; 0x2c
   37a28:	cmp	r0, #1
   37a2c:	ldr	r2, [fp, #20]
   37a30:	ldr	r8, [sp, #40]	; 0x28
   37a34:	blt	240b8 <GetDataSlab+0x1c7c>
   37a38:	ldr	r0, [sp, #36]	; 0x24
   37a3c:	mls	r0, r8, ip, r0
   37a40:	ldr	r1, [sp, #56]	; 0x38
   37a44:	ldr	sl, [r1], #4
   37a48:	str	r1, [sp, #56]	; 0x38
   37a4c:	sub	r0, r0, sl
   37a50:	str	r0, [sp, #36]	; 0x24
   37a54:	add	r0, r2, #4
   37a58:	str	r0, [sp, #52]	; 0x34
   37a5c:	add	r0, sp, #104	; 0x68
   37a60:	orr	r4, r0, #4
   37a64:	sub	r0, fp, #72	; 0x48
   37a68:	orr	r0, r0, #4
   37a6c:	str	r0, [sp, #20]
   37a70:	mla	r0, r8, ip, sl
   37a74:	str	r0, [sp, #24]
   37a78:	lsl	r0, r8, #3
   37a7c:	str	r0, [sp, #32]
   37a80:	lsl	r6, ip, #3
   37a84:	mov	r0, #0
   37a88:	str	r0, [sp, #48]	; 0x30
   37a8c:	str	sl, [sp, #28]
   37a90:	cmp	r8, #1
   37a94:	mov	r0, sl
   37a98:	blt	37ad0 <GetDataSlab+0x15694>
   37a9c:	add	r7, r5, sl, lsl #3
   37aa0:	ldr	sl, [sp, #60]	; 0x3c
   37aa4:	vldr	d16, [r7]
   37aa8:	vmov	r0, r1, d16
   37aac:	bl	48e3c <__aeabi_d2lz>
   37ab0:	strd	r0, [sl]
   37ab4:	add	r7, r7, r6
   37ab8:	subs	r8, r8, #1
   37abc:	add	sl, sl, #8
   37ac0:	bne	37aa4 <GetDataSlab+0x15668>
   37ac4:	ldr	r0, [sp, #24]
   37ac8:	ldr	r8, [sp, #40]	; 0x28
   37acc:	ldr	sl, [sp, #28]
   37ad0:	ldr	r2, [sp, #36]	; 0x24
   37ad4:	add	r1, r5, r2, lsl #3
   37ad8:	add	r5, r1, r0, lsl #3
   37adc:	add	r0, r0, r9
   37ae0:	add	r9, r0, r2
   37ae4:	ldr	r0, [fp, #24]
   37ae8:	cmp	r0, #2
   37aec:	ldr	ip, [sp, #60]	; 0x3c
   37af0:	add	lr, sp, #64	; 0x40
   37af4:	blt	37ba8 <GetDataSlab+0x1576c>
   37af8:	mov	r1, #0
   37afc:	mov	r0, r1
   37b00:	ldr	r1, [r4, r1, lsl #2]
   37b04:	add	r1, r1, #1
   37b08:	str	r1, [r4, r0, lsl #2]
   37b0c:	ldr	r2, [sp, #52]	; 0x34
   37b10:	ldr	r2, [r2, r0, lsl #2]
   37b14:	sdiv	r3, r1, r2
   37b18:	mls	r1, r3, r2, r1
   37b1c:	cmp	r1, #0
   37b20:	bne	37b98 <GetDataSlab+0x1575c>
   37b24:	mov	r1, #0
   37b28:	str	r1, [r4, r0, lsl #2]
   37b2c:	add	r1, lr, r0, lsl #2
   37b30:	ldr	r1, [r1, #4]
   37b34:	sdiv	r2, r9, r1
   37b38:	mls	r2, r2, r1, r9
   37b3c:	cmp	r2, #0
   37b40:	beq	37b60 <GetDataSlab+0x15724>
   37b44:	ldr	r3, [lr, r0, lsl #2]
   37b48:	ldr	r7, [sp, #56]	; 0x38
   37b4c:	ldr	r7, [r7, r0, lsl #2]
   37b50:	sub	r1, r1, r2
   37b54:	mla	r1, r7, r3, r1
   37b58:	add	r9, r1, r9
   37b5c:	b	37b7c <GetDataSlab+0x15740>
   37b60:	ldr	r1, [sp, #56]	; 0x38
   37b64:	ldr	r1, [r1, r0, lsl #2]
   37b68:	cmp	r1, #0
   37b6c:	beq	37b80 <GetDataSlab+0x15744>
   37b70:	ldr	r2, [lr, r0, lsl #2]
   37b74:	mla	r9, r2, r1, r9
   37b78:	mul	r1, r2, r1
   37b7c:	add	r5, r5, r1, lsl #3
   37b80:	add	r1, r0, #1
   37b84:	add	r0, r0, #2
   37b88:	ldr	r2, [fp, #24]
   37b8c:	cmp	r0, r2
   37b90:	blt	37afc <GetDataSlab+0x156c0>
   37b94:	b	37ba8 <GetDataSlab+0x1576c>
   37b98:	ldr	r1, [sp, #20]
   37b9c:	ldr	r0, [r1, r0, lsl #2]
   37ba0:	add	r5, r5, r0, lsl #3
   37ba4:	add	r9, r0, r9
   37ba8:	ldr	r0, [sp, #32]
   37bac:	add	ip, ip, r0
   37bb0:	str	ip, [sp, #60]	; 0x3c
   37bb4:	ldr	r2, [sp, #48]	; 0x30
   37bb8:	add	r2, r2, r8
   37bbc:	mov	r0, #0
   37bc0:	ldr	r1, [sp, #44]	; 0x2c
   37bc4:	str	r2, [sp, #48]	; 0x30
   37bc8:	cmp	r2, r1
   37bcc:	blt	37a90 <GetDataSlab+0x15654>
   37bd0:	b	22560 <GetDataSlab+0x124>
   37bd4:	ldr	r0, [sp, #40]	; 0x28
   37bd8:	cmp	r0, #1
   37bdc:	ldr	r2, [sp, #44]	; 0x2c
   37be0:	blt	3a644 <GetDataSlab+0x18208>
   37be4:	ldr	r0, [sp, #36]	; 0x24
   37be8:	mls	r0, r2, r3, r0
   37bec:	mov	r6, r9
   37bf0:	ldr	r1, [r6], #4
   37bf4:	sub	r0, r0, r1
   37bf8:	str	r0, [sp, #32]
   37bfc:	add	r5, r4, #4
   37c00:	add	r0, sp, #104	; 0x68
   37c04:	orr	r4, r0, #4
   37c08:	sub	r0, fp, #72	; 0x48
   37c0c:	orr	r0, r0, #4
   37c10:	str	r0, [sp, #20]
   37c14:	str	r1, [sp, #36]	; 0x24
   37c18:	mla	r0, r2, r3, r1
   37c1c:	str	r0, [sp, #24]
   37c20:	lsl	r0, r2, #3
   37c24:	str	r0, [sp, #28]
   37c28:	lsl	r8, r3, #3
   37c2c:	ldr	sl, [sp, #60]	; 0x3c
   37c30:	mov	r9, #0
   37c34:	cmp	r2, #1
   37c38:	ldr	r0, [sp, #36]	; 0x24
   37c3c:	blt	37c68 <GetDataSlab+0x1582c>
   37c40:	ldr	r0, [sp, #36]	; 0x24
   37c44:	add	r0, ip, r0, lsl #3
   37c48:	mov	r7, sl
   37c4c:	ldm	r0, {r1, r3}
   37c50:	stm	r7, {r1, r3}
   37c54:	add	r0, r0, r8
   37c58:	subs	r2, r2, #1
   37c5c:	add	r7, r7, #8
   37c60:	bne	37c4c <GetDataSlab+0x15810>
   37c64:	ldr	r0, [sp, #24]
   37c68:	ldr	r2, [sp, #32]
   37c6c:	add	r1, ip, r2, lsl #3
   37c70:	add	ip, r1, r0, lsl #3
   37c74:	add	r0, r0, lr
   37c78:	add	lr, r0, r2
   37c7c:	ldr	r0, [fp, #24]
   37c80:	cmp	r0, #2
   37c84:	blt	37d34 <GetDataSlab+0x158f8>
   37c88:	mov	r7, #0
   37c8c:	mov	r0, r7
   37c90:	ldr	r1, [r4, r7, lsl #2]
   37c94:	add	r1, r1, #1
   37c98:	str	r1, [r4, r7, lsl #2]
   37c9c:	ldr	r2, [r5, r7, lsl #2]
   37ca0:	sdiv	r3, r1, r2
   37ca4:	mls	r1, r3, r2, r1
   37ca8:	cmp	r1, #0
   37cac:	bne	37d24 <GetDataSlab+0x158e8>
   37cb0:	mov	r1, #0
   37cb4:	str	r1, [r4, r0, lsl #2]
   37cb8:	add	r3, sp, #64	; 0x40
   37cbc:	add	r1, r3, r0, lsl #2
   37cc0:	ldr	r2, [r1, #4]
   37cc4:	sdiv	r1, lr, r2
   37cc8:	mls	r7, r1, r2, lr
   37ccc:	cmp	r7, #0
   37cd0:	beq	37cec <GetDataSlab+0x158b0>
   37cd4:	ldr	r1, [r3, r0, lsl #2]
   37cd8:	ldr	r3, [r6, r0, lsl #2]
   37cdc:	sub	r2, r2, r7
   37ce0:	mla	r1, r3, r1, r2
   37ce4:	add	lr, r1, lr
   37ce8:	b	37d08 <GetDataSlab+0x158cc>
   37cec:	ldr	r2, [r6, r0, lsl #2]
   37cf0:	cmp	r2, #0
   37cf4:	beq	37d0c <GetDataSlab+0x158d0>
   37cf8:	add	r1, sp, #64	; 0x40
   37cfc:	ldr	r1, [r1, r0, lsl #2]
   37d00:	mla	lr, r1, r2, lr
   37d04:	mul	r1, r1, r2
   37d08:	add	ip, ip, r1, lsl #3
   37d0c:	add	r7, r0, #1
   37d10:	add	r0, r0, #2
   37d14:	ldr	r1, [fp, #24]
   37d18:	cmp	r0, r1
   37d1c:	blt	37c8c <GetDataSlab+0x15850>
   37d20:	b	37d34 <GetDataSlab+0x158f8>
   37d24:	ldr	r1, [sp, #20]
   37d28:	ldr	r0, [r1, r0, lsl #2]
   37d2c:	add	ip, ip, r0, lsl #3
   37d30:	add	lr, r0, lr
   37d34:	ldr	r0, [sp, #28]
   37d38:	add	sl, sl, r0
   37d3c:	ldr	r2, [sp, #44]	; 0x2c
   37d40:	add	r9, r9, r2
   37d44:	ldr	r0, [sp, #40]	; 0x28
   37d48:	cmp	r9, r0
   37d4c:	blt	37c34 <GetDataSlab+0x157f8>
   37d50:	mov	r0, #0
   37d54:	ldr	r4, [fp, #20]
   37d58:	b	3a648 <GetDataSlab+0x1820c>
   37d5c:	ldr	r0, [sp, #44]	; 0x2c
   37d60:	cmp	r0, #1
   37d64:	ldr	r0, [fp, #20]
   37d68:	ldr	lr, [sp, #40]	; 0x28
   37d6c:	blt	3ae3c <GetDataSlab+0x18a00>
   37d70:	ldr	r1, [sp, #52]	; 0x34
   37d74:	mls	r1, lr, sl, r1
   37d78:	str	r1, [sp, #36]	; 0x24
   37d7c:	mul	r1, lr, sl
   37d80:	str	r1, [sp, #28]
   37d84:	add	r1, r9, #4
   37d88:	str	r1, [sp, #52]	; 0x34
   37d8c:	add	r8, r0, #4
   37d90:	add	r0, sp, #104	; 0x68
   37d94:	orr	r1, r0, #4
   37d98:	orr	r0, r6, #4
   37d9c:	str	r0, [sp, #24]
   37da0:	lsl	r0, lr, #3
   37da4:	str	r0, [sp, #32]
   37da8:	mov	r9, #0
   37dac:	mov	r0, #0
   37db0:	str	r0, [sp, #48]	; 0x30
   37db4:	ldr	r0, [fp, #12]
   37db8:	ldr	r0, [r0]
   37dbc:	cmp	lr, #1
   37dc0:	blt	37e04 <GetDataSlab+0x159c8>
   37dc4:	ldr	r2, [sp, #28]
   37dc8:	mov	r7, r2
   37dcc:	add	r2, r2, r3
   37dd0:	add	r3, r5, r7
   37dd4:	add	r5, r5, r0
   37dd8:	mov	ip, lr
   37ddc:	ldr	lr, [sp, #60]	; 0x3c
   37de0:	ldrb	r6, [r5], sl
   37de4:	stm	lr, {r6, r9}
   37de8:	subs	ip, ip, #1
   37dec:	add	lr, lr, #8
   37df0:	bne	37de0 <GetDataSlab+0x159a4>
   37df4:	add	r2, r2, r0
   37df8:	mov	r5, r3
   37dfc:	ldr	lr, [sp, #40]	; 0x28
   37e00:	b	37e08 <GetDataSlab+0x159cc>
   37e04:	add	r2, r0, r3
   37e08:	ldr	r3, [sp, #36]	; 0x24
   37e0c:	add	r5, r5, r3
   37e10:	sub	r0, r3, r0
   37e14:	add	r3, r2, r0
   37e18:	ldr	r0, [fp, #24]
   37e1c:	cmp	r0, #2
   37e20:	ldr	ip, [sp, #60]	; 0x3c
   37e24:	blt	37ed4 <GetDataSlab+0x15a98>
   37e28:	mov	r2, #0
   37e2c:	mov	r0, r2
   37e30:	ldr	r2, [r1, r2, lsl #2]
   37e34:	add	r2, r2, #1
   37e38:	str	r2, [r1, r0, lsl #2]
   37e3c:	ldr	r6, [r8, r0, lsl #2]
   37e40:	sdiv	r4, r2, r6
   37e44:	mls	r2, r4, r6, r2
   37e48:	cmp	r2, #0
   37e4c:	bne	37ec4 <GetDataSlab+0x15a88>
   37e50:	str	r9, [r1, r0, lsl #2]
   37e54:	add	r7, sp, #64	; 0x40
   37e58:	add	r2, r7, r0, lsl #2
   37e5c:	ldr	r2, [r2, #4]
   37e60:	sdiv	r6, r3, r2
   37e64:	mls	r6, r6, r2, r3
   37e68:	cmp	r6, #0
   37e6c:	beq	37e90 <GetDataSlab+0x15a54>
   37e70:	ldr	r4, [r7, r0, lsl #2]
   37e74:	ldr	r7, [sp, #52]	; 0x34
   37e78:	ldr	r7, [r7, r0, lsl #2]
   37e7c:	sub	r2, r2, r6
   37e80:	mla	r2, r7, r4, r2
   37e84:	add	r3, r2, r3
   37e88:	add	r5, r5, r2
   37e8c:	b	37eac <GetDataSlab+0x15a70>
   37e90:	ldr	r2, [sp, #52]	; 0x34
   37e94:	ldr	r2, [r2, r0, lsl #2]
   37e98:	cmp	r2, #0
   37e9c:	addne	r7, sp, #64	; 0x40
   37ea0:	ldrne	r7, [r7, r0, lsl #2]
   37ea4:	mlane	r3, r7, r2, r3
   37ea8:	mlane	r5, r7, r2, r5
   37eac:	add	r2, r0, #1
   37eb0:	add	r0, r0, #2
   37eb4:	ldr	r7, [fp, #24]
   37eb8:	cmp	r0, r7
   37ebc:	blt	37e2c <GetDataSlab+0x159f0>
   37ec0:	b	37ed4 <GetDataSlab+0x15a98>
   37ec4:	ldr	r2, [sp, #24]
   37ec8:	ldr	r0, [r2, r0, lsl #2]
   37ecc:	add	r5, r5, r0
   37ed0:	add	r3, r0, r3
   37ed4:	ldr	r0, [sp, #32]
   37ed8:	add	ip, ip, r0
   37edc:	str	ip, [sp, #60]	; 0x3c
   37ee0:	ldr	r7, [sp, #48]	; 0x30
   37ee4:	add	r7, r7, lr
   37ee8:	mov	r0, #0
   37eec:	ldr	r2, [sp, #44]	; 0x2c
   37ef0:	str	r7, [sp, #48]	; 0x30
   37ef4:	cmp	r7, r2
   37ef8:	blt	37db4 <GetDataSlab+0x15978>
   37efc:	b	22560 <GetDataSlab+0x124>
   37f00:	ldr	r0, [sp, #52]	; 0x34
   37f04:	cmp	r0, #1
   37f08:	blt	3ae3c <GetDataSlab+0x18a00>
   37f0c:	ldr	r1, [sp, #44]	; 0x2c
   37f10:	ldr	r0, [sp, #40]	; 0x28
   37f14:	mls	r0, r1, ip, r0
   37f18:	ldr	r3, [r9], #4
   37f1c:	mov	lr, r9
   37f20:	sub	r0, r0, r3
   37f24:	str	r0, [sp, #48]	; 0x30
   37f28:	add	r9, r4, #4
   37f2c:	add	r0, sp, #104	; 0x68
   37f30:	orr	r6, r0, #4
   37f34:	orr	r0, r2, #4
   37f38:	str	r0, [sp, #32]
   37f3c:	str	r3, [sp, #56]	; 0x38
   37f40:	mla	r0, r1, ip, r3
   37f44:	str	r0, [sp, #36]	; 0x24
   37f48:	lsl	r0, r1, #3
   37f4c:	str	r0, [sp, #40]	; 0x28
   37f50:	lsl	r4, ip, #1
   37f54:	mov	r8, #0
   37f58:	cmp	r1, #1
   37f5c:	ldr	r0, [sp, #56]	; 0x38
   37f60:	blt	37f90 <GetDataSlab+0x15b54>
   37f64:	ldr	r0, [sp, #56]	; 0x38
   37f68:	add	r0, r5, r0, lsl #1
   37f6c:	mov	ip, r1
   37f70:	ldr	r1, [sp, #60]	; 0x3c
   37f74:	ldrsh	r2, [r0], r4
   37f78:	asr	r3, r2, #31
   37f7c:	strd	r2, [r1]
   37f80:	subs	ip, ip, #1
   37f84:	add	r1, r1, #8
   37f88:	bne	37f74 <GetDataSlab+0x15b38>
   37f8c:	ldr	r0, [sp, #36]	; 0x24
   37f90:	ldr	r2, [sp, #48]	; 0x30
   37f94:	add	r1, r5, r2, lsl #1
   37f98:	add	r5, r1, r0, lsl #1
   37f9c:	add	r0, r0, sl
   37fa0:	add	sl, r0, r2
   37fa4:	ldr	r0, [fp, #24]
   37fa8:	cmp	r0, #2
   37fac:	blt	38050 <GetDataSlab+0x15c14>
   37fb0:	mov	r1, #0
   37fb4:	ldr	ip, [sp, #60]	; 0x3c
   37fb8:	mov	r0, r1
   37fbc:	ldr	r1, [r6, r1, lsl #2]
   37fc0:	add	r1, r1, #1
   37fc4:	str	r1, [r6, r0, lsl #2]
   37fc8:	ldr	r2, [r9, r0, lsl #2]
   37fcc:	sdiv	r3, r1, r2
   37fd0:	mls	r1, r3, r2, r1
   37fd4:	cmp	r1, #0
   37fd8:	bne	38058 <GetDataSlab+0x15c1c>
   37fdc:	mov	r1, #0
   37fe0:	str	r1, [r6, r0, lsl #2]
   37fe4:	add	r7, sp, #64	; 0x40
   37fe8:	add	r1, r7, r0, lsl #2
   37fec:	ldr	r1, [r1, #4]
   37ff0:	sdiv	r2, sl, r1
   37ff4:	mls	r3, r2, r1, sl
   37ff8:	cmp	r3, #0
   37ffc:	beq	38018 <GetDataSlab+0x15bdc>
   38000:	ldr	r2, [r7, r0, lsl #2]
   38004:	ldr	r7, [lr, r0, lsl #2]
   38008:	sub	r1, r1, r3
   3800c:	mla	r1, r7, r2, r1
   38010:	add	sl, r1, sl
   38014:	b	38034 <GetDataSlab+0x15bf8>
   38018:	ldr	r1, [lr, r0, lsl #2]
   3801c:	cmp	r1, #0
   38020:	beq	38038 <GetDataSlab+0x15bfc>
   38024:	add	r2, sp, #64	; 0x40
   38028:	ldr	r2, [r2, r0, lsl #2]
   3802c:	mla	sl, r2, r1, sl
   38030:	mul	r1, r2, r1
   38034:	add	r5, r5, r1, lsl #1
   38038:	add	r1, r0, #1
   3803c:	add	r0, r0, #2
   38040:	ldr	r2, [fp, #24]
   38044:	cmp	r0, r2
   38048:	blt	37fb8 <GetDataSlab+0x15b7c>
   3804c:	b	38068 <GetDataSlab+0x15c2c>
   38050:	ldr	ip, [sp, #60]	; 0x3c
   38054:	b	38068 <GetDataSlab+0x15c2c>
   38058:	ldr	r1, [sp, #32]
   3805c:	ldr	r0, [r1, r0, lsl #2]
   38060:	add	r5, r5, r0, lsl #1
   38064:	add	sl, r0, sl
   38068:	ldr	r0, [sp, #40]	; 0x28
   3806c:	add	ip, ip, r0
   38070:	str	ip, [sp, #60]	; 0x3c
   38074:	ldr	r1, [sp, #44]	; 0x2c
   38078:	add	r8, r8, r1
   3807c:	mov	r0, #0
   38080:	ldr	r2, [sp, #52]	; 0x34
   38084:	cmp	r8, r2
   38088:	blt	37f58 <GetDataSlab+0x15b1c>
   3808c:	b	22560 <GetDataSlab+0x124>
   38090:	ldr	r0, [sp, #56]	; 0x38
   38094:	cmp	r0, #1
   38098:	ldr	r3, [sp, #52]	; 0x34
   3809c:	blt	3ae3c <GetDataSlab+0x18a00>
   380a0:	ldr	r0, [sp, #44]	; 0x2c
   380a4:	mls	r0, r3, r5, r0
   380a8:	ldr	r1, [r9], #4
   380ac:	mov	r8, r9
   380b0:	sub	r0, r0, r1
   380b4:	str	r0, [sp, #40]	; 0x28
   380b8:	add	lr, r4, #4
   380bc:	add	r0, sp, #104	; 0x68
   380c0:	orr	r6, r0, #4
   380c4:	sub	r0, fp, #72	; 0x48
   380c8:	orr	r0, r0, #4
   380cc:	str	r0, [sp, #28]
   380d0:	str	r1, [sp, #44]	; 0x2c
   380d4:	mla	r0, r3, r5, r1
   380d8:	str	r0, [sp, #32]
   380dc:	lsl	r0, r3, #3
   380e0:	str	r0, [sp, #36]	; 0x24
   380e4:	lsl	r4, r5, #1
   380e8:	mov	sl, #0
   380ec:	mov	r0, #0
   380f0:	str	r0, [sp, #48]	; 0x30
   380f4:	cmp	r3, #1
   380f8:	ldr	r0, [sp, #44]	; 0x2c
   380fc:	blt	38124 <GetDataSlab+0x15ce8>
   38100:	ldr	r0, [sp, #44]	; 0x2c
   38104:	add	r1, ip, r0, lsl #1
   38108:	ldr	r7, [sp, #60]	; 0x3c
   3810c:	ldrh	r0, [r1], r4
   38110:	stm	r7, {r0, sl}
   38114:	subs	r3, r3, #1
   38118:	add	r7, r7, #8
   3811c:	bne	3810c <GetDataSlab+0x15cd0>
   38120:	ldr	r0, [sp, #32]
   38124:	ldr	r3, [sp, #40]	; 0x28
   38128:	add	r1, ip, r3, lsl #1
   3812c:	add	ip, r1, r0, lsl #1
   38130:	add	r0, r0, r2
   38134:	add	r2, r0, r3
   38138:	ldr	r0, [fp, #24]
   3813c:	cmp	r0, #2
   38140:	blt	381f0 <GetDataSlab+0x15db4>
   38144:	mov	r9, #0
   38148:	mov	r0, r9
   3814c:	ldr	r1, [r6, r9, lsl #2]
   38150:	add	r1, r1, #1
   38154:	str	r1, [r6, r9, lsl #2]
   38158:	ldr	r3, [lr, r9, lsl #2]
   3815c:	sdiv	r7, r1, r3
   38160:	mls	r1, r7, r3, r1
   38164:	cmp	r1, #0
   38168:	bne	381e0 <GetDataSlab+0x15da4>
   3816c:	str	sl, [r6, r0, lsl #2]
   38170:	add	r5, sp, #64	; 0x40
   38174:	add	r1, r5, r0, lsl #2
   38178:	ldr	r3, [r1, #4]
   3817c:	sdiv	r1, r2, r3
   38180:	mls	r7, r1, r3, r2
   38184:	cmp	r7, #0
   38188:	beq	381a4 <GetDataSlab+0x15d68>
   3818c:	ldr	r1, [r5, r0, lsl #2]
   38190:	ldr	r5, [r8, r0, lsl #2]
   38194:	sub	r3, r3, r7
   38198:	mla	r1, r5, r1, r3
   3819c:	add	r2, r1, r2
   381a0:	b	381c4 <GetDataSlab+0x15d88>
   381a4:	mov	r1, r8
   381a8:	ldr	r3, [r8, r0, lsl #2]
   381ac:	cmp	r3, #0
   381b0:	beq	381c8 <GetDataSlab+0x15d8c>
   381b4:	add	r1, sp, #64	; 0x40
   381b8:	ldr	r1, [r1, r0, lsl #2]
   381bc:	mla	r2, r1, r3, r2
   381c0:	mul	r1, r1, r3
   381c4:	add	ip, ip, r1, lsl #1
   381c8:	add	r9, r0, #1
   381cc:	add	r0, r0, #2
   381d0:	ldr	r1, [fp, #24]
   381d4:	cmp	r0, r1
   381d8:	blt	38148 <GetDataSlab+0x15d0c>
   381dc:	b	381f0 <GetDataSlab+0x15db4>
   381e0:	ldr	r1, [sp, #28]
   381e4:	ldr	r0, [r1, r0, lsl #2]
   381e8:	add	ip, ip, r0, lsl #1
   381ec:	add	r2, r0, r2
   381f0:	ldr	r0, [sp, #60]	; 0x3c
   381f4:	ldr	r1, [sp, #36]	; 0x24
   381f8:	add	r0, r0, r1
   381fc:	str	r0, [sp, #60]	; 0x3c
   38200:	ldr	r3, [sp, #52]	; 0x34
   38204:	ldr	r5, [sp, #48]	; 0x30
   38208:	add	r5, r5, r3
   3820c:	mov	r0, #0
   38210:	ldr	r1, [sp, #56]	; 0x38
   38214:	str	r5, [sp, #48]	; 0x30
   38218:	cmp	r5, r1
   3821c:	blt	380f4 <GetDataSlab+0x15cb8>
   38220:	b	22560 <GetDataSlab+0x124>
   38224:	ldr	r0, [sp, #44]	; 0x2c
   38228:	cmp	r0, #1
   3822c:	ldr	sl, [sp, #40]	; 0x28
   38230:	blt	3ae3c <GetDataSlab+0x18a00>
   38234:	ldr	r0, [sp, #52]	; 0x34
   38238:	mls	r0, sl, ip, r0
   3823c:	str	r0, [sp, #36]	; 0x24
   38240:	add	r0, r9, #4
   38244:	str	r0, [sp, #52]	; 0x34
   38248:	add	r9, r4, #4
   3824c:	add	r0, sp, #104	; 0x68
   38250:	orr	r6, r0, #4
   38254:	sub	r0, fp, #72	; 0x48
   38258:	orr	r0, r0, #4
   3825c:	str	r0, [sp, #24]
   38260:	mul	r0, sl, ip
   38264:	str	r0, [sp, #28]
   38268:	lsl	r0, sl, #3
   3826c:	str	r0, [sp, #32]
   38270:	lsl	r8, ip, #2
   38274:	mov	r0, #0
   38278:	str	r0, [sp, #48]	; 0x30
   3827c:	ldr	r0, [fp, #12]
   38280:	ldr	r0, [r0]
   38284:	cmp	sl, #1
   38288:	blt	382d0 <GetDataSlab+0x15e94>
   3828c:	ldr	r1, [sp, #28]
   38290:	add	r2, r1, r3
   38294:	add	r1, lr, r1, lsl #2
   38298:	add	r3, lr, r0, lsl #2
   3829c:	mov	ip, sl
   382a0:	ldr	sl, [sp, #60]	; 0x3c
   382a4:	ldr	r4, [r3], r8
   382a8:	asr	r5, r4, #31
   382ac:	strd	r4, [sl]
   382b0:	subs	ip, ip, #1
   382b4:	add	sl, sl, #8
   382b8:	bne	382a4 <GetDataSlab+0x15e68>
   382bc:	add	r2, r2, r0
   382c0:	mov	lr, r1
   382c4:	add	r1, sp, #64	; 0x40
   382c8:	ldr	sl, [sp, #40]	; 0x28
   382cc:	b	382d8 <GetDataSlab+0x15e9c>
   382d0:	add	r2, r0, r3
   382d4:	add	r1, sp, #64	; 0x40
   382d8:	ldr	r3, [sp, #36]	; 0x24
   382dc:	add	lr, lr, r3, lsl #2
   382e0:	sub	r0, r3, r0
   382e4:	add	r3, r2, r0
   382e8:	ldr	r0, [fp, #24]
   382ec:	cmp	r0, #2
   382f0:	ldr	ip, [sp, #60]	; 0x3c
   382f4:	blt	383a4 <GetDataSlab+0x15f68>
   382f8:	mov	r2, #0
   382fc:	mov	r0, r2
   38300:	ldr	r2, [r6, r2, lsl #2]
   38304:	add	r2, r2, #1
   38308:	str	r2, [r6, r0, lsl #2]
   3830c:	ldr	r5, [r9, r0, lsl #2]
   38310:	sdiv	r4, r2, r5
   38314:	mls	r2, r4, r5, r2
   38318:	cmp	r2, #0
   3831c:	bne	38394 <GetDataSlab+0x15f58>
   38320:	mov	r2, #0
   38324:	str	r2, [r6, r0, lsl #2]
   38328:	add	r2, r1, r0, lsl #2
   3832c:	ldr	r2, [r2, #4]
   38330:	sdiv	r5, r3, r2
   38334:	mls	r4, r5, r2, r3
   38338:	cmp	r4, #0
   3833c:	beq	3835c <GetDataSlab+0x15f20>
   38340:	ldr	r5, [r1, r0, lsl #2]
   38344:	ldr	r7, [sp, #52]	; 0x34
   38348:	ldr	r7, [r7, r0, lsl #2]
   3834c:	sub	r2, r2, r4
   38350:	mla	r2, r7, r5, r2
   38354:	add	r3, r2, r3
   38358:	b	38378 <GetDataSlab+0x15f3c>
   3835c:	ldr	r2, [sp, #52]	; 0x34
   38360:	ldr	r2, [r2, r0, lsl #2]
   38364:	cmp	r2, #0
   38368:	beq	3837c <GetDataSlab+0x15f40>
   3836c:	ldr	r7, [r1, r0, lsl #2]
   38370:	mla	r3, r7, r2, r3
   38374:	mul	r2, r7, r2
   38378:	add	lr, lr, r2, lsl #2
   3837c:	add	r2, r0, #1
   38380:	add	r0, r0, #2
   38384:	ldr	r4, [fp, #24]
   38388:	cmp	r0, r4
   3838c:	blt	382fc <GetDataSlab+0x15ec0>
   38390:	b	383a4 <GetDataSlab+0x15f68>
   38394:	ldr	r1, [sp, #24]
   38398:	ldr	r0, [r1, r0, lsl #2]
   3839c:	add	lr, lr, r0, lsl #2
   383a0:	add	r3, r0, r3
   383a4:	ldr	r0, [sp, #32]
   383a8:	add	ip, ip, r0
   383ac:	str	ip, [sp, #60]	; 0x3c
   383b0:	ldr	r2, [sp, #48]	; 0x30
   383b4:	add	r2, r2, sl
   383b8:	mov	r0, #0
   383bc:	ldr	r1, [sp, #44]	; 0x2c
   383c0:	str	r2, [sp, #48]	; 0x30
   383c4:	cmp	r2, r1
   383c8:	blt	3827c <GetDataSlab+0x15e40>
   383cc:	b	22560 <GetDataSlab+0x124>
   383d0:	ldr	r0, [sp, #52]	; 0x34
   383d4:	cmp	r0, #1
   383d8:	ldr	r2, [sp, #44]	; 0x2c
   383dc:	blt	3ae3c <GetDataSlab+0x18a00>
   383e0:	ldr	r0, [sp, #40]	; 0x28
   383e4:	mls	r0, r2, ip, r0
   383e8:	str	r0, [sp, #40]	; 0x28
   383ec:	add	sl, r9, #4
   383f0:	add	r9, r4, #4
   383f4:	add	r0, sp, #104	; 0x68
   383f8:	orr	r7, r0, #4
   383fc:	sub	r0, fp, #72	; 0x48
   38400:	orr	r0, r0, #4
   38404:	str	r0, [sp, #24]
   38408:	mul	r0, r2, ip
   3840c:	str	r0, [sp, #28]
   38410:	lsl	r0, r2, #3
   38414:	str	r0, [sp, #36]	; 0x24
   38418:	lsl	r8, ip, #2
   3841c:	mov	ip, #0
   38420:	mov	r0, #0
   38424:	str	r0, [sp, #48]	; 0x30
   38428:	str	sl, [sp, #32]
   3842c:	ldr	r0, [fp, #12]
   38430:	ldr	r0, [r0]
   38434:	cmp	r2, #1
   38438:	blt	38478 <GetDataSlab+0x1603c>
   3843c:	ldr	r1, [sp, #28]
   38440:	add	r4, r1, r3
   38444:	add	r3, lr, r1, lsl #2
   38448:	add	r5, lr, r0, lsl #2
   3844c:	ldr	sl, [sp, #60]	; 0x3c
   38450:	ldr	r6, [r5], r8
   38454:	stm	sl, {r6, ip}
   38458:	subs	r2, r2, #1
   3845c:	add	sl, sl, #8
   38460:	bne	38450 <GetDataSlab+0x16014>
   38464:	add	r2, r4, r0
   38468:	mov	lr, r3
   3846c:	add	r1, sp, #64	; 0x40
   38470:	ldr	sl, [sp, #32]
   38474:	b	38480 <GetDataSlab+0x16044>
   38478:	add	r2, r0, r3
   3847c:	add	r1, sp, #64	; 0x40
   38480:	ldr	r3, [sp, #40]	; 0x28
   38484:	add	lr, lr, r3, lsl #2
   38488:	sub	r0, r3, r0
   3848c:	add	r3, r2, r0
   38490:	ldr	r0, [fp, #24]
   38494:	cmp	r0, #2
   38498:	blt	3853c <GetDataSlab+0x16100>
   3849c:	mov	r2, #0
   384a0:	mov	r0, r2
   384a4:	ldr	r2, [r7, r2, lsl #2]
   384a8:	add	r2, r2, #1
   384ac:	str	r2, [r7, r0, lsl #2]
   384b0:	ldr	r4, [r9, r0, lsl #2]
   384b4:	sdiv	r6, r2, r4
   384b8:	mls	r2, r6, r4, r2
   384bc:	cmp	r2, #0
   384c0:	bne	3852c <GetDataSlab+0x160f0>
   384c4:	str	ip, [r7, r0, lsl #2]
   384c8:	add	r2, r1, r0, lsl #2
   384cc:	ldr	r2, [r2, #4]
   384d0:	sdiv	r4, r3, r2
   384d4:	mls	r4, r4, r2, r3
   384d8:	cmp	r4, #0
   384dc:	beq	384f8 <GetDataSlab+0x160bc>
   384e0:	ldr	r6, [r1, r0, lsl #2]
   384e4:	ldr	r5, [sl, r0, lsl #2]
   384e8:	sub	r2, r2, r4
   384ec:	mla	r2, r5, r6, r2
   384f0:	add	r3, r2, r3
   384f4:	b	38510 <GetDataSlab+0x160d4>
   384f8:	ldr	r2, [sl, r0, lsl #2]
   384fc:	cmp	r2, #0
   38500:	beq	38514 <GetDataSlab+0x160d8>
   38504:	ldr	r4, [r1, r0, lsl #2]
   38508:	mla	r3, r4, r2, r3
   3850c:	mul	r2, r4, r2
   38510:	add	lr, lr, r2, lsl #2
   38514:	add	r2, r0, #1
   38518:	add	r0, r0, #2
   3851c:	ldr	r4, [fp, #24]
   38520:	cmp	r0, r4
   38524:	blt	384a0 <GetDataSlab+0x16064>
   38528:	b	3853c <GetDataSlab+0x16100>
   3852c:	ldr	r1, [sp, #24]
   38530:	ldr	r0, [r1, r0, lsl #2]
   38534:	add	lr, lr, r0, lsl #2
   38538:	add	r3, r0, r3
   3853c:	ldr	r0, [sp, #60]	; 0x3c
   38540:	ldr	r1, [sp, #36]	; 0x24
   38544:	add	r0, r0, r1
   38548:	str	r0, [sp, #60]	; 0x3c
   3854c:	ldr	r2, [sp, #44]	; 0x2c
   38550:	ldr	r4, [sp, #48]	; 0x30
   38554:	add	r4, r4, r2
   38558:	mov	r0, #0
   3855c:	ldr	r1, [sp, #52]	; 0x34
   38560:	str	r4, [sp, #48]	; 0x30
   38564:	cmp	r4, r1
   38568:	blt	3842c <GetDataSlab+0x15ff0>
   3856c:	b	22560 <GetDataSlab+0x124>
   38570:	ldr	r0, [sp, #44]	; 0x2c
   38574:	cmp	r0, #1
   38578:	ldr	sl, [sp, #40]	; 0x28
   3857c:	blt	3ae3c <GetDataSlab+0x18a00>
   38580:	ldr	r0, [sp, #36]	; 0x24
   38584:	mls	r0, sl, ip, r0
   38588:	ldr	r1, [r9], #4
   3858c:	str	r9, [sp, #56]	; 0x38
   38590:	sub	r0, r0, r1
   38594:	str	r0, [sp, #32]
   38598:	ldr	r0, [fp, #20]
   3859c:	add	r0, r0, #4
   385a0:	str	r0, [sp, #52]	; 0x34
   385a4:	add	r0, sp, #104	; 0x68
   385a8:	orr	r6, r0, #4
   385ac:	sub	r0, fp, #72	; 0x48
   385b0:	orr	r0, r0, #4
   385b4:	str	r0, [sp, #20]
   385b8:	str	r1, [sp, #36]	; 0x24
   385bc:	mla	r0, sl, ip, r1
   385c0:	str	r0, [sp, #24]
   385c4:	lsl	r0, sl, #3
   385c8:	str	r0, [sp, #28]
   385cc:	lsl	r8, ip, #2
   385d0:	mov	r0, #0
   385d4:	str	r0, [sp, #48]	; 0x30
   385d8:	cmp	sl, #1
   385dc:	ldr	r0, [sp, #36]	; 0x24
   385e0:	blt	38610 <GetDataSlab+0x161d4>
   385e4:	ldr	r0, [sp, #36]	; 0x24
   385e8:	add	r7, r5, r0, lsl #2
   385ec:	ldr	r9, [sp, #60]	; 0x3c
   385f0:	ldr	r0, [r7], r8
   385f4:	bl	48e68 <__aeabi_f2ulz>
   385f8:	strd	r0, [r9]
   385fc:	subs	sl, sl, #1
   38600:	add	r9, r9, #8
   38604:	bne	385f0 <GetDataSlab+0x161b4>
   38608:	ldr	r0, [sp, #24]
   3860c:	ldr	sl, [sp, #40]	; 0x28
   38610:	ldr	r2, [sp, #32]
   38614:	add	r1, r5, r2, lsl #2
   38618:	add	r5, r1, r0, lsl #2
   3861c:	add	r0, r0, r4
   38620:	add	r4, r0, r2
   38624:	ldr	r0, [fp, #24]
   38628:	cmp	r0, #2
   3862c:	ldr	ip, [sp, #60]	; 0x3c
   38630:	add	r9, sp, #64	; 0x40
   38634:	blt	386e4 <GetDataSlab+0x162a8>
   38638:	mov	r1, #0
   3863c:	ldr	lr, [sp, #56]	; 0x38
   38640:	mov	r0, r1
   38644:	ldr	r1, [r6, r1, lsl #2]
   38648:	add	r1, r1, #1
   3864c:	str	r1, [r6, r0, lsl #2]
   38650:	ldr	r2, [sp, #52]	; 0x34
   38654:	ldr	r2, [r2, r0, lsl #2]
   38658:	sdiv	r3, r1, r2
   3865c:	mls	r1, r3, r2, r1
   38660:	cmp	r1, #0
   38664:	bne	386d4 <GetDataSlab+0x16298>
   38668:	mov	r1, #0
   3866c:	str	r1, [r6, r0, lsl #2]
   38670:	add	r1, r9, r0, lsl #2
   38674:	ldr	r1, [r1, #4]
   38678:	sdiv	r2, r4, r1
   3867c:	mls	r2, r2, r1, r4
   38680:	cmp	r2, #0
   38684:	beq	386a0 <GetDataSlab+0x16264>
   38688:	ldr	r3, [r9, r0, lsl #2]
   3868c:	ldr	r7, [lr, r0, lsl #2]
   38690:	sub	r1, r1, r2
   38694:	mla	r1, r7, r3, r1
   38698:	add	r4, r1, r4
   3869c:	b	386b8 <GetDataSlab+0x1627c>
   386a0:	ldr	r1, [lr, r0, lsl #2]
   386a4:	cmp	r1, #0
   386a8:	beq	386bc <GetDataSlab+0x16280>
   386ac:	ldr	r2, [r9, r0, lsl #2]
   386b0:	mla	r4, r2, r1, r4
   386b4:	mul	r1, r2, r1
   386b8:	add	r5, r5, r1, lsl #2
   386bc:	add	r1, r0, #1
   386c0:	add	r0, r0, #2
   386c4:	ldr	r2, [fp, #24]
   386c8:	cmp	r0, r2
   386cc:	blt	38640 <GetDataSlab+0x16204>
   386d0:	b	386e4 <GetDataSlab+0x162a8>
   386d4:	ldr	r1, [sp, #20]
   386d8:	ldr	r0, [r1, r0, lsl #2]
   386dc:	add	r5, r5, r0, lsl #2
   386e0:	add	r4, r0, r4
   386e4:	ldr	r0, [sp, #28]
   386e8:	add	ip, ip, r0
   386ec:	str	ip, [sp, #60]	; 0x3c
   386f0:	ldr	r2, [sp, #48]	; 0x30
   386f4:	add	r2, r2, sl
   386f8:	mov	r0, #0
   386fc:	ldr	r1, [sp, #44]	; 0x2c
   38700:	str	r2, [sp, #48]	; 0x30
   38704:	cmp	r2, r1
   38708:	blt	385d8 <GetDataSlab+0x1619c>
   3870c:	b	22560 <GetDataSlab+0x124>
   38710:	ldr	r0, [sp, #44]	; 0x2c
   38714:	cmp	r0, #1
   38718:	ldr	r8, [sp, #40]	; 0x28
   3871c:	blt	3ae3c <GetDataSlab+0x18a00>
   38720:	ldr	r0, [sp, #36]	; 0x24
   38724:	mls	r0, r8, ip, r0
   38728:	ldr	r1, [r9], #4
   3872c:	str	r9, [sp, #56]	; 0x38
   38730:	mov	r9, r1
   38734:	sub	r0, r0, r1
   38738:	str	r0, [sp, #36]	; 0x24
   3873c:	ldr	r0, [fp, #20]
   38740:	add	r0, r0, #4
   38744:	str	r0, [sp, #52]	; 0x34
   38748:	add	r0, sp, #104	; 0x68
   3874c:	orr	r6, r0, #4
   38750:	sub	r0, fp, #72	; 0x48
   38754:	orr	r0, r0, #4
   38758:	str	r0, [sp, #20]
   3875c:	mla	r0, r8, ip, r1
   38760:	str	r0, [sp, #24]
   38764:	lsl	r0, r8, #3
   38768:	str	r0, [sp, #32]
   3876c:	lsl	sl, ip, #3
   38770:	mov	r0, #0
   38774:	str	r0, [sp, #48]	; 0x30
   38778:	str	r1, [sp, #28]
   3877c:	cmp	r8, #1
   38780:	mov	r0, r9
   38784:	blt	387bc <GetDataSlab+0x16380>
   38788:	add	r7, r5, r9, lsl #3
   3878c:	ldr	r9, [sp, #60]	; 0x3c
   38790:	vldr	d16, [r7]
   38794:	vmov	r0, r1, d16
   38798:	bl	48ea8 <__aeabi_d2ulz>
   3879c:	strd	r0, [r9]
   387a0:	add	r7, r7, sl
   387a4:	subs	r8, r8, #1
   387a8:	add	r9, r9, #8
   387ac:	bne	38790 <GetDataSlab+0x16354>
   387b0:	ldr	r0, [sp, #24]
   387b4:	ldr	r8, [sp, #40]	; 0x28
   387b8:	ldr	r9, [sp, #28]
   387bc:	ldr	r2, [sp, #36]	; 0x24
   387c0:	add	r1, r5, r2, lsl #3
   387c4:	add	r5, r1, r0, lsl #3
   387c8:	add	r0, r0, r4
   387cc:	add	r4, r0, r2
   387d0:	ldr	r0, [fp, #24]
   387d4:	cmp	r0, #2
   387d8:	ldr	ip, [sp, #60]	; 0x3c
   387dc:	blt	38894 <GetDataSlab+0x16458>
   387e0:	mov	r1, #0
   387e4:	ldr	lr, [sp, #56]	; 0x38
   387e8:	mov	r0, r1
   387ec:	ldr	r1, [r6, r1, lsl #2]
   387f0:	add	r1, r1, #1
   387f4:	str	r1, [r6, r0, lsl #2]
   387f8:	ldr	r2, [sp, #52]	; 0x34
   387fc:	ldr	r2, [r2, r0, lsl #2]
   38800:	sdiv	r3, r1, r2
   38804:	mls	r1, r3, r2, r1
   38808:	cmp	r1, #0
   3880c:	bne	38884 <GetDataSlab+0x16448>
   38810:	mov	r1, #0
   38814:	str	r1, [r6, r0, lsl #2]
   38818:	add	r3, sp, #64	; 0x40
   3881c:	add	r1, r3, r0, lsl #2
   38820:	ldr	r1, [r1, #4]
   38824:	sdiv	r2, r4, r1
   38828:	mls	r2, r2, r1, r4
   3882c:	cmp	r2, #0
   38830:	beq	3884c <GetDataSlab+0x16410>
   38834:	ldr	r3, [r3, r0, lsl #2]
   38838:	ldr	r7, [lr, r0, lsl #2]
   3883c:	sub	r1, r1, r2
   38840:	mla	r1, r7, r3, r1
   38844:	add	r4, r1, r4
   38848:	b	38868 <GetDataSlab+0x1642c>
   3884c:	ldr	r1, [lr, r0, lsl #2]
   38850:	cmp	r1, #0
   38854:	beq	3886c <GetDataSlab+0x16430>
   38858:	add	r2, sp, #64	; 0x40
   3885c:	ldr	r2, [r2, r0, lsl #2]
   38860:	mla	r4, r2, r1, r4
   38864:	mul	r1, r2, r1
   38868:	add	r5, r5, r1, lsl #3
   3886c:	add	r1, r0, #1
   38870:	add	r0, r0, #2
   38874:	ldr	r2, [fp, #24]
   38878:	cmp	r0, r2
   3887c:	blt	387e8 <GetDataSlab+0x163ac>
   38880:	b	38894 <GetDataSlab+0x16458>
   38884:	ldr	r1, [sp, #20]
   38888:	ldr	r0, [r1, r0, lsl #2]
   3888c:	add	r5, r5, r0, lsl #3
   38890:	add	r4, r0, r4
   38894:	ldr	r0, [sp, #32]
   38898:	add	ip, ip, r0
   3889c:	str	ip, [sp, #60]	; 0x3c
   388a0:	ldr	r2, [sp, #48]	; 0x30
   388a4:	add	r2, r2, r8
   388a8:	mov	r0, #0
   388ac:	ldr	r1, [sp, #44]	; 0x2c
   388b0:	str	r2, [sp, #48]	; 0x30
   388b4:	cmp	r2, r1
   388b8:	blt	3877c <GetDataSlab+0x16340>
   388bc:	b	22560 <GetDataSlab+0x124>
   388c0:	ldr	r0, [sp, #40]	; 0x28
   388c4:	cmp	r0, #1
   388c8:	ldr	r2, [sp, #44]	; 0x2c
   388cc:	blt	3aa40 <GetDataSlab+0x18604>
   388d0:	ldr	r0, [sp, #36]	; 0x24
   388d4:	mls	r0, r2, r3, r0
   388d8:	mov	r6, r9
   388dc:	ldr	r1, [r6], #4
   388e0:	sub	r0, r0, r1
   388e4:	str	r0, [sp, #32]
   388e8:	add	r5, r4, #4
   388ec:	add	r0, sp, #104	; 0x68
   388f0:	orr	r4, r0, #4
   388f4:	sub	r0, fp, #72	; 0x48
   388f8:	orr	r0, r0, #4
   388fc:	str	r0, [sp, #20]
   38900:	str	r1, [sp, #36]	; 0x24
   38904:	mla	r0, r2, r3, r1
   38908:	str	r0, [sp, #24]
   3890c:	lsl	r0, r2, #3
   38910:	str	r0, [sp, #28]
   38914:	lsl	r8, r3, #3
   38918:	ldr	sl, [sp, #60]	; 0x3c
   3891c:	mov	r9, #0
   38920:	cmp	r2, #1
   38924:	ldr	r0, [sp, #36]	; 0x24
   38928:	blt	38954 <GetDataSlab+0x16518>
   3892c:	ldr	r0, [sp, #36]	; 0x24
   38930:	add	r0, ip, r0, lsl #3
   38934:	mov	r7, sl
   38938:	ldm	r0, {r1, r3}
   3893c:	stm	r7, {r1, r3}
   38940:	add	r0, r0, r8
   38944:	subs	r2, r2, #1
   38948:	add	r7, r7, #8
   3894c:	bne	38938 <GetDataSlab+0x164fc>
   38950:	ldr	r0, [sp, #24]
   38954:	ldr	r2, [sp, #32]
   38958:	add	r1, ip, r2, lsl #3
   3895c:	add	ip, r1, r0, lsl #3
   38960:	add	r0, r0, lr
   38964:	add	lr, r0, r2
   38968:	ldr	r0, [fp, #24]
   3896c:	cmp	r0, #2
   38970:	blt	38a20 <GetDataSlab+0x165e4>
   38974:	mov	r7, #0
   38978:	mov	r0, r7
   3897c:	ldr	r1, [r4, r7, lsl #2]
   38980:	add	r1, r1, #1
   38984:	str	r1, [r4, r7, lsl #2]
   38988:	ldr	r2, [r5, r7, lsl #2]
   3898c:	sdiv	r3, r1, r2
   38990:	mls	r1, r3, r2, r1
   38994:	cmp	r1, #0
   38998:	bne	38a10 <GetDataSlab+0x165d4>
   3899c:	mov	r1, #0
   389a0:	str	r1, [r4, r0, lsl #2]
   389a4:	add	r3, sp, #64	; 0x40
   389a8:	add	r1, r3, r0, lsl #2
   389ac:	ldr	r2, [r1, #4]
   389b0:	sdiv	r1, lr, r2
   389b4:	mls	r7, r1, r2, lr
   389b8:	cmp	r7, #0
   389bc:	beq	389d8 <GetDataSlab+0x1659c>
   389c0:	ldr	r1, [r3, r0, lsl #2]
   389c4:	ldr	r3, [r6, r0, lsl #2]
   389c8:	sub	r2, r2, r7
   389cc:	mla	r1, r3, r1, r2
   389d0:	add	lr, r1, lr
   389d4:	b	389f4 <GetDataSlab+0x165b8>
   389d8:	ldr	r2, [r6, r0, lsl #2]
   389dc:	cmp	r2, #0
   389e0:	beq	389f8 <GetDataSlab+0x165bc>
   389e4:	add	r1, sp, #64	; 0x40
   389e8:	ldr	r1, [r1, r0, lsl #2]
   389ec:	mla	lr, r1, r2, lr
   389f0:	mul	r1, r1, r2
   389f4:	add	ip, ip, r1, lsl #3
   389f8:	add	r7, r0, #1
   389fc:	add	r0, r0, #2
   38a00:	ldr	r1, [fp, #24]
   38a04:	cmp	r0, r1
   38a08:	blt	38978 <GetDataSlab+0x1653c>
   38a0c:	b	38a20 <GetDataSlab+0x165e4>
   38a10:	ldr	r1, [sp, #20]
   38a14:	ldr	r0, [r1, r0, lsl #2]
   38a18:	add	ip, ip, r0, lsl #3
   38a1c:	add	lr, r0, lr
   38a20:	ldr	r0, [sp, #28]
   38a24:	add	sl, sl, r0
   38a28:	ldr	r2, [sp, #44]	; 0x2c
   38a2c:	add	r9, r9, r2
   38a30:	ldr	r0, [sp, #40]	; 0x28
   38a34:	cmp	r9, r0
   38a38:	blt	38920 <GetDataSlab+0x164e4>
   38a3c:	mov	r0, #0
   38a40:	ldr	r4, [fp, #20]
   38a44:	b	3aa44 <GetDataSlab+0x18608>
   38a48:	ldr	r9, [fp, #12]
   38a4c:	ldr	sl, [sp, #48]	; 0x30
   38a50:	add	ip, sl, r2, lsl #3
   38a54:	cmp	lr, #1
   38a58:	bne	39018 <GetDataSlab+0x16bdc>
   38a5c:	ldr	r0, [sp, #44]	; 0x2c
   38a60:	cmp	r0, #1
   38a64:	blt	3ae3c <GetDataSlab+0x18a00>
   38a68:	add	sl, r9, #4
   38a6c:	add	r8, r4, #4
   38a70:	add	r0, sp, #104	; 0x68
   38a74:	orr	r5, r0, #4
   38a78:	sub	r0, fp, #72	; 0x48
   38a7c:	orr	r0, r0, #4
   38a80:	str	r0, [sp, #52]	; 0x34
   38a84:	mov	lr, #0
   38a88:	ldr	r0, [fp, #12]
   38a8c:	ldr	r0, [r0]
   38a90:	add	r9, r0, r2
   38a94:	add	r3, ip, r0, lsl #3
   38a98:	ldr	r0, [r4]
   38a9c:	cmp	r0, #1
   38aa0:	blt	38acc <GetDataSlab+0x16690>
   38aa4:	ldr	r0, [sp, #60]	; 0x3c
   38aa8:	add	r7, r0, lr
   38aac:	mov	r2, #0
   38ab0:	mov	r1, r3
   38ab4:	ldrb	r0, [r1], #8
   38ab8:	strb	r0, [r7, r2]
   38abc:	add	r2, r2, #1
   38ac0:	ldr	r0, [r4]
   38ac4:	cmp	r2, r0
   38ac8:	blt	38ab4 <GetDataSlab+0x16678>
   38acc:	ldr	r1, [fp, #12]
   38ad0:	ldr	r1, [r1]
   38ad4:	ldr	r2, [fp, #8]
   38ad8:	ldr	r2, [r2]
   38adc:	sub	r1, r2, r1
   38ae0:	add	ip, r3, r1, lsl #3
   38ae4:	add	r2, r9, r1
   38ae8:	ldr	r1, [fp, #24]
   38aec:	cmp	r1, #2
   38af0:	blt	38ba0 <GetDataSlab+0x16764>
   38af4:	mov	r1, #0
   38af8:	mov	r9, #0
   38afc:	mov	r7, r1
   38b00:	ldr	r1, [r5, r1, lsl #2]
   38b04:	add	r1, r1, #1
   38b08:	str	r1, [r5, r7, lsl #2]
   38b0c:	ldr	r4, [r8, r7, lsl #2]
   38b10:	sdiv	r6, r1, r4
   38b14:	mls	r1, r6, r4, r1
   38b18:	cmp	r1, #0
   38b1c:	bne	38b90 <GetDataSlab+0x16754>
   38b20:	str	r9, [r5, r7, lsl #2]
   38b24:	add	r3, sp, #64	; 0x40
   38b28:	add	r1, r3, r7, lsl #2
   38b2c:	ldr	r1, [r1, #4]
   38b30:	sdiv	r4, r2, r1
   38b34:	mls	r4, r4, r1, r2
   38b38:	cmp	r4, #0
   38b3c:	beq	38b58 <GetDataSlab+0x1671c>
   38b40:	ldr	r6, [r3, r7, lsl #2]
   38b44:	ldr	r3, [sl, r7, lsl #2]
   38b48:	sub	r1, r1, r4
   38b4c:	mla	r1, r3, r6, r1
   38b50:	add	r2, r1, r2
   38b54:	b	38b74 <GetDataSlab+0x16738>
   38b58:	ldr	r1, [sl, r7, lsl #2]
   38b5c:	cmp	r1, #0
   38b60:	beq	38b78 <GetDataSlab+0x1673c>
   38b64:	add	r3, sp, #64	; 0x40
   38b68:	ldr	r3, [r3, r7, lsl #2]
   38b6c:	mla	r2, r3, r1, r2
   38b70:	mul	r1, r3, r1
   38b74:	add	ip, ip, r1, lsl #3
   38b78:	add	r1, r7, #1
   38b7c:	add	r3, r7, #2
   38b80:	ldr	r4, [fp, #24]
   38b84:	cmp	r3, r4
   38b88:	blt	38afc <GetDataSlab+0x166c0>
   38b8c:	b	38ba0 <GetDataSlab+0x16764>
   38b90:	ldr	r1, [sp, #52]	; 0x34
   38b94:	ldr	r1, [r1, r7, lsl #2]
   38b98:	add	ip, ip, r1, lsl #3
   38b9c:	add	r2, r1, r2
   38ba0:	add	lr, r0, lr
   38ba4:	mov	r0, #0
   38ba8:	ldr	r1, [sp, #44]	; 0x2c
   38bac:	cmp	lr, r1
   38bb0:	ldr	r4, [fp, #20]
   38bb4:	blt	38a88 <GetDataSlab+0x1664c>
   38bb8:	b	22560 <GetDataSlab+0x124>
   38bbc:	ldr	r9, [fp, #12]
   38bc0:	ldr	sl, [sp, #48]	; 0x30
   38bc4:	add	ip, sl, r2, lsl #3
   38bc8:	cmp	lr, #1
   38bcc:	bne	3919c <GetDataSlab+0x16d60>
   38bd0:	ldr	r0, [sp, #44]	; 0x2c
   38bd4:	cmp	r0, #1
   38bd8:	blt	3ae3c <GetDataSlab+0x18a00>
   38bdc:	add	sl, r9, #4
   38be0:	add	r8, r4, #4
   38be4:	add	r0, sp, #104	; 0x68
   38be8:	orr	r5, r0, #4
   38bec:	sub	r0, fp, #72	; 0x48
   38bf0:	orr	r0, r0, #4
   38bf4:	str	r0, [sp, #52]	; 0x34
   38bf8:	mov	lr, #0
   38bfc:	ldr	r0, [fp, #12]
   38c00:	ldr	r0, [r0]
   38c04:	add	r9, r0, r2
   38c08:	add	r3, ip, r0, lsl #3
   38c0c:	ldr	r0, [r4]
   38c10:	cmp	r0, #1
   38c14:	blt	38c40 <GetDataSlab+0x16804>
   38c18:	ldr	r0, [sp, #60]	; 0x3c
   38c1c:	add	r7, r0, lr
   38c20:	mov	r2, #0
   38c24:	mov	r1, r3
   38c28:	ldrb	r0, [r1], #8
   38c2c:	strb	r0, [r7, r2]
   38c30:	add	r2, r2, #1
   38c34:	ldr	r0, [r4]
   38c38:	cmp	r2, r0
   38c3c:	blt	38c28 <GetDataSlab+0x167ec>
   38c40:	ldr	r1, [fp, #12]
   38c44:	ldr	r1, [r1]
   38c48:	ldr	r2, [fp, #8]
   38c4c:	ldr	r2, [r2]
   38c50:	sub	r1, r2, r1
   38c54:	add	ip, r3, r1, lsl #3
   38c58:	add	r2, r9, r1
   38c5c:	ldr	r1, [fp, #24]
   38c60:	cmp	r1, #2
   38c64:	blt	38d14 <GetDataSlab+0x168d8>
   38c68:	mov	r1, #0
   38c6c:	mov	r9, #0
   38c70:	mov	r7, r1
   38c74:	ldr	r1, [r5, r1, lsl #2]
   38c78:	add	r1, r1, #1
   38c7c:	str	r1, [r5, r7, lsl #2]
   38c80:	ldr	r4, [r8, r7, lsl #2]
   38c84:	sdiv	r6, r1, r4
   38c88:	mls	r1, r6, r4, r1
   38c8c:	cmp	r1, #0
   38c90:	bne	38d04 <GetDataSlab+0x168c8>
   38c94:	str	r9, [r5, r7, lsl #2]
   38c98:	add	r3, sp, #64	; 0x40
   38c9c:	add	r1, r3, r7, lsl #2
   38ca0:	ldr	r1, [r1, #4]
   38ca4:	sdiv	r4, r2, r1
   38ca8:	mls	r4, r4, r1, r2
   38cac:	cmp	r4, #0
   38cb0:	beq	38ccc <GetDataSlab+0x16890>
   38cb4:	ldr	r6, [r3, r7, lsl #2]
   38cb8:	ldr	r3, [sl, r7, lsl #2]
   38cbc:	sub	r1, r1, r4
   38cc0:	mla	r1, r3, r6, r1
   38cc4:	add	r2, r1, r2
   38cc8:	b	38ce8 <GetDataSlab+0x168ac>
   38ccc:	ldr	r1, [sl, r7, lsl #2]
   38cd0:	cmp	r1, #0
   38cd4:	beq	38cec <GetDataSlab+0x168b0>
   38cd8:	add	r3, sp, #64	; 0x40
   38cdc:	ldr	r3, [r3, r7, lsl #2]
   38ce0:	mla	r2, r3, r1, r2
   38ce4:	mul	r1, r3, r1
   38ce8:	add	ip, ip, r1, lsl #3
   38cec:	add	r1, r7, #1
   38cf0:	add	r3, r7, #2
   38cf4:	ldr	r4, [fp, #24]
   38cf8:	cmp	r3, r4
   38cfc:	blt	38c70 <GetDataSlab+0x16834>
   38d00:	b	38d14 <GetDataSlab+0x168d8>
   38d04:	ldr	r1, [sp, #52]	; 0x34
   38d08:	ldr	r1, [r1, r7, lsl #2]
   38d0c:	add	ip, ip, r1, lsl #3
   38d10:	add	r2, r1, r2
   38d14:	add	lr, r0, lr
   38d18:	mov	r0, #0
   38d1c:	ldr	r1, [sp, #44]	; 0x2c
   38d20:	cmp	lr, r1
   38d24:	ldr	r4, [fp, #20]
   38d28:	blt	38bfc <GetDataSlab+0x167c0>
   38d2c:	b	22560 <GetDataSlab+0x124>
   38d30:	ldr	r9, [fp, #12]
   38d34:	ldr	sl, [sp, #48]	; 0x30
   38d38:	add	ip, sl, r2, lsl #3
   38d3c:	cmp	lr, #1
   38d40:	bne	39320 <GetDataSlab+0x16ee4>
   38d44:	ldr	r0, [sp, #44]	; 0x2c
   38d48:	cmp	r0, #1
   38d4c:	blt	3ae3c <GetDataSlab+0x18a00>
   38d50:	add	sl, r9, #4
   38d54:	add	r8, r4, #4
   38d58:	add	r0, sp, #104	; 0x68
   38d5c:	orr	r5, r0, #4
   38d60:	sub	r0, fp, #72	; 0x48
   38d64:	orr	r0, r0, #4
   38d68:	str	r0, [sp, #52]	; 0x34
   38d6c:	mov	lr, #0
   38d70:	ldr	r0, [fp, #12]
   38d74:	ldr	r0, [r0]
   38d78:	add	r9, r0, r2
   38d7c:	add	r3, ip, r0, lsl #3
   38d80:	ldr	r0, [r4]
   38d84:	cmp	r0, #1
   38d88:	blt	38db4 <GetDataSlab+0x16978>
   38d8c:	ldr	r0, [sp, #60]	; 0x3c
   38d90:	add	r7, r0, lr, lsl #2
   38d94:	mov	r2, #0
   38d98:	mov	r1, r3
   38d9c:	ldr	r0, [r1], #8
   38da0:	str	r0, [r7, r2, lsl #2]
   38da4:	add	r2, r2, #1
   38da8:	ldr	r0, [r4]
   38dac:	cmp	r2, r0
   38db0:	blt	38d9c <GetDataSlab+0x16960>
   38db4:	ldr	r1, [fp, #12]
   38db8:	ldr	r1, [r1]
   38dbc:	ldr	r2, [fp, #8]
   38dc0:	ldr	r2, [r2]
   38dc4:	sub	r1, r2, r1
   38dc8:	add	ip, r3, r1, lsl #3
   38dcc:	add	r2, r9, r1
   38dd0:	ldr	r1, [fp, #24]
   38dd4:	cmp	r1, #2
   38dd8:	blt	38e88 <GetDataSlab+0x16a4c>
   38ddc:	mov	r1, #0
   38de0:	mov	r9, #0
   38de4:	mov	r7, r1
   38de8:	ldr	r1, [r5, r1, lsl #2]
   38dec:	add	r1, r1, #1
   38df0:	str	r1, [r5, r7, lsl #2]
   38df4:	ldr	r4, [r8, r7, lsl #2]
   38df8:	sdiv	r6, r1, r4
   38dfc:	mls	r1, r6, r4, r1
   38e00:	cmp	r1, #0
   38e04:	bne	38e78 <GetDataSlab+0x16a3c>
   38e08:	str	r9, [r5, r7, lsl #2]
   38e0c:	add	r3, sp, #64	; 0x40
   38e10:	add	r1, r3, r7, lsl #2
   38e14:	ldr	r1, [r1, #4]
   38e18:	sdiv	r4, r2, r1
   38e1c:	mls	r4, r4, r1, r2
   38e20:	cmp	r4, #0
   38e24:	beq	38e40 <GetDataSlab+0x16a04>
   38e28:	ldr	r6, [r3, r7, lsl #2]
   38e2c:	ldr	r3, [sl, r7, lsl #2]
   38e30:	sub	r1, r1, r4
   38e34:	mla	r1, r3, r6, r1
   38e38:	add	r2, r1, r2
   38e3c:	b	38e5c <GetDataSlab+0x16a20>
   38e40:	ldr	r1, [sl, r7, lsl #2]
   38e44:	cmp	r1, #0
   38e48:	beq	38e60 <GetDataSlab+0x16a24>
   38e4c:	add	r3, sp, #64	; 0x40
   38e50:	ldr	r3, [r3, r7, lsl #2]
   38e54:	mla	r2, r3, r1, r2
   38e58:	mul	r1, r3, r1
   38e5c:	add	ip, ip, r1, lsl #3
   38e60:	add	r1, r7, #1
   38e64:	add	r3, r7, #2
   38e68:	ldr	r4, [fp, #24]
   38e6c:	cmp	r3, r4
   38e70:	blt	38de4 <GetDataSlab+0x169a8>
   38e74:	b	38e88 <GetDataSlab+0x16a4c>
   38e78:	ldr	r1, [sp, #52]	; 0x34
   38e7c:	ldr	r1, [r1, r7, lsl #2]
   38e80:	add	ip, ip, r1, lsl #3
   38e84:	add	r2, r1, r2
   38e88:	add	lr, r0, lr
   38e8c:	mov	r0, #0
   38e90:	ldr	r1, [sp, #44]	; 0x2c
   38e94:	cmp	lr, r1
   38e98:	ldr	r4, [fp, #20]
   38e9c:	blt	38d70 <GetDataSlab+0x16934>
   38ea0:	b	22560 <GetDataSlab+0x124>
   38ea4:	ldr	r9, [fp, #12]
   38ea8:	ldr	sl, [sp, #48]	; 0x30
   38eac:	add	ip, sl, r2, lsl #3
   38eb0:	cmp	lr, #1
   38eb4:	bne	394a4 <GetDataSlab+0x17068>
   38eb8:	ldr	r0, [sp, #44]	; 0x2c
   38ebc:	cmp	r0, #1
   38ec0:	blt	3ae3c <GetDataSlab+0x18a00>
   38ec4:	add	sl, r9, #4
   38ec8:	add	r8, r4, #4
   38ecc:	add	r0, sp, #104	; 0x68
   38ed0:	orr	r5, r0, #4
   38ed4:	sub	r0, fp, #72	; 0x48
   38ed8:	orr	r0, r0, #4
   38edc:	str	r0, [sp, #52]	; 0x34
   38ee0:	mov	lr, #0
   38ee4:	ldr	r0, [fp, #12]
   38ee8:	ldr	r0, [r0]
   38eec:	add	r9, r0, r2
   38ef0:	add	r3, ip, r0, lsl #3
   38ef4:	ldr	r0, [r4]
   38ef8:	cmp	r0, #1
   38efc:	blt	38f28 <GetDataSlab+0x16aec>
   38f00:	ldr	r0, [sp, #60]	; 0x3c
   38f04:	add	r7, r0, lr, lsl #2
   38f08:	mov	r2, #0
   38f0c:	mov	r1, r3
   38f10:	ldr	r0, [r1], #8
   38f14:	str	r0, [r7, r2, lsl #2]
   38f18:	add	r2, r2, #1
   38f1c:	ldr	r0, [r4]
   38f20:	cmp	r2, r0
   38f24:	blt	38f10 <GetDataSlab+0x16ad4>
   38f28:	ldr	r1, [fp, #12]
   38f2c:	ldr	r1, [r1]
   38f30:	ldr	r2, [fp, #8]
   38f34:	ldr	r2, [r2]
   38f38:	sub	r1, r2, r1
   38f3c:	add	ip, r3, r1, lsl #3
   38f40:	add	r2, r9, r1
   38f44:	ldr	r1, [fp, #24]
   38f48:	cmp	r1, #2
   38f4c:	blt	38ffc <GetDataSlab+0x16bc0>
   38f50:	mov	r1, #0
   38f54:	mov	r9, #0
   38f58:	mov	r7, r1
   38f5c:	ldr	r1, [r5, r1, lsl #2]
   38f60:	add	r1, r1, #1
   38f64:	str	r1, [r5, r7, lsl #2]
   38f68:	ldr	r4, [r8, r7, lsl #2]
   38f6c:	sdiv	r6, r1, r4
   38f70:	mls	r1, r6, r4, r1
   38f74:	cmp	r1, #0
   38f78:	bne	38fec <GetDataSlab+0x16bb0>
   38f7c:	str	r9, [r5, r7, lsl #2]
   38f80:	add	r3, sp, #64	; 0x40
   38f84:	add	r1, r3, r7, lsl #2
   38f88:	ldr	r1, [r1, #4]
   38f8c:	sdiv	r4, r2, r1
   38f90:	mls	r4, r4, r1, r2
   38f94:	cmp	r4, #0
   38f98:	beq	38fb4 <GetDataSlab+0x16b78>
   38f9c:	ldr	r6, [r3, r7, lsl #2]
   38fa0:	ldr	r3, [sl, r7, lsl #2]
   38fa4:	sub	r1, r1, r4
   38fa8:	mla	r1, r3, r6, r1
   38fac:	add	r2, r1, r2
   38fb0:	b	38fd0 <GetDataSlab+0x16b94>
   38fb4:	ldr	r1, [sl, r7, lsl #2]
   38fb8:	cmp	r1, #0
   38fbc:	beq	38fd4 <GetDataSlab+0x16b98>
   38fc0:	add	r3, sp, #64	; 0x40
   38fc4:	ldr	r3, [r3, r7, lsl #2]
   38fc8:	mla	r2, r3, r1, r2
   38fcc:	mul	r1, r3, r1
   38fd0:	add	ip, ip, r1, lsl #3
   38fd4:	add	r1, r7, #1
   38fd8:	add	r3, r7, #2
   38fdc:	ldr	r4, [fp, #24]
   38fe0:	cmp	r3, r4
   38fe4:	blt	38f58 <GetDataSlab+0x16b1c>
   38fe8:	b	38ffc <GetDataSlab+0x16bc0>
   38fec:	ldr	r1, [sp, #52]	; 0x34
   38ff0:	ldr	r1, [r1, r7, lsl #2]
   38ff4:	add	ip, ip, r1, lsl #3
   38ff8:	add	r2, r1, r2
   38ffc:	add	lr, r0, lr
   39000:	mov	r0, #0
   39004:	ldr	r1, [sp, #44]	; 0x2c
   39008:	cmp	lr, r1
   3900c:	ldr	r4, [fp, #20]
   39010:	blt	38ee4 <GetDataSlab+0x16aa8>
   39014:	b	22560 <GetDataSlab+0x124>
   39018:	ldr	r0, [sp, #44]	; 0x2c
   3901c:	cmp	r0, #1
   39020:	blt	3ae3c <GetDataSlab+0x18a00>
   39024:	add	r0, r9, #4
   39028:	str	r0, [sp, #52]	; 0x34
   3902c:	add	r9, r4, #4
   39030:	add	r0, sp, #104	; 0x68
   39034:	orr	r8, r0, #4
   39038:	sub	r0, fp, #72	; 0x48
   3903c:	orr	r0, r0, #4
   39040:	str	r0, [sp, #48]	; 0x30
   39044:	mov	sl, #0
   39048:	ldr	r1, [fp, #16]
   3904c:	ldr	r0, [fp, #12]
   39050:	ldr	r0, [r0]
   39054:	add	r2, r0, r2
   39058:	add	r3, ip, r0, lsl #3
   3905c:	ldr	r0, [r4]
   39060:	cmp	r0, #1
   39064:	blt	39098 <GetDataSlab+0x16c5c>
   39068:	ldr	r0, [sp, #60]	; 0x3c
   3906c:	add	r7, r0, sl
   39070:	mov	r5, #0
   39074:	ldrb	r0, [r3]
   39078:	strb	r0, [r7, r5]
   3907c:	ldr	r0, [r1]
   39080:	add	r2, r0, r2
   39084:	add	r3, r3, r0, lsl #3
   39088:	add	r5, r5, #1
   3908c:	ldr	r0, [r4]
   39090:	cmp	r5, r0
   39094:	blt	39074 <GetDataSlab+0x16c38>
   39098:	ldr	r7, [fp, #8]
   3909c:	ldr	r7, [r7]
   390a0:	ldr	r6, [r1]
   390a4:	mls	r7, r6, r0, r7
   390a8:	ldr	r6, [fp, #12]
   390ac:	ldr	r6, [r6]
   390b0:	sub	r5, r7, r6
   390b4:	add	ip, r3, r5, lsl #3
   390b8:	add	r2, r5, r2
   390bc:	ldr	r3, [fp, #24]
   390c0:	cmp	r3, #2
   390c4:	blt	39184 <GetDataSlab+0x16d48>
   390c8:	mov	r5, #0
   390cc:	mov	r7, r5
   390d0:	ldr	r3, [r8, r5, lsl #2]
   390d4:	add	r3, r3, #1
   390d8:	str	r3, [r8, r5, lsl #2]
   390dc:	ldr	r5, [r9, r5, lsl #2]
   390e0:	sdiv	r6, r3, r5
   390e4:	mls	r3, r6, r5, r3
   390e8:	cmp	r3, #0
   390ec:	bne	39174 <GetDataSlab+0x16d38>
   390f0:	mov	r3, #0
   390f4:	str	r3, [r8, r7, lsl #2]
   390f8:	add	r4, sp, #64	; 0x40
   390fc:	add	r3, r4, r7, lsl #2
   39100:	ldr	r5, [r3, #4]
   39104:	sdiv	r3, r2, r5
   39108:	mls	r6, r3, r5, r2
   3910c:	cmp	r6, #0
   39110:	beq	39134 <GetDataSlab+0x16cf8>
   39114:	ldr	r3, [r4, r7, lsl #2]
   39118:	ldr	r1, [sp, #52]	; 0x34
   3911c:	ldr	lr, [r1, r7, lsl #2]
   39120:	sub	r5, r5, r6
   39124:	mla	r3, lr, r3, r5
   39128:	ldr	r1, [fp, #16]
   3912c:	add	r2, r3, r2
   39130:	b	39154 <GetDataSlab+0x16d18>
   39134:	ldr	r3, [sp, #52]	; 0x34
   39138:	ldr	r5, [r3, r7, lsl #2]
   3913c:	cmp	r5, #0
   39140:	beq	39158 <GetDataSlab+0x16d1c>
   39144:	add	r3, sp, #64	; 0x40
   39148:	ldr	r3, [r3, r7, lsl #2]
   3914c:	mla	r2, r3, r5, r2
   39150:	mul	r3, r3, r5
   39154:	add	ip, ip, r3, lsl #3
   39158:	ldr	r4, [fp, #20]
   3915c:	add	r5, r7, #1
   39160:	add	r3, r7, #2
   39164:	ldr	r7, [fp, #24]
   39168:	cmp	r3, r7
   3916c:	blt	390cc <GetDataSlab+0x16c90>
   39170:	b	39184 <GetDataSlab+0x16d48>
   39174:	ldr	r3, [sp, #48]	; 0x30
   39178:	ldr	r3, [r3, r7, lsl #2]
   3917c:	add	ip, ip, r3, lsl #3
   39180:	add	r2, r3, r2
   39184:	add	sl, r0, sl
   39188:	mov	r0, #0
   3918c:	ldr	r3, [sp, #44]	; 0x2c
   39190:	cmp	sl, r3
   39194:	blt	3904c <GetDataSlab+0x16c10>
   39198:	b	22560 <GetDataSlab+0x124>
   3919c:	ldr	r0, [sp, #44]	; 0x2c
   391a0:	cmp	r0, #1
   391a4:	blt	3ae3c <GetDataSlab+0x18a00>
   391a8:	add	r0, r9, #4
   391ac:	str	r0, [sp, #52]	; 0x34
   391b0:	add	r9, r4, #4
   391b4:	add	r0, sp, #104	; 0x68
   391b8:	orr	r8, r0, #4
   391bc:	sub	r0, fp, #72	; 0x48
   391c0:	orr	r0, r0, #4
   391c4:	str	r0, [sp, #48]	; 0x30
   391c8:	mov	sl, #0
   391cc:	ldr	r1, [fp, #16]
   391d0:	ldr	r0, [fp, #12]
   391d4:	ldr	r0, [r0]
   391d8:	add	r2, r0, r2
   391dc:	add	r3, ip, r0, lsl #3
   391e0:	ldr	r0, [r4]
   391e4:	cmp	r0, #1
   391e8:	blt	3921c <GetDataSlab+0x16de0>
   391ec:	ldr	r0, [sp, #60]	; 0x3c
   391f0:	add	r7, r0, sl
   391f4:	mov	r5, #0
   391f8:	ldrb	r0, [r3]
   391fc:	strb	r0, [r7, r5]
   39200:	ldr	r0, [r1]
   39204:	add	r2, r0, r2
   39208:	add	r3, r3, r0, lsl #3
   3920c:	add	r5, r5, #1
   39210:	ldr	r0, [r4]
   39214:	cmp	r5, r0
   39218:	blt	391f8 <GetDataSlab+0x16dbc>
   3921c:	ldr	r7, [fp, #8]
   39220:	ldr	r7, [r7]
   39224:	ldr	r6, [r1]
   39228:	mls	r7, r6, r0, r7
   3922c:	ldr	r6, [fp, #12]
   39230:	ldr	r6, [r6]
   39234:	sub	r5, r7, r6
   39238:	add	ip, r3, r5, lsl #3
   3923c:	add	r2, r5, r2
   39240:	ldr	r3, [fp, #24]
   39244:	cmp	r3, #2
   39248:	blt	39308 <GetDataSlab+0x16ecc>
   3924c:	mov	r5, #0
   39250:	mov	r7, r5
   39254:	ldr	r3, [r8, r5, lsl #2]
   39258:	add	r3, r3, #1
   3925c:	str	r3, [r8, r5, lsl #2]
   39260:	ldr	r5, [r9, r5, lsl #2]
   39264:	sdiv	r6, r3, r5
   39268:	mls	r3, r6, r5, r3
   3926c:	cmp	r3, #0
   39270:	bne	392f8 <GetDataSlab+0x16ebc>
   39274:	mov	r3, #0
   39278:	str	r3, [r8, r7, lsl #2]
   3927c:	add	r4, sp, #64	; 0x40
   39280:	add	r3, r4, r7, lsl #2
   39284:	ldr	r5, [r3, #4]
   39288:	sdiv	r3, r2, r5
   3928c:	mls	r6, r3, r5, r2
   39290:	cmp	r6, #0
   39294:	beq	392b8 <GetDataSlab+0x16e7c>
   39298:	ldr	r3, [r4, r7, lsl #2]
   3929c:	ldr	r1, [sp, #52]	; 0x34
   392a0:	ldr	lr, [r1, r7, lsl #2]
   392a4:	sub	r5, r5, r6
   392a8:	mla	r3, lr, r3, r5
   392ac:	ldr	r1, [fp, #16]
   392b0:	add	r2, r3, r2
   392b4:	b	392d8 <GetDataSlab+0x16e9c>
   392b8:	ldr	r3, [sp, #52]	; 0x34
   392bc:	ldr	r5, [r3, r7, lsl #2]
   392c0:	cmp	r5, #0
   392c4:	beq	392dc <GetDataSlab+0x16ea0>
   392c8:	add	r3, sp, #64	; 0x40
   392cc:	ldr	r3, [r3, r7, lsl #2]
   392d0:	mla	r2, r3, r5, r2
   392d4:	mul	r3, r3, r5
   392d8:	add	ip, ip, r3, lsl #3
   392dc:	ldr	r4, [fp, #20]
   392e0:	add	r5, r7, #1
   392e4:	add	r3, r7, #2
   392e8:	ldr	r7, [fp, #24]
   392ec:	cmp	r3, r7
   392f0:	blt	39250 <GetDataSlab+0x16e14>
   392f4:	b	39308 <GetDataSlab+0x16ecc>
   392f8:	ldr	r3, [sp, #48]	; 0x30
   392fc:	ldr	r3, [r3, r7, lsl #2]
   39300:	add	ip, ip, r3, lsl #3
   39304:	add	r2, r3, r2
   39308:	add	sl, r0, sl
   3930c:	mov	r0, #0
   39310:	ldr	r3, [sp, #44]	; 0x2c
   39314:	cmp	sl, r3
   39318:	blt	391d0 <GetDataSlab+0x16d94>
   3931c:	b	22560 <GetDataSlab+0x124>
   39320:	ldr	r0, [sp, #44]	; 0x2c
   39324:	cmp	r0, #1
   39328:	blt	3ae3c <GetDataSlab+0x18a00>
   3932c:	add	r0, r9, #4
   39330:	str	r0, [sp, #52]	; 0x34
   39334:	add	r9, r4, #4
   39338:	add	r0, sp, #104	; 0x68
   3933c:	orr	r8, r0, #4
   39340:	sub	r0, fp, #72	; 0x48
   39344:	orr	r0, r0, #4
   39348:	str	r0, [sp, #48]	; 0x30
   3934c:	mov	sl, #0
   39350:	ldr	r1, [fp, #16]
   39354:	ldr	r0, [fp, #12]
   39358:	ldr	r0, [r0]
   3935c:	add	r2, r0, r2
   39360:	add	r3, ip, r0, lsl #3
   39364:	ldr	r0, [r4]
   39368:	cmp	r0, #1
   3936c:	blt	393a0 <GetDataSlab+0x16f64>
   39370:	ldr	r0, [sp, #60]	; 0x3c
   39374:	add	r7, r0, sl, lsl #2
   39378:	mov	r5, #0
   3937c:	ldr	r0, [r3]
   39380:	str	r0, [r7, r5, lsl #2]
   39384:	ldr	r0, [r1]
   39388:	add	r2, r0, r2
   3938c:	add	r3, r3, r0, lsl #3
   39390:	add	r5, r5, #1
   39394:	ldr	r0, [r4]
   39398:	cmp	r5, r0
   3939c:	blt	3937c <GetDataSlab+0x16f40>
   393a0:	ldr	r7, [fp, #8]
   393a4:	ldr	r7, [r7]
   393a8:	ldr	r6, [r1]
   393ac:	mls	r7, r6, r0, r7
   393b0:	ldr	r6, [fp, #12]
   393b4:	ldr	r6, [r6]
   393b8:	sub	r5, r7, r6
   393bc:	add	ip, r3, r5, lsl #3
   393c0:	add	r2, r5, r2
   393c4:	ldr	r3, [fp, #24]
   393c8:	cmp	r3, #2
   393cc:	blt	3948c <GetDataSlab+0x17050>
   393d0:	mov	r5, #0
   393d4:	mov	r7, r5
   393d8:	ldr	r3, [r8, r5, lsl #2]
   393dc:	add	r3, r3, #1
   393e0:	str	r3, [r8, r5, lsl #2]
   393e4:	ldr	r5, [r9, r5, lsl #2]
   393e8:	sdiv	r6, r3, r5
   393ec:	mls	r3, r6, r5, r3
   393f0:	cmp	r3, #0
   393f4:	bne	3947c <GetDataSlab+0x17040>
   393f8:	mov	r3, #0
   393fc:	str	r3, [r8, r7, lsl #2]
   39400:	add	r4, sp, #64	; 0x40
   39404:	add	r3, r4, r7, lsl #2
   39408:	ldr	r5, [r3, #4]
   3940c:	sdiv	r3, r2, r5
   39410:	mls	r6, r3, r5, r2
   39414:	cmp	r6, #0
   39418:	beq	3943c <GetDataSlab+0x17000>
   3941c:	ldr	r3, [r4, r7, lsl #2]
   39420:	ldr	r1, [sp, #52]	; 0x34
   39424:	ldr	lr, [r1, r7, lsl #2]
   39428:	sub	r5, r5, r6
   3942c:	mla	r3, lr, r3, r5
   39430:	ldr	r1, [fp, #16]
   39434:	add	r2, r3, r2
   39438:	b	3945c <GetDataSlab+0x17020>
   3943c:	ldr	r3, [sp, #52]	; 0x34
   39440:	ldr	r5, [r3, r7, lsl #2]
   39444:	cmp	r5, #0
   39448:	beq	39460 <GetDataSlab+0x17024>
   3944c:	add	r3, sp, #64	; 0x40
   39450:	ldr	r3, [r3, r7, lsl #2]
   39454:	mla	r2, r3, r5, r2
   39458:	mul	r3, r3, r5
   3945c:	add	ip, ip, r3, lsl #3
   39460:	ldr	r4, [fp, #20]
   39464:	add	r5, r7, #1
   39468:	add	r3, r7, #2
   3946c:	ldr	r7, [fp, #24]
   39470:	cmp	r3, r7
   39474:	blt	393d4 <GetDataSlab+0x16f98>
   39478:	b	3948c <GetDataSlab+0x17050>
   3947c:	ldr	r3, [sp, #48]	; 0x30
   39480:	ldr	r3, [r3, r7, lsl #2]
   39484:	add	ip, ip, r3, lsl #3
   39488:	add	r2, r3, r2
   3948c:	add	sl, r0, sl
   39490:	mov	r0, #0
   39494:	ldr	r3, [sp, #44]	; 0x2c
   39498:	cmp	sl, r3
   3949c:	blt	39354 <GetDataSlab+0x16f18>
   394a0:	b	22560 <GetDataSlab+0x124>
   394a4:	ldr	r0, [sp, #44]	; 0x2c
   394a8:	cmp	r0, #1
   394ac:	blt	3ae3c <GetDataSlab+0x18a00>
   394b0:	add	r0, r9, #4
   394b4:	str	r0, [sp, #52]	; 0x34
   394b8:	add	r9, r4, #4
   394bc:	add	r0, sp, #104	; 0x68
   394c0:	orr	r8, r0, #4
   394c4:	sub	r0, fp, #72	; 0x48
   394c8:	orr	r0, r0, #4
   394cc:	str	r0, [sp, #48]	; 0x30
   394d0:	mov	sl, #0
   394d4:	ldr	r1, [fp, #16]
   394d8:	ldr	r0, [fp, #12]
   394dc:	ldr	r0, [r0]
   394e0:	add	r2, r0, r2
   394e4:	add	r3, ip, r0, lsl #3
   394e8:	ldr	r0, [r4]
   394ec:	cmp	r0, #1
   394f0:	blt	39524 <GetDataSlab+0x170e8>
   394f4:	ldr	r0, [sp, #60]	; 0x3c
   394f8:	add	r7, r0, sl, lsl #2
   394fc:	mov	r5, #0
   39500:	ldr	r0, [r3]
   39504:	str	r0, [r7, r5, lsl #2]
   39508:	ldr	r0, [r1]
   3950c:	add	r2, r0, r2
   39510:	add	r3, r3, r0, lsl #3
   39514:	add	r5, r5, #1
   39518:	ldr	r0, [r4]
   3951c:	cmp	r5, r0
   39520:	blt	39500 <GetDataSlab+0x170c4>
   39524:	ldr	r7, [fp, #8]
   39528:	ldr	r7, [r7]
   3952c:	ldr	r6, [r1]
   39530:	mls	r7, r6, r0, r7
   39534:	ldr	r6, [fp, #12]
   39538:	ldr	r6, [r6]
   3953c:	sub	r5, r7, r6
   39540:	add	ip, r3, r5, lsl #3
   39544:	add	r2, r5, r2
   39548:	ldr	r3, [fp, #24]
   3954c:	cmp	r3, #2
   39550:	blt	39610 <GetDataSlab+0x171d4>
   39554:	mov	r5, #0
   39558:	mov	r7, r5
   3955c:	ldr	r3, [r8, r5, lsl #2]
   39560:	add	r3, r3, #1
   39564:	str	r3, [r8, r5, lsl #2]
   39568:	ldr	r5, [r9, r5, lsl #2]
   3956c:	sdiv	r6, r3, r5
   39570:	mls	r3, r6, r5, r3
   39574:	cmp	r3, #0
   39578:	bne	39600 <GetDataSlab+0x171c4>
   3957c:	mov	r3, #0
   39580:	str	r3, [r8, r7, lsl #2]
   39584:	add	r4, sp, #64	; 0x40
   39588:	add	r3, r4, r7, lsl #2
   3958c:	ldr	r5, [r3, #4]
   39590:	sdiv	r3, r2, r5
   39594:	mls	r6, r3, r5, r2
   39598:	cmp	r6, #0
   3959c:	beq	395c0 <GetDataSlab+0x17184>
   395a0:	ldr	r3, [r4, r7, lsl #2]
   395a4:	ldr	r1, [sp, #52]	; 0x34
   395a8:	ldr	lr, [r1, r7, lsl #2]
   395ac:	sub	r5, r5, r6
   395b0:	mla	r3, lr, r3, r5
   395b4:	ldr	r1, [fp, #16]
   395b8:	add	r2, r3, r2
   395bc:	b	395e0 <GetDataSlab+0x171a4>
   395c0:	ldr	r3, [sp, #52]	; 0x34
   395c4:	ldr	r5, [r3, r7, lsl #2]
   395c8:	cmp	r5, #0
   395cc:	beq	395e4 <GetDataSlab+0x171a8>
   395d0:	add	r3, sp, #64	; 0x40
   395d4:	ldr	r3, [r3, r7, lsl #2]
   395d8:	mla	r2, r3, r5, r2
   395dc:	mul	r3, r3, r5
   395e0:	add	ip, ip, r3, lsl #3
   395e4:	ldr	r4, [fp, #20]
   395e8:	add	r5, r7, #1
   395ec:	add	r3, r7, #2
   395f0:	ldr	r7, [fp, #24]
   395f4:	cmp	r3, r7
   395f8:	blt	39558 <GetDataSlab+0x1711c>
   395fc:	b	39610 <GetDataSlab+0x171d4>
   39600:	ldr	r3, [sp, #48]	; 0x30
   39604:	ldr	r3, [r3, r7, lsl #2]
   39608:	add	ip, ip, r3, lsl #3
   3960c:	add	r2, r3, r2
   39610:	add	sl, r0, sl
   39614:	mov	r0, #0
   39618:	ldr	r3, [sp, #44]	; 0x2c
   3961c:	cmp	sl, r3
   39620:	blt	394d8 <GetDataSlab+0x1709c>
   39624:	b	22560 <GetDataSlab+0x124>
   39628:	mov	r0, #0
   3962c:	ldr	r1, [sp, #52]	; 0x34
   39630:	cmp	r1, #13
   39634:	bne	22560 <GetDataSlab+0x124>
   39638:	ldr	ip, [lr]
   3963c:	sub	r1, ip, #1
   39640:	str	r1, [fp, #-72]	; 0xffffffb8
   39644:	ldr	r0, [fp, #8]
   39648:	ldr	r0, [r0]
   3964c:	str	r0, [sp, #36]	; 0x24
   39650:	str	r0, [sp, #64]	; 0x40
   39654:	ldr	r1, [r4]
   39658:	mov	r4, #0
   3965c:	ldr	r0, [fp, #24]
   39660:	cmp	r0, #2
   39664:	str	r1, [sp, #40]	; 0x28
   39668:	str	r1, [sp, #44]	; 0x2c
   3966c:	ldr	r8, [fp, #12]
   39670:	add	r9, sp, #64	; 0x40
   39674:	sub	r5, fp, #72	; 0x48
   39678:	ldr	sl, [sp, #48]	; 0x30
   3967c:	blt	39718 <GetDataSlab+0x172dc>
   39680:	mov	r1, #1
   39684:	mov	r4, #0
   39688:	ldr	r0, [fp, #8]
   3968c:	ldr	r2, [sp, #40]	; 0x28
   39690:	str	r2, [sp, #44]	; 0x2c
   39694:	ldr	r3, [lr, r1, lsl #2]
   39698:	sub	r3, r3, #1
   3969c:	str	r3, [r5, r1, lsl #2]
   396a0:	sub	lr, r1, #1
   396a4:	ldr	r2, [fp, #8]
   396a8:	ldr	r6, [r2, lr, lsl #2]
   396ac:	str	r6, [r9, r1, lsl #2]
   396b0:	mov	r5, #0
   396b4:	mov	r2, r0
   396b8:	ldr	r7, [r2, -r5, lsl #2]!
   396bc:	mul	r3, r3, r7
   396c0:	ldr	r2, [r2, #4]
   396c4:	mul	r6, r2, r6
   396c8:	add	r5, r5, #1
   396cc:	cmp	r1, r5
   396d0:	bne	396b4 <GetDataSlab+0x17278>
   396d4:	str	r6, [r9, r1, lsl #2]
   396d8:	sub	r5, fp, #72	; 0x48
   396dc:	str	r3, [r5, r1, lsl #2]
   396e0:	ldr	r2, [r9, lr, lsl #2]
   396e4:	ldr	r3, [r8, r1, lsl #2]
   396e8:	mla	r4, r3, r2, r4
   396ec:	ldr	r2, [fp, #20]
   396f0:	ldr	r2, [r2, r1, lsl #2]
   396f4:	ldr	r3, [sp, #44]	; 0x2c
   396f8:	mul	r3, r2, r3
   396fc:	str	r3, [sp, #44]	; 0x2c
   39700:	add	r0, r0, #4
   39704:	add	r1, r1, #1
   39708:	ldr	r2, [fp, #24]
   3970c:	cmp	r1, r2
   39710:	ldr	lr, [fp, #16]
   39714:	bne	39694 <GetDataSlab+0x17258>
   39718:	add	r5, sl, r4, lsl #3
   3971c:	cmp	ip, #1
   39720:	bne	398ac <GetDataSlab+0x17470>
   39724:	ldr	r0, [sp, #44]	; 0x2c
   39728:	cmp	r0, #1
   3972c:	ldr	r9, [sp, #40]	; 0x28
   39730:	blt	240b8 <GetDataSlab+0x1c7c>
   39734:	ldr	r0, [fp, #20]
   39738:	add	r0, r0, #4
   3973c:	str	r0, [sp, #28]
   39740:	add	r0, sp, #104	; 0x68
   39744:	orr	r7, r0, #4
   39748:	sub	r0, fp, #72	; 0x48
   3974c:	orr	r0, r0, #4
   39750:	str	r0, [sp, #24]
   39754:	lsl	r0, r9, #3
   39758:	str	r0, [sp, #48]	; 0x30
   3975c:	ldr	r0, [r8], #4
   39760:	str	r0, [sp, #32]
   39764:	str	r8, [sp, #56]	; 0x38
   39768:	mov	r0, #0
   3976c:	str	r0, [sp, #52]	; 0x34
   39770:	cmp	r9, #1
   39774:	blt	397a4 <GetDataSlab+0x17368>
   39778:	ldr	r0, [sp, #32]
   3977c:	add	r8, r5, r0, lsl #3
   39780:	ldr	r9, [sp, #40]	; 0x28
   39784:	ldr	sl, [sp, #60]	; 0x3c
   39788:	ldrd	r0, [r8]
   3978c:	bl	48b4c <__aeabi_ul2d>
   39790:	strd	r0, [sl]
   39794:	subs	r9, r9, #1
   39798:	add	sl, sl, #8
   3979c:	add	r8, r8, #8
   397a0:	bne	39788 <GetDataSlab+0x1734c>
   397a4:	ldr	r0, [sp, #36]	; 0x24
   397a8:	add	r5, r5, r0, lsl #3
   397ac:	add	r4, r4, r0
   397b0:	ldr	r0, [fp, #24]
   397b4:	cmp	r0, #2
   397b8:	add	r8, sp, #64	; 0x40
   397bc:	blt	39864 <GetDataSlab+0x17428>
   397c0:	mov	r1, #0
   397c4:	ldr	ip, [sp, #60]	; 0x3c
   397c8:	ldr	lr, [sp, #56]	; 0x38
   397cc:	ldr	r9, [sp, #40]	; 0x28
   397d0:	ldr	sl, [sp, #28]
   397d4:	mov	r0, r1
   397d8:	ldr	r1, [r7, r1, lsl #2]
   397dc:	add	r1, r1, #1
   397e0:	str	r1, [r7, r0, lsl #2]
   397e4:	ldr	r2, [sl, r0, lsl #2]
   397e8:	sdiv	r3, r1, r2
   397ec:	mls	r1, r3, r2, r1
   397f0:	cmp	r1, #0
   397f4:	bne	39870 <GetDataSlab+0x17434>
   397f8:	mov	r1, #0
   397fc:	str	r1, [r7, r0, lsl #2]
   39800:	add	r1, r8, r0, lsl #2
   39804:	ldr	r1, [r1, #4]
   39808:	sdiv	r2, r4, r1
   3980c:	mls	r2, r2, r1, r4
   39810:	cmp	r2, #0
   39814:	beq	39830 <GetDataSlab+0x173f4>
   39818:	ldr	r3, [r8, r0, lsl #2]
   3981c:	ldr	r6, [lr, r0, lsl #2]
   39820:	sub	r1, r1, r2
   39824:	mla	r1, r6, r3, r1
   39828:	add	r4, r1, r4
   3982c:	b	39848 <GetDataSlab+0x1740c>
   39830:	ldr	r1, [lr, r0, lsl #2]
   39834:	cmp	r1, #0
   39838:	beq	3984c <GetDataSlab+0x17410>
   3983c:	ldr	r2, [r8, r0, lsl #2]
   39840:	mla	r4, r2, r1, r4
   39844:	mul	r1, r2, r1
   39848:	add	r5, r5, r1, lsl #3
   3984c:	add	r1, r0, #1
   39850:	add	r0, r0, #2
   39854:	ldr	r2, [fp, #24]
   39858:	cmp	r0, r2
   3985c:	blt	397d4 <GetDataSlab+0x17398>
   39860:	b	39880 <GetDataSlab+0x17444>
   39864:	ldr	ip, [sp, #60]	; 0x3c
   39868:	ldr	r9, [sp, #40]	; 0x28
   3986c:	b	39880 <GetDataSlab+0x17444>
   39870:	ldr	r1, [sp, #24]
   39874:	ldr	r0, [r1, r0, lsl #2]
   39878:	add	r5, r5, r0, lsl #3
   3987c:	add	r4, r0, r4
   39880:	ldr	r0, [sp, #48]	; 0x30
   39884:	add	ip, ip, r0
   39888:	str	ip, [sp, #60]	; 0x3c
   3988c:	ldr	r2, [sp, #52]	; 0x34
   39890:	add	r2, r2, r9
   39894:	mov	r0, #0
   39898:	ldr	r1, [sp, #44]	; 0x2c
   3989c:	str	r2, [sp, #52]	; 0x34
   398a0:	cmp	r2, r1
   398a4:	blt	39770 <GetDataSlab+0x17334>
   398a8:	b	22560 <GetDataSlab+0x124>
   398ac:	ldr	r0, [sp, #44]	; 0x2c
   398b0:	cmp	r0, #1
   398b4:	ldr	r9, [sp, #40]	; 0x28
   398b8:	blt	240b8 <GetDataSlab+0x1c7c>
   398bc:	ldr	r0, [sp, #36]	; 0x24
   398c0:	mls	r0, r9, ip, r0
   398c4:	ldr	r1, [r8], #4
   398c8:	str	r8, [sp, #56]	; 0x38
   398cc:	mov	r8, r1
   398d0:	sub	r0, r0, r1
   398d4:	str	r0, [sp, #36]	; 0x24
   398d8:	ldr	r0, [fp, #20]
   398dc:	add	r0, r0, #4
   398e0:	str	r0, [sp, #52]	; 0x34
   398e4:	add	r0, sp, #104	; 0x68
   398e8:	orr	r6, r0, #4
   398ec:	sub	r0, fp, #72	; 0x48
   398f0:	orr	r0, r0, #4
   398f4:	str	r0, [sp, #20]
   398f8:	mla	r0, r9, ip, r1
   398fc:	str	r0, [sp, #24]
   39900:	lsl	r0, r9, #3
   39904:	str	r0, [sp, #32]
   39908:	lsl	sl, ip, #3
   3990c:	mov	r0, #0
   39910:	str	r0, [sp, #48]	; 0x30
   39914:	str	r1, [sp, #28]
   39918:	cmp	r9, #1
   3991c:	mov	r0, r8
   39920:	blt	39958 <GetDataSlab+0x1751c>
   39924:	add	r7, r5, r8, lsl #3
   39928:	mov	r8, r9
   3992c:	ldr	r9, [sp, #60]	; 0x3c
   39930:	ldrd	r0, [r7]
   39934:	bl	48b4c <__aeabi_ul2d>
   39938:	strd	r0, [r9]
   3993c:	add	r7, r7, sl
   39940:	subs	r8, r8, #1
   39944:	add	r9, r9, #8
   39948:	bne	39930 <GetDataSlab+0x174f4>
   3994c:	ldr	r0, [sp, #24]
   39950:	ldr	r9, [sp, #40]	; 0x28
   39954:	ldr	r8, [sp, #28]
   39958:	ldr	r2, [sp, #36]	; 0x24
   3995c:	add	r1, r5, r2, lsl #3
   39960:	add	r5, r1, r0, lsl #3
   39964:	add	r0, r0, r4
   39968:	add	r4, r0, r2
   3996c:	ldr	r0, [fp, #24]
   39970:	cmp	r0, #2
   39974:	ldr	ip, [sp, #60]	; 0x3c
   39978:	blt	39a30 <GetDataSlab+0x175f4>
   3997c:	mov	r1, #0
   39980:	ldr	lr, [sp, #56]	; 0x38
   39984:	mov	r0, r1
   39988:	ldr	r1, [r6, r1, lsl #2]
   3998c:	add	r1, r1, #1
   39990:	str	r1, [r6, r0, lsl #2]
   39994:	ldr	r2, [sp, #52]	; 0x34
   39998:	ldr	r2, [r2, r0, lsl #2]
   3999c:	sdiv	r3, r1, r2
   399a0:	mls	r1, r3, r2, r1
   399a4:	cmp	r1, #0
   399a8:	bne	39a20 <GetDataSlab+0x175e4>
   399ac:	mov	r1, #0
   399b0:	str	r1, [r6, r0, lsl #2]
   399b4:	add	r3, sp, #64	; 0x40
   399b8:	add	r1, r3, r0, lsl #2
   399bc:	ldr	r1, [r1, #4]
   399c0:	sdiv	r2, r4, r1
   399c4:	mls	r2, r2, r1, r4
   399c8:	cmp	r2, #0
   399cc:	beq	399e8 <GetDataSlab+0x175ac>
   399d0:	ldr	r3, [r3, r0, lsl #2]
   399d4:	ldr	r7, [lr, r0, lsl #2]
   399d8:	sub	r1, r1, r2
   399dc:	mla	r1, r7, r3, r1
   399e0:	add	r4, r1, r4
   399e4:	b	39a04 <GetDataSlab+0x175c8>
   399e8:	ldr	r1, [lr, r0, lsl #2]
   399ec:	cmp	r1, #0
   399f0:	beq	39a08 <GetDataSlab+0x175cc>
   399f4:	add	r2, sp, #64	; 0x40
   399f8:	ldr	r2, [r2, r0, lsl #2]
   399fc:	mla	r4, r2, r1, r4
   39a00:	mul	r1, r2, r1
   39a04:	add	r5, r5, r1, lsl #3
   39a08:	add	r1, r0, #1
   39a0c:	add	r0, r0, #2
   39a10:	ldr	r2, [fp, #24]
   39a14:	cmp	r0, r2
   39a18:	blt	39984 <GetDataSlab+0x17548>
   39a1c:	b	39a30 <GetDataSlab+0x175f4>
   39a20:	ldr	r1, [sp, #20]
   39a24:	ldr	r0, [r1, r0, lsl #2]
   39a28:	add	r5, r5, r0, lsl #3
   39a2c:	add	r4, r0, r4
   39a30:	ldr	r0, [sp, #32]
   39a34:	add	ip, ip, r0
   39a38:	str	ip, [sp, #60]	; 0x3c
   39a3c:	ldr	r2, [sp, #48]	; 0x30
   39a40:	add	r2, r2, r9
   39a44:	mov	r0, #0
   39a48:	ldr	r1, [sp, #44]	; 0x2c
   39a4c:	str	r2, [sp, #48]	; 0x30
   39a50:	cmp	r2, r1
   39a54:	blt	39918 <GetDataSlab+0x174dc>
   39a58:	b	22560 <GetDataSlab+0x124>
   39a5c:	mov	r0, #0
   39a60:	ldr	r1, [sp, #52]	; 0x34
   39a64:	cmp	r1, #13
   39a68:	bne	22560 <GetDataSlab+0x124>
   39a6c:	ldr	ip, [lr]
   39a70:	sub	r1, ip, #1
   39a74:	str	r1, [fp, #-72]	; 0xffffffb8
   39a78:	ldr	r0, [fp, #8]
   39a7c:	ldr	r0, [r0]
   39a80:	str	r0, [sp, #36]	; 0x24
   39a84:	str	r0, [sp, #64]	; 0x40
   39a88:	ldr	r1, [r4]
   39a8c:	mov	r4, #0
   39a90:	ldr	r0, [fp, #24]
   39a94:	cmp	r0, #2
   39a98:	str	r1, [sp, #40]	; 0x28
   39a9c:	str	r1, [sp, #44]	; 0x2c
   39aa0:	ldr	r8, [fp, #12]
   39aa4:	add	r9, sp, #64	; 0x40
   39aa8:	sub	r5, fp, #72	; 0x48
   39aac:	ldr	sl, [sp, #48]	; 0x30
   39ab0:	blt	39b4c <GetDataSlab+0x17710>
   39ab4:	mov	r1, #1
   39ab8:	mov	r4, #0
   39abc:	ldr	r0, [fp, #8]
   39ac0:	ldr	r2, [sp, #40]	; 0x28
   39ac4:	str	r2, [sp, #44]	; 0x2c
   39ac8:	ldr	r3, [lr, r1, lsl #2]
   39acc:	sub	r3, r3, #1
   39ad0:	str	r3, [r5, r1, lsl #2]
   39ad4:	sub	lr, r1, #1
   39ad8:	ldr	r2, [fp, #8]
   39adc:	ldr	r6, [r2, lr, lsl #2]
   39ae0:	str	r6, [r9, r1, lsl #2]
   39ae4:	mov	r5, #0
   39ae8:	mov	r2, r0
   39aec:	ldr	r7, [r2, -r5, lsl #2]!
   39af0:	mul	r3, r3, r7
   39af4:	ldr	r2, [r2, #4]
   39af8:	mul	r6, r2, r6
   39afc:	add	r5, r5, #1
   39b00:	cmp	r1, r5
   39b04:	bne	39ae8 <GetDataSlab+0x176ac>
   39b08:	str	r6, [r9, r1, lsl #2]
   39b0c:	sub	r5, fp, #72	; 0x48
   39b10:	str	r3, [r5, r1, lsl #2]
   39b14:	ldr	r2, [r9, lr, lsl #2]
   39b18:	ldr	r3, [r8, r1, lsl #2]
   39b1c:	mla	r4, r3, r2, r4
   39b20:	ldr	r2, [fp, #20]
   39b24:	ldr	r2, [r2, r1, lsl #2]
   39b28:	ldr	r3, [sp, #44]	; 0x2c
   39b2c:	mul	r3, r2, r3
   39b30:	str	r3, [sp, #44]	; 0x2c
   39b34:	add	r0, r0, #4
   39b38:	add	r1, r1, #1
   39b3c:	ldr	r2, [fp, #24]
   39b40:	cmp	r1, r2
   39b44:	ldr	lr, [fp, #16]
   39b48:	bne	39ac8 <GetDataSlab+0x1768c>
   39b4c:	add	r5, sl, r4, lsl #3
   39b50:	cmp	ip, #1
   39b54:	bne	39cdc <GetDataSlab+0x178a0>
   39b58:	ldr	r0, [sp, #44]	; 0x2c
   39b5c:	cmp	r0, #1
   39b60:	ldr	r9, [sp, #40]	; 0x28
   39b64:	blt	240b8 <GetDataSlab+0x1c7c>
   39b68:	ldr	r0, [fp, #20]
   39b6c:	add	r0, r0, #4
   39b70:	str	r0, [sp, #28]
   39b74:	add	r0, sp, #104	; 0x68
   39b78:	orr	r7, r0, #4
   39b7c:	sub	r0, fp, #72	; 0x48
   39b80:	orr	r0, r0, #4
   39b84:	str	r0, [sp, #24]
   39b88:	lsl	r0, r9, #2
   39b8c:	str	r0, [sp, #48]	; 0x30
   39b90:	ldr	r0, [r8], #4
   39b94:	str	r0, [sp, #32]
   39b98:	str	r8, [sp, #56]	; 0x38
   39b9c:	mov	r0, #0
   39ba0:	str	r0, [sp, #52]	; 0x34
   39ba4:	cmp	r9, #1
   39ba8:	blt	39bd4 <GetDataSlab+0x17798>
   39bac:	ldr	r0, [sp, #32]
   39bb0:	add	r8, r5, r0, lsl #3
   39bb4:	ldr	r9, [sp, #40]	; 0x28
   39bb8:	ldr	sl, [sp, #60]	; 0x3c
   39bbc:	ldrd	r0, [r8]
   39bc0:	bl	48d84 <__aeabi_ul2f>
   39bc4:	str	r0, [sl], #4
   39bc8:	subs	r9, r9, #1
   39bcc:	add	r8, r8, #8
   39bd0:	bne	39bbc <GetDataSlab+0x17780>
   39bd4:	ldr	r0, [sp, #36]	; 0x24
   39bd8:	add	r5, r5, r0, lsl #3
   39bdc:	add	r4, r4, r0
   39be0:	ldr	r0, [fp, #24]
   39be4:	cmp	r0, #2
   39be8:	add	r8, sp, #64	; 0x40
   39bec:	blt	39c94 <GetDataSlab+0x17858>
   39bf0:	mov	r1, #0
   39bf4:	ldr	ip, [sp, #60]	; 0x3c
   39bf8:	ldr	lr, [sp, #56]	; 0x38
   39bfc:	ldr	r9, [sp, #40]	; 0x28
   39c00:	ldr	sl, [sp, #28]
   39c04:	mov	r0, r1
   39c08:	ldr	r1, [r7, r1, lsl #2]
   39c0c:	add	r1, r1, #1
   39c10:	str	r1, [r7, r0, lsl #2]
   39c14:	ldr	r2, [sl, r0, lsl #2]
   39c18:	sdiv	r3, r1, r2
   39c1c:	mls	r1, r3, r2, r1
   39c20:	cmp	r1, #0
   39c24:	bne	39ca0 <GetDataSlab+0x17864>
   39c28:	mov	r1, #0
   39c2c:	str	r1, [r7, r0, lsl #2]
   39c30:	add	r1, r8, r0, lsl #2
   39c34:	ldr	r1, [r1, #4]
   39c38:	sdiv	r2, r4, r1
   39c3c:	mls	r2, r2, r1, r4
   39c40:	cmp	r2, #0
   39c44:	beq	39c60 <GetDataSlab+0x17824>
   39c48:	ldr	r3, [r8, r0, lsl #2]
   39c4c:	ldr	r6, [lr, r0, lsl #2]
   39c50:	sub	r1, r1, r2
   39c54:	mla	r1, r6, r3, r1
   39c58:	add	r4, r1, r4
   39c5c:	b	39c78 <GetDataSlab+0x1783c>
   39c60:	ldr	r1, [lr, r0, lsl #2]
   39c64:	cmp	r1, #0
   39c68:	beq	39c7c <GetDataSlab+0x17840>
   39c6c:	ldr	r2, [r8, r0, lsl #2]
   39c70:	mla	r4, r2, r1, r4
   39c74:	mul	r1, r2, r1
   39c78:	add	r5, r5, r1, lsl #3
   39c7c:	add	r1, r0, #1
   39c80:	add	r0, r0, #2
   39c84:	ldr	r2, [fp, #24]
   39c88:	cmp	r0, r2
   39c8c:	blt	39c04 <GetDataSlab+0x177c8>
   39c90:	b	39cb0 <GetDataSlab+0x17874>
   39c94:	ldr	ip, [sp, #60]	; 0x3c
   39c98:	ldr	r9, [sp, #40]	; 0x28
   39c9c:	b	39cb0 <GetDataSlab+0x17874>
   39ca0:	ldr	r1, [sp, #24]
   39ca4:	ldr	r0, [r1, r0, lsl #2]
   39ca8:	add	r5, r5, r0, lsl #3
   39cac:	add	r4, r0, r4
   39cb0:	ldr	r0, [sp, #48]	; 0x30
   39cb4:	add	ip, ip, r0
   39cb8:	str	ip, [sp, #60]	; 0x3c
   39cbc:	ldr	r2, [sp, #52]	; 0x34
   39cc0:	add	r2, r2, r9
   39cc4:	mov	r0, #0
   39cc8:	ldr	r1, [sp, #44]	; 0x2c
   39ccc:	str	r2, [sp, #52]	; 0x34
   39cd0:	cmp	r2, r1
   39cd4:	blt	39ba4 <GetDataSlab+0x17768>
   39cd8:	b	22560 <GetDataSlab+0x124>
   39cdc:	ldr	r0, [sp, #44]	; 0x2c
   39ce0:	cmp	r0, #1
   39ce4:	ldr	sl, [sp, #40]	; 0x28
   39ce8:	blt	240b8 <GetDataSlab+0x1c7c>
   39cec:	ldr	r0, [sp, #36]	; 0x24
   39cf0:	mls	r0, sl, ip, r0
   39cf4:	ldr	r1, [r8], #4
   39cf8:	str	r8, [sp, #56]	; 0x38
   39cfc:	sub	r0, r0, r1
   39d00:	str	r0, [sp, #32]
   39d04:	ldr	r0, [fp, #20]
   39d08:	add	r0, r0, #4
   39d0c:	str	r0, [sp, #52]	; 0x34
   39d10:	add	r0, sp, #104	; 0x68
   39d14:	orr	r7, r0, #4
   39d18:	sub	r0, fp, #72	; 0x48
   39d1c:	orr	r0, r0, #4
   39d20:	str	r0, [sp, #20]
   39d24:	str	r1, [sp, #36]	; 0x24
   39d28:	mla	r0, sl, ip, r1
   39d2c:	str	r0, [sp, #24]
   39d30:	lsl	r0, sl, #2
   39d34:	str	r0, [sp, #28]
   39d38:	lsl	r8, ip, #3
   39d3c:	mov	r0, #0
   39d40:	str	r0, [sp, #48]	; 0x30
   39d44:	cmp	sl, #1
   39d48:	ldr	r0, [sp, #36]	; 0x24
   39d4c:	blt	39d84 <GetDataSlab+0x17948>
   39d50:	ldr	r0, [sp, #36]	; 0x24
   39d54:	add	r0, r5, r0, lsl #3
   39d58:	mov	r6, sl
   39d5c:	ldr	sl, [sp, #60]	; 0x3c
   39d60:	add	r9, r0, r8
   39d64:	ldrd	r0, [r0]
   39d68:	bl	48d84 <__aeabi_ul2f>
   39d6c:	str	r0, [sl], #4
   39d70:	subs	r6, r6, #1
   39d74:	mov	r0, r9
   39d78:	bne	39d60 <GetDataSlab+0x17924>
   39d7c:	ldr	r0, [sp, #24]
   39d80:	ldr	sl, [sp, #40]	; 0x28
   39d84:	ldr	r2, [sp, #32]
   39d88:	add	r1, r5, r2, lsl #3
   39d8c:	add	r5, r1, r0, lsl #3
   39d90:	add	r0, r0, r4
   39d94:	add	r4, r0, r2
   39d98:	ldr	r0, [fp, #24]
   39d9c:	cmp	r0, #2
   39da0:	ldr	ip, [sp, #60]	; 0x3c
   39da4:	add	r9, sp, #64	; 0x40
   39da8:	blt	39e58 <GetDataSlab+0x17a1c>
   39dac:	mov	r1, #0
   39db0:	ldr	lr, [sp, #56]	; 0x38
   39db4:	mov	r0, r1
   39db8:	ldr	r1, [r7, r1, lsl #2]
   39dbc:	add	r1, r1, #1
   39dc0:	str	r1, [r7, r0, lsl #2]
   39dc4:	ldr	r2, [sp, #52]	; 0x34
   39dc8:	ldr	r2, [r2, r0, lsl #2]
   39dcc:	sdiv	r3, r1, r2
   39dd0:	mls	r1, r3, r2, r1
   39dd4:	cmp	r1, #0
   39dd8:	bne	39e48 <GetDataSlab+0x17a0c>
   39ddc:	mov	r1, #0
   39de0:	str	r1, [r7, r0, lsl #2]
   39de4:	add	r1, r9, r0, lsl #2
   39de8:	ldr	r1, [r1, #4]
   39dec:	sdiv	r2, r4, r1
   39df0:	mls	r2, r2, r1, r4
   39df4:	cmp	r2, #0
   39df8:	beq	39e14 <GetDataSlab+0x179d8>
   39dfc:	ldr	r3, [r9, r0, lsl #2]
   39e00:	ldr	r6, [lr, r0, lsl #2]
   39e04:	sub	r1, r1, r2
   39e08:	mla	r1, r6, r3, r1
   39e0c:	add	r4, r1, r4
   39e10:	b	39e2c <GetDataSlab+0x179f0>
   39e14:	ldr	r1, [lr, r0, lsl #2]
   39e18:	cmp	r1, #0
   39e1c:	beq	39e30 <GetDataSlab+0x179f4>
   39e20:	ldr	r2, [r9, r0, lsl #2]
   39e24:	mla	r4, r2, r1, r4
   39e28:	mul	r1, r2, r1
   39e2c:	add	r5, r5, r1, lsl #3
   39e30:	add	r1, r0, #1
   39e34:	add	r0, r0, #2
   39e38:	ldr	r2, [fp, #24]
   39e3c:	cmp	r0, r2
   39e40:	blt	39db4 <GetDataSlab+0x17978>
   39e44:	b	39e58 <GetDataSlab+0x17a1c>
   39e48:	ldr	r1, [sp, #20]
   39e4c:	ldr	r0, [r1, r0, lsl #2]
   39e50:	add	r5, r5, r0, lsl #3
   39e54:	add	r4, r0, r4
   39e58:	ldr	r0, [sp, #28]
   39e5c:	add	ip, ip, r0
   39e60:	str	ip, [sp, #60]	; 0x3c
   39e64:	ldr	r2, [sp, #48]	; 0x30
   39e68:	add	r2, r2, sl
   39e6c:	mov	r0, #0
   39e70:	ldr	r1, [sp, #44]	; 0x2c
   39e74:	str	r2, [sp, #48]	; 0x30
   39e78:	cmp	r2, r1
   39e7c:	blt	39d44 <GetDataSlab+0x17908>
   39e80:	b	22560 <GetDataSlab+0x124>
   39e84:	mov	r0, #0
   39e88:	ldr	r1, [sp, #52]	; 0x34
   39e8c:	cmp	r1, #13
   39e90:	bne	22560 <GetDataSlab+0x124>
   39e94:	ldr	r8, [lr]
   39e98:	sub	r0, r8, #1
   39e9c:	str	r0, [fp, #-72]	; 0xffffffb8
   39ea0:	ldr	r0, [fp, #8]
   39ea4:	ldr	r0, [r0]
   39ea8:	str	r0, [sp, #40]	; 0x28
   39eac:	str	r0, [sp, #64]	; 0x40
   39eb0:	ldr	r1, [r4]
   39eb4:	mov	r2, #0
   39eb8:	ldr	r0, [fp, #24]
   39ebc:	cmp	r0, #2
   39ec0:	str	r1, [sp, #44]	; 0x2c
   39ec4:	str	r1, [sp, #52]	; 0x34
   39ec8:	add	ip, sp, #64	; 0x40
   39ecc:	sub	r5, fp, #72	; 0x48
   39ed0:	ldr	sl, [sp, #48]	; 0x30
   39ed4:	blt	39f70 <GetDataSlab+0x17b34>
   39ed8:	mov	r1, #1
   39edc:	mov	r2, #0
   39ee0:	ldr	r3, [fp, #8]
   39ee4:	ldr	r0, [sp, #44]	; 0x2c
   39ee8:	str	r0, [sp, #52]	; 0x34
   39eec:	ldr	r0, [lr, r1, lsl #2]
   39ef0:	sub	r7, r0, #1
   39ef4:	str	r7, [r5, r1, lsl #2]
   39ef8:	sub	r9, r1, #1
   39efc:	ldr	r0, [fp, #8]
   39f00:	ldr	r4, [r0, r9, lsl #2]
   39f04:	str	r4, [ip, r1, lsl #2]
   39f08:	mov	r0, #0
   39f0c:	mov	r6, r3
   39f10:	ldr	r5, [r6, -r0, lsl #2]!
   39f14:	mul	r7, r7, r5
   39f18:	ldr	r5, [r6, #4]
   39f1c:	mul	r4, r5, r4
   39f20:	add	r0, r0, #1
   39f24:	cmp	r1, r0
   39f28:	bne	39f0c <GetDataSlab+0x17ad0>
   39f2c:	str	r4, [ip, r1, lsl #2]
   39f30:	sub	r5, fp, #72	; 0x48
   39f34:	str	r7, [r5, r1, lsl #2]
   39f38:	ldr	r0, [ip, r9, lsl #2]
   39f3c:	ldr	r7, [fp, #12]
   39f40:	ldr	r4, [r7, r1, lsl #2]
   39f44:	mla	r2, r4, r0, r2
   39f48:	ldr	r4, [fp, #20]
   39f4c:	ldr	r0, [r4, r1, lsl #2]
   39f50:	ldr	r6, [sp, #52]	; 0x34
   39f54:	mul	r6, r0, r6
   39f58:	str	r6, [sp, #52]	; 0x34
   39f5c:	add	r3, r3, #4
   39f60:	add	r1, r1, #1
   39f64:	ldr	r0, [fp, #24]
   39f68:	cmp	r1, r0
   39f6c:	bne	39eec <GetDataSlab+0x17ab0>
   39f70:	add	ip, sl, r2, lsl #3
   39f74:	cmp	r8, #1
   39f78:	ldr	lr, [fp, #12]
   39f7c:	bne	3a0e4 <GetDataSlab+0x17ca8>
   39f80:	ldr	r0, [sp, #52]	; 0x34
   39f84:	cmp	r0, #1
   39f88:	ldr	r9, [sp, #44]	; 0x2c
   39f8c:	blt	3ae3c <GetDataSlab+0x18a00>
   39f90:	add	sl, r4, #4
   39f94:	add	r0, sp, #104	; 0x68
   39f98:	orr	r6, r0, #4
   39f9c:	sub	r0, fp, #72	; 0x48
   39fa0:	orr	r0, r0, #4
   39fa4:	str	r0, [sp, #32]
   39fa8:	lsl	r0, r9, #1
   39fac:	str	r0, [sp, #48]	; 0x30
   39fb0:	ldr	r0, [lr], #4
   39fb4:	str	r0, [sp, #36]	; 0x24
   39fb8:	str	lr, [sp, #56]	; 0x38
   39fbc:	mov	r8, #0
   39fc0:	mov	lr, #0
   39fc4:	ldr	r5, [sp, #56]	; 0x38
   39fc8:	cmp	r9, #1
   39fcc:	blt	39ff0 <GetDataSlab+0x17bb4>
   39fd0:	ldr	r0, [sp, #36]	; 0x24
   39fd4:	add	r0, ip, r0, lsl #3
   39fd8:	ldr	r9, [sp, #44]	; 0x2c
   39fdc:	ldr	r4, [sp, #60]	; 0x3c
   39fe0:	ldrh	r3, [r0], #8
   39fe4:	strh	r3, [r4], #2
   39fe8:	subs	r9, r9, #1
   39fec:	bne	39fe0 <GetDataSlab+0x17ba4>
   39ff0:	ldr	r0, [sp, #40]	; 0x28
   39ff4:	add	ip, ip, r0, lsl #3
   39ff8:	add	r2, r2, r0
   39ffc:	ldr	r0, [fp, #24]
   3a000:	cmp	r0, #2
   3a004:	blt	3a0a4 <GetDataSlab+0x17c68>
   3a008:	mov	r4, #0
   3a00c:	ldr	r9, [sp, #44]	; 0x2c
   3a010:	mov	r0, r4
   3a014:	ldr	r3, [r6, r4, lsl #2]
   3a018:	add	r3, r3, #1
   3a01c:	str	r3, [r6, r4, lsl #2]
   3a020:	ldr	r4, [sl, r4, lsl #2]
   3a024:	sdiv	r1, r3, r4
   3a028:	mls	r1, r1, r4, r3
   3a02c:	cmp	r1, #0
   3a030:	bne	3a0ac <GetDataSlab+0x17c70>
   3a034:	str	r8, [r6, r0, lsl #2]
   3a038:	add	r7, sp, #64	; 0x40
   3a03c:	add	r1, r7, r0, lsl #2
   3a040:	ldr	r4, [r1, #4]
   3a044:	sdiv	r1, r2, r4
   3a048:	mls	r3, r1, r4, r2
   3a04c:	cmp	r3, #0
   3a050:	beq	3a06c <GetDataSlab+0x17c30>
   3a054:	ldr	r1, [r7, r0, lsl #2]
   3a058:	ldr	r7, [r5, r0, lsl #2]
   3a05c:	sub	r3, r4, r3
   3a060:	mla	r1, r7, r1, r3
   3a064:	add	r2, r1, r2
   3a068:	b	3a088 <GetDataSlab+0x17c4c>
   3a06c:	ldr	r3, [r5, r0, lsl #2]
   3a070:	cmp	r3, #0
   3a074:	beq	3a08c <GetDataSlab+0x17c50>
   3a078:	add	r1, sp, #64	; 0x40
   3a07c:	ldr	r1, [r1, r0, lsl #2]
   3a080:	mla	r2, r1, r3, r2
   3a084:	mul	r1, r1, r3
   3a088:	add	ip, ip, r1, lsl #3
   3a08c:	add	r4, r0, #1
   3a090:	add	r0, r0, #2
   3a094:	ldr	r1, [fp, #24]
   3a098:	cmp	r0, r1
   3a09c:	blt	3a010 <GetDataSlab+0x17bd4>
   3a0a0:	b	3a0bc <GetDataSlab+0x17c80>
   3a0a4:	ldr	r9, [sp, #44]	; 0x2c
   3a0a8:	b	3a0bc <GetDataSlab+0x17c80>
   3a0ac:	ldr	r1, [sp, #32]
   3a0b0:	ldr	r0, [r1, r0, lsl #2]
   3a0b4:	add	ip, ip, r0, lsl #3
   3a0b8:	add	r2, r0, r2
   3a0bc:	ldr	r0, [sp, #60]	; 0x3c
   3a0c0:	ldr	r1, [sp, #48]	; 0x30
   3a0c4:	add	r0, r0, r1
   3a0c8:	str	r0, [sp, #60]	; 0x3c
   3a0cc:	add	lr, lr, r9
   3a0d0:	mov	r0, #0
   3a0d4:	ldr	r1, [sp, #52]	; 0x34
   3a0d8:	cmp	lr, r1
   3a0dc:	blt	39fc8 <GetDataSlab+0x17b8c>
   3a0e0:	b	22560 <GetDataSlab+0x124>
   3a0e4:	ldr	r0, [sp, #52]	; 0x34
   3a0e8:	cmp	r0, #1
   3a0ec:	ldr	r1, [sp, #44]	; 0x2c
   3a0f0:	blt	3ae3c <GetDataSlab+0x18a00>
   3a0f4:	ldr	r0, [sp, #40]	; 0x28
   3a0f8:	mls	r0, r1, r8, r0
   3a0fc:	ldr	r3, [lr], #4
   3a100:	sub	r0, r0, r3
   3a104:	str	r0, [sp, #48]	; 0x30
   3a108:	add	sl, r4, #4
   3a10c:	add	r0, sp, #104	; 0x68
   3a110:	orr	r6, r0, #4
   3a114:	sub	r0, fp, #72	; 0x48
   3a118:	orr	r0, r0, #4
   3a11c:	str	r0, [sp, #32]
   3a120:	str	r3, [sp, #56]	; 0x38
   3a124:	mla	r0, r1, r8, r3
   3a128:	str	r0, [sp, #36]	; 0x24
   3a12c:	lsl	r0, r1, #1
   3a130:	str	r0, [sp, #40]	; 0x28
   3a134:	lsl	r4, r8, #3
   3a138:	mov	r8, #0
   3a13c:	cmp	r1, #1
   3a140:	ldr	r0, [sp, #56]	; 0x38
   3a144:	blt	3a168 <GetDataSlab+0x17d2c>
   3a148:	ldr	r0, [sp, #56]	; 0x38
   3a14c:	add	r0, ip, r0, lsl #3
   3a150:	ldr	r3, [sp, #60]	; 0x3c
   3a154:	ldrh	r7, [r0], r4
   3a158:	strh	r7, [r3], #2
   3a15c:	subs	r1, r1, #1
   3a160:	bne	3a154 <GetDataSlab+0x17d18>
   3a164:	ldr	r0, [sp, #36]	; 0x24
   3a168:	ldr	r3, [sp, #48]	; 0x30
   3a16c:	add	r1, ip, r3, lsl #3
   3a170:	add	ip, r1, r0, lsl #3
   3a174:	add	r0, r0, r2
   3a178:	add	r2, r0, r3
   3a17c:	ldr	r0, [fp, #24]
   3a180:	cmp	r0, #2
   3a184:	blt	3a238 <GetDataSlab+0x17dfc>
   3a188:	mov	r9, #0
   3a18c:	mov	r0, r9
   3a190:	ldr	r1, [r6, r9, lsl #2]
   3a194:	add	r1, r1, #1
   3a198:	str	r1, [r6, r9, lsl #2]
   3a19c:	ldr	r3, [sl, r9, lsl #2]
   3a1a0:	sdiv	r7, r1, r3
   3a1a4:	mls	r1, r7, r3, r1
   3a1a8:	cmp	r1, #0
   3a1ac:	bne	3a228 <GetDataSlab+0x17dec>
   3a1b0:	mov	r1, #0
   3a1b4:	str	r1, [r6, r0, lsl #2]
   3a1b8:	add	r5, sp, #64	; 0x40
   3a1bc:	add	r1, r5, r0, lsl #2
   3a1c0:	ldr	r1, [r1, #4]
   3a1c4:	sdiv	r3, r2, r1
   3a1c8:	mls	r3, r3, r1, r2
   3a1cc:	cmp	r3, #0
   3a1d0:	beq	3a1ec <GetDataSlab+0x17db0>
   3a1d4:	ldr	r7, [r5, r0, lsl #2]
   3a1d8:	ldr	r5, [lr, r0, lsl #2]
   3a1dc:	sub	r1, r1, r3
   3a1e0:	mla	r1, r5, r7, r1
   3a1e4:	add	r2, r1, r2
   3a1e8:	b	3a20c <GetDataSlab+0x17dd0>
   3a1ec:	mov	r1, lr
   3a1f0:	ldr	r1, [lr, r0, lsl #2]
   3a1f4:	cmp	r1, #0
   3a1f8:	beq	3a210 <GetDataSlab+0x17dd4>
   3a1fc:	add	r3, sp, #64	; 0x40
   3a200:	ldr	r3, [r3, r0, lsl #2]
   3a204:	mla	r2, r3, r1, r2
   3a208:	mul	r1, r3, r1
   3a20c:	add	ip, ip, r1, lsl #3
   3a210:	add	r9, r0, #1
   3a214:	add	r0, r0, #2
   3a218:	ldr	r1, [fp, #24]
   3a21c:	cmp	r0, r1
   3a220:	blt	3a18c <GetDataSlab+0x17d50>
   3a224:	b	3a238 <GetDataSlab+0x17dfc>
   3a228:	ldr	r1, [sp, #32]
   3a22c:	ldr	r0, [r1, r0, lsl #2]
   3a230:	add	ip, ip, r0, lsl #3
   3a234:	add	r2, r0, r2
   3a238:	ldr	r0, [sp, #60]	; 0x3c
   3a23c:	ldr	r1, [sp, #40]	; 0x28
   3a240:	add	r0, r0, r1
   3a244:	str	r0, [sp, #60]	; 0x3c
   3a248:	ldr	r1, [sp, #44]	; 0x2c
   3a24c:	add	r8, r8, r1
   3a250:	mov	r0, #0
   3a254:	ldr	r3, [sp, #52]	; 0x34
   3a258:	cmp	r8, r3
   3a25c:	blt	3a13c <GetDataSlab+0x17d00>
   3a260:	b	22560 <GetDataSlab+0x124>
   3a264:	mov	r0, #0
   3a268:	ldr	r1, [sp, #52]	; 0x34
   3a26c:	cmp	r1, #13
   3a270:	bne	22560 <GetDataSlab+0x124>
   3a274:	ldr	r8, [lr]
   3a278:	sub	r0, r8, #1
   3a27c:	str	r0, [fp, #-72]	; 0xffffffb8
   3a280:	ldr	r0, [fp, #8]
   3a284:	ldr	r0, [r0]
   3a288:	str	r0, [sp, #40]	; 0x28
   3a28c:	str	r0, [sp, #64]	; 0x40
   3a290:	ldr	r1, [r4]
   3a294:	mov	r2, #0
   3a298:	ldr	r0, [fp, #24]
   3a29c:	cmp	r0, #2
   3a2a0:	str	r1, [sp, #44]	; 0x2c
   3a2a4:	str	r1, [sp, #52]	; 0x34
   3a2a8:	add	ip, sp, #64	; 0x40
   3a2ac:	sub	r5, fp, #72	; 0x48
   3a2b0:	ldr	sl, [sp, #48]	; 0x30
   3a2b4:	blt	3a350 <GetDataSlab+0x17f14>
   3a2b8:	mov	r1, #1
   3a2bc:	mov	r2, #0
   3a2c0:	ldr	r3, [fp, #8]
   3a2c4:	ldr	r0, [sp, #44]	; 0x2c
   3a2c8:	str	r0, [sp, #52]	; 0x34
   3a2cc:	ldr	r0, [lr, r1, lsl #2]
   3a2d0:	sub	r7, r0, #1
   3a2d4:	str	r7, [r5, r1, lsl #2]
   3a2d8:	sub	r9, r1, #1
   3a2dc:	ldr	r0, [fp, #8]
   3a2e0:	ldr	r4, [r0, r9, lsl #2]
   3a2e4:	str	r4, [ip, r1, lsl #2]
   3a2e8:	mov	r0, #0
   3a2ec:	mov	r6, r3
   3a2f0:	ldr	r5, [r6, -r0, lsl #2]!
   3a2f4:	mul	r7, r7, r5
   3a2f8:	ldr	r5, [r6, #4]
   3a2fc:	mul	r4, r5, r4
   3a300:	add	r0, r0, #1
   3a304:	cmp	r1, r0
   3a308:	bne	3a2ec <GetDataSlab+0x17eb0>
   3a30c:	str	r4, [ip, r1, lsl #2]
   3a310:	sub	r5, fp, #72	; 0x48
   3a314:	str	r7, [r5, r1, lsl #2]
   3a318:	ldr	r0, [ip, r9, lsl #2]
   3a31c:	ldr	r7, [fp, #12]
   3a320:	ldr	r4, [r7, r1, lsl #2]
   3a324:	mla	r2, r4, r0, r2
   3a328:	ldr	r4, [fp, #20]
   3a32c:	ldr	r0, [r4, r1, lsl #2]
   3a330:	ldr	r6, [sp, #52]	; 0x34
   3a334:	mul	r6, r0, r6
   3a338:	str	r6, [sp, #52]	; 0x34
   3a33c:	add	r3, r3, #4
   3a340:	add	r1, r1, #1
   3a344:	ldr	r0, [fp, #24]
   3a348:	cmp	r1, r0
   3a34c:	bne	3a2cc <GetDataSlab+0x17e90>
   3a350:	add	ip, sl, r2, lsl #3
   3a354:	cmp	r8, #1
   3a358:	ldr	lr, [fp, #12]
   3a35c:	bne	3a4c4 <GetDataSlab+0x18088>
   3a360:	ldr	r0, [sp, #52]	; 0x34
   3a364:	cmp	r0, #1
   3a368:	ldr	r9, [sp, #44]	; 0x2c
   3a36c:	blt	3ae3c <GetDataSlab+0x18a00>
   3a370:	add	sl, r4, #4
   3a374:	add	r0, sp, #104	; 0x68
   3a378:	orr	r6, r0, #4
   3a37c:	sub	r0, fp, #72	; 0x48
   3a380:	orr	r0, r0, #4
   3a384:	str	r0, [sp, #32]
   3a388:	lsl	r0, r9, #1
   3a38c:	str	r0, [sp, #48]	; 0x30
   3a390:	ldr	r0, [lr], #4
   3a394:	str	r0, [sp, #36]	; 0x24
   3a398:	str	lr, [sp, #56]	; 0x38
   3a39c:	mov	r8, #0
   3a3a0:	mov	lr, #0
   3a3a4:	ldr	r5, [sp, #56]	; 0x38
   3a3a8:	cmp	r9, #1
   3a3ac:	blt	3a3d0 <GetDataSlab+0x17f94>
   3a3b0:	ldr	r0, [sp, #36]	; 0x24
   3a3b4:	add	r0, ip, r0, lsl #3
   3a3b8:	ldr	r9, [sp, #44]	; 0x2c
   3a3bc:	ldr	r4, [sp, #60]	; 0x3c
   3a3c0:	ldrh	r3, [r0], #8
   3a3c4:	strh	r3, [r4], #2
   3a3c8:	subs	r9, r9, #1
   3a3cc:	bne	3a3c0 <GetDataSlab+0x17f84>
   3a3d0:	ldr	r0, [sp, #40]	; 0x28
   3a3d4:	add	ip, ip, r0, lsl #3
   3a3d8:	add	r2, r2, r0
   3a3dc:	ldr	r0, [fp, #24]
   3a3e0:	cmp	r0, #2
   3a3e4:	blt	3a484 <GetDataSlab+0x18048>
   3a3e8:	mov	r4, #0
   3a3ec:	ldr	r9, [sp, #44]	; 0x2c
   3a3f0:	mov	r0, r4
   3a3f4:	ldr	r3, [r6, r4, lsl #2]
   3a3f8:	add	r3, r3, #1
   3a3fc:	str	r3, [r6, r4, lsl #2]
   3a400:	ldr	r4, [sl, r4, lsl #2]
   3a404:	sdiv	r1, r3, r4
   3a408:	mls	r1, r1, r4, r3
   3a40c:	cmp	r1, #0
   3a410:	bne	3a48c <GetDataSlab+0x18050>
   3a414:	str	r8, [r6, r0, lsl #2]
   3a418:	add	r7, sp, #64	; 0x40
   3a41c:	add	r1, r7, r0, lsl #2
   3a420:	ldr	r4, [r1, #4]
   3a424:	sdiv	r1, r2, r4
   3a428:	mls	r3, r1, r4, r2
   3a42c:	cmp	r3, #0
   3a430:	beq	3a44c <GetDataSlab+0x18010>
   3a434:	ldr	r1, [r7, r0, lsl #2]
   3a438:	ldr	r7, [r5, r0, lsl #2]
   3a43c:	sub	r3, r4, r3
   3a440:	mla	r1, r7, r1, r3
   3a444:	add	r2, r1, r2
   3a448:	b	3a468 <GetDataSlab+0x1802c>
   3a44c:	ldr	r3, [r5, r0, lsl #2]
   3a450:	cmp	r3, #0
   3a454:	beq	3a46c <GetDataSlab+0x18030>
   3a458:	add	r1, sp, #64	; 0x40
   3a45c:	ldr	r1, [r1, r0, lsl #2]
   3a460:	mla	r2, r1, r3, r2
   3a464:	mul	r1, r1, r3
   3a468:	add	ip, ip, r1, lsl #3
   3a46c:	add	r4, r0, #1
   3a470:	add	r0, r0, #2
   3a474:	ldr	r1, [fp, #24]
   3a478:	cmp	r0, r1
   3a47c:	blt	3a3f0 <GetDataSlab+0x17fb4>
   3a480:	b	3a49c <GetDataSlab+0x18060>
   3a484:	ldr	r9, [sp, #44]	; 0x2c
   3a488:	b	3a49c <GetDataSlab+0x18060>
   3a48c:	ldr	r1, [sp, #32]
   3a490:	ldr	r0, [r1, r0, lsl #2]
   3a494:	add	ip, ip, r0, lsl #3
   3a498:	add	r2, r0, r2
   3a49c:	ldr	r0, [sp, #60]	; 0x3c
   3a4a0:	ldr	r1, [sp, #48]	; 0x30
   3a4a4:	add	r0, r0, r1
   3a4a8:	str	r0, [sp, #60]	; 0x3c
   3a4ac:	add	lr, lr, r9
   3a4b0:	mov	r0, #0
   3a4b4:	ldr	r1, [sp, #52]	; 0x34
   3a4b8:	cmp	lr, r1
   3a4bc:	blt	3a3a8 <GetDataSlab+0x17f6c>
   3a4c0:	b	22560 <GetDataSlab+0x124>
   3a4c4:	ldr	r0, [sp, #52]	; 0x34
   3a4c8:	cmp	r0, #1
   3a4cc:	ldr	r1, [sp, #44]	; 0x2c
   3a4d0:	blt	3ae3c <GetDataSlab+0x18a00>
   3a4d4:	ldr	r0, [sp, #40]	; 0x28
   3a4d8:	mls	r0, r1, r8, r0
   3a4dc:	ldr	r3, [lr], #4
   3a4e0:	sub	r0, r0, r3
   3a4e4:	str	r0, [sp, #48]	; 0x30
   3a4e8:	add	sl, r4, #4
   3a4ec:	add	r0, sp, #104	; 0x68
   3a4f0:	orr	r6, r0, #4
   3a4f4:	sub	r0, fp, #72	; 0x48
   3a4f8:	orr	r0, r0, #4
   3a4fc:	str	r0, [sp, #32]
   3a500:	str	r3, [sp, #56]	; 0x38
   3a504:	mla	r0, r1, r8, r3
   3a508:	str	r0, [sp, #36]	; 0x24
   3a50c:	lsl	r0, r1, #1
   3a510:	str	r0, [sp, #40]	; 0x28
   3a514:	lsl	r4, r8, #3
   3a518:	mov	r8, #0
   3a51c:	cmp	r1, #1
   3a520:	ldr	r0, [sp, #56]	; 0x38
   3a524:	blt	3a548 <GetDataSlab+0x1810c>
   3a528:	ldr	r0, [sp, #56]	; 0x38
   3a52c:	add	r0, ip, r0, lsl #3
   3a530:	ldr	r3, [sp, #60]	; 0x3c
   3a534:	ldrh	r7, [r0], r4
   3a538:	strh	r7, [r3], #2
   3a53c:	subs	r1, r1, #1
   3a540:	bne	3a534 <GetDataSlab+0x180f8>
   3a544:	ldr	r0, [sp, #36]	; 0x24
   3a548:	ldr	r3, [sp, #48]	; 0x30
   3a54c:	add	r1, ip, r3, lsl #3
   3a550:	add	ip, r1, r0, lsl #3
   3a554:	add	r0, r0, r2
   3a558:	add	r2, r0, r3
   3a55c:	ldr	r0, [fp, #24]
   3a560:	cmp	r0, #2
   3a564:	blt	3a618 <GetDataSlab+0x181dc>
   3a568:	mov	r9, #0
   3a56c:	mov	r0, r9
   3a570:	ldr	r1, [r6, r9, lsl #2]
   3a574:	add	r1, r1, #1
   3a578:	str	r1, [r6, r9, lsl #2]
   3a57c:	ldr	r3, [sl, r9, lsl #2]
   3a580:	sdiv	r7, r1, r3
   3a584:	mls	r1, r7, r3, r1
   3a588:	cmp	r1, #0
   3a58c:	bne	3a608 <GetDataSlab+0x181cc>
   3a590:	mov	r1, #0
   3a594:	str	r1, [r6, r0, lsl #2]
   3a598:	add	r5, sp, #64	; 0x40
   3a59c:	add	r1, r5, r0, lsl #2
   3a5a0:	ldr	r1, [r1, #4]
   3a5a4:	sdiv	r3, r2, r1
   3a5a8:	mls	r3, r3, r1, r2
   3a5ac:	cmp	r3, #0
   3a5b0:	beq	3a5cc <GetDataSlab+0x18190>
   3a5b4:	ldr	r7, [r5, r0, lsl #2]
   3a5b8:	ldr	r5, [lr, r0, lsl #2]
   3a5bc:	sub	r1, r1, r3
   3a5c0:	mla	r1, r5, r7, r1
   3a5c4:	add	r2, r1, r2
   3a5c8:	b	3a5ec <GetDataSlab+0x181b0>
   3a5cc:	mov	r1, lr
   3a5d0:	ldr	r1, [lr, r0, lsl #2]
   3a5d4:	cmp	r1, #0
   3a5d8:	beq	3a5f0 <GetDataSlab+0x181b4>
   3a5dc:	add	r3, sp, #64	; 0x40
   3a5e0:	ldr	r3, [r3, r0, lsl #2]
   3a5e4:	mla	r2, r3, r1, r2
   3a5e8:	mul	r1, r3, r1
   3a5ec:	add	ip, ip, r1, lsl #3
   3a5f0:	add	r9, r0, #1
   3a5f4:	add	r0, r0, #2
   3a5f8:	ldr	r1, [fp, #24]
   3a5fc:	cmp	r0, r1
   3a600:	blt	3a56c <GetDataSlab+0x18130>
   3a604:	b	3a618 <GetDataSlab+0x181dc>
   3a608:	ldr	r1, [sp, #32]
   3a60c:	ldr	r0, [r1, r0, lsl #2]
   3a610:	add	ip, ip, r0, lsl #3
   3a614:	add	r2, r0, r2
   3a618:	ldr	r0, [sp, #60]	; 0x3c
   3a61c:	ldr	r1, [sp, #40]	; 0x28
   3a620:	add	r0, r0, r1
   3a624:	str	r0, [sp, #60]	; 0x3c
   3a628:	ldr	r1, [sp, #44]	; 0x2c
   3a62c:	add	r8, r8, r1
   3a630:	mov	r0, #0
   3a634:	ldr	r3, [sp, #52]	; 0x34
   3a638:	cmp	r8, r3
   3a63c:	blt	3a51c <GetDataSlab+0x180e0>
   3a640:	b	22560 <GetDataSlab+0x124>
   3a644:	mov	r0, #0
   3a648:	ldr	lr, [fp, #16]
   3a64c:	ldr	r1, [sp, #52]	; 0x34
   3a650:	cmp	r1, #13
   3a654:	bne	22560 <GetDataSlab+0x124>
   3a658:	ldr	r8, [lr]
   3a65c:	sub	r0, r8, #1
   3a660:	str	r0, [fp, #-72]	; 0xffffffb8
   3a664:	ldr	r0, [fp, #8]
   3a668:	ldr	r0, [r0]
   3a66c:	str	r0, [sp, #40]	; 0x28
   3a670:	str	r0, [sp, #64]	; 0x40
   3a674:	ldr	r1, [r4]
   3a678:	mov	r2, #0
   3a67c:	ldr	r0, [fp, #24]
   3a680:	cmp	r0, #2
   3a684:	str	r1, [sp, #44]	; 0x2c
   3a688:	str	r1, [sp, #52]	; 0x34
   3a68c:	add	ip, sp, #64	; 0x40
   3a690:	sub	r5, fp, #72	; 0x48
   3a694:	ldr	sl, [sp, #48]	; 0x30
   3a698:	blt	3a734 <GetDataSlab+0x182f8>
   3a69c:	mov	r1, #1
   3a6a0:	mov	r2, #0
   3a6a4:	ldr	r3, [fp, #8]
   3a6a8:	ldr	r0, [sp, #44]	; 0x2c
   3a6ac:	str	r0, [sp, #52]	; 0x34
   3a6b0:	ldr	r0, [lr, r1, lsl #2]
   3a6b4:	sub	r7, r0, #1
   3a6b8:	str	r7, [r5, r1, lsl #2]
   3a6bc:	sub	r9, r1, #1
   3a6c0:	ldr	r0, [fp, #8]
   3a6c4:	ldr	r4, [r0, r9, lsl #2]
   3a6c8:	str	r4, [ip, r1, lsl #2]
   3a6cc:	mov	r0, #0
   3a6d0:	mov	r6, r3
   3a6d4:	ldr	r5, [r6, -r0, lsl #2]!
   3a6d8:	mul	r7, r7, r5
   3a6dc:	ldr	r5, [r6, #4]
   3a6e0:	mul	r4, r5, r4
   3a6e4:	add	r0, r0, #1
   3a6e8:	cmp	r1, r0
   3a6ec:	bne	3a6d0 <GetDataSlab+0x18294>
   3a6f0:	str	r4, [ip, r1, lsl #2]
   3a6f4:	sub	r5, fp, #72	; 0x48
   3a6f8:	str	r7, [r5, r1, lsl #2]
   3a6fc:	ldr	r0, [ip, r9, lsl #2]
   3a700:	ldr	r7, [fp, #12]
   3a704:	ldr	r4, [r7, r1, lsl #2]
   3a708:	mla	r2, r4, r0, r2
   3a70c:	ldr	r4, [fp, #20]
   3a710:	ldr	r0, [r4, r1, lsl #2]
   3a714:	ldr	r6, [sp, #52]	; 0x34
   3a718:	mul	r6, r0, r6
   3a71c:	str	r6, [sp, #52]	; 0x34
   3a720:	add	r3, r3, #4
   3a724:	add	r1, r1, #1
   3a728:	ldr	r0, [fp, #24]
   3a72c:	cmp	r1, r0
   3a730:	bne	3a6b0 <GetDataSlab+0x18274>
   3a734:	add	ip, sl, r2, lsl #3
   3a738:	cmp	r8, #1
   3a73c:	ldr	lr, [fp, #12]
   3a740:	bne	3a8b8 <GetDataSlab+0x1847c>
   3a744:	ldr	r0, [sp, #52]	; 0x34
   3a748:	cmp	r0, #1
   3a74c:	ldr	r9, [sp, #44]	; 0x2c
   3a750:	blt	3ae3c <GetDataSlab+0x18a00>
   3a754:	add	sl, r4, #4
   3a758:	add	r0, sp, #104	; 0x68
   3a75c:	orr	r6, r0, #4
   3a760:	sub	r0, fp, #72	; 0x48
   3a764:	orr	r0, r0, #4
   3a768:	str	r0, [sp, #32]
   3a76c:	lsl	r0, r9, #3
   3a770:	str	r0, [sp, #48]	; 0x30
   3a774:	ldr	r0, [lr], #4
   3a778:	str	r0, [sp, #36]	; 0x24
   3a77c:	str	lr, [sp, #56]	; 0x38
   3a780:	mov	r8, #0
   3a784:	mov	lr, #0
   3a788:	ldr	r5, [sp, #56]	; 0x38
   3a78c:	cmp	r9, #1
   3a790:	blt	3a7c4 <GetDataSlab+0x18388>
   3a794:	ldr	r0, [sp, #36]	; 0x24
   3a798:	add	r0, ip, r0, lsl #3
   3a79c:	ldr	r9, [sp, #44]	; 0x2c
   3a7a0:	ldr	r4, [sp, #60]	; 0x3c
   3a7a4:	ldr	r3, [r0]
   3a7a8:	ldr	r1, [r0, #4]
   3a7ac:	str	r3, [r4]
   3a7b0:	str	r1, [r4, #4]
   3a7b4:	subs	r9, r9, #1
   3a7b8:	add	r4, r4, #8
   3a7bc:	add	r0, r0, #8
   3a7c0:	bne	3a7a4 <GetDataSlab+0x18368>
   3a7c4:	ldr	r0, [sp, #40]	; 0x28
   3a7c8:	add	ip, ip, r0, lsl #3
   3a7cc:	add	r2, r2, r0
   3a7d0:	ldr	r0, [fp, #24]
   3a7d4:	cmp	r0, #2
   3a7d8:	blt	3a878 <GetDataSlab+0x1843c>
   3a7dc:	mov	r4, #0
   3a7e0:	ldr	r9, [sp, #44]	; 0x2c
   3a7e4:	mov	r0, r4
   3a7e8:	ldr	r1, [r6, r4, lsl #2]
   3a7ec:	add	r1, r1, #1
   3a7f0:	str	r1, [r6, r4, lsl #2]
   3a7f4:	ldr	r3, [sl, r4, lsl #2]
   3a7f8:	sdiv	r4, r1, r3
   3a7fc:	mls	r1, r4, r3, r1
   3a800:	cmp	r1, #0
   3a804:	bne	3a880 <GetDataSlab+0x18444>
   3a808:	str	r8, [r6, r0, lsl #2]
   3a80c:	add	r7, sp, #64	; 0x40
   3a810:	add	r1, r7, r0, lsl #2
   3a814:	ldr	r4, [r1, #4]
   3a818:	sdiv	r1, r2, r4
   3a81c:	mls	r3, r1, r4, r2
   3a820:	cmp	r3, #0
   3a824:	beq	3a840 <GetDataSlab+0x18404>
   3a828:	ldr	r1, [r7, r0, lsl #2]
   3a82c:	ldr	r7, [r5, r0, lsl #2]
   3a830:	sub	r3, r4, r3
   3a834:	mla	r1, r7, r1, r3
   3a838:	add	r2, r1, r2
   3a83c:	b	3a85c <GetDataSlab+0x18420>
   3a840:	ldr	r3, [r5, r0, lsl #2]
   3a844:	cmp	r3, #0
   3a848:	beq	3a860 <GetDataSlab+0x18424>
   3a84c:	add	r1, sp, #64	; 0x40
   3a850:	ldr	r1, [r1, r0, lsl #2]
   3a854:	mla	r2, r1, r3, r2
   3a858:	mul	r1, r1, r3
   3a85c:	add	ip, ip, r1, lsl #3
   3a860:	add	r4, r0, #1
   3a864:	add	r0, r0, #2
   3a868:	ldr	r1, [fp, #24]
   3a86c:	cmp	r0, r1
   3a870:	blt	3a7e4 <GetDataSlab+0x183a8>
   3a874:	b	3a890 <GetDataSlab+0x18454>
   3a878:	ldr	r9, [sp, #44]	; 0x2c
   3a87c:	b	3a890 <GetDataSlab+0x18454>
   3a880:	ldr	r1, [sp, #32]
   3a884:	ldr	r0, [r1, r0, lsl #2]
   3a888:	add	ip, ip, r0, lsl #3
   3a88c:	add	r2, r0, r2
   3a890:	ldr	r0, [sp, #60]	; 0x3c
   3a894:	ldr	r1, [sp, #48]	; 0x30
   3a898:	add	r0, r0, r1
   3a89c:	str	r0, [sp, #60]	; 0x3c
   3a8a0:	add	lr, lr, r9
   3a8a4:	mov	r0, #0
   3a8a8:	ldr	r1, [sp, #52]	; 0x34
   3a8ac:	cmp	lr, r1
   3a8b0:	blt	3a78c <GetDataSlab+0x18350>
   3a8b4:	b	22560 <GetDataSlab+0x124>
   3a8b8:	ldr	r0, [sp, #52]	; 0x34
   3a8bc:	cmp	r0, #1
   3a8c0:	ldr	r1, [sp, #44]	; 0x2c
   3a8c4:	blt	3ae3c <GetDataSlab+0x18a00>
   3a8c8:	ldr	r0, [sp, #40]	; 0x28
   3a8cc:	mls	r0, r1, r8, r0
   3a8d0:	ldr	r3, [lr], #4
   3a8d4:	sub	r0, r0, r3
   3a8d8:	str	r0, [sp, #48]	; 0x30
   3a8dc:	add	sl, r4, #4
   3a8e0:	add	r0, sp, #104	; 0x68
   3a8e4:	orr	r6, r0, #4
   3a8e8:	sub	r0, fp, #72	; 0x48
   3a8ec:	orr	r0, r0, #4
   3a8f0:	str	r0, [sp, #32]
   3a8f4:	str	r3, [sp, #56]	; 0x38
   3a8f8:	mla	r0, r1, r8, r3
   3a8fc:	str	r0, [sp, #36]	; 0x24
   3a900:	lsl	r0, r1, #3
   3a904:	str	r0, [sp, #40]	; 0x28
   3a908:	lsl	r4, r8, #3
   3a90c:	mov	r8, #0
   3a910:	cmp	r1, #1
   3a914:	ldr	r0, [sp, #56]	; 0x38
   3a918:	blt	3a944 <GetDataSlab+0x18508>
   3a91c:	ldr	r0, [sp, #56]	; 0x38
   3a920:	add	r7, ip, r0, lsl #3
   3a924:	ldr	r3, [sp, #60]	; 0x3c
   3a928:	ldm	r7, {r0, r9}
   3a92c:	stm	r3, {r0, r9}
   3a930:	add	r7, r7, r4
   3a934:	subs	r1, r1, #1
   3a938:	add	r3, r3, #8
   3a93c:	bne	3a928 <GetDataSlab+0x184ec>
   3a940:	ldr	r0, [sp, #36]	; 0x24
   3a944:	ldr	r3, [sp, #48]	; 0x30
   3a948:	add	r1, ip, r3, lsl #3
   3a94c:	add	ip, r1, r0, lsl #3
   3a950:	add	r0, r0, r2
   3a954:	add	r2, r0, r3
   3a958:	ldr	r0, [fp, #24]
   3a95c:	cmp	r0, #2
   3a960:	blt	3aa14 <GetDataSlab+0x185d8>
   3a964:	mov	r9, #0
   3a968:	mov	r0, r9
   3a96c:	ldr	r1, [r6, r9, lsl #2]
   3a970:	add	r1, r1, #1
   3a974:	str	r1, [r6, r9, lsl #2]
   3a978:	ldr	r3, [sl, r9, lsl #2]
   3a97c:	sdiv	r7, r1, r3
   3a980:	mls	r1, r7, r3, r1
   3a984:	cmp	r1, #0
   3a988:	bne	3aa04 <GetDataSlab+0x185c8>
   3a98c:	mov	r1, #0
   3a990:	str	r1, [r6, r0, lsl #2]
   3a994:	add	r5, sp, #64	; 0x40
   3a998:	add	r1, r5, r0, lsl #2
   3a99c:	ldr	r1, [r1, #4]
   3a9a0:	sdiv	r3, r2, r1
   3a9a4:	mls	r3, r3, r1, r2
   3a9a8:	cmp	r3, #0
   3a9ac:	beq	3a9c8 <GetDataSlab+0x1858c>
   3a9b0:	ldr	r7, [r5, r0, lsl #2]
   3a9b4:	ldr	r5, [lr, r0, lsl #2]
   3a9b8:	sub	r1, r1, r3
   3a9bc:	mla	r1, r5, r7, r1
   3a9c0:	add	r2, r1, r2
   3a9c4:	b	3a9e8 <GetDataSlab+0x185ac>
   3a9c8:	mov	r1, lr
   3a9cc:	ldr	r1, [lr, r0, lsl #2]
   3a9d0:	cmp	r1, #0
   3a9d4:	beq	3a9ec <GetDataSlab+0x185b0>
   3a9d8:	add	r3, sp, #64	; 0x40
   3a9dc:	ldr	r3, [r3, r0, lsl #2]
   3a9e0:	mla	r2, r3, r1, r2
   3a9e4:	mul	r1, r3, r1
   3a9e8:	add	ip, ip, r1, lsl #3
   3a9ec:	add	r9, r0, #1
   3a9f0:	add	r0, r0, #2
   3a9f4:	ldr	r1, [fp, #24]
   3a9f8:	cmp	r0, r1
   3a9fc:	blt	3a968 <GetDataSlab+0x1852c>
   3aa00:	b	3aa14 <GetDataSlab+0x185d8>
   3aa04:	ldr	r1, [sp, #32]
   3aa08:	ldr	r0, [r1, r0, lsl #2]
   3aa0c:	add	ip, ip, r0, lsl #3
   3aa10:	add	r2, r0, r2
   3aa14:	ldr	r0, [sp, #60]	; 0x3c
   3aa18:	ldr	r1, [sp, #40]	; 0x28
   3aa1c:	add	r0, r0, r1
   3aa20:	str	r0, [sp, #60]	; 0x3c
   3aa24:	ldr	r1, [sp, #44]	; 0x2c
   3aa28:	add	r8, r8, r1
   3aa2c:	mov	r0, #0
   3aa30:	ldr	r3, [sp, #52]	; 0x34
   3aa34:	cmp	r8, r3
   3aa38:	blt	3a910 <GetDataSlab+0x184d4>
   3aa3c:	b	22560 <GetDataSlab+0x124>
   3aa40:	mov	r0, #0
   3aa44:	ldr	lr, [fp, #16]
   3aa48:	ldr	r1, [sp, #52]	; 0x34
   3aa4c:	cmp	r1, #13
   3aa50:	bne	22560 <GetDataSlab+0x124>
   3aa54:	ldr	r8, [lr]
   3aa58:	sub	r0, r8, #1
   3aa5c:	str	r0, [fp, #-72]	; 0xffffffb8
   3aa60:	ldr	r0, [fp, #8]
   3aa64:	ldr	r0, [r0]
   3aa68:	str	r0, [sp, #40]	; 0x28
   3aa6c:	str	r0, [sp, #64]	; 0x40
   3aa70:	ldr	r1, [r4]
   3aa74:	mov	r2, #0
   3aa78:	ldr	r0, [fp, #24]
   3aa7c:	cmp	r0, #2
   3aa80:	str	r1, [sp, #44]	; 0x2c
   3aa84:	str	r1, [sp, #52]	; 0x34
   3aa88:	add	ip, sp, #64	; 0x40
   3aa8c:	sub	r5, fp, #72	; 0x48
   3aa90:	ldr	sl, [sp, #48]	; 0x30
   3aa94:	blt	3ab30 <GetDataSlab+0x186f4>
   3aa98:	mov	r1, #1
   3aa9c:	mov	r2, #0
   3aaa0:	ldr	r3, [fp, #8]
   3aaa4:	ldr	r0, [sp, #44]	; 0x2c
   3aaa8:	str	r0, [sp, #52]	; 0x34
   3aaac:	ldr	r0, [lr, r1, lsl #2]
   3aab0:	sub	r7, r0, #1
   3aab4:	str	r7, [r5, r1, lsl #2]
   3aab8:	sub	r9, r1, #1
   3aabc:	ldr	r0, [fp, #8]
   3aac0:	ldr	r4, [r0, r9, lsl #2]
   3aac4:	str	r4, [ip, r1, lsl #2]
   3aac8:	mov	r0, #0
   3aacc:	mov	r6, r3
   3aad0:	ldr	r5, [r6, -r0, lsl #2]!
   3aad4:	mul	r7, r7, r5
   3aad8:	ldr	r5, [r6, #4]
   3aadc:	mul	r4, r5, r4
   3aae0:	add	r0, r0, #1
   3aae4:	cmp	r1, r0
   3aae8:	bne	3aacc <GetDataSlab+0x18690>
   3aaec:	str	r4, [ip, r1, lsl #2]
   3aaf0:	sub	r5, fp, #72	; 0x48
   3aaf4:	str	r7, [r5, r1, lsl #2]
   3aaf8:	ldr	r0, [ip, r9, lsl #2]
   3aafc:	ldr	r7, [fp, #12]
   3ab00:	ldr	r4, [r7, r1, lsl #2]
   3ab04:	mla	r2, r4, r0, r2
   3ab08:	ldr	r4, [fp, #20]
   3ab0c:	ldr	r0, [r4, r1, lsl #2]
   3ab10:	ldr	r6, [sp, #52]	; 0x34
   3ab14:	mul	r6, r0, r6
   3ab18:	str	r6, [sp, #52]	; 0x34
   3ab1c:	add	r3, r3, #4
   3ab20:	add	r1, r1, #1
   3ab24:	ldr	r0, [fp, #24]
   3ab28:	cmp	r1, r0
   3ab2c:	bne	3aaac <GetDataSlab+0x18670>
   3ab30:	add	ip, sl, r2, lsl #3
   3ab34:	cmp	r8, #1
   3ab38:	ldr	lr, [fp, #12]
   3ab3c:	bne	3acb4 <GetDataSlab+0x18878>
   3ab40:	ldr	r0, [sp, #52]	; 0x34
   3ab44:	cmp	r0, #1
   3ab48:	ldr	r9, [sp, #44]	; 0x2c
   3ab4c:	blt	3ae3c <GetDataSlab+0x18a00>
   3ab50:	add	sl, r4, #4
   3ab54:	add	r0, sp, #104	; 0x68
   3ab58:	orr	r6, r0, #4
   3ab5c:	sub	r0, fp, #72	; 0x48
   3ab60:	orr	r0, r0, #4
   3ab64:	str	r0, [sp, #32]
   3ab68:	lsl	r0, r9, #3
   3ab6c:	str	r0, [sp, #48]	; 0x30
   3ab70:	ldr	r0, [lr], #4
   3ab74:	str	r0, [sp, #36]	; 0x24
   3ab78:	str	lr, [sp, #56]	; 0x38
   3ab7c:	mov	r8, #0
   3ab80:	mov	lr, #0
   3ab84:	ldr	r5, [sp, #56]	; 0x38
   3ab88:	cmp	r9, #1
   3ab8c:	blt	3abc0 <GetDataSlab+0x18784>
   3ab90:	ldr	r0, [sp, #36]	; 0x24
   3ab94:	add	r0, ip, r0, lsl #3
   3ab98:	ldr	r9, [sp, #44]	; 0x2c
   3ab9c:	ldr	r4, [sp, #60]	; 0x3c
   3aba0:	ldr	r3, [r0]
   3aba4:	ldr	r1, [r0, #4]
   3aba8:	str	r3, [r4]
   3abac:	str	r1, [r4, #4]
   3abb0:	subs	r9, r9, #1
   3abb4:	add	r4, r4, #8
   3abb8:	add	r0, r0, #8
   3abbc:	bne	3aba0 <GetDataSlab+0x18764>
   3abc0:	ldr	r0, [sp, #40]	; 0x28
   3abc4:	add	ip, ip, r0, lsl #3
   3abc8:	add	r2, r2, r0
   3abcc:	ldr	r0, [fp, #24]
   3abd0:	cmp	r0, #2
   3abd4:	blt	3ac74 <GetDataSlab+0x18838>
   3abd8:	mov	r4, #0
   3abdc:	ldr	r9, [sp, #44]	; 0x2c
   3abe0:	mov	r0, r4
   3abe4:	ldr	r1, [r6, r4, lsl #2]
   3abe8:	add	r1, r1, #1
   3abec:	str	r1, [r6, r4, lsl #2]
   3abf0:	ldr	r3, [sl, r4, lsl #2]
   3abf4:	sdiv	r4, r1, r3
   3abf8:	mls	r1, r4, r3, r1
   3abfc:	cmp	r1, #0
   3ac00:	bne	3ac7c <GetDataSlab+0x18840>
   3ac04:	str	r8, [r6, r0, lsl #2]
   3ac08:	add	r7, sp, #64	; 0x40
   3ac0c:	add	r1, r7, r0, lsl #2
   3ac10:	ldr	r4, [r1, #4]
   3ac14:	sdiv	r1, r2, r4
   3ac18:	mls	r3, r1, r4, r2
   3ac1c:	cmp	r3, #0
   3ac20:	beq	3ac3c <GetDataSlab+0x18800>
   3ac24:	ldr	r1, [r7, r0, lsl #2]
   3ac28:	ldr	r7, [r5, r0, lsl #2]
   3ac2c:	sub	r3, r4, r3
   3ac30:	mla	r1, r7, r1, r3
   3ac34:	add	r2, r1, r2
   3ac38:	b	3ac58 <GetDataSlab+0x1881c>
   3ac3c:	ldr	r3, [r5, r0, lsl #2]
   3ac40:	cmp	r3, #0
   3ac44:	beq	3ac5c <GetDataSlab+0x18820>
   3ac48:	add	r1, sp, #64	; 0x40
   3ac4c:	ldr	r1, [r1, r0, lsl #2]
   3ac50:	mla	r2, r1, r3, r2
   3ac54:	mul	r1, r1, r3
   3ac58:	add	ip, ip, r1, lsl #3
   3ac5c:	add	r4, r0, #1
   3ac60:	add	r0, r0, #2
   3ac64:	ldr	r1, [fp, #24]
   3ac68:	cmp	r0, r1
   3ac6c:	blt	3abe0 <GetDataSlab+0x187a4>
   3ac70:	b	3ac8c <GetDataSlab+0x18850>
   3ac74:	ldr	r9, [sp, #44]	; 0x2c
   3ac78:	b	3ac8c <GetDataSlab+0x18850>
   3ac7c:	ldr	r1, [sp, #32]
   3ac80:	ldr	r0, [r1, r0, lsl #2]
   3ac84:	add	ip, ip, r0, lsl #3
   3ac88:	add	r2, r0, r2
   3ac8c:	ldr	r0, [sp, #60]	; 0x3c
   3ac90:	ldr	r1, [sp, #48]	; 0x30
   3ac94:	add	r0, r0, r1
   3ac98:	str	r0, [sp, #60]	; 0x3c
   3ac9c:	add	lr, lr, r9
   3aca0:	mov	r0, #0
   3aca4:	ldr	r1, [sp, #52]	; 0x34
   3aca8:	cmp	lr, r1
   3acac:	blt	3ab88 <GetDataSlab+0x1874c>
   3acb0:	b	22560 <GetDataSlab+0x124>
   3acb4:	ldr	r0, [sp, #52]	; 0x34
   3acb8:	cmp	r0, #1
   3acbc:	ldr	r1, [sp, #44]	; 0x2c
   3acc0:	blt	3ae3c <GetDataSlab+0x18a00>
   3acc4:	ldr	r0, [sp, #40]	; 0x28
   3acc8:	mls	r0, r1, r8, r0
   3accc:	ldr	r3, [lr], #4
   3acd0:	sub	r0, r0, r3
   3acd4:	str	r0, [sp, #48]	; 0x30
   3acd8:	add	sl, r4, #4
   3acdc:	add	r0, sp, #104	; 0x68
   3ace0:	orr	r6, r0, #4
   3ace4:	sub	r0, fp, #72	; 0x48
   3ace8:	orr	r0, r0, #4
   3acec:	str	r0, [sp, #32]
   3acf0:	str	r3, [sp, #56]	; 0x38
   3acf4:	mla	r0, r1, r8, r3
   3acf8:	str	r0, [sp, #36]	; 0x24
   3acfc:	lsl	r0, r1, #3
   3ad00:	str	r0, [sp, #40]	; 0x28
   3ad04:	lsl	r4, r8, #3
   3ad08:	mov	r8, #0
   3ad0c:	cmp	r1, #1
   3ad10:	ldr	r0, [sp, #56]	; 0x38
   3ad14:	blt	3ad40 <GetDataSlab+0x18904>
   3ad18:	ldr	r0, [sp, #56]	; 0x38
   3ad1c:	add	r7, ip, r0, lsl #3
   3ad20:	ldr	r3, [sp, #60]	; 0x3c
   3ad24:	ldm	r7, {r0, r9}
   3ad28:	stm	r3, {r0, r9}
   3ad2c:	add	r7, r7, r4
   3ad30:	subs	r1, r1, #1
   3ad34:	add	r3, r3, #8
   3ad38:	bne	3ad24 <GetDataSlab+0x188e8>
   3ad3c:	ldr	r0, [sp, #36]	; 0x24
   3ad40:	ldr	r3, [sp, #48]	; 0x30
   3ad44:	add	r1, ip, r3, lsl #3
   3ad48:	add	ip, r1, r0, lsl #3
   3ad4c:	add	r0, r0, r2
   3ad50:	add	r2, r0, r3
   3ad54:	ldr	r0, [fp, #24]
   3ad58:	cmp	r0, #2
   3ad5c:	blt	3ae10 <GetDataSlab+0x189d4>
   3ad60:	mov	r9, #0
   3ad64:	mov	r0, r9
   3ad68:	ldr	r1, [r6, r9, lsl #2]
   3ad6c:	add	r1, r1, #1
   3ad70:	str	r1, [r6, r9, lsl #2]
   3ad74:	ldr	r3, [sl, r9, lsl #2]
   3ad78:	sdiv	r7, r1, r3
   3ad7c:	mls	r1, r7, r3, r1
   3ad80:	cmp	r1, #0
   3ad84:	bne	3ae00 <GetDataSlab+0x189c4>
   3ad88:	mov	r1, #0
   3ad8c:	str	r1, [r6, r0, lsl #2]
   3ad90:	add	r5, sp, #64	; 0x40
   3ad94:	add	r1, r5, r0, lsl #2
   3ad98:	ldr	r1, [r1, #4]
   3ad9c:	sdiv	r3, r2, r1
   3ada0:	mls	r3, r3, r1, r2
   3ada4:	cmp	r3, #0
   3ada8:	beq	3adc4 <GetDataSlab+0x18988>
   3adac:	ldr	r7, [r5, r0, lsl #2]
   3adb0:	ldr	r5, [lr, r0, lsl #2]
   3adb4:	sub	r1, r1, r3
   3adb8:	mla	r1, r5, r7, r1
   3adbc:	add	r2, r1, r2
   3adc0:	b	3ade4 <GetDataSlab+0x189a8>
   3adc4:	mov	r1, lr
   3adc8:	ldr	r1, [lr, r0, lsl #2]
   3adcc:	cmp	r1, #0
   3add0:	beq	3ade8 <GetDataSlab+0x189ac>
   3add4:	add	r3, sp, #64	; 0x40
   3add8:	ldr	r3, [r3, r0, lsl #2]
   3addc:	mla	r2, r3, r1, r2
   3ade0:	mul	r1, r3, r1
   3ade4:	add	ip, ip, r1, lsl #3
   3ade8:	add	r9, r0, #1
   3adec:	add	r0, r0, #2
   3adf0:	ldr	r1, [fp, #24]
   3adf4:	cmp	r0, r1
   3adf8:	blt	3ad64 <GetDataSlab+0x18928>
   3adfc:	b	3ae10 <GetDataSlab+0x189d4>
   3ae00:	ldr	r1, [sp, #32]
   3ae04:	ldr	r0, [r1, r0, lsl #2]
   3ae08:	add	ip, ip, r0, lsl #3
   3ae0c:	add	r2, r0, r2
   3ae10:	ldr	r0, [sp, #60]	; 0x3c
   3ae14:	ldr	r1, [sp, #40]	; 0x28
   3ae18:	add	r0, r0, r1
   3ae1c:	str	r0, [sp, #60]	; 0x3c
   3ae20:	ldr	r1, [sp, #44]	; 0x2c
   3ae24:	add	r8, r8, r1
   3ae28:	mov	r0, #0
   3ae2c:	ldr	r3, [sp, #52]	; 0x34
   3ae30:	cmp	r8, r3
   3ae34:	blt	3ad0c <GetDataSlab+0x188d0>
   3ae38:	b	22560 <GetDataSlab+0x124>
   3ae3c:	mov	r0, #0
   3ae40:	sub	sp, fp, #28
   3ae44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ae48:	ldr	r0, [sp, #56]	; 0x38
   3ae4c:	cmp	r0, #1
   3ae50:	blt	240b8 <GetDataSlab+0x1c7c>
   3ae54:	ldr	r0, [sp, #32]
   3ae58:	ldr	r1, [sp, #28]
   3ae5c:	mla	r0, r1, r6, r0
   3ae60:	add	r1, lr, r0
   3ae64:	ldr	r0, [sp, #36]	; 0x24
   3ae68:	mul	lr, r0, r6
   3ae6c:	mov	r3, #0
   3ae70:	ldr	r4, [sp, #60]	; 0x3c
   3ae74:	ldr	r2, [sp, #44]	; 0x2c
   3ae78:	cmp	r4, #1
   3ae7c:	blt	3aeb0 <GetDataSlab+0x18a74>
   3ae80:	mov	r0, #0
   3ae84:	mov	r7, r4
   3ae88:	mov	r6, ip
   3ae8c:	ldrb	r5, [r1, r0]
   3ae90:	vmov	s0, r5
   3ae94:	vcvt.f64.u32	d16, s0
   3ae98:	vstr	d16, [r6]
   3ae9c:	add	r0, r0, r2
   3aea0:	subs	r7, r7, #1
   3aea4:	add	r6, r6, #8
   3aea8:	bne	3ae8c <GetDataSlab+0x18a50>
   3aeac:	add	ip, ip, r4, lsl #3
   3aeb0:	add	r1, r1, lr
   3aeb4:	add	r3, r3, #1
   3aeb8:	mov	r0, #0
   3aebc:	ldr	r7, [sp, #56]	; 0x38
   3aec0:	cmp	r3, r7
   3aec4:	bne	3ae78 <GetDataSlab+0x18a3c>
   3aec8:	b	22560 <GetDataSlab+0x124>
   3aecc:	ldr	r0, [sp, #56]	; 0x38
   3aed0:	cmp	r0, #1
   3aed4:	blt	240b8 <GetDataSlab+0x1c7c>
   3aed8:	ldr	r0, [sp, #32]
   3aedc:	ldr	r1, [sp, #28]
   3aee0:	mla	r0, r1, r6, r0
   3aee4:	add	r1, lr, r0, lsl #1
   3aee8:	ldr	r0, [sp, #36]	; 0x24
   3aeec:	mul	r0, r0, r6
   3aef0:	lsl	lr, r0, #1
   3aef4:	ldr	r0, [sp, #44]	; 0x2c
   3aef8:	lsl	r3, r0, #1
   3aefc:	mov	r7, #0
   3af00:	ldr	r2, [sp, #60]	; 0x3c
   3af04:	cmp	r2, #1
   3af08:	blt	3af3c <GetDataSlab+0x18b00>
   3af0c:	mov	r0, #0
   3af10:	mov	r6, r2
   3af14:	mov	r5, ip
   3af18:	ldrsh	r4, [r1, -r0]
   3af1c:	vmov	s0, r4
   3af20:	vcvt.f64.s32	d16, s0
   3af24:	vstr	d16, [r5]
   3af28:	sub	r0, r0, r3
   3af2c:	subs	r6, r6, #1
   3af30:	add	r5, r5, #8
   3af34:	bne	3af18 <GetDataSlab+0x18adc>
   3af38:	add	ip, ip, r2, lsl #3
   3af3c:	add	r1, r1, lr
   3af40:	add	r7, r7, #1
   3af44:	mov	r0, #0
   3af48:	ldr	r2, [sp, #56]	; 0x38
   3af4c:	cmp	r7, r2
   3af50:	bne	3af00 <GetDataSlab+0x18ac4>
   3af54:	b	22560 <GetDataSlab+0x124>
   3af58:	ldr	r0, [sp, #56]	; 0x38
   3af5c:	cmp	r0, #1
   3af60:	blt	240b8 <GetDataSlab+0x1c7c>
   3af64:	ldr	r0, [sp, #32]
   3af68:	ldr	r1, [sp, #28]
   3af6c:	mla	r0, r1, r6, r0
   3af70:	add	r1, lr, r0, lsl #1
   3af74:	ldr	r0, [sp, #36]	; 0x24
   3af78:	mul	r0, r0, r6
   3af7c:	lsl	lr, r0, #1
   3af80:	ldr	r0, [sp, #44]	; 0x2c
   3af84:	lsl	r3, r0, #1
   3af88:	mov	r7, #0
   3af8c:	ldr	r2, [sp, #60]	; 0x3c
   3af90:	cmp	r2, #1
   3af94:	blt	3afc8 <GetDataSlab+0x18b8c>
   3af98:	mov	r0, #0
   3af9c:	mov	r6, r2
   3afa0:	mov	r5, ip
   3afa4:	ldrh	r4, [r1, -r0]
   3afa8:	vmov	s0, r4
   3afac:	vcvt.f64.u32	d16, s0
   3afb0:	vstr	d16, [r5]
   3afb4:	sub	r0, r0, r3
   3afb8:	subs	r6, r6, #1
   3afbc:	add	r5, r5, #8
   3afc0:	bne	3afa4 <GetDataSlab+0x18b68>
   3afc4:	add	ip, ip, r2, lsl #3
   3afc8:	add	r1, r1, lr
   3afcc:	add	r7, r7, #1
   3afd0:	mov	r0, #0
   3afd4:	ldr	r2, [sp, #56]	; 0x38
   3afd8:	cmp	r7, r2
   3afdc:	bne	3af8c <GetDataSlab+0x18b50>
   3afe0:	b	22560 <GetDataSlab+0x124>
   3afe4:	ldr	r0, [sp, #56]	; 0x38
   3afe8:	cmp	r0, #1
   3afec:	blt	240b8 <GetDataSlab+0x1c7c>
   3aff0:	ldr	r0, [sp, #32]
   3aff4:	ldr	r1, [sp, #28]
   3aff8:	mla	r0, r1, r6, r0
   3affc:	add	r1, lr, r0, lsl #2
   3b000:	ldr	r0, [sp, #36]	; 0x24
   3b004:	mul	r0, r0, r6
   3b008:	lsl	lr, r0, #2
   3b00c:	ldr	r0, [sp, #44]	; 0x2c
   3b010:	lsl	r3, r0, #2
   3b014:	mov	r7, #0
   3b018:	ldr	r2, [sp, #60]	; 0x3c
   3b01c:	cmp	r2, #1
   3b020:	blt	3b054 <GetDataSlab+0x18c18>
   3b024:	mov	r0, #0
   3b028:	mov	r6, r2
   3b02c:	mov	r5, ip
   3b030:	sub	r4, r1, r0
   3b034:	vldr	s0, [r4]
   3b038:	vcvt.f64.s32	d16, s0
   3b03c:	vstr	d16, [r5]
   3b040:	sub	r0, r0, r3
   3b044:	subs	r6, r6, #1
   3b048:	add	r5, r5, #8
   3b04c:	bne	3b030 <GetDataSlab+0x18bf4>
   3b050:	add	ip, ip, r2, lsl #3
   3b054:	add	r1, r1, lr
   3b058:	add	r7, r7, #1
   3b05c:	mov	r0, #0
   3b060:	ldr	r2, [sp, #56]	; 0x38
   3b064:	cmp	r7, r2
   3b068:	bne	3b018 <GetDataSlab+0x18bdc>
   3b06c:	b	22560 <GetDataSlab+0x124>
   3b070:	ldr	r0, [sp, #56]	; 0x38
   3b074:	cmp	r0, #1
   3b078:	blt	240b8 <GetDataSlab+0x1c7c>
   3b07c:	ldr	r0, [sp, #32]
   3b080:	ldr	r1, [sp, #28]
   3b084:	mla	r0, r1, r6, r0
   3b088:	add	r1, lr, r0, lsl #2
   3b08c:	ldr	r0, [sp, #36]	; 0x24
   3b090:	mul	r0, r0, r6
   3b094:	lsl	lr, r0, #2
   3b098:	ldr	r0, [sp, #44]	; 0x2c
   3b09c:	lsl	r3, r0, #2
   3b0a0:	mov	r7, #0
   3b0a4:	ldr	r2, [sp, #60]	; 0x3c
   3b0a8:	cmp	r2, #1
   3b0ac:	blt	3b0e0 <GetDataSlab+0x18ca4>
   3b0b0:	mov	r0, #0
   3b0b4:	mov	r6, r2
   3b0b8:	mov	r5, ip
   3b0bc:	sub	r4, r1, r0
   3b0c0:	vldr	s0, [r4]
   3b0c4:	vcvt.f64.u32	d16, s0
   3b0c8:	vstr	d16, [r5]
   3b0cc:	sub	r0, r0, r3
   3b0d0:	subs	r6, r6, #1
   3b0d4:	add	r5, r5, #8
   3b0d8:	bne	3b0bc <GetDataSlab+0x18c80>
   3b0dc:	add	ip, ip, r2, lsl #3
   3b0e0:	add	r1, r1, lr
   3b0e4:	add	r7, r7, #1
   3b0e8:	mov	r0, #0
   3b0ec:	ldr	r2, [sp, #56]	; 0x38
   3b0f0:	cmp	r7, r2
   3b0f4:	bne	3b0a4 <GetDataSlab+0x18c68>
   3b0f8:	b	22560 <GetDataSlab+0x124>
   3b0fc:	ldr	r0, [sp, #56]	; 0x38
   3b100:	cmp	r0, #1
   3b104:	blt	240b8 <GetDataSlab+0x1c7c>
   3b108:	ldr	r0, [sp, #32]
   3b10c:	ldr	r1, [sp, #28]
   3b110:	mla	r0, r1, r6, r0
   3b114:	add	r1, lr, r0, lsl #2
   3b118:	ldr	r0, [sp, #36]	; 0x24
   3b11c:	mul	r0, r0, r6
   3b120:	lsl	r2, r0, #2
   3b124:	ldr	r0, [sp, #44]	; 0x2c
   3b128:	lsl	r3, r0, #2
   3b12c:	mov	r7, #0
   3b130:	ldr	r4, [sp, #60]	; 0x3c
   3b134:	cmp	r4, #1
   3b138:	blt	3b168 <GetDataSlab+0x18d2c>
   3b13c:	mov	r0, r1
   3b140:	mov	r6, r4
   3b144:	mov	r5, ip
   3b148:	vldr	s0, [r0]
   3b14c:	vcvt.f64.f32	d16, s0
   3b150:	vstr	d16, [r5]
   3b154:	add	r0, r0, r3
   3b158:	subs	r6, r6, #1
   3b15c:	add	r5, r5, #8
   3b160:	bne	3b148 <GetDataSlab+0x18d0c>
   3b164:	add	ip, ip, r4, lsl #3
   3b168:	add	r1, r1, r2
   3b16c:	add	r7, r7, #1
   3b170:	mov	r0, #0
   3b174:	ldr	r6, [sp, #56]	; 0x38
   3b178:	cmp	r7, r6
   3b17c:	bne	3b134 <GetDataSlab+0x18cf8>
   3b180:	b	22560 <GetDataSlab+0x124>
   3b184:	ldr	r0, [sp, #56]	; 0x38
   3b188:	cmp	r0, #1
   3b18c:	blt	240b8 <GetDataSlab+0x1c7c>
   3b190:	ldr	r0, [sp, #32]
   3b194:	ldr	r1, [sp, #28]
   3b198:	mla	r0, r1, r6, r0
   3b19c:	add	r1, lr, r0, lsl #3
   3b1a0:	ldr	r0, [sp, #36]	; 0x24
   3b1a4:	mul	r0, r0, r6
   3b1a8:	lsl	r2, r0, #3
   3b1ac:	ldr	r0, [sp, #44]	; 0x2c
   3b1b0:	lsl	r3, r0, #3
   3b1b4:	mov	r7, #0
   3b1b8:	ldr	r4, [sp, #60]	; 0x3c
   3b1bc:	cmp	r4, #1
   3b1c0:	blt	3b1ec <GetDataSlab+0x18db0>
   3b1c4:	mov	r0, r1
   3b1c8:	mov	r6, r4
   3b1cc:	mov	r5, ip
   3b1d0:	vldr	d16, [r0]
   3b1d4:	vstr	d16, [r5]
   3b1d8:	add	r0, r0, r3
   3b1dc:	subs	r6, r6, #1
   3b1e0:	add	r5, r5, #8
   3b1e4:	bne	3b1d0 <GetDataSlab+0x18d94>
   3b1e8:	add	ip, ip, r4, lsl #3
   3b1ec:	add	r1, r1, r2
   3b1f0:	add	r7, r7, #1
   3b1f4:	mov	r0, #0
   3b1f8:	ldr	r6, [sp, #56]	; 0x38
   3b1fc:	cmp	r7, r6
   3b200:	bne	3b1bc <GetDataSlab+0x18d80>
   3b204:	b	22560 <GetDataSlab+0x124>
   3b208:	ldr	r0, [sp, #56]	; 0x38
   3b20c:	cmp	r0, #1
   3b210:	blt	240b8 <GetDataSlab+0x1c7c>
   3b214:	ldr	r0, [sp, #32]
   3b218:	ldr	r1, [sp, #28]
   3b21c:	mla	r0, r1, r6, r0
   3b220:	add	r4, lr, r0, lsl #3
   3b224:	ldr	r0, [sp, #36]	; 0x24
   3b228:	mul	r0, r0, r6
   3b22c:	lsl	r0, r0, #3
   3b230:	str	r0, [sp, #24]
   3b234:	ldr	r0, [sp, #44]	; 0x2c
   3b238:	lsl	r7, r0, #3
   3b23c:	mov	r5, #0
   3b240:	ldr	sl, [sp, #60]	; 0x3c
   3b244:	cmp	sl, #1
   3b248:	blt	3b294 <GetDataSlab+0x18e58>
   3b24c:	mov	r8, #0
   3b250:	mov	r6, ip
   3b254:	mov	r9, ip
   3b258:	mov	r1, r4
   3b25c:	ldr	r0, [r1, -r8]!
   3b260:	ldr	r1, [r1, #4]
   3b264:	bl	48b60 <__aeabi_l2d>
   3b268:	strd	r0, [r9]
   3b26c:	sub	r8, r8, r7
   3b270:	subs	sl, sl, #1
   3b274:	add	r9, r9, #8
   3b278:	bne	3b258 <GetDataSlab+0x18e1c>
   3b27c:	mov	ip, r6
   3b280:	ldr	sl, [sp, #60]	; 0x3c
   3b284:	add	ip, r6, sl, lsl #3
   3b288:	ldr	lr, [sp, #48]	; 0x30
   3b28c:	ldr	r3, [sp, #52]	; 0x34
   3b290:	ldr	r6, [sp, #40]	; 0x28
   3b294:	ldr	r1, [sp, #24]
   3b298:	add	r4, r4, r1
   3b29c:	add	r5, r5, #1
   3b2a0:	ldr	r1, [sp, #56]	; 0x38
   3b2a4:	cmp	r5, r1
   3b2a8:	bne	3b244 <GetDataSlab+0x18e08>
   3b2ac:	mov	r0, #0
   3b2b0:	cmp	r3, #13
   3b2b4:	bne	22560 <GetDataSlab+0x124>
   3b2b8:	b	3dd1c <GetDataSlab+0x1b8e0>
   3b2bc:	ldr	r0, [sp, #56]	; 0x38
   3b2c0:	cmp	r0, #1
   3b2c4:	blt	240b8 <GetDataSlab+0x1c7c>
   3b2c8:	ldr	r0, [sp, #32]
   3b2cc:	ldr	r1, [sp, #28]
   3b2d0:	mla	r0, r1, r6, r0
   3b2d4:	add	r1, lr, r0
   3b2d8:	ldr	r0, [sp, #36]	; 0x24
   3b2dc:	mul	lr, r0, r6
   3b2e0:	mov	r3, #0
   3b2e4:	ldr	r4, [sp, #60]	; 0x3c
   3b2e8:	ldr	r2, [sp, #44]	; 0x2c
   3b2ec:	cmp	r4, #1
   3b2f0:	blt	3b324 <GetDataSlab+0x18ee8>
   3b2f4:	mov	r0, #0
   3b2f8:	mov	r7, r4
   3b2fc:	mov	r6, ip
   3b300:	ldrb	r5, [r1, r0]
   3b304:	vmov	s0, r5
   3b308:	vcvt.f32.u32	s0, s0
   3b30c:	vstr	s0, [r6]
   3b310:	add	r0, r0, r2
   3b314:	subs	r7, r7, #1
   3b318:	add	r6, r6, #4
   3b31c:	bne	3b300 <GetDataSlab+0x18ec4>
   3b320:	add	ip, ip, r4, lsl #2
   3b324:	add	r1, r1, lr
   3b328:	add	r3, r3, #1
   3b32c:	mov	r0, #0
   3b330:	ldr	r7, [sp, #56]	; 0x38
   3b334:	cmp	r3, r7
   3b338:	bne	3b2ec <GetDataSlab+0x18eb0>
   3b33c:	b	22560 <GetDataSlab+0x124>
   3b340:	ldr	r0, [sp, #56]	; 0x38
   3b344:	cmp	r0, #1
   3b348:	blt	240b8 <GetDataSlab+0x1c7c>
   3b34c:	ldr	r0, [sp, #32]
   3b350:	ldr	r1, [sp, #28]
   3b354:	mla	r0, r1, r6, r0
   3b358:	add	r1, lr, r0, lsl #1
   3b35c:	ldr	r0, [sp, #36]	; 0x24
   3b360:	mul	r0, r0, r6
   3b364:	lsl	lr, r0, #1
   3b368:	ldr	r0, [sp, #44]	; 0x2c
   3b36c:	lsl	r3, r0, #1
   3b370:	mov	r7, #0
   3b374:	ldr	r2, [sp, #60]	; 0x3c
   3b378:	cmp	r2, #1
   3b37c:	blt	3b3b0 <GetDataSlab+0x18f74>
   3b380:	mov	r0, #0
   3b384:	mov	r6, r2
   3b388:	mov	r5, ip
   3b38c:	ldrsh	r4, [r1, -r0]
   3b390:	vmov	s0, r4
   3b394:	vcvt.f32.s32	s0, s0
   3b398:	vstr	s0, [r5]
   3b39c:	sub	r0, r0, r3
   3b3a0:	subs	r6, r6, #1
   3b3a4:	add	r5, r5, #4
   3b3a8:	bne	3b38c <GetDataSlab+0x18f50>
   3b3ac:	add	ip, ip, r2, lsl #2
   3b3b0:	add	r1, r1, lr
   3b3b4:	add	r7, r7, #1
   3b3b8:	mov	r0, #0
   3b3bc:	ldr	r2, [sp, #56]	; 0x38
   3b3c0:	cmp	r7, r2
   3b3c4:	bne	3b374 <GetDataSlab+0x18f38>
   3b3c8:	b	22560 <GetDataSlab+0x124>
   3b3cc:	ldr	r0, [sp, #56]	; 0x38
   3b3d0:	cmp	r0, #1
   3b3d4:	blt	240b8 <GetDataSlab+0x1c7c>
   3b3d8:	ldr	r0, [sp, #32]
   3b3dc:	ldr	r1, [sp, #28]
   3b3e0:	mla	r0, r1, r6, r0
   3b3e4:	add	r1, lr, r0, lsl #1
   3b3e8:	ldr	r0, [sp, #36]	; 0x24
   3b3ec:	mul	r0, r0, r6
   3b3f0:	lsl	lr, r0, #1
   3b3f4:	ldr	r0, [sp, #44]	; 0x2c
   3b3f8:	lsl	r3, r0, #1
   3b3fc:	mov	r7, #0
   3b400:	ldr	r2, [sp, #60]	; 0x3c
   3b404:	cmp	r2, #1
   3b408:	blt	3b43c <GetDataSlab+0x19000>
   3b40c:	mov	r0, #0
   3b410:	mov	r6, r2
   3b414:	mov	r5, ip
   3b418:	ldrh	r4, [r1, -r0]
   3b41c:	vmov	s0, r4
   3b420:	vcvt.f32.u32	s0, s0
   3b424:	vstr	s0, [r5]
   3b428:	sub	r0, r0, r3
   3b42c:	subs	r6, r6, #1
   3b430:	add	r5, r5, #4
   3b434:	bne	3b418 <GetDataSlab+0x18fdc>
   3b438:	add	ip, ip, r2, lsl #2
   3b43c:	add	r1, r1, lr
   3b440:	add	r7, r7, #1
   3b444:	mov	r0, #0
   3b448:	ldr	r2, [sp, #56]	; 0x38
   3b44c:	cmp	r7, r2
   3b450:	bne	3b400 <GetDataSlab+0x18fc4>
   3b454:	b	22560 <GetDataSlab+0x124>
   3b458:	ldr	r0, [sp, #56]	; 0x38
   3b45c:	cmp	r0, #1
   3b460:	blt	240b8 <GetDataSlab+0x1c7c>
   3b464:	ldr	r0, [sp, #32]
   3b468:	ldr	r1, [sp, #28]
   3b46c:	mla	r0, r1, r6, r0
   3b470:	add	r1, lr, r0, lsl #2
   3b474:	ldr	r0, [sp, #36]	; 0x24
   3b478:	mul	r0, r0, r6
   3b47c:	lsl	lr, r0, #2
   3b480:	mov	r3, #0
   3b484:	ldr	r4, [sp, #60]	; 0x3c
   3b488:	ldr	r2, [sp, #44]	; 0x2c
   3b48c:	cmp	r4, #1
   3b490:	blt	3b4c4 <GetDataSlab+0x19088>
   3b494:	mov	r0, #0
   3b498:	mov	r7, r4
   3b49c:	mov	r6, ip
   3b4a0:	add	r5, r1, r0, lsl #2
   3b4a4:	vldr	s0, [r5]
   3b4a8:	vcvt.f32.s32	s0, s0
   3b4ac:	vstr	s0, [r6]
   3b4b0:	add	r0, r0, r2
   3b4b4:	subs	r7, r7, #1
   3b4b8:	add	r6, r6, #4
   3b4bc:	bne	3b4a0 <GetDataSlab+0x19064>
   3b4c0:	add	ip, ip, r4, lsl #2
   3b4c4:	add	r1, r1, lr
   3b4c8:	add	r3, r3, #1
   3b4cc:	mov	r0, #0
   3b4d0:	ldr	r7, [sp, #56]	; 0x38
   3b4d4:	cmp	r3, r7
   3b4d8:	bne	3b48c <GetDataSlab+0x19050>
   3b4dc:	b	22560 <GetDataSlab+0x124>
   3b4e0:	ldr	r0, [sp, #56]	; 0x38
   3b4e4:	cmp	r0, #1
   3b4e8:	blt	240b8 <GetDataSlab+0x1c7c>
   3b4ec:	ldr	r0, [sp, #32]
   3b4f0:	ldr	r1, [sp, #28]
   3b4f4:	mla	r0, r1, r6, r0
   3b4f8:	add	r1, lr, r0, lsl #2
   3b4fc:	ldr	r0, [sp, #36]	; 0x24
   3b500:	mul	r0, r0, r6
   3b504:	lsl	lr, r0, #2
   3b508:	mov	r3, #0
   3b50c:	ldr	r4, [sp, #60]	; 0x3c
   3b510:	ldr	r2, [sp, #44]	; 0x2c
   3b514:	cmp	r4, #1
   3b518:	blt	3b54c <GetDataSlab+0x19110>
   3b51c:	mov	r0, #0
   3b520:	mov	r7, r4
   3b524:	mov	r6, ip
   3b528:	add	r5, r1, r0, lsl #2
   3b52c:	vldr	s0, [r5]
   3b530:	vcvt.f32.u32	s0, s0
   3b534:	vstr	s0, [r6]
   3b538:	add	r0, r0, r2
   3b53c:	subs	r7, r7, #1
   3b540:	add	r6, r6, #4
   3b544:	bne	3b528 <GetDataSlab+0x190ec>
   3b548:	add	ip, ip, r4, lsl #2
   3b54c:	add	r1, r1, lr
   3b550:	add	r3, r3, #1
   3b554:	mov	r0, #0
   3b558:	ldr	r7, [sp, #56]	; 0x38
   3b55c:	cmp	r3, r7
   3b560:	bne	3b514 <GetDataSlab+0x190d8>
   3b564:	b	22560 <GetDataSlab+0x124>
   3b568:	ldr	r0, [sp, #56]	; 0x38
   3b56c:	cmp	r0, #1
   3b570:	blt	240b8 <GetDataSlab+0x1c7c>
   3b574:	ldr	r0, [sp, #32]
   3b578:	ldr	r1, [sp, #28]
   3b57c:	mla	r0, r1, r6, r0
   3b580:	add	r1, lr, r0, lsl #2
   3b584:	ldr	r0, [sp, #36]	; 0x24
   3b588:	mul	r0, r0, r6
   3b58c:	lsl	lr, r0, #2
   3b590:	mov	r3, #0
   3b594:	ldr	r4, [sp, #60]	; 0x3c
   3b598:	ldr	r2, [sp, #44]	; 0x2c
   3b59c:	cmp	r4, #1
   3b5a0:	blt	3b5cc <GetDataSlab+0x19190>
   3b5a4:	mov	r6, #0
   3b5a8:	mov	r0, r4
   3b5ac:	mov	r7, ip
   3b5b0:	add	r5, r6, r2
   3b5b4:	ldr	r6, [r1, r6, lsl #2]
   3b5b8:	str	r6, [r7], #4
   3b5bc:	subs	r0, r0, #1
   3b5c0:	mov	r6, r5
   3b5c4:	bne	3b5b0 <GetDataSlab+0x19174>
   3b5c8:	add	ip, ip, r4, lsl #2
   3b5cc:	add	r1, r1, lr
   3b5d0:	add	r3, r3, #1
   3b5d4:	mov	r0, #0
   3b5d8:	ldr	r7, [sp, #56]	; 0x38
   3b5dc:	cmp	r3, r7
   3b5e0:	bne	3b59c <GetDataSlab+0x19160>
   3b5e4:	b	22560 <GetDataSlab+0x124>
   3b5e8:	ldr	r0, [sp, #56]	; 0x38
   3b5ec:	cmp	r0, #1
   3b5f0:	blt	240b8 <GetDataSlab+0x1c7c>
   3b5f4:	ldr	r0, [sp, #32]
   3b5f8:	ldr	r1, [sp, #28]
   3b5fc:	mla	r0, r1, r6, r0
   3b600:	add	r1, lr, r0, lsl #3
   3b604:	ldr	r0, [sp, #36]	; 0x24
   3b608:	mul	r0, r0, r6
   3b60c:	lsl	r2, r0, #3
   3b610:	ldr	r0, [sp, #44]	; 0x2c
   3b614:	lsl	r3, r0, #3
   3b618:	mov	r7, #0
   3b61c:	ldr	r4, [sp, #60]	; 0x3c
   3b620:	cmp	r4, #1
   3b624:	blt	3b654 <GetDataSlab+0x19218>
   3b628:	mov	r0, r1
   3b62c:	mov	r6, r4
   3b630:	mov	r5, ip
   3b634:	vldr	d16, [r0]
   3b638:	vcvt.f32.f64	s0, d16
   3b63c:	vstr	s0, [r5]
   3b640:	add	r0, r0, r3
   3b644:	subs	r6, r6, #1
   3b648:	add	r5, r5, #4
   3b64c:	bne	3b634 <GetDataSlab+0x191f8>
   3b650:	add	ip, ip, r4, lsl #2
   3b654:	add	r1, r1, r2
   3b658:	add	r7, r7, #1
   3b65c:	mov	r0, #0
   3b660:	ldr	r6, [sp, #56]	; 0x38
   3b664:	cmp	r7, r6
   3b668:	bne	3b620 <GetDataSlab+0x191e4>
   3b66c:	b	22560 <GetDataSlab+0x124>
   3b670:	ldr	r0, [sp, #56]	; 0x38
   3b674:	cmp	r0, #1
   3b678:	blt	240b8 <GetDataSlab+0x1c7c>
   3b67c:	ldr	r0, [sp, #32]
   3b680:	ldr	r1, [sp, #28]
   3b684:	mla	r0, r1, r6, r0
   3b688:	add	r4, lr, r0, lsl #3
   3b68c:	ldr	r0, [sp, #36]	; 0x24
   3b690:	mul	r0, r0, r6
   3b694:	lsl	r0, r0, #3
   3b698:	str	r0, [sp, #24]
   3b69c:	ldr	r0, [sp, #44]	; 0x2c
   3b6a0:	lsl	r7, r0, #3
   3b6a4:	mov	r9, #0
   3b6a8:	ldr	r5, [sp, #60]	; 0x3c
   3b6ac:	cmp	r5, #1
   3b6b0:	blt	3b6f8 <GetDataSlab+0x192bc>
   3b6b4:	mov	r8, #0
   3b6b8:	mov	sl, ip
   3b6bc:	mov	r6, ip
   3b6c0:	mov	r1, r4
   3b6c4:	ldr	r0, [r1, -r8]!
   3b6c8:	ldr	r1, [r1, #4]
   3b6cc:	bl	48d94 <__aeabi_l2f>
   3b6d0:	str	r0, [r6], #4
   3b6d4:	sub	r8, r8, r7
   3b6d8:	subs	r5, r5, #1
   3b6dc:	bne	3b6c0 <GetDataSlab+0x19284>
   3b6e0:	mov	ip, sl
   3b6e4:	ldr	r5, [sp, #60]	; 0x3c
   3b6e8:	add	ip, sl, r5, lsl #2
   3b6ec:	ldr	lr, [sp, #48]	; 0x30
   3b6f0:	ldr	r3, [sp, #52]	; 0x34
   3b6f4:	ldr	r6, [sp, #40]	; 0x28
   3b6f8:	ldr	r0, [sp, #24]
   3b6fc:	add	r4, r4, r0
   3b700:	add	r9, r9, #1
   3b704:	ldr	r0, [sp, #56]	; 0x38
   3b708:	cmp	r9, r0
   3b70c:	bne	3b6ac <GetDataSlab+0x19270>
   3b710:	mov	r0, #0
   3b714:	cmp	r3, #13
   3b718:	bne	22560 <GetDataSlab+0x124>
   3b71c:	b	3ddc8 <GetDataSlab+0x1b98c>
   3b720:	ldr	r0, [r3]
   3b724:	cmp	r0, #1
   3b728:	blt	240b8 <GetDataSlab+0x1c7c>
   3b72c:	ldr	r0, [sp, #32]
   3b730:	ldr	r2, [sp, #28]
   3b734:	mla	r0, r2, r6, r0
   3b738:	add	r2, r5, r0
   3b73c:	mov	r7, #0
   3b740:	ldr	r0, [r4]
   3b744:	cmp	r0, #1
   3b748:	blt	3b774 <GetDataSlab+0x19338>
   3b74c:	mov	r0, #0
   3b750:	ldr	r6, [lr]
   3b754:	mul	r6, r6, r0
   3b758:	ldrb	r6, [r2, r6]
   3b75c:	strb	r6, [ip, r0]
   3b760:	add	r0, r0, #1
   3b764:	ldr	r6, [r4]
   3b768:	cmp	r0, r6
   3b76c:	blt	3b750 <GetDataSlab+0x19314>
   3b770:	add	ip, ip, r0
   3b774:	ldr	r0, [sl]
   3b778:	ldr	r6, [r8]
   3b77c:	mla	r2, r6, r0, r2
   3b780:	add	r7, r7, #1
   3b784:	ldr	r6, [r3]
   3b788:	mov	r0, #0
   3b78c:	cmp	r7, r6
   3b790:	blt	3b740 <GetDataSlab+0x19304>
   3b794:	b	22560 <GetDataSlab+0x124>
   3b798:	ldr	r0, [r3]
   3b79c:	cmp	r0, #1
   3b7a0:	blt	240b8 <GetDataSlab+0x1c7c>
   3b7a4:	ldr	r0, [sp, #32]
   3b7a8:	ldr	r2, [sp, #28]
   3b7ac:	mla	r0, r2, r6, r0
   3b7b0:	add	r2, r5, r0, lsl #1
   3b7b4:	mov	r7, #0
   3b7b8:	ldr	r0, [r4]
   3b7bc:	cmp	r0, #1
   3b7c0:	blt	3b7ec <GetDataSlab+0x193b0>
   3b7c4:	mov	r0, #0
   3b7c8:	ldr	r6, [lr]
   3b7cc:	mul	r6, r6, r0
   3b7d0:	ldrb	r6, [r2, r6, lsl #1]
   3b7d4:	strb	r6, [ip, r0]
   3b7d8:	add	r0, r0, #1
   3b7dc:	ldr	r6, [r4]
   3b7e0:	cmp	r0, r6
   3b7e4:	blt	3b7c8 <GetDataSlab+0x1938c>
   3b7e8:	add	ip, ip, r0
   3b7ec:	ldr	r0, [sl]
   3b7f0:	ldr	r6, [r8]
   3b7f4:	mul	r0, r6, r0
   3b7f8:	add	r2, r2, r0, lsl #1
   3b7fc:	add	r7, r7, #1
   3b800:	ldr	r6, [r3]
   3b804:	mov	r0, #0
   3b808:	cmp	r7, r6
   3b80c:	blt	3b7b8 <GetDataSlab+0x1937c>
   3b810:	b	22560 <GetDataSlab+0x124>
   3b814:	ldr	r0, [r3]
   3b818:	cmp	r0, #1
   3b81c:	blt	240b8 <GetDataSlab+0x1c7c>
   3b820:	ldr	r0, [sp, #32]
   3b824:	ldr	r2, [sp, #28]
   3b828:	mla	r0, r2, r6, r0
   3b82c:	add	r2, r5, r0, lsl #1
   3b830:	mov	r7, #0
   3b834:	ldr	r0, [r4]
   3b838:	cmp	r0, #1
   3b83c:	blt	3b868 <GetDataSlab+0x1942c>
   3b840:	mov	r0, #0
   3b844:	ldr	r6, [lr]
   3b848:	mul	r6, r6, r0
   3b84c:	ldrb	r6, [r2, r6, lsl #1]
   3b850:	strb	r6, [ip, r0]
   3b854:	add	r0, r0, #1
   3b858:	ldr	r6, [r4]
   3b85c:	cmp	r0, r6
   3b860:	blt	3b844 <GetDataSlab+0x19408>
   3b864:	add	ip, ip, r0
   3b868:	ldr	r0, [sl]
   3b86c:	ldr	r6, [r8]
   3b870:	mul	r0, r6, r0
   3b874:	add	r2, r2, r0, lsl #1
   3b878:	add	r7, r7, #1
   3b87c:	ldr	r6, [r3]
   3b880:	mov	r0, #0
   3b884:	cmp	r7, r6
   3b888:	blt	3b834 <GetDataSlab+0x193f8>
   3b88c:	b	22560 <GetDataSlab+0x124>
   3b890:	ldr	r0, [r3]
   3b894:	cmp	r0, #1
   3b898:	blt	240b8 <GetDataSlab+0x1c7c>
   3b89c:	ldr	r0, [sp, #32]
   3b8a0:	ldr	r2, [sp, #28]
   3b8a4:	mla	r0, r2, r6, r0
   3b8a8:	add	r2, r5, r0, lsl #2
   3b8ac:	mov	r7, #0
   3b8b0:	ldr	r0, [r4]
   3b8b4:	cmp	r0, #1
   3b8b8:	blt	3b8e4 <GetDataSlab+0x194a8>
   3b8bc:	mov	r0, #0
   3b8c0:	ldr	r6, [lr]
   3b8c4:	mul	r6, r6, r0
   3b8c8:	ldr	r6, [r2, r6, lsl #2]
   3b8cc:	strb	r6, [ip, r0]
   3b8d0:	add	r0, r0, #1
   3b8d4:	ldr	r6, [r4]
   3b8d8:	cmp	r0, r6
   3b8dc:	blt	3b8c0 <GetDataSlab+0x19484>
   3b8e0:	add	ip, ip, r0
   3b8e4:	ldr	r0, [sl]
   3b8e8:	ldr	r6, [r8]
   3b8ec:	mul	r0, r6, r0
   3b8f0:	add	r2, r2, r0, lsl #2
   3b8f4:	add	r7, r7, #1
   3b8f8:	ldr	r6, [r3]
   3b8fc:	mov	r0, #0
   3b900:	cmp	r7, r6
   3b904:	blt	3b8b0 <GetDataSlab+0x19474>
   3b908:	b	22560 <GetDataSlab+0x124>
   3b90c:	ldr	r0, [r3]
   3b910:	cmp	r0, #1
   3b914:	blt	240b8 <GetDataSlab+0x1c7c>
   3b918:	ldr	r0, [sp, #32]
   3b91c:	ldr	r2, [sp, #28]
   3b920:	mla	r0, r2, r6, r0
   3b924:	add	r2, r5, r0, lsl #2
   3b928:	mov	r7, #0
   3b92c:	ldr	r0, [r4]
   3b930:	cmp	r0, #1
   3b934:	blt	3b960 <GetDataSlab+0x19524>
   3b938:	mov	r0, #0
   3b93c:	ldr	r6, [lr]
   3b940:	mul	r6, r6, r0
   3b944:	ldr	r6, [r2, r6, lsl #2]
   3b948:	strb	r6, [ip, r0]
   3b94c:	add	r0, r0, #1
   3b950:	ldr	r6, [r4]
   3b954:	cmp	r0, r6
   3b958:	blt	3b93c <GetDataSlab+0x19500>
   3b95c:	add	ip, ip, r0
   3b960:	ldr	r0, [sl]
   3b964:	ldr	r6, [r8]
   3b968:	mul	r0, r6, r0
   3b96c:	add	r2, r2, r0, lsl #2
   3b970:	add	r7, r7, #1
   3b974:	ldr	r6, [r3]
   3b978:	mov	r0, #0
   3b97c:	cmp	r7, r6
   3b980:	blt	3b92c <GetDataSlab+0x194f0>
   3b984:	b	22560 <GetDataSlab+0x124>
   3b988:	ldr	r0, [r3]
   3b98c:	cmp	r0, #1
   3b990:	blt	240b8 <GetDataSlab+0x1c7c>
   3b994:	ldr	r0, [sp, #32]
   3b998:	ldr	r2, [sp, #28]
   3b99c:	mla	r0, r2, r6, r0
   3b9a0:	add	r2, r5, r0, lsl #2
   3b9a4:	mov	r7, #0
   3b9a8:	ldr	r0, [r4]
   3b9ac:	cmp	r0, #1
   3b9b0:	blt	3b9e8 <GetDataSlab+0x195ac>
   3b9b4:	mov	r0, #0
   3b9b8:	ldr	r6, [lr]
   3b9bc:	mul	r6, r6, r0
   3b9c0:	add	r6, r2, r6, lsl #2
   3b9c4:	vldr	s0, [r6]
   3b9c8:	vcvt.s32.f32	s0, s0
   3b9cc:	vmov	r6, s0
   3b9d0:	strb	r6, [ip, r0]
   3b9d4:	add	r0, r0, #1
   3b9d8:	ldr	r6, [r4]
   3b9dc:	cmp	r0, r6
   3b9e0:	blt	3b9b8 <GetDataSlab+0x1957c>
   3b9e4:	add	ip, ip, r0
   3b9e8:	ldr	r0, [sl]
   3b9ec:	ldr	r6, [r8]
   3b9f0:	mul	r0, r6, r0
   3b9f4:	add	r2, r2, r0, lsl #2
   3b9f8:	add	r7, r7, #1
   3b9fc:	ldr	r6, [r3]
   3ba00:	mov	r0, #0
   3ba04:	cmp	r7, r6
   3ba08:	blt	3b9a8 <GetDataSlab+0x1956c>
   3ba0c:	b	22560 <GetDataSlab+0x124>
   3ba10:	ldr	r0, [r3]
   3ba14:	cmp	r0, #1
   3ba18:	blt	240b8 <GetDataSlab+0x1c7c>
   3ba1c:	ldr	r0, [sp, #32]
   3ba20:	ldr	r2, [sp, #28]
   3ba24:	mla	r0, r2, r6, r0
   3ba28:	add	r2, r5, r0, lsl #3
   3ba2c:	mov	r7, #0
   3ba30:	ldr	r0, [r4]
   3ba34:	cmp	r0, #1
   3ba38:	blt	3ba70 <GetDataSlab+0x19634>
   3ba3c:	mov	r0, #0
   3ba40:	ldr	r6, [lr]
   3ba44:	mul	r6, r6, r0
   3ba48:	add	r6, r2, r6, lsl #3
   3ba4c:	vldr	d16, [r6]
   3ba50:	vcvt.s32.f64	s0, d16
   3ba54:	vmov	r6, s0
   3ba58:	strb	r6, [ip, r0]
   3ba5c:	add	r0, r0, #1
   3ba60:	ldr	r6, [r4]
   3ba64:	cmp	r0, r6
   3ba68:	blt	3ba40 <GetDataSlab+0x19604>
   3ba6c:	add	ip, ip, r0
   3ba70:	ldr	r0, [sl]
   3ba74:	ldr	r6, [r8]
   3ba78:	mul	r0, r6, r0
   3ba7c:	add	r2, r2, r0, lsl #3
   3ba80:	add	r7, r7, #1
   3ba84:	ldr	r6, [r3]
   3ba88:	mov	r0, #0
   3ba8c:	cmp	r7, r6
   3ba90:	blt	3ba30 <GetDataSlab+0x195f4>
   3ba94:	b	22560 <GetDataSlab+0x124>
   3ba98:	ldr	r0, [r3]
   3ba9c:	cmp	r0, #1
   3baa0:	blt	240b8 <GetDataSlab+0x1c7c>
   3baa4:	ldr	r0, [sp, #32]
   3baa8:	ldr	r2, [sp, #28]
   3baac:	mla	r0, r2, r6, r0
   3bab0:	add	r0, r5, r0, lsl #3
   3bab4:	mov	r2, #0
   3bab8:	ldr	r7, [r4]
   3babc:	cmp	r7, #1
   3bac0:	blt	3baec <GetDataSlab+0x196b0>
   3bac4:	mov	r7, #0
   3bac8:	ldr	r6, [lr]
   3bacc:	mul	r6, r6, r7
   3bad0:	ldrb	r6, [r0, r6, lsl #3]
   3bad4:	strb	r6, [ip, r7]
   3bad8:	add	r7, r7, #1
   3badc:	ldr	r6, [r4]
   3bae0:	cmp	r7, r6
   3bae4:	blt	3bac8 <GetDataSlab+0x1968c>
   3bae8:	add	ip, ip, r7
   3baec:	ldr	r7, [sl]
   3baf0:	ldr	r6, [r8]
   3baf4:	mul	r7, r6, r7
   3baf8:	add	r0, r0, r7, lsl #3
   3bafc:	add	r2, r2, #1
   3bb00:	ldr	r7, [r3]
   3bb04:	cmp	r2, r7
   3bb08:	blt	3bab8 <GetDataSlab+0x1967c>
   3bb0c:	mov	r0, #0
   3bb10:	ldr	r2, [sp, #52]	; 0x34
   3bb14:	cmp	r2, #13
   3bb18:	bne	22560 <GetDataSlab+0x124>
   3bb1c:	ldr	r0, [r3]
   3bb20:	cmp	r0, #1
   3bb24:	blt	240b8 <GetDataSlab+0x1c7c>
   3bb28:	ldm	r9, {r0, r2}
   3bb2c:	ldr	r7, [r8]
   3bb30:	mla	r0, r7, r2, r0
   3bb34:	ldr	r2, [sp, #48]	; 0x30
   3bb38:	add	r2, r2, r0, lsl #3
   3bb3c:	mov	r7, #0
   3bb40:	ldr	r0, [r4]
   3bb44:	cmp	r0, #1
   3bb48:	blt	3bb74 <GetDataSlab+0x19738>
   3bb4c:	mov	r0, #0
   3bb50:	ldr	r6, [lr]
   3bb54:	mul	r6, r6, r0
   3bb58:	ldrb	r6, [r2, r6, lsl #3]
   3bb5c:	strb	r6, [ip, r0]
   3bb60:	add	r0, r0, #1
   3bb64:	ldr	r6, [r4]
   3bb68:	cmp	r0, r6
   3bb6c:	blt	3bb50 <GetDataSlab+0x19714>
   3bb70:	add	ip, ip, r0
   3bb74:	ldr	r0, [sl]
   3bb78:	ldr	r6, [r8]
   3bb7c:	mul	r0, r6, r0
   3bb80:	add	r2, r2, r0, lsl #3
   3bb84:	add	r7, r7, #1
   3bb88:	ldr	r6, [r3]
   3bb8c:	mov	r0, #0
   3bb90:	cmp	r7, r6
   3bb94:	blt	3bb40 <GetDataSlab+0x19704>
   3bb98:	b	22560 <GetDataSlab+0x124>
   3bb9c:	ldr	r0, [r3]
   3bba0:	cmp	r0, #1
   3bba4:	blt	240b8 <GetDataSlab+0x1c7c>
   3bba8:	ldr	r0, [sp, #32]
   3bbac:	ldr	r2, [sp, #28]
   3bbb0:	mla	r0, r2, r6, r0
   3bbb4:	add	r2, r5, r0
   3bbb8:	mov	r7, #0
   3bbbc:	ldr	r0, [r4]
   3bbc0:	cmp	r0, #1
   3bbc4:	blt	3bbf0 <GetDataSlab+0x197b4>
   3bbc8:	mov	r0, #0
   3bbcc:	ldr	r6, [lr]
   3bbd0:	mul	r6, r6, r0
   3bbd4:	ldrb	r6, [r2, r6]
   3bbd8:	strb	r6, [ip, r0]
   3bbdc:	add	r0, r0, #1
   3bbe0:	ldr	r6, [r4]
   3bbe4:	cmp	r0, r6
   3bbe8:	blt	3bbcc <GetDataSlab+0x19790>
   3bbec:	add	ip, ip, r0
   3bbf0:	ldr	r0, [sl]
   3bbf4:	ldr	r6, [r8]
   3bbf8:	mla	r2, r6, r0, r2
   3bbfc:	add	r7, r7, #1
   3bc00:	ldr	r6, [r3]
   3bc04:	mov	r0, #0
   3bc08:	cmp	r7, r6
   3bc0c:	blt	3bbbc <GetDataSlab+0x19780>
   3bc10:	b	22560 <GetDataSlab+0x124>
   3bc14:	ldr	r0, [r3]
   3bc18:	cmp	r0, #1
   3bc1c:	blt	240b8 <GetDataSlab+0x1c7c>
   3bc20:	ldr	r0, [sp, #32]
   3bc24:	ldr	r2, [sp, #28]
   3bc28:	mla	r0, r2, r6, r0
   3bc2c:	add	r2, r5, r0, lsl #1
   3bc30:	mov	r7, #0
   3bc34:	ldr	r0, [r4]
   3bc38:	cmp	r0, #1
   3bc3c:	blt	3bc68 <GetDataSlab+0x1982c>
   3bc40:	mov	r0, #0
   3bc44:	ldr	r6, [lr]
   3bc48:	mul	r6, r6, r0
   3bc4c:	ldrb	r6, [r2, r6, lsl #1]
   3bc50:	strb	r6, [ip, r0]
   3bc54:	add	r0, r0, #1
   3bc58:	ldr	r6, [r4]
   3bc5c:	cmp	r0, r6
   3bc60:	blt	3bc44 <GetDataSlab+0x19808>
   3bc64:	add	ip, ip, r0
   3bc68:	ldr	r0, [sl]
   3bc6c:	ldr	r6, [r8]
   3bc70:	mul	r0, r6, r0
   3bc74:	add	r2, r2, r0, lsl #1
   3bc78:	add	r7, r7, #1
   3bc7c:	ldr	r6, [r3]
   3bc80:	mov	r0, #0
   3bc84:	cmp	r7, r6
   3bc88:	blt	3bc34 <GetDataSlab+0x197f8>
   3bc8c:	b	22560 <GetDataSlab+0x124>
   3bc90:	ldr	r0, [r3]
   3bc94:	cmp	r0, #1
   3bc98:	blt	240b8 <GetDataSlab+0x1c7c>
   3bc9c:	ldr	r0, [sp, #32]
   3bca0:	ldr	r2, [sp, #28]
   3bca4:	mla	r0, r2, r6, r0
   3bca8:	add	r2, r5, r0, lsl #1
   3bcac:	mov	r7, #0
   3bcb0:	ldr	r0, [r4]
   3bcb4:	cmp	r0, #1
   3bcb8:	blt	3bce4 <GetDataSlab+0x198a8>
   3bcbc:	mov	r0, #0
   3bcc0:	ldr	r6, [lr]
   3bcc4:	mul	r6, r6, r0
   3bcc8:	ldrb	r6, [r2, r6, lsl #1]
   3bccc:	strb	r6, [ip, r0]
   3bcd0:	add	r0, r0, #1
   3bcd4:	ldr	r6, [r4]
   3bcd8:	cmp	r0, r6
   3bcdc:	blt	3bcc0 <GetDataSlab+0x19884>
   3bce0:	add	ip, ip, r0
   3bce4:	ldr	r0, [sl]
   3bce8:	ldr	r6, [r8]
   3bcec:	mul	r0, r6, r0
   3bcf0:	add	r2, r2, r0, lsl #1
   3bcf4:	add	r7, r7, #1
   3bcf8:	ldr	r6, [r3]
   3bcfc:	mov	r0, #0
   3bd00:	cmp	r7, r6
   3bd04:	blt	3bcb0 <GetDataSlab+0x19874>
   3bd08:	b	22560 <GetDataSlab+0x124>
   3bd0c:	ldr	r0, [r3]
   3bd10:	cmp	r0, #1
   3bd14:	blt	240b8 <GetDataSlab+0x1c7c>
   3bd18:	ldr	r0, [sp, #32]
   3bd1c:	ldr	r2, [sp, #28]
   3bd20:	mla	r0, r2, r6, r0
   3bd24:	add	r2, r5, r0, lsl #2
   3bd28:	mov	r7, #0
   3bd2c:	ldr	r0, [r4]
   3bd30:	cmp	r0, #1
   3bd34:	blt	3bd60 <GetDataSlab+0x19924>
   3bd38:	mov	r0, #0
   3bd3c:	ldr	r6, [lr]
   3bd40:	mul	r6, r6, r0
   3bd44:	ldr	r6, [r2, r6, lsl #2]
   3bd48:	strb	r6, [ip, r0]
   3bd4c:	add	r0, r0, #1
   3bd50:	ldr	r6, [r4]
   3bd54:	cmp	r0, r6
   3bd58:	blt	3bd3c <GetDataSlab+0x19900>
   3bd5c:	add	ip, ip, r0
   3bd60:	ldr	r0, [sl]
   3bd64:	ldr	r6, [r8]
   3bd68:	mul	r0, r6, r0
   3bd6c:	add	r2, r2, r0, lsl #2
   3bd70:	add	r7, r7, #1
   3bd74:	ldr	r6, [r3]
   3bd78:	mov	r0, #0
   3bd7c:	cmp	r7, r6
   3bd80:	blt	3bd2c <GetDataSlab+0x198f0>
   3bd84:	b	22560 <GetDataSlab+0x124>
   3bd88:	ldr	r0, [r3]
   3bd8c:	cmp	r0, #1
   3bd90:	blt	240b8 <GetDataSlab+0x1c7c>
   3bd94:	ldr	r0, [sp, #32]
   3bd98:	ldr	r2, [sp, #28]
   3bd9c:	mla	r0, r2, r6, r0
   3bda0:	add	r2, r5, r0, lsl #2
   3bda4:	mov	r7, #0
   3bda8:	ldr	r0, [r4]
   3bdac:	cmp	r0, #1
   3bdb0:	blt	3bddc <GetDataSlab+0x199a0>
   3bdb4:	mov	r0, #0
   3bdb8:	ldr	r6, [lr]
   3bdbc:	mul	r6, r6, r0
   3bdc0:	ldr	r6, [r2, r6, lsl #2]
   3bdc4:	strb	r6, [ip, r0]
   3bdc8:	add	r0, r0, #1
   3bdcc:	ldr	r6, [r4]
   3bdd0:	cmp	r0, r6
   3bdd4:	blt	3bdb8 <GetDataSlab+0x1997c>
   3bdd8:	add	ip, ip, r0
   3bddc:	ldr	r0, [sl]
   3bde0:	ldr	r6, [r8]
   3bde4:	mul	r0, r6, r0
   3bde8:	add	r2, r2, r0, lsl #2
   3bdec:	add	r7, r7, #1
   3bdf0:	ldr	r6, [r3]
   3bdf4:	mov	r0, #0
   3bdf8:	cmp	r7, r6
   3bdfc:	blt	3bda8 <GetDataSlab+0x1996c>
   3be00:	b	22560 <GetDataSlab+0x124>
   3be04:	ldr	r0, [r3]
   3be08:	cmp	r0, #1
   3be0c:	blt	240b8 <GetDataSlab+0x1c7c>
   3be10:	ldr	r0, [sp, #32]
   3be14:	ldr	r2, [sp, #28]
   3be18:	mla	r0, r2, r6, r0
   3be1c:	add	r2, r5, r0, lsl #2
   3be20:	mov	r7, #0
   3be24:	ldr	r0, [r4]
   3be28:	cmp	r0, #1
   3be2c:	blt	3be64 <GetDataSlab+0x19a28>
   3be30:	mov	r0, #0
   3be34:	ldr	r6, [lr]
   3be38:	mul	r6, r6, r0
   3be3c:	add	r6, r2, r6, lsl #2
   3be40:	vldr	s0, [r6]
   3be44:	vcvt.u32.f32	s0, s0
   3be48:	vmov	r6, s0
   3be4c:	strb	r6, [ip, r0]
   3be50:	add	r0, r0, #1
   3be54:	ldr	r6, [r4]
   3be58:	cmp	r0, r6
   3be5c:	blt	3be34 <GetDataSlab+0x199f8>
   3be60:	add	ip, ip, r0
   3be64:	ldr	r0, [sl]
   3be68:	ldr	r6, [r8]
   3be6c:	mul	r0, r6, r0
   3be70:	add	r2, r2, r0, lsl #2
   3be74:	add	r7, r7, #1
   3be78:	ldr	r6, [r3]
   3be7c:	mov	r0, #0
   3be80:	cmp	r7, r6
   3be84:	blt	3be24 <GetDataSlab+0x199e8>
   3be88:	b	22560 <GetDataSlab+0x124>
   3be8c:	ldr	r0, [r3]
   3be90:	cmp	r0, #1
   3be94:	blt	240b8 <GetDataSlab+0x1c7c>
   3be98:	ldr	r0, [sp, #32]
   3be9c:	ldr	r2, [sp, #28]
   3bea0:	mla	r0, r2, r6, r0
   3bea4:	add	r2, r5, r0, lsl #3
   3bea8:	mov	r7, #0
   3beac:	ldr	r0, [r4]
   3beb0:	cmp	r0, #1
   3beb4:	blt	3beec <GetDataSlab+0x19ab0>
   3beb8:	mov	r0, #0
   3bebc:	ldr	r6, [lr]
   3bec0:	mul	r6, r6, r0
   3bec4:	add	r6, r2, r6, lsl #3
   3bec8:	vldr	d16, [r6]
   3becc:	vcvt.u32.f64	s0, d16
   3bed0:	vmov	r6, s0
   3bed4:	strb	r6, [ip, r0]
   3bed8:	add	r0, r0, #1
   3bedc:	ldr	r6, [r4]
   3bee0:	cmp	r0, r6
   3bee4:	blt	3bebc <GetDataSlab+0x19a80>
   3bee8:	add	ip, ip, r0
   3beec:	ldr	r0, [sl]
   3bef0:	ldr	r6, [r8]
   3bef4:	mul	r0, r6, r0
   3bef8:	add	r2, r2, r0, lsl #3
   3befc:	add	r7, r7, #1
   3bf00:	ldr	r6, [r3]
   3bf04:	mov	r0, #0
   3bf08:	cmp	r7, r6
   3bf0c:	blt	3beac <GetDataSlab+0x19a70>
   3bf10:	b	22560 <GetDataSlab+0x124>
   3bf14:	ldr	r0, [r3]
   3bf18:	cmp	r0, #1
   3bf1c:	blt	240b8 <GetDataSlab+0x1c7c>
   3bf20:	ldr	r0, [sp, #32]
   3bf24:	ldr	r2, [sp, #28]
   3bf28:	mla	r0, r2, r6, r0
   3bf2c:	add	r0, r5, r0, lsl #3
   3bf30:	mov	r2, #0
   3bf34:	ldr	r7, [r4]
   3bf38:	cmp	r7, #1
   3bf3c:	blt	3bf68 <GetDataSlab+0x19b2c>
   3bf40:	mov	r7, #0
   3bf44:	ldr	r6, [lr]
   3bf48:	mul	r6, r6, r7
   3bf4c:	ldrb	r6, [r0, r6, lsl #3]
   3bf50:	strb	r6, [ip, r7]
   3bf54:	add	r7, r7, #1
   3bf58:	ldr	r6, [r4]
   3bf5c:	cmp	r7, r6
   3bf60:	blt	3bf44 <GetDataSlab+0x19b08>
   3bf64:	add	ip, ip, r7
   3bf68:	ldr	r7, [sl]
   3bf6c:	ldr	r6, [r8]
   3bf70:	mul	r7, r6, r7
   3bf74:	add	r0, r0, r7, lsl #3
   3bf78:	add	r2, r2, #1
   3bf7c:	ldr	r7, [r3]
   3bf80:	cmp	r2, r7
   3bf84:	blt	3bf34 <GetDataSlab+0x19af8>
   3bf88:	mov	r0, #0
   3bf8c:	ldr	r2, [sp, #52]	; 0x34
   3bf90:	cmp	r2, #13
   3bf94:	bne	22560 <GetDataSlab+0x124>
   3bf98:	ldr	r0, [r3]
   3bf9c:	cmp	r0, #1
   3bfa0:	blt	240b8 <GetDataSlab+0x1c7c>
   3bfa4:	ldm	r9, {r0, r2}
   3bfa8:	ldr	r7, [r8]
   3bfac:	mla	r0, r7, r2, r0
   3bfb0:	ldr	r2, [sp, #48]	; 0x30
   3bfb4:	add	r2, r2, r0, lsl #3
   3bfb8:	mov	r7, #0
   3bfbc:	ldr	r0, [r4]
   3bfc0:	cmp	r0, #1
   3bfc4:	blt	3bff0 <GetDataSlab+0x19bb4>
   3bfc8:	mov	r0, #0
   3bfcc:	ldr	r6, [lr]
   3bfd0:	mul	r6, r6, r0
   3bfd4:	ldrb	r6, [r2, r6, lsl #3]
   3bfd8:	strb	r6, [ip, r0]
   3bfdc:	add	r0, r0, #1
   3bfe0:	ldr	r6, [r4]
   3bfe4:	cmp	r0, r6
   3bfe8:	blt	3bfcc <GetDataSlab+0x19b90>
   3bfec:	add	ip, ip, r0
   3bff0:	ldr	r0, [sl]
   3bff4:	ldr	r6, [r8]
   3bff8:	mul	r0, r6, r0
   3bffc:	add	r2, r2, r0, lsl #3
   3c000:	add	r7, r7, #1
   3c004:	ldr	r6, [r3]
   3c008:	mov	r0, #0
   3c00c:	cmp	r7, r6
   3c010:	blt	3bfbc <GetDataSlab+0x19b80>
   3c014:	b	22560 <GetDataSlab+0x124>
   3c018:	ldr	r0, [sp, #56]	; 0x38
   3c01c:	cmp	r0, #1
   3c020:	blt	240b8 <GetDataSlab+0x1c7c>
   3c024:	ldr	r0, [sp, #32]
   3c028:	ldr	r1, [sp, #28]
   3c02c:	mla	r0, r1, r6, r0
   3c030:	add	r1, r3, r0
   3c034:	ldr	r0, [sp, #36]	; 0x24
   3c038:	mul	lr, r0, r6
   3c03c:	mov	r3, #0
   3c040:	ldr	r4, [sp, #60]	; 0x3c
   3c044:	ldr	r2, [sp, #44]	; 0x2c
   3c048:	cmp	r4, #1
   3c04c:	blt	3c078 <GetDataSlab+0x19c3c>
   3c050:	mov	r6, #0
   3c054:	mov	r0, r4
   3c058:	mov	r7, ip
   3c05c:	add	r5, r6, r2
   3c060:	ldrb	r6, [r1, r6]
   3c064:	strh	r6, [r7], #2
   3c068:	subs	r0, r0, #1
   3c06c:	mov	r6, r5
   3c070:	bne	3c05c <GetDataSlab+0x19c20>
   3c074:	add	ip, ip, r4, lsl #1
   3c078:	add	r1, r1, lr
   3c07c:	add	r3, r3, #1
   3c080:	mov	r0, #0
   3c084:	ldr	r7, [sp, #56]	; 0x38
   3c088:	cmp	r3, r7
   3c08c:	bne	3c048 <GetDataSlab+0x19c0c>
   3c090:	b	22560 <GetDataSlab+0x124>
   3c094:	ldr	r0, [sp, #56]	; 0x38
   3c098:	cmp	r0, #1
   3c09c:	blt	240b8 <GetDataSlab+0x1c7c>
   3c0a0:	ldr	r0, [sp, #32]
   3c0a4:	ldr	r1, [sp, #28]
   3c0a8:	mla	r0, r1, r6, r0
   3c0ac:	add	r1, r3, r0, lsl #1
   3c0b0:	ldr	r0, [sp, #36]	; 0x24
   3c0b4:	mul	r0, r0, r6
   3c0b8:	lsl	lr, r0, #1
   3c0bc:	ldr	r0, [sp, #44]	; 0x2c
   3c0c0:	lsl	r3, r0, #1
   3c0c4:	mov	r7, #0
   3c0c8:	ldr	r2, [sp, #60]	; 0x3c
   3c0cc:	cmp	r2, #1
   3c0d0:	blt	3c0fc <GetDataSlab+0x19cc0>
   3c0d4:	mov	r5, #0
   3c0d8:	mov	r0, r2
   3c0dc:	mov	r6, ip
   3c0e0:	sub	r4, r5, r3
   3c0e4:	ldrh	r5, [r1, -r5]
   3c0e8:	strh	r5, [r6], #2
   3c0ec:	subs	r0, r0, #1
   3c0f0:	mov	r5, r4
   3c0f4:	bne	3c0e0 <GetDataSlab+0x19ca4>
   3c0f8:	add	ip, ip, r2, lsl #1
   3c0fc:	add	r1, r1, lr
   3c100:	add	r7, r7, #1
   3c104:	mov	r0, #0
   3c108:	ldr	r2, [sp, #56]	; 0x38
   3c10c:	cmp	r7, r2
   3c110:	bne	3c0c8 <GetDataSlab+0x19c8c>
   3c114:	b	22560 <GetDataSlab+0x124>
   3c118:	ldr	r0, [sp, #56]	; 0x38
   3c11c:	cmp	r0, #1
   3c120:	blt	240b8 <GetDataSlab+0x1c7c>
   3c124:	ldr	r0, [sp, #32]
   3c128:	ldr	r1, [sp, #28]
   3c12c:	mla	r0, r1, r6, r0
   3c130:	add	r1, r3, r0, lsl #1
   3c134:	ldr	r0, [sp, #36]	; 0x24
   3c138:	mul	r0, r0, r6
   3c13c:	lsl	lr, r0, #1
   3c140:	ldr	r0, [sp, #44]	; 0x2c
   3c144:	lsl	r3, r0, #1
   3c148:	mov	r7, #0
   3c14c:	ldr	r2, [sp, #60]	; 0x3c
   3c150:	cmp	r2, #1
   3c154:	blt	3c180 <GetDataSlab+0x19d44>
   3c158:	mov	r5, #0
   3c15c:	mov	r0, r2
   3c160:	mov	r6, ip
   3c164:	sub	r4, r5, r3
   3c168:	ldrh	r5, [r1, -r5]
   3c16c:	strh	r5, [r6], #2
   3c170:	subs	r0, r0, #1
   3c174:	mov	r5, r4
   3c178:	bne	3c164 <GetDataSlab+0x19d28>
   3c17c:	add	ip, ip, r2, lsl #1
   3c180:	add	r1, r1, lr
   3c184:	add	r7, r7, #1
   3c188:	mov	r0, #0
   3c18c:	ldr	r2, [sp, #56]	; 0x38
   3c190:	cmp	r7, r2
   3c194:	bne	3c14c <GetDataSlab+0x19d10>
   3c198:	b	22560 <GetDataSlab+0x124>
   3c19c:	ldr	r0, [sp, #56]	; 0x38
   3c1a0:	cmp	r0, #1
   3c1a4:	blt	240b8 <GetDataSlab+0x1c7c>
   3c1a8:	ldr	r0, [sp, #32]
   3c1ac:	ldr	r1, [sp, #28]
   3c1b0:	mla	r0, r1, r6, r0
   3c1b4:	add	r1, r3, r0, lsl #2
   3c1b8:	ldr	r0, [sp, #36]	; 0x24
   3c1bc:	mul	r0, r0, r6
   3c1c0:	lsl	lr, r0, #2
   3c1c4:	ldr	r0, [sp, #44]	; 0x2c
   3c1c8:	lsl	r3, r0, #2
   3c1cc:	mov	r7, #0
   3c1d0:	ldr	r2, [sp, #60]	; 0x3c
   3c1d4:	cmp	r2, #1
   3c1d8:	blt	3c204 <GetDataSlab+0x19dc8>
   3c1dc:	mov	r5, #0
   3c1e0:	mov	r0, r2
   3c1e4:	mov	r6, ip
   3c1e8:	sub	r4, r5, r3
   3c1ec:	ldr	r5, [r1, -r5]
   3c1f0:	strh	r5, [r6], #2
   3c1f4:	subs	r0, r0, #1
   3c1f8:	mov	r5, r4
   3c1fc:	bne	3c1e8 <GetDataSlab+0x19dac>
   3c200:	add	ip, ip, r2, lsl #1
   3c204:	add	r1, r1, lr
   3c208:	add	r7, r7, #1
   3c20c:	mov	r0, #0
   3c210:	ldr	r2, [sp, #56]	; 0x38
   3c214:	cmp	r7, r2
   3c218:	bne	3c1d0 <GetDataSlab+0x19d94>
   3c21c:	b	22560 <GetDataSlab+0x124>
   3c220:	ldr	r0, [sp, #56]	; 0x38
   3c224:	cmp	r0, #1
   3c228:	blt	240b8 <GetDataSlab+0x1c7c>
   3c22c:	ldr	r0, [sp, #32]
   3c230:	ldr	r1, [sp, #28]
   3c234:	mla	r0, r1, r6, r0
   3c238:	add	r1, r3, r0, lsl #2
   3c23c:	ldr	r0, [sp, #36]	; 0x24
   3c240:	mul	r0, r0, r6
   3c244:	lsl	lr, r0, #2
   3c248:	ldr	r0, [sp, #44]	; 0x2c
   3c24c:	lsl	r3, r0, #2
   3c250:	mov	r7, #0
   3c254:	ldr	r2, [sp, #60]	; 0x3c
   3c258:	cmp	r2, #1
   3c25c:	blt	3c288 <GetDataSlab+0x19e4c>
   3c260:	mov	r5, #0
   3c264:	mov	r0, r2
   3c268:	mov	r6, ip
   3c26c:	sub	r4, r5, r3
   3c270:	ldr	r5, [r1, -r5]
   3c274:	strh	r5, [r6], #2
   3c278:	subs	r0, r0, #1
   3c27c:	mov	r5, r4
   3c280:	bne	3c26c <GetDataSlab+0x19e30>
   3c284:	add	ip, ip, r2, lsl #1
   3c288:	add	r1, r1, lr
   3c28c:	add	r7, r7, #1
   3c290:	mov	r0, #0
   3c294:	ldr	r2, [sp, #56]	; 0x38
   3c298:	cmp	r7, r2
   3c29c:	bne	3c254 <GetDataSlab+0x19e18>
   3c2a0:	b	22560 <GetDataSlab+0x124>
   3c2a4:	ldr	r0, [sp, #56]	; 0x38
   3c2a8:	cmp	r0, #1
   3c2ac:	blt	240b8 <GetDataSlab+0x1c7c>
   3c2b0:	ldr	r0, [sp, #32]
   3c2b4:	ldr	r1, [sp, #28]
   3c2b8:	mla	r0, r1, r6, r0
   3c2bc:	add	r1, r3, r0, lsl #2
   3c2c0:	ldr	r0, [sp, #36]	; 0x24
   3c2c4:	mul	r0, r0, r6
   3c2c8:	lsl	lr, r0, #2
   3c2cc:	ldr	r0, [sp, #44]	; 0x2c
   3c2d0:	lsl	r3, r0, #2
   3c2d4:	mov	r7, #0
   3c2d8:	ldr	r2, [sp, #60]	; 0x3c
   3c2dc:	cmp	r2, #1
   3c2e0:	blt	3c310 <GetDataSlab+0x19ed4>
   3c2e4:	mov	r0, r1
   3c2e8:	mov	r6, r2
   3c2ec:	mov	r5, ip
   3c2f0:	vldr	s0, [r0]
   3c2f4:	vcvt.s32.f32	s0, s0
   3c2f8:	add	r0, r0, r3
   3c2fc:	vmov	r4, s0
   3c300:	strh	r4, [r5], #2
   3c304:	subs	r6, r6, #1
   3c308:	bne	3c2f0 <GetDataSlab+0x19eb4>
   3c30c:	add	ip, ip, r2, lsl #1
   3c310:	add	r1, r1, lr
   3c314:	add	r7, r7, #1
   3c318:	mov	r0, #0
   3c31c:	ldr	r2, [sp, #56]	; 0x38
   3c320:	cmp	r7, r2
   3c324:	bne	3c2d8 <GetDataSlab+0x19e9c>
   3c328:	b	22560 <GetDataSlab+0x124>
   3c32c:	ldr	r0, [sp, #56]	; 0x38
   3c330:	cmp	r0, #1
   3c334:	blt	240b8 <GetDataSlab+0x1c7c>
   3c338:	ldr	r0, [sp, #32]
   3c33c:	ldr	r1, [sp, #28]
   3c340:	mla	r0, r1, r6, r0
   3c344:	add	r1, r3, r0, lsl #3
   3c348:	ldr	r0, [sp, #36]	; 0x24
   3c34c:	mul	r0, r0, r6
   3c350:	lsl	lr, r0, #3
   3c354:	ldr	r0, [sp, #44]	; 0x2c
   3c358:	lsl	r3, r0, #3
   3c35c:	mov	r7, #0
   3c360:	ldr	r2, [sp, #60]	; 0x3c
   3c364:	cmp	r2, #1
   3c368:	blt	3c398 <GetDataSlab+0x19f5c>
   3c36c:	mov	r0, r1
   3c370:	mov	r6, r2
   3c374:	mov	r5, ip
   3c378:	vldr	d16, [r0]
   3c37c:	vcvt.s32.f64	s0, d16
   3c380:	add	r0, r0, r3
   3c384:	vmov	r4, s0
   3c388:	strh	r4, [r5], #2
   3c38c:	subs	r6, r6, #1
   3c390:	bne	3c378 <GetDataSlab+0x19f3c>
   3c394:	add	ip, ip, r2, lsl #1
   3c398:	add	r1, r1, lr
   3c39c:	add	r7, r7, #1
   3c3a0:	mov	r0, #0
   3c3a4:	ldr	r2, [sp, #56]	; 0x38
   3c3a8:	cmp	r7, r2
   3c3ac:	bne	3c360 <GetDataSlab+0x19f24>
   3c3b0:	b	22560 <GetDataSlab+0x124>
   3c3b4:	ldr	r0, [sp, #56]	; 0x38
   3c3b8:	cmp	r0, #1
   3c3bc:	blt	240b8 <GetDataSlab+0x1c7c>
   3c3c0:	ldr	r0, [sp, #32]
   3c3c4:	ldr	r1, [sp, #28]
   3c3c8:	mla	r0, r1, r6, r0
   3c3cc:	add	r0, r3, r0, lsl #3
   3c3d0:	ldr	r1, [sp, #36]	; 0x24
   3c3d4:	mul	r1, r1, r6
   3c3d8:	lsl	r8, r1, #3
   3c3dc:	ldr	r1, [sp, #44]	; 0x2c
   3c3e0:	lsl	r2, r1, #3
   3c3e4:	mov	r3, #0
   3c3e8:	ldr	r1, [sp, #60]	; 0x3c
   3c3ec:	cmp	r1, #1
   3c3f0:	blt	3c420 <GetDataSlab+0x19fe4>
   3c3f4:	mov	r5, #0
   3c3f8:	mov	r7, r1
   3c3fc:	mov	r6, ip
   3c400:	sub	r4, r5, r2
   3c404:	ldrh	r5, [r0, -r5]
   3c408:	strh	r5, [r6], #2
   3c40c:	subs	r7, r7, #1
   3c410:	mov	r5, r4
   3c414:	bne	3c400 <GetDataSlab+0x19fc4>
   3c418:	add	ip, ip, r1, lsl #1
   3c41c:	ldr	r6, [sp, #40]	; 0x28
   3c420:	add	r0, r0, r8
   3c424:	add	r3, r3, #1
   3c428:	ldr	r4, [sp, #56]	; 0x38
   3c42c:	cmp	r3, r4
   3c430:	bne	3c3ec <GetDataSlab+0x19fb0>
   3c434:	mov	r0, #0
   3c438:	cmp	lr, #13
   3c43c:	bne	22560 <GetDataSlab+0x124>
   3c440:	ldr	r0, [sp, #56]	; 0x38
   3c444:	cmp	r0, #1
   3c448:	blt	240b8 <GetDataSlab+0x1c7c>
   3c44c:	ldr	r0, [sp, #32]
   3c450:	ldr	r1, [sp, #28]
   3c454:	mla	r0, r1, r6, r0
   3c458:	ldr	r1, [sp, #48]	; 0x30
   3c45c:	add	r1, r1, r0, lsl #3
   3c460:	ldr	r0, [sp, #36]	; 0x24
   3c464:	mul	r0, r0, r6
   3c468:	lsl	lr, r0, #3
   3c46c:	ldr	r0, [sp, #44]	; 0x2c
   3c470:	lsl	r3, r0, #3
   3c474:	mov	r7, #0
   3c478:	ldr	r2, [sp, #60]	; 0x3c
   3c47c:	cmp	r2, #1
   3c480:	blt	3c4ac <GetDataSlab+0x1a070>
   3c484:	mov	r5, #0
   3c488:	mov	r0, r2
   3c48c:	mov	r6, ip
   3c490:	sub	r4, r5, r3
   3c494:	ldrh	r5, [r1, -r5]
   3c498:	strh	r5, [r6], #2
   3c49c:	subs	r0, r0, #1
   3c4a0:	mov	r5, r4
   3c4a4:	bne	3c490 <GetDataSlab+0x1a054>
   3c4a8:	add	ip, ip, r2, lsl #1
   3c4ac:	add	r1, r1, lr
   3c4b0:	add	r7, r7, #1
   3c4b4:	mov	r0, #0
   3c4b8:	ldr	r2, [sp, #56]	; 0x38
   3c4bc:	cmp	r7, r2
   3c4c0:	bne	3c478 <GetDataSlab+0x1a03c>
   3c4c4:	b	22560 <GetDataSlab+0x124>
   3c4c8:	ldr	r0, [sp, #56]	; 0x38
   3c4cc:	cmp	r0, #1
   3c4d0:	blt	240b8 <GetDataSlab+0x1c7c>
   3c4d4:	ldr	r0, [sp, #32]
   3c4d8:	ldr	r1, [sp, #28]
   3c4dc:	mla	r0, r1, r6, r0
   3c4e0:	add	r1, r3, r0
   3c4e4:	ldr	r0, [sp, #36]	; 0x24
   3c4e8:	mul	lr, r0, r6
   3c4ec:	mov	r3, #0
   3c4f0:	ldr	r4, [sp, #60]	; 0x3c
   3c4f4:	ldr	r2, [sp, #44]	; 0x2c
   3c4f8:	cmp	r4, #1
   3c4fc:	blt	3c528 <GetDataSlab+0x1a0ec>
   3c500:	mov	r6, #0
   3c504:	mov	r0, r4
   3c508:	mov	r7, ip
   3c50c:	add	r5, r6, r2
   3c510:	ldrb	r6, [r1, r6]
   3c514:	strh	r6, [r7], #2
   3c518:	subs	r0, r0, #1
   3c51c:	mov	r6, r5
   3c520:	bne	3c50c <GetDataSlab+0x1a0d0>
   3c524:	add	ip, ip, r4, lsl #1
   3c528:	add	r1, r1, lr
   3c52c:	add	r3, r3, #1
   3c530:	mov	r0, #0
   3c534:	ldr	r7, [sp, #56]	; 0x38
   3c538:	cmp	r3, r7
   3c53c:	bne	3c4f8 <GetDataSlab+0x1a0bc>
   3c540:	b	22560 <GetDataSlab+0x124>
   3c544:	ldr	r0, [sp, #56]	; 0x38
   3c548:	cmp	r0, #1
   3c54c:	blt	240b8 <GetDataSlab+0x1c7c>
   3c550:	ldr	r0, [sp, #32]
   3c554:	ldr	r1, [sp, #28]
   3c558:	mla	r0, r1, r6, r0
   3c55c:	add	r1, r3, r0, lsl #1
   3c560:	ldr	r0, [sp, #36]	; 0x24
   3c564:	mul	r0, r0, r6
   3c568:	lsl	lr, r0, #1
   3c56c:	ldr	r0, [sp, #44]	; 0x2c
   3c570:	lsl	r3, r0, #1
   3c574:	mov	r7, #0
   3c578:	ldr	r2, [sp, #60]	; 0x3c
   3c57c:	cmp	r2, #1
   3c580:	blt	3c5ac <GetDataSlab+0x1a170>
   3c584:	mov	r5, #0
   3c588:	mov	r0, r2
   3c58c:	mov	r6, ip
   3c590:	sub	r4, r5, r3
   3c594:	ldrh	r5, [r1, -r5]
   3c598:	strh	r5, [r6], #2
   3c59c:	subs	r0, r0, #1
   3c5a0:	mov	r5, r4
   3c5a4:	bne	3c590 <GetDataSlab+0x1a154>
   3c5a8:	add	ip, ip, r2, lsl #1
   3c5ac:	add	r1, r1, lr
   3c5b0:	add	r7, r7, #1
   3c5b4:	mov	r0, #0
   3c5b8:	ldr	r2, [sp, #56]	; 0x38
   3c5bc:	cmp	r7, r2
   3c5c0:	bne	3c578 <GetDataSlab+0x1a13c>
   3c5c4:	b	22560 <GetDataSlab+0x124>
   3c5c8:	ldr	r0, [sp, #56]	; 0x38
   3c5cc:	cmp	r0, #1
   3c5d0:	blt	240b8 <GetDataSlab+0x1c7c>
   3c5d4:	ldr	r0, [sp, #32]
   3c5d8:	ldr	r1, [sp, #28]
   3c5dc:	mla	r0, r1, r6, r0
   3c5e0:	add	r1, r3, r0, lsl #1
   3c5e4:	ldr	r0, [sp, #36]	; 0x24
   3c5e8:	mul	r0, r0, r6
   3c5ec:	lsl	lr, r0, #1
   3c5f0:	ldr	r0, [sp, #44]	; 0x2c
   3c5f4:	lsl	r3, r0, #1
   3c5f8:	mov	r7, #0
   3c5fc:	ldr	r2, [sp, #60]	; 0x3c
   3c600:	cmp	r2, #1
   3c604:	blt	3c630 <GetDataSlab+0x1a1f4>
   3c608:	mov	r5, #0
   3c60c:	mov	r0, r2
   3c610:	mov	r6, ip
   3c614:	sub	r4, r5, r3
   3c618:	ldrh	r5, [r1, -r5]
   3c61c:	strh	r5, [r6], #2
   3c620:	subs	r0, r0, #1
   3c624:	mov	r5, r4
   3c628:	bne	3c614 <GetDataSlab+0x1a1d8>
   3c62c:	add	ip, ip, r2, lsl #1
   3c630:	add	r1, r1, lr
   3c634:	add	r7, r7, #1
   3c638:	mov	r0, #0
   3c63c:	ldr	r2, [sp, #56]	; 0x38
   3c640:	cmp	r7, r2
   3c644:	bne	3c5fc <GetDataSlab+0x1a1c0>
   3c648:	b	22560 <GetDataSlab+0x124>
   3c64c:	ldr	r0, [sp, #56]	; 0x38
   3c650:	cmp	r0, #1
   3c654:	blt	240b8 <GetDataSlab+0x1c7c>
   3c658:	ldr	r0, [sp, #32]
   3c65c:	ldr	r1, [sp, #28]
   3c660:	mla	r0, r1, r6, r0
   3c664:	add	r1, r3, r0, lsl #2
   3c668:	ldr	r0, [sp, #36]	; 0x24
   3c66c:	mul	r0, r0, r6
   3c670:	lsl	lr, r0, #2
   3c674:	ldr	r0, [sp, #44]	; 0x2c
   3c678:	lsl	r3, r0, #2
   3c67c:	mov	r7, #0
   3c680:	ldr	r2, [sp, #60]	; 0x3c
   3c684:	cmp	r2, #1
   3c688:	blt	3c6b4 <GetDataSlab+0x1a278>
   3c68c:	mov	r5, #0
   3c690:	mov	r0, r2
   3c694:	mov	r6, ip
   3c698:	sub	r4, r5, r3
   3c69c:	ldr	r5, [r1, -r5]
   3c6a0:	strh	r5, [r6], #2
   3c6a4:	subs	r0, r0, #1
   3c6a8:	mov	r5, r4
   3c6ac:	bne	3c698 <GetDataSlab+0x1a25c>
   3c6b0:	add	ip, ip, r2, lsl #1
   3c6b4:	add	r1, r1, lr
   3c6b8:	add	r7, r7, #1
   3c6bc:	mov	r0, #0
   3c6c0:	ldr	r2, [sp, #56]	; 0x38
   3c6c4:	cmp	r7, r2
   3c6c8:	bne	3c680 <GetDataSlab+0x1a244>
   3c6cc:	b	22560 <GetDataSlab+0x124>
   3c6d0:	ldr	r0, [sp, #56]	; 0x38
   3c6d4:	cmp	r0, #1
   3c6d8:	blt	240b8 <GetDataSlab+0x1c7c>
   3c6dc:	ldr	r0, [sp, #32]
   3c6e0:	ldr	r1, [sp, #28]
   3c6e4:	mla	r0, r1, r6, r0
   3c6e8:	add	r1, r3, r0, lsl #2
   3c6ec:	ldr	r0, [sp, #36]	; 0x24
   3c6f0:	mul	r0, r0, r6
   3c6f4:	lsl	lr, r0, #2
   3c6f8:	ldr	r0, [sp, #44]	; 0x2c
   3c6fc:	lsl	r3, r0, #2
   3c700:	mov	r7, #0
   3c704:	ldr	r2, [sp, #60]	; 0x3c
   3c708:	cmp	r2, #1
   3c70c:	blt	3c738 <GetDataSlab+0x1a2fc>
   3c710:	mov	r5, #0
   3c714:	mov	r0, r2
   3c718:	mov	r6, ip
   3c71c:	sub	r4, r5, r3
   3c720:	ldr	r5, [r1, -r5]
   3c724:	strh	r5, [r6], #2
   3c728:	subs	r0, r0, #1
   3c72c:	mov	r5, r4
   3c730:	bne	3c71c <GetDataSlab+0x1a2e0>
   3c734:	add	ip, ip, r2, lsl #1
   3c738:	add	r1, r1, lr
   3c73c:	add	r7, r7, #1
   3c740:	mov	r0, #0
   3c744:	ldr	r2, [sp, #56]	; 0x38
   3c748:	cmp	r7, r2
   3c74c:	bne	3c704 <GetDataSlab+0x1a2c8>
   3c750:	b	22560 <GetDataSlab+0x124>
   3c754:	ldr	r0, [sp, #56]	; 0x38
   3c758:	cmp	r0, #1
   3c75c:	blt	240b8 <GetDataSlab+0x1c7c>
   3c760:	ldr	r0, [sp, #32]
   3c764:	ldr	r1, [sp, #28]
   3c768:	mla	r0, r1, r6, r0
   3c76c:	add	r1, r3, r0, lsl #2
   3c770:	ldr	r0, [sp, #36]	; 0x24
   3c774:	mul	r0, r0, r6
   3c778:	lsl	lr, r0, #2
   3c77c:	ldr	r0, [sp, #44]	; 0x2c
   3c780:	lsl	r3, r0, #2
   3c784:	mov	r7, #0
   3c788:	ldr	r2, [sp, #60]	; 0x3c
   3c78c:	cmp	r2, #1
   3c790:	blt	3c7c0 <GetDataSlab+0x1a384>
   3c794:	mov	r0, r1
   3c798:	mov	r6, r2
   3c79c:	mov	r5, ip
   3c7a0:	vldr	s0, [r0]
   3c7a4:	vcvt.u32.f32	s0, s0
   3c7a8:	add	r0, r0, r3
   3c7ac:	vmov	r4, s0
   3c7b0:	strh	r4, [r5], #2
   3c7b4:	subs	r6, r6, #1
   3c7b8:	bne	3c7a0 <GetDataSlab+0x1a364>
   3c7bc:	add	ip, ip, r2, lsl #1
   3c7c0:	add	r1, r1, lr
   3c7c4:	add	r7, r7, #1
   3c7c8:	mov	r0, #0
   3c7cc:	ldr	r2, [sp, #56]	; 0x38
   3c7d0:	cmp	r7, r2
   3c7d4:	bne	3c788 <GetDataSlab+0x1a34c>
   3c7d8:	b	22560 <GetDataSlab+0x124>
   3c7dc:	ldr	r0, [sp, #56]	; 0x38
   3c7e0:	cmp	r0, #1
   3c7e4:	blt	240b8 <GetDataSlab+0x1c7c>
   3c7e8:	ldr	r0, [sp, #32]
   3c7ec:	ldr	r1, [sp, #28]
   3c7f0:	mla	r0, r1, r6, r0
   3c7f4:	add	r1, r3, r0, lsl #3
   3c7f8:	ldr	r0, [sp, #36]	; 0x24
   3c7fc:	mul	r0, r0, r6
   3c800:	lsl	lr, r0, #3
   3c804:	ldr	r0, [sp, #44]	; 0x2c
   3c808:	lsl	r3, r0, #3
   3c80c:	mov	r7, #0
   3c810:	ldr	r2, [sp, #60]	; 0x3c
   3c814:	cmp	r2, #1
   3c818:	blt	3c848 <GetDataSlab+0x1a40c>
   3c81c:	mov	r0, r1
   3c820:	mov	r6, r2
   3c824:	mov	r5, ip
   3c828:	vldr	d16, [r0]
   3c82c:	vcvt.u32.f64	s0, d16
   3c830:	add	r0, r0, r3
   3c834:	vmov	r4, s0
   3c838:	strh	r4, [r5], #2
   3c83c:	subs	r6, r6, #1
   3c840:	bne	3c828 <GetDataSlab+0x1a3ec>
   3c844:	add	ip, ip, r2, lsl #1
   3c848:	add	r1, r1, lr
   3c84c:	add	r7, r7, #1
   3c850:	mov	r0, #0
   3c854:	ldr	r2, [sp, #56]	; 0x38
   3c858:	cmp	r7, r2
   3c85c:	bne	3c810 <GetDataSlab+0x1a3d4>
   3c860:	b	22560 <GetDataSlab+0x124>
   3c864:	ldr	r0, [sp, #56]	; 0x38
   3c868:	cmp	r0, #1
   3c86c:	blt	240b8 <GetDataSlab+0x1c7c>
   3c870:	ldr	r0, [sp, #32]
   3c874:	ldr	r1, [sp, #28]
   3c878:	mla	r0, r1, r6, r0
   3c87c:	add	r0, r3, r0, lsl #3
   3c880:	ldr	r1, [sp, #36]	; 0x24
   3c884:	mul	r1, r1, r6
   3c888:	lsl	r8, r1, #3
   3c88c:	ldr	r1, [sp, #44]	; 0x2c
   3c890:	lsl	r2, r1, #3
   3c894:	mov	r3, #0
   3c898:	ldr	r1, [sp, #60]	; 0x3c
   3c89c:	cmp	r1, #1
   3c8a0:	blt	3c8d0 <GetDataSlab+0x1a494>
   3c8a4:	mov	r5, #0
   3c8a8:	mov	r7, r1
   3c8ac:	mov	r6, ip
   3c8b0:	sub	r4, r5, r2
   3c8b4:	ldrh	r5, [r0, -r5]
   3c8b8:	strh	r5, [r6], #2
   3c8bc:	subs	r7, r7, #1
   3c8c0:	mov	r5, r4
   3c8c4:	bne	3c8b0 <GetDataSlab+0x1a474>
   3c8c8:	add	ip, ip, r1, lsl #1
   3c8cc:	ldr	r6, [sp, #40]	; 0x28
   3c8d0:	add	r0, r0, r8
   3c8d4:	add	r3, r3, #1
   3c8d8:	ldr	r4, [sp, #56]	; 0x38
   3c8dc:	cmp	r3, r4
   3c8e0:	bne	3c89c <GetDataSlab+0x1a460>
   3c8e4:	mov	r0, #0
   3c8e8:	cmp	lr, #13
   3c8ec:	bne	22560 <GetDataSlab+0x124>
   3c8f0:	ldr	r0, [sp, #56]	; 0x38
   3c8f4:	cmp	r0, #1
   3c8f8:	blt	240b8 <GetDataSlab+0x1c7c>
   3c8fc:	ldr	r0, [sp, #32]
   3c900:	ldr	r1, [sp, #28]
   3c904:	mla	r0, r1, r6, r0
   3c908:	ldr	r1, [sp, #48]	; 0x30
   3c90c:	add	r1, r1, r0, lsl #3
   3c910:	ldr	r0, [sp, #36]	; 0x24
   3c914:	mul	r0, r0, r6
   3c918:	lsl	lr, r0, #3
   3c91c:	ldr	r0, [sp, #44]	; 0x2c
   3c920:	lsl	r3, r0, #3
   3c924:	mov	r7, #0
   3c928:	ldr	r2, [sp, #60]	; 0x3c
   3c92c:	cmp	r2, #1
   3c930:	blt	3c95c <GetDataSlab+0x1a520>
   3c934:	mov	r5, #0
   3c938:	mov	r0, r2
   3c93c:	mov	r6, ip
   3c940:	sub	r4, r5, r3
   3c944:	ldrh	r5, [r1, -r5]
   3c948:	strh	r5, [r6], #2
   3c94c:	subs	r0, r0, #1
   3c950:	mov	r5, r4
   3c954:	bne	3c940 <GetDataSlab+0x1a504>
   3c958:	add	ip, ip, r2, lsl #1
   3c95c:	add	r1, r1, lr
   3c960:	add	r7, r7, #1
   3c964:	mov	r0, #0
   3c968:	ldr	r2, [sp, #56]	; 0x38
   3c96c:	cmp	r7, r2
   3c970:	bne	3c928 <GetDataSlab+0x1a4ec>
   3c974:	b	22560 <GetDataSlab+0x124>
   3c978:	ldr	r0, [r3]
   3c97c:	cmp	r0, #1
   3c980:	blt	240b8 <GetDataSlab+0x1c7c>
   3c984:	ldr	r0, [sp, #32]
   3c988:	ldr	r2, [sp, #28]
   3c98c:	mla	r0, r2, r6, r0
   3c990:	add	r2, r5, r0
   3c994:	mov	r6, #0
   3c998:	ldr	r0, [r4]
   3c99c:	cmp	r0, #1
   3c9a0:	blt	3c9d4 <GetDataSlab+0x1a598>
   3c9a4:	mov	r0, #0
   3c9a8:	mov	r7, #0
   3c9ac:	ldr	r5, [lr]
   3c9b0:	mul	r5, r5, r7
   3c9b4:	ldrb	r5, [r2, r5]
   3c9b8:	str	r5, [ip, r7, lsl #2]
   3c9bc:	add	r0, r0, #4
   3c9c0:	add	r7, r7, #1
   3c9c4:	ldr	r5, [r4]
   3c9c8:	cmp	r7, r5
   3c9cc:	blt	3c9ac <GetDataSlab+0x1a570>
   3c9d0:	add	ip, ip, r0
   3c9d4:	ldr	r0, [sl]
   3c9d8:	ldr	r7, [r8]
   3c9dc:	mla	r2, r7, r0, r2
   3c9e0:	add	r6, r6, #1
   3c9e4:	ldr	r7, [r3]
   3c9e8:	mov	r0, #0
   3c9ec:	cmp	r6, r7
   3c9f0:	blt	3c998 <GetDataSlab+0x1a55c>
   3c9f4:	b	22560 <GetDataSlab+0x124>
   3c9f8:	ldr	r0, [r3]
   3c9fc:	cmp	r0, #1
   3ca00:	blt	240b8 <GetDataSlab+0x1c7c>
   3ca04:	ldr	r0, [sp, #32]
   3ca08:	ldr	r2, [sp, #28]
   3ca0c:	mla	r0, r2, r6, r0
   3ca10:	add	r2, r5, r0, lsl #1
   3ca14:	mov	r6, #0
   3ca18:	ldr	r0, [r4]
   3ca1c:	cmp	r0, #1
   3ca20:	blt	3ca58 <GetDataSlab+0x1a61c>
   3ca24:	mov	r0, #0
   3ca28:	mov	r7, #0
   3ca2c:	ldr	r5, [lr]
   3ca30:	mul	r5, r5, r7
   3ca34:	add	r5, r2, r5, lsl #1
   3ca38:	ldrsh	r5, [r5]
   3ca3c:	str	r5, [ip, r7, lsl #2]
   3ca40:	add	r0, r0, #4
   3ca44:	add	r7, r7, #1
   3ca48:	ldr	r5, [r4]
   3ca4c:	cmp	r7, r5
   3ca50:	blt	3ca2c <GetDataSlab+0x1a5f0>
   3ca54:	add	ip, ip, r0
   3ca58:	ldr	r0, [sl]
   3ca5c:	ldr	r7, [r8]
   3ca60:	mul	r0, r7, r0
   3ca64:	add	r2, r2, r0, lsl #1
   3ca68:	add	r6, r6, #1
   3ca6c:	ldr	r7, [r3]
   3ca70:	mov	r0, #0
   3ca74:	cmp	r6, r7
   3ca78:	blt	3ca18 <GetDataSlab+0x1a5dc>
   3ca7c:	b	22560 <GetDataSlab+0x124>
   3ca80:	ldr	r0, [r3]
   3ca84:	cmp	r0, #1
   3ca88:	blt	240b8 <GetDataSlab+0x1c7c>
   3ca8c:	ldr	r0, [sp, #32]
   3ca90:	ldr	r2, [sp, #28]
   3ca94:	mla	r0, r2, r6, r0
   3ca98:	add	r2, r5, r0, lsl #1
   3ca9c:	mov	r6, #0
   3caa0:	ldr	r0, [r4]
   3caa4:	cmp	r0, #1
   3caa8:	blt	3cae0 <GetDataSlab+0x1a6a4>
   3caac:	mov	r0, #0
   3cab0:	mov	r7, #0
   3cab4:	ldr	r5, [lr]
   3cab8:	mul	r5, r5, r7
   3cabc:	add	r5, r2, r5, lsl #1
   3cac0:	ldrh	r5, [r5]
   3cac4:	str	r5, [ip, r7, lsl #2]
   3cac8:	add	r0, r0, #4
   3cacc:	add	r7, r7, #1
   3cad0:	ldr	r5, [r4]
   3cad4:	cmp	r7, r5
   3cad8:	blt	3cab4 <GetDataSlab+0x1a678>
   3cadc:	add	ip, ip, r0
   3cae0:	ldr	r0, [sl]
   3cae4:	ldr	r7, [r8]
   3cae8:	mul	r0, r7, r0
   3caec:	add	r2, r2, r0, lsl #1
   3caf0:	add	r6, r6, #1
   3caf4:	ldr	r7, [r3]
   3caf8:	mov	r0, #0
   3cafc:	cmp	r6, r7
   3cb00:	blt	3caa0 <GetDataSlab+0x1a664>
   3cb04:	b	22560 <GetDataSlab+0x124>
   3cb08:	ldr	r0, [r3]
   3cb0c:	cmp	r0, #1
   3cb10:	blt	240b8 <GetDataSlab+0x1c7c>
   3cb14:	ldr	r0, [sp, #32]
   3cb18:	ldr	r2, [sp, #28]
   3cb1c:	mla	r0, r2, r6, r0
   3cb20:	add	r2, r5, r0, lsl #2
   3cb24:	mov	r6, #0
   3cb28:	ldr	r0, [r4]
   3cb2c:	cmp	r0, #1
   3cb30:	blt	3cb64 <GetDataSlab+0x1a728>
   3cb34:	mov	r0, #0
   3cb38:	mov	r7, #0
   3cb3c:	ldr	r5, [lr]
   3cb40:	mul	r5, r5, r7
   3cb44:	ldr	r5, [r2, r5, lsl #2]
   3cb48:	str	r5, [ip, r7, lsl #2]
   3cb4c:	add	r0, r0, #4
   3cb50:	add	r7, r7, #1
   3cb54:	ldr	r5, [r4]
   3cb58:	cmp	r7, r5
   3cb5c:	blt	3cb3c <GetDataSlab+0x1a700>
   3cb60:	add	ip, ip, r0
   3cb64:	ldr	r0, [sl]
   3cb68:	ldr	r7, [r8]
   3cb6c:	mul	r0, r7, r0
   3cb70:	add	r2, r2, r0, lsl #2
   3cb74:	add	r6, r6, #1
   3cb78:	ldr	r7, [r3]
   3cb7c:	mov	r0, #0
   3cb80:	cmp	r6, r7
   3cb84:	blt	3cb28 <GetDataSlab+0x1a6ec>
   3cb88:	b	22560 <GetDataSlab+0x124>
   3cb8c:	ldr	r0, [r3]
   3cb90:	cmp	r0, #1
   3cb94:	blt	240b8 <GetDataSlab+0x1c7c>
   3cb98:	ldr	r0, [sp, #32]
   3cb9c:	ldr	r2, [sp, #28]
   3cba0:	mla	r0, r2, r6, r0
   3cba4:	add	r2, r5, r0, lsl #2
   3cba8:	mov	r6, #0
   3cbac:	ldr	r0, [r4]
   3cbb0:	cmp	r0, #1
   3cbb4:	blt	3cbe8 <GetDataSlab+0x1a7ac>
   3cbb8:	mov	r0, #0
   3cbbc:	mov	r7, #0
   3cbc0:	ldr	r5, [lr]
   3cbc4:	mul	r5, r5, r7
   3cbc8:	ldr	r5, [r2, r5, lsl #2]
   3cbcc:	str	r5, [ip, r7, lsl #2]
   3cbd0:	add	r0, r0, #4
   3cbd4:	add	r7, r7, #1
   3cbd8:	ldr	r5, [r4]
   3cbdc:	cmp	r7, r5
   3cbe0:	blt	3cbc0 <GetDataSlab+0x1a784>
   3cbe4:	add	ip, ip, r0
   3cbe8:	ldr	r0, [sl]
   3cbec:	ldr	r7, [r8]
   3cbf0:	mul	r0, r7, r0
   3cbf4:	add	r2, r2, r0, lsl #2
   3cbf8:	add	r6, r6, #1
   3cbfc:	ldr	r7, [r3]
   3cc00:	mov	r0, #0
   3cc04:	cmp	r6, r7
   3cc08:	blt	3cbac <GetDataSlab+0x1a770>
   3cc0c:	b	22560 <GetDataSlab+0x124>
   3cc10:	ldr	r0, [r3]
   3cc14:	cmp	r0, #1
   3cc18:	blt	240b8 <GetDataSlab+0x1c7c>
   3cc1c:	ldr	r0, [sp, #32]
   3cc20:	ldr	r2, [sp, #28]
   3cc24:	mla	r0, r2, r6, r0
   3cc28:	add	r2, r5, r0, lsl #2
   3cc2c:	mov	r6, #0
   3cc30:	ldr	r0, [r4]
   3cc34:	cmp	r0, #1
   3cc38:	blt	3cc78 <GetDataSlab+0x1a83c>
   3cc3c:	mov	r0, #0
   3cc40:	mov	r7, #0
   3cc44:	ldr	r5, [lr]
   3cc48:	mul	r5, r5, r7
   3cc4c:	add	r5, r2, r5, lsl #2
   3cc50:	vldr	s0, [r5]
   3cc54:	vcvt.s32.f32	s0, s0
   3cc58:	vmov	r5, s0
   3cc5c:	str	r5, [ip, r7, lsl #2]
   3cc60:	add	r0, r0, #4
   3cc64:	add	r7, r7, #1
   3cc68:	ldr	r5, [r4]
   3cc6c:	cmp	r7, r5
   3cc70:	blt	3cc44 <GetDataSlab+0x1a808>
   3cc74:	add	ip, ip, r0
   3cc78:	ldr	r0, [sl]
   3cc7c:	ldr	r7, [r8]
   3cc80:	mul	r0, r7, r0
   3cc84:	add	r2, r2, r0, lsl #2
   3cc88:	add	r6, r6, #1
   3cc8c:	ldr	r7, [r3]
   3cc90:	mov	r0, #0
   3cc94:	cmp	r6, r7
   3cc98:	blt	3cc30 <GetDataSlab+0x1a7f4>
   3cc9c:	b	22560 <GetDataSlab+0x124>
   3cca0:	ldr	r0, [r3]
   3cca4:	cmp	r0, #1
   3cca8:	blt	240b8 <GetDataSlab+0x1c7c>
   3ccac:	ldr	r0, [sp, #32]
   3ccb0:	ldr	r2, [sp, #28]
   3ccb4:	mla	r0, r2, r6, r0
   3ccb8:	add	r2, r5, r0, lsl #3
   3ccbc:	mov	r6, #0
   3ccc0:	ldr	r0, [r4]
   3ccc4:	cmp	r0, #1
   3ccc8:	blt	3cd08 <GetDataSlab+0x1a8cc>
   3cccc:	mov	r0, #0
   3ccd0:	mov	r7, #0
   3ccd4:	ldr	r5, [lr]
   3ccd8:	mul	r5, r5, r7
   3ccdc:	add	r5, r2, r5, lsl #3
   3cce0:	vldr	d16, [r5]
   3cce4:	vcvt.s32.f64	s0, d16
   3cce8:	vmov	r5, s0
   3ccec:	str	r5, [ip, r7, lsl #2]
   3ccf0:	add	r0, r0, #4
   3ccf4:	add	r7, r7, #1
   3ccf8:	ldr	r5, [r4]
   3ccfc:	cmp	r7, r5
   3cd00:	blt	3ccd4 <GetDataSlab+0x1a898>
   3cd04:	add	ip, ip, r0
   3cd08:	ldr	r0, [sl]
   3cd0c:	ldr	r7, [r8]
   3cd10:	mul	r0, r7, r0
   3cd14:	add	r2, r2, r0, lsl #3
   3cd18:	add	r6, r6, #1
   3cd1c:	ldr	r7, [r3]
   3cd20:	mov	r0, #0
   3cd24:	cmp	r6, r7
   3cd28:	blt	3ccc0 <GetDataSlab+0x1a884>
   3cd2c:	b	22560 <GetDataSlab+0x124>
   3cd30:	ldr	r0, [r3]
   3cd34:	cmp	r0, #1
   3cd38:	blt	240b8 <GetDataSlab+0x1c7c>
   3cd3c:	ldr	r0, [sp, #32]
   3cd40:	ldr	r2, [sp, #28]
   3cd44:	mla	r0, r2, r6, r0
   3cd48:	add	r0, r5, r0, lsl #3
   3cd4c:	mov	r2, #0
   3cd50:	ldr	r7, [r4]
   3cd54:	cmp	r7, #1
   3cd58:	blt	3cd8c <GetDataSlab+0x1a950>
   3cd5c:	mov	r7, #0
   3cd60:	mov	r6, #0
   3cd64:	ldr	r5, [lr]
   3cd68:	mul	r5, r5, r6
   3cd6c:	ldr	r5, [r0, r5, lsl #3]
   3cd70:	str	r5, [ip, r6, lsl #2]
   3cd74:	add	r7, r7, #4
   3cd78:	add	r6, r6, #1
   3cd7c:	ldr	r5, [r4]
   3cd80:	cmp	r6, r5
   3cd84:	blt	3cd64 <GetDataSlab+0x1a928>
   3cd88:	add	ip, ip, r7
   3cd8c:	ldr	r7, [sl]
   3cd90:	ldr	r6, [r8]
   3cd94:	mul	r7, r6, r7
   3cd98:	add	r0, r0, r7, lsl #3
   3cd9c:	add	r2, r2, #1
   3cda0:	ldr	r7, [r3]
   3cda4:	cmp	r2, r7
   3cda8:	blt	3cd50 <GetDataSlab+0x1a914>
   3cdac:	mov	r0, #0
   3cdb0:	ldr	r2, [sp, #52]	; 0x34
   3cdb4:	cmp	r2, #13
   3cdb8:	bne	22560 <GetDataSlab+0x124>
   3cdbc:	ldr	r0, [r3]
   3cdc0:	cmp	r0, #1
   3cdc4:	blt	240b8 <GetDataSlab+0x1c7c>
   3cdc8:	ldm	r9, {r0, r2}
   3cdcc:	ldr	r7, [r8]
   3cdd0:	mla	r0, r7, r2, r0
   3cdd4:	ldr	r2, [sp, #48]	; 0x30
   3cdd8:	add	r2, r2, r0, lsl #3
   3cddc:	mov	r6, #0
   3cde0:	ldr	r0, [r4]
   3cde4:	cmp	r0, #1
   3cde8:	blt	3ce1c <GetDataSlab+0x1a9e0>
   3cdec:	mov	r0, #0
   3cdf0:	mov	r7, #0
   3cdf4:	ldr	r5, [lr]
   3cdf8:	mul	r5, r5, r7
   3cdfc:	ldr	r5, [r2, r5, lsl #3]
   3ce00:	str	r5, [ip, r7, lsl #2]
   3ce04:	add	r0, r0, #4
   3ce08:	add	r7, r7, #1
   3ce0c:	ldr	r5, [r4]
   3ce10:	cmp	r7, r5
   3ce14:	blt	3cdf4 <GetDataSlab+0x1a9b8>
   3ce18:	add	ip, ip, r0
   3ce1c:	ldr	r0, [sl]
   3ce20:	ldr	r7, [r8]
   3ce24:	mul	r0, r7, r0
   3ce28:	add	r2, r2, r0, lsl #3
   3ce2c:	add	r6, r6, #1
   3ce30:	ldr	r7, [r3]
   3ce34:	mov	r0, #0
   3ce38:	cmp	r6, r7
   3ce3c:	blt	3cde0 <GetDataSlab+0x1a9a4>
   3ce40:	b	22560 <GetDataSlab+0x124>
   3ce44:	ldr	r0, [r3]
   3ce48:	cmp	r0, #1
   3ce4c:	blt	240b8 <GetDataSlab+0x1c7c>
   3ce50:	ldr	r0, [sp, #32]
   3ce54:	ldr	r2, [sp, #28]
   3ce58:	mla	r0, r2, r6, r0
   3ce5c:	add	r2, r5, r0
   3ce60:	mov	r6, #0
   3ce64:	ldr	r0, [r4]
   3ce68:	cmp	r0, #1
   3ce6c:	blt	3cea0 <GetDataSlab+0x1aa64>
   3ce70:	mov	r0, #0
   3ce74:	mov	r7, #0
   3ce78:	ldr	r5, [lr]
   3ce7c:	mul	r5, r5, r7
   3ce80:	ldrb	r5, [r2, r5]
   3ce84:	str	r5, [ip, r7, lsl #2]
   3ce88:	add	r0, r0, #4
   3ce8c:	add	r7, r7, #1
   3ce90:	ldr	r5, [r4]
   3ce94:	cmp	r7, r5
   3ce98:	blt	3ce78 <GetDataSlab+0x1aa3c>
   3ce9c:	add	ip, ip, r0
   3cea0:	ldr	r0, [sl]
   3cea4:	ldr	r7, [r8]
   3cea8:	mla	r2, r7, r0, r2
   3ceac:	add	r6, r6, #1
   3ceb0:	ldr	r7, [r3]
   3ceb4:	mov	r0, #0
   3ceb8:	cmp	r6, r7
   3cebc:	blt	3ce64 <GetDataSlab+0x1aa28>
   3cec0:	b	22560 <GetDataSlab+0x124>
   3cec4:	ldr	r0, [r3]
   3cec8:	cmp	r0, #1
   3cecc:	blt	240b8 <GetDataSlab+0x1c7c>
   3ced0:	ldr	r0, [sp, #32]
   3ced4:	ldr	r2, [sp, #28]
   3ced8:	mla	r0, r2, r6, r0
   3cedc:	add	r2, r5, r0, lsl #1
   3cee0:	mov	r6, #0
   3cee4:	ldr	r0, [r4]
   3cee8:	cmp	r0, #1
   3ceec:	blt	3cf24 <GetDataSlab+0x1aae8>
   3cef0:	mov	r0, #0
   3cef4:	mov	r7, #0
   3cef8:	ldr	r5, [lr]
   3cefc:	mul	r5, r5, r7
   3cf00:	add	r5, r2, r5, lsl #1
   3cf04:	ldrsh	r5, [r5]
   3cf08:	str	r5, [ip, r7, lsl #2]
   3cf0c:	add	r0, r0, #4
   3cf10:	add	r7, r7, #1
   3cf14:	ldr	r5, [r4]
   3cf18:	cmp	r7, r5
   3cf1c:	blt	3cef8 <GetDataSlab+0x1aabc>
   3cf20:	add	ip, ip, r0
   3cf24:	ldr	r0, [sl]
   3cf28:	ldr	r7, [r8]
   3cf2c:	mul	r0, r7, r0
   3cf30:	add	r2, r2, r0, lsl #1
   3cf34:	add	r6, r6, #1
   3cf38:	ldr	r7, [r3]
   3cf3c:	mov	r0, #0
   3cf40:	cmp	r6, r7
   3cf44:	blt	3cee4 <GetDataSlab+0x1aaa8>
   3cf48:	b	22560 <GetDataSlab+0x124>
   3cf4c:	ldr	r0, [r3]
   3cf50:	cmp	r0, #1
   3cf54:	blt	240b8 <GetDataSlab+0x1c7c>
   3cf58:	ldr	r0, [sp, #32]
   3cf5c:	ldr	r2, [sp, #28]
   3cf60:	mla	r0, r2, r6, r0
   3cf64:	add	r2, r5, r0, lsl #1
   3cf68:	mov	r6, #0
   3cf6c:	ldr	r0, [r4]
   3cf70:	cmp	r0, #1
   3cf74:	blt	3cfac <GetDataSlab+0x1ab70>
   3cf78:	mov	r0, #0
   3cf7c:	mov	r7, #0
   3cf80:	ldr	r5, [lr]
   3cf84:	mul	r5, r5, r7
   3cf88:	add	r5, r2, r5, lsl #1
   3cf8c:	ldrh	r5, [r5]
   3cf90:	str	r5, [ip, r7, lsl #2]
   3cf94:	add	r0, r0, #4
   3cf98:	add	r7, r7, #1
   3cf9c:	ldr	r5, [r4]
   3cfa0:	cmp	r7, r5
   3cfa4:	blt	3cf80 <GetDataSlab+0x1ab44>
   3cfa8:	add	ip, ip, r0
   3cfac:	ldr	r0, [sl]
   3cfb0:	ldr	r7, [r8]
   3cfb4:	mul	r0, r7, r0
   3cfb8:	add	r2, r2, r0, lsl #1
   3cfbc:	add	r6, r6, #1
   3cfc0:	ldr	r7, [r3]
   3cfc4:	mov	r0, #0
   3cfc8:	cmp	r6, r7
   3cfcc:	blt	3cf6c <GetDataSlab+0x1ab30>
   3cfd0:	b	22560 <GetDataSlab+0x124>
   3cfd4:	ldr	r0, [r3]
   3cfd8:	cmp	r0, #1
   3cfdc:	blt	240b8 <GetDataSlab+0x1c7c>
   3cfe0:	ldr	r0, [sp, #32]
   3cfe4:	ldr	r2, [sp, #28]
   3cfe8:	mla	r0, r2, r6, r0
   3cfec:	add	r2, r5, r0, lsl #2
   3cff0:	mov	r6, #0
   3cff4:	ldr	r0, [r4]
   3cff8:	cmp	r0, #1
   3cffc:	blt	3d030 <GetDataSlab+0x1abf4>
   3d000:	mov	r0, #0
   3d004:	mov	r7, #0
   3d008:	ldr	r5, [lr]
   3d00c:	mul	r5, r5, r7
   3d010:	ldr	r5, [r2, r5, lsl #2]
   3d014:	str	r5, [ip, r7, lsl #2]
   3d018:	add	r0, r0, #4
   3d01c:	add	r7, r7, #1
   3d020:	ldr	r5, [r4]
   3d024:	cmp	r7, r5
   3d028:	blt	3d008 <GetDataSlab+0x1abcc>
   3d02c:	add	ip, ip, r0
   3d030:	ldr	r0, [sl]
   3d034:	ldr	r7, [r8]
   3d038:	mul	r0, r7, r0
   3d03c:	add	r2, r2, r0, lsl #2
   3d040:	add	r6, r6, #1
   3d044:	ldr	r7, [r3]
   3d048:	mov	r0, #0
   3d04c:	cmp	r6, r7
   3d050:	blt	3cff4 <GetDataSlab+0x1abb8>
   3d054:	b	22560 <GetDataSlab+0x124>
   3d058:	ldr	r0, [r3]
   3d05c:	cmp	r0, #1
   3d060:	blt	240b8 <GetDataSlab+0x1c7c>
   3d064:	ldr	r0, [sp, #32]
   3d068:	ldr	r2, [sp, #28]
   3d06c:	mla	r0, r2, r6, r0
   3d070:	add	r2, r5, r0, lsl #2
   3d074:	mov	r6, #0
   3d078:	ldr	r0, [r4]
   3d07c:	cmp	r0, #1
   3d080:	blt	3d0b4 <GetDataSlab+0x1ac78>
   3d084:	mov	r0, #0
   3d088:	mov	r7, #0
   3d08c:	ldr	r5, [lr]
   3d090:	mul	r5, r5, r7
   3d094:	ldr	r5, [r2, r5, lsl #2]
   3d098:	str	r5, [ip, r7, lsl #2]
   3d09c:	add	r0, r0, #4
   3d0a0:	add	r7, r7, #1
   3d0a4:	ldr	r5, [r4]
   3d0a8:	cmp	r7, r5
   3d0ac:	blt	3d08c <GetDataSlab+0x1ac50>
   3d0b0:	add	ip, ip, r0
   3d0b4:	ldr	r0, [sl]
   3d0b8:	ldr	r7, [r8]
   3d0bc:	mul	r0, r7, r0
   3d0c0:	add	r2, r2, r0, lsl #2
   3d0c4:	add	r6, r6, #1
   3d0c8:	ldr	r7, [r3]
   3d0cc:	mov	r0, #0
   3d0d0:	cmp	r6, r7
   3d0d4:	blt	3d078 <GetDataSlab+0x1ac3c>
   3d0d8:	b	22560 <GetDataSlab+0x124>
   3d0dc:	ldr	r0, [r3]
   3d0e0:	cmp	r0, #1
   3d0e4:	blt	240b8 <GetDataSlab+0x1c7c>
   3d0e8:	ldr	r0, [sp, #32]
   3d0ec:	ldr	r2, [sp, #28]
   3d0f0:	mla	r0, r2, r6, r0
   3d0f4:	add	r2, r5, r0, lsl #2
   3d0f8:	mov	r6, #0
   3d0fc:	ldr	r0, [r4]
   3d100:	cmp	r0, #1
   3d104:	blt	3d144 <GetDataSlab+0x1ad08>
   3d108:	mov	r0, #0
   3d10c:	mov	r7, #0
   3d110:	ldr	r5, [lr]
   3d114:	mul	r5, r5, r7
   3d118:	add	r5, r2, r5, lsl #2
   3d11c:	vldr	s0, [r5]
   3d120:	vcvt.u32.f32	s0, s0
   3d124:	vmov	r5, s0
   3d128:	str	r5, [ip, r7, lsl #2]
   3d12c:	add	r0, r0, #4
   3d130:	add	r7, r7, #1
   3d134:	ldr	r5, [r4]
   3d138:	cmp	r7, r5
   3d13c:	blt	3d110 <GetDataSlab+0x1acd4>
   3d140:	add	ip, ip, r0
   3d144:	ldr	r0, [sl]
   3d148:	ldr	r7, [r8]
   3d14c:	mul	r0, r7, r0
   3d150:	add	r2, r2, r0, lsl #2
   3d154:	add	r6, r6, #1
   3d158:	ldr	r7, [r3]
   3d15c:	mov	r0, #0
   3d160:	cmp	r6, r7
   3d164:	blt	3d0fc <GetDataSlab+0x1acc0>
   3d168:	b	22560 <GetDataSlab+0x124>
   3d16c:	ldr	r0, [r3]
   3d170:	cmp	r0, #1
   3d174:	blt	240b8 <GetDataSlab+0x1c7c>
   3d178:	ldr	r0, [sp, #32]
   3d17c:	ldr	r2, [sp, #28]
   3d180:	mla	r0, r2, r6, r0
   3d184:	add	r2, r5, r0, lsl #3
   3d188:	mov	r6, #0
   3d18c:	ldr	r0, [r4]
   3d190:	cmp	r0, #1
   3d194:	blt	3d1d4 <GetDataSlab+0x1ad98>
   3d198:	mov	r0, #0
   3d19c:	mov	r7, #0
   3d1a0:	ldr	r5, [lr]
   3d1a4:	mul	r5, r5, r7
   3d1a8:	add	r5, r2, r5, lsl #3
   3d1ac:	vldr	d16, [r5]
   3d1b0:	vcvt.u32.f64	s0, d16
   3d1b4:	vmov	r5, s0
   3d1b8:	str	r5, [ip, r7, lsl #2]
   3d1bc:	add	r0, r0, #4
   3d1c0:	add	r7, r7, #1
   3d1c4:	ldr	r5, [r4]
   3d1c8:	cmp	r7, r5
   3d1cc:	blt	3d1a0 <GetDataSlab+0x1ad64>
   3d1d0:	add	ip, ip, r0
   3d1d4:	ldr	r0, [sl]
   3d1d8:	ldr	r7, [r8]
   3d1dc:	mul	r0, r7, r0
   3d1e0:	add	r2, r2, r0, lsl #3
   3d1e4:	add	r6, r6, #1
   3d1e8:	ldr	r7, [r3]
   3d1ec:	mov	r0, #0
   3d1f0:	cmp	r6, r7
   3d1f4:	blt	3d18c <GetDataSlab+0x1ad50>
   3d1f8:	b	22560 <GetDataSlab+0x124>
   3d1fc:	ldr	r0, [r3]
   3d200:	cmp	r0, #1
   3d204:	blt	240b8 <GetDataSlab+0x1c7c>
   3d208:	ldr	r0, [sp, #32]
   3d20c:	ldr	r2, [sp, #28]
   3d210:	mla	r0, r2, r6, r0
   3d214:	add	r0, r5, r0, lsl #3
   3d218:	mov	r2, #0
   3d21c:	ldr	r7, [r4]
   3d220:	cmp	r7, #1
   3d224:	blt	3d258 <GetDataSlab+0x1ae1c>
   3d228:	mov	r7, #0
   3d22c:	mov	r6, #0
   3d230:	ldr	r5, [lr]
   3d234:	mul	r5, r5, r6
   3d238:	ldr	r5, [r0, r5, lsl #3]
   3d23c:	str	r5, [ip, r6, lsl #2]
   3d240:	add	r7, r7, #4
   3d244:	add	r6, r6, #1
   3d248:	ldr	r5, [r4]
   3d24c:	cmp	r6, r5
   3d250:	blt	3d230 <GetDataSlab+0x1adf4>
   3d254:	add	ip, ip, r7
   3d258:	ldr	r7, [sl]
   3d25c:	ldr	r6, [r8]
   3d260:	mul	r7, r6, r7
   3d264:	add	r0, r0, r7, lsl #3
   3d268:	add	r2, r2, #1
   3d26c:	ldr	r7, [r3]
   3d270:	cmp	r2, r7
   3d274:	blt	3d21c <GetDataSlab+0x1ade0>
   3d278:	mov	r0, #0
   3d27c:	ldr	r2, [sp, #52]	; 0x34
   3d280:	cmp	r2, #13
   3d284:	bne	22560 <GetDataSlab+0x124>
   3d288:	ldr	r0, [r3]
   3d28c:	cmp	r0, #1
   3d290:	blt	240b8 <GetDataSlab+0x1c7c>
   3d294:	ldm	r9, {r0, r2}
   3d298:	ldr	r7, [r8]
   3d29c:	mla	r0, r7, r2, r0
   3d2a0:	ldr	r2, [sp, #48]	; 0x30
   3d2a4:	add	r2, r2, r0, lsl #3
   3d2a8:	mov	r6, #0
   3d2ac:	ldr	r0, [r4]
   3d2b0:	cmp	r0, #1
   3d2b4:	blt	3d2e8 <GetDataSlab+0x1aeac>
   3d2b8:	mov	r0, #0
   3d2bc:	mov	r7, #0
   3d2c0:	ldr	r5, [lr]
   3d2c4:	mul	r5, r5, r7
   3d2c8:	ldr	r5, [r2, r5, lsl #3]
   3d2cc:	str	r5, [ip, r7, lsl #2]
   3d2d0:	add	r0, r0, #4
   3d2d4:	add	r7, r7, #1
   3d2d8:	ldr	r5, [r4]
   3d2dc:	cmp	r7, r5
   3d2e0:	blt	3d2c0 <GetDataSlab+0x1ae84>
   3d2e4:	add	ip, ip, r0
   3d2e8:	ldr	r0, [sl]
   3d2ec:	ldr	r7, [r8]
   3d2f0:	mul	r0, r7, r0
   3d2f4:	add	r2, r2, r0, lsl #3
   3d2f8:	add	r6, r6, #1
   3d2fc:	ldr	r7, [r3]
   3d300:	mov	r0, #0
   3d304:	cmp	r6, r7
   3d308:	blt	3d2ac <GetDataSlab+0x1ae70>
   3d30c:	b	22560 <GetDataSlab+0x124>
   3d310:	ldr	r0, [sp, #56]	; 0x38
   3d314:	cmp	r0, #1
   3d318:	blt	240b8 <GetDataSlab+0x1c7c>
   3d31c:	ldr	r0, [sp, #32]
   3d320:	ldr	r1, [sp, #28]
   3d324:	mla	r0, r1, r6, r0
   3d328:	add	r1, r3, r0
   3d32c:	ldr	r0, [sp, #36]	; 0x24
   3d330:	mul	lr, r0, r6
   3d334:	mov	r3, #0
   3d338:	mov	r7, #0
   3d33c:	ldr	r8, [sp, #60]	; 0x3c
   3d340:	cmp	r8, #1
   3d344:	blt	3d378 <GetDataSlab+0x1af3c>
   3d348:	mov	r0, #0
   3d34c:	mov	r6, r8
   3d350:	mov	r5, ip
   3d354:	ldr	r2, [sp, #44]	; 0x2c
   3d358:	ldrb	r4, [r1, r0]
   3d35c:	str	r4, [r5]
   3d360:	str	r3, [r5, #4]
   3d364:	add	r0, r0, r2
   3d368:	subs	r6, r6, #1
   3d36c:	add	r5, r5, #8
   3d370:	bne	3d358 <GetDataSlab+0x1af1c>
   3d374:	add	ip, ip, r8, lsl #3
   3d378:	add	r1, r1, lr
   3d37c:	add	r7, r7, #1
   3d380:	mov	r0, #0
   3d384:	ldr	r2, [sp, #56]	; 0x38
   3d388:	cmp	r7, r2
   3d38c:	bne	3d340 <GetDataSlab+0x1af04>
   3d390:	b	22560 <GetDataSlab+0x124>
   3d394:	ldr	r0, [sp, #56]	; 0x38
   3d398:	cmp	r0, #1
   3d39c:	blt	240b8 <GetDataSlab+0x1c7c>
   3d3a0:	ldr	r0, [sp, #32]
   3d3a4:	ldr	r1, [sp, #28]
   3d3a8:	mla	r0, r1, r6, r0
   3d3ac:	add	r1, r3, r0, lsl #1
   3d3b0:	ldr	r0, [sp, #36]	; 0x24
   3d3b4:	mul	r0, r0, r6
   3d3b8:	lsl	lr, r0, #1
   3d3bc:	ldr	r0, [sp, #44]	; 0x2c
   3d3c0:	lsl	r3, r0, #1
   3d3c4:	mov	r7, #0
   3d3c8:	ldr	r2, [sp, #60]	; 0x3c
   3d3cc:	cmp	r2, #1
   3d3d0:	blt	3d400 <GetDataSlab+0x1afc4>
   3d3d4:	mov	r0, #0
   3d3d8:	mov	r6, r2
   3d3dc:	mov	r5, ip
   3d3e0:	ldrsh	r4, [r1, -r0]
   3d3e4:	asr	r9, r4, #31
   3d3e8:	stm	r5, {r4, r9}
   3d3ec:	sub	r0, r0, r3
   3d3f0:	subs	r6, r6, #1
   3d3f4:	add	r5, r5, #8
   3d3f8:	bne	3d3e0 <GetDataSlab+0x1afa4>
   3d3fc:	add	ip, ip, r2, lsl #3
   3d400:	add	r1, r1, lr
   3d404:	add	r7, r7, #1
   3d408:	mov	r0, #0
   3d40c:	ldr	r2, [sp, #56]	; 0x38
   3d410:	cmp	r7, r2
   3d414:	bne	3d3c8 <GetDataSlab+0x1af8c>
   3d418:	b	22560 <GetDataSlab+0x124>
   3d41c:	ldr	r0, [sp, #56]	; 0x38
   3d420:	cmp	r0, #1
   3d424:	blt	240b8 <GetDataSlab+0x1c7c>
   3d428:	ldr	r0, [sp, #32]
   3d42c:	ldr	r1, [sp, #28]
   3d430:	mla	r0, r1, r6, r0
   3d434:	add	r1, r3, r0, lsl #1
   3d438:	ldr	r0, [sp, #36]	; 0x24
   3d43c:	mul	r0, r0, r6
   3d440:	lsl	r2, r0, #1
   3d444:	ldr	r0, [sp, #44]	; 0x2c
   3d448:	lsl	r3, r0, #1
   3d44c:	mov	r5, #0
   3d450:	mov	r7, #0
   3d454:	ldr	r6, [sp, #60]	; 0x3c
   3d458:	cmp	r6, #1
   3d45c:	blt	3d48c <GetDataSlab+0x1b050>
   3d460:	mov	r0, #0
   3d464:	mov	r4, ip
   3d468:	ldrh	r8, [r1, -r0]
   3d46c:	str	r8, [r4]
   3d470:	str	r5, [r4, #4]
   3d474:	sub	r0, r0, r3
   3d478:	subs	r6, r6, #1
   3d47c:	add	r4, r4, #8
   3d480:	bne	3d468 <GetDataSlab+0x1b02c>
   3d484:	ldr	r0, [sp, #60]	; 0x3c
   3d488:	add	ip, ip, r0, lsl #3
   3d48c:	add	r1, r1, r2
   3d490:	add	r7, r7, #1
   3d494:	mov	r0, #0
   3d498:	ldr	r6, [sp, #56]	; 0x38
   3d49c:	cmp	r7, r6
   3d4a0:	bne	3d454 <GetDataSlab+0x1b018>
   3d4a4:	b	22560 <GetDataSlab+0x124>
   3d4a8:	ldr	r0, [sp, #56]	; 0x38
   3d4ac:	cmp	r0, #1
   3d4b0:	blt	240b8 <GetDataSlab+0x1c7c>
   3d4b4:	ldr	r0, [sp, #32]
   3d4b8:	ldr	r1, [sp, #28]
   3d4bc:	mla	r0, r1, r6, r0
   3d4c0:	add	r1, r3, r0, lsl #2
   3d4c4:	ldr	r0, [sp, #36]	; 0x24
   3d4c8:	mul	r0, r0, r6
   3d4cc:	lsl	lr, r0, #2
   3d4d0:	ldr	r0, [sp, #44]	; 0x2c
   3d4d4:	lsl	r3, r0, #2
   3d4d8:	mov	r7, #0
   3d4dc:	ldr	r2, [sp, #60]	; 0x3c
   3d4e0:	cmp	r2, #1
   3d4e4:	blt	3d514 <GetDataSlab+0x1b0d8>
   3d4e8:	mov	r0, #0
   3d4ec:	mov	r6, r2
   3d4f0:	mov	r5, ip
   3d4f4:	ldr	r4, [r1, -r0]
   3d4f8:	asr	r9, r4, #31
   3d4fc:	stm	r5, {r4, r9}
   3d500:	sub	r0, r0, r3
   3d504:	subs	r6, r6, #1
   3d508:	add	r5, r5, #8
   3d50c:	bne	3d4f4 <GetDataSlab+0x1b0b8>
   3d510:	add	ip, ip, r2, lsl #3
   3d514:	add	r1, r1, lr
   3d518:	add	r7, r7, #1
   3d51c:	mov	r0, #0
   3d520:	ldr	r2, [sp, #56]	; 0x38
   3d524:	cmp	r7, r2
   3d528:	bne	3d4dc <GetDataSlab+0x1b0a0>
   3d52c:	b	22560 <GetDataSlab+0x124>
   3d530:	ldr	r0, [sp, #56]	; 0x38
   3d534:	cmp	r0, #1
   3d538:	blt	240b8 <GetDataSlab+0x1c7c>
   3d53c:	ldr	r0, [sp, #32]
   3d540:	ldr	r1, [sp, #28]
   3d544:	mla	r0, r1, r6, r0
   3d548:	add	r1, r3, r0, lsl #2
   3d54c:	ldr	r0, [sp, #36]	; 0x24
   3d550:	mul	r0, r0, r6
   3d554:	lsl	r2, r0, #2
   3d558:	ldr	r0, [sp, #44]	; 0x2c
   3d55c:	lsl	r3, r0, #2
   3d560:	mov	r5, #0
   3d564:	mov	r7, #0
   3d568:	ldr	r6, [sp, #60]	; 0x3c
   3d56c:	cmp	r6, #1
   3d570:	blt	3d5a0 <GetDataSlab+0x1b164>
   3d574:	mov	r0, #0
   3d578:	mov	r4, ip
   3d57c:	ldr	r8, [r1, -r0]
   3d580:	str	r8, [r4]
   3d584:	str	r5, [r4, #4]
   3d588:	sub	r0, r0, r3
   3d58c:	subs	r6, r6, #1
   3d590:	add	r4, r4, #8
   3d594:	bne	3d57c <GetDataSlab+0x1b140>
   3d598:	ldr	r0, [sp, #60]	; 0x3c
   3d59c:	add	ip, ip, r0, lsl #3
   3d5a0:	add	r1, r1, r2
   3d5a4:	add	r7, r7, #1
   3d5a8:	mov	r0, #0
   3d5ac:	ldr	r6, [sp, #56]	; 0x38
   3d5b0:	cmp	r7, r6
   3d5b4:	bne	3d568 <GetDataSlab+0x1b12c>
   3d5b8:	b	22560 <GetDataSlab+0x124>
   3d5bc:	ldr	r0, [sp, #56]	; 0x38
   3d5c0:	cmp	r0, #1
   3d5c4:	blt	240b8 <GetDataSlab+0x1c7c>
   3d5c8:	ldr	r0, [sp, #32]
   3d5cc:	ldr	r1, [sp, #28]
   3d5d0:	mla	r0, r1, r6, r0
   3d5d4:	add	r9, r3, r0, lsl #2
   3d5d8:	ldr	r0, [sp, #36]	; 0x24
   3d5dc:	mul	r0, r0, r6
   3d5e0:	lsl	r0, r0, #2
   3d5e4:	str	r0, [sp, #52]	; 0x34
   3d5e8:	ldr	r0, [sp, #44]	; 0x2c
   3d5ec:	lsl	r6, r0, #2
   3d5f0:	mov	sl, #0
   3d5f4:	ldr	r5, [sp, #60]	; 0x3c
   3d5f8:	cmp	r5, #1
   3d5fc:	blt	3d630 <GetDataSlab+0x1b1f4>
   3d600:	mov	r4, r9
   3d604:	mov	r8, ip
   3d608:	mov	r7, ip
   3d60c:	ldr	r0, [r4], r6
   3d610:	bl	48e10 <__aeabi_f2lz>
   3d614:	strd	r0, [r7]
   3d618:	subs	r5, r5, #1
   3d61c:	add	r7, r7, #8
   3d620:	bne	3d60c <GetDataSlab+0x1b1d0>
   3d624:	mov	ip, r8
   3d628:	ldr	r0, [sp, #60]	; 0x3c
   3d62c:	add	ip, r8, r0, lsl #3
   3d630:	ldr	r0, [sp, #52]	; 0x34
   3d634:	add	r9, r9, r0
   3d638:	add	sl, sl, #1
   3d63c:	mov	r0, #0
   3d640:	ldr	r1, [sp, #56]	; 0x38
   3d644:	cmp	sl, r1
   3d648:	bne	3d5f4 <GetDataSlab+0x1b1b8>
   3d64c:	b	22560 <GetDataSlab+0x124>
   3d650:	ldr	r0, [sp, #56]	; 0x38
   3d654:	cmp	r0, #1
   3d658:	blt	240b8 <GetDataSlab+0x1c7c>
   3d65c:	ldr	r0, [sp, #32]
   3d660:	ldr	r1, [sp, #28]
   3d664:	mla	r0, r1, r6, r0
   3d668:	add	r9, r3, r0, lsl #3
   3d66c:	ldr	r0, [sp, #36]	; 0x24
   3d670:	mul	r0, r0, r6
   3d674:	lsl	r0, r0, #3
   3d678:	str	r0, [sp, #52]	; 0x34
   3d67c:	ldr	r0, [sp, #44]	; 0x2c
   3d680:	lsl	r6, r0, #3
   3d684:	mov	sl, #0
   3d688:	ldr	r5, [sp, #60]	; 0x3c
   3d68c:	cmp	r5, #1
   3d690:	blt	3d6cc <GetDataSlab+0x1b290>
   3d694:	mov	r4, r9
   3d698:	mov	r8, ip
   3d69c:	mov	r7, ip
   3d6a0:	vldr	d16, [r4]
   3d6a4:	vmov	r0, r1, d16
   3d6a8:	bl	48e3c <__aeabi_d2lz>
   3d6ac:	strd	r0, [r7]
   3d6b0:	add	r4, r4, r6
   3d6b4:	subs	r5, r5, #1
   3d6b8:	add	r7, r7, #8
   3d6bc:	bne	3d6a0 <GetDataSlab+0x1b264>
   3d6c0:	mov	ip, r8
   3d6c4:	ldr	r0, [sp, #60]	; 0x3c
   3d6c8:	add	ip, r8, r0, lsl #3
   3d6cc:	ldr	r0, [sp, #52]	; 0x34
   3d6d0:	add	r9, r9, r0
   3d6d4:	add	sl, sl, #1
   3d6d8:	mov	r0, #0
   3d6dc:	ldr	r1, [sp, #56]	; 0x38
   3d6e0:	cmp	sl, r1
   3d6e4:	bne	3d688 <GetDataSlab+0x1b24c>
   3d6e8:	b	22560 <GetDataSlab+0x124>
   3d6ec:	ldr	r0, [sp, #56]	; 0x38
   3d6f0:	cmp	r0, #1
   3d6f4:	blt	240b8 <GetDataSlab+0x1c7c>
   3d6f8:	ldr	r0, [sp, #32]
   3d6fc:	ldr	r1, [sp, #28]
   3d700:	mla	r0, r1, r6, r0
   3d704:	add	r4, r3, r0, lsl #3
   3d708:	ldr	r0, [sp, #36]	; 0x24
   3d70c:	mul	r1, r0, r6
   3d710:	lsl	r1, r1, #3
   3d714:	ldr	r0, [sp, #44]	; 0x2c
   3d718:	lsl	r2, r0, #3
   3d71c:	mov	r3, #0
   3d720:	ldr	r6, [sp, #60]	; 0x3c
   3d724:	cmp	r6, #1
   3d728:	blt	3d75c <GetDataSlab+0x1b320>
   3d72c:	mov	r7, #0
   3d730:	mov	r5, ip
   3d734:	mov	r0, r4
   3d738:	ldr	r8, [r0, -r7]!
   3d73c:	ldr	r9, [r0, #4]
   3d740:	strd	r8, [r5]
   3d744:	sub	r7, r7, r2
   3d748:	subs	r6, r6, #1
   3d74c:	add	r5, r5, #8
   3d750:	bne	3d734 <GetDataSlab+0x1b2f8>
   3d754:	ldr	r6, [sp, #60]	; 0x3c
   3d758:	add	ip, ip, r6, lsl #3
   3d75c:	add	r4, r4, r1
   3d760:	add	r3, r3, #1
   3d764:	ldr	r0, [sp, #56]	; 0x38
   3d768:	cmp	r3, r0
   3d76c:	bne	3d724 <GetDataSlab+0x1b2e8>
   3d770:	mov	r0, #0
   3d774:	ldr	r6, [sp, #40]	; 0x28
   3d778:	cmp	lr, #13
   3d77c:	bne	22560 <GetDataSlab+0x124>
   3d780:	ldr	r0, [sp, #56]	; 0x38
   3d784:	cmp	r0, #1
   3d788:	blt	240b8 <GetDataSlab+0x1c7c>
   3d78c:	ldr	r0, [sp, #32]
   3d790:	ldr	r1, [sp, #28]
   3d794:	mla	r0, r1, r6, r0
   3d798:	ldr	r1, [sp, #48]	; 0x30
   3d79c:	add	r4, r1, r0, lsl #3
   3d7a0:	ldr	r0, [sp, #36]	; 0x24
   3d7a4:	mul	r0, r0, r6
   3d7a8:	lsl	r2, r0, #3
   3d7ac:	ldr	r0, [sp, #44]	; 0x2c
   3d7b0:	lsl	r3, r0, #3
   3d7b4:	mov	r7, #0
   3d7b8:	ldr	r6, [sp, #60]	; 0x3c
   3d7bc:	cmp	r6, #1
   3d7c0:	blt	3d7f4 <GetDataSlab+0x1b3b8>
   3d7c4:	mov	r0, #0
   3d7c8:	mov	r5, ip
   3d7cc:	mov	r1, r4
   3d7d0:	ldr	r8, [r1, -r0]!
   3d7d4:	ldr	r9, [r1, #4]
   3d7d8:	strd	r8, [r5]
   3d7dc:	sub	r0, r0, r3
   3d7e0:	subs	r6, r6, #1
   3d7e4:	add	r5, r5, #8
   3d7e8:	bne	3d7cc <GetDataSlab+0x1b390>
   3d7ec:	ldr	r0, [sp, #60]	; 0x3c
   3d7f0:	add	ip, ip, r0, lsl #3
   3d7f4:	add	r4, r4, r2
   3d7f8:	add	r7, r7, #1
   3d7fc:	mov	r0, #0
   3d800:	ldr	r1, [sp, #56]	; 0x38
   3d804:	cmp	r7, r1
   3d808:	bne	3d7b8 <GetDataSlab+0x1b37c>
   3d80c:	b	22560 <GetDataSlab+0x124>
   3d810:	ldr	r0, [sp, #56]	; 0x38
   3d814:	cmp	r0, #1
   3d818:	blt	240b8 <GetDataSlab+0x1c7c>
   3d81c:	ldr	r0, [sp, #32]
   3d820:	ldr	r1, [sp, #28]
   3d824:	mla	r0, r1, r6, r0
   3d828:	add	r1, r3, r0
   3d82c:	ldr	r0, [sp, #36]	; 0x24
   3d830:	mul	lr, r0, r6
   3d834:	mov	r3, #0
   3d838:	mov	r7, #0
   3d83c:	ldr	r8, [sp, #60]	; 0x3c
   3d840:	cmp	r8, #1
   3d844:	blt	3d878 <GetDataSlab+0x1b43c>
   3d848:	mov	r0, #0
   3d84c:	mov	r6, r8
   3d850:	mov	r5, ip
   3d854:	ldr	r2, [sp, #44]	; 0x2c
   3d858:	ldrb	r4, [r1, r0]
   3d85c:	str	r4, [r5]
   3d860:	str	r3, [r5, #4]
   3d864:	add	r0, r0, r2
   3d868:	subs	r6, r6, #1
   3d86c:	add	r5, r5, #8
   3d870:	bne	3d858 <GetDataSlab+0x1b41c>
   3d874:	add	ip, ip, r8, lsl #3
   3d878:	add	r1, r1, lr
   3d87c:	add	r7, r7, #1
   3d880:	mov	r0, #0
   3d884:	ldr	r2, [sp, #56]	; 0x38
   3d888:	cmp	r7, r2
   3d88c:	bne	3d840 <GetDataSlab+0x1b404>
   3d890:	b	22560 <GetDataSlab+0x124>
   3d894:	ldr	r0, [sp, #56]	; 0x38
   3d898:	cmp	r0, #1
   3d89c:	blt	240b8 <GetDataSlab+0x1c7c>
   3d8a0:	ldr	r0, [sp, #32]
   3d8a4:	ldr	r1, [sp, #28]
   3d8a8:	mla	r0, r1, r6, r0
   3d8ac:	add	r1, r3, r0, lsl #1
   3d8b0:	ldr	r0, [sp, #36]	; 0x24
   3d8b4:	mul	r0, r0, r6
   3d8b8:	lsl	lr, r0, #1
   3d8bc:	ldr	r0, [sp, #44]	; 0x2c
   3d8c0:	lsl	r3, r0, #1
   3d8c4:	mov	r7, #0
   3d8c8:	ldr	r2, [sp, #60]	; 0x3c
   3d8cc:	cmp	r2, #1
   3d8d0:	blt	3d900 <GetDataSlab+0x1b4c4>
   3d8d4:	mov	r0, #0
   3d8d8:	mov	r6, r2
   3d8dc:	mov	r5, ip
   3d8e0:	ldrsh	r4, [r1, -r0]
   3d8e4:	asr	r9, r4, #31
   3d8e8:	stm	r5, {r4, r9}
   3d8ec:	sub	r0, r0, r3
   3d8f0:	subs	r6, r6, #1
   3d8f4:	add	r5, r5, #8
   3d8f8:	bne	3d8e0 <GetDataSlab+0x1b4a4>
   3d8fc:	add	ip, ip, r2, lsl #3
   3d900:	add	r1, r1, lr
   3d904:	add	r7, r7, #1
   3d908:	mov	r0, #0
   3d90c:	ldr	r2, [sp, #56]	; 0x38
   3d910:	cmp	r7, r2
   3d914:	bne	3d8c8 <GetDataSlab+0x1b48c>
   3d918:	b	22560 <GetDataSlab+0x124>
   3d91c:	ldr	r0, [sp, #56]	; 0x38
   3d920:	cmp	r0, #1
   3d924:	blt	240b8 <GetDataSlab+0x1c7c>
   3d928:	ldr	r0, [sp, #32]
   3d92c:	ldr	r1, [sp, #28]
   3d930:	mla	r0, r1, r6, r0
   3d934:	add	r1, r3, r0, lsl #1
   3d938:	ldr	r0, [sp, #36]	; 0x24
   3d93c:	mul	r0, r0, r6
   3d940:	lsl	r2, r0, #1
   3d944:	ldr	r0, [sp, #44]	; 0x2c
   3d948:	lsl	r3, r0, #1
   3d94c:	mov	r5, #0
   3d950:	mov	r7, #0
   3d954:	ldr	r6, [sp, #60]	; 0x3c
   3d958:	cmp	r6, #1
   3d95c:	blt	3d98c <GetDataSlab+0x1b550>
   3d960:	mov	r0, #0
   3d964:	mov	r4, ip
   3d968:	ldrh	r8, [r1, -r0]
   3d96c:	str	r8, [r4]
   3d970:	str	r5, [r4, #4]
   3d974:	sub	r0, r0, r3
   3d978:	subs	r6, r6, #1
   3d97c:	add	r4, r4, #8
   3d980:	bne	3d968 <GetDataSlab+0x1b52c>
   3d984:	ldr	r0, [sp, #60]	; 0x3c
   3d988:	add	ip, ip, r0, lsl #3
   3d98c:	add	r1, r1, r2
   3d990:	add	r7, r7, #1
   3d994:	mov	r0, #0
   3d998:	ldr	r6, [sp, #56]	; 0x38
   3d99c:	cmp	r7, r6
   3d9a0:	bne	3d954 <GetDataSlab+0x1b518>
   3d9a4:	b	22560 <GetDataSlab+0x124>
   3d9a8:	ldr	r0, [sp, #56]	; 0x38
   3d9ac:	cmp	r0, #1
   3d9b0:	blt	240b8 <GetDataSlab+0x1c7c>
   3d9b4:	ldr	r0, [sp, #32]
   3d9b8:	ldr	r1, [sp, #28]
   3d9bc:	mla	r0, r1, r6, r0
   3d9c0:	add	r1, r3, r0, lsl #2
   3d9c4:	ldr	r0, [sp, #36]	; 0x24
   3d9c8:	mul	r0, r0, r6
   3d9cc:	lsl	lr, r0, #2
   3d9d0:	ldr	r0, [sp, #44]	; 0x2c
   3d9d4:	lsl	r3, r0, #2
   3d9d8:	mov	r7, #0
   3d9dc:	ldr	r2, [sp, #60]	; 0x3c
   3d9e0:	cmp	r2, #1
   3d9e4:	blt	3da14 <GetDataSlab+0x1b5d8>
   3d9e8:	mov	r0, #0
   3d9ec:	mov	r6, r2
   3d9f0:	mov	r5, ip
   3d9f4:	ldr	r4, [r1, -r0]
   3d9f8:	asr	r9, r4, #31
   3d9fc:	stm	r5, {r4, r9}
   3da00:	sub	r0, r0, r3
   3da04:	subs	r6, r6, #1
   3da08:	add	r5, r5, #8
   3da0c:	bne	3d9f4 <GetDataSlab+0x1b5b8>
   3da10:	add	ip, ip, r2, lsl #3
   3da14:	add	r1, r1, lr
   3da18:	add	r7, r7, #1
   3da1c:	mov	r0, #0
   3da20:	ldr	r2, [sp, #56]	; 0x38
   3da24:	cmp	r7, r2
   3da28:	bne	3d9dc <GetDataSlab+0x1b5a0>
   3da2c:	b	22560 <GetDataSlab+0x124>
   3da30:	ldr	r0, [sp, #56]	; 0x38
   3da34:	cmp	r0, #1
   3da38:	blt	240b8 <GetDataSlab+0x1c7c>
   3da3c:	ldr	r0, [sp, #32]
   3da40:	ldr	r1, [sp, #28]
   3da44:	mla	r0, r1, r6, r0
   3da48:	add	r1, r3, r0, lsl #2
   3da4c:	ldr	r0, [sp, #36]	; 0x24
   3da50:	mul	r0, r0, r6
   3da54:	lsl	r2, r0, #2
   3da58:	ldr	r0, [sp, #44]	; 0x2c
   3da5c:	lsl	r3, r0, #2
   3da60:	mov	r5, #0
   3da64:	mov	r7, #0
   3da68:	ldr	r6, [sp, #60]	; 0x3c
   3da6c:	cmp	r6, #1
   3da70:	blt	3daa0 <GetDataSlab+0x1b664>
   3da74:	mov	r0, #0
   3da78:	mov	r4, ip
   3da7c:	ldr	r8, [r1, -r0]
   3da80:	str	r8, [r4]
   3da84:	str	r5, [r4, #4]
   3da88:	sub	r0, r0, r3
   3da8c:	subs	r6, r6, #1
   3da90:	add	r4, r4, #8
   3da94:	bne	3da7c <GetDataSlab+0x1b640>
   3da98:	ldr	r0, [sp, #60]	; 0x3c
   3da9c:	add	ip, ip, r0, lsl #3
   3daa0:	add	r1, r1, r2
   3daa4:	add	r7, r7, #1
   3daa8:	mov	r0, #0
   3daac:	ldr	r6, [sp, #56]	; 0x38
   3dab0:	cmp	r7, r6
   3dab4:	bne	3da68 <GetDataSlab+0x1b62c>
   3dab8:	b	22560 <GetDataSlab+0x124>
   3dabc:	ldr	r0, [sp, #56]	; 0x38
   3dac0:	cmp	r0, #1
   3dac4:	blt	240b8 <GetDataSlab+0x1c7c>
   3dac8:	ldr	r0, [sp, #32]
   3dacc:	ldr	r1, [sp, #28]
   3dad0:	mla	r0, r1, r6, r0
   3dad4:	add	r9, r3, r0, lsl #2
   3dad8:	ldr	r0, [sp, #36]	; 0x24
   3dadc:	mul	r0, r0, r6
   3dae0:	lsl	r0, r0, #2
   3dae4:	str	r0, [sp, #52]	; 0x34
   3dae8:	ldr	r0, [sp, #44]	; 0x2c
   3daec:	lsl	r6, r0, #2
   3daf0:	mov	sl, #0
   3daf4:	ldr	r5, [sp, #60]	; 0x3c
   3daf8:	cmp	r5, #1
   3dafc:	blt	3db30 <GetDataSlab+0x1b6f4>
   3db00:	mov	r4, r9
   3db04:	mov	r8, ip
   3db08:	mov	r7, ip
   3db0c:	ldr	r0, [r4], r6
   3db10:	bl	48e68 <__aeabi_f2ulz>
   3db14:	strd	r0, [r7]
   3db18:	subs	r5, r5, #1
   3db1c:	add	r7, r7, #8
   3db20:	bne	3db0c <GetDataSlab+0x1b6d0>
   3db24:	mov	ip, r8
   3db28:	ldr	r0, [sp, #60]	; 0x3c
   3db2c:	add	ip, r8, r0, lsl #3
   3db30:	ldr	r0, [sp, #52]	; 0x34
   3db34:	add	r9, r9, r0
   3db38:	add	sl, sl, #1
   3db3c:	mov	r0, #0
   3db40:	ldr	r1, [sp, #56]	; 0x38
   3db44:	cmp	sl, r1
   3db48:	bne	3daf4 <GetDataSlab+0x1b6b8>
   3db4c:	b	22560 <GetDataSlab+0x124>
   3db50:	ldr	r0, [sp, #56]	; 0x38
   3db54:	cmp	r0, #1
   3db58:	blt	240b8 <GetDataSlab+0x1c7c>
   3db5c:	ldr	r0, [sp, #32]
   3db60:	ldr	r1, [sp, #28]
   3db64:	mla	r0, r1, r6, r0
   3db68:	add	r9, r3, r0, lsl #3
   3db6c:	ldr	r0, [sp, #36]	; 0x24
   3db70:	mul	r0, r0, r6
   3db74:	lsl	r0, r0, #3
   3db78:	str	r0, [sp, #52]	; 0x34
   3db7c:	ldr	r0, [sp, #44]	; 0x2c
   3db80:	lsl	r6, r0, #3
   3db84:	mov	sl, #0
   3db88:	ldr	r5, [sp, #60]	; 0x3c
   3db8c:	cmp	r5, #1
   3db90:	blt	3dbcc <GetDataSlab+0x1b790>
   3db94:	mov	r4, r9
   3db98:	mov	r8, ip
   3db9c:	mov	r7, ip
   3dba0:	vldr	d16, [r4]
   3dba4:	vmov	r0, r1, d16
   3dba8:	bl	48ea8 <__aeabi_d2ulz>
   3dbac:	strd	r0, [r7]
   3dbb0:	add	r4, r4, r6
   3dbb4:	subs	r5, r5, #1
   3dbb8:	add	r7, r7, #8
   3dbbc:	bne	3dba0 <GetDataSlab+0x1b764>
   3dbc0:	mov	ip, r8
   3dbc4:	ldr	r0, [sp, #60]	; 0x3c
   3dbc8:	add	ip, r8, r0, lsl #3
   3dbcc:	ldr	r0, [sp, #52]	; 0x34
   3dbd0:	add	r9, r9, r0
   3dbd4:	add	sl, sl, #1
   3dbd8:	mov	r0, #0
   3dbdc:	ldr	r1, [sp, #56]	; 0x38
   3dbe0:	cmp	sl, r1
   3dbe4:	bne	3db88 <GetDataSlab+0x1b74c>
   3dbe8:	b	22560 <GetDataSlab+0x124>
   3dbec:	ldr	r0, [sp, #56]	; 0x38
   3dbf0:	cmp	r0, #1
   3dbf4:	blt	240b8 <GetDataSlab+0x1c7c>
   3dbf8:	ldr	r0, [sp, #32]
   3dbfc:	ldr	r1, [sp, #28]
   3dc00:	mla	r0, r1, r6, r0
   3dc04:	add	r4, r3, r0, lsl #3
   3dc08:	ldr	r0, [sp, #36]	; 0x24
   3dc0c:	mul	r1, r0, r6
   3dc10:	lsl	r1, r1, #3
   3dc14:	ldr	r0, [sp, #44]	; 0x2c
   3dc18:	lsl	r2, r0, #3
   3dc1c:	mov	r3, #0
   3dc20:	ldr	r6, [sp, #60]	; 0x3c
   3dc24:	cmp	r6, #1
   3dc28:	blt	3dc5c <GetDataSlab+0x1b820>
   3dc2c:	mov	r7, #0
   3dc30:	mov	r5, ip
   3dc34:	mov	r0, r4
   3dc38:	ldr	r8, [r0, -r7]!
   3dc3c:	ldr	r9, [r0, #4]
   3dc40:	strd	r8, [r5]
   3dc44:	sub	r7, r7, r2
   3dc48:	subs	r6, r6, #1
   3dc4c:	add	r5, r5, #8
   3dc50:	bne	3dc34 <GetDataSlab+0x1b7f8>
   3dc54:	ldr	r6, [sp, #60]	; 0x3c
   3dc58:	add	ip, ip, r6, lsl #3
   3dc5c:	add	r4, r4, r1
   3dc60:	add	r3, r3, #1
   3dc64:	ldr	r0, [sp, #56]	; 0x38
   3dc68:	cmp	r3, r0
   3dc6c:	bne	3dc24 <GetDataSlab+0x1b7e8>
   3dc70:	mov	r0, #0
   3dc74:	ldr	r6, [sp, #40]	; 0x28
   3dc78:	cmp	lr, #13
   3dc7c:	bne	22560 <GetDataSlab+0x124>
   3dc80:	ldr	r0, [sp, #56]	; 0x38
   3dc84:	cmp	r0, #1
   3dc88:	blt	240b8 <GetDataSlab+0x1c7c>
   3dc8c:	ldr	r0, [sp, #32]
   3dc90:	ldr	r1, [sp, #28]
   3dc94:	mla	r0, r1, r6, r0
   3dc98:	ldr	r1, [sp, #48]	; 0x30
   3dc9c:	add	r4, r1, r0, lsl #3
   3dca0:	ldr	r0, [sp, #36]	; 0x24
   3dca4:	mul	r0, r0, r6
   3dca8:	lsl	r2, r0, #3
   3dcac:	ldr	r0, [sp, #44]	; 0x2c
   3dcb0:	lsl	r3, r0, #3
   3dcb4:	mov	r7, #0
   3dcb8:	ldr	r6, [sp, #60]	; 0x3c
   3dcbc:	cmp	r6, #1
   3dcc0:	blt	3dcf4 <GetDataSlab+0x1b8b8>
   3dcc4:	mov	r0, #0
   3dcc8:	mov	r5, ip
   3dccc:	mov	r1, r4
   3dcd0:	ldr	r8, [r1, -r0]!
   3dcd4:	ldr	r9, [r1, #4]
   3dcd8:	strd	r8, [r5]
   3dcdc:	sub	r0, r0, r3
   3dce0:	subs	r6, r6, #1
   3dce4:	add	r5, r5, #8
   3dce8:	bne	3dccc <GetDataSlab+0x1b890>
   3dcec:	ldr	r0, [sp, #60]	; 0x3c
   3dcf0:	add	ip, ip, r0, lsl #3
   3dcf4:	add	r4, r4, r2
   3dcf8:	add	r7, r7, #1
   3dcfc:	mov	r0, #0
   3dd00:	ldr	r1, [sp, #56]	; 0x38
   3dd04:	cmp	r7, r1
   3dd08:	bne	3dcb8 <GetDataSlab+0x1b87c>
   3dd0c:	b	22560 <GetDataSlab+0x124>
   3dd10:	ldr	lr, [sp, #48]	; 0x30
   3dd14:	cmp	r3, #13
   3dd18:	bne	22560 <GetDataSlab+0x124>
   3dd1c:	ldr	r0, [sp, #56]	; 0x38
   3dd20:	cmp	r0, #1
   3dd24:	blt	240b8 <GetDataSlab+0x1c7c>
   3dd28:	ldr	r0, [sp, #32]
   3dd2c:	ldr	r1, [sp, #28]
   3dd30:	mla	r0, r1, r6, r0
   3dd34:	add	r4, lr, r0, lsl #3
   3dd38:	ldr	r0, [sp, #36]	; 0x24
   3dd3c:	mul	r0, r0, r6
   3dd40:	lsl	r0, r0, #3
   3dd44:	str	r0, [sp, #52]	; 0x34
   3dd48:	ldr	r0, [sp, #44]	; 0x2c
   3dd4c:	lsl	sl, r0, #3
   3dd50:	mov	r9, #0
   3dd54:	ldr	r7, [sp, #60]	; 0x3c
   3dd58:	cmp	r7, #1
   3dd5c:	blt	3dd9c <GetDataSlab+0x1b960>
   3dd60:	mov	r5, #0
   3dd64:	mov	r8, ip
   3dd68:	mov	r6, ip
   3dd6c:	mov	r1, r4
   3dd70:	ldr	r0, [r1, -r5]!
   3dd74:	ldr	r1, [r1, #4]
   3dd78:	bl	48b4c <__aeabi_ul2d>
   3dd7c:	strd	r0, [r6]
   3dd80:	sub	r5, r5, sl
   3dd84:	subs	r7, r7, #1
   3dd88:	add	r6, r6, #8
   3dd8c:	bne	3dd6c <GetDataSlab+0x1b930>
   3dd90:	mov	ip, r8
   3dd94:	ldr	r0, [sp, #60]	; 0x3c
   3dd98:	add	ip, r8, r0, lsl #3
   3dd9c:	ldr	r0, [sp, #52]	; 0x34
   3dda0:	add	r4, r4, r0
   3dda4:	add	r9, r9, #1
   3dda8:	mov	r0, #0
   3ddac:	ldr	r1, [sp, #56]	; 0x38
   3ddb0:	cmp	r9, r1
   3ddb4:	bne	3dd54 <GetDataSlab+0x1b918>
   3ddb8:	b	22560 <GetDataSlab+0x124>
   3ddbc:	ldr	lr, [sp, #48]	; 0x30
   3ddc0:	cmp	r3, #13
   3ddc4:	bne	22560 <GetDataSlab+0x124>
   3ddc8:	ldr	r0, [sp, #56]	; 0x38
   3ddcc:	cmp	r0, #1
   3ddd0:	blt	240b8 <GetDataSlab+0x1c7c>
   3ddd4:	ldr	r0, [sp, #32]
   3ddd8:	ldr	r1, [sp, #28]
   3dddc:	mla	r0, r1, r6, r0
   3dde0:	add	r4, lr, r0, lsl #3
   3dde4:	ldr	r0, [sp, #36]	; 0x24
   3dde8:	mul	r0, r0, r6
   3ddec:	lsl	r0, r0, #3
   3ddf0:	str	r0, [sp, #52]	; 0x34
   3ddf4:	ldr	r0, [sp, #44]	; 0x2c
   3ddf8:	lsl	sl, r0, #3
   3ddfc:	mov	r9, #0
   3de00:	ldr	r7, [sp, #60]	; 0x3c
   3de04:	cmp	r7, #1
   3de08:	blt	3de44 <GetDataSlab+0x1ba08>
   3de0c:	mov	r5, #0
   3de10:	mov	r8, ip
   3de14:	mov	r6, ip
   3de18:	mov	r1, r4
   3de1c:	ldr	r0, [r1, -r5]!
   3de20:	ldr	r1, [r1, #4]
   3de24:	bl	48d84 <__aeabi_ul2f>
   3de28:	str	r0, [r6], #4
   3de2c:	sub	r5, r5, sl
   3de30:	subs	r7, r7, #1
   3de34:	bne	3de18 <GetDataSlab+0x1b9dc>
   3de38:	mov	ip, r8
   3de3c:	ldr	r0, [sp, #60]	; 0x3c
   3de40:	add	ip, r8, r0, lsl #2
   3de44:	ldr	r0, [sp, #52]	; 0x34
   3de48:	add	r4, r4, r0
   3de4c:	add	r9, r9, #1
   3de50:	mov	r0, #0
   3de54:	ldr	r1, [sp, #56]	; 0x38
   3de58:	cmp	r9, r1
   3de5c:	bne	3de00 <GetDataSlab+0x1b9c4>
   3de60:	b	22560 <GetDataSlab+0x124>

0003de64 <Mat_VarReadDataLinear5>:
   3de64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3de68:	add	fp, sp, #28
   3de6c:	sub	sp, sp, #84	; 0x54
   3de70:	mov	r7, r0
   3de74:	mov	r0, #1
   3de78:	str	r0, [sp, #16]
   3de7c:	ldr	r0, [r7, #16]
   3de80:	mvn	r5, #0
   3de84:	cmp	r0, #16
   3de88:	beq	3e330 <Mat_VarReadDataLinear5+0x4cc>
   3de8c:	mov	r9, r3
   3de90:	mov	r8, r2
   3de94:	mov	r4, r1
   3de98:	ldr	r0, [r7]
   3de9c:	ldr	r1, [r1, #52]	; 0x34
   3dea0:	ldr	r1, [r1]
   3dea4:	mov	r6, #0
   3dea8:	mov	r2, #0
   3deac:	bl	1a68 <fseek@plt>
   3deb0:	ldr	r0, [r4, #48]	; 0x30
   3deb4:	cmp	r0, #1
   3deb8:	beq	3df2c <Mat_VarReadDataLinear5+0xc8>
   3debc:	cmp	r0, #0
   3dec0:	bne	3e074 <Mat_VarReadDataLinear5+0x210>
   3dec4:	ldr	r3, [r7]
   3dec8:	sub	r5, fp, #36	; 0x24
   3decc:	mov	r0, r5
   3ded0:	mov	r1, #4
   3ded4:	mov	r2, #2
   3ded8:	bl	18d0 <fread@plt>
   3dedc:	ldr	r0, [r7, #20]
   3dee0:	cmp	r0, #0
   3dee4:	beq	3def8 <Mat_VarReadDataLinear5+0x94>
   3dee8:	mov	r0, r5
   3deec:	bl	1c28 <Mat_int32Swap>
   3def0:	add	r0, r5, #4
   3def4:	bl	1c28 <Mat_int32Swap>
   3def8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3defc:	uxtb	r1, r0
   3df00:	str	r1, [r4, #8]
   3df04:	cmp	r0, #65536	; 0x10000
   3df08:	bcc	3e06c <Mat_VarReadDataLinear5+0x208>
   3df0c:	ldr	r0, [r7]
   3df10:	mvn	r1, #3
   3df14:	mov	r2, #1
   3df18:	bl	1a68 <fseek@plt>
   3df1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3df20:	mov	r1, #4
   3df24:	add	r6, r1, r0, asr #16
   3df28:	b	3e074 <Mat_VarReadDataLinear5+0x210>
   3df2c:	ldr	r0, [r4, #52]	; 0x34
   3df30:	ldr	r6, [r0, #16]
   3df34:	cmp	r6, #0
   3df38:	beq	3df98 <Mat_VarReadDataLinear5+0x134>
   3df3c:	ldr	r0, [r4, #20]
   3df40:	cmp	r0, #0
   3df44:	beq	3dfcc <Mat_VarReadDataLinear5+0x168>
   3df48:	ldr	r3, [r4, #8]
   3df4c:	ldr	r2, [r4, #16]
   3df50:	ldr	r1, [r8]
   3df54:	ldr	r0, [r6]
   3df58:	str	r9, [sp]
   3df5c:	ldr	sl, [fp, #8]
   3df60:	str	sl, [sp, #4]
   3df64:	ldr	r7, [fp, #12]
   3df68:	str	r7, [sp, #8]
   3df6c:	bl	3e348 <GetDataLinear>
   3df70:	mov	r5, r0
   3df74:	cmp	r0, #0
   3df78:	bne	3e330 <Mat_VarReadDataLinear5+0x4cc>
   3df7c:	ldr	r3, [r4, #8]
   3df80:	ldr	r2, [r4, #16]
   3df84:	ldr	r1, [r8, #4]
   3df88:	ldr	r0, [r6, #4]
   3df8c:	stm	sp, {r9, sl}
   3df90:	str	r7, [sp, #8]
   3df94:	b	3dff0 <Mat_VarReadDataLinear5+0x18c>
   3df98:	ldr	r1, [r0, #12]
   3df9c:	mov	r0, #0
   3dfa0:	str	r0, [r1, #4]
   3dfa4:	add	r0, sp, #20
   3dfa8:	bl	1960 <inflateCopy@plt>
   3dfac:	cmp	r0, #0
   3dfb0:	beq	3dffc <Mat_VarReadDataLinear5+0x198>
   3dfb4:	bl	18a0 <zError@plt>
   3dfb8:	mov	r1, r0
   3dfbc:	ldr	r0, [pc, #888]	; 3e33c <Mat_VarReadDataLinear5+0x4d8>
   3dfc0:	add	r0, pc, r0
   3dfc4:	bl	19cc <Mat_Critical@plt>
   3dfc8:	b	3e330 <Mat_VarReadDataLinear5+0x4cc>
   3dfcc:	ldr	r3, [r4, #8]
   3dfd0:	ldr	r2, [r4, #16]
   3dfd4:	str	r9, [sp]
   3dfd8:	ldr	r0, [fp, #8]
   3dfdc:	str	r0, [sp, #4]
   3dfe0:	ldr	r0, [fp, #12]
   3dfe4:	str	r0, [sp, #8]
   3dfe8:	mov	r0, r6
   3dfec:	mov	r1, r8
   3dff0:	bl	3e348 <GetDataLinear>
   3dff4:	mov	r5, r0
   3dff8:	b	3e330 <Mat_VarReadDataLinear5+0x4cc>
   3dffc:	add	r1, sp, #20
   3e000:	sub	r5, fp, #36	; 0x24
   3e004:	mov	r0, r7
   3e008:	mov	r2, r5
   3e00c:	bl	30b4 <InflateDataType>
   3e010:	ldr	r0, [r7, #20]
   3e014:	cmp	r0, #0
   3e018:	beq	3e02c <Mat_VarReadDataLinear5+0x1c8>
   3e01c:	mov	r0, r5
   3e020:	bl	1c28 <Mat_int32Swap>
   3e024:	add	r0, r5, #4
   3e028:	bl	1c28 <Mat_int32Swap>
   3e02c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3e030:	uxtb	r1, r0
   3e034:	str	r1, [r4, #8]
   3e038:	mov	r1, #0
   3e03c:	cmp	r1, r0, lsr #16
   3e040:	bne	3df20 <Mat_VarReadDataLinear5+0xbc>
   3e044:	add	r5, r5, #4
   3e048:	add	r1, sp, #20
   3e04c:	mov	r0, r7
   3e050:	mov	r2, r5
   3e054:	bl	30b4 <InflateDataType>
   3e058:	ldr	r0, [r7, #20]
   3e05c:	cmp	r0, #0
   3e060:	beq	3e06c <Mat_VarReadDataLinear5+0x208>
   3e064:	mov	r0, r5
   3e068:	bl	1c28 <Mat_int32Swap>
   3e06c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e070:	add	r6, r0, #8
   3e074:	asr	r0, r6, #31
   3e078:	add	r0, r6, r0, lsr #29
   3e07c:	bic	r0, r0, #7
   3e080:	subs	r0, r6, r0
   3e084:	rsb	r0, r0, #8
   3e088:	addne	r6, r6, r0
   3e08c:	add	r1, sp, #16
   3e090:	mov	r0, r4
   3e094:	bl	4479c <SafeMulDims>
   3e098:	mov	sl, r0
   3e09c:	cmp	r0, #0
   3e0a0:	beq	3e0b0 <Mat_VarReadDataLinear5+0x24c>
   3e0a4:	ldr	r0, [pc, #660]	; 3e340 <Mat_VarReadDataLinear5+0x4dc>
   3e0a8:	add	r0, pc, r0
   3e0ac:	bl	19cc <Mat_Critical@plt>
   3e0b0:	ldr	ip, [fp, #12]
   3e0b4:	sub	r0, ip, #1
   3e0b8:	ldr	lr, [fp, #8]
   3e0bc:	mla	r0, r0, lr, r9
   3e0c0:	add	r0, r0, #1
   3e0c4:	mov	r5, #1
   3e0c8:	ldr	r1, [sp, #16]
   3e0cc:	cmp	r0, r1
   3e0d0:	bhi	3e318 <Mat_VarReadDataLinear5+0x4b4>
   3e0d4:	ldr	r0, [r4, #48]	; 0x30
   3e0d8:	cmp	r0, #1
   3e0dc:	beq	3e1a8 <Mat_VarReadDataLinear5+0x344>
   3e0e0:	cmp	r0, #0
   3e0e4:	bne	3e2c0 <Mat_VarReadDataLinear5+0x45c>
   3e0e8:	ldr	r0, [r4, #20]
   3e0ec:	cmp	r0, #0
   3e0f0:	beq	3e2c8 <Mat_VarReadDataLinear5+0x464>
   3e0f4:	ldr	r3, [r4, #8]
   3e0f8:	ldr	r2, [r4, #16]
   3e0fc:	ldr	r1, [r8]
   3e100:	stm	sp, {r9, lr}
   3e104:	str	ip, [sp, #8]
   3e108:	mov	r0, r7
   3e10c:	bl	1c848 <ReadDataSlab1>
   3e110:	ldr	r0, [r4, #52]	; 0x34
   3e114:	ldr	r0, [r0]
   3e118:	add	r1, r0, r6
   3e11c:	ldr	r0, [r7]
   3e120:	mov	r2, #0
   3e124:	bl	1a68 <fseek@plt>
   3e128:	ldr	r3, [r7]
   3e12c:	sub	r5, fp, #36	; 0x24
   3e130:	mov	r0, r5
   3e134:	mov	r1, #4
   3e138:	mov	r2, #2
   3e13c:	bl	18d0 <fread@plt>
   3e140:	ldr	r0, [r7, #20]
   3e144:	cmp	r0, #0
   3e148:	beq	3e15c <Mat_VarReadDataLinear5+0x2f8>
   3e14c:	mov	r0, r5
   3e150:	bl	1c28 <Mat_int32Swap>
   3e154:	add	r0, r5, #4
   3e158:	bl	1c28 <Mat_int32Swap>
   3e15c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3e160:	uxtb	r1, r0
   3e164:	str	r1, [r4, #8]
   3e168:	cmp	r0, #65536	; 0x10000
   3e16c:	bcc	3e180 <Mat_VarReadDataLinear5+0x31c>
   3e170:	ldr	r0, [r7]
   3e174:	mvn	r1, #3
   3e178:	mov	r2, #1
   3e17c:	bl	1a68 <fseek@plt>
   3e180:	ldr	r3, [r4, #8]
   3e184:	ldr	r2, [r4, #16]
   3e188:	ldr	r1, [r8, #4]
   3e18c:	str	r9, [sp]
   3e190:	ldr	r0, [fp, #8]
   3e194:	str	r0, [sp, #4]
   3e198:	ldr	r0, [fp, #12]
   3e19c:	str	r0, [sp, #8]
   3e1a0:	mov	r0, r7
   3e1a4:	b	3e2e0 <Mat_VarReadDataLinear5+0x47c>
   3e1a8:	ldr	r0, [r4, #20]
   3e1ac:	cmp	r0, #0
   3e1b0:	beq	3e2ec <Mat_VarReadDataLinear5+0x488>
   3e1b4:	ldr	r2, [r8]
   3e1b8:	ldr	r0, [r4, #8]
   3e1bc:	ldr	r3, [r4, #16]
   3e1c0:	stm	sp, {r0, r9, lr}
   3e1c4:	str	ip, [sp, #12]
   3e1c8:	add	r5, sp, #20
   3e1cc:	mov	r0, r7
   3e1d0:	mov	r1, r5
   3e1d4:	bl	1dc94 <ReadCompressedDataSlab1>
   3e1d8:	ldr	r0, [r7]
   3e1dc:	ldr	r1, [r4, #52]	; 0x34
   3e1e0:	ldr	r1, [r1]
   3e1e4:	mov	r2, #0
   3e1e8:	bl	1a68 <fseek@plt>
   3e1ec:	mov	r0, r5
   3e1f0:	bl	1954 <inflateEnd@plt>
   3e1f4:	ldr	r0, [r4, #52]	; 0x34
   3e1f8:	ldr	r1, [r0, #12]
   3e1fc:	mov	r0, r5
   3e200:	bl	1960 <inflateCopy@plt>
   3e204:	mov	r5, r0
   3e208:	cmp	r0, #0
   3e20c:	beq	3e228 <Mat_VarReadDataLinear5+0x3c4>
   3e210:	mov	r0, r5
   3e214:	bl	18a0 <zError@plt>
   3e218:	mov	r1, r0
   3e21c:	ldr	r0, [pc, #288]	; 3e344 <Mat_VarReadDataLinear5+0x4e0>
   3e220:	add	r0, pc, r0
   3e224:	bl	19cc <Mat_Critical@plt>
   3e228:	add	sl, sp, #20
   3e22c:	mov	r0, r7
   3e230:	mov	r1, sl
   3e234:	mov	r2, r6
   3e238:	bl	234c <InflateSkip>
   3e23c:	mov	r0, #0
   3e240:	str	r0, [sp, #24]
   3e244:	sub	r2, fp, #36	; 0x24
   3e248:	mov	r0, r7
   3e24c:	mov	r1, sl
   3e250:	bl	30b4 <InflateDataType>
   3e254:	ldr	r0, [r7, #20]
   3e258:	cmp	r0, #0
   3e25c:	beq	3e268 <Mat_VarReadDataLinear5+0x404>
   3e260:	sub	r0, fp, #36	; 0x24
   3e264:	bl	1c28 <Mat_int32Swap>
   3e268:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3e26c:	uxtb	r1, r0
   3e270:	str	r1, [r4, #8]
   3e274:	mov	r1, #0
   3e278:	cmp	r1, r0, lsr #16
   3e27c:	bne	3e290 <Mat_VarReadDataLinear5+0x42c>
   3e280:	add	r1, sp, #20
   3e284:	mov	r0, r7
   3e288:	mov	r2, #4
   3e28c:	bl	234c <InflateSkip>
   3e290:	ldr	r2, [r8, #4]
   3e294:	ldr	r0, [r4, #8]
   3e298:	ldr	r3, [r4, #16]
   3e29c:	stm	sp, {r0, r9}
   3e2a0:	ldr	r0, [fp, #8]
   3e2a4:	str	r0, [sp, #8]
   3e2a8:	ldr	r0, [fp, #12]
   3e2ac:	str	r0, [sp, #12]
   3e2b0:	add	r1, sp, #20
   3e2b4:	mov	r0, r7
   3e2b8:	bl	1dc94 <ReadCompressedDataSlab1>
   3e2bc:	b	3e310 <Mat_VarReadDataLinear5+0x4ac>
   3e2c0:	mov	r5, sl
   3e2c4:	b	3e318 <Mat_VarReadDataLinear5+0x4b4>
   3e2c8:	ldr	r3, [r4, #8]
   3e2cc:	ldr	r2, [r4, #16]
   3e2d0:	stm	sp, {r9, lr}
   3e2d4:	str	ip, [sp, #8]
   3e2d8:	mov	r0, r7
   3e2dc:	mov	r1, r8
   3e2e0:	bl	1c848 <ReadDataSlab1>
   3e2e4:	mov	r5, sl
   3e2e8:	b	3e318 <Mat_VarReadDataLinear5+0x4b4>
   3e2ec:	ldr	r0, [r4, #8]
   3e2f0:	ldr	r3, [r4, #16]
   3e2f4:	stm	sp, {r0, r9, lr}
   3e2f8:	str	ip, [sp, #12]
   3e2fc:	add	r1, sp, #20
   3e300:	mov	r0, r7
   3e304:	mov	r2, r8
   3e308:	bl	1dc94 <ReadCompressedDataSlab1>
   3e30c:	mov	r5, sl
   3e310:	add	r0, sp, #20
   3e314:	bl	1954 <inflateEnd@plt>
   3e318:	ldr	r0, [r4, #16]
   3e31c:	bl	4477c <ClassType2DataType>
   3e320:	str	r0, [r4, #8]
   3e324:	ldr	r0, [r4, #16]
   3e328:	bl	1a38 <Mat_SizeOfClass@plt>
   3e32c:	str	r0, [r4, #12]
   3e330:	mov	r0, r5
   3e334:	sub	sp, fp, #28
   3e338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e33c:	.word	0x0000b50f
   3e340:	.word	0x0000b27c
   3e344:	.word	0x0000b2af

0003e348 <GetDataLinear>:
   3e348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e34c:	add	fp, sp, #28
   3e350:	sub	sp, sp, #4
   3e354:	mov	r7, r2
   3e358:	mov	r4, r1
   3e35c:	mov	r5, r0
   3e360:	mov	r0, r3
   3e364:	bl	193c <Mat_SizeOf@plt>
   3e368:	sub	r1, r7, #6
   3e36c:	cmp	r1, #9
   3e370:	bhi	3e3f8 <GetDataLinear+0xb0>
   3e374:	mov	r8, r0
   3e378:	ldr	r6, [fp, #16]
   3e37c:	ldr	r9, [fp, #12]
   3e380:	ldr	r0, [fp, #8]
   3e384:	add	r2, pc, #4
   3e388:	ldr	r1, [r2, r1, lsl #2]
   3e38c:	add	pc, r2, r1
   3e390:	.word	0x00000028
   3e394:	.word	0x00000070
   3e398:	.word	0x000000b0
   3e39c:	.word	0x000000ec
   3e3a0:	.word	0x00000128
   3e3a4:	.word	0x00000168
   3e3a8:	.word	0x000001a8
   3e3ac:	.word	0x000001e8
   3e3b0:	.word	0x00000228
   3e3b4:	.word	0x00000268
   3e3b8:	add	r7, r5, r0, lsl #3
   3e3bc:	cmp	r9, #0
   3e3c0:	beq	3e638 <GetDataLinear+0x2f0>
   3e3c4:	mov	sl, #0
   3e3c8:	cmp	r6, #1
   3e3cc:	blt	3e64c <GetDataLinear+0x304>
   3e3d0:	lsl	r5, r9, #3
   3e3d4:	mov	r0, r4
   3e3d8:	mov	r1, r7
   3e3dc:	mov	r2, r8
   3e3e0:	bl	1834 <memcpy@plt>
   3e3e4:	add	r7, r7, r5
   3e3e8:	subs	r6, r6, #1
   3e3ec:	add	r4, r4, #8
   3e3f0:	bne	3e3d4 <GetDataLinear+0x8c>
   3e3f4:	b	3e64c <GetDataLinear+0x304>
   3e3f8:	mov	sl, #1
   3e3fc:	b	3e64c <GetDataLinear+0x304>
   3e400:	add	r7, r5, r0, lsl #2
   3e404:	cmp	r9, #0
   3e408:	beq	3e638 <GetDataLinear+0x2f0>
   3e40c:	mov	sl, #0
   3e410:	cmp	r6, #1
   3e414:	blt	3e64c <GetDataLinear+0x304>
   3e418:	lsl	r5, r9, #2
   3e41c:	mov	r0, r4
   3e420:	mov	r1, r7
   3e424:	mov	r2, r8
   3e428:	bl	1834 <memcpy@plt>
   3e42c:	add	r7, r7, r5
   3e430:	subs	r6, r6, #1
   3e434:	add	r4, r4, #4
   3e438:	bne	3e41c <GetDataLinear+0xd4>
   3e43c:	b	3e64c <GetDataLinear+0x304>
   3e440:	add	r7, r5, r0
   3e444:	cmp	r9, #0
   3e448:	beq	3e638 <GetDataLinear+0x2f0>
   3e44c:	mov	sl, #0
   3e450:	cmp	r6, #1
   3e454:	blt	3e64c <GetDataLinear+0x304>
   3e458:	mov	r0, r4
   3e45c:	mov	r1, r7
   3e460:	mov	r2, r8
   3e464:	bl	1834 <memcpy@plt>
   3e468:	add	r7, r7, r9
   3e46c:	subs	r6, r6, #1
   3e470:	add	r4, r4, #1
   3e474:	bne	3e458 <GetDataLinear+0x110>
   3e478:	b	3e64c <GetDataLinear+0x304>
   3e47c:	add	r7, r5, r0
   3e480:	cmp	r9, #0
   3e484:	beq	3e638 <GetDataLinear+0x2f0>
   3e488:	mov	sl, #0
   3e48c:	cmp	r6, #1
   3e490:	blt	3e64c <GetDataLinear+0x304>
   3e494:	mov	r0, r4
   3e498:	mov	r1, r7
   3e49c:	mov	r2, r8
   3e4a0:	bl	1834 <memcpy@plt>
   3e4a4:	add	r7, r7, r9
   3e4a8:	subs	r6, r6, #1
   3e4ac:	add	r4, r4, #1
   3e4b0:	bne	3e494 <GetDataLinear+0x14c>
   3e4b4:	b	3e64c <GetDataLinear+0x304>
   3e4b8:	add	r7, r5, r0, lsl #1
   3e4bc:	cmp	r9, #0
   3e4c0:	beq	3e638 <GetDataLinear+0x2f0>
   3e4c4:	mov	sl, #0
   3e4c8:	cmp	r6, #1
   3e4cc:	blt	3e64c <GetDataLinear+0x304>
   3e4d0:	lsl	r5, r9, #1
   3e4d4:	mov	r0, r4
   3e4d8:	mov	r1, r7
   3e4dc:	mov	r2, r8
   3e4e0:	bl	1834 <memcpy@plt>
   3e4e4:	add	r7, r7, r5
   3e4e8:	subs	r6, r6, #1
   3e4ec:	add	r4, r4, #2
   3e4f0:	bne	3e4d4 <GetDataLinear+0x18c>
   3e4f4:	b	3e64c <GetDataLinear+0x304>
   3e4f8:	add	r7, r5, r0, lsl #1
   3e4fc:	cmp	r9, #0
   3e500:	beq	3e638 <GetDataLinear+0x2f0>
   3e504:	mov	sl, #0
   3e508:	cmp	r6, #1
   3e50c:	blt	3e64c <GetDataLinear+0x304>
   3e510:	lsl	r5, r9, #1
   3e514:	mov	r0, r4
   3e518:	mov	r1, r7
   3e51c:	mov	r2, r8
   3e520:	bl	1834 <memcpy@plt>
   3e524:	add	r7, r7, r5
   3e528:	subs	r6, r6, #1
   3e52c:	add	r4, r4, #2
   3e530:	bne	3e514 <GetDataLinear+0x1cc>
   3e534:	b	3e64c <GetDataLinear+0x304>
   3e538:	add	r7, r5, r0, lsl #2
   3e53c:	cmp	r9, #0
   3e540:	beq	3e638 <GetDataLinear+0x2f0>
   3e544:	mov	sl, #0
   3e548:	cmp	r6, #1
   3e54c:	blt	3e64c <GetDataLinear+0x304>
   3e550:	lsl	r5, r9, #2
   3e554:	mov	r0, r4
   3e558:	mov	r1, r7
   3e55c:	mov	r2, r8
   3e560:	bl	1834 <memcpy@plt>
   3e564:	add	r7, r7, r5
   3e568:	subs	r6, r6, #1
   3e56c:	add	r4, r4, #4
   3e570:	bne	3e554 <GetDataLinear+0x20c>
   3e574:	b	3e64c <GetDataLinear+0x304>
   3e578:	add	r7, r5, r0, lsl #2
   3e57c:	cmp	r9, #0
   3e580:	beq	3e638 <GetDataLinear+0x2f0>
   3e584:	mov	sl, #0
   3e588:	cmp	r6, #1
   3e58c:	blt	3e64c <GetDataLinear+0x304>
   3e590:	lsl	r5, r9, #2
   3e594:	mov	r0, r4
   3e598:	mov	r1, r7
   3e59c:	mov	r2, r8
   3e5a0:	bl	1834 <memcpy@plt>
   3e5a4:	add	r7, r7, r5
   3e5a8:	subs	r6, r6, #1
   3e5ac:	add	r4, r4, #4
   3e5b0:	bne	3e594 <GetDataLinear+0x24c>
   3e5b4:	b	3e64c <GetDataLinear+0x304>
   3e5b8:	add	r7, r5, r0, lsl #3
   3e5bc:	cmp	r9, #0
   3e5c0:	beq	3e638 <GetDataLinear+0x2f0>
   3e5c4:	mov	sl, #0
   3e5c8:	cmp	r6, #1
   3e5cc:	blt	3e64c <GetDataLinear+0x304>
   3e5d0:	lsl	r5, r9, #3
   3e5d4:	mov	r0, r4
   3e5d8:	mov	r1, r7
   3e5dc:	mov	r2, r8
   3e5e0:	bl	1834 <memcpy@plt>
   3e5e4:	add	r7, r7, r5
   3e5e8:	subs	r6, r6, #1
   3e5ec:	add	r4, r4, #8
   3e5f0:	bne	3e5d4 <GetDataLinear+0x28c>
   3e5f4:	b	3e64c <GetDataLinear+0x304>
   3e5f8:	add	r7, r5, r0, lsl #3
   3e5fc:	cmp	r9, #0
   3e600:	beq	3e638 <GetDataLinear+0x2f0>
   3e604:	mov	sl, #0
   3e608:	cmp	r6, #1
   3e60c:	blt	3e64c <GetDataLinear+0x304>
   3e610:	lsl	r5, r9, #3
   3e614:	mov	r0, r4
   3e618:	mov	r1, r7
   3e61c:	mov	r2, r8
   3e620:	bl	1834 <memcpy@plt>
   3e624:	add	r7, r7, r5
   3e628:	subs	r6, r6, #1
   3e62c:	add	r4, r4, #8
   3e630:	bne	3e614 <GetDataLinear+0x2cc>
   3e634:	b	3e64c <GetDataLinear+0x304>
   3e638:	mul	r2, r8, r6
   3e63c:	mov	r0, r4
   3e640:	mov	r1, r7
   3e644:	bl	1834 <memcpy@plt>
   3e648:	mov	sl, #0
   3e64c:	mov	r0, sl
   3e650:	sub	sp, fp, #28
   3e654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e658 <Mat_VarWrite5>:
   3e658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e65c:	add	fp, sp, #28
   3e660:	sub	sp, sp, #44	; 0x2c
   3e664:	sub	sp, sp, #4096	; 0x1000
   3e668:	mov	r5, r1
   3e66c:	mov	r4, r0
   3e670:	mov	r0, #6
   3e674:	str	r0, [fp, #-40]	; 0xffffffd8
   3e678:	mov	r0, #5
   3e67c:	str	r0, [fp, #-44]	; 0xffffffd4
   3e680:	mov	r0, #8
   3e684:	str	r0, [fp, #-48]	; 0xffffffd0
   3e688:	mov	r0, #0
   3e68c:	str	r0, [fp, #-52]	; 0xffffffcc
   3e690:	mov	r1, #14
   3e694:	str	r1, [fp, #-56]	; 0xffffffc8
   3e698:	str	r0, [fp, #-64]	; 0xffffffc0
   3e69c:	mvn	r6, #0
   3e6a0:	cmp	r4, #0
   3e6a4:	beq	3e6cc <Mat_VarWrite5+0x74>
   3e6a8:	mov	r7, r2
   3e6ac:	ldr	r0, [r4]
   3e6b0:	mov	r1, #0
   3e6b4:	mov	r2, #2
   3e6b8:	bl	1a68 <fseek@plt>
   3e6bc:	cmp	r5, #0
   3e6c0:	ldrne	r0, [r5, #36]	; 0x24
   3e6c4:	cmpne	r0, #0
   3e6c8:	bne	3e6d8 <Mat_VarWrite5+0x80>
   3e6cc:	mov	r0, r6
   3e6d0:	sub	sp, fp, #28
   3e6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e6d8:	cmp	r7, #1
   3e6dc:	beq	3e8d0 <Mat_VarWrite5+0x278>
   3e6e0:	mov	r8, #0
   3e6e4:	cmp	r7, #0
   3e6e8:	bne	3ea08 <Mat_VarWrite5+0x3b0>
   3e6ec:	ldr	r3, [r4]
   3e6f0:	sub	r0, fp, #56	; 0x38
   3e6f4:	mov	r1, #4
   3e6f8:	mov	r2, #1
   3e6fc:	bl	18c4 <fwrite@plt>
   3e700:	ldr	r3, [r4]
   3e704:	sub	r0, fp, #52	; 0x34
   3e708:	mov	r1, #4
   3e70c:	mov	r2, #1
   3e710:	bl	18c4 <fwrite@plt>
   3e714:	ldr	r0, [r4]
   3e718:	bl	1858 <ftell@plt>
   3e71c:	mov	r8, r0
   3e720:	ldr	r0, [r5, #16]
   3e724:	ldr	r2, [r5, #20]
   3e728:	uxtb	r1, r0
   3e72c:	str	r1, [fp, #-36]	; 0xffffffdc
   3e730:	cmp	r2, #0
   3e734:	orrne	r1, r1, #2048	; 0x800
   3e738:	strne	r1, [fp, #-36]	; 0xffffffdc
   3e73c:	ldr	r1, [r5, #24]
   3e740:	cmp	r1, #0
   3e744:	ldrne	r1, [fp, #-36]	; 0xffffffdc
   3e748:	orrne	r1, r1, #1024	; 0x400
   3e74c:	strne	r1, [fp, #-36]	; 0xffffffdc
   3e750:	ldr	r1, [r5, #28]
   3e754:	cmp	r1, #0
   3e758:	ldrne	r1, [fp, #-36]	; 0xffffffdc
   3e75c:	orrne	r1, r1, #512	; 0x200
   3e760:	strne	r1, [fp, #-36]	; 0xffffffdc
   3e764:	cmp	r0, #5
   3e768:	ldreq	r0, [r5, #40]	; 0x28
   3e76c:	ldreq	r0, [r0]
   3e770:	streq	r0, [fp, #-64]	; 0xffffffc0
   3e774:	ldr	r3, [r4]
   3e778:	sub	r0, fp, #40	; 0x28
   3e77c:	mov	r1, #4
   3e780:	mov	r2, #1
   3e784:	bl	18c4 <fwrite@plt>
   3e788:	ldr	r3, [r4]
   3e78c:	sub	r0, fp, #48	; 0x30
   3e790:	mov	r1, #4
   3e794:	mov	r2, #1
   3e798:	bl	18c4 <fwrite@plt>
   3e79c:	ldr	r3, [r4]
   3e7a0:	sub	r0, fp, #36	; 0x24
   3e7a4:	mov	r1, #4
   3e7a8:	mov	r2, #1
   3e7ac:	bl	18c4 <fwrite@plt>
   3e7b0:	ldr	r3, [r4]
   3e7b4:	sub	r0, fp, #64	; 0x40
   3e7b8:	mov	r1, #4
   3e7bc:	mov	r2, #1
   3e7c0:	bl	18c4 <fwrite@plt>
   3e7c4:	ldr	r0, [r5, #4]
   3e7c8:	lsl	r0, r0, #2
   3e7cc:	str	r0, [fp, #-60]	; 0xffffffc4
   3e7d0:	ldr	r3, [r4]
   3e7d4:	sub	r0, fp, #44	; 0x2c
   3e7d8:	mov	r1, #4
   3e7dc:	mov	r2, #1
   3e7e0:	bl	18c4 <fwrite@plt>
   3e7e4:	ldr	r3, [r4]
   3e7e8:	sub	r0, fp, #60	; 0x3c
   3e7ec:	mov	r1, #4
   3e7f0:	mov	r2, #1
   3e7f4:	bl	18c4 <fwrite@plt>
   3e7f8:	ldr	r0, [r5, #4]
   3e7fc:	cmp	r0, #1
   3e800:	blt	3e840 <Mat_VarWrite5+0x1e8>
   3e804:	mov	r7, #0
   3e808:	add	lr, sp, #2048	; 0x800
   3e80c:	add	r6, lr, #8
   3e810:	ldr	r0, [r5, #32]
   3e814:	ldr	r0, [r0, r7, lsl #2]
   3e818:	str	r0, [sp, #2056]	; 0x808
   3e81c:	ldr	r3, [r4]
   3e820:	mov	r0, r6
   3e824:	mov	r1, #4
   3e828:	mov	r2, #1
   3e82c:	bl	18c4 <fwrite@plt>
   3e830:	add	r7, r7, #1
   3e834:	ldr	r0, [r5, #4]
   3e838:	cmp	r7, r0
   3e83c:	blt	3e810 <Mat_VarWrite5+0x1b8>
   3e840:	tst	r0, #1
   3e844:	beq	3e85c <Mat_VarWrite5+0x204>
   3e848:	ldr	r3, [r4]
   3e84c:	sub	r0, fp, #52	; 0x34
   3e850:	mov	r1, #4
   3e854:	mov	r2, #1
   3e858:	bl	18c4 <fwrite@plt>
   3e85c:	ldr	r0, [r5, #36]	; 0x24
   3e860:	bl	196c <strlen@plt>
   3e864:	mov	r6, r0
   3e868:	cmp	r0, #4
   3e86c:	bhi	3e940 <Mat_VarWrite5+0x2e8>
   3e870:	mov	r0, #1
   3e874:	orr	r0, r0, r6, lsl #16
   3e878:	str	r0, [sp, #2056]	; 0x808
   3e87c:	ldr	r3, [r4]
   3e880:	add	lr, sp, #2048	; 0x800
   3e884:	add	r0, lr, #8
   3e888:	mov	r1, #4
   3e88c:	mov	r2, #1
   3e890:	bl	18c4 <fwrite@plt>
   3e894:	ldr	r0, [r5, #36]	; 0x24
   3e898:	ldr	r3, [r4]
   3e89c:	mov	r1, #1
   3e8a0:	mov	r2, r6
   3e8a4:	bl	18c4 <fwrite@plt>
   3e8a8:	cmp	r6, #4
   3e8ac:	beq	3e9c0 <Mat_VarWrite5+0x368>
   3e8b0:	sub	r6, r6, #1
   3e8b4:	ldr	r1, [r4]
   3e8b8:	mov	r0, #0
   3e8bc:	bl	1a08 <fputc@plt>
   3e8c0:	add	r6, r6, #1
   3e8c4:	cmp	r6, #3
   3e8c8:	blt	3e8b4 <Mat_VarWrite5+0x25c>
   3e8cc:	b	3e9c0 <Mat_VarWrite5+0x368>
   3e8d0:	add	sl, sp, #8
   3e8d4:	mov	r0, sl
   3e8d8:	mov	r1, #0
   3e8dc:	mov	r2, #2048	; 0x800
   3e8e0:	bl	19a8 <memset@plt>
   3e8e4:	mov	r0, #1
   3e8e8:	mov	r1, #56	; 0x38
   3e8ec:	bl	17b0 <calloc@plt>
   3e8f0:	cmp	r0, #0
   3e8f4:	beq	3e6cc <Mat_VarWrite5+0x74>
   3e8f8:	mov	r7, r0
   3e8fc:	ldr	r2, [pc, #1312]	; 3ee24 <Mat_VarWrite5+0x7cc>
   3e900:	add	r2, pc, r2
   3e904:	mvn	r1, #0
   3e908:	mov	r3, #56	; 0x38
   3e90c:	bl	18f4 <deflateInit_@plt>
   3e910:	cmp	r0, #0
   3e914:	beq	3ea7c <Mat_VarWrite5+0x424>
   3e918:	mov	r8, r0
   3e91c:	mov	r0, r7
   3e920:	bl	181c <free@plt>
   3e924:	mov	r0, r8
   3e928:	bl	18a0 <zError@plt>
   3e92c:	mov	r1, r0
   3e930:	ldr	r0, [pc, #1264]	; 3ee28 <Mat_VarWrite5+0x7d0>
   3e934:	add	r0, pc, r0
   3e938:	bl	19cc <Mat_Critical@plt>
   3e93c:	b	3e6cc <Mat_VarWrite5+0x74>
   3e940:	mov	r0, #1
   3e944:	str	r0, [sp, #2056]	; 0x808
   3e948:	str	r6, [sp, #8]
   3e94c:	ldr	r3, [r4]
   3e950:	add	lr, sp, #2048	; 0x800
   3e954:	add	r0, lr, #8
   3e958:	mov	r1, #4
   3e95c:	mov	r2, #1
   3e960:	bl	18c4 <fwrite@plt>
   3e964:	ldr	r3, [r4]
   3e968:	add	r0, sp, #8
   3e96c:	mov	r1, #4
   3e970:	mov	r2, #1
   3e974:	bl	18c4 <fwrite@plt>
   3e978:	ldr	r0, [r5, #36]	; 0x24
   3e97c:	ldr	r3, [r4]
   3e980:	ldr	r6, [sp, #8]
   3e984:	mov	r1, #1
   3e988:	mov	r2, r6
   3e98c:	bl	18c4 <fwrite@plt>
   3e990:	asr	r0, r6, #31
   3e994:	add	r0, r6, r0, lsr #29
   3e998:	bic	r0, r0, #7
   3e99c:	subs	r0, r6, r0
   3e9a0:	beq	3e9c0 <Mat_VarWrite5+0x368>
   3e9a4:	sub	r6, r0, #1
   3e9a8:	ldr	r1, [r4]
   3e9ac:	mov	r0, #0
   3e9b0:	bl	1a08 <fputc@plt>
   3e9b4:	add	r6, r6, #1
   3e9b8:	cmp	r6, #7
   3e9bc:	blt	3e9a8 <Mat_VarWrite5+0x350>
   3e9c0:	ldr	r0, [r5, #52]	; 0x34
   3e9c4:	cmp	r0, #0
   3e9c8:	beq	3e9f4 <Mat_VarWrite5+0x39c>
   3e9cc:	ldr	r0, [r4]
   3e9d0:	bl	1858 <ftell@plt>
   3e9d4:	ldr	r1, [r5, #52]	; 0x34
   3e9d8:	str	r0, [r1]
   3e9dc:	cmn	r0, #1
   3e9e0:	bne	3e9fc <Mat_VarWrite5+0x3a4>
   3e9e4:	ldr	r0, [pc, #1076]	; 3ee20 <Mat_VarWrite5+0x7c8>
   3e9e8:	add	r0, pc, r0
   3e9ec:	bl	19cc <Mat_Critical@plt>
   3e9f0:	b	3e9fc <Mat_VarWrite5+0x3a4>
   3e9f4:	mov	r0, #0
   3e9f8:	str	r0, [r5, #16]
   3e9fc:	mov	r0, r4
   3ea00:	mov	r1, r5
   3ea04:	bl	3ee34 <WriteType>
   3ea08:	ldr	r0, [r4]
   3ea0c:	bl	1858 <ftell@plt>
   3ea10:	cmn	r8, #1
   3ea14:	movne	r5, r0
   3ea18:	cmnne	r0, #1
   3ea1c:	bne	3ea34 <Mat_VarWrite5+0x3dc>
   3ea20:	ldr	r0, [pc, #1032]	; 3ee30 <Mat_VarWrite5+0x7d8>
   3ea24:	add	r0, pc, r0
   3ea28:	bl	19cc <Mat_Critical@plt>
   3ea2c:	mov	r6, #0
   3ea30:	b	3e6cc <Mat_VarWrite5+0x74>
   3ea34:	sub	r0, r5, r8
   3ea38:	str	r0, [fp, #-60]	; 0xffffffc4
   3ea3c:	mvn	r1, #3
   3ea40:	sub	r1, r1, r0
   3ea44:	ldr	r0, [r4]
   3ea48:	mov	r2, #1
   3ea4c:	bl	1a68 <fseek@plt>
   3ea50:	ldr	r3, [r4]
   3ea54:	sub	r0, fp, #60	; 0x3c
   3ea58:	mov	r1, #4
   3ea5c:	mov	r2, #1
   3ea60:	bl	18c4 <fwrite@plt>
   3ea64:	ldr	r0, [r4]
   3ea68:	mov	r6, #0
   3ea6c:	mov	r1, r5
   3ea70:	mov	r2, #0
   3ea74:	bl	1a68 <fseek@plt>
   3ea78:	b	3e6cc <Mat_VarWrite5+0x74>
   3ea7c:	mov	r0, #15
   3ea80:	str	r0, [fp, #-56]	; 0xffffffc8
   3ea84:	ldr	r3, [r4]
   3ea88:	sub	r0, fp, #56	; 0x38
   3ea8c:	mov	r1, #4
   3ea90:	mov	r2, #1
   3ea94:	bl	18c4 <fwrite@plt>
   3ea98:	ldr	r3, [r4]
   3ea9c:	sub	r0, fp, #52	; 0x34
   3eaa0:	mov	r1, #4
   3eaa4:	mov	r2, #1
   3eaa8:	bl	18c4 <fwrite@plt>
   3eaac:	ldr	r0, [r4]
   3eab0:	bl	1858 <ftell@plt>
   3eab4:	mov	r8, r0
   3eab8:	ldr	r0, [r5, #16]
   3eabc:	ldr	r2, [r5, #20]
   3eac0:	uxtb	r1, r0
   3eac4:	str	r1, [fp, #-36]	; 0xffffffdc
   3eac8:	cmp	r2, #0
   3eacc:	orrne	r1, r1, #2048	; 0x800
   3ead0:	strne	r1, [fp, #-36]	; 0xffffffdc
   3ead4:	ldr	r1, [r5, #24]
   3ead8:	cmp	r1, #0
   3eadc:	ldrne	r1, [fp, #-36]	; 0xffffffdc
   3eae0:	orrne	r1, r1, #1024	; 0x400
   3eae4:	strne	r1, [fp, #-36]	; 0xffffffdc
   3eae8:	ldr	r1, [r5, #28]
   3eaec:	cmp	r1, #0
   3eaf0:	ldrne	r1, [fp, #-36]	; 0xffffffdc
   3eaf4:	orrne	r1, r1, #512	; 0x200
   3eaf8:	strne	r1, [fp, #-36]	; 0xffffffdc
   3eafc:	cmp	r0, #5
   3eb00:	ldreq	r0, [r5, #40]	; 0x28
   3eb04:	ldreq	r0, [r0]
   3eb08:	streq	r0, [fp, #-64]	; 0xffffffc0
   3eb0c:	mov	r0, #14
   3eb10:	str	r0, [sp, #8]
   3eb14:	mov	r0, r5
   3eb18:	bl	3f3e0 <GetMatrixMaxBufSize>
   3eb1c:	str	r0, [sp, #12]
   3eb20:	mov	r0, #8
   3eb24:	str	sl, [r7]
   3eb28:	str	r0, [r7, #4]
   3eb2c:	orr	r0, sl, #4
   3eb30:	str	r0, [sp]
   3eb34:	mov	r9, #2048	; 0x800
   3eb38:	add	lr, sp, #2048	; 0x800
   3eb3c:	add	r6, lr, #8
   3eb40:	str	r6, [r7, #12]
   3eb44:	str	r9, [r7, #16]
   3eb48:	mov	r0, r7
   3eb4c:	mov	r1, #0
   3eb50:	bl	18ac <deflate@plt>
   3eb54:	ldr	r3, [r4]
   3eb58:	ldr	r0, [r7, #16]
   3eb5c:	rsb	r2, r0, #2048	; 0x800
   3eb60:	mov	r0, r6
   3eb64:	mov	r1, #1
   3eb68:	bl	18c4 <fwrite@plt>
   3eb6c:	ldr	r0, [r7, #16]
   3eb70:	cmp	r0, #0
   3eb74:	beq	3eb40 <Mat_VarWrite5+0x4e8>
   3eb78:	mov	r0, #8
   3eb7c:	str	r0, [sp, #12]
   3eb80:	mov	r0, #6
   3eb84:	str	r0, [sp, #8]
   3eb88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3eb8c:	str	r0, [sp, #20]
   3eb90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb94:	str	r0, [sp, #16]
   3eb98:	ldr	ip, [r5, #4]
   3eb9c:	mov	r1, #5
   3eba0:	str	r1, [sp, #24]
   3eba4:	lsl	r1, ip, #2
   3eba8:	str	r1, [fp, #-60]	; 0xffffffc4
   3ebac:	str	r1, [sp, #28]
   3ebb0:	cmp	ip, #1
   3ebb4:	blt	3ebdc <Mat_VarWrite5+0x584>
   3ebb8:	add	r1, sl, #24
   3ebbc:	ldr	r2, [r5, #32]
   3ebc0:	mov	r3, ip
   3ebc4:	ldr	r0, [r2], #4
   3ebc8:	str	r0, [r1], #4
   3ebcc:	subs	r3, r3, #1
   3ebd0:	bne	3ebc4 <Mat_VarWrite5+0x56c>
   3ebd4:	mov	r1, ip
   3ebd8:	b	3ebe0 <Mat_VarWrite5+0x588>
   3ebdc:	mov	r1, #0
   3ebe0:	tst	ip, #1
   3ebe4:	str	r8, [sp, #4]
   3ebe8:	addne	r0, sl, r1, lsl #2
   3ebec:	ldrne	r2, [fp, #-52]	; 0xffffffcc
   3ebf0:	strne	r2, [r0, #24]
   3ebf4:	addne	r1, r1, #1
   3ebf8:	add	r8, sl, #8
   3ebfc:	mov	r0, #24
   3ec00:	add	r0, r0, r1, lsl #2
   3ec04:	str	sl, [r7]
   3ec08:	str	r0, [r7, #4]
   3ec0c:	mov	r9, #2048	; 0x800
   3ec10:	str	r6, [r7, #12]
   3ec14:	str	r9, [r7, #16]
   3ec18:	mov	r0, r7
   3ec1c:	mov	r1, #0
   3ec20:	bl	18ac <deflate@plt>
   3ec24:	ldr	r3, [r4]
   3ec28:	ldr	r0, [r7, #16]
   3ec2c:	rsb	r2, r0, #2048	; 0x800
   3ec30:	mov	r0, r6
   3ec34:	mov	r1, #1
   3ec38:	bl	18c4 <fwrite@plt>
   3ec3c:	ldr	r0, [r7, #16]
   3ec40:	cmp	r0, #0
   3ec44:	beq	3ec10 <Mat_VarWrite5+0x5b8>
   3ec48:	ldr	sl, [r5, #36]	; 0x24
   3ec4c:	mov	r0, sl
   3ec50:	bl	196c <strlen@plt>
   3ec54:	mov	r9, r0
   3ec58:	cmp	r0, #4
   3ec5c:	bhi	3ecd8 <Mat_VarWrite5+0x680>
   3ec60:	mov	r0, #0
   3ec64:	str	r0, [sp, #12]
   3ec68:	mov	r0, #1
   3ec6c:	orr	r0, r0, r9, lsl #16
   3ec70:	str	r0, [sp, #8]
   3ec74:	sxth	r2, r9
   3ec78:	ldr	r0, [sp]
   3ec7c:	mov	r1, sl
   3ec80:	bl	1834 <memcpy@plt>
   3ec84:	mov	r0, #8
   3ec88:	add	r1, sp, #8
   3ec8c:	str	r1, [r7]
   3ec90:	str	r0, [r7, #4]
   3ec94:	mov	r9, #2048	; 0x800
   3ec98:	ldr	r8, [sp, #4]
   3ec9c:	str	r6, [r7, #12]
   3eca0:	str	r9, [r7, #16]
   3eca4:	mov	r0, r7
   3eca8:	mov	r1, #0
   3ecac:	bl	18ac <deflate@plt>
   3ecb0:	ldr	r3, [r4]
   3ecb4:	ldr	r0, [r7, #16]
   3ecb8:	rsb	r2, r0, #2048	; 0x800
   3ecbc:	mov	r0, r6
   3ecc0:	mov	r1, #1
   3ecc4:	bl	18c4 <fwrite@plt>
   3ecc8:	ldr	r0, [r7, #16]
   3eccc:	cmp	r0, #0
   3ecd0:	beq	3ec9c <Mat_VarWrite5+0x644>
   3ecd4:	b	3ed6c <Mat_VarWrite5+0x714>
   3ecd8:	mov	r0, r8
   3ecdc:	mov	r1, #0
   3ece0:	movw	r2, #2040	; 0x7f8
   3ece4:	bl	19a8 <memset@plt>
   3ece8:	mov	r0, #1
   3ecec:	str	r0, [sp, #8]
   3ecf0:	str	r9, [sp, #12]
   3ecf4:	mov	r0, r8
   3ecf8:	mov	r1, sl
   3ecfc:	mov	r2, r9
   3ed00:	bl	1834 <memcpy@plt>
   3ed04:	asr	r0, r9, #31
   3ed08:	add	r0, r9, r0, lsr #29
   3ed0c:	bic	r0, r0, #7
   3ed10:	subs	r0, r9, r0
   3ed14:	rsb	r0, r0, #8
   3ed18:	addne	r9, r9, r0
   3ed1c:	add	r0, r9, #8
   3ed20:	add	r1, sp, #8
   3ed24:	str	r1, [r7]
   3ed28:	str	r0, [r7, #4]
   3ed2c:	mov	r9, #2048	; 0x800
   3ed30:	ldr	r8, [sp, #4]
   3ed34:	str	r6, [r7, #12]
   3ed38:	str	r9, [r7, #16]
   3ed3c:	mov	r0, r7
   3ed40:	mov	r1, #0
   3ed44:	bl	18ac <deflate@plt>
   3ed48:	ldr	r3, [r4]
   3ed4c:	ldr	r0, [r7, #16]
   3ed50:	rsb	r2, r0, #2048	; 0x800
   3ed54:	mov	r0, r6
   3ed58:	mov	r1, #1
   3ed5c:	bl	18c4 <fwrite@plt>
   3ed60:	ldr	r0, [r7, #16]
   3ed64:	cmp	r0, #0
   3ed68:	beq	3ed34 <Mat_VarWrite5+0x6dc>
   3ed6c:	ldr	r0, [r5, #52]	; 0x34
   3ed70:	cmp	r0, #0
   3ed74:	beq	3eda0 <Mat_VarWrite5+0x748>
   3ed78:	ldr	r0, [r4]
   3ed7c:	bl	1858 <ftell@plt>
   3ed80:	ldr	r1, [r5, #52]	; 0x34
   3ed84:	str	r0, [r1]
   3ed88:	cmn	r0, #1
   3ed8c:	bne	3eda8 <Mat_VarWrite5+0x750>
   3ed90:	ldr	r0, [pc, #148]	; 3ee2c <Mat_VarWrite5+0x7d4>
   3ed94:	add	r0, pc, r0
   3ed98:	bl	19cc <Mat_Critical@plt>
   3ed9c:	b	3eda8 <Mat_VarWrite5+0x750>
   3eda0:	mov	r0, #0
   3eda4:	str	r0, [r5, #16]
   3eda8:	mov	r0, r4
   3edac:	mov	r1, r5
   3edb0:	mov	r2, r7
   3edb4:	bl	3f434 <WriteCompressedType>
   3edb8:	mov	r0, #0
   3edbc:	str	r0, [r7]
   3edc0:	str	r0, [r7, #4]
   3edc4:	mov	r9, #2048	; 0x800
   3edc8:	str	r6, [r7, #12]
   3edcc:	str	r9, [r7, #16]
   3edd0:	mov	r0, r7
   3edd4:	mov	r1, #4
   3edd8:	bl	18ac <deflate@plt>
   3eddc:	mov	r5, r0
   3ede0:	ldr	r3, [r4]
   3ede4:	ldr	r0, [r7, #16]
   3ede8:	rsb	r2, r0, #2048	; 0x800
   3edec:	mov	r0, r6
   3edf0:	mov	r1, #1
   3edf4:	bl	18c4 <fwrite@plt>
   3edf8:	cmp	r5, #1
   3edfc:	beq	3ee0c <Mat_VarWrite5+0x7b4>
   3ee00:	ldr	r0, [r7, #16]
   3ee04:	cmp	r0, #0
   3ee08:	beq	3edc8 <Mat_VarWrite5+0x770>
   3ee0c:	mov	r0, r7
   3ee10:	bl	19d8 <deflateEnd@plt>
   3ee14:	mov	r0, r7
   3ee18:	bl	181c <free@plt>
   3ee1c:	b	3ea08 <Mat_VarWrite5+0x3b0>
   3ee20:	.word	0x0000a8b0
   3ee24:	.word	0x0000abed
   3ee28:	.word	0x0000abc0
   3ee2c:	.word	0x0000a504
   3ee30:	.word	0x0000a874

0003ee34 <WriteType>:
   3ee34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ee38:	add	fp, sp, #28
   3ee3c:	sub	sp, sp, #36	; 0x24
   3ee40:	mov	sl, r1
   3ee44:	mov	r4, r0
   3ee48:	mov	r0, #1
   3ee4c:	strh	r0, [fp, #-30]	; 0xffffffe2
   3ee50:	str	r0, [sp, #24]
   3ee54:	add	r1, sp, #24
   3ee58:	mov	r0, sl
   3ee5c:	bl	4479c <SafeMulDims>
   3ee60:	ldr	r0, [sl, #16]
   3ee64:	sub	r1, r0, #6
   3ee68:	cmp	r1, #10
   3ee6c:	bcs	3ef24 <WriteType+0xf0>
   3ee70:	ldr	r0, [sl, #20]
   3ee74:	ldr	r1, [sl, #40]	; 0x28
   3ee78:	cmp	r0, #0
   3ee7c:	beq	3efa4 <WriteType+0x170>
   3ee80:	ldr	r5, [pc, #1364]	; 3f3dc <WriteType+0x5a8>
   3ee84:	add	r5, pc, r5
   3ee88:	cmp	r1, #0
   3ee8c:	movne	r5, r1
   3ee90:	ldr	r1, [r5]
   3ee94:	ldr	r3, [sl, #8]
   3ee98:	ldr	r2, [sp, #24]
   3ee9c:	mov	r0, r4
   3eea0:	bl	41a30 <WriteData>
   3eea4:	str	r0, [sp, #28]
   3eea8:	asr	r1, r0, #31
   3eeac:	add	r1, r0, r1, lsr #29
   3eeb0:	bic	r1, r1, #7
   3eeb4:	subs	r0, r0, r1
   3eeb8:	beq	3eed8 <WriteType+0xa4>
   3eebc:	sub	r6, r0, #1
   3eec0:	ldr	r1, [r4]
   3eec4:	mov	r0, #0
   3eec8:	bl	1a08 <fputc@plt>
   3eecc:	add	r6, r6, #1
   3eed0:	cmp	r6, #7
   3eed4:	blt	3eec0 <WriteType+0x8c>
   3eed8:	ldr	r3, [sl, #8]
   3eedc:	ldr	r1, [r5, #4]
   3eee0:	ldr	r2, [sp, #24]
   3eee4:	mov	r0, r4
   3eee8:	bl	41a30 <WriteData>
   3eeec:	str	r0, [sp, #28]
   3eef0:	asr	r1, r0, #31
   3eef4:	add	r1, r0, r1, lsr #29
   3eef8:	bic	r1, r1, #7
   3eefc:	subs	r0, r0, r1
   3ef00:	beq	3efe8 <WriteType+0x1b4>
   3ef04:	sub	r5, r0, #1
   3ef08:	ldr	r1, [r4]
   3ef0c:	mov	r0, #0
   3ef10:	bl	1a08 <fputc@plt>
   3ef14:	add	r5, r5, #1
   3ef18:	cmp	r5, #7
   3ef1c:	blt	3ef08 <WriteType+0xd4>
   3ef20:	b	3efe8 <WriteType+0x1b4>
   3ef24:	sub	r0, r0, #1
   3ef28:	cmp	r0, #4
   3ef2c:	bhi	3efe8 <WriteType+0x1b4>
   3ef30:	add	r1, pc, #4
   3ef34:	ldr	r0, [r1, r0, lsl #2]
   3ef38:	add	pc, r1, r0
   3ef3c:	.word	0x00000014
   3ef40:	.word	0x000000b4
   3ef44:	.word	0x000000ac
   3ef48:	.word	0x00000274
   3ef4c:	.word	0x00000294
   3ef50:	ldr	r0, [sl]
   3ef54:	cmp	r0, #0
   3ef58:	beq	3efe8 <WriteType+0x1b4>
   3ef5c:	ldr	r5, [sl, #40]	; 0x28
   3ef60:	cmp	r5, #0
   3ef64:	ldrne	r1, [sl, #12]
   3ef68:	cmpne	r1, #0
   3ef6c:	beq	3efe8 <WriteType+0x1b4>
   3ef70:	udiv	r2, r0, r1
   3ef74:	str	r2, [sp, #24]
   3ef78:	cmp	r1, r0
   3ef7c:	bhi	3efe8 <WriteType+0x1b4>
   3ef80:	mov	r6, #0
   3ef84:	ldr	r1, [r5, r6, lsl #2]
   3ef88:	mov	r0, r4
   3ef8c:	bl	41d50 <WriteCellArrayField>
   3ef90:	add	r6, r6, #1
   3ef94:	ldr	r0, [sp, #24]
   3ef98:	cmp	r6, r0
   3ef9c:	bcc	3ef84 <WriteType+0x150>
   3efa0:	b	3efe8 <WriteType+0x1b4>
   3efa4:	ldr	r3, [sl, #8]
   3efa8:	ldr	r2, [sp, #24]
   3efac:	mov	r0, r4
   3efb0:	bl	41a30 <WriteData>
   3efb4:	str	r0, [sp, #28]
   3efb8:	asr	r1, r0, #31
   3efbc:	add	r1, r0, r1, lsr #29
   3efc0:	bic	r1, r1, #7
   3efc4:	subs	r0, r0, r1
   3efc8:	beq	3efe8 <WriteType+0x1b4>
   3efcc:	sub	r5, r0, #1
   3efd0:	ldr	r1, [r4]
   3efd4:	mov	r0, #0
   3efd8:	bl	1a08 <fputc@plt>
   3efdc:	add	r5, r5, #1
   3efe0:	cmp	r5, #7
   3efe4:	blt	3efd0 <WriteType+0x19c>
   3efe8:	sub	sp, fp, #28
   3efec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eff0:	ldr	r0, [sl, #52]	; 0x34
   3eff4:	ldr	r9, [r0, #4]
   3eff8:	cmp	r9, #0
   3effc:	beq	3f304 <WriteType+0x4d0>
   3f000:	ldr	r1, [sl, #40]	; 0x28
   3f004:	str	r1, [sp, #4]
   3f008:	ldr	r8, [r0, #8]
   3f00c:	mov	r5, #0
   3f010:	mov	r7, #0
   3f014:	mov	r6, r5
   3f018:	ldr	r0, [r8, r7, lsl #2]
   3f01c:	bl	196c <strlen@plt>
   3f020:	cmp	r0, r5
   3f024:	movhi	r5, r0
   3f028:	add	r7, r7, #1
   3f02c:	cmp	r9, r7
   3f030:	bne	3f014 <WriteType+0x1e0>
   3f034:	cmp	r0, r6
   3f038:	movhi	r6, r0
   3f03c:	add	r0, r6, #1
   3f040:	mul	r0, r9, r0
   3f044:	add	r1, r0, r9
   3f048:	add	r5, r5, #1
   3f04c:	tst	r0, #7
   3f050:	mov	r0, r1
   3f054:	bne	3f044 <WriteType+0x210>
   3f058:	movw	r0, #5
   3f05c:	movt	r0, #4
   3f060:	str	r0, [sp, #12]
   3f064:	str	r5, [sp, #20]
   3f068:	ldr	r3, [r4]
   3f06c:	add	r0, sp, #12
   3f070:	mov	r1, #4
   3f074:	mov	r2, #1
   3f078:	bl	18c4 <fwrite@plt>
   3f07c:	ldr	r3, [r4]
   3f080:	add	r0, sp, #20
   3f084:	mov	r1, #4
   3f088:	mov	r2, #1
   3f08c:	bl	18c4 <fwrite@plt>
   3f090:	ldr	r3, [r4]
   3f094:	sub	r0, fp, #30
   3f098:	mov	r1, #2
   3f09c:	mov	r2, #1
   3f0a0:	bl	18c4 <fwrite@plt>
   3f0a4:	ldr	r1, [r4]
   3f0a8:	mov	r8, #0
   3f0ac:	mov	r0, #0
   3f0b0:	bl	1a08 <fputc@plt>
   3f0b4:	ldr	r1, [r4]
   3f0b8:	mov	r0, #0
   3f0bc:	bl	1a08 <fputc@plt>
   3f0c0:	ldr	r5, [sp, #20]
   3f0c4:	mul	r0, r5, r9
   3f0c8:	str	r0, [sp, #28]
   3f0cc:	ldr	r3, [r4]
   3f0d0:	add	r0, sp, #28
   3f0d4:	mov	r1, #4
   3f0d8:	mov	r2, #1
   3f0dc:	bl	18c4 <fwrite@plt>
   3f0e0:	mov	r0, r5
   3f0e4:	mov	r1, #1
   3f0e8:	bl	17b0 <calloc@plt>
   3f0ec:	mov	r6, r0
   3f0f0:	cmp	r9, #0
   3f0f4:	beq	3f164 <WriteType+0x330>
   3f0f8:	str	r9, [sp, #8]
   3f0fc:	ldr	r0, [sl, #52]	; 0x34
   3f100:	ldr	r0, [r0, #8]
   3f104:	ldr	r7, [r0, r8, lsl #2]
   3f108:	mov	r0, r7
   3f10c:	bl	196c <strlen@plt>
   3f110:	mov	r9, sl
   3f114:	mov	sl, r6
   3f118:	mov	r6, r5
   3f11c:	mov	r5, r0
   3f120:	ldr	r3, [r4]
   3f124:	mov	r0, r7
   3f128:	mov	r1, #1
   3f12c:	mov	r2, r5
   3f130:	bl	18c4 <fwrite@plt>
   3f134:	sub	r2, r6, r5
   3f138:	mov	r5, r6
   3f13c:	mov	r6, sl
   3f140:	mov	sl, r9
   3f144:	ldr	r9, [sp, #8]
   3f148:	ldr	r3, [r4]
   3f14c:	mov	r0, r6
   3f150:	mov	r1, #1
   3f154:	bl	18c4 <fwrite@plt>
   3f158:	add	r8, r8, #1
   3f15c:	cmp	r9, r8
   3f160:	bne	3f0fc <WriteType+0x2c8>
   3f164:	mov	r0, r6
   3f168:	bl	181c <free@plt>
   3f16c:	ldr	r1, [sp, #24]
   3f170:	add	r0, sp, #16
   3f174:	mov	r2, r9
   3f178:	bl	4481c <SafeMul>
   3f17c:	ldr	r0, [sp, #16]
   3f180:	cmp	r0, #0
   3f184:	ldr	r6, [sp, #4]
   3f188:	beq	3efe8 <WriteType+0x1b4>
   3f18c:	mov	r5, #0
   3f190:	ldr	r1, [r6, r5, lsl #2]
   3f194:	mov	r0, r4
   3f198:	bl	42128 <WriteStructField>
   3f19c:	add	r5, r5, #1
   3f1a0:	ldr	r0, [sp, #16]
   3f1a4:	cmp	r5, r0
   3f1a8:	bcc	3f190 <WriteType+0x35c>
   3f1ac:	b	3efe8 <WriteType+0x1b4>
   3f1b0:	ldr	r3, [sl, #8]
   3f1b4:	ldr	r1, [sl, #40]	; 0x28
   3f1b8:	ldr	r2, [sp, #24]
   3f1bc:	mov	r0, r4
   3f1c0:	bl	41ad4 <WriteCharData>
   3f1c4:	str	r0, [sp, #28]
   3f1c8:	sub	sp, fp, #28
   3f1cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f1d0:	ldr	r5, [sl, #40]	; 0x28
   3f1d4:	ldmib	r5, {r1, r2}
   3f1d8:	mov	r0, r4
   3f1dc:	mov	r3, #5
   3f1e0:	bl	41a30 <WriteData>
   3f1e4:	str	r0, [sp, #28]
   3f1e8:	asr	r1, r0, #31
   3f1ec:	add	r1, r0, r1, lsr #29
   3f1f0:	bic	r1, r1, #7
   3f1f4:	subs	r0, r0, r1
   3f1f8:	beq	3f218 <WriteType+0x3e4>
   3f1fc:	sub	r6, r0, #1
   3f200:	ldr	r1, [r4]
   3f204:	mov	r0, #0
   3f208:	bl	1a08 <fputc@plt>
   3f20c:	add	r6, r6, #1
   3f210:	cmp	r6, #7
   3f214:	blt	3f200 <WriteType+0x3cc>
   3f218:	ldr	r1, [r5, #12]
   3f21c:	ldr	r2, [r5, #16]
   3f220:	mov	r0, r4
   3f224:	mov	r3, #5
   3f228:	bl	41a30 <WriteData>
   3f22c:	str	r0, [sp, #28]
   3f230:	asr	r1, r0, #31
   3f234:	add	r1, r0, r1, lsr #29
   3f238:	bic	r1, r1, #7
   3f23c:	subs	r0, r0, r1
   3f240:	beq	3f260 <WriteType+0x42c>
   3f244:	sub	r6, r0, #1
   3f248:	ldr	r1, [r4]
   3f24c:	mov	r0, #0
   3f250:	bl	1a08 <fputc@plt>
   3f254:	add	r6, r6, #1
   3f258:	cmp	r6, #7
   3f25c:	blt	3f248 <WriteType+0x414>
   3f260:	ldr	r0, [sl, #20]
   3f264:	cmp	r0, #0
   3f268:	beq	3f390 <WriteType+0x55c>
   3f26c:	ldr	r3, [sl, #8]
   3f270:	ldr	r2, [r5, #20]
   3f274:	ldr	r6, [r5, #24]
   3f278:	ldr	r1, [r6]
   3f27c:	mov	r0, r4
   3f280:	bl	41a30 <WriteData>
   3f284:	str	r0, [sp, #28]
   3f288:	asr	r1, r0, #31
   3f28c:	add	r1, r0, r1, lsr #29
   3f290:	bic	r1, r1, #7
   3f294:	subs	r0, r0, r1
   3f298:	beq	3f2b8 <WriteType+0x484>
   3f29c:	sub	r7, r0, #1
   3f2a0:	ldr	r1, [r4]
   3f2a4:	mov	r0, #0
   3f2a8:	bl	1a08 <fputc@plt>
   3f2ac:	add	r7, r7, #1
   3f2b0:	cmp	r7, #7
   3f2b4:	blt	3f2a0 <WriteType+0x46c>
   3f2b8:	ldr	r3, [sl, #8]
   3f2bc:	ldr	r2, [r5, #20]
   3f2c0:	ldr	r1, [r6, #4]
   3f2c4:	mov	r0, r4
   3f2c8:	bl	41a30 <WriteData>
   3f2cc:	str	r0, [sp, #28]
   3f2d0:	asr	r1, r0, #31
   3f2d4:	add	r1, r0, r1, lsr #29
   3f2d8:	bic	r1, r1, #7
   3f2dc:	subs	r0, r0, r1
   3f2e0:	beq	3efe8 <WriteType+0x1b4>
   3f2e4:	sub	r5, r0, #1
   3f2e8:	ldr	r1, [r4]
   3f2ec:	mov	r0, #0
   3f2f0:	bl	1a08 <fputc@plt>
   3f2f4:	add	r5, r5, #1
   3f2f8:	cmp	r5, #7
   3f2fc:	blt	3f2e8 <WriteType+0x4b4>
   3f300:	b	3efe8 <WriteType+0x1b4>
   3f304:	movw	r0, #5
   3f308:	movt	r0, #4
   3f30c:	str	r0, [sp, #12]
   3f310:	ldr	r3, [r4]
   3f314:	add	r0, sp, #12
   3f318:	mov	r5, #1
   3f31c:	mov	r1, #4
   3f320:	mov	r2, #1
   3f324:	bl	18c4 <fwrite@plt>
   3f328:	str	r5, [sp, #20]
   3f32c:	ldr	r3, [r4]
   3f330:	add	r0, sp, #20
   3f334:	mov	r1, #4
   3f338:	mov	r2, #1
   3f33c:	bl	18c4 <fwrite@plt>
   3f340:	ldr	r3, [r4]
   3f344:	sub	r0, fp, #30
   3f348:	mov	r1, #2
   3f34c:	mov	r2, #1
   3f350:	bl	18c4 <fwrite@plt>
   3f354:	ldr	r1, [r4]
   3f358:	mov	r5, #0
   3f35c:	mov	r0, #0
   3f360:	bl	1a08 <fputc@plt>
   3f364:	ldr	r1, [r4]
   3f368:	mov	r0, #0
   3f36c:	bl	1a08 <fputc@plt>
   3f370:	str	r5, [sp, #28]
   3f374:	ldr	r3, [r4]
   3f378:	add	r0, sp, #28
   3f37c:	mov	r1, #4
   3f380:	mov	r2, #1
   3f384:	bl	18c4 <fwrite@plt>
   3f388:	sub	sp, fp, #28
   3f38c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f390:	ldr	r3, [sl, #8]
   3f394:	ldr	r2, [r5, #20]
   3f398:	ldr	r1, [r5, #24]
   3f39c:	mov	r0, r4
   3f3a0:	bl	41a30 <WriteData>
   3f3a4:	str	r0, [sp, #28]
   3f3a8:	asr	r1, r0, #31
   3f3ac:	add	r1, r0, r1, lsr #29
   3f3b0:	bic	r1, r1, #7
   3f3b4:	subs	r0, r0, r1
   3f3b8:	beq	3efe8 <WriteType+0x1b4>
   3f3bc:	sub	r5, r0, #1
   3f3c0:	ldr	r1, [r4]
   3f3c4:	mov	r0, #0
   3f3c8:	bl	1a08 <fputc@plt>
   3f3cc:	add	r5, r5, #1
   3f3d0:	cmp	r5, #7
   3f3d4:	blt	3f3c0 <WriteType+0x58c>
   3f3d8:	b	3efe8 <WriteType+0x1b4>
   3f3dc:	.word	0x0000a85c

0003f3e0 <GetMatrixMaxBufSize>:
   3f3e0:	cmp	r0, #0
   3f3e4:	moveq	r0, #0
   3f3e8:	bxeq	lr
   3f3ec:	push	{r4, r5, fp, lr}
   3f3f0:	add	fp, sp, #8
   3f3f4:	mov	r4, r0
   3f3f8:	ldr	r0, [r0, #36]	; 0x24
   3f3fc:	mov	r5, #24
   3f400:	cmp	r0, #0
   3f404:	beq	3f424 <GetMatrixMaxBufSize+0x44>
   3f408:	bl	196c <strlen@plt>
   3f40c:	cmp	r0, #5
   3f410:	bcc	3f424 <GetMatrixMaxBufSize+0x44>
   3f414:	ands	r1, r0, #7
   3f418:	rsb	r1, r1, #8
   3f41c:	addne	r0, r0, r1
   3f420:	add	r5, r0, #24
   3f424:	mov	r0, r4
   3f428:	bl	42600 <GetTypeBufSize>
   3f42c:	add	r0, r0, r5
   3f430:	pop	{r4, r5, fp, pc}

0003f434 <WriteCompressedType>:
   3f434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f438:	add	fp, sp, #28
   3f43c:	sub	sp, sp, #44	; 0x2c
   3f440:	sub	sp, sp, #4096	; 0x1000
   3f444:	mov	r4, r2
   3f448:	mov	sl, r1
   3f44c:	mov	r5, r0
   3f450:	add	r6, sp, #40	; 0x28
   3f454:	mov	r7, #0
   3f458:	mov	r0, r6
   3f45c:	mov	r1, #0
   3f460:	mov	r2, #2048	; 0x800
   3f464:	bl	19a8 <memset@plt>
   3f468:	mov	r0, #1
   3f46c:	str	r0, [sp, #36]	; 0x24
   3f470:	ldr	r0, [sl, #16]
   3f474:	cmp	r0, #0
   3f478:	beq	3f91c <WriteCompressedType+0x4e8>
   3f47c:	add	r1, sp, #36	; 0x24
   3f480:	mov	r0, sl
   3f484:	bl	4479c <SafeMulDims>
   3f488:	ldr	r0, [sl, #16]
   3f48c:	sub	r1, r0, #6
   3f490:	cmp	r1, #10
   3f494:	bcs	3f500 <WriteCompressedType+0xcc>
   3f498:	ldr	r0, [sl, #20]
   3f49c:	ldr	r2, [sl, #40]	; 0x28
   3f4a0:	cmp	r0, #0
   3f4a4:	beq	3f590 <WriteCompressedType+0x15c>
   3f4a8:	mov	r7, r5
   3f4ac:	ldr	r5, [pc, #1140]	; 3f928 <WriteCompressedType+0x4f4>
   3f4b0:	add	r5, pc, r5
   3f4b4:	cmp	r2, #0
   3f4b8:	movne	r5, r2
   3f4bc:	ldr	r2, [r5]
   3f4c0:	ldr	r0, [sl, #8]
   3f4c4:	ldr	r3, [sp, #36]	; 0x24
   3f4c8:	str	r0, [sp]
   3f4cc:	mov	r0, r7
   3f4d0:	mov	r1, r4
   3f4d4:	bl	428ec <WriteCompressedData>
   3f4d8:	mov	r6, r0
   3f4dc:	ldr	r2, [r5, #4]
   3f4e0:	ldr	r0, [sl, #8]
   3f4e4:	ldr	r3, [sp, #36]	; 0x24
   3f4e8:	str	r0, [sp]
   3f4ec:	mov	r0, r7
   3f4f0:	mov	r1, r4
   3f4f4:	bl	428ec <WriteCompressedData>
   3f4f8:	add	r7, r0, r6
   3f4fc:	b	3f91c <WriteCompressedType+0x4e8>
   3f500:	sub	r0, r0, #1
   3f504:	cmp	r0, #4
   3f508:	bhi	3f91c <WriteCompressedType+0x4e8>
   3f50c:	add	r1, pc, #8
   3f510:	ldr	r0, [r1, r0, lsl #2]
   3f514:	str	r5, [sp, #20]
   3f518:	add	pc, r1, r0
   3f51c:	.word	0x00000014
   3f520:	.word	0x00000094
   3f524:	.word	0x00000400
   3f528:	.word	0x000002b0
   3f52c:	.word	0x000002d4
   3f530:	ldr	r0, [sl]
   3f534:	cmp	r0, #0
   3f538:	beq	3f91c <WriteCompressedType+0x4e8>
   3f53c:	ldr	r8, [sl, #40]	; 0x28
   3f540:	cmp	r8, #0
   3f544:	ldrne	r1, [sl, #12]
   3f548:	cmpne	r1, #0
   3f54c:	beq	3f91c <WriteCompressedType+0x4e8>
   3f550:	udiv	r2, r0, r1
   3f554:	str	r2, [sp, #36]	; 0x24
   3f558:	cmp	r1, r0
   3f55c:	bhi	3f91c <WriteCompressedType+0x4e8>
   3f560:	mov	r7, #0
   3f564:	mov	r6, r5
   3f568:	mov	r5, #0
   3f56c:	ldr	r1, [r8, r5, lsl #2]
   3f570:	mov	r0, r6
   3f574:	mov	r2, r4
   3f578:	bl	42c84 <WriteCompressedCellArrayField>
   3f57c:	add	r5, r5, #1
   3f580:	ldr	r0, [sp, #36]	; 0x24
   3f584:	cmp	r5, r0
   3f588:	bcc	3f56c <WriteCompressedType+0x138>
   3f58c:	b	3f91c <WriteCompressedType+0x4e8>
   3f590:	ldr	r0, [sl, #8]
   3f594:	ldr	r3, [sp, #36]	; 0x24
   3f598:	str	r0, [sp]
   3f59c:	mov	r0, r5
   3f5a0:	mov	r1, r4
   3f5a4:	bl	428ec <WriteCompressedData>
   3f5a8:	mov	r7, r0
   3f5ac:	b	3f91c <WriteCompressedType+0x4e8>
   3f5b0:	ldr	r0, [sl, #52]	; 0x34
   3f5b4:	ldr	r9, [r0, #4]
   3f5b8:	cmp	r9, #0
   3f5bc:	beq	3f888 <WriteCompressedType+0x454>
   3f5c0:	ldr	r1, [sl, #40]	; 0x28
   3f5c4:	str	r1, [sp, #4]
   3f5c8:	ldr	r8, [r0, #8]
   3f5cc:	mov	r6, #0
   3f5d0:	mov	r5, #0
   3f5d4:	mov	r7, r6
   3f5d8:	ldr	r0, [r8, r5, lsl #2]
   3f5dc:	bl	196c <strlen@plt>
   3f5e0:	cmp	r0, r6
   3f5e4:	movhi	r6, r0
   3f5e8:	add	r5, r5, #1
   3f5ec:	cmp	r9, r5
   3f5f0:	bne	3f5d4 <WriteCompressedType+0x1a0>
   3f5f4:	cmp	r0, r7
   3f5f8:	mov	r1, r7
   3f5fc:	movhi	r1, r0
   3f600:	add	r1, r1, #1
   3f604:	mul	r2, r9, r1
   3f608:	mov	r3, #0
   3f60c:	ldr	r5, [sp, #20]
   3f610:	add	r1, r3, r9
   3f614:	add	r3, r2, r3
   3f618:	add	r6, r6, #1
   3f61c:	tst	r3, #7
   3f620:	mov	r3, r1
   3f624:	bne	3f610 <WriteCompressedType+0x1dc>
   3f628:	str	r6, [sp, #44]	; 0x2c
   3f62c:	movw	r2, #5
   3f630:	movt	r2, #4
   3f634:	str	r2, [sp, #40]	; 0x28
   3f638:	mov	r2, #1
   3f63c:	str	r2, [sp, #48]	; 0x30
   3f640:	cmp	r0, r7
   3f644:	movhi	r7, r0
   3f648:	str	r9, [sp, #16]
   3f64c:	mla	r0, r9, r7, r1
   3f650:	str	r0, [sp, #52]	; 0x34
   3f654:	mov	r0, r6
   3f658:	mov	r1, #1
   3f65c:	bl	17b0 <calloc@plt>
   3f660:	str	r0, [sp, #12]
   3f664:	mov	r0, #16
   3f668:	add	r1, sp, #40	; 0x28
   3f66c:	str	r1, [r4]
   3f670:	str	r0, [r4, #4]
   3f674:	mov	r7, #0
   3f678:	mov	r9, #2048	; 0x800
   3f67c:	sub	r8, fp, #2080	; 0x820
   3f680:	str	r8, [r4, #12]
   3f684:	str	r9, [r4, #16]
   3f688:	mov	r0, r4
   3f68c:	mov	r1, #0
   3f690:	bl	18ac <deflate@plt>
   3f694:	ldr	r3, [r5]
   3f698:	ldr	r0, [r4, #16]
   3f69c:	rsb	r2, r0, #2048	; 0x800
   3f6a0:	mov	r0, r8
   3f6a4:	mov	r1, #1
   3f6a8:	bl	18c4 <fwrite@plt>
   3f6ac:	add	r7, r0, r7
   3f6b0:	ldr	r0, [r4, #16]
   3f6b4:	cmp	r0, #0
   3f6b8:	beq	3f680 <WriteCompressedType+0x24c>
   3f6bc:	ldr	r0, [sp, #16]
   3f6c0:	cmp	r0, #0
   3f6c4:	beq	3f778 <WriteCompressedType+0x344>
   3f6c8:	str	sl, [sp, #8]
   3f6cc:	mov	r1, #0
   3f6d0:	mov	sl, #2048	; 0x800
   3f6d4:	ldr	r9, [sp, #12]
   3f6d8:	str	r1, [sp, #28]
   3f6dc:	ldr	r0, [sp, #8]
   3f6e0:	ldr	r5, [r0, #52]	; 0x34
   3f6e4:	ldr	r0, [r5, #8]
   3f6e8:	ldr	r0, [r0, r1, lsl #2]
   3f6ec:	bl	196c <strlen@plt>
   3f6f0:	str	r0, [sp, #24]
   3f6f4:	mov	r0, r9
   3f6f8:	mov	r1, #0
   3f6fc:	mov	r2, r6
   3f700:	bl	19a8 <memset@plt>
   3f704:	ldr	r0, [r5, #8]
   3f708:	ldr	r5, [sp, #20]
   3f70c:	ldr	r1, [sp, #28]
   3f710:	ldr	r1, [r0, r1, lsl #2]
   3f714:	mov	r0, r9
   3f718:	ldr	r2, [sp, #24]
   3f71c:	bl	1834 <memcpy@plt>
   3f720:	str	r9, [r4]
   3f724:	str	r6, [r4, #4]
   3f728:	str	r8, [r4, #12]
   3f72c:	str	sl, [r4, #16]
   3f730:	mov	r0, r4
   3f734:	mov	r1, #0
   3f738:	bl	18ac <deflate@plt>
   3f73c:	ldr	r3, [r5]
   3f740:	ldr	r0, [r4, #16]
   3f744:	rsb	r2, r0, #2048	; 0x800
   3f748:	mov	r0, r8
   3f74c:	mov	r1, #1
   3f750:	bl	18c4 <fwrite@plt>
   3f754:	add	r7, r0, r7
   3f758:	ldr	r0, [r4, #16]
   3f75c:	cmp	r0, #0
   3f760:	beq	3f728 <WriteCompressedType+0x2f4>
   3f764:	ldr	r1, [sp, #28]
   3f768:	add	r1, r1, #1
   3f76c:	ldr	r0, [sp, #16]
   3f770:	cmp	r1, r0
   3f774:	bne	3f6d8 <WriteCompressedType+0x2a4>
   3f778:	ldr	r0, [sp, #12]
   3f77c:	bl	181c <free@plt>
   3f780:	ldr	r1, [sp, #36]	; 0x24
   3f784:	add	r0, sp, #32
   3f788:	ldr	r2, [sp, #16]
   3f78c:	bl	4481c <SafeMul>
   3f790:	ldr	r0, [sp, #32]
   3f794:	cmp	r0, #0
   3f798:	beq	3f91c <WriteCompressedType+0x4e8>
   3f79c:	mov	r6, #0
   3f7a0:	ldr	r8, [sp, #4]
   3f7a4:	ldr	r1, [r8, r6, lsl #2]
   3f7a8:	mov	r0, r5
   3f7ac:	mov	r2, r4
   3f7b0:	bl	42d58 <WriteCompressedStructField>
   3f7b4:	add	r7, r0, r7
   3f7b8:	add	r6, r6, #1
   3f7bc:	ldr	r0, [sp, #32]
   3f7c0:	cmp	r6, r0
   3f7c4:	bcc	3f7a4 <WriteCompressedType+0x370>
   3f7c8:	b	3f91c <WriteCompressedType+0x4e8>
   3f7cc:	ldr	r0, [sl, #8]
   3f7d0:	ldr	r2, [sl, #40]	; 0x28
   3f7d4:	ldr	r3, [sp, #36]	; 0x24
   3f7d8:	str	r0, [sp]
   3f7dc:	mov	r0, r5
   3f7e0:	mov	r1, r4
   3f7e4:	bl	42a6c <WriteCompressedCharData>
   3f7e8:	mov	r7, r0
   3f7ec:	b	3f91c <WriteCompressedType+0x4e8>
   3f7f0:	ldr	r7, [sl, #40]	; 0x28
   3f7f4:	ldmib	r7, {r2, r3}
   3f7f8:	mov	r5, #5
   3f7fc:	str	r5, [sp]
   3f800:	ldr	r0, [sp, #20]
   3f804:	mov	r1, r4
   3f808:	bl	428ec <WriteCompressedData>
   3f80c:	mov	r6, r0
   3f810:	ldr	r2, [r7, #12]
   3f814:	ldr	r3, [r7, #16]
   3f818:	str	r5, [sp]
   3f81c:	ldr	r5, [sp, #20]
   3f820:	mov	r0, r5
   3f824:	mov	r1, r4
   3f828:	bl	428ec <WriteCompressedData>
   3f82c:	add	r8, r0, r6
   3f830:	ldr	r0, [sl, #20]
   3f834:	cmp	r0, #0
   3f838:	beq	3f8fc <WriteCompressedType+0x4c8>
   3f83c:	ldr	r3, [r7, #20]
   3f840:	mov	r6, r5
   3f844:	ldr	r5, [r7, #24]
   3f848:	ldr	r2, [r5]
   3f84c:	ldr	r0, [sl, #8]
   3f850:	str	r0, [sp]
   3f854:	mov	r0, r6
   3f858:	mov	r1, r4
   3f85c:	bl	428ec <WriteCompressedData>
   3f860:	ldr	r2, [r5, #4]
   3f864:	ldr	r3, [r7, #20]
   3f868:	ldr	r1, [sl, #8]
   3f86c:	str	r1, [sp]
   3f870:	add	r5, r0, r8
   3f874:	mov	r0, r6
   3f878:	mov	r1, r4
   3f87c:	bl	428ec <WriteCompressedData>
   3f880:	add	r7, r5, r0
   3f884:	b	3f91c <WriteCompressedType+0x4e8>
   3f888:	mov	r0, #1
   3f88c:	str	r0, [sp, #44]	; 0x2c
   3f890:	movw	r1, #5
   3f894:	movt	r1, #4
   3f898:	str	r1, [sp, #40]	; 0x28
   3f89c:	str	r0, [sp, #48]	; 0x30
   3f8a0:	mov	r7, #0
   3f8a4:	str	r7, [sp, #52]	; 0x34
   3f8a8:	mov	r0, #16
   3f8ac:	str	r6, [r4]
   3f8b0:	str	r0, [r4, #4]
   3f8b4:	mov	r8, #2048	; 0x800
   3f8b8:	sub	r6, fp, #2080	; 0x820
   3f8bc:	str	r6, [r4, #12]
   3f8c0:	str	r8, [r4, #16]
   3f8c4:	mov	r0, r4
   3f8c8:	mov	r1, #0
   3f8cc:	bl	18ac <deflate@plt>
   3f8d0:	ldr	r3, [r5]
   3f8d4:	ldr	r0, [r4, #16]
   3f8d8:	rsb	r2, r0, #2048	; 0x800
   3f8dc:	mov	r0, r6
   3f8e0:	mov	r1, #1
   3f8e4:	bl	18c4 <fwrite@plt>
   3f8e8:	add	r7, r0, r7
   3f8ec:	ldr	r0, [r4, #16]
   3f8f0:	cmp	r0, #0
   3f8f4:	beq	3f8bc <WriteCompressedType+0x488>
   3f8f8:	b	3f91c <WriteCompressedType+0x4e8>
   3f8fc:	ldr	r3, [r7, #20]
   3f900:	ldr	r2, [r7, #24]
   3f904:	ldr	r0, [sl, #8]
   3f908:	str	r0, [sp]
   3f90c:	mov	r0, r5
   3f910:	mov	r1, r4
   3f914:	bl	428ec <WriteCompressedData>
   3f918:	add	r7, r0, r8
   3f91c:	mov	r0, r7
   3f920:	sub	sp, fp, #28
   3f924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f928:	.word	0x0000a230

0003f92c <Mat_VarReadNextInfo5>:
   3f92c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f930:	add	fp, sp, #28
   3f934:	sub	sp, sp, #84	; 0x54
   3f938:	mov	r4, #0
   3f93c:	cmp	r0, #0
   3f940:	beq	3ffd4 <Mat_VarReadNextInfo5+0x6a8>
   3f944:	mov	r5, r0
   3f948:	ldr	r0, [r0]
   3f94c:	bl	1858 <ftell@plt>
   3f950:	cmn	r0, #1
   3f954:	beq	3fa4c <Mat_VarReadNextInfo5+0x120>
   3f958:	mov	r9, r0
   3f95c:	ldr	r3, [r5]
   3f960:	sub	r0, fp, #32
   3f964:	mov	r1, #4
   3f968:	mov	r2, #1
   3f96c:	bl	18d0 <fread@plt>
   3f970:	cmp	r0, #0
   3f974:	beq	3ffd4 <Mat_VarReadNextInfo5+0x6a8>
   3f978:	ldr	r3, [r5]
   3f97c:	sub	r0, fp, #36	; 0x24
   3f980:	mov	r1, #4
   3f984:	mov	r2, #1
   3f988:	bl	18d0 <fread@plt>
   3f98c:	ldr	r0, [r5, #20]
   3f990:	cmp	r0, #0
   3f994:	beq	3f9a8 <Mat_VarReadNextInfo5+0x7c>
   3f998:	sub	r0, fp, #32
   3f99c:	bl	1c28 <Mat_int32Swap>
   3f9a0:	sub	r0, fp, #36	; 0x24
   3f9a4:	bl	1c28 <Mat_int32Swap>
   3f9a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3f9ac:	cmp	r1, #14
   3f9b0:	beq	3fa60 <Mat_VarReadNextInfo5+0x134>
   3f9b4:	cmp	r1, #15
   3f9b8:	bne	3fb60 <Mat_VarReadNextInfo5+0x234>
   3f9bc:	vmov.i32	q8, #0	; 0x00000000
   3f9c0:	mov	r0, #48	; 0x30
   3f9c4:	add	r1, sp, #8
   3f9c8:	mov	r2, r1
   3f9cc:	vst1.64	{d16-d17}, [r2], r0
   3f9d0:	vst1.64	{d16-d17}, [r2]
   3f9d4:	add	r0, r1, #32
   3f9d8:	vst1.64	{d16-d17}, [r0]
   3f9dc:	add	r0, r1, #16
   3f9e0:	vst1.64	{d16-d17}, [r0]
   3f9e4:	bl	18b8 <Mat_VarCalloc@plt>
   3f9e8:	mov	r4, r0
   3f9ec:	mov	r0, #1
   3f9f0:	str	r0, [r4, #48]	; 0x30
   3f9f4:	mov	r0, #1
   3f9f8:	mov	r1, #56	; 0x38
   3f9fc:	bl	17b0 <calloc@plt>
   3fa00:	ldr	r1, [r4, #52]	; 0x34
   3fa04:	str	r0, [r1, #12]
   3fa08:	ldr	r1, [pc, #1492]	; 3ffe4 <Mat_VarReadNextInfo5+0x6b8>
   3fa0c:	add	r1, pc, r1
   3fa10:	mov	r2, #56	; 0x38
   3fa14:	bl	19f0 <inflateInit_@plt>
   3fa18:	cmp	r0, #0
   3fa1c:	beq	3fbc0 <Mat_VarReadNextInfo5+0x294>
   3fa20:	mov	r6, r0
   3fa24:	mov	r0, r4
   3fa28:	bl	1930 <Mat_VarFree@plt>
   3fa2c:	mov	r0, r6
   3fa30:	bl	18a0 <zError@plt>
   3fa34:	mov	r1, r0
   3fa38:	ldr	r0, [pc, #1448]	; 3ffe8 <Mat_VarReadNextInfo5+0x6bc>
   3fa3c:	add	r0, pc, r0
   3fa40:	bl	19cc <Mat_Critical@plt>
   3fa44:	mov	r4, #0
   3fa48:	b	3ffd4 <Mat_VarReadNextInfo5+0x6a8>
   3fa4c:	ldr	r0, [pc, #1420]	; 3ffe0 <Mat_VarReadNextInfo5+0x6b4>
   3fa50:	add	r0, pc, r0
   3fa54:	bl	19cc <Mat_Critical@plt>
   3fa58:	mov	r4, #0
   3fa5c:	b	3ffd4 <Mat_VarReadNextInfo5+0x6a8>
   3fa60:	bl	18b8 <Mat_VarCalloc@plt>
   3fa64:	mov	r4, r0
   3fa68:	ldr	r3, [r5]
   3fa6c:	add	r7, sp, #8
   3fa70:	mov	r0, r7
   3fa74:	mov	r1, #4
   3fa78:	mov	r2, #6
   3fa7c:	bl	18d0 <fread@plt>
   3fa80:	ldr	r0, [r5, #20]
   3fa84:	cmp	r0, #0
   3fa88:	beq	3fabc <Mat_VarReadNextInfo5+0x190>
   3fa8c:	mov	r0, r7
   3fa90:	bl	1c3c <Mat_uint32Swap>
   3fa94:	add	r0, r7, #4
   3fa98:	bl	1c3c <Mat_uint32Swap>
   3fa9c:	add	r0, r7, #8
   3faa0:	bl	1c3c <Mat_uint32Swap>
   3faa4:	add	r0, r7, #12
   3faa8:	bl	1c3c <Mat_uint32Swap>
   3faac:	add	r0, r7, #16
   3fab0:	bl	1c3c <Mat_uint32Swap>
   3fab4:	add	r0, r7, #20
   3fab8:	bl	1c3c <Mat_uint32Swap>
   3fabc:	ldr	r0, [sp, #8]
   3fac0:	cmp	r0, #6
   3fac4:	bne	3faf8 <Mat_VarReadNextInfo5+0x1cc>
   3fac8:	ldr	r0, [sp, #16]
   3facc:	and	r1, r0, #2048	; 0x800
   3fad0:	and	r2, r0, #1024	; 0x400
   3fad4:	and	r3, r0, #512	; 0x200
   3fad8:	uxtb	r0, r0
   3fadc:	cmp	r0, #18
   3fae0:	movcs	r0, #0
   3fae4:	add	ip, r4, #16
   3fae8:	stm	ip, {r0, r1, r2, r3}
   3faec:	cmp	r0, #5
   3faf0:	ldreq	r0, [sp, #20]
   3faf4:	streq	r0, [r4]
   3faf8:	ldr	r2, [sp, #24]
   3fafc:	ldr	r3, [sp, #28]
   3fb00:	mov	r0, r5
   3fb04:	mov	r1, r4
   3fb08:	bl	41848 <ReadRankDims>
   3fb0c:	ldr	r3, [r5]
   3fb10:	add	r8, sp, #8
   3fb14:	mov	r0, r8
   3fb18:	mov	r1, #4
   3fb1c:	mov	r2, #2
   3fb20:	bl	18d0 <fread@plt>
   3fb24:	ldr	r0, [r5, #20]
   3fb28:	cmp	r0, #0
   3fb2c:	beq	3fb38 <Mat_VarReadNextInfo5+0x20c>
   3fb30:	add	r0, sp, #8
   3fb34:	bl	1c3c <Mat_uint32Swap>
   3fb38:	ldr	r0, [sp, #8]
   3fb3c:	cmp	r0, #1
   3fb40:	bne	3fb70 <Mat_VarReadNextInfo5+0x244>
   3fb44:	ldr	r0, [r5, #20]
   3fb48:	cmp	r0, #0
   3fb4c:	beq	3fd58 <Mat_VarReadNextInfo5+0x42c>
   3fb50:	add	r0, r8, #4
   3fb54:	bl	1c3c <Mat_uint32Swap>
   3fb58:	mov	r6, r0
   3fb5c:	b	3fd5c <Mat_VarReadNextInfo5+0x430>
   3fb60:	ldr	r0, [pc, #1168]	; 3fff8 <Mat_VarReadNextInfo5+0x6cc>
   3fb64:	add	r0, pc, r0
   3fb68:	bl	19cc <Mat_Critical@plt>
   3fb6c:	b	3ffd4 <Mat_VarReadNextInfo5+0x6a8>
   3fb70:	lsr	r7, r0, #16
   3fb74:	cmp	r7, #4
   3fb78:	bhi	3fdec <Mat_VarReadNextInfo5+0x4c0>
   3fb7c:	uxth	r0, r0
   3fb80:	cmp	r0, #1
   3fb84:	bne	3fdec <Mat_VarReadNextInfo5+0x4c0>
   3fb88:	cmp	r7, #0
   3fb8c:	beq	3fdec <Mat_VarReadNextInfo5+0x4c0>
   3fb90:	add	r0, r7, #1
   3fb94:	bl	18e8 <malloc@plt>
   3fb98:	str	r0, [r4, #36]	; 0x24
   3fb9c:	cmp	r0, #0
   3fba0:	beq	3fdec <Mat_VarReadNextInfo5+0x4c0>
   3fba4:	add	r1, r8, #4
   3fba8:	mov	r2, r7
   3fbac:	bl	1834 <memcpy@plt>
   3fbb0:	ldr	r0, [r4, #36]	; 0x24
   3fbb4:	mov	r1, #0
   3fbb8:	strb	r1, [r0, r7]
   3fbbc:	b	3fdec <Mat_VarReadNextInfo5+0x4c0>
   3fbc0:	add	r7, sp, #8
   3fbc4:	mov	r0, r5
   3fbc8:	mov	r1, r4
   3fbcc:	mov	r2, r7
   3fbd0:	bl	271c <InflateVarTag>
   3fbd4:	mov	r6, r0
   3fbd8:	ldr	r0, [r5, #20]
   3fbdc:	cmp	r0, #0
   3fbe0:	beq	3fbf4 <Mat_VarReadNextInfo5+0x2c8>
   3fbe4:	mov	r0, r7
   3fbe8:	bl	1c3c <Mat_uint32Swap>
   3fbec:	orr	r0, r7, #4
   3fbf0:	bl	1c3c <Mat_uint32Swap>
   3fbf4:	ldr	r0, [sp, #8]
   3fbf8:	cmp	r0, #14
   3fbfc:	bne	3fdac <Mat_VarReadNextInfo5+0x480>
   3fc00:	add	r6, sp, #8
   3fc04:	mov	r0, r5
   3fc08:	mov	r1, r4
   3fc0c:	mov	r2, r6
   3fc10:	bl	286c <InflateArrayFlags>
   3fc14:	ldr	r0, [r5, #20]
   3fc18:	cmp	r0, #0
   3fc1c:	beq	3fc38 <Mat_VarReadNextInfo5+0x30c>
   3fc20:	mov	r0, r6
   3fc24:	bl	1c3c <Mat_uint32Swap>
   3fc28:	add	r0, r6, #8
   3fc2c:	bl	1c3c <Mat_uint32Swap>
   3fc30:	add	r0, r6, #12
   3fc34:	bl	1c3c <Mat_uint32Swap>
   3fc38:	ldr	r0, [sp, #8]
   3fc3c:	cmp	r0, #6
   3fc40:	bne	3fc74 <Mat_VarReadNextInfo5+0x348>
   3fc44:	ldr	r0, [sp, #16]
   3fc48:	and	r1, r0, #2048	; 0x800
   3fc4c:	and	r2, r0, #1024	; 0x400
   3fc50:	and	r3, r0, #512	; 0x200
   3fc54:	uxtb	r0, r0
   3fc58:	cmp	r0, #18
   3fc5c:	movcs	r0, #0
   3fc60:	add	ip, r4, #16
   3fc64:	stm	ip, {r0, r1, r2, r3}
   3fc68:	cmp	r0, #5
   3fc6c:	ldreq	r0, [sp, #20]
   3fc70:	streq	r0, [r4]
   3fc74:	ldr	r0, [r4, #16]
   3fc78:	cmp	r0, #17
   3fc7c:	beq	3ffbc <Mat_VarReadNextInfo5+0x690>
   3fc80:	mov	r0, #0
   3fc84:	str	r0, [sp, #4]
   3fc88:	add	r0, sp, #4
   3fc8c:	str	r0, [sp]
   3fc90:	add	r6, sp, #8
   3fc94:	mov	r0, r5
   3fc98:	mov	r1, r4
   3fc9c:	mov	r2, r6
   3fca0:	mov	r3, #64	; 0x40
   3fca4:	bl	29bc <InflateRankDims>
   3fca8:	mov	sl, #1
   3fcac:	ldr	r0, [sp, #4]
   3fcb0:	cmp	r0, #0
   3fcb4:	addeq	r0, r6, #8
   3fcb8:	streq	r0, [sp, #4]
   3fcbc:	moveq	sl, #0
   3fcc0:	orr	r8, r7, #4
   3fcc4:	ldr	r0, [r5, #20]
   3fcc8:	cmp	r0, #0
   3fccc:	beq	3fce0 <Mat_VarReadNextInfo5+0x3b4>
   3fcd0:	add	r0, sp, #8
   3fcd4:	bl	1c3c <Mat_uint32Swap>
   3fcd8:	mov	r0, r8
   3fcdc:	bl	1c3c <Mat_uint32Swap>
   3fce0:	ldr	r0, [sp, #8]
   3fce4:	cmp	r0, #5
   3fce8:	bne	3fe64 <Mat_VarReadNextInfo5+0x538>
   3fcec:	ldr	r0, [sp, #12]
   3fcf0:	asr	r1, r0, #31
   3fcf4:	add	r0, r0, r1, lsr #30
   3fcf8:	asr	r1, r0, #2
   3fcfc:	str	r1, [r4, #4]
   3fd00:	bic	r0, r0, #3
   3fd04:	bl	18e8 <malloc@plt>
   3fd08:	str	r0, [r4, #32]
   3fd0c:	ldr	r0, [r4, #4]
   3fd10:	ldr	r1, [r5, #20]
   3fd14:	cmp	r1, #0
   3fd18:	beq	3fe38 <Mat_VarReadNextInfo5+0x50c>
   3fd1c:	cmp	r0, #1
   3fd20:	blt	3fe64 <Mat_VarReadNextInfo5+0x538>
   3fd24:	mov	r6, #0
   3fd28:	mov	r7, #0
   3fd2c:	ldr	r0, [sp, #4]
   3fd30:	add	r0, r0, r6
   3fd34:	bl	1c3c <Mat_uint32Swap>
   3fd38:	ldr	r1, [r4, #32]
   3fd3c:	str	r0, [r1, r6]
   3fd40:	add	r6, r6, #4
   3fd44:	add	r7, r7, #1
   3fd48:	ldr	r0, [r4, #4]
   3fd4c:	cmp	r7, r0
   3fd50:	blt	3fd2c <Mat_VarReadNextInfo5+0x400>
   3fd54:	b	3fe64 <Mat_VarReadNextInfo5+0x538>
   3fd58:	ldr	r6, [sp, #12]
   3fd5c:	ands	r0, r6, #7
   3fd60:	add	r1, r6, #8
   3fd64:	mov	r7, r6
   3fd68:	subne	r7, r1, r0
   3fd6c:	add	r0, r7, #1
   3fd70:	bl	18e8 <malloc@plt>
   3fd74:	str	r0, [r4, #36]	; 0x24
   3fd78:	cmp	r0, #0
   3fd7c:	beq	3fdec <Mat_VarReadNextInfo5+0x4c0>
   3fd80:	ldr	r3, [r5]
   3fd84:	mov	r1, #1
   3fd88:	mov	r2, r7
   3fd8c:	bl	18d0 <fread@plt>
   3fd90:	mov	r1, r0
   3fd94:	ldr	r0, [r4, #36]	; 0x24
   3fd98:	cmp	r1, r7
   3fd9c:	bne	3fdd4 <Mat_VarReadNextInfo5+0x4a8>
   3fda0:	mov	r1, #0
   3fda4:	strb	r1, [r0, r6]
   3fda8:	b	3fdec <Mat_VarReadNextInfo5+0x4c0>
   3fdac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3fdb0:	sub	r1, r0, r6
   3fdb4:	ldr	r0, [r5]
   3fdb8:	mov	r2, #1
   3fdbc:	bl	1a68 <fseek@plt>
   3fdc0:	mov	r0, r4
   3fdc4:	bl	1930 <Mat_VarFree@plt>
   3fdc8:	ldr	r0, [pc, #540]	; 3ffec <Mat_VarReadNextInfo5+0x6c0>
   3fdcc:	add	r0, pc, r0
   3fdd0:	b	3fa54 <Mat_VarReadNextInfo5+0x128>
   3fdd4:	bl	181c <free@plt>
   3fdd8:	mov	r0, #0
   3fddc:	str	r0, [r4, #36]	; 0x24
   3fde0:	ldr	r0, [pc, #524]	; 3fff4 <Mat_VarReadNextInfo5+0x6c8>
   3fde4:	add	r0, pc, r0
   3fde8:	bl	19cc <Mat_Critical@plt>
   3fdec:	ldr	r0, [r4, #16]
   3fdf0:	cmp	r0, #1
   3fdf4:	beq	3fe18 <Mat_VarReadNextInfo5+0x4ec>
   3fdf8:	cmp	r0, #16
   3fdfc:	beq	3fe28 <Mat_VarReadNextInfo5+0x4fc>
   3fe00:	cmp	r0, #2
   3fe04:	bne	3ff98 <Mat_VarReadNextInfo5+0x66c>
   3fe08:	mov	r0, r5
   3fe0c:	mov	r1, r4
   3fe10:	bl	3fffc <ReadNextStructField>
   3fe14:	b	3ff98 <Mat_VarReadNextInfo5+0x66c>
   3fe18:	mov	r0, r5
   3fe1c:	mov	r1, r4
   3fe20:	bl	40dfc <ReadNextCell>
   3fe24:	b	3ff98 <Mat_VarReadNextInfo5+0x66c>
   3fe28:	mov	r0, r5
   3fe2c:	mov	r1, r4
   3fe30:	bl	41990 <ReadNextFunctionHandle>
   3fe34:	b	3ff98 <Mat_VarReadNextInfo5+0x66c>
   3fe38:	cmp	r0, #1
   3fe3c:	blt	3fe64 <Mat_VarReadNextInfo5+0x538>
   3fe40:	ldr	r0, [r4, #32]
   3fe44:	mov	r1, #0
   3fe48:	ldr	r2, [sp, #4]
   3fe4c:	ldr	r3, [r2, r1, lsl #2]
   3fe50:	str	r3, [r0, r1, lsl #2]
   3fe54:	add	r1, r1, #1
   3fe58:	ldr	r3, [r4, #4]
   3fe5c:	cmp	r1, r3
   3fe60:	blt	3fe4c <Mat_VarReadNextInfo5+0x520>
   3fe64:	cmp	sl, #0
   3fe68:	beq	3fe74 <Mat_VarReadNextInfo5+0x548>
   3fe6c:	ldr	r0, [sp, #4]
   3fe70:	bl	181c <free@plt>
   3fe74:	add	r2, sp, #8
   3fe78:	mov	r0, r5
   3fe7c:	mov	r1, r4
   3fe80:	bl	2ca4 <InflateVarNameTag>
   3fe84:	ldr	r0, [r5, #20]
   3fe88:	cmp	r0, #0
   3fe8c:	beq	3fe98 <Mat_VarReadNextInfo5+0x56c>
   3fe90:	add	r0, sp, #8
   3fe94:	bl	1c3c <Mat_uint32Swap>
   3fe98:	ldr	r0, [sp, #8]
   3fe9c:	cmp	r0, #1
   3fea0:	bne	3fec0 <Mat_VarReadNextInfo5+0x594>
   3fea4:	ldr	r0, [r5, #20]
   3fea8:	cmp	r0, #0
   3feac:	beq	3ff04 <Mat_VarReadNextInfo5+0x5d8>
   3feb0:	mov	r0, r8
   3feb4:	bl	1c3c <Mat_uint32Swap>
   3feb8:	mov	r7, r0
   3febc:	b	3ff08 <Mat_VarReadNextInfo5+0x5dc>
   3fec0:	lsr	r7, r0, #16
   3fec4:	cmp	r7, #4
   3fec8:	bhi	3ff4c <Mat_VarReadNextInfo5+0x620>
   3fecc:	uxth	r0, r0
   3fed0:	cmp	r0, #1
   3fed4:	bne	3ff4c <Mat_VarReadNextInfo5+0x620>
   3fed8:	cmp	r7, #0
   3fedc:	beq	3ff4c <Mat_VarReadNextInfo5+0x620>
   3fee0:	add	r0, r7, #1
   3fee4:	bl	18e8 <malloc@plt>
   3fee8:	str	r0, [r4, #36]	; 0x24
   3feec:	cmp	r0, #0
   3fef0:	beq	3ff4c <Mat_VarReadNextInfo5+0x620>
   3fef4:	mov	r1, r8
   3fef8:	mov	r2, r7
   3fefc:	bl	1834 <memcpy@plt>
   3ff00:	b	3ff40 <Mat_VarReadNextInfo5+0x614>
   3ff04:	ldr	r7, [sp, #12]
   3ff08:	ands	r0, r7, #7
   3ff0c:	add	r1, r7, #8
   3ff10:	mov	r6, r7
   3ff14:	subne	r6, r1, r0
   3ff18:	add	r0, r6, #1
   3ff1c:	bl	18e8 <malloc@plt>
   3ff20:	str	r0, [r4, #36]	; 0x24
   3ff24:	cmp	r0, #0
   3ff28:	beq	3ff4c <Mat_VarReadNextInfo5+0x620>
   3ff2c:	mov	r2, r0
   3ff30:	mov	r0, r5
   3ff34:	mov	r1, r4
   3ff38:	mov	r3, r6
   3ff3c:	bl	2df4 <InflateVarName>
   3ff40:	ldr	r0, [r4, #36]	; 0x24
   3ff44:	mov	r1, #0
   3ff48:	strb	r1, [r0, r7]
   3ff4c:	ldr	r0, [r4, #16]
   3ff50:	cmp	r0, #1
   3ff54:	beq	3ff70 <Mat_VarReadNextInfo5+0x644>
   3ff58:	cmp	r0, #2
   3ff5c:	bne	3ff7c <Mat_VarReadNextInfo5+0x650>
   3ff60:	mov	r0, r5
   3ff64:	mov	r1, r4
   3ff68:	bl	3fffc <ReadNextStructField>
   3ff6c:	b	3ff7c <Mat_VarReadNextInfo5+0x650>
   3ff70:	mov	r0, r5
   3ff74:	mov	r1, r4
   3ff78:	bl	40dfc <ReadNextCell>
   3ff7c:	ldr	r0, [r5]
   3ff80:	ldr	r1, [r4, #52]	; 0x34
   3ff84:	ldr	r1, [r1, #12]
   3ff88:	ldr	r1, [r1, #4]
   3ff8c:	rsb	r1, r1, #0
   3ff90:	mov	r2, #1
   3ff94:	bl	1a68 <fseek@plt>
   3ff98:	ldr	r0, [r5]
   3ff9c:	bl	1858 <ftell@plt>
   3ffa0:	ldr	r1, [r4, #52]	; 0x34
   3ffa4:	str	r0, [r1]
   3ffa8:	cmn	r0, #1
   3ffac:	bne	3ffbc <Mat_VarReadNextInfo5+0x690>
   3ffb0:	ldr	r0, [pc, #56]	; 3fff0 <Mat_VarReadNextInfo5+0x6c4>
   3ffb4:	add	r0, pc, r0
   3ffb8:	bl	19cc <Mat_Critical@plt>
   3ffbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ffc0:	add	r0, r9, r0
   3ffc4:	add	r1, r0, #8
   3ffc8:	ldr	r0, [r5]
   3ffcc:	mov	r2, #0
   3ffd0:	bl	1a68 <fseek@plt>
   3ffd4:	mov	r0, r4
   3ffd8:	sub	sp, fp, #28
   3ffdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ffe0:	.word	0x00009848
   3ffe4:	.word	0x00009ae1
   3ffe8:	.word	0x00009ad0
   3ffec:	.word	0x000097df
   3fff0:	.word	0x000092e4
   3fff4:	.word	0x00009740
   3fff8:	.word	0x000099ea

0003fffc <ReadNextStructField>:
   3fffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40000:	add	fp, sp, #28
   40004:	sub	sp, sp, #124	; 0x7c
   40008:	mov	r9, r1
   4000c:	mov	r5, r0
   40010:	mov	r0, #1
   40014:	str	r0, [fp, #-32]	; 0xffffffe0
   40018:	sub	r1, fp, #32
   4001c:	mov	r0, r9
   40020:	bl	4479c <SafeMulDims>
   40024:	cmp	r0, #0
   40028:	beq	40040 <ReadNextStructField+0x44>
   4002c:	ldr	r0, [pc, #3484]	; 40dd0 <ReadNextStructField+0xdd4>
   40030:	add	r0, pc, r0
   40034:	bl	19cc <Mat_Critical@plt>
   40038:	mov	r4, #0
   4003c:	b	40a48 <ReadNextStructField+0xa4c>
   40040:	ldr	r0, [r9, #48]	; 0x30
   40044:	cmp	r0, #1
   40048:	bne	4012c <ReadNextStructField+0x130>
   4004c:	vmov.i32	q8, #0	; 0x00000000
   40050:	mov	r0, #48	; 0x30
   40054:	add	r7, sp, #48	; 0x30
   40058:	mov	r1, r7
   4005c:	vst1.64	{d16-d17}, [r1], r0
   40060:	vst1.64	{d16-d17}, [r1]
   40064:	add	r0, r7, #32
   40068:	vst1.64	{d16-d17}, [r0]
   4006c:	add	r0, r7, #16
   40070:	vst1.64	{d16-d17}, [r0]
   40074:	mov	r0, r5
   40078:	mov	r1, r9
   4007c:	mov	r2, r7
   40080:	bl	337c <InflateFieldNameLength>
   40084:	mov	r4, r0
   40088:	ldr	r0, [r5, #20]
   4008c:	cmp	r0, #0
   40090:	beq	400a4 <ReadNextStructField+0xa8>
   40094:	mov	r0, r7
   40098:	bl	1c3c <Mat_uint32Swap>
   4009c:	orr	r0, r7, #4
   400a0:	bl	1c3c <Mat_uint32Swap>
   400a4:	ldrh	r0, [sp, #48]	; 0x30
   400a8:	cmp	r0, #5
   400ac:	bne	401f0 <ReadNextStructField+0x1f4>
   400b0:	ldr	r8, [sp, #52]	; 0x34
   400b4:	mov	r0, r5
   400b8:	mov	r1, r9
   400bc:	mov	r2, r7
   400c0:	bl	34cc <InflateFieldNamesTag>
   400c4:	mov	r6, r0
   400c8:	orr	r7, r7, #4
   400cc:	ldr	r0, [r5, #20]
   400d0:	cmp	r0, #0
   400d4:	beq	400e8 <ReadNextStructField+0xec>
   400d8:	add	r0, sp, #48	; 0x30
   400dc:	bl	1c3c <Mat_uint32Swap>
   400e0:	mov	r0, r7
   400e4:	bl	1c3c <Mat_uint32Swap>
   400e8:	add	r4, r6, r4
   400ec:	str	r4, [sp, #36]	; 0x24
   400f0:	ldr	r1, [sp, #52]	; 0x34
   400f4:	mov	r0, #4
   400f8:	str	r0, [r9, #12]
   400fc:	udiv	r6, r1, r8
   40100:	mul	r0, r6, r8
   40104:	ands	r4, r0, #7
   40108:	rsbne	r4, r4, #8
   4010c:	str	r1, [sp, #28]
   40110:	cmp	r8, r1
   40114:	bls	401fc <ReadNextStructField+0x200>
   40118:	ldr	r0, [r9, #52]	; 0x34
   4011c:	mov	r1, #0
   40120:	str	r1, [r0, #4]
   40124:	str	r1, [r0, #8]
   40128:	b	402e0 <ReadNextStructField+0x2e4>
   4012c:	ldr	r3, [r5]
   40130:	add	r6, sp, #48	; 0x30
   40134:	mov	r0, r6
   40138:	mov	r1, #4
   4013c:	mov	r2, #2
   40140:	bl	18d0 <fread@plt>
   40144:	mov	r4, r0
   40148:	ldr	r0, [r5, #20]
   4014c:	cmp	r0, #0
   40150:	beq	40164 <ReadNextStructField+0x168>
   40154:	mov	r0, r6
   40158:	bl	1c3c <Mat_uint32Swap>
   4015c:	add	r0, r6, #4
   40160:	bl	1c3c <Mat_uint32Swap>
   40164:	ldrh	r0, [sp, #48]	; 0x30
   40168:	cmp	r0, #5
   4016c:	bne	401f0 <ReadNextStructField+0x1f4>
   40170:	ldr	r3, [r5]
   40174:	ldr	r0, [sp, #52]	; 0x34
   40178:	str	r0, [sp, #40]	; 0x28
   4017c:	mov	r8, #4
   40180:	mov	r0, r6
   40184:	mov	r1, #4
   40188:	mov	r2, #2
   4018c:	bl	18d0 <fread@plt>
   40190:	mov	r7, r0
   40194:	add	r6, r6, #4
   40198:	ldr	r0, [r5, #20]
   4019c:	cmp	r0, #0
   401a0:	beq	401b4 <ReadNextStructField+0x1b8>
   401a4:	add	r0, sp, #48	; 0x30
   401a8:	bl	1c3c <Mat_uint32Swap>
   401ac:	mov	r0, r6
   401b0:	bl	1c3c <Mat_uint32Swap>
   401b4:	str	r6, [sp, #24]
   401b8:	add	r4, r7, r4
   401bc:	mov	r7, r4
   401c0:	ldr	r0, [sp, #52]	; 0x34
   401c4:	str	r8, [r9, #12]
   401c8:	ldr	r6, [sp, #40]	; 0x28
   401cc:	udiv	sl, r0, r6
   401d0:	ldr	r4, [r9, #52]	; 0x34
   401d4:	str	r0, [sp, #28]
   401d8:	cmp	r6, r0
   401dc:	bls	40948 <ReadNextStructField+0x94c>
   401e0:	mov	r0, #0
   401e4:	str	r0, [r4, #4]
   401e8:	str	r0, [r4, #8]
   401ec:	b	409e0 <ReadNextStructField+0x9e4>
   401f0:	ldr	r0, [pc, #3072]	; 40df8 <ReadNextStructField+0xdfc>
   401f4:	add	r0, pc, r0
   401f8:	b	40a44 <ReadNextStructField+0xa48>
   401fc:	add	r0, r4, r0
   40200:	bl	18e8 <malloc@plt>
   40204:	cmp	r0, #0
   40208:	beq	402e0 <ReadNextStructField+0x2e4>
   4020c:	mov	r2, r0
   40210:	str	r7, [sp, #24]
   40214:	str	r8, [sp]
   40218:	str	r4, [sp, #4]
   4021c:	mov	r0, r5
   40220:	mov	r1, r9
   40224:	str	r2, [sp, #40]	; 0x28
   40228:	mov	r3, r6
   4022c:	bl	361c <InflateFieldNames>
   40230:	str	r0, [sp, #32]
   40234:	ldr	r4, [r9, #52]	; 0x34
   40238:	str	r6, [r4, #4]
   4023c:	mov	r0, r6
   40240:	mov	r1, #4
   40244:	bl	17b0 <calloc@plt>
   40248:	str	r0, [r4, #8]
   4024c:	cmp	r0, #0
   40250:	beq	402c4 <ReadNextStructField+0x2c8>
   40254:	ldr	r0, [sp, #28]
   40258:	cmp	r8, r0
   4025c:	bhi	402c4 <ReadNextStructField+0x2c8>
   40260:	sub	r4, r8, #1
   40264:	ldr	r7, [sp, #40]	; 0x28
   40268:	mov	sl, #0
   4026c:	mov	r0, r8
   40270:	bl	18e8 <malloc@plt>
   40274:	ldr	r1, [r9, #52]	; 0x34
   40278:	ldr	r1, [r1, #8]
   4027c:	str	r0, [r1, sl, lsl #2]
   40280:	ldr	r0, [r9, #52]	; 0x34
   40284:	ldr	r0, [r0, #8]
   40288:	ldr	r0, [r0, sl, lsl #2]
   4028c:	cmp	r0, #0
   40290:	beq	402b4 <ReadNextStructField+0x2b8>
   40294:	mov	r1, r7
   40298:	mov	r2, r8
   4029c:	bl	1834 <memcpy@plt>
   402a0:	ldr	r0, [r9, #52]	; 0x34
   402a4:	ldr	r0, [r0, #8]
   402a8:	ldr	r0, [r0, sl, lsl #2]
   402ac:	mov	r1, #0
   402b0:	strb	r1, [r0, r4]
   402b4:	add	r7, r7, r8
   402b8:	add	sl, sl, #1
   402bc:	cmp	sl, r6
   402c0:	bcc	4026c <ReadNextStructField+0x270>
   402c4:	ldr	r4, [sp, #36]	; 0x24
   402c8:	ldr	r0, [sp, #32]
   402cc:	add	r4, r0, r4
   402d0:	ldr	r0, [sp, #40]	; 0x28
   402d4:	bl	181c <free@plt>
   402d8:	ldr	r7, [sp, #24]
   402dc:	b	402e4 <ReadNextStructField+0x2e8>
   402e0:	ldr	r4, [sp, #36]	; 0x24
   402e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   402e8:	sub	r0, fp, #36	; 0x24
   402ec:	mov	r2, r6
   402f0:	bl	4481c <SafeMul>
   402f4:	cmp	r0, #0
   402f8:	bne	40a3c <ReadNextStructField+0xa40>
   402fc:	ldr	r2, [r9, #12]
   40300:	ldr	r1, [fp, #-36]	; 0xffffffdc
   40304:	mov	r0, r9
   40308:	bl	4481c <SafeMul>
   4030c:	cmp	r0, #0
   40310:	bne	40a3c <ReadNextStructField+0xa40>
   40314:	ldr	r0, [r9]
   40318:	cmp	r0, #0
   4031c:	beq	40a48 <ReadNextStructField+0xa4c>
   40320:	ldr	r1, [r9, #12]
   40324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40328:	bl	17b0 <calloc@plt>
   4032c:	str	r0, [r9, #40]	; 0x28
   40330:	str	r0, [sp, #40]	; 0x28
   40334:	cmp	r0, #0
   40338:	beq	40d8c <ReadNextStructField+0xd90>
   4033c:	str	r7, [sp, #24]
   40340:	str	r4, [sp, #36]	; 0x24
   40344:	str	r5, [sp, #32]
   40348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4034c:	cmp	r0, #0
   40350:	beq	403a0 <ReadNextStructField+0x3a4>
   40354:	mov	r7, #0
   40358:	str	r8, [sp, #20]
   4035c:	ldr	r0, [sp, #28]
   40360:	cmp	r8, r0
   40364:	ldr	r8, [sp, #40]	; 0x28
   40368:	bhi	4038c <ReadNextStructField+0x390>
   4036c:	mul	r4, r7, r6
   40370:	mov	r5, #0
   40374:	add	sl, r5, r4
   40378:	bl	18b8 <Mat_VarCalloc@plt>
   4037c:	str	r0, [r8, sl, lsl #2]
   40380:	add	r5, r5, #1
   40384:	cmp	r5, r6
   40388:	bcc	40374 <ReadNextStructField+0x378>
   4038c:	add	r7, r7, #1
   40390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40394:	cmp	r7, r0
   40398:	ldr	r8, [sp, #20]
   4039c:	bcc	4035c <ReadNextStructField+0x360>
   403a0:	ldr	r0, [r9, #52]	; 0x34
   403a4:	ldr	r0, [r0, #8]
   403a8:	cmp	r0, #0
   403ac:	ldrne	r0, [fp, #-32]	; 0xffffffe0
   403b0:	cmpne	r0, #0
   403b4:	beq	40414 <ReadNextStructField+0x418>
   403b8:	mov	sl, #0
   403bc:	ldr	r0, [sp, #28]
   403c0:	cmp	r8, r0
   403c4:	bhi	40404 <ReadNextStructField+0x408>
   403c8:	mul	r4, sl, r6
   403cc:	mov	r5, #0
   403d0:	ldr	r0, [r9, #52]	; 0x34
   403d4:	ldr	r0, [r0, #8]
   403d8:	ldr	r0, [r0, r5, lsl #2]
   403dc:	cmp	r0, #0
   403e0:	beq	403f8 <ReadNextStructField+0x3fc>
   403e4:	add	r7, r5, r4
   403e8:	bl	187c <strdup@plt>
   403ec:	ldr	r1, [sp, #40]	; 0x28
   403f0:	ldr	r1, [r1, r7, lsl #2]
   403f4:	str	r0, [r1, #36]	; 0x24
   403f8:	add	r5, r5, #1
   403fc:	cmp	r5, r6
   40400:	bcc	403d0 <ReadNextStructField+0x3d4>
   40404:	add	sl, sl, #1
   40408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4040c:	cmp	sl, r0
   40410:	bcc	403bc <ReadNextStructField+0x3c0>
   40414:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40418:	cmp	r0, #0
   4041c:	beq	40d84 <ReadNextStructField+0xd88>
   40420:	add	sl, sp, #48	; 0x30
   40424:	add	r0, sl, #8
   40428:	str	r0, [sp, #28]
   4042c:	add	r0, sl, #12
   40430:	str	r0, [sp, #20]
   40434:	mov	r5, #0
   40438:	ldr	r4, [sp, #36]	; 0x24
   4043c:	ldr	r8, [sp, #40]	; 0x28
   40440:	mov	r7, r4
   40444:	ldr	r6, [sp, #32]
   40448:	mov	r0, r6
   4044c:	mov	r1, r9
   40450:	mov	r2, sl
   40454:	bl	271c <InflateVarTag>
   40458:	mov	r4, r0
   4045c:	ldr	r0, [r6, #20]
   40460:	cmp	r0, #0
   40464:	beq	40478 <ReadNextStructField+0x47c>
   40468:	mov	r0, sl
   4046c:	bl	1c3c <Mat_uint32Swap>
   40470:	ldr	r0, [sp, #24]
   40474:	bl	1c3c <Mat_uint32Swap>
   40478:	add	r7, r4, r7
   4047c:	mov	r4, r7
   40480:	ldr	r0, [sp, #48]	; 0x30
   40484:	cmp	r0, #14
   40488:	bne	40544 <ReadNextStructField+0x548>
   4048c:	ldr	sl, [sp, #52]	; 0x34
   40490:	ldr	r0, [r8, r5, lsl #2]
   40494:	cmp	sl, #0
   40498:	beq	40568 <ReadNextStructField+0x56c>
   4049c:	mov	r8, r4
   404a0:	mov	r1, #1
   404a4:	str	r1, [r0, #48]	; 0x30
   404a8:	ldr	r7, [sp, #32]
   404ac:	mov	r0, r7
   404b0:	mov	r1, r9
   404b4:	add	r6, sp, #48	; 0x30
   404b8:	mov	r2, r6
   404bc:	bl	286c <InflateArrayFlags>
   404c0:	mov	r4, r0
   404c4:	ldr	r0, [r7, #20]
   404c8:	cmp	r0, #0
   404cc:	beq	404f0 <ReadNextStructField+0x4f4>
   404d0:	mov	r0, r6
   404d4:	bl	1c3c <Mat_uint32Swap>
   404d8:	ldr	r0, [sp, #24]
   404dc:	bl	1c3c <Mat_uint32Swap>
   404e0:	ldr	r0, [sp, #28]
   404e4:	bl	1c3c <Mat_uint32Swap>
   404e8:	ldr	r0, [sp, #20]
   404ec:	bl	1c3c <Mat_uint32Swap>
   404f0:	add	r8, r4, r8
   404f4:	sub	r4, sl, #16
   404f8:	ldr	r1, [sp, #48]	; 0x30
   404fc:	cmp	r1, #6
   40500:	bne	40584 <ReadNextStructField+0x588>
   40504:	ldr	r0, [sp, #40]	; 0x28
   40508:	ldr	r0, [r0, r5, lsl #2]
   4050c:	ldr	r1, [sp, #56]	; 0x38
   40510:	and	r2, r1, #2048	; 0x800
   40514:	and	r3, r1, #1024	; 0x400
   40518:	and	r7, r1, #512	; 0x200
   4051c:	uxtb	r1, r1
   40520:	cmp	r1, #18
   40524:	mov	r6, #0
   40528:	movcs	r1, r6
   4052c:	add	ip, r0, #16
   40530:	stm	ip, {r1, r2, r3, r7}
   40534:	cmp	r1, #5
   40538:	ldreq	r1, [sp, #60]	; 0x3c
   4053c:	streq	r1, [r0]
   40540:	b	405a8 <ReadNextStructField+0x5ac>
   40544:	ldr	r0, [r8, r5, lsl #2]
   40548:	bl	1930 <Mat_VarFree@plt>
   4054c:	mov	r0, #0
   40550:	str	r0, [r8, r5, lsl #2]
   40554:	ldr	r0, [pc, #2176]	; 40ddc <ReadNextStructField+0xde0>
   40558:	add	r0, pc, r0
   4055c:	mov	r1, r5
   40560:	bl	19cc <Mat_Critical@plt>
   40564:	b	40934 <ReadNextStructField+0x938>
   40568:	ldr	r0, [r0, #52]	; 0x34
   4056c:	bl	181c <free@plt>
   40570:	ldr	r0, [r8, r5, lsl #2]
   40574:	mov	r1, #0
   40578:	str	r1, [r0, #52]	; 0x34
   4057c:	add	sl, sp, #48	; 0x30
   40580:	b	40934 <ReadNextStructField+0x938>
   40584:	ldr	r0, [pc, #2132]	; 40de0 <ReadNextStructField+0xde4>
   40588:	add	r0, pc, r0
   4058c:	bl	19cc <Mat_Critical@plt>
   40590:	ldr	r0, [r9, #52]	; 0x34
   40594:	ldr	r1, [r0, #12]
   40598:	ldr	r0, [sp, #32]
   4059c:	mov	r2, r4
   405a0:	bl	234c <InflateSkip>
   405a4:	add	r8, r0, r8
   405a8:	ldr	r0, [sp, #40]	; 0x28
   405ac:	ldr	r0, [r0, r5, lsl #2]
   405b0:	ldr	r0, [r0, #16]
   405b4:	cmp	r0, #17
   405b8:	bne	405c4 <ReadNextStructField+0x5c8>
   405bc:	add	sl, sp, #48	; 0x30
   405c0:	b	40918 <ReadNextStructField+0x91c>
   405c4:	mov	r0, #0
   405c8:	str	r0, [sp, #44]	; 0x2c
   405cc:	add	r0, sp, #44	; 0x2c
   405d0:	str	r0, [sp]
   405d4:	ldr	r7, [sp, #32]
   405d8:	mov	r0, r7
   405dc:	mov	r1, r9
   405e0:	add	r2, sp, #48	; 0x30
   405e4:	mov	r3, #64	; 0x40
   405e8:	bl	29bc <InflateRankDims>
   405ec:	mov	r4, r0
   405f0:	mov	r1, #1
   405f4:	ldr	r0, [sp, #44]	; 0x2c
   405f8:	cmp	r0, #0
   405fc:	ldreq	r0, [sp, #28]
   40600:	streq	r0, [sp, #44]	; 0x2c
   40604:	moveq	r1, #0
   40608:	str	r1, [sp, #36]	; 0x24
   4060c:	ldr	r0, [r7, #20]
   40610:	cmp	r0, #0
   40614:	beq	40628 <ReadNextStructField+0x62c>
   40618:	add	r0, sp, #48	; 0x30
   4061c:	bl	1c3c <Mat_uint32Swap>
   40620:	ldr	r0, [sp, #24]
   40624:	bl	1c3c <Mat_uint32Swap>
   40628:	sub	r6, sl, #24
   4062c:	ldr	r0, [sp, #48]	; 0x30
   40630:	cmp	r0, #5
   40634:	bne	406d4 <ReadNextStructField+0x6d8>
   40638:	str	r4, [sp, #12]
   4063c:	ldr	sl, [sp, #40]	; 0x28
   40640:	ldr	r4, [sl, r5, lsl #2]
   40644:	ldr	r7, [sp, #52]	; 0x34
   40648:	asr	r0, r7, #31
   4064c:	add	r0, r7, r0, lsr #30
   40650:	asr	r1, r0, #2
   40654:	str	r1, [r4, #4]
   40658:	bic	r0, r0, #3
   4065c:	bl	18e8 <malloc@plt>
   40660:	str	r0, [r4, #32]
   40664:	sub	r6, r6, r7
   40668:	str	r6, [sp, #16]
   4066c:	ldr	r0, [sl, r5, lsl #2]
   40670:	ldr	r1, [r0, #4]
   40674:	ldr	r2, [sp, #32]
   40678:	ldr	r2, [r2, #20]
   4067c:	cmp	r2, #0
   40680:	add	sl, sp, #48	; 0x30
   40684:	beq	406dc <ReadNextStructField+0x6e0>
   40688:	cmp	r1, #1
   4068c:	ldr	r4, [sp, #12]
   40690:	blt	40718 <ReadNextStructField+0x71c>
   40694:	mov	r7, #0
   40698:	mov	r6, #0
   4069c:	ldr	r0, [sp, #44]	; 0x2c
   406a0:	add	r0, r0, r7
   406a4:	bl	1c3c <Mat_uint32Swap>
   406a8:	ldr	r2, [sp, #40]	; 0x28
   406ac:	ldr	r1, [r2, r5, lsl #2]
   406b0:	ldr	r1, [r1, #32]
   406b4:	str	r0, [r1, r7]
   406b8:	ldr	r0, [r2, r5, lsl #2]
   406bc:	ldr	r0, [r0, #4]
   406c0:	add	r7, r7, #4
   406c4:	add	r6, r6, #1
   406c8:	cmp	r6, r0
   406cc:	blt	4069c <ReadNextStructField+0x6a0>
   406d0:	b	40718 <ReadNextStructField+0x71c>
   406d4:	add	sl, sp, #48	; 0x30
   406d8:	b	40730 <ReadNextStructField+0x734>
   406dc:	cmp	r1, #1
   406e0:	ldr	r4, [sp, #12]
   406e4:	blt	40718 <ReadNextStructField+0x71c>
   406e8:	ldr	r1, [sp, #40]	; 0x28
   406ec:	ldr	r1, [r1, r5, lsl #2]
   406f0:	mov	r2, #0
   406f4:	ldr	r3, [sp, #44]	; 0x2c
   406f8:	ldr	r7, [r3, r2, lsl #2]
   406fc:	ldr	r0, [r0, #32]
   40700:	str	r7, [r0, r2, lsl #2]
   40704:	add	r2, r2, #1
   40708:	ldr	r0, [r1, #4]
   4070c:	cmp	r2, r0
   40710:	mov	r0, r1
   40714:	blt	406f8 <ReadNextStructField+0x6fc>
   40718:	ldr	r0, [sp, #40]	; 0x28
   4071c:	ldr	r0, [r0, r5, lsl #2]
   40720:	ldrb	r0, [r0, #4]
   40724:	tst	r0, #1
   40728:	ldr	r6, [sp, #16]
   4072c:	subne	r6, r6, #4
   40730:	add	r7, r4, r8
   40734:	ldr	r0, [sp, #36]	; 0x24
   40738:	cmp	r0, #0
   4073c:	beq	40748 <ReadNextStructField+0x74c>
   40740:	ldr	r0, [sp, #44]	; 0x2c
   40744:	bl	181c <free@plt>
   40748:	ldr	r0, [sp, #32]
   4074c:	mov	r1, r9
   40750:	mov	r2, sl
   40754:	bl	2ca4 <InflateVarNameTag>
   40758:	mov	r4, r0
   4075c:	mov	r0, #1
   40760:	mov	r1, #56	; 0x38
   40764:	bl	17b0 <calloc@plt>
   40768:	ldr	r2, [sp, #40]	; 0x28
   4076c:	ldr	r1, [r2, r5, lsl #2]
   40770:	ldr	r1, [r1, #52]	; 0x34
   40774:	str	r0, [r1, #12]
   40778:	add	r8, r7, r4
   4077c:	ldr	r0, [r2, r5, lsl #2]
   40780:	ldr	r0, [r0, #52]	; 0x34
   40784:	ldr	r0, [r0, #12]
   40788:	cmp	r0, #0
   4078c:	beq	407bc <ReadNextStructField+0x7c0>
   40790:	ldr	r1, [r9, #52]	; 0x34
   40794:	ldr	r1, [r1, #12]
   40798:	bl	1960 <inflateCopy@plt>
   4079c:	cmp	r0, #0
   407a0:	beq	407cc <ReadNextStructField+0x7d0>
   407a4:	bl	18a0 <zError@plt>
   407a8:	mov	r1, r0
   407ac:	ldr	r0, [pc, #1588]	; 40de8 <ReadNextStructField+0xdec>
   407b0:	add	r0, pc, r0
   407b4:	bl	19cc <Mat_Critical@plt>
   407b8:	b	40914 <ReadNextStructField+0x918>
   407bc:	ldr	r0, [pc, #1576]	; 40dec <ReadNextStructField+0xdf0>
   407c0:	add	r0, pc, r0
   407c4:	bl	19cc <Mat_Critical@plt>
   407c8:	b	40914 <ReadNextStructField+0x918>
   407cc:	ldr	r0, [sp, #32]
   407d0:	ldr	r0, [r0]
   407d4:	bl	1858 <ftell@plt>
   407d8:	ldr	r1, [sp, #40]	; 0x28
   407dc:	ldr	r1, [r1, r5, lsl #2]
   407e0:	ldr	r2, [r1, #52]	; 0x34
   407e4:	str	r0, [r2]
   407e8:	cmn	r0, #1
   407ec:	beq	40830 <ReadNextStructField+0x834>
   407f0:	ldr	r3, [r9, #52]	; 0x34
   407f4:	ldr	r3, [r3, #12]
   407f8:	ldr	r3, [r3, #4]
   407fc:	sub	r0, r0, r3
   40800:	str	r0, [r2]
   40804:	ldr	r0, [r1, #16]
   40808:	cmp	r0, #1
   4080c:	beq	40848 <ReadNextStructField+0x84c>
   40810:	cmp	r0, #2
   40814:	bne	40860 <ReadNextStructField+0x864>
   40818:	mov	r7, r6
   4081c:	ldr	r4, [sp, #32]
   40820:	mov	r0, r4
   40824:	bl	3fffc <ReadNextStructField>
   40828:	add	r8, r0, r8
   4082c:	b	408a4 <ReadNextStructField+0x8a8>
   40830:	mov	r7, r6
   40834:	ldr	r0, [pc, #1448]	; 40de4 <ReadNextStructField+0xde8>
   40838:	add	r0, pc, r0
   4083c:	bl	19cc <Mat_Critical@plt>
   40840:	ldr	r6, [sp, #40]	; 0x28
   40844:	b	408c0 <ReadNextStructField+0x8c4>
   40848:	mov	r7, r6
   4084c:	ldr	r4, [sp, #32]
   40850:	mov	r0, r4
   40854:	bl	40dfc <ReadNextCell>
   40858:	add	r8, r0, r8
   4085c:	b	408a4 <ReadNextStructField+0x8a8>
   40860:	movw	r0, #32776	; 0x8008
   40864:	mov	r7, r6
   40868:	cmp	r6, r0
   4086c:	bgt	408a0 <ReadNextStructField+0x8a4>
   40870:	ldr	r4, [sp, #32]
   40874:	mov	r0, r4
   40878:	bl	1ff14 <Mat_VarRead5>
   4087c:	ldr	r2, [sp, #40]	; 0x28
   40880:	ldr	r0, [r2, r5, lsl #2]
   40884:	ldr	r1, [r0, #40]	; 0x28
   40888:	ldr	r0, [r0, #52]	; 0x34
   4088c:	str	r1, [r0, #16]
   40890:	ldr	r0, [r2, r5, lsl #2]
   40894:	mov	r1, #0
   40898:	str	r1, [r0, #40]	; 0x28
   4089c:	b	408a4 <ReadNextStructField+0x8a8>
   408a0:	ldr	r4, [sp, #32]
   408a4:	ldr	r6, [sp, #40]	; 0x28
   408a8:	ldr	r0, [r6, r5, lsl #2]
   408ac:	ldr	r0, [r0, #52]	; 0x34
   408b0:	ldr	r1, [r0]
   408b4:	ldr	r0, [r4]
   408b8:	mov	r2, #0
   408bc:	bl	1a68 <fseek@plt>
   408c0:	ldr	r1, [r6, r5, lsl #2]
   408c4:	ldr	r0, [r1, #52]	; 0x34
   408c8:	ldr	r2, [r0, #16]
   408cc:	cmp	r2, #0
   408d0:	bne	408e4 <ReadNextStructField+0x8e8>
   408d4:	ldr	r1, [r1, #16]
   408d8:	sub	r1, r1, #1
   408dc:	cmp	r1, #1
   408e0:	bhi	40910 <ReadNextStructField+0x914>
   408e4:	ldr	r0, [r0, #12]
   408e8:	bl	1954 <inflateEnd@plt>
   408ec:	ldr	r4, [sp, #40]	; 0x28
   408f0:	ldr	r0, [r4, r5, lsl #2]
   408f4:	ldr	r0, [r0, #52]	; 0x34
   408f8:	ldr	r0, [r0, #12]
   408fc:	bl	181c <free@plt>
   40900:	ldr	r0, [r4, r5, lsl #2]
   40904:	ldr	r0, [r0, #52]	; 0x34
   40908:	mov	r1, #0
   4090c:	str	r1, [r0, #12]
   40910:	mov	r6, r7
   40914:	sub	r4, r6, #8
   40918:	ldr	r0, [r9, #52]	; 0x34
   4091c:	ldr	r1, [r0, #12]
   40920:	ldr	r0, [sp, #32]
   40924:	mov	r2, r4
   40928:	bl	234c <InflateSkip>
   4092c:	add	r4, r0, r8
   40930:	ldr	r8, [sp, #40]	; 0x28
   40934:	add	r5, r5, #1
   40938:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4093c:	cmp	r5, r0
   40940:	bcc	40440 <ReadNextStructField+0x444>
   40944:	b	40a48 <ReadNextStructField+0xa4c>
   40948:	str	sl, [r4, #4]
   4094c:	mov	r0, sl
   40950:	mov	r1, #4
   40954:	bl	17b0 <calloc@plt>
   40958:	str	r0, [r4, #8]
   4095c:	cmp	r0, #0
   40960:	beq	409e0 <ReadNextStructField+0x9e4>
   40964:	ldr	r0, [sp, #28]
   40968:	cmp	r6, r0
   4096c:	mov	r4, r7
   40970:	bhi	409e4 <ReadNextStructField+0x9e8>
   40974:	sub	r7, r6, #1
   40978:	mov	r8, #0
   4097c:	ldr	r6, [sp, #40]	; 0x28
   40980:	mov	r0, r6
   40984:	bl	18e8 <malloc@plt>
   40988:	ldr	r1, [r9, #52]	; 0x34
   4098c:	ldr	r1, [r1, #8]
   40990:	str	r0, [r1, r8, lsl #2]
   40994:	ldr	r0, [r9, #52]	; 0x34
   40998:	ldr	r0, [r0, #8]
   4099c:	ldr	r0, [r0, r8, lsl #2]
   409a0:	cmp	r0, #0
   409a4:	beq	409d0 <ReadNextStructField+0x9d4>
   409a8:	ldr	r3, [r5]
   409ac:	mov	r1, #1
   409b0:	mov	r2, r6
   409b4:	bl	18d0 <fread@plt>
   409b8:	ldr	r1, [r9, #52]	; 0x34
   409bc:	ldr	r1, [r1, #8]
   409c0:	ldr	r1, [r1, r8, lsl #2]
   409c4:	mov	r2, #0
   409c8:	strb	r2, [r1, r7]
   409cc:	add	r4, r0, r4
   409d0:	add	r8, r8, #1
   409d4:	cmp	r8, sl
   409d8:	bcc	40980 <ReadNextStructField+0x984>
   409dc:	b	409e4 <ReadNextStructField+0x9e8>
   409e0:	mov	r4, r7
   409e4:	ldr	r0, [sp, #40]	; 0x28
   409e8:	mul	r0, sl, r0
   409ec:	ands	r1, r0, #7
   409f0:	beq	40a0c <ReadNextStructField+0xa10>
   409f4:	ldr	r0, [r5]
   409f8:	rsb	r7, r1, #8
   409fc:	mov	r1, r7
   40a00:	mov	r2, #1
   40a04:	bl	1a68 <fseek@plt>
   40a08:	add	r4, r4, r7
   40a0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   40a10:	sub	r0, fp, #36	; 0x24
   40a14:	mov	r2, sl
   40a18:	bl	4481c <SafeMul>
   40a1c:	cmp	r0, #0
   40a20:	bne	40a3c <ReadNextStructField+0xa40>
   40a24:	ldr	r2, [r9, #12]
   40a28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   40a2c:	mov	r0, r9
   40a30:	bl	4481c <SafeMul>
   40a34:	cmp	r0, #0
   40a38:	beq	40a54 <ReadNextStructField+0xa58>
   40a3c:	ldr	r0, [pc, #912]	; 40dd4 <ReadNextStructField+0xdd8>
   40a40:	add	r0, pc, r0
   40a44:	bl	19cc <Mat_Critical@plt>
   40a48:	mov	r0, r4
   40a4c:	sub	sp, fp, #28
   40a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40a54:	ldr	r0, [r9]
   40a58:	cmp	r0, #0
   40a5c:	beq	40a48 <ReadNextStructField+0xa4c>
   40a60:	bl	18e8 <malloc@plt>
   40a64:	str	r0, [r9, #40]	; 0x28
   40a68:	cmp	r0, #0
   40a6c:	beq	40a48 <ReadNextStructField+0xa4c>
   40a70:	mov	r8, r0
   40a74:	str	r4, [sp, #36]	; 0x24
   40a78:	str	r5, [sp, #32]
   40a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40a80:	cmp	r0, #0
   40a84:	beq	40acc <ReadNextStructField+0xad0>
   40a88:	mov	r6, #0
   40a8c:	ldr	r0, [sp, #40]	; 0x28
   40a90:	ldr	r1, [sp, #28]
   40a94:	cmp	r0, r1
   40a98:	bhi	40abc <ReadNextStructField+0xac0>
   40a9c:	mul	r4, r6, sl
   40aa0:	mov	r5, #0
   40aa4:	add	r7, r5, r4
   40aa8:	bl	18b8 <Mat_VarCalloc@plt>
   40aac:	str	r0, [r8, r7, lsl #2]
   40ab0:	add	r5, r5, #1
   40ab4:	cmp	r5, sl
   40ab8:	bcc	40aa4 <ReadNextStructField+0xaa8>
   40abc:	add	r6, r6, #1
   40ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40ac4:	cmp	r6, r0
   40ac8:	bcc	40a8c <ReadNextStructField+0xa90>
   40acc:	ldr	r0, [r9, #52]	; 0x34
   40ad0:	ldr	r0, [r0, #8]
   40ad4:	cmp	r0, #0
   40ad8:	ldrne	r0, [fp, #-32]	; 0xffffffe0
   40adc:	cmpne	r0, #0
   40ae0:	beq	40b40 <ReadNextStructField+0xb44>
   40ae4:	mov	r6, #0
   40ae8:	ldr	r0, [sp, #40]	; 0x28
   40aec:	ldr	r1, [sp, #28]
   40af0:	cmp	r0, r1
   40af4:	bhi	40b30 <ReadNextStructField+0xb34>
   40af8:	mul	r4, r6, sl
   40afc:	mov	r5, #0
   40b00:	ldr	r0, [r9, #52]	; 0x34
   40b04:	ldr	r0, [r0, #8]
   40b08:	ldr	r0, [r0, r5, lsl #2]
   40b0c:	cmp	r0, #0
   40b10:	beq	40b24 <ReadNextStructField+0xb28>
   40b14:	add	r7, r5, r4
   40b18:	bl	187c <strdup@plt>
   40b1c:	ldr	r1, [r8, r7, lsl #2]
   40b20:	str	r0, [r1, #36]	; 0x24
   40b24:	add	r5, r5, #1
   40b28:	cmp	r5, sl
   40b2c:	bcc	40b00 <ReadNextStructField+0xb04>
   40b30:	add	r6, r6, #1
   40b34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40b38:	cmp	r6, r0
   40b3c:	bcc	40ae8 <ReadNextStructField+0xaec>
   40b40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40b44:	cmp	r0, #0
   40b48:	beq	40d84 <ReadNextStructField+0xd88>
   40b4c:	add	r6, sp, #48	; 0x30
   40b50:	add	r0, r6, #20
   40b54:	str	r0, [sp, #16]
   40b58:	add	r0, r6, #16
   40b5c:	str	r0, [sp, #40]	; 0x28
   40b60:	add	r0, r6, #12
   40b64:	str	r0, [sp, #28]
   40b68:	add	r0, r6, #8
   40b6c:	str	r0, [sp, #20]
   40b70:	mov	r4, #0
   40b74:	ldr	r5, [sp, #32]
   40b78:	ldr	r7, [sp, #24]
   40b7c:	ldr	r3, [r5]
   40b80:	mov	r0, r6
   40b84:	mov	r1, #4
   40b88:	mov	r2, #2
   40b8c:	bl	18d0 <fread@plt>
   40b90:	mov	r1, r5
   40b94:	mov	r5, r0
   40b98:	ldr	r0, [r1, #20]
   40b9c:	cmp	r0, #0
   40ba0:	beq	40bb4 <ReadNextStructField+0xbb8>
   40ba4:	mov	r0, r6
   40ba8:	bl	1c3c <Mat_uint32Swap>
   40bac:	mov	r0, r7
   40bb0:	bl	1c3c <Mat_uint32Swap>
   40bb4:	ldr	r0, [sp, #36]	; 0x24
   40bb8:	add	r0, r5, r0
   40bbc:	str	r0, [sp, #36]	; 0x24
   40bc0:	ldr	r0, [sp, #48]	; 0x30
   40bc4:	cmp	r0, #14
   40bc8:	bne	40d98 <ReadNextStructField+0xd9c>
   40bcc:	ldr	r9, [sp, #52]	; 0x34
   40bd0:	cmp	r9, #0
   40bd4:	ldr	r5, [sp, #32]
   40bd8:	beq	40d00 <ReadNextStructField+0xd04>
   40bdc:	ldr	r3, [r5]
   40be0:	mov	r0, r6
   40be4:	mov	r1, #4
   40be8:	mov	r2, #6
   40bec:	bl	18d0 <fread@plt>
   40bf0:	mov	r1, r5
   40bf4:	mov	r5, r0
   40bf8:	ldr	r0, [r1, #20]
   40bfc:	cmp	r0, #0
   40c00:	beq	40c34 <ReadNextStructField+0xc38>
   40c04:	mov	r0, r6
   40c08:	bl	1c3c <Mat_uint32Swap>
   40c0c:	mov	r0, r7
   40c10:	bl	1c3c <Mat_uint32Swap>
   40c14:	ldr	r0, [sp, #20]
   40c18:	bl	1c3c <Mat_uint32Swap>
   40c1c:	ldr	r0, [sp, #28]
   40c20:	bl	1c3c <Mat_uint32Swap>
   40c24:	ldr	r0, [sp, #40]	; 0x28
   40c28:	bl	1c3c <Mat_uint32Swap>
   40c2c:	ldr	r0, [sp, #16]
   40c30:	bl	1c3c <Mat_uint32Swap>
   40c34:	ldr	r0, [sp, #36]	; 0x24
   40c38:	add	r6, r5, r0
   40c3c:	ldr	r0, [sp, #48]	; 0x30
   40c40:	cmp	r0, #6
   40c44:	bne	40c80 <ReadNextStructField+0xc84>
   40c48:	ldr	r0, [r8, r4, lsl #2]
   40c4c:	ldr	r1, [sp, #56]	; 0x38
   40c50:	and	r2, r1, #2048	; 0x800
   40c54:	and	r3, r1, #1024	; 0x400
   40c58:	and	r7, r1, #512	; 0x200
   40c5c:	uxtb	r1, r1
   40c60:	cmp	r1, #18
   40c64:	mov	r5, #0
   40c68:	movcs	r1, r5
   40c6c:	add	ip, r0, #16
   40c70:	stm	ip, {r1, r2, r3, r7}
   40c74:	cmp	r1, #5
   40c78:	ldreq	r1, [sp, #60]	; 0x3c
   40c7c:	streq	r1, [r0]
   40c80:	ldr	r1, [r8, r4, lsl #2]
   40c84:	ldr	r2, [sp, #64]	; 0x40
   40c88:	ldr	r3, [sp, #68]	; 0x44
   40c8c:	ldr	r7, [sp, #32]
   40c90:	mov	r0, r7
   40c94:	bl	41848 <ReadRankDims>
   40c98:	mov	sl, r0
   40c9c:	ldr	r3, [r7]
   40ca0:	add	r0, sp, #48	; 0x30
   40ca4:	mov	r1, #1
   40ca8:	mov	r2, #8
   40cac:	bl	18d0 <fread@plt>
   40cb0:	mov	r5, r0
   40cb4:	ldr	r0, [r7]
   40cb8:	bl	1858 <ftell@plt>
   40cbc:	ldr	r1, [r8, r4, lsl #2]
   40cc0:	ldr	r2, [r1, #52]	; 0x34
   40cc4:	str	r0, [r2]
   40cc8:	add	r2, r6, sl
   40ccc:	add	r2, r2, r5
   40cd0:	str	r2, [sp, #36]	; 0x24
   40cd4:	cmn	r0, #1
   40cd8:	beq	40d1c <ReadNextStructField+0xd20>
   40cdc:	ldr	r0, [r1, #16]
   40ce0:	cmp	r0, #1
   40ce4:	beq	40d30 <ReadNextStructField+0xd34>
   40ce8:	cmp	r0, #2
   40cec:	ldr	r5, [sp, #32]
   40cf0:	bne	40d48 <ReadNextStructField+0xd4c>
   40cf4:	mov	r0, r5
   40cf8:	bl	3fffc <ReadNextStructField>
   40cfc:	b	40d3c <ReadNextStructField+0xd40>
   40d00:	ldr	r0, [r8, r4, lsl #2]
   40d04:	ldr	r0, [r0, #52]	; 0x34
   40d08:	bl	181c <free@plt>
   40d0c:	ldr	r0, [r8, r4, lsl #2]
   40d10:	mov	r1, #0
   40d14:	str	r1, [r0, #52]	; 0x34
   40d18:	b	40d74 <ReadNextStructField+0xd78>
   40d1c:	ldr	r0, [pc, #208]	; 40df4 <ReadNextStructField+0xdf8>
   40d20:	add	r0, pc, r0
   40d24:	bl	19cc <Mat_Critical@plt>
   40d28:	ldr	r5, [sp, #32]
   40d2c:	b	40d6c <ReadNextStructField+0xd70>
   40d30:	ldr	r5, [sp, #32]
   40d34:	mov	r0, r5
   40d38:	bl	40dfc <ReadNextCell>
   40d3c:	ldr	r1, [sp, #36]	; 0x24
   40d40:	add	r1, r0, r1
   40d44:	str	r1, [sp, #36]	; 0x24
   40d48:	sub	r0, r9, #32
   40d4c:	sub	r0, r0, sl
   40d50:	ldr	r1, [r8, r4, lsl #2]
   40d54:	ldr	r1, [r1, #52]	; 0x34
   40d58:	ldr	r1, [r1]
   40d5c:	add	r1, r0, r1
   40d60:	ldr	r0, [r5]
   40d64:	mov	r2, #0
   40d68:	bl	1a68 <fseek@plt>
   40d6c:	add	r6, sp, #48	; 0x30
   40d70:	ldr	r7, [sp, #24]
   40d74:	add	r4, r4, #1
   40d78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40d7c:	cmp	r4, r0
   40d80:	bcc	40b7c <ReadNextStructField+0xb80>
   40d84:	ldr	r4, [sp, #36]	; 0x24
   40d88:	b	40a48 <ReadNextStructField+0xa4c>
   40d8c:	ldr	r0, [pc, #68]	; 40dd8 <ReadNextStructField+0xddc>
   40d90:	add	r0, pc, r0
   40d94:	b	40a44 <ReadNextStructField+0xa48>
   40d98:	ldr	r0, [r8, r4, lsl #2]
   40d9c:	bl	1930 <Mat_VarFree@plt>
   40da0:	mov	r0, #0
   40da4:	str	r0, [r8, r4, lsl #2]
   40da8:	ldr	r0, [sp, #32]
   40dac:	ldr	r0, [r0]
   40db0:	bl	1858 <ftell@plt>
   40db4:	mov	r2, r0
   40db8:	ldr	r0, [pc, #48]	; 40df0 <ReadNextStructField+0xdf4>
   40dbc:	add	r0, pc, r0
   40dc0:	mov	r1, r4
   40dc4:	bl	19cc <Mat_Critical@plt>
   40dc8:	ldr	r4, [sp, #36]	; 0x24
   40dcc:	b	40a48 <ReadNextStructField+0xa4c>
   40dd0:	.word	0x000092f4
   40dd4:	.word	0x000088e4
   40dd8:	.word	0x000085b4
   40ddc:	.word	0x00009046
   40de0:	.word	0x00009046
   40de4:	.word	0x00008a60
   40de8:	.word	0x00008d1f
   40dec:	.word	0x00008e3b
   40df0:	.word	0x00008858
   40df4:	.word	0x00008578
   40df8:	.word	0x0000938d

00040dfc <ReadNextCell>:
   40dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40e00:	add	fp, sp, #28
   40e04:	sub	sp, sp, #116	; 0x74
   40e08:	mov	r6, r1
   40e0c:	mov	r4, r0
   40e10:	mov	r0, #1
   40e14:	str	r0, [fp, #-32]	; 0xffffffe0
   40e18:	sub	r1, fp, #32
   40e1c:	mov	r0, r6
   40e20:	bl	4479c <SafeMulDims>
   40e24:	cmp	r0, #0
   40e28:	bne	40e4c <ReadNextCell+0x50>
   40e2c:	mov	r0, #4
   40e30:	str	r0, [r6, #12]
   40e34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   40e38:	mov	r0, r6
   40e3c:	mov	r2, #4
   40e40:	bl	4481c <SafeMul>
   40e44:	cmp	r0, #0
   40e48:	beq	40e68 <ReadNextCell+0x6c>
   40e4c:	ldr	r0, [pc, #2504]	; 4181c <ReadNextCell+0xa20>
   40e50:	add	r0, pc, r0
   40e54:	bl	19cc <Mat_Critical@plt>
   40e58:	mov	r8, #0
   40e5c:	mov	r0, r8
   40e60:	sub	sp, fp, #28
   40e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40e68:	ldr	r1, [r6, #12]
   40e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40e70:	bl	17b0 <calloc@plt>
   40e74:	str	r0, [r6, #40]	; 0x28
   40e78:	cmp	r0, #0
   40e7c:	beq	414e0 <ReadNextCell+0x6e4>
   40e80:	mov	r7, r0
   40e84:	ldr	r0, [r6, #48]	; 0x30
   40e88:	cmp	r0, #1
   40e8c:	str	r4, [sp, #36]	; 0x24
   40e90:	str	r7, [sp, #40]	; 0x28
   40e94:	bne	41500 <ReadNextCell+0x704>
   40e98:	vmov.i32	q8, #0	; 0x00000000
   40e9c:	mov	r0, #48	; 0x30
   40ea0:	add	r2, sp, #48	; 0x30
   40ea4:	mov	r1, r2
   40ea8:	vst1.64	{d16-d17}, [r1], r0
   40eac:	vst1.64	{d16-d17}, [r1]
   40eb0:	add	r0, r2, #32
   40eb4:	vst1.64	{d16-d17}, [r0]
   40eb8:	add	r0, r2, #16
   40ebc:	vst1.64	{d16-d17}, [r0]
   40ec0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40ec4:	cmp	r0, #0
   40ec8:	beq	40e58 <ReadNextCell+0x5c>
   40ecc:	add	r0, r2, #8
   40ed0:	str	r0, [sp, #16]
   40ed4:	add	r0, r2, #12
   40ed8:	str	r0, [sp, #12]
   40edc:	orr	r0, r2, #4
   40ee0:	str	r0, [sp, #32]
   40ee4:	mov	r8, #0
   40ee8:	mov	r9, #0
   40eec:	str	r6, [sp, #28]
   40ef0:	bl	18b8 <Mat_VarCalloc@plt>
   40ef4:	mov	sl, r7
   40ef8:	str	r0, [sl, r9, lsl #2]!
   40efc:	cmp	r0, #0
   40f00:	beq	41014 <ReadNextCell+0x218>
   40f04:	mov	r0, #0
   40f08:	str	r0, [sp, #52]	; 0x34
   40f0c:	str	r0, [sp, #48]	; 0x30
   40f10:	mov	r0, r4
   40f14:	mov	r1, r6
   40f18:	add	r7, sp, #48	; 0x30
   40f1c:	mov	r2, r7
   40f20:	bl	271c <InflateVarTag>
   40f24:	mov	r5, r0
   40f28:	ldr	r0, [r4, #20]
   40f2c:	cmp	r0, #0
   40f30:	beq	40f44 <ReadNextCell+0x148>
   40f34:	mov	r0, r7
   40f38:	bl	1c3c <Mat_uint32Swap>
   40f3c:	ldr	r0, [sp, #32]
   40f40:	bl	1c3c <Mat_uint32Swap>
   40f44:	add	r8, r5, r8
   40f48:	ldr	r7, [sp, #52]	; 0x34
   40f4c:	cmp	r7, #0
   40f50:	beq	41028 <ReadNextCell+0x22c>
   40f54:	ldr	r0, [sl]
   40f58:	ldr	r1, [sp, #48]	; 0x30
   40f5c:	cmp	r1, #14
   40f60:	bne	417cc <ReadNextCell+0x9d0>
   40f64:	mov	r1, #1
   40f68:	str	r1, [r0, #48]	; 0x30
   40f6c:	mov	r0, r4
   40f70:	mov	r1, r6
   40f74:	mov	r6, r4
   40f78:	add	r4, sp, #48	; 0x30
   40f7c:	mov	r2, r4
   40f80:	bl	286c <InflateArrayFlags>
   40f84:	mov	r5, r0
   40f88:	ldr	r0, [r6, #20]
   40f8c:	cmp	r0, #0
   40f90:	beq	40fb4 <ReadNextCell+0x1b8>
   40f94:	mov	r0, r4
   40f98:	bl	1c3c <Mat_uint32Swap>
   40f9c:	ldr	r0, [sp, #32]
   40fa0:	bl	1c3c <Mat_uint32Swap>
   40fa4:	ldr	r0, [sp, #16]
   40fa8:	bl	1c3c <Mat_uint32Swap>
   40fac:	ldr	r0, [sp, #12]
   40fb0:	bl	1c3c <Mat_uint32Swap>
   40fb4:	add	r8, r5, r8
   40fb8:	sub	r5, r7, #16
   40fbc:	ldr	r1, [sp, #48]	; 0x30
   40fc0:	cmp	r1, #6
   40fc4:	bne	41048 <ReadNextCell+0x24c>
   40fc8:	mov	ip, r5
   40fcc:	ldr	r0, [sl]
   40fd0:	ldr	r1, [sp, #56]	; 0x38
   40fd4:	and	r2, r1, #2048	; 0x800
   40fd8:	and	r3, r1, #1024	; 0x400
   40fdc:	and	r5, r1, #512	; 0x200
   40fe0:	uxtb	r1, r1
   40fe4:	cmp	r1, #18
   40fe8:	mov	r6, #0
   40fec:	movcs	r1, r6
   40ff0:	add	lr, r0, #16
   40ff4:	stm	lr, {r1, r2, r3, r5}
   40ff8:	cmp	r1, #5
   40ffc:	ldreq	r1, [sp, #60]	; 0x3c
   41000:	streq	r1, [r0]
   41004:	ldr	r4, [sp, #36]	; 0x24
   41008:	ldr	r6, [sp, #28]
   4100c:	mov	r5, ip
   41010:	b	41074 <ReadNextCell+0x278>
   41014:	ldr	r0, [pc, #2056]	; 41824 <ReadNextCell+0xa28>
   41018:	add	r0, pc, r0
   4101c:	mov	r1, r9
   41020:	bl	19cc <Mat_Critical@plt>
   41024:	b	414cc <ReadNextCell+0x6d0>
   41028:	ldr	r0, [sl]
   4102c:	ldr	r0, [r0, #52]	; 0x34
   41030:	bl	181c <free@plt>
   41034:	ldr	r0, [sl]
   41038:	mov	r1, #0
   4103c:	str	r1, [r0, #52]	; 0x34
   41040:	ldr	r7, [sp, #40]	; 0x28
   41044:	b	414cc <ReadNextCell+0x6d0>
   41048:	ldr	r0, [pc, #2012]	; 4182c <ReadNextCell+0xa30>
   4104c:	add	r0, pc, r0
   41050:	bl	19cc <Mat_Critical@plt>
   41054:	ldr	r6, [sp, #28]
   41058:	ldr	r0, [r6, #52]	; 0x34
   4105c:	ldr	r1, [r0, #12]
   41060:	ldr	r4, [sp, #36]	; 0x24
   41064:	mov	r0, r4
   41068:	mov	r2, r5
   4106c:	bl	234c <InflateSkip>
   41070:	add	r8, r0, r8
   41074:	ldr	r0, [sl]
   41078:	ldr	r0, [r0, #16]
   4107c:	cmp	r0, #17
   41080:	bne	4108c <ReadNextCell+0x290>
   41084:	ldr	r7, [sp, #40]	; 0x28
   41088:	b	414b4 <ReadNextCell+0x6b8>
   4108c:	mov	r0, #0
   41090:	str	r0, [sp, #44]	; 0x2c
   41094:	add	r0, sp, #44	; 0x2c
   41098:	str	r0, [sp]
   4109c:	mov	r0, r4
   410a0:	mov	r1, r6
   410a4:	add	r2, sp, #48	; 0x30
   410a8:	mov	r3, #64	; 0x40
   410ac:	bl	29bc <InflateRankDims>
   410b0:	str	r0, [sp, #20]
   410b4:	mov	r1, #1
   410b8:	ldr	r0, [sp, #44]	; 0x2c
   410bc:	cmp	r0, #0
   410c0:	ldreq	r0, [sp, #16]
   410c4:	streq	r0, [sp, #44]	; 0x2c
   410c8:	moveq	r1, #0
   410cc:	str	r1, [sp, #24]
   410d0:	mov	r5, r8
   410d4:	ldr	r0, [r4, #20]
   410d8:	cmp	r0, #0
   410dc:	beq	410f0 <ReadNextCell+0x2f4>
   410e0:	add	r0, sp, #48	; 0x30
   410e4:	bl	1c3c <Mat_uint32Swap>
   410e8:	ldr	r0, [sp, #32]
   410ec:	bl	1c3c <Mat_uint32Swap>
   410f0:	sub	r8, r7, #24
   410f4:	ldr	r0, [sp, #48]	; 0x30
   410f8:	cmp	r0, #5
   410fc:	bne	411d8 <ReadNextCell+0x3dc>
   41100:	str	r5, [sp, #8]
   41104:	ldr	r4, [sp, #52]	; 0x34
   41108:	asr	r0, r4, #31
   4110c:	add	r0, r4, r0, lsr #30
   41110:	asr	r1, r0, #2
   41114:	ldr	r5, [sl]
   41118:	str	r1, [r5, #4]
   4111c:	bic	r0, r0, #3
   41120:	bl	18e8 <malloc@plt>
   41124:	str	r0, [r5, #32]
   41128:	sub	r8, r8, r4
   4112c:	str	r8, [sp, #4]
   41130:	ldr	r4, [sp, #36]	; 0x24
   41134:	ldr	r0, [sl]
   41138:	ldr	r1, [r0, #4]
   4113c:	ldr	r2, [r4, #20]
   41140:	cmp	r2, #0
   41144:	beq	4118c <ReadNextCell+0x390>
   41148:	cmp	r1, #1
   4114c:	blt	411c0 <ReadNextCell+0x3c4>
   41150:	mov	r5, #0
   41154:	mov	r8, #0
   41158:	ldr	r0, [sp, #44]	; 0x2c
   4115c:	add	r0, r0, r5
   41160:	bl	1c3c <Mat_uint32Swap>
   41164:	ldr	r1, [sl]
   41168:	ldr	r1, [r1, #32]
   4116c:	str	r0, [r1, r5]
   41170:	add	r5, r5, #4
   41174:	add	r8, r8, #1
   41178:	ldr	r0, [sl]
   4117c:	ldr	r0, [r0, #4]
   41180:	cmp	r8, r0
   41184:	blt	41158 <ReadNextCell+0x35c>
   41188:	b	411c0 <ReadNextCell+0x3c4>
   4118c:	cmp	r1, #1
   41190:	blt	411c0 <ReadNextCell+0x3c4>
   41194:	ldr	r1, [sl]
   41198:	mov	r2, #0
   4119c:	ldr	r3, [sp, #44]	; 0x2c
   411a0:	ldr	r7, [r3, r2, lsl #2]
   411a4:	ldr	r0, [r0, #32]
   411a8:	str	r7, [r0, r2, lsl #2]
   411ac:	add	r2, r2, #1
   411b0:	ldr	r0, [r1, #4]
   411b4:	cmp	r2, r0
   411b8:	mov	r0, r1
   411bc:	blt	411a0 <ReadNextCell+0x3a4>
   411c0:	ldr	r0, [sl]
   411c4:	ldrb	r0, [r0, #4]
   411c8:	tst	r0, #1
   411cc:	ldr	r8, [sp, #4]
   411d0:	subne	r8, r8, #4
   411d4:	ldr	r5, [sp, #8]
   411d8:	ldr	r7, [sp, #20]
   411dc:	ldr	r0, [sp, #24]
   411e0:	cmp	r0, #0
   411e4:	beq	411f0 <ReadNextCell+0x3f4>
   411e8:	ldr	r0, [sp, #44]	; 0x2c
   411ec:	bl	181c <free@plt>
   411f0:	add	r7, r7, r5
   411f4:	mov	r0, r4
   411f8:	mov	r1, r6
   411fc:	mov	r6, r4
   41200:	add	r4, sp, #48	; 0x30
   41204:	mov	r2, r4
   41208:	bl	2ca4 <InflateVarNameTag>
   4120c:	mov	r5, r0
   41210:	ldr	r0, [r6, #20]
   41214:	cmp	r0, #0
   41218:	beq	4122c <ReadNextCell+0x430>
   4121c:	mov	r0, r4
   41220:	bl	1c3c <Mat_uint32Swap>
   41224:	ldr	r0, [sp, #32]
   41228:	bl	1c3c <Mat_uint32Swap>
   4122c:	add	r5, r7, r5
   41230:	sub	r0, r8, #8
   41234:	str	r0, [sp, #24]
   41238:	ldr	r7, [sp, #52]	; 0x34
   4123c:	cmp	r7, #0
   41240:	beq	412bc <ReadNextCell+0x4c0>
   41244:	ldr	r0, [sp, #48]	; 0x30
   41248:	cmp	r0, #1
   4124c:	bne	412cc <ReadNextCell+0x4d0>
   41250:	ands	r0, r7, #7
   41254:	rsb	r0, r0, #8
   41258:	addne	r7, r7, r0
   4125c:	add	r0, r7, #1
   41260:	bl	18e8 <malloc@plt>
   41264:	ldr	r1, [sl]
   41268:	str	r0, [r1, #36]	; 0x24
   4126c:	ldr	r0, [sp, #24]
   41270:	sub	r0, r0, r7
   41274:	str	r0, [sp, #24]
   41278:	ldr	r0, [sl]
   4127c:	ldr	r2, [r0, #36]	; 0x24
   41280:	cmp	r2, #0
   41284:	ldr	r4, [sp, #36]	; 0x24
   41288:	ldr	r6, [sp, #28]
   4128c:	beq	4133c <ReadNextCell+0x540>
   41290:	mov	r0, r4
   41294:	mov	r1, r6
   41298:	mov	r3, r7
   4129c:	bl	2df4 <InflateVarName>
   412a0:	ldr	r1, [sl]
   412a4:	ldr	r1, [r1, #36]	; 0x24
   412a8:	mov	r2, #0
   412ac:	strb	r2, [r1, r7]
   412b0:	mov	r8, r5
   412b4:	add	r8, r0, r5
   412b8:	b	41334 <ReadNextCell+0x538>
   412bc:	ldr	r7, [sp, #40]	; 0x28
   412c0:	ldr	r4, [sp, #36]	; 0x24
   412c4:	ldr	r6, [sp, #28]
   412c8:	b	41340 <ReadNextCell+0x544>
   412cc:	lsr	r7, r0, #16
   412d0:	cmp	r7, #4
   412d4:	ldr	r4, [sp, #36]	; 0x24
   412d8:	ldr	r6, [sp, #28]
   412dc:	bhi	4133c <ReadNextCell+0x540>
   412e0:	uxth	r0, r0
   412e4:	cmp	r0, #1
   412e8:	bne	4133c <ReadNextCell+0x540>
   412ec:	cmp	r7, #0
   412f0:	mov	r8, r5
   412f4:	beq	41334 <ReadNextCell+0x538>
   412f8:	add	r0, r7, #1
   412fc:	bl	18e8 <malloc@plt>
   41300:	ldr	r1, [sl]
   41304:	str	r0, [r1, #36]	; 0x24
   41308:	ldr	r0, [sl]
   4130c:	ldr	r0, [r0, #36]	; 0x24
   41310:	cmp	r0, #0
   41314:	beq	41334 <ReadNextCell+0x538>
   41318:	ldr	r1, [sp, #32]
   4131c:	mov	r2, r7
   41320:	bl	1834 <memcpy@plt>
   41324:	ldr	r0, [sl]
   41328:	ldr	r0, [r0, #36]	; 0x24
   4132c:	mov	r1, #0
   41330:	strb	r1, [r0, r7]
   41334:	ldr	r7, [sp, #40]	; 0x28
   41338:	b	41344 <ReadNextCell+0x548>
   4133c:	ldr	r7, [sp, #40]	; 0x28
   41340:	mov	r8, r5
   41344:	ldr	r5, [sp, #24]
   41348:	mov	r0, #1
   4134c:	mov	r1, #56	; 0x38
   41350:	bl	17b0 <calloc@plt>
   41354:	ldr	r1, [sl]
   41358:	ldr	r1, [r1, #52]	; 0x34
   4135c:	str	r0, [r1, #12]
   41360:	ldr	r0, [sl]
   41364:	ldr	r0, [r0, #52]	; 0x34
   41368:	ldr	r0, [r0, #12]
   4136c:	cmp	r0, #0
   41370:	beq	413a0 <ReadNextCell+0x5a4>
   41374:	ldr	r1, [r6, #52]	; 0x34
   41378:	ldr	r1, [r1, #12]
   4137c:	bl	1960 <inflateCopy@plt>
   41380:	cmp	r0, #0
   41384:	beq	413b0 <ReadNextCell+0x5b4>
   41388:	bl	18a0 <zError@plt>
   4138c:	mov	r1, r0
   41390:	ldr	r0, [pc, #1180]	; 41834 <ReadNextCell+0xa38>
   41394:	add	r0, pc, r0
   41398:	bl	19cc <Mat_Critical@plt>
   4139c:	b	414b4 <ReadNextCell+0x6b8>
   413a0:	ldr	r0, [pc, #1168]	; 41838 <ReadNextCell+0xa3c>
   413a4:	add	r0, pc, r0
   413a8:	bl	19cc <Mat_Critical@plt>
   413ac:	b	414b4 <ReadNextCell+0x6b8>
   413b0:	ldr	r0, [r4]
   413b4:	bl	1858 <ftell@plt>
   413b8:	ldr	r1, [sl]
   413bc:	ldr	r2, [r1, #52]	; 0x34
   413c0:	str	r0, [r2]
   413c4:	cmn	r0, #1
   413c8:	beq	41404 <ReadNextCell+0x608>
   413cc:	ldr	r3, [r6, #52]	; 0x34
   413d0:	ldr	r3, [r3, #12]
   413d4:	ldr	r3, [r3, #4]
   413d8:	sub	r0, r0, r3
   413dc:	str	r0, [r2]
   413e0:	ldr	r0, [r1, #16]
   413e4:	cmp	r0, #1
   413e8:	beq	41414 <ReadNextCell+0x618>
   413ec:	cmp	r0, #2
   413f0:	bne	41424 <ReadNextCell+0x628>
   413f4:	mov	r0, r4
   413f8:	bl	3fffc <ReadNextStructField>
   413fc:	add	r8, r0, r8
   41400:	b	41450 <ReadNextCell+0x654>
   41404:	ldr	r0, [pc, #1060]	; 41830 <ReadNextCell+0xa34>
   41408:	add	r0, pc, r0
   4140c:	bl	19cc <Mat_Critical@plt>
   41410:	b	41468 <ReadNextCell+0x66c>
   41414:	mov	r0, r4
   41418:	bl	40dfc <ReadNextCell>
   4141c:	add	r8, r0, r8
   41420:	b	41450 <ReadNextCell+0x654>
   41424:	cmp	r5, #32768	; 0x8000
   41428:	bgt	41450 <ReadNextCell+0x654>
   4142c:	mov	r0, r4
   41430:	bl	1ff14 <Mat_VarRead5>
   41434:	ldr	r0, [sl]
   41438:	ldr	r1, [r0, #40]	; 0x28
   4143c:	ldr	r0, [r0, #52]	; 0x34
   41440:	str	r1, [r0, #16]
   41444:	ldr	r0, [sl]
   41448:	mov	r1, #0
   4144c:	str	r1, [r0, #40]	; 0x28
   41450:	ldr	r0, [r4]
   41454:	ldr	r1, [sl]
   41458:	ldr	r1, [r1, #52]	; 0x34
   4145c:	ldr	r1, [r1]
   41460:	mov	r2, #0
   41464:	bl	1a68 <fseek@plt>
   41468:	ldr	r1, [sl]
   4146c:	ldr	r0, [r1, #52]	; 0x34
   41470:	ldr	r2, [r0, #16]
   41474:	cmp	r2, #0
   41478:	bne	4148c <ReadNextCell+0x690>
   4147c:	ldr	r1, [r1, #16]
   41480:	sub	r1, r1, #1
   41484:	cmp	r1, #1
   41488:	bhi	414b4 <ReadNextCell+0x6b8>
   4148c:	ldr	r0, [r0, #12]
   41490:	bl	1954 <inflateEnd@plt>
   41494:	ldr	r0, [sl]
   41498:	ldr	r0, [r0, #52]	; 0x34
   4149c:	ldr	r0, [r0, #12]
   414a0:	bl	181c <free@plt>
   414a4:	ldr	r0, [sl]
   414a8:	ldr	r0, [r0, #52]	; 0x34
   414ac:	mov	r1, #0
   414b0:	str	r1, [r0, #12]
   414b4:	ldr	r0, [r6, #52]	; 0x34
   414b8:	ldr	r1, [r0, #12]
   414bc:	mov	r0, r4
   414c0:	mov	r2, r5
   414c4:	bl	234c <InflateSkip>
   414c8:	add	r8, r0, r8
   414cc:	add	r9, r9, #1
   414d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   414d4:	cmp	r9, r0
   414d8:	bcc	40ef0 <ReadNextCell+0xf4>
   414dc:	b	40e5c <ReadNextCell+0x60>
   414e0:	ldr	r1, [r6, #36]	; 0x24
   414e4:	mov	r8, #0
   414e8:	cmp	r1, #0
   414ec:	beq	40e5c <ReadNextCell+0x60>
   414f0:	ldr	r0, [pc, #808]	; 41820 <ReadNextCell+0xa24>
   414f4:	add	r0, pc, r0
   414f8:	bl	19cc <Mat_Critical@plt>
   414fc:	b	40e5c <ReadNextCell+0x60>
   41500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   41504:	cmp	r0, #0
   41508:	beq	40e58 <ReadNextCell+0x5c>
   4150c:	add	sl, sp, #48	; 0x30
   41510:	add	r0, sl, #20
   41514:	str	r0, [sp, #28]
   41518:	add	r0, sl, #16
   4151c:	str	r0, [sp, #24]
   41520:	add	r0, sl, #12
   41524:	str	r0, [sp, #20]
   41528:	add	r0, sl, #8
   4152c:	str	r0, [sp, #16]
   41530:	add	r0, sl, #4
   41534:	str	r0, [sp, #32]
   41538:	mov	r8, #0
   4153c:	mov	r6, #0
   41540:	bl	18b8 <Mat_VarCalloc@plt>
   41544:	str	r0, [r7, r6, lsl #2]
   41548:	cmp	r0, #0
   4154c:	beq	41700 <ReadNextCell+0x904>
   41550:	ldr	r3, [r4]
   41554:	mov	r0, sl
   41558:	mov	r1, #4
   4155c:	mov	r2, #2
   41560:	bl	18d0 <fread@plt>
   41564:	cmp	r0, #0
   41568:	beq	417b8 <ReadNextCell+0x9bc>
   4156c:	mov	r5, r0
   41570:	ldr	r0, [r4, #20]
   41574:	cmp	r0, #0
   41578:	beq	4158c <ReadNextCell+0x790>
   4157c:	mov	r0, sl
   41580:	bl	1c3c <Mat_uint32Swap>
   41584:	ldr	r0, [sp, #32]
   41588:	bl	1c3c <Mat_uint32Swap>
   4158c:	add	r8, r5, r8
   41590:	ldr	r9, [sp, #52]	; 0x34
   41594:	cmp	r9, #0
   41598:	beq	41714 <ReadNextCell+0x918>
   4159c:	ldr	r0, [sp, #48]	; 0x30
   415a0:	cmp	r0, #14
   415a4:	bne	417ec <ReadNextCell+0x9f0>
   415a8:	ldr	r3, [r4]
   415ac:	mov	r0, sl
   415b0:	mov	r1, #4
   415b4:	mov	r2, #6
   415b8:	bl	18d0 <fread@plt>
   415bc:	mov	r7, r0
   415c0:	ldr	r0, [r4, #20]
   415c4:	cmp	r0, #0
   415c8:	beq	415fc <ReadNextCell+0x800>
   415cc:	mov	r0, sl
   415d0:	bl	1c3c <Mat_uint32Swap>
   415d4:	ldr	r0, [sp, #32]
   415d8:	bl	1c3c <Mat_uint32Swap>
   415dc:	ldr	r0, [sp, #16]
   415e0:	bl	1c3c <Mat_uint32Swap>
   415e4:	ldr	r0, [sp, #20]
   415e8:	bl	1c3c <Mat_uint32Swap>
   415ec:	ldr	r0, [sp, #24]
   415f0:	bl	1c3c <Mat_uint32Swap>
   415f4:	ldr	r0, [sp, #28]
   415f8:	bl	1c3c <Mat_uint32Swap>
   415fc:	ldr	r0, [sp, #48]	; 0x30
   41600:	cmp	r0, #6
   41604:	bne	4164c <ReadNextCell+0x850>
   41608:	ldr	r0, [sp, #40]	; 0x28
   4160c:	ldr	r0, [r0, r6, lsl #2]
   41610:	ldr	r1, [sp, #56]	; 0x38
   41614:	and	r2, r1, #2048	; 0x800
   41618:	and	r3, r1, #1024	; 0x400
   4161c:	mov	ip, r7
   41620:	and	r7, r1, #512	; 0x200
   41624:	uxtb	r1, r1
   41628:	cmp	r1, #18
   4162c:	mov	r5, #0
   41630:	movcs	r1, r5
   41634:	add	lr, r0, #16
   41638:	stm	lr, {r1, r2, r3, r7}
   4163c:	mov	r7, ip
   41640:	cmp	r1, #5
   41644:	ldreq	r1, [sp, #60]	; 0x3c
   41648:	streq	r1, [r0]
   4164c:	add	r7, r7, r8
   41650:	ldr	r0, [sp, #40]	; 0x28
   41654:	ldr	r1, [r0, r6, lsl #2]
   41658:	ldr	r2, [sp, #64]	; 0x40
   4165c:	ldr	r3, [sp, #68]	; 0x44
   41660:	mov	r0, r4
   41664:	bl	41848 <ReadRankDims>
   41668:	mov	r5, r0
   4166c:	ldr	r3, [r4]
   41670:	mov	r0, sl
   41674:	mov	r1, #1
   41678:	mov	r2, #8
   4167c:	bl	18d0 <fread@plt>
   41680:	mov	r8, r0
   41684:	mov	r0, r4
   41688:	sub	r4, r9, #32
   4168c:	ldr	r0, [r0, #20]
   41690:	cmp	r0, #0
   41694:	beq	416a8 <ReadNextCell+0x8ac>
   41698:	mov	r0, sl
   4169c:	bl	1c3c <Mat_uint32Swap>
   416a0:	ldr	r0, [sp, #32]
   416a4:	bl	1c3c <Mat_uint32Swap>
   416a8:	add	r7, r7, r5
   416ac:	sub	r9, r4, r5
   416b0:	ldr	r5, [sp, #52]	; 0x34
   416b4:	cmp	r5, #0
   416b8:	beq	41730 <ReadNextCell+0x934>
   416bc:	ldr	r0, [sp, #48]	; 0x30
   416c0:	cmp	r0, #1
   416c4:	ldr	r4, [sp, #36]	; 0x24
   416c8:	bne	41734 <ReadNextCell+0x938>
   416cc:	asr	r0, r5, #31
   416d0:	add	r0, r5, r0, lsr #29
   416d4:	bic	r0, r0, #7
   416d8:	sub	r0, r5, r0
   416dc:	rsb	r1, r0, #8
   416e0:	cmp	r0, #0
   416e4:	addgt	r5, r5, r1
   416e8:	ldr	r0, [r4]
   416ec:	mov	r1, r5
   416f0:	mov	r2, #1
   416f4:	bl	1a68 <fseek@plt>
   416f8:	sub	r9, r9, r5
   416fc:	b	41734 <ReadNextCell+0x938>
   41700:	ldr	r0, [pc, #308]	; 4183c <ReadNextCell+0xa40>
   41704:	add	r0, pc, r0
   41708:	mov	r1, r6
   4170c:	bl	19cc <Mat_Critical@plt>
   41710:	b	417b8 <ReadNextCell+0x9bc>
   41714:	ldr	r0, [r7, r6, lsl #2]
   41718:	ldr	r0, [r0, #52]	; 0x34
   4171c:	bl	181c <free@plt>
   41720:	ldr	r0, [r7, r6, lsl #2]
   41724:	mov	r1, #0
   41728:	str	r1, [r0, #52]	; 0x34
   4172c:	b	417b8 <ReadNextCell+0x9bc>
   41730:	ldr	r4, [sp, #36]	; 0x24
   41734:	add	r8, r7, r8
   41738:	ldr	r0, [r4]
   4173c:	bl	1858 <ftell@plt>
   41740:	ldr	r7, [sp, #40]	; 0x28
   41744:	ldr	r1, [r7, r6, lsl #2]
   41748:	ldr	r2, [r1, #52]	; 0x34
   4174c:	str	r0, [r2]
   41750:	cmn	r0, #1
   41754:	beq	417ac <ReadNextCell+0x9b0>
   41758:	ldr	r0, [r1, #16]
   4175c:	cmp	r0, #2
   41760:	bne	41770 <ReadNextCell+0x974>
   41764:	mov	r0, r4
   41768:	bl	3fffc <ReadNextStructField>
   4176c:	add	r8, r0, r8
   41770:	ldr	r1, [r7, r6, lsl #2]
   41774:	ldr	r0, [r1, #16]
   41778:	cmp	r0, #1
   4177c:	bne	4178c <ReadNextCell+0x990>
   41780:	mov	r0, r4
   41784:	bl	40dfc <ReadNextCell>
   41788:	add	r8, r0, r8
   4178c:	ldr	r0, [r7, r6, lsl #2]
   41790:	ldr	r0, [r0, #52]	; 0x34
   41794:	ldr	r0, [r0]
   41798:	add	r1, r0, r9
   4179c:	ldr	r0, [r4]
   417a0:	mov	r2, #0
   417a4:	bl	1a68 <fseek@plt>
   417a8:	b	417b8 <ReadNextCell+0x9bc>
   417ac:	ldr	r0, [pc, #144]	; 41844 <ReadNextCell+0xa48>
   417b0:	add	r0, pc, r0
   417b4:	bl	19cc <Mat_Critical@plt>
   417b8:	add	r6, r6, #1
   417bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   417c0:	cmp	r6, r0
   417c4:	bcc	41540 <ReadNextCell+0x744>
   417c8:	b	40e5c <ReadNextCell+0x60>
   417cc:	bl	1930 <Mat_VarFree@plt>
   417d0:	mov	r0, #0
   417d4:	str	r0, [sl]
   417d8:	ldr	r0, [pc, #72]	; 41828 <ReadNextCell+0xa2c>
   417dc:	add	r0, pc, r0
   417e0:	mov	r1, r9
   417e4:	bl	19cc <Mat_Critical@plt>
   417e8:	b	40e5c <ReadNextCell+0x60>
   417ec:	ldr	r0, [r7, r6, lsl #2]
   417f0:	bl	1930 <Mat_VarFree@plt>
   417f4:	mov	r0, #0
   417f8:	str	r0, [r7, r6, lsl #2]
   417fc:	ldr	r0, [r4]
   41800:	bl	1858 <ftell@plt>
   41804:	mov	r2, r0
   41808:	ldr	r0, [pc, #48]	; 41840 <ReadNextCell+0xa44>
   4180c:	add	r0, pc, r0
   41810:	mov	r1, r6
   41814:	bl	19cc <Mat_Critical@plt>
   41818:	b	40e5c <ReadNextCell+0x60>
   4181c:	.word	0x000084d4
   41820:	.word	0x00008149
   41824:	.word	0x0000864b
   41828:	.word	0x00007ead
   4182c:	.word	0x00008582
   41830:	.word	0x00007e90
   41834:	.word	0x0000813b
   41838:	.word	0x00008257
   4183c:	.word	0x00007f5f
   41840:	.word	0x00007eac
   41844:	.word	0x00007ae8

00041848 <ReadRankDims>:
   41848:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   4184c:	add	fp, sp, #24
   41850:	sub	sp, sp, #8
   41854:	mov	r7, #0
   41858:	cmp	r2, #5
   4185c:	bne	41978 <ReadRankDims+0x130>
   41860:	mov	r4, r1
   41864:	mov	r9, r0
   41868:	lsr	r0, r3, #2
   4186c:	str	r0, [r1, #4]
   41870:	bic	r0, r3, #3
   41874:	bl	18e8 <malloc@plt>
   41878:	str	r0, [r4, #32]
   4187c:	cmp	r0, #0
   41880:	beq	41900 <ReadRankDims+0xb8>
   41884:	ldr	r0, [r4, #4]
   41888:	cmp	r0, #1
   4188c:	blt	41914 <ReadRankDims+0xcc>
   41890:	mov	r6, #0
   41894:	add	r8, sp, #4
   41898:	mov	r5, #0
   4189c:	ldr	r3, [r9]
   418a0:	mov	r0, r8
   418a4:	mov	r1, #4
   418a8:	mov	r2, #1
   418ac:	bl	18d0 <fread@plt>
   418b0:	cmp	r0, #1
   418b4:	bne	41944 <ReadRankDims+0xfc>
   418b8:	ldr	r0, [r9, #20]
   418bc:	cmp	r0, #0
   418c0:	beq	418d0 <ReadRankDims+0x88>
   418c4:	mov	r0, r8
   418c8:	bl	1c3c <Mat_uint32Swap>
   418cc:	b	418d4 <ReadRankDims+0x8c>
   418d0:	ldr	r0, [sp, #4]
   418d4:	add	r7, r6, #4
   418d8:	ldr	r1, [r4, #32]
   418dc:	str	r0, [r1, r6]
   418e0:	add	r5, r5, #1
   418e4:	ldr	r0, [r4, #4]
   418e8:	cmp	r5, r0
   418ec:	mov	r6, r7
   418f0:	blt	4189c <ReadRankDims+0x54>
   418f4:	tst	r0, #1
   418f8:	bne	41920 <ReadRankDims+0xd8>
   418fc:	b	41978 <ReadRankDims+0x130>
   41900:	mov	r7, #0
   41904:	str	r7, [r4, #4]
   41908:	ldr	r0, [pc, #124]	; 4198c <ReadRankDims+0x144>
   4190c:	add	r0, pc, r0
   41910:	b	41974 <ReadRankDims+0x12c>
   41914:	mov	r7, #0
   41918:	tst	r0, #1
   4191c:	beq	41978 <ReadRankDims+0x130>
   41920:	ldr	r3, [r9]
   41924:	add	r0, sp, #4
   41928:	mov	r1, #4
   4192c:	mov	r2, #1
   41930:	bl	18d0 <fread@plt>
   41934:	cmp	r0, #1
   41938:	bne	4196c <ReadRankDims+0x124>
   4193c:	add	r7, r7, #4
   41940:	b	41978 <ReadRankDims+0x130>
   41944:	ldr	r0, [r4, #32]
   41948:	bl	181c <free@plt>
   4194c:	mov	r0, #0
   41950:	str	r0, [r4, #4]
   41954:	str	r0, [r4, #32]
   41958:	ldr	r0, [pc, #40]	; 41988 <ReadRankDims+0x140>
   4195c:	add	r0, pc, r0
   41960:	bl	19cc <Mat_Critical@plt>
   41964:	mov	r7, r6
   41968:	b	41978 <ReadRankDims+0x130>
   4196c:	ldr	r0, [pc, #16]	; 41984 <ReadRankDims+0x13c>
   41970:	add	r0, pc, r0
   41974:	bl	19cc <Mat_Critical@plt>
   41978:	mov	r0, r7
   4197c:	sub	sp, fp, #24
   41980:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   41984:	.word	0x00007bb4
   41988:	.word	0x00007bc8
   4198c:	.word	0x00007769

00041990 <ReadNextFunctionHandle>:
   41990:	push	{r4, r5, r6, sl, fp, lr}
   41994:	add	fp, sp, #16
   41998:	sub	sp, sp, #8
   4199c:	mov	r5, r1
   419a0:	mov	r4, r0
   419a4:	mov	r0, #1
   419a8:	str	r0, [sp, #4]
   419ac:	add	r1, sp, #4
   419b0:	mov	r0, r5
   419b4:	bl	4479c <SafeMulDims>
   419b8:	mov	r0, #4
   419bc:	str	r0, [r5, #12]
   419c0:	ldr	r1, [sp, #4]
   419c4:	mov	r0, r5
   419c8:	mov	r2, #4
   419cc:	bl	4481c <SafeMul>
   419d0:	ldr	r0, [r5]
   419d4:	bl	18e8 <malloc@plt>
   419d8:	str	r0, [r5, #40]	; 0x28
   419dc:	cmp	r0, #0
   419e0:	beq	41a1c <ReadNextFunctionHandle+0x8c>
   419e4:	mov	r6, r0
   419e8:	ldr	r0, [sp, #4]
   419ec:	cmp	r0, #0
   419f0:	beq	41a14 <ReadNextFunctionHandle+0x84>
   419f4:	mov	r5, #0
   419f8:	mov	r0, r4
   419fc:	bl	1a8c <Mat_VarReadNextInfo@plt>
   41a00:	str	r0, [r6, r5, lsl #2]
   41a04:	add	r5, r5, #1
   41a08:	ldr	r0, [sp, #4]
   41a0c:	cmp	r5, r0
   41a10:	bcc	419f8 <ReadNextFunctionHandle+0x68>
   41a14:	sub	sp, fp, #16
   41a18:	pop	{r4, r5, r6, sl, fp, pc}
   41a1c:	mov	r0, #0
   41a20:	str	r0, [r5]
   41a24:	str	r0, [r5, #12]
   41a28:	sub	sp, fp, #16
   41a2c:	pop	{r4, r5, r6, sl, fp, pc}

00041a30 <WriteData>:
   41a30:	push	{r4, r5, r6, r7, fp, lr}
   41a34:	add	fp, sp, #16
   41a38:	sub	sp, sp, #8
   41a3c:	mov	r6, r0
   41a40:	str	r3, [sp, #4]
   41a44:	mov	r0, #0
   41a48:	str	r0, [sp]
   41a4c:	cmp	r6, #0
   41a50:	beq	41acc <WriteData+0x9c>
   41a54:	mov	r5, r1
   41a58:	ldr	r1, [r6]
   41a5c:	cmp	r1, #0
   41a60:	beq	41acc <WriteData+0x9c>
   41a64:	mov	r4, r2
   41a68:	mov	r0, r3
   41a6c:	bl	193c <Mat_SizeOf@plt>
   41a70:	mov	r7, r0
   41a74:	mul	r0, r0, r4
   41a78:	str	r0, [sp]
   41a7c:	ldr	r3, [r6]
   41a80:	add	r0, sp, #4
   41a84:	mov	r1, #4
   41a88:	mov	r2, #1
   41a8c:	bl	18c4 <fwrite@plt>
   41a90:	ldr	r3, [r6]
   41a94:	mov	r0, sp
   41a98:	mov	r1, #4
   41a9c:	mov	r2, #1
   41aa0:	bl	18c4 <fwrite@plt>
   41aa4:	cmp	r5, #0
   41aa8:	beq	41ac8 <WriteData+0x98>
   41aac:	cmp	r4, #1
   41ab0:	blt	41ac8 <WriteData+0x98>
   41ab4:	ldr	r3, [r6]
   41ab8:	mov	r0, r5
   41abc:	mov	r1, r7
   41ac0:	mov	r2, r4
   41ac4:	bl	18c4 <fwrite@plt>
   41ac8:	ldr	r0, [sp]
   41acc:	sub	sp, fp, #16
   41ad0:	pop	{r4, r5, r6, r7, fp, pc}

00041ad4 <WriteCharData>:
   41ad4:	push	{r4, r5, r6, r7, fp, lr}
   41ad8:	add	fp, sp, #16
   41adc:	sub	sp, sp, #16
   41ae0:	mov	r4, r0
   41ae4:	str	r3, [sp, #12]
   41ae8:	mov	r0, #0
   41aec:	str	r0, [sp, #8]
   41af0:	cmp	r3, #16
   41af4:	bhi	41d44 <WriteCharData+0x270>
   41af8:	mov	r6, r2
   41afc:	mov	r5, r1
   41b00:	add	r0, pc, #4
   41b04:	ldr	r1, [r0, r3, lsl #2]
   41b08:	add	pc, r0, r1
   41b0c:	.word	0x000000ec
   41b10:	.word	0x00000044
   41b14:	.word	0x00000044
   41b18:	.word	0x00000238
   41b1c:	.word	0x00000128
   41b20:	.word	0x00000238
   41b24:	.word	0x00000238
   41b28:	.word	0x00000238
   41b2c:	.word	0x00000238
   41b30:	.word	0x00000238
   41b34:	.word	0x00000238
   41b38:	.word	0x00000238
   41b3c:	.word	0x00000238
   41b40:	.word	0x00000238
   41b44:	.word	0x00000238
   41b48:	.word	0x00000238
   41b4c:	.word	0x000001b4
   41b50:	mov	r0, #4
   41b54:	str	r0, [sp, #12]
   41b58:	lsl	r0, r6, #1
   41b5c:	str	r0, [sp, #8]
   41b60:	ldr	r3, [r4]
   41b64:	add	r0, sp, #12
   41b68:	mov	r1, #4
   41b6c:	mov	r2, #1
   41b70:	bl	18c4 <fwrite@plt>
   41b74:	ldr	r3, [r4]
   41b78:	add	r0, sp, #8
   41b7c:	mov	r1, #4
   41b80:	mov	r2, #1
   41b84:	bl	18c4 <fwrite@plt>
   41b88:	cmp	r5, #0
   41b8c:	beq	41d44 <WriteCharData+0x270>
   41b90:	cmp	r6, #1
   41b94:	blt	41bc0 <WriteCharData+0xec>
   41b98:	add	r7, sp, #6
   41b9c:	ldrb	r0, [r5], #1
   41ba0:	strh	r0, [sp, #6]
   41ba4:	ldr	r3, [r4]
   41ba8:	mov	r0, r7
   41bac:	mov	r1, #2
   41bb0:	mov	r2, #1
   41bb4:	bl	18c4 <fwrite@plt>
   41bb8:	subs	r6, r6, #1
   41bbc:	bne	41b9c <WriteCharData+0xc8>
   41bc0:	ldr	r0, [sp, #8]
   41bc4:	asr	r1, r0, #31
   41bc8:	add	r1, r0, r1, lsr #29
   41bcc:	bic	r1, r1, #7
   41bd0:	subs	r0, r0, r1
   41bd4:	beq	41d44 <WriteCharData+0x270>
   41bd8:	sub	r5, r0, #1
   41bdc:	ldr	r1, [r4]
   41be0:	mov	r0, #0
   41be4:	bl	1a08 <fputc@plt>
   41be8:	add	r5, r5, #1
   41bec:	cmp	r5, #7
   41bf0:	blt	41bdc <WriteCharData+0x108>
   41bf4:	b	41d44 <WriteCharData+0x270>
   41bf8:	mov	r0, #4
   41bfc:	str	r0, [sp, #12]
   41c00:	lsl	r0, r6, #1
   41c04:	str	r0, [sp, #8]
   41c08:	ldr	r3, [r4]
   41c0c:	add	r0, sp, #12
   41c10:	mov	r1, #4
   41c14:	mov	r2, #1
   41c18:	bl	18c4 <fwrite@plt>
   41c1c:	ldr	r3, [r4]
   41c20:	add	r0, sp, #8
   41c24:	mov	r1, #4
   41c28:	mov	r2, #1
   41c2c:	bl	18c4 <fwrite@plt>
   41c30:	b	41d44 <WriteCharData+0x270>
   41c34:	lsl	r0, r6, #1
   41c38:	str	r0, [sp, #8]
   41c3c:	ldr	r3, [r4]
   41c40:	add	r0, sp, #12
   41c44:	mov	r1, #4
   41c48:	mov	r2, #1
   41c4c:	bl	18c4 <fwrite@plt>
   41c50:	ldr	r3, [r4]
   41c54:	add	r0, sp, #8
   41c58:	mov	r1, #4
   41c5c:	mov	r2, #1
   41c60:	bl	18c4 <fwrite@plt>
   41c64:	cmp	r5, #0
   41c68:	beq	41c88 <WriteCharData+0x1b4>
   41c6c:	cmp	r6, #1
   41c70:	blt	41c88 <WriteCharData+0x1b4>
   41c74:	ldr	r3, [r4]
   41c78:	mov	r0, r5
   41c7c:	mov	r1, #2
   41c80:	mov	r2, r6
   41c84:	bl	18c4 <fwrite@plt>
   41c88:	ldr	r0, [sp, #8]
   41c8c:	asr	r1, r0, #31
   41c90:	add	r1, r0, r1, lsr #29
   41c94:	bic	r1, r1, #7
   41c98:	subs	r0, r0, r1
   41c9c:	beq	41d44 <WriteCharData+0x270>
   41ca0:	sub	r5, r0, #1
   41ca4:	ldr	r1, [r4]
   41ca8:	mov	r0, #0
   41cac:	bl	1a08 <fputc@plt>
   41cb0:	add	r5, r5, #1
   41cb4:	cmp	r5, #7
   41cb8:	blt	41ca4 <WriteCharData+0x1d0>
   41cbc:	b	41d44 <WriteCharData+0x270>
   41cc0:	str	r6, [sp, #8]
   41cc4:	ldr	r3, [r4]
   41cc8:	add	r0, sp, #12
   41ccc:	mov	r1, #4
   41cd0:	mov	r2, #1
   41cd4:	bl	18c4 <fwrite@plt>
   41cd8:	ldr	r3, [r4]
   41cdc:	add	r0, sp, #8
   41ce0:	mov	r1, #4
   41ce4:	mov	r2, #1
   41ce8:	bl	18c4 <fwrite@plt>
   41cec:	ldr	r6, [sp, #8]
   41cf0:	cmp	r5, #0
   41cf4:	beq	41d14 <WriteCharData+0x240>
   41cf8:	cmp	r6, #1
   41cfc:	blt	41d14 <WriteCharData+0x240>
   41d00:	ldr	r3, [r4]
   41d04:	mov	r0, r5
   41d08:	mov	r1, #1
   41d0c:	mov	r2, r6
   41d10:	bl	18c4 <fwrite@plt>
   41d14:	asr	r0, r6, #31
   41d18:	add	r0, r6, r0, lsr #29
   41d1c:	bic	r0, r0, #7
   41d20:	subs	r0, r6, r0
   41d24:	beq	41d44 <WriteCharData+0x270>
   41d28:	sub	r5, r0, #1
   41d2c:	ldr	r1, [r4]
   41d30:	mov	r0, #0
   41d34:	bl	1a08 <fputc@plt>
   41d38:	add	r5, r5, #1
   41d3c:	cmp	r5, #7
   41d40:	blt	41d2c <WriteCharData+0x258>
   41d44:	ldr	r0, [sp, #8]
   41d48:	sub	sp, fp, #16
   41d4c:	pop	{r4, r5, r6, r7, fp, pc}

00041d50 <WriteCellArrayField>:
   41d50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   41d54:	add	fp, sp, #24
   41d58:	sub	sp, sp, #40	; 0x28
   41d5c:	mov	r5, r1
   41d60:	mov	r4, r0
   41d64:	mov	r0, #1
   41d68:	strh	r0, [fp, #-30]	; 0xffffffe2
   41d6c:	mov	r0, #6
   41d70:	str	r0, [sp, #28]
   41d74:	mov	r0, #5
   41d78:	str	r0, [sp, #24]
   41d7c:	mov	r0, #8
   41d80:	str	r0, [sp, #20]
   41d84:	mov	r0, #0
   41d88:	str	r0, [sp, #16]
   41d8c:	mov	r1, #14
   41d90:	str	r1, [sp, #12]
   41d94:	str	r0, [sp, #4]
   41d98:	cmp	r4, #0
   41d9c:	cmpne	r5, #0
   41da0:	bne	41dac <WriteCellArrayField+0x5c>
   41da4:	sub	sp, fp, #24
   41da8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   41dac:	ldr	r3, [r4]
   41db0:	add	r0, sp, #12
   41db4:	mov	r1, #4
   41db8:	mov	r2, #1
   41dbc:	bl	18c4 <fwrite@plt>
   41dc0:	ldr	r3, [r4]
   41dc4:	add	r0, sp, #16
   41dc8:	mov	r1, #4
   41dcc:	mov	r2, #1
   41dd0:	bl	18c4 <fwrite@plt>
   41dd4:	ldr	r0, [r5, #16]
   41dd8:	cmp	r0, #0
   41ddc:	beq	41da4 <WriteCellArrayField+0x54>
   41de0:	ldr	r0, [r4]
   41de4:	bl	1858 <ftell@plt>
   41de8:	mov	r8, r0
   41dec:	ldr	r0, [r5, #16]
   41df0:	ldr	r2, [r5, #20]
   41df4:	uxtb	r1, r0
   41df8:	str	r1, [fp, #-28]	; 0xffffffe4
   41dfc:	cmp	r2, #0
   41e00:	orrne	r1, r1, #2048	; 0x800
   41e04:	strne	r1, [fp, #-28]	; 0xffffffe4
   41e08:	ldr	r1, [r5, #24]
   41e0c:	cmp	r1, #0
   41e10:	ldrne	r1, [fp, #-28]	; 0xffffffe4
   41e14:	orrne	r1, r1, #1024	; 0x400
   41e18:	strne	r1, [fp, #-28]	; 0xffffffe4
   41e1c:	ldr	r1, [r5, #28]
   41e20:	cmp	r1, #0
   41e24:	ldrne	r1, [fp, #-28]	; 0xffffffe4
   41e28:	orrne	r1, r1, #512	; 0x200
   41e2c:	strne	r1, [fp, #-28]	; 0xffffffe4
   41e30:	cmp	r0, #5
   41e34:	ldreq	r0, [r5, #40]	; 0x28
   41e38:	ldreq	r0, [r0]
   41e3c:	streq	r0, [sp, #4]
   41e40:	ldr	r0, [r4, #20]
   41e44:	cmp	r0, #0
   41e48:	beq	41e58 <WriteCellArrayField+0x108>
   41e4c:	sub	r0, fp, #28
   41e50:	bl	1c28 <Mat_int32Swap>
   41e54:	str	r0, [fp, #-28]	; 0xffffffe4
   41e58:	ldr	r3, [r4]
   41e5c:	add	r0, sp, #28
   41e60:	mov	r1, #4
   41e64:	mov	r2, #1
   41e68:	bl	18c4 <fwrite@plt>
   41e6c:	ldr	r3, [r4]
   41e70:	add	r0, sp, #20
   41e74:	mov	r1, #4
   41e78:	mov	r2, #1
   41e7c:	bl	18c4 <fwrite@plt>
   41e80:	ldr	r3, [r4]
   41e84:	sub	r0, fp, #28
   41e88:	mov	r1, #4
   41e8c:	mov	r2, #1
   41e90:	bl	18c4 <fwrite@plt>
   41e94:	ldr	r3, [r4]
   41e98:	add	r0, sp, #4
   41e9c:	mov	r1, #4
   41ea0:	mov	r2, #1
   41ea4:	bl	18c4 <fwrite@plt>
   41ea8:	ldr	r0, [r5, #4]
   41eac:	lsl	r0, r0, #2
   41eb0:	str	r0, [sp, #8]
   41eb4:	ldr	r3, [r4]
   41eb8:	add	r0, sp, #24
   41ebc:	mov	r1, #4
   41ec0:	mov	r2, #1
   41ec4:	bl	18c4 <fwrite@plt>
   41ec8:	ldr	r3, [r4]
   41ecc:	add	r0, sp, #8
   41ed0:	mov	r1, #4
   41ed4:	mov	r2, #1
   41ed8:	bl	18c4 <fwrite@plt>
   41edc:	ldr	r0, [r5, #4]
   41ee0:	cmp	r0, #1
   41ee4:	blt	41f20 <WriteCellArrayField+0x1d0>
   41ee8:	mov	r6, #0
   41eec:	mov	r7, sp
   41ef0:	ldr	r0, [r5, #32]
   41ef4:	ldr	r0, [r0, r6, lsl #2]
   41ef8:	str	r0, [sp]
   41efc:	ldr	r3, [r4]
   41f00:	mov	r0, r7
   41f04:	mov	r1, #4
   41f08:	mov	r2, #1
   41f0c:	bl	18c4 <fwrite@plt>
   41f10:	add	r6, r6, #1
   41f14:	ldr	r0, [r5, #4]
   41f18:	cmp	r6, r0
   41f1c:	blt	41ef0 <WriteCellArrayField+0x1a0>
   41f20:	tst	r0, #1
   41f24:	beq	41f3c <WriteCellArrayField+0x1ec>
   41f28:	ldr	r3, [r4]
   41f2c:	add	r0, sp, #16
   41f30:	mov	r1, #4
   41f34:	mov	r2, #1
   41f38:	bl	18c4 <fwrite@plt>
   41f3c:	ldr	r7, [r5, #36]	; 0x24
   41f40:	cmp	r7, #0
   41f44:	beq	41fcc <WriteCellArrayField+0x27c>
   41f48:	mov	r0, r7
   41f4c:	bl	196c <strlen@plt>
   41f50:	cmp	r0, #4
   41f54:	bhi	42010 <WriteCellArrayField+0x2c0>
   41f58:	mov	r0, r7
   41f5c:	bl	196c <strlen@plt>
   41f60:	strh	r0, [sp]
   41f64:	ldr	r3, [r4]
   41f68:	sub	r0, fp, #30
   41f6c:	mov	r1, #2
   41f70:	mov	r2, #1
   41f74:	bl	18c4 <fwrite@plt>
   41f78:	ldr	r3, [r4]
   41f7c:	mov	r0, sp
   41f80:	mov	r1, #2
   41f84:	mov	r2, #1
   41f88:	bl	18c4 <fwrite@plt>
   41f8c:	ldr	r0, [r5, #36]	; 0x24
   41f90:	ldr	r3, [r4]
   41f94:	ldrsh	r7, [sp]
   41f98:	mov	r1, #1
   41f9c:	mov	r2, r7
   41fa0:	bl	18c4 <fwrite@plt>
   41fa4:	cmp	r7, #3
   41fa8:	bgt	420a4 <WriteCellArrayField+0x354>
   41fac:	sub	r6, r7, #1
   41fb0:	ldr	r1, [r4]
   41fb4:	mov	r0, #0
   41fb8:	bl	1a08 <fputc@plt>
   41fbc:	add	r6, r6, #1
   41fc0:	cmp	r6, #3
   41fc4:	blt	41fb0 <WriteCellArrayField+0x260>
   41fc8:	b	420a4 <WriteCellArrayField+0x354>
   41fcc:	ldr	r3, [r4]
   41fd0:	sub	r0, fp, #30
   41fd4:	mov	r1, #2
   41fd8:	mov	r2, #1
   41fdc:	bl	18c4 <fwrite@plt>
   41fe0:	ldr	r1, [r4]
   41fe4:	mov	r0, #0
   41fe8:	bl	1a08 <fputc@plt>
   41fec:	ldr	r1, [r4]
   41ff0:	mov	r0, #0
   41ff4:	bl	1a08 <fputc@plt>
   41ff8:	ldr	r3, [r4]
   41ffc:	add	r0, sp, #16
   42000:	mov	r1, #4
   42004:	mov	r2, #1
   42008:	bl	18c4 <fwrite@plt>
   4200c:	b	420a4 <WriteCellArrayField+0x354>
   42010:	mov	r0, r7
   42014:	bl	196c <strlen@plt>
   42018:	str	r0, [sp]
   4201c:	ldr	r3, [r4]
   42020:	sub	r0, fp, #30
   42024:	mov	r1, #2
   42028:	mov	r2, #1
   4202c:	bl	18c4 <fwrite@plt>
   42030:	ldr	r1, [r4]
   42034:	mov	r0, #0
   42038:	bl	1a08 <fputc@plt>
   4203c:	ldr	r1, [r4]
   42040:	mov	r0, #0
   42044:	bl	1a08 <fputc@plt>
   42048:	ldr	r3, [r4]
   4204c:	mov	r0, sp
   42050:	mov	r1, #4
   42054:	mov	r2, #1
   42058:	bl	18c4 <fwrite@plt>
   4205c:	ldr	r0, [r5, #36]	; 0x24
   42060:	ldr	r3, [r4]
   42064:	ldr	r7, [sp]
   42068:	mov	r1, #1
   4206c:	mov	r2, r7
   42070:	bl	18c4 <fwrite@plt>
   42074:	asr	r0, r7, #31
   42078:	add	r0, r7, r0, lsr #29
   4207c:	bic	r0, r0, #7
   42080:	subs	r0, r7, r0
   42084:	beq	420a4 <WriteCellArrayField+0x354>
   42088:	sub	r6, r0, #1
   4208c:	ldr	r1, [r4]
   42090:	mov	r0, #0
   42094:	bl	1a08 <fputc@plt>
   42098:	add	r6, r6, #1
   4209c:	cmp	r6, #7
   420a0:	blt	4208c <WriteCellArrayField+0x33c>
   420a4:	mov	r0, r4
   420a8:	mov	r1, r5
   420ac:	bl	3ee34 <WriteType>
   420b0:	ldr	r0, [r4]
   420b4:	bl	1858 <ftell@plt>
   420b8:	cmn	r8, #1
   420bc:	movne	r5, r0
   420c0:	cmnne	r0, #1
   420c4:	bne	420dc <WriteCellArrayField+0x38c>
   420c8:	ldr	r0, [pc, #84]	; 42124 <WriteCellArrayField+0x3d4>
   420cc:	add	r0, pc, r0
   420d0:	bl	19cc <Mat_Critical@plt>
   420d4:	sub	sp, fp, #24
   420d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   420dc:	sub	r0, r5, r8
   420e0:	str	r0, [sp, #8]
   420e4:	mvn	r1, #3
   420e8:	sub	r1, r1, r0
   420ec:	ldr	r0, [r4]
   420f0:	mov	r2, #1
   420f4:	bl	1a68 <fseek@plt>
   420f8:	ldr	r3, [r4]
   420fc:	add	r0, sp, #8
   42100:	mov	r1, #4
   42104:	mov	r2, #1
   42108:	bl	18c4 <fwrite@plt>
   4210c:	ldr	r0, [r4]
   42110:	mov	r1, r5
   42114:	mov	r2, #0
   42118:	bl	1a68 <fseek@plt>
   4211c:	sub	sp, fp, #24
   42120:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   42124:	.word	0x000071cc

00042128 <WriteStructField>:
   42128:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   4212c:	add	fp, sp, #24
   42130:	sub	sp, sp, #48	; 0x30
   42134:	mov	r5, r1
   42138:	mov	r4, r0
   4213c:	mov	r0, #1
   42140:	str	r0, [fp, #-28]	; 0xffffffe4
   42144:	mov	r0, #6
   42148:	str	r0, [fp, #-32]	; 0xffffffe0
   4214c:	mov	r0, #5
   42150:	str	r0, [sp, #36]	; 0x24
   42154:	mov	r0, #8
   42158:	str	r0, [sp, #32]
   4215c:	mov	r0, #0
   42160:	str	r0, [sp, #28]
   42164:	mov	r1, #14
   42168:	str	r1, [sp, #24]
   4216c:	str	r0, [sp, #16]
   42170:	cmp	r4, #0
   42174:	beq	42368 <WriteStructField+0x240>
   42178:	cmp	r5, #0
   4217c:	beq	42370 <WriteStructField+0x248>
   42180:	ldr	r3, [r4]
   42184:	add	r0, sp, #24
   42188:	mov	r1, #4
   4218c:	mov	r2, #1
   42190:	bl	18c4 <fwrite@plt>
   42194:	ldr	r3, [r4]
   42198:	add	r0, sp, #28
   4219c:	mov	r1, #4
   421a0:	mov	r2, #1
   421a4:	bl	18c4 <fwrite@plt>
   421a8:	ldr	r0, [r5, #16]
   421ac:	cmp	r0, #0
   421b0:	beq	42368 <WriteStructField+0x240>
   421b4:	ldr	r0, [r4]
   421b8:	bl	1858 <ftell@plt>
   421bc:	mov	r8, r0
   421c0:	ldr	r0, [r5, #16]
   421c4:	ldr	r2, [r5, #20]
   421c8:	uxtb	r1, r0
   421cc:	str	r1, [sp, #8]
   421d0:	cmp	r2, #0
   421d4:	orrne	r1, r1, #2048	; 0x800
   421d8:	strne	r1, [sp, #8]
   421dc:	ldr	r1, [r5, #24]
   421e0:	cmp	r1, #0
   421e4:	ldrne	r1, [sp, #8]
   421e8:	orrne	r1, r1, #1024	; 0x400
   421ec:	strne	r1, [sp, #8]
   421f0:	ldr	r1, [r5, #28]
   421f4:	cmp	r1, #0
   421f8:	ldrne	r1, [sp, #8]
   421fc:	orrne	r1, r1, #512	; 0x200
   42200:	strne	r1, [sp, #8]
   42204:	cmp	r0, #5
   42208:	ldreq	r0, [r5, #40]	; 0x28
   4220c:	ldreq	r0, [r0]
   42210:	streq	r0, [sp, #16]
   42214:	ldr	r0, [r4, #20]
   42218:	cmp	r0, #0
   4221c:	beq	4222c <WriteStructField+0x104>
   42220:	add	r0, sp, #8
   42224:	bl	1c28 <Mat_int32Swap>
   42228:	str	r0, [sp, #8]
   4222c:	ldr	r3, [r4]
   42230:	sub	r0, fp, #32
   42234:	mov	r1, #4
   42238:	mov	r2, #1
   4223c:	bl	18c4 <fwrite@plt>
   42240:	ldr	r3, [r4]
   42244:	add	r0, sp, #32
   42248:	mov	r1, #4
   4224c:	mov	r2, #1
   42250:	bl	18c4 <fwrite@plt>
   42254:	ldr	r3, [r4]
   42258:	add	r0, sp, #8
   4225c:	mov	r1, #4
   42260:	mov	r2, #1
   42264:	bl	18c4 <fwrite@plt>
   42268:	ldr	r3, [r4]
   4226c:	add	r0, sp, #16
   42270:	mov	r1, #4
   42274:	mov	r2, #1
   42278:	bl	18c4 <fwrite@plt>
   4227c:	ldr	r0, [r5, #4]
   42280:	lsl	r0, r0, #2
   42284:	str	r0, [sp, #20]
   42288:	ldr	r3, [r4]
   4228c:	add	r0, sp, #36	; 0x24
   42290:	mov	r1, #4
   42294:	mov	r2, #1
   42298:	bl	18c4 <fwrite@plt>
   4229c:	ldr	r3, [r4]
   422a0:	add	r0, sp, #20
   422a4:	mov	r1, #4
   422a8:	mov	r2, #1
   422ac:	bl	18c4 <fwrite@plt>
   422b0:	ldr	r0, [r5, #4]
   422b4:	cmp	r0, #1
   422b8:	blt	422f4 <WriteStructField+0x1cc>
   422bc:	mov	r6, #0
   422c0:	add	r7, sp, #4
   422c4:	ldr	r0, [r5, #32]
   422c8:	ldr	r0, [r0, r6, lsl #2]
   422cc:	str	r0, [sp, #4]
   422d0:	ldr	r3, [r4]
   422d4:	mov	r0, r7
   422d8:	mov	r1, #4
   422dc:	mov	r2, #1
   422e0:	bl	18c4 <fwrite@plt>
   422e4:	add	r6, r6, #1
   422e8:	ldr	r0, [r5, #4]
   422ec:	cmp	r6, r0
   422f0:	blt	422c4 <WriteStructField+0x19c>
   422f4:	tst	r0, #1
   422f8:	beq	42310 <WriteStructField+0x1e8>
   422fc:	ldr	r3, [r4]
   42300:	add	r0, sp, #28
   42304:	mov	r1, #4
   42308:	mov	r2, #1
   4230c:	bl	18c4 <fwrite@plt>
   42310:	ldr	r3, [r4]
   42314:	sub	r0, fp, #28
   42318:	mov	r1, #4
   4231c:	mov	r2, #1
   42320:	bl	18c4 <fwrite@plt>
   42324:	ldr	r3, [r4]
   42328:	add	r0, sp, #28
   4232c:	mov	r1, #4
   42330:	mov	r2, #1
   42334:	bl	18c4 <fwrite@plt>
   42338:	mov	r0, r4
   4233c:	mov	r1, r5
   42340:	bl	3ee34 <WriteType>
   42344:	ldr	r0, [r4]
   42348:	bl	1858 <ftell@plt>
   4234c:	cmn	r8, #1
   42350:	movne	r5, r0
   42354:	cmnne	r0, #1
   42358:	bne	42390 <WriteStructField+0x268>
   4235c:	ldr	r0, [pc, #116]	; 423d8 <WriteStructField+0x2b0>
   42360:	add	r0, pc, r0
   42364:	bl	19cc <Mat_Critical@plt>
   42368:	sub	sp, fp, #24
   4236c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   42370:	mov	r0, #0
   42374:	str	r0, [sp, #12]
   42378:	str	r0, [sp, #8]
   4237c:	add	r1, sp, #8
   42380:	mov	r0, r4
   42384:	bl	423dc <Mat_WriteEmptyVariable5>
   42388:	sub	sp, fp, #24
   4238c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   42390:	sub	r0, r5, r8
   42394:	str	r0, [sp, #20]
   42398:	mvn	r1, #3
   4239c:	sub	r1, r1, r0
   423a0:	ldr	r0, [r4]
   423a4:	mov	r2, #1
   423a8:	bl	1a68 <fseek@plt>
   423ac:	ldr	r3, [r4]
   423b0:	add	r0, sp, #20
   423b4:	mov	r1, #4
   423b8:	mov	r2, #1
   423bc:	bl	18c4 <fwrite@plt>
   423c0:	ldr	r0, [r4]
   423c4:	mov	r1, r5
   423c8:	mov	r2, #0
   423cc:	bl	1a68 <fseek@plt>
   423d0:	sub	sp, fp, #24
   423d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   423d8:	.word	0x00006f38

000423dc <Mat_WriteEmptyVariable5>:
   423dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   423e0:	add	fp, sp, #24
   423e4:	sub	sp, sp, #40	; 0x28
   423e8:	mov	r6, r1
   423ec:	mov	r4, r0
   423f0:	mov	r0, #1
   423f4:	str	r0, [sp, #32]
   423f8:	mov	r0, #14
   423fc:	str	r0, [sp, #28]
   42400:	mov	r7, #6
   42404:	str	r7, [sp, #24]
   42408:	mov	r0, #5
   4240c:	str	r0, [sp, #20]
   42410:	mov	r9, #8
   42414:	str	r9, [sp, #16]
   42418:	mov	r5, #0
   4241c:	str	r5, [sp, #12]
   42420:	ldr	r3, [r4]
   42424:	add	r0, sp, #28
   42428:	mov	r1, #4
   4242c:	mov	r2, #1
   42430:	bl	18c4 <fwrite@plt>
   42434:	ldr	r3, [r4]
   42438:	add	r0, sp, #12
   4243c:	mov	r1, #4
   42440:	mov	r2, #1
   42444:	bl	18c4 <fwrite@plt>
   42448:	ldr	r0, [r4]
   4244c:	bl	1858 <ftell@plt>
   42450:	mov	r8, r0
   42454:	str	r7, [fp, #-28]	; 0xffffffe4
   42458:	ldr	r0, [r4, #20]
   4245c:	cmp	r0, #0
   42460:	beq	42470 <Mat_WriteEmptyVariable5+0x94>
   42464:	sub	r0, fp, #28
   42468:	bl	1c28 <Mat_int32Swap>
   4246c:	str	r0, [fp, #-28]	; 0xffffffe4
   42470:	ldr	r3, [r4]
   42474:	add	r0, sp, #24
   42478:	mov	r1, #4
   4247c:	mov	r2, #1
   42480:	bl	18c4 <fwrite@plt>
   42484:	ldr	r3, [r4]
   42488:	add	r0, sp, #16
   4248c:	mov	r1, #4
   42490:	mov	r2, #1
   42494:	bl	18c4 <fwrite@plt>
   42498:	ldr	r3, [r4]
   4249c:	sub	r0, fp, #28
   424a0:	mov	r1, #4
   424a4:	mov	r2, #1
   424a8:	bl	18c4 <fwrite@plt>
   424ac:	ldr	r3, [r4]
   424b0:	add	r0, sp, #12
   424b4:	mov	r1, #4
   424b8:	mov	r2, #1
   424bc:	bl	18c4 <fwrite@plt>
   424c0:	str	r9, [sp, #8]
   424c4:	ldr	r3, [r4]
   424c8:	add	r0, sp, #20
   424cc:	mov	r1, #4
   424d0:	mov	r2, #1
   424d4:	bl	18c4 <fwrite@plt>
   424d8:	ldr	r3, [r4]
   424dc:	add	r0, sp, #8
   424e0:	mov	r1, #4
   424e4:	mov	r2, #1
   424e8:	bl	18c4 <fwrite@plt>
   424ec:	add	r7, sp, #4
   424f0:	ldr	r0, [r6, r5, lsl #2]
   424f4:	str	r0, [sp, #4]
   424f8:	ldr	r3, [r4]
   424fc:	mov	r0, r7
   42500:	mov	r1, #4
   42504:	mov	r2, #1
   42508:	bl	18c4 <fwrite@plt>
   4250c:	add	r5, r5, #1
   42510:	cmp	r5, #2
   42514:	bne	424f0 <Mat_WriteEmptyVariable5+0x114>
   42518:	ldr	r3, [r4]
   4251c:	add	r0, sp, #32
   42520:	mov	r1, #4
   42524:	mov	r2, #1
   42528:	bl	18c4 <fwrite@plt>
   4252c:	ldr	r3, [r4]
   42530:	add	r0, sp, #12
   42534:	mov	r1, #4
   42538:	mov	r2, #1
   4253c:	bl	18c4 <fwrite@plt>
   42540:	mov	r0, r4
   42544:	mov	r1, #0
   42548:	mov	r2, #0
   4254c:	mov	r3, #9
   42550:	bl	41a30 <WriteData>
   42554:	str	r0, [sp, #8]
   42558:	asr	r1, r0, #31
   4255c:	add	r1, r0, r1, lsr #29
   42560:	bic	r1, r1, #7
   42564:	subs	r0, r0, r1
   42568:	beq	42588 <Mat_WriteEmptyVariable5+0x1ac>
   4256c:	sub	r5, r0, #1
   42570:	ldr	r1, [r4]
   42574:	mov	r0, #0
   42578:	bl	1a08 <fputc@plt>
   4257c:	add	r5, r5, #1
   42580:	cmp	r5, #7
   42584:	blt	42570 <Mat_WriteEmptyVariable5+0x194>
   42588:	ldr	r0, [r4]
   4258c:	bl	1858 <ftell@plt>
   42590:	cmn	r8, #1
   42594:	movne	r6, r0
   42598:	cmnne	r0, #1
   4259c:	bne	425b4 <Mat_WriteEmptyVariable5+0x1d8>
   425a0:	ldr	r0, [pc, #84]	; 425fc <Mat_WriteEmptyVariable5+0x220>
   425a4:	add	r0, pc, r0
   425a8:	bl	19cc <Mat_Critical@plt>
   425ac:	sub	sp, fp, #24
   425b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   425b4:	sub	r0, r6, r8
   425b8:	str	r0, [sp, #8]
   425bc:	mvn	r1, #3
   425c0:	sub	r1, r1, r0
   425c4:	ldr	r0, [r4]
   425c8:	mov	r2, #1
   425cc:	bl	1a68 <fseek@plt>
   425d0:	ldr	r3, [r4]
   425d4:	add	r0, sp, #8
   425d8:	mov	r1, #4
   425dc:	mov	r2, #1
   425e0:	bl	18c4 <fwrite@plt>
   425e4:	ldr	r0, [r4]
   425e8:	mov	r1, r6
   425ec:	mov	r2, #0
   425f0:	bl	1a68 <fseek@plt>
   425f4:	sub	sp, fp, #24
   425f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   425fc:	.word	0x00006cf4

00042600 <GetTypeBufSize>:
   42600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42604:	add	fp, sp, #28
   42608:	sub	sp, sp, #20
   4260c:	mov	r5, r0
   42610:	mov	r0, #1
   42614:	str	r0, [sp, #12]
   42618:	add	r1, sp, #12
   4261c:	mov	r0, r5
   42620:	bl	4479c <SafeMulDims>
   42624:	ldr	r9, [r5, #4]
   42628:	ldr	r0, [r5, #16]
   4262c:	mov	sl, #12
   42630:	tst	r9, #1
   42634:	movweq	sl, #8
   42638:	add	r4, sl, r9, lsl #2
   4263c:	sub	r0, r0, #1
   42640:	cmp	r0, #4
   42644:	bhi	42794 <GetTypeBufSize+0x194>
   42648:	add	r1, pc, #4
   4264c:	ldr	r0, [r1, r0, lsl #2]
   42650:	add	pc, r1, r0
   42654:	.word	0x00000014
   42658:	.word	0x0000006c
   4265c:	.word	0x00000140
   42660:	.word	0x0000014c
   42664:	.word	0x000001a4
   42668:	ldr	r0, [r5]
   4266c:	cmp	r0, #0
   42670:	ldrne	r1, [r5, #12]
   42674:	cmpne	r1, #0
   42678:	beq	428a0 <GetTypeBufSize+0x2a0>
   4267c:	ldr	r5, [r5, #40]	; 0x28
   42680:	udiv	r2, r0, r1
   42684:	str	r2, [sp, #12]
   42688:	cmp	r5, #0
   4268c:	beq	428a0 <GetTypeBufSize+0x2a0>
   42690:	cmp	r1, r0
   42694:	bhi	428a0 <GetTypeBufSize+0x2a0>
   42698:	mov	r6, #0
   4269c:	ldr	r0, [r5, r6, lsl #2]
   426a0:	bl	428cc <GetCellArrayFieldBufSize>
   426a4:	add	r0, r4, r0
   426a8:	add	r4, r0, #8
   426ac:	add	r6, r6, #1
   426b0:	ldr	r0, [sp, #12]
   426b4:	cmp	r6, r0
   426b8:	bcc	4269c <GetTypeBufSize+0x9c>
   426bc:	b	428a0 <GetTypeBufSize+0x2a0>
   426c0:	ldr	r0, [r5, #40]	; 0x28
   426c4:	str	r0, [sp, #4]
   426c8:	ldr	r0, [r5, #52]	; 0x34
   426cc:	ldr	r8, [r0, #4]
   426d0:	mov	r4, #0
   426d4:	cmp	r8, #0
   426d8:	mov	r7, #0
   426dc:	beq	42710 <GetTypeBufSize+0x110>
   426e0:	ldr	r6, [r0, #8]
   426e4:	mov	r7, #0
   426e8:	mov	r5, r8
   426ec:	ldr	r0, [r6]
   426f0:	cmp	r0, #0
   426f4:	beq	42704 <GetTypeBufSize+0x104>
   426f8:	bl	196c <strlen@plt>
   426fc:	cmp	r0, r7
   42700:	movhi	r7, r0
   42704:	subs	r5, r5, #1
   42708:	add	r6, r6, #4
   4270c:	bne	426ec <GetTypeBufSize+0xec>
   42710:	add	r0, r7, #1
   42714:	mul	r0, r8, r0
   42718:	add	r1, r0, r4
   4271c:	add	r4, r4, r8
   42720:	tst	r1, #7
   42724:	bne	42718 <GetTypeBufSize+0x118>
   42728:	mla	r0, r7, r8, sl
   4272c:	add	r0, r0, r9, lsl #2
   42730:	add	r0, r0, r4
   42734:	add	r4, r0, #16
   42738:	ldr	r6, [sp, #4]
   4273c:	cmp	r6, #0
   42740:	cmpne	r8, #0
   42744:	beq	428a0 <GetTypeBufSize+0x2a0>
   42748:	mov	r0, #1
   4274c:	str	r0, [sp, #8]
   42750:	ldr	r1, [sp, #12]
   42754:	add	r0, sp, #8
   42758:	mov	r2, r8
   4275c:	bl	4481c <SafeMul>
   42760:	ldr	r0, [sp, #8]
   42764:	cmp	r0, #0
   42768:	beq	428a0 <GetTypeBufSize+0x2a0>
   4276c:	mov	r5, #0
   42770:	ldr	r0, [r6, r5, lsl #2]
   42774:	bl	428ac <GetStructFieldBufSize>
   42778:	add	r0, r4, r0
   4277c:	add	r4, r0, #8
   42780:	add	r5, r5, #1
   42784:	ldr	r0, [sp, #8]
   42788:	cmp	r5, r0
   4278c:	bcc	42770 <GetTypeBufSize+0x170>
   42790:	b	428a0 <GetTypeBufSize+0x2a0>
   42794:	ldr	r0, [r5, #8]
   42798:	ldr	r6, [sp, #12]
   4279c:	b	427b4 <GetTypeBufSize+0x1b4>
   427a0:	ldr	r0, [r5, #8]
   427a4:	sub	r1, r0, #1
   427a8:	ldr	r6, [sp, #12]
   427ac:	cmp	r1, #1
   427b0:	movls	r0, #4
   427b4:	bl	193c <Mat_SizeOf@plt>
   427b8:	mov	r2, r0
   427bc:	add	r0, sp, #16
   427c0:	mov	r1, r6
   427c4:	bl	4481c <SafeMul>
   427c8:	ldr	r0, [sp, #16]
   427cc:	ands	r1, r0, #7
   427d0:	addne	r0, r0, #8
   427d4:	subne	r0, r0, r1
   427d8:	strne	r0, [sp, #16]
   427dc:	ldr	r0, [sp, #16]
   427e0:	add	r0, r0, #8
   427e4:	add	r4, r0, r4
   427e8:	ldr	r1, [r5, #20]
   427ec:	cmp	r1, #0
   427f0:	addne	r4, r4, r0
   427f4:	b	428a0 <GetTypeBufSize+0x2a0>
   427f8:	ldr	r6, [r5, #40]	; 0x28
   427fc:	ldr	r1, [r6, #8]
   42800:	add	r0, sp, #16
   42804:	mov	r2, #4
   42808:	bl	4481c <SafeMul>
   4280c:	ldr	r0, [sp, #16]
   42810:	ands	r1, r0, #7
   42814:	addne	r0, r0, #8
   42818:	subne	r0, r0, r1
   4281c:	strne	r0, [sp, #16]
   42820:	ldr	r1, [r6, #16]
   42824:	ldr	r8, [sp, #16]
   42828:	add	r0, sp, #16
   4282c:	mov	r2, #4
   42830:	bl	4481c <SafeMul>
   42834:	ldr	r0, [sp, #16]
   42838:	ands	r1, r0, #7
   4283c:	addne	r0, r0, #8
   42840:	subne	r0, r0, r1
   42844:	strne	r0, [sp, #16]
   42848:	ldr	r6, [r6, #20]
   4284c:	ldr	r0, [r5, #8]
   42850:	ldr	r7, [sp, #16]
   42854:	bl	193c <Mat_SizeOf@plt>
   42858:	mov	r2, r0
   4285c:	add	r0, sp, #16
   42860:	mov	r1, r6
   42864:	bl	4481c <SafeMul>
   42868:	ldr	r0, [sp, #16]
   4286c:	ands	r1, r0, #7
   42870:	addne	r0, r0, #8
   42874:	subne	r0, r0, r1
   42878:	strne	r0, [sp, #16]
   4287c:	add	r0, r4, r8
   42880:	add	r0, r0, r7
   42884:	ldr	r1, [sp, #16]
   42888:	add	r1, r1, #8
   4288c:	add	r0, r0, r1
   42890:	add	r4, r0, #16
   42894:	ldr	r0, [r5, #20]
   42898:	cmp	r0, #0
   4289c:	addne	r4, r4, r1
   428a0:	mov	r0, r4
   428a4:	sub	sp, fp, #28
   428a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000428ac <GetStructFieldBufSize>:
   428ac:	cmp	r0, #0
   428b0:	moveq	r0, #48	; 0x30
   428b4:	bxeq	lr
   428b8:	push	{fp, lr}
   428bc:	mov	fp, sp
   428c0:	bl	42600 <GetTypeBufSize>
   428c4:	add	r0, r0, #24
   428c8:	pop	{fp, pc}

000428cc <GetCellArrayFieldBufSize>:
   428cc:	cmp	r0, #0
   428d0:	moveq	r0, #0
   428d4:	bxeq	lr
   428d8:	push	{fp, lr}
   428dc:	mov	fp, sp
   428e0:	bl	42600 <GetTypeBufSize>
   428e4:	add	r0, r0, #24
   428e8:	pop	{fp, pc}

000428ec <WriteCompressedData>:
   428ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   428f0:	add	fp, sp, #28
   428f4:	sub	sp, sp, #28
   428f8:	sub	sp, sp, #1024	; 0x400
   428fc:	mov	r6, #0
   42900:	str	r6, [sp, #12]
   42904:	str	r6, [sp, #8]
   42908:	cmp	r0, #0
   4290c:	beq	42a60 <WriteCompressedData+0x174>
   42910:	mov	r5, r0
   42914:	ldr	r0, [r0]
   42918:	cmp	r0, #0
   4291c:	beq	42a60 <WriteCompressedData+0x174>
   42920:	mov	r9, r3
   42924:	mov	r8, r2
   42928:	mov	r4, r1
   4292c:	ldr	r6, [fp, #8]
   42930:	mov	r0, r6
   42934:	bl	193c <Mat_SizeOf@plt>
   42938:	str	r6, [fp, #-40]	; 0xffffffd8
   4293c:	mul	r0, r0, r9
   42940:	str	r0, [sp, #4]
   42944:	str	r0, [fp, #-36]	; 0xffffffdc
   42948:	mov	r0, #8
   4294c:	sub	r1, fp, #40	; 0x28
   42950:	str	r1, [r4]
   42954:	str	r0, [r4, #4]
   42958:	mov	r6, #0
   4295c:	mov	sl, #1024	; 0x400
   42960:	add	r7, sp, #16
   42964:	str	r7, [r4, #12]
   42968:	str	sl, [r4, #16]
   4296c:	mov	r0, r4
   42970:	mov	r1, #0
   42974:	bl	18ac <deflate@plt>
   42978:	ldr	r3, [r5]
   4297c:	ldr	r0, [r4, #16]
   42980:	rsb	r2, r0, #1024	; 0x400
   42984:	mov	r0, r7
   42988:	mov	r1, #1
   4298c:	bl	18c4 <fwrite@plt>
   42990:	add	r6, r0, r6
   42994:	ldr	r0, [r4, #16]
   42998:	cmp	r0, #0
   4299c:	beq	42964 <WriteCompressedData+0x78>
   429a0:	cmp	r8, #0
   429a4:	beq	42a60 <WriteCompressedData+0x174>
   429a8:	cmp	r9, #1
   429ac:	blt	42a60 <WriteCompressedData+0x174>
   429b0:	str	r8, [r4]
   429b4:	ldr	r9, [sp, #4]
   429b8:	str	r9, [r4, #4]
   429bc:	mov	r8, #1024	; 0x400
   429c0:	str	r7, [r4, #12]
   429c4:	str	r8, [r4, #16]
   429c8:	mov	r0, r4
   429cc:	mov	r1, #0
   429d0:	bl	18ac <deflate@plt>
   429d4:	ldr	r3, [r5]
   429d8:	ldr	r0, [r4, #16]
   429dc:	rsb	r2, r0, #1024	; 0x400
   429e0:	mov	r0, r7
   429e4:	mov	r1, #1
   429e8:	bl	18c4 <fwrite@plt>
   429ec:	add	r6, r0, r6
   429f0:	ldr	r0, [r4, #16]
   429f4:	cmp	r0, #0
   429f8:	beq	429c0 <WriteCompressedData+0xd4>
   429fc:	asr	r0, r9, #31
   42a00:	add	r0, r9, r0, lsr #29
   42a04:	bic	r0, r0, #7
   42a08:	subs	r0, r9, r0
   42a0c:	beq	42a60 <WriteCompressedData+0x174>
   42a10:	add	r1, sp, #8
   42a14:	rsb	r0, r0, #8
   42a18:	str	r1, [r4]
   42a1c:	str	r0, [r4, #4]
   42a20:	mov	r8, #1024	; 0x400
   42a24:	str	r7, [r4, #12]
   42a28:	str	r8, [r4, #16]
   42a2c:	mov	r0, r4
   42a30:	mov	r1, #0
   42a34:	bl	18ac <deflate@plt>
   42a38:	ldr	r3, [r5]
   42a3c:	ldr	r0, [r4, #16]
   42a40:	rsb	r2, r0, #1024	; 0x400
   42a44:	mov	r0, r7
   42a48:	mov	r1, #1
   42a4c:	bl	18c4 <fwrite@plt>
   42a50:	add	r6, r0, r6
   42a54:	ldr	r0, [r4, #16]
   42a58:	cmp	r0, #0
   42a5c:	beq	42a24 <WriteCompressedData+0x138>
   42a60:	mov	r0, r6
   42a64:	sub	sp, fp, #28
   42a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042a6c <WriteCompressedCharData>:
   42a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42a70:	add	fp, sp, #28
   42a74:	sub	sp, sp, #28
   42a78:	sub	sp, sp, #1024	; 0x400
   42a7c:	mov	r6, #0
   42a80:	str	r6, [sp, #12]
   42a84:	str	r6, [sp, #8]
   42a88:	cmp	r0, #0
   42a8c:	beq	42c78 <WriteCompressedCharData+0x20c>
   42a90:	mov	r5, r0
   42a94:	ldr	r0, [r0]
   42a98:	cmp	r0, #0
   42a9c:	beq	42c78 <WriteCompressedCharData+0x20c>
   42aa0:	ldr	r7, [fp, #8]
   42aa4:	cmp	r7, #17
   42aa8:	bhi	42c78 <WriteCompressedCharData+0x20c>
   42aac:	mov	r8, r3
   42ab0:	mov	r4, r1
   42ab4:	mov	r0, #1
   42ab8:	movw	r1, #20
   42abc:	movt	r1, #3
   42ac0:	tst	r1, r0, lsl r7
   42ac4:	beq	42c08 <WriteCompressedCharData+0x19c>
   42ac8:	mov	r9, r2
   42acc:	mov	r0, r7
   42ad0:	bl	193c <Mat_SizeOf@plt>
   42ad4:	cmp	r7, #2
   42ad8:	movweq	r7, #16
   42adc:	str	r7, [fp, #-40]	; 0xffffffd8
   42ae0:	mul	r0, r0, r8
   42ae4:	str	r0, [sp, #4]
   42ae8:	str	r0, [fp, #-36]	; 0xffffffdc
   42aec:	mov	r0, #8
   42af0:	sub	r1, fp, #40	; 0x28
   42af4:	str	r1, [r4]
   42af8:	str	r0, [r4, #4]
   42afc:	mov	r6, #0
   42b00:	mov	sl, #1024	; 0x400
   42b04:	add	r7, sp, #16
   42b08:	str	r7, [r4, #12]
   42b0c:	str	sl, [r4, #16]
   42b10:	mov	r0, r4
   42b14:	mov	r1, #0
   42b18:	bl	18ac <deflate@plt>
   42b1c:	ldr	r3, [r5]
   42b20:	ldr	r0, [r4, #16]
   42b24:	rsb	r2, r0, #1024	; 0x400
   42b28:	mov	r0, r7
   42b2c:	mov	r1, #1
   42b30:	bl	18c4 <fwrite@plt>
   42b34:	add	r6, r0, r6
   42b38:	ldr	r0, [r4, #16]
   42b3c:	cmp	r0, #0
   42b40:	beq	42b08 <WriteCompressedCharData+0x9c>
   42b44:	cmp	r9, #0
   42b48:	beq	42c78 <WriteCompressedCharData+0x20c>
   42b4c:	cmp	r8, #1
   42b50:	blt	42c78 <WriteCompressedCharData+0x20c>
   42b54:	str	r9, [r4]
   42b58:	ldr	r9, [sp, #4]
   42b5c:	str	r9, [r4, #4]
   42b60:	mov	r8, #1024	; 0x400
   42b64:	str	r7, [r4, #12]
   42b68:	str	r8, [r4, #16]
   42b6c:	mov	r0, r4
   42b70:	mov	r1, #0
   42b74:	bl	18ac <deflate@plt>
   42b78:	ldr	r3, [r5]
   42b7c:	ldr	r0, [r4, #16]
   42b80:	rsb	r2, r0, #1024	; 0x400
   42b84:	mov	r0, r7
   42b88:	mov	r1, #1
   42b8c:	bl	18c4 <fwrite@plt>
   42b90:	add	r6, r0, r6
   42b94:	ldr	r0, [r4, #16]
   42b98:	cmp	r0, #0
   42b9c:	beq	42b64 <WriteCompressedCharData+0xf8>
   42ba0:	asr	r0, r9, #31
   42ba4:	add	r0, r9, r0, lsr #29
   42ba8:	bic	r0, r0, #7
   42bac:	subs	r0, r9, r0
   42bb0:	beq	42c78 <WriteCompressedCharData+0x20c>
   42bb4:	add	r1, sp, #8
   42bb8:	rsb	r0, r0, #8
   42bbc:	str	r1, [r4]
   42bc0:	str	r0, [r4, #4]
   42bc4:	mov	r8, #1024	; 0x400
   42bc8:	str	r7, [r4, #12]
   42bcc:	str	r8, [r4, #16]
   42bd0:	mov	r0, r4
   42bd4:	mov	r1, #0
   42bd8:	bl	18ac <deflate@plt>
   42bdc:	ldr	r3, [r5]
   42be0:	ldr	r0, [r4, #16]
   42be4:	rsb	r2, r0, #1024	; 0x400
   42be8:	mov	r0, r7
   42bec:	mov	r1, #1
   42bf0:	bl	18c4 <fwrite@plt>
   42bf4:	add	r6, r0, r6
   42bf8:	ldr	r0, [r4, #16]
   42bfc:	cmp	r0, #0
   42c00:	beq	42bc8 <WriteCompressedCharData+0x15c>
   42c04:	b	42c78 <WriteCompressedCharData+0x20c>
   42c08:	cmp	r7, #0
   42c0c:	bne	42c78 <WriteCompressedCharData+0x20c>
   42c10:	mov	r0, #4
   42c14:	str	r0, [fp, #-40]	; 0xffffffd8
   42c18:	lsl	r0, r8, #1
   42c1c:	str	r0, [fp, #-36]	; 0xffffffdc
   42c20:	mov	r0, #8
   42c24:	sub	r1, fp, #40	; 0x28
   42c28:	str	r1, [r4]
   42c2c:	str	r0, [r4, #4]
   42c30:	mov	r6, #0
   42c34:	mov	r8, #1024	; 0x400
   42c38:	add	r7, sp, #16
   42c3c:	str	r7, [r4, #12]
   42c40:	str	r8, [r4, #16]
   42c44:	mov	r0, r4
   42c48:	mov	r1, #0
   42c4c:	bl	18ac <deflate@plt>
   42c50:	ldr	r3, [r5]
   42c54:	ldr	r0, [r4, #16]
   42c58:	rsb	r2, r0, #1024	; 0x400
   42c5c:	mov	r0, r7
   42c60:	mov	r1, #1
   42c64:	bl	18c4 <fwrite@plt>
   42c68:	add	r6, r0, r6
   42c6c:	ldr	r0, [r4, #16]
   42c70:	cmp	r0, #0
   42c74:	beq	42c3c <WriteCompressedCharData+0x1d0>
   42c78:	mov	r0, r6
   42c7c:	sub	sp, fp, #28
   42c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042c84 <WriteCompressedCellArrayField>:
   42c84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   42c88:	add	fp, sp, #24
   42c8c:	sub	sp, sp, #4096	; 0x1000
   42c90:	mov	r4, r2
   42c94:	mov	r8, r1
   42c98:	mov	r6, r0
   42c9c:	mov	r7, sp
   42ca0:	mov	r0, r7
   42ca4:	mov	r1, #0
   42ca8:	mov	r2, #2048	; 0x800
   42cac:	bl	19a8 <memset@plt>
   42cb0:	cmp	r6, #0
   42cb4:	beq	42cc4 <WriteCompressedCellArrayField+0x40>
   42cb8:	cmp	r8, #0
   42cbc:	cmpne	r4, #0
   42cc0:	bne	42ccc <WriteCompressedCellArrayField+0x48>
   42cc4:	sub	sp, fp, #24
   42cc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   42ccc:	mov	r0, #14
   42cd0:	str	r0, [sp]
   42cd4:	ldr	r0, [r8, #16]
   42cd8:	cmp	r0, #0
   42cdc:	beq	42cec <WriteCompressedCellArrayField+0x68>
   42ce0:	mov	r0, r8
   42ce4:	bl	428cc <GetCellArrayFieldBufSize>
   42ce8:	b	42cf0 <WriteCompressedCellArrayField+0x6c>
   42cec:	mov	r0, #0
   42cf0:	str	r0, [sp, #4]
   42cf4:	mov	r0, #8
   42cf8:	str	r7, [r4]
   42cfc:	str	r0, [r4, #4]
   42d00:	mov	r5, #2048	; 0x800
   42d04:	add	r7, sp, #2048	; 0x800
   42d08:	str	r7, [r4, #12]
   42d0c:	str	r5, [r4, #16]
   42d10:	mov	r0, r4
   42d14:	mov	r1, #0
   42d18:	bl	18ac <deflate@plt>
   42d1c:	ldr	r3, [r6]
   42d20:	ldr	r0, [r4, #16]
   42d24:	rsb	r2, r0, #2048	; 0x800
   42d28:	mov	r0, r7
   42d2c:	mov	r1, #1
   42d30:	bl	18c4 <fwrite@plt>
   42d34:	ldr	r0, [r4, #16]
   42d38:	cmp	r0, #0
   42d3c:	beq	42d08 <WriteCompressedCellArrayField+0x84>
   42d40:	mov	r0, r6
   42d44:	mov	r1, r8
   42d48:	mov	r2, r4
   42d4c:	bl	42e5c <WriteCompressedTypeArrayFlags>
   42d50:	sub	sp, fp, #24
   42d54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00042d58 <WriteCompressedStructField>:
   42d58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   42d5c:	add	fp, sp, #24
   42d60:	sub	sp, sp, #8
   42d64:	sub	sp, sp, #4096	; 0x1000
   42d68:	mov	r4, r2
   42d6c:	mov	r9, r1
   42d70:	mov	r5, r0
   42d74:	mov	r8, sp
   42d78:	mov	r7, #0
   42d7c:	mov	r0, r8
   42d80:	mov	r1, #0
   42d84:	mov	r2, #2048	; 0x800
   42d88:	bl	19a8 <memset@plt>
   42d8c:	cmp	r5, #0
   42d90:	cmpne	r4, #0
   42d94:	bne	42da4 <WriteCompressedStructField+0x4c>
   42d98:	mov	r0, r7
   42d9c:	sub	sp, fp, #24
   42da0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   42da4:	cmp	r9, #0
   42da8:	beq	42e38 <WriteCompressedStructField+0xe0>
   42dac:	mov	r0, #14
   42db0:	str	r0, [sp]
   42db4:	ldr	r0, [r9, #16]
   42db8:	mov	r6, #0
   42dbc:	cmp	r0, #0
   42dc0:	mov	r0, #0
   42dc4:	movne	r0, r9
   42dc8:	blne	428ac <GetStructFieldBufSize>
   42dcc:	str	r0, [sp, #4]
   42dd0:	mov	r0, #8
   42dd4:	str	r8, [r4]
   42dd8:	str	r0, [r4, #4]
   42ddc:	mov	r8, #2048	; 0x800
   42de0:	add	r7, sp, #2048	; 0x800
   42de4:	str	r7, [r4, #12]
   42de8:	str	r8, [r4, #16]
   42dec:	mov	r0, r4
   42df0:	mov	r1, #0
   42df4:	bl	18ac <deflate@plt>
   42df8:	ldr	r3, [r5]
   42dfc:	ldr	r0, [r4, #16]
   42e00:	rsb	r2, r0, #2048	; 0x800
   42e04:	mov	r0, r7
   42e08:	mov	r1, #1
   42e0c:	bl	18c4 <fwrite@plt>
   42e10:	add	r6, r0, r6
   42e14:	ldr	r0, [r4, #16]
   42e18:	cmp	r0, #0
   42e1c:	beq	42de4 <WriteCompressedStructField+0x8c>
   42e20:	mov	r0, r5
   42e24:	mov	r1, r9
   42e28:	mov	r2, r4
   42e2c:	bl	42e5c <WriteCompressedTypeArrayFlags>
   42e30:	add	r7, r0, r6
   42e34:	b	42d98 <WriteCompressedStructField+0x40>
   42e38:	mov	r0, #0
   42e3c:	str	r0, [sp, #2052]	; 0x804
   42e40:	str	r0, [sp, #2048]	; 0x800
   42e44:	add	r1, sp, #2048	; 0x800
   42e48:	mov	r0, r5
   42e4c:	mov	r2, r4
   42e50:	bl	43038 <Mat_WriteCompressedEmptyVariable5>
   42e54:	mov	r7, r0
   42e58:	b	42d98 <WriteCompressedStructField+0x40>

00042e5c <WriteCompressedTypeArrayFlags>:
   42e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42e60:	add	fp, sp, #28
   42e64:	sub	sp, sp, #4
   42e68:	sub	sp, sp, #4096	; 0x1000
   42e6c:	mov	r4, r2
   42e70:	mov	r9, r1
   42e74:	mov	r6, r0
   42e78:	mov	r8, sp
   42e7c:	mov	r7, #0
   42e80:	mov	r0, r8
   42e84:	mov	r1, #0
   42e88:	mov	r2, #2048	; 0x800
   42e8c:	bl	19a8 <memset@plt>
   42e90:	ldr	r2, [r9, #16]
   42e94:	cmp	r2, #0
   42e98:	beq	43028 <WriteCompressedTypeArrayFlags+0x1cc>
   42e9c:	add	r7, r9, #20
   42ea0:	ldm	r7, {r0, r3, r7}
   42ea4:	uxtb	r1, r2
   42ea8:	cmp	r0, #0
   42eac:	orrne	r1, r1, #2048	; 0x800
   42eb0:	cmp	r3, #0
   42eb4:	orrne	r1, r1, #1024	; 0x400
   42eb8:	cmp	r7, #0
   42ebc:	orrne	r1, r1, #512	; 0x200
   42ec0:	mov	r0, #0
   42ec4:	cmp	r2, #5
   42ec8:	mov	r2, #0
   42ecc:	ldreq	r2, [r9, #40]	; 0x28
   42ed0:	ldreq	r2, [r2]
   42ed4:	mov	r3, #8
   42ed8:	str	r3, [sp, #4]
   42edc:	mov	r3, #6
   42ee0:	str	r3, [sp]
   42ee4:	str	r1, [sp, #8]
   42ee8:	str	r2, [sp, #12]
   42eec:	ldr	r1, [r9, #4]
   42ef0:	mov	r2, #5
   42ef4:	str	r2, [sp, #16]
   42ef8:	lsl	r2, r1, #2
   42efc:	str	r2, [sp, #20]
   42f00:	cmp	r1, #1
   42f04:	blt	42f28 <WriteCompressedTypeArrayFlags+0xcc>
   42f08:	add	r0, r8, #24
   42f0c:	ldr	r2, [r9, #32]
   42f10:	mov	r3, r1
   42f14:	ldr	r7, [r2], #4
   42f18:	str	r7, [r0], #4
   42f1c:	subs	r3, r3, #1
   42f20:	bne	42f14 <WriteCompressedTypeArrayFlags+0xb8>
   42f24:	mov	r0, r1
   42f28:	tst	r1, #1
   42f2c:	addne	r1, r8, r0, lsl #2
   42f30:	movne	r2, #0
   42f34:	strne	r2, [r1, #24]
   42f38:	addne	r0, r0, #1
   42f3c:	mov	r1, #24
   42f40:	add	r0, r1, r0, lsl #2
   42f44:	str	r8, [r4]
   42f48:	str	r0, [r4, #4]
   42f4c:	mov	r5, #0
   42f50:	mov	sl, #2048	; 0x800
   42f54:	add	r7, sp, #2048	; 0x800
   42f58:	str	r7, [r4, #12]
   42f5c:	str	sl, [r4, #16]
   42f60:	mov	r0, r4
   42f64:	mov	r1, #0
   42f68:	bl	18ac <deflate@plt>
   42f6c:	ldr	r3, [r6]
   42f70:	ldr	r0, [r4, #16]
   42f74:	rsb	r2, r0, #2048	; 0x800
   42f78:	mov	r0, r7
   42f7c:	mov	r1, #1
   42f80:	bl	18c4 <fwrite@plt>
   42f84:	add	r5, r0, r5
   42f88:	ldr	r0, [r4, #16]
   42f8c:	cmp	r0, #0
   42f90:	beq	42f58 <WriteCompressedTypeArrayFlags+0xfc>
   42f94:	mov	r0, #0
   42f98:	str	r0, [sp, #4]
   42f9c:	mov	r0, #1
   42fa0:	str	r0, [sp]
   42fa4:	mov	r0, #8
   42fa8:	str	r8, [r4]
   42fac:	str	r0, [r4, #4]
   42fb0:	mov	r8, #2048	; 0x800
   42fb4:	str	r7, [r4, #12]
   42fb8:	str	r8, [r4, #16]
   42fbc:	mov	r0, r4
   42fc0:	mov	r1, #0
   42fc4:	bl	18ac <deflate@plt>
   42fc8:	ldr	r3, [r6]
   42fcc:	ldr	r0, [r4, #16]
   42fd0:	rsb	r2, r0, #2048	; 0x800
   42fd4:	mov	r0, r7
   42fd8:	mov	r1, #1
   42fdc:	bl	18c4 <fwrite@plt>
   42fe0:	add	r5, r0, r5
   42fe4:	ldr	r0, [r4, #16]
   42fe8:	cmp	r0, #0
   42fec:	beq	42fb4 <WriteCompressedTypeArrayFlags+0x158>
   42ff0:	ldr	r0, [r6]
   42ff4:	bl	1858 <ftell@plt>
   42ff8:	ldr	r1, [r9, #52]	; 0x34
   42ffc:	str	r0, [r1]
   43000:	cmn	r0, #1
   43004:	bne	43014 <WriteCompressedTypeArrayFlags+0x1b8>
   43008:	ldr	r0, [pc, #36]	; 43034 <WriteCompressedTypeArrayFlags+0x1d8>
   4300c:	add	r0, pc, r0
   43010:	bl	19cc <Mat_Critical@plt>
   43014:	mov	r0, r6
   43018:	mov	r1, r9
   4301c:	mov	r2, r4
   43020:	bl	3f434 <WriteCompressedType>
   43024:	add	r7, r0, r5
   43028:	mov	r0, r7
   4302c:	sub	sp, fp, #28
   43030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43034:	.word	0x0000628c

00043038 <Mat_WriteCompressedEmptyVariable5>:
   43038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4303c:	add	fp, sp, #28
   43040:	sub	sp, sp, #12
   43044:	sub	sp, sp, #4096	; 0x1000
   43048:	mov	r4, r2
   4304c:	mov	r9, r1
   43050:	mov	r5, r0
   43054:	add	r8, sp, #8
   43058:	mov	r0, r8
   4305c:	mov	r1, #0
   43060:	mov	r2, #2048	; 0x800
   43064:	bl	19a8 <memset@plt>
   43068:	mov	r0, #1
   4306c:	cmp	r5, #0
   43070:	cmpne	r4, #0
   43074:	bne	43080 <Mat_WriteCompressedEmptyVariable5+0x48>
   43078:	sub	sp, fp, #28
   4307c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43080:	mov	r0, #48	; 0x30
   43084:	str	r0, [sp, #12]
   43088:	mov	r0, #14
   4308c:	str	r0, [sp, #8]
   43090:	mov	r0, #8
   43094:	str	r8, [r4]
   43098:	str	r0, [r4, #4]
   4309c:	mov	r7, #0
   430a0:	mov	sl, #2048	; 0x800
   430a4:	add	lr, sp, #2048	; 0x800
   430a8:	add	r6, lr, #8
   430ac:	str	r6, [r4, #12]
   430b0:	str	sl, [r4, #16]
   430b4:	mov	r0, r4
   430b8:	mov	r1, #0
   430bc:	bl	18ac <deflate@plt>
   430c0:	ldr	r3, [r5]
   430c4:	ldr	r0, [r4, #16]
   430c8:	rsb	r2, r0, #2048	; 0x800
   430cc:	mov	r0, r6
   430d0:	mov	r1, #1
   430d4:	bl	18c4 <fwrite@plt>
   430d8:	add	r7, r0, r7
   430dc:	ldr	r0, [r4, #16]
   430e0:	cmp	r0, #0
   430e4:	beq	430ac <Mat_WriteCompressedEmptyVariable5+0x74>
   430e8:	mov	r0, #8
   430ec:	str	r0, [sp, #12]
   430f0:	mov	r1, #6
   430f4:	str	r1, [sp, #8]
   430f8:	str	r1, [sp, #16]
   430fc:	mov	r1, #0
   43100:	str	r1, [sp, #20]
   43104:	mov	r1, #5
   43108:	str	r1, [sp, #24]
   4310c:	str	r0, [sp, #28]
   43110:	ldm	r9, {r0, r1}
   43114:	str	r1, [sp, #36]	; 0x24
   43118:	str	r0, [sp, #32]
   4311c:	mov	r0, #32
   43120:	str	r8, [r4]
   43124:	str	r0, [r4, #4]
   43128:	mov	r9, #2048	; 0x800
   4312c:	str	r6, [r4, #12]
   43130:	str	r9, [r4, #16]
   43134:	mov	r0, r4
   43138:	mov	r1, #0
   4313c:	bl	18ac <deflate@plt>
   43140:	ldr	r3, [r5]
   43144:	ldr	r0, [r4, #16]
   43148:	rsb	r2, r0, #2048	; 0x800
   4314c:	mov	r0, r6
   43150:	mov	r1, #1
   43154:	bl	18c4 <fwrite@plt>
   43158:	add	r7, r0, r7
   4315c:	ldr	r0, [r4, #16]
   43160:	cmp	r0, #0
   43164:	beq	4312c <Mat_WriteCompressedEmptyVariable5+0xf4>
   43168:	mov	r0, #0
   4316c:	str	r0, [sp, #12]
   43170:	mov	r0, #1
   43174:	str	r0, [sp, #8]
   43178:	mov	r0, #8
   4317c:	str	r8, [r4]
   43180:	str	r0, [r4, #4]
   43184:	mov	r8, #2048	; 0x800
   43188:	str	r6, [r4, #12]
   4318c:	str	r8, [r4, #16]
   43190:	mov	r0, r4
   43194:	mov	r1, #0
   43198:	bl	18ac <deflate@plt>
   4319c:	ldr	r3, [r5]
   431a0:	ldr	r0, [r4, #16]
   431a4:	rsb	r2, r0, #2048	; 0x800
   431a8:	mov	r0, r6
   431ac:	mov	r1, #1
   431b0:	bl	18c4 <fwrite@plt>
   431b4:	add	r7, r0, r7
   431b8:	ldr	r0, [r4, #16]
   431bc:	cmp	r0, #0
   431c0:	beq	43188 <Mat_WriteCompressedEmptyVariable5+0x150>
   431c4:	mov	r0, #9
   431c8:	str	r0, [sp]
   431cc:	mov	r0, r5
   431d0:	mov	r1, r4
   431d4:	mov	r2, #0
   431d8:	mov	r3, #0
   431dc:	bl	428ec <WriteCompressedData>
   431e0:	add	r0, r0, r7
   431e4:	sub	sp, fp, #28
   431e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   431ec:	andeq	r0, r0, r0

000431f0 <Mat_Create4>:
   431f0:	push	{r4, r5, r6, r7, fp, lr}
   431f4:	add	fp, sp, #16
   431f8:	mov	r5, r0
   431fc:	ldr	r1, [pc, #152]	; 4329c <Mat_Create4+0xac>
   43200:	add	r1, pc, r1
   43204:	bl	17f8 <fopen@plt>
   43208:	mov	r4, #0
   4320c:	cmp	r0, #0
   43210:	beq	43278 <Mat_Create4+0x88>
   43214:	mov	r7, r0
   43218:	mov	r0, #44	; 0x2c
   4321c:	bl	18e8 <malloc@plt>
   43220:	cmp	r0, #0
   43224:	beq	43280 <Mat_Create4+0x90>
   43228:	mov	r6, r0
   4322c:	mov	r4, #0
   43230:	str	r7, [r0]
   43234:	str	r4, [r0, #4]
   43238:	str	r4, [r0, #8]
   4323c:	ldr	r0, [pc, #96]	; 432a4 <Mat_Create4+0xb4>
   43240:	add	r0, pc, r0
   43244:	mov	r1, r5
   43248:	bl	1de4 <strdup_printf>
   4324c:	vmov.i32	q8, #0	; 0x00000000
   43250:	mov	r1, #16
   43254:	str	r0, [r6, #12]
   43258:	str	r1, [r6, #16]
   4325c:	add	r0, r6, #20
   43260:	vst1.32	{d16-d17}, [r0]
   43264:	str	r4, [r6, #36]	; 0x24
   43268:	str	r4, [r6, #40]	; 0x28
   4326c:	mov	r0, r6
   43270:	bl	199c <Mat_Rewind@plt>
   43274:	mov	r4, r6
   43278:	mov	r0, r4
   4327c:	pop	{r4, r5, r6, r7, fp, pc}
   43280:	mov	r0, r7
   43284:	bl	19e4 <fclose@plt>
   43288:	ldr	r0, [pc, #16]	; 432a0 <Mat_Create4+0xb0>
   4328c:	add	r0, pc, r0
   43290:	bl	19cc <Mat_Critical@plt>
   43294:	mov	r0, r4
   43298:	pop	{r4, r5, r6, r7, fp, pc}
   4329c:	.word	0x000060b9
   432a0:	.word	0x0000645c
   432a4:	.word	0x000069a3

000432a8 <Mat_VarWrite4>:
   432a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   432ac:	add	fp, sp, #28
   432b0:	sub	sp, sp, #4
   432b4:	vpush	{d8}
   432b8:	sub	sp, sp, #40	; 0x28
   432bc:	mvn	r5, #0
   432c0:	cmp	r0, #0
   432c4:	movne	r6, r1
   432c8:	cmpne	r1, #0
   432cc:	bne	432e4 <Mat_VarWrite4+0x3c>
   432d0:	mov	r0, r5
   432d4:	sub	sp, fp, #40	; 0x28
   432d8:	vpop	{d8}
   432dc:	add	sp, sp, #4
   432e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   432e4:	mov	sl, r0
   432e8:	ldr	r0, [r6, #36]	; 0x24
   432ec:	cmp	r0, #0
   432f0:	beq	432d0 <Mat_VarWrite4+0x28>
   432f4:	ldr	r1, [r6, #4]
   432f8:	cmp	r1, #2
   432fc:	bne	432d0 <Mat_VarWrite4+0x28>
   43300:	ldr	r1, [r6, #8]
   43304:	sub	r1, r1, #2
   43308:	mov	r5, #2
   4330c:	cmp	r1, #7
   43310:	bhi	432d0 <Mat_VarWrite4+0x28>
   43314:	uxtb	r2, r1
   43318:	mov	r3, #175	; 0xaf
   4331c:	mov	r7, #1
   43320:	tst	r7, r3, lsr r2
   43324:	beq	432d0 <Mat_VarWrite4+0x28>
   43328:	ldr	r2, [pc, #1212]	; 437ec <Mat_VarWrite4+0x544>
   4332c:	add	r2, pc, r2
   43330:	ldr	r1, [r2, r1, lsl #2]
   43334:	str	r1, [sp, #20]
   43338:	bl	196c <strlen@plt>
   4333c:	add	r0, r0, #1
   43340:	str	r0, [sp, #36]	; 0x24
   43344:	ldr	r0, [sl]
   43348:	mov	r5, #0
   4334c:	mov	r1, #0
   43350:	mov	r2, #2
   43354:	bl	1a68 <fseek@plt>
   43358:	ldr	r0, [r6, #16]
   4335c:	cmp	r0, #12
   43360:	bhi	432d0 <Mat_VarWrite4+0x28>
   43364:	mov	r7, #1
   43368:	mov	r1, #7872	; 0x1ec0
   4336c:	tst	r1, r7, lsl r0
   43370:	beq	43444 <Mat_VarWrite4+0x19c>
   43374:	ldr	r1, [r6, #4]
   43378:	ldr	r0, [r6, #32]
   4337c:	cmp	r1, #1
   43380:	blt	433b0 <Mat_VarWrite4+0x108>
   43384:	ldr	r2, [r6, #4]
   43388:	ldr	r1, [r6, #32]
   4338c:	mov	r3, #0
   43390:	mov	r7, #1
   43394:	ldr	r0, [r0, r3, lsl #2]
   43398:	mul	r7, r0, r7
   4339c:	add	r3, r3, #1
   433a0:	cmp	r3, r2
   433a4:	mov	r0, r1
   433a8:	blt	43394 <Mat_VarWrite4+0xec>
   433ac:	mov	r0, r1
   433b0:	ldr	r1, [r0]
   433b4:	ldr	r0, [r0, #4]
   433b8:	str	r1, [sp, #24]
   433bc:	str	r0, [sp, #28]
   433c0:	ldr	r0, [r6, #20]
   433c4:	cmp	r0, #0
   433c8:	movwne	r0, #1
   433cc:	str	r0, [sp, #32]
   433d0:	ldr	r3, [sl]
   433d4:	add	r0, sp, #20
   433d8:	mov	r1, #20
   433dc:	mov	r2, #1
   433e0:	bl	18c4 <fwrite@plt>
   433e4:	ldr	r0, [r6, #36]	; 0x24
   433e8:	ldr	r3, [sl]
   433ec:	ldr	r2, [sp, #36]	; 0x24
   433f0:	mov	r1, #1
   433f4:	bl	18c4 <fwrite@plt>
   433f8:	ldr	r0, [r6, #20]
   433fc:	cmp	r0, #0
   43400:	beq	4342c <Mat_VarWrite4+0x184>
   43404:	ldr	r3, [sl]
   43408:	ldr	r1, [r6, #12]
   4340c:	ldr	r4, [r6, #40]	; 0x28
   43410:	ldr	r0, [r4]
   43414:	mov	r2, r7
   43418:	bl	18c4 <fwrite@plt>
   4341c:	ldr	r0, [r4, #4]
   43420:	ldr	r1, [r6, #12]
   43424:	ldr	r3, [sl]
   43428:	b	43438 <Mat_VarWrite4+0x190>
   4342c:	ldr	r3, [sl]
   43430:	ldr	r1, [r6, #12]
   43434:	ldr	r0, [r6, #40]	; 0x28
   43438:	mov	r2, r7
   4343c:	bl	18c4 <fwrite@plt>
   43440:	b	432d0 <Mat_VarWrite4+0x28>
   43444:	cmp	r0, #4
   43448:	beq	43490 <Mat_VarWrite4+0x1e8>
   4344c:	cmp	r0, #5
   43450:	bne	432d0 <Mat_VarWrite4+0x28>
   43454:	ldr	r0, [r6, #8]
   43458:	bl	193c <Mat_SizeOf@plt>
   4345c:	mov	r9, r0
   43460:	ldr	r7, [r6, #40]	; 0x28
   43464:	ldr	r0, [sp, #20]
   43468:	add	r0, r0, #2
   4346c:	str	r0, [sp, #20]
   43470:	ldr	r0, [r7, #16]
   43474:	cmp	r0, #1
   43478:	blt	434a0 <Mat_VarWrite4+0x1f8>
   4347c:	ldr	r1, [r7, #12]
   43480:	add	r0, r1, r0, lsl #2
   43484:	ldr	r0, [r0, #-4]
   43488:	add	r0, r0, #1
   4348c:	b	434a4 <Mat_VarWrite4+0x1fc>
   43490:	ldr	r0, [sp, #20]
   43494:	add	r0, r0, #1
   43498:	str	r0, [sp, #20]
   4349c:	b	43374 <Mat_VarWrite4+0xcc>
   434a0:	mov	r0, #1
   434a4:	str	r0, [sp, #24]
   434a8:	ldr	r0, [r6, #20]
   434ac:	mov	r5, #0
   434b0:	str	r5, [sp, #32]
   434b4:	mov	r1, #4
   434b8:	cmp	r0, #0
   434bc:	movweq	r1, #3
   434c0:	str	r1, [sp, #28]
   434c4:	ldr	r3, [sl]
   434c8:	add	r0, sp, #20
   434cc:	mov	r1, #20
   434d0:	mov	r2, #1
   434d4:	bl	18c4 <fwrite@plt>
   434d8:	ldr	r0, [r6, #36]	; 0x24
   434dc:	ldr	r3, [sl]
   434e0:	ldr	r2, [sp, #36]	; 0x24
   434e4:	mov	r1, #1
   434e8:	bl	18c4 <fwrite@plt>
   434ec:	ldr	r0, [r7, #16]
   434f0:	cmp	r0, #2
   434f4:	blt	43568 <Mat_VarWrite4+0x2c0>
   434f8:	add	r8, sp, #8
   434fc:	ldr	r0, [r7, #12]
   43500:	ldr	r4, [r0, r5, lsl #2]
   43504:	add	r5, r5, #1
   43508:	ldr	r0, [r0, r5, lsl #2]
   4350c:	b	43548 <Mat_VarWrite4+0x2a0>
   43510:	ldr	r0, [r7, #4]
   43514:	ldr	r0, [r0, r4, lsl #2]
   43518:	add	r0, r0, #1
   4351c:	vmov	s0, r0
   43520:	vcvt.f64.s32	d16, s0
   43524:	vstr	d16, [sp, #8]
   43528:	ldr	r3, [sl]
   4352c:	mov	r0, r8
   43530:	mov	r1, #8
   43534:	mov	r2, #1
   43538:	bl	18c4 <fwrite@plt>
   4353c:	ldr	r0, [r7, #12]
   43540:	ldr	r0, [r0, r5, lsl #2]
   43544:	add	r4, r4, #1
   43548:	cmp	r4, r0
   4354c:	ldrlt	r0, [r7, #20]
   43550:	cmplt	r4, r0
   43554:	blt	43510 <Mat_VarWrite4+0x268>
   43558:	ldr	r0, [r7, #16]
   4355c:	sub	r0, r0, #1
   43560:	cmp	r5, r0
   43564:	blt	434fc <Mat_VarWrite4+0x254>
   43568:	ldr	r0, [r6, #32]
   4356c:	vldr	s0, [r0]
   43570:	vcvt.f64.u32	d16, s0
   43574:	vstr	d16, [sp, #8]
   43578:	ldr	r3, [sl]
   4357c:	add	r0, sp, #8
   43580:	mov	r1, #8
   43584:	mov	r2, #1
   43588:	bl	18c4 <fwrite@plt>
   4358c:	ldr	r0, [r7, #16]
   43590:	cmp	r0, #2
   43594:	blt	43608 <Mat_VarWrite4+0x360>
   43598:	mov	r5, #0
   4359c:	add	r8, sp, #8
   435a0:	ldr	r0, [r7, #12]
   435a4:	ldr	r4, [r0, r5, lsl #2]
   435a8:	add	r5, r5, #1
   435ac:	ldr	r0, [r0, r5, lsl #2]
   435b0:	cmp	r4, r0
   435b4:	bge	435f8 <Mat_VarWrite4+0x350>
   435b8:	vmov	s0, r5
   435bc:	vcvt.f64.s32	d8, s0
   435c0:	ldr	r0, [r7, #20]
   435c4:	cmp	r4, r0
   435c8:	bge	435f8 <Mat_VarWrite4+0x350>
   435cc:	vstr	d8, [sp, #8]
   435d0:	ldr	r3, [sl]
   435d4:	mov	r0, r8
   435d8:	mov	r1, #8
   435dc:	mov	r2, #1
   435e0:	bl	18c4 <fwrite@plt>
   435e4:	ldr	r0, [r7, #12]
   435e8:	ldr	r0, [r0, r5, lsl #2]
   435ec:	add	r4, r4, #1
   435f0:	cmp	r4, r0
   435f4:	blt	435c0 <Mat_VarWrite4+0x318>
   435f8:	ldr	r0, [r7, #16]
   435fc:	sub	r0, r0, #1
   43600:	cmp	r5, r0
   43604:	blt	435a0 <Mat_VarWrite4+0x2f8>
   43608:	ldr	r0, [r6, #32]
   4360c:	vldr	s0, [r0, #4]
   43610:	vcvt.f64.u32	d16, s0
   43614:	vstr	d16, [sp, #8]
   43618:	ldr	r3, [sl]
   4361c:	add	r0, sp, #8
   43620:	mov	r1, #8
   43624:	mov	r2, #1
   43628:	bl	18c4 <fwrite@plt>
   4362c:	mov	r0, #0
   43630:	str	r0, [sp, #12]
   43634:	str	r0, [sp, #8]
   43638:	ldr	r0, [r6, #20]
   4363c:	cmp	r0, #0
   43640:	beq	43758 <Mat_VarWrite4+0x4b0>
   43644:	ldr	r1, [r7, #16]
   43648:	ldr	r0, [r7, #24]
   4364c:	ldr	r2, [r0, #4]
   43650:	str	r2, [sp, #4]
   43654:	cmp	r1, #2
   43658:	blt	436c8 <Mat_VarWrite4+0x420>
   4365c:	ldr	r4, [r0]
   43660:	mov	r5, #0
   43664:	ldr	r0, [r7, #12]
   43668:	ldr	r8, [r0, r5, lsl #2]
   4366c:	add	r5, r5, #1
   43670:	ldr	r0, [r0, r5, lsl #2]
   43674:	cmp	r8, r0
   43678:	bge	436b8 <Mat_VarWrite4+0x410>
   4367c:	mla	r6, r9, r8, r4
   43680:	ldr	r0, [r7, #20]
   43684:	cmp	r8, r0
   43688:	bge	436b8 <Mat_VarWrite4+0x410>
   4368c:	ldr	r3, [sl]
   43690:	mov	r0, r6
   43694:	mov	r1, r9
   43698:	mov	r2, #1
   4369c:	bl	18c4 <fwrite@plt>
   436a0:	add	r6, r6, r9
   436a4:	ldr	r0, [r7, #12]
   436a8:	ldr	r0, [r0, r5, lsl #2]
   436ac:	add	r8, r8, #1
   436b0:	cmp	r8, r0
   436b4:	blt	43680 <Mat_VarWrite4+0x3d8>
   436b8:	ldr	r0, [r7, #16]
   436bc:	sub	r0, r0, #1
   436c0:	cmp	r5, r0
   436c4:	blt	43664 <Mat_VarWrite4+0x3bc>
   436c8:	ldr	r3, [sl]
   436cc:	add	r0, sp, #8
   436d0:	mov	r1, r9
   436d4:	mov	r2, #1
   436d8:	bl	18c4 <fwrite@plt>
   436dc:	ldr	r0, [r7, #16]
   436e0:	cmp	r0, #2
   436e4:	ldr	r8, [sp, #4]
   436e8:	blt	437d0 <Mat_VarWrite4+0x528>
   436ec:	mov	r5, #0
   436f0:	ldr	r0, [r7, #12]
   436f4:	ldr	r4, [r0, r5, lsl #2]
   436f8:	add	r5, r5, #1
   436fc:	ldr	r0, [r0, r5, lsl #2]
   43700:	cmp	r4, r0
   43704:	bge	43744 <Mat_VarWrite4+0x49c>
   43708:	mla	r6, r9, r4, r8
   4370c:	ldr	r0, [r7, #20]
   43710:	cmp	r4, r0
   43714:	bge	43744 <Mat_VarWrite4+0x49c>
   43718:	ldr	r3, [sl]
   4371c:	mov	r0, r6
   43720:	mov	r1, r9
   43724:	mov	r2, #1
   43728:	bl	18c4 <fwrite@plt>
   4372c:	add	r6, r6, r9
   43730:	ldr	r0, [r7, #12]
   43734:	ldr	r0, [r0, r5, lsl #2]
   43738:	add	r4, r4, #1
   4373c:	cmp	r4, r0
   43740:	blt	4370c <Mat_VarWrite4+0x464>
   43744:	ldr	r0, [r7, #16]
   43748:	sub	r0, r0, #1
   4374c:	cmp	r5, r0
   43750:	blt	436f0 <Mat_VarWrite4+0x448>
   43754:	b	437d0 <Mat_VarWrite4+0x528>
   43758:	ldr	r0, [r7, #16]
   4375c:	cmp	r0, #2
   43760:	blt	437d0 <Mat_VarWrite4+0x528>
   43764:	ldr	r8, [r7, #24]
   43768:	mov	r5, #0
   4376c:	ldr	r0, [r7, #12]
   43770:	ldr	r4, [r0, r5, lsl #2]
   43774:	add	r5, r5, #1
   43778:	ldr	r0, [r0, r5, lsl #2]
   4377c:	cmp	r4, r0
   43780:	bge	437c0 <Mat_VarWrite4+0x518>
   43784:	mla	r6, r9, r4, r8
   43788:	ldr	r0, [r7, #20]
   4378c:	cmp	r4, r0
   43790:	bge	437c0 <Mat_VarWrite4+0x518>
   43794:	ldr	r3, [sl]
   43798:	mov	r0, r6
   4379c:	mov	r1, r9
   437a0:	mov	r2, #1
   437a4:	bl	18c4 <fwrite@plt>
   437a8:	add	r6, r6, r9
   437ac:	ldr	r0, [r7, #12]
   437b0:	ldr	r0, [r0, r5, lsl #2]
   437b4:	add	r4, r4, #1
   437b8:	cmp	r4, r0
   437bc:	blt	43788 <Mat_VarWrite4+0x4e0>
   437c0:	ldr	r0, [r7, #16]
   437c4:	sub	r0, r0, #1
   437c8:	cmp	r5, r0
   437cc:	blt	4376c <Mat_VarWrite4+0x4c4>
   437d0:	ldr	r3, [sl]
   437d4:	add	r0, sp, #8
   437d8:	mov	r1, r9
   437dc:	mov	r2, #1
   437e0:	bl	18c4 <fwrite@plt>
   437e4:	mov	r5, #0
   437e8:	b	432d0 <Mat_VarWrite4+0x28>
   437ec:	.word	0x000064dc

000437f0 <Mat_VarRead4>:
   437f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   437f4:	add	fp, sp, #24
   437f8:	sub	sp, sp, #24
   437fc:	mov	r5, r1
   43800:	mov	r9, r0
   43804:	mov	r4, #1
   43808:	str	r4, [sp, #20]
   4380c:	add	r1, sp, #20
   43810:	mov	r0, r5
   43814:	bl	4479c <SafeMulDims>
   43818:	ldr	r0, [r9]
   4381c:	ldr	r1, [r5, #52]	; 0x34
   43820:	ldr	r1, [r1]
   43824:	mov	r2, #0
   43828:	bl	1a68 <fseek@plt>
   4382c:	ldr	r0, [r5, #16]
   43830:	cmp	r0, #4
   43834:	beq	438a0 <Mat_VarRead4+0xb0>
   43838:	cmp	r0, #5
   4383c:	beq	438d8 <Mat_VarRead4+0xe8>
   43840:	cmp	r0, #6
   43844:	bne	43a58 <Mat_VarRead4+0x268>
   43848:	mov	r0, #8
   4384c:	str	r0, [r5, #12]
   43850:	ldr	r1, [sp, #20]
   43854:	mov	r0, r5
   43858:	mov	r2, #8
   4385c:	bl	4481c <SafeMul>
   43860:	ldr	r0, [r5]
   43864:	ldr	r1, [r5, #20]
   43868:	cmp	r1, #0
   4386c:	beq	43a64 <Mat_VarRead4+0x274>
   43870:	bl	4470c <ComplexMalloc>
   43874:	cmp	r0, #0
   43878:	beq	43aac <Mat_VarRead4+0x2bc>
   4387c:	mov	r6, r0
   43880:	str	r0, [r5, #40]	; 0x28
   43884:	ldr	r2, [r5, #8]
   43888:	ldr	r1, [r0]
   4388c:	ldr	r3, [sp, #20]
   43890:	mov	r0, r9
   43894:	bl	3778 <ReadDoubleData>
   43898:	ldr	r1, [r6, #4]
   4389c:	b	43a78 <Mat_VarRead4+0x288>
   438a0:	str	r4, [r5, #12]
   438a4:	ldr	r6, [sp, #20]
   438a8:	str	r6, [r5]
   438ac:	mov	r0, r6
   438b0:	bl	18e8 <malloc@plt>
   438b4:	str	r0, [r5, #40]	; 0x28
   438b8:	cmp	r0, #0
   438bc:	beq	43a8c <Mat_VarRead4+0x29c>
   438c0:	mov	r1, r0
   438c4:	ldr	r2, [r5, #8]
   438c8:	mov	r0, r9
   438cc:	mov	r3, r6
   438d0:	bl	133ec <ReadUInt8Data>
   438d4:	b	43a98 <Mat_VarRead4+0x2a8>
   438d8:	mov	r0, #28
   438dc:	str	r0, [r5, #12]
   438e0:	mov	r0, #28
   438e4:	bl	18e8 <malloc@plt>
   438e8:	str	r0, [r5, #40]	; 0x28
   438ec:	cmp	r0, #0
   438f0:	beq	43aa0 <Mat_VarRead4+0x2b0>
   438f4:	mov	r6, r0
   438f8:	ldr	r0, [r5, #32]
   438fc:	ldr	r7, [r5, #40]	; 0x28
   43900:	ldr	r1, [r0, #4]
   43904:	sub	r1, r1, #4
   43908:	clz	r1, r1
   4390c:	lsr	r1, r1, #5
   43910:	str	r1, [r5, #20]
   43914:	ldr	r0, [r0]
   43918:	sub	r0, r0, #1
   4391c:	str	r0, [r7]
   43920:	str	r0, [r7, #8]
   43924:	lsl	r0, r0, #2
   43928:	bl	18e8 <malloc@plt>
   4392c:	str	r0, [r7, #4]
   43930:	cmp	r0, #0
   43934:	beq	43ab8 <Mat_VarRead4+0x2c8>
   43938:	mov	r1, r0
   4393c:	ldr	r3, [r7, #8]
   43940:	mov	r0, r9
   43944:	mov	r2, #9
   43948:	bl	b250 <ReadInt32Data>
   4394c:	ldr	r0, [r7, #8]
   43950:	cmp	r0, #1
   43954:	blt	4397c <Mat_VarRead4+0x18c>
   43958:	ldr	r0, [r7, #4]
   4395c:	mov	r1, #0
   43960:	ldr	r2, [r0, r1, lsl #2]
   43964:	sub	r2, r2, #1
   43968:	str	r2, [r0, r1, lsl #2]
   4396c:	add	r1, r1, #1
   43970:	ldr	r2, [r7, #8]
   43974:	cmp	r1, r2
   43978:	blt	43960 <Mat_VarRead4+0x170>
   4397c:	add	r1, sp, #8
   43980:	mov	r0, r9
   43984:	mov	r2, #9
   43988:	mov	r3, #1
   4398c:	bl	3778 <ReadDoubleData>
   43990:	vldr	d16, [sp, #8]
   43994:	ldr	r0, [r5, #32]
   43998:	vcvt.u32.f64	s0, d16
   4399c:	vstr	s0, [r0]
   439a0:	ldr	r0, [r9]
   439a4:	bl	1858 <ftell@plt>
   439a8:	cmn	r0, #1
   439ac:	beq	43ad4 <Mat_VarRead4+0x2e4>
   439b0:	mov	r8, r0
   439b4:	ldr	r6, [r9]
   439b8:	ldr	r4, [r7, #8]
   439bc:	mov	r0, #9
   439c0:	bl	193c <Mat_SizeOf@plt>
   439c4:	mul	r1, r0, r4
   439c8:	mov	r0, r6
   439cc:	mov	r2, #1
   439d0:	bl	1a68 <fseek@plt>
   439d4:	add	r1, sp, #8
   439d8:	mov	r0, r9
   439dc:	mov	r2, #9
   439e0:	mov	r3, #1
   439e4:	bl	3778 <ReadDoubleData>
   439e8:	vldr	d16, [sp, #8]
   439ec:	vldr	d17, [pc, #988]	; 43dd0 <Mat_VarRead4+0x5e0>
   439f0:	vcmpe.f64	d16, d17
   439f4:	vmrs	APSR_nzcv, fpscr
   439f8:	bgt	43b14 <Mat_VarRead4+0x324>
   439fc:	vcmpe.f64	d16, #0.0
   43a00:	vmrs	APSR_nzcv, fpscr
   43a04:	bmi	43b14 <Mat_VarRead4+0x324>
   43a08:	ldr	r0, [r5, #32]
   43a0c:	vcvt.u32.f64	s0, d16
   43a10:	vstr	s0, [r0, #4]
   43a14:	ldr	r0, [r9]
   43a18:	mov	r4, #0
   43a1c:	mov	r1, r8
   43a20:	mov	r2, #0
   43a24:	bl	1a68 <fseek@plt>
   43a28:	ldr	r0, [r5, #32]
   43a2c:	ldr	r0, [r0, #4]
   43a30:	cmn	r0, #-2147483647	; 0x80000001
   43a34:	bcc	43b38 <Mat_VarRead4+0x348>
   43a38:	ldr	r0, [r7, #4]
   43a3c:	bl	181c <free@plt>
   43a40:	ldr	r0, [r5, #40]	; 0x28
   43a44:	bl	181c <free@plt>
   43a48:	str	r4, [r5, #40]	; 0x28
   43a4c:	ldr	r0, [pc, #1624]	; 440ac <Mat_VarRead4+0x8bc>
   43a50:	add	r0, pc, r0
   43a54:	b	43cf4 <Mat_VarRead4+0x504>
   43a58:	ldr	r0, [pc, #1636]	; 440c4 <Mat_VarRead4+0x8d4>
   43a5c:	add	r0, pc, r0
   43a60:	b	43cf4 <Mat_VarRead4+0x504>
   43a64:	bl	18e8 <malloc@plt>
   43a68:	str	r0, [r5, #40]	; 0x28
   43a6c:	cmp	r0, #0
   43a70:	beq	43af8 <Mat_VarRead4+0x308>
   43a74:	mov	r1, r0
   43a78:	ldr	r2, [r5, #8]
   43a7c:	ldr	r3, [sp, #20]
   43a80:	mov	r0, r9
   43a84:	bl	3778 <ReadDoubleData>
   43a88:	b	43b04 <Mat_VarRead4+0x314>
   43a8c:	ldr	r0, [pc, #1548]	; 440a0 <Mat_VarRead4+0x8b0>
   43a90:	add	r0, pc, r0
   43a94:	bl	19cc <Mat_Critical@plt>
   43a98:	mov	r0, #2
   43a9c:	b	43b08 <Mat_VarRead4+0x318>
   43aa0:	ldr	r0, [pc, #1560]	; 440c0 <Mat_VarRead4+0x8d0>
   43aa4:	add	r0, pc, r0
   43aa8:	b	43cf4 <Mat_VarRead4+0x504>
   43aac:	ldr	r0, [pc, #1508]	; 44098 <Mat_VarRead4+0x8a8>
   43ab0:	add	r0, pc, r0
   43ab4:	b	43b00 <Mat_VarRead4+0x310>
   43ab8:	mov	r0, r6
   43abc:	bl	181c <free@plt>
   43ac0:	mov	r0, #0
   43ac4:	str	r0, [r5, #40]	; 0x28
   43ac8:	ldr	r0, [pc, #1528]	; 440c8 <Mat_VarRead4+0x8d8>
   43acc:	add	r0, pc, r0
   43ad0:	b	43cf4 <Mat_VarRead4+0x504>
   43ad4:	ldr	r0, [r7, #4]
   43ad8:	bl	181c <free@plt>
   43adc:	ldr	r0, [r5, #40]	; 0x28
   43ae0:	bl	181c <free@plt>
   43ae4:	mov	r0, #0
   43ae8:	str	r0, [r5, #40]	; 0x28
   43aec:	ldr	r0, [pc, #1456]	; 440a4 <Mat_VarRead4+0x8b4>
   43af0:	add	r0, pc, r0
   43af4:	b	43cf4 <Mat_VarRead4+0x504>
   43af8:	ldr	r0, [pc, #1436]	; 4409c <Mat_VarRead4+0x8ac>
   43afc:	add	r0, pc, r0
   43b00:	bl	19cc <Mat_Critical@plt>
   43b04:	mov	r0, #9
   43b08:	str	r0, [r5, #8]
   43b0c:	sub	sp, fp, #24
   43b10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   43b14:	ldr	r0, [r7, #4]
   43b18:	bl	181c <free@plt>
   43b1c:	ldr	r0, [r5, #40]	; 0x28
   43b20:	bl	181c <free@plt>
   43b24:	mov	r0, #0
   43b28:	str	r0, [r5, #40]	; 0x28
   43b2c:	ldr	r0, [pc, #1396]	; 440a8 <Mat_VarRead4+0x8b8>
   43b30:	add	r0, pc, r0
   43b34:	b	43cf4 <Mat_VarRead4+0x504>
   43b38:	add	r0, r0, #1
   43b3c:	str	r0, [r7, #16]
   43b40:	lsl	r0, r0, #2
   43b44:	bl	18e8 <malloc@plt>
   43b48:	str	r0, [r7, #12]
   43b4c:	cmp	r0, #0
   43b50:	beq	43cd4 <Mat_VarRead4+0x4e4>
   43b54:	ldr	r0, [r7, #8]
   43b58:	lsl	r0, r0, #2
   43b5c:	bl	18e8 <malloc@plt>
   43b60:	cmp	r0, #0
   43b64:	beq	43ccc <Mat_VarRead4+0x4dc>
   43b68:	mov	r6, r0
   43b6c:	ldr	r0, [r7, #12]
   43b70:	mov	r4, #0
   43b74:	str	r4, [r0]
   43b78:	ldr	r3, [r7, #8]
   43b7c:	mov	r0, r9
   43b80:	mov	r1, r6
   43b84:	mov	r2, #9
   43b88:	bl	b250 <ReadInt32Data>
   43b8c:	ldr	r0, [r7, #16]
   43b90:	cmp	r0, #3
   43b94:	blt	43be4 <Mat_VarRead4+0x3f4>
   43b98:	ldr	r0, [r7, #12]
   43b9c:	mov	r1, #1
   43ba0:	ldr	r2, [r7, #8]
   43ba4:	cmp	r4, r2
   43ba8:	blt	43bc0 <Mat_VarRead4+0x3d0>
   43bac:	b	43bcc <Mat_VarRead4+0x3dc>
   43bb0:	ldr	r2, [r7, #8]
   43bb4:	add	r4, r4, #1
   43bb8:	cmp	r4, r2
   43bbc:	bge	43bcc <Mat_VarRead4+0x3dc>
   43bc0:	ldr	r2, [r6, r4, lsl #2]
   43bc4:	cmp	r2, r1
   43bc8:	ble	43bb0 <Mat_VarRead4+0x3c0>
   43bcc:	str	r4, [r0, r1, lsl #2]
   43bd0:	add	r1, r1, #1
   43bd4:	ldr	r2, [r7, #16]
   43bd8:	sub	r2, r2, #1
   43bdc:	cmp	r1, r2
   43be0:	blt	43ba0 <Mat_VarRead4+0x3b0>
   43be4:	mov	r0, r6
   43be8:	bl	181c <free@plt>
   43bec:	add	r2, r7, #8
   43bf0:	ldm	r2, {r0, r1, r2}
   43bf4:	add	r1, r1, r2, lsl #2
   43bf8:	str	r0, [r1, #-4]
   43bfc:	add	r1, sp, #8
   43c00:	mov	r0, r9
   43c04:	mov	r2, #9
   43c08:	mov	r3, #1
   43c0c:	bl	3778 <ReadDoubleData>
   43c10:	ldr	r4, [r7, #8]
   43c14:	str	r4, [r7, #20]
   43c18:	ldr	r8, [r5, #8]
   43c1c:	ldr	r6, [r5, #20]
   43c20:	mov	r0, r8
   43c24:	bl	193c <Mat_SizeOf@plt>
   43c28:	mul	r0, r0, r4
   43c2c:	cmp	r6, #0
   43c30:	beq	43d00 <Mat_VarRead4+0x510>
   43c34:	bl	4470c <ComplexMalloc>
   43c38:	cmp	r0, #0
   43c3c:	beq	43d78 <Mat_VarRead4+0x588>
   43c40:	mov	r6, r0
   43c44:	str	r0, [r7, #24]
   43c48:	sub	r0, r8, #2
   43c4c:	cmp	r0, #7
   43c50:	bhi	43ebc <Mat_VarRead4+0x6cc>
   43c54:	add	r1, pc, #4
   43c58:	ldr	r0, [r1, r0, lsl #2]
   43c5c:	add	pc, r1, r0
   43c60:	.word	0x00000020
   43c64:	.word	0x00000178
   43c68:	.word	0x000001c4
   43c6c:	.word	0x00000210
   43c70:	.word	0x0000025c
   43c74:	.word	0x00000274
   43c78:	.word	0x0000025c
   43c7c:	.word	0x000002c0
   43c80:	ldr	r3, [r7, #20]
   43c84:	ldr	r1, [r6]
   43c88:	mov	r0, r9
   43c8c:	mov	r2, r8
   43c90:	bl	133ec <ReadUInt8Data>
   43c94:	add	r5, sp, #4
   43c98:	mov	r0, r9
   43c9c:	mov	r1, r5
   43ca0:	mov	r2, r8
   43ca4:	mov	r3, #1
   43ca8:	bl	133ec <ReadUInt8Data>
   43cac:	ldr	r1, [r6, #4]
   43cb0:	ldr	r3, [r7, #20]
   43cb4:	mov	r0, r9
   43cb8:	mov	r2, r8
   43cbc:	bl	133ec <ReadUInt8Data>
   43cc0:	mov	r0, r9
   43cc4:	mov	r1, r5
   43cc8:	b	43d64 <Mat_VarRead4+0x574>
   43ccc:	ldr	r0, [r7, #12]
   43cd0:	bl	181c <free@plt>
   43cd4:	ldr	r0, [r7, #4]
   43cd8:	bl	181c <free@plt>
   43cdc:	ldr	r0, [r5, #40]	; 0x28
   43ce0:	bl	181c <free@plt>
   43ce4:	mov	r0, #0
   43ce8:	str	r0, [r5, #40]	; 0x28
   43cec:	ldr	r0, [pc, #956]	; 440b0 <Mat_VarRead4+0x8c0>
   43cf0:	add	r0, pc, r0
   43cf4:	bl	19cc <Mat_Critical@plt>
   43cf8:	sub	sp, fp, #24
   43cfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   43d00:	bl	18e8 <malloc@plt>
   43d04:	str	r0, [r7, #24]
   43d08:	cmp	r0, #0
   43d0c:	beq	43da4 <Mat_VarRead4+0x5b4>
   43d10:	mov	r1, r0
   43d14:	sub	r0, r8, #2
   43d18:	cmp	r0, #7
   43d1c:	bhi	43ffc <Mat_VarRead4+0x80c>
   43d20:	add	r2, pc, #4
   43d24:	ldr	r0, [r2, r0, lsl #2]
   43d28:	add	pc, r2, r0
   43d2c:	.word	0x00000020
   43d30:	.word	0x00000240
   43d34:	.word	0x00000270
   43d38:	.word	0x000002a0
   43d3c:	.word	0x000002d0
   43d40:	.word	0x00000310
   43d44:	.word	0x000002d0
   43d48:	.word	0x00000340
   43d4c:	ldr	r3, [r7, #20]
   43d50:	mov	r0, r9
   43d54:	mov	r2, r8
   43d58:	bl	133ec <ReadUInt8Data>
   43d5c:	add	r1, sp, #4
   43d60:	mov	r0, r9
   43d64:	mov	r2, r8
   43d68:	mov	r3, #1
   43d6c:	bl	133ec <ReadUInt8Data>
   43d70:	sub	sp, fp, #24
   43d74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   43d78:	ldr	r0, [r7, #12]
   43d7c:	bl	181c <free@plt>
   43d80:	ldr	r0, [r7, #4]
   43d84:	bl	181c <free@plt>
   43d88:	ldr	r0, [r5, #40]	; 0x28
   43d8c:	bl	181c <free@plt>
   43d90:	mov	r0, #0
   43d94:	str	r0, [r5, #40]	; 0x28
   43d98:	ldr	r0, [pc, #788]	; 440b4 <Mat_VarRead4+0x8c4>
   43d9c:	add	r0, pc, r0
   43da0:	b	43cf4 <Mat_VarRead4+0x504>
   43da4:	ldr	r0, [r7, #12]
   43da8:	bl	181c <free@plt>
   43dac:	ldr	r0, [r7, #4]
   43db0:	bl	181c <free@plt>
   43db4:	ldr	r0, [r5, #40]	; 0x28
   43db8:	bl	181c <free@plt>
   43dbc:	mov	r0, #0
   43dc0:	str	r0, [r5, #40]	; 0x28
   43dc4:	ldr	r0, [pc, #752]	; 440bc <Mat_VarRead4+0x8cc>
   43dc8:	add	r0, pc, r0
   43dcc:	b	43cf4 <Mat_VarRead4+0x504>
   43dd0:	.word	0xff800000
   43dd4:	.word	0x41dfffff
   43dd8:	ldr	r3, [r7, #20]
   43ddc:	ldr	r1, [r6]
   43de0:	mov	r0, r9
   43de4:	mov	r2, r8
   43de8:	bl	e5f8 <ReadInt16Data>
   43dec:	add	r5, sp, #4
   43df0:	mov	r0, r9
   43df4:	mov	r1, r5
   43df8:	mov	r2, r8
   43dfc:	mov	r3, #1
   43e00:	bl	e5f8 <ReadInt16Data>
   43e04:	ldr	r1, [r6, #4]
   43e08:	ldr	r3, [r7, #20]
   43e0c:	mov	r0, r9
   43e10:	mov	r2, r8
   43e14:	bl	e5f8 <ReadInt16Data>
   43e18:	mov	r0, r9
   43e1c:	mov	r1, r5
   43e20:	b	43f88 <Mat_VarRead4+0x798>
   43e24:	ldr	r3, [r7, #20]
   43e28:	ldr	r1, [r6]
   43e2c:	mov	r0, r9
   43e30:	mov	r2, r8
   43e34:	bl	fffc <ReadUInt16Data>
   43e38:	add	r5, sp, #4
   43e3c:	mov	r0, r9
   43e40:	mov	r1, r5
   43e44:	mov	r2, r8
   43e48:	mov	r3, #1
   43e4c:	bl	fffc <ReadUInt16Data>
   43e50:	ldr	r1, [r6, #4]
   43e54:	ldr	r3, [r7, #20]
   43e58:	mov	r0, r9
   43e5c:	mov	r2, r8
   43e60:	bl	fffc <ReadUInt16Data>
   43e64:	mov	r0, r9
   43e68:	mov	r1, r5
   43e6c:	b	43fb8 <Mat_VarRead4+0x7c8>
   43e70:	ldr	r3, [r7, #20]
   43e74:	ldr	r1, [r6]
   43e78:	mov	r0, r9
   43e7c:	mov	r2, r8
   43e80:	bl	b250 <ReadInt32Data>
   43e84:	add	r5, sp, #4
   43e88:	mov	r0, r9
   43e8c:	mov	r1, r5
   43e90:	mov	r2, r8
   43e94:	mov	r3, #1
   43e98:	bl	b250 <ReadInt32Data>
   43e9c:	ldr	r1, [r6, #4]
   43ea0:	ldr	r3, [r7, #20]
   43ea4:	mov	r0, r9
   43ea8:	mov	r2, r8
   43eac:	bl	b250 <ReadInt32Data>
   43eb0:	mov	r0, r9
   43eb4:	mov	r1, r5
   43eb8:	b	43fe8 <Mat_VarRead4+0x7f8>
   43ebc:	ldr	r0, [r6]
   43ec0:	bl	181c <free@plt>
   43ec4:	ldr	r0, [r6, #4]
   43ec8:	bl	181c <free@plt>
   43ecc:	mov	r0, r6
   43ed0:	b	44000 <Mat_VarRead4+0x810>
   43ed4:	ldr	r3, [r7, #20]
   43ed8:	ldr	r1, [r6]
   43edc:	mov	r0, r9
   43ee0:	mov	r2, r8
   43ee4:	bl	5ea0 <ReadSingleData>
   43ee8:	add	r5, sp, #4
   43eec:	mov	r0, r9
   43ef0:	mov	r1, r5
   43ef4:	mov	r2, r8
   43ef8:	mov	r3, #1
   43efc:	bl	5ea0 <ReadSingleData>
   43f00:	ldr	r1, [r6, #4]
   43f04:	ldr	r3, [r7, #20]
   43f08:	mov	r0, r9
   43f0c:	mov	r2, r8
   43f10:	bl	5ea0 <ReadSingleData>
   43f14:	mov	r0, r9
   43f18:	mov	r1, r5
   43f1c:	b	44058 <Mat_VarRead4+0x868>
   43f20:	ldr	r3, [r7, #20]
   43f24:	ldr	r1, [r6]
   43f28:	mov	r0, r9
   43f2c:	mov	r2, r8
   43f30:	bl	3778 <ReadDoubleData>
   43f34:	add	r5, sp, #8
   43f38:	mov	r0, r9
   43f3c:	mov	r1, r5
   43f40:	mov	r2, r8
   43f44:	mov	r3, #1
   43f48:	bl	3778 <ReadDoubleData>
   43f4c:	ldr	r1, [r6, #4]
   43f50:	ldr	r3, [r7, #20]
   43f54:	mov	r0, r9
   43f58:	mov	r2, r8
   43f5c:	bl	3778 <ReadDoubleData>
   43f60:	mov	r0, r9
   43f64:	mov	r1, r5
   43f68:	b	44084 <Mat_VarRead4+0x894>
   43f6c:	ldr	r3, [r7, #20]
   43f70:	ldr	r1, [r7, #24]
   43f74:	mov	r0, r9
   43f78:	mov	r2, r8
   43f7c:	bl	e5f8 <ReadInt16Data>
   43f80:	add	r1, sp, #4
   43f84:	mov	r0, r9
   43f88:	mov	r2, r8
   43f8c:	mov	r3, #1
   43f90:	bl	e5f8 <ReadInt16Data>
   43f94:	sub	sp, fp, #24
   43f98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   43f9c:	ldr	r3, [r7, #20]
   43fa0:	ldr	r1, [r7, #24]
   43fa4:	mov	r0, r9
   43fa8:	mov	r2, r8
   43fac:	bl	fffc <ReadUInt16Data>
   43fb0:	add	r1, sp, #4
   43fb4:	mov	r0, r9
   43fb8:	mov	r2, r8
   43fbc:	mov	r3, #1
   43fc0:	bl	fffc <ReadUInt16Data>
   43fc4:	sub	sp, fp, #24
   43fc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   43fcc:	ldr	r3, [r7, #20]
   43fd0:	ldr	r1, [r7, #24]
   43fd4:	mov	r0, r9
   43fd8:	mov	r2, r8
   43fdc:	bl	b250 <ReadInt32Data>
   43fe0:	add	r1, sp, #4
   43fe4:	mov	r0, r9
   43fe8:	mov	r2, r8
   43fec:	mov	r3, #1
   43ff0:	bl	b250 <ReadInt32Data>
   43ff4:	sub	sp, fp, #24
   43ff8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   43ffc:	mov	r0, r1
   44000:	bl	181c <free@plt>
   44004:	ldr	r0, [r7, #12]
   44008:	bl	181c <free@plt>
   4400c:	ldr	r0, [r7, #4]
   44010:	bl	181c <free@plt>
   44014:	ldr	r0, [r5, #40]	; 0x28
   44018:	bl	181c <free@plt>
   4401c:	mov	r0, #0
   44020:	str	r0, [r5, #40]	; 0x28
   44024:	ldr	r0, [pc, #140]	; 440b8 <Mat_VarRead4+0x8c8>
   44028:	add	r0, pc, r0
   4402c:	mov	r1, r8
   44030:	bl	19cc <Mat_Critical@plt>
   44034:	sub	sp, fp, #24
   44038:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   4403c:	ldr	r3, [r7, #20]
   44040:	ldr	r1, [r7, #24]
   44044:	mov	r0, r9
   44048:	mov	r2, r8
   4404c:	bl	5ea0 <ReadSingleData>
   44050:	add	r1, sp, #4
   44054:	mov	r0, r9
   44058:	mov	r2, r8
   4405c:	mov	r3, #1
   44060:	bl	5ea0 <ReadSingleData>
   44064:	sub	sp, fp, #24
   44068:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   4406c:	ldr	r3, [r7, #20]
   44070:	mov	r0, r9
   44074:	mov	r2, r8
   44078:	bl	3778 <ReadDoubleData>
   4407c:	add	r1, sp, #8
   44080:	mov	r0, r9
   44084:	mov	r2, r8
   44088:	mov	r3, #1
   4408c:	bl	3778 <ReadDoubleData>
   44090:	sub	sp, fp, #24
   44094:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   44098:	.word	0x000059f1
   4409c:	.word	0x00005848
   440a0:	.word	0x000058b4
   440a4:	.word	0x000057a8
   440a8:	.word	0x00005c14
   440ac:	.word	0x00005cf4
   440b0:	.word	0x00005a7f
   440b4:	.word	0x00005679
   440b8:	.word	0x0000577b
   440bc:	.word	0x00005682
   440c0:	.word	0x000058a0
   440c4:	.word	0x00005d89
   440c8:	.word	0x00005c46

000440cc <Mat_VarReadData4>:
   440cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   440d0:	add	fp, sp, #28
   440d4:	sub	sp, sp, #28
   440d8:	mov	r5, r3
   440dc:	mov	r8, r2
   440e0:	mov	r7, r1
   440e4:	mov	r4, r0
   440e8:	ldr	r0, [r0]
   440ec:	ldr	r1, [r1, #52]	; 0x34
   440f0:	ldr	r1, [r1]
   440f4:	mov	r2, #0
   440f8:	bl	1a68 <fseek@plt>
   440fc:	ldr	r3, [r7, #8]
   44100:	mov	r6, #1
   44104:	cmp	r3, #9
   44108:	bhi	442dc <Mat_VarReadData4+0x210>
   4410c:	mov	r0, #1
   44110:	mov	r1, #700	; 0x2bc
   44114:	tst	r1, r0, lsl r3
   44118:	beq	442dc <Mat_VarReadData4+0x210>
   4411c:	ldr	r9, [fp, #12]
   44120:	ldr	sl, [fp, #8]
   44124:	ldr	r0, [r7, #4]
   44128:	cmp	r0, #2
   4412c:	bne	44208 <Mat_VarReadData4+0x13c>
   44130:	ldr	r0, [r5]
   44134:	ldr	r1, [sl]
   44138:	ldr	r2, [r9]
   4413c:	sub	r2, r2, #1
   44140:	mla	r0, r2, r1, r0
   44144:	add	r1, r0, #1
   44148:	ldr	r0, [r7, #32]
   4414c:	ldr	r2, [r0]
   44150:	mov	r6, #1
   44154:	cmp	r1, r2
   44158:	bhi	44184 <Mat_VarReadData4+0xb8>
   4415c:	ldr	r1, [r5, #4]
   44160:	ldr	r2, [sl, #4]
   44164:	ldr	r6, [r9, #4]
   44168:	sub	r6, r6, #1
   4416c:	mla	r1, r6, r2, r1
   44170:	add	r1, r1, #1
   44174:	ldr	r2, [r0, #4]
   44178:	mov	r6, #0
   4417c:	cmp	r1, r2
   44180:	movwhi	r6, #1
   44184:	ldr	r1, [r7, #20]
   44188:	cmp	r1, #0
   4418c:	beq	442a0 <Mat_VarReadData4+0x1d4>
   44190:	mov	r0, r3
   44194:	bl	193c <Mat_SizeOf@plt>
   44198:	str	r0, [sp, #24]
   4419c:	add	r1, sp, #24
   441a0:	mov	r0, r7
   441a4:	bl	4479c <SafeMulDims>
   441a8:	ldr	r1, [r8]
   441ac:	ldr	r3, [r7, #8]
   441b0:	ldr	r2, [r7, #16]
   441b4:	ldr	r0, [r7, #32]
   441b8:	stm	sp, {r0, r5, sl}
   441bc:	str	r9, [sp, #12]
   441c0:	mov	r0, r4
   441c4:	bl	1cd18 <ReadDataSlab2>
   441c8:	ldr	r0, [r7, #52]	; 0x34
   441cc:	ldr	r0, [r0]
   441d0:	ldr	r1, [sp, #24]
   441d4:	add	r1, r1, r0
   441d8:	ldr	r0, [r4]
   441dc:	mov	r2, #0
   441e0:	bl	1a68 <fseek@plt>
   441e4:	ldr	r1, [r8, #4]
   441e8:	ldr	r3, [r7, #8]
   441ec:	ldr	r2, [r7, #16]
   441f0:	ldr	r0, [r7, #32]
   441f4:	stm	sp, {r0, r5, sl}
   441f8:	str	r9, [sp, #12]
   441fc:	mov	r0, r4
   44200:	bl	1cd18 <ReadDataSlab2>
   44204:	b	442dc <Mat_VarReadData4+0x210>
   44208:	ldr	r1, [r7, #20]
   4420c:	cmp	r1, #0
   44210:	beq	442bc <Mat_VarReadData4+0x1f0>
   44214:	mov	r0, r3
   44218:	bl	193c <Mat_SizeOf@plt>
   4421c:	str	r0, [sp, #20]
   44220:	add	r1, sp, #20
   44224:	mov	r0, r7
   44228:	bl	4479c <SafeMulDims>
   4422c:	ldr	r1, [r8]
   44230:	ldmib	r7, {r0, r3}
   44234:	ldr	r2, [r7, #16]
   44238:	ldr	r6, [r7, #32]
   4423c:	stm	sp, {r0, r6}
   44240:	str	r5, [sp, #8]
   44244:	str	sl, [sp, #12]
   44248:	str	r9, [sp, #16]
   4424c:	mov	r0, r4
   44250:	bl	15058 <ReadDataSlabN>
   44254:	ldr	r0, [r7, #52]	; 0x34
   44258:	ldr	r0, [r0]
   4425c:	ldr	r1, [sp, #20]
   44260:	add	r1, r1, r0
   44264:	ldr	r0, [r4]
   44268:	mov	r6, #0
   4426c:	mov	r2, #0
   44270:	bl	1a68 <fseek@plt>
   44274:	ldr	r1, [r8, #4]
   44278:	ldmib	r7, {r0, r3}
   4427c:	ldr	r2, [r7, #16]
   44280:	ldr	r7, [r7, #32]
   44284:	stm	sp, {r0, r7}
   44288:	str	r5, [sp, #8]
   4428c:	str	sl, [sp, #12]
   44290:	str	r9, [sp, #16]
   44294:	mov	r0, r4
   44298:	bl	15058 <ReadDataSlabN>
   4429c:	b	442dc <Mat_VarReadData4+0x210>
   442a0:	ldr	r2, [r7, #16]
   442a4:	stm	sp, {r0, r5, sl}
   442a8:	str	r9, [sp, #12]
   442ac:	mov	r0, r4
   442b0:	mov	r1, r8
   442b4:	bl	1cd18 <ReadDataSlab2>
   442b8:	b	442dc <Mat_VarReadData4+0x210>
   442bc:	ldr	r2, [r7, #16]
   442c0:	ldr	r1, [r7, #32]
   442c4:	stm	sp, {r0, r1, r5, sl}
   442c8:	str	r9, [sp, #16]
   442cc:	mov	r0, r4
   442d0:	mov	r1, r8
   442d4:	bl	15058 <ReadDataSlabN>
   442d8:	mov	r6, #0
   442dc:	mov	r0, r6
   442e0:	sub	sp, fp, #28
   442e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000442e8 <Mat_VarReadDataLinear4>:
   442e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   442ec:	add	fp, sp, #28
   442f0:	sub	sp, sp, #20
   442f4:	mov	sl, r3
   442f8:	mov	r8, r2
   442fc:	mov	r4, r1
   44300:	mov	r5, r0
   44304:	mov	r7, #1
   44308:	str	r7, [sp, #16]
   4430c:	add	r1, sp, #16
   44310:	mov	r0, r4
   44314:	bl	4479c <SafeMulDims>
   44318:	str	r0, [sp, #12]
   4431c:	ldr	r0, [r5]
   44320:	ldr	r1, [r4, #52]	; 0x34
   44324:	ldr	r1, [r1]
   44328:	mov	r2, #0
   4432c:	bl	1a68 <fseek@plt>
   44330:	ldr	r0, [r4, #8]
   44334:	bl	193c <Mat_SizeOf@plt>
   44338:	mov	r6, r0
   4433c:	str	r0, [r4, #12]
   44340:	ldr	ip, [fp, #12]
   44344:	sub	r0, ip, #1
   44348:	ldr	lr, [fp, #8]
   4434c:	mla	r0, r0, lr, sl
   44350:	add	r0, r0, #1
   44354:	ldr	r9, [sp, #16]
   44358:	cmp	r0, r9
   4435c:	bhi	443e8 <Mat_VarReadDataLinear4+0x100>
   44360:	ldr	r0, [r4, #20]
   44364:	cmp	r0, #0
   44368:	beq	443c8 <Mat_VarReadDataLinear4+0xe0>
   4436c:	ldr	r3, [r4, #8]
   44370:	ldr	r2, [r4, #16]
   44374:	ldr	r1, [r8]
   44378:	stm	sp, {sl, lr}
   4437c:	str	ip, [sp, #8]
   44380:	mov	r0, r5
   44384:	mov	r7, lr
   44388:	bl	1c848 <ReadDataSlab1>
   4438c:	ldr	r0, [r4, #52]	; 0x34
   44390:	ldr	r0, [r0]
   44394:	mla	r1, r9, r6, r0
   44398:	ldr	r0, [r5]
   4439c:	mov	r2, #0
   443a0:	bl	1a68 <fseek@plt>
   443a4:	ldr	r1, [r8, #4]
   443a8:	ldr	r3, [r4, #8]
   443ac:	ldr	r2, [r4, #16]
   443b0:	str	sl, [sp]
   443b4:	str	r7, [sp, #4]
   443b8:	ldr	r0, [fp, #12]
   443bc:	str	r0, [sp, #8]
   443c0:	mov	r0, r5
   443c4:	b	443e0 <Mat_VarReadDataLinear4+0xf8>
   443c8:	ldr	r3, [r4, #8]
   443cc:	ldr	r2, [r4, #16]
   443d0:	stm	sp, {sl, lr}
   443d4:	str	ip, [sp, #8]
   443d8:	mov	r0, r5
   443dc:	mov	r1, r8
   443e0:	bl	1c848 <ReadDataSlab1>
   443e4:	ldr	r7, [sp, #12]
   443e8:	mov	r0, r7
   443ec:	sub	sp, fp, #28
   443f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   443f4:	nop	{0}

000443f8 <Mat_VarReadNextInfo4>:
   443f8:	push	{r4, r5, r6, sl, fp, lr}
   443fc:	add	fp, sp, #16
   44400:	sub	sp, sp, #8
   44404:	cmp	r0, #0
   44408:	beq	446c4 <Mat_VarReadNextInfo4+0x2cc>
   4440c:	mov	r5, r0
   44410:	ldr	r0, [r0]
   44414:	cmp	r0, #0
   44418:	beq	446c4 <Mat_VarReadNextInfo4+0x2cc>
   4441c:	bl	18b8 <Mat_VarCalloc@plt>
   44420:	cmp	r0, #0
   44424:	beq	446c4 <Mat_VarReadNextInfo4+0x2cc>
   44428:	mov	r4, r0
   4442c:	ldr	r3, [r5]
   44430:	add	r0, sp, #4
   44434:	mov	r1, #4
   44438:	mov	r2, #1
   4443c:	bl	18d0 <fread@plt>
   44440:	cmp	r0, #0
   44444:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   44448:	ldr	r0, [sp, #4]
   4444c:	movw	r6, #4053	; 0xfd5
   44450:	cmp	r0, r6
   44454:	bcc	44468 <Mat_VarReadNextInfo4+0x70>
   44458:	add	r0, sp, #4
   4445c:	bl	1c28 <Mat_int32Swap>
   44460:	cmp	r0, r6
   44464:	bge	446bc <Mat_VarReadNextInfo4+0x2c4>
   44468:	ldr	r1, [sp, #4]
   4446c:	vldr	d16, [pc, #636]	; 446f0 <Mat_VarReadNextInfo4+0x2f8>
   44470:	vmov	s0, r1
   44474:	vcvt.f64.s32	d17, s0
   44478:	vdiv.f64	d16, d17, d16
   4447c:	vcvtm.s32.f64	s0, d16
   44480:	vldr	d16, [pc, #624]	; 446f8 <Mat_VarReadNextInfo4+0x300>
   44484:	vmov	r0, s0
   44488:	movw	r2, #64536	; 0xfc18
   4448c:	movt	r2, #65535	; 0xffff
   44490:	mla	r1, r0, r2, r1
   44494:	vmov	s0, r1
   44498:	vcvt.f64.s32	d17, s0
   4449c:	vdiv.f64	d16, d17, d16
   444a0:	vcvtm.s32.f64	s0, d16
   444a4:	vmov	r2, s0
   444a8:	mvn	r3, #99	; 0x63
   444ac:	mla	r3, r2, r3, r1
   444b0:	vmov.f64	d16, #36	; 0x41200000  10.0
   444b4:	vmov	s0, r3
   444b8:	vcvt.f64.s32	d17, s0
   444bc:	vdiv.f64	d16, d17, d16
   444c0:	vcvtm.s32.f64	s0, d16
   444c4:	vmov	r1, s0
   444c8:	add	r6, r1, r1, lsl #2
   444cc:	rsb	r6, r6, #0
   444d0:	add	r3, r3, r6, lsl #1
   444d4:	vmov	s0, r3
   444d8:	vcvt.f64.s32	d16, s0
   444dc:	vcvtm.s32.f64	s0, d16
   444e0:	str	r3, [sp, #4]
   444e4:	cmp	r0, #2
   444e8:	bcs	446bc <Mat_VarReadNextInfo4+0x2c4>
   444ec:	str	r0, [r5, #20]
   444f0:	cmp	r2, #0
   444f4:	bne	446bc <Mat_VarReadNextInfo4+0x2c4>
   444f8:	cmp	r1, #6
   444fc:	bcs	446bc <Mat_VarReadNextInfo4+0x2c4>
   44500:	vmov	r0, s0
   44504:	ldr	r2, [pc, #500]	; 44700 <Mat_VarReadNextInfo4+0x308>
   44508:	add	r2, pc, r2
   4450c:	ldr	r1, [r2, r1, lsl #2]
   44510:	str	r1, [r4, #8]
   44514:	cmp	r0, #3
   44518:	bcs	446bc <Mat_VarReadNextInfo4+0x2c4>
   4451c:	mov	r1, #2
   44520:	str	r1, [r4, #4]
   44524:	ldr	r1, [pc, #472]	; 44704 <Mat_VarReadNextInfo4+0x30c>
   44528:	add	r1, pc, r1
   4452c:	ldr	r0, [r1, r0, lsl #2]
   44530:	str	r0, [r4, #16]
   44534:	mov	r0, #8
   44538:	bl	18e8 <malloc@plt>
   4453c:	str	r0, [r4, #32]
   44540:	cmp	r0, #0
   44544:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   44548:	ldr	r3, [r5]
   4454c:	add	r0, sp, #4
   44550:	mov	r1, #4
   44554:	mov	r2, #1
   44558:	bl	18d0 <fread@plt>
   4455c:	mov	r6, r0
   44560:	ldr	r0, [r5, #20]
   44564:	cmp	r0, #0
   44568:	beq	44574 <Mat_VarReadNextInfo4+0x17c>
   4456c:	add	r0, sp, #4
   44570:	bl	1c28 <Mat_int32Swap>
   44574:	ldr	r0, [r4, #32]
   44578:	ldr	r1, [sp, #4]
   4457c:	str	r1, [r0]
   44580:	cmp	r6, #0
   44584:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   44588:	ldr	r3, [r5]
   4458c:	add	r0, sp, #4
   44590:	mov	r1, #4
   44594:	mov	r2, #1
   44598:	bl	18d0 <fread@plt>
   4459c:	mov	r6, r0
   445a0:	ldr	r0, [r5, #20]
   445a4:	cmp	r0, #0
   445a8:	beq	445b4 <Mat_VarReadNextInfo4+0x1bc>
   445ac:	add	r0, sp, #4
   445b0:	bl	1c28 <Mat_int32Swap>
   445b4:	ldr	r0, [r4, #32]
   445b8:	ldr	r1, [sp, #4]
   445bc:	str	r1, [r0, #4]
   445c0:	cmp	r6, #0
   445c4:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   445c8:	ldr	r3, [r5]
   445cc:	add	r6, r4, #20
   445d0:	mov	r0, r6
   445d4:	mov	r1, #4
   445d8:	mov	r2, #1
   445dc:	bl	18d0 <fread@plt>
   445e0:	cmp	r0, #0
   445e4:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   445e8:	ldr	r0, [r6]
   445ec:	cmp	r0, #0
   445f0:	beq	44600 <Mat_VarReadNextInfo4+0x208>
   445f4:	ldr	r0, [r4, #16]
   445f8:	cmp	r0, #4
   445fc:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   44600:	ldr	r3, [r5]
   44604:	add	r0, sp, #4
   44608:	mov	r1, #4
   4460c:	mov	r2, #1
   44610:	bl	18d0 <fread@plt>
   44614:	cmp	r0, #0
   44618:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   4461c:	ldr	r0, [r5, #20]
   44620:	cmp	r0, #0
   44624:	beq	44630 <Mat_VarReadNextInfo4+0x238>
   44628:	add	r0, sp, #4
   4462c:	bl	1c28 <Mat_int32Swap>
   44630:	ldr	r6, [sp, #4]
   44634:	cmp	r6, #0
   44638:	ble	446bc <Mat_VarReadNextInfo4+0x2c4>
   4463c:	mov	r0, r6
   44640:	bl	18e8 <malloc@plt>
   44644:	str	r0, [r4, #36]	; 0x24
   44648:	cmp	r0, #0
   4464c:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   44650:	ldr	r3, [r5]
   44654:	mov	r1, #1
   44658:	mov	r2, r6
   4465c:	bl	18d0 <fread@plt>
   44660:	cmp	r0, #0
   44664:	beq	446bc <Mat_VarReadNextInfo4+0x2c4>
   44668:	ldr	r0, [r5]
   4466c:	bl	1858 <ftell@plt>
   44670:	ldr	r1, [r4, #52]	; 0x34
   44674:	str	r0, [r1]
   44678:	cmn	r0, #1
   4467c:	beq	446d4 <Mat_VarReadNextInfo4+0x2dc>
   44680:	ldr	r0, [r4, #8]
   44684:	bl	193c <Mat_SizeOf@plt>
   44688:	str	r0, [sp]
   4468c:	ldr	r1, [r4, #20]
   44690:	cmp	r1, #0
   44694:	lslne	r0, r0, #1
   44698:	strne	r0, [sp]
   4469c:	mov	r1, sp
   446a0:	mov	r0, r4
   446a4:	bl	4479c <SafeMulDims>
   446a8:	ldr	r1, [sp]
   446ac:	ldr	r0, [r5]
   446b0:	mov	r2, #1
   446b4:	bl	1a68 <fseek@plt>
   446b8:	b	446c8 <Mat_VarReadNextInfo4+0x2d0>
   446bc:	mov	r0, r4
   446c0:	bl	1930 <Mat_VarFree@plt>
   446c4:	mov	r4, #0
   446c8:	mov	r0, r4
   446cc:	sub	sp, fp, #16
   446d0:	pop	{r4, r5, r6, sl, fp, pc}
   446d4:	mov	r0, r4
   446d8:	bl	1930 <Mat_VarFree@plt>
   446dc:	ldr	r0, [pc, #36]	; 44708 <Mat_VarReadNextInfo4+0x310>
   446e0:	add	r0, pc, r0
   446e4:	bl	19cc <Mat_Critical@plt>
   446e8:	b	446c4 <Mat_VarReadNextInfo4+0x2cc>
   446ec:	nop	{0}
   446f0:	.word	0x00000000
   446f4:	.word	0x408f4000
   446f8:	.word	0x00000000
   446fc:	.word	0x40590000
   44700:	.word	0x00005320
   44704:	.word	0x00005318
   44708:	.word	0x00004bb8

0004470c <ComplexMalloc>:
   4470c:	push	{r4, r5, r6, sl, fp, lr}
   44710:	add	fp, sp, #16
   44714:	mov	r5, r0
   44718:	mov	r0, #8
   4471c:	bl	18e8 <malloc@plt>
   44720:	mov	r4, r0
   44724:	cmp	r0, #0
   44728:	beq	44758 <ComplexMalloc+0x4c>
   4472c:	mov	r0, r5
   44730:	bl	18e8 <malloc@plt>
   44734:	str	r0, [r4]
   44738:	cmp	r0, #0
   4473c:	beq	44768 <ComplexMalloc+0x5c>
   44740:	mov	r6, r0
   44744:	mov	r0, r5
   44748:	bl	18e8 <malloc@plt>
   4474c:	str	r0, [r4, #4]
   44750:	cmp	r0, #0
   44754:	beq	44760 <ComplexMalloc+0x54>
   44758:	mov	r0, r4
   4475c:	pop	{r4, r5, r6, sl, fp, pc}
   44760:	mov	r0, r6
   44764:	bl	181c <free@plt>
   44768:	mov	r0, r4
   4476c:	bl	181c <free@plt>
   44770:	mov	r4, #0
   44774:	mov	r0, r4
   44778:	pop	{r4, r5, r6, sl, fp, pc}

0004477c <ClassType2DataType>:
   4477c:	sub	r0, r0, #1
   44780:	cmp	r0, #14
   44784:	movhi	r0, #0
   44788:	ldrls	r1, [pc, #8]	; 44798 <ClassType2DataType+0x1c>
   4478c:	addls	r1, pc, r1
   44790:	ldrls	r0, [r1, r0, lsl #2]
   44794:	bx	lr
   44798:	.word	0x000057ec

0004479c <SafeMulDims>:
   4479c:	push	{r4, r5, r6, sl, fp, lr}
   447a0:	add	fp, sp, #16
   447a4:	mov	r5, r0
   447a8:	ldr	r0, [r0, #4]
   447ac:	cmp	r0, #1
   447b0:	movlt	r0, #0
   447b4:	poplt	{r4, r5, r6, sl, fp, pc}
   447b8:	mov	r4, r1
   447bc:	mov	r6, #0
   447c0:	b	447d8 <SafeMulDims+0x3c>
   447c4:	add	r6, r6, #1
   447c8:	ldr	r0, [r5, #4]
   447cc:	cmp	r6, r0
   447d0:	movge	r0, #0
   447d4:	popge	{r4, r5, r6, sl, fp, pc}
   447d8:	ldr	r0, [r5, #32]
   447dc:	ldr	r2, [r0, r6, lsl #2]
   447e0:	ldr	r1, [r4]
   447e4:	mov	r0, r4
   447e8:	bl	44804 <psnip_safe_size_mul>
   447ec:	cmp	r0, #0
   447f0:	bne	447c4 <SafeMulDims+0x28>
   447f4:	mov	r0, #0
   447f8:	str	r0, [r4]
   447fc:	mov	r0, #1
   44800:	pop	{r4, r5, r6, sl, fp, pc}

00044804 <psnip_safe_size_mul>:
   44804:	umull	r1, r2, r1, r2
   44808:	str	r1, [r0]
   4480c:	cmp	r2, #0
   44810:	movwne	r2, #1
   44814:	eor	r0, r2, #1
   44818:	bx	lr

0004481c <SafeMul>:
   4481c:	push	{r4, sl, fp, lr}
   44820:	add	fp, sp, #8
   44824:	mov	r4, r0
   44828:	bl	44804 <psnip_safe_size_mul>
   4482c:	mov	r1, r0
   44830:	mov	r0, #0
   44834:	cmp	r1, #0
   44838:	moveq	r0, #0
   4483c:	streq	r0, [r4]
   44840:	moveq	r0, #1
   44844:	pop	{r4, sl, fp, pc}

00044848 <Mat_GetLibraryVersion>:
   44848:	cmp	r0, #0
   4484c:	movne	r3, #1
   44850:	strne	r3, [r0]
   44854:	cmp	r1, #0
   44858:	movne	r0, #5
   4485c:	strne	r0, [r1]
   44860:	cmp	r2, #0
   44864:	movne	r0, #15
   44868:	strne	r0, [r2]
   4486c:	bx	lr

00044870 <Mat_CreateVer>:
   44870:	cmp	r2, #256	; 0x100
   44874:	beq	44888 <Mat_CreateVer+0x18>
   44878:	cmp	r2, #16
   4487c:	movne	r0, #0
   44880:	bxne	lr
   44884:	b	431f0 <Mat_Create4>
   44888:	b	1fd40 <Mat_Create5>

0004488c <Mat_Open>:
   4488c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   44890:	add	fp, sp, #24
   44894:	sub	sp, sp, #8
   44898:	mov	r9, r1
   4489c:	mov	r8, r0
   448a0:	tst	r1, #1
   448a4:	bne	448c8 <Mat_Open+0x3c>
   448a8:	ldr	r1, [pc, #792]	; 44bc8 <Mat_Open+0x33c>
   448ac:	add	r1, pc, r1
   448b0:	mov	r0, r8
   448b4:	bl	17f8 <fopen@plt>
   448b8:	mov	r7, r0
   448bc:	cmp	r0, #0
   448c0:	bne	448e4 <Mat_Open+0x58>
   448c4:	b	44b88 <Mat_Open+0x2fc>
   448c8:	ldr	r1, [pc, #768]	; 44bd0 <Mat_Open+0x344>
   448cc:	add	r1, pc, r1
   448d0:	mov	r0, r8
   448d4:	bl	17f8 <fopen@plt>
   448d8:	mov	r7, r0
   448dc:	cmp	r0, #0
   448e0:	beq	449fc <Mat_Open+0x170>
   448e4:	mov	r0, #44	; 0x2c
   448e8:	bl	18e8 <malloc@plt>
   448ec:	cmp	r0, #0
   448f0:	beq	449e4 <Mat_Open+0x158>
   448f4:	mov	r5, r0
   448f8:	str	r7, [r0]
   448fc:	mov	r0, #128	; 0x80
   44900:	mov	r1, #1
   44904:	bl	17b0 <calloc@plt>
   44908:	str	r0, [r5, #4]
   4490c:	cmp	r0, #0
   44910:	beq	44a14 <Mat_Open+0x188>
   44914:	mov	r4, r0
   44918:	mov	r0, #8
   4491c:	mov	r1, #1
   44920:	bl	17b0 <calloc@plt>
   44924:	str	r0, [r5, #8]
   44928:	cmp	r0, #0
   4492c:	beq	44a34 <Mat_Open+0x1a8>
   44930:	mov	r6, #0
   44934:	str	r6, [r5, #12]
   44938:	str	r6, [r5, #16]
   4493c:	str	r6, [r5, #20]
   44940:	str	r6, [r5, #36]	; 0x24
   44944:	str	r6, [r5, #40]	; 0x28
   44948:	mov	r0, r4
   4494c:	mov	r1, #1
   44950:	mov	r2, #116	; 0x74
   44954:	mov	r3, r7
   44958:	bl	18d0 <fread@plt>
   4495c:	mov	r4, r0
   44960:	ldr	r0, [r5, #4]
   44964:	strb	r6, [r0, #116]	; 0x74
   44968:	ldr	r0, [r5, #8]
   4496c:	mov	r1, #1
   44970:	mov	r2, #8
   44974:	mov	r3, r7
   44978:	bl	18d0 <fread@plt>
   4497c:	add	r4, r0, r4
   44980:	add	r0, sp, #4
   44984:	mov	r1, #2
   44988:	mov	r2, #1
   4498c:	mov	r3, r7
   44990:	bl	18d0 <fread@plt>
   44994:	add	r4, r4, r0, lsl #1
   44998:	add	r0, sp, #6
   4499c:	mov	r1, #1
   449a0:	mov	r2, #2
   449a4:	mov	r3, r7
   449a8:	bl	18d0 <fread@plt>
   449ac:	add	r4, r4, r0
   449b0:	cmp	r4, #128	; 0x80
   449b4:	bne	44aac <Mat_Open+0x220>
   449b8:	mvn	r0, #0
   449bc:	str	r0, [r5, #20]
   449c0:	ldrh	r0, [sp, #6]
   449c4:	movw	r1, #18765	; 0x494d
   449c8:	cmp	r0, r1
   449cc:	beq	44a5c <Mat_Open+0x1d0>
   449d0:	movw	r1, #19785	; 0x4d49
   449d4:	cmp	r0, r1
   449d8:	moveq	r0, #0
   449dc:	streq	r0, [r5, #20]
   449e0:	b	44a6c <Mat_Open+0x1e0>
   449e4:	mov	r0, r7
   449e8:	bl	19e4 <fclose@plt>
   449ec:	ldr	r0, [pc, #472]	; 44bcc <Mat_Open+0x340>
   449f0:	add	r0, pc, r0
   449f4:	bl	19cc <Mat_Critical@plt>
   449f8:	b	44b88 <Mat_Open+0x2fc>
   449fc:	bic	r2, r9, #1
   44a00:	mov	r0, r8
   44a04:	mov	r1, #0
   44a08:	bl	19fc <Mat_CreateVer@plt>
   44a0c:	mov	r5, r0
   44a10:	b	44b8c <Mat_Open+0x300>
   44a14:	mov	r0, r5
   44a18:	bl	181c <free@plt>
   44a1c:	mov	r0, r7
   44a20:	bl	19e4 <fclose@plt>
   44a24:	ldr	r0, [pc, #424]	; 44bd4 <Mat_Open+0x348>
   44a28:	add	r0, pc, r0
   44a2c:	bl	19cc <Mat_Critical@plt>
   44a30:	b	44b88 <Mat_Open+0x2fc>
   44a34:	mov	r0, r4
   44a38:	bl	181c <free@plt>
   44a3c:	mov	r0, r5
   44a40:	bl	181c <free@plt>
   44a44:	mov	r0, r7
   44a48:	bl	19e4 <fclose@plt>
   44a4c:	ldr	r0, [pc, #388]	; 44bd8 <Mat_Open+0x34c>
   44a50:	add	r0, pc, r0
   44a54:	bl	19cc <Mat_Critical@plt>
   44a58:	b	44b88 <Mat_Open+0x2fc>
   44a5c:	mov	r0, #1
   44a60:	str	r0, [r5, #20]
   44a64:	add	r0, sp, #4
   44a68:	bl	1c50 <Mat_int16Swap>
   44a6c:	ldrh	r0, [sp, #4]
   44a70:	sxth	r1, r0
   44a74:	str	r1, [r5, #16]
   44a78:	cmp	r0, #512	; 0x200
   44a7c:	cmpne	r0, #256	; 0x100
   44a80:	bne	44abc <Mat_Open+0x230>
   44a84:	ldr	r0, [r5, #20]
   44a88:	cmn	r0, #1
   44a8c:	beq	44abc <Mat_Open+0x230>
   44a90:	ldr	r0, [r5]
   44a94:	bl	1858 <ftell@plt>
   44a98:	str	r0, [r5, #28]
   44a9c:	cmn	r0, #1
   44aa0:	beq	44b98 <Mat_Open+0x30c>
   44aa4:	mov	r0, #0
   44aa8:	str	r0, [r5, #32]
   44aac:	ldr	r0, [r5, #16]
   44ab0:	cmp	r0, #0
   44ab4:	bne	44b3c <Mat_Open+0x2b0>
   44ab8:	b	44ac4 <Mat_Open+0x238>
   44abc:	mov	r0, #0
   44ac0:	str	r0, [r5, #16]
   44ac4:	ldr	r0, [r5, #4]
   44ac8:	bl	181c <free@plt>
   44acc:	ldr	r0, [r5, #8]
   44ad0:	bl	181c <free@plt>
   44ad4:	mov	r0, #0
   44ad8:	str	r7, [r5]
   44adc:	str	r0, [r5, #4]
   44ae0:	str	r0, [r5, #8]
   44ae4:	mov	r1, #16
   44ae8:	str	r1, [r5, #16]
   44aec:	str	r0, [r5, #20]
   44af0:	str	r9, [r5, #24]
   44af4:	str	r0, [r5, #28]
   44af8:	str	r0, [r5, #32]
   44afc:	mov	r0, r5
   44b00:	bl	199c <Mat_Rewind@plt>
   44b04:	mov	r0, r5
   44b08:	bl	443f8 <Mat_VarReadNextInfo4>
   44b0c:	cmp	r4, #0
   44b10:	beq	44b30 <Mat_Open+0x2a4>
   44b14:	cmp	r0, #0
   44b18:	bne	44b30 <Mat_Open+0x2a4>
   44b1c:	mov	r0, r5
   44b20:	bl	19c0 <Mat_Close@plt>
   44b24:	ldr	r0, [pc, #188]	; 44be8 <Mat_Open+0x35c>
   44b28:	add	r0, pc, r0
   44b2c:	b	44b80 <Mat_Open+0x2f4>
   44b30:	bl	1930 <Mat_VarFree@plt>
   44b34:	mov	r0, r5
   44b38:	bl	199c <Mat_Rewind@plt>
   44b3c:	ldr	r0, [pc, #156]	; 44be0 <Mat_Open+0x354>
   44b40:	add	r0, pc, r0
   44b44:	mov	r1, r8
   44b48:	bl	1de4 <strdup_printf>
   44b4c:	str	r0, [r5, #12]
   44b50:	str	r9, [r5, #24]
   44b54:	ldr	r0, [r5, #16]
   44b58:	cmp	r0, #512	; 0x200
   44b5c:	bne	44b8c <Mat_Open+0x300>
   44b60:	ldr	r0, [r5]
   44b64:	bl	19e4 <fclose@plt>
   44b68:	mov	r0, #0
   44b6c:	str	r0, [r5]
   44b70:	mov	r0, r5
   44b74:	bl	19c0 <Mat_Close@plt>
   44b78:	ldr	r0, [pc, #100]	; 44be4 <Mat_Open+0x358>
   44b7c:	add	r0, pc, r0
   44b80:	mov	r1, r8
   44b84:	bl	19cc <Mat_Critical@plt>
   44b88:	mov	r5, #0
   44b8c:	mov	r0, r5
   44b90:	sub	sp, fp, #24
   44b94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   44b98:	ldr	r0, [r5, #4]
   44b9c:	bl	181c <free@plt>
   44ba0:	ldr	r0, [r5, #8]
   44ba4:	bl	181c <free@plt>
   44ba8:	mov	r0, r5
   44bac:	bl	181c <free@plt>
   44bb0:	mov	r0, r7
   44bb4:	bl	19e4 <fclose@plt>
   44bb8:	ldr	r0, [pc, #28]	; 44bdc <Mat_Open+0x350>
   44bbc:	add	r0, pc, r0
   44bc0:	bl	19cc <Mat_Critical@plt>
   44bc4:	b	44b88 <Mat_Open+0x2fc>
   44bc8:	.word	0x00004fa0
   44bcc:	.word	0x00004cf8
   44bd0:	.word	0x00004f83
   44bd4:	.word	0x00004e2b
   44bd8:	.word	0x00004e34
   44bdc:	.word	0x000046dc
   44be0:	.word	0x000050a3
   44be4:	.word	0x00004d6a
   44be8:	.word	0x00004d94

00044bec <Mat_Rewind>:
   44bec:	push	{r4, sl, fp, lr}
   44bf0:	add	fp, sp, #8
   44bf4:	ldr	r1, [r0, #16]
   44bf8:	cmp	r1, #16
   44bfc:	beq	44c24 <Mat_Rewind+0x38>
   44c00:	cmp	r1, #512	; 0x200
   44c04:	beq	44c40 <Mat_Rewind+0x54>
   44c08:	mvn	r4, #0
   44c0c:	cmp	r1, #256	; 0x100
   44c10:	bne	44c38 <Mat_Rewind+0x4c>
   44c14:	ldr	r0, [r0]
   44c18:	mov	r4, #0
   44c1c:	mov	r1, #128	; 0x80
   44c20:	b	44c30 <Mat_Rewind+0x44>
   44c24:	ldr	r0, [r0]
   44c28:	mov	r4, #0
   44c2c:	mov	r1, #0
   44c30:	mov	r2, #0
   44c34:	bl	1a68 <fseek@plt>
   44c38:	mov	r0, r4
   44c3c:	pop	{r4, sl, fp, pc}
   44c40:	mov	r4, #0
   44c44:	str	r4, [r0, #32]
   44c48:	mov	r0, r4
   44c4c:	pop	{r4, sl, fp, pc}

00044c50 <Mat_Close>:
   44c50:	cmp	r0, #0
   44c54:	beq	44cf8 <Mat_Close+0xa8>
   44c58:	push	{r4, r5, fp, lr}
   44c5c:	add	fp, sp, #8
   44c60:	mov	r4, r0
   44c64:	ldr	r0, [r0]
   44c68:	cmp	r0, #0
   44c6c:	beq	44c74 <Mat_Close+0x24>
   44c70:	bl	19e4 <fclose@plt>
   44c74:	ldr	r0, [r4, #4]
   44c78:	cmp	r0, #0
   44c7c:	beq	44c84 <Mat_Close+0x34>
   44c80:	bl	181c <free@plt>
   44c84:	ldr	r0, [r4, #8]
   44c88:	cmp	r0, #0
   44c8c:	beq	44c94 <Mat_Close+0x44>
   44c90:	bl	181c <free@plt>
   44c94:	ldr	r0, [r4, #12]
   44c98:	cmp	r0, #0
   44c9c:	beq	44ca4 <Mat_Close+0x54>
   44ca0:	bl	181c <free@plt>
   44ca4:	ldr	r0, [r4, #40]	; 0x28
   44ca8:	cmp	r0, #0
   44cac:	beq	44cec <Mat_Close+0x9c>
   44cb0:	ldr	r1, [r4, #36]	; 0x24
   44cb4:	ldr	r0, [r4, #40]	; 0x28
   44cb8:	cmp	r1, #0
   44cbc:	beq	44ce8 <Mat_Close+0x98>
   44cc0:	mov	r5, #0
   44cc4:	ldr	r0, [r0, r5, lsl #2]
   44cc8:	cmp	r0, #0
   44ccc:	beq	44cd4 <Mat_Close+0x84>
   44cd0:	bl	181c <free@plt>
   44cd4:	add	r5, r5, #1
   44cd8:	ldr	r1, [r4, #36]	; 0x24
   44cdc:	ldr	r0, [r4, #40]	; 0x28
   44ce0:	cmp	r5, r1
   44ce4:	bcc	44cc4 <Mat_Close+0x74>
   44ce8:	bl	181c <free@plt>
   44cec:	mov	r0, r4
   44cf0:	bl	181c <free@plt>
   44cf4:	pop	{r4, r5, fp, lr}
   44cf8:	mov	r0, #0
   44cfc:	bx	lr

00044d00 <Mat_VarFree>:
   44d00:	push	{r4, r5, r6, r7, fp, lr}
   44d04:	add	fp, sp, #16
   44d08:	sub	sp, sp, #8
   44d0c:	mov	r4, r0
   44d10:	mov	r0, #0
   44d14:	str	r0, [sp, #4]
   44d18:	cmp	r4, #0
   44d1c:	beq	45014 <Mat_VarFree+0x314>
   44d20:	ldr	r0, [r4, #32]
   44d24:	cmp	r0, #0
   44d28:	beq	44d48 <Mat_VarFree+0x48>
   44d2c:	mov	r0, #1
   44d30:	str	r0, [sp, #4]
   44d34:	add	r1, sp, #4
   44d38:	mov	r0, r4
   44d3c:	bl	4479c <SafeMulDims>
   44d40:	ldr	r0, [r4, #32]
   44d44:	bl	181c <free@plt>
   44d48:	ldr	r5, [r4, #40]	; 0x28
   44d4c:	cmp	r5, #0
   44d50:	beq	44de0 <Mat_VarFree+0xe0>
   44d54:	ldr	r0, [r4, #16]
   44d58:	sub	r0, r0, #1
   44d5c:	cmp	r0, #15
   44d60:	bhi	44de0 <Mat_VarFree+0xe0>
   44d64:	add	r1, pc, #4
   44d68:	ldr	r0, [r1, r0, lsl #2]
   44d6c:	add	pc, r1, r0
   44d70:	.word	0x00000118
   44d74:	.word	0x00000150
   44d78:	.word	0x00000070
   44d7c:	.word	0x00000040
   44d80:	.word	0x000001a0
   44d84:	.word	0x00000040
   44d88:	.word	0x00000040
   44d8c:	.word	0x00000040
   44d90:	.word	0x00000040
   44d94:	.word	0x00000040
   44d98:	.word	0x00000040
   44d9c:	.word	0x00000040
   44da0:	.word	0x00000040
   44da4:	.word	0x00000040
   44da8:	.word	0x00000040
   44dac:	.word	0x000001f0
   44db0:	ldr	r0, [r4, #44]	; 0x2c
   44db4:	cmp	r0, #0
   44db8:	bne	44de0 <Mat_VarFree+0xe0>
   44dbc:	ldr	r0, [r4, #20]
   44dc0:	cmp	r0, #0
   44dc4:	beq	44dd8 <Mat_VarFree+0xd8>
   44dc8:	ldr	r0, [r5]
   44dcc:	bl	181c <free@plt>
   44dd0:	ldr	r0, [r5, #4]
   44dd4:	bl	181c <free@plt>
   44dd8:	mov	r0, r5
   44ddc:	bl	181c <free@plt>
   44de0:	ldr	r0, [r4, #52]	; 0x34
   44de4:	cmp	r0, #0
   44de8:	beq	44ffc <Mat_VarFree+0x2fc>
   44dec:	ldr	r1, [r4, #48]	; 0x30
   44df0:	cmp	r1, #1
   44df4:	bne	44f90 <Mat_VarFree+0x290>
   44df8:	ldr	r0, [r0, #12]
   44dfc:	bl	1954 <inflateEnd@plt>
   44e00:	ldr	r0, [r4, #52]	; 0x34
   44e04:	ldr	r0, [r0, #12]
   44e08:	bl	181c <free@plt>
   44e0c:	ldr	r0, [r4, #52]	; 0x34
   44e10:	ldr	r5, [r0, #16]
   44e14:	cmp	r5, #0
   44e18:	beq	44f90 <Mat_VarFree+0x290>
   44e1c:	ldr	r0, [r4, #16]
   44e20:	cmp	r0, #5
   44e24:	bne	44e6c <Mat_VarFree+0x16c>
   44e28:	ldr	r0, [r5, #4]
   44e2c:	cmp	r0, #0
   44e30:	beq	44e38 <Mat_VarFree+0x138>
   44e34:	bl	181c <free@plt>
   44e38:	ldr	r0, [r5, #12]
   44e3c:	cmp	r0, #0
   44e40:	beq	44e48 <Mat_VarFree+0x148>
   44e44:	bl	181c <free@plt>
   44e48:	ldr	r0, [r4, #20]
   44e4c:	cmp	r0, #0
   44e50:	ldrne	r6, [r5, #24]
   44e54:	cmpne	r6, #0
   44e58:	bne	44f70 <Mat_VarFree+0x270>
   44e5c:	ldr	r0, [r5, #24]
   44e60:	cmp	r0, #0
   44e64:	bne	44f84 <Mat_VarFree+0x284>
   44e68:	b	44f88 <Mat_VarFree+0x288>
   44e6c:	ldr	r0, [r4, #20]
   44e70:	cmp	r0, #0
   44e74:	beq	44f88 <Mat_VarFree+0x288>
   44e78:	ldr	r0, [r5]
   44e7c:	bl	181c <free@plt>
   44e80:	ldr	r0, [r5, #4]
   44e84:	b	44f84 <Mat_VarFree+0x284>
   44e88:	ldr	r0, [r4, #44]	; 0x2c
   44e8c:	cmp	r0, #0
   44e90:	bne	44de0 <Mat_VarFree+0xe0>
   44e94:	ldr	r0, [sp, #4]
   44e98:	cmp	r0, #0
   44e9c:	beq	44f08 <Mat_VarFree+0x208>
   44ea0:	mov	r6, #0
   44ea4:	ldr	r7, [sp, #4]
   44ea8:	ldr	r0, [r5, r6, lsl #2]
   44eac:	bl	1930 <Mat_VarFree@plt>
   44eb0:	add	r6, r6, #1
   44eb4:	cmp	r6, r7
   44eb8:	bcc	44ea8 <Mat_VarFree+0x1a8>
   44ebc:	b	44f08 <Mat_VarFree+0x208>
   44ec0:	ldr	r0, [r4, #44]	; 0x2c
   44ec4:	cmp	r0, #0
   44ec8:	bne	44de0 <Mat_VarFree+0xe0>
   44ecc:	ldr	r0, [r4, #52]	; 0x34
   44ed0:	ldr	r2, [r0, #4]
   44ed4:	ldr	r1, [sp, #4]
   44ed8:	mov	r0, sp
   44edc:	bl	4481c <SafeMul>
   44ee0:	ldr	r0, [sp]
   44ee4:	cmp	r0, #0
   44ee8:	beq	44f08 <Mat_VarFree+0x208>
   44eec:	mov	r6, #0
   44ef0:	ldr	r7, [sp]
   44ef4:	ldr	r0, [r5, r6, lsl #2]
   44ef8:	bl	1930 <Mat_VarFree@plt>
   44efc:	add	r6, r6, #1
   44f00:	cmp	r6, r7
   44f04:	bcc	44ef4 <Mat_VarFree+0x1f4>
   44f08:	ldr	r0, [r4, #40]	; 0x28
   44f0c:	b	44ddc <Mat_VarFree+0xdc>
   44f10:	ldr	r0, [r4, #44]	; 0x2c
   44f14:	cmp	r0, #0
   44f18:	bne	44de0 <Mat_VarFree+0xe0>
   44f1c:	ldr	r0, [r5, #4]
   44f20:	cmp	r0, #0
   44f24:	beq	44f2c <Mat_VarFree+0x22c>
   44f28:	bl	181c <free@plt>
   44f2c:	ldr	r0, [r5, #12]
   44f30:	cmp	r0, #0
   44f34:	beq	44f3c <Mat_VarFree+0x23c>
   44f38:	bl	181c <free@plt>
   44f3c:	ldr	r0, [r4, #20]
   44f40:	cmp	r0, #0
   44f44:	ldrne	r6, [r5, #24]
   44f48:	cmpne	r6, #0
   44f4c:	bne	4501c <Mat_VarFree+0x31c>
   44f50:	ldr	r0, [r5, #24]
   44f54:	cmp	r0, #0
   44f58:	bne	44dd4 <Mat_VarFree+0xd4>
   44f5c:	b	44dd8 <Mat_VarFree+0xd8>
   44f60:	ldr	r0, [r4, #44]	; 0x2c
   44f64:	cmp	r0, #0
   44f68:	bne	44de0 <Mat_VarFree+0xe0>
   44f6c:	b	44dd8 <Mat_VarFree+0xd8>
   44f70:	ldr	r0, [r6]
   44f74:	bl	181c <free@plt>
   44f78:	ldr	r0, [r6, #4]
   44f7c:	bl	181c <free@plt>
   44f80:	mov	r0, r6
   44f84:	bl	181c <free@plt>
   44f88:	mov	r0, r5
   44f8c:	bl	181c <free@plt>
   44f90:	ldr	r0, [r4, #52]	; 0x34
   44f94:	ldr	r1, [r0, #8]
   44f98:	cmp	r1, #0
   44f9c:	ldrne	r0, [r0, #4]
   44fa0:	cmpne	r0, #0
   44fa4:	beq	44fec <Mat_VarFree+0x2ec>
   44fa8:	ldr	r0, [r4, #52]	; 0x34
   44fac:	ldr	r1, [r0, #4]
   44fb0:	ldr	r0, [r0, #8]
   44fb4:	cmp	r1, #0
   44fb8:	beq	44fe8 <Mat_VarFree+0x2e8>
   44fbc:	mov	r5, #0
   44fc0:	ldr	r0, [r0, r5, lsl #2]
   44fc4:	cmp	r0, #0
   44fc8:	beq	44fd0 <Mat_VarFree+0x2d0>
   44fcc:	bl	181c <free@plt>
   44fd0:	add	r5, r5, #1
   44fd4:	ldr	r0, [r4, #52]	; 0x34
   44fd8:	ldr	r1, [r0, #4]
   44fdc:	ldr	r0, [r0, #8]
   44fe0:	cmp	r5, r1
   44fe4:	bcc	44fc0 <Mat_VarFree+0x2c0>
   44fe8:	bl	181c <free@plt>
   44fec:	ldr	r0, [r4, #52]	; 0x34
   44ff0:	bl	181c <free@plt>
   44ff4:	mov	r0, #0
   44ff8:	str	r0, [r4, #52]	; 0x34
   44ffc:	ldr	r0, [r4, #36]	; 0x24
   45000:	cmp	r0, #0
   45004:	beq	4500c <Mat_VarFree+0x30c>
   45008:	bl	181c <free@plt>
   4500c:	mov	r0, r4
   45010:	bl	181c <free@plt>
   45014:	sub	sp, fp, #16
   45018:	pop	{r4, r5, r6, r7, fp, pc}
   4501c:	ldr	r0, [r6]
   45020:	bl	181c <free@plt>
   45024:	ldr	r0, [r6, #4]
   45028:	bl	181c <free@plt>
   4502c:	mov	r0, r6
   45030:	b	44dd4 <Mat_VarFree+0xd4>

00045034 <Mat_GetFilename>:
   45034:	cmp	r0, #0
   45038:	ldrne	r0, [r0, #12]
   4503c:	moveq	r0, #0
   45040:	bx	lr

00045044 <Mat_GetHeader>:
   45044:	cmp	r0, #0
   45048:	ldrne	r0, [r0, #4]
   4504c:	moveq	r0, #0
   45050:	bx	lr

00045054 <Mat_GetVersion>:
   45054:	cmp	r0, #0
   45058:	ldrne	r0, [r0, #16]
   4505c:	moveq	r0, #0
   45060:	bx	lr

00045064 <Mat_GetDir>:
   45064:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   45068:	add	fp, sp, #24
   4506c:	cmp	r1, #0
   45070:	moveq	r5, #0
   45074:	moveq	r0, r5
   45078:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   4507c:	mov	r4, r1
   45080:	mov	r5, r0
   45084:	cmp	r0, #0
   45088:	beq	45178 <Mat_GetDir+0x114>
   4508c:	ldr	r1, [r5, #16]
   45090:	ldr	r0, [r5, #40]	; 0x28
   45094:	cmp	r0, #0
   45098:	beq	450dc <Mat_GetDir+0x78>
   4509c:	cmp	r1, #512	; 0x200
   450a0:	bne	452d8 <Mat_GetDir+0x274>
   450a4:	mov	r1, #0
   450a8:	str	r1, [r4]
   450ac:	ldr	r2, [r5, #36]	; 0x24
   450b0:	cmp	r2, #0
   450b4:	beq	452e0 <Mat_GetDir+0x27c>
   450b8:	ldr	r2, [r0, r1, lsl #2]
   450bc:	cmp	r2, #0
   450c0:	beq	452e0 <Mat_GetDir+0x27c>
   450c4:	add	r1, r1, #1
   450c8:	str	r1, [r4]
   450cc:	ldr	r2, [r5, #36]	; 0x24
   450d0:	cmp	r1, r2
   450d4:	bcc	450b8 <Mat_GetDir+0x54>
   450d8:	b	452e0 <Mat_GetDir+0x27c>
   450dc:	cmp	r1, #512	; 0x200
   450e0:	bne	45188 <Mat_GetDir+0x124>
   450e4:	ldr	r0, [r5, #36]	; 0x24
   450e8:	cmp	r0, #0
   450ec:	beq	45178 <Mat_GetDir+0x114>
   450f0:	ldr	r8, [r5, #32]
   450f4:	mov	r1, #4
   450f8:	bl	17b0 <calloc@plt>
   450fc:	str	r0, [r5, #40]	; 0x28
   45100:	cmp	r0, #0
   45104:	beq	4527c <Mat_GetDir+0x218>
   45108:	mov	r6, #0
   4510c:	str	r6, [r5, #32]
   45110:	ldr	r0, [r5, #36]	; 0x24
   45114:	cmp	r0, #0
   45118:	beq	452b0 <Mat_GetDir+0x24c>
   4511c:	mov	r6, #0
   45120:	ldr	r9, [pc, #456]	; 452f0 <Mat_GetDir+0x28c>
   45124:	add	r9, pc, r9
   45128:	mov	r0, r5
   4512c:	bl	1a8c <Mat_VarReadNextInfo@plt>
   45130:	cmp	r0, #0
   45134:	beq	452a4 <Mat_GetDir+0x240>
   45138:	mov	r7, r0
   4513c:	ldr	r1, [r0, #36]	; 0x24
   45140:	cmp	r1, #0
   45144:	beq	4515c <Mat_GetDir+0xf8>
   45148:	mov	r0, r9
   4514c:	bl	1de4 <strdup_printf>
   45150:	ldr	r1, [r5, #40]	; 0x28
   45154:	str	r0, [r1, r6, lsl #2]
   45158:	add	r6, r6, #1
   4515c:	mov	r0, r7
   45160:	bl	1930 <Mat_VarFree@plt>
   45164:	ldr	r0, [r5, #32]
   45168:	ldr	r1, [r5, #36]	; 0x24
   4516c:	cmp	r0, r1
   45170:	bcc	45128 <Mat_GetDir+0xc4>
   45174:	b	452b0 <Mat_GetDir+0x24c>
   45178:	mov	r5, #0
   4517c:	str	r5, [r4]
   45180:	mov	r0, r5
   45184:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45188:	ldr	r0, [r5]
   4518c:	bl	1858 <ftell@plt>
   45190:	cmn	r0, #1
   45194:	beq	45268 <Mat_GetDir+0x204>
   45198:	mov	r8, r0
   4519c:	ldr	r0, [r5]
   451a0:	ldr	r1, [r5, #28]
   451a4:	mov	r6, #0
   451a8:	mov	r2, #0
   451ac:	bl	1a68 <fseek@plt>
   451b0:	str	r6, [r5, #36]	; 0x24
   451b4:	mov	r9, #4
   451b8:	ldr	r7, [pc, #312]	; 452f8 <Mat_GetDir+0x294>
   451bc:	add	r7, pc, r7
   451c0:	mov	r0, r5
   451c4:	bl	1a8c <Mat_VarReadNextInfo@plt>
   451c8:	cmp	r0, #0
   451cc:	beq	45204 <Mat_GetDir+0x1a0>
   451d0:	mov	r6, r0
   451d4:	ldr	r0, [r0, #36]	; 0x24
   451d8:	cmp	r0, #0
   451dc:	beq	4524c <Mat_GetDir+0x1e8>
   451e0:	ldr	r0, [r5, #40]	; 0x28
   451e4:	cmp	r0, #0
   451e8:	beq	45218 <Mat_GetDir+0x1b4>
   451ec:	ldr	r1, [r5, #36]	; 0x24
   451f0:	add	r1, r9, r1, lsl #2
   451f4:	bl	1888 <realloc@plt>
   451f8:	cmp	r0, #0
   451fc:	bne	45228 <Mat_GetDir+0x1c4>
   45200:	b	45298 <Mat_GetDir+0x234>
   45204:	ldr	r0, [r5]
   45208:	bl	1924 <feof@plt>
   4520c:	cmp	r0, #0
   45210:	bne	45254 <Mat_GetDir+0x1f0>
   45214:	b	452bc <Mat_GetDir+0x258>
   45218:	mov	r0, #4
   4521c:	bl	18e8 <malloc@plt>
   45220:	cmp	r0, #0
   45224:	beq	45298 <Mat_GetDir+0x234>
   45228:	str	r0, [r5, #40]	; 0x28
   4522c:	ldr	r1, [r6, #36]	; 0x24
   45230:	mov	r0, r7
   45234:	bl	1de4 <strdup_printf>
   45238:	ldr	r1, [r5, #36]	; 0x24
   4523c:	ldr	r2, [r5, #40]	; 0x28
   45240:	add	r3, r1, #1
   45244:	str	r3, [r5, #36]	; 0x24
   45248:	str	r0, [r2, r1, lsl #2]
   4524c:	mov	r0, r6
   45250:	bl	1930 <Mat_VarFree@plt>
   45254:	ldr	r0, [r5]
   45258:	bl	1924 <feof@plt>
   4525c:	cmp	r0, #0
   45260:	beq	451c0 <Mat_GetDir+0x15c>
   45264:	b	452c8 <Mat_GetDir+0x264>
   45268:	mov	r5, #0
   4526c:	str	r5, [r4]
   45270:	ldr	r0, [pc, #136]	; 45300 <Mat_GetDir+0x29c>
   45274:	add	r0, pc, r0
   45278:	b	4528c <Mat_GetDir+0x228>
   4527c:	mov	r5, #0
   45280:	str	r5, [r4]
   45284:	ldr	r0, [pc, #96]	; 452ec <Mat_GetDir+0x288>
   45288:	add	r0, pc, r0
   4528c:	bl	19cc <Mat_Critical@plt>
   45290:	mov	r0, r5
   45294:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45298:	ldr	r0, [pc, #100]	; 45304 <Mat_GetDir+0x2a0>
   4529c:	add	r0, pc, r0
   452a0:	b	452c4 <Mat_GetDir+0x260>
   452a4:	ldr	r0, [pc, #72]	; 452f4 <Mat_GetDir+0x290>
   452a8:	add	r0, pc, r0
   452ac:	bl	19cc <Mat_Critical@plt>
   452b0:	str	r8, [r5, #32]
   452b4:	str	r6, [r4]
   452b8:	b	452e0 <Mat_GetDir+0x27c>
   452bc:	ldr	r0, [pc, #56]	; 452fc <Mat_GetDir+0x298>
   452c0:	add	r0, pc, r0
   452c4:	bl	19cc <Mat_Critical@plt>
   452c8:	ldr	r0, [r5]
   452cc:	mov	r1, r8
   452d0:	mov	r2, #0
   452d4:	bl	1a68 <fseek@plt>
   452d8:	ldr	r0, [r5, #36]	; 0x24
   452dc:	str	r0, [r4]
   452e0:	ldr	r5, [r5, #40]	; 0x28
   452e4:	mov	r0, r5
   452e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   452ec:	.word	0x0000469f
   452f0:	.word	0x00004abf
   452f4:	.word	0x0000427c
   452f8:	.word	0x00004a27
   452fc:	.word	0x00004264
   45300:	.word	0x00004024
   45304:	.word	0x0000468b

00045308 <Mat_VarReadNextInfo>:
   45308:	cmp	r0, #0
   4530c:	beq	45328 <Mat_VarReadNextInfo+0x20>
   45310:	ldr	r1, [r0, #16]
   45314:	cmp	r1, #16
   45318:	beq	45330 <Mat_VarReadNextInfo+0x28>
   4531c:	cmp	r1, #256	; 0x100
   45320:	bne	45328 <Mat_VarReadNextInfo+0x20>
   45324:	b	3f92c <Mat_VarReadNextInfo5>
   45328:	mov	r0, #0
   4532c:	bx	lr
   45330:	b	443f8 <Mat_VarReadNextInfo4>

00045334 <Mat_SizeOfClass>:
   45334:	sub	r0, r0, #4
   45338:	cmp	r0, #11
   4533c:	movhi	r0, #0
   45340:	ldrls	r1, [pc, #8]	; 45350 <Mat_SizeOfClass+0x1c>
   45344:	addls	r1, pc, r1
   45348:	ldrls	r0, [r1, r0, lsl #2]
   4534c:	bx	lr
   45350:	.word	0x00004c74

00045354 <Mat_VarCalloc>:
   45354:	push	{r4, r5, r6, sl, fp, lr}
   45358:	add	fp, sp, #16
   4535c:	vpush	{d8-d9}
   45360:	mov	r0, #56	; 0x38
   45364:	bl	18e8 <malloc@plt>
   45368:	mov	r4, r0
   4536c:	cmp	r0, #0
   45370:	beq	453d0 <Mat_VarCalloc+0x7c>
   45374:	mov	r5, #0
   45378:	vmov.i32	q4, #0	; 0x00000000
   4537c:	str	r5, [r4, #48]	; 0x30
   45380:	add	r0, r4, #32
   45384:	vst1.32	{d8-d9}, [r0]
   45388:	add	r0, r4, #16
   4538c:	vst1.32	{d8-d9}, [r0]
   45390:	mov	r0, #52	; 0x34
   45394:	mov	r6, r4
   45398:	vst1.32	{d8-d9}, [r6], r0
   4539c:	mov	r0, #20
   453a0:	bl	18e8 <malloc@plt>
   453a4:	str	r0, [r6]
   453a8:	cmp	r0, #0
   453ac:	beq	453c4 <Mat_VarCalloc+0x70>
   453b0:	str	r5, [r0]
   453b4:	ldr	r0, [r4, #52]	; 0x34
   453b8:	add	r0, r0, #4
   453bc:	vst1.32	{d8-d9}, [r0]
   453c0:	b	453d0 <Mat_VarCalloc+0x7c>
   453c4:	mov	r0, r4
   453c8:	bl	181c <free@plt>
   453cc:	mov	r4, #0
   453d0:	mov	r0, r4
   453d4:	vpop	{d8-d9}
   453d8:	pop	{r4, r5, r6, sl, fp, pc}

000453dc <Mat_VarCreate>:
   453dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   453e0:	add	fp, sp, #28
   453e4:	sub	sp, sp, #4
   453e8:	mov	r7, r0
   453ec:	mov	r0, #1
   453f0:	str	r0, [sp]
   453f4:	mov	r4, #0
   453f8:	ldr	r5, [fp, #8]
   453fc:	cmp	r5, #0
   45400:	beq	45854 <Mat_VarCreate+0x478>
   45404:	mov	r6, r3
   45408:	mov	sl, r2
   4540c:	mov	r8, r1
   45410:	bl	18b8 <Mat_VarCalloc@plt>
   45414:	cmp	r0, #0
   45418:	beq	45854 <Mat_VarCreate+0x478>
   4541c:	ldr	r9, [fp, #16]
   45420:	mov	r4, r0
   45424:	mov	r0, #0
   45428:	str	r0, [r4, #48]	; 0x30
   4542c:	and	r0, r9, #2048	; 0x800
   45430:	and	r1, r9, #1024	; 0x400
   45434:	and	r2, r9, #512	; 0x200
   45438:	add	r3, r4, #20
   4543c:	stm	r3, {r0, r1, r2}
   45440:	cmp	r7, #0
   45444:	beq	4545c <Mat_VarCreate+0x80>
   45448:	ldr	r0, [pc, #1040]	; 45860 <Mat_VarCreate+0x484>
   4544c:	add	r0, pc, r0
   45450:	mov	r1, r7
   45454:	bl	1de4 <strdup_printf>
   45458:	str	r0, [r4, #36]	; 0x24
   4545c:	str	r6, [r4, #4]
   45460:	lsl	r0, r6, #2
   45464:	bl	18e8 <malloc@plt>
   45468:	str	r0, [r4, #32]
   4546c:	cmp	r6, #1
   45470:	blt	454a4 <Mat_VarCreate+0xc8>
   45474:	ldr	r0, [r4, #32]
   45478:	mov	r2, #0
   4547c:	ldr	r1, [sp]
   45480:	ldr	r3, [r5, r2, lsl #2]
   45484:	str	r3, [r0, r2, lsl #2]
   45488:	ldr	r3, [r5, r2, lsl #2]
   4548c:	mul	r1, r1, r3
   45490:	add	r2, r2, #1
   45494:	ldr	r3, [r4, #4]
   45498:	cmp	r2, r3
   4549c:	blt	45480 <Mat_VarCreate+0xa4>
   454a0:	str	r1, [sp]
   454a4:	str	sl, [r4, #8]
   454a8:	str	r8, [r4, #16]
   454ac:	sub	r0, sl, #1
   454b0:	cmp	r0, #21
   454b4:	bhi	455a0 <Mat_VarCreate+0x1c4>
   454b8:	ldr	sl, [fp, #12]
   454bc:	mov	r6, #1
   454c0:	add	r1, pc, #4
   454c4:	ldr	r0, [r1, r0, lsl #2]
   454c8:	add	pc, r1, r0
   454cc:	.word	0x0000017c
   454d0:	.word	0x0000017c
   454d4:	.word	0x000000a8
   454d8:	.word	0x000000a8
   454dc:	.word	0x00000058
   454e0:	.word	0x00000058
   454e4:	.word	0x00000058
   454e8:	.word	0x000000d4
   454ec:	.word	0x000000b8
   454f0:	.word	0x000000d4
   454f4:	.word	0x000000d4
   454f8:	.word	0x000000b8
   454fc:	.word	0x000000b8
   45500:	.word	0x000000d4
   45504:	.word	0x000000d4
   45508:	.word	0x0000017c
   4550c:	.word	0x000000a8
   45510:	.word	0x00000058
   45514:	.word	0x000000d4
   45518:	.word	0x000000d4
   4551c:	.word	0x00000058
   45520:	.word	0x000000f0
   45524:	mov	r6, #4
   45528:	cmp	r8, #5
   4552c:	beq	45650 <Mat_VarCreate+0x274>
   45530:	str	r6, [r4, #12]
   45534:	ldr	r1, [sp]
   45538:	mov	r0, r4
   4553c:	mov	r2, r6
   45540:	bl	4481c <SafeMul>
   45544:	cmp	sl, #0
   45548:	bne	45664 <Mat_VarCreate+0x288>
   4554c:	ldr	r0, [r4, #16]
   45550:	cmp	r0, #1
   45554:	bne	45594 <Mat_VarCreate+0x1b8>
   45558:	ldr	r0, [sp]
   4555c:	cmp	r0, #0
   45560:	beq	45594 <Mat_VarCreate+0x1b8>
   45564:	mov	r1, #4
   45568:	bl	17b0 <calloc@plt>
   4556c:	str	r0, [r4, #40]	; 0x28
   45570:	b	45854 <Mat_VarCreate+0x478>
   45574:	mov	r6, #2
   45578:	cmp	r8, #5
   4557c:	beq	45650 <Mat_VarCreate+0x274>
   45580:	b	45530 <Mat_VarCreate+0x154>
   45584:	mov	r6, #8
   45588:	cmp	r8, #5
   4558c:	beq	45650 <Mat_VarCreate+0x274>
   45590:	b	45530 <Mat_VarCreate+0x154>
   45594:	mov	r0, #0
   45598:	str	r0, [r4, #40]	; 0x28
   4559c:	b	45854 <Mat_VarCreate+0x478>
   455a0:	mov	r0, r4
   455a4:	bl	1930 <Mat_VarFree@plt>
   455a8:	ldr	r0, [pc, #692]	; 45864 <Mat_VarCreate+0x488>
   455ac:	add	r0, pc, r0
   455b0:	bl	19cc <Mat_Critical@plt>
   455b4:	mov	r4, #0
   455b8:	b	45854 <Mat_VarCreate+0x478>
   455bc:	mov	r6, #4
   455c0:	cmp	sl, #0
   455c4:	beq	45648 <Mat_VarCreate+0x26c>
   455c8:	mov	r0, #0
   455cc:	ldr	r1, [sl, r0, lsl #2]
   455d0:	add	r0, r0, #1
   455d4:	cmp	r1, #0
   455d8:	bne	455cc <Mat_VarCreate+0x1f0>
   455dc:	sub	r7, r0, #1
   455e0:	ldr	r8, [sp]
   455e4:	cmp	r8, #0
   455e8:	udivne	r7, r7, r8
   455ec:	ldr	r5, [r4, #52]	; 0x34
   455f0:	str	r7, [r5, #4]
   455f4:	cmp	r7, #0
   455f8:	beq	45644 <Mat_VarCreate+0x268>
   455fc:	mov	r0, r7
   45600:	mov	r1, #4
   45604:	bl	17b0 <calloc@plt>
   45608:	str	r0, [r5, #8]
   4560c:	mov	r5, #0
   45610:	ldr	r0, [sl, r5, lsl #2]
   45614:	ldr	r0, [r0, #36]	; 0x24
   45618:	bl	187c <strdup@plt>
   4561c:	ldr	r1, [r4, #52]	; 0x34
   45620:	ldr	r1, [r1, #8]
   45624:	str	r0, [r1, r5, lsl #2]
   45628:	add	r5, r5, #1
   4562c:	cmp	r7, r5
   45630:	bne	45610 <Mat_VarCreate+0x234>
   45634:	mov	r0, sp
   45638:	mov	r1, r8
   4563c:	mov	r2, r7
   45640:	bl	4481c <SafeMul>
   45644:	ldr	r8, [r4, #16]
   45648:	cmp	r8, #5
   4564c:	bne	45530 <Mat_VarCreate+0x154>
   45650:	mov	r0, #28
   45654:	str	r0, [r4]
   45658:	str	r0, [r4, #12]
   4565c:	cmp	sl, #0
   45660:	beq	4554c <Mat_VarCreate+0x170>
   45664:	tst	r9, #1
   45668:	bne	45770 <Mat_VarCreate+0x394>
   4566c:	ldr	r0, [r4, #16]
   45670:	cmp	r0, #5
   45674:	bne	4577c <Mat_VarCreate+0x3a0>
   45678:	mov	r0, #28
   4567c:	bl	18e8 <malloc@plt>
   45680:	mov	r7, r0
   45684:	cmp	r0, #0
   45688:	beq	45850 <Mat_VarCreate+0x474>
   4568c:	ldr	r0, [sl]
   45690:	str	r0, [r7]
   45694:	ldr	r0, [sl, #8]
   45698:	str	r0, [r7, #8]
   4569c:	ldr	r5, [sl, #16]
   456a0:	ldr	r9, [sl, #20]
   456a4:	str	r5, [r7, #16]
   456a8:	str	r9, [r7, #20]
   456ac:	lsl	r8, r0, #2
   456b0:	mov	r0, r8
   456b4:	bl	18e8 <malloc@plt>
   456b8:	str	r0, [r7, #4]
   456bc:	cmp	r0, #0
   456c0:	beq	456d0 <Mat_VarCreate+0x2f4>
   456c4:	ldr	r1, [sl, #4]
   456c8:	mov	r2, r8
   456cc:	bl	1834 <memcpy@plt>
   456d0:	lsl	r8, r5, #2
   456d4:	mov	r0, r8
   456d8:	bl	18e8 <malloc@plt>
   456dc:	str	r0, [r7, #12]
   456e0:	cmp	r0, #0
   456e4:	beq	456f4 <Mat_VarCreate+0x318>
   456e8:	ldr	r1, [sl, #12]
   456ec:	mov	r2, r8
   456f0:	bl	1834 <memcpy@plt>
   456f4:	ldr	r0, [r4, #20]
   456f8:	cmp	r0, #0
   456fc:	beq	4582c <Mat_VarCreate+0x450>
   45700:	mov	r0, #8
   45704:	bl	18e8 <malloc@plt>
   45708:	str	r0, [r7, #24]
   4570c:	cmp	r0, #0
   45710:	beq	45850 <Mat_VarCreate+0x474>
   45714:	mov	r8, r0
   45718:	mul	r9, r9, r6
   4571c:	ldr	sl, [sl, #24]
   45720:	mov	r0, r9
   45724:	bl	18e8 <malloc@plt>
   45728:	mov	r6, r0
   4572c:	str	r0, [r8]
   45730:	mov	r0, r9
   45734:	bl	18e8 <malloc@plt>
   45738:	mov	r5, r0
   4573c:	str	r0, [r8, #4]
   45740:	cmp	r6, #0
   45744:	beq	45758 <Mat_VarCreate+0x37c>
   45748:	ldr	r1, [sl]
   4574c:	mov	r0, r6
   45750:	mov	r2, r9
   45754:	bl	1834 <memcpy@plt>
   45758:	cmp	r5, #0
   4575c:	beq	45850 <Mat_VarCreate+0x474>
   45760:	ldr	r1, [sl, #4]
   45764:	mov	r0, r5
   45768:	mov	r2, r9
   4576c:	b	4584c <Mat_VarCreate+0x470>
   45770:	mov	r0, #1
   45774:	str	sl, [r4, #40]	; 0x28
   45778:	b	45824 <Mat_VarCreate+0x448>
   4577c:	ldr	r0, [r4, #20]
   45780:	cmp	r0, #0
   45784:	beq	457f4 <Mat_VarCreate+0x418>
   45788:	mov	r0, #8
   4578c:	bl	18e8 <malloc@plt>
   45790:	str	r0, [r4, #40]	; 0x28
   45794:	cmp	r0, #0
   45798:	ldrne	r6, [r4]
   4579c:	cmpne	r6, #0
   457a0:	beq	45820 <Mat_VarCreate+0x444>
   457a4:	mov	r7, r0
   457a8:	mov	r0, r6
   457ac:	bl	18e8 <malloc@plt>
   457b0:	mov	r9, r0
   457b4:	str	r0, [r7]
   457b8:	mov	r0, r6
   457bc:	bl	18e8 <malloc@plt>
   457c0:	mov	r8, r0
   457c4:	str	r0, [r7, #4]
   457c8:	cmp	r9, #0
   457cc:	beq	457e0 <Mat_VarCreate+0x404>
   457d0:	ldr	r1, [sl]
   457d4:	mov	r0, r9
   457d8:	mov	r2, r6
   457dc:	bl	1834 <memcpy@plt>
   457e0:	cmp	r8, #0
   457e4:	beq	45820 <Mat_VarCreate+0x444>
   457e8:	ldr	r1, [sl, #4]
   457ec:	mov	r0, r8
   457f0:	b	45818 <Mat_VarCreate+0x43c>
   457f4:	ldr	r6, [r4]
   457f8:	cmp	r6, #0
   457fc:	beq	45820 <Mat_VarCreate+0x444>
   45800:	mov	r0, r6
   45804:	bl	18e8 <malloc@plt>
   45808:	str	r0, [r4, #40]	; 0x28
   4580c:	cmp	r0, #0
   45810:	beq	45820 <Mat_VarCreate+0x444>
   45814:	mov	r1, sl
   45818:	mov	r2, r6
   4581c:	bl	1834 <memcpy@plt>
   45820:	mov	r0, #0
   45824:	str	r0, [r4, #44]	; 0x2c
   45828:	b	45854 <Mat_VarCreate+0x478>
   4582c:	mul	r6, r9, r6
   45830:	mov	r0, r6
   45834:	bl	18e8 <malloc@plt>
   45838:	str	r0, [r7, #24]
   4583c:	cmp	r0, #0
   45840:	beq	45850 <Mat_VarCreate+0x474>
   45844:	ldr	r1, [sl, #24]
   45848:	mov	r2, r6
   4584c:	bl	1834 <memcpy@plt>
   45850:	str	r7, [r4, #40]	; 0x28
   45854:	mov	r0, r4
   45858:	sub	sp, fp, #28
   4585c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45860:	.word	0x00004797
   45864:	.word	0x000043a6

00045868 <Mat_VarDelete>:
   45868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4586c:	add	fp, sp, #28
   45870:	sub	sp, sp, #12
   45874:	mov	r5, r0
   45878:	mov	r0, #0
   4587c:	strb	r0, [sp, #10]
   45880:	movw	r0, #22616	; 0x5858
   45884:	strh	r0, [sp, #8]
   45888:	movw	r0, #22616	; 0x5858
   4588c:	movt	r0, #22616	; 0x5858
   45890:	str	r0, [sp, #4]
   45894:	mov	r4, #1
   45898:	cmp	r5, #0
   4589c:	movne	r6, r1
   458a0:	cmpne	r1, #0
   458a4:	bne	458b4 <Mat_VarDelete+0x4c>
   458a8:	mov	r0, r4
   458ac:	sub	sp, fp, #28
   458b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   458b4:	add	r0, sp, #4
   458b8:	bl	1900 <mktemp@plt>
   458bc:	cmp	r0, #0
   458c0:	beq	45964 <Mat_VarDelete+0xfc>
   458c4:	mov	r9, r0
   458c8:	ldr	r1, [r5, #4]
   458cc:	ldr	r0, [r5, #16]
   458d0:	cmp	r0, #512	; 0x200
   458d4:	mov	r2, r0
   458d8:	movwne	r2, #256	; 0x100
   458dc:	cmp	r0, #16
   458e0:	moveq	r2, r0
   458e4:	mov	r0, r9
   458e8:	bl	19fc <Mat_CreateVer@plt>
   458ec:	cmp	r0, #0
   458f0:	beq	458a8 <Mat_VarDelete+0x40>
   458f4:	mov	r7, r0
   458f8:	mov	r0, r5
   458fc:	bl	199c <Mat_Rewind@plt>
   45900:	mov	r0, r5
   45904:	bl	17bc <Mat_VarReadNext@plt>
   45908:	cmp	r0, #0
   4590c:	beq	45974 <Mat_VarDelete+0x10c>
   45910:	mov	r4, r0
   45914:	mov	r8, #1
   45918:	ldr	r0, [r4, #36]	; 0x24
   4591c:	mov	r1, r6
   45920:	bl	17c8 <strcmp@plt>
   45924:	cmp	r0, #0
   45928:	beq	45940 <Mat_VarDelete+0xd8>
   4592c:	ldr	r2, [r4, #48]	; 0x30
   45930:	mov	r0, r7
   45934:	mov	r1, r4
   45938:	bl	1840 <Mat_VarWrite@plt>
   4593c:	b	45944 <Mat_VarDelete+0xdc>
   45940:	mov	r8, #0
   45944:	mov	r0, r4
   45948:	bl	1930 <Mat_VarFree@plt>
   4594c:	mov	r0, r5
   45950:	bl	17bc <Mat_VarReadNext@plt>
   45954:	mov	r4, r0
   45958:	cmp	r0, #0
   4595c:	bne	45918 <Mat_VarDelete+0xb0>
   45960:	b	45978 <Mat_VarDelete+0x110>
   45964:	ldr	r0, [pc, #592]	; 45bbc <Mat_VarDelete+0x354>
   45968:	add	r0, pc, r0
   4596c:	bl	19cc <Mat_Critical@plt>
   45970:	b	458a8 <Mat_VarDelete+0x40>
   45974:	mov	r8, #1
   45978:	ldr	r6, [r7, #36]	; 0x24
   4597c:	ldr	sl, [r7, #40]	; 0x28
   45980:	mov	r0, #0
   45984:	str	r0, [r7, #40]	; 0x28
   45988:	mov	r0, r7
   4598c:	bl	19c0 <Mat_Close@plt>
   45990:	cmp	r8, #0
   45994:	beq	459c4 <Mat_VarDelete+0x15c>
   45998:	mov	r0, r9
   4599c:	bl	1a14 <remove@plt>
   459a0:	mov	r4, r0
   459a4:	cmn	r0, #1
   459a8:	bne	458a8 <Mat_VarDelete+0x40>
   459ac:	ldr	r0, [pc, #516]	; 45bb8 <Mat_VarDelete+0x350>
   459b0:	add	r0, pc, r0
   459b4:	mov	r1, r9
   459b8:	bl	19cc <Mat_Critical@plt>
   459bc:	mvn	r4, #0
   459c0:	b	458a8 <Mat_VarDelete+0x40>
   459c4:	ldr	r1, [r5, #12]
   459c8:	ldr	r0, [pc, #472]	; 45ba8 <Mat_VarDelete+0x340>
   459cc:	add	r0, pc, r0
   459d0:	bl	1de4 <strdup_printf>
   459d4:	mov	r8, r0
   459d8:	ldr	r0, [r5]
   459dc:	cmp	r0, #0
   459e0:	beq	459f0 <Mat_VarDelete+0x188>
   459e4:	bl	19e4 <fclose@plt>
   459e8:	mov	r0, #0
   459ec:	str	r0, [r5]
   459f0:	mov	r0, r9
   459f4:	mov	r1, r8
   459f8:	bl	45e24 <mat_copy>
   459fc:	cmn	r0, #1
   45a00:	beq	45af0 <Mat_VarDelete+0x288>
   45a04:	mov	r0, r9
   45a08:	bl	1a14 <remove@plt>
   45a0c:	mov	r4, r0
   45a10:	cmn	r0, #1
   45a14:	beq	45b44 <Mat_VarDelete+0x2dc>
   45a18:	ldr	r1, [r5, #24]
   45a1c:	mov	r0, r8
   45a20:	bl	17e0 <Mat_Open@plt>
   45a24:	cmp	r0, #0
   45a28:	beq	45b8c <Mat_VarDelete+0x324>
   45a2c:	mov	r9, r0
   45a30:	ldr	r0, [r5, #4]
   45a34:	cmp	r0, #0
   45a38:	beq	45a40 <Mat_VarDelete+0x1d8>
   45a3c:	bl	181c <free@plt>
   45a40:	ldr	r0, [r5, #8]
   45a44:	cmp	r0, #0
   45a48:	beq	45a50 <Mat_VarDelete+0x1e8>
   45a4c:	bl	181c <free@plt>
   45a50:	ldr	r0, [r5, #12]
   45a54:	cmp	r0, #0
   45a58:	beq	45a60 <Mat_VarDelete+0x1f8>
   45a5c:	bl	181c <free@plt>
   45a60:	ldr	r0, [r5, #40]	; 0x28
   45a64:	cmp	r0, #0
   45a68:	beq	45aa8 <Mat_VarDelete+0x240>
   45a6c:	ldr	r1, [r5, #36]	; 0x24
   45a70:	ldr	r0, [r5, #40]	; 0x28
   45a74:	cmp	r1, #0
   45a78:	beq	45aa4 <Mat_VarDelete+0x23c>
   45a7c:	mov	r7, #0
   45a80:	ldr	r0, [r0, r7, lsl #2]
   45a84:	cmp	r0, #0
   45a88:	beq	45a90 <Mat_VarDelete+0x228>
   45a8c:	bl	181c <free@plt>
   45a90:	add	r7, r7, #1
   45a94:	ldr	r1, [r5, #36]	; 0x24
   45a98:	ldr	r0, [r5, #40]	; 0x28
   45a9c:	cmp	r7, r1
   45aa0:	bcc	45a80 <Mat_VarDelete+0x218>
   45aa4:	bl	181c <free@plt>
   45aa8:	mov	r0, #28
   45aac:	mov	r1, r9
   45ab0:	vld1.32	{d16-d17}, [r1], r0
   45ab4:	add	r0, r9, #16
   45ab8:	vld1.32	{d18-d19}, [r0]
   45abc:	add	r0, r5, #16
   45ac0:	vld1.32	{d20-d21}, [r1]
   45ac4:	vst1.32	{d18-d19}, [r0]
   45ac8:	add	r0, r5, #28
   45acc:	vst1.32	{d20-d21}, [r0]
   45ad0:	mov	r0, #40	; 0x28
   45ad4:	mov	r7, r5
   45ad8:	vst1.32	{d16-d17}, [r7], r0
   45adc:	mov	r0, r9
   45ae0:	bl	181c <free@plt>
   45ae4:	str	sl, [r7]
   45ae8:	str	r6, [r5, #36]	; 0x24
   45aec:	b	45b9c <Mat_VarDelete+0x334>
   45af0:	mov	r4, r0
   45af4:	cmp	sl, #0
   45af8:	beq	45b2c <Mat_VarDelete+0x2c4>
   45afc:	cmp	r6, #0
   45b00:	beq	45b24 <Mat_VarDelete+0x2bc>
   45b04:	mov	r5, sl
   45b08:	ldr	r0, [r5]
   45b0c:	cmp	r0, #0
   45b10:	beq	45b18 <Mat_VarDelete+0x2b0>
   45b14:	bl	181c <free@plt>
   45b18:	subs	r6, r6, #1
   45b1c:	add	r5, r5, #4
   45b20:	bne	45b08 <Mat_VarDelete+0x2a0>
   45b24:	mov	r0, sl
   45b28:	bl	181c <free@plt>
   45b2c:	ldr	r0, [pc, #120]	; 45bac <Mat_VarDelete+0x344>
   45b30:	add	r0, pc, r0
   45b34:	mov	r1, r9
   45b38:	mov	r2, r8
   45b3c:	bl	19cc <Mat_Critical@plt>
   45b40:	b	45b9c <Mat_VarDelete+0x334>
   45b44:	cmp	sl, #0
   45b48:	beq	45b7c <Mat_VarDelete+0x314>
   45b4c:	cmp	r6, #0
   45b50:	beq	45b74 <Mat_VarDelete+0x30c>
   45b54:	mov	r5, sl
   45b58:	ldr	r0, [r5]
   45b5c:	cmp	r0, #0
   45b60:	beq	45b68 <Mat_VarDelete+0x300>
   45b64:	bl	181c <free@plt>
   45b68:	subs	r6, r6, #1
   45b6c:	add	r5, r5, #4
   45b70:	bne	45b58 <Mat_VarDelete+0x2f0>
   45b74:	mov	r0, sl
   45b78:	bl	181c <free@plt>
   45b7c:	ldr	r0, [pc, #44]	; 45bb0 <Mat_VarDelete+0x348>
   45b80:	add	r0, pc, r0
   45b84:	mov	r1, r9
   45b88:	b	45b98 <Mat_VarDelete+0x330>
   45b8c:	ldr	r0, [pc, #32]	; 45bb4 <Mat_VarDelete+0x34c>
   45b90:	add	r0, pc, r0
   45b94:	mov	r1, r8
   45b98:	bl	19cc <Mat_Critical@plt>
   45b9c:	mov	r0, r8
   45ba0:	bl	181c <free@plt>
   45ba4:	b	458a8 <Mat_VarDelete+0x40>
   45ba8:	.word	0x00004217
   45bac:	.word	0x00003e40
   45bb0:	.word	0x00003e14
   45bb4:	.word	0x00003e1d
   45bb8:	.word	0x00003fe4
   45bbc:	.word	0x0000405c

00045bc0 <Mat_VarReadNext>:
   45bc0:	push	{r4, r5, r6, sl, fp, lr}
   45bc4:	add	fp, sp, #16
   45bc8:	mov	r5, r0
   45bcc:	ldr	r0, [r0, #16]
   45bd0:	mov	r6, #0
   45bd4:	cmp	r0, #512	; 0x200
   45bd8:	bne	45c04 <Mat_VarReadNext+0x44>
   45bdc:	mov	r0, r5
   45be0:	bl	1a8c <Mat_VarReadNextInfo@plt>
   45be4:	cmp	r0, #0
   45be8:	beq	45c40 <Mat_VarReadNext+0x80>
   45bec:	mov	r4, r0
   45bf0:	mov	r0, r5
   45bf4:	mov	r1, r4
   45bf8:	bl	474ac <ReadData>
   45bfc:	mov	r0, r4
   45c00:	pop	{r4, r5, r6, sl, fp, pc}
   45c04:	ldr	r0, [r5]
   45c08:	bl	1924 <feof@plt>
   45c0c:	mov	r4, #0
   45c10:	cmp	r0, #0
   45c14:	bne	45c64 <Mat_VarReadNext+0xa4>
   45c18:	ldr	r0, [r5]
   45c1c:	bl	1858 <ftell@plt>
   45c20:	mov	r6, r0
   45c24:	cmn	r0, #1
   45c28:	bne	45bdc <Mat_VarReadNext+0x1c>
   45c2c:	ldr	r0, [pc, #56]	; 45c6c <Mat_VarReadNext+0xac>
   45c30:	add	r0, pc, r0
   45c34:	bl	19cc <Mat_Critical@plt>
   45c38:	mov	r0, r4
   45c3c:	pop	{r4, r5, r6, sl, fp, pc}
   45c40:	ldr	r0, [r5, #16]
   45c44:	mov	r4, #0
   45c48:	cmp	r0, #512	; 0x200
   45c4c:	beq	45c64 <Mat_VarReadNext+0xa4>
   45c50:	ldr	r0, [r5]
   45c54:	mov	r4, #0
   45c58:	mov	r1, r6
   45c5c:	mov	r2, #0
   45c60:	bl	1a68 <fseek@plt>
   45c64:	mov	r0, r4
   45c68:	pop	{r4, r5, r6, sl, fp, pc}
   45c6c:	.word	0x00003668

00045c70 <Mat_VarWrite>:
   45c70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   45c74:	add	fp, sp, #24
   45c78:	sub	sp, sp, #8
   45c7c:	mov	r4, r0
   45c80:	mvn	r0, #0
   45c84:	cmp	r4, #0
   45c88:	movne	r9, r1
   45c8c:	cmpne	r1, #0
   45c90:	bne	45c9c <Mat_VarWrite+0x2c>
   45c94:	sub	sp, fp, #24
   45c98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45c9c:	mov	r8, r2
   45ca0:	ldr	r0, [r4, #40]	; 0x28
   45ca4:	cmp	r0, #0
   45ca8:	bne	45cc0 <Mat_VarWrite+0x50>
   45cac:	mov	r0, #0
   45cb0:	str	r0, [sp, #4]
   45cb4:	add	r1, sp, #4
   45cb8:	mov	r0, r4
   45cbc:	bl	1948 <Mat_GetDir@plt>
   45cc0:	ldr	r0, [r4, #36]	; 0x24
   45cc4:	cmp	r0, #0
   45cc8:	beq	45d04 <Mat_VarWrite+0x94>
   45ccc:	ldr	r6, [r4, #40]	; 0x28
   45cd0:	mov	r5, #0
   45cd4:	ldr	r0, [r6, r5, lsl #2]
   45cd8:	cmp	r0, #0
   45cdc:	beq	45cf4 <Mat_VarWrite+0x84>
   45ce0:	ldr	r7, [r9, #36]	; 0x24
   45ce4:	mov	r1, r7
   45ce8:	bl	17c8 <strcmp@plt>
   45cec:	cmp	r0, #0
   45cf0:	beq	45d44 <Mat_VarWrite+0xd4>
   45cf4:	ldr	r0, [r4, #36]	; 0x24
   45cf8:	add	r5, r5, #1
   45cfc:	cmp	r5, r0
   45d00:	bcc	45cd4 <Mat_VarWrite+0x64>
   45d04:	ldr	r0, [r4, #16]
   45d08:	cmp	r0, #16
   45d0c:	beq	45d60 <Mat_VarWrite+0xf0>
   45d10:	cmp	r0, #512	; 0x200
   45d14:	beq	45d54 <Mat_VarWrite+0xe4>
   45d18:	cmp	r0, #256	; 0x100
   45d1c:	movne	r0, #2
   45d20:	subne	sp, fp, #24
   45d24:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   45d28:	mov	r0, r4
   45d2c:	mov	r1, r9
   45d30:	mov	r2, r8
   45d34:	bl	3e658 <Mat_VarWrite5>
   45d38:	cmp	r0, #0
   45d3c:	bne	45c94 <Mat_VarWrite+0x24>
   45d40:	b	45d74 <Mat_VarWrite+0x104>
   45d44:	ldr	r0, [pc, #204]	; 45e18 <Mat_VarWrite+0x1a8>
   45d48:	add	r0, pc, r0
   45d4c:	mov	r1, r7
   45d50:	bl	19cc <Mat_Critical@plt>
   45d54:	mov	r0, #1
   45d58:	sub	sp, fp, #24
   45d5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45d60:	mov	r0, r4
   45d64:	mov	r1, r9
   45d68:	bl	432a8 <Mat_VarWrite4>
   45d6c:	cmp	r0, #0
   45d70:	bne	45c94 <Mat_VarWrite+0x24>
   45d74:	ldr	r0, [r4, #40]	; 0x28
   45d78:	cmp	r0, #0
   45d7c:	beq	45d94 <Mat_VarWrite+0x124>
   45d80:	ldr	r1, [r4, #36]	; 0x24
   45d84:	mov	r2, #4
   45d88:	add	r1, r2, r1, lsl #2
   45d8c:	bl	1888 <realloc@plt>
   45d90:	b	45d9c <Mat_VarWrite+0x12c>
   45d94:	mov	r0, #4
   45d98:	bl	18e8 <malloc@plt>
   45d9c:	mov	r2, r0
   45da0:	cmp	r0, #0
   45da4:	beq	45de4 <Mat_VarWrite+0x174>
   45da8:	str	r2, [r4, #40]	; 0x28
   45dac:	ldr	r1, [r9, #36]	; 0x24
   45db0:	cmp	r1, #0
   45db4:	beq	45dfc <Mat_VarWrite+0x18c>
   45db8:	ldr	r0, [pc, #92]	; 45e1c <Mat_VarWrite+0x1ac>
   45dbc:	add	r0, pc, r0
   45dc0:	bl	1de4 <strdup_printf>
   45dc4:	ldr	r1, [r4, #36]	; 0x24
   45dc8:	ldr	r2, [r4, #40]	; 0x28
   45dcc:	add	r3, r1, #1
   45dd0:	str	r3, [r4, #36]	; 0x24
   45dd4:	str	r0, [r2, r1, lsl #2]
   45dd8:	mov	r0, #0
   45ddc:	sub	sp, fp, #24
   45de0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45de4:	ldr	r0, [pc, #52]	; 45e20 <Mat_VarWrite+0x1b0>
   45de8:	add	r0, pc, r0
   45dec:	bl	19cc <Mat_Critical@plt>
   45df0:	mov	r0, #3
   45df4:	sub	sp, fp, #24
   45df8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45dfc:	ldr	r1, [r4, #36]	; 0x24
   45e00:	add	r0, r1, #1
   45e04:	str	r0, [r4, #36]	; 0x24
   45e08:	mov	r0, #0
   45e0c:	str	r0, [r2, r1, lsl #2]
   45e10:	sub	sp, fp, #24
   45e14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45e18:	.word	0x0000411c
   45e1c:	.word	0x00003e27
   45e20:	.word	0x00003b3f

00045e24 <mat_copy>:
   45e24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   45e28:	add	fp, sp, #24
   45e2c:	sub	sp, sp, #8192	; 0x2000
   45e30:	mov	r8, r1
   45e34:	mov	r6, r0
   45e38:	mov	r0, sp
   45e3c:	mov	r1, #0
   45e40:	mov	r2, #8192	; 0x2000
   45e44:	bl	19a8 <memset@plt>
   45e48:	ldr	r1, [pc, #220]	; 45f2c <mat_copy+0x108>
   45e4c:	add	r1, pc, r1
   45e50:	mov	r0, r6
   45e54:	bl	17f8 <fopen@plt>
   45e58:	cmp	r0, #0
   45e5c:	beq	45edc <mat_copy+0xb8>
   45e60:	mov	r5, r0
   45e64:	ldr	r1, [pc, #200]	; 45f34 <mat_copy+0x110>
   45e68:	add	r1, pc, r1
   45e6c:	mov	r0, r8
   45e70:	bl	17f8 <fopen@plt>
   45e74:	cmp	r0, #0
   45e78:	beq	45eec <mat_copy+0xc8>
   45e7c:	mov	r6, r0
   45e80:	mov	r7, sp
   45e84:	mov	r0, r7
   45e88:	mov	r1, #1
   45e8c:	mov	r2, #8192	; 0x2000
   45e90:	mov	r3, r5
   45e94:	bl	1a50 <fread_unlocked@plt>
   45e98:	cmp	r0, #0
   45e9c:	beq	45f10 <mat_copy+0xec>
   45ea0:	mov	r4, r0
   45ea4:	mov	r0, r7
   45ea8:	mov	r1, #1
   45eac:	mov	r2, r4
   45eb0:	mov	r3, r6
   45eb4:	bl	1864 <fwrite_unlocked@plt>
   45eb8:	cmp	r4, r0
   45ebc:	beq	45e84 <mat_copy+0x60>
   45ec0:	mov	r0, r5
   45ec4:	bl	19e4 <fclose@plt>
   45ec8:	mov	r0, r6
   45ecc:	bl	19e4 <fclose@plt>
   45ed0:	ldr	r0, [pc, #96]	; 45f38 <mat_copy+0x114>
   45ed4:	add	r0, pc, r0
   45ed8:	b	45efc <mat_copy+0xd8>
   45edc:	ldr	r0, [pc, #76]	; 45f30 <mat_copy+0x10c>
   45ee0:	add	r0, pc, r0
   45ee4:	mov	r1, r6
   45ee8:	b	45f00 <mat_copy+0xdc>
   45eec:	mov	r0, r5
   45ef0:	bl	19e4 <fclose@plt>
   45ef4:	ldr	r0, [pc, #64]	; 45f3c <mat_copy+0x118>
   45ef8:	add	r0, pc, r0
   45efc:	mov	r1, r8
   45f00:	bl	19cc <Mat_Critical@plt>
   45f04:	mvn	r0, #0
   45f08:	sub	sp, fp, #24
   45f0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   45f10:	mov	r0, r5
   45f14:	bl	19e4 <fclose@plt>
   45f18:	mov	r0, r6
   45f1c:	bl	19e4 <fclose@plt>
   45f20:	mov	r0, #0
   45f24:	sub	sp, fp, #24
   45f28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   45f2c:	.word	0x00003a00
   45f30:	.word	0x00003fa0
   45f34:	.word	0x0000403b
   45f38:	.word	0x00003ff5
   45f3c:	.word	0x00003fae

00045f40 <Mat_VarDuplicate>:
   45f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45f44:	add	fp, sp, #28
   45f48:	sub	sp, sp, #12
   45f4c:	mov	r9, r1
   45f50:	mov	r8, r0
   45f54:	bl	18b8 <Mat_VarCalloc@plt>
   45f58:	mov	sl, r0
   45f5c:	cmp	r0, #0
   45f60:	beq	4620c <Mat_VarDuplicate+0x2cc>
   45f64:	ldm	r8, {r0, r4}
   45f68:	add	r7, r8, #8
   45f6c:	ldm	r7, {r1, r2, r3, r7}
   45f70:	ldr	r6, [r8, #24]
   45f74:	ldr	r5, [r8, #28]
   45f78:	stm	sl, {r0, r4}
   45f7c:	add	r0, sl, #8
   45f80:	stm	r0, {r1, r2, r3, r7}
   45f84:	str	r6, [sl, #24]
   45f88:	str	r5, [sl, #28]
   45f8c:	ldr	r0, [r8, #44]	; 0x2c
   45f90:	ldr	r1, [r8, #48]	; 0x30
   45f94:	str	r0, [sl, #44]	; 0x2c
   45f98:	str	r1, [sl, #48]	; 0x30
   45f9c:	ldr	r7, [r8, #36]	; 0x24
   45fa0:	cmp	r7, #0
   45fa4:	beq	45fd4 <Mat_VarDuplicate+0x94>
   45fa8:	mov	r0, r7
   45fac:	bl	196c <strlen@plt>
   45fb0:	add	r6, r0, #1
   45fb4:	mov	r0, r6
   45fb8:	bl	18e8 <malloc@plt>
   45fbc:	str	r0, [sl, #36]	; 0x24
   45fc0:	cmp	r0, #0
   45fc4:	beq	45fd4 <Mat_VarDuplicate+0x94>
   45fc8:	mov	r1, r7
   45fcc:	mov	r2, r6
   45fd0:	bl	1834 <memcpy@plt>
   45fd4:	lsl	r6, r4, #2
   45fd8:	mov	r0, r6
   45fdc:	bl	18e8 <malloc@plt>
   45fe0:	str	r0, [sl, #32]
   45fe4:	cmp	r0, #0
   45fe8:	beq	45ff8 <Mat_VarDuplicate+0xb8>
   45fec:	ldr	r1, [r8, #32]
   45ff0:	mov	r2, r6
   45ff4:	bl	1834 <memcpy@plt>
   45ff8:	ldr	r0, [r8, #52]	; 0x34
   45ffc:	cmp	r0, #0
   46000:	beq	4617c <Mat_VarDuplicate+0x23c>
   46004:	ldr	r1, [r0]
   46008:	ldr	r4, [sl, #52]	; 0x34
   4600c:	mov	r2, #0
   46010:	str	r1, [r4]
   46014:	str	r2, [r4, #12]
   46018:	str	r2, [r4, #16]
   4601c:	ldr	r1, [r0, #4]
   46020:	str	r1, [r4, #4]
   46024:	ldr	r1, [r0, #8]
   46028:	cmp	r1, #0
   4602c:	ldrne	r0, [r0, #4]
   46030:	cmpne	r0, #0
   46034:	bne	462f4 <Mat_VarDuplicate+0x3b4>
   46038:	ldr	r4, [r8, #52]	; 0x34
   4603c:	ldr	r0, [r4, #12]
   46040:	cmp	r0, #0
   46044:	beq	4606c <Mat_VarDuplicate+0x12c>
   46048:	mov	r0, #56	; 0x38
   4604c:	bl	18e8 <malloc@plt>
   46050:	ldr	r2, [sl, #52]	; 0x34
   46054:	str	r0, [r2, #12]
   46058:	cmp	r0, #0
   4605c:	beq	4606c <Mat_VarDuplicate+0x12c>
   46060:	ldr	r1, [r4, #12]
   46064:	ldr	r0, [r2, #12]
   46068:	bl	1960 <inflateCopy@plt>
   4606c:	ldr	r6, [r8, #52]	; 0x34
   46070:	ldr	r0, [r6, #16]
   46074:	cmp	r0, #0
   46078:	beq	4618c <Mat_VarDuplicate+0x24c>
   4607c:	ldr	r0, [r8, #16]
   46080:	cmp	r0, #5
   46084:	bne	46218 <Mat_VarDuplicate+0x2d8>
   46088:	mov	r0, #28
   4608c:	bl	18e8 <malloc@plt>
   46090:	mov	r7, r0
   46094:	ldr	r0, [sl, #52]	; 0x34
   46098:	str	r7, [r0, #16]
   4609c:	cmp	r7, #0
   460a0:	beq	4618c <Mat_VarDuplicate+0x24c>
   460a4:	ldr	r6, [r6, #16]
   460a8:	ldr	r0, [r6]
   460ac:	str	r0, [r7]
   460b0:	ldr	r0, [r6, #8]
   460b4:	str	r0, [r7, #8]
   460b8:	ldr	r0, [r6, #8]
   460bc:	lsl	r0, r0, #2
   460c0:	bl	18e8 <malloc@plt>
   460c4:	str	r0, [r7, #4]
   460c8:	cmp	r0, #0
   460cc:	beq	460dc <Mat_VarDuplicate+0x19c>
   460d0:	ldmib	r6, {r1, r2}
   460d4:	lsl	r2, r2, #2
   460d8:	bl	1834 <memcpy@plt>
   460dc:	ldr	r0, [r6, #16]
   460e0:	str	r0, [r7, #16]
   460e4:	ldr	r0, [r6, #16]
   460e8:	lsl	r0, r0, #2
   460ec:	bl	18e8 <malloc@plt>
   460f0:	str	r0, [r7, #12]
   460f4:	cmp	r0, #0
   460f8:	beq	4610c <Mat_VarDuplicate+0x1cc>
   460fc:	ldr	r1, [r6, #12]
   46100:	ldr	r2, [r6, #16]
   46104:	lsl	r2, r2, #2
   46108:	bl	1834 <memcpy@plt>
   4610c:	ldr	r0, [r6, #20]
   46110:	str	r0, [r7, #20]
   46114:	ldr	r0, [sl, #20]
   46118:	cmp	r0, #0
   4611c:	ldrne	r0, [r6, #24]
   46120:	cmpne	r0, #0
   46124:	bne	464d8 <Mat_VarDuplicate+0x598>
   46128:	ldr	r0, [r6, #24]
   4612c:	cmp	r0, #0
   46130:	beq	4618c <Mat_VarDuplicate+0x24c>
   46134:	ldr	r4, [r6, #20]
   46138:	ldr	r0, [r8, #8]
   4613c:	bl	193c <Mat_SizeOf@plt>
   46140:	mul	r0, r0, r4
   46144:	bl	18e8 <malloc@plt>
   46148:	str	r0, [r7, #24]
   4614c:	cmp	r0, #0
   46150:	beq	4618c <Mat_VarDuplicate+0x24c>
   46154:	mov	r4, r0
   46158:	ldr	r5, [r6, #20]
   4615c:	ldr	r7, [r6, #24]
   46160:	ldr	r0, [r8, #8]
   46164:	bl	193c <Mat_SizeOf@plt>
   46168:	mul	r2, r0, r5
   4616c:	mov	r0, r4
   46170:	mov	r1, r7
   46174:	bl	1834 <memcpy@plt>
   46178:	b	4618c <Mat_VarDuplicate+0x24c>
   4617c:	ldr	r0, [sl, #52]	; 0x34
   46180:	bl	181c <free@plt>
   46184:	mov	r0, #0
   46188:	str	r0, [sl, #52]	; 0x34
   4618c:	ldr	r7, [r8, #40]	; 0x28
   46190:	cmp	r9, #0
   46194:	beq	46208 <Mat_VarDuplicate+0x2c8>
   46198:	cmp	r7, #0
   4619c:	beq	4620c <Mat_VarDuplicate+0x2cc>
   461a0:	ldr	r0, [r8, #16]
   461a4:	cmp	r0, #2
   461a8:	bne	4628c <Mat_VarDuplicate+0x34c>
   461ac:	ldr	r6, [r8]
   461b0:	mov	r0, r6
   461b4:	bl	18e8 <malloc@plt>
   461b8:	str	r0, [sl, #40]	; 0x28
   461bc:	cmp	r0, #0
   461c0:	beq	4620c <Mat_VarDuplicate+0x2cc>
   461c4:	mov	r7, r0
   461c8:	ldr	r0, [r8, #12]
   461cc:	cmp	r0, #1
   461d0:	blt	4620c <Mat_VarDuplicate+0x2cc>
   461d4:	cmp	r0, r6
   461d8:	bhi	4620c <Mat_VarDuplicate+0x2cc>
   461dc:	udiv	r4, r6, r0
   461e0:	ldr	r5, [r8, #40]	; 0x28
   461e4:	mov	r6, #0
   461e8:	ldr	r0, [r5, r6, lsl #2]
   461ec:	mov	r1, r9
   461f0:	bl	1a80 <Mat_VarDuplicate@plt>
   461f4:	str	r0, [r7, r6, lsl #2]
   461f8:	add	r6, r6, #1
   461fc:	cmp	r6, r4
   46200:	bcc	461e8 <Mat_VarDuplicate+0x2a8>
   46204:	b	4620c <Mat_VarDuplicate+0x2cc>
   46208:	str	r7, [sl, #40]	; 0x28
   4620c:	mov	r0, sl
   46210:	sub	sp, fp, #28
   46214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46218:	ldr	r0, [sl, #20]
   4621c:	cmp	r0, #0
   46220:	beq	46444 <Mat_VarDuplicate+0x504>
   46224:	mov	r0, #8
   46228:	bl	18e8 <malloc@plt>
   4622c:	mov	r7, r0
   46230:	ldr	r0, [sl, #52]	; 0x34
   46234:	str	r7, [r0, #16]
   46238:	cmp	r7, #0
   4623c:	beq	4618c <Mat_VarDuplicate+0x24c>
   46240:	ldr	r4, [r6, #16]
   46244:	ldr	r5, [sl]
   46248:	mov	r0, r5
   4624c:	bl	18e8 <malloc@plt>
   46250:	str	r0, [r7]
   46254:	cmp	r0, #0
   46258:	beq	46268 <Mat_VarDuplicate+0x328>
   4625c:	ldr	r1, [r4]
   46260:	mov	r2, r5
   46264:	bl	1834 <memcpy@plt>
   46268:	mov	r0, r5
   4626c:	bl	18e8 <malloc@plt>
   46270:	str	r0, [r7, #4]
   46274:	cmp	r0, #0
   46278:	beq	4618c <Mat_VarDuplicate+0x24c>
   4627c:	ldr	r1, [r4, #4]
   46280:	mov	r2, r5
   46284:	bl	1834 <memcpy@plt>
   46288:	b	4618c <Mat_VarDuplicate+0x24c>
   4628c:	ldr	r0, [r8, #16]
   46290:	cmp	r0, #1
   46294:	bne	4634c <Mat_VarDuplicate+0x40c>
   46298:	ldr	r6, [r8]
   4629c:	mov	r0, r6
   462a0:	bl	18e8 <malloc@plt>
   462a4:	str	r0, [sl, #40]	; 0x28
   462a8:	cmp	r0, #0
   462ac:	beq	4620c <Mat_VarDuplicate+0x2cc>
   462b0:	mov	r7, r0
   462b4:	ldr	r0, [r8, #12]
   462b8:	cmp	r0, #1
   462bc:	blt	4620c <Mat_VarDuplicate+0x2cc>
   462c0:	cmp	r0, r6
   462c4:	bhi	4620c <Mat_VarDuplicate+0x2cc>
   462c8:	udiv	r4, r6, r0
   462cc:	ldr	r5, [r8, #40]	; 0x28
   462d0:	mov	r6, #0
   462d4:	ldr	r0, [r5, r6, lsl #2]
   462d8:	mov	r1, r9
   462dc:	bl	1a80 <Mat_VarDuplicate@plt>
   462e0:	str	r0, [r7, r6, lsl #2]
   462e4:	add	r6, r6, #1
   462e8:	cmp	r6, r4
   462ec:	bcc	462d4 <Mat_VarDuplicate+0x394>
   462f0:	b	4620c <Mat_VarDuplicate+0x2cc>
   462f4:	mov	r1, #4
   462f8:	bl	17b0 <calloc@plt>
   462fc:	str	r0, [r4, #8]
   46300:	ldr	r0, [r8, #52]	; 0x34
   46304:	ldr	r1, [r0, #4]
   46308:	cmp	r1, #0
   4630c:	beq	46038 <Mat_VarDuplicate+0xf8>
   46310:	mov	r4, #0
   46314:	ldr	r0, [r0, #8]
   46318:	ldr	r0, [r0, r4, lsl #2]
   4631c:	cmp	r0, #0
   46320:	beq	46334 <Mat_VarDuplicate+0x3f4>
   46324:	bl	187c <strdup@plt>
   46328:	ldr	r1, [sl, #52]	; 0x34
   4632c:	ldr	r1, [r1, #8]
   46330:	str	r0, [r1, r4, lsl #2]
   46334:	add	r4, r4, #1
   46338:	ldr	r0, [r8, #52]	; 0x34
   4633c:	ldr	r1, [r0, #4]
   46340:	cmp	r4, r1
   46344:	bcc	46314 <Mat_VarDuplicate+0x3d4>
   46348:	b	46038 <Mat_VarDuplicate+0xf8>
   4634c:	ldr	r0, [r8, #16]
   46350:	cmp	r0, #5
   46354:	bne	46470 <Mat_VarDuplicate+0x530>
   46358:	mov	r0, #28
   4635c:	bl	18e8 <malloc@plt>
   46360:	str	r0, [sl, #40]	; 0x28
   46364:	cmp	r0, #0
   46368:	beq	4620c <Mat_VarDuplicate+0x2cc>
   4636c:	mov	r6, r0
   46370:	ldr	r7, [r8, #40]	; 0x28
   46374:	ldr	r0, [r7]
   46378:	str	r0, [r6]
   4637c:	ldr	r0, [r7, #8]
   46380:	str	r0, [r6, #8]
   46384:	ldr	r0, [r7, #8]
   46388:	lsl	r0, r0, #2
   4638c:	bl	18e8 <malloc@plt>
   46390:	str	r0, [r6, #4]
   46394:	cmp	r0, #0
   46398:	beq	463a8 <Mat_VarDuplicate+0x468>
   4639c:	ldmib	r7, {r1, r2}
   463a0:	lsl	r2, r2, #2
   463a4:	bl	1834 <memcpy@plt>
   463a8:	ldr	r0, [r7, #16]
   463ac:	str	r0, [r6, #16]
   463b0:	ldr	r0, [r7, #16]
   463b4:	lsl	r0, r0, #2
   463b8:	bl	18e8 <malloc@plt>
   463bc:	str	r0, [r6, #12]
   463c0:	cmp	r0, #0
   463c4:	beq	463d8 <Mat_VarDuplicate+0x498>
   463c8:	ldr	r1, [r7, #12]
   463cc:	ldr	r2, [r7, #16]
   463d0:	lsl	r2, r2, #2
   463d4:	bl	1834 <memcpy@plt>
   463d8:	ldr	r0, [r7, #20]
   463dc:	str	r0, [r6, #20]
   463e0:	ldr	r0, [sl, #20]
   463e4:	cmp	r0, #0
   463e8:	ldrne	r0, [r7, #24]
   463ec:	cmpne	r0, #0
   463f0:	bne	465b8 <Mat_VarDuplicate+0x678>
   463f4:	ldr	r0, [r7, #24]
   463f8:	cmp	r0, #0
   463fc:	beq	46664 <Mat_VarDuplicate+0x724>
   46400:	ldr	r4, [r7, #20]
   46404:	ldr	r0, [r8, #8]
   46408:	bl	193c <Mat_SizeOf@plt>
   4640c:	mul	r0, r0, r4
   46410:	bl	18e8 <malloc@plt>
   46414:	str	r0, [r6, #24]
   46418:	cmp	r0, #0
   4641c:	beq	4620c <Mat_VarDuplicate+0x2cc>
   46420:	mov	r4, r0
   46424:	ldr	r5, [r7, #20]
   46428:	ldr	r6, [r7, #24]
   4642c:	ldr	r0, [r8, #8]
   46430:	bl	193c <Mat_SizeOf@plt>
   46434:	mul	r2, r0, r5
   46438:	mov	r0, r4
   4643c:	mov	r1, r6
   46440:	b	465b0 <Mat_VarDuplicate+0x670>
   46444:	ldr	r7, [r8]
   46448:	mov	r0, r7
   4644c:	bl	18e8 <malloc@plt>
   46450:	ldr	r1, [sl, #52]	; 0x34
   46454:	str	r0, [r1, #16]
   46458:	cmp	r0, #0
   4645c:	beq	4618c <Mat_VarDuplicate+0x24c>
   46460:	ldr	r1, [r6, #16]
   46464:	mov	r2, r7
   46468:	bl	1834 <memcpy@plt>
   4646c:	b	4618c <Mat_VarDuplicate+0x24c>
   46470:	ldr	r0, [sl, #20]
   46474:	cmp	r0, #0
   46478:	beq	46590 <Mat_VarDuplicate+0x650>
   4647c:	mov	r0, #8
   46480:	bl	18e8 <malloc@plt>
   46484:	str	r0, [sl, #40]	; 0x28
   46488:	cmp	r0, #0
   4648c:	beq	4620c <Mat_VarDuplicate+0x2cc>
   46490:	mov	r6, r0
   46494:	ldr	r4, [r8, #40]	; 0x28
   46498:	ldr	r5, [sl]
   4649c:	mov	r0, r5
   464a0:	bl	18e8 <malloc@plt>
   464a4:	str	r0, [r6]
   464a8:	cmp	r0, #0
   464ac:	beq	464bc <Mat_VarDuplicate+0x57c>
   464b0:	ldr	r1, [r4]
   464b4:	mov	r2, r5
   464b8:	bl	1834 <memcpy@plt>
   464bc:	mov	r0, r5
   464c0:	bl	18e8 <malloc@plt>
   464c4:	str	r0, [r6, #4]
   464c8:	cmp	r0, #0
   464cc:	beq	4620c <Mat_VarDuplicate+0x2cc>
   464d0:	ldr	r1, [r4, #4]
   464d4:	b	465ac <Mat_VarDuplicate+0x66c>
   464d8:	mov	r0, #8
   464dc:	bl	18e8 <malloc@plt>
   464e0:	str	r0, [r7, #24]
   464e4:	cmp	r0, #0
   464e8:	beq	4618c <Mat_VarDuplicate+0x24c>
   464ec:	mov	r5, r0
   464f0:	ldr	r4, [r6, #20]
   464f4:	ldr	r0, [r6, #24]
   464f8:	str	r0, [sp, #8]
   464fc:	ldr	r0, [r8, #8]
   46500:	bl	193c <Mat_SizeOf@plt>
   46504:	mul	r0, r0, r4
   46508:	bl	18e8 <malloc@plt>
   4650c:	str	r0, [r5]
   46510:	cmp	r0, #0
   46514:	beq	46544 <Mat_VarDuplicate+0x604>
   46518:	mov	r7, r0
   4651c:	ldr	r0, [sp, #8]
   46520:	ldr	r0, [r0]
   46524:	str	r0, [sp, #4]
   46528:	ldr	r4, [r6, #20]
   4652c:	ldr	r0, [r8, #8]
   46530:	bl	193c <Mat_SizeOf@plt>
   46534:	mul	r2, r0, r4
   46538:	mov	r0, r7
   4653c:	ldr	r1, [sp, #4]
   46540:	bl	1834 <memcpy@plt>
   46544:	ldr	r4, [r6, #20]
   46548:	ldr	r0, [r8, #8]
   4654c:	bl	193c <Mat_SizeOf@plt>
   46550:	mul	r0, r0, r4
   46554:	bl	18e8 <malloc@plt>
   46558:	str	r0, [r5, #4]
   4655c:	cmp	r0, #0
   46560:	beq	4618c <Mat_VarDuplicate+0x24c>
   46564:	mov	r7, r0
   46568:	ldr	r0, [sp, #8]
   4656c:	ldr	r4, [r0, #4]
   46570:	ldr	r5, [r6, #20]
   46574:	ldr	r0, [r8, #8]
   46578:	bl	193c <Mat_SizeOf@plt>
   4657c:	mul	r2, r0, r5
   46580:	mov	r0, r7
   46584:	mov	r1, r4
   46588:	bl	1834 <memcpy@plt>
   4658c:	b	4618c <Mat_VarDuplicate+0x24c>
   46590:	ldr	r5, [r8]
   46594:	mov	r0, r5
   46598:	bl	18e8 <malloc@plt>
   4659c:	str	r0, [sl, #40]	; 0x28
   465a0:	cmp	r0, #0
   465a4:	beq	4620c <Mat_VarDuplicate+0x2cc>
   465a8:	mov	r1, r7
   465ac:	mov	r2, r5
   465b0:	bl	1834 <memcpy@plt>
   465b4:	b	4620c <Mat_VarDuplicate+0x2cc>
   465b8:	mov	r0, #8
   465bc:	bl	18e8 <malloc@plt>
   465c0:	str	r0, [r6, #24]
   465c4:	cmp	r0, #0
   465c8:	beq	4620c <Mat_VarDuplicate+0x2cc>
   465cc:	mov	r9, r0
   465d0:	ldr	r5, [r7, #20]
   465d4:	ldr	r4, [r7, #24]
   465d8:	ldr	r0, [r8, #8]
   465dc:	bl	193c <Mat_SizeOf@plt>
   465e0:	mul	r0, r0, r5
   465e4:	bl	18e8 <malloc@plt>
   465e8:	str	r0, [r9]
   465ec:	cmp	r0, #0
   465f0:	beq	4661c <Mat_VarDuplicate+0x6dc>
   465f4:	mov	r6, r0
   465f8:	ldr	r0, [r4]
   465fc:	str	r0, [sp, #8]
   46600:	ldr	r5, [r7, #20]
   46604:	ldr	r0, [r8, #8]
   46608:	bl	193c <Mat_SizeOf@plt>
   4660c:	mul	r2, r0, r5
   46610:	mov	r0, r6
   46614:	ldr	r1, [sp, #8]
   46618:	bl	1834 <memcpy@plt>
   4661c:	mov	r5, r4
   46620:	ldr	r4, [r7, #20]
   46624:	ldr	r0, [r8, #8]
   46628:	bl	193c <Mat_SizeOf@plt>
   4662c:	mul	r0, r0, r4
   46630:	bl	18e8 <malloc@plt>
   46634:	str	r0, [r9, #4]
   46638:	cmp	r0, #0
   4663c:	beq	4620c <Mat_VarDuplicate+0x2cc>
   46640:	mov	r6, r0
   46644:	ldr	r4, [r5, #4]
   46648:	ldr	r5, [r7, #20]
   4664c:	ldr	r0, [r8, #8]
   46650:	bl	193c <Mat_SizeOf@plt>
   46654:	mul	r2, r0, r5
   46658:	mov	r0, r6
   4665c:	mov	r1, r4
   46660:	b	465b0 <Mat_VarDuplicate+0x670>
   46664:	mov	r0, #0
   46668:	str	r0, [r6, #24]
   4666c:	b	4620c <Mat_VarDuplicate+0x2cc>

00046670 <Mat_CalcSingleSubscript>:
   46670:	push	{r4, r5, r6, sl, fp, lr}
   46674:	add	fp, sp, #16
   46678:	cmp	r0, #1
   4667c:	movlt	r0, #0
   46680:	poplt	{r4, r5, r6, sl, fp, pc}
   46684:	mov	ip, r0
   46688:	sub	lr, r1, #4
   4668c:	mov	r3, #0
   46690:	mov	r0, #0
   46694:	b	466ac <Mat_CalcSingleSubscript+0x3c>
   46698:	add	r0, r4, r0
   4669c:	add	lr, lr, #4
   466a0:	add	r3, r3, #1
   466a4:	cmp	r3, ip
   466a8:	popge	{r4, r5, r6, sl, fp, pc}
   466ac:	ldr	r4, [r2, r3, lsl #2]
   466b0:	ldr	r5, [r1, r3, lsl #2]
   466b4:	cmp	r4, r5
   466b8:	bgt	466ec <Mat_CalcSingleSubscript+0x7c>
   466bc:	cmp	r4, #1
   466c0:	blt	466f8 <Mat_CalcSingleSubscript+0x88>
   466c4:	sub	r4, r4, #1
   466c8:	cmp	r3, #0
   466cc:	beq	46698 <Mat_CalcSingleSubscript+0x28>
   466d0:	mov	r5, #0
   466d4:	ldr	r6, [lr, -r5, lsl #2]
   466d8:	mul	r4, r6, r4
   466dc:	add	r5, r5, #1
   466e0:	cmp	r3, r5
   466e4:	bne	466d4 <Mat_CalcSingleSubscript+0x64>
   466e8:	b	46698 <Mat_CalcSingleSubscript+0x28>
   466ec:	ldr	r0, [pc, #12]	; 46700 <Mat_CalcSingleSubscript+0x90>
   466f0:	add	r0, pc, r0
   466f4:	bl	19cc <Mat_Critical@plt>
   466f8:	mvn	r0, #0
   466fc:	pop	{r4, r5, r6, sl, fp, pc}
   46700:	.word	0x000032f6

00046704 <Mat_CalcSingleSubscript2>:
   46704:	push	{r4, r5, r6, sl, fp, lr}
   46708:	add	fp, sp, #16
   4670c:	cmp	r0, #1
   46710:	blt	46774 <Mat_CalcSingleSubscript2+0x70>
   46714:	sub	ip, r1, #4
   46718:	mov	lr, #0
   4671c:	ldr	r4, [r2, lr, lsl #2]
   46720:	ldr	r5, [r1, lr, lsl #2]
   46724:	cmp	r4, r5
   46728:	bhi	4677c <Mat_CalcSingleSubscript2+0x78>
   4672c:	cmp	r4, #0
   46730:	beq	46788 <Mat_CalcSingleSubscript2+0x84>
   46734:	sub	r4, r4, #1
   46738:	cmp	lr, #0
   4673c:	beq	46758 <Mat_CalcSingleSubscript2+0x54>
   46740:	mov	r5, #0
   46744:	ldr	r6, [ip, -r5, lsl #2]
   46748:	mul	r4, r6, r4
   4674c:	add	r5, r5, #1
   46750:	cmp	lr, r5
   46754:	bne	46744 <Mat_CalcSingleSubscript2+0x40>
   46758:	ldr	r5, [r3]
   4675c:	add	r4, r5, r4
   46760:	str	r4, [r3]
   46764:	add	ip, ip, #4
   46768:	add	lr, lr, #1
   4676c:	cmp	lr, r0
   46770:	blt	4671c <Mat_CalcSingleSubscript2+0x18>
   46774:	mov	r0, #0
   46778:	pop	{r4, r5, r6, sl, fp, pc}
   4677c:	ldr	r0, [pc, #12]	; 46790 <Mat_CalcSingleSubscript2+0x8c>
   46780:	add	r0, pc, r0
   46784:	bl	19cc <Mat_Critical@plt>
   46788:	mov	r0, #1
   4678c:	pop	{r4, r5, r6, sl, fp, pc}
   46790:	.word	0x00003293

00046794 <Mat_CalcSubscripts>:
   46794:	push	{r4, r5, r6, sl, fp, lr}
   46798:	add	fp, sp, #16
   4679c:	mov	r6, r2
   467a0:	mov	r4, r1
   467a4:	mov	r5, r0
   467a8:	lsl	r0, r0, #2
   467ac:	bl	18e8 <malloc@plt>
   467b0:	cmp	r5, #0
   467b4:	popeq	{r4, r5, r6, sl, fp, pc}
   467b8:	rsb	r1, r5, #2
   467bc:	vmov	s0, r6
   467c0:	vcvt.f64.s32	d16, s0
   467c4:	mov	r2, #1
   467c8:	subs	r5, r5, #1
   467cc:	beq	467e8 <Mat_CalcSubscripts+0x54>
   467d0:	mov	r3, r1
   467d4:	ldr	r6, [r4, -r3, lsl #2]
   467d8:	mul	r2, r6, r2
   467dc:	add	r3, r3, #1
   467e0:	cmp	r3, #1
   467e4:	bne	467d4 <Mat_CalcSubscripts+0x40>
   467e8:	vmov	s0, r2
   467ec:	vcvt.f64.s32	d17, s0
   467f0:	vdiv.f64	d17, d16, d17
   467f4:	vcvtm.s32.f64	s0, d17
   467f8:	vmov	r3, s0
   467fc:	mul	r2, r2, r3
   46800:	vmov	s0, r2
   46804:	vcvt.f64.s32	d17, s0
   46808:	add	r2, r3, #1
   4680c:	vsub.f64	d16, d16, d17
   46810:	str	r2, [r0, r5, lsl #2]
   46814:	add	r1, r1, #1
   46818:	cmp	r5, #0
   4681c:	bne	467c4 <Mat_CalcSubscripts+0x30>
   46820:	pop	{r4, r5, r6, sl, fp, pc}

00046824 <Mat_CalcSubscripts2>:
   46824:	push	{r4, r5, r6, sl, fp, lr}
   46828:	add	fp, sp, #16
   4682c:	mov	r6, r2
   46830:	mov	r4, r1
   46834:	mov	r5, r0
   46838:	lsl	r0, r0, #2
   4683c:	bl	18e8 <malloc@plt>
   46840:	cmp	r5, #0
   46844:	popeq	{r4, r5, r6, sl, fp, pc}
   46848:	rsb	r1, r5, #2
   4684c:	vmov	s0, r6
   46850:	vcvt.f64.u32	d16, s0
   46854:	mov	r2, #1
   46858:	subs	r5, r5, #1
   4685c:	beq	46878 <Mat_CalcSubscripts2+0x54>
   46860:	mov	r3, r1
   46864:	ldr	r6, [r4, -r3, lsl #2]
   46868:	mul	r2, r6, r2
   4686c:	add	r3, r3, #1
   46870:	cmp	r3, #1
   46874:	bne	46864 <Mat_CalcSubscripts2+0x40>
   46878:	vmov	s0, r2
   4687c:	vcvt.f64.u32	d17, s0
   46880:	vdiv.f64	d17, d16, d17
   46884:	vcvtm.u32.f64	s0, d17
   46888:	vmov	r3, s0
   4688c:	mul	r2, r2, r3
   46890:	vmov	s0, r2
   46894:	vcvt.f64.u32	d17, s0
   46898:	add	r2, r3, #1
   4689c:	vsub.f64	d16, d16, d17
   468a0:	str	r2, [r0, r5, lsl #2]
   468a4:	add	r1, r1, #1
   468a8:	cmp	r5, #0
   468ac:	bne	46854 <Mat_CalcSubscripts2+0x30>
   468b0:	pop	{r4, r5, r6, sl, fp, pc}

000468b4 <Mat_VarGetSize>:
   468b4:	push	{r4, r5, r6, sl, fp, lr}
   468b8:	add	fp, sp, #16
   468bc:	sub	sp, sp, #8
   468c0:	mov	r4, r0
   468c4:	mov	r0, #0
   468c8:	str	r0, [sp, #4]
   468cc:	ldr	r0, [r4, #16]
   468d0:	cmp	r0, #1
   468d4:	beq	4697c <Mat_VarGetSize+0xc8>
   468d8:	cmp	r0, #5
   468dc:	beq	469f0 <Mat_VarGetSize+0x13c>
   468e0:	cmp	r0, #2
   468e4:	bne	46a5c <Mat_VarGetSize+0x1a8>
   468e8:	ldr	r6, [r4, #40]	; 0x28
   468ec:	cmp	r6, #0
   468f0:	beq	46968 <Mat_VarGetSize+0xb4>
   468f4:	ldr	r0, [r4, #52]	; 0x34
   468f8:	ldr	r0, [r0, #4]
   468fc:	str	r0, [sp]
   46900:	mov	r1, sp
   46904:	mov	r0, r4
   46908:	bl	4479c <SafeMulDims>
   4690c:	ldr	r5, [sp]
   46910:	add	r0, sp, #4
   46914:	mov	r1, r5
   46918:	mov	r2, #60	; 0x3c
   4691c:	bl	4481c <SafeMul>
   46920:	cmp	r5, #0
   46924:	beq	46968 <Mat_VarGetSize+0xb4>
   46928:	ldr	r0, [r6]
   4692c:	cmp	r0, #0
   46930:	beq	4695c <Mat_VarGetSize+0xa8>
   46934:	ldr	r1, [r0, #16]
   46938:	cmp	r1, #0
   4693c:	beq	46950 <Mat_VarGetSize+0x9c>
   46940:	bl	1a5c <Mat_VarGetSize@plt>
   46944:	ldr	r1, [sp, #4]
   46948:	add	r0, r1, r0
   4694c:	b	46958 <Mat_VarGetSize+0xa4>
   46950:	ldr	r0, [sp, #4]
   46954:	sub	r0, r0, #56	; 0x38
   46958:	str	r0, [sp, #4]
   4695c:	subs	r5, r5, #1
   46960:	add	r6, r6, #4
   46964:	bne	46928 <Mat_VarGetSize+0x74>
   46968:	ldr	r0, [r4, #52]	; 0x34
   4696c:	ldr	r0, [r0, #4]
   46970:	ldr	r1, [sp, #4]
   46974:	add	r0, r1, r0, lsl #6
   46978:	b	46a90 <Mat_VarGetSize+0x1dc>
   4697c:	ldr	r5, [r4, #40]	; 0x28
   46980:	cmp	r5, #0
   46984:	beq	46a94 <Mat_VarGetSize+0x1e0>
   46988:	ldr	r0, [r4]
   4698c:	ldr	r1, [r4, #12]
   46990:	udiv	r4, r0, r1
   46994:	rsb	r2, r4, r4, lsl #4
   46998:	lsl	r2, r2, #2
   4699c:	str	r2, [sp, #4]
   469a0:	cmp	r1, r0
   469a4:	bhi	46a94 <Mat_VarGetSize+0x1e0>
   469a8:	mov	r6, #0
   469ac:	ldr	r0, [r5, r6, lsl #2]
   469b0:	cmp	r0, #0
   469b4:	beq	469e0 <Mat_VarGetSize+0x12c>
   469b8:	ldr	r1, [r0, #16]
   469bc:	cmp	r1, #0
   469c0:	beq	469d4 <Mat_VarGetSize+0x120>
   469c4:	bl	1a5c <Mat_VarGetSize@plt>
   469c8:	ldr	r1, [sp, #4]
   469cc:	add	r0, r1, r0
   469d0:	b	469dc <Mat_VarGetSize+0x128>
   469d4:	ldr	r0, [sp, #4]
   469d8:	sub	r0, r0, #56	; 0x38
   469dc:	str	r0, [sp, #4]
   469e0:	add	r6, r6, #1
   469e4:	cmp	r6, r4
   469e8:	bcc	469ac <Mat_VarGetSize+0xf8>
   469ec:	b	46a94 <Mat_VarGetSize+0x1e0>
   469f0:	ldr	r5, [r4, #40]	; 0x28
   469f4:	cmp	r5, #0
   469f8:	beq	46a94 <Mat_VarGetSize+0x1e0>
   469fc:	ldr	r6, [r5, #20]
   46a00:	ldr	r0, [r4, #8]
   46a04:	bl	193c <Mat_SizeOf@plt>
   46a08:	mul	r0, r0, r6
   46a0c:	str	r0, [sp, #4]
   46a10:	ldr	r1, [r4, #20]
   46a14:	cmp	r1, #0
   46a18:	lslne	r0, r0, #1
   46a1c:	strne	r0, [sp, #4]
   46a20:	ldr	r1, [r5, #8]
   46a24:	ldr	r2, [r5, #16]
   46a28:	add	r0, r2, r1
   46a2c:	ldr	r3, [sp, #4]
   46a30:	add	r0, r3, r0, lsl #2
   46a34:	str	r0, [sp, #4]
   46a38:	cmp	r2, #0
   46a3c:	cmpne	r1, #0
   46a40:	bne	46aa0 <Mat_VarGetSize+0x1ec>
   46a44:	ldr	r1, [r4, #28]
   46a48:	mov	r2, #1
   46a4c:	cmp	r1, #0
   46a50:	movweq	r2, #8
   46a54:	add	r0, r2, r0
   46a58:	b	46a90 <Mat_VarGetSize+0x1dc>
   46a5c:	ldr	r1, [r4, #4]
   46a60:	cmp	r1, #1
   46a64:	blt	46a94 <Mat_VarGetSize+0x1e0>
   46a68:	bl	1a38 <Mat_SizeOfClass@plt>
   46a6c:	str	r0, [sp, #4]
   46a70:	add	r1, sp, #4
   46a74:	mov	r0, r4
   46a78:	bl	4479c <SafeMulDims>
   46a7c:	ldr	r0, [r4, #20]
   46a80:	cmp	r0, #0
   46a84:	beq	46a94 <Mat_VarGetSize+0x1e0>
   46a88:	ldr	r0, [sp, #4]
   46a8c:	lsl	r0, r0, #1
   46a90:	str	r0, [sp, #4]
   46a94:	ldr	r0, [sp, #4]
   46a98:	sub	sp, fp, #16
   46a9c:	pop	{r4, r5, r6, sl, fp, pc}
   46aa0:	ldr	r1, [r5, #20]
   46aa4:	cmp	r1, #0
   46aa8:	bne	46a94 <Mat_VarGetSize+0x1e0>
   46aac:	b	46a44 <Mat_VarGetSize+0x190>

00046ab0 <Mat_VarPrint>:
   46ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46ab4:	add	fp, sp, #28
   46ab8:	sub	sp, sp, #12
   46abc:	mov	sl, r0
   46ac0:	mov	r0, #0
   46ac4:	str	r0, [sp, #8]
   46ac8:	cmp	sl, #0
   46acc:	beq	47278 <Mat_VarPrint+0x7c8>
   46ad0:	mov	r9, r1
   46ad4:	ldr	r1, [sl, #36]	; 0x24
   46ad8:	cmp	r1, #0
   46adc:	beq	46aec <Mat_VarPrint+0x3c>
   46ae0:	ldr	r0, [pc, #1944]	; 47280 <Mat_VarPrint+0x7d0>
   46ae4:	add	r0, pc, r0
   46ae8:	bl	17ec <printf@plt>
   46aec:	ldr	r1, [sl, #4]
   46af0:	ldr	r0, [pc, #1932]	; 47284 <Mat_VarPrint+0x7d4>
   46af4:	add	r0, pc, r0
   46af8:	bl	17ec <printf@plt>
   46afc:	ldr	r0, [sl, #4]
   46b00:	cmp	r0, #1
   46b04:	blt	47278 <Mat_VarPrint+0x7c8>
   46b08:	ldr	r0, [sl, #32]
   46b0c:	cmp	r0, #0
   46b10:	beq	46b78 <Mat_VarPrint+0xc8>
   46b14:	mov	r5, #1
   46b18:	str	r5, [sp, #8]
   46b1c:	add	r1, sp, #8
   46b20:	mov	r0, sl
   46b24:	bl	4479c <SafeMulDims>
   46b28:	ldr	r0, [sl, #32]
   46b2c:	ldr	r1, [r0]
   46b30:	ldr	r0, [pc, #1872]	; 47288 <Mat_VarPrint+0x7d8>
   46b34:	add	r0, pc, r0
   46b38:	bl	17ec <printf@plt>
   46b3c:	ldr	r0, [sl, #4]
   46b40:	cmp	r0, #2
   46b44:	blt	46b70 <Mat_VarPrint+0xc0>
   46b48:	ldr	r6, [pc, #1852]	; 4728c <Mat_VarPrint+0x7dc>
   46b4c:	add	r6, pc, r6
   46b50:	ldr	r0, [sl, #32]
   46b54:	ldr	r1, [r0, r5, lsl #2]
   46b58:	mov	r0, r6
   46b5c:	bl	17ec <printf@plt>
   46b60:	add	r5, r5, #1
   46b64:	ldr	r0, [sl, #4]
   46b68:	cmp	r5, r0
   46b6c:	blt	46b50 <Mat_VarPrint+0xa0>
   46b70:	mov	r0, #10
   46b74:	bl	19b4 <putchar@plt>
   46b78:	ldr	r0, [sl, #16]
   46b7c:	ldr	r1, [pc, #1804]	; 47290 <Mat_VarPrint+0x7e0>
   46b80:	add	r1, pc, r1
   46b84:	ldr	r1, [r1, r0, lsl #2]
   46b88:	ldr	r0, [pc, #1796]	; 47294 <Mat_VarPrint+0x7e4>
   46b8c:	add	r0, pc, r0
   46b90:	bl	17ec <printf@plt>
   46b94:	ldr	r0, [sl, #20]
   46b98:	cmp	r0, #0
   46b9c:	beq	46bac <Mat_VarPrint+0xfc>
   46ba0:	ldr	r0, [pc, #1776]	; 47298 <Mat_VarPrint+0x7e8>
   46ba4:	add	r0, pc, r0
   46ba8:	b	46bc0 <Mat_VarPrint+0x110>
   46bac:	ldr	r0, [sl, #28]
   46bb0:	cmp	r0, #0
   46bb4:	beq	46bc4 <Mat_VarPrint+0x114>
   46bb8:	ldr	r0, [pc, #1756]	; 4729c <Mat_VarPrint+0x7ec>
   46bbc:	add	r0, pc, r0
   46bc0:	bl	17ec <printf@plt>
   46bc4:	mov	r0, #10
   46bc8:	bl	19b4 <putchar@plt>
   46bcc:	ldr	r0, [sl, #8]
   46bd0:	cmp	r0, #0
   46bd4:	beq	46bf0 <Mat_VarPrint+0x140>
   46bd8:	ldr	r1, [pc, #1728]	; 472a0 <Mat_VarPrint+0x7f0>
   46bdc:	add	r1, pc, r1
   46be0:	ldr	r1, [r1, r0, lsl #2]
   46be4:	ldr	r0, [pc, #1720]	; 472a4 <Mat_VarPrint+0x7f4>
   46be8:	add	r0, pc, r0
   46bec:	bl	17ec <printf@plt>
   46bf0:	ldr	r0, [sl, #16]
   46bf4:	cmp	r0, #2
   46bf8:	bne	46c98 <Mat_VarPrint+0x1e8>
   46bfc:	ldr	r5, [sl, #40]	; 0x28
   46c00:	ldr	r0, [sl, #52]	; 0x34
   46c04:	ldr	r6, [r0, #4]
   46c08:	mov	r0, #1
   46c0c:	str	r0, [sp, #4]
   46c10:	ldr	r1, [sp, #8]
   46c14:	add	r0, sp, #4
   46c18:	mov	r2, r6
   46c1c:	bl	4481c <SafeMul>
   46c20:	ldr	r7, [sp, #4]
   46c24:	ldr	r0, [pc, #1660]	; 472a8 <Mat_VarPrint+0x7f8>
   46c28:	add	r0, pc, r0
   46c2c:	cmp	r7, #0
   46c30:	beq	46d14 <Mat_VarPrint+0x264>
   46c34:	mov	r1, r7
   46c38:	bl	17ec <printf@plt>
   46c3c:	mov	r4, #0
   46c40:	ldr	r8, [pc, #1636]	; 472ac <Mat_VarPrint+0x7fc>
   46c44:	add	r8, pc, r8
   46c48:	ldr	r0, [r5, r4, lsl #2]
   46c4c:	cmp	r0, #0
   46c50:	beq	46c60 <Mat_VarPrint+0x1b0>
   46c54:	mov	r1, r9
   46c58:	bl	1984 <Mat_VarPrint@plt>
   46c5c:	b	46c80 <Mat_VarPrint+0x1d0>
   46c60:	udiv	r0, r4, r6
   46c64:	mls	r0, r0, r6, r4
   46c68:	ldr	r1, [sl, #52]	; 0x34
   46c6c:	ldr	r1, [r1, #8]
   46c70:	ldr	r1, [r1, r0, lsl #2]
   46c74:	mov	r0, r8
   46c78:	mov	r2, #0
   46c7c:	bl	17ec <printf@plt>
   46c80:	add	r4, r4, #1
   46c84:	cmp	r7, r4
   46c88:	bne	46c48 <Mat_VarPrint+0x198>
   46c8c:	ldr	r0, [pc, #1564]	; 472b0 <Mat_VarPrint+0x800>
   46c90:	add	r0, pc, r0
   46c94:	b	47274 <Mat_VarPrint+0x7c4>
   46c98:	ldr	r5, [sl, #40]	; 0x28
   46c9c:	cmp	r5, #0
   46ca0:	beq	46d00 <Mat_VarPrint+0x250>
   46ca4:	ldr	r6, [sl, #12]
   46ca8:	cmp	r6, #0
   46cac:	ble	46d00 <Mat_VarPrint+0x250>
   46cb0:	cmp	r0, #1
   46cb4:	bne	46d60 <Mat_VarPrint+0x2b0>
   46cb8:	ldr	r7, [sl]
   46cbc:	udiv	r4, r7, r6
   46cc0:	str	r4, [sp, #8]
   46cc4:	ldr	r0, [pc, #1524]	; 472c0 <Mat_VarPrint+0x810>
   46cc8:	add	r0, pc, r0
   46ccc:	bl	18dc <puts@plt>
   46cd0:	cmp	r6, r7
   46cd4:	bhi	46cf4 <Mat_VarPrint+0x244>
   46cd8:	mov	r6, #0
   46cdc:	ldr	r0, [r5, r6, lsl #2]
   46ce0:	mov	r1, r9
   46ce4:	bl	1984 <Mat_VarPrint@plt>
   46ce8:	add	r6, r6, #1
   46cec:	cmp	r6, r4
   46cf0:	bcc	46cdc <Mat_VarPrint+0x22c>
   46cf4:	ldr	r0, [pc, #1480]	; 472c4 <Mat_VarPrint+0x814>
   46cf8:	add	r0, pc, r0
   46cfc:	b	47274 <Mat_VarPrint+0x7c4>
   46d00:	cmp	r9, #0
   46d04:	beq	47278 <Mat_VarPrint+0x7c8>
   46d08:	ldr	r0, [pc, #1452]	; 472bc <Mat_VarPrint+0x80c>
   46d0c:	add	r0, pc, r0
   46d10:	b	47274 <Mat_VarPrint+0x7c4>
   46d14:	mov	r1, r6
   46d18:	bl	17ec <printf@plt>
   46d1c:	cmp	r6, #0
   46d20:	beq	46d54 <Mat_VarPrint+0x2a4>
   46d24:	mov	r4, #0
   46d28:	ldr	r5, [pc, #1412]	; 472b4 <Mat_VarPrint+0x804>
   46d2c:	add	r5, pc, r5
   46d30:	ldr	r0, [sl, #52]	; 0x34
   46d34:	ldr	r0, [r0, #8]
   46d38:	ldr	r1, [r0, r4, lsl #2]
   46d3c:	mov	r0, r5
   46d40:	mov	r2, #0
   46d44:	bl	17ec <printf@plt>
   46d48:	add	r4, r4, #1
   46d4c:	cmp	r6, r4
   46d50:	bne	46d30 <Mat_VarPrint+0x280>
   46d54:	ldr	r0, [pc, #1372]	; 472b8 <Mat_VarPrint+0x808>
   46d58:	add	r0, pc, r0
   46d5c:	b	47274 <Mat_VarPrint+0x7c4>
   46d60:	cmp	r9, #0
   46d64:	beq	47278 <Mat_VarPrint+0x7c8>
   46d68:	ldr	r0, [pc, #1368]	; 472c8 <Mat_VarPrint+0x818>
   46d6c:	add	r0, pc, r0
   46d70:	bl	18dc <puts@plt>
   46d74:	ldr	r0, [sl, #4]
   46d78:	cmp	r0, #3
   46d7c:	blt	46d90 <Mat_VarPrint+0x2e0>
   46d80:	ldr	r0, [pc, #1348]	; 472cc <Mat_VarPrint+0x81c>
   46d84:	add	r0, pc, r0
   46d88:	bl	18dc <puts@plt>
   46d8c:	b	4726c <Mat_VarPrint+0x7bc>
   46d90:	cmp	r0, #2
   46d94:	beq	46dc8 <Mat_VarPrint+0x318>
   46d98:	cmp	r0, #1
   46d9c:	bne	4726c <Mat_VarPrint+0x7bc>
   46da0:	ldr	r0, [sl, #32]
   46da4:	cmp	r0, #0
   46da8:	beq	4726c <Mat_VarPrint+0x7bc>
   46dac:	ldr	r0, [r0]
   46db0:	cmp	r0, #16
   46db4:	bcc	4726c <Mat_VarPrint+0x7bc>
   46db8:	ldr	r0, [pc, #1296]	; 472d0 <Mat_VarPrint+0x820>
   46dbc:	add	r0, pc, r0
   46dc0:	bl	18dc <puts@plt>
   46dc4:	b	4726c <Mat_VarPrint+0x7bc>
   46dc8:	ldr	r0, [sl, #32]
   46dcc:	cmp	r0, #0
   46dd0:	beq	4726c <Mat_VarPrint+0x7bc>
   46dd4:	ldr	r0, [sl, #16]
   46dd8:	sub	r1, r0, #6
   46ddc:	cmp	r1, #10
   46de0:	bcs	46f88 <Mat_VarPrint+0x4d8>
   46de4:	ldr	r0, [sl, #8]
   46de8:	bl	193c <Mat_SizeOf@plt>
   46dec:	mov	r5, r0
   46df0:	ldr	r0, [sl, #20]
   46df4:	cmp	r0, #0
   46df8:	beq	46ed0 <Mat_VarPrint+0x420>
   46dfc:	ldr	r0, [sl, #32]
   46e00:	ldr	r0, [r0]
   46e04:	cmp	r0, #0
   46e08:	beq	4726c <Mat_VarPrint+0x7bc>
   46e0c:	ldr	r0, [sl, #40]	; 0x28
   46e10:	ldm	r0, {r6, r8}
   46e14:	mov	r7, #0
   46e18:	ldr	r0, [sl, #32]
   46e1c:	ldr	r1, [r0, #4]
   46e20:	cmp	r1, #0
   46e24:	beq	46e98 <Mat_VarPrint+0x3e8>
   46e28:	mov	r2, #1
   46e2c:	mov	r9, r2
   46e30:	ldr	r0, [r0]
   46e34:	sub	r1, r2, #1
   46e38:	mla	r4, r0, r1, r7
   46e3c:	mla	r1, r4, r5, r6
   46e40:	ldr	r0, [sl, #8]
   46e44:	bl	47308 <Mat_PrintNumber>
   46e48:	ldr	r0, [pc, #1168]	; 472e0 <Mat_VarPrint+0x830>
   46e4c:	add	r0, pc, r0
   46e50:	bl	17ec <printf@plt>
   46e54:	mla	r1, r4, r5, r8
   46e58:	ldr	r0, [sl, #8]
   46e5c:	bl	47308 <Mat_PrintNumber>
   46e60:	ldr	r0, [pc, #1148]	; 472e4 <Mat_VarPrint+0x834>
   46e64:	add	r0, pc, r0
   46e68:	bl	17ec <printf@plt>
   46e6c:	ldr	r0, [sl, #32]
   46e70:	ldr	r1, [r0, #4]
   46e74:	cmp	r9, #14
   46e78:	addls	r2, r9, #1
   46e7c:	cmpls	r9, r1
   46e80:	bcc	46e2c <Mat_VarPrint+0x37c>
   46e84:	cmp	r9, r1
   46e88:	bcs	46e98 <Mat_VarPrint+0x3e8>
   46e8c:	ldr	r0, [pc, #1108]	; 472e8 <Mat_VarPrint+0x838>
   46e90:	add	r0, pc, r0
   46e94:	bl	17ec <printf@plt>
   46e98:	mov	r0, #10
   46e9c:	bl	19b4 <putchar@plt>
   46ea0:	add	r7, r7, #1
   46ea4:	ldr	r0, [sl, #32]
   46ea8:	ldr	r0, [r0]
   46eac:	cmp	r7, #14
   46eb0:	cmpls	r7, r0
   46eb4:	bcc	46e18 <Mat_VarPrint+0x368>
   46eb8:	cmp	r7, r0
   46ebc:	bcs	4726c <Mat_VarPrint+0x7bc>
   46ec0:	ldr	r0, [pc, #1060]	; 472ec <Mat_VarPrint+0x83c>
   46ec4:	add	r0, pc, r0
   46ec8:	bl	18dc <puts@plt>
   46ecc:	b	4726c <Mat_VarPrint+0x7bc>
   46ed0:	ldr	r0, [sl, #32]
   46ed4:	ldr	r0, [r0]
   46ed8:	cmp	r0, #0
   46edc:	beq	4726c <Mat_VarPrint+0x7bc>
   46ee0:	ldr	r6, [sl, #40]	; 0x28
   46ee4:	mov	r7, #0
   46ee8:	ldr	r8, [pc, #1024]	; 472f0 <Mat_VarPrint+0x840>
   46eec:	add	r8, pc, r8
   46ef0:	ldr	r0, [sl, #32]
   46ef4:	ldr	r1, [r0, #4]
   46ef8:	cmp	r1, #0
   46efc:	beq	46f50 <Mat_VarPrint+0x4a0>
   46f00:	mov	r2, #1
   46f04:	mov	r4, r2
   46f08:	ldr	r0, [r0]
   46f0c:	sub	r1, r2, #1
   46f10:	mla	r0, r0, r1, r7
   46f14:	mla	r1, r0, r5, r6
   46f18:	ldr	r0, [sl, #8]
   46f1c:	bl	47308 <Mat_PrintNumber>
   46f20:	mov	r0, #32
   46f24:	bl	19b4 <putchar@plt>
   46f28:	ldr	r0, [sl, #32]
   46f2c:	ldr	r1, [r0, #4]
   46f30:	cmp	r4, #14
   46f34:	addls	r2, r4, #1
   46f38:	cmpls	r4, r1
   46f3c:	bcc	46f04 <Mat_VarPrint+0x454>
   46f40:	cmp	r4, r1
   46f44:	bcs	46f50 <Mat_VarPrint+0x4a0>
   46f48:	mov	r0, r8
   46f4c:	bl	17ec <printf@plt>
   46f50:	mov	r0, #10
   46f54:	bl	19b4 <putchar@plt>
   46f58:	add	r7, r7, #1
   46f5c:	ldr	r0, [sl, #32]
   46f60:	ldr	r0, [r0]
   46f64:	cmp	r7, #14
   46f68:	cmpls	r7, r0
   46f6c:	bcc	46ef0 <Mat_VarPrint+0x440>
   46f70:	cmp	r7, r0
   46f74:	bcs	4726c <Mat_VarPrint+0x7bc>
   46f78:	ldr	r0, [pc, #884]	; 472f4 <Mat_VarPrint+0x844>
   46f7c:	add	r0, pc, r0
   46f80:	bl	18dc <puts@plt>
   46f84:	b	4726c <Mat_VarPrint+0x7bc>
   46f88:	cmp	r0, #4
   46f8c:	beq	47074 <Mat_VarPrint+0x5c4>
   46f90:	cmp	r0, #5
   46f94:	bne	4726c <Mat_VarPrint+0x7bc>
   46f98:	ldr	r0, [sl, #8]
   46f9c:	bl	193c <Mat_SizeOf@plt>
   46fa0:	str	r0, [sp]
   46fa4:	ldr	r0, [sl, #20]
   46fa8:	ldr	r5, [sl, #40]	; 0x28
   46fac:	cmp	r0, #0
   46fb0:	beq	4715c <Mat_VarPrint+0x6ac>
   46fb4:	ldr	r0, [r5, #16]
   46fb8:	cmp	r0, #1
   46fbc:	beq	4726c <Mat_VarPrint+0x7bc>
   46fc0:	ldr	r0, [r5, #24]
   46fc4:	ldm	r0, {r8, r9}
   46fc8:	mov	r6, #0
   46fcc:	ldr	r0, [r5, #12]
   46fd0:	ldr	r7, [r0, r6, lsl #2]
   46fd4:	add	r6, r6, #1
   46fd8:	ldr	r0, [r0, r6, lsl #2]
   46fdc:	cmp	r7, r0
   46fe0:	bcs	47060 <Mat_VarPrint+0x5b0>
   46fe4:	ldr	r0, [sp]
   46fe8:	mul	r4, r0, r7
   46fec:	ldr	r0, [r5, #20]
   46ff0:	cmp	r7, r0
   46ff4:	bcs	47060 <Mat_VarPrint+0x5b0>
   46ff8:	ldr	r0, [r5, #4]
   46ffc:	ldr	r0, [r0, r7, lsl #2]
   47000:	add	r1, r0, #1
   47004:	ldr	r0, [pc, #712]	; 472d4 <Mat_VarPrint+0x824>
   47008:	add	r0, pc, r0
   4700c:	mov	r2, r6
   47010:	bl	17ec <printf@plt>
   47014:	add	r1, r8, r4
   47018:	ldr	r0, [sl, #8]
   4701c:	bl	47308 <Mat_PrintNumber>
   47020:	ldr	r0, [pc, #688]	; 472d8 <Mat_VarPrint+0x828>
   47024:	add	r0, pc, r0
   47028:	bl	17ec <printf@plt>
   4702c:	add	r1, r9, r4
   47030:	ldr	r0, [sl, #8]
   47034:	bl	47308 <Mat_PrintNumber>
   47038:	ldr	r0, [pc, #668]	; 472dc <Mat_VarPrint+0x82c>
   4703c:	add	r0, pc, r0
   47040:	bl	18dc <puts@plt>
   47044:	ldr	r0, [sp]
   47048:	add	r4, r4, r0
   4704c:	ldr	r0, [r5, #12]
   47050:	ldr	r0, [r0, r6, lsl #2]
   47054:	add	r7, r7, #1
   47058:	cmp	r7, r0
   4705c:	bcc	46fec <Mat_VarPrint+0x53c>
   47060:	ldr	r0, [r5, #16]
   47064:	sub	r0, r0, #1
   47068:	cmp	r6, r0
   4706c:	bcc	46fcc <Mat_VarPrint+0x51c>
   47070:	b	4726c <Mat_VarPrint+0x7bc>
   47074:	ldr	r0, [sl, #8]
   47078:	cmp	r0, #17
   4707c:	cmpne	r0, #4
   47080:	bne	47200 <Mat_VarPrint+0x750>
   47084:	ldr	r0, [sl, #32]
   47088:	ldr	r0, [r0]
   4708c:	cmp	r0, #0
   47090:	beq	4726c <Mat_VarPrint+0x7bc>
   47094:	ldr	r7, [sl, #40]	; 0x28
   47098:	mov	r5, #0
   4709c:	mov	r6, #2
   470a0:	ldr	r4, [pc, #592]	; 472f8 <Mat_VarPrint+0x848>
   470a4:	add	r4, pc, r4
   470a8:	mov	r9, #0
   470ac:	ldr	r0, [sl, #32]
   470b0:	ldr	r1, [r0, #4]
   470b4:	cmp	r1, #0
   470b8:	beq	4713c <Mat_VarPrint+0x68c>
   470bc:	mov	r8, #0
   470c0:	ldr	r0, [r0]
   470c4:	mla	r0, r0, r8, r9
   470c8:	add	r0, r7, r0, lsl #1
   470cc:	ldrh	r3, [r0]
   470d0:	cmp	r3, #127	; 0x7f
   470d4:	bhi	470e4 <Mat_VarPrint+0x634>
   470d8:	mov	r0, r3
   470dc:	bl	19b4 <putchar@plt>
   470e0:	b	47128 <Mat_VarPrint+0x678>
   470e4:	cmp	r5, r3, lsr #11
   470e8:	bne	4710c <Mat_VarPrint+0x65c>
   470ec:	mov	r0, #192	; 0xc0
   470f0:	orr	r1, r0, r3, lsr #6
   470f4:	bfi	r3, r6, #6, #26
   470f8:	ldr	r0, [pc, #508]	; 472fc <Mat_VarPrint+0x84c>
   470fc:	add	r0, pc, r0
   47100:	mov	r2, r3
   47104:	bl	17ec <printf@plt>
   47108:	b	47128 <Mat_VarPrint+0x678>
   4710c:	mov	r0, #224	; 0xe0
   47110:	orr	r1, r0, r3, lsr #12
   47114:	lsr	r2, r3, #6
   47118:	bfi	r3, r6, #6, #26
   4711c:	bfi	r2, r6, #6, #26
   47120:	mov	r0, r4
   47124:	bl	17ec <printf@plt>
   47128:	add	r8, r8, #1
   4712c:	ldr	r0, [sl, #32]
   47130:	ldr	r1, [r0, #4]
   47134:	cmp	r8, r1
   47138:	bcc	470c0 <Mat_VarPrint+0x610>
   4713c:	mov	r0, #10
   47140:	bl	19b4 <putchar@plt>
   47144:	add	r9, r9, #1
   47148:	ldr	r0, [sl, #32]
   4714c:	ldr	r0, [r0]
   47150:	cmp	r9, r0
   47154:	bcc	470ac <Mat_VarPrint+0x5fc>
   47158:	b	4726c <Mat_VarPrint+0x7bc>
   4715c:	ldr	r0, [r5, #16]
   47160:	cmp	r0, #1
   47164:	beq	4726c <Mat_VarPrint+0x7bc>
   47168:	ldr	r9, [r5, #24]
   4716c:	mov	r4, #0
   47170:	ldr	r8, [pc, #392]	; 47300 <Mat_VarPrint+0x850>
   47174:	add	r8, pc, r8
   47178:	ldr	r0, [r5, #12]
   4717c:	ldr	r6, [r0, r4, lsl #2]
   47180:	add	r4, r4, #1
   47184:	ldr	r0, [r0, r4, lsl #2]
   47188:	cmp	r6, r0
   4718c:	bcs	471ec <Mat_VarPrint+0x73c>
   47190:	ldr	r0, [sp]
   47194:	mla	r7, r0, r6, r9
   47198:	ldr	r0, [r5, #20]
   4719c:	cmp	r6, r0
   471a0:	bcs	471ec <Mat_VarPrint+0x73c>
   471a4:	ldr	r0, [r5, #4]
   471a8:	ldr	r0, [r0, r6, lsl #2]
   471ac:	add	r1, r0, #1
   471b0:	mov	r0, r8
   471b4:	mov	r2, r4
   471b8:	bl	17ec <printf@plt>
   471bc:	ldr	r0, [sl, #8]
   471c0:	mov	r1, r7
   471c4:	bl	47308 <Mat_PrintNumber>
   471c8:	mov	r0, #10
   471cc:	bl	19b4 <putchar@plt>
   471d0:	ldr	r0, [sp]
   471d4:	add	r7, r7, r0
   471d8:	ldr	r0, [r5, #12]
   471dc:	ldr	r0, [r0, r4, lsl #2]
   471e0:	add	r6, r6, #1
   471e4:	cmp	r6, r0
   471e8:	bcc	47198 <Mat_VarPrint+0x6e8>
   471ec:	ldr	r0, [r5, #16]
   471f0:	sub	r0, r0, #1
   471f4:	cmp	r4, r0
   471f8:	bcc	47178 <Mat_VarPrint+0x6c8>
   471fc:	b	4726c <Mat_VarPrint+0x7bc>
   47200:	ldr	r0, [sl, #32]
   47204:	ldr	r0, [r0]
   47208:	cmp	r0, #0
   4720c:	beq	4726c <Mat_VarPrint+0x7bc>
   47210:	ldr	r5, [sl, #40]	; 0x28
   47214:	mov	r6, #0
   47218:	ldr	r0, [sl, #32]
   4721c:	ldr	r1, [r0, #4]
   47220:	cmp	r1, #0
   47224:	beq	47250 <Mat_VarPrint+0x7a0>
   47228:	mov	r4, #0
   4722c:	ldr	r0, [r0]
   47230:	mla	r0, r0, r4, r6
   47234:	ldrb	r0, [r5, r0]
   47238:	bl	19b4 <putchar@plt>
   4723c:	add	r4, r4, #1
   47240:	ldr	r0, [sl, #32]
   47244:	ldr	r1, [r0, #4]
   47248:	cmp	r4, r1
   4724c:	bcc	4722c <Mat_VarPrint+0x77c>
   47250:	mov	r0, #10
   47254:	bl	19b4 <putchar@plt>
   47258:	add	r6, r6, #1
   4725c:	ldr	r0, [sl, #32]
   47260:	ldr	r0, [r0]
   47264:	cmp	r6, r0
   47268:	bcc	47218 <Mat_VarPrint+0x768>
   4726c:	ldr	r0, [pc, #144]	; 47304 <Mat_VarPrint+0x854>
   47270:	add	r0, pc, r0
   47274:	bl	18dc <puts@plt>
   47278:	sub	sp, fp, #28
   4727c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47280:	.word	0x000030cc
   47284:	.word	0x000032ce
   47288:	.word	0x0000308c
   4728c:	.word	0x00003084
   47290:	.word	0x000142cc
   47294:	.word	0x0000304b
   47298:	.word	0x00003042
   4729c:	.word	0x00003035
   472a0:	.word	0x000142b8
   472a4:	.word	0x000031ac
   472a8:	.word	0x0000317c
   472ac:	.word	0x0000316f
   472b0:	.word	0x00003281
   472b4:	.word	0x00003087
   472b8:	.word	0x000031b9
   472bc:	.word	0x00003203
   472c0:	.word	0x0000323f
   472c4:	.word	0x00003219
   472c8:	.word	0x0000319b
   472cc:	.word	0x000031c4
   472d0:	.word	0x0000315c
   472d4:	.word	0x00002ddc
   472d8:	.word	0x00002dae
   472dc:	.word	0x00002eaf
   472e0:	.word	0x00002f86
   472e4:	.word	0x00002f72
   472e8:	.word	0x00002f49
   472ec:	.word	0x00003045
   472f0:	.word	0x00002eed
   472f4:	.word	0x00002f8d
   472f8:	.word	0x00002d39
   472fc:	.word	0x00002ce3
   47300:	.word	0x00002c70
   47304:	.word	0x00002ca1

00047308 <Mat_PrintNumber>:
   47308:	sub	r0, r0, #1
   4730c:	cmp	r0, #12
   47310:	bxhi	lr
   47314:	add	r2, pc, #4
   47318:	ldr	r0, [r2, r0, lsl #2]
   4731c:	add	pc, r2, r0
   47320:	.word	0x00000034
   47324:	.word	0x00000044
   47328:	.word	0x00000054
   4732c:	.word	0x00000064
   47330:	.word	0x00000074
   47334:	.word	0x00000084
   47338:	.word	0x00000094
   4733c:	.word	0x000000d4
   47340:	.word	0x000000a0
   47344:	.word	0x000000d4
   47348:	.word	0x000000d4
   4734c:	.word	0x000000b4
   47350:	.word	0x000000c4
   47354:	ldrsb	r1, [r1]
   47358:	ldr	r0, [pc, #180]	; 47414 <Mat_PrintNumber+0x10c>
   4735c:	add	r0, pc, r0
   47360:	b	17ec <printf@plt>
   47364:	ldrb	r1, [r1]
   47368:	ldr	r0, [pc, #168]	; 47418 <Mat_PrintNumber+0x110>
   4736c:	add	r0, pc, r0
   47370:	b	17ec <printf@plt>
   47374:	ldrsh	r1, [r1]
   47378:	ldr	r0, [pc, #140]	; 4740c <Mat_PrintNumber+0x104>
   4737c:	add	r0, pc, r0
   47380:	b	17ec <printf@plt>
   47384:	ldrh	r1, [r1]
   47388:	ldr	r0, [pc, #128]	; 47410 <Mat_PrintNumber+0x108>
   4738c:	add	r0, pc, r0
   47390:	b	17ec <printf@plt>
   47394:	ldr	r1, [r1]
   47398:	ldr	r0, [pc, #100]	; 47404 <Mat_PrintNumber+0xfc>
   4739c:	add	r0, pc, r0
   473a0:	b	17ec <printf@plt>
   473a4:	ldr	r1, [r1]
   473a8:	ldr	r0, [pc, #88]	; 47408 <Mat_PrintNumber+0x100>
   473ac:	add	r0, pc, r0
   473b0:	b	17ec <printf@plt>
   473b4:	vldr	s0, [r1]
   473b8:	vcvt.f64.f32	d16, s0
   473bc:	b	473c4 <Mat_PrintNumber+0xbc>
   473c0:	vldr	d16, [r1]
   473c4:	vmov	r2, r3, d16
   473c8:	ldr	r0, [pc, #40]	; 473f8 <Mat_PrintNumber+0xf0>
   473cc:	add	r0, pc, r0
   473d0:	b	17ec <printf@plt>
   473d4:	ldrd	r2, [r1]
   473d8:	ldr	r0, [pc, #28]	; 473fc <Mat_PrintNumber+0xf4>
   473dc:	add	r0, pc, r0
   473e0:	b	17ec <printf@plt>
   473e4:	ldrd	r2, [r1]
   473e8:	ldr	r0, [pc, #16]	; 47400 <Mat_PrintNumber+0xf8>
   473ec:	add	r0, pc, r0
   473f0:	b	17ec <printf@plt>
   473f4:	bx	lr
   473f8:	.word	0x00002b19
   473fc:	.word	0x00002b0c
   47400:	.word	0x00002b01
   47404:	.word	0x0000225c
   47408:	.word	0x00002b46
   4740c:	.word	0x00002b79
   47410:	.word	0x00002b6d
   47414:	.word	0x00002ba1
   47418:	.word	0x00002b96

0004741c <Mat_VarReadData>:
   4741c:	push	{fp, lr}
   47420:	mov	fp, sp
   47424:	ldr	ip, [r1, #16]
   47428:	sub	lr, ip, #6
   4742c:	mvn	ip, #0
   47430:	cmp	lr, #9
   47434:	bhi	47468 <Mat_VarReadData+0x4c>
   47438:	ldr	ip, [r0, #16]
   4743c:	cmp	ip, #16
   47440:	beq	47470 <Mat_VarReadData+0x54>
   47444:	cmp	ip, #512	; 0x200
   47448:	moveq	ip, #1
   4744c:	moveq	r0, ip
   47450:	popeq	{fp, pc}
   47454:	cmp	ip, #256	; 0x100
   47458:	bne	47464 <Mat_VarReadData+0x48>
   4745c:	pop	{fp, lr}
   47460:	b	21c54 <Mat_VarReadData5>
   47464:	mov	ip, #2
   47468:	mov	r0, ip
   4746c:	pop	{fp, pc}
   47470:	pop	{fp, lr}
   47474:	b	440cc <Mat_VarReadData4>

00047478 <Mat_VarReadDataAll>:
   47478:	mov	r2, r0
   4747c:	mov	r0, #1
   47480:	cmp	r2, #0
   47484:	cmpne	r1, #0
   47488:	bne	47490 <Mat_VarReadDataAll+0x18>
   4748c:	bx	lr
   47490:	push	{fp, lr}
   47494:	mov	fp, sp
   47498:	mov	r0, r2
   4749c:	bl	474ac <ReadData>
   474a0:	mov	r0, #0
   474a4:	pop	{fp, lr}
   474a8:	bx	lr

000474ac <ReadData>:
   474ac:	cmp	r0, #0
   474b0:	beq	474c4 <ReadData+0x18>
   474b4:	cmp	r1, #0
   474b8:	ldrne	r2, [r0]
   474bc:	cmpne	r2, #0
   474c0:	bne	474c8 <ReadData+0x1c>
   474c4:	bx	lr
   474c8:	ldr	r2, [r0, #16]
   474cc:	cmp	r2, #16
   474d0:	beq	474e0 <ReadData+0x34>
   474d4:	cmp	r2, #256	; 0x100
   474d8:	bxne	lr
   474dc:	b	1ff14 <Mat_VarRead5>
   474e0:	b	437f0 <Mat_VarRead4>

000474e4 <Mat_VarReadDataLinear>:
   474e4:	push	{fp, lr}
   474e8:	mov	fp, sp
   474ec:	ldr	ip, [r1, #16]
   474f0:	sub	lr, ip, #6
   474f4:	mvn	ip, #0
   474f8:	cmp	lr, #9
   474fc:	bhi	47530 <Mat_VarReadDataLinear+0x4c>
   47500:	ldr	ip, [r0, #16]
   47504:	cmp	ip, #16
   47508:	beq	47538 <Mat_VarReadDataLinear+0x54>
   4750c:	cmp	ip, #512	; 0x200
   47510:	moveq	ip, #1
   47514:	moveq	r0, ip
   47518:	popeq	{fp, pc}
   4751c:	cmp	ip, #256	; 0x100
   47520:	bne	4752c <Mat_VarReadDataLinear+0x48>
   47524:	pop	{fp, lr}
   47528:	b	3de64 <Mat_VarReadDataLinear5>
   4752c:	mov	ip, #2
   47530:	mov	r0, ip
   47534:	pop	{fp, pc}
   47538:	pop	{fp, lr}
   4753c:	b	442e8 <Mat_VarReadDataLinear4>

00047540 <Mat_VarReadInfo>:
   47540:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   47544:	add	fp, sp, #24
   47548:	mov	r5, #0
   4754c:	cmp	r0, #0
   47550:	movne	r6, r1
   47554:	cmpne	r1, #0
   47558:	bne	47564 <Mat_VarReadInfo+0x24>
   4755c:	mov	r0, r5
   47560:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47564:	mov	r4, r0
   47568:	ldr	r0, [r0, #16]
   4756c:	cmp	r0, #512	; 0x200
   47570:	bne	475d8 <Mat_VarReadInfo+0x98>
   47574:	ldr	r8, [r4, #32]
   47578:	ldr	r0, [r4, #36]	; 0x24
   4757c:	mov	r5, #0
   47580:	str	r5, [r4, #32]
   47584:	cmp	r0, #0
   47588:	beq	4767c <Mat_VarReadInfo+0x13c>
   4758c:	mov	r0, r4
   47590:	bl	1a8c <Mat_VarReadNextInfo@plt>
   47594:	cmp	r0, #0
   47598:	beq	47670 <Mat_VarReadInfo+0x130>
   4759c:	mov	r7, r0
   475a0:	ldr	r0, [r0, #36]	; 0x24
   475a4:	cmp	r0, #0
   475a8:	beq	475bc <Mat_VarReadInfo+0x7c>
   475ac:	mov	r1, r6
   475b0:	bl	17c8 <strcmp@plt>
   475b4:	cmp	r0, #0
   475b8:	beq	47688 <Mat_VarReadInfo+0x148>
   475bc:	mov	r0, r7
   475c0:	bl	1930 <Mat_VarFree@plt>
   475c4:	ldr	r0, [r4, #32]
   475c8:	ldr	r1, [r4, #36]	; 0x24
   475cc:	cmp	r0, r1
   475d0:	bcc	4758c <Mat_VarReadInfo+0x4c>
   475d4:	b	4767c <Mat_VarReadInfo+0x13c>
   475d8:	ldr	r0, [r4]
   475dc:	bl	1858 <ftell@plt>
   475e0:	cmn	r0, #1
   475e4:	beq	4765c <Mat_VarReadInfo+0x11c>
   475e8:	mov	r7, r0
   475ec:	ldr	r0, [r4]
   475f0:	ldr	r1, [r4, #28]
   475f4:	mov	r2, #0
   475f8:	bl	1a68 <fseek@plt>
   475fc:	mov	r0, r4
   47600:	bl	1a8c <Mat_VarReadNextInfo@plt>
   47604:	cmp	r0, #0
   47608:	beq	47638 <Mat_VarReadInfo+0xf8>
   4760c:	mov	r5, r0
   47610:	ldr	r0, [r0, #36]	; 0x24
   47614:	cmp	r0, #0
   47618:	beq	4762c <Mat_VarReadInfo+0xec>
   4761c:	mov	r1, r6
   47620:	bl	17c8 <strcmp@plt>
   47624:	cmp	r0, #0
   47628:	beq	476a4 <Mat_VarReadInfo+0x164>
   4762c:	mov	r0, r5
   47630:	bl	1930 <Mat_VarFree@plt>
   47634:	b	47648 <Mat_VarReadInfo+0x108>
   47638:	ldr	r0, [r4]
   4763c:	bl	1924 <feof@plt>
   47640:	cmp	r0, #0
   47644:	beq	47694 <Mat_VarReadInfo+0x154>
   47648:	ldr	r0, [r4]
   4764c:	bl	1924 <feof@plt>
   47650:	cmp	r0, #0
   47654:	beq	475fc <Mat_VarReadInfo+0xbc>
   47658:	b	476a0 <Mat_VarReadInfo+0x160>
   4765c:	ldr	r0, [pc, #96]	; 476c4 <Mat_VarReadInfo+0x184>
   47660:	add	r0, pc, r0
   47664:	bl	19cc <Mat_Critical@plt>
   47668:	mov	r0, r5
   4766c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47670:	ldr	r0, [pc, #68]	; 476bc <Mat_VarReadInfo+0x17c>
   47674:	add	r0, pc, r0
   47678:	bl	19cc <Mat_Critical@plt>
   4767c:	str	r8, [r4, #32]
   47680:	mov	r0, r5
   47684:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47688:	str	r8, [r4, #32]
   4768c:	mov	r0, r7
   47690:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47694:	ldr	r0, [pc, #36]	; 476c0 <Mat_VarReadInfo+0x180>
   47698:	add	r0, pc, r0
   4769c:	bl	19cc <Mat_Critical@plt>
   476a0:	mov	r5, #0
   476a4:	ldr	r0, [r4]
   476a8:	mov	r1, r7
   476ac:	mov	r2, #0
   476b0:	bl	1a68 <fseek@plt>
   476b4:	mov	r0, r5
   476b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   476bc:	.word	0x00001eb0
   476c0:	.word	0x00001e8c
   476c4:	.word	0x00001c38

000476c8 <Mat_VarRead>:
   476c8:	push	{r4, r5, r6, r7, fp, lr}
   476cc:	add	fp, sp, #16
   476d0:	mov	r4, #0
   476d4:	cmp	r0, #0
   476d8:	movne	r6, r1
   476dc:	cmpne	r1, #0
   476e0:	bne	476ec <Mat_VarRead+0x24>
   476e4:	mov	r0, r4
   476e8:	pop	{r4, r5, r6, r7, fp, pc}
   476ec:	mov	r5, r0
   476f0:	ldr	r0, [r0, #16]
   476f4:	cmp	r0, #512	; 0x200
   476f8:	bne	47738 <Mat_VarRead+0x70>
   476fc:	ldr	r7, [r5, #32]
   47700:	mov	r0, #0
   47704:	str	r0, [r5, #32]
   47708:	mov	r0, r5
   4770c:	mov	r1, r6
   47710:	bl	1894 <Mat_VarReadInfo@plt>
   47714:	mov	r4, r0
   47718:	cmp	r0, #0
   4771c:	beq	4772c <Mat_VarRead+0x64>
   47720:	mov	r0, r5
   47724:	mov	r1, r4
   47728:	bl	474ac <ReadData>
   4772c:	str	r7, [r5, #32]
   47730:	mov	r0, r4
   47734:	pop	{r4, r5, r6, r7, fp, pc}
   47738:	ldr	r0, [r5]
   4773c:	bl	1858 <ftell@plt>
   47740:	cmn	r0, #1
   47744:	beq	47788 <Mat_VarRead+0xc0>
   47748:	mov	r7, r0
   4774c:	mov	r0, r5
   47750:	mov	r1, r6
   47754:	bl	1894 <Mat_VarReadInfo@plt>
   47758:	mov	r4, r0
   4775c:	cmp	r0, #0
   47760:	beq	47770 <Mat_VarRead+0xa8>
   47764:	mov	r0, r5
   47768:	mov	r1, r4
   4776c:	bl	474ac <ReadData>
   47770:	ldr	r0, [r5]
   47774:	mov	r1, r7
   47778:	mov	r2, #0
   4777c:	bl	1a68 <fseek@plt>
   47780:	mov	r0, r4
   47784:	pop	{r4, r5, r6, r7, fp, pc}
   47788:	ldr	r0, [pc, #12]	; 4779c <Mat_VarRead+0xd4>
   4778c:	add	r0, pc, r0
   47790:	bl	19cc <Mat_Critical@plt>
   47794:	mov	r0, r4
   47798:	pop	{r4, r5, r6, r7, fp, pc}
   4779c:	.word	0x00001b0c

000477a0 <Mat_VarWriteInfo>:
   477a0:	push	{fp, lr}
   477a4:	mov	fp, sp
   477a8:	ldr	r0, [r0, #16]
   477ac:	ldr	r2, [pc, #36]	; 477d8 <Mat_VarWriteInfo+0x38>
   477b0:	add	r2, pc, r2
   477b4:	ldr	r1, [pc, #32]	; 477dc <Mat_VarWriteInfo+0x3c>
   477b8:	add	r1, pc, r1
   477bc:	cmp	r0, #512	; 0x200
   477c0:	moveq	r1, r2
   477c4:	ldr	r0, [pc, #20]	; 477e0 <Mat_VarWriteInfo+0x40>
   477c8:	add	r0, pc, r0
   477cc:	bl	19cc <Mat_Critical@plt>
   477d0:	mov	r0, #1
   477d4:	pop	{fp, pc}
   477d8:	.word	0x00002687
   477dc:	.word	0x0000269f
   477e0:	.word	0x0000262b

000477e4 <Mat_VarWriteData>:
   477e4:	push	{fp, lr}
   477e8:	mov	fp, sp
   477ec:	ldr	r0, [r0, #16]
   477f0:	ldr	r2, [pc, #36]	; 4781c <Mat_VarWriteData+0x38>
   477f4:	add	r2, pc, r2
   477f8:	ldr	r1, [pc, #32]	; 47820 <Mat_VarWriteData+0x3c>
   477fc:	add	r1, pc, r1
   47800:	cmp	r0, #512	; 0x200
   47804:	moveq	r1, r2
   47808:	ldr	r0, [pc, #20]	; 47824 <Mat_VarWriteData+0x40>
   4780c:	add	r0, pc, r0
   47810:	bl	19cc <Mat_Critical@plt>
   47814:	mov	r0, #1
   47818:	pop	{fp, pc}
   4781c:	.word	0x00002643
   47820:	.word	0x0000265b
   47824:	.word	0x000025e7

00047828 <Mat_VarWriteAppend>:
   47828:	push	{r4, sl, fp, lr}
   4782c:	add	fp, sp, #8
   47830:	sub	sp, sp, #8
   47834:	mov	r4, r0
   47838:	mvn	r0, #0
   4783c:	cmp	r4, #0
   47840:	cmpne	r1, #0
   47844:	bne	47850 <Mat_VarWriteAppend+0x28>
   47848:	sub	sp, fp, #8
   4784c:	pop	{r4, sl, fp, pc}
   47850:	ldr	r0, [r4, #40]	; 0x28
   47854:	cmp	r0, #0
   47858:	bne	47870 <Mat_VarWriteAppend+0x48>
   4785c:	mov	r0, #0
   47860:	str	r0, [sp, #4]
   47864:	add	r1, sp, #4
   47868:	mov	r0, r4
   4786c:	bl	1948 <Mat_GetDir@plt>
   47870:	ldr	r1, [r4, #16]
   47874:	mov	r0, #2
   47878:	cmp	r1, #512	; 0x200
   4787c:	movweq	r0, #1
   47880:	sub	sp, fp, #8
   47884:	pop	{r4, sl, fp, pc}

00047888 <Mat_VarGetCell>:
   47888:	push	{r4, r5, r6, sl, fp, lr}
   4788c:	add	fp, sp, #16
   47890:	sub	sp, sp, #8
   47894:	mov	r6, r0
   47898:	mov	r0, #1
   4789c:	str	r0, [sp, #4]
   478a0:	mov	r4, #0
   478a4:	cmp	r6, #0
   478a8:	beq	478d4 <Mat_VarGetCell+0x4c>
   478ac:	mov	r5, r1
   478b0:	add	r1, sp, #4
   478b4:	mov	r0, r6
   478b8:	bl	4479c <SafeMulDims>
   478bc:	cmp	r5, #0
   478c0:	blt	478d4 <Mat_VarGetCell+0x4c>
   478c4:	ldr	r0, [sp, #4]
   478c8:	cmp	r0, r5
   478cc:	ldrhi	r0, [r6, #40]	; 0x28
   478d0:	ldrhi	r4, [r0, r5, lsl #2]
   478d4:	mov	r0, r4
   478d8:	sub	sp, fp, #16
   478dc:	pop	{r4, r5, r6, sl, fp, pc}

000478e0 <Mat_VarGetCells>:
   478e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   478e4:	add	fp, sp, #28
   478e8:	sub	sp, sp, #164	; 0xa4
   478ec:	str	r2, [sp, #8]
   478f0:	mov	r8, r0
   478f4:	vmov.i32	q8, #0	; 0x00000000
   478f8:	mov	r0, #36	; 0x24
   478fc:	sub	r9, fp, #72	; 0x48
   47900:	mov	r2, r9
   47904:	vst1.64	{d16-d17}, [r2], r0
   47908:	mov	sl, #0
   4790c:	str	sl, [r2]
   47910:	add	r2, r9, #16
   47914:	vst1.64	{d16-d17}, [r2]
   47918:	str	sl, [fp, #-40]	; 0xffffffd8
   4791c:	add	r2, sp, #80	; 0x50
   47920:	add	r6, r2, #16
   47924:	vst1.64	{d16-d17}, [r6]
   47928:	vst1.64	{d16-d17}, [r2], r0
   4792c:	str	sl, [r2]
   47930:	str	sl, [sp, #112]	; 0x70
   47934:	add	r2, sp, #40	; 0x28
   47938:	add	r6, r2, #16
   4793c:	vst1.64	{d16-d17}, [r6]
   47940:	vst1.64	{d16-d17}, [r2], r0
   47944:	str	sl, [r2]
   47948:	str	sl, [sp, #72]	; 0x48
   4794c:	cmp	r8, #0
   47950:	cmpne	r1, #0
   47954:	beq	47968 <Mat_VarGetCells+0x88>
   47958:	ldr	r0, [sp, #8]
   4795c:	cmp	r0, #0
   47960:	cmpne	r3, #0
   47964:	bne	47974 <Mat_VarGetCells+0x94>
   47968:	mov	r0, sl
   4796c:	sub	sp, fp, #28
   47970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47974:	ldr	r6, [r8, #4]
   47978:	cmp	r6, #9
   4797c:	bgt	47968 <Mat_VarGetCells+0x88>
   47980:	ldr	r4, [r8, #32]
   47984:	ldr	r0, [r4]
   47988:	str	r0, [sp, #40]	; 0x28
   4798c:	str	r3, [sp, #16]
   47990:	ldr	r0, [r3]
   47994:	str	r1, [sp, #12]
   47998:	ldr	r5, [r1]
   4799c:	str	r5, [fp, #-72]	; 0xffffffb8
   479a0:	cmp	r6, #2
   479a4:	str	r0, [sp, #28]
   479a8:	str	r5, [sp, #32]
   479ac:	blt	47a14 <Mat_VarGetCells+0x134>
   479b0:	mvn	r0, #3
   479b4:	add	r2, r0, r6, lsl #2
   479b8:	orr	r0, r9, #4
   479bc:	ldr	r1, [sp, #12]
   479c0:	add	sl, r1, #4
   479c4:	mov	r1, sl
   479c8:	bl	1834 <memcpy@plt>
   479cc:	sub	ip, r6, #1
   479d0:	ldr	r0, [sp, #16]
   479d4:	add	r1, r0, #4
   479d8:	add	r2, sp, #40	; 0x28
   479dc:	orr	r2, r2, #4
   479e0:	add	r3, r4, #4
   479e4:	ldr	r4, [sp, #40]	; 0x28
   479e8:	ldr	r5, [sp, #32]
   479ec:	ldr	r0, [sp, #28]
   479f0:	ldr	r7, [sl], #4
   479f4:	mla	r5, r4, r7, r5
   479f8:	ldr	r7, [r3], #4
   479fc:	mul	r4, r7, r4
   47a00:	str	r4, [r2], #4
   47a04:	ldr	r7, [r1], #4
   47a08:	mul	r0, r7, r0
   47a0c:	subs	ip, ip, #1
   47a10:	bne	479f0 <Mat_VarGetCells+0x110>
   47a14:	str	r0, [sp, #24]
   47a18:	lsl	r0, r0, #2
   47a1c:	bl	18e8 <malloc@plt>
   47a20:	mov	sl, r0
   47a24:	ldr	r0, [sp, #24]
   47a28:	cmp	r0, #1
   47a2c:	blt	47968 <Mat_VarGetCells+0x88>
   47a30:	str	r8, [sp, #4]
   47a34:	str	r6, [sp, #20]
   47a38:	sub	r1, r6, #1
   47a3c:	ldr	r0, [sp, #8]
   47a40:	add	r2, r0, #8
   47a44:	str	r2, [sp, #36]	; 0x24
   47a48:	ldr	r2, [sp, #12]
   47a4c:	add	r8, r2, #4
   47a50:	ldr	r2, [sp, #16]
   47a54:	add	r6, r2, #4
   47a58:	ldr	r3, [sp, #28]
   47a5c:	lsl	r2, r3, #2
   47a60:	str	r2, [sp, #16]
   47a64:	ldr	r0, [r0, #4]
   47a68:	str	r0, [sp, #12]
   47a6c:	str	sl, [sp]
   47a70:	mov	lr, #0
   47a74:	cmp	r3, #1
   47a78:	blt	47aac <Mat_VarGetCells+0x1cc>
   47a7c:	ldr	r0, [sp, #4]
   47a80:	ldr	r0, [r0, #40]	; 0x28
   47a84:	add	r2, r0, r5, lsl #2
   47a88:	ldr	r0, [sp, #8]
   47a8c:	ldr	r0, [r0]
   47a90:	lsl	r4, r0, #2
   47a94:	mov	r0, sl
   47a98:	mov	r5, r3
   47a9c:	ldr	r7, [r2], r4
   47aa0:	str	r7, [r0], #4
   47aa4:	subs	r5, r5, #1
   47aa8:	bne	47a9c <Mat_VarGetCells+0x1bc>
   47aac:	ldr	r5, [sp, #32]
   47ab0:	str	r5, [fp, #-72]	; 0xffffffb8
   47ab4:	ldr	r0, [sp, #84]	; 0x54
   47ab8:	add	r0, r0, #1
   47abc:	str	r0, [sp, #84]	; 0x54
   47ac0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   47ac4:	ldr	r2, [sp, #12]
   47ac8:	add	r0, r0, r2
   47acc:	str	r0, [fp, #-68]	; 0xffffffbc
   47ad0:	ldr	r0, [sp, #20]
   47ad4:	cmp	r0, #2
   47ad8:	blt	47b5c <Mat_VarGetCells+0x27c>
   47adc:	mov	r2, #0
   47ae0:	ldr	r5, [sp, #32]
   47ae4:	mov	r4, r2
   47ae8:	ldr	r0, [r6, r2, lsl #2]
   47aec:	add	r2, sp, #80	; 0x50
   47af0:	add	ip, r2, r4, lsl #2
   47af4:	ldr	r7, [ip, #4]
   47af8:	add	r2, r4, #1
   47afc:	cmp	r7, r0
   47b00:	bne	47b40 <Mat_VarGetCells+0x260>
   47b04:	mov	r0, #0
   47b08:	str	r0, [ip, #4]
   47b0c:	ldr	r7, [r8, r4, lsl #2]
   47b10:	add	r0, r9, r4, lsl #2
   47b14:	str	r7, [r0, #4]
   47b18:	cmp	r2, r1
   47b1c:	bge	47b40 <Mat_VarGetCells+0x260>
   47b20:	ldr	r7, [ip, #8]
   47b24:	add	r7, r7, #1
   47b28:	str	r7, [ip, #8]
   47b2c:	ldr	r3, [sp, #36]	; 0x24
   47b30:	ldr	r7, [r3, r4, lsl #2]
   47b34:	ldr	r3, [r0, #8]
   47b38:	add	r3, r3, r7
   47b3c:	str	r3, [r0, #8]
   47b40:	add	r0, sp, #40	; 0x28
   47b44:	ldr	r0, [r0, r4, lsl #2]
   47b48:	add	r3, r9, r4, lsl #2
   47b4c:	ldr	r3, [r3, #4]
   47b50:	mla	r5, r0, r3, r5
   47b54:	cmp	r1, r2
   47b58:	bne	47ae4 <Mat_VarGetCells+0x204>
   47b5c:	ldr	r0, [sp, #16]
   47b60:	add	sl, sl, r0
   47b64:	ldr	r3, [sp, #28]
   47b68:	add	lr, lr, r3
   47b6c:	ldr	r0, [sp, #24]
   47b70:	cmp	lr, r0
   47b74:	blt	47a74 <Mat_VarGetCells+0x194>
   47b78:	ldr	sl, [sp]
   47b7c:	b	47968 <Mat_VarGetCells+0x88>

00047b80 <Mat_VarGetCellsLinear>:
   47b80:	push	{r4, r5, r6, r7, fp, lr}
   47b84:	add	fp, sp, #16
   47b88:	cmp	r0, #0
   47b8c:	moveq	r0, #0
   47b90:	popeq	{r4, r5, r6, r7, fp, pc}
   47b94:	mov	r4, r3
   47b98:	mov	r5, r2
   47b9c:	mov	r6, r1
   47ba0:	mov	r7, r0
   47ba4:	lsl	r0, r3, #2
   47ba8:	bl	18e8 <malloc@plt>
   47bac:	cmp	r4, #1
   47bb0:	poplt	{r4, r5, r6, r7, fp, pc}
   47bb4:	ldr	r1, [r7, #40]	; 0x28
   47bb8:	add	r1, r1, r6, lsl #2
   47bbc:	lsl	r2, r5, #2
   47bc0:	mov	r3, r0
   47bc4:	ldr	r7, [r1], r2
   47bc8:	str	r7, [r3], #4
   47bcc:	subs	r4, r4, #1
   47bd0:	bne	47bc4 <Mat_VarGetCellsLinear+0x44>
   47bd4:	pop	{r4, r5, r6, r7, fp, pc}

00047bd8 <Mat_VarSetCell>:
   47bd8:	push	{r4, r5, r6, r7, fp, lr}
   47bdc:	add	fp, sp, #16
   47be0:	sub	sp, sp, #8
   47be4:	mov	r7, r0
   47be8:	mov	r0, #1
   47bec:	str	r0, [sp, #4]
   47bf0:	mov	r4, #0
   47bf4:	cmp	r7, #0
   47bf8:	beq	47c38 <Mat_VarSetCell+0x60>
   47bfc:	ldr	r0, [r7, #4]
   47c00:	cmp	r0, #1
   47c04:	blt	47c38 <Mat_VarSetCell+0x60>
   47c08:	mov	r5, r2
   47c0c:	mov	r6, r1
   47c10:	add	r1, sp, #4
   47c14:	mov	r0, r7
   47c18:	bl	4479c <SafeMulDims>
   47c1c:	cmp	r6, #0
   47c20:	blt	47c38 <Mat_VarSetCell+0x60>
   47c24:	ldr	r0, [sp, #4]
   47c28:	cmp	r0, r6
   47c2c:	ldrhi	r0, [r7, #40]	; 0x28
   47c30:	ldrhi	r4, [r0, r6, lsl #2]
   47c34:	strhi	r5, [r0, r6, lsl #2]
   47c38:	mov	r0, r4
   47c3c:	sub	sp, fp, #16
   47c40:	pop	{r4, r5, r6, r7, fp, pc}

00047c44 <Mat_VarCreateStruct>:
   47c44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47c48:	add	fp, sp, #28
   47c4c:	sub	sp, sp, #4
   47c50:	mov	r5, #0
   47c54:	cmp	r2, #0
   47c58:	beq	47da4 <Mat_VarCreateStruct+0x160>
   47c5c:	mov	r9, r3
   47c60:	mov	r6, r2
   47c64:	mov	sl, r1
   47c68:	mov	r7, r0
   47c6c:	bl	18b8 <Mat_VarCalloc@plt>
   47c70:	cmp	r0, #0
   47c74:	beq	47da4 <Mat_VarCreateStruct+0x160>
   47c78:	mov	r4, r0
   47c7c:	mov	r0, #0
   47c80:	str	r0, [r4, #48]	; 0x30
   47c84:	cmp	r7, #0
   47c88:	beq	47c98 <Mat_VarCreateStruct+0x54>
   47c8c:	mov	r0, r7
   47c90:	bl	187c <strdup@plt>
   47c94:	str	r0, [r4, #36]	; 0x24
   47c98:	ldr	r8, [fp, #8]
   47c9c:	str	sl, [r4, #4]
   47ca0:	lsl	r0, sl, #2
   47ca4:	bl	18e8 <malloc@plt>
   47ca8:	str	r0, [r4, #32]
   47cac:	ldr	r0, [r4, #4]
   47cb0:	cmp	r0, #1
   47cb4:	blt	47ce8 <Mat_VarCreateStruct+0xa4>
   47cb8:	ldr	r0, [r4, #32]
   47cbc:	mov	r7, #1
   47cc0:	mov	r1, #0
   47cc4:	ldr	r2, [r6, r1, lsl #2]
   47cc8:	str	r2, [r0, r1, lsl #2]
   47ccc:	ldr	r2, [r6, r1, lsl #2]
   47cd0:	mul	r7, r2, r7
   47cd4:	add	r1, r1, #1
   47cd8:	ldr	r2, [r4, #4]
   47cdc:	cmp	r1, r2
   47ce0:	blt	47cc4 <Mat_VarCreateStruct+0x80>
   47ce4:	b	47cec <Mat_VarCreateStruct+0xa8>
   47ce8:	mov	r7, #1
   47cec:	mov	r0, #22
   47cf0:	mov	r1, #2
   47cf4:	mov	r2, #4
   47cf8:	str	r0, [r4, #8]
   47cfc:	str	r2, [r4, #12]
   47d00:	str	r1, [r4, #16]
   47d04:	cmp	r8, #0
   47d08:	beq	47d90 <Mat_VarCreateStruct+0x14c>
   47d0c:	ldr	r0, [r4, #52]	; 0x34
   47d10:	str	r8, [r0, #4]
   47d14:	lsl	r0, r8, #2
   47d18:	bl	18e8 <malloc@plt>
   47d1c:	ldr	r1, [r4, #52]	; 0x34
   47d20:	str	r0, [r1, #8]
   47d24:	cmp	r0, #0
   47d28:	beq	47d98 <Mat_VarCreateStruct+0x154>
   47d2c:	mov	r5, #0
   47d30:	ldr	r0, [r9, r5, lsl #2]
   47d34:	cmp	r0, #0
   47d38:	beq	47d98 <Mat_VarCreateStruct+0x154>
   47d3c:	bl	187c <strdup@plt>
   47d40:	ldr	r1, [r4, #52]	; 0x34
   47d44:	ldr	r1, [r1, #8]
   47d48:	str	r0, [r1, r5, lsl #2]
   47d4c:	add	r5, r5, #1
   47d50:	cmp	r5, r8
   47d54:	bcc	47d30 <Mat_VarCreateStruct+0xec>
   47d58:	cmp	r7, #0
   47d5c:	beq	47d90 <Mat_VarCreateStruct+0x14c>
   47d60:	mov	r0, sp
   47d64:	mov	r1, r7
   47d68:	mov	r2, r8
   47d6c:	bl	4481c <SafeMul>
   47d70:	ldr	r2, [r4, #12]
   47d74:	ldr	r1, [sp]
   47d78:	mov	r0, r4
   47d7c:	bl	4481c <SafeMul>
   47d80:	ldr	r1, [r4, #12]
   47d84:	ldr	r0, [sp]
   47d88:	bl	17b0 <calloc@plt>
   47d8c:	str	r0, [r4, #40]	; 0x28
   47d90:	mov	r5, r4
   47d94:	b	47da4 <Mat_VarCreateStruct+0x160>
   47d98:	mov	r0, r4
   47d9c:	bl	1930 <Mat_VarFree@plt>
   47da0:	mov	r5, #0
   47da4:	mov	r0, r5
   47da8:	sub	sp, fp, #28
   47dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00047db0 <Mat_VarAddStructField>:
   47db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47db4:	add	fp, sp, #28
   47db8:	sub	sp, sp, #12
   47dbc:	mov	r9, r0
   47dc0:	mov	r0, #1
   47dc4:	str	r0, [sp, #8]
   47dc8:	mvn	r8, #0
   47dcc:	cmp	r9, #0
   47dd0:	movne	r6, r1
   47dd4:	cmpne	r1, #0
   47dd8:	bne	47de8 <Mat_VarAddStructField+0x38>
   47ddc:	mov	r0, r8
   47de0:	sub	sp, fp, #28
   47de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47de8:	add	r1, sp, #8
   47dec:	mov	r0, r9
   47df0:	bl	4479c <SafeMulDims>
   47df4:	ldr	r1, [r9, #52]	; 0x34
   47df8:	ldr	sl, [r1, #4]
   47dfc:	ldr	r0, [r1, #8]
   47e00:	add	r7, sl, #1
   47e04:	str	r7, [r1, #4]
   47e08:	lsl	r1, r7, #2
   47e0c:	bl	1888 <realloc@plt>
   47e10:	cmp	r0, #0
   47e14:	beq	47ddc <Mat_VarAddStructField+0x2c>
   47e18:	ldr	r1, [r9, #52]	; 0x34
   47e1c:	str	r0, [r1, #8]
   47e20:	mov	r0, r6
   47e24:	bl	187c <strdup@plt>
   47e28:	ldr	r1, [r9, #52]	; 0x34
   47e2c:	ldr	r1, [r1, #8]
   47e30:	str	r0, [r1, sl, lsl #2]
   47e34:	ldr	r1, [sp, #8]
   47e38:	add	r0, sp, #4
   47e3c:	mov	r2, r7
   47e40:	bl	4481c <SafeMul>
   47e44:	ldr	r1, [sp, #4]
   47e48:	mov	r0, r9
   47e4c:	mov	r2, #4
   47e50:	bl	4481c <SafeMul>
   47e54:	ldr	r0, [r9]
   47e58:	bl	18e8 <malloc@plt>
   47e5c:	cmp	r0, #0
   47e60:	beq	47ee0 <Mat_VarAddStructField+0x130>
   47e64:	mov	r6, r0
   47e68:	ldr	r0, [sp, #8]
   47e6c:	cmp	r0, #0
   47e70:	beq	47ecc <Mat_VarAddStructField+0x11c>
   47e74:	ldr	r1, [r9, #40]	; 0x28
   47e78:	lsl	lr, sl, #2
   47e7c:	mov	ip, #0
   47e80:	ldr	r8, [sp, #8]
   47e84:	mov	r7, #0
   47e88:	mov	r2, #0
   47e8c:	cmp	sl, #0
   47e90:	beq	47eb4 <Mat_VarAddStructField+0x104>
   47e94:	add	r4, r6, r7, lsl #2
   47e98:	mov	r0, r1
   47e9c:	mov	r5, sl
   47ea0:	ldr	r3, [r0], #4
   47ea4:	str	r3, [r4], #4
   47ea8:	subs	r5, r5, #1
   47eac:	bne	47ea0 <Mat_VarAddStructField+0xf0>
   47eb0:	add	r7, sl, r7
   47eb4:	str	ip, [r6, r7, lsl #2]
   47eb8:	add	r1, r1, lr
   47ebc:	add	r2, r2, #1
   47ec0:	add	r7, r7, #1
   47ec4:	cmp	r2, r8
   47ec8:	bcc	47e8c <Mat_VarAddStructField+0xdc>
   47ecc:	ldr	r0, [r9, #40]	; 0x28
   47ed0:	bl	181c <free@plt>
   47ed4:	str	r6, [r9, #40]	; 0x28
   47ed8:	mov	r8, #0
   47edc:	b	47ddc <Mat_VarAddStructField+0x2c>
   47ee0:	mov	r0, #0
   47ee4:	str	r0, [r9]
   47ee8:	b	47ddc <Mat_VarAddStructField+0x2c>

00047eec <Mat_VarGetNumberOfFields>:
   47eec:	mov	r1, r0
   47ef0:	mov	r0, #0
   47ef4:	cmp	r1, #0
   47ef8:	bxeq	lr
   47efc:	ldr	r2, [r1, #16]
   47f00:	cmp	r2, #2
   47f04:	bne	47f14 <Mat_VarGetNumberOfFields+0x28>
   47f08:	ldr	r1, [r1, #52]	; 0x34
   47f0c:	cmp	r1, #0
   47f10:	ldrne	r0, [r1, #4]
   47f14:	bx	lr

00047f18 <Mat_VarGetStructFieldnames>:
   47f18:	mov	r1, r0
   47f1c:	mov	r0, #0
   47f20:	cmp	r1, #0
   47f24:	bxeq	lr
   47f28:	ldr	r2, [r1, #16]
   47f2c:	cmp	r2, #2
   47f30:	bne	47f40 <Mat_VarGetStructFieldnames+0x28>
   47f34:	ldr	r1, [r1, #52]	; 0x34
   47f38:	cmp	r1, #0
   47f3c:	ldrne	r0, [r1, #8]
   47f40:	bx	lr

00047f44 <Mat_VarGetStructFieldByIndex>:
   47f44:	push	{r4, r5, r6, r7, fp, lr}
   47f48:	add	fp, sp, #16
   47f4c:	sub	sp, sp, #8
   47f50:	mov	r7, r0
   47f54:	mov	r0, #1
   47f58:	str	r0, [sp, #4]
   47f5c:	mov	r4, #0
   47f60:	cmp	r7, #0
   47f64:	beq	47fec <Mat_VarGetStructFieldByIndex+0xa8>
   47f68:	ldr	r0, [r7, #16]
   47f6c:	cmp	r0, #2
   47f70:	bne	47fec <Mat_VarGetStructFieldByIndex+0xa8>
   47f74:	ldr	r0, [r7, #12]
   47f78:	cmp	r0, #0
   47f7c:	beq	47fec <Mat_VarGetStructFieldByIndex+0xa8>
   47f80:	mov	r6, r2
   47f84:	mov	r5, r1
   47f88:	add	r1, sp, #4
   47f8c:	mov	r0, r7
   47f90:	bl	4479c <SafeMulDims>
   47f94:	ldr	r0, [sp, #4]
   47f98:	sub	r0, r0, #1
   47f9c:	cmp	r0, r6
   47fa0:	bcs	47fb4 <Mat_VarGetStructFieldByIndex+0x70>
   47fa4:	ldr	r0, [pc, #76]	; 47ff8 <Mat_VarGetStructFieldByIndex+0xb4>
   47fa8:	add	r0, pc, r0
   47fac:	bl	19cc <Mat_Critical@plt>
   47fb0:	b	47fec <Mat_VarGetStructFieldByIndex+0xa8>
   47fb4:	ldr	r0, [r7, #52]	; 0x34
   47fb8:	ldr	r0, [r0, #4]
   47fbc:	cmp	r0, #0
   47fc0:	beq	47fec <Mat_VarGetStructFieldByIndex+0xa8>
   47fc4:	cmp	r0, r5
   47fc8:	bcs	47fdc <Mat_VarGetStructFieldByIndex+0x98>
   47fcc:	ldr	r0, [pc, #40]	; 47ffc <Mat_VarGetStructFieldByIndex+0xb8>
   47fd0:	add	r0, pc, r0
   47fd4:	bl	19cc <Mat_Critical@plt>
   47fd8:	b	47fec <Mat_VarGetStructFieldByIndex+0xa8>
   47fdc:	mul	r0, r0, r6
   47fe0:	ldr	r1, [r7, #40]	; 0x28
   47fe4:	add	r0, r1, r0, lsl #2
   47fe8:	ldr	r4, [r0, r5, lsl #2]
   47fec:	mov	r0, r4
   47ff0:	sub	sp, fp, #16
   47ff4:	pop	{r4, r5, r6, r7, fp, pc}
   47ff8:	.word	0x00002040
   47ffc:	.word	0x0000204d

00048000 <Mat_VarGetStructFieldByName>:
   48000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48004:	add	fp, sp, #28
   48008:	sub	sp, sp, #4
   4800c:	mov	r6, r0
   48010:	mov	r0, #1
   48014:	str	r0, [sp]
   48018:	mov	sl, #0
   4801c:	cmp	r6, #0
   48020:	beq	480c0 <Mat_VarGetStructFieldByName+0xc0>
   48024:	ldr	r0, [r6, #16]
   48028:	cmp	r0, #2
   4802c:	bne	480c0 <Mat_VarGetStructFieldByName+0xc0>
   48030:	ldr	r0, [r6, #12]
   48034:	cmp	r0, #0
   48038:	beq	480c0 <Mat_VarGetStructFieldByName+0xc0>
   4803c:	mov	r9, r2
   48040:	mov	r7, r1
   48044:	mov	r1, sp
   48048:	mov	r0, r6
   4804c:	bl	4479c <SafeMulDims>
   48050:	ldr	r0, [r6, #52]	; 0x34
   48054:	ldr	r5, [r0, #4]
   48058:	mvn	r4, #0
   4805c:	cmp	r5, #1
   48060:	blt	48090 <Mat_VarGetStructFieldByName+0x90>
   48064:	ldr	r8, [r0, #8]
   48068:	mov	r4, #0
   4806c:	ldr	r0, [r8, r4, lsl #2]
   48070:	mov	r1, r7
   48074:	bl	17c8 <strcmp@plt>
   48078:	cmp	r0, #0
   4807c:	beq	48090 <Mat_VarGetStructFieldByName+0x90>
   48080:	add	r4, r4, #1
   48084:	cmp	r4, r5
   48088:	blt	4806c <Mat_VarGetStructFieldByName+0x6c>
   4808c:	mvn	r4, #0
   48090:	ldr	r0, [sp]
   48094:	cmp	r0, r9
   48098:	bls	480b4 <Mat_VarGetStructFieldByName+0xb4>
   4809c:	cmp	r4, #0
   480a0:	mulge	r0, r5, r9
   480a4:	ldrge	r1, [r6, #40]	; 0x28
   480a8:	addge	r0, r1, r0, lsl #2
   480ac:	ldrge	sl, [r0, r4, lsl #2]
   480b0:	b	480c0 <Mat_VarGetStructFieldByName+0xc0>
   480b4:	ldr	r0, [pc, #16]	; 480cc <Mat_VarGetStructFieldByName+0xcc>
   480b8:	add	r0, pc, r0
   480bc:	bl	19cc <Mat_Critical@plt>
   480c0:	mov	r0, sl
   480c4:	sub	sp, fp, #28
   480c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   480cc:	.word	0x00001f30

000480d0 <Mat_VarGetStructField>:
   480d0:	push	{r4, r5, r6, r7, fp, lr}
   480d4:	add	fp, sp, #16
   480d8:	sub	sp, sp, #8
   480dc:	mov	r4, r3
   480e0:	mov	r7, r2
   480e4:	mov	r6, r1
   480e8:	mov	r5, r0
   480ec:	mov	r0, #1
   480f0:	str	r0, [sp, #4]
   480f4:	add	r1, sp, #4
   480f8:	mov	r0, r5
   480fc:	bl	4479c <SafeMulDims>
   48100:	mov	r0, #0
   48104:	cmp	r4, #0
   48108:	blt	48178 <Mat_VarGetStructField+0xa8>
   4810c:	ldr	r1, [sp, #4]
   48110:	sub	r1, r1, #1
   48114:	cmp	r1, r4
   48118:	bcc	48178 <Mat_VarGetStructField+0xa8>
   4811c:	ldr	r1, [r5, #52]	; 0x34
   48120:	ldr	r1, [r1, #4]
   48124:	cmp	r7, #2
   48128:	bne	48158 <Mat_VarGetStructField+0x88>
   4812c:	cmp	r1, #1
   48130:	blt	48158 <Mat_VarGetStructField+0x88>
   48134:	ldr	r1, [r6]
   48138:	cmp	r1, #0
   4813c:	beq	48178 <Mat_VarGetStructField+0xa8>
   48140:	sub	r1, r1, #1
   48144:	mov	r0, r5
   48148:	mov	r2, r4
   4814c:	bl	1a44 <Mat_VarGetStructFieldByIndex@plt>
   48150:	sub	sp, fp, #16
   48154:	pop	{r4, r5, r6, r7, fp, pc}
   48158:	cmp	r7, #1
   4815c:	bne	48178 <Mat_VarGetStructField+0xa8>
   48160:	cmp	r1, #1
   48164:	blt	48178 <Mat_VarGetStructField+0xa8>
   48168:	mov	r0, r5
   4816c:	mov	r1, r6
   48170:	mov	r2, r4
   48174:	bl	1a2c <Mat_VarGetStructFieldByName@plt>
   48178:	sub	sp, fp, #16
   4817c:	pop	{r4, r5, r6, r7, fp, pc}

00048180 <Mat_VarGetStructs>:
   48180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48184:	add	fp, sp, #28
   48188:	sub	sp, sp, #172	; 0xac
   4818c:	str	r2, [sp, #44]	; 0x2c
   48190:	mov	r8, r1
   48194:	mov	r7, r0
   48198:	vmov.i32	q8, #0	; 0x00000000
   4819c:	mov	r0, #36	; 0x24
   481a0:	sub	r5, fp, #72	; 0x48
   481a4:	mov	r1, r5
   481a8:	vst1.64	{d16-d17}, [r1], r0
   481ac:	mov	r4, #0
   481b0:	str	r4, [r1]
   481b4:	add	r1, r5, #16
   481b8:	vst1.64	{d16-d17}, [r1]
   481bc:	str	r4, [fp, #-40]	; 0xffffffd8
   481c0:	add	r2, sp, #88	; 0x58
   481c4:	add	r1, r2, #16
   481c8:	vst1.64	{d16-d17}, [r1]
   481cc:	mov	r1, r2
   481d0:	vst1.64	{d16-d17}, [r1], r0
   481d4:	str	r4, [r1]
   481d8:	str	r4, [sp, #120]	; 0x78
   481dc:	add	r2, sp, #48	; 0x30
   481e0:	add	r1, r2, #16
   481e4:	vst1.64	{d16-d17}, [r1]
   481e8:	mov	r1, r2
   481ec:	vst1.64	{d16-d17}, [r1], r0
   481f0:	str	r4, [r1]
   481f4:	str	r4, [sp, #80]	; 0x50
   481f8:	cmp	r7, #0
   481fc:	cmpne	r8, #0
   48200:	beq	48218 <Mat_VarGetStructs+0x98>
   48204:	ldr	r0, [sp, #44]	; 0x2c
   48208:	cmp	r0, #0
   4820c:	movne	r6, r3
   48210:	cmpne	r3, #0
   48214:	bne	48224 <Mat_VarGetStructs+0xa4>
   48218:	mov	r0, r4
   4821c:	sub	sp, fp, #28
   48220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48224:	ldr	r0, [r7, #4]
   48228:	cmp	r0, #9
   4822c:	bgt	48218 <Mat_VarGetStructs+0x98>
   48230:	ldr	r0, [r7, #16]
   48234:	cmp	r0, #2
   48238:	bne	48218 <Mat_VarGetStructs+0x98>
   4823c:	ldr	r4, [fp, #8]
   48240:	mov	r0, r7
   48244:	mov	r1, #0
   48248:	bl	1a80 <Mat_VarDuplicate@plt>
   4824c:	cmp	r4, #0
   48250:	moveq	r1, #1
   48254:	streq	r1, [r0, #44]	; 0x2c
   48258:	ldr	ip, [r7, #32]
   4825c:	ldr	r1, [r7, #52]	; 0x34
   48260:	ldr	r1, [r1, #4]
   48264:	str	r1, [sp, #32]
   48268:	ldr	r1, [ip]
   4826c:	str	r1, [sp, #48]	; 0x30
   48270:	ldr	r9, [r8]
   48274:	str	r0, [sp]
   48278:	ldr	lr, [r0, #32]
   4827c:	ldr	sl, [r6]
   48280:	str	sl, [lr]
   48284:	ldr	r2, [r8]
   48288:	str	r2, [fp, #-72]	; 0xffffffb8
   4828c:	ldr	r2, [r7, #4]
   48290:	cmp	r2, #2
   48294:	blt	482e0 <Mat_VarGetStructs+0x160>
   48298:	add	r0, sp, #48	; 0x30
   4829c:	orr	r2, r0, #4
   482a0:	mov	r3, #1
   482a4:	ldr	r1, [r8, r3, lsl #2]
   482a8:	str	r1, [r5, r3, lsl #2]
   482ac:	ldr	r4, [ip, r3, lsl #2]
   482b0:	ldr	r0, [r2, #-4]
   482b4:	mul	r4, r4, r0
   482b8:	str	r4, [r2]
   482bc:	ldr	r4, [r6, r3, lsl #2]
   482c0:	str	r4, [lr, r3, lsl #2]
   482c4:	mla	r9, r0, r1, r9
   482c8:	mul	sl, r4, sl
   482cc:	add	r2, r2, #4
   482d0:	add	r3, r3, #1
   482d4:	ldr	r0, [r7, #4]
   482d8:	cmp	r3, r0
   482dc:	blt	482a4 <Mat_VarGetStructs+0x124>
   482e0:	ldr	r5, [sp, #32]
   482e4:	mul	r0, r5, sl
   482e8:	lsl	r0, r0, #2
   482ec:	ldr	r4, [sp]
   482f0:	str	r0, [r4]
   482f4:	bl	18e8 <malloc@plt>
   482f8:	str	r0, [r4, #40]	; 0x28
   482fc:	mov	r1, r0
   48300:	str	r0, [sp, #4]
   48304:	cmp	r0, #0
   48308:	beq	484e0 <Mat_VarGetStructs+0x360>
   4830c:	cmp	sl, #0
   48310:	beq	48218 <Mat_VarGetStructs+0x98>
   48314:	ldr	r0, [sp, #44]	; 0x2c
   48318:	add	r0, r0, #8
   4831c:	str	r0, [sp, #20]
   48320:	add	r0, r8, #4
   48324:	str	r0, [sp, #24]
   48328:	add	r0, r6, #4
   4832c:	str	r0, [sp, #36]	; 0x24
   48330:	lsl	r0, r5, #2
   48334:	str	r0, [sp, #40]	; 0x28
   48338:	mov	r0, #0
   4833c:	str	r0, [sp, #16]
   48340:	str	r6, [sp, #28]
   48344:	str	r8, [sp, #12]
   48348:	str	sl, [sp, #8]
   4834c:	ldr	r0, [r6]
   48350:	cmp	r0, #1
   48354:	blt	483e4 <Mat_VarGetStructs+0x264>
   48358:	ldr	r0, [sp, #4]
   4835c:	ldr	r1, [sp, #40]	; 0x28
   48360:	ldr	r2, [sp, #16]
   48364:	mla	r8, r1, r2, r0
   48368:	mul	sl, r9, r5
   4836c:	mov	r4, #0
   48370:	cmp	r5, #0
   48374:	beq	483bc <Mat_VarGetStructs+0x23c>
   48378:	mov	r9, r5
   4837c:	mov	r5, r8
   48380:	mov	r6, sl
   48384:	ldr	r0, [r7, #40]	; 0x28
   48388:	ldr	r0, [r0, r6, lsl #2]
   4838c:	ldr	r1, [fp, #8]
   48390:	cmp	r1, #0
   48394:	beq	483a0 <Mat_VarGetStructs+0x220>
   48398:	mov	r1, #1
   4839c:	bl	1a80 <Mat_VarDuplicate@plt>
   483a0:	str	r0, [r5], #4
   483a4:	subs	r9, r9, #1
   483a8:	add	r6, r6, #1
   483ac:	bne	48384 <Mat_VarGetStructs+0x204>
   483b0:	ldr	r5, [sp, #32]
   483b4:	add	sl, r5, sl
   483b8:	ldr	r6, [sp, #28]
   483bc:	ldr	r0, [sp, #44]	; 0x2c
   483c0:	ldr	r0, [r0]
   483c4:	sub	r0, r0, #1
   483c8:	mla	sl, r0, r5, sl
   483cc:	ldr	r0, [sp, #40]	; 0x28
   483d0:	add	r8, r8, r0
   483d4:	add	r4, r4, #1
   483d8:	ldr	r0, [r6]
   483dc:	cmp	r4, r0
   483e0:	blt	48370 <Mat_VarGetStructs+0x1f0>
   483e4:	ldr	r8, [sp, #12]
   483e8:	ldr	r9, [r8]
   483ec:	str	r9, [fp, #-72]	; 0xffffffb8
   483f0:	ldr	r1, [sp, #92]	; 0x5c
   483f4:	add	r1, r1, #1
   483f8:	str	r1, [sp, #92]	; 0x5c
   483fc:	ldr	r1, [sp, #44]	; 0x2c
   48400:	ldr	r1, [r1, #4]
   48404:	ldr	r2, [fp, #-68]	; 0xffffffbc
   48408:	add	r1, r2, r1
   4840c:	str	r1, [fp, #-68]	; 0xffffffbc
   48410:	ldr	r1, [r7, #4]
   48414:	cmp	r1, #2
   48418:	blt	484b4 <Mat_VarGetStructs+0x334>
   4841c:	ldr	ip, [r7, #4]
   48420:	mov	r2, #0
   48424:	sub	lr, fp, #72	; 0x48
   48428:	add	sl, sp, #88	; 0x58
   4842c:	mov	r3, r2
   48430:	ldr	r2, [sp, #36]	; 0x24
   48434:	ldr	r5, [r2, r3, lsl #2]
   48438:	add	r4, sl, r3, lsl #2
   4843c:	ldr	r6, [r4, #4]
   48440:	add	r2, r3, #1
   48444:	cmp	r6, r5
   48448:	bne	48490 <Mat_VarGetStructs+0x310>
   4844c:	mov	r5, #0
   48450:	str	r5, [r4, #4]
   48454:	ldr	r5, [sp, #24]
   48458:	ldr	r6, [r5, r3, lsl #2]
   4845c:	add	r5, lr, r3, lsl #2
   48460:	str	r6, [r5, #4]
   48464:	sub	r1, r1, #1
   48468:	cmp	r2, r1
   4846c:	bge	48490 <Mat_VarGetStructs+0x310>
   48470:	ldr	r1, [r4, #8]
   48474:	add	r1, r1, #1
   48478:	str	r1, [r4, #8]
   4847c:	ldr	r1, [sp, #20]
   48480:	ldr	r1, [r1, r3, lsl #2]
   48484:	ldr	r6, [r5, #8]
   48488:	add	r1, r6, r1
   4848c:	str	r1, [r5, #8]
   48490:	add	r1, sp, #48	; 0x30
   48494:	ldr	r1, [r1, r3, lsl #2]
   48498:	add	r6, lr, r3, lsl #2
   4849c:	ldr	r6, [r6, #4]
   484a0:	mla	r9, r1, r6, r9
   484a4:	add	r1, r3, #2
   484a8:	cmp	r1, ip
   484ac:	mov	r1, ip
   484b0:	blt	4842c <Mat_VarGetStructs+0x2ac>
   484b4:	ldr	r1, [sp, #16]
   484b8:	add	r1, r0, r1
   484bc:	ldr	sl, [sp, #8]
   484c0:	mov	r0, r1
   484c4:	str	r1, [sp, #16]
   484c8:	cmp	r1, sl
   484cc:	ldr	r6, [sp, #28]
   484d0:	ldr	r5, [sp, #32]
   484d4:	bcc	4834c <Mat_VarGetStructs+0x1cc>
   484d8:	ldr	r4, [sp]
   484dc:	b	48218 <Mat_VarGetStructs+0x98>
   484e0:	mov	r0, r4
   484e4:	bl	1930 <Mat_VarFree@plt>
   484e8:	mov	r4, #0
   484ec:	b	48218 <Mat_VarGetStructs+0x98>

000484f0 <Mat_VarGetStructsLinear>:
   484f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   484f4:	add	fp, sp, #28
   484f8:	sub	sp, sp, #20
   484fc:	mov	r5, #0
   48500:	cmp	r0, #0
   48504:	beq	48658 <Mat_VarGetStructsLinear+0x168>
   48508:	mov	r6, r0
   4850c:	ldr	r0, [r0, #4]
   48510:	cmp	r0, #10
   48514:	bgt	48658 <Mat_VarGetStructsLinear+0x168>
   48518:	mov	r9, r3
   4851c:	mov	r8, r2
   48520:	mov	r4, r1
   48524:	ldr	sl, [fp, #8]
   48528:	mov	r0, r6
   4852c:	mov	r1, #0
   48530:	bl	1a80 <Mat_VarDuplicate@plt>
   48534:	mov	r5, r0
   48538:	cmp	sl, #0
   4853c:	moveq	r0, #1
   48540:	streq	r0, [r5, #44]	; 0x2c
   48544:	ldr	r0, [r6, #52]	; 0x34
   48548:	ldr	r7, [r0, #4]
   4854c:	mul	r0, r9, r7
   48550:	lsl	r0, r0, #2
   48554:	str	r0, [r5]
   48558:	bl	18e8 <malloc@plt>
   4855c:	str	r0, [r5, #40]	; 0x28
   48560:	cmp	r0, #0
   48564:	beq	4864c <Mat_VarGetStructsLinear+0x15c>
   48568:	ldr	r0, [r5, #32]
   4856c:	mov	r1, #1
   48570:	str	r9, [r0]
   48574:	str	r1, [r0, #4]
   48578:	cmp	r9, #1
   4857c:	blt	48658 <Mat_VarGetStructsLinear+0x168>
   48580:	str	r5, [sp, #4]
   48584:	mov	r0, r8
   48588:	ldr	r8, [r5, #40]	; 0x28
   4858c:	mul	r4, r7, r4
   48590:	sub	r0, r0, #1
   48594:	mul	ip, r7, r0
   48598:	lsl	lr, r7, #2
   4859c:	mov	r5, #0
   485a0:	str	r9, [sp, #16]
   485a4:	str	ip, [sp, #12]
   485a8:	str	lr, [sp, #8]
   485ac:	cmp	sl, #0
   485b0:	beq	48600 <Mat_VarGetStructsLinear+0x110>
   485b4:	cmp	r7, #1
   485b8:	blt	48630 <Mat_VarGetStructsLinear+0x140>
   485bc:	lsl	sl, r4, #2
   485c0:	mov	r9, #0
   485c4:	ldr	r0, [r6, #40]	; 0x28
   485c8:	add	r0, r0, sl
   485cc:	ldr	r0, [r0, r9, lsl #2]
   485d0:	mov	r1, #1
   485d4:	bl	1a80 <Mat_VarDuplicate@plt>
   485d8:	str	r0, [r8, r9, lsl #2]
   485dc:	add	r9, r9, #1
   485e0:	cmp	r7, r9
   485e4:	bne	485c4 <Mat_VarGetStructsLinear+0xd4>
   485e8:	add	r4, r7, r4
   485ec:	ldr	r9, [sp, #16]
   485f0:	ldr	sl, [fp, #8]
   485f4:	ldr	ip, [sp, #12]
   485f8:	ldr	lr, [sp, #8]
   485fc:	b	48630 <Mat_VarGetStructsLinear+0x140>
   48600:	cmp	r7, #1
   48604:	mov	r0, r8
   48608:	mov	r1, r7
   4860c:	mov	r2, r4
   48610:	blt	48630 <Mat_VarGetStructsLinear+0x140>
   48614:	ldr	r3, [r6, #40]	; 0x28
   48618:	ldr	r3, [r3, r2, lsl #2]
   4861c:	str	r3, [r0], #4
   48620:	subs	r1, r1, #1
   48624:	add	r2, r2, #1
   48628:	bne	48614 <Mat_VarGetStructsLinear+0x124>
   4862c:	add	r4, r7, r4
   48630:	add	r8, r8, lr
   48634:	add	r4, r4, ip
   48638:	add	r5, r5, #1
   4863c:	cmp	r5, r9
   48640:	bne	485ac <Mat_VarGetStructsLinear+0xbc>
   48644:	ldr	r5, [sp, #4]
   48648:	b	48658 <Mat_VarGetStructsLinear+0x168>
   4864c:	mov	r0, r5
   48650:	bl	1930 <Mat_VarFree@plt>
   48654:	mov	r5, #0
   48658:	mov	r0, r5
   4865c:	sub	sp, fp, #28
   48660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00048664 <Mat_VarSetStructFieldByIndex>:
   48664:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   48668:	add	fp, sp, #24
   4866c:	sub	sp, sp, #8
   48670:	mov	r7, r0
   48674:	mov	r0, #1
   48678:	str	r0, [sp, #4]
   4867c:	mov	r4, #0
   48680:	cmp	r7, #0
   48684:	beq	48704 <Mat_VarSetStructFieldByIndex+0xa0>
   48688:	ldr	r0, [r7, #16]
   4868c:	cmp	r0, #2
   48690:	bne	48704 <Mat_VarSetStructFieldByIndex+0xa0>
   48694:	ldr	r0, [r7, #40]	; 0x28
   48698:	cmp	r0, #0
   4869c:	beq	48704 <Mat_VarSetStructFieldByIndex+0xa0>
   486a0:	mov	r8, r3
   486a4:	mov	r5, r2
   486a8:	mov	r6, r1
   486ac:	add	r1, sp, #4
   486b0:	mov	r0, r7
   486b4:	bl	4479c <SafeMulDims>
   486b8:	ldr	r0, [r7, #52]	; 0x34
   486bc:	ldr	r0, [r0, #4]
   486c0:	cmp	r0, r6
   486c4:	ldrhi	r1, [sp, #4]
   486c8:	cmphi	r1, r5
   486cc:	bls	48704 <Mat_VarSetStructFieldByIndex+0xa0>
   486d0:	mla	r0, r0, r5, r6
   486d4:	ldr	r1, [r7, #40]	; 0x28
   486d8:	ldr	r4, [r1, r0, lsl #2]
   486dc:	str	r8, [r1, r0, lsl #2]
   486e0:	ldr	r0, [r8, #36]	; 0x24
   486e4:	cmp	r0, #0
   486e8:	beq	486f0 <Mat_VarSetStructFieldByIndex+0x8c>
   486ec:	bl	181c <free@plt>
   486f0:	ldr	r0, [r7, #52]	; 0x34
   486f4:	ldr	r0, [r0, #8]
   486f8:	ldr	r0, [r0, r6, lsl #2]
   486fc:	bl	187c <strdup@plt>
   48700:	str	r0, [r8, #36]	; 0x24
   48704:	mov	r0, r4
   48708:	sub	sp, fp, #24
   4870c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00048710 <Mat_VarSetStructFieldByName>:
   48710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48714:	add	fp, sp, #28
   48718:	sub	sp, sp, #12
   4871c:	mov	r8, r0
   48720:	mov	r0, #1
   48724:	str	r0, [sp, #8]
   48728:	mov	sl, #0
   4872c:	cmp	r8, #0
   48730:	beq	487f4 <Mat_VarSetStructFieldByName+0xe4>
   48734:	ldr	r0, [r8, #16]
   48738:	cmp	r0, #2
   4873c:	bne	487f4 <Mat_VarSetStructFieldByName+0xe4>
   48740:	ldr	r0, [r8, #40]	; 0x28
   48744:	cmp	r0, #0
   48748:	beq	487f4 <Mat_VarSetStructFieldByName+0xe4>
   4874c:	mov	r5, r3
   48750:	mov	r9, r2
   48754:	mov	r4, r1
   48758:	add	r1, sp, #8
   4875c:	mov	r0, r8
   48760:	bl	4479c <SafeMulDims>
   48764:	ldr	r0, [r8, #52]	; 0x34
   48768:	ldr	r6, [r0, #4]
   4876c:	cmp	r6, #1
   48770:	blt	487f4 <Mat_VarSetStructFieldByName+0xe4>
   48774:	str	r5, [sp, #4]
   48778:	ldr	r5, [r0, #8]
   4877c:	mov	r7, #0
   48780:	ldr	r0, [r5, r7, lsl #2]
   48784:	mov	r1, r4
   48788:	bl	17c8 <strcmp@plt>
   4878c:	cmp	r0, #0
   48790:	beq	487a8 <Mat_VarSetStructFieldByName+0x98>
   48794:	add	r7, r7, #1
   48798:	cmp	r7, r6
   4879c:	blt	48780 <Mat_VarSetStructFieldByName+0x70>
   487a0:	mov	sl, #0
   487a4:	b	487f4 <Mat_VarSetStructFieldByName+0xe4>
   487a8:	mov	sl, #0
   487ac:	ldr	r0, [sp, #8]
   487b0:	cmp	r0, r9
   487b4:	ldr	r4, [sp, #4]
   487b8:	bls	487f4 <Mat_VarSetStructFieldByName+0xe4>
   487bc:	mul	r0, r6, r9
   487c0:	ldr	r1, [r8, #40]	; 0x28
   487c4:	add	r0, r1, r0, lsl #2
   487c8:	ldr	sl, [r0, r7, lsl #2]
   487cc:	str	r4, [r0, r7, lsl #2]
   487d0:	ldr	r0, [r4, #36]	; 0x24
   487d4:	cmp	r0, #0
   487d8:	beq	487e0 <Mat_VarSetStructFieldByName+0xd0>
   487dc:	bl	181c <free@plt>
   487e0:	ldr	r0, [r8, #52]	; 0x34
   487e4:	ldr	r0, [r0, #8]
   487e8:	ldr	r0, [r0, r7, lsl #2]
   487ec:	bl	187c <strdup@plt>
   487f0:	str	r0, [r4, #36]	; 0x24
   487f4:	mov	r0, sl
   487f8:	sub	sp, fp, #28
   487fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00048800 <__aeabi_drsub>:
   48800:	eor	r1, r1, #-2147483648	; 0x80000000
   48804:	b	4880c <__adddf3>

00048808 <__aeabi_dsub>:
   48808:	eor	r3, r3, #-2147483648	; 0x80000000

0004880c <__adddf3>:
   4880c:	push	{r4, r5, lr}
   48810:	lsl	r4, r1, #1
   48814:	lsl	r5, r3, #1
   48818:	teq	r4, r5
   4881c:	teqeq	r0, r2
   48820:	orrsne	ip, r4, r0
   48824:	orrsne	ip, r5, r2
   48828:	mvnsne	ip, r4, asr #21
   4882c:	mvnsne	ip, r5, asr #21
   48830:	beq	48a1c <__adddf3+0x210>
   48834:	lsr	r4, r4, #21
   48838:	rsbs	r5, r4, r5, lsr #21
   4883c:	rsblt	r5, r5, #0
   48840:	ble	48860 <__adddf3+0x54>
   48844:	add	r4, r4, r5
   48848:	eor	r2, r0, r2
   4884c:	eor	r3, r1, r3
   48850:	eor	r0, r2, r0
   48854:	eor	r1, r3, r1
   48858:	eor	r2, r0, r2
   4885c:	eor	r3, r1, r3
   48860:	cmp	r5, #54	; 0x36
   48864:	pophi	{r4, r5, pc}
   48868:	tst	r1, #-2147483648	; 0x80000000
   4886c:	lsl	r1, r1, #12
   48870:	mov	ip, #1048576	; 0x100000
   48874:	orr	r1, ip, r1, lsr #12
   48878:	beq	48884 <__adddf3+0x78>
   4887c:	rsbs	r0, r0, #0
   48880:	rsc	r1, r1, #0
   48884:	tst	r3, #-2147483648	; 0x80000000
   48888:	lsl	r3, r3, #12
   4888c:	orr	r3, ip, r3, lsr #12
   48890:	beq	4889c <__adddf3+0x90>
   48894:	rsbs	r2, r2, #0
   48898:	rsc	r3, r3, #0
   4889c:	teq	r4, r5
   488a0:	beq	48a04 <__adddf3+0x1f8>
   488a4:	sub	r4, r4, #1
   488a8:	rsbs	lr, r5, #32
   488ac:	blt	488c8 <__adddf3+0xbc>
   488b0:	lsl	ip, r2, lr
   488b4:	adds	r0, r0, r2, lsr r5
   488b8:	adc	r1, r1, #0
   488bc:	adds	r0, r0, r3, lsl lr
   488c0:	adcs	r1, r1, r3, asr r5
   488c4:	b	488e4 <__adddf3+0xd8>
   488c8:	sub	r5, r5, #32
   488cc:	add	lr, lr, #32
   488d0:	cmp	r2, #1
   488d4:	lsl	ip, r3, lr
   488d8:	orrcs	ip, ip, #2
   488dc:	adds	r0, r0, r3, asr r5
   488e0:	adcs	r1, r1, r3, asr #31
   488e4:	and	r5, r1, #-2147483648	; 0x80000000
   488e8:	bpl	488f8 <__adddf3+0xec>
   488ec:	rsbs	ip, ip, #0
   488f0:	rscs	r0, r0, #0
   488f4:	rsc	r1, r1, #0
   488f8:	cmp	r1, #1048576	; 0x100000
   488fc:	bcc	4893c <__adddf3+0x130>
   48900:	cmp	r1, #2097152	; 0x200000
   48904:	bcc	48924 <__adddf3+0x118>
   48908:	lsrs	r1, r1, #1
   4890c:	rrxs	r0, r0
   48910:	rrx	ip, ip
   48914:	add	r4, r4, #1
   48918:	lsl	r2, r4, #21
   4891c:	cmn	r2, #4194304	; 0x400000
   48920:	bcs	48a7c <__adddf3+0x270>
   48924:	cmp	ip, #-2147483648	; 0x80000000
   48928:	lsrseq	ip, r0, #1
   4892c:	adcs	r0, r0, #0
   48930:	adc	r1, r1, r4, lsl #20
   48934:	orr	r1, r1, r5
   48938:	pop	{r4, r5, pc}
   4893c:	lsls	ip, ip, #1
   48940:	adcs	r0, r0, r0
   48944:	adc	r1, r1, r1
   48948:	tst	r1, #1048576	; 0x100000
   4894c:	sub	r4, r4, #1
   48950:	bne	48924 <__adddf3+0x118>
   48954:	teq	r1, #0
   48958:	moveq	r1, r0
   4895c:	moveq	r0, #0
   48960:	clz	r3, r1
   48964:	addeq	r3, r3, #32
   48968:	sub	r3, r3, #11
   4896c:	subs	r2, r3, #32
   48970:	bge	48994 <__adddf3+0x188>
   48974:	adds	r2, r2, #12
   48978:	ble	48990 <__adddf3+0x184>
   4897c:	add	ip, r2, #20
   48980:	rsb	r2, r2, #12
   48984:	lsl	r0, r1, ip
   48988:	lsr	r1, r1, r2
   4898c:	b	489a4 <__adddf3+0x198>
   48990:	add	r2, r2, #20
   48994:	rsble	ip, r2, #32
   48998:	lsl	r1, r1, r2
   4899c:	orrle	r1, r1, r0, lsr ip
   489a0:	lslle	r0, r0, r2
   489a4:	subs	r4, r4, r3
   489a8:	addge	r1, r1, r4, lsl #20
   489ac:	orrge	r1, r1, r5
   489b0:	popge	{r4, r5, pc}
   489b4:	mvn	r4, r4
   489b8:	subs	r4, r4, #31
   489bc:	bge	489f8 <__adddf3+0x1ec>
   489c0:	adds	r4, r4, #12
   489c4:	bgt	489e0 <__adddf3+0x1d4>
   489c8:	add	r4, r4, #20
   489cc:	rsb	r2, r4, #32
   489d0:	lsr	r0, r0, r4
   489d4:	orr	r0, r0, r1, lsl r2
   489d8:	orr	r1, r5, r1, lsr r4
   489dc:	pop	{r4, r5, pc}
   489e0:	rsb	r4, r4, #12
   489e4:	rsb	r2, r4, #32
   489e8:	lsr	r0, r0, r2
   489ec:	orr	r0, r0, r1, lsl r4
   489f0:	mov	r1, r5
   489f4:	pop	{r4, r5, pc}
   489f8:	lsr	r0, r1, r4
   489fc:	mov	r1, r5
   48a00:	pop	{r4, r5, pc}
   48a04:	teq	r4, #0
   48a08:	eor	r3, r3, #1048576	; 0x100000
   48a0c:	eoreq	r1, r1, #1048576	; 0x100000
   48a10:	addeq	r4, r4, #1
   48a14:	subne	r5, r5, #1
   48a18:	b	488a4 <__adddf3+0x98>
   48a1c:	mvns	ip, r4, asr #21
   48a20:	mvnsne	ip, r5, asr #21
   48a24:	beq	48a8c <__adddf3+0x280>
   48a28:	teq	r4, r5
   48a2c:	teqeq	r0, r2
   48a30:	beq	48a44 <__adddf3+0x238>
   48a34:	orrs	ip, r4, r0
   48a38:	moveq	r1, r3
   48a3c:	moveq	r0, r2
   48a40:	pop	{r4, r5, pc}
   48a44:	teq	r1, r3
   48a48:	movne	r1, #0
   48a4c:	movne	r0, #0
   48a50:	popne	{r4, r5, pc}
   48a54:	lsrs	ip, r4, #21
   48a58:	bne	48a6c <__adddf3+0x260>
   48a5c:	lsls	r0, r0, #1
   48a60:	adcs	r1, r1, r1
   48a64:	orrcs	r1, r1, #-2147483648	; 0x80000000
   48a68:	pop	{r4, r5, pc}
   48a6c:	adds	r4, r4, #4194304	; 0x400000
   48a70:	addcc	r1, r1, #1048576	; 0x100000
   48a74:	popcc	{r4, r5, pc}
   48a78:	and	r5, r1, #-2147483648	; 0x80000000
   48a7c:	orr	r1, r5, #2130706432	; 0x7f000000
   48a80:	orr	r1, r1, #15728640	; 0xf00000
   48a84:	mov	r0, #0
   48a88:	pop	{r4, r5, pc}
   48a8c:	mvns	ip, r4, asr #21
   48a90:	movne	r1, r3
   48a94:	movne	r0, r2
   48a98:	mvnseq	ip, r5, asr #21
   48a9c:	movne	r3, r1
   48aa0:	movne	r2, r0
   48aa4:	orrs	r4, r0, r1, lsl #12
   48aa8:	orrseq	r5, r2, r3, lsl #12
   48aac:	teqeq	r1, r3
   48ab0:	orrne	r1, r1, #524288	; 0x80000
   48ab4:	pop	{r4, r5, pc}

00048ab8 <__aeabi_ui2d>:
   48ab8:	teq	r0, #0
   48abc:	moveq	r1, #0
   48ac0:	bxeq	lr
   48ac4:	push	{r4, r5, lr}
   48ac8:	mov	r4, #1024	; 0x400
   48acc:	add	r4, r4, #50	; 0x32
   48ad0:	mov	r5, #0
   48ad4:	mov	r1, #0
   48ad8:	b	48954 <__adddf3+0x148>

00048adc <__aeabi_i2d>:
   48adc:	teq	r0, #0
   48ae0:	moveq	r1, #0
   48ae4:	bxeq	lr
   48ae8:	push	{r4, r5, lr}
   48aec:	mov	r4, #1024	; 0x400
   48af0:	add	r4, r4, #50	; 0x32
   48af4:	ands	r5, r0, #-2147483648	; 0x80000000
   48af8:	rsbmi	r0, r0, #0
   48afc:	mov	r1, #0
   48b00:	b	48954 <__adddf3+0x148>

00048b04 <__aeabi_f2d>:
   48b04:	lsls	r2, r0, #1
   48b08:	asr	r1, r2, #3
   48b0c:	rrx	r1, r1
   48b10:	lsl	r0, r2, #28
   48b14:	andsne	r3, r2, #-16777216	; 0xff000000
   48b18:	teqne	r3, #-16777216	; 0xff000000
   48b1c:	eorne	r1, r1, #939524096	; 0x38000000
   48b20:	bxne	lr
   48b24:	bics	r2, r2, #-16777216	; 0xff000000
   48b28:	bxeq	lr
   48b2c:	teq	r3, #-16777216	; 0xff000000
   48b30:	orreq	r1, r1, #524288	; 0x80000
   48b34:	bxeq	lr
   48b38:	push	{r4, r5, lr}
   48b3c:	mov	r4, #896	; 0x380
   48b40:	and	r5, r1, #-2147483648	; 0x80000000
   48b44:	bic	r1, r1, #-2147483648	; 0x80000000
   48b48:	b	48954 <__adddf3+0x148>

00048b4c <__aeabi_ul2d>:
   48b4c:	orrs	r2, r0, r1
   48b50:	bxeq	lr
   48b54:	push	{r4, r5, lr}
   48b58:	mov	r5, #0
   48b5c:	b	48b7c <__aeabi_l2d+0x1c>

00048b60 <__aeabi_l2d>:
   48b60:	orrs	r2, r0, r1
   48b64:	bxeq	lr
   48b68:	push	{r4, r5, lr}
   48b6c:	ands	r5, r1, #-2147483648	; 0x80000000
   48b70:	bpl	48b7c <__aeabi_l2d+0x1c>
   48b74:	rsbs	r0, r0, #0
   48b78:	rsc	r1, r1, #0
   48b7c:	mov	r4, #1024	; 0x400
   48b80:	add	r4, r4, #50	; 0x32
   48b84:	lsrs	ip, r1, #22
   48b88:	beq	488f8 <__adddf3+0xec>
   48b8c:	mov	r2, #3
   48b90:	lsrs	ip, ip, #3
   48b94:	addne	r2, r2, #3
   48b98:	lsrs	ip, ip, #3
   48b9c:	addne	r2, r2, #3
   48ba0:	add	r2, r2, ip, lsr #3
   48ba4:	rsb	r3, r2, #32
   48ba8:	lsl	ip, r0, r3
   48bac:	lsr	r0, r0, r2
   48bb0:	orr	r0, r0, r1, lsl r3
   48bb4:	lsr	r1, r1, r2
   48bb8:	add	r4, r4, r2
   48bbc:	b	488f8 <__adddf3+0xec>

00048bc0 <__aeabi_frsub>:
   48bc0:	eor	r0, r0, #-2147483648	; 0x80000000
   48bc4:	b	48bcc <__addsf3>

00048bc8 <__aeabi_fsub>:
   48bc8:	eor	r1, r1, #-2147483648	; 0x80000000

00048bcc <__addsf3>:
   48bcc:	lsls	r2, r0, #1
   48bd0:	lslsne	r3, r1, #1
   48bd4:	teqne	r2, r3
   48bd8:	mvnsne	ip, r2, asr #24
   48bdc:	mvnsne	ip, r3, asr #24
   48be0:	beq	48cd8 <__addsf3+0x10c>
   48be4:	lsr	r2, r2, #24
   48be8:	rsbs	r3, r2, r3, lsr #24
   48bec:	addgt	r2, r2, r3
   48bf0:	eorgt	r1, r0, r1
   48bf4:	eorgt	r0, r1, r0
   48bf8:	eorgt	r1, r0, r1
   48bfc:	rsblt	r3, r3, #0
   48c00:	cmp	r3, #25
   48c04:	bxhi	lr
   48c08:	tst	r0, #-2147483648	; 0x80000000
   48c0c:	orr	r0, r0, #8388608	; 0x800000
   48c10:	bic	r0, r0, #-16777216	; 0xff000000
   48c14:	rsbne	r0, r0, #0
   48c18:	tst	r1, #-2147483648	; 0x80000000
   48c1c:	orr	r1, r1, #8388608	; 0x800000
   48c20:	bic	r1, r1, #-16777216	; 0xff000000
   48c24:	rsbne	r1, r1, #0
   48c28:	teq	r2, r3
   48c2c:	beq	48cc0 <__addsf3+0xf4>
   48c30:	sub	r2, r2, #1
   48c34:	adds	r0, r0, r1, asr r3
   48c38:	rsb	r3, r3, #32
   48c3c:	lsl	r1, r1, r3
   48c40:	and	r3, r0, #-2147483648	; 0x80000000
   48c44:	bpl	48c50 <__addsf3+0x84>
   48c48:	rsbs	r1, r1, #0
   48c4c:	rsc	r0, r0, #0
   48c50:	cmp	r0, #8388608	; 0x800000
   48c54:	bcc	48c88 <__addsf3+0xbc>
   48c58:	cmp	r0, #16777216	; 0x1000000
   48c5c:	bcc	48c74 <__addsf3+0xa8>
   48c60:	lsrs	r0, r0, #1
   48c64:	rrx	r1, r1
   48c68:	add	r2, r2, #1
   48c6c:	cmp	r2, #254	; 0xfe
   48c70:	bcs	48d2c <__addsf3+0x160>
   48c74:	cmp	r1, #-2147483648	; 0x80000000
   48c78:	adc	r0, r0, r2, lsl #23
   48c7c:	biceq	r0, r0, #1
   48c80:	orr	r0, r0, r3
   48c84:	bx	lr
   48c88:	lsls	r1, r1, #1
   48c8c:	adc	r0, r0, r0
   48c90:	tst	r0, #8388608	; 0x800000
   48c94:	sub	r2, r2, #1
   48c98:	bne	48c74 <__addsf3+0xa8>
   48c9c:	clz	ip, r0
   48ca0:	sub	ip, ip, #8
   48ca4:	subs	r2, r2, ip
   48ca8:	lsl	r0, r0, ip
   48cac:	addge	r0, r0, r2, lsl #23
   48cb0:	rsblt	r2, r2, #0
   48cb4:	orrge	r0, r0, r3
   48cb8:	orrlt	r0, r3, r0, lsr r2
   48cbc:	bx	lr
   48cc0:	teq	r2, #0
   48cc4:	eor	r1, r1, #8388608	; 0x800000
   48cc8:	eoreq	r0, r0, #8388608	; 0x800000
   48ccc:	addeq	r2, r2, #1
   48cd0:	subne	r3, r3, #1
   48cd4:	b	48c30 <__addsf3+0x64>
   48cd8:	lsl	r3, r1, #1
   48cdc:	mvns	ip, r2, asr #24
   48ce0:	mvnsne	ip, r3, asr #24
   48ce4:	beq	48d38 <__addsf3+0x16c>
   48ce8:	teq	r2, r3
   48cec:	beq	48cfc <__addsf3+0x130>
   48cf0:	teq	r2, #0
   48cf4:	moveq	r0, r1
   48cf8:	bx	lr
   48cfc:	teq	r0, r1
   48d00:	movne	r0, #0
   48d04:	bxne	lr
   48d08:	tst	r2, #-16777216	; 0xff000000
   48d0c:	bne	48d1c <__addsf3+0x150>
   48d10:	lsls	r0, r0, #1
   48d14:	orrcs	r0, r0, #-2147483648	; 0x80000000
   48d18:	bx	lr
   48d1c:	adds	r2, r2, #33554432	; 0x2000000
   48d20:	addcc	r0, r0, #8388608	; 0x800000
   48d24:	bxcc	lr
   48d28:	and	r3, r0, #-2147483648	; 0x80000000
   48d2c:	orr	r0, r3, #2130706432	; 0x7f000000
   48d30:	orr	r0, r0, #8388608	; 0x800000
   48d34:	bx	lr
   48d38:	mvns	r2, r2, asr #24
   48d3c:	movne	r0, r1
   48d40:	mvnseq	r3, r3, asr #24
   48d44:	movne	r1, r0
   48d48:	lsls	r2, r0, #9
   48d4c:	lslseq	r3, r1, #9
   48d50:	teqeq	r0, r1
   48d54:	orrne	r0, r0, #4194304	; 0x400000
   48d58:	bx	lr

00048d5c <__aeabi_ui2f>:
   48d5c:	mov	r3, #0
   48d60:	b	48d6c <__aeabi_i2f+0x8>

00048d64 <__aeabi_i2f>:
   48d64:	ands	r3, r0, #-2147483648	; 0x80000000
   48d68:	rsbmi	r0, r0, #0
   48d6c:	movs	ip, r0
   48d70:	bxeq	lr
   48d74:	orr	r3, r3, #1258291200	; 0x4b000000
   48d78:	mov	r1, r0
   48d7c:	mov	r0, #0
   48d80:	b	48dc4 <__aeabi_l2f+0x30>

00048d84 <__aeabi_ul2f>:
   48d84:	orrs	r2, r0, r1
   48d88:	bxeq	lr
   48d8c:	mov	r3, #0
   48d90:	b	48dac <__aeabi_l2f+0x18>

00048d94 <__aeabi_l2f>:
   48d94:	orrs	r2, r0, r1
   48d98:	bxeq	lr
   48d9c:	ands	r3, r1, #-2147483648	; 0x80000000
   48da0:	bpl	48dac <__aeabi_l2f+0x18>
   48da4:	rsbs	r0, r0, #0
   48da8:	rsc	r1, r1, #0
   48dac:	movs	ip, r1
   48db0:	moveq	ip, r0
   48db4:	moveq	r1, r0
   48db8:	moveq	r0, #0
   48dbc:	orr	r3, r3, #1526726656	; 0x5b000000
   48dc0:	subeq	r3, r3, #268435456	; 0x10000000
   48dc4:	sub	r3, r3, #8388608	; 0x800000
   48dc8:	clz	r2, ip
   48dcc:	subs	r2, r2, #8
   48dd0:	sub	r3, r3, r2, lsl #23
   48dd4:	blt	48df4 <__aeabi_l2f+0x60>
   48dd8:	add	r3, r3, r1, lsl r2
   48ddc:	lsl	ip, r0, r2
   48de0:	rsb	r2, r2, #32
   48de4:	cmp	ip, #-2147483648	; 0x80000000
   48de8:	adc	r0, r3, r0, lsr r2
   48dec:	biceq	r0, r0, #1
   48df0:	bx	lr
   48df4:	add	r2, r2, #32
   48df8:	lsl	ip, r1, r2
   48dfc:	rsb	r2, r2, #32
   48e00:	orrs	r0, r0, ip, lsl #1
   48e04:	adc	r0, r3, r1, lsr r2
   48e08:	biceq	r0, r0, ip, lsr #31
   48e0c:	bx	lr

00048e10 <__aeabi_f2lz>:
   48e10:	vmov	s15, r0
   48e14:	vcmpe.f32	s15, #0.0
   48e18:	vmrs	APSR_nzcv, fpscr
   48e1c:	bmi	48e24 <__aeabi_f2lz+0x14>
   48e20:	b	48e68 <__aeabi_f2ulz>
   48e24:	push	{r4, lr}
   48e28:	eor	r0, r0, #-2147483648	; 0x80000000
   48e2c:	bl	48e68 <__aeabi_f2ulz>
   48e30:	rsbs	r0, r0, #0
   48e34:	rsc	r1, r1, #0
   48e38:	pop	{r4, pc}

00048e3c <__aeabi_d2lz>:
   48e3c:	vmov	d7, r0, r1
   48e40:	vcmpe.f64	d7, #0.0
   48e44:	vmrs	APSR_nzcv, fpscr
   48e48:	bmi	48e50 <__aeabi_d2lz+0x14>
   48e4c:	b	48ea8 <__aeabi_d2ulz>
   48e50:	push	{r4, lr}
   48e54:	eor	r1, r1, #-2147483648	; 0x80000000
   48e58:	bl	48ea8 <__aeabi_d2ulz>
   48e5c:	rsbs	r0, r0, #0
   48e60:	rsc	r1, r1, #0
   48e64:	pop	{r4, pc}

00048e68 <__aeabi_f2ulz>:
   48e68:	vmov	s15, r0
   48e6c:	vldr	d5, [pc, #36]	; 48e98 <__aeabi_f2ulz+0x30>
   48e70:	vcvt.f64.f32	d6, s15
   48e74:	vldr	d7, [pc, #36]	; 48ea0 <__aeabi_f2ulz+0x38>
   48e78:	vmul.f64	d7, d6, d7
   48e7c:	vcvt.u32.f64	s14, d7
   48e80:	vcvt.f64.u32	d4, s14
   48e84:	vmov	r1, s14
   48e88:	vmls.f64	d6, d4, d5
   48e8c:	vcvt.u32.f64	s15, d6
   48e90:	vmov	r0, s15
   48e94:	bx	lr
   48e98:	.word	0x00000000
   48e9c:	.word	0x41f00000
   48ea0:	.word	0x00000000
   48ea4:	.word	0x3df00000

00048ea8 <__aeabi_d2ulz>:
   48ea8:	vmov	d6, r0, r1
   48eac:	vldr	d7, [pc, #36]	; 48ed8 <__aeabi_d2ulz+0x30>
   48eb0:	vldr	d5, [pc, #40]	; 48ee0 <__aeabi_d2ulz+0x38>
   48eb4:	vmul.f64	d7, d6, d7
   48eb8:	vcvt.u32.f64	s14, d7
   48ebc:	vcvt.f64.u32	d4, s14
   48ec0:	vmov	r1, s14
   48ec4:	vmls.f64	d6, d4, d5
   48ec8:	vcvt.u32.f64	s15, d6
   48ecc:	vmov	r0, s15
   48ed0:	bx	lr
   48ed4:	nop			; (mov r0, r0)
   48ed8:	.word	0x00000000
   48edc:	.word	0x3df00000
   48ee0:	.word	0x00000000
   48ee4:	.word	0x41f00000

Disassembly of section .fini:

00048ee8 <_fini>:
   48ee8:	push	{r3, lr}
   48eec:	pop	{r3, pc}
