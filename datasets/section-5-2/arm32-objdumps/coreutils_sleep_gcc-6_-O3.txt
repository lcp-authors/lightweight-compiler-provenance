
../repos/coreutils/src/sleep:     file format elf32-littlearm


Disassembly of section .init:

00010b94 <.init>:
   10b94:	push	{r3, lr}
   10b98:	bl	110f8 <abort@plt+0x310>
   10b9c:	pop	{r3, pc}

Disassembly of section .plt:

00010ba0 <calloc@plt-0x14>:
   10ba0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ba4:	ldr	lr, [pc, #4]	; 10bb0 <calloc@plt-0x4>
   10ba8:	add	lr, pc, lr
   10bac:	ldr	pc, [lr, #8]!
   10bb0:	andeq	r7, r1, r0, asr r4

00010bb4 <calloc@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #94208	; 0x17000
   10bbc:	ldr	pc, [ip, #1104]!	; 0x450

00010bc0 <fputs_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #94208	; 0x17000
   10bc8:	ldr	pc, [ip, #1096]!	; 0x448

00010bcc <raise@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #94208	; 0x17000
   10bd4:	ldr	pc, [ip, #1088]!	; 0x440

00010bd8 <strcmp@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #94208	; 0x17000
   10be0:	ldr	pc, [ip, #1080]!	; 0x438

00010be4 <pause@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #94208	; 0x17000
   10bec:	ldr	pc, [ip, #1072]!	; 0x430

00010bf0 <fflush@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #94208	; 0x17000
   10bf8:	ldr	pc, [ip, #1064]!	; 0x428

00010bfc <free@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #94208	; 0x17000
   10c04:	ldr	pc, [ip, #1056]!	; 0x420

00010c08 <nanosleep@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #94208	; 0x17000
   10c10:	ldr	pc, [ip, #1048]!	; 0x418

00010c14 <_exit@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #94208	; 0x17000
   10c1c:	ldr	pc, [ip, #1040]!	; 0x410

00010c20 <memcpy@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #94208	; 0x17000
   10c28:	ldr	pc, [ip, #1032]!	; 0x408

00010c2c <mbsinit@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #94208	; 0x17000
   10c34:	ldr	pc, [ip, #1024]!	; 0x400

00010c38 <memcmp@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #94208	; 0x17000
   10c40:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c44 <fputc_unlocked@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #94208	; 0x17000
   10c4c:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c50 <dcgettext@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #94208	; 0x17000
   10c58:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c5c <realloc@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #94208	; 0x17000
   10c64:	ldr	pc, [ip, #992]!	; 0x3e0

00010c68 <textdomain@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #94208	; 0x17000
   10c70:	ldr	pc, [ip, #984]!	; 0x3d8

00010c74 <iswprint@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #94208	; 0x17000
   10c7c:	ldr	pc, [ip, #976]!	; 0x3d0

00010c80 <fwrite@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #94208	; 0x17000
   10c88:	ldr	pc, [ip, #968]!	; 0x3c8

00010c8c <lseek64@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #94208	; 0x17000
   10c94:	ldr	pc, [ip, #960]!	; 0x3c0

00010c98 <__ctype_get_mb_cur_max@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #952]!	; 0x3b8

00010ca4 <__fpending@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #944]!	; 0x3b0

00010cb0 <mbrtowc@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #936]!	; 0x3a8

00010cbc <error@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #928]!	; 0x3a0

00010cc8 <malloc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #920]!	; 0x398

00010cd4 <__libc_start_main@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #912]!	; 0x390

00010ce0 <__freading@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #904]!	; 0x388

00010cec <__gmon_start__@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #896]!	; 0x380

00010cf8 <getopt_long@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #888]!	; 0x378

00010d04 <__ctype_b_loc@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #880]!	; 0x370

00010d10 <exit@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #872]!	; 0x368

00010d1c <strlen@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #864]!	; 0x360

00010d28 <__errno_location@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #856]!	; 0x358

00010d34 <__cxa_atexit@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #848]!	; 0x350

00010d40 <memset@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #840]!	; 0x348

00010d4c <__printf_chk@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #832]!	; 0x340

00010d58 <strtod@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #94208	; 0x17000
   10d60:	ldr	pc, [ip, #824]!	; 0x338

00010d64 <fileno@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #94208	; 0x17000
   10d6c:	ldr	pc, [ip, #816]!	; 0x330

00010d70 <__fprintf_chk@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #94208	; 0x17000
   10d78:	ldr	pc, [ip, #808]!	; 0x328

00010d7c <fclose@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #94208	; 0x17000
   10d84:	ldr	pc, [ip, #800]!	; 0x320

00010d88 <fseeko64@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #94208	; 0x17000
   10d90:	ldr	pc, [ip, #792]!	; 0x318

00010d94 <strtod_l@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #94208	; 0x17000
   10d9c:	ldr	pc, [ip, #784]!	; 0x310

00010da0 <setlocale@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #94208	; 0x17000
   10da8:	ldr	pc, [ip, #776]!	; 0x308

00010dac <strrchr@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #94208	; 0x17000
   10db4:	ldr	pc, [ip, #768]!	; 0x300

00010db8 <nl_langinfo@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #760]!	; 0x2f8

00010dc4 <newlocale@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #752]!	; 0x2f0

00010dd0 <bindtextdomain@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #744]!	; 0x2e8

00010ddc <strncmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #736]!	; 0x2e0

00010de8 <abort@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #728]!	; 0x2d8

Disassembly of section .text:

00010df8 <.text>:
   10df8:	push	{r4, r5, r6, r7, r8, lr}
   10dfc:	vpush	{d8-d13}
   10e00:	mov	r7, r0
   10e04:	ldr	r0, [r1]
   10e08:	mov	r4, r1
   10e0c:	sub	sp, sp, #40	; 0x28
   10e10:	bl	117a4 <abort@plt+0x9bc>
   10e14:	ldr	r1, [pc, #612]	; 11080 <abort@plt+0x298>
   10e18:	mov	r0, #6
   10e1c:	bl	10da0 <setlocale@plt>
   10e20:	ldr	r1, [pc, #604]	; 11084 <abort@plt+0x29c>
   10e24:	ldr	r0, [pc, #604]	; 11088 <abort@plt+0x2a0>
   10e28:	bl	10dd0 <bindtextdomain@plt>
   10e2c:	ldr	r0, [pc, #596]	; 11088 <abort@plt+0x2a0>
   10e30:	bl	10c68 <textdomain@plt>
   10e34:	ldr	r0, [pc, #592]	; 1108c <abort@plt+0x2a4>
   10e38:	bl	17514 <abort@plt+0x672c>
   10e3c:	ldr	r3, [pc, #588]	; 11090 <abort@plt+0x2a8>
   10e40:	ldr	ip, [pc, #588]	; 11094 <abort@plt+0x2ac>
   10e44:	ldr	r2, [pc, #588]	; 11098 <abort@plt+0x2b0>
   10e48:	ldr	r1, [r3]
   10e4c:	ldr	r3, [pc, #584]	; 1109c <abort@plt+0x2b4>
   10e50:	mov	r6, #1
   10e54:	mov	r5, #0
   10e58:	str	r1, [sp]
   10e5c:	str	r2, [sp, #12]
   10e60:	str	r3, [sp, #8]
   10e64:	mov	r1, r4
   10e68:	mov	r0, r7
   10e6c:	str	ip, [sp, #16]
   10e70:	str	r5, [sp, #20]
   10e74:	str	r6, [sp, #4]
   10e78:	ldr	r3, [pc, #544]	; 110a0 <abort@plt+0x2b8>
   10e7c:	ldr	r2, [pc, #544]	; 110a4 <abort@plt+0x2bc>
   10e80:	bl	116cc <abort@plt+0x8e4>
   10e84:	cmp	r7, r6
   10e88:	beq	10ffc <abort@plt+0x214>
   10e8c:	ldr	r3, [pc, #532]	; 110a8 <abort@plt+0x2c0>
   10e90:	vldr	d8, [pc, #448]	; 11058 <abort@plt+0x270>
   10e94:	ldr	r5, [r3]
   10e98:	cmp	r7, r5
   10e9c:	ble	10fd8 <abort@plt+0x1f0>
   10ea0:	vldr	d10, [pc, #440]	; 11060 <abort@plt+0x278>
   10ea4:	vldr	d13, [pc, #444]	; 11068 <abort@plt+0x280>
   10ea8:	vldr	d12, [pc, #448]	; 11070 <abort@plt+0x288>
   10eac:	vmov.f64	d9, d8
   10eb0:	vldr	d11, [pc, #448]	; 11078 <abort@plt+0x290>
   10eb4:	ldr	r8, [pc, #496]	; 110ac <abort@plt+0x2c4>
   10eb8:	add	r4, r4, r5, lsl #2
   10ebc:	b	10f1c <abort@plt+0x134>
   10ec0:	bl	10d28 <__errno_location@plt>
   10ec4:	ldr	r3, [r0]
   10ec8:	cmp	r3, #34	; 0x22
   10ecc:	beq	10f38 <abort@plt+0x150>
   10ed0:	mov	r2, #5
   10ed4:	ldr	r1, [pc, #468]	; 110b0 <abort@plt+0x2c8>
   10ed8:	mov	r0, #0
   10edc:	bl	10c50 <dcgettext@plt>
   10ee0:	mov	r6, r0
   10ee4:	ldr	r0, [r4]
   10ee8:	bl	15670 <abort@plt+0x4888>
   10eec:	mov	r1, #0
   10ef0:	mov	r2, r6
   10ef4:	mov	r6, #0
   10ef8:	mov	r3, r0
   10efc:	mov	r0, r1
   10f00:	bl	10cbc <error@plt>
   10f04:	vldr	d7, [sp, #32]
   10f08:	add	r5, r5, #1
   10f0c:	cmp	r7, r5
   10f10:	vadd.f64	d8, d8, d7
   10f14:	add	r4, r4, #4
   10f18:	beq	10fd0 <abort@plt+0x1e8>
   10f1c:	mov	r3, r8
   10f20:	add	r2, sp, #32
   10f24:	add	r1, sp, #28
   10f28:	ldr	r0, [r4]
   10f2c:	bl	16958 <abort@plt+0x5b70>
   10f30:	cmp	r0, #0
   10f34:	beq	10ec0 <abort@plt+0xd8>
   10f38:	vldr	d7, [sp, #32]
   10f3c:	vcmpe.f64	d7, d9
   10f40:	vmrs	APSR_nzcv, fpscr
   10f44:	blt	10ed0 <abort@plt+0xe8>
   10f48:	ldr	r2, [sp, #28]
   10f4c:	ldrb	r3, [r2]
   10f50:	cmp	r3, #0
   10f54:	beq	10fc8 <abort@plt+0x1e0>
   10f58:	ldrb	r2, [r2, #1]
   10f5c:	cmp	r2, #0
   10f60:	bne	10ed0 <abort@plt+0xe8>
   10f64:	sub	r3, r3, #100	; 0x64
   10f68:	cmp	r3, #15
   10f6c:	ldrls	pc, [pc, r3, lsl #2]
   10f70:	b	10ed0 <abort@plt+0xe8>
   10f74:	andeq	r0, r1, r0, asr #31
   10f78:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f7c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f80:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f84:			; <UNDEFINED> instruction: 0x00010fb4
   10f88:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f8c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f90:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f94:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f98:	strdeq	r0, [r1], -r4
   10f9c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fa0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fa4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fa8:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fac:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fb0:	andeq	r0, r1, r8, asr #31
   10fb4:	vmov.f64	d6, d11
   10fb8:	vmul.f64	d7, d7, d6
   10fbc:	b	10f08 <abort@plt+0x120>
   10fc0:	vmov.f64	d6, d12
   10fc4:	b	10fb8 <abort@plt+0x1d0>
   10fc8:	vmov.f64	d6, d10
   10fcc:	b	10fb8 <abort@plt+0x1d0>
   10fd0:	cmp	r6, #0
   10fd4:	beq	11024 <abort@plt+0x23c>
   10fd8:	vmov.f64	d0, d8
   10fdc:	bl	168b8 <abort@plt+0x5ad0>
   10fe0:	cmp	r0, #0
   10fe4:	bne	1102c <abort@plt+0x244>
   10fe8:	add	sp, sp, #40	; 0x28
   10fec:	vpop	{d8-d13}
   10ff0:	pop	{r4, r5, r6, r7, r8, pc}
   10ff4:	vmov.f64	d6, d13
   10ff8:	b	10fb8 <abort@plt+0x1d0>
   10ffc:	mov	r2, #5
   11000:	ldr	r1, [pc, #172]	; 110b4 <abort@plt+0x2cc>
   11004:	mov	r0, r5
   11008:	bl	10c50 <dcgettext@plt>
   1100c:	mov	r1, r5
   11010:	mov	r2, r0
   11014:	mov	r0, r5
   11018:	bl	10cbc <error@plt>
   1101c:	mov	r0, r7
   11020:	bl	111e4 <abort@plt+0x3fc>
   11024:	mov	r0, #1
   11028:	bl	111e4 <abort@plt+0x3fc>
   1102c:	bl	10d28 <__errno_location@plt>
   11030:	mov	r2, #5
   11034:	ldr	r1, [pc, #124]	; 110b8 <abort@plt+0x2d0>
   11038:	ldr	r4, [r0]
   1103c:	mov	r0, #0
   11040:	bl	10c50 <dcgettext@plt>
   11044:	mov	r1, r4
   11048:	mov	r2, r0
   1104c:	mov	r0, #1
   11050:	bl	10cbc <error@plt>
   11054:	nop			; (mov r0, r0)
	...
   11064:	svccc	0x00f00000	; IMB
   11068:	andeq	r0, r0, r0
   1106c:	submi	r0, lr, r0
   11070:	andeq	r0, r0, r0
   11074:	rscsmi	r1, r5, r0, lsl #16
   11078:	andeq	r0, r0, r0
   1107c:	adcmi	r2, ip, r0
   11080:	strdeq	r7, [r1], -r4
   11084:	andeq	r7, r1, ip, lsl r8
   11088:	andeq	r7, r1, r4, ror r7
   1108c:	andeq	r1, r1, r0, lsr r5
   11090:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   11094:	andeq	r7, r1, r4, lsr r8
   11098:	andeq	r7, r1, r0, asr #16
   1109c:	andeq	r1, r1, r4, ror #3
   110a0:	andeq	r7, r1, r0, ror r7
   110a4:	andeq	r7, r1, r0, ror r5
   110a8:	andeq	r8, r2, r8, lsr #2
   110ac:	muleq	r1, r4, r4
   110b0:	andeq	r7, r1, r0, ror #16
   110b4:	andeq	r7, r1, r0, asr r8
   110b8:	andeq	r7, r1, ip, ror r8
   110bc:	mov	fp, #0
   110c0:	mov	lr, #0
   110c4:	pop	{r1}		; (ldr r1, [sp], #4)
   110c8:	mov	r2, sp
   110cc:	push	{r2}		; (str r2, [sp, #-4]!)
   110d0:	push	{r0}		; (str r0, [sp, #-4]!)
   110d4:	ldr	ip, [pc, #16]	; 110ec <abort@plt+0x304>
   110d8:	push	{ip}		; (str ip, [sp, #-4]!)
   110dc:	ldr	r0, [pc, #12]	; 110f0 <abort@plt+0x308>
   110e0:	ldr	r3, [pc, #12]	; 110f4 <abort@plt+0x30c>
   110e4:	bl	10cd4 <__libc_start_main@plt>
   110e8:	bl	10de8 <abort@plt>
   110ec:	andeq	r7, r1, r0, lsl r5
   110f0:	strdeq	r0, [r1], -r8
   110f4:			; <UNDEFINED> instruction: 0x000174b0
   110f8:	ldr	r3, [pc, #20]	; 11114 <abort@plt+0x32c>
   110fc:	ldr	r2, [pc, #20]	; 11118 <abort@plt+0x330>
   11100:	add	r3, pc, r3
   11104:	ldr	r2, [r3, r2]
   11108:	cmp	r2, #0
   1110c:	bxeq	lr
   11110:	b	10cec <__gmon_start__@plt>
   11114:	strdeq	r6, [r1], -r8
   11118:	andeq	r0, r0, ip, asr #1
   1111c:	ldr	r3, [pc, #28]	; 11140 <abort@plt+0x358>
   11120:	ldr	r0, [pc, #28]	; 11144 <abort@plt+0x35c>
   11124:	sub	r3, r3, r0
   11128:	cmp	r3, #6
   1112c:	bxls	lr
   11130:	ldr	r3, [pc, #16]	; 11148 <abort@plt+0x360>
   11134:	cmp	r3, #0
   11138:	bxeq	lr
   1113c:	bx	r3
   11140:	andeq	r8, r2, r3, lsr #2
   11144:	andeq	r8, r2, r0, lsr #2
   11148:	andeq	r0, r0, r0
   1114c:	ldr	r1, [pc, #36]	; 11178 <abort@plt+0x390>
   11150:	ldr	r0, [pc, #36]	; 1117c <abort@plt+0x394>
   11154:	sub	r1, r1, r0
   11158:	asr	r1, r1, #2
   1115c:	add	r1, r1, r1, lsr #31
   11160:	asrs	r1, r1, #1
   11164:	bxeq	lr
   11168:	ldr	r3, [pc, #16]	; 11180 <abort@plt+0x398>
   1116c:	cmp	r3, #0
   11170:	bxeq	lr
   11174:	bx	r3
   11178:	andeq	r8, r2, r0, lsr #2
   1117c:	andeq	r8, r2, r0, lsr #2
   11180:	andeq	r0, r0, r0
   11184:	push	{r4, lr}
   11188:	ldr	r4, [pc, #24]	; 111a8 <abort@plt+0x3c0>
   1118c:	ldrb	r3, [r4]
   11190:	cmp	r3, #0
   11194:	popne	{r4, pc}
   11198:	bl	1111c <abort@plt+0x334>
   1119c:	mov	r3, #1
   111a0:	strb	r3, [r4]
   111a4:	pop	{r4, pc}
   111a8:	andeq	r8, r2, ip, lsr r1
   111ac:	ldr	r0, [pc, #40]	; 111dc <abort@plt+0x3f4>
   111b0:	ldr	r3, [r0]
   111b4:	cmp	r3, #0
   111b8:	bne	111c0 <abort@plt+0x3d8>
   111bc:	b	1114c <abort@plt+0x364>
   111c0:	ldr	r3, [pc, #24]	; 111e0 <abort@plt+0x3f8>
   111c4:	cmp	r3, #0
   111c8:	beq	111bc <abort@plt+0x3d4>
   111cc:	push	{r4, lr}
   111d0:	blx	r3
   111d4:	pop	{r4, lr}
   111d8:	b	1114c <abort@plt+0x364>
   111dc:	andeq	r7, r2, r4, lsl pc
   111e0:	andeq	r0, r0, r0
   111e4:	subs	r6, r0, #0
   111e8:	push	{r7, lr}
   111ec:	sub	sp, sp, #56	; 0x38
   111f0:	beq	1122c <abort@plt+0x444>
   111f4:	ldr	r3, [pc, #592]	; 1144c <abort@plt+0x664>
   111f8:	mov	r2, #5
   111fc:	ldr	r1, [pc, #588]	; 11450 <abort@plt+0x668>
   11200:	mov	r0, #0
   11204:	ldr	r4, [r3]
   11208:	bl	10c50 <dcgettext@plt>
   1120c:	ldr	r3, [pc, #576]	; 11454 <abort@plt+0x66c>
   11210:	mov	r1, #1
   11214:	ldr	r3, [r3]
   11218:	mov	r2, r0
   1121c:	mov	r0, r4
   11220:	bl	10d70 <__fprintf_chk@plt>
   11224:	mov	r0, r6
   11228:	bl	10d10 <exit@plt>
   1122c:	mov	r2, #5
   11230:	ldr	r1, [pc, #544]	; 11458 <abort@plt+0x670>
   11234:	bl	10c50 <dcgettext@plt>
   11238:	ldr	r3, [pc, #532]	; 11454 <abort@plt+0x66c>
   1123c:	ldr	r7, [pc, #536]	; 1145c <abort@plt+0x674>
   11240:	ldr	r4, [pc, #536]	; 11460 <abort@plt+0x678>
   11244:	ldr	r3, [r3]
   11248:	mov	r2, r3
   1124c:	mov	r1, r0
   11250:	mov	r0, #1
   11254:	bl	10d4c <__printf_chk@plt>
   11258:	mov	r2, #5
   1125c:	ldr	r1, [pc, #512]	; 11464 <abort@plt+0x67c>
   11260:	mov	r0, r6
   11264:	bl	10c50 <dcgettext@plt>
   11268:	ldr	r1, [r7]
   1126c:	bl	10bc0 <fputs_unlocked@plt>
   11270:	mov	r2, #5
   11274:	ldr	r1, [pc, #492]	; 11468 <abort@plt+0x680>
   11278:	mov	r0, r6
   1127c:	bl	10c50 <dcgettext@plt>
   11280:	ldr	r1, [r7]
   11284:	bl	10bc0 <fputs_unlocked@plt>
   11288:	ldm	r4!, {r0, r1, r2, r3}
   1128c:	mov	lr, sp
   11290:	stmia	lr!, {r0, r1, r2, r3}
   11294:	ldm	r4!, {r0, r1, r2, r3}
   11298:	ldr	ip, [sp]
   1129c:	stmia	lr!, {r0, r1, r2, r3}
   112a0:	cmp	ip, #0
   112a4:	ldm	r4!, {r0, r1, r2, r3}
   112a8:	stmia	lr!, {r0, r1, r2, r3}
   112ac:	ldm	r4, {r0, r1}
   112b0:	moveq	r4, sp
   112b4:	stm	lr, {r0, r1}
   112b8:	beq	112e8 <abort@plt+0x500>
   112bc:	ldr	r5, [pc, #424]	; 1146c <abort@plt+0x684>
   112c0:	mov	r4, sp
   112c4:	b	112d4 <abort@plt+0x4ec>
   112c8:	ldr	ip, [r4, #8]!
   112cc:	cmp	ip, #0
   112d0:	beq	112e8 <abort@plt+0x500>
   112d4:	mov	r1, ip
   112d8:	mov	r0, r5
   112dc:	bl	10bd8 <strcmp@plt>
   112e0:	cmp	r0, #0
   112e4:	bne	112c8 <abort@plt+0x4e0>
   112e8:	ldr	r4, [r4, #4]
   112ec:	mov	r2, #5
   112f0:	cmp	r4, #0
   112f4:	ldr	r1, [pc, #372]	; 11470 <abort@plt+0x688>
   112f8:	beq	113a0 <abort@plt+0x5b8>
   112fc:	mov	r0, #0
   11300:	bl	10c50 <dcgettext@plt>
   11304:	ldr	r3, [pc, #360]	; 11474 <abort@plt+0x68c>
   11308:	ldr	r2, [pc, #360]	; 11478 <abort@plt+0x690>
   1130c:	mov	r1, r0
   11310:	mov	r0, #1
   11314:	bl	10d4c <__printf_chk@plt>
   11318:	mov	r1, #0
   1131c:	mov	r0, #5
   11320:	bl	10da0 <setlocale@plt>
   11324:	cmp	r0, #0
   11328:	ldreq	r5, [pc, #316]	; 1146c <abort@plt+0x684>
   1132c:	beq	11348 <abort@plt+0x560>
   11330:	mov	r2, #3
   11334:	ldr	r1, [pc, #320]	; 1147c <abort@plt+0x694>
   11338:	bl	10ddc <strncmp@plt>
   1133c:	ldr	r5, [pc, #296]	; 1146c <abort@plt+0x684>
   11340:	cmp	r0, #0
   11344:	bne	11430 <abort@plt+0x648>
   11348:	mov	r2, #5
   1134c:	ldr	r1, [pc, #300]	; 11480 <abort@plt+0x698>
   11350:	mov	r0, #0
   11354:	bl	10c50 <dcgettext@plt>
   11358:	ldr	r3, [pc, #268]	; 1146c <abort@plt+0x684>
   1135c:	ldr	r2, [pc, #272]	; 11474 <abort@plt+0x68c>
   11360:	mov	r1, r0
   11364:	mov	r0, #1
   11368:	bl	10d4c <__printf_chk@plt>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #268]	; 11484 <abort@plt+0x69c>
   11374:	mov	r0, #0
   11378:	bl	10c50 <dcgettext@plt>
   1137c:	ldr	r2, [pc, #260]	; 11488 <abort@plt+0x6a0>
   11380:	cmp	r4, r5
   11384:	ldr	r3, [pc, #256]	; 1148c <abort@plt+0x6a4>
   11388:	movne	r3, r2
   1138c:	mov	r1, r0
   11390:	mov	r2, r4
   11394:	mov	r0, #1
   11398:	bl	10d4c <__printf_chk@plt>
   1139c:	b	11224 <abort@plt+0x43c>
   113a0:	mov	r0, r4
   113a4:	bl	10c50 <dcgettext@plt>
   113a8:	ldr	r3, [pc, #196]	; 11474 <abort@plt+0x68c>
   113ac:	ldr	r2, [pc, #196]	; 11478 <abort@plt+0x690>
   113b0:	mov	r1, r0
   113b4:	mov	r0, #1
   113b8:	bl	10d4c <__printf_chk@plt>
   113bc:	mov	r1, r4
   113c0:	mov	r0, #5
   113c4:	bl	10da0 <setlocale@plt>
   113c8:	cmp	r0, #0
   113cc:	beq	113e4 <abort@plt+0x5fc>
   113d0:	mov	r2, #3
   113d4:	ldr	r1, [pc, #160]	; 1147c <abort@plt+0x694>
   113d8:	bl	10ddc <strncmp@plt>
   113dc:	cmp	r0, #0
   113e0:	bne	11428 <abort@plt+0x640>
   113e4:	mov	r2, #5
   113e8:	ldr	r1, [pc, #144]	; 11480 <abort@plt+0x698>
   113ec:	mov	r0, #0
   113f0:	bl	10c50 <dcgettext@plt>
   113f4:	ldr	r3, [pc, #112]	; 1146c <abort@plt+0x684>
   113f8:	ldr	r2, [pc, #116]	; 11474 <abort@plt+0x68c>
   113fc:	mov	r4, r3
   11400:	mov	r1, r0
   11404:	mov	r0, #1
   11408:	bl	10d4c <__printf_chk@plt>
   1140c:	ldr	r1, [pc, #112]	; 11484 <abort@plt+0x69c>
   11410:	mov	r2, #5
   11414:	mov	r0, #0
   11418:	bl	10c50 <dcgettext@plt>
   1141c:	ldr	r3, [pc, #104]	; 1148c <abort@plt+0x6a4>
   11420:	mov	r1, r0
   11424:	b	11390 <abort@plt+0x5a8>
   11428:	ldr	r5, [pc, #60]	; 1146c <abort@plt+0x684>
   1142c:	mov	r4, r5
   11430:	mov	r2, #5
   11434:	ldr	r1, [pc, #84]	; 11490 <abort@plt+0x6a8>
   11438:	mov	r0, #0
   1143c:	bl	10c50 <dcgettext@plt>
   11440:	ldr	r1, [r7]
   11444:	bl	10bc0 <fputs_unlocked@plt>
   11448:	b	11348 <abort@plt+0x560>
   1144c:	andeq	r8, r2, r0, lsr r1
   11450:	andeq	r7, r1, r8, ror r5
   11454:	andeq	r8, r2, r8, asr #2
   11458:	andeq	r7, r1, r0, lsr #11
   1145c:	andeq	r8, r2, r4, lsr r1
   11460:	andeq	r7, r1, r8, lsr r5
   11464:	andeq	r7, r1, r8, asr #13
   11468:	strdeq	r7, [r1], -r8
   1146c:	andeq	r7, r1, r0, ror r5
   11470:	andeq	r7, r1, r0, lsr r7
   11474:	andeq	r7, r1, r8, asr #14
   11478:	andeq	r7, r1, r0, ror r7
   1147c:	andeq	r7, r1, r0, lsl #15
   11480:	andeq	r7, r1, ip, asr #15
   11484:	andeq	r7, r1, r8, ror #15
   11488:	strdeq	r7, [r1], -r4
   1148c:	andeq	r7, r1, r0, lsr #17
   11490:	andeq	r7, r1, r4, lsl #15
   11494:	push	{r4, r5, r6, lr}
   11498:	vpush	{d8}
   1149c:	mov	r4, r1
   114a0:	mov	r5, r0
   114a4:	sub	sp, sp, #8
   114a8:	mov	r1, sp
   114ac:	bl	10d58 <strtod@plt>
   114b0:	ldr	r3, [sp]
   114b4:	ldrb	r3, [r3]
   114b8:	cmp	r3, #0
   114bc:	vmov.f64	d8, d0
   114c0:	bne	114e0 <abort@plt+0x6f8>
   114c4:	cmp	r4, #0
   114c8:	vmov.f64	d0, d8
   114cc:	ldrne	r3, [sp]
   114d0:	strne	r3, [r4]
   114d4:	add	sp, sp, #8
   114d8:	vpop	{d8}
   114dc:	pop	{r4, r5, r6, pc}
   114e0:	bl	10d28 <__errno_location@plt>
   114e4:	add	r1, sp, #4
   114e8:	mov	r6, r0
   114ec:	mov	r0, r5
   114f0:	ldr	r5, [r6]
   114f4:	bl	16ad0 <abort@plt+0x5ce8>
   114f8:	ldm	sp, {r2, r3}
   114fc:	cmp	r2, r3
   11500:	strcc	r3, [sp]
   11504:	strcs	r5, [r6]
   11508:	vmovcc.f64	d8, d0
   1150c:	b	114c4 <abort@plt+0x6dc>
   11510:	ldr	r3, [pc, #4]	; 1151c <abort@plt+0x734>
   11514:	str	r0, [r3]
   11518:	bx	lr
   1151c:	andeq	r8, r2, r0, asr #2
   11520:	ldr	r3, [pc, #4]	; 1152c <abort@plt+0x744>
   11524:	strb	r0, [r3, #4]
   11528:	bx	lr
   1152c:	andeq	r8, r2, r0, asr #2
   11530:	ldr	r3, [pc, #192]	; 115f8 <abort@plt+0x810>
   11534:	push	{r4, r5, r6, lr}
   11538:	sub	sp, sp, #8
   1153c:	ldr	r0, [r3]
   11540:	bl	16b4c <abort@plt+0x5d64>
   11544:	cmp	r0, #0
   11548:	beq	1156c <abort@plt+0x784>
   1154c:	ldr	r4, [pc, #168]	; 115fc <abort@plt+0x814>
   11550:	ldrb	r3, [r4, #4]
   11554:	cmp	r3, #0
   11558:	beq	11588 <abort@plt+0x7a0>
   1155c:	bl	10d28 <__errno_location@plt>
   11560:	ldr	r3, [r0]
   11564:	cmp	r3, #32
   11568:	bne	11588 <abort@plt+0x7a0>
   1156c:	ldr	r3, [pc, #140]	; 11600 <abort@plt+0x818>
   11570:	ldr	r0, [r3]
   11574:	bl	16b4c <abort@plt+0x5d64>
   11578:	cmp	r0, #0
   1157c:	bne	115d0 <abort@plt+0x7e8>
   11580:	add	sp, sp, #8
   11584:	pop	{r4, r5, r6, pc}
   11588:	mov	r2, #5
   1158c:	ldr	r1, [pc, #112]	; 11604 <abort@plt+0x81c>
   11590:	mov	r0, #0
   11594:	bl	10c50 <dcgettext@plt>
   11598:	ldr	r4, [r4]
   1159c:	cmp	r4, #0
   115a0:	mov	r5, r0
   115a4:	beq	115dc <abort@plt+0x7f4>
   115a8:	bl	10d28 <__errno_location@plt>
   115ac:	ldr	r6, [r0]
   115b0:	mov	r0, r4
   115b4:	bl	14410 <abort@plt+0x3628>
   115b8:	mov	r1, r6
   115bc:	str	r5, [sp]
   115c0:	ldr	r2, [pc, #64]	; 11608 <abort@plt+0x820>
   115c4:	mov	r3, r0
   115c8:	mov	r0, #0
   115cc:	bl	10cbc <error@plt>
   115d0:	ldr	r3, [pc, #52]	; 1160c <abort@plt+0x824>
   115d4:	ldr	r0, [r3]
   115d8:	bl	10c14 <_exit@plt>
   115dc:	bl	10d28 <__errno_location@plt>
   115e0:	mov	r3, r5
   115e4:	ldr	r2, [pc, #36]	; 11610 <abort@plt+0x828>
   115e8:	ldr	r1, [r0]
   115ec:	mov	r0, r4
   115f0:	bl	10cbc <error@plt>
   115f4:	b	115d0 <abort@plt+0x7e8>
   115f8:	andeq	r8, r2, r4, lsr r1
   115fc:	andeq	r8, r2, r0, asr #2
   11600:	andeq	r8, r2, r0, lsr r1
   11604:	andeq	r7, r1, r4, lsl r9
   11608:	andeq	r7, r1, r0, lsr #18
   1160c:	ldrdeq	r8, [r2], -ip
   11610:	andeq	r7, r1, r4, lsr #18
   11614:	push	{r4, r5, r6, r7, r8, lr}
   11618:	cmp	r0, #2
   1161c:	ldr	r4, [pc, #148]	; 116b8 <abort@plt+0x8d0>
   11620:	mov	r5, #0
   11624:	sub	sp, sp, #16
   11628:	ldr	r6, [r4]
   1162c:	str	r5, [r4]
   11630:	beq	1164c <abort@plt+0x864>
   11634:	ldr	r3, [pc, #128]	; 116bc <abort@plt+0x8d4>
   11638:	mov	r2, #0
   1163c:	str	r6, [r4]
   11640:	str	r2, [r3]
   11644:	add	sp, sp, #16
   11648:	pop	{r4, r5, r6, r7, r8, pc}
   1164c:	mov	r8, r3
   11650:	mov	r7, r2
   11654:	str	r5, [sp]
   11658:	ldr	r3, [pc, #96]	; 116c0 <abort@plt+0x8d8>
   1165c:	ldr	r2, [pc, #96]	; 116c4 <abort@plt+0x8dc>
   11660:	bl	10cf8 <getopt_long@plt>
   11664:	cmn	r0, #1
   11668:	beq	11634 <abort@plt+0x84c>
   1166c:	cmp	r0, #104	; 0x68
   11670:	beq	116a8 <abort@plt+0x8c0>
   11674:	cmp	r0, #118	; 0x76
   11678:	bne	11634 <abort@plt+0x84c>
   1167c:	ldr	r3, [pc, #68]	; 116c8 <abort@plt+0x8e0>
   11680:	add	ip, sp, #48	; 0x30
   11684:	mov	r2, r8
   11688:	ldr	r0, [r3]
   1168c:	mov	r1, r7
   11690:	str	ip, [sp]
   11694:	ldr	r3, [sp, #40]	; 0x28
   11698:	str	ip, [sp, #12]
   1169c:	bl	15bc8 <abort@plt+0x4de0>
   116a0:	mov	r0, r5
   116a4:	bl	10d10 <exit@plt>
   116a8:	mov	r0, r5
   116ac:	ldr	r3, [sp, #44]	; 0x2c
   116b0:	blx	r3
   116b4:	b	11634 <abort@plt+0x84c>
   116b8:	andeq	r8, r2, r8, lsr r1
   116bc:	andeq	r8, r2, r8, lsr #2
   116c0:	andeq	r7, r1, r8, lsr #18
   116c4:	andeq	r7, r1, r8, asr r9
   116c8:	andeq	r8, r2, r4, lsr r1
   116cc:	push	{r4, r5, r6, r7, r8, lr}
   116d0:	sub	sp, sp, #16
   116d4:	ldr	r5, [pc, #176]	; 1178c <abort@plt+0x9a4>
   116d8:	ldrb	r8, [sp, #44]	; 0x2c
   116dc:	ldr	r4, [pc, #172]	; 11790 <abort@plt+0x9a8>
   116e0:	ldr	lr, [pc, #172]	; 11794 <abort@plt+0x9ac>
   116e4:	cmp	r8, #0
   116e8:	mov	r6, r2
   116ec:	movne	r2, r5
   116f0:	mov	r5, #0
   116f4:	mov	ip, #1
   116f8:	moveq	r2, lr
   116fc:	mov	r7, r3
   11700:	str	r5, [sp]
   11704:	ldr	r3, [pc, #140]	; 11798 <abort@plt+0x9b0>
   11708:	ldr	r8, [r4]
   1170c:	str	ip, [r4]
   11710:	bl	10cf8 <getopt_long@plt>
   11714:	cmn	r0, #1
   11718:	beq	11768 <abort@plt+0x980>
   1171c:	cmp	r0, #104	; 0x68
   11720:	beq	11774 <abort@plt+0x98c>
   11724:	cmp	r0, #118	; 0x76
   11728:	bne	11758 <abort@plt+0x970>
   1172c:	ldr	r3, [pc, #104]	; 1179c <abort@plt+0x9b4>
   11730:	add	ip, sp, #52	; 0x34
   11734:	mov	r2, r7
   11738:	ldr	r0, [r3]
   1173c:	mov	r1, r6
   11740:	str	ip, [sp]
   11744:	ldr	r3, [sp, #40]	; 0x28
   11748:	str	ip, [sp, #12]
   1174c:	bl	15bc8 <abort@plt+0x4de0>
   11750:	mov	r0, r5
   11754:	bl	10d10 <exit@plt>
   11758:	ldr	r3, [pc, #64]	; 117a0 <abort@plt+0x9b8>
   1175c:	ldr	r0, [r3]
   11760:	ldr	r3, [sp, #48]	; 0x30
   11764:	blx	r3
   11768:	str	r8, [r4]
   1176c:	add	sp, sp, #16
   11770:	pop	{r4, r5, r6, r7, r8, pc}
   11774:	mov	r0, r5
   11778:	ldr	r3, [sp, #48]	; 0x30
   1177c:	blx	r3
   11780:	str	r8, [r4]
   11784:	add	sp, sp, #16
   11788:	pop	{r4, r5, r6, r7, r8, pc}
   1178c:	strdeq	r7, [r1], -r4
   11790:	andeq	r8, r2, r8, lsr r1
   11794:	andeq	r7, r1, r8, asr r9
   11798:	andeq	r7, r1, r8, lsr #18
   1179c:	andeq	r8, r2, r4, lsr r1
   117a0:	ldrdeq	r8, [r2], -ip
   117a4:	push	{r4, r5, r6, lr}
   117a8:	subs	r4, r0, #0
   117ac:	beq	11820 <abort@plt+0xa38>
   117b0:	mov	r1, #47	; 0x2f
   117b4:	bl	10dac <strrchr@plt>
   117b8:	subs	r5, r0, #0
   117bc:	beq	1180c <abort@plt+0xa24>
   117c0:	add	r6, r5, #1
   117c4:	sub	r3, r6, r4
   117c8:	cmp	r3, #6
   117cc:	ble	1180c <abort@plt+0xa24>
   117d0:	mov	r2, #7
   117d4:	ldr	r1, [pc, #96]	; 1183c <abort@plt+0xa54>
   117d8:	sub	r0, r5, #6
   117dc:	bl	10ddc <strncmp@plt>
   117e0:	cmp	r0, #0
   117e4:	bne	1180c <abort@plt+0xa24>
   117e8:	mov	r2, #3
   117ec:	ldr	r1, [pc, #76]	; 11840 <abort@plt+0xa58>
   117f0:	mov	r0, r6
   117f4:	bl	10ddc <strncmp@plt>
   117f8:	cmp	r0, #0
   117fc:	movne	r4, r6
   11800:	ldreq	r3, [pc, #60]	; 11844 <abort@plt+0xa5c>
   11804:	addeq	r4, r5, #4
   11808:	streq	r4, [r3]
   1180c:	ldr	r2, [pc, #52]	; 11848 <abort@plt+0xa60>
   11810:	ldr	r3, [pc, #52]	; 1184c <abort@plt+0xa64>
   11814:	str	r4, [r2]
   11818:	str	r4, [r3]
   1181c:	pop	{r4, r5, r6, pc}
   11820:	ldr	r3, [pc, #40]	; 11850 <abort@plt+0xa68>
   11824:	mov	r2, #55	; 0x37
   11828:	mov	r1, #1
   1182c:	ldr	r3, [r3]
   11830:	ldr	r0, [pc, #28]	; 11854 <abort@plt+0xa6c>
   11834:	bl	10c80 <fwrite@plt>
   11838:	bl	10de8 <abort@plt>
   1183c:	andeq	r7, r1, r4, lsr #19
   11840:	andeq	r7, r1, ip, lsr #19
   11844:	andeq	r8, r2, r0, lsr #2
   11848:	andeq	r8, r2, r8, asr #2
   1184c:	andeq	r8, r2, r4, lsr #2
   11850:	andeq	r8, r2, r0, lsr r1
   11854:	andeq	r7, r1, ip, ror #18
   11858:	push	{r4, r5, r6, lr}
   1185c:	mov	r4, r0
   11860:	mov	r5, r1
   11864:	bl	16e8c <abort@plt+0x60a4>
   11868:	ldrb	r3, [r0]
   1186c:	bic	r3, r3, #32
   11870:	cmp	r3, #85	; 0x55
   11874:	bne	118d4 <abort@plt+0xaec>
   11878:	ldrb	r3, [r0, #1]
   1187c:	bic	r3, r3, #32
   11880:	cmp	r3, #84	; 0x54
   11884:	bne	11910 <abort@plt+0xb28>
   11888:	ldrb	r3, [r0, #2]
   1188c:	bic	r3, r3, #32
   11890:	cmp	r3, #70	; 0x46
   11894:	bne	11910 <abort@plt+0xb28>
   11898:	ldrb	r3, [r0, #3]
   1189c:	cmp	r3, #45	; 0x2d
   118a0:	bne	11910 <abort@plt+0xb28>
   118a4:	ldrb	r3, [r0, #4]
   118a8:	cmp	r3, #56	; 0x38
   118ac:	bne	11910 <abort@plt+0xb28>
   118b0:	ldrb	r3, [r0, #5]
   118b4:	cmp	r3, #0
   118b8:	bne	11910 <abort@plt+0xb28>
   118bc:	ldrb	r2, [r4]
   118c0:	ldr	r3, [pc, #152]	; 11960 <abort@plt+0xb78>
   118c4:	ldr	r0, [pc, #152]	; 11964 <abort@plt+0xb7c>
   118c8:	cmp	r2, #96	; 0x60
   118cc:	movne	r0, r3
   118d0:	pop	{r4, r5, r6, pc}
   118d4:	cmp	r3, #71	; 0x47
   118d8:	bne	11910 <abort@plt+0xb28>
   118dc:	ldrb	r3, [r0, #1]
   118e0:	bic	r3, r3, #32
   118e4:	cmp	r3, #66	; 0x42
   118e8:	bne	11910 <abort@plt+0xb28>
   118ec:	ldrb	r3, [r0, #2]
   118f0:	cmp	r3, #49	; 0x31
   118f4:	bne	11910 <abort@plt+0xb28>
   118f8:	ldrb	r3, [r0, #3]
   118fc:	cmp	r3, #56	; 0x38
   11900:	bne	11910 <abort@plt+0xb28>
   11904:	ldrb	r3, [r0, #4]
   11908:	cmp	r3, #48	; 0x30
   1190c:	beq	11924 <abort@plt+0xb3c>
   11910:	ldr	r3, [pc, #80]	; 11968 <abort@plt+0xb80>
   11914:	cmp	r5, #9
   11918:	ldr	r0, [pc, #76]	; 1196c <abort@plt+0xb84>
   1191c:	movne	r0, r3
   11920:	pop	{r4, r5, r6, pc}
   11924:	ldrb	r3, [r0, #5]
   11928:	cmp	r3, #51	; 0x33
   1192c:	bne	11910 <abort@plt+0xb28>
   11930:	ldrb	r3, [r0, #6]
   11934:	cmp	r3, #48	; 0x30
   11938:	bne	11910 <abort@plt+0xb28>
   1193c:	ldrb	r3, [r0, #7]
   11940:	cmp	r3, #0
   11944:	bne	11910 <abort@plt+0xb28>
   11948:	ldrb	r2, [r4]
   1194c:	ldr	r3, [pc, #28]	; 11970 <abort@plt+0xb88>
   11950:	ldr	r0, [pc, #28]	; 11974 <abort@plt+0xb8c>
   11954:	cmp	r2, #96	; 0x60
   11958:	movne	r0, r3
   1195c:	pop	{r4, r5, r6, pc}
   11960:	andeq	r7, r1, r8, lsl #20
   11964:	andeq	r7, r1, r4, lsl #20
   11968:	andeq	r7, r1, r8, lsl sl
   1196c:	andeq	r7, r1, r4, lsl sl
   11970:	andeq	r7, r1, r0, lsl sl
   11974:	andeq	r7, r1, ip, lsl #20
   11978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1197c:	sub	sp, sp, #140	; 0x8c
   11980:	mov	r9, r1
   11984:	str	r3, [sp, #24]
   11988:	mov	r3, #1
   1198c:	mov	sl, r0
   11990:	str	r2, [sp, #44]	; 0x2c
   11994:	str	r3, [sp, #28]
   11998:	bl	10c98 <__ctype_get_mb_cur_max@plt>
   1199c:	ldr	r3, [sp, #180]	; 0xb4
   119a0:	mov	fp, r9
   119a4:	mov	r9, sl
   119a8:	lsr	r3, r3, #1
   119ac:	and	r3, r3, #1
   119b0:	str	r3, [sp, #40]	; 0x28
   119b4:	ldr	r3, [sp, #180]	; 0xb4
   119b8:	mov	r2, #0
   119bc:	and	r3, r3, #4
   119c0:	str	r3, [sp, #100]	; 0x64
   119c4:	ldr	r3, [sp, #180]	; 0xb4
   119c8:	str	r2, [sp, #76]	; 0x4c
   119cc:	and	r3, r3, #1
   119d0:	str	r3, [sp, #96]	; 0x60
   119d4:	str	r2, [sp, #36]	; 0x24
   119d8:	str	r2, [sp, #56]	; 0x38
   119dc:	str	r2, [sp, #68]	; 0x44
   119e0:	str	r2, [sp, #72]	; 0x48
   119e4:	str	r2, [sp, #84]	; 0x54
   119e8:	str	r0, [sp, #80]	; 0x50
   119ec:	ldr	r3, [sp, #176]	; 0xb0
   119f0:	cmp	r3, #10
   119f4:	ldrls	pc, [pc, r3, lsl #2]
   119f8:	b	12bd0 <abort@plt+0x1de8>
   119fc:	andeq	r1, r1, r8, lsr #20
   11a00:	andeq	r1, r1, r8, asr #26
   11a04:	andeq	r1, r1, r0, lsr #29
   11a08:	andeq	r1, r1, ip, ror sp
   11a0c:	strdeq	r1, [r1], -r4
   11a10:	ldrdeq	r1, [r1], -r4
   11a14:	muleq	r1, ip, sp
   11a18:	andeq	r1, r1, r0, asr #27
   11a1c:	andeq	r1, r1, r8, ror #27
   11a20:	andeq	r1, r1, r8, ror #27
   11a24:	andeq	r1, r1, r8, ror #27
   11a28:	mov	r3, #0
   11a2c:	ldr	r1, [sp, #56]	; 0x38
   11a30:	ldr	r2, [sp, #176]	; 0xb0
   11a34:	ldr	lr, [sp, #176]	; 0xb0
   11a38:	mov	r8, r3
   11a3c:	mov	ip, r3
   11a40:	str	r3, [sp, #40]	; 0x28
   11a44:	mov	r3, r1
   11a48:	cmp	r2, #2
   11a4c:	moveq	r3, #0
   11a50:	andne	r3, r3, #1
   11a54:	mov	r0, r3
   11a58:	str	r3, [sp, #92]	; 0x5c
   11a5c:	ldr	r3, [sp, #68]	; 0x44
   11a60:	sub	lr, lr, #2
   11a64:	adds	r2, r3, #0
   11a68:	movne	r2, #1
   11a6c:	and	r3, r1, ip
   11a70:	and	r3, r2, r3
   11a74:	clz	lr, lr
   11a78:	str	r3, [sp, #88]	; 0x58
   11a7c:	lsr	lr, lr, #5
   11a80:	mov	r3, ip
   11a84:	and	r3, r3, lr
   11a88:	mov	sl, #0
   11a8c:	and	r0, r2, r0
   11a90:	str	r3, [sp, #64]	; 0x40
   11a94:	eor	r3, r1, #1
   11a98:	str	lr, [sp, #52]	; 0x34
   11a9c:	str	r0, [sp, #48]	; 0x30
   11aa0:	str	r3, [sp, #60]	; 0x3c
   11aa4:	ldr	r3, [sp, #24]
   11aa8:	cmn	r3, #1
   11aac:	beq	11fdc <abort@plt+0x11f4>
   11ab0:	subs	r7, r3, sl
   11ab4:	movne	r7, #1
   11ab8:	cmp	r7, #0
   11abc:	beq	11ff4 <abort@plt+0x120c>
   11ac0:	ldr	r3, [sp, #48]	; 0x30
   11ac4:	cmp	r3, #0
   11ac8:	beq	12360 <abort@plt+0x1578>
   11acc:	ldr	r2, [sp, #68]	; 0x44
   11ad0:	ldr	r1, [sp, #24]
   11ad4:	cmp	r2, #1
   11ad8:	mov	r3, r2
   11adc:	movls	r3, #0
   11ae0:	movhi	r3, #1
   11ae4:	cmn	r1, #1
   11ae8:	movne	r3, #0
   11aec:	cmp	r3, #0
   11af0:	add	r4, sl, r2
   11af4:	beq	11b04 <abort@plt+0xd1c>
   11af8:	ldr	r0, [sp, #44]	; 0x2c
   11afc:	bl	10d1c <strlen@plt>
   11b00:	str	r0, [sp, #24]
   11b04:	ldr	r3, [sp, #24]
   11b08:	cmp	r3, r4
   11b0c:	ldr	r3, [sp, #44]	; 0x2c
   11b10:	add	r5, r3, sl
   11b14:	bcc	12368 <abort@plt+0x1580>
   11b18:	mov	r0, r5
   11b1c:	ldr	r2, [sp, #68]	; 0x44
   11b20:	ldr	r1, [sp, #72]	; 0x48
   11b24:	bl	10c38 <memcmp@plt>
   11b28:	cmp	r0, #0
   11b2c:	bne	12368 <abort@plt+0x1580>
   11b30:	ldr	r3, [sp, #40]	; 0x28
   11b34:	cmp	r3, #0
   11b38:	bne	12d24 <abort@plt+0x1f3c>
   11b3c:	ldrb	r4, [r5]
   11b40:	cmp	r4, #126	; 0x7e
   11b44:	ldrls	pc, [pc, r4, lsl #2]
   11b48:	b	12c60 <abort@plt+0x1e78>
   11b4c:	andeq	r2, r1, r0, lsr #4
   11b50:	andeq	r2, r1, r0, ror #24
   11b54:	andeq	r2, r1, r0, ror #24
   11b58:	andeq	r2, r1, r0, ror #24
   11b5c:	andeq	r2, r1, r0, ror #24
   11b60:	andeq	r2, r1, r0, ror #24
   11b64:	andeq	r2, r1, r0, ror #24
   11b68:	andeq	r2, r1, ip, lsl #4
   11b6c:	strdeq	r2, [r1], -r8
   11b70:	ldrdeq	r2, [r1], -r4
   11b74:			; <UNDEFINED> instruction: 0x000121b4
   11b78:	andeq	r2, r1, r4, ror #3
   11b7c:	andeq	r2, r1, ip, lsl r1
   11b80:	andeq	r2, r1, r0, asr r3
   11b84:	andeq	r2, r1, r0, ror #24
   11b88:	andeq	r2, r1, r0, ror #24
   11b8c:	andeq	r2, r1, r0, ror #24
   11b90:	andeq	r2, r1, r0, ror #24
   11b94:	andeq	r2, r1, r0, ror #24
   11b98:	andeq	r2, r1, r0, ror #24
   11b9c:	andeq	r2, r1, r0, ror #24
   11ba0:	andeq	r2, r1, r0, ror #24
   11ba4:	andeq	r2, r1, r0, ror #24
   11ba8:	andeq	r2, r1, r0, ror #24
   11bac:	andeq	r2, r1, r0, ror #24
   11bb0:	andeq	r2, r1, r0, ror #24
   11bb4:	andeq	r2, r1, r0, ror #24
   11bb8:	andeq	r2, r1, r0, ror #24
   11bbc:	andeq	r2, r1, r0, ror #24
   11bc0:	andeq	r2, r1, r0, ror #24
   11bc4:	andeq	r2, r1, r0, ror #24
   11bc8:	andeq	r2, r1, r0, ror #24
   11bcc:	andeq	r2, r1, r0, asr #6
   11bd0:	andeq	r2, r1, r0, lsr #6
   11bd4:	andeq	r2, r1, r0, lsr #6
   11bd8:	andeq	r2, r1, r0, lsl #6
   11bdc:	andeq	r2, r1, r0, lsr #6
   11be0:	andeq	r2, r1, ip, lsl #2
   11be4:	andeq	r2, r1, r0, lsr #6
   11be8:	andeq	r2, r1, r8, ror #1
   11bec:	andeq	r2, r1, r0, lsr #6
   11bf0:	andeq	r2, r1, r0, lsr #6
   11bf4:	andeq	r2, r1, r0, lsr #6
   11bf8:	andeq	r2, r1, ip, lsl #2
   11bfc:	andeq	r2, r1, ip, lsl #2
   11c00:	andeq	r2, r1, ip, lsl #2
   11c04:	andeq	r2, r1, ip, lsl #2
   11c08:	andeq	r2, r1, ip, lsl #2
   11c0c:	andeq	r2, r1, ip, lsl #2
   11c10:	andeq	r2, r1, ip, lsl #2
   11c14:	andeq	r2, r1, ip, lsl #2
   11c18:	andeq	r2, r1, ip, lsl #2
   11c1c:	andeq	r2, r1, ip, lsl #2
   11c20:	andeq	r2, r1, ip, lsl #2
   11c24:	andeq	r2, r1, ip, lsl #2
   11c28:	andeq	r2, r1, ip, lsl #2
   11c2c:	andeq	r2, r1, ip, lsl #2
   11c30:	andeq	r2, r1, ip, lsl #2
   11c34:	andeq	r2, r1, ip, lsl #2
   11c38:	andeq	r2, r1, r0, lsr #6
   11c3c:	andeq	r2, r1, r0, lsr #6
   11c40:	andeq	r2, r1, r0, lsr #6
   11c44:	andeq	r2, r1, r0, lsr #6
   11c48:	muleq	r1, r8, r0
   11c4c:	andeq	r2, r1, r0, ror #24
   11c50:	andeq	r2, r1, ip, lsl #2
   11c54:	andeq	r2, r1, ip, lsl #2
   11c58:	andeq	r2, r1, ip, lsl #2
   11c5c:	andeq	r2, r1, ip, lsl #2
   11c60:	andeq	r2, r1, ip, lsl #2
   11c64:	andeq	r2, r1, ip, lsl #2
   11c68:	andeq	r2, r1, ip, lsl #2
   11c6c:	andeq	r2, r1, ip, lsl #2
   11c70:	andeq	r2, r1, ip, lsl #2
   11c74:	andeq	r2, r1, ip, lsl #2
   11c78:	andeq	r2, r1, ip, lsl #2
   11c7c:	andeq	r2, r1, ip, lsl #2
   11c80:	andeq	r2, r1, ip, lsl #2
   11c84:	andeq	r2, r1, ip, lsl #2
   11c88:	andeq	r2, r1, ip, lsl #2
   11c8c:	andeq	r2, r1, ip, lsl #2
   11c90:	andeq	r2, r1, ip, lsl #2
   11c94:	andeq	r2, r1, ip, lsl #2
   11c98:	andeq	r2, r1, ip, lsl #2
   11c9c:	andeq	r2, r1, ip, lsl #2
   11ca0:	andeq	r2, r1, ip, lsl #2
   11ca4:	andeq	r2, r1, ip, lsl #2
   11ca8:	andeq	r2, r1, ip, lsl #2
   11cac:	andeq	r2, r1, ip, lsl #2
   11cb0:	andeq	r2, r1, ip, lsl #2
   11cb4:	andeq	r2, r1, ip, lsl #2
   11cb8:	andeq	r2, r1, r0, lsr #6
   11cbc:	andeq	r2, r1, r4, rrx
   11cc0:	andeq	r2, r1, ip, lsl #2
   11cc4:	andeq	r2, r1, r0, lsr #6
   11cc8:	andeq	r2, r1, ip, lsl #2
   11ccc:	andeq	r2, r1, r0, lsr #6
   11cd0:	andeq	r2, r1, ip, lsl #2
   11cd4:	andeq	r2, r1, ip, lsl #2
   11cd8:	andeq	r2, r1, ip, lsl #2
   11cdc:	andeq	r2, r1, ip, lsl #2
   11ce0:	andeq	r2, r1, ip, lsl #2
   11ce4:	andeq	r2, r1, ip, lsl #2
   11ce8:	andeq	r2, r1, ip, lsl #2
   11cec:	andeq	r2, r1, ip, lsl #2
   11cf0:	andeq	r2, r1, ip, lsl #2
   11cf4:	andeq	r2, r1, ip, lsl #2
   11cf8:	andeq	r2, r1, ip, lsl #2
   11cfc:	andeq	r2, r1, ip, lsl #2
   11d00:	andeq	r2, r1, ip, lsl #2
   11d04:	andeq	r2, r1, ip, lsl #2
   11d08:	andeq	r2, r1, ip, lsl #2
   11d0c:	andeq	r2, r1, ip, lsl #2
   11d10:	andeq	r2, r1, ip, lsl #2
   11d14:	andeq	r2, r1, ip, lsl #2
   11d18:	andeq	r2, r1, ip, lsl #2
   11d1c:	andeq	r2, r1, ip, lsl #2
   11d20:	andeq	r2, r1, ip, lsl #2
   11d24:	andeq	r2, r1, ip, lsl #2
   11d28:	andeq	r2, r1, ip, lsl #2
   11d2c:	andeq	r2, r1, ip, lsl #2
   11d30:	andeq	r2, r1, ip, lsl #2
   11d34:	andeq	r2, r1, ip, lsl #2
   11d38:	andeq	r1, r1, ip, lsl pc
   11d3c:	andeq	r2, r1, r0, lsr #6
   11d40:	andeq	r1, r1, ip, lsl pc
   11d44:	andeq	r2, r1, r0, lsl #6
   11d48:	mov	r3, #1
   11d4c:	str	r3, [sp, #40]	; 0x28
   11d50:	str	r3, [sp, #68]	; 0x44
   11d54:	mov	r8, #0
   11d58:	ldr	r3, [pc, #4056]	; 12d38 <abort@plt+0x1f50>
   11d5c:	str	r3, [sp, #72]	; 0x48
   11d60:	mov	r3, #2
   11d64:	str	r3, [sp, #176]	; 0xb0
   11d68:	ldr	r1, [sp, #56]	; 0x38
   11d6c:	mov	r2, r3
   11d70:	ldr	ip, [sp, #40]	; 0x28
   11d74:	mov	lr, r3
   11d78:	b	11a44 <abort@plt+0xc5c>
   11d7c:	mov	r3, #1
   11d80:	str	r3, [sp, #56]	; 0x38
   11d84:	str	r3, [sp, #68]	; 0x44
   11d88:	str	r3, [sp, #40]	; 0x28
   11d8c:	ldr	r3, [pc, #4004]	; 12d38 <abort@plt+0x1f50>
   11d90:	mov	r8, #0
   11d94:	str	r3, [sp, #72]	; 0x48
   11d98:	b	11d60 <abort@plt+0xf78>
   11d9c:	mov	r3, #1
   11da0:	str	r3, [sp, #56]	; 0x38
   11da4:	str	r3, [sp, #68]	; 0x44
   11da8:	str	r3, [sp, #40]	; 0x28
   11dac:	ldr	r3, [pc, #3976]	; 12d3c <abort@plt+0x1f54>
   11db0:	mov	r8, #0
   11db4:	str	r3, [sp, #72]	; 0x48
   11db8:	mov	r3, #5
   11dbc:	b	11d64 <abort@plt+0xf7c>
   11dc0:	mov	r3, #0
   11dc4:	str	r3, [sp, #40]	; 0x28
   11dc8:	mov	r3, #1
   11dcc:	str	r3, [sp, #56]	; 0x38
   11dd0:	mov	r8, #0
   11dd4:	mov	r1, r3
   11dd8:	ldr	r2, [sp, #176]	; 0xb0
   11ddc:	ldr	ip, [sp, #40]	; 0x28
   11de0:	ldr	lr, [sp, #176]	; 0xb0
   11de4:	b	11a44 <abort@plt+0xc5c>
   11de8:	ldr	r3, [sp, #176]	; 0xb0
   11dec:	cmp	r3, #10
   11df0:	beq	11e34 <abort@plt+0x104c>
   11df4:	mov	r2, #5
   11df8:	ldr	r1, [pc, #3904]	; 12d40 <abort@plt+0x1f58>
   11dfc:	mov	r0, #0
   11e00:	bl	10c50 <dcgettext@plt>
   11e04:	ldr	r2, [pc, #3892]	; 12d40 <abort@plt+0x1f58>
   11e08:	cmp	r0, r2
   11e0c:	str	r0, [sp, #188]	; 0xbc
   11e10:	beq	12ecc <abort@plt+0x20e4>
   11e14:	mov	r2, #5
   11e18:	ldr	r1, [pc, #3864]	; 12d38 <abort@plt+0x1f50>
   11e1c:	mov	r0, #0
   11e20:	bl	10c50 <dcgettext@plt>
   11e24:	ldr	r2, [pc, #3852]	; 12d38 <abort@plt+0x1f50>
   11e28:	cmp	r0, r2
   11e2c:	str	r0, [sp, #192]	; 0xc0
   11e30:	beq	12ebc <abort@plt+0x20d4>
   11e34:	ldr	r8, [sp, #40]	; 0x28
   11e38:	cmp	r8, #0
   11e3c:	movne	r8, #0
   11e40:	bne	11e70 <abort@plt+0x1088>
   11e44:	ldr	r3, [sp, #188]	; 0xbc
   11e48:	ldrb	r3, [r3]
   11e4c:	cmp	r3, #0
   11e50:	beq	11e70 <abort@plt+0x1088>
   11e54:	ldr	r2, [sp, #188]	; 0xbc
   11e58:	cmp	fp, r8
   11e5c:	strbhi	r3, [r9, r8]
   11e60:	ldrb	r3, [r2, #1]!
   11e64:	add	r8, r8, #1
   11e68:	cmp	r3, #0
   11e6c:	bne	11e58 <abort@plt+0x1070>
   11e70:	ldr	r0, [sp, #192]	; 0xc0
   11e74:	bl	10d1c <strlen@plt>
   11e78:	ldr	r3, [sp, #192]	; 0xc0
   11e7c:	ldr	r2, [sp, #176]	; 0xb0
   11e80:	str	r3, [sp, #72]	; 0x48
   11e84:	mov	r3, #1
   11e88:	str	r3, [sp, #56]	; 0x38
   11e8c:	mov	r1, r3
   11e90:	ldr	ip, [sp, #40]	; 0x28
   11e94:	ldr	lr, [sp, #176]	; 0xb0
   11e98:	str	r0, [sp, #68]	; 0x44
   11e9c:	b	11a44 <abort@plt+0xc5c>
   11ea0:	ldr	r3, [sp, #40]	; 0x28
   11ea4:	cmp	r3, #0
   11ea8:	beq	12b50 <abort@plt+0x1d68>
   11eac:	mov	r3, #1
   11eb0:	str	r3, [sp, #68]	; 0x44
   11eb4:	ldr	r3, [pc, #3708]	; 12d38 <abort@plt+0x1f50>
   11eb8:	str	r3, [sp, #72]	; 0x48
   11ebc:	mov	r8, #0
   11ec0:	ldr	r1, [sp, #56]	; 0x38
   11ec4:	ldr	r2, [sp, #176]	; 0xb0
   11ec8:	ldr	ip, [sp, #40]	; 0x28
   11ecc:	ldr	lr, [sp, #176]	; 0xb0
   11ed0:	b	11a44 <abort@plt+0xc5c>
   11ed4:	ldr	r3, [sp, #40]	; 0x28
   11ed8:	cmp	r3, #0
   11edc:	beq	12bd4 <abort@plt+0x1dec>
   11ee0:	str	r3, [sp, #56]	; 0x38
   11ee4:	mov	r3, #1
   11ee8:	str	r3, [sp, #68]	; 0x44
   11eec:	ldr	r3, [pc, #3656]	; 12d3c <abort@plt+0x1f54>
   11ef0:	b	11eb8 <abort@plt+0x10d0>
   11ef4:	ldr	r3, [sp, #40]	; 0x28
   11ef8:	cmp	r3, #0
   11efc:	mov	r3, #1
   11f00:	streq	r3, [sp, #56]	; 0x38
   11f04:	beq	12b50 <abort@plt+0x1d68>
   11f08:	str	r3, [sp, #68]	; 0x44
   11f0c:	ldr	r3, [pc, #3620]	; 12d38 <abort@plt+0x1f50>
   11f10:	mov	r8, #0
   11f14:	str	r3, [sp, #72]	; 0x48
   11f18:	b	11d60 <abort@plt+0xf78>
   11f1c:	ldr	r3, [sp, #24]
   11f20:	ldr	r6, [sp, #48]	; 0x30
   11f24:	cmn	r3, #1
   11f28:	beq	12584 <abort@plt+0x179c>
   11f2c:	subs	r3, r3, #1
   11f30:	movne	r3, #1
   11f34:	cmp	r3, #0
   11f38:	beq	12304 <abort@plt+0x151c>
   11f3c:	ldr	r1, [sp, #52]	; 0x34
   11f40:	mov	r7, r3
   11f44:	mov	r3, #0
   11f48:	str	r3, [sp, #32]
   11f4c:	ldr	r3, [sp, #60]	; 0x3c
   11f50:	orr	r2, r1, r3
   11f54:	ldr	r3, [sp, #40]	; 0x28
   11f58:	eor	r2, r2, #1
   11f5c:	orr	r2, r3, r2
   11f60:	tst	r2, #255	; 0xff
   11f64:	bne	12888 <abort@plt+0x1aa0>
   11f68:	cmp	r6, #0
   11f6c:	bne	12148 <abort@plt+0x1360>
   11f70:	ldr	r3, [sp, #36]	; 0x24
   11f74:	add	sl, sl, #1
   11f78:	and	r3, r3, r7
   11f7c:	uxtb	r6, r3
   11f80:	cmp	r6, #0
   11f84:	beq	11fb0 <abort@plt+0x11c8>
   11f88:	cmp	fp, r8
   11f8c:	movhi	r3, #39	; 0x27
   11f90:	strbhi	r3, [r9, r8]
   11f94:	add	r3, r8, #1
   11f98:	cmp	fp, r3
   11f9c:	movhi	r2, #39	; 0x27
   11fa0:	add	r8, r8, #2
   11fa4:	strbhi	r2, [r9, r3]
   11fa8:	mov	r3, #0
   11fac:	str	r3, [sp, #36]	; 0x24
   11fb0:	ldr	r2, [sp, #32]
   11fb4:	cmp	r8, fp
   11fb8:	ldr	r3, [sp, #28]
   11fbc:	strbcc	r4, [r9, r8]
   11fc0:	cmp	r2, #0
   11fc4:	moveq	r3, #0
   11fc8:	str	r3, [sp, #28]
   11fcc:	ldr	r3, [sp, #24]
   11fd0:	add	r8, r8, #1
   11fd4:	cmn	r3, #1
   11fd8:	bne	11ab0 <abort@plt+0xcc8>
   11fdc:	ldr	r3, [sp, #44]	; 0x2c
   11fe0:	ldrb	r3, [r3, sl]
   11fe4:	adds	r7, r3, #0
   11fe8:	movne	r7, #1
   11fec:	cmp	r7, #0
   11ff0:	bne	11ac0 <abort@plt+0xcd8>
   11ff4:	ldr	r3, [sp, #64]	; 0x40
   11ff8:	cmp	r8, #0
   11ffc:	movne	r3, #0
   12000:	andeq	r3, r3, #1
   12004:	cmp	r3, #0
   12008:	str	r3, [sp, #64]	; 0x40
   1200c:	bne	12ab0 <abort@plt+0x1cc8>
   12010:	ldr	r3, [sp, #40]	; 0x28
   12014:	ldr	r2, [sp, #52]	; 0x34
   12018:	eor	r3, r3, #1
   1201c:	ands	r2, r2, r3
   12020:	beq	12edc <abort@plt+0x20f4>
   12024:	ldr	r3, [sp, #76]	; 0x4c
   12028:	cmp	r3, #0
   1202c:	beq	12eac <abort@plt+0x20c4>
   12030:	ldr	r3, [sp, #28]
   12034:	cmp	r3, #0
   12038:	bne	12e68 <abort@plt+0x2080>
   1203c:	ldr	r2, [sp, #84]	; 0x54
   12040:	clz	r3, fp
   12044:	cmp	r2, #0
   12048:	lsr	r3, r3, #5
   1204c:	moveq	r3, #0
   12050:	cmp	r3, #0
   12054:	beq	12e08 <abort@plt+0x2020>
   12058:	mov	fp, r2
   1205c:	str	r3, [sp, #76]	; 0x4c
   12060:	b	119ec <abort@plt+0xc04>
   12064:	ldr	r3, [sp, #176]	; 0xb0
   12068:	ldr	r6, [sp, #48]	; 0x30
   1206c:	cmp	r3, #2
   12070:	beq	125a8 <abort@plt+0x17c0>
   12074:	ldr	r3, [sp, #88]	; 0x58
   12078:	cmp	r3, #0
   1207c:	beq	12b2c <abort@plt+0x1d44>
   12080:	mov	r3, #0
   12084:	add	sl, sl, #1
   12088:	ldr	r6, [sp, #36]	; 0x24
   1208c:	str	r3, [sp, #32]
   12090:	mov	r4, #92	; 0x5c
   12094:	b	11f80 <abort@plt+0x1198>
   12098:	ldr	r3, [sp, #176]	; 0xb0
   1209c:	ldr	r6, [sp, #48]	; 0x30
   120a0:	cmp	r3, #2
   120a4:	beq	125d8 <abort@plt+0x17f0>
   120a8:	cmp	r3, #5
   120ac:	bne	12b3c <abort@plt+0x1d54>
   120b0:	ldr	r3, [sp, #100]	; 0x64
   120b4:	cmp	r3, #0
   120b8:	beq	12ba0 <abort@plt+0x1db8>
   120bc:	ldr	r2, [sp, #24]
   120c0:	add	r3, sl, #2
   120c4:	cmp	r2, r3
   120c8:	bls	120d8 <abort@plt+0x12f0>
   120cc:	ldrb	r4, [r5, #1]
   120d0:	cmp	r4, #63	; 0x3f
   120d4:	beq	12d48 <abort@plt+0x1f60>
   120d8:	mov	r1, #0
   120dc:	str	r1, [sp, #32]
   120e0:	mov	r4, #63	; 0x3f
   120e4:	b	11f4c <abort@plt+0x1164>
   120e8:	ldr	r3, [sp, #176]	; 0xb0
   120ec:	ldr	r6, [sp, #48]	; 0x30
   120f0:	cmp	r3, #2
   120f4:	beq	12604 <abort@plt+0x181c>
   120f8:	str	r7, [sp, #32]
   120fc:	str	r7, [sp, #76]	; 0x4c
   12100:	mov	r1, #0
   12104:	mov	r4, #39	; 0x27
   12108:	b	11f4c <abort@plt+0x1164>
   1210c:	ldr	r6, [sp, #48]	; 0x30
   12110:	ldr	r1, [sp, #52]	; 0x34
   12114:	str	r7, [sp, #32]
   12118:	b	11f4c <abort@plt+0x1164>
   1211c:	ldr	r6, [sp, #48]	; 0x30
   12120:	ldr	r1, [sp, #52]	; 0x34
   12124:	mov	r4, #12
   12128:	mov	r3, #102	; 0x66
   1212c:	ldr	r2, [sp, #56]	; 0x38
   12130:	cmp	r2, #0
   12134:	streq	r2, [sp, #32]
   12138:	beq	11f4c <abort@plt+0x1164>
   1213c:	mov	r4, r3
   12140:	mov	r3, #0
   12144:	str	r3, [sp, #32]
   12148:	ldr	r3, [sp, #40]	; 0x28
   1214c:	cmp	r3, #0
   12150:	bne	128c0 <abort@plt+0x1ad8>
   12154:	ldr	r3, [sp, #36]	; 0x24
   12158:	eor	r3, r3, #1
   1215c:	and	r3, r3, r1
   12160:	ands	r3, r3, #255	; 0xff
   12164:	beq	1219c <abort@plt+0x13b4>
   12168:	cmp	fp, r8
   1216c:	movhi	r2, #39	; 0x27
   12170:	strbhi	r2, [r9, r8]
   12174:	add	r2, r8, #1
   12178:	cmp	fp, r2
   1217c:	movhi	r1, #36	; 0x24
   12180:	strbhi	r1, [r9, r2]
   12184:	add	r2, r8, #2
   12188:	cmp	fp, r2
   1218c:	add	r8, r8, #3
   12190:	movhi	r1, #39	; 0x27
   12194:	strbhi	r1, [r9, r2]
   12198:	str	r3, [sp, #36]	; 0x24
   1219c:	cmp	fp, r8
   121a0:	movhi	r3, #92	; 0x5c
   121a4:	strbhi	r3, [r9, r8]
   121a8:	add	sl, sl, #1
   121ac:	add	r8, r8, #1
   121b0:	b	11fb0 <abort@plt+0x11c8>
   121b4:	ldr	r6, [sp, #48]	; 0x30
   121b8:	mov	r4, #10
   121bc:	mov	r3, #110	; 0x6e
   121c0:	ldr	r2, [sp, #64]	; 0x40
   121c4:	cmp	r2, #0
   121c8:	bne	12c48 <abort@plt+0x1e60>
   121cc:	ldr	r1, [sp, #52]	; 0x34
   121d0:	b	1212c <abort@plt+0x1344>
   121d4:	ldr	r6, [sp, #48]	; 0x30
   121d8:	ldr	r1, [sp, #52]	; 0x34
   121dc:	mov	r3, #116	; 0x74
   121e0:	b	1212c <abort@plt+0x1344>
   121e4:	ldr	r6, [sp, #48]	; 0x30
   121e8:	ldr	r1, [sp, #52]	; 0x34
   121ec:	mov	r4, #11
   121f0:	mov	r3, #118	; 0x76
   121f4:	b	1212c <abort@plt+0x1344>
   121f8:	ldr	r6, [sp, #48]	; 0x30
   121fc:	ldr	r1, [sp, #52]	; 0x34
   12200:	mov	r4, #8
   12204:	mov	r3, #98	; 0x62
   12208:	b	1212c <abort@plt+0x1344>
   1220c:	ldr	r6, [sp, #48]	; 0x30
   12210:	ldr	r1, [sp, #52]	; 0x34
   12214:	mov	r4, #7
   12218:	mov	r3, #97	; 0x61
   1221c:	b	1212c <abort@plt+0x1344>
   12220:	ldr	r3, [sp, #56]	; 0x38
   12224:	ldr	r6, [sp, #48]	; 0x30
   12228:	cmp	r3, #0
   1222c:	beq	126f0 <abort@plt+0x1908>
   12230:	ldr	r3, [sp, #40]	; 0x28
   12234:	cmp	r3, #0
   12238:	bne	12d24 <abort@plt+0x1f3c>
   1223c:	ldr	r3, [sp, #36]	; 0x24
   12240:	ldr	r2, [sp, #52]	; 0x34
   12244:	eor	r3, r3, #1
   12248:	ands	r3, r2, r3
   1224c:	moveq	r2, r8
   12250:	beq	12288 <abort@plt+0x14a0>
   12254:	cmp	fp, r8
   12258:	movhi	r2, #39	; 0x27
   1225c:	strbhi	r2, [r9, r8]
   12260:	add	r2, r8, #1
   12264:	cmp	fp, r2
   12268:	movhi	r1, #36	; 0x24
   1226c:	strbhi	r1, [r9, r2]
   12270:	add	r2, r8, #2
   12274:	cmp	fp, r2
   12278:	movhi	r1, #39	; 0x27
   1227c:	strbhi	r1, [r9, r2]
   12280:	add	r2, r8, #3
   12284:	str	r3, [sp, #36]	; 0x24
   12288:	cmp	fp, r2
   1228c:	movhi	r3, #92	; 0x5c
   12290:	strbhi	r3, [r9, r2]
   12294:	ldr	r3, [sp, #92]	; 0x5c
   12298:	add	r8, r2, #1
   1229c:	cmp	r3, #0
   122a0:	beq	12c24 <abort@plt+0x1e3c>
   122a4:	ldr	r1, [sp, #24]
   122a8:	add	r3, sl, #1
   122ac:	cmp	r1, r3
   122b0:	bls	122e8 <abort@plt+0x1500>
   122b4:	ldr	r1, [sp, #44]	; 0x2c
   122b8:	ldrb	r3, [r1, r3]
   122bc:	sub	r3, r3, #48	; 0x30
   122c0:	cmp	r3, #9
   122c4:	bhi	122e8 <abort@plt+0x1500>
   122c8:	cmp	fp, r8
   122cc:	movhi	r3, #48	; 0x30
   122d0:	strbhi	r3, [r9, r8]
   122d4:	add	r3, r2, #2
   122d8:	cmp	fp, r3
   122dc:	add	r8, r2, #3
   122e0:	movhi	r1, #48	; 0x30
   122e4:	strbhi	r1, [r9, r3]
   122e8:	ldr	r3, [sp, #40]	; 0x28
   122ec:	ldr	r1, [sp, #52]	; 0x34
   122f0:	mov	r7, r3
   122f4:	str	r3, [sp, #32]
   122f8:	mov	r4, #48	; 0x30
   122fc:	b	11f4c <abort@plt+0x1164>
   12300:	ldr	r6, [sp, #48]	; 0x30
   12304:	cmp	sl, #0
   12308:	streq	r7, [sp, #32]
   1230c:	beq	1232c <abort@plt+0x1544>
   12310:	mov	r3, #0
   12314:	ldr	r1, [sp, #52]	; 0x34
   12318:	str	r3, [sp, #32]
   1231c:	b	11f4c <abort@plt+0x1164>
   12320:	ldr	r6, [sp, #48]	; 0x30
   12324:	mov	r3, #0
   12328:	str	r3, [sp, #32]
   1232c:	ldr	r3, [sp, #64]	; 0x40
   12330:	cmp	r3, #0
   12334:	bne	12ab0 <abort@plt+0x1cc8>
   12338:	ldr	r1, [sp, #52]	; 0x34
   1233c:	b	11f4c <abort@plt+0x1164>
   12340:	ldr	r3, [sp, #48]	; 0x30
   12344:	mov	r6, r3
   12348:	str	r3, [sp, #32]
   1234c:	b	1232c <abort@plt+0x1544>
   12350:	ldr	r6, [sp, #48]	; 0x30
   12354:	mov	r4, #13
   12358:	mov	r3, #114	; 0x72
   1235c:	b	121c0 <abort@plt+0x13d8>
   12360:	ldr	r3, [sp, #44]	; 0x2c
   12364:	add	r5, r3, sl
   12368:	ldrb	r4, [r5]
   1236c:	cmp	r4, #126	; 0x7e
   12370:	ldrls	pc, [pc, r4, lsl #2]
   12374:	b	12710 <abort@plt+0x1928>
   12378:	andeq	r2, r1, r0, ror #13
   1237c:	andeq	r2, r1, r0, lsl r7
   12380:	andeq	r2, r1, r0, lsl r7
   12384:	andeq	r2, r1, r0, lsl r7
   12388:	andeq	r2, r1, r0, lsl r7
   1238c:	andeq	r2, r1, r0, lsl r7
   12390:	andeq	r2, r1, r0, lsl r7
   12394:	ldrdeq	r2, [r1], -r8
   12398:	ldrdeq	r2, [r1], -r0
   1239c:	andeq	r2, r1, r4, asr #13
   123a0:			; <UNDEFINED> instruction: 0x000126bc
   123a4:			; <UNDEFINED> instruction: 0x000126b4
   123a8:	andeq	r2, r1, ip, lsr #13
   123ac:	andeq	r2, r1, r4, lsr #13
   123b0:	andeq	r2, r1, r0, lsl r7
   123b4:	andeq	r2, r1, r0, lsl r7
   123b8:	andeq	r2, r1, r0, lsl r7
   123bc:	andeq	r2, r1, r0, lsl r7
   123c0:	andeq	r2, r1, r0, lsl r7
   123c4:	andeq	r2, r1, r0, lsl r7
   123c8:	andeq	r2, r1, r0, lsl r7
   123cc:	andeq	r2, r1, r0, lsl r7
   123d0:	andeq	r2, r1, r0, lsl r7
   123d4:	andeq	r2, r1, r0, lsl r7
   123d8:	andeq	r2, r1, r0, lsl r7
   123dc:	andeq	r2, r1, r0, lsl r7
   123e0:	andeq	r2, r1, r0, lsl r7
   123e4:	andeq	r2, r1, r0, lsl r7
   123e8:	andeq	r2, r1, r0, lsl r7
   123ec:	andeq	r2, r1, r0, lsl r7
   123f0:	andeq	r2, r1, r0, lsl r7
   123f4:	andeq	r2, r1, r0, lsl r7
   123f8:	muleq	r1, r8, r6
   123fc:	muleq	r1, r0, r6
   12400:	muleq	r1, r0, r6
   12404:	andeq	r2, r1, r8, lsl #13
   12408:	muleq	r1, r0, r6
   1240c:	andeq	r2, r1, r0, lsl #13
   12410:	muleq	r1, r0, r6
   12414:	strdeq	r2, [r1], -r4
   12418:	muleq	r1, r0, r6
   1241c:	muleq	r1, r0, r6
   12420:	muleq	r1, r0, r6
   12424:	andeq	r2, r1, r0, lsl #13
   12428:	andeq	r2, r1, r0, lsl #13
   1242c:	andeq	r2, r1, r0, lsl #13
   12430:	andeq	r2, r1, r0, lsl #13
   12434:	andeq	r2, r1, r0, lsl #13
   12438:	andeq	r2, r1, r0, lsl #13
   1243c:	andeq	r2, r1, r0, lsl #13
   12440:	andeq	r2, r1, r0, lsl #13
   12444:	andeq	r2, r1, r0, lsl #13
   12448:	andeq	r2, r1, r0, lsl #13
   1244c:	andeq	r2, r1, r0, lsl #13
   12450:	andeq	r2, r1, r0, lsl #13
   12454:	andeq	r2, r1, r0, lsl #13
   12458:	andeq	r2, r1, r0, lsl #13
   1245c:	andeq	r2, r1, r0, lsl #13
   12460:	andeq	r2, r1, r0, lsl #13
   12464:	muleq	r1, r0, r6
   12468:	muleq	r1, r0, r6
   1246c:	muleq	r1, r0, r6
   12470:	muleq	r1, r0, r6
   12474:	andeq	r2, r1, r8, asr #11
   12478:	andeq	r2, r1, r0, lsl r7
   1247c:	andeq	r2, r1, r0, lsl #13
   12480:	andeq	r2, r1, r0, lsl #13
   12484:	andeq	r2, r1, r0, lsl #13
   12488:	andeq	r2, r1, r0, lsl #13
   1248c:	andeq	r2, r1, r0, lsl #13
   12490:	andeq	r2, r1, r0, lsl #13
   12494:	andeq	r2, r1, r0, lsl #13
   12498:	andeq	r2, r1, r0, lsl #13
   1249c:	andeq	r2, r1, r0, lsl #13
   124a0:	andeq	r2, r1, r0, lsl #13
   124a4:	andeq	r2, r1, r0, lsl #13
   124a8:	andeq	r2, r1, r0, lsl #13
   124ac:	andeq	r2, r1, r0, lsl #13
   124b0:	andeq	r2, r1, r0, lsl #13
   124b4:	andeq	r2, r1, r0, lsl #13
   124b8:	andeq	r2, r1, r0, lsl #13
   124bc:	andeq	r2, r1, r0, lsl #13
   124c0:	andeq	r2, r1, r0, lsl #13
   124c4:	andeq	r2, r1, r0, lsl #13
   124c8:	andeq	r2, r1, r0, lsl #13
   124cc:	andeq	r2, r1, r0, lsl #13
   124d0:	andeq	r2, r1, r0, lsl #13
   124d4:	andeq	r2, r1, r0, lsl #13
   124d8:	andeq	r2, r1, r0, lsl #13
   124dc:	andeq	r2, r1, r0, lsl #13
   124e0:	andeq	r2, r1, r0, lsl #13
   124e4:	muleq	r1, r0, r6
   124e8:	muleq	r1, r8, r5
   124ec:	andeq	r2, r1, r0, lsl #13
   124f0:	muleq	r1, r0, r6
   124f4:	andeq	r2, r1, r0, lsl #13
   124f8:	muleq	r1, r0, r6
   124fc:	andeq	r2, r1, r0, lsl #13
   12500:	andeq	r2, r1, r0, lsl #13
   12504:	andeq	r2, r1, r0, lsl #13
   12508:	andeq	r2, r1, r0, lsl #13
   1250c:	andeq	r2, r1, r0, lsl #13
   12510:	andeq	r2, r1, r0, lsl #13
   12514:	andeq	r2, r1, r0, lsl #13
   12518:	andeq	r2, r1, r0, lsl #13
   1251c:	andeq	r2, r1, r0, lsl #13
   12520:	andeq	r2, r1, r0, lsl #13
   12524:	andeq	r2, r1, r0, lsl #13
   12528:	andeq	r2, r1, r0, lsl #13
   1252c:	andeq	r2, r1, r0, lsl #13
   12530:	andeq	r2, r1, r0, lsl #13
   12534:	andeq	r2, r1, r0, lsl #13
   12538:	andeq	r2, r1, r0, lsl #13
   1253c:	andeq	r2, r1, r0, lsl #13
   12540:	andeq	r2, r1, r0, lsl #13
   12544:	andeq	r2, r1, r0, lsl #13
   12548:	andeq	r2, r1, r0, lsl #13
   1254c:	andeq	r2, r1, r0, lsl #13
   12550:	andeq	r2, r1, r0, lsl #13
   12554:	andeq	r2, r1, r0, lsl #13
   12558:	andeq	r2, r1, r0, lsl #13
   1255c:	andeq	r2, r1, r0, lsl #13
   12560:	andeq	r2, r1, r0, lsl #13
   12564:	andeq	r2, r1, r4, ror r5
   12568:	muleq	r1, r0, r6
   1256c:	andeq	r2, r1, r4, ror r5
   12570:	andeq	r2, r1, r8, lsl #13
   12574:	ldr	r3, [sp, #24]
   12578:	mov	r6, #0
   1257c:	cmn	r3, #1
   12580:	bne	11f2c <abort@plt+0x1144>
   12584:	ldr	r3, [sp, #44]	; 0x2c
   12588:	ldrb	r3, [r3, #1]
   1258c:	adds	r3, r3, #0
   12590:	movne	r3, #1
   12594:	b	11f34 <abort@plt+0x114c>
   12598:	ldr	r3, [sp, #176]	; 0xb0
   1259c:	mov	r6, #0
   125a0:	cmp	r3, #2
   125a4:	bne	12074 <abort@plt+0x128c>
   125a8:	ldr	r3, [sp, #64]	; 0x40
   125ac:	cmp	r3, #0
   125b0:	bne	12de8 <abort@plt+0x2000>
   125b4:	add	sl, sl, #1
   125b8:	ldr	r6, [sp, #36]	; 0x24
   125bc:	str	r3, [sp, #32]
   125c0:	mov	r4, #92	; 0x5c
   125c4:	b	11f80 <abort@plt+0x1198>
   125c8:	ldr	r3, [sp, #176]	; 0xb0
   125cc:	mov	r6, #0
   125d0:	cmp	r3, #2
   125d4:	bne	120a8 <abort@plt+0x12c0>
   125d8:	ldr	r3, [sp, #40]	; 0x28
   125dc:	cmp	r3, #0
   125e0:	bne	128c4 <abort@plt+0x1adc>
   125e4:	mov	r1, r7
   125e8:	str	r3, [sp, #32]
   125ec:	mov	r4, #63	; 0x3f
   125f0:	b	11f4c <abort@plt+0x1164>
   125f4:	ldr	r3, [sp, #176]	; 0xb0
   125f8:	mov	r6, #0
   125fc:	cmp	r3, #2
   12600:	bne	120f8 <abort@plt+0x1310>
   12604:	ldr	r3, [sp, #64]	; 0x40
   12608:	cmp	r3, #0
   1260c:	bne	12de8 <abort@plt+0x2000>
   12610:	ldr	r2, [sp, #84]	; 0x54
   12614:	adds	r3, fp, #0
   12618:	movne	r3, #1
   1261c:	cmp	r2, #0
   12620:	movne	r3, #0
   12624:	cmp	r3, #0
   12628:	strne	fp, [sp, #84]	; 0x54
   1262c:	movne	fp, #0
   12630:	bne	12660 <abort@plt+0x1878>
   12634:	cmp	fp, r8
   12638:	movhi	r3, #39	; 0x27
   1263c:	strbhi	r3, [r9, r8]
   12640:	add	r3, r8, #1
   12644:	cmp	fp, r3
   12648:	movhi	r2, #92	; 0x5c
   1264c:	strbhi	r2, [r9, r3]
   12650:	add	r3, r8, #2
   12654:	cmp	fp, r3
   12658:	movhi	r2, #39	; 0x27
   1265c:	strbhi	r2, [r9, r3]
   12660:	ldr	r3, [sp, #64]	; 0x40
   12664:	add	r8, r8, #3
   12668:	mov	r1, r7
   1266c:	str	r7, [sp, #32]
   12670:	str	r7, [sp, #76]	; 0x4c
   12674:	str	r3, [sp, #36]	; 0x24
   12678:	mov	r4, #39	; 0x27
   1267c:	b	11f4c <abort@plt+0x1164>
   12680:	mov	r6, #0
   12684:	b	12110 <abort@plt+0x1328>
   12688:	mov	r6, #0
   1268c:	b	12304 <abort@plt+0x151c>
   12690:	mov	r6, #0
   12694:	b	12324 <abort@plt+0x153c>
   12698:	str	r7, [sp, #32]
   1269c:	mov	r6, #0
   126a0:	b	1232c <abort@plt+0x1544>
   126a4:	mov	r6, #0
   126a8:	b	12354 <abort@plt+0x156c>
   126ac:	mov	r6, #0
   126b0:	b	12120 <abort@plt+0x1338>
   126b4:	mov	r6, #0
   126b8:	b	121e8 <abort@plt+0x1400>
   126bc:	mov	r6, #0
   126c0:	b	121b8 <abort@plt+0x13d0>
   126c4:	mov	r6, #0
   126c8:	mov	r3, #116	; 0x74
   126cc:	b	121c0 <abort@plt+0x13d8>
   126d0:	mov	r6, #0
   126d4:	b	121fc <abort@plt+0x1414>
   126d8:	mov	r6, #0
   126dc:	b	12210 <abort@plt+0x1428>
   126e0:	ldr	r3, [sp, #56]	; 0x38
   126e4:	mov	r6, #0
   126e8:	cmp	r3, #0
   126ec:	bne	12230 <abort@plt+0x1448>
   126f0:	ldr	r3, [sp, #96]	; 0x60
   126f4:	cmp	r3, #0
   126f8:	addne	sl, sl, #1
   126fc:	bne	11aa4 <abort@plt+0xcbc>
   12700:	ldr	r1, [sp, #52]	; 0x34
   12704:	str	r3, [sp, #32]
   12708:	mov	r4, r3
   1270c:	b	11f4c <abort@plt+0x1164>
   12710:	mov	r6, #0
   12714:	ldr	r3, [sp, #80]	; 0x50
   12718:	cmp	r3, #1
   1271c:	bne	1290c <abort@plt+0x1b24>
   12720:	bl	10d04 <__ctype_b_loc@plt>
   12724:	ldr	r2, [sp, #80]	; 0x50
   12728:	sxth	r3, r4
   1272c:	mov	r1, r2
   12730:	lsl	r3, r3, #1
   12734:	ldr	r2, [r0]
   12738:	ldrh	r3, [r2, r3]
   1273c:	and	r3, r3, #16384	; 0x4000
   12740:	cmp	r3, #0
   12744:	movne	r3, #1
   12748:	moveq	r3, #0
   1274c:	str	r3, [sp, #32]
   12750:	moveq	r3, #1
   12754:	movne	r3, #0
   12758:	ldr	r2, [sp, #56]	; 0x38
   1275c:	and	r3, r3, r2
   12760:	ands	r3, r3, #255	; 0xff
   12764:	beq	12338 <abort@plt+0x1550>
   12768:	add	r1, sl, r1
   1276c:	mov	r0, #0
   12770:	ldr	r7, [sp, #40]	; 0x28
   12774:	ldr	r2, [sp, #36]	; 0x24
   12778:	ldr	lr, [sp, #52]	; 0x34
   1277c:	b	1282c <abort@plt+0x1a44>
   12780:	cmp	r7, #0
   12784:	bne	12b80 <abort@plt+0x1d98>
   12788:	eor	r0, r2, #1
   1278c:	ands	r0, lr, r0
   12790:	beq	127c8 <abort@plt+0x19e0>
   12794:	cmp	fp, r8
   12798:	movhi	r2, #39	; 0x27
   1279c:	strbhi	r2, [r9, r8]
   127a0:	add	r2, r8, #1
   127a4:	cmp	fp, r2
   127a8:	movhi	ip, #36	; 0x24
   127ac:	strbhi	ip, [r9, r2]
   127b0:	add	r2, r8, #2
   127b4:	cmp	fp, r2
   127b8:	movhi	ip, #39	; 0x27
   127bc:	strbhi	ip, [r9, r2]
   127c0:	add	r8, r8, #3
   127c4:	mov	r2, r0
   127c8:	cmp	fp, r8
   127cc:	movhi	r0, #92	; 0x5c
   127d0:	strbhi	r0, [r9, r8]
   127d4:	add	r0, r8, #1
   127d8:	cmp	fp, r0
   127dc:	lsrhi	ip, r4, #6
   127e0:	addhi	ip, ip, #48	; 0x30
   127e4:	strbhi	ip, [r9, r0]
   127e8:	add	ip, r8, #2
   127ec:	cmp	fp, ip
   127f0:	lsrhi	r0, r4, #3
   127f4:	andhi	r0, r0, #7
   127f8:	addhi	r0, r0, #48	; 0x30
   127fc:	add	sl, sl, #1
   12800:	strbhi	r0, [r9, ip]
   12804:	and	r4, r4, #7
   12808:	cmp	sl, r1
   1280c:	add	r4, r4, #48	; 0x30
   12810:	add	r8, r8, #3
   12814:	bcs	12b98 <abort@plt+0x1db0>
   12818:	mov	r0, r3
   1281c:	cmp	fp, r8
   12820:	strbhi	r4, [r9, r8]
   12824:	ldrb	r4, [r5, #1]!
   12828:	add	r8, r8, #1
   1282c:	cmp	r3, #0
   12830:	bne	12780 <abort@plt+0x1998>
   12834:	cmp	r6, #0
   12838:	bne	128dc <abort@plt+0x1af4>
   1283c:	eor	r6, r0, #1
   12840:	and	r6, r6, r2
   12844:	add	sl, sl, #1
   12848:	cmp	r1, sl
   1284c:	uxtb	r6, r6
   12850:	bls	12904 <abort@plt+0x1b1c>
   12854:	cmp	r6, #0
   12858:	beq	1281c <abort@plt+0x1a34>
   1285c:	cmp	fp, r8
   12860:	movhi	r2, #39	; 0x27
   12864:	strbhi	r2, [r9, r8]
   12868:	add	r2, r8, #1
   1286c:	cmp	fp, r2
   12870:	movhi	ip, #39	; 0x27
   12874:	strbhi	ip, [r9, r2]
   12878:	add	r8, r8, #2
   1287c:	mov	r6, r3
   12880:	mov	r2, r3
   12884:	b	1281c <abort@plt+0x1a34>
   12888:	ldr	r3, [sp, #184]	; 0xb8
   1288c:	cmp	r3, #0
   12890:	beq	11f68 <abort@plt+0x1180>
   12894:	lsr	r2, r4, #5
   12898:	mov	r0, r3
   1289c:	uxtb	r2, r2
   128a0:	and	r3, r4, #31
   128a4:	ldr	r2, [r0, r2, lsl #2]
   128a8:	lsr	r3, r2, r3
   128ac:	tst	r3, #1
   128b0:	beq	11f68 <abort@plt+0x1180>
   128b4:	ldr	r3, [sp, #40]	; 0x28
   128b8:	cmp	r3, #0
   128bc:	beq	12154 <abort@plt+0x136c>
   128c0:	mov	r3, r1
   128c4:	str	r3, [sp, #64]	; 0x40
   128c8:	mov	sl, r9
   128cc:	ldr	r3, [sp, #56]	; 0x38
   128d0:	mov	r9, fp
   128d4:	ldr	r2, [sp, #64]	; 0x40
   128d8:	b	12ac8 <abort@plt+0x1ce0>
   128dc:	cmp	fp, r8
   128e0:	eor	r6, r0, #1
   128e4:	movhi	ip, #92	; 0x5c
   128e8:	and	r6, r6, r2
   128ec:	add	sl, sl, #1
   128f0:	strbhi	ip, [r9, r8]
   128f4:	cmp	r1, sl
   128f8:	add	r8, r8, #1
   128fc:	uxtb	r6, r6
   12900:	bhi	12854 <abort@plt+0x1a6c>
   12904:	str	r2, [sp, #36]	; 0x24
   12908:	b	11f80 <abort@plt+0x1198>
   1290c:	ldr	r3, [sp, #24]
   12910:	cmn	r3, #1
   12914:	mov	r3, #0
   12918:	str	r3, [sp, #128]	; 0x80
   1291c:	str	r3, [sp, #132]	; 0x84
   12920:	beq	12c14 <abort@plt+0x1e2c>
   12924:	mov	r2, r7
   12928:	mov	r3, #0
   1292c:	str	r7, [sp, #104]	; 0x68
   12930:	str	r5, [sp, #116]	; 0x74
   12934:	mov	r7, r3
   12938:	mov	r5, r2
   1293c:	str	r4, [sp, #32]
   12940:	str	r6, [sp, #108]	; 0x6c
   12944:	str	r8, [sp, #112]	; 0x70
   12948:	ldr	r3, [sp, #44]	; 0x2c
   1294c:	add	r6, sl, r7
   12950:	add	r4, r3, r6
   12954:	ldr	r3, [sp, #24]
   12958:	mov	r1, r4
   1295c:	sub	r2, r3, r6
   12960:	add	r0, sp, #124	; 0x7c
   12964:	add	r3, sp, #128	; 0x80
   12968:	bl	16ec0 <abort@plt+0x60d8>
   1296c:	subs	r8, r0, #0
   12970:	beq	12cf8 <abort@plt+0x1f10>
   12974:	cmn	r8, #1
   12978:	beq	12cd0 <abort@plt+0x1ee8>
   1297c:	cmn	r8, #2
   12980:	beq	12c68 <abort@plt+0x1e80>
   12984:	ldr	r3, [sp, #64]	; 0x40
   12988:	cmp	r3, #0
   1298c:	beq	12a4c <abort@plt+0x1c64>
   12990:	cmp	r8, #1
   12994:	beq	12a4c <abort@plt+0x1c64>
   12998:	sub	r3, r8, #1
   1299c:	add	r6, r3, r6
   129a0:	ldr	r3, [sp, #44]	; 0x2c
   129a4:	add	r6, r3, r6
   129a8:	ldrb	r3, [r4, #1]!
   129ac:	sub	r3, r3, #91	; 0x5b
   129b0:	cmp	r3, #33	; 0x21
   129b4:	ldrls	pc, [pc, r3, lsl #2]
   129b8:	b	12a44 <abort@plt+0x1c5c>
   129bc:			; <UNDEFINED> instruction: 0x00012ab0
   129c0:			; <UNDEFINED> instruction: 0x00012ab0
   129c4:	andeq	r2, r1, r4, asr #20
   129c8:			; <UNDEFINED> instruction: 0x00012ab0
   129cc:	andeq	r2, r1, r4, asr #20
   129d0:			; <UNDEFINED> instruction: 0x00012ab0
   129d4:	andeq	r2, r1, r4, asr #20
   129d8:	andeq	r2, r1, r4, asr #20
   129dc:	andeq	r2, r1, r4, asr #20
   129e0:	andeq	r2, r1, r4, asr #20
   129e4:	andeq	r2, r1, r4, asr #20
   129e8:	andeq	r2, r1, r4, asr #20
   129ec:	andeq	r2, r1, r4, asr #20
   129f0:	andeq	r2, r1, r4, asr #20
   129f4:	andeq	r2, r1, r4, asr #20
   129f8:	andeq	r2, r1, r4, asr #20
   129fc:	andeq	r2, r1, r4, asr #20
   12a00:	andeq	r2, r1, r4, asr #20
   12a04:	andeq	r2, r1, r4, asr #20
   12a08:	andeq	r2, r1, r4, asr #20
   12a0c:	andeq	r2, r1, r4, asr #20
   12a10:	andeq	r2, r1, r4, asr #20
   12a14:	andeq	r2, r1, r4, asr #20
   12a18:	andeq	r2, r1, r4, asr #20
   12a1c:	andeq	r2, r1, r4, asr #20
   12a20:	andeq	r2, r1, r4, asr #20
   12a24:	andeq	r2, r1, r4, asr #20
   12a28:	andeq	r2, r1, r4, asr #20
   12a2c:	andeq	r2, r1, r4, asr #20
   12a30:	andeq	r2, r1, r4, asr #20
   12a34:	andeq	r2, r1, r4, asr #20
   12a38:	andeq	r2, r1, r4, asr #20
   12a3c:	andeq	r2, r1, r4, asr #20
   12a40:			; <UNDEFINED> instruction: 0x00012ab0
   12a44:	cmp	r6, r4
   12a48:	bne	129a8 <abort@plt+0x1bc0>
   12a4c:	ldr	r0, [sp, #124]	; 0x7c
   12a50:	bl	10c74 <iswprint@plt>
   12a54:	add	r7, r7, r8
   12a58:	cmp	r0, #0
   12a5c:	add	r0, sp, #128	; 0x80
   12a60:	moveq	r5, #0
   12a64:	bl	10c2c <mbsinit@plt>
   12a68:	cmp	r0, #0
   12a6c:	beq	12948 <abort@plt+0x1b60>
   12a70:	ldr	r4, [sp, #32]
   12a74:	str	r5, [sp, #32]
   12a78:	ldr	r3, [sp, #32]
   12a7c:	mov	r1, r7
   12a80:	eor	r3, r3, #1
   12a84:	ldr	r7, [sp, #104]	; 0x68
   12a88:	ldr	r6, [sp, #108]	; 0x6c
   12a8c:	ldr	r8, [sp, #112]	; 0x70
   12a90:	ldr	r5, [sp, #116]	; 0x74
   12a94:	uxtb	r3, r3
   12a98:	cmp	r1, #1
   12a9c:	bls	12758 <abort@plt+0x1970>
   12aa0:	ldr	r2, [sp, #56]	; 0x38
   12aa4:	and	r3, r3, r2
   12aa8:	uxtb	r3, r3
   12aac:	b	12768 <abort@plt+0x1980>
   12ab0:	mov	r3, #2
   12ab4:	str	r3, [sp, #176]	; 0xb0
   12ab8:	ldr	r2, [sp, #64]	; 0x40
   12abc:	ldr	r3, [sp, #56]	; 0x38
   12ac0:	mov	sl, r9
   12ac4:	mov	r9, fp
   12ac8:	and	r3, r3, r2
   12acc:	tst	r3, #255	; 0xff
   12ad0:	ldr	r3, [sp, #176]	; 0xb0
   12ad4:	movne	r3, #4
   12ad8:	str	r3, [sp, #176]	; 0xb0
   12adc:	ldr	r3, [sp, #180]	; 0xb4
   12ae0:	mov	ip, #0
   12ae4:	bic	r3, r3, #2
   12ae8:	str	r3, [sp, #4]
   12aec:	ldr	r3, [sp, #192]	; 0xc0
   12af0:	ldr	r2, [sp, #44]	; 0x2c
   12af4:	str	r3, [sp, #16]
   12af8:	ldr	r3, [sp, #188]	; 0xbc
   12afc:	mov	r1, r9
   12b00:	str	r3, [sp, #12]
   12b04:	ldr	r3, [sp, #176]	; 0xb0
   12b08:	mov	r0, sl
   12b0c:	str	r3, [sp]
   12b10:	str	ip, [sp, #8]
   12b14:	ldr	r3, [sp, #24]
   12b18:	bl	11978 <abort@plt+0xb90>
   12b1c:	mov	fp, r0
   12b20:	mov	r0, fp
   12b24:	add	sp, sp, #140	; 0x8c
   12b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b2c:	mov	r4, #92	; 0x5c
   12b30:	mov	r1, #0
   12b34:	mov	r3, r4
   12b38:	b	1212c <abort@plt+0x1344>
   12b3c:	mov	r3, #0
   12b40:	ldr	r1, [sp, #52]	; 0x34
   12b44:	str	r3, [sp, #32]
   12b48:	mov	r4, #63	; 0x3f
   12b4c:	b	11f4c <abort@plt+0x1164>
   12b50:	cmp	fp, #0
   12b54:	beq	12bb0 <abort@plt+0x1dc8>
   12b58:	mov	r3, #39	; 0x27
   12b5c:	strb	r3, [r9]
   12b60:	mov	r3, #0
   12b64:	str	r3, [sp, #40]	; 0x28
   12b68:	mov	r3, #1
   12b6c:	str	r3, [sp, #68]	; 0x44
   12b70:	ldr	r3, [pc, #448]	; 12d38 <abort@plt+0x1f50>
   12b74:	mov	r8, #1
   12b78:	str	r3, [sp, #72]	; 0x48
   12b7c:	b	11d60 <abort@plt+0xf78>
   12b80:	ldr	r3, [sp, #40]	; 0x28
   12b84:	mov	sl, r9
   12b88:	str	r3, [sp, #56]	; 0x38
   12b8c:	mov	r9, fp
   12b90:	ldr	r2, [sp, #64]	; 0x40
   12b94:	b	12ac8 <abort@plt+0x1ce0>
   12b98:	str	r2, [sp, #36]	; 0x24
   12b9c:	b	11fb0 <abort@plt+0x11c8>
   12ba0:	mov	r1, #0
   12ba4:	str	r3, [sp, #32]
   12ba8:	mov	r4, #63	; 0x3f
   12bac:	b	11f4c <abort@plt+0x1164>
   12bb0:	ldr	r3, [pc, #384]	; 12d38 <abort@plt+0x1f50>
   12bb4:	str	r3, [sp, #72]	; 0x48
   12bb8:	mov	r3, #0
   12bbc:	str	r3, [sp, #40]	; 0x28
   12bc0:	mov	r3, #1
   12bc4:	str	r3, [sp, #68]	; 0x44
   12bc8:	mov	r8, r3
   12bcc:	b	11d60 <abort@plt+0xf78>
   12bd0:	bl	10de8 <abort@plt>
   12bd4:	cmp	fp, #0
   12bd8:	beq	12c38 <abort@plt+0x1e50>
   12bdc:	mov	r2, #1
   12be0:	mov	r3, #34	; 0x22
   12be4:	strb	r3, [r9]
   12be8:	mov	r8, r2
   12bec:	mov	r3, r2
   12bf0:	str	r2, [sp, #68]	; 0x44
   12bf4:	str	r3, [sp, #56]	; 0x38
   12bf8:	ldr	r3, [pc, #316]	; 12d3c <abort@plt+0x1f54>
   12bfc:	ldr	r1, [sp, #56]	; 0x38
   12c00:	str	r3, [sp, #72]	; 0x48
   12c04:	ldr	r2, [sp, #176]	; 0xb0
   12c08:	ldr	ip, [sp, #40]	; 0x28
   12c0c:	ldr	lr, [sp, #176]	; 0xb0
   12c10:	b	11a44 <abort@plt+0xc5c>
   12c14:	ldr	r0, [sp, #44]	; 0x2c
   12c18:	bl	10d1c <strlen@plt>
   12c1c:	str	r0, [sp, #24]
   12c20:	b	12924 <abort@plt+0x1b3c>
   12c24:	mov	r7, #0
   12c28:	ldr	r1, [sp, #52]	; 0x34
   12c2c:	str	r3, [sp, #32]
   12c30:	mov	r4, #48	; 0x30
   12c34:	b	11f4c <abort@plt+0x1164>
   12c38:	mov	r3, #1
   12c3c:	str	r3, [sp, #68]	; 0x44
   12c40:	mov	r8, r3
   12c44:	b	12bf4 <abort@plt+0x1e0c>
   12c48:	mov	r3, #2
   12c4c:	mov	sl, r9
   12c50:	str	r3, [sp, #176]	; 0xb0
   12c54:	mov	r9, fp
   12c58:	ldr	r3, [sp, #56]	; 0x38
   12c5c:	b	12ac8 <abort@plt+0x1ce0>
   12c60:	ldr	r6, [sp, #48]	; 0x30
   12c64:	b	12714 <abort@plt+0x192c>
   12c68:	ldr	r0, [sp, #24]
   12c6c:	mov	ip, r6
   12c70:	cmp	r0, ip
   12c74:	mov	r1, r7
   12c78:	mov	r2, r4
   12c7c:	ldr	r7, [sp, #104]	; 0x68
   12c80:	ldr	r4, [sp, #32]
   12c84:	ldr	r6, [sp, #108]	; 0x6c
   12c88:	ldr	r8, [sp, #112]	; 0x70
   12c8c:	ldr	r5, [sp, #116]	; 0x74
   12c90:	bls	12cc0 <abort@plt+0x1ed8>
   12c94:	ldrb	r3, [r2]
   12c98:	cmp	r3, #0
   12c9c:	bne	12cb0 <abort@plt+0x1ec8>
   12ca0:	b	12dd0 <abort@plt+0x1fe8>
   12ca4:	ldrb	r3, [r2, #1]!
   12ca8:	cmp	r3, #0
   12cac:	beq	12dd0 <abort@plt+0x1fe8>
   12cb0:	add	r1, r1, #1
   12cb4:	add	r3, sl, r1
   12cb8:	cmp	r0, r3
   12cbc:	bhi	12ca4 <abort@plt+0x1ebc>
   12cc0:	mov	r2, #0
   12cc4:	mov	r3, r7
   12cc8:	str	r2, [sp, #32]
   12ccc:	b	12a98 <abort@plt+0x1cb0>
   12cd0:	mov	r1, r7
   12cd4:	ldr	r7, [sp, #104]	; 0x68
   12cd8:	mov	r2, #0
   12cdc:	ldr	r4, [sp, #32]
   12ce0:	ldr	r6, [sp, #108]	; 0x6c
   12ce4:	ldr	r8, [sp, #112]	; 0x70
   12ce8:	ldr	r5, [sp, #116]	; 0x74
   12cec:	mov	r3, r7
   12cf0:	str	r2, [sp, #32]
   12cf4:	b	12a98 <abort@plt+0x1cb0>
   12cf8:	mov	r3, r5
   12cfc:	eor	r3, r3, #1
   12d00:	ldr	r4, [sp, #32]
   12d04:	mov	r1, r7
   12d08:	str	r5, [sp, #32]
   12d0c:	ldr	r7, [sp, #104]	; 0x68
   12d10:	ldr	r6, [sp, #108]	; 0x6c
   12d14:	ldr	r8, [sp, #112]	; 0x70
   12d18:	ldr	r5, [sp, #116]	; 0x74
   12d1c:	uxtb	r3, r3
   12d20:	b	12a98 <abort@plt+0x1cb0>
   12d24:	mov	sl, r9
   12d28:	str	r3, [sp, #56]	; 0x38
   12d2c:	mov	r9, fp
   12d30:	ldr	r2, [sp, #64]	; 0x40
   12d34:	b	12ac8 <abort@plt+0x1ce0>
   12d38:	andeq	r7, r1, r8, lsl sl
   12d3c:	andeq	r7, r1, r4, lsl sl
   12d40:	andeq	r7, r1, ip, lsl sl
   12d44:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12d48:	ldr	r2, [sp, #44]	; 0x2c
   12d4c:	ldrb	r1, [r2, r3]
   12d50:	sub	r2, r1, #33	; 0x21
   12d54:	uxtb	r2, r2
   12d58:	cmp	r2, #29
   12d5c:	bhi	12ddc <abort@plt+0x1ff4>
   12d60:	ldr	r0, [pc, #-36]	; 12d44 <abort@plt+0x1f5c>
   12d64:	mov	ip, #1
   12d68:	ands	r2, r0, ip, lsl r2
   12d6c:	beq	12dfc <abort@plt+0x2014>
   12d70:	ldr	r2, [sp, #40]	; 0x28
   12d74:	cmp	r2, #0
   12d78:	bne	12ef0 <abort@plt+0x2108>
   12d7c:	add	r2, r8, #1
   12d80:	cmp	fp, r8
   12d84:	strbhi	r4, [r9, r8]
   12d88:	cmp	fp, r2
   12d8c:	movhi	r0, #34	; 0x22
   12d90:	strbhi	r0, [r9, r2]
   12d94:	add	r2, r8, #2
   12d98:	cmp	fp, r2
   12d9c:	movhi	r0, #34	; 0x22
   12da0:	strbhi	r0, [r9, r2]
   12da4:	add	r2, r8, #3
   12da8:	cmp	fp, r2
   12dac:	mov	sl, r3
   12db0:	ldr	r3, [sp, #40]	; 0x28
   12db4:	movhi	r0, #63	; 0x3f
   12db8:	mov	r4, r1
   12dbc:	strbhi	r0, [r9, r2]
   12dc0:	add	r8, r8, #4
   12dc4:	mov	r1, r3
   12dc8:	str	r3, [sp, #32]
   12dcc:	b	11f4c <abort@plt+0x1164>
   12dd0:	str	r3, [sp, #32]
   12dd4:	mov	r3, r7
   12dd8:	b	12a98 <abort@plt+0x1cb0>
   12ddc:	mov	r1, #0
   12de0:	str	r1, [sp, #32]
   12de4:	b	11f4c <abort@plt+0x1164>
   12de8:	mov	sl, r9
   12dec:	ldr	r3, [sp, #56]	; 0x38
   12df0:	mov	r9, fp
   12df4:	ldr	r2, [sp, #64]	; 0x40
   12df8:	b	12ac8 <abort@plt+0x1ce0>
   12dfc:	str	r2, [sp, #32]
   12e00:	mov	r1, #0
   12e04:	b	11f4c <abort@plt+0x1164>
   12e08:	ldr	r2, [sp, #76]	; 0x4c
   12e0c:	mov	sl, r9
   12e10:	mov	r9, fp
   12e14:	mov	fp, r8
   12e18:	ldr	r1, [sp, #72]	; 0x48
   12e1c:	cmp	r1, #0
   12e20:	moveq	r3, #0
   12e24:	andne	r3, r2, #1
   12e28:	cmp	r3, #0
   12e2c:	beq	12e58 <abort@plt+0x2070>
   12e30:	ldrb	r3, [r1]
   12e34:	cmp	r3, #0
   12e38:	beq	12e58 <abort@plt+0x2070>
   12e3c:	mov	r2, r1
   12e40:	cmp	r9, fp
   12e44:	strbhi	r3, [sl, fp]
   12e48:	ldrb	r3, [r2, #1]!
   12e4c:	add	fp, fp, #1
   12e50:	cmp	r3, #0
   12e54:	bne	12e40 <abort@plt+0x2058>
   12e58:	cmp	r9, fp
   12e5c:	movhi	r3, #0
   12e60:	strbhi	r3, [sl, fp]
   12e64:	b	12b20 <abort@plt+0x1d38>
   12e68:	ldr	r3, [sp, #192]	; 0xc0
   12e6c:	mov	ip, #5
   12e70:	str	r3, [sp, #16]
   12e74:	ldr	r3, [sp, #188]	; 0xbc
   12e78:	ldr	r2, [sp, #44]	; 0x2c
   12e7c:	str	r3, [sp, #12]
   12e80:	ldr	r3, [sp, #184]	; 0xb8
   12e84:	ldr	r1, [sp, #84]	; 0x54
   12e88:	str	r3, [sp, #8]
   12e8c:	ldr	r3, [sp, #180]	; 0xb4
   12e90:	mov	r0, r9
   12e94:	str	r3, [sp, #4]
   12e98:	str	ip, [sp]
   12e9c:	ldr	r3, [sp, #24]
   12ea0:	bl	11978 <abort@plt+0xb90>
   12ea4:	mov	fp, r0
   12ea8:	b	12b20 <abort@plt+0x1d38>
   12eac:	mov	sl, r9
   12eb0:	mov	r9, fp
   12eb4:	mov	fp, r8
   12eb8:	b	12e18 <abort@plt+0x2030>
   12ebc:	ldr	r1, [sp, #176]	; 0xb0
   12ec0:	bl	11858 <abort@plt+0xa70>
   12ec4:	str	r0, [sp, #192]	; 0xc0
   12ec8:	b	11e34 <abort@plt+0x104c>
   12ecc:	ldr	r1, [sp, #176]	; 0xb0
   12ed0:	bl	11858 <abort@plt+0xa70>
   12ed4:	str	r0, [sp, #188]	; 0xbc
   12ed8:	b	11e14 <abort@plt+0x102c>
   12edc:	mov	sl, r9
   12ee0:	mov	r2, r3
   12ee4:	mov	r9, fp
   12ee8:	mov	fp, r8
   12eec:	b	12e18 <abort@plt+0x2030>
   12ef0:	mov	sl, r9
   12ef4:	mov	r9, fp
   12ef8:	b	12adc <abort@plt+0x1cf4>
   12efc:	push	{r4, r5, r6, lr}
   12f00:	mov	r5, r0
   12f04:	bl	10d28 <__errno_location@plt>
   12f08:	cmp	r5, #0
   12f0c:	mov	r1, #48	; 0x30
   12f10:	mov	r4, r0
   12f14:	ldr	r0, [pc, #16]	; 12f2c <abort@plt+0x2144>
   12f18:	ldr	r6, [r4]
   12f1c:	movne	r0, r5
   12f20:	bl	16798 <abort@plt+0x59b0>
   12f24:	str	r6, [r4]
   12f28:	pop	{r4, r5, r6, pc}
   12f2c:	andeq	r8, r2, ip, asr #2
   12f30:	ldr	r3, [pc, #12]	; 12f44 <abort@plt+0x215c>
   12f34:	cmp	r0, #0
   12f38:	moveq	r0, r3
   12f3c:	ldr	r0, [r0]
   12f40:	bx	lr
   12f44:	andeq	r8, r2, ip, asr #2
   12f48:	ldr	r3, [pc, #12]	; 12f5c <abort@plt+0x2174>
   12f4c:	cmp	r0, #0
   12f50:	moveq	r0, r3
   12f54:	str	r1, [r0]
   12f58:	bx	lr
   12f5c:	andeq	r8, r2, ip, asr #2
   12f60:	ldr	r3, [pc, #52]	; 12f9c <abort@plt+0x21b4>
   12f64:	cmp	r0, #0
   12f68:	moveq	r0, r3
   12f6c:	add	r3, r0, #8
   12f70:	push	{lr}		; (str lr, [sp, #-4]!)
   12f74:	lsr	lr, r1, #5
   12f78:	and	r1, r1, #31
   12f7c:	ldr	ip, [r3, lr, lsl #2]
   12f80:	lsr	r0, ip, r1
   12f84:	eor	r2, r2, r0
   12f88:	and	r2, r2, #1
   12f8c:	and	r0, r0, #1
   12f90:	eor	r1, ip, r2, lsl r1
   12f94:	str	r1, [r3, lr, lsl #2]
   12f98:	pop	{pc}		; (ldr pc, [sp], #4)
   12f9c:	andeq	r8, r2, ip, asr #2
   12fa0:	ldr	r3, [pc, #16]	; 12fb8 <abort@plt+0x21d0>
   12fa4:	cmp	r0, #0
   12fa8:	movne	r3, r0
   12fac:	ldr	r0, [r3, #4]
   12fb0:	str	r1, [r3, #4]
   12fb4:	bx	lr
   12fb8:	andeq	r8, r2, ip, asr #2
   12fbc:	ldr	r3, [pc, #44]	; 12ff0 <abort@plt+0x2208>
   12fc0:	cmp	r0, #0
   12fc4:	moveq	r0, r3
   12fc8:	mov	ip, #10
   12fcc:	cmp	r2, #0
   12fd0:	cmpne	r1, #0
   12fd4:	str	ip, [r0]
   12fd8:	beq	12fe8 <abort@plt+0x2200>
   12fdc:	str	r1, [r0, #40]	; 0x28
   12fe0:	str	r2, [r0, #44]	; 0x2c
   12fe4:	bx	lr
   12fe8:	push	{r4, lr}
   12fec:	bl	10de8 <abort@plt>
   12ff0:	andeq	r8, r2, ip, asr #2
   12ff4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ff8:	sub	sp, sp, #24
   12ffc:	ldr	ip, [pc, #108]	; 13070 <abort@plt+0x2288>
   13000:	ldr	r4, [sp, #56]	; 0x38
   13004:	mov	r9, r2
   13008:	cmp	r4, #0
   1300c:	moveq	r4, ip
   13010:	mov	sl, r3
   13014:	mov	r7, r0
   13018:	mov	r8, r1
   1301c:	bl	10d28 <__errno_location@plt>
   13020:	ldr	r3, [r4, #44]	; 0x2c
   13024:	mov	r1, r8
   13028:	ldr	r6, [r0]
   1302c:	str	r3, [sp, #16]
   13030:	ldr	r2, [r4, #40]	; 0x28
   13034:	add	r3, r4, #8
   13038:	str	r3, [sp, #8]
   1303c:	str	r2, [sp, #12]
   13040:	ldr	r2, [r4, #4]
   13044:	mov	r5, r0
   13048:	str	r2, [sp, #4]
   1304c:	ldr	ip, [r4]
   13050:	mov	r3, sl
   13054:	mov	r2, r9
   13058:	mov	r0, r7
   1305c:	str	ip, [sp]
   13060:	bl	11978 <abort@plt+0xb90>
   13064:	str	r6, [r5]
   13068:	add	sp, sp, #24
   1306c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13070:	andeq	r8, r2, ip, asr #2
   13074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13078:	cmp	r2, #0
   1307c:	sub	sp, sp, #36	; 0x24
   13080:	ldr	r4, [pc, #164]	; 1312c <abort@plt+0x2344>
   13084:	mov	r8, r1
   13088:	movne	r4, r2
   1308c:	mov	r7, r0
   13090:	bl	10d28 <__errno_location@plt>
   13094:	ldr	r3, [r4, #44]	; 0x2c
   13098:	ldr	r5, [r4, #4]
   1309c:	add	r9, r4, #8
   130a0:	orr	r5, r5, #1
   130a4:	mov	r1, #0
   130a8:	mov	r2, r7
   130ac:	ldr	fp, [r0]
   130b0:	str	r3, [sp, #16]
   130b4:	ldr	r3, [r4, #40]	; 0x28
   130b8:	stmib	sp, {r5, r9}
   130bc:	str	r3, [sp, #12]
   130c0:	ldr	r3, [r4]
   130c4:	mov	r6, r0
   130c8:	str	r3, [sp]
   130cc:	mov	r0, r1
   130d0:	mov	r3, r8
   130d4:	bl	11978 <abort@plt+0xb90>
   130d8:	add	r1, r0, #1
   130dc:	mov	r0, r1
   130e0:	str	r1, [sp, #28]
   130e4:	bl	16254 <abort@plt+0x546c>
   130e8:	ldr	r3, [r4, #44]	; 0x2c
   130ec:	ldr	r1, [sp, #28]
   130f0:	str	r3, [sp, #16]
   130f4:	ldr	r3, [r4, #40]	; 0x28
   130f8:	str	r5, [sp, #4]
   130fc:	str	r3, [sp, #12]
   13100:	str	r9, [sp, #8]
   13104:	ldr	ip, [r4]
   13108:	mov	r3, r8
   1310c:	mov	r2, r7
   13110:	str	ip, [sp]
   13114:	mov	sl, r0
   13118:	bl	11978 <abort@plt+0xb90>
   1311c:	mov	r0, sl
   13120:	str	fp, [r6]
   13124:	add	sp, sp, #36	; 0x24
   13128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1312c:	andeq	r8, r2, ip, asr #2
   13130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13134:	cmp	r3, #0
   13138:	sub	sp, sp, #44	; 0x2c
   1313c:	ldr	r4, [pc, #192]	; 13204 <abort@plt+0x241c>
   13140:	mov	r6, r2
   13144:	movne	r4, r3
   13148:	mov	r9, r1
   1314c:	mov	r8, r0
   13150:	bl	10d28 <__errno_location@plt>
   13154:	ldr	r3, [r4, #44]	; 0x2c
   13158:	ldr	r5, [r4, #4]
   1315c:	add	sl, r4, #8
   13160:	cmp	r6, #0
   13164:	orreq	r5, r5, #1
   13168:	mov	r1, #0
   1316c:	ldr	r2, [r0]
   13170:	str	r3, [sp, #16]
   13174:	ldr	r3, [r4, #40]	; 0x28
   13178:	stmib	sp, {r5, sl}
   1317c:	str	r3, [sp, #12]
   13180:	ldr	r3, [r4]
   13184:	mov	r7, r0
   13188:	str	r2, [sp, #28]
   1318c:	str	r3, [sp]
   13190:	mov	r2, r8
   13194:	mov	r3, r9
   13198:	mov	r0, r1
   1319c:	bl	11978 <abort@plt+0xb90>
   131a0:	add	r1, r0, #1
   131a4:	mov	fp, r0
   131a8:	mov	r0, r1
   131ac:	str	r1, [sp, #36]	; 0x24
   131b0:	bl	16254 <abort@plt+0x546c>
   131b4:	ldr	r3, [r4, #44]	; 0x2c
   131b8:	mov	r2, r8
   131bc:	str	r3, [sp, #16]
   131c0:	ldr	r3, [r4, #40]	; 0x28
   131c4:	str	r5, [sp, #4]
   131c8:	str	r3, [sp, #12]
   131cc:	str	sl, [sp, #8]
   131d0:	ldr	ip, [r4]
   131d4:	ldr	r1, [sp, #36]	; 0x24
   131d8:	mov	r3, r9
   131dc:	str	ip, [sp]
   131e0:	str	r0, [sp, #32]
   131e4:	bl	11978 <abort@plt+0xb90>
   131e8:	ldr	r2, [sp, #28]
   131ec:	cmp	r6, #0
   131f0:	str	r2, [r7]
   131f4:	ldr	r0, [sp, #32]
   131f8:	strne	fp, [r6]
   131fc:	add	sp, sp, #44	; 0x2c
   13200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13204:	andeq	r8, r2, ip, asr #2
   13208:	push	{r4, r5, r6, r7, r8, lr}
   1320c:	ldr	r6, [pc, #116]	; 13288 <abort@plt+0x24a0>
   13210:	ldr	r3, [r6, #4]
   13214:	ldr	r7, [r6]
   13218:	cmp	r3, #1
   1321c:	movgt	r5, r7
   13220:	movgt	r4, #1
   13224:	ble	13244 <abort@plt+0x245c>
   13228:	ldr	r0, [r5, #12]
   1322c:	bl	16d94 <abort@plt+0x5fac>
   13230:	ldr	r3, [r6, #4]
   13234:	add	r4, r4, #1
   13238:	cmp	r3, r4
   1323c:	add	r5, r5, #8
   13240:	bgt	13228 <abort@plt+0x2440>
   13244:	ldr	r0, [r7, #4]
   13248:	ldr	r4, [pc, #60]	; 1328c <abort@plt+0x24a4>
   1324c:	cmp	r0, r4
   13250:	beq	13264 <abort@plt+0x247c>
   13254:	bl	16d94 <abort@plt+0x5fac>
   13258:	mov	r3, #256	; 0x100
   1325c:	str	r4, [r6, #12]
   13260:	str	r3, [r6, #8]
   13264:	ldr	r4, [pc, #36]	; 13290 <abort@plt+0x24a8>
   13268:	cmp	r7, r4
   1326c:	beq	1327c <abort@plt+0x2494>
   13270:	mov	r0, r7
   13274:	bl	16d94 <abort@plt+0x5fac>
   13278:	str	r4, [r6]
   1327c:	mov	r3, #1
   13280:	str	r3, [r6, #4]
   13284:	pop	{r4, r5, r6, r7, r8, pc}
   13288:	andeq	r8, r2, r0, ror #1
   1328c:	andeq	r8, r2, ip, ror r1
   13290:	andeq	r8, r2, r8, ror #1
   13294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13298:	sub	sp, sp, #44	; 0x2c
   1329c:	mov	r5, r0
   132a0:	mov	sl, r1
   132a4:	bl	10d28 <__errno_location@plt>
   132a8:	ldr	r4, [pc, #400]	; 13440 <abort@plt+0x2658>
   132ac:	cmn	r5, #-2147483647	; 0x80000001
   132b0:	ldr	r6, [r4]
   132b4:	mov	r8, r0
   132b8:	movne	r0, #0
   132bc:	moveq	r0, #1
   132c0:	ldr	r3, [r8]
   132c4:	orrs	r0, r0, r5, lsr #31
   132c8:	str	r3, [sp, #24]
   132cc:	bne	1343c <abort@plt+0x2654>
   132d0:	ldr	r2, [r4, #4]
   132d4:	cmp	r5, r2
   132d8:	blt	13338 <abort@plt+0x2550>
   132dc:	add	r7, r4, #8
   132e0:	cmp	r6, r7
   132e4:	str	r2, [sp, #36]	; 0x24
   132e8:	beq	1340c <abort@plt+0x2624>
   132ec:	mov	r3, #8
   132f0:	sub	r2, r5, r2
   132f4:	mov	r0, r6
   132f8:	str	r3, [sp]
   132fc:	add	r2, r2, #1
   13300:	mvn	r3, #-2147483648	; 0x80000000
   13304:	add	r1, sp, #36	; 0x24
   13308:	bl	16470 <abort@plt+0x5688>
   1330c:	mov	r6, r0
   13310:	str	r0, [r4]
   13314:	ldr	r0, [r4, #4]
   13318:	ldr	r2, [sp, #36]	; 0x24
   1331c:	mov	r1, #0
   13320:	sub	r2, r2, r0
   13324:	add	r0, r6, r0, lsl #3
   13328:	lsl	r2, r2, #3
   1332c:	bl	10d40 <memset@plt>
   13330:	ldr	r3, [sp, #36]	; 0x24
   13334:	str	r3, [r4, #4]
   13338:	ldr	r4, [pc, #260]	; 13444 <abort@plt+0x265c>
   1333c:	add	fp, r6, r5, lsl #3
   13340:	ldr	r9, [r6, r5, lsl #3]
   13344:	ldr	r0, [r4, #4]
   13348:	ldr	r3, [r4]
   1334c:	ldr	r7, [fp, #4]
   13350:	ldr	r1, [r4, #44]	; 0x2c
   13354:	ldr	r2, [r4, #40]	; 0x28
   13358:	orr	r0, r0, #1
   1335c:	str	r3, [sp]
   13360:	add	r3, r4, #8
   13364:	str	r0, [sp, #28]
   13368:	str	r0, [sp, #4]
   1336c:	str	r1, [sp, #16]
   13370:	str	r2, [sp, #12]
   13374:	str	r3, [sp, #8]
   13378:	mov	r0, r7
   1337c:	mov	r1, r9
   13380:	mvn	r3, #0
   13384:	mov	r2, sl
   13388:	bl	11978 <abort@plt+0xb90>
   1338c:	cmp	r9, r0
   13390:	bhi	133f8 <abort@plt+0x2610>
   13394:	add	r3, r4, #48	; 0x30
   13398:	add	r9, r0, #1
   1339c:	cmp	r7, r3
   133a0:	str	r9, [r6, r5, lsl #3]
   133a4:	beq	133b0 <abort@plt+0x25c8>
   133a8:	mov	r0, r7
   133ac:	bl	16d94 <abort@plt+0x5fac>
   133b0:	mov	r0, r9
   133b4:	bl	16254 <abort@plt+0x546c>
   133b8:	ldr	ip, [r4, #44]	; 0x2c
   133bc:	ldr	r3, [r4]
   133c0:	ldr	lr, [r4, #40]	; 0x28
   133c4:	ldr	r4, [pc, #124]	; 13448 <abort@plt+0x2660>
   133c8:	mov	r2, sl
   133cc:	mov	r1, r9
   133d0:	str	r0, [fp, #4]
   133d4:	str	r4, [sp, #8]
   133d8:	ldr	r4, [sp, #28]
   133dc:	str	r3, [sp]
   133e0:	str	r4, [sp, #4]
   133e4:	str	ip, [sp, #16]
   133e8:	str	lr, [sp, #12]
   133ec:	mvn	r3, #0
   133f0:	mov	r7, r0
   133f4:	bl	11978 <abort@plt+0xb90>
   133f8:	ldr	r3, [sp, #24]
   133fc:	mov	r0, r7
   13400:	str	r3, [r8]
   13404:	add	sp, sp, #44	; 0x2c
   13408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1340c:	mov	r3, #8
   13410:	sub	r2, r5, r2
   13414:	str	r3, [sp]
   13418:	add	r1, sp, #36	; 0x24
   1341c:	add	r2, r2, #1
   13420:	mvn	r3, #-2147483648	; 0x80000000
   13424:	bl	16470 <abort@plt+0x5688>
   13428:	mov	r6, r0
   1342c:	ldm	r7, {r0, r1}
   13430:	str	r6, [r4]
   13434:	stm	r6, {r0, r1}
   13438:	b	13314 <abort@plt+0x252c>
   1343c:	bl	10de8 <abort@plt>
   13440:	andeq	r8, r2, r0, ror #1
   13444:	andeq	r8, r2, ip, asr #2
   13448:	andeq	r8, r2, r4, asr r1
   1344c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13450:	sub	sp, sp, #52	; 0x34
   13454:	mov	r5, r0
   13458:	mov	sl, r1
   1345c:	mov	fp, r2
   13460:	bl	10d28 <__errno_location@plt>
   13464:	ldr	r4, [pc, #408]	; 13604 <abort@plt+0x281c>
   13468:	cmn	r5, #-2147483647	; 0x80000001
   1346c:	ldr	r6, [r4]
   13470:	mov	r8, r0
   13474:	movne	r0, #0
   13478:	moveq	r0, #1
   1347c:	ldr	r3, [r8]
   13480:	orrs	r0, r0, r5, lsr #31
   13484:	str	r3, [sp, #28]
   13488:	bne	13600 <abort@plt+0x2818>
   1348c:	ldr	r2, [r4, #4]
   13490:	cmp	r5, r2
   13494:	blt	134f4 <abort@plt+0x270c>
   13498:	add	r7, r4, #8
   1349c:	cmp	r6, r7
   134a0:	str	r2, [sp, #44]	; 0x2c
   134a4:	beq	135d0 <abort@plt+0x27e8>
   134a8:	mov	r3, #8
   134ac:	sub	r2, r5, r2
   134b0:	mov	r0, r6
   134b4:	str	r3, [sp]
   134b8:	add	r2, r2, #1
   134bc:	mvn	r3, #-2147483648	; 0x80000000
   134c0:	add	r1, sp, #44	; 0x2c
   134c4:	bl	16470 <abort@plt+0x5688>
   134c8:	mov	r6, r0
   134cc:	str	r0, [r4]
   134d0:	ldr	r0, [r4, #4]
   134d4:	ldr	r2, [sp, #44]	; 0x2c
   134d8:	mov	r1, #0
   134dc:	sub	r2, r2, r0
   134e0:	add	r0, r6, r0, lsl #3
   134e4:	lsl	r2, r2, #3
   134e8:	bl	10d40 <memset@plt>
   134ec:	ldr	r3, [sp, #44]	; 0x2c
   134f0:	str	r3, [r4, #4]
   134f4:	ldr	r4, [pc, #268]	; 13608 <abort@plt+0x2820>
   134f8:	add	r3, r6, r5, lsl #3
   134fc:	str	r3, [sp, #32]
   13500:	ldr	r7, [r3, #4]
   13504:	ldr	r0, [r4, #4]
   13508:	ldr	r3, [r4]
   1350c:	ldr	r9, [r6, r5, lsl #3]
   13510:	ldr	r1, [r4, #44]	; 0x2c
   13514:	ldr	r2, [r4, #40]	; 0x28
   13518:	orr	r0, r0, #1
   1351c:	str	r3, [sp]
   13520:	add	r3, r4, #8
   13524:	str	r0, [sp, #36]	; 0x24
   13528:	str	r0, [sp, #4]
   1352c:	str	r1, [sp, #16]
   13530:	str	r2, [sp, #12]
   13534:	str	r3, [sp, #8]
   13538:	mov	r0, r7
   1353c:	mov	r1, r9
   13540:	mov	r3, fp
   13544:	mov	r2, sl
   13548:	bl	11978 <abort@plt+0xb90>
   1354c:	cmp	r9, r0
   13550:	bhi	135bc <abort@plt+0x27d4>
   13554:	add	r3, r4, #48	; 0x30
   13558:	add	r9, r0, #1
   1355c:	cmp	r7, r3
   13560:	str	r9, [r6, r5, lsl #3]
   13564:	beq	13570 <abort@plt+0x2788>
   13568:	mov	r0, r7
   1356c:	bl	16d94 <abort@plt+0x5fac>
   13570:	mov	r0, r9
   13574:	bl	16254 <abort@plt+0x546c>
   13578:	ldr	ip, [sp, #32]
   1357c:	ldr	lr, [r4, #44]	; 0x2c
   13580:	ldr	r5, [r4, #40]	; 0x28
   13584:	mov	r3, fp
   13588:	mov	r2, sl
   1358c:	mov	r1, r9
   13590:	str	r0, [ip, #4]
   13594:	ldr	ip, [r4]
   13598:	ldr	r4, [pc, #108]	; 1360c <abort@plt+0x2824>
   1359c:	str	lr, [sp, #16]
   135a0:	str	r4, [sp, #8]
   135a4:	ldr	r4, [sp, #36]	; 0x24
   135a8:	str	r5, [sp, #12]
   135ac:	str	r4, [sp, #4]
   135b0:	str	ip, [sp]
   135b4:	mov	r7, r0
   135b8:	bl	11978 <abort@plt+0xb90>
   135bc:	ldr	r3, [sp, #28]
   135c0:	mov	r0, r7
   135c4:	str	r3, [r8]
   135c8:	add	sp, sp, #52	; 0x34
   135cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135d0:	mov	r3, #8
   135d4:	sub	r2, r5, r2
   135d8:	str	r3, [sp]
   135dc:	add	r1, sp, #44	; 0x2c
   135e0:	add	r2, r2, #1
   135e4:	mvn	r3, #-2147483648	; 0x80000000
   135e8:	bl	16470 <abort@plt+0x5688>
   135ec:	mov	r6, r0
   135f0:	ldm	r7, {r0, r1}
   135f4:	str	r6, [r4]
   135f8:	stm	r6, {r0, r1}
   135fc:	b	134d0 <abort@plt+0x26e8>
   13600:	bl	10de8 <abort@plt>
   13604:	andeq	r8, r2, r0, ror #1
   13608:	andeq	r8, r2, ip, asr #2
   1360c:	andeq	r8, r2, r4, asr r1
   13610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13614:	sub	sp, sp, #44	; 0x2c
   13618:	mov	sl, r0
   1361c:	bl	10d28 <__errno_location@plt>
   13620:	ldr	r4, [pc, #352]	; 13788 <abort@plt+0x29a0>
   13624:	ldr	r2, [r4, #4]
   13628:	ldr	r5, [r4]
   1362c:	cmp	r2, #0
   13630:	ldr	r3, [r0]
   13634:	mov	r8, r0
   13638:	str	r3, [sp, #28]
   1363c:	bgt	13698 <abort@plt+0x28b0>
   13640:	add	r6, r4, #8
   13644:	cmp	r5, r6
   13648:	str	r2, [sp, #36]	; 0x24
   1364c:	beq	13758 <abort@plt+0x2970>
   13650:	mov	r3, #8
   13654:	mov	r0, r5
   13658:	str	r3, [sp]
   1365c:	rsb	r2, r2, #1
   13660:	mvn	r3, #-2147483648	; 0x80000000
   13664:	add	r1, sp, #36	; 0x24
   13668:	bl	16470 <abort@plt+0x5688>
   1366c:	mov	r5, r0
   13670:	str	r0, [r4]
   13674:	ldr	r0, [r4, #4]
   13678:	ldr	r2, [sp, #36]	; 0x24
   1367c:	mov	r1, #0
   13680:	sub	r2, r2, r0
   13684:	add	r0, r5, r0, lsl #3
   13688:	lsl	r2, r2, #3
   1368c:	bl	10d40 <memset@plt>
   13690:	ldr	r3, [sp, #36]	; 0x24
   13694:	str	r3, [r4, #4]
   13698:	ldr	r4, [pc, #236]	; 1378c <abort@plt+0x29a4>
   1369c:	ldr	r9, [r5]
   136a0:	ldr	r6, [r5, #4]
   136a4:	ldr	r7, [r4, #4]
   136a8:	ldr	r1, [r4, #44]	; 0x2c
   136ac:	ldr	r2, [r4, #40]	; 0x28
   136b0:	ldr	r3, [r4]
   136b4:	orr	r7, r7, #1
   136b8:	add	fp, r4, #8
   136bc:	str	r1, [sp, #16]
   136c0:	str	r2, [sp, #12]
   136c4:	str	r3, [sp]
   136c8:	str	r7, [sp, #4]
   136cc:	str	fp, [sp, #8]
   136d0:	mov	r1, r9
   136d4:	mov	r0, r6
   136d8:	mvn	r3, #0
   136dc:	mov	r2, sl
   136e0:	bl	11978 <abort@plt+0xb90>
   136e4:	cmp	r9, r0
   136e8:	bhi	13744 <abort@plt+0x295c>
   136ec:	add	r3, r4, #48	; 0x30
   136f0:	add	r9, r0, #1
   136f4:	cmp	r6, r3
   136f8:	str	r9, [r5]
   136fc:	beq	13708 <abort@plt+0x2920>
   13700:	mov	r0, r6
   13704:	bl	16d94 <abort@plt+0x5fac>
   13708:	mov	r0, r9
   1370c:	bl	16254 <abort@plt+0x546c>
   13710:	ldr	ip, [r4, #44]	; 0x2c
   13714:	ldr	r3, [r4]
   13718:	ldr	lr, [r4, #40]	; 0x28
   1371c:	mov	r2, sl
   13720:	mov	r1, r9
   13724:	str	r0, [r5, #4]
   13728:	str	r3, [sp]
   1372c:	stmib	sp, {r7, fp}
   13730:	str	ip, [sp, #16]
   13734:	str	lr, [sp, #12]
   13738:	mvn	r3, #0
   1373c:	mov	r6, r0
   13740:	bl	11978 <abort@plt+0xb90>
   13744:	ldr	r3, [sp, #28]
   13748:	mov	r0, r6
   1374c:	str	r3, [r8]
   13750:	add	sp, sp, #44	; 0x2c
   13754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13758:	mov	r3, #8
   1375c:	str	r3, [sp]
   13760:	add	r1, sp, #36	; 0x24
   13764:	rsb	r2, r2, #1
   13768:	mvn	r3, #-2147483648	; 0x80000000
   1376c:	mov	r0, #0
   13770:	bl	16470 <abort@plt+0x5688>
   13774:	mov	r5, r0
   13778:	ldm	r6, {r0, r1}
   1377c:	str	r5, [r4]
   13780:	stm	r5, {r0, r1}
   13784:	b	13674 <abort@plt+0x288c>
   13788:	andeq	r8, r2, r0, ror #1
   1378c:	andeq	r8, r2, ip, asr #2
   13790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13794:	sub	sp, sp, #44	; 0x2c
   13798:	mov	r9, r0
   1379c:	mov	sl, r1
   137a0:	bl	10d28 <__errno_location@plt>
   137a4:	ldr	r4, [pc, #364]	; 13918 <abort@plt+0x2b30>
   137a8:	ldr	r2, [r4, #4]
   137ac:	ldr	r5, [r4]
   137b0:	cmp	r2, #0
   137b4:	ldr	r3, [r0]
   137b8:	mov	r7, r0
   137bc:	str	r3, [sp, #24]
   137c0:	bgt	1381c <abort@plt+0x2a34>
   137c4:	add	r6, r4, #8
   137c8:	cmp	r5, r6
   137cc:	str	r2, [sp, #36]	; 0x24
   137d0:	beq	138e8 <abort@plt+0x2b00>
   137d4:	mov	r3, #8
   137d8:	mov	r0, r5
   137dc:	str	r3, [sp]
   137e0:	rsb	r2, r2, #1
   137e4:	mvn	r3, #-2147483648	; 0x80000000
   137e8:	add	r1, sp, #36	; 0x24
   137ec:	bl	16470 <abort@plt+0x5688>
   137f0:	mov	r5, r0
   137f4:	str	r0, [r4]
   137f8:	ldr	r0, [r4, #4]
   137fc:	ldr	r2, [sp, #36]	; 0x24
   13800:	mov	r1, #0
   13804:	sub	r2, r2, r0
   13808:	add	r0, r5, r0, lsl #3
   1380c:	lsl	r2, r2, #3
   13810:	bl	10d40 <memset@plt>
   13814:	ldr	r3, [sp, #36]	; 0x24
   13818:	str	r3, [r4, #4]
   1381c:	ldr	r4, [pc, #248]	; 1391c <abort@plt+0x2b34>
   13820:	ldr	r8, [r5]
   13824:	ldr	r6, [r5, #4]
   13828:	ldr	r0, [r4, #4]
   1382c:	ldr	r1, [r4, #44]	; 0x2c
   13830:	ldr	r2, [r4, #40]	; 0x28
   13834:	ldr	r3, [r4]
   13838:	orr	r0, r0, #1
   1383c:	add	fp, r4, #8
   13840:	str	r0, [sp, #28]
   13844:	str	r0, [sp, #4]
   13848:	str	r1, [sp, #16]
   1384c:	str	r2, [sp, #12]
   13850:	str	r3, [sp]
   13854:	str	fp, [sp, #8]
   13858:	mov	r1, r8
   1385c:	mov	r0, r6
   13860:	mov	r3, sl
   13864:	mov	r2, r9
   13868:	bl	11978 <abort@plt+0xb90>
   1386c:	cmp	r8, r0
   13870:	bhi	138d4 <abort@plt+0x2aec>
   13874:	add	r3, r4, #48	; 0x30
   13878:	add	r8, r0, #1
   1387c:	cmp	r6, r3
   13880:	str	r8, [r5]
   13884:	beq	13890 <abort@plt+0x2aa8>
   13888:	mov	r0, r6
   1388c:	bl	16d94 <abort@plt+0x5fac>
   13890:	mov	r0, r8
   13894:	bl	16254 <abort@plt+0x546c>
   13898:	ldr	lr, [r4, #44]	; 0x2c
   1389c:	ldr	ip, [r4]
   138a0:	mov	r3, sl
   138a4:	mov	r2, r9
   138a8:	mov	r1, r8
   138ac:	str	r0, [r5, #4]
   138b0:	ldr	r5, [r4, #40]	; 0x28
   138b4:	ldr	r4, [sp, #28]
   138b8:	str	fp, [sp, #8]
   138bc:	str	r4, [sp, #4]
   138c0:	str	lr, [sp, #16]
   138c4:	str	r5, [sp, #12]
   138c8:	str	ip, [sp]
   138cc:	mov	r6, r0
   138d0:	bl	11978 <abort@plt+0xb90>
   138d4:	ldr	r3, [sp, #24]
   138d8:	mov	r0, r6
   138dc:	str	r3, [r7]
   138e0:	add	sp, sp, #44	; 0x2c
   138e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138e8:	mov	r3, #8
   138ec:	str	r3, [sp]
   138f0:	add	r1, sp, #36	; 0x24
   138f4:	rsb	r2, r2, #1
   138f8:	mvn	r3, #-2147483648	; 0x80000000
   138fc:	mov	r0, #0
   13900:	bl	16470 <abort@plt+0x5688>
   13904:	mov	r5, r0
   13908:	ldm	r6, {r0, r1}
   1390c:	str	r5, [r4]
   13910:	stm	r5, {r0, r1}
   13914:	b	137f8 <abort@plt+0x2a10>
   13918:	andeq	r8, r2, r0, ror #1
   1391c:	andeq	r8, r2, ip, asr #2
   13920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13924:	sub	sp, sp, #132	; 0x84
   13928:	mov	r5, r1
   1392c:	mov	r4, r0
   13930:	mov	r9, r2
   13934:	add	r0, sp, #80	; 0x50
   13938:	mov	r2, #48	; 0x30
   1393c:	mov	r1, #0
   13940:	bl	10d40 <memset@plt>
   13944:	cmp	r5, #10
   13948:	beq	13b00 <abort@plt+0x2d18>
   1394c:	add	lr, sp, #80	; 0x50
   13950:	str	r5, [sp, #80]	; 0x50
   13954:	ldm	lr!, {r0, r1, r2, r3}
   13958:	add	ip, sp, #32
   1395c:	ldr	r6, [pc, #416]	; 13b04 <abort@plt+0x2d1c>
   13960:	stmia	ip!, {r0, r1, r2, r3}
   13964:	ldm	lr!, {r0, r1, r2, r3}
   13968:	stmia	ip!, {r0, r1, r2, r3}
   1396c:	ldm	lr, {r0, r1, r2, r3}
   13970:	stm	ip, {r0, r1, r2, r3}
   13974:	bl	10d28 <__errno_location@plt>
   13978:	cmn	r4, #-2147483647	; 0x80000001
   1397c:	ldr	r5, [r6]
   13980:	mov	r7, r0
   13984:	movne	r0, #0
   13988:	moveq	r0, #1
   1398c:	ldr	r3, [r7]
   13990:	orrs	r0, r0, r4, lsr #31
   13994:	str	r3, [sp, #24]
   13998:	bne	13b00 <abort@plt+0x2d18>
   1399c:	ldr	r2, [r6, #4]
   139a0:	cmp	r4, r2
   139a4:	blt	13a04 <abort@plt+0x2c1c>
   139a8:	add	r8, r6, #8
   139ac:	cmp	r5, r8
   139b0:	str	r2, [sp, #80]	; 0x50
   139b4:	beq	13ad0 <abort@plt+0x2ce8>
   139b8:	mov	r3, #8
   139bc:	sub	r2, r4, r2
   139c0:	mov	r0, r5
   139c4:	str	r3, [sp]
   139c8:	add	r2, r2, #1
   139cc:	add	r1, sp, #80	; 0x50
   139d0:	mvn	r3, #-2147483648	; 0x80000000
   139d4:	bl	16470 <abort@plt+0x5688>
   139d8:	mov	r5, r0
   139dc:	str	r0, [r6]
   139e0:	ldr	r0, [r6, #4]
   139e4:	ldr	r2, [sp, #80]	; 0x50
   139e8:	mov	r1, #0
   139ec:	sub	r2, r2, r0
   139f0:	add	r0, r5, r0, lsl #3
   139f4:	lsl	r2, r2, #3
   139f8:	bl	10d40 <memset@plt>
   139fc:	ldr	r3, [sp, #80]	; 0x50
   13a00:	str	r3, [r6, #4]
   13a04:	add	fp, r5, r4, lsl #3
   13a08:	ldr	r1, [sp, #36]	; 0x24
   13a0c:	ldr	r8, [r5, r4, lsl #3]
   13a10:	ldr	r6, [fp, #4]
   13a14:	ldr	r2, [sp, #72]	; 0x48
   13a18:	ldr	r3, [sp, #32]
   13a1c:	ldr	ip, [sp, #76]	; 0x4c
   13a20:	orr	r1, r1, #1
   13a24:	add	sl, sp, #40	; 0x28
   13a28:	str	r1, [sp, #28]
   13a2c:	str	r1, [sp, #4]
   13a30:	str	r2, [sp, #12]
   13a34:	str	r3, [sp]
   13a38:	mov	r0, r6
   13a3c:	mov	r1, r8
   13a40:	str	ip, [sp, #16]
   13a44:	str	sl, [sp, #8]
   13a48:	mvn	r3, #0
   13a4c:	mov	r2, r9
   13a50:	bl	11978 <abort@plt+0xb90>
   13a54:	cmp	r8, r0
   13a58:	bhi	13abc <abort@plt+0x2cd4>
   13a5c:	ldr	r3, [pc, #164]	; 13b08 <abort@plt+0x2d20>
   13a60:	add	r8, r0, #1
   13a64:	cmp	r6, r3
   13a68:	str	r8, [r5, r4, lsl #3]
   13a6c:	beq	13a78 <abort@plt+0x2c90>
   13a70:	mov	r0, r6
   13a74:	bl	16d94 <abort@plt+0x5fac>
   13a78:	mov	r0, r8
   13a7c:	bl	16254 <abort@plt+0x546c>
   13a80:	ldr	lr, [sp, #76]	; 0x4c
   13a84:	ldr	r3, [sp, #32]
   13a88:	ldr	ip, [sp, #72]	; 0x48
   13a8c:	ldr	r4, [sp, #28]
   13a90:	mov	r2, r9
   13a94:	mov	r1, r8
   13a98:	str	r0, [fp, #4]
   13a9c:	str	r3, [sp]
   13aa0:	str	sl, [sp, #8]
   13aa4:	str	r4, [sp, #4]
   13aa8:	str	lr, [sp, #16]
   13aac:	str	ip, [sp, #12]
   13ab0:	mvn	r3, #0
   13ab4:	mov	r6, r0
   13ab8:	bl	11978 <abort@plt+0xb90>
   13abc:	ldr	r3, [sp, #24]
   13ac0:	mov	r0, r6
   13ac4:	str	r3, [r7]
   13ac8:	add	sp, sp, #132	; 0x84
   13acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ad0:	mov	r3, #8
   13ad4:	sub	r2, r4, r2
   13ad8:	add	r1, sp, #80	; 0x50
   13adc:	str	r3, [sp]
   13ae0:	add	r2, r2, #1
   13ae4:	mvn	r3, #-2147483648	; 0x80000000
   13ae8:	bl	16470 <abort@plt+0x5688>
   13aec:	mov	r5, r0
   13af0:	ldm	r8, {r0, r1}
   13af4:	str	r5, [r6]
   13af8:	stm	r5, {r0, r1}
   13afc:	b	139e0 <abort@plt+0x2bf8>
   13b00:	bl	10de8 <abort@plt>
   13b04:	andeq	r8, r2, r0, ror #1
   13b08:	andeq	r8, r2, ip, ror r1
   13b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b10:	sub	sp, sp, #132	; 0x84
   13b14:	mov	r5, r1
   13b18:	mov	r4, r0
   13b1c:	mov	r9, r2
   13b20:	add	r0, sp, #80	; 0x50
   13b24:	mov	r2, #48	; 0x30
   13b28:	mov	r1, #0
   13b2c:	mov	sl, r3
   13b30:	bl	10d40 <memset@plt>
   13b34:	cmp	r5, #10
   13b38:	beq	13cf4 <abort@plt+0x2f0c>
   13b3c:	add	lr, sp, #80	; 0x50
   13b40:	str	r5, [sp, #80]	; 0x50
   13b44:	ldm	lr!, {r0, r1, r2, r3}
   13b48:	add	ip, sp, #32
   13b4c:	ldr	r6, [pc, #420]	; 13cf8 <abort@plt+0x2f10>
   13b50:	stmia	ip!, {r0, r1, r2, r3}
   13b54:	ldm	lr!, {r0, r1, r2, r3}
   13b58:	stmia	ip!, {r0, r1, r2, r3}
   13b5c:	ldm	lr, {r0, r1, r2, r3}
   13b60:	stm	ip, {r0, r1, r2, r3}
   13b64:	bl	10d28 <__errno_location@plt>
   13b68:	cmn	r4, #-2147483647	; 0x80000001
   13b6c:	ldr	r5, [r6]
   13b70:	mov	r7, r0
   13b74:	movne	r0, #0
   13b78:	moveq	r0, #1
   13b7c:	ldr	r3, [r7]
   13b80:	orrs	r0, r0, r4, lsr #31
   13b84:	str	r3, [sp, #24]
   13b88:	bne	13cf4 <abort@plt+0x2f0c>
   13b8c:	ldr	r2, [r6, #4]
   13b90:	cmp	r4, r2
   13b94:	blt	13bf4 <abort@plt+0x2e0c>
   13b98:	add	r8, r6, #8
   13b9c:	cmp	r5, r8
   13ba0:	str	r2, [sp, #80]	; 0x50
   13ba4:	beq	13cc4 <abort@plt+0x2edc>
   13ba8:	mov	r3, #8
   13bac:	sub	r2, r4, r2
   13bb0:	mov	r0, r5
   13bb4:	str	r3, [sp]
   13bb8:	add	r2, r2, #1
   13bbc:	add	r1, sp, #80	; 0x50
   13bc0:	mvn	r3, #-2147483648	; 0x80000000
   13bc4:	bl	16470 <abort@plt+0x5688>
   13bc8:	mov	r5, r0
   13bcc:	str	r0, [r6]
   13bd0:	ldr	r0, [r6, #4]
   13bd4:	ldr	r2, [sp, #80]	; 0x50
   13bd8:	mov	r1, #0
   13bdc:	sub	r2, r2, r0
   13be0:	add	r0, r5, r0, lsl #3
   13be4:	lsl	r2, r2, #3
   13be8:	bl	10d40 <memset@plt>
   13bec:	ldr	r3, [sp, #80]	; 0x50
   13bf0:	str	r3, [r6, #4]
   13bf4:	add	fp, r5, r4, lsl #3
   13bf8:	ldr	r3, [sp, #32]
   13bfc:	ldr	r1, [sp, #36]	; 0x24
   13c00:	ldr	r8, [r5, r4, lsl #3]
   13c04:	ldr	r6, [fp, #4]
   13c08:	ldr	r2, [sp, #72]	; 0x48
   13c0c:	ldr	ip, [sp, #76]	; 0x4c
   13c10:	orr	r1, r1, #1
   13c14:	str	r3, [sp]
   13c18:	add	r3, sp, #40	; 0x28
   13c1c:	str	r1, [sp, #28]
   13c20:	str	r1, [sp, #4]
   13c24:	str	r2, [sp, #12]
   13c28:	str	r3, [sp, #8]
   13c2c:	mov	r0, r6
   13c30:	mov	r1, r8
   13c34:	str	ip, [sp, #16]
   13c38:	mov	r3, sl
   13c3c:	mov	r2, r9
   13c40:	bl	11978 <abort@plt+0xb90>
   13c44:	cmp	r8, r0
   13c48:	bhi	13cb0 <abort@plt+0x2ec8>
   13c4c:	ldr	r3, [pc, #168]	; 13cfc <abort@plt+0x2f14>
   13c50:	add	r8, r0, #1
   13c54:	cmp	r6, r3
   13c58:	str	r8, [r5, r4, lsl #3]
   13c5c:	beq	13c68 <abort@plt+0x2e80>
   13c60:	mov	r0, r6
   13c64:	bl	16d94 <abort@plt+0x5fac>
   13c68:	mov	r0, r8
   13c6c:	bl	16254 <abort@plt+0x546c>
   13c70:	add	lr, sp, #40	; 0x28
   13c74:	ldr	ip, [sp, #76]	; 0x4c
   13c78:	ldr	r4, [sp, #72]	; 0x48
   13c7c:	ldr	r5, [sp, #28]
   13c80:	mov	r3, sl
   13c84:	mov	r2, r9
   13c88:	mov	r1, r8
   13c8c:	str	r0, [fp, #4]
   13c90:	str	lr, [sp, #8]
   13c94:	ldr	lr, [sp, #32]
   13c98:	str	r5, [sp, #4]
   13c9c:	str	ip, [sp, #16]
   13ca0:	str	r4, [sp, #12]
   13ca4:	str	lr, [sp]
   13ca8:	mov	r6, r0
   13cac:	bl	11978 <abort@plt+0xb90>
   13cb0:	ldr	r3, [sp, #24]
   13cb4:	mov	r0, r6
   13cb8:	str	r3, [r7]
   13cbc:	add	sp, sp, #132	; 0x84
   13cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cc4:	mov	r3, #8
   13cc8:	sub	r2, r4, r2
   13ccc:	add	r1, sp, #80	; 0x50
   13cd0:	str	r3, [sp]
   13cd4:	add	r2, r2, #1
   13cd8:	mvn	r3, #-2147483648	; 0x80000000
   13cdc:	bl	16470 <abort@plt+0x5688>
   13ce0:	mov	r5, r0
   13ce4:	ldm	r8, {r0, r1}
   13ce8:	str	r5, [r6]
   13cec:	stm	r5, {r0, r1}
   13cf0:	b	13bd0 <abort@plt+0x2de8>
   13cf4:	bl	10de8 <abort@plt>
   13cf8:	andeq	r8, r2, r0, ror #1
   13cfc:	andeq	r8, r2, ip, ror r1
   13d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d04:	sub	sp, sp, #124	; 0x7c
   13d08:	mov	r4, r0
   13d0c:	mov	r9, r1
   13d10:	add	r0, sp, #72	; 0x48
   13d14:	mov	r2, #48	; 0x30
   13d18:	mov	r1, #0
   13d1c:	bl	10d40 <memset@plt>
   13d20:	cmp	r4, #10
   13d24:	beq	13eb0 <abort@plt+0x30c8>
   13d28:	add	lr, sp, #72	; 0x48
   13d2c:	str	r4, [sp, #72]	; 0x48
   13d30:	ldm	lr!, {r0, r1, r2, r3}
   13d34:	add	ip, sp, #24
   13d38:	ldr	r5, [pc, #372]	; 13eb4 <abort@plt+0x30cc>
   13d3c:	stmia	ip!, {r0, r1, r2, r3}
   13d40:	ldm	lr!, {r0, r1, r2, r3}
   13d44:	stmia	ip!, {r0, r1, r2, r3}
   13d48:	ldm	lr, {r0, r1, r2, r3}
   13d4c:	stm	ip, {r0, r1, r2, r3}
   13d50:	bl	10d28 <__errno_location@plt>
   13d54:	ldr	r2, [r5, #4]
   13d58:	ldr	r4, [r5]
   13d5c:	cmp	r2, #0
   13d60:	mov	r7, r0
   13d64:	ldr	fp, [r0]
   13d68:	bgt	13dc4 <abort@plt+0x2fdc>
   13d6c:	add	r6, r5, #8
   13d70:	cmp	r4, r6
   13d74:	str	r2, [sp, #72]	; 0x48
   13d78:	beq	13e80 <abort@plt+0x3098>
   13d7c:	mov	r3, #8
   13d80:	mov	r0, r4
   13d84:	str	r3, [sp]
   13d88:	rsb	r2, r2, #1
   13d8c:	add	r1, sp, #72	; 0x48
   13d90:	mvn	r3, #-2147483648	; 0x80000000
   13d94:	bl	16470 <abort@plt+0x5688>
   13d98:	mov	r4, r0
   13d9c:	str	r0, [r5]
   13da0:	ldr	r0, [r5, #4]
   13da4:	ldr	r2, [sp, #72]	; 0x48
   13da8:	mov	r1, #0
   13dac:	sub	r2, r2, r0
   13db0:	add	r0, r4, r0, lsl #3
   13db4:	lsl	r2, r2, #3
   13db8:	bl	10d40 <memset@plt>
   13dbc:	ldr	r3, [sp, #72]	; 0x48
   13dc0:	str	r3, [r5, #4]
   13dc4:	ldr	r6, [sp, #28]
   13dc8:	ldr	r8, [r4]
   13dcc:	ldr	r5, [r4, #4]
   13dd0:	ldr	r2, [sp, #64]	; 0x40
   13dd4:	ldr	r3, [sp, #24]
   13dd8:	ldr	ip, [sp, #68]	; 0x44
   13ddc:	orr	r6, r6, #1
   13de0:	add	sl, sp, #32
   13de4:	str	r2, [sp, #12]
   13de8:	str	r3, [sp]
   13dec:	str	r6, [sp, #4]
   13df0:	mov	r1, r8
   13df4:	mov	r0, r5
   13df8:	str	ip, [sp, #16]
   13dfc:	str	sl, [sp, #8]
   13e00:	mvn	r3, #0
   13e04:	mov	r2, r9
   13e08:	bl	11978 <abort@plt+0xb90>
   13e0c:	cmp	r8, r0
   13e10:	bhi	13e70 <abort@plt+0x3088>
   13e14:	ldr	r3, [pc, #156]	; 13eb8 <abort@plt+0x30d0>
   13e18:	add	r8, r0, #1
   13e1c:	cmp	r5, r3
   13e20:	str	r8, [r4]
   13e24:	beq	13e30 <abort@plt+0x3048>
   13e28:	mov	r0, r5
   13e2c:	bl	16d94 <abort@plt+0x5fac>
   13e30:	mov	r0, r8
   13e34:	bl	16254 <abort@plt+0x546c>
   13e38:	ldr	lr, [sp, #68]	; 0x44
   13e3c:	ldr	r3, [sp, #24]
   13e40:	ldr	ip, [sp, #64]	; 0x40
   13e44:	mov	r2, r9
   13e48:	mov	r1, r8
   13e4c:	str	r0, [r4, #4]
   13e50:	str	r3, [sp]
   13e54:	str	sl, [sp, #8]
   13e58:	str	r6, [sp, #4]
   13e5c:	str	lr, [sp, #16]
   13e60:	str	ip, [sp, #12]
   13e64:	mvn	r3, #0
   13e68:	mov	r5, r0
   13e6c:	bl	11978 <abort@plt+0xb90>
   13e70:	mov	r0, r5
   13e74:	str	fp, [r7]
   13e78:	add	sp, sp, #124	; 0x7c
   13e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e80:	mov	r3, #8
   13e84:	add	r1, sp, #72	; 0x48
   13e88:	str	r3, [sp]
   13e8c:	rsb	r2, r2, #1
   13e90:	mvn	r3, #-2147483648	; 0x80000000
   13e94:	mov	r0, #0
   13e98:	bl	16470 <abort@plt+0x5688>
   13e9c:	mov	r4, r0
   13ea0:	ldm	r6, {r0, r1}
   13ea4:	str	r4, [r5]
   13ea8:	stm	r4, {r0, r1}
   13eac:	b	13da0 <abort@plt+0x2fb8>
   13eb0:	bl	10de8 <abort@plt>
   13eb4:	andeq	r8, r2, r0, ror #1
   13eb8:	andeq	r8, r2, ip, ror r1
   13ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ec0:	sub	sp, sp, #132	; 0x84
   13ec4:	mov	r4, r0
   13ec8:	mov	r9, r1
   13ecc:	mov	sl, r2
   13ed0:	add	r0, sp, #80	; 0x50
   13ed4:	mov	r2, #48	; 0x30
   13ed8:	mov	r1, #0
   13edc:	bl	10d40 <memset@plt>
   13ee0:	cmp	r4, #10
   13ee4:	beq	14078 <abort@plt+0x3290>
   13ee8:	add	lr, sp, #80	; 0x50
   13eec:	str	r4, [sp, #80]	; 0x50
   13ef0:	ldm	lr!, {r0, r1, r2, r3}
   13ef4:	add	ip, sp, #32
   13ef8:	ldr	r5, [pc, #380]	; 1407c <abort@plt+0x3294>
   13efc:	stmia	ip!, {r0, r1, r2, r3}
   13f00:	ldm	lr!, {r0, r1, r2, r3}
   13f04:	stmia	ip!, {r0, r1, r2, r3}
   13f08:	ldm	lr, {r0, r1, r2, r3}
   13f0c:	stm	ip, {r0, r1, r2, r3}
   13f10:	bl	10d28 <__errno_location@plt>
   13f14:	ldr	r2, [r5, #4]
   13f18:	ldr	r4, [r5]
   13f1c:	cmp	r2, #0
   13f20:	ldr	r3, [r0]
   13f24:	mov	r7, r0
   13f28:	str	r3, [sp, #28]
   13f2c:	bgt	13f88 <abort@plt+0x31a0>
   13f30:	add	r6, r5, #8
   13f34:	cmp	r4, r6
   13f38:	str	r2, [sp, #80]	; 0x50
   13f3c:	beq	14048 <abort@plt+0x3260>
   13f40:	mov	r3, #8
   13f44:	mov	r0, r4
   13f48:	str	r3, [sp]
   13f4c:	rsb	r2, r2, #1
   13f50:	add	r1, sp, #80	; 0x50
   13f54:	mvn	r3, #-2147483648	; 0x80000000
   13f58:	bl	16470 <abort@plt+0x5688>
   13f5c:	mov	r4, r0
   13f60:	str	r0, [r5]
   13f64:	ldr	r0, [r5, #4]
   13f68:	ldr	r2, [sp, #80]	; 0x50
   13f6c:	mov	r1, #0
   13f70:	sub	r2, r2, r0
   13f74:	add	r0, r4, r0, lsl #3
   13f78:	lsl	r2, r2, #3
   13f7c:	bl	10d40 <memset@plt>
   13f80:	ldr	r3, [sp, #80]	; 0x50
   13f84:	str	r3, [r5, #4]
   13f88:	ldr	r6, [sp, #36]	; 0x24
   13f8c:	ldr	r8, [r4]
   13f90:	ldr	r5, [r4, #4]
   13f94:	ldr	r2, [sp, #72]	; 0x48
   13f98:	ldr	r3, [sp, #32]
   13f9c:	ldr	ip, [sp, #76]	; 0x4c
   13fa0:	orr	r6, r6, #1
   13fa4:	add	fp, sp, #40	; 0x28
   13fa8:	str	r2, [sp, #12]
   13fac:	str	r3, [sp]
   13fb0:	str	r6, [sp, #4]
   13fb4:	mov	r1, r8
   13fb8:	mov	r0, r5
   13fbc:	str	ip, [sp, #16]
   13fc0:	str	fp, [sp, #8]
   13fc4:	mov	r3, sl
   13fc8:	mov	r2, r9
   13fcc:	bl	11978 <abort@plt+0xb90>
   13fd0:	cmp	r8, r0
   13fd4:	bhi	14034 <abort@plt+0x324c>
   13fd8:	ldr	r3, [pc, #160]	; 14080 <abort@plt+0x3298>
   13fdc:	add	r8, r0, #1
   13fe0:	cmp	r5, r3
   13fe4:	str	r8, [r4]
   13fe8:	beq	13ff4 <abort@plt+0x320c>
   13fec:	mov	r0, r5
   13ff0:	bl	16d94 <abort@plt+0x5fac>
   13ff4:	mov	r0, r8
   13ff8:	bl	16254 <abort@plt+0x546c>
   13ffc:	ldr	ip, [sp, #76]	; 0x4c
   14000:	ldr	lr, [sp, #32]
   14004:	mov	r3, sl
   14008:	mov	r2, r9
   1400c:	mov	r1, r8
   14010:	str	r0, [r4, #4]
   14014:	ldr	r4, [sp, #72]	; 0x48
   14018:	str	fp, [sp, #8]
   1401c:	str	r6, [sp, #4]
   14020:	str	ip, [sp, #16]
   14024:	str	r4, [sp, #12]
   14028:	str	lr, [sp]
   1402c:	mov	r5, r0
   14030:	bl	11978 <abort@plt+0xb90>
   14034:	ldr	r3, [sp, #28]
   14038:	mov	r0, r5
   1403c:	str	r3, [r7]
   14040:	add	sp, sp, #132	; 0x84
   14044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14048:	mov	r3, #8
   1404c:	add	r1, sp, #80	; 0x50
   14050:	str	r3, [sp]
   14054:	rsb	r2, r2, #1
   14058:	mvn	r3, #-2147483648	; 0x80000000
   1405c:	mov	r0, #0
   14060:	bl	16470 <abort@plt+0x5688>
   14064:	mov	r4, r0
   14068:	ldm	r6, {r0, r1}
   1406c:	str	r4, [r5]
   14070:	stm	r4, {r0, r1}
   14074:	b	13f64 <abort@plt+0x317c>
   14078:	bl	10de8 <abort@plt>
   1407c:	andeq	r8, r2, r0, ror #1
   14080:	andeq	r8, r2, ip, ror r1
   14084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14088:	mov	r4, r2
   1408c:	ldr	lr, [pc, #432]	; 14244 <abort@plt+0x345c>
   14090:	mov	sl, r0
   14094:	mov	fp, r1
   14098:	ldm	lr!, {r0, r1, r2, r3}
   1409c:	sub	sp, sp, #92	; 0x5c
   140a0:	add	ip, sp, #40	; 0x28
   140a4:	lsr	r7, r4, #5
   140a8:	stmia	ip!, {r0, r1, r2, r3}
   140ac:	add	r6, sp, #48	; 0x30
   140b0:	ldm	lr!, {r0, r1, r2, r3}
   140b4:	and	r4, r4, #31
   140b8:	ldr	r5, [pc, #392]	; 14248 <abort@plt+0x3460>
   140bc:	stmia	ip!, {r0, r1, r2, r3}
   140c0:	ldm	lr, {r0, r1, r2, r3}
   140c4:	stm	ip, {r0, r1, r2, r3}
   140c8:	ldr	r2, [r6, r7, lsl #2]
   140cc:	lsr	r3, r2, r4
   140d0:	eor	r3, r3, #1
   140d4:	and	r3, r3, #1
   140d8:	eor	r4, r2, r3, lsl r4
   140dc:	str	r4, [r6, r7, lsl #2]
   140e0:	bl	10d28 <__errno_location@plt>
   140e4:	ldr	r2, [r5, #4]
   140e8:	ldr	r4, [r5]
   140ec:	cmp	r2, #0
   140f0:	ldr	r3, [r0]
   140f4:	mov	r8, r0
   140f8:	str	r3, [sp, #28]
   140fc:	bgt	14158 <abort@plt+0x3370>
   14100:	add	r7, r5, #8
   14104:	cmp	r4, r7
   14108:	str	r2, [sp, #36]	; 0x24
   1410c:	beq	14214 <abort@plt+0x342c>
   14110:	mov	r3, #8
   14114:	mov	r0, r4
   14118:	str	r3, [sp]
   1411c:	rsb	r2, r2, #1
   14120:	mvn	r3, #-2147483648	; 0x80000000
   14124:	add	r1, sp, #36	; 0x24
   14128:	bl	16470 <abort@plt+0x5688>
   1412c:	mov	r4, r0
   14130:	str	r0, [r5]
   14134:	ldr	r0, [r5, #4]
   14138:	ldr	r2, [sp, #36]	; 0x24
   1413c:	mov	r1, #0
   14140:	sub	r2, r2, r0
   14144:	add	r0, r4, r0, lsl #3
   14148:	lsl	r2, r2, #3
   1414c:	bl	10d40 <memset@plt>
   14150:	ldr	r3, [sp, #36]	; 0x24
   14154:	str	r3, [r5, #4]
   14158:	ldr	r7, [sp, #44]	; 0x2c
   1415c:	ldr	r9, [r4]
   14160:	ldr	r5, [r4, #4]
   14164:	ldr	r2, [sp, #80]	; 0x50
   14168:	ldr	r3, [sp, #40]	; 0x28
   1416c:	ldr	ip, [sp, #84]	; 0x54
   14170:	orr	r7, r7, #1
   14174:	str	r2, [sp, #12]
   14178:	str	r3, [sp]
   1417c:	str	r7, [sp, #4]
   14180:	str	r6, [sp, #8]
   14184:	mov	r1, r9
   14188:	mov	r0, r5
   1418c:	str	ip, [sp, #16]
   14190:	mov	r3, fp
   14194:	mov	r2, sl
   14198:	bl	11978 <abort@plt+0xb90>
   1419c:	cmp	r9, r0
   141a0:	bhi	14200 <abort@plt+0x3418>
   141a4:	ldr	r3, [pc, #160]	; 1424c <abort@plt+0x3464>
   141a8:	add	r9, r0, #1
   141ac:	cmp	r5, r3
   141b0:	str	r9, [r4]
   141b4:	beq	141c0 <abort@plt+0x33d8>
   141b8:	mov	r0, r5
   141bc:	bl	16d94 <abort@plt+0x5fac>
   141c0:	mov	r0, r9
   141c4:	bl	16254 <abort@plt+0x546c>
   141c8:	ldr	ip, [sp, #84]	; 0x54
   141cc:	ldr	lr, [sp, #40]	; 0x28
   141d0:	mov	r3, fp
   141d4:	mov	r2, sl
   141d8:	mov	r1, r9
   141dc:	str	r0, [r4, #4]
   141e0:	ldr	r4, [sp, #80]	; 0x50
   141e4:	str	r6, [sp, #8]
   141e8:	str	r7, [sp, #4]
   141ec:	str	ip, [sp, #16]
   141f0:	str	r4, [sp, #12]
   141f4:	str	lr, [sp]
   141f8:	mov	r5, r0
   141fc:	bl	11978 <abort@plt+0xb90>
   14200:	ldr	r3, [sp, #28]
   14204:	mov	r0, r5
   14208:	str	r3, [r8]
   1420c:	add	sp, sp, #92	; 0x5c
   14210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14214:	mov	r3, #8
   14218:	str	r3, [sp]
   1421c:	add	r1, sp, #36	; 0x24
   14220:	rsb	r2, r2, #1
   14224:	mvn	r3, #-2147483648	; 0x80000000
   14228:	mov	r0, #0
   1422c:	bl	16470 <abort@plt+0x5688>
   14230:	mov	r4, r0
   14234:	ldm	r7, {r0, r1}
   14238:	str	r4, [r5]
   1423c:	stm	r4, {r0, r1}
   14240:	b	14134 <abort@plt+0x334c>
   14244:	andeq	r8, r2, ip, asr #2
   14248:	andeq	r8, r2, r0, ror #1
   1424c:	andeq	r8, r2, ip, ror r1
   14250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14254:	mov	r4, r1
   14258:	ldr	lr, [pc, #420]	; 14404 <abort@plt+0x361c>
   1425c:	mov	r6, r0
   14260:	sub	sp, sp, #84	; 0x54
   14264:	ldm	lr!, {r0, r1, r2, r3}
   14268:	add	ip, sp, #32
   1426c:	lsr	r8, r4, #5
   14270:	add	r5, sp, #40	; 0x28
   14274:	stmia	ip!, {r0, r1, r2, r3}
   14278:	and	r4, r4, #31
   1427c:	ldm	lr!, {r0, r1, r2, r3}
   14280:	ldr	r7, [pc, #384]	; 14408 <abort@plt+0x3620>
   14284:	stmia	ip!, {r0, r1, r2, r3}
   14288:	ldm	lr, {r0, r1, r2, r3}
   1428c:	stm	ip, {r0, r1, r2, r3}
   14290:	ldr	r2, [r5, r8, lsl #2]
   14294:	lsr	r3, r2, r4
   14298:	eor	r3, r3, #1
   1429c:	and	r3, r3, #1
   142a0:	eor	r4, r2, r3, lsl r4
   142a4:	str	r4, [r5, r8, lsl #2]
   142a8:	bl	10d28 <__errno_location@plt>
   142ac:	ldr	r2, [r7, #4]
   142b0:	ldr	r4, [r7]
   142b4:	cmp	r2, #0
   142b8:	mov	r9, r0
   142bc:	ldr	sl, [r0]
   142c0:	bgt	1431c <abort@plt+0x3534>
   142c4:	add	r8, r7, #8
   142c8:	cmp	r4, r8
   142cc:	str	r2, [sp, #28]
   142d0:	beq	143d4 <abort@plt+0x35ec>
   142d4:	mov	r3, #8
   142d8:	mov	r0, r4
   142dc:	str	r3, [sp]
   142e0:	rsb	r2, r2, #1
   142e4:	mvn	r3, #-2147483648	; 0x80000000
   142e8:	add	r1, sp, #28
   142ec:	bl	16470 <abort@plt+0x5688>
   142f0:	mov	r4, r0
   142f4:	str	r0, [r7]
   142f8:	ldr	r0, [r7, #4]
   142fc:	ldr	r2, [sp, #28]
   14300:	mov	r1, #0
   14304:	sub	r2, r2, r0
   14308:	add	r0, r4, r0, lsl #3
   1430c:	lsl	r2, r2, #3
   14310:	bl	10d40 <memset@plt>
   14314:	ldr	r3, [sp, #28]
   14318:	str	r3, [r7, #4]
   1431c:	ldr	r8, [sp, #36]	; 0x24
   14320:	ldr	fp, [r4]
   14324:	ldr	r7, [r4, #4]
   14328:	ldr	r2, [sp, #72]	; 0x48
   1432c:	ldr	r3, [sp, #32]
   14330:	ldr	ip, [sp, #76]	; 0x4c
   14334:	orr	r8, r8, #1
   14338:	str	r2, [sp, #12]
   1433c:	str	r3, [sp]
   14340:	str	r8, [sp, #4]
   14344:	str	r5, [sp, #8]
   14348:	mov	r1, fp
   1434c:	mov	r0, r7
   14350:	str	ip, [sp, #16]
   14354:	mvn	r3, #0
   14358:	mov	r2, r6
   1435c:	bl	11978 <abort@plt+0xb90>
   14360:	cmp	fp, r0
   14364:	bhi	143c4 <abort@plt+0x35dc>
   14368:	ldr	r3, [pc, #156]	; 1440c <abort@plt+0x3624>
   1436c:	add	fp, r0, #1
   14370:	cmp	r7, r3
   14374:	str	fp, [r4]
   14378:	beq	14384 <abort@plt+0x359c>
   1437c:	mov	r0, r7
   14380:	bl	16d94 <abort@plt+0x5fac>
   14384:	mov	r0, fp
   14388:	bl	16254 <abort@plt+0x546c>
   1438c:	ldr	lr, [sp, #76]	; 0x4c
   14390:	ldr	r3, [sp, #32]
   14394:	ldr	ip, [sp, #72]	; 0x48
   14398:	mov	r2, r6
   1439c:	mov	r1, fp
   143a0:	str	r0, [r4, #4]
   143a4:	str	r3, [sp]
   143a8:	str	r5, [sp, #8]
   143ac:	str	r8, [sp, #4]
   143b0:	str	lr, [sp, #16]
   143b4:	str	ip, [sp, #12]
   143b8:	mvn	r3, #0
   143bc:	mov	r7, r0
   143c0:	bl	11978 <abort@plt+0xb90>
   143c4:	mov	r0, r7
   143c8:	str	sl, [r9]
   143cc:	add	sp, sp, #84	; 0x54
   143d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143d4:	mov	r3, #8
   143d8:	str	r3, [sp]
   143dc:	add	r1, sp, #28
   143e0:	rsb	r2, r2, #1
   143e4:	mvn	r3, #-2147483648	; 0x80000000
   143e8:	mov	r0, #0
   143ec:	bl	16470 <abort@plt+0x5688>
   143f0:	mov	r4, r0
   143f4:	ldm	r8, {r0, r1}
   143f8:	str	r4, [r7]
   143fc:	stm	r4, {r0, r1}
   14400:	b	142f8 <abort@plt+0x3510>
   14404:	andeq	r8, r2, ip, asr #2
   14408:	andeq	r8, r2, r0, ror #1
   1440c:	andeq	r8, r2, ip, ror r1
   14410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14414:	mov	r6, r0
   14418:	ldr	lr, [pc, #404]	; 145b4 <abort@plt+0x37cc>
   1441c:	sub	sp, sp, #84	; 0x54
   14420:	add	ip, sp, #32
   14424:	ldm	lr!, {r0, r1, r2, r3}
   14428:	ldr	r5, [pc, #392]	; 145b8 <abort@plt+0x37d0>
   1442c:	stmia	ip!, {r0, r1, r2, r3}
   14430:	ldm	lr!, {r0, r1, r2, r3}
   14434:	ldr	r4, [sp, #44]	; 0x2c
   14438:	stmia	ip!, {r0, r1, r2, r3}
   1443c:	ldm	lr, {r0, r1, r2, r3}
   14440:	mvn	lr, r4
   14444:	and	lr, lr, #67108864	; 0x4000000
   14448:	eor	lr, lr, r4
   1444c:	stm	ip, {r0, r1, r2, r3}
   14450:	str	lr, [sp, #44]	; 0x2c
   14454:	bl	10d28 <__errno_location@plt>
   14458:	ldr	r2, [r5, #4]
   1445c:	ldr	r4, [r5]
   14460:	cmp	r2, #0
   14464:	mov	r8, r0
   14468:	ldr	sl, [r0]
   1446c:	bgt	144c8 <abort@plt+0x36e0>
   14470:	add	r7, r5, #8
   14474:	cmp	r4, r7
   14478:	str	r2, [sp, #28]
   1447c:	beq	14584 <abort@plt+0x379c>
   14480:	mov	r3, #8
   14484:	mov	r0, r4
   14488:	str	r3, [sp]
   1448c:	rsb	r2, r2, #1
   14490:	mvn	r3, #-2147483648	; 0x80000000
   14494:	add	r1, sp, #28
   14498:	bl	16470 <abort@plt+0x5688>
   1449c:	mov	r4, r0
   144a0:	str	r0, [r5]
   144a4:	ldr	r0, [r5, #4]
   144a8:	ldr	r2, [sp, #28]
   144ac:	mov	r1, #0
   144b0:	sub	r2, r2, r0
   144b4:	add	r0, r4, r0, lsl #3
   144b8:	lsl	r2, r2, #3
   144bc:	bl	10d40 <memset@plt>
   144c0:	ldr	r3, [sp, #28]
   144c4:	str	r3, [r5, #4]
   144c8:	ldr	r7, [sp, #36]	; 0x24
   144cc:	ldr	r9, [r4]
   144d0:	ldr	r5, [r4, #4]
   144d4:	ldr	r2, [sp, #72]	; 0x48
   144d8:	ldr	r3, [sp, #32]
   144dc:	ldr	ip, [sp, #76]	; 0x4c
   144e0:	orr	r7, r7, #1
   144e4:	add	fp, sp, #40	; 0x28
   144e8:	str	r2, [sp, #12]
   144ec:	str	r3, [sp]
   144f0:	str	r7, [sp, #4]
   144f4:	mov	r1, r9
   144f8:	mov	r0, r5
   144fc:	str	ip, [sp, #16]
   14500:	str	fp, [sp, #8]
   14504:	mvn	r3, #0
   14508:	mov	r2, r6
   1450c:	bl	11978 <abort@plt+0xb90>
   14510:	cmp	r9, r0
   14514:	bhi	14574 <abort@plt+0x378c>
   14518:	ldr	r3, [pc, #156]	; 145bc <abort@plt+0x37d4>
   1451c:	add	r9, r0, #1
   14520:	cmp	r5, r3
   14524:	str	r9, [r4]
   14528:	beq	14534 <abort@plt+0x374c>
   1452c:	mov	r0, r5
   14530:	bl	16d94 <abort@plt+0x5fac>
   14534:	mov	r0, r9
   14538:	bl	16254 <abort@plt+0x546c>
   1453c:	ldr	lr, [sp, #76]	; 0x4c
   14540:	ldr	r3, [sp, #32]
   14544:	ldr	ip, [sp, #72]	; 0x48
   14548:	mov	r2, r6
   1454c:	mov	r1, r9
   14550:	str	r0, [r4, #4]
   14554:	str	r3, [sp]
   14558:	str	fp, [sp, #8]
   1455c:	str	r7, [sp, #4]
   14560:	str	lr, [sp, #16]
   14564:	str	ip, [sp, #12]
   14568:	mvn	r3, #0
   1456c:	mov	r5, r0
   14570:	bl	11978 <abort@plt+0xb90>
   14574:	mov	r0, r5
   14578:	str	sl, [r8]
   1457c:	add	sp, sp, #84	; 0x54
   14580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14584:	mov	r3, #8
   14588:	str	r3, [sp]
   1458c:	add	r1, sp, #28
   14590:	rsb	r2, r2, #1
   14594:	mvn	r3, #-2147483648	; 0x80000000
   14598:	mov	r0, #0
   1459c:	bl	16470 <abort@plt+0x5688>
   145a0:	mov	r4, r0
   145a4:	ldm	r7, {r0, r1}
   145a8:	str	r4, [r5]
   145ac:	stm	r4, {r0, r1}
   145b0:	b	144a4 <abort@plt+0x36bc>
   145b4:	andeq	r8, r2, ip, asr #2
   145b8:	andeq	r8, r2, r0, ror #1
   145bc:	andeq	r8, r2, ip, ror r1
   145c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145c4:	mov	r9, r0
   145c8:	ldr	lr, [pc, #416]	; 14770 <abort@plt+0x3988>
   145cc:	mov	sl, r1
   145d0:	sub	sp, sp, #92	; 0x5c
   145d4:	ldm	lr!, {r0, r1, r2, r3}
   145d8:	add	ip, sp, #40	; 0x28
   145dc:	ldr	r5, [pc, #400]	; 14774 <abort@plt+0x398c>
   145e0:	stmia	ip!, {r0, r1, r2, r3}
   145e4:	ldm	lr!, {r0, r1, r2, r3}
   145e8:	ldr	r4, [sp, #52]	; 0x34
   145ec:	stmia	ip!, {r0, r1, r2, r3}
   145f0:	ldm	lr, {r0, r1, r2, r3}
   145f4:	mvn	lr, r4
   145f8:	and	lr, lr, #67108864	; 0x4000000
   145fc:	eor	lr, lr, r4
   14600:	stm	ip, {r0, r1, r2, r3}
   14604:	str	lr, [sp, #52]	; 0x34
   14608:	bl	10d28 <__errno_location@plt>
   1460c:	ldr	r2, [r5, #4]
   14610:	ldr	r4, [r5]
   14614:	cmp	r2, #0
   14618:	ldr	r3, [r0]
   1461c:	mov	r7, r0
   14620:	str	r3, [sp, #28]
   14624:	bgt	14680 <abort@plt+0x3898>
   14628:	add	r6, r5, #8
   1462c:	cmp	r4, r6
   14630:	str	r2, [sp, #36]	; 0x24
   14634:	beq	14740 <abort@plt+0x3958>
   14638:	mov	r3, #8
   1463c:	mov	r0, r4
   14640:	str	r3, [sp]
   14644:	rsb	r2, r2, #1
   14648:	mvn	r3, #-2147483648	; 0x80000000
   1464c:	add	r1, sp, #36	; 0x24
   14650:	bl	16470 <abort@plt+0x5688>
   14654:	mov	r4, r0
   14658:	str	r0, [r5]
   1465c:	ldr	r0, [r5, #4]
   14660:	ldr	r2, [sp, #36]	; 0x24
   14664:	mov	r1, #0
   14668:	sub	r2, r2, r0
   1466c:	add	r0, r4, r0, lsl #3
   14670:	lsl	r2, r2, #3
   14674:	bl	10d40 <memset@plt>
   14678:	ldr	r3, [sp, #36]	; 0x24
   1467c:	str	r3, [r5, #4]
   14680:	ldr	r6, [sp, #44]	; 0x2c
   14684:	ldr	r8, [r4]
   14688:	ldr	r5, [r4, #4]
   1468c:	ldr	r2, [sp, #80]	; 0x50
   14690:	ldr	r3, [sp, #40]	; 0x28
   14694:	ldr	ip, [sp, #84]	; 0x54
   14698:	orr	r6, r6, #1
   1469c:	add	fp, sp, #48	; 0x30
   146a0:	str	r2, [sp, #12]
   146a4:	str	r3, [sp]
   146a8:	str	r6, [sp, #4]
   146ac:	mov	r1, r8
   146b0:	mov	r0, r5
   146b4:	str	ip, [sp, #16]
   146b8:	str	fp, [sp, #8]
   146bc:	mov	r3, sl
   146c0:	mov	r2, r9
   146c4:	bl	11978 <abort@plt+0xb90>
   146c8:	cmp	r8, r0
   146cc:	bhi	1472c <abort@plt+0x3944>
   146d0:	ldr	r3, [pc, #160]	; 14778 <abort@plt+0x3990>
   146d4:	add	r8, r0, #1
   146d8:	cmp	r5, r3
   146dc:	str	r8, [r4]
   146e0:	beq	146ec <abort@plt+0x3904>
   146e4:	mov	r0, r5
   146e8:	bl	16d94 <abort@plt+0x5fac>
   146ec:	mov	r0, r8
   146f0:	bl	16254 <abort@plt+0x546c>
   146f4:	ldr	ip, [sp, #84]	; 0x54
   146f8:	ldr	lr, [sp, #40]	; 0x28
   146fc:	mov	r3, sl
   14700:	mov	r2, r9
   14704:	mov	r1, r8
   14708:	str	r0, [r4, #4]
   1470c:	ldr	r4, [sp, #80]	; 0x50
   14710:	str	fp, [sp, #8]
   14714:	str	r6, [sp, #4]
   14718:	str	ip, [sp, #16]
   1471c:	str	r4, [sp, #12]
   14720:	str	lr, [sp]
   14724:	mov	r5, r0
   14728:	bl	11978 <abort@plt+0xb90>
   1472c:	ldr	r3, [sp, #28]
   14730:	mov	r0, r5
   14734:	str	r3, [r7]
   14738:	add	sp, sp, #92	; 0x5c
   1473c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14740:	mov	r3, #8
   14744:	str	r3, [sp]
   14748:	add	r1, sp, #36	; 0x24
   1474c:	rsb	r2, r2, #1
   14750:	mvn	r3, #-2147483648	; 0x80000000
   14754:	mov	r0, #0
   14758:	bl	16470 <abort@plt+0x5688>
   1475c:	mov	r4, r0
   14760:	ldm	r6, {r0, r1}
   14764:	str	r4, [r5]
   14768:	stm	r4, {r0, r1}
   1476c:	b	1465c <abort@plt+0x3874>
   14770:	andeq	r8, r2, ip, asr #2
   14774:	andeq	r8, r2, r0, ror #1
   14778:	andeq	r8, r2, ip, ror r1
   1477c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14780:	sub	sp, sp, #180	; 0xb4
   14784:	mov	r6, r1
   14788:	mov	r4, r0
   1478c:	mov	r9, r2
   14790:	add	r0, sp, #80	; 0x50
   14794:	mov	r2, #48	; 0x30
   14798:	mov	r1, #0
   1479c:	bl	10d40 <memset@plt>
   147a0:	cmp	r6, #10
   147a4:	beq	14984 <abort@plt+0x3b9c>
   147a8:	add	r5, sp, #80	; 0x50
   147ac:	str	r6, [sp, #80]	; 0x50
   147b0:	ldm	r5!, {r0, r1, r2, r3}
   147b4:	add	ip, sp, #128	; 0x80
   147b8:	mov	r7, ip
   147bc:	add	lr, sp, #32
   147c0:	stmia	ip!, {r0, r1, r2, r3}
   147c4:	mov	r8, #67108864	; 0x4000000
   147c8:	ldm	r5!, {r0, r1, r2, r3}
   147cc:	ldr	r6, [pc, #436]	; 14988 <abort@plt+0x3ba0>
   147d0:	stmia	ip!, {r0, r1, r2, r3}
   147d4:	ldm	r5, {r0, r1, r2, r3}
   147d8:	stm	ip, {r0, r1, r2, r3}
   147dc:	ldm	r7!, {r0, r1, r2, r3}
   147e0:	stmia	lr!, {r0, r1, r2, r3}
   147e4:	ldm	r7!, {r0, r1, r2, r3}
   147e8:	str	r8, [sp, #44]	; 0x2c
   147ec:	stmia	lr!, {r0, r1, r2, r3}
   147f0:	ldm	ip, {r0, r1, r2, r3}
   147f4:	stm	lr, {r0, r1, r2, r3}
   147f8:	bl	10d28 <__errno_location@plt>
   147fc:	cmn	r4, #-2147483647	; 0x80000001
   14800:	ldr	r5, [r6]
   14804:	mov	r7, r0
   14808:	movne	r0, #0
   1480c:	moveq	r0, #1
   14810:	ldr	r3, [r7]
   14814:	orrs	r0, r0, r4, lsr #31
   14818:	str	r3, [sp, #24]
   1481c:	bne	14984 <abort@plt+0x3b9c>
   14820:	ldr	r2, [r6, #4]
   14824:	cmp	r4, r2
   14828:	blt	14888 <abort@plt+0x3aa0>
   1482c:	add	r8, r6, #8
   14830:	cmp	r5, r8
   14834:	str	r2, [sp, #80]	; 0x50
   14838:	beq	14954 <abort@plt+0x3b6c>
   1483c:	mov	r3, #8
   14840:	sub	r2, r4, r2
   14844:	mov	r0, r5
   14848:	str	r3, [sp]
   1484c:	add	r2, r2, #1
   14850:	add	r1, sp, #80	; 0x50
   14854:	mvn	r3, #-2147483648	; 0x80000000
   14858:	bl	16470 <abort@plt+0x5688>
   1485c:	mov	r5, r0
   14860:	str	r0, [r6]
   14864:	ldr	r0, [r6, #4]
   14868:	ldr	r2, [sp, #80]	; 0x50
   1486c:	mov	r1, #0
   14870:	sub	r2, r2, r0
   14874:	add	r0, r5, r0, lsl #3
   14878:	lsl	r2, r2, #3
   1487c:	bl	10d40 <memset@plt>
   14880:	ldr	r3, [sp, #80]	; 0x50
   14884:	str	r3, [r6, #4]
   14888:	add	fp, r5, r4, lsl #3
   1488c:	ldr	r1, [sp, #36]	; 0x24
   14890:	ldr	r8, [r5, r4, lsl #3]
   14894:	ldr	r6, [fp, #4]
   14898:	ldr	r2, [sp, #72]	; 0x48
   1489c:	ldr	r3, [sp, #32]
   148a0:	ldr	ip, [sp, #76]	; 0x4c
   148a4:	orr	r1, r1, #1
   148a8:	add	sl, sp, #40	; 0x28
   148ac:	str	r1, [sp, #28]
   148b0:	str	r1, [sp, #4]
   148b4:	str	r2, [sp, #12]
   148b8:	str	r3, [sp]
   148bc:	mov	r0, r6
   148c0:	mov	r1, r8
   148c4:	str	ip, [sp, #16]
   148c8:	str	sl, [sp, #8]
   148cc:	mvn	r3, #0
   148d0:	mov	r2, r9
   148d4:	bl	11978 <abort@plt+0xb90>
   148d8:	cmp	r8, r0
   148dc:	bhi	14940 <abort@plt+0x3b58>
   148e0:	ldr	r3, [pc, #164]	; 1498c <abort@plt+0x3ba4>
   148e4:	add	r8, r0, #1
   148e8:	cmp	r6, r3
   148ec:	str	r8, [r5, r4, lsl #3]
   148f0:	beq	148fc <abort@plt+0x3b14>
   148f4:	mov	r0, r6
   148f8:	bl	16d94 <abort@plt+0x5fac>
   148fc:	mov	r0, r8
   14900:	bl	16254 <abort@plt+0x546c>
   14904:	ldr	lr, [sp, #76]	; 0x4c
   14908:	ldr	r3, [sp, #32]
   1490c:	ldr	ip, [sp, #72]	; 0x48
   14910:	ldr	r4, [sp, #28]
   14914:	mov	r2, r9
   14918:	mov	r1, r8
   1491c:	str	r0, [fp, #4]
   14920:	str	r3, [sp]
   14924:	str	sl, [sp, #8]
   14928:	str	r4, [sp, #4]
   1492c:	str	lr, [sp, #16]
   14930:	str	ip, [sp, #12]
   14934:	mvn	r3, #0
   14938:	mov	r6, r0
   1493c:	bl	11978 <abort@plt+0xb90>
   14940:	ldr	r3, [sp, #24]
   14944:	mov	r0, r6
   14948:	str	r3, [r7]
   1494c:	add	sp, sp, #180	; 0xb4
   14950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14954:	mov	r3, #8
   14958:	sub	r2, r4, r2
   1495c:	add	r1, sp, #80	; 0x50
   14960:	str	r3, [sp]
   14964:	add	r2, r2, #1
   14968:	mvn	r3, #-2147483648	; 0x80000000
   1496c:	bl	16470 <abort@plt+0x5688>
   14970:	mov	r5, r0
   14974:	ldm	r8, {r0, r1}
   14978:	str	r5, [r6]
   1497c:	stm	r5, {r0, r1}
   14980:	b	14864 <abort@plt+0x3a7c>
   14984:	bl	10de8 <abort@plt>
   14988:	andeq	r8, r2, r0, ror #1
   1498c:	andeq	r8, r2, ip, ror r1
   14990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14994:	mov	r7, r1
   14998:	ldr	lr, [pc, #492]	; 14b8c <abort@plt+0x3da4>
   1499c:	mov	r8, r2
   149a0:	mov	r4, r0
   149a4:	mov	fp, r3
   149a8:	ldm	lr!, {r0, r1, r2, r3}
   149ac:	sub	sp, sp, #100	; 0x64
   149b0:	add	ip, sp, #48	; 0x30
   149b4:	mov	sl, #10
   149b8:	stmia	ip!, {r0, r1, r2, r3}
   149bc:	cmp	r8, #0
   149c0:	cmpne	r7, #0
   149c4:	ldm	lr!, {r0, r1, r2, r3}
   149c8:	str	sl, [sp, #48]	; 0x30
   149cc:	stmia	ip!, {r0, r1, r2, r3}
   149d0:	ldm	lr, {r0, r1, r2, r3}
   149d4:	stm	ip, {r0, r1, r2, r3}
   149d8:	beq	14b88 <abort@plt+0x3da0>
   149dc:	str	r7, [sp, #88]	; 0x58
   149e0:	str	r8, [sp, #92]	; 0x5c
   149e4:	bl	10d28 <__errno_location@plt>
   149e8:	ldr	r6, [pc, #416]	; 14b90 <abort@plt+0x3da8>
   149ec:	cmn	r4, #-2147483647	; 0x80000001
   149f0:	ldr	r5, [r6]
   149f4:	mov	r9, r0
   149f8:	movne	r0, #0
   149fc:	moveq	r0, #1
   14a00:	ldr	r3, [r9]
   14a04:	orrs	r0, r0, r4, lsr #31
   14a08:	str	r3, [sp, #28]
   14a0c:	bne	14b88 <abort@plt+0x3da0>
   14a10:	ldr	r2, [r6, #4]
   14a14:	cmp	r4, r2
   14a18:	movlt	r3, sl
   14a1c:	blt	14a88 <abort@plt+0x3ca0>
   14a20:	add	r7, r6, #8
   14a24:	cmp	r5, r7
   14a28:	str	r2, [sp, #44]	; 0x2c
   14a2c:	beq	14b58 <abort@plt+0x3d70>
   14a30:	mov	r3, #8
   14a34:	sub	r2, r4, r2
   14a38:	mov	r0, r5
   14a3c:	str	r3, [sp]
   14a40:	add	r2, r2, #1
   14a44:	mvn	r3, #-2147483648	; 0x80000000
   14a48:	add	r1, sp, #44	; 0x2c
   14a4c:	bl	16470 <abort@plt+0x5688>
   14a50:	mov	r5, r0
   14a54:	str	r0, [r6]
   14a58:	ldr	r0, [r6, #4]
   14a5c:	ldr	r2, [sp, #44]	; 0x2c
   14a60:	mov	r1, #0
   14a64:	sub	r2, r2, r0
   14a68:	add	r0, r5, r0, lsl #3
   14a6c:	lsl	r2, r2, #3
   14a70:	bl	10d40 <memset@plt>
   14a74:	ldr	r3, [sp, #48]	; 0x30
   14a78:	ldr	r7, [sp, #88]	; 0x58
   14a7c:	ldr	r8, [sp, #92]	; 0x5c
   14a80:	ldr	r2, [sp, #44]	; 0x2c
   14a84:	str	r2, [r6, #4]
   14a88:	add	r2, r5, r4, lsl #3
   14a8c:	mov	r1, r2
   14a90:	str	r2, [sp, #32]
   14a94:	ldr	r2, [sp, #52]	; 0x34
   14a98:	ldr	r6, [r1, #4]
   14a9c:	ldr	sl, [r5, r4, lsl #3]
   14aa0:	orr	r2, r2, #1
   14aa4:	str	r3, [sp]
   14aa8:	add	r3, sp, #56	; 0x38
   14aac:	str	r2, [sp, #36]	; 0x24
   14ab0:	str	r2, [sp, #4]
   14ab4:	str	r3, [sp, #8]
   14ab8:	mov	r0, r6
   14abc:	str	r8, [sp, #16]
   14ac0:	str	r7, [sp, #12]
   14ac4:	mov	r1, sl
   14ac8:	mvn	r3, #0
   14acc:	mov	r2, fp
   14ad0:	bl	11978 <abort@plt+0xb90>
   14ad4:	cmp	sl, r0
   14ad8:	bhi	14b44 <abort@plt+0x3d5c>
   14adc:	ldr	r3, [pc, #176]	; 14b94 <abort@plt+0x3dac>
   14ae0:	add	r7, r0, #1
   14ae4:	cmp	r6, r3
   14ae8:	str	r7, [r5, r4, lsl #3]
   14aec:	beq	14af8 <abort@plt+0x3d10>
   14af0:	mov	r0, r6
   14af4:	bl	16d94 <abort@plt+0x5fac>
   14af8:	mov	r0, r7
   14afc:	bl	16254 <abort@plt+0x546c>
   14b00:	ldr	r3, [sp, #32]
   14b04:	ldr	lr, [sp, #92]	; 0x5c
   14b08:	ldr	ip, [sp, #88]	; 0x58
   14b0c:	ldr	r4, [sp, #36]	; 0x24
   14b10:	mov	r2, fp
   14b14:	mov	r1, r7
   14b18:	str	r0, [r3, #4]
   14b1c:	add	r3, sp, #56	; 0x38
   14b20:	str	r3, [sp, #8]
   14b24:	ldr	r3, [sp, #48]	; 0x30
   14b28:	str	r4, [sp, #4]
   14b2c:	str	r3, [sp]
   14b30:	str	lr, [sp, #16]
   14b34:	str	ip, [sp, #12]
   14b38:	mvn	r3, #0
   14b3c:	mov	r6, r0
   14b40:	bl	11978 <abort@plt+0xb90>
   14b44:	ldr	r3, [sp, #28]
   14b48:	mov	r0, r6
   14b4c:	str	r3, [r9]
   14b50:	add	sp, sp, #100	; 0x64
   14b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b58:	mov	r3, #8
   14b5c:	sub	r2, r4, r2
   14b60:	str	r3, [sp]
   14b64:	add	r1, sp, #44	; 0x2c
   14b68:	add	r2, r2, #1
   14b6c:	mvn	r3, #-2147483648	; 0x80000000
   14b70:	bl	16470 <abort@plt+0x5688>
   14b74:	mov	r5, r0
   14b78:	ldm	r7, {r0, r1}
   14b7c:	str	r5, [r6]
   14b80:	stm	r5, {r0, r1}
   14b84:	b	14a58 <abort@plt+0x3c70>
   14b88:	bl	10de8 <abort@plt>
   14b8c:	andeq	r8, r2, ip, asr #2
   14b90:	andeq	r8, r2, r0, ror #1
   14b94:	andeq	r8, r2, ip, ror r1
   14b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b9c:	mov	r7, r1
   14ba0:	ldr	lr, [pc, #492]	; 14d94 <abort@plt+0x3fac>
   14ba4:	mov	r8, r2
   14ba8:	mov	r4, r0
   14bac:	mov	fp, r3
   14bb0:	ldm	lr!, {r0, r1, r2, r3}
   14bb4:	sub	sp, sp, #100	; 0x64
   14bb8:	add	ip, sp, #48	; 0x30
   14bbc:	mov	sl, #10
   14bc0:	stmia	ip!, {r0, r1, r2, r3}
   14bc4:	cmp	r8, #0
   14bc8:	cmpne	r7, #0
   14bcc:	ldm	lr!, {r0, r1, r2, r3}
   14bd0:	str	sl, [sp, #48]	; 0x30
   14bd4:	stmia	ip!, {r0, r1, r2, r3}
   14bd8:	ldm	lr, {r0, r1, r2, r3}
   14bdc:	stm	ip, {r0, r1, r2, r3}
   14be0:	beq	14d90 <abort@plt+0x3fa8>
   14be4:	str	r7, [sp, #88]	; 0x58
   14be8:	str	r8, [sp, #92]	; 0x5c
   14bec:	bl	10d28 <__errno_location@plt>
   14bf0:	ldr	r6, [pc, #416]	; 14d98 <abort@plt+0x3fb0>
   14bf4:	cmn	r4, #-2147483647	; 0x80000001
   14bf8:	ldr	r5, [r6]
   14bfc:	mov	r9, r0
   14c00:	movne	r0, #0
   14c04:	moveq	r0, #1
   14c08:	ldr	r3, [r9]
   14c0c:	orrs	r0, r0, r4, lsr #31
   14c10:	str	r3, [sp, #28]
   14c14:	bne	14d90 <abort@plt+0x3fa8>
   14c18:	ldr	r2, [r6, #4]
   14c1c:	cmp	r4, r2
   14c20:	movlt	r3, sl
   14c24:	blt	14c90 <abort@plt+0x3ea8>
   14c28:	add	r7, r6, #8
   14c2c:	cmp	r5, r7
   14c30:	str	r2, [sp, #44]	; 0x2c
   14c34:	beq	14d60 <abort@plt+0x3f78>
   14c38:	mov	r3, #8
   14c3c:	sub	r2, r4, r2
   14c40:	mov	r0, r5
   14c44:	str	r3, [sp]
   14c48:	add	r2, r2, #1
   14c4c:	mvn	r3, #-2147483648	; 0x80000000
   14c50:	add	r1, sp, #44	; 0x2c
   14c54:	bl	16470 <abort@plt+0x5688>
   14c58:	mov	r5, r0
   14c5c:	str	r0, [r6]
   14c60:	ldr	r0, [r6, #4]
   14c64:	ldr	r2, [sp, #44]	; 0x2c
   14c68:	mov	r1, #0
   14c6c:	sub	r2, r2, r0
   14c70:	add	r0, r5, r0, lsl #3
   14c74:	lsl	r2, r2, #3
   14c78:	bl	10d40 <memset@plt>
   14c7c:	ldr	r3, [sp, #48]	; 0x30
   14c80:	ldr	r7, [sp, #88]	; 0x58
   14c84:	ldr	r8, [sp, #92]	; 0x5c
   14c88:	ldr	r2, [sp, #44]	; 0x2c
   14c8c:	str	r2, [r6, #4]
   14c90:	add	r2, r5, r4, lsl #3
   14c94:	mov	r1, r2
   14c98:	str	r2, [sp, #32]
   14c9c:	ldr	r2, [sp, #52]	; 0x34
   14ca0:	ldr	r6, [r1, #4]
   14ca4:	ldr	sl, [r5, r4, lsl #3]
   14ca8:	orr	r2, r2, #1
   14cac:	str	r3, [sp]
   14cb0:	add	r3, sp, #56	; 0x38
   14cb4:	str	r2, [sp, #36]	; 0x24
   14cb8:	str	r2, [sp, #4]
   14cbc:	str	r3, [sp, #8]
   14cc0:	mov	r0, r6
   14cc4:	str	r8, [sp, #16]
   14cc8:	str	r7, [sp, #12]
   14ccc:	mov	r1, sl
   14cd0:	ldr	r3, [sp, #136]	; 0x88
   14cd4:	mov	r2, fp
   14cd8:	bl	11978 <abort@plt+0xb90>
   14cdc:	cmp	sl, r0
   14ce0:	bhi	14d4c <abort@plt+0x3f64>
   14ce4:	ldr	r3, [pc, #176]	; 14d9c <abort@plt+0x3fb4>
   14ce8:	add	r7, r0, #1
   14cec:	cmp	r6, r3
   14cf0:	str	r7, [r5, r4, lsl #3]
   14cf4:	beq	14d00 <abort@plt+0x3f18>
   14cf8:	mov	r0, r6
   14cfc:	bl	16d94 <abort@plt+0x5fac>
   14d00:	mov	r0, r7
   14d04:	bl	16254 <abort@plt+0x546c>
   14d08:	ldr	r3, [sp, #32]
   14d0c:	ldr	lr, [sp, #92]	; 0x5c
   14d10:	ldr	ip, [sp, #88]	; 0x58
   14d14:	ldr	r4, [sp, #36]	; 0x24
   14d18:	mov	r2, fp
   14d1c:	mov	r1, r7
   14d20:	str	r0, [r3, #4]
   14d24:	add	r3, sp, #56	; 0x38
   14d28:	str	r3, [sp, #8]
   14d2c:	ldr	r3, [sp, #48]	; 0x30
   14d30:	str	r4, [sp, #4]
   14d34:	str	r3, [sp]
   14d38:	str	lr, [sp, #16]
   14d3c:	str	ip, [sp, #12]
   14d40:	ldr	r3, [sp, #136]	; 0x88
   14d44:	mov	r6, r0
   14d48:	bl	11978 <abort@plt+0xb90>
   14d4c:	ldr	r3, [sp, #28]
   14d50:	mov	r0, r6
   14d54:	str	r3, [r9]
   14d58:	add	sp, sp, #100	; 0x64
   14d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d60:	mov	r3, #8
   14d64:	sub	r2, r4, r2
   14d68:	str	r3, [sp]
   14d6c:	add	r1, sp, #44	; 0x2c
   14d70:	add	r2, r2, #1
   14d74:	mvn	r3, #-2147483648	; 0x80000000
   14d78:	bl	16470 <abort@plt+0x5688>
   14d7c:	mov	r5, r0
   14d80:	ldm	r7, {r0, r1}
   14d84:	str	r5, [r6]
   14d88:	stm	r5, {r0, r1}
   14d8c:	b	14c60 <abort@plt+0x3e78>
   14d90:	bl	10de8 <abort@plt>
   14d94:	andeq	r8, r2, ip, asr #2
   14d98:	andeq	r8, r2, r0, ror #1
   14d9c:	andeq	r8, r2, ip, ror r1
   14da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14da4:	mov	r5, r0
   14da8:	ldr	lr, [pc, #452]	; 14f74 <abort@plt+0x418c>
   14dac:	mov	r6, r1
   14db0:	mov	sl, r2
   14db4:	ldm	lr!, {r0, r1, r2, r3}
   14db8:	sub	sp, sp, #92	; 0x5c
   14dbc:	add	ip, sp, #40	; 0x28
   14dc0:	cmp	r6, #0
   14dc4:	cmpne	r5, #0
   14dc8:	stmia	ip!, {r0, r1, r2, r3}
   14dcc:	mov	r9, #10
   14dd0:	ldm	lr!, {r0, r1, r2, r3}
   14dd4:	moveq	fp, #1
   14dd8:	movne	fp, #0
   14ddc:	str	r9, [sp, #40]	; 0x28
   14de0:	stmia	ip!, {r0, r1, r2, r3}
   14de4:	ldm	lr, {r0, r1, r2, r3}
   14de8:	stm	ip, {r0, r1, r2, r3}
   14dec:	beq	14f70 <abort@plt+0x4188>
   14df0:	str	r5, [sp, #80]	; 0x50
   14df4:	str	r6, [sp, #84]	; 0x54
   14df8:	bl	10d28 <__errno_location@plt>
   14dfc:	ldr	r7, [pc, #372]	; 14f78 <abort@plt+0x4190>
   14e00:	ldr	r2, [r7, #4]
   14e04:	ldr	r4, [r7]
   14e08:	cmp	r2, #0
   14e0c:	ldr	r3, [r0]
   14e10:	mov	r8, r0
   14e14:	str	r3, [sp, #24]
   14e18:	movgt	r3, r9
   14e1c:	bgt	14e84 <abort@plt+0x409c>
   14e20:	add	r5, r7, #8
   14e24:	cmp	r4, r5
   14e28:	str	r2, [sp, #36]	; 0x24
   14e2c:	beq	14f40 <abort@plt+0x4158>
   14e30:	mov	r3, #8
   14e34:	mov	r0, r4
   14e38:	str	r3, [sp]
   14e3c:	rsb	r2, r2, #1
   14e40:	mvn	r3, #-2147483648	; 0x80000000
   14e44:	add	r1, sp, #36	; 0x24
   14e48:	bl	16470 <abort@plt+0x5688>
   14e4c:	mov	r4, r0
   14e50:	str	r0, [r7]
   14e54:	ldr	r0, [r7, #4]
   14e58:	ldr	r2, [sp, #36]	; 0x24
   14e5c:	mov	r1, #0
   14e60:	sub	r2, r2, r0
   14e64:	add	r0, r4, r0, lsl #3
   14e68:	lsl	r2, r2, #3
   14e6c:	bl	10d40 <memset@plt>
   14e70:	ldr	r3, [sp, #40]	; 0x28
   14e74:	ldr	r5, [sp, #80]	; 0x50
   14e78:	ldr	r6, [sp, #84]	; 0x54
   14e7c:	ldr	r2, [sp, #36]	; 0x24
   14e80:	str	r2, [r7, #4]
   14e84:	ldr	r2, [sp, #44]	; 0x2c
   14e88:	ldr	r9, [r4]
   14e8c:	ldr	r7, [r4, #4]
   14e90:	orr	r2, r2, #1
   14e94:	add	fp, sp, #48	; 0x30
   14e98:	str	r2, [sp, #28]
   14e9c:	str	r2, [sp, #4]
   14ea0:	str	r3, [sp]
   14ea4:	str	r6, [sp, #16]
   14ea8:	str	r5, [sp, #12]
   14eac:	mov	r1, r9
   14eb0:	mov	r0, r7
   14eb4:	str	fp, [sp, #8]
   14eb8:	mvn	r3, #0
   14ebc:	mov	r2, sl
   14ec0:	bl	11978 <abort@plt+0xb90>
   14ec4:	cmp	r9, r0
   14ec8:	bhi	14f2c <abort@plt+0x4144>
   14ecc:	ldr	r3, [pc, #168]	; 14f7c <abort@plt+0x4194>
   14ed0:	add	r5, r0, #1
   14ed4:	cmp	r7, r3
   14ed8:	str	r5, [r4]
   14edc:	beq	14ee8 <abort@plt+0x4100>
   14ee0:	mov	r0, r7
   14ee4:	bl	16d94 <abort@plt+0x5fac>
   14ee8:	mov	r0, r5
   14eec:	bl	16254 <abort@plt+0x546c>
   14ef0:	ldr	lr, [sp, #84]	; 0x54
   14ef4:	ldr	r3, [sp, #40]	; 0x28
   14ef8:	ldr	ip, [sp, #80]	; 0x50
   14efc:	mov	r2, sl
   14f00:	mov	r1, r5
   14f04:	str	r0, [r4, #4]
   14f08:	ldr	r4, [sp, #28]
   14f0c:	str	r3, [sp]
   14f10:	str	fp, [sp, #8]
   14f14:	str	r4, [sp, #4]
   14f18:	str	lr, [sp, #16]
   14f1c:	str	ip, [sp, #12]
   14f20:	mvn	r3, #0
   14f24:	mov	r7, r0
   14f28:	bl	11978 <abort@plt+0xb90>
   14f2c:	ldr	r3, [sp, #24]
   14f30:	mov	r0, r7
   14f34:	str	r3, [r8]
   14f38:	add	sp, sp, #92	; 0x5c
   14f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f40:	mov	r3, #8
   14f44:	str	r3, [sp]
   14f48:	add	r1, sp, #36	; 0x24
   14f4c:	rsb	r2, r2, #1
   14f50:	mov	r0, fp
   14f54:	mvn	r3, #-2147483648	; 0x80000000
   14f58:	bl	16470 <abort@plt+0x5688>
   14f5c:	mov	r4, r0
   14f60:	ldm	r5, {r0, r1}
   14f64:	str	r4, [r7]
   14f68:	stm	r4, {r0, r1}
   14f6c:	b	14e54 <abort@plt+0x406c>
   14f70:	bl	10de8 <abort@plt>
   14f74:	andeq	r8, r2, ip, asr #2
   14f78:	andeq	r8, r2, r0, ror #1
   14f7c:	andeq	r8, r2, ip, ror r1
   14f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f84:	mov	r5, r0
   14f88:	ldr	lr, [pc, #464]	; 15160 <abort@plt+0x4378>
   14f8c:	mov	r6, r1
   14f90:	mov	sl, r2
   14f94:	mov	fp, r3
   14f98:	ldm	lr!, {r0, r1, r2, r3}
   14f9c:	sub	sp, sp, #92	; 0x5c
   14fa0:	add	ip, sp, #40	; 0x28
   14fa4:	cmp	r6, #0
   14fa8:	cmpne	r5, #0
   14fac:	stmia	ip!, {r0, r1, r2, r3}
   14fb0:	moveq	r4, #1
   14fb4:	ldm	lr!, {r0, r1, r2, r3}
   14fb8:	movne	r4, #0
   14fbc:	mov	r9, #10
   14fc0:	str	r4, [sp, #28]
   14fc4:	stmia	ip!, {r0, r1, r2, r3}
   14fc8:	ldm	lr, {r0, r1, r2, r3}
   14fcc:	str	r9, [sp, #40]	; 0x28
   14fd0:	stm	ip, {r0, r1, r2, r3}
   14fd4:	beq	1515c <abort@plt+0x4374>
   14fd8:	str	r5, [sp, #80]	; 0x50
   14fdc:	str	r6, [sp, #84]	; 0x54
   14fe0:	bl	10d28 <__errno_location@plt>
   14fe4:	ldr	r7, [pc, #376]	; 15164 <abort@plt+0x437c>
   14fe8:	ldr	r2, [r7, #4]
   14fec:	ldr	r4, [r7]
   14ff0:	cmp	r2, #0
   14ff4:	ldr	r3, [r0]
   14ff8:	mov	r8, r0
   14ffc:	str	r3, [sp, #24]
   15000:	movgt	r3, r9
   15004:	bgt	1506c <abort@plt+0x4284>
   15008:	add	r5, r7, #8
   1500c:	cmp	r4, r5
   15010:	str	r2, [sp, #36]	; 0x24
   15014:	beq	1512c <abort@plt+0x4344>
   15018:	mov	r3, #8
   1501c:	mov	r0, r4
   15020:	str	r3, [sp]
   15024:	rsb	r2, r2, #1
   15028:	mvn	r3, #-2147483648	; 0x80000000
   1502c:	add	r1, sp, #36	; 0x24
   15030:	bl	16470 <abort@plt+0x5688>
   15034:	mov	r4, r0
   15038:	str	r0, [r7]
   1503c:	ldr	r0, [r7, #4]
   15040:	ldr	r2, [sp, #36]	; 0x24
   15044:	mov	r1, #0
   15048:	sub	r2, r2, r0
   1504c:	add	r0, r4, r0, lsl #3
   15050:	lsl	r2, r2, #3
   15054:	bl	10d40 <memset@plt>
   15058:	ldr	r3, [sp, #40]	; 0x28
   1505c:	ldr	r5, [sp, #80]	; 0x50
   15060:	ldr	r6, [sp, #84]	; 0x54
   15064:	ldr	r2, [sp, #36]	; 0x24
   15068:	str	r2, [r7, #4]
   1506c:	ldr	r2, [sp, #44]	; 0x2c
   15070:	ldr	r9, [r4]
   15074:	ldr	r7, [r4, #4]
   15078:	orr	r2, r2, #1
   1507c:	str	r3, [sp]
   15080:	add	r3, sp, #48	; 0x30
   15084:	str	r2, [sp, #28]
   15088:	str	r2, [sp, #4]
   1508c:	str	r3, [sp, #8]
   15090:	str	r6, [sp, #16]
   15094:	str	r5, [sp, #12]
   15098:	mov	r1, r9
   1509c:	mov	r0, r7
   150a0:	mov	r3, fp
   150a4:	mov	r2, sl
   150a8:	bl	11978 <abort@plt+0xb90>
   150ac:	cmp	r9, r0
   150b0:	bhi	15118 <abort@plt+0x4330>
   150b4:	ldr	r3, [pc, #172]	; 15168 <abort@plt+0x4380>
   150b8:	add	r5, r0, #1
   150bc:	cmp	r7, r3
   150c0:	str	r5, [r4]
   150c4:	beq	150d0 <abort@plt+0x42e8>
   150c8:	mov	r0, r7
   150cc:	bl	16d94 <abort@plt+0x5fac>
   150d0:	mov	r0, r5
   150d4:	bl	16254 <abort@plt+0x546c>
   150d8:	add	lr, sp, #48	; 0x30
   150dc:	ldr	ip, [sp, #84]	; 0x54
   150e0:	mov	r1, r5
   150e4:	ldr	r5, [sp, #28]
   150e8:	mov	r3, fp
   150ec:	mov	r2, sl
   150f0:	str	r0, [r4, #4]
   150f4:	ldr	r4, [sp, #80]	; 0x50
   150f8:	str	lr, [sp, #8]
   150fc:	ldr	lr, [sp, #40]	; 0x28
   15100:	str	r5, [sp, #4]
   15104:	str	ip, [sp, #16]
   15108:	str	r4, [sp, #12]
   1510c:	str	lr, [sp]
   15110:	mov	r7, r0
   15114:	bl	11978 <abort@plt+0xb90>
   15118:	ldr	r3, [sp, #24]
   1511c:	mov	r0, r7
   15120:	str	r3, [r8]
   15124:	add	sp, sp, #92	; 0x5c
   15128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1512c:	mov	r3, #8
   15130:	str	r3, [sp]
   15134:	add	r1, sp, #36	; 0x24
   15138:	rsb	r2, r2, #1
   1513c:	ldr	r0, [sp, #28]
   15140:	mvn	r3, #-2147483648	; 0x80000000
   15144:	bl	16470 <abort@plt+0x5688>
   15148:	mov	r4, r0
   1514c:	ldm	r5, {r0, r1}
   15150:	str	r4, [r7]
   15154:	stm	r4, {r0, r1}
   15158:	b	1503c <abort@plt+0x4254>
   1515c:	bl	10de8 <abort@plt>
   15160:	andeq	r8, r2, ip, asr #2
   15164:	andeq	r8, r2, r0, ror #1
   15168:	andeq	r8, r2, ip, ror r1
   1516c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15170:	sub	sp, sp, #52	; 0x34
   15174:	mov	r5, r0
   15178:	mov	sl, r1
   1517c:	mov	fp, r2
   15180:	bl	10d28 <__errno_location@plt>
   15184:	ldr	r4, [pc, #404]	; 15320 <abort@plt+0x4538>
   15188:	cmn	r5, #-2147483647	; 0x80000001
   1518c:	ldr	r6, [r4]
   15190:	mov	r8, r0
   15194:	movne	r0, #0
   15198:	moveq	r0, #1
   1519c:	ldr	r3, [r8]
   151a0:	orrs	r0, r0, r5, lsr #31
   151a4:	str	r3, [sp, #28]
   151a8:	bne	1531c <abort@plt+0x4534>
   151ac:	ldr	r2, [r4, #4]
   151b0:	cmp	r5, r2
   151b4:	blt	15214 <abort@plt+0x442c>
   151b8:	add	r7, r4, #8
   151bc:	cmp	r6, r7
   151c0:	str	r2, [sp, #44]	; 0x2c
   151c4:	beq	152ec <abort@plt+0x4504>
   151c8:	mov	r3, #8
   151cc:	sub	r2, r5, r2
   151d0:	mov	r0, r6
   151d4:	str	r3, [sp]
   151d8:	add	r2, r2, #1
   151dc:	mvn	r3, #-2147483648	; 0x80000000
   151e0:	add	r1, sp, #44	; 0x2c
   151e4:	bl	16470 <abort@plt+0x5688>
   151e8:	mov	r6, r0
   151ec:	str	r0, [r4]
   151f0:	ldr	r0, [r4, #4]
   151f4:	ldr	r2, [sp, #44]	; 0x2c
   151f8:	mov	r1, #0
   151fc:	sub	r2, r2, r0
   15200:	add	r0, r6, r0, lsl #3
   15204:	lsl	r2, r2, #3
   15208:	bl	10d40 <memset@plt>
   1520c:	ldr	r3, [sp, #44]	; 0x2c
   15210:	str	r3, [r4, #4]
   15214:	ldr	r2, [r4, #56]	; 0x38
   15218:	add	r3, r6, r5, lsl #3
   1521c:	ldr	r1, [r4, #20]
   15220:	ldr	r7, [r3, #4]
   15224:	ldr	r9, [r6, r5, lsl #3]
   15228:	ldr	ip, [r4, #60]	; 0x3c
   1522c:	str	r3, [sp, #32]
   15230:	ldr	r3, [r4, #16]
   15234:	str	r2, [sp, #12]
   15238:	ldr	r2, [pc, #228]	; 15324 <abort@plt+0x453c>
   1523c:	orr	r1, r1, #1
   15240:	str	r1, [sp, #36]	; 0x24
   15244:	str	r1, [sp, #4]
   15248:	str	r2, [sp, #8]
   1524c:	str	r3, [sp]
   15250:	mov	r0, r7
   15254:	mov	r1, r9
   15258:	str	ip, [sp, #16]
   1525c:	mov	r3, fp
   15260:	mov	r2, sl
   15264:	bl	11978 <abort@plt+0xb90>
   15268:	cmp	r9, r0
   1526c:	bhi	152d8 <abort@plt+0x44f0>
   15270:	ldr	r3, [pc, #176]	; 15328 <abort@plt+0x4540>
   15274:	add	r9, r0, #1
   15278:	cmp	r7, r3
   1527c:	str	r9, [r6, r5, lsl #3]
   15280:	beq	1528c <abort@plt+0x44a4>
   15284:	mov	r0, r7
   15288:	bl	16d94 <abort@plt+0x5fac>
   1528c:	mov	r0, r9
   15290:	bl	16254 <abort@plt+0x546c>
   15294:	ldr	ip, [sp, #32]
   15298:	ldr	lr, [r4, #60]	; 0x3c
   1529c:	ldr	r5, [r4, #56]	; 0x38
   152a0:	mov	r3, fp
   152a4:	mov	r2, sl
   152a8:	mov	r1, r9
   152ac:	str	r0, [ip, #4]
   152b0:	ldr	ip, [r4, #16]
   152b4:	ldr	r4, [pc, #104]	; 15324 <abort@plt+0x453c>
   152b8:	str	lr, [sp, #16]
   152bc:	str	r4, [sp, #8]
   152c0:	ldr	r4, [sp, #36]	; 0x24
   152c4:	str	r5, [sp, #12]
   152c8:	str	r4, [sp, #4]
   152cc:	str	ip, [sp]
   152d0:	mov	r7, r0
   152d4:	bl	11978 <abort@plt+0xb90>
   152d8:	ldr	r3, [sp, #28]
   152dc:	mov	r0, r7
   152e0:	str	r3, [r8]
   152e4:	add	sp, sp, #52	; 0x34
   152e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152ec:	mov	r3, #8
   152f0:	sub	r2, r5, r2
   152f4:	str	r3, [sp]
   152f8:	add	r1, sp, #44	; 0x2c
   152fc:	add	r2, r2, #1
   15300:	mvn	r3, #-2147483648	; 0x80000000
   15304:	bl	16470 <abort@plt+0x5688>
   15308:	mov	r6, r0
   1530c:	ldm	r7, {r0, r1}
   15310:	str	r6, [r4]
   15314:	stm	r6, {r0, r1}
   15318:	b	151f0 <abort@plt+0x4408>
   1531c:	bl	10de8 <abort@plt>
   15320:	andeq	r8, r2, r0, ror #1
   15324:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15328:	andeq	r8, r2, ip, ror r1
   1532c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15330:	sub	sp, sp, #44	; 0x2c
   15334:	mov	r9, r0
   15338:	mov	sl, r1
   1533c:	bl	10d28 <__errno_location@plt>
   15340:	ldr	r4, [pc, #360]	; 154b0 <abort@plt+0x46c8>
   15344:	ldr	r2, [r4, #4]
   15348:	ldr	r5, [r4]
   1534c:	cmp	r2, #0
   15350:	ldr	r3, [r0]
   15354:	mov	r7, r0
   15358:	str	r3, [sp, #24]
   1535c:	bgt	153b8 <abort@plt+0x45d0>
   15360:	add	r6, r4, #8
   15364:	cmp	r5, r6
   15368:	str	r2, [sp, #36]	; 0x24
   1536c:	beq	15480 <abort@plt+0x4698>
   15370:	mov	r3, #8
   15374:	mov	r0, r5
   15378:	str	r3, [sp]
   1537c:	rsb	r2, r2, #1
   15380:	mvn	r3, #-2147483648	; 0x80000000
   15384:	add	r1, sp, #36	; 0x24
   15388:	bl	16470 <abort@plt+0x5688>
   1538c:	mov	r5, r0
   15390:	str	r0, [r4]
   15394:	ldr	r0, [r4, #4]
   15398:	ldr	r2, [sp, #36]	; 0x24
   1539c:	mov	r1, #0
   153a0:	sub	r2, r2, r0
   153a4:	add	r0, r5, r0, lsl #3
   153a8:	lsl	r2, r2, #3
   153ac:	bl	10d40 <memset@plt>
   153b0:	ldr	r3, [sp, #36]	; 0x24
   153b4:	str	r3, [r4, #4]
   153b8:	ldr	r1, [r4, #20]
   153bc:	ldr	r8, [r5]
   153c0:	ldr	r6, [r5, #4]
   153c4:	ldr	r2, [r4, #56]	; 0x38
   153c8:	ldr	r3, [r4, #16]
   153cc:	ldr	ip, [r4, #60]	; 0x3c
   153d0:	ldr	fp, [pc, #220]	; 154b4 <abort@plt+0x46cc>
   153d4:	orr	r1, r1, #1
   153d8:	str	r1, [sp, #28]
   153dc:	str	r1, [sp, #4]
   153e0:	str	r2, [sp, #12]
   153e4:	str	r3, [sp]
   153e8:	mov	r1, r8
   153ec:	mov	r0, r6
   153f0:	str	ip, [sp, #16]
   153f4:	str	fp, [sp, #8]
   153f8:	mov	r3, sl
   153fc:	mov	r2, r9
   15400:	bl	11978 <abort@plt+0xb90>
   15404:	cmp	r8, r0
   15408:	bhi	1546c <abort@plt+0x4684>
   1540c:	ldr	r3, [pc, #164]	; 154b8 <abort@plt+0x46d0>
   15410:	add	r8, r0, #1
   15414:	cmp	r6, r3
   15418:	str	r8, [r5]
   1541c:	beq	15428 <abort@plt+0x4640>
   15420:	mov	r0, r6
   15424:	bl	16d94 <abort@plt+0x5fac>
   15428:	mov	r0, r8
   1542c:	bl	16254 <abort@plt+0x546c>
   15430:	ldr	lr, [r4, #60]	; 0x3c
   15434:	ldr	ip, [r4, #16]
   15438:	mov	r3, sl
   1543c:	mov	r2, r9
   15440:	mov	r1, r8
   15444:	str	r0, [r5, #4]
   15448:	ldr	r5, [r4, #56]	; 0x38
   1544c:	ldr	r4, [sp, #28]
   15450:	str	fp, [sp, #8]
   15454:	str	r4, [sp, #4]
   15458:	str	lr, [sp, #16]
   1545c:	str	r5, [sp, #12]
   15460:	str	ip, [sp]
   15464:	mov	r6, r0
   15468:	bl	11978 <abort@plt+0xb90>
   1546c:	ldr	r3, [sp, #24]
   15470:	mov	r0, r6
   15474:	str	r3, [r7]
   15478:	add	sp, sp, #44	; 0x2c
   1547c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15480:	mov	r3, #8
   15484:	str	r3, [sp]
   15488:	add	r1, sp, #36	; 0x24
   1548c:	rsb	r2, r2, #1
   15490:	mvn	r3, #-2147483648	; 0x80000000
   15494:	mov	r0, #0
   15498:	bl	16470 <abort@plt+0x5688>
   1549c:	mov	r5, r0
   154a0:	ldm	r6, {r0, r1}
   154a4:	str	r5, [r4]
   154a8:	stm	r5, {r0, r1}
   154ac:	b	15394 <abort@plt+0x45ac>
   154b0:	andeq	r8, r2, r0, ror #1
   154b4:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   154b8:	andeq	r8, r2, ip, ror r1
   154bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154c0:	sub	sp, sp, #44	; 0x2c
   154c4:	mov	r5, r0
   154c8:	mov	sl, r1
   154cc:	bl	10d28 <__errno_location@plt>
   154d0:	ldr	r4, [pc, #396]	; 15664 <abort@plt+0x487c>
   154d4:	cmn	r5, #-2147483647	; 0x80000001
   154d8:	ldr	r6, [r4]
   154dc:	mov	r8, r0
   154e0:	movne	r0, #0
   154e4:	moveq	r0, #1
   154e8:	ldr	r3, [r8]
   154ec:	orrs	r0, r0, r5, lsr #31
   154f0:	str	r3, [sp, #24]
   154f4:	bne	15660 <abort@plt+0x4878>
   154f8:	ldr	r2, [r4, #4]
   154fc:	cmp	r5, r2
   15500:	blt	15560 <abort@plt+0x4778>
   15504:	add	r7, r4, #8
   15508:	cmp	r6, r7
   1550c:	str	r2, [sp, #36]	; 0x24
   15510:	beq	15630 <abort@plt+0x4848>
   15514:	mov	r3, #8
   15518:	sub	r2, r5, r2
   1551c:	mov	r0, r6
   15520:	str	r3, [sp]
   15524:	add	r2, r2, #1
   15528:	mvn	r3, #-2147483648	; 0x80000000
   1552c:	add	r1, sp, #36	; 0x24
   15530:	bl	16470 <abort@plt+0x5688>
   15534:	mov	r6, r0
   15538:	str	r0, [r4]
   1553c:	ldr	r0, [r4, #4]
   15540:	ldr	r2, [sp, #36]	; 0x24
   15544:	mov	r1, #0
   15548:	sub	r2, r2, r0
   1554c:	add	r0, r6, r0, lsl #3
   15550:	lsl	r2, r2, #3
   15554:	bl	10d40 <memset@plt>
   15558:	ldr	r3, [sp, #36]	; 0x24
   1555c:	str	r3, [r4, #4]
   15560:	ldr	r2, [r4, #56]	; 0x38
   15564:	add	fp, r6, r5, lsl #3
   15568:	ldr	r1, [r4, #20]
   1556c:	ldr	r9, [r6, r5, lsl #3]
   15570:	ldr	r7, [fp, #4]
   15574:	ldr	r3, [r4, #16]
   15578:	ldr	ip, [r4, #60]	; 0x3c
   1557c:	str	r2, [sp, #12]
   15580:	ldr	r2, [pc, #224]	; 15668 <abort@plt+0x4880>
   15584:	orr	r1, r1, #1
   15588:	str	r1, [sp, #28]
   1558c:	str	r1, [sp, #4]
   15590:	str	r2, [sp, #8]
   15594:	str	r3, [sp]
   15598:	mov	r0, r7
   1559c:	mov	r1, r9
   155a0:	str	ip, [sp, #16]
   155a4:	mvn	r3, #0
   155a8:	mov	r2, sl
   155ac:	bl	11978 <abort@plt+0xb90>
   155b0:	cmp	r9, r0
   155b4:	bhi	1561c <abort@plt+0x4834>
   155b8:	ldr	r3, [pc, #172]	; 1566c <abort@plt+0x4884>
   155bc:	add	r9, r0, #1
   155c0:	cmp	r7, r3
   155c4:	str	r9, [r6, r5, lsl #3]
   155c8:	beq	155d4 <abort@plt+0x47ec>
   155cc:	mov	r0, r7
   155d0:	bl	16d94 <abort@plt+0x5fac>
   155d4:	mov	r0, r9
   155d8:	bl	16254 <abort@plt+0x546c>
   155dc:	ldr	ip, [r4, #60]	; 0x3c
   155e0:	ldr	r3, [r4, #16]
   155e4:	ldr	lr, [r4, #56]	; 0x38
   155e8:	ldr	r4, [pc, #120]	; 15668 <abort@plt+0x4880>
   155ec:	mov	r2, sl
   155f0:	mov	r1, r9
   155f4:	str	r0, [fp, #4]
   155f8:	str	r4, [sp, #8]
   155fc:	ldr	r4, [sp, #28]
   15600:	str	r3, [sp]
   15604:	str	r4, [sp, #4]
   15608:	str	ip, [sp, #16]
   1560c:	str	lr, [sp, #12]
   15610:	mvn	r3, #0
   15614:	mov	r7, r0
   15618:	bl	11978 <abort@plt+0xb90>
   1561c:	ldr	r3, [sp, #24]
   15620:	mov	r0, r7
   15624:	str	r3, [r8]
   15628:	add	sp, sp, #44	; 0x2c
   1562c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15630:	mov	r3, #8
   15634:	sub	r2, r5, r2
   15638:	str	r3, [sp]
   1563c:	add	r1, sp, #36	; 0x24
   15640:	add	r2, r2, #1
   15644:	mvn	r3, #-2147483648	; 0x80000000
   15648:	bl	16470 <abort@plt+0x5688>
   1564c:	mov	r6, r0
   15650:	ldm	r7, {r0, r1}
   15654:	str	r6, [r4]
   15658:	stm	r6, {r0, r1}
   1565c:	b	1553c <abort@plt+0x4754>
   15660:	bl	10de8 <abort@plt>
   15664:	andeq	r8, r2, r0, ror #1
   15668:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1566c:	andeq	r8, r2, ip, ror r1
   15670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15674:	sub	sp, sp, #44	; 0x2c
   15678:	mov	sl, r0
   1567c:	bl	10d28 <__errno_location@plt>
   15680:	ldr	r4, [pc, #348]	; 157e4 <abort@plt+0x49fc>
   15684:	ldr	r2, [r4, #4]
   15688:	ldr	r5, [r4]
   1568c:	cmp	r2, #0
   15690:	ldr	r3, [r0]
   15694:	mov	r8, r0
   15698:	str	r3, [sp, #28]
   1569c:	bgt	156f8 <abort@plt+0x4910>
   156a0:	add	r6, r4, #8
   156a4:	cmp	r5, r6
   156a8:	str	r2, [sp, #36]	; 0x24
   156ac:	beq	157b4 <abort@plt+0x49cc>
   156b0:	mov	r3, #8
   156b4:	mov	r0, r5
   156b8:	str	r3, [sp]
   156bc:	rsb	r2, r2, #1
   156c0:	mvn	r3, #-2147483648	; 0x80000000
   156c4:	add	r1, sp, #36	; 0x24
   156c8:	bl	16470 <abort@plt+0x5688>
   156cc:	mov	r5, r0
   156d0:	str	r0, [r4]
   156d4:	ldr	r0, [r4, #4]
   156d8:	ldr	r2, [sp, #36]	; 0x24
   156dc:	mov	r1, #0
   156e0:	sub	r2, r2, r0
   156e4:	add	r0, r5, r0, lsl #3
   156e8:	lsl	r2, r2, #3
   156ec:	bl	10d40 <memset@plt>
   156f0:	ldr	r3, [sp, #36]	; 0x24
   156f4:	str	r3, [r4, #4]
   156f8:	ldr	r7, [r4, #20]
   156fc:	ldr	r9, [r5]
   15700:	ldr	r6, [r5, #4]
   15704:	ldr	r2, [r4, #56]	; 0x38
   15708:	ldr	r3, [r4, #16]
   1570c:	ldr	ip, [r4, #60]	; 0x3c
   15710:	ldr	fp, [pc, #208]	; 157e8 <abort@plt+0x4a00>
   15714:	orr	r7, r7, #1
   15718:	str	r2, [sp, #12]
   1571c:	str	r3, [sp]
   15720:	str	r7, [sp, #4]
   15724:	mov	r1, r9
   15728:	mov	r0, r6
   1572c:	str	ip, [sp, #16]
   15730:	str	fp, [sp, #8]
   15734:	mvn	r3, #0
   15738:	mov	r2, sl
   1573c:	bl	11978 <abort@plt+0xb90>
   15740:	cmp	r9, r0
   15744:	bhi	157a0 <abort@plt+0x49b8>
   15748:	ldr	r3, [pc, #156]	; 157ec <abort@plt+0x4a04>
   1574c:	add	r9, r0, #1
   15750:	cmp	r6, r3
   15754:	str	r9, [r5]
   15758:	beq	15764 <abort@plt+0x497c>
   1575c:	mov	r0, r6
   15760:	bl	16d94 <abort@plt+0x5fac>
   15764:	mov	r0, r9
   15768:	bl	16254 <abort@plt+0x546c>
   1576c:	ldr	ip, [r4, #60]	; 0x3c
   15770:	ldr	r3, [r4, #16]
   15774:	ldr	lr, [r4, #56]	; 0x38
   15778:	mov	r2, sl
   1577c:	mov	r1, r9
   15780:	str	r0, [r5, #4]
   15784:	str	r3, [sp]
   15788:	stmib	sp, {r7, fp}
   1578c:	str	ip, [sp, #16]
   15790:	str	lr, [sp, #12]
   15794:	mvn	r3, #0
   15798:	mov	r6, r0
   1579c:	bl	11978 <abort@plt+0xb90>
   157a0:	ldr	r3, [sp, #28]
   157a4:	mov	r0, r6
   157a8:	str	r3, [r8]
   157ac:	add	sp, sp, #44	; 0x2c
   157b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157b4:	mov	r3, #8
   157b8:	str	r3, [sp]
   157bc:	add	r1, sp, #36	; 0x24
   157c0:	rsb	r2, r2, #1
   157c4:	mvn	r3, #-2147483648	; 0x80000000
   157c8:	mov	r0, #0
   157cc:	bl	16470 <abort@plt+0x5688>
   157d0:	mov	r5, r0
   157d4:	ldm	r6, {r0, r1}
   157d8:	str	r5, [r4]
   157dc:	stm	r5, {r0, r1}
   157e0:	b	156d4 <abort@plt+0x48ec>
   157e4:	andeq	r8, r2, r0, ror #1
   157e8:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   157ec:	andeq	r8, r2, ip, ror r1
   157f0:	push	{r4, r5, r6, lr}
   157f4:	sub	sp, sp, #32
   157f8:	cmp	r1, #0
   157fc:	mov	r4, r0
   15800:	ldr	r5, [sp, #48]	; 0x30
   15804:	ldr	r6, [sp, #52]	; 0x34
   15808:	beq	15b20 <abort@plt+0x4d38>
   1580c:	stm	sp, {r2, r3}
   15810:	mov	r3, r1
   15814:	ldr	r2, [pc, #808]	; 15b44 <abort@plt+0x4d5c>
   15818:	mov	r1, #1
   1581c:	bl	10d70 <__fprintf_chk@plt>
   15820:	mov	r2, #5
   15824:	ldr	r1, [pc, #796]	; 15b48 <abort@plt+0x4d60>
   15828:	mov	r0, #0
   1582c:	bl	10c50 <dcgettext@plt>
   15830:	ldr	r3, [pc, #788]	; 15b4c <abort@plt+0x4d64>
   15834:	ldr	r2, [pc, #788]	; 15b50 <abort@plt+0x4d68>
   15838:	str	r3, [sp]
   1583c:	mov	r1, #1
   15840:	mov	r3, r0
   15844:	mov	r0, r4
   15848:	bl	10d70 <__fprintf_chk@plt>
   1584c:	mov	r1, r4
   15850:	mov	r0, #10
   15854:	bl	10c44 <fputc_unlocked@plt>
   15858:	mov	r2, #5
   1585c:	ldr	r1, [pc, #752]	; 15b54 <abort@plt+0x4d6c>
   15860:	mov	r0, #0
   15864:	bl	10c50 <dcgettext@plt>
   15868:	mov	r1, #1
   1586c:	ldr	r3, [pc, #740]	; 15b58 <abort@plt+0x4d70>
   15870:	mov	r2, r0
   15874:	mov	r0, r4
   15878:	bl	10d70 <__fprintf_chk@plt>
   1587c:	mov	r1, r4
   15880:	mov	r0, #10
   15884:	bl	10c44 <fputc_unlocked@plt>
   15888:	cmp	r6, #9
   1588c:	ldrls	pc, [pc, r6, lsl #2]
   15890:	b	15b38 <abort@plt+0x4d50>
   15894:	andeq	r5, r1, r8, lsl r9
   15898:	andeq	r5, r1, r0, lsr #18
   1589c:	andeq	r5, r1, ip, asr #18
   158a0:	andeq	r5, r1, r0, lsl #19
   158a4:			; <UNDEFINED> instruction: 0x000159bc
   158a8:	strdeq	r5, [r1], -r8
   158ac:	andeq	r5, r1, r4, lsr sl
   158b0:	andeq	r5, r1, r8, ror sl
   158b4:	andeq	r5, r1, r8, asr #21
   158b8:			; <UNDEFINED> instruction: 0x000158bc
   158bc:	ldr	r1, [pc, #664]	; 15b5c <abort@plt+0x4d74>
   158c0:	mov	r2, #5
   158c4:	mov	r0, #0
   158c8:	bl	10c50 <dcgettext@plt>
   158cc:	ldr	ip, [r5, #32]
   158d0:	ldr	r1, [r5, #28]
   158d4:	ldr	r2, [r5, #24]
   158d8:	ldr	r3, [r5]
   158dc:	ldr	r6, [r5, #20]
   158e0:	str	ip, [sp, #28]
   158e4:	ldr	lr, [r5, #16]
   158e8:	str	r1, [sp, #24]
   158ec:	ldr	ip, [r5, #12]
   158f0:	str	r2, [sp, #20]
   158f4:	ldr	r1, [r5, #8]
   158f8:	ldr	r2, [r5, #4]
   158fc:	str	r6, [sp, #16]
   15900:	stmib	sp, {r1, ip, lr}
   15904:	mov	r1, #1
   15908:	str	r2, [sp]
   1590c:	mov	r2, r0
   15910:	mov	r0, r4
   15914:	bl	10d70 <__fprintf_chk@plt>
   15918:	add	sp, sp, #32
   1591c:	pop	{r4, r5, r6, pc}
   15920:	mov	r2, #5
   15924:	ldr	r1, [pc, #564]	; 15b60 <abort@plt+0x4d78>
   15928:	mov	r0, #0
   1592c:	bl	10c50 <dcgettext@plt>
   15930:	ldr	r3, [r5]
   15934:	mov	r1, #1
   15938:	mov	r2, r0
   1593c:	mov	r0, r4
   15940:	add	sp, sp, #32
   15944:	pop	{r4, r5, r6, lr}
   15948:	b	10d70 <__fprintf_chk@plt>
   1594c:	mov	r2, #5
   15950:	ldr	r1, [pc, #524]	; 15b64 <abort@plt+0x4d7c>
   15954:	mov	r0, #0
   15958:	bl	10c50 <dcgettext@plt>
   1595c:	ldr	r2, [r5, #4]
   15960:	ldr	r3, [r5]
   15964:	mov	r1, #1
   15968:	str	r2, [sp, #48]	; 0x30
   1596c:	mov	r2, r0
   15970:	mov	r0, r4
   15974:	add	sp, sp, #32
   15978:	pop	{r4, r5, r6, lr}
   1597c:	b	10d70 <__fprintf_chk@plt>
   15980:	mov	r2, #5
   15984:	ldr	r1, [pc, #476]	; 15b68 <abort@plt+0x4d80>
   15988:	mov	r0, #0
   1598c:	bl	10c50 <dcgettext@plt>
   15990:	ldr	r1, [r5, #8]
   15994:	ldr	r2, [r5, #4]
   15998:	ldr	r3, [r5]
   1599c:	str	r1, [sp, #52]	; 0x34
   159a0:	str	r2, [sp, #48]	; 0x30
   159a4:	mov	r1, #1
   159a8:	mov	r2, r0
   159ac:	mov	r0, r4
   159b0:	add	sp, sp, #32
   159b4:	pop	{r4, r5, r6, lr}
   159b8:	b	10d70 <__fprintf_chk@plt>
   159bc:	mov	r2, #5
   159c0:	ldr	r1, [pc, #420]	; 15b6c <abort@plt+0x4d84>
   159c4:	mov	r0, #0
   159c8:	bl	10c50 <dcgettext@plt>
   159cc:	ldr	r1, [r5, #8]
   159d0:	ldr	ip, [r5, #12]
   159d4:	ldr	r2, [r5, #4]
   159d8:	ldr	r3, [r5]
   159dc:	stmib	sp, {r1, ip}
   159e0:	str	r2, [sp]
   159e4:	mov	r1, #1
   159e8:	mov	r2, r0
   159ec:	mov	r0, r4
   159f0:	bl	10d70 <__fprintf_chk@plt>
   159f4:	b	15918 <abort@plt+0x4b30>
   159f8:	mov	r2, #5
   159fc:	ldr	r1, [pc, #364]	; 15b70 <abort@plt+0x4d88>
   15a00:	mov	r0, #0
   15a04:	bl	10c50 <dcgettext@plt>
   15a08:	add	r1, r5, #8
   15a0c:	ldr	r2, [r5, #4]
   15a10:	ldm	r1, {r1, ip, lr}
   15a14:	ldr	r3, [r5]
   15a18:	str	r2, [sp]
   15a1c:	stmib	sp, {r1, ip, lr}
   15a20:	mov	r1, #1
   15a24:	mov	r2, r0
   15a28:	mov	r0, r4
   15a2c:	bl	10d70 <__fprintf_chk@plt>
   15a30:	b	15918 <abort@plt+0x4b30>
   15a34:	mov	r2, #5
   15a38:	ldr	r1, [pc, #308]	; 15b74 <abort@plt+0x4d8c>
   15a3c:	mov	r0, #0
   15a40:	bl	10c50 <dcgettext@plt>
   15a44:	add	r1, r5, #8
   15a48:	ldr	r2, [r5, #4]
   15a4c:	ldm	r1, {r1, ip, lr}
   15a50:	ldr	r6, [r5, #20]
   15a54:	ldr	r3, [r5]
   15a58:	stmib	sp, {r1, ip, lr}
   15a5c:	mov	r1, #1
   15a60:	str	r2, [sp]
   15a64:	str	r6, [sp, #16]
   15a68:	mov	r2, r0
   15a6c:	mov	r0, r4
   15a70:	bl	10d70 <__fprintf_chk@plt>
   15a74:	b	15918 <abort@plt+0x4b30>
   15a78:	mov	r2, #5
   15a7c:	ldr	r1, [pc, #244]	; 15b78 <abort@plt+0x4d90>
   15a80:	mov	r0, #0
   15a84:	bl	10c50 <dcgettext@plt>
   15a88:	ldr	r2, [r5, #24]
   15a8c:	ldr	r3, [r5]
   15a90:	ldr	r6, [r5, #20]
   15a94:	ldr	lr, [r5, #16]
   15a98:	ldr	ip, [r5, #12]
   15a9c:	str	r2, [sp, #20]
   15aa0:	ldr	r1, [r5, #8]
   15aa4:	ldr	r2, [r5, #4]
   15aa8:	str	r6, [sp, #16]
   15aac:	stmib	sp, {r1, ip, lr}
   15ab0:	mov	r1, #1
   15ab4:	str	r2, [sp]
   15ab8:	mov	r2, r0
   15abc:	mov	r0, r4
   15ac0:	bl	10d70 <__fprintf_chk@plt>
   15ac4:	b	15918 <abort@plt+0x4b30>
   15ac8:	mov	r2, #5
   15acc:	ldr	r1, [pc, #168]	; 15b7c <abort@plt+0x4d94>
   15ad0:	mov	r0, #0
   15ad4:	bl	10c50 <dcgettext@plt>
   15ad8:	ldr	r1, [r5, #28]
   15adc:	ldr	r2, [r5, #24]
   15ae0:	ldr	r3, [r5]
   15ae4:	ldr	r6, [r5, #20]
   15ae8:	ldr	lr, [r5, #16]
   15aec:	str	r1, [sp, #24]
   15af0:	ldr	ip, [r5, #12]
   15af4:	str	r2, [sp, #20]
   15af8:	ldr	r1, [r5, #8]
   15afc:	ldr	r2, [r5, #4]
   15b00:	str	r6, [sp, #16]
   15b04:	stmib	sp, {r1, ip, lr}
   15b08:	mov	r1, #1
   15b0c:	str	r2, [sp]
   15b10:	mov	r2, r0
   15b14:	mov	r0, r4
   15b18:	bl	10d70 <__fprintf_chk@plt>
   15b1c:	b	15918 <abort@plt+0x4b30>
   15b20:	str	r3, [sp]
   15b24:	mov	r1, #1
   15b28:	mov	r3, r2
   15b2c:	ldr	r2, [pc, #76]	; 15b80 <abort@plt+0x4d98>
   15b30:	bl	10d70 <__fprintf_chk@plt>
   15b34:	b	15820 <abort@plt+0x4a38>
   15b38:	mov	r2, #5
   15b3c:	ldr	r1, [pc, #64]	; 15b84 <abort@plt+0x4d9c>
   15b40:	b	158c4 <abort@plt+0x4adc>
   15b44:	andeq	r7, r1, r8, lsl #21
   15b48:	muleq	r1, ip, sl
   15b4c:	andeq	r0, r0, r6, ror #15
   15b50:	andeq	r7, r1, r4, ror sp
   15b54:	andeq	r7, r1, r0, lsr #21
   15b58:	andeq	r7, r1, ip, asr #22
   15b5c:	andeq	r7, r1, ip, ror ip
   15b60:	andeq	r7, r1, r0, ror fp
   15b64:	andeq	r7, r1, r0, lsl #23
   15b68:	muleq	r1, r8, fp
   15b6c:			; <UNDEFINED> instruction: 0x00017bb4
   15b70:	ldrdeq	r7, [r1], -r4
   15b74:	strdeq	r7, [r1], -r8
   15b78:	andeq	r7, r1, r0, lsr #24
   15b7c:	andeq	r7, r1, ip, asr #24
   15b80:	muleq	r1, r4, sl
   15b84:			; <UNDEFINED> instruction: 0x00017cb0
   15b88:	push	{r4, r5, lr}
   15b8c:	sub	sp, sp, #12
   15b90:	ldr	r5, [sp, #24]
   15b94:	ldr	ip, [r5]
   15b98:	cmp	ip, #0
   15b9c:	beq	15bb8 <abort@plt+0x4dd0>
   15ba0:	mov	lr, r5
   15ba4:	mov	ip, #0
   15ba8:	ldr	r4, [lr, #4]!
   15bac:	add	ip, ip, #1
   15bb0:	cmp	r4, #0
   15bb4:	bne	15ba8 <abort@plt+0x4dc0>
   15bb8:	stm	sp, {r5, ip}
   15bbc:	bl	157f0 <abort@plt+0x4a08>
   15bc0:	add	sp, sp, #12
   15bc4:	pop	{r4, r5, pc}
   15bc8:	push	{r4, r5, lr}
   15bcc:	sub	sp, sp, #76	; 0x4c
   15bd0:	mov	r5, r0
   15bd4:	ldr	ip, [sp, #88]	; 0x58
   15bd8:	ldr	r0, [ip]
   15bdc:	cmp	r0, #0
   15be0:	str	r0, [sp, #32]
   15be4:	beq	15fb8 <abort@plt+0x51d0>
   15be8:	ldr	r0, [ip, #4]
   15bec:	cmp	r0, #0
   15bf0:	str	r0, [sp, #36]	; 0x24
   15bf4:	beq	15fc0 <abort@plt+0x51d8>
   15bf8:	ldr	r0, [ip, #8]
   15bfc:	cmp	r0, #0
   15c00:	str	r0, [sp, #40]	; 0x28
   15c04:	beq	15fc8 <abort@plt+0x51e0>
   15c08:	ldr	r0, [ip, #12]
   15c0c:	cmp	r0, #0
   15c10:	str	r0, [sp, #44]	; 0x2c
   15c14:	beq	15fd0 <abort@plt+0x51e8>
   15c18:	ldr	r0, [ip, #16]
   15c1c:	cmp	r0, #0
   15c20:	str	r0, [sp, #48]	; 0x30
   15c24:	beq	15fd8 <abort@plt+0x51f0>
   15c28:	ldr	r0, [ip, #20]
   15c2c:	cmp	r0, #0
   15c30:	str	r0, [sp, #52]	; 0x34
   15c34:	beq	15fe0 <abort@plt+0x51f8>
   15c38:	ldr	r0, [ip, #24]
   15c3c:	cmp	r0, #0
   15c40:	str	r0, [sp, #56]	; 0x38
   15c44:	beq	15fe8 <abort@plt+0x5200>
   15c48:	ldr	r0, [ip, #28]
   15c4c:	cmp	r0, #0
   15c50:	str	r0, [sp, #60]	; 0x3c
   15c54:	beq	15ff0 <abort@plt+0x5208>
   15c58:	ldr	r0, [ip, #32]
   15c5c:	cmp	r0, #0
   15c60:	str	r0, [sp, #64]	; 0x40
   15c64:	beq	15ff8 <abort@plt+0x5210>
   15c68:	ldr	r0, [ip, #36]	; 0x24
   15c6c:	cmp	r0, #0
   15c70:	movne	r4, #10
   15c74:	moveq	r4, #9
   15c78:	cmp	r1, #0
   15c7c:	beq	15f90 <abort@plt+0x51a8>
   15c80:	stm	sp, {r2, r3}
   15c84:	mov	r0, r5
   15c88:	mov	r3, r1
   15c8c:	ldr	r2, [pc, #876]	; 16000 <abort@plt+0x5218>
   15c90:	mov	r1, #1
   15c94:	bl	10d70 <__fprintf_chk@plt>
   15c98:	mov	r2, #5
   15c9c:	ldr	r1, [pc, #864]	; 16004 <abort@plt+0x521c>
   15ca0:	mov	r0, #0
   15ca4:	bl	10c50 <dcgettext@plt>
   15ca8:	ldr	r3, [pc, #856]	; 16008 <abort@plt+0x5220>
   15cac:	ldr	r2, [pc, #856]	; 1600c <abort@plt+0x5224>
   15cb0:	str	r3, [sp]
   15cb4:	mov	r1, #1
   15cb8:	mov	r3, r0
   15cbc:	mov	r0, r5
   15cc0:	bl	10d70 <__fprintf_chk@plt>
   15cc4:	mov	r1, r5
   15cc8:	mov	r0, #10
   15ccc:	bl	10c44 <fputc_unlocked@plt>
   15cd0:	mov	r2, #5
   15cd4:	ldr	r1, [pc, #820]	; 16010 <abort@plt+0x5228>
   15cd8:	mov	r0, #0
   15cdc:	bl	10c50 <dcgettext@plt>
   15ce0:	mov	r1, #1
   15ce4:	ldr	r3, [pc, #808]	; 16014 <abort@plt+0x522c>
   15ce8:	mov	r2, r0
   15cec:	mov	r0, r5
   15cf0:	bl	10d70 <__fprintf_chk@plt>
   15cf4:	mov	r1, r5
   15cf8:	mov	r0, #10
   15cfc:	bl	10c44 <fputc_unlocked@plt>
   15d00:	cmp	r4, #9
   15d04:	ldrls	pc, [pc, r4, lsl #2]
   15d08:	b	15fac <abort@plt+0x51c4>
   15d0c:	muleq	r1, r0, sp
   15d10:	muleq	r1, r8, sp
   15d14:	andeq	r5, r1, r4, asr #27
   15d18:	strdeq	r5, [r1], -r8
   15d1c:	andeq	r5, r1, r0, lsr lr
   15d20:	andeq	r5, r1, ip, ror #28
   15d24:	andeq	r5, r1, r8, lsr #29
   15d28:	andeq	r5, r1, ip, ror #29
   15d2c:	andeq	r5, r1, r8, lsr pc
   15d30:	andeq	r5, r1, r4, lsr sp
   15d34:	ldr	r1, [pc, #732]	; 16018 <abort@plt+0x5230>
   15d38:	mov	r2, #5
   15d3c:	mov	r0, #0
   15d40:	bl	10c50 <dcgettext@plt>
   15d44:	ldr	ip, [sp, #64]	; 0x40
   15d48:	ldr	r1, [sp, #60]	; 0x3c
   15d4c:	ldr	r2, [sp, #56]	; 0x38
   15d50:	ldr	lr, [sp, #48]	; 0x30
   15d54:	str	ip, [sp, #28]
   15d58:	str	r1, [sp, #24]
   15d5c:	ldr	ip, [sp, #44]	; 0x2c
   15d60:	ldr	r1, [sp, #40]	; 0x28
   15d64:	ldr	r4, [sp, #52]	; 0x34
   15d68:	str	r2, [sp, #20]
   15d6c:	ldr	r2, [sp, #36]	; 0x24
   15d70:	stmib	sp, {r1, ip, lr}
   15d74:	mov	r1, #1
   15d78:	str	r2, [sp]
   15d7c:	ldr	r3, [sp, #32]
   15d80:	str	r4, [sp, #16]
   15d84:	mov	r2, r0
   15d88:	mov	r0, r5
   15d8c:	bl	10d70 <__fprintf_chk@plt>
   15d90:	add	sp, sp, #76	; 0x4c
   15d94:	pop	{r4, r5, pc}
   15d98:	mov	r2, #5
   15d9c:	ldr	r1, [pc, #632]	; 1601c <abort@plt+0x5234>
   15da0:	mov	r0, #0
   15da4:	bl	10c50 <dcgettext@plt>
   15da8:	ldr	r3, [sp, #32]
   15dac:	mov	r1, #1
   15db0:	mov	r2, r0
   15db4:	mov	r0, r5
   15db8:	add	sp, sp, #76	; 0x4c
   15dbc:	pop	{r4, r5, lr}
   15dc0:	b	10d70 <__fprintf_chk@plt>
   15dc4:	mov	r2, #5
   15dc8:	ldr	r1, [pc, #592]	; 16020 <abort@plt+0x5238>
   15dcc:	mov	r0, #0
   15dd0:	bl	10c50 <dcgettext@plt>
   15dd4:	ldr	r2, [sp, #36]	; 0x24
   15dd8:	ldr	r3, [sp, #32]
   15ddc:	str	r2, [sp, #88]	; 0x58
   15de0:	mov	r1, #1
   15de4:	mov	r2, r0
   15de8:	mov	r0, r5
   15dec:	add	sp, sp, #76	; 0x4c
   15df0:	pop	{r4, r5, lr}
   15df4:	b	10d70 <__fprintf_chk@plt>
   15df8:	mov	r2, #5
   15dfc:	ldr	r1, [pc, #544]	; 16024 <abort@plt+0x523c>
   15e00:	mov	r0, #0
   15e04:	bl	10c50 <dcgettext@plt>
   15e08:	ldr	r1, [sp, #40]	; 0x28
   15e0c:	ldr	r2, [sp, #36]	; 0x24
   15e10:	str	r1, [sp, #4]
   15e14:	str	r2, [sp]
   15e18:	ldr	r3, [sp, #32]
   15e1c:	mov	r1, #1
   15e20:	mov	r2, r0
   15e24:	mov	r0, r5
   15e28:	bl	10d70 <__fprintf_chk@plt>
   15e2c:	b	15d90 <abort@plt+0x4fa8>
   15e30:	mov	r2, #5
   15e34:	ldr	r1, [pc, #492]	; 16028 <abort@plt+0x5240>
   15e38:	mov	r0, #0
   15e3c:	bl	10c50 <dcgettext@plt>
   15e40:	ldr	r1, [sp, #40]	; 0x28
   15e44:	ldr	ip, [sp, #44]	; 0x2c
   15e48:	ldr	r2, [sp, #36]	; 0x24
   15e4c:	ldr	r3, [sp, #32]
   15e50:	stmib	sp, {r1, ip}
   15e54:	str	r2, [sp]
   15e58:	mov	r1, #1
   15e5c:	mov	r2, r0
   15e60:	mov	r0, r5
   15e64:	bl	10d70 <__fprintf_chk@plt>
   15e68:	b	15d90 <abort@plt+0x4fa8>
   15e6c:	mov	r2, #5
   15e70:	ldr	r1, [pc, #436]	; 1602c <abort@plt+0x5244>
   15e74:	mov	r0, #0
   15e78:	bl	10c50 <dcgettext@plt>
   15e7c:	add	r1, sp, #40	; 0x28
   15e80:	ldr	r2, [sp, #36]	; 0x24
   15e84:	ldm	r1, {r1, ip, lr}
   15e88:	ldr	r3, [sp, #32]
   15e8c:	str	r2, [sp]
   15e90:	stmib	sp, {r1, ip, lr}
   15e94:	mov	r1, #1
   15e98:	mov	r2, r0
   15e9c:	mov	r0, r5
   15ea0:	bl	10d70 <__fprintf_chk@plt>
   15ea4:	b	15d90 <abort@plt+0x4fa8>
   15ea8:	mov	r2, #5
   15eac:	ldr	r1, [pc, #380]	; 16030 <abort@plt+0x5248>
   15eb0:	mov	r0, #0
   15eb4:	bl	10c50 <dcgettext@plt>
   15eb8:	add	r1, sp, #40	; 0x28
   15ebc:	ldr	r2, [sp, #36]	; 0x24
   15ec0:	ldm	r1, {r1, ip, lr}
   15ec4:	ldr	r4, [sp, #52]	; 0x34
   15ec8:	str	r2, [sp]
   15ecc:	stmib	sp, {r1, ip, lr}
   15ed0:	mov	r1, #1
   15ed4:	ldr	r3, [sp, #32]
   15ed8:	str	r4, [sp, #16]
   15edc:	mov	r2, r0
   15ee0:	mov	r0, r5
   15ee4:	bl	10d70 <__fprintf_chk@plt>
   15ee8:	b	15d90 <abort@plt+0x4fa8>
   15eec:	mov	r2, #5
   15ef0:	ldr	r1, [pc, #316]	; 16034 <abort@plt+0x524c>
   15ef4:	mov	r0, #0
   15ef8:	bl	10c50 <dcgettext@plt>
   15efc:	add	r1, sp, #40	; 0x28
   15f00:	ldr	r2, [sp, #56]	; 0x38
   15f04:	ldm	r1, {r1, ip, lr}
   15f08:	ldr	r4, [sp, #52]	; 0x34
   15f0c:	str	r2, [sp, #20]
   15f10:	ldr	r2, [sp, #36]	; 0x24
   15f14:	stmib	sp, {r1, ip, lr}
   15f18:	mov	r1, #1
   15f1c:	str	r2, [sp]
   15f20:	ldr	r3, [sp, #32]
   15f24:	str	r4, [sp, #16]
   15f28:	mov	r2, r0
   15f2c:	mov	r0, r5
   15f30:	bl	10d70 <__fprintf_chk@plt>
   15f34:	b	15d90 <abort@plt+0x4fa8>
   15f38:	mov	r2, #5
   15f3c:	ldr	r1, [pc, #244]	; 16038 <abort@plt+0x5250>
   15f40:	mov	r0, #0
   15f44:	bl	10c50 <dcgettext@plt>
   15f48:	ldr	r1, [sp, #60]	; 0x3c
   15f4c:	ldr	r2, [sp, #56]	; 0x38
   15f50:	ldr	lr, [sp, #48]	; 0x30
   15f54:	ldr	ip, [sp, #44]	; 0x2c
   15f58:	str	r1, [sp, #24]
   15f5c:	ldr	r1, [sp, #40]	; 0x28
   15f60:	ldr	r4, [sp, #52]	; 0x34
   15f64:	str	r2, [sp, #20]
   15f68:	ldr	r2, [sp, #36]	; 0x24
   15f6c:	stmib	sp, {r1, ip, lr}
   15f70:	mov	r1, #1
   15f74:	str	r2, [sp]
   15f78:	ldr	r3, [sp, #32]
   15f7c:	str	r4, [sp, #16]
   15f80:	mov	r2, r0
   15f84:	mov	r0, r5
   15f88:	bl	10d70 <__fprintf_chk@plt>
   15f8c:	b	15d90 <abort@plt+0x4fa8>
   15f90:	str	r3, [sp]
   15f94:	mov	r1, #1
   15f98:	mov	r3, r2
   15f9c:	mov	r0, r5
   15fa0:	ldr	r2, [pc, #148]	; 1603c <abort@plt+0x5254>
   15fa4:	bl	10d70 <__fprintf_chk@plt>
   15fa8:	b	15c98 <abort@plt+0x4eb0>
   15fac:	mov	r2, #5
   15fb0:	ldr	r1, [pc, #136]	; 16040 <abort@plt+0x5258>
   15fb4:	b	15d3c <abort@plt+0x4f54>
   15fb8:	mov	r4, r0
   15fbc:	b	15c78 <abort@plt+0x4e90>
   15fc0:	mov	r4, #1
   15fc4:	b	15c78 <abort@plt+0x4e90>
   15fc8:	mov	r4, #2
   15fcc:	b	15c78 <abort@plt+0x4e90>
   15fd0:	mov	r4, #3
   15fd4:	b	15c78 <abort@plt+0x4e90>
   15fd8:	mov	r4, #4
   15fdc:	b	15c78 <abort@plt+0x4e90>
   15fe0:	mov	r4, #5
   15fe4:	b	15c78 <abort@plt+0x4e90>
   15fe8:	mov	r4, #6
   15fec:	b	15c78 <abort@plt+0x4e90>
   15ff0:	mov	r4, #7
   15ff4:	b	15c78 <abort@plt+0x4e90>
   15ff8:	mov	r4, #8
   15ffc:	b	15c78 <abort@plt+0x4e90>
   16000:	andeq	r7, r1, r8, lsl #21
   16004:	muleq	r1, ip, sl
   16008:	andeq	r0, r0, r6, ror #15
   1600c:	andeq	r7, r1, r4, ror sp
   16010:	andeq	r7, r1, r0, lsr #21
   16014:	andeq	r7, r1, ip, asr #22
   16018:	andeq	r7, r1, ip, ror ip
   1601c:	andeq	r7, r1, r0, ror fp
   16020:	andeq	r7, r1, r0, lsl #23
   16024:	muleq	r1, r8, fp
   16028:			; <UNDEFINED> instruction: 0x00017bb4
   1602c:	ldrdeq	r7, [r1], -r4
   16030:	strdeq	r7, [r1], -r8
   16034:	andeq	r7, r1, r0, lsr #24
   16038:	andeq	r7, r1, ip, asr #24
   1603c:	muleq	r1, r4, sl
   16040:			; <UNDEFINED> instruction: 0x00017cb0
   16044:	push	{r3}		; (str r3, [sp, #-4]!)
   16048:	push	{lr}		; (str lr, [sp, #-4]!)
   1604c:	sub	sp, sp, #56	; 0x38
   16050:	add	r3, sp, #64	; 0x40
   16054:	ldr	ip, [sp, #64]	; 0x40
   16058:	str	r3, [sp, #12]
   1605c:	cmp	ip, #0
   16060:	str	ip, [sp, #16]
   16064:	beq	160fc <abort@plt+0x5314>
   16068:	ldr	ip, [sp, #68]	; 0x44
   1606c:	cmp	ip, #0
   16070:	str	ip, [sp, #20]
   16074:	beq	1611c <abort@plt+0x5334>
   16078:	ldr	ip, [sp, #72]	; 0x48
   1607c:	cmp	ip, #0
   16080:	str	ip, [sp, #24]
   16084:	beq	16124 <abort@plt+0x533c>
   16088:	ldr	ip, [sp, #76]	; 0x4c
   1608c:	cmp	ip, #0
   16090:	str	ip, [sp, #28]
   16094:	beq	1612c <abort@plt+0x5344>
   16098:	ldr	ip, [sp, #80]	; 0x50
   1609c:	cmp	ip, #0
   160a0:	str	ip, [sp, #32]
   160a4:	beq	16134 <abort@plt+0x534c>
   160a8:	ldr	ip, [sp, #84]	; 0x54
   160ac:	cmp	ip, #0
   160b0:	str	ip, [sp, #36]	; 0x24
   160b4:	beq	1613c <abort@plt+0x5354>
   160b8:	ldr	ip, [sp, #88]	; 0x58
   160bc:	cmp	ip, #0
   160c0:	str	ip, [sp, #40]	; 0x28
   160c4:	beq	16144 <abort@plt+0x535c>
   160c8:	ldr	ip, [sp, #92]	; 0x5c
   160cc:	cmp	ip, #0
   160d0:	str	ip, [sp, #44]	; 0x2c
   160d4:	beq	1614c <abort@plt+0x5364>
   160d8:	ldr	ip, [sp, #96]	; 0x60
   160dc:	cmp	ip, #0
   160e0:	str	ip, [sp, #48]	; 0x30
   160e4:	beq	16154 <abort@plt+0x536c>
   160e8:	ldr	ip, [sp, #100]	; 0x64
   160ec:	cmp	ip, #0
   160f0:	str	ip, [sp, #52]	; 0x34
   160f4:	movne	ip, #10
   160f8:	moveq	ip, #9
   160fc:	add	r3, sp, #16
   16100:	stm	sp, {r3, ip}
   16104:	ldr	r3, [sp, #60]	; 0x3c
   16108:	bl	157f0 <abort@plt+0x4a08>
   1610c:	add	sp, sp, #56	; 0x38
   16110:	pop	{lr}		; (ldr lr, [sp], #4)
   16114:	add	sp, sp, #4
   16118:	bx	lr
   1611c:	mov	ip, #1
   16120:	b	160fc <abort@plt+0x5314>
   16124:	mov	ip, #2
   16128:	b	160fc <abort@plt+0x5314>
   1612c:	mov	ip, #3
   16130:	b	160fc <abort@plt+0x5314>
   16134:	mov	ip, #4
   16138:	b	160fc <abort@plt+0x5314>
   1613c:	mov	ip, #5
   16140:	b	160fc <abort@plt+0x5314>
   16144:	mov	ip, #6
   16148:	b	160fc <abort@plt+0x5314>
   1614c:	mov	ip, #7
   16150:	b	160fc <abort@plt+0x5314>
   16154:	mov	ip, #8
   16158:	b	160fc <abort@plt+0x5314>
   1615c:	ldr	r3, [pc, #116]	; 161d8 <abort@plt+0x53f0>
   16160:	push	{r4, lr}
   16164:	mov	r0, #10
   16168:	ldr	r1, [r3]
   1616c:	bl	10c44 <fputc_unlocked@plt>
   16170:	mov	r2, #5
   16174:	ldr	r1, [pc, #96]	; 161dc <abort@plt+0x53f4>
   16178:	mov	r0, #0
   1617c:	bl	10c50 <dcgettext@plt>
   16180:	ldr	r2, [pc, #88]	; 161e0 <abort@plt+0x53f8>
   16184:	mov	r1, r0
   16188:	mov	r0, #1
   1618c:	bl	10d4c <__printf_chk@plt>
   16190:	mov	r2, #5
   16194:	ldr	r1, [pc, #72]	; 161e4 <abort@plt+0x53fc>
   16198:	mov	r0, #0
   1619c:	bl	10c50 <dcgettext@plt>
   161a0:	ldr	r3, [pc, #64]	; 161e8 <abort@plt+0x5400>
   161a4:	ldr	r2, [pc, #64]	; 161ec <abort@plt+0x5404>
   161a8:	mov	r1, r0
   161ac:	mov	r0, #1
   161b0:	bl	10d4c <__printf_chk@plt>
   161b4:	mov	r2, #5
   161b8:	ldr	r1, [pc, #48]	; 161f0 <abort@plt+0x5408>
   161bc:	mov	r0, #0
   161c0:	bl	10c50 <dcgettext@plt>
   161c4:	ldr	r2, [pc, #40]	; 161f4 <abort@plt+0x540c>
   161c8:	pop	{r4, lr}
   161cc:	mov	r1, r0
   161d0:	mov	r0, #1
   161d4:	b	10d4c <__printf_chk@plt>
   161d8:	andeq	r8, r2, r4, lsr r1
   161dc:	andeq	r7, r1, ip, ror #25
   161e0:	andeq	r7, r1, r0, lsl #26
   161e4:	andeq	r7, r1, r8, lsl sp
   161e8:	andeq	r7, r1, r8, asr #14
   161ec:	andeq	r7, r1, r0, ror r7
   161f0:	andeq	r7, r1, ip, lsr #26
   161f4:	andeq	r7, r1, r4, asr sp
   161f8:	push	{r4, r5, r6, lr}
   161fc:	mov	r6, r0
   16200:	mov	r5, r1
   16204:	mov	r4, r2
   16208:	bl	16f14 <abort@plt+0x612c>
   1620c:	cmp	r0, #0
   16210:	popne	{r4, r5, r6, pc}
   16214:	cmp	r6, #0
   16218:	beq	16228 <abort@plt+0x5440>
   1621c:	cmp	r5, #0
   16220:	cmpne	r4, #0
   16224:	popeq	{r4, r5, r6, pc}
   16228:	bl	16874 <abort@plt+0x5a8c>
   1622c:	push	{r4, lr}
   16230:	bl	16a48 <abort@plt+0x5c60>
   16234:	cmp	r0, #0
   16238:	popne	{r4, pc}
   1623c:	bl	16874 <abort@plt+0x5a8c>
   16240:	push	{r4, lr}
   16244:	bl	16a48 <abort@plt+0x5c60>
   16248:	cmp	r0, #0
   1624c:	popne	{r4, pc}
   16250:	bl	16874 <abort@plt+0x5a8c>
   16254:	push	{r4, lr}
   16258:	bl	16a48 <abort@plt+0x5c60>
   1625c:	cmp	r0, #0
   16260:	popne	{r4, pc}
   16264:	bl	16874 <abort@plt+0x5a8c>
   16268:	push	{r4, r5, r6, lr}
   1626c:	mov	r5, r0
   16270:	mov	r4, r1
   16274:	bl	16a74 <abort@plt+0x5c8c>
   16278:	cmp	r0, #0
   1627c:	popne	{r4, r5, r6, pc}
   16280:	adds	r4, r4, #0
   16284:	movne	r4, #1
   16288:	cmp	r5, #0
   1628c:	orreq	r4, r4, #1
   16290:	cmp	r4, #0
   16294:	popeq	{r4, r5, r6, pc}
   16298:	bl	16874 <abort@plt+0x5a8c>
   1629c:	push	{r4, lr}
   162a0:	cmp	r1, #0
   162a4:	orreq	r1, r1, #1
   162a8:	bl	16a74 <abort@plt+0x5c8c>
   162ac:	cmp	r0, #0
   162b0:	popne	{r4, pc}
   162b4:	bl	16874 <abort@plt+0x5a8c>
   162b8:	push	{r4, r5, r6, lr}
   162bc:	mov	r6, r0
   162c0:	mov	r5, r1
   162c4:	mov	r4, r2
   162c8:	bl	16f14 <abort@plt+0x612c>
   162cc:	cmp	r0, #0
   162d0:	popne	{r4, r5, r6, pc}
   162d4:	cmp	r6, #0
   162d8:	beq	162e8 <abort@plt+0x5500>
   162dc:	cmp	r5, #0
   162e0:	cmpne	r4, #0
   162e4:	popeq	{r4, r5, r6, pc}
   162e8:	bl	16874 <abort@plt+0x5a8c>
   162ec:	cmp	r2, #0
   162f0:	cmpne	r1, #0
   162f4:	moveq	r2, #1
   162f8:	moveq	r1, r2
   162fc:	push	{r4, lr}
   16300:	bl	16f14 <abort@plt+0x612c>
   16304:	cmp	r0, #0
   16308:	popne	{r4, pc}
   1630c:	bl	16874 <abort@plt+0x5a8c>
   16310:	push	{r4, lr}
   16314:	mov	r2, r1
   16318:	mov	r1, r0
   1631c:	mov	r0, #0
   16320:	bl	16f14 <abort@plt+0x612c>
   16324:	cmp	r0, #0
   16328:	popne	{r4, pc}
   1632c:	bl	16874 <abort@plt+0x5a8c>
   16330:	cmp	r1, #0
   16334:	cmpne	r0, #0
   16338:	moveq	r2, #1
   1633c:	movne	r2, r1
   16340:	moveq	r1, r2
   16344:	movne	r1, r0
   16348:	push	{r4, lr}
   1634c:	mov	r0, #0
   16350:	bl	16f14 <abort@plt+0x612c>
   16354:	cmp	r0, #0
   16358:	popne	{r4, pc}
   1635c:	bl	16874 <abort@plt+0x5a8c>
   16360:	cmp	r0, #0
   16364:	push	{r4, r5, r6, lr}
   16368:	mov	r5, r1
   1636c:	ldr	r4, [r1]
   16370:	beq	163ac <abort@plt+0x55c4>
   16374:	lsr	r2, r4, #1
   16378:	add	r3, r2, #1
   1637c:	mvn	r3, r3
   16380:	cmp	r4, r3
   16384:	bhi	163c8 <abort@plt+0x55e0>
   16388:	add	r4, r4, #1
   1638c:	add	r4, r4, r2
   16390:	mov	r1, r4
   16394:	mov	r2, #1
   16398:	bl	16f14 <abort@plt+0x612c>
   1639c:	cmp	r0, #0
   163a0:	beq	163cc <abort@plt+0x55e4>
   163a4:	str	r4, [r5]
   163a8:	pop	{r4, r5, r6, pc}
   163ac:	cmp	r4, #0
   163b0:	moveq	r4, #64	; 0x40
   163b4:	mov	r1, r4
   163b8:	mov	r2, #1
   163bc:	bl	16f14 <abort@plt+0x612c>
   163c0:	cmp	r0, #0
   163c4:	bne	163a4 <abort@plt+0x55bc>
   163c8:	bl	16874 <abort@plt+0x5a8c>
   163cc:	cmp	r4, #0
   163d0:	bne	163c8 <abort@plt+0x55e0>
   163d4:	str	r4, [r5]
   163d8:	pop	{r4, r5, r6, pc}
   163dc:	cmp	r0, #0
   163e0:	push	{r4, r5, r6, lr}
   163e4:	mov	r5, r1
   163e8:	ldr	r4, [r1]
   163ec:	mov	r6, r2
   163f0:	beq	16434 <abort@plt+0x564c>
   163f4:	lsr	r1, r4, #1
   163f8:	add	r3, r1, #1
   163fc:	mvn	r3, r3
   16400:	cmp	r4, r3
   16404:	bhi	1646c <abort@plt+0x5684>
   16408:	add	r4, r4, #1
   1640c:	add	r4, r4, r1
   16410:	mov	r1, r4
   16414:	bl	16f14 <abort@plt+0x612c>
   16418:	cmp	r0, #0
   1641c:	bne	1642c <abort@plt+0x5644>
   16420:	cmp	r4, #0
   16424:	cmpne	r6, #0
   16428:	bne	1646c <abort@plt+0x5684>
   1642c:	str	r4, [r5]
   16430:	pop	{r4, r5, r6, pc}
   16434:	cmp	r4, #0
   16438:	bne	16454 <abort@plt+0x566c>
   1643c:	mov	r1, r2
   16440:	mov	r0, #64	; 0x40
   16444:	bl	17054 <abort@plt+0x626c>
   16448:	cmp	r0, #0
   1644c:	movne	r4, r0
   16450:	addeq	r4, r0, #1
   16454:	mov	r2, r6
   16458:	mov	r1, r4
   1645c:	mov	r0, #0
   16460:	bl	16f14 <abort@plt+0x612c>
   16464:	cmp	r0, #0
   16468:	bne	1642c <abort@plt+0x5644>
   1646c:	bl	16874 <abort@plt+0x5a8c>
   16470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16474:	sub	sp, sp, #12
   16478:	ldr	r6, [r1]
   1647c:	mov	r8, r1
   16480:	mov	r9, r0
   16484:	asrs	r4, r6, #1
   16488:	mov	sl, r2
   1648c:	mov	fp, r3
   16490:	ldr	r7, [sp, #48]	; 0x30
   16494:	bmi	16610 <abort@plt+0x5828>
   16498:	mvn	r1, #-2147483648	; 0x80000000
   1649c:	sub	r1, r1, r4
   164a0:	cmp	r6, r1
   164a4:	movle	r1, #0
   164a8:	movgt	r1, #1
   164ac:	mvn	r3, fp
   164b0:	cmp	r1, #0
   164b4:	addeq	r4, r4, r6
   164b8:	mvnne	r4, #-2147483648	; 0x80000000
   164bc:	lsr	r3, r3, #31
   164c0:	cmp	fp, r4
   164c4:	movge	r2, #0
   164c8:	andlt	r2, r3, #1
   164cc:	cmp	r2, #0
   164d0:	beq	165c0 <abort@plt+0x57d8>
   164d4:	cmp	r7, #0
   164d8:	blt	166a8 <abort@plt+0x58c0>
   164dc:	bne	166a0 <abort@plt+0x58b8>
   164e0:	mov	r5, #64	; 0x40
   164e4:	mov	r1, r7
   164e8:	mov	r0, r5
   164ec:	str	r3, [sp, #4]
   164f0:	bl	17260 <abort@plt+0x6478>
   164f4:	mov	r1, r7
   164f8:	mov	r4, r0
   164fc:	mov	r0, r5
   16500:	bl	17480 <abort@plt+0x6698>
   16504:	ldr	r3, [sp, #4]
   16508:	sub	r5, r5, r1
   1650c:	cmp	r9, #0
   16510:	sub	r2, r4, r6
   16514:	streq	r9, [r8]
   16518:	cmp	r2, sl
   1651c:	bge	165a0 <abort@plt+0x57b8>
   16520:	cmp	sl, #0
   16524:	blt	16640 <abort@plt+0x5858>
   16528:	cmp	r6, #0
   1652c:	blt	1654c <abort@plt+0x5764>
   16530:	mvn	r2, #-2147483648	; 0x80000000
   16534:	sub	r2, r2, sl
   16538:	cmp	r6, r2
   1653c:	movle	r2, #0
   16540:	movgt	r2, #1
   16544:	cmp	r2, #0
   16548:	bne	1663c <abort@plt+0x5854>
   1654c:	add	r6, r6, sl
   16550:	cmp	fp, r6
   16554:	movge	r3, #0
   16558:	andlt	r3, r3, #1
   1655c:	cmp	r3, #0
   16560:	mov	r4, r6
   16564:	bne	1663c <abort@plt+0x5854>
   16568:	cmp	r7, #0
   1656c:	blt	16654 <abort@plt+0x586c>
   16570:	beq	1659c <abort@plt+0x57b4>
   16574:	cmp	r6, #0
   16578:	blt	166f8 <abort@plt+0x5910>
   1657c:	mov	r1, r7
   16580:	mvn	r0, #-2147483648	; 0x80000000
   16584:	bl	17260 <abort@plt+0x6478>
   16588:	cmp	r6, r0
   1658c:	movle	r0, #0
   16590:	movgt	r0, #1
   16594:	cmp	r0, #0
   16598:	bne	1663c <abort@plt+0x5854>
   1659c:	mul	r5, r6, r7
   165a0:	mov	r1, r5
   165a4:	mov	r0, r9
   165a8:	bl	16a74 <abort@plt+0x5c8c>
   165ac:	cmp	r0, #0
   165b0:	beq	16624 <abort@plt+0x583c>
   165b4:	str	r4, [r8]
   165b8:	add	sp, sp, #12
   165bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165c0:	cmp	r7, #0
   165c4:	blt	16680 <abort@plt+0x5898>
   165c8:	beq	164e0 <abort@plt+0x56f8>
   165cc:	cmp	r4, #0
   165d0:	blt	166b0 <abort@plt+0x58c8>
   165d4:	mov	r1, r7
   165d8:	mvn	r0, #-2147483648	; 0x80000000
   165dc:	str	r3, [sp, #4]
   165e0:	bl	17260 <abort@plt+0x6478>
   165e4:	ldr	r3, [sp, #4]
   165e8:	cmp	r0, r4
   165ec:	movge	r0, #0
   165f0:	movlt	r0, #1
   165f4:	cmp	r0, #0
   165f8:	mvnne	r5, #-2147483648	; 0x80000000
   165fc:	bne	164e4 <abort@plt+0x56fc>
   16600:	mul	r5, r7, r4
   16604:	cmp	r5, #63	; 0x3f
   16608:	bgt	1650c <abort@plt+0x5724>
   1660c:	b	164e0 <abort@plt+0x56f8>
   16610:	rsb	r1, r4, #-2147483648	; 0x80000000
   16614:	cmp	r6, r1
   16618:	movge	r1, #0
   1661c:	movlt	r1, #1
   16620:	b	164ac <abort@plt+0x56c4>
   16624:	adds	r5, r5, #0
   16628:	movne	r5, #1
   1662c:	cmp	r9, #0
   16630:	orreq	r5, r5, #1
   16634:	cmp	r5, #0
   16638:	beq	165b4 <abort@plt+0x57cc>
   1663c:	bl	16874 <abort@plt+0x5a8c>
   16640:	rsb	r2, sl, #-2147483648	; 0x80000000
   16644:	cmp	r6, r2
   16648:	movge	r2, #0
   1664c:	movlt	r2, #1
   16650:	b	16544 <abort@plt+0x575c>
   16654:	cmp	r6, #0
   16658:	blt	166dc <abort@plt+0x58f4>
   1665c:	cmn	r7, #1
   16660:	beq	1659c <abort@plt+0x57b4>
   16664:	mov	r1, r7
   16668:	mov	r0, #-2147483648	; 0x80000000
   1666c:	bl	17260 <abort@plt+0x6478>
   16670:	cmp	r6, r0
   16674:	movle	r0, #0
   16678:	movgt	r0, #1
   1667c:	b	16594 <abort@plt+0x57ac>
   16680:	cmp	r4, #0
   16684:	blt	1671c <abort@plt+0x5934>
   16688:	cmn	r7, #1
   1668c:	beq	16600 <abort@plt+0x5818>
   16690:	str	r3, [sp, #4]
   16694:	mov	r1, r7
   16698:	mov	r0, #-2147483648	; 0x80000000
   1669c:	b	165e0 <abort@plt+0x57f8>
   166a0:	mov	r4, fp
   166a4:	b	165d4 <abort@plt+0x57ec>
   166a8:	mov	r4, fp
   166ac:	b	16688 <abort@plt+0x58a0>
   166b0:	cmn	r4, #1
   166b4:	beq	16600 <abort@plt+0x5818>
   166b8:	mov	r1, r4
   166bc:	mov	r0, #-2147483648	; 0x80000000
   166c0:	str	r3, [sp, #4]
   166c4:	bl	17260 <abort@plt+0x6478>
   166c8:	ldr	r3, [sp, #4]
   166cc:	cmp	r7, r0
   166d0:	movle	r0, #0
   166d4:	movgt	r0, #1
   166d8:	b	165f4 <abort@plt+0x580c>
   166dc:	mov	r1, r7
   166e0:	mvn	r0, #-2147483648	; 0x80000000
   166e4:	bl	17260 <abort@plt+0x6478>
   166e8:	cmp	r6, r0
   166ec:	movge	r0, #0
   166f0:	movlt	r0, #1
   166f4:	b	16594 <abort@plt+0x57ac>
   166f8:	cmn	r6, #1
   166fc:	beq	1659c <abort@plt+0x57b4>
   16700:	mov	r1, r6
   16704:	mov	r0, #-2147483648	; 0x80000000
   16708:	bl	17260 <abort@plt+0x6478>
   1670c:	cmp	r7, r0
   16710:	movle	r0, #0
   16714:	movgt	r0, #1
   16718:	b	16594 <abort@plt+0x57ac>
   1671c:	mov	r1, r7
   16720:	mvn	r0, #-2147483648	; 0x80000000
   16724:	str	r3, [sp, #4]
   16728:	bl	17260 <abort@plt+0x6478>
   1672c:	ldr	r3, [sp, #4]
   16730:	cmp	r0, r4
   16734:	movle	r0, #0
   16738:	movgt	r0, #1
   1673c:	b	165f4 <abort@plt+0x580c>
   16740:	push	{r4, lr}
   16744:	mov	r1, #1
   16748:	bl	16a00 <abort@plt+0x5c18>
   1674c:	cmp	r0, #0
   16750:	popne	{r4, pc}
   16754:	bl	16874 <abort@plt+0x5a8c>
   16758:	push	{r4, lr}
   1675c:	mov	r1, #1
   16760:	bl	16a00 <abort@plt+0x5c18>
   16764:	cmp	r0, #0
   16768:	popne	{r4, pc}
   1676c:	bl	16874 <abort@plt+0x5a8c>
   16770:	push	{r4, lr}
   16774:	bl	16a00 <abort@plt+0x5c18>
   16778:	cmp	r0, #0
   1677c:	popne	{r4, pc}
   16780:	bl	16874 <abort@plt+0x5a8c>
   16784:	push	{r4, lr}
   16788:	bl	16a00 <abort@plt+0x5c18>
   1678c:	cmp	r0, #0
   16790:	popne	{r4, pc}
   16794:	bl	16874 <abort@plt+0x5a8c>
   16798:	push	{r4, r5, r6, lr}
   1679c:	mov	r6, r0
   167a0:	mov	r0, r1
   167a4:	mov	r4, r1
   167a8:	bl	16a48 <abort@plt+0x5c60>
   167ac:	subs	r5, r0, #0
   167b0:	beq	167c8 <abort@plt+0x59e0>
   167b4:	mov	r2, r4
   167b8:	mov	r1, r6
   167bc:	bl	10c20 <memcpy@plt>
   167c0:	mov	r0, r5
   167c4:	pop	{r4, r5, r6, pc}
   167c8:	bl	16874 <abort@plt+0x5a8c>
   167cc:	push	{r4, r5, r6, lr}
   167d0:	mov	r6, r0
   167d4:	mov	r0, r1
   167d8:	mov	r4, r1
   167dc:	bl	16a48 <abort@plt+0x5c60>
   167e0:	subs	r5, r0, #0
   167e4:	beq	167fc <abort@plt+0x5a14>
   167e8:	mov	r2, r4
   167ec:	mov	r1, r6
   167f0:	bl	10c20 <memcpy@plt>
   167f4:	mov	r0, r5
   167f8:	pop	{r4, r5, r6, pc}
   167fc:	bl	16874 <abort@plt+0x5a8c>
   16800:	push	{r4, r5, r6, lr}
   16804:	mov	r6, r0
   16808:	add	r0, r1, #1
   1680c:	mov	r4, r1
   16810:	bl	16a48 <abort@plt+0x5c60>
   16814:	subs	r5, r0, #0
   16818:	beq	16838 <abort@plt+0x5a50>
   1681c:	mov	r3, #0
   16820:	mov	r1, r6
   16824:	strb	r3, [r5, r4]
   16828:	mov	r2, r4
   1682c:	bl	10c20 <memcpy@plt>
   16830:	mov	r0, r5
   16834:	pop	{r4, r5, r6, pc}
   16838:	bl	16874 <abort@plt+0x5a8c>
   1683c:	push	{r4, r5, r6, lr}
   16840:	mov	r6, r0
   16844:	bl	10d1c <strlen@plt>
   16848:	add	r4, r0, #1
   1684c:	mov	r0, r4
   16850:	bl	16a48 <abort@plt+0x5c60>
   16854:	subs	r5, r0, #0
   16858:	beq	16870 <abort@plt+0x5a88>
   1685c:	mov	r2, r4
   16860:	mov	r1, r6
   16864:	bl	10c20 <memcpy@plt>
   16868:	mov	r0, r5
   1686c:	pop	{r4, r5, r6, pc}
   16870:	bl	16874 <abort@plt+0x5a8c>
   16874:	ldr	r3, [pc, #44]	; 168a8 <abort@plt+0x5ac0>
   16878:	push	{r4, lr}
   1687c:	mov	r2, #5
   16880:	ldr	r1, [pc, #36]	; 168ac <abort@plt+0x5ac4>
   16884:	mov	r0, #0
   16888:	ldr	r4, [r3]
   1688c:	bl	10c50 <dcgettext@plt>
   16890:	ldr	r2, [pc, #24]	; 168b0 <abort@plt+0x5ac8>
   16894:	mov	r1, #0
   16898:	mov	r3, r0
   1689c:	mov	r0, r4
   168a0:	bl	10cbc <error@plt>
   168a4:	bl	10de8 <abort@plt>
   168a8:	ldrdeq	r8, [r2], -ip
   168ac:	andeq	r7, r1, r4, lsr #27
   168b0:	andeq	r7, r1, r4, lsr #18
   168b4:	andeq	r0, r0, r0
   168b8:	vldr	d7, [pc, #144]	; 16950 <abort@plt+0x5b68>
   168bc:	push	{r4, r5, lr}
   168c0:	vpush	{d8}
   168c4:	vmov.f64	d8, d0
   168c8:	vcmpe.f64	d0, d7
   168cc:	sub	sp, sp, #12
   168d0:	vmrs	APSR_nzcv, fpscr
   168d4:	bge	16924 <abort@plt+0x5b3c>
   168d8:	bl	10d28 <__errno_location@plt>
   168dc:	mov	r4, r0
   168e0:	vmov.f64	d0, d8
   168e4:	mov	r0, sp
   168e8:	bl	16bc8 <abort@plt+0x5de0>
   168ec:	mov	r5, #0
   168f0:	b	16900 <abort@plt+0x5b18>
   168f4:	ldr	r3, [r4]
   168f8:	bics	r3, r3, #4
   168fc:	bne	16940 <abort@plt+0x5b58>
   16900:	str	r5, [r4]
   16904:	mov	r1, sp
   16908:	mov	r0, sp
   1690c:	bl	10c08 <nanosleep@plt>
   16910:	cmp	r0, #0
   16914:	bne	168f4 <abort@plt+0x5b0c>
   16918:	add	sp, sp, #12
   1691c:	vpop	{d8}
   16920:	pop	{r4, r5, pc}
   16924:	bl	10d28 <__errno_location@plt>
   16928:	mov	r4, r0
   1692c:	bl	10be4 <pause@plt>
   16930:	ldr	r3, [r4]
   16934:	cmp	r3, #4
   16938:	beq	1692c <abort@plt+0x5b44>
   1693c:	b	168e0 <abort@plt+0x5af8>
   16940:	mvn	r0, #0
   16944:	add	sp, sp, #12
   16948:	vpop	{d8}
   1694c:	pop	{r4, r5, pc}
   16950:	andeq	r0, r0, r0
   16954:	mvnmi	r0, r0
   16958:	push	{r4, r5, r6, r7, r8, r9, lr}
   1695c:	sub	sp, sp, #12
   16960:	mov	r6, r0
   16964:	mov	r9, r3
   16968:	mov	r5, r1
   1696c:	mov	r8, r2
   16970:	bl	10d28 <__errno_location@plt>
   16974:	mov	r4, #0
   16978:	add	r1, sp, #4
   1697c:	str	r4, [r0]
   16980:	mov	r7, r0
   16984:	mov	r0, r6
   16988:	blx	r9
   1698c:	ldr	r3, [sp, #4]
   16990:	cmp	r6, r3
   16994:	beq	169d4 <abort@plt+0x5bec>
   16998:	cmp	r5, r4
   1699c:	beq	169dc <abort@plt+0x5bf4>
   169a0:	vcmp.f64	d0, #0.0
   169a4:	vmrs	APSR_nzcv, fpscr
   169a8:	moveq	r0, #1
   169ac:	beq	169c4 <abort@plt+0x5bdc>
   169b0:	ldr	r0, [r7]
   169b4:	subs	r0, r0, #34	; 0x22
   169b8:	movne	r0, #1
   169bc:	cmp	r5, #0
   169c0:	beq	169c8 <abort@plt+0x5be0>
   169c4:	str	r3, [r5]
   169c8:	vstr	d0, [r8]
   169cc:	add	sp, sp, #12
   169d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   169d4:	mov	r0, r4
   169d8:	b	169bc <abort@plt+0x5bd4>
   169dc:	ldrb	r2, [r3]
   169e0:	cmp	r2, r4
   169e4:	movne	r0, r5
   169e8:	bne	169c8 <abort@plt+0x5be0>
   169ec:	vcmp.f64	d0, #0.0
   169f0:	vmrs	APSR_nzcv, fpscr
   169f4:	bne	169b0 <abort@plt+0x5bc8>
   169f8:	mov	r0, #1
   169fc:	b	169c8 <abort@plt+0x5be0>
   16a00:	cmp	r1, #0
   16a04:	cmpne	r0, #0
   16a08:	moveq	r1, #1
   16a0c:	moveq	r0, r1
   16a10:	umull	r2, r3, r0, r1
   16a14:	adds	r3, r3, #0
   16a18:	movne	r3, #1
   16a1c:	cmp	r2, #0
   16a20:	blt	16a30 <abort@plt+0x5c48>
   16a24:	cmp	r3, #0
   16a28:	bne	16a30 <abort@plt+0x5c48>
   16a2c:	b	10bb4 <calloc@plt>
   16a30:	push	{r4, lr}
   16a34:	bl	10d28 <__errno_location@plt>
   16a38:	mov	r3, #12
   16a3c:	str	r3, [r0]
   16a40:	mov	r0, #0
   16a44:	pop	{r4, pc}
   16a48:	cmp	r0, #0
   16a4c:	moveq	r0, #1
   16a50:	cmp	r0, #0
   16a54:	blt	16a5c <abort@plt+0x5c74>
   16a58:	b	10cc8 <malloc@plt>
   16a5c:	push	{r4, lr}
   16a60:	bl	10d28 <__errno_location@plt>
   16a64:	mov	r3, #12
   16a68:	str	r3, [r0]
   16a6c:	mov	r0, #0
   16a70:	pop	{r4, pc}
   16a74:	cmp	r0, #0
   16a78:	beq	16a9c <abort@plt+0x5cb4>
   16a7c:	cmp	r1, #0
   16a80:	push	{lr}		; (str lr, [sp, #-4]!)
   16a84:	sub	sp, sp, #12
   16a88:	beq	16aa4 <abort@plt+0x5cbc>
   16a8c:	blt	16abc <abort@plt+0x5cd4>
   16a90:	add	sp, sp, #12
   16a94:	pop	{lr}		; (ldr lr, [sp], #4)
   16a98:	b	10c5c <realloc@plt>
   16a9c:	mov	r0, r1
   16aa0:	b	16a48 <abort@plt+0x5c60>
   16aa4:	str	r1, [sp, #4]
   16aa8:	bl	16d94 <abort@plt+0x5fac>
   16aac:	ldr	r3, [sp, #4]
   16ab0:	mov	r0, r3
   16ab4:	add	sp, sp, #12
   16ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   16abc:	bl	10d28 <__errno_location@plt>
   16ac0:	mov	r2, #12
   16ac4:	mov	r3, #0
   16ac8:	str	r2, [r0]
   16acc:	b	16ab0 <abort@plt+0x5cc8>
   16ad0:	push	{r4, r5, r6, lr}
   16ad4:	mov	r6, r0
   16ad8:	ldr	r4, [pc, #96]	; 16b40 <abort@plt+0x5d58>
   16adc:	mov	r5, r1
   16ae0:	ldr	r2, [r4]
   16ae4:	cmp	r2, #0
   16ae8:	beq	16b1c <abort@plt+0x5d34>
   16aec:	ldr	r2, [r4]
   16af0:	cmp	r2, #0
   16af4:	beq	16b08 <abort@plt+0x5d20>
   16af8:	mov	r1, r5
   16afc:	mov	r0, r6
   16b00:	pop	{r4, r5, r6, lr}
   16b04:	b	10d94 <strtod_l@plt>
   16b08:	cmp	r5, #0
   16b0c:	beq	16b30 <abort@plt+0x5d48>
   16b10:	str	r6, [r5]
   16b14:	vldr	d0, [pc, #28]	; 16b38 <abort@plt+0x5d50>
   16b18:	pop	{r4, r5, r6, pc}
   16b1c:	ldr	r1, [pc, #32]	; 16b44 <abort@plt+0x5d5c>
   16b20:	ldr	r0, [pc, #32]	; 16b48 <abort@plt+0x5d60>
   16b24:	bl	10dc4 <newlocale@plt>
   16b28:	str	r0, [r4]
   16b2c:	b	16aec <abort@plt+0x5d04>
   16b30:	vldr	d0, [pc]	; 16b38 <abort@plt+0x5d50>
   16b34:	pop	{r4, r5, r6, pc}
	...
   16b40:	andeq	r8, r2, ip, ror r2
   16b44:			; <UNDEFINED> instruction: 0x00017db8
   16b48:			; <UNDEFINED> instruction: 0x00001fbf
   16b4c:	push	{r4, r5, r6, lr}
   16b50:	mov	r4, r0
   16b54:	bl	10ca4 <__fpending@plt>
   16b58:	ldr	r5, [r4]
   16b5c:	and	r5, r5, #32
   16b60:	mov	r6, r0
   16b64:	mov	r0, r4
   16b68:	bl	16c94 <abort@plt+0x5eac>
   16b6c:	cmp	r5, #0
   16b70:	mov	r4, r0
   16b74:	bne	16b94 <abort@plt+0x5dac>
   16b78:	cmp	r0, #0
   16b7c:	beq	16b8c <abort@plt+0x5da4>
   16b80:	cmp	r6, #0
   16b84:	beq	16bb0 <abort@plt+0x5dc8>
   16b88:	mvn	r4, #0
   16b8c:	mov	r0, r4
   16b90:	pop	{r4, r5, r6, pc}
   16b94:	cmp	r0, #0
   16b98:	bne	16b88 <abort@plt+0x5da0>
   16b9c:	bl	10d28 <__errno_location@plt>
   16ba0:	str	r4, [r0]
   16ba4:	mvn	r4, #0
   16ba8:	mov	r0, r4
   16bac:	pop	{r4, r5, r6, pc}
   16bb0:	bl	10d28 <__errno_location@plt>
   16bb4:	ldr	r4, [r0]
   16bb8:	subs	r4, r4, #9
   16bbc:	mvnne	r4, #0
   16bc0:	mov	r0, r4
   16bc4:	pop	{r4, r5, r6, pc}
   16bc8:	vldr	d7, [pc, #160]	; 16c70 <abort@plt+0x5e88>
   16bcc:	vcmpe.f64	d0, d7
   16bd0:	vmrs	APSR_nzcv, fpscr
   16bd4:	ble	16c60 <abort@plt+0x5e78>
   16bd8:	vldr	d7, [pc, #152]	; 16c78 <abort@plt+0x5e90>
   16bdc:	vcmpe.f64	d0, d7
   16be0:	vmrs	APSR_nzcv, fpscr
   16be4:	bpl	16c50 <abort@plt+0x5e68>
   16be8:	vcvt.s32.f64	s14, d0
   16bec:	vldr	d6, [pc, #140]	; 16c80 <abort@plt+0x5e98>
   16bf0:	ldr	r2, [pc, #144]	; 16c88 <abort@plt+0x5ea0>
   16bf4:	ldr	ip, [pc, #144]	; 16c8c <abort@plt+0x5ea4>
   16bf8:	vcvt.f64.s32	d5, s14
   16bfc:	vsub.f64	d0, d0, d5
   16c00:	vmul.f64	d0, d0, d6
   16c04:	vcvt.s32.f64	s15, d0
   16c08:	vcvt.f64.s32	d6, s15
   16c0c:	vmov	r1, s15
   16c10:	vcmpe.f64	d0, d6
   16c14:	vmrs	APSR_nzcv, fpscr
   16c18:	movgt	r3, #1
   16c1c:	movle	r3, #0
   16c20:	add	r3, r1, r3
   16c24:	smull	r2, r1, r2, r3
   16c28:	asr	r2, r3, #31
   16c2c:	rsb	r2, r2, r1, asr #28
   16c30:	vmov	r1, s14
   16c34:	add	r1, r2, r1
   16c38:	mul	r2, ip, r2
   16c3c:	subs	r3, r3, r2
   16c40:	submi	r1, r1, #1
   16c44:	addmi	r3, r3, ip
   16c48:	stm	r0, {r1, r3}
   16c4c:	bx	lr
   16c50:	ldr	r3, [pc, #56]	; 16c90 <abort@plt+0x5ea8>
   16c54:	mvn	r2, #-2147483648	; 0x80000000
   16c58:	stm	r0, {r2, r3}
   16c5c:	bx	lr
   16c60:	mov	r2, #-2147483648	; 0x80000000
   16c64:	mov	r3, #0
   16c68:	stm	r0, {r2, r3}
   16c6c:	bx	lr
   16c70:	andeq	r0, r0, r0
   16c74:	mvngt	r0, r0
   16c78:	andeq	r0, r0, r0
   16c7c:	mvnmi	r0, r0
   16c80:	andeq	r0, r0, r0
   16c84:	bicmi	ip, sp, r5, ror #26
   16c88:	ldrtmi	r2, [r8], #4001	; 0xfa1
   16c8c:	blcc	fe6c9494 <opterr@@GLIBC_2.4+0xfe6a135c>
   16c90:	blcc	fe6c9494 <opterr@@GLIBC_2.4+0xfe6a135c>
   16c94:	push	{r4, r5, lr}
   16c98:	sub	sp, sp, #12
   16c9c:	mov	r4, r0
   16ca0:	bl	10d64 <fileno@plt>
   16ca4:	cmp	r0, #0
   16ca8:	mov	r0, r4
   16cac:	blt	16d28 <abort@plt+0x5f40>
   16cb0:	bl	10ce0 <__freading@plt>
   16cb4:	cmp	r0, #0
   16cb8:	bne	16cf4 <abort@plt+0x5f0c>
   16cbc:	mov	r0, r4
   16cc0:	bl	16d34 <abort@plt+0x5f4c>
   16cc4:	cmp	r0, #0
   16cc8:	beq	16d24 <abort@plt+0x5f3c>
   16ccc:	bl	10d28 <__errno_location@plt>
   16cd0:	mov	r5, r0
   16cd4:	mov	r0, r4
   16cd8:	ldr	r4, [r5]
   16cdc:	bl	10d7c <fclose@plt>
   16ce0:	cmp	r4, #0
   16ce4:	mvnne	r0, #0
   16ce8:	strne	r4, [r5]
   16cec:	add	sp, sp, #12
   16cf0:	pop	{r4, r5, pc}
   16cf4:	mov	r0, r4
   16cf8:	bl	10d64 <fileno@plt>
   16cfc:	mov	r3, #1
   16d00:	str	r3, [sp]
   16d04:	mov	r2, #0
   16d08:	mov	r3, #0
   16d0c:	bl	10c8c <lseek64@plt>
   16d10:	mvn	r3, #0
   16d14:	mvn	r2, #0
   16d18:	cmp	r1, r3
   16d1c:	cmpeq	r0, r2
   16d20:	bne	16cbc <abort@plt+0x5ed4>
   16d24:	mov	r0, r4
   16d28:	add	sp, sp, #12
   16d2c:	pop	{r4, r5, lr}
   16d30:	b	10d7c <fclose@plt>
   16d34:	push	{r4, lr}
   16d38:	subs	r4, r0, #0
   16d3c:	sub	sp, sp, #8
   16d40:	beq	16d5c <abort@plt+0x5f74>
   16d44:	bl	10ce0 <__freading@plt>
   16d48:	cmp	r0, #0
   16d4c:	beq	16d5c <abort@plt+0x5f74>
   16d50:	ldr	r3, [r4]
   16d54:	tst	r3, #256	; 0x100
   16d58:	bne	16d6c <abort@plt+0x5f84>
   16d5c:	mov	r0, r4
   16d60:	add	sp, sp, #8
   16d64:	pop	{r4, lr}
   16d68:	b	10bf0 <fflush@plt>
   16d6c:	mov	r3, #1
   16d70:	str	r3, [sp]
   16d74:	mov	r2, #0
   16d78:	mov	r3, #0
   16d7c:	mov	r0, r4
   16d80:	bl	16dec <abort@plt+0x6004>
   16d84:	mov	r0, r4
   16d88:	add	sp, sp, #8
   16d8c:	pop	{r4, lr}
   16d90:	b	10bf0 <fflush@plt>
   16d94:	push	{r4, r5, lr}
   16d98:	sub	sp, sp, #12
   16d9c:	mov	r5, r0
   16da0:	bl	10d28 <__errno_location@plt>
   16da4:	mov	r2, #0
   16da8:	mov	r4, r0
   16dac:	ldr	r3, [r0]
   16db0:	str	r2, [r4]
   16db4:	mov	r0, r5
   16db8:	str	r3, [sp]
   16dbc:	str	r3, [sp, #4]
   16dc0:	bl	10bfc <free@plt>
   16dc4:	ldr	r3, [r4]
   16dc8:	add	r2, sp, #8
   16dcc:	cmp	r3, #0
   16dd0:	moveq	r3, #4
   16dd4:	movne	r3, #0
   16dd8:	add	r3, r2, r3
   16ddc:	ldr	r3, [r3, #-8]
   16de0:	str	r3, [r4]
   16de4:	add	sp, sp, #12
   16de8:	pop	{r4, r5, pc}
   16dec:	push	{r4, r5, r6, r7, r8, lr}
   16df0:	sub	sp, sp, #8
   16df4:	ldmib	r0, {ip, lr}
   16df8:	mov	r4, r0
   16dfc:	ldr	r5, [sp, #32]
   16e00:	cmp	lr, ip
   16e04:	beq	16e1c <abort@plt+0x6034>
   16e08:	str	r5, [sp, #32]
   16e0c:	mov	r0, r4
   16e10:	add	sp, sp, #8
   16e14:	pop	{r4, r5, r6, r7, r8, lr}
   16e18:	b	10d88 <fseeko64@plt>
   16e1c:	ldr	lr, [r0, #20]
   16e20:	ldr	ip, [r0, #16]
   16e24:	cmp	lr, ip
   16e28:	bne	16e08 <abort@plt+0x6020>
   16e2c:	ldr	r8, [r0, #36]	; 0x24
   16e30:	cmp	r8, #0
   16e34:	bne	16e08 <abort@plt+0x6020>
   16e38:	mov	r6, r2
   16e3c:	mov	r7, r3
   16e40:	bl	10d64 <fileno@plt>
   16e44:	mov	r2, r6
   16e48:	mov	r3, r7
   16e4c:	str	r5, [sp]
   16e50:	bl	10c8c <lseek64@plt>
   16e54:	mvn	r3, #0
   16e58:	mvn	r2, #0
   16e5c:	cmp	r1, r3
   16e60:	cmpeq	r0, r2
   16e64:	beq	16e84 <abort@plt+0x609c>
   16e68:	ldr	r3, [r4]
   16e6c:	strd	r0, [r4, #80]	; 0x50
   16e70:	mov	r0, r8
   16e74:	bic	r3, r3, #16
   16e78:	str	r3, [r4]
   16e7c:	add	sp, sp, #8
   16e80:	pop	{r4, r5, r6, r7, r8, pc}
   16e84:	mvn	r0, #0
   16e88:	b	16e7c <abort@plt+0x6094>
   16e8c:	push	{r4, lr}
   16e90:	mov	r0, #14
   16e94:	bl	10db8 <nl_langinfo@plt>
   16e98:	cmp	r0, #0
   16e9c:	beq	16eb4 <abort@plt+0x60cc>
   16ea0:	ldrb	r2, [r0]
   16ea4:	ldr	r3, [pc, #16]	; 16ebc <abort@plt+0x60d4>
   16ea8:	cmp	r2, #0
   16eac:	moveq	r0, r3
   16eb0:	pop	{r4, pc}
   16eb4:	ldr	r0, [pc]	; 16ebc <abort@plt+0x60d4>
   16eb8:	pop	{r4, pc}
   16ebc:			; <UNDEFINED> instruction: 0x00017dbc
   16ec0:	push	{r4, r5, r6, r7, lr}
   16ec4:	subs	r6, r0, #0
   16ec8:	sub	sp, sp, #12
   16ecc:	addeq	r6, sp, #4
   16ed0:	mov	r0, r6
   16ed4:	mov	r5, r2
   16ed8:	mov	r7, r1
   16edc:	bl	10cb0 <mbrtowc@plt>
   16ee0:	cmp	r5, #0
   16ee4:	cmnne	r0, #3
   16ee8:	mov	r4, r0
   16eec:	bls	16f08 <abort@plt+0x6120>
   16ef0:	mov	r0, #0
   16ef4:	bl	16f60 <abort@plt+0x6178>
   16ef8:	cmp	r0, #0
   16efc:	moveq	r4, #1
   16f00:	ldrbeq	r3, [r7]
   16f04:	streq	r3, [r6]
   16f08:	mov	r0, r4
   16f0c:	add	sp, sp, #12
   16f10:	pop	{r4, r5, r6, r7, pc}
   16f14:	push	{r4, r5, r6, lr}
   16f18:	subs	r4, r2, #0
   16f1c:	mov	r6, r0
   16f20:	mov	r5, r1
   16f24:	beq	16f50 <abort@plt+0x6168>
   16f28:	mov	r1, r4
   16f2c:	mvn	r0, #0
   16f30:	bl	17054 <abort@plt+0x626c>
   16f34:	cmp	r0, r5
   16f38:	bcs	16f50 <abort@plt+0x6168>
   16f3c:	bl	10d28 <__errno_location@plt>
   16f40:	mov	r3, #12
   16f44:	str	r3, [r0]
   16f48:	mov	r0, #0
   16f4c:	pop	{r4, r5, r6, pc}
   16f50:	mul	r1, r5, r4
   16f54:	mov	r0, r6
   16f58:	pop	{r4, r5, r6, lr}
   16f5c:	b	16a74 <abort@plt+0x5c8c>
   16f60:	push	{lr}		; (str lr, [sp, #-4]!)
   16f64:	sub	sp, sp, #268	; 0x10c
   16f68:	add	r1, sp, #4
   16f6c:	ldr	r2, [pc, #60]	; 16fb0 <abort@plt+0x61c8>
   16f70:	bl	16fbc <abort@plt+0x61d4>
   16f74:	cmp	r0, #0
   16f78:	movne	r0, #0
   16f7c:	bne	16fa8 <abort@plt+0x61c0>
   16f80:	ldr	r1, [pc, #44]	; 16fb4 <abort@plt+0x61cc>
   16f84:	add	r0, sp, #4
   16f88:	bl	10bd8 <strcmp@plt>
   16f8c:	cmp	r0, #0
   16f90:	beq	16fa8 <abort@plt+0x61c0>
   16f94:	add	r0, sp, #4
   16f98:	ldr	r1, [pc, #24]	; 16fb8 <abort@plt+0x61d0>
   16f9c:	bl	10bd8 <strcmp@plt>
   16fa0:	adds	r0, r0, #0
   16fa4:	movne	r0, #1
   16fa8:	add	sp, sp, #268	; 0x10c
   16fac:	pop	{pc}		; (ldr pc, [sp], #4)
   16fb0:	andeq	r0, r0, r1, lsl #2
   16fb4:			; <UNDEFINED> instruction: 0x00017db8
   16fb8:	andeq	r7, r1, r4, asr #27
   16fbc:	push	{r4, r5, r6, lr}
   16fc0:	mov	r5, r1
   16fc4:	mov	r1, #0
   16fc8:	mov	r4, r2
   16fcc:	bl	10da0 <setlocale@plt>
   16fd0:	subs	r6, r0, #0
   16fd4:	beq	17030 <abort@plt+0x6248>
   16fd8:	bl	10d1c <strlen@plt>
   16fdc:	cmp	r4, r0
   16fe0:	bhi	17018 <abort@plt+0x6230>
   16fe4:	cmp	r4, #0
   16fe8:	bne	16ff4 <abort@plt+0x620c>
   16fec:	mov	r0, #34	; 0x22
   16ff0:	pop	{r4, r5, r6, pc}
   16ff4:	sub	r4, r4, #1
   16ff8:	mov	r1, r6
   16ffc:	mov	r2, r4
   17000:	mov	r0, r5
   17004:	bl	10c20 <memcpy@plt>
   17008:	mov	r3, #0
   1700c:	strb	r3, [r5, r4]
   17010:	mov	r0, #34	; 0x22
   17014:	pop	{r4, r5, r6, pc}
   17018:	add	r2, r0, #1
   1701c:	mov	r1, r6
   17020:	mov	r0, r5
   17024:	bl	10c20 <memcpy@plt>
   17028:	mov	r0, #0
   1702c:	pop	{r4, r5, r6, pc}
   17030:	cmp	r4, #0
   17034:	beq	17044 <abort@plt+0x625c>
   17038:	strb	r6, [r5]
   1703c:	mov	r0, #22
   17040:	pop	{r4, r5, r6, pc}
   17044:	mov	r0, #22
   17048:	pop	{r4, r5, r6, pc}
   1704c:	mov	r1, #0
   17050:	b	10da0 <setlocale@plt>
   17054:	subs	r2, r1, #1
   17058:	bxeq	lr
   1705c:	bcc	17234 <abort@plt+0x644c>
   17060:	cmp	r0, r1
   17064:	bls	17218 <abort@plt+0x6430>
   17068:	tst	r1, r2
   1706c:	beq	17224 <abort@plt+0x643c>
   17070:	clz	r3, r0
   17074:	clz	r2, r1
   17078:	sub	r3, r2, r3
   1707c:	rsbs	r3, r3, #31
   17080:	addne	r3, r3, r3, lsl #1
   17084:	mov	r2, #0
   17088:	addne	pc, pc, r3, lsl #2
   1708c:	nop			; (mov r0, r0)
   17090:	cmp	r0, r1, lsl #31
   17094:	adc	r2, r2, r2
   17098:	subcs	r0, r0, r1, lsl #31
   1709c:	cmp	r0, r1, lsl #30
   170a0:	adc	r2, r2, r2
   170a4:	subcs	r0, r0, r1, lsl #30
   170a8:	cmp	r0, r1, lsl #29
   170ac:	adc	r2, r2, r2
   170b0:	subcs	r0, r0, r1, lsl #29
   170b4:	cmp	r0, r1, lsl #28
   170b8:	adc	r2, r2, r2
   170bc:	subcs	r0, r0, r1, lsl #28
   170c0:	cmp	r0, r1, lsl #27
   170c4:	adc	r2, r2, r2
   170c8:	subcs	r0, r0, r1, lsl #27
   170cc:	cmp	r0, r1, lsl #26
   170d0:	adc	r2, r2, r2
   170d4:	subcs	r0, r0, r1, lsl #26
   170d8:	cmp	r0, r1, lsl #25
   170dc:	adc	r2, r2, r2
   170e0:	subcs	r0, r0, r1, lsl #25
   170e4:	cmp	r0, r1, lsl #24
   170e8:	adc	r2, r2, r2
   170ec:	subcs	r0, r0, r1, lsl #24
   170f0:	cmp	r0, r1, lsl #23
   170f4:	adc	r2, r2, r2
   170f8:	subcs	r0, r0, r1, lsl #23
   170fc:	cmp	r0, r1, lsl #22
   17100:	adc	r2, r2, r2
   17104:	subcs	r0, r0, r1, lsl #22
   17108:	cmp	r0, r1, lsl #21
   1710c:	adc	r2, r2, r2
   17110:	subcs	r0, r0, r1, lsl #21
   17114:	cmp	r0, r1, lsl #20
   17118:	adc	r2, r2, r2
   1711c:	subcs	r0, r0, r1, lsl #20
   17120:	cmp	r0, r1, lsl #19
   17124:	adc	r2, r2, r2
   17128:	subcs	r0, r0, r1, lsl #19
   1712c:	cmp	r0, r1, lsl #18
   17130:	adc	r2, r2, r2
   17134:	subcs	r0, r0, r1, lsl #18
   17138:	cmp	r0, r1, lsl #17
   1713c:	adc	r2, r2, r2
   17140:	subcs	r0, r0, r1, lsl #17
   17144:	cmp	r0, r1, lsl #16
   17148:	adc	r2, r2, r2
   1714c:	subcs	r0, r0, r1, lsl #16
   17150:	cmp	r0, r1, lsl #15
   17154:	adc	r2, r2, r2
   17158:	subcs	r0, r0, r1, lsl #15
   1715c:	cmp	r0, r1, lsl #14
   17160:	adc	r2, r2, r2
   17164:	subcs	r0, r0, r1, lsl #14
   17168:	cmp	r0, r1, lsl #13
   1716c:	adc	r2, r2, r2
   17170:	subcs	r0, r0, r1, lsl #13
   17174:	cmp	r0, r1, lsl #12
   17178:	adc	r2, r2, r2
   1717c:	subcs	r0, r0, r1, lsl #12
   17180:	cmp	r0, r1, lsl #11
   17184:	adc	r2, r2, r2
   17188:	subcs	r0, r0, r1, lsl #11
   1718c:	cmp	r0, r1, lsl #10
   17190:	adc	r2, r2, r2
   17194:	subcs	r0, r0, r1, lsl #10
   17198:	cmp	r0, r1, lsl #9
   1719c:	adc	r2, r2, r2
   171a0:	subcs	r0, r0, r1, lsl #9
   171a4:	cmp	r0, r1, lsl #8
   171a8:	adc	r2, r2, r2
   171ac:	subcs	r0, r0, r1, lsl #8
   171b0:	cmp	r0, r1, lsl #7
   171b4:	adc	r2, r2, r2
   171b8:	subcs	r0, r0, r1, lsl #7
   171bc:	cmp	r0, r1, lsl #6
   171c0:	adc	r2, r2, r2
   171c4:	subcs	r0, r0, r1, lsl #6
   171c8:	cmp	r0, r1, lsl #5
   171cc:	adc	r2, r2, r2
   171d0:	subcs	r0, r0, r1, lsl #5
   171d4:	cmp	r0, r1, lsl #4
   171d8:	adc	r2, r2, r2
   171dc:	subcs	r0, r0, r1, lsl #4
   171e0:	cmp	r0, r1, lsl #3
   171e4:	adc	r2, r2, r2
   171e8:	subcs	r0, r0, r1, lsl #3
   171ec:	cmp	r0, r1, lsl #2
   171f0:	adc	r2, r2, r2
   171f4:	subcs	r0, r0, r1, lsl #2
   171f8:	cmp	r0, r1, lsl #1
   171fc:	adc	r2, r2, r2
   17200:	subcs	r0, r0, r1, lsl #1
   17204:	cmp	r0, r1
   17208:	adc	r2, r2, r2
   1720c:	subcs	r0, r0, r1
   17210:	mov	r0, r2
   17214:	bx	lr
   17218:	moveq	r0, #1
   1721c:	movne	r0, #0
   17220:	bx	lr
   17224:	clz	r2, r1
   17228:	rsb	r2, r2, #31
   1722c:	lsr	r0, r0, r2
   17230:	bx	lr
   17234:	cmp	r0, #0
   17238:	mvnne	r0, #0
   1723c:	b	174a0 <abort@plt+0x66b8>
   17240:	cmp	r1, #0
   17244:	beq	17234 <abort@plt+0x644c>
   17248:	push	{r0, r1, lr}
   1724c:	bl	17054 <abort@plt+0x626c>
   17250:	pop	{r1, r2, lr}
   17254:	mul	r3, r2, r0
   17258:	sub	r1, r1, r3
   1725c:	bx	lr
   17260:	cmp	r1, #0
   17264:	beq	17470 <abort@plt+0x6688>
   17268:	eor	ip, r0, r1
   1726c:	rsbmi	r1, r1, #0
   17270:	subs	r2, r1, #1
   17274:	beq	1743c <abort@plt+0x6654>
   17278:	movs	r3, r0
   1727c:	rsbmi	r3, r0, #0
   17280:	cmp	r3, r1
   17284:	bls	17448 <abort@plt+0x6660>
   17288:	tst	r1, r2
   1728c:	beq	17458 <abort@plt+0x6670>
   17290:	clz	r2, r3
   17294:	clz	r0, r1
   17298:	sub	r2, r0, r2
   1729c:	rsbs	r2, r2, #31
   172a0:	addne	r2, r2, r2, lsl #1
   172a4:	mov	r0, #0
   172a8:	addne	pc, pc, r2, lsl #2
   172ac:	nop			; (mov r0, r0)
   172b0:	cmp	r3, r1, lsl #31
   172b4:	adc	r0, r0, r0
   172b8:	subcs	r3, r3, r1, lsl #31
   172bc:	cmp	r3, r1, lsl #30
   172c0:	adc	r0, r0, r0
   172c4:	subcs	r3, r3, r1, lsl #30
   172c8:	cmp	r3, r1, lsl #29
   172cc:	adc	r0, r0, r0
   172d0:	subcs	r3, r3, r1, lsl #29
   172d4:	cmp	r3, r1, lsl #28
   172d8:	adc	r0, r0, r0
   172dc:	subcs	r3, r3, r1, lsl #28
   172e0:	cmp	r3, r1, lsl #27
   172e4:	adc	r0, r0, r0
   172e8:	subcs	r3, r3, r1, lsl #27
   172ec:	cmp	r3, r1, lsl #26
   172f0:	adc	r0, r0, r0
   172f4:	subcs	r3, r3, r1, lsl #26
   172f8:	cmp	r3, r1, lsl #25
   172fc:	adc	r0, r0, r0
   17300:	subcs	r3, r3, r1, lsl #25
   17304:	cmp	r3, r1, lsl #24
   17308:	adc	r0, r0, r0
   1730c:	subcs	r3, r3, r1, lsl #24
   17310:	cmp	r3, r1, lsl #23
   17314:	adc	r0, r0, r0
   17318:	subcs	r3, r3, r1, lsl #23
   1731c:	cmp	r3, r1, lsl #22
   17320:	adc	r0, r0, r0
   17324:	subcs	r3, r3, r1, lsl #22
   17328:	cmp	r3, r1, lsl #21
   1732c:	adc	r0, r0, r0
   17330:	subcs	r3, r3, r1, lsl #21
   17334:	cmp	r3, r1, lsl #20
   17338:	adc	r0, r0, r0
   1733c:	subcs	r3, r3, r1, lsl #20
   17340:	cmp	r3, r1, lsl #19
   17344:	adc	r0, r0, r0
   17348:	subcs	r3, r3, r1, lsl #19
   1734c:	cmp	r3, r1, lsl #18
   17350:	adc	r0, r0, r0
   17354:	subcs	r3, r3, r1, lsl #18
   17358:	cmp	r3, r1, lsl #17
   1735c:	adc	r0, r0, r0
   17360:	subcs	r3, r3, r1, lsl #17
   17364:	cmp	r3, r1, lsl #16
   17368:	adc	r0, r0, r0
   1736c:	subcs	r3, r3, r1, lsl #16
   17370:	cmp	r3, r1, lsl #15
   17374:	adc	r0, r0, r0
   17378:	subcs	r3, r3, r1, lsl #15
   1737c:	cmp	r3, r1, lsl #14
   17380:	adc	r0, r0, r0
   17384:	subcs	r3, r3, r1, lsl #14
   17388:	cmp	r3, r1, lsl #13
   1738c:	adc	r0, r0, r0
   17390:	subcs	r3, r3, r1, lsl #13
   17394:	cmp	r3, r1, lsl #12
   17398:	adc	r0, r0, r0
   1739c:	subcs	r3, r3, r1, lsl #12
   173a0:	cmp	r3, r1, lsl #11
   173a4:	adc	r0, r0, r0
   173a8:	subcs	r3, r3, r1, lsl #11
   173ac:	cmp	r3, r1, lsl #10
   173b0:	adc	r0, r0, r0
   173b4:	subcs	r3, r3, r1, lsl #10
   173b8:	cmp	r3, r1, lsl #9
   173bc:	adc	r0, r0, r0
   173c0:	subcs	r3, r3, r1, lsl #9
   173c4:	cmp	r3, r1, lsl #8
   173c8:	adc	r0, r0, r0
   173cc:	subcs	r3, r3, r1, lsl #8
   173d0:	cmp	r3, r1, lsl #7
   173d4:	adc	r0, r0, r0
   173d8:	subcs	r3, r3, r1, lsl #7
   173dc:	cmp	r3, r1, lsl #6
   173e0:	adc	r0, r0, r0
   173e4:	subcs	r3, r3, r1, lsl #6
   173e8:	cmp	r3, r1, lsl #5
   173ec:	adc	r0, r0, r0
   173f0:	subcs	r3, r3, r1, lsl #5
   173f4:	cmp	r3, r1, lsl #4
   173f8:	adc	r0, r0, r0
   173fc:	subcs	r3, r3, r1, lsl #4
   17400:	cmp	r3, r1, lsl #3
   17404:	adc	r0, r0, r0
   17408:	subcs	r3, r3, r1, lsl #3
   1740c:	cmp	r3, r1, lsl #2
   17410:	adc	r0, r0, r0
   17414:	subcs	r3, r3, r1, lsl #2
   17418:	cmp	r3, r1, lsl #1
   1741c:	adc	r0, r0, r0
   17420:	subcs	r3, r3, r1, lsl #1
   17424:	cmp	r3, r1
   17428:	adc	r0, r0, r0
   1742c:	subcs	r3, r3, r1
   17430:	cmp	ip, #0
   17434:	rsbmi	r0, r0, #0
   17438:	bx	lr
   1743c:	teq	ip, r0
   17440:	rsbmi	r0, r0, #0
   17444:	bx	lr
   17448:	movcc	r0, #0
   1744c:	asreq	r0, ip, #31
   17450:	orreq	r0, r0, #1
   17454:	bx	lr
   17458:	clz	r2, r1
   1745c:	rsb	r2, r2, #31
   17460:	cmp	ip, #0
   17464:	lsr	r0, r3, r2
   17468:	rsbmi	r0, r0, #0
   1746c:	bx	lr
   17470:	cmp	r0, #0
   17474:	mvngt	r0, #-2147483648	; 0x80000000
   17478:	movlt	r0, #-2147483648	; 0x80000000
   1747c:	b	174a0 <abort@plt+0x66b8>
   17480:	cmp	r1, #0
   17484:	beq	17470 <abort@plt+0x6688>
   17488:	push	{r0, r1, lr}
   1748c:	bl	17268 <abort@plt+0x6480>
   17490:	pop	{r1, r2, lr}
   17494:	mul	r3, r2, r0
   17498:	sub	r1, r1, r3
   1749c:	bx	lr
   174a0:	push	{r1, lr}
   174a4:	mov	r0, #8
   174a8:	bl	10bcc <raise@plt>
   174ac:	pop	{r1, pc}
   174b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   174b4:	mov	r7, r0
   174b8:	ldr	r6, [pc, #72]	; 17508 <abort@plt+0x6720>
   174bc:	ldr	r5, [pc, #72]	; 1750c <abort@plt+0x6724>
   174c0:	add	r6, pc, r6
   174c4:	add	r5, pc, r5
   174c8:	sub	r6, r6, r5
   174cc:	mov	r8, r1
   174d0:	mov	r9, r2
   174d4:	bl	10b94 <calloc@plt-0x20>
   174d8:	asrs	r6, r6, #2
   174dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   174e0:	mov	r4, #0
   174e4:	add	r4, r4, #1
   174e8:	ldr	r3, [r5], #4
   174ec:	mov	r2, r9
   174f0:	mov	r1, r8
   174f4:	mov	r0, r7
   174f8:	blx	r3
   174fc:	cmp	r6, r4
   17500:	bne	174e4 <abort@plt+0x66fc>
   17504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17508:	andeq	r0, r1, r8, asr #20
   1750c:	andeq	r0, r1, r0, asr #20
   17510:	bx	lr
   17514:	ldr	r3, [pc, #12]	; 17528 <abort@plt+0x6740>
   17518:	mov	r1, #0
   1751c:	add	r3, pc, r3
   17520:	ldr	r2, [r3]
   17524:	b	10d34 <__cxa_atexit@plt>
   17528:			; <UNDEFINED> instruction: 0x00010bb0

Disassembly of section .fini:

0001752c <.fini>:
   1752c:	push	{r3, lr}
   17530:	pop	{r3, pc}
