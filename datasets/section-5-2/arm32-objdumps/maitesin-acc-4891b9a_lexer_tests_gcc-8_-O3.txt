
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00011f7c <.init>:
   11f7c:	push	{r3, lr}
   11f80:	bl	12740 <_start@@Base+0x3c>
   11f84:	pop	{r3, pc}

Disassembly of section .plt:

00011f88 <fdopen@plt-0x14>:
   11f88:	push	{lr}		; (str lr, [sp, #-4]!)
   11f8c:	ldr	lr, [pc, #4]	; 11f98 <fdopen@plt-0x4>
   11f90:	add	lr, pc, lr
   11f94:	ldr	pc, [lr, #8]!
   11f98:	andeq	ip, r1, r8, rrx

00011f9c <fdopen@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #28, 20	; 0x1c000
   11fa4:	ldr	pc, [ip, #104]!	; 0x68

00011fa8 <raise@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #28, 20	; 0x1c000
   11fb0:	ldr	pc, [ip, #96]!	; 0x60

00011fb4 <setbuf@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #28, 20	; 0x1c000
   11fbc:	ldr	pc, [ip, #88]!	; 0x58

00011fc0 <strtol@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #28, 20	; 0x1c000
   11fc8:	ldr	pc, [ip, #80]!	; 0x50

00011fcc <longjmp@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #28, 20	; 0x1c000
   11fd4:	ldr	pc, [ip, #72]!	; 0x48

00011fd8 <_setjmp@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #28, 20	; 0x1c000
   11fe0:	ldr	pc, [ip, #64]!	; 0x40

00011fe4 <free@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #28, 20	; 0x1c000
   11fec:	ldr	pc, [ip, #56]!	; 0x38

00011ff0 <memcpy@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #28, 20	; 0x1c000
   11ff8:	ldr	pc, [ip, #48]!	; 0x30

00011ffc <ftell@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #28, 20	; 0x1c000
   12004:	ldr	pc, [ip, #40]!	; 0x28

00012008 <fwrite@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #28, 20	; 0x1c000
   12010:	ldr	pc, [ip, #32]!

00012014 <strcpy@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #28, 20	; 0x1c000
   1201c:	ldr	pc, [ip, #24]!

00012020 <fread@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #28, 20	; 0x1c000
   12028:	ldr	pc, [ip, #16]!

0001202c <open64@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #28, 20	; 0x1c000
   12034:	ldr	pc, [ip, #8]!

00012038 <getenv@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #28, 20	; 0x1c000
   12040:	ldr	pc, [ip, #0]!

00012044 <malloc@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #110592	; 0x1b000
   1204c:	ldr	pc, [ip, #4088]!	; 0xff8

00012050 <__libc_start_main@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #110592	; 0x1b000
   12058:	ldr	pc, [ip, #4080]!	; 0xff0

0001205c <__gmon_start__@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #110592	; 0x1b000
   12064:	ldr	pc, [ip, #4072]!	; 0xfe8

00012068 <getpid@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #110592	; 0x1b000
   12070:	ldr	pc, [ip, #4064]!	; 0xfe0

00012074 <exit@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #110592	; 0x1b000
   1207c:	ldr	pc, [ip, #4056]!	; 0xfd8

00012080 <strlen@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #110592	; 0x1b000
   12088:	ldr	pc, [ip, #4048]!	; 0xfd0

0001208c <fprintf@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #110592	; 0x1b000
   12094:	ldr	pc, [ip, #4040]!	; 0xfc8

00012098 <__errno_location@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #110592	; 0x1b000
   120a0:	ldr	pc, [ip, #4032]!	; 0xfc0

000120a4 <mkdir@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #110592	; 0x1b000
   120ac:	ldr	pc, [ip, #4024]!	; 0xfb8

000120b0 <memset@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #110592	; 0x1b000
   120b8:	ldr	pc, [ip, #4016]!	; 0xfb0

000120bc <strncpy@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #110592	; 0x1b000
   120c4:	ldr	pc, [ip, #4008]!	; 0xfa8

000120c8 <access@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #110592	; 0x1b000
   120d0:	ldr	pc, [ip, #4000]!	; 0xfa0

000120d4 <fclose@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #110592	; 0x1b000
   120dc:	ldr	pc, [ip, #3992]!	; 0xf98

000120e0 <fcntl64@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #110592	; 0x1b000
   120e8:	ldr	pc, [ip, #3984]!	; 0xf90

000120ec <vfprintf@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #110592	; 0x1b000
   120f4:	ldr	pc, [ip, #3976]!	; 0xf88

000120f8 <putc@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #110592	; 0x1b000
   12100:	ldr	pc, [ip, #3968]!	; 0xf80

00012104 <atoi@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #110592	; 0x1b000
   1210c:	ldr	pc, [ip, #3960]!	; 0xf78

00012110 <fopen64@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #110592	; 0x1b000
   12118:	ldr	pc, [ip, #3952]!	; 0xf70

0001211c <fseek@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #110592	; 0x1b000
   12124:	ldr	pc, [ip, #3944]!	; 0xf68

00012128 <abort@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #110592	; 0x1b000
   12130:	ldr	pc, [ip, #3936]!	; 0xf60

00012134 <close@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #110592	; 0x1b000
   1213c:	ldr	pc, [ip, #3928]!	; 0xf58

Disassembly of section .text:

00012140 <main@@Base-0x10>:
   12140:	b	1d0f4 <__gcov_sort_n_vals@@Base+0x430>
   12144:	b	1d0f4 <__gcov_sort_n_vals@@Base+0x430>
   12148:	b	1d0f4 <__gcov_sort_n_vals@@Base+0x430>
   1214c:	b	1d0f4 <__gcov_sort_n_vals@@Base+0x430>

00012150 <main@@Base>:
   12150:	str	r4, [sp, #-8]!
   12154:	movw	r0, #54764	; 0xd5ec
   12158:	movt	r0, #1
   1215c:	ldr	r4, [pc, #1388]	; 126d0 <main@@Base+0x580>
   12160:	str	lr, [sp, #4]
   12164:	ldr	r3, [r4]
   12168:	ldr	r2, [r4, #4]
   1216c:	adds	r3, r3, #1
   12170:	adc	r2, r2, #0
   12174:	str	r3, [r4]
   12178:	str	r2, [r4, #4]
   1217c:	bl	19ac8 <UnityBegin@@Base>
   12180:	ldr	r3, [r4, #8]
   12184:	movw	r2, #629	; 0x275
   12188:	movw	r1, #54832	; 0xd630
   1218c:	movt	r1, #1
   12190:	movw	r0, #18936	; 0x49f8
   12194:	movt	r0, #1
   12198:	ldr	ip, [r4, #12]
   1219c:	adds	r3, r3, #1
   121a0:	adc	ip, ip, #0
   121a4:	str	r3, [r4, #8]
   121a8:	str	ip, [r4, #12]
   121ac:	bl	1992c <UnityDefaultTestRun@@Base>
   121b0:	ldr	r3, [r4, #16]
   121b4:	movw	r2, #630	; 0x276
   121b8:	movw	r1, #54856	; 0xd648
   121bc:	movt	r1, #1
   121c0:	movw	r0, #20504	; 0x5018
   121c4:	movt	r0, #1
   121c8:	ldr	ip, [r4, #20]
   121cc:	adds	r3, r3, #1
   121d0:	adc	ip, ip, #0
   121d4:	str	r3, [r4, #16]
   121d8:	str	ip, [r4, #20]
   121dc:	bl	1992c <UnityDefaultTestRun@@Base>
   121e0:	ldr	r3, [r4, #24]
   121e4:	movw	r2, #631	; 0x277
   121e8:	movw	r1, #54876	; 0xd65c
   121ec:	movt	r1, #1
   121f0:	movw	r0, #20144	; 0x4eb0
   121f4:	movt	r0, #1
   121f8:	ldr	ip, [r4, #28]
   121fc:	adds	r3, r3, #1
   12200:	adc	ip, ip, #0
   12204:	str	r3, [r4, #24]
   12208:	str	ip, [r4, #28]
   1220c:	bl	1992c <UnityDefaultTestRun@@Base>
   12210:	ldr	r3, [r4, #32]
   12214:	mov	r2, #632	; 0x278
   12218:	movw	r1, #54904	; 0xd678
   1221c:	movt	r1, #1
   12220:	movw	r0, #19872	; 0x4da0
   12224:	movt	r0, #1
   12228:	ldr	ip, [r4, #36]	; 0x24
   1222c:	adds	r3, r3, #1
   12230:	adc	ip, ip, #0
   12234:	str	r3, [r4, #32]
   12238:	str	ip, [r4, #36]	; 0x24
   1223c:	bl	1992c <UnityDefaultTestRun@@Base>
   12240:	ldr	r3, [r4, #40]	; 0x28
   12244:	movw	r2, #633	; 0x279
   12248:	movw	r1, #54932	; 0xd694
   1224c:	movt	r1, #1
   12250:	movw	r0, #17092	; 0x42c4
   12254:	movt	r0, #1
   12258:	ldr	ip, [r4, #44]	; 0x2c
   1225c:	adds	r3, r3, #1
   12260:	adc	ip, ip, #0
   12264:	str	r3, [r4, #40]	; 0x28
   12268:	str	ip, [r4, #44]	; 0x2c
   1226c:	bl	1992c <UnityDefaultTestRun@@Base>
   12270:	ldr	r3, [r4, #48]	; 0x30
   12274:	movw	r2, #634	; 0x27a
   12278:	movw	r1, #54948	; 0xd6a4
   1227c:	movt	r1, #1
   12280:	movw	r0, #14768	; 0x39b0
   12284:	movt	r0, #1
   12288:	ldr	ip, [r4, #52]	; 0x34
   1228c:	adds	r3, r3, #1
   12290:	adc	ip, ip, #0
   12294:	str	r3, [r4, #48]	; 0x30
   12298:	str	ip, [r4, #52]	; 0x34
   1229c:	bl	1992c <UnityDefaultTestRun@@Base>
   122a0:	ldr	r3, [r4, #56]	; 0x38
   122a4:	movw	r2, #635	; 0x27b
   122a8:	movw	r1, #54964	; 0xd6b4
   122ac:	movt	r1, #1
   122b0:	movw	r0, #14552	; 0x38d8
   122b4:	movt	r0, #1
   122b8:	ldr	ip, [r4, #60]	; 0x3c
   122bc:	adds	r3, r3, #1
   122c0:	adc	ip, ip, #0
   122c4:	str	r3, [r4, #56]	; 0x38
   122c8:	str	ip, [r4, #60]	; 0x3c
   122cc:	bl	1992c <UnityDefaultTestRun@@Base>
   122d0:	ldr	r3, [r4, #64]	; 0x40
   122d4:	mov	r2, #636	; 0x27c
   122d8:	movw	r1, #54984	; 0xd6c8
   122dc:	movt	r1, #1
   122e0:	movw	r0, #14336	; 0x3800
   122e4:	movt	r0, #1
   122e8:	ldr	ip, [r4, #68]	; 0x44
   122ec:	adds	r3, r3, #1
   122f0:	adc	ip, ip, #0
   122f4:	str	r3, [r4, #64]	; 0x40
   122f8:	str	ip, [r4, #68]	; 0x44
   122fc:	bl	1992c <UnityDefaultTestRun@@Base>
   12300:	ldr	r3, [r4, #72]	; 0x48
   12304:	movw	r2, #637	; 0x27d
   12308:	movw	r1, #55008	; 0xd6e0
   1230c:	movt	r1, #1
   12310:	movw	r0, #14120	; 0x3728
   12314:	movt	r0, #1
   12318:	ldr	ip, [r4, #76]	; 0x4c
   1231c:	adds	r3, r3, #1
   12320:	adc	ip, ip, #0
   12324:	str	r3, [r4, #72]	; 0x48
   12328:	str	ip, [r4, #76]	; 0x4c
   1232c:	bl	1992c <UnityDefaultTestRun@@Base>
   12330:	ldr	r3, [r4, #80]	; 0x50
   12334:	movw	r2, #638	; 0x27e
   12338:	movw	r1, #55028	; 0xd6f4
   1233c:	movt	r1, #1
   12340:	movw	r0, #13904	; 0x3650
   12344:	movt	r0, #1
   12348:	ldr	ip, [r4, #84]	; 0x54
   1234c:	adds	r3, r3, #1
   12350:	adc	ip, ip, #0
   12354:	str	r3, [r4, #80]	; 0x50
   12358:	str	ip, [r4, #84]	; 0x54
   1235c:	bl	1992c <UnityDefaultTestRun@@Base>
   12360:	ldr	r3, [r4, #88]	; 0x58
   12364:	movw	r2, #639	; 0x27f
   12368:	movw	r1, #55044	; 0xd704
   1236c:	movt	r1, #1
   12370:	movw	r0, #13688	; 0x3578
   12374:	movt	r0, #1
   12378:	ldr	ip, [r4, #92]	; 0x5c
   1237c:	adds	r3, r3, #1
   12380:	adc	ip, ip, #0
   12384:	str	r3, [r4, #88]	; 0x58
   12388:	str	ip, [r4, #92]	; 0x5c
   1238c:	bl	1992c <UnityDefaultTestRun@@Base>
   12390:	ldr	r3, [r4, #96]	; 0x60
   12394:	mov	r2, #640	; 0x280
   12398:	movw	r1, #55060	; 0xd714
   1239c:	movt	r1, #1
   123a0:	movw	r0, #13472	; 0x34a0
   123a4:	movt	r0, #1
   123a8:	ldr	ip, [r4, #100]	; 0x64
   123ac:	adds	r3, r3, #1
   123b0:	adc	ip, ip, #0
   123b4:	str	r3, [r4, #96]	; 0x60
   123b8:	str	ip, [r4, #100]	; 0x64
   123bc:	bl	1992c <UnityDefaultTestRun@@Base>
   123c0:	ldr	r3, [r4, #104]	; 0x68
   123c4:	movw	r2, #641	; 0x281
   123c8:	movw	r1, #55076	; 0xd724
   123cc:	movt	r1, #1
   123d0:	movw	r0, #13256	; 0x33c8
   123d4:	movt	r0, #1
   123d8:	ldr	ip, [r4, #108]	; 0x6c
   123dc:	adds	r3, r3, #1
   123e0:	adc	ip, ip, #0
   123e4:	str	r3, [r4, #104]	; 0x68
   123e8:	str	ip, [r4, #108]	; 0x6c
   123ec:	bl	1992c <UnityDefaultTestRun@@Base>
   123f0:	ldr	r3, [r4, #112]	; 0x70
   123f4:	movw	r2, #642	; 0x282
   123f8:	movw	r1, #55092	; 0xd734
   123fc:	movt	r1, #1
   12400:	movw	r0, #13040	; 0x32f0
   12404:	movt	r0, #1
   12408:	ldr	ip, [r4, #116]	; 0x74
   1240c:	adds	r3, r3, #1
   12410:	adc	ip, ip, #0
   12414:	str	r3, [r4, #112]	; 0x70
   12418:	str	ip, [r4, #116]	; 0x74
   1241c:	bl	1992c <UnityDefaultTestRun@@Base>
   12420:	ldr	r3, [r4, #120]	; 0x78
   12424:	movw	r2, #643	; 0x283
   12428:	movw	r1, #55112	; 0xd748
   1242c:	movt	r1, #1
   12430:	movw	r0, #12824	; 0x3218
   12434:	movt	r0, #1
   12438:	ldr	ip, [r4, #124]	; 0x7c
   1243c:	adds	r3, r3, #1
   12440:	adc	ip, ip, #0
   12444:	str	r3, [r4, #120]	; 0x78
   12448:	str	ip, [r4, #124]	; 0x7c
   1244c:	bl	1992c <UnityDefaultTestRun@@Base>
   12450:	ldr	r3, [r4, #128]	; 0x80
   12454:	mov	r2, #644	; 0x284
   12458:	movw	r1, #55136	; 0xd760
   1245c:	movt	r1, #1
   12460:	movw	r0, #12608	; 0x3140
   12464:	movt	r0, #1
   12468:	ldr	ip, [r4, #132]	; 0x84
   1246c:	adds	r3, r3, #1
   12470:	adc	ip, ip, #0
   12474:	str	r3, [r4, #128]	; 0x80
   12478:	str	ip, [r4, #132]	; 0x84
   1247c:	bl	1992c <UnityDefaultTestRun@@Base>
   12480:	ldr	r3, [r4, #136]	; 0x88
   12484:	movw	r2, #645	; 0x285
   12488:	movw	r1, #55152	; 0xd770
   1248c:	movt	r1, #1
   12490:	movw	r0, #12392	; 0x3068
   12494:	movt	r0, #1
   12498:	ldr	ip, [r4, #140]	; 0x8c
   1249c:	adds	r3, r3, #1
   124a0:	adc	ip, ip, #0
   124a4:	str	r3, [r4, #136]	; 0x88
   124a8:	str	ip, [r4, #140]	; 0x8c
   124ac:	bl	1992c <UnityDefaultTestRun@@Base>
   124b0:	ldr	r3, [r4, #144]	; 0x90
   124b4:	movw	r2, #646	; 0x286
   124b8:	movw	r1, #55168	; 0xd780
   124bc:	movt	r1, #1
   124c0:	movw	r0, #12176	; 0x2f90
   124c4:	movt	r0, #1
   124c8:	ldr	ip, [r4, #148]	; 0x94
   124cc:	adds	r3, r3, #1
   124d0:	adc	ip, ip, #0
   124d4:	str	r3, [r4, #144]	; 0x90
   124d8:	str	ip, [r4, #148]	; 0x94
   124dc:	bl	1992c <UnityDefaultTestRun@@Base>
   124e0:	ldr	r3, [r4, #152]	; 0x98
   124e4:	movw	r2, #647	; 0x287
   124e8:	movw	r1, #55184	; 0xd790
   124ec:	movt	r1, #1
   124f0:	movw	r0, #11960	; 0x2eb8
   124f4:	movt	r0, #1
   124f8:	ldr	ip, [r4, #156]	; 0x9c
   124fc:	adds	r3, r3, #1
   12500:	adc	ip, ip, #0
   12504:	str	r3, [r4, #152]	; 0x98
   12508:	str	ip, [r4, #156]	; 0x9c
   1250c:	bl	1992c <UnityDefaultTestRun@@Base>
   12510:	ldr	r3, [r4, #160]	; 0xa0
   12514:	mov	r2, #648	; 0x288
   12518:	movw	r1, #55208	; 0xd7a8
   1251c:	movt	r1, #1
   12520:	movw	r0, #11744	; 0x2de0
   12524:	movt	r0, #1
   12528:	ldr	ip, [r4, #164]	; 0xa4
   1252c:	adds	r3, r3, #1
   12530:	adc	ip, ip, #0
   12534:	str	r3, [r4, #160]	; 0xa0
   12538:	str	ip, [r4, #164]	; 0xa4
   1253c:	bl	1992c <UnityDefaultTestRun@@Base>
   12540:	ldr	r3, [r4, #168]	; 0xa8
   12544:	movw	r2, #649	; 0x289
   12548:	movw	r1, #55228	; 0xd7bc
   1254c:	movt	r1, #1
   12550:	movw	r0, #11524	; 0x2d04
   12554:	movt	r0, #1
   12558:	ldr	ip, [r4, #172]	; 0xac
   1255c:	adds	r3, r3, #1
   12560:	adc	ip, ip, #0
   12564:	str	r3, [r4, #168]	; 0xa8
   12568:	str	ip, [r4, #172]	; 0xac
   1256c:	bl	1992c <UnityDefaultTestRun@@Base>
   12570:	ldr	r3, [r4, #176]	; 0xb0
   12574:	movw	r2, #650	; 0x28a
   12578:	movw	r1, #55256	; 0xd7d8
   1257c:	movt	r1, #1
   12580:	movw	r0, #10876	; 0x2a7c
   12584:	movt	r0, #1
   12588:	ldr	ip, [r4, #180]	; 0xb4
   1258c:	adds	r3, r3, #1
   12590:	adc	ip, ip, #0
   12594:	str	r3, [r4, #176]	; 0xb0
   12598:	str	ip, [r4, #180]	; 0xb4
   1259c:	bl	1992c <UnityDefaultTestRun@@Base>
   125a0:	ldr	r3, [r4, #184]	; 0xb8
   125a4:	movw	r2, #651	; 0x28b
   125a8:	movw	r1, #55284	; 0xd7f4
   125ac:	movt	r1, #1
   125b0:	movw	r0, #11308	; 0x2c2c
   125b4:	movt	r0, #1
   125b8:	ldr	ip, [r4, #188]	; 0xbc
   125bc:	adds	r3, r3, #1
   125c0:	adc	ip, ip, #0
   125c4:	str	r3, [r4, #184]	; 0xb8
   125c8:	str	ip, [r4, #188]	; 0xbc
   125cc:	bl	1992c <UnityDefaultTestRun@@Base>
   125d0:	ldr	r3, [r4, #192]	; 0xc0
   125d4:	mov	r2, #652	; 0x28c
   125d8:	movw	r1, #55300	; 0xd804
   125dc:	movt	r1, #1
   125e0:	movw	r0, #11092	; 0x2b54
   125e4:	movt	r0, #1
   125e8:	ldr	ip, [r4, #196]	; 0xc4
   125ec:	adds	r3, r3, #1
   125f0:	adc	ip, ip, #0
   125f4:	str	r3, [r4, #192]	; 0xc0
   125f8:	str	ip, [r4, #196]	; 0xc4
   125fc:	bl	1992c <UnityDefaultTestRun@@Base>
   12600:	ldr	r3, [r4, #200]	; 0xc8
   12604:	movw	r2, #653	; 0x28d
   12608:	movw	r1, #55320	; 0xd818
   1260c:	movt	r1, #1
   12610:	movw	r0, #10660	; 0x29a4
   12614:	movt	r0, #1
   12618:	ldr	ip, [r4, #204]	; 0xcc
   1261c:	adds	r3, r3, #1
   12620:	adc	ip, ip, #0
   12624:	str	r3, [r4, #200]	; 0xc8
   12628:	str	ip, [r4, #204]	; 0xcc
   1262c:	bl	1992c <UnityDefaultTestRun@@Base>
   12630:	ldr	r3, [r4, #208]	; 0xd0
   12634:	movw	r2, #654	; 0x28e
   12638:	movw	r1, #55340	; 0xd82c
   1263c:	movt	r1, #1
   12640:	movw	r0, #10444	; 0x28cc
   12644:	movt	r0, #1
   12648:	ldr	ip, [r4, #212]	; 0xd4
   1264c:	adds	r3, r3, #1
   12650:	adc	ip, ip, #0
   12654:	str	r3, [r4, #208]	; 0xd0
   12658:	str	ip, [r4, #212]	; 0xd4
   1265c:	bl	1992c <UnityDefaultTestRun@@Base>
   12660:	ldr	r3, [r4, #216]	; 0xd8
   12664:	movw	r2, #655	; 0x28f
   12668:	movw	r1, #55364	; 0xd844
   1266c:	movt	r1, #1
   12670:	movw	r0, #10228	; 0x27f4
   12674:	movt	r0, #1
   12678:	ldr	ip, [r4, #220]	; 0xdc
   1267c:	adds	r3, r3, #1
   12680:	adc	ip, ip, #0
   12684:	str	r3, [r4, #216]	; 0xd8
   12688:	str	ip, [r4, #220]	; 0xdc
   1268c:	bl	1992c <UnityDefaultTestRun@@Base>
   12690:	ldr	r3, [r4, #224]	; 0xe0
   12694:	ldr	r2, [r4, #228]	; 0xe4
   12698:	adds	r3, r3, #1
   1269c:	adc	r2, r2, #0
   126a0:	str	r3, [r4, #224]	; 0xe0
   126a4:	str	r2, [r4, #228]	; 0xe4
   126a8:	bl	19b24 <UnityEnd@@Base>
   126ac:	ldr	r3, [r4, #232]	; 0xe8
   126b0:	ldr	r2, [r4, #236]	; 0xec
   126b4:	adds	r3, r3, #1
   126b8:	adc	r2, r2, #0
   126bc:	str	r3, [r4, #232]	; 0xe8
   126c0:	str	r2, [r4, #236]	; 0xec
   126c4:	ldr	r4, [sp]
   126c8:	add	sp, sp, #4
   126cc:	pop	{pc}		; (ldr pc, [sp], #4)
   126d0:	andeq	pc, r2, r0, lsl #8
   126d4:	movw	r0, #57524	; 0xe0b4
   126d8:	movt	r0, #2
   126dc:	b	1d164 <__gcov_sort_n_vals@@Base+0x4a0>
   126e0:	movw	r0, #58368	; 0xe400
   126e4:	movt	r0, #2
   126e8:	b	1d164 <__gcov_sort_n_vals@@Base+0x4a0>
   126ec:	movw	r0, #59380	; 0xe7f4
   126f0:	movt	r0, #2
   126f4:	b	1d164 <__gcov_sort_n_vals@@Base+0x4a0>
   126f8:	movw	r0, #60168	; 0xeb08
   126fc:	movt	r0, #2
   12700:	b	1d164 <__gcov_sort_n_vals@@Base+0x4a0>

00012704 <_start@@Base>:
   12704:	mov	fp, #0
   12708:	mov	lr, #0
   1270c:	pop	{r1}		; (ldr r1, [sp], #4)
   12710:	mov	r2, sp
   12714:	push	{r2}		; (str r2, [sp, #-4]!)
   12718:	push	{r0}		; (str r0, [sp, #-4]!)
   1271c:	ldr	ip, [pc, #16]	; 12734 <_start@@Base+0x30>
   12720:	push	{ip}		; (str ip, [sp, #-4]!)
   12724:	ldr	r0, [pc, #12]	; 12738 <_start@@Base+0x34>
   12728:	ldr	r3, [pc, #12]	; 1273c <_start@@Base+0x38>
   1272c:	bl	12050 <__libc_start_main@plt>
   12730:	bl	12128 <abort@plt>
   12734:	ldrdeq	sp, [r1], -ip
   12738:	andeq	r2, r1, r0, asr r1
   1273c:	andeq	sp, r1, ip, ror r4
   12740:	ldr	r3, [pc, #20]	; 1275c <_start@@Base+0x58>
   12744:	ldr	r2, [pc, #20]	; 12760 <_start@@Base+0x5c>
   12748:	add	r3, pc, r3
   1274c:	ldr	r2, [r3, r2]
   12750:	cmp	r2, #0
   12754:	bxeq	lr
   12758:	b	1205c <__gmon_start__@plt>
   1275c:			; <UNDEFINED> instruction: 0x0001b8b0
   12760:	muleq	r0, ip, r0
   12764:	ldr	r0, [pc, #24]	; 12784 <_start@@Base+0x80>
   12768:	ldr	r3, [pc, #24]	; 12788 <_start@@Base+0x84>
   1276c:	cmp	r3, r0
   12770:	bxeq	lr
   12774:	ldr	r3, [pc, #16]	; 1278c <_start@@Base+0x88>
   12778:	cmp	r3, #0
   1277c:	bxeq	lr
   12780:	bx	r3
   12784:	andeq	lr, r2, ip, lsr #24
   12788:	andeq	lr, r2, ip, lsr #24
   1278c:	andeq	r0, r0, r0
   12790:	ldr	r0, [pc, #36]	; 127bc <_start@@Base+0xb8>
   12794:	ldr	r1, [pc, #36]	; 127c0 <_start@@Base+0xbc>
   12798:	sub	r1, r1, r0
   1279c:	asr	r1, r1, #2
   127a0:	add	r1, r1, r1, lsr #31
   127a4:	asrs	r1, r1, #1
   127a8:	bxeq	lr
   127ac:	ldr	r3, [pc, #16]	; 127c4 <_start@@Base+0xc0>
   127b0:	cmp	r3, #0
   127b4:	bxeq	lr
   127b8:	bx	r3
   127bc:	andeq	lr, r2, ip, lsr #24
   127c0:	andeq	lr, r2, ip, lsr #24
   127c4:	andeq	r0, r0, r0
   127c8:	push	{r4, lr}
   127cc:	ldr	r4, [pc, #24]	; 127ec <_start@@Base+0xe8>
   127d0:	ldrb	r3, [r4]
   127d4:	cmp	r3, #0
   127d8:	popne	{r4, pc}
   127dc:	bl	12764 <_start@@Base+0x60>
   127e0:	mov	r3, #1
   127e4:	strb	r3, [r4]
   127e8:	pop	{r4, pc}
   127ec:	andeq	lr, r2, r8, lsr ip
   127f0:	b	12790 <_start@@Base+0x8c>

000127f4 <read_token_not@@Base>:
   127f4:	str	r4, [sp, #-8]!
   127f8:	movw	r4, #60480	; 0xec40
   127fc:	movt	r4, #2
   12800:	ldr	r3, [r4]
   12804:	movw	r1, #54508	; 0xd4ec
   12808:	movt	r1, #1
   1280c:	str	lr, [sp, #4]
   12810:	sub	sp, sp, #24
   12814:	ldr	r2, [r4, #4]
   12818:	add	r0, sp, #12
   1281c:	adds	r3, r3, #1
   12820:	adc	r2, r2, #0
   12824:	str	r3, [r4]
   12828:	str	r2, [r4, #4]
   1282c:	bl	1a1d4 <init_lexer@@Base>
   12830:	ldr	r3, [r4, #8]
   12834:	add	r0, sp, #12
   12838:	ldr	r2, [r4, #12]
   1283c:	adds	r3, r3, #1
   12840:	adc	r2, r2, #0
   12844:	str	r3, [r4, #8]
   12848:	str	r2, [r4, #12]
   1284c:	bl	1a480 <next@@Base>
   12850:	mov	lr, #148	; 0x94
   12854:	ldr	ip, [r4, #16]
   12858:	mov	r2, #0
   1285c:	mov	r3, #620	; 0x26c
   12860:	ldr	r1, [r0]
   12864:	mov	r0, #12
   12868:	str	lr, [sp]
   1286c:	ldr	lr, [r4, #20]
   12870:	adds	ip, ip, #1
   12874:	str	ip, [r4, #16]
   12878:	adc	lr, lr, r2
   1287c:	str	lr, [r4, #20]
   12880:	bl	16978 <UnityAssertEqualNumber@@Base>
   12884:	ldr	r3, [r4, #24]
   12888:	add	r0, sp, #12
   1288c:	ldr	r2, [r4, #28]
   12890:	adds	r3, r3, #1
   12894:	adc	r2, r2, #0
   12898:	str	r3, [r4, #24]
   1289c:	str	r2, [r4, #28]
   128a0:	bl	1a200 <destroy_lexer@@Base>
   128a4:	ldr	r3, [r4, #32]
   128a8:	ldr	r2, [r4, #36]	; 0x24
   128ac:	adds	r3, r3, #1
   128b0:	adc	r2, r2, #0
   128b4:	str	r3, [r4, #32]
   128b8:	str	r2, [r4, #36]	; 0x24
   128bc:	add	sp, sp, #24
   128c0:	ldr	r4, [sp]
   128c4:	add	sp, sp, #4
   128c8:	pop	{pc}		; (ldr pc, [sp], #4)

000128cc <read_token_greaterthan@@Base>:
   128cc:	str	r4, [sp, #-8]!
   128d0:	movw	r4, #60480	; 0xec40
   128d4:	movt	r4, #2
   128d8:	ldr	r3, [r4, #40]	; 0x28
   128dc:	movw	r1, #54512	; 0xd4f0
   128e0:	movt	r1, #1
   128e4:	str	lr, [sp, #4]
   128e8:	sub	sp, sp, #24
   128ec:	ldr	r2, [r4, #44]	; 0x2c
   128f0:	add	r0, sp, #12
   128f4:	adds	r3, r3, #1
   128f8:	adc	r2, r2, #0
   128fc:	str	r3, [r4, #40]	; 0x28
   12900:	str	r2, [r4, #44]	; 0x2c
   12904:	bl	1a1d4 <init_lexer@@Base>
   12908:	ldr	r3, [r4, #48]	; 0x30
   1290c:	add	r0, sp, #12
   12910:	ldr	r2, [r4, #52]	; 0x34
   12914:	adds	r3, r3, #1
   12918:	adc	r2, r2, #0
   1291c:	str	r3, [r4, #48]	; 0x30
   12920:	str	r2, [r4, #52]	; 0x34
   12924:	bl	1a480 <next@@Base>
   12928:	mov	lr, #148	; 0x94
   1292c:	ldr	ip, [r4, #56]	; 0x38
   12930:	mov	r2, #0
   12934:	movw	r3, #603	; 0x25b
   12938:	ldr	r1, [r0]
   1293c:	mov	r0, #12
   12940:	str	lr, [sp]
   12944:	ldr	lr, [r4, #60]	; 0x3c
   12948:	adds	ip, ip, #1
   1294c:	str	ip, [r4, #56]	; 0x38
   12950:	adc	lr, lr, r2
   12954:	str	lr, [r4, #60]	; 0x3c
   12958:	bl	16978 <UnityAssertEqualNumber@@Base>
   1295c:	ldr	r3, [r4, #64]	; 0x40
   12960:	add	r0, sp, #12
   12964:	ldr	r2, [r4, #68]	; 0x44
   12968:	adds	r3, r3, #1
   1296c:	adc	r2, r2, #0
   12970:	str	r3, [r4, #64]	; 0x40
   12974:	str	r2, [r4, #68]	; 0x44
   12978:	bl	1a200 <destroy_lexer@@Base>
   1297c:	ldr	r3, [r4, #72]	; 0x48
   12980:	ldr	r2, [r4, #76]	; 0x4c
   12984:	adds	r3, r3, #1
   12988:	adc	r2, r2, #0
   1298c:	str	r3, [r4, #72]	; 0x48
   12990:	str	r2, [r4, #76]	; 0x4c
   12994:	add	sp, sp, #24
   12998:	ldr	r4, [sp]
   1299c:	add	sp, sp, #4
   129a0:	pop	{pc}		; (ldr pc, [sp], #4)

000129a4 <read_token_lessthan@@Base>:
   129a4:	str	r4, [sp, #-8]!
   129a8:	movw	r4, #60480	; 0xec40
   129ac:	movt	r4, #2
   129b0:	ldr	r3, [r4, #80]	; 0x50
   129b4:	movw	r1, #54516	; 0xd4f4
   129b8:	movt	r1, #1
   129bc:	str	lr, [sp, #4]
   129c0:	sub	sp, sp, #24
   129c4:	ldr	r2, [r4, #84]	; 0x54
   129c8:	add	r0, sp, #12
   129cc:	adds	r3, r3, #1
   129d0:	adc	r2, r2, #0
   129d4:	str	r3, [r4, #80]	; 0x50
   129d8:	str	r2, [r4, #84]	; 0x54
   129dc:	bl	1a1d4 <init_lexer@@Base>
   129e0:	ldr	r3, [r4, #88]	; 0x58
   129e4:	add	r0, sp, #12
   129e8:	ldr	r2, [r4, #92]	; 0x5c
   129ec:	adds	r3, r3, #1
   129f0:	adc	r2, r2, #0
   129f4:	str	r3, [r4, #88]	; 0x58
   129f8:	str	r2, [r4, #92]	; 0x5c
   129fc:	bl	1a480 <next@@Base>
   12a00:	mov	lr, #148	; 0x94
   12a04:	ldr	ip, [r4, #96]	; 0x60
   12a08:	mov	r2, #0
   12a0c:	movw	r3, #586	; 0x24a
   12a10:	ldr	r1, [r0]
   12a14:	mov	r0, #12
   12a18:	str	lr, [sp]
   12a1c:	ldr	lr, [r4, #100]	; 0x64
   12a20:	adds	ip, ip, #1
   12a24:	str	ip, [r4, #96]	; 0x60
   12a28:	adc	lr, lr, r2
   12a2c:	str	lr, [r4, #100]	; 0x64
   12a30:	bl	16978 <UnityAssertEqualNumber@@Base>
   12a34:	ldr	r3, [r4, #104]	; 0x68
   12a38:	add	r0, sp, #12
   12a3c:	ldr	r2, [r4, #108]	; 0x6c
   12a40:	adds	r3, r3, #1
   12a44:	adc	r2, r2, #0
   12a48:	str	r3, [r4, #104]	; 0x68
   12a4c:	str	r2, [r4, #108]	; 0x6c
   12a50:	bl	1a200 <destroy_lexer@@Base>
   12a54:	ldr	r3, [r4, #112]	; 0x70
   12a58:	ldr	r2, [r4, #116]	; 0x74
   12a5c:	adds	r3, r3, #1
   12a60:	adc	r2, r2, #0
   12a64:	str	r3, [r4, #112]	; 0x70
   12a68:	str	r2, [r4, #116]	; 0x74
   12a6c:	add	sp, sp, #24
   12a70:	ldr	r4, [sp]
   12a74:	add	sp, sp, #4
   12a78:	pop	{pc}		; (ldr pc, [sp], #4)

00012a7c <read_token_greaterequalthan@@Base>:
   12a7c:	str	r4, [sp, #-8]!
   12a80:	movw	r4, #60480	; 0xec40
   12a84:	movt	r4, #2
   12a88:	ldr	r3, [r4, #120]	; 0x78
   12a8c:	movw	r1, #54520	; 0xd4f8
   12a90:	movt	r1, #1
   12a94:	str	lr, [sp, #4]
   12a98:	sub	sp, sp, #24
   12a9c:	ldr	r2, [r4, #124]	; 0x7c
   12aa0:	add	r0, sp, #12
   12aa4:	adds	r3, r3, #1
   12aa8:	adc	r2, r2, #0
   12aac:	str	r3, [r4, #120]	; 0x78
   12ab0:	str	r2, [r4, #124]	; 0x7c
   12ab4:	bl	1a1d4 <init_lexer@@Base>
   12ab8:	ldr	r3, [r4, #128]	; 0x80
   12abc:	add	r0, sp, #12
   12ac0:	ldr	r2, [r4, #132]	; 0x84
   12ac4:	adds	r3, r3, #1
   12ac8:	adc	r2, r2, #0
   12acc:	str	r3, [r4, #128]	; 0x80
   12ad0:	str	r2, [r4, #132]	; 0x84
   12ad4:	bl	1a480 <next@@Base>
   12ad8:	mov	lr, #148	; 0x94
   12adc:	ldr	ip, [r4, #136]	; 0x88
   12ae0:	mov	r2, #0
   12ae4:	movw	r3, #569	; 0x239
   12ae8:	ldr	r1, [r0]
   12aec:	mov	r0, #12
   12af0:	str	lr, [sp]
   12af4:	ldr	lr, [r4, #140]	; 0x8c
   12af8:	adds	ip, ip, #1
   12afc:	str	ip, [r4, #136]	; 0x88
   12b00:	adc	lr, lr, r2
   12b04:	str	lr, [r4, #140]	; 0x8c
   12b08:	bl	16978 <UnityAssertEqualNumber@@Base>
   12b0c:	ldr	r3, [r4, #144]	; 0x90
   12b10:	add	r0, sp, #12
   12b14:	ldr	r2, [r4, #148]	; 0x94
   12b18:	adds	r3, r3, #1
   12b1c:	adc	r2, r2, #0
   12b20:	str	r3, [r4, #144]	; 0x90
   12b24:	str	r2, [r4, #148]	; 0x94
   12b28:	bl	1a200 <destroy_lexer@@Base>
   12b2c:	ldr	r3, [r4, #152]	; 0x98
   12b30:	ldr	r2, [r4, #156]	; 0x9c
   12b34:	adds	r3, r3, #1
   12b38:	adc	r2, r2, #0
   12b3c:	str	r3, [r4, #152]	; 0x98
   12b40:	str	r2, [r4, #156]	; 0x9c
   12b44:	add	sp, sp, #24
   12b48:	ldr	r4, [sp]
   12b4c:	add	sp, sp, #4
   12b50:	pop	{pc}		; (ldr pc, [sp], #4)

00012b54 <read_token_andand@@Base>:
   12b54:	str	r4, [sp, #-8]!
   12b58:	movw	r4, #60480	; 0xec40
   12b5c:	movt	r4, #2
   12b60:	ldr	r3, [r4, #160]	; 0xa0
   12b64:	movw	r1, #54524	; 0xd4fc
   12b68:	movt	r1, #1
   12b6c:	str	lr, [sp, #4]
   12b70:	sub	sp, sp, #24
   12b74:	ldr	r2, [r4, #164]	; 0xa4
   12b78:	add	r0, sp, #12
   12b7c:	adds	r3, r3, #1
   12b80:	adc	r2, r2, #0
   12b84:	str	r3, [r4, #160]	; 0xa0
   12b88:	str	r2, [r4, #164]	; 0xa4
   12b8c:	bl	1a1d4 <init_lexer@@Base>
   12b90:	ldr	r3, [r4, #168]	; 0xa8
   12b94:	add	r0, sp, #12
   12b98:	ldr	r2, [r4, #172]	; 0xac
   12b9c:	adds	r3, r3, #1
   12ba0:	adc	r2, r2, #0
   12ba4:	str	r3, [r4, #168]	; 0xa8
   12ba8:	str	r2, [r4, #172]	; 0xac
   12bac:	bl	1a480 <next@@Base>
   12bb0:	mov	lr, #148	; 0x94
   12bb4:	ldr	ip, [r4, #176]	; 0xb0
   12bb8:	mov	r2, #0
   12bbc:	mov	r3, #552	; 0x228
   12bc0:	ldr	r1, [r0]
   12bc4:	mov	r0, #12
   12bc8:	str	lr, [sp]
   12bcc:	ldr	lr, [r4, #180]	; 0xb4
   12bd0:	adds	ip, ip, #1
   12bd4:	str	ip, [r4, #176]	; 0xb0
   12bd8:	adc	lr, lr, r2
   12bdc:	str	lr, [r4, #180]	; 0xb4
   12be0:	bl	16978 <UnityAssertEqualNumber@@Base>
   12be4:	ldr	r3, [r4, #184]	; 0xb8
   12be8:	add	r0, sp, #12
   12bec:	ldr	r2, [r4, #188]	; 0xbc
   12bf0:	adds	r3, r3, #1
   12bf4:	adc	r2, r2, #0
   12bf8:	str	r3, [r4, #184]	; 0xb8
   12bfc:	str	r2, [r4, #188]	; 0xbc
   12c00:	bl	1a200 <destroy_lexer@@Base>
   12c04:	ldr	r3, [r4, #192]	; 0xc0
   12c08:	ldr	r2, [r4, #196]	; 0xc4
   12c0c:	adds	r3, r3, #1
   12c10:	adc	r2, r2, #0
   12c14:	str	r3, [r4, #192]	; 0xc0
   12c18:	str	r2, [r4, #196]	; 0xc4
   12c1c:	add	sp, sp, #24
   12c20:	ldr	r4, [sp]
   12c24:	add	sp, sp, #4
   12c28:	pop	{pc}		; (ldr pc, [sp], #4)

00012c2c <read_token_oror@@Base>:
   12c2c:	str	r4, [sp, #-8]!
   12c30:	movw	r4, #60480	; 0xec40
   12c34:	movt	r4, #2
   12c38:	ldr	r3, [r4, #200]	; 0xc8
   12c3c:	movw	r1, #54528	; 0xd500
   12c40:	movt	r1, #1
   12c44:	str	lr, [sp, #4]
   12c48:	sub	sp, sp, #24
   12c4c:	ldr	r2, [r4, #204]	; 0xcc
   12c50:	add	r0, sp, #12
   12c54:	adds	r3, r3, #1
   12c58:	adc	r2, r2, #0
   12c5c:	str	r3, [r4, #200]	; 0xc8
   12c60:	str	r2, [r4, #204]	; 0xcc
   12c64:	bl	1a1d4 <init_lexer@@Base>
   12c68:	ldr	r3, [r4, #208]	; 0xd0
   12c6c:	add	r0, sp, #12
   12c70:	ldr	r2, [r4, #212]	; 0xd4
   12c74:	adds	r3, r3, #1
   12c78:	adc	r2, r2, #0
   12c7c:	str	r3, [r4, #208]	; 0xd0
   12c80:	str	r2, [r4, #212]	; 0xd4
   12c84:	bl	1a480 <next@@Base>
   12c88:	mov	lr, #148	; 0x94
   12c8c:	ldr	ip, [r4, #216]	; 0xd8
   12c90:	mov	r2, #0
   12c94:	movw	r3, #535	; 0x217
   12c98:	ldr	r1, [r0]
   12c9c:	mov	r0, #12
   12ca0:	str	lr, [sp]
   12ca4:	ldr	lr, [r4, #220]	; 0xdc
   12ca8:	adds	ip, ip, #1
   12cac:	str	ip, [r4, #216]	; 0xd8
   12cb0:	adc	lr, lr, r2
   12cb4:	str	lr, [r4, #220]	; 0xdc
   12cb8:	bl	16978 <UnityAssertEqualNumber@@Base>
   12cbc:	ldr	r3, [r4, #224]	; 0xe0
   12cc0:	add	r0, sp, #12
   12cc4:	ldr	r2, [r4, #228]	; 0xe4
   12cc8:	adds	r3, r3, #1
   12ccc:	adc	r2, r2, #0
   12cd0:	str	r3, [r4, #224]	; 0xe0
   12cd4:	str	r2, [r4, #228]	; 0xe4
   12cd8:	bl	1a200 <destroy_lexer@@Base>
   12cdc:	ldr	r3, [r4, #232]	; 0xe8
   12ce0:	ldr	r2, [r4, #236]	; 0xec
   12ce4:	adds	r3, r3, #1
   12ce8:	adc	r2, r2, #0
   12cec:	str	r3, [r4, #232]	; 0xe8
   12cf0:	str	r2, [r4, #236]	; 0xec
   12cf4:	add	sp, sp, #24
   12cf8:	ldr	r4, [sp]
   12cfc:	add	sp, sp, #4
   12d00:	pop	{pc}		; (ldr pc, [sp], #4)

00012d04 <read_token_lessequalthan@@Base>:
   12d04:	strd	r4, [sp, #-12]!
   12d08:	movw	r4, #60480	; 0xec40
   12d0c:	movt	r4, #2
   12d10:	ldr	r3, [r4, #240]	; 0xf0
   12d14:	movw	r1, #54532	; 0xd504
   12d18:	movt	r1, #1
   12d1c:	str	lr, [sp, #8]
   12d20:	sub	sp, sp, #28
   12d24:	add	r5, r4, #272	; 0x110
   12d28:	ldr	r2, [r4, #244]	; 0xf4
   12d2c:	add	r0, sp, #12
   12d30:	adds	r3, r3, #1
   12d34:	adc	r2, r2, #0
   12d38:	str	r3, [r4, #240]	; 0xf0
   12d3c:	str	r2, [r4, #244]	; 0xf4
   12d40:	bl	1a1d4 <init_lexer@@Base>
   12d44:	ldr	r3, [r4, #248]	; 0xf8
   12d48:	add	r0, sp, #12
   12d4c:	ldr	r2, [r4, #252]	; 0xfc
   12d50:	adds	r3, r3, #1
   12d54:	adc	r2, r2, #0
   12d58:	str	r3, [r4, #248]	; 0xf8
   12d5c:	str	r2, [r4, #252]	; 0xfc
   12d60:	bl	1a480 <next@@Base>
   12d64:	ldr	ip, [r4, #256]	; 0x100
   12d68:	mov	r2, #148	; 0x94
   12d6c:	movw	r3, #518	; 0x206
   12d70:	ldr	lr, [r4, #260]	; 0x104
   12d74:	ldr	r1, [r0]
   12d78:	mov	r0, #12
   12d7c:	adds	ip, ip, #1
   12d80:	str	r2, [sp]
   12d84:	mov	r2, #0
   12d88:	adc	lr, lr, r2
   12d8c:	str	ip, [r4, #256]	; 0x100
   12d90:	str	lr, [r4, #260]	; 0x104
   12d94:	bl	16978 <UnityAssertEqualNumber@@Base>
   12d98:	ldr	r3, [r5, #-8]
   12d9c:	add	r0, sp, #12
   12da0:	ldr	r2, [r5, #-4]
   12da4:	adds	r3, r3, #1
   12da8:	adc	r2, r2, #0
   12dac:	str	r3, [r5, #-8]
   12db0:	str	r2, [r5, #-4]
   12db4:	bl	1a200 <destroy_lexer@@Base>
   12db8:	ldr	r3, [r5]
   12dbc:	ldr	r2, [r5, #4]
   12dc0:	adds	r3, r3, #1
   12dc4:	adc	r2, r2, #0
   12dc8:	str	r3, [r5]
   12dcc:	str	r2, [r5, #4]
   12dd0:	add	sp, sp, #28
   12dd4:	ldrd	r4, [sp]
   12dd8:	add	sp, sp, #8
   12ddc:	pop	{pc}		; (ldr pc, [sp], #4)

00012de0 <read_token_notequal@@Base>:
   12de0:	str	r4, [sp, #-8]!
   12de4:	movw	r1, #54536	; 0xd508
   12de8:	movt	r1, #1
   12dec:	ldr	r4, [pc, #192]	; 12eb4 <read_token_notequal@@Base+0xd4>
   12df0:	str	lr, [sp, #4]
   12df4:	sub	sp, sp, #24
   12df8:	add	r0, sp, #12
   12dfc:	ldr	r3, [r4, #-8]
   12e00:	ldr	r2, [r4, #-4]
   12e04:	adds	r3, r3, #1
   12e08:	adc	r2, r2, #0
   12e0c:	str	r3, [r4, #-8]
   12e10:	str	r2, [r4, #-4]
   12e14:	bl	1a1d4 <init_lexer@@Base>
   12e18:	ldr	r3, [r4]
   12e1c:	add	r0, sp, #12
   12e20:	ldr	r2, [r4, #4]
   12e24:	adds	r3, r3, #1
   12e28:	adc	r2, r2, #0
   12e2c:	str	r3, [r4]
   12e30:	str	r2, [r4, #4]
   12e34:	bl	1a480 <next@@Base>
   12e38:	mov	lr, #148	; 0x94
   12e3c:	ldr	ip, [r4, #8]
   12e40:	mov	r2, #0
   12e44:	movw	r3, #501	; 0x1f5
   12e48:	ldr	r1, [r0]
   12e4c:	mov	r0, #12
   12e50:	str	lr, [sp]
   12e54:	ldr	lr, [r4, #12]
   12e58:	adds	ip, ip, #1
   12e5c:	str	ip, [r4, #8]
   12e60:	adc	lr, lr, r2
   12e64:	str	lr, [r4, #12]
   12e68:	bl	16978 <UnityAssertEqualNumber@@Base>
   12e6c:	ldr	r3, [r4, #16]
   12e70:	add	r0, sp, #12
   12e74:	ldr	r2, [r4, #20]
   12e78:	adds	r3, r3, #1
   12e7c:	adc	r2, r2, #0
   12e80:	str	r3, [r4, #16]
   12e84:	str	r2, [r4, #20]
   12e88:	bl	1a200 <destroy_lexer@@Base>
   12e8c:	ldr	r3, [r4, #24]
   12e90:	ldr	r2, [r4, #28]
   12e94:	adds	r3, r3, #1
   12e98:	adc	r2, r2, #0
   12e9c:	str	r3, [r4, #24]
   12ea0:	str	r2, [r4, #28]
   12ea4:	add	sp, sp, #24
   12ea8:	ldr	r4, [sp]
   12eac:	add	sp, sp, #4
   12eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb4:	andeq	lr, r2, r0, ror #26

00012eb8 <read_token_equalequal@@Base>:
   12eb8:	str	r4, [sp, #-8]!
   12ebc:	movw	r1, #54540	; 0xd50c
   12ec0:	movt	r1, #1
   12ec4:	ldr	r4, [pc, #192]	; 12f8c <read_token_equalequal@@Base+0xd4>
   12ec8:	str	lr, [sp, #4]
   12ecc:	sub	sp, sp, #24
   12ed0:	add	r0, sp, #12
   12ed4:	ldr	r3, [r4]
   12ed8:	ldr	r2, [r4, #4]
   12edc:	adds	r3, r3, #1
   12ee0:	adc	r2, r2, #0
   12ee4:	str	r3, [r4]
   12ee8:	str	r2, [r4, #4]
   12eec:	bl	1a1d4 <init_lexer@@Base>
   12ef0:	ldr	r3, [r4, #8]
   12ef4:	add	r0, sp, #12
   12ef8:	ldr	r2, [r4, #12]
   12efc:	adds	r3, r3, #1
   12f00:	adc	r2, r2, #0
   12f04:	str	r3, [r4, #8]
   12f08:	str	r2, [r4, #12]
   12f0c:	bl	1a480 <next@@Base>
   12f10:	mov	lr, #148	; 0x94
   12f14:	ldr	ip, [r4, #16]
   12f18:	mov	r2, #0
   12f1c:	mov	r3, #484	; 0x1e4
   12f20:	ldr	r1, [r0]
   12f24:	mov	r0, #12
   12f28:	str	lr, [sp]
   12f2c:	ldr	lr, [r4, #20]
   12f30:	adds	ip, ip, #1
   12f34:	str	ip, [r4, #16]
   12f38:	adc	lr, lr, r2
   12f3c:	str	lr, [r4, #20]
   12f40:	bl	16978 <UnityAssertEqualNumber@@Base>
   12f44:	ldr	r3, [r4, #24]
   12f48:	add	r0, sp, #12
   12f4c:	ldr	r2, [r4, #28]
   12f50:	adds	r3, r3, #1
   12f54:	adc	r2, r2, #0
   12f58:	str	r3, [r4, #24]
   12f5c:	str	r2, [r4, #28]
   12f60:	bl	1a200 <destroy_lexer@@Base>
   12f64:	ldr	r3, [r4, #32]
   12f68:	ldr	r2, [r4, #36]	; 0x24
   12f6c:	adds	r3, r3, #1
   12f70:	adc	r2, r2, #0
   12f74:	str	r3, [r4, #32]
   12f78:	str	r2, [r4, #36]	; 0x24
   12f7c:	add	sp, sp, #24
   12f80:	ldr	r4, [sp]
   12f84:	add	sp, sp, #4
   12f88:	pop	{pc}		; (ldr pc, [sp], #4)
   12f8c:	andeq	lr, r2, r0, lsl #27

00012f90 <read_token_else@@Base>:
   12f90:	str	r4, [sp, #-8]!
   12f94:	movw	r1, #54956	; 0xd6ac
   12f98:	movt	r1, #1
   12f9c:	ldr	r4, [pc, #192]	; 13064 <read_token_else@@Base+0xd4>
   12fa0:	str	lr, [sp, #4]
   12fa4:	sub	sp, sp, #24
   12fa8:	add	r0, sp, #12
   12fac:	ldr	r3, [r4, #-8]
   12fb0:	ldr	r2, [r4, #-4]
   12fb4:	adds	r3, r3, #1
   12fb8:	adc	r2, r2, #0
   12fbc:	str	r3, [r4, #-8]
   12fc0:	str	r2, [r4, #-4]
   12fc4:	bl	1a1d4 <init_lexer@@Base>
   12fc8:	ldr	r3, [r4]
   12fcc:	add	r0, sp, #12
   12fd0:	ldr	r2, [r4, #4]
   12fd4:	adds	r3, r3, #1
   12fd8:	adc	r2, r2, #0
   12fdc:	str	r3, [r4]
   12fe0:	str	r2, [r4, #4]
   12fe4:	bl	1a480 <next@@Base>
   12fe8:	mov	lr, #148	; 0x94
   12fec:	ldr	ip, [r4, #8]
   12ff0:	mov	r2, #0
   12ff4:	movw	r3, #467	; 0x1d3
   12ff8:	ldr	r1, [r0]
   12ffc:	mov	r0, #11
   13000:	str	lr, [sp]
   13004:	ldr	lr, [r4, #12]
   13008:	adds	ip, ip, #1
   1300c:	str	ip, [r4, #8]
   13010:	adc	lr, lr, r2
   13014:	str	lr, [r4, #12]
   13018:	bl	16978 <UnityAssertEqualNumber@@Base>
   1301c:	ldr	r3, [r4, #16]
   13020:	add	r0, sp, #12
   13024:	ldr	r2, [r4, #20]
   13028:	adds	r3, r3, #1
   1302c:	adc	r2, r2, #0
   13030:	str	r3, [r4, #16]
   13034:	str	r2, [r4, #20]
   13038:	bl	1a200 <destroy_lexer@@Base>
   1303c:	ldr	r3, [r4, #24]
   13040:	ldr	r2, [r4, #28]
   13044:	adds	r3, r3, #1
   13048:	adc	r2, r2, #0
   1304c:	str	r3, [r4, #24]
   13050:	str	r2, [r4, #28]
   13054:	add	sp, sp, #24
   13058:	ldr	r4, [sp]
   1305c:	add	sp, sp, #4
   13060:	pop	{pc}		; (ldr pc, [sp], #4)
   13064:			; <UNDEFINED> instruction: 0x0002edb0

00013068 <read_token_if@@Base>:
   13068:	str	r4, [sp, #-8]!
   1306c:	movw	r1, #54544	; 0xd510
   13070:	movt	r1, #1
   13074:	ldr	r4, [pc, #192]	; 1313c <read_token_if@@Base+0xd4>
   13078:	str	lr, [sp, #4]
   1307c:	sub	sp, sp, #24
   13080:	add	r0, sp, #12
   13084:	ldr	r3, [r4]
   13088:	ldr	r2, [r4, #4]
   1308c:	adds	r3, r3, #1
   13090:	adc	r2, r2, #0
   13094:	str	r3, [r4]
   13098:	str	r2, [r4, #4]
   1309c:	bl	1a1d4 <init_lexer@@Base>
   130a0:	ldr	r3, [r4, #8]
   130a4:	add	r0, sp, #12
   130a8:	ldr	r2, [r4, #12]
   130ac:	adds	r3, r3, #1
   130b0:	adc	r2, r2, #0
   130b4:	str	r3, [r4, #8]
   130b8:	str	r2, [r4, #12]
   130bc:	bl	1a480 <next@@Base>
   130c0:	mov	lr, #148	; 0x94
   130c4:	ldr	ip, [r4, #16]
   130c8:	mov	r2, #0
   130cc:	movw	r3, #450	; 0x1c2
   130d0:	ldr	r1, [r0]
   130d4:	mov	r0, #10
   130d8:	str	lr, [sp]
   130dc:	ldr	lr, [r4, #20]
   130e0:	adds	ip, ip, #1
   130e4:	str	ip, [r4, #16]
   130e8:	adc	lr, lr, r2
   130ec:	str	lr, [r4, #20]
   130f0:	bl	16978 <UnityAssertEqualNumber@@Base>
   130f4:	ldr	r3, [r4, #24]
   130f8:	add	r0, sp, #12
   130fc:	ldr	r2, [r4, #28]
   13100:	adds	r3, r3, #1
   13104:	adc	r2, r2, #0
   13108:	str	r3, [r4, #24]
   1310c:	str	r2, [r4, #28]
   13110:	bl	1a200 <destroy_lexer@@Base>
   13114:	ldr	r3, [r4, #32]
   13118:	ldr	r2, [r4, #36]	; 0x24
   1311c:	adds	r3, r3, #1
   13120:	adc	r2, r2, #0
   13124:	str	r3, [r4, #32]
   13128:	str	r2, [r4, #36]	; 0x24
   1312c:	add	sp, sp, #24
   13130:	ldr	r4, [sp]
   13134:	add	sp, sp, #4
   13138:	pop	{pc}		; (ldr pc, [sp], #4)
   1313c:	ldrdeq	lr, [r2], -r0

00013140 <read_token_eof@@Base>:
   13140:	str	r4, [sp, #-8]!
   13144:	movw	r1, #56688	; 0xdd70
   13148:	movt	r1, #1
   1314c:	ldr	r4, [pc, #192]	; 13214 <read_token_eof@@Base+0xd4>
   13150:	str	lr, [sp, #4]
   13154:	sub	sp, sp, #24
   13158:	add	r0, sp, #12
   1315c:	ldr	r3, [r4, #-8]
   13160:	ldr	r2, [r4, #-4]
   13164:	adds	r3, r3, #1
   13168:	adc	r2, r2, #0
   1316c:	str	r3, [r4, #-8]
   13170:	str	r2, [r4, #-4]
   13174:	bl	1a1d4 <init_lexer@@Base>
   13178:	ldr	r3, [r4]
   1317c:	add	r0, sp, #12
   13180:	ldr	r2, [r4, #4]
   13184:	adds	r3, r3, #1
   13188:	adc	r2, r2, #0
   1318c:	str	r3, [r4]
   13190:	str	r2, [r4, #4]
   13194:	bl	1a480 <next@@Base>
   13198:	mov	lr, #148	; 0x94
   1319c:	ldr	ip, [r4, #8]
   131a0:	mov	r2, #0
   131a4:	movw	r3, #433	; 0x1b1
   131a8:	ldr	r1, [r0]
   131ac:	mov	r0, #9
   131b0:	str	lr, [sp]
   131b4:	ldr	lr, [r4, #12]
   131b8:	adds	ip, ip, #1
   131bc:	str	ip, [r4, #8]
   131c0:	adc	lr, lr, r2
   131c4:	str	lr, [r4, #12]
   131c8:	bl	16978 <UnityAssertEqualNumber@@Base>
   131cc:	ldr	r3, [r4, #16]
   131d0:	add	r0, sp, #12
   131d4:	ldr	r2, [r4, #20]
   131d8:	adds	r3, r3, #1
   131dc:	adc	r2, r2, #0
   131e0:	str	r3, [r4, #16]
   131e4:	str	r2, [r4, #20]
   131e8:	bl	1a200 <destroy_lexer@@Base>
   131ec:	ldr	r3, [r4, #24]
   131f0:	ldr	r2, [r4, #28]
   131f4:	adds	r3, r3, #1
   131f8:	adc	r2, r2, #0
   131fc:	str	r3, [r4, #24]
   13200:	str	r2, [r4, #28]
   13204:	add	sp, sp, #24
   13208:	ldr	r4, [sp]
   1320c:	add	sp, sp, #4
   13210:	pop	{pc}		; (ldr pc, [sp], #4)
   13214:	andeq	lr, r2, r0, lsl #28

00013218 <read_token_semicolon@@Base>:
   13218:	str	r4, [sp, #-8]!
   1321c:	movw	r1, #54548	; 0xd514
   13220:	movt	r1, #1
   13224:	ldr	r4, [pc, #192]	; 132ec <read_token_semicolon@@Base+0xd4>
   13228:	str	lr, [sp, #4]
   1322c:	sub	sp, sp, #24
   13230:	add	r0, sp, #12
   13234:	ldr	r3, [r4]
   13238:	ldr	r2, [r4, #4]
   1323c:	adds	r3, r3, #1
   13240:	adc	r2, r2, #0
   13244:	str	r3, [r4]
   13248:	str	r2, [r4, #4]
   1324c:	bl	1a1d4 <init_lexer@@Base>
   13250:	ldr	r3, [r4, #8]
   13254:	add	r0, sp, #12
   13258:	ldr	r2, [r4, #12]
   1325c:	adds	r3, r3, #1
   13260:	adc	r2, r2, #0
   13264:	str	r3, [r4, #8]
   13268:	str	r2, [r4, #12]
   1326c:	bl	1a480 <next@@Base>
   13270:	mov	lr, #148	; 0x94
   13274:	ldr	ip, [r4, #16]
   13278:	mov	r2, #0
   1327c:	mov	r3, #416	; 0x1a0
   13280:	ldr	r1, [r0]
   13284:	mov	r0, #8
   13288:	str	lr, [sp]
   1328c:	ldr	lr, [r4, #20]
   13290:	adds	ip, ip, #1
   13294:	str	ip, [r4, #16]
   13298:	adc	lr, lr, r2
   1329c:	str	lr, [r4, #20]
   132a0:	bl	16978 <UnityAssertEqualNumber@@Base>
   132a4:	ldr	r3, [r4, #24]
   132a8:	add	r0, sp, #12
   132ac:	ldr	r2, [r4, #28]
   132b0:	adds	r3, r3, #1
   132b4:	adc	r2, r2, #0
   132b8:	str	r3, [r4, #24]
   132bc:	str	r2, [r4, #28]
   132c0:	bl	1a200 <destroy_lexer@@Base>
   132c4:	ldr	r3, [r4, #32]
   132c8:	ldr	r2, [r4, #36]	; 0x24
   132cc:	adds	r3, r3, #1
   132d0:	adc	r2, r2, #0
   132d4:	str	r3, [r4, #32]
   132d8:	str	r2, [r4, #36]	; 0x24
   132dc:	add	sp, sp, #24
   132e0:	ldr	r4, [sp]
   132e4:	add	sp, sp, #4
   132e8:	pop	{pc}		; (ldr pc, [sp], #4)
   132ec:	andeq	lr, r2, r0, lsr #28

000132f0 <read_token_return@@Base>:
   132f0:	str	r4, [sp, #-8]!
   132f4:	movw	r1, #54552	; 0xd518
   132f8:	movt	r1, #1
   132fc:	ldr	r4, [pc, #192]	; 133c4 <read_token_return@@Base+0xd4>
   13300:	str	lr, [sp, #4]
   13304:	sub	sp, sp, #24
   13308:	add	r0, sp, #12
   1330c:	ldr	r3, [r4, #-8]
   13310:	ldr	r2, [r4, #-4]
   13314:	adds	r3, r3, #1
   13318:	adc	r2, r2, #0
   1331c:	str	r3, [r4, #-8]
   13320:	str	r2, [r4, #-4]
   13324:	bl	1a1d4 <init_lexer@@Base>
   13328:	ldr	r3, [r4]
   1332c:	add	r0, sp, #12
   13330:	ldr	r2, [r4, #4]
   13334:	adds	r3, r3, #1
   13338:	adc	r2, r2, #0
   1333c:	str	r3, [r4]
   13340:	str	r2, [r4, #4]
   13344:	bl	1a480 <next@@Base>
   13348:	mov	lr, #148	; 0x94
   1334c:	ldr	ip, [r4, #8]
   13350:	mov	r2, #0
   13354:	movw	r3, #399	; 0x18f
   13358:	ldr	r1, [r0]
   1335c:	mov	r0, #7
   13360:	str	lr, [sp]
   13364:	ldr	lr, [r4, #12]
   13368:	adds	ip, ip, #1
   1336c:	str	ip, [r4, #8]
   13370:	adc	lr, lr, r2
   13374:	str	lr, [r4, #12]
   13378:	bl	16978 <UnityAssertEqualNumber@@Base>
   1337c:	ldr	r3, [r4, #16]
   13380:	add	r0, sp, #12
   13384:	ldr	r2, [r4, #20]
   13388:	adds	r3, r3, #1
   1338c:	adc	r2, r2, #0
   13390:	str	r3, [r4, #16]
   13394:	str	r2, [r4, #20]
   13398:	bl	1a200 <destroy_lexer@@Base>
   1339c:	ldr	r3, [r4, #24]
   133a0:	ldr	r2, [r4, #28]
   133a4:	adds	r3, r3, #1
   133a8:	adc	r2, r2, #0
   133ac:	str	r3, [r4, #24]
   133b0:	str	r2, [r4, #28]
   133b4:	add	sp, sp, #24
   133b8:	ldr	r4, [sp]
   133bc:	add	sp, sp, #4
   133c0:	pop	{pc}		; (ldr pc, [sp], #4)
   133c4:	andeq	lr, r2, r0, asr lr

000133c8 <read_token_cbra@@Base>:
   133c8:	str	r4, [sp, #-8]!
   133cc:	movw	r1, #54760	; 0xd5e8
   133d0:	movt	r1, #1
   133d4:	ldr	r4, [pc, #192]	; 1349c <read_token_cbra@@Base+0xd4>
   133d8:	str	lr, [sp, #4]
   133dc:	sub	sp, sp, #24
   133e0:	add	r0, sp, #12
   133e4:	ldr	r3, [r4]
   133e8:	ldr	r2, [r4, #4]
   133ec:	adds	r3, r3, #1
   133f0:	adc	r2, r2, #0
   133f4:	str	r3, [r4]
   133f8:	str	r2, [r4, #4]
   133fc:	bl	1a1d4 <init_lexer@@Base>
   13400:	ldr	r3, [r4, #8]
   13404:	add	r0, sp, #12
   13408:	ldr	r2, [r4, #12]
   1340c:	adds	r3, r3, #1
   13410:	adc	r2, r2, #0
   13414:	str	r3, [r4, #8]
   13418:	str	r2, [r4, #12]
   1341c:	bl	1a480 <next@@Base>
   13420:	mov	lr, #148	; 0x94
   13424:	ldr	ip, [r4, #16]
   13428:	mov	r2, #0
   1342c:	movw	r3, #382	; 0x17e
   13430:	ldr	r1, [r0]
   13434:	mov	r0, #6
   13438:	str	lr, [sp]
   1343c:	ldr	lr, [r4, #20]
   13440:	adds	ip, ip, #1
   13444:	str	ip, [r4, #16]
   13448:	adc	lr, lr, r2
   1344c:	str	lr, [r4, #20]
   13450:	bl	16978 <UnityAssertEqualNumber@@Base>
   13454:	ldr	r3, [r4, #24]
   13458:	add	r0, sp, #12
   1345c:	ldr	r2, [r4, #28]
   13460:	adds	r3, r3, #1
   13464:	adc	r2, r2, #0
   13468:	str	r3, [r4, #24]
   1346c:	str	r2, [r4, #28]
   13470:	bl	1a200 <destroy_lexer@@Base>
   13474:	ldr	r3, [r4, #32]
   13478:	ldr	r2, [r4, #36]	; 0x24
   1347c:	adds	r3, r3, #1
   13480:	adc	r2, r2, #0
   13484:	str	r3, [r4, #32]
   13488:	str	r2, [r4, #36]	; 0x24
   1348c:	add	sp, sp, #24
   13490:	ldr	r4, [sp]
   13494:	add	sp, sp, #4
   13498:	pop	{pc}		; (ldr pc, [sp], #4)
   1349c:	andeq	lr, r2, r0, ror lr

000134a0 <read_token_obra@@Base>:
   134a0:	str	r4, [sp, #-8]!
   134a4:	movw	r1, #54560	; 0xd520
   134a8:	movt	r1, #1
   134ac:	ldr	r4, [pc, #192]	; 13574 <read_token_obra@@Base+0xd4>
   134b0:	str	lr, [sp, #4]
   134b4:	sub	sp, sp, #24
   134b8:	add	r0, sp, #12
   134bc:	ldr	r3, [r4, #-8]
   134c0:	ldr	r2, [r4, #-4]
   134c4:	adds	r3, r3, #1
   134c8:	adc	r2, r2, #0
   134cc:	str	r3, [r4, #-8]
   134d0:	str	r2, [r4, #-4]
   134d4:	bl	1a1d4 <init_lexer@@Base>
   134d8:	ldr	r3, [r4]
   134dc:	add	r0, sp, #12
   134e0:	ldr	r2, [r4, #4]
   134e4:	adds	r3, r3, #1
   134e8:	adc	r2, r2, #0
   134ec:	str	r3, [r4]
   134f0:	str	r2, [r4, #4]
   134f4:	bl	1a480 <next@@Base>
   134f8:	mov	lr, #148	; 0x94
   134fc:	ldr	ip, [r4, #8]
   13500:	mov	r2, #0
   13504:	mov	r3, #364	; 0x16c
   13508:	ldr	r1, [r0]
   1350c:	mov	r0, #5
   13510:	str	lr, [sp]
   13514:	ldr	lr, [r4, #12]
   13518:	adds	ip, ip, #1
   1351c:	str	ip, [r4, #8]
   13520:	adc	lr, lr, r2
   13524:	str	lr, [r4, #12]
   13528:	bl	16978 <UnityAssertEqualNumber@@Base>
   1352c:	ldr	r3, [r4, #16]
   13530:	add	r0, sp, #12
   13534:	ldr	r2, [r4, #20]
   13538:	adds	r3, r3, #1
   1353c:	adc	r2, r2, #0
   13540:	str	r3, [r4, #16]
   13544:	str	r2, [r4, #20]
   13548:	bl	1a200 <destroy_lexer@@Base>
   1354c:	ldr	r3, [r4, #24]
   13550:	ldr	r2, [r4, #28]
   13554:	adds	r3, r3, #1
   13558:	adc	r2, r2, #0
   1355c:	str	r3, [r4, #24]
   13560:	str	r2, [r4, #28]
   13564:	add	sp, sp, #24
   13568:	ldr	r4, [sp]
   1356c:	add	sp, sp, #4
   13570:	pop	{pc}		; (ldr pc, [sp], #4)
   13574:	andeq	lr, r2, r0, lsr #29

00013578 <read_token_cpar@@Base>:
   13578:	str	r4, [sp, #-8]!
   1357c:	movw	r1, #54564	; 0xd524
   13580:	movt	r1, #1
   13584:	ldr	r4, [pc, #192]	; 1364c <read_token_cpar@@Base+0xd4>
   13588:	str	lr, [sp, #4]
   1358c:	sub	sp, sp, #24
   13590:	add	r0, sp, #12
   13594:	ldr	r3, [r4]
   13598:	ldr	r2, [r4, #4]
   1359c:	adds	r3, r3, #1
   135a0:	adc	r2, r2, #0
   135a4:	str	r3, [r4]
   135a8:	str	r2, [r4, #4]
   135ac:	bl	1a1d4 <init_lexer@@Base>
   135b0:	ldr	r3, [r4, #8]
   135b4:	add	r0, sp, #12
   135b8:	ldr	r2, [r4, #12]
   135bc:	adds	r3, r3, #1
   135c0:	adc	r2, r2, #0
   135c4:	str	r3, [r4, #8]
   135c8:	str	r2, [r4, #12]
   135cc:	bl	1a480 <next@@Base>
   135d0:	mov	lr, #148	; 0x94
   135d4:	ldr	ip, [r4, #16]
   135d8:	mov	r2, #0
   135dc:	movw	r3, #347	; 0x15b
   135e0:	ldr	r1, [r0]
   135e4:	mov	r0, #4
   135e8:	str	lr, [sp]
   135ec:	ldr	lr, [r4, #20]
   135f0:	adds	ip, ip, #1
   135f4:	str	ip, [r4, #16]
   135f8:	adc	lr, lr, r2
   135fc:	str	lr, [r4, #20]
   13600:	bl	16978 <UnityAssertEqualNumber@@Base>
   13604:	ldr	r3, [r4, #24]
   13608:	add	r0, sp, #12
   1360c:	ldr	r2, [r4, #28]
   13610:	adds	r3, r3, #1
   13614:	adc	r2, r2, #0
   13618:	str	r3, [r4, #24]
   1361c:	str	r2, [r4, #28]
   13620:	bl	1a200 <destroy_lexer@@Base>
   13624:	ldr	r3, [r4, #32]
   13628:	ldr	r2, [r4, #36]	; 0x24
   1362c:	adds	r3, r3, #1
   13630:	adc	r2, r2, #0
   13634:	str	r3, [r4, #32]
   13638:	str	r2, [r4, #36]	; 0x24
   1363c:	add	sp, sp, #24
   13640:	ldr	r4, [sp]
   13644:	add	sp, sp, #4
   13648:	pop	{pc}		; (ldr pc, [sp], #4)
   1364c:	andeq	lr, r2, r0, asr #29

00013650 <read_token_opar@@Base>:
   13650:	str	r4, [sp, #-8]!
   13654:	movw	r1, #54568	; 0xd528
   13658:	movt	r1, #1
   1365c:	ldr	r4, [pc, #192]	; 13724 <read_token_opar@@Base+0xd4>
   13660:	str	lr, [sp, #4]
   13664:	sub	sp, sp, #24
   13668:	add	r0, sp, #12
   1366c:	ldr	r3, [r4, #-8]
   13670:	ldr	r2, [r4, #-4]
   13674:	adds	r3, r3, #1
   13678:	adc	r2, r2, #0
   1367c:	str	r3, [r4, #-8]
   13680:	str	r2, [r4, #-4]
   13684:	bl	1a1d4 <init_lexer@@Base>
   13688:	ldr	r3, [r4]
   1368c:	add	r0, sp, #12
   13690:	ldr	r2, [r4, #4]
   13694:	adds	r3, r3, #1
   13698:	adc	r2, r2, #0
   1369c:	str	r3, [r4]
   136a0:	str	r2, [r4, #4]
   136a4:	bl	1a480 <next@@Base>
   136a8:	mov	lr, #148	; 0x94
   136ac:	ldr	ip, [r4, #8]
   136b0:	mov	r2, #0
   136b4:	movw	r3, #330	; 0x14a
   136b8:	ldr	r1, [r0]
   136bc:	mov	r0, #3
   136c0:	str	lr, [sp]
   136c4:	ldr	lr, [r4, #12]
   136c8:	adds	ip, ip, #1
   136cc:	str	ip, [r4, #8]
   136d0:	adc	lr, lr, r2
   136d4:	str	lr, [r4, #12]
   136d8:	bl	16978 <UnityAssertEqualNumber@@Base>
   136dc:	ldr	r3, [r4, #16]
   136e0:	add	r0, sp, #12
   136e4:	ldr	r2, [r4, #20]
   136e8:	adds	r3, r3, #1
   136ec:	adc	r2, r2, #0
   136f0:	str	r3, [r4, #16]
   136f4:	str	r2, [r4, #20]
   136f8:	bl	1a200 <destroy_lexer@@Base>
   136fc:	ldr	r3, [r4, #24]
   13700:	ldr	r2, [r4, #28]
   13704:	adds	r3, r3, #1
   13708:	adc	r2, r2, #0
   1370c:	str	r3, [r4, #24]
   13710:	str	r2, [r4, #28]
   13714:	add	sp, sp, #24
   13718:	ldr	r4, [sp]
   1371c:	add	sp, sp, #4
   13720:	pop	{pc}		; (ldr pc, [sp], #4)
   13724:	strdeq	lr, [r2], -r0

00013728 <read_token_function@@Base>:
   13728:	str	r4, [sp, #-8]!
   1372c:	movw	r1, #54572	; 0xd52c
   13730:	movt	r1, #1
   13734:	ldr	r4, [pc, #192]	; 137fc <read_token_function@@Base+0xd4>
   13738:	str	lr, [sp, #4]
   1373c:	sub	sp, sp, #24
   13740:	add	r0, sp, #12
   13744:	ldr	r3, [r4]
   13748:	ldr	r2, [r4, #4]
   1374c:	adds	r3, r3, #1
   13750:	adc	r2, r2, #0
   13754:	str	r3, [r4]
   13758:	str	r2, [r4, #4]
   1375c:	bl	1a1d4 <init_lexer@@Base>
   13760:	ldr	r3, [r4, #8]
   13764:	add	r0, sp, #12
   13768:	ldr	r2, [r4, #12]
   1376c:	adds	r3, r3, #1
   13770:	adc	r2, r2, #0
   13774:	str	r3, [r4, #8]
   13778:	str	r2, [r4, #12]
   1377c:	bl	1a480 <next@@Base>
   13780:	mov	lr, #148	; 0x94
   13784:	ldr	ip, [r4, #16]
   13788:	mov	r2, #0
   1378c:	movw	r3, #313	; 0x139
   13790:	ldr	r1, [r0]
   13794:	mov	r0, #2
   13798:	str	lr, [sp]
   1379c:	ldr	lr, [r4, #20]
   137a0:	adds	ip, ip, #1
   137a4:	str	ip, [r4, #16]
   137a8:	adc	lr, lr, r2
   137ac:	str	lr, [r4, #20]
   137b0:	bl	16978 <UnityAssertEqualNumber@@Base>
   137b4:	ldr	r3, [r4, #24]
   137b8:	add	r0, sp, #12
   137bc:	ldr	r2, [r4, #28]
   137c0:	adds	r3, r3, #1
   137c4:	adc	r2, r2, #0
   137c8:	str	r3, [r4, #24]
   137cc:	str	r2, [r4, #28]
   137d0:	bl	1a200 <destroy_lexer@@Base>
   137d4:	ldr	r3, [r4, #32]
   137d8:	ldr	r2, [r4, #36]	; 0x24
   137dc:	adds	r3, r3, #1
   137e0:	adc	r2, r2, #0
   137e4:	str	r3, [r4, #32]
   137e8:	str	r2, [r4, #36]	; 0x24
   137ec:	add	sp, sp, #24
   137f0:	ldr	r4, [sp]
   137f4:	add	sp, sp, #4
   137f8:	pop	{pc}		; (ldr pc, [sp], #4)
   137fc:	andeq	lr, r2, r0, lsl pc

00013800 <read_token_int_value@@Base>:
   13800:	str	r4, [sp, #-8]!
   13804:	movw	r1, #54580	; 0xd534
   13808:	movt	r1, #1
   1380c:	ldr	r4, [pc, #192]	; 138d4 <read_token_int_value@@Base+0xd4>
   13810:	str	lr, [sp, #4]
   13814:	sub	sp, sp, #24
   13818:	add	r0, sp, #12
   1381c:	ldr	r3, [r4, #-8]
   13820:	ldr	r2, [r4, #-4]
   13824:	adds	r3, r3, #1
   13828:	adc	r2, r2, #0
   1382c:	str	r3, [r4, #-8]
   13830:	str	r2, [r4, #-4]
   13834:	bl	1a1d4 <init_lexer@@Base>
   13838:	ldr	r3, [r4]
   1383c:	add	r0, sp, #12
   13840:	ldr	r2, [r4, #4]
   13844:	adds	r3, r3, #1
   13848:	adc	r2, r2, #0
   1384c:	str	r3, [r4]
   13850:	str	r2, [r4, #4]
   13854:	bl	1a480 <next@@Base>
   13858:	mov	lr, #148	; 0x94
   1385c:	ldr	ip, [r4, #8]
   13860:	mov	r2, #0
   13864:	mov	r3, #296	; 0x128
   13868:	ldr	r1, [r0]
   1386c:	mov	r0, #1
   13870:	str	lr, [sp]
   13874:	ldr	lr, [r4, #12]
   13878:	adds	ip, ip, r0
   1387c:	str	ip, [r4, #8]
   13880:	adc	lr, lr, r2
   13884:	str	lr, [r4, #12]
   13888:	bl	16978 <UnityAssertEqualNumber@@Base>
   1388c:	ldr	r3, [r4, #16]
   13890:	add	r0, sp, #12
   13894:	ldr	r2, [r4, #20]
   13898:	adds	r3, r3, #1
   1389c:	adc	r2, r2, #0
   138a0:	str	r3, [r4, #16]
   138a4:	str	r2, [r4, #20]
   138a8:	bl	1a200 <destroy_lexer@@Base>
   138ac:	ldr	r3, [r4, #24]
   138b0:	ldr	r2, [r4, #28]
   138b4:	adds	r3, r3, #1
   138b8:	adc	r2, r2, #0
   138bc:	str	r3, [r4, #24]
   138c0:	str	r2, [r4, #28]
   138c4:	add	sp, sp, #24
   138c8:	ldr	r4, [sp]
   138cc:	add	sp, sp, #4
   138d0:	pop	{pc}		; (ldr pc, [sp], #4)
   138d4:	andeq	lr, r2, r0, asr #30

000138d8 <read_token_int_type@@Base>:
   138d8:	str	r4, [sp, #-8]!
   138dc:	movw	r1, #54588	; 0xd53c
   138e0:	movt	r1, #1
   138e4:	ldr	r4, [pc, #192]	; 139ac <read_token_int_type@@Base+0xd4>
   138e8:	str	lr, [sp, #4]
   138ec:	sub	sp, sp, #24
   138f0:	add	r0, sp, #12
   138f4:	ldr	r3, [r4]
   138f8:	ldr	r2, [r4, #4]
   138fc:	adds	r3, r3, #1
   13900:	adc	r2, r2, #0
   13904:	str	r3, [r4]
   13908:	str	r2, [r4, #4]
   1390c:	bl	1a1d4 <init_lexer@@Base>
   13910:	ldr	r3, [r4, #8]
   13914:	add	r0, sp, #12
   13918:	ldr	r2, [r4, #12]
   1391c:	adds	r3, r3, #1
   13920:	adc	r2, r2, #0
   13924:	str	r3, [r4, #8]
   13928:	str	r2, [r4, #12]
   1392c:	bl	1a480 <next@@Base>
   13930:	mov	lr, #148	; 0x94
   13934:	ldr	ip, [r4, #16]
   13938:	mov	r2, #0
   1393c:	movw	r3, #279	; 0x117
   13940:	ldr	r1, [r0]
   13944:	mov	r0, r2
   13948:	str	lr, [sp]
   1394c:	ldr	lr, [r4, #20]
   13950:	adds	ip, ip, #1
   13954:	str	ip, [r4, #16]
   13958:	adc	lr, lr, r2
   1395c:	str	lr, [r4, #20]
   13960:	bl	16978 <UnityAssertEqualNumber@@Base>
   13964:	ldr	r3, [r4, #24]
   13968:	add	r0, sp, #12
   1396c:	ldr	r2, [r4, #28]
   13970:	adds	r3, r3, #1
   13974:	adc	r2, r2, #0
   13978:	str	r3, [r4, #24]
   1397c:	str	r2, [r4, #28]
   13980:	bl	1a200 <destroy_lexer@@Base>
   13984:	ldr	r3, [r4, #32]
   13988:	ldr	r2, [r4, #36]	; 0x24
   1398c:	adds	r3, r3, #1
   13990:	adc	r2, r2, #0
   13994:	str	r3, [r4, #32]
   13998:	str	r2, [r4, #36]	; 0x24
   1399c:	add	sp, sp, #24
   139a0:	ldr	r4, [sp]
   139a4:	add	sp, sp, #4
   139a8:	pop	{pc}		; (ldr pc, [sp], #4)
   139ac:	andeq	lr, r2, r0, ror #30

000139b0 <if_with_else@@Base>:
   139b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   139b4:	movw	r1, #54592	; 0xd540
   139b8:	movt	r1, #1
   139bc:	strd	r6, [sp, #8]
   139c0:	movw	r6, #60480	; 0xec40
   139c4:	movt	r6, #2
   139c8:	add	r4, r6, #848	; 0x350
   139cc:	ldr	r3, [r4, #-8]
   139d0:	mov	r5, #148	; 0x94
   139d4:	strd	r8, [sp, #16]
   139d8:	ldr	r2, [r4, #-4]
   139dc:	strd	sl, [sp, #24]
   139e0:	str	lr, [sp, #32]
   139e4:	sub	sp, sp, #28
   139e8:	adds	r3, r3, #1
   139ec:	add	r0, sp, #12
   139f0:	adc	r2, r2, #0
   139f4:	str	r3, [r4, #-8]
   139f8:	str	r2, [r4, #-4]
   139fc:	bl	1a1d4 <init_lexer@@Base>
   13a00:	ldr	r3, [r4]
   13a04:	add	r0, sp, #12
   13a08:	ldr	r2, [r4, #4]
   13a0c:	adds	r3, r3, #1
   13a10:	adc	r2, r2, #0
   13a14:	str	r3, [r4]
   13a18:	str	r2, [r4, #4]
   13a1c:	bl	1a480 <next@@Base>
   13a20:	ldr	ip, [r4, #8]
   13a24:	mov	r2, #0
   13a28:	mov	r3, #210	; 0xd2
   13a2c:	ldr	r1, [r0]
   13a30:	str	r5, [sp]
   13a34:	ldr	r0, [r4, #12]
   13a38:	adds	ip, ip, #1
   13a3c:	str	ip, [r4, #8]
   13a40:	adc	ip, r0, r2
   13a44:	mov	r0, r2
   13a48:	str	ip, [r4, #12]
   13a4c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13a50:	ldr	r3, [r4, #16]
   13a54:	add	r0, sp, #12
   13a58:	ldr	r2, [r4, #20]
   13a5c:	adds	r3, r3, #1
   13a60:	adc	r2, r2, #0
   13a64:	str	r3, [r4, #16]
   13a68:	str	r2, [r4, #20]
   13a6c:	bl	1a480 <next@@Base>
   13a70:	ldr	ip, [r4, #24]
   13a74:	mov	r2, #0
   13a78:	mov	r3, #212	; 0xd4
   13a7c:	ldr	r1, [r0]
   13a80:	str	r5, [sp]
   13a84:	ldr	r0, [r4, #28]
   13a88:	adds	ip, ip, #1
   13a8c:	str	ip, [r4, #24]
   13a90:	adc	ip, r0, r2
   13a94:	mov	r0, #2
   13a98:	str	ip, [r4, #28]
   13a9c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13aa0:	ldr	r3, [r4, #32]
   13aa4:	add	r0, sp, #12
   13aa8:	ldr	r2, [r4, #36]	; 0x24
   13aac:	adds	r3, r3, #1
   13ab0:	adc	r2, r2, #0
   13ab4:	str	r3, [r4, #32]
   13ab8:	str	r2, [r4, #36]	; 0x24
   13abc:	bl	1a480 <next@@Base>
   13ac0:	ldr	ip, [r4, #40]	; 0x28
   13ac4:	mov	r2, #0
   13ac8:	mov	r3, #214	; 0xd6
   13acc:	ldr	r1, [r0]
   13ad0:	str	r5, [sp]
   13ad4:	ldr	r0, [r4, #44]	; 0x2c
   13ad8:	adds	ip, ip, #1
   13adc:	str	ip, [r4, #40]	; 0x28
   13ae0:	adc	ip, r0, r2
   13ae4:	mov	r0, #3
   13ae8:	str	ip, [r4, #44]	; 0x2c
   13aec:	bl	16978 <UnityAssertEqualNumber@@Base>
   13af0:	ldr	r3, [r4, #48]	; 0x30
   13af4:	add	r0, sp, #12
   13af8:	ldr	r2, [r4, #52]	; 0x34
   13afc:	adds	r3, r3, #1
   13b00:	adc	r2, r2, #0
   13b04:	str	r3, [r4, #48]	; 0x30
   13b08:	str	r2, [r4, #52]	; 0x34
   13b0c:	bl	1a480 <next@@Base>
   13b10:	ldr	ip, [r4, #56]	; 0x38
   13b14:	mov	r2, #0
   13b18:	mov	r3, #216	; 0xd8
   13b1c:	ldr	r1, [r0]
   13b20:	str	r5, [sp]
   13b24:	ldr	r0, [r4, #60]	; 0x3c
   13b28:	adds	ip, ip, #1
   13b2c:	str	ip, [r4, #56]	; 0x38
   13b30:	adc	ip, r0, r2
   13b34:	mov	r0, #4
   13b38:	str	ip, [r4, #60]	; 0x3c
   13b3c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13b40:	ldr	r3, [r4, #64]	; 0x40
   13b44:	add	r0, sp, #12
   13b48:	ldr	r2, [r4, #68]	; 0x44
   13b4c:	adds	r3, r3, #1
   13b50:	adc	r2, r2, #0
   13b54:	str	r3, [r4, #64]	; 0x40
   13b58:	str	r2, [r4, #68]	; 0x44
   13b5c:	bl	1a480 <next@@Base>
   13b60:	ldr	ip, [r4, #72]	; 0x48
   13b64:	mov	r2, #0
   13b68:	mov	r3, #218	; 0xda
   13b6c:	ldr	r1, [r0]
   13b70:	str	r5, [sp]
   13b74:	ldr	r0, [r4, #76]	; 0x4c
   13b78:	adds	ip, ip, #1
   13b7c:	str	ip, [r4, #72]	; 0x48
   13b80:	adc	ip, r0, r2
   13b84:	mov	r0, #5
   13b88:	str	ip, [r4, #76]	; 0x4c
   13b8c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13b90:	ldr	r3, [r4, #80]	; 0x50
   13b94:	add	r0, sp, #12
   13b98:	ldr	r2, [r4, #84]	; 0x54
   13b9c:	adds	r3, r3, #1
   13ba0:	adc	r2, r2, #0
   13ba4:	str	r3, [r4, #80]	; 0x50
   13ba8:	str	r2, [r4, #84]	; 0x54
   13bac:	bl	1a480 <next@@Base>
   13bb0:	ldr	ip, [r4, #88]	; 0x58
   13bb4:	mov	r2, #0
   13bb8:	mov	r3, #220	; 0xdc
   13bbc:	ldr	r1, [r0]
   13bc0:	str	r5, [sp]
   13bc4:	ldr	r0, [r4, #92]	; 0x5c
   13bc8:	adds	ip, ip, #1
   13bcc:	str	ip, [r4, #88]	; 0x58
   13bd0:	adc	ip, r0, r2
   13bd4:	mov	r0, #10
   13bd8:	str	ip, [r4, #92]	; 0x5c
   13bdc:	bl	16978 <UnityAssertEqualNumber@@Base>
   13be0:	ldr	r3, [r4, #96]	; 0x60
   13be4:	add	r0, sp, #12
   13be8:	ldr	r2, [r4, #100]	; 0x64
   13bec:	adds	r3, r3, #1
   13bf0:	adc	r2, r2, #0
   13bf4:	str	r3, [r4, #96]	; 0x60
   13bf8:	str	r2, [r4, #100]	; 0x64
   13bfc:	bl	1a480 <next@@Base>
   13c00:	ldr	ip, [r4, #104]	; 0x68
   13c04:	mov	r2, #0
   13c08:	mov	r3, #222	; 0xde
   13c0c:	ldr	r1, [r0]
   13c10:	str	r5, [sp]
   13c14:	ldr	r0, [r4, #108]	; 0x6c
   13c18:	adds	ip, ip, #1
   13c1c:	str	ip, [r4, #104]	; 0x68
   13c20:	adc	ip, r0, r2
   13c24:	mov	r0, #3
   13c28:	str	ip, [r4, #108]	; 0x6c
   13c2c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13c30:	ldr	r3, [r4, #112]	; 0x70
   13c34:	add	r0, sp, #12
   13c38:	ldr	r2, [r4, #116]	; 0x74
   13c3c:	adds	r3, r3, #1
   13c40:	adc	r2, r2, #0
   13c44:	str	r3, [r4, #112]	; 0x70
   13c48:	str	r2, [r4, #116]	; 0x74
   13c4c:	bl	1a480 <next@@Base>
   13c50:	ldr	ip, [r4, #120]	; 0x78
   13c54:	mov	r2, #0
   13c58:	mov	r3, #224	; 0xe0
   13c5c:	ldr	r1, [r0]
   13c60:	str	r5, [sp]
   13c64:	ldr	r0, [r4, #124]	; 0x7c
   13c68:	adds	ip, ip, #1
   13c6c:	str	ip, [r4, #120]	; 0x78
   13c70:	adc	ip, r0, r2
   13c74:	mov	r0, #1
   13c78:	str	ip, [r4, #124]	; 0x7c
   13c7c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13c80:	ldr	r3, [r4, #128]	; 0x80
   13c84:	add	r0, sp, #12
   13c88:	ldr	r2, [r4, #132]	; 0x84
   13c8c:	adds	r3, r3, #1
   13c90:	adc	r2, r2, #0
   13c94:	str	r3, [r4, #128]	; 0x80
   13c98:	str	r2, [r4, #132]	; 0x84
   13c9c:	bl	1a480 <next@@Base>
   13ca0:	ldr	ip, [r4, #136]	; 0x88
   13ca4:	mov	r2, #0
   13ca8:	mov	r3, #226	; 0xe2
   13cac:	ldr	r1, [r0]
   13cb0:	str	r5, [sp]
   13cb4:	ldr	r0, [r4, #140]	; 0x8c
   13cb8:	adds	ip, ip, #1
   13cbc:	str	ip, [r4, #136]	; 0x88
   13cc0:	adc	ip, r0, r2
   13cc4:	mov	r0, #12
   13cc8:	str	ip, [r4, #140]	; 0x8c
   13ccc:	bl	16978 <UnityAssertEqualNumber@@Base>
   13cd0:	ldr	r3, [r4, #144]	; 0x90
   13cd4:	add	r0, sp, #12
   13cd8:	ldr	r2, [r4, #148]	; 0x94
   13cdc:	adds	r3, r3, #1
   13ce0:	adc	r2, r2, #0
   13ce4:	str	r3, [r4, #144]	; 0x90
   13ce8:	str	r2, [r4, #148]	; 0x94
   13cec:	bl	1a480 <next@@Base>
   13cf0:	ldr	ip, [r4, #152]	; 0x98
   13cf4:	mov	r2, #0
   13cf8:	mov	r3, #228	; 0xe4
   13cfc:	ldr	r1, [r0]
   13d00:	str	r5, [sp]
   13d04:	ldr	r0, [r4, #156]	; 0x9c
   13d08:	adds	ip, ip, #1
   13d0c:	str	ip, [r4, #152]	; 0x98
   13d10:	adc	ip, r0, r2
   13d14:	mov	r0, #1
   13d18:	str	ip, [r4, #156]	; 0x9c
   13d1c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13d20:	ldr	r3, [r4, #160]	; 0xa0
   13d24:	add	r0, sp, #12
   13d28:	ldr	r2, [r4, #164]	; 0xa4
   13d2c:	adds	r3, r3, #1
   13d30:	adc	r2, r2, #0
   13d34:	str	r3, [r4, #160]	; 0xa0
   13d38:	str	r2, [r4, #164]	; 0xa4
   13d3c:	bl	1a480 <next@@Base>
   13d40:	ldr	ip, [r4, #168]	; 0xa8
   13d44:	mov	r2, #0
   13d48:	mov	r3, #230	; 0xe6
   13d4c:	ldr	r1, [r0]
   13d50:	str	r5, [sp]
   13d54:	ldr	r0, [r4, #172]	; 0xac
   13d58:	adds	ip, ip, #1
   13d5c:	str	ip, [r4, #168]	; 0xa8
   13d60:	adc	ip, r0, r2
   13d64:	mov	r0, #4
   13d68:	str	ip, [r4, #172]	; 0xac
   13d6c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13d70:	ldr	r3, [r4, #176]	; 0xb0
   13d74:	add	r0, sp, #12
   13d78:	ldr	r2, [r4, #180]	; 0xb4
   13d7c:	adds	r3, r3, #1
   13d80:	adc	r2, r2, #0
   13d84:	str	r3, [r4, #176]	; 0xb0
   13d88:	str	r2, [r4, #180]	; 0xb4
   13d8c:	bl	1a480 <next@@Base>
   13d90:	ldr	ip, [r4, #184]	; 0xb8
   13d94:	mov	r2, #0
   13d98:	mov	r3, #232	; 0xe8
   13d9c:	ldr	r1, [r0]
   13da0:	str	r5, [sp]
   13da4:	ldr	r0, [r4, #188]	; 0xbc
   13da8:	adds	ip, ip, #1
   13dac:	str	ip, [r4, #184]	; 0xb8
   13db0:	adc	ip, r0, r2
   13db4:	mov	r0, #5
   13db8:	str	ip, [r4, #188]	; 0xbc
   13dbc:	bl	16978 <UnityAssertEqualNumber@@Base>
   13dc0:	ldr	r3, [r4, #192]	; 0xc0
   13dc4:	add	r0, sp, #12
   13dc8:	ldr	r2, [r4, #196]	; 0xc4
   13dcc:	adds	r3, r3, #1
   13dd0:	adc	r2, r2, #0
   13dd4:	str	r3, [r4, #192]	; 0xc0
   13dd8:	str	r2, [r4, #196]	; 0xc4
   13ddc:	bl	1a480 <next@@Base>
   13de0:	ldr	ip, [r4, #200]	; 0xc8
   13de4:	mov	r2, #0
   13de8:	mov	r3, #234	; 0xea
   13dec:	ldr	r1, [r0]
   13df0:	str	r5, [sp]
   13df4:	ldr	r0, [r4, #204]	; 0xcc
   13df8:	adds	ip, ip, #1
   13dfc:	str	ip, [r4, #200]	; 0xc8
   13e00:	adc	ip, r0, r2
   13e04:	mov	r0, #7
   13e08:	str	ip, [r4, #204]	; 0xcc
   13e0c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13e10:	ldr	r3, [r4, #208]	; 0xd0
   13e14:	add	r0, sp, #12
   13e18:	ldr	r2, [r4, #212]	; 0xd4
   13e1c:	adds	r3, r3, #1
   13e20:	adc	r2, r2, #0
   13e24:	str	r3, [r4, #208]	; 0xd0
   13e28:	str	r2, [r4, #212]	; 0xd4
   13e2c:	bl	1a480 <next@@Base>
   13e30:	ldr	ip, [r4, #216]	; 0xd8
   13e34:	mov	r2, #0
   13e38:	mov	r3, #236	; 0xec
   13e3c:	ldr	r1, [r0]
   13e40:	str	r5, [sp]
   13e44:	ldr	r0, [r4, #220]	; 0xdc
   13e48:	adds	ip, ip, #1
   13e4c:	str	ip, [r4, #216]	; 0xd8
   13e50:	adc	ip, r0, r2
   13e54:	mov	r0, #1
   13e58:	str	ip, [r4, #220]	; 0xdc
   13e5c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13e60:	ldr	r3, [r4, #224]	; 0xe0
   13e64:	add	r0, sp, #12
   13e68:	ldr	r2, [r4, #228]	; 0xe4
   13e6c:	adds	r3, r3, #1
   13e70:	adc	r2, r2, #0
   13e74:	str	r3, [r4, #224]	; 0xe0
   13e78:	str	r2, [r4, #228]	; 0xe4
   13e7c:	bl	1a480 <next@@Base>
   13e80:	ldr	ip, [r4, #232]	; 0xe8
   13e84:	mov	r2, #0
   13e88:	mov	r3, #238	; 0xee
   13e8c:	ldr	r1, [r0]
   13e90:	str	r5, [sp]
   13e94:	ldr	r0, [r4, #236]	; 0xec
   13e98:	adds	ip, ip, #1
   13e9c:	str	ip, [r4, #232]	; 0xe8
   13ea0:	adc	ip, r0, r2
   13ea4:	mov	r0, #8
   13ea8:	str	ip, [r4, #236]	; 0xec
   13eac:	bl	16978 <UnityAssertEqualNumber@@Base>
   13eb0:	ldr	r3, [r4, #240]	; 0xf0
   13eb4:	add	r0, sp, #12
   13eb8:	ldr	r2, [r4, #244]	; 0xf4
   13ebc:	adds	r3, r3, #1
   13ec0:	adc	r2, r2, #0
   13ec4:	str	r3, [r4, #240]	; 0xf0
   13ec8:	str	r2, [r4, #244]	; 0xf4
   13ecc:	bl	1a480 <next@@Base>
   13ed0:	ldr	r2, [r4, #248]	; 0xf8
   13ed4:	mov	r3, #240	; 0xf0
   13ed8:	ldr	r1, [r0]
   13edc:	str	r5, [sp]
   13ee0:	ldr	r0, [r4, #252]	; 0xfc
   13ee4:	adds	r2, r2, #1
   13ee8:	str	r2, [r4, #248]	; 0xf8
   13eec:	mov	r2, #0
   13ef0:	adc	r0, r0, #0
   13ef4:	str	r0, [r4, #252]	; 0xfc
   13ef8:	mov	r0, #6
   13efc:	bl	16978 <UnityAssertEqualNumber@@Base>
   13f00:	ldr	r3, [r6, #1104]	; 0x450
   13f04:	add	r0, sp, #12
   13f08:	ldr	r1, [r6, #1108]	; 0x454
   13f0c:	adds	r3, r3, #1
   13f10:	adc	r1, r1, #0
   13f14:	str	r3, [r6, #1104]	; 0x450
   13f18:	str	r1, [r6, #1108]	; 0x454
   13f1c:	bl	1a480 <next@@Base>
   13f20:	ldr	ip, [r6, #1112]	; 0x458
   13f24:	mov	r2, #0
   13f28:	mov	r3, #242	; 0xf2
   13f2c:	ldr	r1, [r0]
   13f30:	str	r5, [sp]
   13f34:	ldr	r0, [r6, #1116]	; 0x45c
   13f38:	adds	ip, ip, #1
   13f3c:	str	ip, [r6, #1112]	; 0x458
   13f40:	adc	ip, r0, r2
   13f44:	mov	r0, #11
   13f48:	str	ip, [r6, #1116]	; 0x45c
   13f4c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13f50:	ldr	r3, [r6, #1120]	; 0x460
   13f54:	add	r0, sp, #12
   13f58:	ldr	r2, [r6, #1124]	; 0x464
   13f5c:	adds	r3, r3, #1
   13f60:	adc	r2, r2, #0
   13f64:	str	r3, [r6, #1120]	; 0x460
   13f68:	str	r2, [r6, #1124]	; 0x464
   13f6c:	bl	1a480 <next@@Base>
   13f70:	ldr	ip, [r6, #1128]	; 0x468
   13f74:	mov	r2, #0
   13f78:	mov	r3, #244	; 0xf4
   13f7c:	ldr	r1, [r0]
   13f80:	str	r5, [sp]
   13f84:	ldr	r0, [r6, #1132]	; 0x46c
   13f88:	adds	ip, ip, #1
   13f8c:	str	ip, [r6, #1128]	; 0x468
   13f90:	adc	ip, r0, r2
   13f94:	mov	r0, #5
   13f98:	str	ip, [r6, #1132]	; 0x46c
   13f9c:	bl	16978 <UnityAssertEqualNumber@@Base>
   13fa0:	ldr	r3, [r6, #1136]	; 0x470
   13fa4:	add	r0, sp, #12
   13fa8:	ldr	r2, [r6, #1140]	; 0x474
   13fac:	adds	r3, r3, #1
   13fb0:	adc	r2, r2, #0
   13fb4:	str	r3, [r6, #1136]	; 0x470
   13fb8:	str	r2, [r6, #1140]	; 0x474
   13fbc:	bl	1a480 <next@@Base>
   13fc0:	ldr	ip, [r6, #1144]	; 0x478
   13fc4:	mov	r2, #0
   13fc8:	mov	r3, #246	; 0xf6
   13fcc:	ldr	r1, [r0]
   13fd0:	str	r5, [sp]
   13fd4:	ldr	r0, [r6, #1148]	; 0x47c
   13fd8:	adds	ip, ip, #1
   13fdc:	str	ip, [r6, #1144]	; 0x478
   13fe0:	adc	ip, r0, r2
   13fe4:	mov	r0, #7
   13fe8:	str	ip, [r6, #1148]	; 0x47c
   13fec:	bl	16978 <UnityAssertEqualNumber@@Base>
   13ff0:	ldr	r3, [r6, #1152]	; 0x480
   13ff4:	add	r0, sp, #12
   13ff8:	ldr	r2, [r6, #1156]	; 0x484
   13ffc:	adds	r3, r3, #1
   14000:	adc	r2, r2, #0
   14004:	str	r3, [r6, #1152]	; 0x480
   14008:	str	r2, [r6, #1156]	; 0x484
   1400c:	bl	1a480 <next@@Base>
   14010:	ldr	ip, [r6, #1160]	; 0x488
   14014:	mov	r2, #0
   14018:	mov	r3, #248	; 0xf8
   1401c:	ldr	r1, [r0]
   14020:	str	r5, [sp]
   14024:	ldr	r0, [r6, #1164]	; 0x48c
   14028:	adds	ip, ip, #1
   1402c:	str	ip, [r6, #1160]	; 0x488
   14030:	adc	ip, r0, r2
   14034:	mov	r0, #1
   14038:	str	ip, [r6, #1164]	; 0x48c
   1403c:	bl	16978 <UnityAssertEqualNumber@@Base>
   14040:	ldr	r3, [r6, #1168]	; 0x490
   14044:	add	r0, sp, #12
   14048:	ldr	r2, [r6, #1172]	; 0x494
   1404c:	adds	r3, r3, #1
   14050:	adc	r2, r2, #0
   14054:	str	r3, [r6, #1168]	; 0x490
   14058:	str	r2, [r6, #1172]	; 0x494
   1405c:	bl	1a480 <next@@Base>
   14060:	ldr	ip, [r6, #1176]	; 0x498
   14064:	mov	r2, #0
   14068:	mov	r3, #250	; 0xfa
   1406c:	ldr	r1, [r0]
   14070:	str	r5, [sp]
   14074:	ldr	r0, [r6, #1180]	; 0x49c
   14078:	adds	ip, ip, #1
   1407c:	str	ip, [r6, #1176]	; 0x498
   14080:	adc	ip, r0, r2
   14084:	mov	r0, #8
   14088:	str	ip, [r6, #1180]	; 0x49c
   1408c:	bl	16978 <UnityAssertEqualNumber@@Base>
   14090:	ldr	r3, [r6, #1184]	; 0x4a0
   14094:	add	r0, sp, #12
   14098:	ldr	r2, [r6, #1188]	; 0x4a4
   1409c:	adds	r3, r3, #1
   140a0:	adc	r2, r2, #0
   140a4:	str	r3, [r6, #1184]	; 0x4a0
   140a8:	str	r2, [r6, #1188]	; 0x4a4
   140ac:	bl	1a480 <next@@Base>
   140b0:	ldr	ip, [r6, #1192]	; 0x4a8
   140b4:	mov	r2, #0
   140b8:	mov	r3, #252	; 0xfc
   140bc:	ldr	r1, [r0]
   140c0:	str	r5, [sp]
   140c4:	ldr	r0, [r6, #1196]	; 0x4ac
   140c8:	adds	ip, ip, #1
   140cc:	str	ip, [r6, #1192]	; 0x4a8
   140d0:	adc	ip, r0, r2
   140d4:	mov	r0, #6
   140d8:	str	ip, [r6, #1196]	; 0x4ac
   140dc:	bl	16978 <UnityAssertEqualNumber@@Base>
   140e0:	ldr	r3, [r6, #1200]	; 0x4b0
   140e4:	add	r0, sp, #12
   140e8:	ldr	r2, [r6, #1204]	; 0x4b4
   140ec:	adds	r3, r3, #1
   140f0:	adc	r2, r2, #0
   140f4:	str	r3, [r6, #1200]	; 0x4b0
   140f8:	str	r2, [r6, #1204]	; 0x4b4
   140fc:	bl	1a480 <next@@Base>
   14100:	ldr	ip, [r6, #1208]	; 0x4b8
   14104:	mov	r2, #0
   14108:	mov	r3, #254	; 0xfe
   1410c:	ldr	r1, [r0]
   14110:	str	r5, [sp]
   14114:	ldr	r0, [r6, #1212]	; 0x4bc
   14118:	adds	ip, ip, #1
   1411c:	str	ip, [r6, #1208]	; 0x4b8
   14120:	adc	ip, r0, r2
   14124:	mov	r0, #7
   14128:	str	ip, [r6, #1212]	; 0x4bc
   1412c:	bl	16978 <UnityAssertEqualNumber@@Base>
   14130:	ldr	r3, [r6, #1216]	; 0x4c0
   14134:	add	r0, sp, #12
   14138:	ldr	r2, [r6, #1220]	; 0x4c4
   1413c:	adds	r3, r3, #1
   14140:	adc	r2, r2, #0
   14144:	str	r3, [r6, #1216]	; 0x4c0
   14148:	str	r2, [r6, #1220]	; 0x4c4
   1414c:	bl	1a480 <next@@Base>
   14150:	ldr	ip, [r6, #1224]	; 0x4c8
   14154:	mov	r2, #0
   14158:	mov	r3, #256	; 0x100
   1415c:	ldr	r1, [r0]
   14160:	str	r5, [sp]
   14164:	ldr	r0, [r6, #1228]	; 0x4cc
   14168:	adds	ip, ip, #1
   1416c:	str	ip, [r6, #1224]	; 0x4c8
   14170:	adc	ip, r0, r2
   14174:	mov	r0, #1
   14178:	str	ip, [r6, #1228]	; 0x4cc
   1417c:	bl	16978 <UnityAssertEqualNumber@@Base>
   14180:	ldr	r3, [r6, #1232]	; 0x4d0
   14184:	add	r0, sp, #12
   14188:	ldr	r2, [r6, #1236]	; 0x4d4
   1418c:	adds	r3, r3, #1
   14190:	adc	r2, r2, #0
   14194:	str	r3, [r6, #1232]	; 0x4d0
   14198:	str	r2, [r6, #1236]	; 0x4d4
   1419c:	bl	1a480 <next@@Base>
   141a0:	ldr	ip, [r6, #1240]	; 0x4d8
   141a4:	mov	r2, #0
   141a8:	movw	r3, #258	; 0x102
   141ac:	ldr	lr, [r6, #1244]	; 0x4dc
   141b0:	ldr	r1, [r0]
   141b4:	mov	r0, #8
   141b8:	adds	ip, ip, #1
   141bc:	str	r5, [sp]
   141c0:	adc	lr, lr, r2
   141c4:	str	ip, [r6, #1240]	; 0x4d8
   141c8:	str	lr, [r6, #1244]	; 0x4dc
   141cc:	bl	16978 <UnityAssertEqualNumber@@Base>
   141d0:	ldr	r3, [r6, #1248]	; 0x4e0
   141d4:	add	r0, sp, #12
   141d8:	ldr	r2, [r6, #1252]	; 0x4e4
   141dc:	adds	r3, r3, #1
   141e0:	adc	r2, r2, #0
   141e4:	str	r3, [r6, #1248]	; 0x4e0
   141e8:	str	r2, [r6, #1252]	; 0x4e4
   141ec:	bl	1a480 <next@@Base>
   141f0:	ldr	ip, [r6, #1256]	; 0x4e8
   141f4:	mov	r2, #0
   141f8:	mov	r3, #260	; 0x104
   141fc:	ldr	lr, [r6, #1260]	; 0x4ec
   14200:	ldr	r1, [r0]
   14204:	mov	r0, #6
   14208:	adds	ip, ip, #1
   1420c:	str	r5, [sp]
   14210:	adc	lr, lr, r2
   14214:	str	ip, [r6, #1256]	; 0x4e8
   14218:	str	lr, [r6, #1260]	; 0x4ec
   1421c:	bl	16978 <UnityAssertEqualNumber@@Base>
   14220:	ldr	r3, [r6, #1264]	; 0x4f0
   14224:	add	r0, sp, #12
   14228:	ldr	r2, [r6, #1268]	; 0x4f4
   1422c:	adds	r3, r3, #1
   14230:	adc	r2, r2, #0
   14234:	str	r3, [r6, #1264]	; 0x4f0
   14238:	str	r2, [r6, #1268]	; 0x4f4
   1423c:	bl	1a480 <next@@Base>
   14240:	ldr	ip, [r6, #1272]	; 0x4f8
   14244:	mov	r2, #0
   14248:	movw	r3, #262	; 0x106
   1424c:	ldr	lr, [r6, #1276]	; 0x4fc
   14250:	ldr	r1, [r0]
   14254:	mov	r0, #9
   14258:	adds	ip, ip, #1
   1425c:	str	r5, [sp]
   14260:	adc	lr, lr, r2
   14264:	str	ip, [r6, #1272]	; 0x4f8
   14268:	str	lr, [r6, #1276]	; 0x4fc
   1426c:	bl	16978 <UnityAssertEqualNumber@@Base>
   14270:	ldr	r3, [r6, #1280]	; 0x500
   14274:	add	r0, sp, #12
   14278:	ldr	r2, [r6, #1284]	; 0x504
   1427c:	adds	r3, r3, #1
   14280:	adc	r2, r2, #0
   14284:	str	r3, [r6, #1280]	; 0x500
   14288:	str	r2, [r6, #1284]	; 0x504
   1428c:	bl	1a200 <destroy_lexer@@Base>
   14290:	ldr	r3, [r6, #1288]	; 0x508
   14294:	ldr	r2, [r6, #1292]	; 0x50c
   14298:	adds	r3, r3, #1
   1429c:	adc	r2, r2, #0
   142a0:	str	r3, [r6, #1288]	; 0x508
   142a4:	str	r2, [r6, #1292]	; 0x50c
   142a8:	add	sp, sp, #28
   142ac:	ldrd	r4, [sp]
   142b0:	ldrd	r6, [sp, #8]
   142b4:	ldrd	r8, [sp, #16]
   142b8:	ldrd	sl, [sp, #24]
   142bc:	add	sp, sp, #32
   142c0:	pop	{pc}		; (ldr pc, [sp], #4)

000142c4 <if_without_else@@Base>:
   142c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   142c8:	movw	r1, #54676	; 0xd594
   142cc:	movt	r1, #1
   142d0:	strd	r6, [sp, #8]
   142d4:	movw	r6, #60480	; 0xec40
   142d8:	movt	r6, #2
   142dc:	add	r4, r6, #1296	; 0x510
   142e0:	ldr	r3, [r4]
   142e4:	mov	r5, #148	; 0x94
   142e8:	strd	r8, [sp, #16]
   142ec:	ldr	r2, [r4, #4]
   142f0:	str	sl, [sp, #24]
   142f4:	str	lr, [sp, #28]
   142f8:	sub	sp, sp, #24
   142fc:	adds	r3, r3, #1
   14300:	add	r0, sp, #12
   14304:	adc	r2, r2, #0
   14308:	str	r3, [r4]
   1430c:	str	r2, [r4, #4]
   14310:	bl	1a1d4 <init_lexer@@Base>
   14314:	ldr	r3, [r4, #8]
   14318:	add	r0, sp, #12
   1431c:	ldr	r2, [r4, #12]
   14320:	adds	r3, r3, #1
   14324:	adc	r2, r2, #0
   14328:	str	r3, [r4, #8]
   1432c:	str	r2, [r4, #12]
   14330:	bl	1a480 <next@@Base>
   14334:	ldr	ip, [r4, #16]
   14338:	mov	r2, #0
   1433c:	mov	r3, #140	; 0x8c
   14340:	ldr	r1, [r0]
   14344:	str	r5, [sp]
   14348:	ldr	r0, [r4, #20]
   1434c:	adds	ip, ip, #1
   14350:	str	ip, [r4, #16]
   14354:	adc	ip, r0, r2
   14358:	mov	r0, r2
   1435c:	str	ip, [r4, #20]
   14360:	bl	16978 <UnityAssertEqualNumber@@Base>
   14364:	ldr	r3, [r4, #24]
   14368:	add	r0, sp, #12
   1436c:	ldr	r2, [r4, #28]
   14370:	adds	r3, r3, #1
   14374:	adc	r2, r2, #0
   14378:	str	r3, [r4, #24]
   1437c:	str	r2, [r4, #28]
   14380:	bl	1a480 <next@@Base>
   14384:	ldr	ip, [r4, #32]
   14388:	mov	r2, #0
   1438c:	mov	r3, #142	; 0x8e
   14390:	ldr	r1, [r0]
   14394:	str	r5, [sp]
   14398:	ldr	r0, [r4, #36]	; 0x24
   1439c:	adds	ip, ip, #1
   143a0:	str	ip, [r4, #32]
   143a4:	adc	ip, r0, r2
   143a8:	mov	r0, #2
   143ac:	str	ip, [r4, #36]	; 0x24
   143b0:	bl	16978 <UnityAssertEqualNumber@@Base>
   143b4:	ldr	r3, [r4, #40]	; 0x28
   143b8:	add	r0, sp, #12
   143bc:	ldr	r2, [r4, #44]	; 0x2c
   143c0:	adds	r3, r3, #1
   143c4:	adc	r2, r2, #0
   143c8:	str	r3, [r4, #40]	; 0x28
   143cc:	str	r2, [r4, #44]	; 0x2c
   143d0:	bl	1a480 <next@@Base>
   143d4:	ldr	ip, [r4, #48]	; 0x30
   143d8:	mov	r2, #0
   143dc:	mov	r3, #144	; 0x90
   143e0:	ldr	r1, [r0]
   143e4:	str	r5, [sp]
   143e8:	ldr	r0, [r4, #52]	; 0x34
   143ec:	adds	ip, ip, #1
   143f0:	str	ip, [r4, #48]	; 0x30
   143f4:	adc	ip, r0, r2
   143f8:	mov	r0, #3
   143fc:	str	ip, [r4, #52]	; 0x34
   14400:	bl	16978 <UnityAssertEqualNumber@@Base>
   14404:	ldr	r3, [r4, #56]	; 0x38
   14408:	add	r0, sp, #12
   1440c:	ldr	r2, [r4, #60]	; 0x3c
   14410:	adds	r3, r3, #1
   14414:	adc	r2, r2, #0
   14418:	str	r3, [r4, #56]	; 0x38
   1441c:	str	r2, [r4, #60]	; 0x3c
   14420:	bl	1a480 <next@@Base>
   14424:	ldr	ip, [r4, #64]	; 0x40
   14428:	mov	r2, #0
   1442c:	mov	r3, #146	; 0x92
   14430:	ldr	r1, [r0]
   14434:	str	r5, [sp]
   14438:	ldr	r0, [r4, #68]	; 0x44
   1443c:	adds	ip, ip, #1
   14440:	str	ip, [r4, #64]	; 0x40
   14444:	adc	ip, r0, r2
   14448:	mov	r0, #4
   1444c:	str	ip, [r4, #68]	; 0x44
   14450:	bl	16978 <UnityAssertEqualNumber@@Base>
   14454:	ldr	r3, [r4, #72]	; 0x48
   14458:	add	r0, sp, #12
   1445c:	ldr	r2, [r4, #76]	; 0x4c
   14460:	adds	r3, r3, #1
   14464:	adc	r2, r2, #0
   14468:	str	r3, [r4, #72]	; 0x48
   1446c:	str	r2, [r4, #76]	; 0x4c
   14470:	bl	1a480 <next@@Base>
   14474:	ldr	ip, [r4, #80]	; 0x50
   14478:	mov	r2, #0
   1447c:	mov	r3, r5
   14480:	ldr	r1, [r0]
   14484:	str	r5, [sp]
   14488:	ldr	r0, [r4, #84]	; 0x54
   1448c:	adds	ip, ip, #1
   14490:	str	ip, [r4, #80]	; 0x50
   14494:	adc	ip, r0, r2
   14498:	mov	r0, #5
   1449c:	str	ip, [r4, #84]	; 0x54
   144a0:	bl	16978 <UnityAssertEqualNumber@@Base>
   144a4:	ldr	r3, [r4, #88]	; 0x58
   144a8:	add	r0, sp, #12
   144ac:	ldr	r2, [r4, #92]	; 0x5c
   144b0:	adds	r3, r3, #1
   144b4:	adc	r2, r2, #0
   144b8:	str	r3, [r4, #88]	; 0x58
   144bc:	str	r2, [r4, #92]	; 0x5c
   144c0:	bl	1a480 <next@@Base>
   144c4:	ldr	ip, [r4, #96]	; 0x60
   144c8:	mov	r2, #0
   144cc:	mov	r3, #150	; 0x96
   144d0:	ldr	r1, [r0]
   144d4:	str	r5, [sp]
   144d8:	ldr	r0, [r4, #100]	; 0x64
   144dc:	adds	ip, ip, #1
   144e0:	str	ip, [r4, #96]	; 0x60
   144e4:	adc	ip, r0, r2
   144e8:	mov	r0, #10
   144ec:	str	ip, [r4, #100]	; 0x64
   144f0:	bl	16978 <UnityAssertEqualNumber@@Base>
   144f4:	ldr	r3, [r4, #104]	; 0x68
   144f8:	add	r0, sp, #12
   144fc:	ldr	r2, [r4, #108]	; 0x6c
   14500:	adds	r3, r3, #1
   14504:	adc	r2, r2, #0
   14508:	str	r3, [r4, #104]	; 0x68
   1450c:	str	r2, [r4, #108]	; 0x6c
   14510:	bl	1a480 <next@@Base>
   14514:	ldr	ip, [r4, #112]	; 0x70
   14518:	mov	r2, #0
   1451c:	mov	r3, #152	; 0x98
   14520:	ldr	r1, [r0]
   14524:	str	r5, [sp]
   14528:	ldr	r0, [r4, #116]	; 0x74
   1452c:	adds	ip, ip, #1
   14530:	str	ip, [r4, #112]	; 0x70
   14534:	adc	ip, r0, r2
   14538:	mov	r0, #3
   1453c:	str	ip, [r4, #116]	; 0x74
   14540:	bl	16978 <UnityAssertEqualNumber@@Base>
   14544:	ldr	r3, [r4, #120]	; 0x78
   14548:	add	r0, sp, #12
   1454c:	ldr	r2, [r4, #124]	; 0x7c
   14550:	adds	r3, r3, #1
   14554:	adc	r2, r2, #0
   14558:	str	r3, [r4, #120]	; 0x78
   1455c:	str	r2, [r4, #124]	; 0x7c
   14560:	bl	1a480 <next@@Base>
   14564:	ldr	ip, [r4, #128]	; 0x80
   14568:	mov	r2, #0
   1456c:	mov	r3, #154	; 0x9a
   14570:	ldr	r1, [r0]
   14574:	str	r5, [sp]
   14578:	ldr	r0, [r4, #132]	; 0x84
   1457c:	adds	ip, ip, #1
   14580:	str	ip, [r4, #128]	; 0x80
   14584:	adc	ip, r0, r2
   14588:	mov	r0, #1
   1458c:	str	ip, [r4, #132]	; 0x84
   14590:	bl	16978 <UnityAssertEqualNumber@@Base>
   14594:	ldr	r3, [r4, #136]	; 0x88
   14598:	add	r0, sp, #12
   1459c:	ldr	r2, [r4, #140]	; 0x8c
   145a0:	adds	r3, r3, #1
   145a4:	adc	r2, r2, #0
   145a8:	str	r3, [r4, #136]	; 0x88
   145ac:	str	r2, [r4, #140]	; 0x8c
   145b0:	bl	1a480 <next@@Base>
   145b4:	ldr	ip, [r4, #144]	; 0x90
   145b8:	mov	r2, #0
   145bc:	mov	r3, #156	; 0x9c
   145c0:	ldr	r1, [r0]
   145c4:	str	r5, [sp]
   145c8:	ldr	r0, [r4, #148]	; 0x94
   145cc:	adds	ip, ip, #1
   145d0:	str	ip, [r4, #144]	; 0x90
   145d4:	adc	ip, r0, r2
   145d8:	mov	r0, #12
   145dc:	str	ip, [r4, #148]	; 0x94
   145e0:	bl	16978 <UnityAssertEqualNumber@@Base>
   145e4:	ldr	r3, [r4, #152]	; 0x98
   145e8:	add	r0, sp, #12
   145ec:	ldr	r2, [r4, #156]	; 0x9c
   145f0:	adds	r3, r3, #1
   145f4:	adc	r2, r2, #0
   145f8:	str	r3, [r4, #152]	; 0x98
   145fc:	str	r2, [r4, #156]	; 0x9c
   14600:	bl	1a480 <next@@Base>
   14604:	ldr	ip, [r4, #160]	; 0xa0
   14608:	mov	r2, #0
   1460c:	mov	r3, #158	; 0x9e
   14610:	ldr	r1, [r0]
   14614:	str	r5, [sp]
   14618:	ldr	r0, [r4, #164]	; 0xa4
   1461c:	adds	ip, ip, #1
   14620:	str	ip, [r4, #160]	; 0xa0
   14624:	adc	ip, r0, r2
   14628:	mov	r0, #1
   1462c:	str	ip, [r4, #164]	; 0xa4
   14630:	bl	16978 <UnityAssertEqualNumber@@Base>
   14634:	ldr	r3, [r4, #168]	; 0xa8
   14638:	add	r0, sp, #12
   1463c:	ldr	r2, [r4, #172]	; 0xac
   14640:	adds	r3, r3, #1
   14644:	adc	r2, r2, #0
   14648:	str	r3, [r4, #168]	; 0xa8
   1464c:	str	r2, [r4, #172]	; 0xac
   14650:	bl	1a480 <next@@Base>
   14654:	ldr	ip, [r4, #176]	; 0xb0
   14658:	mov	r2, #0
   1465c:	mov	r3, #160	; 0xa0
   14660:	ldr	r1, [r0]
   14664:	str	r5, [sp]
   14668:	ldr	r0, [r4, #180]	; 0xb4
   1466c:	adds	ip, ip, #1
   14670:	str	ip, [r4, #176]	; 0xb0
   14674:	adc	ip, r0, r2
   14678:	mov	r0, #4
   1467c:	str	ip, [r4, #180]	; 0xb4
   14680:	bl	16978 <UnityAssertEqualNumber@@Base>
   14684:	ldr	r3, [r4, #184]	; 0xb8
   14688:	add	r0, sp, #12
   1468c:	ldr	r2, [r4, #188]	; 0xbc
   14690:	adds	r3, r3, #1
   14694:	adc	r2, r2, #0
   14698:	str	r3, [r4, #184]	; 0xb8
   1469c:	str	r2, [r4, #188]	; 0xbc
   146a0:	bl	1a480 <next@@Base>
   146a4:	ldr	ip, [r4, #192]	; 0xc0
   146a8:	mov	r2, #0
   146ac:	mov	r3, #162	; 0xa2
   146b0:	ldr	r1, [r0]
   146b4:	str	r5, [sp]
   146b8:	ldr	r0, [r4, #196]	; 0xc4
   146bc:	adds	ip, ip, #1
   146c0:	str	ip, [r4, #192]	; 0xc0
   146c4:	adc	ip, r0, r2
   146c8:	mov	r0, #5
   146cc:	str	ip, [r4, #196]	; 0xc4
   146d0:	bl	16978 <UnityAssertEqualNumber@@Base>
   146d4:	ldr	r3, [r4, #200]	; 0xc8
   146d8:	add	r0, sp, #12
   146dc:	ldr	r2, [r4, #204]	; 0xcc
   146e0:	adds	r3, r3, #1
   146e4:	adc	r2, r2, #0
   146e8:	str	r3, [r4, #200]	; 0xc8
   146ec:	str	r2, [r4, #204]	; 0xcc
   146f0:	bl	1a480 <next@@Base>
   146f4:	ldr	ip, [r4, #208]	; 0xd0
   146f8:	mov	r2, #0
   146fc:	mov	r3, #164	; 0xa4
   14700:	ldr	r1, [r0]
   14704:	str	r5, [sp]
   14708:	ldr	r0, [r4, #212]	; 0xd4
   1470c:	adds	ip, ip, #1
   14710:	str	ip, [r4, #208]	; 0xd0
   14714:	adc	ip, r0, r2
   14718:	mov	r0, #7
   1471c:	str	ip, [r4, #212]	; 0xd4
   14720:	bl	16978 <UnityAssertEqualNumber@@Base>
   14724:	ldr	r3, [r4, #216]	; 0xd8
   14728:	add	r0, sp, #12
   1472c:	ldr	r2, [r4, #220]	; 0xdc
   14730:	adds	r3, r3, #1
   14734:	adc	r2, r2, #0
   14738:	str	r3, [r4, #216]	; 0xd8
   1473c:	str	r2, [r4, #220]	; 0xdc
   14740:	bl	1a480 <next@@Base>
   14744:	ldr	ip, [r4, #224]	; 0xe0
   14748:	mov	r2, #0
   1474c:	mov	r3, #166	; 0xa6
   14750:	ldr	r1, [r0]
   14754:	str	r5, [sp]
   14758:	ldr	r0, [r4, #228]	; 0xe4
   1475c:	adds	ip, ip, #1
   14760:	str	ip, [r4, #224]	; 0xe0
   14764:	adc	ip, r0, r2
   14768:	mov	r0, #1
   1476c:	str	ip, [r4, #228]	; 0xe4
   14770:	bl	16978 <UnityAssertEqualNumber@@Base>
   14774:	ldr	r3, [r4, #232]	; 0xe8
   14778:	add	r0, sp, #12
   1477c:	ldr	r2, [r4, #236]	; 0xec
   14780:	adds	r3, r3, #1
   14784:	adc	r2, r2, #0
   14788:	str	r3, [r4, #232]	; 0xe8
   1478c:	str	r2, [r4, #236]	; 0xec
   14790:	bl	1a480 <next@@Base>
   14794:	ldr	ip, [r4, #240]	; 0xf0
   14798:	mov	r2, #0
   1479c:	mov	r3, #168	; 0xa8
   147a0:	ldr	r1, [r0]
   147a4:	str	r5, [sp]
   147a8:	ldr	r0, [r4, #244]	; 0xf4
   147ac:	adds	ip, ip, #1
   147b0:	str	ip, [r4, #240]	; 0xf0
   147b4:	adc	ip, r0, r2
   147b8:	mov	r0, #8
   147bc:	str	ip, [r4, #244]	; 0xf4
   147c0:	bl	16978 <UnityAssertEqualNumber@@Base>
   147c4:	ldr	r3, [r4, #248]	; 0xf8
   147c8:	add	r0, sp, #12
   147cc:	ldr	r2, [r4, #252]	; 0xfc
   147d0:	adds	r3, r3, #1
   147d4:	adc	r2, r2, #0
   147d8:	str	r3, [r4, #248]	; 0xf8
   147dc:	str	r2, [r4, #252]	; 0xfc
   147e0:	bl	1a480 <next@@Base>
   147e4:	ldr	r1, [r0]
   147e8:	mov	r2, #0
   147ec:	mov	r3, #170	; 0xaa
   147f0:	str	r5, [sp]
   147f4:	ldr	r0, [r6, #1552]	; 0x610
   147f8:	ldr	lr, [r6, #1556]	; 0x614
   147fc:	adds	r0, r0, #1
   14800:	adc	lr, lr, r2
   14804:	str	r0, [r6, #1552]	; 0x610
   14808:	mov	r0, #6
   1480c:	str	lr, [r6, #1556]	; 0x614
   14810:	bl	16978 <UnityAssertEqualNumber@@Base>
   14814:	ldr	r3, [r6, #1560]	; 0x618
   14818:	add	r0, sp, #12
   1481c:	ldr	r2, [r6, #1564]	; 0x61c
   14820:	adds	r3, r3, #1
   14824:	adc	r2, r2, #0
   14828:	str	r3, [r6, #1560]	; 0x618
   1482c:	str	r2, [r6, #1564]	; 0x61c
   14830:	bl	1a480 <next@@Base>
   14834:	ldr	r2, [r6, #1568]	; 0x620
   14838:	mov	r3, #172	; 0xac
   1483c:	ldr	r1, [r0]
   14840:	str	r5, [sp]
   14844:	ldr	r0, [r6, #1572]	; 0x624
   14848:	adds	r2, r2, #1
   1484c:	str	r2, [r6, #1568]	; 0x620
   14850:	mov	r2, #0
   14854:	adc	r0, r0, #0
   14858:	str	r0, [r6, #1572]	; 0x624
   1485c:	mov	r0, #7
   14860:	bl	16978 <UnityAssertEqualNumber@@Base>
   14864:	ldr	r3, [r6, #1576]	; 0x628
   14868:	add	r0, sp, #12
   1486c:	ldr	r2, [r6, #1580]	; 0x62c
   14870:	adds	r3, r3, #1
   14874:	adc	r2, r2, #0
   14878:	str	r3, [r6, #1576]	; 0x628
   1487c:	str	r2, [r6, #1580]	; 0x62c
   14880:	bl	1a480 <next@@Base>
   14884:	ldr	r2, [r6, #1584]	; 0x630
   14888:	mov	r3, #174	; 0xae
   1488c:	ldr	ip, [r6, #1588]	; 0x634
   14890:	ldr	r1, [r0]
   14894:	adds	r0, r2, #1
   14898:	mov	r2, #0
   1489c:	str	r5, [sp]
   148a0:	adc	ip, ip, r2
   148a4:	str	r0, [r6, #1584]	; 0x630
   148a8:	mov	r0, #1
   148ac:	str	ip, [r6, #1588]	; 0x634
   148b0:	bl	16978 <UnityAssertEqualNumber@@Base>
   148b4:	ldr	r3, [r6, #1592]	; 0x638
   148b8:	add	r0, sp, #12
   148bc:	ldr	r2, [r6, #1596]	; 0x63c
   148c0:	adds	r3, r3, #1
   148c4:	adc	r2, r2, #0
   148c8:	str	r3, [r6, #1592]	; 0x638
   148cc:	str	r2, [r6, #1596]	; 0x63c
   148d0:	bl	1a480 <next@@Base>
   148d4:	ldr	ip, [r6, #1600]	; 0x640
   148d8:	mov	r2, #0
   148dc:	mov	r3, #176	; 0xb0
   148e0:	ldr	lr, [r6, #1604]	; 0x644
   148e4:	ldr	r1, [r0]
   148e8:	mov	r0, #8
   148ec:	adds	ip, ip, #1
   148f0:	str	r5, [sp]
   148f4:	adc	lr, lr, r2
   148f8:	str	ip, [r6, #1600]	; 0x640
   148fc:	str	lr, [r6, #1604]	; 0x644
   14900:	bl	16978 <UnityAssertEqualNumber@@Base>
   14904:	ldr	r3, [r6, #1608]	; 0x648
   14908:	add	r0, sp, #12
   1490c:	ldr	r2, [r6, #1612]	; 0x64c
   14910:	adds	r3, r3, #1
   14914:	adc	r2, r2, #0
   14918:	str	r3, [r6, #1608]	; 0x648
   1491c:	str	r2, [r6, #1612]	; 0x64c
   14920:	bl	1a480 <next@@Base>
   14924:	ldr	ip, [r6, #1616]	; 0x650
   14928:	mov	r2, #0
   1492c:	mov	r3, #178	; 0xb2
   14930:	ldr	lr, [r6, #1620]	; 0x654
   14934:	ldr	r1, [r0]
   14938:	mov	r0, #6
   1493c:	adds	ip, ip, #1
   14940:	str	r5, [sp]
   14944:	adc	lr, lr, r2
   14948:	str	ip, [r6, #1616]	; 0x650
   1494c:	str	lr, [r6, #1620]	; 0x654
   14950:	bl	16978 <UnityAssertEqualNumber@@Base>
   14954:	ldr	r3, [r6, #1624]	; 0x658
   14958:	add	r0, sp, #12
   1495c:	ldr	r2, [r6, #1628]	; 0x65c
   14960:	adds	r3, r3, #1
   14964:	adc	r2, r2, #0
   14968:	str	r3, [r6, #1624]	; 0x658
   1496c:	str	r2, [r6, #1628]	; 0x65c
   14970:	bl	1a480 <next@@Base>
   14974:	ldr	ip, [r6, #1632]	; 0x660
   14978:	mov	r2, #0
   1497c:	mov	r3, #180	; 0xb4
   14980:	ldr	lr, [r6, #1636]	; 0x664
   14984:	ldr	r1, [r0]
   14988:	mov	r0, #9
   1498c:	adds	ip, ip, #1
   14990:	str	r5, [sp]
   14994:	adc	lr, lr, r2
   14998:	str	ip, [r6, #1632]	; 0x660
   1499c:	str	lr, [r6, #1636]	; 0x664
   149a0:	bl	16978 <UnityAssertEqualNumber@@Base>
   149a4:	ldr	r3, [r6, #1640]	; 0x668
   149a8:	add	r0, sp, #12
   149ac:	ldr	r2, [r6, #1644]	; 0x66c
   149b0:	adds	r3, r3, #1
   149b4:	adc	r2, r2, #0
   149b8:	str	r3, [r6, #1640]	; 0x668
   149bc:	str	r2, [r6, #1644]	; 0x66c
   149c0:	bl	1a200 <destroy_lexer@@Base>
   149c4:	ldr	r3, [r6, #1648]	; 0x670
   149c8:	ldr	r2, [r6, #1652]	; 0x674
   149cc:	adds	r3, r3, #1
   149d0:	adc	r2, r2, #0
   149d4:	str	r3, [r6, #1648]	; 0x670
   149d8:	str	r2, [r6, #1652]	; 0x674
   149dc:	add	sp, sp, #24
   149e0:	ldrd	r4, [sp]
   149e4:	ldrd	r6, [sp, #8]
   149e8:	ldrd	r8, [sp, #16]
   149ec:	ldr	sl, [sp, #24]
   149f0:	add	sp, sp, #28
   149f4:	pop	{pc}		; (ldr pc, [sp], #4)

000149f8 <simple_file_only_main@@Base>:
   149f8:	strd	r4, [sp, #-12]!
   149fc:	movw	r1, #54736	; 0xd5d0
   14a00:	movt	r1, #1
   14a04:	ldr	r4, [pc, #912]	; 14d9c <simple_file_only_main@@Base+0x3a4>
   14a08:	mov	r5, #148	; 0x94
   14a0c:	str	lr, [sp, #8]
   14a10:	sub	sp, sp, #28
   14a14:	add	r0, sp, #12
   14a18:	ldr	r3, [r4, #-8]
   14a1c:	ldr	r2, [r4, #-4]
   14a20:	adds	r3, r3, #1
   14a24:	adc	r2, r2, #0
   14a28:	str	r3, [r4, #-8]
   14a2c:	str	r2, [r4, #-4]
   14a30:	bl	1a1d4 <init_lexer@@Base>
   14a34:	ldr	r3, [r4]
   14a38:	add	r0, sp, #12
   14a3c:	ldr	r2, [r4, #4]
   14a40:	adds	r3, r3, #1
   14a44:	adc	r2, r2, #0
   14a48:	str	r3, [r4]
   14a4c:	str	r2, [r4, #4]
   14a50:	bl	1a480 <next@@Base>
   14a54:	ldr	ip, [r4, #8]
   14a58:	mov	r2, #0
   14a5c:	mov	r3, #23
   14a60:	ldr	lr, [r4, #12]
   14a64:	ldr	r1, [r0]
   14a68:	mov	r0, r2
   14a6c:	adds	ip, ip, #1
   14a70:	str	r5, [sp]
   14a74:	adc	lr, lr, r2
   14a78:	str	ip, [r4, #8]
   14a7c:	str	lr, [r4, #12]
   14a80:	bl	16978 <UnityAssertEqualNumber@@Base>
   14a84:	ldr	r3, [r4, #16]
   14a88:	add	r0, sp, #12
   14a8c:	ldr	r2, [r4, #20]
   14a90:	adds	r3, r3, #1
   14a94:	adc	r2, r2, #0
   14a98:	str	r3, [r4, #16]
   14a9c:	str	r2, [r4, #20]
   14aa0:	bl	1a480 <next@@Base>
   14aa4:	ldr	ip, [r4, #24]
   14aa8:	mov	r2, #0
   14aac:	mov	r3, #25
   14ab0:	ldr	lr, [r4, #28]
   14ab4:	ldr	r1, [r0]
   14ab8:	mov	r0, #2
   14abc:	adds	ip, ip, #1
   14ac0:	str	r5, [sp]
   14ac4:	adc	lr, lr, r2
   14ac8:	str	ip, [r4, #24]
   14acc:	str	lr, [r4, #28]
   14ad0:	bl	16978 <UnityAssertEqualNumber@@Base>
   14ad4:	ldr	r3, [r4, #32]
   14ad8:	add	r0, sp, #12
   14adc:	ldr	r2, [r4, #36]	; 0x24
   14ae0:	adds	r3, r3, #1
   14ae4:	adc	r2, r2, #0
   14ae8:	str	r3, [r4, #32]
   14aec:	str	r2, [r4, #36]	; 0x24
   14af0:	bl	1a480 <next@@Base>
   14af4:	ldr	ip, [r4, #40]	; 0x28
   14af8:	mov	r2, #0
   14afc:	mov	r3, #27
   14b00:	ldr	lr, [r4, #44]	; 0x2c
   14b04:	ldr	r1, [r0]
   14b08:	mov	r0, #3
   14b0c:	adds	ip, ip, #1
   14b10:	str	r5, [sp]
   14b14:	adc	lr, lr, r2
   14b18:	str	ip, [r4, #40]	; 0x28
   14b1c:	str	lr, [r4, #44]	; 0x2c
   14b20:	bl	16978 <UnityAssertEqualNumber@@Base>
   14b24:	ldr	r3, [r4, #48]	; 0x30
   14b28:	add	r0, sp, #12
   14b2c:	ldr	r2, [r4, #52]	; 0x34
   14b30:	adds	r3, r3, #1
   14b34:	adc	r2, r2, #0
   14b38:	str	r3, [r4, #48]	; 0x30
   14b3c:	str	r2, [r4, #52]	; 0x34
   14b40:	bl	1a480 <next@@Base>
   14b44:	ldr	ip, [r4, #56]	; 0x38
   14b48:	mov	r2, #0
   14b4c:	mov	r3, #29
   14b50:	ldr	lr, [r4, #60]	; 0x3c
   14b54:	ldr	r1, [r0]
   14b58:	mov	r0, #4
   14b5c:	adds	ip, ip, #1
   14b60:	str	r5, [sp]
   14b64:	adc	lr, lr, r2
   14b68:	str	ip, [r4, #56]	; 0x38
   14b6c:	str	lr, [r4, #60]	; 0x3c
   14b70:	bl	16978 <UnityAssertEqualNumber@@Base>
   14b74:	ldr	r3, [r4, #64]	; 0x40
   14b78:	add	r0, sp, #12
   14b7c:	ldr	r2, [r4, #68]	; 0x44
   14b80:	adds	r3, r3, #1
   14b84:	adc	r2, r2, #0
   14b88:	str	r3, [r4, #64]	; 0x40
   14b8c:	str	r2, [r4, #68]	; 0x44
   14b90:	bl	1a480 <next@@Base>
   14b94:	ldr	ip, [r4, #72]	; 0x48
   14b98:	mov	r2, #0
   14b9c:	mov	r3, #31
   14ba0:	ldr	lr, [r4, #76]	; 0x4c
   14ba4:	ldr	r1, [r0]
   14ba8:	mov	r0, #5
   14bac:	adds	ip, ip, #1
   14bb0:	str	r5, [sp]
   14bb4:	adc	lr, lr, r2
   14bb8:	str	ip, [r4, #72]	; 0x48
   14bbc:	str	lr, [r4, #76]	; 0x4c
   14bc0:	bl	16978 <UnityAssertEqualNumber@@Base>
   14bc4:	ldr	r3, [r4, #80]	; 0x50
   14bc8:	add	r0, sp, #12
   14bcc:	ldr	r2, [r4, #84]	; 0x54
   14bd0:	adds	r3, r3, #1
   14bd4:	adc	r2, r2, #0
   14bd8:	str	r3, [r4, #80]	; 0x50
   14bdc:	str	r2, [r4, #84]	; 0x54
   14be0:	bl	1a480 <next@@Base>
   14be4:	ldr	ip, [r4, #88]	; 0x58
   14be8:	mov	r2, #0
   14bec:	mov	r3, #33	; 0x21
   14bf0:	ldr	lr, [r4, #92]	; 0x5c
   14bf4:	ldr	r1, [r0]
   14bf8:	mov	r0, #7
   14bfc:	adds	ip, ip, #1
   14c00:	str	r5, [sp]
   14c04:	adc	lr, lr, r2
   14c08:	str	ip, [r4, #88]	; 0x58
   14c0c:	str	lr, [r4, #92]	; 0x5c
   14c10:	bl	16978 <UnityAssertEqualNumber@@Base>
   14c14:	ldr	r3, [r4, #96]	; 0x60
   14c18:	add	r0, sp, #12
   14c1c:	ldr	r2, [r4, #100]	; 0x64
   14c20:	adds	r3, r3, #1
   14c24:	adc	r2, r2, #0
   14c28:	str	r3, [r4, #96]	; 0x60
   14c2c:	str	r2, [r4, #100]	; 0x64
   14c30:	bl	1a480 <next@@Base>
   14c34:	ldr	ip, [r4, #104]	; 0x68
   14c38:	mov	r2, #0
   14c3c:	mov	r3, #35	; 0x23
   14c40:	ldr	lr, [r4, #108]	; 0x6c
   14c44:	ldr	r1, [r0]
   14c48:	mov	r0, #1
   14c4c:	adds	ip, ip, #1
   14c50:	str	r5, [sp]
   14c54:	adc	lr, lr, r2
   14c58:	str	ip, [r4, #104]	; 0x68
   14c5c:	str	lr, [r4, #108]	; 0x6c
   14c60:	bl	16978 <UnityAssertEqualNumber@@Base>
   14c64:	ldr	r3, [r4, #112]	; 0x70
   14c68:	add	r0, sp, #12
   14c6c:	ldr	r2, [r4, #116]	; 0x74
   14c70:	adds	r3, r3, #1
   14c74:	adc	r2, r2, #0
   14c78:	str	r3, [r4, #112]	; 0x70
   14c7c:	str	r2, [r4, #116]	; 0x74
   14c80:	bl	1a480 <next@@Base>
   14c84:	ldr	ip, [r4, #120]	; 0x78
   14c88:	mov	r2, #0
   14c8c:	mov	r3, #37	; 0x25
   14c90:	ldr	lr, [r4, #124]	; 0x7c
   14c94:	ldr	r1, [r0]
   14c98:	mov	r0, #8
   14c9c:	adds	ip, ip, #1
   14ca0:	str	r5, [sp]
   14ca4:	adc	lr, lr, r2
   14ca8:	str	ip, [r4, #120]	; 0x78
   14cac:	str	lr, [r4, #124]	; 0x7c
   14cb0:	bl	16978 <UnityAssertEqualNumber@@Base>
   14cb4:	ldr	r3, [r4, #128]	; 0x80
   14cb8:	add	r0, sp, #12
   14cbc:	ldr	r2, [r4, #132]	; 0x84
   14cc0:	adds	r3, r3, #1
   14cc4:	adc	r2, r2, #0
   14cc8:	str	r3, [r4, #128]	; 0x80
   14ccc:	str	r2, [r4, #132]	; 0x84
   14cd0:	bl	1a480 <next@@Base>
   14cd4:	ldr	ip, [r4, #136]	; 0x88
   14cd8:	mov	r2, #0
   14cdc:	mov	r3, #39	; 0x27
   14ce0:	ldr	lr, [r4, #140]	; 0x8c
   14ce4:	ldr	r1, [r0]
   14ce8:	mov	r0, #6
   14cec:	adds	ip, ip, #1
   14cf0:	str	r5, [sp]
   14cf4:	adc	lr, lr, r2
   14cf8:	str	ip, [r4, #136]	; 0x88
   14cfc:	str	lr, [r4, #140]	; 0x8c
   14d00:	bl	16978 <UnityAssertEqualNumber@@Base>
   14d04:	ldr	r3, [r4, #144]	; 0x90
   14d08:	add	r0, sp, #12
   14d0c:	ldr	r2, [r4, #148]	; 0x94
   14d10:	adds	r3, r3, #1
   14d14:	adc	r2, r2, #0
   14d18:	str	r3, [r4, #144]	; 0x90
   14d1c:	str	r2, [r4, #148]	; 0x94
   14d20:	bl	1a480 <next@@Base>
   14d24:	ldr	ip, [r4, #152]	; 0x98
   14d28:	mov	r2, #0
   14d2c:	mov	r3, #41	; 0x29
   14d30:	ldr	lr, [r4, #156]	; 0x9c
   14d34:	ldr	r1, [r0]
   14d38:	mov	r0, #9
   14d3c:	adds	ip, ip, #1
   14d40:	str	r5, [sp]
   14d44:	adc	lr, lr, r2
   14d48:	str	ip, [r4, #152]	; 0x98
   14d4c:	str	lr, [r4, #156]	; 0x9c
   14d50:	bl	16978 <UnityAssertEqualNumber@@Base>
   14d54:	ldr	r3, [r4, #160]	; 0xa0
   14d58:	add	r0, sp, #12
   14d5c:	ldr	r2, [r4, #164]	; 0xa4
   14d60:	adds	r3, r3, #1
   14d64:	adc	r2, r2, #0
   14d68:	str	r3, [r4, #160]	; 0xa0
   14d6c:	str	r2, [r4, #164]	; 0xa4
   14d70:	bl	1a200 <destroy_lexer@@Base>
   14d74:	ldr	r3, [r4, #168]	; 0xa8
   14d78:	ldr	r2, [r4, #172]	; 0xac
   14d7c:	adds	r3, r3, #1
   14d80:	adc	r2, r2, #0
   14d84:	str	r3, [r4, #168]	; 0xa8
   14d88:	str	r2, [r4, #172]	; 0xac
   14d8c:	add	sp, sp, #28
   14d90:	ldrd	r4, [sp]
   14d94:	add	sp, sp, #8
   14d98:	pop	{pc}		; (ldr pc, [sp], #4)
   14d9c:	andeq	pc, r2, r0, asr #5

00014da0 <push_token_and_call_next@@Base>:
   14da0:	strd	r4, [sp, #-12]!
   14da4:	movw	r1, #54736	; 0xd5d0
   14da8:	movt	r1, #1
   14dac:	ldr	r4, [pc, #248]	; 14eac <push_token_and_call_next@@Base+0x10c>
   14db0:	str	lr, [sp, #8]
   14db4:	sub	sp, sp, #28
   14db8:	add	r0, sp, #12
   14dbc:	ldr	r3, [r4]
   14dc0:	ldr	r2, [r4, #4]
   14dc4:	adds	r3, r3, #1
   14dc8:	adc	r2, r2, #0
   14dcc:	str	r3, [r4]
   14dd0:	str	r2, [r4, #4]
   14dd4:	bl	1a1d4 <init_lexer@@Base>
   14dd8:	ldr	r3, [r4, #8]
   14ddc:	mov	r0, #8
   14de0:	ldr	r2, [r4, #12]
   14de4:	adds	r3, r3, #1
   14de8:	adc	r2, r2, #0
   14dec:	str	r3, [r4, #8]
   14df0:	str	r2, [r4, #12]
   14df4:	bl	12044 <malloc@plt>
   14df8:	mov	r5, r0
   14dfc:	mov	r1, r0
   14e00:	add	r0, sp, #12
   14e04:	bl	1a270 <push_back@@Base>
   14e08:	ldr	r3, [r4, #16]
   14e0c:	add	r0, sp, #12
   14e10:	ldr	r2, [r4, #20]
   14e14:	adds	r3, r3, #1
   14e18:	adc	r2, r2, #0
   14e1c:	str	r3, [r4, #16]
   14e20:	str	r2, [r4, #20]
   14e24:	bl	1a480 <next@@Base>
   14e28:	ldr	ip, [r4, #24]
   14e2c:	mov	r2, #148	; 0x94
   14e30:	mov	r1, r0
   14e34:	mov	r3, #113	; 0x71
   14e38:	mov	r0, r5
   14e3c:	ldr	lr, [r4, #28]
   14e40:	str	r2, [sp]
   14e44:	mov	r2, #0
   14e48:	adds	ip, ip, #1
   14e4c:	adc	lr, lr, r2
   14e50:	str	ip, [r4, #24]
   14e54:	str	lr, [r4, #28]
   14e58:	bl	16978 <UnityAssertEqualNumber@@Base>
   14e5c:	ldr	r3, [r4, #32]
   14e60:	add	r0, sp, #12
   14e64:	ldr	r2, [r4, #36]	; 0x24
   14e68:	adds	r3, r3, #1
   14e6c:	adc	r2, r2, #0
   14e70:	str	r3, [r4, #32]
   14e74:	str	r2, [r4, #36]	; 0x24
   14e78:	bl	1a200 <destroy_lexer@@Base>
   14e7c:	ldr	r3, [r4, #40]	; 0x28
   14e80:	mov	r0, r5
   14e84:	ldr	r2, [r4, #44]	; 0x2c
   14e88:	adds	r3, r3, #1
   14e8c:	adc	r2, r2, #0
   14e90:	str	r3, [r4, #40]	; 0x28
   14e94:	str	r2, [r4, #44]	; 0x2c
   14e98:	add	sp, sp, #28
   14e9c:	ldrd	r4, [sp]
   14ea0:	ldr	lr, [sp, #8]
   14ea4:	add	sp, sp, #12
   14ea8:	b	11fe4 <free@plt>
   14eac:	andeq	pc, r2, r0, ror r3	; <UNPREDICTABLE>

00014eb0 <push_two_tokens_to_stack@@Base>:
   14eb0:	strd	r4, [sp, #-20]!	; 0xffffffec
   14eb4:	movw	r1, #54736	; 0xd5d0
   14eb8:	movt	r1, #1
   14ebc:	ldr	r4, [pc, #336]	; 15014 <push_two_tokens_to_stack@@Base+0x164>
   14ec0:	strd	r6, [sp, #8]
   14ec4:	mov	r7, #148	; 0x94
   14ec8:	str	lr, [sp, #16]
   14ecc:	sub	sp, sp, #28
   14ed0:	add	r0, sp, #12
   14ed4:	ldr	r3, [r4]
   14ed8:	ldr	r2, [r4, #4]
   14edc:	adds	r3, r3, #1
   14ee0:	adc	r2, r2, #0
   14ee4:	str	r3, [r4]
   14ee8:	str	r2, [r4, #4]
   14eec:	bl	1a1d4 <init_lexer@@Base>
   14ef0:	ldr	r3, [r4, #8]
   14ef4:	mov	r0, #8
   14ef8:	ldr	r2, [r4, #12]
   14efc:	adds	r3, r3, #1
   14f00:	adc	r2, r2, #0
   14f04:	str	r3, [r4, #8]
   14f08:	str	r2, [r4, #12]
   14f0c:	bl	12044 <malloc@plt>
   14f10:	mov	r6, r0
   14f14:	mov	r0, #8
   14f18:	bl	12044 <malloc@plt>
   14f1c:	mov	r5, r0
   14f20:	mov	r1, r6
   14f24:	add	r0, sp, #12
   14f28:	bl	1a270 <push_back@@Base>
   14f2c:	ldr	ip, [r4, #16]
   14f30:	mov	r2, #0
   14f34:	mov	r1, r6
   14f38:	mov	r3, #86	; 0x56
   14f3c:	ldr	lr, [r4, #20]
   14f40:	ldr	r0, [sp, #16]
   14f44:	adds	ip, ip, #1
   14f48:	adc	lr, lr, r2
   14f4c:	str	ip, [r4, #16]
   14f50:	ldr	r0, [r0, #4]
   14f54:	str	r7, [sp]
   14f58:	str	lr, [r4, #20]
   14f5c:	bl	16978 <UnityAssertEqualNumber@@Base>
   14f60:	ldr	r3, [r4, #24]
   14f64:	mov	r1, r5
   14f68:	add	r0, sp, #12
   14f6c:	ldr	r2, [r4, #28]
   14f70:	adds	r3, r3, #1
   14f74:	adc	r2, r2, #0
   14f78:	str	r3, [r4, #24]
   14f7c:	str	r2, [r4, #28]
   14f80:	bl	1a270 <push_back@@Base>
   14f84:	ldr	ip, [r4, #32]
   14f88:	mov	r2, #0
   14f8c:	mov	r1, r5
   14f90:	mov	r3, #88	; 0x58
   14f94:	ldr	lr, [r4, #36]	; 0x24
   14f98:	ldr	r0, [sp, #16]
   14f9c:	adds	ip, ip, #1
   14fa0:	adc	lr, lr, r2
   14fa4:	str	ip, [r4, #32]
   14fa8:	ldr	r0, [r0, #4]
   14fac:	str	r7, [sp]
   14fb0:	str	lr, [r4, #36]	; 0x24
   14fb4:	bl	16978 <UnityAssertEqualNumber@@Base>
   14fb8:	ldr	r3, [r4, #40]	; 0x28
   14fbc:	add	r0, sp, #12
   14fc0:	ldr	r2, [r4, #44]	; 0x2c
   14fc4:	adds	r3, r3, #1
   14fc8:	adc	r2, r2, #0
   14fcc:	str	r3, [r4, #40]	; 0x28
   14fd0:	str	r2, [r4, #44]	; 0x2c
   14fd4:	bl	1a200 <destroy_lexer@@Base>
   14fd8:	ldr	r3, [r4, #48]	; 0x30
   14fdc:	mov	r0, r6
   14fe0:	ldr	r2, [r4, #52]	; 0x34
   14fe4:	adds	r3, r3, #1
   14fe8:	adc	r2, r2, #0
   14fec:	str	r3, [r4, #48]	; 0x30
   14ff0:	str	r2, [r4, #52]	; 0x34
   14ff4:	bl	11fe4 <free@plt>
   14ff8:	mov	r0, r5
   14ffc:	add	sp, sp, #28
   15000:	ldrd	r4, [sp]
   15004:	ldrd	r6, [sp, #8]
   15008:	ldr	lr, [sp, #16]
   1500c:	add	sp, sp, #20
   15010:	b	11fe4 <free@plt>
   15014:	andeq	pc, r2, r0, lsr #7

00015018 <push_token_to_stack@@Base>:
   15018:	strd	r4, [sp, #-16]!
   1501c:	movw	r1, #54736	; 0xd5d0
   15020:	movt	r1, #1
   15024:	ldr	r4, [pc, #228]	; 15110 <push_token_to_stack@@Base+0xf8>
   15028:	str	r6, [sp, #8]
   1502c:	mov	r6, #148	; 0x94
   15030:	str	lr, [sp, #12]
   15034:	sub	sp, sp, #24
   15038:	add	r0, sp, #12
   1503c:	ldr	r3, [r4, #-8]
   15040:	ldr	r2, [r4, #-4]
   15044:	adds	r3, r3, #1
   15048:	adc	r2, r2, #0
   1504c:	str	r3, [r4, #-8]
   15050:	str	r2, [r4, #-4]
   15054:	bl	1a1d4 <init_lexer@@Base>
   15058:	ldr	r3, [r4]
   1505c:	mov	r0, #8
   15060:	ldr	r2, [r4, #4]
   15064:	adds	r3, r3, #1
   15068:	adc	r2, r2, #0
   1506c:	str	r3, [r4]
   15070:	str	r2, [r4, #4]
   15074:	bl	12044 <malloc@plt>
   15078:	mov	r5, r0
   1507c:	mov	r1, r0
   15080:	add	r0, sp, #12
   15084:	bl	1a270 <push_back@@Base>
   15088:	ldr	r2, [r4, #8]
   1508c:	mov	r1, r5
   15090:	mov	r3, #62	; 0x3e
   15094:	ldr	lr, [r4, #12]
   15098:	ldr	r0, [sp, #16]
   1509c:	adds	ip, r2, #1
   150a0:	mov	r2, #0
   150a4:	adc	lr, lr, r2
   150a8:	str	ip, [r4, #8]
   150ac:	ldr	r0, [r0, #4]
   150b0:	str	r6, [sp]
   150b4:	str	lr, [r4, #12]
   150b8:	bl	16978 <UnityAssertEqualNumber@@Base>
   150bc:	ldr	r3, [r4, #16]
   150c0:	add	r0, sp, #12
   150c4:	ldr	r2, [r4, #20]
   150c8:	adds	r3, r3, #1
   150cc:	adc	r2, r2, #0
   150d0:	str	r3, [r4, #16]
   150d4:	str	r2, [r4, #20]
   150d8:	bl	1a200 <destroy_lexer@@Base>
   150dc:	ldr	r3, [r4, #24]
   150e0:	mov	r0, r5
   150e4:	ldr	r2, [r4, #28]
   150e8:	adds	r3, r3, #1
   150ec:	adc	r2, r2, #0
   150f0:	str	r3, [r4, #24]
   150f4:	str	r2, [r4, #28]
   150f8:	add	sp, sp, #24
   150fc:	ldrd	r4, [sp]
   15100:	ldr	r6, [sp, #8]
   15104:	ldr	lr, [sp, #12]
   15108:	add	sp, sp, #16
   1510c:	b	11fe4 <free@plt>
   15110:	andeq	pc, r2, r0, ror #7
   15114:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15118:	movw	r4, #60468	; 0xec34
   1511c:	movt	r4, #2
   15120:	strd	r6, [sp, #8]
   15124:	movw	r6, #62704	; 0xf4f0
   15128:	movt	r6, #2
   1512c:	ldr	r3, [r6]
   15130:	mov	r5, r0
   15134:	mov	r0, #48	; 0x30
   15138:	str	r8, [sp, #16]
   1513c:	mov	r7, #2
   15140:	ldr	r2, [r6, #4]
   15144:	str	lr, [sp, #20]
   15148:	ldr	r1, [r4]
   1514c:	adds	r3, r3, #1
   15150:	adc	r2, r2, #0
   15154:	str	r3, [r6]
   15158:	str	r2, [r6, #4]
   1515c:	bl	120f8 <putc@plt>
   15160:	ldr	r3, [r6, #8]
   15164:	mov	r0, #120	; 0x78
   15168:	ldr	r2, [r6, #12]
   1516c:	ldr	r1, [r4]
   15170:	adds	r3, r3, #1
   15174:	adc	r2, r2, #0
   15178:	str	r3, [r6, #8]
   1517c:	str	r2, [r6, #12]
   15180:	bl	120f8 <putc@plt>
   15184:	ldr	r2, [r6, #16]
   15188:	mov	r3, r7
   1518c:	ldr	r1, [r6, #20]
   15190:	adds	r2, r2, #1
   15194:	adc	r1, r1, #0
   15198:	str	r2, [r6, #16]
   1519c:	str	r1, [r6, #20]
   151a0:	b	151e8 <push_token_to_stack@@Base+0x1d0>
   151a4:	ldr	r3, [r6, #24]
   151a8:	ldr	r2, [r6, #28]
   151ac:	adds	r3, r3, #1
   151b0:	adc	r2, r2, #0
   151b4:	str	r3, [r6, #24]
   151b8:	str	r2, [r6, #28]
   151bc:	bl	120f8 <putc@plt>
   151c0:	ldr	r3, [r6, #40]	; 0x28
   151c4:	ldr	r2, [r6, #44]	; 0x2c
   151c8:	adds	r3, r3, #1
   151cc:	adc	r2, r2, #0
   151d0:	cmp	r7, #1
   151d4:	str	r3, [r6, #40]	; 0x28
   151d8:	mov	r3, #1
   151dc:	mov	r7, r3
   151e0:	str	r2, [r6, #44]	; 0x2c
   151e4:	beq	1523c <push_token_to_stack@@Base+0x224>
   151e8:	sub	r0, r3, #1
   151ec:	ldr	ip, [r4]
   151f0:	uxtb	r0, r0
   151f4:	lsl	r0, r0, #2
   151f8:	lsr	r0, r5, r0
   151fc:	mov	r1, ip
   15200:	and	r0, r0, #15
   15204:	cmp	r0, #9
   15208:	uxtb	r3, r0
   1520c:	add	r0, r3, #48	; 0x30
   15210:	bls	151a4 <push_token_to_stack@@Base+0x18c>
   15214:	add	r0, r3, #55	; 0x37
   15218:	ldrd	r2, [r6, #32]
   1521c:	adds	r2, r2, #1
   15220:	adc	r3, r3, #0
   15224:	strd	r2, [r6, #32]
   15228:	bl	120f8 <putc@plt>
   1522c:	cmp	r7, #1
   15230:	mov	r3, #1
   15234:	mov	r7, r3
   15238:	bne	151e8 <push_token_to_stack@@Base+0x1d0>
   1523c:	ldr	r3, [r6, #48]	; 0x30
   15240:	ldr	r2, [r6, #52]	; 0x34
   15244:	ldrd	r4, [sp]
   15248:	adds	r3, r3, r7
   1524c:	ldr	r8, [sp, #16]
   15250:	adc	r2, r2, #0
   15254:	str	r3, [r6, #48]	; 0x30
   15258:	str	r2, [r6, #52]	; 0x34
   1525c:	ldrd	r6, [sp, #8]
   15260:	add	sp, sp, #20
   15264:	pop	{pc}		; (ldr pc, [sp], #4)

00015268 <UnityPrint@@Base>:
   15268:	strd	r4, [sp, #-16]!
   1526c:	subs	r5, r0, #0
   15270:	str	r6, [sp, #8]
   15274:	str	lr, [sp, #12]
   15278:	beq	15440 <UnityPrint@@Base+0x1d8>
   1527c:	movw	r4, #62704	; 0xf4f0
   15280:	movt	r4, #2
   15284:	ldrb	r3, [r5]
   15288:	ldr	r2, [r4, #56]	; 0x38
   1528c:	ldr	r1, [r4, #60]	; 0x3c
   15290:	adds	r2, r2, #1
   15294:	adc	r1, r1, #0
   15298:	cmp	r3, #0
   1529c:	str	r2, [r4, #56]	; 0x38
   152a0:	str	r1, [r4, #60]	; 0x3c
   152a4:	beq	1535c <UnityPrint@@Base+0xf4>
   152a8:	movw	r6, #60468	; 0xec34
   152ac:	movt	r6, #2
   152b0:	b	15310 <UnityPrint@@Base+0xa8>
   152b4:	cmp	r3, #13
   152b8:	mov	r0, #92	; 0x5c
   152bc:	beq	153e4 <UnityPrint@@Base+0x17c>
   152c0:	cmp	r3, #10
   152c4:	beq	15384 <UnityPrint@@Base+0x11c>
   152c8:	ldr	r3, [r4, #120]	; 0x78
   152cc:	ldr	r2, [r4, #124]	; 0x7c
   152d0:	adds	r3, r3, #1
   152d4:	adc	r2, r2, #0
   152d8:	str	r3, [r4, #120]	; 0x78
   152dc:	str	r2, [r4, #124]	; 0x7c
   152e0:	bl	120f8 <putc@plt>
   152e4:	ldr	r3, [r4, #144]	; 0x90
   152e8:	ldr	r2, [r4, #148]	; 0x94
   152ec:	ldrb	r0, [r5]
   152f0:	adds	r3, r3, #1
   152f4:	adc	r2, r2, #0
   152f8:	str	r3, [r4, #144]	; 0x90
   152fc:	str	r2, [r4, #148]	; 0x94
   15300:	bl	15114 <push_token_to_stack@@Base+0xfc>
   15304:	ldrb	r3, [r5, #1]!
   15308:	cmp	r3, #0
   1530c:	beq	1535c <UnityPrint@@Base+0xf4>
   15310:	sub	r2, r3, #32
   15314:	ldr	r1, [r6]
   15318:	cmp	r2, #94	; 0x5e
   1531c:	bhi	152b4 <UnityPrint@@Base+0x4c>
   15320:	mov	r0, r3
   15324:	ldrd	r2, [r4, #72]	; 0x48
   15328:	adds	r2, r2, #1
   1532c:	adc	r3, r3, #0
   15330:	strd	r2, [r4, #72]	; 0x48
   15334:	bl	120f8 <putc@plt>
   15338:	ldr	r3, [r4, #80]	; 0x50
   1533c:	ldr	r2, [r4, #84]	; 0x54
   15340:	adds	r3, r3, #1
   15344:	str	r3, [r4, #80]	; 0x50
   15348:	adc	r2, r2, #0
   1534c:	ldrb	r3, [r5, #1]!
   15350:	str	r2, [r4, #84]	; 0x54
   15354:	cmp	r3, #0
   15358:	bne	15310 <UnityPrint@@Base+0xa8>
   1535c:	ldr	r3, [r4, #152]	; 0x98
   15360:	ldr	r2, [r4, #156]	; 0x9c
   15364:	ldr	r6, [sp, #8]
   15368:	adds	r3, r3, #1
   1536c:	adc	r2, r2, #0
   15370:	str	r3, [r4, #152]	; 0x98
   15374:	str	r2, [r4, #156]	; 0x9c
   15378:	ldrd	r4, [sp]
   1537c:	add	sp, sp, #12
   15380:	pop	{pc}		; (ldr pc, [sp], #4)
   15384:	ldr	r3, [r4, #112]	; 0x70
   15388:	mov	r0, #92	; 0x5c
   1538c:	ldr	r2, [r4, #116]	; 0x74
   15390:	adds	r3, r3, #1
   15394:	adc	r2, r2, #0
   15398:	str	r3, [r4, #112]	; 0x70
   1539c:	str	r2, [r4, #116]	; 0x74
   153a0:	bl	120f8 <putc@plt>
   153a4:	ldr	r3, [r4, #128]	; 0x80
   153a8:	mov	r0, #110	; 0x6e
   153ac:	ldr	r2, [r4, #132]	; 0x84
   153b0:	ldr	r1, [r6]
   153b4:	adds	r3, r3, #1
   153b8:	adc	r2, r2, #0
   153bc:	str	r3, [r4, #128]	; 0x80
   153c0:	str	r2, [r4, #132]	; 0x84
   153c4:	bl	120f8 <putc@plt>
   153c8:	ldr	r3, [r4, #136]	; 0x88
   153cc:	ldr	r2, [r4, #140]	; 0x8c
   153d0:	adds	r3, r3, #1
   153d4:	adc	r2, r2, #0
   153d8:	str	r3, [r4, #136]	; 0x88
   153dc:	str	r2, [r4, #140]	; 0x8c
   153e0:	b	15304 <UnityPrint@@Base+0x9c>
   153e4:	ldr	r3, [r4, #88]	; 0x58
   153e8:	ldr	r2, [r4, #92]	; 0x5c
   153ec:	adds	r3, r3, #1
   153f0:	adc	r2, r2, #0
   153f4:	str	r3, [r4, #88]	; 0x58
   153f8:	str	r2, [r4, #92]	; 0x5c
   153fc:	bl	120f8 <putc@plt>
   15400:	ldr	r3, [r4, #96]	; 0x60
   15404:	mov	r0, #114	; 0x72
   15408:	ldr	r2, [r4, #100]	; 0x64
   1540c:	ldr	r1, [r6]
   15410:	adds	r3, r3, #1
   15414:	adc	r2, r2, #0
   15418:	str	r3, [r4, #96]	; 0x60
   1541c:	str	r2, [r4, #100]	; 0x64
   15420:	bl	120f8 <putc@plt>
   15424:	ldr	r3, [r4, #104]	; 0x68
   15428:	ldr	r2, [r4, #108]	; 0x6c
   1542c:	adds	r3, r3, #1
   15430:	adc	r2, r2, #0
   15434:	str	r3, [r4, #104]	; 0x68
   15438:	str	r2, [r4, #108]	; 0x6c
   1543c:	b	15304 <UnityPrint@@Base+0x9c>
   15440:	movw	r3, #62704	; 0xf4f0
   15444:	movt	r3, #2
   15448:	ldrd	r4, [sp]
   1544c:	ldr	r2, [r3, #64]	; 0x40
   15450:	ldr	r1, [r3, #68]	; 0x44
   15454:	ldr	r6, [sp, #8]
   15458:	add	sp, sp, #12
   1545c:	adds	r2, r2, #1
   15460:	adc	r1, r1, #0
   15464:	str	r2, [r3, #64]	; 0x40
   15468:	str	r1, [r3, #68]	; 0x44
   1546c:	pop	{pc}		; (ldr pc, [sp], #4)
   15470:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15474:	movw	r4, #62704	; 0xf4f0
   15478:	movt	r4, #2
   1547c:	ldr	r3, [r4, #160]	; 0xa0
   15480:	mov	r5, r1
   15484:	strd	r6, [sp, #8]
   15488:	mov	r6, r0
   1548c:	movw	r0, #55480	; 0xd8b8
   15490:	movt	r0, #1
   15494:	ldr	r2, [r4, #164]	; 0xa4
   15498:	str	r8, [sp, #16]
   1549c:	str	lr, [sp, #20]
   154a0:	adds	r3, r3, #1
   154a4:	adc	r2, r2, #0
   154a8:	str	r3, [r4, #160]	; 0xa0
   154ac:	str	r2, [r4, #164]	; 0xa4
   154b0:	bl	15268 <UnityPrint@@Base>
   154b4:	cmp	r6, #0
   154b8:	beq	155f0 <UnityPrint@@Base+0x388>
   154bc:	ldr	r3, [r4, #168]	; 0xa8
   154c0:	movw	r7, #60468	; 0xec34
   154c4:	movt	r7, #2
   154c8:	mov	r0, #39	; 0x27
   154cc:	ldr	r2, [r4, #172]	; 0xac
   154d0:	ldr	r1, [r7]
   154d4:	adds	r3, r3, #1
   154d8:	adc	r2, r2, #0
   154dc:	str	r3, [r4, #168]	; 0xa8
   154e0:	str	r2, [r4, #172]	; 0xac
   154e4:	bl	120f8 <putc@plt>
   154e8:	ldr	r3, [r4, #184]	; 0xb8
   154ec:	mov	r0, r6
   154f0:	ldr	r2, [r4, #188]	; 0xbc
   154f4:	adds	r3, r3, #1
   154f8:	adc	r2, r2, #0
   154fc:	str	r3, [r4, #184]	; 0xb8
   15500:	str	r2, [r4, #188]	; 0xbc
   15504:	bl	15268 <UnityPrint@@Base>
   15508:	ldr	r3, [r4, #192]	; 0xc0
   1550c:	mov	r0, #39	; 0x27
   15510:	ldr	r2, [r4, #196]	; 0xc4
   15514:	ldr	r1, [r7]
   15518:	adds	r3, r3, #1
   1551c:	adc	r2, r2, #0
   15520:	str	r3, [r4, #192]	; 0xc0
   15524:	str	r2, [r4, #196]	; 0xc4
   15528:	bl	120f8 <putc@plt>
   1552c:	ldr	r3, [r4, #200]	; 0xc8
   15530:	ldr	r2, [r4, #204]	; 0xcc
   15534:	ldr	r0, [pc, #316]	; 15678 <UnityPrint@@Base+0x410>
   15538:	adds	r3, r3, #1
   1553c:	adc	r2, r2, #0
   15540:	str	r3, [r4, #200]	; 0xc8
   15544:	str	r2, [r4, #204]	; 0xcc
   15548:	bl	15268 <UnityPrint@@Base>
   1554c:	cmp	r5, #0
   15550:	beq	15638 <UnityPrint@@Base+0x3d0>
   15554:	ldr	r3, [r4, #216]	; 0xd8
   15558:	movw	r6, #60468	; 0xec34
   1555c:	movt	r6, #2
   15560:	mov	r0, #39	; 0x27
   15564:	ldr	r2, [r4, #220]	; 0xdc
   15568:	ldr	r1, [r6]
   1556c:	adds	r3, r3, #1
   15570:	adc	r2, r2, #0
   15574:	str	r3, [r4, #216]	; 0xd8
   15578:	str	r2, [r4, #220]	; 0xdc
   1557c:	bl	120f8 <putc@plt>
   15580:	ldr	r3, [r4, #232]	; 0xe8
   15584:	mov	r0, r5
   15588:	ldr	r2, [r4, #236]	; 0xec
   1558c:	adds	r3, r3, #1
   15590:	adc	r2, r2, #0
   15594:	str	r3, [r4, #232]	; 0xe8
   15598:	str	r2, [r4, #236]	; 0xec
   1559c:	bl	15268 <UnityPrint@@Base>
   155a0:	ldr	r3, [r4, #240]	; 0xf0
   155a4:	mov	r0, #39	; 0x27
   155a8:	ldr	r2, [r4, #244]	; 0xf4
   155ac:	ldr	r1, [r6]
   155b0:	adds	r3, r3, #1
   155b4:	adc	r2, r2, #0
   155b8:	str	r3, [r4, #240]	; 0xf0
   155bc:	str	r2, [r4, #244]	; 0xf4
   155c0:	bl	120f8 <putc@plt>
   155c4:	ldr	r3, [r4, #248]	; 0xf8
   155c8:	ldr	r2, [r4, #252]	; 0xfc
   155cc:	adds	r3, r3, #1
   155d0:	adc	r2, r2, #0
   155d4:	str	r3, [r4, #248]	; 0xf8
   155d8:	str	r2, [r4, #252]	; 0xfc
   155dc:	ldrd	r4, [sp]
   155e0:	ldrd	r6, [sp, #8]
   155e4:	ldr	r8, [sp, #16]
   155e8:	add	sp, sp, #20
   155ec:	pop	{pc}		; (ldr pc, [sp], #4)
   155f0:	ldr	r3, [r4, #176]	; 0xb0
   155f4:	ldr	r2, [r4, #180]	; 0xb4
   155f8:	ldr	r0, [pc, #124]	; 1567c <UnityPrint@@Base+0x414>
   155fc:	adds	r3, r3, #1
   15600:	adc	r2, r2, #0
   15604:	str	r3, [r4, #176]	; 0xb0
   15608:	str	r2, [r4, #180]	; 0xb4
   1560c:	bl	15268 <UnityPrint@@Base>
   15610:	ldr	r3, [r4, #208]	; 0xd0
   15614:	ldr	r2, [r4, #212]	; 0xd4
   15618:	ldr	r0, [pc, #88]	; 15678 <UnityPrint@@Base+0x410>
   1561c:	adds	r3, r3, #1
   15620:	adc	r2, r2, #0
   15624:	str	r3, [r4, #208]	; 0xd0
   15628:	str	r2, [r4, #212]	; 0xd4
   1562c:	bl	15268 <UnityPrint@@Base>
   15630:	cmp	r5, #0
   15634:	bne	15554 <UnityPrint@@Base+0x2ec>
   15638:	ldr	r3, [r4, #224]	; 0xe0
   1563c:	ldr	r2, [r4, #228]	; 0xe4
   15640:	ldr	r0, [pc, #52]	; 1567c <UnityPrint@@Base+0x414>
   15644:	adds	r3, r3, #1
   15648:	adc	r2, r2, #0
   1564c:	str	r3, [r4, #224]	; 0xe0
   15650:	str	r2, [r4, #228]	; 0xe4
   15654:	bl	15268 <UnityPrint@@Base>
   15658:	ldr	r2, [pc, #32]	; 15680 <UnityPrint@@Base+0x418>
   1565c:	ldr	r3, [r2]
   15660:	ldr	r1, [r2, #4]
   15664:	adds	r3, r3, #1
   15668:	adc	r1, r1, #0
   1566c:	str	r3, [r2]
   15670:	str	r1, [r2, #4]
   15674:	b	155dc <UnityPrint@@Base+0x374>
   15678:	andeq	sp, r1, ip, asr #17
   1567c:	andeq	sp, r1, r4, asr #17
   15680:	strdeq	pc, [r2], -r0
   15684:	strd	r4, [sp, #-16]!
   15688:	str	r6, [sp, #8]
   1568c:	subs	r6, r0, #0
   15690:	str	lr, [sp, #12]
   15694:	beq	157e0 <UnityPrint@@Base+0x578>
   15698:	ldr	r4, [pc, #392]	; 15828 <UnityPrint@@Base+0x5c0>
   1569c:	movw	r5, #1112	; 0x458
   156a0:	movt	r5, #3
   156a4:	ldr	r0, [pc, #384]	; 1582c <UnityPrint@@Base+0x5c4>
   156a8:	ldr	r3, [r4, #-8]
   156ac:	ldr	r2, [r4, #-4]
   156b0:	adds	r3, r3, #1
   156b4:	adc	r2, r2, #0
   156b8:	str	r3, [r4, #-8]
   156bc:	str	r2, [r4, #-4]
   156c0:	bl	15268 <UnityPrint@@Base>
   156c4:	ldr	r3, [r5, #8]
   156c8:	cmp	r3, #0
   156cc:	beq	15798 <UnityPrint@@Base+0x530>
   156d0:	ldr	r3, [r4, #8]
   156d4:	ldr	r2, [r4, #12]
   156d8:	ldr	r0, [pc, #336]	; 15830 <UnityPrint@@Base+0x5c8>
   156dc:	adds	r3, r3, #1
   156e0:	adc	r2, r2, #0
   156e4:	str	r3, [r4, #8]
   156e8:	str	r2, [r4, #12]
   156ec:	bl	15268 <UnityPrint@@Base>
   156f0:	ldr	r3, [r4, #24]
   156f4:	ldr	r2, [r4, #28]
   156f8:	ldr	r0, [r5, #8]
   156fc:	adds	r3, r3, #1
   15700:	adc	r2, r2, #0
   15704:	str	r3, [r4, #24]
   15708:	str	r2, [r4, #28]
   1570c:	bl	15268 <UnityPrint@@Base>
   15710:	ldr	r3, [r5, #12]
   15714:	cmp	r3, #0
   15718:	beq	1580c <UnityPrint@@Base+0x5a4>
   1571c:	ldr	r3, [r4, #32]
   15720:	ldr	r2, [r4, #36]	; 0x24
   15724:	ldr	r0, [pc, #264]	; 15834 <UnityPrint@@Base+0x5cc>
   15728:	adds	r3, r3, #1
   1572c:	adc	r2, r2, #0
   15730:	str	r3, [r4, #32]
   15734:	str	r2, [r4, #36]	; 0x24
   15738:	bl	15268 <UnityPrint@@Base>
   1573c:	ldr	r3, [r4, #48]	; 0x30
   15740:	ldr	r2, [r4, #52]	; 0x34
   15744:	ldr	r0, [r5, #12]
   15748:	adds	r3, r3, #1
   1574c:	adc	r2, r2, #0
   15750:	str	r3, [r4, #48]	; 0x30
   15754:	str	r2, [r4, #52]	; 0x34
   15758:	bl	15268 <UnityPrint@@Base>
   1575c:	ldr	r3, [r4, #56]	; 0x38
   15760:	ldr	r2, [r4, #60]	; 0x3c
   15764:	adds	r3, r3, #1
   15768:	adc	r2, r2, #0
   1576c:	str	r3, [r4, #56]	; 0x38
   15770:	str	r2, [r4, #60]	; 0x3c
   15774:	ldr	r0, [pc, #176]	; 1582c <UnityPrint@@Base+0x5c4>
   15778:	bl	15268 <UnityPrint@@Base>
   1577c:	ldr	r3, [r4, #64]	; 0x40
   15780:	ldr	r2, [r4, #68]	; 0x44
   15784:	adds	r3, r3, #1
   15788:	adc	r2, r2, #0
   1578c:	str	r3, [r4, #64]	; 0x40
   15790:	str	r2, [r4, #68]	; 0x44
   15794:	b	157b0 <UnityPrint@@Base+0x548>
   15798:	ldr	r3, [r4, #16]
   1579c:	ldr	r2, [r4, #20]
   157a0:	adds	r3, r3, #1
   157a4:	adc	r2, r2, #0
   157a8:	str	r3, [r4, #16]
   157ac:	str	r2, [r4, #20]
   157b0:	mov	r0, r6
   157b4:	bl	15268 <UnityPrint@@Base>
   157b8:	ldr	r3, [r4, #72]	; 0x48
   157bc:	ldr	r2, [r4, #76]	; 0x4c
   157c0:	ldr	r6, [sp, #8]
   157c4:	adds	r3, r3, #1
   157c8:	adc	r2, r2, #0
   157cc:	str	r3, [r4, #72]	; 0x48
   157d0:	str	r2, [r4, #76]	; 0x4c
   157d4:	ldrd	r4, [sp]
   157d8:	add	sp, sp, #12
   157dc:	pop	{pc}		; (ldr pc, [sp], #4)
   157e0:	ldr	r2, [pc, #64]	; 15828 <UnityPrint@@Base+0x5c0>
   157e4:	ldrd	r4, [sp]
   157e8:	ldr	r6, [sp, #8]
   157ec:	add	sp, sp, #12
   157f0:	ldr	r3, [r2]
   157f4:	ldr	r1, [r2, #4]
   157f8:	adds	r3, r3, #1
   157fc:	adc	r1, r1, #0
   15800:	str	r3, [r2]
   15804:	str	r1, [r2, #4]
   15808:	pop	{pc}		; (ldr pc, [sp], #4)
   1580c:	ldr	r3, [r4, #40]	; 0x28
   15810:	ldr	r2, [r4, #44]	; 0x2c
   15814:	adds	r3, r3, #1
   15818:	adc	r2, r2, #0
   1581c:	str	r3, [r4, #40]	; 0x28
   15820:	str	r2, [r4, #44]	; 0x2c
   15824:	b	15774 <UnityPrint@@Base+0x50c>
   15828:	andeq	pc, r2, r0, lsl #12
   1582c:	ldrdeq	sp, [r1], -r4
   15830:	ldrdeq	sp, [r1], -r8
   15834:	andeq	sp, r1, r4, ror #17

00015838 <UnityPrintLen@@Base>:
   15838:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1583c:	strd	r6, [sp, #8]
   15840:	subs	r7, r0, #0
   15844:	str	r8, [sp, #16]
   15848:	str	lr, [sp, #20]
   1584c:	beq	15a48 <UnityPrintLen@@Base+0x210>
   15850:	ldr	r4, [pc, #528]	; 15a68 <UnityPrintLen@@Base+0x230>
   15854:	ldrb	r3, [r7]
   15858:	ldm	r4, {r2, ip}
   1585c:	adds	r2, r2, #1
   15860:	adc	ip, ip, #0
   15864:	cmp	r3, #0
   15868:	stm	r4, {r2, ip}
   1586c:	beq	15944 <UnityPrintLen@@Base+0x10c>
   15870:	cmp	r1, #0
   15874:	movwne	r6, #60468	; 0xec34
   15878:	movne	r8, r1
   1587c:	movtne	r6, #2
   15880:	movne	r5, r7
   15884:	bne	158f4 <UnityPrintLen@@Base+0xbc>
   15888:	b	15a2c <UnityPrintLen@@Base+0x1f4>
   1588c:	cmp	r3, #13
   15890:	mov	r0, #92	; 0x5c
   15894:	beq	159d0 <UnityPrintLen@@Base+0x198>
   15898:	cmp	r3, #10
   1589c:	beq	15970 <UnityPrintLen@@Base+0x138>
   158a0:	ldr	r3, [r4, #64]	; 0x40
   158a4:	ldr	r2, [r4, #68]	; 0x44
   158a8:	adds	r3, r3, #1
   158ac:	adc	r2, r2, #0
   158b0:	str	r3, [r4, #64]	; 0x40
   158b4:	str	r2, [r4, #68]	; 0x44
   158b8:	bl	120f8 <putc@plt>
   158bc:	ldr	r3, [r4, #88]	; 0x58
   158c0:	ldr	r2, [r4, #92]	; 0x5c
   158c4:	ldrb	r0, [r5]
   158c8:	adds	r3, r3, #1
   158cc:	adc	r2, r2, #0
   158d0:	str	r3, [r4, #88]	; 0x58
   158d4:	str	r2, [r4, #92]	; 0x5c
   158d8:	bl	15114 <push_token_to_stack@@Base+0xfc>
   158dc:	ldrb	r3, [r5, #1]!
   158e0:	cmp	r3, #0
   158e4:	sub	r2, r5, r7
   158e8:	beq	15944 <UnityPrintLen@@Base+0x10c>
   158ec:	cmp	r2, r8
   158f0:	bcs	15a2c <UnityPrintLen@@Base+0x1f4>
   158f4:	sub	r2, r3, #32
   158f8:	ldr	r1, [r6]
   158fc:	cmp	r2, #94	; 0x5e
   15900:	bhi	1588c <UnityPrintLen@@Base+0x54>
   15904:	mov	r0, r3
   15908:	ldrd	r2, [r4, #16]
   1590c:	adds	r2, r2, #1
   15910:	adc	r3, r3, #0
   15914:	strd	r2, [r4, #16]
   15918:	bl	120f8 <putc@plt>
   1591c:	ldr	r3, [r4, #24]
   15920:	ldr	r2, [r4, #28]
   15924:	adds	r3, r3, #1
   15928:	str	r3, [r4, #24]
   1592c:	adc	r2, r2, #0
   15930:	ldrb	r3, [r5, #1]!
   15934:	str	r2, [r4, #28]
   15938:	cmp	r3, #0
   1593c:	sub	r2, r5, r7
   15940:	bne	158ec <UnityPrintLen@@Base+0xb4>
   15944:	ldr	r3, [r4, #96]	; 0x60
   15948:	ldr	r2, [r4, #100]	; 0x64
   1594c:	adds	r3, r3, #1
   15950:	adc	r2, r2, #0
   15954:	str	r3, [r4, #96]	; 0x60
   15958:	str	r2, [r4, #100]	; 0x64
   1595c:	ldrd	r4, [sp]
   15960:	ldrd	r6, [sp, #8]
   15964:	ldr	r8, [sp, #16]
   15968:	add	sp, sp, #20
   1596c:	pop	{pc}		; (ldr pc, [sp], #4)
   15970:	ldr	r3, [r4, #56]	; 0x38
   15974:	mov	r0, #92	; 0x5c
   15978:	ldr	r2, [r4, #60]	; 0x3c
   1597c:	adds	r3, r3, #1
   15980:	adc	r2, r2, #0
   15984:	str	r3, [r4, #56]	; 0x38
   15988:	str	r2, [r4, #60]	; 0x3c
   1598c:	bl	120f8 <putc@plt>
   15990:	ldr	r3, [r4, #72]	; 0x48
   15994:	mov	r0, #110	; 0x6e
   15998:	ldr	r2, [r4, #76]	; 0x4c
   1599c:	ldr	r1, [r6]
   159a0:	adds	r3, r3, #1
   159a4:	adc	r2, r2, #0
   159a8:	str	r3, [r4, #72]	; 0x48
   159ac:	str	r2, [r4, #76]	; 0x4c
   159b0:	bl	120f8 <putc@plt>
   159b4:	ldr	r3, [r4, #80]	; 0x50
   159b8:	ldr	r2, [r4, #84]	; 0x54
   159bc:	adds	r3, r3, #1
   159c0:	adc	r2, r2, #0
   159c4:	str	r3, [r4, #80]	; 0x50
   159c8:	str	r2, [r4, #84]	; 0x54
   159cc:	b	158dc <UnityPrintLen@@Base+0xa4>
   159d0:	ldr	r3, [r4, #32]
   159d4:	ldr	r2, [r4, #36]	; 0x24
   159d8:	adds	r3, r3, #1
   159dc:	adc	r2, r2, #0
   159e0:	str	r3, [r4, #32]
   159e4:	str	r2, [r4, #36]	; 0x24
   159e8:	bl	120f8 <putc@plt>
   159ec:	ldr	r3, [r4, #40]	; 0x28
   159f0:	mov	r0, #114	; 0x72
   159f4:	ldr	r2, [r4, #44]	; 0x2c
   159f8:	ldr	r1, [r6]
   159fc:	adds	r3, r3, #1
   15a00:	adc	r2, r2, #0
   15a04:	str	r3, [r4, #40]	; 0x28
   15a08:	str	r2, [r4, #44]	; 0x2c
   15a0c:	bl	120f8 <putc@plt>
   15a10:	ldr	r3, [r4, #48]	; 0x30
   15a14:	ldr	r2, [r4, #52]	; 0x34
   15a18:	adds	r3, r3, #1
   15a1c:	adc	r2, r2, #0
   15a20:	str	r3, [r4, #48]	; 0x30
   15a24:	str	r2, [r4, #52]	; 0x34
   15a28:	b	158dc <UnityPrintLen@@Base+0xa4>
   15a2c:	ldr	r3, [r4, #104]	; 0x68
   15a30:	ldr	r2, [r4, #108]	; 0x6c
   15a34:	adds	r3, r3, #1
   15a38:	adc	r2, r2, #0
   15a3c:	str	r3, [r4, #104]	; 0x68
   15a40:	str	r2, [r4, #108]	; 0x6c
   15a44:	b	1595c <UnityPrintLen@@Base+0x124>
   15a48:	ldr	r2, [pc, #24]	; 15a68 <UnityPrintLen@@Base+0x230>
   15a4c:	ldr	r3, [r2, #8]
   15a50:	ldr	r1, [r2, #12]
   15a54:	adds	r3, r3, #1
   15a58:	adc	r1, r1, #0
   15a5c:	str	r3, [r2, #8]
   15a60:	str	r1, [r2, #12]
   15a64:	b	1595c <UnityPrintLen@@Base+0x124>
   15a68:	andeq	pc, r2, r0, asr r6	; <UNPREDICTABLE>

00015a6c <UnityPrintNumber@@Base>:
   15a6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15a70:	subs	r5, r0, #0
   15a74:	ldr	r4, [pc, #564]	; 15cb0 <UnityPrintNumber@@Base+0x244>
   15a78:	strd	r6, [sp, #8]
   15a7c:	movw	r6, #60468	; 0xec34
   15a80:	movt	r6, #2
   15a84:	str	r8, [sp, #16]
   15a88:	str	lr, [sp, #20]
   15a8c:	blt	15c14 <UnityPrintNumber@@Base+0x1a8>
   15a90:	ldr	r3, [r4, #8]
   15a94:	ldr	r2, [r4, #12]
   15a98:	adds	r3, r3, #1
   15a9c:	adc	r2, r2, #0
   15aa0:	str	r3, [r4, #8]
   15aa4:	str	r2, [r4, #12]
   15aa8:	cmp	r5, #9
   15aac:	bls	15c58 <UnityPrintNumber@@Base+0x1ec>
   15ab0:	ldr	r3, [r4, #24]
   15ab4:	ldr	r2, [r4, #28]
   15ab8:	adds	r0, r3, #1
   15abc:	adc	r1, r2, #0
   15ac0:	cmp	r5, #99	; 0x63
   15ac4:	bls	15c60 <UnityPrintNumber@@Base+0x1f4>
   15ac8:	adds	r0, r3, #2
   15acc:	adc	r1, r2, #0
   15ad0:	cmp	r5, #1000	; 0x3e8
   15ad4:	bcc	15c68 <UnityPrintNumber@@Base+0x1fc>
   15ad8:	adds	r0, r3, #3
   15adc:	movw	ip, #9999	; 0x270f
   15ae0:	adc	r1, r2, #0
   15ae4:	cmp	r5, ip
   15ae8:	bls	15c70 <UnityPrintNumber@@Base+0x204>
   15aec:	adds	r0, r3, #4
   15af0:	movw	ip, #34463	; 0x869f
   15af4:	movt	ip, #1
   15af8:	adc	r1, r2, #0
   15afc:	cmp	r5, ip
   15b00:	bls	15c78 <UnityPrintNumber@@Base+0x20c>
   15b04:	adds	r0, r3, #5
   15b08:	movw	ip, #16959	; 0x423f
   15b0c:	movt	ip, #15
   15b10:	adc	r1, r2, #0
   15b14:	cmp	r5, ip
   15b18:	bls	15c80 <UnityPrintNumber@@Base+0x214>
   15b1c:	adds	r0, r3, #6
   15b20:	movw	ip, #38527	; 0x967f
   15b24:	movt	ip, #152	; 0x98
   15b28:	adc	r1, r2, #0
   15b2c:	cmp	r5, ip
   15b30:	bls	15c8c <UnityPrintNumber@@Base+0x220>
   15b34:	adds	r0, r3, #7
   15b38:	movw	ip, #57599	; 0xe0ff
   15b3c:	movt	ip, #1525	; 0x5f5
   15b40:	adc	r1, r2, #0
   15b44:	cmp	r5, ip
   15b48:	bls	15c98 <UnityPrintNumber@@Base+0x22c>
   15b4c:	adds	r0, r3, #8
   15b50:	movw	ip, #51711	; 0xc9ff
   15b54:	movt	ip, #15258	; 0x3b9a
   15b58:	adc	r1, r2, #0
   15b5c:	cmp	r5, ip
   15b60:	bls	15ca4 <UnityPrintNumber@@Base+0x238>
   15b64:	adds	r0, r3, #9
   15b68:	mov	r7, #51712	; 0xca00
   15b6c:	movt	r7, #15258	; 0x3b9a
   15b70:	adc	r1, r2, #0
   15b74:	strd	r0, [r4, #24]
   15b78:	ldr	r3, [r4, #32]
   15b7c:	movw	r8, #52429	; 0xcccd
   15b80:	movt	r8, #52428	; 0xcccc
   15b84:	ldr	r2, [r4, #36]	; 0x24
   15b88:	adds	r3, r3, #1
   15b8c:	adc	r2, r2, #0
   15b90:	str	r3, [r4, #32]
   15b94:	str	r2, [r4, #36]	; 0x24
   15b98:	b	15bb4 <UnityPrintNumber@@Base+0x148>
   15b9c:	ldr	r3, [r4, #48]	; 0x30
   15ba0:	ldr	r2, [r4, #52]	; 0x34
   15ba4:	adds	r3, r3, #1
   15ba8:	adc	r2, r2, #0
   15bac:	str	r3, [r4, #48]	; 0x30
   15bb0:	str	r2, [r4, #52]	; 0x34
   15bb4:	udiv	r0, r5, r7
   15bb8:	ldr	r1, [r6]
   15bbc:	umull	r2, r3, r8, r0
   15bc0:	lsr	r3, r3, #3
   15bc4:	add	r3, r3, r3, lsl #2
   15bc8:	sub	r0, r0, r3, lsl #1
   15bcc:	add	r0, r0, #48	; 0x30
   15bd0:	uxtb	r0, r0
   15bd4:	bl	120f8 <putc@plt>
   15bd8:	umull	r2, r3, r8, r7
   15bdc:	cmp	r7, #9
   15be0:	lsr	r7, r3, #3
   15be4:	bhi	15b9c <UnityPrintNumber@@Base+0x130>
   15be8:	ldr	r3, [r4, #40]	; 0x28
   15bec:	ldr	r2, [r4, #44]	; 0x2c
   15bf0:	ldrd	r6, [sp, #8]
   15bf4:	adds	r3, r3, #1
   15bf8:	ldr	r8, [sp, #16]
   15bfc:	adc	r2, r2, #0
   15c00:	str	r3, [r4, #40]	; 0x28
   15c04:	str	r2, [r4, #44]	; 0x2c
   15c08:	ldrd	r4, [sp]
   15c0c:	add	sp, sp, #20
   15c10:	pop	{pc}		; (ldr pc, [sp], #4)
   15c14:	ldr	r3, [r4]
   15c18:	mov	r0, #45	; 0x2d
   15c1c:	rsb	r5, r5, #0
   15c20:	ldr	r2, [r4, #4]
   15c24:	ldr	r1, [r6]
   15c28:	adds	r3, r3, #1
   15c2c:	adc	r2, r2, #0
   15c30:	str	r3, [r4]
   15c34:	str	r2, [r4, #4]
   15c38:	bl	120f8 <putc@plt>
   15c3c:	ldr	r3, [r4, #16]
   15c40:	ldr	r2, [r4, #20]
   15c44:	adds	r3, r3, #1
   15c48:	adc	r2, r2, #0
   15c4c:	str	r3, [r4, #16]
   15c50:	str	r2, [r4, #20]
   15c54:	b	15aa8 <UnityPrintNumber@@Base+0x3c>
   15c58:	mov	r7, #1
   15c5c:	b	15b78 <UnityPrintNumber@@Base+0x10c>
   15c60:	mov	r7, #10
   15c64:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15c68:	mov	r7, #100	; 0x64
   15c6c:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15c70:	mov	r7, #1000	; 0x3e8
   15c74:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15c78:	movw	r7, #10000	; 0x2710
   15c7c:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15c80:	movw	r7, #34464	; 0x86a0
   15c84:	movt	r7, #1
   15c88:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15c8c:	movw	r7, #16960	; 0x4240
   15c90:	movt	r7, #15
   15c94:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15c98:	movw	r7, #38528	; 0x9680
   15c9c:	movt	r7, #152	; 0x98
   15ca0:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15ca4:	mov	r7, #57600	; 0xe100
   15ca8:	movt	r7, #1525	; 0x5f5
   15cac:	b	15b74 <UnityPrintNumber@@Base+0x108>
   15cb0:	andeq	pc, r2, r0, asr #13
   15cb4:	strd	r4, [sp, #-16]!
   15cb8:	movw	r5, #60468	; 0xec34
   15cbc:	movt	r5, #2
   15cc0:	ldr	r4, [pc, #256]	; 15dc8 <UnityPrintNumber@@Base+0x35c>
   15cc4:	str	r6, [sp, #8]
   15cc8:	mov	r6, r1
   15ccc:	str	lr, [sp, #12]
   15cd0:	ldr	r3, [r4, #-8]
   15cd4:	ldr	r2, [r4, #-4]
   15cd8:	adds	r3, r3, #1
   15cdc:	adc	r2, r2, #0
   15ce0:	str	r3, [r4, #-8]
   15ce4:	str	r2, [r4, #-4]
   15ce8:	bl	15268 <UnityPrint@@Base>
   15cec:	ldr	r3, [r4]
   15cf0:	mov	r0, #58	; 0x3a
   15cf4:	ldr	r2, [r4, #4]
   15cf8:	ldr	r1, [r5]
   15cfc:	adds	r3, r3, #1
   15d00:	adc	r2, r2, #0
   15d04:	str	r3, [r4]
   15d08:	str	r2, [r4, #4]
   15d0c:	bl	120f8 <putc@plt>
   15d10:	ldr	r3, [r4, #8]
   15d14:	mov	r0, r6
   15d18:	ldr	r2, [r4, #12]
   15d1c:	adds	r3, r3, #1
   15d20:	adc	r2, r2, #0
   15d24:	str	r3, [r4, #8]
   15d28:	str	r2, [r4, #12]
   15d2c:	bl	15a6c <UnityPrintNumber@@Base>
   15d30:	ldr	r3, [r4, #16]
   15d34:	mov	r0, #58	; 0x3a
   15d38:	ldr	r2, [r4, #20]
   15d3c:	ldr	r1, [r5]
   15d40:	adds	r3, r3, #1
   15d44:	adc	r2, r2, #0
   15d48:	str	r3, [r4, #16]
   15d4c:	str	r2, [r4, #20]
   15d50:	bl	120f8 <putc@plt>
   15d54:	ldr	r3, [r4, #24]
   15d58:	movw	r1, #1112	; 0x458
   15d5c:	movt	r1, #3
   15d60:	ldr	r2, [r4, #28]
   15d64:	ldr	r0, [r1, #4]
   15d68:	adds	r3, r3, #1
   15d6c:	adc	r2, r2, #0
   15d70:	str	r3, [r4, #24]
   15d74:	str	r2, [r4, #28]
   15d78:	bl	15268 <UnityPrint@@Base>
   15d7c:	ldr	r3, [r4, #32]
   15d80:	mov	r0, #58	; 0x3a
   15d84:	ldr	r2, [r4, #36]	; 0x24
   15d88:	ldr	r1, [r5]
   15d8c:	adds	r3, r3, #1
   15d90:	adc	r2, r2, #0
   15d94:	str	r3, [r4, #32]
   15d98:	str	r2, [r4, #36]	; 0x24
   15d9c:	bl	120f8 <putc@plt>
   15da0:	ldr	r3, [r4, #40]	; 0x28
   15da4:	ldr	r2, [r4, #44]	; 0x2c
   15da8:	ldr	r6, [sp, #8]
   15dac:	adds	r3, r3, #1
   15db0:	adc	r2, r2, #0
   15db4:	str	r3, [r4, #40]	; 0x28
   15db8:	str	r2, [r4, #44]	; 0x2c
   15dbc:	ldrd	r4, [sp]
   15dc0:	add	sp, sp, #12
   15dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   15dc8:	andeq	pc, r2, r0, lsl #14
   15dcc:	str	r4, [sp, #-8]!
   15dd0:	movw	r3, #1112	; 0x458
   15dd4:	movt	r3, #3
   15dd8:	ldr	r4, [pc, #148]	; 15e74 <UnityPrintNumber@@Base+0x408>
   15ddc:	mov	r1, r0
   15de0:	ldr	r0, [r3]
   15de4:	str	lr, [sp, #4]
   15de8:	ldr	r3, [r4]
   15dec:	ldr	r2, [r4, #4]
   15df0:	adds	r3, r3, #1
   15df4:	adc	r2, r2, #0
   15df8:	str	r3, [r4]
   15dfc:	str	r2, [r4, #4]
   15e00:	bl	15cb4 <UnityPrintNumber@@Base+0x248>
   15e04:	ldr	r3, [r4, #8]
   15e08:	ldr	r2, [r4, #12]
   15e0c:	ldr	r0, [pc, #100]	; 15e78 <UnityPrintNumber@@Base+0x40c>
   15e10:	adds	r3, r3, #1
   15e14:	adc	r2, r2, #0
   15e18:	str	r3, [r4, #8]
   15e1c:	str	r2, [r4, #12]
   15e20:	bl	15268 <UnityPrint@@Base>
   15e24:	ldr	r3, [r4, #16]
   15e28:	movw	r1, #60468	; 0xec34
   15e2c:	movt	r1, #2
   15e30:	mov	r0, #58	; 0x3a
   15e34:	ldr	r2, [r4, #20]
   15e38:	ldr	r1, [r1]
   15e3c:	adds	r3, r3, #1
   15e40:	adc	r2, r2, #0
   15e44:	str	r3, [r4, #16]
   15e48:	str	r2, [r4, #20]
   15e4c:	bl	120f8 <putc@plt>
   15e50:	ldr	r3, [r4, #24]
   15e54:	ldr	r2, [r4, #28]
   15e58:	adds	r3, r3, #1
   15e5c:	adc	r2, r2, #0
   15e60:	str	r3, [r4, #24]
   15e64:	str	r2, [r4, #28]
   15e68:	ldr	r4, [sp]
   15e6c:	add	sp, sp, #4
   15e70:	pop	{pc}		; (ldr pc, [sp], #4)
   15e74:	andeq	pc, r2, r0, lsr r7	; <UNPREDICTABLE>
   15e78:	strdeq	sp, [r1], -r0
   15e7c:	orrs	ip, r0, r1
   15e80:	beq	15ed0 <UnityPrintNumber@@Base+0x464>
   15e84:	cmp	r0, #0
   15e88:	str	r4, [sp, #-8]!
   15e8c:	str	lr, [sp, #4]
   15e90:	sub	sp, sp, #8
   15e94:	beq	15f8c <UnityPrintNumber@@Base+0x520>
   15e98:	ldr	r4, [pc, #392]	; 16028 <UnityPrintNumber@@Base+0x5bc>
   15e9c:	ldr	ip, [r4, #16]
   15ea0:	ldr	lr, [r4, #20]
   15ea4:	adds	ip, ip, #1
   15ea8:	adc	lr, lr, #0
   15eac:	cmp	r1, #0
   15eb0:	str	ip, [r4, #16]
   15eb4:	str	lr, [r4, #20]
   15eb8:	beq	15ef4 <UnityPrintNumber@@Base+0x488>
   15ebc:	mov	r0, #0
   15ec0:	add	sp, sp, #8
   15ec4:	ldr	r4, [sp]
   15ec8:	add	sp, sp, #4
   15ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ed0:	ldr	r2, [pc, #336]	; 16028 <UnityPrintNumber@@Base+0x5bc>
   15ed4:	mov	r0, #1
   15ed8:	ldr	r3, [r2]
   15edc:	ldr	r1, [r2, #4]
   15ee0:	adds	r3, r3, r0
   15ee4:	adc	r1, r1, #0
   15ee8:	str	r3, [r2]
   15eec:	str	r1, [r2, #4]
   15ef0:	bx	lr
   15ef4:	ldr	r1, [r4, #48]	; 0x30
   15ef8:	mov	r0, r2
   15efc:	str	r3, [sp, #4]
   15f00:	ldr	r2, [r4, #52]	; 0x34
   15f04:	adds	r1, r1, #1
   15f08:	adc	r2, r2, #0
   15f0c:	str	r1, [r4, #48]	; 0x30
   15f10:	str	r2, [r4, #52]	; 0x34
   15f14:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   15f18:	ldr	r2, [r4, #56]	; 0x38
   15f1c:	ldr	r1, [r4, #60]	; 0x3c
   15f20:	ldr	r0, [pc, #260]	; 1602c <UnityPrintNumber@@Base+0x5c0>
   15f24:	adds	r2, r2, #1
   15f28:	adc	r1, r1, #0
   15f2c:	str	r2, [r4, #56]	; 0x38
   15f30:	str	r1, [r4, #60]	; 0x3c
   15f34:	bl	15268 <UnityPrint@@Base>
   15f38:	ldr	r3, [sp, #4]
   15f3c:	ldr	r2, [r4, #64]	; 0x40
   15f40:	mov	r0, r3
   15f44:	ldr	r3, [r4, #68]	; 0x44
   15f48:	adds	r2, r2, #1
   15f4c:	adc	r3, r3, #0
   15f50:	strd	r2, [r4, #64]	; 0x40
   15f54:	bl	15684 <UnityPrint@@Base+0x41c>
   15f58:	ldr	r3, [r4, #72]	; 0x48
   15f5c:	mov	lr, #1
   15f60:	movw	r2, #1112	; 0x458
   15f64:	movt	r2, #3
   15f68:	mov	r1, lr
   15f6c:	ldr	ip, [r4, #76]	; 0x4c
   15f70:	add	r0, r2, #40	; 0x28
   15f74:	str	lr, [r2, #32]
   15f78:	adds	r3, r3, lr
   15f7c:	adc	r2, ip, #0
   15f80:	str	r3, [r4, #72]	; 0x48
   15f84:	str	r2, [r4, #76]	; 0x4c
   15f88:	bl	11fcc <longjmp@plt>
   15f8c:	ldr	r4, [pc, #148]	; 16028 <UnityPrintNumber@@Base+0x5bc>
   15f90:	mov	r0, r2
   15f94:	str	r3, [sp, #4]
   15f98:	ldr	r2, [r4, #8]
   15f9c:	ldr	r1, [r4, #12]
   15fa0:	adds	r2, r2, #1
   15fa4:	adc	r1, r1, #0
   15fa8:	str	r2, [r4, #8]
   15fac:	str	r1, [r4, #12]
   15fb0:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   15fb4:	ldr	r2, [r4, #24]
   15fb8:	ldr	r1, [r4, #28]
   15fbc:	ldr	r0, [pc, #108]	; 16030 <UnityPrintNumber@@Base+0x5c4>
   15fc0:	adds	r2, r2, #1
   15fc4:	adc	r1, r1, #0
   15fc8:	str	r2, [r4, #24]
   15fcc:	str	r1, [r4, #28]
   15fd0:	bl	15268 <UnityPrint@@Base>
   15fd4:	ldr	r3, [sp, #4]
   15fd8:	ldr	r2, [r4, #32]
   15fdc:	mov	r0, r3
   15fe0:	ldr	r3, [r4, #36]	; 0x24
   15fe4:	adds	r2, r2, #1
   15fe8:	adc	r3, r3, #0
   15fec:	strd	r2, [r4, #32]
   15ff0:	bl	15684 <UnityPrint@@Base+0x41c>
   15ff4:	ldr	r3, [r4, #40]	; 0x28
   15ff8:	mov	lr, #1
   15ffc:	movw	r2, #1112	; 0x458
   16000:	movt	r2, #3
   16004:	mov	r1, lr
   16008:	ldr	ip, [r4, #44]	; 0x2c
   1600c:	add	r0, r2, #40	; 0x28
   16010:	str	lr, [r2, #32]
   16014:	adds	r3, r3, lr
   16018:	adc	r2, ip, #0
   1601c:	str	r3, [r4, #40]	; 0x28
   16020:	str	r2, [r4, #44]	; 0x2c
   16024:	bl	11fcc <longjmp@plt>
   16028:	andeq	pc, r2, r0, asr r7	; <UNPREDICTABLE>
   1602c:	andeq	sp, r1, r8, lsl r9
   16030:	strdeq	sp, [r1], -r8

00016034 <UnityPrintNumberUnsigned@@Base>:
   16034:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16038:	mov	r5, r0
   1603c:	ldr	r4, [pc, #492]	; 16230 <UnityPrintNumberUnsigned@@Base+0x1fc>
   16040:	strd	r6, [sp, #8]
   16044:	str	r8, [sp, #16]
   16048:	str	lr, [sp, #20]
   1604c:	ldr	r3, [r4]
   16050:	ldr	r2, [r4, #4]
   16054:	adds	r3, r3, #1
   16058:	adc	r2, r2, #0
   1605c:	cmp	r0, #9
   16060:	str	r3, [r4]
   16064:	str	r2, [r4, #4]
   16068:	bls	161d8 <UnityPrintNumberUnsigned@@Base+0x1a4>
   1606c:	ldr	r3, [r4, #8]
   16070:	ldr	r2, [r4, #12]
   16074:	adds	r0, r3, #1
   16078:	adc	r1, r2, #0
   1607c:	cmp	r5, #99	; 0x63
   16080:	bls	161e0 <UnityPrintNumberUnsigned@@Base+0x1ac>
   16084:	adds	r0, r3, #2
   16088:	adc	r1, r2, #0
   1608c:	cmp	r5, #1000	; 0x3e8
   16090:	bcc	161e8 <UnityPrintNumberUnsigned@@Base+0x1b4>
   16094:	adds	r0, r3, #3
   16098:	movw	ip, #9999	; 0x270f
   1609c:	adc	r1, r2, #0
   160a0:	cmp	r5, ip
   160a4:	bls	161f0 <UnityPrintNumberUnsigned@@Base+0x1bc>
   160a8:	adds	r0, r3, #4
   160ac:	movw	ip, #34463	; 0x869f
   160b0:	movt	ip, #1
   160b4:	adc	r1, r2, #0
   160b8:	cmp	r5, ip
   160bc:	bls	161f8 <UnityPrintNumberUnsigned@@Base+0x1c4>
   160c0:	adds	r0, r3, #5
   160c4:	movw	ip, #16959	; 0x423f
   160c8:	movt	ip, #15
   160cc:	adc	r1, r2, #0
   160d0:	cmp	r5, ip
   160d4:	bls	16200 <UnityPrintNumberUnsigned@@Base+0x1cc>
   160d8:	adds	r0, r3, #6
   160dc:	movw	ip, #38527	; 0x967f
   160e0:	movt	ip, #152	; 0x98
   160e4:	adc	r1, r2, #0
   160e8:	cmp	r5, ip
   160ec:	bls	1620c <UnityPrintNumberUnsigned@@Base+0x1d8>
   160f0:	adds	r0, r3, #7
   160f4:	movw	ip, #57599	; 0xe0ff
   160f8:	movt	ip, #1525	; 0x5f5
   160fc:	adc	r1, r2, #0
   16100:	cmp	r5, ip
   16104:	bls	16218 <UnityPrintNumberUnsigned@@Base+0x1e4>
   16108:	adds	r0, r3, #8
   1610c:	movw	ip, #51711	; 0xc9ff
   16110:	movt	ip, #15258	; 0x3b9a
   16114:	adc	r1, r2, #0
   16118:	cmp	r5, ip
   1611c:	bls	16224 <UnityPrintNumberUnsigned@@Base+0x1f0>
   16120:	adds	r0, r3, #9
   16124:	mov	r7, #51712	; 0xca00
   16128:	movt	r7, #15258	; 0x3b9a
   1612c:	adc	r1, r2, #0
   16130:	strd	r0, [r4, #8]
   16134:	ldr	r3, [r4, #16]
   16138:	movw	r6, #60468	; 0xec34
   1613c:	movt	r6, #2
   16140:	movw	r8, #52429	; 0xcccd
   16144:	movt	r8, #52428	; 0xcccc
   16148:	ldr	r2, [r4, #20]
   1614c:	adds	r3, r3, #1
   16150:	adc	r2, r2, #0
   16154:	str	r3, [r4, #16]
   16158:	str	r2, [r4, #20]
   1615c:	b	16178 <UnityPrintNumberUnsigned@@Base+0x144>
   16160:	ldr	r3, [r4, #32]
   16164:	ldr	r2, [r4, #36]	; 0x24
   16168:	adds	r3, r3, #1
   1616c:	adc	r2, r2, #0
   16170:	str	r3, [r4, #32]
   16174:	str	r2, [r4, #36]	; 0x24
   16178:	udiv	r0, r5, r7
   1617c:	ldr	r1, [r6]
   16180:	umull	r2, r3, r8, r0
   16184:	lsr	r3, r3, #3
   16188:	add	r3, r3, r3, lsl #2
   1618c:	sub	r0, r0, r3, lsl #1
   16190:	add	r0, r0, #48	; 0x30
   16194:	uxtb	r0, r0
   16198:	bl	120f8 <putc@plt>
   1619c:	umull	r2, r3, r8, r7
   161a0:	cmp	r7, #9
   161a4:	lsr	r7, r3, #3
   161a8:	bhi	16160 <UnityPrintNumberUnsigned@@Base+0x12c>
   161ac:	ldr	r3, [r4, #24]
   161b0:	ldr	r2, [r4, #28]
   161b4:	ldrd	r6, [sp, #8]
   161b8:	adds	r3, r3, #1
   161bc:	ldr	r8, [sp, #16]
   161c0:	adc	r2, r2, #0
   161c4:	str	r3, [r4, #24]
   161c8:	str	r2, [r4, #28]
   161cc:	ldrd	r4, [sp]
   161d0:	add	sp, sp, #20
   161d4:	pop	{pc}		; (ldr pc, [sp], #4)
   161d8:	mov	r7, #1
   161dc:	b	16134 <UnityPrintNumberUnsigned@@Base+0x100>
   161e0:	mov	r7, #10
   161e4:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   161e8:	mov	r7, #100	; 0x64
   161ec:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   161f0:	mov	r7, #1000	; 0x3e8
   161f4:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   161f8:	movw	r7, #10000	; 0x2710
   161fc:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   16200:	movw	r7, #34464	; 0x86a0
   16204:	movt	r7, #1
   16208:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   1620c:	movw	r7, #16960	; 0x4240
   16210:	movt	r7, #15
   16214:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   16218:	movw	r7, #38528	; 0x9680
   1621c:	movt	r7, #152	; 0x98
   16220:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   16224:	mov	r7, #57600	; 0xe100
   16228:	movt	r7, #1525	; 0x5f5
   1622c:	b	16130 <UnityPrintNumberUnsigned@@Base+0xfc>
   16230:	andeq	pc, r2, r0, lsr #15

00016234 <UnityPrintNumberHex@@Base>:
   16234:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16238:	movw	r4, #62704	; 0xf4f0
   1623c:	movt	r4, #2
   16240:	ldr	r3, [r4]
   16244:	mov	r5, r1
   16248:	strd	r6, [sp, #8]
   1624c:	movw	r6, #60468	; 0xec34
   16250:	movt	r6, #2
   16254:	ldr	r2, [r4, #4]
   16258:	mov	r7, r0
   1625c:	mov	r0, #48	; 0x30
   16260:	str	r8, [sp, #16]
   16264:	ldr	r1, [r6]
   16268:	adds	r3, r3, #1
   1626c:	str	lr, [sp, #20]
   16270:	adc	r2, r2, #0
   16274:	str	r3, [r4]
   16278:	str	r2, [r4, #4]
   1627c:	bl	120f8 <putc@plt>
   16280:	ldr	r3, [r4, #8]
   16284:	mov	r0, #120	; 0x78
   16288:	ldr	r2, [r4, #12]
   1628c:	ldr	r1, [r6]
   16290:	adds	r3, r3, #1
   16294:	adc	r2, r2, #0
   16298:	str	r3, [r4, #8]
   1629c:	str	r2, [r4, #12]
   162a0:	bl	120f8 <putc@plt>
   162a4:	ldr	r3, [r4, #16]
   162a8:	ldr	r2, [r4, #20]
   162ac:	adds	r3, r3, #1
   162b0:	adc	r2, r2, #0
   162b4:	cmp	r5, #0
   162b8:	str	r3, [r4, #16]
   162bc:	subne	r5, r5, #1
   162c0:	uxtbne	r5, r5
   162c4:	str	r2, [r4, #20]
   162c8:	lslne	r5, r5, #2
   162cc:	bne	16314 <UnityPrintNumberHex@@Base+0xe0>
   162d0:	b	16354 <UnityPrintNumberHex@@Base+0x120>
   162d4:	ldr	r3, [r4, #24]
   162d8:	sub	r5, r5, #4
   162dc:	ldr	r2, [r4, #28]
   162e0:	adds	r3, r3, #1
   162e4:	adc	r2, r2, #0
   162e8:	str	r3, [r4, #24]
   162ec:	str	r2, [r4, #28]
   162f0:	bl	120f8 <putc@plt>
   162f4:	ldr	r3, [r4, #40]	; 0x28
   162f8:	ldr	r2, [r4, #44]	; 0x2c
   162fc:	adds	r3, r3, #1
   16300:	adc	r2, r2, #0
   16304:	cmn	r5, #4
   16308:	str	r3, [r4, #40]	; 0x28
   1630c:	str	r2, [r4, #44]	; 0x2c
   16310:	beq	16354 <UnityPrintNumberHex@@Base+0x120>
   16314:	lsr	r0, r7, r5
   16318:	ldr	r1, [r6]
   1631c:	and	r0, r0, #15
   16320:	cmp	r0, #9
   16324:	uxtb	r3, r0
   16328:	add	r0, r3, #48	; 0x30
   1632c:	bls	162d4 <UnityPrintNumberHex@@Base+0xa0>
   16330:	add	r0, r3, #55	; 0x37
   16334:	ldrd	r2, [r4, #32]
   16338:	sub	r5, r5, #4
   1633c:	adds	r2, r2, #1
   16340:	adc	r3, r3, #0
   16344:	strd	r2, [r4, #32]
   16348:	bl	120f8 <putc@plt>
   1634c:	cmn	r5, #4
   16350:	bne	16314 <UnityPrintNumberHex@@Base+0xe0>
   16354:	ldr	r3, [r4, #48]	; 0x30
   16358:	ldr	r2, [r4, #52]	; 0x34
   1635c:	ldrd	r6, [sp, #8]
   16360:	adds	r3, r3, #1
   16364:	ldr	r8, [sp, #16]
   16368:	adc	r2, r2, #0
   1636c:	str	r3, [r4, #48]	; 0x30
   16370:	str	r2, [r4, #52]	; 0x34
   16374:	ldrd	r4, [sp]
   16378:	add	sp, sp, #20
   1637c:	pop	{pc}		; (ldr pc, [sp], #4)

00016380 <UnityPrintNumberByStyle@@Base>:
   16380:	tst	r1, #16
   16384:	str	r4, [sp, #-8]!
   16388:	str	lr, [sp, #4]
   1638c:	bne	16444 <UnityPrintNumberByStyle@@Base+0xc4>
   16390:	tst	r1, #32
   16394:	bne	163e4 <UnityPrintNumberByStyle@@Base+0x64>
   16398:	ldr	r4, [pc, #232]	; 16488 <UnityPrintNumberByStyle@@Base+0x108>
   1639c:	lsl	r1, r1, #1
   163a0:	and	r1, r1, #30
   163a4:	ldr	r3, [r4, #16]
   163a8:	ldr	r2, [r4, #20]
   163ac:	adds	r3, r3, #1
   163b0:	adc	r2, r2, #0
   163b4:	str	r3, [r4, #16]
   163b8:	str	r2, [r4, #20]
   163bc:	bl	16234 <UnityPrintNumberHex@@Base>
   163c0:	ldr	r3, [r4, #32]
   163c4:	ldr	r2, [r4, #36]	; 0x24
   163c8:	adds	r3, r3, #1
   163cc:	adc	r2, r2, #0
   163d0:	str	r3, [r4, #32]
   163d4:	str	r2, [r4, #36]	; 0x24
   163d8:	ldr	r4, [sp]
   163dc:	add	sp, sp, #4
   163e0:	pop	{pc}		; (ldr pc, [sp], #4)
   163e4:	ldr	r4, [pc, #156]	; 16488 <UnityPrintNumberByStyle@@Base+0x108>
   163e8:	and	r1, r1, #15
   163ec:	movw	r3, #55480	; 0xd8b8
   163f0:	movt	r3, #1
   163f4:	mov	ip, r0
   163f8:	add	r1, r3, r1, lsl #2
   163fc:	ldr	r0, [r1, #120]	; 0x78
   16400:	ldr	r3, [r4, #8]
   16404:	ldr	r2, [r4, #12]
   16408:	and	r0, r0, ip
   1640c:	adds	r3, r3, #1
   16410:	adc	r2, r2, #0
   16414:	str	r3, [r4, #8]
   16418:	str	r2, [r4, #12]
   1641c:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   16420:	ldr	r3, [r4, #24]
   16424:	ldr	r2, [r4, #28]
   16428:	adds	r3, r3, #1
   1642c:	adc	r2, r2, #0
   16430:	str	r3, [r4, #24]
   16434:	str	r2, [r4, #28]
   16438:	ldr	r4, [sp]
   1643c:	add	sp, sp, #4
   16440:	pop	{pc}		; (ldr pc, [sp], #4)
   16444:	ldr	r4, [pc, #60]	; 16488 <UnityPrintNumberByStyle@@Base+0x108>
   16448:	ldr	r3, [r4, #-8]
   1644c:	ldr	r2, [r4, #-4]
   16450:	adds	r3, r3, #1
   16454:	adc	r2, r2, #0
   16458:	str	r3, [r4, #-8]
   1645c:	str	r2, [r4, #-4]
   16460:	bl	15a6c <UnityPrintNumber@@Base>
   16464:	ldr	r3, [r4]
   16468:	ldr	r2, [r4, #4]
   1646c:	adds	r3, r3, #1
   16470:	adc	r2, r2, #0
   16474:	str	r3, [r4]
   16478:	str	r2, [r4, #4]
   1647c:	ldr	r4, [sp]
   16480:	add	sp, sp, #4
   16484:	pop	{pc}		; (ldr pc, [sp], #4)
   16488:	ldrdeq	pc, [r2], -r0

0001648c <UnityPrintMask@@Base>:
   1648c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16490:	mov	r5, #-2147483648	; 0x80000000
   16494:	ldr	r4, [pc, #300]	; 165c8 <UnityPrintMask@@Base+0x13c>
   16498:	strd	r6, [sp, #8]
   1649c:	movw	r7, #60468	; 0xec34
   164a0:	movt	r7, #2
   164a4:	mov	r6, #32
   164a8:	strd	r8, [sp, #16]
   164ac:	mov	r8, r0
   164b0:	mov	r9, r1
   164b4:	str	sl, [sp, #24]
   164b8:	str	lr, [sp, #28]
   164bc:	ldr	r3, [r4, #-8]
   164c0:	ldr	r2, [r4, #-4]
   164c4:	adds	r3, r3, #1
   164c8:	adc	r2, r2, #0
   164cc:	str	r3, [r4, #-8]
   164d0:	str	r2, [r4, #-4]
   164d4:	b	16518 <UnityPrintMask@@Base+0x8c>
   164d8:	ldr	r3, [r4, #8]
   164dc:	ldr	r2, [r4, #12]
   164e0:	adds	r3, r3, #1
   164e4:	adc	r2, r2, #0
   164e8:	str	r3, [r4, #8]
   164ec:	str	r2, [r4, #12]
   164f0:	bl	120f8 <putc@plt>
   164f4:	ldr	r3, [r4, #24]
   164f8:	ldr	r2, [r4, #28]
   164fc:	adds	r3, r3, #1
   16500:	adc	r2, r2, #0
   16504:	str	r3, [r4, #24]
   16508:	str	r2, [r4, #28]
   1650c:	subs	r6, r6, #1
   16510:	lsr	r5, r5, #1
   16514:	beq	1655c <UnityPrintMask@@Base+0xd0>
   16518:	tst	r8, r5
   1651c:	ldr	r1, [r7]
   16520:	beq	1658c <UnityPrintMask@@Base+0x100>
   16524:	tst	r9, r5
   16528:	mov	r0, #49	; 0x31
   1652c:	bne	164d8 <UnityPrintMask@@Base+0x4c>
   16530:	ldr	r3, [r4, #16]
   16534:	mov	r0, #48	; 0x30
   16538:	lsr	r5, r5, #1
   1653c:	ldr	r2, [r4, #20]
   16540:	adds	r3, r3, #1
   16544:	adc	r2, r2, #0
   16548:	str	r3, [r4, #16]
   1654c:	str	r2, [r4, #20]
   16550:	bl	120f8 <putc@plt>
   16554:	subs	r6, r6, #1
   16558:	bne	16518 <UnityPrintMask@@Base+0x8c>
   1655c:	ldr	r3, [r4, #40]	; 0x28
   16560:	ldr	r2, [r4, #44]	; 0x2c
   16564:	ldrd	r6, [sp, #8]
   16568:	adds	r3, r3, #1
   1656c:	ldrd	r8, [sp, #16]
   16570:	adc	r2, r2, #0
   16574:	str	r3, [r4, #40]	; 0x28
   16578:	ldr	sl, [sp, #24]
   1657c:	str	r2, [r4, #44]	; 0x2c
   16580:	ldrd	r4, [sp]
   16584:	add	sp, sp, #28
   16588:	pop	{pc}		; (ldr pc, [sp], #4)
   1658c:	ldr	r3, [r4]
   16590:	mov	r0, #88	; 0x58
   16594:	ldr	r2, [r4, #4]
   16598:	adds	r3, r3, #1
   1659c:	adc	r2, r2, #0
   165a0:	str	r3, [r4]
   165a4:	str	r2, [r4, #4]
   165a8:	bl	120f8 <putc@plt>
   165ac:	ldr	r3, [r4, #32]
   165b0:	ldr	r2, [r4, #36]	; 0x24
   165b4:	adds	r3, r3, #1
   165b8:	adc	r2, r2, #0
   165bc:	str	r3, [r4, #32]
   165c0:	str	r2, [r4, #36]	; 0x24
   165c4:	b	1650c <UnityPrintMask@@Base+0x80>
   165c8:	andeq	pc, r2, r0, lsl #16

000165cc <UnityPrintFail@@Base>:
   165cc:	str	r4, [sp, #-8]!
   165d0:	ldr	r4, [pc, #68]	; 1661c <UnityPrintFail@@Base+0x50>
   165d4:	str	lr, [sp, #4]
   165d8:	ldr	r0, [pc, #64]	; 16620 <UnityPrintFail@@Base+0x54>
   165dc:	ldr	r3, [r4]
   165e0:	ldr	r2, [r4, #4]
   165e4:	adds	r3, r3, #1
   165e8:	adc	r2, r2, #0
   165ec:	str	r3, [r4]
   165f0:	str	r2, [r4, #4]
   165f4:	bl	15268 <UnityPrint@@Base>
   165f8:	ldr	r3, [r4, #8]
   165fc:	ldr	r2, [r4, #12]
   16600:	adds	r3, r3, #1
   16604:	adc	r2, r2, #0
   16608:	str	r3, [r4, #8]
   1660c:	str	r2, [r4, #12]
   16610:	ldr	r4, [sp]
   16614:	add	sp, sp, #4
   16618:	pop	{pc}		; (ldr pc, [sp], #4)
   1661c:	andeq	pc, r2, r0, lsr r8	; <UNPREDICTABLE>
   16620:	strdeq	sp, [r1], -r0

00016624 <UnityPrintOk@@Base>:
   16624:	str	r4, [sp, #-8]!
   16628:	ldr	r4, [pc, #68]	; 16674 <UnityPrintOk@@Base+0x50>
   1662c:	str	lr, [sp, #4]
   16630:	ldr	r0, [pc, #64]	; 16678 <UnityPrintOk@@Base+0x54>
   16634:	ldr	r3, [r4]
   16638:	ldr	r2, [r4, #4]
   1663c:	adds	r3, r3, #1
   16640:	adc	r2, r2, #0
   16644:	str	r3, [r4]
   16648:	str	r2, [r4, #4]
   1664c:	bl	15268 <UnityPrint@@Base>
   16650:	ldr	r3, [r4, #8]
   16654:	ldr	r2, [r4, #12]
   16658:	adds	r3, r3, #1
   1665c:	adc	r2, r2, #0
   16660:	str	r3, [r4, #8]
   16664:	str	r2, [r4, #12]
   16668:	ldr	r4, [sp]
   1666c:	add	sp, sp, #4
   16670:	pop	{pc}		; (ldr pc, [sp], #4)
   16674:	andeq	pc, r2, r0, asr #16
   16678:	andeq	sp, r1, r0, asr r9

0001667c <UnityConcludeTest@@Base>:
   1667c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16680:	movw	r5, #1112	; 0x458
   16684:	movt	r5, #3
   16688:	ldr	r3, [r5, #36]	; 0x24
   1668c:	strd	r6, [sp, #8]
   16690:	str	r8, [sp, #16]
   16694:	str	lr, [sp, #20]
   16698:	cmp	r3, #0
   1669c:	beq	16714 <UnityConcludeTest@@Base+0x98>
   166a0:	ldr	r4, [pc, #260]	; 167ac <UnityConcludeTest@@Base+0x130>
   166a4:	ldr	r1, [r5, #28]
   166a8:	ldr	r3, [r4]
   166ac:	ldr	r2, [r4, #4]
   166b0:	add	r1, r1, #1
   166b4:	str	r1, [r5, #28]
   166b8:	adds	r3, r3, #1
   166bc:	adc	r2, r2, #0
   166c0:	str	r3, [r4]
   166c4:	str	r2, [r4, #4]
   166c8:	mov	r6, #0
   166cc:	mov	r7, #0
   166d0:	movw	r3, #60468	; 0xec34
   166d4:	movt	r3, #2
   166d8:	mov	r0, #10
   166dc:	ldr	r1, [r3]
   166e0:	strd	r6, [r5, #32]
   166e4:	bl	120f8 <putc@plt>
   166e8:	ldr	r3, [r4, #40]	; 0x28
   166ec:	ldr	r2, [r4, #44]	; 0x2c
   166f0:	ldrd	r6, [sp, #8]
   166f4:	adds	r3, r3, #1
   166f8:	ldr	r8, [sp, #16]
   166fc:	adc	r2, r2, #0
   16700:	str	r3, [r4, #40]	; 0x28
   16704:	str	r2, [r4, #44]	; 0x2c
   16708:	ldrd	r4, [sp]
   1670c:	add	sp, sp, #20
   16710:	pop	{pc}		; (ldr pc, [sp], #4)
   16714:	ldr	r3, [r5, #32]
   16718:	ldr	r4, [pc, #140]	; 167ac <UnityConcludeTest@@Base+0x130>
   1671c:	cmp	r3, #0
   16720:	beq	1674c <UnityConcludeTest@@Base+0xd0>
   16724:	ldr	r3, [r4, #16]
   16728:	ldr	r2, [r4, #20]
   1672c:	ldr	r1, [r5, #24]
   16730:	adds	r3, r3, #1
   16734:	adc	r2, r2, #0
   16738:	str	r3, [r4, #16]
   1673c:	add	r1, r1, #1
   16740:	str	r2, [r4, #20]
   16744:	str	r1, [r5, #24]
   16748:	b	166c8 <UnityConcludeTest@@Base+0x4c>
   1674c:	ldr	r3, [r4, #8]
   16750:	ldr	r2, [r4, #12]
   16754:	ldr	r0, [r5]
   16758:	adds	r3, r3, #1
   1675c:	ldr	r1, [r5, #16]
   16760:	adc	r2, r2, #0
   16764:	str	r3, [r4, #8]
   16768:	str	r2, [r4, #12]
   1676c:	bl	15cb4 <UnityPrintNumber@@Base+0x248>
   16770:	ldr	r3, [r4, #24]
   16774:	ldr	r2, [r4, #28]
   16778:	ldr	r0, [pc, #48]	; 167b0 <UnityConcludeTest@@Base+0x134>
   1677c:	adds	r3, r3, #1
   16780:	adc	r2, r2, #0
   16784:	str	r3, [r4, #24]
   16788:	str	r2, [r4, #28]
   1678c:	bl	15268 <UnityPrint@@Base>
   16790:	ldr	r3, [r4, #32]
   16794:	ldr	r2, [r4, #36]	; 0x24
   16798:	adds	r3, r3, #1
   1679c:	adc	r2, r2, #0
   167a0:	str	r3, [r4, #32]
   167a4:	str	r2, [r4, #36]	; 0x24
   167a8:	b	166c8 <UnityConcludeTest@@Base+0x4c>
   167ac:	andeq	pc, r2, r0, asr r8	; <UNPREDICTABLE>
   167b0:	andeq	sp, r1, r4, asr r9

000167b4 <UnityAssertBits@@Base>:
   167b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   167b8:	movw	r4, #1112	; 0x458
   167bc:	movt	r4, #3
   167c0:	ldr	ip, [r4, #32]
   167c4:	strd	r6, [sp, #8]
   167c8:	strd	r8, [sp, #16]
   167cc:	str	sl, [sp, #24]
   167d0:	str	lr, [sp, #28]
   167d4:	cmp	ip, #0
   167d8:	bne	16848 <UnityAssertBits@@Base+0x94>
   167dc:	ldr	ip, [r4, #36]	; 0x24
   167e0:	cmp	ip, #0
   167e4:	bne	16828 <UnityAssertBits@@Base+0x74>
   167e8:	ldr	r5, [pc, #384]	; 16970 <UnityAssertBits@@Base+0x1bc>
   167ec:	eor	r6, r1, r2
   167f0:	ldr	ip, [r5, #16]
   167f4:	ldr	lr, [r5, #20]
   167f8:	adds	ip, ip, #1
   167fc:	adc	lr, lr, #0
   16800:	tst	r6, r0
   16804:	str	ip, [r5, #16]
   16808:	str	lr, [r5, #20]
   1680c:	bne	16868 <UnityAssertBits@@Base+0xb4>
   16810:	ldrd	r4, [sp]
   16814:	ldrd	r6, [sp, #8]
   16818:	ldrd	r8, [sp, #16]
   1681c:	ldr	sl, [sp, #24]
   16820:	add	sp, sp, #28
   16824:	pop	{pc}		; (ldr pc, [sp], #4)
   16828:	ldr	r2, [pc, #320]	; 16970 <UnityAssertBits@@Base+0x1bc>
   1682c:	ldr	r3, [r2, #8]
   16830:	ldr	r1, [r2, #12]
   16834:	adds	r3, r3, #1
   16838:	adc	r1, r1, #0
   1683c:	str	r3, [r2, #8]
   16840:	str	r1, [r2, #12]
   16844:	b	16810 <UnityAssertBits@@Base+0x5c>
   16848:	ldr	r2, [pc, #288]	; 16970 <UnityAssertBits@@Base+0x1bc>
   1684c:	ldr	r3, [r2]
   16850:	ldr	r1, [r2, #4]
   16854:	adds	r3, r3, #1
   16858:	adc	r1, r1, #0
   1685c:	str	r3, [r2]
   16860:	str	r1, [r2, #4]
   16864:	b	16810 <UnityAssertBits@@Base+0x5c>
   16868:	mov	r6, r3
   1686c:	ldr	r3, [r5, #24]
   16870:	mov	r8, r2
   16874:	mov	r7, r0
   16878:	mov	r9, r1
   1687c:	ldr	r2, [r5, #28]
   16880:	ldr	r0, [sp, #32]
   16884:	adds	r3, r3, #1
   16888:	adc	r2, r2, #0
   1688c:	str	r3, [r5, #24]
   16890:	str	r2, [r5, #28]
   16894:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   16898:	ldr	r3, [r5, #32]
   1689c:	movw	r0, #55480	; 0xd8b8
   168a0:	movt	r0, #1
   168a4:	ldr	r2, [r5, #36]	; 0x24
   168a8:	adds	r3, r3, #1
   168ac:	adc	r2, r2, #0
   168b0:	str	r3, [r5, #32]
   168b4:	str	r2, [r5, #36]	; 0x24
   168b8:	bl	15268 <UnityPrint@@Base>
   168bc:	ldr	r3, [r5, #40]	; 0x28
   168c0:	mov	r1, r9
   168c4:	mov	r0, r7
   168c8:	ldr	r2, [r5, #44]	; 0x2c
   168cc:	adds	r3, r3, #1
   168d0:	adc	r2, r2, #0
   168d4:	str	r3, [r5, #40]	; 0x28
   168d8:	str	r2, [r5, #44]	; 0x2c
   168dc:	bl	1648c <UnityPrintMask@@Base>
   168e0:	ldr	r3, [r5, #48]	; 0x30
   168e4:	ldr	r2, [r5, #52]	; 0x34
   168e8:	ldr	r0, [pc, #132]	; 16974 <UnityAssertBits@@Base+0x1c0>
   168ec:	adds	r3, r3, #1
   168f0:	adc	r2, r2, #0
   168f4:	str	r3, [r5, #48]	; 0x30
   168f8:	str	r2, [r5, #52]	; 0x34
   168fc:	bl	15268 <UnityPrint@@Base>
   16900:	ldr	r3, [r5, #56]	; 0x38
   16904:	mov	r1, r8
   16908:	mov	r0, r7
   1690c:	ldr	r2, [r5, #60]	; 0x3c
   16910:	adds	r3, r3, #1
   16914:	adc	r2, r2, #0
   16918:	str	r3, [r5, #56]	; 0x38
   1691c:	str	r2, [r5, #60]	; 0x3c
   16920:	bl	1648c <UnityPrintMask@@Base>
   16924:	ldr	r3, [r5, #64]	; 0x40
   16928:	mov	r0, r6
   1692c:	ldr	r2, [r5, #68]	; 0x44
   16930:	adds	r3, r3, #1
   16934:	adc	r2, r2, #0
   16938:	str	r3, [r5, #64]	; 0x40
   1693c:	str	r2, [r5, #68]	; 0x44
   16940:	bl	15684 <UnityPrint@@Base+0x41c>
   16944:	ldr	r3, [r5, #72]	; 0x48
   16948:	mov	ip, #1
   1694c:	add	r0, r4, #40	; 0x28
   16950:	mov	r1, ip
   16954:	ldr	r2, [r5, #76]	; 0x4c
   16958:	str	ip, [r4, #32]
   1695c:	adds	r3, r3, ip
   16960:	adc	r2, r2, #0
   16964:	str	r3, [r5, #72]	; 0x48
   16968:	str	r2, [r5, #76]	; 0x4c
   1696c:	bl	11fcc <longjmp@plt>
   16970:	andeq	pc, r2, r0, lsl #17
   16974:	andeq	sp, r1, ip, asr #17

00016978 <UnityAssertEqualNumber@@Base>:
   16978:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1697c:	movw	r4, #1112	; 0x458
   16980:	movt	r4, #3
   16984:	ldr	ip, [r4, #32]
   16988:	strd	r6, [sp, #8]
   1698c:	str	r8, [sp, #16]
   16990:	str	lr, [sp, #20]
   16994:	cmp	ip, #0
   16998:	bne	16a00 <UnityAssertEqualNumber@@Base+0x88>
   1699c:	ldr	ip, [r4, #36]	; 0x24
   169a0:	cmp	ip, #0
   169a4:	bne	169e0 <UnityAssertEqualNumber@@Base+0x68>
   169a8:	ldr	r5, [pc, #364]	; 16b1c <UnityAssertEqualNumber@@Base+0x1a4>
   169ac:	ldr	ip, [r5, #16]
   169b0:	ldr	lr, [r5, #20]
   169b4:	adds	ip, ip, #1
   169b8:	adc	lr, lr, #0
   169bc:	cmp	r0, r1
   169c0:	str	ip, [r5, #16]
   169c4:	str	lr, [r5, #20]
   169c8:	bne	16a20 <UnityAssertEqualNumber@@Base+0xa8>
   169cc:	ldrd	r4, [sp]
   169d0:	ldrd	r6, [sp, #8]
   169d4:	ldr	r8, [sp, #16]
   169d8:	add	sp, sp, #20
   169dc:	pop	{pc}		; (ldr pc, [sp], #4)
   169e0:	ldr	r2, [pc, #308]	; 16b1c <UnityAssertEqualNumber@@Base+0x1a4>
   169e4:	ldr	r3, [r2, #8]
   169e8:	ldr	r1, [r2, #12]
   169ec:	adds	r3, r3, #1
   169f0:	adc	r1, r1, #0
   169f4:	str	r3, [r2, #8]
   169f8:	str	r1, [r2, #12]
   169fc:	b	169cc <UnityAssertEqualNumber@@Base+0x54>
   16a00:	ldr	r2, [pc, #276]	; 16b1c <UnityAssertEqualNumber@@Base+0x1a4>
   16a04:	ldr	r3, [r2]
   16a08:	ldr	r1, [r2, #4]
   16a0c:	adds	r3, r3, #1
   16a10:	adc	r1, r1, #0
   16a14:	str	r3, [r2]
   16a18:	str	r1, [r2, #4]
   16a1c:	b	169cc <UnityAssertEqualNumber@@Base+0x54>
   16a20:	mov	r6, r2
   16a24:	mov	r8, r0
   16a28:	mov	r0, r3
   16a2c:	ldrd	r2, [r5, #24]
   16a30:	mov	r7, r1
   16a34:	adds	r2, r2, #1
   16a38:	adc	r3, r3, #0
   16a3c:	strd	r2, [r5, #24]
   16a40:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   16a44:	ldr	r3, [r5, #32]
   16a48:	movw	r0, #55480	; 0xd8b8
   16a4c:	movt	r0, #1
   16a50:	ldr	r2, [r5, #36]	; 0x24
   16a54:	adds	r3, r3, #1
   16a58:	adc	r2, r2, #0
   16a5c:	str	r3, [r5, #32]
   16a60:	str	r2, [r5, #36]	; 0x24
   16a64:	bl	15268 <UnityPrint@@Base>
   16a68:	ldr	r3, [r5, #40]	; 0x28
   16a6c:	mov	r0, r8
   16a70:	ldr	r2, [r5, #44]	; 0x2c
   16a74:	ldr	r1, [sp, #24]
   16a78:	adds	r3, r3, #1
   16a7c:	adc	r2, r2, #0
   16a80:	str	r3, [r5, #40]	; 0x28
   16a84:	str	r2, [r5, #44]	; 0x2c
   16a88:	bl	16380 <UnityPrintNumberByStyle@@Base>
   16a8c:	ldr	r3, [r5, #48]	; 0x30
   16a90:	ldr	r2, [r5, #52]	; 0x34
   16a94:	ldr	r0, [pc, #132]	; 16b20 <UnityAssertEqualNumber@@Base+0x1a8>
   16a98:	adds	r3, r3, #1
   16a9c:	adc	r2, r2, #0
   16aa0:	str	r3, [r5, #48]	; 0x30
   16aa4:	str	r2, [r5, #52]	; 0x34
   16aa8:	bl	15268 <UnityPrint@@Base>
   16aac:	ldr	r3, [r5, #56]	; 0x38
   16ab0:	mov	r0, r7
   16ab4:	ldr	r2, [r5, #60]	; 0x3c
   16ab8:	ldr	r1, [sp, #24]
   16abc:	adds	r3, r3, #1
   16ac0:	adc	r2, r2, #0
   16ac4:	str	r3, [r5, #56]	; 0x38
   16ac8:	str	r2, [r5, #60]	; 0x3c
   16acc:	bl	16380 <UnityPrintNumberByStyle@@Base>
   16ad0:	ldr	r3, [r5, #64]	; 0x40
   16ad4:	mov	r0, r6
   16ad8:	ldr	r2, [r5, #68]	; 0x44
   16adc:	adds	r3, r3, #1
   16ae0:	adc	r2, r2, #0
   16ae4:	str	r3, [r5, #64]	; 0x40
   16ae8:	str	r2, [r5, #68]	; 0x44
   16aec:	bl	15684 <UnityPrint@@Base+0x41c>
   16af0:	ldr	r3, [r5, #72]	; 0x48
   16af4:	mov	ip, #1
   16af8:	add	r0, r4, #40	; 0x28
   16afc:	mov	r1, ip
   16b00:	ldr	r2, [r5, #76]	; 0x4c
   16b04:	str	ip, [r4, #32]
   16b08:	adds	r3, r3, ip
   16b0c:	adc	r2, r2, #0
   16b10:	str	r3, [r5, #72]	; 0x48
   16b14:	str	r2, [r5, #76]	; 0x4c
   16b18:	bl	11fcc <longjmp@plt>
   16b1c:	ldrdeq	pc, [r2], -r0
   16b20:	andeq	sp, r1, ip, asr #17

00016b24 <UnityAssertEqualIntArray@@Base>:
   16b24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16b28:	mov	r5, r2
   16b2c:	strd	r6, [sp, #8]
   16b30:	movw	r7, #1112	; 0x458
   16b34:	movt	r7, #3
   16b38:	ldr	r2, [r7, #32]
   16b3c:	strd	r8, [sp, #16]
   16b40:	strd	sl, [sp, #24]
   16b44:	str	lr, [sp, #32]
   16b48:	sub	sp, sp, #20
   16b4c:	cmp	r2, #0
   16b50:	ldrne	r2, [pc, #1992]	; 17320 <UnityAssertEqualIntArray@@Base+0x7fc>
   16b54:	bne	16d34 <UnityAssertEqualIntArray@@Base+0x210>
   16b58:	ldr	r2, [r7, #36]	; 0x24
   16b5c:	cmp	r2, #0
   16b60:	bne	16c8c <UnityAssertEqualIntArray@@Base+0x168>
   16b64:	cmp	r5, #0
   16b68:	mov	r8, r3
   16b6c:	beq	17278 <UnityAssertEqualIntArray@@Base+0x754>
   16b70:	ldr	r6, [pc, #1960]	; 17320 <UnityAssertEqualIntArray@@Base+0x7fc>
   16b74:	mov	r4, r0
   16b78:	mov	r9, r1
   16b7c:	ldr	r2, [sp, #56]	; 0x38
   16b80:	ldr	ip, [r6, #24]
   16b84:	ldr	lr, [r6, #28]
   16b88:	adds	ip, ip, #1
   16b8c:	adc	lr, lr, #0
   16b90:	str	ip, [r6, #24]
   16b94:	str	lr, [r6, #28]
   16b98:	bl	15e7c <UnityPrintNumber@@Base+0x410>
   16b9c:	cmp	r0, #1
   16ba0:	beq	16e60 <UnityAssertEqualIntArray@@Base+0x33c>
   16ba4:	ldr	r3, [sp, #60]	; 0x3c
   16ba8:	sub	r2, r5, #1
   16bac:	str	r2, [sp, #4]
   16bb0:	bic	r3, r3, #128	; 0x80
   16bb4:	sub	r3, r3, #17
   16bb8:	cmp	r3, #49	; 0x31
   16bbc:	ldrls	pc, [pc, r3, lsl #2]
   16bc0:	b	16cc4 <UnityAssertEqualIntArray@@Base+0x1a0>
   16bc4:	ldrdeq	r6, [r1], -r8
   16bc8:	andeq	r6, r1, r0, asr sp
   16bcc:	andeq	r6, r1, r4, asr #25
   16bd0:	andeq	r6, r1, r4, asr #25
   16bd4:	andeq	r6, r1, r4, asr #25
   16bd8:	andeq	r6, r1, r4, asr #25
   16bdc:	andeq	r6, r1, r4, asr #25
   16be0:	andeq	r6, r1, r4, asr #25
   16be4:	andeq	r6, r1, r4, asr #25
   16be8:	andeq	r6, r1, r4, asr #25
   16bec:	andeq	r6, r1, r4, asr #25
   16bf0:	andeq	r6, r1, r4, asr #25
   16bf4:	andeq	r6, r1, r4, asr #25
   16bf8:	andeq	r6, r1, r4, asr #25
   16bfc:	andeq	r6, r1, r4, asr #25
   16c00:	andeq	r6, r1, r4, asr #25
   16c04:	ldrdeq	r6, [r1], -r8
   16c08:	andeq	r6, r1, r0, asr sp
   16c0c:	andeq	r6, r1, r4, asr #25
   16c10:	andeq	r6, r1, r4, asr #25
   16c14:	andeq	r6, r1, r4, asr #25
   16c18:	andeq	r6, r1, r4, asr #25
   16c1c:	andeq	r6, r1, r4, asr #25
   16c20:	andeq	r6, r1, r4, asr #25
   16c24:	andeq	r6, r1, r4, asr #25
   16c28:	andeq	r6, r1, r4, asr #25
   16c2c:	andeq	r6, r1, r4, asr #25
   16c30:	andeq	r6, r1, r4, asr #25
   16c34:	andeq	r6, r1, r4, asr #25
   16c38:	andeq	r6, r1, r4, asr #25
   16c3c:	andeq	r6, r1, r4, asr #25
   16c40:	andeq	r6, r1, r4, asr #25
   16c44:	andeq	r6, r1, r4, asr #25
   16c48:	andeq	r6, r1, r4, asr #25
   16c4c:	andeq	r6, r1, r4, asr #25
   16c50:	andeq	r6, r1, r4, asr #25
   16c54:	andeq	r6, r1, r4, asr #25
   16c58:	andeq	r6, r1, r4, asr #25
   16c5c:	andeq	r6, r1, r4, asr #25
   16c60:	andeq	r6, r1, r4, asr #25
   16c64:	andeq	r6, r1, r4, asr #25
   16c68:	andeq	r6, r1, r4, asr #25
   16c6c:	andeq	r6, r1, r4, asr #25
   16c70:	andeq	r6, r1, r4, asr #25
   16c74:	andeq	r6, r1, r4, asr #25
   16c78:	andeq	r6, r1, r4, asr #25
   16c7c:	andeq	r6, r1, r4, asr #25
   16c80:	andeq	r6, r1, r4, asr #25
   16c84:	ldrdeq	r6, [r1], -r8
   16c88:	andeq	r6, r1, r0, asr sp
   16c8c:	ldr	r2, [pc, #1676]	; 17320 <UnityAssertEqualIntArray@@Base+0x7fc>
   16c90:	ldr	r3, [r2, #8]
   16c94:	ldr	r1, [r2, #12]
   16c98:	adds	r3, r3, #1
   16c9c:	adc	r1, r1, #0
   16ca0:	str	r3, [r2, #8]
   16ca4:	str	r1, [r2, #12]
   16ca8:	add	sp, sp, #20
   16cac:	ldrd	r4, [sp]
   16cb0:	ldrd	r6, [sp, #8]
   16cb4:	ldrd	r8, [sp, #16]
   16cb8:	ldrd	sl, [sp, #24]
   16cbc:	add	sp, sp, #32
   16cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   16cc4:	ldr	r3, [r4]
   16cc8:	ldr	r2, [r9]
   16ccc:	cmp	r2, r3
   16cd0:	bne	17310 <UnityAssertEqualIntArray@@Base+0x7ec>
   16cd4:	ldr	r3, [r6, #248]	; 0xf8
   16cd8:	mov	r2, r4
   16cdc:	ldr	r0, [r6, #252]	; 0xfc
   16ce0:	ldr	r5, [sp, #4]
   16ce4:	adds	r3, r3, #1
   16ce8:	adc	r0, r0, #0
   16cec:	b	16d08 <UnityAssertEqualIntArray@@Base+0x1e4>
   16cf0:	ldr	ip, [r1]
   16cf4:	adds	r3, r3, #1
   16cf8:	adc	r0, r0, #0
   16cfc:	ldr	lr, [r2]
   16d00:	cmp	lr, ip
   16d04:	bne	16fc8 <UnityAssertEqualIntArray@@Base+0x4a4>
   16d08:	add	r2, r2, #4
   16d0c:	sub	r5, r5, #1
   16d10:	add	r1, r9, r2
   16d14:	cmn	r5, #1
   16d18:	sub	r1, r1, r4
   16d1c:	mov	fp, r3
   16d20:	mov	sl, r0
   16d24:	bne	16cf0 <UnityAssertEqualIntArray@@Base+0x1cc>
   16d28:	ldr	r2, [pc, #1524]	; 17324 <UnityAssertEqualIntArray@@Base+0x800>
   16d2c:	str	r3, [r6, #248]	; 0xf8
   16d30:	str	r0, [r6, #252]	; 0xfc
   16d34:	ldr	r3, [r2]
   16d38:	ldr	r1, [r2, #4]
   16d3c:	adds	r3, r3, #1
   16d40:	adc	r1, r1, #0
   16d44:	str	r3, [r2]
   16d48:	str	r1, [r2, #4]
   16d4c:	b	16ca8 <UnityAssertEqualIntArray@@Base+0x184>
   16d50:	ldrsh	r2, [r4]
   16d54:	ldrsh	r3, [r9]
   16d58:	cmp	r2, r3
   16d5c:	bne	17308 <UnityAssertEqualIntArray@@Base+0x7e4>
   16d60:	ldr	r3, [r6, #160]	; 0xa0
   16d64:	mov	r2, r4
   16d68:	ldr	r0, [r6, #164]	; 0xa4
   16d6c:	ldr	r5, [sp, #4]
   16d70:	adds	r3, r3, #1
   16d74:	adc	r0, r0, #0
   16d78:	b	16d94 <UnityAssertEqualIntArray@@Base+0x270>
   16d7c:	ldrsh	ip, [r2]
   16d80:	adds	r3, r3, #1
   16d84:	adc	r0, r0, #0
   16d88:	ldrsh	lr, [r1]
   16d8c:	cmp	lr, ip
   16d90:	bne	16e7c <UnityAssertEqualIntArray@@Base+0x358>
   16d94:	add	r2, r2, #2
   16d98:	sub	r5, r5, #1
   16d9c:	add	r1, r9, r2
   16da0:	cmn	r5, #1
   16da4:	sub	r1, r1, r4
   16da8:	mov	fp, r3
   16dac:	mov	sl, r0
   16db0:	bne	16d7c <UnityAssertEqualIntArray@@Base+0x258>
   16db4:	ldr	r2, [r6, #232]	; 0xe8
   16db8:	str	r3, [r6, #160]	; 0xa0
   16dbc:	ldr	r3, [r6, #236]	; 0xec
   16dc0:	str	r0, [r6, #164]	; 0xa4
   16dc4:	adds	r2, r2, #1
   16dc8:	adc	r3, r3, #0
   16dcc:	str	r2, [r6, #232]	; 0xe8
   16dd0:	str	r3, [r6, #236]	; 0xec
   16dd4:	b	16ca8 <UnityAssertEqualIntArray@@Base+0x184>
   16dd8:	ldrsb	r2, [r9]
   16ddc:	ldrsb	r3, [r4]
   16de0:	cmp	r2, r3
   16de4:	bne	17318 <UnityAssertEqualIntArray@@Base+0x7f4>
   16de8:	ldr	r3, [r6, #72]	; 0x48
   16dec:	add	r4, r4, r5
   16df0:	add	r9, r9, r5
   16df4:	ldr	r1, [r6, #76]	; 0x4c
   16df8:	ldr	r5, [sp, #4]
   16dfc:	adds	r3, r3, #1
   16e00:	adc	r1, r1, #0
   16e04:	b	16e20 <UnityAssertEqualIntArray@@Base+0x2fc>
   16e08:	ldrsb	fp, [r2]
   16e0c:	adds	r3, r3, #1
   16e10:	adc	r1, r1, #0
   16e14:	ldrsb	ip, [r0]
   16e18:	cmp	fp, ip
   16e1c:	bne	1712c <UnityAssertEqualIntArray@@Base+0x608>
   16e20:	sub	r2, r4, r5
   16e24:	sub	r0, r9, r5
   16e28:	sub	r5, r5, #1
   16e2c:	mov	sl, r3
   16e30:	cmn	r5, #1
   16e34:	mov	lr, r1
   16e38:	bne	16e08 <UnityAssertEqualIntArray@@Base+0x2e4>
   16e3c:	ldr	r2, [r6, #144]	; 0x90
   16e40:	str	r3, [r6, #72]	; 0x48
   16e44:	ldr	r3, [r6, #148]	; 0x94
   16e48:	str	r1, [r6, #76]	; 0x4c
   16e4c:	adds	r2, r2, #1
   16e50:	adc	r3, r3, #0
   16e54:	str	r2, [r6, #144]	; 0x90
   16e58:	str	r3, [r6, #148]	; 0x94
   16e5c:	b	16ca8 <UnityAssertEqualIntArray@@Base+0x184>
   16e60:	ldr	r3, [r6, #56]	; 0x38
   16e64:	ldr	r2, [r6, #60]	; 0x3c
   16e68:	adds	r3, r3, #1
   16e6c:	adc	r2, r2, #0
   16e70:	str	r3, [r6, #56]	; 0x38
   16e74:	str	r2, [r6, #60]	; 0x3c
   16e78:	b	16ca8 <UnityAssertEqualIntArray@@Base+0x184>
   16e7c:	mov	r9, r1
   16e80:	mov	r4, r2
   16e84:	str	fp, [r6, #160]	; 0xa0
   16e88:	str	sl, [r6, #164]	; 0xa4
   16e8c:	ldr	r3, [r6, #152]	; 0x98
   16e90:	ldr	r2, [r6, #156]	; 0x9c
   16e94:	ldr	r0, [sp, #56]	; 0x38
   16e98:	adds	r3, r3, #1
   16e9c:	adc	r2, r2, #0
   16ea0:	str	r3, [r6, #152]	; 0x98
   16ea4:	str	r2, [r6, #156]	; 0x9c
   16ea8:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   16eac:	ldr	r3, [r6, #168]	; 0xa8
   16eb0:	ldr	r2, [r6, #172]	; 0xac
   16eb4:	ldr	r0, [pc, #1132]	; 17328 <UnityAssertEqualIntArray@@Base+0x804>
   16eb8:	adds	r3, r3, #1
   16ebc:	adc	r2, r2, #0
   16ec0:	str	r3, [r6, #168]	; 0xa8
   16ec4:	str	r2, [r6, #172]	; 0xac
   16ec8:	bl	15268 <UnityPrint@@Base>
   16ecc:	ldr	r2, [sp, #4]
   16ed0:	ldr	r3, [r6, #176]	; 0xb0
   16ed4:	sub	r0, r2, r5
   16ed8:	ldr	r2, [r6, #180]	; 0xb4
   16edc:	adds	r3, r3, #1
   16ee0:	str	r3, [r6, #176]	; 0xb0
   16ee4:	adc	r2, r2, #0
   16ee8:	str	r2, [r6, #180]	; 0xb4
   16eec:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   16ef0:	ldr	r3, [r6, #184]	; 0xb8
   16ef4:	movw	r0, #55480	; 0xd8b8
   16ef8:	movt	r0, #1
   16efc:	ldr	r2, [r6, #188]	; 0xbc
   16f00:	adds	r3, r3, #1
   16f04:	adc	r2, r2, #0
   16f08:	str	r3, [r6, #184]	; 0xb8
   16f0c:	str	r2, [r6, #188]	; 0xbc
   16f10:	bl	15268 <UnityPrint@@Base>
   16f14:	ldr	r3, [r6, #192]	; 0xc0
   16f18:	ldr	r2, [r6, #196]	; 0xc4
   16f1c:	ldrsh	r0, [r4]
   16f20:	adds	r3, r3, #1
   16f24:	ldr	r1, [sp, #60]	; 0x3c
   16f28:	adc	r2, r2, #0
   16f2c:	str	r3, [r6, #192]	; 0xc0
   16f30:	str	r2, [r6, #196]	; 0xc4
   16f34:	bl	16380 <UnityPrintNumberByStyle@@Base>
   16f38:	ldr	r3, [r6, #200]	; 0xc8
   16f3c:	ldr	r2, [r6, #204]	; 0xcc
   16f40:	ldr	r0, [pc, #996]	; 1732c <UnityAssertEqualIntArray@@Base+0x808>
   16f44:	adds	r3, r3, #1
   16f48:	adc	r2, r2, #0
   16f4c:	str	r3, [r6, #200]	; 0xc8
   16f50:	str	r2, [r6, #204]	; 0xcc
   16f54:	bl	15268 <UnityPrint@@Base>
   16f58:	ldr	r3, [r6, #208]	; 0xd0
   16f5c:	ldr	r2, [r6, #212]	; 0xd4
   16f60:	ldrsh	r0, [r9]
   16f64:	adds	r3, r3, #1
   16f68:	ldr	r1, [sp, #60]	; 0x3c
   16f6c:	adc	r2, r2, #0
   16f70:	str	r3, [r6, #208]	; 0xd0
   16f74:	str	r2, [r6, #212]	; 0xd4
   16f78:	bl	16380 <UnityPrintNumberByStyle@@Base>
   16f7c:	ldr	r3, [r6, #216]	; 0xd8
   16f80:	mov	r0, r8
   16f84:	ldr	r2, [r6, #220]	; 0xdc
   16f88:	adds	r3, r3, #1
   16f8c:	adc	r2, r2, #0
   16f90:	str	r3, [r6, #216]	; 0xd8
   16f94:	str	r2, [r6, #220]	; 0xdc
   16f98:	bl	15684 <UnityPrint@@Base+0x41c>
   16f9c:	ldr	r3, [r6, #224]	; 0xe0
   16fa0:	mov	r0, #1
   16fa4:	mov	r1, r0
   16fa8:	ldr	r2, [r6, #228]	; 0xe4
   16fac:	str	r0, [r7, #32]
   16fb0:	adds	r3, r3, r0
   16fb4:	ldr	r0, [pc, #884]	; 17330 <UnityAssertEqualIntArray@@Base+0x80c>
   16fb8:	adc	r2, r2, #0
   16fbc:	str	r3, [r6, #224]	; 0xe0
   16fc0:	str	r2, [r6, #228]	; 0xe4
   16fc4:	bl	11fcc <longjmp@plt>
   16fc8:	mov	r9, r1
   16fcc:	mov	r4, r2
   16fd0:	str	fp, [r6, #248]	; 0xf8
   16fd4:	str	sl, [r6, #252]	; 0xfc
   16fd8:	ldr	r3, [r6, #240]	; 0xf0
   16fdc:	ldr	r2, [r6, #244]	; 0xf4
   16fe0:	ldr	sl, [pc, #844]	; 17334 <UnityAssertEqualIntArray@@Base+0x810>
   16fe4:	adds	r3, r3, #1
   16fe8:	ldr	r0, [sp, #56]	; 0x38
   16fec:	adc	r2, r2, #0
   16ff0:	str	r3, [r6, #240]	; 0xf0
   16ff4:	str	r2, [r6, #244]	; 0xf4
   16ff8:	mov	r6, sl
   16ffc:	add	fp, sl, #48	; 0x30
   17000:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   17004:	ldr	r2, [sl]
   17008:	add	sl, sl, #64	; 0x40
   1700c:	ldr	r1, [sl, #-60]	; 0xffffffc4
   17010:	ldr	r0, [pc, #784]	; 17328 <UnityAssertEqualIntArray@@Base+0x804>
   17014:	adds	r2, r2, #1
   17018:	adc	r1, r1, #0
   1701c:	str	r2, [sp, #8]
   17020:	str	r1, [sp, #12]
   17024:	ldrd	r2, [sp, #8]
   17028:	strd	r2, [r6], #16
   1702c:	bl	15268 <UnityPrint@@Base>
   17030:	ldr	r2, [r6, #-8]
   17034:	ldr	r1, [r6, #-4]
   17038:	ldr	r3, [sp, #4]
   1703c:	adds	r2, r2, #1
   17040:	adc	r1, r1, #0
   17044:	str	r2, [r6, #-8]
   17048:	sub	r0, r3, r5
   1704c:	str	r1, [r6, #-4]
   17050:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   17054:	ldr	r2, [r6]
   17058:	movw	r0, #55480	; 0xd8b8
   1705c:	movt	r0, #1
   17060:	ldr	r1, [r6, #4]
   17064:	adds	r2, r2, #1
   17068:	adc	r1, r1, #0
   1706c:	str	r2, [r6]
   17070:	str	r1, [r6, #4]
   17074:	bl	15268 <UnityPrint@@Base>
   17078:	ldr	r2, [sl, #-40]	; 0xffffffd8
   1707c:	ldr	ip, [sl, #-36]	; 0xffffffdc
   17080:	ldr	r0, [r4]
   17084:	adds	r2, r2, #1
   17088:	ldr	r1, [sp, #60]	; 0x3c
   1708c:	adc	ip, ip, #0
   17090:	str	r2, [sl, #-40]	; 0xffffffd8
   17094:	str	ip, [sl, #-36]	; 0xffffffdc
   17098:	bl	16380 <UnityPrintNumberByStyle@@Base>
   1709c:	ldr	r2, [sl, #-32]	; 0xffffffe0
   170a0:	ldr	r1, [sl, #-28]	; 0xffffffe4
   170a4:	ldr	r0, [pc, #640]	; 1732c <UnityAssertEqualIntArray@@Base+0x808>
   170a8:	adds	r2, r2, #1
   170ac:	adc	r1, r1, #0
   170b0:	str	r2, [sl, #-32]	; 0xffffffe0
   170b4:	str	r1, [sl, #-28]	; 0xffffffe4
   170b8:	bl	15268 <UnityPrint@@Base>
   170bc:	ldr	r3, [fp, #-8]
   170c0:	ldr	r2, [fp, #-4]
   170c4:	ldr	r0, [r9]
   170c8:	adds	r3, r3, #1
   170cc:	ldr	r1, [sp, #60]	; 0x3c
   170d0:	adc	r2, r2, #0
   170d4:	str	r3, [fp, #-8]
   170d8:	str	r2, [fp, #-4]
   170dc:	bl	16380 <UnityPrintNumberByStyle@@Base>
   170e0:	ldr	r3, [fp]
   170e4:	mov	r0, r8
   170e8:	ldr	r2, [fp, #4]
   170ec:	adds	r3, r3, #1
   170f0:	adc	r2, r2, #0
   170f4:	str	r3, [fp]
   170f8:	str	r2, [fp, #4]
   170fc:	bl	15684 <UnityPrint@@Base+0x41c>
   17100:	ldr	r3, [sl, #-8]
   17104:	mov	r2, #1
   17108:	mov	r1, r2
   1710c:	str	r2, [r7, #32]
   17110:	ldr	r0, [pc, #536]	; 17330 <UnityAssertEqualIntArray@@Base+0x80c>
   17114:	adds	r3, r3, r2
   17118:	ldr	r2, [sl, #-4]
   1711c:	str	r3, [sl, #-8]
   17120:	adc	r2, r2, #0
   17124:	str	r2, [sl, #-4]
   17128:	bl	11fcc <longjmp@plt>
   1712c:	mov	r9, r0
   17130:	mov	r4, r2
   17134:	str	sl, [r6, #72]	; 0x48
   17138:	str	lr, [r6, #76]	; 0x4c
   1713c:	ldr	r3, [r6, #64]	; 0x40
   17140:	ldr	r2, [r6, #68]	; 0x44
   17144:	ldr	r0, [sp, #56]	; 0x38
   17148:	adds	r3, r3, #1
   1714c:	adc	r2, r2, #0
   17150:	str	r3, [r6, #64]	; 0x40
   17154:	str	r2, [r6, #68]	; 0x44
   17158:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   1715c:	ldr	r3, [r6, #80]	; 0x50
   17160:	ldr	r2, [r6, #84]	; 0x54
   17164:	ldr	r0, [pc, #444]	; 17328 <UnityAssertEqualIntArray@@Base+0x804>
   17168:	adds	r3, r3, #1
   1716c:	adc	r2, r2, #0
   17170:	str	r3, [r6, #80]	; 0x50
   17174:	str	r2, [r6, #84]	; 0x54
   17178:	bl	15268 <UnityPrint@@Base>
   1717c:	ldr	r2, [sp, #4]
   17180:	ldr	r3, [r6, #88]	; 0x58
   17184:	sub	r0, r2, r5
   17188:	ldr	r2, [r6, #92]	; 0x5c
   1718c:	adds	r3, r3, #1
   17190:	str	r3, [r6, #88]	; 0x58
   17194:	adc	r2, r2, #0
   17198:	str	r2, [r6, #92]	; 0x5c
   1719c:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   171a0:	ldr	r3, [r6, #96]	; 0x60
   171a4:	movw	r0, #55480	; 0xd8b8
   171a8:	movt	r0, #1
   171ac:	ldr	r2, [r6, #100]	; 0x64
   171b0:	adds	r3, r3, #1
   171b4:	adc	r2, r2, #0
   171b8:	str	r3, [r6, #96]	; 0x60
   171bc:	str	r2, [r6, #100]	; 0x64
   171c0:	bl	15268 <UnityPrint@@Base>
   171c4:	ldr	r3, [r6, #104]	; 0x68
   171c8:	ldr	r2, [r6, #108]	; 0x6c
   171cc:	ldrsb	r0, [r4]
   171d0:	adds	r3, r3, #1
   171d4:	ldr	r1, [sp, #60]	; 0x3c
   171d8:	adc	r2, r2, #0
   171dc:	str	r3, [r6, #104]	; 0x68
   171e0:	str	r2, [r6, #108]	; 0x6c
   171e4:	bl	16380 <UnityPrintNumberByStyle@@Base>
   171e8:	ldr	r3, [r6, #112]	; 0x70
   171ec:	ldr	r2, [r6, #116]	; 0x74
   171f0:	ldr	r0, [pc, #308]	; 1732c <UnityAssertEqualIntArray@@Base+0x808>
   171f4:	adds	r3, r3, #1
   171f8:	adc	r2, r2, #0
   171fc:	str	r3, [r6, #112]	; 0x70
   17200:	str	r2, [r6, #116]	; 0x74
   17204:	bl	15268 <UnityPrint@@Base>
   17208:	ldr	r3, [r6, #120]	; 0x78
   1720c:	ldr	r2, [r6, #124]	; 0x7c
   17210:	ldrsb	r0, [r9]
   17214:	adds	r3, r3, #1
   17218:	ldr	r1, [sp, #60]	; 0x3c
   1721c:	adc	r2, r2, #0
   17220:	str	r3, [r6, #120]	; 0x78
   17224:	str	r2, [r6, #124]	; 0x7c
   17228:	bl	16380 <UnityPrintNumberByStyle@@Base>
   1722c:	ldr	r3, [r6, #128]	; 0x80
   17230:	mov	r0, r8
   17234:	ldr	r2, [r6, #132]	; 0x84
   17238:	adds	r3, r3, #1
   1723c:	adc	r2, r2, #0
   17240:	str	r3, [r6, #128]	; 0x80
   17244:	str	r2, [r6, #132]	; 0x84
   17248:	bl	15684 <UnityPrint@@Base+0x41c>
   1724c:	ldr	r3, [r6, #136]	; 0x88
   17250:	mov	r0, #1
   17254:	mov	r1, r0
   17258:	ldr	r2, [r6, #140]	; 0x8c
   1725c:	str	r0, [r7, #32]
   17260:	adds	r3, r3, r0
   17264:	ldr	r0, [pc, #196]	; 17330 <UnityAssertEqualIntArray@@Base+0x80c>
   17268:	adc	r2, r2, #0
   1726c:	str	r3, [r6, #136]	; 0x88
   17270:	str	r2, [r6, #140]	; 0x8c
   17274:	bl	11fcc <longjmp@plt>
   17278:	ldr	r4, [pc, #160]	; 17320 <UnityAssertEqualIntArray@@Base+0x7fc>
   1727c:	ldr	r0, [sp, #56]	; 0x38
   17280:	ldr	r3, [r4, #16]
   17284:	ldr	r2, [r4, #20]
   17288:	adds	r3, r3, #1
   1728c:	adc	r2, r2, #0
   17290:	str	r3, [r4, #16]
   17294:	str	r2, [r4, #20]
   17298:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   1729c:	ldr	r3, [r4, #32]
   172a0:	ldr	r2, [r4, #36]	; 0x24
   172a4:	ldr	r0, [pc, #140]	; 17338 <UnityAssertEqualIntArray@@Base+0x814>
   172a8:	adds	r3, r3, #1
   172ac:	adc	r2, r2, #0
   172b0:	str	r3, [r4, #32]
   172b4:	str	r2, [r4, #36]	; 0x24
   172b8:	bl	15268 <UnityPrint@@Base>
   172bc:	ldr	r3, [r4, #40]	; 0x28
   172c0:	mov	r0, r8
   172c4:	ldr	r2, [r4, #44]	; 0x2c
   172c8:	adds	r3, r3, #1
   172cc:	adc	r2, r2, #0
   172d0:	str	r3, [r4, #40]	; 0x28
   172d4:	str	r2, [r4, #44]	; 0x2c
   172d8:	bl	15684 <UnityPrint@@Base+0x41c>
   172dc:	ldr	r3, [r4, #48]	; 0x30
   172e0:	mov	ip, #1
   172e4:	add	r0, r7, #40	; 0x28
   172e8:	mov	r1, ip
   172ec:	ldr	r2, [r4, #52]	; 0x34
   172f0:	str	ip, [r7, #32]
   172f4:	adds	r3, r3, ip
   172f8:	adc	r2, r2, #0
   172fc:	str	r3, [r4, #48]	; 0x30
   17300:	str	r2, [r4, #52]	; 0x34
   17304:	bl	11fcc <longjmp@plt>
   17308:	ldr	r5, [sp, #4]
   1730c:	b	16e8c <UnityAssertEqualIntArray@@Base+0x368>
   17310:	ldr	r5, [sp, #4]
   17314:	b	16fd8 <UnityAssertEqualIntArray@@Base+0x4b4>
   17318:	ldr	r5, [sp, #4]
   1731c:	b	1713c <UnityAssertEqualIntArray@@Base+0x618>
   17320:	andeq	pc, r2, r0, lsr #18
   17324:	andeq	pc, r2, r0, ror #20
   17328:	muleq	r1, r4, r9
   1732c:	andeq	sp, r1, ip, asr #17
   17330:	andeq	r0, r3, r0, lsl #9
   17334:	andeq	pc, r2, r0, lsr #20
   17338:	andeq	sp, r1, ip, asr r9

0001733c <UnityAssertEqualFloatArray@@Base>:
   1733c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17340:	strd	r6, [sp, #8]
   17344:	movw	r6, #1112	; 0x458
   17348:	movt	r6, #3
   1734c:	ldr	ip, [r6, #32]
   17350:	strd	r8, [sp, #16]
   17354:	strd	sl, [sp, #24]
   17358:	str	lr, [sp, #32]
   1735c:	sub	sp, sp, #12
   17360:	cmp	ip, #0
   17364:	bne	174e0 <UnityAssertEqualFloatArray@@Base+0x1a4>
   17368:	ldr	r7, [r6, #36]	; 0x24
   1736c:	cmp	r7, #0
   17370:	bne	174c0 <UnityAssertEqualFloatArray@@Base+0x184>
   17374:	ldr	r5, [pc, #1004]	; 17768 <UnityAssertEqualFloatArray@@Base+0x42c>
   17378:	mov	r4, r2
   1737c:	str	r3, [sp]
   17380:	ldr	r2, [r5, #8]
   17384:	ldr	ip, [r5, #12]
   17388:	adds	r2, r2, #1
   1738c:	adc	ip, ip, #0
   17390:	cmp	r4, #0
   17394:	str	r2, [r5, #8]
   17398:	str	ip, [r5, #12]
   1739c:	beq	176d4 <UnityAssertEqualFloatArray@@Base+0x398>
   173a0:	ldr	r2, [sp, #48]	; 0x30
   173a4:	mov	r9, r0
   173a8:	mov	r8, r1
   173ac:	bl	15e7c <UnityPrintNumber@@Base+0x410>
   173b0:	ldr	r3, [r5, #48]	; 0x30
   173b4:	ldr	r2, [r5, #52]	; 0x34
   173b8:	adds	r3, r3, #1
   173bc:	adc	r2, r2, #0
   173c0:	cmp	r0, #1
   173c4:	str	r3, [r5, #48]	; 0x30
   173c8:	str	r2, [r5, #52]	; 0x34
   173cc:	beq	17500 <UnityAssertEqualFloatArray@@Base+0x1c4>
   173d0:	vldr	s12, [pc, #904]	; 17760 <UnityAssertEqualFloatArray@@Base+0x424>
   173d4:	mov	r0, r9
   173d8:	mov	r1, r8
   173dc:	sub	r4, r4, #1
   173e0:	mov	fp, r7
   173e4:	vldr	s11, [pc, #888]	; 17764 <UnityAssertEqualFloatArray@@Base+0x428>
   173e8:	mov	sl, r7
   173ec:	str	r4, [sp, #4]
   173f0:	ldr	ip, [r5, #64]	; 0x40
   173f4:	ldr	r8, [r5, #68]	; 0x44
   173f8:	ldr	lr, [r5, #72]	; 0x48
   173fc:	ldr	r9, [r5, #76]	; 0x4c
   17400:	ldr	r3, [r5, #96]	; 0x60
   17404:	ldr	r2, [r5, #100]	; 0x64
   17408:	vldmia	r0!, {s15}
   1740c:	vldmia	r1!, {s14}
   17410:	vsub.f32	s14, s15, s14
   17414:	vcmpe.f32	s14, #0.0
   17418:	vmrs	APSR_nzcv, fpscr
   1741c:	bpl	17430 <UnityAssertEqualFloatArray@@Base+0xf4>
   17420:	vsub.f32	s14, s12, s14
   17424:	adds	ip, ip, #1
   17428:	mov	sl, #1
   1742c:	adc	r8, r8, #0
   17430:	vmul.f32	s15, s15, s11
   17434:	vcmpe.f32	s15, #0.0
   17438:	vmrs	APSR_nzcv, fpscr
   1743c:	bpl	17450 <UnityAssertEqualFloatArray@@Base+0x114>
   17440:	vsub.f32	s15, s12, s15
   17444:	adds	lr, lr, #1
   17448:	mov	fp, #1
   1744c:	adc	r9, r9, #0
   17450:	vmul.f32	s13, s14, s12
   17454:	vcmp.f32	s13, #0.0
   17458:	vmrs	APSR_nzcv, fpscr
   1745c:	bne	17694 <UnityAssertEqualFloatArray@@Base+0x358>
   17460:	vcmpe.f32	s14, s15
   17464:	vmrs	APSR_nzcv, fpscr
   17468:	bgt	1751c <UnityAssertEqualFloatArray@@Base+0x1e0>
   1746c:	adds	r3, r3, #1
   17470:	sub	r4, r4, #1
   17474:	adc	r2, r2, #0
   17478:	cmn	r4, #1
   1747c:	mov	r7, #1
   17480:	bne	17408 <UnityAssertEqualFloatArray@@Base+0xcc>
   17484:	cmp	sl, #0
   17488:	str	r3, [r5, #96]	; 0x60
   1748c:	str	r2, [r5, #100]	; 0x64
   17490:	strne	ip, [r5, #64]	; 0x40
   17494:	strne	r8, [r5, #68]	; 0x44
   17498:	cmp	fp, #0
   1749c:	strne	lr, [r5, #72]	; 0x48
   174a0:	strne	r9, [r5, #76]	; 0x4c
   174a4:	add	sp, sp, #12
   174a8:	ldrd	r4, [sp]
   174ac:	ldrd	r6, [sp, #8]
   174b0:	ldrd	r8, [sp, #16]
   174b4:	ldrd	sl, [sp, #24]
   174b8:	add	sp, sp, #32
   174bc:	pop	{pc}		; (ldr pc, [sp], #4)
   174c0:	ldr	r2, [pc, #672]	; 17768 <UnityAssertEqualFloatArray@@Base+0x42c>
   174c4:	ldr	r3, [r2]
   174c8:	ldr	r1, [r2, #4]
   174cc:	adds	r3, r3, #1
   174d0:	adc	r1, r1, #0
   174d4:	str	r3, [r2]
   174d8:	str	r1, [r2, #4]
   174dc:	b	174a4 <UnityAssertEqualFloatArray@@Base+0x168>
   174e0:	ldr	r2, [pc, #640]	; 17768 <UnityAssertEqualFloatArray@@Base+0x42c>
   174e4:	ldr	r3, [r2, #-8]
   174e8:	ldr	r1, [r2, #-4]
   174ec:	adds	r3, r3, #1
   174f0:	adc	r1, r1, #0
   174f4:	str	r3, [r2, #-8]
   174f8:	str	r1, [r2, #-4]
   174fc:	b	174a4 <UnityAssertEqualFloatArray@@Base+0x168>
   17500:	ldr	r3, [r5, #56]	; 0x38
   17504:	ldr	r2, [r5, #60]	; 0x3c
   17508:	adds	r3, r3, #1
   1750c:	adc	r2, r2, #0
   17510:	str	r3, [r5, #56]	; 0x38
   17514:	str	r2, [r5, #60]	; 0x3c
   17518:	b	174a4 <UnityAssertEqualFloatArray@@Base+0x168>
   1751c:	cmp	sl, #0
   17520:	strne	ip, [r5, #64]	; 0x40
   17524:	strne	r8, [r5, #68]	; 0x44
   17528:	cmp	fp, #0
   1752c:	strne	lr, [r5, #72]	; 0x48
   17530:	strne	r9, [r5, #76]	; 0x4c
   17534:	cmp	r7, #0
   17538:	strne	r3, [r5, #96]	; 0x60
   1753c:	ldr	r3, [r5, #88]	; 0x58
   17540:	strne	r2, [r5, #100]	; 0x64
   17544:	ldr	r2, [r5, #92]	; 0x5c
   17548:	adds	r3, r3, #1
   1754c:	adc	r2, r2, #0
   17550:	str	r3, [r5, #88]	; 0x58
   17554:	str	r2, [r5, #92]	; 0x5c
   17558:	ldr	r7, [pc, #524]	; 1776c <UnityAssertEqualFloatArray@@Base+0x430>
   1755c:	ldr	r0, [r6]
   17560:	ldr	r1, [sp, #48]	; 0x30
   17564:	ldr	r3, [r7]
   17568:	ldr	r2, [r7, #4]
   1756c:	adds	r3, r3, #1
   17570:	adc	r2, r2, #0
   17574:	str	r3, [r7]
   17578:	str	r2, [r7, #4]
   1757c:	bl	15cb4 <UnityPrintNumber@@Base+0x248>
   17580:	ldr	r3, [r7, #8]
   17584:	ldr	r2, [r7, #12]
   17588:	ldr	r0, [pc, #480]	; 17770 <UnityAssertEqualFloatArray@@Base+0x434>
   1758c:	adds	r3, r3, #1
   17590:	adc	r2, r2, #0
   17594:	str	r3, [r7, #8]
   17598:	str	r2, [r7, #12]
   1759c:	bl	15268 <UnityPrint@@Base>
   175a0:	ldr	r3, [r7, #16]
   175a4:	movw	r1, #60468	; 0xec34
   175a8:	movt	r1, #2
   175ac:	mov	r0, #58	; 0x3a
   175b0:	ldr	r2, [r7, #20]
   175b4:	ldr	r1, [r1]
   175b8:	adds	r3, r3, #1
   175bc:	adc	r2, r2, #0
   175c0:	str	r3, [r7, #16]
   175c4:	str	r2, [r7, #20]
   175c8:	bl	120f8 <putc@plt>
   175cc:	ldr	r2, [r7, #24]
   175d0:	ldr	r0, [r7, #28]
   175d4:	ldr	r3, [r5, #104]	; 0x68
   175d8:	adds	r2, r2, #1
   175dc:	ldr	r1, [r5, #108]	; 0x6c
   175e0:	adc	r0, r0, #0
   175e4:	str	r2, [r7, #24]
   175e8:	adds	r3, r3, #1
   175ec:	str	r0, [r7, #28]
   175f0:	ldr	r0, [pc, #380]	; 17774 <UnityAssertEqualFloatArray@@Base+0x438>
   175f4:	adc	r2, r1, #0
   175f8:	str	r3, [r5, #104]	; 0x68
   175fc:	str	r2, [r5, #108]	; 0x6c
   17600:	bl	15268 <UnityPrint@@Base>
   17604:	ldr	r2, [sp, #4]
   17608:	ldr	r3, [r5, #112]	; 0x70
   1760c:	sub	r0, r2, r4
   17610:	ldr	r2, [r5, #116]	; 0x74
   17614:	adds	r3, r3, #1
   17618:	str	r3, [r5, #112]	; 0x70
   1761c:	adc	r2, r2, #0
   17620:	str	r2, [r5, #116]	; 0x74
   17624:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   17628:	ldr	r3, [r5, #120]	; 0x78
   1762c:	ldr	r2, [r5, #124]	; 0x7c
   17630:	ldr	r0, [pc, #320]	; 17778 <UnityAssertEqualFloatArray@@Base+0x43c>
   17634:	adds	r3, r3, #1
   17638:	adc	r2, r2, #0
   1763c:	str	r3, [r5, #120]	; 0x78
   17640:	str	r2, [r5, #124]	; 0x7c
   17644:	bl	15268 <UnityPrint@@Base>
   17648:	ldr	r3, [r5, #128]	; 0x80
   1764c:	ldr	r2, [r5, #132]	; 0x84
   17650:	ldr	r0, [sp]
   17654:	adds	r3, r3, #1
   17658:	adc	r2, r2, #0
   1765c:	str	r3, [r5, #128]	; 0x80
   17660:	str	r2, [r5, #132]	; 0x84
   17664:	bl	15684 <UnityPrint@@Base+0x41c>
   17668:	ldr	r3, [r5, #136]	; 0x88
   1766c:	mov	r0, #1
   17670:	mov	r1, r0
   17674:	ldr	r2, [r5, #140]	; 0x8c
   17678:	str	r0, [r6, #32]
   1767c:	adds	r3, r3, r0
   17680:	ldr	r0, [pc, #244]	; 1777c <UnityAssertEqualFloatArray@@Base+0x440>
   17684:	adc	r2, r2, #0
   17688:	str	r3, [r5, #136]	; 0x88
   1768c:	str	r2, [r5, #140]	; 0x8c
   17690:	bl	11fcc <longjmp@plt>
   17694:	cmp	sl, #0
   17698:	strne	ip, [r5, #64]	; 0x40
   1769c:	strne	r8, [r5, #68]	; 0x44
   176a0:	cmp	fp, #0
   176a4:	strne	lr, [r5, #72]	; 0x48
   176a8:	strne	r9, [r5, #76]	; 0x4c
   176ac:	cmp	r7, #0
   176b0:	strne	r3, [r5, #96]	; 0x60
   176b4:	ldr	r3, [r5, #80]	; 0x50
   176b8:	strne	r2, [r5, #100]	; 0x64
   176bc:	ldr	r2, [r5, #84]	; 0x54
   176c0:	adds	r3, r3, #1
   176c4:	adc	r2, r2, #0
   176c8:	str	r3, [r5, #80]	; 0x50
   176cc:	str	r2, [r5, #84]	; 0x54
   176d0:	b	17558 <UnityAssertEqualFloatArray@@Base+0x21c>
   176d4:	ldr	r3, [r5, #16]
   176d8:	ldr	r2, [r5, #20]
   176dc:	ldr	r0, [sp, #48]	; 0x30
   176e0:	adds	r3, r3, #1
   176e4:	adc	r2, r2, #0
   176e8:	str	r3, [r5, #16]
   176ec:	str	r2, [r5, #20]
   176f0:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   176f4:	ldr	r3, [r5, #24]
   176f8:	ldr	r2, [r5, #28]
   176fc:	ldr	r0, [pc, #124]	; 17780 <UnityAssertEqualFloatArray@@Base+0x444>
   17700:	adds	r3, r3, #1
   17704:	adc	r2, r2, #0
   17708:	str	r3, [r5, #24]
   1770c:	str	r2, [r5, #28]
   17710:	bl	15268 <UnityPrint@@Base>
   17714:	ldr	r3, [r5, #32]
   17718:	ldr	r2, [r5, #36]	; 0x24
   1771c:	ldr	r0, [sp]
   17720:	adds	r3, r3, #1
   17724:	adc	r2, r2, #0
   17728:	str	r3, [r5, #32]
   1772c:	str	r2, [r5, #36]	; 0x24
   17730:	bl	15684 <UnityPrint@@Base+0x41c>
   17734:	ldr	r3, [r5, #40]	; 0x28
   17738:	mov	ip, #1
   1773c:	add	r0, r6, #40	; 0x28
   17740:	mov	r1, ip
   17744:	ldr	r2, [r5, #44]	; 0x2c
   17748:	str	ip, [r6, #32]
   1774c:	adds	r3, r3, ip
   17750:	adc	r2, r2, #0
   17754:	str	r3, [r5, #40]	; 0x28
   17758:	str	r2, [r5, #44]	; 0x2c
   1775c:	bl	11fcc <longjmp@plt>
   17760:	andeq	r0, r0, r0
   17764:	strcc	ip, [r7, -ip, lsr #11]!
   17768:	andeq	pc, r2, r0, ror sl	; <UNPREDICTABLE>
   1776c:	andeq	pc, r2, r0, lsr r7	; <UNPREDICTABLE>
   17770:	strdeq	sp, [r1], -r0
   17774:	muleq	r1, r4, r9
   17778:	andeq	sp, r1, r0, lsr #19
   1777c:	andeq	r0, r3, r0, lsl #9
   17780:	andeq	sp, r1, ip, asr r9

00017784 <UnityAssertFloatsWithin@@Base>:
   17784:	strd	r4, [sp, #-16]!
   17788:	movw	r4, #1112	; 0x458
   1778c:	movt	r4, #3
   17790:	ldr	r3, [r4, #32]
   17794:	str	r6, [sp, #8]
   17798:	str	lr, [sp, #12]
   1779c:	cmp	r3, #0
   177a0:	bne	17904 <UnityAssertFloatsWithin@@Base+0x180>
   177a4:	ldr	r3, [r4, #36]	; 0x24
   177a8:	cmp	r3, #0
   177ac:	bne	178d8 <UnityAssertFloatsWithin@@Base+0x154>
   177b0:	vsub.f32	s2, s2, s1
   177b4:	vldr	s15, [pc, #400]	; 1794c <UnityAssertFloatsWithin@@Base+0x1c8>
   177b8:	mov	r6, r0
   177bc:	ldr	r5, [pc, #396]	; 17950 <UnityAssertFloatsWithin@@Base+0x1cc>
   177c0:	vcmpe.f32	s2, s15
   177c4:	vmrs	APSR_nzcv, fpscr
   177c8:	bpl	177e8 <UnityAssertFloatsWithin@@Base+0x64>
   177cc:	ldr	r3, [r5, #16]
   177d0:	vsub.f32	s2, s15, s2
   177d4:	ldr	r2, [r5, #20]
   177d8:	adds	r3, r3, #1
   177dc:	adc	r2, r2, #0
   177e0:	str	r3, [r5, #16]
   177e4:	str	r2, [r5, #20]
   177e8:	vcmpe.f32	s0, #0.0
   177ec:	vldr	s15, [pc, #344]	; 1794c <UnityAssertFloatsWithin@@Base+0x1c8>
   177f0:	vmrs	APSR_nzcv, fpscr
   177f4:	bpl	17814 <UnityAssertFloatsWithin@@Base+0x90>
   177f8:	ldr	r3, [r5, #24]
   177fc:	vsub.f32	s0, s15, s0
   17800:	ldr	r2, [r5, #28]
   17804:	adds	r3, r3, #1
   17808:	adc	r2, r2, #0
   1780c:	str	r3, [r5, #24]
   17810:	str	r2, [r5, #28]
   17814:	vldr	s15, [pc, #304]	; 1794c <UnityAssertFloatsWithin@@Base+0x1c8>
   17818:	vmul.f32	s15, s2, s15
   1781c:	vcmp.f32	s15, #0.0
   17820:	vmrs	APSR_nzcv, fpscr
   17824:	bne	17930 <UnityAssertFloatsWithin@@Base+0x1ac>
   17828:	vcmpe.f32	s2, s0
   1782c:	ldr	r3, [r5, #40]	; 0x28
   17830:	ldr	r2, [r5, #44]	; 0x2c
   17834:	adds	r3, r3, #1
   17838:	adc	r2, r2, #0
   1783c:	vmrs	APSR_nzcv, fpscr
   17840:	str	r3, [r5, #40]	; 0x28
   17844:	str	r2, [r5, #44]	; 0x2c
   17848:	ble	178f4 <UnityAssertFloatsWithin@@Base+0x170>
   1784c:	ldr	r3, [r5, #48]	; 0x30
   17850:	ldr	r2, [r5, #52]	; 0x34
   17854:	adds	r3, r3, #1
   17858:	adc	r2, r2, #0
   1785c:	str	r3, [r5, #48]	; 0x30
   17860:	str	r2, [r5, #52]	; 0x34
   17864:	mov	r0, r1
   17868:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   1786c:	ldr	r3, [r5, #56]	; 0x38
   17870:	ldr	r2, [r5, #60]	; 0x3c
   17874:	ldr	r0, [pc, #216]	; 17954 <UnityAssertFloatsWithin@@Base+0x1d0>
   17878:	adds	r3, r3, #1
   1787c:	adc	r2, r2, #0
   17880:	str	r3, [r5, #56]	; 0x38
   17884:	str	r2, [r5, #60]	; 0x3c
   17888:	bl	15268 <UnityPrint@@Base>
   1788c:	ldr	r3, [r5, #64]	; 0x40
   17890:	mov	r0, r6
   17894:	ldr	r2, [r5, #68]	; 0x44
   17898:	adds	r3, r3, #1
   1789c:	adc	r2, r2, #0
   178a0:	str	r3, [r5, #64]	; 0x40
   178a4:	str	r2, [r5, #68]	; 0x44
   178a8:	bl	15684 <UnityPrint@@Base+0x41c>
   178ac:	ldr	r3, [r5, #72]	; 0x48
   178b0:	mov	r0, #1
   178b4:	mov	r1, r0
   178b8:	ldr	r2, [r5, #76]	; 0x4c
   178bc:	str	r0, [r4, #32]
   178c0:	adds	r3, r3, r0
   178c4:	ldr	r0, [pc, #140]	; 17958 <UnityAssertFloatsWithin@@Base+0x1d4>
   178c8:	adc	r2, r2, #0
   178cc:	str	r3, [r5, #72]	; 0x48
   178d0:	str	r2, [r5, #76]	; 0x4c
   178d4:	bl	11fcc <longjmp@plt>
   178d8:	ldr	r2, [pc, #112]	; 17950 <UnityAssertFloatsWithin@@Base+0x1cc>
   178dc:	ldr	r3, [r2, #8]
   178e0:	ldr	r1, [r2, #12]
   178e4:	adds	r3, r3, #1
   178e8:	adc	r1, r1, #0
   178ec:	str	r3, [r2, #8]
   178f0:	str	r1, [r2, #12]
   178f4:	ldrd	r4, [sp]
   178f8:	ldr	r6, [sp, #8]
   178fc:	add	sp, sp, #12
   17900:	pop	{pc}		; (ldr pc, [sp], #4)
   17904:	ldr	r2, [pc, #68]	; 17950 <UnityAssertFloatsWithin@@Base+0x1cc>
   17908:	ldrd	r4, [sp]
   1790c:	ldr	r6, [sp, #8]
   17910:	add	sp, sp, #12
   17914:	ldr	r3, [r2]
   17918:	ldr	r1, [r2, #4]
   1791c:	adds	r3, r3, #1
   17920:	adc	r1, r1, #0
   17924:	str	r3, [r2]
   17928:	str	r1, [r2, #4]
   1792c:	pop	{pc}		; (ldr pc, [sp], #4)
   17930:	ldr	r3, [r5, #32]
   17934:	ldr	r2, [r5, #36]	; 0x24
   17938:	adds	r3, r3, #1
   1793c:	adc	r2, r2, #0
   17940:	str	r3, [r5, #32]
   17944:	str	r2, [r5, #36]	; 0x24
   17948:	b	17864 <UnityAssertFloatsWithin@@Base+0xe0>
   1794c:	andeq	r0, r0, r0
   17950:	andeq	pc, r2, r0, lsl #22
   17954:	andeq	sp, r1, r0, lsr #19
   17958:	andeq	r0, r3, r0, lsl #9

0001795c <UnityAssertFloatSpecial@@Base>:
   1795c:	ldr	r3, [pc, #1184]	; 17e04 <UnityAssertFloatSpecial@@Base+0x4a8>
   17960:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17964:	movw	r5, #1112	; 0x458
   17968:	movt	r5, #3
   1796c:	ldr	ip, [r5, #32]
   17970:	strd	r6, [sp, #8]
   17974:	strd	r8, [sp, #16]
   17978:	ldrd	r8, [r3]
   1797c:	str	sl, [sp, #24]
   17980:	ldrd	r6, [r3, #8]
   17984:	cmp	ip, #0
   17988:	str	lr, [sp, #28]
   1798c:	sub	sp, sp, #24
   17990:	ldrne	r4, [pc, #1136]	; 17e08 <UnityAssertFloatSpecial@@Base+0x4ac>
   17994:	strd	r8, [sp, #8]
   17998:	strd	r6, [sp, #16]
   1799c:	bne	179f8 <UnityAssertFloatSpecial@@Base+0x9c>
   179a0:	ldr	r3, [r5, #36]	; 0x24
   179a4:	cmp	r3, #0
   179a8:	bne	179dc <UnityAssertFloatSpecial@@Base+0x80>
   179ac:	lsr	sl, r2, #1
   179b0:	cmp	r2, #7
   179b4:	ldrls	pc, [pc, r2, lsl #2]
   179b8:	b	17dcc <UnityAssertFloatSpecial@@Base+0x470>
   179bc:	andeq	r7, r1, r8, lsl #25
   179c0:	andeq	r7, r1, r8, lsl #25
   179c4:	andeq	r7, r1, r8, lsl #24
   179c8:	andeq	r7, r1, r8, lsl #24
   179cc:	andeq	r7, r1, r8, lsl #21
   179d0:	andeq	r7, r1, r8, lsl #21
   179d4:	andeq	r7, r1, ip, lsr #20
   179d8:	andeq	r7, r1, ip, lsr #20
   179dc:	ldr	r4, [pc, #1060]	; 17e08 <UnityAssertFloatSpecial@@Base+0x4ac>
   179e0:	ldr	r3, [r4]
   179e4:	ldr	r2, [r4, #4]
   179e8:	adds	r3, r3, #1
   179ec:	adc	r2, r2, #0
   179f0:	str	r3, [r4]
   179f4:	str	r2, [r4, #4]
   179f8:	ldr	r3, [r4, #8]
   179fc:	ldr	r2, [r4, #12]
   17a00:	adds	r3, r3, #1
   17a04:	adc	r2, r2, #0
   17a08:	str	r3, [r4, #8]
   17a0c:	str	r2, [r4, #12]
   17a10:	add	sp, sp, #24
   17a14:	ldrd	r4, [sp]
   17a18:	ldrd	r6, [sp, #8]
   17a1c:	ldrd	r8, [sp, #16]
   17a20:	ldr	sl, [sp, #24]
   17a24:	add	sp, sp, #28
   17a28:	pop	{pc}		; (ldr pc, [sp], #4)
   17a2c:	vldr	s14, [pc, #972]	; 17e00 <UnityAssertFloatSpecial@@Base+0x4a4>
   17a30:	vabs.f32	s15, s0
   17a34:	ldr	r4, [pc, #972]	; 17e08 <UnityAssertFloatSpecial@@Base+0x4ac>
   17a38:	vcmp.f32	s15, s14
   17a3c:	ldr	r3, [r4, #48]	; 0x30
   17a40:	ldr	ip, [r4, #52]	; 0x34
   17a44:	adds	r3, r3, #1
   17a48:	adc	ip, ip, #0
   17a4c:	vmrs	APSR_nzcv, fpscr
   17a50:	str	r3, [r4, #48]	; 0x30
   17a54:	str	ip, [r4, #52]	; 0x34
   17a58:	bgt	17d10 <UnityAssertFloatSpecial@@Base+0x3b4>
   17a5c:	vcmp.f32	s0, s0
   17a60:	vmrs	APSR_nzcv, fpscr
   17a64:	bvs	17d08 <UnityAssertFloatSpecial@@Base+0x3ac>
   17a68:	ldr	ip, [r4, #104]	; 0x68
   17a6c:	mov	r3, #1
   17a70:	ldr	lr, [r4, #108]	; 0x6c
   17a74:	adds	ip, ip, r3
   17a78:	adc	lr, lr, #0
   17a7c:	str	ip, [r4, #104]	; 0x68
   17a80:	str	lr, [r4, #108]	; 0x6c
   17a84:	b	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17a88:	ldr	r4, [pc, #888]	; 17e08 <UnityAssertFloatSpecial@@Base+0x4ac>
   17a8c:	vcmp.f32	s0, s0
   17a90:	ldr	r3, [r4, #40]	; 0x28
   17a94:	ldr	ip, [r4, #44]	; 0x2c
   17a98:	adds	r3, r3, #1
   17a9c:	adc	ip, ip, #0
   17aa0:	vmrs	APSR_nzcv, fpscr
   17aa4:	str	r3, [r4, #40]	; 0x28
   17aa8:	str	ip, [r4, #44]	; 0x2c
   17aac:	movvs	r3, #1
   17ab0:	movvc	r3, #0
   17ab4:	and	r2, r2, #1
   17ab8:	cmp	r3, r2
   17abc:	beq	17a10 <UnityAssertFloatSpecial@@Base+0xb4>
   17ac0:	ldr	r3, [r4, #112]	; 0x70
   17ac4:	mov	r6, r0
   17ac8:	mov	r0, r1
   17acc:	str	r2, [sp, #4]
   17ad0:	ldr	r1, [r4, #116]	; 0x74
   17ad4:	adds	r3, r3, #1
   17ad8:	adc	r1, r1, #0
   17adc:	str	r3, [r4, #112]	; 0x70
   17ae0:	str	r1, [r4, #116]	; 0x74
   17ae4:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   17ae8:	ldr	r3, [r4, #120]	; 0x78
   17aec:	movw	r0, #55480	; 0xd8b8
   17af0:	movt	r0, #1
   17af4:	ldr	r1, [r4, #124]	; 0x7c
   17af8:	adds	r3, r3, #1
   17afc:	adc	r1, r1, #0
   17b00:	str	r3, [r4, #120]	; 0x78
   17b04:	str	r1, [r4, #124]	; 0x7c
   17b08:	bl	15268 <UnityPrint@@Base>
   17b0c:	ldr	r3, [r4, #128]	; 0x80
   17b10:	add	r2, sp, #24
   17b14:	add	sl, r2, sl, lsl #2
   17b18:	ldr	r1, [r4, #132]	; 0x84
   17b1c:	ldr	r2, [sp, #4]
   17b20:	adds	r3, r3, #1
   17b24:	ldr	r7, [sl, #-16]
   17b28:	adc	r1, r1, #0
   17b2c:	str	r3, [r4, #128]	; 0x80
   17b30:	cmp	r2, #0
   17b34:	str	r1, [r4, #132]	; 0x84
   17b38:	beq	17d50 <UnityAssertFloatSpecial@@Base+0x3f4>
   17b3c:	mov	r0, r7
   17b40:	bl	15268 <UnityPrint@@Base>
   17b44:	ldr	r3, [r4, #152]	; 0x98
   17b48:	ldr	r2, [r4, #156]	; 0x9c
   17b4c:	ldr	r0, [pc, #696]	; 17e0c <UnityAssertFloatSpecial@@Base+0x4b0>
   17b50:	adds	r3, r3, #1
   17b54:	adc	r2, r2, #0
   17b58:	str	r3, [r4, #152]	; 0x98
   17b5c:	str	r2, [r4, #156]	; 0x9c
   17b60:	bl	15268 <UnityPrint@@Base>
   17b64:	ldr	r2, [r4, #160]	; 0xa0
   17b68:	ldr	r0, [r4, #164]	; 0xa4
   17b6c:	ldr	r3, [r4, #168]	; 0xa8
   17b70:	adds	r2, r2, #1
   17b74:	ldr	r1, [r4, #172]	; 0xac
   17b78:	adc	r0, r0, #0
   17b7c:	str	r2, [r4, #160]	; 0xa0
   17b80:	adds	r3, r3, #1
   17b84:	str	r0, [r4, #164]	; 0xa4
   17b88:	ldr	r0, [pc, #640]	; 17e10 <UnityAssertFloatSpecial@@Base+0x4b4>
   17b8c:	adc	r2, r1, #0
   17b90:	str	r3, [r4, #168]	; 0xa8
   17b94:	str	r2, [r4, #172]	; 0xac
   17b98:	bl	15268 <UnityPrint@@Base>
   17b9c:	ldr	r3, [r4, #176]	; 0xb0
   17ba0:	ldr	r2, [r4, #180]	; 0xb4
   17ba4:	adds	r3, r3, #1
   17ba8:	adc	r2, r2, #0
   17bac:	str	r3, [r4, #176]	; 0xb0
   17bb0:	str	r2, [r4, #180]	; 0xb4
   17bb4:	mov	r0, r7
   17bb8:	bl	15268 <UnityPrint@@Base>
   17bbc:	ldr	r3, [r4, #184]	; 0xb8
   17bc0:	mov	r0, r6
   17bc4:	ldr	r2, [r4, #188]	; 0xbc
   17bc8:	adds	r3, r3, #1
   17bcc:	adc	r2, r2, #0
   17bd0:	str	r3, [r4, #184]	; 0xb8
   17bd4:	str	r2, [r4, #188]	; 0xbc
   17bd8:	bl	15684 <UnityPrint@@Base+0x41c>
   17bdc:	ldr	r3, [r4, #192]	; 0xc0
   17be0:	mov	r0, #1
   17be4:	mov	r1, r0
   17be8:	ldr	r2, [r4, #196]	; 0xc4
   17bec:	str	r0, [r5, #32]
   17bf0:	adds	r3, r3, r0
   17bf4:	ldr	r0, [pc, #536]	; 17e14 <UnityAssertFloatSpecial@@Base+0x4b8>
   17bf8:	adc	r2, r2, #0
   17bfc:	str	r3, [r4, #192]	; 0xc0
   17c00:	str	r2, [r4, #196]	; 0xc4
   17c04:	bl	11fcc <longjmp@plt>
   17c08:	ldr	r4, [pc, #504]	; 17e08 <UnityAssertFloatSpecial@@Base+0x4ac>
   17c0c:	vcmpe.f32	s0, #0.0
   17c10:	vabs.f32	s15, s0
   17c14:	vldr	s14, [pc, #484]	; 17e00 <UnityAssertFloatSpecial@@Base+0x4a4>
   17c18:	ldr	r3, [r4, #32]
   17c1c:	ldr	ip, [r4, #36]	; 0x24
   17c20:	adds	r3, r3, #1
   17c24:	adc	ip, ip, #0
   17c28:	vmrs	APSR_nzcv, fpscr
   17c2c:	vcmp.f32	s15, s14
   17c30:	str	r3, [r4, #32]
   17c34:	str	ip, [r4, #36]	; 0x24
   17c38:	movmi	r3, #1
   17c3c:	movpl	r3, #0
   17c40:	vmrs	APSR_nzcv, fpscr
   17c44:	ble	17d08 <UnityAssertFloatSpecial@@Base+0x3ac>
   17c48:	vmov	ip, s0
   17c4c:	ldr	lr, [r4, #72]	; 0x48
   17c50:	ldr	r6, [r4, #76]	; 0x4c
   17c54:	adds	lr, lr, #1
   17c58:	adc	r6, r6, #0
   17c5c:	cmp	ip, #0
   17c60:	str	lr, [r4, #72]	; 0x48
   17c64:	str	r6, [r4, #76]	; 0x4c
   17c68:	blt	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17c6c:	ldr	ip, [r4, #80]	; 0x50
   17c70:	ldr	lr, [r4, #84]	; 0x54
   17c74:	adds	ip, ip, #1
   17c78:	adc	lr, lr, #0
   17c7c:	str	ip, [r4, #80]	; 0x50
   17c80:	str	lr, [r4, #84]	; 0x54
   17c84:	b	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17c88:	ldr	r4, [pc, #376]	; 17e08 <UnityAssertFloatSpecial@@Base+0x4ac>
   17c8c:	vcmpe.f32	s0, #0.0
   17c90:	vabs.f32	s15, s0
   17c94:	vldr	s14, [pc, #356]	; 17e00 <UnityAssertFloatSpecial@@Base+0x4a4>
   17c98:	ldr	r3, [r4, #24]
   17c9c:	ldr	ip, [r4, #28]
   17ca0:	adds	r3, r3, #1
   17ca4:	adc	ip, ip, #0
   17ca8:	vmrs	APSR_nzcv, fpscr
   17cac:	vcmp.f32	s15, s14
   17cb0:	str	r3, [r4, #24]
   17cb4:	str	ip, [r4, #28]
   17cb8:	movgt	r3, #1
   17cbc:	movle	r3, #0
   17cc0:	vmrs	APSR_nzcv, fpscr
   17cc4:	ble	17d08 <UnityAssertFloatSpecial@@Base+0x3ac>
   17cc8:	vmov	ip, s0
   17ccc:	ldr	lr, [r4, #56]	; 0x38
   17cd0:	ldr	r6, [r4, #60]	; 0x3c
   17cd4:	adds	lr, lr, #1
   17cd8:	adc	r6, r6, #0
   17cdc:	cmp	ip, #0
   17ce0:	str	lr, [r4, #56]	; 0x38
   17ce4:	str	r6, [r4, #60]	; 0x3c
   17ce8:	blt	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17cec:	ldr	ip, [r4, #64]	; 0x40
   17cf0:	ldr	lr, [r4, #68]	; 0x44
   17cf4:	adds	ip, ip, #1
   17cf8:	adc	lr, lr, #0
   17cfc:	str	ip, [r4, #64]	; 0x40
   17d00:	str	lr, [r4, #68]	; 0x44
   17d04:	b	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17d08:	mov	r3, #0
   17d0c:	b	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17d10:	vmov	r3, s0
   17d14:	ldr	ip, [r4, #88]	; 0x58
   17d18:	ldr	lr, [r4, #92]	; 0x5c
   17d1c:	adds	ip, ip, #1
   17d20:	adc	lr, lr, #0
   17d24:	ands	r3, r3, #-2147483648	; 0x80000000
   17d28:	str	ip, [r4, #88]	; 0x58
   17d2c:	str	lr, [r4, #92]	; 0x5c
   17d30:	bne	17d08 <UnityAssertFloatSpecial@@Base+0x3ac>
   17d34:	ldr	ip, [r4, #96]	; 0x60
   17d38:	ldr	lr, [r4, #100]	; 0x64
   17d3c:	adds	ip, ip, #1
   17d40:	adc	lr, lr, #0
   17d44:	str	ip, [r4, #96]	; 0x60
   17d48:	str	lr, [r4, #100]	; 0x64
   17d4c:	b	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17d50:	ldr	r3, [r4, #136]	; 0x88
   17d54:	ldr	r2, [r4, #140]	; 0x8c
   17d58:	ldr	r0, [pc, #176]	; 17e10 <UnityAssertFloatSpecial@@Base+0x4b4>
   17d5c:	adds	r3, r3, #1
   17d60:	adc	r2, r2, #0
   17d64:	str	r3, [r4, #136]	; 0x88
   17d68:	str	r2, [r4, #140]	; 0x8c
   17d6c:	bl	15268 <UnityPrint@@Base>
   17d70:	ldr	r3, [r4, #144]	; 0x90
   17d74:	mov	r0, r7
   17d78:	ldr	r2, [r4, #148]	; 0x94
   17d7c:	adds	r3, r3, #1
   17d80:	adc	r2, r2, #0
   17d84:	str	r3, [r4, #144]	; 0x90
   17d88:	str	r2, [r4, #148]	; 0x94
   17d8c:	bl	15268 <UnityPrint@@Base>
   17d90:	ldr	r3, [r4, #152]	; 0x98
   17d94:	ldr	r2, [r4, #156]	; 0x9c
   17d98:	ldr	r0, [pc, #108]	; 17e0c <UnityAssertFloatSpecial@@Base+0x4b0>
   17d9c:	adds	r3, r3, #1
   17da0:	adc	r2, r2, #0
   17da4:	str	r3, [r4, #152]	; 0x98
   17da8:	str	r2, [r4, #156]	; 0x9c
   17dac:	bl	15268 <UnityPrint@@Base>
   17db0:	ldr	r3, [r4, #160]	; 0xa0
   17db4:	ldr	r2, [r4, #164]	; 0xa4
   17db8:	adds	r3, r3, #1
   17dbc:	adc	r2, r2, #0
   17dc0:	str	r3, [r4, #160]	; 0xa0
   17dc4:	str	r2, [r4, #164]	; 0xa4
   17dc8:	b	17bb4 <UnityAssertFloatSpecial@@Base+0x258>
   17dcc:	ldr	r4, [pc, #52]	; 17e08 <UnityAssertFloatSpecial@@Base+0x4ac>
   17dd0:	mov	sl, #0
   17dd4:	mvn	r3, r2
   17dd8:	and	r3, r3, #1
   17ddc:	ldr	r6, [pc, #52]	; 17e18 <UnityAssertFloatSpecial@@Base+0x4bc>
   17de0:	ldr	ip, [r4, #16]
   17de4:	ldr	lr, [r4, #20]
   17de8:	str	r6, [sp, #8]
   17dec:	adds	ip, ip, #1
   17df0:	adc	lr, lr, sl
   17df4:	str	ip, [r4, #16]
   17df8:	str	lr, [r4, #20]
   17dfc:	b	17ab4 <UnityAssertFloatSpecial@@Base+0x158>
   17e00:	svcvc	0x007fffff
   17e04:			; <UNDEFINED> instruction: 0x0001d9bc
   17e08:	andeq	pc, r2, r0, asr fp	; <UNPREDICTABLE>
   17e0c:	andeq	sp, r1, ip, asr #17
   17e10:	andeq	sp, r1, r0, ror #19
   17e14:	andeq	r0, r3, r0, lsl #9
   17e18:	andeq	sp, r1, ip, asr #19

00017e1c <UnityAssertNumbersWithin@@Base>:
   17e1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17e20:	movw	r4, #1112	; 0x458
   17e24:	movt	r4, #3
   17e28:	ldr	ip, [r4, #32]
   17e2c:	strd	r6, [sp, #8]
   17e30:	strd	r8, [sp, #16]
   17e34:	str	sl, [sp, #24]
   17e38:	str	lr, [sp, #28]
   17e3c:	cmp	ip, #0
   17e40:	bne	17ecc <UnityAssertNumbersWithin@@Base+0xb0>
   17e44:	ldr	ip, [r4, #36]	; 0x24
   17e48:	cmp	ip, #0
   17e4c:	bne	17e98 <UnityAssertNumbersWithin@@Base+0x7c>
   17e50:	ldr	ip, [sp, #36]	; 0x24
   17e54:	ldr	r5, [pc, #624]	; 180cc <UnityAssertNumbersWithin@@Base+0x2b0>
   17e58:	tst	ip, #16
   17e5c:	beq	17eec <UnityAssertNumbersWithin@@Base+0xd0>
   17e60:	cmp	r2, r1
   17e64:	ble	1809c <UnityAssertNumbersWithin@@Base+0x280>
   17e68:	ldr	lr, [r5, #8]
   17e6c:	sub	ip, r2, r1
   17e70:	ldr	r6, [r5, #12]
   17e74:	adds	lr, lr, #1
   17e78:	adc	r6, r6, #0
   17e7c:	cmp	ip, r0
   17e80:	str	lr, [r5, #8]
   17e84:	movls	ip, #0
   17e88:	movhi	ip, #1
   17e8c:	str	r6, [r5, #12]
   17e90:	str	ip, [r4, #32]
   17e94:	b	17f20 <UnityAssertNumbersWithin@@Base+0x104>
   17e98:	ldr	r2, [pc, #556]	; 180cc <UnityAssertNumbersWithin@@Base+0x2b0>
   17e9c:	ldr	r3, [r2]
   17ea0:	ldr	r1, [r2, #4]
   17ea4:	adds	r3, r3, #1
   17ea8:	adc	r1, r1, #0
   17eac:	str	r3, [r2]
   17eb0:	str	r1, [r2, #4]
   17eb4:	ldrd	r4, [sp]
   17eb8:	ldrd	r6, [sp, #8]
   17ebc:	ldrd	r8, [sp, #16]
   17ec0:	ldr	sl, [sp, #24]
   17ec4:	add	sp, sp, #28
   17ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   17ecc:	ldr	r2, [pc, #504]	; 180cc <UnityAssertNumbersWithin@@Base+0x2b0>
   17ed0:	ldr	r3, [r2, #-8]
   17ed4:	ldr	r1, [r2, #-4]
   17ed8:	adds	r3, r3, #1
   17edc:	adc	r1, r1, #0
   17ee0:	str	r3, [r2, #-8]
   17ee4:	str	r1, [r2, #-4]
   17ee8:	b	17eb4 <UnityAssertNumbersWithin@@Base+0x98>
   17eec:	cmp	r2, r1
   17ef0:	bhi	1806c <UnityAssertNumbersWithin@@Base+0x250>
   17ef4:	ldr	lr, [r5, #32]
   17ef8:	sub	ip, r1, r2
   17efc:	ldr	r6, [r5, #36]	; 0x24
   17f00:	adds	lr, lr, #1
   17f04:	adc	r6, r6, #0
   17f08:	cmp	ip, r0
   17f0c:	str	lr, [r5, #32]
   17f10:	movls	ip, #0
   17f14:	movhi	ip, #1
   17f18:	str	r6, [r5, #36]	; 0x24
   17f1c:	str	ip, [r4, #32]
   17f20:	cmp	ip, #0
   17f24:	beq	17eb4 <UnityAssertNumbersWithin@@Base+0x98>
   17f28:	mov	r6, r3
   17f2c:	ldr	r3, [r5, #40]	; 0x28
   17f30:	mov	r7, r2
   17f34:	mov	r9, r0
   17f38:	mov	r8, r1
   17f3c:	ldr	r2, [r5, #44]	; 0x2c
   17f40:	ldr	r0, [sp, #32]
   17f44:	adds	r3, r3, #1
   17f48:	adc	r2, r2, #0
   17f4c:	str	r3, [r5, #40]	; 0x28
   17f50:	str	r2, [r5, #44]	; 0x2c
   17f54:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   17f58:	ldr	r3, [r5, #48]	; 0x30
   17f5c:	ldr	r2, [r5, #52]	; 0x34
   17f60:	ldr	r0, [pc, #360]	; 180d0 <UnityAssertNumbersWithin@@Base+0x2b4>
   17f64:	adds	r3, r3, #1
   17f68:	adc	r2, r2, #0
   17f6c:	str	r3, [r5, #48]	; 0x30
   17f70:	str	r2, [r5, #52]	; 0x34
   17f74:	bl	15268 <UnityPrint@@Base>
   17f78:	ldr	r3, [r5, #56]	; 0x38
   17f7c:	mov	r0, r9
   17f80:	ldr	r2, [r5, #60]	; 0x3c
   17f84:	ldr	r1, [sp, #36]	; 0x24
   17f88:	adds	r3, r3, #1
   17f8c:	adc	r2, r2, #0
   17f90:	str	r3, [r5, #56]	; 0x38
   17f94:	str	r2, [r5, #60]	; 0x3c
   17f98:	bl	16380 <UnityPrintNumberByStyle@@Base>
   17f9c:	ldr	r3, [r5, #64]	; 0x40
   17fa0:	movw	r0, #55480	; 0xd8b8
   17fa4:	movt	r0, #1
   17fa8:	ldr	r2, [r5, #68]	; 0x44
   17fac:	adds	r3, r3, #1
   17fb0:	adc	r2, r2, #0
   17fb4:	str	r3, [r5, #64]	; 0x40
   17fb8:	str	r2, [r5, #68]	; 0x44
   17fbc:	bl	15268 <UnityPrint@@Base>
   17fc0:	ldr	r3, [r5, #72]	; 0x48
   17fc4:	mov	r0, r8
   17fc8:	ldr	r2, [r5, #76]	; 0x4c
   17fcc:	ldr	r1, [sp, #36]	; 0x24
   17fd0:	adds	r3, r3, #1
   17fd4:	adc	r2, r2, #0
   17fd8:	str	r3, [r5, #72]	; 0x48
   17fdc:	str	r2, [r5, #76]	; 0x4c
   17fe0:	bl	16380 <UnityPrintNumberByStyle@@Base>
   17fe4:	ldr	r1, [r5, #80]	; 0x50
   17fe8:	ldr	r3, [r5, #84]	; 0x54
   17fec:	ldr	r0, [pc, #224]	; 180d4 <UnityAssertNumbersWithin@@Base+0x2b8>
   17ff0:	adds	r1, r1, #1
   17ff4:	adc	r3, r3, #0
   17ff8:	str	r1, [r5, #80]	; 0x50
   17ffc:	str	r3, [r5, #84]	; 0x54
   18000:	bl	15268 <UnityPrint@@Base>
   18004:	ldr	ip, [r5, #88]	; 0x58
   18008:	mov	r0, r7
   1800c:	ldr	r3, [r5, #92]	; 0x5c
   18010:	ldr	r1, [sp, #36]	; 0x24
   18014:	adds	ip, ip, #1
   18018:	adc	r3, r3, #0
   1801c:	str	ip, [r5, #88]	; 0x58
   18020:	str	r3, [r5, #92]	; 0x5c
   18024:	bl	16380 <UnityPrintNumberByStyle@@Base>
   18028:	ldrd	r2, [r5, #96]	; 0x60
   1802c:	mov	r0, r6
   18030:	adds	r2, r2, #1
   18034:	adc	r3, r3, #0
   18038:	strd	r2, [r5, #96]	; 0x60
   1803c:	bl	15684 <UnityPrint@@Base+0x41c>
   18040:	ldr	r3, [r5, #104]	; 0x68
   18044:	mov	r0, #1
   18048:	mov	r1, r0
   1804c:	ldr	r2, [r5, #108]	; 0x6c
   18050:	str	r0, [r4, #32]
   18054:	adds	r3, r3, r0
   18058:	ldr	r0, [pc, #120]	; 180d8 <UnityAssertNumbersWithin@@Base+0x2bc>
   1805c:	adc	r2, r2, #0
   18060:	str	r3, [r5, #104]	; 0x68
   18064:	str	r2, [r5, #108]	; 0x6c
   18068:	bl	11fcc <longjmp@plt>
   1806c:	ldr	lr, [r5, #24]
   18070:	sub	ip, r2, r1
   18074:	ldr	r6, [r5, #28]
   18078:	adds	lr, lr, #1
   1807c:	adc	r6, r6, #0
   18080:	cmp	ip, r0
   18084:	str	lr, [r5, #24]
   18088:	movls	ip, #0
   1808c:	movhi	ip, #1
   18090:	str	r6, [r5, #28]
   18094:	str	ip, [r4, #32]
   18098:	b	17f20 <UnityAssertNumbersWithin@@Base+0x104>
   1809c:	ldr	lr, [r5, #16]
   180a0:	sub	ip, r1, r2
   180a4:	ldr	r6, [r5, #20]
   180a8:	adds	lr, lr, #1
   180ac:	adc	r6, r6, #0
   180b0:	cmp	ip, r0
   180b4:	str	lr, [r5, #16]
   180b8:	movls	ip, #0
   180bc:	movhi	ip, #1
   180c0:	str	r6, [r5, #20]
   180c4:	str	ip, [r4, #32]
   180c8:	b	17f20 <UnityAssertNumbersWithin@@Base+0x104>
   180cc:	andeq	pc, r2, r0, lsr #24
   180d0:	andeq	sp, r1, r0, lsr #19
   180d4:	andeq	sp, r1, ip, asr #17
   180d8:	andeq	r0, r3, r0, lsl #9

000180dc <UnityAssertEqualString@@Base>:
   180dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   180e0:	strd	r6, [sp, #8]
   180e4:	movw	r7, #1112	; 0x458
   180e8:	movt	r7, #3
   180ec:	ldr	ip, [r7, #32]
   180f0:	strd	r8, [sp, #16]
   180f4:	str	sl, [sp, #24]
   180f8:	str	lr, [sp, #28]
   180fc:	cmp	ip, #0
   18100:	bne	181f4 <UnityAssertEqualString@@Base+0x118>
   18104:	ldr	ip, [r7, #36]	; 0x24
   18108:	cmp	ip, #0
   1810c:	bne	181ac <UnityAssertEqualString@@Base+0xd0>
   18110:	cmp	r0, #0
   18114:	cmpne	r1, #0
   18118:	beq	18214 <UnityAssertEqualString@@Base+0x138>
   1811c:	ldrb	lr, [r0]
   18120:	ldr	r4, [pc, #496]	; 18318 <UnityAssertEqualString@@Base+0x23c>
   18124:	ldrb	r5, [r1]
   18128:	cmp	lr, #0
   1812c:	ldr	ip, [r4, #24]
   18130:	ldr	r6, [r4, #28]
   18134:	beq	18168 <UnityAssertEqualString@@Base+0x8c>
   18138:	cmp	r5, lr
   1813c:	moveq	r9, r0
   18140:	moveq	r8, r1
   18144:	bne	18188 <UnityAssertEqualString@@Base+0xac>
   18148:	ldrb	lr, [r9, #1]!
   1814c:	adds	ip, ip, #1
   18150:	adc	r6, r6, #0
   18154:	ldrb	r5, [r8, #1]!
   18158:	cmp	lr, #0
   1815c:	bne	181e0 <UnityAssertEqualString@@Base+0x104>
   18160:	str	ip, [r4, #24]
   18164:	str	r6, [r4, #28]
   18168:	ldr	ip, [r4, #32]
   1816c:	ldr	lr, [r4, #36]	; 0x24
   18170:	adds	ip, ip, #1
   18174:	adc	lr, lr, #0
   18178:	cmp	r5, #0
   1817c:	str	ip, [r4, #32]
   18180:	str	lr, [r4, #36]	; 0x24
   18184:	beq	182fc <UnityAssertEqualString@@Base+0x220>
   18188:	ldr	ip, [r4, #16]
   1818c:	mov	r5, #1
   18190:	ldr	lr, [r4, #20]
   18194:	str	r5, [r7, #32]
   18198:	adds	ip, ip, r5
   1819c:	adc	lr, lr, #0
   181a0:	str	ip, [r4, #16]
   181a4:	str	lr, [r4, #20]
   181a8:	b	18240 <UnityAssertEqualString@@Base+0x164>
   181ac:	ldr	r2, [pc, #356]	; 18318 <UnityAssertEqualString@@Base+0x23c>
   181b0:	ldr	r3, [r2, #8]
   181b4:	ldr	r1, [r2, #12]
   181b8:	adds	r3, r3, #1
   181bc:	adc	r1, r1, #0
   181c0:	str	r3, [r2, #8]
   181c4:	str	r1, [r2, #12]
   181c8:	ldrd	r4, [sp]
   181cc:	ldrd	r6, [sp, #8]
   181d0:	ldrd	r8, [sp, #16]
   181d4:	ldr	sl, [sp, #24]
   181d8:	add	sp, sp, #28
   181dc:	pop	{pc}		; (ldr pc, [sp], #4)
   181e0:	cmp	lr, r5
   181e4:	beq	18148 <UnityAssertEqualString@@Base+0x6c>
   181e8:	str	ip, [r4, #24]
   181ec:	str	r6, [r4, #28]
   181f0:	b	18188 <UnityAssertEqualString@@Base+0xac>
   181f4:	ldr	r2, [pc, #284]	; 18318 <UnityAssertEqualString@@Base+0x23c>
   181f8:	ldr	r3, [r2]
   181fc:	ldr	r1, [r2, #4]
   18200:	adds	r3, r3, #1
   18204:	adc	r1, r1, #0
   18208:	str	r3, [r2]
   1820c:	str	r1, [r2, #4]
   18210:	b	181c8 <UnityAssertEqualString@@Base+0xec>
   18214:	cmp	r0, r1
   18218:	beq	182dc <UnityAssertEqualString@@Base+0x200>
   1821c:	ldr	r4, [pc, #244]	; 18318 <UnityAssertEqualString@@Base+0x23c>
   18220:	mov	ip, #1
   18224:	str	ip, [r7, #32]
   18228:	ldr	ip, [r4, #48]	; 0x30
   1822c:	ldr	lr, [r4, #52]	; 0x34
   18230:	adds	ip, ip, #1
   18234:	adc	lr, lr, #0
   18238:	str	ip, [r4, #48]	; 0x30
   1823c:	str	lr, [r4, #52]	; 0x34
   18240:	ldr	ip, [r4, #64]	; 0x40
   18244:	mov	r6, r0
   18248:	mov	r0, r3
   1824c:	mov	r5, r2
   18250:	mov	r8, r1
   18254:	ldr	r3, [r4, #68]	; 0x44
   18258:	adds	ip, ip, #1
   1825c:	adc	r3, r3, #0
   18260:	str	ip, [r4, #64]	; 0x40
   18264:	str	r3, [r4, #68]	; 0x44
   18268:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   1826c:	ldr	r3, [r4, #72]	; 0x48
   18270:	mov	r1, r8
   18274:	mov	r0, r6
   18278:	ldr	r2, [r4, #76]	; 0x4c
   1827c:	adds	r3, r3, #1
   18280:	adc	r2, r2, #0
   18284:	str	r3, [r4, #72]	; 0x48
   18288:	str	r2, [r4, #76]	; 0x4c
   1828c:	bl	15470 <UnityPrint@@Base+0x208>
   18290:	ldr	r3, [r4, #80]	; 0x50
   18294:	mov	r0, r5
   18298:	ldr	r2, [r4, #84]	; 0x54
   1829c:	adds	r3, r3, #1
   182a0:	adc	r2, r2, #0
   182a4:	str	r3, [r4, #80]	; 0x50
   182a8:	str	r2, [r4, #84]	; 0x54
   182ac:	bl	15684 <UnityPrint@@Base+0x41c>
   182b0:	ldr	r3, [r4, #88]	; 0x58
   182b4:	mov	r0, #1
   182b8:	mov	r1, r0
   182bc:	ldr	r2, [r4, #92]	; 0x5c
   182c0:	str	r0, [r7, #32]
   182c4:	adds	r3, r3, r0
   182c8:	ldr	r0, [pc, #76]	; 1831c <UnityAssertEqualString@@Base+0x240>
   182cc:	adc	r2, r2, #0
   182d0:	str	r3, [r4, #88]	; 0x58
   182d4:	str	r2, [r4, #92]	; 0x5c
   182d8:	bl	11fcc <longjmp@plt>
   182dc:	ldr	r2, [pc, #52]	; 18318 <UnityAssertEqualString@@Base+0x23c>
   182e0:	ldr	r3, [r2, #56]	; 0x38
   182e4:	ldr	r1, [r2, #60]	; 0x3c
   182e8:	adds	r3, r3, #1
   182ec:	adc	r1, r1, #0
   182f0:	str	r3, [r2, #56]	; 0x38
   182f4:	str	r1, [r2, #60]	; 0x3c
   182f8:	b	181c8 <UnityAssertEqualString@@Base+0xec>
   182fc:	ldr	r3, [r4, #40]	; 0x28
   18300:	ldr	r2, [r4, #44]	; 0x2c
   18304:	adds	r3, r3, #1
   18308:	adc	r2, r2, #0
   1830c:	str	r3, [r4, #40]	; 0x28
   18310:	str	r2, [r4, #44]	; 0x2c
   18314:	b	181c8 <UnityAssertEqualString@@Base+0xec>
   18318:	muleq	r2, r0, ip
   1831c:	andeq	r0, r3, r0, lsl #9

00018320 <UnityAssertEqualStringLen@@Base>:
   18320:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18324:	strd	r6, [sp, #8]
   18328:	movw	r7, #1112	; 0x458
   1832c:	movt	r7, #3
   18330:	ldr	ip, [r7, #32]
   18334:	strd	r8, [sp, #16]
   18338:	strd	sl, [sp, #24]
   1833c:	str	lr, [sp, #32]
   18340:	sub	sp, sp, #12
   18344:	cmp	ip, #0
   18348:	bne	18460 <UnityAssertEqualStringLen@@Base+0x140>
   1834c:	ldr	r6, [r7, #36]	; 0x24
   18350:	cmp	r6, #0
   18354:	bne	18428 <UnityAssertEqualStringLen@@Base+0x108>
   18358:	cmp	r0, #0
   1835c:	cmpne	r1, #0
   18360:	mov	r9, r2
   18364:	str	r3, [sp, #4]
   18368:	mov	r8, r1
   1836c:	mov	sl, r0
   18370:	beq	18480 <UnityAssertEqualStringLen@@Base+0x160>
   18374:	ldrb	r2, [r0]
   18378:	ldr	r4, [pc, #1136]	; 187f0 <UnityAssertEqualStringLen@@Base+0x4d0>
   1837c:	cmp	r2, #0
   18380:	ldr	r3, [r4, #24]
   18384:	ldr	ip, [r4, #28]
   18388:	beq	183e0 <UnityAssertEqualStringLen@@Base+0xc0>
   1838c:	cmp	r9, #0
   18390:	beq	1840c <UnityAssertEqualStringLen@@Base+0xec>
   18394:	ldrb	r1, [r1]
   18398:	cmp	r1, r2
   1839c:	bne	1867c <UnityAssertEqualStringLen@@Base+0x35c>
   183a0:	sub	r2, r9, #1
   183a4:	adds	r3, r3, #1
   183a8:	add	r2, r2, r8
   183ac:	adc	ip, ip, #0
   183b0:	mov	lr, r8
   183b4:	rsb	r1, r8, #1
   183b8:	str	r2, [sp]
   183bc:	mov	r2, r0
   183c0:	ldrb	r5, [r2, #1]!
   183c4:	mov	fp, r3
   183c8:	mov	r0, ip
   183cc:	add	r6, r1, lr
   183d0:	cmp	r5, #0
   183d4:	bne	18654 <UnityAssertEqualStringLen@@Base+0x334>
   183d8:	str	r3, [r4, #24]
   183dc:	str	ip, [r4, #28]
   183e0:	ldr	r3, [r4, #32]
   183e4:	ldr	r2, [r4, #36]	; 0x24
   183e8:	ldrb	r1, [r8, r6]
   183ec:	adds	r3, r3, #1
   183f0:	adc	r2, r2, #0
   183f4:	str	r3, [r4, #32]
   183f8:	cmp	r1, #0
   183fc:	str	r2, [r4, #36]	; 0x24
   18400:	beq	1878c <UnityAssertEqualStringLen@@Base+0x46c>
   18404:	cmp	r9, r6
   18408:	bhi	1867c <UnityAssertEqualStringLen@@Base+0x35c>
   1840c:	ldr	r3, [r4, #48]	; 0x30
   18410:	ldr	r2, [r4, #52]	; 0x34
   18414:	adds	r3, r3, #1
   18418:	adc	r2, r2, #0
   1841c:	str	r3, [r4, #48]	; 0x30
   18420:	str	r2, [r4, #52]	; 0x34
   18424:	b	18444 <UnityAssertEqualStringLen@@Base+0x124>
   18428:	ldr	r2, [pc, #960]	; 187f0 <UnityAssertEqualStringLen@@Base+0x4d0>
   1842c:	ldr	r3, [r2, #8]
   18430:	ldr	r1, [r2, #12]
   18434:	adds	r3, r3, #1
   18438:	adc	r1, r1, #0
   1843c:	str	r3, [r2, #8]
   18440:	str	r1, [r2, #12]
   18444:	add	sp, sp, #12
   18448:	ldrd	r4, [sp]
   1844c:	ldrd	r6, [sp, #8]
   18450:	ldrd	r8, [sp, #16]
   18454:	ldrd	sl, [sp, #24]
   18458:	add	sp, sp, #32
   1845c:	pop	{pc}		; (ldr pc, [sp], #4)
   18460:	ldr	r2, [pc, #904]	; 187f0 <UnityAssertEqualStringLen@@Base+0x4d0>
   18464:	ldr	r3, [r2]
   18468:	ldr	r1, [r2, #4]
   1846c:	adds	r3, r3, #1
   18470:	adc	r1, r1, #0
   18474:	str	r3, [r2]
   18478:	str	r1, [r2, #4]
   1847c:	b	18444 <UnityAssertEqualStringLen@@Base+0x124>
   18480:	cmp	r0, r1
   18484:	beq	18634 <UnityAssertEqualStringLen@@Base+0x314>
   18488:	ldr	r4, [pc, #864]	; 187f0 <UnityAssertEqualStringLen@@Base+0x4d0>
   1848c:	mov	r3, #1
   18490:	str	r3, [r7, #32]
   18494:	ldr	r0, [sp, #48]	; 0x30
   18498:	ldr	r2, [r4, #56]	; 0x38
   1849c:	add	r5, r4, #112	; 0x70
   184a0:	ldr	ip, [r4, #60]	; 0x3c
   184a4:	ldr	r3, [r4, #72]	; 0x48
   184a8:	adds	r2, r2, #1
   184ac:	ldr	r1, [r4, #76]	; 0x4c
   184b0:	adc	ip, ip, #0
   184b4:	str	r2, [r4, #56]	; 0x38
   184b8:	adds	r3, r3, #1
   184bc:	str	ip, [r4, #60]	; 0x3c
   184c0:	adc	r2, r1, #0
   184c4:	str	r3, [r4, #72]	; 0x48
   184c8:	str	r2, [r4, #76]	; 0x4c
   184cc:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   184d0:	ldr	r2, [r4, #80]	; 0x50
   184d4:	movw	r0, #55480	; 0xd8b8
   184d8:	movt	r0, #1
   184dc:	ldr	r3, [r5, #-8]
   184e0:	ldr	ip, [r4, #84]	; 0x54
   184e4:	adds	r2, r2, #1
   184e8:	ldr	r1, [r5, #-4]
   184ec:	str	r2, [r4, #80]	; 0x50
   184f0:	adc	ip, ip, #0
   184f4:	adds	r3, r3, #1
   184f8:	adc	r2, r1, #0
   184fc:	str	r3, [r5, #-8]
   18500:	str	ip, [r4, #84]	; 0x54
   18504:	str	r2, [r5, #-4]
   18508:	bl	15268 <UnityPrint@@Base>
   1850c:	cmp	sl, #0
   18510:	bne	186fc <UnityAssertEqualStringLen@@Base+0x3dc>
   18514:	ldr	r3, [r5, #8]
   18518:	ldr	r2, [r5, #12]
   1851c:	ldr	r0, [pc, #720]	; 187f4 <UnityAssertEqualStringLen@@Base+0x4d4>
   18520:	adds	r3, r3, #1
   18524:	adc	r2, r2, #0
   18528:	str	r3, [r5, #8]
   1852c:	str	r2, [r5, #12]
   18530:	bl	15268 <UnityPrint@@Base>
   18534:	ldr	r3, [r5, #40]	; 0x28
   18538:	ldr	r2, [r5, #44]	; 0x2c
   1853c:	adds	r3, r3, #1
   18540:	adc	r2, r2, #0
   18544:	str	r3, [r5, #40]	; 0x28
   18548:	str	r2, [r5, #44]	; 0x2c
   1854c:	ldr	r0, [pc, #676]	; 187f8 <UnityAssertEqualStringLen@@Base+0x4d8>
   18550:	bl	15268 <UnityPrint@@Base>
   18554:	cmp	r8, #0
   18558:	beq	187b4 <UnityAssertEqualStringLen@@Base+0x494>
   1855c:	ldr	r3, [r5, #48]	; 0x30
   18560:	movw	r6, #60468	; 0xec34
   18564:	movt	r6, #2
   18568:	mov	r0, #39	; 0x27
   1856c:	ldr	r2, [r5, #52]	; 0x34
   18570:	ldr	r1, [r6]
   18574:	adds	r3, r3, #1
   18578:	adc	r2, r2, #0
   1857c:	str	r3, [r5, #48]	; 0x30
   18580:	str	r2, [r5, #52]	; 0x34
   18584:	bl	120f8 <putc@plt>
   18588:	ldr	r3, [r5, #64]	; 0x40
   1858c:	mov	r1, r9
   18590:	mov	r0, r8
   18594:	ldr	r2, [r5, #68]	; 0x44
   18598:	adds	r3, r3, #1
   1859c:	adc	r2, r2, #0
   185a0:	str	r3, [r5, #64]	; 0x40
   185a4:	str	r2, [r5, #68]	; 0x44
   185a8:	bl	15838 <UnityPrintLen@@Base>
   185ac:	ldr	r3, [r5, #72]	; 0x48
   185b0:	mov	r0, #39	; 0x27
   185b4:	ldr	r2, [r5, #76]	; 0x4c
   185b8:	ldr	r1, [r6]
   185bc:	adds	r3, r3, #1
   185c0:	adc	r2, r2, #0
   185c4:	str	r3, [r5, #72]	; 0x48
   185c8:	str	r2, [r5, #76]	; 0x4c
   185cc:	bl	120f8 <putc@plt>
   185d0:	ldr	r3, [r5, #80]	; 0x50
   185d4:	ldr	r2, [r5, #84]	; 0x54
   185d8:	adds	r3, r3, #1
   185dc:	adc	r2, r2, #0
   185e0:	str	r3, [r5, #80]	; 0x50
   185e4:	str	r2, [r5, #84]	; 0x54
   185e8:	ldr	r3, [r4, #88]	; 0x58
   185ec:	ldr	r2, [r4, #92]	; 0x5c
   185f0:	ldr	r0, [sp, #4]
   185f4:	adds	r3, r3, #1
   185f8:	adc	r2, r2, #0
   185fc:	str	r3, [r4, #88]	; 0x58
   18600:	str	r2, [r4, #92]	; 0x5c
   18604:	bl	15684 <UnityPrint@@Base+0x41c>
   18608:	ldr	r3, [r4, #96]	; 0x60
   1860c:	mov	r0, #1
   18610:	mov	r1, r0
   18614:	ldr	r2, [r4, #100]	; 0x64
   18618:	str	r0, [r7, #32]
   1861c:	adds	r3, r3, r0
   18620:	ldr	r0, [pc, #468]	; 187fc <UnityAssertEqualStringLen@@Base+0x4dc>
   18624:	adc	r2, r2, #0
   18628:	str	r3, [r4, #96]	; 0x60
   1862c:	str	r2, [r4, #100]	; 0x64
   18630:	bl	11fcc <longjmp@plt>
   18634:	ldr	r2, [pc, #436]	; 187f0 <UnityAssertEqualStringLen@@Base+0x4d0>
   18638:	ldr	r3, [r2, #64]	; 0x40
   1863c:	ldr	r1, [r2, #68]	; 0x44
   18640:	adds	r3, r3, #1
   18644:	adc	r1, r1, #0
   18648:	str	r3, [r2, #64]	; 0x40
   1864c:	str	r1, [r2, #68]	; 0x44
   18650:	b	18444 <UnityAssertEqualStringLen@@Base+0x124>
   18654:	ldr	r6, [sp]
   18658:	cmp	lr, r6
   1865c:	beq	187a8 <UnityAssertEqualStringLen@@Base+0x488>
   18660:	ldrb	r6, [lr, #1]!
   18664:	adds	r3, r3, #1
   18668:	adc	ip, ip, #0
   1866c:	cmp	r6, r5
   18670:	beq	183c0 <UnityAssertEqualStringLen@@Base+0xa0>
   18674:	str	fp, [r4, #24]
   18678:	str	r0, [r4, #28]
   1867c:	mov	r3, #1
   18680:	ldr	r2, [r4, #16]
   18684:	str	r3, [r7, #32]
   18688:	ldr	ip, [r4, #20]
   1868c:	ldr	r3, [r4, #72]	; 0x48
   18690:	adds	r2, r2, #1
   18694:	ldr	r1, [r4, #76]	; 0x4c
   18698:	adc	ip, ip, #0
   1869c:	str	r2, [r4, #16]
   186a0:	ldr	r5, [pc, #344]	; 18800 <UnityAssertEqualStringLen@@Base+0x4e0>
   186a4:	adds	r3, r3, #1
   186a8:	str	ip, [r4, #20]
   186ac:	ldr	r0, [sp, #48]	; 0x30
   186b0:	adc	r2, r1, #0
   186b4:	str	r3, [r4, #72]	; 0x48
   186b8:	str	r2, [r4, #76]	; 0x4c
   186bc:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   186c0:	ldr	r2, [r4, #80]	; 0x50
   186c4:	movw	r0, #55480	; 0xd8b8
   186c8:	movt	r0, #1
   186cc:	ldr	r3, [r5, #-8]
   186d0:	ldr	ip, [r4, #84]	; 0x54
   186d4:	adds	r2, r2, #1
   186d8:	ldr	r1, [r5, #-4]
   186dc:	str	r2, [r4, #80]	; 0x50
   186e0:	adc	ip, ip, #0
   186e4:	adds	r3, r3, #1
   186e8:	adc	r2, r1, #0
   186ec:	str	r3, [r5, #-8]
   186f0:	str	ip, [r4, #84]	; 0x54
   186f4:	str	r2, [r5, #-4]
   186f8:	bl	15268 <UnityPrint@@Base>
   186fc:	ldr	r3, [r5]
   18700:	movw	r6, #60468	; 0xec34
   18704:	movt	r6, #2
   18708:	mov	r0, #39	; 0x27
   1870c:	ldr	r2, [r5, #4]
   18710:	ldr	r1, [r6]
   18714:	adds	r3, r3, #1
   18718:	adc	r2, r2, #0
   1871c:	str	r3, [r5]
   18720:	str	r2, [r5, #4]
   18724:	bl	120f8 <putc@plt>
   18728:	ldr	r3, [r5, #16]
   1872c:	mov	r0, sl
   18730:	mov	r1, r9
   18734:	ldr	r2, [r5, #20]
   18738:	adds	r3, r3, #1
   1873c:	adc	r2, r2, #0
   18740:	str	r3, [r5, #16]
   18744:	str	r2, [r5, #20]
   18748:	bl	15838 <UnityPrintLen@@Base>
   1874c:	ldr	r3, [r5, #24]
   18750:	mov	r0, #39	; 0x27
   18754:	ldr	r2, [r5, #28]
   18758:	ldr	r1, [r6]
   1875c:	adds	r3, r3, #1
   18760:	adc	r2, r2, #0
   18764:	str	r3, [r5, #24]
   18768:	str	r2, [r5, #28]
   1876c:	bl	120f8 <putc@plt>
   18770:	ldr	r3, [r5, #32]
   18774:	ldr	r2, [r5, #36]	; 0x24
   18778:	adds	r3, r3, #1
   1877c:	adc	r2, r2, #0
   18780:	str	r3, [r5, #32]
   18784:	str	r2, [r5, #36]	; 0x24
   18788:	b	1854c <UnityAssertEqualStringLen@@Base+0x22c>
   1878c:	ldr	r3, [r4, #40]	; 0x28
   18790:	ldr	r2, [r4, #44]	; 0x2c
   18794:	adds	r3, r3, #1
   18798:	adc	r2, r2, #0
   1879c:	str	r3, [r4, #40]	; 0x28
   187a0:	str	r2, [r4, #44]	; 0x2c
   187a4:	b	18444 <UnityAssertEqualStringLen@@Base+0x124>
   187a8:	str	r3, [r4, #24]
   187ac:	str	ip, [r4, #28]
   187b0:	b	1840c <UnityAssertEqualStringLen@@Base+0xec>
   187b4:	ldr	r3, [r5, #56]	; 0x38
   187b8:	ldr	r2, [r5, #60]	; 0x3c
   187bc:	ldr	r0, [pc, #48]	; 187f4 <UnityAssertEqualStringLen@@Base+0x4d4>
   187c0:	adds	r3, r3, #1
   187c4:	adc	r2, r2, #0
   187c8:	str	r3, [r5, #56]	; 0x38
   187cc:	str	r2, [r5, #60]	; 0x3c
   187d0:	bl	15268 <UnityPrint@@Base>
   187d4:	ldr	r3, [r5, #88]	; 0x58
   187d8:	ldr	r2, [r5, #92]	; 0x5c
   187dc:	adds	r3, r3, #1
   187e0:	adc	r2, r2, #0
   187e4:	str	r3, [r5, #88]	; 0x58
   187e8:	str	r2, [r5, #92]	; 0x5c
   187ec:	b	185e8 <UnityAssertEqualStringLen@@Base+0x2c8>
   187f0:	strdeq	pc, [r2], -r0
   187f4:	andeq	sp, r1, r4, asr #17
   187f8:	andeq	sp, r1, ip, asr #17
   187fc:	andeq	r0, r3, r0, lsl #9
   18800:	andeq	pc, r2, r0, ror #26

00018804 <UnityAssertEqualStringArray@@Base>:
   18804:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18808:	strd	r6, [sp, #8]
   1880c:	strd	sl, [sp, #24]
   18810:	movw	fp, #1112	; 0x458
   18814:	movt	fp, #3
   18818:	ldr	ip, [fp, #32]
   1881c:	strd	r8, [sp, #16]
   18820:	str	lr, [sp, #32]
   18824:	sub	sp, sp, #68	; 0x44
   18828:	cmp	ip, #0
   1882c:	bne	18d44 <UnityAssertEqualStringArray@@Base+0x540>
   18830:	ldr	r7, [fp, #36]	; 0x24
   18834:	cmp	r7, #0
   18838:	bne	18ae0 <UnityAssertEqualStringArray@@Base+0x2dc>
   1883c:	ldr	r4, [pc, #1736]	; 18f0c <UnityAssertEqualStringArray@@Base+0x708>
   18840:	mov	lr, r2
   18844:	str	lr, [sp, #28]
   18848:	str	r3, [sp, #60]	; 0x3c
   1884c:	ldr	r2, [r4, #16]
   18850:	ldr	ip, [r4, #20]
   18854:	adds	r2, r2, #1
   18858:	adc	ip, ip, #0
   1885c:	cmp	lr, #0
   18860:	str	r2, [r4, #16]
   18864:	str	ip, [r4, #20]
   18868:	beq	18d80 <UnityAssertEqualStringArray@@Base+0x57c>
   1886c:	ldr	r2, [sp, #104]	; 0x68
   18870:	mov	r6, r0
   18874:	mov	r5, r1
   18878:	bl	15e7c <UnityPrintNumber@@Base+0x410>
   1887c:	ldr	r3, [r4, #56]	; 0x38
   18880:	ldr	r2, [r4, #60]	; 0x3c
   18884:	adds	r3, r3, #1
   18888:	adc	r2, r2, #0
   1888c:	cmp	r0, #1
   18890:	str	r3, [r4, #56]	; 0x38
   18894:	str	r2, [r4, #60]	; 0x3c
   18898:	beq	18d64 <UnityAssertEqualStringArray@@Base+0x560>
   1889c:	ldr	r3, [fp, #32]
   188a0:	mov	r0, r6
   188a4:	mov	r1, r5
   188a8:	mov	sl, r7
   188ac:	mov	r9, r7
   188b0:	str	fp, [sp, #4]
   188b4:	ldr	r6, [r4, #92]	; 0x5c
   188b8:	mov	fp, r0
   188bc:	str	r7, [sp, #24]
   188c0:	ldr	r2, [r4, #104]	; 0x68
   188c4:	ldr	r5, [r4, #96]	; 0x60
   188c8:	ldr	r8, [r4, #100]	; 0x64
   188cc:	str	r2, [sp, #16]
   188d0:	str	r3, [sp, #32]
   188d4:	ldr	r3, [r4, #72]	; 0x48
   188d8:	str	r7, [sp, #44]	; 0x2c
   188dc:	ldr	r2, [r4, #108]	; 0x6c
   188e0:	str	r3, [sp, #8]
   188e4:	ldr	r3, [r4, #76]	; 0x4c
   188e8:	str	r7, [sp, #56]	; 0x38
   188ec:	str	r2, [sp, #20]
   188f0:	ldr	r2, [r4, #120]	; 0x78
   188f4:	str	r3, [sp, #12]
   188f8:	ldr	r3, [r4, #88]	; 0x58
   188fc:	str	r2, [sp, #48]	; 0x30
   18900:	ldr	r2, [r4, #124]	; 0x7c
   18904:	str	r2, [sp, #52]	; 0x34
   18908:	str	fp, [sp, #36]	; 0x24
   1890c:	ldr	r2, [fp], #4
   18910:	str	r1, [sp, #40]	; 0x28
   18914:	ldr	r0, [r1], #4
   18918:	cmp	r2, #0
   1891c:	beq	18bf8 <UnityAssertEqualStringArray@@Base+0x3f4>
   18920:	cmp	r0, #0
   18924:	bne	18b18 <UnityAssertEqualStringArray@@Base+0x314>
   18928:	cmp	r9, #0
   1892c:	ldr	fp, [sp, #4]
   18930:	strne	r3, [r4, #88]	; 0x58
   18934:	ldr	r3, [sp, #56]	; 0x38
   18938:	strne	r6, [r4, #92]	; 0x5c
   1893c:	cmp	r3, #0
   18940:	strne	r5, [r4, #96]	; 0x60
   18944:	strne	r8, [r4, #100]	; 0x64
   18948:	cmp	sl, #0
   1894c:	beq	18960 <UnityAssertEqualStringArray@@Base+0x15c>
   18950:	ldr	r3, [sp, #16]
   18954:	str	r3, [r4, #104]	; 0x68
   18958:	ldr	r3, [sp, #20]
   1895c:	str	r3, [r4, #108]	; 0x6c
   18960:	ldr	r3, [sp, #24]
   18964:	cmp	r3, #0
   18968:	beq	1897c <UnityAssertEqualStringArray@@Base+0x178>
   1896c:	ldr	r3, [sp, #8]
   18970:	str	r3, [r4, #72]	; 0x48
   18974:	ldr	r3, [sp, #12]
   18978:	str	r3, [r4, #76]	; 0x4c
   1897c:	ldr	r3, [sp, #44]	; 0x2c
   18980:	cmp	r3, #0
   18984:	beq	18998 <UnityAssertEqualStringArray@@Base+0x194>
   18988:	ldr	r3, [sp, #48]	; 0x30
   1898c:	str	r3, [r4, #120]	; 0x78
   18990:	ldr	r3, [sp, #52]	; 0x34
   18994:	str	r3, [r4, #124]	; 0x7c
   18998:	ldr	r3, [r4, #112]	; 0x70
   1899c:	mov	r1, #1
   189a0:	ldr	r2, [r4, #116]	; 0x74
   189a4:	str	r1, [fp, #32]
   189a8:	adds	r3, r3, r1
   189ac:	adc	r2, r2, #0
   189b0:	str	r3, [r4, #112]	; 0x70
   189b4:	str	r2, [r4, #116]	; 0x74
   189b8:	ldr	r5, [pc, #1360]	; 18f10 <UnityAssertEqualStringArray@@Base+0x70c>
   189bc:	ldr	r2, [r4, #128]	; 0x80
   189c0:	ldr	ip, [r4, #132]	; 0x84
   189c4:	ldr	r3, [r5]
   189c8:	adds	r2, r2, #1
   189cc:	ldr	r0, [r5, #4]
   189d0:	adc	ip, ip, #0
   189d4:	str	r2, [r4, #128]	; 0x80
   189d8:	ldr	r1, [sp, #104]	; 0x68
   189dc:	adds	r3, r3, #1
   189e0:	str	ip, [r4, #132]	; 0x84
   189e4:	adc	r2, r0, #0
   189e8:	ldr	r0, [fp]
   189ec:	str	r3, [r5]
   189f0:	str	r2, [r5, #4]
   189f4:	bl	15cb4 <UnityPrintNumber@@Base+0x248>
   189f8:	ldr	r3, [r5, #8]
   189fc:	ldr	r2, [r5, #12]
   18a00:	ldr	r0, [pc, #1292]	; 18f14 <UnityAssertEqualStringArray@@Base+0x710>
   18a04:	adds	r3, r3, #1
   18a08:	adc	r2, r2, #0
   18a0c:	str	r3, [r5, #8]
   18a10:	str	r2, [r5, #12]
   18a14:	bl	15268 <UnityPrint@@Base>
   18a18:	ldr	r3, [r5, #16]
   18a1c:	movw	r1, #60468	; 0xec34
   18a20:	movt	r1, #2
   18a24:	mov	r0, #58	; 0x3a
   18a28:	ldr	r2, [r5, #20]
   18a2c:	ldr	r1, [r1]
   18a30:	adds	r3, r3, #1
   18a34:	adc	r2, r2, #0
   18a38:	str	r3, [r5, #16]
   18a3c:	str	r2, [r5, #20]
   18a40:	bl	120f8 <putc@plt>
   18a44:	ldr	r2, [r5, #24]
   18a48:	ldr	r0, [r5, #28]
   18a4c:	ldr	r3, [r4, #136]	; 0x88
   18a50:	adds	r2, r2, #1
   18a54:	ldr	r1, [r4, #140]	; 0x8c
   18a58:	adc	r0, r0, #0
   18a5c:	str	r2, [r5, #24]
   18a60:	adds	r3, r3, #1
   18a64:	str	r0, [r5, #28]
   18a68:	adc	r2, r1, #0
   18a6c:	ldr	r1, [sp, #28]
   18a70:	str	r3, [r4, #136]	; 0x88
   18a74:	str	r2, [r4, #140]	; 0x8c
   18a78:	cmp	r1, #1
   18a7c:	bhi	18e0c <UnityAssertEqualStringArray@@Base+0x608>
   18a80:	ldr	r3, [sp, #40]	; 0x28
   18a84:	ldr	r1, [r3]
   18a88:	ldr	r3, [sp, #36]	; 0x24
   18a8c:	ldr	r0, [r3]
   18a90:	bl	15470 <UnityPrint@@Base+0x208>
   18a94:	ldr	r3, [r4, #168]	; 0xa8
   18a98:	ldr	r2, [r4, #172]	; 0xac
   18a9c:	ldr	r0, [sp, #60]	; 0x3c
   18aa0:	adds	r3, r3, #1
   18aa4:	adc	r2, r2, #0
   18aa8:	str	r3, [r4, #168]	; 0xa8
   18aac:	str	r2, [r4, #172]	; 0xac
   18ab0:	bl	15684 <UnityPrint@@Base+0x41c>
   18ab4:	ldr	r3, [r4, #176]	; 0xb0
   18ab8:	mov	r0, #1
   18abc:	mov	r1, r0
   18ac0:	ldr	r2, [r4, #180]	; 0xb4
   18ac4:	str	r0, [fp, #32]
   18ac8:	adds	r3, r3, r0
   18acc:	ldr	r0, [pc, #1092]	; 18f18 <UnityAssertEqualStringArray@@Base+0x714>
   18ad0:	adc	r2, r2, #0
   18ad4:	str	r3, [r4, #176]	; 0xb0
   18ad8:	str	r2, [r4, #180]	; 0xb4
   18adc:	bl	11fcc <longjmp@plt>
   18ae0:	ldr	r2, [pc, #1060]	; 18f0c <UnityAssertEqualStringArray@@Base+0x708>
   18ae4:	ldr	r3, [r2, #8]
   18ae8:	ldr	r1, [r2, #12]
   18aec:	adds	r3, r3, #1
   18af0:	adc	r1, r1, #0
   18af4:	str	r3, [r2, #8]
   18af8:	str	r1, [r2, #12]
   18afc:	add	sp, sp, #68	; 0x44
   18b00:	ldrd	r4, [sp]
   18b04:	ldrd	r6, [sp, #8]
   18b08:	ldrd	r8, [sp, #16]
   18b0c:	ldrd	sl, [sp, #24]
   18b10:	add	sp, sp, #32
   18b14:	pop	{pc}		; (ldr pc, [sp], #4)
   18b18:	ldrb	lr, [r2]
   18b1c:	ldrb	ip, [r0]
   18b20:	cmp	lr, #0
   18b24:	beq	18b4c <UnityAssertEqualStringArray@@Base+0x348>
   18b28:	cmp	lr, ip
   18b2c:	bne	18edc <UnityAssertEqualStringArray@@Base+0x6d8>
   18b30:	ldrb	lr, [r2, #1]!
   18b34:	adds	r3, r3, #1
   18b38:	adc	r6, r6, #0
   18b3c:	ldrb	ip, [r0, #1]!
   18b40:	cmp	lr, #0
   18b44:	bne	18be8 <UnityAssertEqualStringArray@@Base+0x3e4>
   18b48:	mov	r9, #1
   18b4c:	adds	r5, r5, #1
   18b50:	adc	r8, r8, #0
   18b54:	cmp	ip, #0
   18b58:	beq	18cc8 <UnityAssertEqualStringArray@@Base+0x4c4>
   18b5c:	cmp	r9, #0
   18b60:	str	r5, [r4, #96]	; 0x60
   18b64:	str	r8, [r4, #100]	; 0x64
   18b68:	strne	r3, [r4, #88]	; 0x58
   18b6c:	strne	r6, [r4, #92]	; 0x5c
   18b70:	cmp	sl, #0
   18b74:	ldr	fp, [sp, #4]
   18b78:	beq	18b8c <UnityAssertEqualStringArray@@Base+0x388>
   18b7c:	ldr	r3, [sp, #16]
   18b80:	str	r3, [r4, #104]	; 0x68
   18b84:	ldr	r3, [sp, #20]
   18b88:	str	r3, [r4, #108]	; 0x6c
   18b8c:	ldr	r3, [sp, #24]
   18b90:	cmp	r3, #0
   18b94:	beq	18ba8 <UnityAssertEqualStringArray@@Base+0x3a4>
   18b98:	ldr	r3, [sp, #8]
   18b9c:	str	r3, [r4, #72]	; 0x48
   18ba0:	ldr	r3, [sp, #12]
   18ba4:	str	r3, [r4, #76]	; 0x4c
   18ba8:	ldr	r3, [sp, #44]	; 0x2c
   18bac:	cmp	r3, #0
   18bb0:	beq	18bc4 <UnityAssertEqualStringArray@@Base+0x3c0>
   18bb4:	ldr	r3, [sp, #48]	; 0x30
   18bb8:	str	r3, [r4, #120]	; 0x78
   18bbc:	ldr	r3, [sp, #52]	; 0x34
   18bc0:	str	r3, [r4, #124]	; 0x7c
   18bc4:	ldr	r3, [r4, #80]	; 0x50
   18bc8:	mov	r1, #1
   18bcc:	ldr	r2, [r4, #84]	; 0x54
   18bd0:	str	r1, [fp, #32]
   18bd4:	adds	r3, r3, r1
   18bd8:	adc	r2, r2, #0
   18bdc:	str	r3, [r4, #80]	; 0x50
   18be0:	str	r2, [r4, #84]	; 0x54
   18be4:	b	189b8 <UnityAssertEqualStringArray@@Base+0x1b4>
   18be8:	cmp	lr, ip
   18bec:	beq	18b30 <UnityAssertEqualStringArray@@Base+0x32c>
   18bf0:	ldr	fp, [sp, #4]
   18bf4:	b	18ee8 <UnityAssertEqualStringArray@@Base+0x6e4>
   18bf8:	ldr	r2, [sp, #8]
   18bfc:	adds	r2, r2, #1
   18c00:	str	r2, [sp, #8]
   18c04:	ldr	r2, [sp, #12]
   18c08:	adc	r2, r2, #0
   18c0c:	cmp	r0, #0
   18c10:	str	r2, [sp, #12]
   18c14:	bne	18cec <UnityAssertEqualStringArray@@Base+0x4e8>
   18c18:	ldr	r2, [sp, #48]	; 0x30
   18c1c:	ldr	r0, [sp, #52]	; 0x34
   18c20:	adds	r2, r2, #1
   18c24:	adc	r0, r0, #0
   18c28:	str	r2, [sp, #48]	; 0x30
   18c2c:	mov	r2, #1
   18c30:	str	r2, [sp, #24]
   18c34:	str	r2, [sp, #44]	; 0x2c
   18c38:	str	r0, [sp, #52]	; 0x34
   18c3c:	ldr	r2, [sp, #32]
   18c40:	cmp	r2, #0
   18c44:	bne	18e68 <UnityAssertEqualStringArray@@Base+0x664>
   18c48:	ldr	r2, [sp, #28]
   18c4c:	add	r7, r7, #1
   18c50:	cmp	r2, r7
   18c54:	bne	18908 <UnityAssertEqualStringArray@@Base+0x104>
   18c58:	cmp	r9, #0
   18c5c:	strne	r3, [r4, #88]	; 0x58
   18c60:	ldr	r3, [sp, #56]	; 0x38
   18c64:	strne	r6, [r4, #92]	; 0x5c
   18c68:	cmp	r3, #0
   18c6c:	strne	r5, [r4, #96]	; 0x60
   18c70:	strne	r8, [r4, #100]	; 0x64
   18c74:	cmp	sl, #0
   18c78:	beq	18c8c <UnityAssertEqualStringArray@@Base+0x488>
   18c7c:	ldr	r3, [sp, #16]
   18c80:	str	r3, [r4, #104]	; 0x68
   18c84:	ldr	r3, [sp, #20]
   18c88:	str	r3, [r4, #108]	; 0x6c
   18c8c:	ldr	r3, [sp, #24]
   18c90:	cmp	r3, #0
   18c94:	beq	18ca8 <UnityAssertEqualStringArray@@Base+0x4a4>
   18c98:	ldr	r3, [sp, #8]
   18c9c:	str	r3, [r4, #72]	; 0x48
   18ca0:	ldr	r3, [sp, #12]
   18ca4:	str	r3, [r4, #76]	; 0x4c
   18ca8:	ldr	r3, [sp, #44]	; 0x2c
   18cac:	cmp	r3, #0
   18cb0:	beq	18afc <UnityAssertEqualStringArray@@Base+0x2f8>
   18cb4:	ldr	r3, [sp, #48]	; 0x30
   18cb8:	str	r3, [r4, #120]	; 0x78
   18cbc:	ldr	r3, [sp, #52]	; 0x34
   18cc0:	str	r3, [r4, #124]	; 0x7c
   18cc4:	b	18afc <UnityAssertEqualStringArray@@Base+0x2f8>
   18cc8:	ldr	r2, [sp, #16]
   18ccc:	mov	sl, #1
   18cd0:	str	sl, [sp, #56]	; 0x38
   18cd4:	adds	r2, r2, #1
   18cd8:	str	r2, [sp, #16]
   18cdc:	ldr	r2, [sp, #20]
   18ce0:	adc	r2, r2, #0
   18ce4:	str	r2, [sp, #20]
   18ce8:	b	18c3c <UnityAssertEqualStringArray@@Base+0x438>
   18cec:	cmp	r9, #0
   18cf0:	ldr	fp, [sp, #4]
   18cf4:	strne	r3, [r4, #88]	; 0x58
   18cf8:	ldr	r3, [sp, #56]	; 0x38
   18cfc:	strne	r6, [r4, #92]	; 0x5c
   18d00:	cmp	r3, #0
   18d04:	strne	r5, [r4, #96]	; 0x60
   18d08:	strne	r8, [r4, #100]	; 0x64
   18d0c:	cmp	sl, #0
   18d10:	beq	18d24 <UnityAssertEqualStringArray@@Base+0x520>
   18d14:	ldr	r3, [sp, #16]
   18d18:	str	r3, [r4, #104]	; 0x68
   18d1c:	ldr	r3, [sp, #20]
   18d20:	str	r3, [r4, #108]	; 0x6c
   18d24:	ldr	r3, [sp, #44]	; 0x2c
   18d28:	cmp	r3, #0
   18d2c:	ldr	r3, [sp, #8]
   18d30:	str	r3, [r4, #72]	; 0x48
   18d34:	ldr	r3, [sp, #12]
   18d38:	str	r3, [r4, #76]	; 0x4c
   18d3c:	bne	18988 <UnityAssertEqualStringArray@@Base+0x184>
   18d40:	b	18998 <UnityAssertEqualStringArray@@Base+0x194>
   18d44:	ldr	r2, [pc, #448]	; 18f0c <UnityAssertEqualStringArray@@Base+0x708>
   18d48:	ldr	r3, [r2]
   18d4c:	ldr	r1, [r2, #4]
   18d50:	adds	r3, r3, #1
   18d54:	adc	r1, r1, #0
   18d58:	str	r3, [r2]
   18d5c:	str	r1, [r2, #4]
   18d60:	b	18afc <UnityAssertEqualStringArray@@Base+0x2f8>
   18d64:	ldr	r3, [r4, #64]	; 0x40
   18d68:	ldr	r2, [r4, #68]	; 0x44
   18d6c:	adds	r3, r3, #1
   18d70:	adc	r2, r2, #0
   18d74:	str	r3, [r4, #64]	; 0x40
   18d78:	str	r2, [r4, #68]	; 0x44
   18d7c:	b	18afc <UnityAssertEqualStringArray@@Base+0x2f8>
   18d80:	ldr	r3, [r4, #24]
   18d84:	ldr	r2, [r4, #28]
   18d88:	ldr	r0, [sp, #104]	; 0x68
   18d8c:	adds	r3, r3, #1
   18d90:	adc	r2, r2, #0
   18d94:	str	r3, [r4, #24]
   18d98:	str	r2, [r4, #28]
   18d9c:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   18da0:	ldr	r3, [r4, #32]
   18da4:	ldr	r2, [r4, #36]	; 0x24
   18da8:	ldr	r0, [pc, #364]	; 18f1c <UnityAssertEqualStringArray@@Base+0x718>
   18dac:	adds	r3, r3, #1
   18db0:	adc	r2, r2, #0
   18db4:	str	r3, [r4, #32]
   18db8:	str	r2, [r4, #36]	; 0x24
   18dbc:	bl	15268 <UnityPrint@@Base>
   18dc0:	ldr	r3, [r4, #40]	; 0x28
   18dc4:	ldr	r2, [r4, #44]	; 0x2c
   18dc8:	ldr	r0, [sp, #60]	; 0x3c
   18dcc:	adds	r3, r3, #1
   18dd0:	adc	r2, r2, #0
   18dd4:	str	r3, [r4, #40]	; 0x28
   18dd8:	str	r2, [r4, #44]	; 0x2c
   18ddc:	bl	15684 <UnityPrint@@Base+0x41c>
   18de0:	ldr	r3, [r4, #48]	; 0x30
   18de4:	mov	ip, #1
   18de8:	add	r0, fp, #40	; 0x28
   18dec:	mov	r1, ip
   18df0:	ldr	r2, [r4, #52]	; 0x34
   18df4:	str	ip, [fp, #32]
   18df8:	adds	r3, r3, ip
   18dfc:	adc	r2, r2, #0
   18e00:	str	r3, [r4, #48]	; 0x30
   18e04:	str	r2, [r4, #52]	; 0x34
   18e08:	bl	11fcc <longjmp@plt>
   18e0c:	ldr	r3, [r4, #144]	; 0x90
   18e10:	ldr	r2, [r4, #148]	; 0x94
   18e14:	ldr	r0, [pc, #260]	; 18f20 <UnityAssertEqualStringArray@@Base+0x71c>
   18e18:	adds	r3, r3, #1
   18e1c:	adc	r2, r2, #0
   18e20:	str	r3, [r4, #144]	; 0x90
   18e24:	str	r2, [r4, #148]	; 0x94
   18e28:	bl	15268 <UnityPrint@@Base>
   18e2c:	ldr	r3, [r4, #152]	; 0x98
   18e30:	mov	r0, r7
   18e34:	ldr	r2, [r4, #156]	; 0x9c
   18e38:	adds	r3, r3, #1
   18e3c:	adc	r2, r2, #0
   18e40:	str	r3, [r4, #152]	; 0x98
   18e44:	str	r2, [r4, #156]	; 0x9c
   18e48:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   18e4c:	ldr	r3, [r4, #160]	; 0xa0
   18e50:	ldr	r2, [r4, #164]	; 0xa4
   18e54:	adds	r3, r3, #1
   18e58:	adc	r2, r2, #0
   18e5c:	str	r3, [r4, #160]	; 0xa0
   18e60:	str	r2, [r4, #164]	; 0xa4
   18e64:	b	18a80 <UnityAssertEqualStringArray@@Base+0x27c>
   18e68:	cmp	r9, #0
   18e6c:	ldr	fp, [sp, #4]
   18e70:	strne	r3, [r4, #88]	; 0x58
   18e74:	ldr	r3, [sp, #56]	; 0x38
   18e78:	strne	r6, [r4, #92]	; 0x5c
   18e7c:	cmp	r3, #0
   18e80:	strne	r5, [r4, #96]	; 0x60
   18e84:	strne	r8, [r4, #100]	; 0x64
   18e88:	cmp	sl, #0
   18e8c:	beq	18ea0 <UnityAssertEqualStringArray@@Base+0x69c>
   18e90:	ldr	r3, [sp, #16]
   18e94:	str	r3, [r4, #104]	; 0x68
   18e98:	ldr	r3, [sp, #20]
   18e9c:	str	r3, [r4, #108]	; 0x6c
   18ea0:	ldr	r3, [sp, #24]
   18ea4:	cmp	r3, #0
   18ea8:	beq	18ebc <UnityAssertEqualStringArray@@Base+0x6b8>
   18eac:	ldr	r3, [sp, #8]
   18eb0:	str	r3, [r4, #72]	; 0x48
   18eb4:	ldr	r3, [sp, #12]
   18eb8:	str	r3, [r4, #76]	; 0x4c
   18ebc:	ldr	r3, [sp, #44]	; 0x2c
   18ec0:	cmp	r3, #0
   18ec4:	beq	189b8 <UnityAssertEqualStringArray@@Base+0x1b4>
   18ec8:	ldr	r3, [sp, #48]	; 0x30
   18ecc:	str	r3, [r4, #120]	; 0x78
   18ed0:	ldr	r3, [sp, #52]	; 0x34
   18ed4:	str	r3, [r4, #124]	; 0x7c
   18ed8:	b	189b8 <UnityAssertEqualStringArray@@Base+0x1b4>
   18edc:	cmp	r9, #0
   18ee0:	ldr	fp, [sp, #4]
   18ee4:	beq	18ef0 <UnityAssertEqualStringArray@@Base+0x6ec>
   18ee8:	str	r3, [r4, #88]	; 0x58
   18eec:	str	r6, [r4, #92]	; 0x5c
   18ef0:	ldr	r3, [sp, #56]	; 0x38
   18ef4:	cmp	r3, #0
   18ef8:	strne	r5, [r4, #96]	; 0x60
   18efc:	strne	r8, [r4, #100]	; 0x64
   18f00:	cmp	sl, #0
   18f04:	bne	18b7c <UnityAssertEqualStringArray@@Base+0x378>
   18f08:	b	18b8c <UnityAssertEqualStringArray@@Base+0x388>
   18f0c:	andeq	pc, r2, r0, asr #27
   18f10:	andeq	pc, r2, r0, lsr r7	; <UNPREDICTABLE>
   18f14:	strdeq	sp, [r1], -r0
   18f18:	andeq	r0, r3, r0, lsl #9
   18f1c:	andeq	sp, r1, ip, asr r9
   18f20:	muleq	r1, r4, r9

00018f24 <UnityAssertEqualMemory@@Base>:
   18f24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18f28:	movw	ip, #1112	; 0x458
   18f2c:	movt	ip, #3
   18f30:	strd	r6, [sp, #8]
   18f34:	strd	r8, [sp, #16]
   18f38:	strd	sl, [sp, #24]
   18f3c:	str	lr, [sp, #32]
   18f40:	sub	sp, sp, #36	; 0x24
   18f44:	str	ip, [sp, #16]
   18f48:	str	r3, [sp, #20]
   18f4c:	ldr	r3, [ip, #32]
   18f50:	cmp	r3, #0
   18f54:	bne	190b8 <UnityAssertEqualMemory@@Base+0x194>
   18f58:	ldr	r3, [ip, #36]	; 0x24
   18f5c:	cmp	r3, #0
   18f60:	str	r3, [sp, #24]
   18f64:	bne	19080 <UnityAssertEqualMemory@@Base+0x15c>
   18f68:	ldr	r6, [pc, #1296]	; 19480 <UnityAssertEqualMemory@@Base+0x55c>
   18f6c:	clz	ip, r2
   18f70:	mov	r8, r2
   18f74:	lsr	ip, ip, #5
   18f78:	ldr	lr, [sp, #20]
   18f7c:	ldr	r3, [r6, #8]
   18f80:	ldr	r2, [r6, #12]
   18f84:	adds	r3, r3, #1
   18f88:	adc	r2, r2, #0
   18f8c:	cmp	lr, #0
   18f90:	str	r3, [r6, #8]
   18f94:	moveq	ip, #1
   18f98:	cmp	ip, #0
   18f9c:	str	r2, [r6, #12]
   18fa0:	str	ip, [sp, #4]
   18fa4:	bne	193f0 <UnityAssertEqualMemory@@Base+0x4cc>
   18fa8:	ldr	r3, [sp, #72]	; 0x48
   18fac:	mov	r4, r0
   18fb0:	mov	r5, r1
   18fb4:	ldr	r2, [sp, #76]	; 0x4c
   18fb8:	bl	15e7c <UnityPrintNumber@@Base+0x410>
   18fbc:	ldr	r3, [r6, #48]	; 0x30
   18fc0:	ldr	r2, [r6, #52]	; 0x34
   18fc4:	adds	r3, r3, #1
   18fc8:	adc	r2, r2, #0
   18fcc:	cmp	r0, #1
   18fd0:	str	r3, [r6, #48]	; 0x30
   18fd4:	str	r2, [r6, #52]	; 0x34
   18fd8:	beq	190e8 <UnityAssertEqualMemory@@Base+0x1c4>
   18fdc:	ldr	r3, [sp, #20]
   18fe0:	ldr	r2, [r6, #72]	; 0x48
   18fe4:	ldr	r1, [r6, #76]	; 0x4c
   18fe8:	sub	r7, r3, #1
   18fec:	sub	r3, r8, #1
   18ff0:	ldr	r9, [r6, #180]	; 0xb4
   18ff4:	str	r3, [sp, #8]
   18ff8:	sub	r3, r8, #2
   18ffc:	ldr	r8, [r6, #176]	; 0xb0
   19000:	str	r3, [sp, #12]
   19004:	str	r7, [sp, #28]
   19008:	ldrb	r0, [r5]
   1900c:	ldrb	r3, [r4]
   19010:	cmp	r0, r3
   19014:	bne	193d4 <UnityAssertEqualMemory@@Base+0x4b0>
   19018:	ldr	r3, [sp, #8]
   1901c:	add	r0, r4, r3
   19020:	add	ip, r5, r3
   19024:	ldr	r3, [sp, #12]
   19028:	b	19044 <UnityAssertEqualMemory@@Base+0x120>
   1902c:	ldrb	fp, [r4]
   19030:	sub	lr, r3, #1
   19034:	ldrb	sl, [r5]
   19038:	cmp	fp, sl
   1903c:	bne	19104 <UnityAssertEqualMemory@@Base+0x1e0>
   19040:	mov	r3, lr
   19044:	adds	r2, r2, #1
   19048:	sub	r4, r0, r3
   1904c:	adc	r1, r1, #0
   19050:	cmn	r3, #1
   19054:	sub	r5, ip, r3
   19058:	bne	1902c <UnityAssertEqualMemory@@Base+0x108>
   1905c:	adds	r8, r8, #1
   19060:	mov	r0, #1
   19064:	adc	r9, r9, #0
   19068:	cmp	r7, #0
   1906c:	sub	r3, r7, #1
   19070:	str	r0, [sp, #4]
   19074:	beq	190d8 <UnityAssertEqualMemory@@Base+0x1b4>
   19078:	mov	r7, r3
   1907c:	b	19008 <UnityAssertEqualMemory@@Base+0xe4>
   19080:	ldr	r2, [pc, #1016]	; 19480 <UnityAssertEqualMemory@@Base+0x55c>
   19084:	ldr	r3, [r2]
   19088:	ldr	r1, [r2, #4]
   1908c:	adds	r3, r3, #1
   19090:	adc	r1, r1, #0
   19094:	str	r3, [r2]
   19098:	str	r1, [r2, #4]
   1909c:	add	sp, sp, #36	; 0x24
   190a0:	ldrd	r4, [sp]
   190a4:	ldrd	r6, [sp, #8]
   190a8:	ldrd	r8, [sp, #16]
   190ac:	ldrd	sl, [sp, #24]
   190b0:	add	sp, sp, #32
   190b4:	pop	{pc}		; (ldr pc, [sp], #4)
   190b8:	ldr	r2, [pc, #960]	; 19480 <UnityAssertEqualMemory@@Base+0x55c>
   190bc:	ldr	r3, [r2, #-8]
   190c0:	ldr	r1, [r2, #-4]
   190c4:	adds	r3, r3, #1
   190c8:	adc	r1, r1, #0
   190cc:	str	r3, [r2, #-8]
   190d0:	str	r1, [r2, #-4]
   190d4:	b	1909c <UnityAssertEqualMemory@@Base+0x178>
   190d8:	str	r2, [r6, #72]	; 0x48
   190dc:	str	r1, [r6, #76]	; 0x4c
   190e0:	strd	r8, [r6, #176]	; 0xb0
   190e4:	b	1909c <UnityAssertEqualMemory@@Base+0x178>
   190e8:	ldr	r3, [r6, #56]	; 0x38
   190ec:	ldr	r2, [r6, #60]	; 0x3c
   190f0:	adds	r3, r3, #1
   190f4:	adc	r2, r2, #0
   190f8:	str	r3, [r6, #56]	; 0x38
   190fc:	str	r2, [r6, #60]	; 0x3c
   19100:	b	1909c <UnityAssertEqualMemory@@Base+0x178>
   19104:	str	r2, [r6, #72]	; 0x48
   19108:	ldr	r0, [sp, #4]
   1910c:	str	r1, [r6, #76]	; 0x4c
   19110:	ldr	r2, [sp, #8]
   19114:	cmp	r0, #0
   19118:	sub	r3, r2, r3
   1911c:	strdne	r8, [r6, #176]	; 0xb0
   19120:	str	r3, [sp, #24]
   19124:	ldr	r8, [pc, #856]	; 19484 <UnityAssertEqualMemory@@Base+0x560>
   19128:	ldr	ip, [r6, #64]	; 0x40
   1912c:	ldr	r0, [r6, #68]	; 0x44
   19130:	ldr	r3, [r8]
   19134:	adds	ip, ip, #1
   19138:	ldr	r2, [r8, #4]
   1913c:	adc	r0, r0, #0
   19140:	str	ip, [r6, #64]	; 0x40
   19144:	ldr	r1, [sp, #76]	; 0x4c
   19148:	adds	r3, r3, #1
   1914c:	str	r0, [r6, #68]	; 0x44
   19150:	str	r3, [r8]
   19154:	adc	r2, r2, #0
   19158:	ldr	r3, [sp, #16]
   1915c:	str	r2, [r8, #4]
   19160:	ldr	r0, [r3]
   19164:	bl	15cb4 <UnityPrintNumber@@Base+0x248>
   19168:	ldr	r3, [r8, #8]
   1916c:	ldr	r2, [r8, #12]
   19170:	ldr	r0, [pc, #784]	; 19488 <UnityAssertEqualMemory@@Base+0x564>
   19174:	adds	r3, r3, #1
   19178:	adc	r2, r2, #0
   1917c:	str	r3, [r8, #8]
   19180:	str	r2, [r8, #12]
   19184:	bl	15268 <UnityPrint@@Base>
   19188:	ldr	r3, [r8, #16]
   1918c:	movw	r1, #60468	; 0xec34
   19190:	movt	r1, #2
   19194:	mov	r0, #58	; 0x3a
   19198:	ldr	r2, [r8, #20]
   1919c:	ldr	r1, [r1]
   191a0:	adds	r3, r3, #1
   191a4:	adc	r2, r2, #0
   191a8:	str	r3, [r8, #16]
   191ac:	str	r2, [r8, #20]
   191b0:	bl	120f8 <putc@plt>
   191b4:	ldr	r2, [r8, #24]
   191b8:	ldr	r0, [r8, #28]
   191bc:	ldr	r3, [r6, #80]	; 0x50
   191c0:	adds	r2, r2, #1
   191c4:	ldr	r1, [r6, #84]	; 0x54
   191c8:	adc	r0, r0, #0
   191cc:	str	r2, [r8, #24]
   191d0:	adds	r3, r3, #1
   191d4:	str	r0, [r8, #28]
   191d8:	ldr	r0, [pc, #684]	; 1948c <UnityAssertEqualMemory@@Base+0x568>
   191dc:	adc	r2, r1, #0
   191e0:	str	r3, [r6, #80]	; 0x50
   191e4:	str	r2, [r6, #84]	; 0x54
   191e8:	bl	15268 <UnityPrint@@Base>
   191ec:	ldr	r3, [r6, #88]	; 0x58
   191f0:	ldr	r2, [r6, #92]	; 0x5c
   191f4:	ldr	r1, [sp, #20]
   191f8:	adds	r3, r3, #1
   191fc:	adc	r2, r2, #0
   19200:	str	r3, [r6, #88]	; 0x58
   19204:	cmp	r1, #1
   19208:	str	r2, [r6, #92]	; 0x5c
   1920c:	bls	1926c <UnityAssertEqualMemory@@Base+0x348>
   19210:	ldr	r3, [r6, #96]	; 0x60
   19214:	ldr	r2, [r6, #100]	; 0x64
   19218:	ldr	r0, [pc, #624]	; 19490 <UnityAssertEqualMemory@@Base+0x56c>
   1921c:	adds	r3, r3, #1
   19220:	adc	r2, r2, #0
   19224:	str	r3, [r6, #96]	; 0x60
   19228:	str	r2, [r6, #100]	; 0x64
   1922c:	bl	15268 <UnityPrint@@Base>
   19230:	ldr	r2, [sp, #28]
   19234:	ldr	r3, [r6, #104]	; 0x68
   19238:	sub	r0, r2, r7
   1923c:	ldr	r2, [r6, #108]	; 0x6c
   19240:	adds	r3, r3, #1
   19244:	str	r3, [r6, #104]	; 0x68
   19248:	adc	r2, r2, #0
   1924c:	str	r2, [r6, #108]	; 0x6c
   19250:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   19254:	ldr	r3, [r6, #112]	; 0x70
   19258:	ldr	r2, [r6, #116]	; 0x74
   1925c:	adds	r3, r3, #1
   19260:	adc	r2, r2, #0
   19264:	str	r3, [r6, #112]	; 0x70
   19268:	str	r2, [r6, #116]	; 0x74
   1926c:	ldr	r0, [pc, #544]	; 19494 <UnityAssertEqualMemory@@Base+0x570>
   19270:	bl	15268 <UnityPrint@@Base>
   19274:	ldr	r3, [r6, #120]	; 0x78
   19278:	ldr	r2, [r6, #124]	; 0x7c
   1927c:	ldr	r0, [sp, #24]
   19280:	adds	r3, r3, #1
   19284:	ldr	r7, [pc, #524]	; 19498 <UnityAssertEqualMemory@@Base+0x574>
   19288:	adc	r2, r2, #0
   1928c:	str	r3, [r6, #120]	; 0x78
   19290:	str	r2, [r6, #124]	; 0x7c
   19294:	bl	16034 <UnityPrintNumberUnsigned@@Base>
   19298:	ldr	r3, [r6, #128]	; 0x80
   1929c:	movw	r0, #55480	; 0xd8b8
   192a0:	movt	r0, #1
   192a4:	ldr	r2, [r6, #132]	; 0x84
   192a8:	adds	r3, r3, #1
   192ac:	adc	r2, r2, #0
   192b0:	str	r3, [r6, #128]	; 0x80
   192b4:	str	r2, [r6, #132]	; 0x84
   192b8:	bl	15268 <UnityPrint@@Base>
   192bc:	ldr	r2, [r6, #136]	; 0x88
   192c0:	mov	r1, #2
   192c4:	ldr	r3, [r7, #16]
   192c8:	ldr	lr, [r6, #140]	; 0x8c
   192cc:	adds	r2, r2, #1
   192d0:	ldr	ip, [r7, #20]
   192d4:	str	r2, [r6, #136]	; 0x88
   192d8:	ldrb	r0, [r4]
   192dc:	adc	lr, lr, #0
   192e0:	adds	r3, r3, #1
   192e4:	adc	r2, ip, #0
   192e8:	str	r3, [r7, #16]
   192ec:	str	lr, [r6, #140]	; 0x8c
   192f0:	str	r2, [r7, #20]
   192f4:	bl	16234 <UnityPrintNumberHex@@Base>
   192f8:	ldr	r2, [r7, #32]
   192fc:	ldr	r0, [r7, #36]	; 0x24
   19300:	ldr	r3, [r6, #144]	; 0x90
   19304:	adds	r2, r2, #1
   19308:	ldr	r1, [r6, #148]	; 0x94
   1930c:	adc	r0, r0, #0
   19310:	str	r2, [r7, #32]
   19314:	adds	r3, r3, #1
   19318:	str	r0, [r7, #36]	; 0x24
   1931c:	ldr	r0, [pc, #376]	; 1949c <UnityAssertEqualMemory@@Base+0x578>
   19320:	adc	r2, r1, #0
   19324:	str	r3, [r6, #144]	; 0x90
   19328:	str	r2, [r6, #148]	; 0x94
   1932c:	bl	15268 <UnityPrint@@Base>
   19330:	ldr	r2, [r6, #152]	; 0x98
   19334:	mov	r1, #2
   19338:	ldr	r3, [r7, #16]
   1933c:	ldr	lr, [r6, #156]	; 0x9c
   19340:	adds	r2, r2, #1
   19344:	ldr	ip, [r7, #20]
   19348:	str	r2, [r6, #152]	; 0x98
   1934c:	ldrb	r0, [r5]
   19350:	adc	lr, lr, #0
   19354:	adds	r3, r3, #1
   19358:	adc	r2, ip, #0
   1935c:	str	r3, [r7, #16]
   19360:	str	lr, [r6, #156]	; 0x9c
   19364:	str	r2, [r7, #20]
   19368:	bl	16234 <UnityPrintNumberHex@@Base>
   1936c:	ldr	r2, [r7, #32]
   19370:	ldr	ip, [r7, #36]	; 0x24
   19374:	ldr	r3, [r6, #160]	; 0xa0
   19378:	adds	r2, r2, #1
   1937c:	ldr	r1, [r6, #164]	; 0xa4
   19380:	adc	ip, ip, #0
   19384:	str	r2, [r7, #32]
   19388:	ldr	r0, [sp, #72]	; 0x48
   1938c:	adds	r3, r3, #1
   19390:	str	ip, [r7, #36]	; 0x24
   19394:	adc	r2, r1, #0
   19398:	str	r3, [r6, #160]	; 0xa0
   1939c:	str	r2, [r6, #164]	; 0xa4
   193a0:	bl	15684 <UnityPrint@@Base+0x41c>
   193a4:	ldr	r3, [r6, #168]	; 0xa8
   193a8:	mov	r0, #1
   193ac:	mov	r1, r0
   193b0:	ldr	r2, [r6, #172]	; 0xac
   193b4:	ldr	ip, [sp, #16]
   193b8:	adds	r3, r3, r0
   193bc:	adc	r2, r2, #0
   193c0:	str	r3, [r6, #168]	; 0xa8
   193c4:	str	r0, [ip, #32]
   193c8:	ldr	r0, [pc, #208]	; 194a0 <UnityAssertEqualMemory@@Base+0x57c>
   193cc:	str	r2, [r6, #172]	; 0xac
   193d0:	bl	11fcc <longjmp@plt>
   193d4:	ldr	r3, [sp, #4]
   193d8:	cmp	r3, #0
   193dc:	beq	19124 <UnityAssertEqualMemory@@Base+0x200>
   193e0:	str	r2, [r6, #72]	; 0x48
   193e4:	str	r1, [r6, #76]	; 0x4c
   193e8:	strd	r8, [r6, #176]	; 0xb0
   193ec:	b	19124 <UnityAssertEqualMemory@@Base+0x200>
   193f0:	ldr	r3, [r6, #16]
   193f4:	ldr	r2, [r6, #20]
   193f8:	ldr	r0, [sp, #76]	; 0x4c
   193fc:	adds	r3, r3, #1
   19400:	adc	r2, r2, #0
   19404:	str	r3, [r6, #16]
   19408:	str	r2, [r6, #20]
   1940c:	bl	15dcc <UnityPrintNumber@@Base+0x360>
   19410:	ldr	r3, [r6, #24]
   19414:	ldr	r2, [r6, #28]
   19418:	ldr	r0, [pc, #132]	; 194a4 <UnityAssertEqualMemory@@Base+0x580>
   1941c:	adds	r3, r3, #1
   19420:	adc	r2, r2, #0
   19424:	str	r3, [r6, #24]
   19428:	str	r2, [r6, #28]
   1942c:	bl	15268 <UnityPrint@@Base>
   19430:	ldr	r3, [r6, #32]
   19434:	ldr	r2, [r6, #36]	; 0x24
   19438:	ldr	r0, [sp, #72]	; 0x48
   1943c:	adds	r3, r3, #1
   19440:	adc	r2, r2, #0
   19444:	str	r3, [r6, #32]
   19448:	str	r2, [r6, #36]	; 0x24
   1944c:	bl	15684 <UnityPrint@@Base+0x41c>
   19450:	ldr	r3, [r6, #40]	; 0x28
   19454:	mov	ip, #1
   19458:	mov	r1, ip
   1945c:	ldr	r2, [r6, #44]	; 0x2c
   19460:	ldr	lr, [sp, #16]
   19464:	adds	r3, r3, ip
   19468:	adc	r2, r2, #0
   1946c:	str	r3, [r6, #40]	; 0x28
   19470:	add	r0, lr, #40	; 0x28
   19474:	str	ip, [lr, #32]
   19478:	str	r2, [r6, #44]	; 0x2c
   1947c:	bl	11fcc <longjmp@plt>
   19480:	andeq	pc, r2, r0, lsl #29
   19484:	andeq	pc, r2, r0, lsr r7	; <UNPREDICTABLE>
   19488:	strdeq	sp, [r1], -r0
   1948c:	andeq	sp, r1, r8, ror #19
   19490:	muleq	r1, r4, r9
   19494:	strdeq	sp, [r1], -ip
   19498:	ldrdeq	pc, [r2], -r0
   1949c:	andeq	sp, r1, ip, asr #17
   194a0:	andeq	r0, r3, r0, lsl #9
   194a4:	andeq	sp, r1, ip, asr r9

000194a8 <UnityFail@@Base>:
   194a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   194ac:	movw	r4, #1112	; 0x458
   194b0:	movt	r4, #3
   194b4:	ldr	r3, [r4, #32]
   194b8:	strd	r6, [sp, #8]
   194bc:	str	r8, [sp, #16]
   194c0:	str	lr, [sp, #20]
   194c4:	cmp	r3, #0
   194c8:	bne	19508 <UnityFail@@Base+0x60>
   194cc:	ldr	r5, [pc, #616]	; 1973c <UnityFail@@Base+0x294>
   194d0:	ldr	ip, [r4, #36]	; 0x24
   194d4:	ldr	r3, [r5]
   194d8:	ldr	r2, [r5, #4]
   194dc:	adds	r3, r3, #1
   194e0:	adc	r2, r2, #0
   194e4:	cmp	ip, #0
   194e8:	str	r3, [r5]
   194ec:	str	r2, [r5, #4]
   194f0:	beq	19528 <UnityFail@@Base+0x80>
   194f4:	ldrd	r4, [sp]
   194f8:	ldrd	r6, [sp, #8]
   194fc:	ldr	r8, [sp, #16]
   19500:	add	sp, sp, #20
   19504:	pop	{pc}		; (ldr pc, [sp], #4)
   19508:	ldr	r2, [pc, #556]	; 1973c <UnityFail@@Base+0x294>
   1950c:	ldr	r3, [r2, #-8]
   19510:	ldr	r1, [r2, #-4]
   19514:	adds	r3, r3, #1
   19518:	adc	r1, r1, #0
   1951c:	str	r3, [r2, #-8]
   19520:	str	r1, [r2, #-4]
   19524:	b	194f4 <UnityFail@@Base+0x4c>
   19528:	ldr	r3, [r5, #8]
   1952c:	mov	r6, r0
   19530:	ldr	r2, [r5, #12]
   19534:	ldr	r0, [r4]
   19538:	adds	r3, r3, #1
   1953c:	adc	r2, r2, #0
   19540:	str	r3, [r5, #8]
   19544:	str	r2, [r5, #12]
   19548:	bl	15cb4 <UnityPrintNumber@@Base+0x248>
   1954c:	ldr	r3, [r5, #16]
   19550:	ldr	r2, [r5, #20]
   19554:	ldr	r0, [pc, #484]	; 19740 <UnityFail@@Base+0x298>
   19558:	adds	r3, r3, #1
   1955c:	adc	r2, r2, #0
   19560:	str	r3, [r5, #16]
   19564:	str	r2, [r5, #20]
   19568:	bl	15268 <UnityPrint@@Base>
   1956c:	cmp	r6, #0
   19570:	beq	19704 <UnityFail@@Base+0x25c>
   19574:	ldr	r3, [r5, #24]
   19578:	movw	r7, #60468	; 0xec34
   1957c:	movt	r7, #2
   19580:	mov	r0, #58	; 0x3a
   19584:	ldr	r2, [r5, #28]
   19588:	ldr	r1, [r7]
   1958c:	adds	r3, r3, #1
   19590:	adc	r2, r2, #0
   19594:	str	r3, [r5, #24]
   19598:	str	r2, [r5, #28]
   1959c:	bl	120f8 <putc@plt>
   195a0:	ldr	r3, [r5, #40]	; 0x28
   195a4:	ldr	r2, [r5, #44]	; 0x2c
   195a8:	ldr	r1, [r4, #8]
   195ac:	adds	r3, r3, #1
   195b0:	adc	r2, r2, #0
   195b4:	str	r3, [r5, #40]	; 0x28
   195b8:	cmp	r1, #0
   195bc:	str	r2, [r5, #44]	; 0x2c
   195c0:	beq	19688 <UnityFail@@Base+0x1e0>
   195c4:	ldr	r3, [r5, #48]	; 0x30
   195c8:	ldr	r2, [r5, #52]	; 0x34
   195cc:	ldr	r0, [pc, #368]	; 19744 <UnityFail@@Base+0x29c>
   195d0:	adds	r3, r3, #1
   195d4:	adc	r2, r2, #0
   195d8:	str	r3, [r5, #48]	; 0x30
   195dc:	str	r2, [r5, #52]	; 0x34
   195e0:	bl	15268 <UnityPrint@@Base>
   195e4:	ldr	r3, [r5, #56]	; 0x38
   195e8:	ldr	r2, [r5, #60]	; 0x3c
   195ec:	ldr	r0, [r4, #8]
   195f0:	adds	r3, r3, #1
   195f4:	adc	r2, r2, #0
   195f8:	str	r3, [r5, #56]	; 0x38
   195fc:	str	r2, [r5, #60]	; 0x3c
   19600:	bl	15268 <UnityPrint@@Base>
   19604:	ldr	r3, [r4, #12]
   19608:	cmp	r3, #0
   1960c:	beq	19720 <UnityFail@@Base+0x278>
   19610:	ldr	r3, [r5, #64]	; 0x40
   19614:	ldr	r2, [r5, #68]	; 0x44
   19618:	ldr	r0, [pc, #296]	; 19748 <UnityFail@@Base+0x2a0>
   1961c:	adds	r3, r3, #1
   19620:	adc	r2, r2, #0
   19624:	str	r3, [r5, #64]	; 0x40
   19628:	str	r2, [r5, #68]	; 0x44
   1962c:	bl	15268 <UnityPrint@@Base>
   19630:	ldr	r3, [r5, #80]	; 0x50
   19634:	ldr	r2, [r5, #84]	; 0x54
   19638:	ldr	r0, [r4, #12]
   1963c:	adds	r3, r3, #1
   19640:	adc	r2, r2, #0
   19644:	str	r3, [r5, #80]	; 0x50
   19648:	str	r2, [r5, #84]	; 0x54
   1964c:	bl	15268 <UnityPrint@@Base>
   19650:	ldr	r3, [r5, #88]	; 0x58
   19654:	ldr	r2, [r5, #92]	; 0x5c
   19658:	adds	r3, r3, #1
   1965c:	adc	r2, r2, #0
   19660:	str	r3, [r5, #88]	; 0x58
   19664:	str	r2, [r5, #92]	; 0x5c
   19668:	ldr	r0, [pc, #220]	; 1974c <UnityFail@@Base+0x2a4>
   1966c:	bl	15268 <UnityPrint@@Base>
   19670:	ldr	r3, [r5, #96]	; 0x60
   19674:	ldr	r2, [r5, #100]	; 0x64
   19678:	adds	r3, r3, #1
   1967c:	adc	r2, r2, #0
   19680:	str	r3, [r5, #96]	; 0x60
   19684:	str	r2, [r5, #100]	; 0x64
   19688:	ldrb	r3, [r6]
   1968c:	cmp	r3, #32
   19690:	beq	196d0 <UnityFail@@Base+0x228>
   19694:	ldr	r3, [r5, #104]	; 0x68
   19698:	mov	r0, #32
   1969c:	ldr	r2, [r5, #108]	; 0x6c
   196a0:	ldr	r1, [r7]
   196a4:	adds	r3, r3, #1
   196a8:	adc	r2, r2, #0
   196ac:	str	r3, [r5, #104]	; 0x68
   196b0:	str	r2, [r5, #108]	; 0x6c
   196b4:	bl	120f8 <putc@plt>
   196b8:	ldr	r3, [r5, #112]	; 0x70
   196bc:	ldr	r2, [r5, #116]	; 0x74
   196c0:	adds	r3, r3, #1
   196c4:	adc	r2, r2, #0
   196c8:	str	r3, [r5, #112]	; 0x70
   196cc:	str	r2, [r5, #116]	; 0x74
   196d0:	mov	r0, r6
   196d4:	bl	15268 <UnityPrint@@Base>
   196d8:	ldr	r3, [r5, #120]	; 0x78
   196dc:	ldr	r2, [r5, #124]	; 0x7c
   196e0:	adds	r3, r3, #1
   196e4:	adc	r2, r2, #0
   196e8:	str	r3, [r5, #120]	; 0x78
   196ec:	str	r2, [r5, #124]	; 0x7c
   196f0:	mov	r3, #1
   196f4:	ldr	r0, [pc, #84]	; 19750 <UnityFail@@Base+0x2a8>
   196f8:	mov	r1, r3
   196fc:	str	r3, [r4, #32]
   19700:	bl	11fcc <longjmp@plt>
   19704:	ldr	r3, [r5, #32]
   19708:	ldr	r2, [r5, #36]	; 0x24
   1970c:	adds	r3, r3, #1
   19710:	adc	r2, r2, #0
   19714:	str	r3, [r5, #32]
   19718:	str	r2, [r5, #36]	; 0x24
   1971c:	b	196f0 <UnityFail@@Base+0x248>
   19720:	ldr	r3, [r5, #72]	; 0x48
   19724:	ldr	r2, [r5, #76]	; 0x4c
   19728:	adds	r3, r3, #1
   1972c:	adc	r2, r2, #0
   19730:	str	r3, [r5, #72]	; 0x48
   19734:	str	r2, [r5, #76]	; 0x4c
   19738:	b	19668 <UnityFail@@Base+0x1c0>
   1973c:	andeq	pc, r2, r0, asr #30
   19740:	strdeq	sp, [r1], -r0
   19744:	ldrdeq	sp, [r1], -r8
   19748:	andeq	sp, r1, r4, ror #17
   1974c:	ldrdeq	sp, [r1], -r4
   19750:	andeq	r0, r3, r0, lsl #9

00019754 <UnityIgnore@@Base>:
   19754:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19758:	movw	r4, #1112	; 0x458
   1975c:	movt	r4, #3
   19760:	ldr	r3, [r4, #32]
   19764:	strd	r6, [sp, #8]
   19768:	str	r8, [sp, #16]
   1976c:	str	lr, [sp, #20]
   19770:	cmp	r3, #0
   19774:	bne	197b4 <UnityIgnore@@Base+0x60>
   19778:	ldr	r5, [pc, #344]	; 198d8 <UnityIgnore@@Base+0x184>
   1977c:	ldr	ip, [r4, #36]	; 0x24
   19780:	ldr	r3, [r5, #8]
   19784:	ldr	r2, [r5, #12]
   19788:	adds	r3, r3, #1
   1978c:	adc	r2, r2, #0
   19790:	cmp	ip, #0
   19794:	str	r3, [r5, #8]
   19798:	str	r2, [r5, #12]
   1979c:	beq	197d4 <UnityIgnore@@Base+0x80>
   197a0:	ldrd	r4, [sp]
   197a4:	ldrd	r6, [sp, #8]
   197a8:	ldr	r8, [sp, #16]
   197ac:	add	sp, sp, #20
   197b0:	pop	{pc}		; (ldr pc, [sp], #4)
   197b4:	ldr	r2, [pc, #284]	; 198d8 <UnityIgnore@@Base+0x184>
   197b8:	ldr	r3, [r2]
   197bc:	ldr	r1, [r2, #4]
   197c0:	adds	r3, r3, #1
   197c4:	adc	r1, r1, #0
   197c8:	str	r3, [r2]
   197cc:	str	r1, [r2, #4]
   197d0:	b	197a0 <UnityIgnore@@Base+0x4c>
   197d4:	ldr	r3, [r5, #16]
   197d8:	mov	r6, r0
   197dc:	ldr	r2, [r5, #20]
   197e0:	ldr	r0, [r4]
   197e4:	adds	r3, r3, #1
   197e8:	adc	r2, r2, #0
   197ec:	str	r3, [r5, #16]
   197f0:	str	r2, [r5, #20]
   197f4:	bl	15cb4 <UnityPrintNumber@@Base+0x248>
   197f8:	ldr	r3, [r5, #24]
   197fc:	ldr	r2, [r5, #28]
   19800:	ldr	r0, [pc, #212]	; 198dc <UnityIgnore@@Base+0x188>
   19804:	adds	r3, r3, #1
   19808:	adc	r2, r2, #0
   1980c:	str	r3, [r5, #24]
   19810:	str	r2, [r5, #28]
   19814:	bl	15268 <UnityPrint@@Base>
   19818:	cmp	r6, #0
   1981c:	beq	198bc <UnityIgnore@@Base+0x168>
   19820:	ldr	r3, [r5, #32]
   19824:	movw	r7, #60468	; 0xec34
   19828:	movt	r7, #2
   1982c:	mov	r0, #58	; 0x3a
   19830:	ldr	r2, [r5, #36]	; 0x24
   19834:	ldr	r1, [r7]
   19838:	adds	r3, r3, #1
   1983c:	adc	r2, r2, #0
   19840:	str	r3, [r5, #32]
   19844:	str	r2, [r5, #36]	; 0x24
   19848:	bl	120f8 <putc@plt>
   1984c:	ldr	r3, [r5, #48]	; 0x30
   19850:	mov	r0, #32
   19854:	ldr	r2, [r5, #52]	; 0x34
   19858:	ldr	r1, [r7]
   1985c:	adds	r3, r3, #1
   19860:	adc	r2, r2, #0
   19864:	str	r3, [r5, #48]	; 0x30
   19868:	str	r2, [r5, #52]	; 0x34
   1986c:	bl	120f8 <putc@plt>
   19870:	ldr	r3, [r5, #56]	; 0x38
   19874:	mov	r0, r6
   19878:	ldr	r2, [r5, #60]	; 0x3c
   1987c:	adds	r3, r3, #1
   19880:	adc	r2, r2, #0
   19884:	str	r3, [r5, #56]	; 0x38
   19888:	str	r2, [r5, #60]	; 0x3c
   1988c:	bl	15268 <UnityPrint@@Base>
   19890:	ldr	r3, [r5, #64]	; 0x40
   19894:	ldr	r2, [r5, #68]	; 0x44
   19898:	adds	r3, r3, #1
   1989c:	adc	r2, r2, #0
   198a0:	str	r3, [r5, #64]	; 0x40
   198a4:	str	r2, [r5, #68]	; 0x44
   198a8:	mov	r3, #1
   198ac:	ldr	r0, [pc, #44]	; 198e0 <UnityIgnore@@Base+0x18c>
   198b0:	mov	r1, r3
   198b4:	str	r3, [r4, #36]	; 0x24
   198b8:	bl	11fcc <longjmp@plt>
   198bc:	ldr	r3, [r5, #40]	; 0x28
   198c0:	ldr	r2, [r5, #44]	; 0x2c
   198c4:	adds	r3, r3, #1
   198c8:	adc	r2, r2, #0
   198cc:	str	r3, [r5, #40]	; 0x28
   198d0:	str	r2, [r5, #44]	; 0x2c
   198d4:	b	198a8 <UnityIgnore@@Base+0x154>
   198d8:	andeq	pc, r2, r0, asr #31
   198dc:	andeq	sp, r1, r4, lsl #20
   198e0:	andeq	r0, r3, r0, lsl #9

000198e4 <setUp@@Base>:
   198e4:	ldr	r2, [pc, #24]	; 19904 <setUp@@Base+0x20>
   198e8:	ldr	r3, [r2, #-8]
   198ec:	ldr	r1, [r2, #-4]
   198f0:	adds	r3, r3, #1
   198f4:	adc	r1, r1, #0
   198f8:	str	r3, [r2, #-8]
   198fc:	str	r1, [r2, #-4]
   19900:	bx	lr
   19904:	andeq	r0, r3, r0, lsl r0

00019908 <tearDown@@Base>:
   19908:	ldr	r2, [pc, #24]	; 19928 <tearDown@@Base+0x20>
   1990c:	ldr	r3, [r2]
   19910:	ldr	r1, [r2, #4]
   19914:	adds	r3, r3, #1
   19918:	adc	r1, r1, #0
   1991c:	str	r3, [r2]
   19920:	str	r1, [r2, #4]
   19924:	bx	lr
   19928:	andeq	r0, r3, r0, lsl r0

0001992c <UnityDefaultTestRun@@Base>:
   1992c:	ldr	ip, [pc, #396]	; 19ac0 <UnityDefaultTestRun@@Base+0x194>
   19930:	movw	r3, #1112	; 0x458
   19934:	movt	r3, #3
   19938:	str	r4, [sp, #-8]!
   1993c:	mov	r4, #0
   19940:	str	lr, [sp, #4]
   19944:	sub	sp, sp, #8
   19948:	ldr	lr, [r3, #20]
   1994c:	stmib	r3, {r1, r4}
   19950:	str	r2, [r3, #16]
   19954:	ldr	r2, [ip, #-8]
   19958:	str	r0, [sp, #4]
   1995c:	add	r0, r3, #40	; 0x28
   19960:	ldr	r1, [ip, #-4]
   19964:	add	lr, lr, #1
   19968:	str	r4, [r3, #12]
   1996c:	str	lr, [r3, #20]
   19970:	adds	r2, r2, #1
   19974:	adc	r3, r1, r4
   19978:	str	r2, [ip, #-8]
   1997c:	str	r3, [ip, #-4]
   19980:	bl	11fd8 <_setjmp@plt>
   19984:	ldr	r4, [pc, #308]	; 19ac0 <UnityDefaultTestRun@@Base+0x194>
   19988:	ldr	r3, [r4]
   1998c:	ldr	r2, [r4, #4]
   19990:	adds	r3, r3, #1
   19994:	adc	r2, r2, #0
   19998:	cmp	r0, #0
   1999c:	str	r3, [r4]
   199a0:	str	r2, [r4, #4]
   199a4:	beq	19a30 <UnityDefaultTestRun@@Base+0x104>
   199a8:	ldr	r0, [pc, #276]	; 19ac4 <UnityDefaultTestRun@@Base+0x198>
   199ac:	bl	11fd8 <_setjmp@plt>
   199b0:	ldr	r4, [pc, #264]	; 19ac0 <UnityDefaultTestRun@@Base+0x194>
   199b4:	ldr	r3, [r4, #32]
   199b8:	ldr	r2, [r4, #36]	; 0x24
   199bc:	adds	r3, r3, #1
   199c0:	adc	r2, r2, #0
   199c4:	cmp	r0, #0
   199c8:	str	r3, [r4, #32]
   199cc:	str	r2, [r4, #36]	; 0x24
   199d0:	bne	19a00 <UnityDefaultTestRun@@Base+0xd4>
   199d4:	ldr	r3, [r4, #40]	; 0x28
   199d8:	movw	r1, #1112	; 0x458
   199dc:	movt	r1, #3
   199e0:	ldr	r2, [r4, #44]	; 0x2c
   199e4:	ldr	r1, [r1, #36]	; 0x24
   199e8:	adds	r3, r3, #1
   199ec:	adc	r2, r2, #0
   199f0:	str	r3, [r4, #40]	; 0x28
   199f4:	cmp	r1, #0
   199f8:	str	r2, [r4, #44]	; 0x2c
   199fc:	beq	19a88 <UnityDefaultTestRun@@Base+0x15c>
   19a00:	bl	1667c <UnityConcludeTest@@Base>
   19a04:	ldr	r2, [pc, #180]	; 19ac0 <UnityDefaultTestRun@@Base+0x194>
   19a08:	ldr	r3, [r2, #64]	; 0x40
   19a0c:	ldr	r1, [r2, #68]	; 0x44
   19a10:	adds	r3, r3, #1
   19a14:	adc	r1, r1, #0
   19a18:	str	r3, [r2, #64]	; 0x40
   19a1c:	str	r1, [r2, #68]	; 0x44
   19a20:	add	sp, sp, #8
   19a24:	ldr	r4, [sp]
   19a28:	add	sp, sp, #4
   19a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   19a30:	ldr	r3, [r4, #8]
   19a34:	ldr	r2, [r4, #12]
   19a38:	adds	r3, r3, #1
   19a3c:	adc	r2, r2, #0
   19a40:	str	r3, [r4, #8]
   19a44:	str	r2, [r4, #12]
   19a48:	bl	198e4 <setUp@@Base>
   19a4c:	ldr	r3, [r4, #16]
   19a50:	ldr	r2, [r4, #20]
   19a54:	adds	r3, r3, #1
   19a58:	adc	r2, r2, #0
   19a5c:	str	r3, [r4, #16]
   19a60:	ldr	r3, [sp, #4]
   19a64:	str	r2, [r4, #20]
   19a68:	blx	r3
   19a6c:	ldr	r3, [r4, #24]
   19a70:	ldr	r2, [r4, #28]
   19a74:	adds	r3, r3, #1
   19a78:	adc	r2, r2, #0
   19a7c:	str	r3, [r4, #24]
   19a80:	str	r2, [r4, #28]
   19a84:	b	199a8 <UnityDefaultTestRun@@Base+0x7c>
   19a88:	ldr	r3, [r4, #48]	; 0x30
   19a8c:	ldr	r2, [r4, #52]	; 0x34
   19a90:	adds	r3, r3, #1
   19a94:	adc	r2, r2, #0
   19a98:	str	r3, [r4, #48]	; 0x30
   19a9c:	str	r2, [r4, #52]	; 0x34
   19aa0:	bl	19908 <tearDown@@Base>
   19aa4:	ldr	r3, [r4, #56]	; 0x38
   19aa8:	ldr	r2, [r4, #60]	; 0x3c
   19aac:	adds	r3, r3, #1
   19ab0:	adc	r2, r2, #0
   19ab4:	str	r3, [r4, #56]	; 0x38
   19ab8:	str	r2, [r4, #60]	; 0x3c
   19abc:	b	19a00 <UnityDefaultTestRun@@Base+0xd4>
   19ac0:	andeq	r0, r3, r0, lsr #32
   19ac4:	andeq	r0, r3, r0, lsl #9

00019ac8 <UnityBegin@@Base>:
   19ac8:	ldr	r1, [pc, #80]	; 19b20 <UnityBegin@@Base+0x58>
   19acc:	mov	ip, #0
   19ad0:	movw	r3, #1112	; 0x458
   19ad4:	movt	r3, #3
   19ad8:	strd	r4, [sp, #-8]!
   19adc:	mov	r4, #0
   19ae0:	mov	r5, #0
   19ae4:	stm	r3, {r0, ip}
   19ae8:	str	ip, [r3, #8]
   19aec:	ldr	r2, [r1, #-8]
   19af0:	str	ip, [r3, #12]
   19af4:	ldr	r0, [r1, #-4]
   19af8:	strd	r4, [r3, #16]
   19afc:	strd	r4, [r3, #24]
   19b00:	adds	r2, r2, #1
   19b04:	strd	r4, [r3, #32]
   19b08:	ldrd	r4, [sp]
   19b0c:	add	sp, sp, #8
   19b10:	adc	r3, r0, ip
   19b14:	str	r2, [r1, #-8]
   19b18:	str	r3, [r1, #-4]
   19b1c:	bx	lr
   19b20:	andeq	r0, r3, r0, ror r0

00019b24 <UnityEnd@@Base>:
   19b24:	strd	r4, [sp, #-16]!
   19b28:	mov	r0, #10
   19b2c:	movw	r5, #1112	; 0x458
   19b30:	movt	r5, #3
   19b34:	ldr	r4, [pc, #524]	; 19d48 <UnityEnd@@Base+0x224>
   19b38:	str	r6, [sp, #8]
   19b3c:	movw	r6, #60468	; 0xec34
   19b40:	movt	r6, #2
   19b44:	ldr	r1, [r6]
   19b48:	str	lr, [sp, #12]
   19b4c:	ldr	r3, [r4]
   19b50:	ldr	r2, [r4, #4]
   19b54:	adds	r3, r3, #1
   19b58:	adc	r2, r2, #0
   19b5c:	str	r3, [r4]
   19b60:	str	r2, [r4, #4]
   19b64:	bl	120f8 <putc@plt>
   19b68:	ldr	r3, [r4, #8]
   19b6c:	ldr	r2, [r4, #12]
   19b70:	ldr	r0, [pc, #468]	; 19d4c <UnityEnd@@Base+0x228>
   19b74:	adds	r3, r3, #1
   19b78:	adc	r2, r2, #0
   19b7c:	str	r3, [r4, #8]
   19b80:	str	r2, [r4, #12]
   19b84:	bl	15268 <UnityPrint@@Base>
   19b88:	ldr	r3, [r4, #16]
   19b8c:	mov	r0, #10
   19b90:	ldr	r2, [r4, #20]
   19b94:	ldr	r1, [r6]
   19b98:	adds	r3, r3, #1
   19b9c:	adc	r2, r2, #0
   19ba0:	str	r3, [r4, #16]
   19ba4:	str	r2, [r4, #20]
   19ba8:	bl	120f8 <putc@plt>
   19bac:	ldr	r3, [r4, #24]
   19bb0:	ldr	r2, [r4, #28]
   19bb4:	ldr	r0, [r5, #20]
   19bb8:	adds	r3, r3, #1
   19bbc:	adc	r2, r2, #0
   19bc0:	str	r3, [r4, #24]
   19bc4:	str	r2, [r4, #28]
   19bc8:	bl	15a6c <UnityPrintNumber@@Base>
   19bcc:	ldr	r3, [r4, #32]
   19bd0:	ldr	r2, [r4, #36]	; 0x24
   19bd4:	ldr	r0, [pc, #372]	; 19d50 <UnityEnd@@Base+0x22c>
   19bd8:	adds	r3, r3, #1
   19bdc:	adc	r2, r2, #0
   19be0:	str	r3, [r4, #32]
   19be4:	str	r2, [r4, #36]	; 0x24
   19be8:	bl	15268 <UnityPrint@@Base>
   19bec:	ldr	r3, [r4, #40]	; 0x28
   19bf0:	ldr	r2, [r4, #44]	; 0x2c
   19bf4:	ldr	r0, [r5, #24]
   19bf8:	adds	r3, r3, #1
   19bfc:	adc	r2, r2, #0
   19c00:	str	r3, [r4, #40]	; 0x28
   19c04:	str	r2, [r4, #44]	; 0x2c
   19c08:	bl	15a6c <UnityPrintNumber@@Base>
   19c0c:	ldr	r3, [r4, #48]	; 0x30
   19c10:	ldr	r2, [r4, #52]	; 0x34
   19c14:	ldr	r0, [pc, #312]	; 19d54 <UnityEnd@@Base+0x230>
   19c18:	adds	r3, r3, #1
   19c1c:	adc	r2, r2, #0
   19c20:	str	r3, [r4, #48]	; 0x30
   19c24:	str	r2, [r4, #52]	; 0x34
   19c28:	bl	15268 <UnityPrint@@Base>
   19c2c:	ldr	r3, [r4, #56]	; 0x38
   19c30:	ldr	r2, [r4, #60]	; 0x3c
   19c34:	ldr	r0, [r5, #28]
   19c38:	adds	r3, r3, #1
   19c3c:	adc	r2, r2, #0
   19c40:	str	r3, [r4, #56]	; 0x38
   19c44:	str	r2, [r4, #60]	; 0x3c
   19c48:	bl	15a6c <UnityPrintNumber@@Base>
   19c4c:	ldr	r3, [r4, #64]	; 0x40
   19c50:	ldr	r2, [r4, #68]	; 0x44
   19c54:	ldr	r0, [pc, #252]	; 19d58 <UnityEnd@@Base+0x234>
   19c58:	adds	r3, r3, #1
   19c5c:	adc	r2, r2, #0
   19c60:	str	r3, [r4, #64]	; 0x40
   19c64:	str	r2, [r4, #68]	; 0x44
   19c68:	bl	15268 <UnityPrint@@Base>
   19c6c:	ldr	r3, [r4, #72]	; 0x48
   19c70:	mov	r0, #10
   19c74:	ldr	r2, [r4, #76]	; 0x4c
   19c78:	ldr	r1, [r6]
   19c7c:	adds	r3, r3, #1
   19c80:	adc	r2, r2, #0
   19c84:	str	r3, [r4, #72]	; 0x48
   19c88:	str	r2, [r4, #76]	; 0x4c
   19c8c:	bl	120f8 <putc@plt>
   19c90:	ldr	r3, [r5, #24]
   19c94:	cmp	r3, #0
   19c98:	bne	19d0c <UnityEnd@@Base+0x1e8>
   19c9c:	ldr	r3, [r4, #80]	; 0x50
   19ca0:	ldr	r2, [r4, #84]	; 0x54
   19ca4:	ldr	r0, [pc, #176]	; 19d5c <UnityEnd@@Base+0x238>
   19ca8:	adds	r3, r3, #1
   19cac:	adc	r2, r2, #0
   19cb0:	str	r3, [r4, #80]	; 0x50
   19cb4:	str	r2, [r4, #84]	; 0x54
   19cb8:	bl	15268 <UnityPrint@@Base>
   19cbc:	ldr	r3, [r4, #96]	; 0x60
   19cc0:	ldr	r2, [r4, #100]	; 0x64
   19cc4:	adds	r3, r3, #1
   19cc8:	adc	r2, r2, #0
   19ccc:	str	r3, [r4, #96]	; 0x60
   19cd0:	str	r2, [r4, #100]	; 0x64
   19cd4:	mov	r0, #10
   19cd8:	ldr	r1, [r6]
   19cdc:	bl	120f8 <putc@plt>
   19ce0:	ldr	r3, [r4, #112]	; 0x70
   19ce4:	ldr	r2, [r4, #116]	; 0x74
   19ce8:	ldr	r6, [sp, #8]
   19cec:	adds	r3, r3, #1
   19cf0:	ldr	r0, [r5, #24]
   19cf4:	adc	r2, r2, #0
   19cf8:	str	r3, [r4, #112]	; 0x70
   19cfc:	str	r2, [r4, #116]	; 0x74
   19d00:	ldrd	r4, [sp]
   19d04:	add	sp, sp, #12
   19d08:	pop	{pc}		; (ldr pc, [sp], #4)
   19d0c:	ldr	r3, [r4, #88]	; 0x58
   19d10:	ldr	r2, [r4, #92]	; 0x5c
   19d14:	ldr	r0, [pc, #68]	; 19d60 <UnityEnd@@Base+0x23c>
   19d18:	adds	r3, r3, #1
   19d1c:	adc	r2, r2, #0
   19d20:	str	r3, [r4, #88]	; 0x58
   19d24:	str	r2, [r4, #92]	; 0x5c
   19d28:	bl	15268 <UnityPrint@@Base>
   19d2c:	ldr	r3, [r4, #104]	; 0x68
   19d30:	ldr	r2, [r4, #108]	; 0x6c
   19d34:	adds	r3, r3, #1
   19d38:	adc	r2, r2, #0
   19d3c:	str	r3, [r4, #104]	; 0x68
   19d40:	str	r2, [r4, #108]	; 0x6c
   19d44:	b	19cd4 <UnityEnd@@Base+0x1b0>
   19d48:	andeq	r0, r3, r0, ror r0
   19d4c:	andeq	sp, r1, ip, lsl #20
   19d50:	andeq	sp, r1, r4, lsr #20
   19d54:	andeq	sp, r1, ip, lsr #20
   19d58:	andeq	sp, r1, r8, lsr sl
   19d5c:	andeq	sp, r1, r0, asr r9
   19d60:	strdeq	sp, [r1], -r0

00019d64 <init_token_int_type@@Base>:
   19d64:	movw	r3, #232	; 0xe8
   19d68:	movt	r3, #3
   19d6c:	ldr	r2, [r3]
   19d70:	mov	ip, #0
   19d74:	ldr	r1, [r3, #4]
   19d78:	str	ip, [r0]
   19d7c:	adds	r2, r2, #1
   19d80:	adc	r1, r1, ip
   19d84:	str	r2, [r3]
   19d88:	str	r1, [r3, #4]
   19d8c:	bx	lr

00019d90 <init_token_int_value@@Base>:
   19d90:	movw	r3, #232	; 0xe8
   19d94:	movt	r3, #3
   19d98:	push	{lr}		; (str lr, [sp, #-4]!)
   19d9c:	ldr	r2, [r3, #8]
   19da0:	mov	lr, #1
   19da4:	ldr	ip, [r3, #12]
   19da8:	str	lr, [r0]
   19dac:	str	r1, [r0, #4]
   19db0:	adds	r2, r2, lr
   19db4:	adc	ip, ip, #0
   19db8:	str	r2, [r3, #8]
   19dbc:	str	ip, [r3, #12]
   19dc0:	pop	{pc}		; (ldr pc, [sp], #4)

00019dc4 <init_token_function@@Base>:
   19dc4:	movw	r3, #232	; 0xe8
   19dc8:	movt	r3, #3
   19dcc:	push	{lr}		; (str lr, [sp, #-4]!)
   19dd0:	ldr	r2, [r3, #16]
   19dd4:	mov	lr, #2
   19dd8:	ldr	ip, [r3, #20]
   19ddc:	str	lr, [r0]
   19de0:	str	r1, [r0, #4]
   19de4:	adds	r2, r2, #1
   19de8:	adc	ip, ip, #0
   19dec:	str	r2, [r3, #16]
   19df0:	str	ip, [r3, #20]
   19df4:	pop	{pc}		; (ldr pc, [sp], #4)

00019df8 <init_token_opar@@Base>:
   19df8:	movw	r3, #232	; 0xe8
   19dfc:	movt	r3, #3
   19e00:	ldr	r2, [r3, #24]
   19e04:	mov	ip, #3
   19e08:	ldr	r1, [r3, #28]
   19e0c:	str	ip, [r0]
   19e10:	adds	r2, r2, #1
   19e14:	adc	r1, r1, #0
   19e18:	str	r2, [r3, #24]
   19e1c:	str	r1, [r3, #28]
   19e20:	bx	lr

00019e24 <init_token_cpar@@Base>:
   19e24:	movw	r3, #232	; 0xe8
   19e28:	movt	r3, #3
   19e2c:	ldr	r2, [r3, #32]
   19e30:	mov	ip, #4
   19e34:	ldr	r1, [r3, #36]	; 0x24
   19e38:	str	ip, [r0]
   19e3c:	adds	r2, r2, #1
   19e40:	adc	r1, r1, #0
   19e44:	str	r2, [r3, #32]
   19e48:	str	r1, [r3, #36]	; 0x24
   19e4c:	bx	lr

00019e50 <init_token_obra@@Base>:
   19e50:	movw	r3, #232	; 0xe8
   19e54:	movt	r3, #3
   19e58:	ldr	r2, [r3, #40]	; 0x28
   19e5c:	mov	ip, #5
   19e60:	ldr	r1, [r3, #44]	; 0x2c
   19e64:	str	ip, [r0]
   19e68:	adds	r2, r2, #1
   19e6c:	adc	r1, r1, #0
   19e70:	str	r2, [r3, #40]	; 0x28
   19e74:	str	r1, [r3, #44]	; 0x2c
   19e78:	bx	lr

00019e7c <init_token_cbra@@Base>:
   19e7c:	movw	r3, #232	; 0xe8
   19e80:	movt	r3, #3
   19e84:	ldr	r2, [r3, #48]	; 0x30
   19e88:	mov	ip, #6
   19e8c:	ldr	r1, [r3, #52]	; 0x34
   19e90:	str	ip, [r0]
   19e94:	adds	r2, r2, #1
   19e98:	adc	r1, r1, #0
   19e9c:	str	r2, [r3, #48]	; 0x30
   19ea0:	str	r1, [r3, #52]	; 0x34
   19ea4:	bx	lr

00019ea8 <init_token_return@@Base>:
   19ea8:	movw	r3, #232	; 0xe8
   19eac:	movt	r3, #3
   19eb0:	ldr	r2, [r3, #56]	; 0x38
   19eb4:	mov	ip, #7
   19eb8:	ldr	r1, [r3, #60]	; 0x3c
   19ebc:	str	ip, [r0]
   19ec0:	adds	r2, r2, #1
   19ec4:	adc	r1, r1, #0
   19ec8:	str	r2, [r3, #56]	; 0x38
   19ecc:	str	r1, [r3, #60]	; 0x3c
   19ed0:	bx	lr

00019ed4 <init_token_semicolon@@Base>:
   19ed4:	movw	r3, #232	; 0xe8
   19ed8:	movt	r3, #3
   19edc:	ldr	r2, [r3, #64]	; 0x40
   19ee0:	mov	ip, #8
   19ee4:	ldr	r1, [r3, #68]	; 0x44
   19ee8:	str	ip, [r0]
   19eec:	adds	r2, r2, #1
   19ef0:	adc	r1, r1, #0
   19ef4:	str	r2, [r3, #64]	; 0x40
   19ef8:	str	r1, [r3, #68]	; 0x44
   19efc:	bx	lr

00019f00 <init_token_eof@@Base>:
   19f00:	movw	r3, #232	; 0xe8
   19f04:	movt	r3, #3
   19f08:	ldr	r2, [r3, #72]	; 0x48
   19f0c:	mov	ip, #9
   19f10:	ldr	r1, [r3, #76]	; 0x4c
   19f14:	str	ip, [r0]
   19f18:	adds	r2, r2, #1
   19f1c:	adc	r1, r1, #0
   19f20:	str	r2, [r3, #72]	; 0x48
   19f24:	str	r1, [r3, #76]	; 0x4c
   19f28:	bx	lr

00019f2c <init_token_if@@Base>:
   19f2c:	movw	r3, #232	; 0xe8
   19f30:	movt	r3, #3
   19f34:	ldr	r2, [r3, #80]	; 0x50
   19f38:	mov	ip, #10
   19f3c:	ldr	r1, [r3, #84]	; 0x54
   19f40:	str	ip, [r0]
   19f44:	adds	r2, r2, #1
   19f48:	adc	r1, r1, #0
   19f4c:	str	r2, [r3, #80]	; 0x50
   19f50:	str	r1, [r3, #84]	; 0x54
   19f54:	bx	lr

00019f58 <init_token_else@@Base>:
   19f58:	movw	r3, #232	; 0xe8
   19f5c:	movt	r3, #3
   19f60:	ldr	r2, [r3, #88]	; 0x58
   19f64:	mov	ip, #11
   19f68:	ldr	r1, [r3, #92]	; 0x5c
   19f6c:	str	ip, [r0]
   19f70:	adds	r2, r2, #1
   19f74:	adc	r1, r1, #0
   19f78:	str	r2, [r3, #88]	; 0x58
   19f7c:	str	r1, [r3, #92]	; 0x5c
   19f80:	bx	lr

00019f84 <init_token_boolean_op@@Base>:
   19f84:	movw	r3, #232	; 0xe8
   19f88:	movt	r3, #3
   19f8c:	push	{lr}		; (str lr, [sp, #-4]!)
   19f90:	ldr	r2, [r3, #96]	; 0x60
   19f94:	mov	lr, #12
   19f98:	ldr	ip, [r3, #100]	; 0x64
   19f9c:	str	lr, [r0]
   19fa0:	str	r1, [r0, #4]
   19fa4:	adds	r2, r2, #1
   19fa8:	adc	ip, ip, #0
   19fac:	str	r2, [r3, #96]	; 0x60
   19fb0:	str	ip, [r3, #100]	; 0x64
   19fb4:	pop	{pc}		; (ldr pc, [sp], #4)

00019fb8 <free_token_int_type@@Base>:
   19fb8:	movw	r3, #232	; 0xe8
   19fbc:	movt	r3, #3
   19fc0:	ldr	r2, [r3, #104]	; 0x68
   19fc4:	ldr	r1, [r3, #108]	; 0x6c
   19fc8:	adds	r2, r2, #1
   19fcc:	adc	r1, r1, #0
   19fd0:	str	r2, [r3, #104]	; 0x68
   19fd4:	str	r1, [r3, #108]	; 0x6c
   19fd8:	b	11fe4 <free@plt>

00019fdc <free_token_int_value@@Base>:
   19fdc:	movw	r3, #232	; 0xe8
   19fe0:	movt	r3, #3
   19fe4:	ldr	r2, [r3, #112]	; 0x70
   19fe8:	ldr	r1, [r3, #116]	; 0x74
   19fec:	adds	r2, r2, #1
   19ff0:	adc	r1, r1, #0
   19ff4:	str	r2, [r3, #112]	; 0x70
   19ff8:	str	r1, [r3, #116]	; 0x74
   19ffc:	b	11fe4 <free@plt>

0001a000 <free_token_function@@Base>:
   1a000:	movw	r3, #232	; 0xe8
   1a004:	movt	r3, #3
   1a008:	ldr	r2, [r3, #120]	; 0x78
   1a00c:	ldr	r1, [r3, #124]	; 0x7c
   1a010:	adds	r2, r2, #1
   1a014:	adc	r1, r1, #0
   1a018:	str	r2, [r3, #120]	; 0x78
   1a01c:	str	r1, [r3, #124]	; 0x7c
   1a020:	b	11fe4 <free@plt>

0001a024 <free_token_opar@@Base>:
   1a024:	movw	r3, #232	; 0xe8
   1a028:	movt	r3, #3
   1a02c:	ldr	r2, [r3, #128]	; 0x80
   1a030:	ldr	r1, [r3, #132]	; 0x84
   1a034:	adds	r2, r2, #1
   1a038:	adc	r1, r1, #0
   1a03c:	str	r2, [r3, #128]	; 0x80
   1a040:	str	r1, [r3, #132]	; 0x84
   1a044:	b	11fe4 <free@plt>

0001a048 <free_token_cpar@@Base>:
   1a048:	movw	r3, #232	; 0xe8
   1a04c:	movt	r3, #3
   1a050:	ldr	r2, [r3, #136]	; 0x88
   1a054:	ldr	r1, [r3, #140]	; 0x8c
   1a058:	adds	r2, r2, #1
   1a05c:	adc	r1, r1, #0
   1a060:	str	r2, [r3, #136]	; 0x88
   1a064:	str	r1, [r3, #140]	; 0x8c
   1a068:	b	11fe4 <free@plt>

0001a06c <free_token_obra@@Base>:
   1a06c:	movw	r3, #232	; 0xe8
   1a070:	movt	r3, #3
   1a074:	ldr	r2, [r3, #144]	; 0x90
   1a078:	ldr	r1, [r3, #148]	; 0x94
   1a07c:	adds	r2, r2, #1
   1a080:	adc	r1, r1, #0
   1a084:	str	r2, [r3, #144]	; 0x90
   1a088:	str	r1, [r3, #148]	; 0x94
   1a08c:	b	11fe4 <free@plt>

0001a090 <free_token_cbra@@Base>:
   1a090:	movw	r3, #232	; 0xe8
   1a094:	movt	r3, #3
   1a098:	ldr	r2, [r3, #152]	; 0x98
   1a09c:	ldr	r1, [r3, #156]	; 0x9c
   1a0a0:	adds	r2, r2, #1
   1a0a4:	adc	r1, r1, #0
   1a0a8:	str	r2, [r3, #152]	; 0x98
   1a0ac:	str	r1, [r3, #156]	; 0x9c
   1a0b0:	b	11fe4 <free@plt>

0001a0b4 <free_token_return@@Base>:
   1a0b4:	movw	r3, #232	; 0xe8
   1a0b8:	movt	r3, #3
   1a0bc:	ldr	r2, [r3, #160]	; 0xa0
   1a0c0:	ldr	r1, [r3, #164]	; 0xa4
   1a0c4:	adds	r2, r2, #1
   1a0c8:	adc	r1, r1, #0
   1a0cc:	str	r2, [r3, #160]	; 0xa0
   1a0d0:	str	r1, [r3, #164]	; 0xa4
   1a0d4:	b	11fe4 <free@plt>

0001a0d8 <free_token_semicolon@@Base>:
   1a0d8:	movw	r3, #232	; 0xe8
   1a0dc:	movt	r3, #3
   1a0e0:	ldr	r2, [r3, #168]	; 0xa8
   1a0e4:	ldr	r1, [r3, #172]	; 0xac
   1a0e8:	adds	r2, r2, #1
   1a0ec:	adc	r1, r1, #0
   1a0f0:	str	r2, [r3, #168]	; 0xa8
   1a0f4:	str	r1, [r3, #172]	; 0xac
   1a0f8:	b	11fe4 <free@plt>

0001a0fc <free_token_eof@@Base>:
   1a0fc:	movw	r3, #232	; 0xe8
   1a100:	movt	r3, #3
   1a104:	ldr	r2, [r3, #176]	; 0xb0
   1a108:	ldr	r1, [r3, #180]	; 0xb4
   1a10c:	adds	r2, r2, #1
   1a110:	adc	r1, r1, #0
   1a114:	str	r2, [r3, #176]	; 0xb0
   1a118:	str	r1, [r3, #180]	; 0xb4
   1a11c:	b	11fe4 <free@plt>

0001a120 <free_token_if@@Base>:
   1a120:	movw	r3, #232	; 0xe8
   1a124:	movt	r3, #3
   1a128:	ldr	r2, [r3, #184]	; 0xb8
   1a12c:	ldr	r1, [r3, #188]	; 0xbc
   1a130:	adds	r2, r2, #1
   1a134:	adc	r1, r1, #0
   1a138:	str	r2, [r3, #184]	; 0xb8
   1a13c:	str	r1, [r3, #188]	; 0xbc
   1a140:	b	11fe4 <free@plt>

0001a144 <free_token_else@@Base>:
   1a144:	movw	r3, #232	; 0xe8
   1a148:	movt	r3, #3
   1a14c:	ldr	r2, [r3, #192]	; 0xc0
   1a150:	ldr	r1, [r3, #196]	; 0xc4
   1a154:	adds	r2, r2, #1
   1a158:	adc	r1, r1, #0
   1a15c:	str	r2, [r3, #192]	; 0xc0
   1a160:	str	r1, [r3, #196]	; 0xc4
   1a164:	b	11fe4 <free@plt>

0001a168 <free_token_boolean_op@@Base>:
   1a168:	str	r4, [sp, #-8]!
   1a16c:	mov	r4, r0
   1a170:	movw	r3, #232	; 0xe8
   1a174:	movt	r3, #3
   1a178:	ldr	r0, [r0, #4]
   1a17c:	str	lr, [sp, #4]
   1a180:	cmp	r0, #0
   1a184:	beq	1a1b8 <free_token_boolean_op@@Base+0x50>
   1a188:	ldr	r2, [r3, #200]	; 0xc8
   1a18c:	ldr	r1, [r3, #204]	; 0xcc
   1a190:	adds	r2, r2, #1
   1a194:	adc	r1, r1, #0
   1a198:	str	r2, [r3, #200]	; 0xc8
   1a19c:	str	r1, [r3, #204]	; 0xcc
   1a1a0:	bl	11fe4 <free@plt>
   1a1a4:	mov	r0, r4
   1a1a8:	ldr	r4, [sp]
   1a1ac:	ldr	lr, [sp, #4]
   1a1b0:	add	sp, sp, #8
   1a1b4:	b	11fe4 <free@plt>
   1a1b8:	ldr	r2, [r3, #208]	; 0xd0
   1a1bc:	ldr	r1, [r3, #212]	; 0xd4
   1a1c0:	adds	r2, r2, #1
   1a1c4:	adc	r1, r1, #0
   1a1c8:	str	r2, [r3, #208]	; 0xd0
   1a1cc:	str	r1, [r3, #212]	; 0xd4
   1a1d0:	b	1a1a4 <free_token_boolean_op@@Base+0x3c>

0001a1d4 <init_lexer@@Base>:
   1a1d4:	movw	r3, #448	; 0x1c0
   1a1d8:	movt	r3, #3
   1a1dc:	push	{lr}		; (str lr, [sp, #-4]!)
   1a1e0:	ldm	r3, {r2, ip}
   1a1e4:	mov	lr, #0
   1a1e8:	stm	r0, {r1, lr}
   1a1ec:	str	lr, [r0, #8]
   1a1f0:	adds	r2, r2, #1
   1a1f4:	adc	ip, ip, lr
   1a1f8:	stm	r3, {r2, ip}
   1a1fc:	pop	{pc}		; (ldr pc, [sp], #4)

0001a200 <destroy_lexer@@Base>:
   1a200:	ldr	r0, [r0, #4]
   1a204:	movw	r3, #448	; 0x1c0
   1a208:	movt	r3, #3
   1a20c:	cmp	r0, #0
   1a210:	beq	1a230 <destroy_lexer@@Base+0x30>
   1a214:	ldr	r2, [r3, #8]
   1a218:	ldr	r1, [r3, #12]
   1a21c:	adds	r2, r2, #1
   1a220:	adc	r1, r1, #0
   1a224:	str	r2, [r3, #8]
   1a228:	str	r1, [r3, #12]
   1a22c:	b	11fe4 <free@plt>
   1a230:	ldr	r2, [r3, #16]
   1a234:	ldr	r1, [r3, #20]
   1a238:	adds	r2, r2, #1
   1a23c:	adc	r1, r1, #0
   1a240:	str	r2, [r3, #16]
   1a244:	str	r1, [r3, #20]
   1a248:	bx	lr

0001a24c <free_stack_base@@Base>:
   1a24c:	movw	r3, #448	; 0x1c0
   1a250:	movt	r3, #3
   1a254:	ldr	r2, [r3, #24]
   1a258:	ldr	r1, [r3, #28]
   1a25c:	adds	r2, r2, #1
   1a260:	adc	r1, r1, #0
   1a264:	str	r2, [r3, #24]
   1a268:	str	r1, [r3, #28]
   1a26c:	b	11fe4 <free@plt>

0001a270 <push_back@@Base>:
   1a270:	movw	r3, #448	; 0x1c0
   1a274:	movt	r3, #3
   1a278:	strd	r4, [sp, #-16]!
   1a27c:	ldr	r2, [r3, #32]
   1a280:	mov	r4, r0
   1a284:	mov	r0, #8
   1a288:	mov	r5, r1
   1a28c:	ldr	ip, [r3, #36]	; 0x24
   1a290:	str	r6, [sp, #8]
   1a294:	str	lr, [sp, #12]
   1a298:	adds	r2, r2, #1
   1a29c:	adc	ip, ip, #0
   1a2a0:	str	r2, [r3, #32]
   1a2a4:	str	ip, [r3, #36]	; 0x24
   1a2a8:	bl	12044 <malloc@plt>
   1a2ac:	ldr	r3, [r4, #4]
   1a2b0:	ldr	r6, [sp, #8]
   1a2b4:	str	r0, [r4, #4]
   1a2b8:	stm	r0, {r3, r5}
   1a2bc:	ldrd	r4, [sp]
   1a2c0:	add	sp, sp, #12
   1a2c4:	pop	{pc}		; (ldr pc, [sp], #4)

0001a2c8 <get_char@@Base>:
   1a2c8:	movw	r3, #448	; 0x1c0
   1a2cc:	movt	r3, #3
   1a2d0:	ldr	ip, [r0, #8]
   1a2d4:	str	r4, [sp, #-8]!
   1a2d8:	ldr	r2, [r3, #40]	; 0x28
   1a2dc:	ldr	r1, [r3, #44]	; 0x2c
   1a2e0:	str	lr, [sp, #4]
   1a2e4:	add	r4, ip, #1
   1a2e8:	ldr	lr, [r0]
   1a2ec:	adds	r2, r2, #1
   1a2f0:	str	r4, [r0, #8]
   1a2f4:	ldr	r4, [sp]
   1a2f8:	add	sp, sp, #4
   1a2fc:	str	r2, [r3, #40]	; 0x28
   1a300:	adc	r2, r1, #0
   1a304:	ldrb	r0, [lr, ip]
   1a308:	str	r2, [r3, #44]	; 0x2c
   1a30c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a310 <push_back_chars@@Base>:
   1a310:	ldr	ip, [r0, #8]
   1a314:	cmp	ip, r1
   1a318:	bcc	1a348 <push_back_chars@@Base+0x38>
   1a31c:	movw	r3, #448	; 0x1c0
   1a320:	movt	r3, #3
   1a324:	ldr	r2, [r3, #48]	; 0x30
   1a328:	sub	ip, ip, r1
   1a32c:	ldr	r1, [r3, #52]	; 0x34
   1a330:	str	ip, [r0, #8]
   1a334:	adds	r2, r2, #1
   1a338:	adc	r1, r1, #0
   1a33c:	str	r2, [r3, #48]	; 0x30
   1a340:	str	r1, [r3, #52]	; 0x34
   1a344:	bx	lr
   1a348:	str	r4, [sp, #-8]!
   1a34c:	movw	r4, #448	; 0x1c0
   1a350:	movt	r4, #3
   1a354:	movw	r3, #60464	; 0xec30
   1a358:	movt	r3, #2
   1a35c:	ldr	ip, [r4, #56]	; 0x38
   1a360:	mov	r1, #1
   1a364:	mov	r2, #32
   1a368:	ldr	r3, [r3]
   1a36c:	movw	r0, #56212	; 0xdb94
   1a370:	movt	r0, #1
   1a374:	str	lr, [sp, #4]
   1a378:	ldr	lr, [r4, #60]	; 0x3c
   1a37c:	adds	ip, ip, r1
   1a380:	str	ip, [r4, #56]	; 0x38
   1a384:	adc	lr, lr, #0
   1a388:	str	lr, [r4, #60]	; 0x3c
   1a38c:	bl	12008 <fwrite@plt>
   1a390:	ldr	r3, [r4, #64]	; 0x40
   1a394:	mov	r0, #1
   1a398:	ldr	r2, [r4, #68]	; 0x44
   1a39c:	adds	r3, r3, r0
   1a3a0:	adc	r2, r2, #0
   1a3a4:	str	r3, [r4, #64]	; 0x40
   1a3a8:	str	r2, [r4, #68]	; 0x44
   1a3ac:	bl	12074 <exit@plt>

0001a3b0 <push_back_one_char@@Base>:
   1a3b0:	str	r4, [sp, #-8]!
   1a3b4:	movw	r4, #448	; 0x1c0
   1a3b8:	movt	r4, #3
   1a3bc:	ldr	r3, [r4, #72]	; 0x48
   1a3c0:	ldr	r2, [r4, #76]	; 0x4c
   1a3c4:	ldr	r1, [r0, #8]
   1a3c8:	adds	r3, r3, #1
   1a3cc:	str	lr, [sp, #4]
   1a3d0:	adc	r2, r2, #0
   1a3d4:	str	r3, [r4, #72]	; 0x48
   1a3d8:	cmp	r1, #0
   1a3dc:	str	r2, [r4, #76]	; 0x4c
   1a3e0:	beq	1a428 <push_back_one_char@@Base+0x78>
   1a3e4:	sub	r1, r1, #1
   1a3e8:	ldr	r2, [r4, #48]	; 0x30
   1a3ec:	ldr	ip, [r4, #52]	; 0x34
   1a3f0:	str	r1, [r0, #8]
   1a3f4:	ldr	r3, [r4, #80]	; 0x50
   1a3f8:	adds	r2, r2, #1
   1a3fc:	ldr	r1, [r4, #84]	; 0x54
   1a400:	adc	ip, ip, #0
   1a404:	str	r2, [r4, #48]	; 0x30
   1a408:	adds	r3, r3, #1
   1a40c:	str	ip, [r4, #52]	; 0x34
   1a410:	adc	r2, r1, #0
   1a414:	str	r3, [r4, #80]	; 0x50
   1a418:	str	r2, [r4, #84]	; 0x54
   1a41c:	ldr	r4, [sp]
   1a420:	add	sp, sp, #4
   1a424:	pop	{pc}		; (ldr pc, [sp], #4)
   1a428:	ldr	ip, [r4, #56]	; 0x38
   1a42c:	mov	r1, #1
   1a430:	movw	r3, #60464	; 0xec30
   1a434:	movt	r3, #2
   1a438:	mov	r2, #32
   1a43c:	ldr	lr, [r4, #60]	; 0x3c
   1a440:	movw	r0, #56212	; 0xdb94
   1a444:	movt	r0, #1
   1a448:	ldr	r3, [r3]
   1a44c:	adds	ip, ip, r1
   1a450:	adc	lr, lr, #0
   1a454:	str	ip, [r4, #56]	; 0x38
   1a458:	str	lr, [r4, #60]	; 0x3c
   1a45c:	bl	12008 <fwrite@plt>
   1a460:	ldr	r3, [r4, #64]	; 0x40
   1a464:	mov	r0, #1
   1a468:	ldr	r2, [r4, #68]	; 0x44
   1a46c:	adds	r3, r3, r0
   1a470:	adc	r2, r2, #0
   1a474:	str	r3, [r4, #64]	; 0x40
   1a478:	str	r2, [r4, #68]	; 0x44
   1a47c:	bl	12074 <exit@plt>

0001a480 <next@@Base>:
   1a480:	ldr	r3, [r0, #4]
   1a484:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a488:	mov	r4, r0
   1a48c:	strd	r6, [sp, #8]
   1a490:	strd	r8, [sp, #16]
   1a494:	str	sl, [sp, #24]
   1a498:	cmp	r3, #0
   1a49c:	str	lr, [sp, #28]
   1a4a0:	sub	sp, sp, #512	; 0x200
   1a4a4:	bne	1a56c <next@@Base+0xec>
   1a4a8:	ldr	ip, [r0]
   1a4ac:	ldr	r2, [r0, #8]
   1a4b0:	add	r1, r2, #1
   1a4b4:	add	r0, ip, r2
   1a4b8:	str	r1, [r4, #8]
   1a4bc:	ldrb	r7, [ip, r2]
   1a4c0:	cmp	r7, #0
   1a4c4:	beq	1a524 <next@@Base+0xa4>
   1a4c8:	movw	r5, #448	; 0x1c0
   1a4cc:	movt	r5, #3
   1a4d0:	ldr	r6, [r5, #104]	; 0x68
   1a4d4:	mov	r8, r3
   1a4d8:	ldr	r9, [r5, #108]	; 0x6c
   1a4dc:	ldr	r2, [r5, #112]	; 0x70
   1a4e0:	ldr	lr, [r5, #116]	; 0x74
   1a4e4:	cmp	r7, #32
   1a4e8:	cmpne	r7, #9
   1a4ec:	bne	1a5c0 <next@@Base+0x140>
   1a4f0:	add	r1, r1, #1
   1a4f4:	adds	r2, r2, #1
   1a4f8:	adc	lr, lr, #0
   1a4fc:	mov	r3, #1
   1a500:	str	r1, [r4, #8]
   1a504:	ldrb	r7, [r0, #1]!
   1a508:	cmp	r7, #0
   1a50c:	bne	1a4e4 <next@@Base+0x64>
   1a510:	cmp	r8, #0
   1a514:	str	r2, [r5, #112]	; 0x70
   1a518:	str	lr, [r5, #116]	; 0x74
   1a51c:	strne	r6, [r5, #104]	; 0x68
   1a520:	strne	r9, [r5, #108]	; 0x6c
   1a524:	ldr	r4, [pc, #3032]	; 1b104 <next@@Base+0xc84>
   1a528:	mov	r0, #4
   1a52c:	ldr	r3, [r4, #-8]
   1a530:	ldr	r2, [r4, #-4]
   1a534:	adds	r3, r3, #1
   1a538:	adc	r2, r2, #0
   1a53c:	str	r3, [r4, #-8]
   1a540:	str	r2, [r4, #-4]
   1a544:	bl	12044 <malloc@plt>
   1a548:	mov	r6, r0
   1a54c:	bl	19f00 <init_token_eof@@Base>
   1a550:	ldr	r3, [r4]
   1a554:	ldr	r2, [r4, #4]
   1a558:	adds	r3, r3, #1
   1a55c:	adc	r2, r2, #0
   1a560:	str	r3, [r4]
   1a564:	str	r2, [r4, #4]
   1a568:	b	1a5a0 <next@@Base+0x120>
   1a56c:	movw	r2, #448	; 0x1c0
   1a570:	movt	r2, #3
   1a574:	ldr	lr, [r3]
   1a578:	mov	r0, r3
   1a57c:	ldr	r1, [r2, #88]	; 0x58
   1a580:	ldr	ip, [r2, #92]	; 0x5c
   1a584:	ldr	r6, [r3, #4]
   1a588:	adds	r1, r1, #1
   1a58c:	str	lr, [r4, #4]
   1a590:	adc	r3, ip, #0
   1a594:	str	r1, [r2, #88]	; 0x58
   1a598:	str	r3, [r2, #92]	; 0x5c
   1a59c:	bl	11fe4 <free@plt>
   1a5a0:	mov	r0, r6
   1a5a4:	add	sp, sp, #512	; 0x200
   1a5a8:	ldrd	r4, [sp]
   1a5ac:	ldrd	r6, [sp, #8]
   1a5b0:	ldrd	r8, [sp, #16]
   1a5b4:	ldr	sl, [sp, #24]
   1a5b8:	add	sp, sp, #28
   1a5bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5c0:	cmp	r7, #10
   1a5c4:	beq	1a744 <next@@Base+0x2c4>
   1a5c8:	cmp	r8, #0
   1a5cc:	strne	r6, [r5, #104]	; 0x68
   1a5d0:	strne	r9, [r5, #108]	; 0x6c
   1a5d4:	cmp	r3, #0
   1a5d8:	strne	r2, [r5, #112]	; 0x70
   1a5dc:	strne	lr, [r5, #116]	; 0x74
   1a5e0:	cmp	r7, #48	; 0x30
   1a5e4:	beq	1aaf4 <next@@Base+0x674>
   1a5e8:	sub	r3, r7, #49	; 0x31
   1a5ec:	cmp	r3, #8
   1a5f0:	bhi	1a754 <next@@Base+0x2d4>
   1a5f4:	add	r0, r1, #1
   1a5f8:	ldr	r3, [r5, #136]	; 0x88
   1a5fc:	add	lr, ip, r1
   1a600:	strb	r7, [sp]
   1a604:	str	r0, [r4, #8]
   1a608:	ldrb	r2, [ip, r1]
   1a60c:	ldr	ip, [r5, #140]	; 0x8c
   1a610:	adds	r3, r3, #1
   1a614:	str	r3, [r5, #136]	; 0x88
   1a618:	adc	r3, ip, #0
   1a61c:	cmp	r2, #0
   1a620:	str	r3, [r5, #140]	; 0x8c
   1a624:	beq	1a524 <next@@Base+0xa4>
   1a628:	sub	r3, r2, #48	; 0x30
   1a62c:	cmp	r3, #9
   1a630:	bhi	1a888 <next@@Base+0x408>
   1a634:	ldr	sl, [pc, #2764]	; 1b108 <next@@Base+0xc88>
   1a638:	rsb	r1, r1, #1
   1a63c:	mov	r7, sp
   1a640:	ldmdb	sl, {r3, r6}
   1a644:	b	1a64c <next@@Base+0x1cc>
   1a648:	mov	r0, ip
   1a64c:	add	ip, r0, #1
   1a650:	strb	r2, [r7, #1]!
   1a654:	adds	r3, r3, #1
   1a658:	adc	r6, r6, #0
   1a65c:	add	r9, r1, r0
   1a660:	str	ip, [r4, #8]
   1a664:	ldrb	r2, [lr, #1]!
   1a668:	sub	r8, r2, #48	; 0x30
   1a66c:	cmp	r8, #9
   1a670:	bls	1a648 <next@@Base+0x1c8>
   1a674:	stmdb	sl, {r3, r6}
   1a678:	ldr	r3, [sl]
   1a67c:	ldr	r2, [sl, #4]
   1a680:	adds	r3, r3, #1
   1a684:	adc	r2, r2, #0
   1a688:	cmp	ip, #0
   1a68c:	str	r3, [sl]
   1a690:	str	r2, [sl, #4]
   1a694:	beq	1adf8 <next@@Base+0x978>
   1a698:	ldr	r7, [pc, #2668]	; 1b10c <next@@Base+0xc8c>
   1a69c:	add	r3, sp, #512	; 0x200
   1a6a0:	mov	r8, #0
   1a6a4:	add	r9, r3, r9
   1a6a8:	str	r0, [r4, #8]
   1a6ac:	mov	r0, #8
   1a6b0:	ldr	r2, [r5, #48]	; 0x30
   1a6b4:	strb	r8, [r9, #-512]	; 0xfffffe00
   1a6b8:	ldr	ip, [r5, #52]	; 0x34
   1a6bc:	mov	r4, r7
   1a6c0:	ldr	r3, [r7, #-8]
   1a6c4:	adds	r2, r2, #1
   1a6c8:	ldr	r1, [r7, #-4]
   1a6cc:	adc	ip, ip, r8
   1a6d0:	str	r2, [r5, #48]	; 0x30
   1a6d4:	adds	r3, r3, #1
   1a6d8:	str	ip, [r5, #52]	; 0x34
   1a6dc:	adc	r2, r1, r8
   1a6e0:	str	r3, [r7, #-8]
   1a6e4:	str	r2, [r7, #-4]
   1a6e8:	bl	12044 <malloc@plt>
   1a6ec:	mov	r6, r0
   1a6f0:	mov	r1, r8
   1a6f4:	mov	r2, #10
   1a6f8:	mov	r0, sp
   1a6fc:	bl	11fc0 <strtol@plt>
   1a700:	ldr	r3, [r7]
   1a704:	mov	r1, r0
   1a708:	mov	r0, r6
   1a70c:	ldr	r2, [r7, #4]
   1a710:	adds	r3, r3, #1
   1a714:	mov	r8, r3
   1a718:	adc	r3, r2, #0
   1a71c:	mov	r9, r3
   1a720:	strd	r8, [r4], #16
   1a724:	bl	19d90 <init_token_int_value@@Base>
   1a728:	ldr	r3, [r4, #-8]
   1a72c:	ldr	r2, [r4, #-4]
   1a730:	adds	r3, r3, #1
   1a734:	adc	r2, r2, #0
   1a738:	str	r3, [r4, #-8]
   1a73c:	str	r2, [r4, #-4]
   1a740:	b	1a5a0 <next@@Base+0x120>
   1a744:	adds	r6, r6, #1
   1a748:	mov	r8, #1
   1a74c:	adc	r9, r9, #0
   1a750:	b	1a4f0 <next@@Base+0x70>
   1a754:	cmp	r7, #40	; 0x28
   1a758:	beq	1ab3c <next@@Base+0x6bc>
   1a75c:	cmp	r7, #41	; 0x29
   1a760:	beq	1ab80 <next@@Base+0x700>
   1a764:	cmp	r7, #123	; 0x7b
   1a768:	beq	1ac4c <next@@Base+0x7cc>
   1a76c:	cmp	r7, #125	; 0x7d
   1a770:	beq	1ac08 <next@@Base+0x788>
   1a774:	cmp	r7, #59	; 0x3b
   1a778:	beq	1abc4 <next@@Base+0x744>
   1a77c:	cmp	r7, #101	; 0x65
   1a780:	beq	1a89c <next@@Base+0x41c>
   1a784:	cmp	r7, #105	; 0x69
   1a788:	beq	1a94c <next@@Base+0x4cc>
   1a78c:	cmp	r7, #109	; 0x6d
   1a790:	beq	1aa28 <next@@Base+0x5a8>
   1a794:	cmp	r7, #114	; 0x72
   1a798:	bne	1acd8 <next@@Base+0x858>
   1a79c:	ldr	r3, [r5, #248]	; 0xf8
   1a7a0:	add	r0, r1, #1
   1a7a4:	strb	r7, [sp]
   1a7a8:	ldr	lr, [r5, #252]	; 0xfc
   1a7ac:	str	r0, [r4, #8]
   1a7b0:	ldrb	r2, [ip, r1]
   1a7b4:	adds	r3, r3, #1
   1a7b8:	str	r3, [r5, #248]	; 0xf8
   1a7bc:	adc	r3, lr, #0
   1a7c0:	cmp	r2, #0
   1a7c4:	str	r3, [r5, #252]	; 0xfc
   1a7c8:	beq	1a524 <next@@Base+0xa4>
   1a7cc:	cmp	r2, #101	; 0x65
   1a7d0:	bne	1adf0 <next@@Base+0x970>
   1a7d4:	add	r3, r1, #2
   1a7d8:	strb	r2, [sp, #1]
   1a7dc:	str	r3, [r4, #8]
   1a7e0:	ldrb	r2, [ip, r0]
   1a7e4:	cmp	r2, #116	; 0x74
   1a7e8:	ldrne	r2, [pc, #2336]	; 1b110 <next@@Base+0xc90>
   1a7ec:	bne	1acb8 <next@@Base+0x838>
   1a7f0:	add	r0, r1, #3
   1a7f4:	strb	r2, [sp, #2]
   1a7f8:	str	r0, [r4, #8]
   1a7fc:	ldrb	r2, [ip, r3]
   1a800:	cmp	r2, #117	; 0x75
   1a804:	ldrne	r2, [pc, #2312]	; 1b114 <next@@Base+0xc94>
   1a808:	bne	1ac94 <next@@Base+0x814>
   1a80c:	add	r3, r1, #4
   1a810:	strb	r2, [sp, #3]
   1a814:	str	r3, [r4, #8]
   1a818:	ldrb	r2, [ip, r0]
   1a81c:	cmp	r2, #114	; 0x72
   1a820:	ldrne	r2, [pc, #2284]	; 1b114 <next@@Base+0xc94>
   1a824:	bne	1acb8 <next@@Base+0x838>
   1a828:	add	r1, r1, #5
   1a82c:	strb	r7, [sp, #4]
   1a830:	ldr	r5, [pc, #2272]	; 1b118 <next@@Base+0xc98>
   1a834:	str	r1, [r4, #8]
   1a838:	ldrb	r1, [ip, r3]
   1a83c:	ldr	r3, [r5, #-8]
   1a840:	ldr	r2, [r5, #-4]
   1a844:	adds	r3, r3, #1
   1a848:	adc	r2, r2, #0
   1a84c:	cmp	r1, #110	; 0x6e
   1a850:	str	r3, [r5, #-8]
   1a854:	str	r2, [r5, #-4]
   1a858:	bne	1add0 <next@@Base+0x950>
   1a85c:	mov	r0, #4
   1a860:	bl	12044 <malloc@plt>
   1a864:	mov	r6, r0
   1a868:	bl	19ea8 <init_token_return@@Base>
   1a86c:	ldr	r3, [r5, #8]
   1a870:	ldr	r2, [r5, #12]
   1a874:	adds	r3, r3, #1
   1a878:	adc	r2, r2, #0
   1a87c:	str	r3, [r5, #8]
   1a880:	str	r2, [r5, #12]
   1a884:	b	1a5a0 <next@@Base+0x120>
   1a888:	mov	ip, r0
   1a88c:	mov	r9, #1
   1a890:	ldr	sl, [pc, #2160]	; 1b108 <next@@Base+0xc88>
   1a894:	mov	r0, r1
   1a898:	b	1a678 <next@@Base+0x1f8>
   1a89c:	add	r0, r1, #1
   1a8a0:	ldr	r2, [r5, #224]	; 0xe0
   1a8a4:	strb	r7, [sp]
   1a8a8:	ldr	lr, [r5, #228]	; 0xe4
   1a8ac:	str	r0, [r4, #8]
   1a8b0:	ldrb	r3, [ip, r1]
   1a8b4:	adds	r2, r2, #1
   1a8b8:	adc	lr, lr, #0
   1a8bc:	str	r2, [r5, #224]	; 0xe0
   1a8c0:	cmp	r3, #0
   1a8c4:	str	lr, [r5, #228]	; 0xe4
   1a8c8:	beq	1a524 <next@@Base+0xa4>
   1a8cc:	cmp	r3, #108	; 0x6c
   1a8d0:	bne	1acb4 <next@@Base+0x834>
   1a8d4:	mov	r2, #108	; 0x6c
   1a8d8:	add	r3, r1, #2
   1a8dc:	strb	r2, [sp, #1]
   1a8e0:	str	r3, [r4, #8]
   1a8e4:	ldrb	r2, [ip, r0]
   1a8e8:	cmp	r2, #115	; 0x73
   1a8ec:	bne	1ac90 <next@@Base+0x810>
   1a8f0:	ldr	r5, [pc, #2084]	; 1b11c <next@@Base+0xc9c>
   1a8f4:	add	r1, r1, #3
   1a8f8:	strb	r2, [sp, #2]
   1a8fc:	str	r1, [r4, #8]
   1a900:	ldrb	r1, [ip, r3]
   1a904:	ldr	r3, [r5]
   1a908:	ldr	r2, [r5, #4]
   1a90c:	adds	r3, r3, #1
   1a910:	adc	r2, r2, #0
   1a914:	cmp	r1, #101	; 0x65
   1a918:	str	r3, [r5]
   1a91c:	str	r2, [r5, #4]
   1a920:	bne	1ada4 <next@@Base+0x924>
   1a924:	mov	r0, #4
   1a928:	bl	12044 <malloc@plt>
   1a92c:	mov	r6, r0
   1a930:	bl	19f58 <init_token_else@@Base>
   1a934:	ldrd	r0, [r5, #16]!
   1a938:	adds	r3, r0, #1
   1a93c:	adc	r2, r1, #0
   1a940:	str	r3, [r5]
   1a944:	str	r2, [r5, #4]
   1a948:	b	1a5a0 <next@@Base+0x120>
   1a94c:	add	r2, r1, #1
   1a950:	ldr	r0, [r5, #232]	; 0xe8
   1a954:	strb	r7, [sp]
   1a958:	ldr	lr, [r5, #236]	; 0xec
   1a95c:	str	r2, [r4, #8]
   1a960:	ldrb	r3, [ip, r1]
   1a964:	adds	r0, r0, #1
   1a968:	adc	lr, lr, #0
   1a96c:	str	r0, [r5, #232]	; 0xe8
   1a970:	cmp	r3, #0
   1a974:	str	lr, [r5, #236]	; 0xec
   1a978:	beq	1a524 <next@@Base+0xa4>
   1a97c:	cmp	r3, #102	; 0x66
   1a980:	bne	1a9d8 <next@@Base+0x558>
   1a984:	ldr	r4, [pc, #1940]	; 1b120 <next@@Base+0xca0>
   1a988:	mov	r2, #0
   1a98c:	mov	r0, #4
   1a990:	strb	r3, [sp, #1]
   1a994:	strb	r2, [sp, #2]
   1a998:	ldr	r3, [r4, #-8]
   1a99c:	ldr	r2, [r4, #-4]
   1a9a0:	adds	r3, r3, #1
   1a9a4:	adc	r2, r2, #0
   1a9a8:	str	r3, [r4, #-8]
   1a9ac:	str	r2, [r4, #-4]
   1a9b0:	bl	12044 <malloc@plt>
   1a9b4:	mov	r6, r0
   1a9b8:	bl	19f2c <init_token_if@@Base>
   1a9bc:	ldr	r3, [r4, #24]
   1a9c0:	ldr	r2, [r4, #28]
   1a9c4:	adds	r3, r3, #1
   1a9c8:	adc	r2, r2, #0
   1a9cc:	str	r3, [r4, #24]
   1a9d0:	str	r2, [r4, #28]
   1a9d4:	b	1a5a0 <next@@Base+0x120>
   1a9d8:	cmp	r3, #110	; 0x6e
   1a9dc:	bne	1adc8 <next@@Base+0x948>
   1a9e0:	ldr	r5, [pc, #1848]	; 1b120 <next@@Base+0xca0>
   1a9e4:	add	r1, r1, #2
   1a9e8:	strb	r3, [sp, #1]
   1a9ec:	str	r1, [r4, #8]
   1a9f0:	ldrb	r1, [ip, r2]
   1a9f4:	ldr	r3, [r5]
   1a9f8:	ldr	r2, [r5, #4]
   1a9fc:	adds	r3, r3, #1
   1aa00:	adc	r2, r2, #0
   1aa04:	cmp	r1, #116	; 0x74
   1aa08:	str	r3, [r5]
   1aa0c:	str	r2, [r5, #4]
   1aa10:	bne	1ada4 <next@@Base+0x924>
   1aa14:	mov	r0, #4
   1aa18:	bl	12044 <malloc@plt>
   1aa1c:	mov	r6, r0
   1aa20:	bl	19d64 <init_token_int_type@@Base>
   1aa24:	b	1a934 <next@@Base+0x4b4>
   1aa28:	ldr	r3, [r5, #240]	; 0xf0
   1aa2c:	mov	r2, #109	; 0x6d
   1aa30:	add	r0, r1, #1
   1aa34:	ldr	lr, [r5, #244]	; 0xf4
   1aa38:	strb	r2, [sp]
   1aa3c:	str	r0, [r4, #8]
   1aa40:	ldrb	r2, [ip, r1]
   1aa44:	adds	r3, r3, #1
   1aa48:	str	r3, [r5, #240]	; 0xf0
   1aa4c:	adc	r3, lr, #0
   1aa50:	str	r3, [r5, #244]	; 0xf4
   1aa54:	cmp	r2, #0
   1aa58:	beq	1a524 <next@@Base+0xa4>
   1aa5c:	cmp	r2, #97	; 0x61
   1aa60:	bne	1ae50 <next@@Base+0x9d0>
   1aa64:	add	r3, r1, #2
   1aa68:	strb	r2, [sp, #1]
   1aa6c:	str	r3, [r4, #8]
   1aa70:	ldrb	r2, [ip, r0]
   1aa74:	cmp	r2, #105	; 0x69
   1aa78:	ldrne	r2, [pc, #1700]	; 1b124 <next@@Base+0xca4>
   1aa7c:	bne	1ac94 <next@@Base+0x814>
   1aa80:	add	r1, r1, #3
   1aa84:	strb	r2, [sp, #2]
   1aa88:	ldr	r5, [pc, #1684]	; 1b124 <next@@Base+0xca4>
   1aa8c:	str	r1, [r4, #8]
   1aa90:	ldrb	r1, [ip, r3]
   1aa94:	ldr	r3, [r5]
   1aa98:	ldr	r2, [r5, #4]
   1aa9c:	adds	r3, r3, #1
   1aaa0:	adc	r2, r2, #0
   1aaa4:	cmp	r1, #110	; 0x6e
   1aaa8:	str	r3, [r5]
   1aaac:	str	r2, [r5, #4]
   1aab0:	bne	1ada4 <next@@Base+0x924>
   1aab4:	mov	r6, #0
   1aab8:	mov	r0, #5
   1aabc:	strb	r1, [sp, #3]
   1aac0:	strb	r6, [sp, #4]
   1aac4:	bl	12044 <malloc@plt>
   1aac8:	mov	r4, r0
   1aacc:	mov	r1, sp
   1aad0:	mov	r2, #4
   1aad4:	bl	120bc <strncpy@plt>
   1aad8:	mov	r0, #8
   1aadc:	strb	r6, [r4, #4]
   1aae0:	bl	12044 <malloc@plt>
   1aae4:	mov	r1, r4
   1aae8:	mov	r6, r0
   1aaec:	bl	19dc4 <init_token_function@@Base>
   1aaf0:	b	1a934 <next@@Base+0x4b4>
   1aaf4:	ldr	r3, [r5, #120]	; 0x78
   1aaf8:	mov	r0, #8
   1aafc:	ldr	r2, [r5, #124]	; 0x7c
   1ab00:	adds	r3, r3, #1
   1ab04:	adc	r2, r2, #0
   1ab08:	str	r3, [r5, #120]	; 0x78
   1ab0c:	str	r2, [r5, #124]	; 0x7c
   1ab10:	bl	12044 <malloc@plt>
   1ab14:	mov	r1, #0
   1ab18:	mov	r6, r0
   1ab1c:	bl	19d90 <init_token_int_value@@Base>
   1ab20:	ldr	r3, [r5, #128]	; 0x80
   1ab24:	ldr	r2, [r5, #132]	; 0x84
   1ab28:	adds	r3, r3, #1
   1ab2c:	adc	r2, r2, #0
   1ab30:	str	r3, [r5, #128]	; 0x80
   1ab34:	str	r2, [r5, #132]	; 0x84
   1ab38:	b	1a5a0 <next@@Base+0x120>
   1ab3c:	ldr	r3, [r5, #144]	; 0x90
   1ab40:	mov	r0, #4
   1ab44:	ldr	r2, [r5, #148]	; 0x94
   1ab48:	adds	r3, r3, #1
   1ab4c:	adc	r2, r2, #0
   1ab50:	str	r3, [r5, #144]	; 0x90
   1ab54:	str	r2, [r5, #148]	; 0x94
   1ab58:	bl	12044 <malloc@plt>
   1ab5c:	mov	r6, r0
   1ab60:	bl	19df8 <init_token_opar@@Base>
   1ab64:	ldr	r3, [r5, #152]	; 0x98
   1ab68:	ldr	r2, [r5, #156]	; 0x9c
   1ab6c:	adds	r3, r3, #1
   1ab70:	adc	r2, r2, #0
   1ab74:	str	r3, [r5, #152]	; 0x98
   1ab78:	str	r2, [r5, #156]	; 0x9c
   1ab7c:	b	1a5a0 <next@@Base+0x120>
   1ab80:	ldr	r3, [r5, #160]	; 0xa0
   1ab84:	mov	r0, #4
   1ab88:	ldr	r2, [r5, #164]	; 0xa4
   1ab8c:	adds	r3, r3, #1
   1ab90:	adc	r2, r2, #0
   1ab94:	str	r3, [r5, #160]	; 0xa0
   1ab98:	str	r2, [r5, #164]	; 0xa4
   1ab9c:	bl	12044 <malloc@plt>
   1aba0:	mov	r6, r0
   1aba4:	bl	19e24 <init_token_cpar@@Base>
   1aba8:	ldr	r3, [r5, #168]	; 0xa8
   1abac:	ldr	r2, [r5, #172]	; 0xac
   1abb0:	adds	r3, r3, #1
   1abb4:	adc	r2, r2, #0
   1abb8:	str	r3, [r5, #168]	; 0xa8
   1abbc:	str	r2, [r5, #172]	; 0xac
   1abc0:	b	1a5a0 <next@@Base+0x120>
   1abc4:	ldr	r3, [r5, #208]	; 0xd0
   1abc8:	mov	r0, #4
   1abcc:	ldr	r2, [r5, #212]	; 0xd4
   1abd0:	adds	r3, r3, #1
   1abd4:	adc	r2, r2, #0
   1abd8:	str	r3, [r5, #208]	; 0xd0
   1abdc:	str	r2, [r5, #212]	; 0xd4
   1abe0:	bl	12044 <malloc@plt>
   1abe4:	mov	r6, r0
   1abe8:	bl	19ed4 <init_token_semicolon@@Base>
   1abec:	ldr	r3, [r5, #216]	; 0xd8
   1abf0:	ldr	r2, [r5, #220]	; 0xdc
   1abf4:	adds	r3, r3, #1
   1abf8:	adc	r2, r2, #0
   1abfc:	str	r3, [r5, #216]	; 0xd8
   1ac00:	str	r2, [r5, #220]	; 0xdc
   1ac04:	b	1a5a0 <next@@Base+0x120>
   1ac08:	ldr	r3, [r5, #192]	; 0xc0
   1ac0c:	mov	r0, #4
   1ac10:	ldr	r2, [r5, #196]	; 0xc4
   1ac14:	adds	r3, r3, #1
   1ac18:	adc	r2, r2, #0
   1ac1c:	str	r3, [r5, #192]	; 0xc0
   1ac20:	str	r2, [r5, #196]	; 0xc4
   1ac24:	bl	12044 <malloc@plt>
   1ac28:	mov	r6, r0
   1ac2c:	bl	19e7c <init_token_cbra@@Base>
   1ac30:	ldr	r3, [r5, #200]	; 0xc8
   1ac34:	ldr	r2, [r5, #204]	; 0xcc
   1ac38:	adds	r3, r3, #1
   1ac3c:	adc	r2, r2, #0
   1ac40:	str	r3, [r5, #200]	; 0xc8
   1ac44:	str	r2, [r5, #204]	; 0xcc
   1ac48:	b	1a5a0 <next@@Base+0x120>
   1ac4c:	ldr	r3, [r5, #176]	; 0xb0
   1ac50:	mov	r0, #4
   1ac54:	ldr	r2, [r5, #180]	; 0xb4
   1ac58:	adds	r3, r3, #1
   1ac5c:	adc	r2, r2, #0
   1ac60:	str	r3, [r5, #176]	; 0xb0
   1ac64:	str	r2, [r5, #180]	; 0xb4
   1ac68:	bl	12044 <malloc@plt>
   1ac6c:	mov	r6, r0
   1ac70:	bl	19e50 <init_token_obra@@Base>
   1ac74:	ldr	r3, [r5, #184]	; 0xb8
   1ac78:	ldr	r2, [r5, #188]	; 0xbc
   1ac7c:	adds	r3, r3, #1
   1ac80:	adc	r2, r2, #0
   1ac84:	str	r3, [r5, #184]	; 0xb8
   1ac88:	str	r2, [r5, #188]	; 0xbc
   1ac8c:	b	1a5a0 <next@@Base+0x120>
   1ac90:	ldr	r2, [pc, #1156]	; 1b11c <next@@Base+0xc9c>
   1ac94:	mov	r0, #1
   1ac98:	ldr	r3, [r2, #-8]
   1ac9c:	ldr	r1, [r2, #-4]
   1aca0:	adds	r3, r3, r0
   1aca4:	adc	r1, r1, #0
   1aca8:	str	r3, [r2, #-8]
   1acac:	str	r1, [r2, #-4]
   1acb0:	bl	12074 <exit@plt>
   1acb4:	ldr	r2, [pc, #1132]	; 1b128 <next@@Base+0xca8>
   1acb8:	mov	r0, #1
   1acbc:	ldr	r3, [r2]
   1acc0:	ldr	r1, [r2, #4]
   1acc4:	adds	r3, r3, r0
   1acc8:	adc	r1, r1, #0
   1accc:	str	r3, [r2]
   1acd0:	str	r1, [r2, #4]
   1acd4:	bl	12074 <exit@plt>
   1acd8:	cmp	r7, #33	; 0x21
   1acdc:	beq	1b024 <next@@Base+0xba4>
   1ace0:	and	r3, r7, #253	; 0xfd
   1ace4:	cmp	r3, #60	; 0x3c
   1ace8:	beq	1af64 <next@@Base+0xae4>
   1acec:	cmp	r7, #61	; 0x3d
   1acf0:	beq	1af10 <next@@Base+0xa90>
   1acf4:	cmp	r7, #124	; 0x7c
   1acf8:	ldr	r5, [pc, #1068]	; 1b12c <next@@Base+0xcac>
   1acfc:	beq	1aea8 <next@@Base+0xa28>
   1ad00:	ldr	r3, [r5]
   1ad04:	ldr	r2, [r5, #4]
   1ad08:	adds	r3, r3, #1
   1ad0c:	adc	r2, r2, #0
   1ad10:	cmp	r7, #38	; 0x26
   1ad14:	str	r3, [r5]
   1ad18:	str	r2, [r5, #4]
   1ad1c:	bne	1ae78 <next@@Base+0x9f8>
   1ad20:	add	r8, r5, #32
   1ad24:	add	r2, r1, #1
   1ad28:	ldr	r3, [r8, #-8]
   1ad2c:	strb	r7, [sp]
   1ad30:	mov	r0, #8
   1ad34:	str	r2, [r4, #8]
   1ad38:	ldr	r2, [r8, #-4]
   1ad3c:	ldrb	r4, [ip, r1]
   1ad40:	adds	r3, r3, #1
   1ad44:	str	r3, [r8, #-8]
   1ad48:	adc	r2, r2, #0
   1ad4c:	str	r2, [r8, #-4]
   1ad50:	bl	12044 <malloc@plt>
   1ad54:	cmp	r4, #38	; 0x26
   1ad58:	mov	r6, r0
   1ad5c:	bne	1ae58 <next@@Base+0x9d8>
   1ad60:	mov	r0, #3
   1ad64:	bl	12044 <malloc@plt>
   1ad68:	mov	r3, r0
   1ad6c:	mov	r2, #0
   1ad70:	movw	r0, #9766	; 0x2626
   1ad74:	mov	r1, r3
   1ad78:	strh	r0, [r3]
   1ad7c:	mov	r0, r6
   1ad80:	strb	r2, [r3, #2]
   1ad84:	bl	19f84 <init_token_boolean_op@@Base>
   1ad88:	ldr	r3, [r5, #40]	; 0x28
   1ad8c:	ldr	r2, [r5, #44]	; 0x2c
   1ad90:	adds	r3, r3, #1
   1ad94:	adc	r2, r2, #0
   1ad98:	str	r3, [r5, #40]	; 0x28
   1ad9c:	str	r2, [r5, #44]	; 0x2c
   1ada0:	b	1a5a0 <next@@Base+0x120>
   1ada4:	add	r5, r5, #16
   1ada8:	ldr	r3, [r5, #-8]
   1adac:	mov	r0, #1
   1adb0:	ldr	r2, [r5, #-4]
   1adb4:	adds	r3, r3, r0
   1adb8:	adc	r2, r2, #0
   1adbc:	str	r3, [r5, #-8]
   1adc0:	str	r2, [r5, #-4]
   1adc4:	bl	12074 <exit@plt>
   1adc8:	ldr	r2, [pc, #864]	; 1b130 <next@@Base+0xcb0>
   1adcc:	b	1acb8 <next@@Base+0x838>
   1add0:	ldr	r3, [r5]
   1add4:	mov	r0, #1
   1add8:	ldr	r2, [r5, #4]
   1addc:	adds	r3, r3, r0
   1ade0:	adc	r2, r2, #0
   1ade4:	str	r3, [r5]
   1ade8:	str	r2, [r5, #4]
   1adec:	bl	12074 <exit@plt>
   1adf0:	ldr	r2, [pc, #792]	; 1b110 <next@@Base+0xc90>
   1adf4:	b	1ac94 <next@@Base+0x814>
   1adf8:	ldr	ip, [r5, #56]	; 0x38
   1adfc:	mov	r1, #1
   1ae00:	movw	r3, #60464	; 0xec30
   1ae04:	movt	r3, #2
   1ae08:	mov	r2, #32
   1ae0c:	ldr	lr, [r5, #60]	; 0x3c
   1ae10:	movw	r0, #56212	; 0xdb94
   1ae14:	movt	r0, #1
   1ae18:	ldr	r3, [r3]
   1ae1c:	adds	ip, ip, r1
   1ae20:	adc	lr, lr, #0
   1ae24:	str	ip, [r5, #56]	; 0x38
   1ae28:	str	lr, [r5, #60]	; 0x3c
   1ae2c:	bl	12008 <fwrite@plt>
   1ae30:	ldr	r3, [r5, #64]	; 0x40
   1ae34:	mov	r0, #1
   1ae38:	ldr	r2, [r5, #68]	; 0x44
   1ae3c:	adds	r3, r3, r0
   1ae40:	adc	r2, r2, #0
   1ae44:	str	r3, [r5, #64]	; 0x40
   1ae48:	str	r2, [r5, #68]	; 0x44
   1ae4c:	bl	12074 <exit@plt>
   1ae50:	ldr	r2, [pc, #732]	; 1b134 <next@@Base+0xcb4>
   1ae54:	b	1acb8 <next@@Base+0x838>
   1ae58:	ldr	r3, [r8]
   1ae5c:	mov	r0, #1
   1ae60:	ldr	r2, [r8, #4]
   1ae64:	adds	r3, r3, r0
   1ae68:	adc	r2, r2, #0
   1ae6c:	str	r3, [r8]
   1ae70:	str	r2, [r8, #4]
   1ae74:	bl	12074 <exit@plt>
   1ae78:	movw	r3, #60464	; 0xec30
   1ae7c:	movt	r3, #2
   1ae80:	mov	r2, r7
   1ae84:	movw	r1, #56248	; 0xdbb8
   1ae88:	movt	r1, #1
   1ae8c:	ldr	r0, [r3]
   1ae90:	bl	1208c <fprintf@plt>
   1ae94:	ldrd	r6, [r5, #48]!	; 0x30
   1ae98:	mov	r0, #1
   1ae9c:	mov	r3, r6
   1aea0:	mov	r2, r7
   1aea4:	b	1addc <next@@Base+0x95c>
   1aea8:	add	r3, r1, #1
   1aeac:	ldr	r2, [r5, #-4]
   1aeb0:	mov	r0, #8
   1aeb4:	strb	r7, [sp]
   1aeb8:	str	r3, [r4, #8]
   1aebc:	ldr	r3, [r5, #-8]
   1aec0:	ldrb	r4, [ip, r1]
   1aec4:	adds	r3, r3, #1
   1aec8:	adc	r2, r2, #0
   1aecc:	str	r3, [r5, #-8]
   1aed0:	str	r2, [r5, #-4]
   1aed4:	bl	12044 <malloc@plt>
   1aed8:	cmp	r4, #124	; 0x7c
   1aedc:	mov	r6, r0
   1aee0:	bne	1ada4 <next@@Base+0x924>
   1aee4:	mov	r0, #3
   1aee8:	bl	12044 <malloc@plt>
   1aeec:	mov	r3, r0
   1aef0:	movw	r0, #31868	; 0x7c7c
   1aef4:	mov	r2, #0
   1aef8:	mov	r1, r3
   1aefc:	strh	r0, [r3]
   1af00:	mov	r0, r6
   1af04:	strb	r2, [r3, #2]
   1af08:	bl	19f84 <init_token_boolean_op@@Base>
   1af0c:	b	1a934 <next@@Base+0x4b4>
   1af10:	ldr	r5, [pc, #544]	; 1b138 <next@@Base+0xcb8>
   1af14:	add	r3, r1, #1
   1af18:	mov	r0, #8
   1af1c:	strb	r7, [sp]
   1af20:	str	r3, [r4, #8]
   1af24:	ldrb	r4, [ip, r1]
   1af28:	ldr	r3, [r5]
   1af2c:	ldr	r2, [r5, #4]
   1af30:	adds	r3, r3, #1
   1af34:	adc	r2, r2, #0
   1af38:	str	r3, [r5]
   1af3c:	str	r2, [r5, #4]
   1af40:	bl	12044 <malloc@plt>
   1af44:	cmp	r4, #61	; 0x3d
   1af48:	mov	r6, r0
   1af4c:	bne	1ada4 <next@@Base+0x924>
   1af50:	mov	r0, #3
   1af54:	bl	12044 <malloc@plt>
   1af58:	mov	r3, r0
   1af5c:	movw	r0, #15677	; 0x3d3d
   1af60:	b	1aef4 <next@@Base+0xa74>
   1af64:	ldr	r5, [pc, #464]	; 1b13c <next@@Base+0xcbc>
   1af68:	add	r3, r1, #1
   1af6c:	mov	r0, #8
   1af70:	strb	r7, [sp]
   1af74:	str	r3, [r4, #8]
   1af78:	ldrb	r8, [ip, r1]
   1af7c:	ldr	r3, [r5]
   1af80:	ldr	r2, [r5, #4]
   1af84:	adds	r3, r3, #1
   1af88:	adc	r2, r2, #0
   1af8c:	str	r3, [r5]
   1af90:	str	r2, [r5, #4]
   1af94:	bl	12044 <malloc@plt>
   1af98:	cmp	r8, #61	; 0x3d
   1af9c:	mov	r6, r0
   1afa0:	beq	1b0cc <next@@Base+0xc4c>
   1afa4:	ldr	r3, [r5, #8]
   1afa8:	mov	r1, #1
   1afac:	mov	r0, r4
   1afb0:	ldr	r2, [r5, #12]
   1afb4:	adds	r3, r3, r1
   1afb8:	adc	r2, r2, #0
   1afbc:	str	r3, [r5, #8]
   1afc0:	str	r2, [r5, #12]
   1afc4:	bl	1a310 <push_back_chars@@Base>
   1afc8:	ldr	r3, [r5, #16]
   1afcc:	mov	r0, #2
   1afd0:	ldr	r2, [r5, #20]
   1afd4:	adds	r3, r3, #1
   1afd8:	adc	r2, r2, #0
   1afdc:	str	r3, [r5, #16]
   1afe0:	str	r2, [r5, #20]
   1afe4:	bl	12044 <malloc@plt>
   1afe8:	ldrb	r3, [sp]
   1afec:	mov	r2, #0
   1aff0:	strb	r3, [r0]
   1aff4:	strb	r2, [r0, #1]
   1aff8:	mov	r1, r0
   1affc:	mov	r0, r6
   1b000:	bl	19f84 <init_token_boolean_op@@Base>
   1b004:	ldr	r2, [pc, #300]	; 1b138 <next@@Base+0xcb8>
   1b008:	ldr	r3, [r2, #-8]
   1b00c:	ldr	r1, [r2, #-4]
   1b010:	adds	r3, r3, #1
   1b014:	adc	r1, r1, #0
   1b018:	str	r3, [r2, #-8]
   1b01c:	str	r1, [r2, #-4]
   1b020:	b	1a5a0 <next@@Base+0x120>
   1b024:	ldr	r5, [pc, #276]	; 1b140 <next@@Base+0xcc0>
   1b028:	add	r3, r1, #1
   1b02c:	mov	r0, #8
   1b030:	strb	r7, [sp]
   1b034:	str	r3, [r4, #8]
   1b038:	ldrb	r7, [ip, r1]
   1b03c:	ldr	r3, [r5]
   1b040:	ldr	r2, [r5, #4]
   1b044:	adds	r3, r3, #1
   1b048:	adc	r2, r2, #0
   1b04c:	str	r3, [r5]
   1b050:	str	r2, [r5, #4]
   1b054:	bl	12044 <malloc@plt>
   1b058:	cmp	r7, #61	; 0x3d
   1b05c:	mov	r6, r0
   1b060:	beq	1b0e8 <next@@Base+0xc68>
   1b064:	ldr	r3, [r5, #8]
   1b068:	mov	r1, #1
   1b06c:	mov	r0, r4
   1b070:	ldr	r2, [r5, #12]
   1b074:	adds	r3, r3, r1
   1b078:	adc	r2, r2, #0
   1b07c:	str	r3, [r5, #8]
   1b080:	str	r2, [r5, #12]
   1b084:	bl	1a310 <push_back_chars@@Base>
   1b088:	ldr	r3, [r5, #16]
   1b08c:	mov	r0, #2
   1b090:	ldr	r2, [r5, #20]
   1b094:	adds	r3, r3, #1
   1b098:	adc	r2, r2, #0
   1b09c:	str	r3, [r5, #16]
   1b0a0:	str	r2, [r5, #20]
   1b0a4:	bl	12044 <malloc@plt>
   1b0a8:	ldrb	r3, [sp]
   1b0ac:	mov	r2, #0
   1b0b0:	strb	r3, [r0]
   1b0b4:	strb	r2, [r0, #1]
   1b0b8:	mov	r1, r0
   1b0bc:	mov	r0, r6
   1b0c0:	bl	19f84 <init_token_boolean_op@@Base>
   1b0c4:	ldr	r2, [pc, #112]	; 1b13c <next@@Base+0xcbc>
   1b0c8:	b	1b008 <next@@Base+0xb88>
   1b0cc:	mov	r0, #3
   1b0d0:	bl	12044 <malloc@plt>
   1b0d4:	mov	r3, #0
   1b0d8:	strb	r7, [r0]
   1b0dc:	strb	r8, [r0, #1]
   1b0e0:	strb	r3, [r0, #2]
   1b0e4:	b	1aff8 <next@@Base+0xb78>
   1b0e8:	mov	r0, #3
   1b0ec:	bl	12044 <malloc@plt>
   1b0f0:	movw	r2, #15649	; 0x3d21
   1b0f4:	mov	r3, #0
   1b0f8:	strh	r2, [r0]
   1b0fc:	strb	r3, [r0, #2]
   1b100:	b	1b0b8 <next@@Base+0xc38>
   1b104:	andeq	r0, r3, r0, asr #8
   1b108:	andeq	r0, r3, r0, ror #6
   1b10c:	andeq	r0, r3, r0, ror r3
   1b110:	andeq	r0, r3, r0, ror #7
   1b114:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1b118:	andeq	r0, r3, r0, lsl #8
   1b11c:	andeq	r0, r3, r0, lsr #8
   1b120:	muleq	r3, r0, r3
   1b124:	andeq	r0, r3, r0, asr #7
   1b128:	andeq	r0, r3, r0, lsl r4
   1b12c:	andeq	r0, r3, r0, lsr #6
   1b130:	andeq	r0, r3, r0, lsl #7
   1b134:			; <UNDEFINED> instruction: 0x000303b0
   1b138:	andeq	r0, r3, r0, lsl #6
   1b13c:	andeq	r0, r3, r0, ror #5
   1b140:	andeq	r0, r3, r0, asr #5
   1b144:	b	1c3e8 <next@@Base+0x1f68>
   1b148:	push	{r4, r5, r6, r7, r8, lr}
   1b14c:	subs	r5, r1, #0
   1b150:	popeq	{r4, r5, r6, r7, r8, pc}
   1b154:	mov	r4, r0
   1b158:	bl	1b144 <next@@Base+0xcc4>
   1b15c:	ldr	r3, [r4]
   1b160:	ldr	r2, [r4, #4]
   1b164:	adds	r6, r3, r0
   1b168:	adc	r7, r2, r1
   1b16c:	subs	r5, r5, #1
   1b170:	strd	r6, [r4], #8
   1b174:	bne	1b158 <next@@Base+0xcd8>
   1b178:	pop	{r4, r5, r6, r7, r8, pc}
   1b17c:	ldr	r3, [pc, #20]	; 1b198 <next@@Base+0xd18>
   1b180:	ldr	r2, [pc, #20]	; 1b19c <next@@Base+0xd1c>
   1b184:	add	r3, pc, r3
   1b188:	ldr	r3, [r3, r2]
   1b18c:	ldmib	r3, {r0, r3}
   1b190:	add	r0, r0, r3
   1b194:	bx	lr
   1b198:	andeq	r2, r1, r4, ror lr
   1b19c:	andeq	r0, r0, r4, lsr #1
   1b1a0:	ldr	r3, [pc, #28]	; 1b1c4 <next@@Base+0xd44>
   1b1a4:	ldr	r2, [pc, #28]	; 1b1c8 <next@@Base+0xd48>
   1b1a8:	add	r3, pc, r3
   1b1ac:	ldr	r3, [r3, r2]
   1b1b0:	ldr	r2, [r3]
   1b1b4:	cmp	r2, #0
   1b1b8:	ldrne	r0, [r3, #20]
   1b1bc:	moveq	r0, #1
   1b1c0:	bx	lr
   1b1c4:	andeq	r2, r1, r0, asr lr
   1b1c8:	andeq	r0, r0, r4, lsr #1
   1b1cc:	bx	lr
   1b1d0:	ldr	ip, [pc, #32]	; 1b1f8 <next@@Base+0xd78>
   1b1d4:	mov	r3, #32
   1b1d8:	teq	r0, r1
   1b1dc:	movmi	r2, ip
   1b1e0:	movpl	r2, #0
   1b1e4:	subs	r3, r3, #1
   1b1e8:	lsl	r1, r1, #1
   1b1ec:	eor	r0, r2, r0, lsl #1
   1b1f0:	bne	1b1d8 <next@@Base+0xd58>
   1b1f4:	bx	lr
   1b1f8:	strbeq	r1, [r1], #3511	; 0xdb7
   1b1fc:	ldr	r2, [pc, #60]	; 1b240 <next@@Base+0xdc0>
   1b200:	ldr	r3, [pc, #60]	; 1b244 <next@@Base+0xdc4>
   1b204:	add	r2, pc, r2
   1b208:	push	{r4, lr}
   1b20c:	ldr	r4, [r2, r3]
   1b210:	ldr	r0, [r4]
   1b214:	cmp	r0, #0
   1b218:	popeq	{r4, pc}
   1b21c:	ldr	r3, [pc, #36]	; 1b248 <next@@Base+0xdc8>
   1b220:	ldr	r3, [r2, r3]
   1b224:	ldr	r3, [r3]
   1b228:	cmp	r0, r3
   1b22c:	popeq	{r4, pc}
   1b230:	bl	120d4 <fclose@plt>
   1b234:	mov	r3, #0
   1b238:	str	r3, [r4]
   1b23c:	pop	{r4, pc}
   1b240:	strdeq	r2, [r1], -r4
   1b244:	andeq	r0, r0, r8, lsr #1
   1b248:	muleq	r0, r8, r0
   1b24c:	ldr	r3, [pc, #76]	; 1b2a0 <next@@Base+0xe20>
   1b250:	ldr	r1, [pc, #76]	; 1b2a4 <next@@Base+0xe24>
   1b254:	add	r3, pc, r3
   1b258:	push	{r4, r5, r6, lr}
   1b25c:	mov	r5, r0
   1b260:	ldr	r4, [r3, r1]
   1b264:	lsl	r1, r0, #2
   1b268:	mov	r0, r4
   1b26c:	mov	r2, #1
   1b270:	ldr	r3, [r0], #28
   1b274:	bl	12008 <fwrite@plt>
   1b278:	cmp	r0, #1
   1b27c:	movne	r3, #1
   1b280:	ldr	r0, [r4, #8]
   1b284:	strne	r3, [r4, #20]
   1b288:	ldr	r3, [r4, #4]
   1b28c:	sub	r0, r0, r5
   1b290:	add	r3, r3, r5
   1b294:	str	r3, [r4, #4]
   1b298:	str	r0, [r4, #8]
   1b29c:	pop	{r4, r5, r6, pc}
   1b2a0:	andeq	r2, r1, r4, lsr #27
   1b2a4:	andeq	r0, r0, r4, lsr #1
   1b2a8:	ldr	r3, [pc, #80]	; 1b300 <next@@Base+0xe80>
   1b2ac:	ldr	r2, [pc, #80]	; 1b304 <next@@Base+0xe84>
   1b2b0:	add	r3, pc, r3
   1b2b4:	push	{r4, r5, r6, lr}
   1b2b8:	mov	r5, r0
   1b2bc:	ldr	r4, [r3, r2]
   1b2c0:	ldr	r3, [r4, #8]
   1b2c4:	cmp	r3, #1024	; 0x400
   1b2c8:	bcs	1b2e0 <next@@Base+0xe60>
   1b2cc:	add	r0, r3, #7
   1b2d0:	add	r3, r5, r3
   1b2d4:	str	r3, [r4, #8]
   1b2d8:	add	r0, r4, r0, lsl #2
   1b2dc:	pop	{r4, r5, r6, pc}
   1b2e0:	mov	r0, #1024	; 0x400
   1b2e4:	bl	1b24c <next@@Base+0xdcc>
   1b2e8:	ldr	r3, [r4, #8]
   1b2ec:	cmp	r3, #0
   1b2f0:	addne	r2, r4, #4096	; 0x1000
   1b2f4:	ldrne	r2, [r2, #28]
   1b2f8:	strne	r2, [r4, #28]
   1b2fc:	b	1b2cc <next@@Base+0xe4c>
   1b300:	andeq	r2, r1, r8, asr #26
   1b304:	andeq	r0, r0, r4, lsr #1
   1b308:	ldr	r3, [pc, #192]	; 1b3d0 <next@@Base+0xf50>
   1b30c:	ldr	r2, [pc, #192]	; 1b3d4 <next@@Base+0xf54>
   1b310:	add	r3, pc, r3
   1b314:	push	{r4, r5, r6, lr}
   1b318:	ldr	r4, [r3, r2]
   1b31c:	ldr	r2, [r4, #24]
   1b320:	ldr	r3, [r4, #8]
   1b324:	ldr	ip, [r4, #12]
   1b328:	cmp	r2, #0
   1b32c:	sub	ip, ip, r3
   1b330:	ble	1b3ac <next@@Base+0xf2c>
   1b334:	cmp	ip, r0
   1b338:	mov	r5, r0
   1b33c:	bcs	1b398 <next@@Base+0xf18>
   1b340:	ldr	r2, [r4, #4]
   1b344:	cmp	ip, #0
   1b348:	add	r2, r2, r3
   1b34c:	str	r2, [r4, #4]
   1b350:	addne	r2, r4, #28
   1b354:	mov	r0, r4
   1b358:	ldrne	r3, [r2, r3, lsl #2]
   1b35c:	mov	r6, #0
   1b360:	strne	r3, [r4, #28]
   1b364:	ldr	r3, [r0], #28
   1b368:	mov	r2, #4096	; 0x1000
   1b36c:	add	r0, r0, ip, lsl #2
   1b370:	mov	r1, #1
   1b374:	str	ip, [r4, #12]
   1b378:	str	r6, [r4, #8]
   1b37c:	bl	12020 <fread@plt>
   1b380:	ldr	r3, [r4, #12]
   1b384:	add	r0, r3, r0, lsr #2
   1b388:	cmp	r0, r5
   1b38c:	str	r0, [r4, #12]
   1b390:	bcc	1b3b4 <next@@Base+0xf34>
   1b394:	ldr	r3, [r4, #8]
   1b398:	add	r0, r3, #7
   1b39c:	add	r5, r5, r3
   1b3a0:	str	r5, [r4, #8]
   1b3a4:	add	r0, r4, r0, lsl #2
   1b3a8:	pop	{r4, r5, r6, pc}
   1b3ac:	mov	r0, #0
   1b3b0:	pop	{r4, r5, r6, pc}
   1b3b4:	ldr	r3, [r4, #16]
   1b3b8:	str	r6, [r4, #12]
   1b3bc:	add	r5, r5, r3
   1b3c0:	sub	r5, r5, r0
   1b3c4:	str	r5, [r4, #16]
   1b3c8:	mov	r0, r6
   1b3cc:	pop	{r4, r5, r6, pc}
   1b3d0:	andeq	r2, r1, r8, ror #25
   1b3d4:	andeq	r0, r0, r4, lsr #1
   1b3d8:	push	{r4, r5, r6, lr}
   1b3dc:	ldr	r4, [pc, #92]	; 1b440 <next@@Base+0xfc0>
   1b3e0:	ldr	r3, [pc, #92]	; 1b444 <next@@Base+0xfc4>
   1b3e4:	add	r4, pc, r4
   1b3e8:	ldr	r5, [r4, r3]
   1b3ec:	ldr	r0, [r5]
   1b3f0:	cmp	r0, #0
   1b3f4:	popne	{r4, r5, r6, pc}
   1b3f8:	ldr	r0, [pc, #72]	; 1b448 <next@@Base+0xfc8>
   1b3fc:	add	r0, pc, r0
   1b400:	bl	12038 <getenv@plt>
   1b404:	cmp	r0, #0
   1b408:	beq	1b438 <next@@Base+0xfb8>
   1b40c:	ldr	r1, [pc, #56]	; 1b44c <next@@Base+0xfcc>
   1b410:	add	r1, pc, r1
   1b414:	bl	12110 <fopen64@plt>
   1b418:	str	r0, [r5]
   1b41c:	cmp	r0, #0
   1b420:	popne	{r4, r5, r6, pc}
   1b424:	ldr	r3, [pc, #36]	; 1b450 <next@@Base+0xfd0>
   1b428:	ldr	r3, [r4, r3]
   1b42c:	ldr	r0, [r3]
   1b430:	str	r0, [r5]
   1b434:	pop	{r4, r5, r6, pc}
   1b438:	ldr	r0, [r5]
   1b43c:	b	1b41c <next@@Base+0xf9c>
   1b440:	andeq	r2, r1, r4, lsl ip
   1b444:	andeq	r0, r0, r8, lsr #1
   1b448:	andeq	r2, r0, r4, lsr r8
   1b44c:	muleq	r0, ip, r4
   1b450:	muleq	r0, r8, r0
   1b454:	push	{r0, r1, r2, r3}
   1b458:	push	{lr}		; (str lr, [sp, #-4]!)
   1b45c:	sub	sp, sp, #12
   1b460:	add	r3, sp, #20
   1b464:	str	r3, [sp, #4]
   1b468:	bl	1b3d8 <next@@Base+0xf58>
   1b46c:	ldr	r1, [sp, #16]
   1b470:	ldr	r2, [sp, #4]
   1b474:	bl	120ec <vfprintf@plt>
   1b478:	add	sp, sp, #12
   1b47c:	pop	{lr}		; (ldr lr, [sp], #4)
   1b480:	add	sp, sp, #16
   1b484:	bx	lr
   1b488:	push	{r4, r5, r6, r7, r8, lr}
   1b48c:	subs	r6, r1, #0
   1b490:	beq	1b4e4 <next@@Base+0x1064>
   1b494:	cmp	r2, #0
   1b498:	ldr	r7, [r6]
   1b49c:	beq	1b4d4 <next@@Base+0x1054>
   1b4a0:	add	r4, r0, #12
   1b4a4:	add	r5, r4, r2, lsl #2
   1b4a8:	mov	r3, #0
   1b4ac:	ldr	r2, [r4, #4]!
   1b4b0:	add	r1, r6, r3, lsl #3
   1b4b4:	cmp	r2, #0
   1b4b8:	add	r8, r3, #1
   1b4bc:	beq	1b4cc <next@@Base+0x104c>
   1b4c0:	ldr	r0, [r1, #28]
   1b4c4:	bl	11fe4 <free@plt>
   1b4c8:	mov	r3, r8
   1b4cc:	cmp	r4, r5
   1b4d0:	bne	1b4ac <next@@Base+0x102c>
   1b4d4:	mov	r0, r6
   1b4d8:	bl	11fe4 <free@plt>
   1b4dc:	mov	r0, r7
   1b4e0:	pop	{r4, r5, r6, r7, r8, pc}
   1b4e4:	mov	r7, r6
   1b4e8:	b	1b4dc <next@@Base+0x105c>
   1b4ec:	push	{r4, r5}
   1b4f0:	mov	r4, r0
   1b4f4:	mov	r5, r1
   1b4f8:	orrs	r3, r4, r5
   1b4fc:	beq	1b540 <next@@Base+0x10c0>
   1b500:	cmp	r1, #0
   1b504:	clzeq	r2, r0
   1b508:	addeq	r2, r2, #32
   1b50c:	clzne	r2, r1
   1b510:	rsb	r3, r2, #63	; 0x3f
   1b514:	cmp	r3, #1
   1b518:	bls	1b540 <next@@Base+0x10c0>
   1b51c:	rsb	r1, r2, #61	; 0x3d
   1b520:	rsb	r0, r1, #32
   1b524:	lsr	r3, r4, r1
   1b528:	sub	r1, r1, #32
   1b52c:	orr	r3, r3, r5, lsl r0
   1b530:	orr	r3, r3, r5, lsr r1
   1b534:	rsb	r2, r2, #1073741886	; 0x4000003e
   1b538:	and	r0, r3, #3
   1b53c:	add	r0, r0, r2, lsl #2
   1b540:	pop	{r4, r5}
   1b544:	bx	lr
   1b548:	push	{r4, r5, r6, lr}
   1b54c:	mov	r1, r3
   1b550:	mov	r6, r0
   1b554:	mov	r0, r2
   1b558:	mov	r4, r2
   1b55c:	mov	r5, r3
   1b560:	bl	1b4ec <next@@Base+0x106c>
   1b564:	add	r0, r0, r0, lsl #1
   1b568:	lsl	r0, r0, #3
   1b56c:	add	r3, r6, r0
   1b570:	ldr	r1, [r6, r0]
   1b574:	ldr	r2, [r3, #16]
   1b578:	add	r1, r1, #1
   1b57c:	str	r1, [r6, r0]
   1b580:	ldrd	r0, [r3, #8]
   1b584:	ldr	ip, [r3, #20]
   1b588:	adds	r2, r2, r4
   1b58c:	str	r2, [r3, #16]
   1b590:	adc	r2, ip, r5
   1b594:	cmp	r4, r0
   1b598:	sbcs	r1, r5, r1
   1b59c:	str	r2, [r3, #20]
   1b5a0:	strdlt	r4, [r3, #8]
   1b5a4:	pop	{r4, r5, r6, pc}
   1b5a8:	ldr	r3, [r1, #8]
   1b5ac:	cmp	r3, #0
   1b5b0:	bxeq	lr
   1b5b4:	add	r2, r1, #6016	; 0x1780
   1b5b8:	push	{r4, r5, r6, r7, r8, lr}
   1b5bc:	mov	r3, r1
   1b5c0:	mov	r8, r1
   1b5c4:	mov	r7, r0
   1b5c8:	ldrd	r4, [r1, #24]
   1b5cc:	add	r2, r2, #32
   1b5d0:	mov	ip, #0
   1b5d4:	mov	r0, #0
   1b5d8:	mov	r1, #0
   1b5dc:	str	ip, [r3, #40]	; 0x28
   1b5e0:	strd	r4, [r3, #48]	; 0x30
   1b5e4:	strd	r0, [r3, #56]	; 0x38
   1b5e8:	add	r3, r3, #24
   1b5ec:	cmp	r3, r2
   1b5f0:	bne	1b5dc <next@@Base+0x115c>
   1b5f4:	cmp	r7, #0
   1b5f8:	popeq	{r4, r5, r6, r7, r8, pc}
   1b5fc:	add	r8, r8, #40	; 0x28
   1b600:	ldr	r3, [r7, #16]
   1b604:	cmp	r3, #0
   1b608:	beq	1b690 <next@@Base+0x1210>
   1b60c:	ldr	r2, [r7, #52]	; 0x34
   1b610:	cmp	r2, #0
   1b614:	beq	1b690 <next@@Base+0x1210>
   1b618:	mov	r6, #0
   1b61c:	b	1b62c <next@@Base+0x11ac>
   1b620:	add	r6, r6, #1
   1b624:	cmp	r2, r6
   1b628:	beq	1b690 <next@@Base+0x1210>
   1b62c:	ldr	r3, [r7, #56]	; 0x38
   1b630:	ldr	r5, [r3, r6, lsl #2]
   1b634:	cmp	r5, #0
   1b638:	beq	1b620 <next@@Base+0x11a0>
   1b63c:	ldr	r3, [r5]
   1b640:	cmp	r3, r7
   1b644:	bne	1b620 <next@@Base+0x11a0>
   1b648:	ldr	r3, [r5, #16]
   1b64c:	cmp	r3, #0
   1b650:	beq	1b620 <next@@Base+0x11a0>
   1b654:	mov	r4, #0
   1b658:	ldr	r2, [r5, #20]
   1b65c:	lsl	r3, r4, #3
   1b660:	add	r2, r2, r3
   1b664:	mov	r0, r8
   1b668:	ldrd	r2, [r2]
   1b66c:	bl	1b548 <next@@Base+0x10c8>
   1b670:	ldr	r3, [r5, #16]
   1b674:	add	r4, r4, #1
   1b678:	cmp	r3, r4
   1b67c:	bhi	1b658 <next@@Base+0x11d8>
   1b680:	ldr	r2, [r7, #52]	; 0x34
   1b684:	add	r6, r6, #1
   1b688:	cmp	r2, r6
   1b68c:	bne	1b62c <next@@Base+0x11ac>
   1b690:	ldr	r7, [r7, #4]
   1b694:	cmp	r7, #0
   1b698:	bne	1b600 <next@@Base+0x1180>
   1b69c:	pop	{r4, r5, r6, r7, r8, pc}
   1b6a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6a4:	sub	sp, sp, #12
   1b6a8:	mov	r6, r0
   1b6ac:	str	r0, [sp, #4]
   1b6b0:	mov	r8, r2
   1b6b4:	mov	r0, r1
   1b6b8:	mov	r4, r1
   1b6bc:	ldr	r2, [pc, #364]	; 1b830 <next@@Base+0x13b0>
   1b6c0:	mov	r1, #0
   1b6c4:	bl	120b0 <memset@plt>
   1b6c8:	mov	r5, #0
   1b6cc:	cmp	r6, #0
   1b6d0:	str	r5, [r8]
   1b6d4:	beq	1b814 <next@@Base+0x1394>
   1b6d8:	mov	r9, r5
   1b6dc:	ldr	r0, [r6, #12]
   1b6e0:	bl	12080 <strlen@plt>
   1b6e4:	cmp	r5, r0
   1b6e8:	strcc	r0, [r8]
   1b6ec:	mov	r0, r9
   1b6f0:	ldr	r1, [r6, #8]
   1b6f4:	bl	1b1d0 <next@@Base+0xd50>
   1b6f8:	ldr	r7, [r6, #52]	; 0x34
   1b6fc:	mov	r1, r7
   1b700:	bl	1b1d0 <next@@Base+0xd50>
   1b704:	cmp	r7, #0
   1b708:	mov	r9, r0
   1b70c:	beq	1b800 <next@@Base+0x1380>
   1b710:	ldr	r5, [r6, #56]	; 0x38
   1b714:	add	r7, r5, r7, lsl #2
   1b718:	sub	r7, r7, #4
   1b71c:	sub	r5, r5, #4
   1b720:	b	1b750 <next@@Base+0x12d0>
   1b724:	ldr	r3, [sl]
   1b728:	mov	r0, r9
   1b72c:	cmp	r3, r6
   1b730:	beq	1b76c <next@@Base+0x12ec>
   1b734:	mov	r1, #0
   1b738:	bl	1b1d0 <next@@Base+0xd50>
   1b73c:	mov	r1, #0
   1b740:	bl	1b1d0 <next@@Base+0xd50>
   1b744:	mov	r9, r0
   1b748:	cmp	r5, r7
   1b74c:	beq	1b800 <next@@Base+0x1380>
   1b750:	ldr	sl, [r5, #4]!
   1b754:	cmp	sl, #0
   1b758:	bne	1b724 <next@@Base+0x12a4>
   1b75c:	mov	r1, sl
   1b760:	mov	r0, r9
   1b764:	bl	1b1d0 <next@@Base+0xd50>
   1b768:	b	1b73c <next@@Base+0x12bc>
   1b76c:	ldr	r1, [sl, #12]
   1b770:	bl	1b1d0 <next@@Base+0xd50>
   1b774:	ldr	r1, [sl, #8]
   1b778:	bl	1b1d0 <next@@Base+0xd50>
   1b77c:	ldr	r3, [r6, #16]
   1b780:	cmp	r3, #0
   1b784:	mov	r9, r0
   1b788:	beq	1b748 <next@@Base+0x12c8>
   1b78c:	ldr	fp, [sl, #16]
   1b790:	ldr	r3, [r4, #8]
   1b794:	mov	r1, fp
   1b798:	add	r3, r3, fp
   1b79c:	str	r3, [r4, #8]
   1b7a0:	bl	1b1d0 <next@@Base+0xd50>
   1b7a4:	cmp	fp, #0
   1b7a8:	mov	r9, r0
   1b7ac:	beq	1b748 <next@@Base+0x12c8>
   1b7b0:	ldr	r2, [sl, #20]
   1b7b4:	ldr	r3, [r4, #16]
   1b7b8:	add	lr, r2, fp, lsl #3
   1b7bc:	ldr	ip, [r4, #20]
   1b7c0:	sub	lr, lr, #8
   1b7c4:	sub	r2, r2, #8
   1b7c8:	ldrd	r0, [r2, #8]!
   1b7cc:	ldrd	sl, [r4, #24]
   1b7d0:	adds	r3, r3, r0
   1b7d4:	adc	ip, ip, r1
   1b7d8:	str	ip, [r4, #20]
   1b7dc:	str	r3, [r4, #16]
   1b7e0:	ldrd	r0, [r2]
   1b7e4:	cmp	sl, r0
   1b7e8:	sbcs	sl, fp, r1
   1b7ec:	strdlt	r0, [r4, #24]
   1b7f0:	cmp	lr, r2
   1b7f4:	bne	1b7c8 <next@@Base+0x1348>
   1b7f8:	cmp	r5, r7
   1b7fc:	bne	1b750 <next@@Base+0x12d0>
   1b800:	ldr	r6, [r6, #4]
   1b804:	cmp	r6, #0
   1b808:	beq	1b818 <next@@Base+0x1398>
   1b80c:	ldr	r5, [r8]
   1b810:	b	1b6dc <next@@Base+0x125c>
   1b814:	ldr	r9, [sp, #4]
   1b818:	ldr	r0, [sp, #4]
   1b81c:	mov	r1, r4
   1b820:	bl	1b5a8 <next@@Base+0x1128>
   1b824:	mov	r0, r9
   1b828:	add	sp, sp, #12
   1b82c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b830:	andeq	r1, r0, r8, asr #15
   1b834:	push	{r4, r5, r6, lr}
   1b838:	mov	r4, r0
   1b83c:	ldr	r0, [pc, #192]	; 1b904 <next@@Base+0x1484>
   1b840:	add	r0, pc, r0
   1b844:	bl	12038 <getenv@plt>
   1b848:	subs	r3, r0, #0
   1b84c:	beq	1b858 <next@@Base+0x13d8>
   1b850:	bl	12104 <atoi@plt>
   1b854:	bic	r3, r0, r0, asr #31
   1b858:	ldr	r0, [pc, #168]	; 1b908 <next@@Base+0x1488>
   1b85c:	str	r3, [r4, #8]
   1b860:	add	r0, pc, r0
   1b864:	bl	12038 <getenv@plt>
   1b868:	subs	r6, r0, #0
   1b86c:	beq	1b8dc <next@@Base+0x145c>
   1b870:	bl	12080 <strlen@plt>
   1b874:	ldr	r3, [r4, #4]
   1b878:	add	r3, r3, #2
   1b87c:	cmp	r0, #0
   1b880:	bne	1b8bc <next@@Base+0x143c>
   1b884:	ldr	r2, [r4, #8]
   1b888:	cmp	r2, #0
   1b88c:	beq	1b8f0 <next@@Base+0x1470>
   1b890:	ldr	r6, [pc, #116]	; 1b90c <next@@Base+0x148c>
   1b894:	mov	r5, #1
   1b898:	add	r6, pc, r6
   1b89c:	str	r5, [r4, #12]
   1b8a0:	add	r0, r3, r5
   1b8a4:	bl	12044 <malloc@plt>
   1b8a8:	mov	r2, r5
   1b8ac:	mov	r1, r6
   1b8b0:	str	r0, [r4]
   1b8b4:	pop	{r4, r5, r6, lr}
   1b8b8:	b	11ff0 <memcpy@plt>
   1b8bc:	sub	r5, r0, #1
   1b8c0:	ldrb	r2, [r6, r5]
   1b8c4:	cmp	r2, #47	; 0x2f
   1b8c8:	movne	r5, r0
   1b8cc:	bne	1b89c <next@@Base+0x141c>
   1b8d0:	cmp	r5, #0
   1b8d4:	bne	1b89c <next@@Base+0x141c>
   1b8d8:	b	1b884 <next@@Base+0x1404>
   1b8dc:	ldr	r2, [r4, #8]
   1b8e0:	ldr	r3, [r4, #4]
   1b8e4:	cmp	r2, #0
   1b8e8:	add	r3, r3, #2
   1b8ec:	bne	1b890 <next@@Base+0x1410>
   1b8f0:	str	r2, [r4, #12]
   1b8f4:	mov	r0, r3
   1b8f8:	bl	12044 <malloc@plt>
   1b8fc:	str	r0, [r4]
   1b900:	pop	{r4, r5, r6, pc}
   1b904:	andeq	r2, r0, r4, lsl #8
   1b908:	strdeq	r2, [r0], -r8
   1b90c:	andeq	r2, r0, r8, lsr #7
   1b910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b914:	sub	sp, sp, #6080	; 0x17c0
   1b918:	sub	sp, sp, #36	; 0x24
   1b91c:	mov	r3, r0
   1b920:	str	r1, [sp, #40]	; 0x28
   1b924:	mov	r1, #0
   1b928:	mov	r4, r1
   1b92c:	str	r0, [sp, #56]	; 0x38
   1b930:	add	r7, r3, #6016	; 0x1780
   1b934:	add	r0, sp, #64	; 0x40
   1b938:	add	r6, sp, #2016	; 0x7e0
   1b93c:	ldr	r2, [pc, #984]	; 1bd1c <next@@Base+0x189c>
   1b940:	mov	r5, #251	; 0xfb
   1b944:	str	r0, [sp, #60]	; 0x3c
   1b948:	str	r5, [sp, #52]	; 0x34
   1b94c:	str	r6, [sp, #36]	; 0x24
   1b950:	mov	r9, r4
   1b954:	bl	120b0 <memset@plt>
   1b958:	mov	sl, r4
   1b95c:	add	r3, r7, #8
   1b960:	mov	r0, r4
   1b964:	str	r3, [sp, #48]	; 0x30
   1b968:	sub	r3, r6, #1952	; 0x7a0
   1b96c:	str	r3, [sp, #44]	; 0x2c
   1b970:	ldr	r3, [sp, #48]	; 0x30
   1b974:	ldr	r2, [r3, #16]
   1b978:	ldr	r7, [r3]
   1b97c:	str	r2, [sp, #16]
   1b980:	ldr	r2, [r3, #20]
   1b984:	cmp	r7, #0
   1b988:	str	r2, [sp, #20]
   1b98c:	beq	1bcac <next@@Base+0x182c>
   1b990:	ldrd	r2, [r3, #8]
   1b994:	str	r9, [sp, #12]
   1b998:	strd	r2, [sp, #24]
   1b99c:	b	1ba7c <next@@Base+0x15fc>
   1b9a0:	bls	1bd10 <next@@Base+0x1890>
   1b9a4:	ldr	r3, [sp, #12]
   1b9a8:	mov	r2, r4
   1b9ac:	umull	r0, r1, r7, r3
   1b9b0:	mov	r3, #0
   1b9b4:	mla	r1, r7, sl, r1
   1b9b8:	bl	1d22c <__gcov_sort_n_vals@@Base+0x568>
   1b9bc:	mov	r6, r0
   1b9c0:	mov	r8, r1
   1b9c4:	ldr	r3, [sp, #12]
   1b9c8:	sub	r4, r4, r7
   1b9cc:	subs	r3, r3, r6
   1b9d0:	sbc	sl, sl, r8
   1b9d4:	mov	fp, r7
   1b9d8:	mov	r7, #0
   1b9dc:	str	r3, [sp, #12]
   1b9e0:	ldr	r0, [sp, #16]
   1b9e4:	ldr	r3, [sp, #20]
   1b9e8:	str	r7, [sp, #16]
   1b9ec:	str	r7, [sp, #20]
   1b9f0:	adds	r6, r6, r0
   1b9f4:	ldrd	r0, [sp]
   1b9f8:	adc	r8, r8, r3
   1b9fc:	bl	1b4ec <next@@Base+0x106c>
   1ba00:	ldr	r3, [sp, #44]	; 0x2c
   1ba04:	add	r1, r0, r0, lsl #1
   1ba08:	lsl	r1, r1, #3
   1ba0c:	add	ip, r3, r1
   1ba10:	ldr	r3, [sp, #36]	; 0x24
   1ba14:	ldr	lr, [ip, #16]
   1ba18:	add	r1, r3, r1
   1ba1c:	adds	r6, lr, r6
   1ba20:	ldr	lr, [ip, #20]
   1ba24:	ldrd	r2, [ip, #8]
   1ba28:	adc	lr, lr, r8
   1ba2c:	ldrd	r8, [sp]
   1ba30:	str	lr, [sp, #32]
   1ba34:	orrs	lr, r2, r3
   1ba38:	moveq	lr, #1
   1ba3c:	movne	lr, #0
   1ba40:	cmp	r8, r2
   1ba44:	sbcs	r3, r9, r3
   1ba48:	orrlt	lr, lr, #1
   1ba4c:	cmp	lr, #0
   1ba50:	str	r6, [ip, #16]
   1ba54:	ldr	r6, [r1, #-1952]	; 0xfffff860
   1ba58:	ldr	r3, [sp, #32]
   1ba5c:	strdne	r8, [ip, #8]
   1ba60:	cmp	r4, #0
   1ba64:	add	fp, r6, fp
   1ba68:	subeq	r5, r5, #1
   1ba6c:	cmp	r7, #0
   1ba70:	str	r3, [ip, #20]
   1ba74:	str	fp, [r1, #-1952]	; 0xfffff860
   1ba78:	beq	1bca8 <next@@Base+0x1828>
   1ba7c:	cmp	r4, #0
   1ba80:	beq	1bb04 <next@@Base+0x1684>
   1ba84:	add	r2, r5, r5, lsl #1
   1ba88:	ldr	r3, [sp, #40]	; 0x28
   1ba8c:	add	r2, r3, r2, lsl #3
   1ba90:	ldrd	r0, [sp, #24]
   1ba94:	ldr	r3, [r2, #8]
   1ba98:	ldr	r2, [r2, #12]
   1ba9c:	adds	r3, r0, r3
   1baa0:	str	r3, [sp]
   1baa4:	adc	r3, r1, r2
   1baa8:	cmp	r4, r7
   1baac:	str	r3, [sp, #4]
   1bab0:	bcs	1b9a0 <next@@Base+0x1520>
   1bab4:	ldr	r6, [sp, #16]
   1bab8:	ldr	r8, [sp, #20]
   1babc:	mov	r2, r7
   1bac0:	umull	r0, r1, r4, r6
   1bac4:	mov	r3, #0
   1bac8:	mla	r1, r4, r8, r1
   1bacc:	bl	1d22c <__gcov_sort_n_vals@@Base+0x568>
   1bad0:	sub	r7, r7, r4
   1bad4:	mov	fp, r4
   1bad8:	mov	r4, #0
   1badc:	subs	r2, r6, r0
   1bae0:	str	r2, [sp, #16]
   1bae4:	sbc	r2, r8, r1
   1bae8:	ldr	r6, [sp, #12]
   1baec:	mov	r8, sl
   1baf0:	mov	r3, r1
   1baf4:	str	r2, [sp, #20]
   1baf8:	str	r4, [sp, #12]
   1bafc:	mov	sl, r4
   1bb00:	b	1b9f0 <next@@Base+0x1570>
   1bb04:	cmp	r5, #0
   1bb08:	blt	1bd08 <next@@Base+0x1888>
   1bb0c:	ldr	r3, [sp, #40]	; 0x28
   1bb10:	add	r2, r5, r5, lsl #1
   1bb14:	ldr	r4, [r3, r2, lsl #3]
   1bb18:	add	r2, r3, r2, lsl #3
   1bb1c:	cmp	r4, #0
   1bb20:	bne	1bc98 <next@@Base+0x1818>
   1bb24:	mov	r3, r2
   1bb28:	ldr	r9, [sp, #12]
   1bb2c:	b	1bb40 <next@@Base+0x16c0>
   1bb30:	ldr	r4, [r3]
   1bb34:	mov	r2, r3
   1bb38:	cmp	r4, #0
   1bb3c:	bne	1bc98 <next@@Base+0x1818>
   1bb40:	subs	r5, r5, #1
   1bb44:	sub	r3, r3, #24
   1bb48:	bcs	1bb30 <next@@Base+0x16b0>
   1bb4c:	ldr	r2, [sp, #52]	; 0x34
   1bb50:	ldr	ip, [sp, #36]	; 0x24
   1bb54:	ldr	r4, [sp, #16]
   1bb58:	lsl	r3, r2, #1
   1bb5c:	add	r1, r3, r2
   1bb60:	sub	r2, ip, #1952	; 0x7a0
   1bb64:	lsl	r1, r1, #3
   1bb68:	add	r2, r2, r1
   1bb6c:	add	r1, ip, r1
   1bb70:	ldr	ip, [r2, #16]
   1bb74:	ldr	lr, [r1, #-1952]	; 0xfffff860
   1bb78:	adds	ip, ip, r4
   1bb7c:	add	r7, lr, r7
   1bb80:	ldrd	r4, [r2, #8]
   1bb84:	ldr	lr, [r2, #20]
   1bb88:	str	r7, [r1, #-1952]	; 0xfffff860
   1bb8c:	ldr	r1, [sp, #20]
   1bb90:	str	ip, [r2, #16]
   1bb94:	adc	lr, lr, r1
   1bb98:	orrs	r1, r4, r5
   1bb9c:	str	lr, [r2, #20]
   1bba0:	beq	1bc78 <next@@Base+0x17f8>
   1bba4:	ldrd	r6, [sp, #24]
   1bba8:	cmp	r6, r4
   1bbac:	sbcs	r2, r7, r5
   1bbb0:	blt	1bc78 <next@@Base+0x17f8>
   1bbb4:	ldr	r2, [sp, #52]	; 0x34
   1bbb8:	ldr	lr, [sp, #60]	; 0x3c
   1bbbc:	add	ip, r3, r2
   1bbc0:	ldr	r3, [sp, #56]	; 0x38
   1bbc4:	lsl	ip, ip, #3
   1bbc8:	add	r1, lr, ip
   1bbcc:	add	ip, r3, ip
   1bbd0:	b	1bc2c <next@@Base+0x17ac>
   1bbd4:	ldr	r3, [r1, #-8]
   1bbd8:	ldr	r6, [ip, #-8]
   1bbdc:	ldr	r7, [ip, #-4]
   1bbe0:	ldr	r2, [r1, #-4]
   1bbe4:	adds	r6, r3, r6
   1bbe8:	ldrd	r4, [r1, #-16]
   1bbec:	adc	r2, r2, r7
   1bbf0:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1bbf4:	ldr	r7, [ip, #-24]	; 0xffffffe8
   1bbf8:	orrs	r8, r4, r5
   1bbfc:	add	r3, r3, r7
   1bc00:	str	r2, [r1, #-4]
   1bc04:	str	r3, [r1, #-24]	; 0xffffffe8
   1bc08:	str	r6, [r1, #-8]
   1bc0c:	ldrd	r2, [ip, #-16]
   1bc10:	sub	ip, ip, #24
   1bc14:	beq	1bc24 <next@@Base+0x17a4>
   1bc18:	cmp	r2, r4
   1bc1c:	sbcs	r4, r3, r5
   1bc20:	bge	1bc28 <next@@Base+0x17a8>
   1bc24:	strd	r2, [r1, #-16]
   1bc28:	sub	r1, r1, #24
   1bc2c:	cmp	r1, lr
   1bc30:	bne	1bbd4 <next@@Base+0x1754>
   1bc34:	ldr	r3, [sp, #36]	; 0x24
   1bc38:	add	r0, r0, r0, lsl #1
   1bc3c:	sub	r3, r3, #1952	; 0x7a0
   1bc40:	add	r3, r3, r0, lsl #3
   1bc44:	ldr	r1, [sp, #60]	; 0x3c
   1bc48:	ldr	r2, [r3, #16]
   1bc4c:	ldr	ip, [r3, #20]
   1bc50:	adds	r9, r2, r9
   1bc54:	adc	sl, ip, sl
   1bc58:	ldr	r0, [sp, #56]	; 0x38
   1bc5c:	ldr	r2, [pc, #184]	; 1bd1c <next@@Base+0x189c>
   1bc60:	str	r9, [r3, #16]
   1bc64:	str	sl, [r3, #20]
   1bc68:	bl	11ff0 <memcpy@plt>
   1bc6c:	add	sp, sp, #6080	; 0x17c0
   1bc70:	add	sp, sp, #36	; 0x24
   1bc74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc78:	ldr	r2, [sp, #52]	; 0x34
   1bc7c:	ldrd	r4, [sp, #24]
   1bc80:	add	r1, r3, r2
   1bc84:	ldr	r2, [sp, #36]	; 0x24
   1bc88:	sub	r2, r2, #1952	; 0x7a0
   1bc8c:	add	r2, r2, r1, lsl #3
   1bc90:	strd	r4, [r2, #8]
   1bc94:	b	1bbb4 <next@@Base+0x1734>
   1bc98:	ldr	r3, [r2, #16]
   1bc9c:	ldr	sl, [r2, #20]
   1bca0:	str	r3, [sp, #12]
   1bca4:	b	1ba90 <next@@Base+0x1610>
   1bca8:	ldr	r9, [sp, #12]
   1bcac:	ldr	r3, [sp, #52]	; 0x34
   1bcb0:	sub	r3, r3, #1
   1bcb4:	str	r3, [sp, #52]	; 0x34
   1bcb8:	cmn	r3, #1
   1bcbc:	ldr	r3, [sp, #48]	; 0x30
   1bcc0:	sub	r3, r3, #24
   1bcc4:	str	r3, [sp, #48]	; 0x30
   1bcc8:	bne	1b970 <next@@Base+0x14f0>
   1bccc:	cmp	r4, #0
   1bcd0:	subne	r5, r5, #1
   1bcd4:	cmp	r5, #0
   1bcd8:	blt	1bc34 <next@@Base+0x17b4>
   1bcdc:	add	r5, r5, r5, lsl #1
   1bce0:	ldr	ip, [sp, #40]	; 0x28
   1bce4:	add	r3, ip, r5, lsl #3
   1bce8:	ldr	r2, [r3, #16]
   1bcec:	ldr	r1, [r3, #20]
   1bcf0:	adds	r9, r9, r2
   1bcf4:	adc	sl, sl, r1
   1bcf8:	cmp	ip, r3
   1bcfc:	sub	r3, r3, #24
   1bd00:	bne	1bce8 <next@@Base+0x1868>
   1bd04:	b	1bc34 <next@@Base+0x17b4>
   1bd08:	ldr	r9, [sp, #12]
   1bd0c:	b	1bb4c <next@@Base+0x16cc>
   1bd10:	ldr	r6, [sp, #12]
   1bd14:	mov	r8, sl
   1bd18:	b	1b9c4 <next@@Base+0x1544>
   1bd1c:	andeq	r1, r0, r0, lsr #15
   1bd20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bd24:	ldrb	r4, [r0]
   1bd28:	cmp	r4, #47	; 0x2f
   1bd2c:	addeq	r5, r0, #1
   1bd30:	ldrbeq	r4, [r0, #1]
   1bd34:	movne	r5, r0
   1bd38:	cmp	r4, #0
   1bd3c:	beq	1bd90 <next@@Base+0x1910>
   1bd40:	mov	r6, r0
   1bd44:	mov	r7, #0
   1bd48:	mov	r8, #47	; 0x2f
   1bd4c:	ldr	sl, [pc, #136]	; 1bddc <next@@Base+0x195c>
   1bd50:	b	1bd60 <next@@Base+0x18e0>
   1bd54:	ldrb	r4, [r5, #1]!
   1bd58:	cmp	r4, #0
   1bd5c:	beq	1bd90 <next@@Base+0x1910>
   1bd60:	cmp	r4, #47	; 0x2f
   1bd64:	bne	1bd54 <next@@Base+0x18d4>
   1bd68:	strb	r7, [r5]
   1bd6c:	mov	r1, #0
   1bd70:	mov	r0, r6
   1bd74:	bl	120c8 <access@plt>
   1bd78:	cmn	r0, #1
   1bd7c:	beq	1bd9c <next@@Base+0x191c>
   1bd80:	strb	r8, [r5]
   1bd84:	ldrb	r4, [r5, #1]!
   1bd88:	cmp	r4, #0
   1bd8c:	bne	1bd60 <next@@Base+0x18e0>
   1bd90:	mov	r9, #0
   1bd94:	mov	r0, r9
   1bd98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd9c:	mov	r1, sl
   1bda0:	mov	r0, r6
   1bda4:	bl	120a4 <mkdir@plt>
   1bda8:	cmn	r0, #1
   1bdac:	mov	r9, r0
   1bdb0:	bne	1bd80 <next@@Base+0x1900>
   1bdb4:	bl	12098 <__errno_location@plt>
   1bdb8:	ldr	r3, [r0]
   1bdbc:	cmp	r3, #17
   1bdc0:	beq	1bd80 <next@@Base+0x1900>
   1bdc4:	ldr	r0, [pc, #20]	; 1bde0 <next@@Base+0x1960>
   1bdc8:	mov	r1, r6
   1bdcc:	add	r0, pc, r0
   1bdd0:	bl	1b454 <next@@Base+0xfd4>
   1bdd4:	strb	r4, [r5]
   1bdd8:	b	1bd94 <next@@Base+0x1914>
   1bddc:	andeq	r0, r0, sp, ror #3
   1bde0:	muleq	r0, r8, lr
   1bde4:	ldr	r3, [pc, #76]	; 1be38 <next@@Base+0x19b8>
   1bde8:	cmp	r1, r3
   1bdec:	beq	1be30 <next@@Base+0x19b0>
   1bdf0:	cmp	r2, #0
   1bdf4:	ldr	ip, [pc, #64]	; 1be3c <next@@Base+0x19bc>
   1bdf8:	push	{lr}		; (str lr, [sp, #-4]!)
   1bdfc:	rev	r3, r1
   1be00:	sub	sp, sp, #12
   1be04:	ldreq	r2, [r0]
   1be08:	ldr	r0, [pc, #48]	; 1be40 <next@@Base+0x19c0>
   1be0c:	stm	sp, {r3, ip}
   1be10:	mov	r1, r2
   1be14:	mov	r3, sp
   1be18:	add	r2, sp, #4
   1be1c:	add	r0, pc, r0
   1be20:	bl	1b454 <next@@Base+0xfd4>
   1be24:	mov	r0, #0
   1be28:	add	sp, sp, #12
   1be2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1be30:	mov	r0, #1
   1be34:	bx	lr
   1be38:	teqmi	r8, sl, lsr #6
   1be3c:	bcs	ce9f48 <__bss_end__@@Base+0xcb8910>
   1be40:	andeq	r1, r0, r0, ror lr
   1be44:	ldr	r2, [r2]
   1be48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1be4c:	cmp	r2, #0
   1be50:	mov	r4, r3
   1be54:	ldr	r2, [r3, #12]
   1be58:	ldr	r3, [sp, #32]
   1be5c:	beq	1bf48 <next@@Base+0x1ac8>
   1be60:	cmp	r1, #0
   1be64:	addeq	r1, r2, #1
   1be68:	streq	r1, [r4, #12]
   1be6c:	cmp	r2, #0
   1be70:	ldr	r0, [r4, #16]
   1be74:	ldr	lr, [r4, #20]
   1be78:	ldrd	r6, [r4, #24]
   1be7c:	ldr	r2, [r4, #32]
   1be80:	ldr	r1, [r4, #36]	; 0x24
   1be84:	bne	1bef4 <next@@Base+0x1a74>
   1be88:	ldr	ip, [r3, #8]
   1be8c:	str	ip, [r4, #8]
   1be90:	ldr	ip, [r3, #16]
   1be94:	ldr	r5, [r3, #20]
   1be98:	adds	r0, ip, r0
   1be9c:	adc	lr, r5, lr
   1bea0:	str	r0, [r4, #16]
   1bea4:	str	lr, [r4, #20]
   1bea8:	ldrd	r8, [r3, #24]
   1beac:	cmp	r6, r8
   1beb0:	sbcs	r0, r7, r9
   1beb4:	bge	1bf68 <next@@Base+0x1ae8>
   1beb8:	strd	r8, [r4, #24]
   1bebc:	ldr	r0, [r3, #24]
   1bec0:	ldr	ip, [r3, #28]
   1bec4:	adds	r2, r0, r2
   1bec8:	adc	r1, ip, r1
   1becc:	str	r1, [r4, #36]	; 0x24
   1bed0:	str	r2, [r4, #32]
   1bed4:	add	r1, r3, #40	; 0x28
   1bed8:	ldr	r2, [pc, #176]	; 1bf90 <next@@Base+0x1b10>
   1bedc:	add	r0, r4, #40	; 0x28
   1bee0:	bl	11ff0 <memcpy@plt>
   1bee4:	ldr	r3, [sp, #36]	; 0x24
   1bee8:	mov	r0, #0
   1beec:	str	r3, [r4]
   1bef0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bef4:	ldr	ip, [r3, #16]
   1bef8:	ldr	r5, [r3, #20]
   1befc:	adds	r0, ip, r0
   1bf00:	adc	lr, r5, lr
   1bf04:	str	r0, [r4, #16]
   1bf08:	str	lr, [r4, #20]
   1bf0c:	ldrd	r8, [r3, #24]
   1bf10:	cmp	r6, r8
   1bf14:	sbcs	r0, r7, r9
   1bf18:	bge	1bf7c <next@@Base+0x1afc>
   1bf1c:	strd	r8, [r4, #24]
   1bf20:	ldr	r0, [r3, #24]
   1bf24:	ldr	ip, [r3, #28]
   1bf28:	adds	r2, r0, r2
   1bf2c:	adc	r1, ip, r1
   1bf30:	str	r1, [r4, #36]	; 0x24
   1bf34:	str	r2, [r4, #32]
   1bf38:	add	r1, r3, #40	; 0x28
   1bf3c:	add	r0, r4, #40	; 0x28
   1bf40:	bl	1b910 <next@@Base+0x1490>
   1bf44:	b	1bee4 <next@@Base+0x1a64>
   1bf48:	cmp	r2, #0
   1bf4c:	beq	1bee4 <next@@Base+0x1a64>
   1bf50:	mov	r1, r0
   1bf54:	ldr	r0, [pc, #56]	; 1bf94 <next@@Base+0x1b14>
   1bf58:	add	r0, pc, r0
   1bf5c:	bl	1b454 <next@@Base+0xfd4>
   1bf60:	mvn	r0, #0
   1bf64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bf68:	adds	r2, r2, r8
   1bf6c:	adc	r1, r1, r9
   1bf70:	str	r1, [r4, #36]	; 0x24
   1bf74:	str	r2, [r4, #32]
   1bf78:	b	1bed4 <next@@Base+0x1a54>
   1bf7c:	adds	r2, r2, r8
   1bf80:	adc	r1, r1, r9
   1bf84:	str	r1, [r4, #36]	; 0x24
   1bf88:	str	r2, [r4, #32]
   1bf8c:	b	1bf38 <next@@Base+0x1ab8>
   1bf90:	andeq	r1, r0, r0, lsr #15
   1bf94:	andeq	r1, r0, ip, ror #26
   1bf98:	ldr	r0, [pc, #52]	; 1bfd4 <next@@Base+0x1b54>
   1bf9c:	ldr	r3, [pc, #52]	; 1bfd8 <next@@Base+0x1b58>
   1bfa0:	add	r0, pc, r0
   1bfa4:	push	{lr}		; (str lr, [sp, #-4]!)
   1bfa8:	mov	ip, #0
   1bfac:	ldr	r3, [r0, r3]
   1bfb0:	mvn	lr, #0
   1bfb4:	mov	r2, ip
   1bfb8:	str	lr, [r3, #24]
   1bfbc:	mov	r1, ip
   1bfc0:	ldr	r0, [r3]
   1bfc4:	pop	{lr}		; (ldr lr, [sp], #4)
   1bfc8:	str	ip, [r3, #4]
   1bfcc:	str	ip, [r3, #8]
   1bfd0:	b	1211c <fseek@plt>
   1bfd4:	andeq	r2, r1, r8, asr r0
   1bfd8:	andeq	r0, r0, r4, lsr #1
   1bfdc:	push	{r4, r5, r6, r7, lr}
   1bfe0:	mov	r2, #0
   1bfe4:	sub	sp, sp, #36	; 0x24
   1bfe8:	mov	r3, #0
   1bfec:	mov	r4, #0
   1bff0:	mov	r6, r0
   1bff4:	strd	r2, [sp, #8]
   1bff8:	strd	r2, [sp, #16]
   1bffc:	strh	r4, [sp, #2]
   1c000:	bl	12068 <getpid@plt>
   1c004:	ldr	r3, [pc, #196]	; 1c0d0 <next@@Base+0x1c50>
   1c008:	ldr	ip, [pc, #196]	; 1c0d4 <next@@Base+0x1c54>
   1c00c:	add	r3, pc, r3
   1c010:	mvn	lr, #0
   1c014:	mov	r7, #1
   1c018:	ldr	r2, [pc, #184]	; 1c0d8 <next@@Base+0x1c58>
   1c01c:	mov	r1, #66	; 0x42
   1c020:	str	r0, [sp, #24]
   1c024:	ldr	r5, [r3, ip]
   1c028:	mov	r0, r6
   1c02c:	strh	r7, [sp]
   1c030:	str	r4, [r5, #4]
   1c034:	str	r4, [r5, #12]
   1c038:	str	r4, [r5, #8]
   1c03c:	str	r4, [r5, #20]
   1c040:	str	lr, [r5, #16]
   1c044:	bl	1202c <open64@plt>
   1c048:	subs	r6, r0, #0
   1c04c:	movlt	r0, r4
   1c050:	blt	1c0b4 <next@@Base+0x1c34>
   1c054:	mov	r4, sp
   1c058:	mov	r2, r4
   1c05c:	mov	r1, #14
   1c060:	mov	r0, r6
   1c064:	bl	120e0 <fcntl64@plt>
   1c068:	cmp	r0, #0
   1c06c:	beq	1c080 <next@@Base+0x1c00>
   1c070:	bl	12098 <__errno_location@plt>
   1c074:	ldr	r3, [r0]
   1c078:	cmp	r3, #4
   1c07c:	beq	1c058 <next@@Base+0x1bd8>
   1c080:	ldr	r1, [pc, #84]	; 1c0dc <next@@Base+0x1c5c>
   1c084:	mov	r0, r6
   1c088:	add	r1, pc, r1
   1c08c:	bl	11f9c <fdopen@plt>
   1c090:	cmp	r0, #0
   1c094:	mov	r4, r0
   1c098:	str	r0, [r5]
   1c09c:	beq	1c0bc <next@@Base+0x1c3c>
   1c0a0:	mov	r4, #1
   1c0a4:	mov	r1, #0
   1c0a8:	str	r4, [r5, #24]
   1c0ac:	bl	11fb4 <setbuf@plt>
   1c0b0:	mov	r0, r4
   1c0b4:	add	sp, sp, #36	; 0x24
   1c0b8:	pop	{r4, r5, r6, r7, pc}
   1c0bc:	mov	r0, r6
   1c0c0:	bl	12134 <close@plt>
   1c0c4:	mov	r0, r4
   1c0c8:	add	sp, sp, #36	; 0x24
   1c0cc:	pop	{r4, r5, r6, r7, pc}
   1c0d0:	andeq	r1, r1, ip, ror #31
   1c0d4:	andeq	r0, r0, r4, lsr #1
   1c0d8:			; <UNDEFINED> instruction: 0x000001b6
   1c0dc:	andeq	r1, r0, r8, ror #24
   1c0e0:	push	{r4, r5, r6, lr}
   1c0e4:	mov	r4, r1
   1c0e8:	ldr	r5, [pc, #248]	; 1c1e8 <next@@Base+0x1d68>
   1c0ec:	ldr	ip, [r4, #8]
   1c0f0:	ldr	lr, [r4, #12]
   1c0f4:	ldr	r6, [r4]
   1c0f8:	cmp	ip, #0
   1c0fc:	mov	r1, r0
   1c100:	add	r5, pc, r5
   1c104:	add	r0, r6, lr
   1c108:	ble	1c144 <next@@Base+0x1cc4>
   1c10c:	ldrb	r3, [r1]
   1c110:	cmp	r3, #47	; 0x2f
   1c114:	addeq	r2, r1, #1
   1c118:	ldrbeq	r3, [r1, #1]
   1c11c:	movne	r2, r1
   1c120:	cmp	r3, #0
   1c124:	beq	1c144 <next@@Base+0x1cc4>
   1c128:	cmp	r3, #47	; 0x2f
   1c12c:	moveq	r1, r2
   1c130:	ldrb	r3, [r2, #1]!
   1c134:	subeq	ip, ip, #1
   1c138:	cmp	r3, #0
   1c13c:	cmpne	ip, #0
   1c140:	bne	1c128 <next@@Base+0x1ca8>
   1c144:	cmp	lr, #0
   1c148:	bne	1c168 <next@@Base+0x1ce8>
   1c14c:	bl	12014 <strcpy@plt>
   1c150:	ldr	r0, [r4]
   1c154:	bl	1bfdc <next@@Base+0x1b5c>
   1c158:	cmp	r0, #0
   1c15c:	beq	1c180 <next@@Base+0x1d00>
   1c160:	mov	r0, #0
   1c164:	pop	{r4, r5, r6, pc}
   1c168:	ldrb	r3, [r1]
   1c16c:	cmp	r3, #47	; 0x2f
   1c170:	movne	r3, #47	; 0x2f
   1c174:	addne	r0, r0, #1
   1c178:	strbne	r3, [r6, lr]
   1c17c:	b	1c14c <next@@Base+0x1ccc>
   1c180:	ldr	r0, [r4]
   1c184:	bl	1bd20 <next@@Base+0x18a0>
   1c188:	cmp	r0, #0
   1c18c:	bne	1c1c4 <next@@Base+0x1d44>
   1c190:	ldr	r0, [r4]
   1c194:	bl	1bfdc <next@@Base+0x1b5c>
   1c198:	cmp	r0, #0
   1c19c:	bne	1c160 <next@@Base+0x1ce0>
   1c1a0:	ldr	r3, [pc, #68]	; 1c1ec <next@@Base+0x1d6c>
   1c1a4:	ldr	r1, [pc, #68]	; 1c1f0 <next@@Base+0x1d70>
   1c1a8:	ldr	r2, [r4]
   1c1ac:	ldr	r3, [r5, r3]
   1c1b0:	add	r1, pc, r1
   1c1b4:	ldr	r0, [r3]
   1c1b8:	bl	1208c <fprintf@plt>
   1c1bc:	mvn	r0, #0
   1c1c0:	pop	{r4, r5, r6, pc}
   1c1c4:	ldr	r3, [pc, #32]	; 1c1ec <next@@Base+0x1d6c>
   1c1c8:	ldr	r1, [pc, #36]	; 1c1f4 <next@@Base+0x1d74>
   1c1cc:	ldr	r2, [r4]
   1c1d0:	ldr	r3, [r5, r3]
   1c1d4:	add	r1, pc, r1
   1c1d8:	ldr	r0, [r3]
   1c1dc:	bl	1208c <fprintf@plt>
   1c1e0:	mvn	r0, #0
   1c1e4:	pop	{r4, r5, r6, pc}
   1c1e8:	strdeq	r1, [r1], -r8
   1c1ec:	muleq	r0, r8, r0
   1c1f0:	andeq	r1, r0, r8, asr fp
   1c1f4:	andeq	r1, r0, r0, lsr #22
   1c1f8:	ldr	r3, [pc, #96]	; 1c260 <next@@Base+0x1de0>
   1c1fc:	ldr	r2, [pc, #96]	; 1c264 <next@@Base+0x1de4>
   1c200:	add	r3, pc, r3
   1c204:	push	{r4, lr}
   1c208:	ldr	r4, [r3, r2]
   1c20c:	ldr	r0, [r4]
   1c210:	cmp	r0, #0
   1c214:	beq	1c234 <next@@Base+0x1db4>
   1c218:	ldr	r3, [r4, #8]
   1c21c:	cmp	r3, #0
   1c220:	bne	1c244 <next@@Base+0x1dc4>
   1c224:	bl	120d4 <fclose@plt>
   1c228:	mov	r3, #0
   1c22c:	str	r3, [r4]
   1c230:	str	r3, [r4, #12]
   1c234:	mov	r3, #0
   1c238:	str	r3, [r4, #24]
   1c23c:	ldr	r0, [r4, #20]
   1c240:	pop	{r4, pc}
   1c244:	ldr	r2, [r4, #24]
   1c248:	cmp	r2, #0
   1c24c:	bge	1c224 <next@@Base+0x1da4>
   1c250:	mov	r0, r3
   1c254:	bl	1b24c <next@@Base+0xdcc>
   1c258:	ldr	r0, [r4]
   1c25c:	b	1c224 <next@@Base+0x1da4>
   1c260:	strdeq	r1, [r1], -r8
   1c264:	andeq	r0, r0, r4, lsr #1
   1c268:	push	{r4, lr}
   1c26c:	mov	r4, r0
   1c270:	mov	r0, #1
   1c274:	bl	1b2a8 <next@@Base+0xe28>
   1c278:	str	r4, [r0]
   1c27c:	pop	{r4, pc}
   1c280:	push	{r4, r5, r6, lr}
   1c284:	mov	r5, r0
   1c288:	mov	r0, #2
   1c28c:	mov	r4, r1
   1c290:	bl	1b2a8 <next@@Base+0xe28>
   1c294:	str	r5, [r0]
   1c298:	str	r4, [r0, #4]
   1c29c:	pop	{r4, r5, r6, pc}
   1c2a0:	push	{r4, r5, r6, lr}
   1c2a4:	mov	r5, r0
   1c2a8:	mov	r0, #2
   1c2ac:	mov	r4, r1
   1c2b0:	bl	1b2a8 <next@@Base+0xe28>
   1c2b4:	str	r5, [r0]
   1c2b8:	str	r4, [r0, #4]
   1c2bc:	pop	{r4, r5, r6, pc}
   1c2c0:	mov	r2, #0
   1c2c4:	push	{r4, r5, r6, r7, r8, lr}
   1c2c8:	mov	r3, r2
   1c2cc:	sub	sp, sp, #32
   1c2d0:	mov	r5, r1
   1c2d4:	mov	r7, r2
   1c2d8:	mov	r4, r1
   1c2dc:	mov	r8, #1
   1c2e0:	str	r2, [sp]
   1c2e4:	str	r2, [sp, #4]
   1c2e8:	str	r2, [sp, #8]
   1c2ec:	str	r2, [sp, #12]
   1c2f0:	str	r2, [sp, #16]
   1c2f4:	str	r2, [sp, #20]
   1c2f8:	str	r2, [sp, #24]
   1c2fc:	str	r2, [sp, #28]
   1c300:	lsr	r2, r3, #5
   1c304:	ldr	lr, [r1, #40]	; 0x28
   1c308:	add	ip, sp, #32
   1c30c:	cmp	lr, #0
   1c310:	add	r2, ip, r2, lsl #2
   1c314:	and	r6, r3, #31
   1c318:	ldrne	ip, [r2, #-32]	; 0xffffffe0
   1c31c:	add	r3, r3, #1
   1c320:	orrne	ip, ip, r8, lsl r6
   1c324:	addne	r7, r7, #1
   1c328:	strne	ip, [r2, #-32]	; 0xffffffe0
   1c32c:	cmp	r3, #252	; 0xfc
   1c330:	add	r1, r1, #24
   1c334:	bne	1c300 <next@@Base+0x1e80>
   1c338:	add	r7, r7, r7, lsl #2
   1c33c:	add	r1, r7, #17
   1c340:	bl	1c2a0 <next@@Base+0x1e20>
   1c344:	ldr	r0, [r5]
   1c348:	bl	1c268 <next@@Base+0x1de8>
   1c34c:	ldr	r0, [r5, #8]
   1c350:	bl	1c268 <next@@Base+0x1de8>
   1c354:	ldr	r0, [r5, #12]
   1c358:	bl	1c268 <next@@Base+0x1de8>
   1c35c:	ldrd	r0, [r5, #16]
   1c360:	bl	1c280 <next@@Base+0x1e00>
   1c364:	ldrd	r0, [r5, #24]
   1c368:	bl	1c280 <next@@Base+0x1e00>
   1c36c:	ldrd	r0, [r5, #32]
   1c370:	bl	1c280 <next@@Base+0x1e00>
   1c374:	sub	r6, sp, #4
   1c378:	add	r7, sp, #28
   1c37c:	ldr	r0, [r6, #4]!
   1c380:	bl	1c268 <next@@Base+0x1de8>
   1c384:	cmp	r7, r6
   1c388:	bne	1c37c <next@@Base+0x1efc>
   1c38c:	add	r5, r5, #6016	; 0x1780
   1c390:	add	r5, r5, #32
   1c394:	ldr	r3, [r4, #40]	; 0x28
   1c398:	subs	r0, r3, #0
   1c39c:	beq	1c3b4 <next@@Base+0x1f34>
   1c3a0:	bl	1c268 <next@@Base+0x1de8>
   1c3a4:	ldrd	r0, [r4, #48]	; 0x30
   1c3a8:	bl	1c280 <next@@Base+0x1e00>
   1c3ac:	ldrd	r0, [r4, #56]	; 0x38
   1c3b0:	bl	1c280 <next@@Base+0x1e00>
   1c3b4:	add	r4, r4, #24
   1c3b8:	cmp	r4, r5
   1c3bc:	bne	1c394 <next@@Base+0x1f14>
   1c3c0:	add	sp, sp, #32
   1c3c4:	pop	{r4, r5, r6, r7, r8, pc}
   1c3c8:	push	{r4, lr}
   1c3cc:	mov	r0, #1
   1c3d0:	bl	1b308 <next@@Base+0xe88>
   1c3d4:	subs	r3, r0, #0
   1c3d8:	popeq	{r4, pc}
   1c3dc:	ldr	r0, [r3]
   1c3e0:	pop	{r4, lr}
   1c3e4:	b	1b1cc <next@@Base+0xd4c>
   1c3e8:	push	{r4, lr}
   1c3ec:	mov	r0, #2
   1c3f0:	bl	1b308 <next@@Base+0xe88>
   1c3f4:	subs	r2, r0, #0
   1c3f8:	beq	1c41c <next@@Base+0x1f9c>
   1c3fc:	ldr	r0, [r2]
   1c400:	bl	1b1cc <next@@Base+0xd4c>
   1c404:	mov	r3, r0
   1c408:	ldr	r0, [r2, #4]
   1c40c:	bl	1b1cc <next@@Base+0xd4c>
   1c410:	mov	r1, r0
   1c414:	mov	r0, r3
   1c418:	pop	{r4, pc}
   1c41c:	mov	r3, r2
   1c420:	mov	r1, r2
   1c424:	mov	r0, r3
   1c428:	pop	{r4, pc}
   1c42c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c430:	sub	sp, sp, #28
   1c434:	mov	r8, r1
   1c438:	str	r3, [sp, #12]
   1c43c:	mov	r4, #0
   1c440:	add	r3, r1, #52	; 0x34
   1c444:	add	r1, r1, #16
   1c448:	str	r0, [sp, #20]
   1c44c:	str	r2, [sp, #16]
   1c450:	ldr	r2, [r3, #-4]!
   1c454:	cmp	r2, #0
   1c458:	addne	r4, r4, #1
   1c45c:	cmp	r1, r3
   1c460:	bne	1c450 <next@@Base+0x1fd0>
   1c464:	add	r4, r4, #4
   1c468:	lsl	r4, r4, #3
   1c46c:	mov	r0, r4
   1c470:	bl	12044 <malloc@plt>
   1c474:	subs	r6, r0, #0
   1c478:	beq	1c54c <next@@Base+0x20cc>
   1c47c:	ldr	r3, [sp, #12]
   1c480:	mov	r4, #0
   1c484:	str	r3, [r6, #4]
   1c488:	str	r4, [r6]
   1c48c:	bl	1c3c8 <next@@Base+0x1f48>
   1c490:	mov	r7, r4
   1c494:	add	r5, r8, #12
   1c498:	str	r0, [r6, #12]
   1c49c:	bl	1c3c8 <next@@Base+0x1f48>
   1c4a0:	str	r0, [r6, #16]
   1c4a4:	bl	1c3c8 <next@@Base+0x1f48>
   1c4a8:	str	r0, [r6, #20]
   1c4ac:	b	1c4bc <next@@Base+0x203c>
   1c4b0:	add	r4, r4, #1
   1c4b4:	cmp	r4, #9
   1c4b8:	beq	1c538 <next@@Base+0x20b8>
   1c4bc:	ldr	r3, [r5, #4]!
   1c4c0:	cmp	r3, #0
   1c4c4:	beq	1c4b0 <next@@Base+0x2030>
   1c4c8:	bl	1c3c8 <next@@Base+0x1f48>
   1c4cc:	lsl	r3, r4, #17
   1c4d0:	add	r3, r3, #27262976	; 0x1a00000
   1c4d4:	add	r3, r3, #65536	; 0x10000
   1c4d8:	cmp	r0, r3
   1c4dc:	bne	1c5a0 <next@@Base+0x2120>
   1c4e0:	bl	1c3c8 <next@@Base+0x1f48>
   1c4e4:	lsr	sl, r0, #1
   1c4e8:	lsl	fp, sl, #3
   1c4ec:	mov	r0, fp
   1c4f0:	bl	12044 <malloc@plt>
   1c4f4:	subs	r9, r0, #0
   1c4f8:	beq	1c5b0 <next@@Base+0x2130>
   1c4fc:	add	r1, r6, r7, lsl #3
   1c500:	cmp	sl, #0
   1c504:	str	sl, [r1, #24]
   1c508:	str	r9, [r1, #28]
   1c50c:	sub	fp, sl, #1
   1c510:	beq	1c528 <next@@Base+0x20a8>
   1c514:	bl	1c3e8 <next@@Base+0x1f68>
   1c518:	sub	fp, fp, #1
   1c51c:	cmn	fp, #1
   1c520:	strd	r0, [r9], #8
   1c524:	bne	1c514 <next@@Base+0x2094>
   1c528:	add	r4, r4, #1
   1c52c:	cmp	r4, #9
   1c530:	add	r7, r7, #1
   1c534:	bne	1c4bc <next@@Base+0x203c>
   1c538:	ldr	r3, [sp, #16]
   1c53c:	mov	r0, r6
   1c540:	str	r6, [r3]
   1c544:	add	sp, sp, #28
   1c548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c54c:	mvn	r5, #0
   1c550:	cmp	r4, #0
   1c554:	bne	1c594 <next@@Base+0x2114>
   1c558:	ldr	r3, [pc, #92]	; 1c5bc <next@@Base+0x213c>
   1c55c:	mov	r4, r5
   1c560:	add	r3, pc, r3
   1c564:	ldr	r0, [pc, #84]	; 1c5c0 <next@@Base+0x2140>
   1c568:	ldr	r2, [sp, #12]
   1c56c:	ldr	r1, [sp, #20]
   1c570:	str	r4, [sp]
   1c574:	add	r0, pc, r0
   1c578:	bl	1b454 <next@@Base+0xfd4>
   1c57c:	mov	r2, r5
   1c580:	mov	r1, r6
   1c584:	mov	r0, r8
   1c588:	add	sp, sp, #28
   1c58c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c590:	b	1b488 <next@@Base+0x1008>
   1c594:	ldr	r3, [pc, #40]	; 1c5c4 <next@@Base+0x2144>
   1c598:	add	r3, pc, r3
   1c59c:	b	1c564 <next@@Base+0x20e4>
   1c5a0:	ldr	r3, [pc, #32]	; 1c5c8 <next@@Base+0x2148>
   1c5a4:	mov	r5, r4
   1c5a8:	add	r3, pc, r3
   1c5ac:	b	1c564 <next@@Base+0x20e4>
   1c5b0:	mov	r5, r4
   1c5b4:	mov	r4, fp
   1c5b8:	b	1c550 <next@@Base+0x20d0>
   1c5bc:	andeq	r1, r0, r4, asr #15
   1c5c0:	ldrdeq	r1, [r0], -r4
   1c5c4:	andeq	r1, r0, r0, lsr #15
   1c5c8:	andeq	r1, r0, ip, ror r7
   1c5cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5d0:	sub	sp, sp, #36	; 0x24
   1c5d4:	mov	r9, r0
   1c5d8:	bl	1c3c8 <next@@Base+0x1f48>
   1c5dc:	mov	r7, #0
   1c5e0:	sub	r4, sp, #4
   1c5e4:	add	r5, sp, #28
   1c5e8:	str	r0, [r9]
   1c5ec:	bl	1c3c8 <next@@Base+0x1f48>
   1c5f0:	str	r0, [r9, #8]
   1c5f4:	bl	1c3c8 <next@@Base+0x1f48>
   1c5f8:	str	r0, [r9, #12]
   1c5fc:	bl	1c3e8 <next@@Base+0x1f68>
   1c600:	strd	r0, [r9, #16]
   1c604:	bl	1c3e8 <next@@Base+0x1f68>
   1c608:	strd	r0, [r9, #24]
   1c60c:	bl	1c3e8 <next@@Base+0x1f68>
   1c610:	ldr	r2, [pc, #264]	; 1c720 <next@@Base+0x22a0>
   1c614:	strd	r0, [r9, #32]
   1c618:	add	r0, r9, #40	; 0x28
   1c61c:	mov	r1, r7
   1c620:	bl	120b0 <memset@plt>
   1c624:	bl	1c3c8 <next@@Base+0x1f48>
   1c628:	str	r0, [r4, #4]!
   1c62c:	bl	1d310 <__gcov_sort_n_vals@@Base+0x64c>
   1c630:	cmp	r4, r5
   1c634:	add	r7, r7, r0
   1c638:	bne	1c624 <next@@Base+0x21a4>
   1c63c:	cmp	r7, #0
   1c640:	sub	r7, r7, #1
   1c644:	beq	1c70c <next@@Base+0x228c>
   1c648:	ldr	r8, [pc, #212]	; 1c724 <next@@Base+0x22a4>
   1c64c:	ldr	sl, [pc, #212]	; 1c728 <next@@Base+0x22a8>
   1c650:	mov	r4, #0
   1c654:	add	r8, pc, r8
   1c658:	add	sl, pc, sl
   1c65c:	mov	r5, r4
   1c660:	mov	r6, r4
   1c664:	cmp	r4, #0
   1c668:	addeq	r3, sp, #32
   1c66c:	addeq	r6, r3, r5, lsl #2
   1c670:	subeq	r6, r6, #36	; 0x24
   1c674:	beq	1c690 <next@@Base+0x2210>
   1c678:	b	1c6b8 <next@@Base+0x2238>
   1c67c:	ldr	r4, [r6, #4]!
   1c680:	add	r3, r5, #1
   1c684:	cmp	r4, #0
   1c688:	bne	1c6b0 <next@@Base+0x2230>
   1c68c:	mov	r5, r3
   1c690:	cmp	r5, #7
   1c694:	bls	1c67c <next@@Base+0x21fc>
   1c698:	mov	r0, r8
   1c69c:	bl	1b454 <next@@Base+0xfd4>
   1c6a0:	ldr	r4, [r6, #4]!
   1c6a4:	add	r3, r5, #1
   1c6a8:	cmp	r4, #0
   1c6ac:	beq	1c68c <next@@Base+0x220c>
   1c6b0:	lsl	r6, r5, #5
   1c6b4:	mov	r5, r3
   1c6b8:	tst	r4, #1
   1c6bc:	bne	1c6d0 <next@@Base+0x2250>
   1c6c0:	lsr	r4, r4, #1
   1c6c4:	tst	r4, #1
   1c6c8:	add	r6, r6, #1
   1c6cc:	beq	1c6c0 <next@@Base+0x2240>
   1c6d0:	cmp	r6, #251	; 0xfb
   1c6d4:	bhi	1c714 <next@@Base+0x2294>
   1c6d8:	bl	1c3c8 <next@@Base+0x1f48>
   1c6dc:	add	fp, r6, r6, lsl #1
   1c6e0:	sub	r7, r7, #1
   1c6e4:	add	fp, r9, fp, lsl #3
   1c6e8:	lsr	r4, r4, #1
   1c6ec:	add	r6, r6, #1
   1c6f0:	str	r0, [fp, #40]	; 0x28
   1c6f4:	bl	1c3e8 <next@@Base+0x1f68>
   1c6f8:	strd	r0, [fp, #48]	; 0x30
   1c6fc:	bl	1c3e8 <next@@Base+0x1f68>
   1c700:	cmn	r7, #1
   1c704:	strd	r0, [fp, #56]	; 0x38
   1c708:	bne	1c664 <next@@Base+0x21e4>
   1c70c:	add	sp, sp, #36	; 0x24
   1c710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c714:	mov	r0, sl
   1c718:	bl	1b454 <next@@Base+0xfd4>
   1c71c:	b	1c6d8 <next@@Base+0x2258>
   1c720:	andeq	r1, r0, r0, lsr #15
   1c724:	andeq	r1, r0, r8, lsl r7
   1c728:	andeq	r1, r0, r4, asr r7
   1c72c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c730:	sub	sp, sp, #6080	; 0x17c0
   1c734:	sub	sp, sp, #28
   1c738:	mov	r4, r1
   1c73c:	strd	r2, [sp, #4]
   1c740:	add	r3, sp, #6144	; 0x1800
   1c744:	mov	r9, r0
   1c748:	ldr	r7, [r3]
   1c74c:	add	r3, sp, #6144	; 0x1800
   1c750:	add	r3, r3, #4
   1c754:	ldr	r6, [r3]
   1c758:	add	r3, sp, #6144	; 0x1800
   1c75c:	add	r3, r3, #8
   1c760:	ldr	sl, [r3]
   1c764:	bl	1c3c8 <next@@Base+0x1f48>
   1c768:	add	r3, r4, #12
   1c76c:	mov	r2, r9
   1c770:	str	r3, [sp, #12]
   1c774:	mov	r1, r0
   1c778:	mov	r0, r3
   1c77c:	bl	1bde4 <next@@Base+0x1964>
   1c780:	cmp	r0, #0
   1c784:	beq	1ca0c <next@@Base+0x258c>
   1c788:	bl	1c3c8 <next@@Base+0x1f48>
   1c78c:	ldr	r3, [r4, #8]
   1c790:	cmp	r0, r3
   1c794:	bne	1c828 <next@@Base+0x23a8>
   1c798:	ldr	fp, [pc, #628]	; 1ca14 <next@@Base+0x2594>
   1c79c:	add	r5, sp, #16
   1c7a0:	add	fp, pc, fp
   1c7a4:	bl	1b17c <next@@Base+0xcfc>
   1c7a8:	str	r0, [r6]
   1c7ac:	bl	1c3c8 <next@@Base+0x1f48>
   1c7b0:	cmp	r0, #-1560281088	; 0xa3000000
   1c7b4:	bne	1c86c <next@@Base+0x23ec>
   1c7b8:	bl	1c3c8 <next@@Base+0x1f48>
   1c7bc:	mov	r0, r5
   1c7c0:	bl	1c5cc <next@@Base+0x214c>
   1c7c4:	bl	1b1a0 <next@@Base+0xd20>
   1c7c8:	add	r2, sp, #2000	; 0x7d0
   1c7cc:	add	r2, r2, #8
   1c7d0:	subs	r8, r0, #0
   1c7d4:	bne	1c9a0 <next@@Base+0x2520>
   1c7d8:	ldr	r3, [r7]
   1c7dc:	cmp	r3, #0
   1c7e0:	bne	1c838 <next@@Base+0x23b8>
   1c7e4:	ldr	r3, [r2, #-1992]	; 0xfffff838
   1c7e8:	cmp	r3, sl
   1c7ec:	bne	1c7a4 <next@@Base+0x2324>
   1c7f0:	ldr	r3, [sp, #8]
   1c7f4:	ldr	r2, [r2, #-1984]	; 0xfffff840
   1c7f8:	ldr	r3, [r3]
   1c7fc:	cmp	r2, r3
   1c800:	bne	1c7a4 <next@@Base+0x2324>
   1c804:	ldr	r2, [pc, #524]	; 1ca18 <next@@Base+0x2598>
   1c808:	mov	r1, r5
   1c80c:	ldr	r0, [sp, #4]
   1c810:	bl	11ff0 <memcpy@plt>
   1c814:	ldr	r3, [r6]
   1c818:	str	r3, [r7]
   1c81c:	b	1c7a4 <next@@Base+0x2324>
   1c820:	cmp	r0, #0
   1c824:	bne	1c9e0 <next@@Base+0x2560>
   1c828:	mov	r0, #0
   1c82c:	add	sp, sp, #6080	; 0x17c0
   1c830:	add	sp, sp, #28
   1c834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c838:	ldr	r0, [pc, #476]	; 1ca1c <next@@Base+0x259c>
   1c83c:	bl	12044 <malloc@plt>
   1c840:	ldr	r2, [pc, #464]	; 1ca18 <next@@Base+0x2598>
   1c844:	mov	r1, r5
   1c848:	mov	r3, r0
   1c84c:	str	r0, [fp]
   1c850:	add	r0, r0, #8
   1c854:	str	r3, [sp]
   1c858:	bl	11ff0 <memcpy@plt>
   1c85c:	ldr	r3, [sp]
   1c860:	str	r8, [r3]
   1c864:	ldr	fp, [fp]
   1c868:	b	1c7a4 <next@@Base+0x2324>
   1c86c:	ldr	r5, [r4, #52]	; 0x34
   1c870:	cmp	r5, #0
   1c874:	beq	1c820 <next@@Base+0x23a0>
   1c878:	ldr	r3, [r4, #56]	; 0x38
   1c87c:	cmp	r0, #16777216	; 0x1000000
   1c880:	ldr	r8, [r3]
   1c884:	bne	1c9dc <next@@Base+0x255c>
   1c888:	ldr	r6, [pc, #400]	; 1ca20 <next@@Base+0x25a0>
   1c88c:	mov	r5, #0
   1c890:	add	r6, pc, r6
   1c894:	add	r6, r6, #4
   1c898:	b	1c8dc <next@@Base+0x245c>
   1c89c:	mov	r2, r6
   1c8a0:	mov	r3, r5
   1c8a4:	mov	r1, r4
   1c8a8:	mov	r0, r9
   1c8ac:	bl	1c42c <next@@Base+0x1fac>
   1c8b0:	subs	r6, r0, #0
   1c8b4:	beq	1c9e0 <next@@Base+0x2560>
   1c8b8:	bl	1c3c8 <next@@Base+0x1f48>
   1c8bc:	ldr	r3, [r4, #52]	; 0x34
   1c8c0:	add	r5, r5, #1
   1c8c4:	cmp	r3, r5
   1c8c8:	beq	1c820 <next@@Base+0x23a0>
   1c8cc:	ldr	r3, [r4, #56]	; 0x38
   1c8d0:	cmp	r0, #16777216	; 0x1000000
   1c8d4:	ldr	r8, [r3, r5, lsl #2]
   1c8d8:	bne	1c9e0 <next@@Base+0x2560>
   1c8dc:	bl	1c3c8 <next@@Base+0x1f48>
   1c8e0:	cmp	r0, #0
   1c8e4:	beq	1c8b8 <next@@Base+0x2438>
   1c8e8:	cmp	r0, #3
   1c8ec:	bne	1c9e0 <next@@Base+0x2560>
   1c8f0:	cmp	r8, #0
   1c8f4:	beq	1c89c <next@@Base+0x241c>
   1c8f8:	ldr	r3, [r8]
   1c8fc:	cmp	r4, r3
   1c900:	bne	1c89c <next@@Base+0x241c>
   1c904:	bl	1c3c8 <next@@Base+0x1f48>
   1c908:	ldr	r3, [r8, #4]
   1c90c:	cmp	r0, r3
   1c910:	bne	1c9e0 <next@@Base+0x2560>
   1c914:	bl	1c3c8 <next@@Base+0x1f48>
   1c918:	ldr	r3, [r8, #8]
   1c91c:	cmp	r0, r3
   1c920:	bne	1c9e0 <next@@Base+0x2560>
   1c924:	bl	1c3c8 <next@@Base+0x1f48>
   1c928:	ldr	r3, [r8, #12]
   1c92c:	cmp	r0, r3
   1c930:	bne	1c9e0 <next@@Base+0x2560>
   1c934:	ldr	r7, [pc, #232]	; 1ca24 <next@@Base+0x25a4>
   1c938:	ldr	fp, [sp, #12]
   1c93c:	add	r8, r8, #16
   1c940:	ldr	sl, [fp, #4]!
   1c944:	cmp	sl, #0
   1c948:	beq	1c980 <next@@Base+0x2500>
   1c94c:	bl	1c3c8 <next@@Base+0x1f48>
   1c950:	str	r0, [sp]
   1c954:	bl	1c3c8 <next@@Base+0x1f48>
   1c958:	ldr	r3, [sp]
   1c95c:	cmp	r3, r7
   1c960:	bne	1c9e0 <next@@Base+0x2560>
   1c964:	ldr	r3, [r8]
   1c968:	mov	r1, r3
   1c96c:	cmp	r0, r3, lsl #1
   1c970:	bne	1c9e0 <next@@Base+0x2560>
   1c974:	ldr	r0, [r8, #4]
   1c978:	blx	sl
   1c97c:	add	r8, r8, #8
   1c980:	ldr	r3, [pc, #160]	; 1ca28 <next@@Base+0x25a8>
   1c984:	add	r7, r7, #131072	; 0x20000
   1c988:	cmp	r7, r3
   1c98c:	bne	1c940 <next@@Base+0x24c0>
   1c990:	bl	1b1a0 <next@@Base+0xd20>
   1c994:	cmp	r0, #0
   1c998:	beq	1c8b8 <next@@Base+0x2438>
   1c99c:	mov	r8, r0
   1c9a0:	cmp	r8, #0
   1c9a4:	blt	1c9d0 <next@@Base+0x2550>
   1c9a8:	ldr	r2, [pc, #124]	; 1ca2c <next@@Base+0x25ac>
   1c9ac:	add	r2, pc, r2
   1c9b0:	ldr	r0, [pc, #120]	; 1ca30 <next@@Base+0x25b0>
   1c9b4:	mov	r1, r9
   1c9b8:	add	r0, pc, r0
   1c9bc:	bl	1b454 <next@@Base+0xfd4>
   1c9c0:	mvn	r0, #0
   1c9c4:	add	sp, sp, #6080	; 0x17c0
   1c9c8:	add	sp, sp, #28
   1c9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9d0:	ldr	r2, [pc, #92]	; 1ca34 <next@@Base+0x25b4>
   1c9d4:	add	r2, pc, r2
   1c9d8:	b	1c9b0 <next@@Base+0x2530>
   1c9dc:	mov	r5, #0
   1c9e0:	ldr	r2, [pc, #80]	; 1ca38 <next@@Base+0x25b8>
   1c9e4:	ldr	r0, [pc, #80]	; 1ca3c <next@@Base+0x25bc>
   1c9e8:	mov	r3, r5
   1c9ec:	mov	r1, r9
   1c9f0:	add	r2, pc, r2
   1c9f4:	add	r0, pc, r0
   1c9f8:	bl	1b454 <next@@Base+0xfd4>
   1c9fc:	mvn	r0, #0
   1ca00:	add	sp, sp, #6080	; 0x17c0
   1ca04:	add	sp, sp, #28
   1ca08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca0c:	mvn	r0, #0
   1ca10:	b	1c82c <next@@Base+0x23ac>
   1ca14:	andeq	r3, r1, r0, lsr #25
   1ca18:	andeq	r1, r0, r8, asr #15
   1ca1c:	ldrdeq	r1, [r0], -r0
   1ca20:			; <UNDEFINED> instruction: 0x00013bb0
   1ca24:			; <UNDEFINED> instruction: 0x01a10000
   1ca28:			; <UNDEFINED> instruction: 0x01b30000
   1ca2c:	andeq	r1, r0, r8, asr #8
   1ca30:	andeq	r1, r0, r8, ror r4
   1ca34:	andeq	r1, r0, r4, lsl r4
   1ca38:	andeq	r1, r0, ip, lsl #8
   1ca3c:	andeq	r1, r0, r4, lsl r4
   1ca40:	ldr	r3, [pc, #72]	; 1ca90 <next@@Base+0x2610>
   1ca44:	ldr	r2, [pc, #72]	; 1ca94 <next@@Base+0x2614>
   1ca48:	add	r3, pc, r3
   1ca4c:	push	{r4, r5, r6, lr}
   1ca50:	mov	r5, r0
   1ca54:	ldr	r4, [r3, r2]
   1ca58:	ldr	r0, [r4, #8]
   1ca5c:	cmp	r0, #0
   1ca60:	bne	1ca88 <next@@Base+0x2608>
   1ca64:	lsl	r1, r5, #2
   1ca68:	mov	r2, #0
   1ca6c:	ldr	r0, [r4]
   1ca70:	bl	1211c <fseek@plt>
   1ca74:	ldr	r0, [r4]
   1ca78:	bl	11ffc <ftell@plt>
   1ca7c:	asr	r0, r0, #2
   1ca80:	str	r0, [r4, #4]
   1ca84:	pop	{r4, r5, r6, pc}
   1ca88:	bl	1b24c <next@@Base+0xdcc>
   1ca8c:	b	1ca64 <next@@Base+0x25e4>
   1ca90:			; <UNDEFINED> instruction: 0x000115b0
   1ca94:	andeq	r0, r0, r4, lsr #1
   1ca98:	cmp	r2, #0
   1ca9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1caa0:	mov	r8, r0
   1caa4:	sub	sp, sp, #20
   1caa8:	mov	r5, r1
   1caac:	mov	r4, r3
   1cab0:	beq	1cc80 <next@@Base+0x2800>
   1cab4:	cmp	r4, #0
   1cab8:	bne	1cc9c <next@@Base+0x281c>
   1cabc:	mov	r1, r5
   1cac0:	ldr	r5, [pc, #480]	; 1cca8 <next@@Base+0x2828>
   1cac4:	mov	r0, #-1560281088	; 0xa3000000
   1cac8:	add	r5, pc, r5
   1cacc:	bl	1c2c0 <next@@Base+0x1e40>
   1cad0:	ldr	r4, [r5]
   1cad4:	cmp	r4, #0
   1cad8:	beq	1cb04 <next@@Base+0x2684>
   1cadc:	add	r1, r4, #8
   1cae0:	mov	r0, #-1560281088	; 0xa3000000
   1cae4:	bl	1c2c0 <next@@Base+0x1e40>
   1cae8:	ldr	r3, [r5]
   1caec:	mov	r0, r3
   1caf0:	ldr	r4, [r3]
   1caf4:	bl	11fe4 <free@plt>
   1caf8:	cmp	r4, #0
   1cafc:	str	r4, [r5]
   1cb00:	bne	1cadc <next@@Base+0x265c>
   1cb04:	ldr	r3, [r8, #52]	; 0x34
   1cb08:	cmp	r3, #0
   1cb0c:	beq	1cc58 <next@@Base+0x27d8>
   1cb10:	ldr	r3, [pc, #404]	; 1ccac <next@@Base+0x282c>
   1cb14:	ldr	r9, [pc, #404]	; 1ccb0 <next@@Base+0x2830>
   1cb18:	add	r3, pc, r3
   1cb1c:	str	r3, [sp, #4]
   1cb20:	ldr	r3, [pc, #396]	; 1ccb4 <next@@Base+0x2834>
   1cb24:	mov	r7, #0
   1cb28:	add	r3, pc, r3
   1cb2c:	str	r3, [sp, #12]
   1cb30:	b	1cb6c <next@@Base+0x26ec>
   1cb34:	ldr	r3, [r8, #56]	; 0x38
   1cb38:	ldr	r4, [r3, r7, lsl #2]
   1cb3c:	cmp	r4, #0
   1cb40:	beq	1cb50 <next@@Base+0x26d0>
   1cb44:	ldr	r3, [r4]
   1cb48:	cmp	r3, r8
   1cb4c:	beq	1cc68 <next@@Base+0x27e8>
   1cb50:	mov	r1, #0
   1cb54:	mov	r0, #16777216	; 0x1000000
   1cb58:	bl	1c2a0 <next@@Base+0x1e20>
   1cb5c:	ldr	r3, [r8, #52]	; 0x34
   1cb60:	add	r7, r7, #1
   1cb64:	cmp	r3, r7
   1cb68:	beq	1cc58 <next@@Base+0x27d8>
   1cb6c:	ldr	r3, [sp, #4]
   1cb70:	ldr	r4, [r3, #4]
   1cb74:	cmp	r4, #0
   1cb78:	beq	1cb34 <next@@Base+0x26b4>
   1cb7c:	ldr	r3, [r4, #4]
   1cb80:	cmp	r3, r7
   1cb84:	bne	1cb34 <next@@Base+0x26b4>
   1cb88:	mov	r3, #1
   1cb8c:	mov	r1, #3
   1cb90:	mov	r0, #16777216	; 0x1000000
   1cb94:	add	r4, r4, #8
   1cb98:	str	r3, [sp, #8]
   1cb9c:	bl	1c2a0 <next@@Base+0x1e20>
   1cba0:	ldr	r0, [r4, #4]
   1cba4:	bl	1c268 <next@@Base+0x1de8>
   1cba8:	ldr	r0, [r4, #8]
   1cbac:	bl	1c268 <next@@Base+0x1de8>
   1cbb0:	ldr	r0, [r4, #12]
   1cbb4:	bl	1c268 <next@@Base+0x1de8>
   1cbb8:	ldr	r5, [pc, #248]	; 1ccb8 <next@@Base+0x2838>
   1cbbc:	add	r4, r4, #16
   1cbc0:	add	r6, r8, #12
   1cbc4:	b	1cbd4 <next@@Base+0x2754>
   1cbc8:	add	r5, r5, #131072	; 0x20000
   1cbcc:	cmp	r5, r9
   1cbd0:	beq	1cc24 <next@@Base+0x27a4>
   1cbd4:	ldr	r3, [r6, #4]!
   1cbd8:	cmp	r3, #0
   1cbdc:	beq	1cbc8 <next@@Base+0x2748>
   1cbe0:	ldr	fp, [r4]
   1cbe4:	mov	r0, r5
   1cbe8:	sub	sl, fp, #1
   1cbec:	lsl	r1, fp, #1
   1cbf0:	bl	1c2a0 <next@@Base+0x1e20>
   1cbf4:	cmp	fp, #0
   1cbf8:	ldr	fp, [r4, #4]
   1cbfc:	beq	1cc14 <next@@Base+0x2794>
   1cc00:	sub	sl, sl, #1
   1cc04:	ldrd	r0, [fp], #8
   1cc08:	bl	1c280 <next@@Base+0x1e00>
   1cc0c:	cmn	sl, #1
   1cc10:	bne	1cc00 <next@@Base+0x2780>
   1cc14:	add	r5, r5, #131072	; 0x20000
   1cc18:	cmp	r5, r9
   1cc1c:	add	r4, r4, #8
   1cc20:	bne	1cbd4 <next@@Base+0x2754>
   1cc24:	ldr	r3, [sp, #8]
   1cc28:	cmp	r3, #0
   1cc2c:	beq	1cb5c <next@@Base+0x26dc>
   1cc30:	ldr	r4, [sp, #12]
   1cc34:	mov	r2, #9
   1cc38:	mov	r0, r8
   1cc3c:	ldr	r1, [r4, #4]
   1cc40:	bl	1b488 <next@@Base+0x1008>
   1cc44:	ldr	r3, [r8, #52]	; 0x34
   1cc48:	add	r7, r7, #1
   1cc4c:	cmp	r3, r7
   1cc50:	str	r0, [r4, #4]
   1cc54:	bne	1cb6c <next@@Base+0x26ec>
   1cc58:	mov	r0, #0
   1cc5c:	add	sp, sp, #20
   1cc60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc64:	b	1c268 <next@@Base+0x1de8>
   1cc68:	mov	r1, #3
   1cc6c:	mov	r0, #16777216	; 0x1000000
   1cc70:	bl	1c2a0 <next@@Base+0x1e20>
   1cc74:	mov	r3, #0
   1cc78:	str	r3, [sp, #8]
   1cc7c:	b	1cba0 <next@@Base+0x2720>
   1cc80:	ldr	r1, [pc, #52]	; 1ccbc <next@@Base+0x283c>
   1cc84:	ldr	r0, [pc, #52]	; 1ccc0 <next@@Base+0x2840>
   1cc88:	bl	1c2a0 <next@@Base+0x1e20>
   1cc8c:	ldr	r0, [r8, #8]
   1cc90:	bl	1c268 <next@@Base+0x1de8>
   1cc94:	cmp	r4, #0
   1cc98:	beq	1cabc <next@@Base+0x263c>
   1cc9c:	mov	r0, r4
   1cca0:	bl	1ca40 <next@@Base+0x25c0>
   1cca4:	b	1cabc <next@@Base+0x263c>
   1cca8:	andeq	r3, r1, r8, ror r9
   1ccac:	andeq	r3, r1, r8, lsr #18
   1ccb0:			; <UNDEFINED> instruction: 0x01b30000
   1ccb4:	andeq	r3, r1, r8, lsl r9
   1ccb8:			; <UNDEFINED> instruction: 0x01a10000
   1ccbc:	teqmi	r8, sl, lsr #6
   1ccc0:	strbvs	r6, [r3, -r1, ror #8]!

0001ccc4 <__gcov_sort_n_vals@@Base>:
   1ccc4:	cmp	r1, #2
   1ccc8:	bxle	lr
   1cccc:	sub	r1, r1, #3
   1ccd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccd4:	add	r2, r0, #8
   1ccd8:	sub	sp, sp, #20
   1ccdc:	mov	r6, r0
   1cce0:	bic	r7, r1, #1
   1cce4:	mvn	r8, #15
   1cce8:	mov	lr, #0
   1ccec:	ldrd	r0, [r2]
   1ccf0:	ldrd	r4, [r2, #16]
   1ccf4:	ldrd	sl, [r2, #8]
   1ccf8:	add	r9, r2, #16
   1ccfc:	cmp	r0, r4
   1cd00:	sbcs	r3, r1, r5
   1cd04:	mov	ip, r9
   1cd08:	sub	r1, r6, r8
   1cd0c:	strd	sl, [sp]
   1cd10:	mov	r3, lr
   1cd14:	bge	1cd7c <__gcov_sort_n_vals@@Base+0xb8>
   1cd18:	add	sl, r8, #16
   1cd1c:	mvn	fp, #1
   1cd20:	add	sl, r2, sl
   1cd24:	orr	fp, lr, fp
   1cd28:	str	r7, [sp, #8]
   1cd2c:	str	r6, [sp, #12]
   1cd30:	b	1cd48 <__gcov_sort_n_vals@@Base+0x84>
   1cd34:	ldrd	r6, [ip, #-16]
   1cd38:	sub	r2, r2, #16
   1cd3c:	cmp	r6, r4
   1cd40:	sbcs	r1, r7, r5
   1cd44:	bge	1cda4 <__gcov_sort_n_vals@@Base+0xe0>
   1cd48:	ldrd	r6, [r2, #-8]
   1cd4c:	lsl	r1, r3, #3
   1cd50:	mov	r0, r3
   1cd54:	strd	r6, [r2, #8]
   1cd58:	ldrd	r6, [sl, r1]
   1cd5c:	sub	r3, r3, #2
   1cd60:	cmp	r3, fp
   1cd64:	strd	r6, [r2, #16]
   1cd68:	mov	ip, r2
   1cd6c:	bne	1cd34 <__gcov_sort_n_vals@@Base+0x70>
   1cd70:	ldr	r6, [sp, #12]
   1cd74:	ldr	r7, [sp, #8]
   1cd78:	add	r1, r6, r1
   1cd7c:	ldrd	r2, [sp]
   1cd80:	cmp	lr, r7
   1cd84:	sub	r8, r8, #16
   1cd88:	strd	r2, [r1]
   1cd8c:	add	lr, lr, #2
   1cd90:	strd	r4, [ip]
   1cd94:	mov	r2, r9
   1cd98:	bne	1ccec <__gcov_sort_n_vals@@Base+0x28>
   1cd9c:	add	sp, sp, #20
   1cda0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cda4:	ldr	r6, [sp, #12]
   1cda8:	ldr	r7, [sp, #8]
   1cdac:	add	r1, r6, r0, lsl #3
   1cdb0:	b	1cd7c <__gcov_sort_n_vals@@Base+0xb8>
   1cdb4:	push	{r4, r5, r6, lr}
   1cdb8:	ldr	r4, [pc, #76]	; 1ce0c <__gcov_sort_n_vals@@Base+0x148>
   1cdbc:	smull	r2, r3, r4, r0
   1cdc0:	asr	r4, r0, #31
   1cdc4:	rsb	r4, r4, r3, asr #1
   1cdc8:	add	r4, r4, r4, lsl #3
   1cdcc:	subs	r4, r0, r4
   1cdd0:	bne	1ce08 <__gcov_sort_n_vals@@Base+0x144>
   1cdd4:	cmp	r0, #0
   1cdd8:	mov	r6, r0
   1cddc:	ldr	r5, [r1]
   1cde0:	pople	{r4, r5, r6, pc}
   1cde4:	add	r5, r5, #8
   1cde8:	mov	r0, r5
   1cdec:	add	r4, r4, #9
   1cdf0:	mov	r1, #8
   1cdf4:	bl	1ccc4 <__gcov_sort_n_vals@@Base>
   1cdf8:	cmp	r6, r4
   1cdfc:	add	r5, r5, #72	; 0x48
   1ce00:	bgt	1cde8 <__gcov_sort_n_vals@@Base+0x124>
   1ce04:	pop	{r4, r5, r6, pc}
   1ce08:	bl	12128 <abort@plt>
   1ce0c:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1ce10:	ldr	r3, [r0, #48]	; 0x30
   1ce14:	cmp	r3, #0
   1ce18:	bxeq	lr
   1ce1c:	push	{r4, r5, r6, lr}
   1ce20:	ldr	lr, [r0, #52]	; 0x34
   1ce24:	cmp	lr, #0
   1ce28:	popeq	{r4, r5, r6, pc}
   1ce2c:	mov	r5, r0
   1ce30:	mov	r4, #0
   1ce34:	add	r6, r0, #12
   1ce38:	ldr	r1, [r5, #56]	; 0x38
   1ce3c:	mov	r2, r6
   1ce40:	mov	r3, #0
   1ce44:	ldr	r1, [r1, r4, lsl #2]
   1ce48:	add	r1, r1, #16
   1ce4c:	ldr	ip, [r2, #4]!
   1ce50:	cmp	ip, #0
   1ce54:	beq	1ce64 <__gcov_sort_n_vals@@Base+0x1a0>
   1ce58:	cmp	r3, #8
   1ce5c:	beq	1ce80 <__gcov_sort_n_vals@@Base+0x1bc>
   1ce60:	add	r1, r1, #8
   1ce64:	add	r3, r3, #1
   1ce68:	cmp	r3, #9
   1ce6c:	bne	1ce4c <__gcov_sort_n_vals@@Base+0x188>
   1ce70:	add	r4, r4, #1
   1ce74:	cmp	lr, r4
   1ce78:	bne	1ce38 <__gcov_sort_n_vals@@Base+0x174>
   1ce7c:	pop	{r4, r5, r6, pc}
   1ce80:	ldr	r0, [r1], #4
   1ce84:	bl	1cdb4 <__gcov_sort_n_vals@@Base+0xf0>
   1ce88:	ldr	lr, [r5, #52]	; 0x34
   1ce8c:	b	1ce70 <__gcov_sort_n_vals@@Base+0x1ac>
   1ce90:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ce94:	sub	sp, sp, #6080	; 0x17c0
   1ce98:	ldr	ip, [pc, #396]	; 1d02c <__gcov_sort_n_vals@@Base+0x368>
   1ce9c:	sub	sp, sp, #36	; 0x24
   1cea0:	add	ip, pc, ip
   1cea4:	add	r5, sp, #2016	; 0x7e0
   1cea8:	mov	r4, r0
   1ceac:	mov	r6, r1
   1ceb0:	mov	r1, #0
   1ceb4:	str	r1, [ip, #4]
   1ceb8:	str	r1, [ip]
   1cebc:	mov	r8, r2
   1cec0:	mov	r7, r3
   1cec4:	str	r1, [r5, #-2000]	; 0xfffff830
   1cec8:	str	r1, [r5, #-1996]	; 0xfffff834
   1cecc:	bl	1ce10 <__gcov_sort_n_vals@@Base+0x14c>
   1ced0:	mov	r1, r6
   1ced4:	ldr	r0, [r4, #12]
   1ced8:	bl	1c0e0 <next@@Base+0x1c60>
   1cedc:	cmn	r0, #1
   1cee0:	beq	1cf5c <__gcov_sort_n_vals@@Base+0x298>
   1cee4:	bl	1c3c8 <next@@Base+0x1f48>
   1cee8:	cmp	r0, #0
   1ceec:	beq	1cf68 <__gcov_sort_n_vals@@Base+0x2a4>
   1cef0:	ldr	r2, [pc, #312]	; 1d030 <__gcov_sort_n_vals@@Base+0x36c>
   1cef4:	ldr	r1, [r6]
   1cef8:	cmp	r0, r2
   1cefc:	beq	1cfc0 <__gcov_sort_n_vals@@Base+0x2fc>
   1cf00:	ldr	r0, [pc, #300]	; 1d034 <__gcov_sort_n_vals@@Base+0x370>
   1cf04:	add	r0, pc, r0
   1cf08:	bl	1b454 <next@@Base+0xfd4>
   1cf0c:	ldr	r5, [pc, #292]	; 1d038 <__gcov_sort_n_vals@@Base+0x374>
   1cf10:	add	r5, pc, r5
   1cf14:	ldr	r1, [r5, #4]
   1cf18:	cmp	r1, #0
   1cf1c:	beq	1cf3c <__gcov_sort_n_vals@@Base+0x278>
   1cf20:	mov	r2, #9
   1cf24:	mov	r0, r4
   1cf28:	bl	1b488 <next@@Base+0x1008>
   1cf2c:	cmp	r0, #0
   1cf30:	mov	r1, r0
   1cf34:	str	r0, [r5, #4]
   1cf38:	bne	1cf20 <__gcov_sort_n_vals@@Base+0x25c>
   1cf3c:	bl	1c1f8 <next@@Base+0x1d78>
   1cf40:	cmp	r0, #0
   1cf44:	beq	1cf5c <__gcov_sort_n_vals@@Base+0x298>
   1cf48:	blt	1d020 <__gcov_sort_n_vals@@Base+0x35c>
   1cf4c:	ldr	r0, [pc, #232]	; 1d03c <__gcov_sort_n_vals@@Base+0x378>
   1cf50:	add	r0, pc, r0
   1cf54:	ldr	r1, [r6]
   1cf58:	bl	1b454 <next@@Base+0xfd4>
   1cf5c:	add	sp, sp, #6080	; 0x17c0
   1cf60:	add	sp, sp, #36	; 0x24
   1cf64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cf68:	bl	1bf98 <next@@Base+0x1b18>
   1cf6c:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1cf70:	add	r9, sp, #24
   1cf74:	cmp	r1, #0
   1cf78:	beq	1d008 <__gcov_sort_n_vals@@Base+0x344>
   1cf7c:	add	r3, sp, #6144	; 0x1800
   1cf80:	str	r7, [sp, #4]
   1cf84:	ldr	r3, [r3]
   1cf88:	mov	r1, r8
   1cf8c:	str	r3, [sp]
   1cf90:	add	r2, r4, #16
   1cf94:	mov	r3, r9
   1cf98:	ldr	r0, [r6]
   1cf9c:	bl	1be44 <next@@Base+0x19c4>
   1cfa0:	cmn	r0, #1
   1cfa4:	beq	1cf0c <__gcov_sort_n_vals@@Base+0x248>
   1cfa8:	mov	r1, r9
   1cfac:	ldr	r3, [r5, #-2000]	; 0xfffff830
   1cfb0:	ldr	r2, [r5, #-1996]	; 0xfffff834
   1cfb4:	mov	r0, r4
   1cfb8:	bl	1ca98 <next@@Base+0x2618>
   1cfbc:	b	1cf0c <__gcov_sort_n_vals@@Base+0x248>
   1cfc0:	add	ip, sp, #20
   1cfc4:	add	r3, sp, #16
   1cfc8:	str	r7, [sp, #8]
   1cfcc:	stm	sp, {r3, ip}
   1cfd0:	add	r3, sp, #6144	; 0x1800
   1cfd4:	add	r9, sp, #24
   1cfd8:	ldr	r3, [r3]
   1cfdc:	mov	r0, r1
   1cfe0:	mov	r2, r9
   1cfe4:	add	r3, r3, #8
   1cfe8:	mov	r1, r4
   1cfec:	bl	1c72c <next@@Base+0x22ac>
   1cff0:	cmn	r0, #1
   1cff4:	beq	1cf0c <__gcov_sort_n_vals@@Base+0x248>
   1cff8:	bl	1bf98 <next@@Base+0x1b18>
   1cffc:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1d000:	cmp	r1, #0
   1d004:	bne	1cf7c <__gcov_sort_n_vals@@Base+0x2b8>
   1d008:	ldr	r2, [pc, #48]	; 1d040 <__gcov_sort_n_vals@@Base+0x37c>
   1d00c:	mov	r0, r9
   1d010:	bl	120b0 <memset@plt>
   1d014:	ldr	r3, [r5, #-1996]	; 0xfffff834
   1d018:	str	r3, [r5, #-2000]	; 0xfffff830
   1d01c:	b	1cf7c <__gcov_sort_n_vals@@Base+0x2b8>
   1d020:	ldr	r0, [pc, #28]	; 1d044 <__gcov_sort_n_vals@@Base+0x380>
   1d024:	add	r0, pc, r0
   1d028:	b	1cf54 <__gcov_sort_n_vals@@Base+0x290>
   1d02c:	andeq	r3, r1, r0, lsr #11
   1d030:	strbvs	r6, [r3, -r1, ror #8]!
   1d034:	andeq	r0, r0, r4, lsl #31
   1d038:	andeq	r3, r1, r0, lsr r5
   1d03c:	andeq	r0, r0, ip, lsl pc
   1d040:	andeq	r1, r0, r8, asr #15
   1d044:	andeq	r0, r0, r8, lsr #28
   1d048:	push	{r4, r5, r6, r7, r8, lr}
   1d04c:	sub	sp, sp, #6080	; 0x17c0
   1d050:	sub	sp, sp, #32
   1d054:	add	r6, sp, #24
   1d058:	add	r2, sp, #12
   1d05c:	mov	r8, r1
   1d060:	mov	r1, r6
   1d064:	mov	r4, r0
   1d068:	bl	1b6a0 <next@@Base+0x1220>
   1d06c:	add	r5, sp, #8
   1d070:	mov	r7, r0
   1d074:	mov	r0, r5
   1d078:	bl	1b834 <next@@Base+0x13b4>
   1d07c:	cmp	r4, #0
   1d080:	beq	1d0a8 <__gcov_sort_n_vals@@Base+0x3e4>
   1d084:	mov	r0, r4
   1d088:	str	r6, [sp]
   1d08c:	mov	r3, r7
   1d090:	mov	r2, r8
   1d094:	mov	r1, r5
   1d098:	bl	1ce90 <__gcov_sort_n_vals@@Base+0x1cc>
   1d09c:	ldr	r4, [r4, #4]
   1d0a0:	cmp	r4, #0
   1d0a4:	bne	1d084 <__gcov_sort_n_vals@@Base+0x3c0>
   1d0a8:	ldr	r0, [sp, #8]
   1d0ac:	bl	11fe4 <free@plt>
   1d0b0:	add	sp, sp, #6080	; 0x17c0
   1d0b4:	add	sp, sp, #32
   1d0b8:	pop	{r4, r5, r6, r7, r8, pc}
   1d0bc:	ldrb	r1, [r0, #4]
   1d0c0:	tst	r1, #1
   1d0c4:	bxne	lr
   1d0c8:	push	{r4, lr}
   1d0cc:	lsr	r1, r1, #1
   1d0d0:	mov	r4, r0
   1d0d4:	and	r1, r1, #1
   1d0d8:	ldr	r0, [r0]
   1d0dc:	bl	1d048 <__gcov_sort_n_vals@@Base+0x384>
   1d0e0:	ldrb	r3, [r4, #4]
   1d0e4:	bic	r3, r3, #3
   1d0e8:	orr	r3, r3, #3
   1d0ec:	strb	r3, [r4, #4]
   1d0f0:	pop	{r4, pc}
   1d0f4:	push	{r4, r5, r6, lr}
   1d0f8:	ldr	r4, [pc, #84]	; 1d154 <__gcov_sort_n_vals@@Base+0x490>
   1d0fc:	ldr	r5, [pc, #84]	; 1d158 <__gcov_sort_n_vals@@Base+0x494>
   1d100:	add	r4, pc, r4
   1d104:	mov	r0, r4
   1d108:	bl	1d0bc <__gcov_sort_n_vals@@Base+0x3f8>
   1d10c:	ldr	r3, [r4, #8]
   1d110:	add	r5, pc, r5
   1d114:	cmp	r3, #0
   1d118:	ldrne	r2, [r4, #12]
   1d11c:	strne	r2, [r3, #12]
   1d120:	ldr	r2, [pc, #52]	; 1d15c <__gcov_sort_n_vals@@Base+0x498>
   1d124:	add	r2, pc, r2
   1d128:	ldr	r2, [r2, #12]
   1d12c:	cmp	r2, #0
   1d130:	strne	r3, [r2, #8]
   1d134:	beq	1d140 <__gcov_sort_n_vals@@Base+0x47c>
   1d138:	pop	{r4, r5, r6, lr}
   1d13c:	b	1b1fc <next@@Base+0xd7c>
   1d140:	ldr	r2, [pc, #24]	; 1d160 <__gcov_sort_n_vals@@Base+0x49c>
   1d144:	ldr	r2, [r5, r2]
   1d148:	pop	{r4, r5, r6, lr}
   1d14c:	str	r3, [r2, #4]
   1d150:	b	1b1fc <next@@Base+0xd7c>
   1d154:	andeq	r3, r1, r0, lsl #10
   1d158:	andeq	r0, r1, r8, ror #29
   1d15c:	ldrdeq	r3, [r1], -ip
   1d160:	andeq	r0, r0, r0, lsr #1
   1d164:	ldr	r1, [r0]
   1d168:	push	{r4, r5, r6, lr}
   1d16c:	cmp	r1, #0
   1d170:	ldr	r5, [pc, #156]	; 1d214 <__gcov_sort_n_vals@@Base+0x550>
   1d174:	add	r5, pc, r5
   1d178:	popeq	{r4, r5, r6, pc}
   1d17c:	ldr	r3, [r0, #52]	; 0x34
   1d180:	cmp	r3, #0
   1d184:	popeq	{r4, r5, r6, pc}
   1d188:	mov	r4, r0
   1d18c:	mov	r2, #0
   1d190:	add	r0, r0, #12
   1d194:	bl	1bde4 <next@@Base+0x1964>
   1d198:	cmp	r0, #0
   1d19c:	popeq	{r4, r5, r6, pc}
   1d1a0:	ldr	r6, [pc, #112]	; 1d218 <__gcov_sort_n_vals@@Base+0x554>
   1d1a4:	add	r6, pc, r6
   1d1a8:	ldr	r2, [r6]
   1d1ac:	cmp	r2, #0
   1d1b0:	beq	1d1c8 <__gcov_sort_n_vals@@Base+0x504>
   1d1b4:	ldr	r3, [pc, #96]	; 1d21c <__gcov_sort_n_vals@@Base+0x558>
   1d1b8:	str	r2, [r4, #4]
   1d1bc:	add	r3, pc, r3
   1d1c0:	str	r4, [r3]
   1d1c4:	pop	{r4, r5, r6, pc}
   1d1c8:	ldr	r3, [pc, #80]	; 1d220 <__gcov_sort_n_vals@@Base+0x55c>
   1d1cc:	ldr	r2, [pc, #80]	; 1d224 <__gcov_sort_n_vals@@Base+0x560>
   1d1d0:	mov	r0, #12
   1d1d4:	ldr	r5, [r5, r3]
   1d1d8:	add	r2, pc, r2
   1d1dc:	ldr	r1, [r5]
   1d1e0:	bl	1bde4 <next@@Base+0x1964>
   1d1e4:	cmp	r0, #0
   1d1e8:	ldreq	r2, [r6]
   1d1ec:	beq	1d1b4 <__gcov_sort_n_vals@@Base+0x4f0>
   1d1f0:	ldr	r3, [r5, #4]
   1d1f4:	cmp	r3, #0
   1d1f8:	str	r3, [r6, #8]
   1d1fc:	strne	r6, [r3, #12]
   1d200:	ldr	r3, [pc, #32]	; 1d228 <__gcov_sort_n_vals@@Base+0x564>
   1d204:	add	r3, pc, r3
   1d208:	str	r3, [r5, #4]
   1d20c:	ldr	r2, [r3]
   1d210:	b	1d1b4 <__gcov_sort_n_vals@@Base+0x4f0>
   1d214:	andeq	r0, r1, r4, lsl #29
   1d218:	andeq	r3, r1, ip, asr r4
   1d21c:	andeq	r3, r1, r4, asr #8
   1d220:	andeq	r0, r0, r0, lsr #1
   1d224:	ldrdeq	r0, [r0], -r4
   1d228:	strdeq	r3, [r1], -ip
   1d22c:	cmp	r3, #0
   1d230:	cmpeq	r2, #0
   1d234:	bne	1d258 <__gcov_sort_n_vals@@Base+0x594>
   1d238:	cmp	r1, #0
   1d23c:	movlt	r1, #-2147483648	; 0x80000000
   1d240:	movlt	r0, #0
   1d244:	blt	1d254 <__gcov_sort_n_vals@@Base+0x590>
   1d248:	cmpeq	r0, #0
   1d24c:	mvnne	r1, #-2147483648	; 0x80000000
   1d250:	mvnne	r0, #0
   1d254:	b	1d300 <__gcov_sort_n_vals@@Base+0x63c>
   1d258:	sub	sp, sp, #8
   1d25c:	push	{sp, lr}
   1d260:	cmp	r1, #0
   1d264:	blt	1d284 <__gcov_sort_n_vals@@Base+0x5c0>
   1d268:	cmp	r3, #0
   1d26c:	blt	1d2b8 <__gcov_sort_n_vals@@Base+0x5f4>
   1d270:	bl	1d354 <__gcov_sort_n_vals@@Base+0x690>
   1d274:	ldr	lr, [sp, #4]
   1d278:	add	sp, sp, #8
   1d27c:	pop	{r2, r3}
   1d280:	bx	lr
   1d284:	rsbs	r0, r0, #0
   1d288:	sbc	r1, r1, r1, lsl #1
   1d28c:	cmp	r3, #0
   1d290:	blt	1d2dc <__gcov_sort_n_vals@@Base+0x618>
   1d294:	bl	1d354 <__gcov_sort_n_vals@@Base+0x690>
   1d298:	ldr	lr, [sp, #4]
   1d29c:	add	sp, sp, #8
   1d2a0:	pop	{r2, r3}
   1d2a4:	rsbs	r0, r0, #0
   1d2a8:	sbc	r1, r1, r1, lsl #1
   1d2ac:	rsbs	r2, r2, #0
   1d2b0:	sbc	r3, r3, r3, lsl #1
   1d2b4:	bx	lr
   1d2b8:	rsbs	r2, r2, #0
   1d2bc:	sbc	r3, r3, r3, lsl #1
   1d2c0:	bl	1d354 <__gcov_sort_n_vals@@Base+0x690>
   1d2c4:	ldr	lr, [sp, #4]
   1d2c8:	add	sp, sp, #8
   1d2cc:	pop	{r2, r3}
   1d2d0:	rsbs	r0, r0, #0
   1d2d4:	sbc	r1, r1, r1, lsl #1
   1d2d8:	bx	lr
   1d2dc:	rsbs	r2, r2, #0
   1d2e0:	sbc	r3, r3, r3, lsl #1
   1d2e4:	bl	1d354 <__gcov_sort_n_vals@@Base+0x690>
   1d2e8:	ldr	lr, [sp, #4]
   1d2ec:	add	sp, sp, #8
   1d2f0:	pop	{r2, r3}
   1d2f4:	rsbs	r2, r2, #0
   1d2f8:	sbc	r3, r3, r3, lsl #1
   1d2fc:	bx	lr
   1d300:	push	{r1, lr}
   1d304:	mov	r0, #8
   1d308:	bl	11fa8 <raise@plt>
   1d30c:	pop	{r1, pc}
   1d310:	ldr	r3, [pc, #48]	; 1d348 <__gcov_sort_n_vals@@Base+0x684>
   1d314:	ldr	r2, [pc, #48]	; 1d34c <__gcov_sort_n_vals@@Base+0x688>
   1d318:	and	r3, r3, r0, lsr #1
   1d31c:	sub	r0, r0, r3
   1d320:	and	r3, r0, r2
   1d324:	and	r0, r2, r0, lsr #2
   1d328:	add	r3, r3, r0
   1d32c:	ldr	r0, [pc, #28]	; 1d350 <__gcov_sort_n_vals@@Base+0x68c>
   1d330:	add	r3, r3, r3, lsr #4
   1d334:	and	r0, r0, r3
   1d338:	add	r0, r0, r0, lsl #8
   1d33c:	add	r0, r0, r0, lsl #16
   1d340:	lsr	r0, r0, #24
   1d344:	bx	lr
   1d348:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   1d34c:	teqcc	r3, #-872415232	; 0xcc000000
   1d350:	svceq	0x000f0f0f
   1d354:	cmp	r1, r3
   1d358:	cmpeq	r0, r2
   1d35c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d360:	mov	r4, r0
   1d364:	movcc	r0, #0
   1d368:	mov	r5, r1
   1d36c:	ldr	lr, [sp, #36]	; 0x24
   1d370:	movcc	r1, r0
   1d374:	bcc	1d470 <__gcov_sort_n_vals@@Base+0x7ac>
   1d378:	cmp	r3, #0
   1d37c:	clzeq	ip, r2
   1d380:	clzne	ip, r3
   1d384:	addeq	ip, ip, #32
   1d388:	cmp	r5, #0
   1d38c:	clzeq	r1, r4
   1d390:	addeq	r1, r1, #32
   1d394:	clzne	r1, r5
   1d398:	sub	ip, ip, r1
   1d39c:	sub	sl, ip, #32
   1d3a0:	lsl	r9, r3, ip
   1d3a4:	rsb	fp, ip, #32
   1d3a8:	orr	r9, r9, r2, lsl sl
   1d3ac:	orr	r9, r9, r2, lsr fp
   1d3b0:	lsl	r8, r2, ip
   1d3b4:	cmp	r5, r9
   1d3b8:	cmpeq	r4, r8
   1d3bc:	movcc	r0, #0
   1d3c0:	movcc	r1, r0
   1d3c4:	bcc	1d3e0 <__gcov_sort_n_vals@@Base+0x71c>
   1d3c8:	mov	r0, #1
   1d3cc:	subs	r4, r4, r8
   1d3d0:	lsl	r1, r0, sl
   1d3d4:	orr	r1, r1, r0, lsr fp
   1d3d8:	lsl	r0, r0, ip
   1d3dc:	sbc	r5, r5, r9
   1d3e0:	cmp	ip, #0
   1d3e4:	beq	1d470 <__gcov_sort_n_vals@@Base+0x7ac>
   1d3e8:	lsr	r6, r8, #1
   1d3ec:	orr	r6, r6, r9, lsl #31
   1d3f0:	lsr	r7, r9, #1
   1d3f4:	mov	r2, ip
   1d3f8:	b	1d41c <__gcov_sort_n_vals@@Base+0x758>
   1d3fc:	subs	r3, r4, r6
   1d400:	sbc	r8, r5, r7
   1d404:	adds	r3, r3, r3
   1d408:	adc	r8, r8, r8
   1d40c:	adds	r4, r3, #1
   1d410:	adc	r5, r8, #0
   1d414:	subs	r2, r2, #1
   1d418:	beq	1d438 <__gcov_sort_n_vals@@Base+0x774>
   1d41c:	cmp	r5, r7
   1d420:	cmpeq	r4, r6
   1d424:	bcs	1d3fc <__gcov_sort_n_vals@@Base+0x738>
   1d428:	adds	r4, r4, r4
   1d42c:	adc	r5, r5, r5
   1d430:	subs	r2, r2, #1
   1d434:	bne	1d41c <__gcov_sort_n_vals@@Base+0x758>
   1d438:	lsr	r3, r4, ip
   1d43c:	orr	r3, r3, r5, lsl fp
   1d440:	lsr	r2, r5, ip
   1d444:	orr	r3, r3, r5, lsr sl
   1d448:	adds	r0, r0, r4
   1d44c:	mov	r4, r3
   1d450:	lsl	r3, r2, ip
   1d454:	orr	r3, r3, r4, lsl sl
   1d458:	lsl	ip, r4, ip
   1d45c:	orr	r3, r3, r4, lsr fp
   1d460:	adc	r1, r1, r5
   1d464:	subs	r0, r0, ip
   1d468:	mov	r5, r2
   1d46c:	sbc	r1, r1, r3
   1d470:	cmp	lr, #0
   1d474:	strdne	r4, [lr]
   1d478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d47c <__libc_csu_init@@Base>:
   1d47c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d480:	mov	r7, r0
   1d484:	ldr	r6, [pc, #72]	; 1d4d4 <__libc_csu_init@@Base+0x58>
   1d488:	ldr	r5, [pc, #72]	; 1d4d8 <__libc_csu_init@@Base+0x5c>
   1d48c:	add	r6, pc, r6
   1d490:	add	r5, pc, r5
   1d494:	sub	r6, r6, r5
   1d498:	mov	r8, r1
   1d49c:	mov	r9, r2
   1d4a0:	bl	11f7c <fdopen@plt-0x20>
   1d4a4:	asrs	r6, r6, #2
   1d4a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d4ac:	mov	r4, #0
   1d4b0:	add	r4, r4, #1
   1d4b4:	ldr	r3, [r5], #4
   1d4b8:	mov	r2, r9
   1d4bc:	mov	r1, r8
   1d4c0:	mov	r0, r7
   1d4c4:	blx	r3
   1d4c8:	cmp	r6, r4
   1d4cc:	bne	1d4b0 <__libc_csu_init@@Base+0x34>
   1d4d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d4d4:	andeq	r0, r1, r0, ror sl
   1d4d8:	andeq	r0, r1, r8, asr sl

0001d4dc <__libc_csu_fini@@Base>:
   1d4dc:	bx	lr

Disassembly of section .fini:

0001d4e0 <.fini>:
   1d4e0:	push	{r3, lr}
   1d4e4:	pop	{r3, pc}
