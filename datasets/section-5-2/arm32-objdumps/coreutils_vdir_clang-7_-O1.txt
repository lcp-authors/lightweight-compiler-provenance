
../repos/coreutils/src/vdir:     file format elf32-littlearm


Disassembly of section .init:

00011c58 <.init>:
   11c58:	push	{r3, lr}
   11c5c:	bl	12204 <putc_unlocked@plt+0x4c>
   11c60:	pop	{r3, pc}

Disassembly of section .plt:

00011c64 <calloc@plt-0x14>:
   11c64:	push	{lr}		; (str lr, [sp, #-4]!)
   11c68:	ldr	lr, [pc, #4]	; 11c74 <calloc@plt-0x4>
   11c6c:	add	lr, pc, lr
   11c70:	ldr	pc, [lr, #8]!
   11c74:	andeq	r7, r2, ip, lsl #7

00011c78 <calloc@plt>:
   11c78:	add	ip, pc, #0, 12
   11c7c:	add	ip, ip, #159744	; 0x27000
   11c80:	ldr	pc, [ip, #908]!	; 0x38c

00011c84 <fputs_unlocked@plt>:
   11c84:	add	ip, pc, #0, 12
   11c88:	add	ip, ip, #159744	; 0x27000
   11c8c:	ldr	pc, [ip, #900]!	; 0x384

00011c90 <cap_to_text@plt>:
   11c90:	add	ip, pc, #0, 12
   11c94:	add	ip, ip, #159744	; 0x27000
   11c98:	ldr	pc, [ip, #892]!	; 0x37c

00011c9c <gnu_dev_major@plt>:
   11c9c:	add	ip, pc, #0, 12
   11ca0:	add	ip, ip, #159744	; 0x27000
   11ca4:	ldr	pc, [ip, #884]!	; 0x374

00011ca8 <raise@plt>:
   11ca8:	add	ip, pc, #0, 12
   11cac:	add	ip, ip, #159744	; 0x27000
   11cb0:	ldr	pc, [ip, #876]!	; 0x36c

00011cb4 <gmtime_r@plt>:
   11cb4:	add	ip, pc, #0, 12
   11cb8:	add	ip, ip, #159744	; 0x27000
   11cbc:	ldr	pc, [ip, #868]!	; 0x364

00011cc0 <getpwnam@plt>:
   11cc0:	add	ip, pc, #0, 12
   11cc4:	add	ip, ip, #159744	; 0x27000
   11cc8:	ldr	pc, [ip, #860]!	; 0x35c

00011ccc <strcmp@plt>:
   11ccc:	add	ip, pc, #0, 12
   11cd0:	add	ip, ip, #159744	; 0x27000
   11cd4:	ldr	pc, [ip, #852]!	; 0x354

00011cd8 <getpwuid@plt>:
   11cd8:	add	ip, pc, #0, 12
   11cdc:	add	ip, ip, #159744	; 0x27000
   11ce0:	ldr	pc, [ip, #844]!	; 0x34c

00011ce4 <gnu_dev_makedev@plt>:
   11ce4:	add	ip, pc, #0, 12
   11ce8:	add	ip, ip, #159744	; 0x27000
   11cec:	ldr	pc, [ip, #836]!	; 0x344

00011cf0 <gnu_dev_minor@plt>:
   11cf0:	add	ip, pc, #0, 12
   11cf4:	add	ip, ip, #159744	; 0x27000
   11cf8:	ldr	pc, [ip, #828]!	; 0x33c

00011cfc <mktime@plt>:
   11cfc:	add	ip, pc, #0, 12
   11d00:	add	ip, ip, #159744	; 0x27000
   11d04:	ldr	pc, [ip, #820]!	; 0x334

00011d08 <fflush@plt>:
   11d08:	add	ip, pc, #0, 12
   11d0c:	add	ip, ip, #159744	; 0x27000
   11d10:	ldr	pc, [ip, #812]!	; 0x32c

00011d14 <wcwidth@plt>:
   11d14:	add	ip, pc, #0, 12
   11d18:	add	ip, ip, #159744	; 0x27000
   11d1c:	ldr	pc, [ip, #804]!	; 0x324

00011d20 <sigprocmask@plt>:
   11d20:	add	ip, pc, #0, 12
   11d24:	add	ip, ip, #159744	; 0x27000
   11d28:	ldr	pc, [ip, #796]!	; 0x31c

00011d2c <_setjmp@plt>:
   11d2c:	add	ip, pc, #0, 12
   11d30:	add	ip, ip, #159744	; 0x27000
   11d34:	ldr	pc, [ip, #788]!	; 0x314

00011d38 <memmove@plt>:
   11d38:	add	ip, pc, #0, 12
   11d3c:	add	ip, ip, #159744	; 0x27000
   11d40:	ldr	pc, [ip, #780]!	; 0x30c

00011d44 <free@plt>:
   11d44:	add	ip, pc, #0, 12
   11d48:	add	ip, ip, #159744	; 0x27000
   11d4c:	ldr	pc, [ip, #772]!	; 0x304

00011d50 <faccessat@plt>:
   11d50:	add	ip, pc, #0, 12
   11d54:	add	ip, ip, #159744	; 0x27000
   11d58:	ldr	pc, [ip, #764]!	; 0x2fc

00011d5c <clock_gettime@plt>:
   11d5c:	add	ip, pc, #0, 12
   11d60:	add	ip, ip, #159744	; 0x27000
   11d64:	ldr	pc, [ip, #756]!	; 0x2f4

00011d68 <_exit@plt>:
   11d68:	add	ip, pc, #0, 12
   11d6c:	add	ip, ip, #159744	; 0x27000
   11d70:	ldr	pc, [ip, #748]!	; 0x2ec

00011d74 <memcpy@plt>:
   11d74:	add	ip, pc, #0, 12
   11d78:	add	ip, ip, #159744	; 0x27000
   11d7c:	ldr	pc, [ip, #740]!	; 0x2e4

00011d80 <mbsinit@plt>:
   11d80:	add	ip, pc, #0, 12
   11d84:	add	ip, ip, #159744	; 0x27000
   11d88:	ldr	pc, [ip, #732]!	; 0x2dc

00011d8c <signal@plt>:
   11d8c:	add	ip, pc, #0, 12
   11d90:	add	ip, ip, #159744	; 0x27000
   11d94:	ldr	pc, [ip, #724]!	; 0x2d4

00011d98 <fwrite_unlocked@plt>:
   11d98:	add	ip, pc, #0, 12
   11d9c:	add	ip, ip, #159744	; 0x27000
   11da0:	ldr	pc, [ip, #716]!	; 0x2cc

00011da4 <memcmp@plt>:
   11da4:	add	ip, pc, #0, 12
   11da8:	add	ip, ip, #159744	; 0x27000
   11dac:	ldr	pc, [ip, #708]!	; 0x2c4

00011db0 <stpcpy@plt>:
   11db0:	add	ip, pc, #0, 12
   11db4:	add	ip, ip, #159744	; 0x27000
   11db8:	ldr	pc, [ip, #700]!	; 0x2bc

00011dbc <dcgettext@plt>:
   11dbc:	add	ip, pc, #0, 12
   11dc0:	add	ip, ip, #159744	; 0x27000
   11dc4:	ldr	pc, [ip, #692]!	; 0x2b4

00011dc8 <realloc@plt>:
   11dc8:	add	ip, pc, #0, 12
   11dcc:	add	ip, ip, #159744	; 0x27000
   11dd0:	ldr	pc, [ip, #684]!	; 0x2ac

00011dd4 <sigismember@plt>:
   11dd4:	add	ip, pc, #0, 12
   11dd8:	add	ip, ip, #159744	; 0x27000
   11ddc:	ldr	pc, [ip, #676]!	; 0x2a4

00011de0 <fgetfilecon@plt>:
   11de0:	add	ip, pc, #0, 12
   11de4:	add	ip, ip, #159744	; 0x27000
   11de8:	ldr	pc, [ip, #668]!	; 0x29c

00011dec <localtime_r@plt>:
   11dec:	add	ip, pc, #0, 12
   11df0:	add	ip, ip, #159744	; 0x27000
   11df4:	ldr	pc, [ip, #660]!	; 0x294

00011df8 <textdomain@plt>:
   11df8:	add	ip, pc, #0, 12
   11dfc:	add	ip, ip, #159744	; 0x27000
   11e00:	ldr	pc, [ip, #652]!	; 0x28c

00011e04 <iswcntrl@plt>:
   11e04:	add	ip, pc, #0, 12
   11e08:	add	ip, ip, #159744	; 0x27000
   11e0c:	ldr	pc, [ip, #644]!	; 0x284

00011e10 <rawmemchr@plt>:
   11e10:	add	ip, pc, #0, 12
   11e14:	add	ip, ip, #159744	; 0x27000
   11e18:	ldr	pc, [ip, #636]!	; 0x27c

00011e1c <fflush_unlocked@plt>:
   11e1c:	add	ip, pc, #0, 12
   11e20:	add	ip, ip, #159744	; 0x27000
   11e24:	ldr	pc, [ip, #628]!	; 0x274

00011e28 <iswprint@plt>:
   11e28:	add	ip, pc, #0, 12
   11e2c:	add	ip, ip, #159744	; 0x27000
   11e30:	ldr	pc, [ip, #620]!	; 0x26c

00011e34 <tzset@plt>:
   11e34:	add	ip, pc, #0, 12
   11e38:	add	ip, ip, #159744	; 0x27000
   11e3c:	ldr	pc, [ip, #612]!	; 0x264

00011e40 <readlink@plt>:
   11e40:	add	ip, pc, #0, 12
   11e44:	add	ip, ip, #159744	; 0x27000
   11e48:	ldr	pc, [ip, #604]!	; 0x25c

00011e4c <sigaction@plt>:
   11e4c:	add	ip, pc, #0, 12
   11e50:	add	ip, ip, #159744	; 0x27000
   11e54:	ldr	pc, [ip, #596]!	; 0x254

00011e58 <fwrite@plt>:
   11e58:	add	ip, pc, #0, 12
   11e5c:	add	ip, ip, #159744	; 0x27000
   11e60:	ldr	pc, [ip, #588]!	; 0x24c

00011e64 <ioctl@plt>:
   11e64:	add	ip, pc, #0, 12
   11e68:	add	ip, ip, #159744	; 0x27000
   11e6c:	ldr	pc, [ip, #580]!	; 0x244

00011e70 <lseek64@plt>:
   11e70:	add	ip, pc, #0, 12
   11e74:	add	ip, ip, #159744	; 0x27000
   11e78:	ldr	pc, [ip, #572]!	; 0x23c

00011e7c <__ctype_get_mb_cur_max@plt>:
   11e7c:	add	ip, pc, #0, 12
   11e80:	add	ip, ip, #159744	; 0x27000
   11e84:	ldr	pc, [ip, #564]!	; 0x234

00011e88 <strcpy@plt>:
   11e88:	add	ip, pc, #0, 12
   11e8c:	add	ip, ip, #159744	; 0x27000
   11e90:	ldr	pc, [ip, #556]!	; 0x22c

00011e94 <__fpending@plt>:
   11e94:	add	ip, pc, #0, 12
   11e98:	add	ip, ip, #159744	; 0x27000
   11e9c:	ldr	pc, [ip, #548]!	; 0x224

00011ea0 <ferror_unlocked@plt>:
   11ea0:	add	ip, pc, #0, 12
   11ea4:	add	ip, ip, #159744	; 0x27000
   11ea8:	ldr	pc, [ip, #540]!	; 0x21c

00011eac <mbrtowc@plt>:
   11eac:	add	ip, pc, #0, 12
   11eb0:	add	ip, ip, #159744	; 0x27000
   11eb4:	ldr	pc, [ip, #532]!	; 0x214

00011eb8 <wcstombs@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #159744	; 0x27000
   11ec0:	ldr	pc, [ip, #524]!	; 0x20c

00011ec4 <error@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #159744	; 0x27000
   11ecc:	ldr	pc, [ip, #516]!	; 0x204

00011ed0 <gethostname@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #159744	; 0x27000
   11ed8:	ldr	pc, [ip, #508]!	; 0x1fc

00011edc <opendir@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #159744	; 0x27000
   11ee4:	ldr	pc, [ip, #500]!	; 0x1f4

00011ee8 <fnmatch@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #159744	; 0x27000
   11ef0:	ldr	pc, [ip, #492]!	; 0x1ec

00011ef4 <strcoll@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #159744	; 0x27000
   11efc:	ldr	pc, [ip, #484]!	; 0x1e4

00011f00 <getenv@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #159744	; 0x27000
   11f08:	ldr	pc, [ip, #476]!	; 0x1dc

00011f0c <lgetfilecon@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #159744	; 0x27000
   11f14:	ldr	pc, [ip, #468]!	; 0x1d4

00011f18 <malloc@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #159744	; 0x27000
   11f20:	ldr	pc, [ip, #460]!	; 0x1cc

00011f24 <sigaddset@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #159744	; 0x27000
   11f2c:	ldr	pc, [ip, #452]!	; 0x1c4

00011f30 <__libc_start_main@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #159744	; 0x27000
   11f38:	ldr	pc, [ip, #444]!	; 0x1bc

00011f3c <strftime@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #159744	; 0x27000
   11f44:	ldr	pc, [ip, #436]!	; 0x1b4

00011f48 <__freading@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #159744	; 0x27000
   11f50:	ldr	pc, [ip, #428]!	; 0x1ac

00011f54 <__ctype_tolower_loc@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #159744	; 0x27000
   11f5c:	ldr	pc, [ip, #420]!	; 0x1a4

00011f60 <__ctype_toupper_loc@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #159744	; 0x27000
   11f68:	ldr	pc, [ip, #412]!	; 0x19c

00011f6c <__gmon_start__@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #159744	; 0x27000
   11f74:	ldr	pc, [ip, #404]!	; 0x194

00011f78 <getopt_long@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #159744	; 0x27000
   11f80:	ldr	pc, [ip, #396]!	; 0x18c

00011f84 <__ctype_b_loc@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #159744	; 0x27000
   11f8c:	ldr	pc, [ip, #388]!	; 0x184

00011f90 <getcwd@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #159744	; 0x27000
   11f98:	ldr	pc, [ip, #380]!	; 0x17c

00011f9c <exit@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #159744	; 0x27000
   11fa4:	ldr	pc, [ip, #372]!	; 0x174

00011fa8 <getfilecon@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #159744	; 0x27000
   11fb0:	ldr	pc, [ip, #364]!	; 0x16c

00011fb4 <tcgetpgrp@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #159744	; 0x27000
   11fbc:	ldr	pc, [ip, #356]!	; 0x164

00011fc0 <strlen@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #159744	; 0x27000
   11fc8:	ldr	pc, [ip, #348]!	; 0x15c

00011fcc <strchr@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #159744	; 0x27000
   11fd4:	ldr	pc, [ip, #340]!	; 0x154

00011fd8 <setenv@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #159744	; 0x27000
   11fe0:	ldr	pc, [ip, #332]!	; 0x14c

00011fe4 <__errno_location@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #159744	; 0x27000
   11fec:	ldr	pc, [ip, #324]!	; 0x144

00011ff0 <__sprintf_chk@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #159744	; 0x27000
   11ff8:	ldr	pc, [ip, #316]!	; 0x13c

00011ffc <__cxa_atexit@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #159744	; 0x27000
   12004:	ldr	pc, [ip, #308]!	; 0x134

00012008 <memset@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #159744	; 0x27000
   12010:	ldr	pc, [ip, #300]!	; 0x12c

00012014 <__printf_chk@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #159744	; 0x27000
   1201c:	ldr	pc, [ip, #292]!	; 0x124

00012020 <stpncpy@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #159744	; 0x27000
   12028:	ldr	pc, [ip, #284]!	; 0x11c

0001202c <fileno@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #159744	; 0x27000
   12034:	ldr	pc, [ip, #276]!	; 0x114

00012038 <strtoumax@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #159744	; 0x27000
   12040:	ldr	pc, [ip, #268]!	; 0x10c

00012044 <__fprintf_chk@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #159744	; 0x27000
   1204c:	ldr	pc, [ip, #260]!	; 0x104

00012050 <fclose@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #159744	; 0x27000
   12058:	ldr	pc, [ip, #252]!	; 0xfc

0001205c <fseeko64@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #159744	; 0x27000
   12064:	ldr	pc, [ip, #244]!	; 0xf4

00012068 <statx@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #159744	; 0x27000
   12070:	ldr	pc, [ip, #236]!	; 0xec

00012074 <setlocale@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #159744	; 0x27000
   1207c:	ldr	pc, [ip, #228]!	; 0xe4

00012080 <sigemptyset@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #159744	; 0x27000
   12088:	ldr	pc, [ip, #220]!	; 0xdc

0001208c <wcswidth@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #159744	; 0x27000
   12094:	ldr	pc, [ip, #212]!	; 0xd4

00012098 <strrchr@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #159744	; 0x27000
   120a0:	ldr	pc, [ip, #204]!	; 0xcc

000120a4 <cap_get_file@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #159744	; 0x27000
   120ac:	ldr	pc, [ip, #196]!	; 0xc4

000120b0 <nl_langinfo@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #159744	; 0x27000
   120b8:	ldr	pc, [ip, #188]!	; 0xbc

000120bc <localeconv@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #159744	; 0x27000
   120c4:	ldr	pc, [ip, #180]!	; 0xb4

000120c8 <mbstowcs@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #159744	; 0x27000
   120d0:	ldr	pc, [ip, #172]!	; 0xac

000120d4 <readdir64@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #159744	; 0x27000
   120dc:	ldr	pc, [ip, #164]!	; 0xa4

000120e0 <timegm@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #159744	; 0x27000
   120e8:	ldr	pc, [ip, #156]!	; 0x9c

000120ec <cap_free@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #159744	; 0x27000
   120f4:	ldr	pc, [ip, #148]!	; 0x94

000120f8 <dirfd@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #159744	; 0x27000
   12100:	ldr	pc, [ip, #140]!	; 0x8c

00012104 <freecon@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #159744	; 0x27000
   1210c:	ldr	pc, [ip, #132]!	; 0x84

00012110 <bindtextdomain@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #159744	; 0x27000
   12118:	ldr	pc, [ip, #124]!	; 0x7c

0001211c <__xstat64@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #159744	; 0x27000
   12124:	ldr	pc, [ip, #116]!	; 0x74

00012128 <isatty@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #159744	; 0x27000
   12130:	ldr	pc, [ip, #108]!	; 0x6c

00012134 <unsetenv@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #159744	; 0x27000
   1213c:	ldr	pc, [ip, #100]!	; 0x64

00012140 <strncmp@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #159744	; 0x27000
   12148:	ldr	pc, [ip, #92]!	; 0x5c

0001214c <abort@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #159744	; 0x27000
   12154:	ldr	pc, [ip, #84]!	; 0x54

00012158 <closedir@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #159744	; 0x27000
   12160:	ldr	pc, [ip, #76]!	; 0x4c

00012164 <getgrgid@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #159744	; 0x27000
   1216c:	ldr	pc, [ip, #68]!	; 0x44

00012170 <getgrnam@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #159744	; 0x27000
   12178:	ldr	pc, [ip, #60]!	; 0x3c

0001217c <__snprintf_chk@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #159744	; 0x27000
   12184:	ldr	pc, [ip, #52]!	; 0x34

00012188 <putchar_unlocked@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #159744	; 0x27000
   12190:	ldr	pc, [ip, #44]!	; 0x2c

00012194 <strspn@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #159744	; 0x27000
   1219c:	ldr	pc, [ip, #36]!	; 0x24

000121a0 <__mempcpy_chk@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #159744	; 0x27000
   121a8:	ldr	pc, [ip, #28]!

000121ac <__assert_fail@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #159744	; 0x27000
   121b4:	ldr	pc, [ip, #20]!

000121b8 <putc_unlocked@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #159744	; 0x27000
   121c0:	ldr	pc, [ip, #12]!

Disassembly of section .text:

000121c8 <_obstack_begin@@Base-0xdf0c>:
   121c8:	mov	fp, #0
   121cc:	mov	lr, #0
   121d0:	pop	{r1}		; (ldr r1, [sp], #4)
   121d4:	mov	r2, sp
   121d8:	push	{r2}		; (str r2, [sp, #-4]!)
   121dc:	push	{r0}		; (str r0, [sp, #-4]!)
   121e0:	ldr	ip, [pc, #16]	; 121f8 <putc_unlocked@plt+0x40>
   121e4:	push	{ip}		; (str ip, [sp, #-4]!)
   121e8:	ldr	r0, [pc, #12]	; 121fc <putc_unlocked@plt+0x44>
   121ec:	ldr	r3, [pc, #12]	; 12200 <putc_unlocked@plt+0x48>
   121f0:	bl	11f30 <__libc_start_main@plt>
   121f4:	bl	1214c <abort@plt>
   121f8:	andeq	r4, r2, r8, lsl r6
   121fc:			; <UNDEFINED> instruction: 0x000122b8
   12200:			; <UNDEFINED> instruction: 0x000245b8
   12204:	ldr	r3, [pc, #20]	; 12220 <putc_unlocked@plt+0x68>
   12208:	ldr	r2, [pc, #20]	; 12224 <putc_unlocked@plt+0x6c>
   1220c:	add	r3, pc, r3
   12210:	ldr	r2, [r3, r2]
   12214:	cmp	r2, #0
   12218:	bxeq	lr
   1221c:	b	11f6c <__gmon_start__@plt>
   12220:	andeq	r6, r2, ip, ror #27
   12224:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12228:	ldr	r0, [pc, #24]	; 12248 <putc_unlocked@plt+0x90>
   1222c:	ldr	r3, [pc, #24]	; 1224c <putc_unlocked@plt+0x94>
   12230:	cmp	r3, r0
   12234:	bxeq	lr
   12238:	ldr	r3, [pc, #16]	; 12250 <putc_unlocked@plt+0x98>
   1223c:	cmp	r3, #0
   12240:	bxeq	lr
   12244:	bx	r3
   12248:	andeq	r9, r3, r0, lsl r3
   1224c:	andeq	r9, r3, r0, lsl r3
   12250:	andeq	r0, r0, r0
   12254:	ldr	r0, [pc, #36]	; 12280 <putc_unlocked@plt+0xc8>
   12258:	ldr	r1, [pc, #36]	; 12284 <putc_unlocked@plt+0xcc>
   1225c:	sub	r1, r1, r0
   12260:	asr	r1, r1, #2
   12264:	add	r1, r1, r1, lsr #31
   12268:	asrs	r1, r1, #1
   1226c:	bxeq	lr
   12270:	ldr	r3, [pc, #16]	; 12288 <putc_unlocked@plt+0xd0>
   12274:	cmp	r3, #0
   12278:	bxeq	lr
   1227c:	bx	r3
   12280:	andeq	r9, r3, r0, lsl r3
   12284:	andeq	r9, r3, r0, lsl r3
   12288:	andeq	r0, r0, r0
   1228c:	push	{r4, lr}
   12290:	ldr	r4, [pc, #24]	; 122b0 <putc_unlocked@plt+0xf8>
   12294:	ldrb	r3, [r4]
   12298:	cmp	r3, #0
   1229c:	popne	{r4, pc}
   122a0:	bl	12228 <putc_unlocked@plt+0x70>
   122a4:	mov	r3, #1
   122a8:	strb	r3, [r4]
   122ac:	pop	{r4, pc}
   122b0:	andeq	r9, r3, ip, lsr #6
   122b4:	b	12254 <putc_unlocked@plt+0x9c>
   122b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122bc:	add	fp, sp, #28
   122c0:	sub	sp, sp, #28
   122c4:	mov	r4, r1
   122c8:	mov	r5, r0
   122cc:	ldr	r0, [r1]
   122d0:	bl	20440 <_obstack_memory_used@@Base+0x78>
   122d4:	movw	r8, #27261	; 0x6a7d
   122d8:	movt	r8, #2
   122dc:	mov	r0, #6
   122e0:	mov	r1, r8
   122e4:	bl	12074 <setlocale@plt>
   122e8:	movw	r6, #25823	; 0x64df
   122ec:	movt	r6, #2
   122f0:	movw	r1, #18004	; 0x4654
   122f4:	movt	r1, #2
   122f8:	mov	r0, r6
   122fc:	bl	12110 <bindtextdomain@plt>
   12300:	mov	r0, r6
   12304:	bl	11df8 <textdomain@plt>
   12308:	bl	12a08 <putc_unlocked@plt+0x850>
   1230c:	movw	r0, #46064	; 0xb3f0
   12310:	movt	r0, #1
   12314:	bl	2461c <_obstack_memory_used@@Base+0x4254>
   12318:	movw	r1, #37680	; 0x9330
   1231c:	movt	r1, #3
   12320:	mov	r0, #0
   12324:	str	r0, [r1]
   12328:	movw	r1, #37684	; 0x9334
   1232c:	movt	r1, #3
   12330:	mov	sl, #1
   12334:	strb	sl, [r1]
   12338:	movw	r9, #37688	; 0x9338
   1233c:	movt	r9, #3
   12340:	str	r0, [r9]
   12344:	movw	r0, #37692	; 0x933c
   12348:	movt	r0, #3
   1234c:	mov	r1, #-2147483648	; 0x80000000
   12350:	mvn	r2, #0
   12354:	stm	r0, {r1, r2}
   12358:	mov	r0, r5
   1235c:	mov	r1, r4
   12360:	bl	12a1c <putc_unlocked@plt+0x864>
   12364:	mov	r6, r0
   12368:	movw	r7, #37700	; 0x9344
   1236c:	movt	r7, #3
   12370:	ldrb	r0, [r7]
   12374:	cmp	r0, #0
   12378:	beq	12398 <putc_unlocked@plt+0x1e0>
   1237c:	bl	13f6c <putc_unlocked@plt+0x1db4>
   12380:	ldrb	r0, [r7]
   12384:	cmp	r0, #0
   12388:	movwne	r0, #37704	; 0x9348
   1238c:	movtne	r0, #3
   12390:	movne	sl, #0
   12394:	strne	sl, [r0]
   12398:	movw	r0, #37708	; 0x934c
   1239c:	movt	r0, #3
   123a0:	ldrb	r0, [r0]
   123a4:	cmp	r0, #1
   123a8:	bne	123c0 <putc_unlocked@plt+0x208>
   123ac:	movw	r0, #37709	; 0x934d
   123b0:	movt	r0, #3
   123b4:	mov	r1, #1
   123b8:	strb	r1, [r0]
   123bc:	b	123c8 <putc_unlocked@plt+0x210>
   123c0:	cmp	sl, #0
   123c4:	beq	12638 <putc_unlocked@plt+0x480>
   123c8:	movw	r0, #37716	; 0x9354
   123cc:	movt	r0, #3
   123d0:	ldr	r1, [r0]
   123d4:	cmp	r1, #0
   123d8:	bne	12420 <putc_unlocked@plt+0x268>
   123dc:	movw	r1, #37712	; 0x9350
   123e0:	movt	r1, #3
   123e4:	ldr	r1, [r1]
   123e8:	mov	r2, #3
   123ec:	cmp	r1, #0
   123f0:	movweq	r2, #1
   123f4:	movw	r1, #37724	; 0x935c
   123f8:	movt	r1, #3
   123fc:	ldr	r1, [r1]
   12400:	cmp	r1, #3
   12404:	movweq	r2, #1
   12408:	movw	r1, #37720	; 0x9358
   1240c:	movt	r1, #3
   12410:	ldrb	r1, [r1]
   12414:	cmp	r1, #0
   12418:	movwne	r2, #1
   1241c:	str	r2, [r0]
   12420:	movw	r7, #37728	; 0x9360
   12424:	movt	r7, #3
   12428:	ldrb	r0, [r7]
   1242c:	cmp	r0, #1
   12430:	bne	12498 <putc_unlocked@plt+0x2e0>
   12434:	movw	r0, #17260	; 0x436c
   12438:	movt	r0, #1
   1243c:	str	r0, [sp]
   12440:	movw	r2, #17156	; 0x4304
   12444:	movt	r2, #1
   12448:	movw	r3, #17188	; 0x4324
   1244c:	movt	r3, #1
   12450:	mov	r0, #30
   12454:	mov	r1, #0
   12458:	bl	1c208 <putc_unlocked@plt+0xa050>
   1245c:	movw	r1, #37732	; 0x9364
   12460:	movt	r1, #3
   12464:	str	r0, [r1]
   12468:	cmp	r0, #0
   1246c:	beq	12a04 <putc_unlocked@plt+0x84c>
   12470:	movw	r0, #48396	; 0xbd0c
   12474:	movt	r0, #1
   12478:	str	r0, [sp]
   1247c:	movw	r0, #37736	; 0x9368
   12480:	movt	r0, #3
   12484:	movw	r3, #14948	; 0x3a64
   12488:	movt	r3, #2
   1248c:	mov	r1, #0
   12490:	mov	r2, #0
   12494:	bl	200d4 <_obstack_begin@@Base>
   12498:	movw	r0, #18028	; 0x466c
   1249c:	movt	r0, #2
   124a0:	bl	11f00 <getenv@plt>
   124a4:	bl	223e4 <_obstack_memory_used@@Base+0x201c>
   124a8:	movw	r1, #37780	; 0x9394
   124ac:	movt	r1, #3
   124b0:	str	r0, [r1]
   124b4:	movw	r0, #37712	; 0x9350
   124b8:	movt	r0, #3
   124bc:	ldr	r0, [r0]
   124c0:	cmp	r0, #0
   124c4:	beq	124e0 <putc_unlocked@plt+0x328>
   124c8:	movw	r0, #37784	; 0x9398
   124cc:	movt	r0, #3
   124d0:	ldr	r0, [r0]
   124d4:	cmp	r0, #5
   124d8:	cmpne	r0, #3
   124dc:	bne	12694 <putc_unlocked@plt+0x4dc>
   124e0:	movw	r0, #37790	; 0x939e
   124e4:	movt	r0, #3
   124e8:	mov	r1, #1
   124ec:	strb	r1, [r0]
   124f0:	mov	r0, #0
   124f4:	and	r0, r0, #1
   124f8:	movw	r1, #37791	; 0x939f
   124fc:	movt	r1, #3
   12500:	strb	r0, [r1]
   12504:	movw	r0, #37792	; 0x93a0
   12508:	movt	r0, #3
   1250c:	ldrb	r0, [r0]
   12510:	cmp	r0, #0
   12514:	beq	12560 <putc_unlocked@plt+0x3a8>
   12518:	movw	sl, #48396	; 0xbd0c
   1251c:	movt	sl, #1
   12520:	str	sl, [sp]
   12524:	movw	r0, #37796	; 0x93a4
   12528:	movt	r0, #3
   1252c:	movw	r7, #14948	; 0x3a64
   12530:	movt	r7, #2
   12534:	mov	r1, #0
   12538:	mov	r2, #0
   1253c:	mov	r3, r7
   12540:	bl	200d4 <_obstack_begin@@Base>
   12544:	str	sl, [sp]
   12548:	movw	r0, #37840	; 0x93d0
   1254c:	movt	r0, #3
   12550:	mov	r1, #0
   12554:	mov	r2, #0
   12558:	mov	r3, r7
   1255c:	bl	200d4 <_obstack_begin@@Base>
   12560:	movw	r0, #37884	; 0x93fc
   12564:	movt	r0, #3
   12568:	ldrb	r0, [r0]
   1256c:	cmp	r0, #0
   12570:	beq	12590 <putc_unlocked@plt+0x3d8>
   12574:	bl	14370 <putc_unlocked@plt+0x21b8>
   12578:	bl	232b0 <_obstack_memory_used@@Base+0x2ee8>
   1257c:	cmp	r0, #0
   12580:	movne	r8, r0
   12584:	movw	r0, #37888	; 0x9400
   12588:	movt	r0, #3
   1258c:	str	r8, [r0]
   12590:	movw	r0, #37892	; 0x9404
   12594:	movt	r0, #3
   12598:	mov	r1, #100	; 0x64
   1259c:	str	r1, [r0]
   125a0:	mov	r0, #100	; 0x64
   125a4:	mov	r1, #152	; 0x98
   125a8:	bl	22e60 <_obstack_memory_used@@Base+0x2a98>
   125ac:	movw	r1, #37896	; 0x9408
   125b0:	movt	r1, #3
   125b4:	str	r0, [r1]
   125b8:	movw	sl, #37900	; 0x940c
   125bc:	movt	sl, #3
   125c0:	mov	r0, #0
   125c4:	str	r0, [sl]
   125c8:	sub	r8, r5, r6
   125cc:	bl	143d4 <putc_unlocked@plt+0x221c>
   125d0:	cmp	r8, #1
   125d4:	blt	12604 <putc_unlocked@plt+0x44c>
   125d8:	movw	r7, #27261	; 0x6a7d
   125dc:	movt	r7, #2
   125e0:	ldr	r0, [r4, r6, lsl #2]
   125e4:	mov	r1, #0
   125e8:	mov	r2, #1
   125ec:	mov	r3, r7
   125f0:	bl	144b4 <putc_unlocked@plt+0x22fc>
   125f4:	add	r6, r6, #1
   125f8:	cmp	r6, r5
   125fc:	blt	125e0 <putc_unlocked@plt+0x428>
   12600:	b	12720 <putc_unlocked@plt+0x568>
   12604:	movw	r0, #37720	; 0x9358
   12608:	movt	r0, #3
   1260c:	ldrb	r0, [r0]
   12610:	cmp	r0, #1
   12614:	bne	1270c <putc_unlocked@plt+0x554>
   12618:	movw	r0, #34110	; 0x853e
   1261c:	movt	r0, #2
   12620:	movw	r3, #27261	; 0x6a7d
   12624:	movt	r3, #2
   12628:	mov	r1, #3
   1262c:	mov	r2, #1
   12630:	bl	144b4 <putc_unlocked@plt+0x22fc>
   12634:	b	12720 <putc_unlocked@plt+0x568>
   12638:	mov	r0, #13
   1263c:	bl	142a4 <putc_unlocked@plt+0x20ec>
   12640:	cmp	r0, #0
   12644:	bne	123ac <putc_unlocked@plt+0x1f4>
   12648:	mov	r0, #14
   1264c:	bl	142a4 <putc_unlocked@plt+0x20ec>
   12650:	cmp	r0, #0
   12654:	beq	1266c <putc_unlocked@plt+0x4b4>
   12658:	movw	r0, #37710	; 0x934e
   1265c:	movt	r0, #3
   12660:	ldrb	r0, [r0]
   12664:	cmp	r0, #0
   12668:	bne	123ac <putc_unlocked@plt+0x1f4>
   1266c:	mov	r0, #12
   12670:	bl	142a4 <putc_unlocked@plt+0x20ec>
   12674:	cmp	r0, #0
   12678:	beq	123c8 <putc_unlocked@plt+0x210>
   1267c:	movw	r0, #37712	; 0x9350
   12680:	movt	r0, #3
   12684:	ldr	r0, [r0]
   12688:	cmp	r0, #0
   1268c:	beq	123ac <putc_unlocked@plt+0x1f4>
   12690:	b	123c8 <putc_unlocked@plt+0x210>
   12694:	movw	r0, #37789	; 0x939d
   12698:	movt	r0, #3
   1269c:	ldrb	r0, [r0]
   126a0:	movw	r1, #37788	; 0x939c
   126a4:	movt	r1, #3
   126a8:	ldrb	r1, [r1]
   126ac:	orr	r0, r1, r0
   126b0:	ands	r0, r0, #1
   126b4:	movw	r1, #37790	; 0x939e
   126b8:	movt	r1, #3
   126bc:	strb	r0, [r1]
   126c0:	mov	r0, #0
   126c4:	bne	124f4 <putc_unlocked@plt+0x33c>
   126c8:	ldrb	r1, [r7]
   126cc:	mov	r0, #1
   126d0:	cmp	r1, #0
   126d4:	bne	124f4 <putc_unlocked@plt+0x33c>
   126d8:	movw	r0, #37724	; 0x935c
   126dc:	movt	r0, #3
   126e0:	ldr	r0, [r0]
   126e4:	movw	r1, #37700	; 0x9344
   126e8:	movt	r1, #3
   126ec:	ldrb	r1, [r1]
   126f0:	orrs	r0, r1, r0
   126f4:	movwne	r0, #1
   126f8:	movw	r1, #37708	; 0x934c
   126fc:	movt	r1, #3
   12700:	ldrb	r1, [r1]
   12704:	orr	r0, r1, r0
   12708:	b	124f4 <putc_unlocked@plt+0x33c>
   1270c:	movw	r0, #34110	; 0x853e
   12710:	movt	r0, #2
   12714:	mov	r1, #0
   12718:	mov	r2, #1
   1271c:	bl	14f88 <putc_unlocked@plt+0x2dd0>
   12720:	ldr	r0, [sl]
   12724:	cmp	r0, #0
   12728:	beq	12788 <putc_unlocked@plt+0x5d0>
   1272c:	bl	14ff8 <putc_unlocked@plt+0x2e40>
   12730:	movw	r0, #37720	; 0x9358
   12734:	movt	r0, #3
   12738:	ldrb	r0, [r0]
   1273c:	cmp	r0, #0
   12740:	bne	12750 <putc_unlocked@plt+0x598>
   12744:	mov	r0, #0
   12748:	mov	r1, #1
   1274c:	bl	1511c <putc_unlocked@plt+0x2f64>
   12750:	ldr	r0, [sl]
   12754:	cmp	r0, #0
   12758:	beq	12788 <putc_unlocked@plt+0x5d0>
   1275c:	bl	1525c <putc_unlocked@plt+0x30a4>
   12760:	ldr	r0, [r9]
   12764:	cmp	r0, #0
   12768:	movw	r5, #37684	; 0x9334
   1276c:	movt	r5, #3
   12770:	movw	sl, #37700	; 0x9344
   12774:	movt	sl, #3
   12778:	beq	12864 <putc_unlocked@plt+0x6ac>
   1277c:	mov	r0, #10
   12780:	bl	153a4 <putc_unlocked@plt+0x31ec>
   12784:	b	127bc <putc_unlocked@plt+0x604>
   12788:	ldr	r4, [r9]
   1278c:	cmp	r8, #1
   12790:	bgt	127cc <putc_unlocked@plt+0x614>
   12794:	cmp	r4, #0
   12798:	movw	r5, #37684	; 0x9334
   1279c:	movt	r5, #3
   127a0:	beq	127d4 <putc_unlocked@plt+0x61c>
   127a4:	ldr	r0, [r4, #12]
   127a8:	cmp	r0, #0
   127ac:	movw	sl, #37700	; 0x9344
   127b0:	movt	sl, #3
   127b4:	moveq	r0, #0
   127b8:	strbeq	r0, [r5]
   127bc:	ldr	r4, [r9]
   127c0:	cmp	r4, #0
   127c4:	bne	127e4 <putc_unlocked@plt+0x62c>
   127c8:	b	12864 <putc_unlocked@plt+0x6ac>
   127cc:	movw	r5, #37684	; 0x9334
   127d0:	movt	r5, #3
   127d4:	movw	sl, #37700	; 0x9344
   127d8:	movt	sl, #3
   127dc:	cmp	r4, #0
   127e0:	beq	12864 <putc_unlocked@plt+0x6ac>
   127e4:	movw	r6, #37732	; 0x9364
   127e8:	movt	r6, #3
   127ec:	mov	r7, #1
   127f0:	add	r8, sp, #8
   127f4:	ldr	r0, [r4, #12]
   127f8:	str	r0, [r9]
   127fc:	ldr	r0, [r6]
   12800:	cmp	r0, #0
   12804:	beq	12814 <putc_unlocked@plt+0x65c>
   12808:	ldr	r0, [r4]
   1280c:	cmp	r0, #0
   12810:	beq	12830 <putc_unlocked@plt+0x678>
   12814:	ldrb	r2, [r4, #8]
   12818:	ldm	r4, {r0, r1}
   1281c:	bl	15440 <putc_unlocked@plt+0x3288>
   12820:	mov	r0, r4
   12824:	bl	15418 <putc_unlocked@plt+0x3260>
   12828:	strb	r7, [r5]
   1282c:	b	12858 <putc_unlocked@plt+0x6a0>
   12830:	mov	r0, r8
   12834:	bl	153c0 <putc_unlocked@plt+0x3208>
   12838:	ldr	r0, [r6]
   1283c:	mov	r1, r8
   12840:	bl	1cad8 <putc_unlocked@plt+0xa920>
   12844:	cmp	r0, #0
   12848:	beq	129c4 <putc_unlocked@plt+0x80c>
   1284c:	bl	1436c <putc_unlocked@plt+0x21b4>
   12850:	mov	r0, r4
   12854:	bl	15418 <putc_unlocked@plt+0x3260>
   12858:	ldr	r4, [r9]
   1285c:	cmp	r4, #0
   12860:	bne	127f4 <putc_unlocked@plt+0x63c>
   12864:	ldrb	r0, [sl]
   12868:	cmp	r0, #0
   1286c:	beq	12908 <putc_unlocked@plt+0x750>
   12870:	movw	r0, #37904	; 0x9410
   12874:	movt	r0, #3
   12878:	ldrb	r0, [r0]
   1287c:	cmp	r0, #1
   12880:	bne	12908 <putc_unlocked@plt+0x750>
   12884:	movw	r0, #37344	; 0x91e0
   12888:	movt	r0, #3
   1288c:	ldr	r1, [r0]
   12890:	cmp	r1, #2
   12894:	bne	128b4 <putc_unlocked@plt+0x6fc>
   12898:	ldr	r1, [r0, #4]
   1289c:	ldrh	r1, [r1]
   128a0:	movw	r2, #23323	; 0x5b1b
   128a4:	cmp	r1, r2
   128a8:	ldreq	r1, [r0, #8]
   128ac:	cmpeq	r1, #1
   128b0:	beq	129b0 <putc_unlocked@plt+0x7f8>
   128b4:	bl	15934 <putc_unlocked@plt+0x377c>
   128b8:	movw	r0, #37668	; 0x9324
   128bc:	movt	r0, #3
   128c0:	ldr	r0, [r0]
   128c4:	bl	11e1c <fflush_unlocked@plt>
   128c8:	bl	15958 <putc_unlocked@plt+0x37a0>
   128cc:	movw	r0, #37908	; 0x9414
   128d0:	movt	r0, #3
   128d4:	ldr	r4, [r0]
   128d8:	cmp	r4, #0
   128dc:	beq	128f0 <putc_unlocked@plt+0x738>
   128e0:	mov	r0, #19
   128e4:	bl	11ca8 <raise@plt>
   128e8:	subs	r4, r4, #1
   128ec:	bne	128e0 <putc_unlocked@plt+0x728>
   128f0:	movw	r0, #37912	; 0x9418
   128f4:	movt	r0, #3
   128f8:	ldr	r0, [r0]
   128fc:	cmp	r0, #0
   12900:	beq	12908 <putc_unlocked@plt+0x750>
   12904:	bl	11ca8 <raise@plt>
   12908:	movw	r0, #37792	; 0x93a0
   1290c:	movt	r0, #3
   12910:	ldrb	r0, [r0]
   12914:	cmp	r0, #0
   12918:	beq	12970 <putc_unlocked@plt+0x7b8>
   1291c:	movw	r0, #18072	; 0x4698
   12920:	movt	r0, #2
   12924:	movw	r1, #37796	; 0x93a4
   12928:	movt	r1, #3
   1292c:	bl	15960 <putc_unlocked@plt+0x37a8>
   12930:	movw	r0, #18082	; 0x46a2
   12934:	movt	r0, #2
   12938:	movw	r1, #37840	; 0x93d0
   1293c:	movt	r1, #3
   12940:	bl	15960 <putc_unlocked@plt+0x37a8>
   12944:	movw	r0, #37916	; 0x941c
   12948:	movt	r0, #3
   1294c:	ldr	r0, [r0]
   12950:	bl	20540 <_obstack_memory_used@@Base+0x178>
   12954:	movw	r1, #34540	; 0x86ec
   12958:	movt	r1, #2
   1295c:	ldr	r2, [r1, r0, lsl #2]
   12960:	movw	r1, #18095	; 0x46af
   12964:	movt	r1, #2
   12968:	mov	r0, #1
   1296c:	bl	12014 <__printf_chk@plt>
   12970:	movw	r0, #37732	; 0x9364
   12974:	movt	r0, #3
   12978:	ldr	r4, [r0]
   1297c:	cmp	r4, #0
   12980:	beq	1299c <putc_unlocked@plt+0x7e4>
   12984:	mov	r0, r4
   12988:	bl	1bdc8 <putc_unlocked@plt+0x9c10>
   1298c:	cmp	r0, #0
   12990:	bne	129e4 <putc_unlocked@plt+0x82c>
   12994:	mov	r0, r4
   12998:	bl	1c4dc <putc_unlocked@plt+0xa324>
   1299c:	movw	r0, #37680	; 0x9330
   129a0:	movt	r0, #3
   129a4:	ldr	r0, [r0]
   129a8:	sub	sp, fp, #28
   129ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129b0:	ldr	r0, [r0, #12]
   129b4:	ldrb	r0, [r0]
   129b8:	cmp	r0, #109	; 0x6d
   129bc:	blne	15934 <putc_unlocked@plt+0x377c>
   129c0:	b	128b8 <putc_unlocked@plt+0x700>
   129c4:	movw	r0, #18031	; 0x466f
   129c8:	movt	r0, #2
   129cc:	movw	r1, #18037	; 0x4675
   129d0:	movt	r1, #2
   129d4:	movw	r3, #18046	; 0x467e
   129d8:	movt	r3, #2
   129dc:	movw	r2, #1805	; 0x70d
   129e0:	bl	121ac <__assert_fail@plt>
   129e4:	movw	r0, #18133	; 0x46d5
   129e8:	movt	r0, #2
   129ec:	movw	r1, #18037	; 0x4675
   129f0:	movt	r1, #2
   129f4:	movw	r3, #18046	; 0x467e
   129f8:	movt	r3, #2
   129fc:	movw	r2, #1857	; 0x741
   12a00:	bl	121ac <__assert_fail@plt>
   12a04:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   12a08:	movw	r0, #37572	; 0x92c4
   12a0c:	movt	r0, #3
   12a10:	mov	r1, #2
   12a14:	str	r1, [r0]
   12a18:	bx	lr
   12a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a20:	add	fp, sp, #28
   12a24:	sub	sp, sp, #52	; 0x34
   12a28:	mov	r7, r1
   12a2c:	mov	r5, r0
   12a30:	mov	r0, #0
   12a34:	str	r0, [sp, #20]
   12a38:	mvn	r4, #0
   12a3c:	mvn	r0, #0
   12a40:	str	r0, [sp, #28]
   12a44:	mvn	r0, #0
   12a48:	str	r0, [sp, #24]
   12a4c:	mvn	r8, #0
   12a50:	mvn	r0, #0
   12a54:	mvn	r1, #0
   12a58:	str	r1, [sp, #32]
   12a5c:	mvn	r1, #0
   12a60:	str	r1, [sp, #36]	; 0x24
   12a64:	mov	sl, #0
   12a68:	b	12a78 <putc_unlocked@plt+0x8c0>
   12a6c:	mov	r1, #1
   12a70:	strb	r1, [r0]
   12a74:	mov	r0, r9
   12a78:	mov	r9, r0
   12a7c:	str	r4, [sp, #40]	; 0x28
   12a80:	add	r0, sp, #40	; 0x28
   12a84:	str	r0, [sp]
   12a88:	mov	r0, r5
   12a8c:	mov	r1, r7
   12a90:	movw	r2, #25631	; 0x641f
   12a94:	movt	r2, #2
   12a98:	movw	r3, #28064	; 0x6da0
   12a9c:	movt	r3, #2
   12aa0:	bl	11f78 <getopt_long@plt>
   12aa4:	add	r1, r0, #3
   12aa8:	cmp	r1, #276	; 0x114
   12aac:	bhi	13e28 <putc_unlocked@plt+0x1c70>
   12ab0:	mov	r0, #7
   12ab4:	add	r2, pc, #0
   12ab8:	ldr	pc, [r2, r1, lsl #2]
   12abc:	andeq	r3, r1, r0, lsr lr
   12ac0:	andeq	r3, r1, ip, lsr #29
   12ac4:	andeq	r3, r1, ip, asr #13
   12ac8:	andeq	r3, r1, r8, lsr #28
   12acc:	andeq	r3, r1, r8, lsr #28
   12ad0:	andeq	r3, r1, r8, lsr #28
   12ad4:	andeq	r3, r1, r8, lsr #28
   12ad8:	andeq	r3, r1, r8, lsr #28
   12adc:	andeq	r3, r1, r8, lsr #28
   12ae0:	andeq	r3, r1, r8, lsr #28
   12ae4:	andeq	r3, r1, r8, lsr #28
   12ae8:	andeq	r3, r1, r8, lsr #28
   12aec:	andeq	r3, r1, r8, lsr #28
   12af0:	andeq	r3, r1, r8, lsr #28
   12af4:	andeq	r3, r1, r8, lsr #28
   12af8:	andeq	r3, r1, r8, lsr #28
   12afc:	andeq	r3, r1, r8, lsr #28
   12b00:	andeq	r3, r1, r8, lsr #28
   12b04:	andeq	r3, r1, r8, lsr #28
   12b08:	andeq	r3, r1, r8, lsr #28
   12b0c:	andeq	r3, r1, r8, lsr #28
   12b10:	andeq	r3, r1, r8, lsr #28
   12b14:	andeq	r3, r1, r8, lsr #28
   12b18:	andeq	r3, r1, r8, lsr #28
   12b1c:	andeq	r3, r1, r8, lsr #28
   12b20:	andeq	r3, r1, r8, lsr #28
   12b24:	andeq	r3, r1, r8, lsr #28
   12b28:	andeq	r3, r1, r8, lsr #28
   12b2c:	andeq	r3, r1, r8, lsr #28
   12b30:	andeq	r3, r1, r8, lsr #28
   12b34:	andeq	r3, r1, r8, lsr #28
   12b38:	andeq	r3, r1, r8, lsr #28
   12b3c:	andeq	r3, r1, r8, lsr #28
   12b40:	andeq	r3, r1, r8, lsr #28
   12b44:	andeq	r3, r1, r8, lsr #28
   12b48:	andeq	r3, r1, r8, lsr #28
   12b4c:	andeq	r3, r1, r8, lsr #28
   12b50:	andeq	r3, r1, r8, lsr #28
   12b54:	andeq	r3, r1, r8, lsr #28
   12b58:	andeq	r3, r1, r8, lsr #28
   12b5c:	andeq	r3, r1, r8, lsr #28
   12b60:	andeq	r3, r1, r8, lsr #28
   12b64:	andeq	r3, r1, r8, lsr #28
   12b68:	andeq	r3, r1, r8, lsr #28
   12b6c:	andeq	r3, r1, r8, lsr #28
   12b70:	andeq	r3, r1, r8, lsr #28
   12b74:	andeq	r3, r1, r8, lsr #28
   12b78:	andeq	r3, r1, r8, lsr #28
   12b7c:	andeq	r3, r1, r8, lsr #28
   12b80:	andeq	r3, r1, r8, lsr #28
   12b84:	andeq	r3, r1, r8, lsr #28
   12b88:	andeq	r3, r1, r8, lsr #28
   12b8c:	andeq	r2, r1, r0, lsl pc
   12b90:	andeq	r3, r1, r8, lsr #28
   12b94:	andeq	r3, r1, r8, lsr #28
   12b98:	andeq	r3, r1, r8, lsr #28
   12b9c:	andeq	r3, r1, r8, lsr #28
   12ba0:	andeq	r3, r1, r8, lsr #28
   12ba4:	andeq	r3, r1, r8, lsr #28
   12ba8:	andeq	r3, r1, r8, lsr #28
   12bac:	andeq	r3, r1, r8, lsr #28
   12bb0:	andeq	r3, r1, r8, lsr #28
   12bb4:	andeq	r3, r1, r8, lsr #28
   12bb8:	andeq	r3, r1, r8, lsr #28
   12bbc:	andeq	r3, r1, r8, lsr #28
   12bc0:	andeq	r3, r1, r8, lsr #28
   12bc4:	andeq	r3, r1, r8, lsr #28
   12bc8:	andeq	r3, r1, r8, lsr #28
   12bcc:	andeq	r3, r1, r4, ror #4
   12bd0:	andeq	r3, r1, ip, asr #4
   12bd4:	andeq	r3, r1, ip, lsr #3
   12bd8:	andeq	r3, r1, ip, lsl r3
   12bdc:	andeq	r3, r1, r8, lsr #28
   12be0:			; <UNDEFINED> instruction: 0x000131bc
   12be4:	andeq	r3, r1, r8, lsl #6
   12be8:	andeq	r3, r1, r4, ror r2
   12bec:	andeq	r3, r1, r0, lsl #5
   12bf0:	andeq	r3, r1, r8, lsr #28
   12bf4:	andeq	r3, r1, r8, lsr #28
   12bf8:	andeq	r3, r1, r8, asr #2
   12bfc:	andeq	r3, r1, r8, lsr #28
   12c00:	andeq	r3, r1, r0, lsl #9
   12c04:	andeq	r3, r1, r8, lsr #28
   12c08:	andeq	r3, r1, r8, lsr #28
   12c0c:			; <UNDEFINED> instruction: 0x000131b4
   12c10:	andeq	r3, r1, ip, lsr #7
   12c14:	andeq	r3, r1, r8, ror #1
   12c18:	strdeq	r3, [r1], -r4
   12c1c:	andeq	r3, r1, r0, lsr #3
   12c20:	andeq	r3, r1, r8, lsr #28
   12c24:	andeq	r3, r1, r8, lsr #28
   12c28:	andeq	r3, r1, r4, lsl r0
   12c2c:	andeq	r3, r1, r8, lsr #28
   12c30:	andeq	r3, r1, r8, asr r0
   12c34:	andeq	r3, r1, r8, lsr #28
   12c38:	andeq	r3, r1, r8, lsr #28
   12c3c:	andeq	r3, r1, r8, lsr #28
   12c40:	andeq	r3, r1, r8, lsr #28
   12c44:	andeq	r3, r1, r8, lsr #28
   12c48:	andeq	r3, r1, r8, lsr #28
   12c4c:	andeq	r3, r1, r0, asr #4
   12c50:	andeq	r2, r1, r8, ror sl
   12c54:	andeq	r3, r1, ip, lsr #32
   12c58:	andeq	r3, r1, ip, lsr r0
   12c5c:	andeq	r3, r1, r8, lsr #28
   12c60:	andeq	r3, r1, r8, asr r1
   12c64:	ldrdeq	r2, [r1], -r8
   12c68:	andeq	r2, r1, ip, lsl #31
   12c6c:	andeq	r3, r1, r8, lsr #6
   12c70:	andeq	r3, r1, r8, lsr #28
   12c74:	andeq	r3, r1, r8, lsl #9
   12c78:	andeq	r3, r1, ip, lsl #11
   12c7c:	muleq	r1, r8, r2
   12c80:	andeq	r3, r1, r0, lsr #5
   12c84:	ldrdeq	r3, [r1], -r4
   12c88:	andeq	r3, r1, r8, asr #32
   12c8c:	andeq	r3, r1, r0, ror #1
   12c90:	andeq	r2, r1, r4, ror pc
   12c94:	andeq	r2, r1, ip, lsr #30
   12c98:	strdeq	r3, [r1], -r0
   12c9c:	andeq	r3, r1, r8, asr r5
   12ca0:	andeq	r3, r1, r0, ror r5
   12ca4:	andeq	r3, r1, ip, asr r4
   12ca8:	andeq	r3, r1, r4, lsl r3
   12cac:	andeq	r3, r1, r8, lsr #28
   12cb0:	andeq	r3, r1, r8, lsr #28
   12cb4:	andeq	r3, r1, r8, lsr #28
   12cb8:	andeq	r3, r1, r8, lsr #28
   12cbc:	andeq	r3, r1, r8, lsr #28
   12cc0:	andeq	r3, r1, r8, lsr #28
   12cc4:	andeq	r3, r1, r8, lsr #28
   12cc8:	andeq	r3, r1, r8, lsr #28
   12ccc:	andeq	r3, r1, r8, lsr #28
   12cd0:	andeq	r3, r1, r8, lsr #28
   12cd4:	andeq	r3, r1, r8, lsr #28
   12cd8:	andeq	r3, r1, r8, lsr #28
   12cdc:	andeq	r3, r1, r8, lsr #28
   12ce0:	andeq	r3, r1, r8, lsr #28
   12ce4:	andeq	r3, r1, r8, lsr #28
   12ce8:	andeq	r3, r1, r8, lsr #28
   12cec:	andeq	r3, r1, r8, lsr #28
   12cf0:	andeq	r3, r1, r8, lsr #28
   12cf4:	andeq	r3, r1, r8, lsr #28
   12cf8:	andeq	r3, r1, r8, lsr #28
   12cfc:	andeq	r3, r1, r8, lsr #28
   12d00:	andeq	r3, r1, r8, lsr #28
   12d04:	andeq	r3, r1, r8, lsr #28
   12d08:	andeq	r3, r1, r8, lsr #28
   12d0c:	andeq	r3, r1, r8, lsr #28
   12d10:	andeq	r3, r1, r8, lsr #28
   12d14:	andeq	r3, r1, r8, lsr #28
   12d18:	andeq	r3, r1, r8, lsr #28
   12d1c:	andeq	r3, r1, r8, lsr #28
   12d20:	andeq	r3, r1, r8, lsr #28
   12d24:	andeq	r3, r1, r8, lsr #28
   12d28:	andeq	r3, r1, r8, lsr #28
   12d2c:	andeq	r3, r1, r8, lsr #28
   12d30:	andeq	r3, r1, r8, lsr #28
   12d34:	andeq	r3, r1, r8, lsr #28
   12d38:	andeq	r3, r1, r8, lsr #28
   12d3c:	andeq	r3, r1, r8, lsr #28
   12d40:	andeq	r3, r1, r8, lsr #28
   12d44:	andeq	r3, r1, r8, lsr #28
   12d48:	andeq	r3, r1, r8, lsr #28
   12d4c:	andeq	r3, r1, r8, lsr #28
   12d50:	andeq	r3, r1, r8, lsr #28
   12d54:	andeq	r3, r1, r8, lsr #28
   12d58:	andeq	r3, r1, r8, lsr #28
   12d5c:	andeq	r3, r1, r8, lsr #28
   12d60:	andeq	r3, r1, r8, lsr #28
   12d64:	andeq	r3, r1, r8, lsr #28
   12d68:	andeq	r3, r1, r8, lsr #28
   12d6c:	andeq	r3, r1, r8, lsr #28
   12d70:	andeq	r3, r1, r8, lsr #28
   12d74:	andeq	r3, r1, r8, lsr #28
   12d78:	andeq	r3, r1, r8, lsr #28
   12d7c:	andeq	r3, r1, r8, lsr #28
   12d80:	andeq	r3, r1, r8, lsr #28
   12d84:	andeq	r3, r1, r8, lsr #28
   12d88:	andeq	r3, r1, r8, lsr #28
   12d8c:	andeq	r3, r1, r8, lsr #28
   12d90:	andeq	r3, r1, r8, lsr #28
   12d94:	andeq	r3, r1, r8, lsr #28
   12d98:	andeq	r3, r1, r8, lsr #28
   12d9c:	andeq	r3, r1, r8, lsr #28
   12da0:	andeq	r3, r1, r8, lsr #28
   12da4:	andeq	r3, r1, r8, lsr #28
   12da8:	andeq	r3, r1, r8, lsr #28
   12dac:	andeq	r3, r1, r8, lsr #28
   12db0:	andeq	r3, r1, r8, lsr #28
   12db4:	andeq	r3, r1, r8, lsr #28
   12db8:	andeq	r3, r1, r8, lsr #28
   12dbc:	andeq	r3, r1, r8, lsr #28
   12dc0:	andeq	r3, r1, r8, lsr #28
   12dc4:	andeq	r3, r1, r8, lsr #28
   12dc8:	andeq	r3, r1, r8, lsr #28
   12dcc:	andeq	r3, r1, r8, lsr #28
   12dd0:	andeq	r3, r1, r8, lsr #28
   12dd4:	andeq	r3, r1, r8, lsr #28
   12dd8:	andeq	r3, r1, r8, lsr #28
   12ddc:	andeq	r3, r1, r8, lsr #28
   12de0:	andeq	r3, r1, r8, lsr #28
   12de4:	andeq	r3, r1, r8, lsr #28
   12de8:	andeq	r3, r1, r8, lsr #28
   12dec:	andeq	r3, r1, r8, lsr #28
   12df0:	andeq	r3, r1, r8, lsr #28
   12df4:	andeq	r3, r1, r8, lsr #28
   12df8:	andeq	r3, r1, r8, lsr #28
   12dfc:	andeq	r3, r1, r8, lsr #28
   12e00:	andeq	r3, r1, r8, lsr #28
   12e04:	andeq	r3, r1, r8, lsr #28
   12e08:	andeq	r3, r1, r8, lsr #28
   12e0c:	andeq	r3, r1, r8, lsr #28
   12e10:	andeq	r3, r1, r8, lsr #28
   12e14:	andeq	r3, r1, r8, lsr #28
   12e18:	andeq	r3, r1, r8, lsr #28
   12e1c:	andeq	r3, r1, r8, lsr #28
   12e20:	andeq	r3, r1, r8, lsr #28
   12e24:	andeq	r3, r1, r8, lsr #28
   12e28:	andeq	r3, r1, r8, lsr #28
   12e2c:	andeq	r3, r1, r8, lsr #28
   12e30:	andeq	r3, r1, r8, lsr #28
   12e34:	andeq	r3, r1, r8, lsr #28
   12e38:	andeq	r3, r1, r8, lsr #28
   12e3c:	andeq	r3, r1, r8, lsr #28
   12e40:	andeq	r3, r1, r8, lsr #28
   12e44:	andeq	r3, r1, r8, lsr #28
   12e48:	andeq	r3, r1, r8, lsr #28
   12e4c:	andeq	r3, r1, r8, lsr #28
   12e50:	andeq	r3, r1, r8, lsr #28
   12e54:	andeq	r3, r1, r8, lsr #28
   12e58:	andeq	r3, r1, r8, lsr #28
   12e5c:	andeq	r3, r1, r8, lsr #28
   12e60:	andeq	r3, r1, r8, lsr #28
   12e64:	andeq	r3, r1, r8, lsr #28
   12e68:	andeq	r3, r1, r8, lsr #28
   12e6c:	andeq	r3, r1, r8, lsr #28
   12e70:	andeq	r3, r1, r8, lsr #28
   12e74:	andeq	r3, r1, r8, lsr #28
   12e78:	andeq	r3, r1, r8, lsr #28
   12e7c:	andeq	r3, r1, r8, lsr #28
   12e80:	andeq	r3, r1, r8, lsr #28
   12e84:	andeq	r3, r1, r8, lsr #28
   12e88:	andeq	r3, r1, r8, lsr #28
   12e8c:	andeq	r3, r1, r8, lsr #28
   12e90:	andeq	r3, r1, r8, lsr #28
   12e94:	andeq	r3, r1, r8, lsr #28
   12e98:	andeq	r3, r1, r8, lsr #28
   12e9c:	andeq	r3, r1, r8, lsr #28
   12ea0:	andeq	r3, r1, r8, lsr #28
   12ea4:	andeq	r3, r1, r8, lsr #28
   12ea8:	andeq	r3, r1, r8, lsr #28
   12eac:	andeq	r3, r1, r8, lsr #28
   12eb0:	andeq	r3, r1, r8, lsr #28
   12eb4:	andeq	r3, r1, r8, lsr #28
   12eb8:	andeq	r3, r1, r8, lsr #28
   12ebc:	andeq	r3, r1, r8, lsr #28
   12ec0:	andeq	r3, r1, r8, lsr #28
   12ec4:	andeq	r3, r1, r8, lsr #28
   12ec8:	andeq	r3, r1, r0, lsr #32
   12ecc:	strdeq	r3, [r1], -r4
   12ed0:	andeq	r3, r1, r4, lsr r3
   12ed4:	andeq	r3, r1, ip, lsr #11
   12ed8:	andeq	r2, r1, r0, lsl #31
   12edc:			; <UNDEFINED> instruction: 0x000132b4
   12ee0:	andeq	r3, r1, ip, ror r5
   12ee4:	andeq	r2, r1, r0, lsr #30
   12ee8:	andeq	r2, r1, r4, ror #31
   12eec:	andeq	r3, r1, r4, rrx
   12ef0:	andeq	r3, r1, r0, lsl r6
   12ef4:			; <UNDEFINED> instruction: 0x000135bc
   12ef8:	muleq	r1, ip, r5
   12efc:	andeq	r2, r1, r8, lsr pc
   12f00:	muleq	r1, r8, r4
   12f04:	strdeq	r3, [r1], -ip
   12f08:	andeq	r2, r1, r0, ror #30
   12f0c:			; <UNDEFINED> instruction: 0x000133b8
   12f10:	ldr	r0, [sp, #36]	; 0x24
   12f14:	cmp	r0, #0
   12f18:	movwne	r0, #1
   12f1c:	b	13590 <putc_unlocked@plt+0x13d8>
   12f20:	movw	r0, #37708	; 0x934c
   12f24:	movt	r0, #3
   12f28:	b	12a6c <putc_unlocked@plt+0x8b4>
   12f2c:	movw	r0, #37789	; 0x939d
   12f30:	movt	r0, #3
   12f34:	b	12a6c <putc_unlocked@plt+0x8b4>
   12f38:	movw	r0, #38336	; 0x95c0
   12f3c:	movt	r0, #3
   12f40:	mov	r1, #0
   12f44:	mov	r2, #1
   12f48:	str	r2, [r0]
   12f4c:	str	r1, [r0, #4]
   12f50:	movw	r0, #38328	; 0x95b8
   12f54:	movt	r0, #3
   12f58:	mov	r3, #144	; 0x90
   12f5c:	b	12fb0 <putc_unlocked@plt+0xdf8>
   12f60:	movw	r0, #37672	; 0x9328
   12f64:	movt	r0, #3
   12f68:	ldr	sl, [r0]
   12f6c:	mov	r0, r9
   12f70:	b	12a78 <putc_unlocked@plt+0x8c0>
   12f74:	movw	r0, #38347	; 0x95cb
   12f78:	movt	r0, #3
   12f7c:	b	12a6c <putc_unlocked@plt+0x8b4>
   12f80:	movw	r0, #37724	; 0x935c
   12f84:	movt	r0, #3
   12f88:	b	13560 <putc_unlocked@plt+0x13a8>
   12f8c:	movw	r0, #38336	; 0x95c0
   12f90:	movt	r0, #3
   12f94:	mov	r1, #0
   12f98:	mov	r2, #1
   12f9c:	str	r2, [r0]
   12fa0:	str	r1, [r0, #4]
   12fa4:	movw	r0, #38328	; 0x95b8
   12fa8:	movt	r0, #3
   12fac:	mov	r3, #176	; 0xb0
   12fb0:	str	r3, [r0]
   12fb4:	movw	r0, #38324	; 0x95b4
   12fb8:	movt	r0, #3
   12fbc:	str	r3, [r0]
   12fc0:	movw	r0, #37536	; 0x92a0
   12fc4:	movt	r0, #3
   12fc8:	str	r2, [r0]
   12fcc:	str	r1, [r0, #4]
   12fd0:	mov	r0, r9
   12fd4:	b	12a78 <putc_unlocked@plt+0x8c0>
   12fd8:	movw	r0, #38320	; 0x95b0
   12fdc:	movt	r0, #3
   12fe0:	b	132a8 <putc_unlocked@plt+0x10f0>
   12fe4:	mov	r0, #8
   12fe8:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   12fec:	movw	r1, #37672	; 0x9328
   12ff0:	movt	r1, #3
   12ff4:	ldr	r1, [r1]
   12ff8:	movw	r2, #38352	; 0x95d0
   12ffc:	movt	r2, #3
   13000:	ldr	r3, [r2]
   13004:	stm	r0, {r1, r3}
   13008:	str	r0, [r2]
   1300c:	mov	r0, r9
   13010:	b	12a78 <putc_unlocked@plt+0x8c0>
   13014:	mov	r8, #1
   13018:	mov	r0, r9
   1301c:	b	12a78 <putc_unlocked@plt+0x8c0>
   13020:	movw	r0, #38348	; 0x95cc
   13024:	movt	r0, #3
   13028:	b	12a6c <putc_unlocked@plt+0x8b4>
   1302c:	movw	r0, #38316	; 0x95ac
   13030:	movt	r0, #3
   13034:	mov	r1, #1
   13038:	b	13564 <putc_unlocked@plt+0x13ac>
   1303c:	movw	r0, #37720	; 0x9358
   13040:	movt	r0, #3
   13044:	b	12a6c <putc_unlocked@plt+0x8b4>
   13048:	movw	r0, #37724	; 0x935c
   1304c:	movt	r0, #3
   13050:	mov	r1, #1
   13054:	b	13564 <putc_unlocked@plt+0x13ac>
   13058:	movw	r0, #37788	; 0x939c
   1305c:	movt	r0, #3
   13060:	b	12a6c <putc_unlocked@plt+0x8b4>
   13064:	movw	r0, #37672	; 0x9328
   13068:	movt	r0, #3
   1306c:	ldr	r1, [r0]
   13070:	cmp	r1, #0
   13074:	beq	13674 <putc_unlocked@plt+0x14bc>
   13078:	movw	r0, #37568	; 0x92c0
   1307c:	movt	r0, #3
   13080:	ldr	r0, [r0]
   13084:	mov	r4, #1
   13088:	mov	r2, #4
   1308c:	str	r2, [sp]
   13090:	stmib	sp, {r0, r4}
   13094:	movw	r0, #25773	; 0x64ad
   13098:	movt	r0, #2
   1309c:	movw	r2, #28820	; 0x7094
   130a0:	movt	r2, #2
   130a4:	movw	r6, #28784	; 0x7070
   130a8:	movt	r6, #2
   130ac:	mov	r3, r6
   130b0:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   130b4:	ldr	r0, [r6, r0, lsl #2]
   130b8:	cmp	r0, #1
   130bc:	beq	13688 <putc_unlocked@plt+0x14d0>
   130c0:	cmp	r0, #2
   130c4:	bne	13684 <putc_unlocked@plt+0x14cc>
   130c8:	bl	162a0 <putc_unlocked@plt+0x40e8>
   130cc:	mov	r4, r0
   130d0:	b	13688 <putc_unlocked@plt+0x14d0>
   130d4:	movw	r0, #38346	; 0x95ca
   130d8:	movt	r0, #3
   130dc:	b	132a8 <putc_unlocked@plt+0x10f0>
   130e0:	mov	r0, #1
   130e4:	b	135a0 <putc_unlocked@plt+0x13e8>
   130e8:	mov	r8, #3
   130ec:	mov	r0, r9
   130f0:	b	12a78 <putc_unlocked@plt+0x8c0>
   130f4:	movw	r0, #37672	; 0x9328
   130f8:	movt	r0, #3
   130fc:	ldr	r0, [r0]
   13100:	movw	r4, #38324	; 0x95b4
   13104:	movt	r4, #3
   13108:	movw	r6, #38336	; 0x95c0
   1310c:	movt	r6, #3
   13110:	mov	r1, r4
   13114:	mov	r2, r6
   13118:	bl	1d698 <putc_unlocked@plt+0xb4e0>
   1311c:	cmp	r0, #0
   13120:	bne	13eb4 <putc_unlocked@plt+0x1cfc>
   13124:	ldrd	r0, [r6]
   13128:	movw	r2, #37536	; 0x92a0
   1312c:	movt	r2, #3
   13130:	strd	r0, [r2]
   13134:	ldr	r0, [r4]
   13138:	movw	r1, #38328	; 0x95b8
   1313c:	movt	r1, #3
   13140:	str	r0, [r1]
   13144:	b	13694 <putc_unlocked@plt+0x14dc>
   13148:	movw	r0, #37716	; 0x9354
   1314c:	movt	r0, #3
   13150:	mov	r1, #4
   13154:	b	13564 <putc_unlocked@plt+0x13ac>
   13158:	movw	r0, #37700	; 0x9344
   1315c:	movt	r0, #3
   13160:	mov	r1, #0
   13164:	strb	r1, [r0]
   13168:	movw	r0, #38312	; 0x95a8
   1316c:	movt	r0, #3
   13170:	mov	r2, #2
   13174:	str	r2, [r0]
   13178:	movw	r0, #37884	; 0x93fc
   1317c:	movt	r0, #3
   13180:	strb	r1, [r0]
   13184:	movw	r0, #37789	; 0x939d
   13188:	movt	r0, #3
   1318c:	strb	r1, [r0]
   13190:	ldr	r0, [sp, #36]	; 0x24
   13194:	cmp	r0, #0
   13198:	mvneq	r0, #0
   1319c:	str	r0, [sp, #36]	; 0x24
   131a0:	mov	r8, #6
   131a4:	mov	r0, r9
   131a8:	b	12a78 <putc_unlocked@plt+0x8c0>
   131ac:	mov	r0, #2
   131b0:	b	13590 <putc_unlocked@plt+0x13d8>
   131b4:	mov	r0, #5
   131b8:	b	12a78 <putc_unlocked@plt+0x8c0>
   131bc:	movw	r0, #37672	; 0x9328
   131c0:	movt	r0, #3
   131c4:	ldr	r1, [r0]
   131c8:	cmp	r1, #0
   131cc:	beq	13230 <putc_unlocked@plt+0x1078>
   131d0:	movw	r0, #37568	; 0x92c0
   131d4:	movt	r0, #3
   131d8:	ldr	r0, [r0]
   131dc:	mov	r2, #1
   131e0:	mov	r3, #4
   131e4:	str	r3, [sp]
   131e8:	stmib	sp, {r0, r2}
   131ec:	movw	r0, #25705	; 0x6469
   131f0:	movt	r0, #2
   131f4:	movw	r2, #28820	; 0x7094
   131f8:	movt	r2, #2
   131fc:	movw	r4, #28784	; 0x7070
   13200:	movt	r4, #2
   13204:	mov	r3, r4
   13208:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   1320c:	ldr	r0, [r4, r0, lsl #2]
   13210:	mvn	r4, #0
   13214:	cmp	r0, #1
   13218:	beq	13230 <putc_unlocked@plt+0x1078>
   1321c:	cmp	r0, #2
   13220:	bne	136a0 <putc_unlocked@plt+0x14e8>
   13224:	bl	162a0 <putc_unlocked@plt+0x40e8>
   13228:	cmp	r0, #0
   1322c:	beq	136c4 <putc_unlocked@plt+0x150c>
   13230:	movw	r0, #37724	; 0x935c
   13234:	movt	r0, #3
   13238:	mov	r1, #3
   1323c:	b	13564 <putc_unlocked@plt+0x13ac>
   13240:	movw	r0, #38312	; 0x95a8
   13244:	movt	r0, #3
   13248:	b	13560 <putc_unlocked@plt+0x13a8>
   1324c:	movw	r0, #25702	; 0x6466
   13250:	movt	r0, #2
   13254:	bl	16270 <putc_unlocked@plt+0x40b8>
   13258:	movw	r0, #25701	; 0x6465
   1325c:	movt	r0, #2
   13260:	b	1328c <putc_unlocked@plt+0x10d4>
   13264:	movw	r0, #38312	; 0x95a8
   13268:	movt	r0, #3
   1326c:	mov	r1, #1
   13270:	b	13564 <putc_unlocked@plt+0x13ac>
   13274:	movw	r0, #37716	; 0x9354
   13278:	movt	r0, #3
   1327c:	b	13560 <putc_unlocked@plt+0x13a8>
   13280:	movw	r0, #37672	; 0x9328
   13284:	movt	r0, #3
   13288:	ldr	r0, [r0]
   1328c:	bl	16270 <putc_unlocked@plt+0x40b8>
   13290:	mov	r0, r9
   13294:	b	12a78 <putc_unlocked@plt+0x8c0>
   13298:	mov	r0, #4
   1329c:	b	13590 <putc_unlocked@plt+0x13d8>
   132a0:	movw	r0, #38345	; 0x95c9
   132a4:	movt	r0, #3
   132a8:	mov	r1, #1
   132ac:	strb	r1, [r0]
   132b0:	b	1358c <putc_unlocked@plt+0x13d4>
   132b4:	movw	r0, #37672	; 0x9328
   132b8:	movt	r0, #3
   132bc:	ldr	r1, [r0]
   132c0:	movw	r0, #37568	; 0x92c0
   132c4:	movt	r0, #3
   132c8:	ldr	r0, [r0]
   132cc:	mov	r2, #1
   132d0:	mov	r3, #4
   132d4:	str	r3, [sp]
   132d8:	stmib	sp, {r0, r2}
   132dc:	movw	r0, #25747	; 0x6493
   132e0:	movt	r0, #2
   132e4:	movw	r2, #29000	; 0x7148
   132e8:	movt	r2, #2
   132ec:	movw	r4, #28972	; 0x712c
   132f0:	movt	r4, #2
   132f4:	mov	r3, r4
   132f8:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   132fc:	ldr	r0, [r4, r0, lsl #2]
   13300:	mvn	r4, #0
   13304:	b	13590 <putc_unlocked@plt+0x13d8>
   13308:	movw	r0, #38346	; 0x95ca
   1330c:	movt	r0, #3
   13310:	b	12a6c <putc_unlocked@plt+0x8b4>
   13314:	mov	r0, #3
   13318:	b	13590 <putc_unlocked@plt+0x13d8>
   1331c:	movw	r0, #37792	; 0x93a0
   13320:	movt	r0, #3
   13324:	b	12a6c <putc_unlocked@plt+0x8b4>
   13328:	movw	r0, #38344	; 0x95c8
   1332c:	movt	r0, #3
   13330:	b	12a6c <putc_unlocked@plt+0x8b4>
   13334:	mov	r6, sl
   13338:	movw	r0, #37672	; 0x9328
   1333c:	movt	r0, #3
   13340:	ldr	r1, [r0]
   13344:	cmp	r1, #0
   13348:	beq	1367c <putc_unlocked@plt+0x14c4>
   1334c:	movw	r0, #37568	; 0x92c0
   13350:	movt	r0, #3
   13354:	ldr	r0, [r0]
   13358:	mov	sl, #1
   1335c:	mov	r2, #4
   13360:	str	r2, [sp]
   13364:	stmib	sp, {r0, sl}
   13368:	movw	r0, #25765	; 0x64a5
   1336c:	movt	r0, #2
   13370:	movw	r2, #28820	; 0x7094
   13374:	movt	r2, #2
   13378:	movw	r4, #28784	; 0x7070
   1337c:	movt	r4, #2
   13380:	mov	r3, r4
   13384:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   13388:	ldr	r0, [r4, r0, lsl #2]
   1338c:	mvn	r4, #0
   13390:	cmp	r0, #1
   13394:	beq	136ac <putc_unlocked@plt+0x14f4>
   13398:	cmp	r0, #2
   1339c:	bne	136a8 <putc_unlocked@plt+0x14f0>
   133a0:	bl	162a0 <putc_unlocked@plt+0x40e8>
   133a4:	mov	sl, r0
   133a8:	b	136ac <putc_unlocked@plt+0x14f4>
   133ac:	movw	r0, #37728	; 0x9360
   133b0:	movt	r0, #3
   133b4:	b	12a6c <putc_unlocked@plt+0x8b4>
   133b8:	movw	r1, #37700	; 0x9344
   133bc:	movt	r1, #3
   133c0:	mov	r0, #0
   133c4:	strb	r0, [r1]
   133c8:	movw	r1, #38356	; 0x95d4
   133cc:	movt	r1, #3
   133d0:	mov	r2, #1
   133d4:	strb	r2, [r1]
   133d8:	ldr	r1, [sp, #36]	; 0x24
   133dc:	cmp	r1, #0
   133e0:	movwne	r1, #1
   133e4:	str	r1, [sp, #36]	; 0x24
   133e8:	mov	r1, #0
   133ec:	str	r1, [sp, #32]
   133f0:	b	12a78 <putc_unlocked@plt+0x8c0>
   133f4:	movw	r0, #37672	; 0x9328
   133f8:	movt	r0, #3
   133fc:	ldr	r4, [r0]
   13400:	mov	r6, #0
   13404:	movw	r1, #25716	; 0x6474
   13408:	movt	r1, #2
   1340c:	mov	r0, #0
   13410:	mov	r2, #5
   13414:	bl	11dbc <dcgettext@plt>
   13418:	mov	r1, #2
   1341c:	movw	r2, #27261	; 0x6a7d
   13420:	movt	r2, #2
   13424:	mvn	r3, #-2147483648	; 0x80000000
   13428:	stm	sp, {r3, r6}
   1342c:	str	r2, [sp, #8]
   13430:	str	r0, [sp, #12]
   13434:	str	r1, [sp, #16]
   13438:	mov	r0, r4
   1343c:	mvn	r4, #0
   13440:	mov	r1, #0
   13444:	mov	r2, #0
   13448:	mov	r3, #0
   1344c:	bl	231b8 <_obstack_memory_used@@Base+0x2df0>
   13450:	str	r0, [sp, #24]
   13454:	mov	r0, r9
   13458:	b	12a78 <putc_unlocked@plt+0x8c0>
   1345c:	movw	r6, #37672	; 0x9328
   13460:	movt	r6, #3
   13464:	ldr	r0, [r6]
   13468:	bl	16200 <putc_unlocked@plt+0x4048>
   1346c:	str	r0, [sp, #28]
   13470:	cmn	r0, #1
   13474:	mov	r0, r9
   13478:	bgt	12a78 <putc_unlocked@plt+0x8c0>
   1347c:	b	13ed8 <putc_unlocked@plt+0x1d20>
   13480:	mov	r0, #0
   13484:	b	12a78 <putc_unlocked@plt+0x8c0>
   13488:	mov	r0, #1
   1348c:	str	r0, [sp, #20]
   13490:	mov	r0, r9
   13494:	b	12a78 <putc_unlocked@plt+0x8c0>
   13498:	movw	r0, #37672	; 0x9328
   1349c:	movt	r0, #3
   134a0:	ldr	r1, [r0]
   134a4:	movw	r0, #37568	; 0x92c0
   134a8:	movt	r0, #3
   134ac:	ldr	r0, [r0]
   134b0:	mov	r2, #1
   134b4:	mov	r3, #4
   134b8:	str	r3, [sp]
   134bc:	stmib	sp, {r0, r2}
   134c0:	movw	r0, #25733	; 0x6485
   134c4:	movt	r0, #2
   134c8:	movw	r2, #28884	; 0x70d4
   134cc:	movt	r2, #2
   134d0:	movw	r4, #28860	; 0x70bc
   134d4:	movt	r4, #2
   134d8:	mov	r3, r4
   134dc:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   134e0:	ldr	r8, [r4, r0, lsl #2]
   134e4:	mvn	r4, #0
   134e8:	mov	r0, r9
   134ec:	b	12a78 <putc_unlocked@plt+0x8c0>
   134f0:	mov	r8, #5
   134f4:	mov	r0, r9
   134f8:	b	12a78 <putc_unlocked@plt+0x8c0>
   134fc:	movw	r0, #37672	; 0x9328
   13500:	movt	r0, #3
   13504:	ldr	r1, [r0]
   13508:	movw	r0, #37568	; 0x92c0
   1350c:	movt	r0, #3
   13510:	ldr	r0, [r0]
   13514:	mov	r2, #1
   13518:	mov	r3, #4
   1351c:	str	r3, [sp]
   13520:	stmib	sp, {r0, r2}
   13524:	movw	r0, #25740	; 0x648c
   13528:	movt	r0, #2
   1352c:	movw	r2, #28940	; 0x710c
   13530:	movt	r2, #2
   13534:	movw	r4, #28912	; 0x70f0
   13538:	movt	r4, #2
   1353c:	mov	r3, r4
   13540:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   13544:	ldr	r0, [r4, r0, lsl #2]
   13548:	mvn	r4, #0
   1354c:	movw	r1, #38316	; 0x95ac
   13550:	movt	r1, #3
   13554:	b	13668 <putc_unlocked@plt+0x14b0>
   13558:	movw	r0, #38316	; 0x95ac
   1355c:	movt	r0, #3
   13560:	mov	r1, #2
   13564:	str	r1, [r0]
   13568:	mov	r0, r9
   1356c:	b	12a78 <putc_unlocked@plt+0x8c0>
   13570:	mov	r8, #4
   13574:	mov	r0, r9
   13578:	b	12a78 <putc_unlocked@plt+0x8c0>
   1357c:	movw	sl, #25756	; 0x649c
   13580:	movt	sl, #2
   13584:	mov	r0, sl
   13588:	bl	162d8 <putc_unlocked@plt+0x4120>
   1358c:	mov	r0, #0
   13590:	str	r0, [sp, #36]	; 0x24
   13594:	mov	r0, r9
   13598:	b	12a78 <putc_unlocked@plt+0x8c0>
   1359c:	mov	r0, #0
   135a0:	str	r0, [sp, #32]
   135a4:	mov	r0, r9
   135a8:	b	12a78 <putc_unlocked@plt+0x8c0>
   135ac:	movw	r0, #37716	; 0x9354
   135b0:	movt	r0, #3
   135b4:	mov	r1, #3
   135b8:	b	13564 <putc_unlocked@plt+0x13ac>
   135bc:	movw	r0, #37672	; 0x9328
   135c0:	movt	r0, #3
   135c4:	ldr	r1, [r0]
   135c8:	movw	r0, #37568	; 0x92c0
   135cc:	movt	r0, #3
   135d0:	ldr	r0, [r0]
   135d4:	mov	r2, #1
   135d8:	mov	r3, #4
   135dc:	str	r3, [sp]
   135e0:	stmib	sp, {r0, r2}
   135e4:	movw	r0, #25803	; 0x64cb
   135e8:	movt	r0, #2
   135ec:	movw	r2, #34540	; 0x86ec
   135f0:	movt	r2, #2
   135f4:	movw	r4, #34584	; 0x8718
   135f8:	movt	r4, #2
   135fc:	mov	r3, r4
   13600:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   13604:	ldr	r0, [r4, r0, lsl #2]
   13608:	mvn	r4, #0
   1360c:	b	12a78 <putc_unlocked@plt+0x8c0>
   13610:	movw	r0, #37672	; 0x9328
   13614:	movt	r0, #3
   13618:	ldr	r1, [r0]
   1361c:	movw	r0, #37568	; 0x92c0
   13620:	movt	r0, #3
   13624:	ldr	r0, [r0]
   13628:	mov	r2, #1
   1362c:	mov	r3, #4
   13630:	str	r3, [sp]
   13634:	stmib	sp, {r0, r2}
   13638:	movw	r0, #25785	; 0x64b9
   1363c:	movt	r0, #2
   13640:	movw	r2, #29048	; 0x7178
   13644:	movt	r2, #2
   13648:	movw	r4, #29032	; 0x7168
   1364c:	movt	r4, #2
   13650:	mov	r3, r4
   13654:	bl	1a6f4 <putc_unlocked@plt+0x853c>
   13658:	ldr	r0, [r4, r0, lsl #2]
   1365c:	mvn	r4, #0
   13660:	movw	r1, #37724	; 0x935c
   13664:	movt	r1, #3
   13668:	str	r0, [r1]
   1366c:	mov	r0, r9
   13670:	b	12a78 <putc_unlocked@plt+0x8c0>
   13674:	mov	r4, #1
   13678:	b	13688 <putc_unlocked@plt+0x14d0>
   1367c:	mov	sl, #1
   13680:	b	136ac <putc_unlocked@plt+0x14f4>
   13684:	mov	r4, #0
   13688:	movw	r0, #37884	; 0x93fc
   1368c:	movt	r0, #3
   13690:	strb	r4, [r0]
   13694:	mov	r0, r9
   13698:	mvn	r4, #0
   1369c:	b	12a78 <putc_unlocked@plt+0x8c0>
   136a0:	mov	r0, r9
   136a4:	b	12a78 <putc_unlocked@plt+0x8c0>
   136a8:	mov	sl, #0
   136ac:	movw	r0, #37700	; 0x9344
   136b0:	movt	r0, #3
   136b4:	strb	sl, [r0]
   136b8:	mov	r0, r9
   136bc:	mov	sl, r6
   136c0:	b	12a78 <putc_unlocked@plt+0x8c0>
   136c4:	mov	r0, r9
   136c8:	b	12a78 <putc_unlocked@plt+0x8c0>
   136cc:	movw	r0, #38336	; 0x95c0
   136d0:	movt	r0, #3
   136d4:	ldrd	r0, [r0]
   136d8:	orrs	r0, r0, r1
   136dc:	bne	13760 <putc_unlocked@plt+0x15a8>
   136e0:	movw	r0, #25869	; 0x650d
   136e4:	movt	r0, #2
   136e8:	bl	11f00 <getenv@plt>
   136ec:	mov	r4, r0
   136f0:	movw	r5, #38324	; 0x95b4
   136f4:	movt	r5, #3
   136f8:	movw	r6, #38336	; 0x95c0
   136fc:	movt	r6, #3
   13700:	mov	r1, r5
   13704:	mov	r2, r6
   13708:	bl	1d698 <putc_unlocked@plt+0xb4e0>
   1370c:	cmp	r4, #0
   13710:	bne	13728 <putc_unlocked@plt+0x1570>
   13714:	movw	r0, #25872	; 0x6510
   13718:	movt	r0, #2
   1371c:	bl	11f00 <getenv@plt>
   13720:	cmp	r0, #0
   13724:	beq	13748 <putc_unlocked@plt+0x1590>
   13728:	ldrd	r0, [r6]
   1372c:	movw	r2, #37536	; 0x92a0
   13730:	movt	r2, #3
   13734:	strd	r0, [r2]
   13738:	ldr	r0, [r5]
   1373c:	movw	r1, #38328	; 0x95b8
   13740:	movt	r1, #3
   13744:	str	r0, [r1]
   13748:	ldr	r0, [sp, #20]
   1374c:	tst	r0, #1
   13750:	movne	r1, #0
   13754:	movne	r0, #1024	; 0x400
   13758:	strdne	r0, [r6]
   1375c:	strne	r1, [r5]
   13760:	ldr	r1, [sp, #36]	; 0x24
   13764:	cmn	r1, #1
   13768:	ldr	r5, [sp, #28]
   1376c:	bgt	137a8 <putc_unlocked@plt+0x15f0>
   13770:	movw	r0, #37560	; 0x92b8
   13774:	movt	r0, #3
   13778:	ldr	r0, [r0]
   1377c:	cmp	r0, #1
   13780:	bne	13798 <putc_unlocked@plt+0x15e0>
   13784:	bl	162a0 <putc_unlocked@plt+0x40e8>
   13788:	mov	r1, #1
   1378c:	cmp	r0, #0
   13790:	movwne	r1, #2
   13794:	b	137a8 <putc_unlocked@plt+0x15f0>
   13798:	sub	r0, r0, #2
   1379c:	clz	r0, r0
   137a0:	lsr	r0, r0, #5
   137a4:	lsl	r1, r0, #1
   137a8:	movw	r6, #37712	; 0x9350
   137ac:	movt	r6, #3
   137b0:	str	r1, [r6]
   137b4:	sub	r1, r1, #2
   137b8:	mov	r0, #0
   137bc:	cmp	r1, #3
   137c0:	movwcc	r0, #1
   137c4:	movw	r1, #37700	; 0x9344
   137c8:	movt	r1, #3
   137cc:	ldrb	r1, [r1]
   137d0:	cmp	r1, #0
   137d4:	movwne	r1, #1
   137d8:	cmn	r5, #1
   137dc:	bgt	13894 <putc_unlocked@plt+0x16dc>
   137e0:	orrs	r0, r0, r1
   137e4:	beq	13894 <putc_unlocked@plt+0x16dc>
   137e8:	bl	162a0 <putc_unlocked@plt+0x40e8>
   137ec:	cmp	r0, #0
   137f0:	beq	13820 <putc_unlocked@plt+0x1668>
   137f4:	add	r2, sp, #40	; 0x28
   137f8:	mov	r0, #1
   137fc:	movw	r1, #21523	; 0x5413
   13800:	bl	11e64 <ioctl@plt>
   13804:	cmp	r0, #0
   13808:	blt	13820 <putc_unlocked@plt+0x1668>
   1380c:	ldrh	r0, [sp, #42]	; 0x2a
   13810:	cmp	r0, #0
   13814:	beq	13820 <putc_unlocked@plt+0x1668>
   13818:	mov	r5, r0
   1381c:	b	13894 <putc_unlocked@plt+0x16dc>
   13820:	movw	r0, #25883	; 0x651b
   13824:	movt	r0, #2
   13828:	bl	11f00 <getenv@plt>
   1382c:	cmp	r0, #0
   13830:	beq	13894 <putc_unlocked@plt+0x16dc>
   13834:	mov	r4, r0
   13838:	ldrb	r0, [r0]
   1383c:	cmp	r0, #0
   13840:	beq	13894 <putc_unlocked@plt+0x16dc>
   13844:	mov	r0, r4
   13848:	bl	16200 <putc_unlocked@plt+0x4048>
   1384c:	mov	r5, r0
   13850:	cmn	r0, #1
   13854:	bgt	13894 <putc_unlocked@plt+0x16dc>
   13858:	movw	r1, #25891	; 0x6523
   1385c:	movt	r1, #2
   13860:	mov	r0, #0
   13864:	mov	r2, #5
   13868:	bl	11dbc <dcgettext@plt>
   1386c:	mov	r7, r5
   13870:	mov	r5, r0
   13874:	mov	r0, r4
   13878:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   1387c:	mov	r3, r0
   13880:	mov	r0, #0
   13884:	mov	r1, #0
   13888:	mov	r2, r5
   1388c:	mov	r5, r7
   13890:	bl	11ec4 <error@plt>
   13894:	cmp	r5, #0
   13898:	movwlt	r5, #80	; 0x50
   1389c:	movw	r7, #38360	; 0x95d8
   138a0:	movt	r7, #3
   138a4:	str	r5, [r7]
   138a8:	movw	r0, #43691	; 0xaaab
   138ac:	movt	r0, #43690	; 0xaaaa
   138b0:	umull	r0, r1, r5, r0
   138b4:	mov	r0, #1
   138b8:	lsr	r2, r1, #1
   138bc:	add	r3, r2, r2, lsl #1
   138c0:	subs	r3, r5, r3
   138c4:	addne	r2, r0, r1, lsr #1
   138c8:	movw	r0, #38364	; 0x95dc
   138cc:	movt	r0, #3
   138d0:	str	r2, [r0]
   138d4:	ldr	r0, [r6]
   138d8:	sub	r0, r0, #2
   138dc:	cmp	r0, #2
   138e0:	bhi	138fc <putc_unlocked@plt+0x1744>
   138e4:	ldr	r1, [sp, #24]
   138e8:	cmp	r1, #0
   138ec:	blt	13b24 <putc_unlocked@plt+0x196c>
   138f0:	movw	r0, #37704	; 0x9348
   138f4:	movt	r0, #3
   138f8:	str	r1, [r0]
   138fc:	ldr	r0, [sp, #32]
   13900:	cmn	r0, #1
   13904:	bgt	13920 <putc_unlocked@plt+0x1768>
   13908:	movw	r0, #37560	; 0x92b8
   1390c:	movt	r0, #3
   13910:	ldr	r1, [r0]
   13914:	mov	r0, #0
   13918:	cmp	r1, #1
   1391c:	bleq	162a0 <putc_unlocked@plt+0x40e8>
   13920:	cmp	r0, #0
   13924:	movwne	r0, #1
   13928:	movw	r1, #38368	; 0x95e0
   1392c:	movt	r1, #3
   13930:	strb	r0, [r1]
   13934:	cmn	r9, #1
   13938:	bgt	13974 <putc_unlocked@plt+0x17bc>
   1393c:	bl	162dc <putc_unlocked@plt+0x4124>
   13940:	mov	r9, r0
   13944:	cmn	r0, #1
   13948:	bgt	13974 <putc_unlocked@plt+0x17bc>
   1394c:	movw	r0, #37560	; 0x92b8
   13950:	movt	r0, #3
   13954:	ldr	r0, [r0]
   13958:	mov	r9, #7
   1395c:	cmp	r0, #1
   13960:	bne	13974 <putc_unlocked@plt+0x17bc>
   13964:	mov	r9, #3
   13968:	bl	162a0 <putc_unlocked@plt+0x40e8>
   1396c:	cmp	r0, #0
   13970:	beq	13980 <putc_unlocked@plt+0x17c8>
   13974:	mov	r0, #0
   13978:	mov	r1, r9
   1397c:	bl	20558 <_obstack_memory_used@@Base+0x190>
   13980:	mov	r4, #0
   13984:	mov	r0, #0
   13988:	bl	20540 <_obstack_memory_used@@Base+0x178>
   1398c:	mov	r5, r0
   13990:	ldr	r0, [r6]
   13994:	cmp	r0, #0
   13998:	beq	139b4 <putc_unlocked@plt+0x17fc>
   1399c:	orr	r0, r0, #1
   139a0:	cmp	r0, #3
   139a4:	bne	139d4 <putc_unlocked@plt+0x181c>
   139a8:	ldr	r0, [r7]
   139ac:	cmp	r0, #0
   139b0:	beq	139d4 <putc_unlocked@plt+0x181c>
   139b4:	sub	r0, r5, #6
   139b8:	clz	r0, r0
   139bc:	lsr	r0, r0, #5
   139c0:	orr	r1, r5, #2
   139c4:	sub	r1, r1, #3
   139c8:	clz	r1, r1
   139cc:	lsr	r1, r1, #5
   139d0:	orr	r4, r0, r1
   139d4:	movw	r0, #38369	; 0x95e1
   139d8:	movt	r0, #3
   139dc:	strb	r4, [r0]
   139e0:	mov	r0, #0
   139e4:	bl	20504 <_obstack_memory_used@@Base+0x13c>
   139e8:	movw	r4, #37916	; 0x941c
   139ec:	movt	r4, #3
   139f0:	str	r0, [r4]
   139f4:	cmp	r5, #7
   139f8:	bne	13a08 <putc_unlocked@plt+0x1850>
   139fc:	mov	r1, #32
   13a00:	mov	r2, #1
   13a04:	bl	20570 <_obstack_memory_used@@Base+0x1a8>
   13a08:	movw	r0, #37724	; 0x935c
   13a0c:	movt	r0, #3
   13a10:	ldr	r0, [r0]
   13a14:	cmp	r0, #2
   13a18:	bcc	13a58 <putc_unlocked@plt+0x18a0>
   13a1c:	sub	r1, r0, #2
   13a20:	cmp	r1, #5
   13a24:	beq	13a58 <putc_unlocked@plt+0x18a0>
   13a28:	movw	r2, #26020	; 0x65a4
   13a2c:	movt	r2, #2
   13a30:	ldrb	r1, [r2, r1]
   13a34:	add	r0, r2, r0
   13a38:	sub	r5, r0, #1
   13a3c:	ldr	r0, [r4]
   13a40:	uxtb	r1, r1
   13a44:	mov	r2, #1
   13a48:	bl	20570 <_obstack_memory_used@@Base+0x1a8>
   13a4c:	ldrb	r1, [r5], #1
   13a50:	cmp	r1, #0
   13a54:	bne	13a3c <putc_unlocked@plt+0x1884>
   13a58:	mov	r0, #0
   13a5c:	bl	20504 <_obstack_memory_used@@Base+0x13c>
   13a60:	movw	r1, #38372	; 0x95e4
   13a64:	movt	r1, #3
   13a68:	str	r0, [r1]
   13a6c:	mov	r1, #58	; 0x3a
   13a70:	mov	r2, #1
   13a74:	bl	20570 <_obstack_memory_used@@Base+0x1a8>
   13a78:	movw	r0, #37884	; 0x93fc
   13a7c:	movt	r0, #3
   13a80:	ldrb	r1, [r0]
   13a84:	ldr	r0, [r6]
   13a88:	clz	r2, r0
   13a8c:	lsr	r2, r2, #5
   13a90:	bic	r1, r2, r1
   13a94:	movw	r2, #37792	; 0x93a0
   13a98:	movt	r2, #3
   13a9c:	ldrb	r3, [r2]
   13aa0:	and	r1, r1, r3
   13aa4:	strb	r1, [r2]
   13aa8:	movw	r2, #38356	; 0x95d4
   13aac:	movt	r2, #3
   13ab0:	ldrb	r2, [r2]
   13ab4:	mov	r3, #10
   13ab8:	cmp	r2, #0
   13abc:	movwne	r3, #0
   13ac0:	cmp	r3, r1
   13ac4:	bcc	13f14 <putc_unlocked@plt+0x1d5c>
   13ac8:	cmn	r8, #1
   13acc:	ble	13af0 <putc_unlocked@plt+0x1938>
   13ad0:	movw	r1, #37784	; 0x9398
   13ad4:	movt	r1, #3
   13ad8:	str	r8, [r1]
   13adc:	cmp	r0, #0
   13ae0:	bne	13ca0 <putc_unlocked@plt+0x1ae8>
   13ae4:	cmp	sl, #0
   13ae8:	bne	13bf4 <putc_unlocked@plt+0x1a3c>
   13aec:	b	13bcc <putc_unlocked@plt+0x1a14>
   13af0:	cmp	r0, #0
   13af4:	beq	13bb4 <putc_unlocked@plt+0x19fc>
   13af8:	movw	r0, #38316	; 0x95ac
   13afc:	movt	r0, #3
   13b00:	ldr	r0, [r0]
   13b04:	sub	r0, r0, #1
   13b08:	mov	r1, #0
   13b0c:	cmp	r0, #3
   13b10:	movwcc	r1, #5
   13b14:	movw	r0, #37784	; 0x9398
   13b18:	movt	r0, #3
   13b1c:	str	r1, [r0]
   13b20:	b	13ca0 <putc_unlocked@plt+0x1ae8>
   13b24:	movw	r4, #37704	; 0x9348
   13b28:	movt	r4, #3
   13b2c:	mov	r0, #8
   13b30:	str	r0, [r4]
   13b34:	movw	r0, #25950	; 0x655e
   13b38:	movt	r0, #2
   13b3c:	bl	11f00 <getenv@plt>
   13b40:	cmp	r0, #0
   13b44:	beq	138fc <putc_unlocked@plt+0x1744>
   13b48:	mov	r5, r0
   13b4c:	movw	r0, #27261	; 0x6a7d
   13b50:	movt	r0, #2
   13b54:	str	r0, [sp]
   13b58:	add	r3, sp, #40	; 0x28
   13b5c:	mov	r0, r5
   13b60:	mov	r1, #0
   13b64:	mov	r2, #0
   13b68:	bl	234dc <_obstack_memory_used@@Base+0x3114>
   13b6c:	cmp	r0, #0
   13b70:	ldreq	r0, [sp, #44]	; 0x2c
   13b74:	cmpeq	r0, #0
   13b78:	beq	13d9c <putc_unlocked@plt+0x1be4>
   13b7c:	movw	r1, #25958	; 0x6566
   13b80:	movt	r1, #2
   13b84:	mov	r0, #0
   13b88:	mov	r2, #5
   13b8c:	bl	11dbc <dcgettext@plt>
   13b90:	mov	r4, r0
   13b94:	mov	r0, r5
   13b98:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   13b9c:	mov	r3, r0
   13ba0:	mov	r0, #0
   13ba4:	mov	r1, #0
   13ba8:	mov	r2, r4
   13bac:	bl	11ec4 <error@plt>
   13bb0:	b	138fc <putc_unlocked@plt+0x1744>
   13bb4:	movw	r0, #37784	; 0x9398
   13bb8:	movt	r0, #3
   13bbc:	mov	r1, #0
   13bc0:	str	r1, [r0]
   13bc4:	cmp	sl, #0
   13bc8:	bne	13bf4 <putc_unlocked@plt+0x1a3c>
   13bcc:	movw	r0, #26062	; 0x65ce
   13bd0:	movt	r0, #2
   13bd4:	bl	11f00 <getenv@plt>
   13bd8:	mov	sl, r0
   13bdc:	cmp	r0, #0
   13be0:	bne	13bf4 <putc_unlocked@plt+0x1a3c>
   13be4:	movw	sl, #18021	; 0x4665
   13be8:	movt	sl, #2
   13bec:	mov	r0, sl
   13bf0:	bl	162d8 <putc_unlocked@plt+0x4120>
   13bf4:	movw	r1, #29068	; 0x718c
   13bf8:	movt	r1, #2
   13bfc:	mov	r0, sl
   13c00:	mov	r2, #6
   13c04:	bl	12140 <strncmp@plt>
   13c08:	cmp	r0, #0
   13c0c:	bne	13c44 <putc_unlocked@plt+0x1a8c>
   13c10:	movw	r4, #29068	; 0x718c
   13c14:	movt	r4, #2
   13c18:	mov	r0, #2
   13c1c:	bl	1bd50 <putc_unlocked@plt+0x9b98>
   13c20:	cmp	r0, #0
   13c24:	beq	13ca0 <putc_unlocked@plt+0x1ae8>
   13c28:	add	sl, sl, #6
   13c2c:	mov	r0, sl
   13c30:	mov	r1, r4
   13c34:	mov	r2, #6
   13c38:	bl	12140 <strncmp@plt>
   13c3c:	cmp	r0, #0
   13c40:	beq	13c18 <putc_unlocked@plt+0x1a60>
   13c44:	ldrb	r0, [sl]
   13c48:	cmp	r0, #43	; 0x2b
   13c4c:	bne	13cb4 <putc_unlocked@plt+0x1afc>
   13c50:	add	r4, sl, #1
   13c54:	mov	r0, r4
   13c58:	mov	r1, #10
   13c5c:	bl	11fcc <strchr@plt>
   13c60:	cmp	r0, #0
   13c64:	mov	r5, r4
   13c68:	beq	13c90 <putc_unlocked@plt+0x1ad8>
   13c6c:	mov	r6, r0
   13c70:	add	r5, r0, #1
   13c74:	mov	r0, r5
   13c78:	mov	r1, #10
   13c7c:	bl	11fcc <strchr@plt>
   13c80:	cmp	r0, #0
   13c84:	bne	13f38 <putc_unlocked@plt+0x1d80>
   13c88:	mov	r0, #0
   13c8c:	strb	r0, [r6]
   13c90:	movw	r0, #37544	; 0x92a8
   13c94:	movt	r0, #3
   13c98:	stm	r0, {r4, r5}
   13c9c:	bl	1636c <putc_unlocked@plt+0x41b4>
   13ca0:	movw	r0, #37656	; 0x9318
   13ca4:	movt	r0, #3
   13ca8:	ldr	r0, [r0]
   13cac:	sub	sp, fp, #28
   13cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cb4:	movw	r5, #29076	; 0x7194
   13cb8:	movt	r5, #2
   13cbc:	movw	r2, #29096	; 0x71a8
   13cc0:	movt	r2, #2
   13cc4:	mov	r0, sl
   13cc8:	mov	r1, r5
   13ccc:	mov	r3, #4
   13cd0:	bl	1a438 <putc_unlocked@plt+0x8280>
   13cd4:	mov	r2, r0
   13cd8:	cmn	r0, #1
   13cdc:	ble	13d14 <putc_unlocked@plt+0x1b5c>
   13ce0:	cmp	r2, #3
   13ce4:	bhi	13c9c <putc_unlocked@plt+0x1ae4>
   13ce8:	add	r0, pc, #0
   13cec:	ldr	pc, [r0, r2, lsl #2]
   13cf0:	andeq	r3, r1, r0, lsl #26
   13cf4:	andeq	r3, r1, ip, lsl #28
   13cf8:	andeq	r3, r1, r8, lsr #27
   13cfc:	andeq	r3, r1, ip, asr #27
   13d00:	movw	r0, #37544	; 0x92a8
   13d04:	movt	r0, #3
   13d08:	movw	r1, #26205	; 0x665d
   13d0c:	movt	r1, #2
   13d10:	b	13e1c <putc_unlocked@plt+0x1c64>
   13d14:	movw	r0, #26102	; 0x65f6
   13d18:	movt	r0, #2
   13d1c:	mov	r1, sl
   13d20:	bl	1a57c <putc_unlocked@plt+0x83c4>
   13d24:	movw	r1, #26113	; 0x6601
   13d28:	movt	r1, #2
   13d2c:	mov	r0, #0
   13d30:	mov	r2, #5
   13d34:	bl	11dbc <dcgettext@plt>
   13d38:	movw	r6, #37664	; 0x9320
   13d3c:	movt	r6, #3
   13d40:	ldr	r1, [r6]
   13d44:	bl	11c84 <fputs_unlocked@plt>
   13d48:	add	r5, r5, #4
   13d4c:	movw	r3, #25756	; 0x649c
   13d50:	movt	r3, #2
   13d54:	movw	r4, #26135	; 0x6617
   13d58:	movt	r4, #2
   13d5c:	ldr	r0, [r6]
   13d60:	mov	r1, #1
   13d64:	mov	r2, r4
   13d68:	bl	12044 <__fprintf_chk@plt>
   13d6c:	ldr	r3, [r5], #4
   13d70:	cmp	r3, #0
   13d74:	bne	13d5c <putc_unlocked@plt+0x1ba4>
   13d78:	movw	r1, #26151	; 0x6627
   13d7c:	movt	r1, #2
   13d80:	mov	r0, #0
   13d84:	mov	r2, #5
   13d88:	bl	11dbc <dcgettext@plt>
   13d8c:	ldr	r1, [r6]
   13d90:	bl	11c84 <fputs_unlocked@plt>
   13d94:	mov	r0, #2
   13d98:	bl	15a08 <putc_unlocked@plt+0x3850>
   13d9c:	ldr	r0, [sp, #40]	; 0x28
   13da0:	str	r0, [r4]
   13da4:	b	138fc <putc_unlocked@plt+0x1744>
   13da8:	movw	r0, #37544	; 0x92a8
   13dac:	movt	r0, #3
   13db0:	movw	r1, #26232	; 0x6678
   13db4:	movt	r1, #2
   13db8:	movw	r2, #26244	; 0x6684
   13dbc:	movt	r2, #2
   13dc0:	str	r2, [r0]
   13dc4:	str	r1, [r0, #4]
   13dc8:	b	13c9c <putc_unlocked@plt+0x1ae4>
   13dcc:	mov	r0, #2
   13dd0:	bl	1bd50 <putc_unlocked@plt+0x9b98>
   13dd4:	cmp	r0, #0
   13dd8:	beq	13c9c <putc_unlocked@plt+0x1ae4>
   13ddc:	mov	r4, #0
   13de0:	movw	r5, #37544	; 0x92a8
   13de4:	movt	r5, #3
   13de8:	ldr	r1, [r5, r4, lsl #2]
   13dec:	mov	r0, #0
   13df0:	mov	r2, #2
   13df4:	bl	11dbc <dcgettext@plt>
   13df8:	str	r0, [r5, r4, lsl #2]
   13dfc:	add	r4, r4, #1
   13e00:	cmp	r4, #2
   13e04:	bne	13de8 <putc_unlocked@plt+0x1c30>
   13e08:	b	13c9c <putc_unlocked@plt+0x1ae4>
   13e0c:	movw	r0, #37544	; 0x92a8
   13e10:	movt	r0, #3
   13e14:	movw	r1, #26229	; 0x6675
   13e18:	movt	r1, #2
   13e1c:	str	r1, [r0]
   13e20:	str	r1, [r0, #4]
   13e24:	b	13c9c <putc_unlocked@plt+0x1ae4>
   13e28:	mov	r0, #2
   13e2c:	bl	15a08 <putc_unlocked@plt+0x3850>
   13e30:	movw	r0, #37564	; 0x92bc
   13e34:	movt	r0, #3
   13e38:	ldr	r3, [r0]
   13e3c:	movw	r0, #37668	; 0x9324
   13e40:	movt	r0, #3
   13e44:	ldr	r0, [r0]
   13e48:	movw	r1, #37560	; 0x92b8
   13e4c:	movt	r1, #3
   13e50:	ldr	r2, [r1]
   13e54:	mov	r1, #0
   13e58:	movw	r7, #25853	; 0x64fd
   13e5c:	movt	r7, #2
   13e60:	movw	r6, #25833	; 0x64e9
   13e64:	movt	r6, #2
   13e68:	stm	sp, {r6, r7}
   13e6c:	str	r1, [sp, #8]
   13e70:	movw	r1, #26477	; 0x676d
   13e74:	movt	r1, #2
   13e78:	movw	r7, #25459	; 0x6373
   13e7c:	movt	r7, #2
   13e80:	cmp	r2, #2
   13e84:	moveq	r7, r1
   13e88:	movw	r1, #25830	; 0x64e6
   13e8c:	movt	r1, #2
   13e90:	cmp	r2, #1
   13e94:	movne	r1, r7
   13e98:	movw	r2, #25819	; 0x64db
   13e9c:	movt	r2, #2
   13ea0:	bl	22cbc <_obstack_memory_used@@Base+0x28f4>
   13ea4:	mov	r0, #0
   13ea8:	bl	11f9c <exit@plt>
   13eac:	mov	r0, #0
   13eb0:	bl	15a08 <putc_unlocked@plt+0x3850>
   13eb4:	movw	r1, #37672	; 0x9328
   13eb8:	movt	r1, #3
   13ebc:	ldr	r2, [r1]
   13ec0:	ldr	r1, [sp, #40]	; 0x28
   13ec4:	str	r2, [sp]
   13ec8:	movw	r3, #28064	; 0x6da0
   13ecc:	movt	r3, #2
   13ed0:	mov	r2, #0
   13ed4:	bl	23418 <_obstack_memory_used@@Base+0x3050>
   13ed8:	movw	r1, #25682	; 0x6452
   13edc:	movt	r1, #2
   13ee0:	mov	r0, #0
   13ee4:	mov	r2, #5
   13ee8:	bl	11dbc <dcgettext@plt>
   13eec:	mov	r4, r0
   13ef0:	ldr	r0, [r6]
   13ef4:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   13ef8:	str	r0, [sp]
   13efc:	movw	r2, #25675	; 0x644b
   13f00:	movt	r2, #2
   13f04:	mov	r0, #2
   13f08:	mov	r1, #0
   13f0c:	mov	r3, r4
   13f10:	bl	11ec4 <error@plt>
   13f14:	movw	r1, #26026	; 0x65aa
   13f18:	movt	r1, #2
   13f1c:	mov	r0, #0
   13f20:	mov	r2, #5
   13f24:	bl	11dbc <dcgettext@plt>
   13f28:	mov	r2, r0
   13f2c:	mov	r0, #2
   13f30:	mov	r1, #0
   13f34:	bl	11ec4 <error@plt>
   13f38:	movw	r1, #26073	; 0x65d9
   13f3c:	movt	r1, #2
   13f40:	mov	r0, #0
   13f44:	mov	r2, #5
   13f48:	bl	11dbc <dcgettext@plt>
   13f4c:	mov	r5, r0
   13f50:	mov	r0, r4
   13f54:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   13f58:	mov	r3, r0
   13f5c:	mov	r0, #2
   13f60:	mov	r1, #0
   13f64:	mov	r2, r5
   13f68:	bl	11ec4 <error@plt>
   13f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f70:	add	fp, sp, #28
   13f74:	sub	sp, sp, #12
   13f78:	movw	r0, #26885	; 0x6905
   13f7c:	movt	r0, #2
   13f80:	bl	11f00 <getenv@plt>
   13f84:	str	r0, [sp, #8]
   13f88:	cmp	r0, #0
   13f8c:	ldrbne	r1, [r0]
   13f90:	cmpne	r1, #0
   13f94:	bne	13fd0 <putc_unlocked@plt+0x1e18>
   13f98:	movw	r0, #26895	; 0x690f
   13f9c:	movt	r0, #2
   13fa0:	bl	11f00 <getenv@plt>
   13fa4:	cmp	r0, #0
   13fa8:	ldrbne	r0, [r0]
   13fac:	cmpne	r0, #0
   13fb0:	bne	14280 <putc_unlocked@plt+0x20c8>
   13fb4:	bl	165c8 <putc_unlocked@plt+0x4410>
   13fb8:	cmp	r0, #0
   13fbc:	bne	14280 <putc_unlocked@plt+0x20c8>
   13fc0:	movw	r0, #37700	; 0x9344
   13fc4:	movt	r0, #3
   13fc8:	mov	r1, #0
   13fcc:	b	14294 <putc_unlocked@plt+0x20dc>
   13fd0:	mov	r4, #0
   13fd4:	strb	r4, [sp, #2]
   13fd8:	movw	r1, #16191	; 0x3f3f
   13fdc:	strh	r1, [sp]
   13fe0:	bl	23154 <_obstack_memory_used@@Base+0x2d8c>
   13fe4:	movw	r6, #41456	; 0xa1f0
   13fe8:	movt	r6, #3
   13fec:	str	r0, [r6]
   13ff0:	str	r0, [sp, #4]
   13ff4:	mov	r0, #1
   13ff8:	movw	r8, #41460	; 0xa1f4
   13ffc:	movt	r8, #3
   14000:	movw	r9, #29112	; 0x71b8
   14004:	movt	r9, #2
   14008:	mov	r7, sp
   1400c:	b	14038 <putc_unlocked@plt+0x1e80>
   14010:	ldr	r0, [sp, #4]
   14014:	str	r0, [r4, #12]
   14018:	add	r3, r4, #8
   1401c:	add	r0, sp, #4
   14020:	add	r1, sp, #8
   14024:	mov	r2, #0
   14028:	bl	16668 <putc_unlocked@plt+0x44b0>
   1402c:	cmp	r0, #0
   14030:	mov	r0, #6
   14034:	movwne	r0, #1
   14038:	and	r0, r0, #7
   1403c:	sub	r0, r0, #1
   14040:	cmp	r0, #5
   14044:	bhi	142a0 <putc_unlocked@plt+0x20e8>
   14048:	add	r1, pc, #0
   1404c:	ldr	pc, [r1, r0, lsl #2]
   14050:	andeq	r4, r1, r8, rrx
   14054:	strheq	r4, [r1], -ip
   14058:	andeq	r4, r1, r4, ror #1
   1405c:	muleq	r1, ip, r0
   14060:	andeq	r4, r1, r0, lsr #5
   14064:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14068:	ldr	r5, [sp, #8]
   1406c:	ldrb	r0, [r5]
   14070:	cmp	r0, #42	; 0x2a
   14074:	beq	14134 <putc_unlocked@plt+0x1f7c>
   14078:	cmp	r0, #58	; 0x3a
   1407c:	beq	14180 <putc_unlocked@plt+0x1fc8>
   14080:	cmp	r0, #0
   14084:	beq	14250 <putc_unlocked@plt+0x2098>
   14088:	strb	r0, [sp]
   1408c:	add	r0, r5, #1
   14090:	str	r0, [sp, #8]
   14094:	mov	r0, #2
   14098:	b	14038 <putc_unlocked@plt+0x1e80>
   1409c:	ldr	r0, [sp, #8]
   140a0:	add	r1, r0, #1
   140a4:	str	r1, [sp, #8]
   140a8:	ldrb	r1, [r0]
   140ac:	mov	r0, #6
   140b0:	cmp	r1, #61	; 0x3d
   140b4:	bne	14038 <putc_unlocked@plt+0x1e80>
   140b8:	b	14010 <putc_unlocked@plt+0x1e58>
   140bc:	ldr	r1, [sp, #8]
   140c0:	ldrb	r2, [r1]
   140c4:	mov	r0, #6
   140c8:	cmp	r2, #0
   140cc:	beq	14038 <putc_unlocked@plt+0x1e80>
   140d0:	strb	r2, [sp, #1]
   140d4:	add	r0, r1, #1
   140d8:	str	r0, [sp, #8]
   140dc:	mov	r0, #3
   140e0:	b	14038 <putc_unlocked@plt+0x1e80>
   140e4:	ldr	r0, [sp, #8]
   140e8:	add	r1, r0, #1
   140ec:	str	r1, [sp, #8]
   140f0:	ldrb	r0, [r0]
   140f4:	cmp	r0, #61	; 0x3d
   140f8:	mov	r0, #6
   140fc:	bne	14038 <putc_unlocked@plt+0x1e80>
   14100:	mov	sl, #0
   14104:	movw	r5, #37344	; 0x91e0
   14108:	movt	r5, #3
   1410c:	ldr	r1, [r9, sl, lsl #2]
   14110:	mov	r0, r7
   14114:	bl	11ccc <strcmp@plt>
   14118:	cmp	r0, #0
   1411c:	beq	14190 <putc_unlocked@plt+0x1fd8>
   14120:	add	r5, r5, #8
   14124:	add	sl, sl, #1
   14128:	cmp	sl, #24
   1412c:	bne	1410c <putc_unlocked@plt+0x1f54>
   14130:	b	141b8 <putc_unlocked@plt+0x2000>
   14134:	mov	r0, #20
   14138:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   1413c:	mov	r4, r0
   14140:	ldr	r0, [r8]
   14144:	str	r0, [r4, #16]
   14148:	str	r4, [r8]
   1414c:	add	r0, r5, #1
   14150:	str	r0, [sp, #8]
   14154:	ldr	r0, [sp, #4]
   14158:	str	r0, [r4, #4]
   1415c:	add	r0, sp, #4
   14160:	add	r1, sp, #8
   14164:	mov	r2, #1
   14168:	mov	r3, r4
   1416c:	bl	16668 <putc_unlocked@plt+0x44b0>
   14170:	cmp	r0, #0
   14174:	mov	r0, #6
   14178:	movwne	r0, #4
   1417c:	b	14038 <putc_unlocked@plt+0x1e80>
   14180:	add	r0, r5, #1
   14184:	str	r0, [sp, #8]
   14188:	mov	r0, #1
   1418c:	b	14038 <putc_unlocked@plt+0x1e80>
   14190:	ldr	r0, [sp, #4]
   14194:	str	r0, [r5, #4]
   14198:	add	r0, sp, #4
   1419c:	add	r1, sp, #8
   141a0:	mov	r2, #0
   141a4:	mov	r3, r5
   141a8:	bl	16668 <putc_unlocked@plt+0x44b0>
   141ac:	cmp	r0, #0
   141b0:	mov	r0, #1
   141b4:	bne	14038 <putc_unlocked@plt+0x1e80>
   141b8:	mov	r0, #0
   141bc:	movw	r1, #26908	; 0x691c
   141c0:	movt	r1, #2
   141c4:	mov	r2, #5
   141c8:	bl	11dbc <dcgettext@plt>
   141cc:	mov	r5, r0
   141d0:	mov	r0, r7
   141d4:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   141d8:	mov	r3, r0
   141dc:	mov	r0, #0
   141e0:	mov	r1, #0
   141e4:	mov	r2, r5
   141e8:	bl	11ec4 <error@plt>
   141ec:	mov	r0, #6
   141f0:	b	14038 <putc_unlocked@plt+0x1e80>
   141f4:	mov	r4, #0
   141f8:	movw	r1, #26932	; 0x6934
   141fc:	movt	r1, #2
   14200:	mov	r0, #0
   14204:	mov	r2, #5
   14208:	bl	11dbc <dcgettext@plt>
   1420c:	mov	r2, r0
   14210:	mov	r0, #0
   14214:	mov	r1, #0
   14218:	bl	11ec4 <error@plt>
   1421c:	ldr	r0, [r6]
   14220:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   14224:	ldr	r0, [r8]
   14228:	cmp	r0, #0
   1422c:	beq	14244 <putc_unlocked@plt+0x208c>
   14230:	ldr	r5, [r0, #16]
   14234:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   14238:	cmp	r5, #0
   1423c:	mov	r0, r5
   14240:	bne	14230 <putc_unlocked@plt+0x2078>
   14244:	movw	r0, #37700	; 0x9344
   14248:	movt	r0, #3
   1424c:	strb	r4, [r0]
   14250:	movw	r0, #37344	; 0x91e0
   14254:	movt	r0, #3
   14258:	ldr	r1, [r0, #56]	; 0x38
   1425c:	cmp	r1, #6
   14260:	bne	14280 <putc_unlocked@plt+0x20c8>
   14264:	ldr	r0, [r0, #60]	; 0x3c
   14268:	movw	r1, #26984	; 0x6968
   1426c:	movt	r1, #2
   14270:	mov	r2, #6
   14274:	bl	12140 <strncmp@plt>
   14278:	cmp	r0, #0
   1427c:	beq	14288 <putc_unlocked@plt+0x20d0>
   14280:	sub	sp, fp, #28
   14284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14288:	movw	r0, #37710	; 0x934e
   1428c:	movt	r0, #3
   14290:	mov	r1, #1
   14294:	strb	r1, [r0]
   14298:	sub	sp, fp, #28
   1429c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142a0:	bl	1214c <abort@plt>
   142a4:	movw	r2, #37344	; 0x91e0
   142a8:	movt	r2, #3
   142ac:	ldr	r1, [r2, r0, lsl #3]!
   142b0:	mov	r0, #0
   142b4:	cmp	r1, #0
   142b8:	bxeq	lr
   142bc:	ldr	r2, [r2, #4]
   142c0:	cmp	r1, #2
   142c4:	beq	142dc <putc_unlocked@plt+0x2124>
   142c8:	cmp	r1, #1
   142cc:	ldrbeq	r1, [r2]
   142d0:	cmpeq	r1, #48	; 0x30
   142d4:	movne	r0, #1
   142d8:	bx	lr
   142dc:	push	{fp, lr}
   142e0:	mov	fp, sp
   142e4:	movw	r1, #25464	; 0x6378
   142e8:	movt	r1, #2
   142ec:	mov	r0, r2
   142f0:	mov	r2, #2
   142f4:	bl	12140 <strncmp@plt>
   142f8:	cmp	r0, #0
   142fc:	movwne	r0, #1
   14300:	pop	{fp, pc}
   14304:	push	{fp, lr}
   14308:	mov	fp, sp
   1430c:	mov	r2, r1
   14310:	ldrd	r0, [r0]
   14314:	mov	r3, #0
   14318:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1431c:	mov	r0, r2
   14320:	pop	{fp, pc}
   14324:	push	{r4, r5, fp, lr}
   14328:	add	fp, sp, #8
   1432c:	ldrd	r2, [r1]
   14330:	ldrd	r4, [r0]
   14334:	eor	r3, r5, r3
   14338:	eor	r2, r4, r2
   1433c:	orrs	r2, r2, r3
   14340:	mov	r2, #0
   14344:	bne	14364 <putc_unlocked@plt+0x21ac>
   14348:	ldrd	r2, [r1, #8]
   1434c:	ldrd	r0, [r0, #8]
   14350:	eor	r1, r1, r3
   14354:	eor	r0, r0, r2
   14358:	orr	r0, r0, r1
   1435c:	clz	r0, r0
   14360:	lsr	r2, r0, #5
   14364:	mov	r0, r2
   14368:	pop	{r4, r5, fp, pc}
   1436c:	b	1bd0c <putc_unlocked@plt+0x9b54>
   14370:	push	{r4, r5, fp, lr}
   14374:	add	fp, sp, #8
   14378:	mov	r4, #0
   1437c:	movw	r5, #37920	; 0x9420
   14380:	movt	r5, #3
   14384:	b	143a0 <putc_unlocked@plt+0x21e8>
   14388:	ldrb	r0, [r5, r4]
   1438c:	orr	r0, r0, r1
   14390:	strb	r0, [r5, r4]
   14394:	add	r4, r4, #1
   14398:	cmp	r4, #256	; 0x100
   1439c:	popeq	{r4, r5, fp, pc}
   143a0:	mov	r0, r4
   143a4:	bl	1a888 <putc_unlocked@plt+0x86d0>
   143a8:	mov	r1, #1
   143ac:	cmp	r0, #0
   143b0:	bne	14388 <putc_unlocked@plt+0x21d0>
   143b4:	bic	r0, r4, #-2147483648	; 0x80000000
   143b8:	sub	r2, r0, #45	; 0x2d
   143bc:	cmp	r2, #2
   143c0:	bcc	14388 <putc_unlocked@plt+0x21d0>
   143c4:	cmp	r0, #95	; 0x5f
   143c8:	cmpne	r0, #126	; 0x7e
   143cc:	movne	r1, #0
   143d0:	b	14388 <putc_unlocked@plt+0x21d0>
   143d4:	push	{r4, r5, r6, sl, fp, lr}
   143d8:	add	fp, sp, #16
   143dc:	movw	r4, #37900	; 0x940c
   143e0:	movt	r4, #3
   143e4:	ldr	r0, [r4]
   143e8:	cmp	r0, #0
   143ec:	beq	14418 <putc_unlocked@plt+0x2260>
   143f0:	mov	r5, #0
   143f4:	movw	r6, #41468	; 0xa1fc
   143f8:	movt	r6, #3
   143fc:	ldr	r0, [r6]
   14400:	ldr	r0, [r0, r5, lsl #2]
   14404:	bl	1792c <putc_unlocked@plt+0x5774>
   14408:	add	r5, r5, #1
   1440c:	ldr	r0, [r4]
   14410:	cmp	r5, r0
   14414:	bcc	143fc <putc_unlocked@plt+0x2244>
   14418:	movw	r0, #41465	; 0xa1f9
   1441c:	movt	r0, #3
   14420:	mov	r1, #0
   14424:	strb	r1, [r0]
   14428:	str	r1, [r4]
   1442c:	movw	r0, #41472	; 0xa200
   14430:	movt	r0, #3
   14434:	strb	r1, [r0]
   14438:	movw	r0, #41476	; 0xa204
   1443c:	movt	r0, #3
   14440:	str	r1, [r0]
   14444:	movw	r0, #41480	; 0xa208
   14448:	movt	r0, #3
   1444c:	str	r1, [r0]
   14450:	movw	r0, #41484	; 0xa20c
   14454:	movt	r0, #3
   14458:	str	r1, [r0]
   1445c:	movw	r0, #41488	; 0xa210
   14460:	movt	r0, #3
   14464:	str	r1, [r0]
   14468:	movw	r0, #41492	; 0xa214
   1446c:	movt	r0, #3
   14470:	str	r1, [r0]
   14474:	movw	r0, #41496	; 0xa218
   14478:	movt	r0, #3
   1447c:	str	r1, [r0]
   14480:	movw	r0, #41500	; 0xa21c
   14484:	movt	r0, #3
   14488:	str	r1, [r0]
   1448c:	movw	r0, #41504	; 0xa220
   14490:	movt	r0, #3
   14494:	str	r1, [r0]
   14498:	movw	r0, #41508	; 0xa224
   1449c:	movt	r0, #3
   144a0:	str	r1, [r0]
   144a4:	movw	r0, #41512	; 0xa228
   144a8:	movt	r0, #3
   144ac:	str	r1, [r0]
   144b0:	pop	{r4, r5, r6, sl, fp, pc}
   144b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144b8:	add	fp, sp, #28
   144bc:	sub	sp, sp, #716	; 0x2cc
   144c0:	mov	r8, r3
   144c4:	str	r2, [fp, #-716]	; 0xfffffd34
   144c8:	mov	r9, r1
   144cc:	mov	r7, r0
   144d0:	movw	r4, #37892	; 0x9404
   144d4:	movt	r4, #3
   144d8:	ldr	r1, [r4]
   144dc:	movw	r6, #37900	; 0x940c
   144e0:	movt	r6, #3
   144e4:	ldr	r0, [r6]
   144e8:	cmp	r0, r1
   144ec:	bne	14514 <putc_unlocked@plt+0x235c>
   144f0:	movw	r5, #37896	; 0x9408
   144f4:	movt	r5, #3
   144f8:	ldr	r0, [r5]
   144fc:	mov	r2, #304	; 0x130
   14500:	bl	22d84 <_obstack_memory_used@@Base+0x29bc>
   14504:	str	r0, [r5]
   14508:	ldr	r0, [r4]
   1450c:	lsl	r0, r0, #1
   14510:	str	r0, [r4]
   14514:	movw	r0, #37896	; 0x9408
   14518:	movt	r0, #3
   1451c:	ldr	r1, [r0]
   14520:	ldr	r2, [r6]
   14524:	mov	r0, #152	; 0x98
   14528:	str	r1, [fp, #-724]	; 0xfffffd2c
   1452c:	str	r2, [fp, #-720]	; 0xfffffd30
   14530:	mla	r4, r2, r0, r1
   14534:	mov	r0, r4
   14538:	mov	r1, #0
   1453c:	mov	r2, #152	; 0x98
   14540:	bl	12008 <memset@plt>
   14544:	mov	r0, r4
   14548:	str	r9, [r0, #120]!	; 0x78
   1454c:	str	r0, [fp, #-736]	; 0xfffffd20
   14550:	mvn	r0, #0
   14554:	str	r4, [fp, #-732]	; 0xfffffd24
   14558:	mov	r5, r4
   1455c:	str	r0, [r5, #144]!	; 0x90
   14560:	movw	r4, #41465	; 0xa1f9
   14564:	movt	r4, #3
   14568:	ldrb	r0, [r4]
   1456c:	cmp	r0, #0
   14570:	bne	145a0 <putc_unlocked@plt+0x23e8>
   14574:	movw	r0, #38369	; 0x95e1
   14578:	movt	r0, #3
   1457c:	ldrb	r0, [r0]
   14580:	cmp	r0, #0
   14584:	beq	145a0 <putc_unlocked@plt+0x23e8>
   14588:	mov	r0, r7
   1458c:	bl	1796c <putc_unlocked@plt+0x57b4>
   14590:	str	r0, [r5]
   14594:	cmp	r0, #0
   14598:	movne	r0, #1
   1459c:	strbne	r0, [r4]
   145a0:	str	r5, [fp, #-740]	; 0xfffffd1c
   145a4:	str	r7, [fp, #-728]	; 0xfffffd28
   145a8:	movw	r0, #37884	; 0x93fc
   145ac:	movt	r0, #3
   145b0:	ldrb	r5, [r0]
   145b4:	movw	r0, #37790	; 0x939e
   145b8:	movt	r0, #3
   145bc:	ldrb	r0, [r0]
   145c0:	orr	r0, r0, r5
   145c4:	tst	r0, #255	; 0xff
   145c8:	ldreq	r0, [fp, #-716]	; 0xfffffd34
   145cc:	cmpeq	r0, #0
   145d0:	beq	1471c <putc_unlocked@plt+0x2564>
   145d4:	ldr	r4, [fp, #-728]	; 0xfffffd28
   145d8:	ldrb	r0, [r4]
   145dc:	cmp	r0, #47	; 0x2f
   145e0:	mov	r7, r4
   145e4:	beq	14630 <putc_unlocked@plt+0x2478>
   145e8:	ldrb	r0, [r8]
   145ec:	cmp	r0, #0
   145f0:	mov	r7, r4
   145f4:	beq	14630 <putc_unlocked@plt+0x2478>
   145f8:	mov	r0, r4
   145fc:	bl	11fc0 <strlen@plt>
   14600:	mov	r6, r0
   14604:	mov	r0, r8
   14608:	bl	11fc0 <strlen@plt>
   1460c:	add	r0, r6, r0
   14610:	add	r0, r0, #9
   14614:	bic	r0, r0, #7
   14618:	sub	r7, sp, r0
   1461c:	mov	sp, r7
   14620:	mov	r0, r7
   14624:	mov	r1, r8
   14628:	mov	r2, r4
   1462c:	bl	179d0 <putc_unlocked@plt+0x5818>
   14630:	cmp	r5, #0
   14634:	ldr	sl, [fp, #-732]	; 0xfffffd24
   14638:	beq	14688 <putc_unlocked@plt+0x24d0>
   1463c:	mov	r0, #152	; 0x98
   14640:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   14644:	ldr	r2, [fp, #-720]	; 0xfffffd30
   14648:	mla	r5, r2, r0, r1
   1464c:	mov	r0, r7
   14650:	mov	r1, #2
   14654:	bl	1ac20 <putc_unlocked@plt+0x8a68>
   14658:	str	r0, [r5, #8]
   1465c:	cmp	r0, #0
   14660:	bne	14688 <putc_unlocked@plt+0x24d0>
   14664:	movw	r1, #27160	; 0x6a18
   14668:	movt	r1, #2
   1466c:	mov	r0, #0
   14670:	mov	r2, #5
   14674:	bl	11dbc <dcgettext@plt>
   14678:	mov	r1, r0
   1467c:	ldr	r0, [fp, #-716]	; 0xfffffd34
   14680:	mov	r2, r7
   14684:	bl	16b38 <putc_unlocked@plt+0x4980>
   14688:	add	r5, sl, #16
   1468c:	movw	r6, #37716	; 0x9354
   14690:	movt	r6, #3
   14694:	ldr	r0, [r6]
   14698:	sub	r1, r0, #2
   1469c:	cmp	r1, #2
   146a0:	bcs	146f8 <putc_unlocked@plt+0x2540>
   146a4:	ldr	r0, [fp, #-716]	; 0xfffffd34
   146a8:	cmp	r0, #0
   146ac:	beq	14888 <putc_unlocked@plt+0x26d0>
   146b0:	mov	r0, r7
   146b4:	mov	r1, r5
   146b8:	bl	17a4c <putc_unlocked@plt+0x5894>
   146bc:	ldr	r1, [r6]
   146c0:	mov	r6, #1
   146c4:	cmp	r1, #2
   146c8:	beq	14710 <putc_unlocked@plt+0x2558>
   146cc:	cmn	r0, #1
   146d0:	ble	14878 <putc_unlocked@plt+0x26c0>
   146d4:	mov	r1, #152	; 0x98
   146d8:	ldr	r2, [fp, #-724]	; 0xfffffd2c
   146dc:	ldr	r3, [fp, #-720]	; 0xfffffd30
   146e0:	mla	r1, r3, r1, r2
   146e4:	ldr	r1, [r1, #32]
   146e8:	and	r1, r1, #61440	; 0xf000
   146ec:	cmp	r1, #16384	; 0x4000
   146f0:	beq	14710 <putc_unlocked@plt+0x2558>
   146f4:	b	14888 <putc_unlocked@plt+0x26d0>
   146f8:	cmp	r0, #4
   146fc:	bne	14888 <putc_unlocked@plt+0x26d0>
   14700:	mov	r0, r7
   14704:	mov	r1, r5
   14708:	bl	17a4c <putc_unlocked@plt+0x5894>
   1470c:	mov	r6, #1
   14710:	cmp	r0, #0
   14714:	bne	148a0 <putc_unlocked@plt+0x26e8>
   14718:	b	14910 <putc_unlocked@plt+0x2758>
   1471c:	movw	r0, #37700	; 0x9344
   14720:	movt	r0, #3
   14724:	ldrb	sl, [r0]
   14728:	cmp	r9, #3
   1472c:	bne	14768 <putc_unlocked@plt+0x25b0>
   14730:	cmp	sl, #0
   14734:	beq	14768 <putc_unlocked@plt+0x25b0>
   14738:	mov	r0, #19
   1473c:	bl	142a4 <putc_unlocked@plt+0x20ec>
   14740:	cmp	r0, #0
   14744:	bne	145d4 <putc_unlocked@plt+0x241c>
   14748:	mov	r0, #18
   1474c:	bl	142a4 <putc_unlocked@plt+0x20ec>
   14750:	cmp	r0, #0
   14754:	bne	145d4 <putc_unlocked@plt+0x241c>
   14758:	mov	r0, #20
   1475c:	bl	142a4 <putc_unlocked@plt+0x20ec>
   14760:	cmp	r0, #0
   14764:	bne	145d4 <putc_unlocked@plt+0x241c>
   14768:	movw	r0, #37791	; 0x939f
   1476c:	movt	r0, #3
   14770:	ldrb	r0, [r0]
   14774:	movw	r1, #38344	; 0x95c8
   14778:	movt	r1, #3
   1477c:	ldrb	r1, [r1]
   14780:	cmp	r0, #0
   14784:	cmpeq	r1, #0
   14788:	beq	147dc <putc_unlocked@plt+0x2624>
   1478c:	cmp	r9, #6
   14790:	cmpne	r9, #0
   14794:	bne	147dc <putc_unlocked@plt+0x2624>
   14798:	movw	r2, #37716	; 0x9354
   1479c:	movt	r2, #3
   147a0:	ldr	r2, [r2]
   147a4:	cmp	r2, #4
   147a8:	beq	145d4 <putc_unlocked@plt+0x241c>
   147ac:	movw	r2, #37710	; 0x934e
   147b0:	movt	r2, #3
   147b4:	ldrb	r2, [r2]
   147b8:	cmp	r2, #0
   147bc:	bne	145d4 <putc_unlocked@plt+0x241c>
   147c0:	movw	r2, #37709	; 0x934d
   147c4:	movt	r2, #3
   147c8:	ldrb	r2, [r2]
   147cc:	orr	r1, r1, r2
   147d0:	tst	r1, #1
   147d4:	beq	147e4 <putc_unlocked@plt+0x262c>
   147d8:	b	145d4 <putc_unlocked@plt+0x241c>
   147dc:	cmp	r1, #0
   147e0:	bne	145d4 <putc_unlocked@plt+0x241c>
   147e4:	cmp	r0, #0
   147e8:	beq	14f0c <putc_unlocked@plt+0x2d54>
   147ec:	cmp	r9, #0
   147f0:	beq	145d4 <putc_unlocked@plt+0x241c>
   147f4:	ldr	r0, [fp, #-716]	; 0xfffffd34
   147f8:	cmp	r0, #0
   147fc:	bne	145d4 <putc_unlocked@plt+0x241c>
   14800:	mov	r6, #0
   14804:	cmp	r9, #5
   14808:	mov	r7, #0
   1480c:	bne	14f14 <putc_unlocked@plt+0x2d5c>
   14810:	movw	r0, #37724	; 0x935c
   14814:	movt	r0, #3
   14818:	ldr	r0, [r0]
   1481c:	cmp	r0, #3
   14820:	beq	145d4 <putc_unlocked@plt+0x241c>
   14824:	cmp	sl, #0
   14828:	beq	14f0c <putc_unlocked@plt+0x2d54>
   1482c:	mov	r0, #14
   14830:	bl	142a4 <putc_unlocked@plt+0x20ec>
   14834:	cmp	r0, #0
   14838:	bne	145d4 <putc_unlocked@plt+0x241c>
   1483c:	mov	r0, #16
   14840:	bl	142a4 <putc_unlocked@plt+0x20ec>
   14844:	cmp	r0, #0
   14848:	bne	145d4 <putc_unlocked@plt+0x241c>
   1484c:	mov	r0, #17
   14850:	bl	142a4 <putc_unlocked@plt+0x20ec>
   14854:	cmp	r0, #0
   14858:	bne	145d4 <putc_unlocked@plt+0x241c>
   1485c:	mov	r0, #21
   14860:	bl	142a4 <putc_unlocked@plt+0x20ec>
   14864:	mov	r6, #0
   14868:	cmp	r0, #0
   1486c:	mov	r7, #0
   14870:	bne	145d4 <putc_unlocked@plt+0x241c>
   14874:	b	14f14 <putc_unlocked@plt+0x2d5c>
   14878:	bl	11fe4 <__errno_location@plt>
   1487c:	ldr	r0, [r0]
   14880:	cmp	r0, #2
   14884:	bne	148a0 <putc_unlocked@plt+0x26e8>
   14888:	mov	r0, r7
   1488c:	mov	r1, r5
   14890:	bl	17a84 <putc_unlocked@plt+0x58cc>
   14894:	mov	r6, #0
   14898:	cmp	r0, #0
   1489c:	beq	14910 <putc_unlocked@plt+0x2758>
   148a0:	mov	r6, #0
   148a4:	movw	r1, #27269	; 0x6a85
   148a8:	movt	r1, #2
   148ac:	mov	r0, #0
   148b0:	mov	r2, #5
   148b4:	bl	11dbc <dcgettext@plt>
   148b8:	mov	r1, r0
   148bc:	ldr	r5, [fp, #-716]	; 0xfffffd34
   148c0:	mov	r0, r5
   148c4:	mov	r2, r7
   148c8:	bl	16b38 <putc_unlocked@plt+0x4980>
   148cc:	mov	r0, #152	; 0x98
   148d0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   148d4:	ldr	r2, [fp, #-720]	; 0xfffffd30
   148d8:	mla	r0, r2, r0, r1
   148dc:	movw	r1, #37553	; 0x92b1
   148e0:	movt	r1, #3
   148e4:	str	r1, [r0, #128]	; 0x80
   148e8:	cmp	r5, #0
   148ec:	mov	r7, #0
   148f0:	bne	14f78 <putc_unlocked@plt+0x2dc0>
   148f4:	mov	r0, r4
   148f8:	bl	23154 <_obstack_memory_used@@Base+0x2d8c>
   148fc:	mov	r6, #0
   14900:	mov	r7, #0
   14904:	movw	r5, #37900	; 0x940c
   14908:	movt	r5, #3
   1490c:	b	14f68 <putc_unlocked@plt+0x2db0>
   14910:	mov	r0, #152	; 0x98
   14914:	ldr	r4, [fp, #-724]	; 0xfffffd2c
   14918:	ldr	r1, [fp, #-720]	; 0xfffffd30
   1491c:	mla	r0, r1, r0, r4
   14920:	mov	r1, #1
   14924:	strb	r1, [r0, #132]	; 0x84
   14928:	cmp	r9, #5
   1492c:	bne	1494c <putc_unlocked@plt+0x2794>
   14930:	movw	r0, #37700	; 0x9344
   14934:	movt	r0, #3
   14938:	ldrb	r0, [r0]
   1493c:	cmp	r0, #0
   14940:	ldr	r9, [fp, #-720]	; 0xfffffd30
   14944:	bne	14974 <putc_unlocked@plt+0x27bc>
   14948:	b	1499c <putc_unlocked@plt+0x27e4>
   1494c:	ldr	r0, [r0, #32]
   14950:	and	r0, r0, #61440	; 0xf000
   14954:	cmp	r0, #32768	; 0x8000
   14958:	ldr	r9, [fp, #-720]	; 0xfffffd30
   1495c:	bne	1499c <putc_unlocked@plt+0x27e4>
   14960:	movw	r0, #37700	; 0x9344
   14964:	movt	r0, #3
   14968:	ldrb	r0, [r0]
   1496c:	cmp	r0, #0
   14970:	beq	1499c <putc_unlocked@plt+0x27e4>
   14974:	mov	r0, #21
   14978:	bl	142a4 <putc_unlocked@plt+0x20ec>
   1497c:	cmp	r0, #0
   14980:	beq	1499c <putc_unlocked@plt+0x27e4>
   14984:	mov	r0, #152	; 0x98
   14988:	mla	r5, r9, r0, r4
   1498c:	mov	r0, r7
   14990:	mov	r1, sl
   14994:	bl	17abc <putc_unlocked@plt+0x5904>
   14998:	strb	r0, [r5, #140]	; 0x8c
   1499c:	movw	r8, #37712	; 0x9350
   149a0:	movt	r8, #3
   149a4:	ldr	r0, [r8]
   149a8:	cmp	r0, #0
   149ac:	beq	149c4 <putc_unlocked@plt+0x280c>
   149b0:	movw	r0, #37788	; 0x939c
   149b4:	movt	r0, #3
   149b8:	ldrb	r0, [r0]
   149bc:	cmp	r0, #1
   149c0:	bne	14ae4 <putc_unlocked@plt+0x292c>
   149c4:	mov	r0, r7
   149c8:	mov	r1, sl
   149cc:	mov	r2, r6
   149d0:	bl	17b38 <putc_unlocked@plt+0x5980>
   149d4:	mov	r1, #152	; 0x98
   149d8:	mla	r1, r9, r1, r4
   149dc:	add	r1, r1, #128	; 0x80
   149e0:	cmp	r0, #0
   149e4:	blt	14a0c <putc_unlocked@plt+0x2854>
   149e8:	ldr	r1, [r1]
   149ec:	movw	r0, #27286	; 0x6a96
   149f0:	movt	r0, #2
   149f4:	bl	11ccc <strcmp@plt>
   149f8:	mov	r5, r0
   149fc:	cmp	r0, #0
   14a00:	movwne	r5, #1
   14a04:	mov	r0, #0
   14a08:	b	14a34 <putc_unlocked@plt+0x287c>
   14a0c:	movw	r0, #37553	; 0x92b1
   14a10:	movt	r0, #3
   14a14:	str	r0, [r1]
   14a18:	bl	11fe4 <__errno_location@plt>
   14a1c:	ldr	r0, [r0]
   14a20:	subs	r5, r0, #61	; 0x3d
   14a24:	movwne	r5, #1
   14a28:	bl	17bd0 <putc_unlocked@plt+0x5a18>
   14a2c:	bic	r0, r5, r0
   14a30:	mov	r5, #0
   14a34:	ldr	r1, [r8]
   14a38:	orrs	r1, r1, r0
   14a3c:	mov	r6, #0
   14a40:	mov	r1, #0
   14a44:	bne	14a64 <putc_unlocked@plt+0x28ac>
   14a48:	mov	r0, r7
   14a4c:	mov	r1, sl
   14a50:	bl	17be0 <putc_unlocked@plt+0x5a28>
   14a54:	mov	r1, #0
   14a58:	cmp	r0, #0
   14a5c:	movwgt	r1, #1
   14a60:	lsr	r0, r0, #31
   14a64:	orr	r2, r5, r1
   14a68:	cmp	r2, #1
   14a6c:	bne	14a84 <putc_unlocked@plt+0x28cc>
   14a70:	mov	r6, #1
   14a74:	cmp	r1, #0
   14a78:	movwne	r6, #2
   14a7c:	cmp	r5, #0
   14a80:	moveq	r6, #2
   14a84:	mov	r1, #152	; 0x98
   14a88:	mla	r1, r9, r1, r4
   14a8c:	str	r6, [r1, #136]	; 0x88
   14a90:	movw	r1, #41472	; 0xa200
   14a94:	movt	r1, #3
   14a98:	ldrb	r2, [r1]
   14a9c:	cmp	r6, #0
   14aa0:	movwne	r6, #1
   14aa4:	orr	r2, r2, r6
   14aa8:	strb	r2, [r1]
   14aac:	cmp	r0, #0
   14ab0:	beq	14ae4 <putc_unlocked@plt+0x292c>
   14ab4:	bl	11fe4 <__errno_location@plt>
   14ab8:	ldr	r5, [r0]
   14abc:	mov	r0, #0
   14ac0:	mov	r1, #3
   14ac4:	mov	r2, r7
   14ac8:	bl	21b38 <_obstack_memory_used@@Base+0x1770>
   14acc:	mov	r3, r0
   14ad0:	movw	r2, #34094	; 0x852e
   14ad4:	movt	r2, #2
   14ad8:	mov	r0, #0
   14adc:	mov	r1, r5
   14ae0:	bl	11ec4 <error@plt>
   14ae4:	mov	r0, #152	; 0x98
   14ae8:	mla	r6, r9, r0, r4
   14aec:	ldr	r0, [r6, #32]!
   14af0:	and	r0, r0, #61440	; 0xf000
   14af4:	cmp	r0, #40960	; 0xa000
   14af8:	bne	14bd4 <putc_unlocked@plt+0x2a1c>
   14afc:	ldr	r0, [r8]
   14b00:	cmp	r0, #0
   14b04:	beq	14b1c <putc_unlocked@plt+0x2964>
   14b08:	movw	r0, #37709	; 0x934d
   14b0c:	movt	r0, #3
   14b10:	ldrb	r0, [r0]
   14b14:	cmp	r0, #1
   14b18:	bne	14bd4 <putc_unlocked@plt+0x2a1c>
   14b1c:	mov	r0, r7
   14b20:	mov	r1, sl
   14b24:	ldr	r2, [fp, #-716]	; 0xfffffd34
   14b28:	bl	17c78 <putc_unlocked@plt+0x5ac0>
   14b2c:	mov	r0, #152	; 0x98
   14b30:	mla	r5, r9, r0, r4
   14b34:	ldr	r1, [r5, #4]!
   14b38:	mov	r0, r7
   14b3c:	bl	17cc8 <putc_unlocked@plt+0x5b10>
   14b40:	mov	r4, r0
   14b44:	cmp	r0, #0
   14b48:	beq	14bc8 <putc_unlocked@plt+0x2a10>
   14b4c:	ldr	r7, [fp, #-740]	; 0xfffffd1c
   14b50:	ldr	r0, [r7]
   14b54:	cmp	r0, #0
   14b58:	bne	14b70 <putc_unlocked@plt+0x29b8>
   14b5c:	ldr	r0, [r5]
   14b60:	bl	1796c <putc_unlocked@plt+0x57b4>
   14b64:	cmp	r0, #0
   14b68:	mvnne	r0, #0
   14b6c:	strne	r0, [r7]
   14b70:	movw	r0, #37724	; 0x935c
   14b74:	movt	r0, #3
   14b78:	ldr	r0, [r0]
   14b7c:	cmp	r0, #1
   14b80:	bhi	14b98 <putc_unlocked@plt+0x29e0>
   14b84:	movw	r0, #37709	; 0x934d
   14b88:	movt	r0, #3
   14b8c:	ldrb	r0, [r0]
   14b90:	cmp	r0, #1
   14b94:	bne	14bc8 <putc_unlocked@plt+0x2a10>
   14b98:	sub	r1, fp, #688	; 0x2b0
   14b9c:	mov	r0, r4
   14ba0:	bl	17d5c <putc_unlocked@plt+0x5ba4>
   14ba4:	cmp	r0, #0
   14ba8:	bne	14bc8 <putc_unlocked@plt+0x2a10>
   14bac:	mov	r0, #152	; 0x98
   14bb0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   14bb4:	mla	r0, r9, r0, r1
   14bb8:	mov	r1, #1
   14bbc:	strb	r1, [r0, #133]	; 0x85
   14bc0:	ldr	r1, [fp, #-672]	; 0xfffffd60
   14bc4:	str	r1, [r0, #124]	; 0x7c
   14bc8:	mov	r0, r4
   14bcc:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   14bd0:	ldr	r4, [fp, #-724]	; 0xfffffd2c
   14bd4:	ldr	r0, [r6]
   14bd8:	and	r0, r0, #61440	; 0xf000
   14bdc:	cmp	r0, #40960	; 0xa000
   14be0:	beq	14c14 <putc_unlocked@plt+0x2a5c>
   14be4:	cmp	r0, #16384	; 0x4000
   14be8:	bne	14c1c <putc_unlocked@plt+0x2a64>
   14bec:	ldr	r0, [fp, #-716]	; 0xfffffd34
   14bf0:	cmp	r0, #0
   14bf4:	beq	14c24 <putc_unlocked@plt+0x2a6c>
   14bf8:	movw	r0, #37720	; 0x9358
   14bfc:	movt	r0, #3
   14c00:	ldrb	r1, [r0]
   14c04:	mov	r0, #9
   14c08:	cmp	r1, #1
   14c0c:	moveq	r0, #3
   14c10:	b	14c28 <putc_unlocked@plt+0x2a70>
   14c14:	mov	r0, #6
   14c18:	b	14c28 <putc_unlocked@plt+0x2a70>
   14c1c:	mov	r0, #5
   14c20:	b	14c28 <putc_unlocked@plt+0x2a70>
   14c24:	mov	r0, #3
   14c28:	ldr	r1, [fp, #-736]	; 0xfffffd20
   14c2c:	str	r0, [r1]
   14c30:	mov	r0, #152	; 0x98
   14c34:	mla	r0, r9, r0, r4
   14c38:	ldr	sl, [r0, #80]	; 0x50
   14c3c:	ldr	r7, [r0, #84]	; 0x54
   14c40:	ldr	r0, [r8]
   14c44:	cmp	r0, #0
   14c48:	beq	14c60 <putc_unlocked@plt+0x2aa8>
   14c4c:	movw	r0, #37789	; 0x939d
   14c50:	movt	r0, #3
   14c54:	ldrb	r0, [r0]
   14c58:	cmp	r0, #1
   14c5c:	bne	14d78 <putc_unlocked@plt+0x2bc0>
   14c60:	movw	r0, #38324	; 0x95b4
   14c64:	movt	r0, #3
   14c68:	ldr	r3, [r0]
   14c6c:	movw	r0, #38336	; 0x95c0
   14c70:	movt	r0, #3
   14c74:	ldrd	r0, [r0]
   14c78:	sub	sp, sp, #16
   14c7c:	mov	r2, #0
   14c80:	mov	r5, #512	; 0x200
   14c84:	str	r5, [sp]
   14c88:	str	r2, [sp, #4]
   14c8c:	str	r0, [sp, #8]
   14c90:	str	r1, [sp, #12]
   14c94:	sub	r2, fp, #688	; 0x2b0
   14c98:	mov	r0, sl
   14c9c:	mov	r1, r7
   14ca0:	bl	1cd50 <putc_unlocked@plt+0xab98>
   14ca4:	add	sp, sp, #16
   14ca8:	mov	r1, #0
   14cac:	bl	1e198 <putc_unlocked@plt+0xbfe0>
   14cb0:	movw	r1, #41480	; 0xa208
   14cb4:	movt	r1, #3
   14cb8:	ldr	r2, [r1]
   14cbc:	cmp	r2, r0
   14cc0:	strlt	r0, [r1]
   14cc4:	ldr	r0, [r8]
   14cc8:	cmp	r0, #0
   14ccc:	bne	14d78 <putc_unlocked@plt+0x2bc0>
   14cd0:	movw	r0, #38320	; 0x95b0
   14cd4:	movt	r0, #3
   14cd8:	ldrb	r0, [r0]
   14cdc:	cmp	r0, #0
   14ce0:	bne	14d08 <putc_unlocked@plt+0x2b50>
   14ce4:	mov	r0, #152	; 0x98
   14ce8:	mla	r0, r9, r0, r4
   14cec:	ldr	r0, [r0, #40]	; 0x28
   14cf0:	bl	17d8c <putc_unlocked@plt+0x5bd4>
   14cf4:	movw	r1, #41488	; 0xa210
   14cf8:	movt	r1, #3
   14cfc:	ldr	r2, [r1]
   14d00:	cmp	r2, r0
   14d04:	strlt	r0, [r1]
   14d08:	movw	r0, #38346	; 0x95ca
   14d0c:	movt	r0, #3
   14d10:	ldrb	r0, [r0]
   14d14:	cmp	r0, #0
   14d18:	bne	14d40 <putc_unlocked@plt+0x2b88>
   14d1c:	mov	r0, #152	; 0x98
   14d20:	mla	r0, r9, r0, r4
   14d24:	ldr	r0, [r0, #44]	; 0x2c
   14d28:	bl	17dc8 <putc_unlocked@plt+0x5c10>
   14d2c:	movw	r1, #41492	; 0xa214
   14d30:	movt	r1, #3
   14d34:	ldr	r2, [r1]
   14d38:	cmp	r2, r0
   14d3c:	strlt	r0, [r1]
   14d40:	movw	r0, #38348	; 0x95cc
   14d44:	movt	r0, #3
   14d48:	ldrb	r0, [r0]
   14d4c:	cmp	r0, #1
   14d50:	bne	14d78 <putc_unlocked@plt+0x2bc0>
   14d54:	mov	r0, #152	; 0x98
   14d58:	mla	r0, r9, r0, r4
   14d5c:	ldr	r0, [r0, #40]	; 0x28
   14d60:	bl	17d8c <putc_unlocked@plt+0x5bd4>
   14d64:	movw	r1, #41496	; 0xa218
   14d68:	movt	r1, #3
   14d6c:	ldr	r2, [r1]
   14d70:	cmp	r2, r0
   14d74:	strlt	r0, [r1]
   14d78:	movw	r0, #37788	; 0x939c
   14d7c:	movt	r0, #3
   14d80:	ldrb	r0, [r0]
   14d84:	cmp	r0, #1
   14d88:	bne	14db0 <putc_unlocked@plt+0x2bf8>
   14d8c:	mov	r0, #152	; 0x98
   14d90:	mla	r0, r9, r0, r4
   14d94:	ldr	r0, [r0, #128]	; 0x80
   14d98:	bl	11fc0 <strlen@plt>
   14d9c:	movw	r1, #41500	; 0xa21c
   14da0:	movt	r1, #3
   14da4:	ldr	r2, [r1]
   14da8:	cmp	r2, r0
   14dac:	strlt	r0, [r1]
   14db0:	ldr	r0, [r8]
   14db4:	cmp	r0, #0
   14db8:	beq	14dc4 <putc_unlocked@plt+0x2c0c>
   14dbc:	mov	r6, sl
   14dc0:	b	14f14 <putc_unlocked@plt+0x2d5c>
   14dc4:	mov	r0, #152	; 0x98
   14dc8:	mla	r0, r9, r0, r4
   14dcc:	ldr	r0, [r0, #36]	; 0x24
   14dd0:	sub	lr, fp, #512	; 0x200
   14dd4:	sub	r2, lr, #197	; 0xc5
   14dd8:	mov	r1, #0
   14ddc:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   14de0:	bl	11fc0 <strlen@plt>
   14de4:	movw	r1, #41484	; 0xa20c
   14de8:	movt	r1, #3
   14dec:	ldr	r2, [r1]
   14df0:	cmp	r2, r0
   14df4:	strlt	r0, [r1]
   14df8:	ldr	r0, [r6]
   14dfc:	and	r0, r0, #45056	; 0xb000
   14e00:	orr	r0, r0, #16384	; 0x4000
   14e04:	cmp	r0, #24576	; 0x6000
   14e08:	bne	14e9c <putc_unlocked@plt+0x2ce4>
   14e0c:	mov	r0, #152	; 0x98
   14e10:	mla	r6, r9, r0, r4
   14e14:	ldr	r0, [r6, #48]!	; 0x30
   14e18:	ldr	r1, [r6, #4]
   14e1c:	bl	11c9c <gnu_dev_major@plt>
   14e20:	sub	r2, fp, #688	; 0x2b0
   14e24:	mov	r1, #0
   14e28:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   14e2c:	bl	11fc0 <strlen@plt>
   14e30:	movw	r5, #41504	; 0xa220
   14e34:	movt	r5, #3
   14e38:	ldr	r1, [r5]
   14e3c:	cmp	r1, r0
   14e40:	strlt	r0, [r5]
   14e44:	ldrd	r0, [r6]
   14e48:	bl	11cf0 <gnu_dev_minor@plt>
   14e4c:	sub	r2, fp, #688	; 0x2b0
   14e50:	mov	r1, #0
   14e54:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   14e58:	bl	11fc0 <strlen@plt>
   14e5c:	movw	r1, #41508	; 0xa224
   14e60:	movt	r1, #3
   14e64:	ldr	r2, [r1]
   14e68:	cmp	r2, r0
   14e6c:	strlt	r0, [r1]
   14e70:	ldr	r0, [r1]
   14e74:	ldr	r1, [r5]
   14e78:	add	r0, r1, r0
   14e7c:	add	r0, r0, #2
   14e80:	movw	r1, #41512	; 0xa228
   14e84:	movt	r1, #3
   14e88:	ldr	r2, [r1]
   14e8c:	cmp	r2, r0
   14e90:	mov	r6, sl
   14e94:	strlt	r0, [r1]
   14e98:	b	14f14 <putc_unlocked@plt+0x2d5c>
   14e9c:	mov	r0, #152	; 0x98
   14ea0:	mla	r0, r9, r0, r4
   14ea4:	ldrd	r0, [r0, #64]	; 0x40
   14ea8:	bl	17e04 <putc_unlocked@plt+0x5c4c>
   14eac:	movw	r2, #38328	; 0x95b8
   14eb0:	movt	r2, #3
   14eb4:	ldr	r3, [r2]
   14eb8:	movw	r2, #37536	; 0x92a0
   14ebc:	movt	r2, #3
   14ec0:	ldm	r2, {r2, r5}
   14ec4:	sub	sp, sp, #16
   14ec8:	mov	r4, #0
   14ecc:	mov	r6, #1
   14ed0:	str	r6, [sp]
   14ed4:	str	r4, [sp, #4]
   14ed8:	str	r2, [sp, #8]
   14edc:	str	r5, [sp, #12]
   14ee0:	sub	r2, fp, #688	; 0x2b0
   14ee4:	bl	1cd50 <putc_unlocked@plt+0xab98>
   14ee8:	add	sp, sp, #16
   14eec:	mov	r1, #0
   14ef0:	bl	1e198 <putc_unlocked@plt+0xbfe0>
   14ef4:	movw	r1, #41512	; 0xa228
   14ef8:	movt	r1, #3
   14efc:	ldr	r2, [r1]
   14f00:	cmp	r2, r0
   14f04:	strlt	r0, [r1]
   14f08:	b	14dbc <putc_unlocked@plt+0x2c04>
   14f0c:	mov	r6, #0
   14f10:	mov	r7, #0
   14f14:	movw	r0, #38344	; 0x95c8
   14f18:	movt	r0, #3
   14f1c:	ldrb	r0, [r0]
   14f20:	cmp	r0, #1
   14f24:	movw	r5, #37900	; 0x940c
   14f28:	movt	r5, #3
   14f2c:	ldr	r4, [fp, #-728]	; 0xfffffd28
   14f30:	ldr	sl, [fp, #-732]	; 0xfffffd24
   14f34:	bne	14f60 <putc_unlocked@plt+0x2da8>
   14f38:	add	r0, sl, #112	; 0x70
   14f3c:	ldrd	r0, [r0]
   14f40:	sub	r2, fp, #688	; 0x2b0
   14f44:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   14f48:	bl	11fc0 <strlen@plt>
   14f4c:	movw	r1, #41476	; 0xa204
   14f50:	movt	r1, #3
   14f54:	ldr	r2, [r1]
   14f58:	cmp	r2, r0
   14f5c:	strlt	r0, [r1]
   14f60:	mov	r0, r4
   14f64:	bl	23154 <_obstack_memory_used@@Base+0x2d8c>
   14f68:	str	r0, [sl]
   14f6c:	ldr	r0, [r5]
   14f70:	add	r0, r0, #1
   14f74:	str	r0, [r5]
   14f78:	mov	r0, r6
   14f7c:	mov	r1, r7
   14f80:	sub	sp, fp, #28
   14f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f8c:	add	fp, sp, #24
   14f90:	mov	r8, r2
   14f94:	mov	r4, r1
   14f98:	mov	r6, r0
   14f9c:	mov	r0, #16
   14fa0:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   14fa4:	mov	r5, r0
   14fa8:	mov	r7, #0
   14fac:	cmp	r4, #0
   14fb0:	mov	r0, #0
   14fb4:	beq	14fc0 <putc_unlocked@plt+0x2e08>
   14fb8:	mov	r0, r4
   14fbc:	bl	23154 <_obstack_memory_used@@Base+0x2d8c>
   14fc0:	str	r0, [r5, #4]
   14fc4:	cmp	r6, #0
   14fc8:	beq	14fd8 <putc_unlocked@plt+0x2e20>
   14fcc:	mov	r0, r6
   14fd0:	bl	23154 <_obstack_memory_used@@Base+0x2d8c>
   14fd4:	mov	r7, r0
   14fd8:	strb	r8, [r5, #8]
   14fdc:	str	r7, [r5]
   14fe0:	movw	r0, #37688	; 0x9338
   14fe4:	movt	r0, #3
   14fe8:	ldr	r1, [r0]
   14fec:	str	r1, [r5, #12]
   14ff0:	str	r5, [r0]
   14ff4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ff8:	push	{r4, r5, r6, sl, fp, lr}
   14ffc:	add	fp, sp, #16
   15000:	movw	r5, #41544	; 0xa248
   15004:	movt	r5, #3
   15008:	ldr	r0, [r5]
   1500c:	movw	r4, #37900	; 0x940c
   15010:	movt	r4, #3
   15014:	ldr	r1, [r4]
   15018:	add	r1, r1, r1, lsr #1
   1501c:	cmp	r0, r1
   15020:	bcs	15050 <putc_unlocked@plt+0x2e98>
   15024:	movw	r6, #41468	; 0xa1fc
   15028:	movt	r6, #3
   1502c:	ldr	r0, [r6]
   15030:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   15034:	ldr	r0, [r4]
   15038:	mov	r1, #12
   1503c:	bl	22e60 <_obstack_memory_used@@Base+0x2a98>
   15040:	str	r0, [r6]
   15044:	ldr	r0, [r4]
   15048:	add	r0, r0, r0, lsl #1
   1504c:	str	r0, [r5]
   15050:	bl	18064 <putc_unlocked@plt+0x5eac>
   15054:	bl	180b0 <putc_unlocked@plt+0x5ef8>
   15058:	movw	r5, #37784	; 0x9398
   1505c:	movt	r5, #3
   15060:	ldr	r0, [r5]
   15064:	cmp	r0, #6
   15068:	popeq	{r4, r5, r6, sl, fp, pc}
   1506c:	movw	r0, #41552	; 0xa250
   15070:	movt	r0, #3
   15074:	bl	11d2c <_setjmp@plt>
   15078:	cmp	r0, #0
   1507c:	beq	15098 <putc_unlocked@plt+0x2ee0>
   15080:	ldr	r0, [r5]
   15084:	cmp	r0, #4
   15088:	beq	150fc <putc_unlocked@plt+0x2f44>
   1508c:	bl	18064 <putc_unlocked@plt+0x5eac>
   15090:	mov	r0, #1
   15094:	b	1509c <putc_unlocked@plt+0x2ee4>
   15098:	mov	r0, #0
   1509c:	movw	r1, #38316	; 0x95ac
   150a0:	movt	r1, #3
   150a4:	ldr	r1, [r1]
   150a8:	ldr	r2, [r5]
   150ac:	cmp	r2, #5
   150b0:	addeq	r2, r2, r1
   150b4:	movw	r1, #33524	; 0x82f4
   150b8:	movt	r1, #2
   150bc:	add	r1, r1, r2, lsl #5
   150c0:	add	r0, r1, r0, lsl #4
   150c4:	movw	r1, #38347	; 0x95cb
   150c8:	movt	r1, #3
   150cc:	ldrb	r1, [r1]
   150d0:	add	r0, r0, r1, lsl #3
   150d4:	movw	r1, #37708	; 0x934c
   150d8:	movt	r1, #3
   150dc:	ldrb	r1, [r1]
   150e0:	ldr	r2, [r0, r1, lsl #2]
   150e4:	ldr	r1, [r4]
   150e8:	movw	r0, #41468	; 0xa1fc
   150ec:	movt	r0, #3
   150f0:	ldr	r0, [r0]
   150f4:	bl	1e554 <putc_unlocked@plt+0xc39c>
   150f8:	pop	{r4, r5, r6, sl, fp, pc}
   150fc:	movw	r0, #27330	; 0x6ac2
   15100:	movt	r0, #2
   15104:	movw	r1, #18037	; 0x4675
   15108:	movt	r1, #2
   1510c:	movw	r3, #27356	; 0x6adc
   15110:	movt	r3, #2
   15114:	movw	r2, #4102	; 0x1006
   15118:	bl	121ac <__assert_fail@plt>
   1511c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15120:	add	fp, sp, #28
   15124:	sub	sp, sp, #4
   15128:	mov	r9, r1
   1512c:	mov	r5, r0
   15130:	cmp	r0, #0
   15134:	movwne	r0, #37732	; 0x9364
   15138:	movtne	r0, #3
   1513c:	ldrne	r0, [r0]
   15140:	cmpne	r0, #0
   15144:	beq	15158 <putc_unlocked@plt+0x2fa0>
   15148:	mov	r0, #0
   1514c:	mov	r1, r5
   15150:	mov	r2, #0
   15154:	bl	14f88 <putc_unlocked@plt+0x2dd0>
   15158:	movw	r8, #37900	; 0x940c
   1515c:	movt	r8, #3
   15160:	ldr	r0, [r8]
   15164:	cmp	r0, #0
   15168:	beq	1524c <putc_unlocked@plt+0x3094>
   1516c:	rsb	r4, r0, #1
   15170:	movw	sl, #41468	; 0xa1fc
   15174:	movt	sl, #3
   15178:	ldr	r0, [sl]
   1517c:	ldr	r6, [r0, -r4, lsl #2]
   15180:	mov	r0, r6
   15184:	bl	17fe8 <putc_unlocked@plt+0x5e30>
   15188:	cmp	r0, #0
   1518c:	beq	15200 <putc_unlocked@plt+0x3048>
   15190:	cmp	r5, #0
   15194:	beq	151b8 <putc_unlocked@plt+0x3000>
   15198:	ldr	r7, [r6]
   1519c:	mov	r0, r7
   151a0:	bl	1800c <putc_unlocked@plt+0x5e54>
   151a4:	cmp	r0, #0
   151a8:	bne	15200 <putc_unlocked@plt+0x3048>
   151ac:	ldrb	r0, [r7]
   151b0:	cmp	r0, #47	; 0x2f
   151b4:	bne	151c8 <putc_unlocked@plt+0x3010>
   151b8:	ldrd	r0, [r6]
   151bc:	mov	r2, r9
   151c0:	bl	14f88 <putc_unlocked@plt+0x2dd0>
   151c4:	b	151f0 <putc_unlocked@plt+0x3038>
   151c8:	mov	r0, r5
   151cc:	mov	r1, r7
   151d0:	mov	r2, #0
   151d4:	bl	1b7c4 <putc_unlocked@plt+0x960c>
   151d8:	mov	r7, r0
   151dc:	ldr	r1, [r6, #4]
   151e0:	mov	r2, r9
   151e4:	bl	14f88 <putc_unlocked@plt+0x2dd0>
   151e8:	mov	r0, r7
   151ec:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   151f0:	ldr	r0, [r6, #120]	; 0x78
   151f4:	cmp	r0, #9
   151f8:	moveq	r0, r6
   151fc:	bleq	1792c <putc_unlocked@plt+0x5774>
   15200:	add	r4, r4, #1
   15204:	cmp	r4, #1
   15208:	bne	15178 <putc_unlocked@plt+0x2fc0>
   1520c:	ldr	r0, [r8]
   15210:	cmp	r0, #0
   15214:	beq	1524c <putc_unlocked@plt+0x3094>
   15218:	ldr	r1, [r8]
   1521c:	ldr	r2, [sl]
   15220:	mov	r3, #0
   15224:	mov	r0, #0
   15228:	ldr	r7, [r2, r3, lsl #2]
   1522c:	str	r7, [r2, r0, lsl #2]
   15230:	ldr	r7, [r7, #120]	; 0x78
   15234:	cmp	r7, #9
   15238:	addne	r0, r0, #1
   1523c:	add	r3, r3, #1
   15240:	cmp	r3, r1
   15244:	bcc	15228 <putc_unlocked@plt+0x3070>
   15248:	b	15250 <putc_unlocked@plt+0x3098>
   1524c:	mov	r0, #0
   15250:	str	r0, [r8]
   15254:	sub	sp, fp, #28
   15258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1525c:	push	{r4, r5, r6, r7, fp, lr}
   15260:	add	fp, sp, #16
   15264:	movw	r0, #37712	; 0x9350
   15268:	movt	r0, #3
   1526c:	ldr	r0, [r0]
   15270:	cmp	r0, #4
   15274:	bhi	15350 <putc_unlocked@plt+0x3198>
   15278:	add	r1, pc, #0
   1527c:	ldr	pc, [r1, r0, lsl #2]
   15280:	muleq	r1, r4, r2
   15284:	strdeq	r5, [r1], -r4
   15288:	andeq	r5, r1, r4, asr r3
   1528c:	andeq	r5, r1, r0, ror r3
   15290:	andeq	r5, r1, ip, lsl #7
   15294:	movw	r4, #37900	; 0x940c
   15298:	movt	r4, #3
   1529c:	ldr	r0, [r4]
   152a0:	cmp	r0, #0
   152a4:	beq	15350 <putc_unlocked@plt+0x3198>
   152a8:	mov	r5, #0
   152ac:	movw	r6, #41468	; 0xa1fc
   152b0:	movt	r6, #3
   152b4:	movw	r7, #38356	; 0x95d4
   152b8:	movt	r7, #3
   152bc:	bl	18e74 <putc_unlocked@plt+0x6cbc>
   152c0:	ldr	r0, [r6]
   152c4:	ldr	r0, [r0, r5, lsl #2]
   152c8:	bl	18ec8 <putc_unlocked@plt+0x6d10>
   152cc:	ldrb	r0, [r7]
   152d0:	cmp	r0, #0
   152d4:	mov	r0, #10
   152d8:	movwne	r0, #0
   152dc:	bl	153a4 <putc_unlocked@plt+0x31ec>
   152e0:	add	r5, r5, #1
   152e4:	ldr	r0, [r4]
   152e8:	cmp	r5, r0
   152ec:	bcc	152bc <putc_unlocked@plt+0x3104>
   152f0:	b	15350 <putc_unlocked@plt+0x3198>
   152f4:	movw	r4, #37900	; 0x940c
   152f8:	movt	r4, #3
   152fc:	ldr	r0, [r4]
   15300:	cmp	r0, #0
   15304:	popeq	{r4, r5, r6, r7, fp, pc}
   15308:	mov	r5, #0
   1530c:	movw	r6, #41468	; 0xa1fc
   15310:	movt	r6, #3
   15314:	movw	r7, #38356	; 0x95d4
   15318:	movt	r7, #3
   1531c:	ldr	r0, [r6]
   15320:	ldr	r0, [r0, r5, lsl #2]
   15324:	mov	r1, #0
   15328:	bl	18954 <putc_unlocked@plt+0x679c>
   1532c:	ldrb	r0, [r7]
   15330:	cmp	r0, #0
   15334:	mov	r0, #10
   15338:	movwne	r0, #0
   1533c:	bl	12188 <putchar_unlocked@plt>
   15340:	add	r5, r5, #1
   15344:	ldr	r0, [r4]
   15348:	cmp	r5, r0
   1534c:	bcc	1531c <putc_unlocked@plt+0x3164>
   15350:	pop	{r4, r5, r6, r7, fp, pc}
   15354:	movw	r0, #38360	; 0x95d8
   15358:	movt	r0, #3
   1535c:	ldr	r0, [r0]
   15360:	cmp	r0, #0
   15364:	beq	15398 <putc_unlocked@plt+0x31e0>
   15368:	pop	{r4, r5, r6, r7, fp, lr}
   1536c:	b	18bfc <putc_unlocked@plt+0x6a44>
   15370:	movw	r0, #38360	; 0x95d8
   15374:	movt	r0, #3
   15378:	ldr	r0, [r0]
   1537c:	cmp	r0, #0
   15380:	beq	15398 <putc_unlocked@plt+0x31e0>
   15384:	pop	{r4, r5, r6, r7, fp, lr}
   15388:	b	18d4c <putc_unlocked@plt+0x6b94>
   1538c:	mov	r0, #44	; 0x2c
   15390:	pop	{r4, r5, r6, r7, fp, lr}
   15394:	b	18ae8 <putc_unlocked@plt+0x6930>
   15398:	mov	r0, #32
   1539c:	pop	{r4, r5, r6, r7, fp, lr}
   153a0:	b	18ae8 <putc_unlocked@plt+0x6930>
   153a4:	movw	r1, #38176	; 0x9520
   153a8:	movt	r1, #3
   153ac:	ldrd	r2, [r1]
   153b0:	adds	r2, r2, #1
   153b4:	adc	r3, r3, #0
   153b8:	strd	r2, [r1]
   153bc:	b	12188 <putchar_unlocked@plt>
   153c0:	movw	r1, #37736	; 0x9368
   153c4:	movt	r1, #3
   153c8:	ldr	r3, [r1, #8]
   153cc:	ldr	r2, [r1, #12]
   153d0:	sub	r3, r2, r3
   153d4:	cmp	r3, #15
   153d8:	bls	153f0 <putc_unlocked@plt+0x3238>
   153dc:	sub	r2, r2, #16
   153e0:	str	r2, [r1, #12]
   153e4:	vld1.64	{d16-d17}, [r2]
   153e8:	vst1.64	{d16-d17}, [r0]
   153ec:	bx	lr
   153f0:	push	{fp, lr}
   153f4:	mov	fp, sp
   153f8:	movw	r0, #25467	; 0x637b
   153fc:	movt	r0, #2
   15400:	movw	r1, #18037	; 0x4675
   15404:	movt	r1, #2
   15408:	movw	r3, #25522	; 0x63b2
   1540c:	movt	r3, #2
   15410:	movw	r2, #1053	; 0x41d
   15414:	bl	121ac <__assert_fail@plt>
   15418:	push	{r4, sl, fp, lr}
   1541c:	add	fp, sp, #8
   15420:	mov	r4, r0
   15424:	ldr	r0, [r0]
   15428:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1542c:	ldr	r0, [r4, #4]
   15430:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   15434:	mov	r0, r4
   15438:	pop	{r4, sl, fp, lr}
   1543c:	b	1bd0c <putc_unlocked@plt+0x9b54>
   15440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15444:	add	fp, sp, #28
   15448:	sub	sp, sp, #692	; 0x2b4
   1544c:	mov	r8, r2
   15450:	mov	r9, r1
   15454:	mov	r4, r0
   15458:	bl	11fe4 <__errno_location@plt>
   1545c:	mov	r7, r0
   15460:	mov	r0, #0
   15464:	str	r0, [r7]
   15468:	mov	r0, r4
   1546c:	bl	11edc <opendir@plt>
   15470:	cmp	r0, #0
   15474:	beq	15534 <putc_unlocked@plt+0x337c>
   15478:	mov	r6, r0
   1547c:	movw	r0, #37732	; 0x9364
   15480:	movt	r0, #3
   15484:	ldr	r0, [r0]
   15488:	cmp	r0, #0
   1548c:	str	r4, [sp, #28]
   15490:	beq	155bc <putc_unlocked@plt+0x3404>
   15494:	mov	r0, r6
   15498:	bl	120f8 <dirfd@plt>
   1549c:	add	r1, sp, #32
   154a0:	cmp	r0, #0
   154a4:	blt	15560 <putc_unlocked@plt+0x33a8>
   154a8:	bl	16b80 <putc_unlocked@plt+0x49c8>
   154ac:	cmn	r0, #1
   154b0:	ble	15570 <putc_unlocked@plt+0x33b8>
   154b4:	ldr	r5, [sp, #32]
   154b8:	ldr	r4, [sp, #36]	; 0x24
   154bc:	ldr	sl, [sp, #128]	; 0x80
   154c0:	ldr	r3, [sp, #132]	; 0x84
   154c4:	mov	r0, r5
   154c8:	mov	r1, r4
   154cc:	mov	r2, sl
   154d0:	str	r3, [sp, #24]
   154d4:	bl	16be0 <putc_unlocked@plt+0x4a28>
   154d8:	cmp	r0, #0
   154dc:	beq	155a4 <putc_unlocked@plt+0x33ec>
   154e0:	movw	r1, #27119	; 0x69ef
   154e4:	movt	r1, #2
   154e8:	mov	r0, #0
   154ec:	mov	r2, #5
   154f0:	bl	11dbc <dcgettext@plt>
   154f4:	mov	r4, r0
   154f8:	mov	r0, #0
   154fc:	mov	r1, #3
   15500:	ldr	r2, [sp, #28]
   15504:	bl	21b38 <_obstack_memory_used@@Base+0x1770>
   15508:	mov	r3, r0
   1550c:	mov	r0, #0
   15510:	mov	r1, #0
   15514:	mov	r2, r4
   15518:	bl	11ec4 <error@plt>
   1551c:	mov	r0, r6
   15520:	bl	12158 <closedir@plt>
   15524:	mov	r0, #1
   15528:	bl	16c50 <putc_unlocked@plt+0x4a98>
   1552c:	sub	sp, fp, #28
   15530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15534:	movw	r1, #27054	; 0x69ae
   15538:	movt	r1, #2
   1553c:	mov	r0, #0
   15540:	mov	r2, #5
   15544:	bl	11dbc <dcgettext@plt>
   15548:	mov	r1, r0
   1554c:	mov	r0, r8
   15550:	mov	r2, r4
   15554:	sub	sp, fp, #28
   15558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1555c:	b	16b38 <putc_unlocked@plt+0x4980>
   15560:	mov	r0, r4
   15564:	bl	16bb0 <putc_unlocked@plt+0x49f8>
   15568:	cmn	r0, #1
   1556c:	bgt	154b4 <putc_unlocked@plt+0x32fc>
   15570:	movw	r1, #27079	; 0x69c7
   15574:	movt	r1, #2
   15578:	mov	r0, #0
   1557c:	mov	r2, #5
   15580:	bl	11dbc <dcgettext@plt>
   15584:	mov	r1, r0
   15588:	mov	r0, r8
   1558c:	mov	r2, r4
   15590:	bl	16b38 <putc_unlocked@plt+0x4980>
   15594:	mov	r0, r6
   15598:	bl	12158 <closedir@plt>
   1559c:	sub	sp, fp, #28
   155a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155a4:	mov	r0, r5
   155a8:	mov	r1, r4
   155ac:	mov	r2, sl
   155b0:	ldr	r3, [sp, #24]
   155b4:	bl	16c84 <putc_unlocked@plt+0x4acc>
   155b8:	ldr	r4, [sp, #28]
   155bc:	str	r8, [sp, #16]
   155c0:	bl	143d4 <putc_unlocked@plt+0x221c>
   155c4:	movw	r0, #37728	; 0x9360
   155c8:	movt	r0, #3
   155cc:	ldrb	r0, [r0]
   155d0:	cmp	r0, #0
   155d4:	bne	155ec <putc_unlocked@plt+0x3434>
   155d8:	movw	r0, #37684	; 0x9334
   155dc:	movt	r0, #3
   155e0:	ldrb	r0, [r0]
   155e4:	cmp	r0, #1
   155e8:	bne	156b4 <putc_unlocked@plt+0x34fc>
   155ec:	movw	r5, #41464	; 0xa1f8
   155f0:	movt	r5, #3
   155f4:	ldrb	r0, [r5]
   155f8:	cmp	r0, #1
   155fc:	moveq	r0, #10
   15600:	bleq	153a4 <putc_unlocked@plt+0x31ec>
   15604:	mov	r8, #1
   15608:	strb	r8, [r5]
   1560c:	bl	16ce0 <putc_unlocked@plt+0x4b28>
   15610:	movw	r0, #37884	; 0x93fc
   15614:	movt	r0, #3
   15618:	ldrb	r0, [r0]
   1561c:	cmp	r0, #0
   15620:	beq	15668 <putc_unlocked@plt+0x34b0>
   15624:	mov	r0, r4
   15628:	mov	r1, #2
   1562c:	bl	1ac20 <putc_unlocked@plt+0x8a68>
   15630:	mov	r5, r0
   15634:	cmp	r0, #0
   15638:	bne	1566c <putc_unlocked@plt+0x34b4>
   1563c:	mov	r5, #0
   15640:	movw	r1, #27160	; 0x6a18
   15644:	movt	r1, #2
   15648:	mov	r0, #0
   1564c:	mov	r2, #5
   15650:	bl	11dbc <dcgettext@plt>
   15654:	mov	r1, r0
   15658:	ldr	r0, [sp, #16]
   1565c:	mov	r2, r4
   15660:	bl	16b38 <putc_unlocked@plt+0x4980>
   15664:	b	1566c <putc_unlocked@plt+0x34b4>
   15668:	mov	r5, #0
   1566c:	movw	r0, #38372	; 0x95e4
   15670:	movt	r0, #3
   15674:	ldr	r1, [r0]
   15678:	movw	r0, #37840	; 0x93d0
   1567c:	movt	r0, #3
   15680:	str	r8, [sp]
   15684:	stmib	sp, {r0, r5}
   15688:	cmp	r9, #0
   1568c:	moveq	r9, r4
   15690:	mov	r0, r9
   15694:	mvn	r2, #0
   15698:	mov	r3, #0
   1569c:	bl	16d00 <putc_unlocked@plt+0x4b48>
   156a0:	mov	r0, r5
   156a4:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   156a8:	movw	r0, #26132	; 0x6614
   156ac:	movt	r0, #2
   156b0:	bl	16ee4 <putc_unlocked@plt+0x4d2c>
   156b4:	mov	r9, #0
   156b8:	mov	r0, #0
   156bc:	str	r0, [sp, #24]
   156c0:	mov	r0, #0
   156c4:	str	r0, [sp, #20]
   156c8:	ldr	r5, [sp, #16]
   156cc:	b	156d4 <putc_unlocked@plt+0x351c>
   156d0:	bl	16f98 <putc_unlocked@plt+0x4de0>
   156d4:	str	r9, [r7]
   156d8:	mov	r0, r6
   156dc:	bl	120d4 <readdir64@plt>
   156e0:	cmp	r0, #0
   156e4:	beq	1570c <putc_unlocked@plt+0x3554>
   156e8:	mov	r8, r0
   156ec:	add	sl, r0, #19
   156f0:	mov	r0, sl
   156f4:	bl	16f04 <putc_unlocked@plt+0x4d4c>
   156f8:	cmp	r0, #0
   156fc:	beq	1574c <putc_unlocked@plt+0x3594>
   15700:	ldr	r4, [sp, #28]
   15704:	bl	16f98 <putc_unlocked@plt+0x4de0>
   15708:	b	156d4 <putc_unlocked@plt+0x351c>
   1570c:	ldr	r0, [r7]
   15710:	cmp	r0, #0
   15714:	beq	157fc <putc_unlocked@plt+0x3644>
   15718:	mov	r0, #0
   1571c:	movw	r1, #27184	; 0x6a30
   15720:	movt	r1, #2
   15724:	mov	r2, #5
   15728:	bl	11dbc <dcgettext@plt>
   1572c:	mov	r1, r0
   15730:	mov	r0, r5
   15734:	mov	r2, r4
   15738:	bl	16b38 <putc_unlocked@plt+0x4980>
   1573c:	ldr	r0, [r7]
   15740:	cmp	r0, #75	; 0x4b
   15744:	beq	156d0 <putc_unlocked@plt+0x3518>
   15748:	b	157fc <putc_unlocked@plt+0x3644>
   1574c:	ldrb	r0, [r8, #18]
   15750:	sub	r0, r0, #1
   15754:	uxtb	r2, r0
   15758:	mov	r1, #0
   1575c:	cmp	r2, #13
   15760:	sxtbls	r0, r0
   15764:	movwls	r1, #33920	; 0x8480
   15768:	movtls	r1, #2
   1576c:	ldrls	r1, [r1, r0, lsl #2]
   15770:	mov	r0, sl
   15774:	mov	r2, #0
   15778:	ldr	r4, [sp, #28]
   1577c:	mov	r3, r4
   15780:	bl	144b4 <putc_unlocked@plt+0x22fc>
   15784:	ldr	r2, [sp, #24]
   15788:	adds	r2, r0, r2
   1578c:	str	r2, [sp, #24]
   15790:	ldr	r0, [sp, #20]
   15794:	adc	r0, r1, r0
   15798:	str	r0, [sp, #20]
   1579c:	movw	r0, #37712	; 0x9350
   157a0:	movt	r0, #3
   157a4:	ldr	r0, [r0]
   157a8:	cmp	r0, #1
   157ac:	movweq	r0, #37784	; 0x9398
   157b0:	movteq	r0, #3
   157b4:	ldreq	r0, [r0]
   157b8:	cmpeq	r0, #6
   157bc:	bne	156d0 <putc_unlocked@plt+0x3518>
   157c0:	movw	r0, #37789	; 0x939d
   157c4:	movt	r0, #3
   157c8:	ldrb	r0, [r0]
   157cc:	cmp	r0, #0
   157d0:	bne	156d0 <putc_unlocked@plt+0x3518>
   157d4:	movw	r0, #37728	; 0x9360
   157d8:	movt	r0, #3
   157dc:	ldrb	r0, [r0]
   157e0:	cmp	r0, #0
   157e4:	bne	156d0 <putc_unlocked@plt+0x3518>
   157e8:	bl	14ff8 <putc_unlocked@plt+0x2e40>
   157ec:	bl	1525c <putc_unlocked@plt+0x30a4>
   157f0:	bl	143d4 <putc_unlocked@plt+0x221c>
   157f4:	bl	16f98 <putc_unlocked@plt+0x4de0>
   157f8:	b	156d4 <putc_unlocked@plt+0x351c>
   157fc:	mov	r0, r6
   15800:	bl	12158 <closedir@plt>
   15804:	cmp	r0, #0
   15808:	beq	15830 <putc_unlocked@plt+0x3678>
   1580c:	movw	r1, #27205	; 0x6a45
   15810:	movt	r1, #2
   15814:	mov	r0, #0
   15818:	mov	r2, #5
   1581c:	bl	11dbc <dcgettext@plt>
   15820:	mov	r1, r0
   15824:	mov	r0, r5
   15828:	mov	r2, r4
   1582c:	bl	16b38 <putc_unlocked@plt+0x4980>
   15830:	bl	14ff8 <putc_unlocked@plt+0x2e40>
   15834:	movw	r0, #37728	; 0x9360
   15838:	movt	r0, #3
   1583c:	ldrb	r0, [r0]
   15840:	cmp	r0, #1
   15844:	bne	15854 <putc_unlocked@plt+0x369c>
   15848:	mov	r0, r4
   1584c:	mov	r1, #0
   15850:	bl	1511c <putc_unlocked@plt+0x2f64>
   15854:	movw	r0, #37712	; 0x9350
   15858:	movt	r0, #3
   1585c:	ldr	r0, [r0]
   15860:	cmp	r0, #0
   15864:	beq	1587c <putc_unlocked@plt+0x36c4>
   15868:	movw	r0, #37789	; 0x939d
   1586c:	movt	r0, #3
   15870:	ldrb	r0, [r0]
   15874:	cmp	r0, #1
   15878:	bne	15918 <putc_unlocked@plt+0x3760>
   1587c:	movw	r0, #38324	; 0x95b4
   15880:	movt	r0, #3
   15884:	ldr	r3, [r0]
   15888:	movw	r0, #38336	; 0x95c0
   1588c:	movt	r0, #3
   15890:	ldrd	r0, [r0]
   15894:	mov	r2, #0
   15898:	mov	r7, #512	; 0x200
   1589c:	str	r7, [sp]
   158a0:	str	r2, [sp, #4]
   158a4:	str	r0, [sp, #8]
   158a8:	str	r1, [sp, #12]
   158ac:	add	r0, sp, #32
   158b0:	add	r2, r0, #1
   158b4:	ldr	r0, [sp, #24]
   158b8:	ldr	r1, [sp, #20]
   158bc:	bl	1cd50 <putc_unlocked@plt+0xab98>
   158c0:	mov	r4, r0
   158c4:	bl	11fc0 <strlen@plt>
   158c8:	add	r5, r4, r0
   158cc:	mov	r0, #32
   158d0:	strb	r0, [r4, #-1]!
   158d4:	movw	r0, #38356	; 0x95d4
   158d8:	movt	r0, #3
   158dc:	ldrb	r0, [r0]
   158e0:	mov	r1, #10
   158e4:	cmp	r0, #0
   158e8:	movwne	r1, #0
   158ec:	strb	r1, [r5], #1
   158f0:	bl	16ce0 <putc_unlocked@plt+0x4b28>
   158f4:	movw	r1, #27226	; 0x6a5a
   158f8:	movt	r1, #2
   158fc:	mov	r0, #0
   15900:	mov	r2, #5
   15904:	bl	11dbc <dcgettext@plt>
   15908:	bl	16ee4 <putc_unlocked@plt+0x4d2c>
   1590c:	sub	r1, r5, r4
   15910:	mov	r0, r4
   15914:	bl	1705c <putc_unlocked@plt+0x4ea4>
   15918:	movw	r0, #37900	; 0x940c
   1591c:	movt	r0, #3
   15920:	ldr	r0, [r0]
   15924:	cmp	r0, #0
   15928:	blne	1525c <putc_unlocked@plt+0x30a4>
   1592c:	sub	sp, fp, #28
   15930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15934:	push	{r4, sl, fp, lr}
   15938:	add	fp, sp, #8
   1593c:	movw	r4, #37344	; 0x91e0
   15940:	movt	r4, #3
   15944:	mov	r0, r4
   15948:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   1594c:	add	r0, r4, #8
   15950:	pop	{r4, sl, fp, lr}
   15954:	b	15fe0 <putc_unlocked@plt+0x3e28>
   15958:	mov	r0, #0
   1595c:	b	16088 <putc_unlocked@plt+0x3ed0>
   15960:	push	{r4, r5, r6, sl, fp, lr}
   15964:	add	fp, sp, #16
   15968:	ldr	r5, [r1, #8]
   1596c:	ldr	r3, [r1, #12]
   15970:	sub	r2, r3, r5
   15974:	mov	r6, #0
   15978:	cmp	r6, r2, lsr #3
   1597c:	popeq	{r4, r5, r6, sl, fp, pc}
   15980:	cmp	r3, r5
   15984:	ldrbeq	r3, [r1, #40]	; 0x28
   15988:	orreq	r3, r3, #2
   1598c:	strbeq	r3, [r1, #40]	; 0x28
   15990:	ldr	r6, [r1, #4]
   15994:	ldr	r4, [r1, #12]
   15998:	ldr	ip, [r1, #16]
   1599c:	ldr	r3, [r1, #24]
   159a0:	add	r4, r3, r4
   159a4:	bic	r3, r4, r3
   159a8:	str	r3, [r1, #12]
   159ac:	sub	r3, r3, r6
   159b0:	sub	r6, ip, r6
   159b4:	cmp	r3, r6
   159b8:	strhi	ip, [r1, #12]
   159bc:	lsr	r6, r2, #3
   159c0:	ldr	r2, [r1, #12]
   159c4:	str	r2, [r1, #8]
   159c8:	movw	r1, #37668	; 0x9324
   159cc:	movt	r1, #3
   159d0:	ldr	r1, [r1]
   159d4:	bl	11c84 <fputs_unlocked@plt>
   159d8:	movw	r4, #25625	; 0x6419
   159dc:	movt	r4, #2
   159e0:	ldrd	r2, [r5]
   159e4:	mov	r0, #1
   159e8:	mov	r1, r4
   159ec:	bl	12014 <__printf_chk@plt>
   159f0:	subs	r6, r6, #1
   159f4:	add	r5, r5, #8
   159f8:	bne	159e0 <putc_unlocked@plt+0x3828>
   159fc:	mov	r0, #10
   15a00:	pop	{r4, r5, r6, sl, fp, lr}
   15a04:	b	12188 <putchar_unlocked@plt>
   15a08:	push	{fp, lr}
   15a0c:	mov	fp, sp
   15a10:	mov	r4, r0
   15a14:	cmp	r0, #0
   15a18:	bne	15dc4 <putc_unlocked@plt+0x3c0c>
   15a1c:	movw	r1, #18213	; 0x4725
   15a20:	movt	r1, #2
   15a24:	mov	r0, #0
   15a28:	mov	r2, #5
   15a2c:	bl	11dbc <dcgettext@plt>
   15a30:	mov	r1, r0
   15a34:	movw	r0, #41976	; 0xa3f8
   15a38:	movt	r0, #3
   15a3c:	ldr	r2, [r0]
   15a40:	mov	r0, #1
   15a44:	bl	12014 <__printf_chk@plt>
   15a48:	movw	r1, #18246	; 0x4746
   15a4c:	movt	r1, #2
   15a50:	mov	r0, #0
   15a54:	mov	r2, #5
   15a58:	bl	11dbc <dcgettext@plt>
   15a5c:	movw	r5, #37668	; 0x9324
   15a60:	movt	r5, #3
   15a64:	ldr	r1, [r5]
   15a68:	bl	11c84 <fputs_unlocked@plt>
   15a6c:	bl	15e08 <putc_unlocked@plt+0x3c50>
   15a70:	movw	r1, #18390	; 0x47d6
   15a74:	movt	r1, #2
   15a78:	mov	r0, #0
   15a7c:	mov	r2, #5
   15a80:	bl	11dbc <dcgettext@plt>
   15a84:	ldr	r1, [r5]
   15a88:	bl	11c84 <fputs_unlocked@plt>
   15a8c:	movw	r1, #18661	; 0x48e5
   15a90:	movt	r1, #2
   15a94:	mov	r0, #0
   15a98:	mov	r2, #5
   15a9c:	bl	11dbc <dcgettext@plt>
   15aa0:	ldr	r1, [r5]
   15aa4:	bl	11c84 <fputs_unlocked@plt>
   15aa8:	movw	r1, #18817	; 0x4981
   15aac:	movt	r1, #2
   15ab0:	mov	r0, #0
   15ab4:	mov	r2, #5
   15ab8:	bl	11dbc <dcgettext@plt>
   15abc:	ldr	r1, [r5]
   15ac0:	bl	11c84 <fputs_unlocked@plt>
   15ac4:	movw	r1, #19179	; 0x4aeb
   15ac8:	movt	r1, #2
   15acc:	mov	r0, #0
   15ad0:	mov	r2, #5
   15ad4:	bl	11dbc <dcgettext@plt>
   15ad8:	ldr	r1, [r5]
   15adc:	bl	11c84 <fputs_unlocked@plt>
   15ae0:	movw	r1, #19454	; 0x4bfe
   15ae4:	movt	r1, #2
   15ae8:	mov	r0, #0
   15aec:	mov	r2, #5
   15af0:	bl	11dbc <dcgettext@plt>
   15af4:	ldr	r1, [r5]
   15af8:	bl	11c84 <fputs_unlocked@plt>
   15afc:	movw	r1, #19869	; 0x4d9d
   15b00:	movt	r1, #2
   15b04:	mov	r0, #0
   15b08:	mov	r2, #5
   15b0c:	bl	11dbc <dcgettext@plt>
   15b10:	ldr	r1, [r5]
   15b14:	bl	11c84 <fputs_unlocked@plt>
   15b18:	movw	r1, #19930	; 0x4dda
   15b1c:	movt	r1, #2
   15b20:	mov	r0, #0
   15b24:	mov	r2, #5
   15b28:	bl	11dbc <dcgettext@plt>
   15b2c:	ldr	r1, [r5]
   15b30:	bl	11c84 <fputs_unlocked@plt>
   15b34:	movw	r1, #20175	; 0x4ecf
   15b38:	movt	r1, #2
   15b3c:	mov	r0, #0
   15b40:	mov	r2, #5
   15b44:	bl	11dbc <dcgettext@plt>
   15b48:	ldr	r1, [r5]
   15b4c:	bl	11c84 <fputs_unlocked@plt>
   15b50:	movw	r1, #20248	; 0x4f18
   15b54:	movt	r1, #2
   15b58:	mov	r0, #0
   15b5c:	mov	r2, #5
   15b60:	bl	11dbc <dcgettext@plt>
   15b64:	ldr	r1, [r5]
   15b68:	bl	11c84 <fputs_unlocked@plt>
   15b6c:	movw	r1, #20398	; 0x4fae
   15b70:	movt	r1, #2
   15b74:	mov	r0, #0
   15b78:	mov	r2, #5
   15b7c:	bl	11dbc <dcgettext@plt>
   15b80:	ldr	r1, [r5]
   15b84:	bl	11c84 <fputs_unlocked@plt>
   15b88:	movw	r1, #20820	; 0x5154
   15b8c:	movt	r1, #2
   15b90:	mov	r0, #0
   15b94:	mov	r2, #5
   15b98:	bl	11dbc <dcgettext@plt>
   15b9c:	ldr	r1, [r5]
   15ba0:	bl	11c84 <fputs_unlocked@plt>
   15ba4:	movw	r1, #20876	; 0x518c
   15ba8:	movt	r1, #2
   15bac:	mov	r0, #0
   15bb0:	mov	r2, #5
   15bb4:	bl	11dbc <dcgettext@plt>
   15bb8:	ldr	r1, [r5]
   15bbc:	bl	11c84 <fputs_unlocked@plt>
   15bc0:	movw	r1, #21230	; 0x52ee
   15bc4:	movt	r1, #2
   15bc8:	mov	r0, #0
   15bcc:	mov	r2, #5
   15bd0:	bl	11dbc <dcgettext@plt>
   15bd4:	ldr	r1, [r5]
   15bd8:	bl	11c84 <fputs_unlocked@plt>
   15bdc:	movw	r1, #21385	; 0x5389
   15be0:	movt	r1, #2
   15be4:	mov	r0, #0
   15be8:	mov	r2, #5
   15bec:	bl	11dbc <dcgettext@plt>
   15bf0:	ldr	r1, [r5]
   15bf4:	bl	11c84 <fputs_unlocked@plt>
   15bf8:	movw	r1, #21744	; 0x54f0
   15bfc:	movt	r1, #2
   15c00:	mov	r0, #0
   15c04:	mov	r2, #5
   15c08:	bl	11dbc <dcgettext@plt>
   15c0c:	ldr	r1, [r5]
   15c10:	bl	11c84 <fputs_unlocked@plt>
   15c14:	movw	r1, #22047	; 0x561f
   15c18:	movt	r1, #2
   15c1c:	mov	r0, #0
   15c20:	mov	r2, #5
   15c24:	bl	11dbc <dcgettext@plt>
   15c28:	ldr	r1, [r5]
   15c2c:	bl	11c84 <fputs_unlocked@plt>
   15c30:	movw	r1, #22632	; 0x5868
   15c34:	movt	r1, #2
   15c38:	mov	r0, #0
   15c3c:	mov	r2, #5
   15c40:	bl	11dbc <dcgettext@plt>
   15c44:	ldr	r1, [r5]
   15c48:	bl	11c84 <fputs_unlocked@plt>
   15c4c:	movw	r1, #22829	; 0x592d
   15c50:	movt	r1, #2
   15c54:	mov	r0, #0
   15c58:	mov	r2, #5
   15c5c:	bl	11dbc <dcgettext@plt>
   15c60:	ldr	r1, [r5]
   15c64:	bl	11c84 <fputs_unlocked@plt>
   15c68:	movw	r1, #23470	; 0x5bae
   15c6c:	movt	r1, #2
   15c70:	mov	r0, #0
   15c74:	mov	r2, #5
   15c78:	bl	11dbc <dcgettext@plt>
   15c7c:	ldr	r1, [r5]
   15c80:	bl	11c84 <fputs_unlocked@plt>
   15c84:	movw	r1, #23549	; 0x5bfd
   15c88:	movt	r1, #2
   15c8c:	mov	r0, #0
   15c90:	mov	r2, #5
   15c94:	bl	11dbc <dcgettext@plt>
   15c98:	ldr	r1, [r5]
   15c9c:	bl	11c84 <fputs_unlocked@plt>
   15ca0:	movw	r1, #23690	; 0x5c8a
   15ca4:	movt	r1, #2
   15ca8:	mov	r0, #0
   15cac:	mov	r2, #5
   15cb0:	bl	11dbc <dcgettext@plt>
   15cb4:	ldr	r1, [r5]
   15cb8:	bl	11c84 <fputs_unlocked@plt>
   15cbc:	movw	r1, #24062	; 0x5dfe
   15cc0:	movt	r1, #2
   15cc4:	mov	r0, #0
   15cc8:	mov	r2, #5
   15ccc:	bl	11dbc <dcgettext@plt>
   15cd0:	ldr	r1, [r5]
   15cd4:	bl	11c84 <fputs_unlocked@plt>
   15cd8:	movw	r1, #24470	; 0x5f96
   15cdc:	movt	r1, #2
   15ce0:	mov	r0, #0
   15ce4:	mov	r2, #5
   15ce8:	bl	11dbc <dcgettext@plt>
   15cec:	ldr	r1, [r5]
   15cf0:	bl	11c84 <fputs_unlocked@plt>
   15cf4:	movw	r1, #24515	; 0x5fc3
   15cf8:	movt	r1, #2
   15cfc:	mov	r0, #0
   15d00:	mov	r2, #5
   15d04:	bl	11dbc <dcgettext@plt>
   15d08:	ldr	r1, [r5]
   15d0c:	bl	11c84 <fputs_unlocked@plt>
   15d10:	bl	15e38 <putc_unlocked@plt+0x3c80>
   15d14:	movw	r1, #24569	; 0x5ff9
   15d18:	movt	r1, #2
   15d1c:	mov	r0, #0
   15d20:	mov	r2, #5
   15d24:	bl	11dbc <dcgettext@plt>
   15d28:	ldr	r1, [r5]
   15d2c:	bl	11c84 <fputs_unlocked@plt>
   15d30:	movw	r1, #24945	; 0x6171
   15d34:	movt	r1, #2
   15d38:	mov	r0, #0
   15d3c:	mov	r2, #5
   15d40:	bl	11dbc <dcgettext@plt>
   15d44:	ldr	r1, [r5]
   15d48:	bl	11c84 <fputs_unlocked@plt>
   15d4c:	movw	r1, #25021	; 0x61bd
   15d50:	movt	r1, #2
   15d54:	mov	r0, #0
   15d58:	mov	r2, #5
   15d5c:	bl	11dbc <dcgettext@plt>
   15d60:	ldr	r1, [r5]
   15d64:	bl	11c84 <fputs_unlocked@plt>
   15d68:	movw	r1, #25307	; 0x62db
   15d6c:	movt	r1, #2
   15d70:	mov	r0, #0
   15d74:	mov	r2, #5
   15d78:	bl	11dbc <dcgettext@plt>
   15d7c:	ldr	r1, [r5]
   15d80:	bl	11c84 <fputs_unlocked@plt>
   15d84:	movw	r0, #37560	; 0x92b8
   15d88:	movt	r0, #3
   15d8c:	ldr	r1, [r0]
   15d90:	movw	r0, #26477	; 0x676d
   15d94:	movt	r0, #2
   15d98:	movw	r2, #25459	; 0x6373
   15d9c:	movt	r2, #2
   15da0:	cmp	r1, #2
   15da4:	moveq	r2, r0
   15da8:	movw	r0, #25830	; 0x64e6
   15dac:	movt	r0, #2
   15db0:	cmp	r1, #1
   15db4:	movne	r0, r2
   15db8:	bl	15e68 <putc_unlocked@plt+0x3cb0>
   15dbc:	mov	r0, r4
   15dc0:	bl	11f9c <exit@plt>
   15dc4:	movw	r0, #37664	; 0x9320
   15dc8:	movt	r0, #3
   15dcc:	ldr	r5, [r0]
   15dd0:	movw	r1, #18174	; 0x46fe
   15dd4:	movt	r1, #2
   15dd8:	mov	r0, #0
   15ddc:	mov	r2, #5
   15de0:	bl	11dbc <dcgettext@plt>
   15de4:	mov	r2, r0
   15de8:	movw	r0, #41976	; 0xa3f8
   15dec:	movt	r0, #3
   15df0:	ldr	r3, [r0]
   15df4:	mov	r0, r5
   15df8:	mov	r1, #1
   15dfc:	bl	12044 <__fprintf_chk@plt>
   15e00:	mov	r0, r4
   15e04:	bl	11f9c <exit@plt>
   15e08:	push	{fp, lr}
   15e0c:	mov	fp, sp
   15e10:	movw	r1, #27419	; 0x6b1b
   15e14:	movt	r1, #2
   15e18:	mov	r0, #0
   15e1c:	mov	r2, #5
   15e20:	bl	11dbc <dcgettext@plt>
   15e24:	movw	r1, #37668	; 0x9324
   15e28:	movt	r1, #3
   15e2c:	ldr	r1, [r1]
   15e30:	pop	{fp, lr}
   15e34:	b	11c84 <fputs_unlocked@plt>
   15e38:	push	{fp, lr}
   15e3c:	mov	fp, sp
   15e40:	movw	r1, #27494	; 0x6b66
   15e44:	movt	r1, #2
   15e48:	mov	r0, #0
   15e4c:	mov	r2, #5
   15e50:	bl	11dbc <dcgettext@plt>
   15e54:	movw	r1, #37668	; 0x9324
   15e58:	movt	r1, #3
   15e5c:	ldr	r1, [r1]
   15e60:	pop	{fp, lr}
   15e64:	b	11c84 <fputs_unlocked@plt>
   15e68:	push	{r4, r5, fp, lr}
   15e6c:	add	fp, sp, #8
   15e70:	sub	sp, sp, #56	; 0x38
   15e74:	mov	r4, r0
   15e78:	movw	r0, #33856	; 0x8440
   15e7c:	movt	r0, #2
   15e80:	add	r1, r0, #32
   15e84:	mov	r5, sp
   15e88:	mov	r2, #48	; 0x30
   15e8c:	vld1.64	{d16-d17}, [r1]
   15e90:	add	r1, r5, #32
   15e94:	add	r3, r0, #16
   15e98:	vld1.64	{d18-d19}, [r0], r2
   15e9c:	vld1.64	{d20-d21}, [r3]
   15ea0:	vldr	d22, [r0]
   15ea4:	vst1.64	{d16-d17}, [r1]
   15ea8:	add	r0, r5, #16
   15eac:	vst1.64	{d20-d21}, [r0]
   15eb0:	mov	r0, r5
   15eb4:	vst1.64	{d18-d19}, [r0], r2
   15eb8:	vstr	d22, [r0]
   15ebc:	ldr	r1, [sp]
   15ec0:	cmp	r1, #0
   15ec4:	beq	15ee4 <putc_unlocked@plt+0x3d2c>
   15ec8:	mov	r5, sp
   15ecc:	mov	r0, r4
   15ed0:	bl	11ccc <strcmp@plt>
   15ed4:	cmp	r0, #0
   15ed8:	ldrne	r1, [r5, #8]!
   15edc:	cmpne	r1, #0
   15ee0:	bne	15ecc <putc_unlocked@plt+0x3d14>
   15ee4:	ldr	r5, [r5, #4]
   15ee8:	movw	r1, #27799	; 0x6c97
   15eec:	movt	r1, #2
   15ef0:	mov	r0, #0
   15ef4:	mov	r2, #5
   15ef8:	bl	11dbc <dcgettext@plt>
   15efc:	mov	r1, r0
   15f00:	movw	r2, #25819	; 0x64db
   15f04:	movt	r2, #2
   15f08:	movw	r3, #27822	; 0x6cae
   15f0c:	movt	r3, #2
   15f10:	mov	r0, #1
   15f14:	bl	12014 <__printf_chk@plt>
   15f18:	cmp	r5, #0
   15f1c:	moveq	r5, r4
   15f20:	mov	r0, #5
   15f24:	mov	r1, #0
   15f28:	bl	12074 <setlocale@plt>
   15f2c:	cmp	r0, #0
   15f30:	beq	15f70 <putc_unlocked@plt+0x3db8>
   15f34:	movw	r1, #27862	; 0x6cd6
   15f38:	movt	r1, #2
   15f3c:	mov	r2, #3
   15f40:	bl	12140 <strncmp@plt>
   15f44:	cmp	r0, #0
   15f48:	beq	15f70 <putc_unlocked@plt+0x3db8>
   15f4c:	movw	r1, #27866	; 0x6cda
   15f50:	movt	r1, #2
   15f54:	mov	r0, #0
   15f58:	mov	r2, #5
   15f5c:	bl	11dbc <dcgettext@plt>
   15f60:	movw	r1, #37668	; 0x9324
   15f64:	movt	r1, #3
   15f68:	ldr	r1, [r1]
   15f6c:	bl	11c84 <fputs_unlocked@plt>
   15f70:	movw	r1, #27937	; 0x6d21
   15f74:	movt	r1, #2
   15f78:	mov	r0, #0
   15f7c:	mov	r2, #5
   15f80:	bl	11dbc <dcgettext@plt>
   15f84:	mov	r1, r0
   15f88:	movw	r2, #27822	; 0x6cae
   15f8c:	movt	r2, #2
   15f90:	mov	r0, #1
   15f94:	mov	r3, r4
   15f98:	bl	12014 <__printf_chk@plt>
   15f9c:	movw	r1, #27964	; 0x6d3c
   15fa0:	movt	r1, #2
   15fa4:	mov	r0, #0
   15fa8:	mov	r2, #5
   15fac:	bl	11dbc <dcgettext@plt>
   15fb0:	mov	r1, r0
   15fb4:	movw	r0, #27732	; 0x6c54
   15fb8:	movt	r0, #2
   15fbc:	movw	r3, #27261	; 0x6a7d
   15fc0:	movt	r3, #2
   15fc4:	cmp	r5, r4
   15fc8:	moveq	r3, r0
   15fcc:	mov	r0, #1
   15fd0:	mov	r2, r5
   15fd4:	bl	12014 <__printf_chk@plt>
   15fd8:	sub	sp, fp, #8
   15fdc:	pop	{r4, r5, fp, pc}
   15fe0:	push	{r4, sl, fp, lr}
   15fe4:	add	fp, sp, #8
   15fe8:	mov	r4, r0
   15fec:	movw	r0, #37904	; 0x9410
   15ff0:	movt	r0, #3
   15ff4:	ldrb	r1, [r0]
   15ff8:	cmp	r1, #0
   15ffc:	bne	1601c <putc_unlocked@plt+0x3e64>
   16000:	mov	r1, #1
   16004:	strb	r1, [r0]
   16008:	mov	r0, #1
   1600c:	bl	11fb4 <tcgetpgrp@plt>
   16010:	cmp	r0, #0
   16014:	blge	1603c <putc_unlocked@plt+0x3e84>
   16018:	bl	16044 <putc_unlocked@plt+0x3e8c>
   1601c:	movw	r0, #37668	; 0x9324
   16020:	movt	r0, #3
   16024:	ldr	r3, [r0]
   16028:	ldr	r1, [r4]
   1602c:	ldr	r0, [r4, #4]
   16030:	mov	r2, #1
   16034:	pop	{r4, sl, fp, lr}
   16038:	b	11d98 <fwrite_unlocked@plt>
   1603c:	mov	r0, #1
   16040:	b	16088 <putc_unlocked@plt+0x3ed0>
   16044:	push	{r4, sl, fp, lr}
   16048:	add	fp, sp, #8
   1604c:	movw	r4, #37344	; 0x91e0
   16050:	movt	r4, #3
   16054:	ldr	r0, [r4, #20]
   16058:	cmp	r0, #0
   1605c:	beq	1606c <putc_unlocked@plt+0x3eb4>
   16060:	add	r0, r4, #16
   16064:	pop	{r4, sl, fp, lr}
   16068:	b	15fe0 <putc_unlocked@plt+0x3e28>
   1606c:	mov	r0, r4
   16070:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   16074:	add	r0, r4, #24
   16078:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   1607c:	add	r0, r4, #8
   16080:	pop	{r4, sl, fp, lr}
   16084:	b	15fe0 <putc_unlocked@plt+0x3e28>
   16088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1608c:	add	fp, sp, #28
   16090:	sub	sp, sp, #140	; 0x8c
   16094:	cmp	r0, #0
   16098:	beq	16170 <putc_unlocked@plt+0x3fb8>
   1609c:	movw	r8, #38184	; 0x9528
   160a0:	movt	r8, #3
   160a4:	mov	r0, r8
   160a8:	bl	12080 <sigemptyset@plt>
   160ac:	mov	r5, #0
   160b0:	movw	r7, #28016	; 0x6d70
   160b4:	movt	r7, #2
   160b8:	mov	r4, sp
   160bc:	ldr	r6, [r7, r5, lsl #2]
   160c0:	mov	r0, r6
   160c4:	mov	r1, #0
   160c8:	mov	r2, r4
   160cc:	bl	11e4c <sigaction@plt>
   160d0:	ldr	r0, [sp]
   160d4:	cmp	r0, #1
   160d8:	beq	160e8 <putc_unlocked@plt+0x3f30>
   160dc:	mov	r0, r8
   160e0:	mov	r1, r6
   160e4:	bl	11f24 <sigaddset@plt>
   160e8:	add	r5, r5, #1
   160ec:	cmp	r5, #12
   160f0:	bne	160bc <putc_unlocked@plt+0x3f04>
   160f4:	add	r0, r4, #4
   160f8:	movw	r8, #38184	; 0x9528
   160fc:	movt	r8, #3
   16100:	mov	r1, r8
   16104:	mov	r2, #128	; 0x80
   16108:	bl	11d74 <memcpy@plt>
   1610c:	mov	r0, #268435456	; 0x10000000
   16110:	str	r0, [sp, #132]	; 0x84
   16114:	mov	r5, #0
   16118:	movw	r9, #25020	; 0x61bc
   1611c:	movt	r9, #1
   16120:	movw	sl, #25064	; 0x61e8
   16124:	movt	sl, #1
   16128:	ldr	r6, [r7, -r5, lsl #2]
   1612c:	mov	r0, r8
   16130:	mov	r1, r6
   16134:	bl	11dd4 <sigismember@plt>
   16138:	cmp	r0, #0
   1613c:	beq	16160 <putc_unlocked@plt+0x3fa8>
   16140:	cmp	r5, #0
   16144:	mov	r0, sl
   16148:	moveq	r0, r9
   1614c:	str	r0, [sp]
   16150:	mov	r0, r6
   16154:	mov	r1, r4
   16158:	mov	r2, #0
   1615c:	bl	11e4c <sigaction@plt>
   16160:	sub	r5, r5, #1
   16164:	cmn	r5, #12
   16168:	bne	16128 <putc_unlocked@plt+0x3f70>
   1616c:	b	161b4 <putc_unlocked@plt+0x3ffc>
   16170:	mov	r6, #0
   16174:	movw	r7, #28016	; 0x6d70
   16178:	movt	r7, #2
   1617c:	movw	r4, #38184	; 0x9528
   16180:	movt	r4, #3
   16184:	ldr	r5, [r7, r6, lsl #2]
   16188:	mov	r0, r4
   1618c:	mov	r1, r5
   16190:	bl	11dd4 <sigismember@plt>
   16194:	cmp	r0, #0
   16198:	beq	161a8 <putc_unlocked@plt+0x3ff0>
   1619c:	mov	r0, r5
   161a0:	mov	r1, #0
   161a4:	bl	11d8c <signal@plt>
   161a8:	add	r6, r6, #1
   161ac:	cmp	r6, #12
   161b0:	bne	16184 <putc_unlocked@plt+0x3fcc>
   161b4:	sub	sp, fp, #28
   161b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161bc:	movw	r0, #37912	; 0x9418
   161c0:	movt	r0, #3
   161c4:	ldr	r0, [r0]
   161c8:	cmp	r0, #0
   161cc:	bxne	lr
   161d0:	movw	r0, #37908	; 0x9414
   161d4:	movt	r0, #3
   161d8:	ldr	r1, [r0]
   161dc:	add	r1, r1, #1
   161e0:	str	r1, [r0]
   161e4:	bx	lr
   161e8:	movw	r1, #37912	; 0x9418
   161ec:	movt	r1, #3
   161f0:	ldr	r2, [r1]
   161f4:	cmp	r2, #0
   161f8:	streq	r0, [r1]
   161fc:	bx	lr
   16200:	push	{r4, sl, fp, lr}
   16204:	add	fp, sp, #8
   16208:	sub	sp, sp, #16
   1620c:	movw	r1, #27261	; 0x6a7d
   16210:	movt	r1, #2
   16214:	str	r1, [sp]
   16218:	mov	r4, #0
   1621c:	add	r3, sp, #8
   16220:	mov	r1, #0
   16224:	mov	r2, #0
   16228:	bl	234dc <_obstack_memory_used@@Base+0x3114>
   1622c:	cmp	r0, #1
   16230:	beq	16264 <putc_unlocked@plt+0x40ac>
   16234:	cmp	r0, #0
   16238:	bne	16260 <putc_unlocked@plt+0x40a8>
   1623c:	mov	r4, #0
   16240:	ldr	r0, [sp, #8]
   16244:	ldr	r1, [sp, #12]
   16248:	subs	r2, r0, #-2147483648	; 0x80000000
   1624c:	sbcs	r1, r1, #0
   16250:	movwcc	r4, #1
   16254:	cmp	r4, #0
   16258:	movne	r4, r0
   1625c:	b	16264 <putc_unlocked@plt+0x40ac>
   16260:	mvn	r4, #0
   16264:	mov	r0, r4
   16268:	sub	sp, fp, #8
   1626c:	pop	{r4, sl, fp, pc}
   16270:	push	{r4, sl, fp, lr}
   16274:	add	fp, sp, #8
   16278:	mov	r4, r0
   1627c:	mov	r0, #8
   16280:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   16284:	movw	r1, #38376	; 0x95e8
   16288:	movt	r1, #3
   1628c:	ldr	r2, [r1]
   16290:	str	r4, [r0]
   16294:	str	r2, [r0, #4]
   16298:	str	r0, [r1]
   1629c:	pop	{r4, sl, fp, pc}
   162a0:	push	{r4, sl, fp, lr}
   162a4:	add	fp, sp, #8
   162a8:	movw	r4, #37552	; 0x92b0
   162ac:	movt	r4, #3
   162b0:	ldrsb	r0, [r4]
   162b4:	cmn	r0, #1
   162b8:	bgt	162c8 <putc_unlocked@plt+0x4110>
   162bc:	mov	r0, #1
   162c0:	bl	12128 <isatty@plt>
   162c4:	strb	r0, [r4]
   162c8:	ldrb	r0, [r4]
   162cc:	cmp	r0, #0
   162d0:	movwne	r0, #1
   162d4:	pop	{r4, sl, fp, pc}
   162d8:	bx	lr
   162dc:	push	{r4, r5, r6, sl, fp, lr}
   162e0:	add	fp, sp, #16
   162e4:	movw	r0, #26766	; 0x688e
   162e8:	movt	r0, #2
   162ec:	bl	11f00 <getenv@plt>
   162f0:	mvn	r4, #0
   162f4:	cmp	r0, #0
   162f8:	beq	16328 <putc_unlocked@plt+0x4170>
   162fc:	mov	r5, r0
   16300:	movw	r1, #34540	; 0x86ec
   16304:	movt	r1, #2
   16308:	movw	r6, #34584	; 0x8718
   1630c:	movt	r6, #2
   16310:	mov	r2, r6
   16314:	mov	r3, #4
   16318:	bl	1a438 <putc_unlocked@plt+0x8280>
   1631c:	cmn	r0, #1
   16320:	ble	16330 <putc_unlocked@plt+0x4178>
   16324:	ldr	r4, [r6, r0, lsl #2]
   16328:	mov	r0, r4
   1632c:	pop	{r4, r5, r6, sl, fp, pc}
   16330:	movw	r1, #26780	; 0x689c
   16334:	movt	r1, #2
   16338:	mov	r0, #0
   1633c:	mov	r2, #5
   16340:	bl	11dbc <dcgettext@plt>
   16344:	mov	r6, r0
   16348:	mov	r0, r5
   1634c:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   16350:	mov	r3, r0
   16354:	mov	r0, #0
   16358:	mov	r1, #0
   1635c:	mov	r2, r6
   16360:	bl	11ec4 <error@plt>
   16364:	mov	r0, r4
   16368:	pop	{r4, r5, r6, sl, fp, pc}
   1636c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16370:	add	fp, sp, #28
   16374:	sub	sp, sp, #564	; 0x234
   16378:	sub	sp, sp, #1024	; 0x400
   1637c:	mov	r4, #0
   16380:	movw	r6, #37544	; 0x92a8
   16384:	movt	r6, #3
   16388:	sub	r7, fp, #40	; 0x28
   1638c:	ldr	r0, [r6, r4, lsl #2]
   16390:	bl	164a8 <putc_unlocked@plt+0x42f0>
   16394:	str	r0, [r7, r4, lsl #2]
   16398:	add	r4, r4, #1
   1639c:	cmp	r4, #2
   163a0:	bne	1638c <putc_unlocked@plt+0x41d4>
   163a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163a8:	cmp	r0, #0
   163ac:	bne	163bc <putc_unlocked@plt+0x4204>
   163b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   163b4:	cmp	r0, #0
   163b8:	beq	164a0 <putc_unlocked@plt+0x42e8>
   163bc:	add	r0, sp, #40	; 0x28
   163c0:	bl	164f0 <putc_unlocked@plt+0x4338>
   163c4:	cmp	r0, #0
   163c8:	beq	164a0 <putc_unlocked@plt+0x42e8>
   163cc:	mov	r0, #0
   163d0:	movw	r5, #38380	; 0x95ec
   163d4:	movt	r5, #3
   163d8:	ldr	r1, [r6, r0, lsl #2]
   163dc:	str	r0, [sp, #28]
   163e0:	ldr	r9, [r7, r0, lsl #2]
   163e4:	str	r1, [sp, #36]	; 0x24
   163e8:	sub	r8, r9, r1
   163ec:	add	r0, r9, #2
   163f0:	str	r0, [sp, #32]
   163f4:	add	r4, sp, #40	; 0x28
   163f8:	str	r5, [sp, #24]
   163fc:	mov	sl, #0
   16400:	cmp	r9, #0
   16404:	beq	16434 <putc_unlocked@plt+0x427c>
   16408:	cmp	r8, #128	; 0x80
   1640c:	bgt	164a0 <putc_unlocked@plt+0x42e8>
   16410:	movw	r0, #26876	; 0x68fc
   16414:	movt	r0, #2
   16418:	stm	sp, {r0, r8}
   1641c:	ldr	r0, [sp, #36]	; 0x24
   16420:	str	r0, [sp, #8]
   16424:	str	r4, [sp, #12]
   16428:	ldr	r0, [sp, #32]
   1642c:	str	r0, [sp, #16]
   16430:	b	16448 <putc_unlocked@plt+0x4290>
   16434:	movw	r0, #34094	; 0x852e
   16438:	movt	r0, #2
   1643c:	str	r0, [sp]
   16440:	ldr	r0, [sp, #36]	; 0x24
   16444:	str	r0, [sp, #4]
   16448:	mov	r0, r5
   1644c:	mov	r1, #128	; 0x80
   16450:	mov	r2, #1
   16454:	mvn	r3, #0
   16458:	bl	1217c <__snprintf_chk@plt>
   1645c:	cmp	r0, #128	; 0x80
   16460:	bcs	164a0 <putc_unlocked@plt+0x42e8>
   16464:	add	sl, sl, #1
   16468:	add	r4, r4, #128	; 0x80
   1646c:	add	r5, r5, #128	; 0x80
   16470:	cmp	sl, #11
   16474:	bls	16400 <putc_unlocked@plt+0x4248>
   16478:	ldr	r5, [sp, #24]
   1647c:	add	r5, r5, #1536	; 0x600
   16480:	ldr	r0, [sp, #28]
   16484:	add	r0, r0, #1
   16488:	cmp	r0, #2
   1648c:	bcc	163d8 <putc_unlocked@plt+0x4220>
   16490:	movw	r0, #41452	; 0xa1ec
   16494:	movt	r0, #3
   16498:	mov	r1, #1
   1649c:	strb	r1, [r0]
   164a0:	sub	sp, fp, #28
   164a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164a8:	b	164b0 <putc_unlocked@plt+0x42f8>
   164ac:	add	r0, r0, #1
   164b0:	ldrb	r1, [r0]
   164b4:	cmp	r1, #37	; 0x25
   164b8:	beq	164cc <putc_unlocked@plt+0x4314>
   164bc:	cmp	r1, #0
   164c0:	moveq	r0, #0
   164c4:	bxeq	lr
   164c8:	b	164ac <putc_unlocked@plt+0x42f4>
   164cc:	mov	r1, r0
   164d0:	ldrb	r2, [r1, #1]!
   164d4:	cmp	r2, #37	; 0x25
   164d8:	beq	164e8 <putc_unlocked@plt+0x4330>
   164dc:	cmp	r2, #98	; 0x62
   164e0:	bxeq	lr
   164e4:	b	164ac <putc_unlocked@plt+0x42f4>
   164e8:	mov	r0, r1
   164ec:	b	164ac <putc_unlocked@plt+0x42f4>
   164f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164f4:	add	fp, sp, #28
   164f8:	sub	sp, sp, #20
   164fc:	mov	r6, r0
   16500:	mov	r8, #12
   16504:	add	r5, sp, #16
   16508:	str	r0, [sp, #12]
   1650c:	mov	r4, #0
   16510:	mov	sl, #0
   16514:	str	r8, [sp, #16]
   16518:	movw	r0, #14
   1651c:	movt	r0, #2
   16520:	add	r0, sl, r0
   16524:	bl	120b0 <nl_langinfo@plt>
   16528:	mov	r7, r0
   1652c:	mov	r1, #37	; 0x25
   16530:	bl	11fcc <strchr@plt>
   16534:	cmp	r0, #0
   16538:	bne	165b8 <putc_unlocked@plt+0x4400>
   1653c:	bl	11f84 <__ctype_b_loc@plt>
   16540:	ldr	r9, [r0]
   16544:	ldrb	r0, [r7]
   16548:	bl	165c4 <putc_unlocked@plt+0x440c>
   1654c:	add	r0, r9, r0, lsl #1
   16550:	ldrh	r0, [r0]
   16554:	mov	r1, #0
   16558:	str	r1, [sp, #4]
   1655c:	ubfx	r0, r0, #11, #1
   16560:	str	r0, [sp]
   16564:	mov	r0, r7
   16568:	mov	r1, r6
   1656c:	mov	r2, #128	; 0x80
   16570:	mov	r3, r5
   16574:	bl	1dd28 <putc_unlocked@plt+0xbb70>
   16578:	cmp	r0, #127	; 0x7f
   1657c:	bhi	165b8 <putc_unlocked@plt+0x4400>
   16580:	ldr	r0, [sp, #16]
   16584:	cmp	r4, r0
   16588:	movls	r4, r0
   1658c:	add	r6, r6, #128	; 0x80
   16590:	add	sl, sl, #1
   16594:	cmp	sl, #12
   16598:	bcc	16514 <putc_unlocked@plt+0x435c>
   1659c:	cmp	r8, r4
   165a0:	mov	r8, r4
   165a4:	ldr	r6, [sp, #12]
   165a8:	bhi	1650c <putc_unlocked@plt+0x4354>
   165ac:	mov	r0, #1
   165b0:	sub	sp, fp, #28
   165b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165b8:	mov	r0, #0
   165bc:	sub	sp, fp, #28
   165c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165c4:	bx	lr
   165c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   165cc:	add	fp, sp, #24
   165d0:	movw	r0, #26900	; 0x6914
   165d4:	movt	r0, #2
   165d8:	bl	11f00 <getenv@plt>
   165dc:	mov	r4, r0
   165e0:	mov	r0, #0
   165e4:	cmp	r4, #0
   165e8:	ldrbne	r1, [r4]
   165ec:	cmpne	r1, #0
   165f0:	bne	165f8 <putc_unlocked@plt+0x4440>
   165f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   165f8:	movw	r7, #29212	; 0x721c
   165fc:	movt	r7, #2
   16600:	movw	r8, #26991	; 0x696f
   16604:	movt	r8, #2
   16608:	movw	r5, #4310	; 0x10d6
   1660c:	mov	r6, r7
   16610:	mov	r0, r6
   16614:	mov	r1, r8
   16618:	mov	r2, #5
   1661c:	bl	12140 <strncmp@plt>
   16620:	cmp	r0, #0
   16624:	bne	16644 <putc_unlocked@plt+0x448c>
   16628:	add	r0, r6, #5
   1662c:	mov	r1, r4
   16630:	mov	r2, #0
   16634:	bl	11ee8 <fnmatch@plt>
   16638:	cmp	r0, #0
   1663c:	moveq	r0, #1
   16640:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16644:	mov	r0, r6
   16648:	bl	11fc0 <strlen@plt>
   1664c:	add	r0, r6, r0
   16650:	add	r6, r0, #1
   16654:	sub	r0, r6, r7
   16658:	cmp	r0, r5
   1665c:	bcc	16610 <putc_unlocked@plt+0x4458>
   16660:	mov	r0, #0
   16664:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1666c:	add	fp, sp, #28
   16670:	sub	sp, sp, #4
   16674:	ldr	lr, [r0]
   16678:	ldr	ip, [r1]
   1667c:	mov	r6, #0
   16680:	mov	r9, #0
   16684:	mov	r5, #0
   16688:	cmp	r6, #4
   1668c:	bhi	16b34 <putc_unlocked@plt+0x497c>
   16690:	mov	r7, r5
   16694:	add	r4, pc, #0
   16698:	ldr	pc, [r4, r6, lsl #2]
   1669c:			; <UNDEFINED> instruction: 0x000166b0
   166a0:	andeq	r6, r1, ip, ror #15
   166a4:	andeq	r6, r1, ip, lsl #15
   166a8:			; <UNDEFINED> instruction: 0x000167b8
   166ac:	andeq	r6, r1, ip, ror #14
   166b0:	ldrb	sl, [ip]
   166b4:	sub	r5, sl, #58	; 0x3a
   166b8:	mov	r6, #5
   166bc:	cmp	r5, #36	; 0x24
   166c0:	bhi	16a68 <putc_unlocked@plt+0x48b0>
   166c4:	add	r4, pc, #0
   166c8:	ldr	pc, [r4, r5, lsl #2]
   166cc:	andeq	r6, r1, r8, lsl fp
   166d0:	andeq	r6, r1, r0, ror sl
   166d4:	andeq	r6, r1, r0, ror sl
   166d8:	andeq	r6, r1, r0, ror #14
   166dc:	andeq	r6, r1, r0, ror sl
   166e0:	andeq	r6, r1, r0, ror sl
   166e4:	andeq	r6, r1, r0, ror sl
   166e8:	andeq	r6, r1, r0, ror sl
   166ec:	andeq	r6, r1, r0, ror sl
   166f0:	andeq	r6, r1, r0, ror sl
   166f4:	andeq	r6, r1, r0, ror sl
   166f8:	andeq	r6, r1, r0, ror sl
   166fc:	andeq	r6, r1, r0, ror sl
   16700:	andeq	r6, r1, r0, ror sl
   16704:	andeq	r6, r1, r0, ror sl
   16708:	andeq	r6, r1, r0, ror sl
   1670c:	andeq	r6, r1, r0, ror sl
   16710:	andeq	r6, r1, r0, ror sl
   16714:	andeq	r6, r1, r0, ror sl
   16718:	andeq	r6, r1, r0, ror sl
   1671c:	andeq	r6, r1, r0, ror sl
   16720:	andeq	r6, r1, r0, ror sl
   16724:	andeq	r6, r1, r0, ror sl
   16728:	andeq	r6, r1, r0, ror sl
   1672c:	andeq	r6, r1, r0, ror sl
   16730:	andeq	r6, r1, r0, ror sl
   16734:	andeq	r6, r1, r0, ror sl
   16738:	andeq	r6, r1, r0, ror sl
   1673c:	andeq	r6, r1, r0, ror sl
   16740:	andeq	r6, r1, r0, ror sl
   16744:	andeq	r6, r1, r0, ror sl
   16748:	andeq	r6, r1, r0, ror sl
   1674c:	andeq	r6, r1, r0, ror sl
   16750:	andeq	r6, r1, r0, ror sl
   16754:	andeq	r6, r1, r0, asr sl
   16758:	andeq	r6, r1, r0, ror sl
   1675c:	andeq	r6, r1, ip, asr sl
   16760:	cmp	r2, #0
   16764:	beq	16a70 <putc_unlocked@plt+0x48b8>
   16768:	b	16b18 <putc_unlocked@plt+0x4960>
   1676c:	ldrb	r4, [ip]
   16770:	sub	r5, r4, #64	; 0x40
   16774:	uxtb	r5, r5
   16778:	cmp	r5, #62	; 0x3e
   1677c:	bhi	16a10 <putc_unlocked@plt+0x4858>
   16780:	and	r4, r4, #31
   16784:	strb	r4, [lr], #1
   16788:	b	16a74 <putc_unlocked@plt+0x48bc>
   1678c:	ldrb	r4, [ip]
   16790:	and	r5, r4, #248	; 0xf8
   16794:	cmp	r5, #48	; 0x30
   16798:	bne	16a08 <putc_unlocked@plt+0x4850>
   1679c:	add	r4, r4, r7, lsl #3
   167a0:	sub	r5, r4, #48	; 0x30
   167a4:	add	ip, ip, #1
   167a8:	mov	r6, #2
   167ac:	cmp	r6, #5
   167b0:	bcc	16688 <putc_unlocked@plt+0x44d0>
   167b4:	b	16b18 <putc_unlocked@plt+0x4960>
   167b8:	ldrb	r4, [ip]
   167bc:	sub	r5, r4, #48	; 0x30
   167c0:	cmp	r5, #10
   167c4:	bcc	16a28 <putc_unlocked@plt+0x4870>
   167c8:	sub	r5, r4, #65	; 0x41
   167cc:	cmp	r5, #6
   167d0:	bcc	16a34 <putc_unlocked@plt+0x487c>
   167d4:	sub	r5, r4, #97	; 0x61
   167d8:	cmp	r5, #6
   167dc:	bcs	16a08 <putc_unlocked@plt+0x4850>
   167e0:	add	r4, r4, r7, lsl #4
   167e4:	sub	r5, r4, #87	; 0x57
   167e8:	b	16a3c <putc_unlocked@plt+0x4884>
   167ec:	ldrb	r4, [ip]
   167f0:	cmp	r4, #120	; 0x78
   167f4:	bhi	16a90 <putc_unlocked@plt+0x48d8>
   167f8:	mov	sl, #7
   167fc:	mov	r6, #3
   16800:	mov	r5, #0
   16804:	add	r8, pc, #0
   16808:	ldr	pc, [r8, r4, lsl #2]
   1680c:	muleq	r1, r8, sl
   16810:	muleq	r1, r0, sl
   16814:	muleq	r1, r0, sl
   16818:	muleq	r1, r0, sl
   1681c:	muleq	r1, r0, sl
   16820:	muleq	r1, r0, sl
   16824:	muleq	r1, r0, sl
   16828:	muleq	r1, r0, sl
   1682c:	muleq	r1, r0, sl
   16830:	muleq	r1, r0, sl
   16834:	muleq	r1, r0, sl
   16838:	muleq	r1, r0, sl
   1683c:	muleq	r1, r0, sl
   16840:	muleq	r1, r0, sl
   16844:	muleq	r1, r0, sl
   16848:	muleq	r1, r0, sl
   1684c:	muleq	r1, r0, sl
   16850:	muleq	r1, r0, sl
   16854:	muleq	r1, r0, sl
   16858:	muleq	r1, r0, sl
   1685c:	muleq	r1, r0, sl
   16860:	muleq	r1, r0, sl
   16864:	muleq	r1, r0, sl
   16868:	muleq	r1, r0, sl
   1686c:	muleq	r1, r0, sl
   16870:	muleq	r1, r0, sl
   16874:	muleq	r1, r0, sl
   16878:	muleq	r1, r0, sl
   1687c:	muleq	r1, r0, sl
   16880:	muleq	r1, r0, sl
   16884:	muleq	r1, r0, sl
   16888:	muleq	r1, r0, sl
   1688c:	muleq	r1, r0, sl
   16890:	muleq	r1, r0, sl
   16894:	muleq	r1, r0, sl
   16898:	muleq	r1, r0, sl
   1689c:	muleq	r1, r0, sl
   168a0:	muleq	r1, r0, sl
   168a4:	muleq	r1, r0, sl
   168a8:	muleq	r1, r0, sl
   168ac:	muleq	r1, r0, sl
   168b0:	muleq	r1, r0, sl
   168b4:	muleq	r1, r0, sl
   168b8:	muleq	r1, r0, sl
   168bc:	muleq	r1, r0, sl
   168c0:	muleq	r1, r0, sl
   168c4:	muleq	r1, r0, sl
   168c8:	muleq	r1, r0, sl
   168cc:	strdeq	r6, [r1], -r0
   168d0:	strdeq	r6, [r1], -r0
   168d4:	strdeq	r6, [r1], -r0
   168d8:	strdeq	r6, [r1], -r0
   168dc:	strdeq	r6, [r1], -r0
   168e0:	strdeq	r6, [r1], -r0
   168e4:	strdeq	r6, [r1], -r0
   168e8:	strdeq	r6, [r1], -r0
   168ec:	muleq	r1, r0, sl
   168f0:	muleq	r1, r0, sl
   168f4:	muleq	r1, r0, sl
   168f8:	muleq	r1, r0, sl
   168fc:	muleq	r1, r0, sl
   16900:	muleq	r1, r0, sl
   16904:	muleq	r1, r0, sl
   16908:	andeq	r6, r1, r0, ror #21
   1690c:	muleq	r1, r0, sl
   16910:	muleq	r1, r0, sl
   16914:	muleq	r1, r0, sl
   16918:	muleq	r1, r0, sl
   1691c:	muleq	r1, r0, sl
   16920:	muleq	r1, r0, sl
   16924:	muleq	r1, r0, sl
   16928:	muleq	r1, r0, sl
   1692c:	muleq	r1, r0, sl
   16930:	muleq	r1, r0, sl
   16934:	muleq	r1, r0, sl
   16938:	muleq	r1, r0, sl
   1693c:	muleq	r1, r0, sl
   16940:	muleq	r1, r0, sl
   16944:	muleq	r1, r0, sl
   16948:	muleq	r1, r0, sl
   1694c:	muleq	r1, r0, sl
   16950:	muleq	r1, r0, sl
   16954:	muleq	r1, r0, sl
   16958:	muleq	r1, r0, sl
   1695c:	muleq	r1, r0, sl
   16960:	muleq	r1, r0, sl
   16964:	muleq	r1, r0, sl
   16968:	muleq	r1, r0, sl
   1696c:	andeq	r6, r1, r4, lsl #22
   16970:	muleq	r1, r0, sl
   16974:	muleq	r1, r0, sl
   16978:	muleq	r1, r0, sl
   1697c:	muleq	r1, r0, sl
   16980:	muleq	r1, r0, sl
   16984:	muleq	r1, r0, sl
   16988:			; <UNDEFINED> instruction: 0x00016ab0
   1698c:	muleq	r1, r0, sl
   16990:	strdeq	r6, [r1], -r4
   16994:			; <UNDEFINED> instruction: 0x00016ab8
   16998:	muleq	r1, r0, sl
   1699c:	muleq	r1, r0, sl
   169a0:	andeq	r6, r1, r0, asr #21
   169a4:	andeq	r6, r1, r8, asr #21
   169a8:	muleq	r1, r0, sl
   169ac:	muleq	r1, r0, sl
   169b0:	muleq	r1, r0, sl
   169b4:	muleq	r1, r0, sl
   169b8:	muleq	r1, r0, sl
   169bc:	muleq	r1, r0, sl
   169c0:	muleq	r1, r0, sl
   169c4:	ldrdeq	r6, [r1], -r0
   169c8:	muleq	r1, r0, sl
   169cc:	muleq	r1, r0, sl
   169d0:	muleq	r1, r0, sl
   169d4:	andeq	r6, r1, r8, ror #21
   169d8:	muleq	r1, r0, sl
   169dc:	ldrdeq	r6, [r1], -r8
   169e0:	muleq	r1, r0, sl
   169e4:	strdeq	r6, [r1], -r0
   169e8:	muleq	r1, r0, sl
   169ec:	andeq	r6, r1, r4, lsl #22
   169f0:	sub	r5, r4, #48	; 0x30
   169f4:	mov	r6, #2
   169f8:	add	ip, ip, #1
   169fc:	cmp	r6, #5
   16a00:	bcc	16688 <putc_unlocked@plt+0x44d0>
   16a04:	b	16b18 <putc_unlocked@plt+0x4960>
   16a08:	strb	r7, [lr], #1
   16a0c:	b	16a20 <putc_unlocked@plt+0x4868>
   16a10:	cmp	r4, #63	; 0x3f
   16a14:	bne	16b14 <putc_unlocked@plt+0x495c>
   16a18:	mov	r4, #127	; 0x7f
   16a1c:	strb	r4, [lr], #1
   16a20:	add	r9, r9, #1
   16a24:	b	16a7c <putc_unlocked@plt+0x48c4>
   16a28:	add	r4, r4, r7, lsl #4
   16a2c:	sub	r5, r4, #48	; 0x30
   16a30:	b	16a3c <putc_unlocked@plt+0x4884>
   16a34:	add	r4, r4, r7, lsl #4
   16a38:	sub	r5, r4, #55	; 0x37
   16a3c:	add	ip, ip, #1
   16a40:	mov	r6, #3
   16a44:	cmp	r6, #5
   16a48:	bcc	16688 <putc_unlocked@plt+0x44d0>
   16a4c:	b	16b18 <putc_unlocked@plt+0x4960>
   16a50:	add	ip, ip, #1
   16a54:	mov	r6, #1
   16a58:	b	16a80 <putc_unlocked@plt+0x48c8>
   16a5c:	add	ip, ip, #1
   16a60:	mov	r6, #4
   16a64:	b	16a80 <putc_unlocked@plt+0x48c8>
   16a68:	cmp	sl, #0
   16a6c:	beq	16b18 <putc_unlocked@plt+0x4960>
   16a70:	strb	sl, [lr], #1
   16a74:	add	r9, r9, #1
   16a78:	add	ip, ip, #1
   16a7c:	mov	r6, #0
   16a80:	mov	r5, r7
   16a84:	cmp	r6, #5
   16a88:	bcc	16688 <putc_unlocked@plt+0x44d0>
   16a8c:	b	16b18 <putc_unlocked@plt+0x4960>
   16a90:	mov	sl, r4
   16a94:	b	16af4 <putc_unlocked@plt+0x493c>
   16a98:	mov	r6, #6
   16a9c:	mov	r5, r7
   16aa0:	add	ip, ip, #1
   16aa4:	cmp	r6, #5
   16aa8:	bcc	16688 <putc_unlocked@plt+0x44d0>
   16aac:	b	16b18 <putc_unlocked@plt+0x4960>
   16ab0:	mov	sl, #32
   16ab4:	b	16af4 <putc_unlocked@plt+0x493c>
   16ab8:	mov	sl, #8
   16abc:	b	16af4 <putc_unlocked@plt+0x493c>
   16ac0:	mov	sl, #27
   16ac4:	b	16af4 <putc_unlocked@plt+0x493c>
   16ac8:	mov	sl, #12
   16acc:	b	16af4 <putc_unlocked@plt+0x493c>
   16ad0:	mov	sl, #10
   16ad4:	b	16af4 <putc_unlocked@plt+0x493c>
   16ad8:	mov	sl, #9
   16adc:	b	16af4 <putc_unlocked@plt+0x493c>
   16ae0:	mov	sl, #127	; 0x7f
   16ae4:	b	16af4 <putc_unlocked@plt+0x493c>
   16ae8:	mov	sl, #13
   16aec:	b	16af4 <putc_unlocked@plt+0x493c>
   16af0:	mov	sl, #11
   16af4:	strb	sl, [lr], #1
   16af8:	add	r9, r9, #1
   16afc:	mov	r6, #0
   16b00:	mov	r5, sl
   16b04:	add	ip, ip, #1
   16b08:	cmp	r6, #5
   16b0c:	bcc	16688 <putc_unlocked@plt+0x44d0>
   16b10:	b	16b18 <putc_unlocked@plt+0x4960>
   16b14:	mov	r6, #6
   16b18:	str	lr, [r0]
   16b1c:	str	ip, [r1]
   16b20:	str	r9, [r3]
   16b24:	subs	r0, r6, #6
   16b28:	movwne	r0, #1
   16b2c:	sub	sp, fp, #28
   16b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b34:	bl	1214c <abort@plt>
   16b38:	push	{r4, r5, r6, r7, fp, lr}
   16b3c:	add	fp, sp, #16
   16b40:	mov	r4, r2
   16b44:	mov	r5, r1
   16b48:	mov	r6, r0
   16b4c:	bl	11fe4 <__errno_location@plt>
   16b50:	ldr	r7, [r0]
   16b54:	mov	r0, #4
   16b58:	mov	r1, r4
   16b5c:	bl	21a84 <_obstack_memory_used@@Base+0x16bc>
   16b60:	mov	r3, r0
   16b64:	mov	r0, #0
   16b68:	mov	r1, r7
   16b6c:	mov	r2, r5
   16b70:	bl	11ec4 <error@plt>
   16b74:	mov	r0, r6
   16b78:	pop	{r4, r5, r6, r7, fp, lr}
   16b7c:	b	16c50 <putc_unlocked@plt+0x4a98>
   16b80:	push	{fp, lr}
   16b84:	mov	fp, sp
   16b88:	sub	sp, sp, #8
   16b8c:	mov	r2, r1
   16b90:	mov	r1, #256	; 0x100
   16b94:	str	r1, [sp]
   16b98:	movw	r1, #27261	; 0x6a7d
   16b9c:	movt	r1, #2
   16ba0:	mov	r3, #4096	; 0x1000
   16ba4:	bl	17098 <putc_unlocked@plt+0x4ee0>
   16ba8:	mov	sp, fp
   16bac:	pop	{fp, pc}
   16bb0:	push	{fp, lr}
   16bb4:	mov	fp, sp
   16bb8:	sub	sp, sp, #8
   16bbc:	mov	r2, r1
   16bc0:	mov	r1, r0
   16bc4:	mov	r0, #256	; 0x100
   16bc8:	str	r0, [sp]
   16bcc:	mvn	r0, #99	; 0x63
   16bd0:	mov	r3, #0
   16bd4:	bl	17098 <putc_unlocked@plt+0x4ee0>
   16bd8:	mov	sp, fp
   16bdc:	pop	{fp, pc}
   16be0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16be4:	add	fp, sp, #24
   16be8:	mov	r8, r3
   16bec:	mov	r6, r2
   16bf0:	mov	r7, r1
   16bf4:	mov	r5, r0
   16bf8:	mov	r0, #16
   16bfc:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   16c00:	mov	r4, r0
   16c04:	stm	r0, {r6, r8}
   16c08:	str	r5, [r0, #8]
   16c0c:	str	r7, [r0, #12]
   16c10:	movw	r0, #37732	; 0x9364
   16c14:	movt	r0, #3
   16c18:	ldr	r0, [r0]
   16c1c:	mov	r1, r4
   16c20:	bl	1ca98 <putc_unlocked@plt+0xa8e0>
   16c24:	cmp	r0, #0
   16c28:	beq	16c4c <putc_unlocked@plt+0x4a94>
   16c2c:	mov	r5, r0
   16c30:	cmp	r0, r4
   16c34:	beq	16c40 <putc_unlocked@plt+0x4a88>
   16c38:	mov	r0, r4
   16c3c:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   16c40:	subs	r0, r5, r4
   16c44:	movwne	r0, #1
   16c48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c4c:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   16c50:	mov	r1, #2
   16c54:	cmp	r0, #0
   16c58:	bne	16c74 <putc_unlocked@plt+0x4abc>
   16c5c:	movw	r0, #37680	; 0x9330
   16c60:	movt	r0, #3
   16c64:	ldr	r0, [r0]
   16c68:	cmp	r0, #0
   16c6c:	bxne	lr
   16c70:	mov	r1, #1
   16c74:	movw	r0, #37680	; 0x9330
   16c78:	movt	r0, #3
   16c7c:	str	r1, [r0]
   16c80:	bx	lr
   16c84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c88:	add	fp, sp, #24
   16c8c:	mov	r5, r3
   16c90:	mov	r7, r2
   16c94:	mov	r8, r1
   16c98:	mov	r6, r0
   16c9c:	movw	r4, #37736	; 0x9368
   16ca0:	movt	r4, #3
   16ca4:	ldr	r0, [r4, #12]
   16ca8:	ldr	r1, [r4, #16]
   16cac:	sub	r0, r1, r0
   16cb0:	cmp	r0, #15
   16cb4:	bhi	16cc8 <putc_unlocked@plt+0x4b10>
   16cb8:	movw	r0, #37736	; 0x9368
   16cbc:	movt	r0, #3
   16cc0:	mov	r1, #16
   16cc4:	bl	201bc <_obstack_newchunk@@Base>
   16cc8:	ldr	r0, [r4, #12]
   16ccc:	add	r1, r0, #16
   16cd0:	str	r1, [r4, #12]
   16cd4:	str	r7, [r0]
   16cd8:	stmib	r0, {r5, r6, r8}
   16cdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ce0:	movw	r0, #37792	; 0x93a0
   16ce4:	movt	r0, #3
   16ce8:	ldrb	r0, [r0]
   16cec:	cmp	r0, #0
   16cf0:	bxeq	lr
   16cf4:	movw	r0, #27232	; 0x6a60
   16cf8:	movt	r0, #2
   16cfc:	b	16ee4 <putc_unlocked@plt+0x4d2c>
   16d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d04:	add	fp, sp, #28
   16d08:	sub	sp, sp, #28
   16d0c:	sub	sp, sp, #8192	; 0x2000
   16d10:	mov	r6, r3
   16d14:	mov	r3, r2
   16d18:	mov	r2, r1
   16d1c:	mov	r7, r0
   16d20:	add	r0, sp, #24
   16d24:	str	r0, [sp, #20]
   16d28:	add	r0, sp, #19
   16d2c:	mov	r1, #0
   16d30:	str	r1, [sp]
   16d34:	str	r0, [sp, #4]
   16d38:	add	r0, sp, #20
   16d3c:	str	r7, [sp, #12]
   16d40:	mov	r1, r7
   16d44:	bl	1723c <putc_unlocked@plt+0x5084>
   16d48:	mov	r5, r0
   16d4c:	ldrb	sl, [sp, #19]
   16d50:	cmp	sl, #0
   16d54:	ldrne	r0, [fp, #8]
   16d58:	cmpne	r0, #0
   16d5c:	movne	r0, #32
   16d60:	blne	153a4 <putc_unlocked@plt+0x31ec>
   16d64:	ldr	r4, [fp, #16]
   16d68:	cmp	r6, #0
   16d6c:	movne	r0, r6
   16d70:	blne	17768 <putc_unlocked@plt+0x55b0>
   16d74:	ldr	r7, [fp, #12]
   16d78:	cmp	r4, #0
   16d7c:	beq	16e38 <putc_unlocked@plt+0x4c80>
   16d80:	movw	r0, #38369	; 0x95e1
   16d84:	movt	r0, #3
   16d88:	ldrb	r0, [r0]
   16d8c:	mov	r8, #0
   16d90:	cmp	r0, #0
   16d94:	beq	16dc4 <putc_unlocked@plt+0x4c0c>
   16d98:	cmp	sl, #0
   16d9c:	bne	16dc4 <putc_unlocked@plt+0x4c0c>
   16da0:	movw	r0, #41465	; 0xa1f9
   16da4:	movt	r0, #3
   16da8:	ldrb	r0, [r0]
   16dac:	cmp	r0, #0
   16db0:	beq	16dc4 <putc_unlocked@plt+0x4c0c>
   16db4:	ldr	r0, [sp, #20]
   16db8:	ldrb	r0, [r0]
   16dbc:	bl	12188 <putchar_unlocked@plt>
   16dc0:	mov	r8, #1
   16dc4:	movw	r0, #37888	; 0x9400
   16dc8:	movt	r0, #3
   16dcc:	ldr	r0, [r0]
   16dd0:	mov	r1, #0
   16dd4:	bl	177b0 <putc_unlocked@plt+0x55f8>
   16dd8:	mov	r6, r0
   16ddc:	mov	r9, r4
   16de0:	mov	r0, r4
   16de4:	mov	r1, #1
   16de8:	bl	177b0 <putc_unlocked@plt+0x55f8>
   16dec:	mov	r4, r0
   16df0:	ldrb	r0, [r0]
   16df4:	str	r4, [sp]
   16df8:	movw	r1, #27261	; 0x6a7d
   16dfc:	movt	r1, #2
   16e00:	movw	r3, #18080	; 0x46a0
   16e04:	movt	r3, #2
   16e08:	cmp	r0, #47	; 0x2f
   16e0c:	moveq	r3, r1
   16e10:	movw	r1, #27235	; 0x6a63
   16e14:	movt	r1, #2
   16e18:	mov	r0, #1
   16e1c:	mov	r2, r6
   16e20:	bl	12014 <__printf_chk@plt>
   16e24:	mov	r0, r6
   16e28:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   16e2c:	mov	r0, r4
   16e30:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   16e34:	b	16e40 <putc_unlocked@plt+0x4c88>
   16e38:	mov	r9, r4
   16e3c:	mov	r8, #0
   16e40:	cmp	r7, #0
   16e44:	movne	r0, r7
   16e48:	blne	17870 <putc_unlocked@plt+0x56b8>
   16e4c:	sub	r2, r5, r8, lsl #1
   16e50:	ldr	r6, [sp, #20]
   16e54:	add	r0, r6, r8
   16e58:	movw	r4, #37668	; 0x9324
   16e5c:	movt	r4, #3
   16e60:	ldr	r3, [r4]
   16e64:	mov	r1, #1
   16e68:	bl	11d98 <fwrite_unlocked@plt>
   16e6c:	movw	r0, #38176	; 0x9520
   16e70:	movt	r0, #3
   16e74:	ldrd	r2, [r0]
   16e78:	adds	r2, r2, r5
   16e7c:	adc	r3, r3, #0
   16e80:	strd	r2, [r0]
   16e84:	cmp	r7, #0
   16e88:	movne	r0, r7
   16e8c:	blne	17870 <putc_unlocked@plt+0x56b8>
   16e90:	cmp	r9, #0
   16e94:	beq	16ebc <putc_unlocked@plt+0x4d04>
   16e98:	ldr	r1, [r4]
   16e9c:	movw	r0, #27255	; 0x6a77
   16ea0:	movt	r0, #2
   16ea4:	bl	11c84 <fputs_unlocked@plt>
   16ea8:	cmp	r8, #0
   16eac:	beq	16ebc <putc_unlocked@plt+0x4d04>
   16eb0:	add	r0, r6, r5
   16eb4:	ldrb	r0, [r0, #-1]
   16eb8:	bl	12188 <putchar_unlocked@plt>
   16ebc:	add	r0, sp, #24
   16ec0:	cmp	r6, r0
   16ec4:	ldrne	r0, [sp, #12]
   16ec8:	cmpne	r6, r0
   16ecc:	beq	16ed8 <putc_unlocked@plt+0x4d20>
   16ed0:	mov	r0, r6
   16ed4:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   16ed8:	add	r0, r5, sl
   16edc:	sub	sp, fp, #28
   16ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ee4:	push	{r4, sl, fp, lr}
   16ee8:	add	fp, sp, #8
   16eec:	mov	r4, r0
   16ef0:	bl	11fc0 <strlen@plt>
   16ef4:	mov	r1, r0
   16ef8:	mov	r0, r4
   16efc:	pop	{r4, sl, fp, lr}
   16f00:	b	1705c <putc_unlocked@plt+0x4ea4>
   16f04:	push	{r4, sl, fp, lr}
   16f08:	add	fp, sp, #8
   16f0c:	mov	r4, r0
   16f10:	movw	r0, #38312	; 0x95a8
   16f14:	movt	r0, #3
   16f18:	ldr	r0, [r0]
   16f1c:	cmp	r0, #2
   16f20:	beq	16f80 <putc_unlocked@plt+0x4dc8>
   16f24:	ldrb	r1, [r4]
   16f28:	cmp	r1, #46	; 0x2e
   16f2c:	bne	16f54 <putc_unlocked@plt+0x4d9c>
   16f30:	cmp	r0, #0
   16f34:	beq	16f78 <putc_unlocked@plt+0x4dc0>
   16f38:	ldrb	r1, [r4, #1]
   16f3c:	mov	r2, #1
   16f40:	cmp	r1, #46	; 0x2e
   16f44:	movweq	r2, #2
   16f48:	ldrb	r1, [r4, r2]
   16f4c:	cmp	r1, #0
   16f50:	beq	16f78 <putc_unlocked@plt+0x4dc0>
   16f54:	cmp	r0, #0
   16f58:	bne	16f80 <putc_unlocked@plt+0x4dc8>
   16f5c:	movw	r0, #38352	; 0x95d0
   16f60:	movt	r0, #3
   16f64:	ldr	r0, [r0]
   16f68:	mov	r1, r4
   16f6c:	bl	178d8 <putc_unlocked@plt+0x5720>
   16f70:	cmp	r0, #0
   16f74:	beq	16f80 <putc_unlocked@plt+0x4dc8>
   16f78:	mov	r0, #1
   16f7c:	pop	{r4, sl, fp, pc}
   16f80:	movw	r0, #38376	; 0x95e8
   16f84:	movt	r0, #3
   16f88:	ldr	r0, [r0]
   16f8c:	mov	r1, r4
   16f90:	pop	{r4, sl, fp, lr}
   16f94:	b	178d8 <putc_unlocked@plt+0x5720>
   16f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f9c:	add	fp, sp, #28
   16fa0:	sub	sp, sp, #132	; 0x84
   16fa4:	movw	r7, #37912	; 0x9418
   16fa8:	movt	r7, #3
   16fac:	movw	r4, #37908	; 0x9414
   16fb0:	movt	r4, #3
   16fb4:	movw	r9, #37904	; 0x9410
   16fb8:	movt	r9, #3
   16fbc:	movw	sl, #37668	; 0x9324
   16fc0:	movt	sl, #3
   16fc4:	movw	r8, #38184	; 0x9528
   16fc8:	movt	r8, #3
   16fcc:	add	r5, sp, #4
   16fd0:	b	16fec <putc_unlocked@plt+0x4e34>
   16fd4:	mov	r0, r6
   16fd8:	bl	11ca8 <raise@plt>
   16fdc:	mov	r0, #2
   16fe0:	mov	r1, r5
   16fe4:	mov	r2, #0
   16fe8:	bl	11d20 <sigprocmask@plt>
   16fec:	ldr	r0, [r7]
   16ff0:	cmp	r0, #0
   16ff4:	bne	17008 <putc_unlocked@plt+0x4e50>
   16ff8:	ldr	r0, [r4]
   16ffc:	cmp	r0, #0
   17000:	subeq	sp, fp, #28
   17004:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17008:	ldrb	r0, [r9]
   1700c:	cmp	r0, #1
   17010:	bleq	15934 <putc_unlocked@plt+0x377c>
   17014:	ldr	r0, [sl]
   17018:	bl	11e1c <fflush_unlocked@plt>
   1701c:	mov	r0, #0
   17020:	mov	r1, r8
   17024:	mov	r2, r5
   17028:	bl	11d20 <sigprocmask@plt>
   1702c:	ldr	r6, [r7]
   17030:	ldr	r0, [r4]
   17034:	cmp	r0, #0
   17038:	beq	1704c <putc_unlocked@plt+0x4e94>
   1703c:	sub	r0, r0, #1
   17040:	str	r0, [r4]
   17044:	mov	r6, #19
   17048:	b	16fd4 <putc_unlocked@plt+0x4e1c>
   1704c:	mov	r0, r6
   17050:	mov	r1, #0
   17054:	bl	11d8c <signal@plt>
   17058:	b	16fd4 <putc_unlocked@plt+0x4e1c>
   1705c:	push	{r4, r5, fp, lr}
   17060:	add	fp, sp, #8
   17064:	mov	r2, r1
   17068:	movw	r1, #38176	; 0x9520
   1706c:	movt	r1, #3
   17070:	ldrd	r4, [r1]
   17074:	adds	r4, r4, r2
   17078:	adc	r5, r5, #0
   1707c:	strd	r4, [r1]
   17080:	movw	r1, #37668	; 0x9324
   17084:	movt	r1, #3
   17088:	ldr	r3, [r1]
   1708c:	mov	r1, #1
   17090:	pop	{r4, r5, fp, lr}
   17094:	b	11d98 <fwrite_unlocked@plt>
   17098:	push	{r4, r5, r6, sl, fp, lr}
   1709c:	add	fp, sp, #16
   170a0:	sub	sp, sp, #272	; 0x110
   170a4:	mov	r5, r2
   170a8:	add	r2, sp, #16
   170ac:	str	r2, [sp]
   170b0:	ldr	r6, [fp, #8]
   170b4:	mov	r2, r3
   170b8:	mov	r3, r6
   170bc:	bl	12068 <statx@plt>
   170c0:	mov	r4, r0
   170c4:	cmp	r0, #0
   170c8:	blt	17128 <putc_unlocked@plt+0x4f70>
   170cc:	add	r0, sp, #16
   170d0:	mov	r1, r5
   170d4:	bl	17134 <putc_unlocked@plt+0x4f7c>
   170d8:	tst	r6, #2048	; 0x800
   170dc:	beq	17128 <putc_unlocked@plt+0x4f70>
   170e0:	ldrb	r0, [sp, #17]
   170e4:	tst	r0, #8
   170e8:	bne	170fc <putc_unlocked@plt+0x4f44>
   170ec:	mvn	r0, #0
   170f0:	str	r0, [r5, #80]	; 0x50
   170f4:	str	r0, [r5, #84]	; 0x54
   170f8:	b	17128 <putc_unlocked@plt+0x4f70>
   170fc:	add	r5, r5, #80	; 0x50
   17100:	ldr	r2, [sp, #96]	; 0x60
   17104:	ldr	r3, [sp, #100]	; 0x64
   17108:	ldr	r0, [sp, #104]	; 0x68
   1710c:	ldr	r1, [sp, #108]	; 0x6c
   17110:	stm	sp, {r0, r1}
   17114:	add	r0, sp, #8
   17118:	bl	1722c <putc_unlocked@plt+0x5074>
   1711c:	ldr	r0, [sp, #8]
   17120:	ldr	r1, [sp, #12]
   17124:	strd	r0, [r5]
   17128:	mov	r0, r4
   1712c:	sub	sp, fp, #16
   17130:	pop	{r4, r5, r6, sl, fp, pc}
   17134:	push	{r4, r5, fp, lr}
   17138:	add	fp, sp, #8
   1713c:	sub	sp, sp, #16
   17140:	mov	r4, r1
   17144:	mov	r5, r0
   17148:	ldrd	r0, [r0, #136]	; 0x88
   1714c:	bl	11ce4 <gnu_dev_makedev@plt>
   17150:	strd	r0, [r4]
   17154:	ldrd	r0, [r5, #32]
   17158:	strd	r0, [r4, #96]	; 0x60
   1715c:	ldrh	r0, [r5, #28]
   17160:	str	r0, [r4, #16]
   17164:	ldr	r0, [r5, #16]
   17168:	str	r0, [r4, #20]
   1716c:	ldr	r0, [r5, #20]
   17170:	str	r0, [r4, #24]
   17174:	ldr	r0, [r5, #24]
   17178:	str	r0, [r4, #28]
   1717c:	ldrd	r0, [r5, #128]	; 0x80
   17180:	bl	11ce4 <gnu_dev_makedev@plt>
   17184:	strd	r0, [r4, #32]
   17188:	ldr	r0, [r5, #40]	; 0x28
   1718c:	ldr	r1, [r5, #44]	; 0x2c
   17190:	str	r1, [r4, #52]	; 0x34
   17194:	str	r0, [r4, #48]	; 0x30
   17198:	ldr	r0, [r5, #4]
   1719c:	str	r0, [r4, #56]	; 0x38
   171a0:	ldr	r0, [r5, #48]	; 0x30
   171a4:	ldr	r1, [r5, #52]	; 0x34
   171a8:	strd	r0, [r4, #64]	; 0x40
   171ac:	ldr	r2, [r5, #64]	; 0x40
   171b0:	ldr	r3, [r5, #68]	; 0x44
   171b4:	ldr	r0, [r5, #72]	; 0x48
   171b8:	ldr	r1, [r5, #76]	; 0x4c
   171bc:	stm	sp, {r0, r1}
   171c0:	add	r0, sp, #8
   171c4:	bl	1722c <putc_unlocked@plt+0x5074>
   171c8:	ldr	r0, [sp, #8]
   171cc:	ldr	r1, [sp, #12]
   171d0:	strd	r0, [r4, #72]	; 0x48
   171d4:	ldr	r2, [r5, #112]	; 0x70
   171d8:	ldr	r3, [r5, #116]	; 0x74
   171dc:	ldr	r0, [r5, #120]	; 0x78
   171e0:	ldr	r1, [r5, #124]	; 0x7c
   171e4:	stm	sp, {r0, r1}
   171e8:	add	r0, sp, #8
   171ec:	bl	1722c <putc_unlocked@plt+0x5074>
   171f0:	ldr	r0, [sp, #8]
   171f4:	ldr	r1, [sp, #12]
   171f8:	strd	r0, [r4, #80]	; 0x50
   171fc:	ldr	r2, [r5, #96]	; 0x60
   17200:	ldr	r3, [r5, #100]	; 0x64
   17204:	ldr	r0, [r5, #104]	; 0x68
   17208:	ldr	r1, [r5, #108]	; 0x6c
   1720c:	stm	sp, {r0, r1}
   17210:	add	r0, sp, #8
   17214:	bl	1722c <putc_unlocked@plt+0x5074>
   17218:	ldr	r0, [sp, #8]
   1721c:	ldr	r1, [sp, #12]
   17220:	strd	r0, [r4, #88]	; 0x58
   17224:	sub	sp, fp, #8
   17228:	pop	{r4, r5, fp, pc}
   1722c:	str	r2, [r0]
   17230:	ldr	r1, [sp]
   17234:	str	r1, [r0, #4]
   17238:	bx	lr
   1723c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17240:	add	fp, sp, #28
   17244:	sub	sp, sp, #36	; 0x24
   17248:	mov	r6, r3
   1724c:	mov	r7, r2
   17250:	mov	r5, r1
   17254:	mov	sl, r0
   17258:	ldr	r4, [r0]
   1725c:	mov	r0, r2
   17260:	bl	20540 <_obstack_memory_used@@Base+0x178>
   17264:	movw	r1, #38368	; 0x95e0
   17268:	movt	r1, #3
   1726c:	ldrb	r1, [r1]
   17270:	cmp	r1, #0
   17274:	beq	17318 <putc_unlocked@plt+0x5160>
   17278:	sub	r1, r0, #1
   1727c:	mov	r2, #0
   17280:	cmp	r1, #2
   17284:	movwcc	r2, #1
   17288:	clz	r0, r0
   1728c:	lsr	r0, r0, #5
   17290:	orr	r8, r0, r2
   17294:	cmp	r6, #0
   17298:	beq	17324 <putc_unlocked@plt+0x516c>
   1729c:	str	r7, [sp]
   172a0:	mov	r0, r4
   172a4:	mov	r1, #8192	; 0x2000
   172a8:	mov	r2, r5
   172ac:	mvn	r3, #0
   172b0:	bl	20604 <_obstack_memory_used@@Base+0x23c>
   172b4:	mov	r9, r0
   172b8:	cmp	r0, #8192	; 0x2000
   172bc:	bcc	172e4 <putc_unlocked@plt+0x512c>
   172c0:	add	r4, r9, #1
   172c4:	mov	r0, r4
   172c8:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   172cc:	str	r7, [sp]
   172d0:	mov	r1, r4
   172d4:	mov	r4, r0
   172d8:	mov	r2, r5
   172dc:	mvn	r3, #0
   172e0:	bl	20604 <_obstack_memory_used@@Base+0x23c>
   172e4:	ldrb	r0, [r4]
   172e8:	ldrb	r1, [r5]
   172ec:	mov	r7, #1
   172f0:	cmp	r1, r0
   172f4:	ldr	r6, [fp, #8]
   172f8:	bne	1730c <putc_unlocked@plt+0x5154>
   172fc:	mov	r0, r5
   17300:	bl	11fc0 <strlen@plt>
   17304:	subs	r7, r0, r9
   17308:	movwne	r7, #1
   1730c:	cmp	r8, #0
   17310:	bne	17368 <putc_unlocked@plt+0x51b0>
   17314:	b	17674 <putc_unlocked@plt+0x54bc>
   17318:	mov	r8, #0
   1731c:	cmp	r6, #0
   17320:	bne	1729c <putc_unlocked@plt+0x50e4>
   17324:	mov	r0, r5
   17328:	bl	11fc0 <strlen@plt>
   1732c:	mov	r9, r0
   17330:	mov	r7, #0
   17334:	cmp	r8, #0
   17338:	beq	1766c <putc_unlocked@plt+0x54b4>
   1733c:	cmp	r9, #8192	; 0x2000
   17340:	bcc	17350 <putc_unlocked@plt+0x5198>
   17344:	add	r0, r9, #1
   17348:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   1734c:	mov	r4, r0
   17350:	add	r2, r9, #1
   17354:	mov	r0, r4
   17358:	mov	r1, r5
   1735c:	bl	11d74 <memcpy@plt>
   17360:	mov	r7, #0
   17364:	ldr	r6, [fp, #8]
   17368:	str	sl, [sp, #8]
   1736c:	add	sl, r4, r9
   17370:	bl	11e7c <__ctype_get_mb_cur_max@plt>
   17374:	cmp	r0, #1
   17378:	str	r4, [sp, #12]
   1737c:	str	r7, [sp, #16]
   17380:	bls	17620 <putc_unlocked@plt+0x5468>
   17384:	cmp	r9, #1
   17388:	blt	176f4 <putc_unlocked@plt+0x553c>
   1738c:	mov	r3, #0
   17390:	add	r9, sp, #24
   17394:	mov	r7, #0
   17398:	mov	r8, r4
   1739c:	mov	r5, r4
   173a0:	ldrb	r0, [r5]
   173a4:	sub	r1, r0, #32
   173a8:	cmp	r1, #94	; 0x5e
   173ac:	bhi	1754c <putc_unlocked@plt+0x5394>
   173b0:	add	r2, pc, #0
   173b4:	ldr	pc, [r2, r1, lsl #2]
   173b8:	andeq	r7, r1, r4, lsr r5
   173bc:	andeq	r7, r1, r4, lsr r5
   173c0:	andeq	r7, r1, r4, lsr r5
   173c4:	andeq	r7, r1, r4, lsr r5
   173c8:	andeq	r7, r1, ip, asr #10
   173cc:	andeq	r7, r1, r4, lsr r5
   173d0:	andeq	r7, r1, r4, lsr r5
   173d4:	andeq	r7, r1, r4, lsr r5
   173d8:	andeq	r7, r1, r4, lsr r5
   173dc:	andeq	r7, r1, r4, lsr r5
   173e0:	andeq	r7, r1, r4, lsr r5
   173e4:	andeq	r7, r1, r4, lsr r5
   173e8:	andeq	r7, r1, r4, lsr r5
   173ec:	andeq	r7, r1, r4, lsr r5
   173f0:	andeq	r7, r1, r4, lsr r5
   173f4:	andeq	r7, r1, r4, lsr r5
   173f8:	andeq	r7, r1, r4, lsr r5
   173fc:	andeq	r7, r1, r4, lsr r5
   17400:	andeq	r7, r1, r4, lsr r5
   17404:	andeq	r7, r1, r4, lsr r5
   17408:	andeq	r7, r1, r4, lsr r5
   1740c:	andeq	r7, r1, r4, lsr r5
   17410:	andeq	r7, r1, r4, lsr r5
   17414:	andeq	r7, r1, r4, lsr r5
   17418:	andeq	r7, r1, r4, lsr r5
   1741c:	andeq	r7, r1, r4, lsr r5
   17420:	andeq	r7, r1, r4, lsr r5
   17424:	andeq	r7, r1, r4, lsr r5
   17428:	andeq	r7, r1, r4, lsr r5
   1742c:	andeq	r7, r1, r4, lsr r5
   17430:	andeq	r7, r1, r4, lsr r5
   17434:	andeq	r7, r1, r4, lsr r5
   17438:	andeq	r7, r1, ip, asr #10
   1743c:	andeq	r7, r1, r4, lsr r5
   17440:	andeq	r7, r1, r4, lsr r5
   17444:	andeq	r7, r1, r4, lsr r5
   17448:	andeq	r7, r1, r4, lsr r5
   1744c:	andeq	r7, r1, r4, lsr r5
   17450:	andeq	r7, r1, r4, lsr r5
   17454:	andeq	r7, r1, r4, lsr r5
   17458:	andeq	r7, r1, r4, lsr r5
   1745c:	andeq	r7, r1, r4, lsr r5
   17460:	andeq	r7, r1, r4, lsr r5
   17464:	andeq	r7, r1, r4, lsr r5
   17468:	andeq	r7, r1, r4, lsr r5
   1746c:	andeq	r7, r1, r4, lsr r5
   17470:	andeq	r7, r1, r4, lsr r5
   17474:	andeq	r7, r1, r4, lsr r5
   17478:	andeq	r7, r1, r4, lsr r5
   1747c:	andeq	r7, r1, r4, lsr r5
   17480:	andeq	r7, r1, r4, lsr r5
   17484:	andeq	r7, r1, r4, lsr r5
   17488:	andeq	r7, r1, r4, lsr r5
   1748c:	andeq	r7, r1, r4, lsr r5
   17490:	andeq	r7, r1, r4, lsr r5
   17494:	andeq	r7, r1, r4, lsr r5
   17498:	andeq	r7, r1, r4, lsr r5
   1749c:	andeq	r7, r1, r4, lsr r5
   174a0:	andeq	r7, r1, r4, lsr r5
   174a4:	andeq	r7, r1, r4, lsr r5
   174a8:	andeq	r7, r1, r4, lsr r5
   174ac:	andeq	r7, r1, r4, lsr r5
   174b0:	andeq	r7, r1, r4, lsr r5
   174b4:	andeq	r7, r1, r4, lsr r5
   174b8:	andeq	r7, r1, ip, asr #10
   174bc:	andeq	r7, r1, r4, lsr r5
   174c0:	andeq	r7, r1, r4, lsr r5
   174c4:	andeq	r7, r1, r4, lsr r5
   174c8:	andeq	r7, r1, r4, lsr r5
   174cc:	andeq	r7, r1, r4, lsr r5
   174d0:	andeq	r7, r1, r4, lsr r5
   174d4:	andeq	r7, r1, r4, lsr r5
   174d8:	andeq	r7, r1, r4, lsr r5
   174dc:	andeq	r7, r1, r4, lsr r5
   174e0:	andeq	r7, r1, r4, lsr r5
   174e4:	andeq	r7, r1, r4, lsr r5
   174e8:	andeq	r7, r1, r4, lsr r5
   174ec:	andeq	r7, r1, r4, lsr r5
   174f0:	andeq	r7, r1, r4, lsr r5
   174f4:	andeq	r7, r1, r4, lsr r5
   174f8:	andeq	r7, r1, r4, lsr r5
   174fc:	andeq	r7, r1, r4, lsr r5
   17500:	andeq	r7, r1, r4, lsr r5
   17504:	andeq	r7, r1, r4, lsr r5
   17508:	andeq	r7, r1, r4, lsr r5
   1750c:	andeq	r7, r1, r4, lsr r5
   17510:	andeq	r7, r1, r4, lsr r5
   17514:	andeq	r7, r1, r4, lsr r5
   17518:	andeq	r7, r1, r4, lsr r5
   1751c:	andeq	r7, r1, r4, lsr r5
   17520:	andeq	r7, r1, r4, lsr r5
   17524:	andeq	r7, r1, r4, lsr r5
   17528:	andeq	r7, r1, r4, lsr r5
   1752c:	andeq	r7, r1, r4, lsr r5
   17530:	andeq	r7, r1, r4, lsr r5
   17534:	strb	r0, [r8], #1
   17538:	add	r7, r7, #1
   1753c:	add	r5, r5, #1
   17540:	cmp	r5, sl
   17544:	bcc	173a0 <putc_unlocked@plt+0x51e8>
   17548:	b	176fc <putc_unlocked@plt+0x5544>
   1754c:	str	r3, [sp, #28]
   17550:	str	r3, [sp, #24]
   17554:	mov	r6, r9
   17558:	sub	r2, sl, r5
   1755c:	add	r0, sp, #20
   17560:	mov	r1, r5
   17564:	mov	r3, r6
   17568:	bl	1dcc8 <putc_unlocked@plt+0xbb10>
   1756c:	cmp	r0, #0
   17570:	beq	1758c <putc_unlocked@plt+0x53d4>
   17574:	mov	r6, r0
   17578:	cmn	r0, #2
   1757c:	beq	175f4 <putc_unlocked@plt+0x543c>
   17580:	cmn	r6, #1
   17584:	bne	17590 <putc_unlocked@plt+0x53d8>
   17588:	b	175fc <putc_unlocked@plt+0x5444>
   1758c:	mov	r6, #1
   17590:	ldr	r0, [sp, #20]
   17594:	bl	11d14 <wcwidth@plt>
   17598:	cmp	r0, #0
   1759c:	blt	175c8 <putc_unlocked@plt+0x5410>
   175a0:	mov	r1, r6
   175a4:	mov	r2, r8
   175a8:	mov	r3, r5
   175ac:	ldrb	r4, [r3], #1
   175b0:	strb	r4, [r2], #1
   175b4:	subs	r1, r1, #1
   175b8:	bne	175ac <putc_unlocked@plt+0x53f4>
   175bc:	add	r8, r8, r6
   175c0:	ldr	r4, [sp, #12]
   175c4:	b	175d4 <putc_unlocked@plt+0x541c>
   175c8:	mov	r0, #63	; 0x3f
   175cc:	strb	r0, [r8], #1
   175d0:	mov	r0, #1
   175d4:	add	r5, r5, r6
   175d8:	add	r7, r0, r7
   175dc:	mov	r6, r9
   175e0:	mov	r0, r9
   175e4:	bl	11d80 <mbsinit@plt>
   175e8:	cmp	r0, #0
   175ec:	beq	17558 <putc_unlocked@plt+0x53a0>
   175f0:	b	1760c <putc_unlocked@plt+0x5454>
   175f4:	mov	r5, sl
   175f8:	b	17600 <putc_unlocked@plt+0x5448>
   175fc:	add	r5, r5, #1
   17600:	mov	r0, #63	; 0x3f
   17604:	strb	r0, [r8], #1
   17608:	add	r7, r7, #1
   1760c:	ldr	r6, [fp, #8]
   17610:	mov	r3, #0
   17614:	cmp	r5, sl
   17618:	bcc	173a0 <putc_unlocked@plt+0x51e8>
   1761c:	b	176fc <putc_unlocked@plt+0x5544>
   17620:	cmp	r9, #1
   17624:	blt	17708 <putc_unlocked@plt+0x5550>
   17628:	bl	11f84 <__ctype_b_loc@plt>
   1762c:	mov	r5, r0
   17630:	mov	r7, #63	; 0x3f
   17634:	ldr	r6, [r5]
   17638:	ldrb	r0, [r4]
   1763c:	bl	165c4 <putc_unlocked@plt+0x440c>
   17640:	add	r0, r6, r0, lsl #1
   17644:	ldrb	r0, [r0, #1]
   17648:	tst	r0, #64	; 0x40
   1764c:	strbeq	r7, [r4]
   17650:	add	r4, r4, #1
   17654:	cmp	r4, sl
   17658:	bcc	17634 <putc_unlocked@plt+0x547c>
   1765c:	mov	r7, r9
   17660:	ldr	sl, [sp, #8]
   17664:	ldr	r4, [sp, #12]
   17668:	b	176ec <putc_unlocked@plt+0x5534>
   1766c:	mov	r4, r5
   17670:	ldr	r6, [fp, #8]
   17674:	cmp	r6, #0
   17678:	str	r7, [sp, #16]
   1767c:	beq	176a4 <putc_unlocked@plt+0x54ec>
   17680:	bl	11e7c <__ctype_get_mb_cur_max@plt>
   17684:	cmp	r0, #2
   17688:	bcc	176a8 <putc_unlocked@plt+0x54f0>
   1768c:	mov	r0, r4
   17690:	mov	r1, r9
   17694:	mov	r2, #0
   17698:	bl	1e1c0 <putc_unlocked@plt+0xc008>
   1769c:	mov	r7, r0
   176a0:	b	17718 <putc_unlocked@plt+0x5560>
   176a4:	b	17718 <putc_unlocked@plt+0x5560>
   176a8:	cmp	r9, #1
   176ac:	blt	17714 <putc_unlocked@plt+0x555c>
   176b0:	add	r5, r4, r9
   176b4:	bl	11f84 <__ctype_b_loc@plt>
   176b8:	mov	r6, r4
   176bc:	ldr	r4, [r0]
   176c0:	mov	r7, #0
   176c4:	mov	r8, r6
   176c8:	ldrb	r0, [r6], #1
   176cc:	bl	165c4 <putc_unlocked@plt+0x440c>
   176d0:	add	r0, r4, r0, lsl #1
   176d4:	ldrh	r0, [r0]
   176d8:	ubfx	r0, r0, #14, #1
   176dc:	add	r7, r7, r0
   176e0:	cmp	r6, r5
   176e4:	bcc	176c8 <putc_unlocked@plt+0x5510>
   176e8:	mov	r4, r8
   176ec:	ldr	r6, [fp, #8]
   176f0:	b	17718 <putc_unlocked@plt+0x5560>
   176f4:	mov	r7, #0
   176f8:	mov	r8, r4
   176fc:	sub	r9, r8, r4
   17700:	ldr	sl, [sp, #8]
   17704:	b	17718 <putc_unlocked@plt+0x5560>
   17708:	mov	r7, r9
   1770c:	ldr	sl, [sp, #8]
   17710:	b	17718 <putc_unlocked@plt+0x5560>
   17714:	mov	r7, #0
   17718:	ldr	r0, [fp, #12]
   1771c:	movw	r1, #38369	; 0x95e1
   17720:	movt	r1, #3
   17724:	ldrb	r2, [r1]
   17728:	mov	r1, #0
   1772c:	cmp	r2, #0
   17730:	beq	1774c <putc_unlocked@plt+0x5594>
   17734:	movw	r2, #41465	; 0xa1f9
   17738:	movt	r2, #3
   1773c:	ldrb	r2, [r2]
   17740:	cmp	r2, #1
   17744:	ldreq	r1, [sp, #16]
   17748:	eoreq	r1, r1, #1
   1774c:	strb	r1, [r0]
   17750:	cmp	r6, #0
   17754:	strne	r7, [r6]
   17758:	str	r4, [sl]
   1775c:	mov	r0, r9
   17760:	sub	sp, fp, #28
   17764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17768:	cmp	r0, #0
   1776c:	bxeq	lr
   17770:	push	{r4, r5, fp, lr}
   17774:	add	fp, sp, #8
   17778:	mov	r4, r0
   1777c:	mov	r0, #4
   17780:	bl	142a4 <putc_unlocked@plt+0x20ec>
   17784:	cmp	r0, #0
   17788:	blne	15934 <putc_unlocked@plt+0x377c>
   1778c:	movw	r5, #37344	; 0x91e0
   17790:	movt	r5, #3
   17794:	mov	r0, r5
   17798:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   1779c:	mov	r0, r4
   177a0:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   177a4:	add	r0, r5, #8
   177a8:	pop	{r4, r5, fp, lr}
   177ac:	b	15fe0 <putc_unlocked@plt+0x3e28>
   177b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177b4:	add	fp, sp, #28
   177b8:	sub	sp, sp, #4
   177bc:	mov	r4, r1
   177c0:	mov	r7, r0
   177c4:	bl	11fc0 <strlen@plt>
   177c8:	add	r1, r0, #1
   177cc:	mov	r0, #3
   177d0:	bl	22e60 <_obstack_memory_used@@Base+0x2a98>
   177d4:	mov	r9, r0
   177d8:	ldrb	r0, [r7]
   177dc:	cmp	r0, #0
   177e0:	mov	r6, r9
   177e4:	beq	1785c <putc_unlocked@plt+0x56a4>
   177e8:	add	r7, r7, #1
   177ec:	mov	sl, #47	; 0x2f
   177f0:	movw	r5, #37920	; 0x9420
   177f4:	movt	r5, #3
   177f8:	movw	r8, #27262	; 0x6a7e
   177fc:	movt	r8, #2
   17800:	mov	r6, r9
   17804:	uxtb	r1, r0
   17808:	cmp	r1, #47	; 0x2f
   1780c:	bne	17820 <putc_unlocked@plt+0x5668>
   17810:	cmp	r4, #0
   17814:	beq	17820 <putc_unlocked@plt+0x5668>
   17818:	strb	sl, [r6], #1
   1781c:	b	17850 <putc_unlocked@plt+0x5698>
   17820:	ldrb	r2, [r5, r1]
   17824:	cmp	r2, #0
   17828:	beq	17834 <putc_unlocked@plt+0x567c>
   1782c:	strb	r0, [r6], #1
   17830:	b	17850 <putc_unlocked@plt+0x5698>
   17834:	str	r1, [sp]
   17838:	mov	r0, r6
   1783c:	mov	r1, #1
   17840:	mvn	r2, #0
   17844:	mov	r3, r8
   17848:	bl	11ff0 <__sprintf_chk@plt>
   1784c:	add	r6, r6, r0
   17850:	ldrb	r0, [r7], #1
   17854:	cmp	r0, #0
   17858:	bne	17804 <putc_unlocked@plt+0x564c>
   1785c:	mov	r0, #0
   17860:	strb	r0, [r6]
   17864:	mov	r0, r9
   17868:	sub	sp, fp, #28
   1786c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17870:	push	{r4, sl, fp, lr}
   17874:	add	fp, sp, #8
   17878:	mov	r4, r0
   1787c:	movw	r0, #37792	; 0x93a0
   17880:	movt	r0, #3
   17884:	ldrb	r0, [r0]
   17888:	cmp	r0, #0
   1788c:	popeq	{r4, sl, fp, pc}
   17890:	ldr	r0, [r4, #12]
   17894:	ldr	r1, [r4, #16]
   17898:	sub	r0, r1, r0
   1789c:	cmp	r0, #7
   178a0:	bhi	178b0 <putc_unlocked@plt+0x56f8>
   178a4:	mov	r0, r4
   178a8:	mov	r1, #8
   178ac:	bl	201bc <_obstack_newchunk@@Base>
   178b0:	movw	r0, #38176	; 0x9520
   178b4:	movt	r0, #3
   178b8:	ldrd	r0, [r0]
   178bc:	ldr	r2, [r4, #12]
   178c0:	str	r1, [r2, #4]
   178c4:	str	r0, [r2]
   178c8:	ldr	r0, [r4, #12]
   178cc:	add	r0, r0, #8
   178d0:	str	r0, [r4, #12]
   178d4:	pop	{r4, sl, fp, pc}
   178d8:	push	{r4, r5, r6, sl, fp, lr}
   178dc:	add	fp, sp, #16
   178e0:	mov	r4, #0
   178e4:	cmp	r0, #0
   178e8:	beq	17918 <putc_unlocked@plt+0x5760>
   178ec:	mov	r5, r1
   178f0:	mov	r6, r0
   178f4:	ldr	r0, [r6]
   178f8:	mov	r1, r5
   178fc:	mov	r2, #4
   17900:	bl	11ee8 <fnmatch@plt>
   17904:	cmp	r0, #0
   17908:	beq	17920 <putc_unlocked@plt+0x5768>
   1790c:	ldr	r6, [r6, #4]
   17910:	cmp	r6, #0
   17914:	bne	178f4 <putc_unlocked@plt+0x573c>
   17918:	mov	r0, r4
   1791c:	pop	{r4, r5, r6, sl, fp, pc}
   17920:	mov	r4, #1
   17924:	mov	r0, r4
   17928:	pop	{r4, r5, r6, sl, fp, pc}
   1792c:	push	{r4, sl, fp, lr}
   17930:	add	fp, sp, #8
   17934:	mov	r4, r0
   17938:	ldr	r0, [r0]
   1793c:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   17940:	ldr	r0, [r4, #4]
   17944:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   17948:	ldr	r0, [r4, #8]
   1794c:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   17950:	ldr	r0, [r4, #128]	; 0x80
   17954:	movw	r1, #37553	; 0x92b1
   17958:	movt	r1, #3
   1795c:	cmp	r0, r1
   17960:	popeq	{r4, sl, fp, pc}
   17964:	pop	{r4, sl, fp, lr}
   17968:	b	12104 <freecon@plt>
   1796c:	push	{r4, r5, fp, lr}
   17970:	add	fp, sp, #8
   17974:	sub	sp, sp, #8
   17978:	mov	r4, r0
   1797c:	movw	r0, #37916	; 0x941c
   17980:	movt	r0, #3
   17984:	ldr	r0, [r0]
   17988:	str	r0, [sp]
   1798c:	add	r0, sp, #6
   17990:	mov	r1, #2
   17994:	mov	r2, r4
   17998:	mvn	r3, #0
   1799c:	bl	20604 <_obstack_memory_used@@Base+0x23c>
   179a0:	mov	r5, r0
   179a4:	ldrb	r1, [r4]
   179a8:	mov	r0, #1
   179ac:	ldrb	r2, [sp, #6]
   179b0:	cmp	r1, r2
   179b4:	bne	179c8 <putc_unlocked@plt+0x5810>
   179b8:	mov	r0, r4
   179bc:	bl	11fc0 <strlen@plt>
   179c0:	subs	r0, r0, r5
   179c4:	movwne	r0, #1
   179c8:	sub	sp, fp, #8
   179cc:	pop	{r4, r5, fp, pc}
   179d0:	ldrb	ip, [r1]
   179d4:	cmp	ip, #46	; 0x2e
   179d8:	bne	179ec <putc_unlocked@plt+0x5834>
   179dc:	ldrb	r3, [r1, #1]
   179e0:	cmp	r3, #0
   179e4:	beq	17a20 <putc_unlocked@plt+0x5868>
   179e8:	ldrb	ip, [r1]
   179ec:	cmp	ip, #0
   179f0:	beq	17a20 <putc_unlocked@plt+0x5868>
   179f4:	mov	r3, r1
   179f8:	strb	ip, [r0], #1
   179fc:	ldrb	ip, [r3, #1]!
   17a00:	cmp	ip, #0
   17a04:	bne	179f8 <putc_unlocked@plt+0x5840>
   17a08:	cmp	r3, r1
   17a0c:	bls	17a20 <putc_unlocked@plt+0x5868>
   17a10:	ldrb	r1, [r3, #-1]
   17a14:	cmp	r1, #47	; 0x2f
   17a18:	movne	r1, #47	; 0x2f
   17a1c:	strbne	r1, [r0], #1
   17a20:	ldrb	r1, [r2]
   17a24:	cmp	r1, #0
   17a28:	beq	17a40 <putc_unlocked@plt+0x5888>
   17a2c:	add	r2, r2, #1
   17a30:	strb	r1, [r0], #1
   17a34:	ldrb	r1, [r2], #1
   17a38:	cmp	r1, #0
   17a3c:	bne	17a30 <putc_unlocked@plt+0x5878>
   17a40:	mov	r1, #0
   17a44:	strb	r1, [r0]
   17a48:	bx	lr
   17a4c:	push	{r4, r5, fp, lr}
   17a50:	add	fp, sp, #8
   17a54:	sub	sp, sp, #8
   17a58:	mov	r4, r1
   17a5c:	mov	r5, r0
   17a60:	bl	17e08 <putc_unlocked@plt+0x5c50>
   17a64:	str	r0, [sp]
   17a68:	mvn	r0, #99	; 0x63
   17a6c:	mov	r1, r5
   17a70:	mov	r2, r4
   17a74:	mov	r3, #0
   17a78:	bl	17098 <putc_unlocked@plt+0x4ee0>
   17a7c:	sub	sp, fp, #8
   17a80:	pop	{r4, r5, fp, pc}
   17a84:	push	{r4, r5, fp, lr}
   17a88:	add	fp, sp, #8
   17a8c:	sub	sp, sp, #8
   17a90:	mov	r4, r1
   17a94:	mov	r5, r0
   17a98:	bl	17e08 <putc_unlocked@plt+0x5c50>
   17a9c:	str	r0, [sp]
   17aa0:	mvn	r0, #99	; 0x63
   17aa4:	mov	r1, r5
   17aa8:	mov	r2, r4
   17aac:	mov	r3, #256	; 0x100
   17ab0:	bl	17098 <putc_unlocked@plt+0x4ee0>
   17ab4:	sub	sp, fp, #8
   17ab8:	pop	{r4, r5, fp, pc}
   17abc:	push	{r4, r5, fp, lr}
   17ac0:	add	fp, sp, #8
   17ac4:	mov	r4, r1
   17ac8:	movw	r5, #41520	; 0xa230
   17acc:	movt	r5, #3
   17ad0:	ldrd	r2, [r5]
   17ad4:	ldr	r1, [r4, #16]!
   17ad8:	eor	r1, r1, r2
   17adc:	ldr	r2, [r4, #4]
   17ae0:	eor	r2, r2, r3
   17ae4:	orrs	r1, r1, r2
   17ae8:	bne	17b00 <putc_unlocked@plt+0x5948>
   17aec:	bl	11fe4 <__errno_location@plt>
   17af0:	mov	r1, #95	; 0x5f
   17af4:	str	r1, [r0]
   17af8:	mov	r0, #0
   17afc:	pop	{r4, r5, fp, pc}
   17b00:	bl	17f1c <putc_unlocked@plt+0x5d64>
   17b04:	mov	r1, r0
   17b08:	mov	r0, #1
   17b0c:	cmp	r1, #0
   17b10:	popne	{r4, r5, fp, pc}
   17b14:	bl	11fe4 <__errno_location@plt>
   17b18:	ldr	r0, [r0]
   17b1c:	bl	17f78 <putc_unlocked@plt+0x5dc0>
   17b20:	mov	r1, r0
   17b24:	mov	r0, #0
   17b28:	cmp	r1, #0
   17b2c:	ldrdne	r2, [r4]
   17b30:	strdne	r2, [r5]
   17b34:	pop	{r4, r5, fp, pc}
   17b38:	push	{r4, r5, r6, r7, fp, lr}
   17b3c:	add	fp, sp, #16
   17b40:	movw	r7, #41528	; 0xa238
   17b44:	movt	r7, #3
   17b48:	ldr	r4, [r7]
   17b4c:	ldr	r3, [r7, #4]
   17b50:	mov	r6, r1
   17b54:	ldr	r5, [r6, #16]!
   17b58:	eor	r5, r5, r4
   17b5c:	ldr	r4, [r6, #4]
   17b60:	eor	r3, r4, r3
   17b64:	orrs	r3, r5, r3
   17b68:	bne	17b84 <putc_unlocked@plt+0x59cc>
   17b6c:	bl	11fe4 <__errno_location@plt>
   17b70:	mov	r1, #95	; 0x5f
   17b74:	str	r1, [r0]
   17b78:	mvn	r4, #0
   17b7c:	mov	r0, r4
   17b80:	pop	{r4, r5, r6, r7, fp, pc}
   17b84:	add	r1, r1, #128	; 0x80
   17b88:	cmp	r2, #0
   17b8c:	beq	17b98 <putc_unlocked@plt+0x59e0>
   17b90:	bl	22220 <_obstack_memory_used@@Base+0x1e58>
   17b94:	b	17b9c <putc_unlocked@plt+0x59e4>
   17b98:	bl	222ac <_obstack_memory_used@@Base+0x1ee4>
   17b9c:	mov	r4, r0
   17ba0:	cmn	r0, #1
   17ba4:	ble	17bb0 <putc_unlocked@plt+0x59f8>
   17ba8:	mov	r0, r4
   17bac:	pop	{r4, r5, r6, r7, fp, pc}
   17bb0:	bl	11fe4 <__errno_location@plt>
   17bb4:	ldr	r0, [r0]
   17bb8:	bl	17f78 <putc_unlocked@plt+0x5dc0>
   17bbc:	cmp	r0, #0
   17bc0:	ldrdne	r0, [r6]
   17bc4:	strdne	r0, [r7]
   17bc8:	mov	r0, r4
   17bcc:	pop	{r4, r5, r6, r7, fp, pc}
   17bd0:	sub	r0, r0, #95	; 0x5f
   17bd4:	clz	r0, r0
   17bd8:	lsr	r0, r0, #5
   17bdc:	bx	lr
   17be0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17be4:	add	fp, sp, #24
   17be8:	mov	r4, r1
   17bec:	mov	r5, r0
   17bf0:	movw	r8, #41536	; 0xa240
   17bf4:	movt	r8, #3
   17bf8:	ldrd	r0, [r8]
   17bfc:	ldr	r2, [r4, #16]!
   17c00:	eor	r0, r2, r0
   17c04:	ldr	r2, [r4, #4]
   17c08:	eor	r1, r2, r1
   17c0c:	orr	r7, r0, r1
   17c10:	bl	11fe4 <__errno_location@plt>
   17c14:	mov	r6, r0
   17c18:	cmp	r7, #0
   17c1c:	bne	17c34 <putc_unlocked@plt+0x5a7c>
   17c20:	mov	r0, #95	; 0x5f
   17c24:	str	r0, [r6]
   17c28:	mov	r5, #0
   17c2c:	mov	r0, r5
   17c30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c34:	mov	r0, #0
   17c38:	str	r0, [r6]
   17c3c:	mov	r0, r5
   17c40:	mov	r1, r4
   17c44:	bl	1b580 <putc_unlocked@plt+0x93c8>
   17c48:	mov	r5, r0
   17c4c:	cmp	r0, #0
   17c50:	ble	17c5c <putc_unlocked@plt+0x5aa4>
   17c54:	mov	r0, r5
   17c58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c5c:	ldr	r0, [r6]
   17c60:	bl	17f78 <putc_unlocked@plt+0x5dc0>
   17c64:	cmp	r0, #0
   17c68:	ldrdne	r0, [r4]
   17c6c:	strdne	r0, [r8]
   17c70:	mov	r0, r5
   17c74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c78:	push	{r4, r5, r6, sl, fp, lr}
   17c7c:	add	fp, sp, #16
   17c80:	mov	r5, r2
   17c84:	mov	r6, r1
   17c88:	mov	r4, r0
   17c8c:	ldr	r1, [r1, #64]	; 0x40
   17c90:	bl	1a2ec <putc_unlocked@plt+0x8134>
   17c94:	str	r0, [r6, #4]
   17c98:	cmp	r0, #0
   17c9c:	popne	{r4, r5, r6, sl, fp, pc}
   17ca0:	movw	r1, #27296	; 0x6aa0
   17ca4:	movt	r1, #2
   17ca8:	mov	r0, #0
   17cac:	mov	r2, #5
   17cb0:	bl	11dbc <dcgettext@plt>
   17cb4:	mov	r1, r0
   17cb8:	mov	r0, r5
   17cbc:	mov	r2, r4
   17cc0:	pop	{r4, r5, r6, sl, fp, lr}
   17cc4:	b	16b38 <putc_unlocked@plt+0x4980>
   17cc8:	push	{r4, r5, r6, r7, fp, lr}
   17ccc:	add	fp, sp, #16
   17cd0:	cmp	r1, #0
   17cd4:	moveq	r6, #0
   17cd8:	moveq	r0, r6
   17cdc:	popeq	{r4, r5, r6, r7, fp, pc}
   17ce0:	mov	r4, r1
   17ce4:	mov	r5, r0
   17ce8:	ldrb	r0, [r1]
   17cec:	cmp	r0, #47	; 0x2f
   17cf0:	beq	17d50 <putc_unlocked@plt+0x5b98>
   17cf4:	mov	r0, r5
   17cf8:	bl	1b4d8 <putc_unlocked@plt+0x9320>
   17cfc:	cmp	r0, #0
   17d00:	beq	17d50 <putc_unlocked@plt+0x5b98>
   17d04:	mov	r7, r0
   17d08:	mov	r0, r4
   17d0c:	bl	11fc0 <strlen@plt>
   17d10:	add	r0, r7, r0
   17d14:	add	r0, r0, #2
   17d18:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   17d1c:	mov	r6, r0
   17d20:	add	r0, r5, r7
   17d24:	ldrb	r0, [r0, #-1]
   17d28:	cmp	r0, #47	; 0x2f
   17d2c:	addne	r7, r7, #1
   17d30:	mov	r0, r6
   17d34:	mov	r1, r5
   17d38:	mov	r2, r7
   17d3c:	bl	12020 <stpncpy@plt>
   17d40:	mov	r1, r4
   17d44:	bl	11db0 <stpcpy@plt>
   17d48:	mov	r0, r6
   17d4c:	pop	{r4, r5, r6, r7, fp, pc}
   17d50:	mov	r0, r4
   17d54:	bl	23154 <_obstack_memory_used@@Base+0x2d8c>
   17d58:	pop	{r4, r5, r6, r7, fp, pc}
   17d5c:	push	{fp, lr}
   17d60:	mov	fp, sp
   17d64:	sub	sp, sp, #8
   17d68:	mov	r2, r1
   17d6c:	mov	r1, r0
   17d70:	mov	r0, #2
   17d74:	str	r0, [sp]
   17d78:	mvn	r0, #99	; 0x63
   17d7c:	mov	r3, #0
   17d80:	bl	17098 <putc_unlocked@plt+0x4ee0>
   17d84:	mov	sp, fp
   17d88:	pop	{fp, pc}
   17d8c:	push	{r4, sl, fp, lr}
   17d90:	add	fp, sp, #8
   17d94:	mov	r4, r0
   17d98:	movw	r0, #38345	; 0x95c9
   17d9c:	movt	r0, #3
   17da0:	ldrb	r1, [r0]
   17da4:	mov	r0, #0
   17da8:	cmp	r1, #0
   17dac:	bne	17db8 <putc_unlocked@plt+0x5c00>
   17db0:	mov	r0, r4
   17db4:	bl	1d864 <putc_unlocked@plt+0xb6ac>
   17db8:	mov	r2, r4
   17dbc:	mov	r3, #0
   17dc0:	pop	{r4, sl, fp, lr}
   17dc4:	b	17f90 <putc_unlocked@plt+0x5dd8>
   17dc8:	push	{r4, sl, fp, lr}
   17dcc:	add	fp, sp, #8
   17dd0:	mov	r4, r0
   17dd4:	movw	r0, #38345	; 0x95c9
   17dd8:	movt	r0, #3
   17ddc:	ldrb	r1, [r0]
   17de0:	mov	r0, #0
   17de4:	cmp	r1, #0
   17de8:	bne	17df4 <putc_unlocked@plt+0x5c3c>
   17dec:	mov	r0, r4
   17df0:	bl	1da08 <putc_unlocked@plt+0xb850>
   17df4:	mov	r2, r4
   17df8:	mov	r3, #0
   17dfc:	pop	{r4, sl, fp, lr}
   17e00:	b	17f90 <putc_unlocked@plt+0x5dd8>
   17e04:	bx	lr
   17e08:	push	{r4, sl, fp, lr}
   17e0c:	add	fp, sp, #8
   17e10:	movw	r0, #38344	; 0x95c8
   17e14:	movt	r0, #3
   17e18:	ldrb	r0, [r0]
   17e1c:	mov	r4, #2
   17e20:	cmp	r0, #0
   17e24:	movwne	r4, #258	; 0x102
   17e28:	movw	r0, #37789	; 0x939d
   17e2c:	movt	r0, #3
   17e30:	ldrb	r0, [r0]
   17e34:	bfi	r4, r0, #10, #1
   17e38:	movw	r0, #37712	; 0x9350
   17e3c:	movt	r0, #3
   17e40:	ldr	r0, [r0]
   17e44:	cmp	r0, #0
   17e48:	bne	17e9c <putc_unlocked@plt+0x5ce4>
   17e4c:	bl	17ef0 <putc_unlocked@plt+0x5d38>
   17e50:	orr	r0, r4, r0
   17e54:	movw	r1, #38320	; 0x95b0
   17e58:	movt	r1, #3
   17e5c:	ldrb	r1, [r1]
   17e60:	cmp	r1, #1
   17e64:	bne	17e7c <putc_unlocked@plt+0x5cc4>
   17e68:	movw	r1, #38348	; 0x95cc
   17e6c:	movt	r1, #3
   17e70:	ldrb	r1, [r1]
   17e74:	cmp	r1, #1
   17e78:	bne	17e84 <putc_unlocked@plt+0x5ccc>
   17e7c:	orr	r4, r0, #524	; 0x20c
   17e80:	b	17e88 <putc_unlocked@plt+0x5cd0>
   17e84:	orr	r4, r0, #516	; 0x204
   17e88:	movw	r0, #38346	; 0x95ca
   17e8c:	movt	r0, #3
   17e90:	ldrb	r0, [r0]
   17e94:	cmp	r0, #0
   17e98:	orreq	r4, r4, #16
   17e9c:	movw	r0, #37784	; 0x9398
   17ea0:	movt	r0, #3
   17ea4:	ldr	r0, [r0]
   17ea8:	cmp	r0, #6
   17eac:	bhi	17eec <putc_unlocked@plt+0x5d34>
   17eb0:	mov	r1, #1
   17eb4:	mov	r2, #87	; 0x57
   17eb8:	tst	r2, r1, lsl r0
   17ebc:	beq	17ec8 <putc_unlocked@plt+0x5d10>
   17ec0:	mov	r0, r4
   17ec4:	pop	{r4, sl, fp, pc}
   17ec8:	cmp	r0, #3
   17ecc:	bne	17edc <putc_unlocked@plt+0x5d24>
   17ed0:	orr	r4, r4, #512	; 0x200
   17ed4:	mov	r0, r4
   17ed8:	pop	{r4, sl, fp, pc}
   17edc:	bl	17ef0 <putc_unlocked@plt+0x5d38>
   17ee0:	orr	r4, r0, r4
   17ee4:	mov	r0, r4
   17ee8:	pop	{r4, sl, fp, pc}
   17eec:	bl	1214c <abort@plt>
   17ef0:	movw	r0, #38316	; 0x95ac
   17ef4:	movt	r0, #3
   17ef8:	ldr	r0, [r0]
   17efc:	cmp	r0, #4
   17f00:	movwcc	r1, #33976	; 0x84b8
   17f04:	movtcc	r1, #2
   17f08:	ldrcc	r0, [r1, r0, lsl #2]
   17f0c:	bxcc	lr
   17f10:	push	{fp, lr}
   17f14:	mov	fp, sp
   17f18:	bl	1214c <abort@plt>
   17f1c:	push	{r4, r5, r6, sl, fp, lr}
   17f20:	add	fp, sp, #16
   17f24:	bl	120a4 <cap_get_file@plt>
   17f28:	cmp	r0, #0
   17f2c:	moveq	r4, #0
   17f30:	moveq	r0, r4
   17f34:	popeq	{r4, r5, r6, sl, fp, pc}
   17f38:	mov	r6, r0
   17f3c:	mov	r4, #0
   17f40:	mov	r1, #0
   17f44:	bl	11c90 <cap_to_text@plt>
   17f48:	mov	r5, r0
   17f4c:	mov	r0, r6
   17f50:	bl	120ec <cap_free@plt>
   17f54:	cmp	r5, #0
   17f58:	beq	17f70 <putc_unlocked@plt+0x5db8>
   17f5c:	ldrb	r4, [r5]
   17f60:	mov	r0, r5
   17f64:	bl	120ec <cap_free@plt>
   17f68:	cmp	r4, #0
   17f6c:	movwne	r4, #1
   17f70:	mov	r0, r4
   17f74:	pop	{r4, r5, r6, sl, fp, pc}
   17f78:	cmp	r0, #22
   17f7c:	cmpne	r0, #38	; 0x26
   17f80:	bne	17f8c <putc_unlocked@plt+0x5dd4>
   17f84:	mov	r0, #1
   17f88:	bx	lr
   17f8c:	b	17bd0 <putc_unlocked@plt+0x5a18>
   17f90:	push	{fp, lr}
   17f94:	mov	fp, sp
   17f98:	sub	sp, sp, #16
   17f9c:	cmp	r0, #0
   17fa0:	beq	17fb8 <putc_unlocked@plt+0x5e00>
   17fa4:	mov	r1, #0
   17fa8:	bl	1e198 <putc_unlocked@plt+0xbfe0>
   17fac:	bic	r0, r0, r0, asr #31
   17fb0:	mov	sp, fp
   17fb4:	pop	{fp, pc}
   17fb8:	str	r2, [sp, #8]
   17fbc:	str	r3, [sp, #12]
   17fc0:	movw	r0, #27325	; 0x6abd
   17fc4:	movt	r0, #2
   17fc8:	str	r0, [sp]
   17fcc:	mov	r0, #0
   17fd0:	mov	r1, #0
   17fd4:	mov	r2, #1
   17fd8:	mvn	r3, #0
   17fdc:	bl	1217c <__snprintf_chk@plt>
   17fe0:	mov	sp, fp
   17fe4:	pop	{fp, pc}
   17fe8:	ldr	r0, [r0, #120]	; 0x78
   17fec:	sub	r1, r0, #9
   17ff0:	clz	r1, r1
   17ff4:	lsr	r1, r1, #5
   17ff8:	sub	r0, r0, #3
   17ffc:	clz	r0, r0
   18000:	lsr	r0, r0, #5
   18004:	orr	r0, r0, r1
   18008:	bx	lr
   1800c:	push	{fp, lr}
   18010:	mov	fp, sp
   18014:	bl	1a804 <putc_unlocked@plt+0x864c>
   18018:	pop	{fp, lr}
   1801c:	b	18020 <putc_unlocked@plt+0x5e68>
   18020:	ldrb	r2, [r0]
   18024:	mov	r1, #0
   18028:	cmp	r2, #46	; 0x2e
   1802c:	bne	1805c <putc_unlocked@plt+0x5ea4>
   18030:	ldrb	r1, [r0, #1]
   18034:	mov	r2, #1
   18038:	cmp	r1, #46	; 0x2e
   1803c:	movweq	r2, #2
   18040:	ldrb	r0, [r0, r2]
   18044:	clz	r1, r0
   18048:	lsr	r1, r1, #5
   1804c:	sub	r0, r0, #47	; 0x2f
   18050:	clz	r0, r0
   18054:	lsr	r0, r0, #5
   18058:	orr	r1, r1, r0
   1805c:	mov	r0, r1
   18060:	bx	lr
   18064:	movw	r0, #37900	; 0x940c
   18068:	movt	r0, #3
   1806c:	ldr	r1, [r0]
   18070:	cmp	r1, #0
   18074:	bxeq	lr
   18078:	ldr	r0, [r0]
   1807c:	movw	r1, #41468	; 0xa1fc
   18080:	movt	r1, #3
   18084:	ldr	r1, [r1]
   18088:	movw	r2, #37896	; 0x9408
   1808c:	movt	r2, #3
   18090:	ldr	r2, [r2]
   18094:	mov	r3, #0
   18098:	str	r2, [r1, r3, lsl #2]
   1809c:	add	r2, r2, #152	; 0x98
   180a0:	add	r3, r3, #1
   180a4:	cmp	r3, r0
   180a8:	bcc	18098 <putc_unlocked@plt+0x5ee0>
   180ac:	bx	lr
   180b0:	push	{r4, r5, r6, r7, fp, lr}
   180b4:	add	fp, sp, #16
   180b8:	movw	r0, #37784	; 0x9398
   180bc:	movt	r0, #3
   180c0:	ldr	r0, [r0]
   180c4:	cmp	r0, #2
   180c8:	beq	180f8 <putc_unlocked@plt+0x5f40>
   180cc:	movw	r0, #38360	; 0x95d8
   180d0:	movt	r0, #3
   180d4:	ldr	r0, [r0]
   180d8:	cmp	r0, #0
   180dc:	beq	18144 <putc_unlocked@plt+0x5f8c>
   180e0:	movw	r0, #37712	; 0x9350
   180e4:	movt	r0, #3
   180e8:	ldr	r0, [r0]
   180ec:	orr	r0, r0, #1
   180f0:	cmp	r0, #3
   180f4:	bne	18144 <putc_unlocked@plt+0x5f8c>
   180f8:	movw	r0, #37900	; 0x940c
   180fc:	movt	r0, #3
   18100:	ldr	r0, [r0]
   18104:	cmp	r0, #0
   18108:	popeq	{r4, r5, r6, r7, fp, pc}
   1810c:	mov	r5, #0
   18110:	movw	r6, #41468	; 0xa1fc
   18114:	movt	r6, #3
   18118:	movw	r7, #37900	; 0x940c
   1811c:	movt	r7, #3
   18120:	ldr	r0, [r6]
   18124:	ldr	r4, [r0, r5, lsl #2]
   18128:	mov	r0, r4
   1812c:	bl	18148 <putc_unlocked@plt+0x5f90>
   18130:	str	r0, [r4, #148]	; 0x94
   18134:	add	r5, r5, #1
   18138:	ldr	r0, [r7]
   1813c:	cmp	r5, r0
   18140:	bcc	18120 <putc_unlocked@plt+0x5f68>
   18144:	pop	{r4, r5, r6, r7, fp, pc}
   18148:	ldr	r1, [r0, #148]	; 0x94
   1814c:	cmp	r1, #0
   18150:	movne	r0, r1
   18154:	bxne	lr
   18158:	movw	r1, #37916	; 0x941c
   1815c:	movt	r1, #3
   18160:	ldr	r1, [r1]
   18164:	ldr	r3, [r0]
   18168:	ldr	r2, [r0, #144]	; 0x90
   1816c:	mov	r0, r3
   18170:	b	18174 <putc_unlocked@plt+0x5fbc>
   18174:	push	{r4, r5, r6, r7, fp, lr}
   18178:	add	fp, sp, #16
   1817c:	sub	sp, sp, #24
   18180:	sub	sp, sp, #8192	; 0x2000
   18184:	mov	r3, r2
   18188:	mov	r2, r1
   1818c:	mov	r4, r0
   18190:	add	r5, sp, #24
   18194:	str	r5, [sp, #20]
   18198:	add	r0, sp, #15
   1819c:	add	r1, sp, #16
   181a0:	str	r1, [sp]
   181a4:	str	r0, [sp, #4]
   181a8:	add	r0, sp, #20
   181ac:	mov	r1, r4
   181b0:	bl	1723c <putc_unlocked@plt+0x5084>
   181b4:	ldr	r0, [sp, #20]
   181b8:	cmp	r0, r5
   181bc:	cmpne	r0, r4
   181c0:	beq	181c8 <putc_unlocked@plt+0x6010>
   181c4:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   181c8:	ldrb	r0, [sp, #15]
   181cc:	ldr	r1, [sp, #16]
   181d0:	add	r0, r1, r0
   181d4:	sub	sp, fp, #16
   181d8:	pop	{r4, r5, r6, r7, fp, pc}
   181dc:	movw	r2, #34260	; 0x85d4
   181e0:	movt	r2, #1
   181e4:	b	185c8 <putc_unlocked@plt+0x6410>
   181e8:	movw	r2, #33244	; 0x81dc
   181ec:	movt	r2, #1
   181f0:	b	18600 <putc_unlocked@plt+0x6448>
   181f4:	mov	r3, r0
   181f8:	movw	r2, #34260	; 0x85d4
   181fc:	movt	r2, #1
   18200:	mov	r0, r1
   18204:	mov	r1, r3
   18208:	b	185c8 <putc_unlocked@plt+0x6410>
   1820c:	movw	r2, #33268	; 0x81f4
   18210:	movt	r2, #1
   18214:	b	18600 <putc_unlocked@plt+0x6448>
   18218:	movw	r2, #7372	; 0x1ccc
   1821c:	movt	r2, #1
   18220:	b	185c8 <putc_unlocked@plt+0x6410>
   18224:	movw	r2, #33304	; 0x8218
   18228:	movt	r2, #1
   1822c:	b	18600 <putc_unlocked@plt+0x6448>
   18230:	mov	r3, r0
   18234:	movw	r2, #7372	; 0x1ccc
   18238:	movt	r2, #1
   1823c:	mov	r0, r1
   18240:	mov	r1, r3
   18244:	b	185c8 <putc_unlocked@plt+0x6410>
   18248:	movw	r2, #33328	; 0x8230
   1824c:	movt	r2, #1
   18250:	b	18600 <putc_unlocked@plt+0x6448>
   18254:	movw	r2, #34260	; 0x85d4
   18258:	movt	r2, #1
   1825c:	b	18678 <putc_unlocked@plt+0x64c0>
   18260:	movw	r2, #33364	; 0x8254
   18264:	movt	r2, #1
   18268:	b	18600 <putc_unlocked@plt+0x6448>
   1826c:	mov	r3, r0
   18270:	movw	r2, #34260	; 0x85d4
   18274:	movt	r2, #1
   18278:	mov	r0, r1
   1827c:	mov	r1, r3
   18280:	b	18678 <putc_unlocked@plt+0x64c0>
   18284:	movw	r2, #33388	; 0x826c
   18288:	movt	r2, #1
   1828c:	b	18600 <putc_unlocked@plt+0x6448>
   18290:	movw	r2, #7372	; 0x1ccc
   18294:	movt	r2, #1
   18298:	b	18678 <putc_unlocked@plt+0x64c0>
   1829c:	movw	r2, #33424	; 0x8290
   182a0:	movt	r2, #1
   182a4:	b	18600 <putc_unlocked@plt+0x6448>
   182a8:	mov	r3, r0
   182ac:	movw	r2, #7372	; 0x1ccc
   182b0:	movt	r2, #1
   182b4:	mov	r0, r1
   182b8:	mov	r1, r3
   182bc:	b	18678 <putc_unlocked@plt+0x64c0>
   182c0:	movw	r2, #33448	; 0x82a8
   182c4:	movt	r2, #1
   182c8:	b	18600 <putc_unlocked@plt+0x6448>
   182cc:	movw	r2, #34260	; 0x85d4
   182d0:	movt	r2, #1
   182d4:	b	186e8 <putc_unlocked@plt+0x6530>
   182d8:	movw	r2, #33484	; 0x82cc
   182dc:	movt	r2, #1
   182e0:	b	18600 <putc_unlocked@plt+0x6448>
   182e4:	mov	r3, r0
   182e8:	movw	r2, #34260	; 0x85d4
   182ec:	movt	r2, #1
   182f0:	mov	r0, r1
   182f4:	mov	r1, r3
   182f8:	b	186e8 <putc_unlocked@plt+0x6530>
   182fc:	movw	r2, #33508	; 0x82e4
   18300:	movt	r2, #1
   18304:	b	18600 <putc_unlocked@plt+0x6448>
   18308:	movw	r2, #7372	; 0x1ccc
   1830c:	movt	r2, #1
   18310:	b	186e8 <putc_unlocked@plt+0x6530>
   18314:	movw	r2, #33544	; 0x8308
   18318:	movt	r2, #1
   1831c:	b	18600 <putc_unlocked@plt+0x6448>
   18320:	mov	r3, r0
   18324:	movw	r2, #7372	; 0x1ccc
   18328:	movt	r2, #1
   1832c:	mov	r0, r1
   18330:	mov	r1, r3
   18334:	b	186e8 <putc_unlocked@plt+0x6530>
   18338:	movw	r2, #33568	; 0x8320
   1833c:	movt	r2, #1
   18340:	b	18600 <putc_unlocked@plt+0x6448>
   18344:	movw	r2, #34260	; 0x85d4
   18348:	movt	r2, #1
   1834c:	b	18728 <putc_unlocked@plt+0x6570>
   18350:	movw	r2, #33604	; 0x8344
   18354:	movt	r2, #1
   18358:	b	18600 <putc_unlocked@plt+0x6448>
   1835c:	mov	r3, r0
   18360:	movw	r2, #34260	; 0x85d4
   18364:	movt	r2, #1
   18368:	mov	r0, r1
   1836c:	mov	r1, r3
   18370:	b	18728 <putc_unlocked@plt+0x6570>
   18374:	movw	r2, #33628	; 0x835c
   18378:	movt	r2, #1
   1837c:	b	18600 <putc_unlocked@plt+0x6448>
   18380:	movw	r2, #7372	; 0x1ccc
   18384:	movt	r2, #1
   18388:	b	18728 <putc_unlocked@plt+0x6570>
   1838c:	movw	r2, #33664	; 0x8380
   18390:	movt	r2, #1
   18394:	b	18600 <putc_unlocked@plt+0x6448>
   18398:	mov	r3, r0
   1839c:	movw	r2, #7372	; 0x1ccc
   183a0:	movt	r2, #1
   183a4:	mov	r0, r1
   183a8:	mov	r1, r3
   183ac:	b	18728 <putc_unlocked@plt+0x6570>
   183b0:	movw	r2, #33688	; 0x8398
   183b4:	movt	r2, #1
   183b8:	b	18600 <putc_unlocked@plt+0x6448>
   183bc:	b	18790 <putc_unlocked@plt+0x65d8>
   183c0:	movw	r2, #33724	; 0x83bc
   183c4:	movt	r2, #1
   183c8:	b	18600 <putc_unlocked@plt+0x6448>
   183cc:	mov	r2, r0
   183d0:	mov	r0, r1
   183d4:	mov	r1, r2
   183d8:	b	18790 <putc_unlocked@plt+0x65d8>
   183dc:	movw	r2, #33740	; 0x83cc
   183e0:	movt	r2, #1
   183e4:	b	18600 <putc_unlocked@plt+0x6448>
   183e8:	movw	r2, #34260	; 0x85d4
   183ec:	movt	r2, #1
   183f0:	b	1879c <putc_unlocked@plt+0x65e4>
   183f4:	movw	r2, #33768	; 0x83e8
   183f8:	movt	r2, #1
   183fc:	b	18600 <putc_unlocked@plt+0x6448>
   18400:	mov	r3, r0
   18404:	movw	r2, #34260	; 0x85d4
   18408:	movt	r2, #1
   1840c:	mov	r0, r1
   18410:	mov	r1, r3
   18414:	b	1879c <putc_unlocked@plt+0x65e4>
   18418:	movw	r2, #33792	; 0x8400
   1841c:	movt	r2, #1
   18420:	b	18600 <putc_unlocked@plt+0x6448>
   18424:	movw	r2, #7372	; 0x1ccc
   18428:	movt	r2, #1
   1842c:	b	1879c <putc_unlocked@plt+0x65e4>
   18430:	movw	r2, #33828	; 0x8424
   18434:	movt	r2, #1
   18438:	b	18600 <putc_unlocked@plt+0x6448>
   1843c:	mov	r3, r0
   18440:	movw	r2, #7372	; 0x1ccc
   18444:	movt	r2, #1
   18448:	mov	r0, r1
   1844c:	mov	r1, r3
   18450:	b	1879c <putc_unlocked@plt+0x65e4>
   18454:	movw	r2, #33852	; 0x843c
   18458:	movt	r2, #1
   1845c:	b	18600 <putc_unlocked@plt+0x6448>
   18460:	movw	r2, #34260	; 0x85d4
   18464:	movt	r2, #1
   18468:	b	18800 <putc_unlocked@plt+0x6648>
   1846c:	movw	r2, #33888	; 0x8460
   18470:	movt	r2, #1
   18474:	b	18600 <putc_unlocked@plt+0x6448>
   18478:	mov	r3, r0
   1847c:	movw	r2, #34260	; 0x85d4
   18480:	movt	r2, #1
   18484:	mov	r0, r1
   18488:	mov	r1, r3
   1848c:	b	18800 <putc_unlocked@plt+0x6648>
   18490:	movw	r2, #33912	; 0x8478
   18494:	movt	r2, #1
   18498:	b	18600 <putc_unlocked@plt+0x6448>
   1849c:	movw	r2, #7372	; 0x1ccc
   184a0:	movt	r2, #1
   184a4:	b	18800 <putc_unlocked@plt+0x6648>
   184a8:	movw	r2, #33948	; 0x849c
   184ac:	movt	r2, #1
   184b0:	b	18600 <putc_unlocked@plt+0x6448>
   184b4:	mov	r3, r0
   184b8:	movw	r2, #7372	; 0x1ccc
   184bc:	movt	r2, #1
   184c0:	mov	r0, r1
   184c4:	mov	r1, r3
   184c8:	b	18800 <putc_unlocked@plt+0x6648>
   184cc:	movw	r2, #33972	; 0x84b4
   184d0:	movt	r2, #1
   184d4:	b	18600 <putc_unlocked@plt+0x6448>
   184d8:	movw	r2, #34260	; 0x85d4
   184dc:	movt	r2, #1
   184e0:	b	18864 <putc_unlocked@plt+0x66ac>
   184e4:	movw	r2, #34008	; 0x84d8
   184e8:	movt	r2, #1
   184ec:	b	18600 <putc_unlocked@plt+0x6448>
   184f0:	mov	r3, r0
   184f4:	movw	r2, #34260	; 0x85d4
   184f8:	movt	r2, #1
   184fc:	mov	r0, r1
   18500:	mov	r1, r3
   18504:	b	18864 <putc_unlocked@plt+0x66ac>
   18508:	movw	r2, #34032	; 0x84f0
   1850c:	movt	r2, #1
   18510:	b	18600 <putc_unlocked@plt+0x6448>
   18514:	movw	r2, #7372	; 0x1ccc
   18518:	movt	r2, #1
   1851c:	b	18864 <putc_unlocked@plt+0x66ac>
   18520:	movw	r2, #34068	; 0x8514
   18524:	movt	r2, #1
   18528:	b	18600 <putc_unlocked@plt+0x6448>
   1852c:	mov	r3, r0
   18530:	movw	r2, #7372	; 0x1ccc
   18534:	movt	r2, #1
   18538:	mov	r0, r1
   1853c:	mov	r1, r3
   18540:	b	18864 <putc_unlocked@plt+0x66ac>
   18544:	movw	r2, #34092	; 0x852c
   18548:	movt	r2, #1
   1854c:	b	18600 <putc_unlocked@plt+0x6448>
   18550:	movw	r2, #34260	; 0x85d4
   18554:	movt	r2, #1
   18558:	b	188c8 <putc_unlocked@plt+0x6710>
   1855c:	movw	r2, #34128	; 0x8550
   18560:	movt	r2, #1
   18564:	b	18600 <putc_unlocked@plt+0x6448>
   18568:	mov	r3, r0
   1856c:	movw	r2, #34260	; 0x85d4
   18570:	movt	r2, #1
   18574:	mov	r0, r1
   18578:	mov	r1, r3
   1857c:	b	188c8 <putc_unlocked@plt+0x6710>
   18580:	movw	r2, #34152	; 0x8568
   18584:	movt	r2, #1
   18588:	b	18600 <putc_unlocked@plt+0x6448>
   1858c:	movw	r2, #7372	; 0x1ccc
   18590:	movt	r2, #1
   18594:	b	188c8 <putc_unlocked@plt+0x6710>
   18598:	movw	r2, #34188	; 0x858c
   1859c:	movt	r2, #1
   185a0:	b	18600 <putc_unlocked@plt+0x6448>
   185a4:	mov	r3, r0
   185a8:	movw	r2, #7372	; 0x1ccc
   185ac:	movt	r2, #1
   185b0:	mov	r0, r1
   185b4:	mov	r1, r3
   185b8:	b	188c8 <putc_unlocked@plt+0x6710>
   185bc:	movw	r2, #34212	; 0x85a4
   185c0:	movt	r2, #1
   185c4:	b	18600 <putc_unlocked@plt+0x6448>
   185c8:	ldr	r1, [r1]
   185cc:	ldr	r0, [r0]
   185d0:	bx	r2
   185d4:	push	{r4, r5, fp, lr}
   185d8:	add	fp, sp, #8
   185dc:	mov	r4, r1
   185e0:	mov	r5, r0
   185e4:	bl	11fe4 <__errno_location@plt>
   185e8:	mov	r1, #0
   185ec:	str	r1, [r0]
   185f0:	mov	r0, r5
   185f4:	mov	r1, r4
   185f8:	pop	{r4, r5, fp, lr}
   185fc:	b	11ef4 <strcoll@plt>
   18600:	push	{r4, r5, r6, r7, fp, lr}
   18604:	add	fp, sp, #16
   18608:	mov	r7, r2
   1860c:	mov	r4, r1
   18610:	mov	r5, r0
   18614:	mov	r0, r1
   18618:	bl	18644 <putc_unlocked@plt+0x648c>
   1861c:	mov	r6, r0
   18620:	mov	r0, r5
   18624:	bl	18644 <putc_unlocked@plt+0x648c>
   18628:	subs	r0, r6, r0
   1862c:	popne	{r4, r5, r6, r7, fp, pc}
   18630:	mov	r0, r5
   18634:	mov	r1, r4
   18638:	mov	r2, r7
   1863c:	pop	{r4, r5, r6, r7, fp, lr}
   18640:	bx	r2
   18644:	mov	r1, r0
   18648:	ldr	r2, [r0, #120]	; 0x78
   1864c:	mov	r0, #1
   18650:	cmp	r2, #3
   18654:	cmpne	r2, #9
   18658:	bne	18660 <putc_unlocked@plt+0x64a8>
   1865c:	bx	lr
   18660:	ldr	r0, [r1, #124]	; 0x7c
   18664:	and	r0, r0, #61440	; 0xf000
   18668:	sub	r0, r0, #16384	; 0x4000
   1866c:	clz	r0, r0
   18670:	lsr	r0, r0, #5
   18674:	bx	lr
   18678:	push	{r4, r5, r6, r7, fp, lr}
   1867c:	add	fp, sp, #16
   18680:	mov	r7, r2
   18684:	mov	r5, r1
   18688:	mov	r4, r0
   1868c:	ldr	r0, [r0]
   18690:	mov	r1, #46	; 0x2e
   18694:	bl	12098 <strrchr@plt>
   18698:	mov	r6, r0
   1869c:	ldr	r0, [r5]
   186a0:	mov	r1, #46	; 0x2e
   186a4:	bl	12098 <strrchr@plt>
   186a8:	movw	r1, #27261	; 0x6a7d
   186ac:	movt	r1, #2
   186b0:	cmp	r6, #0
   186b4:	moveq	r6, r1
   186b8:	cmp	r0, #0
   186bc:	movne	r1, r0
   186c0:	mov	r0, r6
   186c4:	mov	r6, r7
   186c8:	blx	r7
   186cc:	cmp	r0, #0
   186d0:	popne	{r4, r5, r6, r7, fp, pc}
   186d4:	ldr	r1, [r5]
   186d8:	ldr	r0, [r4]
   186dc:	mov	r2, r6
   186e0:	pop	{r4, r5, r6, r7, fp, lr}
   186e4:	bx	r2
   186e8:	push	{r4, r5, r6, r7, fp, lr}
   186ec:	add	fp, sp, #16
   186f0:	mov	r7, r2
   186f4:	mov	r5, r1
   186f8:	mov	r4, r0
   186fc:	bl	18148 <putc_unlocked@plt+0x5f90>
   18700:	mov	r6, r0
   18704:	mov	r0, r5
   18708:	bl	18148 <putc_unlocked@plt+0x5f90>
   1870c:	subs	r0, r6, r0
   18710:	popne	{r4, r5, r6, r7, fp, pc}
   18714:	ldr	r1, [r5]
   18718:	ldr	r0, [r4]
   1871c:	mov	r2, r7
   18720:	pop	{r4, r5, r6, r7, fp, lr}
   18724:	bx	r2
   18728:	push	{r4, r5, r6, sl, fp, lr}
   1872c:	add	fp, sp, #16
   18730:	mov	r6, r2
   18734:	mov	r5, r1
   18738:	mov	r4, r0
   1873c:	ldrd	r2, [r0, #64]	; 0x40
   18740:	ldrd	r0, [r1, #64]	; 0x40
   18744:	bl	18764 <putc_unlocked@plt+0x65ac>
   18748:	cmp	r0, #0
   1874c:	popne	{r4, r5, r6, sl, fp, pc}
   18750:	ldr	r1, [r5]
   18754:	ldr	r0, [r4]
   18758:	mov	r2, r6
   1875c:	pop	{r4, r5, r6, sl, fp, lr}
   18760:	bx	r2
   18764:	push	{fp, lr}
   18768:	mov	fp, sp
   1876c:	mov	ip, #0
   18770:	subs	lr, r2, r0
   18774:	sbcs	lr, r3, r1
   18778:	movwlt	ip, #1
   1877c:	subs	r0, r0, r2
   18780:	sbcs	r0, r1, r3
   18784:	mvnlt	ip, #0
   18788:	mov	r0, ip
   1878c:	pop	{fp, pc}
   18790:	ldr	r1, [r1]
   18794:	ldr	r0, [r0]
   18798:	b	1b8bc <putc_unlocked@plt+0x9704>
   1879c:	push	{r4, r5, r6, sl, fp, lr}
   187a0:	add	fp, sp, #16
   187a4:	sub	sp, sp, #16
   187a8:	mov	r4, r2
   187ac:	mov	r6, r1
   187b0:	mov	r5, r0
   187b4:	add	r1, r1, #16
   187b8:	add	r0, sp, #8
   187bc:	bl	223c4 <_obstack_memory_used@@Base+0x1ffc>
   187c0:	add	r1, r5, #16
   187c4:	mov	r0, sp
   187c8:	bl	223c4 <_obstack_memory_used@@Base+0x1ffc>
   187cc:	ldm	sp, {r2, r3}
   187d0:	ldr	r0, [sp, #8]
   187d4:	ldr	r1, [sp, #12]
   187d8:	bl	22880 <_obstack_memory_used@@Base+0x24b8>
   187dc:	cmp	r0, #0
   187e0:	beq	187ec <putc_unlocked@plt+0x6634>
   187e4:	sub	sp, fp, #16
   187e8:	pop	{r4, r5, r6, sl, fp, pc}
   187ec:	ldr	r1, [r6]
   187f0:	ldr	r0, [r5]
   187f4:	blx	r4
   187f8:	sub	sp, fp, #16
   187fc:	pop	{r4, r5, r6, sl, fp, pc}
   18800:	push	{r4, r5, r6, sl, fp, lr}
   18804:	add	fp, sp, #16
   18808:	sub	sp, sp, #16
   1880c:	mov	r4, r2
   18810:	mov	r6, r1
   18814:	mov	r5, r0
   18818:	add	r1, r1, #16
   1881c:	add	r0, sp, #8
   18820:	bl	223b8 <_obstack_memory_used@@Base+0x1ff0>
   18824:	add	r1, r5, #16
   18828:	mov	r0, sp
   1882c:	bl	223b8 <_obstack_memory_used@@Base+0x1ff0>
   18830:	ldm	sp, {r2, r3}
   18834:	ldr	r0, [sp, #8]
   18838:	ldr	r1, [sp, #12]
   1883c:	bl	22880 <_obstack_memory_used@@Base+0x24b8>
   18840:	cmp	r0, #0
   18844:	beq	18850 <putc_unlocked@plt+0x6698>
   18848:	sub	sp, fp, #16
   1884c:	pop	{r4, r5, r6, sl, fp, pc}
   18850:	ldr	r1, [r6]
   18854:	ldr	r0, [r5]
   18858:	blx	r4
   1885c:	sub	sp, fp, #16
   18860:	pop	{r4, r5, r6, sl, fp, pc}
   18864:	push	{r4, r5, r6, sl, fp, lr}
   18868:	add	fp, sp, #16
   1886c:	sub	sp, sp, #16
   18870:	mov	r4, r2
   18874:	mov	r6, r1
   18878:	mov	r5, r0
   1887c:	add	r1, r1, #16
   18880:	add	r0, sp, #8
   18884:	bl	223ac <_obstack_memory_used@@Base+0x1fe4>
   18888:	add	r1, r5, #16
   1888c:	mov	r0, sp
   18890:	bl	223ac <_obstack_memory_used@@Base+0x1fe4>
   18894:	ldm	sp, {r2, r3}
   18898:	ldr	r0, [sp, #8]
   1889c:	ldr	r1, [sp, #12]
   188a0:	bl	22880 <_obstack_memory_used@@Base+0x24b8>
   188a4:	cmp	r0, #0
   188a8:	beq	188b4 <putc_unlocked@plt+0x66fc>
   188ac:	sub	sp, fp, #16
   188b0:	pop	{r4, r5, r6, sl, fp, pc}
   188b4:	ldr	r1, [r6]
   188b8:	ldr	r0, [r5]
   188bc:	blx	r4
   188c0:	sub	sp, fp, #16
   188c4:	pop	{r4, r5, r6, sl, fp, pc}
   188c8:	push	{r4, r5, r6, sl, fp, lr}
   188cc:	add	fp, sp, #16
   188d0:	sub	sp, sp, #16
   188d4:	mov	r6, r2
   188d8:	mov	r5, r1
   188dc:	mov	r4, r0
   188e0:	add	r1, r1, #16
   188e4:	add	r0, sp, #8
   188e8:	bl	1892c <putc_unlocked@plt+0x6774>
   188ec:	add	r1, r4, #16
   188f0:	mov	r0, sp
   188f4:	bl	1892c <putc_unlocked@plt+0x6774>
   188f8:	ldm	sp, {r2, r3}
   188fc:	ldr	r0, [sp, #8]
   18900:	ldr	r1, [sp, #12]
   18904:	bl	22880 <_obstack_memory_used@@Base+0x24b8>
   18908:	cmp	r0, #0
   1890c:	subne	sp, fp, #16
   18910:	popne	{r4, r5, r6, sl, fp, pc}
   18914:	ldr	r1, [r5]
   18918:	ldr	r0, [r4]
   1891c:	mov	r2, r6
   18920:	sub	sp, fp, #16
   18924:	pop	{r4, r5, r6, sl, fp, lr}
   18928:	bx	r2
   1892c:	push	{r4, sl, fp, lr}
   18930:	add	fp, sp, #8
   18934:	sub	sp, sp, #8
   18938:	mov	r4, r0
   1893c:	mov	r0, sp
   18940:	bl	223c4 <_obstack_memory_used@@Base+0x1ffc>
   18944:	ldm	sp, {r0, r1}
   18948:	stm	r4, {r0, r1}
   1894c:	sub	sp, fp, #8
   18950:	pop	{r4, sl, fp, pc}
   18954:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18958:	add	fp, sp, #24
   1895c:	sub	sp, sp, #672	; 0x2a0
   18960:	mov	r8, r1
   18964:	mov	r4, r0
   18968:	bl	18e74 <putc_unlocked@plt+0x6cbc>
   1896c:	movw	r0, #38344	; 0x95c8
   18970:	movt	r0, #3
   18974:	ldrb	r0, [r0]
   18978:	cmp	r0, #1
   1897c:	bne	189c4 <putc_unlocked@plt+0x680c>
   18980:	movw	r0, #41476	; 0xa204
   18984:	movt	r0, #3
   18988:	ldr	r0, [r0]
   1898c:	movw	r1, #37712	; 0x9350
   18990:	movt	r1, #3
   18994:	ldr	r1, [r1]
   18998:	subs	r6, r1, #4
   1899c:	movne	r6, r0
   189a0:	add	r0, sp, #20
   189a4:	mov	r1, r4
   189a8:	bl	19668 <putc_unlocked@plt+0x74b0>
   189ac:	mov	r3, r0
   189b0:	movw	r1, #27402	; 0x6b0a
   189b4:	movt	r1, #2
   189b8:	mov	r0, #1
   189bc:	mov	r2, r6
   189c0:	bl	12014 <__printf_chk@plt>
   189c4:	movw	r0, #37789	; 0x939d
   189c8:	movt	r0, #3
   189cc:	ldrb	r0, [r0]
   189d0:	cmp	r0, #1
   189d4:	bne	18a60 <putc_unlocked@plt+0x68a8>
   189d8:	movw	r0, #41480	; 0xa208
   189dc:	movt	r0, #3
   189e0:	ldr	r0, [r0]
   189e4:	movw	r1, #37712	; 0x9350
   189e8:	movt	r1, #3
   189ec:	ldr	r1, [r1]
   189f0:	subs	r6, r1, #4
   189f4:	movne	r6, r0
   189f8:	ldrb	r0, [r4, #132]	; 0x84
   189fc:	cmp	r0, #0
   18a00:	beq	18a44 <putc_unlocked@plt+0x688c>
   18a04:	ldrd	r0, [r4, #80]	; 0x50
   18a08:	movw	r2, #38324	; 0x95b4
   18a0c:	movt	r2, #3
   18a10:	ldr	r3, [r2]
   18a14:	movw	r2, #38336	; 0x95c0
   18a18:	movt	r2, #3
   18a1c:	ldm	r2, {r2, r7}
   18a20:	mov	ip, #0
   18a24:	mov	r5, #512	; 0x200
   18a28:	stm	sp, {r5, ip}
   18a2c:	str	r2, [sp, #8]
   18a30:	str	r7, [sp, #12]
   18a34:	add	r2, sp, #20
   18a38:	bl	1cd50 <putc_unlocked@plt+0xab98>
   18a3c:	mov	r3, r0
   18a40:	b	18a4c <putc_unlocked@plt+0x6894>
   18a44:	movw	r3, #26906	; 0x691a
   18a48:	movt	r3, #2
   18a4c:	movw	r1, #27402	; 0x6b0a
   18a50:	movt	r1, #2
   18a54:	mov	r0, #1
   18a58:	mov	r2, r6
   18a5c:	bl	12014 <__printf_chk@plt>
   18a60:	movw	r0, #37788	; 0x939c
   18a64:	movt	r0, #3
   18a68:	ldrb	r0, [r0]
   18a6c:	cmp	r0, #1
   18a70:	bne	18aa8 <putc_unlocked@plt+0x68f0>
   18a74:	movw	r0, #41500	; 0xa21c
   18a78:	movt	r0, #3
   18a7c:	ldr	r0, [r0]
   18a80:	movw	r1, #37712	; 0x9350
   18a84:	movt	r1, #3
   18a88:	ldr	r1, [r1]
   18a8c:	subs	r2, r1, #4
   18a90:	movne	r2, r0
   18a94:	ldr	r3, [r4, #128]	; 0x80
   18a98:	movw	r1, #27402	; 0x6b0a
   18a9c:	movt	r1, #2
   18aa0:	mov	r0, #1
   18aa4:	bl	12014 <__printf_chk@plt>
   18aa8:	mov	r0, r4
   18aac:	mov	r1, #0
   18ab0:	mov	r2, #0
   18ab4:	mov	r3, r8
   18ab8:	bl	19690 <putc_unlocked@plt+0x74d8>
   18abc:	movw	r0, #37724	; 0x935c
   18ac0:	movt	r0, #3
   18ac4:	ldr	r0, [r0]
   18ac8:	cmp	r0, #0
   18acc:	beq	18ae0 <putc_unlocked@plt+0x6928>
   18ad0:	ldr	r1, [r4, #32]
   18ad4:	ldr	r2, [r4, #120]	; 0x78
   18ad8:	ldrb	r0, [r4, #132]	; 0x84
   18adc:	bl	1978c <putc_unlocked@plt+0x75d4>
   18ae0:	sub	sp, fp, #24
   18ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18ae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18aec:	add	fp, sp, #28
   18af0:	sub	sp, sp, #4
   18af4:	mov	r8, r0
   18af8:	movw	r0, #37900	; 0x940c
   18afc:	movt	r0, #3
   18b00:	ldr	r0, [r0]
   18b04:	cmp	r0, #0
   18b08:	beq	18bd8 <putc_unlocked@plt+0x6a20>
   18b0c:	mov	r6, #0
   18b10:	movw	r9, #38360	; 0x95d8
   18b14:	movt	r9, #3
   18b18:	mov	r5, #0
   18b1c:	movw	r0, #41468	; 0xa1fc
   18b20:	movt	r0, #3
   18b24:	ldr	r0, [r0]
   18b28:	ldr	sl, [r0, r6, lsl #2]
   18b2c:	ldr	r0, [r9]
   18b30:	cmp	r0, #0
   18b34:	mov	r7, #0
   18b38:	beq	18b48 <putc_unlocked@plt+0x6990>
   18b3c:	mov	r0, sl
   18b40:	bl	19bac <putc_unlocked@plt+0x79f4>
   18b44:	mov	r7, r0
   18b48:	cmp	r6, #0
   18b4c:	beq	18bb0 <putc_unlocked@plt+0x69f8>
   18b50:	ldr	r0, [r9]
   18b54:	cmp	r0, #0
   18b58:	beq	18b98 <putc_unlocked@plt+0x69e0>
   18b5c:	mvn	r1, #2
   18b60:	sub	r1, r1, r7
   18b64:	cmp	r5, r1
   18b68:	addls	r1, r5, r7
   18b6c:	addls	r1, r1, #2
   18b70:	cmpls	r1, r0
   18b74:	bcc	18b98 <putc_unlocked@plt+0x69e0>
   18b78:	movw	r0, #38356	; 0x95d4
   18b7c:	movt	r0, #3
   18b80:	ldrb	r0, [r0]
   18b84:	cmp	r0, #0
   18b88:	mov	r4, #10
   18b8c:	movwne	r4, #0
   18b90:	mov	r5, #0
   18b94:	b	18ba0 <putc_unlocked@plt+0x69e8>
   18b98:	add	r5, r5, #2
   18b9c:	mov	r4, #32
   18ba0:	mov	r0, r8
   18ba4:	bl	12188 <putchar_unlocked@plt>
   18ba8:	mov	r0, r4
   18bac:	bl	12188 <putchar_unlocked@plt>
   18bb0:	mov	r0, sl
   18bb4:	mov	r1, r5
   18bb8:	bl	18954 <putc_unlocked@plt+0x679c>
   18bbc:	add	r5, r5, r7
   18bc0:	add	r6, r6, #1
   18bc4:	movw	r0, #37900	; 0x940c
   18bc8:	movt	r0, #3
   18bcc:	ldr	r0, [r0]
   18bd0:	cmp	r6, r0
   18bd4:	bcc	18b1c <putc_unlocked@plt+0x6964>
   18bd8:	movw	r0, #38356	; 0x95d4
   18bdc:	movt	r0, #3
   18be0:	ldrb	r1, [r0]
   18be4:	mov	r0, #10
   18be8:	cmp	r1, #0
   18bec:	movwne	r0, #0
   18bf0:	sub	sp, fp, #28
   18bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bf8:	b	12188 <putchar_unlocked@plt>
   18bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c00:	add	fp, sp, #28
   18c04:	sub	sp, sp, #12
   18c08:	mov	r0, #1
   18c0c:	bl	19d34 <putc_unlocked@plt+0x7b7c>
   18c10:	movw	r6, #37900	; 0x940c
   18c14:	movt	r6, #3
   18c18:	ldr	r1, [r6]
   18c1c:	udiv	r7, r1, r0
   18c20:	mls	r1, r7, r0, r1
   18c24:	cmp	r1, #0
   18c28:	addne	r7, r7, #1
   18c2c:	cmp	r7, #0
   18c30:	beq	18d44 <putc_unlocked@plt+0x6b8c>
   18c34:	movw	r1, #41944	; 0xa3d8
   18c38:	movt	r1, #3
   18c3c:	ldr	r1, [r1]
   18c40:	add	r0, r0, r0, lsl #1
   18c44:	add	r0, r1, r0, lsl #2
   18c48:	sub	r4, r0, #4
   18c4c:	mov	r5, #0
   18c50:	movw	r0, #41468	; 0xa1fc
   18c54:	movt	r0, #3
   18c58:	str	r4, [sp, #4]
   18c5c:	ldr	r0, [r0]
   18c60:	ldr	r8, [r0, r5, lsl #2]
   18c64:	mov	r0, r8
   18c68:	bl	19bac <putc_unlocked@plt+0x79f4>
   18c6c:	str	r0, [sp, #8]
   18c70:	ldr	r0, [r4]
   18c74:	ldr	r9, [r0]
   18c78:	mov	r0, r8
   18c7c:	mov	r1, #0
   18c80:	bl	18954 <putc_unlocked@plt+0x679c>
   18c84:	str	r5, [sp]
   18c88:	add	r8, r5, r7
   18c8c:	ldr	r0, [r6]
   18c90:	cmp	r8, r0
   18c94:	bcs	18d0c <putc_unlocked@plt+0x6b54>
   18c98:	mov	r5, #0
   18c9c:	mov	sl, #4
   18ca0:	ldr	r0, [sp, #8]
   18ca4:	add	r0, r0, r5
   18ca8:	add	r5, r9, r5
   18cac:	mov	r1, r5
   18cb0:	bl	19ec4 <putc_unlocked@plt+0x7d0c>
   18cb4:	movw	r0, #41468	; 0xa1fc
   18cb8:	movt	r0, #3
   18cbc:	ldr	r0, [r0]
   18cc0:	mov	r4, r7
   18cc4:	mov	r7, r6
   18cc8:	ldr	r6, [r0, r8, lsl #2]
   18ccc:	mov	r0, r6
   18cd0:	bl	19bac <putc_unlocked@plt+0x79f4>
   18cd4:	str	r0, [sp, #8]
   18cd8:	ldr	r0, [sp, #4]
   18cdc:	ldr	r0, [r0]
   18ce0:	ldr	r9, [r0, sl]
   18ce4:	mov	r0, r6
   18ce8:	mov	r6, r7
   18cec:	mov	r7, r4
   18cf0:	mov	r1, r5
   18cf4:	bl	18954 <putc_unlocked@plt+0x679c>
   18cf8:	add	r8, r8, r4
   18cfc:	add	sl, sl, #4
   18d00:	ldr	r0, [r6]
   18d04:	cmp	r8, r0
   18d08:	bcc	18ca0 <putc_unlocked@plt+0x6ae8>
   18d0c:	movw	r0, #38356	; 0x95d4
   18d10:	movt	r0, #3
   18d14:	ldrb	r0, [r0]
   18d18:	cmp	r0, #0
   18d1c:	mov	r0, #10
   18d20:	movwne	r0, #0
   18d24:	bl	12188 <putchar_unlocked@plt>
   18d28:	ldr	r5, [sp]
   18d2c:	add	r5, r5, #1
   18d30:	cmp	r5, r7
   18d34:	ldr	r4, [sp, #4]
   18d38:	movw	r0, #41468	; 0xa1fc
   18d3c:	movt	r0, #3
   18d40:	bcc	18c5c <putc_unlocked@plt+0x6aa4>
   18d44:	sub	sp, fp, #28
   18d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d50:	add	fp, sp, #28
   18d54:	sub	sp, sp, #4
   18d58:	mov	r5, #0
   18d5c:	mov	r0, #0
   18d60:	bl	19d34 <putc_unlocked@plt+0x7b7c>
   18d64:	mov	r4, r0
   18d68:	movw	r0, #41944	; 0xa3d8
   18d6c:	movt	r0, #3
   18d70:	ldr	r0, [r0]
   18d74:	add	r1, r4, r4, lsl #1
   18d78:	add	sl, r0, r1, lsl #2
   18d7c:	movw	r0, #41468	; 0xa1fc
   18d80:	movt	r0, #3
   18d84:	ldr	r0, [r0]
   18d88:	ldr	r8, [r0]
   18d8c:	mov	r0, r8
   18d90:	bl	19bac <putc_unlocked@plt+0x79f4>
   18d94:	mov	r6, r0
   18d98:	ldr	r0, [sl, #-4]!
   18d9c:	ldr	r9, [r0]
   18da0:	mov	r0, r8
   18da4:	mov	r1, #0
   18da8:	bl	18954 <putc_unlocked@plt+0x679c>
   18dac:	movw	r0, #37900	; 0x940c
   18db0:	movt	r0, #3
   18db4:	ldr	r0, [r0]
   18db8:	cmp	r0, #2
   18dbc:	bcc	18e50 <putc_unlocked@plt+0x6c98>
   18dc0:	mov	r7, #1
   18dc4:	udiv	r0, r7, r4
   18dc8:	mls	r8, r0, r4, r7
   18dcc:	cmp	r8, #0
   18dd0:	beq	18de8 <putc_unlocked@plt+0x6c30>
   18dd4:	add	r0, r6, r5
   18dd8:	add	r5, r9, r5
   18ddc:	mov	r1, r5
   18de0:	bl	19ec4 <putc_unlocked@plt+0x7d0c>
   18de4:	b	18e08 <putc_unlocked@plt+0x6c50>
   18de8:	movw	r0, #38356	; 0x95d4
   18dec:	movt	r0, #3
   18df0:	ldrb	r0, [r0]
   18df4:	cmp	r0, #0
   18df8:	mov	r0, #10
   18dfc:	movwne	r0, #0
   18e00:	bl	12188 <putchar_unlocked@plt>
   18e04:	mov	r5, #0
   18e08:	movw	r0, #41468	; 0xa1fc
   18e0c:	movt	r0, #3
   18e10:	ldr	r0, [r0]
   18e14:	ldr	r6, [r0, r7, lsl #2]
   18e18:	mov	r0, r6
   18e1c:	mov	r1, r5
   18e20:	bl	18954 <putc_unlocked@plt+0x679c>
   18e24:	mov	r0, r6
   18e28:	bl	19bac <putc_unlocked@plt+0x79f4>
   18e2c:	mov	r6, r0
   18e30:	ldr	r0, [sl]
   18e34:	ldr	r9, [r0, r8, lsl #2]
   18e38:	add	r7, r7, #1
   18e3c:	movw	r0, #37900	; 0x940c
   18e40:	movt	r0, #3
   18e44:	ldr	r0, [r0]
   18e48:	cmp	r7, r0
   18e4c:	bcc	18dc4 <putc_unlocked@plt+0x6c0c>
   18e50:	movw	r0, #38356	; 0x95d4
   18e54:	movt	r0, #3
   18e58:	ldrb	r1, [r0]
   18e5c:	mov	r0, #10
   18e60:	cmp	r1, #0
   18e64:	movwne	r0, #0
   18e68:	sub	sp, fp, #28
   18e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e70:	b	12188 <putchar_unlocked@plt>
   18e74:	push	{r4, sl, fp, lr}
   18e78:	add	fp, sp, #8
   18e7c:	movw	r0, #37700	; 0x9344
   18e80:	movt	r0, #3
   18e84:	ldrb	r0, [r0]
   18e88:	cmp	r0, #0
   18e8c:	popeq	{r4, sl, fp, pc}
   18e90:	mov	r0, #4
   18e94:	bl	142a4 <putc_unlocked@plt+0x20ec>
   18e98:	cmp	r0, #0
   18e9c:	beq	18ec4 <putc_unlocked@plt+0x6d0c>
   18ea0:	movw	r4, #37344	; 0x91e0
   18ea4:	movt	r4, #3
   18ea8:	mov	r0, r4
   18eac:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   18eb0:	add	r0, r4, #32
   18eb4:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   18eb8:	add	r0, r4, #8
   18ebc:	pop	{r4, sl, fp, lr}
   18ec0:	b	15fe0 <putc_unlocked@plt+0x3e28>
   18ec4:	pop	{r4, sl, fp, pc}
   18ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ecc:	add	fp, sp, #28
   18ed0:	sub	sp, sp, #268	; 0x10c
   18ed4:	sub	sp, sp, #4096	; 0x1000
   18ed8:	mov	sl, r0
   18edc:	ldrb	r0, [r0, #132]	; 0x84
   18ee0:	cmp	r0, #0
   18ee4:	beq	18ef8 <putc_unlocked@plt+0x6d40>
   18ee8:	add	r0, sl, #16
   18eec:	sub	r1, fp, #44	; 0x2c
   18ef0:	bl	1b7bc <putc_unlocked@plt+0x9604>
   18ef4:	b	18f2c <putc_unlocked@plt+0x6d74>
   18ef8:	ldr	r0, [sl, #120]	; 0x78
   18efc:	movw	r1, #16191	; 0x3f3f
   18f00:	strh	r1, [fp, #-35]	; 0xffffffdd
   18f04:	movw	r1, #16191	; 0x3f3f
   18f08:	movt	r1, #16191	; 0x3f3f
   18f0c:	str	r1, [fp, #-39]	; 0xffffffd9
   18f10:	str	r1, [fp, #-43]	; 0xffffffd5
   18f14:	mov	r1, #0
   18f18:	strb	r1, [fp, #-33]	; 0xffffffdf
   18f1c:	movw	r1, #27378	; 0x6af2
   18f20:	movt	r1, #2
   18f24:	ldrb	r0, [r1, r0]
   18f28:	strb	r0, [fp, #-44]	; 0xffffffd4
   18f2c:	movw	r0, #41472	; 0xa200
   18f30:	movt	r0, #3
   18f34:	ldrb	r0, [r0]
   18f38:	cmp	r0, #0
   18f3c:	beq	18f5c <putc_unlocked@plt+0x6da4>
   18f40:	ldr	r0, [sl, #136]	; 0x88
   18f44:	cmp	r0, #1
   18f48:	beq	18f64 <putc_unlocked@plt+0x6dac>
   18f4c:	cmp	r0, #2
   18f50:	bne	18f6c <putc_unlocked@plt+0x6db4>
   18f54:	mov	r0, #43	; 0x2b
   18f58:	b	18f68 <putc_unlocked@plt+0x6db0>
   18f5c:	mov	r0, #0
   18f60:	b	18f68 <putc_unlocked@plt+0x6db0>
   18f64:	mov	r0, #46	; 0x2e
   18f68:	strb	r0, [fp, #-34]	; 0xffffffde
   18f6c:	movw	r0, #38316	; 0x95ac
   18f70:	movt	r0, #3
   18f74:	ldr	r0, [r0]
   18f78:	cmp	r0, #3
   18f7c:	bhi	19664 <putc_unlocked@plt+0x74ac>
   18f80:	add	r1, pc, #0
   18f84:	ldr	pc, [r1, r0, lsl #2]
   18f88:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   18f8c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18f90:	andeq	r8, r1, r8, lsr #31
   18f94:			; <UNDEFINED> instruction: 0x00018fb8
   18f98:	add	r1, sl, #16
   18f9c:	add	r0, sp, #704	; 0x2c0
   18fa0:	bl	223c4 <_obstack_memory_used@@Base+0x1ffc>
   18fa4:	b	19004 <putc_unlocked@plt+0x6e4c>
   18fa8:	add	r1, sl, #16
   18fac:	add	r0, sp, #704	; 0x2c0
   18fb0:	bl	223ac <_obstack_memory_used@@Base+0x1fe4>
   18fb4:	b	19004 <putc_unlocked@plt+0x6e4c>
   18fb8:	add	r1, sl, #16
   18fbc:	add	r0, sp, #704	; 0x2c0
   18fc0:	bl	1892c <putc_unlocked@plt+0x6774>
   18fc4:	ldr	r0, [sp, #704]	; 0x2c0
   18fc8:	ldr	r1, [sp, #708]	; 0x2c4
   18fcc:	str	r1, [sp, #700]	; 0x2bc
   18fd0:	str	r0, [sp, #696]	; 0x2b8
   18fd4:	mov	r9, #0
   18fd8:	ldr	r0, [sp, #696]	; 0x2b8
   18fdc:	cmn	r0, #1
   18fe0:	bne	19018 <putc_unlocked@plt+0x6e60>
   18fe4:	ldr	r0, [sp, #700]	; 0x2bc
   18fe8:	add	r0, r0, #1
   18fec:	clz	r0, r0
   18ff0:	lsr	r9, r0, #5
   18ff4:	b	19018 <putc_unlocked@plt+0x6e60>
   18ff8:	add	r1, sl, #16
   18ffc:	add	r0, sp, #704	; 0x2c0
   19000:	bl	223b8 <_obstack_memory_used@@Base+0x1ff0>
   19004:	ldr	r0, [sp, #704]	; 0x2c0
   19008:	ldr	r1, [sp, #708]	; 0x2c4
   1900c:	str	r1, [sp, #700]	; 0x2bc
   19010:	str	r0, [sp, #696]	; 0x2b8
   19014:	mov	r9, #0
   19018:	movw	r0, #38344	; 0x95c8
   1901c:	movt	r0, #3
   19020:	ldrb	r0, [r0]
   19024:	cmp	r0, #1
   19028:	bne	19070 <putc_unlocked@plt+0x6eb8>
   1902c:	movw	r0, #41476	; 0xa204
   19030:	movt	r0, #3
   19034:	ldr	r4, [r0]
   19038:	add	r0, sp, #44	; 0x2c
   1903c:	mov	r1, sl
   19040:	bl	19668 <putc_unlocked@plt+0x74b0>
   19044:	str	r4, [sp]
   19048:	str	r0, [sp, #4]
   1904c:	add	r5, sp, #704	; 0x2c0
   19050:	movw	r3, #27402	; 0x6b0a
   19054:	movt	r3, #2
   19058:	mov	r0, r5
   1905c:	mov	r1, #1
   19060:	movw	r2, #3643	; 0xe3b
   19064:	bl	11ff0 <__sprintf_chk@plt>
   19068:	add	r5, r5, r0
   1906c:	b	19074 <putc_unlocked@plt+0x6ebc>
   19070:	add	r5, sp, #704	; 0x2c0
   19074:	movw	r0, #37789	; 0x939d
   19078:	movt	r0, #3
   1907c:	ldrb	r0, [r0]
   19080:	cmp	r0, #1
   19084:	bne	1915c <putc_unlocked@plt+0x6fa4>
   19088:	ldrb	r0, [sl, #132]	; 0x84
   1908c:	cmp	r0, #0
   19090:	beq	190d4 <putc_unlocked@plt+0x6f1c>
   19094:	ldrd	r0, [sl, #80]	; 0x50
   19098:	movw	r2, #38324	; 0x95b4
   1909c:	movt	r2, #3
   190a0:	ldr	r3, [r2]
   190a4:	movw	r2, #38336	; 0x95c0
   190a8:	movt	r2, #3
   190ac:	ldm	r2, {r2, r7}
   190b0:	mov	r6, #0
   190b4:	mov	r4, #512	; 0x200
   190b8:	stm	sp, {r4, r6}
   190bc:	str	r2, [sp, #8]
   190c0:	str	r7, [sp, #12]
   190c4:	add	r2, sp, #44	; 0x2c
   190c8:	bl	1cd50 <putc_unlocked@plt+0xab98>
   190cc:	mov	r6, r0
   190d0:	b	190dc <putc_unlocked@plt+0x6f24>
   190d4:	movw	r6, #26906	; 0x691a
   190d8:	movt	r6, #2
   190dc:	movw	r0, #41480	; 0xa208
   190e0:	movt	r0, #3
   190e4:	ldr	r4, [r0]
   190e8:	mov	r0, r6
   190ec:	mov	r1, #0
   190f0:	bl	1e198 <putc_unlocked@plt+0xbfe0>
   190f4:	mov	r7, r0
   190f8:	sub	r0, r4, r0
   190fc:	cmp	r0, #1
   19100:	blt	19144 <putc_unlocked@plt+0x6f8c>
   19104:	mvn	r0, r4
   19108:	add	r0, r7, r0
   1910c:	cmn	r0, #2
   19110:	mvnle	r0, #1
   19114:	add	r0, r4, r0
   19118:	add	r0, r0, #2
   1911c:	sub	r2, r0, r7
   19120:	mov	r0, r5
   19124:	mov	r1, #32
   19128:	bl	12008 <memset@plt>
   1912c:	add	r0, r4, #1
   19130:	sub	r0, r0, r7
   19134:	sub	r0, r0, #1
   19138:	add	r5, r5, #1
   1913c:	cmp	r0, #1
   19140:	bgt	19134 <putc_unlocked@plt+0x6f7c>
   19144:	ldrb	r0, [r6], #1
   19148:	strb	r0, [r5], #1
   1914c:	cmp	r0, #0
   19150:	bne	19144 <putc_unlocked@plt+0x6f8c>
   19154:	mov	r0, #32
   19158:	strb	r0, [r5, #-1]
   1915c:	movw	r0, #41484	; 0xa20c
   19160:	movt	r0, #3
   19164:	ldr	r4, [r0]
   19168:	ldrb	r0, [sl, #132]	; 0x84
   1916c:	cmp	r0, #0
   19170:	beq	19188 <putc_unlocked@plt+0x6fd0>
   19174:	ldr	r0, [sl, #36]	; 0x24
   19178:	add	r2, sp, #44	; 0x2c
   1917c:	mov	r1, #0
   19180:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   19184:	b	19190 <putc_unlocked@plt+0x6fd8>
   19188:	movw	r0, #26906	; 0x691a
   1918c:	movt	r0, #2
   19190:	sub	r1, fp, #44	; 0x2c
   19194:	stm	sp, {r1, r4}
   19198:	str	r0, [sp, #8]
   1919c:	movw	r3, #27389	; 0x6afd
   191a0:	movt	r3, #2
   191a4:	mov	r0, r5
   191a8:	mov	r1, #1
   191ac:	mvn	r2, #0
   191b0:	bl	11ff0 <__sprintf_chk@plt>
   191b4:	add	r7, r5, r0
   191b8:	bl	16ce0 <putc_unlocked@plt+0x4b28>
   191bc:	movw	r6, #38320	; 0x95b0
   191c0:	movt	r6, #3
   191c4:	ldrb	r0, [r6]
   191c8:	cmp	r0, #1
   191cc:	bne	1920c <putc_unlocked@plt+0x7054>
   191d0:	movw	r0, #38346	; 0x95ca
   191d4:	movt	r0, #3
   191d8:	ldrb	r0, [r0]
   191dc:	cmp	r0, #1
   191e0:	bne	1920c <putc_unlocked@plt+0x7054>
   191e4:	movw	r0, #38348	; 0x95cc
   191e8:	movt	r0, #3
   191ec:	ldrb	r0, [r0]
   191f0:	cmp	r0, #0
   191f4:	bne	1920c <putc_unlocked@plt+0x7054>
   191f8:	movw	r0, #37788	; 0x939c
   191fc:	movt	r0, #3
   19200:	ldrb	r0, [r0]
   19204:	cmp	r0, #1
   19208:	bne	1965c <putc_unlocked@plt+0x74a4>
   1920c:	add	r5, sp, #704	; 0x2c0
   19210:	sub	r1, r7, r5
   19214:	mov	r0, r5
   19218:	bl	1705c <putc_unlocked@plt+0x4ea4>
   1921c:	ldrb	r0, [r6]
   19220:	cmp	r0, #0
   19224:	bne	19240 <putc_unlocked@plt+0x7088>
   19228:	ldrb	r2, [sl, #132]	; 0x84
   1922c:	movw	r0, #41488	; 0xa210
   19230:	movt	r0, #3
   19234:	ldr	r1, [r0]
   19238:	ldr	r0, [sl, #40]	; 0x28
   1923c:	bl	1a08c <putc_unlocked@plt+0x7ed4>
   19240:	movw	r0, #38346	; 0x95ca
   19244:	movt	r0, #3
   19248:	ldrb	r0, [r0]
   1924c:	cmp	r0, #0
   19250:	bne	1926c <putc_unlocked@plt+0x70b4>
   19254:	ldrb	r2, [sl, #132]	; 0x84
   19258:	movw	r0, #41492	; 0xa214
   1925c:	movt	r0, #3
   19260:	ldr	r1, [r0]
   19264:	ldr	r0, [sl, #44]	; 0x2c
   19268:	bl	1a0ec <putc_unlocked@plt+0x7f34>
   1926c:	movw	r0, #38348	; 0x95cc
   19270:	movt	r0, #3
   19274:	ldrb	r0, [r0]
   19278:	cmp	r0, #1
   1927c:	bne	19298 <putc_unlocked@plt+0x70e0>
   19280:	ldrb	r2, [sl, #132]	; 0x84
   19284:	movw	r0, #41496	; 0xa218
   19288:	movt	r0, #3
   1928c:	ldr	r1, [r0]
   19290:	ldr	r0, [sl, #40]	; 0x28
   19294:	bl	1a08c <putc_unlocked@plt+0x7ed4>
   19298:	movw	r0, #37788	; 0x939c
   1929c:	movt	r0, #3
   192a0:	ldrb	r0, [r0]
   192a4:	cmp	r0, #1
   192a8:	bne	192cc <putc_unlocked@plt+0x7114>
   192ac:	ldr	r0, [sl, #128]	; 0x80
   192b0:	movw	r1, #41500	; 0xa21c
   192b4:	movt	r1, #3
   192b8:	ldr	r1, [r1]
   192bc:	str	r1, [sp]
   192c0:	mov	r2, #0
   192c4:	mov	r3, #0
   192c8:	bl	1a14c <putc_unlocked@plt+0x7f94>
   192cc:	ldrb	r0, [sl, #132]	; 0x84
   192d0:	cmp	r0, #0
   192d4:	beq	19388 <putc_unlocked@plt+0x71d0>
   192d8:	ldr	r0, [sl, #32]
   192dc:	and	r0, r0, #45056	; 0xb000
   192e0:	orr	r0, r0, #16384	; 0x4000
   192e4:	cmp	r0, #24576	; 0x6000
   192e8:	bne	19394 <putc_unlocked@plt+0x71dc>
   192ec:	movw	r0, #41504	; 0xa220
   192f0:	movt	r0, #3
   192f4:	ldr	r7, [r0]
   192f8:	movw	r4, #41508	; 0xa224
   192fc:	movt	r4, #3
   19300:	ldr	r6, [r4]
   19304:	movw	r0, #41512	; 0xa228
   19308:	movt	r0, #3
   1930c:	ldr	r0, [r0]
   19310:	str	r0, [sp, #16]
   19314:	ldrd	r0, [sl, #48]	; 0x30
   19318:	bl	11c9c <gnu_dev_major@plt>
   1931c:	add	r2, sp, #44	; 0x2c
   19320:	mov	r1, #0
   19324:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   19328:	mov	r8, r0
   1932c:	ldr	r4, [r4]
   19330:	ldrd	r0, [sl, #48]	; 0x30
   19334:	bl	11cf0 <gnu_dev_minor@plt>
   19338:	add	r2, sp, #23
   1933c:	mov	r1, #0
   19340:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   19344:	ldr	r1, [sp, #16]
   19348:	sub	r1, r1, #2
   1934c:	sub	r2, r1, r7
   19350:	sub	r2, r2, r6
   19354:	cmp	r2, #0
   19358:	subgt	r7, r1, r6
   1935c:	stm	sp, {r7, r8}
   19360:	str	r4, [sp, #8]
   19364:	str	r0, [sp, #12]
   19368:	movw	r3, #27397	; 0x6b05
   1936c:	movt	r3, #2
   19370:	mov	r0, r5
   19374:	mov	r1, #1
   19378:	mvn	r2, #0
   1937c:	bl	11ff0 <__sprintf_chk@plt>
   19380:	add	r5, r5, r0
   19384:	b	19454 <putc_unlocked@plt+0x729c>
   19388:	movw	r6, #26906	; 0x691a
   1938c:	movt	r6, #2
   19390:	b	193d4 <putc_unlocked@plt+0x721c>
   19394:	ldrd	r0, [sl, #64]	; 0x40
   19398:	bl	17e04 <putc_unlocked@plt+0x5c4c>
   1939c:	movw	r2, #38328	; 0x95b8
   193a0:	movt	r2, #3
   193a4:	ldr	r3, [r2]
   193a8:	movw	r2, #37536	; 0x92a0
   193ac:	movt	r2, #3
   193b0:	ldm	r2, {r2, r7}
   193b4:	mov	r6, #0
   193b8:	mov	r4, #1
   193bc:	stm	sp, {r4, r6}
   193c0:	str	r2, [sp, #8]
   193c4:	str	r7, [sp, #12]
   193c8:	add	r2, sp, #44	; 0x2c
   193cc:	bl	1cd50 <putc_unlocked@plt+0xab98>
   193d0:	mov	r6, r0
   193d4:	movw	r0, #41512	; 0xa228
   193d8:	movt	r0, #3
   193dc:	ldr	r4, [r0]
   193e0:	mov	r0, r6
   193e4:	mov	r1, #0
   193e8:	bl	1e198 <putc_unlocked@plt+0xbfe0>
   193ec:	mov	r7, r0
   193f0:	sub	r0, r4, r0
   193f4:	cmp	r0, #1
   193f8:	blt	1943c <putc_unlocked@plt+0x7284>
   193fc:	mvn	r0, r4
   19400:	add	r0, r7, r0
   19404:	cmn	r0, #2
   19408:	mvnle	r0, #1
   1940c:	add	r0, r4, r0
   19410:	add	r0, r0, #2
   19414:	sub	r2, r0, r7
   19418:	mov	r0, r5
   1941c:	mov	r1, #32
   19420:	bl	12008 <memset@plt>
   19424:	add	r0, r4, #1
   19428:	sub	r0, r0, r7
   1942c:	sub	r0, r0, #1
   19430:	add	r5, r5, #1
   19434:	cmp	r0, #1
   19438:	bgt	1942c <putc_unlocked@plt+0x7274>
   1943c:	ldrb	r0, [r6], #1
   19440:	strb	r0, [r5], #1
   19444:	cmp	r0, #0
   19448:	bne	1943c <putc_unlocked@plt+0x7284>
   1944c:	mov	r0, #32
   19450:	strb	r0, [r5, #-1]
   19454:	mov	r0, #1
   19458:	strb	r0, [r5]
   1945c:	ldrb	r0, [sl, #132]	; 0x84
   19460:	clz	r0, r0
   19464:	lsr	r0, r0, #5
   19468:	orrs	r0, r9, r0
   1946c:	bne	1953c <putc_unlocked@plt+0x7384>
   19470:	movw	r4, #37780	; 0x9394
   19474:	movt	r4, #3
   19478:	ldr	r0, [r4]
   1947c:	add	r1, sp, #696	; 0x2b8
   19480:	add	r2, sp, #44	; 0x2c
   19484:	bl	224b0 <_obstack_memory_used@@Base+0x20e8>
   19488:	cmp	r0, #0
   1948c:	beq	19530 <putc_unlocked@plt+0x7378>
   19490:	str	r9, [sp, #16]
   19494:	movw	r6, #37692	; 0x933c
   19498:	movt	r6, #3
   1949c:	ldm	r6, {r0, r1}
   194a0:	ldr	r2, [sp, #696]	; 0x2b8
   194a4:	ldr	r3, [sp, #700]	; 0x2bc
   194a8:	bl	22880 <_obstack_memory_used@@Base+0x24b8>
   194ac:	cmn	r0, #1
   194b0:	bgt	194c0 <putc_unlocked@plt+0x7308>
   194b4:	movw	r0, #37692	; 0x933c
   194b8:	movt	r0, #3
   194bc:	bl	1bd34 <putc_unlocked@plt+0x9b7c>
   194c0:	ldm	r6, {r8, r9}
   194c4:	movw	r0, #15700	; 0x3d54
   194c8:	movt	r0, #65295	; 0xff0f
   194cc:	add	r0, r8, r0
   194d0:	ldr	r6, [sp, #696]	; 0x2b8
   194d4:	ldr	r7, [sp, #700]	; 0x2bc
   194d8:	mov	r1, r9
   194dc:	mov	r2, r6
   194e0:	mov	r3, r7
   194e4:	bl	22880 <_obstack_memory_used@@Base+0x24b8>
   194e8:	mov	r1, #0
   194ec:	cmn	r0, #1
   194f0:	bgt	1950c <putc_unlocked@plt+0x7354>
   194f4:	mov	r0, r6
   194f8:	mov	r1, r7
   194fc:	mov	r2, r8
   19500:	mov	r3, r9
   19504:	bl	22880 <_obstack_memory_used@@Base+0x24b8>
   19508:	lsr	r1, r0, #31
   1950c:	ldr	r3, [r4]
   19510:	ldr	r0, [sp, #700]	; 0x2bc
   19514:	str	r0, [sp]
   19518:	add	r2, sp, #44	; 0x2c
   1951c:	mov	r0, r5
   19520:	bl	1a1dc <putc_unlocked@plt+0x8024>
   19524:	cmp	r0, #0
   19528:	ldr	r9, [sp, #16]
   1952c:	bne	1959c <putc_unlocked@plt+0x73e4>
   19530:	ldrb	r0, [r5]
   19534:	cmp	r0, #0
   19538:	beq	19598 <putc_unlocked@plt+0x73e0>
   1953c:	bl	1a244 <putc_unlocked@plt+0x808c>
   19540:	mov	r6, r0
   19544:	ldrb	r0, [sl, #132]	; 0x84
   19548:	clz	r0, r0
   1954c:	lsr	r0, r0, #5
   19550:	orrs	r0, r9, r0
   19554:	beq	19564 <putc_unlocked@plt+0x73ac>
   19558:	movw	r0, #26906	; 0x691a
   1955c:	movt	r0, #2
   19560:	b	19570 <putc_unlocked@plt+0x73b8>
   19564:	ldr	r0, [sp, #696]	; 0x2b8
   19568:	add	r1, sp, #23
   1956c:	bl	1a2e0 <putc_unlocked@plt+0x8128>
   19570:	str	r6, [sp]
   19574:	str	r0, [sp, #4]
   19578:	movw	r3, #27402	; 0x6b0a
   1957c:	movt	r3, #2
   19580:	mov	r0, r5
   19584:	mov	r1, #1
   19588:	mvn	r2, #0
   1958c:	bl	11ff0 <__sprintf_chk@plt>
   19590:	add	r1, r5, r0
   19594:	b	195a8 <putc_unlocked@plt+0x73f0>
   19598:	mov	r0, #0
   1959c:	mov	r1, #32
   195a0:	strb	r1, [r5, r0]!
   195a4:	add	r1, r5, #1
   195a8:	add	r0, sp, #704	; 0x2c0
   195ac:	sub	r5, r1, r0
   195b0:	mov	r1, r5
   195b4:	bl	1705c <putc_unlocked@plt+0x4ea4>
   195b8:	movw	r2, #37796	; 0x93a4
   195bc:	movt	r2, #3
   195c0:	mov	r0, sl
   195c4:	mov	r1, #0
   195c8:	mov	r3, r5
   195cc:	bl	19690 <putc_unlocked@plt+0x74d8>
   195d0:	ldr	r2, [sl, #120]	; 0x78
   195d4:	cmp	r2, #6
   195d8:	bne	19634 <putc_unlocked@plt+0x747c>
   195dc:	mov	r6, r0
   195e0:	ldr	r0, [sl, #4]
   195e4:	cmp	r0, #0
   195e8:	beq	19654 <putc_unlocked@plt+0x749c>
   195ec:	movw	r0, #27407	; 0x6b0f
   195f0:	movt	r0, #2
   195f4:	bl	16ee4 <putc_unlocked@plt+0x4d2c>
   195f8:	add	r0, r6, r5
   195fc:	add	r3, r0, #4
   19600:	mov	r0, sl
   19604:	mov	r1, #1
   19608:	mov	r2, #0
   1960c:	bl	19690 <putc_unlocked@plt+0x74d8>
   19610:	movw	r0, #37724	; 0x935c
   19614:	movt	r0, #3
   19618:	ldr	r0, [r0]
   1961c:	cmp	r0, #0
   19620:	beq	19654 <putc_unlocked@plt+0x749c>
   19624:	ldr	r1, [sl, #124]	; 0x7c
   19628:	mov	r0, #1
   1962c:	mov	r2, #0
   19630:	b	19650 <putc_unlocked@plt+0x7498>
   19634:	movw	r0, #37724	; 0x935c
   19638:	movt	r0, #3
   1963c:	ldr	r0, [r0]
   19640:	cmp	r0, #0
   19644:	beq	19654 <putc_unlocked@plt+0x749c>
   19648:	ldr	r1, [sl, #32]
   1964c:	ldrb	r0, [sl, #132]	; 0x84
   19650:	bl	1978c <putc_unlocked@plt+0x75d4>
   19654:	sub	sp, fp, #28
   19658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1965c:	mov	r5, r7
   19660:	b	192cc <putc_unlocked@plt+0x7114>
   19664:	bl	1214c <abort@plt>
   19668:	mov	r2, r0
   1966c:	ldrb	r0, [r1, #132]	; 0x84
   19670:	cmp	r0, #0
   19674:	ldrdne	r0, [r1, #112]	; 0x70
   19678:	orrsne	r3, r0, r1
   1967c:	bne	1968c <putc_unlocked@plt+0x74d4>
   19680:	movw	r0, #26906	; 0x691a
   19684:	movt	r0, #2
   19688:	bx	lr
   1968c:	b	1dc6c <putc_unlocked@plt+0xbab4>
   19690:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19694:	add	fp, sp, #24
   19698:	sub	sp, sp, #16
   1969c:	mov	r8, r3
   196a0:	mov	r9, r2
   196a4:	mov	r6, r1
   196a8:	mov	r4, r0
   196ac:	cmp	r1, #0
   196b0:	addne	r0, r0, #4
   196b4:	ldr	r7, [r0]
   196b8:	movw	r0, #37700	; 0x9344
   196bc:	movt	r0, #3
   196c0:	ldrb	r0, [r0]
   196c4:	cmp	r0, #0
   196c8:	beq	196ec <putc_unlocked@plt+0x7534>
   196cc:	mov	r0, r4
   196d0:	mov	r1, r6
   196d4:	bl	197b8 <putc_unlocked@plt+0x7600>
   196d8:	cmp	r0, #0
   196dc:	beq	196f8 <putc_unlocked@plt+0x7540>
   196e0:	mov	r3, r0
   196e4:	mov	r5, #1
   196e8:	b	19708 <putc_unlocked@plt+0x7550>
   196ec:	mov	r3, #0
   196f0:	mov	r5, #0
   196f4:	b	19708 <putc_unlocked@plt+0x7550>
   196f8:	mov	r0, #4
   196fc:	bl	142a4 <putc_unlocked@plt+0x20ec>
   19700:	mov	r5, r0
   19704:	mov	r3, #0
   19708:	movw	r0, #37916	; 0x941c
   1970c:	movt	r0, #3
   19710:	ldr	r1, [r0]
   19714:	ldr	r0, [r4, #8]
   19718:	ldr	r2, [r4, #144]	; 0x90
   1971c:	eor	r6, r6, #1
   19720:	stm	sp, {r6, r9}
   19724:	str	r0, [sp, #8]
   19728:	mov	r0, r7
   1972c:	bl	16d00 <putc_unlocked@plt+0x4b48>
   19730:	mov	r4, r0
   19734:	bl	16f98 <putc_unlocked@plt+0x4de0>
   19738:	cmp	r5, #0
   1973c:	beq	19780 <putc_unlocked@plt+0x75c8>
   19740:	bl	16044 <putc_unlocked@plt+0x3e8c>
   19744:	movw	r0, #38360	; 0x95d8
   19748:	movt	r0, #3
   1974c:	ldr	r0, [r0]
   19750:	cmp	r0, #0
   19754:	beq	19780 <putc_unlocked@plt+0x75c8>
   19758:	udiv	r1, r8, r0
   1975c:	add	r2, r8, r4
   19760:	sub	r2, r2, #1
   19764:	udiv	r0, r2, r0
   19768:	cmp	r1, r0
   1976c:	beq	19780 <putc_unlocked@plt+0x75c8>
   19770:	movw	r0, #37344	; 0x91e0
   19774:	movt	r0, #3
   19778:	add	r0, r0, #184	; 0xb8
   1977c:	bl	15fe0 <putc_unlocked@plt+0x3e28>
   19780:	mov	r0, r4
   19784:	sub	sp, fp, #24
   19788:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1978c:	push	{r4, sl, fp, lr}
   19790:	add	fp, sp, #8
   19794:	bl	19ac8 <putc_unlocked@plt+0x7910>
   19798:	mov	r4, r0
   1979c:	cmp	r0, #0
   197a0:	movne	r0, r4
   197a4:	blne	153a4 <putc_unlocked@plt+0x31ec>
   197a8:	cmp	r4, #0
   197ac:	movwne	r4, #1
   197b0:	mov	r0, r4
   197b4:	pop	{r4, sl, fp, pc}
   197b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   197bc:	add	fp, sp, #24
   197c0:	mov	r5, r0
   197c4:	cmp	r1, #0
   197c8:	beq	19804 <putc_unlocked@plt+0x764c>
   197cc:	ldr	r8, [r5, #4]
   197d0:	ldr	r6, [r5, #124]	; 0x7c
   197d4:	ldrb	r0, [r5, #133]	; 0x85
   197d8:	mov	r1, #0
   197dc:	cmp	r0, #0
   197e0:	bne	19818 <putc_unlocked@plt+0x7660>
   197e4:	mov	r4, #12
   197e8:	mov	r0, #12
   197ec:	bl	142a4 <putc_unlocked@plt+0x20ec>
   197f0:	mvn	r1, #0
   197f4:	mov	r9, #0
   197f8:	cmp	r0, #0
   197fc:	beq	19818 <putc_unlocked@plt+0x7660>
   19800:	b	19a70 <putc_unlocked@plt+0x78b8>
   19804:	ldr	r8, [r5]
   19808:	mov	r0, r5
   1980c:	bl	19a94 <putc_unlocked@plt+0x78dc>
   19810:	mov	r6, r0
   19814:	ldrb	r1, [r5, #133]	; 0x85
   19818:	ldrb	r0, [r5, #132]	; 0x84
   1981c:	cmp	r0, #0
   19820:	beq	19884 <putc_unlocked@plt+0x76cc>
   19824:	and	r0, r6, #61440	; 0xf000
   19828:	sub	r0, r0, #4096	; 0x1000
   1982c:	lsr	r2, r0, #12
   19830:	mov	r9, #0
   19834:	cmp	r2, #11
   19838:	bhi	19924 <putc_unlocked@plt+0x776c>
   1983c:	mov	r4, #8
   19840:	mov	r0, #7
   19844:	add	r3, pc, #0
   19848:	ldr	pc, [r3, r2, lsl #2]
   1984c:	andeq	r9, r1, r0, ror sl
   19850:	andeq	r9, r1, ip, ror r8
   19854:	andeq	r9, r1, r4, lsr #18
   19858:	andeq	r9, r1, r4, lsr r9
   1985c:	andeq	r9, r1, r4, lsr #18
   19860:	andeq	r9, r1, ip, ror r9
   19864:	andeq	r9, r1, r4, lsr #18
   19868:	andeq	r9, r1, r4, lsl #19
   1986c:	andeq	r9, r1, r4, lsr #18
   19870:	strdeq	r9, [r1], -ip
   19874:	andeq	r9, r1, r4, lsr #18
   19878:	andeq	r9, r1, r8, lsl sl
   1987c:	mov	r4, #11
   19880:	b	19a70 <putc_unlocked@plt+0x78b8>
   19884:	ldr	r0, [r5, #120]	; 0x78
   19888:	cmp	r0, #8
   1988c:	cmpne	r0, #5
   19890:	bne	198f0 <putc_unlocked@plt+0x7738>
   19894:	mov	r0, r8
   19898:	bl	11fc0 <strlen@plt>
   1989c:	mov	r5, r0
   198a0:	movw	r0, #41460	; 0xa1f4
   198a4:	movt	r0, #3
   198a8:	ldr	r6, [r0]
   198ac:	mov	r4, #5
   198b0:	mov	r9, #0
   198b4:	cmp	r6, #0
   198b8:	beq	19a70 <putc_unlocked@plt+0x78b8>
   198bc:	add	r7, r8, r5
   198c0:	ldr	r2, [r6]
   198c4:	cmp	r2, r5
   198c8:	bhi	198e0 <putc_unlocked@plt+0x7728>
   198cc:	sub	r0, r7, r2
   198d0:	ldr	r1, [r6, #4]
   198d4:	bl	1abac <putc_unlocked@plt+0x89f4>
   198d8:	cmp	r0, #0
   198dc:	beq	19a20 <putc_unlocked@plt+0x7868>
   198e0:	ldr	r6, [r6, #16]
   198e4:	cmp	r6, #0
   198e8:	bne	198c0 <putc_unlocked@plt+0x7708>
   198ec:	b	19a70 <putc_unlocked@plt+0x78b8>
   198f0:	movw	r2, #33812	; 0x8414
   198f4:	movt	r2, #2
   198f8:	ldr	r0, [r2, r0, lsl #2]
   198fc:	mov	r9, #0
   19900:	cmp	r1, #0
   19904:	bne	1992c <putc_unlocked@plt+0x7774>
   19908:	cmp	r0, #7
   1990c:	bne	1992c <putc_unlocked@plt+0x7774>
   19910:	movw	r0, #37710	; 0x934e
   19914:	movt	r0, #3
   19918:	ldrb	r0, [r0]
   1991c:	cmp	r0, #0
   19920:	beq	19a28 <putc_unlocked@plt+0x7870>
   19924:	mov	r4, #13
   19928:	b	19a70 <putc_unlocked@plt+0x78b8>
   1992c:	mov	r4, r0
   19930:	b	19a70 <putc_unlocked@plt+0x78b8>
   19934:	and	r5, r6, #512	; 0x200
   19938:	mov	r0, #1
   1993c:	eor	r8, r0, r5, lsr #9
   19940:	ands	r6, r6, #2
   19944:	beq	19964 <putc_unlocked@plt+0x77ac>
   19948:	cmp	r8, #0
   1994c:	bne	19964 <putc_unlocked@plt+0x77ac>
   19950:	mov	r4, #20
   19954:	mov	r0, #20
   19958:	bl	142a4 <putc_unlocked@plt+0x20ec>
   1995c:	cmp	r0, #0
   19960:	bne	19a70 <putc_unlocked@plt+0x78b8>
   19964:	cmp	r6, #0
   19968:	bne	19a40 <putc_unlocked@plt+0x7888>
   1996c:	mov	r4, #6
   19970:	cmp	r5, #0
   19974:	bne	19a5c <putc_unlocked@plt+0x78a4>
   19978:	b	19a70 <putc_unlocked@plt+0x78b8>
   1997c:	mov	r4, #10
   19980:	b	19a70 <putc_unlocked@plt+0x78b8>
   19984:	tst	r6, #2048	; 0x800
   19988:	beq	199a0 <putc_unlocked@plt+0x77e8>
   1998c:	mov	r4, #16
   19990:	mov	r0, #16
   19994:	bl	142a4 <putc_unlocked@plt+0x20ec>
   19998:	cmp	r0, #0
   1999c:	bne	19a70 <putc_unlocked@plt+0x78b8>
   199a0:	tst	r6, #1024	; 0x400
   199a4:	beq	199bc <putc_unlocked@plt+0x7804>
   199a8:	mov	r4, #17
   199ac:	mov	r0, #17
   199b0:	bl	142a4 <putc_unlocked@plt+0x20ec>
   199b4:	cmp	r0, #0
   199b8:	bne	19a70 <putc_unlocked@plt+0x78b8>
   199bc:	mov	r4, #21
   199c0:	mov	r0, #21
   199c4:	bl	142a4 <putc_unlocked@plt+0x20ec>
   199c8:	cmp	r0, #0
   199cc:	ldrbne	r0, [r5, #140]	; 0x8c
   199d0:	cmpne	r0, #0
   199d4:	bne	19a70 <putc_unlocked@plt+0x78b8>
   199d8:	tst	r6, #73	; 0x49
   199dc:	beq	199f4 <putc_unlocked@plt+0x783c>
   199e0:	mov	r4, #14
   199e4:	mov	r0, #14
   199e8:	bl	142a4 <putc_unlocked@plt+0x20ec>
   199ec:	cmp	r0, #0
   199f0:	bne	19a70 <putc_unlocked@plt+0x78b8>
   199f4:	ldr	r0, [r5, #36]	; 0x24
   199f8:	cmp	r0, #2
   199fc:	bcc	19894 <putc_unlocked@plt+0x76dc>
   19a00:	mov	r4, #22
   19a04:	mov	r0, #22
   19a08:	bl	142a4 <putc_unlocked@plt+0x20ec>
   19a0c:	cmp	r0, #0
   19a10:	beq	19894 <putc_unlocked@plt+0x76dc>
   19a14:	b	19a70 <putc_unlocked@plt+0x78b8>
   19a18:	mov	r4, #9
   19a1c:	b	19a70 <putc_unlocked@plt+0x78b8>
   19a20:	mov	r9, r6
   19a24:	b	19a70 <putc_unlocked@plt+0x78b8>
   19a28:	mov	r0, #13
   19a2c:	bl	142a4 <putc_unlocked@plt+0x20ec>
   19a30:	mov	r4, #7
   19a34:	cmp	r0, #0
   19a38:	movne	r4, #13
   19a3c:	b	19a70 <putc_unlocked@plt+0x78b8>
   19a40:	mov	r0, #19
   19a44:	bl	142a4 <putc_unlocked@plt+0x20ec>
   19a48:	mov	r4, #6
   19a4c:	cmp	r0, #0
   19a50:	movwne	r4, #19
   19a54:	orrs	r0, r0, r8
   19a58:	bne	19a70 <putc_unlocked@plt+0x78b8>
   19a5c:	mov	r0, #18
   19a60:	bl	142a4 <putc_unlocked@plt+0x20ec>
   19a64:	mov	r4, #6
   19a68:	cmp	r0, #0
   19a6c:	movwne	r4, #18
   19a70:	movw	r1, #37344	; 0x91e0
   19a74:	movt	r1, #3
   19a78:	add	r0, r9, #8
   19a7c:	cmp	r9, #0
   19a80:	addeq	r0, r1, r4, lsl #3
   19a84:	ldr	r1, [r0, #4]
   19a88:	cmp	r1, #0
   19a8c:	moveq	r0, r1
   19a90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19a94:	movw	r1, #37710	; 0x934e
   19a98:	movt	r1, #3
   19a9c:	ldrb	r1, [r1]
   19aa0:	cmp	r1, #1
   19aa4:	bne	19abc <putc_unlocked@plt+0x7904>
   19aa8:	ldrb	r1, [r0, #133]	; 0x85
   19aac:	cmp	r1, #0
   19ab0:	addne	r0, r0, #124	; 0x7c
   19ab4:	ldrne	r0, [r0]
   19ab8:	bxne	lr
   19abc:	add	r0, r0, #32
   19ac0:	ldr	r0, [r0]
   19ac4:	bx	lr
   19ac8:	mov	r3, r0
   19acc:	cmp	r0, #0
   19ad0:	beq	19af0 <putc_unlocked@plt+0x7938>
   19ad4:	and	ip, r1, #61440	; 0xf000
   19ad8:	cmp	ip, #32768	; 0x8000
   19adc:	beq	19b0c <putc_unlocked@plt+0x7954>
   19ae0:	mov	r0, #47	; 0x2f
   19ae4:	cmp	ip, #16384	; 0x4000
   19ae8:	beq	19b00 <putc_unlocked@plt+0x7948>
   19aec:	b	19b34 <putc_unlocked@plt+0x797c>
   19af0:	mov	r0, #47	; 0x2f
   19af4:	cmp	r2, #3
   19af8:	cmpne	r2, #9
   19afc:	bne	19b04 <putc_unlocked@plt+0x794c>
   19b00:	bx	lr
   19b04:	cmp	r2, #5
   19b08:	bne	19b34 <putc_unlocked@plt+0x797c>
   19b0c:	movw	r0, #37724	; 0x935c
   19b10:	movt	r0, #3
   19b14:	ldr	r0, [r0]
   19b18:	cmp	r3, #0
   19b1c:	movwne	r3, #42	; 0x2a
   19b20:	cmp	r0, #3
   19b24:	movne	r3, #0
   19b28:	ands	r0, r1, #73	; 0x49
   19b2c:	movne	r0, r3
   19b30:	bx	lr
   19b34:	movw	r0, #37724	; 0x935c
   19b38:	movt	r0, #3
   19b3c:	ldr	ip, [r0]
   19b40:	mov	r0, #0
   19b44:	cmp	ip, #1
   19b48:	bxeq	lr
   19b4c:	cmp	r3, #0
   19b50:	beq	19b7c <putc_unlocked@plt+0x79c4>
   19b54:	and	r1, r1, #61440	; 0xf000
   19b58:	mov	r0, #64	; 0x40
   19b5c:	cmp	r1, #40960	; 0xa000
   19b60:	beq	19b00 <putc_unlocked@plt+0x7948>
   19b64:	mov	r0, #124	; 0x7c
   19b68:	cmp	r1, #4096	; 0x1000
   19b6c:	movne	r0, #61	; 0x3d
   19b70:	cmpne	r1, #49152	; 0xc000
   19b74:	beq	19b00 <putc_unlocked@plt+0x7948>
   19b78:	b	19ba4 <putc_unlocked@plt+0x79ec>
   19b7c:	cmp	r2, #1
   19b80:	moveq	r0, #124	; 0x7c
   19b84:	bxeq	lr
   19b88:	cmp	r2, #6
   19b8c:	moveq	r0, #64	; 0x40
   19b90:	bxeq	lr
   19b94:	cmp	r2, #7
   19b98:	bne	19ba4 <putc_unlocked@plt+0x79ec>
   19b9c:	mov	r0, #61	; 0x3d
   19ba0:	bx	lr
   19ba4:	mov	r0, #0
   19ba8:	bx	lr
   19bac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19bb0:	add	fp, sp, #24
   19bb4:	sub	sp, sp, #672	; 0x2a0
   19bb8:	mov	r4, r0
   19bbc:	movw	r0, #38344	; 0x95c8
   19bc0:	movt	r0, #3
   19bc4:	ldrb	r0, [r0]
   19bc8:	mov	r5, #0
   19bcc:	cmp	r0, #1
   19bd0:	bne	19c0c <putc_unlocked@plt+0x7a54>
   19bd4:	movw	r0, #37712	; 0x9350
   19bd8:	movt	r0, #3
   19bdc:	ldr	r0, [r0]
   19be0:	cmp	r0, #4
   19be4:	bne	19bfc <putc_unlocked@plt+0x7a44>
   19be8:	ldrd	r0, [r4, #112]	; 0x70
   19bec:	add	r2, sp, #20
   19bf0:	bl	1dc6c <putc_unlocked@plt+0xbab4>
   19bf4:	bl	11fc0 <strlen@plt>
   19bf8:	b	19c08 <putc_unlocked@plt+0x7a50>
   19bfc:	movw	r0, #41476	; 0xa204
   19c00:	movt	r0, #3
   19c04:	ldr	r0, [r0]
   19c08:	add	r5, r0, #1
   19c0c:	movw	r0, #37789	; 0x939d
   19c10:	movt	r0, #3
   19c14:	ldrb	r0, [r0]
   19c18:	cmp	r0, #1
   19c1c:	bne	19ca8 <putc_unlocked@plt+0x7af0>
   19c20:	movw	r0, #37712	; 0x9350
   19c24:	movt	r0, #3
   19c28:	ldr	r0, [r0]
   19c2c:	cmp	r0, #4
   19c30:	bne	19c84 <putc_unlocked@plt+0x7acc>
   19c34:	ldrb	r0, [r4, #132]	; 0x84
   19c38:	cmp	r0, #0
   19c3c:	beq	19c94 <putc_unlocked@plt+0x7adc>
   19c40:	ldr	r0, [r4, #80]	; 0x50
   19c44:	ldr	r9, [r4, #84]	; 0x54
   19c48:	movw	r2, #38324	; 0x95b4
   19c4c:	movt	r2, #3
   19c50:	ldr	r3, [r2]
   19c54:	movw	r2, #38336	; 0x95c0
   19c58:	movt	r2, #3
   19c5c:	ldm	r2, {r2, r7}
   19c60:	mov	ip, #0
   19c64:	mov	r1, #512	; 0x200
   19c68:	stm	sp, {r1, ip}
   19c6c:	str	r2, [sp, #8]
   19c70:	str	r7, [sp, #12]
   19c74:	add	r2, sp, #20
   19c78:	mov	r1, r9
   19c7c:	bl	1cd50 <putc_unlocked@plt+0xab98>
   19c80:	b	19c9c <putc_unlocked@plt+0x7ae4>
   19c84:	movw	r0, #41480	; 0xa208
   19c88:	movt	r0, #3
   19c8c:	ldr	r0, [r0]
   19c90:	b	19ca0 <putc_unlocked@plt+0x7ae8>
   19c94:	movw	r0, #26906	; 0x691a
   19c98:	movt	r0, #2
   19c9c:	bl	11fc0 <strlen@plt>
   19ca0:	add	r0, r5, r0
   19ca4:	add	r5, r0, #1
   19ca8:	movw	r0, #37788	; 0x939c
   19cac:	movt	r0, #3
   19cb0:	ldrb	r0, [r0]
   19cb4:	cmp	r0, #1
   19cb8:	bne	19cf0 <putc_unlocked@plt+0x7b38>
   19cbc:	movw	r0, #37712	; 0x9350
   19cc0:	movt	r0, #3
   19cc4:	ldr	r0, [r0]
   19cc8:	cmp	r0, #4
   19ccc:	bne	19cdc <putc_unlocked@plt+0x7b24>
   19cd0:	ldr	r0, [r4, #128]	; 0x80
   19cd4:	bl	11fc0 <strlen@plt>
   19cd8:	b	19ce8 <putc_unlocked@plt+0x7b30>
   19cdc:	movw	r0, #41500	; 0xa21c
   19ce0:	movt	r0, #3
   19ce4:	ldr	r0, [r0]
   19ce8:	add	r0, r5, r0
   19cec:	add	r5, r0, #1
   19cf0:	mov	r0, r4
   19cf4:	bl	18148 <putc_unlocked@plt+0x5f90>
   19cf8:	add	r5, r0, r5
   19cfc:	movw	r0, #37724	; 0x935c
   19d00:	movt	r0, #3
   19d04:	ldr	r0, [r0]
   19d08:	cmp	r0, #0
   19d0c:	beq	19d28 <putc_unlocked@plt+0x7b70>
   19d10:	ldr	r1, [r4, #32]
   19d14:	ldr	r2, [r4, #120]	; 0x78
   19d18:	ldrb	r0, [r4, #132]	; 0x84
   19d1c:	bl	19ac8 <putc_unlocked@plt+0x7910>
   19d20:	cmp	r0, #0
   19d24:	addne	r5, r5, #1
   19d28:	mov	r0, r5
   19d2c:	sub	sp, fp, #24
   19d30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d38:	add	fp, sp, #28
   19d3c:	sub	sp, sp, #4
   19d40:	mov	r4, r0
   19d44:	movw	r0, #38364	; 0x95dc
   19d48:	movt	r0, #3
   19d4c:	ldr	r0, [r0]
   19d50:	movw	r6, #37900	; 0x940c
   19d54:	movt	r6, #3
   19d58:	ldr	r1, [r6]
   19d5c:	cmp	r0, r1
   19d60:	mov	r5, r1
   19d64:	movcc	r5, r0
   19d68:	cmp	r0, #0
   19d6c:	moveq	r5, r1
   19d70:	mov	r0, r5
   19d74:	bl	19f40 <putc_unlocked@plt+0x7d88>
   19d78:	ldr	r0, [r6]
   19d7c:	cmp	r0, #0
   19d80:	beq	19e88 <putc_unlocked@plt+0x7cd0>
   19d84:	mov	r9, #0
   19d88:	movw	r0, #41468	; 0xa1fc
   19d8c:	movt	r0, #3
   19d90:	ldr	r0, [r0]
   19d94:	ldr	r0, [r0, r9, lsl #2]
   19d98:	bl	19bac <putc_unlocked@plt+0x79f4>
   19d9c:	cmp	r5, #0
   19da0:	beq	19e70 <putc_unlocked@plt+0x7cb8>
   19da4:	movw	r1, #38360	; 0x95d8
   19da8:	movt	r1, #3
   19dac:	ldr	r1, [r1]
   19db0:	str	r1, [sp]
   19db4:	movw	r1, #37900	; 0x940c
   19db8:	movt	r1, #3
   19dbc:	ldr	lr, [r1]
   19dc0:	movw	r1, #41944	; 0xa3d8
   19dc4:	movt	r1, #3
   19dc8:	ldr	r1, [r1]
   19dcc:	add	r3, r1, #4
   19dd0:	mov	r6, #0
   19dd4:	ldrb	r1, [r3, #-4]
   19dd8:	cmp	r1, #0
   19ddc:	beq	19e60 <putc_unlocked@plt+0x7ca8>
   19de0:	cmp	r4, #0
   19de4:	beq	19dfc <putc_unlocked@plt+0x7c44>
   19de8:	add	r1, lr, r6
   19dec:	add	r2, r6, #1
   19df0:	udiv	r1, r1, r2
   19df4:	udiv	r1, r9, r1
   19df8:	b	19e08 <putc_unlocked@plt+0x7c50>
   19dfc:	add	r1, r6, #1
   19e00:	udiv	r2, r9, r1
   19e04:	mls	r1, r2, r1, r9
   19e08:	cmp	r6, r1
   19e0c:	mov	r2, r0
   19e10:	addne	r2, r2, #2
   19e14:	ldr	sl, [r3, #4]
   19e18:	ldr	r8, [sl, r1, lsl #2]
   19e1c:	cmp	r2, r8
   19e20:	bls	19e60 <putc_unlocked@plt+0x7ca8>
   19e24:	mov	ip, r5
   19e28:	sub	r5, r2, r8
   19e2c:	mov	r7, r4
   19e30:	ldr	r4, [r3]
   19e34:	add	r4, r5, r4
   19e38:	mov	r5, ip
   19e3c:	str	r4, [r3]
   19e40:	mov	r4, r7
   19e44:	str	r2, [sl, r1, lsl #2]
   19e48:	ldr	r1, [r3]
   19e4c:	ldr	r2, [sp]
   19e50:	cmp	r1, r2
   19e54:	mov	r1, #0
   19e58:	movwcc	r1, #1
   19e5c:	strb	r1, [r3, #-4]
   19e60:	add	r3, r3, #12
   19e64:	add	r6, r6, #1
   19e68:	cmp	r5, r6
   19e6c:	bne	19dd4 <putc_unlocked@plt+0x7c1c>
   19e70:	movw	r0, #37900	; 0x940c
   19e74:	movt	r0, #3
   19e78:	ldr	r0, [r0]
   19e7c:	add	r9, r9, #1
   19e80:	cmp	r9, r0
   19e84:	bcc	19d88 <putc_unlocked@plt+0x7bd0>
   19e88:	movw	r0, #41944	; 0xa3d8
   19e8c:	movt	r0, #3
   19e90:	ldr	r0, [r0]
   19e94:	add	r1, r5, r5, lsl #1
   19e98:	add	r0, r0, r1, lsl #2
   19e9c:	sub	r1, r0, #12
   19ea0:	mov	r0, r5
   19ea4:	cmp	r5, #2
   19ea8:	bcc	19ebc <putc_unlocked@plt+0x7d04>
   19eac:	sub	r5, r0, #1
   19eb0:	ldrb	r2, [r1], #-12
   19eb4:	cmp	r2, #0
   19eb8:	beq	19ea0 <putc_unlocked@plt+0x7ce8>
   19ebc:	sub	sp, fp, #28
   19ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ec4:	push	{r4, r5, r6, sl, fp, lr}
   19ec8:	add	fp, sp, #16
   19ecc:	cmp	r0, r1
   19ed0:	popcs	{r4, r5, r6, sl, fp, pc}
   19ed4:	mov	r4, r1
   19ed8:	mov	r5, r0
   19edc:	movw	r6, #37704	; 0x9348
   19ee0:	movt	r6, #3
   19ee4:	ldr	r0, [r6]
   19ee8:	cmp	r0, #0
   19eec:	beq	19f24 <putc_unlocked@plt+0x7d6c>
   19ef0:	udiv	r1, r4, r0
   19ef4:	add	r2, r5, #1
   19ef8:	udiv	r0, r2, r0
   19efc:	cmp	r1, r0
   19f00:	bls	19f24 <putc_unlocked@plt+0x7d6c>
   19f04:	mov	r0, #9
   19f08:	bl	12188 <putchar_unlocked@plt>
   19f0c:	ldr	r0, [r6]
   19f10:	udiv	r1, r5, r0
   19f14:	mul	r1, r1, r0
   19f18:	sub	r1, r1, r5
   19f1c:	add	r0, r0, r1
   19f20:	b	19f30 <putc_unlocked@plt+0x7d78>
   19f24:	mov	r0, #32
   19f28:	bl	12188 <putchar_unlocked@plt>
   19f2c:	mov	r0, #1
   19f30:	add	r5, r0, r5
   19f34:	cmp	r5, r4
   19f38:	bcc	19ee4 <putc_unlocked@plt+0x7d2c>
   19f3c:	pop	{r4, r5, r6, sl, fp, pc}
   19f40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19f44:	add	fp, sp, #24
   19f48:	mov	r8, r0
   19f4c:	movw	r5, #41948	; 0xa3dc
   19f50:	movt	r5, #3
   19f54:	ldr	r0, [r5]
   19f58:	cmp	r0, r8
   19f5c:	bcs	1a01c <putc_unlocked@plt+0x7e64>
   19f60:	movw	r6, #41944	; 0xa3d8
   19f64:	movt	r6, #3
   19f68:	ldr	r0, [r6]
   19f6c:	movw	r7, #38364	; 0x95dc
   19f70:	movt	r7, #3
   19f74:	ldr	r1, [r7]
   19f78:	cmp	r1, #0
   19f7c:	beq	19fa0 <putc_unlocked@plt+0x7de8>
   19f80:	lsr	r2, r1, #1
   19f84:	cmp	r2, r8
   19f88:	bhi	19fa0 <putc_unlocked@plt+0x7de8>
   19f8c:	mov	r2, #12
   19f90:	bl	22d84 <_obstack_memory_used@@Base+0x29bc>
   19f94:	str	r0, [r6]
   19f98:	ldr	r7, [r7]
   19f9c:	b	19fb4 <putc_unlocked@plt+0x7dfc>
   19fa0:	mov	r1, r8
   19fa4:	mov	r2, #24
   19fa8:	bl	22d84 <_obstack_memory_used@@Base+0x29bc>
   19fac:	str	r0, [r6]
   19fb0:	lsl	r7, r8, #1
   19fb4:	ldr	r1, [r5]
   19fb8:	add	r0, r7, r1
   19fbc:	add	r0, r0, #1
   19fc0:	cmp	r0, r7
   19fc4:	bcc	1a088 <putc_unlocked@plt+0x7ed0>
   19fc8:	sub	r2, r7, r1
   19fcc:	mul	r1, r0, r2
   19fd0:	udiv	r2, r1, r2
   19fd4:	cmp	r2, r0
   19fd8:	bne	1a088 <putc_unlocked@plt+0x7ed0>
   19fdc:	lsr	r0, r1, #1
   19fe0:	mov	r1, #4
   19fe4:	bl	22e60 <_obstack_memory_used@@Base+0x2a98>
   19fe8:	ldr	r1, [r5]
   19fec:	cmp	r1, r7
   19ff0:	bcs	1a018 <putc_unlocked@plt+0x7e60>
   19ff4:	ldr	r2, [r6]
   19ff8:	add	r3, r1, r1, lsl #1
   19ffc:	add	r2, r2, r3, lsl #2
   1a000:	add	r2, r2, #8
   1a004:	str	r0, [r2], #12
   1a008:	add	r1, r1, #1
   1a00c:	add	r0, r0, r1, lsl #2
   1a010:	cmp	r7, r1
   1a014:	bne	1a004 <putc_unlocked@plt+0x7e4c>
   1a018:	str	r7, [r5]
   1a01c:	cmp	r8, #0
   1a020:	beq	1a084 <putc_unlocked@plt+0x7ecc>
   1a024:	movw	r0, #41944	; 0xa3d8
   1a028:	movt	r0, #3
   1a02c:	ldr	r4, [r0]
   1a030:	mov	r1, #0
   1a034:	mov	r2, #1
   1a038:	mov	r3, #3
   1a03c:	mov	r7, #1
   1a040:	b	1a050 <putc_unlocked@plt+0x7e98>
   1a044:	add	r7, r7, #1
   1a048:	cmp	r1, r8
   1a04c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a050:	add	r6, r1, r1, lsl #1
   1a054:	mov	r0, r4
   1a058:	strb	r2, [r0, r6, lsl #2]!
   1a05c:	add	r1, r1, #1
   1a060:	add	r6, r1, r1, lsl #1
   1a064:	str	r6, [r0, #4]
   1a068:	ldr	r6, [r0, #8]
   1a06c:	mov	r5, #0
   1a070:	str	r3, [r6, r5, lsl #2]
   1a074:	add	r5, r5, #1
   1a078:	cmp	r7, r5
   1a07c:	bne	1a070 <putc_unlocked@plt+0x7eb8>
   1a080:	b	1a044 <putc_unlocked@plt+0x7e8c>
   1a084:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a088:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   1a08c:	push	{r4, r5, fp, lr}
   1a090:	add	fp, sp, #8
   1a094:	sub	sp, sp, #8
   1a098:	mov	r5, r1
   1a09c:	mov	r4, r0
   1a0a0:	cmp	r2, #0
   1a0a4:	beq	1a0cc <putc_unlocked@plt+0x7f14>
   1a0a8:	movw	r0, #38345	; 0x95c9
   1a0ac:	movt	r0, #3
   1a0b0:	ldrb	r1, [r0]
   1a0b4:	mov	r0, #0
   1a0b8:	cmp	r1, #0
   1a0bc:	bne	1a0d4 <putc_unlocked@plt+0x7f1c>
   1a0c0:	mov	r0, r4
   1a0c4:	bl	1d864 <putc_unlocked@plt+0xb6ac>
   1a0c8:	b	1a0d4 <putc_unlocked@plt+0x7f1c>
   1a0cc:	movw	r0, #26906	; 0x691a
   1a0d0:	movt	r0, #2
   1a0d4:	str	r5, [sp]
   1a0d8:	mov	r2, r4
   1a0dc:	mov	r3, #0
   1a0e0:	bl	1a14c <putc_unlocked@plt+0x7f94>
   1a0e4:	sub	sp, fp, #8
   1a0e8:	pop	{r4, r5, fp, pc}
   1a0ec:	push	{r4, r5, fp, lr}
   1a0f0:	add	fp, sp, #8
   1a0f4:	sub	sp, sp, #8
   1a0f8:	mov	r5, r1
   1a0fc:	mov	r4, r0
   1a100:	cmp	r2, #0
   1a104:	beq	1a12c <putc_unlocked@plt+0x7f74>
   1a108:	movw	r0, #38345	; 0x95c9
   1a10c:	movt	r0, #3
   1a110:	ldrb	r1, [r0]
   1a114:	mov	r0, #0
   1a118:	cmp	r1, #0
   1a11c:	bne	1a134 <putc_unlocked@plt+0x7f7c>
   1a120:	mov	r0, r4
   1a124:	bl	1da08 <putc_unlocked@plt+0xb850>
   1a128:	b	1a134 <putc_unlocked@plt+0x7f7c>
   1a12c:	movw	r0, #26906	; 0x691a
   1a130:	movt	r0, #2
   1a134:	str	r5, [sp]
   1a138:	mov	r2, r4
   1a13c:	mov	r3, #0
   1a140:	bl	1a14c <putc_unlocked@plt+0x7f94>
   1a144:	sub	sp, fp, #8
   1a148:	pop	{r4, r5, fp, pc}
   1a14c:	push	{r4, r5, r6, sl, fp, lr}
   1a150:	add	fp, sp, #16
   1a154:	sub	sp, sp, #8
   1a158:	ldr	r4, [fp, #8]
   1a15c:	cmp	r0, #0
   1a160:	beq	1a1a4 <putc_unlocked@plt+0x7fec>
   1a164:	mov	r5, r0
   1a168:	mov	r1, #0
   1a16c:	bl	1e198 <putc_unlocked@plt+0xbfe0>
   1a170:	mov	r6, r0
   1a174:	mov	r0, r5
   1a178:	bl	16ee4 <putc_unlocked@plt+0x4d2c>
   1a17c:	sub	r0, r4, r6
   1a180:	mvn	r4, #0
   1a184:	cmp	r0, #0
   1a188:	mvngt	r4, r0
   1a18c:	mov	r0, #32
   1a190:	bl	153a4 <putc_unlocked@plt+0x31ec>
   1a194:	adds	r4, r4, #1
   1a198:	bne	1a18c <putc_unlocked@plt+0x7fd4>
   1a19c:	sub	sp, fp, #16
   1a1a0:	pop	{r4, r5, r6, sl, fp, pc}
   1a1a4:	stm	sp, {r2, r3}
   1a1a8:	movw	r1, #27412	; 0x6b14
   1a1ac:	movt	r1, #2
   1a1b0:	mov	r0, #1
   1a1b4:	mov	r2, r4
   1a1b8:	bl	12014 <__printf_chk@plt>
   1a1bc:	movw	r1, #38176	; 0x9520
   1a1c0:	movt	r1, #3
   1a1c4:	ldrd	r2, [r1]
   1a1c8:	adds	r2, r2, r0
   1a1cc:	adc	r3, r3, r0, asr #31
   1a1d0:	strd	r2, [r1]
   1a1d4:	sub	sp, fp, #16
   1a1d8:	pop	{r4, r5, r6, sl, fp, pc}
   1a1dc:	push	{fp, lr}
   1a1e0:	mov	fp, sp
   1a1e4:	sub	sp, sp, #8
   1a1e8:	mov	ip, r2
   1a1ec:	movw	r2, #41452	; 0xa1ec
   1a1f0:	movt	r2, #3
   1a1f4:	ldrb	r2, [r2]
   1a1f8:	ldr	lr, [fp, #8]
   1a1fc:	cmp	r2, #1
   1a200:	bne	1a220 <putc_unlocked@plt+0x8068>
   1a204:	add	r1, r1, r1, lsl #1
   1a208:	movw	r2, #38380	; 0x95ec
   1a20c:	movt	r2, #3
   1a210:	add	r1, r2, r1, lsl #9
   1a214:	ldr	r2, [ip, #16]
   1a218:	add	r2, r1, r2, lsl #7
   1a21c:	b	1a22c <putc_unlocked@plt+0x8074>
   1a220:	movw	r2, #37544	; 0x92a8
   1a224:	movt	r2, #3
   1a228:	ldr	r2, [r2, r1, lsl #2]
   1a22c:	stm	sp, {r3, lr}
   1a230:	movw	r1, #1001	; 0x3e9
   1a234:	mov	r3, ip
   1a238:	bl	1e824 <putc_unlocked@plt+0xc66c>
   1a23c:	mov	sp, fp
   1a240:	pop	{fp, pc}
   1a244:	push	{r4, r5, r6, sl, fp, lr}
   1a248:	add	fp, sp, #16
   1a24c:	sub	sp, sp, #1056	; 0x420
   1a250:	movw	r4, #37556	; 0x92b4
   1a254:	movt	r4, #3
   1a258:	ldr	r0, [r4]
   1a25c:	cmn	r0, #1
   1a260:	bgt	1a2d4 <putc_unlocked@plt+0x811c>
   1a264:	mov	r5, #0
   1a268:	str	r5, [fp, #-20]	; 0xffffffec
   1a26c:	movw	r6, #37780	; 0x9394
   1a270:	movt	r6, #3
   1a274:	ldr	r0, [r6]
   1a278:	sub	r1, fp, #20
   1a27c:	sub	r2, fp, #64	; 0x40
   1a280:	bl	224b0 <_obstack_memory_used@@Base+0x20e8>
   1a284:	cmp	r0, #0
   1a288:	beq	1a2c4 <putc_unlocked@plt+0x810c>
   1a28c:	ldr	r3, [r6]
   1a290:	str	r5, [sp]
   1a294:	add	r0, sp, #7
   1a298:	sub	r2, fp, #64	; 0x40
   1a29c:	mov	r1, #0
   1a2a0:	bl	1a1dc <putc_unlocked@plt+0x8024>
   1a2a4:	cmp	r0, #0
   1a2a8:	beq	1a2c4 <putc_unlocked@plt+0x810c>
   1a2ac:	mov	r1, r0
   1a2b0:	add	r0, sp, #7
   1a2b4:	mov	r2, #0
   1a2b8:	bl	1e1c0 <putc_unlocked@plt+0xc008>
   1a2bc:	str	r0, [r4]
   1a2c0:	b	1a2c8 <putc_unlocked@plt+0x8110>
   1a2c4:	ldr	r0, [r4]
   1a2c8:	cmn	r0, #1
   1a2cc:	movle	r0, #0
   1a2d0:	strle	r0, [r4]
   1a2d4:	ldr	r0, [r4]
   1a2d8:	sub	sp, fp, #16
   1a2dc:	pop	{r4, r5, r6, sl, fp, pc}
   1a2e0:	mov	r2, r1
   1a2e4:	asr	r1, r0, #31
   1a2e8:	b	1dbac <putc_unlocked@plt+0xb9f4>
   1a2ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a2f0:	add	fp, sp, #24
   1a2f4:	sub	sp, sp, #128	; 0x80
   1a2f8:	mov	r4, r1
   1a2fc:	mov	r8, r0
   1a300:	cmp	r1, #0
   1a304:	beq	1a318 <putc_unlocked@plt+0x8160>
   1a308:	movw	r6, #1025	; 0x401
   1a30c:	cmp	r4, #1024	; 0x400
   1a310:	addls	r6, r4, #1
   1a314:	b	1a31c <putc_unlocked@plt+0x8164>
   1a318:	mov	r6, #128	; 0x80
   1a31c:	mov	r9, sp
   1a320:	cmp	r4, #0
   1a324:	beq	1a364 <putc_unlocked@plt+0x81ac>
   1a328:	b	1a374 <putc_unlocked@plt+0x81bc>
   1a32c:	cmp	r0, r6
   1a330:	bcc	1a3b4 <putc_unlocked@plt+0x81fc>
   1a334:	mov	r0, r5
   1a338:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1a33c:	cmn	r6, #-1073741823	; 0xc0000001
   1a340:	bhi	1a34c <putc_unlocked@plt+0x8194>
   1a344:	lsl	r0, r6, #1
   1a348:	b	1a358 <putc_unlocked@plt+0x81a0>
   1a34c:	mvn	r0, #-2147483648	; 0x80000000
   1a350:	cmn	r6, #-2147483647	; 0x80000001
   1a354:	bcs	1a3ec <putc_unlocked@plt+0x8234>
   1a358:	mov	r6, r0
   1a35c:	cmp	r4, #0
   1a360:	bne	1a374 <putc_unlocked@plt+0x81bc>
   1a364:	mov	r5, #0
   1a368:	cmp	r6, #128	; 0x80
   1a36c:	mov	r7, r9
   1a370:	beq	1a38c <putc_unlocked@plt+0x81d4>
   1a374:	mov	r0, r6
   1a378:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1a37c:	mov	r7, r0
   1a380:	cmp	r0, #0
   1a384:	mov	r5, r0
   1a388:	beq	1a3ec <putc_unlocked@plt+0x8234>
   1a38c:	mov	r0, r8
   1a390:	mov	r1, r7
   1a394:	mov	r2, r6
   1a398:	bl	11e40 <readlink@plt>
   1a39c:	cmn	r0, #1
   1a3a0:	bgt	1a32c <putc_unlocked@plt+0x8174>
   1a3a4:	mov	r0, r5
   1a3a8:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1a3ac:	mov	r4, #0
   1a3b0:	b	1a424 <putc_unlocked@plt+0x826c>
   1a3b4:	mov	r4, #0
   1a3b8:	strb	r4, [r7, r0]
   1a3bc:	add	r8, r0, #1
   1a3c0:	cmp	r5, #0
   1a3c4:	beq	1a400 <putc_unlocked@plt+0x8248>
   1a3c8:	cmp	r8, r6
   1a3cc:	bcs	1a420 <putc_unlocked@plt+0x8268>
   1a3d0:	mov	r0, r5
   1a3d4:	mov	r1, r8
   1a3d8:	bl	23a94 <_obstack_memory_used@@Base+0x36cc>
   1a3dc:	mov	r4, r0
   1a3e0:	cmp	r0, #0
   1a3e4:	moveq	r4, r5
   1a3e8:	b	1a424 <putc_unlocked@plt+0x826c>
   1a3ec:	bl	11fe4 <__errno_location@plt>
   1a3f0:	mov	r1, #12
   1a3f4:	str	r1, [r0]
   1a3f8:	mov	r4, #0
   1a3fc:	b	1a424 <putc_unlocked@plt+0x826c>
   1a400:	mov	r0, r8
   1a404:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1a408:	cmp	r0, #0
   1a40c:	beq	1a424 <putc_unlocked@plt+0x826c>
   1a410:	mov	r5, r0
   1a414:	mov	r1, r7
   1a418:	mov	r2, r8
   1a41c:	bl	11d74 <memcpy@plt>
   1a420:	mov	r4, r5
   1a424:	mov	r0, r4
   1a428:	sub	sp, fp, #24
   1a42c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a430:	mov	r0, #1
   1a434:	b	15a08 <putc_unlocked@plt+0x3850>
   1a438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a43c:	add	fp, sp, #28
   1a440:	sub	sp, sp, #12
   1a444:	mov	r4, r3
   1a448:	mov	r6, r2
   1a44c:	mov	r5, r1
   1a450:	mov	sl, r0
   1a454:	bl	11fc0 <strlen@plt>
   1a458:	ldr	r8, [r5]
   1a45c:	cmp	r8, #0
   1a460:	beq	1a51c <putc_unlocked@plt+0x8364>
   1a464:	mov	r7, r0
   1a468:	add	r9, r5, #4
   1a46c:	mov	r0, #0
   1a470:	str	r0, [sp]
   1a474:	mvn	r0, #0
   1a478:	str	r0, [sp, #8]
   1a47c:	str	r6, [sp, #4]
   1a480:	mov	r5, #0
   1a484:	mov	r0, r8
   1a488:	mov	r1, sl
   1a48c:	mov	r2, r7
   1a490:	bl	12140 <strncmp@plt>
   1a494:	cmp	r0, #0
   1a498:	bne	1a4f0 <putc_unlocked@plt+0x8338>
   1a49c:	mov	r0, r8
   1a4a0:	bl	11fc0 <strlen@plt>
   1a4a4:	cmp	r0, r7
   1a4a8:	beq	1a520 <putc_unlocked@plt+0x8368>
   1a4ac:	ldr	r0, [sp, #8]
   1a4b0:	cmn	r0, #1
   1a4b4:	beq	1a4ec <putc_unlocked@plt+0x8334>
   1a4b8:	ldr	r0, [sp, #4]
   1a4bc:	cmp	r0, #0
   1a4c0:	beq	1a4e0 <putc_unlocked@plt+0x8328>
   1a4c4:	ldr	r1, [sp, #8]
   1a4c8:	mla	r0, r1, r4, r0
   1a4cc:	mov	r1, r6
   1a4d0:	mov	r2, r4
   1a4d4:	bl	11da4 <memcmp@plt>
   1a4d8:	cmp	r0, #0
   1a4dc:	beq	1a4f0 <putc_unlocked@plt+0x8338>
   1a4e0:	mov	r0, #1
   1a4e4:	str	r0, [sp]
   1a4e8:	b	1a4f0 <putc_unlocked@plt+0x8338>
   1a4ec:	str	r5, [sp, #8]
   1a4f0:	add	r6, r6, r4
   1a4f4:	ldr	r8, [r9, r5, lsl #2]
   1a4f8:	add	r5, r5, #1
   1a4fc:	cmp	r8, #0
   1a500:	bne	1a484 <putc_unlocked@plt+0x82cc>
   1a504:	ldr	r0, [sp]
   1a508:	tst	r0, #1
   1a50c:	ldr	r0, [sp, #8]
   1a510:	mvnne	r0, #1
   1a514:	sub	sp, fp, #28
   1a518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a51c:	mvn	r5, #0
   1a520:	mov	r0, r5
   1a524:	sub	sp, fp, #28
   1a528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a52c:	push	{r4, r5, r6, r7, fp, lr}
   1a530:	add	fp, sp, #16
   1a534:	mov	r5, r0
   1a538:	ldr	r0, [r1]
   1a53c:	mvn	r4, #0
   1a540:	cmp	r0, #0
   1a544:	beq	1a574 <putc_unlocked@plt+0x83bc>
   1a548:	add	r7, r1, #4
   1a54c:	mov	r6, #0
   1a550:	mov	r1, r5
   1a554:	bl	11ccc <strcmp@plt>
   1a558:	cmp	r0, #0
   1a55c:	moveq	r0, r6
   1a560:	popeq	{r4, r5, r6, r7, fp, pc}
   1a564:	ldr	r0, [r7, r6, lsl #2]
   1a568:	add	r6, r6, #1
   1a56c:	cmp	r0, #0
   1a570:	bne	1a550 <putc_unlocked@plt+0x8398>
   1a574:	mov	r0, r4
   1a578:	pop	{r4, r5, r6, r7, fp, pc}
   1a57c:	push	{r4, r5, r6, sl, fp, lr}
   1a580:	add	fp, sp, #16
   1a584:	sub	sp, sp, #8
   1a588:	mov	r4, r1
   1a58c:	mov	r5, r0
   1a590:	movw	r0, #34007	; 0x84d7
   1a594:	movt	r0, #2
   1a598:	movw	r1, #34034	; 0x84f2
   1a59c:	movt	r1, #2
   1a5a0:	cmn	r2, #1
   1a5a4:	moveq	r1, r0
   1a5a8:	mov	r0, #0
   1a5ac:	mov	r2, #5
   1a5b0:	bl	11dbc <dcgettext@plt>
   1a5b4:	mov	r6, r0
   1a5b8:	mov	r0, #0
   1a5bc:	mov	r1, #8
   1a5c0:	mov	r2, r4
   1a5c4:	bl	219d4 <_obstack_memory_used@@Base+0x160c>
   1a5c8:	mov	r4, r0
   1a5cc:	mov	r0, #1
   1a5d0:	mov	r1, r5
   1a5d4:	bl	21c70 <_obstack_memory_used@@Base+0x18a8>
   1a5d8:	str	r0, [sp]
   1a5dc:	mov	r0, #0
   1a5e0:	mov	r1, #0
   1a5e4:	mov	r2, r6
   1a5e8:	mov	r3, r4
   1a5ec:	bl	11ec4 <error@plt>
   1a5f0:	sub	sp, fp, #16
   1a5f4:	pop	{r4, r5, r6, sl, fp, pc}
   1a5f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a5fc:	add	fp, sp, #28
   1a600:	sub	sp, sp, #4
   1a604:	mov	sl, r2
   1a608:	mov	r5, r1
   1a60c:	mov	r7, r0
   1a610:	mov	r8, #0
   1a614:	movw	r1, #34063	; 0x850f
   1a618:	movt	r1, #2
   1a61c:	mov	r0, #0
   1a620:	mov	r2, #5
   1a624:	bl	11dbc <dcgettext@plt>
   1a628:	movw	r4, #37664	; 0x9320
   1a62c:	movt	r4, #3
   1a630:	ldr	r1, [r4]
   1a634:	bl	11c84 <fputs_unlocked@plt>
   1a638:	ldr	r6, [r7]
   1a63c:	cmp	r6, #0
   1a640:	beq	1a6e0 <putc_unlocked@plt+0x8528>
   1a644:	add	r9, r7, #4
   1a648:	mov	r7, #0
   1a64c:	str	sl, [sp]
   1a650:	cmp	r8, #0
   1a654:	beq	1a670 <putc_unlocked@plt+0x84b8>
   1a658:	mov	r0, r7
   1a65c:	mov	r1, r5
   1a660:	mov	r2, sl
   1a664:	bl	11da4 <memcmp@plt>
   1a668:	cmp	r0, #0
   1a66c:	beq	1a69c <putc_unlocked@plt+0x84e4>
   1a670:	ldr	r7, [r4]
   1a674:	mov	r0, r6
   1a678:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   1a67c:	mov	r3, r0
   1a680:	mov	r0, r7
   1a684:	mov	r1, #1
   1a688:	movw	r2, #34084	; 0x8524
   1a68c:	movt	r2, #2
   1a690:	bl	12044 <__fprintf_chk@plt>
   1a694:	mov	r7, r5
   1a698:	b	1a6cc <putc_unlocked@plt+0x8514>
   1a69c:	mov	sl, r9
   1a6a0:	ldr	r9, [r4]
   1a6a4:	mov	r0, r6
   1a6a8:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   1a6ac:	mov	r3, r0
   1a6b0:	mov	r0, r9
   1a6b4:	mov	r9, sl
   1a6b8:	ldr	sl, [sp]
   1a6bc:	mov	r1, #1
   1a6c0:	movw	r2, #34092	; 0x852c
   1a6c4:	movt	r2, #2
   1a6c8:	bl	12044 <__fprintf_chk@plt>
   1a6cc:	add	r5, r5, sl
   1a6d0:	ldr	r6, [r9, -r8, lsl #2]
   1a6d4:	sub	r8, r8, #1
   1a6d8:	cmp	r6, #0
   1a6dc:	bne	1a650 <putc_unlocked@plt+0x8498>
   1a6e0:	ldr	r1, [r4]
   1a6e4:	mov	r0, #10
   1a6e8:	sub	sp, fp, #28
   1a6ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6f0:	b	121b8 <putc_unlocked@plt>
   1a6f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a6f8:	add	fp, sp, #24
   1a6fc:	mov	r4, r3
   1a700:	mov	r5, r2
   1a704:	mov	r7, r1
   1a708:	mov	r6, r0
   1a70c:	ldr	r8, [fp, #8]
   1a710:	ldr	r0, [fp, #16]
   1a714:	cmp	r0, #0
   1a718:	beq	1a734 <putc_unlocked@plt+0x857c>
   1a71c:	mov	r0, r7
   1a720:	mov	r1, r5
   1a724:	mov	r2, r4
   1a728:	mov	r3, r8
   1a72c:	bl	1a438 <putc_unlocked@plt+0x8280>
   1a730:	b	1a740 <putc_unlocked@plt+0x8588>
   1a734:	mov	r0, r7
   1a738:	mov	r1, r5
   1a73c:	bl	1a52c <putc_unlocked@plt+0x8374>
   1a740:	mov	r2, r0
   1a744:	cmn	r0, #1
   1a748:	ble	1a754 <putc_unlocked@plt+0x859c>
   1a74c:	mov	r0, r2
   1a750:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a754:	ldr	r9, [fp, #12]
   1a758:	mov	r0, r6
   1a75c:	mov	r1, r7
   1a760:	bl	1a57c <putc_unlocked@plt+0x83c4>
   1a764:	mov	r0, r5
   1a768:	mov	r1, r4
   1a76c:	mov	r2, r8
   1a770:	bl	1a5f8 <putc_unlocked@plt+0x8440>
   1a774:	blx	r9
   1a778:	mvn	r2, #0
   1a77c:	mov	r0, r2
   1a780:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a784:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a788:	add	fp, sp, #24
   1a78c:	ldr	r6, [r1]
   1a790:	cmp	r6, #0
   1a794:	beq	1a7f8 <putc_unlocked@plt+0x8640>
   1a798:	mov	r4, r3
   1a79c:	mov	r7, r2
   1a7a0:	mov	r8, r1
   1a7a4:	mov	r9, r0
   1a7a8:	mov	r1, r2
   1a7ac:	mov	r2, r3
   1a7b0:	bl	11da4 <memcmp@plt>
   1a7b4:	cmp	r0, #0
   1a7b8:	beq	1a7f0 <putc_unlocked@plt+0x8638>
   1a7bc:	add	r7, r7, r4
   1a7c0:	add	r5, r8, #4
   1a7c4:	ldr	r6, [r5]
   1a7c8:	cmp	r6, #0
   1a7cc:	beq	1a7f8 <putc_unlocked@plt+0x8640>
   1a7d0:	mov	r0, r9
   1a7d4:	mov	r1, r7
   1a7d8:	mov	r2, r4
   1a7dc:	bl	11da4 <memcmp@plt>
   1a7e0:	add	r7, r7, r4
   1a7e4:	add	r5, r5, #4
   1a7e8:	cmp	r0, #0
   1a7ec:	bne	1a7c4 <putc_unlocked@plt+0x860c>
   1a7f0:	mov	r0, r6
   1a7f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a7f8:	mov	r6, #0
   1a7fc:	mov	r0, r6
   1a800:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a804:	sub	r0, r0, #1
   1a808:	ldrb	r3, [r0, #1]!
   1a80c:	cmp	r3, #47	; 0x2f
   1a810:	beq	1a808 <putc_unlocked@plt+0x8650>
   1a814:	mov	r2, #0
   1a818:	mov	r1, r0
   1a81c:	b	1a838 <putc_unlocked@plt+0x8680>
   1a820:	cmp	r3, #0
   1a824:	bxeq	lr
   1a828:	tst	r2, #1
   1a82c:	movne	r0, r1
   1a830:	mov	r2, #0
   1a834:	ldrb	r3, [r1, #1]!
   1a838:	uxtb	r3, r3
   1a83c:	cmp	r3, #47	; 0x2f
   1a840:	bne	1a820 <putc_unlocked@plt+0x8668>
   1a844:	mov	r2, #1
   1a848:	ldrb	r3, [r1, #1]!
   1a84c:	b	1a838 <putc_unlocked@plt+0x8680>
   1a850:	push	{r4, sl, fp, lr}
   1a854:	add	fp, sp, #8
   1a858:	mov	r4, r0
   1a85c:	bl	11fc0 <strlen@plt>
   1a860:	mov	r1, r0
   1a864:	sub	r2, r4, #1
   1a868:	mov	r0, r1
   1a86c:	cmp	r1, #2
   1a870:	popcc	{r4, sl, fp, pc}
   1a874:	ldrb	r3, [r2, r0]
   1a878:	sub	r1, r0, #1
   1a87c:	cmp	r3, #47	; 0x2f
   1a880:	beq	1a868 <putc_unlocked@plt+0x86b0>
   1a884:	pop	{r4, sl, fp, pc}
   1a888:	mov	r1, r0
   1a88c:	sub	r2, r0, #65	; 0x41
   1a890:	mov	r0, #1
   1a894:	cmp	r2, #26
   1a898:	subcs	r2, r1, #97	; 0x61
   1a89c:	cmpcs	r2, #26
   1a8a0:	bcs	1a8a8 <putc_unlocked@plt+0x86f0>
   1a8a4:	bx	lr
   1a8a8:	sub	r1, r1, #48	; 0x30
   1a8ac:	cmp	r1, #10
   1a8b0:	movcs	r0, #0
   1a8b4:	bx	lr
   1a8b8:	mov	r1, r0
   1a8bc:	sub	r2, r0, #65	; 0x41
   1a8c0:	mov	r0, #1
   1a8c4:	cmp	r2, #26
   1a8c8:	subcs	r1, r1, #97	; 0x61
   1a8cc:	cmpcs	r1, #26
   1a8d0:	movcs	r0, #0
   1a8d4:	bx	lr
   1a8d8:	mov	r1, #0
   1a8dc:	cmp	r0, #128	; 0x80
   1a8e0:	movwcc	r1, #1
   1a8e4:	mov	r0, r1
   1a8e8:	bx	lr
   1a8ec:	sub	r1, r0, #9
   1a8f0:	clz	r1, r1
   1a8f4:	lsr	r1, r1, #5
   1a8f8:	sub	r0, r0, #32
   1a8fc:	clz	r0, r0
   1a900:	lsr	r0, r0, #5
   1a904:	orr	r0, r0, r1
   1a908:	bx	lr
   1a90c:	mov	r1, r0
   1a910:	mov	r0, #1
   1a914:	cmp	r1, #32
   1a918:	bxcc	lr
   1a91c:	cmp	r1, #127	; 0x7f
   1a920:	movne	r0, #0
   1a924:	bx	lr
   1a928:	sub	r1, r0, #48	; 0x30
   1a92c:	mov	r0, #0
   1a930:	cmp	r1, #10
   1a934:	movwcc	r0, #1
   1a938:	bx	lr
   1a93c:	sub	r1, r0, #33	; 0x21
   1a940:	mov	r0, #0
   1a944:	cmp	r1, #94	; 0x5e
   1a948:	movwcc	r0, #1
   1a94c:	bx	lr
   1a950:	sub	r1, r0, #97	; 0x61
   1a954:	mov	r0, #0
   1a958:	cmp	r1, #26
   1a95c:	movwcc	r0, #1
   1a960:	bx	lr
   1a964:	sub	r1, r0, #32
   1a968:	mov	r0, #0
   1a96c:	cmp	r1, #95	; 0x5f
   1a970:	movwcc	r0, #1
   1a974:	bx	lr
   1a978:	sub	r1, r0, #33	; 0x21
   1a97c:	cmp	r1, #93	; 0x5d
   1a980:	bhi	1ab0c <putc_unlocked@plt+0x8954>
   1a984:	mov	r0, #1
   1a988:	add	r2, pc, #0
   1a98c:	ldr	pc, [r2, r1, lsl #2]
   1a990:	andeq	sl, r1, r8, lsl #22
   1a994:	andeq	sl, r1, r8, lsl #22
   1a998:	andeq	sl, r1, r8, lsl #22
   1a99c:	andeq	sl, r1, r8, lsl #22
   1a9a0:	andeq	sl, r1, r8, lsl #22
   1a9a4:	andeq	sl, r1, r8, lsl #22
   1a9a8:	andeq	sl, r1, r8, lsl #22
   1a9ac:	andeq	sl, r1, r8, lsl #22
   1a9b0:	andeq	sl, r1, r8, lsl #22
   1a9b4:	andeq	sl, r1, r8, lsl #22
   1a9b8:	andeq	sl, r1, r8, lsl #22
   1a9bc:	andeq	sl, r1, r8, lsl #22
   1a9c0:	andeq	sl, r1, r8, lsl #22
   1a9c4:	andeq	sl, r1, r8, lsl #22
   1a9c8:	andeq	sl, r1, r8, lsl #22
   1a9cc:	andeq	sl, r1, ip, lsl #22
   1a9d0:	andeq	sl, r1, ip, lsl #22
   1a9d4:	andeq	sl, r1, ip, lsl #22
   1a9d8:	andeq	sl, r1, ip, lsl #22
   1a9dc:	andeq	sl, r1, ip, lsl #22
   1a9e0:	andeq	sl, r1, ip, lsl #22
   1a9e4:	andeq	sl, r1, ip, lsl #22
   1a9e8:	andeq	sl, r1, ip, lsl #22
   1a9ec:	andeq	sl, r1, ip, lsl #22
   1a9f0:	andeq	sl, r1, ip, lsl #22
   1a9f4:	andeq	sl, r1, r8, lsl #22
   1a9f8:	andeq	sl, r1, r8, lsl #22
   1a9fc:	andeq	sl, r1, r8, lsl #22
   1aa00:	andeq	sl, r1, r8, lsl #22
   1aa04:	andeq	sl, r1, r8, lsl #22
   1aa08:	andeq	sl, r1, r8, lsl #22
   1aa0c:	andeq	sl, r1, r8, lsl #22
   1aa10:	andeq	sl, r1, ip, lsl #22
   1aa14:	andeq	sl, r1, ip, lsl #22
   1aa18:	andeq	sl, r1, ip, lsl #22
   1aa1c:	andeq	sl, r1, ip, lsl #22
   1aa20:	andeq	sl, r1, ip, lsl #22
   1aa24:	andeq	sl, r1, ip, lsl #22
   1aa28:	andeq	sl, r1, ip, lsl #22
   1aa2c:	andeq	sl, r1, ip, lsl #22
   1aa30:	andeq	sl, r1, ip, lsl #22
   1aa34:	andeq	sl, r1, ip, lsl #22
   1aa38:	andeq	sl, r1, ip, lsl #22
   1aa3c:	andeq	sl, r1, ip, lsl #22
   1aa40:	andeq	sl, r1, ip, lsl #22
   1aa44:	andeq	sl, r1, ip, lsl #22
   1aa48:	andeq	sl, r1, ip, lsl #22
   1aa4c:	andeq	sl, r1, ip, lsl #22
   1aa50:	andeq	sl, r1, ip, lsl #22
   1aa54:	andeq	sl, r1, ip, lsl #22
   1aa58:	andeq	sl, r1, ip, lsl #22
   1aa5c:	andeq	sl, r1, ip, lsl #22
   1aa60:	andeq	sl, r1, ip, lsl #22
   1aa64:	andeq	sl, r1, ip, lsl #22
   1aa68:	andeq	sl, r1, ip, lsl #22
   1aa6c:	andeq	sl, r1, ip, lsl #22
   1aa70:	andeq	sl, r1, ip, lsl #22
   1aa74:	andeq	sl, r1, ip, lsl #22
   1aa78:	andeq	sl, r1, r8, lsl #22
   1aa7c:	andeq	sl, r1, r8, lsl #22
   1aa80:	andeq	sl, r1, r8, lsl #22
   1aa84:	andeq	sl, r1, r8, lsl #22
   1aa88:	andeq	sl, r1, r8, lsl #22
   1aa8c:	andeq	sl, r1, r8, lsl #22
   1aa90:	andeq	sl, r1, ip, lsl #22
   1aa94:	andeq	sl, r1, ip, lsl #22
   1aa98:	andeq	sl, r1, ip, lsl #22
   1aa9c:	andeq	sl, r1, ip, lsl #22
   1aaa0:	andeq	sl, r1, ip, lsl #22
   1aaa4:	andeq	sl, r1, ip, lsl #22
   1aaa8:	andeq	sl, r1, ip, lsl #22
   1aaac:	andeq	sl, r1, ip, lsl #22
   1aab0:	andeq	sl, r1, ip, lsl #22
   1aab4:	andeq	sl, r1, ip, lsl #22
   1aab8:	andeq	sl, r1, ip, lsl #22
   1aabc:	andeq	sl, r1, ip, lsl #22
   1aac0:	andeq	sl, r1, ip, lsl #22
   1aac4:	andeq	sl, r1, ip, lsl #22
   1aac8:	andeq	sl, r1, ip, lsl #22
   1aacc:	andeq	sl, r1, ip, lsl #22
   1aad0:	andeq	sl, r1, ip, lsl #22
   1aad4:	andeq	sl, r1, ip, lsl #22
   1aad8:	andeq	sl, r1, ip, lsl #22
   1aadc:	andeq	sl, r1, ip, lsl #22
   1aae0:	andeq	sl, r1, ip, lsl #22
   1aae4:	andeq	sl, r1, ip, lsl #22
   1aae8:	andeq	sl, r1, ip, lsl #22
   1aaec:	andeq	sl, r1, ip, lsl #22
   1aaf0:	andeq	sl, r1, ip, lsl #22
   1aaf4:	andeq	sl, r1, ip, lsl #22
   1aaf8:	andeq	sl, r1, r8, lsl #22
   1aafc:	andeq	sl, r1, r8, lsl #22
   1ab00:	andeq	sl, r1, r8, lsl #22
   1ab04:	andeq	sl, r1, r8, lsl #22
   1ab08:	bx	lr
   1ab0c:	mov	r0, #0
   1ab10:	bx	lr
   1ab14:	sub	r0, r0, #9
   1ab18:	cmp	r0, #23
   1ab1c:	movhi	r0, #0
   1ab20:	bxhi	lr
   1ab24:	bic	r0, r0, #-16777216	; 0xff000000
   1ab28:	movw	r1, #31
   1ab2c:	movt	r1, #128	; 0x80
   1ab30:	mov	r2, #1
   1ab34:	and	r0, r2, r1, lsr r0
   1ab38:	bx	lr
   1ab3c:	sub	r1, r0, #65	; 0x41
   1ab40:	mov	r0, #0
   1ab44:	cmp	r1, #26
   1ab48:	movwcc	r0, #1
   1ab4c:	bx	lr
   1ab50:	mov	r1, r0
   1ab54:	sub	r2, r0, #48	; 0x30
   1ab58:	mov	r0, #1
   1ab5c:	cmp	r2, #22
   1ab60:	bhi	1ab78 <putc_unlocked@plt+0x89c0>
   1ab64:	mov	ip, #1
   1ab68:	movw	r3, #1023	; 0x3ff
   1ab6c:	movt	r3, #126	; 0x7e
   1ab70:	tst	r3, ip, lsl r2
   1ab74:	bxne	lr
   1ab78:	sub	r1, r1, #97	; 0x61
   1ab7c:	cmp	r1, #6
   1ab80:	movcs	r0, #0
   1ab84:	bxcs	lr
   1ab88:	bx	lr
   1ab8c:	sub	r1, r0, #65	; 0x41
   1ab90:	cmp	r1, #26
   1ab94:	addcc	r0, r0, #32
   1ab98:	bx	lr
   1ab9c:	sub	r1, r0, #97	; 0x61
   1aba0:	cmp	r1, #26
   1aba4:	subcc	r0, r0, #32
   1aba8:	bx	lr
   1abac:	push	{r4, r5, r6, r7, fp, lr}
   1abb0:	add	fp, sp, #16
   1abb4:	mov	r5, r0
   1abb8:	mov	r0, #0
   1abbc:	cmp	r5, r1
   1abc0:	cmpne	r2, #0
   1abc4:	bne	1abcc <putc_unlocked@plt+0x8a14>
   1abc8:	pop	{r4, r5, r6, r7, fp, pc}
   1abcc:	mov	r4, r1
   1abd0:	rsb	r7, r2, #1
   1abd4:	ldrb	r0, [r5]
   1abd8:	bl	1ab8c <putc_unlocked@plt+0x89d4>
   1abdc:	mov	r6, r0
   1abe0:	ldrb	r0, [r4]
   1abe4:	bl	1ab8c <putc_unlocked@plt+0x89d4>
   1abe8:	cmp	r7, #0
   1abec:	uxtbne	r1, r6
   1abf0:	cmpne	r1, #0
   1abf4:	beq	1ac10 <putc_unlocked@plt+0x8a58>
   1abf8:	add	r7, r7, #1
   1abfc:	add	r4, r4, #1
   1ac00:	add	r5, r5, #1
   1ac04:	uxtb	r2, r0
   1ac08:	cmp	r1, r2
   1ac0c:	beq	1abd4 <putc_unlocked@plt+0x8a1c>
   1ac10:	uxtb	r0, r0
   1ac14:	uxtb	r1, r6
   1ac18:	sub	r0, r1, r0
   1ac1c:	pop	{r4, r5, r6, r7, fp, pc}
   1ac20:	push	{r4, r5, fp, lr}
   1ac24:	add	fp, sp, #8
   1ac28:	sub	sp, sp, #8
   1ac2c:	sub	sp, sp, #1024	; 0x400
   1ac30:	mov	r2, sp
   1ac34:	bl	1ac40 <putc_unlocked@plt+0x8a88>
   1ac38:	sub	sp, fp, #8
   1ac3c:	pop	{r4, r5, fp, pc}
   1ac40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac44:	add	fp, sp, #28
   1ac48:	sub	sp, sp, #164	; 0xa4
   1ac4c:	sub	sp, sp, #2048	; 0x800
   1ac50:	mov	sl, r2
   1ac54:	mov	r5, r1
   1ac58:	mov	r9, r0
   1ac5c:	mov	r6, #0
   1ac60:	str	r6, [fp, #-36]	; 0xffffffdc
   1ac64:	and	r0, r1, #3
   1ac68:	str	r0, [sp, #28]
   1ac6c:	bl	1b244 <putc_unlocked@plt+0x908c>
   1ac70:	cmp	r0, #0
   1ac74:	beq	1ac88 <putc_unlocked@plt+0x8ad0>
   1ac78:	bl	11fe4 <__errno_location@plt>
   1ac7c:	mov	r1, #22
   1ac80:	str	r1, [r0]
   1ac84:	b	1b21c <putc_unlocked@plt+0x9064>
   1ac88:	cmp	r9, #0
   1ac8c:	beq	1ace8 <putc_unlocked@plt+0x8b30>
   1ac90:	ldrb	r0, [r9]
   1ac94:	cmp	r0, #0
   1ac98:	beq	1acf4 <putc_unlocked@plt+0x8b3c>
   1ac9c:	sub	r0, fp, #1072	; 0x430
   1aca0:	bl	1b254 <putc_unlocked@plt+0x909c>
   1aca4:	add	r0, sp, #136	; 0x88
   1aca8:	bl	1b254 <putc_unlocked@plt+0x909c>
   1acac:	mov	r0, sl
   1acb0:	bl	1b254 <putc_unlocked@plt+0x909c>
   1acb4:	ldr	r4, [sl]
   1acb8:	ldrb	r0, [r9]
   1acbc:	cmp	r0, #47	; 0x2f
   1acc0:	bne	1ad08 <putc_unlocked@plt+0x8b50>
   1acc4:	mov	r0, r4
   1acc8:	mov	r1, r9
   1accc:	mov	r2, #0
   1acd0:	mvn	r3, #0
   1acd4:	bl	121a0 <__mempcpy_chk@plt>
   1acd8:	mov	r6, r0
   1acdc:	mov	r0, #47	; 0x2f
   1ace0:	strb	r0, [r6], #1
   1ace4:	b	1ad2c <putc_unlocked@plt+0x8b74>
   1ace8:	bl	11fe4 <__errno_location@plt>
   1acec:	mov	r1, #22
   1acf0:	b	1acfc <putc_unlocked@plt+0x8b44>
   1acf4:	bl	11fe4 <__errno_location@plt>
   1acf8:	mov	r1, #2
   1acfc:	str	r1, [r0]
   1ad00:	mov	r6, #0
   1ad04:	b	1b21c <putc_unlocked@plt+0x9064>
   1ad08:	ldr	r1, [sl, #4]
   1ad0c:	mov	r0, r4
   1ad10:	bl	11f90 <getcwd@plt>
   1ad14:	cmp	r0, #0
   1ad18:	beq	1b174 <putc_unlocked@plt+0x8fbc>
   1ad1c:	mov	r0, r4
   1ad20:	mov	r1, #0
   1ad24:	bl	11e10 <rawmemchr@plt>
   1ad28:	mov	r6, r0
   1ad2c:	ldrb	r0, [r9]
   1ad30:	cmp	r0, #0
   1ad34:	beq	1b150 <putc_unlocked@plt+0x8f98>
   1ad38:	and	r1, r5, #4
   1ad3c:	str	r1, [sp, #24]
   1ad40:	mov	r1, #0
   1ad44:	str	r1, [sp, #4]
   1ad48:	mov	r1, #0
   1ad4c:	str	r1, [sp, #12]
   1ad50:	str	sl, [sp, #20]
   1ad54:	uxtb	r1, r0
   1ad58:	cmp	r1, #47	; 0x2f
   1ad5c:	bne	1ad6c <putc_unlocked@plt+0x8bb4>
   1ad60:	ldrb	r0, [r9, #1]!
   1ad64:	cmp	r0, #47	; 0x2f
   1ad68:	beq	1ad60 <putc_unlocked@plt+0x8ba8>
   1ad6c:	mov	r8, r9
   1ad70:	b	1ad78 <putc_unlocked@plt+0x8bc0>
   1ad74:	add	r8, r8, #1
   1ad78:	ldrb	r1, [r8]
   1ad7c:	cmp	r1, #0
   1ad80:	cmpne	r1, #47	; 0x2f
   1ad84:	bne	1ad74 <putc_unlocked@plt+0x8bbc>
   1ad88:	sub	r7, r8, r9
   1ad8c:	cmp	r7, #1
   1ad90:	beq	1ada8 <putc_unlocked@plt+0x8bf0>
   1ad94:	cmp	r7, #2
   1ad98:	beq	1adb8 <putc_unlocked@plt+0x8c00>
   1ad9c:	cmp	r7, #0
   1ada0:	bne	1adcc <putc_unlocked@plt+0x8c14>
   1ada4:	b	1b150 <putc_unlocked@plt+0x8f98>
   1ada8:	uxtb	r0, r0
   1adac:	cmp	r0, #46	; 0x2e
   1adb0:	bne	1adcc <putc_unlocked@plt+0x8c14>
   1adb4:	b	1b0ec <putc_unlocked@plt+0x8f34>
   1adb8:	uxtb	r0, r0
   1adbc:	cmp	r0, #46	; 0x2e
   1adc0:	ldrbeq	r0, [r9, #1]
   1adc4:	cmpeq	r0, #46	; 0x2e
   1adc8:	beq	1b0ac <putc_unlocked@plt+0x8ef4>
   1adcc:	ldrb	r0, [r6, #-1]
   1add0:	cmp	r0, #47	; 0x2f
   1add4:	movne	r0, #47	; 0x2f
   1add8:	strbne	r0, [r6], #1
   1addc:	ldr	r0, [sl, #4]
   1ade0:	add	r0, r4, r0
   1ade4:	sub	r0, r0, r6
   1ade8:	add	r5, r7, #2
   1adec:	cmp	r0, r5
   1adf0:	bcc	1ae18 <putc_unlocked@plt+0x8c60>
   1adf4:	b	1ae2c <putc_unlocked@plt+0x8c74>
   1adf8:	sub	r0, r6, r4
   1adfc:	ldr	r4, [sl]
   1ae00:	ldr	r1, [sl, #4]
   1ae04:	add	r6, r4, r0
   1ae08:	add	r0, r4, r1
   1ae0c:	sub	r0, r0, r6
   1ae10:	cmp	r0, r5
   1ae14:	bcs	1ae2c <putc_unlocked@plt+0x8c74>
   1ae18:	mov	r0, sl
   1ae1c:	bl	22178 <_obstack_memory_used@@Base+0x1db0>
   1ae20:	cmp	r0, #0
   1ae24:	bne	1adf8 <putc_unlocked@plt+0x8c40>
   1ae28:	b	1b240 <putc_unlocked@plt+0x9088>
   1ae2c:	mov	r0, r6
   1ae30:	mov	r1, r9
   1ae34:	str	r7, [sp, #16]
   1ae38:	mov	r2, r7
   1ae3c:	mvn	r3, #0
   1ae40:	bl	121a0 <__mempcpy_chk@plt>
   1ae44:	mov	r6, r0
   1ae48:	mov	r0, #0
   1ae4c:	strb	r0, [r6]
   1ae50:	ldr	r0, [sp, #24]
   1ae54:	cmp	r0, #0
   1ae58:	bne	1aeb8 <putc_unlocked@plt+0x8d00>
   1ae5c:	ldr	r5, [sp, #136]	; 0x88
   1ae60:	ldr	r0, [sp, #140]	; 0x8c
   1ae64:	sub	r7, r0, #1
   1ae68:	mov	r0, r4
   1ae6c:	mov	r1, r5
   1ae70:	mov	r2, r7
   1ae74:	bl	11e40 <readlink@plt>
   1ae78:	cmp	r0, r7
   1ae7c:	blt	1ae94 <putc_unlocked@plt+0x8cdc>
   1ae80:	add	r0, sp, #136	; 0x88
   1ae84:	bl	220f4 <_obstack_memory_used@@Base+0x1d2c>
   1ae88:	cmp	r0, #0
   1ae8c:	bne	1ae5c <putc_unlocked@plt+0x8ca4>
   1ae90:	b	1b240 <putc_unlocked@plt+0x9088>
   1ae94:	mov	sl, r0
   1ae98:	cmp	r0, #0
   1ae9c:	blt	1aeb8 <putc_unlocked@plt+0x8d00>
   1aea0:	ldr	r0, [sp, #4]
   1aea4:	cmp	r0, #19
   1aea8:	bgt	1af28 <putc_unlocked@plt+0x8d70>
   1aeac:	add	r0, r0, #1
   1aeb0:	str	r0, [sp, #4]
   1aeb4:	b	1afa0 <putc_unlocked@plt+0x8de8>
   1aeb8:	ldr	r0, [sp, #28]
   1aebc:	cmp	r0, #2
   1aec0:	bne	1aed0 <putc_unlocked@plt+0x8d18>
   1aec4:	mov	r9, r8
   1aec8:	ldr	sl, [sp, #20]
   1aecc:	b	1b144 <putc_unlocked@plt+0x8f8c>
   1aed0:	mov	r0, r8
   1aed4:	bl	1b300 <putc_unlocked@plt+0x9148>
   1aed8:	cmp	r0, #0
   1aedc:	beq	1aefc <putc_unlocked@plt+0x8d44>
   1aee0:	mov	r0, r4
   1aee4:	mov	r1, r6
   1aee8:	bl	1b388 <putc_unlocked@plt+0x91d0>
   1aeec:	cmp	r0, #0
   1aef0:	ldr	sl, [sp, #20]
   1aef4:	bne	1b0ec <putc_unlocked@plt+0x8f34>
   1aef8:	b	1b104 <putc_unlocked@plt+0x8f4c>
   1aefc:	ldr	r0, [sp, #24]
   1af00:	cmp	r0, #0
   1af04:	ldr	sl, [sp, #20]
   1af08:	beq	1b0dc <putc_unlocked@plt+0x8f24>
   1af0c:	ldrb	r0, [r8]
   1af10:	cmp	r0, #0
   1af14:	beq	1b0f4 <putc_unlocked@plt+0x8f3c>
   1af18:	mov	r9, r8
   1af1c:	cmp	r0, #0
   1af20:	bne	1ad54 <putc_unlocked@plt+0x8b9c>
   1af24:	b	1b150 <putc_unlocked@plt+0x8f98>
   1af28:	ldrb	r0, [r9]
   1af2c:	cmp	r0, #0
   1af30:	beq	1afa0 <putc_unlocked@plt+0x8de8>
   1af34:	mov	r0, #0
   1af38:	ldr	r7, [sp, #16]
   1af3c:	strb	r0, [r6, -r7]
   1af40:	ldrb	r0, [r4]
   1af44:	cmp	r0, #0
   1af48:	mov	r0, r4
   1af4c:	movw	r1, #34110	; 0x853e
   1af50:	movt	r1, #2
   1af54:	moveq	r0, r1
   1af58:	add	r1, sp, #32
   1af5c:	bl	24634 <_obstack_memory_used@@Base+0x426c>
   1af60:	cmp	r0, #0
   1af64:	bne	1b234 <putc_unlocked@plt+0x907c>
   1af68:	rsb	r0, r7, #0
   1af6c:	ldrb	r1, [r9]
   1af70:	strb	r1, [r6, r0]
   1af74:	sub	r0, fp, #36	; 0x24
   1af78:	mov	r1, r9
   1af7c:	add	r2, sp, #32
   1af80:	bl	1b268 <putc_unlocked@plt+0x90b0>
   1af84:	cmp	r0, #0
   1af88:	beq	1afa0 <putc_unlocked@plt+0x8de8>
   1af8c:	ldr	r0, [sp, #28]
   1af90:	cmp	r0, #2
   1af94:	ldr	sl, [sp, #20]
   1af98:	beq	1b0ec <putc_unlocked@plt+0x8f34>
   1af9c:	b	1b228 <putc_unlocked@plt+0x9070>
   1afa0:	mov	r0, #0
   1afa4:	strb	r0, [r5, sl]
   1afa8:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   1afac:	ldr	r0, [sp, #12]
   1afb0:	tst	r0, #1
   1afb4:	ldr	r0, [sp, #8]
   1afb8:	subne	r0, r8, r9
   1afbc:	str	r0, [sp, #8]
   1afc0:	mov	r0, r8
   1afc4:	bl	11fc0 <strlen@plt>
   1afc8:	str	r0, [sp, #16]
   1afcc:	adds	r7, r0, sl
   1afd0:	bcs	1b240 <putc_unlocked@plt+0x9088>
   1afd4:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   1afd8:	cmp	r0, r7
   1afdc:	bhi	1b000 <putc_unlocked@plt+0x8e48>
   1afe0:	sub	r0, fp, #1072	; 0x430
   1afe4:	bl	22178 <_obstack_memory_used@@Base+0x1db0>
   1afe8:	cmp	r0, #0
   1afec:	beq	1b240 <putc_unlocked@plt+0x9088>
   1aff0:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   1aff4:	cmp	r0, r7
   1aff8:	bls	1afe0 <putc_unlocked@plt+0x8e28>
   1affc:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   1b000:	ldr	r0, [sp, #12]
   1b004:	tst	r0, #1
   1b008:	ldr	r0, [sp, #8]
   1b00c:	addne	r8, r9, r0
   1b010:	add	r0, r9, sl
   1b014:	ldr	r1, [sp, #16]
   1b018:	add	r2, r1, #1
   1b01c:	mov	r1, r8
   1b020:	bl	11d38 <memmove@plt>
   1b024:	mov	r0, r9
   1b028:	mov	r1, r5
   1b02c:	mov	r2, sl
   1b030:	bl	11d74 <memcpy@plt>
   1b034:	ldrb	r0, [r5]
   1b038:	cmp	r0, #47	; 0x2f
   1b03c:	bne	1b070 <putc_unlocked@plt+0x8eb8>
   1b040:	mov	r0, r4
   1b044:	mov	r1, r5
   1b048:	mov	r2, #0
   1b04c:	mvn	r3, #0
   1b050:	bl	121a0 <__mempcpy_chk@plt>
   1b054:	mov	r6, r0
   1b058:	mov	r0, #47	; 0x2f
   1b05c:	strb	r0, [r6], #1
   1b060:	mov	r0, #1
   1b064:	str	r0, [sp, #12]
   1b068:	ldr	sl, [sp, #20]
   1b06c:	b	1b144 <putc_unlocked@plt+0x8f8c>
   1b070:	add	r0, r4, #1
   1b074:	mov	r1, #1
   1b078:	str	r1, [sp, #12]
   1b07c:	cmp	r6, r0
   1b080:	ldr	sl, [sp, #20]
   1b084:	bls	1b144 <putc_unlocked@plt+0x8f8c>
   1b088:	sub	r0, r6, #1
   1b08c:	mov	r6, r0
   1b090:	cmp	r0, r4
   1b094:	bls	1b144 <putc_unlocked@plt+0x8f8c>
   1b098:	mov	r0, r6
   1b09c:	ldrb	r1, [r0, #-1]!
   1b0a0:	cmp	r1, #47	; 0x2f
   1b0a4:	bne	1b08c <putc_unlocked@plt+0x8ed4>
   1b0a8:	b	1b144 <putc_unlocked@plt+0x8f8c>
   1b0ac:	add	r0, r4, #1
   1b0b0:	cmp	r6, r0
   1b0b4:	bls	1b0ec <putc_unlocked@plt+0x8f34>
   1b0b8:	sub	r0, r6, #1
   1b0bc:	mov	r6, r0
   1b0c0:	cmp	r0, r4
   1b0c4:	bls	1b0ec <putc_unlocked@plt+0x8f34>
   1b0c8:	mov	r0, r6
   1b0cc:	ldrb	r1, [r0, #-1]!
   1b0d0:	cmp	r1, #47	; 0x2f
   1b0d4:	bne	1b0bc <putc_unlocked@plt+0x8f04>
   1b0d8:	b	1b0ec <putc_unlocked@plt+0x8f34>
   1b0dc:	bl	11fe4 <__errno_location@plt>
   1b0e0:	ldr	r0, [r0]
   1b0e4:	cmp	r0, #22
   1b0e8:	bne	1b104 <putc_unlocked@plt+0x8f4c>
   1b0ec:	mov	r9, r8
   1b0f0:	b	1b144 <putc_unlocked@plt+0x8f8c>
   1b0f4:	mov	r0, r4
   1b0f8:	bl	1b394 <putc_unlocked@plt+0x91dc>
   1b0fc:	cmp	r0, #0
   1b100:	bne	1b0ec <putc_unlocked@plt+0x8f34>
   1b104:	mov	r5, #1
   1b108:	ldr	r0, [sp, #28]
   1b10c:	cmp	r0, #1
   1b110:	bne	1b1c4 <putc_unlocked@plt+0x900c>
   1b114:	bl	11fe4 <__errno_location@plt>
   1b118:	ldr	r0, [r0]
   1b11c:	cmp	r0, #2
   1b120:	bne	1b1c4 <putc_unlocked@plt+0x900c>
   1b124:	mov	r0, r8
   1b128:	movw	r1, #18080	; 0x46a0
   1b12c:	movt	r1, #2
   1b130:	bl	12194 <strspn@plt>
   1b134:	ldrb	r0, [r8, r0]
   1b138:	cmp	r0, #0
   1b13c:	mov	r9, r8
   1b140:	bne	1b1c4 <putc_unlocked@plt+0x900c>
   1b144:	ldrb	r0, [r9]
   1b148:	cmp	r0, #0
   1b14c:	bne	1ad54 <putc_unlocked@plt+0x8b9c>
   1b150:	add	r0, r4, #1
   1b154:	mov	r5, #0
   1b158:	cmp	r6, r0
   1b15c:	bls	1b1c4 <putc_unlocked@plt+0x900c>
   1b160:	mov	r0, r6
   1b164:	ldrb	r1, [r0, #-1]!
   1b168:	cmp	r1, #47	; 0x2f
   1b16c:	moveq	r6, r0
   1b170:	b	1b1c4 <putc_unlocked@plt+0x900c>
   1b174:	bl	11fe4 <__errno_location@plt>
   1b178:	mov	r6, r0
   1b17c:	ldr	r0, [r6]
   1b180:	cmp	r0, #34	; 0x22
   1b184:	bne	1b1b4 <putc_unlocked@plt+0x8ffc>
   1b188:	mov	r0, sl
   1b18c:	bl	220f4 <_obstack_memory_used@@Base+0x1d2c>
   1b190:	cmp	r0, #0
   1b194:	beq	1b240 <putc_unlocked@plt+0x9088>
   1b198:	ldr	r4, [sl]
   1b19c:	ldr	r1, [sl, #4]
   1b1a0:	mov	r0, r4
   1b1a4:	bl	11f90 <getcwd@plt>
   1b1a8:	cmp	r0, #0
   1b1ac:	beq	1b17c <putc_unlocked@plt+0x8fc4>
   1b1b0:	b	1ad1c <putc_unlocked@plt+0x8b64>
   1b1b4:	cmp	r0, #12
   1b1b8:	beq	1b240 <putc_unlocked@plt+0x9088>
   1b1bc:	mov	r5, #1
   1b1c0:	mov	r6, r4
   1b1c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b1c8:	cmp	r0, #0
   1b1cc:	beq	1b1d4 <putc_unlocked@plt+0x901c>
   1b1d0:	bl	1c4dc <putc_unlocked@plt+0xa324>
   1b1d4:	sub	r0, fp, #1072	; 0x430
   1b1d8:	bl	1b3bc <putc_unlocked@plt+0x9204>
   1b1dc:	add	r0, sp, #136	; 0x88
   1b1e0:	bl	1b3bc <putc_unlocked@plt+0x9204>
   1b1e4:	cmp	r5, #0
   1b1e8:	beq	1b1fc <putc_unlocked@plt+0x9044>
   1b1ec:	mov	r0, sl
   1b1f0:	bl	1b3bc <putc_unlocked@plt+0x9204>
   1b1f4:	mov	r6, #0
   1b1f8:	b	1b21c <putc_unlocked@plt+0x9064>
   1b1fc:	mov	r0, #0
   1b200:	strb	r0, [r6], #1
   1b204:	sub	r1, r6, r4
   1b208:	mov	r0, sl
   1b20c:	bl	2208c <_obstack_memory_used@@Base+0x1cc4>
   1b210:	mov	r6, r0
   1b214:	cmp	r0, #0
   1b218:	beq	1b240 <putc_unlocked@plt+0x9088>
   1b21c:	mov	r0, r6
   1b220:	sub	sp, fp, #28
   1b224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b228:	bl	11fe4 <__errno_location@plt>
   1b22c:	mov	r1, #40	; 0x28
   1b230:	str	r1, [r0]
   1b234:	mov	r5, #1
   1b238:	ldr	sl, [sp, #20]
   1b23c:	b	1b1c4 <putc_unlocked@plt+0x900c>
   1b240:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   1b244:	sub	r1, r0, #1
   1b248:	ands	r0, r1, r0
   1b24c:	movwne	r0, #1
   1b250:	bx	lr
   1b254:	mov	r1, #1024	; 0x400
   1b258:	add	r2, r0, #8
   1b25c:	str	r2, [r0]
   1b260:	str	r1, [r0, #4]
   1b264:	bx	lr
   1b268:	push	{r4, r5, r6, sl, fp, lr}
   1b26c:	add	fp, sp, #16
   1b270:	sub	sp, sp, #8
   1b274:	mov	r4, r2
   1b278:	mov	r5, r1
   1b27c:	mov	r6, r0
   1b280:	ldr	r0, [r0]
   1b284:	cmp	r0, #0
   1b288:	bne	1b2c0 <putc_unlocked@plt+0x9108>
   1b28c:	movw	r0, #52528	; 0xcd30
   1b290:	movt	r0, #1
   1b294:	str	r0, [sp]
   1b298:	movw	r2, #52384	; 0xcca0
   1b29c:	movt	r2, #1
   1b2a0:	movw	r3, #52440	; 0xccd8
   1b2a4:	movt	r3, #1
   1b2a8:	mov	r0, #7
   1b2ac:	mov	r1, #0
   1b2b0:	bl	1c208 <putc_unlocked@plt+0xa050>
   1b2b4:	str	r0, [r6]
   1b2b8:	cmp	r0, #0
   1b2bc:	beq	1b2fc <putc_unlocked@plt+0x9144>
   1b2c0:	ldr	r0, [r6]
   1b2c4:	mov	r1, r5
   1b2c8:	mov	r2, r4
   1b2cc:	bl	1b604 <putc_unlocked@plt+0x944c>
   1b2d0:	mov	r1, r0
   1b2d4:	mov	r0, #1
   1b2d8:	cmp	r1, #0
   1b2dc:	bne	1b2f4 <putc_unlocked@plt+0x913c>
   1b2e0:	ldr	r0, [r6]
   1b2e4:	mov	r1, r5
   1b2e8:	mov	r2, r4
   1b2ec:	bl	1b588 <putc_unlocked@plt+0x93d0>
   1b2f0:	mov	r0, #0
   1b2f4:	sub	sp, fp, #16
   1b2f8:	pop	{r4, r5, r6, sl, fp, pc}
   1b2fc:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   1b300:	mov	r1, r0
   1b304:	ldrb	r2, [r0]
   1b308:	mov	r0, #0
   1b30c:	cmp	r2, #47	; 0x2f
   1b310:	bxne	lr
   1b314:	mov	r0, #1
   1b318:	mov	ip, #0
   1b31c:	mov	r3, r1
   1b320:	ldrb	r2, [r1, #1]!
   1b324:	cmp	r2, #47	; 0x2f
   1b328:	beq	1b31c <putc_unlocked@plt+0x9164>
   1b32c:	cmp	r2, #46	; 0x2e
   1b330:	bne	1b370 <putc_unlocked@plt+0x91b8>
   1b334:	add	r1, r3, #2
   1b338:	ldrb	r2, [r1]
   1b33c:	cmp	r2, #47	; 0x2f
   1b340:	beq	1b31c <putc_unlocked@plt+0x9164>
   1b344:	cmp	r2, #0
   1b348:	moveq	ip, #1
   1b34c:	moveq	r0, ip
   1b350:	bxeq	lr
   1b354:	cmp	r2, #46	; 0x2e
   1b358:	bne	1b380 <putc_unlocked@plt+0x91c8>
   1b35c:	ldrb	r1, [r3, #3]
   1b360:	cmp	r1, #0
   1b364:	cmpne	r1, #47	; 0x2f
   1b368:	bne	1b380 <putc_unlocked@plt+0x91c8>
   1b36c:	bx	lr
   1b370:	cmp	r2, #0
   1b374:	movne	r0, ip
   1b378:	bxne	lr
   1b37c:	bx	lr
   1b380:	mov	r0, #0
   1b384:	bx	lr
   1b388:	mov	r2, #47	; 0x2f
   1b38c:	strh	r2, [r1]
   1b390:	b	1b394 <putc_unlocked@plt+0x91dc>
   1b394:	push	{fp, lr}
   1b398:	mov	fp, sp
   1b39c:	mov	r1, r0
   1b3a0:	mvn	r0, #99	; 0x63
   1b3a4:	mov	r2, #0
   1b3a8:	mov	r3, #512	; 0x200
   1b3ac:	bl	11d50 <faccessat@plt>
   1b3b0:	clz	r0, r0
   1b3b4:	lsr	r0, r0, #5
   1b3b8:	pop	{fp, pc}
   1b3bc:	mov	r1, r0
   1b3c0:	ldr	r0, [r1], #8
   1b3c4:	cmp	r0, r1
   1b3c8:	bxeq	lr
   1b3cc:	b	1bd0c <putc_unlocked@plt+0x9b54>
   1b3d0:	movw	r1, #41952	; 0xa3e0
   1b3d4:	movt	r1, #3
   1b3d8:	str	r0, [r1]
   1b3dc:	bx	lr
   1b3e0:	movw	r1, #41956	; 0xa3e4
   1b3e4:	movt	r1, #3
   1b3e8:	strb	r0, [r1]
   1b3ec:	bx	lr
   1b3f0:	push	{r4, r5, r6, sl, fp, lr}
   1b3f4:	add	fp, sp, #16
   1b3f8:	sub	sp, sp, #8
   1b3fc:	movw	r0, #37668	; 0x9324
   1b400:	movt	r0, #3
   1b404:	ldr	r0, [r0]
   1b408:	bl	23c3c <_obstack_memory_used@@Base+0x3874>
   1b40c:	cmp	r0, #0
   1b410:	beq	1b438 <putc_unlocked@plt+0x9280>
   1b414:	movw	r0, #41956	; 0xa3e4
   1b418:	movt	r0, #3
   1b41c:	ldrb	r0, [r0]
   1b420:	cmp	r0, #0
   1b424:	beq	1b458 <putc_unlocked@plt+0x92a0>
   1b428:	bl	11fe4 <__errno_location@plt>
   1b42c:	ldr	r0, [r0]
   1b430:	cmp	r0, #32
   1b434:	bne	1b458 <putc_unlocked@plt+0x92a0>
   1b438:	movw	r0, #37664	; 0x9320
   1b43c:	movt	r0, #3
   1b440:	ldr	r0, [r0]
   1b444:	bl	23c3c <_obstack_memory_used@@Base+0x3874>
   1b448:	cmp	r0, #0
   1b44c:	subeq	sp, fp, #16
   1b450:	popeq	{r4, r5, r6, sl, fp, pc}
   1b454:	b	1b4c8 <putc_unlocked@plt+0x9310>
   1b458:	movw	r1, #34097	; 0x8531
   1b45c:	movt	r1, #2
   1b460:	mov	r0, #0
   1b464:	mov	r2, #5
   1b468:	bl	11dbc <dcgettext@plt>
   1b46c:	mov	r4, r0
   1b470:	movw	r0, #41952	; 0xa3e0
   1b474:	movt	r0, #3
   1b478:	ldr	r6, [r0]
   1b47c:	bl	11fe4 <__errno_location@plt>
   1b480:	ldr	r5, [r0]
   1b484:	cmp	r6, #0
   1b488:	bne	1b4a4 <putc_unlocked@plt+0x92ec>
   1b48c:	movw	r2, #34094	; 0x852e
   1b490:	movt	r2, #2
   1b494:	mov	r0, #0
   1b498:	mov	r1, r5
   1b49c:	mov	r3, r4
   1b4a0:	b	1b4c4 <putc_unlocked@plt+0x930c>
   1b4a4:	mov	r0, r6
   1b4a8:	bl	21b28 <_obstack_memory_used@@Base+0x1760>
   1b4ac:	mov	r3, r0
   1b4b0:	str	r4, [sp]
   1b4b4:	movw	r2, #25675	; 0x644b
   1b4b8:	movt	r2, #2
   1b4bc:	mov	r0, #0
   1b4c0:	mov	r1, r5
   1b4c4:	bl	11ec4 <error@plt>
   1b4c8:	movw	r0, #37572	; 0x92c4
   1b4cc:	movt	r0, #3
   1b4d0:	ldr	r0, [r0]
   1b4d4:	bl	11d68 <_exit@plt>
   1b4d8:	push	{r4, r5, r6, sl, fp, lr}
   1b4dc:	add	fp, sp, #16
   1b4e0:	mov	r4, r0
   1b4e4:	mov	r5, r0
   1b4e8:	ldrb	r6, [r5], #-1
   1b4ec:	bl	1a804 <putc_unlocked@plt+0x864c>
   1b4f0:	sub	r2, r0, r4
   1b4f4:	sub	r0, r6, #47	; 0x2f
   1b4f8:	clz	r0, r0
   1b4fc:	lsr	r1, r0, #5
   1b500:	mov	r0, r2
   1b504:	cmp	r2, r1
   1b508:	popls	{r4, r5, r6, sl, fp, pc}
   1b50c:	ldrb	r3, [r5, r0]
   1b510:	sub	r2, r0, #1
   1b514:	cmp	r3, #47	; 0x2f
   1b518:	beq	1b500 <putc_unlocked@plt+0x9348>
   1b51c:	pop	{r4, r5, r6, sl, fp, pc}
   1b520:	push	{r4, r5, r6, sl, fp, lr}
   1b524:	add	fp, sp, #16
   1b528:	mov	r6, r0
   1b52c:	bl	1b4d8 <putc_unlocked@plt+0x9320>
   1b530:	mov	r4, r0
   1b534:	cmp	r0, #0
   1b538:	addeq	r0, r0, #1
   1b53c:	add	r0, r0, #1
   1b540:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1b544:	mov	r5, r0
   1b548:	cmp	r0, #0
   1b54c:	beq	1b578 <putc_unlocked@plt+0x93c0>
   1b550:	mov	r0, r5
   1b554:	mov	r1, r6
   1b558:	mov	r2, r4
   1b55c:	bl	11d74 <memcpy@plt>
   1b560:	cmp	r4, #0
   1b564:	moveq	r0, #46	; 0x2e
   1b568:	strbeq	r0, [r5, r4]
   1b56c:	moveq	r4, #1
   1b570:	mov	r0, #0
   1b574:	strb	r0, [r5, r4]
   1b578:	mov	r0, r5
   1b57c:	pop	{r4, r5, r6, sl, fp, pc}
   1b580:	mov	r0, #0
   1b584:	bx	lr
   1b588:	push	{r4, r5, r6, r7, fp, lr}
   1b58c:	add	fp, sp, #16
   1b590:	cmp	r0, #0
   1b594:	popeq	{r4, r5, r6, r7, fp, pc}
   1b598:	mov	r6, r2
   1b59c:	mov	r7, r1
   1b5a0:	mov	r5, r0
   1b5a4:	mov	r0, #24
   1b5a8:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   1b5ac:	mov	r4, r0
   1b5b0:	mov	r0, r7
   1b5b4:	bl	23154 <_obstack_memory_used@@Base+0x2d8c>
   1b5b8:	str	r0, [r4]
   1b5bc:	ldrd	r0, [r6, #96]	; 0x60
   1b5c0:	str	r1, [r4, #12]
   1b5c4:	str	r0, [r4, #8]
   1b5c8:	ldrd	r0, [r6]
   1b5cc:	str	r1, [r4, #20]
   1b5d0:	str	r0, [r4, #16]
   1b5d4:	mov	r0, r5
   1b5d8:	mov	r1, r4
   1b5dc:	bl	1ca98 <putc_unlocked@plt+0xa8e0>
   1b5e0:	cmp	r0, #0
   1b5e4:	beq	1b600 <putc_unlocked@plt+0x9448>
   1b5e8:	cmp	r0, r4
   1b5ec:	beq	1b5fc <putc_unlocked@plt+0x9444>
   1b5f0:	mov	r0, r4
   1b5f4:	pop	{r4, r5, r6, r7, fp, lr}
   1b5f8:	b	1cd30 <putc_unlocked@plt+0xab78>
   1b5fc:	pop	{r4, r5, r6, r7, fp, pc}
   1b600:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   1b604:	cmp	r0, #0
   1b608:	moveq	r0, #0
   1b60c:	bxeq	lr
   1b610:	push	{r4, r5, fp, lr}
   1b614:	add	fp, sp, #8
   1b618:	sub	sp, sp, #24
   1b61c:	str	r1, [sp]
   1b620:	ldrd	r4, [r2, #96]	; 0x60
   1b624:	str	r5, [sp, #12]
   1b628:	str	r4, [sp, #8]
   1b62c:	ldrd	r2, [r2]
   1b630:	str	r3, [sp, #20]
   1b634:	str	r2, [sp, #16]
   1b638:	mov	r1, sp
   1b63c:	bl	1bf80 <putc_unlocked@plt+0x9dc8>
   1b640:	cmp	r0, #0
   1b644:	movwne	r0, #1
   1b648:	sub	sp, fp, #8
   1b64c:	pop	{r4, r5, fp, pc}
   1b650:	push	{r4, r5, fp, lr}
   1b654:	add	fp, sp, #8
   1b658:	mov	r4, r1
   1b65c:	mov	r5, r0
   1b660:	bl	1b734 <putc_unlocked@plt+0x957c>
   1b664:	strb	r0, [r4]
   1b668:	mov	r0, #114	; 0x72
   1b66c:	tst	r5, #256	; 0x100
   1b670:	mov	r1, #114	; 0x72
   1b674:	movweq	r1, #45	; 0x2d
   1b678:	strb	r1, [r4, #1]
   1b67c:	mov	r1, #119	; 0x77
   1b680:	tst	r5, #128	; 0x80
   1b684:	mov	r2, #119	; 0x77
   1b688:	movweq	r2, #45	; 0x2d
   1b68c:	strb	r2, [r4, #2]
   1b690:	tst	r5, #32
   1b694:	mov	r2, #114	; 0x72
   1b698:	movweq	r2, #45	; 0x2d
   1b69c:	strb	r2, [r4, #4]
   1b6a0:	tst	r5, #16
   1b6a4:	mov	r2, #119	; 0x77
   1b6a8:	movweq	r2, #45	; 0x2d
   1b6ac:	strb	r2, [r4, #5]
   1b6b0:	tst	r5, #4
   1b6b4:	movweq	r0, #45	; 0x2d
   1b6b8:	strb	r0, [r4, #7]
   1b6bc:	tst	r5, #2
   1b6c0:	movweq	r1, #45	; 0x2d
   1b6c4:	strb	r1, [r4, #8]
   1b6c8:	mov	r0, #32
   1b6cc:	strh	r0, [r4, #10]
   1b6d0:	ands	r0, r5, #64	; 0x40
   1b6d4:	mov	r0, #45	; 0x2d
   1b6d8:	mov	r1, #45	; 0x2d
   1b6dc:	movwne	r1, #120	; 0x78
   1b6e0:	mov	r2, #83	; 0x53
   1b6e4:	mov	r3, #83	; 0x53
   1b6e8:	movwne	r3, #115	; 0x73
   1b6ec:	tst	r5, #2048	; 0x800
   1b6f0:	moveq	r3, r1
   1b6f4:	strb	r3, [r4, #3]
   1b6f8:	ands	r1, r5, #8
   1b6fc:	mov	r1, #45	; 0x2d
   1b700:	movwne	r1, #120	; 0x78
   1b704:	movwne	r2, #115	; 0x73
   1b708:	tst	r5, #1024	; 0x400
   1b70c:	moveq	r2, r1
   1b710:	strb	r2, [r4, #6]
   1b714:	ands	r1, r5, #1
   1b718:	movwne	r0, #120	; 0x78
   1b71c:	mov	r1, #84	; 0x54
   1b720:	movwne	r1, #116	; 0x74
   1b724:	tst	r5, #512	; 0x200
   1b728:	moveq	r1, r0
   1b72c:	strb	r1, [r4, #9]
   1b730:	pop	{r4, r5, fp, pc}
   1b734:	and	r0, r0, #61440	; 0xf000
   1b738:	sub	r0, r0, #4096	; 0x1000
   1b73c:	lsr	r1, r0, #12
   1b740:	cmp	r1, #11
   1b744:	bhi	1b794 <putc_unlocked@plt+0x95dc>
   1b748:	mov	r0, #45	; 0x2d
   1b74c:	add	r2, pc, #0
   1b750:	ldr	pc, [r2, r1, lsl #2]
   1b754:	andeq	fp, r1, r4, lsl #15
   1b758:	andeq	fp, r1, ip, lsl #15
   1b75c:	muleq	r1, r4, r7
   1b760:	muleq	r1, ip, r7
   1b764:	muleq	r1, r4, r7
   1b768:			; <UNDEFINED> instruction: 0x0001b7b4
   1b76c:	muleq	r1, r4, r7
   1b770:	muleq	r1, r8, r7
   1b774:	muleq	r1, r4, r7
   1b778:	andeq	fp, r1, r4, lsr #15
   1b77c:	muleq	r1, r4, r7
   1b780:	andeq	fp, r1, ip, lsr #15
   1b784:	mov	r0, #112	; 0x70
   1b788:	bx	lr
   1b78c:	mov	r0, #99	; 0x63
   1b790:	bx	lr
   1b794:	mov	r0, #63	; 0x3f
   1b798:	bx	lr
   1b79c:	mov	r0, #100	; 0x64
   1b7a0:	bx	lr
   1b7a4:	mov	r0, #108	; 0x6c
   1b7a8:	bx	lr
   1b7ac:	mov	r0, #115	; 0x73
   1b7b0:	bx	lr
   1b7b4:	mov	r0, #98	; 0x62
   1b7b8:	bx	lr
   1b7bc:	ldr	r0, [r0, #16]
   1b7c0:	b	1b650 <putc_unlocked@plt+0x9498>
   1b7c4:	push	{fp, lr}
   1b7c8:	mov	fp, sp
   1b7cc:	bl	1b7dc <putc_unlocked@plt+0x9624>
   1b7d0:	cmp	r0, #0
   1b7d4:	popne	{fp, pc}
   1b7d8:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   1b7dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7e0:	add	fp, sp, #28
   1b7e4:	push	{r2}		; (str r2, [sp, #-4]!)
   1b7e8:	mov	sl, r1
   1b7ec:	mov	r7, r0
   1b7f0:	bl	1a804 <putc_unlocked@plt+0x864c>
   1b7f4:	sub	r4, r0, r7
   1b7f8:	bl	1a850 <putc_unlocked@plt+0x8698>
   1b7fc:	mov	r6, r0
   1b800:	add	r5, r4, r0
   1b804:	mov	r0, sl
   1b808:	bl	11fc0 <strlen@plt>
   1b80c:	mov	r9, r0
   1b810:	cmp	r6, #0
   1b814:	beq	1b83c <putc_unlocked@plt+0x9684>
   1b818:	add	r0, r7, r5
   1b81c:	ldrb	r0, [r0, #-1]
   1b820:	mov	r4, #0
   1b824:	cmp	r0, #47	; 0x2f
   1b828:	beq	1b84c <putc_unlocked@plt+0x9694>
   1b82c:	ldrb	r0, [sl]
   1b830:	subs	r4, r0, #47	; 0x2f
   1b834:	movwne	r4, #47	; 0x2f
   1b838:	b	1b84c <putc_unlocked@plt+0x9694>
   1b83c:	ldrb	r0, [sl]
   1b840:	mov	r4, #0
   1b844:	cmp	r0, #47	; 0x2f
   1b848:	movweq	r4, #46	; 0x2e
   1b84c:	add	r0, r9, r5
   1b850:	uxtb	r8, r4
   1b854:	cmp	r8, #0
   1b858:	movwne	r8, #1
   1b85c:	add	r0, r0, r8
   1b860:	add	r0, r0, #1
   1b864:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1b868:	mov	r6, r0
   1b86c:	cmp	r0, #0
   1b870:	beq	1b8b0 <putc_unlocked@plt+0x96f8>
   1b874:	mov	r0, r6
   1b878:	mov	r1, r7
   1b87c:	mov	r2, r5
   1b880:	mvn	r3, #0
   1b884:	bl	121a0 <__mempcpy_chk@plt>
   1b888:	strb	r4, [r0], r8
   1b88c:	ldr	r1, [sp]
   1b890:	cmp	r1, #0
   1b894:	strne	r0, [r1]
   1b898:	mov	r1, sl
   1b89c:	mov	r2, r9
   1b8a0:	mvn	r3, #0
   1b8a4:	bl	121a0 <__mempcpy_chk@plt>
   1b8a8:	mov	r1, #0
   1b8ac:	strb	r1, [r0]
   1b8b0:	mov	r0, r6
   1b8b4:	sub	sp, fp, #28
   1b8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8c0:	add	fp, sp, #28
   1b8c4:	sub	sp, sp, #12
   1b8c8:	mov	r5, r1
   1b8cc:	mov	r6, r0
   1b8d0:	bl	11ccc <strcmp@plt>
   1b8d4:	cmp	r0, #0
   1b8d8:	beq	1b984 <putc_unlocked@plt+0x97cc>
   1b8dc:	ldrb	r4, [r6]
   1b8e0:	mvn	r7, #0
   1b8e4:	cmp	r4, #0
   1b8e8:	beq	1b990 <putc_unlocked@plt+0x97d8>
   1b8ec:	ldrb	r8, [r5]
   1b8f0:	cmp	r8, #0
   1b8f4:	beq	1b98c <putc_unlocked@plt+0x97d4>
   1b8f8:	mov	sl, r0
   1b8fc:	movw	r0, #34110	; 0x853e
   1b900:	movt	r0, #2
   1b904:	mov	r1, r6
   1b908:	bl	11ccc <strcmp@plt>
   1b90c:	cmp	r0, #0
   1b910:	beq	1b990 <putc_unlocked@plt+0x97d8>
   1b914:	movw	r0, #34110	; 0x853e
   1b918:	movt	r0, #2
   1b91c:	mov	r1, r5
   1b920:	bl	11ccc <strcmp@plt>
   1b924:	cmp	r0, #0
   1b928:	beq	1b98c <putc_unlocked@plt+0x97d4>
   1b92c:	movw	r0, #34109	; 0x853d
   1b930:	movt	r0, #2
   1b934:	mov	r1, r6
   1b938:	bl	11ccc <strcmp@plt>
   1b93c:	cmp	r0, #0
   1b940:	beq	1b990 <putc_unlocked@plt+0x97d8>
   1b944:	movw	r0, #34109	; 0x853d
   1b948:	movt	r0, #2
   1b94c:	mov	r1, r5
   1b950:	bl	11ccc <strcmp@plt>
   1b954:	cmp	r0, #0
   1b958:	beq	1b98c <putc_unlocked@plt+0x97d4>
   1b95c:	cmp	r4, #46	; 0x2e
   1b960:	bne	1b96c <putc_unlocked@plt+0x97b4>
   1b964:	cmp	r8, #46	; 0x2e
   1b968:	bne	1b990 <putc_unlocked@plt+0x97d8>
   1b96c:	cmp	r4, #46	; 0x2e
   1b970:	bne	1b99c <putc_unlocked@plt+0x97e4>
   1b974:	cmp	r8, #46	; 0x2e
   1b978:	addeq	r5, r5, #1
   1b97c:	addeq	r6, r6, #1
   1b980:	b	1b9a8 <putc_unlocked@plt+0x97f0>
   1b984:	mov	r7, #0
   1b988:	b	1b990 <putc_unlocked@plt+0x97d8>
   1b98c:	mov	r7, #1
   1b990:	mov	r0, r7
   1b994:	sub	sp, fp, #28
   1b998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b99c:	cmp	r8, #46	; 0x2e
   1b9a0:	mov	r7, #1
   1b9a4:	beq	1b990 <putc_unlocked@plt+0x97d8>
   1b9a8:	stmib	sp, {r5, r6}
   1b9ac:	add	r0, sp, #8
   1b9b0:	bl	1ba3c <putc_unlocked@plt+0x9884>
   1b9b4:	mov	r7, r0
   1b9b8:	add	r0, sp, #4
   1b9bc:	bl	1ba3c <putc_unlocked@plt+0x9884>
   1b9c0:	ldr	r2, [sp, #4]
   1b9c4:	cmp	r0, #0
   1b9c8:	mov	r1, r2
   1b9cc:	movne	r1, r0
   1b9d0:	sub	r8, r1, r5
   1b9d4:	ldr	r4, [sp, #8]
   1b9d8:	cmp	r7, #0
   1b9dc:	mov	r1, r4
   1b9e0:	movne	r1, r7
   1b9e4:	sub	r9, r1, r6
   1b9e8:	orrs	r0, r7, r0
   1b9ec:	beq	1ba18 <putc_unlocked@plt+0x9860>
   1b9f0:	cmp	r9, r8
   1b9f4:	bne	1ba18 <putc_unlocked@plt+0x9860>
   1b9f8:	mov	r7, r2
   1b9fc:	mov	r0, r6
   1ba00:	mov	r1, r5
   1ba04:	mov	r2, r9
   1ba08:	bl	12140 <strncmp@plt>
   1ba0c:	cmp	r0, #0
   1ba10:	subeq	r8, r7, r5
   1ba14:	subeq	r9, r4, r6
   1ba18:	mov	r0, r6
   1ba1c:	mov	r1, r9
   1ba20:	mov	r2, r5
   1ba24:	mov	r3, r8
   1ba28:	bl	1badc <putc_unlocked@plt+0x9924>
   1ba2c:	cmp	r0, #0
   1ba30:	movne	sl, r0
   1ba34:	mov	r7, sl
   1ba38:	b	1b990 <putc_unlocked@plt+0x97d8>
   1ba3c:	push	{r4, r5, fp, lr}
   1ba40:	add	fp, sp, #8
   1ba44:	mov	r4, r0
   1ba48:	ldr	r2, [r0]
   1ba4c:	ldrb	r0, [r2]
   1ba50:	cmp	r0, #0
   1ba54:	moveq	r5, #0
   1ba58:	moveq	r0, r5
   1ba5c:	popeq	{r4, r5, fp, pc}
   1ba60:	mov	r1, #0
   1ba64:	mov	r5, #0
   1ba68:	b	1ba88 <putc_unlocked@plt+0x98d0>
   1ba6c:	ldr	r0, [r4]
   1ba70:	add	r2, r0, #1
   1ba74:	str	r2, [r4]
   1ba78:	ldrb	r0, [r0, #1]
   1ba7c:	cmp	r0, #0
   1ba80:	moveq	r0, r5
   1ba84:	popeq	{r4, r5, fp, pc}
   1ba88:	uxtb	r0, r0
   1ba8c:	tst	r1, #1
   1ba90:	beq	1ba9c <putc_unlocked@plt+0x98e4>
   1ba94:	bl	1a8b8 <putc_unlocked@plt+0x8700>
   1ba98:	b	1bab8 <putc_unlocked@plt+0x9900>
   1ba9c:	cmp	r0, #46	; 0x2e
   1baa0:	bne	1bab4 <putc_unlocked@plt+0x98fc>
   1baa4:	cmp	r5, #0
   1baa8:	moveq	r5, r2
   1baac:	mov	r1, #1
   1bab0:	b	1ba6c <putc_unlocked@plt+0x98b4>
   1bab4:	bl	1a888 <putc_unlocked@plt+0x86d0>
   1bab8:	mov	r1, #0
   1babc:	cmp	r0, #0
   1bac0:	bne	1ba6c <putc_unlocked@plt+0x98b4>
   1bac4:	ldr	r0, [r4]
   1bac8:	ldrb	r0, [r0]
   1bacc:	mov	r1, #0
   1bad0:	cmp	r0, #126	; 0x7e
   1bad4:	movne	r5, r1
   1bad8:	b	1ba6c <putc_unlocked@plt+0x98b4>
   1badc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bae0:	add	fp, sp, #28
   1bae4:	sub	sp, sp, #20
   1bae8:	mov	r6, r3
   1baec:	mov	r5, r2
   1baf0:	str	r1, [sp, #16]
   1baf4:	mov	r7, r0
   1baf8:	mov	r8, #0
   1bafc:	mov	r9, #0
   1bb00:	str	r3, [sp, #12]
   1bb04:	str	r0, [sp, #8]
   1bb08:	cmp	r8, r6
   1bb0c:	ldrcs	r0, [sp, #16]
   1bb10:	cmpcs	r9, r0
   1bb14:	bcs	1bcb0 <putc_unlocked@plt+0x9af8>
   1bb18:	add	sl, r7, r9
   1bb1c:	sub	r7, r9, #1
   1bb20:	b	1bb34 <putc_unlocked@plt+0x997c>
   1bb24:	add	sl, sl, #1
   1bb28:	add	r7, r7, #1
   1bb2c:	add	r8, r8, #1
   1bb30:	add	r9, r9, #1
   1bb34:	ldr	r0, [sp, #16]
   1bb38:	cmp	r9, r0
   1bb3c:	bcs	1bb54 <putc_unlocked@plt+0x999c>
   1bb40:	ldr	r0, [sp, #8]
   1bb44:	ldrb	r0, [r0, r9]
   1bb48:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bb4c:	cmp	r0, #0
   1bb50:	beq	1bb70 <putc_unlocked@plt+0x99b8>
   1bb54:	ldr	r0, [sp, #12]
   1bb58:	cmp	r8, r0
   1bb5c:	bcs	1bbb8 <putc_unlocked@plt+0x9a00>
   1bb60:	ldrb	r0, [r5, r8]
   1bb64:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bb68:	cmp	r0, #0
   1bb6c:	bne	1bbb8 <putc_unlocked@plt+0x9a00>
   1bb70:	mov	r4, #0
   1bb74:	ldr	r0, [sp, #16]
   1bb78:	cmp	r0, r9
   1bb7c:	mov	r6, #0
   1bb80:	beq	1bb94 <putc_unlocked@plt+0x99dc>
   1bb84:	ldr	r0, [sp, #8]
   1bb88:	ldrb	r0, [r0, r9]
   1bb8c:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1bb90:	mov	r6, r0
   1bb94:	ldr	r0, [sp, #12]
   1bb98:	cmp	r0, r8
   1bb9c:	beq	1bbac <putc_unlocked@plt+0x99f4>
   1bba0:	ldrb	r0, [r5, r8]
   1bba4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1bba8:	mov	r4, r0
   1bbac:	cmp	r6, r4
   1bbb0:	beq	1bb24 <putc_unlocked@plt+0x996c>
   1bbb4:	b	1bca0 <putc_unlocked@plt+0x9ae8>
   1bbb8:	mov	r9, r7
   1bbbc:	ldr	r7, [sp, #8]
   1bbc0:	mov	r6, sl
   1bbc4:	add	r0, r7, r9
   1bbc8:	ldrb	r0, [r0, #1]
   1bbcc:	add	sl, sl, #1
   1bbd0:	add	r9, r9, #1
   1bbd4:	cmp	r0, #48	; 0x30
   1bbd8:	beq	1bbc0 <putc_unlocked@plt+0x9a08>
   1bbdc:	ldrb	r0, [r5, r8]
   1bbe0:	add	r8, r8, #1
   1bbe4:	cmp	r0, #48	; 0x30
   1bbe8:	beq	1bbdc <putc_unlocked@plt+0x9a24>
   1bbec:	mov	sl, r7
   1bbf0:	ldrb	r0, [sl, r9]!
   1bbf4:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bbf8:	cmp	r0, #0
   1bbfc:	beq	1bc68 <putc_unlocked@plt+0x9ab0>
   1bc00:	add	r0, r5, r8
   1bc04:	str	r0, [sp, #4]
   1bc08:	mov	r7, #0
   1bc0c:	mov	r4, #0
   1bc10:	ldr	r0, [sp, #4]
   1bc14:	add	sl, r0, r7
   1bc18:	ldrb	r0, [sl, #-1]
   1bc1c:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bc20:	cmp	r0, #0
   1bc24:	beq	1bc4c <putc_unlocked@plt+0x9a94>
   1bc28:	cmp	r4, #0
   1bc2c:	ldrbeq	r0, [sl, #-1]
   1bc30:	ldrbeq	r1, [r6]
   1bc34:	subeq	r4, r1, r0
   1bc38:	ldrb	r0, [r6, #1]!
   1bc3c:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bc40:	add	r7, r7, #1
   1bc44:	cmp	r0, #0
   1bc48:	bne	1bc10 <putc_unlocked@plt+0x9a58>
   1bc4c:	add	r9, r9, r7
   1bc50:	add	r0, r8, r7
   1bc54:	sub	r8, r0, #1
   1bc58:	mov	sl, r6
   1bc5c:	ldr	r6, [sp, #12]
   1bc60:	ldr	r7, [sp, #8]
   1bc64:	b	1bc74 <putc_unlocked@plt+0x9abc>
   1bc68:	sub	r8, r8, #1
   1bc6c:	mov	r4, #0
   1bc70:	ldr	r6, [sp, #12]
   1bc74:	ldrb	r0, [sl]
   1bc78:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bc7c:	cmp	r0, #0
   1bc80:	bne	1bcb8 <putc_unlocked@plt+0x9b00>
   1bc84:	ldrb	r0, [r5, r8]
   1bc88:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bc8c:	cmp	r0, #0
   1bc90:	bne	1bcc0 <putc_unlocked@plt+0x9b08>
   1bc94:	cmp	r4, #0
   1bc98:	beq	1bb08 <putc_unlocked@plt+0x9950>
   1bc9c:	b	1bca4 <putc_unlocked@plt+0x9aec>
   1bca0:	sub	r4, r6, r4
   1bca4:	mov	r0, r4
   1bca8:	sub	sp, fp, #28
   1bcac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bcb0:	mov	r4, #0
   1bcb4:	b	1bca4 <putc_unlocked@plt+0x9aec>
   1bcb8:	mov	r4, #1
   1bcbc:	b	1bca4 <putc_unlocked@plt+0x9aec>
   1bcc0:	mvn	r4, #0
   1bcc4:	b	1bca4 <putc_unlocked@plt+0x9aec>
   1bcc8:	push	{r4, sl, fp, lr}
   1bccc:	add	fp, sp, #8
   1bcd0:	mov	r4, r0
   1bcd4:	bl	1a928 <putc_unlocked@plt+0x8770>
   1bcd8:	mov	r1, r0
   1bcdc:	mov	r0, #0
   1bce0:	cmp	r1, #0
   1bce4:	bne	1bd08 <putc_unlocked@plt+0x9b50>
   1bce8:	mov	r0, r4
   1bcec:	bl	1a8b8 <putc_unlocked@plt+0x8700>
   1bcf0:	cmp	r0, #0
   1bcf4:	mov	r0, r4
   1bcf8:	popne	{r4, sl, fp, pc}
   1bcfc:	orr	r0, r4, #256	; 0x100
   1bd00:	cmp	r4, #126	; 0x7e
   1bd04:	mvneq	r0, #0
   1bd08:	pop	{r4, sl, fp, pc}
   1bd0c:	push	{r4, r5, r6, sl, fp, lr}
   1bd10:	add	fp, sp, #16
   1bd14:	mov	r4, r0
   1bd18:	bl	11fe4 <__errno_location@plt>
   1bd1c:	mov	r5, r0
   1bd20:	ldr	r6, [r0]
   1bd24:	mov	r0, r4
   1bd28:	bl	11d44 <free@plt>
   1bd2c:	str	r6, [r5]
   1bd30:	pop	{r4, r5, r6, sl, fp, pc}
   1bd34:	mov	r1, r0
   1bd38:	mov	r0, #0
   1bd3c:	b	11d5c <clock_gettime@plt>
   1bd40:	push	{fp, lr}
   1bd44:	mov	fp, sp
   1bd48:	bl	1bd34 <putc_unlocked@plt+0x9b7c>
   1bd4c:	pop	{fp, pc}
   1bd50:	push	{r4, sl, fp, lr}
   1bd54:	add	fp, sp, #8
   1bd58:	sub	sp, sp, #264	; 0x108
   1bd5c:	add	r1, sp, #7
   1bd60:	movw	r2, #257	; 0x101
   1bd64:	bl	222e4 <_obstack_memory_used@@Base+0x1f1c>
   1bd68:	mov	r4, #0
   1bd6c:	cmp	r0, #0
   1bd70:	bne	1bda8 <putc_unlocked@plt+0x9bf0>
   1bd74:	add	r0, sp, #7
   1bd78:	movw	r1, #34112	; 0x8540
   1bd7c:	movt	r1, #2
   1bd80:	bl	11ccc <strcmp@plt>
   1bd84:	cmp	r0, #0
   1bd88:	beq	1bda8 <putc_unlocked@plt+0x9bf0>
   1bd8c:	add	r0, sp, #7
   1bd90:	movw	r1, #34114	; 0x8542
   1bd94:	movt	r1, #2
   1bd98:	bl	11ccc <strcmp@plt>
   1bd9c:	mov	r4, r0
   1bda0:	cmp	r0, #0
   1bda4:	movwne	r4, #1
   1bda8:	mov	r0, r4
   1bdac:	sub	sp, fp, #8
   1bdb0:	pop	{r4, sl, fp, pc}
   1bdb4:	andeq	r0, r0, r0
   1bdb8:	ldr	r0, [r0, #8]
   1bdbc:	bx	lr
   1bdc0:	ldr	r0, [r0, #12]
   1bdc4:	bx	lr
   1bdc8:	ldr	r0, [r0, #16]
   1bdcc:	bx	lr
   1bdd0:	mov	r2, r0
   1bdd4:	ldm	r0, {r1, r3}
   1bdd8:	mov	r0, #0
   1bddc:	cmp	r1, r3
   1bde0:	bxcs	lr
   1bde4:	ldr	ip, [r2, #4]
   1bde8:	mov	r0, #0
   1bdec:	ldr	r2, [r1]
   1bdf0:	cmp	r2, #0
   1bdf4:	beq	1be18 <putc_unlocked@plt+0x9c60>
   1bdf8:	mov	r3, #0
   1bdfc:	mov	r2, r1
   1be00:	add	r3, r3, #1
   1be04:	ldr	r2, [r2, #4]
   1be08:	cmp	r2, #0
   1be0c:	bne	1be00 <putc_unlocked@plt+0x9c48>
   1be10:	cmp	r3, r0
   1be14:	movhi	r0, r3
   1be18:	add	r1, r1, #8
   1be1c:	cmp	r1, ip
   1be20:	bcc	1bdec <putc_unlocked@plt+0x9c34>
   1be24:	bx	lr
   1be28:	push	{fp, lr}
   1be2c:	mov	fp, sp
   1be30:	ldr	r3, [r0]
   1be34:	ldr	r1, [r0, #4]
   1be38:	mov	lr, #0
   1be3c:	cmp	r3, r1
   1be40:	mov	r1, #0
   1be44:	bcs	1be84 <putc_unlocked@plt+0x9ccc>
   1be48:	ldr	ip, [r0, #4]
   1be4c:	mov	r1, #0
   1be50:	mov	lr, #0
   1be54:	ldr	r2, [r3]
   1be58:	cmp	r2, #0
   1be5c:	beq	1be78 <putc_unlocked@plt+0x9cc0>
   1be60:	mov	r2, r3
   1be64:	add	r1, r1, #1
   1be68:	ldr	r2, [r2, #4]
   1be6c:	cmp	r2, #0
   1be70:	bne	1be64 <putc_unlocked@plt+0x9cac>
   1be74:	add	lr, lr, #1
   1be78:	add	r3, r3, #8
   1be7c:	cmp	r3, ip
   1be80:	bcc	1be54 <putc_unlocked@plt+0x9c9c>
   1be84:	ldr	r2, [r0, #12]
   1be88:	cmp	lr, r2
   1be8c:	bne	1bea4 <putc_unlocked@plt+0x9cec>
   1be90:	ldr	r2, [r0, #16]
   1be94:	mov	r0, #1
   1be98:	cmp	r1, r2
   1be9c:	movne	r0, #0
   1bea0:	pop	{fp, pc}
   1bea4:	mov	r0, #0
   1bea8:	pop	{fp, pc}
   1beac:	nop	{0}
   1beb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1beb4:	add	fp, sp, #24
   1beb8:	sub	sp, sp, #8
   1bebc:	mov	r4, r1
   1bec0:	mov	r5, r0
   1bec4:	bl	1bdc8 <putc_unlocked@plt+0x9c10>
   1bec8:	mov	r8, r0
   1becc:	mov	r0, r5
   1bed0:	bl	1bdb8 <putc_unlocked@plt+0x9c00>
   1bed4:	mov	r7, r0
   1bed8:	mov	r0, r5
   1bedc:	bl	1bdc0 <putc_unlocked@plt+0x9c08>
   1bee0:	mov	r6, r0
   1bee4:	mov	r0, r5
   1bee8:	bl	1bdd0 <putc_unlocked@plt+0x9c18>
   1beec:	mov	r5, r0
   1bef0:	movw	r2, #34120	; 0x8548
   1bef4:	movt	r2, #2
   1bef8:	mov	r0, r4
   1befc:	mov	r1, #1
   1bf00:	mov	r3, r8
   1bf04:	bl	12044 <__fprintf_chk@plt>
   1bf08:	movw	r2, #34144	; 0x8560
   1bf0c:	movt	r2, #2
   1bf10:	mov	r0, r4
   1bf14:	mov	r1, #1
   1bf18:	mov	r3, r7
   1bf1c:	bl	12044 <__fprintf_chk@plt>
   1bf20:	vldr	d16, [pc, #80]	; 1bf78 <putc_unlocked@plt+0x9dc0>
   1bf24:	vmov	s0, r6
   1bf28:	vmov	s2, r7
   1bf2c:	vcvt.f64.u32	d17, s0
   1bf30:	vcvt.f64.u32	d18, s2
   1bf34:	vmul.f64	d16, d17, d16
   1bf38:	vdiv.f64	d16, d16, d18
   1bf3c:	vstr	d16, [sp]
   1bf40:	movw	r2, #34168	; 0x8578
   1bf44:	movt	r2, #2
   1bf48:	mov	r0, r4
   1bf4c:	mov	r1, #1
   1bf50:	mov	r3, r6
   1bf54:	bl	12044 <__fprintf_chk@plt>
   1bf58:	movw	r2, #34201	; 0x8599
   1bf5c:	movt	r2, #2
   1bf60:	mov	r0, r4
   1bf64:	mov	r1, #1
   1bf68:	mov	r3, r5
   1bf6c:	sub	sp, fp, #24
   1bf70:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bf74:	b	12044 <__fprintf_chk@plt>
   1bf78:	andeq	r0, r0, r0
   1bf7c:	subsmi	r0, r9, r0
   1bf80:	push	{r4, r5, r6, r7, fp, lr}
   1bf84:	add	fp, sp, #16
   1bf88:	mov	r5, r1
   1bf8c:	mov	r6, r0
   1bf90:	bl	1bfe4 <putc_unlocked@plt+0x9e2c>
   1bf94:	mov	r7, r0
   1bf98:	ldr	r0, [r0]
   1bf9c:	mov	r4, #0
   1bfa0:	cmp	r0, #0
   1bfa4:	bne	1bfb0 <putc_unlocked@plt+0x9df8>
   1bfa8:	b	1bfdc <putc_unlocked@plt+0x9e24>
   1bfac:	ldr	r7, [r7, #4]
   1bfb0:	cmp	r7, #0
   1bfb4:	beq	1bfdc <putc_unlocked@plt+0x9e24>
   1bfb8:	ldr	r1, [r7]
   1bfbc:	cmp	r1, r5
   1bfc0:	beq	1bfd8 <putc_unlocked@plt+0x9e20>
   1bfc4:	ldr	r2, [r6, #28]
   1bfc8:	mov	r0, r5
   1bfcc:	blx	r2
   1bfd0:	cmp	r0, #0
   1bfd4:	beq	1bfac <putc_unlocked@plt+0x9df4>
   1bfd8:	ldr	r4, [r7]
   1bfdc:	mov	r0, r4
   1bfe0:	pop	{r4, r5, r6, r7, fp, pc}
   1bfe4:	push	{r4, sl, fp, lr}
   1bfe8:	add	fp, sp, #8
   1bfec:	mov	r2, r1
   1bff0:	mov	r4, r0
   1bff4:	ldr	r1, [r0, #8]
   1bff8:	ldr	r3, [r0, #24]
   1bffc:	mov	r0, r2
   1c000:	blx	r3
   1c004:	ldr	r1, [r4, #8]
   1c008:	cmp	r0, r1
   1c00c:	ldrcc	r1, [r4]
   1c010:	addcc	r0, r1, r0, lsl #3
   1c014:	popcc	{r4, sl, fp, pc}
   1c018:	bl	1214c <abort@plt>
   1c01c:	ldr	r1, [r0, #16]
   1c020:	cmp	r1, #0
   1c024:	moveq	r1, #0
   1c028:	moveq	r0, r1
   1c02c:	bxeq	lr
   1c030:	ldr	r2, [r0]
   1c034:	b	1c048 <putc_unlocked@plt+0x9e90>
   1c038:	ldr	r1, [r2], #8
   1c03c:	cmp	r1, #0
   1c040:	movne	r0, r1
   1c044:	bxne	lr
   1c048:	ldr	r1, [r0, #4]
   1c04c:	cmp	r2, r1
   1c050:	bcc	1c038 <putc_unlocked@plt+0x9e80>
   1c054:	push	{fp, lr}
   1c058:	mov	fp, sp
   1c05c:	bl	1214c <abort@plt>
   1c060:	push	{r4, r5, fp, lr}
   1c064:	add	fp, sp, #8
   1c068:	mov	r5, r1
   1c06c:	mov	r4, r0
   1c070:	bl	1bfe4 <putc_unlocked@plt+0x9e2c>
   1c074:	mov	r1, r0
   1c078:	ldr	r2, [r1]
   1c07c:	cmp	r2, r5
   1c080:	bne	1c094 <putc_unlocked@plt+0x9edc>
   1c084:	ldr	r2, [r1, #4]
   1c088:	cmp	r2, #0
   1c08c:	ldrne	r0, [r2]
   1c090:	popne	{r4, r5, fp, pc}
   1c094:	ldr	r1, [r1, #4]
   1c098:	cmp	r1, #0
   1c09c:	bne	1c078 <putc_unlocked@plt+0x9ec0>
   1c0a0:	add	r1, r0, #8
   1c0a4:	ldr	r2, [r4, #4]
   1c0a8:	cmp	r1, r2
   1c0ac:	movcs	r0, #0
   1c0b0:	popcs	{r4, r5, fp, pc}
   1c0b4:	ldr	r0, [r1], #8
   1c0b8:	cmp	r0, #0
   1c0bc:	popne	{r4, r5, fp, pc}
   1c0c0:	b	1c0a8 <putc_unlocked@plt+0x9ef0>
   1c0c4:	push	{r4, sl, fp, lr}
   1c0c8:	add	fp, sp, #8
   1c0cc:	mov	ip, r0
   1c0d0:	ldr	lr, [r0]
   1c0d4:	ldr	r3, [r0, #4]
   1c0d8:	mov	r0, #0
   1c0dc:	cmp	lr, r3
   1c0e0:	bcs	1c12c <putc_unlocked@plt+0x9f74>
   1c0e4:	mov	r0, #0
   1c0e8:	ldr	r3, [lr]
   1c0ec:	cmp	r3, #0
   1c0f0:	cmpne	lr, #0
   1c0f4:	beq	1c11c <putc_unlocked@plt+0x9f64>
   1c0f8:	mov	r3, lr
   1c0fc:	cmp	r0, r2
   1c100:	popcs	{r4, sl, fp, pc}
   1c104:	ldr	r4, [r3]
   1c108:	str	r4, [r1, r0, lsl #2]
   1c10c:	add	r0, r0, #1
   1c110:	ldr	r3, [r3, #4]
   1c114:	cmp	r3, #0
   1c118:	bne	1c0fc <putc_unlocked@plt+0x9f44>
   1c11c:	ldr	r3, [ip, #4]
   1c120:	add	lr, lr, #8
   1c124:	cmp	lr, r3
   1c128:	bcc	1c0e8 <putc_unlocked@plt+0x9f30>
   1c12c:	pop	{r4, sl, fp, pc}
   1c130:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c134:	add	fp, sp, #24
   1c138:	mov	r8, r0
   1c13c:	ldr	r9, [r0]
   1c140:	ldr	r0, [r0, #4]
   1c144:	mov	r6, #0
   1c148:	cmp	r9, r0
   1c14c:	bcs	1c1ac <putc_unlocked@plt+0x9ff4>
   1c150:	mov	r4, r2
   1c154:	mov	r5, r1
   1c158:	mov	r6, #0
   1c15c:	b	1c18c <putc_unlocked@plt+0x9fd4>
   1c160:	mov	r7, r9
   1c164:	ldr	r0, [r7]
   1c168:	mov	r1, r4
   1c16c:	blx	r5
   1c170:	cmp	r0, #0
   1c174:	beq	1c1ac <putc_unlocked@plt+0x9ff4>
   1c178:	add	r6, r6, #1
   1c17c:	ldr	r7, [r7, #4]
   1c180:	cmp	r7, #0
   1c184:	bne	1c164 <putc_unlocked@plt+0x9fac>
   1c188:	b	1c19c <putc_unlocked@plt+0x9fe4>
   1c18c:	ldr	r0, [r9]
   1c190:	cmp	r0, #0
   1c194:	cmpne	r9, #0
   1c198:	bne	1c160 <putc_unlocked@plt+0x9fa8>
   1c19c:	ldr	r0, [r8, #4]
   1c1a0:	add	r9, r9, #8
   1c1a4:	cmp	r9, r0
   1c1a8:	bcc	1c18c <putc_unlocked@plt+0x9fd4>
   1c1ac:	mov	r0, r6
   1c1b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c1b4:	ldrb	r2, [r0]
   1c1b8:	cmp	r2, #0
   1c1bc:	moveq	r0, #0
   1c1c0:	bxeq	lr
   1c1c4:	add	r3, r0, #1
   1c1c8:	mov	r0, #0
   1c1cc:	rsb	r0, r0, r0, lsl #5
   1c1d0:	uxtab	r0, r0, r2
   1c1d4:	udiv	r2, r0, r1
   1c1d8:	mls	r0, r2, r1, r0
   1c1dc:	ldrb	r2, [r3], #1
   1c1e0:	cmp	r2, #0
   1c1e4:	bne	1c1cc <putc_unlocked@plt+0xa014>
   1c1e8:	bx	lr
   1c1ec:	movw	r1, #34232	; 0x85b8
   1c1f0:	movt	r1, #2
   1c1f4:	vld1.32	{d16-d17}, [r1]!
   1c1f8:	vst1.32	{d16-d17}, [r0]!
   1c1fc:	ldr	r1, [r1]
   1c200:	str	r1, [r0]
   1c204:	bx	lr
   1c208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c20c:	add	fp, sp, #28
   1c210:	sub	sp, sp, #4
   1c214:	mov	r7, r1
   1c218:	mov	r8, r0
   1c21c:	movw	sl, #49928	; 0xc308
   1c220:	movt	sl, #1
   1c224:	cmp	r3, #0
   1c228:	movne	sl, r3
   1c22c:	movw	r5, #49896	; 0xc2e8
   1c230:	movt	r5, #1
   1c234:	cmp	r2, #0
   1c238:	movne	r5, r2
   1c23c:	mov	r0, #40	; 0x28
   1c240:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1c244:	mov	r9, #0
   1c248:	cmp	r0, #0
   1c24c:	beq	1c2dc <putc_unlocked@plt+0xa124>
   1c250:	mov	r4, r0
   1c254:	movw	r6, #34232	; 0x85b8
   1c258:	movt	r6, #2
   1c25c:	cmp	r7, #0
   1c260:	movne	r6, r7
   1c264:	str	r6, [r0, #20]
   1c268:	bl	1c318 <putc_unlocked@plt+0xa160>
   1c26c:	cmp	r0, #0
   1c270:	beq	1c2d4 <putc_unlocked@plt+0xa11c>
   1c274:	mov	r0, r8
   1c278:	mov	r1, r6
   1c27c:	bl	1c3c4 <putc_unlocked@plt+0xa20c>
   1c280:	str	r0, [r4, #8]
   1c284:	cmp	r0, #0
   1c288:	beq	1c2d4 <putc_unlocked@plt+0xa11c>
   1c28c:	mov	r1, #8
   1c290:	bl	23a10 <_obstack_memory_used@@Base+0x3648>
   1c294:	str	r0, [r4]
   1c298:	cmp	r0, #0
   1c29c:	beq	1c2d4 <putc_unlocked@plt+0xa11c>
   1c2a0:	ldr	r1, [fp, #8]
   1c2a4:	mov	r2, #0
   1c2a8:	str	r2, [r4, #12]
   1c2ac:	str	r2, [r4, #16]
   1c2b0:	str	r5, [r4, #24]
   1c2b4:	str	sl, [r4, #28]
   1c2b8:	str	r1, [r4, #32]
   1c2bc:	str	r2, [r4, #36]	; 0x24
   1c2c0:	ldr	r1, [r4, #8]
   1c2c4:	add	r0, r0, r1, lsl #3
   1c2c8:	str	r0, [r4, #4]
   1c2cc:	mov	r9, r4
   1c2d0:	b	1c2dc <putc_unlocked@plt+0xa124>
   1c2d4:	mov	r0, r4
   1c2d8:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1c2dc:	mov	r0, r9
   1c2e0:	sub	sp, fp, #28
   1c2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2e8:	push	{r4, sl, fp, lr}
   1c2ec:	add	fp, sp, #8
   1c2f0:	mov	r4, r1
   1c2f4:	mov	r1, #3
   1c2f8:	bl	23bc4 <_obstack_memory_used@@Base+0x37fc>
   1c2fc:	udiv	r1, r0, r4
   1c300:	mls	r0, r1, r4, r0
   1c304:	pop	{r4, sl, fp, pc}
   1c308:	sub	r0, r0, r1
   1c30c:	clz	r0, r0
   1c310:	lsr	r0, r0, #5
   1c314:	bx	lr
   1c318:	mov	r1, r0
   1c31c:	ldr	r3, [r0, #20]
   1c320:	mov	r0, #1
   1c324:	movw	r2, #34232	; 0x85b8
   1c328:	movt	r2, #2
   1c32c:	cmp	r3, r2
   1c330:	beq	1c3b4 <putc_unlocked@plt+0xa1fc>
   1c334:	vldr	s2, [pc, #124]	; 1c3b8 <putc_unlocked@plt+0xa200>
   1c338:	vldr	s0, [r3, #8]
   1c33c:	vcmpe.f32	s0, s2
   1c340:	vmrs	APSR_nzcv, fpscr
   1c344:	ble	1c3ac <putc_unlocked@plt+0xa1f4>
   1c348:	vldr	s4, [pc, #108]	; 1c3bc <putc_unlocked@plt+0xa204>
   1c34c:	vcmpe.f32	s0, s4
   1c350:	vmrs	APSR_nzcv, fpscr
   1c354:	bpl	1c3ac <putc_unlocked@plt+0xa1f4>
   1c358:	vldr	s4, [pc, #96]	; 1c3c0 <putc_unlocked@plt+0xa208>
   1c35c:	vldr	s6, [r3, #12]
   1c360:	vcmpe.f32	s6, s4
   1c364:	vmrs	APSR_nzcv, fpscr
   1c368:	ble	1c3ac <putc_unlocked@plt+0xa1f4>
   1c36c:	vldr	s4, [r3]
   1c370:	vcmpe.f32	s4, #0.0
   1c374:	vmrs	APSR_nzcv, fpscr
   1c378:	blt	1c3ac <putc_unlocked@plt+0xa1f4>
   1c37c:	vadd.f32	s2, s4, s2
   1c380:	vcmpe.f32	s2, s0
   1c384:	vmrs	APSR_nzcv, fpscr
   1c388:	bpl	1c3ac <putc_unlocked@plt+0xa1f4>
   1c38c:	vldr	s0, [r3, #4]
   1c390:	vmov.f32	s4, #112	; 0x3f800000  1.0
   1c394:	vcmpe.f32	s0, s4
   1c398:	vmrs	APSR_nzcv, fpscr
   1c39c:	bhi	1c3ac <putc_unlocked@plt+0xa1f4>
   1c3a0:	vcmpe.f32	s2, s0
   1c3a4:	vmrs	APSR_nzcv, fpscr
   1c3a8:	bxmi	lr
   1c3ac:	str	r2, [r1, #20]
   1c3b0:	mov	r0, #0
   1c3b4:	bx	lr
   1c3b8:	stclcc	12, cr12, [ip, #820]	; 0x334
   1c3bc:	svccc	0x00666666
   1c3c0:	svccc	0x008ccccd
   1c3c4:	ldrb	r2, [r1, #16]
   1c3c8:	cmp	r2, #0
   1c3cc:	bne	1c3fc <putc_unlocked@plt+0xa244>
   1c3d0:	vldr	s0, [r1, #8]
   1c3d4:	vmov	s2, r0
   1c3d8:	vcvt.f32.u32	s2, s2
   1c3dc:	vdiv.f32	s2, s2, s0
   1c3e0:	vcvt.u32.f32	s0, s2
   1c3e4:	vldr	s4, [pc, #44]	; 1c418 <putc_unlocked@plt+0xa260>
   1c3e8:	mov	r0, #0
   1c3ec:	vcmpe.f32	s2, s4
   1c3f0:	vmrs	APSR_nzcv, fpscr
   1c3f4:	bxge	lr
   1c3f8:	vmov	r0, s0
   1c3fc:	push	{fp, lr}
   1c400:	mov	fp, sp
   1c404:	bl	1cbe8 <putc_unlocked@plt+0xaa30>
   1c408:	cmn	r0, #-536870911	; 0xe0000001
   1c40c:	movwhi	r0, #0
   1c410:	pop	{fp, lr}
   1c414:	bx	lr
   1c418:	svcmi	0x00800000
   1c41c:	push	{r4, r5, r6, r7, fp, lr}
   1c420:	add	fp, sp, #16
   1c424:	mov	r4, r0
   1c428:	ldr	r5, [r0]
   1c42c:	ldr	r0, [r0, #4]
   1c430:	cmp	r5, r0
   1c434:	bcs	1c4cc <putc_unlocked@plt+0xa314>
   1c438:	mov	r6, #0
   1c43c:	ldr	r0, [r5]
   1c440:	cmp	r0, #0
   1c444:	beq	1c4bc <putc_unlocked@plt+0xa304>
   1c448:	ldr	r7, [r5, #4]
   1c44c:	ldr	r1, [r4, #32]
   1c450:	cmp	r1, #0
   1c454:	mov	r0, r1
   1c458:	movwne	r0, #1
   1c45c:	cmp	r7, #0
   1c460:	beq	1c4a4 <putc_unlocked@plt+0xa2ec>
   1c464:	tst	r0, #1
   1c468:	beq	1c474 <putc_unlocked@plt+0xa2bc>
   1c46c:	ldr	r0, [r7]
   1c470:	blx	r1
   1c474:	str	r6, [r7]
   1c478:	ldr	r2, [r7, #4]
   1c47c:	ldr	r0, [r4, #36]	; 0x24
   1c480:	str	r0, [r7, #4]
   1c484:	str	r7, [r4, #36]	; 0x24
   1c488:	ldr	r1, [r4, #32]
   1c48c:	cmp	r1, #0
   1c490:	mov	r0, r1
   1c494:	movwne	r0, #1
   1c498:	cmp	r2, #0
   1c49c:	mov	r7, r2
   1c4a0:	bne	1c464 <putc_unlocked@plt+0xa2ac>
   1c4a4:	cmp	r0, #0
   1c4a8:	beq	1c4b4 <putc_unlocked@plt+0xa2fc>
   1c4ac:	ldr	r0, [r5]
   1c4b0:	blx	r1
   1c4b4:	str	r6, [r5]
   1c4b8:	str	r6, [r5, #4]
   1c4bc:	ldr	r0, [r4, #4]
   1c4c0:	add	r5, r5, #8
   1c4c4:	cmp	r5, r0
   1c4c8:	bcc	1c43c <putc_unlocked@plt+0xa284>
   1c4cc:	mov	r0, #0
   1c4d0:	str	r0, [r4, #12]
   1c4d4:	str	r0, [r4, #16]
   1c4d8:	pop	{r4, r5, r6, r7, fp, pc}
   1c4dc:	push	{r4, r5, r6, sl, fp, lr}
   1c4e0:	add	fp, sp, #16
   1c4e4:	mov	r4, r0
   1c4e8:	ldr	r0, [r0, #32]
   1c4ec:	cmp	r0, #0
   1c4f0:	ldrne	r0, [r4, #16]
   1c4f4:	cmpne	r0, #0
   1c4f8:	beq	1c550 <putc_unlocked@plt+0xa398>
   1c4fc:	ldr	r5, [r4]
   1c500:	ldr	r0, [r4, #4]
   1c504:	cmp	r5, r0
   1c508:	bcc	1c520 <putc_unlocked@plt+0xa368>
   1c50c:	b	1c550 <putc_unlocked@plt+0xa398>
   1c510:	ldr	r0, [r4, #4]
   1c514:	add	r5, r5, #8
   1c518:	cmp	r5, r0
   1c51c:	bcs	1c550 <putc_unlocked@plt+0xa398>
   1c520:	ldr	r0, [r5]
   1c524:	cmp	r0, #0
   1c528:	cmpne	r5, #0
   1c52c:	beq	1c510 <putc_unlocked@plt+0xa358>
   1c530:	mov	r6, r5
   1c534:	ldr	r0, [r6]
   1c538:	ldr	r1, [r4, #32]
   1c53c:	blx	r1
   1c540:	ldr	r6, [r6, #4]
   1c544:	cmp	r6, #0
   1c548:	bne	1c534 <putc_unlocked@plt+0xa37c>
   1c54c:	b	1c510 <putc_unlocked@plt+0xa358>
   1c550:	ldr	r5, [r4]
   1c554:	ldr	r0, [r4, #4]
   1c558:	cmp	r5, r0
   1c55c:	bcc	1c574 <putc_unlocked@plt+0xa3bc>
   1c560:	b	1c598 <putc_unlocked@plt+0xa3e0>
   1c564:	ldr	r0, [r4, #4]
   1c568:	add	r5, r5, #8
   1c56c:	cmp	r5, r0
   1c570:	bcs	1c598 <putc_unlocked@plt+0xa3e0>
   1c574:	ldr	r0, [r5, #4]
   1c578:	cmp	r0, #0
   1c57c:	beq	1c564 <putc_unlocked@plt+0xa3ac>
   1c580:	ldr	r6, [r0, #4]
   1c584:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1c588:	cmp	r6, #0
   1c58c:	mov	r0, r6
   1c590:	bne	1c580 <putc_unlocked@plt+0xa3c8>
   1c594:	b	1c564 <putc_unlocked@plt+0xa3ac>
   1c598:	ldr	r0, [r4, #36]	; 0x24
   1c59c:	cmp	r0, #0
   1c5a0:	beq	1c5b8 <putc_unlocked@plt+0xa400>
   1c5a4:	ldr	r5, [r0, #4]
   1c5a8:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1c5ac:	cmp	r5, #0
   1c5b0:	mov	r0, r5
   1c5b4:	bne	1c5a4 <putc_unlocked@plt+0xa3ec>
   1c5b8:	ldr	r0, [r4]
   1c5bc:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1c5c0:	mov	r0, r4
   1c5c4:	pop	{r4, r5, r6, sl, fp, lr}
   1c5c8:	b	1bd0c <putc_unlocked@plt+0x9b54>
   1c5cc:	push	{r4, r5, r6, sl, fp, lr}
   1c5d0:	add	fp, sp, #16
   1c5d4:	sub	sp, sp, #40	; 0x28
   1c5d8:	mov	r2, r1
   1c5dc:	mov	r4, r0
   1c5e0:	ldr	r1, [r0, #20]
   1c5e4:	mov	r0, r2
   1c5e8:	bl	1c3c4 <putc_unlocked@plt+0xa20c>
   1c5ec:	mov	r5, #0
   1c5f0:	cmp	r0, #0
   1c5f4:	beq	1c6d0 <putc_unlocked@plt+0xa518>
   1c5f8:	mov	r6, r0
   1c5fc:	ldr	r0, [r4, #8]
   1c600:	cmp	r6, r0
   1c604:	bne	1c610 <putc_unlocked@plt+0xa458>
   1c608:	mov	r5, #1
   1c60c:	b	1c6d0 <putc_unlocked@plt+0xa518>
   1c610:	mov	r0, r6
   1c614:	mov	r1, #8
   1c618:	bl	23a10 <_obstack_memory_used@@Base+0x3648>
   1c61c:	str	r0, [sp]
   1c620:	cmp	r0, #0
   1c624:	beq	1c6d0 <putc_unlocked@plt+0xa518>
   1c628:	str	r6, [sp, #8]
   1c62c:	mov	r0, #0
   1c630:	str	r0, [sp, #12]
   1c634:	str	r0, [sp, #16]
   1c638:	ldr	r0, [sp]
   1c63c:	add	r0, r0, r6, lsl #3
   1c640:	str	r0, [sp, #4]
   1c644:	add	r6, r4, #20
   1c648:	ldm	r6, {r0, r1, r2, r3, r6}
   1c64c:	add	ip, sp, #20
   1c650:	stm	ip, {r0, r1, r2, r3, r6}
   1c654:	mov	r0, sp
   1c658:	mov	r1, r4
   1c65c:	mov	r2, #0
   1c660:	bl	1c6e0 <putc_unlocked@plt+0xa528>
   1c664:	cmp	r0, #0
   1c668:	beq	1c68c <putc_unlocked@plt+0xa4d4>
   1c66c:	ldr	r0, [r4]
   1c670:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1c674:	ldm	sp, {r0, r1, r2, r3}
   1c678:	stm	r4, {r0, r1, r2, r3}
   1c67c:	ldr	r0, [sp, #36]	; 0x24
   1c680:	str	r0, [r4, #36]	; 0x24
   1c684:	mov	r5, #1
   1c688:	b	1c6d0 <putc_unlocked@plt+0xa518>
   1c68c:	ldr	r0, [sp, #36]	; 0x24
   1c690:	str	r0, [r4, #36]	; 0x24
   1c694:	mov	r1, sp
   1c698:	mov	r0, r4
   1c69c:	mov	r2, #1
   1c6a0:	bl	1c6e0 <putc_unlocked@plt+0xa528>
   1c6a4:	cmp	r0, #0
   1c6a8:	beq	1c6dc <putc_unlocked@plt+0xa524>
   1c6ac:	mov	r1, sp
   1c6b0:	mov	r5, #0
   1c6b4:	mov	r0, r4
   1c6b8:	mov	r2, #0
   1c6bc:	bl	1c6e0 <putc_unlocked@plt+0xa528>
   1c6c0:	cmp	r0, #0
   1c6c4:	beq	1c6dc <putc_unlocked@plt+0xa524>
   1c6c8:	ldr	r0, [sp]
   1c6cc:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1c6d0:	mov	r0, r5
   1c6d4:	sub	sp, fp, #16
   1c6d8:	pop	{r4, r5, r6, sl, fp, pc}
   1c6dc:	bl	1214c <abort@plt>
   1c6e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c6e4:	add	fp, sp, #28
   1c6e8:	sub	sp, sp, #4
   1c6ec:	mov	r7, r0
   1c6f0:	ldr	r6, [r1]
   1c6f4:	ldr	r0, [r1, #4]
   1c6f8:	cmp	r6, r0
   1c6fc:	bcs	1c800 <putc_unlocked@plt+0xa648>
   1c700:	mov	r9, r2
   1c704:	mov	sl, r1
   1c708:	ldr	r0, [r6]
   1c70c:	cmp	r0, #0
   1c710:	beq	1c7f0 <putc_unlocked@plt+0xa638>
   1c714:	ldr	r4, [r6, #4]
   1c718:	cmp	r4, #0
   1c71c:	beq	1c778 <putc_unlocked@plt+0xa5c0>
   1c720:	ldr	r5, [r4]
   1c724:	mov	r0, r7
   1c728:	mov	r1, r5
   1c72c:	bl	1bfe4 <putc_unlocked@plt+0x9e2c>
   1c730:	ldr	r1, [r0]
   1c734:	ldr	r8, [r4, #4]
   1c738:	cmp	r1, #0
   1c73c:	beq	1c750 <putc_unlocked@plt+0xa598>
   1c740:	ldr	r1, [r0, #4]
   1c744:	str	r1, [r4, #4]
   1c748:	str	r4, [r0, #4]
   1c74c:	b	1c76c <putc_unlocked@plt+0xa5b4>
   1c750:	str	r5, [r0]
   1c754:	ldr	r0, [r7, #12]
   1c758:	add	r0, r0, #1
   1c75c:	str	r0, [r7, #12]
   1c760:	mov	r0, r7
   1c764:	mov	r1, r4
   1c768:	bl	1cc88 <putc_unlocked@plt+0xaad0>
   1c76c:	cmp	r8, #0
   1c770:	mov	r4, r8
   1c774:	bne	1c720 <putc_unlocked@plt+0xa568>
   1c778:	mov	r0, #0
   1c77c:	str	r0, [r6, #4]
   1c780:	cmp	r9, #0
   1c784:	bne	1c7f0 <putc_unlocked@plt+0xa638>
   1c788:	ldr	r4, [r6]
   1c78c:	mov	r0, r7
   1c790:	mov	r1, r4
   1c794:	bl	1bfe4 <putc_unlocked@plt+0x9e2c>
   1c798:	mov	r5, r0
   1c79c:	ldr	r0, [r0]
   1c7a0:	cmp	r0, #0
   1c7a4:	beq	1c7cc <putc_unlocked@plt+0xa614>
   1c7a8:	mov	r0, r7
   1c7ac:	bl	1ca6c <putc_unlocked@plt+0xa8b4>
   1c7b0:	cmp	r0, #0
   1c7b4:	beq	1c80c <putc_unlocked@plt+0xa654>
   1c7b8:	str	r4, [r0]
   1c7bc:	ldr	r1, [r5, #4]
   1c7c0:	str	r1, [r0, #4]
   1c7c4:	str	r0, [r5, #4]
   1c7c8:	b	1c7dc <putc_unlocked@plt+0xa624>
   1c7cc:	str	r4, [r5]
   1c7d0:	ldr	r0, [r7, #12]
   1c7d4:	add	r0, r0, #1
   1c7d8:	str	r0, [r7, #12]
   1c7dc:	mov	r0, #0
   1c7e0:	str	r0, [r6]
   1c7e4:	ldr	r0, [sl, #12]
   1c7e8:	sub	r0, r0, #1
   1c7ec:	str	r0, [sl, #12]
   1c7f0:	add	r6, r6, #8
   1c7f4:	ldr	r0, [sl, #4]
   1c7f8:	cmp	r6, r0
   1c7fc:	bcc	1c708 <putc_unlocked@plt+0xa550>
   1c800:	mov	r0, #1
   1c804:	sub	sp, fp, #28
   1c808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c80c:	mov	r0, #0
   1c810:	sub	sp, fp, #28
   1c814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c818:	push	{r4, r5, r6, r7, fp, lr}
   1c81c:	add	fp, sp, #16
   1c820:	sub	sp, sp, #8
   1c824:	cmp	r1, #0
   1c828:	beq	1c988 <putc_unlocked@plt+0xa7d0>
   1c82c:	mov	r7, r2
   1c830:	mov	r5, r1
   1c834:	mov	r4, r0
   1c838:	add	r2, sp, #4
   1c83c:	mov	r6, #0
   1c840:	mov	r3, #0
   1c844:	bl	1c990 <putc_unlocked@plt+0xa7d8>
   1c848:	cmp	r0, #0
   1c84c:	beq	1c85c <putc_unlocked@plt+0xa6a4>
   1c850:	cmp	r7, #0
   1c854:	strne	r0, [r7]
   1c858:	b	1c97c <putc_unlocked@plt+0xa7c4>
   1c85c:	vldr	s0, [r4, #8]
   1c860:	vldr	s2, [r4, #12]
   1c864:	ldr	r0, [r4, #20]
   1c868:	vldr	s4, [r0, #8]
   1c86c:	vcvt.f32.u32	s0, s0
   1c870:	vcvt.f32.u32	s2, s2
   1c874:	vmul.f32	s0, s4, s0
   1c878:	vcmpe.f32	s0, s2
   1c87c:	vmrs	APSR_nzcv, fpscr
   1c880:	bpl	1c914 <putc_unlocked@plt+0xa75c>
   1c884:	mov	r0, r4
   1c888:	bl	1c318 <putc_unlocked@plt+0xa160>
   1c88c:	vldr	s0, [r4, #8]
   1c890:	vldr	s4, [r4, #12]
   1c894:	ldr	r0, [r4, #20]
   1c898:	vcvt.f32.u32	s2, s0
   1c89c:	vldr	s0, [r0, #8]
   1c8a0:	vcvt.f32.u32	s4, s4
   1c8a4:	vmul.f32	s6, s0, s2
   1c8a8:	vcmpe.f32	s6, s4
   1c8ac:	vmrs	APSR_nzcv, fpscr
   1c8b0:	bpl	1c914 <putc_unlocked@plt+0xa75c>
   1c8b4:	vldr	s4, [r0, #12]
   1c8b8:	vmul.f32	s2, s4, s2
   1c8bc:	ldrb	r0, [r0, #16]
   1c8c0:	vmul.f32	s0, s0, s2
   1c8c4:	mvn	r6, #0
   1c8c8:	vldr	s4, [pc, #188]	; 1c98c <putc_unlocked@plt+0xa7d4>
   1c8cc:	cmp	r0, #0
   1c8d0:	vseleq.f32	s0, s0, s2
   1c8d4:	vcmpe.f32	s0, s4
   1c8d8:	vmrs	APSR_nzcv, fpscr
   1c8dc:	bge	1c97c <putc_unlocked@plt+0xa7c4>
   1c8e0:	vcvt.u32.f32	s0, s0
   1c8e4:	vmov	r1, s0
   1c8e8:	mov	r0, r4
   1c8ec:	bl	1c5cc <putc_unlocked@plt+0xa414>
   1c8f0:	cmp	r0, #0
   1c8f4:	beq	1c97c <putc_unlocked@plt+0xa7c4>
   1c8f8:	add	r2, sp, #4
   1c8fc:	mov	r0, r4
   1c900:	mov	r1, r5
   1c904:	mov	r3, #0
   1c908:	bl	1c990 <putc_unlocked@plt+0xa7d8>
   1c90c:	cmp	r0, #0
   1c910:	bne	1c988 <putc_unlocked@plt+0xa7d0>
   1c914:	ldr	r6, [sp, #4]
   1c918:	ldr	r0, [r6]
   1c91c:	cmp	r0, #0
   1c920:	beq	1c954 <putc_unlocked@plt+0xa79c>
   1c924:	mov	r0, r4
   1c928:	bl	1ca6c <putc_unlocked@plt+0xa8b4>
   1c92c:	cmp	r0, #0
   1c930:	beq	1c978 <putc_unlocked@plt+0xa7c0>
   1c934:	str	r5, [r0]
   1c938:	ldr	r1, [r6, #4]
   1c93c:	str	r1, [r0, #4]
   1c940:	str	r0, [r6, #4]
   1c944:	ldr	r0, [r4, #16]
   1c948:	add	r0, r0, #1
   1c94c:	str	r0, [r4, #16]
   1c950:	b	1c970 <putc_unlocked@plt+0xa7b8>
   1c954:	str	r5, [r6]
   1c958:	ldr	r0, [r4, #12]
   1c95c:	ldr	r1, [r4, #16]
   1c960:	add	r1, r1, #1
   1c964:	add	r0, r0, #1
   1c968:	str	r0, [r4, #12]
   1c96c:	str	r1, [r4, #16]
   1c970:	mov	r6, #1
   1c974:	b	1c97c <putc_unlocked@plt+0xa7c4>
   1c978:	mvn	r6, #0
   1c97c:	mov	r0, r6
   1c980:	sub	sp, fp, #16
   1c984:	pop	{r4, r5, r6, r7, fp, pc}
   1c988:	bl	1214c <abort@plt>
   1c98c:	svcmi	0x00800000
   1c990:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c994:	add	fp, sp, #24
   1c998:	mov	r8, r3
   1c99c:	mov	r4, r2
   1c9a0:	mov	r7, r1
   1c9a4:	mov	r5, r0
   1c9a8:	bl	1bfe4 <putc_unlocked@plt+0x9e2c>
   1c9ac:	str	r0, [r4]
   1c9b0:	ldr	r1, [r0]
   1c9b4:	mov	r4, #0
   1c9b8:	cmp	r1, #0
   1c9bc:	beq	1ca64 <putc_unlocked@plt+0xa8ac>
   1c9c0:	mov	r6, r0
   1c9c4:	cmp	r1, r7
   1c9c8:	beq	1c9e0 <putc_unlocked@plt+0xa828>
   1c9cc:	ldr	r2, [r5, #28]
   1c9d0:	mov	r0, r7
   1c9d4:	blx	r2
   1c9d8:	cmp	r0, #0
   1c9dc:	beq	1ca08 <putc_unlocked@plt+0xa850>
   1c9e0:	ldr	r4, [r6]
   1c9e4:	cmp	r8, #0
   1c9e8:	beq	1ca64 <putc_unlocked@plt+0xa8ac>
   1c9ec:	ldr	r1, [r6, #4]
   1c9f0:	cmp	r1, #0
   1c9f4:	beq	1ca5c <putc_unlocked@plt+0xa8a4>
   1c9f8:	ldm	r1, {r0, r2}
   1c9fc:	stm	r6, {r0, r2}
   1ca00:	b	1ca4c <putc_unlocked@plt+0xa894>
   1ca04:	ldr	r6, [r6]
   1ca08:	ldr	r0, [r6, #4]!
   1ca0c:	cmp	r0, #0
   1ca10:	beq	1ca64 <putc_unlocked@plt+0xa8ac>
   1ca14:	ldr	r1, [r0]
   1ca18:	cmp	r1, r7
   1ca1c:	beq	1ca34 <putc_unlocked@plt+0xa87c>
   1ca20:	ldr	r2, [r5, #28]
   1ca24:	mov	r0, r7
   1ca28:	blx	r2
   1ca2c:	cmp	r0, #0
   1ca30:	beq	1ca04 <putc_unlocked@plt+0xa84c>
   1ca34:	ldr	r1, [r6]
   1ca38:	ldr	r4, [r1]
   1ca3c:	cmp	r8, #0
   1ca40:	beq	1ca64 <putc_unlocked@plt+0xa8ac>
   1ca44:	ldr	r0, [r1, #4]
   1ca48:	str	r0, [r6]
   1ca4c:	mov	r0, r5
   1ca50:	bl	1cc88 <putc_unlocked@plt+0xaad0>
   1ca54:	mov	r0, r4
   1ca58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ca5c:	mov	r0, #0
   1ca60:	str	r0, [r6]
   1ca64:	mov	r0, r4
   1ca68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ca6c:	mov	r1, r0
   1ca70:	ldr	r0, [r0, #36]	; 0x24
   1ca74:	cmp	r0, #0
   1ca78:	ldrne	r2, [r0, #4]
   1ca7c:	strne	r2, [r1, #36]	; 0x24
   1ca80:	bxne	lr
   1ca84:	push	{fp, lr}
   1ca88:	mov	fp, sp
   1ca8c:	mov	r0, #8
   1ca90:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1ca94:	pop	{fp, pc}
   1ca98:	push	{r4, sl, fp, lr}
   1ca9c:	add	fp, sp, #8
   1caa0:	sub	sp, sp, #8
   1caa4:	mov	r4, r1
   1caa8:	add	r2, sp, #4
   1caac:	bl	1c818 <putc_unlocked@plt+0xa660>
   1cab0:	cmn	r0, #1
   1cab4:	beq	1cac8 <putc_unlocked@plt+0xa910>
   1cab8:	ldr	r1, [sp, #4]
   1cabc:	cmp	r0, #0
   1cac0:	moveq	r4, r1
   1cac4:	b	1cacc <putc_unlocked@plt+0xa914>
   1cac8:	mov	r4, #0
   1cacc:	mov	r0, r4
   1cad0:	sub	sp, fp, #8
   1cad4:	pop	{r4, sl, fp, pc}
   1cad8:	push	{r4, r5, r6, sl, fp, lr}
   1cadc:	add	fp, sp, #16
   1cae0:	sub	sp, sp, #8
   1cae4:	mov	r4, r0
   1cae8:	add	r2, sp, #4
   1caec:	mov	r3, #1
   1caf0:	bl	1c990 <putc_unlocked@plt+0xa7d8>
   1caf4:	mov	r5, r0
   1caf8:	cmp	r0, #0
   1cafc:	beq	1cbd8 <putc_unlocked@plt+0xaa20>
   1cb00:	ldr	r0, [r4, #16]
   1cb04:	sub	r0, r0, #1
   1cb08:	str	r0, [r4, #16]
   1cb0c:	ldr	r0, [sp, #4]
   1cb10:	ldr	r0, [r0]
   1cb14:	cmp	r0, #0
   1cb18:	bne	1cbd8 <putc_unlocked@plt+0xaa20>
   1cb1c:	ldr	r0, [r4, #12]
   1cb20:	sub	r0, r0, #1
   1cb24:	vldr	s0, [r4, #8]
   1cb28:	str	r0, [r4, #12]
   1cb2c:	ldr	r1, [r4, #20]
   1cb30:	vldr	s2, [r1]
   1cb34:	vcvt.f32.u32	s0, s0
   1cb38:	vmov	s4, r0
   1cb3c:	vcvt.f32.u32	s4, s4
   1cb40:	vmul.f32	s0, s2, s0
   1cb44:	vcmpe.f32	s0, s4
   1cb48:	vmrs	APSR_nzcv, fpscr
   1cb4c:	ble	1cbd8 <putc_unlocked@plt+0xaa20>
   1cb50:	mov	r0, r4
   1cb54:	bl	1c318 <putc_unlocked@plt+0xa160>
   1cb58:	vldr	s0, [r4, #8]
   1cb5c:	vldr	s2, [r4, #12]
   1cb60:	ldr	r0, [r4, #20]
   1cb64:	vcvt.f32.u32	s0, s0
   1cb68:	vldr	s4, [r0]
   1cb6c:	vcvt.f32.u32	s2, s2
   1cb70:	vmul.f32	s4, s4, s0
   1cb74:	vcmpe.f32	s4, s2
   1cb78:	vmrs	APSR_nzcv, fpscr
   1cb7c:	ble	1cbd8 <putc_unlocked@plt+0xaa20>
   1cb80:	vldr	s2, [r0, #4]
   1cb84:	ldrb	r1, [r0, #16]
   1cb88:	vmul.f32	s0, s2, s0
   1cb8c:	cmp	r1, #0
   1cb90:	vldreq	s2, [r0, #8]
   1cb94:	vmuleq.f32	s0, s0, s2
   1cb98:	vcvt.u32.f32	s0, s0
   1cb9c:	vmov	r1, s0
   1cba0:	mov	r0, r4
   1cba4:	bl	1c5cc <putc_unlocked@plt+0xa414>
   1cba8:	cmp	r0, #0
   1cbac:	bne	1cbd8 <putc_unlocked@plt+0xaa20>
   1cbb0:	ldr	r0, [r4, #36]	; 0x24
   1cbb4:	cmp	r0, #0
   1cbb8:	beq	1cbd0 <putc_unlocked@plt+0xaa18>
   1cbbc:	ldr	r6, [r0, #4]
   1cbc0:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1cbc4:	cmp	r6, #0
   1cbc8:	mov	r0, r6
   1cbcc:	bne	1cbbc <putc_unlocked@plt+0xaa04>
   1cbd0:	mov	r0, #0
   1cbd4:	str	r0, [r4, #36]	; 0x24
   1cbd8:	mov	r0, r5
   1cbdc:	sub	sp, fp, #16
   1cbe0:	pop	{r4, r5, r6, sl, fp, pc}
   1cbe4:	b	1cad8 <putc_unlocked@plt+0xa920>
   1cbe8:	push	{r4, r5, fp, lr}
   1cbec:	add	fp, sp, #8
   1cbf0:	cmp	r0, #10
   1cbf4:	movls	r0, #10
   1cbf8:	orr	r5, r0, #1
   1cbfc:	mvn	r4, #0
   1cc00:	cmn	r5, #1
   1cc04:	bne	1cc1c <putc_unlocked@plt+0xaa64>
   1cc08:	mov	r0, r4
   1cc0c:	pop	{r4, r5, fp, pc}
   1cc10:	add	r5, r5, #2
   1cc14:	cmn	r5, #1
   1cc18:	beq	1cc08 <putc_unlocked@plt+0xaa50>
   1cc1c:	mov	r0, r5
   1cc20:	bl	1cc38 <putc_unlocked@plt+0xaa80>
   1cc24:	cmp	r0, #0
   1cc28:	beq	1cc10 <putc_unlocked@plt+0xaa58>
   1cc2c:	mov	r4, r5
   1cc30:	mov	r0, r4
   1cc34:	pop	{r4, r5, fp, pc}
   1cc38:	mov	ip, #3
   1cc3c:	cmp	r0, #10
   1cc40:	bcc	1cc74 <putc_unlocked@plt+0xaabc>
   1cc44:	mov	ip, #3
   1cc48:	mov	r2, #9
   1cc4c:	mov	r3, #16
   1cc50:	udiv	r1, r0, ip
   1cc54:	mls	r1, r1, ip, r0
   1cc58:	cmp	r1, #0
   1cc5c:	beq	1cc74 <putc_unlocked@plt+0xaabc>
   1cc60:	add	r2, r3, r2
   1cc64:	add	r3, r3, #8
   1cc68:	add	ip, ip, #2
   1cc6c:	cmp	r2, r0
   1cc70:	bcc	1cc50 <putc_unlocked@plt+0xaa98>
   1cc74:	udiv	r1, r0, ip
   1cc78:	mls	r0, r1, ip, r0
   1cc7c:	cmp	r0, #0
   1cc80:	movwne	r0, #1
   1cc84:	bx	lr
   1cc88:	mov	r2, #0
   1cc8c:	str	r2, [r1]
   1cc90:	ldr	r2, [r0, #36]	; 0x24
   1cc94:	str	r2, [r1, #4]
   1cc98:	str	r1, [r0, #36]	; 0x24
   1cc9c:	bx	lr
   1cca0:	push	{r4, r5, fp, lr}
   1cca4:	add	fp, sp, #8
   1cca8:	mov	r4, r1
   1ccac:	mov	r5, r0
   1ccb0:	ldr	r0, [r0]
   1ccb4:	bl	23e70 <_obstack_memory_used@@Base+0x3aa8>
   1ccb8:	ldrd	r2, [r5, #8]
   1ccbc:	eor	r0, r2, r0
   1ccc0:	mov	r1, r3
   1ccc4:	mov	r2, r4
   1ccc8:	mov	r3, #0
   1cccc:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1ccd0:	mov	r0, r2
   1ccd4:	pop	{r4, r5, fp, pc}
   1ccd8:	push	{r4, r5, r6, r7, fp, lr}
   1ccdc:	add	fp, sp, #16
   1cce0:	ldrd	r2, [r1, #8]
   1cce4:	ldrd	r4, [r0, #8]
   1cce8:	eor	r3, r5, r3
   1ccec:	eor	r2, r4, r2
   1ccf0:	orrs	r2, r2, r3
   1ccf4:	mov	r2, #0
   1ccf8:	bne	1cd28 <putc_unlocked@plt+0xab70>
   1ccfc:	ldrd	r4, [r1, #16]
   1cd00:	ldrd	r6, [r0, #16]
   1cd04:	eor	r3, r7, r5
   1cd08:	eor	r7, r6, r4
   1cd0c:	orrs	r3, r7, r3
   1cd10:	bne	1cd28 <putc_unlocked@plt+0xab70>
   1cd14:	ldr	r1, [r1]
   1cd18:	ldr	r0, [r0]
   1cd1c:	bl	11ccc <strcmp@plt>
   1cd20:	clz	r0, r0
   1cd24:	lsr	r2, r0, #5
   1cd28:	mov	r0, r2
   1cd2c:	pop	{r4, r5, r6, r7, fp, pc}
   1cd30:	push	{r4, sl, fp, lr}
   1cd34:	add	fp, sp, #8
   1cd38:	mov	r4, r0
   1cd3c:	ldr	r0, [r0]
   1cd40:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1cd44:	mov	r0, r4
   1cd48:	pop	{r4, sl, fp, lr}
   1cd4c:	b	1bd0c <putc_unlocked@plt+0x9b54>
   1cd50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd54:	add	fp, sp, #28
   1cd58:	sub	sp, sp, #4
   1cd5c:	vpush	{d8-d9}
   1cd60:	sub	sp, sp, #56	; 0x38
   1cd64:	mov	r5, r3
   1cd68:	mov	r7, r2
   1cd6c:	str	r1, [sp, #48]	; 0x30
   1cd70:	str	r0, [sp, #36]	; 0x24
   1cd74:	bl	120bc <localeconv@plt>
   1cd78:	mov	r4, r0
   1cd7c:	ldr	r6, [r0]
   1cd80:	mov	r0, r6
   1cd84:	bl	11fc0 <strlen@plt>
   1cd88:	sub	r1, r0, #1
   1cd8c:	movw	r2, #34110	; 0x853e
   1cd90:	movt	r2, #2
   1cd94:	cmp	r1, #16
   1cd98:	movcc	r2, r6
   1cd9c:	str	r2, [sp, #8]
   1cda0:	movcs	r0, #1
   1cda4:	str	r0, [sp, #12]
   1cda8:	ldr	r6, [r4, #4]
   1cdac:	ldr	r4, [r4, #8]
   1cdb0:	mov	r0, r6
   1cdb4:	bl	11fc0 <strlen@plt>
   1cdb8:	movw	r1, #27261	; 0x6a7d
   1cdbc:	movt	r1, #2
   1cdc0:	cmp	r0, #17
   1cdc4:	movcc	r1, r6
   1cdc8:	movw	r0, #647	; 0x287
   1cdcc:	str	r7, [sp, #32]
   1cdd0:	add	r0, r7, r0
   1cdd4:	str	r0, [sp, #40]	; 0x28
   1cdd8:	ands	r0, r5, #32
   1cddc:	str	r0, [sp, #24]
   1cde0:	mov	r0, #1000	; 0x3e8
   1cde4:	movwne	r0, #1024	; 0x400
   1cde8:	str	r0, [sp, #52]	; 0x34
   1cdec:	and	r7, r5, #3
   1cdf0:	ldr	r3, [fp, #20]
   1cdf4:	ldr	r2, [fp, #16]
   1cdf8:	ldr	r6, [fp, #12]
   1cdfc:	ldr	sl, [fp, #8]
   1ce00:	subs	r0, sl, r2
   1ce04:	sbcs	r0, r6, r3
   1ce08:	str	r5, [sp, #44]	; 0x2c
   1ce0c:	str	r4, [sp, #20]
   1ce10:	str	r1, [sp, #16]
   1ce14:	str	r7, [sp, #28]
   1ce18:	bcs	1cf10 <putc_unlocked@plt+0xad58>
   1ce1c:	orrs	r0, sl, r6
   1ce20:	beq	1d004 <putc_unlocked@plt+0xae4c>
   1ce24:	mov	r0, r2
   1ce28:	mov	r1, r3
   1ce2c:	mov	r2, sl
   1ce30:	mov	r3, r6
   1ce34:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1ce38:	ldr	r2, [fp, #16]
   1ce3c:	ldr	r3, [fp, #20]
   1ce40:	mov	r8, r0
   1ce44:	mov	r7, r1
   1ce48:	umull	r0, r1, r0, sl
   1ce4c:	mla	r1, r8, r6, r1
   1ce50:	mla	r1, r7, sl, r1
   1ce54:	subs	r0, r2, r0
   1ce58:	sbc	r1, r3, r1
   1ce5c:	orrs	r0, r0, r1
   1ce60:	bne	1d004 <putc_unlocked@plt+0xae4c>
   1ce64:	ldr	r5, [sp, #36]	; 0x24
   1ce68:	mov	r0, r5
   1ce6c:	ldr	r4, [sp, #48]	; 0x30
   1ce70:	mov	r1, r4
   1ce74:	mov	r2, r8
   1ce78:	mov	r3, r7
   1ce7c:	mov	r6, r7
   1ce80:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1ce84:	mov	r9, r0
   1ce88:	mov	r7, r1
   1ce8c:	umull	r0, r1, r0, r8
   1ce90:	mla	r1, r9, r6, r1
   1ce94:	mla	r1, r7, r8, r1
   1ce98:	subs	r0, r5, r0
   1ce9c:	sbc	r1, r4, r1
   1cea0:	add	r1, r1, r1, lsl #2
   1cea4:	mov	r2, #10
   1cea8:	umull	r5, r0, r0, r2
   1ceac:	add	sl, r0, r1, lsl #1
   1ceb0:	mov	r0, r5
   1ceb4:	mov	r1, sl
   1ceb8:	mov	r2, r8
   1cebc:	mov	r3, r6
   1cec0:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1cec4:	mov	r4, r0
   1cec8:	umull	r0, r2, r0, r8
   1cecc:	mla	r2, r4, r6, r2
   1ced0:	mla	r1, r1, r8, r2
   1ced4:	subs	r0, r5, r0
   1ced8:	sbc	r1, sl, r1
   1cedc:	lsl	r1, r1, #1
   1cee0:	orr	r1, r1, r0, lsr #31
   1cee4:	mov	r2, #2
   1cee8:	subs	r3, r8, r0, lsl #1
   1ceec:	sbcs	r3, r6, r1
   1cef0:	movwcc	r2, #3
   1cef4:	orr	sl, r1, r0, lsl #1
   1cef8:	cmp	sl, #0
   1cefc:	movwne	sl, #1
   1cf00:	rsbs	r0, r8, r0, lsl #1
   1cf04:	sbcs	r0, r1, r6
   1cf08:	movcs	sl, r2
   1cf0c:	b	1cf94 <putc_unlocked@plt+0xaddc>
   1cf10:	mov	r0, sl
   1cf14:	mov	r1, r6
   1cf18:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1cf1c:	ldr	r2, [fp, #16]
   1cf20:	ldr	r3, [fp, #20]
   1cf24:	mov	r4, r0
   1cf28:	mov	r5, r1
   1cf2c:	umull	r0, r1, r0, r2
   1cf30:	mla	r1, r4, r3, r1
   1cf34:	mla	r1, r5, r2, r1
   1cf38:	subs	r0, sl, r0
   1cf3c:	sbc	r1, r6, r1
   1cf40:	orrs	r0, r0, r1
   1cf44:	bne	1d004 <putc_unlocked@plt+0xae4c>
   1cf48:	ldr	r8, [sp, #36]	; 0x24
   1cf4c:	umull	r9, r0, r4, r8
   1cf50:	ldr	r1, [sp, #48]	; 0x30
   1cf54:	mla	r0, r4, r1, r0
   1cf58:	mla	r7, r5, r8, r0
   1cf5c:	mov	r0, r9
   1cf60:	mov	r1, r7
   1cf64:	mov	r2, r4
   1cf68:	mov	r3, r5
   1cf6c:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1cf70:	ldr	r2, [fp, #16]
   1cf74:	ldr	r3, [fp, #20]
   1cf78:	ldr	r5, [sp, #48]	; 0x30
   1cf7c:	eor	r1, r1, r5
   1cf80:	eor	r0, r0, r8
   1cf84:	orrs	r0, r0, r1
   1cf88:	bne	1d004 <putc_unlocked@plt+0xae4c>
   1cf8c:	mov	sl, #0
   1cf90:	mov	r4, #0
   1cf94:	ldr	r0, [sp, #44]	; 0x2c
   1cf98:	ldr	r6, [sp, #52]	; 0x34
   1cf9c:	ands	ip, r0, #16
   1cfa0:	mvn	r5, #0
   1cfa4:	beq	1cfb8 <putc_unlocked@plt+0xae00>
   1cfa8:	mov	r5, #0
   1cfac:	subs	r0, r9, r6
   1cfb0:	sbcs	r0, r7, #0
   1cfb4:	bcs	1d224 <putc_unlocked@plt+0xb06c>
   1cfb8:	ldr	r3, [sp, #40]	; 0x28
   1cfbc:	mov	r8, r9
   1cfc0:	ldr	r9, [sp, #28]
   1cfc4:	cmp	r9, #0
   1cfc8:	beq	1d378 <putc_unlocked@plt+0xb1c0>
   1cfcc:	cmp	r9, #1
   1cfd0:	bne	1d218 <putc_unlocked@plt+0xb060>
   1cfd4:	mov	r0, #0
   1cfd8:	rsbs	r1, sl, #0
   1cfdc:	sbc	r0, r0, #0
   1cfe0:	and	r2, r8, #1
   1cfe4:	eor	r1, r2, r1
   1cfe8:	orrs	r0, r1, r0
   1cfec:	addne	r4, r4, #1
   1cff0:	cmp	r4, #5
   1cff4:	ldr	r9, [sp, #40]	; 0x28
   1cff8:	ldr	sl, [sp, #32]
   1cffc:	bgt	1d38c <putc_unlocked@plt+0xb1d4>
   1d000:	b	1d3e8 <putc_unlocked@plt+0xb230>
   1d004:	mov	r0, r2
   1d008:	mov	r1, r3
   1d00c:	bl	242bc <_obstack_memory_used@@Base+0x3ef4>
   1d010:	vmov	d8, r0, r1
   1d014:	ldr	r0, [sp, #36]	; 0x24
   1d018:	ldr	r1, [sp, #48]	; 0x30
   1d01c:	bl	242bc <_obstack_memory_used@@Base+0x3ef4>
   1d020:	mov	r5, r0
   1d024:	mov	r7, r1
   1d028:	mov	r0, sl
   1d02c:	mov	r1, r6
   1d030:	bl	242bc <_obstack_memory_used@@Base+0x3ef4>
   1d034:	vmov	d16, r0, r1
   1d038:	vmov	d17, r5, r7
   1d03c:	vdiv.f64	d16, d16, d8
   1d040:	vmul.f64	d0, d16, d17
   1d044:	ldr	r8, [sp, #44]	; 0x2c
   1d048:	tst	r8, #16
   1d04c:	bne	1d094 <putc_unlocked@plt+0xaedc>
   1d050:	ldr	r0, [sp, #28]
   1d054:	bl	1d4f8 <putc_unlocked@plt+0xb340>
   1d058:	vstr	d0, [sp]
   1d05c:	mvn	r5, #0
   1d060:	movw	r3, #34252	; 0x85cc
   1d064:	movt	r3, #2
   1d068:	ldr	sl, [sp, #32]
   1d06c:	mov	r0, sl
   1d070:	mov	r1, #1
   1d074:	mvn	r2, #0
   1d078:	bl	11ff0 <__sprintf_chk@plt>
   1d07c:	mov	r0, sl
   1d080:	bl	11fc0 <strlen@plt>
   1d084:	mov	r2, r0
   1d088:	mov	r7, #0
   1d08c:	ldr	r9, [sp, #40]	; 0x28
   1d090:	b	1d188 <putc_unlocked@plt+0xafd0>
   1d094:	vmov.f64	d16, #112	; 0x3f800000  1.0
   1d098:	ldr	r0, [sp, #52]	; 0x34
   1d09c:	vmov	s2, r0
   1d0a0:	vcvt.f64.u32	d17, s2
   1d0a4:	mov	r5, #0
   1d0a8:	vmul.f64	d16, d16, d17
   1d0ac:	add	r5, r5, #1
   1d0b0:	cmp	r5, #7
   1d0b4:	vmulls.f64	d18, d16, d17
   1d0b8:	vcmpels.f64	d18, d0
   1d0bc:	vmrsls	APSR_nzcv, fpscr
   1d0c0:	bls	1d0a8 <putc_unlocked@plt+0xaef0>
   1d0c4:	vdiv.f64	d8, d0, d16
   1d0c8:	ldr	r9, [sp, #28]
   1d0cc:	mov	r0, r9
   1d0d0:	vmov.f64	d0, d8
   1d0d4:	bl	1d4f8 <putc_unlocked@plt+0xb340>
   1d0d8:	vstr	d0, [sp]
   1d0dc:	movw	r3, #34258	; 0x85d2
   1d0e0:	movt	r3, #2
   1d0e4:	ldr	sl, [sp, #32]
   1d0e8:	mov	r0, sl
   1d0ec:	mov	r1, #1
   1d0f0:	mvn	r2, #0
   1d0f4:	bl	11ff0 <__sprintf_chk@plt>
   1d0f8:	mov	r0, #3
   1d0fc:	ldr	r1, [sp, #24]
   1d100:	cmp	r1, #0
   1d104:	movwne	r0, #2
   1d108:	ldr	r7, [sp, #12]
   1d10c:	add	r4, r0, r7
   1d110:	mov	r0, sl
   1d114:	bl	11fc0 <strlen@plt>
   1d118:	cmp	r4, r0
   1d11c:	ldr	r4, [sp, #40]	; 0x28
   1d120:	bcc	1d144 <putc_unlocked@plt+0xaf8c>
   1d124:	mov	r2, r0
   1d128:	add	r7, r7, #1
   1d12c:	tst	r8, #8
   1d130:	beq	1d184 <putc_unlocked@plt+0xafcc>
   1d134:	add	r0, sl, r2
   1d138:	ldrb	r0, [r0, #-1]
   1d13c:	cmp	r0, #48	; 0x30
   1d140:	bne	1d184 <putc_unlocked@plt+0xafcc>
   1d144:	vmov.f64	d9, #36	; 0x41200000  10.0
   1d148:	vmul.f64	d0, d8, d9
   1d14c:	mov	r0, r9
   1d150:	bl	1d4f8 <putc_unlocked@plt+0xb340>
   1d154:	vdiv.f64	d16, d0, d9
   1d158:	vstr	d16, [sp]
   1d15c:	movw	r3, #34252	; 0x85cc
   1d160:	movt	r3, #2
   1d164:	mov	r0, sl
   1d168:	mov	r1, #1
   1d16c:	mvn	r2, #0
   1d170:	bl	11ff0 <__sprintf_chk@plt>
   1d174:	mov	r0, sl
   1d178:	bl	11fc0 <strlen@plt>
   1d17c:	mov	r2, r0
   1d180:	mov	r7, #0
   1d184:	mov	r9, r4
   1d188:	sub	r4, r9, r2
   1d18c:	mov	r0, r4
   1d190:	mov	r1, sl
   1d194:	bl	11d38 <memmove@plt>
   1d198:	sub	r0, r9, r7
   1d19c:	tst	r8, #4
   1d1a0:	beq	1d1bc <putc_unlocked@plt+0xb004>
   1d1a4:	sub	r1, r0, r4
   1d1a8:	mov	r0, r4
   1d1ac:	ldr	r2, [sp, #20]
   1d1b0:	ldr	r3, [sp, #16]
   1d1b4:	bl	1d580 <putc_unlocked@plt+0xb3c8>
   1d1b8:	mov	r4, r0
   1d1bc:	ldr	r3, [fp, #20]
   1d1c0:	ldr	r7, [fp, #16]
   1d1c4:	ldr	r6, [sp, #52]	; 0x34
   1d1c8:	tst	r8, #128	; 0x80
   1d1cc:	beq	1d348 <putc_unlocked@plt+0xb190>
   1d1d0:	cmn	r5, #1
   1d1d4:	bgt	1d2e0 <putc_unlocked@plt+0xb128>
   1d1d8:	mov	r5, #0
   1d1dc:	subs	r0, r7, #2
   1d1e0:	sbcs	r0, r3, #0
   1d1e4:	bcc	1d2e0 <putc_unlocked@plt+0xb128>
   1d1e8:	mov	r0, #0
   1d1ec:	mov	r1, #1
   1d1f0:	mov	r5, #0
   1d1f4:	cmp	r5, #7
   1d1f8:	beq	1d2dc <putc_unlocked@plt+0xb124>
   1d1fc:	add	r5, r5, #1
   1d200:	umull	r1, r2, r1, r6
   1d204:	mla	r0, r0, r6, r2
   1d208:	subs	r2, r1, r7
   1d20c:	sbcs	r2, r0, r3
   1d210:	bcc	1d1f4 <putc_unlocked@plt+0xb03c>
   1d214:	b	1d2e0 <putc_unlocked@plt+0xb128>
   1d218:	ldr	r9, [sp, #40]	; 0x28
   1d21c:	ldr	sl, [sp, #32]
   1d220:	b	1d3e8 <putc_unlocked@plt+0xb230>
   1d224:	str	ip, [sp, #48]	; 0x30
   1d228:	mov	r5, #0
   1d22c:	mov	r0, r9
   1d230:	mov	r1, r7
   1d234:	mov	r2, r6
   1d238:	mov	r3, #0
   1d23c:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1d240:	mov	r8, r0
   1d244:	mov	r7, r1
   1d248:	mls	r0, r0, r6, r9
   1d24c:	add	r0, r0, r0, lsl #2
   1d250:	add	r0, r4, r0, lsl #1
   1d254:	udiv	r4, r0, r6
   1d258:	mls	r0, r4, r6, r0
   1d25c:	lsl	r0, r0, #1
   1d260:	add	r0, r0, sl, lsr #1
   1d264:	cmp	r0, r6
   1d268:	bcs	1d280 <putc_unlocked@plt+0xb0c8>
   1d26c:	add	r1, r0, sl
   1d270:	cmn	r0, sl
   1d274:	movwne	r1, #1
   1d278:	mov	sl, r1
   1d27c:	b	1d290 <putc_unlocked@plt+0xb0d8>
   1d280:	add	r0, r0, sl
   1d284:	cmp	r6, r0
   1d288:	mov	sl, #2
   1d28c:	movwcc	sl, #3
   1d290:	add	r5, r5, #1
   1d294:	cmp	r5, #7
   1d298:	bhi	1d2ac <putc_unlocked@plt+0xb0f4>
   1d29c:	subs	r0, r8, r6
   1d2a0:	sbcs	r0, r7, #0
   1d2a4:	mov	r9, r8
   1d2a8:	bcs	1d22c <putc_unlocked@plt+0xb074>
   1d2ac:	rsbs	r0, r8, #9
   1d2b0:	rscs	r0, r7, #0
   1d2b4:	bcc	1d364 <putc_unlocked@plt+0xb1ac>
   1d2b8:	ldr	r9, [sp, #28]
   1d2bc:	cmp	r9, #1
   1d2c0:	ldr	ip, [sp, #48]	; 0x30
   1d2c4:	bne	1d43c <putc_unlocked@plt+0xb284>
   1d2c8:	and	r0, r4, #1
   1d2cc:	add	r0, sl, r0
   1d2d0:	cmp	r0, #2
   1d2d4:	bhi	1d44c <putc_unlocked@plt+0xb294>
   1d2d8:	b	1d480 <putc_unlocked@plt+0xb2c8>
   1d2dc:	mov	r5, #8
   1d2e0:	and	r0, r8, #256	; 0x100
   1d2e4:	tst	r8, #64	; 0x40
   1d2e8:	orrsne	r1, r5, r0
   1d2ec:	movne	r1, #32
   1d2f0:	strbne	r1, [sl, #647]	; 0x287
   1d2f4:	addne	r9, sl, #648	; 0x288
   1d2f8:	cmp	r5, #0
   1d2fc:	beq	1d324 <putc_unlocked@plt+0xb16c>
   1d300:	ldr	r1, [sp, #24]
   1d304:	cmp	r1, #0
   1d308:	moveq	r1, #107	; 0x6b
   1d30c:	cmpeq	r5, #1
   1d310:	beq	1d320 <putc_unlocked@plt+0xb168>
   1d314:	movw	r1, #34308	; 0x8604
   1d318:	movt	r1, #2
   1d31c:	ldrb	r1, [r1, r5]
   1d320:	strb	r1, [r9], #1
   1d324:	cmp	r0, #0
   1d328:	beq	1d348 <putc_unlocked@plt+0xb190>
   1d32c:	ldr	r0, [sp, #24]
   1d330:	cmp	r0, #0
   1d334:	cmpne	r5, #0
   1d338:	movne	r0, #105	; 0x69
   1d33c:	strbne	r0, [r9], #1
   1d340:	mov	r0, #66	; 0x42
   1d344:	strb	r0, [r9], #1
   1d348:	mov	r0, #0
   1d34c:	strb	r0, [r9]
   1d350:	mov	r0, r4
   1d354:	sub	sp, fp, #48	; 0x30
   1d358:	vpop	{d8-d9}
   1d35c:	add	sp, sp, #4
   1d360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d364:	ldr	r3, [sp, #40]	; 0x28
   1d368:	ldr	r9, [sp, #28]
   1d36c:	ldr	ip, [sp, #48]	; 0x30
   1d370:	cmp	r9, #0
   1d374:	bne	1cfcc <putc_unlocked@plt+0xae14>
   1d378:	add	r0, r4, sl
   1d37c:	cmp	r0, #1
   1d380:	ldr	r9, [sp, #40]	; 0x28
   1d384:	ldr	sl, [sp, #32]
   1d388:	blt	1d3e8 <putc_unlocked@plt+0xb230>
   1d38c:	adds	r8, r8, #1
   1d390:	adc	r7, r7, #0
   1d394:	cmp	r5, #7
   1d398:	bgt	1d3e8 <putc_unlocked@plt+0xb230>
   1d39c:	cmp	ip, #0
   1d3a0:	beq	1d3e8 <putc_unlocked@plt+0xb230>
   1d3a4:	eor	r0, r8, r6
   1d3a8:	orrs	r0, r0, r7
   1d3ac:	addeq	r5, r5, #1
   1d3b0:	moveq	r7, #0
   1d3b4:	moveq	r8, #1
   1d3b8:	ldreq	r0, [sp, #44]	; 0x2c
   1d3bc:	tsteq	r0, #8
   1d3c0:	bne	1d3e8 <putc_unlocked@plt+0xb230>
   1d3c4:	mov	r0, #48	; 0x30
   1d3c8:	strb	r0, [r3, #-1]!
   1d3cc:	ldr	r2, [sp, #12]
   1d3d0:	sub	r3, r3, r2
   1d3d4:	mov	r0, r3
   1d3d8:	ldr	r1, [sp, #8]
   1d3dc:	mov	r4, r3
   1d3e0:	bl	11d74 <memcpy@plt>
   1d3e4:	mov	r3, r4
   1d3e8:	str	r3, [sp, #48]	; 0x30
   1d3ec:	mov	r4, r3
   1d3f0:	mov	r0, r8
   1d3f4:	mov	r1, r7
   1d3f8:	mov	r2, #10
   1d3fc:	mov	r3, #0
   1d400:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1d404:	add	r2, r0, r0, lsl #2
   1d408:	sub	r2, r8, r2, lsl #1
   1d40c:	orr	r2, r2, #48	; 0x30
   1d410:	strb	r2, [r4, #-1]!
   1d414:	rsbs	r2, r8, #9
   1d418:	rscs	r2, r7, #0
   1d41c:	mov	r8, r0
   1d420:	mov	r7, r1
   1d424:	bcc	1d3f0 <putc_unlocked@plt+0xb238>
   1d428:	ldr	r8, [sp, #44]	; 0x2c
   1d42c:	ldr	r0, [sp, #48]	; 0x30
   1d430:	tst	r8, #4
   1d434:	bne	1d1a4 <putc_unlocked@plt+0xafec>
   1d438:	b	1d1bc <putc_unlocked@plt+0xb004>
   1d43c:	cmp	r9, #0
   1d440:	bne	1d480 <putc_unlocked@plt+0xb2c8>
   1d444:	cmp	sl, #0
   1d448:	beq	1d480 <putc_unlocked@plt+0xb2c8>
   1d44c:	adds	r0, r8, #1
   1d450:	adc	r1, r7, #0
   1d454:	add	r4, r4, #1
   1d458:	mov	sl, #0
   1d45c:	cmp	r4, #10
   1d460:	bne	1d480 <putc_unlocked@plt+0xb2c8>
   1d464:	mov	r4, #0
   1d468:	rsbs	r2, r0, #9
   1d46c:	rscs	r2, r1, #0
   1d470:	mov	r8, r0
   1d474:	mov	r7, r1
   1d478:	mov	sl, #0
   1d47c:	bcc	1d4d8 <putc_unlocked@plt+0xb320>
   1d480:	ldr	r0, [sp, #44]	; 0x2c
   1d484:	tst	r0, #8
   1d488:	beq	1d49c <putc_unlocked@plt+0xb2e4>
   1d48c:	cmp	r4, #0
   1d490:	bne	1d49c <putc_unlocked@plt+0xb2e4>
   1d494:	ldr	r3, [sp, #40]	; 0x28
   1d498:	b	1d4c8 <putc_unlocked@plt+0xb310>
   1d49c:	add	r0, r4, #48	; 0x30
   1d4a0:	ldr	r1, [sp, #32]
   1d4a4:	strb	r0, [r1, #646]!	; 0x286
   1d4a8:	ldr	r2, [sp, #12]
   1d4ac:	sub	r4, r1, r2
   1d4b0:	mov	r0, r4
   1d4b4:	ldr	r1, [sp, #8]
   1d4b8:	bl	11d74 <memcpy@plt>
   1d4bc:	mov	r3, r4
   1d4c0:	ldr	ip, [sp, #48]	; 0x30
   1d4c4:	mov	sl, #0
   1d4c8:	mov	r4, #0
   1d4cc:	cmp	r9, #0
   1d4d0:	bne	1cfcc <putc_unlocked@plt+0xae14>
   1d4d4:	b	1d378 <putc_unlocked@plt+0xb1c0>
   1d4d8:	mov	sl, #0
   1d4dc:	ldr	r3, [sp, #40]	; 0x28
   1d4e0:	mov	r8, #10
   1d4e4:	mov	r7, #0
   1d4e8:	cmp	r9, #0
   1d4ec:	bne	1cfcc <putc_unlocked@plt+0xae14>
   1d4f0:	b	1d378 <putc_unlocked@plt+0xb1c0>
   1d4f4:	nop	{0}
   1d4f8:	push	{r4, r5, r6, sl, fp, lr}
   1d4fc:	add	fp, sp, #16
   1d500:	vpush	{d8}
   1d504:	vmov.f64	d8, d0
   1d508:	cmp	r0, #1
   1d50c:	beq	1d568 <putc_unlocked@plt+0xb3b0>
   1d510:	vldr	d16, [pc, #96]	; 1d578 <putc_unlocked@plt+0xb3c0>
   1d514:	vcmpe.f64	d8, d16
   1d518:	vmrs	APSR_nzcv, fpscr
   1d51c:	bpl	1d568 <putc_unlocked@plt+0xb3b0>
   1d520:	mov	r4, r0
   1d524:	vmov	r0, r1, d8
   1d528:	bl	24450 <_obstack_memory_used@@Base+0x4088>
   1d52c:	mov	r5, r0
   1d530:	mov	r6, r1
   1d534:	bl	242bc <_obstack_memory_used@@Base+0x3ef4>
   1d538:	mov	r2, #0
   1d53c:	vmov	d16, r0, r1
   1d540:	vcmp.f64	d16, d8
   1d544:	vmrs	APSR_nzcv, fpscr
   1d548:	movwne	r2, #1
   1d54c:	clz	r0, r4
   1d550:	lsr	r0, r0, #5
   1d554:	and	r0, r0, r2
   1d558:	adds	r0, r0, r5
   1d55c:	adc	r1, r6, #0
   1d560:	bl	242bc <_obstack_memory_used@@Base+0x3ef4>
   1d564:	vmov	d8, r0, r1
   1d568:	vorr	d0, d8, d8
   1d56c:	vpop	{d8}
   1d570:	pop	{r4, r5, r6, sl, fp, pc}
   1d574:	nop	{0}
   1d578:	andeq	r0, r0, r0
   1d57c:	mvnsmi	r0, #0
   1d580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d584:	add	fp, sp, #28
   1d588:	sub	sp, sp, #52	; 0x34
   1d58c:	mov	r5, r3
   1d590:	mov	r9, r2
   1d594:	mov	r6, r1
   1d598:	mov	r4, r0
   1d59c:	mov	r0, r3
   1d5a0:	bl	11fc0 <strlen@plt>
   1d5a4:	str	r0, [sp, #4]
   1d5a8:	add	sl, sp, #8
   1d5ac:	mov	r0, sl
   1d5b0:	mov	r1, r4
   1d5b4:	mov	r2, r6
   1d5b8:	bl	11d74 <memcpy@plt>
   1d5bc:	add	r0, r4, r6
   1d5c0:	ldrb	r7, [r9]
   1d5c4:	cmp	r7, #255	; 0xff
   1d5c8:	mov	r8, r7
   1d5cc:	moveq	r8, r6
   1d5d0:	cmp	r7, #0
   1d5d4:	mvneq	r8, #0
   1d5d8:	cmp	r8, r6
   1d5dc:	movhi	r8, r6
   1d5e0:	sub	r4, r0, r8
   1d5e4:	sub	r6, r6, r8
   1d5e8:	add	r1, sl, r6
   1d5ec:	mov	r0, r4
   1d5f0:	mov	r2, r8
   1d5f4:	bl	11d74 <memcpy@plt>
   1d5f8:	cmp	r6, #0
   1d5fc:	beq	1d68c <putc_unlocked@plt+0xb4d4>
   1d600:	clz	r0, r7
   1d604:	lsr	sl, r0, #5
   1d608:	ldr	r0, [sp, #4]
   1d60c:	rsb	r0, r0, #0
   1d610:	str	r0, [sp]
   1d614:	ldr	r0, [sp]
   1d618:	add	r4, r4, r0
   1d61c:	mov	r0, r4
   1d620:	mov	r1, r5
   1d624:	ldr	r2, [sp, #4]
   1d628:	bl	11d74 <memcpy@plt>
   1d62c:	tst	sl, #1
   1d630:	addeq	r9, r9, #1
   1d634:	mov	sl, r5
   1d638:	ldrb	r5, [r9]
   1d63c:	cmp	r5, #255	; 0xff
   1d640:	mov	r7, r5
   1d644:	moveq	r7, r6
   1d648:	cmp	r5, #0
   1d64c:	moveq	r7, r8
   1d650:	cmp	r6, r7
   1d654:	movcc	r7, r6
   1d658:	sub	r4, r4, r7
   1d65c:	sub	r6, r6, r7
   1d660:	add	r0, sp, #8
   1d664:	add	r1, r0, r6
   1d668:	mov	r0, r4
   1d66c:	mov	r2, r7
   1d670:	bl	11d74 <memcpy@plt>
   1d674:	clz	r0, r5
   1d678:	mov	r5, sl
   1d67c:	lsr	sl, r0, #5
   1d680:	cmp	r6, #0
   1d684:	mov	r8, r7
   1d688:	bne	1d614 <putc_unlocked@plt+0xb45c>
   1d68c:	mov	r0, r4
   1d690:	sub	sp, fp, #28
   1d694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d698:	push	{r4, sl, fp, lr}
   1d69c:	add	fp, sp, #8
   1d6a0:	mov	r4, r2
   1d6a4:	mov	r2, r1
   1d6a8:	mov	r1, r4
   1d6ac:	bl	1d6cc <putc_unlocked@plt+0xb514>
   1d6b0:	ldrd	r2, [r4]
   1d6b4:	orrs	r1, r2, r3
   1d6b8:	popne	{r4, sl, fp, pc}
   1d6bc:	bl	1d838 <putc_unlocked@plt+0xb680>
   1d6c0:	strd	r0, [r4]
   1d6c4:	mov	r0, #4
   1d6c8:	pop	{r4, sl, fp, pc}
   1d6cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d6d0:	add	fp, sp, #24
   1d6d4:	sub	sp, sp, #8
   1d6d8:	mov	r8, r2
   1d6dc:	mov	r5, r1
   1d6e0:	cmp	r0, #0
   1d6e4:	bne	1d710 <putc_unlocked@plt+0xb558>
   1d6e8:	movw	r0, #25872	; 0x6510
   1d6ec:	movt	r0, #2
   1d6f0:	bl	11f00 <getenv@plt>
   1d6f4:	cmp	r0, #0
   1d6f8:	bne	1d710 <putc_unlocked@plt+0xb558>
   1d6fc:	movw	r0, #34264	; 0x85d8
   1d700:	movt	r0, #2
   1d704:	bl	11f00 <getenv@plt>
   1d708:	cmp	r0, #0
   1d70c:	beq	1d820 <putc_unlocked@plt+0xb668>
   1d710:	mov	r6, r0
   1d714:	ldrb	r4, [r6], #1
   1d718:	cmp	r4, #39	; 0x27
   1d71c:	movne	r6, r0
   1d720:	movw	r1, #34320	; 0x8610
   1d724:	movt	r1, #2
   1d728:	movw	r7, #34332	; 0x861c
   1d72c:	movt	r7, #2
   1d730:	mov	r0, r6
   1d734:	mov	r2, r7
   1d738:	mov	r3, #4
   1d73c:	bl	1a438 <putc_unlocked@plt+0x8280>
   1d740:	sub	r1, r4, #39	; 0x27
   1d744:	clz	r1, r1
   1d748:	lsr	r1, r1, #5
   1d74c:	lsl	r4, r1, #2
   1d750:	cmp	r0, #0
   1d754:	blt	1d774 <putc_unlocked@plt+0xb5bc>
   1d758:	mov	r1, #0
   1d75c:	mov	r2, #1
   1d760:	str	r2, [r5]
   1d764:	str	r1, [r5, #4]
   1d768:	ldr	r0, [r7, r0, lsl #2]
   1d76c:	orr	r0, r0, r4
   1d770:	b	1d7e8 <putc_unlocked@plt+0xb630>
   1d774:	movw	r0, #34274	; 0x85e2
   1d778:	movt	r0, #2
   1d77c:	str	r0, [sp]
   1d780:	add	r1, sp, #4
   1d784:	mov	r7, #0
   1d788:	mov	r0, r6
   1d78c:	mov	r2, #0
   1d790:	mov	r3, r5
   1d794:	bl	234dc <_obstack_memory_used@@Base+0x3114>
   1d798:	cmp	r0, #0
   1d79c:	strne	r7, [r8]
   1d7a0:	subne	sp, fp, #24
   1d7a4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d7a8:	ldrb	r0, [r6]
   1d7ac:	sub	r0, r0, #48	; 0x30
   1d7b0:	uxtb	r0, r0
   1d7b4:	cmp	r0, #10
   1d7b8:	bcc	1d7e4 <putc_unlocked@plt+0xb62c>
   1d7bc:	ldr	r1, [sp, #4]
   1d7c0:	cmp	r1, r6
   1d7c4:	beq	1d7f8 <putc_unlocked@plt+0xb640>
   1d7c8:	add	r0, r6, #1
   1d7cc:	ldrb	r2, [r6, #1]
   1d7d0:	sub	r2, r2, #48	; 0x30
   1d7d4:	uxtb	r2, r2
   1d7d8:	cmp	r2, #10
   1d7dc:	mov	r6, r0
   1d7e0:	bcs	1d7c0 <putc_unlocked@plt+0xb608>
   1d7e4:	mov	r0, r4
   1d7e8:	str	r0, [r8]
   1d7ec:	mov	r0, #0
   1d7f0:	sub	sp, fp, #24
   1d7f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d7f8:	ldrb	r2, [r1, #-1]
   1d7fc:	orr	r0, r4, #384	; 0x180
   1d800:	cmp	r2, #66	; 0x42
   1d804:	mov	r2, r0
   1d808:	orrne	r2, r4, #128	; 0x80
   1d80c:	bne	1d830 <putc_unlocked@plt+0xb678>
   1d810:	ldrb	r1, [r1, #-2]
   1d814:	cmp	r1, #105	; 0x69
   1d818:	orreq	r0, r2, #32
   1d81c:	b	1d7e8 <putc_unlocked@plt+0xb630>
   1d820:	bl	1d838 <putc_unlocked@plt+0xb680>
   1d824:	strd	r0, [r5]
   1d828:	mov	r0, #0
   1d82c:	b	1d7e8 <putc_unlocked@plt+0xb630>
   1d830:	orr	r0, r2, #32
   1d834:	b	1d7e8 <putc_unlocked@plt+0xb630>
   1d838:	push	{fp, lr}
   1d83c:	mov	fp, sp
   1d840:	movw	r0, #34292	; 0x85f4
   1d844:	movt	r0, #2
   1d848:	bl	11f00 <getenv@plt>
   1d84c:	mov	r1, #512	; 0x200
   1d850:	cmp	r0, #0
   1d854:	movweq	r1, #1024	; 0x400
   1d858:	mov	r0, r1
   1d85c:	mov	r1, #0
   1d860:	pop	{fp, pc}
   1d864:	push	{r4, r5, r6, r7, fp, lr}
   1d868:	add	fp, sp, #16
   1d86c:	mov	r4, r0
   1d870:	movw	r7, #41960	; 0xa3e8
   1d874:	movt	r7, #3
   1d878:	ldr	r5, [r7]
   1d87c:	cmp	r5, #0
   1d880:	bne	1d894 <putc_unlocked@plt+0xb6dc>
   1d884:	b	1d8a4 <putc_unlocked@plt+0xb6ec>
   1d888:	ldr	r5, [r5, #4]
   1d88c:	cmp	r5, #0
   1d890:	beq	1d8a4 <putc_unlocked@plt+0xb6ec>
   1d894:	ldr	r0, [r5]
   1d898:	cmp	r0, r4
   1d89c:	bne	1d888 <putc_unlocked@plt+0xb6d0>
   1d8a0:	b	1d8f8 <putc_unlocked@plt+0xb740>
   1d8a4:	mov	r0, r4
   1d8a8:	bl	11cd8 <getpwuid@plt>
   1d8ac:	cmp	r0, #0
   1d8b0:	beq	1d8bc <putc_unlocked@plt+0xb704>
   1d8b4:	ldr	r6, [r0]
   1d8b8:	b	1d8c4 <putc_unlocked@plt+0xb70c>
   1d8bc:	movw	r6, #27261	; 0x6a7d
   1d8c0:	movt	r6, #2
   1d8c4:	mov	r0, r6
   1d8c8:	bl	11fc0 <strlen@plt>
   1d8cc:	add	r0, r0, #12
   1d8d0:	bic	r0, r0, #3
   1d8d4:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   1d8d8:	mov	r5, r0
   1d8dc:	str	r4, [r0]
   1d8e0:	add	r0, r0, #8
   1d8e4:	mov	r1, r6
   1d8e8:	bl	11e88 <strcpy@plt>
   1d8ec:	ldr	r0, [r7]
   1d8f0:	str	r0, [r5, #4]
   1d8f4:	str	r5, [r7]
   1d8f8:	ldrb	r0, [r5, #8]!
   1d8fc:	cmp	r0, #0
   1d900:	moveq	r5, r0
   1d904:	mov	r0, r5
   1d908:	pop	{r4, r5, r6, r7, fp, pc}
   1d90c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d910:	add	fp, sp, #24
   1d914:	mov	r4, r0
   1d918:	movw	r8, #41960	; 0xa3e8
   1d91c:	movt	r8, #3
   1d920:	ldr	r5, [r8]
   1d924:	cmp	r5, #0
   1d928:	beq	1d95c <putc_unlocked@plt+0xb7a4>
   1d92c:	ldrb	r6, [r4]
   1d930:	mov	r0, r5
   1d934:	ldrb	r1, [r0, #8]!
   1d938:	cmp	r1, r6
   1d93c:	bne	1d950 <putc_unlocked@plt+0xb798>
   1d940:	mov	r1, r4
   1d944:	bl	11ccc <strcmp@plt>
   1d948:	cmp	r0, #0
   1d94c:	beq	1da00 <putc_unlocked@plt+0xb848>
   1d950:	ldr	r5, [r5, #4]
   1d954:	cmp	r5, #0
   1d958:	bne	1d930 <putc_unlocked@plt+0xb778>
   1d95c:	movw	r7, #41964	; 0xa3ec
   1d960:	movt	r7, #3
   1d964:	ldr	r5, [r7]
   1d968:	cmp	r5, #0
   1d96c:	beq	1d9a0 <putc_unlocked@plt+0xb7e8>
   1d970:	ldrb	r6, [r4]
   1d974:	mov	r0, r5
   1d978:	ldrb	r1, [r0, #8]!
   1d97c:	cmp	r1, r6
   1d980:	bne	1d994 <putc_unlocked@plt+0xb7dc>
   1d984:	mov	r1, r4
   1d988:	bl	11ccc <strcmp@plt>
   1d98c:	cmp	r0, #0
   1d990:	beq	1d9fc <putc_unlocked@plt+0xb844>
   1d994:	ldr	r5, [r5, #4]
   1d998:	cmp	r5, #0
   1d99c:	bne	1d974 <putc_unlocked@plt+0xb7bc>
   1d9a0:	mov	r0, r4
   1d9a4:	bl	11cc0 <getpwnam@plt>
   1d9a8:	mov	r6, r0
   1d9ac:	mov	r0, r4
   1d9b0:	bl	11fc0 <strlen@plt>
   1d9b4:	add	r0, r0, #12
   1d9b8:	bic	r0, r0, #3
   1d9bc:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   1d9c0:	mov	r5, r0
   1d9c4:	add	r0, r0, #8
   1d9c8:	mov	r1, r4
   1d9cc:	bl	11e88 <strcpy@plt>
   1d9d0:	cmp	r6, #0
   1d9d4:	beq	1d9f0 <putc_unlocked@plt+0xb838>
   1d9d8:	ldr	r0, [r6, #8]
   1d9dc:	ldr	r1, [r8]
   1d9e0:	stm	r5, {r0, r1}
   1d9e4:	str	r5, [r8]
   1d9e8:	mov	r0, r5
   1d9ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d9f0:	ldr	r0, [r7]
   1d9f4:	str	r0, [r5, #4]
   1d9f8:	str	r5, [r7]
   1d9fc:	mov	r5, #0
   1da00:	mov	r0, r5
   1da04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1da08:	push	{r4, r5, r6, r7, fp, lr}
   1da0c:	add	fp, sp, #16
   1da10:	mov	r4, r0
   1da14:	movw	r7, #41968	; 0xa3f0
   1da18:	movt	r7, #3
   1da1c:	ldr	r5, [r7]
   1da20:	cmp	r5, #0
   1da24:	bne	1da38 <putc_unlocked@plt+0xb880>
   1da28:	b	1da48 <putc_unlocked@plt+0xb890>
   1da2c:	ldr	r5, [r5, #4]
   1da30:	cmp	r5, #0
   1da34:	beq	1da48 <putc_unlocked@plt+0xb890>
   1da38:	ldr	r0, [r5]
   1da3c:	cmp	r0, r4
   1da40:	bne	1da2c <putc_unlocked@plt+0xb874>
   1da44:	b	1da9c <putc_unlocked@plt+0xb8e4>
   1da48:	mov	r0, r4
   1da4c:	bl	12164 <getgrgid@plt>
   1da50:	cmp	r0, #0
   1da54:	beq	1da60 <putc_unlocked@plt+0xb8a8>
   1da58:	ldr	r6, [r0]
   1da5c:	b	1da68 <putc_unlocked@plt+0xb8b0>
   1da60:	movw	r6, #27261	; 0x6a7d
   1da64:	movt	r6, #2
   1da68:	mov	r0, r6
   1da6c:	bl	11fc0 <strlen@plt>
   1da70:	add	r0, r0, #12
   1da74:	bic	r0, r0, #3
   1da78:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   1da7c:	mov	r5, r0
   1da80:	str	r4, [r0]
   1da84:	add	r0, r0, #8
   1da88:	mov	r1, r6
   1da8c:	bl	11e88 <strcpy@plt>
   1da90:	ldr	r0, [r7]
   1da94:	str	r0, [r5, #4]
   1da98:	str	r5, [r7]
   1da9c:	ldrb	r0, [r5, #8]!
   1daa0:	cmp	r0, #0
   1daa4:	moveq	r5, r0
   1daa8:	mov	r0, r5
   1daac:	pop	{r4, r5, r6, r7, fp, pc}
   1dab0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dab4:	add	fp, sp, #24
   1dab8:	mov	r4, r0
   1dabc:	movw	r8, #41968	; 0xa3f0
   1dac0:	movt	r8, #3
   1dac4:	ldr	r5, [r8]
   1dac8:	cmp	r5, #0
   1dacc:	beq	1db00 <putc_unlocked@plt+0xb948>
   1dad0:	ldrb	r6, [r4]
   1dad4:	mov	r0, r5
   1dad8:	ldrb	r1, [r0, #8]!
   1dadc:	cmp	r1, r6
   1dae0:	bne	1daf4 <putc_unlocked@plt+0xb93c>
   1dae4:	mov	r1, r4
   1dae8:	bl	11ccc <strcmp@plt>
   1daec:	cmp	r0, #0
   1daf0:	beq	1dba4 <putc_unlocked@plt+0xb9ec>
   1daf4:	ldr	r5, [r5, #4]
   1daf8:	cmp	r5, #0
   1dafc:	bne	1dad4 <putc_unlocked@plt+0xb91c>
   1db00:	movw	r7, #41972	; 0xa3f4
   1db04:	movt	r7, #3
   1db08:	ldr	r5, [r7]
   1db0c:	cmp	r5, #0
   1db10:	beq	1db44 <putc_unlocked@plt+0xb98c>
   1db14:	ldrb	r6, [r4]
   1db18:	mov	r0, r5
   1db1c:	ldrb	r1, [r0, #8]!
   1db20:	cmp	r1, r6
   1db24:	bne	1db38 <putc_unlocked@plt+0xb980>
   1db28:	mov	r1, r4
   1db2c:	bl	11ccc <strcmp@plt>
   1db30:	cmp	r0, #0
   1db34:	beq	1dba0 <putc_unlocked@plt+0xb9e8>
   1db38:	ldr	r5, [r5, #4]
   1db3c:	cmp	r5, #0
   1db40:	bne	1db18 <putc_unlocked@plt+0xb960>
   1db44:	mov	r0, r4
   1db48:	bl	12170 <getgrnam@plt>
   1db4c:	mov	r6, r0
   1db50:	mov	r0, r4
   1db54:	bl	11fc0 <strlen@plt>
   1db58:	add	r0, r0, #12
   1db5c:	bic	r0, r0, #3
   1db60:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   1db64:	mov	r5, r0
   1db68:	add	r0, r0, #8
   1db6c:	mov	r1, r4
   1db70:	bl	11e88 <strcpy@plt>
   1db74:	cmp	r6, #0
   1db78:	beq	1db94 <putc_unlocked@plt+0xb9dc>
   1db7c:	ldr	r0, [r6, #8]
   1db80:	ldr	r1, [r8]
   1db84:	stm	r5, {r0, r1}
   1db88:	str	r5, [r8]
   1db8c:	mov	r0, r5
   1db90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1db94:	ldr	r0, [r7]
   1db98:	str	r0, [r5, #4]
   1db9c:	str	r5, [r7]
   1dba0:	mov	r5, #0
   1dba4:	mov	r0, r5
   1dba8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dbac:	push	{r4, r5, r6, sl, fp, lr}
   1dbb0:	add	fp, sp, #16
   1dbb4:	mov	r4, r1
   1dbb8:	mov	r5, r0
   1dbbc:	mov	r0, #0
   1dbc0:	strb	r0, [r2, #20]
   1dbc4:	add	r6, r2, #19
   1dbc8:	cmp	r1, #0
   1dbcc:	blt	1dc1c <putc_unlocked@plt+0xba64>
   1dbd0:	mov	r0, r5
   1dbd4:	mov	r1, r4
   1dbd8:	mov	r2, #10
   1dbdc:	mov	r3, #0
   1dbe0:	bl	24330 <_obstack_memory_used@@Base+0x3f68>
   1dbe4:	add	r2, r0, r0, lsl #2
   1dbe8:	sub	r2, r5, r2, lsl #1
   1dbec:	add	r2, r2, #48	; 0x30
   1dbf0:	strb	r2, [r6], #-1
   1dbf4:	adds	r2, r5, #9
   1dbf8:	adc	r3, r4, #0
   1dbfc:	rsbs	r2, r2, #18
   1dc00:	rscs	r2, r3, #0
   1dc04:	mov	r5, r0
   1dc08:	mov	r4, r1
   1dc0c:	bcc	1dbd0 <putc_unlocked@plt+0xba18>
   1dc10:	add	r6, r6, #1
   1dc14:	mov	r0, r6
   1dc18:	pop	{r4, r5, r6, sl, fp, pc}
   1dc1c:	mov	r0, r5
   1dc20:	mov	r1, r4
   1dc24:	mov	r2, #10
   1dc28:	mov	r3, #0
   1dc2c:	bl	24330 <_obstack_memory_used@@Base+0x3f68>
   1dc30:	add	r2, r0, r0, lsl #2
   1dc34:	rsb	r2, r5, r2, lsl #1
   1dc38:	add	r2, r2, #48	; 0x30
   1dc3c:	strb	r2, [r6], #-1
   1dc40:	adds	r2, r5, #9
   1dc44:	adc	r3, r4, #0
   1dc48:	rsbs	r2, r2, #18
   1dc4c:	rscs	r2, r3, #0
   1dc50:	mov	r5, r0
   1dc54:	mov	r4, r1
   1dc58:	bcc	1dc1c <putc_unlocked@plt+0xba64>
   1dc5c:	mov	r0, #45	; 0x2d
   1dc60:	strb	r0, [r6]
   1dc64:	mov	r0, r6
   1dc68:	pop	{r4, r5, r6, sl, fp, pc}
   1dc6c:	push	{r4, r5, r6, sl, fp, lr}
   1dc70:	add	fp, sp, #16
   1dc74:	mov	r4, r1
   1dc78:	mov	r5, r0
   1dc7c:	mov	r0, #0
   1dc80:	strb	r0, [r2, #20]
   1dc84:	add	r6, r2, #19
   1dc88:	mov	r0, r5
   1dc8c:	mov	r1, r4
   1dc90:	mov	r2, #10
   1dc94:	mov	r3, #0
   1dc98:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   1dc9c:	add	r2, r0, r0, lsl #2
   1dca0:	sub	r2, r5, r2, lsl #1
   1dca4:	orr	r2, r2, #48	; 0x30
   1dca8:	strb	r2, [r6], #-1
   1dcac:	rsbs	r2, r5, #9
   1dcb0:	rscs	r2, r4, #0
   1dcb4:	mov	r5, r0
   1dcb8:	mov	r4, r1
   1dcbc:	bcc	1dc88 <putc_unlocked@plt+0xbad0>
   1dcc0:	add	r0, r6, #1
   1dcc4:	pop	{r4, r5, r6, sl, fp, pc}
   1dcc8:	push	{r4, r5, r6, r7, fp, lr}
   1dccc:	add	fp, sp, #16
   1dcd0:	sub	sp, sp, #8
   1dcd4:	mov	r7, r2
   1dcd8:	mov	r4, r1
   1dcdc:	add	r5, sp, #4
   1dce0:	cmp	r0, #0
   1dce4:	movne	r5, r0
   1dce8:	mov	r0, r5
   1dcec:	bl	11eac <mbrtowc@plt>
   1dcf0:	mov	r6, r0
   1dcf4:	cmp	r7, #0
   1dcf8:	beq	1dd1c <putc_unlocked@plt+0xbb64>
   1dcfc:	cmn	r6, #2
   1dd00:	bcc	1dd1c <putc_unlocked@plt+0xbb64>
   1dd04:	mov	r0, #0
   1dd08:	bl	1bd50 <putc_unlocked@plt+0x9b98>
   1dd0c:	cmp	r0, #0
   1dd10:	ldrbeq	r0, [r4]
   1dd14:	streq	r0, [r5]
   1dd18:	moveq	r6, #1
   1dd1c:	mov	r0, r6
   1dd20:	sub	sp, fp, #16
   1dd24:	pop	{r4, r5, r6, r7, fp, pc}
   1dd28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd2c:	add	fp, sp, #28
   1dd30:	sub	sp, sp, #20
   1dd34:	str	r3, [sp, #16]
   1dd38:	str	r2, [sp, #12]
   1dd3c:	mov	r4, r1
   1dd40:	mov	r6, r0
   1dd44:	bl	11fc0 <strlen@plt>
   1dd48:	mov	r8, r0
   1dd4c:	mov	sl, #0
   1dd50:	ldr	r2, [fp, #12]
   1dd54:	tst	r2, #2
   1dd58:	stmib	sp, {r4, r6}
   1dd5c:	bne	1ddfc <putc_unlocked@plt+0xbc44>
   1dd60:	bl	11e7c <__ctype_get_mb_cur_max@plt>
   1dd64:	mov	r7, #0
   1dd68:	cmp	r0, #2
   1dd6c:	bcc	1de0c <putc_unlocked@plt+0xbc54>
   1dd70:	mov	r0, #0
   1dd74:	mov	r1, r6
   1dd78:	mov	r2, #0
   1dd7c:	bl	120c8 <mbstowcs@plt>
   1dd80:	cmn	r0, #1
   1dd84:	beq	1de20 <putc_unlocked@plt+0xbc68>
   1dd88:	mov	r5, r0
   1dd8c:	add	r4, r0, #1
   1dd90:	lsl	r0, r4, #2
   1dd94:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1dd98:	cmp	r0, #0
   1dd9c:	beq	1de1c <putc_unlocked@plt+0xbc64>
   1dda0:	mov	r1, r6
   1dda4:	mov	r2, r4
   1dda8:	mov	r9, r0
   1ddac:	bl	120c8 <mbstowcs@plt>
   1ddb0:	cmp	r0, #0
   1ddb4:	beq	1de40 <putc_unlocked@plt+0xbc88>
   1ddb8:	mov	r0, #0
   1ddbc:	str	r0, [r9, r5, lsl #2]
   1ddc0:	mov	r0, r9
   1ddc4:	bl	1dfc4 <putc_unlocked@plt+0xbe0c>
   1ddc8:	mov	r5, r0
   1ddcc:	mov	r0, r9
   1ddd0:	mov	r1, r4
   1ddd4:	bl	1208c <wcswidth@plt>
   1ddd8:	mov	r4, r0
   1dddc:	cmp	r5, #0
   1dde0:	str	r9, [sp]
   1dde4:	beq	1de54 <putc_unlocked@plt+0xbc9c>
   1dde8:	mov	r0, #0
   1ddec:	mov	r1, r9
   1ddf0:	mov	r2, #0
   1ddf4:	bl	11eb8 <wcstombs@plt>
   1ddf8:	b	1de68 <putc_unlocked@plt+0xbcb0>
   1ddfc:	mov	r7, #0
   1de00:	mov	r3, #0
   1de04:	mov	r4, r8
   1de08:	b	1dee4 <putc_unlocked@plt+0xbd2c>
   1de0c:	mov	r3, #0
   1de10:	mov	r4, r8
   1de14:	ldr	r2, [fp, #12]
   1de18:	b	1dee4 <putc_unlocked@plt+0xbd2c>
   1de1c:	mov	r7, #0
   1de20:	mvn	r5, #0
   1de24:	ldr	r2, [fp, #12]
   1de28:	tst	r2, #1
   1de2c:	mov	r3, #0
   1de30:	mov	r4, r8
   1de34:	mov	r0, #0
   1de38:	bne	1dee4 <putc_unlocked@plt+0xbd2c>
   1de3c:	b	1dfac <putc_unlocked@plt+0xbdf4>
   1de40:	mov	r4, r8
   1de44:	ldr	r2, [fp, #12]
   1de48:	mov	r3, r9
   1de4c:	mov	r7, #0
   1de50:	b	1dee4 <putc_unlocked@plt+0xbd2c>
   1de54:	ldr	r0, [sp, #16]
   1de58:	ldr	r0, [r0]
   1de5c:	cmp	r4, r0
   1de60:	mov	r0, r8
   1de64:	bls	1deb8 <putc_unlocked@plt+0xbd00>
   1de68:	add	r9, r0, #1
   1de6c:	mov	r0, r9
   1de70:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   1de74:	cmp	r0, #0
   1de78:	beq	1dec8 <putc_unlocked@plt+0xbd10>
   1de7c:	mov	r7, r0
   1de80:	ldr	r0, [sp, #16]
   1de84:	ldr	r1, [r0]
   1de88:	ldr	r5, [sp]
   1de8c:	mov	r0, r5
   1de90:	bl	1e014 <putc_unlocked@plt+0xbe5c>
   1de94:	mov	r4, r0
   1de98:	mov	r0, r7
   1de9c:	mov	r1, r5
   1dea0:	mov	r2, r9
   1dea4:	bl	11eb8 <wcstombs@plt>
   1dea8:	mov	r3, r5
   1deac:	mov	r8, r0
   1deb0:	str	r7, [sp, #8]
   1deb4:	b	1de14 <putc_unlocked@plt+0xbc5c>
   1deb8:	ldr	r2, [fp, #12]
   1debc:	ldr	r3, [sp]
   1dec0:	mov	r7, #0
   1dec4:	b	1dee4 <putc_unlocked@plt+0xbd2c>
   1dec8:	mov	r7, #0
   1decc:	mvn	r5, #0
   1ded0:	ldr	r2, [fp, #12]
   1ded4:	tst	r2, #1
   1ded8:	ldr	r3, [sp]
   1dedc:	mov	r0, r3
   1dee0:	beq	1dfac <putc_unlocked@plt+0xbdf4>
   1dee4:	ldr	r9, [fp, #8]
   1dee8:	ldr	r6, [sp, #16]
   1deec:	ldr	r0, [r6]
   1def0:	cmp	r4, r0
   1def4:	mov	r1, r4
   1def8:	movhi	r1, r0
   1defc:	str	r1, [r6]
   1df00:	movhi	r8, r0
   1df04:	cmp	r0, r4
   1df08:	subhi	sl, r0, r1
   1df0c:	cmp	r9, #0
   1df10:	beq	1df28 <putc_unlocked@plt+0xbd70>
   1df14:	cmp	r9, #1
   1df18:	bne	1df30 <putc_unlocked@plt+0xbd78>
   1df1c:	mov	r4, #0
   1df20:	mov	r9, sl
   1df24:	b	1df3c <putc_unlocked@plt+0xbd84>
   1df28:	mov	r4, sl
   1df2c:	b	1df3c <putc_unlocked@plt+0xbd84>
   1df30:	and	r0, sl, #1
   1df34:	add	r9, r0, sl, lsr #1
   1df38:	lsr	r4, sl, #1
   1df3c:	ldr	r1, [sp, #12]
   1df40:	mov	r0, #0
   1df44:	tst	r2, #8
   1df48:	movne	r4, r0
   1df4c:	tst	r2, #4
   1df50:	movne	r9, r0
   1df54:	cmp	r1, #0
   1df58:	beq	1dfa0 <putc_unlocked@plt+0xbde8>
   1df5c:	ldr	r0, [sp, #4]
   1df60:	add	r1, r0, r1
   1df64:	sub	r5, r1, #1
   1df68:	mov	r1, r5
   1df6c:	mov	r2, r9
   1df70:	mov	r6, r3
   1df74:	bl	1e084 <putc_unlocked@plt+0xbecc>
   1df78:	sub	r2, r5, r0
   1df7c:	cmp	r8, r2
   1df80:	movcc	r2, r8
   1df84:	ldr	r1, [sp, #8]
   1df88:	mvn	r3, #0
   1df8c:	bl	121a0 <__mempcpy_chk@plt>
   1df90:	mov	r1, r5
   1df94:	mov	r2, r4
   1df98:	bl	1e084 <putc_unlocked@plt+0xbecc>
   1df9c:	mov	r3, r6
   1dfa0:	add	r0, r9, r8
   1dfa4:	add	r5, r0, r4
   1dfa8:	mov	r0, r3
   1dfac:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1dfb0:	mov	r0, r7
   1dfb4:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1dfb8:	mov	r0, r5
   1dfbc:	sub	sp, fp, #28
   1dfc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dfc4:	push	{r4, r5, r6, sl, fp, lr}
   1dfc8:	add	fp, sp, #16
   1dfcc:	mov	r1, r0
   1dfd0:	ldr	r0, [r0]
   1dfd4:	cmp	r0, #0
   1dfd8:	moveq	r4, #0
   1dfdc:	andeq	r0, r4, #1
   1dfe0:	popeq	{r4, r5, r6, sl, fp, pc}
   1dfe4:	add	r5, r1, #4
   1dfe8:	mov	r4, #0
   1dfec:	movw	r6, #65533	; 0xfffd
   1dff0:	bl	11e28 <iswprint@plt>
   1dff4:	cmp	r0, #0
   1dff8:	streq	r6, [r5, #-4]
   1dffc:	moveq	r4, #1
   1e000:	ldr	r0, [r5], #4
   1e004:	cmp	r0, #0
   1e008:	andeq	r0, r4, #1
   1e00c:	popeq	{r4, r5, r6, sl, fp, pc}
   1e010:	b	1dff0 <putc_unlocked@plt+0xbe38>
   1e014:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e018:	add	fp, sp, #24
   1e01c:	mov	r4, r0
   1e020:	ldr	r0, [r0]
   1e024:	mov	r8, #0
   1e028:	cmp	r0, #0
   1e02c:	beq	1e06c <putc_unlocked@plt+0xbeb4>
   1e030:	mov	r5, r1
   1e034:	mov	r6, #0
   1e038:	movw	r7, #65533	; 0xfffd
   1e03c:	bl	11d14 <wcwidth@plt>
   1e040:	cmn	r0, #1
   1e044:	streq	r7, [r4]
   1e048:	moveq	r0, #1
   1e04c:	add	r1, r0, r6
   1e050:	cmp	r1, r5
   1e054:	bhi	1e074 <putc_unlocked@plt+0xbebc>
   1e058:	ldr	r0, [r4, #4]!
   1e05c:	cmp	r0, #0
   1e060:	mov	r6, r1
   1e064:	bne	1e03c <putc_unlocked@plt+0xbe84>
   1e068:	b	1e078 <putc_unlocked@plt+0xbec0>
   1e06c:	mov	r1, #0
   1e070:	b	1e078 <putc_unlocked@plt+0xbec0>
   1e074:	mov	r1, r6
   1e078:	str	r8, [r4]
   1e07c:	mov	r0, r1
   1e080:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e084:	push	{r4, r5, r6, sl, fp, lr}
   1e088:	add	fp, sp, #16
   1e08c:	mov	r4, r0
   1e090:	cmp	r0, r1
   1e094:	bcs	1e0e8 <putc_unlocked@plt+0xbf30>
   1e098:	mov	r6, r2
   1e09c:	cmp	r2, #0
   1e0a0:	beq	1e0e8 <putc_unlocked@plt+0xbf30>
   1e0a4:	mov	r5, r1
   1e0a8:	sub	r0, r4, r1
   1e0ac:	rsb	r1, r6, #0
   1e0b0:	cmp	r0, r1
   1e0b4:	movcc	r0, r1
   1e0b8:	rsb	r2, r0, #0
   1e0bc:	mov	r0, r4
   1e0c0:	mov	r1, #32
   1e0c4:	bl	12008 <memset@plt>
   1e0c8:	rsb	r0, r6, #1
   1e0cc:	add	r4, r4, #1
   1e0d0:	cmp	r4, r5
   1e0d4:	bcs	1e0e8 <putc_unlocked@plt+0xbf30>
   1e0d8:	add	r1, r0, #1
   1e0dc:	cmp	r0, #0
   1e0e0:	mov	r0, r1
   1e0e4:	bne	1e0cc <putc_unlocked@plt+0xbf14>
   1e0e8:	mov	r0, #0
   1e0ec:	strb	r0, [r4]
   1e0f0:	mov	r0, r4
   1e0f4:	pop	{r4, r5, r6, sl, fp, pc}
   1e0f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e0fc:	add	fp, sp, #28
   1e100:	sub	sp, sp, #12
   1e104:	str	r3, [sp, #8]
   1e108:	mov	r9, r2
   1e10c:	mov	r6, r1
   1e110:	mov	sl, r0
   1e114:	ldr	r8, [r1]
   1e118:	mov	r7, #0
   1e11c:	mov	r0, r8
   1e120:	mov	r5, r8
   1e124:	cmp	r0, r5
   1e128:	bcc	1e18c <putc_unlocked@plt+0xbfd4>
   1e12c:	add	r5, r0, #1
   1e130:	mov	r0, r7
   1e134:	mov	r1, r5
   1e138:	bl	23a94 <_obstack_memory_used@@Base+0x36cc>
   1e13c:	cmp	r0, #0
   1e140:	beq	1e180 <putc_unlocked@plt+0xbfc8>
   1e144:	mov	r4, r0
   1e148:	str	r8, [r6]
   1e14c:	str	r9, [sp]
   1e150:	ldr	r0, [sp, #8]
   1e154:	str	r0, [sp, #4]
   1e158:	mov	r0, sl
   1e15c:	mov	r1, r4
   1e160:	mov	r2, r5
   1e164:	mov	r3, r6
   1e168:	bl	1dd28 <putc_unlocked@plt+0xbb70>
   1e16c:	cmn	r0, #1
   1e170:	mov	r7, r4
   1e174:	bne	1e124 <putc_unlocked@plt+0xbf6c>
   1e178:	mov	r0, r4
   1e17c:	b	1e184 <putc_unlocked@plt+0xbfcc>
   1e180:	mov	r0, r7
   1e184:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1e188:	mov	r7, #0
   1e18c:	mov	r0, r7
   1e190:	sub	sp, fp, #28
   1e194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e198:	push	{r4, r5, fp, lr}
   1e19c:	add	fp, sp, #8
   1e1a0:	mov	r4, r1
   1e1a4:	mov	r5, r0
   1e1a8:	bl	11fc0 <strlen@plt>
   1e1ac:	mov	r1, r0
   1e1b0:	mov	r0, r5
   1e1b4:	mov	r2, r4
   1e1b8:	pop	{r4, r5, fp, lr}
   1e1bc:	b	1e1c0 <putc_unlocked@plt+0xc008>
   1e1c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1c4:	add	fp, sp, #28
   1e1c8:	sub	sp, sp, #28
   1e1cc:	mov	r4, r2
   1e1d0:	mov	r5, r1
   1e1d4:	mov	r7, r0
   1e1d8:	add	r6, r0, r1
   1e1dc:	bl	11e7c <__ctype_get_mb_cur_max@plt>
   1e1e0:	cmp	r0, #1
   1e1e4:	bls	1e4d4 <putc_unlocked@plt+0xc31c>
   1e1e8:	cmp	r5, #1
   1e1ec:	blt	1e53c <putc_unlocked@plt+0xc384>
   1e1f0:	and	sl, r4, #2
   1e1f4:	and	r2, r4, #1
   1e1f8:	eor	r3, r2, #1
   1e1fc:	mov	r5, #0
   1e200:	add	r8, sp, #12
   1e204:	add	r9, sp, #16
   1e208:	mov	r4, #0
   1e20c:	ldrb	r0, [r7]
   1e210:	sub	r0, r0, #32
   1e214:	cmp	r0, #94	; 0x5e
   1e218:	bhi	1e3b4 <putc_unlocked@plt+0xc1fc>
   1e21c:	add	r1, pc, #0
   1e220:	ldr	pc, [r1, r0, lsl #2]
   1e224:	andeq	lr, r1, r0, lsr #7
   1e228:	andeq	lr, r1, r0, lsr #7
   1e22c:	andeq	lr, r1, r0, lsr #7
   1e230:	andeq	lr, r1, r0, lsr #7
   1e234:			; <UNDEFINED> instruction: 0x0001e3b4
   1e238:	andeq	lr, r1, r0, lsr #7
   1e23c:	andeq	lr, r1, r0, lsr #7
   1e240:	andeq	lr, r1, r0, lsr #7
   1e244:	andeq	lr, r1, r0, lsr #7
   1e248:	andeq	lr, r1, r0, lsr #7
   1e24c:	andeq	lr, r1, r0, lsr #7
   1e250:	andeq	lr, r1, r0, lsr #7
   1e254:	andeq	lr, r1, r0, lsr #7
   1e258:	andeq	lr, r1, r0, lsr #7
   1e25c:	andeq	lr, r1, r0, lsr #7
   1e260:	andeq	lr, r1, r0, lsr #7
   1e264:	andeq	lr, r1, r0, lsr #7
   1e268:	andeq	lr, r1, r0, lsr #7
   1e26c:	andeq	lr, r1, r0, lsr #7
   1e270:	andeq	lr, r1, r0, lsr #7
   1e274:	andeq	lr, r1, r0, lsr #7
   1e278:	andeq	lr, r1, r0, lsr #7
   1e27c:	andeq	lr, r1, r0, lsr #7
   1e280:	andeq	lr, r1, r0, lsr #7
   1e284:	andeq	lr, r1, r0, lsr #7
   1e288:	andeq	lr, r1, r0, lsr #7
   1e28c:	andeq	lr, r1, r0, lsr #7
   1e290:	andeq	lr, r1, r0, lsr #7
   1e294:	andeq	lr, r1, r0, lsr #7
   1e298:	andeq	lr, r1, r0, lsr #7
   1e29c:	andeq	lr, r1, r0, lsr #7
   1e2a0:	andeq	lr, r1, r0, lsr #7
   1e2a4:			; <UNDEFINED> instruction: 0x0001e3b4
   1e2a8:	andeq	lr, r1, r0, lsr #7
   1e2ac:	andeq	lr, r1, r0, lsr #7
   1e2b0:	andeq	lr, r1, r0, lsr #7
   1e2b4:	andeq	lr, r1, r0, lsr #7
   1e2b8:	andeq	lr, r1, r0, lsr #7
   1e2bc:	andeq	lr, r1, r0, lsr #7
   1e2c0:	andeq	lr, r1, r0, lsr #7
   1e2c4:	andeq	lr, r1, r0, lsr #7
   1e2c8:	andeq	lr, r1, r0, lsr #7
   1e2cc:	andeq	lr, r1, r0, lsr #7
   1e2d0:	andeq	lr, r1, r0, lsr #7
   1e2d4:	andeq	lr, r1, r0, lsr #7
   1e2d8:	andeq	lr, r1, r0, lsr #7
   1e2dc:	andeq	lr, r1, r0, lsr #7
   1e2e0:	andeq	lr, r1, r0, lsr #7
   1e2e4:	andeq	lr, r1, r0, lsr #7
   1e2e8:	andeq	lr, r1, r0, lsr #7
   1e2ec:	andeq	lr, r1, r0, lsr #7
   1e2f0:	andeq	lr, r1, r0, lsr #7
   1e2f4:	andeq	lr, r1, r0, lsr #7
   1e2f8:	andeq	lr, r1, r0, lsr #7
   1e2fc:	andeq	lr, r1, r0, lsr #7
   1e300:	andeq	lr, r1, r0, lsr #7
   1e304:	andeq	lr, r1, r0, lsr #7
   1e308:	andeq	lr, r1, r0, lsr #7
   1e30c:	andeq	lr, r1, r0, lsr #7
   1e310:	andeq	lr, r1, r0, lsr #7
   1e314:	andeq	lr, r1, r0, lsr #7
   1e318:	andeq	lr, r1, r0, lsr #7
   1e31c:	andeq	lr, r1, r0, lsr #7
   1e320:	andeq	lr, r1, r0, lsr #7
   1e324:			; <UNDEFINED> instruction: 0x0001e3b4
   1e328:	andeq	lr, r1, r0, lsr #7
   1e32c:	andeq	lr, r1, r0, lsr #7
   1e330:	andeq	lr, r1, r0, lsr #7
   1e334:	andeq	lr, r1, r0, lsr #7
   1e338:	andeq	lr, r1, r0, lsr #7
   1e33c:	andeq	lr, r1, r0, lsr #7
   1e340:	andeq	lr, r1, r0, lsr #7
   1e344:	andeq	lr, r1, r0, lsr #7
   1e348:	andeq	lr, r1, r0, lsr #7
   1e34c:	andeq	lr, r1, r0, lsr #7
   1e350:	andeq	lr, r1, r0, lsr #7
   1e354:	andeq	lr, r1, r0, lsr #7
   1e358:	andeq	lr, r1, r0, lsr #7
   1e35c:	andeq	lr, r1, r0, lsr #7
   1e360:	andeq	lr, r1, r0, lsr #7
   1e364:	andeq	lr, r1, r0, lsr #7
   1e368:	andeq	lr, r1, r0, lsr #7
   1e36c:	andeq	lr, r1, r0, lsr #7
   1e370:	andeq	lr, r1, r0, lsr #7
   1e374:	andeq	lr, r1, r0, lsr #7
   1e378:	andeq	lr, r1, r0, lsr #7
   1e37c:	andeq	lr, r1, r0, lsr #7
   1e380:	andeq	lr, r1, r0, lsr #7
   1e384:	andeq	lr, r1, r0, lsr #7
   1e388:	andeq	lr, r1, r0, lsr #7
   1e38c:	andeq	lr, r1, r0, lsr #7
   1e390:	andeq	lr, r1, r0, lsr #7
   1e394:	andeq	lr, r1, r0, lsr #7
   1e398:	andeq	lr, r1, r0, lsr #7
   1e39c:	andeq	lr, r1, r0, lsr #7
   1e3a0:	add	r4, r4, #1
   1e3a4:	add	r7, r7, #1
   1e3a8:	cmp	r7, r6
   1e3ac:	bcc	1e20c <putc_unlocked@plt+0xc054>
   1e3b0:	b	1e548 <putc_unlocked@plt+0xc390>
   1e3b4:	str	r3, [sp, #4]
   1e3b8:	str	r2, [sp, #8]
   1e3bc:	str	r5, [sp, #20]
   1e3c0:	str	r5, [sp, #16]
   1e3c4:	mov	r5, r7
   1e3c8:	sub	r2, r6, r7
   1e3cc:	mov	r0, r8
   1e3d0:	mov	r1, r7
   1e3d4:	mov	r3, r9
   1e3d8:	bl	1dcc8 <putc_unlocked@plt+0xbb10>
   1e3dc:	cmp	r0, #0
   1e3e0:	beq	1e3fc <putc_unlocked@plt+0xc244>
   1e3e4:	mov	r7, r0
   1e3e8:	cmn	r0, #2
   1e3ec:	beq	1e46c <putc_unlocked@plt+0xc2b4>
   1e3f0:	cmn	r7, #1
   1e3f4:	bne	1e400 <putc_unlocked@plt+0xc248>
   1e3f8:	b	1e48c <putc_unlocked@plt+0xc2d4>
   1e3fc:	mov	r7, #1
   1e400:	ldr	r0, [sp, #12]
   1e404:	bl	11d14 <wcwidth@plt>
   1e408:	cmp	r0, #0
   1e40c:	blt	1e428 <putc_unlocked@plt+0xc270>
   1e410:	mvn	r1, #-2147483648	; 0x80000000
   1e414:	sub	r1, r1, r4
   1e418:	cmp	r0, r1
   1e41c:	bgt	1e464 <putc_unlocked@plt+0xc2ac>
   1e420:	add	r4, r0, r4
   1e424:	b	1e44c <putc_unlocked@plt+0xc294>
   1e428:	cmp	sl, #0
   1e42c:	bne	1e4b4 <putc_unlocked@plt+0xc2fc>
   1e430:	ldr	r0, [sp, #12]
   1e434:	bl	11e04 <iswcntrl@plt>
   1e438:	cmp	r0, #0
   1e43c:	bne	1e44c <putc_unlocked@plt+0xc294>
   1e440:	cmn	r4, #-2147483647	; 0x80000001
   1e444:	beq	1e464 <putc_unlocked@plt+0xc2ac>
   1e448:	add	r4, r4, #1
   1e44c:	add	r7, r5, r7
   1e450:	mov	r0, r9
   1e454:	bl	11d80 <mbsinit@plt>
   1e458:	cmp	r0, #0
   1e45c:	beq	1e3c4 <putc_unlocked@plt+0xc20c>
   1e460:	b	1e4a4 <putc_unlocked@plt+0xc2ec>
   1e464:	mov	r0, #7
   1e468:	b	1e4b8 <putc_unlocked@plt+0xc300>
   1e46c:	ldr	r0, [sp, #4]
   1e470:	add	r4, r4, r0
   1e474:	mov	r0, #1
   1e478:	ldr	r1, [sp, #8]
   1e47c:	cmp	r1, #0
   1e480:	mov	r7, r6
   1e484:	beq	1e4a4 <putc_unlocked@plt+0xc2ec>
   1e488:	b	1e4b8 <putc_unlocked@plt+0xc300>
   1e48c:	mov	r0, #1
   1e490:	ldr	r1, [sp, #8]
   1e494:	cmp	r1, #0
   1e498:	bne	1e4b8 <putc_unlocked@plt+0xc300>
   1e49c:	add	r4, r4, #1
   1e4a0:	add	r7, r5, #1
   1e4a4:	ldr	r2, [sp, #8]
   1e4a8:	ldr	r3, [sp, #4]
   1e4ac:	mov	r5, #0
   1e4b0:	b	1e3a8 <putc_unlocked@plt+0xc1f0>
   1e4b4:	mov	r0, #1
   1e4b8:	cmp	r0, #0
   1e4bc:	mov	r7, r5
   1e4c0:	ldr	r2, [sp, #8]
   1e4c4:	ldr	r3, [sp, #4]
   1e4c8:	mov	r5, #0
   1e4cc:	beq	1e3a8 <putc_unlocked@plt+0xc1f0>
   1e4d0:	b	1e52c <putc_unlocked@plt+0xc374>
   1e4d4:	and	r8, r4, #2
   1e4d8:	mov	r4, #0
   1e4dc:	cmp	r7, r6
   1e4e0:	bcs	1e548 <putc_unlocked@plt+0xc390>
   1e4e4:	ldrb	r5, [r7], #1
   1e4e8:	bl	11f84 <__ctype_b_loc@plt>
   1e4ec:	ldr	r0, [r0]
   1e4f0:	add	r0, r0, r5, lsl #1
   1e4f4:	ldrh	r1, [r0]
   1e4f8:	tst	r1, #16384	; 0x4000
   1e4fc:	bne	1e514 <putc_unlocked@plt+0xc35c>
   1e500:	cmp	r8, #0
   1e504:	bne	1e544 <putc_unlocked@plt+0xc38c>
   1e508:	mov	r0, #0
   1e50c:	tst	r1, #2
   1e510:	bne	1e524 <putc_unlocked@plt+0xc36c>
   1e514:	cmn	r4, #-2147483647	; 0x80000001
   1e518:	mov	r0, #0
   1e51c:	mvneq	r0, #0
   1e520:	addne	r4, r4, #1
   1e524:	ands	r0, r0, #7
   1e528:	beq	1e4dc <putc_unlocked@plt+0xc324>
   1e52c:	mvn	r4, #0
   1e530:	cmp	r0, #7
   1e534:	mvneq	r4, #-2147483648	; 0x80000000
   1e538:	b	1e548 <putc_unlocked@plt+0xc390>
   1e53c:	mov	r4, #0
   1e540:	b	1e548 <putc_unlocked@plt+0xc390>
   1e544:	mvn	r4, #0
   1e548:	mov	r0, r4
   1e54c:	sub	sp, fp, #28
   1e550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e554:	mov	r3, r2
   1e558:	add	r2, r0, r1, lsl #2
   1e55c:	b	1e560 <putc_unlocked@plt+0xc3a8>
   1e560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e564:	add	fp, sp, #28
   1e568:	sub	sp, sp, #36	; 0x24
   1e56c:	mov	r5, r3
   1e570:	mov	r4, r0
   1e574:	cmp	r1, #2
   1e578:	bhi	1e5a4 <putc_unlocked@plt+0xc3ec>
   1e57c:	bne	1e59c <putc_unlocked@plt+0xc3e4>
   1e580:	ldm	r4, {r6, r7}
   1e584:	mov	r0, r6
   1e588:	mov	r1, r7
   1e58c:	blx	r5
   1e590:	cmp	r0, #1
   1e594:	strge	r7, [r4]
   1e598:	strge	r6, [r4, #4]
   1e59c:	sub	sp, fp, #28
   1e5a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e5a4:	mov	r8, r2
   1e5a8:	mov	r6, r1
   1e5ac:	lsr	r9, r1, #1
   1e5b0:	add	r7, r4, r9, lsl #2
   1e5b4:	sub	r1, r1, r1, lsr #1
   1e5b8:	mov	r0, r7
   1e5bc:	mov	r3, r5
   1e5c0:	bl	1e560 <putc_unlocked@plt+0xc3a8>
   1e5c4:	cmp	r6, #3
   1e5c8:	bne	1e5d8 <putc_unlocked@plt+0xc420>
   1e5cc:	ldr	r0, [r4]
   1e5d0:	str	r0, [r8]
   1e5d4:	b	1e5ec <putc_unlocked@plt+0xc434>
   1e5d8:	mov	r0, r4
   1e5dc:	mov	r1, r9
   1e5e0:	mov	r2, r8
   1e5e4:	mov	r3, r5
   1e5e8:	bl	1e6e0 <putc_unlocked@plt+0xc528>
   1e5ec:	rsb	r0, r6, #1
   1e5f0:	add	r1, r4, #4
   1e5f4:	ldr	r7, [r7]
   1e5f8:	str	r8, [sp, #16]
   1e5fc:	ldr	r6, [r8]
   1e600:	mov	r2, #0
   1e604:	str	r2, [sp, #32]
   1e608:	str	r9, [sp, #28]
   1e60c:	mov	r2, r9
   1e610:	mov	r3, #0
   1e614:	str	r4, [sp, #12]
   1e618:	str	r0, [sp, #8]
   1e61c:	str	r1, [sp, #4]
   1e620:	b	1e64c <putc_unlocked@plt+0xc494>
   1e624:	ldr	r2, [sp, #24]
   1e628:	add	r2, r2, r9
   1e62c:	ldr	r0, [sp, #16]
   1e630:	str	r1, [sp, #32]
   1e634:	ldr	r6, [r0, r1, lsl #2]
   1e638:	ldr	r0, [sp, #20]
   1e63c:	add	r0, r0, r9
   1e640:	add	r3, r0, #1
   1e644:	ldr	r0, [sp, #8]
   1e648:	ldr	r1, [sp, #4]
   1e64c:	str	r3, [sp, #20]
   1e650:	add	r4, r4, r3, lsl #2
   1e654:	add	r8, r0, r2
   1e658:	str	r2, [sp, #24]
   1e65c:	add	sl, r1, r2, lsl #2
   1e660:	mov	r9, #0
   1e664:	b	1e670 <putc_unlocked@plt+0xc4b8>
   1e668:	ldr	r7, [sl, r9, lsl #2]
   1e66c:	add	r9, r9, #1
   1e670:	mov	r0, r6
   1e674:	mov	r1, r7
   1e678:	blx	r5
   1e67c:	cmp	r0, #0
   1e680:	ble	1e694 <putc_unlocked@plt+0xc4dc>
   1e684:	str	r7, [r4, r9, lsl #2]
   1e688:	adds	r0, r8, r9
   1e68c:	bne	1e668 <putc_unlocked@plt+0xc4b0>
   1e690:	b	1e6b4 <putc_unlocked@plt+0xc4fc>
   1e694:	str	r6, [r4, r9, lsl #2]
   1e698:	ldr	r1, [sp, #32]
   1e69c:	add	r1, r1, #1
   1e6a0:	ldr	r0, [sp, #28]
   1e6a4:	cmp	r1, r0
   1e6a8:	ldr	r4, [sp, #12]
   1e6ac:	bne	1e624 <putc_unlocked@plt+0xc46c>
   1e6b0:	b	1e59c <putc_unlocked@plt+0xc3e4>
   1e6b4:	ldr	r0, [sp, #16]
   1e6b8:	ldr	r2, [sp, #32]
   1e6bc:	add	r1, r0, r2, lsl #2
   1e6c0:	ldr	r0, [sp, #28]
   1e6c4:	sub	r0, r0, r2
   1e6c8:	lsl	r2, r0, #2
   1e6cc:	add	r0, r4, r9, lsl #2
   1e6d0:	add	r0, r0, #4
   1e6d4:	sub	sp, fp, #28
   1e6d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6dc:	b	11d74 <memcpy@plt>
   1e6e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6e4:	add	fp, sp, #28
   1e6e8:	sub	sp, sp, #36	; 0x24
   1e6ec:	mov	r8, r3
   1e6f0:	mov	r6, r2
   1e6f4:	mov	r5, r1
   1e6f8:	mov	r4, r0
   1e6fc:	lsr	r9, r1, #1
   1e700:	add	r0, r0, r9, lsl #2
   1e704:	sub	r1, r1, r1, lsr #1
   1e708:	bl	1e560 <putc_unlocked@plt+0xc3a8>
   1e70c:	mov	r0, r4
   1e710:	mov	r1, r9
   1e714:	mov	r7, r6
   1e718:	mov	r2, r6
   1e71c:	str	r8, [sp, #32]
   1e720:	mov	r3, r8
   1e724:	bl	1e560 <putc_unlocked@plt+0xc3a8>
   1e728:	ldr	r6, [r4, r9, lsl #2]
   1e72c:	str	r5, [sp, #4]
   1e730:	rsb	r1, r5, #1
   1e734:	str	r4, [sp, #20]
   1e738:	ldr	r5, [r4], #4
   1e73c:	mov	r0, #0
   1e740:	str	r0, [sp, #28]
   1e744:	str	r9, [sp, #16]
   1e748:	mov	r2, r9
   1e74c:	str	r1, [sp, #12]
   1e750:	str	r4, [sp, #8]
   1e754:	b	1e77c <putc_unlocked@plt+0xc5c4>
   1e758:	sub	r2, r2, sl
   1e75c:	mov	r7, r2
   1e760:	ldr	r2, [sp, #24]
   1e764:	add	r2, r2, r9
   1e768:	ldr	r0, [sp, #20]
   1e76c:	str	r1, [sp, #28]
   1e770:	ldr	r5, [r0, r1, lsl #2]
   1e774:	ldr	r1, [sp, #12]
   1e778:	ldr	r4, [sp, #8]
   1e77c:	add	r8, r1, r2
   1e780:	str	r2, [sp, #24]
   1e784:	add	r4, r4, r2, lsl #2
   1e788:	mvn	sl, #3
   1e78c:	mov	r9, #0
   1e790:	b	1e7a0 <putc_unlocked@plt+0xc5e8>
   1e794:	ldr	r6, [r4, r9, lsl #2]
   1e798:	sub	sl, sl, #4
   1e79c:	add	r9, r9, #1
   1e7a0:	mov	r0, r5
   1e7a4:	mov	r1, r6
   1e7a8:	ldr	r2, [sp, #32]
   1e7ac:	blx	r2
   1e7b0:	cmp	r0, #0
   1e7b4:	ble	1e7c8 <putc_unlocked@plt+0xc610>
   1e7b8:	str	r6, [r7, r9, lsl #2]
   1e7bc:	adds	r0, r8, r9
   1e7c0:	bne	1e794 <putc_unlocked@plt+0xc5dc>
   1e7c4:	b	1e7f4 <putc_unlocked@plt+0xc63c>
   1e7c8:	mov	r2, r7
   1e7cc:	str	r5, [r7, r9, lsl #2]
   1e7d0:	ldr	r1, [sp, #28]
   1e7d4:	add	r1, r1, #1
   1e7d8:	ldr	r0, [sp, #16]
   1e7dc:	cmp	r1, r0
   1e7e0:	bne	1e758 <putc_unlocked@plt+0xc5a0>
   1e7e4:	ldr	r0, [sp, #24]
   1e7e8:	add	r7, r0, r9
   1e7ec:	ldr	r3, [sp, #4]
   1e7f0:	b	1e800 <putc_unlocked@plt+0xc648>
   1e7f4:	mov	r2, r7
   1e7f8:	ldr	r3, [sp, #16]
   1e7fc:	ldr	r7, [sp, #28]
   1e800:	ldr	r0, [sp, #20]
   1e804:	add	r1, r0, r7, lsl #2
   1e808:	add	r0, r2, r9, lsl #2
   1e80c:	add	r0, r0, #4
   1e810:	sub	r2, r3, r7
   1e814:	lsl	r2, r2, #2
   1e818:	sub	sp, fp, #28
   1e81c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e820:	b	11d74 <memcpy@plt>
   1e824:	push	{fp, lr}
   1e828:	mov	fp, sp
   1e82c:	sub	sp, sp, #24
   1e830:	mvn	ip, #0
   1e834:	str	ip, [sp, #8]
   1e838:	mov	ip, #0
   1e83c:	str	ip, [sp, #4]
   1e840:	str	ip, [sp]
   1e844:	ldr	ip, [fp, #12]
   1e848:	str	ip, [sp, #16]
   1e84c:	ldr	ip, [fp, #8]
   1e850:	str	ip, [sp, #12]
   1e854:	bl	1e860 <putc_unlocked@plt+0xc6a8>
   1e858:	mov	sp, fp
   1e85c:	pop	{fp, pc}
   1e860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e864:	add	fp, sp, #28
   1e868:	sub	sp, sp, #124	; 0x7c
   1e86c:	sub	sp, sp, #1024	; 0x400
   1e870:	mov	r4, r3
   1e874:	mov	r7, r2
   1e878:	str	r1, [sp, #88]	; 0x58
   1e87c:	mov	r5, r0
   1e880:	bl	11fe4 <__errno_location@plt>
   1e884:	mov	r2, r4
   1e888:	ldr	r1, [r2, #8]!
   1e88c:	cmp	r1, #0
   1e890:	mov	r3, r1
   1e894:	movweq	r3, #12
   1e898:	cmp	r1, #12
   1e89c:	subgt	r3, r1, #12
   1e8a0:	ldr	r1, [r2, #32]
   1e8a4:	movw	r6, #27261	; 0x6a7d
   1e8a8:	movt	r6, #2
   1e8ac:	cmp	r1, #0
   1e8b0:	movne	r6, r1
   1e8b4:	str	r0, [sp, #60]	; 0x3c
   1e8b8:	ldr	r1, [r0]
   1e8bc:	ldrb	r0, [r7]
   1e8c0:	cmp	r0, #0
   1e8c4:	str	r1, [sp, #56]	; 0x38
   1e8c8:	beq	1e934 <putc_unlocked@plt+0xc77c>
   1e8cc:	str	r6, [sp, #44]	; 0x2c
   1e8d0:	str	r3, [sp, #36]	; 0x24
   1e8d4:	str	r2, [sp, #40]	; 0x28
   1e8d8:	ldr	r6, [fp, #16]
   1e8dc:	sub	r0, fp, #48	; 0x30
   1e8e0:	add	r1, r0, #13
   1e8e4:	str	r1, [sp, #28]
   1e8e8:	add	r1, sp, #96	; 0x60
   1e8ec:	add	r1, r1, #1
   1e8f0:	str	r1, [sp, #48]	; 0x30
   1e8f4:	str	r4, [sp, #76]	; 0x4c
   1e8f8:	add	r1, r4, #12
   1e8fc:	str	r1, [sp, #32]
   1e900:	add	r0, r0, #14
   1e904:	str	r0, [sp, #64]	; 0x40
   1e908:	sub	r0, fp, #53	; 0x35
   1e90c:	add	r1, r0, #3
   1e910:	str	r1, [sp, #52]	; 0x34
   1e914:	add	r0, r0, #2
   1e918:	str	r0, [sp, #68]	; 0x44
   1e91c:	mov	ip, #0
   1e920:	mov	r8, #-2147483648	; 0x80000000
   1e924:	movw	r3, #52428	; 0xcccc
   1e928:	movt	r3, #3276	; 0xccc
   1e92c:	mov	lr, r5
   1e930:	b	1e948 <putc_unlocked@plt+0xc790>
   1e934:	mov	ip, #0
   1e938:	mov	lr, r5
   1e93c:	b	1ffe0 <putc_unlocked@plt+0xde28>
   1e940:	mov	r4, #3
   1e944:	b	1f918 <putc_unlocked@plt+0xd760>
   1e948:	ldrb	r0, [r7]
   1e94c:	cmp	r0, #37	; 0x25
   1e950:	bne	1e9f0 <putc_unlocked@plt+0xc838>
   1e954:	mov	r2, #0
   1e958:	ldr	r0, [fp, #8]
   1e95c:	mov	r4, r0
   1e960:	mov	sl, #0
   1e964:	mov	r9, r7
   1e968:	add	r9, r7, #1
   1e96c:	b	1e978 <putc_unlocked@plt+0xc7c0>
   1e970:	add	r9, r9, #1
   1e974:	mov	sl, r5
   1e978:	ldrb	r5, [r9]
   1e97c:	sub	r0, r5, #35	; 0x23
   1e980:	cmp	r0, #13
   1e984:	bhi	1e9d4 <putc_unlocked@plt+0xc81c>
   1e988:	add	r1, pc, #0
   1e98c:	ldr	pc, [r1, r0, lsl #2]
   1e990:	andeq	lr, r1, r8, asr #19
   1e994:	andeq	lr, r1, r0, ror #20
   1e998:	andeq	lr, r1, r0, ror #20
   1e99c:	andeq	lr, r1, r0, ror #20
   1e9a0:	andeq	lr, r1, r0, ror #20
   1e9a4:	andeq	lr, r1, r0, ror #20
   1e9a8:	andeq	lr, r1, r0, ror #20
   1e9ac:	andeq	lr, r1, r0, ror #20
   1e9b0:	andeq	lr, r1, r0, ror r9
   1e9b4:	andeq	lr, r1, r0, ror #20
   1e9b8:	andeq	lr, r1, r0, ror r9
   1e9bc:	andeq	lr, r1, r0, ror #20
   1e9c0:	andeq	lr, r1, r0, ror #20
   1e9c4:	andeq	lr, r1, r0, ror r9
   1e9c8:	mov	r2, #1
   1e9cc:	add	r9, r9, #1
   1e9d0:	b	1e978 <putc_unlocked@plt+0xc7c0>
   1e9d4:	cmp	r5, #95	; 0x5f
   1e9d8:	beq	1e970 <putc_unlocked@plt+0xc7b8>
   1e9dc:	cmp	r5, #94	; 0x5e
   1e9e0:	bne	1ea60 <putc_unlocked@plt+0xc8a8>
   1e9e4:	mov	r4, #1
   1e9e8:	add	r9, r9, #1
   1e9ec:	b	1e978 <putc_unlocked@plt+0xc7c0>
   1e9f0:	bic	r0, r6, r6, asr #31
   1e9f4:	cmp	r0, #1
   1e9f8:	mov	r5, r0
   1e9fc:	movls	r5, #1
   1ea00:	ldr	r1, [sp, #88]	; 0x58
   1ea04:	sub	r1, r1, ip
   1ea08:	cmp	r5, r1
   1ea0c:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1ea10:	cmp	lr, #0
   1ea14:	beq	1ead8 <putc_unlocked@plt+0xc920>
   1ea18:	cmp	r0, #2
   1ea1c:	bcc	1ea54 <putc_unlocked@plt+0xc89c>
   1ea20:	sub	r4, r0, #1
   1ea24:	mov	r0, lr
   1ea28:	mov	r1, #32
   1ea2c:	mov	r2, r4
   1ea30:	mov	r8, ip
   1ea34:	mov	r6, lr
   1ea38:	bl	12008 <memset@plt>
   1ea3c:	mov	lr, r6
   1ea40:	mov	ip, r8
   1ea44:	add	lr, r6, r4
   1ea48:	movw	r3, #52428	; 0xcccc
   1ea4c:	movt	r3, #3276	; 0xccc
   1ea50:	mov	r8, #-2147483648	; 0x80000000
   1ea54:	ldrb	r0, [r7]
   1ea58:	strb	r0, [lr], #1
   1ea5c:	b	1eadc <putc_unlocked@plt+0xc924>
   1ea60:	sub	r0, r5, #48	; 0x30
   1ea64:	cmp	r0, #9
   1ea68:	bhi	1eac4 <putc_unlocked@plt+0xc90c>
   1ea6c:	mov	r6, #0
   1ea70:	cmn	r6, #1
   1ea74:	ble	1ea84 <putc_unlocked@plt+0xc8cc>
   1ea78:	cmp	r6, r3
   1ea7c:	bgt	1ea94 <putc_unlocked@plt+0xc8dc>
   1ea80:	b	1ea9c <putc_unlocked@plt+0xc8e4>
   1ea84:	beq	1ea9c <putc_unlocked@plt+0xc8e4>
   1ea88:	sdiv	r0, r8, r6
   1ea8c:	cmp	r0, #10
   1ea90:	bge	1ea9c <putc_unlocked@plt+0xc8e4>
   1ea94:	mvn	r6, #-2147483648	; 0x80000000
   1ea98:	b	1eab4 <putc_unlocked@plt+0xc8fc>
   1ea9c:	ldrb	r0, [r9]
   1eaa0:	add	r1, r6, r6, lsl #2
   1eaa4:	add	r0, r0, r1, lsl #1
   1eaa8:	sub	r6, r0, #48	; 0x30
   1eaac:	cmp	r6, r1, lsl #1
   1eab0:	mvnvs	r6, #-2147483648	; 0x80000000
   1eab4:	ldrb	r5, [r9, #1]!
   1eab8:	sub	r0, r5, #48	; 0x30
   1eabc:	cmp	r0, #10
   1eac0:	bcc	1ea70 <putc_unlocked@plt+0xc8b8>
   1eac4:	cmp	r5, #79	; 0x4f
   1eac8:	cmpne	r5, #69	; 0x45
   1eacc:	bne	1eae4 <putc_unlocked@plt+0xc92c>
   1ead0:	add	r9, r9, #1
   1ead4:	b	1eae8 <putc_unlocked@plt+0xc930>
   1ead8:	mov	lr, #0
   1eadc:	add	ip, r5, ip
   1eae0:	b	1ffd0 <putc_unlocked@plt+0xde18>
   1eae4:	mov	r5, #0
   1eae8:	str	r4, [sp, #92]	; 0x5c
   1eaec:	str	r7, [sp, #84]	; 0x54
   1eaf0:	ldrb	r3, [r9]
   1eaf4:	cmp	r3, #122	; 0x7a
   1eaf8:	bhi	1f544 <putc_unlocked@plt+0xd38c>
   1eafc:	mov	r7, r2
   1eb00:	mov	r8, #0
   1eb04:	mvn	r1, #0
   1eb08:	add	r0, pc, #8
   1eb0c:	movw	r4, #26238	; 0x667e
   1eb10:	movt	r4, #2
   1eb14:	ldr	pc, [r0, r3, lsl #2]
   1eb18:	andeq	lr, r1, ip, ror #27
   1eb1c:	andeq	pc, r1, r4, asr #10
   1eb20:	andeq	pc, r1, r4, asr #10
   1eb24:	andeq	pc, r1, r4, asr #10
   1eb28:	andeq	pc, r1, r4, asr #10
   1eb2c:	andeq	pc, r1, r4, asr #10
   1eb30:	andeq	pc, r1, r4, asr #10
   1eb34:	andeq	pc, r1, r4, asr #10
   1eb38:	andeq	pc, r1, r4, asr #10
   1eb3c:	andeq	pc, r1, r4, asr #10
   1eb40:	andeq	pc, r1, r4, asr #10
   1eb44:	andeq	pc, r1, r4, asr #10
   1eb48:	andeq	pc, r1, r4, asr #10
   1eb4c:	andeq	pc, r1, r4, asr #10
   1eb50:	andeq	pc, r1, r4, asr #10
   1eb54:	andeq	pc, r1, r4, asr #10
   1eb58:	andeq	pc, r1, r4, asr #10
   1eb5c:	andeq	pc, r1, r4, asr #10
   1eb60:	andeq	pc, r1, r4, asr #10
   1eb64:	andeq	pc, r1, r4, asr #10
   1eb68:	andeq	pc, r1, r4, asr #10
   1eb6c:	andeq	pc, r1, r4, asr #10
   1eb70:	andeq	pc, r1, r4, asr #10
   1eb74:	andeq	pc, r1, r4, asr #10
   1eb78:	andeq	pc, r1, r4, asr #10
   1eb7c:	andeq	pc, r1, r4, asr #10
   1eb80:	andeq	pc, r1, r4, asr #10
   1eb84:	andeq	pc, r1, r4, asr #10
   1eb88:	andeq	pc, r1, r4, asr #10
   1eb8c:	andeq	pc, r1, r4, asr #10
   1eb90:	andeq	pc, r1, r4, asr #10
   1eb94:	andeq	pc, r1, r4, asr #10
   1eb98:	andeq	pc, r1, r4, asr #10
   1eb9c:	andeq	pc, r1, r4, asr #10
   1eba0:	andeq	pc, r1, r4, asr #10
   1eba4:	andeq	pc, r1, r4, asr #10
   1eba8:	andeq	pc, r1, r4, asr #10
   1ebac:	ldrdeq	lr, [r1], -ip
   1ebb0:	andeq	pc, r1, r4, asr #10
   1ebb4:	andeq	pc, r1, r4, asr #10
   1ebb8:	andeq	pc, r1, r4, asr #10
   1ebbc:	andeq	pc, r1, r4, asr #10
   1ebc0:	andeq	pc, r1, r4, asr #10
   1ebc4:	andeq	pc, r1, r4, asr #10
   1ebc8:	andeq	pc, r1, r4, asr #10
   1ebcc:	andeq	pc, r1, r4, asr #10
   1ebd0:	andeq	pc, r1, r4, asr #10
   1ebd4:	andeq	pc, r1, r4, asr #10
   1ebd8:	andeq	pc, r1, r4, asr #10
   1ebdc:	andeq	pc, r1, r4, asr #10
   1ebe0:	andeq	pc, r1, r4, asr #10
   1ebe4:	andeq	pc, r1, r4, asr #10
   1ebe8:	andeq	pc, r1, r4, asr #10
   1ebec:	andeq	pc, r1, r4, asr #10
   1ebf0:	andeq	pc, r1, r4, asr #10
   1ebf4:	andeq	pc, r1, r4, asr #10
   1ebf8:	andeq	pc, r1, r4, asr #10
   1ebfc:	andeq	pc, r1, r4, asr #10
   1ec00:	strdeq	lr, [r1], -r4
   1ec04:	andeq	pc, r1, r4, asr #10
   1ec08:	andeq	pc, r1, r4, asr #10
   1ec0c:	andeq	pc, r1, r4, asr #10
   1ec10:	andeq	pc, r1, r4, asr #10
   1ec14:	andeq	pc, r1, r4, asr #10
   1ec18:	andeq	pc, r1, r4, asr #10
   1ec1c:	andeq	lr, r1, r4, ror #28
   1ec20:	andeq	lr, r1, r4, lsl #29
   1ec24:	andeq	lr, r1, r4, lsr #29
   1ec28:			; <UNDEFINED> instruction: 0x0001eeb8
   1ec2c:	andeq	pc, r1, r4, asr #10
   1ec30:	andeq	lr, r1, ip, asr #29
   1ec34:	andeq	lr, r1, r4, lsl #26
   1ec38:	strdeq	lr, [r1], -r8
   1ec3c:	andeq	lr, r1, r8, lsl #30
   1ec40:	andeq	pc, r1, r4, asr #10
   1ec44:	andeq	pc, r1, r4, asr #10
   1ec48:	andeq	pc, r1, r4, asr #10
   1ec4c:	andeq	lr, r1, ip, lsl pc
   1ec50:	andeq	lr, r1, r0, lsr pc
   1ec54:	andeq	pc, r1, r4, asr #10
   1ec58:	andeq	pc, r1, r8, lsr r0	; <UNPREDICTABLE>
   1ec5c:	andeq	pc, r1, r4, asr #10
   1ec60:	andeq	pc, r1, r4, ror r0	; <UNPREDICTABLE>
   1ec64:	andeq	pc, r1, r8, asr r0	; <UNPREDICTABLE>
   1ec68:	andeq	pc, r1, ip, rrx
   1ec6c:	andeq	pc, r1, ip, lsl r1	; <UNPREDICTABLE>
   1ec70:	andeq	lr, r1, r4, lsl #26
   1ec74:	andeq	pc, r1, r0, asr r1	; <UNPREDICTABLE>
   1ec78:	andeq	pc, r1, r8, lsr #3
   1ec7c:			; <UNDEFINED> instruction: 0x0001f1bc
   1ec80:	andeq	pc, r1, ip, ror #3
   1ec84:	andeq	pc, r1, r4, asr #10
   1ec88:	andeq	pc, r1, r4, asr #10
   1ec8c:	andeq	pc, r1, r4, asr #10
   1ec90:	andeq	pc, r1, r4, asr #10
   1ec94:	andeq	pc, r1, r4, asr #10
   1ec98:	andeq	pc, r1, r4, asr #10
   1ec9c:	andeq	pc, r1, r4, asr r2	; <UNPREDICTABLE>
   1eca0:	andeq	lr, r1, r0, asr #27
   1eca4:	andeq	pc, r1, r4, ror r2	; <UNPREDICTABLE>
   1eca8:	andeq	pc, r1, r8, lsl #5
   1ecac:	muleq	r1, ip, r2
   1ecb0:	andeq	pc, r1, r4, asr #10
   1ecb4:	andeq	lr, r1, r4, lsl #26
   1ecb8:	andeq	lr, r1, r0, asr #27
   1ecbc:	andeq	pc, r1, r4, asr #10
   1ecc0:	andeq	pc, r1, ip, lsr #5
   1ecc4:	ldrdeq	pc, [r1], -r8
   1ecc8:	strdeq	pc, [r1], -r0
   1eccc:	andeq	pc, r1, r8, lsl r3	; <UNPREDICTABLE>
   1ecd0:	andeq	pc, r1, r4, asr #6
   1ecd4:	andeq	pc, r1, r4, asr #10
   1ecd8:	andeq	pc, r1, ip, lsr r0	; <UNPREDICTABLE>
   1ecdc:	andeq	pc, r1, r4, lsr #7
   1ece0:	andeq	pc, r1, ip, lsr ip	; <UNPREDICTABLE>
   1ece4:	andeq	pc, r1, r8, asr #7
   1ece8:	muleq	r1, r4, r4
   1ecec:	strdeq	pc, [r1], -r4
   1ecf0:	andeq	pc, r1, r4, asr #10
   1ecf4:	andeq	pc, r1, r4, lsr #10
   1ecf8:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1ecfc:	andeq	pc, r1, r0, lsr #12
   1ed00:	andeq	lr, r1, r8, lsl lr
   1ed04:	cmp	r5, #69	; 0x45
   1ed08:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1ed0c:	str	r3, [sp, #84]	; 0x54
   1ed10:	str	lr, [sp, #72]	; 0x48
   1ed14:	str	ip, [sp, #80]	; 0x50
   1ed18:	ldr	r0, [sp, #76]	; 0x4c
   1ed1c:	ldr	r2, [r0, #20]
   1ed20:	ldr	r1, [r0, #24]
   1ed24:	ldr	r7, [r0, #28]
   1ed28:	mvn	r0, #99	; 0x63
   1ed2c:	cmp	r2, #0
   1ed30:	movwlt	r0, #300	; 0x12c
   1ed34:	str	r2, [sp, #24]
   1ed38:	add	r8, r0, r2
   1ed3c:	mov	r0, r7
   1ed40:	str	r1, [sp, #20]
   1ed44:	bl	200a0 <putc_unlocked@plt+0xdee8>
   1ed48:	cmn	r0, #1
   1ed4c:	ble	1f648 <putc_unlocked@plt+0xd490>
   1ed50:	mov	r4, r0
   1ed54:	movw	r0, #365	; 0x16d
   1ed58:	tst	r8, #3
   1ed5c:	bne	1eda0 <putc_unlocked@plt+0xcbe8>
   1ed60:	movw	r0, #34079	; 0x851f
   1ed64:	movt	r0, #20971	; 0x51eb
   1ed68:	smmul	r0, r8, r0
   1ed6c:	asr	r1, r0, #5
   1ed70:	add	r1, r1, r0, lsr #31
   1ed74:	mov	r2, #100	; 0x64
   1ed78:	mls	r1, r1, r2, r8
   1ed7c:	asr	r2, r0, #7
   1ed80:	add	r0, r2, r0, lsr #31
   1ed84:	mov	r2, #400	; 0x190
   1ed88:	mls	r2, r0, r2, r8
   1ed8c:	movw	r0, #365	; 0x16d
   1ed90:	cmp	r2, #0
   1ed94:	movweq	r0, #366	; 0x16e
   1ed98:	cmp	r1, #0
   1ed9c:	movwne	r0, #366	; 0x16e
   1eda0:	sub	r0, r7, r0
   1eda4:	ldr	r1, [sp, #20]
   1eda8:	bl	200a0 <putc_unlocked@plt+0xdee8>
   1edac:	cmn	r0, #1
   1edb0:	movgt	r4, r0
   1edb4:	mov	r1, #1
   1edb8:	eor	r0, r1, r0, lsr #31
   1edbc:	b	1f6ac <putc_unlocked@plt+0xd4f4>
   1edc0:	ldr	r0, [sp, #92]	; 0x5c
   1edc4:	orr	r0, r7, r0
   1edc8:	str	r0, [sp, #92]	; 0x5c
   1edcc:	mov	r8, #0
   1edd0:	cmp	r5, #69	; 0x45
   1edd4:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1edd8:	b	1fc3c <putc_unlocked@plt+0xda84>
   1eddc:	sub	r0, r9, #1
   1ede0:	ldr	r1, [sp, #84]	; 0x54
   1ede4:	cmp	r0, r1
   1ede8:	beq	1f830 <putc_unlocked@plt+0xd678>
   1edec:	sub	r9, r9, #1
   1edf0:	b	1f544 <putc_unlocked@plt+0xd38c>
   1edf4:	mov	r8, #1
   1edf8:	b	1ee00 <putc_unlocked@plt+0xcc48>
   1edfc:	add	r8, r8, #1
   1ee00:	ldrb	r0, [r9, r8]
   1ee04:	cmp	r0, #58	; 0x3a
   1ee08:	beq	1edfc <putc_unlocked@plt+0xcc44>
   1ee0c:	cmp	r0, #122	; 0x7a
   1ee10:	bne	1f544 <putc_unlocked@plt+0xd38c>
   1ee14:	add	r9, r9, r8
   1ee18:	ldr	r1, [sp, #76]	; 0x4c
   1ee1c:	ldr	r0, [r1, #32]
   1ee20:	cmp	r0, #0
   1ee24:	blt	1f718 <putc_unlocked@plt+0xd560>
   1ee28:	ldr	r2, [r1, #36]	; 0x24
   1ee2c:	cmp	r2, #0
   1ee30:	blt	1f8a0 <putc_unlocked@plt+0xd6e8>
   1ee34:	mov	r1, #0
   1ee38:	bne	1f8a4 <putc_unlocked@plt+0xd6ec>
   1ee3c:	ldr	r0, [sp, #44]	; 0x2c
   1ee40:	ldrb	r0, [r0]
   1ee44:	sub	r0, r0, #45	; 0x2d
   1ee48:	clz	r0, r0
   1ee4c:	lsr	r1, r0, #5
   1ee50:	cmp	r8, #3
   1ee54:	bls	1f8ac <putc_unlocked@plt+0xd6f4>
   1ee58:	ldr	r8, [sp, #92]	; 0x5c
   1ee5c:	ldr	r2, [sp, #84]	; 0x54
   1ee60:	b	1f54c <putc_unlocked@plt+0xd394>
   1ee64:	cmp	r5, #0
   1ee68:	bne	1f544 <putc_unlocked@plt+0xd38c>
   1ee6c:	ldr	r0, [sp, #92]	; 0x5c
   1ee70:	orr	r0, r7, r0
   1ee74:	str	r0, [sp, #92]	; 0x5c
   1ee78:	mov	r8, #0
   1ee7c:	mov	r3, #65	; 0x41
   1ee80:	b	1fc3c <putc_unlocked@plt+0xda84>
   1ee84:	cmp	r5, #69	; 0x45
   1ee88:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1ee8c:	ldr	r0, [sp, #92]	; 0x5c
   1ee90:	orr	r0, r7, r0
   1ee94:	str	r0, [sp, #92]	; 0x5c
   1ee98:	mov	r8, #0
   1ee9c:	mov	r3, #66	; 0x42
   1eea0:	b	1fc3c <putc_unlocked@plt+0xda84>
   1eea4:	cmp	r5, #69	; 0x45
   1eea8:	bne	1f720 <putc_unlocked@plt+0xd568>
   1eeac:	mov	r8, #0
   1eeb0:	mov	r3, #67	; 0x43
   1eeb4:	b	1fc3c <putc_unlocked@plt+0xda84>
   1eeb8:	cmp	r5, #0
   1eebc:	bne	1f544 <putc_unlocked@plt+0xd38c>
   1eec0:	movw	r4, #34340	; 0x8624
   1eec4:	movt	r4, #2
   1eec8:	b	1f074 <putc_unlocked@plt+0xcebc>
   1eecc:	cmp	r5, #0
   1eed0:	bne	1f544 <putc_unlocked@plt+0xd38c>
   1eed4:	movw	r4, #34349	; 0x862d
   1eed8:	movt	r4, #2
   1eedc:	cmp	sl, #0
   1eee0:	bne	1f9ac <putc_unlocked@plt+0xd7f4>
   1eee4:	cmp	r6, #0
   1eee8:	bge	1f9ac <putc_unlocked@plt+0xd7f4>
   1eeec:	mov	sl, #43	; 0x2b
   1eef0:	mov	r1, #4
   1eef4:	b	1f074 <putc_unlocked@plt+0xcebc>
   1eef8:	cmp	r5, #69	; 0x45
   1eefc:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1ef00:	ldr	r0, [sp, #40]	; 0x28
   1ef04:	b	1f064 <putc_unlocked@plt+0xceac>
   1ef08:	mov	r4, #2
   1ef0c:	cmp	r5, #69	; 0x45
   1ef10:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1ef14:	ldr	r0, [sp, #36]	; 0x24
   1ef18:	b	1f808 <putc_unlocked@plt+0xd650>
   1ef1c:	cmp	r5, #69	; 0x45
   1ef20:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1ef24:	ldr	r0, [sp, #76]	; 0x4c
   1ef28:	ldr	r0, [r0, #4]
   1ef2c:	b	1f804 <putc_unlocked@plt+0xd64c>
   1ef30:	cmp	r5, #69	; 0x45
   1ef34:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1ef38:	cmp	r6, #1
   1ef3c:	movwlt	r6, #9
   1ef40:	mov	r4, #9
   1ef44:	mov	r0, #8
   1ef48:	ldr	r1, [fp, #24]
   1ef4c:	ldr	r5, [sp, #92]	; 0x5c
   1ef50:	cmp	r6, r4
   1ef54:	bge	1ef7c <putc_unlocked@plt+0xcdc4>
   1ef58:	movw	r2, #26215	; 0x6667
   1ef5c:	movt	r2, #26214	; 0x6666
   1ef60:	smmul	r1, r1, r2
   1ef64:	asr	r2, r1, #2
   1ef68:	add	r1, r2, r1, lsr #31
   1ef6c:	sub	r0, r0, #1
   1ef70:	sub	r4, r4, #1
   1ef74:	cmp	r6, r4
   1ef78:	blt	1ef58 <putc_unlocked@plt+0xcda0>
   1ef7c:	movw	r2, #26215	; 0x6667
   1ef80:	movt	r2, #26214	; 0x6666
   1ef84:	cmp	r4, #2
   1ef88:	blt	1efa8 <putc_unlocked@plt+0xcdf0>
   1ef8c:	smmul	r3, r1, r2
   1ef90:	asr	r7, r3, #2
   1ef94:	add	r3, r7, r3, lsr #31
   1ef98:	add	r3, r3, r3, lsl #2
   1ef9c:	sub	r3, r1, r3, lsl #1
   1efa0:	cmp	r3, #0
   1efa4:	beq	1ef58 <putc_unlocked@plt+0xcda0>
   1efa8:	cmp	r4, #1
   1efac:	sub	r5, fp, #48	; 0x30
   1efb0:	blt	1efe8 <putc_unlocked@plt+0xce30>
   1efb4:	smmul	r3, r1, r2
   1efb8:	asr	r7, r3, #2
   1efbc:	add	r3, r7, r3, lsr #31
   1efc0:	add	r7, r3, r3, lsl #2
   1efc4:	sub	r1, r1, r7, lsl #1
   1efc8:	add	r1, r1, #48	; 0x30
   1efcc:	strb	r1, [r5, r0]
   1efd0:	sub	r1, r0, #1
   1efd4:	add	r0, r0, #1
   1efd8:	cmp	r0, #1
   1efdc:	mov	r0, r1
   1efe0:	mov	r1, r3
   1efe4:	bgt	1efb4 <putc_unlocked@plt+0xcdfc>
   1efe8:	ldr	r0, [sp, #88]	; 0x58
   1efec:	sub	r5, r0, ip
   1eff0:	cmp	sl, #0
   1eff4:	movweq	sl, #48	; 0x30
   1eff8:	cmp	r4, r5
   1effc:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1f000:	mov	r8, #0
   1f004:	cmp	lr, #0
   1f008:	mov	r7, #0
   1f00c:	beq	1faa4 <putc_unlocked@plt+0xd8ec>
   1f010:	str	ip, [sp, #80]	; 0x50
   1f014:	ldr	r0, [sp, #92]	; 0x5c
   1f018:	sub	r1, fp, #48	; 0x30
   1f01c:	tst	r0, #1
   1f020:	beq	1fa8c <putc_unlocked@plt+0xd8d4>
   1f024:	mov	r0, lr
   1f028:	mov	r2, r4
   1f02c:	mov	r7, lr
   1f030:	bl	20064 <putc_unlocked@plt+0xdeac>
   1f034:	b	1fa9c <putc_unlocked@plt+0xd8e4>
   1f038:	mov	r8, #1
   1f03c:	orr	r8, r7, r8
   1f040:	eor	r0, r7, #1
   1f044:	ldr	r1, [sp, #92]	; 0x5c
   1f048:	and	r1, r1, r0
   1f04c:	str	r1, [sp, #92]	; 0x5c
   1f050:	mov	r3, #112	; 0x70
   1f054:	b	1fc3c <putc_unlocked@plt+0xda84>
   1f058:	cmp	r5, #69	; 0x45
   1f05c:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f060:	ldr	r0, [sp, #76]	; 0x4c
   1f064:	ldr	r0, [r0]
   1f068:	b	1f804 <putc_unlocked@plt+0xd64c>
   1f06c:	movw	r4, #34358	; 0x8636
   1f070:	movt	r4, #2
   1f074:	str	lr, [sp, #72]	; 0x48
   1f078:	ldr	r0, [sp, #92]	; 0x5c
   1f07c:	and	r5, r0, #1
   1f080:	stm	sp, {r5, sl}
   1f084:	str	r1, [sp, #92]	; 0x5c
   1f088:	str	r1, [sp, #8]
   1f08c:	ldr	r0, [fp, #20]
   1f090:	str	r0, [sp, #12]
   1f094:	ldr	r0, [fp, #24]
   1f098:	str	r0, [sp, #16]
   1f09c:	mov	r0, #0
   1f0a0:	mvn	r1, #0
   1f0a4:	mov	r2, r4
   1f0a8:	ldr	r3, [sp, #76]	; 0x4c
   1f0ac:	str	ip, [sp, #80]	; 0x50
   1f0b0:	bl	1e860 <putc_unlocked@plt+0xc6a8>
   1f0b4:	ldr	ip, [sp, #80]	; 0x50
   1f0b8:	mov	r8, r0
   1f0bc:	subs	r0, sl, #45	; 0x2d
   1f0c0:	movne	r0, r6
   1f0c4:	cmp	r6, #0
   1f0c8:	movwlt	r0, #0
   1f0cc:	cmp	r0, r8
   1f0d0:	mov	r7, r8
   1f0d4:	movhi	r7, r0
   1f0d8:	ldr	r1, [sp, #88]	; 0x58
   1f0dc:	sub	r6, r1, ip
   1f0e0:	cmp	r7, r6
   1f0e4:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1f0e8:	str	r5, [sp, #84]	; 0x54
   1f0ec:	ldr	r5, [sp, #72]	; 0x48
   1f0f0:	cmp	r5, #0
   1f0f4:	beq	1f634 <putc_unlocked@plt+0xd47c>
   1f0f8:	cmp	r0, r8
   1f0fc:	bls	1f63c <putc_unlocked@plt+0xd484>
   1f100:	sub	r2, r0, r8
   1f104:	cmp	sl, #48	; 0x30
   1f108:	cmpne	sl, #43	; 0x2b
   1f10c:	bne	1f93c <putc_unlocked@plt+0xd784>
   1f110:	mov	r0, r5
   1f114:	mov	r1, #48	; 0x30
   1f118:	b	1f944 <putc_unlocked@plt+0xd78c>
   1f11c:	cmp	r5, #69	; 0x45
   1f120:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f124:	ldr	r1, [sp, #76]	; 0x4c
   1f128:	ldr	r0, [r1, #24]
   1f12c:	ldr	r1, [r1, #28]
   1f130:	add	r1, r1, #7
   1f134:	sub	r0, r1, r0
   1f138:	movw	r1, #9363	; 0x2493
   1f13c:	movt	r1, #37449	; 0x9249
   1f140:	smmla	r0, r0, r1, r0
   1f144:	asr	r1, r0, #2
   1f148:	add	r0, r1, r0, lsr #31
   1f14c:	b	1f804 <putc_unlocked@plt+0xd64c>
   1f150:	cmp	r5, #69	; 0x45
   1f154:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f158:	ldr	r1, [sp, #76]	; 0x4c
   1f15c:	ldr	r0, [r1, #24]
   1f160:	ldr	r1, [r1, #28]
   1f164:	add	r0, r0, #6
   1f168:	movw	r2, #9363	; 0x2493
   1f16c:	movt	r2, #37449	; 0x9249
   1f170:	mov	r4, r3
   1f174:	smmla	r3, r0, r2, r0
   1f178:	asr	r7, r3, #2
   1f17c:	add	r3, r7, r3, lsr #31
   1f180:	ldr	r8, [sp, #92]	; 0x5c
   1f184:	rsb	r3, r3, r3, lsl #3
   1f188:	sub	r0, r3, r0
   1f18c:	mov	r3, r4
   1f190:	add	r0, r1, r0
   1f194:	add	r0, r0, #7
   1f198:	smmla	r0, r0, r2, r0
   1f19c:	asr	r1, r0, #2
   1f1a0:	add	r0, r1, r0, lsr #31
   1f1a4:	b	1f310 <putc_unlocked@plt+0xd158>
   1f1a8:	cmp	r5, #79	; 0x4f
   1f1ac:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f1b0:	mov	r8, #0
   1f1b4:	mov	r3, #88	; 0x58
   1f1b8:	b	1fc3c <putc_unlocked@plt+0xda84>
   1f1bc:	cmp	r5, #69	; 0x45
   1f1c0:	beq	1f928 <putc_unlocked@plt+0xd770>
   1f1c4:	cmp	r5, #79	; 0x4f
   1f1c8:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f1cc:	ldr	r0, [sp, #76]	; 0x4c
   1f1d0:	ldr	r0, [r0, #20]
   1f1d4:	movw	r2, #63636	; 0xf894
   1f1d8:	movt	r2, #65535	; 0xffff
   1f1dc:	mov	r1, #0
   1f1e0:	cmp	r0, r2
   1f1e4:	movwlt	r1, #1
   1f1e8:	b	1f7dc <putc_unlocked@plt+0xd624>
   1f1ec:	str	lr, [sp, #72]	; 0x48
   1f1f0:	subs	r8, sl, #45	; 0x2d
   1f1f4:	bicne	r8, r6, r6, asr #31
   1f1f8:	ldr	r0, [sp, #44]	; 0x2c
   1f1fc:	mov	r6, ip
   1f200:	bl	11fc0 <strlen@plt>
   1f204:	mov	r4, r0
   1f208:	cmp	r8, r0
   1f20c:	mov	r5, r0
   1f210:	movhi	r5, r8
   1f214:	ldr	r0, [sp, #88]	; 0x58
   1f218:	sub	r0, r0, r6
   1f21c:	cmp	r5, r0
   1f220:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1f224:	ldr	r0, [sp, #72]	; 0x48
   1f228:	cmp	r0, #0
   1f22c:	beq	1f898 <putc_unlocked@plt+0xd6e0>
   1f230:	cmp	r8, r4
   1f234:	bls	1f934 <putc_unlocked@plt+0xd77c>
   1f238:	sub	r8, r8, r4
   1f23c:	uxtb	r1, sl
   1f240:	cmp	r1, #48	; 0x30
   1f244:	cmpne	r1, #43	; 0x2b
   1f248:	bne	1faf0 <putc_unlocked@plt+0xd938>
   1f24c:	mov	r1, #48	; 0x30
   1f250:	b	1faf4 <putc_unlocked@plt+0xd93c>
   1f254:	cmp	r5, #0
   1f258:	bne	1f544 <putc_unlocked@plt+0xd38c>
   1f25c:	ldr	r0, [sp, #92]	; 0x5c
   1f260:	orr	r0, r7, r0
   1f264:	str	r0, [sp, #92]	; 0x5c
   1f268:	mov	r8, #0
   1f26c:	mov	r3, #97	; 0x61
   1f270:	b	1fc3c <putc_unlocked@plt+0xda84>
   1f274:	cmp	r5, #79	; 0x4f
   1f278:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f27c:	mov	r8, #0
   1f280:	mov	r3, #99	; 0x63
   1f284:	b	1fc3c <putc_unlocked@plt+0xda84>
   1f288:	cmp	r5, #69	; 0x45
   1f28c:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f290:	ldr	r0, [sp, #76]	; 0x4c
   1f294:	ldr	r0, [r0, #12]
   1f298:	b	1f804 <putc_unlocked@plt+0xd64c>
   1f29c:	cmp	r5, #69	; 0x45
   1f2a0:	ldr	r0, [sp, #32]
   1f2a4:	bne	1f2e4 <putc_unlocked@plt+0xd12c>
   1f2a8:	b	1f544 <putc_unlocked@plt+0xd38c>
   1f2ac:	cmp	r5, #69	; 0x45
   1f2b0:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f2b4:	ldr	r0, [sp, #76]	; 0x4c
   1f2b8:	ldr	r0, [r0, #28]
   1f2bc:	mov	r1, #0
   1f2c0:	cmn	r0, #1
   1f2c4:	movwlt	r1, #1
   1f2c8:	add	r0, r0, #1
   1f2cc:	mov	r4, #3
   1f2d0:	ldr	r8, [sp, #92]	; 0x5c
   1f2d4:	b	1f810 <putc_unlocked@plt+0xd658>
   1f2d8:	cmp	r5, #69	; 0x45
   1f2dc:	ldr	r0, [sp, #40]	; 0x28
   1f2e0:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f2e4:	ldr	r0, [r0]
   1f2e8:	ldr	r8, [sp, #92]	; 0x5c
   1f2ec:	b	1f308 <putc_unlocked@plt+0xd150>
   1f2f0:	cmp	r5, #69	; 0x45
   1f2f4:	ldr	r0, [sp, #36]	; 0x24
   1f2f8:	ldr	r8, [sp, #92]	; 0x5c
   1f2fc:	bne	1f308 <putc_unlocked@plt+0xd150>
   1f300:	ldr	r2, [sp, #84]	; 0x54
   1f304:	b	1f54c <putc_unlocked@plt+0xd394>
   1f308:	cmp	sl, #0
   1f30c:	movweq	sl, #95	; 0x5f
   1f310:	mov	r4, #2
   1f314:	b	1f80c <putc_unlocked@plt+0xd654>
   1f318:	cmp	r5, #69	; 0x45
   1f31c:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f320:	ldr	r0, [sp, #76]	; 0x4c
   1f324:	ldr	r0, [r0, #16]
   1f328:	mov	r1, #0
   1f32c:	cmn	r0, #1
   1f330:	movwlt	r1, #1
   1f334:	add	r0, r0, #1
   1f338:	mov	r4, #2
   1f33c:	ldr	r8, [sp, #92]	; 0x5c
   1f340:	b	1f810 <putc_unlocked@plt+0xd658>
   1f344:	subs	r0, sl, #45	; 0x2d
   1f348:	bicne	r0, r6, r6, asr #31
   1f34c:	cmp	r0, #1
   1f350:	mov	r5, r0
   1f354:	movls	r5, #1
   1f358:	ldr	r1, [sp, #88]	; 0x58
   1f35c:	sub	r1, r1, ip
   1f360:	cmp	r5, r1
   1f364:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1f368:	cmp	lr, #0
   1f36c:	mov	r8, #-2147483648	; 0x80000000
   1f370:	movw	r3, #52428	; 0xcccc
   1f374:	movt	r3, #3276	; 0xccc
   1f378:	beq	1f890 <putc_unlocked@plt+0xd6d8>
   1f37c:	cmp	r0, #2
   1f380:	bcc	1fb90 <putc_unlocked@plt+0xd9d8>
   1f384:	uxtb	r1, sl
   1f388:	sub	r4, r0, #1
   1f38c:	cmp	r1, #48	; 0x30
   1f390:	cmpne	r1, #43	; 0x2b
   1f394:	bne	1fb60 <putc_unlocked@plt+0xd9a8>
   1f398:	mov	r0, lr
   1f39c:	mov	r1, #48	; 0x30
   1f3a0:	b	1fb68 <putc_unlocked@plt+0xd9b0>
   1f3a4:	ldr	r0, [sp, #76]	; 0x4c
   1f3a8:	ldr	r0, [r0, #16]
   1f3ac:	mov	r1, #11
   1f3b0:	mul	r0, r0, r1
   1f3b4:	mov	r4, #1
   1f3b8:	add	r0, r4, r0, asr #5
   1f3bc:	mov	r1, #0
   1f3c0:	ldr	r8, [sp, #92]	; 0x5c
   1f3c4:	b	1f810 <putc_unlocked@plt+0xd658>
   1f3c8:	str	lr, [sp, #72]	; 0x48
   1f3cc:	str	ip, [sp, #80]	; 0x50
   1f3d0:	mov	r0, #28
   1f3d4:	ldr	r2, [sp, #76]	; 0x4c
   1f3d8:	mov	r3, r2
   1f3dc:	vld1.32	{d16-d17}, [r3], r0
   1f3e0:	add	r2, r2, #16
   1f3e4:	vld1.32	{d18-d19}, [r2]
   1f3e8:	add	r1, sp, #96	; 0x60
   1f3ec:	add	r2, r1, #16
   1f3f0:	vld1.32	{d20-d21}, [r3]
   1f3f4:	vst1.64	{d18-d19}, [r2]
   1f3f8:	mov	r4, r1
   1f3fc:	vst1.64	{d16-d17}, [r4], r0
   1f400:	vst1.32	{d20-d21}, [r4]
   1f404:	mvn	r0, #0
   1f408:	str	r0, [r4]
   1f40c:	ldr	r0, [fp, #20]
   1f410:	bl	22730 <_obstack_memory_used@@Base+0x2368>
   1f414:	ldr	r1, [r4]
   1f418:	cmp	r1, #0
   1f41c:	blt	20020 <putc_unlocked@plt+0xde68>
   1f420:	lsr	r1, r0, #31
   1f424:	ldr	r2, [sp, #28]
   1f428:	mov	r3, r0
   1f42c:	movw	r7, #26215	; 0x6667
   1f430:	movt	r7, #26214	; 0x6666
   1f434:	smmul	r7, r3, r7
   1f438:	asr	r5, r7, #2
   1f43c:	add	r7, r5, r7, lsr #31
   1f440:	add	r5, r7, r7, lsl #2
   1f444:	sub	r5, r3, r5, lsl #1
   1f448:	cmp	r0, #0
   1f44c:	rsblt	r5, r5, #0
   1f450:	add	r5, r5, #48	; 0x30
   1f454:	strb	r5, [r2], #-1
   1f458:	add	r3, r3, #9
   1f45c:	cmp	r3, #18
   1f460:	mov	r3, r7
   1f464:	bhi	1f42c <putc_unlocked@plt+0xd274>
   1f468:	add	r8, r2, #1
   1f46c:	cmp	r6, #0
   1f470:	movwlt	r6, #1
   1f474:	cmp	sl, #0
   1f478:	movweq	sl, #48	; 0x30
   1f47c:	mov	r2, #0
   1f480:	mov	r4, r6
   1f484:	str	r9, [sp, #84]	; 0x54
   1f488:	ldr	ip, [sp, #80]	; 0x50
   1f48c:	ldr	lr, [sp, #72]	; 0x48
   1f490:	b	1fd8c <putc_unlocked@plt+0xdbd4>
   1f494:	subs	r0, sl, #45	; 0x2d
   1f498:	bicne	r0, r6, r6, asr #31
   1f49c:	cmp	r0, #1
   1f4a0:	mov	r5, r0
   1f4a4:	movls	r5, #1
   1f4a8:	ldr	r1, [sp, #88]	; 0x58
   1f4ac:	sub	r1, r1, ip
   1f4b0:	cmp	r5, r1
   1f4b4:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1f4b8:	cmp	lr, #0
   1f4bc:	mov	r8, #-2147483648	; 0x80000000
   1f4c0:	movw	r3, #52428	; 0xcccc
   1f4c4:	movt	r3, #3276	; 0xccc
   1f4c8:	beq	1f890 <putc_unlocked@plt+0xd6d8>
   1f4cc:	cmp	r0, #2
   1f4d0:	bcc	1fbc8 <putc_unlocked@plt+0xda10>
   1f4d4:	uxtb	r1, sl
   1f4d8:	sub	r4, r0, #1
   1f4dc:	cmp	r1, #48	; 0x30
   1f4e0:	cmpne	r1, #43	; 0x2b
   1f4e4:	bne	1fb98 <putc_unlocked@plt+0xd9e0>
   1f4e8:	mov	r0, lr
   1f4ec:	mov	r1, #48	; 0x30
   1f4f0:	b	1fba0 <putc_unlocked@plt+0xd9e8>
   1f4f4:	ldr	r0, [sp, #76]	; 0x4c
   1f4f8:	ldr	r0, [r0, #24]
   1f4fc:	add	r0, r0, #6
   1f500:	movw	r1, #9363	; 0x2493
   1f504:	movt	r1, #37449	; 0x9249
   1f508:	smmla	r1, r0, r1, r0
   1f50c:	asr	r2, r1, #2
   1f510:	add	r1, r2, r1, lsr #31
   1f514:	rsb	r1, r1, r1, lsl #3
   1f518:	sub	r0, r0, r1
   1f51c:	add	r0, r0, #1
   1f520:	b	1f534 <putc_unlocked@plt+0xd37c>
   1f524:	cmp	r5, #69	; 0x45
   1f528:	beq	1f544 <putc_unlocked@plt+0xd38c>
   1f52c:	ldr	r0, [sp, #76]	; 0x4c
   1f530:	ldr	r0, [r0, #24]
   1f534:	mov	r4, #1
   1f538:	b	1f808 <putc_unlocked@plt+0xd650>
   1f53c:	cmp	r5, #79	; 0x4f
   1f540:	bne	1f778 <putc_unlocked@plt+0xd5c0>
   1f544:	ldr	r2, [sp, #84]	; 0x54
   1f548:	ldr	r8, [sp, #92]	; 0x5c
   1f54c:	subs	r0, sl, #45	; 0x2d
   1f550:	bicne	r0, r6, r6, asr #31
   1f554:	sub	r1, r9, r2
   1f558:	add	r4, r1, #1
   1f55c:	cmp	r0, r4
   1f560:	mov	r5, r4
   1f564:	movhi	r5, r0
   1f568:	ldr	r1, [sp, #88]	; 0x58
   1f56c:	sub	r1, r1, ip
   1f570:	cmp	r5, r1
   1f574:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1f578:	cmp	lr, #0
   1f57c:	beq	1f5b0 <putc_unlocked@plt+0xd3f8>
   1f580:	cmp	r0, r4
   1f584:	bls	1f5e0 <putc_unlocked@plt+0xd428>
   1f588:	mov	r7, r8
   1f58c:	str	ip, [sp, #80]	; 0x50
   1f590:	sub	r8, r0, r4
   1f594:	uxtb	r0, sl
   1f598:	cmp	r0, #48	; 0x30
   1f59c:	cmpne	r0, #43	; 0x2b
   1f5a0:	bne	1f5b8 <putc_unlocked@plt+0xd400>
   1f5a4:	mov	r0, lr
   1f5a8:	mov	r1, #48	; 0x30
   1f5ac:	b	1f5c0 <putc_unlocked@plt+0xd408>
   1f5b0:	mov	lr, #0
   1f5b4:	b	1f614 <putc_unlocked@plt+0xd45c>
   1f5b8:	mov	r0, lr
   1f5bc:	mov	r1, #32
   1f5c0:	mov	r2, r8
   1f5c4:	mov	r6, lr
   1f5c8:	bl	12008 <memset@plt>
   1f5cc:	add	r6, r6, r8
   1f5d0:	ldr	ip, [sp, #80]	; 0x50
   1f5d4:	mov	lr, r6
   1f5d8:	ldr	r2, [sp, #84]	; 0x54
   1f5dc:	mov	r8, r7
   1f5e0:	mov	r0, lr
   1f5e4:	mov	r1, r2
   1f5e8:	mov	r2, r4
   1f5ec:	mov	r6, ip
   1f5f0:	mov	r7, lr
   1f5f4:	tst	r8, #1
   1f5f8:	beq	1f604 <putc_unlocked@plt+0xd44c>
   1f5fc:	bl	20064 <putc_unlocked@plt+0xdeac>
   1f600:	b	1f608 <putc_unlocked@plt+0xd450>
   1f604:	bl	11d74 <memcpy@plt>
   1f608:	mov	lr, r7
   1f60c:	mov	ip, r6
   1f610:	add	lr, r7, r4
   1f614:	add	ip, r5, ip
   1f618:	mov	r7, r9
   1f61c:	b	1ff80 <putc_unlocked@plt+0xddc8>
   1f620:	cmp	r5, #69	; 0x45
   1f624:	bne	1f784 <putc_unlocked@plt+0xd5cc>
   1f628:	mov	r8, #0
   1f62c:	mov	r3, #121	; 0x79
   1f630:	b	1fc3c <putc_unlocked@plt+0xda84>
   1f634:	mov	lr, #0
   1f638:	b	1f998 <putc_unlocked@plt+0xd7e0>
   1f63c:	ldr	r3, [sp, #76]	; 0x4c
   1f640:	ldr	r0, [sp, #92]	; 0x5c
   1f644:	b	1f960 <putc_unlocked@plt+0xd7a8>
   1f648:	sub	r0, r8, #1
   1f64c:	movw	r1, #365	; 0x16d
   1f650:	tst	r0, #3
   1f654:	bne	1f698 <putc_unlocked@plt+0xd4e0>
   1f658:	movw	r1, #34079	; 0x851f
   1f65c:	movt	r1, #20971	; 0x51eb
   1f660:	smmul	r1, r0, r1
   1f664:	asr	r2, r1, #5
   1f668:	add	r2, r2, r1, lsr #31
   1f66c:	mov	r3, #100	; 0x64
   1f670:	mls	r2, r2, r3, r0
   1f674:	asr	r3, r1, #7
   1f678:	add	r1, r3, r1, lsr #31
   1f67c:	mov	r3, #400	; 0x190
   1f680:	mls	r0, r1, r3, r0
   1f684:	movw	r1, #365	; 0x16d
   1f688:	cmp	r0, #0
   1f68c:	movweq	r1, #366	; 0x16e
   1f690:	cmp	r2, #0
   1f694:	movwne	r1, #366	; 0x16e
   1f698:	add	r0, r1, r7
   1f69c:	ldr	r1, [sp, #20]
   1f6a0:	bl	200a0 <putc_unlocked@plt+0xdee8>
   1f6a4:	mov	r4, r0
   1f6a8:	mvn	r0, #0
   1f6ac:	ldr	ip, [sp, #80]	; 0x50
   1f6b0:	ldr	lr, [sp, #72]	; 0x48
   1f6b4:	ldr	r3, [sp, #84]	; 0x54
   1f6b8:	ldr	r8, [sp, #24]
   1f6bc:	cmp	r3, #71	; 0x47
   1f6c0:	beq	1f7c0 <putc_unlocked@plt+0xd608>
   1f6c4:	cmp	r3, #103	; 0x67
   1f6c8:	bne	1f7ec <putc_unlocked@plt+0xd634>
   1f6cc:	movw	r1, #34079	; 0x851f
   1f6d0:	movt	r1, #20971	; 0x51eb
   1f6d4:	smmul	r2, r8, r1
   1f6d8:	asr	r3, r2, #5
   1f6dc:	add	r2, r3, r2, lsr #31
   1f6e0:	mov	r3, #100	; 0x64
   1f6e4:	mls	r2, r2, r3, r8
   1f6e8:	add	r2, r0, r2
   1f6ec:	smmul	r1, r2, r1
   1f6f0:	asr	r7, r1, #5
   1f6f4:	add	r1, r7, r1, lsr #31
   1f6f8:	mls	r2, r1, r3, r2
   1f6fc:	mov	r4, #2
   1f700:	mov	r1, #0
   1f704:	cmn	r2, #1
   1f708:	ble	1f9b8 <putc_unlocked@plt+0xd800>
   1f70c:	mov	r0, r2
   1f710:	ldr	r3, [sp, #84]	; 0x54
   1f714:	b	1f9f4 <putc_unlocked@plt+0xd83c>
   1f718:	mov	r7, r9
   1f71c:	b	1ff80 <putc_unlocked@plt+0xddc8>
   1f720:	ldr	r0, [sp, #76]	; 0x4c
   1f724:	ldr	r2, [r0, #20]
   1f728:	mov	r4, r3
   1f72c:	movw	r3, #63636	; 0xf894
   1f730:	movt	r3, #65535	; 0xffff
   1f734:	mov	r1, #0
   1f738:	cmp	r2, r3
   1f73c:	mov	r0, #0
   1f740:	movwge	r0, #1
   1f744:	and	r0, r0, r2, lsr #31
   1f748:	mvn	r7, #98	; 0x62
   1f74c:	smlabb	r0, r0, r7, r2
   1f750:	movw	r7, #34079	; 0x851f
   1f754:	movt	r7, #20971	; 0x51eb
   1f758:	smmul	r0, r0, r7
   1f75c:	asr	r7, r0, #5
   1f760:	add	r0, r7, r0, lsr #31
   1f764:	add	r0, r0, #19
   1f768:	cmp	r2, r3
   1f76c:	mov	r3, r4
   1f770:	movwlt	r1, #1
   1f774:	b	1f9f0 <putc_unlocked@plt+0xd838>
   1f778:	mov	r8, #0
   1f77c:	mov	r3, #120	; 0x78
   1f780:	b	1fc3c <putc_unlocked@plt+0xda84>
   1f784:	mov	r4, r3
   1f788:	ldr	r0, [sp, #76]	; 0x4c
   1f78c:	ldr	r2, [r0, #20]
   1f790:	movw	r0, #34079	; 0x851f
   1f794:	movt	r0, #20971	; 0x51eb
   1f798:	smmul	r0, r2, r0
   1f79c:	asr	r1, r0, #5
   1f7a0:	add	r0, r1, r0, lsr #31
   1f7a4:	mov	r1, #100	; 0x64
   1f7a8:	mls	r3, r0, r1, r2
   1f7ac:	mov	r1, #0
   1f7b0:	cmn	r3, #1
   1f7b4:	ble	1f9d8 <putc_unlocked@plt+0xd820>
   1f7b8:	mov	r0, r3
   1f7bc:	b	1f9ec <putc_unlocked@plt+0xd834>
   1f7c0:	movw	r1, #63636	; 0xf894
   1f7c4:	movt	r1, #65535	; 0xffff
   1f7c8:	sub	r2, r1, r0
   1f7cc:	mov	r1, #0
   1f7d0:	cmp	r8, r2
   1f7d4:	movwlt	r1, #1
   1f7d8:	add	r0, r8, r0
   1f7dc:	movw	r2, #1900	; 0x76c
   1f7e0:	add	r0, r0, r2
   1f7e4:	mov	r4, #4
   1f7e8:	b	1f9f4 <putc_unlocked@plt+0xd83c>
   1f7ec:	movw	r0, #9363	; 0x2493
   1f7f0:	movt	r0, #37449	; 0x9249
   1f7f4:	smmla	r0, r4, r0, r4
   1f7f8:	asr	r1, r0, #2
   1f7fc:	add	r0, r1, r0, lsr #31
   1f800:	add	r0, r0, #1
   1f804:	mov	r4, #2
   1f808:	ldr	r8, [sp, #92]	; 0x5c
   1f80c:	lsr	r1, r0, #31
   1f810:	cmp	r1, #0
   1f814:	movwne	r1, #1
   1f818:	mov	r2, #0
   1f81c:	mov	r7, #0
   1f820:	str	r7, [sp, #72]	; 0x48
   1f824:	cmp	r5, #79	; 0x4f
   1f828:	beq	1fc2c <putc_unlocked@plt+0xda74>
   1f82c:	b	1fd14 <putc_unlocked@plt+0xdb5c>
   1f830:	subs	r0, sl, #45	; 0x2d
   1f834:	bicne	r0, r6, r6, asr #31
   1f838:	cmp	r0, #1
   1f83c:	mov	r5, r0
   1f840:	movls	r5, #1
   1f844:	ldr	r1, [sp, #88]	; 0x58
   1f848:	sub	r1, r1, ip
   1f84c:	cmp	r5, r1
   1f850:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1f854:	cmp	lr, #0
   1f858:	mov	r8, #-2147483648	; 0x80000000
   1f85c:	movw	r3, #52428	; 0xcccc
   1f860:	movt	r3, #3276	; 0xccc
   1f864:	beq	1f890 <putc_unlocked@plt+0xd6d8>
   1f868:	cmp	r0, #2
   1f86c:	bcc	1ffc0 <putc_unlocked@plt+0xde08>
   1f870:	uxtb	r1, sl
   1f874:	sub	r4, r0, #1
   1f878:	cmp	r1, #48	; 0x30
   1f87c:	cmpne	r1, #43	; 0x2b
   1f880:	bne	1ff90 <putc_unlocked@plt+0xddd8>
   1f884:	mov	r0, lr
   1f888:	mov	r1, #48	; 0x30
   1f88c:	b	1ff98 <putc_unlocked@plt+0xdde0>
   1f890:	mov	lr, #0
   1f894:	b	1ffc8 <putc_unlocked@plt+0xde10>
   1f898:	mov	ip, r6
   1f89c:	b	1fcfc <putc_unlocked@plt+0xdb44>
   1f8a0:	mov	r1, #1
   1f8a4:	cmp	r8, #3
   1f8a8:	bhi	1ee58 <putc_unlocked@plt+0xcca0>
   1f8ac:	str	r3, [sp, #84]	; 0x54
   1f8b0:	movw	r0, #34953	; 0x8889
   1f8b4:	movt	r0, #34952	; 0x8888
   1f8b8:	smmla	r3, r2, r0, r2
   1f8bc:	asr	r7, r3, #5
   1f8c0:	add	r7, r7, r3, lsr #31
   1f8c4:	smmla	r0, r7, r0, r7
   1f8c8:	asr	r3, r0, #5
   1f8cc:	add	r0, r3, r0, lsr #31
   1f8d0:	rsb	r0, r0, r0, lsl #4
   1f8d4:	sub	r3, r7, r0, lsl #2
   1f8d8:	movw	r0, #46021	; 0xb3c5
   1f8dc:	movt	r0, #37282	; 0x91a2
   1f8e0:	smmla	r0, r2, r0, r2
   1f8e4:	asr	r4, r0, #11
   1f8e8:	add	r0, r4, r0, lsr #31
   1f8ec:	rsb	r7, r7, r7, lsl #4
   1f8f0:	sub	r2, r2, r7, lsl #2
   1f8f4:	add	r7, pc, #0
   1f8f8:	ldr	pc, [r7, r8, lsl #2]
   1f8fc:	andeq	pc, r1, ip, lsl #18
   1f900:	andeq	pc, r1, r4, lsl #24
   1f904:	andeq	pc, r1, r8, ror #20
   1f908:	andeq	pc, r1, r0, ror #20
   1f90c:	mov	r2, #100	; 0x64
   1f910:	mla	r0, r0, r2, r3
   1f914:	mov	r4, #5
   1f918:	mov	r2, #1
   1f91c:	str	r2, [sp, #72]	; 0x48
   1f920:	mov	r2, #0
   1f924:	b	1fc1c <putc_unlocked@plt+0xda64>
   1f928:	mov	r8, #0
   1f92c:	mov	r3, #89	; 0x59
   1f930:	b	1fc3c <putc_unlocked@plt+0xda84>
   1f934:	ldr	r1, [sp, #44]	; 0x2c
   1f938:	b	1fb08 <putc_unlocked@plt+0xd950>
   1f93c:	mov	r0, r5
   1f940:	mov	r1, #32
   1f944:	mov	r5, r2
   1f948:	bl	12008 <memset@plt>
   1f94c:	mov	r1, r5
   1f950:	ldr	r5, [sp, #72]	; 0x48
   1f954:	ldr	r3, [sp, #76]	; 0x4c
   1f958:	ldr	r0, [sp, #92]	; 0x5c
   1f95c:	add	r5, r5, r1
   1f960:	ldr	r1, [sp, #84]	; 0x54
   1f964:	stm	sp, {r1, sl}
   1f968:	str	r0, [sp, #8]
   1f96c:	ldr	r0, [fp, #20]
   1f970:	str	r0, [sp, #12]
   1f974:	ldr	r0, [fp, #24]
   1f978:	str	r0, [sp, #16]
   1f97c:	mov	r0, r5
   1f980:	mov	r1, r6
   1f984:	mov	r2, r4
   1f988:	bl	1e860 <putc_unlocked@plt+0xc6a8>
   1f98c:	mov	lr, r5
   1f990:	add	lr, r5, r8
   1f994:	ldr	ip, [sp, #80]	; 0x50
   1f998:	mov	r8, #-2147483648	; 0x80000000
   1f99c:	movw	r3, #52428	; 0xcccc
   1f9a0:	movt	r3, #3276	; 0xccc
   1f9a4:	add	ip, r7, ip
   1f9a8:	b	1ffcc <putc_unlocked@plt+0xde14>
   1f9ac:	sub	r0, r6, #6
   1f9b0:	bic	r1, r0, r0, asr #31
   1f9b4:	b	1f074 <putc_unlocked@plt+0xcebc>
   1f9b8:	movw	r3, #63636	; 0xf894
   1f9bc:	movt	r3, #65535	; 0xffff
   1f9c0:	sub	r3, r3, r0
   1f9c4:	add	r0, r2, #100	; 0x64
   1f9c8:	cmp	r8, r3
   1f9cc:	rsblt	r0, r2, #0
   1f9d0:	ldr	r3, [sp, #84]	; 0x54
   1f9d4:	b	1f9f4 <putc_unlocked@plt+0xd83c>
   1f9d8:	add	r0, r3, #100	; 0x64
   1f9dc:	movw	r7, #63636	; 0xf894
   1f9e0:	movt	r7, #65535	; 0xffff
   1f9e4:	cmp	r2, r7
   1f9e8:	rsblt	r0, r3, #0
   1f9ec:	mov	r3, r4
   1f9f0:	mov	r4, #2
   1f9f4:	cmp	sl, #0
   1f9f8:	ldr	r2, [fp, #12]
   1f9fc:	moveq	sl, r2
   1fa00:	mov	r2, #0
   1fa04:	cmp	sl, #43	; 0x2b
   1fa08:	mov	r7, #0
   1fa0c:	str	r7, [sp, #72]	; 0x48
   1fa10:	bne	1fa50 <putc_unlocked@plt+0xd898>
   1fa14:	str	r3, [sp, #84]	; 0x54
   1fa18:	mov	r3, #0
   1fa1c:	cmp	r4, r6
   1fa20:	mov	r7, #0
   1fa24:	movwlt	r7, #1
   1fa28:	mov	r8, r4
   1fa2c:	movw	r4, #9999	; 0x270f
   1fa30:	cmp	r8, #2
   1fa34:	movweq	r4, #99	; 0x63
   1fa38:	cmp	r4, r0
   1fa3c:	mov	r4, r8
   1fa40:	movwcc	r3, #1
   1fa44:	orr	r3, r7, r3
   1fa48:	str	r3, [sp, #72]	; 0x48
   1fa4c:	ldr	r3, [sp, #84]	; 0x54
   1fa50:	ldr	r8, [sp, #92]	; 0x5c
   1fa54:	cmp	r5, #79	; 0x4f
   1fa58:	beq	1fc2c <putc_unlocked@plt+0xda74>
   1fa5c:	b	1fd14 <putc_unlocked@plt+0xdb5c>
   1fa60:	cmp	r2, #0
   1fa64:	beq	1fbfc <putc_unlocked@plt+0xda44>
   1fa68:	movw	r7, #10000	; 0x2710
   1fa6c:	mla	r0, r0, r7, r2
   1fa70:	mov	r2, #100	; 0x64
   1fa74:	mla	r0, r3, r2, r0
   1fa78:	mov	r4, #9
   1fa7c:	mov	r2, #1
   1fa80:	str	r2, [sp, #72]	; 0x48
   1fa84:	mov	r2, #20
   1fa88:	b	1fc1c <putc_unlocked@plt+0xda64>
   1fa8c:	mov	r0, lr
   1fa90:	mov	r2, r4
   1fa94:	mov	r7, lr
   1fa98:	bl	11d74 <memcpy@plt>
   1fa9c:	add	r7, r7, r4
   1faa0:	ldr	ip, [sp, #80]	; 0x50
   1faa4:	cmp	sl, #45	; 0x2d
   1faa8:	subne	r0, r6, r4
   1faac:	bicne	r8, r0, r0, asr #31
   1fab0:	sub	r0, r5, r4
   1fab4:	cmp	r8, r0
   1fab8:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1fabc:	cmp	r7, #0
   1fac0:	beq	1fae8 <putc_unlocked@plt+0xd930>
   1fac4:	cmp	r8, #0
   1fac8:	beq	1fae8 <putc_unlocked@plt+0xd930>
   1facc:	uxtb	r0, sl
   1fad0:	cmp	r0, #48	; 0x30
   1fad4:	cmpne	r0, #43	; 0x2b
   1fad8:	bne	1fbd0 <putc_unlocked@plt+0xda18>
   1fadc:	mov	r0, r7
   1fae0:	mov	r1, #48	; 0x30
   1fae4:	b	1fbd8 <putc_unlocked@plt+0xda20>
   1fae8:	mov	lr, r7
   1faec:	b	1fbec <putc_unlocked@plt+0xda34>
   1faf0:	mov	r1, #32
   1faf4:	mov	r2, r8
   1faf8:	bl	12008 <memset@plt>
   1fafc:	ldr	r0, [sp, #72]	; 0x48
   1fb00:	ldr	r1, [sp, #44]	; 0x2c
   1fb04:	add	r0, r0, r8
   1fb08:	ldr	r3, [sp, #92]	; 0x5c
   1fb0c:	tst	r7, #1
   1fb10:	beq	1fb24 <putc_unlocked@plt+0xd96c>
   1fb14:	mov	r2, r4
   1fb18:	mov	r7, r0
   1fb1c:	bl	20028 <putc_unlocked@plt+0xde70>
   1fb20:	b	1fb50 <putc_unlocked@plt+0xd998>
   1fb24:	eor	r2, r7, #1
   1fb28:	and	r2, r3, r2
   1fb2c:	tst	r2, #1
   1fb30:	beq	1fb44 <putc_unlocked@plt+0xd98c>
   1fb34:	mov	r2, r4
   1fb38:	mov	r7, r0
   1fb3c:	bl	20064 <putc_unlocked@plt+0xdeac>
   1fb40:	b	1fb50 <putc_unlocked@plt+0xd998>
   1fb44:	mov	r2, r4
   1fb48:	mov	r7, r0
   1fb4c:	bl	11d74 <memcpy@plt>
   1fb50:	mov	lr, r7
   1fb54:	mov	ip, r6
   1fb58:	add	lr, r7, r4
   1fb5c:	b	1fd00 <putc_unlocked@plt+0xdb48>
   1fb60:	mov	r0, lr
   1fb64:	mov	r1, #32
   1fb68:	mov	r2, r4
   1fb6c:	mov	r6, ip
   1fb70:	mov	r7, lr
   1fb74:	bl	12008 <memset@plt>
   1fb78:	mov	lr, r7
   1fb7c:	mov	ip, r6
   1fb80:	add	lr, r7, r4
   1fb84:	mov	r8, #-2147483648	; 0x80000000
   1fb88:	movw	r3, #52428	; 0xcccc
   1fb8c:	movt	r3, #3276	; 0xccc
   1fb90:	mov	r0, #10
   1fb94:	b	1ffc4 <putc_unlocked@plt+0xde0c>
   1fb98:	mov	r0, lr
   1fb9c:	mov	r1, #32
   1fba0:	mov	r2, r4
   1fba4:	mov	r6, ip
   1fba8:	mov	r7, lr
   1fbac:	bl	12008 <memset@plt>
   1fbb0:	mov	lr, r7
   1fbb4:	mov	ip, r6
   1fbb8:	add	lr, r7, r4
   1fbbc:	mov	r8, #-2147483648	; 0x80000000
   1fbc0:	movw	r3, #52428	; 0xcccc
   1fbc4:	movt	r3, #3276	; 0xccc
   1fbc8:	mov	r0, #9
   1fbcc:	b	1ffc4 <putc_unlocked@plt+0xde0c>
   1fbd0:	mov	r0, r7
   1fbd4:	mov	r1, #32
   1fbd8:	mov	r2, r8
   1fbdc:	mov	r5, ip
   1fbe0:	bl	12008 <memset@plt>
   1fbe4:	mov	ip, r5
   1fbe8:	add	lr, r7, r8
   1fbec:	add	r0, r8, ip
   1fbf0:	add	ip, r0, r4
   1fbf4:	mov	r7, r9
   1fbf8:	b	1ff80 <putc_unlocked@plt+0xddc8>
   1fbfc:	cmp	r3, #0
   1fc00:	beq	1e940 <putc_unlocked@plt+0xc788>
   1fc04:	mov	r2, #100	; 0x64
   1fc08:	mla	r0, r0, r2, r3
   1fc0c:	mov	r4, #6
   1fc10:	mov	r2, #1
   1fc14:	str	r2, [sp, #72]	; 0x48
   1fc18:	mov	r2, #4
   1fc1c:	ldr	r8, [sp, #92]	; 0x5c
   1fc20:	ldr	r3, [sp, #84]	; 0x54
   1fc24:	cmp	r5, #79	; 0x4f
   1fc28:	bne	1fd14 <putc_unlocked@plt+0xdb5c>
   1fc2c:	str	r8, [sp, #92]	; 0x5c
   1fc30:	mov	r8, #0
   1fc34:	cmp	r1, #0
   1fc38:	bne	1fd10 <putc_unlocked@plt+0xdb58>
   1fc3c:	str	ip, [sp, #80]	; 0x50
   1fc40:	mov	r7, lr
   1fc44:	movw	r0, #9504	; 0x2520
   1fc48:	strh	r0, [fp, #-53]	; 0xffffffcb
   1fc4c:	cmp	r5, #0
   1fc50:	ldr	r0, [sp, #68]	; 0x44
   1fc54:	strbne	r5, [fp, #-51]	; 0xffffffcd
   1fc58:	ldrne	r0, [sp, #52]	; 0x34
   1fc5c:	mov	r1, #0
   1fc60:	strb	r1, [r0, #1]
   1fc64:	strb	r3, [r0]
   1fc68:	add	r0, sp, #96	; 0x60
   1fc6c:	sub	r2, fp, #53	; 0x35
   1fc70:	mov	r1, #1024	; 0x400
   1fc74:	ldr	r3, [sp, #76]	; 0x4c
   1fc78:	bl	11f3c <strftime@plt>
   1fc7c:	cmp	r0, #0
   1fc80:	beq	1fce4 <putc_unlocked@plt+0xdb2c>
   1fc84:	subs	r1, sl, #45	; 0x2d
   1fc88:	movne	r1, r6
   1fc8c:	cmp	r6, #0
   1fc90:	movwlt	r1, #0
   1fc94:	sub	r4, r0, #1
   1fc98:	cmp	r1, r4
   1fc9c:	mov	r5, r4
   1fca0:	movhi	r5, r1
   1fca4:	ldr	ip, [sp, #80]	; 0x50
   1fca8:	ldr	r0, [sp, #88]	; 0x58
   1fcac:	sub	r0, r0, ip
   1fcb0:	cmp	r5, r0
   1fcb4:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1fcb8:	cmp	r7, #0
   1fcbc:	beq	1fcfc <putc_unlocked@plt+0xdb44>
   1fcc0:	cmp	r1, r4
   1fcc4:	bls	1fe30 <putc_unlocked@plt+0xdc78>
   1fcc8:	sub	r6, r1, r4
   1fccc:	cmp	sl, #48	; 0x30
   1fcd0:	cmpne	sl, #43	; 0x2b
   1fcd4:	bne	1fe1c <putc_unlocked@plt+0xdc64>
   1fcd8:	mov	r0, r7
   1fcdc:	mov	r1, #48	; 0x30
   1fce0:	b	1fe24 <putc_unlocked@plt+0xdc6c>
   1fce4:	ldr	ip, [sp, #80]	; 0x50
   1fce8:	mov	r8, #-2147483648	; 0x80000000
   1fcec:	movw	r3, #52428	; 0xcccc
   1fcf0:	movt	r3, #3276	; 0xccc
   1fcf4:	mov	lr, r7
   1fcf8:	b	1ffcc <putc_unlocked@plt+0xde14>
   1fcfc:	mov	lr, #0
   1fd00:	mov	r8, #-2147483648	; 0x80000000
   1fd04:	movw	r3, #52428	; 0xcccc
   1fd08:	movt	r3, #3276	; 0xccc
   1fd0c:	b	1ffc8 <putc_unlocked@plt+0xde10>
   1fd10:	ldr	r8, [sp, #92]	; 0x5c
   1fd14:	str	r8, [sp, #92]	; 0x5c
   1fd18:	cmp	r1, #0
   1fd1c:	rsbne	r0, r0, #0
   1fd20:	ldr	r8, [sp, #64]	; 0x40
   1fd24:	tst	r2, #1
   1fd28:	movne	r3, #58	; 0x3a
   1fd2c:	strbne	r3, [r8, #-1]!
   1fd30:	movw	r3, #52429	; 0xcccd
   1fd34:	movt	r3, #52428	; 0xcccc
   1fd38:	umull	r3, r7, r0, r3
   1fd3c:	lsr	r3, r7, #3
   1fd40:	add	r7, r3, r3, lsl #2
   1fd44:	sub	r7, r0, r7, lsl #1
   1fd48:	orr	r7, r7, #48	; 0x30
   1fd4c:	strb	r7, [r8, #-1]!
   1fd50:	asr	r2, r2, #1
   1fd54:	cmp	r0, #9
   1fd58:	mov	r0, r3
   1fd5c:	bhi	1fd24 <putc_unlocked@plt+0xdb6c>
   1fd60:	cmp	r2, #0
   1fd64:	mov	r0, r3
   1fd68:	bne	1fd24 <putc_unlocked@plt+0xdb6c>
   1fd6c:	cmp	r6, #0
   1fd70:	movge	r4, r6
   1fd74:	ldr	r2, [sp, #72]	; 0x48
   1fd78:	cmp	r2, #0
   1fd7c:	movwne	r2, #43	; 0x2b
   1fd80:	cmp	sl, #0
   1fd84:	movweq	sl, #48	; 0x30
   1fd88:	str	r9, [sp, #84]	; 0x54
   1fd8c:	cmp	r1, #0
   1fd90:	movwne	r2, #45	; 0x2d
   1fd94:	cmp	r2, #0
   1fd98:	mov	r0, r4
   1fd9c:	subne	r0, r0, #1
   1fda0:	ldr	r1, [sp, #64]	; 0x40
   1fda4:	sub	r9, r1, r8
   1fda8:	sub	r6, r0, r9
   1fdac:	cmp	r6, #1
   1fdb0:	movwlt	r6, #0
   1fdb4:	subs	r5, sl, #45	; 0x2d
   1fdb8:	moveq	r6, r5
   1fdbc:	cmp	r2, #0
   1fdc0:	beq	1fe0c <putc_unlocked@plt+0xdc54>
   1fdc4:	cmp	sl, #95	; 0x5f
   1fdc8:	bne	1fe14 <putc_unlocked@plt+0xdc5c>
   1fdcc:	cmp	lr, #0
   1fdd0:	beq	1fe90 <putc_unlocked@plt+0xdcd8>
   1fdd4:	mov	r0, lr
   1fdd8:	mov	r1, #32
   1fddc:	str	r2, [sp, #72]	; 0x48
   1fde0:	mov	r2, r6
   1fde4:	str	r4, [sp, #24]
   1fde8:	mov	r4, ip
   1fdec:	mov	r7, lr
   1fdf0:	bl	12008 <memset@plt>
   1fdf4:	ldr	r2, [sp, #72]	; 0x48
   1fdf8:	mov	lr, r7
   1fdfc:	mov	ip, r4
   1fe00:	ldr	r4, [sp, #24]
   1fe04:	add	lr, r7, r6
   1fe08:	b	1fe94 <putc_unlocked@plt+0xdcdc>
   1fe0c:	ldr	r7, [sp, #92]	; 0x5c
   1fe10:	b	1fec4 <putc_unlocked@plt+0xdd0c>
   1fe14:	ldr	r7, [sp, #92]	; 0x5c
   1fe18:	b	1fea0 <putc_unlocked@plt+0xdce8>
   1fe1c:	mov	r0, r7
   1fe20:	mov	r1, #32
   1fe24:	mov	r2, r6
   1fe28:	bl	12008 <memset@plt>
   1fe2c:	add	r7, r7, r6
   1fe30:	ldr	r1, [sp, #92]	; 0x5c
   1fe34:	mov	r0, r7
   1fe38:	tst	r8, #1
   1fe3c:	beq	1fe50 <putc_unlocked@plt+0xdc98>
   1fe40:	ldr	r1, [sp, #48]	; 0x30
   1fe44:	mov	r2, r4
   1fe48:	bl	20028 <putc_unlocked@plt+0xde70>
   1fe4c:	b	1fe74 <putc_unlocked@plt+0xdcbc>
   1fe50:	tst	r1, #1
   1fe54:	beq	1fe68 <putc_unlocked@plt+0xdcb0>
   1fe58:	ldr	r1, [sp, #48]	; 0x30
   1fe5c:	mov	r2, r4
   1fe60:	bl	20064 <putc_unlocked@plt+0xdeac>
   1fe64:	b	1fe74 <putc_unlocked@plt+0xdcbc>
   1fe68:	ldr	r1, [sp, #48]	; 0x30
   1fe6c:	mov	r2, r4
   1fe70:	bl	11d74 <memcpy@plt>
   1fe74:	add	r7, r7, r4
   1fe78:	ldr	ip, [sp, #80]	; 0x50
   1fe7c:	mov	r8, #-2147483648	; 0x80000000
   1fe80:	movw	r3, #52428	; 0xcccc
   1fe84:	movt	r3, #3276	; 0xccc
   1fe88:	mov	lr, r7
   1fe8c:	b	1ffc8 <putc_unlocked@plt+0xde10>
   1fe90:	mov	lr, #0
   1fe94:	ldr	r7, [sp, #92]	; 0x5c
   1fe98:	sub	r4, r4, r6
   1fe9c:	add	ip, r6, ip
   1fea0:	ldr	r0, [sp, #88]	; 0x58
   1fea4:	sub	r0, r0, ip
   1fea8:	cmp	r0, #2
   1feac:	bcc	20004 <putc_unlocked@plt+0xde4c>
   1feb0:	cmp	lr, #0
   1feb4:	strbne	r2, [lr], #1
   1feb8:	moveq	lr, #0
   1febc:	sub	r4, r4, #1
   1fec0:	add	ip, ip, #1
   1fec4:	cmp	sl, #45	; 0x2d
   1fec8:	bicne	r5, r4, r4, asr #31
   1fecc:	cmp	r5, r9
   1fed0:	mov	r4, r9
   1fed4:	movhi	r4, r5
   1fed8:	ldr	r0, [sp, #88]	; 0x58
   1fedc:	sub	r0, r0, ip
   1fee0:	cmp	r4, r0
   1fee4:	bcs	20004 <putc_unlocked@plt+0xde4c>
   1fee8:	cmp	lr, #0
   1feec:	beq	1ff18 <putc_unlocked@plt+0xdd60>
   1fef0:	cmp	r5, r9
   1fef4:	bls	1ff44 <putc_unlocked@plt+0xdd8c>
   1fef8:	str	ip, [sp, #80]	; 0x50
   1fefc:	sub	r6, r5, r9
   1ff00:	cmp	sl, #48	; 0x30
   1ff04:	cmpne	sl, #43	; 0x2b
   1ff08:	bne	1ff24 <putc_unlocked@plt+0xdd6c>
   1ff0c:	mov	r0, lr
   1ff10:	mov	r1, #48	; 0x30
   1ff14:	b	1ff2c <putc_unlocked@plt+0xdd74>
   1ff18:	mov	lr, #0
   1ff1c:	ldr	r7, [sp, #84]	; 0x54
   1ff20:	b	1ff7c <putc_unlocked@plt+0xddc4>
   1ff24:	mov	r0, lr
   1ff28:	mov	r1, #32
   1ff2c:	mov	r2, r6
   1ff30:	mov	r5, lr
   1ff34:	bl	12008 <memset@plt>
   1ff38:	add	r5, r5, r6
   1ff3c:	ldr	ip, [sp, #80]	; 0x50
   1ff40:	mov	lr, r5
   1ff44:	mov	r0, lr
   1ff48:	mov	r1, r8
   1ff4c:	mov	r2, r9
   1ff50:	mov	r5, ip
   1ff54:	mov	r6, lr
   1ff58:	tst	r7, #1
   1ff5c:	beq	1ff68 <putc_unlocked@plt+0xddb0>
   1ff60:	bl	20064 <putc_unlocked@plt+0xdeac>
   1ff64:	b	1ff6c <putc_unlocked@plt+0xddb4>
   1ff68:	bl	11d74 <memcpy@plt>
   1ff6c:	mov	lr, r6
   1ff70:	mov	ip, r5
   1ff74:	ldr	r7, [sp, #84]	; 0x54
   1ff78:	add	lr, r6, r9
   1ff7c:	add	ip, r4, ip
   1ff80:	mov	r8, #-2147483648	; 0x80000000
   1ff84:	movw	r3, #52428	; 0xcccc
   1ff88:	movt	r3, #3276	; 0xccc
   1ff8c:	b	1ffd0 <putc_unlocked@plt+0xde18>
   1ff90:	mov	r0, lr
   1ff94:	mov	r1, #32
   1ff98:	mov	r2, r4
   1ff9c:	mov	r6, ip
   1ffa0:	mov	r7, lr
   1ffa4:	bl	12008 <memset@plt>
   1ffa8:	mov	lr, r7
   1ffac:	mov	ip, r6
   1ffb0:	add	lr, r7, r4
   1ffb4:	mov	r8, #-2147483648	; 0x80000000
   1ffb8:	movw	r3, #52428	; 0xcccc
   1ffbc:	movt	r3, #3276	; 0xccc
   1ffc0:	ldrb	r0, [r9]
   1ffc4:	strb	r0, [lr], #1
   1ffc8:	add	ip, r5, ip
   1ffcc:	mov	r7, r9
   1ffd0:	ldrb	r0, [r7, #1]!
   1ffd4:	mvn	r6, #0
   1ffd8:	cmp	r0, #0
   1ffdc:	bne	1e948 <putc_unlocked@plt+0xc790>
   1ffe0:	ldr	r0, [sp, #88]	; 0x58
   1ffe4:	cmp	r0, #0
   1ffe8:	cmpne	lr, #0
   1ffec:	movne	r0, #0
   1fff0:	strbne	r0, [lr]
   1fff4:	ldr	r0, [sp, #60]	; 0x3c
   1fff8:	ldr	r1, [sp, #56]	; 0x38
   1fffc:	str	r1, [r0]
   20000:	b	20014 <putc_unlocked@plt+0xde5c>
   20004:	mov	r0, #34	; 0x22
   20008:	ldr	r1, [sp, #60]	; 0x3c
   2000c:	str	r0, [r1]
   20010:	mov	ip, #0
   20014:	mov	r0, ip
   20018:	sub	sp, fp, #28
   2001c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20020:	mov	r0, #75	; 0x4b
   20024:	b	20008 <putc_unlocked@plt+0xde50>
   20028:	push	{r4, r5, r6, sl, fp, lr}
   2002c:	add	fp, sp, #16
   20030:	cmp	r2, #0
   20034:	popeq	{r4, r5, r6, sl, fp, pc}
   20038:	mov	r4, r2
   2003c:	sub	r5, r1, #1
   20040:	sub	r6, r0, #1
   20044:	bl	11f54 <__ctype_tolower_loc@plt>
   20048:	ldrb	r1, [r5, r4]
   2004c:	ldr	r2, [r0]
   20050:	ldr	r1, [r2, r1, lsl #2]
   20054:	strb	r1, [r6, r4]
   20058:	subs	r4, r4, #1
   2005c:	bne	20048 <putc_unlocked@plt+0xde90>
   20060:	pop	{r4, r5, r6, sl, fp, pc}
   20064:	push	{r4, r5, r6, sl, fp, lr}
   20068:	add	fp, sp, #16
   2006c:	cmp	r2, #0
   20070:	popeq	{r4, r5, r6, sl, fp, pc}
   20074:	mov	r4, r2
   20078:	sub	r5, r1, #1
   2007c:	sub	r6, r0, #1
   20080:	bl	11f60 <__ctype_toupper_loc@plt>
   20084:	ldrb	r1, [r5, r4]
   20088:	ldr	r2, [r0]
   2008c:	ldr	r1, [r2, r1, lsl #2]
   20090:	strb	r1, [r6, r4]
   20094:	subs	r4, r4, #1
   20098:	bne	20084 <putc_unlocked@plt+0xdecc>
   2009c:	pop	{r4, r5, r6, sl, fp, pc}
   200a0:	movw	r2, #382	; 0x17e
   200a4:	add	r2, r0, r2
   200a8:	sub	r1, r2, r1
   200ac:	movw	r2, #9363	; 0x2493
   200b0:	movt	r2, #37449	; 0x9249
   200b4:	smmla	r2, r1, r2, r1
   200b8:	asr	r3, r2, #2
   200bc:	add	r2, r3, r2, lsr #31
   200c0:	rsb	r2, r2, r2, lsl #3
   200c4:	sub	r1, r2, r1
   200c8:	add	r0, r0, r1
   200cc:	add	r0, r0, #3
   200d0:	bx	lr

000200d4 <_obstack_begin@@Base>:
   200d4:	push	{fp, lr}
   200d8:	mov	fp, sp
   200dc:	str	r3, [r0, #28]
   200e0:	ldr	r3, [fp, #8]
   200e4:	str	r3, [r0, #32]
   200e8:	ldrb	r3, [r0, #40]	; 0x28
   200ec:	and	r3, r3, #254	; 0xfe
   200f0:	strb	r3, [r0, #40]	; 0x28
   200f4:	bl	20100 <_obstack_begin@@Base+0x2c>
   200f8:	mov	r0, #1
   200fc:	pop	{fp, pc}
   20100:	push	{r4, r5, r6, sl, fp, lr}
   20104:	add	fp, sp, #16
   20108:	mov	r5, r2
   2010c:	mov	r4, r0
   20110:	cmp	r1, #0
   20114:	movweq	r1, #4072	; 0xfe8
   20118:	str	r1, [r0]
   2011c:	cmp	r2, #0
   20120:	movweq	r5, #8
   20124:	sub	r6, r5, #1
   20128:	str	r6, [r0, #24]
   2012c:	bl	202d4 <_obstack_newchunk@@Base+0x118>
   20130:	str	r0, [r4, #4]
   20134:	cmp	r0, #0
   20138:	addne	r1, r6, r0
   2013c:	addne	r1, r1, #8
   20140:	rsbne	r2, r5, #0
   20144:	andne	r1, r1, r2
   20148:	strne	r1, [r4, #12]
   2014c:	strne	r1, [r4, #8]
   20150:	ldrne	r1, [r4]
   20154:	addne	r1, r0, r1
   20158:	strne	r1, [r0]
   2015c:	strne	r1, [r4, #16]
   20160:	movne	r1, #0
   20164:	strne	r1, [r0, #4]
   20168:	ldrbne	r0, [r4, #40]	; 0x28
   2016c:	andne	r0, r0, #249	; 0xf9
   20170:	strbne	r0, [r4, #40]	; 0x28
   20174:	popne	{r4, r5, r6, sl, fp, pc}
   20178:	movw	r0, #37576	; 0x92c8
   2017c:	movt	r0, #3
   20180:	ldr	r0, [r0]
   20184:	blx	r0

00020188 <_obstack_begin_1@@Base>:
   20188:	push	{fp, lr}
   2018c:	mov	fp, sp
   20190:	str	r3, [r0, #28]
   20194:	ldr	r3, [fp, #8]
   20198:	str	r3, [r0, #32]
   2019c:	ldr	r3, [fp, #12]
   201a0:	str	r3, [r0, #36]	; 0x24
   201a4:	ldrb	r3, [r0, #40]	; 0x28
   201a8:	orr	r3, r3, #1
   201ac:	strb	r3, [r0, #40]	; 0x28
   201b0:	bl	20100 <_obstack_begin@@Base+0x2c>
   201b4:	mov	r0, #1
   201b8:	pop	{fp, pc}

000201bc <_obstack_newchunk@@Base>:
   201bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201c0:	add	fp, sp, #28
   201c4:	sub	sp, sp, #4
   201c8:	mov	r4, r0
   201cc:	ldr	r2, [r0]
   201d0:	ldr	r0, [r0, #8]
   201d4:	ldr	r3, [r4, #12]
   201d8:	sub	sl, r3, r0
   201dc:	add	r1, sl, r1
   201e0:	ldr	r0, [r4, #24]
   201e4:	mov	r3, #0
   201e8:	adds	r7, r1, r0
   201ec:	adc	r0, r3, #0
   201f0:	mov	r3, #100	; 0x64
   201f4:	add	r3, r3, sl, lsr #3
   201f8:	adds	r6, r3, r7
   201fc:	movcs	r6, r7
   20200:	cmp	r6, r2
   20204:	movcc	r6, r2
   20208:	cmp	r1, sl
   2020c:	bcc	202c4 <_obstack_newchunk@@Base+0x108>
   20210:	cmp	r0, #0
   20214:	bne	202c4 <_obstack_newchunk@@Base+0x108>
   20218:	ldr	r8, [r4, #4]
   2021c:	mov	r0, r4
   20220:	mov	r1, r6
   20224:	bl	202d4 <_obstack_newchunk@@Base+0x118>
   20228:	cmp	r0, #0
   2022c:	beq	202c4 <_obstack_newchunk@@Base+0x108>
   20230:	mov	r7, r0
   20234:	str	r0, [r4, #4]
   20238:	str	r8, [r0, #4]
   2023c:	add	r0, r0, r6
   20240:	str	r0, [r4, #16]
   20244:	str	r0, [r7]
   20248:	ldr	r9, [r4, #8]
   2024c:	ldr	r5, [r4, #24]
   20250:	add	r0, r5, r7
   20254:	add	r0, r0, #8
   20258:	bic	r6, r0, r5
   2025c:	mov	r0, r6
   20260:	mov	r1, r9
   20264:	mov	r2, sl
   20268:	bl	11d74 <memcpy@plt>
   2026c:	ldrb	r0, [r4, #40]	; 0x28
   20270:	tst	r0, #2
   20274:	bne	202a4 <_obstack_newchunk@@Base+0xe8>
   20278:	mvn	r0, r5
   2027c:	add	r1, r5, r8
   20280:	add	r1, r1, #8
   20284:	and	r0, r1, r0
   20288:	cmp	r9, r0
   2028c:	bne	202a4 <_obstack_newchunk@@Base+0xe8>
   20290:	ldr	r0, [r8, #4]
   20294:	str	r0, [r7, #4]
   20298:	mov	r0, r4
   2029c:	mov	r1, r8
   202a0:	bl	202f8 <_obstack_newchunk@@Base+0x13c>
   202a4:	add	r0, r6, sl
   202a8:	str	r6, [r4, #8]
   202ac:	str	r0, [r4, #12]
   202b0:	ldrb	r0, [r4, #40]	; 0x28
   202b4:	and	r0, r0, #253	; 0xfd
   202b8:	strb	r0, [r4, #40]	; 0x28
   202bc:	sub	sp, fp, #28
   202c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202c4:	movw	r0, #37576	; 0x92c8
   202c8:	movt	r0, #3
   202cc:	ldr	r0, [r0]
   202d0:	blx	r0
   202d4:	ldrb	r2, [r0, #40]	; 0x28
   202d8:	tst	r2, #1
   202dc:	bne	202ec <_obstack_newchunk@@Base+0x130>
   202e0:	ldr	r2, [r0, #28]
   202e4:	mov	r0, r1
   202e8:	bx	r2
   202ec:	ldr	r2, [r0, #28]
   202f0:	ldr	r0, [r0, #36]	; 0x24
   202f4:	bx	r2
   202f8:	ldrb	r2, [r0, #40]	; 0x28
   202fc:	tst	r2, #1
   20300:	bne	20310 <_obstack_newchunk@@Base+0x154>
   20304:	ldr	r2, [r0, #32]
   20308:	mov	r0, r1
   2030c:	bx	r2
   20310:	ldr	r2, [r0, #32]
   20314:	ldr	r0, [r0, #36]	; 0x24
   20318:	bx	r2

0002031c <_obstack_allocated_p@@Base>:
   2031c:	ldr	r2, [r0, #4]
   20320:	mov	r0, #0
   20324:	b	2032c <_obstack_allocated_p@@Base+0x10>
   20328:	ldr	r2, [r2, #4]
   2032c:	cmp	r2, #0
   20330:	bxeq	lr
   20334:	cmp	r2, r1
   20338:	bcs	20328 <_obstack_allocated_p@@Base+0xc>
   2033c:	ldr	r3, [r2]
   20340:	cmp	r3, r1
   20344:	bcc	20328 <_obstack_allocated_p@@Base+0xc>
   20348:	mov	r0, #1
   2034c:	bx	lr

00020350 <_obstack_free@@Base>:
   20350:	push	{r4, r5, r6, sl, fp, lr}
   20354:	add	fp, sp, #16
   20358:	mov	r5, r1
   2035c:	ldr	r1, [r0, #4]
   20360:	cmp	r1, #0
   20364:	beq	203a4 <_obstack_free@@Base+0x54>
   20368:	mov	r4, r0
   2036c:	cmp	r1, r5
   20370:	bcs	20380 <_obstack_free@@Base+0x30>
   20374:	ldr	r0, [r1]
   20378:	cmp	r0, r5
   2037c:	bcs	203b0 <_obstack_free@@Base+0x60>
   20380:	ldr	r6, [r1, #4]
   20384:	mov	r0, r4
   20388:	bl	202f8 <_obstack_newchunk@@Base+0x13c>
   2038c:	ldrb	r0, [r4, #40]	; 0x28
   20390:	orr	r0, r0, #2
   20394:	strb	r0, [r4, #40]	; 0x28
   20398:	cmp	r6, #0
   2039c:	mov	r1, r6
   203a0:	bne	2036c <_obstack_free@@Base+0x1c>
   203a4:	cmp	r5, #0
   203a8:	popeq	{r4, r5, r6, sl, fp, pc}
   203ac:	bl	1214c <abort@plt>
   203b0:	str	r5, [r4, #8]
   203b4:	str	r5, [r4, #12]
   203b8:	ldr	r0, [r1]
   203bc:	str	r1, [r4, #4]
   203c0:	str	r0, [r4, #16]
   203c4:	pop	{r4, r5, r6, sl, fp, pc}

000203c8 <_obstack_memory_used@@Base>:
   203c8:	ldr	r1, [r0, #4]
   203cc:	mov	r0, #0
   203d0:	b	203e4 <_obstack_memory_used@@Base+0x1c>
   203d4:	sub	r0, r0, r1
   203d8:	ldr	r2, [r1]
   203dc:	ldr	r1, [r1, #4]
   203e0:	add	r0, r0, r2
   203e4:	cmp	r1, #0
   203e8:	bxeq	lr
   203ec:	b	203d4 <_obstack_memory_used@@Base+0xc>
   203f0:	push	{fp, lr}
   203f4:	mov	fp, sp
   203f8:	movw	r0, #37664	; 0x9320
   203fc:	movt	r0, #3
   20400:	ldr	r4, [r0]
   20404:	movw	r1, #34367	; 0x863f
   20408:	movt	r1, #2
   2040c:	mov	r0, #0
   20410:	mov	r2, #5
   20414:	bl	11dbc <dcgettext@plt>
   20418:	mov	r3, r0
   2041c:	movw	r2, #34632	; 0x8748
   20420:	movt	r2, #2
   20424:	mov	r0, r4
   20428:	mov	r1, #1
   2042c:	bl	12044 <__fprintf_chk@plt>
   20430:	movw	r0, #37572	; 0x92c4
   20434:	movt	r0, #3
   20438:	ldr	r0, [r0]
   2043c:	bl	11f9c <exit@plt>
   20440:	push	{r4, r5, fp, lr}
   20444:	add	fp, sp, #8
   20448:	cmp	r0, #0
   2044c:	beq	204e0 <_obstack_memory_used@@Base+0x118>
   20450:	mov	r4, r0
   20454:	mov	r1, #47	; 0x2f
   20458:	bl	12098 <strrchr@plt>
   2045c:	cmp	r0, #0
   20460:	mov	r5, r4
   20464:	addne	r5, r0, #1
   20468:	sub	r0, r5, r4
   2046c:	cmp	r0, #7
   20470:	blt	204c4 <_obstack_memory_used@@Base+0xfc>
   20474:	sub	r0, r5, #7
   20478:	movw	r1, #34440	; 0x8688
   2047c:	movt	r1, #2
   20480:	mov	r2, #7
   20484:	bl	12140 <strncmp@plt>
   20488:	cmp	r0, #0
   2048c:	bne	204c4 <_obstack_memory_used@@Base+0xfc>
   20490:	movw	r1, #34448	; 0x8690
   20494:	movt	r1, #2
   20498:	mov	r0, r5
   2049c:	mov	r2, #3
   204a0:	bl	12140 <strncmp@plt>
   204a4:	cmp	r0, #0
   204a8:	beq	204b4 <_obstack_memory_used@@Base+0xec>
   204ac:	mov	r4, r5
   204b0:	b	204c4 <_obstack_memory_used@@Base+0xfc>
   204b4:	add	r4, r5, #3
   204b8:	movw	r0, #37648	; 0x9310
   204bc:	movt	r0, #3
   204c0:	str	r4, [r0]
   204c4:	movw	r0, #37652	; 0x9314
   204c8:	movt	r0, #3
   204cc:	str	r4, [r0]
   204d0:	movw	r0, #41976	; 0xa3f8
   204d4:	movt	r0, #3
   204d8:	str	r4, [r0]
   204dc:	pop	{r4, r5, fp, pc}
   204e0:	movw	r0, #37664	; 0x9320
   204e4:	movt	r0, #3
   204e8:	ldr	r3, [r0]
   204ec:	movw	r0, #34384	; 0x8650
   204f0:	movt	r0, #2
   204f4:	mov	r1, #55	; 0x37
   204f8:	mov	r2, #1
   204fc:	bl	11e58 <fwrite@plt>
   20500:	bl	1214c <abort@plt>
   20504:	push	{r4, r5, r6, sl, fp, lr}
   20508:	add	fp, sp, #16
   2050c:	mov	r4, r0
   20510:	movw	r0, #41984	; 0xa400
   20514:	movt	r0, #3
   20518:	cmp	r4, #0
   2051c:	moveq	r4, r0
   20520:	bl	11fe4 <__errno_location@plt>
   20524:	mov	r5, r0
   20528:	ldr	r6, [r0]
   2052c:	mov	r0, r4
   20530:	mov	r1, #48	; 0x30
   20534:	bl	230b8 <_obstack_memory_used@@Base+0x2cf0>
   20538:	str	r6, [r5]
   2053c:	pop	{r4, r5, r6, sl, fp, pc}
   20540:	movw	r1, #41984	; 0xa400
   20544:	movt	r1, #3
   20548:	cmp	r0, #0
   2054c:	movne	r1, r0
   20550:	ldr	r0, [r1]
   20554:	bx	lr
   20558:	movw	r2, #41984	; 0xa400
   2055c:	movt	r2, #3
   20560:	cmp	r0, #0
   20564:	movne	r2, r0
   20568:	str	r1, [r2]
   2056c:	bx	lr
   20570:	movw	r3, #41984	; 0xa400
   20574:	movt	r3, #3
   20578:	cmp	r0, #0
   2057c:	movne	r3, r0
   20580:	ubfx	r0, r1, #5, #3
   20584:	add	r0, r3, r0, lsl #2
   20588:	ldr	r3, [r0, #8]
   2058c:	and	r1, r1, #31
   20590:	eor	r2, r2, r3, lsr r1
   20594:	and	r2, r2, #1
   20598:	eor	r2, r3, r2, lsl r1
   2059c:	str	r2, [r0, #8]
   205a0:	mov	r0, #1
   205a4:	and	r0, r0, r3, lsr r1
   205a8:	bx	lr
   205ac:	movw	r2, #41984	; 0xa400
   205b0:	movt	r2, #3
   205b4:	cmp	r0, #0
   205b8:	movne	r2, r0
   205bc:	ldr	r0, [r2, #4]
   205c0:	str	r1, [r2, #4]
   205c4:	bx	lr
   205c8:	movw	r3, #41984	; 0xa400
   205cc:	movt	r3, #3
   205d0:	cmp	r0, #0
   205d4:	movne	r3, r0
   205d8:	mov	r0, #10
   205dc:	str	r0, [r3]
   205e0:	cmp	r1, #0
   205e4:	cmpne	r2, #0
   205e8:	bne	205f8 <_obstack_memory_used@@Base+0x230>
   205ec:	push	{fp, lr}
   205f0:	mov	fp, sp
   205f4:	bl	1214c <abort@plt>
   205f8:	str	r1, [r3, #40]	; 0x28
   205fc:	str	r2, [r3, #44]	; 0x2c
   20600:	bx	lr
   20604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20608:	add	fp, sp, #28
   2060c:	sub	sp, sp, #20
   20610:	mov	r8, r3
   20614:	mov	r9, r2
   20618:	mov	sl, r1
   2061c:	mov	r7, r0
   20620:	ldr	r0, [fp, #8]
   20624:	movw	r5, #41984	; 0xa400
   20628:	movt	r5, #3
   2062c:	cmp	r0, #0
   20630:	movne	r5, r0
   20634:	bl	11fe4 <__errno_location@plt>
   20638:	mov	r4, r0
   2063c:	ldm	r5, {r0, r1}
   20640:	ldr	r2, [r5, #40]	; 0x28
   20644:	ldr	r3, [r5, #44]	; 0x2c
   20648:	ldr	r6, [r4]
   2064c:	add	r5, r5, #8
   20650:	stm	sp, {r0, r1, r5}
   20654:	str	r2, [sp, #12]
   20658:	str	r3, [sp, #16]
   2065c:	mov	r0, r7
   20660:	mov	r1, sl
   20664:	mov	r2, r9
   20668:	mov	r3, r8
   2066c:	bl	2067c <_obstack_memory_used@@Base+0x2b4>
   20670:	str	r6, [r4]
   20674:	sub	sp, fp, #28
   20678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2067c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20680:	add	fp, sp, #28
   20684:	sub	sp, sp, #156	; 0x9c
   20688:	mov	r9, r3
   2068c:	str	r2, [fp, #-84]	; 0xffffffac
   20690:	mov	r6, r1
   20694:	mov	r7, r0
   20698:	ldr	r0, [fp, #12]
   2069c:	and	r1, r0, #4
   206a0:	str	r1, [sp, #32]
   206a4:	and	r1, r0, #1
   206a8:	str	r1, [sp, #36]	; 0x24
   206ac:	ubfx	sl, r0, #1, #1
   206b0:	bl	11e7c <__ctype_get_mb_cur_max@plt>
   206b4:	str	r0, [sp, #40]	; 0x28
   206b8:	ldr	r0, [fp, #24]
   206bc:	str	r0, [sp, #76]	; 0x4c
   206c0:	ldr	r0, [fp, #20]
   206c4:	str	r0, [sp, #68]	; 0x44
   206c8:	ldr	r0, [fp, #8]
   206cc:	str	r0, [fp, #-60]	; 0xffffffc4
   206d0:	mov	r0, #0
   206d4:	str	r0, [sp, #72]	; 0x48
   206d8:	mov	r0, #0
   206dc:	str	r0, [sp, #92]	; 0x5c
   206e0:	mov	r0, #0
   206e4:	str	r0, [fp, #-72]	; 0xffffffb8
   206e8:	mov	r0, #0
   206ec:	mov	r1, #0
   206f0:	str	r1, [fp, #-56]	; 0xffffffc8
   206f4:	mov	r1, #0
   206f8:	str	r1, [sp, #56]	; 0x38
   206fc:	mov	r5, #1
   20700:	str	r7, [sp, #80]	; 0x50
   20704:	mov	r4, r6
   20708:	ldr	r6, [fp, #-60]	; 0xffffffc4
   2070c:	cmp	r6, #10
   20710:	bhi	21678 <_obstack_memory_used@@Base+0x12b0>
   20714:	add	r1, pc, #20
   20718:	mov	r8, #0
   2071c:	mov	r2, #1
   20720:	mov	r3, #0
   20724:	ldr	ip, [fp, #-84]	; 0xffffffac
   20728:	mov	lr, r9
   2072c:	ldr	pc, [r1, r6, lsl #2]
   20730:	andeq	r0, r2, r8, lsl #16
   20734:	andeq	r0, r2, r8, lsr r8
   20738:	strdeq	r0, [r2], -r8
   2073c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20740:	andeq	r0, r2, ip, lsr #16
   20744:	andeq	r0, r2, ip, lsl #17
   20748:	andeq	r0, r2, r8, lsl r8
   2074c:	andeq	r0, r2, r8, ror #17
   20750:	andeq	r0, r2, ip, asr r7
   20754:	andeq	r0, r2, ip, asr r7
   20758:	andeq	r0, r2, r4, lsl #15
   2075c:	movw	r0, #34522	; 0x86da
   20760:	movt	r0, #2
   20764:	mov	r1, r6
   20768:	bl	21c84 <_obstack_memory_used@@Base+0x18bc>
   2076c:	str	r0, [sp, #68]	; 0x44
   20770:	movw	r0, #35436	; 0x8a6c
   20774:	movt	r0, #2
   20778:	mov	r1, r6
   2077c:	bl	21c84 <_obstack_memory_used@@Base+0x18bc>
   20780:	str	r0, [sp, #76]	; 0x4c
   20784:	mov	r8, #0
   20788:	tst	sl, #1
   2078c:	bne	207c4 <_obstack_memory_used@@Base+0x3fc>
   20790:	ldr	r0, [sp, #68]	; 0x44
   20794:	ldrb	r0, [r0]
   20798:	cmp	r0, #0
   2079c:	beq	207c4 <_obstack_memory_used@@Base+0x3fc>
   207a0:	ldr	r1, [sp, #68]	; 0x44
   207a4:	add	r1, r1, #1
   207a8:	mov	r8, #0
   207ac:	cmp	r8, r4
   207b0:	strbcc	r0, [r7, r8]
   207b4:	ldrb	r0, [r1, r8]
   207b8:	add	r8, r8, #1
   207bc:	cmp	r0, #0
   207c0:	bne	207ac <_obstack_memory_used@@Base+0x3e4>
   207c4:	ldr	r6, [sp, #76]	; 0x4c
   207c8:	mov	r0, r6
   207cc:	bl	11fc0 <strlen@plt>
   207d0:	str	r0, [fp, #-72]	; 0xffffffb8
   207d4:	str	r6, [sp, #92]	; 0x5c
   207d8:	mov	r2, #1
   207dc:	mov	r3, sl
   207e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   207e4:	mov	lr, r9
   207e8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   207ec:	b	208e8 <_obstack_memory_used@@Base+0x520>
   207f0:	mov	r0, #1
   207f4:	b	20838 <_obstack_memory_used@@Base+0x470>
   207f8:	tst	sl, #1
   207fc:	bne	20838 <_obstack_memory_used@@Base+0x470>
   20800:	mov	r2, r0
   20804:	b	20860 <_obstack_memory_used@@Base+0x498>
   20808:	mov	r6, #0
   2080c:	mov	r8, #0
   20810:	mov	r2, r0
   20814:	b	208e4 <_obstack_memory_used@@Base+0x51c>
   20818:	mov	r0, #1
   2081c:	str	r0, [fp, #-72]	; 0xffffffb8
   20820:	mov	r8, #0
   20824:	mov	r6, #5
   20828:	b	208a4 <_obstack_memory_used@@Base+0x4dc>
   2082c:	mov	r2, #1
   20830:	tst	sl, #1
   20834:	beq	20860 <_obstack_memory_used@@Base+0x498>
   20838:	mov	r1, #1
   2083c:	str	r1, [fp, #-72]	; 0xffffffb8
   20840:	mov	r8, #0
   20844:	mov	r6, #2
   20848:	movw	r1, #35436	; 0x8a6c
   2084c:	movt	r1, #2
   20850:	str	r1, [sp, #92]	; 0x5c
   20854:	mov	r2, r0
   20858:	mov	r3, #1
   2085c:	b	208e8 <_obstack_memory_used@@Base+0x520>
   20860:	mov	r8, #1
   20864:	mov	r6, #2
   20868:	cmp	r4, #0
   2086c:	movne	r0, #39	; 0x27
   20870:	strbne	r0, [r7]
   20874:	movw	r0, #35436	; 0x8a6c
   20878:	movt	r0, #2
   2087c:	str	r0, [sp, #92]	; 0x5c
   20880:	mov	r0, #1
   20884:	str	r0, [fp, #-72]	; 0xffffffb8
   20888:	b	208e4 <_obstack_memory_used@@Base+0x51c>
   2088c:	mov	r6, #5
   20890:	tst	sl, #1
   20894:	beq	208bc <_obstack_memory_used@@Base+0x4f4>
   20898:	mov	r0, #1
   2089c:	str	r0, [fp, #-72]	; 0xffffffb8
   208a0:	mov	r8, #0
   208a4:	movw	r0, #34520	; 0x86d8
   208a8:	movt	r0, #2
   208ac:	str	r0, [sp, #92]	; 0x5c
   208b0:	mov	r2, #1
   208b4:	mov	r3, #1
   208b8:	b	208e8 <_obstack_memory_used@@Base+0x520>
   208bc:	cmp	r4, #0
   208c0:	movne	r0, #34	; 0x22
   208c4:	strbne	r0, [r7]
   208c8:	mov	r8, #1
   208cc:	movw	r0, #34520	; 0x86d8
   208d0:	movt	r0, #2
   208d4:	str	r0, [sp, #92]	; 0x5c
   208d8:	mov	r0, #1
   208dc:	str	r0, [fp, #-72]	; 0xffffffb8
   208e0:	mov	r2, #1
   208e4:	mov	r3, #0
   208e8:	ldr	r0, [fp, #16]
   208ec:	cmp	r0, #0
   208f0:	movwne	r0, #1
   208f4:	and	r0, r0, r3
   208f8:	str	r0, [fp, #-88]	; 0xffffffa8
   208fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20900:	cmp	r0, #0
   20904:	movwne	r0, #1
   20908:	and	r1, r0, r3
   2090c:	and	r1, r2, r1
   20910:	str	r1, [sp, #48]	; 0x30
   20914:	str	r6, [fp, #-60]	; 0xffffffc4
   20918:	subs	r6, r6, #2
   2091c:	clz	r1, r6
   20920:	lsr	r1, r1, #5
   20924:	and	r1, r1, r3
   20928:	str	r1, [sp, #60]	; 0x3c
   2092c:	str	r6, [fp, #-80]	; 0xffffffb0
   20930:	mov	r1, r6
   20934:	movwne	r1, #1
   20938:	str	r3, [fp, #-76]	; 0xffffffb4
   2093c:	eor	r3, r3, #1
   20940:	str	r3, [sp, #88]	; 0x58
   20944:	orr	r3, r1, r3
   20948:	str	r3, [sp, #64]	; 0x40
   2094c:	and	r1, r1, r2
   20950:	str	r1, [fp, #-68]	; 0xffffffbc
   20954:	and	r0, r0, r1
   20958:	str	r0, [fp, #-64]	; 0xffffffc0
   2095c:	str	r2, [sp, #84]	; 0x54
   20960:	eor	r0, r2, #1
   20964:	str	r0, [sp, #52]	; 0x34
   20968:	mov	r6, #0
   2096c:	cmn	lr, #1
   20970:	beq	20980 <_obstack_memory_used@@Base+0x5b8>
   20974:	cmp	r6, lr
   20978:	bne	2098c <_obstack_memory_used@@Base+0x5c4>
   2097c:	b	214f8 <_obstack_memory_used@@Base+0x1130>
   20980:	ldrb	r0, [ip, r6]
   20984:	cmp	r0, #0
   20988:	beq	214f8 <_obstack_memory_used@@Base+0x1130>
   2098c:	str	r5, [fp, #-48]	; 0xffffffd0
   20990:	mov	sl, #0
   20994:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20998:	cmp	r0, #0
   2099c:	beq	209d0 <_obstack_memory_used@@Base+0x608>
   209a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   209a4:	add	r5, r6, r0
   209a8:	cmp	r0, #2
   209ac:	bcc	209c8 <_obstack_memory_used@@Base+0x600>
   209b0:	cmn	lr, #1
   209b4:	bne	209c8 <_obstack_memory_used@@Base+0x600>
   209b8:	mov	r0, ip
   209bc:	bl	11fc0 <strlen@plt>
   209c0:	ldr	ip, [fp, #-84]	; 0xffffffac
   209c4:	mov	lr, r0
   209c8:	cmp	r5, lr
   209cc:	bls	209dc <_obstack_memory_used@@Base+0x614>
   209d0:	mov	r0, #0
   209d4:	str	r0, [fp, #-52]	; 0xffffffcc
   209d8:	b	20a28 <_obstack_memory_used@@Base+0x660>
   209dc:	mov	r5, r4
   209e0:	mov	r4, lr
   209e4:	add	r0, ip, r6
   209e8:	ldr	r1, [sp, #92]	; 0x5c
   209ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   209f0:	bl	11da4 <memcmp@plt>
   209f4:	cmp	r0, #0
   209f8:	mov	r1, r0
   209fc:	movwne	r1, #1
   20a00:	ldr	r2, [sp, #88]	; 0x58
   20a04:	orr	r1, r1, r2
   20a08:	tst	r1, #1
   20a0c:	beq	215bc <_obstack_memory_used@@Base+0x11f4>
   20a10:	clz	r0, r0
   20a14:	lsr	r0, r0, #5
   20a18:	str	r0, [fp, #-52]	; 0xffffffcc
   20a1c:	ldr	ip, [fp, #-84]	; 0xffffffac
   20a20:	mov	lr, r4
   20a24:	mov	r4, r5
   20a28:	ldrb	r5, [ip, r6]
   20a2c:	cmp	r5, #126	; 0x7e
   20a30:	bhi	20dec <_obstack_memory_used@@Base+0xa24>
   20a34:	mov	r9, #1
   20a38:	mov	r2, #110	; 0x6e
   20a3c:	mov	r0, #97	; 0x61
   20a40:	add	r3, pc, #4
   20a44:	mov	r1, #0
   20a48:	ldr	pc, [r3, r5, lsl #2]
   20a4c:	andeq	r0, r2, r4, ror #25
   20a50:	andeq	r0, r2, ip, ror #27
   20a54:	andeq	r0, r2, ip, ror #27
   20a58:	andeq	r0, r2, ip, ror #27
   20a5c:	andeq	r0, r2, ip, ror #27
   20a60:	andeq	r0, r2, ip, ror #27
   20a64:	andeq	r0, r2, ip, ror #27
   20a68:			; <UNDEFINED> instruction: 0x00020eb0
   20a6c:	andeq	r0, r2, r4, asr #25
   20a70:			; <UNDEFINED> instruction: 0x00020cbc
   20a74:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20a78:	andeq	r0, r2, r4, asr sp
   20a7c:			; <UNDEFINED> instruction: 0x00020cb4
   20a80:	andeq	r0, r2, ip, asr #25
   20a84:	andeq	r0, r2, ip, ror #27
   20a88:	andeq	r0, r2, ip, ror #27
   20a8c:	andeq	r0, r2, ip, ror #27
   20a90:	andeq	r0, r2, ip, ror #27
   20a94:	andeq	r0, r2, ip, ror #27
   20a98:	andeq	r0, r2, ip, ror #27
   20a9c:	andeq	r0, r2, ip, ror #27
   20aa0:	andeq	r0, r2, ip, ror #27
   20aa4:	andeq	r0, r2, ip, ror #27
   20aa8:	andeq	r0, r2, ip, ror #27
   20aac:	andeq	r0, r2, ip, ror #27
   20ab0:	andeq	r0, r2, ip, ror #27
   20ab4:	andeq	r0, r2, ip, ror #27
   20ab8:	andeq	r0, r2, ip, ror #27
   20abc:	andeq	r0, r2, ip, ror #27
   20ac0:	andeq	r0, r2, ip, ror #27
   20ac4:	andeq	r0, r2, ip, ror #27
   20ac8:	andeq	r0, r2, ip, ror #27
   20acc:	andeq	r0, r2, r0, ror #28
   20ad0:	andeq	r0, r2, r4, ror #28
   20ad4:	andeq	r0, r2, r4, ror #28
   20ad8:	andeq	r0, r2, ip, asr ip
   20adc:	andeq	r0, r2, r4, ror #28
   20ae0:	andeq	r0, r2, r8, asr #24
   20ae4:	andeq	r0, r2, r4, ror #28
   20ae8:	andeq	r0, r2, ip, asr sp
   20aec:	andeq	r0, r2, r4, ror #28
   20af0:	andeq	r0, r2, r4, ror #28
   20af4:	andeq	r0, r2, r4, ror #28
   20af8:	andeq	r0, r2, r8, asr #24
   20afc:	andeq	r0, r2, r8, asr #24
   20b00:	andeq	r0, r2, r8, asr #24
   20b04:	andeq	r0, r2, r8, asr #24
   20b08:	andeq	r0, r2, r8, asr #24
   20b0c:	andeq	r0, r2, r8, asr #24
   20b10:	andeq	r0, r2, r8, asr #24
   20b14:	andeq	r0, r2, r8, asr #24
   20b18:	andeq	r0, r2, r8, asr #24
   20b1c:	andeq	r0, r2, r8, asr #24
   20b20:	andeq	r0, r2, r8, asr #24
   20b24:	andeq	r0, r2, r8, asr #24
   20b28:	andeq	r0, r2, r8, asr #24
   20b2c:	andeq	r0, r2, r8, asr #24
   20b30:	andeq	r0, r2, r8, asr #24
   20b34:	andeq	r0, r2, r8, asr #24
   20b38:	andeq	r0, r2, r4, ror #28
   20b3c:	andeq	r0, r2, r4, ror #28
   20b40:	andeq	r0, r2, r4, ror #28
   20b44:	andeq	r0, r2, r4, ror #28
   20b48:	andeq	r0, r2, r4, lsr #26
   20b4c:	andeq	r0, r2, ip, ror #27
   20b50:	andeq	r0, r2, r8, asr #24
   20b54:	andeq	r0, r2, r8, asr #24
   20b58:	andeq	r0, r2, r8, asr #24
   20b5c:	andeq	r0, r2, r8, asr #24
   20b60:	andeq	r0, r2, r8, asr #24
   20b64:	andeq	r0, r2, r8, asr #24
   20b68:	andeq	r0, r2, r8, asr #24
   20b6c:	andeq	r0, r2, r8, asr #24
   20b70:	andeq	r0, r2, r8, asr #24
   20b74:	andeq	r0, r2, r8, asr #24
   20b78:	andeq	r0, r2, r8, asr #24
   20b7c:	andeq	r0, r2, r8, asr #24
   20b80:	andeq	r0, r2, r8, asr #24
   20b84:	andeq	r0, r2, r8, asr #24
   20b88:	andeq	r0, r2, r8, asr #24
   20b8c:	andeq	r0, r2, r8, asr #24
   20b90:	andeq	r0, r2, r8, asr #24
   20b94:	andeq	r0, r2, r8, asr #24
   20b98:	andeq	r0, r2, r8, asr #24
   20b9c:	andeq	r0, r2, r8, asr #24
   20ba0:	andeq	r0, r2, r8, asr #24
   20ba4:	andeq	r0, r2, r8, asr #24
   20ba8:	andeq	r0, r2, r8, asr #24
   20bac:	andeq	r0, r2, r8, asr #24
   20bb0:	andeq	r0, r2, r8, asr #24
   20bb4:	andeq	r0, r2, r8, asr #24
   20bb8:	andeq	r0, r2, r4, ror #28
   20bbc:	muleq	r2, r0, ip
   20bc0:	andeq	r0, r2, r8, asr #24
   20bc4:	andeq	r0, r2, r4, ror #28
   20bc8:	andeq	r0, r2, r8, asr #24
   20bcc:	andeq	r0, r2, r4, ror #28
   20bd0:	andeq	r0, r2, r8, asr #24
   20bd4:	andeq	r0, r2, r8, asr #24
   20bd8:	andeq	r0, r2, r8, asr #24
   20bdc:	andeq	r0, r2, r8, asr #24
   20be0:	andeq	r0, r2, r8, asr #24
   20be4:	andeq	r0, r2, r8, asr #24
   20be8:	andeq	r0, r2, r8, asr #24
   20bec:	andeq	r0, r2, r8, asr #24
   20bf0:	andeq	r0, r2, r8, asr #24
   20bf4:	andeq	r0, r2, r8, asr #24
   20bf8:	andeq	r0, r2, r8, asr #24
   20bfc:	andeq	r0, r2, r8, asr #24
   20c00:	andeq	r0, r2, r8, asr #24
   20c04:	andeq	r0, r2, r8, asr #24
   20c08:	andeq	r0, r2, r8, asr #24
   20c0c:	andeq	r0, r2, r8, asr #24
   20c10:	andeq	r0, r2, r8, asr #24
   20c14:	andeq	r0, r2, r8, asr #24
   20c18:	andeq	r0, r2, r8, asr #24
   20c1c:	andeq	r0, r2, r8, asr #24
   20c20:	andeq	r0, r2, r8, asr #24
   20c24:	andeq	r0, r2, r8, asr #24
   20c28:	andeq	r0, r2, r8, asr #24
   20c2c:	andeq	r0, r2, r8, asr #24
   20c30:	andeq	r0, r2, r8, asr #24
   20c34:	andeq	r0, r2, r8, asr #24
   20c38:	andeq	r0, r2, r0, ror ip
   20c3c:	andeq	r0, r2, r4, ror #28
   20c40:	andeq	r0, r2, r0, ror ip
   20c44:	andeq	r0, r2, ip, asr ip
   20c48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   20c4c:	cmp	r0, #0
   20c50:	beq	20ec4 <_obstack_memory_used@@Base+0xafc>
   20c54:	ldr	r0, [fp, #16]
   20c58:	b	20ec8 <_obstack_memory_used@@Base+0xb00>
   20c5c:	mov	r9, #0
   20c60:	cmp	r6, #0
   20c64:	beq	20e60 <_obstack_memory_used@@Base+0xa98>
   20c68:	mov	sl, #0
   20c6c:	b	20c48 <_obstack_memory_used@@Base+0x880>
   20c70:	mov	r9, #0
   20c74:	cmn	lr, #1
   20c78:	beq	20e44 <_obstack_memory_used@@Base+0xa7c>
   20c7c:	cmp	r6, #0
   20c80:	bne	20c68 <_obstack_memory_used@@Base+0x8a0>
   20c84:	cmp	lr, #1
   20c88:	beq	20e60 <_obstack_memory_used@@Base+0xa98>
   20c8c:	b	20c68 <_obstack_memory_used@@Base+0x8a0>
   20c90:	ldr	r0, [fp, #-60]	; 0xffffffc4
   20c94:	cmp	r0, #2
   20c98:	bne	20e8c <_obstack_memory_used@@Base+0xac4>
   20c9c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20ca0:	tst	r0, #1
   20ca4:	bne	215d4 <_obstack_memory_used@@Base+0x120c>
   20ca8:	mov	sl, #0
   20cac:	mov	r0, #92	; 0x5c
   20cb0:	b	20ea0 <_obstack_memory_used@@Base+0xad8>
   20cb4:	mov	r0, #102	; 0x66
   20cb8:	b	20eb0 <_obstack_memory_used@@Base+0xae8>
   20cbc:	mov	r2, #116	; 0x74
   20cc0:	b	20cd0 <_obstack_memory_used@@Base+0x908>
   20cc4:	mov	r0, #98	; 0x62
   20cc8:	b	20eb0 <_obstack_memory_used@@Base+0xae8>
   20ccc:	mov	r2, #114	; 0x72
   20cd0:	ldr	r0, [sp, #64]	; 0x40
   20cd4:	tst	r0, #1
   20cd8:	mov	r0, r2
   20cdc:	bne	20eb0 <_obstack_memory_used@@Base+0xae8>
   20ce0:	b	215d4 <_obstack_memory_used@@Base+0x120c>
   20ce4:	ldr	r0, [sp, #84]	; 0x54
   20ce8:	tst	r0, #1
   20cec:	beq	20fa0 <_obstack_memory_used@@Base+0xbd8>
   20cf0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20cf4:	tst	r0, #1
   20cf8:	bne	215d4 <_obstack_memory_used@@Base+0x120c>
   20cfc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   20d00:	cmp	r0, #2
   20d04:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20d08:	movwne	r0, #1
   20d0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20d10:	orr	r0, r0, r2
   20d14:	tst	r0, #1
   20d18:	beq	21394 <_obstack_memory_used@@Base+0xfcc>
   20d1c:	mov	r0, r8
   20d20:	b	213c8 <_obstack_memory_used@@Base+0x1000>
   20d24:	mov	sl, #0
   20d28:	mov	r5, #63	; 0x3f
   20d2c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   20d30:	cmp	r0, #5
   20d34:	beq	21154 <_obstack_memory_used@@Base+0xd8c>
   20d38:	cmp	r0, #2
   20d3c:	bne	211f4 <_obstack_memory_used@@Base+0xe2c>
   20d40:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20d44:	tst	r0, #1
   20d48:	mov	r9, #0
   20d4c:	beq	20c48 <_obstack_memory_used@@Base+0x880>
   20d50:	b	215d4 <_obstack_memory_used@@Base+0x120c>
   20d54:	mov	r0, #118	; 0x76
   20d58:	b	20eb0 <_obstack_memory_used@@Base+0xae8>
   20d5c:	mov	r5, #39	; 0x27
   20d60:	mov	r0, #1
   20d64:	str	r0, [sp, #56]	; 0x38
   20d68:	ldr	r0, [fp, #-60]	; 0xffffffc4
   20d6c:	cmp	r0, #2
   20d70:	bne	20fc0 <_obstack_memory_used@@Base+0xbf8>
   20d74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20d78:	tst	r0, #1
   20d7c:	bne	215d4 <_obstack_memory_used@@Base+0x120c>
   20d80:	ldr	r2, [sp, #72]	; 0x48
   20d84:	cmp	r2, #0
   20d88:	mov	r0, r2
   20d8c:	movwne	r0, #1
   20d90:	clz	r1, r4
   20d94:	lsr	r1, r1, #5
   20d98:	orrs	r0, r0, r1
   20d9c:	moveq	r2, r4
   20da0:	str	r2, [sp, #72]	; 0x48
   20da4:	moveq	r4, r0
   20da8:	cmp	r8, r4
   20dac:	movcc	r0, #39	; 0x27
   20db0:	strbcc	r0, [r7, r8]
   20db4:	add	r0, r8, #1
   20db8:	cmp	r0, r4
   20dbc:	movcc	r1, #92	; 0x5c
   20dc0:	strbcc	r1, [r7, r0]
   20dc4:	add	r0, r8, #2
   20dc8:	cmp	r0, r4
   20dcc:	movcc	r1, #39	; 0x27
   20dd0:	strbcc	r1, [r7, r0]
   20dd4:	add	r8, r8, #3
   20dd8:	mov	r0, #0
   20ddc:	str	r0, [fp, #-56]	; 0xffffffc8
   20de0:	mov	sl, #0
   20de4:	mov	r9, #1
   20de8:	b	20c48 <_obstack_memory_used@@Base+0x880>
   20dec:	str	r4, [sp, #24]
   20df0:	ldr	r0, [sp, #40]	; 0x28
   20df4:	cmp	r0, #1
   20df8:	bne	20fc8 <_obstack_memory_used@@Base+0xc00>
   20dfc:	str	lr, [sp, #28]
   20e00:	bl	11f84 <__ctype_b_loc@plt>
   20e04:	ldr	ip, [fp, #-84]	; 0xffffffac
   20e08:	ldr	r0, [r0]
   20e0c:	add	r0, r0, r5, lsl #1
   20e10:	ldrb	r0, [r0, #1]
   20e14:	ubfx	r9, r0, #6, #1
   20e18:	mov	r1, #1
   20e1c:	ldr	r4, [sp, #24]
   20e20:	ldr	r0, [sp, #52]	; 0x34
   20e24:	orr	r0, r9, r0
   20e28:	mov	r2, r1
   20e2c:	cmp	r1, #1
   20e30:	bhi	211fc <_obstack_memory_used@@Base+0xe34>
   20e34:	tst	r0, #1
   20e38:	beq	211fc <_obstack_memory_used@@Base+0xe34>
   20e3c:	ldr	lr, [sp, #28]
   20e40:	b	20c48 <_obstack_memory_used@@Base+0x880>
   20e44:	cmp	r6, #0
   20e48:	ldrbeq	r0, [ip, #1]
   20e4c:	cmpeq	r0, #0
   20e50:	beq	20e60 <_obstack_memory_used@@Base+0xa98>
   20e54:	mvn	lr, #0
   20e58:	mov	sl, #0
   20e5c:	b	20c48 <_obstack_memory_used@@Base+0x880>
   20e60:	mov	r1, #1
   20e64:	ldr	r0, [fp, #-60]	; 0xffffffc4
   20e68:	cmp	r0, #2
   20e6c:	bne	20e84 <_obstack_memory_used@@Base+0xabc>
   20e70:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20e74:	tst	r0, #1
   20e78:	mov	r9, r1
   20e7c:	beq	20c48 <_obstack_memory_used@@Base+0x880>
   20e80:	b	215d4 <_obstack_memory_used@@Base+0x120c>
   20e84:	mov	r9, r1
   20e88:	b	20c48 <_obstack_memory_used@@Base+0x880>
   20e8c:	mov	sl, #0
   20e90:	mov	r0, #92	; 0x5c
   20e94:	ldr	r1, [sp, #48]	; 0x30
   20e98:	cmp	r1, #0
   20e9c:	beq	20eb0 <_obstack_memory_used@@Base+0xae8>
   20ea0:	mov	r9, #0
   20ea4:	cmp	sl, #0
   20ea8:	beq	21460 <_obstack_memory_used@@Base+0x1098>
   20eac:	b	2149c <_obstack_memory_used@@Base+0x10d4>
   20eb0:	mov	r9, #0
   20eb4:	ldr	r1, [sp, #84]	; 0x54
   20eb8:	tst	r1, #1
   20ebc:	mov	sl, #0
   20ec0:	bne	20f00 <_obstack_memory_used@@Base+0xb38>
   20ec4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20ec8:	cmp	r0, #0
   20ecc:	mov	r0, r5
   20ed0:	beq	20ef4 <_obstack_memory_used@@Base+0xb2c>
   20ed4:	ubfx	r0, r5, #5, #3
   20ed8:	ldr	r1, [fp, #16]
   20edc:	ldr	r0, [r1, r0, lsl #2]
   20ee0:	and	r1, r5, #31
   20ee4:	mov	r2, #1
   20ee8:	tst	r0, r2, lsl r1
   20eec:	mov	r0, r5
   20ef0:	bne	20f00 <_obstack_memory_used@@Base+0xb38>
   20ef4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20ef8:	cmp	r1, #0
   20efc:	beq	21458 <_obstack_memory_used@@Base+0x1090>
   20f00:	ldr	r1, [fp, #-76]	; 0xffffffb4
   20f04:	tst	r1, #1
   20f08:	bne	215d4 <_obstack_memory_used@@Base+0x120c>
   20f0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   20f10:	cmp	r1, #2
   20f14:	ldr	r1, [fp, #-80]	; 0xffffffb0
   20f18:	movwne	r1, #1
   20f1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20f20:	orr	r1, r1, r2
   20f24:	tst	r1, #1
   20f28:	beq	20f34 <_obstack_memory_used@@Base+0xb6c>
   20f2c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   20f30:	b	20f70 <_obstack_memory_used@@Base+0xba8>
   20f34:	cmp	r8, r4
   20f38:	movcc	r1, #39	; 0x27
   20f3c:	strbcc	r1, [r7, r8]
   20f40:	add	r1, r8, #1
   20f44:	cmp	r1, r4
   20f48:	ldr	r5, [fp, #-48]	; 0xffffffd0
   20f4c:	movcc	r2, #36	; 0x24
   20f50:	strbcc	r2, [r7, r1]
   20f54:	add	r1, r8, #2
   20f58:	cmp	r1, r4
   20f5c:	movcc	r2, #39	; 0x27
   20f60:	strbcc	r2, [r7, r1]
   20f64:	add	r8, r8, #3
   20f68:	mov	r1, #1
   20f6c:	str	r1, [fp, #-56]	; 0xffffffc8
   20f70:	cmp	r8, r4
   20f74:	movcc	r1, #92	; 0x5c
   20f78:	strbcc	r1, [r7, r8]
   20f7c:	add	r8, r8, #1
   20f80:	cmp	r8, r4
   20f84:	strbcc	r0, [r7, r8]
   20f88:	and	r5, r5, r9
   20f8c:	add	r8, r8, #1
   20f90:	add	r6, r6, #1
   20f94:	cmn	lr, #1
   20f98:	bne	20974 <_obstack_memory_used@@Base+0x5ac>
   20f9c:	b	20980 <_obstack_memory_used@@Base+0x5b8>
   20fa0:	mov	r9, #0
   20fa4:	ldr	r0, [sp, #36]	; 0x24
   20fa8:	cmp	r0, #0
   20fac:	mov	sl, #0
   20fb0:	mov	r5, #0
   20fb4:	beq	20ec4 <_obstack_memory_used@@Base+0xafc>
   20fb8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   20fbc:	b	20f90 <_obstack_memory_used@@Base+0xbc8>
   20fc0:	mov	r9, #1
   20fc4:	b	20c48 <_obstack_memory_used@@Base+0x880>
   20fc8:	mov	r0, #0
   20fcc:	str	r0, [fp, #-36]	; 0xffffffdc
   20fd0:	str	r0, [fp, #-40]	; 0xffffffd8
   20fd4:	cmn	lr, #1
   20fd8:	bne	20fec <_obstack_memory_used@@Base+0xc24>
   20fdc:	mov	r0, ip
   20fe0:	bl	11fc0 <strlen@plt>
   20fe4:	ldr	ip, [fp, #-84]	; 0xffffffac
   20fe8:	mov	lr, r0
   20fec:	add	r0, ip, r6
   20ff0:	str	r0, [sp, #20]
   20ff4:	mov	r9, #1
   20ff8:	mov	r7, #0
   20ffc:	sub	r4, fp, #40	; 0x28
   21000:	str	lr, [sp, #28]
   21004:	str	r7, [sp, #44]	; 0x2c
   21008:	add	r7, r7, r6
   2100c:	add	r1, ip, r7
   21010:	sub	r2, lr, r7
   21014:	sub	r0, fp, #44	; 0x2c
   21018:	mov	r3, r4
   2101c:	bl	1dcc8 <putc_unlocked@plt+0xbb10>
   21020:	cmp	r0, #0
   21024:	beq	214e4 <_obstack_memory_used@@Base+0x111c>
   21028:	cmn	r0, #1
   2102c:	beq	214a4 <_obstack_memory_used@@Base+0x10dc>
   21030:	cmn	r0, #2
   21034:	ldr	lr, [sp, #28]
   21038:	beq	214ac <_obstack_memory_used@@Base+0x10e4>
   2103c:	cmp	r0, #2
   21040:	mov	r1, #0
   21044:	movwcc	r1, #1
   21048:	ldr	r2, [sp, #60]	; 0x3c
   2104c:	eor	r2, r2, #1
   21050:	orrs	r1, r2, r1
   21054:	ldr	r4, [sp, #24]
   21058:	bne	21118 <_obstack_memory_used@@Base+0xd50>
   2105c:	ldr	r1, [sp, #44]	; 0x2c
   21060:	ldr	r2, [sp, #20]
   21064:	add	r1, r2, r1
   21068:	mov	r2, #1
   2106c:	ldrb	r3, [r1, r2]
   21070:	sub	r3, r3, #91	; 0x5b
   21074:	cmp	r3, #33	; 0x21
   21078:	bhi	2110c <_obstack_memory_used@@Base+0xd44>
   2107c:	add	r7, pc, #0
   21080:	ldr	pc, [r7, r3, lsl #2]
   21084:	andeq	r1, r2, ip, asr #11
   21088:	andeq	r1, r2, ip, asr #11
   2108c:	andeq	r1, r2, ip, lsl #2
   21090:	andeq	r1, r2, ip, asr #11
   21094:	andeq	r1, r2, ip, lsl #2
   21098:	andeq	r1, r2, ip, asr #11
   2109c:	andeq	r1, r2, ip, lsl #2
   210a0:	andeq	r1, r2, ip, lsl #2
   210a4:	andeq	r1, r2, ip, lsl #2
   210a8:	andeq	r1, r2, ip, lsl #2
   210ac:	andeq	r1, r2, ip, lsl #2
   210b0:	andeq	r1, r2, ip, lsl #2
   210b4:	andeq	r1, r2, ip, lsl #2
   210b8:	andeq	r1, r2, ip, lsl #2
   210bc:	andeq	r1, r2, ip, lsl #2
   210c0:	andeq	r1, r2, ip, lsl #2
   210c4:	andeq	r1, r2, ip, lsl #2
   210c8:	andeq	r1, r2, ip, lsl #2
   210cc:	andeq	r1, r2, ip, lsl #2
   210d0:	andeq	r1, r2, ip, lsl #2
   210d4:	andeq	r1, r2, ip, lsl #2
   210d8:	andeq	r1, r2, ip, lsl #2
   210dc:	andeq	r1, r2, ip, lsl #2
   210e0:	andeq	r1, r2, ip, lsl #2
   210e4:	andeq	r1, r2, ip, lsl #2
   210e8:	andeq	r1, r2, ip, lsl #2
   210ec:	andeq	r1, r2, ip, lsl #2
   210f0:	andeq	r1, r2, ip, lsl #2
   210f4:	andeq	r1, r2, ip, lsl #2
   210f8:	andeq	r1, r2, ip, lsl #2
   210fc:	andeq	r1, r2, ip, lsl #2
   21100:	andeq	r1, r2, ip, lsl #2
   21104:	andeq	r1, r2, ip, lsl #2
   21108:	andeq	r1, r2, ip, asr #11
   2110c:	add	r2, r2, #1
   21110:	cmp	r2, r0
   21114:	bcc	2106c <_obstack_memory_used@@Base+0xca4>
   21118:	ldr	r7, [sp, #44]	; 0x2c
   2111c:	add	r7, r0, r7
   21120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21124:	bl	11e28 <iswprint@plt>
   21128:	cmp	r0, #0
   2112c:	movwne	r0, #1
   21130:	and	r9, r9, r0
   21134:	sub	r4, fp, #40	; 0x28
   21138:	mov	r0, r4
   2113c:	bl	11d80 <mbsinit@plt>
   21140:	ldr	lr, [sp, #28]
   21144:	cmp	r0, #0
   21148:	ldr	ip, [fp, #-84]	; 0xffffffac
   2114c:	beq	21004 <_obstack_memory_used@@Base+0xc3c>
   21150:	b	214ec <_obstack_memory_used@@Base+0x1124>
   21154:	ldr	r0, [sp, #32]
   21158:	cmp	r0, #0
   2115c:	beq	211f4 <_obstack_memory_used@@Base+0xe2c>
   21160:	add	r0, r6, #2
   21164:	cmp	r0, lr
   21168:	bcs	211f4 <_obstack_memory_used@@Base+0xe2c>
   2116c:	add	r1, ip, r6
   21170:	ldrb	r1, [r1, #1]
   21174:	cmp	r1, #63	; 0x3f
   21178:	bne	211f4 <_obstack_memory_used@@Base+0xe2c>
   2117c:	ldrb	r9, [ip, r0]
   21180:	sub	r2, r9, #33	; 0x21
   21184:	cmp	r2, #29
   21188:	bhi	211f4 <_obstack_memory_used@@Base+0xe2c>
   2118c:	mov	r3, #1
   21190:	movw	r1, #20929	; 0x51c1
   21194:	movt	r1, #14336	; 0x3800
   21198:	tst	r1, r3, lsl r2
   2119c:	beq	211f4 <_obstack_memory_used@@Base+0xe2c>
   211a0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   211a4:	tst	r1, #1
   211a8:	bne	215d4 <_obstack_memory_used@@Base+0x120c>
   211ac:	cmp	r8, r4
   211b0:	movcc	r1, #63	; 0x3f
   211b4:	strbcc	r1, [r7, r8]
   211b8:	add	r2, r8, #1
   211bc:	cmp	r2, r4
   211c0:	movcc	r1, #34	; 0x22
   211c4:	strbcc	r1, [r7, r2]
   211c8:	add	r2, r8, #2
   211cc:	cmp	r2, r4
   211d0:	movcc	r1, #34	; 0x22
   211d4:	strbcc	r1, [r7, r2]
   211d8:	add	r2, r8, #3
   211dc:	cmp	r2, r4
   211e0:	movcc	r1, #63	; 0x3f
   211e4:	strbcc	r1, [r7, r2]
   211e8:	add	r8, r8, #4
   211ec:	mov	r6, r0
   211f0:	mov	r5, r9
   211f4:	mov	r9, #0
   211f8:	b	20c48 <_obstack_memory_used@@Base+0x880>
   211fc:	add	r1, r2, r6
   21200:	str	r1, [sp, #44]	; 0x2c
   21204:	add	r1, r6, #1
   21208:	mov	r3, #0
   2120c:	ldr	lr, [sp, #28]
   21210:	ldr	r6, [fp, #-60]	; 0xffffffc4
   21214:	tst	r0, #1
   21218:	bne	2130c <_obstack_memory_used@@Base+0xf44>
   2121c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   21220:	tst	r2, #1
   21224:	bne	215d4 <_obstack_memory_used@@Base+0x120c>
   21228:	cmp	r6, #2
   2122c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   21230:	movwne	r3, #1
   21234:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21238:	orr	r3, r3, r2
   2123c:	tst	r3, #1
   21240:	bne	2127c <_obstack_memory_used@@Base+0xeb4>
   21244:	cmp	r8, r4
   21248:	movcc	r2, #39	; 0x27
   2124c:	strbcc	r2, [r7, r8]
   21250:	add	r3, r8, #1
   21254:	cmp	r3, r4
   21258:	movcc	r2, #36	; 0x24
   2125c:	strbcc	r2, [r7, r3]
   21260:	add	r3, r8, #2
   21264:	cmp	r3, r4
   21268:	movcc	r2, #39	; 0x27
   2126c:	strbcc	r2, [r7, r3]
   21270:	add	r8, r8, #3
   21274:	mov	r2, #1
   21278:	str	r2, [fp, #-56]	; 0xffffffc8
   2127c:	cmp	r8, r4
   21280:	movcc	r2, #92	; 0x5c
   21284:	strbcc	r2, [r7, r8]
   21288:	add	r3, r8, #1
   2128c:	cmp	r3, r4
   21290:	bcs	212b0 <_obstack_memory_used@@Base+0xee8>
   21294:	and	r7, r5, #192	; 0xc0
   21298:	mov	r2, #48	; 0x30
   2129c:	orr	r7, r2, r7, lsr #6
   212a0:	ldr	r6, [sp, #80]	; 0x50
   212a4:	strb	r7, [r6, r3]
   212a8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   212ac:	ldr	r7, [sp, #80]	; 0x50
   212b0:	add	r3, r8, #2
   212b4:	cmp	r3, r4
   212b8:	bcs	212d8 <_obstack_memory_used@@Base+0xf10>
   212bc:	lsr	r7, r5, #3
   212c0:	mov	r2, #6
   212c4:	bfi	r7, r2, #3, #29
   212c8:	ldr	r6, [sp, #80]	; 0x50
   212cc:	strb	r7, [r6, r3]
   212d0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   212d4:	ldr	r7, [sp, #80]	; 0x50
   212d8:	mov	r2, #6
   212dc:	bfi	r5, r2, #3, #29
   212e0:	add	r8, r8, #3
   212e4:	mov	r3, #1
   212e8:	b	21330 <_obstack_memory_used@@Base+0xf68>
   212ec:	ldr	r7, [sp, #80]	; 0x50
   212f0:	cmp	r8, r4
   212f4:	strbcc	r5, [r7, r8]
   212f8:	ldrb	r5, [ip, r1]
   212fc:	add	r1, r1, #1
   21300:	add	r8, r8, #1
   21304:	tst	r0, #1
   21308:	beq	2121c <_obstack_memory_used@@Base+0xe54>
   2130c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   21310:	tst	r2, #1
   21314:	beq	21328 <_obstack_memory_used@@Base+0xf60>
   21318:	cmp	r8, r4
   2131c:	movcc	r2, #92	; 0x5c
   21320:	strbcc	r2, [r7, r8]
   21324:	add	r8, r8, #1
   21328:	mov	r2, #0
   2132c:	str	r2, [fp, #-52]	; 0xffffffcc
   21330:	and	sl, r3, #1
   21334:	ldr	r2, [sp, #44]	; 0x2c
   21338:	cmp	r2, r1
   2133c:	bls	21448 <_obstack_memory_used@@Base+0x1080>
   21340:	cmp	sl, #0
   21344:	movwne	sl, #1
   21348:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2134c:	mvn	r7, r2
   21350:	orr	r7, r7, sl
   21354:	tst	r7, #1
   21358:	bne	212ec <_obstack_memory_used@@Base+0xf24>
   2135c:	cmp	r8, r4
   21360:	ldrcc	r7, [sp, #80]	; 0x50
   21364:	movcc	r2, #39	; 0x27
   21368:	strbcc	r2, [r7, r8]
   2136c:	add	r7, r8, #1
   21370:	cmp	r7, r4
   21374:	ldrcc	r6, [sp, #80]	; 0x50
   21378:	movcc	r2, #39	; 0x27
   2137c:	strbcc	r2, [r6, r7]
   21380:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   21384:	add	r8, r8, #2
   21388:	mov	r2, #0
   2138c:	str	r2, [fp, #-56]	; 0xffffffc8
   21390:	b	212ec <_obstack_memory_used@@Base+0xf24>
   21394:	cmp	r8, r4
   21398:	movcc	r0, #39	; 0x27
   2139c:	strbcc	r0, [r7, r8]
   213a0:	add	r0, r8, #1
   213a4:	cmp	r0, r4
   213a8:	movcc	r1, #36	; 0x24
   213ac:	strbcc	r1, [r7, r0]
   213b0:	add	r0, r8, #2
   213b4:	cmp	r0, r4
   213b8:	movcc	r1, #39	; 0x27
   213bc:	strbcc	r1, [r7, r0]
   213c0:	add	r0, r8, #3
   213c4:	mov	r2, #1
   213c8:	cmp	r0, r4
   213cc:	movcc	r1, #92	; 0x5c
   213d0:	strbcc	r1, [r7, r0]
   213d4:	str	r2, [fp, #-56]	; 0xffffffc8
   213d8:	add	r8, r0, #1
   213dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   213e0:	cmp	r1, #2
   213e4:	beq	21438 <_obstack_memory_used@@Base+0x1070>
   213e8:	add	r1, r6, #1
   213ec:	mov	r9, #0
   213f0:	mov	sl, #1
   213f4:	mov	r5, #48	; 0x30
   213f8:	cmp	r1, lr
   213fc:	bcs	20c48 <_obstack_memory_used@@Base+0x880>
   21400:	ldrb	r1, [ip, r1]
   21404:	sub	r1, r1, #48	; 0x30
   21408:	uxtb	r1, r1
   2140c:	cmp	r1, #9
   21410:	bhi	20c48 <_obstack_memory_used@@Base+0x880>
   21414:	cmp	r8, r4
   21418:	movcc	r1, #48	; 0x30
   2141c:	strbcc	r1, [r7, r8]
   21420:	add	r1, r0, #2
   21424:	cmp	r1, r4
   21428:	movcc	r2, #48	; 0x30
   2142c:	strbcc	r2, [r7, r1]
   21430:	add	r8, r0, #3
   21434:	b	20c48 <_obstack_memory_used@@Base+0x880>
   21438:	mov	r0, #48	; 0x30
   2143c:	mov	sl, #1
   21440:	mov	r9, #0
   21444:	b	20ef4 <_obstack_memory_used@@Base+0xb2c>
   21448:	sub	r6, r1, #1
   2144c:	cmp	sl, #0
   21450:	movwne	sl, #1
   21454:	mov	r0, r5
   21458:	cmp	sl, #0
   2145c:	bne	2149c <_obstack_memory_used@@Base+0x10d4>
   21460:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21464:	tst	r1, #1
   21468:	beq	2149c <_obstack_memory_used@@Base+0x10d4>
   2146c:	cmp	r8, r4
   21470:	ldr	r5, [fp, #-48]	; 0xffffffd0
   21474:	movcc	r1, #39	; 0x27
   21478:	strbcc	r1, [r7, r8]
   2147c:	add	r1, r8, #1
   21480:	cmp	r1, r4
   21484:	movcc	r2, #39	; 0x27
   21488:	strbcc	r2, [r7, r1]
   2148c:	add	r8, r8, #2
   21490:	mov	r1, #0
   21494:	str	r1, [fp, #-56]	; 0xffffffc8
   21498:	b	20f80 <_obstack_memory_used@@Base+0xbb8>
   2149c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   214a0:	b	20f80 <_obstack_memory_used@@Base+0xbb8>
   214a4:	mov	r9, #0
   214a8:	b	214e4 <_obstack_memory_used@@Base+0x111c>
   214ac:	mov	r9, #0
   214b0:	cmp	r7, lr
   214b4:	bcs	214e4 <_obstack_memory_used@@Base+0x111c>
   214b8:	ldr	ip, [fp, #-84]	; 0xffffffac
   214bc:	ldr	r7, [sp, #44]	; 0x2c
   214c0:	ldr	r0, [sp, #20]
   214c4:	ldrb	r0, [r0, r7]
   214c8:	cmp	r0, #0
   214cc:	beq	214ec <_obstack_memory_used@@Base+0x1124>
   214d0:	add	r7, r7, #1
   214d4:	add	r0, r6, r7
   214d8:	cmp	r0, lr
   214dc:	bcc	214c0 <_obstack_memory_used@@Base+0x10f8>
   214e0:	b	214ec <_obstack_memory_used@@Base+0x1124>
   214e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   214e8:	ldr	r7, [sp, #44]	; 0x2c
   214ec:	mov	r1, r7
   214f0:	ldr	r7, [sp, #80]	; 0x50
   214f4:	b	20e1c <_obstack_memory_used@@Base+0xa54>
   214f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   214fc:	eor	r0, r1, #2
   21500:	orr	r0, r0, r8
   21504:	clz	r0, r0
   21508:	lsr	r0, r0, #5
   2150c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   21510:	tst	r2, r0
   21514:	bne	215d4 <_obstack_memory_used@@Base+0x120c>
   21518:	cmp	r1, #2
   2151c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   21520:	movwne	r0, #1
   21524:	orr	r0, r2, r0
   21528:	tst	r0, #1
   2152c:	ldreq	r0, [sp, #56]	; 0x38
   21530:	eoreq	r0, r0, #1
   21534:	tsteq	r0, #1
   21538:	bne	2156c <_obstack_memory_used@@Base+0x11a4>
   2153c:	mov	r9, lr
   21540:	tst	r5, #1
   21544:	bne	2163c <_obstack_memory_used@@Base+0x1274>
   21548:	ldr	r0, [sp, #72]	; 0x48
   2154c:	cmp	r0, #0
   21550:	beq	2156c <_obstack_memory_used@@Base+0x11a4>
   21554:	mov	r5, #0
   21558:	cmp	r4, #0
   2155c:	ldr	r0, [sp, #84]	; 0x54
   21560:	mov	sl, r2
   21564:	ldr	r6, [sp, #72]	; 0x48
   21568:	beq	20704 <_obstack_memory_used@@Base+0x33c>
   2156c:	ldr	r1, [sp, #92]	; 0x5c
   21570:	clz	r0, r1
   21574:	lsr	r0, r0, #5
   21578:	orr	r0, r0, r2
   2157c:	tst	r0, #1
   21580:	bne	215ac <_obstack_memory_used@@Base+0x11e4>
   21584:	ldrb	r0, [r1]
   21588:	cmp	r0, #0
   2158c:	beq	215ac <_obstack_memory_used@@Base+0x11e4>
   21590:	add	r1, r1, #1
   21594:	cmp	r8, r4
   21598:	strbcc	r0, [r7, r8]
   2159c:	add	r8, r8, #1
   215a0:	ldrb	r0, [r1], #1
   215a4:	cmp	r0, #0
   215a8:	bne	21594 <_obstack_memory_used@@Base+0x11cc>
   215ac:	cmp	r8, r4
   215b0:	movcc	r0, #0
   215b4:	strbcc	r0, [r7, r8]
   215b8:	b	21630 <_obstack_memory_used@@Base+0x1268>
   215bc:	ldr	ip, [fp, #-84]	; 0xffffffac
   215c0:	mov	lr, r4
   215c4:	mov	r4, r5
   215c8:	b	215d4 <_obstack_memory_used@@Base+0x120c>
   215cc:	ldr	r7, [sp, #80]	; 0x50
   215d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   215d4:	mov	r0, #0
   215d8:	ldr	r1, [fp, #12]
   215dc:	bic	r1, r1, #2
   215e0:	ldr	r2, [sp, #84]	; 0x54
   215e4:	tst	r2, #1
   215e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   215ec:	mov	r2, r3
   215f0:	movwne	r2, #4
   215f4:	cmp	r3, #2
   215f8:	movne	r2, r3
   215fc:	str	r2, [sp]
   21600:	str	r1, [sp, #4]
   21604:	str	r0, [sp, #8]
   21608:	ldr	r0, [sp, #68]	; 0x44
   2160c:	str	r0, [sp, #12]
   21610:	ldr	r0, [sp, #76]	; 0x4c
   21614:	str	r0, [sp, #16]
   21618:	mov	r0, r7
   2161c:	mov	r1, r4
   21620:	mov	r2, ip
   21624:	mov	r3, lr
   21628:	bl	2067c <_obstack_memory_used@@Base+0x2b4>
   2162c:	mov	r8, r0
   21630:	mov	r0, r8
   21634:	sub	sp, fp, #28
   21638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2163c:	mov	r0, #5
   21640:	str	r0, [sp]
   21644:	ldr	r0, [fp, #12]
   21648:	str	r0, [sp, #4]
   2164c:	ldr	r0, [fp, #16]
   21650:	str	r0, [sp, #8]
   21654:	ldr	r0, [sp, #68]	; 0x44
   21658:	str	r0, [sp, #12]
   2165c:	ldr	r0, [sp, #76]	; 0x4c
   21660:	str	r0, [sp, #16]
   21664:	mov	r0, r7
   21668:	ldr	r1, [sp, #72]	; 0x48
   2166c:	ldr	r2, [fp, #-84]	; 0xffffffac
   21670:	mov	r3, r9
   21674:	b	21628 <_obstack_memory_used@@Base+0x1260>
   21678:	bl	1214c <abort@plt>
   2167c:	mov	r3, r2
   21680:	mov	r2, #0
   21684:	b	21688 <_obstack_memory_used@@Base+0x12c0>
   21688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2168c:	add	fp, sp, #28
   21690:	sub	sp, sp, #36	; 0x24
   21694:	mov	r4, r2
   21698:	str	r2, [sp, #24]
   2169c:	mov	r5, r1
   216a0:	mov	r6, r0
   216a4:	str	r0, [sp, #20]
   216a8:	movw	r8, #41984	; 0xa400
   216ac:	movt	r8, #3
   216b0:	cmp	r3, #0
   216b4:	movne	r8, r3
   216b8:	bl	11fe4 <__errno_location@plt>
   216bc:	str	r0, [sp, #28]
   216c0:	ldm	r8, {r3, r9}
   216c4:	ldr	r1, [r8, #40]	; 0x28
   216c8:	ldr	r2, [r8, #44]	; 0x2c
   216cc:	ldr	r7, [r0]
   216d0:	str	r7, [sp, #32]
   216d4:	add	sl, r8, #8
   216d8:	cmp	r4, #0
   216dc:	orreq	r9, r9, #1
   216e0:	stm	sp, {r3, r9, sl}
   216e4:	str	r1, [sp, #12]
   216e8:	str	r2, [sp, #16]
   216ec:	mov	r0, #0
   216f0:	mov	r1, #0
   216f4:	mov	r2, r6
   216f8:	mov	r3, r5
   216fc:	mov	r7, r5
   21700:	bl	2067c <_obstack_memory_used@@Base+0x2b4>
   21704:	mov	r5, r0
   21708:	add	r4, r0, #1
   2170c:	mov	r0, r4
   21710:	bl	22e00 <_obstack_memory_used@@Base+0x2a38>
   21714:	mov	r6, r0
   21718:	ldr	r0, [r8]
   2171c:	ldr	r1, [r8, #40]	; 0x28
   21720:	ldr	r2, [r8, #44]	; 0x2c
   21724:	stm	sp, {r0, r9, sl}
   21728:	str	r1, [sp, #12]
   2172c:	str	r2, [sp, #16]
   21730:	mov	r0, r6
   21734:	mov	r1, r4
   21738:	ldr	r2, [sp, #20]
   2173c:	mov	r3, r7
   21740:	bl	2067c <_obstack_memory_used@@Base+0x2b4>
   21744:	ldr	r0, [sp, #24]
   21748:	ldr	r1, [sp, #32]
   2174c:	ldr	r2, [sp, #28]
   21750:	str	r1, [r2]
   21754:	cmp	r0, #0
   21758:	strne	r5, [r0]
   2175c:	mov	r0, r6
   21760:	sub	sp, fp, #28
   21764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21768:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2176c:	add	fp, sp, #24
   21770:	movw	r8, #37584	; 0x92d0
   21774:	movt	r8, #3
   21778:	ldr	r4, [r8]
   2177c:	movw	r5, #37588	; 0x92d4
   21780:	movt	r5, #3
   21784:	ldr	r0, [r5]
   21788:	cmp	r0, #2
   2178c:	blt	217b8 <_obstack_memory_used@@Base+0x13f0>
   21790:	add	r7, r4, #12
   21794:	mov	r6, #0
   21798:	ldr	r0, [r7, r6, lsl #3]
   2179c:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   217a0:	add	r0, r6, #1
   217a4:	ldr	r1, [r5]
   217a8:	add	r2, r6, #2
   217ac:	cmp	r2, r1
   217b0:	mov	r6, r0
   217b4:	blt	21798 <_obstack_memory_used@@Base+0x13d0>
   217b8:	ldr	r0, [r4, #4]
   217bc:	movw	r7, #42032	; 0xa430
   217c0:	movt	r7, #3
   217c4:	cmp	r0, r7
   217c8:	beq	217e0 <_obstack_memory_used@@Base+0x1418>
   217cc:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   217d0:	movw	r0, #37592	; 0x92d8
   217d4:	movt	r0, #3
   217d8:	mov	r6, #256	; 0x100
   217dc:	strd	r6, [r0]
   217e0:	movw	r6, #37592	; 0x92d8
   217e4:	movt	r6, #3
   217e8:	cmp	r4, r6
   217ec:	beq	217fc <_obstack_memory_used@@Base+0x1434>
   217f0:	mov	r0, r4
   217f4:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   217f8:	str	r6, [r8]
   217fc:	mov	r0, #1
   21800:	str	r0, [r5]
   21804:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21808:	movw	r3, #41984	; 0xa400
   2180c:	movt	r3, #3
   21810:	mvn	r2, #0
   21814:	b	21818 <_obstack_memory_used@@Base+0x1450>
   21818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2181c:	add	fp, sp, #28
   21820:	sub	sp, sp, #44	; 0x2c
   21824:	mov	r7, r3
   21828:	str	r2, [sp, #36]	; 0x24
   2182c:	str	r1, [sp, #32]
   21830:	mov	r5, r0
   21834:	bl	11fe4 <__errno_location@plt>
   21838:	cmp	r5, #0
   2183c:	blt	219a8 <_obstack_memory_used@@Base+0x15e0>
   21840:	cmn	r5, #-2147483647	; 0x80000001
   21844:	beq	219a8 <_obstack_memory_used@@Base+0x15e0>
   21848:	movw	r4, #37584	; 0x92d0
   2184c:	movt	r4, #3
   21850:	ldr	r6, [r4]
   21854:	str	r0, [sp, #28]
   21858:	ldr	r0, [r0]
   2185c:	str	r0, [sp, #24]
   21860:	movw	r8, #37588	; 0x92d4
   21864:	movt	r8, #3
   21868:	ldr	r1, [r8]
   2186c:	cmp	r1, r5
   21870:	ble	2187c <_obstack_memory_used@@Base+0x14b4>
   21874:	mov	sl, r6
   21878:	b	218e4 <_obstack_memory_used@@Base+0x151c>
   2187c:	str	r1, [fp, #-32]	; 0xffffffe0
   21880:	mov	r0, #8
   21884:	str	r0, [sp]
   21888:	movw	r9, #37592	; 0x92d8
   2188c:	movt	r9, #3
   21890:	subs	r0, r6, r9
   21894:	movne	r0, r6
   21898:	add	r2, r5, #1
   2189c:	sub	r2, r2, r1
   218a0:	sub	r1, fp, #32
   218a4:	mvn	r3, #-2147483648	; 0x80000000
   218a8:	bl	22ee8 <_obstack_memory_used@@Base+0x2b20>
   218ac:	mov	sl, r0
   218b0:	str	r0, [r4]
   218b4:	cmp	r6, r9
   218b8:	ldrdeq	r0, [r9]
   218bc:	stmeq	sl, {r0, r1}
   218c0:	ldr	r1, [r8]
   218c4:	add	r0, sl, r1, lsl #3
   218c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   218cc:	sub	r1, r2, r1
   218d0:	lsl	r2, r1, #3
   218d4:	mov	r1, #0
   218d8:	bl	12008 <memset@plt>
   218dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   218e0:	str	r0, [r8]
   218e4:	mov	r9, sl
   218e8:	ldr	r6, [r9, r5, lsl #3]!
   218ec:	ldr	r4, [r9, #4]!
   218f0:	ldm	r7, {r0, r1}
   218f4:	ldr	r2, [r7, #40]	; 0x28
   218f8:	ldr	r3, [r7, #44]	; 0x2c
   218fc:	orr	r8, r1, #1
   21900:	add	r1, r7, #8
   21904:	stm	sp, {r0, r8}
   21908:	str	r1, [sp, #20]
   2190c:	add	r0, sp, #8
   21910:	stm	r0, {r1, r2, r3}
   21914:	mov	r0, r4
   21918:	mov	r1, r6
   2191c:	ldr	r2, [sp, #32]
   21920:	ldr	r3, [sp, #36]	; 0x24
   21924:	bl	2067c <_obstack_memory_used@@Base+0x2b4>
   21928:	cmp	r6, r0
   2192c:	bhi	21990 <_obstack_memory_used@@Base+0x15c8>
   21930:	add	r6, r0, #1
   21934:	str	r6, [sl, r5, lsl #3]
   21938:	movw	r0, #42032	; 0xa430
   2193c:	movt	r0, #3
   21940:	cmp	r4, r0
   21944:	beq	21950 <_obstack_memory_used@@Base+0x1588>
   21948:	mov	r0, r4
   2194c:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   21950:	mov	r0, r6
   21954:	bl	22e00 <_obstack_memory_used@@Base+0x2a38>
   21958:	mov	r4, r0
   2195c:	str	r0, [r9]
   21960:	ldr	r0, [r7]
   21964:	ldr	r1, [r7, #40]	; 0x28
   21968:	ldr	r2, [r7, #44]	; 0x2c
   2196c:	stm	sp, {r0, r8}
   21970:	ldr	r0, [sp, #20]
   21974:	add	r3, sp, #8
   21978:	stm	r3, {r0, r1, r2}
   2197c:	mov	r0, r4
   21980:	mov	r1, r6
   21984:	ldr	r2, [sp, #32]
   21988:	ldr	r3, [sp, #36]	; 0x24
   2198c:	bl	2067c <_obstack_memory_used@@Base+0x2b4>
   21990:	ldr	r0, [sp, #28]
   21994:	ldr	r1, [sp, #24]
   21998:	str	r1, [r0]
   2199c:	mov	r0, r4
   219a0:	sub	sp, fp, #28
   219a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219a8:	bl	1214c <abort@plt>
   219ac:	movw	r3, #41984	; 0xa400
   219b0:	movt	r3, #3
   219b4:	b	21818 <_obstack_memory_used@@Base+0x1450>
   219b8:	mov	r1, r0
   219bc:	mov	r0, #0
   219c0:	b	21808 <_obstack_memory_used@@Base+0x1440>
   219c4:	mov	r2, r1
   219c8:	mov	r1, r0
   219cc:	mov	r0, #0
   219d0:	b	219ac <_obstack_memory_used@@Base+0x15e4>
   219d4:	push	{r4, r5, r6, sl, fp, lr}
   219d8:	add	fp, sp, #16
   219dc:	sub	sp, sp, #48	; 0x30
   219e0:	mov	r4, r2
   219e4:	mov	r5, r0
   219e8:	mov	r6, sp
   219ec:	mov	r0, r6
   219f0:	bl	21a10 <_obstack_memory_used@@Base+0x1648>
   219f4:	mov	r0, r5
   219f8:	mov	r1, r4
   219fc:	mvn	r2, #0
   21a00:	mov	r3, r6
   21a04:	bl	21818 <_obstack_memory_used@@Base+0x1450>
   21a08:	sub	sp, fp, #16
   21a0c:	pop	{r4, r5, r6, sl, fp, pc}
   21a10:	vmov.i32	q8, #0	; 0x00000000
   21a14:	mov	r2, #32
   21a18:	mov	r3, r0
   21a1c:	vst1.32	{d16-d17}, [r3], r2
   21a20:	vst1.32	{d16-d17}, [r3]
   21a24:	add	r2, r0, #16
   21a28:	vst1.32	{d16-d17}, [r2]
   21a2c:	cmp	r1, #10
   21a30:	strne	r1, [r0]
   21a34:	bxne	lr
   21a38:	push	{fp, lr}
   21a3c:	mov	fp, sp
   21a40:	bl	1214c <abort@plt>
   21a44:	push	{r4, r5, r6, r7, fp, lr}
   21a48:	add	fp, sp, #16
   21a4c:	sub	sp, sp, #48	; 0x30
   21a50:	mov	r4, r3
   21a54:	mov	r5, r2
   21a58:	mov	r6, r0
   21a5c:	mov	r7, sp
   21a60:	mov	r0, r7
   21a64:	bl	21a10 <_obstack_memory_used@@Base+0x1648>
   21a68:	mov	r0, r6
   21a6c:	mov	r1, r5
   21a70:	mov	r2, r4
   21a74:	mov	r3, r7
   21a78:	bl	21818 <_obstack_memory_used@@Base+0x1450>
   21a7c:	sub	sp, fp, #16
   21a80:	pop	{r4, r5, r6, r7, fp, pc}
   21a84:	mov	r2, r1
   21a88:	mov	r1, r0
   21a8c:	mov	r0, #0
   21a90:	b	219d4 <_obstack_memory_used@@Base+0x160c>
   21a94:	mov	r3, r2
   21a98:	mov	r2, r1
   21a9c:	mov	r1, r0
   21aa0:	mov	r0, #0
   21aa4:	b	21a44 <_obstack_memory_used@@Base+0x167c>
   21aa8:	push	{r4, r5, r6, sl, fp, lr}
   21aac:	add	fp, sp, #16
   21ab0:	sub	sp, sp, #48	; 0x30
   21ab4:	mov	r4, r1
   21ab8:	mov	r5, r0
   21abc:	mov	r0, #32
   21ac0:	movw	r1, #41984	; 0xa400
   21ac4:	movt	r1, #3
   21ac8:	add	r3, r1, #16
   21acc:	vld1.64	{d16-d17}, [r1], r0
   21ad0:	mov	r6, sp
   21ad4:	vld1.64	{d18-d19}, [r3]
   21ad8:	add	r3, r6, #16
   21adc:	vld1.64	{d20-d21}, [r1]
   21ae0:	vst1.64	{d18-d19}, [r3]
   21ae4:	mov	r1, r6
   21ae8:	vst1.64	{d16-d17}, [r1], r0
   21aec:	vst1.64	{d20-d21}, [r1]
   21af0:	mov	r0, r6
   21af4:	mov	r1, r2
   21af8:	mov	r2, #1
   21afc:	bl	20570 <_obstack_memory_used@@Base+0x1a8>
   21b00:	mov	r0, #0
   21b04:	mov	r1, r5
   21b08:	mov	r2, r4
   21b0c:	mov	r3, r6
   21b10:	bl	21818 <_obstack_memory_used@@Base+0x1450>
   21b14:	sub	sp, fp, #16
   21b18:	pop	{r4, r5, r6, sl, fp, pc}
   21b1c:	mov	r2, r1
   21b20:	mvn	r1, #0
   21b24:	b	21aa8 <_obstack_memory_used@@Base+0x16e0>
   21b28:	mov	r1, #58	; 0x3a
   21b2c:	b	21b1c <_obstack_memory_used@@Base+0x1754>
   21b30:	mov	r2, #58	; 0x3a
   21b34:	b	21aa8 <_obstack_memory_used@@Base+0x16e0>
   21b38:	push	{r4, r5, r6, sl, fp, lr}
   21b3c:	add	fp, sp, #16
   21b40:	sub	sp, sp, #48	; 0x30
   21b44:	mov	r4, r2
   21b48:	mov	r5, r0
   21b4c:	mov	r6, sp
   21b50:	mov	r0, r6
   21b54:	bl	21a10 <_obstack_memory_used@@Base+0x1648>
   21b58:	mov	r0, r6
   21b5c:	mov	r1, #58	; 0x3a
   21b60:	mov	r2, #1
   21b64:	bl	20570 <_obstack_memory_used@@Base+0x1a8>
   21b68:	mov	r0, r5
   21b6c:	mov	r1, r4
   21b70:	mvn	r2, #0
   21b74:	mov	r3, r6
   21b78:	bl	21818 <_obstack_memory_used@@Base+0x1450>
   21b7c:	sub	sp, fp, #16
   21b80:	pop	{r4, r5, r6, sl, fp, pc}
   21b84:	push	{fp, lr}
   21b88:	mov	fp, sp
   21b8c:	sub	sp, sp, #8
   21b90:	mvn	ip, #0
   21b94:	str	ip, [sp]
   21b98:	bl	21ba4 <_obstack_memory_used@@Base+0x17dc>
   21b9c:	mov	sp, fp
   21ba0:	pop	{fp, pc}
   21ba4:	push	{r4, r5, r6, r7, fp, lr}
   21ba8:	add	fp, sp, #16
   21bac:	sub	sp, sp, #48	; 0x30
   21bb0:	mov	r7, r3
   21bb4:	mov	r5, r0
   21bb8:	mov	r0, #32
   21bbc:	movw	r3, #41984	; 0xa400
   21bc0:	movt	r3, #3
   21bc4:	add	r4, r3, #16
   21bc8:	vld1.64	{d16-d17}, [r3], r0
   21bcc:	mov	r6, sp
   21bd0:	vld1.64	{d18-d19}, [r4]
   21bd4:	add	r4, r6, #16
   21bd8:	vld1.64	{d20-d21}, [r3]
   21bdc:	vst1.64	{d18-d19}, [r4]
   21be0:	mov	r3, r6
   21be4:	vst1.64	{d16-d17}, [r3], r0
   21be8:	vst1.64	{d20-d21}, [r3]
   21bec:	mov	r0, r6
   21bf0:	bl	205c8 <_obstack_memory_used@@Base+0x200>
   21bf4:	ldr	r2, [fp, #8]
   21bf8:	mov	r0, r5
   21bfc:	mov	r1, r7
   21c00:	mov	r3, r6
   21c04:	bl	21818 <_obstack_memory_used@@Base+0x1450>
   21c08:	sub	sp, fp, #16
   21c0c:	pop	{r4, r5, r6, r7, fp, pc}
   21c10:	mov	r3, r2
   21c14:	mov	r2, r1
   21c18:	mov	r1, r0
   21c1c:	mov	r0, #0
   21c20:	b	21b84 <_obstack_memory_used@@Base+0x17bc>
   21c24:	push	{fp, lr}
   21c28:	mov	fp, sp
   21c2c:	sub	sp, sp, #8
   21c30:	mov	ip, r2
   21c34:	mov	r2, r1
   21c38:	mov	r1, r0
   21c3c:	str	r3, [sp]
   21c40:	mov	r0, #0
   21c44:	mov	r3, ip
   21c48:	bl	21ba4 <_obstack_memory_used@@Base+0x17dc>
   21c4c:	mov	sp, fp
   21c50:	pop	{fp, pc}
   21c54:	movw	r3, #37600	; 0x92e0
   21c58:	movt	r3, #3
   21c5c:	b	21818 <_obstack_memory_used@@Base+0x1450>
   21c60:	mov	r2, r1
   21c64:	mov	r1, r0
   21c68:	mov	r0, #0
   21c6c:	b	21c54 <_obstack_memory_used@@Base+0x188c>
   21c70:	mvn	r2, #0
   21c74:	b	21c54 <_obstack_memory_used@@Base+0x188c>
   21c78:	mov	r1, r0
   21c7c:	mov	r0, #0
   21c80:	b	21c70 <_obstack_memory_used@@Base+0x18a8>
   21c84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21c88:	add	fp, sp, #24
   21c8c:	sub	sp, sp, #16
   21c90:	mov	r4, r1
   21c94:	mov	r5, r0
   21c98:	mov	r7, #0
   21c9c:	mov	r0, #0
   21ca0:	mov	r1, r5
   21ca4:	mov	r2, #5
   21ca8:	bl	11dbc <dcgettext@plt>
   21cac:	cmp	r0, r5
   21cb0:	beq	21cbc <_obstack_memory_used@@Base+0x18f4>
   21cb4:	sub	sp, fp, #24
   21cb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21cbc:	bl	23efc <_obstack_memory_used@@Base+0x3b34>
   21cc0:	mov	r6, r0
   21cc4:	mov	r8, #56	; 0x38
   21cc8:	mov	r0, #45	; 0x2d
   21ccc:	stm	sp, {r0, r8}
   21cd0:	str	r7, [sp, #8]
   21cd4:	str	r7, [sp, #12]
   21cd8:	mov	r0, r6
   21cdc:	mov	r1, #85	; 0x55
   21ce0:	mov	r2, #84	; 0x54
   21ce4:	mov	r3, #70	; 0x46
   21ce8:	bl	21d80 <_obstack_memory_used@@Base+0x19b8>
   21cec:	cmp	r0, #0
   21cf0:	beq	21d0c <_obstack_memory_used@@Base+0x1944>
   21cf4:	ldrb	r1, [r5]
   21cf8:	movw	r2, #34524	; 0x86dc
   21cfc:	movt	r2, #2
   21d00:	movw	r0, #34528	; 0x86e0
   21d04:	movt	r0, #2
   21d08:	b	21d50 <_obstack_memory_used@@Base+0x1988>
   21d0c:	mov	r0, #48	; 0x30
   21d10:	mov	r1, #51	; 0x33
   21d14:	str	r8, [sp]
   21d18:	stmib	sp, {r0, r1}
   21d1c:	str	r0, [sp, #12]
   21d20:	mov	r0, r6
   21d24:	mov	r1, #71	; 0x47
   21d28:	mov	r2, #66	; 0x42
   21d2c:	mov	r3, #49	; 0x31
   21d30:	bl	21d80 <_obstack_memory_used@@Base+0x19b8>
   21d34:	cmp	r0, #0
   21d38:	beq	21d60 <_obstack_memory_used@@Base+0x1998>
   21d3c:	ldrb	r1, [r5]
   21d40:	movw	r2, #34532	; 0x86e4
   21d44:	movt	r2, #2
   21d48:	movw	r0, #34536	; 0x86e8
   21d4c:	movt	r0, #2
   21d50:	cmp	r1, #96	; 0x60
   21d54:	moveq	r0, r2
   21d58:	sub	sp, fp, #24
   21d5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21d60:	movw	r1, #34520	; 0x86d8
   21d64:	movt	r1, #2
   21d68:	movw	r0, #35436	; 0x8a6c
   21d6c:	movt	r0, #2
   21d70:	cmp	r4, #9
   21d74:	moveq	r0, r1
   21d78:	sub	sp, fp, #24
   21d7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21d80:	push	{r4, r5, r6, r7, fp, lr}
   21d84:	add	fp, sp, #16
   21d88:	sub	sp, sp, #16
   21d8c:	mov	r4, r3
   21d90:	mov	r5, r2
   21d94:	mov	r7, r1
   21d98:	mov	r6, r0
   21d9c:	mov	r0, r1
   21da0:	bl	1ab3c <putc_unlocked@plt+0x8984>
   21da4:	ldrb	r1, [r6]
   21da8:	cmp	r0, #0
   21dac:	andne	r1, r1, #223	; 0xdf
   21db0:	mov	r0, #0
   21db4:	cmp	r1, r7
   21db8:	bne	21df8 <_obstack_memory_used@@Base+0x1a30>
   21dbc:	cmp	r7, #0
   21dc0:	moveq	r0, #1
   21dc4:	subeq	sp, fp, #16
   21dc8:	popeq	{r4, r5, r6, r7, fp, pc}
   21dcc:	ldr	r0, [fp, #20]
   21dd0:	ldr	r1, [fp, #16]
   21dd4:	ldr	r2, [fp, #12]
   21dd8:	ldr	r3, [fp, #8]
   21ddc:	str	r2, [sp]
   21de0:	str	r1, [sp, #4]
   21de4:	str	r0, [sp, #8]
   21de8:	mov	r0, r6
   21dec:	mov	r1, r5
   21df0:	mov	r2, r4
   21df4:	bl	21e00 <_obstack_memory_used@@Base+0x1a38>
   21df8:	sub	sp, fp, #16
   21dfc:	pop	{r4, r5, r6, r7, fp, pc}
   21e00:	push	{r4, r5, r6, r7, fp, lr}
   21e04:	add	fp, sp, #16
   21e08:	sub	sp, sp, #8
   21e0c:	mov	r4, r3
   21e10:	mov	r5, r2
   21e14:	mov	r7, r1
   21e18:	mov	r6, r0
   21e1c:	mov	r0, r1
   21e20:	bl	1ab3c <putc_unlocked@plt+0x8984>
   21e24:	ldrb	r1, [r6, #1]
   21e28:	cmp	r0, #0
   21e2c:	andne	r1, r1, #223	; 0xdf
   21e30:	mov	r0, #0
   21e34:	cmp	r1, r7
   21e38:	bne	21e70 <_obstack_memory_used@@Base+0x1aa8>
   21e3c:	cmp	r7, #0
   21e40:	moveq	r0, #1
   21e44:	subeq	sp, fp, #16
   21e48:	popeq	{r4, r5, r6, r7, fp, pc}
   21e4c:	ldr	r0, [fp, #16]
   21e50:	ldr	r1, [fp, #12]
   21e54:	ldr	r3, [fp, #8]
   21e58:	str	r1, [sp]
   21e5c:	str	r0, [sp, #4]
   21e60:	mov	r0, r6
   21e64:	mov	r1, r5
   21e68:	mov	r2, r4
   21e6c:	bl	21e78 <_obstack_memory_used@@Base+0x1ab0>
   21e70:	sub	sp, fp, #16
   21e74:	pop	{r4, r5, r6, r7, fp, pc}
   21e78:	push	{r4, r5, r6, r7, fp, lr}
   21e7c:	add	fp, sp, #16
   21e80:	sub	sp, sp, #8
   21e84:	mov	r4, r3
   21e88:	mov	r5, r2
   21e8c:	mov	r7, r1
   21e90:	mov	r6, r0
   21e94:	mov	r0, r1
   21e98:	bl	1ab3c <putc_unlocked@plt+0x8984>
   21e9c:	ldrb	r1, [r6, #2]
   21ea0:	cmp	r0, #0
   21ea4:	andne	r1, r1, #223	; 0xdf
   21ea8:	mov	r0, #0
   21eac:	cmp	r1, r7
   21eb0:	bne	21ee0 <_obstack_memory_used@@Base+0x1b18>
   21eb4:	cmp	r7, #0
   21eb8:	moveq	r0, #1
   21ebc:	subeq	sp, fp, #16
   21ec0:	popeq	{r4, r5, r6, r7, fp, pc}
   21ec4:	ldr	r0, [fp, #12]
   21ec8:	ldr	r3, [fp, #8]
   21ecc:	str	r0, [sp]
   21ed0:	mov	r0, r6
   21ed4:	mov	r1, r5
   21ed8:	mov	r2, r4
   21edc:	bl	21ee8 <_obstack_memory_used@@Base+0x1b20>
   21ee0:	sub	sp, fp, #16
   21ee4:	pop	{r4, r5, r6, r7, fp, pc}
   21ee8:	push	{r4, r5, r6, r7, fp, lr}
   21eec:	add	fp, sp, #16
   21ef0:	mov	r4, r3
   21ef4:	mov	r5, r2
   21ef8:	mov	r7, r1
   21efc:	mov	r6, r0
   21f00:	mov	r0, r1
   21f04:	bl	1ab3c <putc_unlocked@plt+0x8984>
   21f08:	ldrb	r1, [r6, #3]
   21f0c:	ldr	r3, [fp, #8]
   21f10:	cmp	r0, #0
   21f14:	andne	r1, r1, #223	; 0xdf
   21f18:	mov	r0, #0
   21f1c:	cmp	r1, r7
   21f20:	popne	{r4, r5, r6, r7, fp, pc}
   21f24:	cmp	r7, #0
   21f28:	beq	21f40 <_obstack_memory_used@@Base+0x1b78>
   21f2c:	mov	r0, r6
   21f30:	mov	r1, r5
   21f34:	mov	r2, r4
   21f38:	pop	{r4, r5, r6, r7, fp, lr}
   21f3c:	b	21f48 <_obstack_memory_used@@Base+0x1b80>
   21f40:	mov	r0, #1
   21f44:	pop	{r4, r5, r6, r7, fp, pc}
   21f48:	push	{r4, r5, r6, r7, fp, lr}
   21f4c:	add	fp, sp, #16
   21f50:	mov	r4, r3
   21f54:	mov	r5, r2
   21f58:	mov	r7, r1
   21f5c:	mov	r6, r0
   21f60:	mov	r0, r1
   21f64:	bl	1ab3c <putc_unlocked@plt+0x8984>
   21f68:	ldrb	r1, [r6, #4]
   21f6c:	cmp	r0, #0
   21f70:	andne	r1, r1, #223	; 0xdf
   21f74:	mov	r0, #0
   21f78:	cmp	r1, r7
   21f7c:	popne	{r4, r5, r6, r7, fp, pc}
   21f80:	cmp	r7, #0
   21f84:	beq	21f9c <_obstack_memory_used@@Base+0x1bd4>
   21f88:	mov	r0, r6
   21f8c:	mov	r1, r5
   21f90:	mov	r2, r4
   21f94:	pop	{r4, r5, r6, r7, fp, lr}
   21f98:	b	21fa4 <_obstack_memory_used@@Base+0x1bdc>
   21f9c:	mov	r0, #1
   21fa0:	pop	{r4, r5, r6, r7, fp, pc}
   21fa4:	push	{r4, r5, r6, sl, fp, lr}
   21fa8:	add	fp, sp, #16
   21fac:	mov	r4, r2
   21fb0:	mov	r6, r1
   21fb4:	mov	r5, r0
   21fb8:	mov	r0, r1
   21fbc:	bl	1ab3c <putc_unlocked@plt+0x8984>
   21fc0:	ldrb	r1, [r5, #5]
   21fc4:	cmp	r0, #0
   21fc8:	andne	r1, r1, #223	; 0xdf
   21fcc:	mov	r0, #0
   21fd0:	cmp	r1, r6
   21fd4:	popne	{r4, r5, r6, sl, fp, pc}
   21fd8:	cmp	r6, #0
   21fdc:	beq	21ff0 <_obstack_memory_used@@Base+0x1c28>
   21fe0:	mov	r0, r5
   21fe4:	mov	r1, r4
   21fe8:	pop	{r4, r5, r6, sl, fp, lr}
   21fec:	b	21ff8 <_obstack_memory_used@@Base+0x1c30>
   21ff0:	mov	r0, #1
   21ff4:	pop	{r4, r5, r6, sl, fp, pc}
   21ff8:	push	{r4, r5, fp, lr}
   21ffc:	add	fp, sp, #8
   22000:	mov	r5, r1
   22004:	mov	r4, r0
   22008:	mov	r0, r1
   2200c:	bl	1ab3c <putc_unlocked@plt+0x8984>
   22010:	ldrb	r1, [r4, #6]
   22014:	cmp	r0, #0
   22018:	andne	r1, r1, #223	; 0xdf
   2201c:	mov	r0, #0
   22020:	cmp	r1, r5
   22024:	popne	{r4, r5, fp, pc}
   22028:	cmp	r5, #0
   2202c:	beq	2203c <_obstack_memory_used@@Base+0x1c74>
   22030:	mov	r0, r4
   22034:	pop	{r4, r5, fp, lr}
   22038:	b	22044 <_obstack_memory_used@@Base+0x1c7c>
   2203c:	mov	r0, #1
   22040:	pop	{r4, r5, fp, pc}
   22044:	push	{r4, sl, fp, lr}
   22048:	add	fp, sp, #8
   2204c:	mov	r4, r0
   22050:	mov	r0, #0
   22054:	bl	1ab3c <putc_unlocked@plt+0x8984>
   22058:	ldrb	r1, [r4, #7]
   2205c:	cmp	r0, #0
   22060:	beq	22078 <_obstack_memory_used@@Base+0x1cb0>
   22064:	tst	r1, #223	; 0xdf
   22068:	moveq	r0, #1
   2206c:	popeq	{r4, sl, fp, pc}
   22070:	mov	r0, #0
   22074:	pop	{r4, sl, fp, pc}
   22078:	cmp	r1, #0
   2207c:	moveq	r0, #1
   22080:	popeq	{r4, sl, fp, pc}
   22084:	mov	r0, #0
   22088:	pop	{r4, sl, fp, pc}
   2208c:	push	{r4, r5, r6, sl, fp, lr}
   22090:	add	fp, sp, #16
   22094:	mov	r5, r1
   22098:	ldr	r4, [r0], #8
   2209c:	cmp	r4, r0
   220a0:	beq	220c4 <_obstack_memory_used@@Base+0x1cfc>
   220a4:	mov	r0, r4
   220a8:	mov	r1, r5
   220ac:	bl	23a94 <_obstack_memory_used@@Base+0x36cc>
   220b0:	mov	r6, r0
   220b4:	cmp	r0, #0
   220b8:	moveq	r6, r4
   220bc:	mov	r0, r6
   220c0:	pop	{r4, r5, r6, sl, fp, pc}
   220c4:	mov	r0, r5
   220c8:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   220cc:	cmp	r0, #0
   220d0:	moveq	r6, #0
   220d4:	moveq	r0, r6
   220d8:	popeq	{r4, r5, r6, sl, fp, pc}
   220dc:	mov	r6, r0
   220e0:	mov	r1, r4
   220e4:	mov	r2, r5
   220e8:	bl	11d74 <memcpy@plt>
   220ec:	mov	r0, r6
   220f0:	pop	{r4, r5, r6, sl, fp, pc}
   220f4:	push	{r4, r5, fp, lr}
   220f8:	add	fp, sp, #8
   220fc:	mov	r4, r0
   22100:	ldr	r5, [r0, #4]
   22104:	bl	22150 <_obstack_memory_used@@Base+0x1d88>
   22108:	ldr	r0, [r4, #4]
   2210c:	cmp	r0, r5, lsl #1
   22110:	bhi	22134 <_obstack_memory_used@@Base+0x1d6c>
   22114:	lsl	r5, r5, #1
   22118:	mov	r0, r5
   2211c:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   22120:	cmp	r0, #0
   22124:	stmne	r4, {r0, r5}
   22128:	movne	r0, #1
   2212c:	popne	{r4, r5, fp, pc}
   22130:	b	22140 <_obstack_memory_used@@Base+0x1d78>
   22134:	bl	11fe4 <__errno_location@plt>
   22138:	mov	r1, #12
   2213c:	str	r1, [r0]
   22140:	mov	r0, r4
   22144:	bl	22164 <_obstack_memory_used@@Base+0x1d9c>
   22148:	mov	r0, #0
   2214c:	pop	{r4, r5, fp, pc}
   22150:	mov	r1, r0
   22154:	ldr	r0, [r1], #8
   22158:	cmp	r0, r1
   2215c:	bxeq	lr
   22160:	b	1bd0c <putc_unlocked@plt+0x9b54>
   22164:	mov	r1, #1024	; 0x400
   22168:	add	r2, r0, #8
   2216c:	str	r2, [r0]
   22170:	str	r1, [r0, #4]
   22174:	bx	lr
   22178:	push	{r4, r5, r6, r7, fp, lr}
   2217c:	add	fp, sp, #16
   22180:	mov	r4, r0
   22184:	add	r5, r0, #8
   22188:	ldrd	r0, [r0]
   2218c:	lsl	r7, r1, #1
   22190:	cmp	r0, r5
   22194:	beq	221b8 <_obstack_memory_used@@Base+0x1df0>
   22198:	cmp	r7, r1
   2219c:	bcc	221e8 <_obstack_memory_used@@Base+0x1e20>
   221a0:	mov	r1, r7
   221a4:	bl	23a94 <_obstack_memory_used@@Base+0x36cc>
   221a8:	mov	r6, r0
   221ac:	cmp	r0, #0
   221b0:	bne	221dc <_obstack_memory_used@@Base+0x1e14>
   221b4:	b	221f4 <_obstack_memory_used@@Base+0x1e2c>
   221b8:	mov	r0, r7
   221bc:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   221c0:	cmp	r0, #0
   221c4:	moveq	r0, #0
   221c8:	popeq	{r4, r5, r6, r7, fp, pc}
   221cc:	mov	r6, r0
   221d0:	ldr	r2, [r4, #4]
   221d4:	mov	r1, r5
   221d8:	bl	11d74 <memcpy@plt>
   221dc:	strd	r6, [r4]
   221e0:	mov	r0, #1
   221e4:	pop	{r4, r5, r6, r7, fp, pc}
   221e8:	bl	11fe4 <__errno_location@plt>
   221ec:	mov	r1, #12
   221f0:	str	r1, [r0]
   221f4:	ldr	r0, [r4]
   221f8:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   221fc:	mov	r0, r4
   22200:	bl	2220c <_obstack_memory_used@@Base+0x1e44>
   22204:	mov	r0, #0
   22208:	pop	{r4, r5, r6, r7, fp, pc}
   2220c:	mov	r1, #1024	; 0x400
   22210:	add	r2, r0, #8
   22214:	str	r2, [r0]
   22218:	str	r1, [r0, #4]
   2221c:	bx	lr
   22220:	push	{r4, sl, fp, lr}
   22224:	add	fp, sp, #8
   22228:	mov	r4, r1
   2222c:	bl	11fa8 <getfilecon@plt>
   22230:	mov	r1, r4
   22234:	pop	{r4, sl, fp, lr}
   22238:	b	2223c <_obstack_memory_used@@Base+0x1e74>
   2223c:	push	{r4, r5, fp, lr}
   22240:	add	fp, sp, #8
   22244:	cmp	r0, #10
   22248:	beq	22260 <_obstack_memory_used@@Base+0x1e98>
   2224c:	cmp	r0, #0
   22250:	bne	222a8 <_obstack_memory_used@@Base+0x1ee0>
   22254:	bl	11fe4 <__errno_location@plt>
   22258:	mov	r1, #95	; 0x5f
   2225c:	b	222a0 <_obstack_memory_used@@Base+0x1ed8>
   22260:	mov	r4, r1
   22264:	ldr	r5, [r1]
   22268:	movw	r1, #27286	; 0x6a96
   2226c:	movt	r1, #2
   22270:	mov	r0, r5
   22274:	bl	11ccc <strcmp@plt>
   22278:	mov	r1, r0
   2227c:	mov	r0, #10
   22280:	cmp	r1, #0
   22284:	popne	{r4, r5, fp, pc}
   22288:	mov	r0, r5
   2228c:	bl	12104 <freecon@plt>
   22290:	mov	r0, #0
   22294:	str	r0, [r4]
   22298:	bl	11fe4 <__errno_location@plt>
   2229c:	mov	r1, #61	; 0x3d
   222a0:	str	r1, [r0]
   222a4:	mvn	r0, #0
   222a8:	pop	{r4, r5, fp, pc}
   222ac:	push	{r4, sl, fp, lr}
   222b0:	add	fp, sp, #8
   222b4:	mov	r4, r1
   222b8:	bl	11f0c <lgetfilecon@plt>
   222bc:	mov	r1, r4
   222c0:	pop	{r4, sl, fp, lr}
   222c4:	b	2223c <_obstack_memory_used@@Base+0x1e74>
   222c8:	push	{r4, sl, fp, lr}
   222cc:	add	fp, sp, #8
   222d0:	mov	r4, r1
   222d4:	bl	11de0 <fgetfilecon@plt>
   222d8:	mov	r1, r4
   222dc:	pop	{r4, sl, fp, lr}
   222e0:	b	2223c <_obstack_memory_used@@Base+0x1e74>
   222e4:	b	222e8 <_obstack_memory_used@@Base+0x1f20>
   222e8:	push	{r4, r5, r6, r7, fp, lr}
   222ec:	add	fp, sp, #16
   222f0:	mov	r6, r2
   222f4:	mov	r4, r1
   222f8:	bl	22384 <_obstack_memory_used@@Base+0x1fbc>
   222fc:	cmp	r0, #0
   22300:	beq	22330 <_obstack_memory_used@@Base+0x1f68>
   22304:	mov	r7, r0
   22308:	bl	11fc0 <strlen@plt>
   2230c:	cmp	r0, r6
   22310:	bcs	22350 <_obstack_memory_used@@Base+0x1f88>
   22314:	add	r2, r0, #1
   22318:	mov	r0, r4
   2231c:	mov	r1, r7
   22320:	bl	11d74 <memcpy@plt>
   22324:	mov	r5, #0
   22328:	mov	r0, r5
   2232c:	pop	{r4, r5, r6, r7, fp, pc}
   22330:	mov	r5, #22
   22334:	cmp	r6, #0
   22338:	movne	r0, #0
   2233c:	strbne	r0, [r4]
   22340:	movne	r0, r5
   22344:	popne	{r4, r5, r6, r7, fp, pc}
   22348:	mov	r0, r5
   2234c:	pop	{r4, r5, r6, r7, fp, pc}
   22350:	mov	r5, #34	; 0x22
   22354:	cmp	r6, #0
   22358:	beq	22378 <_obstack_memory_used@@Base+0x1fb0>
   2235c:	sub	r6, r6, #1
   22360:	mov	r0, r4
   22364:	mov	r1, r7
   22368:	mov	r2, r6
   2236c:	bl	11d74 <memcpy@plt>
   22370:	mov	r0, #0
   22374:	strb	r0, [r4, r6]
   22378:	mov	r0, r5
   2237c:	pop	{r4, r5, r6, r7, fp, pc}
   22380:	b	22384 <_obstack_memory_used@@Base+0x1fbc>
   22384:	mov	r1, #0
   22388:	b	12074 <setlocale@plt>
   2238c:	ldr	r0, [r0, #76]	; 0x4c
   22390:	bx	lr
   22394:	ldr	r0, [r0, #92]	; 0x5c
   22398:	bx	lr
   2239c:	ldr	r0, [r0, #84]	; 0x54
   223a0:	bx	lr
   223a4:	mov	r0, #0
   223a8:	bx	lr
   223ac:	ldrd	r2, [r1, #72]	; 0x48
   223b0:	stm	r0, {r2, r3}
   223b4:	bx	lr
   223b8:	ldrd	r2, [r1, #88]	; 0x58
   223bc:	stm	r0, {r2, r3}
   223c0:	bx	lr
   223c4:	ldrd	r2, [r1, #80]	; 0x50
   223c8:	stm	r0, {r2, r3}
   223cc:	bx	lr
   223d0:	mvn	r1, #0
   223d4:	str	r1, [r0]
   223d8:	str	r1, [r0, #4]
   223dc:	bx	lr
   223e0:	bx	lr
   223e4:	push	{r4, r5, r6, sl, fp, lr}
   223e8:	add	fp, sp, #16
   223ec:	mov	r4, r0
   223f0:	cmp	r0, #0
   223f4:	beq	22418 <_obstack_memory_used@@Base+0x2050>
   223f8:	mov	r0, r4
   223fc:	bl	11fc0 <strlen@plt>
   22400:	add	r5, r0, #1
   22404:	cmp	r5, #58	; 0x3a
   22408:	bls	2241c <_obstack_memory_used@@Base+0x2054>
   2240c:	add	r0, r0, #10
   22410:	bic	r0, r0, #3
   22414:	b	22420 <_obstack_memory_used@@Base+0x2058>
   22418:	mov	r5, #0
   2241c:	mov	r0, #64	; 0x40
   22420:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   22424:	mov	r6, r0
   22428:	cmp	r0, #0
   2242c:	beq	22460 <_obstack_memory_used@@Base+0x2098>
   22430:	mov	r1, #0
   22434:	str	r1, [r6]
   22438:	cmp	r4, #0
   2243c:	mov	r0, r4
   22440:	movwne	r0, #1
   22444:	strb	r0, [r6, #4]
   22448:	mov	r0, r6
   2244c:	strb	r1, [r0, #5]!
   22450:	beq	22460 <_obstack_memory_used@@Base+0x2098>
   22454:	mov	r1, r4
   22458:	mov	r2, r5
   2245c:	bl	22468 <_obstack_memory_used@@Base+0x20a0>
   22460:	mov	r0, r6
   22464:	pop	{r4, r5, r6, sl, fp, pc}
   22468:	push	{r4, r5, fp, lr}
   2246c:	add	fp, sp, #8
   22470:	mov	r4, r2
   22474:	mov	r5, r0
   22478:	bl	11d74 <memcpy@plt>
   2247c:	mov	r0, #0
   22480:	strb	r0, [r5, r4]
   22484:	pop	{r4, r5, fp, pc}
   22488:	push	{r4, sl, fp, lr}
   2248c:	add	fp, sp, #8
   22490:	cmp	r0, #2
   22494:	popcc	{r4, sl, fp, pc}
   22498:	ldr	r4, [r0]
   2249c:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   224a0:	cmp	r4, #0
   224a4:	mov	r0, r4
   224a8:	bne	22498 <_obstack_memory_used@@Base+0x20d0>
   224ac:	pop	{r4, sl, fp, pc}
   224b0:	push	{r4, r5, r6, r7, fp, lr}
   224b4:	add	fp, sp, #16
   224b8:	mov	r4, r2
   224bc:	mov	r7, r1
   224c0:	cmp	r0, #0
   224c4:	beq	22508 <_obstack_memory_used@@Base+0x2140>
   224c8:	mov	r6, r0
   224cc:	bl	22538 <_obstack_memory_used@@Base+0x2170>
   224d0:	cmp	r0, #0
   224d4:	moveq	r0, #0
   224d8:	popeq	{r4, r5, r6, r7, fp, pc}
   224dc:	mov	r5, r0
   224e0:	mov	r0, r7
   224e4:	mov	r1, r4
   224e8:	bl	11dec <localtime_r@plt>
   224ec:	cmp	r0, #0
   224f0:	beq	22518 <_obstack_memory_used@@Base+0x2150>
   224f4:	mov	r0, r6
   224f8:	mov	r1, r4
   224fc:	bl	225c8 <_obstack_memory_used@@Base+0x2200>
   22500:	eor	r6, r0, #1
   22504:	b	2251c <_obstack_memory_used@@Base+0x2154>
   22508:	mov	r0, r7
   2250c:	mov	r1, r4
   22510:	pop	{r4, r5, r6, r7, fp, lr}
   22514:	b	11cb4 <gmtime_r@plt>
   22518:	mov	r6, #1
   2251c:	mov	r0, r5
   22520:	bl	226e0 <_obstack_memory_used@@Base+0x2318>
   22524:	cmp	r0, #0
   22528:	movne	r0, r4
   2252c:	cmp	r6, #0
   22530:	movwne	r0, #0
   22534:	pop	{r4, r5, r6, r7, fp, pc}
   22538:	push	{r4, r5, r6, r7, fp, lr}
   2253c:	add	fp, sp, #16
   22540:	mov	r4, r0
   22544:	bl	22808 <_obstack_memory_used@@Base+0x2440>
   22548:	mov	r5, r0
   2254c:	ldrb	r0, [r4, #4]
   22550:	cmp	r5, #0
   22554:	beq	2256c <_obstack_memory_used@@Base+0x21a4>
   22558:	cmp	r0, #0
   2255c:	beq	2257c <_obstack_memory_used@@Base+0x21b4>
   22560:	add	r0, r4, #5
   22564:	mov	r1, r5
   22568:	bl	11ccc <strcmp@plt>
   2256c:	cmp	r0, #0
   22570:	moveq	r5, #1
   22574:	moveq	r0, r5
   22578:	popeq	{r4, r5, r6, r7, fp, pc}
   2257c:	mov	r0, r5
   22580:	bl	223e4 <_obstack_memory_used@@Base+0x201c>
   22584:	mov	r5, #0
   22588:	cmp	r0, #0
   2258c:	beq	225c0 <_obstack_memory_used@@Base+0x21f8>
   22590:	mov	r6, r0
   22594:	mov	r0, r4
   22598:	bl	22814 <_obstack_memory_used@@Base+0x244c>
   2259c:	cmp	r0, #0
   225a0:	movne	r0, r6
   225a4:	popne	{r4, r5, r6, r7, fp, pc}
   225a8:	bl	11fe4 <__errno_location@plt>
   225ac:	mov	r4, r0
   225b0:	ldr	r7, [r0]
   225b4:	mov	r0, r6
   225b8:	bl	22488 <_obstack_memory_used@@Base+0x20c0>
   225bc:	str	r7, [r4]
   225c0:	mov	r0, r5
   225c4:	pop	{r4, r5, r6, r7, fp, pc}
   225c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   225cc:	add	fp, sp, #24
   225d0:	ldr	r7, [r1, #40]	; 0x28
   225d4:	mov	r8, #1
   225d8:	cmp	r7, #0
   225dc:	beq	22680 <_obstack_memory_used@@Base+0x22b8>
   225e0:	mov	r5, r1
   225e4:	mov	r6, r0
   225e8:	cmp	r7, r1
   225ec:	bcc	225fc <_obstack_memory_used@@Base+0x2234>
   225f0:	add	r0, r5, #44	; 0x2c
   225f4:	cmp	r7, r0
   225f8:	bcc	22680 <_obstack_memory_used@@Base+0x22b8>
   225fc:	ldrb	r0, [r7]
   22600:	cmp	r0, #0
   22604:	beq	22674 <_obstack_memory_used@@Base+0x22ac>
   22608:	add	r4, r6, #5
   2260c:	b	22620 <_obstack_memory_used@@Base+0x2258>
   22610:	ldr	r0, [r6]
   22614:	cmp	r0, #0
   22618:	addne	r4, r0, #5
   2261c:	movne	r6, r0
   22620:	mov	r0, r4
   22624:	mov	r1, r7
   22628:	bl	11ccc <strcmp@plt>
   2262c:	cmp	r0, #0
   22630:	beq	2267c <_obstack_memory_used@@Base+0x22b4>
   22634:	ldrb	r0, [r4]
   22638:	cmp	r0, #0
   2263c:	bne	22658 <_obstack_memory_used@@Base+0x2290>
   22640:	add	r0, r6, #5
   22644:	cmp	r4, r0
   22648:	bne	22688 <_obstack_memory_used@@Base+0x22c0>
   2264c:	ldrb	r0, [r6, #4]
   22650:	cmp	r0, #0
   22654:	beq	22688 <_obstack_memory_used@@Base+0x22c0>
   22658:	mov	r0, r4
   2265c:	bl	11fc0 <strlen@plt>
   22660:	add	r4, r4, r0
   22664:	ldrb	r0, [r4, #1]!
   22668:	cmp	r0, #0
   2266c:	bne	22620 <_obstack_memory_used@@Base+0x2258>
   22670:	b	22610 <_obstack_memory_used@@Base+0x2248>
   22674:	movw	r4, #27261	; 0x6a7d
   22678:	movt	r4, #2
   2267c:	str	r4, [r5, #40]	; 0x28
   22680:	mov	r0, r8
   22684:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22688:	add	r0, r6, #64	; 0x40
   2268c:	sub	r9, r0, r4
   22690:	mov	r0, r7
   22694:	bl	11fc0 <strlen@plt>
   22698:	add	r2, r0, #1
   2269c:	cmp	r2, r9
   226a0:	bge	226b4 <_obstack_memory_used@@Base+0x22ec>
   226a4:	mov	r0, r4
   226a8:	mov	r1, r7
   226ac:	bl	22468 <_obstack_memory_used@@Base+0x20a0>
   226b0:	b	2267c <_obstack_memory_used@@Base+0x22b4>
   226b4:	mov	r0, r7
   226b8:	bl	223e4 <_obstack_memory_used@@Base+0x201c>
   226bc:	str	r0, [r6]
   226c0:	cmp	r0, #0
   226c4:	moveq	r8, #0
   226c8:	moveq	r0, r8
   226cc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   226d0:	mov	r1, #0
   226d4:	strb	r1, [r0, #4]
   226d8:	add	r4, r0, #5
   226dc:	b	2267c <_obstack_memory_used@@Base+0x22b4>
   226e0:	push	{r4, r5, r6, r7, fp, lr}
   226e4:	add	fp, sp, #16
   226e8:	cmp	r0, #1
   226ec:	moveq	r5, #1
   226f0:	moveq	r0, r5
   226f4:	popeq	{r4, r5, r6, r7, fp, pc}
   226f8:	mov	r4, r0
   226fc:	bl	11fe4 <__errno_location@plt>
   22700:	mov	r6, r0
   22704:	ldr	r7, [r0]
   22708:	mov	r0, r4
   2270c:	bl	22814 <_obstack_memory_used@@Base+0x244c>
   22710:	mov	r5, r0
   22714:	cmp	r0, #0
   22718:	ldreq	r7, [r6]
   2271c:	mov	r0, r4
   22720:	bl	22488 <_obstack_memory_used@@Base+0x20c0>
   22724:	str	r7, [r6]
   22728:	mov	r0, r5
   2272c:	pop	{r4, r5, r6, r7, fp, pc}
   22730:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22734:	add	fp, sp, #24
   22738:	sub	sp, sp, #48	; 0x30
   2273c:	mov	r4, r1
   22740:	cmp	r0, #0
   22744:	beq	227e0 <_obstack_memory_used@@Base+0x2418>
   22748:	mov	r6, r0
   2274c:	bl	22538 <_obstack_memory_used@@Base+0x2170>
   22750:	cmp	r0, #0
   22754:	beq	227f8 <_obstack_memory_used@@Base+0x2430>
   22758:	mov	r7, r0
   2275c:	ldm	r4, {r0, r1, r2, r3, r5, ip}
   22760:	stm	sp, {r0, r1, r2, r3, r5}
   22764:	mvn	r0, #0
   22768:	str	r0, [sp, #28]
   2276c:	str	ip, [sp, #20]
   22770:	ldr	r0, [r4, #32]
   22774:	str	r0, [sp, #32]
   22778:	mov	r0, sp
   2277c:	bl	11cfc <mktime@plt>
   22780:	mov	r5, r0
   22784:	ldr	r0, [sp, #28]
   22788:	cmn	r0, #1
   2278c:	ble	227f0 <_obstack_memory_used@@Base+0x2428>
   22790:	mov	r8, sp
   22794:	mov	r0, r6
   22798:	mov	r1, r8
   2279c:	bl	225c8 <_obstack_memory_used@@Base+0x2200>
   227a0:	mov	r6, r0
   227a4:	mov	r0, r7
   227a8:	bl	226e0 <_obstack_memory_used@@Base+0x2318>
   227ac:	cmp	r6, #0
   227b0:	cmpne	r0, #0
   227b4:	beq	227f8 <_obstack_memory_used@@Base+0x2430>
   227b8:	mov	r0, #28
   227bc:	add	r1, r8, #16
   227c0:	vld1.32	{d16-d17}, [r8], r0
   227c4:	vld1.64	{d18-d19}, [r1]
   227c8:	add	r1, r4, #16
   227cc:	vld1.32	{d20-d21}, [r8]
   227d0:	vst1.32	{d18-d19}, [r1]
   227d4:	vst1.32	{d16-d17}, [r4], r0
   227d8:	vst1.32	{d20-d21}, [r4]
   227dc:	b	227fc <_obstack_memory_used@@Base+0x2434>
   227e0:	mov	r0, r4
   227e4:	sub	sp, fp, #24
   227e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   227ec:	b	120e0 <timegm@plt>
   227f0:	mov	r0, r7
   227f4:	bl	226e0 <_obstack_memory_used@@Base+0x2318>
   227f8:	mvn	r5, #0
   227fc:	mov	r0, r5
   22800:	sub	sp, fp, #24
   22804:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22808:	movw	r0, #18028	; 0x466c
   2280c:	movt	r0, #2
   22810:	b	11f00 <getenv@plt>
   22814:	push	{fp, lr}
   22818:	mov	fp, sp
   2281c:	ldrb	r1, [r0, #4]
   22820:	cmp	r1, #0
   22824:	addne	r1, r0, #5
   22828:	mov	r0, r1
   2282c:	bl	2284c <_obstack_memory_used@@Base+0x2484>
   22830:	mov	r1, r0
   22834:	mov	r0, #0
   22838:	cmp	r1, #0
   2283c:	popne	{fp, pc}
   22840:	bl	11e34 <tzset@plt>
   22844:	mov	r0, #1
   22848:	pop	{fp, pc}
   2284c:	cmp	r0, #0
   22850:	beq	22868 <_obstack_memory_used@@Base+0x24a0>
   22854:	mov	r1, r0
   22858:	movw	r0, #18028	; 0x466c
   2285c:	movt	r0, #2
   22860:	mov	r2, #1
   22864:	b	11fd8 <setenv@plt>
   22868:	movw	r0, #18028	; 0x466c
   2286c:	movt	r0, #2
   22870:	b	12134 <unsetenv@plt>
   22874:	andeq	r0, r0, r0
   22878:	stm	r0, {r1, r2}
   2287c:	bx	lr
   22880:	mov	ip, #0
   22884:	cmp	r0, r2
   22888:	mov	r0, #0
   2288c:	movwgt	r0, #1
   22890:	sublt	r0, r0, #1
   22894:	cmp	r1, r3
   22898:	movwgt	ip, #1
   2289c:	sublt	ip, ip, #1
   228a0:	add	r0, ip, r0, lsl #1
   228a4:	bx	lr
   228a8:	mov	r2, #1
   228ac:	asr	r3, r0, #31
   228b0:	cmp	r0, #0
   228b4:	addgt	r3, r2, r0, asr #31
   228b8:	cmp	r1, #0
   228bc:	movwne	r1, #1
   228c0:	clz	r0, r0
   228c4:	lsr	r0, r0, #5
   228c8:	and	r0, r0, r1
   228cc:	add	r0, r3, r0
   228d0:	bx	lr
   228d4:	nop	{0}
   228d8:	vldr	d16, [pc, #24]	; 228f8 <_obstack_memory_used@@Base+0x2530>
   228dc:	vmov	s0, r1
   228e0:	vcvt.f64.s32	d17, s0
   228e4:	vmov	s0, r0
   228e8:	vcvt.f64.s32	d18, s0
   228ec:	vdiv.f64	d16, d17, d16
   228f0:	vadd.f64	d0, d16, d18
   228f4:	bx	lr
   228f8:	andeq	r0, r0, r0
   228fc:	bicmi	ip, sp, r5, ror #26
   22900:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22904:	add	fp, sp, #24
   22908:	sub	sp, sp, #32
   2290c:	mov	r4, r2
   22910:	mov	r8, r0
   22914:	ldr	r6, [fp, #12]
   22918:	ldr	r7, [fp, #8]
   2291c:	cmp	r1, #0
   22920:	beq	22948 <_obstack_memory_used@@Base+0x2580>
   22924:	mov	r5, r1
   22928:	str	r4, [sp]
   2292c:	str	r3, [sp, #4]
   22930:	movw	r2, #34624	; 0x8740
   22934:	movt	r2, #2
   22938:	mov	r0, r8
   2293c:	mov	r1, #1
   22940:	mov	r3, r5
   22944:	b	22960 <_obstack_memory_used@@Base+0x2598>
   22948:	str	r3, [sp]
   2294c:	movw	r2, #34636	; 0x874c
   22950:	movt	r2, #2
   22954:	mov	r0, r8
   22958:	mov	r1, #1
   2295c:	mov	r3, r4
   22960:	bl	12044 <__fprintf_chk@plt>
   22964:	movw	r1, #34643	; 0x8753
   22968:	movt	r1, #2
   2296c:	mov	r0, #0
   22970:	mov	r2, #5
   22974:	bl	11dbc <dcgettext@plt>
   22978:	mov	r3, r0
   2297c:	movw	r0, #2022	; 0x7e6
   22980:	str	r0, [sp]
   22984:	movw	r2, #35361	; 0x8a21
   22988:	movt	r2, #2
   2298c:	mov	r0, r8
   22990:	mov	r1, #1
   22994:	bl	12044 <__fprintf_chk@plt>
   22998:	movw	r4, #28013	; 0x6d6d
   2299c:	movt	r4, #2
   229a0:	mov	r0, r4
   229a4:	mov	r1, r8
   229a8:	bl	11c84 <fputs_unlocked@plt>
   229ac:	movw	r1, #34647	; 0x8757
   229b0:	movt	r1, #2
   229b4:	mov	r0, #0
   229b8:	mov	r2, #5
   229bc:	bl	11dbc <dcgettext@plt>
   229c0:	mov	r2, r0
   229c4:	movw	r3, #34818	; 0x8802
   229c8:	movt	r3, #2
   229cc:	mov	r0, r8
   229d0:	mov	r1, #1
   229d4:	bl	12044 <__fprintf_chk@plt>
   229d8:	mov	r0, r4
   229dc:	mov	r1, r8
   229e0:	bl	11c84 <fputs_unlocked@plt>
   229e4:	cmp	r6, #9
   229e8:	bhi	22a24 <_obstack_memory_used@@Base+0x265c>
   229ec:	add	r0, pc, #0
   229f0:	ldr	pc, [r0, r6, lsl #2]
   229f4:	andeq	r2, r2, ip, lsl sl
   229f8:	andeq	r2, r2, r0, lsr sl
   229fc:	andeq	r2, r2, r0, ror #20
   22a00:	andeq	r2, r2, r8, lsl #21
   22a04:			; <UNDEFINED> instruction: 0x00022ab0
   22a08:	ldrdeq	r2, [r2], -r8
   22a0c:	andeq	r2, r2, r0, lsl #22
   22a10:	andeq	r2, r2, r8, lsr fp
   22a14:	ldrdeq	r2, [r2], -r8
   22a18:	andeq	r2, r2, r0, lsl #23
   22a1c:	sub	sp, fp, #24
   22a20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22a24:	movw	r1, #35171	; 0x8963
   22a28:	movt	r1, #2
   22a2c:	b	22b88 <_obstack_memory_used@@Base+0x27c0>
   22a30:	movw	r1, #34852	; 0x8824
   22a34:	movt	r1, #2
   22a38:	mov	r0, #0
   22a3c:	mov	r2, #5
   22a40:	bl	11dbc <dcgettext@plt>
   22a44:	mov	r2, r0
   22a48:	ldr	r3, [r7]
   22a4c:	mov	r0, r8
   22a50:	mov	r1, #1
   22a54:	sub	sp, fp, #24
   22a58:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   22a5c:	b	12044 <__fprintf_chk@plt>
   22a60:	movw	r1, #34868	; 0x8834
   22a64:	movt	r1, #2
   22a68:	mov	r0, #0
   22a6c:	mov	r2, #5
   22a70:	bl	11dbc <dcgettext@plt>
   22a74:	mov	r2, r0
   22a78:	ldr	r3, [r7]
   22a7c:	ldr	r0, [r7, #4]
   22a80:	str	r0, [sp]
   22a84:	b	22b74 <_obstack_memory_used@@Base+0x27ac>
   22a88:	movw	r1, #34891	; 0x884b
   22a8c:	movt	r1, #2
   22a90:	mov	r0, #0
   22a94:	mov	r2, #5
   22a98:	bl	11dbc <dcgettext@plt>
   22a9c:	mov	r2, r0
   22aa0:	ldr	r3, [r7]
   22aa4:	ldmib	r7, {r0, r1}
   22aa8:	stm	sp, {r0, r1}
   22aac:	b	22b74 <_obstack_memory_used@@Base+0x27ac>
   22ab0:	movw	r1, #34919	; 0x8867
   22ab4:	movt	r1, #2
   22ab8:	mov	r0, #0
   22abc:	mov	r2, #5
   22ac0:	bl	11dbc <dcgettext@plt>
   22ac4:	mov	r2, r0
   22ac8:	ldr	r3, [r7]
   22acc:	ldmib	r7, {r0, r1, r7}
   22ad0:	stm	sp, {r0, r1, r7}
   22ad4:	b	22b74 <_obstack_memory_used@@Base+0x27ac>
   22ad8:	movw	r1, #34951	; 0x8887
   22adc:	movt	r1, #2
   22ae0:	mov	r0, #0
   22ae4:	mov	r2, #5
   22ae8:	bl	11dbc <dcgettext@plt>
   22aec:	mov	r2, r0
   22af0:	ldr	r3, [r7]
   22af4:	ldmib	r7, {r0, r1, r6, r7}
   22af8:	stm	sp, {r0, r1, r6, r7}
   22afc:	b	22b74 <_obstack_memory_used@@Base+0x27ac>
   22b00:	movw	r1, #34987	; 0x88ab
   22b04:	movt	r1, #2
   22b08:	mov	r0, #0
   22b0c:	mov	r2, #5
   22b10:	bl	11dbc <dcgettext@plt>
   22b14:	mov	r2, r0
   22b18:	ldr	r3, [r7]
   22b1c:	ldmib	r7, {r0, r1, r6}
   22b20:	ldr	r5, [r7, #16]
   22b24:	ldr	r7, [r7, #20]
   22b28:	stm	sp, {r0, r1, r6}
   22b2c:	str	r5, [sp, #12]
   22b30:	str	r7, [sp, #16]
   22b34:	b	22b74 <_obstack_memory_used@@Base+0x27ac>
   22b38:	movw	r1, #35027	; 0x88d3
   22b3c:	movt	r1, #2
   22b40:	mov	r0, #0
   22b44:	mov	r2, #5
   22b48:	bl	11dbc <dcgettext@plt>
   22b4c:	mov	r2, r0
   22b50:	ldr	r3, [r7]
   22b54:	ldmib	r7, {r0, r1, r6}
   22b58:	ldr	r5, [r7, #16]
   22b5c:	ldr	r4, [r7, #20]
   22b60:	ldr	r7, [r7, #24]
   22b64:	stm	sp, {r0, r1, r6}
   22b68:	str	r5, [sp, #12]
   22b6c:	str	r4, [sp, #16]
   22b70:	str	r7, [sp, #20]
   22b74:	mov	r0, r8
   22b78:	mov	r1, #1
   22b7c:	b	22c28 <_obstack_memory_used@@Base+0x2860>
   22b80:	movw	r1, #35119	; 0x892f
   22b84:	movt	r1, #2
   22b88:	mov	r0, #0
   22b8c:	mov	r2, #5
   22b90:	bl	11dbc <dcgettext@plt>
   22b94:	mov	ip, r0
   22b98:	ldr	r3, [r7]
   22b9c:	ldr	r0, [r7, #4]
   22ba0:	ldr	r1, [r7, #8]
   22ba4:	ldr	r6, [r7, #12]
   22ba8:	ldr	r5, [r7, #16]
   22bac:	ldr	r4, [r7, #20]
   22bb0:	ldr	r2, [r7, #24]
   22bb4:	ldr	lr, [r7, #28]
   22bb8:	ldr	r7, [r7, #32]
   22bbc:	stm	sp, {r0, r1, r6}
   22bc0:	str	r5, [sp, #12]
   22bc4:	str	r4, [sp, #16]
   22bc8:	str	r2, [sp, #20]
   22bcc:	str	lr, [sp, #24]
   22bd0:	str	r7, [sp, #28]
   22bd4:	b	22c1c <_obstack_memory_used@@Base+0x2854>
   22bd8:	movw	r1, #35071	; 0x88ff
   22bdc:	movt	r1, #2
   22be0:	mov	r0, #0
   22be4:	mov	r2, #5
   22be8:	bl	11dbc <dcgettext@plt>
   22bec:	mov	ip, r0
   22bf0:	ldr	r3, [r7]
   22bf4:	ldmib	r7, {r0, r1, r6}
   22bf8:	ldr	r5, [r7, #16]
   22bfc:	ldr	r4, [r7, #20]
   22c00:	ldr	r2, [r7, #24]
   22c04:	ldr	r7, [r7, #28]
   22c08:	stm	sp, {r0, r1, r6}
   22c0c:	str	r5, [sp, #12]
   22c10:	str	r4, [sp, #16]
   22c14:	str	r2, [sp, #20]
   22c18:	str	r7, [sp, #24]
   22c1c:	mov	r0, r8
   22c20:	mov	r1, #1
   22c24:	mov	r2, ip
   22c28:	bl	12044 <__fprintf_chk@plt>
   22c2c:	sub	sp, fp, #24
   22c30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22c34:	push	{r4, sl, fp, lr}
   22c38:	add	fp, sp, #8
   22c3c:	sub	sp, sp, #8
   22c40:	mov	lr, #0
   22c44:	ldr	ip, [fp, #8]
   22c48:	ldr	r4, [ip, lr, lsl #2]
   22c4c:	add	lr, lr, #1
   22c50:	cmp	r4, #0
   22c54:	bne	22c48 <_obstack_memory_used@@Base+0x2880>
   22c58:	sub	r4, lr, #1
   22c5c:	str	ip, [sp]
   22c60:	str	r4, [sp, #4]
   22c64:	bl	22900 <_obstack_memory_used@@Base+0x2538>
   22c68:	sub	sp, fp, #8
   22c6c:	pop	{r4, sl, fp, pc}
   22c70:	push	{r4, r5, fp, lr}
   22c74:	add	fp, sp, #8
   22c78:	sub	sp, sp, #48	; 0x30
   22c7c:	mov	ip, #0
   22c80:	ldr	r4, [fp, #8]
   22c84:	add	lr, sp, #8
   22c88:	ldr	r5, [r4]
   22c8c:	str	r5, [lr, ip, lsl #2]
   22c90:	cmp	r5, #0
   22c94:	beq	22ca8 <_obstack_memory_used@@Base+0x28e0>
   22c98:	add	ip, ip, #1
   22c9c:	add	r4, r4, #4
   22ca0:	cmp	ip, #10
   22ca4:	bcc	22c88 <_obstack_memory_used@@Base+0x28c0>
   22ca8:	str	lr, [sp]
   22cac:	str	ip, [sp, #4]
   22cb0:	bl	22900 <_obstack_memory_used@@Base+0x2538>
   22cb4:	sub	sp, fp, #8
   22cb8:	pop	{r4, r5, fp, pc}
   22cbc:	push	{fp, lr}
   22cc0:	mov	fp, sp
   22cc4:	sub	sp, sp, #8
   22cc8:	add	ip, fp, #8
   22ccc:	str	ip, [sp, #4]
   22cd0:	str	ip, [sp]
   22cd4:	bl	22c70 <_obstack_memory_used@@Base+0x28a8>
   22cd8:	mov	sp, fp
   22cdc:	pop	{fp, pc}
   22ce0:	push	{fp, lr}
   22ce4:	mov	fp, sp
   22ce8:	movw	r0, #37668	; 0x9324
   22cec:	movt	r0, #3
   22cf0:	ldr	r1, [r0]
   22cf4:	movw	r0, #28013	; 0x6d6d
   22cf8:	movt	r0, #2
   22cfc:	bl	11c84 <fputs_unlocked@plt>
   22d00:	movw	r1, #35231	; 0x899f
   22d04:	movt	r1, #2
   22d08:	mov	r0, #0
   22d0c:	mov	r2, #5
   22d10:	bl	11dbc <dcgettext@plt>
   22d14:	mov	r1, r0
   22d18:	movw	r2, #35251	; 0x89b3
   22d1c:	movt	r2, #2
   22d20:	mov	r0, #1
   22d24:	bl	12014 <__printf_chk@plt>
   22d28:	movw	r1, #35273	; 0x89c9
   22d2c:	movt	r1, #2
   22d30:	mov	r0, #0
   22d34:	mov	r2, #5
   22d38:	bl	11dbc <dcgettext@plt>
   22d3c:	mov	r1, r0
   22d40:	movw	r2, #25819	; 0x64db
   22d44:	movt	r2, #2
   22d48:	movw	r3, #27822	; 0x6cae
   22d4c:	movt	r3, #2
   22d50:	mov	r0, #1
   22d54:	bl	12014 <__printf_chk@plt>
   22d58:	movw	r1, #35293	; 0x89dd
   22d5c:	movt	r1, #2
   22d60:	mov	r0, #0
   22d64:	mov	r2, #5
   22d68:	bl	11dbc <dcgettext@plt>
   22d6c:	mov	r1, r0
   22d70:	movw	r2, #35332	; 0x8a04
   22d74:	movt	r2, #2
   22d78:	mov	r0, #1
   22d7c:	pop	{fp, lr}
   22d80:	b	12014 <__printf_chk@plt>
   22d84:	b	22d88 <_obstack_memory_used@@Base+0x29c0>
   22d88:	push	{r4, r5, r6, sl, fp, lr}
   22d8c:	add	fp, sp, #16
   22d90:	mov	r4, r2
   22d94:	mov	r5, r1
   22d98:	mov	r6, r0
   22d9c:	bl	23f34 <_obstack_memory_used@@Base+0x3b6c>
   22da0:	cmp	r0, #0
   22da4:	popne	{r4, r5, r6, sl, fp, pc}
   22da8:	cmp	r6, #0
   22dac:	beq	22dc0 <_obstack_memory_used@@Base+0x29f8>
   22db0:	cmp	r5, #0
   22db4:	cmpne	r4, #0
   22db8:	bne	22dc0 <_obstack_memory_used@@Base+0x29f8>
   22dbc:	pop	{r4, r5, r6, sl, fp, pc}
   22dc0:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   22dc4:	push	{fp, lr}
   22dc8:	mov	fp, sp
   22dcc:	bl	23a64 <_obstack_memory_used@@Base+0x369c>
   22dd0:	bl	22dd8 <_obstack_memory_used@@Base+0x2a10>
   22dd4:	pop	{fp, pc}
   22dd8:	cmp	r0, #0
   22ddc:	bxne	lr
   22de0:	push	{fp, lr}
   22de4:	mov	fp, sp
   22de8:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   22dec:	push	{fp, lr}
   22df0:	mov	fp, sp
   22df4:	bl	23ec8 <_obstack_memory_used@@Base+0x3b00>
   22df8:	bl	22dd8 <_obstack_memory_used@@Base+0x2a10>
   22dfc:	pop	{fp, pc}
   22e00:	b	22dc4 <_obstack_memory_used@@Base+0x29fc>
   22e04:	push	{r4, r5, fp, lr}
   22e08:	add	fp, sp, #8
   22e0c:	mov	r4, r1
   22e10:	mov	r5, r0
   22e14:	bl	23a94 <_obstack_memory_used@@Base+0x36cc>
   22e18:	cmp	r0, #0
   22e1c:	popne	{r4, r5, fp, pc}
   22e20:	cmp	r5, #0
   22e24:	beq	22e34 <_obstack_memory_used@@Base+0x2a6c>
   22e28:	cmp	r4, #0
   22e2c:	bne	22e34 <_obstack_memory_used@@Base+0x2a6c>
   22e30:	pop	{r4, r5, fp, pc}
   22e34:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   22e38:	push	{fp, lr}
   22e3c:	mov	fp, sp
   22e40:	bl	23ecc <_obstack_memory_used@@Base+0x3b04>
   22e44:	bl	22dd8 <_obstack_memory_used@@Base+0x2a10>
   22e48:	pop	{fp, pc}
   22e4c:	push	{fp, lr}
   22e50:	mov	fp, sp
   22e54:	bl	23edc <_obstack_memory_used@@Base+0x3b14>
   22e58:	bl	22dd8 <_obstack_memory_used@@Base+0x2a10>
   22e5c:	pop	{fp, pc}
   22e60:	push	{fp, lr}
   22e64:	mov	fp, sp
   22e68:	mov	r2, r1
   22e6c:	mov	r1, r0
   22e70:	mov	r0, #0
   22e74:	bl	22d88 <_obstack_memory_used@@Base+0x29c0>
   22e78:	pop	{fp, pc}
   22e7c:	mov	r2, r1
   22e80:	mov	r1, r0
   22e84:	mov	r0, #0
   22e88:	b	22e4c <_obstack_memory_used@@Base+0x2a84>
   22e8c:	mov	r2, #1
   22e90:	b	22e94 <_obstack_memory_used@@Base+0x2acc>
   22e94:	push	{r4, r5, fp, lr}
   22e98:	add	fp, sp, #8
   22e9c:	mov	r4, r1
   22ea0:	ldr	r5, [r1]
   22ea4:	cmp	r0, #0
   22ea8:	beq	22ec0 <_obstack_memory_used@@Base+0x2af8>
   22eac:	mov	r1, #1
   22eb0:	add	r1, r1, r5, lsr #1
   22eb4:	adds	r5, r5, r1
   22eb8:	bcc	22ed8 <_obstack_memory_used@@Base+0x2b10>
   22ebc:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   22ec0:	cmp	r5, #0
   22ec4:	bne	22ed8 <_obstack_memory_used@@Base+0x2b10>
   22ec8:	mov	r1, #64	; 0x40
   22ecc:	udiv	r5, r1, r2
   22ed0:	cmp	r2, #64	; 0x40
   22ed4:	addhi	r5, r5, #1
   22ed8:	mov	r1, r5
   22edc:	bl	22d88 <_obstack_memory_used@@Base+0x29c0>
   22ee0:	str	r5, [r4]
   22ee4:	pop	{r4, r5, fp, pc}
   22ee8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22eec:	add	fp, sp, #24
   22ef0:	mov	r8, r1
   22ef4:	ldr	r6, [r1]
   22ef8:	add	r1, r6, r6, asr #1
   22efc:	cmp	r1, r6
   22f00:	mvnvs	r1, #-2147483648	; 0x80000000
   22f04:	cmp	r1, r3
   22f08:	mov	r5, r1
   22f0c:	movgt	r5, r3
   22f10:	cmn	r3, #1
   22f14:	movle	r5, r1
   22f18:	ldr	r4, [fp, #8]
   22f1c:	cmn	r4, #1
   22f20:	ble	22f48 <_obstack_memory_used@@Base+0x2b80>
   22f24:	cmp	r4, #0
   22f28:	beq	22f9c <_obstack_memory_used@@Base+0x2bd4>
   22f2c:	cmn	r5, #1
   22f30:	ble	22f70 <_obstack_memory_used@@Base+0x2ba8>
   22f34:	mvn	r7, #-2147483648	; 0x80000000
   22f38:	udiv	r1, r7, r4
   22f3c:	cmp	r1, r5
   22f40:	bge	22f9c <_obstack_memory_used@@Base+0x2bd4>
   22f44:	b	22fac <_obstack_memory_used@@Base+0x2be4>
   22f48:	cmn	r5, #1
   22f4c:	ble	22f8c <_obstack_memory_used@@Base+0x2bc4>
   22f50:	cmn	r4, #1
   22f54:	beq	22f9c <_obstack_memory_used@@Base+0x2bd4>
   22f58:	mov	r1, #-2147483648	; 0x80000000
   22f5c:	sdiv	r1, r1, r4
   22f60:	mvn	r7, #-2147483648	; 0x80000000
   22f64:	cmp	r1, r5
   22f68:	bge	22f9c <_obstack_memory_used@@Base+0x2bd4>
   22f6c:	b	22fac <_obstack_memory_used@@Base+0x2be4>
   22f70:	beq	22f9c <_obstack_memory_used@@Base+0x2bd4>
   22f74:	mov	r1, #-2147483648	; 0x80000000
   22f78:	sdiv	r1, r1, r5
   22f7c:	mvn	r7, #-2147483648	; 0x80000000
   22f80:	cmp	r1, r4
   22f84:	bge	22f9c <_obstack_memory_used@@Base+0x2bd4>
   22f88:	b	22fac <_obstack_memory_used@@Base+0x2be4>
   22f8c:	mvn	r7, #-2147483648	; 0x80000000
   22f90:	sdiv	r1, r7, r4
   22f94:	cmp	r5, r1
   22f98:	blt	22fac <_obstack_memory_used@@Base+0x2be4>
   22f9c:	mul	r1, r5, r4
   22fa0:	mov	r7, #64	; 0x40
   22fa4:	cmp	r1, #63	; 0x3f
   22fa8:	bgt	22fb4 <_obstack_memory_used@@Base+0x2bec>
   22fac:	sdiv	r5, r7, r4
   22fb0:	mul	r1, r5, r4
   22fb4:	cmp	r0, #0
   22fb8:	moveq	r7, #0
   22fbc:	streq	r7, [r8]
   22fc0:	sub	r7, r5, r6
   22fc4:	cmp	r7, r2
   22fc8:	bge	23074 <_obstack_memory_used@@Base+0x2cac>
   22fcc:	add	r5, r6, r2
   22fd0:	mov	r1, #0
   22fd4:	cmp	r5, r3
   22fd8:	mov	r2, #0
   22fdc:	movwgt	r2, #1
   22fe0:	cmn	r3, #1
   22fe4:	movwgt	r1, #1
   22fe8:	cmp	r5, r6
   22fec:	bvs	2305c <_obstack_memory_used@@Base+0x2c94>
   22ff0:	ands	r1, r1, r2
   22ff4:	bne	2305c <_obstack_memory_used@@Base+0x2c94>
   22ff8:	cmn	r4, #1
   22ffc:	ble	23024 <_obstack_memory_used@@Base+0x2c5c>
   23000:	cmp	r4, #0
   23004:	beq	23070 <_obstack_memory_used@@Base+0x2ca8>
   23008:	cmn	r5, #1
   2300c:	ble	23048 <_obstack_memory_used@@Base+0x2c80>
   23010:	mvn	r1, #-2147483648	; 0x80000000
   23014:	udiv	r1, r1, r4
   23018:	cmp	r1, r5
   2301c:	bge	23070 <_obstack_memory_used@@Base+0x2ca8>
   23020:	b	2305c <_obstack_memory_used@@Base+0x2c94>
   23024:	cmn	r5, #1
   23028:	ble	23060 <_obstack_memory_used@@Base+0x2c98>
   2302c:	cmn	r4, #1
   23030:	beq	23070 <_obstack_memory_used@@Base+0x2ca8>
   23034:	mov	r1, #-2147483648	; 0x80000000
   23038:	sdiv	r1, r1, r4
   2303c:	cmp	r1, r5
   23040:	bge	23070 <_obstack_memory_used@@Base+0x2ca8>
   23044:	b	2305c <_obstack_memory_used@@Base+0x2c94>
   23048:	beq	23070 <_obstack_memory_used@@Base+0x2ca8>
   2304c:	mov	r1, #-2147483648	; 0x80000000
   23050:	sdiv	r1, r1, r5
   23054:	cmp	r1, r4
   23058:	bge	23070 <_obstack_memory_used@@Base+0x2ca8>
   2305c:	bl	23174 <_obstack_memory_used@@Base+0x2dac>
   23060:	mvn	r1, #-2147483648	; 0x80000000
   23064:	sdiv	r1, r1, r4
   23068:	cmp	r5, r1
   2306c:	blt	2305c <_obstack_memory_used@@Base+0x2c94>
   23070:	mul	r1, r5, r4
   23074:	bl	22e04 <_obstack_memory_used@@Base+0x2a3c>
   23078:	str	r5, [r8]
   2307c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23080:	mov	r1, #1
   23084:	b	23088 <_obstack_memory_used@@Base+0x2cc0>
   23088:	push	{fp, lr}
   2308c:	mov	fp, sp
   23090:	bl	23a10 <_obstack_memory_used@@Base+0x3648>
   23094:	bl	22dd8 <_obstack_memory_used@@Base+0x2a10>
   23098:	pop	{fp, pc}
   2309c:	mov	r1, #1
   230a0:	b	230a4 <_obstack_memory_used@@Base+0x2cdc>
   230a4:	push	{fp, lr}
   230a8:	mov	fp, sp
   230ac:	bl	23ed8 <_obstack_memory_used@@Base+0x3b10>
   230b0:	bl	22dd8 <_obstack_memory_used@@Base+0x2a10>
   230b4:	pop	{fp, pc}
   230b8:	push	{r4, r5, r6, sl, fp, lr}
   230bc:	add	fp, sp, #16
   230c0:	mov	r4, r1
   230c4:	mov	r5, r0
   230c8:	mov	r0, r1
   230cc:	bl	22dc4 <_obstack_memory_used@@Base+0x29fc>
   230d0:	mov	r6, r0
   230d4:	mov	r1, r5
   230d8:	mov	r2, r4
   230dc:	bl	11d74 <memcpy@plt>
   230e0:	mov	r0, r6
   230e4:	pop	{r4, r5, r6, sl, fp, pc}
   230e8:	push	{r4, r5, r6, sl, fp, lr}
   230ec:	add	fp, sp, #16
   230f0:	mov	r4, r1
   230f4:	mov	r5, r0
   230f8:	mov	r0, r1
   230fc:	bl	22dec <_obstack_memory_used@@Base+0x2a24>
   23100:	mov	r6, r0
   23104:	mov	r1, r5
   23108:	mov	r2, r4
   2310c:	bl	11d74 <memcpy@plt>
   23110:	mov	r0, r6
   23114:	pop	{r4, r5, r6, sl, fp, pc}
   23118:	push	{r4, r5, r6, sl, fp, lr}
   2311c:	add	fp, sp, #16
   23120:	mov	r4, r1
   23124:	mov	r5, r0
   23128:	add	r0, r1, #1
   2312c:	bl	22dec <_obstack_memory_used@@Base+0x2a24>
   23130:	mov	r6, r0
   23134:	mov	r0, #0
   23138:	strb	r0, [r6, r4]
   2313c:	mov	r0, r6
   23140:	mov	r1, r5
   23144:	mov	r2, r4
   23148:	bl	11d74 <memcpy@plt>
   2314c:	mov	r0, r6
   23150:	pop	{r4, r5, r6, sl, fp, pc}
   23154:	push	{r4, sl, fp, lr}
   23158:	add	fp, sp, #8
   2315c:	mov	r4, r0
   23160:	bl	11fc0 <strlen@plt>
   23164:	add	r1, r0, #1
   23168:	mov	r0, r4
   2316c:	pop	{r4, sl, fp, lr}
   23170:	b	230b8 <_obstack_memory_used@@Base+0x2cf0>
   23174:	push	{fp, lr}
   23178:	mov	fp, sp
   2317c:	movw	r0, #37572	; 0x92c4
   23180:	movt	r0, #3
   23184:	ldr	r4, [r0]
   23188:	movw	r1, #34367	; 0x863f
   2318c:	movt	r1, #2
   23190:	mov	r0, #0
   23194:	mov	r2, #5
   23198:	bl	11dbc <dcgettext@plt>
   2319c:	mov	r3, r0
   231a0:	movw	r2, #34094	; 0x852e
   231a4:	movt	r2, #2
   231a8:	mov	r0, r4
   231ac:	mov	r1, #0
   231b0:	bl	11ec4 <error@plt>
   231b4:	bl	1214c <abort@plt>
   231b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   231bc:	add	fp, sp, #24
   231c0:	sub	sp, sp, #16
   231c4:	mov	r5, r3
   231c8:	mov	r6, r2
   231cc:	mov	r2, r1
   231d0:	mov	r8, r0
   231d4:	ldr	r0, [fp, #16]
   231d8:	str	r0, [sp]
   231dc:	add	r3, sp, #8
   231e0:	mov	r0, r8
   231e4:	mov	r1, #0
   231e8:	bl	234dc <_obstack_memory_used@@Base+0x3114>
   231ec:	cmp	r0, #0
   231f0:	bne	23280 <_obstack_memory_used@@Base+0x2eb8>
   231f4:	ldr	r7, [sp, #8]
   231f8:	ldr	r4, [sp, #12]
   231fc:	subs	r0, r7, r6
   23200:	sbcs	r0, r4, r5
   23204:	bcc	23228 <_obstack_memory_used@@Base+0x2e60>
   23208:	ldr	r0, [fp, #12]
   2320c:	ldr	r1, [fp, #8]
   23210:	subs	r1, r1, r7
   23214:	sbcs	r0, r0, r4
   23218:	ldrcs	r0, [sp, #8]
   2321c:	ldrcs	r1, [sp, #12]
   23220:	subcs	sp, fp, #24
   23224:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   23228:	bl	11fe4 <__errno_location@plt>
   2322c:	subs	r1, r7, #1073741824	; 0x40000000
   23230:	sbcs	r1, r4, #0
   23234:	movcc	r1, #34	; 0x22
   23238:	movcs	r1, #75	; 0x4b
   2323c:	str	r1, [r0]
   23240:	ldr	r5, [fp, #24]
   23244:	ldr	r6, [fp, #20]
   23248:	bl	11fe4 <__errno_location@plt>
   2324c:	ldr	r4, [r0]
   23250:	mov	r0, r8
   23254:	bl	21c78 <_obstack_memory_used@@Base+0x18b0>
   23258:	str	r0, [sp]
   2325c:	subs	r1, r4, #22
   23260:	movne	r1, r4
   23264:	cmp	r5, #0
   23268:	movweq	r5, #1
   2326c:	movw	r2, #25675	; 0x644b
   23270:	movt	r2, #2
   23274:	mov	r0, r5
   23278:	mov	r3, r6
   2327c:	bl	11ec4 <error@plt>
   23280:	cmp	r0, #1
   23284:	beq	2329c <_obstack_memory_used@@Base+0x2ed4>
   23288:	cmp	r0, #3
   2328c:	bne	23240 <_obstack_memory_used@@Base+0x2e78>
   23290:	bl	11fe4 <__errno_location@plt>
   23294:	mov	r1, #0
   23298:	b	2323c <_obstack_memory_used@@Base+0x2e74>
   2329c:	bl	11fe4 <__errno_location@plt>
   232a0:	mov	r1, #75	; 0x4b
   232a4:	b	2323c <_obstack_memory_used@@Base+0x2e74>
   232a8:	mov	r1, #10
   232ac:	b	231b8 <_obstack_memory_used@@Base+0x2df0>
   232b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   232b4:	add	fp, sp, #28
   232b8:	sub	sp, sp, #108	; 0x6c
   232bc:	mov	r0, #100	; 0x64
   232c0:	str	r0, [sp, #4]
   232c4:	mov	r9, #0
   232c8:	add	r7, sp, #8
   232cc:	bl	11fe4 <__errno_location@plt>
   232d0:	mov	r4, r0
   232d4:	mov	sl, #1
   232d8:	add	r8, sp, #4
   232dc:	mov	r6, #0
   232e0:	b	23304 <_obstack_memory_used@@Base+0x2f3c>
   232e4:	str	sl, [sp]
   232e8:	mov	r0, #0
   232ec:	mov	r1, r8
   232f0:	mov	r2, #1
   232f4:	mvn	r3, #0
   232f8:	bl	22ee8 <_obstack_memory_used@@Base+0x2b20>
   232fc:	mov	r6, r0
   23300:	mov	r7, r0
   23304:	ldr	r0, [sp, #4]
   23308:	sub	r5, r0, #1
   2330c:	strb	r9, [r7, r5]
   23310:	str	r9, [r4]
   23314:	mov	r0, r7
   23318:	mov	r1, r5
   2331c:	bl	11ed0 <gethostname@plt>
   23320:	cmp	r0, #0
   23324:	bne	23340 <_obstack_memory_used@@Base+0x2f78>
   23328:	mov	r0, r7
   2332c:	bl	11fc0 <strlen@plt>
   23330:	add	r1, r0, #1
   23334:	cmp	r1, r5
   23338:	blt	23400 <_obstack_memory_used@@Base+0x3038>
   2333c:	str	r9, [r4]
   23340:	mov	r0, r6
   23344:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   23348:	ldr	r0, [r4]
   2334c:	cmp	r0, #36	; 0x24
   23350:	bhi	233f0 <_obstack_memory_used@@Base+0x3028>
   23354:	add	r1, pc, #0
   23358:	ldr	pc, [r1, r0, lsl #2]
   2335c:	andeq	r3, r2, r4, ror #5
   23360:	strdeq	r3, [r2], -r0
   23364:	strdeq	r3, [r2], -r0
   23368:	strdeq	r3, [r2], -r0
   2336c:	strdeq	r3, [r2], -r0
   23370:	strdeq	r3, [r2], -r0
   23374:	strdeq	r3, [r2], -r0
   23378:	strdeq	r3, [r2], -r0
   2337c:	strdeq	r3, [r2], -r0
   23380:	strdeq	r3, [r2], -r0
   23384:	strdeq	r3, [r2], -r0
   23388:	strdeq	r3, [r2], -r0
   2338c:	andeq	r3, r2, r4, ror #5
   23390:	strdeq	r3, [r2], -r0
   23394:	strdeq	r3, [r2], -r0
   23398:	strdeq	r3, [r2], -r0
   2339c:	strdeq	r3, [r2], -r0
   233a0:	strdeq	r3, [r2], -r0
   233a4:	strdeq	r3, [r2], -r0
   233a8:	strdeq	r3, [r2], -r0
   233ac:	strdeq	r3, [r2], -r0
   233b0:	strdeq	r3, [r2], -r0
   233b4:	andeq	r3, r2, r4, ror #5
   233b8:	strdeq	r3, [r2], -r0
   233bc:	strdeq	r3, [r2], -r0
   233c0:	strdeq	r3, [r2], -r0
   233c4:	strdeq	r3, [r2], -r0
   233c8:	strdeq	r3, [r2], -r0
   233cc:	strdeq	r3, [r2], -r0
   233d0:	strdeq	r3, [r2], -r0
   233d4:	strdeq	r3, [r2], -r0
   233d8:	strdeq	r3, [r2], -r0
   233dc:	strdeq	r3, [r2], -r0
   233e0:	strdeq	r3, [r2], -r0
   233e4:	strdeq	r3, [r2], -r0
   233e8:	strdeq	r3, [r2], -r0
   233ec:	andeq	r3, r2, r4, ror #5
   233f0:	mov	r6, #0
   233f4:	mov	r0, r6
   233f8:	sub	sp, fp, #28
   233fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23400:	cmp	r6, #0
   23404:	bne	233f4 <_obstack_memory_used@@Base+0x302c>
   23408:	mov	r0, r7
   2340c:	bl	230e8 <_obstack_memory_used@@Base+0x2d20>
   23410:	mov	r6, r0
   23414:	b	233f4 <_obstack_memory_used@@Base+0x302c>
   23418:	push	{fp, lr}
   2341c:	mov	fp, sp
   23420:	sub	sp, sp, #8
   23424:	movw	ip, #37572	; 0x92c4
   23428:	movt	ip, #3
   2342c:	ldr	ip, [ip]
   23430:	str	ip, [sp, #4]
   23434:	ldr	ip, [fp, #8]
   23438:	str	ip, [sp]
   2343c:	bl	23444 <_obstack_memory_used@@Base+0x307c>
   23440:	bl	1214c <abort@plt>
   23444:	push	{r4, r5, r6, r7, fp, lr}
   23448:	add	fp, sp, #16
   2344c:	sub	sp, sp, #16
   23450:	sub	r0, r0, #1
   23454:	cmp	r0, #4
   23458:	bcs	234d8 <_obstack_memory_used@@Base+0x3110>
   2345c:	mov	r5, r1
   23460:	ldr	r4, [fp, #12]
   23464:	ldr	r6, [fp, #8]
   23468:	movw	r1, #35504	; 0x8ab0
   2346c:	movt	r1, #2
   23470:	ldr	r1, [r1, r0, lsl #2]
   23474:	cmn	r5, #1
   23478:	ble	2348c <_obstack_memory_used@@Base+0x30c4>
   2347c:	ldr	r7, [r3, r5, lsl #4]
   23480:	movw	r5, #35408	; 0x8a50
   23484:	movt	r5, #2
   23488:	b	234a8 <_obstack_memory_used@@Base+0x30e0>
   2348c:	mov	r0, #0
   23490:	strb	r0, [sp, #15]
   23494:	strb	r2, [sp, #14]
   23498:	movw	r0, #35408	; 0x8a50
   2349c:	movt	r0, #2
   234a0:	sub	r5, r0, r5
   234a4:	add	r7, sp, #14
   234a8:	mov	r0, #0
   234ac:	mov	r2, #5
   234b0:	bl	11dbc <dcgettext@plt>
   234b4:	mov	r2, r0
   234b8:	str	r7, [sp]
   234bc:	str	r6, [sp, #4]
   234c0:	mov	r0, r4
   234c4:	mov	r1, #0
   234c8:	mov	r3, r5
   234cc:	bl	11ec4 <error@plt>
   234d0:	sub	sp, fp, #16
   234d4:	pop	{r4, r5, r6, r7, fp, pc}
   234d8:	bl	1214c <abort@plt>
   234dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234e0:	add	fp, sp, #28
   234e4:	sub	sp, sp, #20
   234e8:	cmp	r2, #37	; 0x25
   234ec:	bcs	2391c <_obstack_memory_used@@Base+0x3554>
   234f0:	mov	r5, r2
   234f4:	mov	r6, r1
   234f8:	mov	r4, r0
   234fc:	str	r3, [sp, #4]
   23500:	ldr	sl, [fp, #8]
   23504:	bl	11fe4 <__errno_location@plt>
   23508:	mov	r7, r0
   2350c:	mov	r0, #0
   23510:	str	r0, [r7]
   23514:	bl	11f84 <__ctype_b_loc@plt>
   23518:	ldr	r1, [r0]
   2351c:	mov	r2, r4
   23520:	ldrb	r0, [r2], #1
   23524:	add	r3, r1, r0, lsl #1
   23528:	ldrb	r3, [r3, #1]
   2352c:	tst	r3, #32
   23530:	bne	23520 <_obstack_memory_used@@Base+0x3158>
   23534:	add	r9, sp, #16
   23538:	cmp	r6, #0
   2353c:	movne	r9, r6
   23540:	mov	r8, #4
   23544:	cmp	r0, #45	; 0x2d
   23548:	beq	23910 <_obstack_memory_used@@Base+0x3548>
   2354c:	mov	r0, r4
   23550:	mov	r1, r9
   23554:	mov	r2, r5
   23558:	bl	12038 <strtoumax@plt>
   2355c:	str	r1, [sp, #12]
   23560:	str	r0, [sp, #8]
   23564:	ldr	r6, [r9]
   23568:	cmp	r6, r4
   2356c:	beq	23594 <_obstack_memory_used@@Base+0x31cc>
   23570:	ldr	r0, [r7]
   23574:	cmp	r0, #0
   23578:	beq	235c8 <_obstack_memory_used@@Base+0x3200>
   2357c:	cmp	r0, #34	; 0x22
   23580:	bne	23910 <_obstack_memory_used@@Base+0x3548>
   23584:	mov	r8, #1
   23588:	cmp	sl, #0
   2358c:	bne	235d4 <_obstack_memory_used@@Base+0x320c>
   23590:	b	23900 <_obstack_memory_used@@Base+0x3538>
   23594:	cmp	sl, #0
   23598:	ldrbne	r1, [r6]
   2359c:	cmpne	r1, #0
   235a0:	beq	23910 <_obstack_memory_used@@Base+0x3548>
   235a4:	mov	r0, sl
   235a8:	bl	11fcc <strchr@plt>
   235ac:	cmp	r0, #0
   235b0:	beq	23910 <_obstack_memory_used@@Base+0x3548>
   235b4:	mov	r8, #0
   235b8:	str	r8, [sp, #12]
   235bc:	mov	r0, #1
   235c0:	str	r0, [sp, #8]
   235c4:	b	235d4 <_obstack_memory_used@@Base+0x320c>
   235c8:	mov	r8, r0
   235cc:	cmp	sl, #0
   235d0:	beq	23900 <_obstack_memory_used@@Base+0x3538>
   235d4:	ldrb	r4, [r6]
   235d8:	cmp	r4, #0
   235dc:	beq	23900 <_obstack_memory_used@@Base+0x3538>
   235e0:	mov	r0, sl
   235e4:	mov	r1, r4
   235e8:	bl	11fcc <strchr@plt>
   235ec:	cmp	r0, #0
   235f0:	beq	23800 <_obstack_memory_used@@Base+0x3438>
   235f4:	sub	r0, r4, #69	; 0x45
   235f8:	mov	r7, #1
   235fc:	mov	r5, #1024	; 0x400
   23600:	cmp	r0, #47	; 0x2f
   23604:	bhi	236fc <_obstack_memory_used@@Base+0x3334>
   23608:	add	r1, pc, #0
   2360c:	ldr	pc, [r1, r0, lsl #2]
   23610:	ldrdeq	r3, [r2], -r0
   23614:	strdeq	r3, [r2], -ip
   23618:	ldrdeq	r3, [r2], -r0
   2361c:	strdeq	r3, [r2], -ip
   23620:	strdeq	r3, [r2], -ip
   23624:	strdeq	r3, [r2], -ip
   23628:	ldrdeq	r3, [r2], -r0
   2362c:	strdeq	r3, [r2], -ip
   23630:	ldrdeq	r3, [r2], -r0
   23634:	strdeq	r3, [r2], -ip
   23638:	strdeq	r3, [r2], -ip
   2363c:	ldrdeq	r3, [r2], -r0
   23640:	strdeq	r3, [r2], -ip
   23644:	strdeq	r3, [r2], -ip
   23648:	strdeq	r3, [r2], -ip
   2364c:	ldrdeq	r3, [r2], -r0
   23650:	strdeq	r3, [r2], -ip
   23654:	strdeq	r3, [r2], -ip
   23658:	strdeq	r3, [r2], -ip
   2365c:	strdeq	r3, [r2], -ip
   23660:	ldrdeq	r3, [r2], -r0
   23664:	ldrdeq	r3, [r2], -r0
   23668:	strdeq	r3, [r2], -ip
   2366c:	strdeq	r3, [r2], -ip
   23670:	strdeq	r3, [r2], -ip
   23674:	strdeq	r3, [r2], -ip
   23678:	strdeq	r3, [r2], -ip
   2367c:	strdeq	r3, [r2], -ip
   23680:	strdeq	r3, [r2], -ip
   23684:	strdeq	r3, [r2], -ip
   23688:	strdeq	r3, [r2], -ip
   2368c:	strdeq	r3, [r2], -ip
   23690:	strdeq	r3, [r2], -ip
   23694:	strdeq	r3, [r2], -ip
   23698:	ldrdeq	r3, [r2], -r0
   2369c:	strdeq	r3, [r2], -ip
   236a0:	strdeq	r3, [r2], -ip
   236a4:	strdeq	r3, [r2], -ip
   236a8:	ldrdeq	r3, [r2], -r0
   236ac:	strdeq	r3, [r2], -ip
   236b0:	ldrdeq	r3, [r2], -r0
   236b4:	strdeq	r3, [r2], -ip
   236b8:	strdeq	r3, [r2], -ip
   236bc:	strdeq	r3, [r2], -ip
   236c0:	strdeq	r3, [r2], -ip
   236c4:	strdeq	r3, [r2], -ip
   236c8:	strdeq	r3, [r2], -ip
   236cc:	ldrdeq	r3, [r2], -r0
   236d0:	mov	r0, sl
   236d4:	mov	r1, #48	; 0x30
   236d8:	bl	11fcc <strchr@plt>
   236dc:	cmp	r0, #0
   236e0:	beq	236fc <_obstack_memory_used@@Base+0x3334>
   236e4:	ldrb	r0, [r6, #1]
   236e8:	cmp	r0, #66	; 0x42
   236ec:	cmpne	r0, #68	; 0x44
   236f0:	bne	23818 <_obstack_memory_used@@Base+0x3450>
   236f4:	mov	r7, #2
   236f8:	mov	r5, #1000	; 0x3e8
   236fc:	sub	r1, r4, #66	; 0x42
   23700:	cmp	r1, #53	; 0x35
   23704:	bhi	23800 <_obstack_memory_used@@Base+0x3438>
   23708:	mov	r0, #0
   2370c:	add	r2, pc, #0
   23710:	ldr	pc, [r2, r1, lsl #2]
   23714:	andeq	r3, r2, r4, lsl #17
   23718:	andeq	r3, r2, r0, lsl #16
   2371c:	andeq	r3, r2, r0, lsl #16
   23720:	muleq	r2, r0, r8
   23724:	andeq	r3, r2, r0, lsl #16
   23728:	andeq	r3, r2, ip, ror #15
   2372c:	andeq	r3, r2, r0, lsl #16
   23730:	andeq	r3, r2, r0, lsl #16
   23734:	andeq	r3, r2, r0, lsl #16
   23738:	andeq	r3, r2, r4, lsr r8
   2373c:	andeq	r3, r2, r0, lsl #16
   23740:	andeq	r3, r2, r8, asr #16
   23744:	andeq	r3, r2, r0, lsl #16
   23748:	andeq	r3, r2, r0, lsl #16
   2374c:	andeq	r3, r2, r4, lsr #17
   23750:	andeq	r3, r2, r0, lsl #16
   23754:	andeq	r3, r2, r0, lsl #16
   23758:	andeq	r3, r2, r0, lsl #16
   2375c:	andeq	r3, r2, ip, asr r8
   23760:	andeq	r3, r2, r0, lsl #16
   23764:	andeq	r3, r2, r0, lsl #16
   23768:	andeq	r3, r2, r0, lsl #16
   2376c:	andeq	r3, r2, r0, lsl #16
   23770:			; <UNDEFINED> instruction: 0x000238b8
   23774:	andeq	r3, r2, r0, ror r8
   23778:	andeq	r3, r2, r0, lsl #16
   2377c:	andeq	r3, r2, r0, lsl #16
   23780:	andeq	r3, r2, r0, lsl #16
   23784:	andeq	r3, r2, r0, lsl #16
   23788:	andeq	r3, r2, r0, lsl #16
   2378c:	andeq	r3, r2, r0, lsl #16
   23790:	andeq	r3, r2, r0, lsl #16
   23794:	andeq	r3, r2, ip, asr #17
   23798:	andeq	r3, r2, r4, ror #17
   2379c:	andeq	r3, r2, r0, lsl #16
   237a0:	andeq	r3, r2, r0, lsl #16
   237a4:	andeq	r3, r2, r0, lsl #16
   237a8:	andeq	r3, r2, ip, ror #15
   237ac:	andeq	r3, r2, r0, lsl #16
   237b0:	andeq	r3, r2, r0, lsl #16
   237b4:	andeq	r3, r2, r0, lsl #16
   237b8:	andeq	r3, r2, r4, lsr r8
   237bc:	andeq	r3, r2, r0, lsl #16
   237c0:	andeq	r3, r2, r8, asr #16
   237c4:	andeq	r3, r2, r0, lsl #16
   237c8:	andeq	r3, r2, r0, lsl #16
   237cc:	andeq	r3, r2, r0, lsl #16
   237d0:	andeq	r3, r2, r0, lsl #16
   237d4:	andeq	r3, r2, r0, lsl #16
   237d8:	andeq	r3, r2, r0, lsl #16
   237dc:	andeq	r3, r2, ip, asr r8
   237e0:	andeq	r3, r2, r0, lsl #16
   237e4:	andeq	r3, r2, r0, lsl #16
   237e8:	ldrdeq	r3, [r2], -r8
   237ec:	add	r0, sp, #8
   237f0:	mov	r1, r5
   237f4:	mov	r2, #3
   237f8:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   237fc:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   23800:	ldr	r0, [sp, #8]
   23804:	ldr	r1, [sp, #12]
   23808:	ldr	r2, [sp, #4]
   2380c:	strd	r0, [r2]
   23810:	orr	r8, r8, #2
   23814:	b	23910 <_obstack_memory_used@@Base+0x3548>
   23818:	cmp	r0, #105	; 0x69
   2381c:	bne	236fc <_obstack_memory_used@@Base+0x3334>
   23820:	ldrb	r0, [r6, #2]
   23824:	mov	r7, #1
   23828:	cmp	r0, #66	; 0x42
   2382c:	movweq	r7, #3
   23830:	b	236fc <_obstack_memory_used@@Base+0x3334>
   23834:	add	r0, sp, #8
   23838:	mov	r1, r5
   2383c:	mov	r2, #1
   23840:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   23844:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   23848:	add	r0, sp, #8
   2384c:	mov	r1, r5
   23850:	mov	r2, #2
   23854:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   23858:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   2385c:	add	r0, sp, #8
   23860:	mov	r1, r5
   23864:	mov	r2, #4
   23868:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   2386c:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   23870:	add	r0, sp, #8
   23874:	mov	r1, r5
   23878:	mov	r2, #7
   2387c:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   23880:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   23884:	add	r0, sp, #8
   23888:	mov	r1, #1024	; 0x400
   2388c:	b	238e0 <_obstack_memory_used@@Base+0x3518>
   23890:	add	r0, sp, #8
   23894:	mov	r1, r5
   23898:	mov	r2, #6
   2389c:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   238a0:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   238a4:	add	r0, sp, #8
   238a8:	mov	r1, r5
   238ac:	mov	r2, #5
   238b0:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   238b4:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   238b8:	add	r0, sp, #8
   238bc:	mov	r1, r5
   238c0:	mov	r2, #8
   238c4:	bl	239c8 <_obstack_memory_used@@Base+0x3600>
   238c8:	b	238e4 <_obstack_memory_used@@Base+0x351c>
   238cc:	add	r0, sp, #8
   238d0:	mov	r1, #512	; 0x200
   238d4:	b	238e0 <_obstack_memory_used@@Base+0x3518>
   238d8:	add	r0, sp, #8
   238dc:	mov	r1, #2
   238e0:	bl	2393c <_obstack_memory_used@@Base+0x3574>
   238e4:	ldr	r1, [r9]
   238e8:	add	r2, r1, r7
   238ec:	str	r2, [r9]
   238f0:	ldrb	r1, [r1, r7]
   238f4:	orr	r8, r0, r8
   238f8:	cmp	r1, #0
   238fc:	orrne	r8, r8, #2
   23900:	ldr	r0, [sp, #8]
   23904:	ldr	r1, [sp, #12]
   23908:	ldr	r2, [sp, #4]
   2390c:	strd	r0, [r2]
   23910:	mov	r0, r8
   23914:	sub	sp, fp, #28
   23918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2391c:	movw	r0, #35520	; 0x8ac0
   23920:	movt	r0, #2
   23924:	movw	r1, #35558	; 0x8ae6
   23928:	movt	r1, #2
   2392c:	movw	r3, #35574	; 0x8af6
   23930:	movt	r3, #2
   23934:	mov	r2, #85	; 0x55
   23938:	bl	121ac <__assert_fail@plt>
   2393c:	push	{r4, r5, r6, r7, fp, lr}
   23940:	add	fp, sp, #16
   23944:	mov	r5, r1
   23948:	mov	r4, r0
   2394c:	cmn	r1, #1
   23950:	ble	23988 <_obstack_memory_used@@Base+0x35c0>
   23954:	cmp	r5, #0
   23958:	beq	239a8 <_obstack_memory_used@@Base+0x35e0>
   2395c:	asr	r3, r5, #31
   23960:	mvn	r6, #0
   23964:	mvn	r0, #0
   23968:	mvn	r1, #0
   2396c:	mov	r2, r5
   23970:	bl	24404 <_obstack_memory_used@@Base+0x403c>
   23974:	ldrd	r2, [r4]
   23978:	subs	r0, r0, r2
   2397c:	sbcs	r0, r1, r3
   23980:	bcc	23998 <_obstack_memory_used@@Base+0x35d0>
   23984:	b	239a8 <_obstack_memory_used@@Base+0x35e0>
   23988:	ldrd	r0, [r4]
   2398c:	orrs	r0, r0, r1
   23990:	beq	239a8 <_obstack_memory_used@@Base+0x35e0>
   23994:	mvn	r6, #0
   23998:	mov	r0, #1
   2399c:	mvn	r7, #0
   239a0:	strd	r6, [r4]
   239a4:	pop	{r4, r5, r6, r7, fp, pc}
   239a8:	ldrd	r0, [r4]
   239ac:	umull	r6, r2, r0, r5
   239b0:	asr	r3, r5, #31
   239b4:	mla	r0, r0, r3, r2
   239b8:	mla	r7, r1, r5, r0
   239bc:	mov	r0, #0
   239c0:	strd	r6, [r4]
   239c4:	pop	{r4, r5, r6, r7, fp, pc}
   239c8:	push	{r4, r5, r6, r7, fp, lr}
   239cc:	add	fp, sp, #16
   239d0:	cmp	r2, #0
   239d4:	moveq	r6, #0
   239d8:	moveq	r0, r6
   239dc:	popeq	{r4, r5, r6, r7, fp, pc}
   239e0:	mov	r4, r2
   239e4:	mov	r5, r1
   239e8:	mov	r7, r0
   239ec:	mov	r6, #0
   239f0:	mov	r0, r7
   239f4:	mov	r1, r5
   239f8:	bl	2393c <_obstack_memory_used@@Base+0x3574>
   239fc:	orr	r6, r0, r6
   23a00:	subs	r4, r4, #1
   23a04:	bne	239f0 <_obstack_memory_used@@Base+0x3628>
   23a08:	mov	r0, r6
   23a0c:	pop	{r4, r5, r6, r7, fp, pc}
   23a10:	clz	r2, r1
   23a14:	lsr	r2, r2, #5
   23a18:	clz	r3, r0
   23a1c:	lsr	r3, r3, #5
   23a20:	orrs	r2, r3, r2
   23a24:	movwne	r1, #1
   23a28:	movwne	r0, #1
   23a2c:	cmp	r1, #0
   23a30:	beq	23a60 <_obstack_memory_used@@Base+0x3698>
   23a34:	mvn	r2, #-2147483648	; 0x80000000
   23a38:	udiv	r2, r2, r1
   23a3c:	cmp	r2, r0
   23a40:	bcs	23a60 <_obstack_memory_used@@Base+0x3698>
   23a44:	push	{fp, lr}
   23a48:	mov	fp, sp
   23a4c:	bl	11fe4 <__errno_location@plt>
   23a50:	mov	r1, #12
   23a54:	str	r1, [r0]
   23a58:	mov	r0, #0
   23a5c:	pop	{fp, pc}
   23a60:	b	11c78 <calloc@plt>
   23a64:	cmp	r0, #0
   23a68:	movweq	r0, #1
   23a6c:	cmn	r0, #1
   23a70:	ble	23a78 <_obstack_memory_used@@Base+0x36b0>
   23a74:	b	11f18 <malloc@plt>
   23a78:	push	{fp, lr}
   23a7c:	mov	fp, sp
   23a80:	bl	11fe4 <__errno_location@plt>
   23a84:	mov	r1, #12
   23a88:	str	r1, [r0]
   23a8c:	mov	r0, #0
   23a90:	pop	{fp, pc}
   23a94:	push	{fp, lr}
   23a98:	mov	fp, sp
   23a9c:	cmp	r0, #0
   23aa0:	beq	23abc <_obstack_memory_used@@Base+0x36f4>
   23aa4:	cmp	r1, #0
   23aa8:	beq	23ac8 <_obstack_memory_used@@Base+0x3700>
   23aac:	cmn	r1, #1
   23ab0:	ble	23ad4 <_obstack_memory_used@@Base+0x370c>
   23ab4:	pop	{fp, lr}
   23ab8:	b	11dc8 <realloc@plt>
   23abc:	mov	r0, r1
   23ac0:	pop	{fp, lr}
   23ac4:	b	23a64 <_obstack_memory_used@@Base+0x369c>
   23ac8:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   23acc:	mov	r0, #0
   23ad0:	pop	{fp, pc}
   23ad4:	bl	11fe4 <__errno_location@plt>
   23ad8:	mov	r1, #12
   23adc:	str	r1, [r0]
   23ae0:	mov	r0, #0
   23ae4:	pop	{fp, pc}
   23ae8:	push	{r4, r5, fp, lr}
   23aec:	add	fp, sp, #8
   23af0:	rsb	lr, r2, #64	; 0x40
   23af4:	lsr	ip, r0, lr
   23af8:	rsb	r3, lr, #32
   23afc:	orr	ip, ip, r1, lsl r3
   23b00:	rsb	r4, r2, #32
   23b04:	cmp	r4, #0
   23b08:	lsrge	ip, r1, r4
   23b0c:	lsl	r3, r0, r2
   23b10:	sub	r5, r2, #32
   23b14:	cmp	r5, #0
   23b18:	movwge	r3, #0
   23b1c:	orr	ip, ip, r3
   23b20:	lsr	r3, r0, r4
   23b24:	orr	r2, r3, r1, lsl r2
   23b28:	lslge	r2, r0, r5
   23b2c:	lsr	r0, r1, lr
   23b30:	cmp	r4, #0
   23b34:	movwge	r0, #0
   23b38:	orr	r1, r0, r2
   23b3c:	mov	r0, ip
   23b40:	pop	{r4, r5, fp, pc}
   23b44:	push	{r4, r5, fp, lr}
   23b48:	add	fp, sp, #8
   23b4c:	lsr	ip, r0, r2
   23b50:	rsb	r3, r2, #32
   23b54:	orr	ip, ip, r1, lsl r3
   23b58:	sub	lr, r2, #32
   23b5c:	cmp	lr, #0
   23b60:	lsrge	ip, r1, lr
   23b64:	rsb	r4, r2, #64	; 0x40
   23b68:	lsl	r5, r0, r4
   23b6c:	cmp	r3, #0
   23b70:	movwge	r5, #0
   23b74:	orr	ip, r5, ip
   23b78:	rsb	r5, r4, #32
   23b7c:	lsr	r5, r0, r5
   23b80:	orr	r4, r5, r1, lsl r4
   23b84:	cmp	r3, #0
   23b88:	lslge	r4, r0, r3
   23b8c:	lsr	r0, r1, r2
   23b90:	cmp	lr, #0
   23b94:	movwge	r0, #0
   23b98:	orr	r1, r4, r0
   23b9c:	mov	r0, ip
   23ba0:	pop	{r4, r5, fp, pc}
   23ba4:	rsb	r1, r1, #32
   23ba8:	ror	r0, r0, r1
   23bac:	bx	lr
   23bb0:	ror	r0, r0, r1
   23bb4:	bx	lr
   23bb8:	rsb	r1, r1, #32
   23bbc:	ror	r0, r0, r1
   23bc0:	bx	lr
   23bc4:	ror	r0, r0, r1
   23bc8:	bx	lr
   23bcc:	and	r2, r1, #15
   23bd0:	lsl	r2, r0, r2
   23bd4:	rsb	r1, r1, #0
   23bd8:	and	r1, r1, #15
   23bdc:	orr	r0, r2, r0, lsr r1
   23be0:	uxth	r0, r0
   23be4:	bx	lr
   23be8:	and	r2, r1, #15
   23bec:	lsr	r2, r0, r2
   23bf0:	rsb	r1, r1, #0
   23bf4:	and	r1, r1, #15
   23bf8:	orr	r0, r2, r0, lsl r1
   23bfc:	uxth	r0, r0
   23c00:	bx	lr
   23c04:	and	r2, r1, #7
   23c08:	lsl	r2, r0, r2
   23c0c:	rsb	r1, r1, #0
   23c10:	and	r1, r1, #7
   23c14:	orr	r0, r2, r0, lsr r1
   23c18:	uxtb	r0, r0
   23c1c:	bx	lr
   23c20:	and	r2, r1, #7
   23c24:	lsr	r2, r0, r2
   23c28:	rsb	r1, r1, #0
   23c2c:	and	r1, r1, #7
   23c30:	orr	r0, r2, r0, lsl r1
   23c34:	uxtb	r0, r0
   23c38:	bx	lr
   23c3c:	push	{r4, r5, r6, sl, fp, lr}
   23c40:	add	fp, sp, #16
   23c44:	mov	r4, r0
   23c48:	bl	11e94 <__fpending@plt>
   23c4c:	mov	r5, r0
   23c50:	mov	r0, r4
   23c54:	bl	11ea0 <ferror_unlocked@plt>
   23c58:	mov	r6, r0
   23c5c:	mov	r0, r4
   23c60:	bl	23cc4 <_obstack_memory_used@@Base+0x38fc>
   23c64:	cmp	r6, #0
   23c68:	beq	23c88 <_obstack_memory_used@@Base+0x38c0>
   23c6c:	mvn	r4, #0
   23c70:	cmp	r0, #0
   23c74:	bne	23cbc <_obstack_memory_used@@Base+0x38f4>
   23c78:	bl	11fe4 <__errno_location@plt>
   23c7c:	mov	r1, #0
   23c80:	str	r1, [r0]
   23c84:	b	23cbc <_obstack_memory_used@@Base+0x38f4>
   23c88:	cmp	r0, #0
   23c8c:	mov	r4, r0
   23c90:	mvnne	r4, #0
   23c94:	cmp	r5, #0
   23c98:	bne	23cbc <_obstack_memory_used@@Base+0x38f4>
   23c9c:	cmp	r0, #0
   23ca0:	beq	23cbc <_obstack_memory_used@@Base+0x38f4>
   23ca4:	bl	11fe4 <__errno_location@plt>
   23ca8:	ldr	r0, [r0]
   23cac:	subs	r4, r0, #9
   23cb0:	mvnne	r4, #0
   23cb4:	mov	r0, r4
   23cb8:	pop	{r4, r5, r6, sl, fp, pc}
   23cbc:	mov	r0, r4
   23cc0:	pop	{r4, r5, r6, sl, fp, pc}
   23cc4:	push	{r4, r5, fp, lr}
   23cc8:	add	fp, sp, #8
   23ccc:	sub	sp, sp, #8
   23cd0:	mov	r4, r0
   23cd4:	bl	1202c <fileno@plt>
   23cd8:	cmn	r0, #1
   23cdc:	ble	23d54 <_obstack_memory_used@@Base+0x398c>
   23ce0:	mov	r0, r4
   23ce4:	bl	11f48 <__freading@plt>
   23ce8:	cmp	r0, #0
   23cec:	beq	23d18 <_obstack_memory_used@@Base+0x3950>
   23cf0:	mov	r0, r4
   23cf4:	bl	1202c <fileno@plt>
   23cf8:	mov	r1, #1
   23cfc:	str	r1, [sp]
   23d00:	mov	r2, #0
   23d04:	mov	r3, #0
   23d08:	bl	11e70 <lseek64@plt>
   23d0c:	and	r0, r0, r1
   23d10:	cmn	r0, #1
   23d14:	beq	23d54 <_obstack_memory_used@@Base+0x398c>
   23d18:	mov	r0, r4
   23d1c:	bl	23d64 <_obstack_memory_used@@Base+0x399c>
   23d20:	cmp	r0, #0
   23d24:	beq	23d54 <_obstack_memory_used@@Base+0x398c>
   23d28:	bl	11fe4 <__errno_location@plt>
   23d2c:	ldr	r5, [r0]
   23d30:	mov	r0, r4
   23d34:	bl	12050 <fclose@plt>
   23d38:	cmp	r5, #0
   23d3c:	beq	23d4c <_obstack_memory_used@@Base+0x3984>
   23d40:	bl	11fe4 <__errno_location@plt>
   23d44:	str	r5, [r0]
   23d48:	mvn	r0, #0
   23d4c:	sub	sp, fp, #8
   23d50:	pop	{r4, r5, fp, pc}
   23d54:	mov	r0, r4
   23d58:	sub	sp, fp, #8
   23d5c:	pop	{r4, r5, fp, lr}
   23d60:	b	12050 <fclose@plt>
   23d64:	push	{r4, sl, fp, lr}
   23d68:	add	fp, sp, #8
   23d6c:	mov	r4, r0
   23d70:	cmp	r0, #0
   23d74:	beq	23d8c <_obstack_memory_used@@Base+0x39c4>
   23d78:	mov	r0, r4
   23d7c:	bl	11f48 <__freading@plt>
   23d80:	cmp	r0, #0
   23d84:	movne	r0, r4
   23d88:	blne	23d98 <_obstack_memory_used@@Base+0x39d0>
   23d8c:	mov	r0, r4
   23d90:	pop	{r4, sl, fp, lr}
   23d94:	b	11d08 <fflush@plt>
   23d98:	ldrb	r1, [r0, #1]
   23d9c:	tst	r1, #1
   23da0:	bxeq	lr
   23da4:	push	{fp, lr}
   23da8:	mov	fp, sp
   23dac:	sub	sp, sp, #8
   23db0:	mov	r1, #1
   23db4:	str	r1, [sp]
   23db8:	mov	r2, #0
   23dbc:	mov	r3, #0
   23dc0:	bl	23dcc <_obstack_memory_used@@Base+0x3a04>
   23dc4:	mov	sp, fp
   23dc8:	pop	{fp, pc}
   23dcc:	push	{r4, r5, r6, r7, fp, lr}
   23dd0:	add	fp, sp, #16
   23dd4:	sub	sp, sp, #8
   23dd8:	mov	r5, r3
   23ddc:	mov	r6, r2
   23de0:	mov	r4, r0
   23de4:	ldr	r0, [r0, #4]
   23de8:	ldr	r1, [r4, #8]
   23dec:	cmp	r1, r0
   23df0:	bne	23e0c <_obstack_memory_used@@Base+0x3a44>
   23df4:	ldrd	r0, [r4, #16]
   23df8:	cmp	r1, r0
   23dfc:	bne	23e0c <_obstack_memory_used@@Base+0x3a44>
   23e00:	ldr	r0, [r4, #36]	; 0x24
   23e04:	cmp	r0, #0
   23e08:	beq	23e24 <_obstack_memory_used@@Base+0x3a5c>
   23e0c:	mov	r0, r4
   23e10:	mov	r2, r6
   23e14:	mov	r3, r5
   23e18:	sub	sp, fp, #16
   23e1c:	pop	{r4, r5, r6, r7, fp, lr}
   23e20:	b	1205c <fseeko64@plt>
   23e24:	ldr	r7, [fp, #8]
   23e28:	mov	r0, r4
   23e2c:	bl	1202c <fileno@plt>
   23e30:	str	r7, [sp]
   23e34:	mov	r2, r6
   23e38:	mov	r3, r5
   23e3c:	bl	11e70 <lseek64@plt>
   23e40:	and	r2, r0, r1
   23e44:	cmn	r2, #1
   23e48:	mvneq	r0, #0
   23e4c:	subeq	sp, fp, #16
   23e50:	popeq	{r4, r5, r6, r7, fp, pc}
   23e54:	strd	r0, [r4, #80]	; 0x50
   23e58:	ldr	r0, [r4]
   23e5c:	bic	r0, r0, #16
   23e60:	str	r0, [r4]
   23e64:	mov	r0, #0
   23e68:	sub	sp, fp, #16
   23e6c:	pop	{r4, r5, r6, r7, fp, pc}
   23e70:	ldrb	r2, [r0]
   23e74:	cmp	r2, #0
   23e78:	beq	23e9c <_obstack_memory_used@@Base+0x3ad4>
   23e7c:	add	r3, r0, #1
   23e80:	mov	r0, #0
   23e84:	ror	r0, r0, #23
   23e88:	uxtab	r0, r0, r2
   23e8c:	ldrb	r2, [r3], #1
   23e90:	cmp	r2, #0
   23e94:	bne	23e84 <_obstack_memory_used@@Base+0x3abc>
   23e98:	b	23ea0 <_obstack_memory_used@@Base+0x3ad8>
   23e9c:	mov	r0, #0
   23ea0:	udiv	r2, r0, r1
   23ea4:	mls	r0, r2, r1, r0
   23ea8:	bx	lr
   23eac:	push	{fp, lr}
   23eb0:	mov	fp, sp
   23eb4:	bl	11fe4 <__errno_location@plt>
   23eb8:	mov	r1, #12
   23ebc:	str	r1, [r0]
   23ec0:	mov	r0, #0
   23ec4:	pop	{fp, pc}
   23ec8:	b	23a64 <_obstack_memory_used@@Base+0x369c>
   23ecc:	cmp	r1, #0
   23ed0:	orreq	r1, r1, #1
   23ed4:	b	23a94 <_obstack_memory_used@@Base+0x36cc>
   23ed8:	b	23a10 <_obstack_memory_used@@Base+0x3648>
   23edc:	clz	r3, r2
   23ee0:	lsr	ip, r3, #5
   23ee4:	clz	r3, r1
   23ee8:	lsr	r3, r3, #5
   23eec:	orrs	r3, r3, ip
   23ef0:	movwne	r1, #1
   23ef4:	movwne	r2, #1
   23ef8:	b	23f34 <_obstack_memory_used@@Base+0x3b6c>
   23efc:	push	{fp, lr}
   23f00:	mov	fp, sp
   23f04:	mov	r0, #14
   23f08:	bl	120b0 <nl_langinfo@plt>
   23f0c:	movw	r1, #27261	; 0x6a7d
   23f10:	movt	r1, #2
   23f14:	cmp	r0, #0
   23f18:	movne	r1, r0
   23f1c:	ldrb	r2, [r1]
   23f20:	movw	r0, #35653	; 0x8b45
   23f24:	movt	r0, #2
   23f28:	cmp	r2, #0
   23f2c:	movne	r0, r1
   23f30:	pop	{fp, pc}
   23f34:	cmp	r2, #0
   23f38:	beq	23f68 <_obstack_memory_used@@Base+0x3ba0>
   23f3c:	mvn	r3, #0
   23f40:	udiv	r3, r3, r2
   23f44:	cmp	r3, r1
   23f48:	bcs	23f68 <_obstack_memory_used@@Base+0x3ba0>
   23f4c:	push	{fp, lr}
   23f50:	mov	fp, sp
   23f54:	bl	11fe4 <__errno_location@plt>
   23f58:	mov	r1, #12
   23f5c:	str	r1, [r0]
   23f60:	mov	r0, #0
   23f64:	pop	{fp, pc}
   23f68:	mul	r1, r2, r1
   23f6c:	b	23a94 <_obstack_memory_used@@Base+0x36cc>
   23f70:	eor	r1, r1, #-2147483648	; 0x80000000
   23f74:	b	23f7c <_obstack_memory_used@@Base+0x3bb4>
   23f78:	eor	r3, r3, #-2147483648	; 0x80000000
   23f7c:	push	{r4, r5, lr}
   23f80:	lsl	r4, r1, #1
   23f84:	lsl	r5, r3, #1
   23f88:	teq	r4, r5
   23f8c:	teqeq	r0, r2
   23f90:	orrsne	ip, r4, r0
   23f94:	orrsne	ip, r5, r2
   23f98:	mvnsne	ip, r4, asr #21
   23f9c:	mvnsne	ip, r5, asr #21
   23fa0:	beq	2418c <_obstack_memory_used@@Base+0x3dc4>
   23fa4:	lsr	r4, r4, #21
   23fa8:	rsbs	r5, r4, r5, lsr #21
   23fac:	rsblt	r5, r5, #0
   23fb0:	ble	23fd0 <_obstack_memory_used@@Base+0x3c08>
   23fb4:	add	r4, r4, r5
   23fb8:	eor	r2, r0, r2
   23fbc:	eor	r3, r1, r3
   23fc0:	eor	r0, r2, r0
   23fc4:	eor	r1, r3, r1
   23fc8:	eor	r2, r0, r2
   23fcc:	eor	r3, r1, r3
   23fd0:	cmp	r5, #54	; 0x36
   23fd4:	pophi	{r4, r5, pc}
   23fd8:	tst	r1, #-2147483648	; 0x80000000
   23fdc:	lsl	r1, r1, #12
   23fe0:	mov	ip, #1048576	; 0x100000
   23fe4:	orr	r1, ip, r1, lsr #12
   23fe8:	beq	23ff4 <_obstack_memory_used@@Base+0x3c2c>
   23fec:	rsbs	r0, r0, #0
   23ff0:	rsc	r1, r1, #0
   23ff4:	tst	r3, #-2147483648	; 0x80000000
   23ff8:	lsl	r3, r3, #12
   23ffc:	orr	r3, ip, r3, lsr #12
   24000:	beq	2400c <_obstack_memory_used@@Base+0x3c44>
   24004:	rsbs	r2, r2, #0
   24008:	rsc	r3, r3, #0
   2400c:	teq	r4, r5
   24010:	beq	24174 <_obstack_memory_used@@Base+0x3dac>
   24014:	sub	r4, r4, #1
   24018:	rsbs	lr, r5, #32
   2401c:	blt	24038 <_obstack_memory_used@@Base+0x3c70>
   24020:	lsl	ip, r2, lr
   24024:	adds	r0, r0, r2, lsr r5
   24028:	adc	r1, r1, #0
   2402c:	adds	r0, r0, r3, lsl lr
   24030:	adcs	r1, r1, r3, asr r5
   24034:	b	24054 <_obstack_memory_used@@Base+0x3c8c>
   24038:	sub	r5, r5, #32
   2403c:	add	lr, lr, #32
   24040:	cmp	r2, #1
   24044:	lsl	ip, r3, lr
   24048:	orrcs	ip, ip, #2
   2404c:	adds	r0, r0, r3, asr r5
   24050:	adcs	r1, r1, r3, asr #31
   24054:	and	r5, r1, #-2147483648	; 0x80000000
   24058:	bpl	24068 <_obstack_memory_used@@Base+0x3ca0>
   2405c:	rsbs	ip, ip, #0
   24060:	rscs	r0, r0, #0
   24064:	rsc	r1, r1, #0
   24068:	cmp	r1, #1048576	; 0x100000
   2406c:	bcc	240ac <_obstack_memory_used@@Base+0x3ce4>
   24070:	cmp	r1, #2097152	; 0x200000
   24074:	bcc	24094 <_obstack_memory_used@@Base+0x3ccc>
   24078:	lsrs	r1, r1, #1
   2407c:	rrxs	r0, r0
   24080:	rrx	ip, ip
   24084:	add	r4, r4, #1
   24088:	lsl	r2, r4, #21
   2408c:	cmn	r2, #4194304	; 0x400000
   24090:	bcs	241ec <_obstack_memory_used@@Base+0x3e24>
   24094:	cmp	ip, #-2147483648	; 0x80000000
   24098:	lsrseq	ip, r0, #1
   2409c:	adcs	r0, r0, #0
   240a0:	adc	r1, r1, r4, lsl #20
   240a4:	orr	r1, r1, r5
   240a8:	pop	{r4, r5, pc}
   240ac:	lsls	ip, ip, #1
   240b0:	adcs	r0, r0, r0
   240b4:	adc	r1, r1, r1
   240b8:	tst	r1, #1048576	; 0x100000
   240bc:	sub	r4, r4, #1
   240c0:	bne	24094 <_obstack_memory_used@@Base+0x3ccc>
   240c4:	teq	r1, #0
   240c8:	moveq	r1, r0
   240cc:	moveq	r0, #0
   240d0:	clz	r3, r1
   240d4:	addeq	r3, r3, #32
   240d8:	sub	r3, r3, #11
   240dc:	subs	r2, r3, #32
   240e0:	bge	24104 <_obstack_memory_used@@Base+0x3d3c>
   240e4:	adds	r2, r2, #12
   240e8:	ble	24100 <_obstack_memory_used@@Base+0x3d38>
   240ec:	add	ip, r2, #20
   240f0:	rsb	r2, r2, #12
   240f4:	lsl	r0, r1, ip
   240f8:	lsr	r1, r1, r2
   240fc:	b	24114 <_obstack_memory_used@@Base+0x3d4c>
   24100:	add	r2, r2, #20
   24104:	rsble	ip, r2, #32
   24108:	lsl	r1, r1, r2
   2410c:	orrle	r1, r1, r0, lsr ip
   24110:	lslle	r0, r0, r2
   24114:	subs	r4, r4, r3
   24118:	addge	r1, r1, r4, lsl #20
   2411c:	orrge	r1, r1, r5
   24120:	popge	{r4, r5, pc}
   24124:	mvn	r4, r4
   24128:	subs	r4, r4, #31
   2412c:	bge	24168 <_obstack_memory_used@@Base+0x3da0>
   24130:	adds	r4, r4, #12
   24134:	bgt	24150 <_obstack_memory_used@@Base+0x3d88>
   24138:	add	r4, r4, #20
   2413c:	rsb	r2, r4, #32
   24140:	lsr	r0, r0, r4
   24144:	orr	r0, r0, r1, lsl r2
   24148:	orr	r1, r5, r1, lsr r4
   2414c:	pop	{r4, r5, pc}
   24150:	rsb	r4, r4, #12
   24154:	rsb	r2, r4, #32
   24158:	lsr	r0, r0, r2
   2415c:	orr	r0, r0, r1, lsl r4
   24160:	mov	r1, r5
   24164:	pop	{r4, r5, pc}
   24168:	lsr	r0, r1, r4
   2416c:	mov	r1, r5
   24170:	pop	{r4, r5, pc}
   24174:	teq	r4, #0
   24178:	eor	r3, r3, #1048576	; 0x100000
   2417c:	eoreq	r1, r1, #1048576	; 0x100000
   24180:	addeq	r4, r4, #1
   24184:	subne	r5, r5, #1
   24188:	b	24014 <_obstack_memory_used@@Base+0x3c4c>
   2418c:	mvns	ip, r4, asr #21
   24190:	mvnsne	ip, r5, asr #21
   24194:	beq	241fc <_obstack_memory_used@@Base+0x3e34>
   24198:	teq	r4, r5
   2419c:	teqeq	r0, r2
   241a0:	beq	241b4 <_obstack_memory_used@@Base+0x3dec>
   241a4:	orrs	ip, r4, r0
   241a8:	moveq	r1, r3
   241ac:	moveq	r0, r2
   241b0:	pop	{r4, r5, pc}
   241b4:	teq	r1, r3
   241b8:	movne	r1, #0
   241bc:	movne	r0, #0
   241c0:	popne	{r4, r5, pc}
   241c4:	lsrs	ip, r4, #21
   241c8:	bne	241dc <_obstack_memory_used@@Base+0x3e14>
   241cc:	lsls	r0, r0, #1
   241d0:	adcs	r1, r1, r1
   241d4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   241d8:	pop	{r4, r5, pc}
   241dc:	adds	r4, r4, #4194304	; 0x400000
   241e0:	addcc	r1, r1, #1048576	; 0x100000
   241e4:	popcc	{r4, r5, pc}
   241e8:	and	r5, r1, #-2147483648	; 0x80000000
   241ec:	orr	r1, r5, #2130706432	; 0x7f000000
   241f0:	orr	r1, r1, #15728640	; 0xf00000
   241f4:	mov	r0, #0
   241f8:	pop	{r4, r5, pc}
   241fc:	mvns	ip, r4, asr #21
   24200:	movne	r1, r3
   24204:	movne	r0, r2
   24208:	mvnseq	ip, r5, asr #21
   2420c:	movne	r3, r1
   24210:	movne	r2, r0
   24214:	orrs	r4, r0, r1, lsl #12
   24218:	orrseq	r5, r2, r3, lsl #12
   2421c:	teqeq	r1, r3
   24220:	orrne	r1, r1, #524288	; 0x80000
   24224:	pop	{r4, r5, pc}
   24228:	teq	r0, #0
   2422c:	moveq	r1, #0
   24230:	bxeq	lr
   24234:	push	{r4, r5, lr}
   24238:	mov	r4, #1024	; 0x400
   2423c:	add	r4, r4, #50	; 0x32
   24240:	mov	r5, #0
   24244:	mov	r1, #0
   24248:	b	240c4 <_obstack_memory_used@@Base+0x3cfc>
   2424c:	teq	r0, #0
   24250:	moveq	r1, #0
   24254:	bxeq	lr
   24258:	push	{r4, r5, lr}
   2425c:	mov	r4, #1024	; 0x400
   24260:	add	r4, r4, #50	; 0x32
   24264:	ands	r5, r0, #-2147483648	; 0x80000000
   24268:	rsbmi	r0, r0, #0
   2426c:	mov	r1, #0
   24270:	b	240c4 <_obstack_memory_used@@Base+0x3cfc>
   24274:	lsls	r2, r0, #1
   24278:	asr	r1, r2, #3
   2427c:	rrx	r1, r1
   24280:	lsl	r0, r2, #28
   24284:	andsne	r3, r2, #-16777216	; 0xff000000
   24288:	teqne	r3, #-16777216	; 0xff000000
   2428c:	eorne	r1, r1, #939524096	; 0x38000000
   24290:	bxne	lr
   24294:	bics	r2, r2, #-16777216	; 0xff000000
   24298:	bxeq	lr
   2429c:	teq	r3, #-16777216	; 0xff000000
   242a0:	orreq	r1, r1, #524288	; 0x80000
   242a4:	bxeq	lr
   242a8:	push	{r4, r5, lr}
   242ac:	mov	r4, #896	; 0x380
   242b0:	and	r5, r1, #-2147483648	; 0x80000000
   242b4:	bic	r1, r1, #-2147483648	; 0x80000000
   242b8:	b	240c4 <_obstack_memory_used@@Base+0x3cfc>
   242bc:	orrs	r2, r0, r1
   242c0:	bxeq	lr
   242c4:	push	{r4, r5, lr}
   242c8:	mov	r5, #0
   242cc:	b	242ec <_obstack_memory_used@@Base+0x3f24>
   242d0:	orrs	r2, r0, r1
   242d4:	bxeq	lr
   242d8:	push	{r4, r5, lr}
   242dc:	ands	r5, r1, #-2147483648	; 0x80000000
   242e0:	bpl	242ec <_obstack_memory_used@@Base+0x3f24>
   242e4:	rsbs	r0, r0, #0
   242e8:	rsc	r1, r1, #0
   242ec:	mov	r4, #1024	; 0x400
   242f0:	add	r4, r4, #50	; 0x32
   242f4:	lsrs	ip, r1, #22
   242f8:	beq	24068 <_obstack_memory_used@@Base+0x3ca0>
   242fc:	mov	r2, #3
   24300:	lsrs	ip, ip, #3
   24304:	addne	r2, r2, #3
   24308:	lsrs	ip, ip, #3
   2430c:	addne	r2, r2, #3
   24310:	add	r2, r2, ip, lsr #3
   24314:	rsb	r3, r2, #32
   24318:	lsl	ip, r0, r3
   2431c:	lsr	r0, r0, r2
   24320:	orr	r0, r0, r1, lsl r3
   24324:	lsr	r1, r1, r2
   24328:	add	r4, r4, r2
   2432c:	b	24068 <_obstack_memory_used@@Base+0x3ca0>
   24330:	cmp	r3, #0
   24334:	cmpeq	r2, #0
   24338:	bne	2435c <_obstack_memory_used@@Base+0x3f94>
   2433c:	cmp	r1, #0
   24340:	movlt	r1, #-2147483648	; 0x80000000
   24344:	movlt	r0, #0
   24348:	blt	24358 <_obstack_memory_used@@Base+0x3f90>
   2434c:	cmpeq	r0, #0
   24350:	mvnne	r1, #-2147483648	; 0x80000000
   24354:	mvnne	r0, #0
   24358:	b	24440 <_obstack_memory_used@@Base+0x4078>
   2435c:	sub	sp, sp, #8
   24360:	push	{sp, lr}
   24364:	cmp	r1, #0
   24368:	blt	24388 <_obstack_memory_used@@Base+0x3fc0>
   2436c:	cmp	r3, #0
   24370:	blt	243bc <_obstack_memory_used@@Base+0x3ff4>
   24374:	bl	24490 <_obstack_memory_used@@Base+0x40c8>
   24378:	ldr	lr, [sp, #4]
   2437c:	add	sp, sp, #8
   24380:	pop	{r2, r3}
   24384:	bx	lr
   24388:	rsbs	r0, r0, #0
   2438c:	sbc	r1, r1, r1, lsl #1
   24390:	cmp	r3, #0
   24394:	blt	243e0 <_obstack_memory_used@@Base+0x4018>
   24398:	bl	24490 <_obstack_memory_used@@Base+0x40c8>
   2439c:	ldr	lr, [sp, #4]
   243a0:	add	sp, sp, #8
   243a4:	pop	{r2, r3}
   243a8:	rsbs	r0, r0, #0
   243ac:	sbc	r1, r1, r1, lsl #1
   243b0:	rsbs	r2, r2, #0
   243b4:	sbc	r3, r3, r3, lsl #1
   243b8:	bx	lr
   243bc:	rsbs	r2, r2, #0
   243c0:	sbc	r3, r3, r3, lsl #1
   243c4:	bl	24490 <_obstack_memory_used@@Base+0x40c8>
   243c8:	ldr	lr, [sp, #4]
   243cc:	add	sp, sp, #8
   243d0:	pop	{r2, r3}
   243d4:	rsbs	r0, r0, #0
   243d8:	sbc	r1, r1, r1, lsl #1
   243dc:	bx	lr
   243e0:	rsbs	r2, r2, #0
   243e4:	sbc	r3, r3, r3, lsl #1
   243e8:	bl	24490 <_obstack_memory_used@@Base+0x40c8>
   243ec:	ldr	lr, [sp, #4]
   243f0:	add	sp, sp, #8
   243f4:	pop	{r2, r3}
   243f8:	rsbs	r2, r2, #0
   243fc:	sbc	r3, r3, r3, lsl #1
   24400:	bx	lr
   24404:	cmp	r3, #0
   24408:	cmpeq	r2, #0
   2440c:	bne	24424 <_obstack_memory_used@@Base+0x405c>
   24410:	cmp	r1, #0
   24414:	cmpeq	r0, #0
   24418:	mvnne	r1, #0
   2441c:	mvnne	r0, #0
   24420:	b	24440 <_obstack_memory_used@@Base+0x4078>
   24424:	sub	sp, sp, #8
   24428:	push	{sp, lr}
   2442c:	bl	24490 <_obstack_memory_used@@Base+0x40c8>
   24430:	ldr	lr, [sp, #4]
   24434:	add	sp, sp, #8
   24438:	pop	{r2, r3}
   2443c:	bx	lr
   24440:	push	{r1, lr}
   24444:	mov	r0, #8
   24448:	bl	11ca8 <raise@plt>
   2444c:	pop	{r1, pc}
   24450:	vmov	d6, r0, r1
   24454:	vldr	d7, [pc, #36]	; 24480 <_obstack_memory_used@@Base+0x40b8>
   24458:	vldr	d5, [pc, #40]	; 24488 <_obstack_memory_used@@Base+0x40c0>
   2445c:	vmul.f64	d7, d6, d7
   24460:	vcvt.u32.f64	s14, d7
   24464:	vcvt.f64.u32	d4, s14
   24468:	vmov	r1, s14
   2446c:	vmls.f64	d6, d4, d5
   24470:	vcvt.u32.f64	s15, d6
   24474:	vmov	r0, s15
   24478:	bx	lr
   2447c:	nop			; (mov r0, r0)
   24480:	andeq	r0, r0, r0
   24484:	ldclcc	0, cr0, [r0]
   24488:	andeq	r0, r0, r0
   2448c:	mvnsmi	r0, r0
   24490:	cmp	r1, r3
   24494:	cmpeq	r0, r2
   24498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2449c:	mov	r4, r0
   244a0:	movcc	r0, #0
   244a4:	mov	r5, r1
   244a8:	ldr	lr, [sp, #36]	; 0x24
   244ac:	movcc	r1, r0
   244b0:	bcc	245ac <_obstack_memory_used@@Base+0x41e4>
   244b4:	cmp	r3, #0
   244b8:	clzeq	ip, r2
   244bc:	clzne	ip, r3
   244c0:	addeq	ip, ip, #32
   244c4:	cmp	r5, #0
   244c8:	clzeq	r1, r4
   244cc:	addeq	r1, r1, #32
   244d0:	clzne	r1, r5
   244d4:	sub	ip, ip, r1
   244d8:	sub	sl, ip, #32
   244dc:	lsl	r9, r3, ip
   244e0:	rsb	fp, ip, #32
   244e4:	orr	r9, r9, r2, lsl sl
   244e8:	orr	r9, r9, r2, lsr fp
   244ec:	lsl	r8, r2, ip
   244f0:	cmp	r5, r9
   244f4:	cmpeq	r4, r8
   244f8:	movcc	r0, #0
   244fc:	movcc	r1, r0
   24500:	bcc	2451c <_obstack_memory_used@@Base+0x4154>
   24504:	mov	r0, #1
   24508:	subs	r4, r4, r8
   2450c:	lsl	r1, r0, sl
   24510:	orr	r1, r1, r0, lsr fp
   24514:	lsl	r0, r0, ip
   24518:	sbc	r5, r5, r9
   2451c:	cmp	ip, #0
   24520:	beq	245ac <_obstack_memory_used@@Base+0x41e4>
   24524:	lsr	r6, r8, #1
   24528:	orr	r6, r6, r9, lsl #31
   2452c:	lsr	r7, r9, #1
   24530:	mov	r2, ip
   24534:	b	24558 <_obstack_memory_used@@Base+0x4190>
   24538:	subs	r3, r4, r6
   2453c:	sbc	r8, r5, r7
   24540:	adds	r3, r3, r3
   24544:	adc	r8, r8, r8
   24548:	adds	r4, r3, #1
   2454c:	adc	r5, r8, #0
   24550:	subs	r2, r2, #1
   24554:	beq	24574 <_obstack_memory_used@@Base+0x41ac>
   24558:	cmp	r5, r7
   2455c:	cmpeq	r4, r6
   24560:	bcs	24538 <_obstack_memory_used@@Base+0x4170>
   24564:	adds	r4, r4, r4
   24568:	adc	r5, r5, r5
   2456c:	subs	r2, r2, #1
   24570:	bne	24558 <_obstack_memory_used@@Base+0x4190>
   24574:	lsr	r3, r4, ip
   24578:	orr	r3, r3, r5, lsl fp
   2457c:	lsr	r2, r5, ip
   24580:	orr	r3, r3, r5, lsr sl
   24584:	adds	r0, r0, r4
   24588:	mov	r4, r3
   2458c:	lsl	r3, r2, ip
   24590:	orr	r3, r3, r4, lsl sl
   24594:	lsl	ip, r4, ip
   24598:	orr	r3, r3, r4, lsr fp
   2459c:	adc	r1, r1, r5
   245a0:	subs	r0, r0, ip
   245a4:	mov	r5, r2
   245a8:	sbc	r1, r1, r3
   245ac:	cmp	lr, #0
   245b0:	strdne	r4, [lr]
   245b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   245b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   245bc:	mov	r7, r0
   245c0:	ldr	r6, [pc, #72]	; 24610 <_obstack_memory_used@@Base+0x4248>
   245c4:	ldr	r5, [pc, #72]	; 24614 <_obstack_memory_used@@Base+0x424c>
   245c8:	add	r6, pc, r6
   245cc:	add	r5, pc, r5
   245d0:	sub	r6, r6, r5
   245d4:	mov	r8, r1
   245d8:	mov	r9, r2
   245dc:	bl	11c58 <calloc@plt-0x20>
   245e0:	asrs	r6, r6, #2
   245e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   245e8:	mov	r4, #0
   245ec:	add	r4, r4, #1
   245f0:	ldr	r3, [r5], #4
   245f4:	mov	r2, r9
   245f8:	mov	r1, r8
   245fc:	mov	r0, r7
   24600:	blx	r3
   24604:	cmp	r6, r4
   24608:	bne	245ec <_obstack_memory_used@@Base+0x4224>
   2460c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24610:	andeq	r4, r1, ip, lsr #18
   24614:	andeq	r4, r1, r4, lsr #18
   24618:	bx	lr
   2461c:	ldr	r3, [pc, #12]	; 24630 <_obstack_memory_used@@Base+0x4268>
   24620:	mov	r1, #0
   24624:	add	r3, pc, r3
   24628:	ldr	r2, [r3]
   2462c:	b	11ffc <__cxa_atexit@plt>
   24630:			; <UNDEFINED> instruction: 0x00014bb0
   24634:	mov	r2, r1
   24638:	mov	r1, r0
   2463c:	mov	r0, #3
   24640:	b	1211c <__xstat64@plt>

Disassembly of section .fini:

00024644 <.fini>:
   24644:	push	{r3, lr}
   24648:	pop	{r3, pc}
