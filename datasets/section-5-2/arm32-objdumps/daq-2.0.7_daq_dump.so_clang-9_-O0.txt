
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

00000638 <_init>:
 638:	push	{r3, lr}
 63c:	bl	724 <call_weak_fn>
 640:	pop	{r3, pc}

Disassembly of section .plt:

00000644 <.plt>:
 644:	push	{lr}		; (str lr, [sp, #-4]!)
 648:	ldr	lr, [pc, #4]	; 654 <.plt+0x10>
 64c:	add	lr, pc, lr
 650:	ldr	pc, [lr, #8]!
 654:	.word	0x000119ac

00000658 <calloc@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2476]!	; 0x9ac

00000664 <strcmp@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2468]!	; 0x9a4

00000670 <__cxa_finalize@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2460]!	; 0x99c

0000067c <free@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2452]!	; 0x994

00000688 <ferror@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2444]!	; 0x98c

00000694 <memcpy@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2436]!	; 0x984

000006a0 <strdup@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2428]!	; 0x97c

000006ac <pcap_close@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2420]!	; 0x974

000006b8 <strcasecmp@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2412]!	; 0x96c

000006c4 <pcap_open_dead@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2404]!	; 0x964

000006d0 <pcap_dump@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #69632	; 0x11000
 6d8:	ldr	pc, [ip, #2396]!	; 0x95c

000006dc <__gmon_start__@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #69632	; 0x11000
 6e4:	ldr	pc, [ip, #2388]!	; 0x954

000006e8 <snprintf@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2380]!	; 0x94c

000006f4 <pcap_dump_file@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2372]!	; 0x944

00000700 <memset@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #69632	; 0x11000
 708:	ldr	pc, [ip, #2364]!	; 0x93c

0000070c <pcap_dump_close@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2356]!	; 0x934

00000718 <pcap_dump_open@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2348]!	; 0x92c

Disassembly of section .text:

00000724 <call_weak_fn>:
     724:	ldr	r3, [pc, #20]	; 740 <call_weak_fn+0x1c>
     728:	ldr	r2, [pc, #20]	; 744 <call_weak_fn+0x20>
     72c:	add	r3, pc, r3
     730:	ldr	r2, [r3, r2]
     734:	cmp	r2, #0
     738:	bxeq	lr
     73c:	b	6dc <__gmon_start__@plt>
     740:	.word	0x000118cc
     744:	.word	0x00000058

00000748 <deregister_tm_clones>:
     748:	ldr	r0, [pc, #44]	; 77c <deregister_tm_clones+0x34>
     74c:	ldr	r3, [pc, #44]	; 780 <deregister_tm_clones+0x38>
     750:	add	r0, pc, r0
     754:	add	r3, pc, r3
     758:	cmp	r3, r0
     75c:	ldr	r3, [pc, #32]	; 784 <deregister_tm_clones+0x3c>
     760:	add	r3, pc, r3
     764:	bxeq	lr
     768:	ldr	r2, [pc, #24]	; 788 <deregister_tm_clones+0x40>
     76c:	ldr	r3, [r3, r2]
     770:	cmp	r3, #0
     774:	bxeq	lr
     778:	bx	r3
     77c:	.word	0x00011974
     780:	.word	0x00011970
     784:	.word	0x00011898
     788:	.word	0x00000054

0000078c <register_tm_clones>:
     78c:	ldr	r0, [pc, #56]	; 7cc <register_tm_clones+0x40>
     790:	ldr	r3, [pc, #56]	; 7d0 <register_tm_clones+0x44>
     794:	add	r0, pc, r0
     798:	add	r3, pc, r3
     79c:	sub	r1, r3, r0
     7a0:	ldr	r3, [pc, #44]	; 7d4 <register_tm_clones+0x48>
     7a4:	asr	r1, r1, #2
     7a8:	add	r3, pc, r3
     7ac:	add	r1, r1, r1, lsr #31
     7b0:	asrs	r1, r1, #1
     7b4:	bxeq	lr
     7b8:	ldr	r2, [pc, #24]	; 7d8 <register_tm_clones+0x4c>
     7bc:	ldr	r3, [r3, r2]
     7c0:	cmp	r3, #0
     7c4:	bxeq	lr
     7c8:	bx	r3
     7cc:	.word	0x00011930
     7d0:	.word	0x0001192c
     7d4:	.word	0x00011850
     7d8:	.word	0x0000005c

000007dc <__do_global_dtors_aux>:
     7dc:	ldr	r3, [pc, #76]	; 830 <__do_global_dtors_aux+0x54>
     7e0:	ldr	r2, [pc, #76]	; 834 <__do_global_dtors_aux+0x58>
     7e4:	add	r3, pc, r3
     7e8:	add	r2, pc, r2
     7ec:	ldrb	r3, [r3]
     7f0:	cmp	r3, #0
     7f4:	bxne	lr
     7f8:	ldr	r3, [pc, #56]	; 838 <__do_global_dtors_aux+0x5c>
     7fc:	push	{r4, lr}
     800:	ldr	r3, [r2, r3]
     804:	cmp	r3, #0
     808:	beq	818 <__do_global_dtors_aux+0x3c>
     80c:	ldr	r3, [pc, #40]	; 83c <__do_global_dtors_aux+0x60>
     810:	ldr	r0, [pc, r3]
     814:	bl	670 <__cxa_finalize@plt>
     818:	bl	748 <deregister_tm_clones>
     81c:	ldr	r3, [pc, #28]	; 840 <__do_global_dtors_aux+0x64>
     820:	mov	r2, #1
     824:	add	r3, pc, r3
     828:	strb	r2, [r3]
     82c:	pop	{r4, pc}
     830:	.word	0x000118e0
     834:	.word	0x00011810
     838:	.word	0x00000050
     83c:	.word	0x00011848
     840:	.word	0x000118a0

00000844 <frame_dummy>:
     844:	b	78c <register_tm_clones>

00000848 <dump_daq_initialize>:
     848:	push	{fp, lr}
     84c:	mov	fp, sp
     850:	sub	sp, sp, #72	; 0x48
     854:	str	r0, [fp, #-8]
     858:	str	r1, [fp, #-12]
     85c:	str	r2, [fp, #-16]
     860:	str	r3, [fp, #-20]	; 0xffffffec
     864:	movw	r0, #1
     868:	movw	r1, #120	; 0x78
     86c:	bl	658 <calloc@plt>
     870:	str	r0, [fp, #-24]	; 0xffffffe8
     874:	ldr	r0, [fp, #-8]
     878:	ldr	r0, [r0, #24]
     87c:	str	r0, [fp, #-28]	; 0xffffffe4
     880:	ldr	r0, [fp, #-8]
     884:	add	r1, sp, #16
     888:	str	r0, [sp, #8]
     88c:	mov	r0, r1
     890:	ldr	r1, [sp, #8]
     894:	movw	r2, #28
     898:	bl	694 <memcpy@plt>
     89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8a0:	movw	r1, #0
     8a4:	cmp	r0, r1
     8a8:	bne	8d4 <dump_daq_initialize+0x8c>
     8ac:	ldr	r0, [pc, #296]	; 9dc <dump_daq_initialize+0x194>
     8b0:	add	r2, pc, r0
     8b4:	ldr	r0, [pc, #292]	; 9e0 <dump_daq_initialize+0x198>
     8b8:	add	r3, pc, r0
     8bc:	ldr	r0, [fp, #-16]
     8c0:	ldr	r1, [fp, #-20]	; 0xffffffec
     8c4:	bl	6e8 <snprintf@plt>
     8c8:	mvn	r1, #1
     8cc:	str	r1, [fp, #-4]
     8d0:	b	9d0 <dump_daq_initialize+0x188>
     8d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     8d8:	movw	r1, #0
     8dc:	cmp	r0, r1
     8e0:	beq	8f8 <dump_daq_initialize+0xb0>
     8e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     8e8:	ldr	r0, [r0, #12]
     8ec:	and	r0, r0, #1
     8f0:	cmp	r0, #0
     8f4:	bne	930 <dump_daq_initialize+0xe8>
     8f8:	ldr	r0, [pc, #228]	; 9e4 <dump_daq_initialize+0x19c>
     8fc:	add	r2, pc, r0
     900:	ldr	r0, [pc, #224]	; 9e8 <dump_daq_initialize+0x1a0>
     904:	add	r3, pc, r0
     908:	ldr	r0, [fp, #-16]
     90c:	ldr	r1, [fp, #-20]	; 0xffffffec
     910:	bl	6e8 <snprintf@plt>
     914:	ldr	r1, [fp, #-24]	; 0xffffffe8
     918:	str	r0, [sp, #4]
     91c:	mov	r0, r1
     920:	bl	67c <free@plt>
     924:	mvn	r0, #0
     928:	str	r0, [fp, #-4]
     92c:	b	9d0 <dump_daq_initialize+0x188>
     930:	ldr	r0, [fp, #-24]	; 0xffffffe8
     934:	ldr	r2, [fp, #-16]
     938:	ldr	r3, [fp, #-20]	; 0xffffffec
     93c:	add	r1, sp, #16
     940:	bl	1228 <daq_dump_get_vars>
     944:	cmp	r0, #0
     948:	bne	960 <dump_daq_initialize+0x118>
     94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     950:	bl	67c <free@plt>
     954:	mvn	r0, #0
     958:	str	r0, [fp, #-4]
     95c:	b	9d0 <dump_daq_initialize+0x188>
     960:	ldr	r0, [fp, #-28]	; 0xffffffe4
     964:	ldr	r0, [r0, #16]
     968:	ldr	r1, [fp, #-24]	; 0xffffffe8
     96c:	add	r1, r1, #4
     970:	ldr	r2, [fp, #-16]
     974:	ldr	r3, [fp, #-20]	; 0xffffffec
     978:	add	ip, sp, #16
     97c:	str	r0, [sp]
     980:	mov	r0, ip
     984:	ldr	ip, [sp]
     988:	blx	ip
     98c:	str	r0, [sp, #12]
     990:	ldr	r0, [sp, #12]
     994:	cmp	r0, #0
     998:	beq	9b0 <dump_daq_initialize+0x168>
     99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9a0:	bl	67c <free@plt>
     9a4:	ldr	r0, [sp, #12]
     9a8:	str	r0, [fp, #-4]
     9ac:	b	9d0 <dump_daq_initialize+0x188>
     9b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     9b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9b8:	str	r0, [r1]
     9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9c0:	ldr	r1, [fp, #-12]
     9c4:	str	r0, [r1]
     9c8:	movw	r0, #0
     9cc:	str	r0, [fp, #-4]
     9d0:	ldr	r0, [fp, #-4]
     9d4:	mov	sp, fp
     9d8:	pop	{fp, pc}
     9dc:	.word	0x00000bfd
     9e0:	.word	0x00000c26
     9e4:	.word	0x00000bf6
     9e8:	.word	0x00000bda

000009ec <dump_daq_set_filter>:
     9ec:	push	{fp, lr}
     9f0:	mov	fp, sp
     9f4:	sub	sp, sp, #16
     9f8:	str	r0, [fp, #-4]
     9fc:	str	r1, [sp, #8]
     a00:	ldr	r0, [fp, #-4]
     a04:	str	r0, [sp, #4]
     a08:	ldr	r0, [sp, #4]
     a0c:	ldr	r0, [r0]
     a10:	ldr	r0, [r0, #20]
     a14:	ldr	r1, [sp, #4]
     a18:	ldr	r1, [r1, #4]
     a1c:	ldr	r2, [sp, #8]
     a20:	str	r0, [sp]
     a24:	mov	r0, r1
     a28:	mov	r1, r2
     a2c:	ldr	r2, [sp]
     a30:	blx	r2
     a34:	mov	sp, fp
     a38:	pop	{fp, pc}

00000a3c <dump_daq_start>:
     a3c:	push	{fp, lr}
     a40:	mov	fp, sp
     a44:	sub	sp, sp, #64	; 0x40
     a48:	str	r0, [fp, #-8]
     a4c:	ldr	r0, [fp, #-8]
     a50:	str	r0, [fp, #-12]
     a54:	ldr	r0, [fp, #-12]
     a58:	ldr	r0, [r0, #12]
     a5c:	movw	r1, #0
     a60:	cmp	r0, r1
     a64:	beq	a78 <dump_daq_start+0x3c>
     a68:	ldr	r0, [fp, #-12]
     a6c:	ldr	r0, [r0, #12]
     a70:	str	r0, [sp, #28]
     a74:	b	a88 <dump_daq_start+0x4c>
     a78:	ldr	r0, [pc, #372]	; bf4 <dump_daq_start+0x1b8>
     a7c:	add	r0, pc, r0
     a80:	str	r0, [sp, #28]
     a84:	b	a88 <dump_daq_start+0x4c>
     a88:	ldr	r0, [sp, #28]
     a8c:	str	r0, [fp, #-16]
     a90:	ldr	r0, [fp, #-12]
     a94:	ldr	r0, [r0]
     a98:	ldr	r0, [r0, #24]
     a9c:	ldr	r1, [fp, #-12]
     aa0:	ldr	r1, [r1, #4]
     aa4:	str	r0, [sp, #24]
     aa8:	mov	r0, r1
     aac:	ldr	r1, [sp, #24]
     ab0:	blx	r1
     ab4:	str	r0, [sp, #32]
     ab8:	ldr	r0, [sp, #32]
     abc:	cmp	r0, #0
     ac0:	beq	ad0 <dump_daq_start+0x94>
     ac4:	ldr	r0, [sp, #32]
     ac8:	str	r0, [fp, #-4]
     acc:	b	be8 <dump_daq_start+0x1ac>
     ad0:	ldr	r0, [fp, #-12]
     ad4:	ldr	r0, [r0]
     ad8:	ldr	r0, [r0, #68]	; 0x44
     adc:	ldr	r1, [fp, #-12]
     ae0:	ldr	r1, [r1, #4]
     ae4:	str	r0, [sp, #20]
     ae8:	mov	r0, r1
     aec:	ldr	r1, [sp, #20]
     af0:	blx	r1
     af4:	str	r0, [fp, #-24]	; 0xffffffe8
     af8:	ldr	r0, [fp, #-12]
     afc:	ldr	r0, [r0]
     b00:	ldr	r0, [r0, #60]	; 0x3c
     b04:	ldr	r1, [fp, #-12]
     b08:	ldr	r1, [r1, #4]
     b0c:	str	r0, [sp, #16]
     b10:	mov	r0, r1
     b14:	ldr	r1, [sp, #16]
     b18:	blx	r1
     b1c:	str	r0, [fp, #-28]	; 0xffffffe4
     b20:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b24:	ldr	r1, [fp, #-28]	; 0xffffffe4
     b28:	bl	6c4 <pcap_open_dead@plt>
     b2c:	str	r0, [fp, #-20]	; 0xffffffec
     b30:	ldr	r0, [fp, #-20]	; 0xffffffec
     b34:	movw	r1, #0
     b38:	cmp	r0, r1
     b3c:	beq	b54 <dump_daq_start+0x118>
     b40:	ldr	r0, [fp, #-20]	; 0xffffffec
     b44:	ldr	r1, [fp, #-16]
     b48:	bl	718 <pcap_dump_open@plt>
     b4c:	str	r0, [sp, #12]
     b50:	b	b60 <dump_daq_start+0x124>
     b54:	movw	r0, #0
     b58:	str	r0, [sp, #12]
     b5c:	b	b60 <dump_daq_start+0x124>
     b60:	ldr	r0, [sp, #12]
     b64:	ldr	r1, [fp, #-12]
     b68:	str	r0, [r1, #8]
     b6c:	ldr	r0, [fp, #-12]
     b70:	ldr	r0, [r0, #8]
     b74:	movw	r1, #0
     b78:	cmp	r0, r1
     b7c:	bne	bd8 <dump_daq_start+0x19c>
     b80:	ldr	r0, [fp, #-12]
     b84:	ldr	r0, [r0]
     b88:	ldr	r0, [r0, #40]	; 0x28
     b8c:	ldr	r1, [fp, #-12]
     b90:	ldr	r1, [r1, #4]
     b94:	str	r0, [sp, #8]
     b98:	mov	r0, r1
     b9c:	ldr	r1, [sp, #8]
     ba0:	blx	r1
     ba4:	ldr	r1, [pc, #76]	; bf8 <dump_daq_start+0x1bc>
     ba8:	add	r1, pc, r1
     bac:	ldr	r2, [fp, #-12]
     bb0:	ldr	r2, [r2]
     bb4:	ldr	r2, [r2, #76]	; 0x4c
     bb8:	ldr	r3, [fp, #-12]
     bbc:	ldr	r3, [r3, #4]
     bc0:	str	r0, [sp, #4]
     bc4:	mov	r0, r3
     bc8:	blx	r2
     bcc:	mvn	r0, #0
     bd0:	str	r0, [fp, #-4]
     bd4:	b	be8 <dump_daq_start+0x1ac>
     bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
     bdc:	bl	6ac <pcap_close@plt>
     be0:	movw	r0, #0
     be4:	str	r0, [fp, #-4]
     be8:	ldr	r0, [fp, #-4]
     bec:	mov	sp, fp
     bf0:	pop	{fp, pc}
     bf4:	.word	0x00000ad1
     bf8:	.word	0x000009b5

00000bfc <dump_daq_acquire>:
     bfc:	push	{r4, sl, fp, lr}
     c00:	add	fp, sp, #8
     c04:	sub	sp, sp, #32
     c08:	ldr	ip, [fp, #8]
     c0c:	ldr	lr, [pc, #120]	; c8c <dump_daq_acquire+0x90>
     c10:	add	lr, pc, lr
     c14:	str	r0, [fp, #-12]
     c18:	str	r1, [fp, #-16]
     c1c:	str	r2, [sp, #20]
     c20:	str	r3, [sp, #16]
     c24:	ldr	r0, [fp, #-12]
     c28:	str	r0, [sp, #12]
     c2c:	ldr	r0, [sp, #20]
     c30:	ldr	r1, [sp, #12]
     c34:	str	r0, [r1, #16]
     c38:	ldr	r0, [fp, #8]
     c3c:	ldr	r1, [sp, #12]
     c40:	str	r0, [r1, #20]
     c44:	ldr	r0, [sp, #12]
     c48:	ldr	r0, [r0]
     c4c:	ldr	r0, [r0, #28]
     c50:	ldr	r1, [sp, #12]
     c54:	ldr	r1, [r1, #4]
     c58:	ldr	r2, [fp, #-16]
     c5c:	ldr	r3, [sp, #16]
     c60:	ldr	r4, [sp, #12]
     c64:	str	r0, [sp, #8]
     c68:	mov	r0, r1
     c6c:	mov	r1, r2
     c70:	mov	r2, lr
     c74:	str	r4, [sp]
     c78:	ldr	lr, [sp, #8]
     c7c:	str	ip, [sp, #4]
     c80:	blx	lr
     c84:	sub	sp, fp, #8
     c88:	pop	{r4, sl, fp, pc}
     c8c:	.word	0x000007b8

00000c90 <dump_daq_inject>:
     c90:	push	{fp, lr}
     c94:	mov	fp, sp
     c98:	sub	sp, sp, #96	; 0x60
     c9c:	ldr	ip, [fp, #8]
     ca0:	str	r0, [fp, #-8]
     ca4:	str	r1, [fp, #-12]
     ca8:	str	r2, [fp, #-16]
     cac:	str	r3, [fp, #-20]	; 0xffffffec
     cb0:	ldr	r0, [fp, #-8]
     cb4:	str	r0, [fp, #-24]	; 0xffffffe8
     cb8:	ldr	r0, [fp, #-12]
     cbc:	add	r1, sp, #20
     cc0:	mov	r2, r1
     cc4:	str	r0, [sp, #16]
     cc8:	mov	r0, r2
     ccc:	ldr	r2, [sp, #16]
     cd0:	str	r1, [sp, #12]
     cd4:	mov	r1, r2
     cd8:	movw	r2, #52	; 0x34
     cdc:	str	ip, [sp, #8]
     ce0:	bl	694 <memcpy@plt>
     ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
     ce8:	str	r0, [sp, #28]
     cec:	str	r0, [sp, #32]
     cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cf4:	ldr	r0, [r0, #8]
     cf8:	ldr	r1, [sp, #12]
     cfc:	ldr	r2, [fp, #-16]
     d00:	bl	6d0 <pcap_dump@plt>
     d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d08:	ldr	r0, [r0, #8]
     d0c:	bl	6f4 <pcap_dump_file@plt>
     d10:	bl	688 <ferror@plt>
     d14:	cmp	r0, #0
     d18:	beq	d54 <dump_daq_inject+0xc4>
     d1c:	ldr	r0, [pc, #96]	; d84 <dump_daq_inject+0xf4>
     d20:	add	r1, pc, r0
     d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d28:	ldr	r0, [r0]
     d2c:	ldr	r0, [r0, #76]	; 0x4c
     d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d34:	ldr	r2, [r2, #4]
     d38:	str	r0, [sp, #4]
     d3c:	mov	r0, r2
     d40:	ldr	r2, [sp, #4]
     d44:	blx	r2
     d48:	mvn	r0, #0
     d4c:	str	r0, [fp, #-4]
     d50:	b	d78 <dump_daq_inject+0xe8>
     d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d58:	ldr	r1, [r0, #56]	; 0x38
     d5c:	ldr	r2, [r0, #60]	; 0x3c
     d60:	adds	r1, r1, #1
     d64:	adc	r2, r2, #0
     d68:	str	r1, [r0, #56]	; 0x38
     d6c:	str	r2, [r0, #60]	; 0x3c
     d70:	movw	r0, #0
     d74:	str	r0, [fp, #-4]
     d78:	ldr	r0, [fp, #-4]
     d7c:	mov	sp, fp
     d80:	pop	{fp, pc}
     d84:	.word	0x00000852

00000d88 <dump_daq_breakloop>:
     d88:	push	{fp, lr}
     d8c:	mov	fp, sp
     d90:	sub	sp, sp, #16
     d94:	str	r0, [fp, #-4]
     d98:	ldr	r0, [fp, #-4]
     d9c:	str	r0, [sp, #8]
     da0:	ldr	r0, [sp, #8]
     da4:	ldr	r0, [r0]
     da8:	ldr	r0, [r0, #36]	; 0x24
     dac:	ldr	r1, [sp, #8]
     db0:	ldr	r1, [r1, #4]
     db4:	str	r0, [sp, #4]
     db8:	mov	r0, r1
     dbc:	ldr	r1, [sp, #4]
     dc0:	blx	r1
     dc4:	mov	sp, fp
     dc8:	pop	{fp, pc}

00000dcc <dump_daq_stop>:
     dcc:	push	{fp, lr}
     dd0:	mov	fp, sp
     dd4:	sub	sp, sp, #24
     dd8:	str	r0, [fp, #-8]
     ddc:	ldr	r0, [fp, #-8]
     de0:	str	r0, [sp, #12]
     de4:	ldr	r0, [sp, #12]
     de8:	ldr	r0, [r0]
     dec:	ldr	r0, [r0, #40]	; 0x28
     df0:	ldr	r1, [sp, #12]
     df4:	ldr	r1, [r1, #4]
     df8:	str	r0, [sp, #4]
     dfc:	mov	r0, r1
     e00:	ldr	r1, [sp, #4]
     e04:	blx	r1
     e08:	str	r0, [sp, #8]
     e0c:	ldr	r0, [sp, #8]
     e10:	cmp	r0, #0
     e14:	beq	e24 <dump_daq_stop+0x58>
     e18:	ldr	r0, [sp, #8]
     e1c:	str	r0, [fp, #-4]
     e20:	b	e58 <dump_daq_stop+0x8c>
     e24:	ldr	r0, [sp, #12]
     e28:	ldr	r0, [r0, #8]
     e2c:	movw	r1, #0
     e30:	cmp	r0, r1
     e34:	beq	e50 <dump_daq_stop+0x84>
     e38:	ldr	r0, [sp, #12]
     e3c:	ldr	r0, [r0, #8]
     e40:	bl	70c <pcap_dump_close@plt>
     e44:	ldr	r0, [sp, #12]
     e48:	movw	r1, #0
     e4c:	str	r1, [r0, #8]
     e50:	movw	r0, #0
     e54:	str	r0, [fp, #-4]
     e58:	ldr	r0, [fp, #-4]
     e5c:	mov	sp, fp
     e60:	pop	{fp, pc}

00000e64 <dump_daq_shutdown>:
     e64:	push	{fp, lr}
     e68:	mov	fp, sp
     e6c:	sub	sp, sp, #16
     e70:	str	r0, [fp, #-4]
     e74:	ldr	r0, [fp, #-4]
     e78:	str	r0, [sp, #8]
     e7c:	ldr	r0, [sp, #8]
     e80:	ldr	r0, [r0]
     e84:	ldr	r0, [r0, #44]	; 0x2c
     e88:	ldr	r1, [sp, #8]
     e8c:	ldr	r1, [r1, #4]
     e90:	str	r0, [sp, #4]
     e94:	mov	r0, r1
     e98:	ldr	r1, [sp, #4]
     e9c:	blx	r1
     ea0:	ldr	r0, [sp, #8]
     ea4:	ldr	r0, [r0, #12]
     ea8:	movw	r1, #0
     eac:	cmp	r0, r1
     eb0:	beq	ec0 <dump_daq_shutdown+0x5c>
     eb4:	ldr	r0, [sp, #8]
     eb8:	ldr	r0, [r0, #12]
     ebc:	bl	67c <free@plt>
     ec0:	ldr	r0, [sp, #8]
     ec4:	bl	67c <free@plt>
     ec8:	mov	sp, fp
     ecc:	pop	{fp, pc}

00000ed0 <dump_daq_check_status>:
     ed0:	push	{fp, lr}
     ed4:	mov	fp, sp
     ed8:	sub	sp, sp, #16
     edc:	str	r0, [fp, #-4]
     ee0:	ldr	r0, [fp, #-4]
     ee4:	str	r0, [sp, #8]
     ee8:	ldr	r0, [sp, #8]
     eec:	ldr	r0, [r0]
     ef0:	ldr	r0, [r0, #48]	; 0x30
     ef4:	ldr	r1, [sp, #8]
     ef8:	ldr	r1, [r1, #4]
     efc:	str	r0, [sp, #4]
     f00:	mov	r0, r1
     f04:	ldr	r1, [sp, #4]
     f08:	blx	r1
     f0c:	mov	sp, fp
     f10:	pop	{fp, pc}

00000f14 <dump_daq_get_stats>:
     f14:	push	{fp, lr}
     f18:	mov	fp, sp
     f1c:	sub	sp, sp, #24
     f20:	str	r0, [fp, #-4]
     f24:	str	r1, [fp, #-8]
     f28:	ldr	r0, [fp, #-4]
     f2c:	str	r0, [sp, #12]
     f30:	ldr	r0, [sp, #12]
     f34:	ldr	r0, [r0]
     f38:	ldr	r0, [r0, #52]	; 0x34
     f3c:	ldr	r1, [sp, #12]
     f40:	ldr	r1, [r1, #4]
     f44:	ldr	r2, [fp, #-8]
     f48:	str	r0, [sp]
     f4c:	mov	r0, r1
     f50:	mov	r1, r2
     f54:	ldr	r2, [sp]
     f58:	blx	r2
     f5c:	str	r0, [sp, #8]
     f60:	movw	r0, #0
     f64:	str	r0, [sp, #4]
     f68:	ldr	r0, [sp, #4]
     f6c:	cmp	r0, #7
     f70:	bge	fa8 <dump_daq_get_stats+0x94>
     f74:	ldr	r0, [sp, #12]
     f78:	ldr	r1, [sp, #4]
     f7c:	add	r0, r0, r1, lsl #3
     f80:	ldr	r2, [r0, #64]	; 0x40
     f84:	ldr	r0, [r0, #68]	; 0x44
     f88:	ldr	r3, [fp, #-8]
     f8c:	add	r1, r3, r1, lsl #3
     f90:	str	r0, [r1, #44]	; 0x2c
     f94:	str	r2, [r1, #40]	; 0x28
     f98:	ldr	r0, [sp, #4]
     f9c:	add	r0, r0, #1
     fa0:	str	r0, [sp, #4]
     fa4:	b	f68 <dump_daq_get_stats+0x54>
     fa8:	ldr	r0, [sp, #12]
     fac:	ldr	r1, [r0, #56]	; 0x38
     fb0:	ldr	r0, [r0, #60]	; 0x3c
     fb4:	ldr	r2, [fp, #-8]
     fb8:	str	r0, [r2, #36]	; 0x24
     fbc:	str	r1, [r2, #32]
     fc0:	ldr	r0, [sp, #8]
     fc4:	mov	sp, fp
     fc8:	pop	{fp, pc}

00000fcc <dump_daq_reset_stats>:
     fcc:	push	{fp, lr}
     fd0:	mov	fp, sp
     fd4:	sub	sp, sp, #16
     fd8:	str	r0, [fp, #-4]
     fdc:	ldr	r0, [fp, #-4]
     fe0:	str	r0, [sp, #8]
     fe4:	ldr	r0, [sp, #8]
     fe8:	ldr	r0, [r0]
     fec:	ldr	r0, [r0, #56]	; 0x38
     ff0:	ldr	r1, [sp, #8]
     ff4:	ldr	r1, [r1, #4]
     ff8:	str	r0, [sp, #4]
     ffc:	mov	r0, r1
    1000:	ldr	r1, [sp, #4]
    1004:	blx	r1
    1008:	ldr	r0, [sp, #8]
    100c:	add	r0, r0, #24
    1010:	movw	r1, #0
    1014:	and	r1, r1, #255	; 0xff
    1018:	movw	r2, #96	; 0x60
    101c:	bl	700 <memset@plt>
    1020:	mov	sp, fp
    1024:	pop	{fp, pc}

00001028 <dump_daq_get_snaplen>:
    1028:	push	{fp, lr}
    102c:	mov	fp, sp
    1030:	sub	sp, sp, #16
    1034:	str	r0, [fp, #-4]
    1038:	ldr	r0, [fp, #-4]
    103c:	str	r0, [sp, #8]
    1040:	ldr	r0, [sp, #8]
    1044:	ldr	r0, [r0]
    1048:	ldr	r0, [r0, #60]	; 0x3c
    104c:	ldr	r1, [sp, #8]
    1050:	ldr	r1, [r1, #4]
    1054:	str	r0, [sp, #4]
    1058:	mov	r0, r1
    105c:	ldr	r1, [sp, #4]
    1060:	blx	r1
    1064:	mov	sp, fp
    1068:	pop	{fp, pc}

0000106c <dump_daq_get_capabilities>:
    106c:	push	{fp, lr}
    1070:	mov	fp, sp
    1074:	sub	sp, sp, #16
    1078:	str	r0, [fp, #-4]
    107c:	ldr	r0, [fp, #-4]
    1080:	str	r0, [sp, #8]
    1084:	ldr	r0, [sp, #8]
    1088:	ldr	r0, [r0]
    108c:	ldr	r0, [r0, #64]	; 0x40
    1090:	ldr	r1, [sp, #8]
    1094:	ldr	r1, [r1, #4]
    1098:	str	r0, [sp]
    109c:	mov	r0, r1
    10a0:	ldr	r1, [sp]
    10a4:	blx	r1
    10a8:	str	r0, [sp, #4]
    10ac:	ldr	r0, [sp, #4]
    10b0:	orr	r0, r0, #7
    10b4:	str	r0, [sp, #4]
    10b8:	ldr	r0, [sp, #4]
    10bc:	mov	sp, fp
    10c0:	pop	{fp, pc}

000010c4 <dump_daq_get_datalink_type>:
    10c4:	push	{fp, lr}
    10c8:	mov	fp, sp
    10cc:	sub	sp, sp, #16
    10d0:	str	r0, [fp, #-4]
    10d4:	ldr	r0, [fp, #-4]
    10d8:	str	r0, [sp, #8]
    10dc:	ldr	r0, [sp, #8]
    10e0:	ldr	r0, [r0]
    10e4:	ldr	r0, [r0, #68]	; 0x44
    10e8:	ldr	r1, [sp, #8]
    10ec:	ldr	r1, [r1, #4]
    10f0:	str	r0, [sp, #4]
    10f4:	mov	r0, r1
    10f8:	ldr	r1, [sp, #4]
    10fc:	blx	r1
    1100:	mov	sp, fp
    1104:	pop	{fp, pc}

00001108 <dump_daq_get_errbuf>:
    1108:	push	{fp, lr}
    110c:	mov	fp, sp
    1110:	sub	sp, sp, #16
    1114:	str	r0, [fp, #-4]
    1118:	ldr	r0, [fp, #-4]
    111c:	str	r0, [sp, #8]
    1120:	ldr	r0, [sp, #8]
    1124:	ldr	r0, [r0]
    1128:	ldr	r0, [r0, #72]	; 0x48
    112c:	ldr	r1, [sp, #8]
    1130:	ldr	r1, [r1, #4]
    1134:	str	r0, [sp, #4]
    1138:	mov	r0, r1
    113c:	ldr	r1, [sp, #4]
    1140:	blx	r1
    1144:	mov	sp, fp
    1148:	pop	{fp, pc}

0000114c <dump_daq_set_errbuf>:
    114c:	push	{fp, lr}
    1150:	mov	fp, sp
    1154:	sub	sp, sp, #32
    1158:	str	r0, [fp, #-4]
    115c:	str	r1, [fp, #-8]
    1160:	ldr	r0, [fp, #-4]
    1164:	str	r0, [fp, #-12]
    1168:	ldr	r0, [fp, #-12]
    116c:	ldr	r0, [r0]
    1170:	ldr	r0, [r0, #76]	; 0x4c
    1174:	ldr	r1, [fp, #-12]
    1178:	ldr	r1, [r1, #4]
    117c:	ldr	r2, [fp, #-8]
    1180:	movw	r3, #0
    1184:	cmp	r2, r3
    1188:	str	r0, [sp, #16]
    118c:	str	r1, [sp, #12]
    1190:	beq	11a0 <dump_daq_set_errbuf+0x54>
    1194:	ldr	r0, [fp, #-8]
    1198:	str	r0, [sp, #8]
    119c:	b	11b0 <dump_daq_set_errbuf+0x64>
    11a0:	ldr	r0, [pc, #44]	; 11d4 <dump_daq_set_errbuf+0x88>
    11a4:	add	r0, pc, r0
    11a8:	str	r0, [sp, #8]
    11ac:	b	11b0 <dump_daq_set_errbuf+0x64>
    11b0:	ldr	r0, [sp, #8]
    11b4:	ldr	r1, [sp, #12]
    11b8:	str	r0, [sp, #4]
    11bc:	mov	r0, r1
    11c0:	ldr	r1, [sp, #4]
    11c4:	ldr	r2, [sp, #16]
    11c8:	blx	r2
    11cc:	mov	sp, fp
    11d0:	pop	{fp, pc}
    11d4:	.word	0x000003a8

000011d8 <dump_daq_get_device_index>:
    11d8:	push	{fp, lr}
    11dc:	mov	fp, sp
    11e0:	sub	sp, sp, #16
    11e4:	str	r0, [fp, #-4]
    11e8:	str	r1, [sp, #8]
    11ec:	ldr	r0, [fp, #-4]
    11f0:	str	r0, [sp, #4]
    11f4:	ldr	r0, [sp, #4]
    11f8:	ldr	r0, [r0]
    11fc:	ldr	r0, [r0, #80]	; 0x50
    1200:	ldr	r1, [sp, #4]
    1204:	ldr	r1, [r1, #4]
    1208:	ldr	r2, [sp, #8]
    120c:	str	r0, [sp]
    1210:	mov	r0, r1
    1214:	mov	r1, r2
    1218:	ldr	r2, [sp]
    121c:	blx	r2
    1220:	mov	sp, fp
    1224:	pop	{fp, pc}

00001228 <daq_dump_get_vars>:
    1228:	push	{fp, lr}
    122c:	mov	fp, sp
    1230:	sub	sp, sp, #32
    1234:	str	r0, [fp, #-8]
    1238:	str	r1, [fp, #-12]
    123c:	str	r2, [sp, #16]
    1240:	str	r3, [sp, #12]
    1244:	movw	r0, #0
    1248:	str	r0, [sp, #8]
    124c:	ldr	r0, [fp, #-12]
    1250:	ldr	r0, [r0, #20]
    1254:	str	r0, [sp, #4]
    1258:	ldr	r0, [sp, #4]
    125c:	movw	r1, #0
    1260:	cmp	r0, r1
    1264:	beq	12dc <daq_dump_get_vars+0xb4>
    1268:	ldr	r0, [sp, #4]
    126c:	ldr	r0, [r0]
    1270:	ldr	r1, [pc, #336]	; 13c8 <daq_dump_get_vars+0x1a0>
    1274:	add	r1, pc, r1
    1278:	bl	664 <strcmp@plt>
    127c:	cmp	r0, #0
    1280:	bne	1294 <daq_dump_get_vars+0x6c>
    1284:	ldr	r0, [sp, #4]
    1288:	ldr	r0, [r0, #4]
    128c:	str	r0, [sp, #8]
    1290:	b	12c8 <daq_dump_get_vars+0xa0>
    1294:	ldr	r0, [sp, #4]
    1298:	ldr	r0, [r0]
    129c:	ldr	r1, [pc, #296]	; 13cc <daq_dump_get_vars+0x1a4>
    12a0:	add	r1, pc, r1
    12a4:	bl	664 <strcmp@plt>
    12a8:	cmp	r0, #0
    12ac:	bne	12c4 <daq_dump_get_vars+0x9c>
    12b0:	ldr	r0, [sp, #4]
    12b4:	ldr	r0, [r0, #4]
    12b8:	bl	6a0 <strdup@plt>
    12bc:	ldr	r1, [fp, #-8]
    12c0:	str	r0, [r1, #12]
    12c4:	b	12c8 <daq_dump_get_vars+0xa0>
    12c8:	b	12cc <daq_dump_get_vars+0xa4>
    12cc:	ldr	r0, [sp, #4]
    12d0:	ldr	r0, [r0, #8]
    12d4:	str	r0, [sp, #4]
    12d8:	b	1258 <daq_dump_get_vars+0x30>
    12dc:	ldr	r0, [sp, #8]
    12e0:	movw	r1, #0
    12e4:	cmp	r0, r1
    12e8:	bne	12f8 <daq_dump_get_vars+0xd0>
    12ec:	movw	r0, #1
    12f0:	str	r0, [fp, #-4]
    12f4:	b	13ac <daq_dump_get_vars+0x184>
    12f8:	ldr	r0, [pc, #184]	; 13b8 <daq_dump_get_vars+0x190>
    12fc:	add	r1, pc, r0
    1300:	ldr	r0, [sp, #8]
    1304:	bl	6b8 <strcasecmp@plt>
    1308:	cmp	r0, #0
    130c:	bne	1328 <daq_dump_get_vars+0x100>
    1310:	ldr	r0, [fp, #-12]
    1314:	movw	r1, #2
    1318:	str	r1, [r0, #12]
    131c:	movw	r0, #1
    1320:	str	r0, [fp, #-4]
    1324:	b	13ac <daq_dump_get_vars+0x184>
    1328:	ldr	r0, [pc, #140]	; 13bc <daq_dump_get_vars+0x194>
    132c:	add	r1, pc, r0
    1330:	ldr	r0, [sp, #8]
    1334:	bl	6b8 <strcasecmp@plt>
    1338:	cmp	r0, #0
    133c:	bne	1358 <daq_dump_get_vars+0x130>
    1340:	ldr	r0, [fp, #-12]
    1344:	movw	r1, #0
    1348:	str	r1, [r0, #12]
    134c:	movw	r0, #1
    1350:	str	r0, [fp, #-4]
    1354:	b	13ac <daq_dump_get_vars+0x184>
    1358:	ldr	r0, [pc, #96]	; 13c0 <daq_dump_get_vars+0x198>
    135c:	add	r1, pc, r0
    1360:	ldr	r0, [sp, #8]
    1364:	bl	6b8 <strcasecmp@plt>
    1368:	cmp	r0, #0
    136c:	bne	1384 <daq_dump_get_vars+0x15c>
    1370:	ldr	r0, [fp, #-12]
    1374:	movw	r1, #1
    1378:	str	r1, [r0, #12]
    137c:	str	r1, [fp, #-4]
    1380:	b	13ac <daq_dump_get_vars+0x184>
    1384:	b	1388 <daq_dump_get_vars+0x160>
    1388:	b	138c <daq_dump_get_vars+0x164>
    138c:	ldr	r0, [pc, #48]	; 13c4 <daq_dump_get_vars+0x19c>
    1390:	add	r2, pc, r0
    1394:	ldr	r0, [sp, #16]
    1398:	ldr	r1, [sp, #12]
    139c:	ldr	r3, [sp, #8]
    13a0:	bl	6e8 <snprintf@plt>
    13a4:	movw	r1, #0
    13a8:	str	r1, [fp, #-4]
    13ac:	ldr	r0, [fp, #-4]
    13b0:	mov	sp, fp
    13b4:	pop	{fp, pc}
    13b8:	.word	0x00000221
    13bc:	.word	0x000001fb
    13c0:	.word	0x000001d3
    13c4:	.word	0x000001a6
    13c8:	.word	0x0000029f
    13cc:	.word	0x000002cd

000013d0 <daq_dump_capture>:
    13d0:	push	{fp, lr}
    13d4:	mov	fp, sp
    13d8:	sub	sp, sp, #24
    13dc:	str	r0, [fp, #-4]
    13e0:	str	r1, [fp, #-8]
    13e4:	str	r2, [sp, #12]
    13e8:	ldr	r0, [fp, #-4]
    13ec:	str	r0, [sp, #8]
    13f0:	ldr	r0, [sp, #8]
    13f4:	ldr	r0, [r0, #16]
    13f8:	ldr	r1, [sp, #8]
    13fc:	ldr	r1, [r1, #20]
    1400:	ldr	r2, [fp, #-8]
    1404:	ldr	r3, [sp, #12]
    1408:	str	r0, [sp]
    140c:	mov	r0, r1
    1410:	mov	r1, r2
    1414:	mov	r2, r3
    1418:	ldr	r3, [sp]
    141c:	blx	r3
    1420:	str	r0, [sp, #4]
    1424:	ldr	r0, [sp, #4]
    1428:	cmp	r0, #7
    142c:	bcc	1438 <daq_dump_capture+0x68>
    1430:	movw	r0, #1
    1434:	str	r0, [sp, #4]
    1438:	ldr	r0, [pc, #96]	; 14a0 <daq_dump_capture+0xd0>
    143c:	add	r0, pc, r0
    1440:	ldr	r1, [sp, #8]
    1444:	ldr	r2, [sp, #4]
    1448:	add	r1, r1, r2, lsl #3
    144c:	ldr	r2, [r1, #64]	; 0x40
    1450:	ldr	r3, [r1, #68]	; 0x44
    1454:	adds	r2, r2, #1
    1458:	adc	r3, r3, #0
    145c:	str	r2, [r1, #64]	; 0x40
    1460:	str	r3, [r1, #68]	; 0x44
    1464:	ldr	r1, [sp, #4]
    1468:	ldr	r2, [pc, #52]	; 14a4 <daq_dump_capture+0xd4>
    146c:	add	r2, pc, r2
    1470:	add	r1, r2, r1, lsl #2
    1474:	ldr	r1, [r1]
    1478:	cmp	r1, #0
    147c:	beq	1494 <daq_dump_capture+0xc4>
    1480:	ldr	r0, [sp, #8]
    1484:	ldr	r0, [r0, #8]
    1488:	ldr	r1, [fp, #-8]
    148c:	ldr	r2, [sp, #12]
    1490:	bl	6d0 <pcap_dump@plt>
    1494:	ldr	r0, [sp, #4]
    1498:	mov	sp, fp
    149c:	pop	{fp, pc}
    14a0:	.word	0x00000158
    14a4:	.word	0x00000128

Disassembly of section .fini:

000014a8 <_fini>:
    14a8:	push	{r3, lr}
    14ac:	pop	{r3, pc}
