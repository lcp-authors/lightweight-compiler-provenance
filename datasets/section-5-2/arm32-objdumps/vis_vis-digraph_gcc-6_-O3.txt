
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	10a48 <tcgetattr@plt+0x398>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <calloc@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <calloc@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r5, r2, r4, asr #19

000105e4 <calloc@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #151552	; 0x25000
   105ec:	ldr	pc, [ip, #2500]!	; 0x9c4

000105f0 <strcmp@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #151552	; 0x25000
   105f8:	ldr	pc, [ip, #2492]!	; 0x9bc

000105fc <read@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #151552	; 0x25000
   10604:	ldr	pc, [ip, #2484]!	; 0x9b4

00010608 <__stack_chk_fail@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #151552	; 0x25000
   10610:	ldr	pc, [ip, #2476]!	; 0x9ac

00010614 <perror@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #151552	; 0x25000
   1061c:	ldr	pc, [ip, #2468]!	; 0x9a4

00010620 <putwchar@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #151552	; 0x25000
   10628:	ldr	pc, [ip, #2460]!	; 0x99c

0001062c <fwrite@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #151552	; 0x25000
   10634:	ldr	pc, [ip, #2452]!	; 0x994

00010638 <tcsetattr@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #151552	; 0x25000
   10640:	ldr	pc, [ip, #2444]!	; 0x98c

00010644 <__libc_start_main@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #151552	; 0x25000
   1064c:	ldr	pc, [ip, #2436]!	; 0x984

00010650 <__gmon_start__@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #151552	; 0x25000
   10658:	ldr	pc, [ip, #2428]!	; 0x97c

0001065c <strlen@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #151552	; 0x25000
   10664:	ldr	pc, [ip, #2420]!	; 0x974

00010668 <__errno_location@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #151552	; 0x25000
   10670:	ldr	pc, [ip, #2412]!	; 0x96c

00010674 <__fprintf_chk@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #151552	; 0x25000
   1067c:	ldr	pc, [ip, #2404]!	; 0x964

00010680 <setlocale@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #151552	; 0x25000
   10688:	ldr	pc, [ip, #2396]!	; 0x95c

0001068c <__wprintf_chk@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #151552	; 0x25000
   10694:	ldr	pc, [ip, #2388]!	; 0x954

00010698 <strncmp@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #151552	; 0x25000
   106a0:	ldr	pc, [ip, #2380]!	; 0x94c

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #151552	; 0x25000
   106ac:	ldr	pc, [ip, #2372]!	; 0x944

000106b0 <tcgetattr@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #151552	; 0x25000
   106b8:	ldr	pc, [ip, #2364]!	; 0x93c

Disassembly of section .text:

000106bc <.text>:
   106bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106c0:	sub	sp, sp, #36	; 0x24
   106c4:	ldr	sl, [pc, #792]	; 109e4 <tcgetattr@plt+0x334>
   106c8:	mov	r8, r0
   106cc:	mov	r7, r1
   106d0:	ldr	r3, [sl]
   106d4:	ldr	r1, [pc, #780]	; 109e8 <tcgetattr@plt+0x338>
   106d8:	mov	r0, #6
   106dc:	str	r3, [sp, #28]
   106e0:	bl	10680 <setlocale@plt>
   106e4:	cmp	r8, #1
   106e8:	beq	10954 <tcgetattr@plt+0x2a4>
   106ec:	ldr	r1, [pc, #760]	; 109ec <tcgetattr@plt+0x33c>
   106f0:	ldr	r0, [r7, #4]
   106f4:	bl	105f0 <strcmp@plt>
   106f8:	subs	r4, r0, #0
   106fc:	bne	1080c <tcgetattr@plt+0x15c>
   10700:	ldr	r1, [pc, #744]	; 109f0 <tcgetattr@plt+0x340>
   10704:	bl	106b0 <tcgetattr@plt>
   10708:	ldr	lr, [pc, #736]	; 109f0 <tcgetattr@plt+0x340>
   1070c:	ldr	r5, [pc, #736]	; 109f4 <tcgetattr@plt+0x344>
   10710:	mov	r7, #1
   10714:	ldm	lr!, {r0, r1, r2, r3}
   10718:	mov	ip, r5
   1071c:	mov	r6, r4
   10720:	mov	r9, r7
   10724:	stmia	ip!, {r0, r1, r2, r3}
   10728:	mov	r8, r4
   1072c:	ldm	lr!, {r0, r1, r2, r3}
   10730:	stmia	ip!, {r0, r1, r2, r3}
   10734:	ldm	lr!, {r0, r1, r2, r3}
   10738:	stmia	ip!, {r0, r1, r2, r3}
   1073c:	ldm	lr, {r0, r1, r2}
   10740:	ldr	r3, [r5]
   10744:	bic	r3, r3, #1504	; 0x5e0
   10748:	bic	r3, r3, #10
   1074c:	stm	ip, {r0, r1, r2}
   10750:	mov	r1, r4
   10754:	str	r3, [r5]
   10758:	ldr	r2, [r5, #12]
   1075c:	ldr	r3, [r5, #8]
   10760:	bic	r2, r2, #32768	; 0x8000
   10764:	bic	r2, r2, #75	; 0x4b
   10768:	bic	r3, r3, #304	; 0x130
   1076c:	orr	r3, r3, #48	; 0x30
   10770:	str	r2, [r5, #12]
   10774:	mov	r0, r4
   10778:	mov	r2, r5
   1077c:	str	r3, [r5, #8]
   10780:	strb	r7, [r5, #23]
   10784:	bl	10638 <tcsetattr@plt>
   10788:	str	r4, [sp, #20]
   1078c:	str	r4, [sp, #24]
   10790:	add	r3, sp, #20
   10794:	add	r4, r3, r6
   10798:	mov	r2, r9
   1079c:	mov	r1, r4
   107a0:	mov	r0, r8
   107a4:	bl	105fc <read@plt>
   107a8:	cmn	r0, #1
   107ac:	mov	r7, r0
   107b0:	bne	108f4 <tcgetattr@plt+0x244>
   107b4:	bl	10668 <__errno_location@plt>
   107b8:	ldr	r3, [r0]
   107bc:	cmp	r3, #4
   107c0:	beq	10798 <tcgetattr@plt+0xe8>
   107c4:	mov	r1, #0
   107c8:	mov	r0, r1
   107cc:	ldr	r2, [pc, #540]	; 109f0 <tcgetattr@plt+0x340>
   107d0:	bl	10638 <tcsetattr@plt>
   107d4:	ldr	r3, [pc, #540]	; 109f8 <tcgetattr@plt+0x348>
   107d8:	mov	r2, #9
   107dc:	mov	r1, #1
   107e0:	ldr	r3, [r3]
   107e4:	ldr	r0, [pc, #528]	; 109fc <tcgetattr@plt+0x34c>
   107e8:	bl	1062c <fwrite@plt>
   107ec:	mov	fp, #3
   107f0:	ldr	r2, [sp, #28]
   107f4:	ldr	r3, [sl]
   107f8:	mov	r0, fp
   107fc:	cmp	r2, r3
   10800:	bne	109e0 <tcgetattr@plt+0x330>
   10804:	add	sp, sp, #36	; 0x24
   10808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1080c:	sub	r3, r8, #1
   10810:	mov	r0, r3
   10814:	mov	r1, #4
   10818:	str	r3, [sp, #12]
   1081c:	bl	105e4 <calloc@plt>
   10820:	subs	r3, r0, #0
   10824:	str	r3, [sp, #8]
   10828:	beq	109d4 <tcgetattr@plt+0x324>
   1082c:	cmp	r8, #1
   10830:	movgt	r6, #1
   10834:	ldrgt	r3, [sp, #8]
   10838:	subgt	r9, r3, #4
   1083c:	ble	1089c <tcgetattr@plt+0x1ec>
   10840:	ldr	r4, [r7, #4]!
   10844:	ldr	r5, [pc, #436]	; 10a00 <tcgetattr@plt+0x350>
   10848:	mov	r0, r4
   1084c:	bl	1065c <strlen@plt>
   10850:	mov	fp, r0
   10854:	b	10864 <tcgetattr@plt+0x1b4>
   10858:	ldrb	r3, [r5, #16]!
   1085c:	cmp	r3, #0
   10860:	beq	108d4 <tcgetattr@plt+0x224>
   10864:	mov	r2, fp
   10868:	mov	r1, r5
   1086c:	mov	r0, r4
   10870:	bl	10698 <strncmp@plt>
   10874:	cmp	r0, #0
   10878:	bne	10858 <tcgetattr@plt+0x1a8>
   1087c:	ldrb	r2, [r5, fp]
   10880:	ldr	r3, [r5, #8]
   10884:	cmp	r2, #0
   10888:	str	r3, [r9, #4]!
   1088c:	bne	10988 <tcgetattr@plt+0x2d8>
   10890:	add	r6, r6, #1
   10894:	cmp	r8, r6
   10898:	bne	10840 <tcgetattr@plt+0x190>
   1089c:	ldr	r3, [sp, #12]
   108a0:	cmp	r3, #0
   108a4:	ble	108cc <tcgetattr@plt+0x21c>
   108a8:	ldr	r2, [sp, #8]
   108ac:	mov	r4, #0
   108b0:	sub	r5, r2, #4
   108b4:	mov	r6, r3
   108b8:	add	r4, r4, #1
   108bc:	ldr	r0, [r5, #4]!
   108c0:	bl	10620 <putwchar@plt>
   108c4:	cmp	r4, r6
   108c8:	bne	108b8 <tcgetattr@plt+0x208>
   108cc:	mov	fp, #0
   108d0:	b	107f0 <tcgetattr@plt+0x140>
   108d4:	ldr	r1, [pc, #284]	; 109f8 <tcgetattr@plt+0x348>
   108d8:	mov	r3, r4
   108dc:	ldr	r0, [r1]
   108e0:	ldr	r2, [pc, #284]	; 10a04 <tcgetattr@plt+0x354>
   108e4:	mov	r1, #1
   108e8:	bl	10674 <__fprintf_chk@plt>
   108ec:	mov	fp, #1
   108f0:	b	107f0 <tcgetattr@plt+0x140>
   108f4:	add	r0, sp, #20
   108f8:	bl	1065c <strlen@plt>
   108fc:	ldr	r4, [pc, #252]	; 10a00 <tcgetattr@plt+0x350>
   10900:	mov	r5, r0
   10904:	b	10914 <tcgetattr@plt+0x264>
   10908:	ldrb	r3, [r4, #16]!
   1090c:	cmp	r3, #0
   10910:	beq	10990 <tcgetattr@plt+0x2e0>
   10914:	mov	r2, r5
   10918:	mov	r1, r4
   1091c:	add	r0, sp, #20
   10920:	bl	10698 <strncmp@plt>
   10924:	subs	fp, r0, #0
   10928:	bne	10908 <tcgetattr@plt+0x258>
   1092c:	ldrb	r3, [r4, r5]
   10930:	cmp	r3, #0
   10934:	bne	109ac <tcgetattr@plt+0x2fc>
   10938:	ldr	r4, [r4, #8]
   1093c:	ldr	r2, [pc, #172]	; 109f0 <tcgetattr@plt+0x340>
   10940:	mov	r1, fp
   10944:	bl	10638 <tcsetattr@plt>
   10948:	mov	r0, r4
   1094c:	bl	10620 <putwchar@plt>
   10950:	b	107f0 <tcgetattr@plt+0x140>
   10954:	ldr	r4, [pc, #164]	; 10a00 <tcgetattr@plt+0x350>
   10958:	ldr	r5, [pc, #168]	; 10a08 <tcgetattr@plt+0x358>
   1095c:	ldr	r2, [r4, #12]
   10960:	ldr	r3, [r4, #8]
   10964:	mov	r1, r5
   10968:	str	r2, [sp]
   1096c:	mov	r0, r8
   10970:	mov	r2, r4
   10974:	bl	1068c <__wprintf_chk@plt>
   10978:	ldrb	r3, [r4, #16]!
   1097c:	cmp	r3, #0
   10980:	bne	1095c <tcgetattr@plt+0x2ac>
   10984:	b	108cc <tcgetattr@plt+0x21c>
   10988:	mov	fp, #2
   1098c:	b	107f0 <tcgetattr@plt+0x140>
   10990:	mov	r1, #0
   10994:	mov	r0, r1
   10998:	ldr	r2, [pc, #80]	; 109f0 <tcgetattr@plt+0x340>
   1099c:	bl	10638 <tcsetattr@plt>
   109a0:	ldr	r1, [pc, #80]	; 109f8 <tcgetattr@plt+0x348>
   109a4:	add	r3, sp, #20
   109a8:	b	108dc <tcgetattr@plt+0x22c>
   109ac:	cmp	r7, #0
   109b0:	beq	10990 <tcgetattr@plt+0x2e0>
   109b4:	add	r6, r6, #1
   109b8:	cmp	r6, #7
   109bc:	bne	10790 <tcgetattr@plt+0xe0>
   109c0:	mov	r1, fp
   109c4:	ldr	r2, [pc, #36]	; 109f0 <tcgetattr@plt+0x340>
   109c8:	bl	10638 <tcsetattr@plt>
   109cc:	mov	fp, #1
   109d0:	b	107f0 <tcgetattr@plt+0x140>
   109d4:	bl	10614 <perror@plt>
   109d8:	mov	fp, #1
   109dc:	b	107f0 <tcgetattr@plt+0x140>
   109e0:	bl	10608 <__stack_chk_fail@plt>
   109e4:	andeq	r5, r3, r0, lsr #29
   109e8:	ldrdeq	r4, [r2], -r0
   109ec:	andeq	r8, r1, r0, lsl r2
   109f0:	andeq	r6, r3, r4, asr #32
   109f4:	andeq	r6, r3, r8
   109f8:	andeq	r6, r3, r0
   109fc:	andeq	r8, r1, ip, lsr #4
   10a00:	andeq	r0, r1, r0, lsr #23
   10a04:	andeq	r8, r1, r4, lsl r2
   10a08:	andeq	r8, r1, r8, lsr r2
   10a0c:	mov	fp, #0
   10a10:	mov	lr, #0
   10a14:	pop	{r1}		; (ldr r1, [sp], #4)
   10a18:	mov	r2, sp
   10a1c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a20:	push	{r0}		; (str r0, [sp, #-4]!)
   10a24:	ldr	ip, [pc, #16]	; 10a3c <tcgetattr@plt+0x38c>
   10a28:	push	{ip}		; (str ip, [sp, #-4]!)
   10a2c:	ldr	r0, [pc, #12]	; 10a40 <tcgetattr@plt+0x390>
   10a30:	ldr	r3, [pc, #12]	; 10a44 <tcgetattr@plt+0x394>
   10a34:	bl	10644 <__libc_start_main@plt>
   10a38:	bl	106a4 <abort@plt>
   10a3c:	muleq	r1, r4, fp
   10a40:			; <UNDEFINED> instruction: 0x000106bc
   10a44:	andeq	r0, r1, r4, lsr fp
   10a48:	ldr	r3, [pc, #20]	; 10a64 <tcgetattr@plt+0x3b4>
   10a4c:	ldr	r2, [pc, #20]	; 10a68 <tcgetattr@plt+0x3b8>
   10a50:	add	r3, pc, r3
   10a54:	ldr	r2, [r3, r2]
   10a58:	cmp	r2, #0
   10a5c:	bxeq	lr
   10a60:	b	10650 <__gmon_start__@plt>
   10a64:	andeq	r5, r2, ip, asr #10
   10a68:	andeq	r0, r0, r4, asr r0
   10a6c:	ldr	r3, [pc, #28]	; 10a90 <tcgetattr@plt+0x3e0>
   10a70:	ldr	r0, [pc, #28]	; 10a94 <tcgetattr@plt+0x3e4>
   10a74:	sub	r3, r3, r0
   10a78:	cmp	r3, #6
   10a7c:	bxls	lr
   10a80:	ldr	r3, [pc, #16]	; 10a98 <tcgetattr@plt+0x3e8>
   10a84:	cmp	r3, #0
   10a88:	bxeq	lr
   10a8c:	bx	r3
   10a90:	andeq	r6, r3, r3
   10a94:	andeq	r6, r3, r0
   10a98:	andeq	r0, r0, r0
   10a9c:	ldr	r1, [pc, #36]	; 10ac8 <tcgetattr@plt+0x418>
   10aa0:	ldr	r0, [pc, #36]	; 10acc <tcgetattr@plt+0x41c>
   10aa4:	sub	r1, r1, r0
   10aa8:	asr	r1, r1, #2
   10aac:	add	r1, r1, r1, lsr #31
   10ab0:	asrs	r1, r1, #1
   10ab4:	bxeq	lr
   10ab8:	ldr	r3, [pc, #16]	; 10ad0 <tcgetattr@plt+0x420>
   10abc:	cmp	r3, #0
   10ac0:	bxeq	lr
   10ac4:	bx	r3
   10ac8:	andeq	r6, r3, r0
   10acc:	andeq	r6, r3, r0
   10ad0:	andeq	r0, r0, r0
   10ad4:	push	{r4, lr}
   10ad8:	ldr	r4, [pc, #24]	; 10af8 <tcgetattr@plt+0x448>
   10adc:	ldrb	r3, [r4]
   10ae0:	cmp	r3, #0
   10ae4:	popne	{r4, pc}
   10ae8:	bl	10a6c <tcgetattr@plt+0x3bc>
   10aec:	mov	r3, #1
   10af0:	strb	r3, [r4]
   10af4:	pop	{r4, pc}
   10af8:	andeq	r6, r3, r4
   10afc:	ldr	r0, [pc, #40]	; 10b2c <tcgetattr@plt+0x47c>
   10b00:	ldr	r3, [r0]
   10b04:	cmp	r3, #0
   10b08:	bne	10b10 <tcgetattr@plt+0x460>
   10b0c:	b	10a9c <tcgetattr@plt+0x3ec>
   10b10:	ldr	r3, [pc, #24]	; 10b30 <tcgetattr@plt+0x480>
   10b14:	cmp	r3, #0
   10b18:	beq	10b0c <tcgetattr@plt+0x45c>
   10b1c:	push	{r4, lr}
   10b20:	blx	r3
   10b24:	pop	{r4, lr}
   10b28:	b	10a9c <tcgetattr@plt+0x3ec>
   10b2c:	muleq	r3, ip, lr
   10b30:	andeq	r0, r0, r0
   10b34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b38:	mov	r7, r0
   10b3c:	ldr	r6, [pc, #72]	; 10b8c <tcgetattr@plt+0x4dc>
   10b40:	ldr	r5, [pc, #72]	; 10b90 <tcgetattr@plt+0x4e0>
   10b44:	add	r6, pc, r6
   10b48:	add	r5, pc, r5
   10b4c:	sub	r6, r6, r5
   10b50:	mov	r8, r1
   10b54:	mov	r9, r2
   10b58:	bl	105c4 <calloc@plt-0x20>
   10b5c:	asrs	r6, r6, #2
   10b60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b64:	mov	r4, #0
   10b68:	add	r4, r4, #1
   10b6c:	ldr	r3, [r5], #4
   10b70:	mov	r2, r9
   10b74:	mov	r1, r8
   10b78:	mov	r0, r7
   10b7c:	blx	r3
   10b80:	cmp	r6, r4
   10b84:	bne	10b68 <tcgetattr@plt+0x4b8>
   10b88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b8c:	andeq	r5, r2, ip, asr #6
   10b90:	andeq	r5, r2, r4, asr #6
   10b94:	bx	lr

Disassembly of section .fini:

00010b98 <.fini>:
   10b98:	push	{r3, lr}
   10b9c:	pop	{r3, pc}
