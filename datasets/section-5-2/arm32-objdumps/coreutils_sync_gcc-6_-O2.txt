
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010be0 <.init>:
   10be0:	push	{r3, lr}
   10be4:	bl	111f8 <close@plt+0x3ac>
   10be8:	pop	{r3, pc}

Disassembly of section .plt:

00010bec <calloc@plt-0x14>:
   10bec:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf0:	ldr	lr, [pc, #4]	; 10bfc <calloc@plt-0x4>
   10bf4:	add	lr, pc, lr
   10bf8:	ldr	pc, [lr, #8]!
   10bfc:	andeq	r5, r1, r4, lsl #8

00010c00 <calloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1028]!	; 0x404

00010c0c <fputs_unlocked@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c18 <raise@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c24 <fsync@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c30 <strcmp@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #996]!	; 0x3e4

00010c3c <fflush@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #988]!	; 0x3dc

00010c48 <free@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #980]!	; 0x3d4

00010c54 <_exit@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c60 <memcpy@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #964]!	; 0x3c4

00010c6c <mbsinit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #956]!	; 0x3bc

00010c78 <memcmp@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #948]!	; 0x3b4

00010c84 <fputc_unlocked@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #940]!	; 0x3ac

00010c90 <dcgettext@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #932]!	; 0x3a4

00010c9c <syncfs@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #924]!	; 0x39c

00010ca8 <realloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #916]!	; 0x394

00010cb4 <textdomain@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #908]!	; 0x38c

00010cc0 <iswprint@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #900]!	; 0x384

00010ccc <fwrite@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #892]!	; 0x37c

00010cd8 <lseek64@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #884]!	; 0x374

00010ce4 <__ctype_get_mb_cur_max@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #876]!	; 0x36c

00010cf0 <__fpending@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #868]!	; 0x364

00010cfc <mbrtowc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #860]!	; 0x35c

00010d08 <error@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #852]!	; 0x354

00010d14 <open64@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #844]!	; 0x34c

00010d20 <malloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #836]!	; 0x344

00010d2c <__libc_start_main@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #828]!	; 0x33c

00010d38 <__freading@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #820]!	; 0x334

00010d44 <__gmon_start__@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #812]!	; 0x32c

00010d50 <getopt_long@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #804]!	; 0x324

00010d5c <__ctype_b_loc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #796]!	; 0x31c

00010d68 <exit@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #788]!	; 0x314

00010d74 <strlen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #780]!	; 0x30c

00010d80 <__errno_location@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #772]!	; 0x304

00010d8c <__cxa_atexit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #764]!	; 0x2fc

00010d98 <memset@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #756]!	; 0x2f4

00010da4 <__printf_chk@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #748]!	; 0x2ec

00010db0 <fileno@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #740]!	; 0x2e4

00010dbc <__fprintf_chk@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #732]!	; 0x2dc

00010dc8 <fclose@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #724]!	; 0x2d4

00010dd4 <fseeko64@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #716]!	; 0x2cc

00010de0 <fcntl64@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dec <setlocale@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #700]!	; 0x2bc

00010df8 <strrchr@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #692]!	; 0x2b4

00010e04 <nl_langinfo@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #684]!	; 0x2ac

00010e10 <bindtextdomain@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #676]!	; 0x2a4

00010e1c <sync@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #668]!	; 0x29c

00010e28 <strncmp@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #660]!	; 0x294

00010e34 <fdatasync@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #652]!	; 0x28c

00010e40 <abort@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #644]!	; 0x284

00010e4c <close@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #636]!	; 0x27c

Disassembly of section .text:

00010e58 <.text>:
   10e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e5c:	mov	r5, r0
   10e60:	sub	sp, sp, #36	; 0x24
   10e64:	ldr	r0, [r1]
   10e68:	mov	r4, r1
   10e6c:	bl	118bc <close@plt+0xa70>
   10e70:	ldr	r1, [pc, #756]	; 1116c <close@plt+0x320>
   10e74:	mov	r0, #6
   10e78:	bl	10dec <setlocale@plt>
   10e7c:	ldr	r1, [pc, #748]	; 11170 <close@plt+0x324>
   10e80:	ldr	r0, [pc, #748]	; 11174 <close@plt+0x328>
   10e84:	bl	10e10 <bindtextdomain@plt>
   10e88:	ldr	r0, [pc, #740]	; 11174 <close@plt+0x328>
   10e8c:	bl	10cb4 <textdomain@plt>
   10e90:	ldr	r0, [pc, #736]	; 11178 <close@plt+0x32c>
   10e94:	bl	14c08 <close@plt+0x3dbc>
   10e98:	mov	r7, #0
   10e9c:	ldr	sl, [pc, #728]	; 1117c <close@plt+0x330>
   10ea0:	ldr	r8, [pc, #728]	; 11180 <close@plt+0x334>
   10ea4:	mov	r9, r7
   10ea8:	mov	r6, r7
   10eac:	mov	fp, #1
   10eb0:	str	r6, [sp]
   10eb4:	mov	r3, sl
   10eb8:	mov	r2, r8
   10ebc:	mov	r1, r4
   10ec0:	mov	r0, r5
   10ec4:	bl	10d50 <getopt_long@plt>
   10ec8:	cmn	r0, #1
   10ecc:	beq	10f4c <close@plt+0x100>
   10ed0:	cmn	r0, #2
   10ed4:	beq	10f44 <close@plt+0xf8>
   10ed8:	ble	10efc <close@plt+0xb0>
   10edc:	cmp	r0, #100	; 0x64
   10ee0:	beq	10ef4 <close@plt+0xa8>
   10ee4:	cmp	r0, #102	; 0x66
   10ee8:	bne	10f3c <close@plt+0xf0>
   10eec:	mov	r7, fp
   10ef0:	b	10eb0 <close@plt+0x64>
   10ef4:	mov	r9, fp
   10ef8:	b	10eb0 <close@plt+0x64>
   10efc:	cmn	r0, #3
   10f00:	bne	10f3c <close@plt+0xf0>
   10f04:	ldr	r3, [pc, #632]	; 11184 <close@plt+0x338>
   10f08:	ldr	r0, [pc, #632]	; 11188 <close@plt+0x33c>
   10f0c:	ldr	r1, [pc, #632]	; 1118c <close@plt+0x340>
   10f10:	ldr	r2, [pc, #632]	; 11190 <close@plt+0x344>
   10f14:	str	r6, [sp, #8]
   10f18:	ldr	r0, [r0]
   10f1c:	ldr	r3, [r3]
   10f20:	str	r1, [sp, #4]
   10f24:	str	r2, [sp]
   10f28:	ldr	r1, [pc, #612]	; 11194 <close@plt+0x348>
   10f2c:	ldr	r2, [pc, #612]	; 11198 <close@plt+0x34c>
   10f30:	bl	13bb8 <close@plt+0x2d6c>
   10f34:	mov	r0, #0
   10f38:	bl	10d68 <exit@plt>
   10f3c:	mov	r0, #1
   10f40:	bl	112e4 <close@plt+0x498>
   10f44:	mov	r0, #0
   10f48:	bl	112e4 <close@plt+0x498>
   10f4c:	ldr	r8, [pc, #584]	; 1119c <close@plt+0x350>
   10f50:	ands	r6, r9, r7
   10f54:	ldr	r3, [r8]
   10f58:	bne	1114c <close@plt+0x300>
   10f5c:	cmp	r5, r3
   10f60:	movgt	r2, #0
   10f64:	andle	r2, r9, #1
   10f68:	cmp	r2, #0
   10f6c:	str	r2, [sp, #24]
   10f70:	ldrne	r1, [pc, #552]	; 111a0 <close@plt+0x354>
   10f74:	movne	r2, #5
   10f78:	bne	11154 <close@plt+0x308>
   10f7c:	cmp	r5, r3
   10f80:	ble	11128 <close@plt+0x2dc>
   10f84:	cmp	r7, #0
   10f88:	movne	r9, #2
   10f8c:	mov	r6, #1
   10f90:	str	r9, [sp, #28]
   10f94:	b	10ff8 <close@plt+0x1ac>
   10f98:	bic	r2, r0, #2048	; 0x800
   10f9c:	mov	r1, #4
   10fa0:	mov	r0, r7
   10fa4:	bl	116e8 <close@plt+0x89c>
   10fa8:	cmp	r0, #0
   10fac:	blt	11030 <close@plt+0x1e4>
   10fb0:	ldr	r3, [sp, #28]
   10fb4:	cmp	r3, #1
   10fb8:	beq	1111c <close@plt+0x2d0>
   10fbc:	cmp	r3, #2
   10fc0:	bne	11110 <close@plt+0x2c4>
   10fc4:	mov	r0, r7
   10fc8:	bl	10c9c <syncfs@plt>
   10fcc:	cmp	r0, #0
   10fd0:	movge	sl, #1
   10fd4:	blt	1113c <close@plt+0x2f0>
   10fd8:	mov	r0, r7
   10fdc:	bl	10e4c <close@plt>
   10fe0:	cmp	r0, #0
   10fe4:	blt	110cc <close@plt+0x280>
   10fe8:	ldr	r3, [r8]
   10fec:	and	r6, r6, sl
   10ff0:	add	r3, r3, #1
   10ff4:	str	r3, [r8]
   10ff8:	ldr	r3, [r8]
   10ffc:	cmp	r5, r3
   11000:	ble	11130 <close@plt+0x2e4>
   11004:	ldr	r9, [r4, r3, lsl #2]
   11008:	mov	r1, #2048	; 0x800
   1100c:	mov	r0, r9
   11010:	bl	10d14 <open64@plt>
   11014:	subs	r7, r0, #0
   11018:	blt	11074 <close@plt+0x228>
   1101c:	mov	r1, #3
   11020:	mov	r0, r7
   11024:	bl	116e8 <close@plt+0x89c>
   11028:	cmn	r0, #1
   1102c:	bne	10f98 <close@plt+0x14c>
   11030:	bl	10d80 <__errno_location@plt>
   11034:	ldr	r1, [pc, #360]	; 111a4 <close@plt+0x358>
   11038:	mov	r2, #5
   1103c:	ldr	fp, [r0]
   11040:	mov	r0, #0
   11044:	ldr	sl, [sp, #24]
   11048:	bl	10c90 <dcgettext@plt>
   1104c:	mov	r1, r9
   11050:	str	r0, [sp, #20]
   11054:	mov	r0, #4
   11058:	bl	1353c <close@plt+0x26f0>
   1105c:	ldr	r2, [sp, #20]
   11060:	mov	r1, fp
   11064:	mov	r3, r0
   11068:	mov	r0, #0
   1106c:	bl	10d08 <error@plt>
   11070:	b	10fd8 <close@plt+0x18c>
   11074:	bl	10d80 <__errno_location@plt>
   11078:	ldr	r1, [pc, #296]	; 111a8 <close@plt+0x35c>
   1107c:	ldr	sl, [r0]
   11080:	mov	r0, r9
   11084:	bl	10d14 <open64@plt>
   11088:	subs	r7, r0, #0
   1108c:	bge	1101c <close@plt+0x1d0>
   11090:	mov	r2, #5
   11094:	ldr	r1, [pc, #272]	; 111ac <close@plt+0x360>
   11098:	mov	r0, #0
   1109c:	bl	10c90 <dcgettext@plt>
   110a0:	mov	r1, r9
   110a4:	mov	r7, r0
   110a8:	mov	r0, #4
   110ac:	bl	1353c <close@plt+0x26f0>
   110b0:	mov	r1, sl
   110b4:	mov	r2, r7
   110b8:	mov	r3, r0
   110bc:	mov	r0, #0
   110c0:	bl	10d08 <error@plt>
   110c4:	ldr	sl, [sp, #24]
   110c8:	b	10fe8 <close@plt+0x19c>
   110cc:	bl	10d80 <__errno_location@plt>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #212]	; 111b0 <close@plt+0x364>
   110d8:	ldr	sl, [sp, #24]
   110dc:	ldr	r7, [r0]
   110e0:	mov	r0, #0
   110e4:	bl	10c90 <dcgettext@plt>
   110e8:	mov	r1, r9
   110ec:	mov	fp, r0
   110f0:	mov	r0, #4
   110f4:	bl	1353c <close@plt+0x26f0>
   110f8:	mov	r2, fp
   110fc:	mov	r1, r7
   11100:	mov	r3, r0
   11104:	mov	r0, #0
   11108:	bl	10d08 <error@plt>
   1110c:	b	10fe8 <close@plt+0x19c>
   11110:	mov	r0, r7
   11114:	bl	10c24 <fsync@plt>
   11118:	b	10fcc <close@plt+0x180>
   1111c:	mov	r0, r7
   11120:	bl	10e34 <fdatasync@plt>
   11124:	b	10fcc <close@plt+0x180>
   11128:	bl	10e1c <sync@plt>
   1112c:	mov	r6, #1
   11130:	eor	r0, r6, #1
   11134:	add	sp, sp, #36	; 0x24
   11138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1113c:	bl	10d80 <__errno_location@plt>
   11140:	mov	r2, #5
   11144:	ldr	r1, [pc, #104]	; 111b4 <close@plt+0x368>
   11148:	b	1103c <close@plt+0x1f0>
   1114c:	ldr	r1, [pc, #100]	; 111b8 <close@plt+0x36c>
   11150:	mov	r2, #5
   11154:	mov	r0, #0
   11158:	bl	10c90 <dcgettext@plt>
   1115c:	mov	r1, #0
   11160:	mov	r2, r0
   11164:	mov	r0, #1
   11168:	bl	10d08 <error@plt>
   1116c:	andeq	r4, r1, ip, lsl #27
   11170:	andeq	r4, r1, r0, ror pc
   11174:	andeq	r4, r1, r8, asr #29
   11178:	andeq	r1, r1, r4, lsl #12
   1117c:	andeq	r4, r1, r4, ror #24
   11180:	andeq	r4, r1, ip, lsr #31
   11184:	andeq	r6, r2, r0, ror #1
   11188:	andeq	r6, r2, ip, lsr r1
   1118c:	andeq	r4, r1, r8, lsl #31
   11190:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11194:			; <UNDEFINED> instruction: 0x00014cb4
   11198:	andeq	r4, r1, r4, asr #29
   1119c:	andeq	r6, r2, r0, lsr r1
   111a0:	andeq	r4, r1, r0, ror #31
   111a4:	andeq	r5, r1, r8, lsl r0
   111a8:	andeq	r0, r0, r1, lsl #16
   111ac:	andeq	r5, r1, r4
   111b0:	andeq	r5, r1, r0, asr r0
   111b4:	andeq	r5, r1, ip, lsr r0
   111b8:			; <UNDEFINED> instruction: 0x00014fb0
   111bc:	mov	fp, #0
   111c0:	mov	lr, #0
   111c4:	pop	{r1}		; (ldr r1, [sp], #4)
   111c8:	mov	r2, sp
   111cc:	push	{r2}		; (str r2, [sp, #-4]!)
   111d0:	push	{r0}		; (str r0, [sp, #-4]!)
   111d4:	ldr	ip, [pc, #16]	; 111ec <close@plt+0x3a0>
   111d8:	push	{ip}		; (str ip, [sp, #-4]!)
   111dc:	ldr	r0, [pc, #12]	; 111f0 <close@plt+0x3a4>
   111e0:	ldr	r3, [pc, #12]	; 111f4 <close@plt+0x3a8>
   111e4:	bl	10d2c <__libc_start_main@plt>
   111e8:	bl	10e40 <abort@plt>
   111ec:	andeq	r4, r1, r4, lsl #24
   111f0:	andeq	r0, r1, r8, asr lr
   111f4:	andeq	r4, r1, r4, lsr #23
   111f8:	ldr	r3, [pc, #20]	; 11214 <close@plt+0x3c8>
   111fc:	ldr	r2, [pc, #20]	; 11218 <close@plt+0x3cc>
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [r3, r2]
   11208:	cmp	r2, #0
   1120c:	bxeq	lr
   11210:	b	10d44 <__gmon_start__@plt>
   11214:	strdeq	r4, [r1], -r8
   11218:	ldrdeq	r0, [r0], -r4
   1121c:	ldr	r3, [pc, #28]	; 11240 <close@plt+0x3f4>
   11220:	ldr	r0, [pc, #28]	; 11244 <close@plt+0x3f8>
   11224:	sub	r3, r3, r0
   11228:	cmp	r3, #6
   1122c:	bxls	lr
   11230:	ldr	r3, [pc, #16]	; 11248 <close@plt+0x3fc>
   11234:	cmp	r3, #0
   11238:	bxeq	lr
   1123c:	bx	r3
   11240:	andeq	r6, r2, fp, lsr #2
   11244:	andeq	r6, r2, r8, lsr #2
   11248:	andeq	r0, r0, r0
   1124c:	ldr	r1, [pc, #36]	; 11278 <close@plt+0x42c>
   11250:	ldr	r0, [pc, #36]	; 1127c <close@plt+0x430>
   11254:	sub	r1, r1, r0
   11258:	asr	r1, r1, #2
   1125c:	add	r1, r1, r1, lsr #31
   11260:	asrs	r1, r1, #1
   11264:	bxeq	lr
   11268:	ldr	r3, [pc, #16]	; 11280 <close@plt+0x434>
   1126c:	cmp	r3, #0
   11270:	bxeq	lr
   11274:	bx	r3
   11278:	andeq	r6, r2, r8, lsr #2
   1127c:	andeq	r6, r2, r8, lsr #2
   11280:	andeq	r0, r0, r0
   11284:	push	{r4, lr}
   11288:	ldr	r4, [pc, #24]	; 112a8 <close@plt+0x45c>
   1128c:	ldrb	r3, [r4]
   11290:	cmp	r3, #0
   11294:	popne	{r4, pc}
   11298:	bl	1121c <close@plt+0x3d0>
   1129c:	mov	r3, #1
   112a0:	strb	r3, [r4]
   112a4:	pop	{r4, pc}
   112a8:	andeq	r6, r2, r0, asr #2
   112ac:	ldr	r0, [pc, #40]	; 112dc <close@plt+0x490>
   112b0:	ldr	r3, [r0]
   112b4:	cmp	r3, #0
   112b8:	bne	112c0 <close@plt+0x474>
   112bc:	b	1124c <close@plt+0x400>
   112c0:	ldr	r3, [pc, #24]	; 112e0 <close@plt+0x494>
   112c4:	cmp	r3, #0
   112c8:	beq	112bc <close@plt+0x470>
   112cc:	push	{r4, lr}
   112d0:	blx	r3
   112d4:	pop	{r4, lr}
   112d8:	b	1124c <close@plt+0x400>
   112dc:	andeq	r5, r2, r4, lsl pc
   112e0:	andeq	r0, r0, r0
   112e4:	subs	r6, r0, #0
   112e8:	push	{r7, lr}
   112ec:	sub	sp, sp, #56	; 0x38
   112f0:	beq	1132c <close@plt+0x4e0>
   112f4:	ldr	r3, [pc, #660]	; 11590 <close@plt+0x744>
   112f8:	mov	r2, #5
   112fc:	ldr	r1, [pc, #656]	; 11594 <close@plt+0x748>
   11300:	mov	r0, #0
   11304:	ldr	r4, [r3]
   11308:	bl	10c90 <dcgettext@plt>
   1130c:	ldr	r3, [pc, #644]	; 11598 <close@plt+0x74c>
   11310:	mov	r1, #1
   11314:	ldr	r3, [r3]
   11318:	mov	r2, r0
   1131c:	mov	r0, r4
   11320:	bl	10dbc <__fprintf_chk@plt>
   11324:	mov	r0, r6
   11328:	bl	10d68 <exit@plt>
   1132c:	mov	r2, #5
   11330:	ldr	r1, [pc, #612]	; 1159c <close@plt+0x750>
   11334:	bl	10c90 <dcgettext@plt>
   11338:	ldr	r3, [pc, #600]	; 11598 <close@plt+0x74c>
   1133c:	ldr	r7, [pc, #604]	; 115a0 <close@plt+0x754>
   11340:	ldr	r4, [pc, #604]	; 115a4 <close@plt+0x758>
   11344:	ldr	r2, [r3]
   11348:	mov	r1, r0
   1134c:	mov	r0, #1
   11350:	bl	10da4 <__printf_chk@plt>
   11354:	mov	r2, #5
   11358:	ldr	r1, [pc, #584]	; 115a8 <close@plt+0x75c>
   1135c:	mov	r0, r6
   11360:	bl	10c90 <dcgettext@plt>
   11364:	ldr	r1, [r7]
   11368:	bl	10c0c <fputs_unlocked@plt>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #564]	; 115ac <close@plt+0x760>
   11374:	mov	r0, r6
   11378:	bl	10c90 <dcgettext@plt>
   1137c:	ldr	r1, [r7]
   11380:	bl	10c0c <fputs_unlocked@plt>
   11384:	mov	r2, #5
   11388:	ldr	r1, [pc, #544]	; 115b0 <close@plt+0x764>
   1138c:	mov	r0, r6
   11390:	bl	10c90 <dcgettext@plt>
   11394:	ldr	r1, [r7]
   11398:	bl	10c0c <fputs_unlocked@plt>
   1139c:	mov	r2, #5
   113a0:	ldr	r1, [pc, #524]	; 115b4 <close@plt+0x768>
   113a4:	mov	r0, r6
   113a8:	bl	10c90 <dcgettext@plt>
   113ac:	ldr	r1, [r7]
   113b0:	bl	10c0c <fputs_unlocked@plt>
   113b4:	mov	r2, #5
   113b8:	ldr	r1, [pc, #504]	; 115b8 <close@plt+0x76c>
   113bc:	mov	r0, r6
   113c0:	bl	10c90 <dcgettext@plt>
   113c4:	ldr	r1, [r7]
   113c8:	bl	10c0c <fputs_unlocked@plt>
   113cc:	ldm	r4!, {r0, r1, r2, r3}
   113d0:	mov	lr, sp
   113d4:	stmia	lr!, {r0, r1, r2, r3}
   113d8:	ldm	r4!, {r0, r1, r2, r3}
   113dc:	ldr	ip, [sp]
   113e0:	stmia	lr!, {r0, r1, r2, r3}
   113e4:	cmp	ip, #0
   113e8:	ldm	r4!, {r0, r1, r2, r3}
   113ec:	stmia	lr!, {r0, r1, r2, r3}
   113f0:	ldm	r4, {r0, r1}
   113f4:	moveq	r4, sp
   113f8:	stm	lr, {r0, r1}
   113fc:	beq	1142c <close@plt+0x5e0>
   11400:	ldr	r5, [pc, #436]	; 115bc <close@plt+0x770>
   11404:	mov	r4, sp
   11408:	b	11418 <close@plt+0x5cc>
   1140c:	ldr	ip, [r4, #8]!
   11410:	cmp	ip, #0
   11414:	beq	1142c <close@plt+0x5e0>
   11418:	mov	r1, ip
   1141c:	mov	r0, r5
   11420:	bl	10c30 <strcmp@plt>
   11424:	cmp	r0, #0
   11428:	bne	1140c <close@plt+0x5c0>
   1142c:	ldr	r4, [r4, #4]
   11430:	mov	r2, #5
   11434:	cmp	r4, #0
   11438:	ldr	r1, [pc, #384]	; 115c0 <close@plt+0x774>
   1143c:	beq	114e4 <close@plt+0x698>
   11440:	mov	r0, #0
   11444:	bl	10c90 <dcgettext@plt>
   11448:	ldr	r3, [pc, #372]	; 115c4 <close@plt+0x778>
   1144c:	ldr	r2, [pc, #372]	; 115c8 <close@plt+0x77c>
   11450:	mov	r1, r0
   11454:	mov	r0, #1
   11458:	bl	10da4 <__printf_chk@plt>
   1145c:	mov	r1, #0
   11460:	mov	r0, #5
   11464:	bl	10dec <setlocale@plt>
   11468:	cmp	r0, #0
   1146c:	ldreq	r5, [pc, #328]	; 115bc <close@plt+0x770>
   11470:	beq	1148c <close@plt+0x640>
   11474:	mov	r2, #3
   11478:	ldr	r1, [pc, #332]	; 115cc <close@plt+0x780>
   1147c:	bl	10e28 <strncmp@plt>
   11480:	ldr	r5, [pc, #308]	; 115bc <close@plt+0x770>
   11484:	cmp	r0, #0
   11488:	bne	11574 <close@plt+0x728>
   1148c:	mov	r2, #5
   11490:	ldr	r1, [pc, #312]	; 115d0 <close@plt+0x784>
   11494:	mov	r0, #0
   11498:	bl	10c90 <dcgettext@plt>
   1149c:	ldr	r3, [pc, #280]	; 115bc <close@plt+0x770>
   114a0:	ldr	r2, [pc, #284]	; 115c4 <close@plt+0x778>
   114a4:	mov	r1, r0
   114a8:	mov	r0, #1
   114ac:	bl	10da4 <__printf_chk@plt>
   114b0:	mov	r2, #5
   114b4:	ldr	r1, [pc, #280]	; 115d4 <close@plt+0x788>
   114b8:	mov	r0, #0
   114bc:	bl	10c90 <dcgettext@plt>
   114c0:	ldr	r2, [pc, #272]	; 115d8 <close@plt+0x78c>
   114c4:	cmp	r4, r5
   114c8:	ldr	r3, [pc, #268]	; 115dc <close@plt+0x790>
   114cc:	movne	r3, r2
   114d0:	mov	r1, r0
   114d4:	mov	r2, r4
   114d8:	mov	r0, #1
   114dc:	bl	10da4 <__printf_chk@plt>
   114e0:	b	11324 <close@plt+0x4d8>
   114e4:	mov	r0, r4
   114e8:	bl	10c90 <dcgettext@plt>
   114ec:	ldr	r3, [pc, #208]	; 115c4 <close@plt+0x778>
   114f0:	ldr	r2, [pc, #208]	; 115c8 <close@plt+0x77c>
   114f4:	mov	r1, r0
   114f8:	mov	r0, #1
   114fc:	bl	10da4 <__printf_chk@plt>
   11500:	mov	r1, r4
   11504:	mov	r0, #5
   11508:	bl	10dec <setlocale@plt>
   1150c:	cmp	r0, #0
   11510:	beq	11528 <close@plt+0x6dc>
   11514:	mov	r2, #3
   11518:	ldr	r1, [pc, #172]	; 115cc <close@plt+0x780>
   1151c:	bl	10e28 <strncmp@plt>
   11520:	cmp	r0, #0
   11524:	bne	1156c <close@plt+0x720>
   11528:	mov	r2, #5
   1152c:	ldr	r1, [pc, #156]	; 115d0 <close@plt+0x784>
   11530:	mov	r0, #0
   11534:	bl	10c90 <dcgettext@plt>
   11538:	ldr	r3, [pc, #124]	; 115bc <close@plt+0x770>
   1153c:	ldr	r2, [pc, #128]	; 115c4 <close@plt+0x778>
   11540:	mov	r4, r3
   11544:	mov	r1, r0
   11548:	mov	r0, #1
   1154c:	bl	10da4 <__printf_chk@plt>
   11550:	ldr	r1, [pc, #124]	; 115d4 <close@plt+0x788>
   11554:	mov	r2, #5
   11558:	mov	r0, #0
   1155c:	bl	10c90 <dcgettext@plt>
   11560:	ldr	r3, [pc, #116]	; 115dc <close@plt+0x790>
   11564:	mov	r1, r0
   11568:	b	114d4 <close@plt+0x688>
   1156c:	ldr	r5, [pc, #72]	; 115bc <close@plt+0x770>
   11570:	mov	r4, r5
   11574:	mov	r2, #5
   11578:	ldr	r1, [pc, #96]	; 115e0 <close@plt+0x794>
   1157c:	mov	r0, #0
   11580:	bl	10c90 <dcgettext@plt>
   11584:	ldr	r1, [r7]
   11588:	bl	10c0c <fputs_unlocked@plt>
   1158c:	b	1148c <close@plt+0x640>
   11590:	andeq	r6, r2, r8, lsr r1
   11594:			; <UNDEFINED> instruction: 0x00014cbc
   11598:	andeq	r6, r2, r0, asr r1
   1159c:	andeq	r4, r1, r4, ror #25
   115a0:	andeq	r6, r2, ip, lsr r1
   115a4:	andeq	r4, r1, ip, lsr #24
   115a8:	andeq	r4, r1, r4, lsl #26
   115ac:	muleq	r1, r0, sp
   115b0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   115b4:	andeq	r4, r1, ip, lsl lr
   115b8:	andeq	r4, r1, ip, asr #28
   115bc:			; <UNDEFINED> instruction: 0x00014cb4
   115c0:	andeq	r4, r1, r4, lsl #29
   115c4:	muleq	r1, ip, lr
   115c8:	andeq	r4, r1, r4, asr #29
   115cc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   115d0:	andeq	r4, r1, r0, lsr #30
   115d4:	andeq	r4, r1, ip, lsr pc
   115d8:	andeq	r4, r1, ip, lsl #27
   115dc:	andeq	r5, r1, ip, rrx
   115e0:	ldrdeq	r4, [r1], -r8
   115e4:	ldr	r3, [pc, #4]	; 115f0 <close@plt+0x7a4>
   115e8:	str	r0, [r3]
   115ec:	bx	lr
   115f0:	andeq	r6, r2, r4, asr #2
   115f4:	ldr	r3, [pc, #4]	; 11600 <close@plt+0x7b4>
   115f8:	strb	r0, [r3, #4]
   115fc:	bx	lr
   11600:	andeq	r6, r2, r4, asr #2
   11604:	ldr	r3, [pc, #192]	; 116cc <close@plt+0x880>
   11608:	push	{r4, r5, r6, lr}
   1160c:	sub	sp, sp, #8
   11610:	ldr	r0, [r3]
   11614:	bl	1430c <close@plt+0x34c0>
   11618:	cmp	r0, #0
   1161c:	beq	11640 <close@plt+0x7f4>
   11620:	ldr	r4, [pc, #168]	; 116d0 <close@plt+0x884>
   11624:	ldrb	r3, [r4, #4]
   11628:	cmp	r3, #0
   1162c:	beq	1165c <close@plt+0x810>
   11630:	bl	10d80 <__errno_location@plt>
   11634:	ldr	r3, [r0]
   11638:	cmp	r3, #32
   1163c:	bne	1165c <close@plt+0x810>
   11640:	ldr	r3, [pc, #140]	; 116d4 <close@plt+0x888>
   11644:	ldr	r0, [r3]
   11648:	bl	1430c <close@plt+0x34c0>
   1164c:	cmp	r0, #0
   11650:	bne	116a4 <close@plt+0x858>
   11654:	add	sp, sp, #8
   11658:	pop	{r4, r5, r6, pc}
   1165c:	mov	r2, #5
   11660:	ldr	r1, [pc, #112]	; 116d8 <close@plt+0x88c>
   11664:	mov	r0, #0
   11668:	bl	10c90 <dcgettext@plt>
   1166c:	ldr	r4, [r4]
   11670:	cmp	r4, #0
   11674:	mov	r5, r0
   11678:	beq	116b0 <close@plt+0x864>
   1167c:	bl	10d80 <__errno_location@plt>
   11680:	ldr	r6, [r0]
   11684:	mov	r0, r4
   11688:	bl	135e4 <close@plt+0x2798>
   1168c:	mov	r1, r6
   11690:	str	r5, [sp]
   11694:	ldr	r2, [pc, #64]	; 116dc <close@plt+0x890>
   11698:	mov	r3, r0
   1169c:	mov	r0, #0
   116a0:	bl	10d08 <error@plt>
   116a4:	ldr	r3, [pc, #52]	; 116e0 <close@plt+0x894>
   116a8:	ldr	r0, [r3]
   116ac:	bl	10c54 <_exit@plt>
   116b0:	bl	10d80 <__errno_location@plt>
   116b4:	mov	r3, r5
   116b8:	ldr	r2, [pc, #36]	; 116e4 <close@plt+0x898>
   116bc:	ldr	r1, [r0]
   116c0:	mov	r0, r4
   116c4:	bl	10d08 <error@plt>
   116c8:	b	116a4 <close@plt+0x858>
   116cc:	andeq	r6, r2, ip, lsr r1
   116d0:	andeq	r6, r2, r4, asr #2
   116d4:	andeq	r6, r2, r8, lsr r1
   116d8:	andeq	r5, r1, r4, lsl #2
   116dc:	andeq	r5, r1, r0, lsl r1
   116e0:	andeq	r6, r2, r4, ror #1
   116e4:	andeq	r5, r1, r4, lsl r1
   116e8:	push	{r1, r2, r3}
   116ec:	push	{r4, r5, r6, r7, lr}
   116f0:	sub	sp, sp, #8
   116f4:	add	r3, sp, #32
   116f8:	ldr	r1, [sp, #28]
   116fc:	str	r3, [sp, #4]
   11700:	cmp	r1, #0
   11704:	beq	1179c <close@plt+0x950>
   11708:	ldr	r2, [pc, #412]	; 118ac <close@plt+0xa60>
   1170c:	mov	r5, r0
   11710:	cmp	r1, r2
   11714:	bne	11760 <close@plt+0x914>
   11718:	ldr	r6, [pc, #400]	; 118b0 <close@plt+0xa64>
   1171c:	ldr	r7, [r3]
   11720:	add	r2, sp, #36	; 0x24
   11724:	ldr	r3, [r6]
   11728:	str	r2, [sp, #4]
   1172c:	cmp	r3, #0
   11730:	mov	r2, r7
   11734:	blt	11860 <close@plt+0xa14>
   11738:	bl	10de0 <fcntl64@plt>
   1173c:	subs	r4, r0, #0
   11740:	blt	117e4 <close@plt+0x998>
   11744:	mov	r3, #1
   11748:	str	r3, [r6]
   1174c:	mov	r0, r4
   11750:	add	sp, sp, #8
   11754:	pop	{r4, r5, r6, r7, lr}
   11758:	add	sp, sp, #12
   1175c:	bx	lr
   11760:	cmp	r1, #11
   11764:	beq	1178c <close@plt+0x940>
   11768:	bgt	117ac <close@plt+0x960>
   1176c:	cmp	r1, #3
   11770:	beq	1178c <close@plt+0x940>
   11774:	ble	118a0 <close@plt+0xa54>
   11778:	cmp	r1, #8
   1177c:	beq	117cc <close@plt+0x980>
   11780:	ble	117cc <close@plt+0x980>
   11784:	cmp	r1, #9
   11788:	bne	117cc <close@plt+0x980>
   1178c:	mov	r0, r5
   11790:	bl	10de0 <fcntl64@plt>
   11794:	mov	r4, r0
   11798:	b	1174c <close@plt+0x900>
   1179c:	ldr	r2, [sp, #32]
   117a0:	bl	10de0 <fcntl64@plt>
   117a4:	mov	r4, r0
   117a8:	b	1174c <close@plt+0x900>
   117ac:	ldr	r3, [pc, #256]	; 118b4 <close@plt+0xa68>
   117b0:	cmp	r1, r3
   117b4:	bgt	11880 <close@plt+0xa34>
   117b8:	cmp	r1, r2
   117bc:	bge	117cc <close@plt+0x980>
   117c0:	sub	r3, r3, #6
   117c4:	cmp	r1, r3
   117c8:	beq	1178c <close@plt+0x940>
   117cc:	ldr	r3, [sp, #4]
   117d0:	mov	r0, r5
   117d4:	ldr	r2, [r3]
   117d8:	bl	10de0 <fcntl64@plt>
   117dc:	mov	r4, r0
   117e0:	b	1174c <close@plt+0x900>
   117e4:	bl	10d80 <__errno_location@plt>
   117e8:	ldr	r3, [r0]
   117ec:	cmp	r3, #22
   117f0:	bne	11744 <close@plt+0x8f8>
   117f4:	mov	r2, r7
   117f8:	mov	r0, r5
   117fc:	mov	r1, #0
   11800:	bl	10de0 <fcntl64@plt>
   11804:	subs	r4, r0, #0
   11808:	blt	1174c <close@plt+0x900>
   1180c:	mvn	r3, #0
   11810:	str	r3, [r6]
   11814:	mov	r1, #1
   11818:	mov	r0, r4
   1181c:	bl	10de0 <fcntl64@plt>
   11820:	subs	r2, r0, #0
   11824:	blt	11840 <close@plt+0x9f4>
   11828:	orr	r2, r2, #1
   1182c:	mov	r1, #2
   11830:	mov	r0, r4
   11834:	bl	10de0 <fcntl64@plt>
   11838:	cmn	r0, #1
   1183c:	bne	1174c <close@plt+0x900>
   11840:	bl	10d80 <__errno_location@plt>
   11844:	mov	r5, r0
   11848:	mov	r0, r4
   1184c:	ldr	r6, [r5]
   11850:	mvn	r4, #0
   11854:	bl	10e4c <close@plt>
   11858:	str	r6, [r5]
   1185c:	b	1174c <close@plt+0x900>
   11860:	mov	r1, #0
   11864:	bl	10de0 <fcntl64@plt>
   11868:	subs	r4, r0, #0
   1186c:	blt	1174c <close@plt+0x900>
   11870:	ldr	r3, [r6]
   11874:	cmn	r3, #1
   11878:	beq	11814 <close@plt+0x9c8>
   1187c:	b	1174c <close@plt+0x900>
   11880:	ldr	r3, [pc, #48]	; 118b8 <close@plt+0xa6c>
   11884:	cmp	r1, r3
   11888:	beq	117cc <close@plt+0x980>
   1188c:	blt	1178c <close@plt+0x940>
   11890:	add	r3, r3, #1
   11894:	cmp	r1, r3
   11898:	bne	117cc <close@plt+0x980>
   1189c:	b	1178c <close@plt+0x940>
   118a0:	cmp	r1, #1
   118a4:	bne	117cc <close@plt+0x980>
   118a8:	b	1178c <close@plt+0x940>
   118ac:	andeq	r0, r0, r6, lsl #8
   118b0:	andeq	r6, r2, ip, asr #2
   118b4:	andeq	r0, r0, r7, lsl #8
   118b8:	andeq	r0, r0, r9, lsl #8
   118bc:	push	{r4, r5, r6, lr}
   118c0:	subs	r4, r0, #0
   118c4:	beq	11938 <close@plt+0xaec>
   118c8:	mov	r1, #47	; 0x2f
   118cc:	bl	10df8 <strrchr@plt>
   118d0:	subs	r5, r0, #0
   118d4:	beq	11924 <close@plt+0xad8>
   118d8:	add	r6, r5, #1
   118dc:	sub	r3, r6, r4
   118e0:	cmp	r3, #6
   118e4:	ble	11924 <close@plt+0xad8>
   118e8:	mov	r2, #7
   118ec:	ldr	r1, [pc, #96]	; 11954 <close@plt+0xb08>
   118f0:	sub	r0, r5, #6
   118f4:	bl	10e28 <strncmp@plt>
   118f8:	cmp	r0, #0
   118fc:	bne	11924 <close@plt+0xad8>
   11900:	mov	r2, #3
   11904:	ldr	r1, [pc, #76]	; 11958 <close@plt+0xb0c>
   11908:	mov	r0, r6
   1190c:	bl	10e28 <strncmp@plt>
   11910:	cmp	r0, #0
   11914:	movne	r4, r6
   11918:	ldreq	r3, [pc, #60]	; 1195c <close@plt+0xb10>
   1191c:	addeq	r4, r5, #4
   11920:	streq	r4, [r3]
   11924:	ldr	r2, [pc, #52]	; 11960 <close@plt+0xb14>
   11928:	ldr	r3, [pc, #52]	; 11964 <close@plt+0xb18>
   1192c:	str	r4, [r2]
   11930:	str	r4, [r3]
   11934:	pop	{r4, r5, r6, pc}
   11938:	ldr	r3, [pc, #40]	; 11968 <close@plt+0xb1c>
   1193c:	mov	r2, #55	; 0x37
   11940:	mov	r1, #1
   11944:	ldr	r3, [r3]
   11948:	ldr	r0, [pc, #28]	; 1196c <close@plt+0xb20>
   1194c:	bl	10ccc <fwrite@plt>
   11950:	bl	10e40 <abort@plt>
   11954:	andeq	r5, r1, r0, asr r1
   11958:	andeq	r5, r1, r8, asr r1
   1195c:	andeq	r6, r2, r8, lsr #2
   11960:	andeq	r6, r2, r0, asr r1
   11964:	andeq	r6, r2, ip, lsr #2
   11968:	andeq	r6, r2, r8, lsr r1
   1196c:	andeq	r5, r1, r8, lsl r1
   11970:	push	{r4, r5, r6, lr}
   11974:	mov	r2, #48	; 0x30
   11978:	mov	r4, r1
   1197c:	mov	r1, #0
   11980:	mov	r5, r0
   11984:	bl	10d98 <memset@plt>
   11988:	cmp	r4, #10
   1198c:	beq	1199c <close@plt+0xb50>
   11990:	str	r4, [r5]
   11994:	mov	r0, r5
   11998:	pop	{r4, r5, r6, pc}
   1199c:	bl	10e40 <abort@plt>
   119a0:	push	{r4, r5, r6, lr}
   119a4:	mov	r4, r0
   119a8:	mov	r5, r1
   119ac:	bl	14580 <close@plt+0x3734>
   119b0:	ldrb	r3, [r0]
   119b4:	bic	r3, r3, #32
   119b8:	cmp	r3, #85	; 0x55
   119bc:	bne	11a1c <close@plt+0xbd0>
   119c0:	ldrb	r3, [r0, #1]
   119c4:	bic	r3, r3, #32
   119c8:	cmp	r3, #84	; 0x54
   119cc:	bne	11a58 <close@plt+0xc0c>
   119d0:	ldrb	r3, [r0, #2]
   119d4:	bic	r3, r3, #32
   119d8:	cmp	r3, #70	; 0x46
   119dc:	bne	11a58 <close@plt+0xc0c>
   119e0:	ldrb	r3, [r0, #3]
   119e4:	cmp	r3, #45	; 0x2d
   119e8:	bne	11a58 <close@plt+0xc0c>
   119ec:	ldrb	r3, [r0, #4]
   119f0:	cmp	r3, #56	; 0x38
   119f4:	bne	11a58 <close@plt+0xc0c>
   119f8:	ldrb	r3, [r0, #5]
   119fc:	cmp	r3, #0
   11a00:	bne	11a58 <close@plt+0xc0c>
   11a04:	ldrb	r2, [r4]
   11a08:	ldr	r3, [pc, #152]	; 11aa8 <close@plt+0xc5c>
   11a0c:	ldr	r0, [pc, #152]	; 11aac <close@plt+0xc60>
   11a10:	cmp	r2, #96	; 0x60
   11a14:	movne	r0, r3
   11a18:	pop	{r4, r5, r6, pc}
   11a1c:	cmp	r3, #71	; 0x47
   11a20:	bne	11a58 <close@plt+0xc0c>
   11a24:	ldrb	r3, [r0, #1]
   11a28:	bic	r3, r3, #32
   11a2c:	cmp	r3, #66	; 0x42
   11a30:	bne	11a58 <close@plt+0xc0c>
   11a34:	ldrb	r3, [r0, #2]
   11a38:	cmp	r3, #49	; 0x31
   11a3c:	bne	11a58 <close@plt+0xc0c>
   11a40:	ldrb	r3, [r0, #3]
   11a44:	cmp	r3, #56	; 0x38
   11a48:	bne	11a58 <close@plt+0xc0c>
   11a4c:	ldrb	r3, [r0, #4]
   11a50:	cmp	r3, #48	; 0x30
   11a54:	beq	11a6c <close@plt+0xc20>
   11a58:	ldr	r3, [pc, #80]	; 11ab0 <close@plt+0xc64>
   11a5c:	cmp	r5, #9
   11a60:	ldr	r0, [pc, #76]	; 11ab4 <close@plt+0xc68>
   11a64:	movne	r0, r3
   11a68:	pop	{r4, r5, r6, pc}
   11a6c:	ldrb	r3, [r0, #5]
   11a70:	cmp	r3, #51	; 0x33
   11a74:	bne	11a58 <close@plt+0xc0c>
   11a78:	ldrb	r3, [r0, #6]
   11a7c:	cmp	r3, #48	; 0x30
   11a80:	bne	11a58 <close@plt+0xc0c>
   11a84:	ldrb	r3, [r0, #7]
   11a88:	cmp	r3, #0
   11a8c:	bne	11a58 <close@plt+0xc0c>
   11a90:	ldrb	r2, [r4]
   11a94:	ldr	r3, [pc, #28]	; 11ab8 <close@plt+0xc6c>
   11a98:	ldr	r0, [pc, #28]	; 11abc <close@plt+0xc70>
   11a9c:	cmp	r2, #96	; 0x60
   11aa0:	movne	r0, r3
   11aa4:	pop	{r4, r5, r6, pc}
   11aa8:			; <UNDEFINED> instruction: 0x000151b4
   11aac:			; <UNDEFINED> instruction: 0x000151b0
   11ab0:	andeq	r5, r1, r4, asr #3
   11ab4:	andeq	r5, r1, r0, asr #3
   11ab8:			; <UNDEFINED> instruction: 0x000151bc
   11abc:			; <UNDEFINED> instruction: 0x000151b8
   11ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ac4:	sub	sp, sp, #116	; 0x74
   11ac8:	mov	sl, r0
   11acc:	str	r3, [sp, #24]
   11ad0:	mov	r3, #1
   11ad4:	mov	r8, r1
   11ad8:	str	r2, [sp, #56]	; 0x38
   11adc:	str	r3, [sp, #36]	; 0x24
   11ae0:	bl	10ce4 <__ctype_get_mb_cur_max@plt>
   11ae4:	ldr	r3, [sp, #156]	; 0x9c
   11ae8:	mov	fp, r8
   11aec:	mov	r2, #0
   11af0:	lsr	r3, r3, #1
   11af4:	and	r3, r3, #1
   11af8:	str	r2, [sp, #68]	; 0x44
   11afc:	str	r3, [sp, #28]
   11b00:	str	r2, [sp, #40]	; 0x28
   11b04:	str	r2, [sp, #44]	; 0x2c
   11b08:	str	r2, [sp, #52]	; 0x34
   11b0c:	str	r2, [sp, #64]	; 0x40
   11b10:	str	r2, [sp, #72]	; 0x48
   11b14:	str	sl, [sp, #32]
   11b18:	str	r0, [sp, #76]	; 0x4c
   11b1c:	ldr	r3, [sp, #152]	; 0x98
   11b20:	cmp	r3, #10
   11b24:	ldrls	pc, [pc, r3, lsl #2]
   11b28:	b	12ce8 <close@plt+0x1e9c>
   11b2c:	andeq	r1, r1, r8, asr fp
   11b30:	andeq	r1, r1, r0, asr #28
   11b34:	andeq	r1, r1, r4, ror #28
   11b38:	andeq	r1, r1, r8, lsl #29
   11b3c:			; <UNDEFINED> instruction: 0x00011fb4
   11b40:	andeq	r1, r1, r8, lsl #31
   11b44:	andeq	r1, r1, r0, ror #30
   11b48:	muleq	r1, ip, lr
   11b4c:			; <UNDEFINED> instruction: 0x00011eb4
   11b50:			; <UNDEFINED> instruction: 0x00011eb4
   11b54:			; <UNDEFINED> instruction: 0x00011eb4
   11b58:	mov	r3, #0
   11b5c:	mov	r7, r3
   11b60:	str	r3, [sp, #28]
   11b64:	ldr	r3, [sp, #44]	; 0x2c
   11b68:	mov	sl, #0
   11b6c:	eor	r3, r3, #1
   11b70:	str	r3, [sp, #60]	; 0x3c
   11b74:	ldr	r3, [sp, #24]
   11b78:	cmn	r3, #1
   11b7c:	beq	120e0 <close@plt+0x1294>
   11b80:	ldr	r3, [sp, #24]
   11b84:	subs	r5, r3, sl
   11b88:	movne	r5, #1
   11b8c:	cmp	r5, #0
   11b90:	beq	120f8 <close@plt+0x12ac>
   11b94:	ldr	r3, [sp, #152]	; 0x98
   11b98:	ldr	r8, [sp, #44]	; 0x2c
   11b9c:	cmp	r3, #2
   11ba0:	moveq	r8, #0
   11ba4:	andne	r8, r8, #1
   11ba8:	ldr	r3, [sp, #52]	; 0x34
   11bac:	adds	r9, r3, #0
   11bb0:	movne	r9, #1
   11bb4:	ands	r6, r9, r8
   11bb8:	beq	12560 <close@plt+0x1714>
   11bbc:	ldr	r2, [sp, #52]	; 0x34
   11bc0:	ldr	r1, [sp, #24]
   11bc4:	cmp	r2, #1
   11bc8:	mov	r3, r2
   11bcc:	movls	r3, #0
   11bd0:	movhi	r3, #1
   11bd4:	cmn	r1, #1
   11bd8:	movne	r3, #0
   11bdc:	cmp	r3, #0
   11be0:	add	r4, sl, r2
   11be4:	beq	11bf4 <close@plt+0xda8>
   11be8:	ldr	r0, [sp, #56]	; 0x38
   11bec:	bl	10d74 <strlen@plt>
   11bf0:	str	r0, [sp, #24]
   11bf4:	ldr	r3, [sp, #24]
   11bf8:	cmp	r3, r4
   11bfc:	ldr	r3, [sp, #56]	; 0x38
   11c00:	add	r3, r3, sl
   11c04:	str	r3, [sp, #48]	; 0x30
   11c08:	bcc	1256c <close@plt+0x1720>
   11c0c:	mov	r0, r3
   11c10:	ldr	r2, [sp, #52]	; 0x34
   11c14:	ldr	r1, [sp, #64]	; 0x40
   11c18:	bl	10c78 <memcmp@plt>
   11c1c:	cmp	r0, #0
   11c20:	bne	1256c <close@plt+0x1720>
   11c24:	ldr	r3, [sp, #28]
   11c28:	cmp	r3, #0
   11c2c:	bne	12de8 <close@plt+0x1f9c>
   11c30:	ldr	r3, [sp, #48]	; 0x30
   11c34:	ldrb	r4, [r3]
   11c38:	cmp	r4, #126	; 0x7e
   11c3c:	ldrls	pc, [pc, r4, lsl #2]
   11c40:	b	12500 <close@plt+0x16b4>
   11c44:	andeq	r2, r1, r4, lsr #6
   11c48:	andeq	r2, r1, r0, lsl #10
   11c4c:	andeq	r2, r1, r0, lsl #10
   11c50:	andeq	r2, r1, r0, lsl #10
   11c54:	andeq	r2, r1, r0, lsl #10
   11c58:	andeq	r2, r1, r0, lsl #10
   11c5c:	andeq	r2, r1, r0, lsl #10
   11c60:	andeq	r2, r1, r8, lsl #6
   11c64:	andeq	r2, r1, ip, ror #5
   11c68:	andeq	r2, r1, r8, ror #9
   11c6c:	andeq	r2, r1, ip, asr #4
   11c70:	andeq	r2, r1, r0, lsr r2
   11c74:	andeq	r2, r1, r4, asr #9
   11c78:	andeq	r2, r1, r0, lsr #9
   11c7c:	andeq	r2, r1, r0, lsl #10
   11c80:	andeq	r2, r1, r0, lsl #10
   11c84:	andeq	r2, r1, r0, lsl #10
   11c88:	andeq	r2, r1, r0, lsl #10
   11c8c:	andeq	r2, r1, r0, lsl #10
   11c90:	andeq	r2, r1, r0, lsl #10
   11c94:	andeq	r2, r1, r0, lsl #10
   11c98:	andeq	r2, r1, r0, lsl #10
   11c9c:	andeq	r2, r1, r0, lsl #10
   11ca0:	andeq	r2, r1, r0, lsl #10
   11ca4:	andeq	r2, r1, r0, lsl #10
   11ca8:	andeq	r2, r1, r0, lsl #10
   11cac:	andeq	r2, r1, r0, lsl #10
   11cb0:	andeq	r2, r1, r0, lsl #10
   11cb4:	andeq	r2, r1, r0, lsl #10
   11cb8:	andeq	r2, r1, r0, lsl #10
   11cbc:	andeq	r2, r1, r0, lsl #10
   11cc0:	andeq	r2, r1, r0, lsl #10
   11cc4:	andeq	r2, r1, r0, ror #9
   11cc8:	andeq	r2, r1, r4, lsl r4
   11ccc:	andeq	r2, r1, r4, lsl r4
   11cd0:	andeq	r2, r1, r4, lsr #32
   11cd4:	andeq	r2, r1, r4, lsl r4
   11cd8:	andeq	r2, r1, ip, lsr #9
   11cdc:	andeq	r2, r1, r4, lsl r4
   11ce0:	andeq	r2, r1, r0, lsl #9
   11ce4:	andeq	r2, r1, r4, lsl r4
   11ce8:	andeq	r2, r1, r4, lsl r4
   11cec:	andeq	r2, r1, r4, lsl r4
   11cf0:	andeq	r2, r1, ip, lsr #9
   11cf4:	andeq	r2, r1, ip, lsr #9
   11cf8:	andeq	r2, r1, ip, lsr #9
   11cfc:	andeq	r2, r1, ip, lsr #9
   11d00:	andeq	r2, r1, ip, lsr #9
   11d04:	andeq	r2, r1, ip, lsr #9
   11d08:	andeq	r2, r1, ip, lsr #9
   11d0c:	andeq	r2, r1, ip, lsr #9
   11d10:	andeq	r2, r1, ip, lsr #9
   11d14:	andeq	r2, r1, ip, lsr #9
   11d18:	andeq	r2, r1, ip, lsr #9
   11d1c:	andeq	r2, r1, ip, lsr #9
   11d20:	andeq	r2, r1, ip, lsr #9
   11d24:	andeq	r2, r1, ip, lsr #9
   11d28:	andeq	r2, r1, ip, lsr #9
   11d2c:	andeq	r2, r1, ip, lsr #9
   11d30:	andeq	r2, r1, r4, lsl r4
   11d34:	andeq	r2, r1, r4, lsl r4
   11d38:	andeq	r2, r1, r4, lsl r4
   11d3c:	andeq	r2, r1, r4, lsl r4
   11d40:	andeq	r2, r1, r0, asr r4
   11d44:	andeq	r2, r1, r0, lsl #10
   11d48:	andeq	r2, r1, ip, lsr #9
   11d4c:	andeq	r2, r1, ip, lsr #9
   11d50:	andeq	r2, r1, ip, lsr #9
   11d54:	andeq	r2, r1, ip, lsr #9
   11d58:	andeq	r2, r1, ip, lsr #9
   11d5c:	andeq	r2, r1, ip, lsr #9
   11d60:	andeq	r2, r1, ip, lsr #9
   11d64:	andeq	r2, r1, ip, lsr #9
   11d68:	andeq	r2, r1, ip, lsr #9
   11d6c:	andeq	r2, r1, ip, lsr #9
   11d70:	andeq	r2, r1, ip, lsr #9
   11d74:	andeq	r2, r1, ip, lsr #9
   11d78:	andeq	r2, r1, ip, lsr #9
   11d7c:	andeq	r2, r1, ip, lsr #9
   11d80:	andeq	r2, r1, ip, lsr #9
   11d84:	andeq	r2, r1, ip, lsr #9
   11d88:	andeq	r2, r1, ip, lsr #9
   11d8c:	andeq	r2, r1, ip, lsr #9
   11d90:	andeq	r2, r1, ip, lsr #9
   11d94:	andeq	r2, r1, ip, lsr #9
   11d98:	andeq	r2, r1, ip, lsr #9
   11d9c:	andeq	r2, r1, ip, lsr #9
   11da0:	andeq	r2, r1, ip, lsr #9
   11da4:	andeq	r2, r1, ip, lsr #9
   11da8:	andeq	r2, r1, ip, lsr #9
   11dac:	andeq	r2, r1, ip, lsr #9
   11db0:	andeq	r2, r1, r4, lsl r4
   11db4:	andeq	r2, r1, r0, ror r1
   11db8:	andeq	r2, r1, ip, lsr #9
   11dbc:	andeq	r2, r1, r4, lsl r4
   11dc0:	andeq	r2, r1, ip, lsr #9
   11dc4:	andeq	r2, r1, r4, lsl r4
   11dc8:	andeq	r2, r1, ip, lsr #9
   11dcc:	andeq	r2, r1, ip, lsr #9
   11dd0:	andeq	r2, r1, ip, lsr #9
   11dd4:	andeq	r2, r1, ip, lsr #9
   11dd8:	andeq	r2, r1, ip, lsr #9
   11ddc:	andeq	r2, r1, ip, lsr #9
   11de0:	andeq	r2, r1, ip, lsr #9
   11de4:	andeq	r2, r1, ip, lsr #9
   11de8:	andeq	r2, r1, ip, lsr #9
   11dec:	andeq	r2, r1, ip, lsr #9
   11df0:	andeq	r2, r1, ip, lsr #9
   11df4:	andeq	r2, r1, ip, lsr #9
   11df8:	andeq	r2, r1, ip, lsr #9
   11dfc:	andeq	r2, r1, ip, lsr #9
   11e00:	andeq	r2, r1, ip, lsr #9
   11e04:	andeq	r2, r1, ip, lsr #9
   11e08:	andeq	r2, r1, ip, lsr #9
   11e0c:	andeq	r2, r1, ip, lsr #9
   11e10:	andeq	r2, r1, ip, lsr #9
   11e14:	andeq	r2, r1, ip, lsr #9
   11e18:	andeq	r2, r1, ip, lsr #9
   11e1c:	andeq	r2, r1, ip, lsr #9
   11e20:	andeq	r2, r1, ip, lsr #9
   11e24:	andeq	r2, r1, ip, lsr #9
   11e28:	andeq	r2, r1, ip, lsr #9
   11e2c:	andeq	r2, r1, ip, lsr #9
   11e30:	andeq	r2, r1, r4
   11e34:	andeq	r2, r1, r4, lsl r4
   11e38:	andeq	r2, r1, r4
   11e3c:	andeq	r2, r1, r4, lsr #32
   11e40:	mov	r3, #1
   11e44:	str	r3, [sp, #28]
   11e48:	str	r3, [sp, #52]	; 0x34
   11e4c:	ldr	r3, [pc, #4000]	; 12df4 <close@plt+0x1fa8>
   11e50:	mov	r7, #0
   11e54:	str	r3, [sp, #64]	; 0x40
   11e58:	mov	r3, #2
   11e5c:	str	r3, [sp, #152]	; 0x98
   11e60:	b	11b64 <close@plt+0xd18>
   11e64:	ldr	r3, [sp, #28]
   11e68:	cmp	r3, #0
   11e6c:	beq	11fc8 <close@plt+0x117c>
   11e70:	mov	r3, #1
   11e74:	str	r3, [sp, #52]	; 0x34
   11e78:	ldr	r3, [pc, #3956]	; 12df4 <close@plt+0x1fa8>
   11e7c:	mov	r7, #0
   11e80:	str	r3, [sp, #64]	; 0x40
   11e84:	b	11b64 <close@plt+0xd18>
   11e88:	mov	r3, #1
   11e8c:	str	r3, [sp, #44]	; 0x2c
   11e90:	str	r3, [sp, #52]	; 0x34
   11e94:	str	r3, [sp, #28]
   11e98:	b	11e4c <close@plt+0x1000>
   11e9c:	mov	r3, #0
   11ea0:	str	r3, [sp, #28]
   11ea4:	mov	r3, #1
   11ea8:	str	r3, [sp, #44]	; 0x2c
   11eac:	mov	r7, #0
   11eb0:	b	11b64 <close@plt+0xd18>
   11eb4:	ldr	r3, [sp, #152]	; 0x98
   11eb8:	cmp	r3, #10
   11ebc:	beq	11f00 <close@plt+0x10b4>
   11ec0:	mov	r2, #5
   11ec4:	ldr	r1, [pc, #3884]	; 12df8 <close@plt+0x1fac>
   11ec8:	mov	r0, #0
   11ecc:	bl	10c90 <dcgettext@plt>
   11ed0:	ldr	r2, [pc, #3872]	; 12df8 <close@plt+0x1fac>
   11ed4:	cmp	r0, r2
   11ed8:	str	r0, [sp, #164]	; 0xa4
   11edc:	beq	12ee4 <close@plt+0x2098>
   11ee0:	mov	r2, #5
   11ee4:	ldr	r1, [pc, #3848]	; 12df4 <close@plt+0x1fa8>
   11ee8:	mov	r0, #0
   11eec:	bl	10c90 <dcgettext@plt>
   11ef0:	ldr	r2, [pc, #3836]	; 12df4 <close@plt+0x1fa8>
   11ef4:	cmp	r0, r2
   11ef8:	str	r0, [sp, #168]	; 0xa8
   11efc:	beq	12ed4 <close@plt+0x2088>
   11f00:	ldr	r7, [sp, #28]
   11f04:	cmp	r7, #0
   11f08:	movne	r7, #0
   11f0c:	bne	11f40 <close@plt+0x10f4>
   11f10:	ldr	r3, [sp, #164]	; 0xa4
   11f14:	ldrb	r3, [r3]
   11f18:	cmp	r3, #0
   11f1c:	beq	12ef4 <close@plt+0x20a8>
   11f20:	ldr	r2, [sp, #164]	; 0xa4
   11f24:	ldr	r1, [sp, #32]
   11f28:	cmp	fp, r7
   11f2c:	strbhi	r3, [r1, r7]
   11f30:	ldrb	r3, [r2, #1]!
   11f34:	add	r7, r7, #1
   11f38:	cmp	r3, #0
   11f3c:	bne	11f28 <close@plt+0x10dc>
   11f40:	ldr	r0, [sp, #168]	; 0xa8
   11f44:	bl	10d74 <strlen@plt>
   11f48:	ldr	r3, [sp, #168]	; 0xa8
   11f4c:	str	r3, [sp, #64]	; 0x40
   11f50:	mov	r3, #1
   11f54:	str	r3, [sp, #44]	; 0x2c
   11f58:	str	r0, [sp, #52]	; 0x34
   11f5c:	b	11b64 <close@plt+0xd18>
   11f60:	mov	r3, #1
   11f64:	str	r3, [sp, #44]	; 0x2c
   11f68:	str	r3, [sp, #52]	; 0x34
   11f6c:	str	r3, [sp, #28]
   11f70:	ldr	r3, [pc, #3716]	; 12dfc <close@plt+0x1fb0>
   11f74:	mov	r7, #0
   11f78:	str	r3, [sp, #64]	; 0x40
   11f7c:	mov	r3, #5
   11f80:	str	r3, [sp, #152]	; 0x98
   11f84:	b	11b64 <close@plt+0xd18>
   11f88:	ldr	r3, [sp, #28]
   11f8c:	cmp	r3, #0
   11f90:	beq	12c90 <close@plt+0x1e44>
   11f94:	ldr	r3, [sp, #28]
   11f98:	mov	r7, #0
   11f9c:	str	r3, [sp, #44]	; 0x2c
   11fa0:	mov	r3, #1
   11fa4:	str	r3, [sp, #52]	; 0x34
   11fa8:	ldr	r3, [pc, #3660]	; 12dfc <close@plt+0x1fb0>
   11fac:	str	r3, [sp, #64]	; 0x40
   11fb0:	b	11b64 <close@plt+0xd18>
   11fb4:	ldr	r3, [sp, #28]
   11fb8:	cmp	r3, #0
   11fbc:	mov	r3, #1
   11fc0:	streq	r3, [sp, #44]	; 0x2c
   11fc4:	bne	11e48 <close@plt+0xffc>
   11fc8:	cmp	fp, #0
   11fcc:	beq	12cc0 <close@plt+0x1e74>
   11fd0:	ldr	r3, [sp, #32]
   11fd4:	mov	r2, #39	; 0x27
   11fd8:	mov	r7, #1
   11fdc:	strb	r2, [r3]
   11fe0:	mov	r3, #0
   11fe4:	str	r3, [sp, #28]
   11fe8:	mov	r3, #1
   11fec:	str	r3, [sp, #52]	; 0x34
   11ff0:	ldr	r3, [pc, #3580]	; 12df4 <close@plt+0x1fa8>
   11ff4:	str	r3, [sp, #64]	; 0x40
   11ff8:	mov	r3, #2
   11ffc:	str	r3, [sp, #152]	; 0x98
   12000:	b	11b64 <close@plt+0xd18>
   12004:	ldr	r3, [sp, #24]
   12008:	cmn	r3, #1
   1200c:	beq	12c24 <close@plt+0x1dd8>
   12010:	ldr	r3, [sp, #24]
   12014:	subs	r3, r3, #1
   12018:	movne	r3, #1
   1201c:	cmp	r3, #0
   12020:	bne	1202c <close@plt+0x11e0>
   12024:	cmp	sl, #0
   12028:	beq	12418 <close@plt+0x15cc>
   1202c:	ldr	r3, [sp, #152]	; 0x98
   12030:	mov	r5, #0
   12034:	sub	r2, r3, #2
   12038:	mov	r8, r5
   1203c:	clz	r2, r2
   12040:	lsr	r2, r2, #5
   12044:	ldr	r3, [sp, #60]	; 0x3c
   12048:	ldr	r1, [sp, #28]
   1204c:	orr	r3, r2, r3
   12050:	eor	r3, r3, #1
   12054:	orr	r3, r1, r3
   12058:	tst	r3, #255	; 0xff
   1205c:	bne	12788 <close@plt+0x193c>
   12060:	cmp	r6, #0
   12064:	bne	121b4 <close@plt+0x1368>
   12068:	ldr	r3, [sp, #40]	; 0x28
   1206c:	eor	r8, r8, #1
   12070:	and	r8, r8, r3
   12074:	add	sl, sl, #1
   12078:	uxtb	r6, r8
   1207c:	cmp	r6, #0
   12080:	beq	120b4 <close@plt+0x1268>
   12084:	cmp	fp, r7
   12088:	movhi	r2, #39	; 0x27
   1208c:	ldrhi	r3, [sp, #32]
   12090:	strbhi	r2, [r3, r7]
   12094:	add	r3, r7, #1
   12098:	cmp	fp, r3
   1209c:	movhi	r1, #39	; 0x27
   120a0:	ldrhi	r2, [sp, #32]
   120a4:	add	r7, r7, #2
   120a8:	strbhi	r1, [r2, r3]
   120ac:	mov	r3, #0
   120b0:	str	r3, [sp, #40]	; 0x28
   120b4:	cmp	r7, fp
   120b8:	ldrcc	r3, [sp, #32]
   120bc:	strbcc	r4, [r3, r7]
   120c0:	ldr	r3, [sp, #36]	; 0x24
   120c4:	cmp	r5, #0
   120c8:	moveq	r3, #0
   120cc:	str	r3, [sp, #36]	; 0x24
   120d0:	ldr	r3, [sp, #24]
   120d4:	add	r7, r7, #1
   120d8:	cmn	r3, #1
   120dc:	bne	11b80 <close@plt+0xd34>
   120e0:	ldr	r3, [sp, #56]	; 0x38
   120e4:	ldrb	r5, [r3, sl]
   120e8:	adds	r5, r5, #0
   120ec:	movne	r5, #1
   120f0:	cmp	r5, #0
   120f4:	bne	11b94 <close@plt+0xd48>
   120f8:	ldr	r3, [sp, #152]	; 0x98
   120fc:	ldr	r1, [sp, #28]
   12100:	sub	r3, r3, #2
   12104:	clz	r3, r3
   12108:	lsr	r3, r3, #5
   1210c:	and	r9, r1, r3
   12110:	cmp	r7, #0
   12114:	movne	r2, #0
   12118:	andeq	r2, r9, #1
   1211c:	cmp	r2, #0
   12120:	bne	12afc <close@plt+0x1cb0>
   12124:	eor	r2, r1, #1
   12128:	ands	r3, r3, r2
   1212c:	beq	12fb8 <close@plt+0x216c>
   12130:	ldr	r2, [sp, #68]	; 0x44
   12134:	cmp	r2, #0
   12138:	beq	12fa4 <close@plt+0x2158>
   1213c:	ldr	r3, [sp, #36]	; 0x24
   12140:	cmp	r3, #0
   12144:	bne	12f5c <close@plt+0x2110>
   12148:	ldr	r2, [sp, #72]	; 0x48
   1214c:	clz	r3, fp
   12150:	cmp	r2, #0
   12154:	lsr	r3, r3, #5
   12158:	moveq	r3, #0
   1215c:	cmp	r3, #0
   12160:	beq	12efc <close@plt+0x20b0>
   12164:	str	r3, [sp, #68]	; 0x44
   12168:	ldr	fp, [sp, #72]	; 0x48
   1216c:	b	11b1c <close@plt+0xcd0>
   12170:	ldr	r3, [sp, #152]	; 0x98
   12174:	cmp	r3, #2
   12178:	beq	127cc <close@plt+0x1980>
   1217c:	ldr	r3, [sp, #44]	; 0x2c
   12180:	ldr	r2, [sp, #28]
   12184:	and	r2, r3, r2
   12188:	ands	r2, r9, r2
   1218c:	bne	127d8 <close@plt+0x198c>
   12190:	mov	r4, #92	; 0x5c
   12194:	mov	r3, r4
   12198:	ldr	r1, [sp, #44]	; 0x2c
   1219c:	cmp	r1, #0
   121a0:	moveq	r5, #0
   121a4:	moveq	r8, r1
   121a8:	beq	12044 <close@plt+0x11f8>
   121ac:	mov	r4, r3
   121b0:	mov	r5, #0
   121b4:	ldr	r3, [sp, #28]
   121b8:	cmp	r3, #0
   121bc:	bne	127c0 <close@plt+0x1974>
   121c0:	ldr	r3, [sp, #40]	; 0x28
   121c4:	eor	r9, r3, #1
   121c8:	and	r9, r9, r2
   121cc:	ands	r9, r9, #255	; 0xff
   121d0:	beq	12214 <close@plt+0x13c8>
   121d4:	cmp	fp, r7
   121d8:	movhi	r2, #39	; 0x27
   121dc:	ldrhi	r3, [sp, #32]
   121e0:	str	r9, [sp, #40]	; 0x28
   121e4:	strbhi	r2, [r3, r7]
   121e8:	add	r3, r7, #1
   121ec:	cmp	fp, r3
   121f0:	movhi	r1, #36	; 0x24
   121f4:	ldrhi	r2, [sp, #32]
   121f8:	strbhi	r1, [r2, r3]
   121fc:	add	r3, r7, #2
   12200:	cmp	fp, r3
   12204:	add	r7, r7, #3
   12208:	ldrhi	r2, [sp, #32]
   1220c:	movhi	r1, #39	; 0x27
   12210:	strbhi	r1, [r2, r3]
   12214:	cmp	fp, r7
   12218:	movhi	r2, #92	; 0x5c
   1221c:	ldrhi	r3, [sp, #32]
   12220:	add	sl, sl, #1
   12224:	strbhi	r2, [r3, r7]
   12228:	add	r7, r7, #1
   1222c:	b	120b4 <close@plt+0x1268>
   12230:	ldr	r3, [sp, #152]	; 0x98
   12234:	mov	r4, #11
   12238:	sub	r2, r3, #2
   1223c:	mov	r3, #118	; 0x76
   12240:	clz	r2, r2
   12244:	lsr	r2, r2, #5
   12248:	b	12198 <close@plt+0x134c>
   1224c:	mov	r4, #10
   12250:	mov	r3, #110	; 0x6e
   12254:	ldr	r2, [sp, #152]	; 0x98
   12258:	ldr	r1, [sp, #28]
   1225c:	sub	r2, r2, #2
   12260:	clz	r2, r2
   12264:	lsr	r2, r2, #5
   12268:	ands	r1, r1, r2
   1226c:	beq	12198 <close@plt+0x134c>
   12270:	ldr	sl, [sp, #32]
   12274:	mov	r8, fp
   12278:	mov	r2, r1
   1227c:	mov	r3, #2
   12280:	str	r3, [sp, #152]	; 0x98
   12284:	ldr	r9, [sp, #44]	; 0x2c
   12288:	ldr	r3, [sp, #152]	; 0x98
   1228c:	and	r9, r9, r2
   12290:	tst	r9, #255	; 0xff
   12294:	movne	r3, #4
   12298:	str	r3, [sp, #152]	; 0x98
   1229c:	ldr	r3, [sp, #156]	; 0x9c
   122a0:	mov	ip, #0
   122a4:	bic	r3, r3, #2
   122a8:	str	r3, [sp, #4]
   122ac:	ldr	r3, [sp, #168]	; 0xa8
   122b0:	ldr	r2, [sp, #56]	; 0x38
   122b4:	str	r3, [sp, #16]
   122b8:	ldr	r3, [sp, #164]	; 0xa4
   122bc:	mov	r1, r8
   122c0:	str	r3, [sp, #12]
   122c4:	ldr	r3, [sp, #152]	; 0x98
   122c8:	mov	r0, sl
   122cc:	str	r3, [sp]
   122d0:	str	ip, [sp, #8]
   122d4:	ldr	r3, [sp, #24]
   122d8:	bl	11ac0 <close@plt+0xc74>
   122dc:	mov	fp, r0
   122e0:	mov	r0, fp
   122e4:	add	sp, sp, #116	; 0x74
   122e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122ec:	ldr	r3, [sp, #152]	; 0x98
   122f0:	mov	r4, #8
   122f4:	sub	r2, r3, #2
   122f8:	mov	r3, #98	; 0x62
   122fc:	clz	r2, r2
   12300:	lsr	r2, r2, #5
   12304:	b	12198 <close@plt+0x134c>
   12308:	ldr	r3, [sp, #152]	; 0x98
   1230c:	mov	r4, #7
   12310:	sub	r2, r3, #2
   12314:	mov	r3, #97	; 0x61
   12318:	clz	r2, r2
   1231c:	lsr	r2, r2, #5
   12320:	b	12198 <close@plt+0x134c>
   12324:	ldr	r3, [sp, #44]	; 0x2c
   12328:	cmp	r3, #0
   1232c:	beq	12b10 <close@plt+0x1cc4>
   12330:	ldr	r3, [sp, #28]
   12334:	cmp	r3, #0
   12338:	bne	12de8 <close@plt+0x1f9c>
   1233c:	ldr	r3, [sp, #152]	; 0x98
   12340:	sub	r2, r3, #2
   12344:	ldr	r3, [sp, #40]	; 0x28
   12348:	clz	r2, r2
   1234c:	eor	r3, r3, #1
   12350:	lsr	r2, r2, #5
   12354:	ands	r3, r2, r3
   12358:	moveq	r1, r7
   1235c:	beq	123a0 <close@plt+0x1554>
   12360:	cmp	fp, r7
   12364:	movhi	r0, #39	; 0x27
   12368:	ldrhi	r1, [sp, #32]
   1236c:	str	r3, [sp, #40]	; 0x28
   12370:	strbhi	r0, [r1, r7]
   12374:	add	r1, r7, #1
   12378:	cmp	fp, r1
   1237c:	movhi	ip, #36	; 0x24
   12380:	ldrhi	r0, [sp, #32]
   12384:	strbhi	ip, [r0, r1]
   12388:	add	r1, r7, #2
   1238c:	cmp	fp, r1
   12390:	movhi	ip, #39	; 0x27
   12394:	ldrhi	r0, [sp, #32]
   12398:	strbhi	ip, [r0, r1]
   1239c:	add	r1, r7, #3
   123a0:	cmp	fp, r1
   123a4:	movhi	r0, #92	; 0x5c
   123a8:	ldrhi	r3, [sp, #32]
   123ac:	add	r7, r1, #1
   123b0:	strbhi	r0, [r3, r1]
   123b4:	cmp	r8, #0
   123b8:	beq	12cfc <close@plt+0x1eb0>
   123bc:	ldr	r0, [sp, #24]
   123c0:	add	r3, sl, #1
   123c4:	cmp	r3, r0
   123c8:	bcs	12c38 <close@plt+0x1dec>
   123cc:	ldr	r0, [sp, #56]	; 0x38
   123d0:	ldrb	r3, [r0, r3]
   123d4:	sub	r3, r3, #48	; 0x30
   123d8:	cmp	r3, #9
   123dc:	bhi	12c38 <close@plt+0x1dec>
   123e0:	cmp	fp, r7
   123e4:	movhi	r3, #48	; 0x30
   123e8:	ldrhi	r0, [sp, #32]
   123ec:	ldr	r5, [sp, #28]
   123f0:	mov	r4, #48	; 0x30
   123f4:	strbhi	r3, [r0, r7]
   123f8:	add	r3, r1, #2
   123fc:	cmp	fp, r3
   12400:	movhi	r0, #48	; 0x30
   12404:	ldrhi	ip, [sp, #32]
   12408:	add	r7, r1, #3
   1240c:	strbhi	r0, [ip, r3]
   12410:	b	12044 <close@plt+0x11f8>
   12414:	mov	r5, #0
   12418:	ldr	r3, [sp, #152]	; 0x98
   1241c:	sub	r2, r3, #2
   12420:	ldr	r3, [sp, #28]
   12424:	clz	r2, r2
   12428:	lsr	r2, r2, #5
   1242c:	ands	r8, r3, r2
   12430:	beq	12044 <close@plt+0x11f8>
   12434:	mov	r3, r8
   12438:	mov	r2, r3
   1243c:	mov	r3, #2
   12440:	ldr	sl, [sp, #32]
   12444:	mov	r8, fp
   12448:	str	r3, [sp, #152]	; 0x98
   1244c:	b	12284 <close@plt+0x1438>
   12450:	ldr	r3, [sp, #152]	; 0x98
   12454:	cmp	r3, #2
   12458:	beq	12b7c <close@plt+0x1d30>
   1245c:	cmp	r3, #5
   12460:	beq	12b3c <close@plt+0x1cf0>
   12464:	mov	r5, #0
   12468:	sub	r2, r3, #2
   1246c:	mov	r8, r5
   12470:	clz	r2, r2
   12474:	mov	r4, #63	; 0x3f
   12478:	lsr	r2, r2, #5
   1247c:	b	12044 <close@plt+0x11f8>
   12480:	ldr	r3, [sp, #152]	; 0x98
   12484:	cmp	r3, #2
   12488:	beq	12b9c <close@plt+0x1d50>
   1248c:	mov	r2, #0
   12490:	str	r5, [sp, #68]	; 0x44
   12494:	mov	r8, r2
   12498:	mov	r4, #39	; 0x27
   1249c:	b	12044 <close@plt+0x11f8>
   124a0:	mov	r4, #13
   124a4:	mov	r3, #114	; 0x72
   124a8:	b	12254 <close@plt+0x1408>
   124ac:	ldr	r3, [sp, #152]	; 0x98
   124b0:	mov	r8, #0
   124b4:	sub	r2, r3, #2
   124b8:	clz	r2, r2
   124bc:	lsr	r2, r2, #5
   124c0:	b	12044 <close@plt+0x11f8>
   124c4:	ldr	r3, [sp, #152]	; 0x98
   124c8:	mov	r4, #12
   124cc:	sub	r2, r3, #2
   124d0:	mov	r3, #102	; 0x66
   124d4:	clz	r2, r2
   124d8:	lsr	r2, r2, #5
   124dc:	b	12198 <close@plt+0x134c>
   124e0:	mov	r5, r6
   124e4:	b	12418 <close@plt+0x15cc>
   124e8:	ldr	r3, [sp, #152]	; 0x98
   124ec:	sub	r2, r3, #2
   124f0:	mov	r3, #116	; 0x74
   124f4:	clz	r2, r2
   124f8:	lsr	r2, r2, #5
   124fc:	b	12198 <close@plt+0x134c>
   12500:	ldr	r8, [sp, #76]	; 0x4c
   12504:	cmp	r8, #1
   12508:	bne	129b8 <close@plt+0x1b6c>
   1250c:	bl	10d5c <__ctype_b_loc@plt>
   12510:	sxth	r3, r4
   12514:	mov	ip, r8
   12518:	lsl	r3, r3, #1
   1251c:	ldr	r2, [r0]
   12520:	ldrh	r3, [r2, r3]
   12524:	and	r3, r3, #16384	; 0x4000
   12528:	cmp	r3, #0
   1252c:	movne	r5, #1
   12530:	moveq	r5, #0
   12534:	moveq	r3, #1
   12538:	movne	r3, #0
   1253c:	ldr	r2, [sp, #44]	; 0x2c
   12540:	and	r3, r3, r2
   12544:	ands	r8, r3, #255	; 0xff
   12548:	bne	1284c <close@plt+0x1a00>
   1254c:	ldr	r3, [sp, #152]	; 0x98
   12550:	sub	r2, r3, #2
   12554:	clz	r2, r2
   12558:	lsr	r2, r2, #5
   1255c:	b	12044 <close@plt+0x11f8>
   12560:	ldr	r3, [sp, #56]	; 0x38
   12564:	add	r3, r3, sl
   12568:	str	r3, [sp, #48]	; 0x30
   1256c:	ldr	r3, [sp, #48]	; 0x30
   12570:	mov	r6, #0
   12574:	ldrb	r4, [r3]
   12578:	cmp	r4, #126	; 0x7e
   1257c:	ldrls	pc, [pc, r4, lsl #2]
   12580:	b	12500 <close@plt+0x16b4>
   12584:	andeq	r2, r1, r4, lsr #6
   12588:	andeq	r2, r1, r0, lsl #10
   1258c:	andeq	r2, r1, r0, lsl #10
   12590:	andeq	r2, r1, r0, lsl #10
   12594:	andeq	r2, r1, r0, lsl #10
   12598:	andeq	r2, r1, r0, lsl #10
   1259c:	andeq	r2, r1, r0, lsl #10
   125a0:	andeq	r2, r1, r8, lsl #6
   125a4:	andeq	r2, r1, ip, ror #5
   125a8:	andeq	r2, r1, r0, lsl #15
   125ac:	andeq	r2, r1, ip, asr #4
   125b0:	andeq	r2, r1, r0, lsr r2
   125b4:	andeq	r2, r1, r4, asr #9
   125b8:	andeq	r2, r1, r0, lsr #9
   125bc:	andeq	r2, r1, r0, lsl #10
   125c0:	andeq	r2, r1, r0, lsl #10
   125c4:	andeq	r2, r1, r0, lsl #10
   125c8:	andeq	r2, r1, r0, lsl #10
   125cc:	andeq	r2, r1, r0, lsl #10
   125d0:	andeq	r2, r1, r0, lsl #10
   125d4:	andeq	r2, r1, r0, lsl #10
   125d8:	andeq	r2, r1, r0, lsl #10
   125dc:	andeq	r2, r1, r0, lsl #10
   125e0:	andeq	r2, r1, r0, lsl #10
   125e4:	andeq	r2, r1, r0, lsl #10
   125e8:	andeq	r2, r1, r0, lsl #10
   125ec:	andeq	r2, r1, r0, lsl #10
   125f0:	andeq	r2, r1, r0, lsl #10
   125f4:	andeq	r2, r1, r0, lsl #10
   125f8:	andeq	r2, r1, r0, lsl #10
   125fc:	andeq	r2, r1, r0, lsl #10
   12600:	andeq	r2, r1, r0, lsl #10
   12604:	andeq	r2, r1, r8, lsl r4
   12608:	andeq	r2, r1, r4, lsl r4
   1260c:	andeq	r2, r1, r4, lsl r4
   12610:	andeq	r2, r1, r4, lsr #32
   12614:	andeq	r2, r1, r4, lsl r4
   12618:	andeq	r2, r1, ip, lsr #9
   1261c:	andeq	r2, r1, r4, lsl r4
   12620:	andeq	r2, r1, r0, lsl #9
   12624:	andeq	r2, r1, r4, lsl r4
   12628:	andeq	r2, r1, r4, lsl r4
   1262c:	andeq	r2, r1, r4, lsl r4
   12630:	andeq	r2, r1, ip, lsr #9
   12634:	andeq	r2, r1, ip, lsr #9
   12638:	andeq	r2, r1, ip, lsr #9
   1263c:	andeq	r2, r1, ip, lsr #9
   12640:	andeq	r2, r1, ip, lsr #9
   12644:	andeq	r2, r1, ip, lsr #9
   12648:	andeq	r2, r1, ip, lsr #9
   1264c:	andeq	r2, r1, ip, lsr #9
   12650:	andeq	r2, r1, ip, lsr #9
   12654:	andeq	r2, r1, ip, lsr #9
   12658:	andeq	r2, r1, ip, lsr #9
   1265c:	andeq	r2, r1, ip, lsr #9
   12660:	andeq	r2, r1, ip, lsr #9
   12664:	andeq	r2, r1, ip, lsr #9
   12668:	andeq	r2, r1, ip, lsr #9
   1266c:	andeq	r2, r1, ip, lsr #9
   12670:	andeq	r2, r1, r4, lsl r4
   12674:	andeq	r2, r1, r4, lsl r4
   12678:	andeq	r2, r1, r4, lsl r4
   1267c:	andeq	r2, r1, r4, lsl r4
   12680:	andeq	r2, r1, r0, asr r4
   12684:	andeq	r2, r1, r0, lsl #10
   12688:	andeq	r2, r1, ip, lsr #9
   1268c:	andeq	r2, r1, ip, lsr #9
   12690:	andeq	r2, r1, ip, lsr #9
   12694:	andeq	r2, r1, ip, lsr #9
   12698:	andeq	r2, r1, ip, lsr #9
   1269c:	andeq	r2, r1, ip, lsr #9
   126a0:	andeq	r2, r1, ip, lsr #9
   126a4:	andeq	r2, r1, ip, lsr #9
   126a8:	andeq	r2, r1, ip, lsr #9
   126ac:	andeq	r2, r1, ip, lsr #9
   126b0:	andeq	r2, r1, ip, lsr #9
   126b4:	andeq	r2, r1, ip, lsr #9
   126b8:	andeq	r2, r1, ip, lsr #9
   126bc:	andeq	r2, r1, ip, lsr #9
   126c0:	andeq	r2, r1, ip, lsr #9
   126c4:	andeq	r2, r1, ip, lsr #9
   126c8:	andeq	r2, r1, ip, lsr #9
   126cc:	andeq	r2, r1, ip, lsr #9
   126d0:	andeq	r2, r1, ip, lsr #9
   126d4:	andeq	r2, r1, ip, lsr #9
   126d8:	andeq	r2, r1, ip, lsr #9
   126dc:	andeq	r2, r1, ip, lsr #9
   126e0:	andeq	r2, r1, ip, lsr #9
   126e4:	andeq	r2, r1, ip, lsr #9
   126e8:	andeq	r2, r1, ip, lsr #9
   126ec:	andeq	r2, r1, ip, lsr #9
   126f0:	andeq	r2, r1, r4, lsl r4
   126f4:	andeq	r2, r1, r0, ror r1
   126f8:	andeq	r2, r1, ip, lsr #9
   126fc:	andeq	r2, r1, r4, lsl r4
   12700:	andeq	r2, r1, ip, lsr #9
   12704:	andeq	r2, r1, r4, lsl r4
   12708:	andeq	r2, r1, ip, lsr #9
   1270c:	andeq	r2, r1, ip, lsr #9
   12710:	andeq	r2, r1, ip, lsr #9
   12714:	andeq	r2, r1, ip, lsr #9
   12718:	andeq	r2, r1, ip, lsr #9
   1271c:	andeq	r2, r1, ip, lsr #9
   12720:	andeq	r2, r1, ip, lsr #9
   12724:	andeq	r2, r1, ip, lsr #9
   12728:	andeq	r2, r1, ip, lsr #9
   1272c:	andeq	r2, r1, ip, lsr #9
   12730:	andeq	r2, r1, ip, lsr #9
   12734:	andeq	r2, r1, ip, lsr #9
   12738:	andeq	r2, r1, ip, lsr #9
   1273c:	andeq	r2, r1, ip, lsr #9
   12740:	andeq	r2, r1, ip, lsr #9
   12744:	andeq	r2, r1, ip, lsr #9
   12748:	andeq	r2, r1, ip, lsr #9
   1274c:	andeq	r2, r1, ip, lsr #9
   12750:	andeq	r2, r1, ip, lsr #9
   12754:	andeq	r2, r1, ip, lsr #9
   12758:	andeq	r2, r1, ip, lsr #9
   1275c:	andeq	r2, r1, ip, lsr #9
   12760:	andeq	r2, r1, ip, lsr #9
   12764:	andeq	r2, r1, ip, lsr #9
   12768:	andeq	r2, r1, ip, lsr #9
   1276c:	andeq	r2, r1, ip, lsr #9
   12770:	andeq	r2, r1, r4
   12774:	andeq	r2, r1, r4, lsl r4
   12778:	andeq	r2, r1, r4
   1277c:	andeq	r2, r1, r4, lsr #32
   12780:	mov	r3, #116	; 0x74
   12784:	b	12254 <close@plt+0x1408>
   12788:	ldr	r3, [sp, #160]	; 0xa0
   1278c:	cmp	r3, #0
   12790:	beq	12060 <close@plt+0x1214>
   12794:	lsr	r3, r4, #5
   12798:	ldr	r0, [sp, #160]	; 0xa0
   1279c:	uxtb	r3, r3
   127a0:	and	r1, r4, #31
   127a4:	ldr	r0, [r0, r3, lsl #2]
   127a8:	lsr	r3, r0, r1
   127ac:	tst	r3, #1
   127b0:	beq	12060 <close@plt+0x1214>
   127b4:	ldr	r3, [sp, #28]
   127b8:	cmp	r3, #0
   127bc:	beq	121c0 <close@plt+0x1374>
   127c0:	ldr	sl, [sp, #32]
   127c4:	mov	r8, fp
   127c8:	b	12284 <close@plt+0x1438>
   127cc:	ldr	r3, [sp, #28]
   127d0:	cmp	r3, #0
   127d4:	bne	12d28 <close@plt+0x1edc>
   127d8:	add	sl, sl, #1
   127dc:	ldr	r6, [sp, #40]	; 0x28
   127e0:	mov	r5, #0
   127e4:	mov	r4, #92	; 0x5c
   127e8:	b	1207c <close@plt+0x1230>
   127ec:	cmp	r9, r8
   127f0:	bne	12a60 <close@plt+0x1c14>
   127f4:	ldr	r0, [sp, #100]	; 0x64
   127f8:	bl	10cc0 <iswprint@plt>
   127fc:	add	r5, r5, r4
   12800:	cmp	r0, #0
   12804:	add	r0, sp, #104	; 0x68
   12808:	moveq	r6, #0
   1280c:	bl	10c6c <mbsinit@plt>
   12810:	cmp	r0, #0
   12814:	beq	129f4 <close@plt+0x1ba8>
   12818:	mov	r2, r6
   1281c:	mov	ip, r5
   12820:	eor	r5, r2, #1
   12824:	ldr	r4, [sp, #80]	; 0x50
   12828:	ldr	r6, [sp, #84]	; 0x54
   1282c:	ldr	r7, [sp, #88]	; 0x58
   12830:	uxtb	r5, r5
   12834:	cmp	ip, #1
   12838:	bls	12d38 <close@plt+0x1eec>
   1283c:	ldr	r3, [sp, #44]	; 0x2c
   12840:	and	r8, r3, r5
   12844:	mov	r5, r2
   12848:	uxtb	r8, r8
   1284c:	add	r2, sl, ip
   12850:	ldr	r0, [sp, #48]	; 0x30
   12854:	mov	r1, #0
   12858:	str	r5, [sp, #48]	; 0x30
   1285c:	ldr	r9, [sp, #28]
   12860:	ldr	ip, [sp, #40]	; 0x28
   12864:	ldr	r3, [sp, #32]
   12868:	ldr	r5, [sp, #152]	; 0x98
   1286c:	b	12928 <close@plt+0x1adc>
   12870:	cmp	r9, #0
   12874:	bne	12c4c <close@plt+0x1e00>
   12878:	eor	r1, ip, #1
   1287c:	cmp	r5, #2
   12880:	movne	r1, #0
   12884:	andeq	r1, r1, #1
   12888:	cmp	r1, #0
   1288c:	beq	128c4 <close@plt+0x1a78>
   12890:	cmp	fp, r7
   12894:	movhi	ip, #39	; 0x27
   12898:	strbhi	ip, [r3, r7]
   1289c:	add	ip, r7, #1
   128a0:	cmp	fp, ip
   128a4:	movhi	lr, #36	; 0x24
   128a8:	strbhi	lr, [r3, ip]
   128ac:	add	ip, r7, #2
   128b0:	cmp	fp, ip
   128b4:	movhi	lr, #39	; 0x27
   128b8:	strbhi	lr, [r3, ip]
   128bc:	add	r7, r7, #3
   128c0:	mov	ip, r1
   128c4:	cmp	fp, r7
   128c8:	movhi	r1, #92	; 0x5c
   128cc:	strbhi	r1, [r3, r7]
   128d0:	add	r1, r7, #1
   128d4:	cmp	fp, r1
   128d8:	lsrhi	lr, r4, #6
   128dc:	addhi	lr, lr, #48	; 0x30
   128e0:	strbhi	lr, [r3, r1]
   128e4:	add	lr, r7, #2
   128e8:	cmp	fp, lr
   128ec:	lsrhi	r1, r4, #3
   128f0:	andhi	r1, r1, #7
   128f4:	addhi	r1, r1, #48	; 0x30
   128f8:	add	sl, sl, #1
   128fc:	strbhi	r1, [r3, lr]
   12900:	and	r4, r4, #7
   12904:	cmp	r2, sl
   12908:	add	r4, r4, #48	; 0x30
   1290c:	add	r7, r7, #3
   12910:	bls	12c70 <close@plt+0x1e24>
   12914:	mov	r1, r8
   12918:	cmp	fp, r7
   1291c:	strbhi	r4, [r3, r7]
   12920:	ldrb	r4, [r0, #1]!
   12924:	add	r7, r7, #1
   12928:	cmp	r8, #0
   1292c:	bne	12870 <close@plt+0x1a24>
   12930:	cmp	r6, #0
   12934:	bne	12984 <close@plt+0x1b38>
   12938:	eor	r6, r1, #1
   1293c:	and	r6, r6, ip
   12940:	add	sl, sl, #1
   12944:	cmp	r2, sl
   12948:	uxtb	r6, r6
   1294c:	bls	129ac <close@plt+0x1b60>
   12950:	cmp	r6, #0
   12954:	beq	12918 <close@plt+0x1acc>
   12958:	cmp	fp, r7
   1295c:	movhi	ip, #39	; 0x27
   12960:	strbhi	ip, [r3, r7]
   12964:	add	ip, r7, #1
   12968:	cmp	fp, ip
   1296c:	movhi	lr, #39	; 0x27
   12970:	strbhi	lr, [r3, ip]
   12974:	add	r7, r7, #2
   12978:	mov	r6, r8
   1297c:	mov	ip, r8
   12980:	b	12918 <close@plt+0x1acc>
   12984:	cmp	fp, r7
   12988:	eor	r6, r1, #1
   1298c:	movhi	lr, #92	; 0x5c
   12990:	and	r6, r6, ip
   12994:	add	sl, sl, #1
   12998:	strbhi	lr, [r3, r7]
   1299c:	cmp	r2, sl
   129a0:	add	r7, r7, #1
   129a4:	uxtb	r6, r6
   129a8:	bhi	12950 <close@plt+0x1b04>
   129ac:	str	ip, [sp, #40]	; 0x28
   129b0:	ldr	r5, [sp, #48]	; 0x30
   129b4:	b	1207c <close@plt+0x1230>
   129b8:	ldr	r3, [sp, #24]
   129bc:	cmn	r3, #1
   129c0:	mov	r3, #0
   129c4:	str	r3, [sp, #104]	; 0x68
   129c8:	str	r3, [sp, #108]	; 0x6c
   129cc:	beq	12cec <close@plt+0x1ea0>
   129d0:	mov	r2, r5
   129d4:	mov	r3, #0
   129d8:	str	r7, [sp, #88]	; 0x58
   129dc:	ldr	r7, [sp, #152]	; 0x98
   129e0:	str	r5, [sp, #92]	; 0x5c
   129e4:	str	r6, [sp, #84]	; 0x54
   129e8:	mov	r5, r3
   129ec:	mov	r6, r2
   129f0:	str	r4, [sp, #80]	; 0x50
   129f4:	ldr	r3, [sp, #56]	; 0x38
   129f8:	add	r9, sl, r5
   129fc:	add	r8, r3, r9
   12a00:	ldr	r3, [sp, #24]
   12a04:	mov	r1, r8
   12a08:	sub	r2, r3, r9
   12a0c:	add	r0, sp, #100	; 0x64
   12a10:	add	r3, sp, #104	; 0x68
   12a14:	bl	145b4 <close@plt+0x3768>
   12a18:	subs	r4, r0, #0
   12a1c:	beq	12dc4 <close@plt+0x1f78>
   12a20:	cmn	r4, #1
   12a24:	beq	12da4 <close@plt+0x1f58>
   12a28:	cmn	r4, #2
   12a2c:	beq	12d44 <close@plt+0x1ef8>
   12a30:	ldr	r2, [sp, #28]
   12a34:	cmp	r7, #2
   12a38:	movne	r2, #0
   12a3c:	andeq	r2, r2, #1
   12a40:	cmp	r2, #0
   12a44:	beq	127f4 <close@plt+0x19a8>
   12a48:	cmp	r4, #1
   12a4c:	beq	127f4 <close@plt+0x19a8>
   12a50:	sub	r3, r4, #1
   12a54:	add	r9, r3, r9
   12a58:	ldr	r3, [sp, #56]	; 0x38
   12a5c:	add	r9, r3, r9
   12a60:	ldrb	r3, [r8, #1]!
   12a64:	sub	r3, r3, #91	; 0x5b
   12a68:	cmp	r3, #33	; 0x21
   12a6c:	ldrls	pc, [pc, r3, lsl #2]
   12a70:	b	127ec <close@plt+0x19a0>
   12a74:	strdeq	r2, [r1], -ip
   12a78:	strdeq	r2, [r1], -ip
   12a7c:	andeq	r2, r1, ip, ror #15
   12a80:	strdeq	r2, [r1], -ip
   12a84:	andeq	r2, r1, ip, ror #15
   12a88:	strdeq	r2, [r1], -ip
   12a8c:	andeq	r2, r1, ip, ror #15
   12a90:	andeq	r2, r1, ip, ror #15
   12a94:	andeq	r2, r1, ip, ror #15
   12a98:	andeq	r2, r1, ip, ror #15
   12a9c:	andeq	r2, r1, ip, ror #15
   12aa0:	andeq	r2, r1, ip, ror #15
   12aa4:	andeq	r2, r1, ip, ror #15
   12aa8:	andeq	r2, r1, ip, ror #15
   12aac:	andeq	r2, r1, ip, ror #15
   12ab0:	andeq	r2, r1, ip, ror #15
   12ab4:	andeq	r2, r1, ip, ror #15
   12ab8:	andeq	r2, r1, ip, ror #15
   12abc:	andeq	r2, r1, ip, ror #15
   12ac0:	andeq	r2, r1, ip, ror #15
   12ac4:	andeq	r2, r1, ip, ror #15
   12ac8:	andeq	r2, r1, ip, ror #15
   12acc:	andeq	r2, r1, ip, ror #15
   12ad0:	andeq	r2, r1, ip, ror #15
   12ad4:	andeq	r2, r1, ip, ror #15
   12ad8:	andeq	r2, r1, ip, ror #15
   12adc:	andeq	r2, r1, ip, ror #15
   12ae0:	andeq	r2, r1, ip, ror #15
   12ae4:	andeq	r2, r1, ip, ror #15
   12ae8:	andeq	r2, r1, ip, ror #15
   12aec:	andeq	r2, r1, ip, ror #15
   12af0:	andeq	r2, r1, ip, ror #15
   12af4:	andeq	r2, r1, ip, ror #15
   12af8:	strdeq	r2, [r1], -ip
   12afc:	mov	r3, #2
   12b00:	ldr	sl, [sp, #32]
   12b04:	mov	r8, fp
   12b08:	str	r3, [sp, #152]	; 0x98
   12b0c:	b	12284 <close@plt+0x1438>
   12b10:	ldr	r3, [sp, #156]	; 0x9c
   12b14:	tst	r3, #1
   12b18:	bne	12c44 <close@plt+0x1df8>
   12b1c:	ldr	r3, [sp, #152]	; 0x98
   12b20:	ldr	r4, [sp, #44]	; 0x2c
   12b24:	sub	r2, r3, #2
   12b28:	mov	r5, #0
   12b2c:	clz	r2, r2
   12b30:	mov	r8, r4
   12b34:	lsr	r2, r2, #5
   12b38:	b	12044 <close@plt+0x11f8>
   12b3c:	ldr	r3, [sp, #156]	; 0x9c
   12b40:	ands	r9, r3, #4
   12b44:	beq	12c7c <close@plt+0x1e30>
   12b48:	ldr	r2, [sp, #24]
   12b4c:	add	r3, sl, #2
   12b50:	cmp	r3, r2
   12b54:	bcs	12b68 <close@plt+0x1d1c>
   12b58:	ldr	r2, [sp, #48]	; 0x30
   12b5c:	ldrb	r4, [r2, #1]
   12b60:	cmp	r4, #63	; 0x3f
   12b64:	beq	12e04 <close@plt+0x1fb8>
   12b68:	mov	r2, #0
   12b6c:	mov	r8, r2
   12b70:	mov	r5, r2
   12b74:	mov	r4, #63	; 0x3f
   12b78:	b	12044 <close@plt+0x11f8>
   12b7c:	ldr	r3, [sp, #28]
   12b80:	cmp	r3, #0
   12b84:	bne	12ea8 <close@plt+0x205c>
   12b88:	mov	r2, r5
   12b8c:	mov	r8, r3
   12b90:	mov	r5, #0
   12b94:	mov	r4, #63	; 0x3f
   12b98:	b	12044 <close@plt+0x11f8>
   12b9c:	ldr	r3, [sp, #28]
   12ba0:	cmp	r3, #0
   12ba4:	bne	12ea8 <close@plt+0x205c>
   12ba8:	ldr	r2, [sp, #72]	; 0x48
   12bac:	adds	r3, fp, #0
   12bb0:	movne	r3, #1
   12bb4:	cmp	r2, #0
   12bb8:	movne	r3, #0
   12bbc:	cmp	r3, #0
   12bc0:	strne	fp, [sp, #72]	; 0x48
   12bc4:	movne	fp, #0
   12bc8:	bne	12c04 <close@plt+0x1db8>
   12bcc:	cmp	fp, r7
   12bd0:	movhi	r2, #39	; 0x27
   12bd4:	ldrhi	r3, [sp, #32]
   12bd8:	strbhi	r2, [r3, r7]
   12bdc:	add	r3, r7, #1
   12be0:	cmp	fp, r3
   12be4:	movhi	r1, #92	; 0x5c
   12be8:	ldrhi	r2, [sp, #32]
   12bec:	strbhi	r1, [r2, r3]
   12bf0:	add	r3, r7, #2
   12bf4:	cmp	fp, r3
   12bf8:	movhi	r1, #39	; 0x27
   12bfc:	ldrhi	r2, [sp, #32]
   12c00:	strbhi	r1, [r2, r3]
   12c04:	ldr	r3, [sp, #28]
   12c08:	add	r7, r7, #3
   12c0c:	mov	r2, r5
   12c10:	mov	r8, r3
   12c14:	str	r5, [sp, #68]	; 0x44
   12c18:	str	r3, [sp, #40]	; 0x28
   12c1c:	mov	r4, #39	; 0x27
   12c20:	b	12044 <close@plt+0x11f8>
   12c24:	ldr	r3, [sp, #56]	; 0x38
   12c28:	ldrb	r3, [r3, #1]
   12c2c:	adds	r3, r3, #0
   12c30:	movne	r3, #1
   12c34:	b	1201c <close@plt+0x11d0>
   12c38:	ldr	r5, [sp, #28]
   12c3c:	mov	r4, #48	; 0x30
   12c40:	b	12044 <close@plt+0x11f8>
   12c44:	add	sl, sl, #1
   12c48:	b	11b74 <close@plt+0xd28>
   12c4c:	mov	sl, r3
   12c50:	ldr	r3, [sp, #28]
   12c54:	mov	r8, fp
   12c58:	str	r3, [sp, #44]	; 0x2c
   12c5c:	ldr	r3, [sp, #152]	; 0x98
   12c60:	sub	r2, r3, #2
   12c64:	clz	r2, r2
   12c68:	lsr	r2, r2, #5
   12c6c:	b	12284 <close@plt+0x1438>
   12c70:	str	ip, [sp, #40]	; 0x28
   12c74:	ldr	r5, [sp, #48]	; 0x30
   12c78:	b	120b4 <close@plt+0x1268>
   12c7c:	mov	r2, r9
   12c80:	mov	r8, r9
   12c84:	mov	r5, #0
   12c88:	mov	r4, #63	; 0x3f
   12c8c:	b	12044 <close@plt+0x11f8>
   12c90:	cmp	fp, #0
   12c94:	beq	12d0c <close@plt+0x1ec0>
   12c98:	ldr	r1, [sp, #32]
   12c9c:	mov	r3, #34	; 0x22
   12ca0:	mov	r2, #1
   12ca4:	strb	r3, [r1]
   12ca8:	ldr	r3, [pc, #332]	; 12dfc <close@plt+0x1fb0>
   12cac:	str	r2, [sp, #52]	; 0x34
   12cb0:	mov	r7, r2
   12cb4:	str	r2, [sp, #44]	; 0x2c
   12cb8:	str	r3, [sp, #64]	; 0x40
   12cbc:	b	11b64 <close@plt+0xd18>
   12cc0:	ldr	r3, [pc, #300]	; 12df4 <close@plt+0x1fa8>
   12cc4:	str	r3, [sp, #64]	; 0x40
   12cc8:	mov	r3, #0
   12ccc:	str	r3, [sp, #28]
   12cd0:	mov	r3, #1
   12cd4:	str	r3, [sp, #52]	; 0x34
   12cd8:	mov	r7, r3
   12cdc:	mov	r3, #2
   12ce0:	str	r3, [sp, #152]	; 0x98
   12ce4:	b	11b64 <close@plt+0xd18>
   12ce8:	bl	10e40 <abort@plt>
   12cec:	ldr	r0, [sp, #56]	; 0x38
   12cf0:	bl	10d74 <strlen@plt>
   12cf4:	str	r0, [sp, #24]
   12cf8:	b	129d0 <close@plt+0x1b84>
   12cfc:	mov	r5, r8
   12d00:	mov	r4, #48	; 0x30
   12d04:	ldr	r8, [sp, #44]	; 0x2c
   12d08:	b	12044 <close@plt+0x11f8>
   12d0c:	mov	r3, #1
   12d10:	str	r3, [sp, #52]	; 0x34
   12d14:	mov	r7, r3
   12d18:	str	r3, [sp, #44]	; 0x2c
   12d1c:	ldr	r3, [pc, #216]	; 12dfc <close@plt+0x1fb0>
   12d20:	str	r3, [sp, #64]	; 0x40
   12d24:	b	11b64 <close@plt+0xd18>
   12d28:	ldr	sl, [sp, #32]
   12d2c:	mov	r8, fp
   12d30:	mov	r2, r3
   12d34:	b	12284 <close@plt+0x1438>
   12d38:	mov	r3, r5
   12d3c:	mov	r5, r2
   12d40:	b	1253c <close@plt+0x16f0>
   12d44:	ldr	r1, [sp, #24]
   12d48:	mov	r2, r5
   12d4c:	cmp	r1, r9
   12d50:	mov	ip, r5
   12d54:	ldr	r4, [sp, #80]	; 0x50
   12d58:	ldr	r5, [sp, #92]	; 0x5c
   12d5c:	ldr	r6, [sp, #84]	; 0x54
   12d60:	ldr	r7, [sp, #88]	; 0x58
   12d64:	bls	12d98 <close@plt+0x1f4c>
   12d68:	ldrb	r3, [r8]
   12d6c:	cmp	r3, #0
   12d70:	bne	12d84 <close@plt+0x1f38>
   12d74:	b	12d9c <close@plt+0x1f50>
   12d78:	ldrb	r3, [r8, #1]!
   12d7c:	cmp	r3, #0
   12d80:	beq	12e9c <close@plt+0x2050>
   12d84:	add	r2, r2, #1
   12d88:	add	r3, sl, r2
   12d8c:	cmp	r1, r3
   12d90:	bhi	12d78 <close@plt+0x1f2c>
   12d94:	mov	ip, r2
   12d98:	mov	r3, #0
   12d9c:	mov	r2, r3
   12da0:	b	12834 <close@plt+0x19e8>
   12da4:	mov	r3, #0
   12da8:	mov	ip, r5
   12dac:	ldr	r4, [sp, #80]	; 0x50
   12db0:	ldr	r5, [sp, #92]	; 0x5c
   12db4:	ldr	r6, [sp, #84]	; 0x54
   12db8:	ldr	r7, [sp, #88]	; 0x58
   12dbc:	mov	r2, r3
   12dc0:	b	12834 <close@plt+0x19e8>
   12dc4:	mov	r3, r6
   12dc8:	mov	ip, r5
   12dcc:	eor	r5, r3, #1
   12dd0:	mov	r2, r6
   12dd4:	ldr	r4, [sp, #80]	; 0x50
   12dd8:	ldr	r6, [sp, #84]	; 0x54
   12ddc:	ldr	r7, [sp, #88]	; 0x58
   12de0:	uxtb	r5, r5
   12de4:	b	12834 <close@plt+0x19e8>
   12de8:	ldr	sl, [sp, #32]
   12dec:	mov	r8, fp
   12df0:	b	12c58 <close@plt+0x1e0c>
   12df4:	andeq	r5, r1, r4, asr #3
   12df8:	andeq	r5, r1, r8, asr #3
   12dfc:	andeq	r5, r1, r0, asr #3
   12e00:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12e04:	ldr	r2, [sp, #56]	; 0x38
   12e08:	ldrb	r1, [r2, r3]
   12e0c:	sub	r2, r1, #33	; 0x21
   12e10:	uxtb	r2, r2
   12e14:	cmp	r2, #29
   12e18:	bhi	12eb8 <close@plt+0x206c>
   12e1c:	ldr	r0, [pc, #-36]	; 12e00 <close@plt+0x1fb4>
   12e20:	mov	ip, #1
   12e24:	ands	r2, r0, ip, lsl r2
   12e28:	beq	12ec8 <close@plt+0x207c>
   12e2c:	ldr	r2, [sp, #28]
   12e30:	cmp	r2, #0
   12e34:	bne	12fc8 <close@plt+0x217c>
   12e38:	cmp	fp, r7
   12e3c:	ldr	r8, [sp, #28]
   12e40:	ldrhi	r2, [sp, #32]
   12e44:	mov	sl, r3
   12e48:	mov	r5, r8
   12e4c:	strbhi	r4, [r2, r7]
   12e50:	add	r2, r7, #1
   12e54:	cmp	fp, r2
   12e58:	movhi	r0, #34	; 0x22
   12e5c:	ldrhi	ip, [sp, #32]
   12e60:	mov	r4, r1
   12e64:	strbhi	r0, [ip, r2]
   12e68:	add	r2, r7, #2
   12e6c:	cmp	fp, r2
   12e70:	movhi	r0, #34	; 0x22
   12e74:	ldrhi	ip, [sp, #32]
   12e78:	strbhi	r0, [ip, r2]
   12e7c:	add	r2, r7, #3
   12e80:	cmp	fp, r2
   12e84:	movhi	r0, #63	; 0x3f
   12e88:	ldrhi	ip, [sp, #32]
   12e8c:	add	r7, r7, #4
   12e90:	strbhi	r0, [ip, r2]
   12e94:	mov	r2, r8
   12e98:	b	12044 <close@plt+0x11f8>
   12e9c:	mov	ip, r2
   12ea0:	mov	r2, r3
   12ea4:	b	12834 <close@plt+0x19e8>
   12ea8:	ldr	sl, [sp, #32]
   12eac:	mov	r8, fp
   12eb0:	ldr	r2, [sp, #28]
   12eb4:	b	12284 <close@plt+0x1438>
   12eb8:	mov	r2, #0
   12ebc:	mov	r8, r2
   12ec0:	mov	r5, r2
   12ec4:	b	12044 <close@plt+0x11f8>
   12ec8:	mov	r8, r2
   12ecc:	mov	r5, #0
   12ed0:	b	12044 <close@plt+0x11f8>
   12ed4:	ldr	r1, [sp, #152]	; 0x98
   12ed8:	bl	119a0 <close@plt+0xb54>
   12edc:	str	r0, [sp, #168]	; 0xa8
   12ee0:	b	11f00 <close@plt+0x10b4>
   12ee4:	ldr	r1, [sp, #152]	; 0x98
   12ee8:	bl	119a0 <close@plt+0xb54>
   12eec:	str	r0, [sp, #164]	; 0xa4
   12ef0:	b	11ee0 <close@plt+0x1094>
   12ef4:	ldr	r7, [sp, #28]
   12ef8:	b	11f40 <close@plt+0x10f4>
   12efc:	ldr	sl, [sp, #32]
   12f00:	ldr	r2, [sp, #68]	; 0x44
   12f04:	mov	r8, fp
   12f08:	mov	fp, r7
   12f0c:	ldr	r3, [sp, #64]	; 0x40
   12f10:	cmp	r3, #0
   12f14:	moveq	r2, #0
   12f18:	andne	r2, r2, #1
   12f1c:	cmp	r2, #0
   12f20:	beq	12f4c <close@plt+0x2100>
   12f24:	mov	r2, r3
   12f28:	ldrb	r3, [r3]
   12f2c:	cmp	r3, #0
   12f30:	beq	12f4c <close@plt+0x2100>
   12f34:	cmp	r8, fp
   12f38:	strbhi	r3, [sl, fp]
   12f3c:	ldrb	r3, [r2, #1]!
   12f40:	add	fp, fp, #1
   12f44:	cmp	r3, #0
   12f48:	bne	12f34 <close@plt+0x20e8>
   12f4c:	cmp	r8, fp
   12f50:	movhi	r3, #0
   12f54:	strbhi	r3, [sl, fp]
   12f58:	b	122e0 <close@plt+0x1494>
   12f5c:	ldr	r3, [sp, #168]	; 0xa8
   12f60:	ldr	sl, [sp, #32]
   12f64:	str	r3, [sp, #16]
   12f68:	ldr	r3, [sp, #164]	; 0xa4
   12f6c:	mov	ip, #5
   12f70:	str	r3, [sp, #12]
   12f74:	ldr	r3, [sp, #160]	; 0xa0
   12f78:	ldr	r2, [sp, #56]	; 0x38
   12f7c:	str	r3, [sp, #8]
   12f80:	ldr	r3, [sp, #156]	; 0x9c
   12f84:	ldr	r1, [sp, #72]	; 0x48
   12f88:	str	r3, [sp, #4]
   12f8c:	mov	r0, sl
   12f90:	ldr	r3, [sp, #24]
   12f94:	str	ip, [sp]
   12f98:	bl	11ac0 <close@plt+0xc74>
   12f9c:	mov	fp, r0
   12fa0:	b	122e0 <close@plt+0x1494>
   12fa4:	mov	r8, fp
   12fa8:	ldr	sl, [sp, #32]
   12fac:	mov	fp, r7
   12fb0:	mov	r2, r3
   12fb4:	b	12f0c <close@plt+0x20c0>
   12fb8:	mov	r8, fp
   12fbc:	ldr	sl, [sp, #32]
   12fc0:	mov	fp, r7
   12fc4:	b	12f0c <close@plt+0x20c0>
   12fc8:	ldr	sl, [sp, #32]
   12fcc:	mov	r8, fp
   12fd0:	b	1229c <close@plt+0x1450>
   12fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fd8:	sub	sp, sp, #52	; 0x34
   12fdc:	mov	r4, r0
   12fe0:	mov	r5, r3
   12fe4:	mov	sl, r1
   12fe8:	mov	fp, r2
   12fec:	bl	10d80 <__errno_location@plt>
   12ff0:	ldr	r7, [pc, #412]	; 13194 <close@plt+0x2348>
   12ff4:	cmn	r4, #-2147483647	; 0x80000001
   12ff8:	ldr	r6, [r7]
   12ffc:	mov	r8, r0
   13000:	movne	r0, #0
   13004:	moveq	r0, #1
   13008:	ldr	r3, [r8]
   1300c:	orrs	r0, r0, r4, lsr #31
   13010:	str	r3, [sp, #24]
   13014:	bne	13190 <close@plt+0x2344>
   13018:	ldr	r2, [r7, #4]
   1301c:	cmp	r4, r2
   13020:	blt	13080 <close@plt+0x2234>
   13024:	add	r9, r7, #8
   13028:	cmp	r6, r9
   1302c:	str	r2, [sp, #44]	; 0x2c
   13030:	beq	13160 <close@plt+0x2314>
   13034:	mov	r3, #8
   13038:	sub	r2, r4, r2
   1303c:	mov	r0, r6
   13040:	str	r3, [sp]
   13044:	add	r2, r2, #1
   13048:	mvn	r3, #-2147483648	; 0x80000000
   1304c:	add	r1, sp, #44	; 0x2c
   13050:	bl	13e40 <close@plt+0x2ff4>
   13054:	mov	r6, r0
   13058:	str	r0, [r7]
   1305c:	ldr	r0, [r7, #4]
   13060:	ldr	r2, [sp, #44]	; 0x2c
   13064:	mov	r1, #0
   13068:	sub	r2, r2, r0
   1306c:	add	r0, r6, r0, lsl #3
   13070:	lsl	r2, r2, #3
   13074:	bl	10d98 <memset@plt>
   13078:	ldr	r3, [sp, #44]	; 0x2c
   1307c:	str	r3, [r7, #4]
   13080:	add	r3, r6, r4, lsl #3
   13084:	ldr	r1, [r5, #4]
   13088:	ldr	r7, [r3, #4]
   1308c:	ldr	r9, [r6, r4, lsl #3]
   13090:	ldr	r2, [r5, #40]	; 0x28
   13094:	ldr	ip, [r5, #44]	; 0x2c
   13098:	add	r0, r5, #8
   1309c:	str	r3, [sp, #28]
   130a0:	ldr	r3, [r5]
   130a4:	orr	r1, r1, #1
   130a8:	mov	lr, r0
   130ac:	str	r1, [sp, #32]
   130b0:	str	r0, [sp, #36]	; 0x24
   130b4:	str	r1, [sp, #4]
   130b8:	str	r2, [sp, #12]
   130bc:	str	r3, [sp]
   130c0:	mov	r0, r7
   130c4:	mov	r1, r9
   130c8:	str	ip, [sp, #16]
   130cc:	str	lr, [sp, #8]
   130d0:	mov	r3, fp
   130d4:	mov	r2, sl
   130d8:	bl	11ac0 <close@plt+0xc74>
   130dc:	cmp	r9, r0
   130e0:	bhi	1314c <close@plt+0x2300>
   130e4:	ldr	r3, [pc, #172]	; 13198 <close@plt+0x234c>
   130e8:	add	r9, r0, #1
   130ec:	cmp	r7, r3
   130f0:	str	r9, [r6, r4, lsl #3]
   130f4:	beq	13100 <close@plt+0x22b4>
   130f8:	mov	r0, r7
   130fc:	bl	14488 <close@plt+0x363c>
   13100:	mov	r0, r9
   13104:	bl	13cdc <close@plt+0x2e90>
   13108:	ldr	lr, [sp, #28]
   1310c:	ldr	ip, [r5, #44]	; 0x2c
   13110:	ldr	r4, [r5, #40]	; 0x28
   13114:	mov	r3, fp
   13118:	mov	r2, sl
   1311c:	mov	r1, r9
   13120:	str	r0, [lr, #4]
   13124:	ldr	lr, [r5]
   13128:	ldr	r5, [sp, #36]	; 0x24
   1312c:	str	ip, [sp, #16]
   13130:	str	r5, [sp, #8]
   13134:	ldr	r5, [sp, #32]
   13138:	str	r4, [sp, #12]
   1313c:	str	r5, [sp, #4]
   13140:	str	lr, [sp]
   13144:	mov	r7, r0
   13148:	bl	11ac0 <close@plt+0xc74>
   1314c:	ldr	r3, [sp, #24]
   13150:	mov	r0, r7
   13154:	str	r3, [r8]
   13158:	add	sp, sp, #52	; 0x34
   1315c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13160:	mov	r3, #8
   13164:	sub	r2, r4, r2
   13168:	str	r3, [sp]
   1316c:	add	r1, sp, #44	; 0x2c
   13170:	add	r2, r2, #1
   13174:	mvn	r3, #-2147483648	; 0x80000000
   13178:	bl	13e40 <close@plt+0x2ff4>
   1317c:	mov	r6, r0
   13180:	ldm	r9, {r0, r1}
   13184:	str	r6, [r7]
   13188:	stm	r6, {r0, r1}
   1318c:	b	1305c <close@plt+0x2210>
   13190:	bl	10e40 <abort@plt>
   13194:	andeq	r6, r2, r8, ror #1
   13198:	andeq	r6, r2, r4, asr r1
   1319c:	push	{r4, r5, r6, lr}
   131a0:	mov	r5, r0
   131a4:	bl	10d80 <__errno_location@plt>
   131a8:	cmp	r5, #0
   131ac:	mov	r1, #48	; 0x30
   131b0:	mov	r4, r0
   131b4:	ldr	r0, [pc, #16]	; 131cc <close@plt+0x2380>
   131b8:	ldr	r6, [r4]
   131bc:	movne	r0, r5
   131c0:	bl	1413c <close@plt+0x32f0>
   131c4:	str	r6, [r4]
   131c8:	pop	{r4, r5, r6, pc}
   131cc:	andeq	r6, r2, r4, asr r2
   131d0:	ldr	r3, [pc, #12]	; 131e4 <close@plt+0x2398>
   131d4:	cmp	r0, #0
   131d8:	moveq	r0, r3
   131dc:	ldr	r0, [r0]
   131e0:	bx	lr
   131e4:	andeq	r6, r2, r4, asr r2
   131e8:	ldr	r3, [pc, #12]	; 131fc <close@plt+0x23b0>
   131ec:	cmp	r0, #0
   131f0:	moveq	r0, r3
   131f4:	str	r1, [r0]
   131f8:	bx	lr
   131fc:	andeq	r6, r2, r4, asr r2
   13200:	ldr	r3, [pc, #52]	; 1323c <close@plt+0x23f0>
   13204:	cmp	r0, #0
   13208:	moveq	r0, r3
   1320c:	add	r3, r0, #8
   13210:	push	{lr}		; (str lr, [sp, #-4]!)
   13214:	lsr	lr, r1, #5
   13218:	and	r1, r1, #31
   1321c:	ldr	ip, [r3, lr, lsl #2]
   13220:	lsr	r0, ip, r1
   13224:	eor	r2, r2, r0
   13228:	and	r2, r2, #1
   1322c:	and	r0, r0, #1
   13230:	eor	r1, ip, r2, lsl r1
   13234:	str	r1, [r3, lr, lsl #2]
   13238:	pop	{pc}		; (ldr pc, [sp], #4)
   1323c:	andeq	r6, r2, r4, asr r2
   13240:	ldr	r3, [pc, #16]	; 13258 <close@plt+0x240c>
   13244:	cmp	r0, #0
   13248:	movne	r3, r0
   1324c:	ldr	r0, [r3, #4]
   13250:	str	r1, [r3, #4]
   13254:	bx	lr
   13258:	andeq	r6, r2, r4, asr r2
   1325c:	ldr	r3, [pc, #44]	; 13290 <close@plt+0x2444>
   13260:	cmp	r0, #0
   13264:	moveq	r0, r3
   13268:	mov	ip, #10
   1326c:	cmp	r2, #0
   13270:	cmpne	r1, #0
   13274:	str	ip, [r0]
   13278:	beq	13288 <close@plt+0x243c>
   1327c:	str	r1, [r0, #40]	; 0x28
   13280:	str	r2, [r0, #44]	; 0x2c
   13284:	bx	lr
   13288:	push	{r4, lr}
   1328c:	bl	10e40 <abort@plt>
   13290:	andeq	r6, r2, r4, asr r2
   13294:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13298:	sub	sp, sp, #24
   1329c:	ldr	ip, [pc, #108]	; 13310 <close@plt+0x24c4>
   132a0:	ldr	r4, [sp, #56]	; 0x38
   132a4:	mov	r9, r2
   132a8:	cmp	r4, #0
   132ac:	moveq	r4, ip
   132b0:	mov	sl, r3
   132b4:	mov	r7, r0
   132b8:	mov	r8, r1
   132bc:	bl	10d80 <__errno_location@plt>
   132c0:	ldr	r3, [r4, #44]	; 0x2c
   132c4:	mov	r1, r8
   132c8:	ldr	r6, [r0]
   132cc:	str	r3, [sp, #16]
   132d0:	ldr	r2, [r4, #40]	; 0x28
   132d4:	add	r3, r4, #8
   132d8:	str	r3, [sp, #8]
   132dc:	str	r2, [sp, #12]
   132e0:	ldr	r2, [r4, #4]
   132e4:	mov	r5, r0
   132e8:	str	r2, [sp, #4]
   132ec:	ldr	ip, [r4]
   132f0:	mov	r3, sl
   132f4:	mov	r2, r9
   132f8:	mov	r0, r7
   132fc:	str	ip, [sp]
   13300:	bl	11ac0 <close@plt+0xc74>
   13304:	str	r6, [r5]
   13308:	add	sp, sp, #24
   1330c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13310:	andeq	r6, r2, r4, asr r2
   13314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13318:	cmp	r3, #0
   1331c:	sub	sp, sp, #44	; 0x2c
   13320:	ldr	r4, [pc, #192]	; 133e8 <close@plt+0x259c>
   13324:	mov	r6, r2
   13328:	movne	r4, r3
   1332c:	mov	r9, r1
   13330:	mov	r8, r0
   13334:	bl	10d80 <__errno_location@plt>
   13338:	ldr	r3, [r4, #44]	; 0x2c
   1333c:	ldr	r5, [r4, #4]
   13340:	add	sl, r4, #8
   13344:	cmp	r6, #0
   13348:	orreq	r5, r5, #1
   1334c:	mov	r1, #0
   13350:	ldr	r2, [r0]
   13354:	str	r3, [sp, #16]
   13358:	ldr	r3, [r4, #40]	; 0x28
   1335c:	stmib	sp, {r5, sl}
   13360:	str	r3, [sp, #12]
   13364:	ldr	r3, [r4]
   13368:	mov	r7, r0
   1336c:	str	r2, [sp, #28]
   13370:	str	r3, [sp]
   13374:	mov	r2, r8
   13378:	mov	r3, r9
   1337c:	mov	r0, r1
   13380:	bl	11ac0 <close@plt+0xc74>
   13384:	add	r1, r0, #1
   13388:	mov	fp, r0
   1338c:	mov	r0, r1
   13390:	str	r1, [sp, #36]	; 0x24
   13394:	bl	13cdc <close@plt+0x2e90>
   13398:	ldr	r3, [r4, #44]	; 0x2c
   1339c:	mov	r2, r8
   133a0:	str	r3, [sp, #16]
   133a4:	ldr	r3, [r4, #40]	; 0x28
   133a8:	str	r5, [sp, #4]
   133ac:	str	r3, [sp, #12]
   133b0:	str	sl, [sp, #8]
   133b4:	ldr	ip, [r4]
   133b8:	ldr	r1, [sp, #36]	; 0x24
   133bc:	mov	r3, r9
   133c0:	str	ip, [sp]
   133c4:	str	r0, [sp, #32]
   133c8:	bl	11ac0 <close@plt+0xc74>
   133cc:	ldr	r2, [sp, #28]
   133d0:	cmp	r6, #0
   133d4:	str	r2, [r7]
   133d8:	ldr	r0, [sp, #32]
   133dc:	strne	fp, [r6]
   133e0:	add	sp, sp, #44	; 0x2c
   133e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e8:	andeq	r6, r2, r4, asr r2
   133ec:	mov	r3, r2
   133f0:	mov	r2, #0
   133f4:	b	13314 <close@plt+0x24c8>
   133f8:	push	{r4, r5, r6, r7, r8, lr}
   133fc:	ldr	r6, [pc, #116]	; 13478 <close@plt+0x262c>
   13400:	ldr	r3, [r6, #4]
   13404:	ldr	r7, [r6]
   13408:	cmp	r3, #1
   1340c:	movgt	r5, r7
   13410:	movgt	r4, #1
   13414:	ble	13434 <close@plt+0x25e8>
   13418:	ldr	r0, [r5, #12]
   1341c:	bl	14488 <close@plt+0x363c>
   13420:	ldr	r3, [r6, #4]
   13424:	add	r4, r4, #1
   13428:	cmp	r3, r4
   1342c:	add	r5, r5, #8
   13430:	bgt	13418 <close@plt+0x25cc>
   13434:	ldr	r0, [r7, #4]
   13438:	ldr	r4, [pc, #60]	; 1347c <close@plt+0x2630>
   1343c:	cmp	r0, r4
   13440:	beq	13454 <close@plt+0x2608>
   13444:	bl	14488 <close@plt+0x363c>
   13448:	mov	r3, #256	; 0x100
   1344c:	str	r4, [r6, #12]
   13450:	str	r3, [r6, #8]
   13454:	ldr	r4, [pc, #36]	; 13480 <close@plt+0x2634>
   13458:	cmp	r7, r4
   1345c:	beq	1346c <close@plt+0x2620>
   13460:	mov	r0, r7
   13464:	bl	14488 <close@plt+0x363c>
   13468:	str	r4, [r6]
   1346c:	mov	r3, #1
   13470:	str	r3, [r6, #4]
   13474:	pop	{r4, r5, r6, r7, r8, pc}
   13478:	andeq	r6, r2, r8, ror #1
   1347c:	andeq	r6, r2, r4, asr r1
   13480:	strdeq	r6, [r2], -r0
   13484:	ldr	r3, [pc, #4]	; 13490 <close@plt+0x2644>
   13488:	mvn	r2, #0
   1348c:	b	12fd4 <close@plt+0x2188>
   13490:	andeq	r6, r2, r4, asr r2
   13494:	ldr	r3, [pc]	; 1349c <close@plt+0x2650>
   13498:	b	12fd4 <close@plt+0x2188>
   1349c:	andeq	r6, r2, r4, asr r2
   134a0:	mov	r1, r0
   134a4:	ldr	r3, [pc, #8]	; 134b4 <close@plt+0x2668>
   134a8:	mvn	r2, #0
   134ac:	mov	r0, #0
   134b0:	b	12fd4 <close@plt+0x2188>
   134b4:	andeq	r6, r2, r4, asr r2
   134b8:	mov	r2, r1
   134bc:	ldr	r3, [pc, #8]	; 134cc <close@plt+0x2680>
   134c0:	mov	r1, r0
   134c4:	mov	r0, #0
   134c8:	b	12fd4 <close@plt+0x2188>
   134cc:	andeq	r6, r2, r4, asr r2
   134d0:	push	{r4, r5, lr}
   134d4:	sub	sp, sp, #52	; 0x34
   134d8:	mov	r5, r2
   134dc:	mov	r4, r0
   134e0:	mov	r0, sp
   134e4:	bl	11970 <close@plt+0xb24>
   134e8:	mov	r3, sp
   134ec:	mov	r1, r5
   134f0:	mov	r0, r4
   134f4:	mvn	r2, #0
   134f8:	bl	12fd4 <close@plt+0x2188>
   134fc:	add	sp, sp, #52	; 0x34
   13500:	pop	{r4, r5, pc}
   13504:	push	{r4, r5, r6, lr}
   13508:	sub	sp, sp, #48	; 0x30
   1350c:	mov	r5, r2
   13510:	mov	r6, r3
   13514:	mov	r4, r0
   13518:	mov	r0, sp
   1351c:	bl	11970 <close@plt+0xb24>
   13520:	mov	r3, sp
   13524:	mov	r2, r6
   13528:	mov	r1, r5
   1352c:	mov	r0, r4
   13530:	bl	12fd4 <close@plt+0x2188>
   13534:	add	sp, sp, #48	; 0x30
   13538:	pop	{r4, r5, r6, pc}
   1353c:	mov	r2, r1
   13540:	mov	r1, r0
   13544:	mov	r0, #0
   13548:	b	134d0 <close@plt+0x2684>
   1354c:	mov	r3, r2
   13550:	mov	r2, r1
   13554:	mov	r1, r0
   13558:	mov	r0, #0
   1355c:	b	13504 <close@plt+0x26b8>
   13560:	push	{r4, r5, r6, r7, r8, lr}
   13564:	mov	r7, r0
   13568:	ldr	lr, [pc, #100]	; 135d4 <close@plt+0x2788>
   1356c:	mov	r8, r1
   13570:	mov	r4, r2
   13574:	ldm	lr!, {r0, r1, r2, r3}
   13578:	sub	sp, sp, #48	; 0x30
   1357c:	mov	ip, sp
   13580:	lsr	r5, r4, #5
   13584:	stmia	ip!, {r0, r1, r2, r3}
   13588:	add	r6, sp, #8
   1358c:	ldm	lr!, {r0, r1, r2, r3}
   13590:	and	r4, r4, #31
   13594:	stmia	ip!, {r0, r1, r2, r3}
   13598:	ldm	lr, {r0, r1, r2, r3}
   1359c:	stm	ip, {r0, r1, r2, r3}
   135a0:	mov	r2, r8
   135a4:	ldr	lr, [r6, r5, lsl #2]
   135a8:	mov	r1, r7
   135ac:	mov	r3, sp
   135b0:	lsr	ip, lr, r4
   135b4:	eor	ip, ip, #1
   135b8:	and	ip, ip, #1
   135bc:	mov	r0, #0
   135c0:	eor	r4, lr, ip, lsl r4
   135c4:	str	r4, [r6, r5, lsl #2]
   135c8:	bl	12fd4 <close@plt+0x2188>
   135cc:	add	sp, sp, #48	; 0x30
   135d0:	pop	{r4, r5, r6, r7, r8, pc}
   135d4:	andeq	r6, r2, r4, asr r2
   135d8:	mov	r2, r1
   135dc:	mvn	r1, #0
   135e0:	b	13560 <close@plt+0x2714>
   135e4:	mov	r2, #58	; 0x3a
   135e8:	mvn	r1, #0
   135ec:	b	13560 <close@plt+0x2714>
   135f0:	mov	r2, #58	; 0x3a
   135f4:	b	13560 <close@plt+0x2714>
   135f8:	push	{r4, r5, r6, r7, lr}
   135fc:	sub	sp, sp, #100	; 0x64
   13600:	mov	r6, r0
   13604:	mov	r0, sp
   13608:	mov	r7, r2
   1360c:	bl	11970 <close@plt+0xb24>
   13610:	mov	ip, sp
   13614:	add	lr, sp, #48	; 0x30
   13618:	ldm	ip!, {r0, r1, r2, r3}
   1361c:	stmia	lr!, {r0, r1, r2, r3}
   13620:	ldm	ip!, {r0, r1, r2, r3}
   13624:	ldr	r5, [sp, #60]	; 0x3c
   13628:	stmia	lr!, {r0, r1, r2, r3}
   1362c:	mvn	r4, r5
   13630:	ldm	ip, {r0, r1, r2, r3}
   13634:	and	ip, r4, #67108864	; 0x4000000
   13638:	eor	ip, ip, r5
   1363c:	str	ip, [sp, #60]	; 0x3c
   13640:	stm	lr, {r0, r1, r2, r3}
   13644:	mov	r1, r7
   13648:	mov	r0, r6
   1364c:	add	r3, sp, #48	; 0x30
   13650:	mvn	r2, #0
   13654:	bl	12fd4 <close@plt+0x2188>
   13658:	add	sp, sp, #100	; 0x64
   1365c:	pop	{r4, r5, r6, r7, pc}
   13660:	push	{r4, r5, r6, r7, r8, lr}
   13664:	mov	r5, r1
   13668:	ldr	lr, [pc, #100]	; 136d4 <close@plt+0x2888>
   1366c:	mov	r4, r2
   13670:	mov	r7, r0
   13674:	mov	r8, r3
   13678:	ldm	lr!, {r0, r1, r2, r3}
   1367c:	sub	sp, sp, #48	; 0x30
   13680:	mov	ip, sp
   13684:	mov	r6, #10
   13688:	stmia	ip!, {r0, r1, r2, r3}
   1368c:	cmp	r4, #0
   13690:	cmpne	r5, #0
   13694:	ldm	lr!, {r0, r1, r2, r3}
   13698:	str	r6, [sp]
   1369c:	stmia	ip!, {r0, r1, r2, r3}
   136a0:	ldm	lr, {r0, r1, r2, r3}
   136a4:	stm	ip, {r0, r1, r2, r3}
   136a8:	beq	136d0 <close@plt+0x2884>
   136ac:	mov	r3, sp
   136b0:	mov	r1, r8
   136b4:	mov	r0, r7
   136b8:	ldr	r2, [sp, #72]	; 0x48
   136bc:	str	r5, [sp, #40]	; 0x28
   136c0:	str	r4, [sp, #44]	; 0x2c
   136c4:	bl	12fd4 <close@plt+0x2188>
   136c8:	add	sp, sp, #48	; 0x30
   136cc:	pop	{r4, r5, r6, r7, r8, pc}
   136d0:	bl	10e40 <abort@plt>
   136d4:	andeq	r6, r2, r4, asr r2
   136d8:	push	{lr}		; (str lr, [sp, #-4]!)
   136dc:	sub	sp, sp, #12
   136e0:	mvn	ip, #0
   136e4:	str	ip, [sp]
   136e8:	bl	13660 <close@plt+0x2814>
   136ec:	add	sp, sp, #12
   136f0:	pop	{pc}		; (ldr pc, [sp], #4)
   136f4:	push	{lr}		; (str lr, [sp, #-4]!)
   136f8:	sub	sp, sp, #12
   136fc:	mvn	ip, #0
   13700:	mov	r3, r2
   13704:	str	ip, [sp]
   13708:	mov	r2, r1
   1370c:	mov	r1, r0
   13710:	mov	r0, #0
   13714:	bl	13660 <close@plt+0x2814>
   13718:	add	sp, sp, #12
   1371c:	pop	{pc}		; (ldr pc, [sp], #4)
   13720:	push	{lr}		; (str lr, [sp, #-4]!)
   13724:	sub	sp, sp, #12
   13728:	str	r3, [sp]
   1372c:	mov	r3, r2
   13730:	mov	r2, r1
   13734:	mov	r1, r0
   13738:	mov	r0, #0
   1373c:	bl	13660 <close@plt+0x2814>
   13740:	add	sp, sp, #12
   13744:	pop	{pc}		; (ldr pc, [sp], #4)
   13748:	ldr	r3, [pc]	; 13750 <close@plt+0x2904>
   1374c:	b	12fd4 <close@plt+0x2188>
   13750:	strdeq	r6, [r2], -r8
   13754:	mov	r2, r1
   13758:	ldr	r3, [pc, #8]	; 13768 <close@plt+0x291c>
   1375c:	mov	r1, r0
   13760:	mov	r0, #0
   13764:	b	12fd4 <close@plt+0x2188>
   13768:	strdeq	r6, [r2], -r8
   1376c:	ldr	r3, [pc, #4]	; 13778 <close@plt+0x292c>
   13770:	mvn	r2, #0
   13774:	b	12fd4 <close@plt+0x2188>
   13778:	strdeq	r6, [r2], -r8
   1377c:	mov	r1, r0
   13780:	ldr	r3, [pc, #8]	; 13790 <close@plt+0x2944>
   13784:	mvn	r2, #0
   13788:	mov	r0, #0
   1378c:	b	12fd4 <close@plt+0x2188>
   13790:	strdeq	r6, [r2], -r8
   13794:	push	{r4, r5, r6, lr}
   13798:	sub	sp, sp, #32
   1379c:	cmp	r1, #0
   137a0:	mov	r4, r0
   137a4:	ldr	r5, [sp, #48]	; 0x30
   137a8:	ldr	r6, [sp, #52]	; 0x34
   137ac:	beq	13ac4 <close@plt+0x2c78>
   137b0:	stm	sp, {r2, r3}
   137b4:	mov	r3, r1
   137b8:	ldr	r2, [pc, #808]	; 13ae8 <close@plt+0x2c9c>
   137bc:	mov	r1, #1
   137c0:	bl	10dbc <__fprintf_chk@plt>
   137c4:	mov	r2, #5
   137c8:	ldr	r1, [pc, #796]	; 13aec <close@plt+0x2ca0>
   137cc:	mov	r0, #0
   137d0:	bl	10c90 <dcgettext@plt>
   137d4:	ldr	r3, [pc, #788]	; 13af0 <close@plt+0x2ca4>
   137d8:	ldr	r2, [pc, #788]	; 13af4 <close@plt+0x2ca8>
   137dc:	str	r3, [sp]
   137e0:	mov	r1, #1
   137e4:	mov	r3, r0
   137e8:	mov	r0, r4
   137ec:	bl	10dbc <__fprintf_chk@plt>
   137f0:	mov	r1, r4
   137f4:	mov	r0, #10
   137f8:	bl	10c84 <fputc_unlocked@plt>
   137fc:	mov	r2, #5
   13800:	ldr	r1, [pc, #752]	; 13af8 <close@plt+0x2cac>
   13804:	mov	r0, #0
   13808:	bl	10c90 <dcgettext@plt>
   1380c:	mov	r1, #1
   13810:	ldr	r3, [pc, #740]	; 13afc <close@plt+0x2cb0>
   13814:	mov	r2, r0
   13818:	mov	r0, r4
   1381c:	bl	10dbc <__fprintf_chk@plt>
   13820:	mov	r1, r4
   13824:	mov	r0, #10
   13828:	bl	10c84 <fputc_unlocked@plt>
   1382c:	cmp	r6, #9
   13830:	ldrls	pc, [pc, r6, lsl #2]
   13834:	b	13adc <close@plt+0x2c90>
   13838:			; <UNDEFINED> instruction: 0x000138bc
   1383c:	andeq	r3, r1, r4, asr #17
   13840:	strdeq	r3, [r1], -r0
   13844:	andeq	r3, r1, r4, lsr #18
   13848:	andeq	r3, r1, r0, ror #18
   1384c:	muleq	r1, ip, r9
   13850:	ldrdeq	r3, [r1], -r8
   13854:	andeq	r3, r1, ip, lsl sl
   13858:	andeq	r3, r1, ip, ror #20
   1385c:	andeq	r3, r1, r0, ror #16
   13860:	ldr	r1, [pc, #664]	; 13b00 <close@plt+0x2cb4>
   13864:	mov	r2, #5
   13868:	mov	r0, #0
   1386c:	bl	10c90 <dcgettext@plt>
   13870:	ldr	ip, [r5, #32]
   13874:	ldr	r1, [r5, #28]
   13878:	ldr	r2, [r5, #24]
   1387c:	ldr	r3, [r5]
   13880:	ldr	r6, [r5, #20]
   13884:	str	ip, [sp, #28]
   13888:	ldr	lr, [r5, #16]
   1388c:	str	r1, [sp, #24]
   13890:	ldr	ip, [r5, #12]
   13894:	str	r2, [sp, #20]
   13898:	ldr	r1, [r5, #8]
   1389c:	ldr	r2, [r5, #4]
   138a0:	str	r6, [sp, #16]
   138a4:	stmib	sp, {r1, ip, lr}
   138a8:	mov	r1, #1
   138ac:	str	r2, [sp]
   138b0:	mov	r2, r0
   138b4:	mov	r0, r4
   138b8:	bl	10dbc <__fprintf_chk@plt>
   138bc:	add	sp, sp, #32
   138c0:	pop	{r4, r5, r6, pc}
   138c4:	mov	r2, #5
   138c8:	ldr	r1, [pc, #564]	; 13b04 <close@plt+0x2cb8>
   138cc:	mov	r0, #0
   138d0:	bl	10c90 <dcgettext@plt>
   138d4:	ldr	r3, [r5]
   138d8:	mov	r1, #1
   138dc:	mov	r2, r0
   138e0:	mov	r0, r4
   138e4:	add	sp, sp, #32
   138e8:	pop	{r4, r5, r6, lr}
   138ec:	b	10dbc <__fprintf_chk@plt>
   138f0:	mov	r2, #5
   138f4:	ldr	r1, [pc, #524]	; 13b08 <close@plt+0x2cbc>
   138f8:	mov	r0, #0
   138fc:	bl	10c90 <dcgettext@plt>
   13900:	ldr	r2, [r5, #4]
   13904:	ldr	r3, [r5]
   13908:	mov	r1, #1
   1390c:	str	r2, [sp, #48]	; 0x30
   13910:	mov	r2, r0
   13914:	mov	r0, r4
   13918:	add	sp, sp, #32
   1391c:	pop	{r4, r5, r6, lr}
   13920:	b	10dbc <__fprintf_chk@plt>
   13924:	mov	r2, #5
   13928:	ldr	r1, [pc, #476]	; 13b0c <close@plt+0x2cc0>
   1392c:	mov	r0, #0
   13930:	bl	10c90 <dcgettext@plt>
   13934:	ldr	r1, [r5, #8]
   13938:	ldr	r2, [r5, #4]
   1393c:	ldr	r3, [r5]
   13940:	str	r1, [sp, #52]	; 0x34
   13944:	str	r2, [sp, #48]	; 0x30
   13948:	mov	r1, #1
   1394c:	mov	r2, r0
   13950:	mov	r0, r4
   13954:	add	sp, sp, #32
   13958:	pop	{r4, r5, r6, lr}
   1395c:	b	10dbc <__fprintf_chk@plt>
   13960:	mov	r2, #5
   13964:	ldr	r1, [pc, #420]	; 13b10 <close@plt+0x2cc4>
   13968:	mov	r0, #0
   1396c:	bl	10c90 <dcgettext@plt>
   13970:	ldr	r1, [r5, #8]
   13974:	ldr	ip, [r5, #12]
   13978:	ldr	r2, [r5, #4]
   1397c:	ldr	r3, [r5]
   13980:	stmib	sp, {r1, ip}
   13984:	str	r2, [sp]
   13988:	mov	r1, #1
   1398c:	mov	r2, r0
   13990:	mov	r0, r4
   13994:	bl	10dbc <__fprintf_chk@plt>
   13998:	b	138bc <close@plt+0x2a70>
   1399c:	mov	r2, #5
   139a0:	ldr	r1, [pc, #364]	; 13b14 <close@plt+0x2cc8>
   139a4:	mov	r0, #0
   139a8:	bl	10c90 <dcgettext@plt>
   139ac:	add	r1, r5, #8
   139b0:	ldr	r2, [r5, #4]
   139b4:	ldm	r1, {r1, ip, lr}
   139b8:	ldr	r3, [r5]
   139bc:	str	r2, [sp]
   139c0:	stmib	sp, {r1, ip, lr}
   139c4:	mov	r1, #1
   139c8:	mov	r2, r0
   139cc:	mov	r0, r4
   139d0:	bl	10dbc <__fprintf_chk@plt>
   139d4:	b	138bc <close@plt+0x2a70>
   139d8:	mov	r2, #5
   139dc:	ldr	r1, [pc, #308]	; 13b18 <close@plt+0x2ccc>
   139e0:	mov	r0, #0
   139e4:	bl	10c90 <dcgettext@plt>
   139e8:	add	r1, r5, #8
   139ec:	ldr	r2, [r5, #4]
   139f0:	ldm	r1, {r1, ip, lr}
   139f4:	ldr	r6, [r5, #20]
   139f8:	ldr	r3, [r5]
   139fc:	stmib	sp, {r1, ip, lr}
   13a00:	mov	r1, #1
   13a04:	str	r2, [sp]
   13a08:	str	r6, [sp, #16]
   13a0c:	mov	r2, r0
   13a10:	mov	r0, r4
   13a14:	bl	10dbc <__fprintf_chk@plt>
   13a18:	b	138bc <close@plt+0x2a70>
   13a1c:	mov	r2, #5
   13a20:	ldr	r1, [pc, #244]	; 13b1c <close@plt+0x2cd0>
   13a24:	mov	r0, #0
   13a28:	bl	10c90 <dcgettext@plt>
   13a2c:	ldr	r2, [r5, #24]
   13a30:	ldr	r3, [r5]
   13a34:	ldr	r6, [r5, #20]
   13a38:	ldr	lr, [r5, #16]
   13a3c:	ldr	ip, [r5, #12]
   13a40:	str	r2, [sp, #20]
   13a44:	ldr	r1, [r5, #8]
   13a48:	ldr	r2, [r5, #4]
   13a4c:	str	r6, [sp, #16]
   13a50:	stmib	sp, {r1, ip, lr}
   13a54:	mov	r1, #1
   13a58:	str	r2, [sp]
   13a5c:	mov	r2, r0
   13a60:	mov	r0, r4
   13a64:	bl	10dbc <__fprintf_chk@plt>
   13a68:	b	138bc <close@plt+0x2a70>
   13a6c:	mov	r2, #5
   13a70:	ldr	r1, [pc, #168]	; 13b20 <close@plt+0x2cd4>
   13a74:	mov	r0, #0
   13a78:	bl	10c90 <dcgettext@plt>
   13a7c:	ldr	r1, [r5, #28]
   13a80:	ldr	r2, [r5, #24]
   13a84:	ldr	r3, [r5]
   13a88:	ldr	r6, [r5, #20]
   13a8c:	ldr	lr, [r5, #16]
   13a90:	str	r1, [sp, #24]
   13a94:	ldr	ip, [r5, #12]
   13a98:	str	r2, [sp, #20]
   13a9c:	ldr	r1, [r5, #8]
   13aa0:	ldr	r2, [r5, #4]
   13aa4:	str	r6, [sp, #16]
   13aa8:	stmib	sp, {r1, ip, lr}
   13aac:	mov	r1, #1
   13ab0:	str	r2, [sp]
   13ab4:	mov	r2, r0
   13ab8:	mov	r0, r4
   13abc:	bl	10dbc <__fprintf_chk@plt>
   13ac0:	b	138bc <close@plt+0x2a70>
   13ac4:	str	r3, [sp]
   13ac8:	mov	r1, #1
   13acc:	mov	r3, r2
   13ad0:	ldr	r2, [pc, #76]	; 13b24 <close@plt+0x2cd8>
   13ad4:	bl	10dbc <__fprintf_chk@plt>
   13ad8:	b	137c4 <close@plt+0x2978>
   13adc:	mov	r2, #5
   13ae0:	ldr	r1, [pc, #64]	; 13b28 <close@plt+0x2cdc>
   13ae4:	b	13868 <close@plt+0x2a1c>
   13ae8:	andeq	r5, r1, r4, lsr r2
   13aec:	andeq	r5, r1, r8, asr #4
   13af0:	andeq	r0, r0, r6, ror #15
   13af4:	andeq	r5, r1, r0, lsr #10
   13af8:	andeq	r5, r1, ip, asr #4
   13afc:	strdeq	r5, [r1], -r8
   13b00:	andeq	r5, r1, r8, lsr #8
   13b04:	andeq	r5, r1, ip, lsl r3
   13b08:	andeq	r5, r1, ip, lsr #6
   13b0c:	andeq	r5, r1, r4, asr #6
   13b10:	andeq	r5, r1, r0, ror #6
   13b14:	andeq	r5, r1, r0, lsl #7
   13b18:	andeq	r5, r1, r4, lsr #7
   13b1c:	andeq	r5, r1, ip, asr #7
   13b20:	strdeq	r5, [r1], -r8
   13b24:	andeq	r5, r1, r0, asr #4
   13b28:	andeq	r5, r1, ip, asr r4
   13b2c:	push	{r4, r5, lr}
   13b30:	sub	sp, sp, #12
   13b34:	ldr	r5, [sp, #24]
   13b38:	ldr	ip, [r5]
   13b3c:	cmp	ip, #0
   13b40:	beq	13b5c <close@plt+0x2d10>
   13b44:	mov	lr, r5
   13b48:	mov	ip, #0
   13b4c:	ldr	r4, [lr, #4]!
   13b50:	add	ip, ip, #1
   13b54:	cmp	r4, #0
   13b58:	bne	13b4c <close@plt+0x2d00>
   13b5c:	stm	sp, {r5, ip}
   13b60:	bl	13794 <close@plt+0x2948>
   13b64:	add	sp, sp, #12
   13b68:	pop	{r4, r5, pc}
   13b6c:	push	{r4, r5, lr}
   13b70:	sub	sp, sp, #52	; 0x34
   13b74:	add	r5, sp, #4
   13b78:	ldr	r4, [sp, #64]	; 0x40
   13b7c:	mov	ip, #0
   13b80:	sub	r4, r4, #4
   13b84:	ldr	lr, [r4, #4]!
   13b88:	cmp	lr, #0
   13b8c:	str	lr, [r5, #4]!
   13b90:	beq	13ba0 <close@plt+0x2d54>
   13b94:	add	ip, ip, #1
   13b98:	cmp	ip, #10
   13b9c:	bne	13b84 <close@plt+0x2d38>
   13ba0:	add	lr, sp, #8
   13ba4:	str	ip, [sp, #4]
   13ba8:	str	lr, [sp]
   13bac:	bl	13794 <close@plt+0x2948>
   13bb0:	add	sp, sp, #52	; 0x34
   13bb4:	pop	{r4, r5, pc}
   13bb8:	push	{r3}		; (str r3, [sp, #-4]!)
   13bbc:	push	{r4, lr}
   13bc0:	sub	sp, sp, #60	; 0x3c
   13bc4:	add	lr, sp, #56	; 0x38
   13bc8:	add	r3, sp, #72	; 0x48
   13bcc:	str	r3, [lr, #-44]!	; 0xffffffd4
   13bd0:	add	r4, sp, #68	; 0x44
   13bd4:	mov	r3, #0
   13bd8:	ldr	ip, [r4, #4]!
   13bdc:	cmp	ip, #0
   13be0:	str	ip, [lr, #4]!
   13be4:	beq	13bf4 <close@plt+0x2da8>
   13be8:	add	r3, r3, #1
   13bec:	cmp	r3, #10
   13bf0:	bne	13bd8 <close@plt+0x2d8c>
   13bf4:	add	ip, sp, #16
   13bf8:	str	r3, [sp, #4]
   13bfc:	str	ip, [sp]
   13c00:	ldr	r3, [sp, #68]	; 0x44
   13c04:	bl	13794 <close@plt+0x2948>
   13c08:	add	sp, sp, #60	; 0x3c
   13c0c:	pop	{r4, lr}
   13c10:	add	sp, sp, #4
   13c14:	bx	lr
   13c18:	ldr	r3, [pc, #116]	; 13c94 <close@plt+0x2e48>
   13c1c:	push	{r4, lr}
   13c20:	mov	r0, #10
   13c24:	ldr	r1, [r3]
   13c28:	bl	10c84 <fputc_unlocked@plt>
   13c2c:	mov	r2, #5
   13c30:	ldr	r1, [pc, #96]	; 13c98 <close@plt+0x2e4c>
   13c34:	mov	r0, #0
   13c38:	bl	10c90 <dcgettext@plt>
   13c3c:	ldr	r2, [pc, #88]	; 13c9c <close@plt+0x2e50>
   13c40:	mov	r1, r0
   13c44:	mov	r0, #1
   13c48:	bl	10da4 <__printf_chk@plt>
   13c4c:	mov	r2, #5
   13c50:	ldr	r1, [pc, #72]	; 13ca0 <close@plt+0x2e54>
   13c54:	mov	r0, #0
   13c58:	bl	10c90 <dcgettext@plt>
   13c5c:	ldr	r3, [pc, #64]	; 13ca4 <close@plt+0x2e58>
   13c60:	ldr	r2, [pc, #64]	; 13ca8 <close@plt+0x2e5c>
   13c64:	mov	r1, r0
   13c68:	mov	r0, #1
   13c6c:	bl	10da4 <__printf_chk@plt>
   13c70:	mov	r2, #5
   13c74:	ldr	r1, [pc, #48]	; 13cac <close@plt+0x2e60>
   13c78:	mov	r0, #0
   13c7c:	bl	10c90 <dcgettext@plt>
   13c80:	ldr	r2, [pc, #40]	; 13cb0 <close@plt+0x2e64>
   13c84:	pop	{r4, lr}
   13c88:	mov	r1, r0
   13c8c:	mov	r0, #1
   13c90:	b	10da4 <__printf_chk@plt>
   13c94:	andeq	r6, r2, ip, lsr r1
   13c98:	muleq	r1, r8, r4
   13c9c:	andeq	r5, r1, ip, lsr #9
   13ca0:	andeq	r5, r1, r4, asr #9
   13ca4:	muleq	r1, ip, lr
   13ca8:	andeq	r4, r1, r4, asr #29
   13cac:	ldrdeq	r5, [r1], -r8
   13cb0:	andeq	r5, r1, r0, lsl #10
   13cb4:	push	{r4, lr}
   13cb8:	bl	14284 <close@plt+0x3438>
   13cbc:	cmp	r0, #0
   13cc0:	popne	{r4, pc}
   13cc4:	bl	141fc <close@plt+0x33b0>
   13cc8:	push	{r4, lr}
   13ccc:	bl	14284 <close@plt+0x3438>
   13cd0:	cmp	r0, #0
   13cd4:	popne	{r4, pc}
   13cd8:	bl	141fc <close@plt+0x33b0>
   13cdc:	push	{r4, lr}
   13ce0:	bl	14284 <close@plt+0x3438>
   13ce4:	cmp	r0, #0
   13ce8:	popne	{r4, pc}
   13cec:	bl	141fc <close@plt+0x33b0>
   13cf0:	push	{r4, r5, r6, lr}
   13cf4:	mov	r5, r0
   13cf8:	mov	r4, r1
   13cfc:	bl	142b0 <close@plt+0x3464>
   13d00:	cmp	r0, #0
   13d04:	popne	{r4, r5, r6, pc}
   13d08:	adds	r4, r4, #0
   13d0c:	movne	r4, #1
   13d10:	cmp	r5, #0
   13d14:	orreq	r4, r4, #1
   13d18:	cmp	r4, #0
   13d1c:	popeq	{r4, r5, r6, pc}
   13d20:	bl	141fc <close@plt+0x33b0>
   13d24:	push	{r4, lr}
   13d28:	cmp	r1, #0
   13d2c:	orreq	r1, r1, #1
   13d30:	bl	142b0 <close@plt+0x3464>
   13d34:	cmp	r0, #0
   13d38:	popne	{r4, pc}
   13d3c:	bl	141fc <close@plt+0x33b0>
   13d40:	push	{r4, r5, r6, lr}
   13d44:	mov	r6, r0
   13d48:	mov	r5, r1
   13d4c:	mov	r4, r2
   13d50:	bl	14608 <close@plt+0x37bc>
   13d54:	cmp	r0, #0
   13d58:	popne	{r4, r5, r6, pc}
   13d5c:	cmp	r6, #0
   13d60:	beq	13d70 <close@plt+0x2f24>
   13d64:	cmp	r5, #0
   13d68:	cmpne	r4, #0
   13d6c:	popeq	{r4, r5, r6, pc}
   13d70:	bl	141fc <close@plt+0x33b0>
   13d74:	b	13d40 <close@plt+0x2ef4>
   13d78:	cmp	r2, #0
   13d7c:	cmpne	r1, #0
   13d80:	moveq	r2, #1
   13d84:	moveq	r1, r2
   13d88:	push	{r4, lr}
   13d8c:	bl	14608 <close@plt+0x37bc>
   13d90:	cmp	r0, #0
   13d94:	popne	{r4, pc}
   13d98:	bl	141fc <close@plt+0x33b0>
   13d9c:	mov	r2, r1
   13da0:	mov	r1, r0
   13da4:	mov	r0, #0
   13da8:	b	13d40 <close@plt+0x2ef4>
   13dac:	mov	r2, r1
   13db0:	mov	r1, r0
   13db4:	mov	r0, #0
   13db8:	b	13d78 <close@plt+0x2f2c>
   13dbc:	push	{r4, r5, r6, lr}
   13dc0:	subs	r6, r0, #0
   13dc4:	sub	sp, sp, #8
   13dc8:	mov	r5, r1
   13dcc:	ldr	r4, [r1]
   13dd0:	beq	13e0c <close@plt+0x2fc0>
   13dd4:	lsr	r1, r4, #1
   13dd8:	add	r3, r1, #1
   13ddc:	mvn	r3, r3
   13de0:	cmp	r4, r3
   13de4:	bhi	13e08 <close@plt+0x2fbc>
   13de8:	add	r4, r4, #1
   13dec:	add	r4, r4, r1
   13df0:	mov	r0, r6
   13df4:	mov	r1, r4
   13df8:	bl	13d40 <close@plt+0x2ef4>
   13dfc:	str	r4, [r5]
   13e00:	add	sp, sp, #8
   13e04:	pop	{r4, r5, r6, pc}
   13e08:	bl	141fc <close@plt+0x33b0>
   13e0c:	cmp	r4, #0
   13e10:	bne	13df0 <close@plt+0x2fa4>
   13e14:	mov	r1, r2
   13e18:	mov	r0, #64	; 0x40
   13e1c:	str	r2, [sp, #4]
   13e20:	bl	14748 <close@plt+0x38fc>
   13e24:	ldr	r2, [sp, #4]
   13e28:	cmp	r0, #0
   13e2c:	movne	r4, r0
   13e30:	addeq	r4, r0, #1
   13e34:	b	13df0 <close@plt+0x2fa4>
   13e38:	mov	r2, #1
   13e3c:	b	13dbc <close@plt+0x2f70>
   13e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e44:	sub	sp, sp, #12
   13e48:	ldr	r6, [r1]
   13e4c:	mov	sl, r1
   13e50:	mov	r9, r0
   13e54:	asrs	r4, r6, #1
   13e58:	mov	r5, r2
   13e5c:	mov	fp, r3
   13e60:	ldr	r7, [sp, #48]	; 0x30
   13e64:	bmi	13fd0 <close@plt+0x3184>
   13e68:	mvn	r3, #-2147483648	; 0x80000000
   13e6c:	sub	r3, r3, r4
   13e70:	cmp	r6, r3
   13e74:	movle	r3, #0
   13e78:	movgt	r3, #1
   13e7c:	mvn	r8, fp
   13e80:	cmp	r3, #0
   13e84:	addeq	r4, r4, r6
   13e88:	mvnne	r4, #-2147483648	; 0x80000000
   13e8c:	lsr	r8, r8, #31
   13e90:	cmp	fp, r4
   13e94:	movge	r3, #0
   13e98:	andlt	r3, r8, #1
   13e9c:	cmp	r3, #0
   13ea0:	beq	13f88 <close@plt+0x313c>
   13ea4:	cmp	r7, #0
   13ea8:	blt	14058 <close@plt+0x320c>
   13eac:	bne	14050 <close@plt+0x3204>
   13eb0:	mov	r2, #64	; 0x40
   13eb4:	mov	r1, r7
   13eb8:	mov	r0, r2
   13ebc:	str	r2, [sp, #4]
   13ec0:	bl	14954 <close@plt+0x3b08>
   13ec4:	ldr	r2, [sp, #4]
   13ec8:	mov	r1, r7
   13ecc:	mov	r4, r0
   13ed0:	mov	r0, r2
   13ed4:	bl	14b74 <close@plt+0x3d28>
   13ed8:	ldr	r2, [sp, #4]
   13edc:	sub	r1, r2, r1
   13ee0:	cmp	r9, #0
   13ee4:	sub	r3, r4, r6
   13ee8:	streq	r9, [sl]
   13eec:	cmp	r3, r5
   13ef0:	bge	13f74 <close@plt+0x3128>
   13ef4:	cmp	r5, #0
   13ef8:	blt	13fe4 <close@plt+0x3198>
   13efc:	cmp	r6, #0
   13f00:	blt	13f20 <close@plt+0x30d4>
   13f04:	mvn	r3, #-2147483648	; 0x80000000
   13f08:	sub	r3, r3, r5
   13f0c:	cmp	r6, r3
   13f10:	movle	r3, #0
   13f14:	movgt	r3, #1
   13f18:	cmp	r3, #0
   13f1c:	bne	140e0 <close@plt+0x3294>
   13f20:	add	r5, r6, r5
   13f24:	cmp	fp, r5
   13f28:	movge	r8, #0
   13f2c:	andlt	r8, r8, #1
   13f30:	cmp	r8, #0
   13f34:	mov	r4, r5
   13f38:	bne	140e0 <close@plt+0x3294>
   13f3c:	cmp	r7, #0
   13f40:	blt	13ff8 <close@plt+0x31ac>
   13f44:	beq	13f70 <close@plt+0x3124>
   13f48:	cmp	r5, #0
   13f4c:	blt	140a0 <close@plt+0x3254>
   13f50:	mov	r1, r7
   13f54:	mvn	r0, #-2147483648	; 0x80000000
   13f58:	bl	14954 <close@plt+0x3b08>
   13f5c:	cmp	r5, r0
   13f60:	movle	r0, #0
   13f64:	movgt	r0, #1
   13f68:	cmp	r0, #0
   13f6c:	bne	140e0 <close@plt+0x3294>
   13f70:	mul	r1, r5, r7
   13f74:	mov	r0, r9
   13f78:	bl	13cf0 <close@plt+0x2ea4>
   13f7c:	str	r4, [sl]
   13f80:	add	sp, sp, #12
   13f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f88:	cmp	r7, #0
   13f8c:	blt	14024 <close@plt+0x31d8>
   13f90:	beq	13eb0 <close@plt+0x3064>
   13f94:	cmp	r4, #0
   13f98:	blt	14060 <close@plt+0x3214>
   13f9c:	mov	r1, r7
   13fa0:	mvn	r0, #-2147483648	; 0x80000000
   13fa4:	bl	14954 <close@plt+0x3b08>
   13fa8:	cmp	r0, r4
   13fac:	movge	r0, #0
   13fb0:	movlt	r0, #1
   13fb4:	cmp	r0, #0
   13fb8:	mvnne	r2, #-2147483648	; 0x80000000
   13fbc:	bne	13eb4 <close@plt+0x3068>
   13fc0:	mul	r1, r7, r4
   13fc4:	cmp	r1, #63	; 0x3f
   13fc8:	bgt	13ee0 <close@plt+0x3094>
   13fcc:	b	13eb0 <close@plt+0x3064>
   13fd0:	rsb	r3, r4, #-2147483648	; 0x80000000
   13fd4:	cmp	r6, r3
   13fd8:	movge	r3, #0
   13fdc:	movlt	r3, #1
   13fe0:	b	13e7c <close@plt+0x3030>
   13fe4:	rsb	r3, r5, #-2147483648	; 0x80000000
   13fe8:	cmp	r6, r3
   13fec:	movge	r3, #0
   13ff0:	movlt	r3, #1
   13ff4:	b	13f18 <close@plt+0x30cc>
   13ff8:	cmp	r5, #0
   13ffc:	blt	14084 <close@plt+0x3238>
   14000:	cmn	r7, #1
   14004:	beq	13f70 <close@plt+0x3124>
   14008:	mov	r1, r7
   1400c:	mov	r0, #-2147483648	; 0x80000000
   14010:	bl	14954 <close@plt+0x3b08>
   14014:	cmp	r5, r0
   14018:	movle	r0, #0
   1401c:	movgt	r0, #1
   14020:	b	13f68 <close@plt+0x311c>
   14024:	cmp	r4, #0
   14028:	blt	140c4 <close@plt+0x3278>
   1402c:	cmn	r7, #1
   14030:	beq	13fc0 <close@plt+0x3174>
   14034:	mov	r1, r7
   14038:	mov	r0, #-2147483648	; 0x80000000
   1403c:	bl	14954 <close@plt+0x3b08>
   14040:	cmp	r0, r4
   14044:	movge	r0, #0
   14048:	movlt	r0, #1
   1404c:	b	13fb4 <close@plt+0x3168>
   14050:	mov	r4, fp
   14054:	b	13f9c <close@plt+0x3150>
   14058:	mov	r4, fp
   1405c:	b	1402c <close@plt+0x31e0>
   14060:	cmn	r4, #1
   14064:	beq	13fc0 <close@plt+0x3174>
   14068:	mov	r1, r4
   1406c:	mov	r0, #-2147483648	; 0x80000000
   14070:	bl	14954 <close@plt+0x3b08>
   14074:	cmp	r7, r0
   14078:	movle	r0, #0
   1407c:	movgt	r0, #1
   14080:	b	13fb4 <close@plt+0x3168>
   14084:	mov	r1, r7
   14088:	mvn	r0, #-2147483648	; 0x80000000
   1408c:	bl	14954 <close@plt+0x3b08>
   14090:	cmp	r5, r0
   14094:	movge	r0, #0
   14098:	movlt	r0, #1
   1409c:	b	13f68 <close@plt+0x311c>
   140a0:	cmn	r5, #1
   140a4:	beq	13f70 <close@plt+0x3124>
   140a8:	mov	r1, r5
   140ac:	mov	r0, #-2147483648	; 0x80000000
   140b0:	bl	14954 <close@plt+0x3b08>
   140b4:	cmp	r7, r0
   140b8:	movle	r0, #0
   140bc:	movgt	r0, #1
   140c0:	b	13f68 <close@plt+0x311c>
   140c4:	mov	r1, r7
   140c8:	mvn	r0, #-2147483648	; 0x80000000
   140cc:	bl	14954 <close@plt+0x3b08>
   140d0:	cmp	r0, r4
   140d4:	movle	r0, #0
   140d8:	movgt	r0, #1
   140dc:	b	13fb4 <close@plt+0x3168>
   140e0:	bl	141fc <close@plt+0x33b0>
   140e4:	push	{r4, lr}
   140e8:	mov	r1, #1
   140ec:	bl	1423c <close@plt+0x33f0>
   140f0:	cmp	r0, #0
   140f4:	popne	{r4, pc}
   140f8:	bl	141fc <close@plt+0x33b0>
   140fc:	push	{r4, lr}
   14100:	mov	r1, #1
   14104:	bl	1423c <close@plt+0x33f0>
   14108:	cmp	r0, #0
   1410c:	popne	{r4, pc}
   14110:	bl	141fc <close@plt+0x33b0>
   14114:	push	{r4, lr}
   14118:	bl	1423c <close@plt+0x33f0>
   1411c:	cmp	r0, #0
   14120:	popne	{r4, pc}
   14124:	bl	141fc <close@plt+0x33b0>
   14128:	push	{r4, lr}
   1412c:	bl	1423c <close@plt+0x33f0>
   14130:	cmp	r0, #0
   14134:	popne	{r4, pc}
   14138:	bl	141fc <close@plt+0x33b0>
   1413c:	push	{r4, r5, r6, lr}
   14140:	mov	r6, r0
   14144:	mov	r0, r1
   14148:	mov	r4, r1
   1414c:	bl	14284 <close@plt+0x3438>
   14150:	subs	r5, r0, #0
   14154:	beq	1416c <close@plt+0x3320>
   14158:	mov	r2, r4
   1415c:	mov	r1, r6
   14160:	bl	10c60 <memcpy@plt>
   14164:	mov	r0, r5
   14168:	pop	{r4, r5, r6, pc}
   1416c:	bl	141fc <close@plt+0x33b0>
   14170:	push	{r4, r5, r6, lr}
   14174:	mov	r6, r0
   14178:	mov	r0, r1
   1417c:	mov	r4, r1
   14180:	bl	14284 <close@plt+0x3438>
   14184:	subs	r5, r0, #0
   14188:	beq	141a0 <close@plt+0x3354>
   1418c:	mov	r2, r4
   14190:	mov	r1, r6
   14194:	bl	10c60 <memcpy@plt>
   14198:	mov	r0, r5
   1419c:	pop	{r4, r5, r6, pc}
   141a0:	bl	141fc <close@plt+0x33b0>
   141a4:	push	{r4, r5, r6, lr}
   141a8:	mov	r6, r0
   141ac:	add	r0, r1, #1
   141b0:	mov	r4, r1
   141b4:	bl	14284 <close@plt+0x3438>
   141b8:	subs	r5, r0, #0
   141bc:	beq	141dc <close@plt+0x3390>
   141c0:	mov	r3, #0
   141c4:	mov	r1, r6
   141c8:	strb	r3, [r5, r4]
   141cc:	mov	r2, r4
   141d0:	bl	10c60 <memcpy@plt>
   141d4:	mov	r0, r5
   141d8:	pop	{r4, r5, r6, pc}
   141dc:	bl	141fc <close@plt+0x33b0>
   141e0:	push	{r4, lr}
   141e4:	mov	r4, r0
   141e8:	bl	10d74 <strlen@plt>
   141ec:	add	r1, r0, #1
   141f0:	mov	r0, r4
   141f4:	pop	{r4, lr}
   141f8:	b	1413c <close@plt+0x32f0>
   141fc:	ldr	r3, [pc, #44]	; 14230 <close@plt+0x33e4>
   14200:	push	{r4, lr}
   14204:	mov	r2, #5
   14208:	ldr	r1, [pc, #36]	; 14234 <close@plt+0x33e8>
   1420c:	mov	r0, #0
   14210:	ldr	r4, [r3]
   14214:	bl	10c90 <dcgettext@plt>
   14218:	ldr	r2, [pc, #24]	; 14238 <close@plt+0x33ec>
   1421c:	mov	r1, #0
   14220:	mov	r3, r0
   14224:	mov	r0, r4
   14228:	bl	10d08 <error@plt>
   1422c:	bl	10e40 <abort@plt>
   14230:	andeq	r6, r2, r4, ror #1
   14234:	andeq	r5, r1, r0, asr r5
   14238:	andeq	r5, r1, r4, lsl r1
   1423c:	cmp	r1, #0
   14240:	cmpne	r0, #0
   14244:	moveq	r1, #1
   14248:	moveq	r0, r1
   1424c:	umull	r2, r3, r0, r1
   14250:	adds	r3, r3, #0
   14254:	movne	r3, #1
   14258:	cmp	r2, #0
   1425c:	blt	1426c <close@plt+0x3420>
   14260:	cmp	r3, #0
   14264:	bne	1426c <close@plt+0x3420>
   14268:	b	10c00 <calloc@plt>
   1426c:	push	{r4, lr}
   14270:	bl	10d80 <__errno_location@plt>
   14274:	mov	r3, #12
   14278:	str	r3, [r0]
   1427c:	mov	r0, #0
   14280:	pop	{r4, pc}
   14284:	cmp	r0, #0
   14288:	moveq	r0, #1
   1428c:	cmp	r0, #0
   14290:	blt	14298 <close@plt+0x344c>
   14294:	b	10d20 <malloc@plt>
   14298:	push	{r4, lr}
   1429c:	bl	10d80 <__errno_location@plt>
   142a0:	mov	r3, #12
   142a4:	str	r3, [r0]
   142a8:	mov	r0, #0
   142ac:	pop	{r4, pc}
   142b0:	cmp	r0, #0
   142b4:	beq	142d8 <close@plt+0x348c>
   142b8:	cmp	r1, #0
   142bc:	push	{lr}		; (str lr, [sp, #-4]!)
   142c0:	sub	sp, sp, #12
   142c4:	beq	142e0 <close@plt+0x3494>
   142c8:	blt	142f8 <close@plt+0x34ac>
   142cc:	add	sp, sp, #12
   142d0:	pop	{lr}		; (ldr lr, [sp], #4)
   142d4:	b	10ca8 <realloc@plt>
   142d8:	mov	r0, r1
   142dc:	b	14284 <close@plt+0x3438>
   142e0:	str	r1, [sp, #4]
   142e4:	bl	14488 <close@plt+0x363c>
   142e8:	ldr	r3, [sp, #4]
   142ec:	mov	r0, r3
   142f0:	add	sp, sp, #12
   142f4:	pop	{pc}		; (ldr pc, [sp], #4)
   142f8:	bl	10d80 <__errno_location@plt>
   142fc:	mov	r2, #12
   14300:	mov	r3, #0
   14304:	str	r2, [r0]
   14308:	b	142ec <close@plt+0x34a0>
   1430c:	push	{r4, r5, r6, lr}
   14310:	mov	r4, r0
   14314:	bl	10cf0 <__fpending@plt>
   14318:	ldr	r5, [r4]
   1431c:	and	r5, r5, #32
   14320:	mov	r6, r0
   14324:	mov	r0, r4
   14328:	bl	14388 <close@plt+0x353c>
   1432c:	cmp	r5, #0
   14330:	mov	r4, r0
   14334:	bne	14354 <close@plt+0x3508>
   14338:	cmp	r0, #0
   1433c:	beq	1434c <close@plt+0x3500>
   14340:	cmp	r6, #0
   14344:	beq	14370 <close@plt+0x3524>
   14348:	mvn	r4, #0
   1434c:	mov	r0, r4
   14350:	pop	{r4, r5, r6, pc}
   14354:	cmp	r0, #0
   14358:	bne	14348 <close@plt+0x34fc>
   1435c:	bl	10d80 <__errno_location@plt>
   14360:	str	r4, [r0]
   14364:	mvn	r4, #0
   14368:	mov	r0, r4
   1436c:	pop	{r4, r5, r6, pc}
   14370:	bl	10d80 <__errno_location@plt>
   14374:	ldr	r4, [r0]
   14378:	subs	r4, r4, #9
   1437c:	mvnne	r4, #0
   14380:	mov	r0, r4
   14384:	pop	{r4, r5, r6, pc}
   14388:	push	{r4, r5, lr}
   1438c:	sub	sp, sp, #12
   14390:	mov	r4, r0
   14394:	bl	10db0 <fileno@plt>
   14398:	cmp	r0, #0
   1439c:	mov	r0, r4
   143a0:	blt	1441c <close@plt+0x35d0>
   143a4:	bl	10d38 <__freading@plt>
   143a8:	cmp	r0, #0
   143ac:	bne	143e8 <close@plt+0x359c>
   143b0:	mov	r0, r4
   143b4:	bl	14428 <close@plt+0x35dc>
   143b8:	cmp	r0, #0
   143bc:	beq	14418 <close@plt+0x35cc>
   143c0:	bl	10d80 <__errno_location@plt>
   143c4:	mov	r5, r0
   143c8:	mov	r0, r4
   143cc:	ldr	r4, [r5]
   143d0:	bl	10dc8 <fclose@plt>
   143d4:	cmp	r4, #0
   143d8:	mvnne	r0, #0
   143dc:	strne	r4, [r5]
   143e0:	add	sp, sp, #12
   143e4:	pop	{r4, r5, pc}
   143e8:	mov	r0, r4
   143ec:	bl	10db0 <fileno@plt>
   143f0:	mov	r3, #1
   143f4:	str	r3, [sp]
   143f8:	mov	r2, #0
   143fc:	mov	r3, #0
   14400:	bl	10cd8 <lseek64@plt>
   14404:	mvn	r3, #0
   14408:	mvn	r2, #0
   1440c:	cmp	r1, r3
   14410:	cmpeq	r0, r2
   14414:	bne	143b0 <close@plt+0x3564>
   14418:	mov	r0, r4
   1441c:	add	sp, sp, #12
   14420:	pop	{r4, r5, lr}
   14424:	b	10dc8 <fclose@plt>
   14428:	push	{r4, lr}
   1442c:	subs	r4, r0, #0
   14430:	sub	sp, sp, #8
   14434:	beq	14450 <close@plt+0x3604>
   14438:	bl	10d38 <__freading@plt>
   1443c:	cmp	r0, #0
   14440:	beq	14450 <close@plt+0x3604>
   14444:	ldr	r3, [r4]
   14448:	tst	r3, #256	; 0x100
   1444c:	bne	14460 <close@plt+0x3614>
   14450:	mov	r0, r4
   14454:	add	sp, sp, #8
   14458:	pop	{r4, lr}
   1445c:	b	10c3c <fflush@plt>
   14460:	mov	r3, #1
   14464:	str	r3, [sp]
   14468:	mov	r2, #0
   1446c:	mov	r3, #0
   14470:	mov	r0, r4
   14474:	bl	144e0 <close@plt+0x3694>
   14478:	mov	r0, r4
   1447c:	add	sp, sp, #8
   14480:	pop	{r4, lr}
   14484:	b	10c3c <fflush@plt>
   14488:	push	{r4, r5, lr}
   1448c:	sub	sp, sp, #12
   14490:	mov	r5, r0
   14494:	bl	10d80 <__errno_location@plt>
   14498:	mov	r2, #0
   1449c:	mov	r4, r0
   144a0:	ldr	r3, [r0]
   144a4:	str	r2, [r4]
   144a8:	mov	r0, r5
   144ac:	str	r3, [sp]
   144b0:	str	r3, [sp, #4]
   144b4:	bl	10c48 <free@plt>
   144b8:	ldr	r3, [r4]
   144bc:	add	r2, sp, #8
   144c0:	cmp	r3, #0
   144c4:	moveq	r3, #4
   144c8:	movne	r3, #0
   144cc:	add	r3, r2, r3
   144d0:	ldr	r3, [r3, #-8]
   144d4:	str	r3, [r4]
   144d8:	add	sp, sp, #12
   144dc:	pop	{r4, r5, pc}
   144e0:	push	{r4, r5, r6, r7, r8, lr}
   144e4:	sub	sp, sp, #8
   144e8:	ldmib	r0, {ip, lr}
   144ec:	mov	r4, r0
   144f0:	ldr	r5, [sp, #32]
   144f4:	cmp	lr, ip
   144f8:	beq	14510 <close@plt+0x36c4>
   144fc:	str	r5, [sp, #32]
   14500:	mov	r0, r4
   14504:	add	sp, sp, #8
   14508:	pop	{r4, r5, r6, r7, r8, lr}
   1450c:	b	10dd4 <fseeko64@plt>
   14510:	ldr	lr, [r0, #20]
   14514:	ldr	ip, [r0, #16]
   14518:	cmp	lr, ip
   1451c:	bne	144fc <close@plt+0x36b0>
   14520:	ldr	r8, [r0, #36]	; 0x24
   14524:	cmp	r8, #0
   14528:	bne	144fc <close@plt+0x36b0>
   1452c:	mov	r6, r2
   14530:	mov	r7, r3
   14534:	bl	10db0 <fileno@plt>
   14538:	mov	r2, r6
   1453c:	mov	r3, r7
   14540:	str	r5, [sp]
   14544:	bl	10cd8 <lseek64@plt>
   14548:	mvn	r3, #0
   1454c:	mvn	r2, #0
   14550:	cmp	r1, r3
   14554:	cmpeq	r0, r2
   14558:	beq	14578 <close@plt+0x372c>
   1455c:	ldr	r3, [r4]
   14560:	strd	r0, [r4, #80]	; 0x50
   14564:	mov	r0, r8
   14568:	bic	r3, r3, #16
   1456c:	str	r3, [r4]
   14570:	add	sp, sp, #8
   14574:	pop	{r4, r5, r6, r7, r8, pc}
   14578:	mvn	r0, #0
   1457c:	b	14570 <close@plt+0x3724>
   14580:	push	{r4, lr}
   14584:	mov	r0, #14
   14588:	bl	10e04 <nl_langinfo@plt>
   1458c:	cmp	r0, #0
   14590:	beq	145a8 <close@plt+0x375c>
   14594:	ldrb	r2, [r0]
   14598:	ldr	r3, [pc, #16]	; 145b0 <close@plt+0x3764>
   1459c:	cmp	r2, #0
   145a0:	moveq	r0, r3
   145a4:	pop	{r4, pc}
   145a8:	ldr	r0, [pc]	; 145b0 <close@plt+0x3764>
   145ac:	pop	{r4, pc}
   145b0:	andeq	r5, r1, r4, ror #10
   145b4:	push	{r4, r5, r6, r7, lr}
   145b8:	subs	r6, r0, #0
   145bc:	sub	sp, sp, #12
   145c0:	addeq	r6, sp, #4
   145c4:	mov	r0, r6
   145c8:	mov	r5, r2
   145cc:	mov	r7, r1
   145d0:	bl	10cfc <mbrtowc@plt>
   145d4:	cmp	r5, #0
   145d8:	cmnne	r0, #3
   145dc:	mov	r4, r0
   145e0:	bls	145fc <close@plt+0x37b0>
   145e4:	mov	r0, #0
   145e8:	bl	14654 <close@plt+0x3808>
   145ec:	cmp	r0, #0
   145f0:	moveq	r4, #1
   145f4:	ldrbeq	r3, [r7]
   145f8:	streq	r3, [r6]
   145fc:	mov	r0, r4
   14600:	add	sp, sp, #12
   14604:	pop	{r4, r5, r6, r7, pc}
   14608:	push	{r4, r5, r6, lr}
   1460c:	subs	r4, r2, #0
   14610:	mov	r6, r0
   14614:	mov	r5, r1
   14618:	beq	14644 <close@plt+0x37f8>
   1461c:	mov	r1, r4
   14620:	mvn	r0, #0
   14624:	bl	14748 <close@plt+0x38fc>
   14628:	cmp	r0, r5
   1462c:	bcs	14644 <close@plt+0x37f8>
   14630:	bl	10d80 <__errno_location@plt>
   14634:	mov	r3, #12
   14638:	str	r3, [r0]
   1463c:	mov	r0, #0
   14640:	pop	{r4, r5, r6, pc}
   14644:	mul	r1, r5, r4
   14648:	mov	r0, r6
   1464c:	pop	{r4, r5, r6, lr}
   14650:	b	142b0 <close@plt+0x3464>
   14654:	push	{lr}		; (str lr, [sp, #-4]!)
   14658:	sub	sp, sp, #268	; 0x10c
   1465c:	add	r1, sp, #4
   14660:	ldr	r2, [pc, #60]	; 146a4 <close@plt+0x3858>
   14664:	bl	146b0 <close@plt+0x3864>
   14668:	cmp	r0, #0
   1466c:	movne	r0, #0
   14670:	bne	1469c <close@plt+0x3850>
   14674:	ldr	r1, [pc, #44]	; 146a8 <close@plt+0x385c>
   14678:	add	r0, sp, #4
   1467c:	bl	10c30 <strcmp@plt>
   14680:	cmp	r0, #0
   14684:	beq	1469c <close@plt+0x3850>
   14688:	add	r0, sp, #4
   1468c:	ldr	r1, [pc, #24]	; 146ac <close@plt+0x3860>
   14690:	bl	10c30 <strcmp@plt>
   14694:	adds	r0, r0, #0
   14698:	movne	r0, #1
   1469c:	add	sp, sp, #268	; 0x10c
   146a0:	pop	{pc}		; (ldr pc, [sp], #4)
   146a4:	andeq	r0, r0, r1, lsl #2
   146a8:	andeq	r5, r1, ip, ror #10
   146ac:	andeq	r5, r1, r0, ror r5
   146b0:	push	{r4, r5, r6, lr}
   146b4:	mov	r5, r1
   146b8:	mov	r1, #0
   146bc:	mov	r4, r2
   146c0:	bl	10dec <setlocale@plt>
   146c4:	subs	r6, r0, #0
   146c8:	beq	14724 <close@plt+0x38d8>
   146cc:	bl	10d74 <strlen@plt>
   146d0:	cmp	r4, r0
   146d4:	bhi	1470c <close@plt+0x38c0>
   146d8:	cmp	r4, #0
   146dc:	bne	146e8 <close@plt+0x389c>
   146e0:	mov	r0, #34	; 0x22
   146e4:	pop	{r4, r5, r6, pc}
   146e8:	sub	r4, r4, #1
   146ec:	mov	r1, r6
   146f0:	mov	r2, r4
   146f4:	mov	r0, r5
   146f8:	bl	10c60 <memcpy@plt>
   146fc:	mov	r3, #0
   14700:	strb	r3, [r5, r4]
   14704:	mov	r0, #34	; 0x22
   14708:	pop	{r4, r5, r6, pc}
   1470c:	add	r2, r0, #1
   14710:	mov	r1, r6
   14714:	mov	r0, r5
   14718:	bl	10c60 <memcpy@plt>
   1471c:	mov	r0, #0
   14720:	pop	{r4, r5, r6, pc}
   14724:	cmp	r4, #0
   14728:	beq	14738 <close@plt+0x38ec>
   1472c:	strb	r6, [r5]
   14730:	mov	r0, #22
   14734:	pop	{r4, r5, r6, pc}
   14738:	mov	r0, #22
   1473c:	pop	{r4, r5, r6, pc}
   14740:	mov	r1, #0
   14744:	b	10dec <setlocale@plt>
   14748:	subs	r2, r1, #1
   1474c:	bxeq	lr
   14750:	bcc	14928 <close@plt+0x3adc>
   14754:	cmp	r0, r1
   14758:	bls	1490c <close@plt+0x3ac0>
   1475c:	tst	r1, r2
   14760:	beq	14918 <close@plt+0x3acc>
   14764:	clz	r3, r0
   14768:	clz	r2, r1
   1476c:	sub	r3, r2, r3
   14770:	rsbs	r3, r3, #31
   14774:	addne	r3, r3, r3, lsl #1
   14778:	mov	r2, #0
   1477c:	addne	pc, pc, r3, lsl #2
   14780:	nop			; (mov r0, r0)
   14784:	cmp	r0, r1, lsl #31
   14788:	adc	r2, r2, r2
   1478c:	subcs	r0, r0, r1, lsl #31
   14790:	cmp	r0, r1, lsl #30
   14794:	adc	r2, r2, r2
   14798:	subcs	r0, r0, r1, lsl #30
   1479c:	cmp	r0, r1, lsl #29
   147a0:	adc	r2, r2, r2
   147a4:	subcs	r0, r0, r1, lsl #29
   147a8:	cmp	r0, r1, lsl #28
   147ac:	adc	r2, r2, r2
   147b0:	subcs	r0, r0, r1, lsl #28
   147b4:	cmp	r0, r1, lsl #27
   147b8:	adc	r2, r2, r2
   147bc:	subcs	r0, r0, r1, lsl #27
   147c0:	cmp	r0, r1, lsl #26
   147c4:	adc	r2, r2, r2
   147c8:	subcs	r0, r0, r1, lsl #26
   147cc:	cmp	r0, r1, lsl #25
   147d0:	adc	r2, r2, r2
   147d4:	subcs	r0, r0, r1, lsl #25
   147d8:	cmp	r0, r1, lsl #24
   147dc:	adc	r2, r2, r2
   147e0:	subcs	r0, r0, r1, lsl #24
   147e4:	cmp	r0, r1, lsl #23
   147e8:	adc	r2, r2, r2
   147ec:	subcs	r0, r0, r1, lsl #23
   147f0:	cmp	r0, r1, lsl #22
   147f4:	adc	r2, r2, r2
   147f8:	subcs	r0, r0, r1, lsl #22
   147fc:	cmp	r0, r1, lsl #21
   14800:	adc	r2, r2, r2
   14804:	subcs	r0, r0, r1, lsl #21
   14808:	cmp	r0, r1, lsl #20
   1480c:	adc	r2, r2, r2
   14810:	subcs	r0, r0, r1, lsl #20
   14814:	cmp	r0, r1, lsl #19
   14818:	adc	r2, r2, r2
   1481c:	subcs	r0, r0, r1, lsl #19
   14820:	cmp	r0, r1, lsl #18
   14824:	adc	r2, r2, r2
   14828:	subcs	r0, r0, r1, lsl #18
   1482c:	cmp	r0, r1, lsl #17
   14830:	adc	r2, r2, r2
   14834:	subcs	r0, r0, r1, lsl #17
   14838:	cmp	r0, r1, lsl #16
   1483c:	adc	r2, r2, r2
   14840:	subcs	r0, r0, r1, lsl #16
   14844:	cmp	r0, r1, lsl #15
   14848:	adc	r2, r2, r2
   1484c:	subcs	r0, r0, r1, lsl #15
   14850:	cmp	r0, r1, lsl #14
   14854:	adc	r2, r2, r2
   14858:	subcs	r0, r0, r1, lsl #14
   1485c:	cmp	r0, r1, lsl #13
   14860:	adc	r2, r2, r2
   14864:	subcs	r0, r0, r1, lsl #13
   14868:	cmp	r0, r1, lsl #12
   1486c:	adc	r2, r2, r2
   14870:	subcs	r0, r0, r1, lsl #12
   14874:	cmp	r0, r1, lsl #11
   14878:	adc	r2, r2, r2
   1487c:	subcs	r0, r0, r1, lsl #11
   14880:	cmp	r0, r1, lsl #10
   14884:	adc	r2, r2, r2
   14888:	subcs	r0, r0, r1, lsl #10
   1488c:	cmp	r0, r1, lsl #9
   14890:	adc	r2, r2, r2
   14894:	subcs	r0, r0, r1, lsl #9
   14898:	cmp	r0, r1, lsl #8
   1489c:	adc	r2, r2, r2
   148a0:	subcs	r0, r0, r1, lsl #8
   148a4:	cmp	r0, r1, lsl #7
   148a8:	adc	r2, r2, r2
   148ac:	subcs	r0, r0, r1, lsl #7
   148b0:	cmp	r0, r1, lsl #6
   148b4:	adc	r2, r2, r2
   148b8:	subcs	r0, r0, r1, lsl #6
   148bc:	cmp	r0, r1, lsl #5
   148c0:	adc	r2, r2, r2
   148c4:	subcs	r0, r0, r1, lsl #5
   148c8:	cmp	r0, r1, lsl #4
   148cc:	adc	r2, r2, r2
   148d0:	subcs	r0, r0, r1, lsl #4
   148d4:	cmp	r0, r1, lsl #3
   148d8:	adc	r2, r2, r2
   148dc:	subcs	r0, r0, r1, lsl #3
   148e0:	cmp	r0, r1, lsl #2
   148e4:	adc	r2, r2, r2
   148e8:	subcs	r0, r0, r1, lsl #2
   148ec:	cmp	r0, r1, lsl #1
   148f0:	adc	r2, r2, r2
   148f4:	subcs	r0, r0, r1, lsl #1
   148f8:	cmp	r0, r1
   148fc:	adc	r2, r2, r2
   14900:	subcs	r0, r0, r1
   14904:	mov	r0, r2
   14908:	bx	lr
   1490c:	moveq	r0, #1
   14910:	movne	r0, #0
   14914:	bx	lr
   14918:	clz	r2, r1
   1491c:	rsb	r2, r2, #31
   14920:	lsr	r0, r0, r2
   14924:	bx	lr
   14928:	cmp	r0, #0
   1492c:	mvnne	r0, #0
   14930:	b	14b94 <close@plt+0x3d48>
   14934:	cmp	r1, #0
   14938:	beq	14928 <close@plt+0x3adc>
   1493c:	push	{r0, r1, lr}
   14940:	bl	14748 <close@plt+0x38fc>
   14944:	pop	{r1, r2, lr}
   14948:	mul	r3, r2, r0
   1494c:	sub	r1, r1, r3
   14950:	bx	lr
   14954:	cmp	r1, #0
   14958:	beq	14b64 <close@plt+0x3d18>
   1495c:	eor	ip, r0, r1
   14960:	rsbmi	r1, r1, #0
   14964:	subs	r2, r1, #1
   14968:	beq	14b30 <close@plt+0x3ce4>
   1496c:	movs	r3, r0
   14970:	rsbmi	r3, r0, #0
   14974:	cmp	r3, r1
   14978:	bls	14b3c <close@plt+0x3cf0>
   1497c:	tst	r1, r2
   14980:	beq	14b4c <close@plt+0x3d00>
   14984:	clz	r2, r3
   14988:	clz	r0, r1
   1498c:	sub	r2, r0, r2
   14990:	rsbs	r2, r2, #31
   14994:	addne	r2, r2, r2, lsl #1
   14998:	mov	r0, #0
   1499c:	addne	pc, pc, r2, lsl #2
   149a0:	nop			; (mov r0, r0)
   149a4:	cmp	r3, r1, lsl #31
   149a8:	adc	r0, r0, r0
   149ac:	subcs	r3, r3, r1, lsl #31
   149b0:	cmp	r3, r1, lsl #30
   149b4:	adc	r0, r0, r0
   149b8:	subcs	r3, r3, r1, lsl #30
   149bc:	cmp	r3, r1, lsl #29
   149c0:	adc	r0, r0, r0
   149c4:	subcs	r3, r3, r1, lsl #29
   149c8:	cmp	r3, r1, lsl #28
   149cc:	adc	r0, r0, r0
   149d0:	subcs	r3, r3, r1, lsl #28
   149d4:	cmp	r3, r1, lsl #27
   149d8:	adc	r0, r0, r0
   149dc:	subcs	r3, r3, r1, lsl #27
   149e0:	cmp	r3, r1, lsl #26
   149e4:	adc	r0, r0, r0
   149e8:	subcs	r3, r3, r1, lsl #26
   149ec:	cmp	r3, r1, lsl #25
   149f0:	adc	r0, r0, r0
   149f4:	subcs	r3, r3, r1, lsl #25
   149f8:	cmp	r3, r1, lsl #24
   149fc:	adc	r0, r0, r0
   14a00:	subcs	r3, r3, r1, lsl #24
   14a04:	cmp	r3, r1, lsl #23
   14a08:	adc	r0, r0, r0
   14a0c:	subcs	r3, r3, r1, lsl #23
   14a10:	cmp	r3, r1, lsl #22
   14a14:	adc	r0, r0, r0
   14a18:	subcs	r3, r3, r1, lsl #22
   14a1c:	cmp	r3, r1, lsl #21
   14a20:	adc	r0, r0, r0
   14a24:	subcs	r3, r3, r1, lsl #21
   14a28:	cmp	r3, r1, lsl #20
   14a2c:	adc	r0, r0, r0
   14a30:	subcs	r3, r3, r1, lsl #20
   14a34:	cmp	r3, r1, lsl #19
   14a38:	adc	r0, r0, r0
   14a3c:	subcs	r3, r3, r1, lsl #19
   14a40:	cmp	r3, r1, lsl #18
   14a44:	adc	r0, r0, r0
   14a48:	subcs	r3, r3, r1, lsl #18
   14a4c:	cmp	r3, r1, lsl #17
   14a50:	adc	r0, r0, r0
   14a54:	subcs	r3, r3, r1, lsl #17
   14a58:	cmp	r3, r1, lsl #16
   14a5c:	adc	r0, r0, r0
   14a60:	subcs	r3, r3, r1, lsl #16
   14a64:	cmp	r3, r1, lsl #15
   14a68:	adc	r0, r0, r0
   14a6c:	subcs	r3, r3, r1, lsl #15
   14a70:	cmp	r3, r1, lsl #14
   14a74:	adc	r0, r0, r0
   14a78:	subcs	r3, r3, r1, lsl #14
   14a7c:	cmp	r3, r1, lsl #13
   14a80:	adc	r0, r0, r0
   14a84:	subcs	r3, r3, r1, lsl #13
   14a88:	cmp	r3, r1, lsl #12
   14a8c:	adc	r0, r0, r0
   14a90:	subcs	r3, r3, r1, lsl #12
   14a94:	cmp	r3, r1, lsl #11
   14a98:	adc	r0, r0, r0
   14a9c:	subcs	r3, r3, r1, lsl #11
   14aa0:	cmp	r3, r1, lsl #10
   14aa4:	adc	r0, r0, r0
   14aa8:	subcs	r3, r3, r1, lsl #10
   14aac:	cmp	r3, r1, lsl #9
   14ab0:	adc	r0, r0, r0
   14ab4:	subcs	r3, r3, r1, lsl #9
   14ab8:	cmp	r3, r1, lsl #8
   14abc:	adc	r0, r0, r0
   14ac0:	subcs	r3, r3, r1, lsl #8
   14ac4:	cmp	r3, r1, lsl #7
   14ac8:	adc	r0, r0, r0
   14acc:	subcs	r3, r3, r1, lsl #7
   14ad0:	cmp	r3, r1, lsl #6
   14ad4:	adc	r0, r0, r0
   14ad8:	subcs	r3, r3, r1, lsl #6
   14adc:	cmp	r3, r1, lsl #5
   14ae0:	adc	r0, r0, r0
   14ae4:	subcs	r3, r3, r1, lsl #5
   14ae8:	cmp	r3, r1, lsl #4
   14aec:	adc	r0, r0, r0
   14af0:	subcs	r3, r3, r1, lsl #4
   14af4:	cmp	r3, r1, lsl #3
   14af8:	adc	r0, r0, r0
   14afc:	subcs	r3, r3, r1, lsl #3
   14b00:	cmp	r3, r1, lsl #2
   14b04:	adc	r0, r0, r0
   14b08:	subcs	r3, r3, r1, lsl #2
   14b0c:	cmp	r3, r1, lsl #1
   14b10:	adc	r0, r0, r0
   14b14:	subcs	r3, r3, r1, lsl #1
   14b18:	cmp	r3, r1
   14b1c:	adc	r0, r0, r0
   14b20:	subcs	r3, r3, r1
   14b24:	cmp	ip, #0
   14b28:	rsbmi	r0, r0, #0
   14b2c:	bx	lr
   14b30:	teq	ip, r0
   14b34:	rsbmi	r0, r0, #0
   14b38:	bx	lr
   14b3c:	movcc	r0, #0
   14b40:	asreq	r0, ip, #31
   14b44:	orreq	r0, r0, #1
   14b48:	bx	lr
   14b4c:	clz	r2, r1
   14b50:	rsb	r2, r2, #31
   14b54:	cmp	ip, #0
   14b58:	lsr	r0, r3, r2
   14b5c:	rsbmi	r0, r0, #0
   14b60:	bx	lr
   14b64:	cmp	r0, #0
   14b68:	mvngt	r0, #-2147483648	; 0x80000000
   14b6c:	movlt	r0, #-2147483648	; 0x80000000
   14b70:	b	14b94 <close@plt+0x3d48>
   14b74:	cmp	r1, #0
   14b78:	beq	14b64 <close@plt+0x3d18>
   14b7c:	push	{r0, r1, lr}
   14b80:	bl	1495c <close@plt+0x3b10>
   14b84:	pop	{r1, r2, lr}
   14b88:	mul	r3, r2, r0
   14b8c:	sub	r1, r1, r3
   14b90:	bx	lr
   14b94:	push	{r1, lr}
   14b98:	mov	r0, #8
   14b9c:	bl	10c18 <raise@plt>
   14ba0:	pop	{r1, pc}
   14ba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14ba8:	mov	r7, r0
   14bac:	ldr	r6, [pc, #72]	; 14bfc <close@plt+0x3db0>
   14bb0:	ldr	r5, [pc, #72]	; 14c00 <close@plt+0x3db4>
   14bb4:	add	r6, pc, r6
   14bb8:	add	r5, pc, r5
   14bbc:	sub	r6, r6, r5
   14bc0:	mov	r8, r1
   14bc4:	mov	r9, r2
   14bc8:	bl	10be0 <calloc@plt-0x20>
   14bcc:	asrs	r6, r6, #2
   14bd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bd4:	mov	r4, #0
   14bd8:	add	r4, r4, #1
   14bdc:	ldr	r3, [r5], #4
   14be0:	mov	r2, r9
   14be4:	mov	r1, r8
   14be8:	mov	r0, r7
   14bec:	blx	r3
   14bf0:	cmp	r6, r4
   14bf4:	bne	14bd8 <close@plt+0x3d8c>
   14bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bfc:	andeq	r1, r1, r4, asr r3
   14c00:	andeq	r1, r1, ip, asr #6
   14c04:	bx	lr
   14c08:	ldr	r3, [pc, #12]	; 14c1c <close@plt+0x3dd0>
   14c0c:	mov	r1, #0
   14c10:	add	r3, pc, r3
   14c14:	ldr	r2, [r3]
   14c18:	b	10d8c <__cxa_atexit@plt>
   14c1c:	andeq	r1, r1, r4, asr #9

Disassembly of section .fini:

00014c20 <.fini>:
   14c20:	push	{r3, lr}
   14c24:	pop	{r3, pc}
