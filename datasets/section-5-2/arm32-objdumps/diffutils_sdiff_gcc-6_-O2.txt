
../repos/diffutils/src/sdiff:     file format elf32-littlearm


Disassembly of section .init:

000111d0 <.init>:
   111d0:	push	{r3, lr}
   111d4:	bl	123e4 <sigaltstack@plt+0xdf8>
   111d8:	pop	{r3, pc}

Disassembly of section .plt:

000111dc <fdopen@plt-0x14>:
   111dc:	push	{lr}		; (str lr, [sp, #-4]!)
   111e0:	ldr	lr, [pc, #4]	; 111ec <fdopen@plt-0x4>
   111e4:	add	lr, pc, lr
   111e8:	ldr	pc, [lr, #8]!
   111ec:	andeq	r8, r1, r4, lsl lr

000111f0 <fdopen@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #24, 20	; 0x18000
   111f8:	ldr	pc, [ip, #3604]!	; 0xe14

000111fc <calloc@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #24, 20	; 0x18000
   11204:	ldr	pc, [ip, #3596]!	; 0xe0c

00011208 <fputs_unlocked@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #24, 20	; 0x18000
   11210:	ldr	pc, [ip, #3588]!	; 0xe04

00011214 <raise@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #24, 20	; 0x18000
   1121c:	ldr	pc, [ip, #3580]!	; 0xdfc

00011220 <iconv_close@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #24, 20	; 0x18000
   11228:	ldr	pc, [ip, #3572]!	; 0xdf4

0001122c <iconv@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #24, 20	; 0x18000
   11234:	ldr	pc, [ip, #3564]!	; 0xdec

00011238 <strcmp@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #24, 20	; 0x18000
   11240:	ldr	pc, [ip, #3556]!	; 0xde4

00011244 <printf@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #24, 20	; 0x18000
   1124c:	ldr	pc, [ip, #3548]!	; 0xddc

00011250 <read@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #24, 20	; 0x18000
   11258:	ldr	pc, [ip, #3540]!	; 0xdd4

0001125c <wcwidth@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #24, 20	; 0x18000
   11264:	ldr	pc, [ip, #3532]!	; 0xdcc

00011268 <memmove@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #24, 20	; 0x18000
   11270:	ldr	pc, [ip, #3524]!	; 0xdc4

00011274 <free@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #24, 20	; 0x18000
   1127c:	ldr	pc, [ip, #3516]!	; 0xdbc

00011280 <_exit@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #24, 20	; 0x18000
   11288:	ldr	pc, [ip, #3508]!	; 0xdb4

0001128c <memcpy@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #24, 20	; 0x18000
   11294:	ldr	pc, [ip, #3500]!	; 0xdac

00011298 <execvp@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #24, 20	; 0x18000
   112a0:	ldr	pc, [ip, #3492]!	; 0xda4

000112a4 <mmap64@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #24, 20	; 0x18000
   112ac:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b0 <mbsinit@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #24, 20	; 0x18000
   112b8:	ldr	pc, [ip, #3476]!	; 0xd94

000112bc <signal@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #24, 20	; 0x18000
   112c4:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c8 <fwrite_unlocked@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #24, 20	; 0x18000
   112d0:	ldr	pc, [ip, #3460]!	; 0xd84

000112d4 <memcmp@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #24, 20	; 0x18000
   112dc:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e0 <fputc_unlocked@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #24, 20	; 0x18000
   112e8:	ldr	pc, [ip, #3444]!	; 0xd74

000112ec <dcgettext@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #24, 20	; 0x18000
   112f4:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f8 <strdup@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #24, 20	; 0x18000
   11300:	ldr	pc, [ip, #3428]!	; 0xd64

00011304 <unlink@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #24, 20	; 0x18000
   1130c:	ldr	pc, [ip, #3420]!	; 0xd5c

00011310 <dup2@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #24, 20	; 0x18000
   11318:	ldr	pc, [ip, #3412]!	; 0xd54

0001131c <realloc@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #24, 20	; 0x18000
   11324:	ldr	pc, [ip, #3404]!	; 0xd4c

00011328 <textdomain@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #24, 20	; 0x18000
   11330:	ldr	pc, [ip, #3396]!	; 0xd44

00011334 <iswcntrl@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #24, 20	; 0x18000
   1133c:	ldr	pc, [ip, #3388]!	; 0xd3c

00011340 <rawmemchr@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #24, 20	; 0x18000
   11348:	ldr	pc, [ip, #3380]!	; 0xd34

0001134c <perror@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #24, 20	; 0x18000
   11354:	ldr	pc, [ip, #3372]!	; 0xd2c

00011358 <fflush_unlocked@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #24, 20	; 0x18000
   11360:	ldr	pc, [ip, #3364]!	; 0xd24

00011364 <sigaction@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #24, 20	; 0x18000
   1136c:	ldr	pc, [ip, #3356]!	; 0xd1c

00011370 <fwrite@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #24, 20	; 0x18000
   11378:	ldr	pc, [ip, #3348]!	; 0xd14

0001137c <lseek64@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #24, 20	; 0x18000
   11384:	ldr	pc, [ip, #3340]!	; 0xd0c

00011388 <waitpid@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #24, 20	; 0x18000
   11390:	ldr	pc, [ip, #3332]!	; 0xd04

00011394 <__ctype_get_mb_cur_max@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #24, 20	; 0x18000
   1139c:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a0 <mbrtowc@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #24, 20	; 0x18000
   113a8:	ldr	pc, [ip, #3316]!	; 0xcf4

000113ac <error@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #24, 20	; 0x18000
   113b4:	ldr	pc, [ip, #3308]!	; 0xcec

000113b8 <open64@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #24, 20	; 0x18000
   113c0:	ldr	pc, [ip, #3300]!	; 0xce4

000113c4 <getenv@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #24, 20	; 0x18000
   113cc:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d0 <mkstemp64@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #24, 20	; 0x18000
   113d8:	ldr	pc, [ip, #3284]!	; 0xcd4

000113dc <puts@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #24, 20	; 0x18000
   113e4:	ldr	pc, [ip, #3276]!	; 0xccc

000113e8 <malloc@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #24, 20	; 0x18000
   113f0:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f4 <iconv_open@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #24, 20	; 0x18000
   113fc:	ldr	pc, [ip, #3260]!	; 0xcbc

00011400 <sigaddset@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #24, 20	; 0x18000
   11408:	ldr	pc, [ip, #3252]!	; 0xcb4

0001140c <__libc_start_main@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #24, 20	; 0x18000
   11414:	ldr	pc, [ip, #3244]!	; 0xcac

00011418 <__gmon_start__@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #24, 20	; 0x18000
   11420:	ldr	pc, [ip, #3236]!	; 0xca4

00011424 <mempcpy@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #24, 20	; 0x18000
   1142c:	ldr	pc, [ip, #3228]!	; 0xc9c

00011430 <getopt_long@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #24, 20	; 0x18000
   11438:	ldr	pc, [ip, #3220]!	; 0xc94

0001143c <kill@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #24, 20	; 0x18000
   11444:	ldr	pc, [ip, #3212]!	; 0xc8c

00011448 <__ctype_b_loc@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #24, 20	; 0x18000
   11450:	ldr	pc, [ip, #3204]!	; 0xc84

00011454 <exit@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #24, 20	; 0x18000
   1145c:	ldr	pc, [ip, #3196]!	; 0xc7c

00011460 <iswspace@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #24, 20	; 0x18000
   11468:	ldr	pc, [ip, #3188]!	; 0xc74

0001146c <strlen@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #24, 20	; 0x18000
   11474:	ldr	pc, [ip, #3180]!	; 0xc6c

00011478 <strchr@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #24, 20	; 0x18000
   11480:	ldr	pc, [ip, #3172]!	; 0xc64

00011484 <fprintf@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #24, 20	; 0x18000
   1148c:	ldr	pc, [ip, #3164]!	; 0xc5c

00011490 <getpagesize@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #24, 20	; 0x18000
   11498:	ldr	pc, [ip, #3156]!	; 0xc54

0001149c <__errno_location@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #24, 20	; 0x18000
   114a4:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a8 <iswalnum@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #24, 20	; 0x18000
   114b0:	ldr	pc, [ip, #3140]!	; 0xc44

000114b4 <write@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #24, 20	; 0x18000
   114bc:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c0 <memchr@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #24, 20	; 0x18000
   114c8:	ldr	pc, [ip, #3124]!	; 0xc34

000114cc <fclose@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #24, 20	; 0x18000
   114d4:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d8 <strnlen@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #24, 20	; 0x18000
   114e0:	ldr	pc, [ip, #3108]!	; 0xc24

000114e4 <pipe@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #24, 20	; 0x18000
   114ec:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f0 <munmap@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #24, 20	; 0x18000
   114f8:	ldr	pc, [ip, #3092]!	; 0xc14

000114fc <fcntl64@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #24, 20	; 0x18000
   11504:	ldr	pc, [ip, #3084]!	; 0xc0c

00011508 <__uflow@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #24, 20	; 0x18000
   11510:	ldr	pc, [ip, #3076]!	; 0xc04

00011514 <__overflow@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #24, 20	; 0x18000
   1151c:	ldr	pc, [ip, #3068]!	; 0xbfc

00011520 <setlocale@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #24, 20	; 0x18000
   11528:	ldr	pc, [ip, #3060]!	; 0xbf4

0001152c <sigemptyset@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #24, 20	; 0x18000
   11534:	ldr	pc, [ip, #3052]!	; 0xbec

00011538 <fork@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #24, 20	; 0x18000
   11540:	ldr	pc, [ip, #3044]!	; 0xbe4

00011544 <strrchr@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #24, 20	; 0x18000
   1154c:	ldr	pc, [ip, #3036]!	; 0xbdc

00011550 <nl_langinfo@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #24, 20	; 0x18000
   11558:	ldr	pc, [ip, #3028]!	; 0xbd4

0001155c <sprintf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #24, 20	; 0x18000
   11564:	ldr	pc, [ip, #3020]!	; 0xbcc

00011568 <__strtoll_internal@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #24, 20	; 0x18000
   11570:	ldr	pc, [ip, #3012]!	; 0xbc4

00011574 <fopen64@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #24, 20	; 0x18000
   1157c:	ldr	pc, [ip, #3004]!	; 0xbbc

00011580 <mincore@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #24, 20	; 0x18000
   11588:	ldr	pc, [ip, #2996]!	; 0xbb4

0001158c <bindtextdomain@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #24, 20	; 0x18000
   11594:	ldr	pc, [ip, #2988]!	; 0xbac

00011598 <fread_unlocked@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #24, 20	; 0x18000
   115a0:	ldr	pc, [ip, #2980]!	; 0xba4

000115a4 <__xstat64@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #24, 20	; 0x18000
   115ac:	ldr	pc, [ip, #2972]!	; 0xb9c

000115b0 <fputs@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #24, 20	; 0x18000
   115b8:	ldr	pc, [ip, #2964]!	; 0xb94

000115bc <strncmp@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #24, 20	; 0x18000
   115c4:	ldr	pc, [ip, #2956]!	; 0xb8c

000115c8 <abort@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #24, 20	; 0x18000
   115d0:	ldr	pc, [ip, #2948]!	; 0xb84

000115d4 <close@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #24, 20	; 0x18000
   115dc:	ldr	pc, [ip, #2940]!	; 0xb7c

000115e0 <__assert_fail@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #24, 20	; 0x18000
   115e8:	ldr	pc, [ip, #2932]!	; 0xb74

000115ec <sigaltstack@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #24, 20	; 0x18000
   115f4:	ldr	pc, [ip, #2924]!	; 0xb6c

Disassembly of section .text:

000115f8 <.text>:
   115f8:	push	{r4, lr}
   115fc:	mov	r2, #5
   11600:	ldr	r1, [pc, #8]	; 11610 <sigaltstack@plt+0x24>
   11604:	mov	r0, #0
   11608:	bl	112ec <dcgettext@plt>
   1160c:	bl	127a8 <sigaltstack@plt+0x11bc>
   11610:	andeq	r8, r1, r8, ror #15
   11614:	ldr	r3, [pc, #3220]	; 122b0 <sigaltstack@plt+0xcc4>
   11618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1161c:	mov	r2, #2
   11620:	sub	sp, sp, #372	; 0x174
   11624:	mov	r5, r0
   11628:	ldr	r0, [r1]
   1162c:	mov	r4, r1
   11630:	str	r2, [r3]
   11634:	bl	135d8 <sigaltstack@plt+0x1fec>
   11638:	ldr	r1, [pc, #3188]	; 122b4 <sigaltstack@plt+0xcc8>
   1163c:	mov	r0, #6
   11640:	bl	11520 <setlocale@plt>
   11644:	ldr	r1, [pc, #3180]	; 122b8 <sigaltstack@plt+0xccc>
   11648:	ldr	r0, [pc, #3180]	; 122bc <sigaltstack@plt+0xcd0>
   1164c:	bl	1158c <bindtextdomain@plt>
   11650:	ldr	r0, [pc, #3172]	; 122bc <sigaltstack@plt+0xcd0>
   11654:	bl	11328 <textdomain@plt>
   11658:	ldr	r0, [pc, #3168]	; 122c0 <sigaltstack@plt+0xcd4>
   1165c:	bl	13520 <sigaltstack@plt+0x1f34>
   11660:	bl	15b30 <sigaltstack@plt+0x4544>
   11664:	ldr	r0, [pc, #3160]	; 122c4 <sigaltstack@plt+0xcd8>
   11668:	bl	113c4 <getenv@plt>
   1166c:	ldr	r7, [pc, #3156]	; 122c8 <sigaltstack@plt+0xcdc>
   11670:	ldr	r6, [pc, #3156]	; 122cc <sigaltstack@plt+0xce0>
   11674:	ldr	fp, [pc, #3156]	; 122d0 <sigaltstack@plt+0xce4>
   11678:	ldr	r8, [pc, #3156]	; 122d4 <sigaltstack@plt+0xce8>
   1167c:	ldr	sl, [pc, #3156]	; 122d8 <sigaltstack@plt+0xcec>
   11680:	ldr	r9, [pc, #3156]	; 122dc <sigaltstack@plt+0xcf0>
   11684:	cmp	r0, #0
   11688:	ldrne	r3, [pc, #3152]	; 122e0 <sigaltstack@plt+0xcf4>
   1168c:	strne	r0, [r3]
   11690:	ldr	r0, [pc, #3148]	; 122e4 <sigaltstack@plt+0xcf8>
   11694:	bl	125d4 <sigaltstack@plt+0xfe8>
   11698:	mov	r3, #0
   1169c:	str	r3, [sp]
   116a0:	mov	r2, r6
   116a4:	mov	r3, r7
   116a8:	mov	r1, r4
   116ac:	mov	r0, r5
   116b0:	bl	11430 <getopt_long@plt>
   116b4:	cmn	r0, #1
   116b8:	beq	11c3c <sigaltstack@plt+0x650>
   116bc:	sub	r0, r0, #66	; 0x42
   116c0:	cmp	r0, #193	; 0xc1
   116c4:	ldrls	pc, [pc, r0, lsl #2]
   116c8:	b	11c24 <sigaltstack@plt+0x638>
   116cc:	andeq	r1, r1, r8, lsl ip
   116d0:	andeq	r1, r1, r4, lsr #24
   116d4:	andeq	r1, r1, r4, lsr #24
   116d8:	andeq	r1, r1, ip, lsl #24
   116dc:	andeq	r1, r1, r4, lsr #24
   116e0:	andeq	r1, r1, r4, lsr #24
   116e4:	andeq	r1, r1, r0, lsl #24
   116e8:	andeq	r1, r1, ip, ror #23
   116ec:	andeq	r1, r1, r4, lsr #24
   116f0:	andeq	r1, r1, r4, lsr #24
   116f4:	andeq	r1, r1, r4, lsr #24
   116f8:	andeq	r1, r1, r4, lsr #24
   116fc:	andeq	r1, r1, r4, lsr #24
   11700:	andeq	r1, r1, r4, lsr #24
   11704:	andeq	r1, r1, r4, lsr #24
   11708:	andeq	r1, r1, r4, lsr #24
   1170c:	andeq	r1, r1, r4, lsr #24
   11710:	andeq	r1, r1, r4, lsr #24
   11714:	andeq	r1, r1, r4, lsr #24
   11718:	andeq	r1, r1, r4, lsr #24
   1171c:	andeq	r1, r1, r4, lsr #24
   11720:	andeq	r1, r1, r0, ror #23
   11724:	andeq	r1, r1, r4, lsr #24
   11728:	andeq	r1, r1, r4, lsr #24
   1172c:	ldrdeq	r1, [r1], -r4
   11730:	andeq	r1, r1, r4, lsr #24
   11734:	andeq	r1, r1, r4, lsr #24
   11738:	andeq	r1, r1, r4, lsr #24
   1173c:	andeq	r1, r1, r4, lsr #24
   11740:	andeq	r1, r1, r4, lsr #24
   11744:	andeq	r1, r1, r4, lsr #24
   11748:	andeq	r1, r1, r8, asr #23
   1174c:			; <UNDEFINED> instruction: 0x00011bbc
   11750:	andeq	r1, r1, r4, lsr #24
   11754:			; <UNDEFINED> instruction: 0x00011bb0
   11758:	andeq	r1, r1, r4, lsr #24
   1175c:	andeq	r1, r1, r4, lsr #24
   11760:	andeq	r1, r1, r4, lsr #24
   11764:	andeq	r1, r1, r4, lsr #24
   11768:	andeq	r1, r1, r4, lsr #23
   1176c:	andeq	r1, r1, r4, lsr #24
   11770:	andeq	r1, r1, r4, lsr #24
   11774:	muleq	r1, r8, fp
   11778:	andeq	r1, r1, r4, lsr #24
   1177c:	andeq	r1, r1, r4, lsr #24
   11780:	andeq	r1, r1, ip, lsl #23
   11784:	andeq	r1, r1, r4, lsr #24
   11788:	andeq	r1, r1, r4, lsr #24
   1178c:	andeq	r1, r1, r4, lsr #24
   11790:	andeq	r1, r1, r0, lsl #23
   11794:	andeq	r1, r1, r4, ror fp
   11798:	andeq	r1, r1, r4, lsr #24
   1179c:	andeq	r1, r1, ip, lsr #22
   117a0:	andeq	r1, r1, r8, lsl fp
   117a4:	andeq	r1, r1, r4, lsr #24
   117a8:	andeq	r1, r1, r4, lsr #24
   117ac:	andeq	r1, r1, r4, lsr #24
   117b0:	andeq	r1, r1, r4, lsr #24
   117b4:	andeq	r1, r1, r4, lsr #24
   117b8:	andeq	r1, r1, r4, lsr #24
   117bc:	andeq	r1, r1, r4, lsr #24
   117c0:	andeq	r1, r1, r4, lsr #24
   117c4:	andeq	r1, r1, r4, lsr #24
   117c8:	andeq	r1, r1, r4, lsr #24
   117cc:	andeq	r1, r1, r4, lsr #24
   117d0:	andeq	r1, r1, r4, lsr #24
   117d4:	andeq	r1, r1, r4, lsr #24
   117d8:	andeq	r1, r1, r4, lsr #24
   117dc:	andeq	r1, r1, r4, lsr #24
   117e0:	andeq	r1, r1, r4, lsr #24
   117e4:	andeq	r1, r1, r4, lsr #24
   117e8:	andeq	r1, r1, r4, lsr #24
   117ec:	andeq	r1, r1, r4, lsr #24
   117f0:	andeq	r1, r1, r4, lsr #24
   117f4:	andeq	r1, r1, r4, lsr #24
   117f8:	andeq	r1, r1, r4, lsr #24
   117fc:	andeq	r1, r1, r4, lsr #24
   11800:	andeq	r1, r1, r4, lsr #24
   11804:	andeq	r1, r1, r4, lsr #24
   11808:	andeq	r1, r1, r4, lsr #24
   1180c:	andeq	r1, r1, r4, lsr #24
   11810:	andeq	r1, r1, r4, lsr #24
   11814:	andeq	r1, r1, r4, lsr #24
   11818:	andeq	r1, r1, r4, lsr #24
   1181c:	andeq	r1, r1, r4, lsr #24
   11820:	andeq	r1, r1, r4, lsr #24
   11824:	andeq	r1, r1, r4, lsr #24
   11828:	andeq	r1, r1, r4, lsr #24
   1182c:	andeq	r1, r1, r4, lsr #24
   11830:	andeq	r1, r1, r4, lsr #24
   11834:	andeq	r1, r1, r4, lsr #24
   11838:	andeq	r1, r1, r4, lsr #24
   1183c:	andeq	r1, r1, r4, lsr #24
   11840:	andeq	r1, r1, r4, lsr #24
   11844:	andeq	r1, r1, r4, lsr #24
   11848:	andeq	r1, r1, r4, lsr #24
   1184c:	andeq	r1, r1, r4, lsr #24
   11850:	andeq	r1, r1, r4, lsr #24
   11854:	andeq	r1, r1, r4, lsr #24
   11858:	andeq	r1, r1, r4, lsr #24
   1185c:	andeq	r1, r1, r4, lsr #24
   11860:	andeq	r1, r1, r4, lsr #24
   11864:	andeq	r1, r1, r4, lsr #24
   11868:	andeq	r1, r1, r4, lsr #24
   1186c:	andeq	r1, r1, r4, lsr #24
   11870:	andeq	r1, r1, r4, lsr #24
   11874:	andeq	r1, r1, r4, lsr #24
   11878:	andeq	r1, r1, r4, lsr #24
   1187c:	andeq	r1, r1, r4, lsr #24
   11880:	andeq	r1, r1, r4, lsr #24
   11884:	andeq	r1, r1, r4, lsr #24
   11888:	andeq	r1, r1, r4, lsr #24
   1188c:	andeq	r1, r1, r4, lsr #24
   11890:	andeq	r1, r1, r4, lsr #24
   11894:	andeq	r1, r1, r4, lsr #24
   11898:	andeq	r1, r1, r4, lsr #24
   1189c:	andeq	r1, r1, r4, lsr #24
   118a0:	andeq	r1, r1, r4, lsr #24
   118a4:	andeq	r1, r1, r4, lsr #24
   118a8:	andeq	r1, r1, r4, lsr #24
   118ac:	andeq	r1, r1, r4, lsr #24
   118b0:	andeq	r1, r1, r4, lsr #24
   118b4:	andeq	r1, r1, r4, lsr #24
   118b8:	andeq	r1, r1, r4, lsr #24
   118bc:	andeq	r1, r1, r4, lsr #24
   118c0:	andeq	r1, r1, r4, lsr #24
   118c4:	andeq	r1, r1, r4, lsr #24
   118c8:	andeq	r1, r1, r4, lsr #24
   118cc:	andeq	r1, r1, r4, lsr #24
   118d0:	andeq	r1, r1, r4, lsr #24
   118d4:	andeq	r1, r1, r4, lsr #24
   118d8:	andeq	r1, r1, r4, lsr #24
   118dc:	andeq	r1, r1, r4, lsr #24
   118e0:	andeq	r1, r1, r4, lsr #24
   118e4:	andeq	r1, r1, r4, lsr #24
   118e8:	andeq	r1, r1, r4, lsr #24
   118ec:	andeq	r1, r1, r4, lsr #24
   118f0:	andeq	r1, r1, r4, lsr #24
   118f4:	andeq	r1, r1, r4, lsr #24
   118f8:	andeq	r1, r1, r4, lsr #24
   118fc:	andeq	r1, r1, r4, lsr #24
   11900:	andeq	r1, r1, r4, lsr #24
   11904:	andeq	r1, r1, r4, lsr #24
   11908:	andeq	r1, r1, r4, lsr #24
   1190c:	andeq	r1, r1, r4, lsr #24
   11910:	andeq	r1, r1, r4, lsr #24
   11914:	andeq	r1, r1, r4, lsr #24
   11918:	andeq	r1, r1, r4, lsr #24
   1191c:	andeq	r1, r1, r4, lsr #24
   11920:	andeq	r1, r1, r4, lsr #24
   11924:	andeq	r1, r1, r4, lsr #24
   11928:	andeq	r1, r1, r4, lsr #24
   1192c:	andeq	r1, r1, r4, lsr #24
   11930:	andeq	r1, r1, r4, lsr #24
   11934:	andeq	r1, r1, r4, lsr #24
   11938:	andeq	r1, r1, r4, lsr #24
   1193c:	andeq	r1, r1, r4, lsr #24
   11940:	andeq	r1, r1, r4, lsr #24
   11944:	andeq	r1, r1, r4, lsr #24
   11948:	andeq	r1, r1, r4, lsr #24
   1194c:	andeq	r1, r1, r4, lsr #24
   11950:	andeq	r1, r1, r4, lsr #24
   11954:	andeq	r1, r1, r4, lsr #24
   11958:	andeq	r1, r1, r4, lsr #24
   1195c:	andeq	r1, r1, r4, lsr #24
   11960:	andeq	r1, r1, r4, lsr #24
   11964:	andeq	r1, r1, r4, lsr #24
   11968:	andeq	r1, r1, r4, lsr #24
   1196c:	andeq	r1, r1, r4, lsr #24
   11970:	andeq	r1, r1, r4, lsr #24
   11974:	andeq	r1, r1, r4, lsr #24
   11978:	andeq	r1, r1, r4, lsr #24
   1197c:	andeq	r1, r1, r4, lsr #24
   11980:	andeq	r1, r1, r4, lsr #24
   11984:	andeq	r1, r1, r4, lsr #24
   11988:	andeq	r1, r1, r4, lsr #24
   1198c:	andeq	r1, r1, r4, lsr #24
   11990:	andeq	r1, r1, r4, lsr #24
   11994:	andeq	r1, r1, r4, lsr #24
   11998:	andeq	r1, r1, r4, lsr #24
   1199c:	andeq	r1, r1, r4, lsr #24
   119a0:	andeq	r1, r1, r4, lsr #24
   119a4:	andeq	r1, r1, r4, lsr #24
   119a8:	andeq	r1, r1, r4, lsr #24
   119ac:	andeq	r1, r1, r4, lsr #24
   119b0:	andeq	r1, r1, r4, lsr #24
   119b4:	andeq	r1, r1, r4, lsr #24
   119b8:	andeq	r1, r1, r4, lsr #24
   119bc:	andeq	r1, r1, r4, lsr #24
   119c0:	andeq	r1, r1, r4, lsr #24
   119c4:	andeq	r1, r1, r8, lsl #22
   119c8:	strdeq	r1, [r1], -r4
   119cc:	andeq	r1, r1, r8, ror #19
   119d0:	ldrdeq	r1, [r1], -r4
   119d4:	mov	r0, fp
   119d8:	bl	125d4 <sigaltstack@plt+0xfe8>
   119dc:	ldr	r0, [r8]
   119e0:	bl	125d4 <sigaltstack@plt+0xfe8>
   119e4:	b	11698 <sigaltstack@plt+0xac>
   119e8:	mov	r0, sl
   119ec:	bl	125d4 <sigaltstack@plt+0xfe8>
   119f0:	b	11698 <sigaltstack@plt+0xac>
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #2280]	; 122e8 <sigaltstack@plt+0xcfc>
   119fc:	mov	r0, #0
   11a00:	bl	112ec <dcgettext@plt>
   11a04:	ldr	r3, [pc, #2272]	; 122ec <sigaltstack@plt+0xd00>
   11a08:	ldr	r6, [pc, #2272]	; 122f0 <sigaltstack@plt+0xd04>
   11a0c:	ldr	r4, [pc, #2272]	; 122f4 <sigaltstack@plt+0xd08>
   11a10:	ldr	r1, [r3]
   11a14:	bl	11244 <printf@plt>
   11a18:	mov	r2, #5
   11a1c:	ldr	r1, [pc, #2260]	; 122f8 <sigaltstack@plt+0xd0c>
   11a20:	mov	r0, #0
   11a24:	bl	112ec <dcgettext@plt>
   11a28:	ldr	r5, [pc, #2252]	; 122fc <sigaltstack@plt+0xd10>
   11a2c:	ldr	r9, [pc, #2252]	; 12300 <sigaltstack@plt+0xd14>
   11a30:	mov	sl, #10
   11a34:	mov	r8, #5
   11a38:	mov	r7, #0
   11a3c:	mov	r1, r0
   11a40:	ldr	r0, [pc, #2236]	; 12304 <sigaltstack@plt+0xd18>
   11a44:	bl	11244 <printf@plt>
   11a48:	mov	r2, #5
   11a4c:	ldr	r1, [pc, #2228]	; 12308 <sigaltstack@plt+0xd1c>
   11a50:	mov	r0, #0
   11a54:	bl	112ec <dcgettext@plt>
   11a58:	ldr	r1, [r6]
   11a5c:	bl	11208 <fputs_unlocked@plt>
   11a60:	mov	r1, r4
   11a64:	b	11a94 <sigaltstack@plt+0x4a8>
   11a68:	ldr	r0, [r6]
   11a6c:	ldr	r3, [r0, #20]
   11a70:	ldr	r2, [r0, #24]
   11a74:	cmp	r3, r2
   11a78:	addcc	r2, r3, #1
   11a7c:	strcc	r2, [r0, #20]
   11a80:	strbcc	sl, [r3]
   11a84:	bcs	11c30 <sigaltstack@plt+0x644>
   11a88:	ldr	r1, [r5, #4]!
   11a8c:	cmp	r1, #0
   11a90:	beq	11ac4 <sigaltstack@plt+0x4d8>
   11a94:	ldrb	r3, [r1]
   11a98:	cmp	r3, #0
   11a9c:	beq	11a68 <sigaltstack@plt+0x47c>
   11aa0:	mov	r2, r8
   11aa4:	mov	r0, r7
   11aa8:	bl	112ec <dcgettext@plt>
   11aac:	mov	r1, r0
   11ab0:	mov	r0, r9
   11ab4:	bl	11244 <printf@plt>
   11ab8:	ldr	r1, [r5, #4]!
   11abc:	cmp	r1, #0
   11ac0:	bne	11a94 <sigaltstack@plt+0x4a8>
   11ac4:	mov	r4, r1
   11ac8:	mov	r2, #5
   11acc:	ldr	r1, [pc, #2104]	; 1230c <sigaltstack@plt+0xd20>
   11ad0:	mov	r0, r4
   11ad4:	bl	112ec <dcgettext@plt>
   11ad8:	mov	r2, #5
   11adc:	ldr	r1, [pc, #2092]	; 12310 <sigaltstack@plt+0xd24>
   11ae0:	mov	r5, r0
   11ae4:	mov	r0, r4
   11ae8:	bl	112ec <dcgettext@plt>
   11aec:	mov	r1, r5
   11af0:	mov	r2, r0
   11af4:	ldr	r0, [pc, #2072]	; 12314 <sigaltstack@plt+0xd28>
   11af8:	bl	11244 <printf@plt>
   11afc:	bl	15534 <sigaltstack@plt+0x3f48>
   11b00:	bl	128c4 <sigaltstack@plt+0x12d8>
   11b04:	b	11b68 <sigaltstack@plt+0x57c>
   11b08:	ldr	r3, [r9, #24]
   11b0c:	ldr	r2, [r8]
   11b10:	str	r2, [r3]
   11b14:	b	11698 <sigaltstack@plt+0xac>
   11b18:	ldr	r0, [pc, #2040]	; 12318 <sigaltstack@plt+0xd2c>
   11b1c:	bl	125d4 <sigaltstack@plt+0xfe8>
   11b20:	ldr	r0, [r8]
   11b24:	bl	125d4 <sigaltstack@plt+0xfe8>
   11b28:	b	11698 <sigaltstack@plt+0xac>
   11b2c:	ldr	r2, [pc, #1980]	; 122f0 <sigaltstack@plt+0xd04>
   11b30:	ldr	r3, [pc, #2020]	; 1231c <sigaltstack@plt+0xd30>
   11b34:	ldr	r0, [pc, #2020]	; 12320 <sigaltstack@plt+0xd34>
   11b38:	ldr	r4, [r2]
   11b3c:	ldr	r5, [r3]
   11b40:	bl	13e68 <sigaltstack@plt+0x287c>
   11b44:	mov	r2, #0
   11b48:	mov	r3, r5
   11b4c:	str	r2, [sp, #4]
   11b50:	ldr	r1, [pc, #1996]	; 12324 <sigaltstack@plt+0xd38>
   11b54:	ldr	r2, [pc, #1996]	; 12328 <sigaltstack@plt+0xd3c>
   11b58:	str	r0, [sp]
   11b5c:	mov	r0, r4
   11b60:	bl	154d4 <sigaltstack@plt+0x3ee8>
   11b64:	bl	128c4 <sigaltstack@plt+0x12d8>
   11b68:	mov	r0, #0
   11b6c:	add	sp, sp, #372	; 0x174
   11b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b74:	ldr	r0, [pc, #1968]	; 1232c <sigaltstack@plt+0xd40>
   11b78:	bl	125d4 <sigaltstack@plt+0xfe8>
   11b7c:	b	11698 <sigaltstack@plt+0xac>
   11b80:	mov	r3, #1
   11b84:	strb	r3, [r9, #1009]	; 0x3f1
   11b88:	b	11698 <sigaltstack@plt+0xac>
   11b8c:	ldr	r3, [r8]
   11b90:	str	r3, [r9, #1016]	; 0x3f8
   11b94:	b	11698 <sigaltstack@plt+0xac>
   11b98:	ldr	r0, [pc, #1936]	; 12330 <sigaltstack@plt+0xd44>
   11b9c:	bl	125d4 <sigaltstack@plt+0xfe8>
   11ba0:	b	11698 <sigaltstack@plt+0xac>
   11ba4:	ldr	r0, [pc, #1928]	; 12334 <sigaltstack@plt+0xd48>
   11ba8:	bl	125d4 <sigaltstack@plt+0xfe8>
   11bac:	b	11698 <sigaltstack@plt+0xac>
   11bb0:	ldr	r0, [pc, #1920]	; 12338 <sigaltstack@plt+0xd4c>
   11bb4:	bl	125d4 <sigaltstack@plt+0xfe8>
   11bb8:	b	11698 <sigaltstack@plt+0xac>
   11bbc:	ldr	r0, [pc, #1912]	; 1233c <sigaltstack@plt+0xd50>
   11bc0:	bl	125d4 <sigaltstack@plt+0xfe8>
   11bc4:	b	11698 <sigaltstack@plt+0xac>
   11bc8:	ldr	r0, [pc, #1904]	; 12340 <sigaltstack@plt+0xd54>
   11bcc:	bl	125d4 <sigaltstack@plt+0xfe8>
   11bd0:	b	11698 <sigaltstack@plt+0xac>
   11bd4:	ldr	r0, [pc, #1896]	; 12344 <sigaltstack@plt+0xd58>
   11bd8:	bl	125d4 <sigaltstack@plt+0xfe8>
   11bdc:	b	11698 <sigaltstack@plt+0xac>
   11be0:	ldr	r0, [pc, #1888]	; 12348 <sigaltstack@plt+0xd5c>
   11be4:	bl	125d4 <sigaltstack@plt+0xfe8>
   11be8:	b	11698 <sigaltstack@plt+0xac>
   11bec:	ldr	r0, [pc, #1880]	; 1234c <sigaltstack@plt+0xd60>
   11bf0:	bl	125d4 <sigaltstack@plt+0xfe8>
   11bf4:	ldr	r0, [r8]
   11bf8:	bl	125d4 <sigaltstack@plt+0xfe8>
   11bfc:	b	11698 <sigaltstack@plt+0xac>
   11c00:	ldr	r0, [pc, #1864]	; 12350 <sigaltstack@plt+0xd64>
   11c04:	bl	125d4 <sigaltstack@plt+0xfe8>
   11c08:	b	11698 <sigaltstack@plt+0xac>
   11c0c:	ldr	r0, [pc, #1856]	; 12354 <sigaltstack@plt+0xd68>
   11c10:	bl	125d4 <sigaltstack@plt+0xfe8>
   11c14:	b	11698 <sigaltstack@plt+0xac>
   11c18:	ldr	r0, [pc, #1848]	; 12358 <sigaltstack@plt+0xd6c>
   11c1c:	bl	125d4 <sigaltstack@plt+0xfe8>
   11c20:	b	11698 <sigaltstack@plt+0xac>
   11c24:	mov	r1, #0
   11c28:	mov	r0, r1
   11c2c:	bl	12534 <sigaltstack@plt+0xf48>
   11c30:	mov	r1, sl
   11c34:	bl	11514 <__overflow@plt>
   11c38:	b	11a88 <sigaltstack@plt+0x49c>
   11c3c:	ldr	r8, [pc, #1816]	; 1235c <sigaltstack@plt+0xd70>
   11c40:	ldr	r3, [r8]
   11c44:	sub	r2, r5, r3
   11c48:	cmp	r2, #2
   11c4c:	beq	11c68 <sigaltstack@plt+0x67c>
   11c50:	cmp	r2, #1
   11c54:	ble	12138 <sigaltstack@plt+0xb4c>
   11c58:	add	r3, r3, #2
   11c5c:	ldr	r0, [pc, #1788]	; 12360 <sigaltstack@plt+0xd74>
   11c60:	ldr	r1, [r4, r3, lsl #2]
   11c64:	bl	12534 <sigaltstack@plt+0xf48>
   11c68:	ldr	r5, [pc, #1644]	; 122dc <sigaltstack@plt+0xcf0>
   11c6c:	ldr	r2, [r5, #1016]	; 0x3f8
   11c70:	cmp	r2, #0
   11c74:	beq	121a0 <sigaltstack@plt+0xbb4>
   11c78:	ldr	r0, [r4, r3, lsl #2]
   11c7c:	bl	12598 <sigaltstack@plt+0xfac>
   11c80:	ldr	r3, [r8]
   11c84:	add	r3, r3, #1
   11c88:	mov	r9, r0
   11c8c:	ldr	r0, [r4, r3, lsl #2]
   11c90:	bl	12598 <sigaltstack@plt+0xfac>
   11c94:	and	r6, r9, r0
   11c98:	ands	r6, r6, #255	; 0xff
   11c9c:	mov	r7, r0
   11ca0:	bne	12198 <sigaltstack@plt+0xbac>
   11ca4:	ldr	r3, [r8]
   11ca8:	mov	r1, r9
   11cac:	add	r2, r4, r3, lsl #2
   11cb0:	ldr	r0, [r4, r3, lsl #2]
   11cb4:	ldr	r2, [r2, #4]
   11cb8:	bl	127f4 <sigaltstack@plt+0x1208>
   11cbc:	ldr	r1, [pc, #1696]	; 12364 <sigaltstack@plt+0xd78>
   11cc0:	str	r0, [sp, #48]	; 0x30
   11cc4:	bl	11574 <fopen64@plt>
   11cc8:	subs	r3, r0, #0
   11ccc:	str	r3, [sp, #44]	; 0x2c
   11cd0:	beq	12190 <sigaltstack@plt+0xba4>
   11cd4:	ldr	r3, [r8]
   11cd8:	mov	r1, r7
   11cdc:	add	r0, r3, #1
   11ce0:	ldr	r2, [r4, r3, lsl #2]
   11ce4:	ldr	r0, [r4, r0, lsl #2]
   11ce8:	bl	127f4 <sigaltstack@plt+0x1208>
   11cec:	ldr	r1, [pc, #1648]	; 12364 <sigaltstack@plt+0xd78>
   11cf0:	str	r0, [sp, #52]	; 0x34
   11cf4:	bl	11574 <fopen64@plt>
   11cf8:	subs	r3, r0, #0
   11cfc:	str	r3, [sp, #40]	; 0x28
   11d00:	beq	12210 <sigaltstack@plt+0xc24>
   11d04:	ldr	r7, [r5, #1016]	; 0x3f8
   11d08:	ldr	r1, [pc, #1624]	; 12368 <sigaltstack@plt+0xd7c>
   11d0c:	mov	r0, r7
   11d10:	bl	11574 <fopen64@plt>
   11d14:	subs	r3, r0, #0
   11d18:	str	r3, [sp, #32]
   11d1c:	beq	12208 <sigaltstack@plt+0xc1c>
   11d20:	ldr	r0, [pc, #1604]	; 1236c <sigaltstack@plt+0xd80>
   11d24:	bl	125d4 <sigaltstack@plt+0xfe8>
   11d28:	ldr	r0, [pc, #1600]	; 12370 <sigaltstack@plt+0xd84>
   11d2c:	bl	125d4 <sigaltstack@plt+0xfe8>
   11d30:	ldr	r3, [r8]
   11d34:	add	r7, r5, #1024	; 0x400
   11d38:	ldr	r0, [r4, r3, lsl #2]
   11d3c:	bl	125d4 <sigaltstack@plt+0xfe8>
   11d40:	ldr	r3, [r8]
   11d44:	ldr	r8, [pc, #1576]	; 12374 <sigaltstack@plt+0xd88>
   11d48:	add	r3, r3, #1
   11d4c:	ldr	r0, [r4, r3, lsl #2]
   11d50:	bl	125d4 <sigaltstack@plt+0xfe8>
   11d54:	mov	r0, r6
   11d58:	bl	125d4 <sigaltstack@plt+0xfe8>
   11d5c:	mov	r3, #268435456	; 0x10000000
   11d60:	mov	r0, r7
   11d64:	str	r3, [r5, #1152]	; 0x480
   11d68:	bl	1152c <sigemptyset@plt>
   11d6c:	ldr	r1, [r8, r6, lsl #2]
   11d70:	mov	r0, r7
   11d74:	add	r6, r6, #1
   11d78:	bl	11400 <sigaddset@plt>
   11d7c:	cmp	r6, #7
   11d80:	bne	11d6c <sigaltstack@plt+0x780>
   11d84:	mov	r4, #0
   11d88:	ldr	r7, [pc, #1508]	; 12374 <sigaltstack@plt+0xd88>
   11d8c:	ldr	r6, [pc, #1508]	; 12378 <sigaltstack@plt+0xd8c>
   11d90:	ldr	r9, [pc, #1508]	; 1237c <sigaltstack@plt+0xd90>
   11d94:	mov	r8, r4
   11d98:	ldr	sl, [r7], #4
   11d9c:	add	r2, r6, r4
   11da0:	mov	r0, sl
   11da4:	mov	r1, r8
   11da8:	bl	11364 <sigaction@plt>
   11dac:	ldr	r3, [r6, r4]
   11db0:	cmp	r3, #1
   11db4:	beq	11dcc <sigaltstack@plt+0x7e0>
   11db8:	mov	r0, sl
   11dbc:	mov	r2, r8
   11dc0:	ldr	r1, [pc, #1464]	; 12380 <sigaltstack@plt+0xd94>
   11dc4:	str	r9, [r5, #1020]	; 0x3fc
   11dc8:	bl	11364 <sigaction@plt>
   11dcc:	add	r4, r4, #140	; 0x8c
   11dd0:	cmp	r4, #980	; 0x3d4
   11dd4:	bne	11d98 <sigaltstack@plt+0x7ac>
   11dd8:	mov	r1, #0
   11ddc:	mov	r0, #17
   11de0:	bl	112bc <signal@plt>
   11de4:	mov	fp, #1
   11de8:	add	r0, sp, #112	; 0x70
   11dec:	strb	fp, [r5, #1008]	; 0x3f0
   11df0:	bl	114e4 <pipe@plt>
   11df4:	subs	r3, r0, #0
   11df8:	str	r3, [sp, #28]
   11dfc:	bne	122a8 <sigaltstack@plt+0xcbc>
   11e00:	bl	11538 <fork@plt>
   11e04:	str	r0, [r5, #8]
   11e08:	ldr	r3, [r5, #8]
   11e0c:	cmp	r3, #0
   11e10:	blt	122a0 <sigaltstack@plt+0xcb4>
   11e14:	ldr	r2, [r5, #8]
   11e18:	cmp	r2, #0
   11e1c:	beq	12220 <sigaltstack@plt+0xc34>
   11e20:	ldr	r0, [sp, #116]	; 0x74
   11e24:	bl	115d4 <close@plt>
   11e28:	ldr	r1, [pc, #1332]	; 12364 <sigaltstack@plt+0xd78>
   11e2c:	ldr	r0, [sp, #112]	; 0x70
   11e30:	bl	111f0 <fdopen@plt>
   11e34:	subs	r3, r0, #0
   11e38:	str	r3, [sp, #36]	; 0x24
   11e3c:	beq	12218 <sigaltstack@plt+0xc2c>
   11e40:	ldr	r3, [sp, #36]	; 0x24
   11e44:	ldr	r0, [pc, #1336]	; 12384 <sigaltstack@plt+0xd98>
   11e48:	str	r3, [sp, #96]	; 0x60
   11e4c:	bl	155cc <sigaltstack@plt+0x3fe0>
   11e50:	mov	r6, #10
   11e54:	ldr	r2, [sp, #44]	; 0x2c
   11e58:	mov	r4, r6
   11e5c:	str	r2, [sp, #64]	; 0x40
   11e60:	mov	r3, r0
   11e64:	ldr	r0, [pc, #1304]	; 12384 <sigaltstack@plt+0xd98>
   11e68:	strb	r6, [r3]
   11e6c:	str	r3, [sp, #108]	; 0x6c
   11e70:	str	r3, [sp, #104]	; 0x68
   11e74:	str	r3, [sp, #100]	; 0x64
   11e78:	bl	155cc <sigaltstack@plt+0x3fe0>
   11e7c:	mov	r3, r0
   11e80:	str	r3, [sp, #76]	; 0x4c
   11e84:	str	r3, [sp, #72]	; 0x48
   11e88:	str	r3, [sp, #68]	; 0x44
   11e8c:	strb	r6, [r3]
   11e90:	ldr	r3, [sp, #40]	; 0x28
   11e94:	ldr	r0, [pc, #1256]	; 12384 <sigaltstack@plt+0xd98>
   11e98:	str	r3, [sp, #80]	; 0x50
   11e9c:	bl	155cc <sigaltstack@plt+0x3fe0>
   11ea0:	str	fp, [sp, #24]
   11ea4:	str	r0, [sp, #92]	; 0x5c
   11ea8:	str	r0, [sp, #88]	; 0x58
   11eac:	str	r0, [sp, #84]	; 0x54
   11eb0:	strb	r6, [r0]
   11eb4:	mov	r9, #256	; 0x100
   11eb8:	add	r8, sp, #112	; 0x70
   11ebc:	b	11ef4 <sigaltstack@plt+0x908>
   11ec0:	mov	r1, r7
   11ec4:	mov	r2, r6
   11ec8:	mov	r0, r8
   11ecc:	bl	1128c <memcpy@plt>
   11ed0:	ldr	r3, [sp, #108]	; 0x6c
   11ed4:	cmp	sl, r3
   11ed8:	bcc	11fa0 <sigaltstack@plt+0x9b4>
   11edc:	add	r0, sp, #96	; 0x60
   11ee0:	bl	12af0 <sigaltstack@plt+0x1504>
   11ee4:	cmp	r0, #0
   11ee8:	beq	120bc <sigaltstack@plt+0xad0>
   11eec:	add	r8, r8, r6
   11ef0:	sub	r9, r9, r6
   11ef4:	ldr	r7, [sp, #100]	; 0x64
   11ef8:	mov	r1, r4
   11efc:	mov	r0, r7
   11f00:	bl	11340 <rawmemchr@plt>
   11f04:	sub	r6, r0, r7
   11f08:	cmp	r6, r9
   11f0c:	mov	sl, r0
   11f10:	bcc	11ec0 <sigaltstack@plt+0x8d4>
   11f14:	ldr	r3, [sp, #28]
   11f18:	adds	sl, r3, #0
   11f1c:	movne	sl, #1
   11f20:	ldr	r0, [sp, #44]	; 0x2c
   11f24:	bl	127d8 <sigaltstack@plt+0x11ec>
   11f28:	ldr	r0, [sp, #40]	; 0x28
   11f2c:	bl	127d8 <sigaltstack@plt+0x11ec>
   11f30:	ldr	r0, [sp, #32]
   11f34:	bl	127d8 <sigaltstack@plt+0x11ec>
   11f38:	ldr	r0, [sp, #36]	; 0x24
   11f3c:	bl	127d8 <sigaltstack@plt+0x11ec>
   11f40:	mov	r4, #0
   11f44:	b	11f5c <sigaltstack@plt+0x970>
   11f48:	bl	1149c <__errno_location@plt>
   11f4c:	ldr	r3, [r0]
   11f50:	cmp	r3, #4
   11f54:	bne	12200 <sigaltstack@plt+0xc14>
   11f58:	bl	126f8 <sigaltstack@plt+0x110c>
   11f5c:	ldr	r0, [r5, #8]
   11f60:	mov	r2, r4
   11f64:	add	r1, sp, #112	; 0x70
   11f68:	bl	11388 <waitpid@plt>
   11f6c:	cmp	r0, #0
   11f70:	blt	11f48 <sigaltstack@plt+0x95c>
   11f74:	mov	r4, #0
   11f78:	str	r4, [r5, #8]
   11f7c:	ldr	r3, [r5, #12]
   11f80:	cmp	r3, r4
   11f84:	beq	11f94 <sigaltstack@plt+0x9a8>
   11f88:	ldr	r0, [r5, #12]
   11f8c:	bl	11304 <unlink@plt>
   11f90:	str	r4, [r5, #12]
   11f94:	cmp	sl, #0
   11f98:	bne	1215c <sigaltstack@plt+0xb70>
   11f9c:	bl	12740 <sigaltstack@plt+0x1154>
   11fa0:	mov	r7, #0
   11fa4:	add	sl, sl, #1
   11fa8:	strb	r7, [r8, r6]
   11fac:	str	sl, [sp, #100]	; 0x64
   11fb0:	bl	126f8 <sigaltstack@plt+0x110c>
   11fb4:	ldrb	r3, [sp, #112]	; 0x70
   11fb8:	cmp	r3, #32
   11fbc:	beq	120d0 <sigaltstack@plt+0xae4>
   11fc0:	bl	1149c <__errno_location@plt>
   11fc4:	mov	r3, r7
   11fc8:	mov	r2, r4
   11fcc:	add	r1, sp, #60	; 0x3c
   11fd0:	str	r7, [r0]
   11fd4:	mov	sl, r0
   11fd8:	add	r0, sp, #113	; 0x71
   11fdc:	bl	11568 <__strtoll_internal@plt>
   11fe0:	mov	r3, #0
   11fe4:	mvn	r2, #-2147483648	; 0x80000000
   11fe8:	cmp	r1, r3
   11fec:	cmpeq	r0, r2
   11ff0:	mov	r6, r0
   11ff4:	bhi	120dc <sigaltstack@plt+0xaf0>
   11ff8:	ldr	r3, [sl]
   11ffc:	cmp	r3, #0
   12000:	bne	120dc <sigaltstack@plt+0xaf0>
   12004:	ldr	r0, [sp, #60]	; 0x3c
   12008:	ldrb	r2, [r0]
   1200c:	cmp	r2, #44	; 0x2c
   12010:	bne	120dc <sigaltstack@plt+0xaf0>
   12014:	mov	r2, r4
   12018:	add	r1, sp, #60	; 0x3c
   1201c:	add	r0, r0, #1
   12020:	bl	11568 <__strtoll_internal@plt>
   12024:	mov	r3, #0
   12028:	mvn	r2, #-2147483648	; 0x80000000
   1202c:	cmp	r1, r3
   12030:	cmpeq	r0, r2
   12034:	mov	r8, r0
   12038:	bhi	120dc <sigaltstack@plt+0xaf0>
   1203c:	ldr	r3, [sl]
   12040:	cmp	r3, #0
   12044:	bne	120dc <sigaltstack@plt+0xaf0>
   12048:	ldr	r3, [sp, #60]	; 0x3c
   1204c:	ldrb	r3, [r3]
   12050:	cmp	r3, #0
   12054:	bne	120dc <sigaltstack@plt+0xaf0>
   12058:	ldrb	r3, [sp, #112]	; 0x70
   1205c:	cmp	r0, r6
   12060:	movge	r1, r0
   12064:	movlt	r1, r6
   12068:	cmp	r3, #99	; 0x63
   1206c:	beq	120e4 <sigaltstack@plt+0xaf8>
   12070:	cmp	r3, #105	; 0x69
   12074:	bne	120dc <sigaltstack@plt+0xaf0>
   12078:	ldrb	r3, [r5, #1009]	; 0x3f1
   1207c:	cmp	r3, #0
   12080:	beq	12148 <sigaltstack@plt+0xb5c>
   12084:	add	r0, sp, #96	; 0x60
   12088:	bl	12b44 <sigaltstack@plt+0x1558>
   1208c:	mov	r1, r6
   12090:	add	r0, sp, #64	; 0x40
   12094:	ldr	r2, [sp, #32]
   12098:	bl	12ba4 <sigaltstack@plt+0x15b8>
   1209c:	mov	r1, r8
   120a0:	add	r0, sp, #80	; 0x50
   120a4:	bl	12b44 <sigaltstack@plt+0x1558>
   120a8:	ldr	r3, [sp, #24]
   120ac:	add	fp, fp, r8
   120b0:	add	r3, r3, r6
   120b4:	str	r3, [sp, #24]
   120b8:	b	11eb4 <sigaltstack@plt+0x8c8>
   120bc:	cmp	r6, #0
   120c0:	movne	r3, #0
   120c4:	mvneq	r3, #0
   120c8:	str	r3, [sp, #28]
   120cc:	b	11f14 <sigaltstack@plt+0x928>
   120d0:	add	r0, sp, #113	; 0x71
   120d4:	bl	113dc <puts@plt>
   120d8:	b	11eb4 <sigaltstack@plt+0x8c8>
   120dc:	add	r0, sp, #112	; 0x70
   120e0:	bl	12778 <sigaltstack@plt+0x118c>
   120e4:	ldr	r3, [pc, #516]	; 122f0 <sigaltstack@plt+0xd04>
   120e8:	add	r0, sp, #96	; 0x60
   120ec:	ldr	r2, [r3]
   120f0:	bl	12ba4 <sigaltstack@plt+0x15b8>
   120f4:	ldr	r2, [sp, #32]
   120f8:	add	r3, sp, #80	; 0x50
   120fc:	str	r2, [sp, #16]
   12100:	ldr	r2, [sp, #52]	; 0x34
   12104:	str	r3, [sp]
   12108:	str	r2, [sp, #4]
   1210c:	str	r8, [sp, #12]
   12110:	str	fp, [sp, #8]
   12114:	mov	r3, r6
   12118:	ldr	r2, [sp, #24]
   1211c:	ldr	r1, [sp, #48]	; 0x30
   12120:	add	r0, sp, #64	; 0x40
   12124:	bl	12c40 <sigaltstack@plt+0x1654>
   12128:	cmp	r0, #0
   1212c:	bne	120a8 <sigaltstack@plt+0xabc>
   12130:	mov	sl, r0
   12134:	b	11f20 <sigaltstack@plt+0x934>
   12138:	sub	r5, r5, #-1073741823	; 0xc0000001
   1213c:	ldr	r0, [pc, #580]	; 12388 <sigaltstack@plt+0xd9c>
   12140:	ldr	r1, [r4, r5, lsl #2]
   12144:	bl	12534 <sigaltstack@plt+0xf48>
   12148:	ldr	r3, [pc, #416]	; 122f0 <sigaltstack@plt+0xd04>
   1214c:	add	r0, sp, #96	; 0x60
   12150:	ldr	r2, [r3]
   12154:	bl	12ba4 <sigaltstack@plt+0x15b8>
   12158:	b	1208c <sigaltstack@plt+0xaa0>
   1215c:	ldr	r3, [r5, #24]
   12160:	mov	r1, #1
   12164:	ldr	r0, [sp, #112]	; 0x70
   12168:	ldr	r2, [r3]
   1216c:	bl	12a5c <sigaltstack@plt+0x1470>
   12170:	ldrb	r3, [r5, #1008]	; 0x3f0
   12174:	cmp	r3, #0
   12178:	beq	12184 <sigaltstack@plt+0xb98>
   1217c:	mov	r0, #0
   12180:	bl	12680 <sigaltstack@plt+0x1094>
   12184:	bl	126f8 <sigaltstack@plt+0x110c>
   12188:	ldrb	r0, [sp, #113]	; 0x71
   1218c:	bl	11454 <exit@plt>
   12190:	ldr	r0, [sp, #48]	; 0x30
   12194:	bl	127a8 <sigaltstack@plt+0x11bc>
   12198:	ldr	r0, [pc, #492]	; 1238c <sigaltstack@plt+0xda0>
   1219c:	bl	12778 <sigaltstack@plt+0x118c>
   121a0:	ldrb	r3, [r5, #1009]	; 0x3f1
   121a4:	cmp	r3, #0
   121a8:	beq	121b4 <sigaltstack@plt+0xbc8>
   121ac:	ldr	r0, [pc, #476]	; 12390 <sigaltstack@plt+0xda4>
   121b0:	bl	125d4 <sigaltstack@plt+0xfe8>
   121b4:	ldr	r0, [pc, #472]	; 12394 <sigaltstack@plt+0xda8>
   121b8:	bl	125d4 <sigaltstack@plt+0xfe8>
   121bc:	ldr	r0, [pc, #428]	; 12370 <sigaltstack@plt+0xd84>
   121c0:	bl	125d4 <sigaltstack@plt+0xfe8>
   121c4:	ldr	r3, [r8]
   121c8:	ldr	r0, [r4, r3, lsl #2]
   121cc:	bl	125d4 <sigaltstack@plt+0xfe8>
   121d0:	ldr	r3, [r8]
   121d4:	add	r3, r3, #1
   121d8:	ldr	r0, [r4, r3, lsl #2]
   121dc:	bl	125d4 <sigaltstack@plt+0xfe8>
   121e0:	mov	r0, #0
   121e4:	bl	125d4 <sigaltstack@plt+0xfe8>
   121e8:	ldr	r4, [r5, #24]
   121ec:	mov	r1, r4
   121f0:	ldr	r0, [r4]
   121f4:	bl	11298 <execvp@plt>
   121f8:	ldr	r0, [r4]
   121fc:	bl	127a8 <sigaltstack@plt+0x11bc>
   12200:	ldr	r0, [pc, #400]	; 12398 <sigaltstack@plt+0xdac>
   12204:	bl	127a8 <sigaltstack@plt+0x11bc>
   12208:	mov	r0, r7
   1220c:	bl	127a8 <sigaltstack@plt+0x11bc>
   12210:	ldr	r0, [sp, #52]	; 0x34
   12214:	bl	127a8 <sigaltstack@plt+0x11bc>
   12218:	ldr	r0, [pc, #380]	; 1239c <sigaltstack@plt+0xdb0>
   1221c:	bl	127a8 <sigaltstack@plt+0x11bc>
   12220:	ldr	r3, [r5, #868]	; 0x364
   12224:	ldr	r4, [pc, #340]	; 12380 <sigaltstack@plt+0xd94>
   12228:	cmp	r3, #1
   1222c:	beq	12240 <sigaltstack@plt+0xc54>
   12230:	mov	r1, r4
   12234:	mov	r0, #2
   12238:	str	fp, [r5, #1020]	; 0x3fc
   1223c:	bl	11364 <sigaction@plt>
   12240:	mov	r3, #0
   12244:	mov	r1, r4
   12248:	mov	r2, r3
   1224c:	mov	r0, #13
   12250:	str	r3, [r5, #1020]	; 0x3fc
   12254:	bl	11364 <sigaction@plt>
   12258:	ldr	r0, [sp, #112]	; 0x70
   1225c:	bl	115d4 <close@plt>
   12260:	ldr	r0, [sp, #116]	; 0x74
   12264:	cmp	r0, #1
   12268:	beq	1227c <sigaltstack@plt+0xc90>
   1226c:	mov	r1, #1
   12270:	bl	11310 <dup2@plt>
   12274:	ldr	r0, [sp, #116]	; 0x74
   12278:	bl	115d4 <close@plt>
   1227c:	ldr	r1, [r5, #24]
   12280:	ldr	r0, [r1]
   12284:	bl	11298 <execvp@plt>
   12288:	bl	1149c <__errno_location@plt>
   1228c:	ldr	r0, [r0]
   12290:	cmp	r0, #2
   12294:	moveq	r0, #127	; 0x7f
   12298:	movne	r0, #126	; 0x7e
   1229c:	bl	11280 <_exit@plt>
   122a0:	ldr	r0, [pc, #248]	; 123a0 <sigaltstack@plt+0xdb4>
   122a4:	bl	127a8 <sigaltstack@plt+0x11bc>
   122a8:	ldr	r0, [pc, #244]	; 123a4 <sigaltstack@plt+0xdb8>
   122ac:	bl	127a8 <sigaltstack@plt+0x11bc>
   122b0:	andeq	sl, r2, r8, ror r1
   122b4:	andeq	r8, r1, r8, asr #20
   122b8:	andeq	r8, r1, r8, asr r9
   122bc:	andeq	r8, r1, r4, asr #19
   122c0:	strdeq	r2, [r1], -r8
   122c4:	andeq	r8, r1, r0, ror r9
   122c8:	andeq	r8, r1, r4, lsr #9
   122cc:	andeq	r8, r1, r8, lsr fp
   122d0:	andeq	r8, r1, ip, lsr #22
   122d4:	andeq	sl, r2, r0, lsr #3
   122d8:	andeq	r8, r1, r8, lsl fp
   122dc:	andeq	sl, r2, r8, lsr #3
   122e0:	andeq	sl, r2, r0, ror r1
   122e4:	andeq	r8, r1, r8, ror r9
   122e8:	andeq	r8, r1, r4, ror #19
   122ec:	andeq	sl, r3, r8, asr #12
   122f0:	muleq	r2, ip, r1
   122f4:	andeq	r8, r1, ip, lsl #18
   122f8:	andeq	r8, r1, r8, lsl #20
   122fc:	andeq	r8, r1, ip, lsr r4
   12300:	muleq	r1, r8, sl
   12304:	andeq	r8, r1, r4, asr #20
   12308:	andeq	r8, r1, ip, asr #20
   1230c:	andeq	r8, r1, r0, lsr #21
   12310:	andeq	r8, r1, r8, asr #21
   12314:	andeq	r8, r1, r0, lsl fp
   12318:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1231c:	andeq	sl, r2, r4, ror r1
   12320:			; <UNDEFINED> instruction: 0x000189b4
   12324:	ldrdeq	r8, [r1], -r0
   12328:	andeq	r8, r1, r0, asr #19
   1232c:			; <UNDEFINED> instruction: 0x000189b0
   12330:	andeq	r8, r1, r0, lsr #19
   12334:	muleq	r1, r8, r9
   12338:	andeq	r8, r1, ip, lsl #19
   1233c:	andeq	r8, r1, r4, lsl #19
   12340:	andeq	r8, r1, r0, lsl #19
   12344:	andeq	r8, r1, r0, ror #19
   12348:	ldrdeq	r8, [r1], -ip
   1234c:	muleq	r1, ip, r9
   12350:	muleq	r1, r4, r9
   12354:	muleq	r1, r0, r9
   12358:	andeq	r8, r1, r8, lsl #19
   1235c:	andeq	sl, r2, r8, lsl #3
   12360:	andeq	r8, r1, r8, ror #22
   12364:	strdeq	r9, [r1], -r0
   12368:	andeq	r8, r1, r0, lsr #17
   1236c:	andeq	r8, r1, r8, asr #23
   12370:	muleq	r1, r8, fp
   12374:	andeq	r8, r1, r0, lsr #8
   12378:	andeq	sl, r2, r4, asr #3
   1237c:	ldrdeq	r2, [r1], -r0
   12380:	andeq	sl, r2, r4, lsr #11
   12384:	andeq	r0, r1, r1
   12388:	andeq	r8, r1, ip, asr #22
   1238c:	muleq	r1, ip, fp
   12390:	andeq	r8, r1, ip, ror fp
   12394:	muleq	r1, r4, fp
   12398:	strdeq	r8, [r1], -ip
   1239c:	andeq	r8, r1, r8, ror #23
   123a0:	strdeq	r8, [r1], -r4
   123a4:	andeq	r8, r1, r0, ror #23
   123a8:	mov	fp, #0
   123ac:	mov	lr, #0
   123b0:	pop	{r1}		; (ldr r1, [sp], #4)
   123b4:	mov	r2, sp
   123b8:	push	{r2}		; (str r2, [sp, #-4]!)
   123bc:	push	{r0}		; (str r0, [sp, #-4]!)
   123c0:	ldr	ip, [pc, #16]	; 123d8 <sigaltstack@plt+0xdec>
   123c4:	push	{ip}		; (str ip, [sp, #-4]!)
   123c8:	ldr	r0, [pc, #12]	; 123dc <sigaltstack@plt+0xdf0>
   123cc:	ldr	r3, [pc, #12]	; 123e0 <sigaltstack@plt+0xdf4>
   123d0:	bl	1140c <__libc_start_main@plt>
   123d4:	bl	115c8 <abort@plt>
   123d8:	andeq	r8, r1, r0, lsl r4
   123dc:	andeq	r1, r1, r4, lsl r6
   123e0:			; <UNDEFINED> instruction: 0x000183b0
   123e4:	ldr	r3, [pc, #20]	; 12400 <sigaltstack@plt+0xe14>
   123e8:	ldr	r2, [pc, #20]	; 12404 <sigaltstack@plt+0xe18>
   123ec:	add	r3, pc, r3
   123f0:	ldr	r2, [r3, r2]
   123f4:	cmp	r2, #0
   123f8:	bxeq	lr
   123fc:	b	11418 <__gmon_start__@plt>
   12400:	andeq	r7, r1, ip, lsl #24
   12404:	andeq	r0, r0, r4, ror #2
   12408:	ldr	r3, [pc, #28]	; 1242c <sigaltstack@plt+0xe40>
   1240c:	ldr	r0, [pc, #28]	; 12430 <sigaltstack@plt+0xe44>
   12410:	sub	r3, r3, r0
   12414:	cmp	r3, #6
   12418:	bxls	lr
   1241c:	ldr	r3, [pc, #16]	; 12434 <sigaltstack@plt+0xe48>
   12420:	cmp	r3, #0
   12424:	bxeq	lr
   12428:	bx	r3
   1242c:	andeq	sl, r2, r3, lsl #3
   12430:	andeq	sl, r2, r0, lsl #3
   12434:	andeq	r0, r0, r0
   12438:	ldr	r1, [pc, #36]	; 12464 <sigaltstack@plt+0xe78>
   1243c:	ldr	r0, [pc, #36]	; 12468 <sigaltstack@plt+0xe7c>
   12440:	sub	r1, r1, r0
   12444:	asr	r1, r1, #2
   12448:	add	r1, r1, r1, lsr #31
   1244c:	asrs	r1, r1, #1
   12450:	bxeq	lr
   12454:	ldr	r3, [pc, #16]	; 1246c <sigaltstack@plt+0xe80>
   12458:	cmp	r3, #0
   1245c:	bxeq	lr
   12460:	bx	r3
   12464:	andeq	sl, r2, r0, lsl #3
   12468:	andeq	sl, r2, r0, lsl #3
   1246c:	andeq	r0, r0, r0
   12470:	push	{r4, lr}
   12474:	ldr	r4, [pc, #24]	; 12494 <sigaltstack@plt+0xea8>
   12478:	ldrb	r3, [r4]
   1247c:	cmp	r3, #0
   12480:	popne	{r4, pc}
   12484:	bl	12408 <sigaltstack@plt+0xe1c>
   12488:	mov	r3, #1
   1248c:	strb	r3, [r4]
   12490:	pop	{r4, pc}
   12494:	andeq	sl, r2, r4, lsr #3
   12498:	ldr	r0, [pc, #40]	; 124c8 <sigaltstack@plt+0xedc>
   1249c:	ldr	r3, [r0]
   124a0:	cmp	r3, #0
   124a4:	bne	124ac <sigaltstack@plt+0xec0>
   124a8:	b	12438 <sigaltstack@plt+0xe4c>
   124ac:	ldr	r3, [pc, #24]	; 124cc <sigaltstack@plt+0xee0>
   124b0:	cmp	r3, #0
   124b4:	beq	124a8 <sigaltstack@plt+0xebc>
   124b8:	push	{r4, lr}
   124bc:	blx	r3
   124c0:	pop	{r4, lr}
   124c4:	b	12438 <sigaltstack@plt+0xe4c>
   124c8:	andeq	r9, r2, r4, lsl pc
   124cc:	andeq	r0, r0, r0
   124d0:	cmp	r0, #2
   124d4:	ldr	r3, [pc, #24]	; 124f4 <sigaltstack@plt+0xf08>
   124d8:	beq	124e4 <sigaltstack@plt+0xef8>
   124dc:	str	r0, [r3, #4]
   124e0:	bx	lr
   124e4:	ldrb	r2, [r3]
   124e8:	cmp	r2, #0
   124ec:	streq	r0, [r3, #4]
   124f0:	bx	lr
   124f4:	andeq	sl, r2, r8, lsr #3
   124f8:	push	{r4, lr}
   124fc:	ldr	r4, [pc, #44]	; 12530 <sigaltstack@plt+0xf44>
   12500:	ldr	r3, [r4, #8]
   12504:	cmp	r3, #0
   12508:	ble	12518 <sigaltstack@plt+0xf2c>
   1250c:	ldr	r0, [r4, #8]
   12510:	mov	r1, #13
   12514:	bl	1143c <kill@plt>
   12518:	ldr	r3, [r4, #12]
   1251c:	cmp	r3, #0
   12520:	popeq	{r4, pc}
   12524:	ldr	r0, [r4, #12]
   12528:	pop	{r4, lr}
   1252c:	b	11304 <unlink@plt>
   12530:	andeq	sl, r2, r8, lsr #3
   12534:	cmp	r0, #0
   12538:	push	{r4, lr}
   1253c:	beq	12568 <sigaltstack@plt+0xf7c>
   12540:	mov	r4, r1
   12544:	mov	r2, #5
   12548:	mov	r1, r0
   1254c:	mov	r0, #0
   12550:	bl	112ec <dcgettext@plt>
   12554:	mov	r1, #0
   12558:	mov	r3, r4
   1255c:	mov	r2, r0
   12560:	mov	r0, r1
   12564:	bl	113ac <error@plt>
   12568:	mov	r2, #5
   1256c:	ldr	r1, [pc, #28]	; 12590 <sigaltstack@plt+0xfa4>
   12570:	mov	r0, #0
   12574:	bl	112ec <dcgettext@plt>
   12578:	ldr	r3, [pc, #20]	; 12594 <sigaltstack@plt+0xfa8>
   1257c:	mov	r1, #0
   12580:	ldr	r3, [r3]
   12584:	mov	r2, r0
   12588:	mov	r0, #2
   1258c:	bl	113ac <error@plt>
   12590:	strdeq	r8, [r1], -r4
   12594:	andeq	sl, r3, r8, asr #12
   12598:	push	{lr}		; (str lr, [sp, #-4]!)
   1259c:	sub	sp, sp, #108	; 0x6c
   125a0:	mov	r1, r0
   125a4:	mov	r2, sp
   125a8:	mov	r0, #3
   125ac:	bl	115a4 <__xstat64@plt>
   125b0:	cmp	r0, #0
   125b4:	movne	r0, #0
   125b8:	ldreq	r0, [sp, #16]
   125bc:	andeq	r0, r0, #61440	; 0xf000
   125c0:	subeq	r0, r0, #16384	; 0x4000
   125c4:	clzeq	r0, r0
   125c8:	lsreq	r0, r0, #5
   125cc:	add	sp, sp, #108	; 0x6c
   125d0:	pop	{pc}		; (ldr pc, [sp], #4)
   125d4:	push	{r4, r5, r6, lr}
   125d8:	mov	r5, r0
   125dc:	ldr	r4, [pc, #104]	; 1264c <sigaltstack@plt+0x1060>
   125e0:	ldr	r3, [r4, #16]
   125e4:	ldr	r2, [r4, #20]
   125e8:	cmp	r3, r2
   125ec:	beq	12604 <sigaltstack@plt+0x1018>
   125f0:	ldr	r1, [r4, #24]
   125f4:	add	r2, r3, #1
   125f8:	str	r5, [r1, r3, lsl #2]
   125fc:	str	r2, [r4, #16]
   12600:	pop	{r4, r5, r6, pc}
   12604:	cmp	r3, #0
   12608:	beq	12638 <sigaltstack@plt+0x104c>
   1260c:	cmn	r3, #-268435454	; 0xf0000002
   12610:	lslls	r1, r3, #3
   12614:	lslls	r3, r3, #1
   12618:	strls	r3, [r4, #20]
   1261c:	bhi	12648 <sigaltstack@plt+0x105c>
   12620:	ldr	r0, [r4, #24]
   12624:	bl	155f4 <sigaltstack@plt+0x4008>
   12628:	ldr	r3, [r4, #16]
   1262c:	mov	r1, r0
   12630:	str	r0, [r4, #24]
   12634:	b	125f4 <sigaltstack@plt+0x1008>
   12638:	mov	r3, #16
   1263c:	str	r3, [r4, #20]
   12640:	mov	r1, #64	; 0x40
   12644:	b	12620 <sigaltstack@plt+0x1034>
   12648:	bl	15af0 <sigaltstack@plt+0x4504>
   1264c:	andeq	sl, r2, r8, lsr #3
   12650:	ldr	r3, [pc, #32]	; 12678 <sigaltstack@plt+0x108c>
   12654:	push	{r4, lr}
   12658:	mov	r2, #5
   1265c:	ldr	r4, [r3]
   12660:	ldr	r1, [pc, #20]	; 1267c <sigaltstack@plt+0x1090>
   12664:	mov	r0, #0
   12668:	bl	112ec <dcgettext@plt>
   1266c:	mov	r1, r4
   12670:	pop	{r4, lr}
   12674:	b	115b0 <fputs@plt>
   12678:	muleq	r2, r0, r1
   1267c:	andeq	r8, r1, ip, lsl r6
   12680:	push	{r4, r5, r6, r7, r8, lr}
   12684:	mov	r6, r0
   12688:	ldr	r4, [pc, #96]	; 126f0 <sigaltstack@plt+0x1104>
   1268c:	ldr	r5, [pc, #96]	; 126f4 <sigaltstack@plt+0x1108>
   12690:	add	r8, r4, #980	; 0x3d4
   12694:	mov	r7, #0
   12698:	b	126b8 <sigaltstack@plt+0x10cc>
   1269c:	ldr	r3, [r5]
   126a0:	cmp	r6, r3
   126a4:	beq	126c8 <sigaltstack@plt+0x10dc>
   126a8:	add	r4, r4, #140	; 0x8c
   126ac:	cmp	r4, r8
   126b0:	add	r5, r5, #4
   126b4:	beq	126ec <sigaltstack@plt+0x1100>
   126b8:	cmp	r6, #0
   126bc:	mov	r1, r4
   126c0:	mov	r2, r7
   126c4:	bne	1269c <sigaltstack@plt+0x10b0>
   126c8:	ldr	r3, [r4]
   126cc:	cmp	r3, #1
   126d0:	beq	126a8 <sigaltstack@plt+0x10bc>
   126d4:	ldr	r0, [r5]
   126d8:	add	r4, r4, #140	; 0x8c
   126dc:	bl	11364 <sigaction@plt>
   126e0:	cmp	r4, r8
   126e4:	add	r5, r5, #4
   126e8:	bne	126b8 <sigaltstack@plt+0x10cc>
   126ec:	pop	{r4, r5, r6, r7, r8, pc}
   126f0:	andeq	sl, r2, r4, asr #3
   126f4:	andeq	r8, r1, r0, lsr #8
   126f8:	push	{r4, r5, r6, lr}
   126fc:	ldr	r5, [pc, #56]	; 1273c <sigaltstack@plt+0x1150>
   12700:	ldr	r4, [r5, #4]
   12704:	cmp	r4, #0
   12708:	popeq	{r4, r5, r6, pc}
   1270c:	mov	r0, #0
   12710:	bl	124f8 <sigaltstack@plt+0xf0c>
   12714:	ldrb	r3, [r5, #1008]	; 0x3f0
   12718:	cmp	r3, #0
   1271c:	bne	12730 <sigaltstack@plt+0x1144>
   12720:	mov	r0, r4
   12724:	bl	11214 <raise@plt>
   12728:	mov	r0, #2
   1272c:	bl	11454 <exit@plt>
   12730:	mov	r0, r4
   12734:	bl	12680 <sigaltstack@plt+0x1094>
   12738:	b	12720 <sigaltstack@plt+0x1134>
   1273c:	andeq	sl, r2, r8, lsr #3
   12740:	push	{r4, lr}
   12744:	mov	r0, #0
   12748:	bl	124f8 <sigaltstack@plt+0xf0c>
   1274c:	ldr	r3, [pc, #32]	; 12774 <sigaltstack@plt+0x1188>
   12750:	ldrb	r3, [r3, #1008]	; 0x3f0
   12754:	cmp	r3, #0
   12758:	bne	12768 <sigaltstack@plt+0x117c>
   1275c:	bl	126f8 <sigaltstack@plt+0x110c>
   12760:	mov	r0, #2
   12764:	bl	11454 <exit@plt>
   12768:	mov	r0, #0
   1276c:	bl	12680 <sigaltstack@plt+0x1094>
   12770:	b	1275c <sigaltstack@plt+0x1170>
   12774:	andeq	sl, r2, r8, lsr #3
   12778:	mov	r1, r0
   1277c:	push	{r4, lr}
   12780:	mov	r2, #5
   12784:	mov	r0, #0
   12788:	bl	112ec <dcgettext@plt>
   1278c:	mov	r1, #0
   12790:	ldr	r2, [pc, #12]	; 127a4 <sigaltstack@plt+0x11b8>
   12794:	mov	r3, r0
   12798:	mov	r0, r1
   1279c:	bl	113ac <error@plt>
   127a0:	bl	12740 <sigaltstack@plt+0x1154>
   127a4:	andeq	r8, r1, ip, lsl #15
   127a8:	push	{r4, lr}
   127ac:	mov	r5, r0
   127b0:	bl	1149c <__errno_location@plt>
   127b4:	ldr	r4, [r0]
   127b8:	bl	126f8 <sigaltstack@plt+0x110c>
   127bc:	mov	r3, r5
   127c0:	mov	r1, r4
   127c4:	ldr	r2, [pc, #8]	; 127d4 <sigaltstack@plt+0x11e8>
   127c8:	mov	r0, #0
   127cc:	bl	113ac <error@plt>
   127d0:	bl	12740 <sigaltstack@plt+0x1154>
   127d4:	andeq	r8, r1, ip, lsl #15
   127d8:	push	{r4, lr}
   127dc:	bl	114cc <fclose@plt>
   127e0:	cmp	r0, #0
   127e4:	popeq	{r4, pc}
   127e8:	ldr	r0, [pc]	; 127f0 <sigaltstack@plt+0x1204>
   127ec:	bl	127a8 <sigaltstack@plt+0x11bc>
   127f0:	muleq	r1, r0, r7
   127f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127f8:	mov	r4, r1
   127fc:	ldr	r1, [pc, #184]	; 128bc <sigaltstack@plt+0x12d0>
   12800:	mov	r6, r2
   12804:	mov	r5, r0
   12808:	bl	11238 <strcmp@plt>
   1280c:	cmp	r0, #0
   12810:	beq	128b4 <sigaltstack@plt+0x12c8>
   12814:	cmp	r4, #0
   12818:	beq	128ac <sigaltstack@plt+0x12c0>
   1281c:	mov	r0, r6
   12820:	bl	13334 <sigaltstack@plt+0x1d48>
   12824:	mov	r7, r0
   12828:	mov	r0, r5
   1282c:	bl	1146c <strlen@plt>
   12830:	mov	r6, r0
   12834:	mov	r0, r7
   12838:	bl	13390 <sigaltstack@plt+0x1da4>
   1283c:	mov	r8, r0
   12840:	mov	r0, r5
   12844:	bl	13334 <sigaltstack@plt+0x1d48>
   12848:	ldrb	r4, [r0]
   1284c:	cmp	r4, #0
   12850:	beq	12864 <sigaltstack@plt+0x1278>
   12854:	add	r3, r5, r6
   12858:	ldrb	r4, [r3, #-1]
   1285c:	subs	r4, r4, #47	; 0x2f
   12860:	movne	r4, #1
   12864:	add	r4, r4, r6
   12868:	add	sl, r8, r4
   1286c:	add	r0, sl, #1
   12870:	bl	155cc <sigaltstack@plt+0x3fe0>
   12874:	mov	r2, r6
   12878:	mov	r1, r5
   1287c:	mov	r9, r0
   12880:	bl	1128c <memcpy@plt>
   12884:	mov	r3, #47	; 0x2f
   12888:	add	r0, r9, r4
   1288c:	mov	r2, r8
   12890:	mov	r1, r7
   12894:	strb	r3, [r9, r6]
   12898:	bl	1128c <memcpy@plt>
   1289c:	mov	r3, #0
   128a0:	strb	r3, [r9, sl]
   128a4:	mov	r0, r9
   128a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128ac:	mov	r0, r5
   128b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128b4:	ldr	r0, [pc, #4]	; 128c0 <sigaltstack@plt+0x12d4>
   128b8:	bl	12778 <sigaltstack@plt+0x118c>
   128bc:	muleq	r1, r8, r7
   128c0:	muleq	r1, ip, r7
   128c4:	ldr	r3, [pc, #56]	; 12904 <sigaltstack@plt+0x1318>
   128c8:	push	{r4, lr}
   128cc:	ldr	r0, [r3]
   128d0:	ldr	r3, [r0]
   128d4:	ands	r4, r3, #32
   128d8:	bne	128fc <sigaltstack@plt+0x1310>
   128dc:	bl	114cc <fclose@plt>
   128e0:	cmp	r0, #0
   128e4:	popeq	{r4, pc}
   128e8:	mov	r2, #5
   128ec:	ldr	r1, [pc, #20]	; 12908 <sigaltstack@plt+0x131c>
   128f0:	mov	r0, r4
   128f4:	bl	112ec <dcgettext@plt>
   128f8:	bl	127a8 <sigaltstack@plt+0x11bc>
   128fc:	ldr	r0, [pc, #8]	; 1290c <sigaltstack@plt+0x1320>
   12900:	bl	12778 <sigaltstack@plt+0x118c>
   12904:	muleq	r2, ip, r1
   12908:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1290c:	andeq	r8, r1, r8, asr #15
   12910:	ldr	r3, [r0]
   12914:	tst	r3, #32
   12918:	bne	12920 <sigaltstack@plt+0x1334>
   1291c:	bx	lr
   12920:	push	{r4, lr}
   12924:	mov	r2, #5
   12928:	ldr	r1, [pc, #8]	; 12938 <sigaltstack@plt+0x134c>
   1292c:	mov	r0, #0
   12930:	bl	112ec <dcgettext@plt>
   12934:	bl	127a8 <sigaltstack@plt+0x11bc>
   12938:	andeq	r8, r1, r8, ror #15
   1293c:	push	{r4, lr}
   12940:	mov	r4, r1
   12944:	mov	r3, r2
   12948:	mov	r1, #1
   1294c:	mov	r2, r4
   12950:	bl	112c8 <fwrite_unlocked@plt>
   12954:	cmp	r4, r0
   12958:	popeq	{r4, pc}
   1295c:	mov	r2, #5
   12960:	ldr	r1, [pc, #8]	; 12970 <sigaltstack@plt+0x1384>
   12964:	mov	r0, #0
   12968:	bl	112ec <dcgettext@plt>
   1296c:	bl	127a8 <sigaltstack@plt+0x11bc>
   12970:	andeq	r8, r1, r8, asr #15
   12974:	push	{r4, r5, r6, lr}
   12978:	bl	11448 <__ctype_b_loc@plt>
   1297c:	ldr	r4, [pc, #96]	; 129e4 <sigaltstack@plt+0x13f8>
   12980:	mov	r5, r0
   12984:	b	129b4 <sigaltstack@plt+0x13c8>
   12988:	add	r2, r3, #1
   1298c:	str	r2, [r0, #4]
   12990:	ldrb	r0, [r3]
   12994:	ldr	r2, [r5]
   12998:	lsl	r3, r0, #1
   1299c:	ldrh	r3, [r2, r3]
   129a0:	tst	r3, #8192	; 0x2000
   129a4:	beq	129d0 <sigaltstack@plt+0x13e4>
   129a8:	cmp	r0, #10
   129ac:	beq	129d0 <sigaltstack@plt+0x13e4>
   129b0:	bl	126f8 <sigaltstack@plt+0x110c>
   129b4:	ldr	r0, [r4]
   129b8:	ldr	r3, [r0, #4]
   129bc:	ldr	r2, [r0, #8]
   129c0:	cmp	r3, r2
   129c4:	bcc	12988 <sigaltstack@plt+0x139c>
   129c8:	bl	11508 <__uflow@plt>
   129cc:	b	12994 <sigaltstack@plt+0x13a8>
   129d0:	ldr	r3, [r4]
   129d4:	ldr	r3, [r3]
   129d8:	tst	r3, #32
   129dc:	popeq	{r4, r5, r6, pc}
   129e0:	bl	115f8 <sigaltstack@plt+0xc>
   129e4:	muleq	r2, r8, r1
   129e8:	push	{r4, lr}
   129ec:	ldr	r4, [pc, #100]	; 12a58 <sigaltstack@plt+0x146c>
   129f0:	ldr	r0, [r4]
   129f4:	ldr	r1, [r0, #8]
   129f8:	ldr	r3, [r0, #4]
   129fc:	cmp	r1, r3
   12a00:	bls	12a24 <sigaltstack@plt+0x1438>
   12a04:	add	r2, r3, #1
   12a08:	str	r2, [r0, #4]
   12a0c:	ldrb	r3, [r3]
   12a10:	cmp	r3, #10
   12a14:	beq	12a34 <sigaltstack@plt+0x1448>
   12a18:	mov	r3, r2
   12a1c:	cmp	r1, r3
   12a20:	bhi	12a04 <sigaltstack@plt+0x1418>
   12a24:	bl	11508 <__uflow@plt>
   12a28:	cmp	r0, #10
   12a2c:	cmnne	r0, #1
   12a30:	bne	12a48 <sigaltstack@plt+0x145c>
   12a34:	ldr	r3, [r4]
   12a38:	ldr	r3, [r3]
   12a3c:	tst	r3, #32
   12a40:	popeq	{r4, pc}
   12a44:	bl	115f8 <sigaltstack@plt+0xc>
   12a48:	ldr	r0, [r4]
   12a4c:	ldr	r2, [r0, #4]
   12a50:	ldr	r1, [r0, #8]
   12a54:	b	12a18 <sigaltstack@plt+0x142c>
   12a58:	muleq	r2, r8, r1
   12a5c:	tst	r0, #127	; 0x7f
   12a60:	push	{r4, r5, lr}
   12a64:	sub	sp, sp, #12
   12a68:	bne	12a84 <sigaltstack@plt+0x1498>
   12a6c:	asr	r0, r0, #8
   12a70:	uxtb	r4, r0
   12a74:	cmp	r4, r1
   12a78:	bgt	12ac0 <sigaltstack@plt+0x14d4>
   12a7c:	add	sp, sp, #12
   12a80:	pop	{r4, r5, pc}
   12a84:	cmn	r1, #-2147483647	; 0x80000001
   12a88:	beq	12a7c <sigaltstack@plt+0x1490>
   12a8c:	ldr	r1, [pc, #76]	; 12ae0 <sigaltstack@plt+0x14f4>
   12a90:	mvn	r4, #-2147483648	; 0x80000000
   12a94:	mov	r5, r2
   12a98:	mov	r0, #0
   12a9c:	mov	r2, #5
   12aa0:	bl	112ec <dcgettext@plt>
   12aa4:	mov	r1, #0
   12aa8:	mov	r3, r5
   12aac:	str	r4, [sp]
   12ab0:	mov	r2, r0
   12ab4:	mov	r0, r1
   12ab8:	bl	113ac <error@plt>
   12abc:	bl	12740 <sigaltstack@plt+0x1154>
   12ac0:	cmp	r4, #126	; 0x7e
   12ac4:	ldreq	r1, [pc, #24]	; 12ae4 <sigaltstack@plt+0x14f8>
   12ac8:	beq	12a94 <sigaltstack@plt+0x14a8>
   12acc:	ldr	r3, [pc, #20]	; 12ae8 <sigaltstack@plt+0x14fc>
   12ad0:	cmp	r4, #127	; 0x7f
   12ad4:	ldr	r1, [pc, #16]	; 12aec <sigaltstack@plt+0x1500>
   12ad8:	moveq	r1, r3
   12adc:	b	12a94 <sigaltstack@plt+0x14a8>
   12ae0:	andeq	r8, r1, r8, asr #16
   12ae4:	strdeq	r8, [r1], -r4
   12ae8:	andeq	r8, r1, r4, lsr #16
   12aec:	andeq	r8, r1, r8, ror #16
   12af0:	push	{r4, r5, r6, lr}
   12af4:	mov	r2, #65536	; 0x10000
   12af8:	ldr	r6, [r0]
   12afc:	mov	r4, r0
   12b00:	mov	r3, r6
   12b04:	ldr	r0, [r0, #8]
   12b08:	mov	r1, #1
   12b0c:	bl	11598 <fread_unlocked@plt>
   12b10:	subs	r5, r0, #0
   12b14:	bne	12b20 <sigaltstack@plt+0x1534>
   12b18:	mov	r0, r6
   12b1c:	bl	12910 <sigaltstack@plt+0x1324>
   12b20:	ldr	r3, [r4, #8]
   12b24:	mov	r2, #10
   12b28:	add	r1, r3, r5
   12b2c:	str	r3, [r4, #4]
   12b30:	str	r1, [r4, #12]
   12b34:	strb	r2, [r3, r5]
   12b38:	bl	126f8 <sigaltstack@plt+0x110c>
   12b3c:	mov	r0, r5
   12b40:	pop	{r4, r5, r6, pc}
   12b44:	push	{r4, r5, r6, r7, r8, lr}
   12b48:	subs	r5, r1, #0
   12b4c:	popeq	{r4, r5, r6, r7, r8, pc}
   12b50:	mov	r4, r0
   12b54:	ldr	r6, [r0, #12]
   12b58:	mov	r7, #10
   12b5c:	b	12b6c <sigaltstack@plt+0x1580>
   12b60:	subs	r5, r5, #1
   12b64:	str	r3, [r4, #4]
   12b68:	beq	12ba0 <sigaltstack@plt+0x15b4>
   12b6c:	ldr	r0, [r4, #4]
   12b70:	mov	r1, r7
   12b74:	bl	11340 <rawmemchr@plt>
   12b78:	cmp	r0, r6
   12b7c:	add	r3, r0, #1
   12b80:	str	r0, [r4, #4]
   12b84:	bne	12b60 <sigaltstack@plt+0x1574>
   12b88:	mov	r0, r4
   12b8c:	bl	12af0 <sigaltstack@plt+0x1504>
   12b90:	cmp	r0, #0
   12b94:	popeq	{r4, r5, r6, r7, r8, pc}
   12b98:	ldr	r6, [r4, #12]
   12b9c:	b	12b6c <sigaltstack@plt+0x1580>
   12ba0:	pop	{r4, r5, r6, r7, r8, pc}
   12ba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ba8:	subs	r4, r1, #0
   12bac:	mov	r8, r2
   12bb0:	ldr	r7, [r0, #4]
   12bb4:	beq	12c38 <sigaltstack@plt+0x164c>
   12bb8:	mov	r5, r0
   12bbc:	ldr	r6, [r0, #12]
   12bc0:	mov	r9, #10
   12bc4:	mov	r0, r7
   12bc8:	b	12bd8 <sigaltstack@plt+0x15ec>
   12bcc:	subs	r4, r4, #1
   12bd0:	str	r0, [r5, #4]
   12bd4:	beq	12c24 <sigaltstack@plt+0x1638>
   12bd8:	mov	r1, r9
   12bdc:	bl	11340 <rawmemchr@plt>
   12be0:	mov	r3, r0
   12be4:	cmp	r0, r6
   12be8:	str	r3, [r5, #4]
   12bec:	add	r0, r0, #1
   12bf0:	bne	12bcc <sigaltstack@plt+0x15e0>
   12bf4:	sub	r1, r6, r7
   12bf8:	mov	r0, r7
   12bfc:	mov	r2, r8
   12c00:	bl	1293c <sigaltstack@plt+0x1350>
   12c04:	mov	r0, r5
   12c08:	bl	12af0 <sigaltstack@plt+0x1504>
   12c0c:	cmp	r0, #0
   12c10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c14:	ldr	r7, [r5, #4]
   12c18:	ldr	r6, [r5, #12]
   12c1c:	mov	r0, r7
   12c20:	b	12bd8 <sigaltstack@plt+0x15ec>
   12c24:	sub	r1, r0, r7
   12c28:	mov	r2, r8
   12c2c:	mov	r0, r7
   12c30:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c34:	b	1293c <sigaltstack@plt+0x1350>
   12c38:	mov	r1, r4
   12c3c:	b	12c28 <sigaltstack@plt+0x163c>
   12c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c44:	sub	sp, sp, #65536	; 0x10000
   12c48:	ldr	r4, [pc, #1696]	; 132f0 <sigaltstack@plt+0x1d04>
   12c4c:	ldr	r8, [pc, #1696]	; 132f4 <sigaltstack@plt+0x1d08>
   12c50:	sub	sp, sp, #28
   12c54:	mov	sl, r0
   12c58:	mov	r9, r3
   12c5c:	mov	r6, #37	; 0x25
   12c60:	str	r1, [sp, #8]
   12c64:	str	r2, [sp, #12]
   12c68:	ldr	r0, [r4]
   12c6c:	ldr	r3, [r0, #20]
   12c70:	ldr	r2, [r0, #24]
   12c74:	cmp	r3, r2
   12c78:	addcc	r2, r3, #1
   12c7c:	strcc	r2, [r0, #20]
   12c80:	strbcc	r6, [r3]
   12c84:	bcs	13008 <sigaltstack@plt+0x1a1c>
   12c88:	ldr	r0, [r4]
   12c8c:	bl	11358 <fflush_unlocked@plt>
   12c90:	subs	r5, r0, #0
   12c94:	bne	13018 <sigaltstack@plt+0x1a2c>
   12c98:	bl	12974 <sigaltstack@plt+0x1388>
   12c9c:	cmp	r0, #101	; 0x65
   12ca0:	mov	fp, r0
   12ca4:	beq	12e64 <sigaltstack@plt+0x1878>
   12ca8:	bgt	12cf4 <sigaltstack@plt+0x1708>
   12cac:	cmp	r0, #10
   12cb0:	beq	12cec <sigaltstack@plt+0x1700>
   12cb4:	bgt	1302c <sigaltstack@plt+0x1a40>
   12cb8:	cmn	r0, #1
   12cbc:	bne	12ce8 <sigaltstack@plt+0x16fc>
   12cc0:	ldr	r3, [r8]
   12cc4:	ldr	r3, [r3]
   12cc8:	tst	r3, #16
   12ccc:	beq	12ce8 <sigaltstack@plt+0x16fc>
   12cd0:	mov	r0, r5
   12cd4:	add	sp, sp, #65536	; 0x10000
   12cd8:	add	sp, sp, #28
   12cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ce0:	cmp	r0, #118	; 0x76
   12ce4:	beq	12d0c <sigaltstack@plt+0x1720>
   12ce8:	bl	129e8 <sigaltstack@plt+0x13fc>
   12cec:	bl	12650 <sigaltstack@plt+0x1064>
   12cf0:	b	12c68 <sigaltstack@plt+0x167c>
   12cf4:	cmp	r0, #115	; 0x73
   12cf8:	bgt	12ce0 <sigaltstack@plt+0x16f4>
   12cfc:	cmp	r0, #113	; 0x71
   12d00:	bge	12d0c <sigaltstack@plt+0x1720>
   12d04:	cmp	r0, #108	; 0x6c
   12d08:	bne	12ce8 <sigaltstack@plt+0x16fc>
   12d0c:	bl	12974 <sigaltstack@plt+0x1388>
   12d10:	cmp	r0, #10
   12d14:	bne	12e58 <sigaltstack@plt+0x186c>
   12d18:	sub	fp, fp, #49	; 0x31
   12d1c:	cmp	fp, #69	; 0x45
   12d20:	ldrls	pc, [pc, fp, lsl #2]
   12d24:	b	12cec <sigaltstack@plt+0x1700>
   12d28:	andeq	r3, r1, r4, lsr #1
   12d2c:	andeq	r3, r1, r8, rrx
   12d30:	andeq	r2, r1, ip, ror #25
   12d34:	andeq	r2, r1, ip, ror #25
   12d38:	andeq	r2, r1, ip, ror #25
   12d3c:	andeq	r2, r1, ip, ror #25
   12d40:	andeq	r2, r1, ip, ror #25
   12d44:	andeq	r2, r1, ip, ror #25
   12d48:	andeq	r2, r1, ip, ror #25
   12d4c:	andeq	r2, r1, ip, ror #25
   12d50:	andeq	r2, r1, ip, ror #25
   12d54:	andeq	r2, r1, ip, ror #25
   12d58:	andeq	r2, r1, ip, ror #25
   12d5c:	andeq	r2, r1, ip, ror #25
   12d60:	andeq	r2, r1, ip, ror #25
   12d64:	andeq	r2, r1, ip, ror #25
   12d68:	andeq	r2, r1, ip, ror #25
   12d6c:	andeq	r2, r1, ip, ror #25
   12d70:	andeq	r2, r1, ip, ror #25
   12d74:	andeq	r2, r1, ip, ror #25
   12d78:	andeq	r2, r1, ip, ror #25
   12d7c:	andeq	r2, r1, ip, ror #25
   12d80:	andeq	r2, r1, ip, ror #25
   12d84:	andeq	r2, r1, ip, ror #25
   12d88:	andeq	r2, r1, ip, ror #25
   12d8c:	andeq	r2, r1, ip, ror #25
   12d90:	andeq	r2, r1, ip, ror #25
   12d94:	andeq	r2, r1, ip, ror #25
   12d98:	andeq	r2, r1, ip, ror #25
   12d9c:	andeq	r2, r1, ip, ror #25
   12da0:	andeq	r2, r1, ip, ror #25
   12da4:	andeq	r2, r1, ip, ror #25
   12da8:	andeq	r2, r1, ip, ror #25
   12dac:	andeq	r2, r1, ip, ror #25
   12db0:	andeq	r2, r1, ip, ror #25
   12db4:	andeq	r2, r1, ip, ror #25
   12db8:	andeq	r2, r1, ip, ror #25
   12dbc:	andeq	r2, r1, ip, ror #25
   12dc0:	andeq	r2, r1, ip, ror #25
   12dc4:	andeq	r2, r1, ip, ror #25
   12dc8:	andeq	r2, r1, ip, ror #25
   12dcc:	andeq	r2, r1, ip, ror #25
   12dd0:	andeq	r2, r1, ip, ror #25
   12dd4:	andeq	r2, r1, ip, ror #25
   12dd8:	andeq	r2, r1, ip, ror #25
   12ddc:	andeq	r2, r1, ip, ror #25
   12de0:	andeq	r2, r1, ip, ror #25
   12de4:	andeq	r2, r1, ip, ror #25
   12de8:	andeq	r2, r1, ip, ror #25
   12dec:	andeq	r2, r1, ip, ror #25
   12df0:	andeq	r2, r1, ip, ror #25
   12df4:	andeq	r2, r1, ip, ror #25
   12df8:	andeq	r2, r1, r0, lsl #29
   12dfc:	andeq	r2, r1, ip, ror #25
   12e00:	andeq	r2, r1, ip, ror #25
   12e04:	andeq	r2, r1, ip, ror #25
   12e08:	andeq	r2, r1, ip, ror #25
   12e0c:	andeq	r2, r1, ip, ror #25
   12e10:	andeq	r2, r1, ip, ror #25
   12e14:	andeq	r3, r1, r4, lsr #1
   12e18:	andeq	r2, r1, ip, ror #25
   12e1c:	andeq	r2, r1, ip, ror #25
   12e20:	andeq	r2, r1, ip, ror #25
   12e24:	andeq	r2, r1, ip, ror #25
   12e28:			; <UNDEFINED> instruction: 0x000132b4
   12e2c:	andeq	r3, r1, r8, rrx
   12e30:	strdeq	r3, [r1], -r0
   12e34:	andeq	r2, r1, ip, ror #25
   12e38:	andeq	r2, r1, ip, ror #25
   12e3c:	andeq	r3, r1, r0, ror #1
   12e40:	cmp	r0, #108	; 0x6c
   12e44:	beq	13050 <sigaltstack@plt+0x1a64>
   12e48:	cmp	r0, #114	; 0x72
   12e4c:	beq	13050 <sigaltstack@plt+0x1a64>
   12e50:	cmp	r0, #100	; 0x64
   12e54:	beq	13050 <sigaltstack@plt+0x1a64>
   12e58:	bl	12650 <sigaltstack@plt+0x1064>
   12e5c:	bl	129e8 <sigaltstack@plt+0x13fc>
   12e60:	b	12c68 <sigaltstack@plt+0x167c>
   12e64:	bl	12974 <sigaltstack@plt+0x1388>
   12e68:	cmp	r0, #98	; 0x62
   12e6c:	mov	r7, r0
   12e70:	beq	13050 <sigaltstack@plt+0x1a64>
   12e74:	bgt	12e40 <sigaltstack@plt+0x1854>
   12e78:	cmp	r0, #10
   12e7c:	bne	13040 <sigaltstack@plt+0x1a54>
   12e80:	ldr	r5, [pc, #1136]	; 132f8 <sigaltstack@plt+0x1d0c>
   12e84:	ldr	r3, [r5, #12]
   12e88:	cmp	r3, #0
   12e8c:	beq	13204 <sigaltstack@plt+0x1c18>
   12e90:	ldr	r0, [r5, #12]
   12e94:	ldr	r1, [pc, #1120]	; 132fc <sigaltstack@plt+0x1d10>
   12e98:	bl	11574 <fopen64@plt>
   12e9c:	str	r0, [r5, #1012]	; 0x3f4
   12ea0:	cmp	r0, #0
   12ea4:	beq	132bc <sigaltstack@plt+0x1cd0>
   12ea8:	cmp	r7, #98	; 0x62
   12eac:	beq	12ec4 <sigaltstack@plt+0x18d8>
   12eb0:	ble	13100 <sigaltstack@plt+0x1b14>
   12eb4:	cmp	r7, #100	; 0x64
   12eb8:	bne	1313c <sigaltstack@plt+0x1b50>
   12ebc:	cmp	r9, #0
   12ec0:	bne	131d4 <sigaltstack@plt+0x1be8>
   12ec4:	mov	r2, r0
   12ec8:	mov	r1, r9
   12ecc:	mov	r0, sl
   12ed0:	bl	12ba4 <sigaltstack@plt+0x15b8>
   12ed4:	cmp	r7, #98	; 0x62
   12ed8:	beq	12efc <sigaltstack@plt+0x1910>
   12edc:	ble	13170 <sigaltstack@plt+0x1b84>
   12ee0:	cmp	r7, #100	; 0x64
   12ee4:	bne	13148 <sigaltstack@plt+0x1b5c>
   12ee8:	add	r3, sp, #65536	; 0x10000
   12eec:	add	r3, r3, #76	; 0x4c
   12ef0:	ldr	r3, [r3]
   12ef4:	cmp	r3, #0
   12ef8:	bne	1317c <sigaltstack@plt+0x1b90>
   12efc:	add	r3, sp, #65536	; 0x10000
   12f00:	add	r3, r3, #76	; 0x4c
   12f04:	ldr	r1, [r3]
   12f08:	add	r3, sp, #65536	; 0x10000
   12f0c:	add	r3, r3, #64	; 0x40
   12f10:	ldr	r2, [r5, #1012]	; 0x3f4
   12f14:	ldr	r0, [r3]
   12f18:	bl	12ba4 <sigaltstack@plt+0x15b8>
   12f1c:	ldr	r7, [pc, #988]	; 13300 <sigaltstack@plt+0x1d14>
   12f20:	ldr	r0, [r5, #1012]	; 0x3f4
   12f24:	bl	127d8 <sigaltstack@plt+0x11ec>
   12f28:	mov	r3, #1
   12f2c:	strb	r3, [r5]
   12f30:	bl	126f8 <sigaltstack@plt+0x110c>
   12f34:	ldr	r2, [r7]
   12f38:	ldr	r3, [r5, #12]
   12f3c:	mov	r4, #0
   12f40:	str	r2, [sp, #24]
   12f44:	str	r3, [sp, #28]
   12f48:	str	r4, [sp, #32]
   12f4c:	bl	11538 <fork@plt>
   12f50:	subs	r6, r0, #0
   12f54:	beq	132cc <sigaltstack@plt+0x1ce0>
   12f58:	bge	12f74 <sigaltstack@plt+0x1988>
   12f5c:	b	132c4 <sigaltstack@plt+0x1cd8>
   12f60:	bl	1149c <__errno_location@plt>
   12f64:	ldr	r3, [r0]
   12f68:	cmp	r3, #4
   12f6c:	bne	132a4 <sigaltstack@plt+0x1cb8>
   12f70:	bl	126f8 <sigaltstack@plt+0x110c>
   12f74:	mov	r2, r4
   12f78:	add	r1, sp, #20
   12f7c:	mov	r0, r6
   12f80:	bl	11388 <waitpid@plt>
   12f84:	cmp	r0, #0
   12f88:	blt	12f60 <sigaltstack@plt+0x1974>
   12f8c:	mov	r3, #0
   12f90:	ldr	r2, [r7]
   12f94:	mov	r1, r3
   12f98:	ldr	r0, [sp, #20]
   12f9c:	strb	r3, [r5]
   12fa0:	bl	12a5c <sigaltstack@plt+0x1470>
   12fa4:	ldr	r6, [r5, #12]
   12fa8:	ldr	r1, [pc, #852]	; 13304 <sigaltstack@plt+0x1d18>
   12fac:	mov	r0, r6
   12fb0:	bl	11574 <fopen64@plt>
   12fb4:	subs	r4, r0, #0
   12fb8:	movne	r8, #65536	; 0x10000
   12fbc:	movne	r7, #1
   12fc0:	strne	r4, [r5, #1012]	; 0x3f4
   12fc4:	beq	132ac <sigaltstack@plt+0x1cc0>
   12fc8:	mov	r3, r4
   12fcc:	mov	r2, r8
   12fd0:	mov	r1, r7
   12fd4:	add	r0, sp, #24
   12fd8:	bl	11598 <fread_unlocked@plt>
   12fdc:	subs	r6, r0, #0
   12fe0:	bne	13118 <sigaltstack@plt+0x1b2c>
   12fe4:	mov	r0, r4
   12fe8:	bl	12910 <sigaltstack@plt+0x1324>
   12fec:	ldr	r0, [r5, #1012]	; 0x3f4
   12ff0:	bl	127d8 <sigaltstack@plt+0x11ec>
   12ff4:	mov	r5, #1
   12ff8:	mov	r0, r5
   12ffc:	add	sp, sp, #65536	; 0x10000
   13000:	add	sp, sp, #28
   13004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13008:	mov	r1, r6
   1300c:	bl	11514 <__overflow@plt>
   13010:	cmp	r0, #37	; 0x25
   13014:	beq	12c88 <sigaltstack@plt+0x169c>
   13018:	mov	r2, #5
   1301c:	ldr	r1, [pc, #740]	; 13308 <sigaltstack@plt+0x1d1c>
   13020:	mov	r0, #0
   13024:	bl	112ec <dcgettext@plt>
   13028:	bl	127a8 <sigaltstack@plt+0x11bc>
   1302c:	sub	r3, r0, #49	; 0x31
   13030:	cmp	r3, #1
   13034:	bls	12d0c <sigaltstack@plt+0x1720>
   13038:	bl	129e8 <sigaltstack@plt+0x13fc>
   1303c:	b	12cec <sigaltstack@plt+0x1700>
   13040:	blt	12e58 <sigaltstack@plt+0x186c>
   13044:	sub	r3, r0, #49	; 0x31
   13048:	cmp	r3, #1
   1304c:	bhi	12e58 <sigaltstack@plt+0x186c>
   13050:	bl	12974 <sigaltstack@plt+0x1388>
   13054:	cmp	r0, #10
   13058:	beq	12e80 <sigaltstack@plt+0x1894>
   1305c:	bl	12650 <sigaltstack@plt+0x1064>
   13060:	bl	129e8 <sigaltstack@plt+0x13fc>
   13064:	b	12c68 <sigaltstack@plt+0x167c>
   13068:	add	r3, sp, #65536	; 0x10000
   1306c:	add	r3, r3, #80	; 0x50
   13070:	ldr	r2, [r3]
   13074:	add	r3, sp, #65536	; 0x10000
   13078:	add	r3, r3, #76	; 0x4c
   1307c:	ldr	r1, [r3]
   13080:	add	r3, sp, #65536	; 0x10000
   13084:	add	r3, r3, #64	; 0x40
   13088:	ldr	r0, [r3]
   1308c:	bl	12ba4 <sigaltstack@plt+0x15b8>
   13090:	mov	r1, r9
   13094:	mov	r0, sl
   13098:	bl	12b44 <sigaltstack@plt+0x1558>
   1309c:	mov	r5, #1
   130a0:	b	12cd0 <sigaltstack@plt+0x16e4>
   130a4:	add	r3, sp, #65536	; 0x10000
   130a8:	add	r3, r3, #80	; 0x50
   130ac:	mov	r1, r9
   130b0:	ldr	r2, [r3]
   130b4:	mov	r0, sl
   130b8:	bl	12ba4 <sigaltstack@plt+0x15b8>
   130bc:	add	r3, sp, #65536	; 0x10000
   130c0:	add	r3, r3, #76	; 0x4c
   130c4:	ldr	r1, [r3]
   130c8:	add	r3, sp, #65536	; 0x10000
   130cc:	add	r3, r3, #64	; 0x40
   130d0:	ldr	r0, [r3]
   130d4:	bl	12b44 <sigaltstack@plt+0x1558>
   130d8:	mov	r5, #1
   130dc:	b	12cd0 <sigaltstack@plt+0x16e4>
   130e0:	ldr	r3, [pc, #528]	; 132f8 <sigaltstack@plt+0x1d0c>
   130e4:	mov	r2, #0
   130e8:	strb	r2, [r3, #1009]	; 0x3f1
   130ec:	b	12c68 <sigaltstack@plt+0x167c>
   130f0:	ldr	r3, [pc, #512]	; 132f8 <sigaltstack@plt+0x1d0c>
   130f4:	mov	r2, #1
   130f8:	strb	r2, [r3, #1009]	; 0x3f1
   130fc:	b	12c68 <sigaltstack@plt+0x167c>
   13100:	cmp	r7, #49	; 0x31
   13104:	beq	12ec4 <sigaltstack@plt+0x18d8>
   13108:	mov	r1, r9
   1310c:	mov	r0, sl
   13110:	bl	12b44 <sigaltstack@plt+0x1558>
   13114:	b	12ed4 <sigaltstack@plt+0x18e8>
   13118:	bl	126f8 <sigaltstack@plt+0x110c>
   1311c:	add	r3, sp, #65536	; 0x10000
   13120:	add	r3, r3, #80	; 0x50
   13124:	mov	r1, r6
   13128:	ldr	r2, [r3]
   1312c:	add	r0, sp, #24
   13130:	bl	1293c <sigaltstack@plt+0x1350>
   13134:	ldr	r4, [r5, #1012]	; 0x3f4
   13138:	b	12fc8 <sigaltstack@plt+0x19dc>
   1313c:	cmp	r7, #108	; 0x6c
   13140:	bne	13108 <sigaltstack@plt+0x1b1c>
   13144:	b	12ec4 <sigaltstack@plt+0x18d8>
   13148:	cmp	r7, #114	; 0x72
   1314c:	beq	12efc <sigaltstack@plt+0x1910>
   13150:	add	r3, sp, #65536	; 0x10000
   13154:	add	r3, r3, #76	; 0x4c
   13158:	ldr	r1, [r3]
   1315c:	add	r3, sp, #65536	; 0x10000
   13160:	add	r3, r3, #64	; 0x40
   13164:	ldr	r0, [r3]
   13168:	bl	12b44 <sigaltstack@plt+0x1558>
   1316c:	b	12f1c <sigaltstack@plt+0x1930>
   13170:	cmp	r7, #50	; 0x32
   13174:	bne	13150 <sigaltstack@plt+0x1b64>
   13178:	b	12efc <sigaltstack@plt+0x1910>
   1317c:	add	r3, sp, #65536	; 0x10000
   13180:	add	r3, r3, #76	; 0x4c
   13184:	ldr	r3, [r3]
   13188:	cmp	r3, #1
   1318c:	add	r3, sp, #65536	; 0x10000
   13190:	beq	13254 <sigaltstack@plt+0x1c68>
   13194:	add	r2, sp, #65536	; 0x10000
   13198:	add	r3, r3, #76	; 0x4c
   1319c:	add	r2, r2, #72	; 0x48
   131a0:	ldr	r3, [r3]
   131a4:	ldr	r2, [r2]
   131a8:	ldr	r0, [r5, #1012]	; 0x3f4
   131ac:	add	r3, r3, r2
   131b0:	sub	r3, r3, #1
   131b4:	str	r3, [sp]
   131b8:	mov	r3, r2
   131bc:	add	r2, sp, #65536	; 0x10000
   131c0:	add	r2, r2, #68	; 0x44
   131c4:	ldr	r1, [pc, #320]	; 1330c <sigaltstack@plt+0x1d20>
   131c8:	ldr	r2, [r2]
   131cc:	bl	11484 <fprintf@plt>
   131d0:	b	12efc <sigaltstack@plt+0x1910>
   131d4:	cmp	r9, #1
   131d8:	beq	13278 <sigaltstack@plt+0x1c8c>
   131dc:	ldr	r1, [sp, #12]
   131e0:	ldr	r2, [sp, #8]
   131e4:	add	r3, r9, r1
   131e8:	sub	r3, r3, #1
   131ec:	str	r3, [sp]
   131f0:	mov	r3, r1
   131f4:	ldr	r1, [pc, #276]	; 13310 <sigaltstack@plt+0x1d24>
   131f8:	bl	11484 <fprintf@plt>
   131fc:	ldr	r0, [r5, #1012]	; 0x3f4
   13200:	b	12ec4 <sigaltstack@plt+0x18d8>
   13204:	ldr	r0, [pc, #264]	; 13314 <sigaltstack@plt+0x1d28>
   13208:	bl	113c4 <getenv@plt>
   1320c:	subs	r6, r0, #0
   13210:	beq	13298 <sigaltstack@plt+0x1cac>
   13214:	bl	1146c <strlen@plt>
   13218:	add	r0, r0, #13
   1321c:	bl	155cc <sigaltstack@plt+0x3fe0>
   13220:	mov	r2, r6
   13224:	ldr	r1, [pc, #236]	; 13318 <sigaltstack@plt+0x1d2c>
   13228:	mov	r4, r0
   1322c:	bl	1155c <sprintf@plt>
   13230:	mov	r0, r4
   13234:	bl	113d0 <mkstemp64@plt>
   13238:	cmp	r0, #0
   1323c:	blt	13290 <sigaltstack@plt+0x1ca4>
   13240:	ldr	r1, [pc, #180]	; 132fc <sigaltstack@plt+0x1d10>
   13244:	str	r4, [r5, #12]
   13248:	bl	111f0 <fdopen@plt>
   1324c:	str	r0, [r5, #1012]	; 0x3f4
   13250:	b	12ea0 <sigaltstack@plt+0x18b4>
   13254:	add	r2, sp, #65536	; 0x10000
   13258:	add	r3, r3, #72	; 0x48
   1325c:	add	r2, r2, #68	; 0x44
   13260:	ldr	r3, [r3]
   13264:	ldr	r2, [r2]
   13268:	ldr	r1, [pc, #172]	; 1331c <sigaltstack@plt+0x1d30>
   1326c:	ldr	r0, [r5, #1012]	; 0x3f4
   13270:	bl	11484 <fprintf@plt>
   13274:	b	12efc <sigaltstack@plt+0x1910>
   13278:	ldr	r3, [sp, #12]
   1327c:	ldr	r2, [sp, #8]
   13280:	ldr	r1, [pc, #152]	; 13320 <sigaltstack@plt+0x1d34>
   13284:	bl	11484 <fprintf@plt>
   13288:	ldr	r0, [r5, #1012]	; 0x3f4
   1328c:	b	12ec4 <sigaltstack@plt+0x18d8>
   13290:	ldr	r0, [pc, #140]	; 13324 <sigaltstack@plt+0x1d38>
   13294:	bl	127a8 <sigaltstack@plt+0x11bc>
   13298:	ldr	r6, [pc, #136]	; 13328 <sigaltstack@plt+0x1d3c>
   1329c:	mov	r0, #17
   132a0:	b	1321c <sigaltstack@plt+0x1c30>
   132a4:	ldr	r0, [pc, #128]	; 1332c <sigaltstack@plt+0x1d40>
   132a8:	bl	127a8 <sigaltstack@plt+0x11bc>
   132ac:	mov	r0, r6
   132b0:	bl	127a8 <sigaltstack@plt+0x11bc>
   132b4:	mov	r5, #0
   132b8:	b	12cd0 <sigaltstack@plt+0x16e4>
   132bc:	ldr	r0, [r5, #12]
   132c0:	bl	127a8 <sigaltstack@plt+0x11bc>
   132c4:	ldr	r0, [pc, #100]	; 13330 <sigaltstack@plt+0x1d44>
   132c8:	bl	127a8 <sigaltstack@plt+0x11bc>
   132cc:	add	r1, sp, #24
   132d0:	ldr	r0, [r7]
   132d4:	bl	11298 <execvp@plt>
   132d8:	bl	1149c <__errno_location@plt>
   132dc:	ldr	r0, [r0]
   132e0:	cmp	r0, #2
   132e4:	movne	r0, #126	; 0x7e
   132e8:	moveq	r0, #127	; 0x7f
   132ec:	bl	11280 <_exit@plt>
   132f0:	muleq	r2, ip, r1
   132f4:	muleq	r2, r8, r1
   132f8:	andeq	sl, r2, r8, lsr #3
   132fc:	andeq	r8, r1, r0, lsr #17
   13300:	andeq	sl, r2, r0, ror r1
   13304:	strdeq	r9, [r1], -r0
   13308:	andeq	r8, r1, r8, asr #15
   1330c:	andeq	r8, r1, r4, ror #17
   13310:	andeq	r8, r1, r8, asr #17
   13314:	andeq	r8, r1, r4, lsr #17
   13318:	andeq	r8, r1, ip, lsr #17
   1331c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13320:			; <UNDEFINED> instruction: 0x000188bc
   13324:	andeq	r8, r1, r4, lsl #18
   13328:	muleq	r1, r8, r8
   1332c:	strdeq	r8, [r1], -ip
   13330:	strdeq	r8, [r1], -r4
   13334:	ldrb	r3, [r0]
   13338:	cmp	r3, #47	; 0x2f
   1333c:	bne	1334c <sigaltstack@plt+0x1d60>
   13340:	ldrb	r3, [r0, #1]!
   13344:	cmp	r3, #47	; 0x2f
   13348:	beq	13340 <sigaltstack@plt+0x1d54>
   1334c:	cmp	r3, #0
   13350:	bxeq	lr
   13354:	mov	r2, #0
   13358:	push	{lr}		; (str lr, [sp, #-4]!)
   1335c:	mov	ip, r2
   13360:	mov	r1, r0
   13364:	mov	lr, #1
   13368:	cmp	r3, #47	; 0x2f
   1336c:	moveq	r2, lr
   13370:	beq	13380 <sigaltstack@plt+0x1d94>
   13374:	cmp	r2, #0
   13378:	movne	r0, r1
   1337c:	movne	r2, ip
   13380:	ldrb	r3, [r1, #1]!
   13384:	cmp	r3, #0
   13388:	bne	13368 <sigaltstack@plt+0x1d7c>
   1338c:	pop	{pc}		; (ldr pc, [sp], #4)
   13390:	push	{r4, lr}
   13394:	mov	r4, r0
   13398:	bl	1146c <strlen@plt>
   1339c:	cmp	r0, #1
   133a0:	popls	{r4, pc}
   133a4:	sub	r3, r0, #1
   133a8:	add	r2, r4, r3
   133ac:	ldrb	r1, [r4, r3]
   133b0:	cmp	r1, #47	; 0x2f
   133b4:	popne	{r4, pc}
   133b8:	cmp	r3, #1
   133bc:	beq	133d0 <sigaltstack@plt+0x1de4>
   133c0:	ldrb	r1, [r2, #-1]!
   133c4:	sub	r0, r3, #1
   133c8:	cmp	r1, #47	; 0x2f
   133cc:	beq	133d8 <sigaltstack@plt+0x1dec>
   133d0:	mov	r0, r3
   133d4:	pop	{r4, pc}
   133d8:	mov	r3, r0
   133dc:	b	133b8 <sigaltstack@plt+0x1dcc>
   133e0:	bx	lr
   133e4:	ldr	r4, [pc, #232]	; 134d4 <sigaltstack@plt+0x1ee8>
   133e8:	push	{r7, lr}
   133ec:	sub	sp, sp, #4096	; 0x1000
   133f0:	ldr	r3, [r4]
   133f4:	sub	sp, sp, #8
   133f8:	mov	r5, r0
   133fc:	blx	r3
   13400:	cmp	r5, #0
   13404:	ldrne	r6, [r4, #4]
   13408:	ldreq	r6, [r4, #8]
   1340c:	ldr	r0, [r4, #12]
   13410:	bl	1146c <strlen@plt>
   13414:	mov	r8, r0
   13418:	mov	r0, r6
   1341c:	bl	1146c <strlen@plt>
   13420:	ldr	r1, [r4, #12]
   13424:	add	r3, r8, r0
   13428:	cmp	r3, #4096	; 0x1000
   1342c:	mov	r7, r0
   13430:	bcs	13488 <sigaltstack@plt+0x1e9c>
   13434:	add	r4, sp, #4
   13438:	mov	r2, r8
   1343c:	mov	r0, r4
   13440:	bl	11424 <mempcpy@plt>
   13444:	ldr	r3, [pc, #140]	; 134d8 <sigaltstack@plt+0x1eec>
   13448:	mov	r2, r7
   1344c:	mov	r1, r6
   13450:	ldrh	r3, [r3]
   13454:	strh	r3, [r0], #2
   13458:	bl	11424 <mempcpy@plt>
   1345c:	mov	r3, #10
   13460:	strb	r3, [r0], #1
   13464:	sub	r2, r0, r4
   13468:	mov	r1, r4
   1346c:	mov	r0, #2
   13470:	bl	114b4 <write@plt>
   13474:	cmp	r5, #0
   13478:	bne	134c8 <sigaltstack@plt+0x1edc>
   1347c:	ldr	r3, [pc, #88]	; 134dc <sigaltstack@plt+0x1ef0>
   13480:	ldr	r0, [r3]
   13484:	bl	11280 <_exit@plt>
   13488:	mov	r2, r8
   1348c:	mov	r0, #2
   13490:	bl	114b4 <write@plt>
   13494:	mov	r2, #2
   13498:	mov	r0, r2
   1349c:	ldr	r1, [pc, #52]	; 134d8 <sigaltstack@plt+0x1eec>
   134a0:	bl	114b4 <write@plt>
   134a4:	mov	r2, r7
   134a8:	mov	r1, r6
   134ac:	mov	r0, #2
   134b0:	bl	114b4 <write@plt>
   134b4:	mov	r3, #10
   134b8:	add	r4, sp, #4
   134bc:	mov	r2, #1
   134c0:	strb	r3, [sp, #4]
   134c4:	b	13468 <sigaltstack@plt+0x1e7c>
   134c8:	mov	r0, r5
   134cc:	bl	11214 <raise@plt>
   134d0:	bl	115c8 <abort@plt>
   134d4:	andeq	sl, r2, r0, lsr r6
   134d8:	andeq	r9, r1, r8, lsr #4
   134dc:	andeq	sl, r2, r8, ror r1
   134e0:	subs	r0, r1, #0
   134e4:	bne	134ec <sigaltstack@plt+0x1f00>
   134e8:	bx	lr
   134ec:	push	{r4, lr}
   134f0:	mov	r0, #11
   134f4:	bl	133e4 <sigaltstack@plt+0x1df8>
   134f8:	cmp	r0, #0
   134fc:	push	{r4, lr}
   13500:	beq	13518 <sigaltstack@plt+0x1f2c>
   13504:	ldr	r3, [pc, #16]	; 1351c <sigaltstack@plt+0x1f30>
   13508:	ldr	r0, [r3, #16]
   1350c:	cmp	r0, #0
   13510:	moveq	r0, #11
   13514:	movne	r0, #0
   13518:	bl	133e4 <sigaltstack@plt+0x1df8>
   1351c:	andeq	sl, r2, r0, lsr r6
   13520:	push	{r4, r5, r6, lr}
   13524:	cmp	r0, #0
   13528:	ldr	r4, [pc, #128]	; 135b0 <sigaltstack@plt+0x1fc4>
   1352c:	ldr	r3, [pc, #128]	; 135b4 <sigaltstack@plt+0x1fc8>
   13530:	mov	r2, #5
   13534:	movne	r3, r0
   13538:	ldr	r1, [pc, #120]	; 135b8 <sigaltstack@plt+0x1fcc>
   1353c:	mov	r0, #0
   13540:	str	r3, [r4]
   13544:	bl	112ec <dcgettext@plt>
   13548:	mov	r2, #5
   1354c:	ldr	r1, [pc, #104]	; 135bc <sigaltstack@plt+0x1fd0>
   13550:	mov	r3, r0
   13554:	mov	r0, #0
   13558:	str	r3, [r4, #4]
   1355c:	bl	112ec <dcgettext@plt>
   13560:	str	r0, [r4, #8]
   13564:	bl	135c8 <sigaltstack@plt+0x1fdc>
   13568:	add	r1, r4, #24
   1356c:	mov	r2, #65536	; 0x10000
   13570:	mov	r3, r0
   13574:	ldr	r0, [pc, #68]	; 135c0 <sigaltstack@plt+0x1fd4>
   13578:	str	r3, [r4, #12]
   1357c:	bl	14448 <sigaltstack@plt+0x2e5c>
   13580:	subs	r5, r0, #0
   13584:	bne	1359c <sigaltstack@plt+0x1fb0>
   13588:	ldr	r0, [pc, #52]	; 135c4 <sigaltstack@plt+0x1fd8>
   1358c:	bl	143e4 <sigaltstack@plt+0x2df8>
   13590:	str	r0, [r4, #16]
   13594:	mov	r0, r5
   13598:	pop	{r4, r5, r6, pc}
   1359c:	bl	1149c <__errno_location@plt>
   135a0:	mov	r3, #95	; 0x5f
   135a4:	mvn	r5, #0
   135a8:	str	r3, [r0]
   135ac:	b	13594 <sigaltstack@plt+0x1fa8>
   135b0:	andeq	sl, r2, r0, lsr r6
   135b4:	andeq	r3, r1, r0, ror #7
   135b8:	andeq	r9, r1, ip, lsr #4
   135bc:	andeq	r9, r1, ip, lsr r2
   135c0:	strdeq	r3, [r1], -r8
   135c4:	andeq	r3, r1, r0, ror #9
   135c8:	ldr	r3, [pc, #4]	; 135d4 <sigaltstack@plt+0x1fe8>
   135cc:	ldr	r0, [r3]
   135d0:	bx	lr
   135d4:	andeq	sl, r2, r0, lsl #3
   135d8:	push	{r4, r5, r6, lr}
   135dc:	subs	r4, r0, #0
   135e0:	beq	13654 <sigaltstack@plt+0x2068>
   135e4:	mov	r1, #47	; 0x2f
   135e8:	bl	11544 <strrchr@plt>
   135ec:	subs	r5, r0, #0
   135f0:	beq	13640 <sigaltstack@plt+0x2054>
   135f4:	add	r6, r5, #1
   135f8:	sub	r3, r6, r4
   135fc:	cmp	r3, #6
   13600:	ble	13640 <sigaltstack@plt+0x2054>
   13604:	mov	r2, #7
   13608:	ldr	r1, [pc, #96]	; 13670 <sigaltstack@plt+0x2084>
   1360c:	sub	r0, r5, #6
   13610:	bl	115bc <strncmp@plt>
   13614:	cmp	r0, #0
   13618:	bne	13640 <sigaltstack@plt+0x2054>
   1361c:	mov	r2, #3
   13620:	ldr	r1, [pc, #76]	; 13674 <sigaltstack@plt+0x2088>
   13624:	mov	r0, r6
   13628:	bl	115bc <strncmp@plt>
   1362c:	cmp	r0, #0
   13630:	movne	r4, r6
   13634:	ldreq	r3, [pc, #60]	; 13678 <sigaltstack@plt+0x208c>
   13638:	addeq	r4, r5, #4
   1363c:	streq	r4, [r3]
   13640:	ldr	r2, [pc, #52]	; 1367c <sigaltstack@plt+0x2090>
   13644:	ldr	r3, [pc, #52]	; 13680 <sigaltstack@plt+0x2094>
   13648:	str	r4, [r2]
   1364c:	str	r4, [r3]
   13650:	pop	{r4, r5, r6, pc}
   13654:	ldr	r3, [pc, #40]	; 13684 <sigaltstack@plt+0x2098>
   13658:	mov	r2, #55	; 0x37
   1365c:	mov	r1, #1
   13660:	ldr	r3, [r3]
   13664:	ldr	r0, [pc, #28]	; 13688 <sigaltstack@plt+0x209c>
   13668:	bl	11370 <fwrite@plt>
   1366c:	bl	115c8 <abort@plt>
   13670:	andeq	r9, r1, r4, lsl #5
   13674:	andeq	r9, r1, ip, lsl #5
   13678:	andeq	sl, r2, r0, lsl #3
   1367c:	andeq	sl, r3, r8, asr #12
   13680:	andeq	sl, r2, r4, lsl #3
   13684:	muleq	r2, r0, r1
   13688:	andeq	r9, r1, ip, asr #4
   1368c:	mov	r3, r1
   13690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13694:	mov	r1, #2
   13698:	sub	sp, sp, #116	; 0x74
   1369c:	mov	r4, r0
   136a0:	mov	r0, r3
   136a4:	bl	14c54 <sigaltstack@plt+0x3668>
   136a8:	ldr	r7, [pc, #1952]	; 13e50 <sigaltstack@plt+0x2864>
   136ac:	mov	r6, #0
   136b0:	mov	r5, #1
   136b4:	mov	r9, r0
   136b8:	ldrb	r3, [r4]
   136bc:	cmp	r3, #0
   136c0:	beq	13ca0 <sigaltstack@plt+0x26b4>
   136c4:	mov	r1, r9
   136c8:	mov	r0, r4
   136cc:	bl	168cc <sigaltstack@plt+0x52e0>
   136d0:	subs	r8, r0, #0
   136d4:	beq	13ca0 <sigaltstack@plt+0x26b4>
   136d8:	bl	11394 <__ctype_get_mb_cur_max@plt>
   136dc:	cmp	r0, #1
   136e0:	bls	1384c <sigaltstack@plt+0x2260>
   136e4:	cmp	r4, r8
   136e8:	str	r4, [sp, #16]
   136ec:	strb	r6, [sp]
   136f0:	str	r6, [sp, #4]
   136f4:	str	r6, [sp, #8]
   136f8:	strb	r6, [sp, #12]
   136fc:	bcc	1375c <sigaltstack@plt+0x2170>
   13700:	b	13cd0 <sigaltstack@plt+0x26e4>
   13704:	ldrb	r3, [r4]
   13708:	and	r2, r3, #31
   1370c:	lsr	r3, r3, #5
   13710:	ldr	r3, [r7, r3, lsl #2]
   13714:	lsr	r3, r3, r2
   13718:	tst	r3, #1
   1371c:	beq	137e4 <sigaltstack@plt+0x21f8>
   13720:	str	r5, [sp, #20]
   13724:	ldrb	sl, [r4]
   13728:	strb	r5, [sp, #24]
   1372c:	str	sl, [sp, #28]
   13730:	cmp	sl, #0
   13734:	strb	r5, [sp, #12]
   13738:	beq	137e0 <sigaltstack@plt+0x21f4>
   1373c:	ldr	r4, [sp, #16]
   13740:	ldr	r3, [sp, #20]
   13744:	strb	r6, [sp, #12]
   13748:	add	r4, r4, r3
   1374c:	cmp	r8, r4
   13750:	str	r4, [sp, #16]
   13754:	ldrb	r3, [sp, #24]
   13758:	bls	1389c <sigaltstack@plt+0x22b0>
   1375c:	ldrb	r3, [sp]
   13760:	cmp	r3, #0
   13764:	beq	13704 <sigaltstack@plt+0x2118>
   13768:	bl	11394 <__ctype_get_mb_cur_max@plt>
   1376c:	mov	r1, r0
   13770:	mov	r0, r4
   13774:	bl	14c28 <sigaltstack@plt+0x363c>
   13778:	add	r3, sp, #4
   1377c:	mov	r1, r4
   13780:	mov	r2, r0
   13784:	add	r0, sp, #28
   13788:	bl	15cd4 <sigaltstack@plt+0x46e8>
   1378c:	cmn	r0, #1
   13790:	str	r0, [sp, #20]
   13794:	beq	137fc <sigaltstack@plt+0x2210>
   13798:	cmn	r0, #2
   1379c:	beq	13830 <sigaltstack@plt+0x2244>
   137a0:	cmp	r0, #0
   137a4:	bne	13810 <sigaltstack@plt+0x2224>
   137a8:	ldr	r4, [sp, #16]
   137ac:	str	r5, [sp, #20]
   137b0:	ldrb	r3, [r4]
   137b4:	cmp	r3, #0
   137b8:	bne	13e3c <sigaltstack@plt+0x2850>
   137bc:	ldr	sl, [sp, #28]
   137c0:	cmp	sl, #0
   137c4:	bne	13bdc <sigaltstack@plt+0x25f0>
   137c8:	add	r0, sp, #4
   137cc:	strb	r5, [sp, #24]
   137d0:	bl	112b0 <mbsinit@plt>
   137d4:	cmp	r0, #0
   137d8:	bne	13828 <sigaltstack@plt+0x223c>
   137dc:	strb	r5, [sp, #12]
   137e0:	bl	115c8 <abort@plt>
   137e4:	add	r0, sp, #4
   137e8:	bl	112b0 <mbsinit@plt>
   137ec:	cmp	r0, #0
   137f0:	beq	13e14 <sigaltstack@plt+0x2828>
   137f4:	strb	r5, [sp]
   137f8:	b	13768 <sigaltstack@plt+0x217c>
   137fc:	str	r5, [sp, #20]
   13800:	strb	r6, [sp, #24]
   13804:	ldr	sl, [sp, #28]
   13808:	ldr	r4, [sp, #16]
   1380c:	b	13740 <sigaltstack@plt+0x2154>
   13810:	add	r0, sp, #4
   13814:	strb	r5, [sp, #24]
   13818:	bl	112b0 <mbsinit@plt>
   1381c:	ldr	sl, [sp, #28]
   13820:	cmp	r0, #0
   13824:	beq	13730 <sigaltstack@plt+0x2144>
   13828:	strb	r6, [sp]
   1382c:	b	13730 <sigaltstack@plt+0x2144>
   13830:	ldr	r4, [sp, #16]
   13834:	mov	r0, r4
   13838:	bl	1146c <strlen@plt>
   1383c:	strb	r6, [sp, #24]
   13840:	ldr	sl, [sp, #28]
   13844:	str	r0, [sp, #20]
   13848:	b	13740 <sigaltstack@plt+0x2154>
   1384c:	cmp	r4, r8
   13850:	bcs	13d4c <sigaltstack@plt+0x2760>
   13854:	bl	11448 <__ctype_b_loc@plt>
   13858:	ldrb	r3, [r8, #-1]
   1385c:	lsl	r3, r3, #1
   13860:	ldr	sl, [r0]
   13864:	mov	r0, r9
   13868:	ldrh	r4, [sl, r3]
   1386c:	bl	1146c <strlen@plt>
   13870:	and	r4, r4, #8
   13874:	ldrb	r3, [r8, r0]
   13878:	cmp	r3, #0
   1387c:	bne	13e28 <sigaltstack@plt+0x283c>
   13880:	cmp	r4, #0
   13884:	beq	13d78 <sigaltstack@plt+0x278c>
   13888:	ldrb	r3, [r8]
   1388c:	cmp	r3, #0
   13890:	beq	13ca0 <sigaltstack@plt+0x26b4>
   13894:	add	r4, r8, #1
   13898:	b	136b8 <sigaltstack@plt+0x20cc>
   1389c:	cmp	r3, #0
   138a0:	beq	13cd0 <sigaltstack@plt+0x26e4>
   138a4:	mov	r0, sl
   138a8:	bl	114a8 <iswalnum@plt>
   138ac:	clz	fp, r0
   138b0:	lsr	fp, fp, #5
   138b4:	strb	r6, [sp, #56]	; 0x38
   138b8:	ldrb	r3, [sp, #56]	; 0x38
   138bc:	str	r8, [sp, #16]
   138c0:	strb	r6, [sp]
   138c4:	cmp	r3, #0
   138c8:	str	r6, [sp, #4]
   138cc:	str	r6, [sp, #8]
   138d0:	strb	r6, [sp, #12]
   138d4:	str	r9, [sp, #72]	; 0x48
   138d8:	str	r6, [sp, #60]	; 0x3c
   138dc:	str	r6, [sp, #64]	; 0x40
   138e0:	strb	r6, [sp, #68]	; 0x44
   138e4:	mov	sl, r9
   138e8:	bne	13a54 <sigaltstack@plt+0x2468>
   138ec:	ldrb	r3, [sl]
   138f0:	and	r2, r3, #31
   138f4:	lsr	r3, r3, #5
   138f8:	ldr	r3, [r7, r3, lsl #2]
   138fc:	lsr	r3, r3, r2
   13900:	tst	r3, #1
   13904:	beq	13b7c <sigaltstack@plt+0x2590>
   13908:	str	r5, [sp, #76]	; 0x4c
   1390c:	ldrb	r4, [sl]
   13910:	strb	r5, [sp, #80]	; 0x50
   13914:	str	r4, [sp, #84]	; 0x54
   13918:	cmp	r4, #0
   1391c:	strb	r5, [sp, #68]	; 0x44
   13920:	bne	13a04 <sigaltstack@plt+0x2418>
   13924:	ldrb	r3, [sp, #12]
   13928:	cmp	r3, #0
   1392c:	bne	13c14 <sigaltstack@plt+0x2628>
   13930:	ldrb	r3, [sp]
   13934:	ldr	r4, [sp, #16]
   13938:	cmp	r3, #0
   1393c:	bne	13970 <sigaltstack@plt+0x2384>
   13940:	ldrb	r3, [r4]
   13944:	and	r2, r3, #31
   13948:	lsr	r3, r3, #5
   1394c:	ldr	r3, [r7, r3, lsl #2]
   13950:	lsr	r3, r3, r2
   13954:	tst	r3, #1
   13958:	bne	13d80 <sigaltstack@plt+0x2794>
   1395c:	add	r0, sp, #4
   13960:	bl	112b0 <mbsinit@plt>
   13964:	cmp	r0, #0
   13968:	beq	13e14 <sigaltstack@plt+0x2828>
   1396c:	strb	r5, [sp]
   13970:	bl	11394 <__ctype_get_mb_cur_max@plt>
   13974:	mov	r1, r0
   13978:	mov	r0, r4
   1397c:	bl	14c28 <sigaltstack@plt+0x363c>
   13980:	add	r3, sp, #4
   13984:	mov	r1, r4
   13988:	mov	r2, r0
   1398c:	add	r0, sp, #28
   13990:	bl	15cd4 <sigaltstack@plt+0x46e8>
   13994:	cmn	r0, #1
   13998:	str	r0, [sp, #20]
   1399c:	beq	13d98 <sigaltstack@plt+0x27ac>
   139a0:	cmn	r0, #2
   139a4:	beq	13dac <sigaltstack@plt+0x27c0>
   139a8:	cmp	r0, #0
   139ac:	bne	13dec <sigaltstack@plt+0x2800>
   139b0:	ldr	r3, [sp, #16]
   139b4:	str	r5, [sp, #20]
   139b8:	ldrb	r3, [r3]
   139bc:	cmp	r3, #0
   139c0:	bne	13e3c <sigaltstack@plt+0x2850>
   139c4:	ldr	r4, [sp, #28]
   139c8:	cmp	r4, #0
   139cc:	bne	13bdc <sigaltstack@plt+0x25f0>
   139d0:	add	r0, sp, #4
   139d4:	strb	r5, [sp, #24]
   139d8:	bl	112b0 <mbsinit@plt>
   139dc:	cmp	r0, #0
   139e0:	strbne	r4, [sp]
   139e4:	strbne	r5, [sp, #12]
   139e8:	bne	13c48 <sigaltstack@plt+0x265c>
   139ec:	b	13e0c <sigaltstack@plt+0x2820>
   139f0:	ldr	r0, [sp, #72]	; 0x48
   139f4:	bl	1146c <strlen@plt>
   139f8:	strb	r6, [sp, #80]	; 0x50
   139fc:	str	r0, [sp, #76]	; 0x4c
   13a00:	strb	r5, [sp, #68]	; 0x44
   13a04:	ldrb	r3, [sp, #12]
   13a08:	cmp	r3, #0
   13a0c:	beq	13ab8 <sigaltstack@plt+0x24cc>
   13a10:	ldrb	r3, [sp, #24]
   13a14:	cmp	r3, #0
   13a18:	ldrne	r4, [sp, #28]
   13a1c:	bne	13b54 <sigaltstack@plt+0x2568>
   13a20:	ldr	r4, [sp, #16]
   13a24:	ldr	r3, [sp, #20]
   13a28:	ldr	sl, [sp, #72]	; 0x48
   13a2c:	add	r4, r4, r3
   13a30:	ldrb	r3, [sp, #56]	; 0x38
   13a34:	ldr	r2, [sp, #76]	; 0x4c
   13a38:	strb	r6, [sp, #12]
   13a3c:	add	sl, sl, r2
   13a40:	cmp	r3, #0
   13a44:	strb	r6, [sp, #68]	; 0x44
   13a48:	str	r4, [sp, #16]
   13a4c:	str	sl, [sp, #72]	; 0x48
   13a50:	beq	138ec <sigaltstack@plt+0x2300>
   13a54:	bl	11394 <__ctype_get_mb_cur_max@plt>
   13a58:	mov	r1, r0
   13a5c:	mov	r0, sl
   13a60:	bl	14c28 <sigaltstack@plt+0x363c>
   13a64:	add	r3, sp, #60	; 0x3c
   13a68:	mov	r1, sl
   13a6c:	mov	r2, r0
   13a70:	add	r0, sp, #84	; 0x54
   13a74:	bl	15cd4 <sigaltstack@plt+0x46e8>
   13a78:	cmn	r0, #1
   13a7c:	str	r0, [sp, #76]	; 0x4c
   13a80:	strbeq	r6, [sp, #80]	; 0x50
   13a84:	streq	r5, [sp, #76]	; 0x4c
   13a88:	beq	13a00 <sigaltstack@plt+0x2414>
   13a8c:	cmn	r0, #2
   13a90:	beq	139f0 <sigaltstack@plt+0x2404>
   13a94:	cmp	r0, #0
   13a98:	beq	13bbc <sigaltstack@plt+0x25d0>
   13a9c:	ldr	r4, [sp, #84]	; 0x54
   13aa0:	add	r0, sp, #60	; 0x3c
   13aa4:	strb	r5, [sp, #80]	; 0x50
   13aa8:	bl	112b0 <mbsinit@plt>
   13aac:	cmp	r0, #0
   13ab0:	strbne	r6, [sp, #56]	; 0x38
   13ab4:	b	13918 <sigaltstack@plt+0x232c>
   13ab8:	ldrb	r3, [sp]
   13abc:	ldr	r4, [sp, #16]
   13ac0:	cmp	r3, #0
   13ac4:	bne	13af8 <sigaltstack@plt+0x250c>
   13ac8:	ldrb	r3, [r4]
   13acc:	and	r2, r3, #31
   13ad0:	lsr	r3, r3, #5
   13ad4:	ldr	r3, [r7, r3, lsl #2]
   13ad8:	lsr	r3, r3, r2
   13adc:	tst	r3, #1
   13ae0:	bne	13b60 <sigaltstack@plt+0x2574>
   13ae4:	add	r0, sp, #4
   13ae8:	bl	112b0 <mbsinit@plt>
   13aec:	cmp	r0, #0
   13af0:	beq	13e14 <sigaltstack@plt+0x2828>
   13af4:	strb	r5, [sp]
   13af8:	bl	11394 <__ctype_get_mb_cur_max@plt>
   13afc:	mov	r1, r0
   13b00:	mov	r0, r4
   13b04:	bl	14c28 <sigaltstack@plt+0x363c>
   13b08:	add	r3, sp, #4
   13b0c:	mov	r1, r4
   13b10:	mov	r2, r0
   13b14:	add	r0, sp, #28
   13b18:	bl	15cd4 <sigaltstack@plt+0x46e8>
   13b1c:	cmn	r0, #1
   13b20:	str	r0, [sp, #20]
   13b24:	beq	13b94 <sigaltstack@plt+0x25a8>
   13b28:	cmn	r0, #2
   13b2c:	beq	13ba4 <sigaltstack@plt+0x25b8>
   13b30:	cmp	r0, #0
   13b34:	beq	13bf0 <sigaltstack@plt+0x2604>
   13b38:	ldr	r4, [sp, #28]
   13b3c:	add	r0, sp, #4
   13b40:	strb	r5, [sp, #24]
   13b44:	bl	112b0 <mbsinit@plt>
   13b48:	strb	r5, [sp, #12]
   13b4c:	cmp	r0, #0
   13b50:	strbne	r6, [sp]
   13b54:	cmp	r4, #0
   13b58:	beq	137e0 <sigaltstack@plt+0x21f4>
   13b5c:	b	13a20 <sigaltstack@plt+0x2434>
   13b60:	str	r5, [sp, #20]
   13b64:	ldrb	r3, [r4]
   13b68:	strb	r5, [sp, #24]
   13b6c:	strb	r5, [sp, #12]
   13b70:	str	r3, [sp, #28]
   13b74:	mov	r4, r3
   13b78:	b	13b54 <sigaltstack@plt+0x2568>
   13b7c:	add	r0, sp, #60	; 0x3c
   13b80:	bl	112b0 <mbsinit@plt>
   13b84:	cmp	r0, #0
   13b88:	beq	13e14 <sigaltstack@plt+0x2828>
   13b8c:	strb	r5, [sp, #56]	; 0x38
   13b90:	b	13a54 <sigaltstack@plt+0x2468>
   13b94:	str	r5, [sp, #20]
   13b98:	strb	r6, [sp, #24]
   13b9c:	ldr	r4, [sp, #16]
   13ba0:	b	13a24 <sigaltstack@plt+0x2438>
   13ba4:	ldr	r4, [sp, #16]
   13ba8:	mov	r0, r4
   13bac:	bl	1146c <strlen@plt>
   13bb0:	strb	r6, [sp, #24]
   13bb4:	str	r0, [sp, #20]
   13bb8:	b	13a24 <sigaltstack@plt+0x2438>
   13bbc:	ldr	r3, [sp, #72]	; 0x48
   13bc0:	str	r5, [sp, #76]	; 0x4c
   13bc4:	ldrb	r3, [r3]
   13bc8:	cmp	r3, #0
   13bcc:	bne	13e3c <sigaltstack@plt+0x2850>
   13bd0:	ldr	r4, [sp, #84]	; 0x54
   13bd4:	cmp	r4, #0
   13bd8:	beq	13aa0 <sigaltstack@plt+0x24b4>
   13bdc:	ldr	r3, [pc, #624]	; 13e54 <sigaltstack@plt+0x2868>
   13be0:	mov	r2, #172	; 0xac
   13be4:	ldr	r1, [pc, #620]	; 13e58 <sigaltstack@plt+0x286c>
   13be8:	ldr	r0, [pc, #620]	; 13e5c <sigaltstack@plt+0x2870>
   13bec:	bl	115e0 <__assert_fail@plt>
   13bf0:	ldr	r4, [sp, #16]
   13bf4:	str	r5, [sp, #20]
   13bf8:	ldrb	r3, [r4]
   13bfc:	cmp	r3, #0
   13c00:	bne	13e3c <sigaltstack@plt+0x2850>
   13c04:	ldr	r4, [sp, #28]
   13c08:	cmp	r4, #0
   13c0c:	beq	13b3c <sigaltstack@plt+0x2550>
   13c10:	b	13bdc <sigaltstack@plt+0x25f0>
   13c14:	ldrb	r3, [sp, #24]
   13c18:	ldr	r4, [sp, #28]
   13c1c:	cmp	r3, #0
   13c20:	beq	13c2c <sigaltstack@plt+0x2640>
   13c24:	cmp	r4, #0
   13c28:	beq	13c48 <sigaltstack@plt+0x265c>
   13c2c:	ldrb	r3, [sp, #24]
   13c30:	cmp	r3, #0
   13c34:	beq	13c48 <sigaltstack@plt+0x265c>
   13c38:	mov	r0, r4
   13c3c:	bl	114a8 <iswalnum@plt>
   13c40:	cmp	r0, #0
   13c44:	bne	13c50 <sigaltstack@plt+0x2664>
   13c48:	cmp	fp, #0
   13c4c:	bne	13ca4 <sigaltstack@plt+0x26b8>
   13c50:	str	r8, [sp, #16]
   13c54:	strb	r6, [sp]
   13c58:	str	r6, [sp, #4]
   13c5c:	str	r6, [sp, #8]
   13c60:	strb	r6, [sp, #12]
   13c64:	ldrb	r3, [r8]
   13c68:	and	r2, r3, #31
   13c6c:	lsr	r3, r3, #5
   13c70:	ldr	r3, [r7, r3, lsl #2]
   13c74:	lsr	r3, r3, r2
   13c78:	tst	r3, #1
   13c7c:	beq	13cd8 <sigaltstack@plt+0x26ec>
   13c80:	str	r5, [sp, #20]
   13c84:	ldrb	r3, [r8]
   13c88:	strb	r5, [sp, #24]
   13c8c:	mov	r4, r3
   13c90:	str	r3, [sp, #28]
   13c94:	cmp	r4, #0
   13c98:	strb	r5, [sp, #12]
   13c9c:	bne	13cc4 <sigaltstack@plt+0x26d8>
   13ca0:	mov	fp, #0
   13ca4:	mov	r0, r9
   13ca8:	bl	15c50 <sigaltstack@plt+0x4664>
   13cac:	mov	r0, fp
   13cb0:	add	sp, sp, #116	; 0x74
   13cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cb8:	ldr	r0, [sp, #16]
   13cbc:	bl	1146c <strlen@plt>
   13cc0:	str	r0, [sp, #20]
   13cc4:	ldr	r4, [sp, #20]
   13cc8:	add	r4, r8, r4
   13ccc:	b	136b8 <sigaltstack@plt+0x20cc>
   13cd0:	mov	fp, r5
   13cd4:	b	138b4 <sigaltstack@plt+0x22c8>
   13cd8:	add	r0, sp, #4
   13cdc:	bl	112b0 <mbsinit@plt>
   13ce0:	cmp	r0, #0
   13ce4:	beq	13e14 <sigaltstack@plt+0x2828>
   13ce8:	strb	r5, [sp]
   13cec:	bl	11394 <__ctype_get_mb_cur_max@plt>
   13cf0:	mov	r1, r0
   13cf4:	mov	r0, r8
   13cf8:	bl	14c28 <sigaltstack@plt+0x363c>
   13cfc:	add	r3, sp, #4
   13d00:	mov	r1, r8
   13d04:	mov	r2, r0
   13d08:	add	r0, sp, #28
   13d0c:	bl	15cd4 <sigaltstack@plt+0x46e8>
   13d10:	cmn	r0, #1
   13d14:	str	r0, [sp, #20]
   13d18:	streq	r5, [sp, #20]
   13d1c:	beq	13cc4 <sigaltstack@plt+0x26d8>
   13d20:	cmn	r0, #2
   13d24:	beq	13cb8 <sigaltstack@plt+0x26cc>
   13d28:	cmp	r0, #0
   13d2c:	beq	13dc8 <sigaltstack@plt+0x27dc>
   13d30:	ldr	r4, [sp, #28]
   13d34:	add	r0, sp, #4
   13d38:	strb	r5, [sp, #24]
   13d3c:	bl	112b0 <mbsinit@plt>
   13d40:	cmp	r0, #0
   13d44:	strbne	r6, [sp]
   13d48:	b	13c94 <sigaltstack@plt+0x26a8>
   13d4c:	mov	r0, r9
   13d50:	bl	1146c <strlen@plt>
   13d54:	ldrb	r4, [r8, r0]
   13d58:	cmp	r4, #0
   13d5c:	beq	13d78 <sigaltstack@plt+0x278c>
   13d60:	bl	11448 <__ctype_b_loc@plt>
   13d64:	lsl	r4, r4, #1
   13d68:	ldr	r3, [r0]
   13d6c:	ldrh	r3, [r3, r4]
   13d70:	tst	r3, #8
   13d74:	bne	13888 <sigaltstack@plt+0x229c>
   13d78:	mov	fp, #1
   13d7c:	b	13ca4 <sigaltstack@plt+0x26b8>
   13d80:	str	r5, [sp, #20]
   13d84:	ldrb	r4, [r4]
   13d88:	strb	r5, [sp, #24]
   13d8c:	strb	r5, [sp, #12]
   13d90:	str	r4, [sp, #28]
   13d94:	b	13c24 <sigaltstack@plt+0x2638>
   13d98:	str	r5, [sp, #20]
   13d9c:	strb	r6, [sp, #24]
   13da0:	strb	r5, [sp, #12]
   13da4:	ldr	r4, [sp, #28]
   13da8:	b	13c2c <sigaltstack@plt+0x2640>
   13dac:	ldr	r0, [sp, #16]
   13db0:	bl	1146c <strlen@plt>
   13db4:	strb	r6, [sp, #24]
   13db8:	strb	r5, [sp, #12]
   13dbc:	ldr	r4, [sp, #28]
   13dc0:	str	r0, [sp, #20]
   13dc4:	b	13c2c <sigaltstack@plt+0x2640>
   13dc8:	ldr	r3, [sp, #16]
   13dcc:	str	r5, [sp, #20]
   13dd0:	ldrb	r3, [r3]
   13dd4:	cmp	r3, #0
   13dd8:	bne	13e3c <sigaltstack@plt+0x2850>
   13ddc:	ldr	r4, [sp, #28]
   13de0:	cmp	r4, #0
   13de4:	beq	13d34 <sigaltstack@plt+0x2748>
   13de8:	b	13bdc <sigaltstack@plt+0x25f0>
   13dec:	add	r0, sp, #4
   13df0:	strb	r5, [sp, #24]
   13df4:	bl	112b0 <mbsinit@plt>
   13df8:	ldr	r4, [sp, #28]
   13dfc:	cmp	r0, #0
   13e00:	strbne	r6, [sp]
   13e04:	strbne	r5, [sp, #12]
   13e08:	bne	13c24 <sigaltstack@plt+0x2638>
   13e0c:	strb	r5, [sp, #12]
   13e10:	b	13c24 <sigaltstack@plt+0x2638>
   13e14:	ldr	r3, [pc, #56]	; 13e54 <sigaltstack@plt+0x2868>
   13e18:	mov	r2, #143	; 0x8f
   13e1c:	ldr	r1, [pc, #52]	; 13e58 <sigaltstack@plt+0x286c>
   13e20:	ldr	r0, [pc, #56]	; 13e60 <sigaltstack@plt+0x2874>
   13e24:	bl	115e0 <__assert_fail@plt>
   13e28:	lsl	r3, r3, #1
   13e2c:	ldrh	r3, [sl, r3]
   13e30:	tst	r3, #8
   13e34:	beq	13880 <sigaltstack@plt+0x2294>
   13e38:	b	13888 <sigaltstack@plt+0x229c>
   13e3c:	ldr	r3, [pc, #16]	; 13e54 <sigaltstack@plt+0x2868>
   13e40:	mov	r2, #171	; 0xab
   13e44:	ldr	r1, [pc, #12]	; 13e58 <sigaltstack@plt+0x286c>
   13e48:	ldr	r0, [pc, #20]	; 13e64 <sigaltstack@plt+0x2878>
   13e4c:	bl	115e0 <__assert_fail@plt>
   13e50:	strdeq	r9, [r1], -ip
   13e54:	muleq	r1, r0, r2
   13e58:	andeq	r9, r1, r4, lsr #5
   13e5c:	andeq	r9, r1, r0, ror #5
   13e60:			; <UNDEFINED> instruction: 0x000192b0
   13e64:	andeq	r9, r1, r8, asr #5
   13e68:	push	{r4, r5, r6, lr}
   13e6c:	mov	r1, r0
   13e70:	mov	r4, r0
   13e74:	mov	r2, #5
   13e78:	mov	r0, #0
   13e7c:	bl	112ec <dcgettext@plt>
   13e80:	cmp	r4, r0
   13e84:	mov	r5, r0
   13e88:	beq	13e9c <sigaltstack@plt+0x28b0>
   13e8c:	mov	r1, r4
   13e90:	bl	1368c <sigaltstack@plt+0x20a0>
   13e94:	cmp	r0, #0
   13e98:	beq	13ea4 <sigaltstack@plt+0x28b8>
   13e9c:	mov	r0, r5
   13ea0:	pop	{r4, r5, r6, pc}
   13ea4:	mov	r0, r5
   13ea8:	bl	1146c <strlen@plt>
   13eac:	mov	r6, r0
   13eb0:	mov	r0, r4
   13eb4:	bl	1146c <strlen@plt>
   13eb8:	add	r0, r6, r0
   13ebc:	add	r0, r0, #4
   13ec0:	bl	155cc <sigaltstack@plt+0x3fe0>
   13ec4:	mov	r2, r5
   13ec8:	mov	r3, r4
   13ecc:	ldr	r1, [pc, #16]	; 13ee4 <sigaltstack@plt+0x28f8>
   13ed0:	mov	r6, r0
   13ed4:	mov	r5, r6
   13ed8:	bl	1155c <sprintf@plt>
   13edc:	mov	r0, r5
   13ee0:	pop	{r4, r5, r6, pc}
   13ee4:	strdeq	r9, [r1], -r4
   13ee8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13eec:	mov	r2, #5
   13ef0:	mov	r8, r0
   13ef4:	mov	r6, r1
   13ef8:	mov	r1, r0
   13efc:	mov	r0, #0
   13f00:	bl	112ec <dcgettext@plt>
   13f04:	mov	r7, r0
   13f08:	bl	15e88 <sigaltstack@plt+0x489c>
   13f0c:	ldr	r1, [pc, #588]	; 14160 <sigaltstack@plt+0x2b74>
   13f10:	mov	r5, r0
   13f14:	bl	15dd0 <sigaltstack@plt+0x47e4>
   13f18:	subs	r4, r0, #0
   13f1c:	bne	13fe8 <sigaltstack@plt+0x29fc>
   13f20:	cmp	r6, #0
   13f24:	movne	r9, r4
   13f28:	movne	r5, r6
   13f2c:	movne	sl, r6
   13f30:	beq	14140 <sigaltstack@plt+0x2b54>
   13f34:	mov	r1, r8
   13f38:	mov	r0, r7
   13f3c:	bl	11238 <strcmp@plt>
   13f40:	cmp	r0, #0
   13f44:	bne	13f74 <sigaltstack@plt+0x2988>
   13f48:	cmp	r4, r6
   13f4c:	cmpne	r4, #0
   13f50:	moveq	r7, r6
   13f54:	bne	13f60 <sigaltstack@plt+0x2974>
   13f58:	mov	r0, r7
   13f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f60:	mov	r0, r4
   13f64:	mov	r7, r6
   13f68:	bl	15c50 <sigaltstack@plt+0x4664>
   13f6c:	mov	r0, r7
   13f70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f74:	mov	r1, r8
   13f78:	mov	r0, r7
   13f7c:	bl	1368c <sigaltstack@plt+0x20a0>
   13f80:	cmp	r0, #0
   13f84:	bne	13fc0 <sigaltstack@plt+0x29d4>
   13f88:	cmp	sl, #0
   13f8c:	beq	13fa4 <sigaltstack@plt+0x29b8>
   13f90:	mov	r1, sl
   13f94:	mov	r0, r7
   13f98:	bl	1368c <sigaltstack@plt+0x20a0>
   13f9c:	cmp	r0, #0
   13fa0:	bne	13fc0 <sigaltstack@plt+0x29d4>
   13fa4:	cmp	r5, #0
   13fa8:	beq	140e0 <sigaltstack@plt+0x2af4>
   13fac:	mov	r1, r5
   13fb0:	mov	r0, r7
   13fb4:	bl	1368c <sigaltstack@plt+0x20a0>
   13fb8:	cmp	r0, #0
   13fbc:	beq	140e0 <sigaltstack@plt+0x2af4>
   13fc0:	cmp	r9, #0
   13fc4:	beq	13fd0 <sigaltstack@plt+0x29e4>
   13fc8:	mov	r0, r9
   13fcc:	bl	15c50 <sigaltstack@plt+0x4664>
   13fd0:	cmp	r4, #0
   13fd4:	beq	13f58 <sigaltstack@plt+0x296c>
   13fd8:	mov	r0, r4
   13fdc:	bl	15c50 <sigaltstack@plt+0x4664>
   13fe0:	mov	r0, r7
   13fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fe8:	mov	r2, r5
   13fec:	ldr	r1, [pc, #364]	; 14160 <sigaltstack@plt+0x2b74>
   13ff0:	mov	r0, r6
   13ff4:	bl	15bdc <sigaltstack@plt+0x45f0>
   13ff8:	mov	r9, r0
   13ffc:	mov	r0, r5
   14000:	bl	1146c <strlen@plt>
   14004:	mov	r4, r0
   14008:	add	r0, r0, #11
   1400c:	bl	155cc <sigaltstack@plt+0x3fe0>
   14010:	mov	r2, r4
   14014:	mov	r1, r5
   14018:	mov	sl, r0
   1401c:	bl	1128c <memcpy@plt>
   14020:	ldr	r3, [pc, #316]	; 14164 <sigaltstack@plt+0x2b78>
   14024:	add	ip, sl, r4
   14028:	mov	r2, sl
   1402c:	ldm	r3!, {r0, r1}
   14030:	ldrh	lr, [r3]
   14034:	ldrb	r3, [r3, #2]
   14038:	str	r0, [sl, r4]
   1403c:	str	r1, [ip, #4]
   14040:	strh	lr, [ip, #8]
   14044:	ldr	r1, [pc, #276]	; 14160 <sigaltstack@plt+0x2b74>
   14048:	strb	r3, [ip, #10]
   1404c:	mov	r0, r6
   14050:	bl	15bdc <sigaltstack@plt+0x45f0>
   14054:	mov	r4, r0
   14058:	mov	r0, sl
   1405c:	bl	15c50 <sigaltstack@plt+0x4664>
   14060:	cmp	r4, #0
   14064:	beq	14084 <sigaltstack@plt+0x2a98>
   14068:	mov	r1, #63	; 0x3f
   1406c:	mov	r0, r4
   14070:	bl	11478 <strchr@plt>
   14074:	cmp	r0, #0
   14078:	beq	140ac <sigaltstack@plt+0x2ac0>
   1407c:	mov	r0, r4
   14080:	bl	15c50 <sigaltstack@plt+0x4664>
   14084:	cmp	r9, #0
   14088:	moveq	sl, r9
   1408c:	moveq	r6, r8
   14090:	moveq	r5, r9
   14094:	moveq	r4, r9
   14098:	movne	r5, #0
   1409c:	movne	r4, r5
   140a0:	movne	sl, r9
   140a4:	movne	r6, r9
   140a8:	b	13f34 <sigaltstack@plt+0x2948>
   140ac:	subs	sl, r9, #0
   140b0:	mov	r5, r4
   140b4:	moveq	r6, r4
   140b8:	movne	r6, r9
   140bc:	b	13f34 <sigaltstack@plt+0x2948>
   140c0:	mov	r1, r8
   140c4:	mov	r0, r7
   140c8:	bl	1368c <sigaltstack@plt+0x20a0>
   140cc:	cmp	r0, #0
   140d0:	bne	13f58 <sigaltstack@plt+0x296c>
   140d4:	mov	r9, r0
   140d8:	mov	r6, r8
   140dc:	mov	r4, r0
   140e0:	mov	r0, r7
   140e4:	bl	1146c <strlen@plt>
   140e8:	mov	r5, r0
   140ec:	mov	r0, r6
   140f0:	bl	1146c <strlen@plt>
   140f4:	add	r0, r5, r0
   140f8:	add	r0, r0, #4
   140fc:	bl	155cc <sigaltstack@plt+0x3fe0>
   14100:	mov	r3, r6
   14104:	mov	r2, r7
   14108:	ldr	r1, [pc, #88]	; 14168 <sigaltstack@plt+0x2b7c>
   1410c:	mov	r5, r0
   14110:	bl	1155c <sprintf@plt>
   14114:	cmp	r9, #0
   14118:	beq	14124 <sigaltstack@plt+0x2b38>
   1411c:	mov	r0, r9
   14120:	bl	15c50 <sigaltstack@plt+0x4664>
   14124:	cmp	r4, #0
   14128:	moveq	r7, r5
   1412c:	beq	13f58 <sigaltstack@plt+0x296c>
   14130:	mov	r0, r4
   14134:	bl	15c50 <sigaltstack@plt+0x4664>
   14138:	mov	r7, r5
   1413c:	b	13f58 <sigaltstack@plt+0x296c>
   14140:	mov	r1, r8
   14144:	mov	r0, r7
   14148:	bl	11238 <strcmp@plt>
   1414c:	cmp	r0, #0
   14150:	bne	140c0 <sigaltstack@plt+0x2ad4>
   14154:	mov	r7, r8
   14158:	mov	r0, r7
   1415c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14160:	strdeq	r9, [r1], -ip
   14164:	andeq	r9, r1, r4, lsl #6
   14168:	strdeq	r9, [r1], -r4
   1416c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14170:	mov	r7, r2
   14174:	ldr	r4, [pc, #296]	; 142a4 <sigaltstack@plt+0x2cb8>
   14178:	sub	sp, sp, #20
   1417c:	ldr	r5, [r1, #12]
   14180:	ldr	r3, [r4]
   14184:	cmp	r3, #0
   14188:	beq	141ec <sigaltstack@plt+0x2c00>
   1418c:	mov	r1, #0
   14190:	mov	r0, r5
   14194:	blx	r3
   14198:	cmp	r0, #0
   1419c:	bne	141e4 <sigaltstack@plt+0x2bf8>
   141a0:	ldr	r3, [r4, #4]
   141a4:	cmp	r3, #0
   141a8:	beq	141b8 <sigaltstack@plt+0x2bcc>
   141ac:	ldr	r6, [r4, #8]
   141b0:	cmp	r6, #0
   141b4:	bne	14204 <sigaltstack@plt+0x2c18>
   141b8:	ldr	r3, [r4]
   141bc:	cmp	r3, #0
   141c0:	beq	141d8 <sigaltstack@plt+0x2bec>
   141c4:	mov	r0, r5
   141c8:	mov	r1, #1
   141cc:	blx	r3
   141d0:	cmp	r0, #0
   141d4:	bne	141e4 <sigaltstack@plt+0x2bf8>
   141d8:	mov	r1, #0
   141dc:	mov	r0, #11
   141e0:	bl	112bc <signal@plt>
   141e4:	add	sp, sp, #20
   141e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   141ec:	ldr	r3, [r4, #4]
   141f0:	cmp	r3, #0
   141f4:	beq	141d8 <sigaltstack@plt+0x2bec>
   141f8:	ldr	r6, [r4, #8]
   141fc:	cmp	r6, #0
   14200:	beq	141b8 <sigaltstack@plt+0x2bcc>
   14204:	bl	1149c <__errno_location@plt>
   14208:	mov	r1, sp
   1420c:	mov	r8, r0
   14210:	mov	r0, r6
   14214:	ldr	r9, [r8]
   14218:	ldr	r6, [r7, #84]	; 0x54
   1421c:	bl	1483c <sigaltstack@plt+0x3250>
   14220:	str	r9, [r8]
   14224:	cmp	r0, #0
   14228:	blt	141b8 <sigaltstack@plt+0x2bcc>
   1422c:	ldr	r3, [sp]
   14230:	cmp	r5, r3
   14234:	bcc	14288 <sigaltstack@plt+0x2c9c>
   14238:	ldr	r0, [sp, #4]
   1423c:	sub	r0, r0, #1
   14240:	cmp	r5, r0
   14244:	movhi	r0, #0
   14248:	movls	r0, #1
   1424c:	cmp	r0, #0
   14250:	beq	141b8 <sigaltstack@plt+0x2bcc>
   14254:	ldr	r0, [r4, #12]
   14258:	cmp	r6, r0
   1425c:	movcc	r0, #0
   14260:	bcc	14278 <sigaltstack@plt+0x2c8c>
   14264:	ldr	r3, [r4, #16]
   14268:	add	r0, r0, r3
   1426c:	cmp	r6, r0
   14270:	movhi	r0, #0
   14274:	movls	r0, #1
   14278:	mov	r1, r7
   1427c:	ldr	r3, [r4, #4]
   14280:	blx	r3
   14284:	b	141b8 <sigaltstack@plt+0x2bcc>
   14288:	mov	r1, sp
   1428c:	ldr	r3, [sp, #8]
   14290:	mov	r0, r5
   14294:	blx	r3
   14298:	adds	r0, r0, #0
   1429c:	movne	r0, #1
   142a0:	b	1424c <sigaltstack@plt+0x2c60>
   142a4:	andeq	sl, r3, ip, asr #12
   142a8:	push	{lr}		; (str lr, [sp, #-4]!)
   142ac:	sub	sp, sp, #148	; 0x94
   142b0:	ldr	r3, [pc, #288]	; 143d8 <sigaltstack@plt+0x2dec>
   142b4:	add	r0, sp, #8
   142b8:	str	r3, [sp, #4]
   142bc:	bl	1152c <sigemptyset@plt>
   142c0:	add	r0, sp, #8
   142c4:	mov	r1, #1
   142c8:	bl	11400 <sigaddset@plt>
   142cc:	add	r0, sp, #8
   142d0:	mov	r1, #2
   142d4:	bl	11400 <sigaddset@plt>
   142d8:	add	r0, sp, #8
   142dc:	mov	r1, #3
   142e0:	bl	11400 <sigaddset@plt>
   142e4:	add	r0, sp, #8
   142e8:	mov	r1, #13
   142ec:	bl	11400 <sigaddset@plt>
   142f0:	add	r0, sp, #8
   142f4:	mov	r1, #14
   142f8:	bl	11400 <sigaddset@plt>
   142fc:	add	r0, sp, #8
   14300:	mov	r1, #15
   14304:	bl	11400 <sigaddset@plt>
   14308:	add	r0, sp, #8
   1430c:	mov	r1, #10
   14310:	bl	11400 <sigaddset@plt>
   14314:	add	r0, sp, #8
   14318:	mov	r1, #12
   1431c:	bl	11400 <sigaddset@plt>
   14320:	add	r0, sp, #8
   14324:	mov	r1, #17
   14328:	bl	11400 <sigaddset@plt>
   1432c:	add	r0, sp, #8
   14330:	mov	r1, #17
   14334:	bl	11400 <sigaddset@plt>
   14338:	add	r0, sp, #8
   1433c:	mov	r1, #23
   14340:	bl	11400 <sigaddset@plt>
   14344:	add	r0, sp, #8
   14348:	mov	r1, #29
   1434c:	bl	11400 <sigaddset@plt>
   14350:	add	r0, sp, #8
   14354:	mov	r1, #29
   14358:	bl	11400 <sigaddset@plt>
   1435c:	add	r0, sp, #8
   14360:	mov	r1, #24
   14364:	bl	11400 <sigaddset@plt>
   14368:	add	r0, sp, #8
   1436c:	mov	r1, #25
   14370:	bl	11400 <sigaddset@plt>
   14374:	add	r0, sp, #8
   14378:	mov	r1, #26
   1437c:	bl	11400 <sigaddset@plt>
   14380:	add	r0, sp, #8
   14384:	mov	r1, #27
   14388:	bl	11400 <sigaddset@plt>
   1438c:	add	r0, sp, #8
   14390:	mov	r1, #30
   14394:	bl	11400 <sigaddset@plt>
   14398:	add	r0, sp, #8
   1439c:	mov	r1, #28
   143a0:	bl	11400 <sigaddset@plt>
   143a4:	ldr	r3, [pc, #48]	; 143dc <sigaltstack@plt+0x2df0>
   143a8:	mov	r2, #4
   143ac:	str	r2, [sp, #136]	; 0x88
   143b0:	ldr	r3, [r3, #4]
   143b4:	mov	r2, #0
   143b8:	cmp	r3, #0
   143bc:	add	r1, sp, #4
   143c0:	ldrne	r3, [pc, #24]	; 143e0 <sigaltstack@plt+0x2df4>
   143c4:	mov	r0, #11
   143c8:	strne	r3, [sp, #136]	; 0x88
   143cc:	bl	11364 <sigaction@plt>
   143d0:	add	sp, sp, #148	; 0x94
   143d4:	pop	{pc}		; (ldr pc, [sp], #4)
   143d8:	andeq	r4, r1, ip, ror #2
   143dc:	andeq	sl, r3, ip, asr #12
   143e0:	stmdaeq	r0, {r2}
   143e4:	ldr	r3, [pc, #16]	; 143fc <sigaltstack@plt+0x2e10>
   143e8:	push	{r4, lr}
   143ec:	str	r0, [r3]
   143f0:	bl	142a8 <sigaltstack@plt+0x2cbc>
   143f4:	mov	r0, #0
   143f8:	pop	{r4, pc}
   143fc:	andeq	sl, r3, ip, asr #12
   14400:	ldr	r3, [pc, #24]	; 14420 <sigaltstack@plt+0x2e34>
   14404:	mov	r2, #0
   14408:	ldr	r1, [r3, #4]
   1440c:	str	r2, [r3]
   14410:	cmp	r1, r2
   14414:	bxne	lr
   14418:	mov	r0, #11
   1441c:	b	112bc <signal@plt>
   14420:	andeq	sl, r3, ip, asr #12
   14424:	mov	ip, r1
   14428:	push	{r4, lr}
   1442c:	mov	r1, r2
   14430:	mov	r4, r0
   14434:	mov	r2, r3
   14438:	mov	r0, ip
   1443c:	blx	r4
   14440:	mov	r0, #1
   14444:	pop	{r4, pc}
   14448:	push	{r4, r5, r6, r7, r8, r9, lr}
   1444c:	sub	sp, sp, #28
   14450:	ldr	r5, [pc, #136]	; 144e0 <sigaltstack@plt+0x2ef4>
   14454:	mov	r9, r0
   14458:	mov	r7, r1
   1445c:	ldr	r3, [r5, #8]
   14460:	mov	r6, r2
   14464:	cmp	r3, #0
   14468:	add	r8, sp, #8
   1446c:	bne	14498 <sigaltstack@plt+0x2eac>
   14470:	mov	r1, r8
   14474:	add	r0, sp, #4
   14478:	bl	1483c <sigaltstack@plt+0x3250>
   1447c:	cmp	r0, #0
   14480:	ldrge	r3, [sp, #12]
   14484:	ldrlt	r3, [r5, #8]
   14488:	subge	r3, r3, #1
   1448c:	strge	r3, [r5, #8]
   14490:	cmp	r3, #0
   14494:	beq	144d8 <sigaltstack@plt+0x2eec>
   14498:	mov	r4, #0
   1449c:	mov	r0, r8
   144a0:	mov	r1, r4
   144a4:	str	r9, [r5, #4]
   144a8:	str	r7, [r5, #12]
   144ac:	str	r6, [r5, #16]
   144b0:	str	r7, [sp, #8]
   144b4:	str	r6, [sp, #16]
   144b8:	str	r4, [sp, #12]
   144bc:	bl	115ec <sigaltstack@plt>
   144c0:	cmp	r0, r4
   144c4:	blt	144d8 <sigaltstack@plt+0x2eec>
   144c8:	bl	142a8 <sigaltstack@plt+0x2cbc>
   144cc:	mov	r0, r4
   144d0:	add	sp, sp, #28
   144d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   144d8:	mvn	r0, #0
   144dc:	b	144d0 <sigaltstack@plt+0x2ee4>
   144e0:	andeq	sl, r3, ip, asr #12
   144e4:	ldr	r3, [pc, #92]	; 14548 <sigaltstack@plt+0x2f5c>
   144e8:	mov	r2, #0
   144ec:	push	{lr}		; (str lr, [sp, #-4]!)
   144f0:	sub	sp, sp, #20
   144f4:	ldr	r1, [r3]
   144f8:	str	r2, [r3, #4]
   144fc:	cmp	r1, r2
   14500:	beq	1453c <sigaltstack@plt+0x2f50>
   14504:	bl	142a8 <sigaltstack@plt+0x2cbc>
   14508:	mov	r3, #2
   1450c:	mov	r1, #0
   14510:	add	r0, sp, #4
   14514:	str	r3, [sp, #8]
   14518:	bl	115ec <sigaltstack@plt>
   1451c:	cmp	r0, #0
   14520:	blt	1452c <sigaltstack@plt+0x2f40>
   14524:	add	sp, sp, #20
   14528:	pop	{pc}		; (ldr pc, [sp], #4)
   1452c:	ldr	r0, [pc, #24]	; 1454c <sigaltstack@plt+0x2f60>
   14530:	bl	1134c <perror@plt>
   14534:	add	sp, sp, #20
   14538:	pop	{pc}		; (ldr pc, [sp], #4)
   1453c:	mov	r0, #11
   14540:	bl	112bc <signal@plt>
   14544:	b	14508 <sigaltstack@plt+0x2f1c>
   14548:	andeq	sl, r3, ip, asr #12
   1454c:	andeq	r9, r1, r0, lsl r3
   14550:	ldr	r3, [r1]
   14554:	ldr	r2, [r1, #12]
   14558:	sub	r0, r3, r0
   1455c:	sub	r3, r3, r2
   14560:	cmp	r0, r3, lsr #1
   14564:	movls	r0, #1
   14568:	movhi	r0, #0
   1456c:	bx	lr
   14570:	push	{r4, r5, lr}
   14574:	mov	lr, #0
   14578:	ldm	r0, {r3, r5}
   1457c:	mov	r2, lr
   14580:	b	145a8 <sigaltstack@plt+0x2fbc>
   14584:	ldr	ip, [r0, #12]
   14588:	ldrb	ip, [ip, r3]
   1458c:	sub	r4, ip, #48	; 0x30
   14590:	cmp	r4, #9
   14594:	addls	r2, r4, r2, lsl #4
   14598:	bhi	145cc <sigaltstack@plt+0x2fe0>
   1459c:	add	lr, lr, #1
   145a0:	add	r3, r3, #1
   145a4:	str	r3, [r0]
   145a8:	cmp	r5, r3
   145ac:	bne	14584 <sigaltstack@plt+0x2f98>
   145b0:	mov	r3, #1
   145b4:	str	r3, [r0, #8]
   145b8:	cmp	lr, #0
   145bc:	movne	r0, #0
   145c0:	strne	r2, [r1]
   145c4:	mvneq	r0, #0
   145c8:	pop	{r4, r5, pc}
   145cc:	sub	r4, ip, #65	; 0x41
   145d0:	cmp	r4, #5
   145d4:	add	r4, ip, r2, lsl #4
   145d8:	subls	r2, r4, #55	; 0x37
   145dc:	bls	1459c <sigaltstack@plt+0x2fb0>
   145e0:	sub	r4, ip, #97	; 0x61
   145e4:	cmp	r4, #5
   145e8:	bhi	145b8 <sigaltstack@plt+0x2fcc>
   145ec:	add	r2, ip, r2, lsl #4
   145f0:	sub	r2, r2, #87	; 0x57
   145f4:	b	1459c <sigaltstack@plt+0x2fb0>
   145f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145fc:	sub	sp, sp, #12
   14600:	ldr	r4, [r1]
   14604:	rsb	r3, r4, r0, lsl #1
   14608:	cmp	r0, r3
   1460c:	bcs	1461c <sigaltstack@plt+0x3030>
   14610:	mov	r0, #0
   14614:	add	sp, sp, #12
   14618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1461c:	ldr	r2, [pc, #164]	; 146c8 <sigaltstack@plt+0x30dc>
   14620:	mov	r0, r3
   14624:	ldr	r7, [r2]
   14628:	mov	r1, r7
   1462c:	bl	17f54 <sigaltstack@plt+0x6968>
   14630:	mov	r1, r7
   14634:	mul	sl, r7, r0
   14638:	sub	r0, r4, #1
   1463c:	bl	17f54 <sigaltstack@plt+0x6968>
   14640:	mov	r1, r7
   14644:	mla	r0, r0, r7, r7
   14648:	sub	r0, r0, sl
   1464c:	bl	17f54 <sigaltstack@plt+0x6968>
   14650:	cmp	r0, #1
   14654:	mov	r6, r0
   14658:	movhi	r3, #1
   1465c:	bls	146c0 <sigaltstack@plt+0x30d4>
   14660:	lsl	r3, r3, #1
   14664:	cmp	r6, r3
   14668:	bhi	14660 <sigaltstack@plt+0x3074>
   1466c:	lsrs	r9, r3, #1
   14670:	beq	146c0 <sigaltstack@plt+0x30d4>
   14674:	mul	r8, r9, r7
   14678:	cmp	r6, r9
   1467c:	add	r4, sl, r8
   14680:	bichi	fp, r3, #1
   14684:	lslhi	r8, r8, #1
   14688:	movhi	r5, r9
   1468c:	bls	146b8 <sigaltstack@plt+0x30cc>
   14690:	mov	r0, r4
   14694:	add	r2, sp, #4
   14698:	mov	r1, r7
   1469c:	bl	11580 <mincore@plt>
   146a0:	add	r5, r5, fp
   146a4:	add	r4, r4, r8
   146a8:	cmp	r0, #0
   146ac:	bge	14610 <sigaltstack@plt+0x3024>
   146b0:	cmp	r6, r5
   146b4:	bhi	14690 <sigaltstack@plt+0x30a4>
   146b8:	mov	r3, r9
   146bc:	b	1466c <sigaltstack@plt+0x3080>
   146c0:	mov	r0, #1
   146c4:	b	14614 <sigaltstack@plt+0x3028>
   146c8:	andeq	sl, r3, r0, ror #12
   146cc:	push	{r4, r5, r6, r7, r8, lr}
   146d0:	subs	r5, r0, #0
   146d4:	sub	sp, sp, #1024	; 0x400
   146d8:	beq	14770 <sigaltstack@plt+0x3184>
   146dc:	ldr	r3, [pc, #156]	; 14780 <sigaltstack@plt+0x3194>
   146e0:	mov	r4, #1024	; 0x400
   146e4:	ldr	r7, [r3]
   146e8:	b	146f4 <sigaltstack@plt+0x3108>
   146ec:	subs	r5, r6, #0
   146f0:	beq	14770 <sigaltstack@plt+0x3184>
   146f4:	mov	r1, r7
   146f8:	mov	r0, r5
   146fc:	bl	17f54 <sigaltstack@plt+0x6968>
   14700:	mov	r2, sp
   14704:	cmp	r4, r0
   14708:	movcs	r4, r0
   1470c:	mul	r1, r7, r4
   14710:	sub	r6, r5, r1
   14714:	mov	r0, r6
   14718:	bl	11580 <mincore@plt>
   1471c:	cmp	r0, #0
   14720:	bge	146ec <sigaltstack@plt+0x3100>
   14724:	cmp	r4, #1
   14728:	beq	14764 <sigaltstack@plt+0x3178>
   1472c:	add	r6, r4, #1
   14730:	mov	r2, sp
   14734:	lsr	r6, r6, #1
   14738:	lsr	r4, r4, #1
   1473c:	mul	r1, r7, r6
   14740:	sub	r8, r5, r1
   14744:	mov	r0, r8
   14748:	bl	11580 <mincore@plt>
   1474c:	cmp	r0, #0
   14750:	movge	r5, r8
   14754:	bge	14724 <sigaltstack@plt+0x3138>
   14758:	mov	r4, r6
   1475c:	cmp	r4, #1
   14760:	bne	1472c <sigaltstack@plt+0x3140>
   14764:	mov	r0, r5
   14768:	add	sp, sp, #1024	; 0x400
   1476c:	pop	{r4, r5, r6, r7, r8, pc}
   14770:	mov	r5, #0
   14774:	mov	r0, r5
   14778:	add	sp, sp, #1024	; 0x400
   1477c:	pop	{r4, r5, r6, r7, r8, pc}
   14780:	andeq	sl, r3, r0, ror #12
   14784:	ldr	r3, [pc, #172]	; 14838 <sigaltstack@plt+0x324c>
   14788:	push	{r4, r5, r6, r7, r8, lr}
   1478c:	sub	sp, sp, #1024	; 0x400
   14790:	ldr	r7, [r3]
   14794:	adds	r4, r7, r0
   14798:	beq	14828 <sigaltstack@plt+0x323c>
   1479c:	mov	r5, #1024	; 0x400
   147a0:	b	147ac <sigaltstack@plt+0x31c0>
   147a4:	adds	r4, r4, r6
   147a8:	beq	14828 <sigaltstack@plt+0x323c>
   147ac:	mov	r1, r7
   147b0:	rsb	r0, r4, #0
   147b4:	bl	17f54 <sigaltstack@plt+0x6968>
   147b8:	mov	r2, sp
   147bc:	cmp	r5, r0
   147c0:	movcs	r5, r0
   147c4:	mov	r0, r4
   147c8:	mul	r6, r7, r5
   147cc:	mov	r1, r6
   147d0:	bl	11580 <mincore@plt>
   147d4:	cmp	r0, #0
   147d8:	bge	147a4 <sigaltstack@plt+0x31b8>
   147dc:	cmp	r5, #1
   147e0:	beq	1481c <sigaltstack@plt+0x3230>
   147e4:	add	r6, r5, #1
   147e8:	mov	r0, r4
   147ec:	lsr	r6, r6, #1
   147f0:	mov	r2, sp
   147f4:	mul	r8, r6, r7
   147f8:	lsr	r5, r5, #1
   147fc:	mov	r1, r8
   14800:	bl	11580 <mincore@plt>
   14804:	cmp	r0, #0
   14808:	addge	r4, r4, r8
   1480c:	bge	147dc <sigaltstack@plt+0x31f0>
   14810:	mov	r5, r6
   14814:	cmp	r5, #1
   14818:	bne	147e4 <sigaltstack@plt+0x31f8>
   1481c:	mov	r0, r4
   14820:	add	sp, sp, #1024	; 0x400
   14824:	pop	{r4, r5, r6, r7, r8, pc}
   14828:	mov	r4, #0
   1482c:	mov	r0, r4
   14830:	add	sp, sp, #1024	; 0x400
   14834:	pop	{r4, r5, r6, r7, r8, pc}
   14838:	andeq	sl, r3, r0, ror #12
   1483c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14840:	sub	sp, sp, #76	; 0x4c
   14844:	mov	r8, r0
   14848:	str	r1, [sp, #16]
   1484c:	ldr	r0, [pc, #960]	; 14c14 <sigaltstack@plt+0x3628>
   14850:	mov	r1, #0
   14854:	bl	113b8 <open64@plt>
   14858:	subs	r6, r0, #0
   1485c:	blt	1495c <sigaltstack@plt+0x3370>
   14860:	ldr	r5, [pc, #944]	; 14c18 <sigaltstack@plt+0x362c>
   14864:	mov	r3, #0
   14868:	mov	r4, #1
   1486c:	mvn	fp, #0
   14870:	mov	sl, #34	; 0x22
   14874:	mov	r7, r3
   14878:	str	r3, [sp, #36]	; 0x24
   1487c:	str	r3, [sp, #44]	; 0x2c
   14880:	str	r3, [sp, #52]	; 0x34
   14884:	str	r3, [sp, #60]	; 0x3c
   14888:	str	r3, [sp, #64]	; 0x40
   1488c:	add	r3, sp, #68	; 0x44
   14890:	str	r3, [sp, #48]	; 0x30
   14894:	cmp	r4, r5
   14898:	bhi	149d8 <sigaltstack@plt+0x33ec>
   1489c:	cmp	r7, #0
   148a0:	bne	149b8 <sigaltstack@plt+0x33cc>
   148a4:	bl	11490 <getpagesize@plt>
   148a8:	cmp	r0, r5
   148ac:	mov	r7, r0
   148b0:	mov	r4, r0
   148b4:	bhi	148c4 <sigaltstack@plt+0x32d8>
   148b8:	lsl	r4, r4, #1
   148bc:	cmp	r4, r5
   148c0:	bls	148b8 <sigaltstack@plt+0x32cc>
   148c4:	mov	r2, #0
   148c8:	mov	r3, #0
   148cc:	str	fp, [sp]
   148d0:	strd	r2, [sp, #8]
   148d4:	mov	r1, r4
   148d8:	mov	r3, sl
   148dc:	mov	r2, #3
   148e0:	mov	r0, #0
   148e4:	bl	112a4 <mmap64@plt>
   148e8:	cmn	r0, #1
   148ec:	str	r0, [sp, #52]	; 0x34
   148f0:	beq	14c08 <sigaltstack@plt+0x361c>
   148f4:	add	r3, r4, r0
   148f8:	str	r4, [sp, #56]	; 0x38
   148fc:	str	r0, [sp, #60]	; 0x3c
   14900:	str	r0, [sp, #48]	; 0x30
   14904:	str	r3, [sp, #64]	; 0x40
   14908:	mov	r9, #0
   1490c:	mov	r3, #0
   14910:	str	r9, [sp]
   14914:	mov	r2, #0
   14918:	mov	r0, r6
   1491c:	bl	1137c <lseek64@plt>
   14920:	cmp	r0, #0
   14924:	sbcs	r3, r1, #0
   14928:	bge	14894 <sigaltstack@plt+0x32a8>
   1492c:	mov	r0, r6
   14930:	bl	115d4 <close@plt>
   14934:	mov	r1, r9
   14938:	ldr	r0, [pc, #724]	; 14c14 <sigaltstack@plt+0x3628>
   1493c:	bl	113b8 <open64@plt>
   14940:	subs	r6, r0, #0
   14944:	bge	14894 <sigaltstack@plt+0x32a8>
   14948:	ldr	r0, [sp, #52]	; 0x34
   1494c:	cmp	r0, #0
   14950:	beq	1495c <sigaltstack@plt+0x3370>
   14954:	ldr	r1, [sp, #56]	; 0x38
   14958:	bl	114f0 <munmap@plt>
   1495c:	ldr	r5, [pc, #696]	; 14c1c <sigaltstack@plt+0x3630>
   14960:	ldr	r4, [r5]
   14964:	cmp	r4, #0
   14968:	bne	14978 <sigaltstack@plt+0x338c>
   1496c:	bl	11490 <getpagesize@plt>
   14970:	mov	r4, r0
   14974:	str	r0, [r5]
   14978:	mov	r1, r4
   1497c:	mov	r0, r8
   14980:	bl	17f54 <sigaltstack@plt+0x6968>
   14984:	mul	r4, r4, r0
   14988:	mov	r0, r4
   1498c:	bl	146cc <sigaltstack@plt+0x30e0>
   14990:	ldr	r5, [sp, #16]
   14994:	str	r0, [r5]
   14998:	mov	r0, r4
   1499c:	bl	14784 <sigaltstack@plt+0x3198>
   149a0:	ldr	r3, [pc, #632]	; 14c20 <sigaltstack@plt+0x3634>
   149a4:	str	r3, [r5, #8]
   149a8:	str	r0, [r5, #4]
   149ac:	mov	r0, #0
   149b0:	add	sp, sp, #76	; 0x4c
   149b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149b8:	lsls	r4, r4, #1
   149bc:	beq	14a5c <sigaltstack@plt+0x3470>
   149c0:	ldr	r0, [sp, #52]	; 0x34
   149c4:	cmp	r0, #0
   149c8:	beq	148c4 <sigaltstack@plt+0x32d8>
   149cc:	ldr	r1, [sp, #56]	; 0x38
   149d0:	bl	114f0 <munmap@plt>
   149d4:	b	148c4 <sigaltstack@plt+0x32d8>
   149d8:	ldr	r1, [sp, #48]	; 0x30
   149dc:	mov	r2, r4
   149e0:	mov	r0, r6
   149e4:	bl	11250 <read@plt>
   149e8:	subs	r1, r0, #0
   149ec:	blt	14a4c <sigaltstack@plt+0x3460>
   149f0:	beq	14a5c <sigaltstack@plt+0x3470>
   149f4:	add	r3, r1, #4160	; 0x1040
   149f8:	add	r3, r3, #9
   149fc:	cmp	r3, r4
   14a00:	bhi	1489c <sigaltstack@plt+0x32b0>
   14a04:	b	14a24 <sigaltstack@plt+0x3438>
   14a08:	ldr	r1, [sp, #40]	; 0x28
   14a0c:	sub	r2, r4, r1
   14a10:	cmp	r3, r2
   14a14:	add	r1, r0, r1
   14a18:	bhi	1489c <sigaltstack@plt+0x32b0>
   14a1c:	cmp	r0, #0
   14a20:	beq	14a68 <sigaltstack@plt+0x347c>
   14a24:	ldr	r3, [sp, #48]	; 0x30
   14a28:	str	r1, [sp, #40]	; 0x28
   14a2c:	sub	r2, r4, r1
   14a30:	mov	r0, r6
   14a34:	add	r1, r3, r1
   14a38:	bl	11250 <read@plt>
   14a3c:	cmp	r0, #0
   14a40:	add	r3, r0, #4160	; 0x1040
   14a44:	add	r3, r3, #9
   14a48:	bge	14a08 <sigaltstack@plt+0x341c>
   14a4c:	bl	1149c <__errno_location@plt>
   14a50:	ldr	r3, [r0]
   14a54:	cmp	r3, #4
   14a58:	beq	14908 <sigaltstack@plt+0x331c>
   14a5c:	mov	r0, r6
   14a60:	bl	115d4 <close@plt>
   14a64:	b	14948 <sigaltstack@plt+0x335c>
   14a68:	str	r0, [sp, #20]
   14a6c:	mov	r0, r6
   14a70:	bl	115d4 <close@plt>
   14a74:	ldr	r6, [sp, #60]	; 0x3c
   14a78:	ldr	r9, [sp, #64]	; 0x40
   14a7c:	ldr	r3, [sp, #20]
   14a80:	sub	sl, r6, #1
   14a84:	mov	r4, r3
   14a88:	sub	r7, r9, #1
   14a8c:	mov	r5, #1
   14a90:	add	r1, sp, #28
   14a94:	add	r0, sp, #36	; 0x24
   14a98:	bl	14570 <sigaltstack@plt+0x2f84>
   14a9c:	cmp	r0, #0
   14aa0:	blt	14948 <sigaltstack@plt+0x335c>
   14aa4:	ldr	r3, [sp, #36]	; 0x24
   14aa8:	ldr	r2, [sp, #40]	; 0x28
   14aac:	cmp	r3, r2
   14ab0:	beq	14bd0 <sigaltstack@plt+0x35e4>
   14ab4:	ldr	r1, [sp, #48]	; 0x30
   14ab8:	add	r2, r3, #1
   14abc:	ldrb	r3, [r1, r3]
   14ac0:	str	r2, [sp, #36]	; 0x24
   14ac4:	cmp	r3, #45	; 0x2d
   14ac8:	bne	14948 <sigaltstack@plt+0x335c>
   14acc:	add	r1, sp, #32
   14ad0:	add	r0, sp, #36	; 0x24
   14ad4:	bl	14570 <sigaltstack@plt+0x2f84>
   14ad8:	cmp	r0, #0
   14adc:	blt	14948 <sigaltstack@plt+0x335c>
   14ae0:	ldr	r0, [sp, #48]	; 0x30
   14ae4:	ldr	r3, [sp, #36]	; 0x24
   14ae8:	ldr	r1, [sp, #40]	; 0x28
   14aec:	add	r3, r0, r3
   14af0:	add	r1, r0, r1
   14af4:	cmp	r3, r1
   14af8:	beq	14b18 <sigaltstack@plt+0x352c>
   14afc:	ldrb	r2, [r3], #1
   14b00:	cmp	r2, #10
   14b04:	sub	r2, r3, r0
   14b08:	str	r2, [sp, #36]	; 0x24
   14b0c:	beq	14b1c <sigaltstack@plt+0x3530>
   14b10:	cmp	r3, r1
   14b14:	bne	14afc <sigaltstack@plt+0x3510>
   14b18:	str	r5, [sp, #44]	; 0x2c
   14b1c:	ldr	r3, [sp, #28]
   14b20:	ldr	r2, [sp, #32]
   14b24:	cmp	r6, r3
   14b28:	bcc	14b80 <sigaltstack@plt+0x3594>
   14b2c:	sub	r1, r2, #1
   14b30:	cmp	r7, r1
   14b34:	bhi	14b80 <sigaltstack@plt+0x3594>
   14b38:	cmp	r6, r3
   14b3c:	bls	14b54 <sigaltstack@plt+0x3568>
   14b40:	cmp	r8, r3
   14b44:	bcc	14b50 <sigaltstack@plt+0x3564>
   14b48:	cmp	r8, sl
   14b4c:	bls	14be4 <sigaltstack@plt+0x35f8>
   14b50:	mov	r4, r6
   14b54:	cmp	r7, r1
   14b58:	bcs	14bdc <sigaltstack@plt+0x35f0>
   14b5c:	cmp	r8, r9
   14b60:	movcc	r3, #0
   14b64:	movcs	r3, #1
   14b68:	cmp	r8, r1
   14b6c:	movhi	r3, #0
   14b70:	cmp	r3, #0
   14b74:	bne	14bf4 <sigaltstack@plt+0x3608>
   14b78:	mov	r4, r2
   14b7c:	b	14a90 <sigaltstack@plt+0x34a4>
   14b80:	cmp	r8, r3
   14b84:	bcc	14b78 <sigaltstack@plt+0x358c>
   14b88:	sub	r1, r2, #1
   14b8c:	cmp	r8, r1
   14b90:	bhi	14b78 <sigaltstack@plt+0x358c>
   14b94:	ldr	r1, [sp, #16]
   14b98:	str	r3, [r1]
   14b9c:	str	r2, [r1, #4]
   14ba0:	str	r4, [r1, #12]
   14ba4:	ldr	r0, [sp, #52]	; 0x34
   14ba8:	cmp	r0, #0
   14bac:	beq	14bb8 <sigaltstack@plt+0x35cc>
   14bb0:	ldr	r1, [sp, #56]	; 0x38
   14bb4:	bl	114f0 <munmap@plt>
   14bb8:	ldr	r2, [sp, #16]
   14bbc:	ldr	r3, [pc, #96]	; 14c24 <sigaltstack@plt+0x3638>
   14bc0:	mov	r0, #0
   14bc4:	str	r3, [r2, #8]
   14bc8:	add	sp, sp, #76	; 0x4c
   14bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bd0:	mov	r3, #1
   14bd4:	str	r3, [sp, #44]	; 0x2c
   14bd8:	b	14948 <sigaltstack@plt+0x335c>
   14bdc:	mov	r2, r4
   14be0:	b	14b78 <sigaltstack@plt+0x358c>
   14be4:	ldr	r2, [sp, #16]
   14be8:	stm	r2, {r3, r6}
   14bec:	str	r4, [r2, #12]
   14bf0:	b	14ba4 <sigaltstack@plt+0x35b8>
   14bf4:	ldr	r3, [sp, #16]
   14bf8:	str	r9, [r3]
   14bfc:	str	r2, [r3, #4]
   14c00:	str	r4, [r3, #12]
   14c04:	b	14ba4 <sigaltstack@plt+0x35b8>
   14c08:	mov	r0, r6
   14c0c:	bl	115d4 <close@plt>
   14c10:	b	1495c <sigaltstack@plt+0x3370>
   14c14:	andeq	r9, r1, r4, asr #6
   14c18:	andeq	r1, r0, r9, asr #32
   14c1c:	andeq	sl, r3, r0, ror #12
   14c20:	strdeq	r4, [r1], -r8
   14c24:	andeq	r4, r1, r0, asr r5
   14c28:	push	{r4, r5, r6, lr}
   14c2c:	mov	r2, r1
   14c30:	mov	r4, r1
   14c34:	mov	r1, #0
   14c38:	mov	r5, r0
   14c3c:	bl	114c0 <memchr@plt>
   14c40:	cmp	r0, #0
   14c44:	subne	r0, r0, r5
   14c48:	addne	r0, r0, #1
   14c4c:	moveq	r0, r4
   14c50:	pop	{r4, r5, r6, pc}
   14c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c58:	sub	sp, sp, #76	; 0x4c
   14c5c:	mov	r7, r1
   14c60:	bl	112f8 <strdup@plt>
   14c64:	subs	r9, r0, #0
   14c68:	beq	150f8 <sigaltstack@plt+0x3b0c>
   14c6c:	bl	11394 <__ctype_get_mb_cur_max@plt>
   14c70:	cmp	r0, #1
   14c74:	bls	14ec0 <sigaltstack@plt+0x38d4>
   14c78:	cmp	r7, #0
   14c7c:	bne	14f70 <sigaltstack@plt+0x3984>
   14c80:	add	r8, sp, #20
   14c84:	mov	r0, r9
   14c88:	str	r9, [sp, #32]
   14c8c:	bl	1146c <strlen@plt>
   14c90:	mov	r5, #0
   14c94:	str	r5, [sp, #20]
   14c98:	strb	r5, [sp, #16]
   14c9c:	str	r5, [r8, #4]
   14ca0:	strb	r5, [sp, #28]
   14ca4:	add	fp, r9, r0
   14ca8:	cmp	r9, fp
   14cac:	str	fp, [sp, #12]
   14cb0:	movcc	r7, r5
   14cb4:	movcc	r4, r9
   14cb8:	movcc	r6, #1
   14cbc:	bcc	14d04 <sigaltstack@plt+0x3718>
   14cc0:	b	14e98 <sigaltstack@plt+0x38ac>
   14cc4:	cmp	r5, #1
   14cc8:	beq	14e00 <sigaltstack@plt+0x3814>
   14ccc:	cmp	r5, #2
   14cd0:	bne	14d74 <sigaltstack@plt+0x3788>
   14cd4:	ldrb	r1, [sp, #40]	; 0x28
   14cd8:	cmp	r1, #0
   14cdc:	beq	14d74 <sigaltstack@plt+0x3788>
   14ce0:	ldr	r0, [sp, #44]	; 0x2c
   14ce4:	bl	11460 <iswspace@plt>
   14ce8:	cmp	r0, #0
   14cec:	moveq	r5, #1
   14cf0:	add	r4, r4, sl
   14cf4:	cmp	r4, fp
   14cf8:	str	r4, [sp, #32]
   14cfc:	strb	r7, [sp, #28]
   14d00:	bcs	14ea4 <sigaltstack@plt+0x38b8>
   14d04:	ldrb	r3, [sp, #16]
   14d08:	cmp	r3, #0
   14d0c:	bne	14d90 <sigaltstack@plt+0x37a4>
   14d10:	ldrb	r1, [r4]
   14d14:	ldr	r3, [pc, #1012]	; 15110 <sigaltstack@plt+0x3b24>
   14d18:	and	r0, r1, #31
   14d1c:	lsr	r1, r1, #5
   14d20:	ldr	r3, [r3, r1, lsl #2]
   14d24:	lsr	r3, r3, r0
   14d28:	ands	sl, r3, #1
   14d2c:	beq	14d7c <sigaltstack@plt+0x3790>
   14d30:	str	r6, [sp, #36]	; 0x24
   14d34:	ldr	fp, [sp, #12]
   14d38:	ldrb	r1, [r4]
   14d3c:	ldr	r4, [sp, #32]
   14d40:	strb	r6, [sp, #40]	; 0x28
   14d44:	str	r1, [sp, #44]	; 0x2c
   14d48:	cmp	r5, #0
   14d4c:	strb	r6, [sp, #28]
   14d50:	bne	14cc4 <sigaltstack@plt+0x36d8>
   14d54:	ldrb	r1, [sp, #40]	; 0x28
   14d58:	cmp	r1, #0
   14d5c:	beq	14d74 <sigaltstack@plt+0x3788>
   14d60:	ldr	r0, [sp, #44]	; 0x2c
   14d64:	bl	11460 <iswspace@plt>
   14d68:	clz	r5, r0
   14d6c:	lsr	r5, r5, #5
   14d70:	b	14cf0 <sigaltstack@plt+0x3704>
   14d74:	mov	r5, #1
   14d78:	b	14cf0 <sigaltstack@plt+0x3704>
   14d7c:	mov	r0, r8
   14d80:	bl	112b0 <mbsinit@plt>
   14d84:	cmp	r0, #0
   14d88:	beq	150d0 <sigaltstack@plt+0x3ae4>
   14d8c:	strb	r6, [sp, #16]
   14d90:	sub	r2, fp, r4
   14d94:	mov	r1, r4
   14d98:	mov	r3, r8
   14d9c:	add	r0, sp, #44	; 0x2c
   14da0:	bl	15cd4 <sigaltstack@plt+0x46e8>
   14da4:	cmn	r0, #1
   14da8:	str	r0, [sp, #36]	; 0x24
   14dac:	beq	14e2c <sigaltstack@plt+0x3840>
   14db0:	cmn	r0, #2
   14db4:	beq	14e44 <sigaltstack@plt+0x3858>
   14db8:	cmp	r0, #0
   14dbc:	ldr	r4, [sp, #32]
   14dc0:	bne	14de0 <sigaltstack@plt+0x37f4>
   14dc4:	str	r6, [sp, #36]	; 0x24
   14dc8:	ldrb	r3, [r4]
   14dcc:	cmp	r3, #0
   14dd0:	bne	150e4 <sigaltstack@plt+0x3af8>
   14dd4:	ldr	r3, [sp, #44]	; 0x2c
   14dd8:	cmp	r3, #0
   14ddc:	bne	150fc <sigaltstack@plt+0x3b10>
   14de0:	mov	r0, r8
   14de4:	strb	r6, [sp, #40]	; 0x28
   14de8:	bl	112b0 <mbsinit@plt>
   14dec:	ldr	fp, [sp, #12]
   14df0:	ldr	sl, [sp, #36]	; 0x24
   14df4:	cmp	r0, #0
   14df8:	strbne	r7, [sp, #16]
   14dfc:	b	14d48 <sigaltstack@plt+0x375c>
   14e00:	ldrb	r1, [sp, #40]	; 0x28
   14e04:	cmp	r1, #0
   14e08:	beq	14cf0 <sigaltstack@plt+0x3704>
   14e0c:	ldr	r0, [sp, #44]	; 0x2c
   14e10:	bl	11460 <iswspace@plt>
   14e14:	ldr	r3, [sp, #4]
   14e18:	cmp	r0, #0
   14e1c:	movne	r3, r4
   14e20:	str	r3, [sp, #4]
   14e24:	movne	r5, #2
   14e28:	b	14cf0 <sigaltstack@plt+0x3704>
   14e2c:	str	r6, [sp, #36]	; 0x24
   14e30:	strb	r7, [sp, #40]	; 0x28
   14e34:	ldr	fp, [sp, #12]
   14e38:	ldr	r4, [sp, #32]
   14e3c:	mov	sl, #1
   14e40:	b	14d48 <sigaltstack@plt+0x375c>
   14e44:	ldr	fp, [sp, #12]
   14e48:	ldr	r4, [sp, #32]
   14e4c:	strb	r7, [sp, #40]	; 0x28
   14e50:	sub	sl, fp, r4
   14e54:	str	sl, [sp, #36]	; 0x24
   14e58:	b	14d48 <sigaltstack@plt+0x375c>
   14e5c:	ldr	r4, [sp, #32]
   14e60:	mov	r2, #1
   14e64:	mov	r3, #0
   14e68:	str	r2, [sp, #36]	; 0x24
   14e6c:	strb	r3, [sp, #40]	; 0x28
   14e70:	mov	r3, #1
   14e74:	strb	r3, [sp, #28]
   14e78:	mov	r0, r4
   14e7c:	bl	1146c <strlen@plt>
   14e80:	mov	r1, r4
   14e84:	add	r2, r0, #1
   14e88:	mov	r0, r9
   14e8c:	bl	11268 <memmove@plt>
   14e90:	cmp	r7, #1
   14e94:	bne	14c84 <sigaltstack@plt+0x3698>
   14e98:	mov	r0, r9
   14e9c:	add	sp, sp, #76	; 0x4c
   14ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ea4:	cmp	r5, #2
   14ea8:	bne	14e98 <sigaltstack@plt+0x38ac>
   14eac:	ldr	r3, [sp, #4]
   14eb0:	mov	r0, r9
   14eb4:	strb	r7, [r3]
   14eb8:	add	sp, sp, #76	; 0x4c
   14ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ec0:	cmp	r7, #0
   14ec4:	beq	14f20 <sigaltstack@plt+0x3934>
   14ec8:	ldrb	r4, [r9]
   14ecc:	cmp	r4, #0
   14ed0:	beq	150c8 <sigaltstack@plt+0x3adc>
   14ed4:	bl	11448 <__ctype_b_loc@plt>
   14ed8:	mov	r5, r9
   14edc:	ldr	r2, [r0]
   14ee0:	b	14ef0 <sigaltstack@plt+0x3904>
   14ee4:	ldrb	r4, [r5, #1]!
   14ee8:	cmp	r4, #0
   14eec:	beq	14f00 <sigaltstack@plt+0x3914>
   14ef0:	lsl	r4, r4, #1
   14ef4:	ldrh	r3, [r2, r4]
   14ef8:	tst	r3, #8192	; 0x2000
   14efc:	bne	14ee4 <sigaltstack@plt+0x38f8>
   14f00:	mov	r0, r5
   14f04:	bl	1146c <strlen@plt>
   14f08:	mov	r1, r5
   14f0c:	add	r2, r0, #1
   14f10:	mov	r0, r9
   14f14:	bl	11268 <memmove@plt>
   14f18:	cmp	r7, #1
   14f1c:	beq	14e98 <sigaltstack@plt+0x38ac>
   14f20:	mov	r0, r9
   14f24:	bl	1146c <strlen@plt>
   14f28:	sub	r0, r0, #1
   14f2c:	adds	r4, r9, r0
   14f30:	bcs	14e98 <sigaltstack@plt+0x38ac>
   14f34:	bl	11448 <__ctype_b_loc@plt>
   14f38:	mov	r1, #0
   14f3c:	ldr	r2, [r0]
   14f40:	b	14f50 <sigaltstack@plt+0x3964>
   14f44:	strb	r1, [r4], #-1
   14f48:	cmp	r9, r4
   14f4c:	bhi	14e98 <sigaltstack@plt+0x38ac>
   14f50:	ldrb	r3, [r4]
   14f54:	lsl	r3, r3, #1
   14f58:	ldrh	r3, [r2, r3]
   14f5c:	tst	r3, #8192	; 0x2000
   14f60:	bne	14f44 <sigaltstack@plt+0x3958>
   14f64:	mov	r0, r9
   14f68:	add	sp, sp, #76	; 0x4c
   14f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f70:	mov	r0, r9
   14f74:	str	r9, [sp, #32]
   14f78:	bl	1146c <strlen@plt>
   14f7c:	add	r8, sp, #20
   14f80:	mov	r6, #0
   14f84:	str	r6, [sp, #20]
   14f88:	strb	r6, [sp, #16]
   14f8c:	str	r6, [r8, #4]
   14f90:	strb	r6, [sp, #28]
   14f94:	add	fp, r9, r0
   14f98:	cmp	r9, fp
   14f9c:	str	fp, [sp, #12]
   14fa0:	movcs	r4, r9
   14fa4:	bcs	14e78 <sigaltstack@plt+0x388c>
   14fa8:	ldr	sl, [pc, #352]	; 15110 <sigaltstack@plt+0x3b24>
   14fac:	mov	r4, r9
   14fb0:	mov	r5, #1
   14fb4:	b	1501c <sigaltstack@plt+0x3a30>
   14fb8:	ldrb	r3, [r4]
   14fbc:	and	r1, r3, #31
   14fc0:	lsr	r3, r3, #5
   14fc4:	ldr	r3, [sl, r3, lsl #2]
   14fc8:	lsr	r3, r3, r1
   14fcc:	tst	r3, #1
   14fd0:	beq	15090 <sigaltstack@plt+0x3aa4>
   14fd4:	str	r5, [sp, #36]	; 0x24
   14fd8:	ldrb	r3, [r4]
   14fdc:	ldr	r4, [sp, #32]
   14fe0:	strb	r5, [sp, #40]	; 0x28
   14fe4:	mov	fp, r3
   14fe8:	str	r3, [sp, #44]	; 0x2c
   14fec:	mov	r0, fp
   14ff0:	strb	r5, [sp, #28]
   14ff4:	bl	11460 <iswspace@plt>
   14ff8:	cmp	r0, #0
   14ffc:	beq	14e78 <sigaltstack@plt+0x388c>
   15000:	ldr	r3, [sp, #36]	; 0x24
   15004:	ldr	fp, [sp, #12]
   15008:	add	r4, r4, r3
   1500c:	cmp	fp, r4
   15010:	strb	r6, [sp, #28]
   15014:	str	r4, [sp, #32]
   15018:	bls	14e78 <sigaltstack@plt+0x388c>
   1501c:	ldrb	r3, [sp, #16]
   15020:	cmp	r3, #0
   15024:	beq	14fb8 <sigaltstack@plt+0x39cc>
   15028:	sub	r2, fp, r4
   1502c:	mov	r1, r4
   15030:	mov	r3, r8
   15034:	add	r0, sp, #44	; 0x2c
   15038:	bl	15cd4 <sigaltstack@plt+0x46e8>
   1503c:	cmn	r0, #1
   15040:	str	r0, [sp, #36]	; 0x24
   15044:	beq	14e5c <sigaltstack@plt+0x3870>
   15048:	cmn	r0, #2
   1504c:	ldr	r4, [sp, #32]
   15050:	beq	150b0 <sigaltstack@plt+0x3ac4>
   15054:	cmp	r0, #0
   15058:	bne	150a8 <sigaltstack@plt+0x3abc>
   1505c:	str	r5, [sp, #36]	; 0x24
   15060:	ldrb	r3, [r4]
   15064:	cmp	r3, #0
   15068:	bne	150e4 <sigaltstack@plt+0x3af8>
   1506c:	ldr	fp, [sp, #44]	; 0x2c
   15070:	cmp	fp, #0
   15074:	bne	150fc <sigaltstack@plt+0x3b10>
   15078:	mov	r0, r8
   1507c:	strb	r5, [sp, #40]	; 0x28
   15080:	bl	112b0 <mbsinit@plt>
   15084:	cmp	r0, #0
   15088:	strbne	r6, [sp, #16]
   1508c:	b	14fec <sigaltstack@plt+0x3a00>
   15090:	mov	r0, r8
   15094:	bl	112b0 <mbsinit@plt>
   15098:	cmp	r0, #0
   1509c:	beq	150d0 <sigaltstack@plt+0x3ae4>
   150a0:	strb	r5, [sp, #16]
   150a4:	b	15028 <sigaltstack@plt+0x3a3c>
   150a8:	ldr	fp, [sp, #44]	; 0x2c
   150ac:	b	15078 <sigaltstack@plt+0x3a8c>
   150b0:	ldr	r3, [sp, #12]
   150b4:	mov	r2, #0
   150b8:	sub	r3, r3, r4
   150bc:	str	r3, [sp, #36]	; 0x24
   150c0:	strb	r2, [sp, #40]	; 0x28
   150c4:	b	14e70 <sigaltstack@plt+0x3884>
   150c8:	mov	r5, r9
   150cc:	b	14f00 <sigaltstack@plt+0x3914>
   150d0:	ldr	r3, [pc, #60]	; 15114 <sigaltstack@plt+0x3b28>
   150d4:	mov	r2, #135	; 0x87
   150d8:	ldr	r1, [pc, #56]	; 15118 <sigaltstack@plt+0x3b2c>
   150dc:	ldr	r0, [pc, #56]	; 1511c <sigaltstack@plt+0x3b30>
   150e0:	bl	115e0 <__assert_fail@plt>
   150e4:	ldr	r3, [pc, #40]	; 15114 <sigaltstack@plt+0x3b28>
   150e8:	mov	r2, #162	; 0xa2
   150ec:	ldr	r1, [pc, #36]	; 15118 <sigaltstack@plt+0x3b2c>
   150f0:	ldr	r0, [pc, #40]	; 15120 <sigaltstack@plt+0x3b34>
   150f4:	bl	115e0 <__assert_fail@plt>
   150f8:	bl	15af0 <sigaltstack@plt+0x4504>
   150fc:	ldr	r3, [pc, #16]	; 15114 <sigaltstack@plt+0x3b28>
   15100:	mov	r2, #163	; 0xa3
   15104:	ldr	r1, [pc, #12]	; 15118 <sigaltstack@plt+0x3b2c>
   15108:	ldr	r0, [pc, #20]	; 15124 <sigaltstack@plt+0x3b38>
   1510c:	bl	115e0 <__assert_fail@plt>
   15110:	strdeq	r9, [r1], -ip
   15114:	andeq	r9, r1, r4, asr r3
   15118:	andeq	r9, r1, r8, ror #6
   1511c:			; <UNDEFINED> instruction: 0x000192b0
   15120:	andeq	r9, r1, r8, asr #5
   15124:	andeq	r9, r1, r0, ror #5
   15128:	push	{r4, r5, r6, lr}
   1512c:	sub	sp, sp, #32
   15130:	cmp	r1, #0
   15134:	mov	r4, r0
   15138:	ldr	r5, [sp, #48]	; 0x30
   1513c:	ldr	r6, [sp, #52]	; 0x34
   15140:	beq	153ec <sigaltstack@plt+0x3e00>
   15144:	str	r3, [sp]
   15148:	mov	r3, r2
   1514c:	mov	r2, r1
   15150:	ldr	r1, [pc, #684]	; 15404 <sigaltstack@plt+0x3e18>
   15154:	bl	11484 <fprintf@plt>
   15158:	mov	r2, #5
   1515c:	ldr	r1, [pc, #676]	; 15408 <sigaltstack@plt+0x3e1c>
   15160:	mov	r0, #0
   15164:	bl	112ec <dcgettext@plt>
   15168:	ldr	r3, [pc, #668]	; 1540c <sigaltstack@plt+0x3e20>
   1516c:	ldr	r1, [pc, #668]	; 15410 <sigaltstack@plt+0x3e24>
   15170:	mov	r2, r0
   15174:	mov	r0, r4
   15178:	bl	11484 <fprintf@plt>
   1517c:	mov	r1, r4
   15180:	mov	r0, #10
   15184:	bl	112e0 <fputc_unlocked@plt>
   15188:	mov	r2, #5
   1518c:	ldr	r1, [pc, #640]	; 15414 <sigaltstack@plt+0x3e28>
   15190:	mov	r0, #0
   15194:	bl	112ec <dcgettext@plt>
   15198:	ldr	r2, [pc, #632]	; 15418 <sigaltstack@plt+0x3e2c>
   1519c:	mov	r1, r0
   151a0:	mov	r0, r4
   151a4:	bl	11484 <fprintf@plt>
   151a8:	mov	r1, r4
   151ac:	mov	r0, #10
   151b0:	bl	112e0 <fputc_unlocked@plt>
   151b4:	cmp	r6, #9
   151b8:	ldrls	pc, [pc, r6, lsl #2]
   151bc:	b	153f8 <sigaltstack@plt+0x3e0c>
   151c0:	andeq	r5, r1, r4, lsr r2
   151c4:	andeq	r5, r1, ip, lsr r2
   151c8:	andeq	r5, r1, r4, ror #4
   151cc:	andeq	r5, r1, ip, lsl #5
   151d0:			; <UNDEFINED> instruction: 0x000152bc
   151d4:	strdeq	r5, [r1], -r4
   151d8:	andeq	r5, r1, r4, lsr #6
   151dc:	andeq	r5, r1, ip, asr r3
   151e0:	andeq	r5, r1, r0, lsr #7
   151e4:	andeq	r5, r1, r8, ror #3
   151e8:	ldr	r1, [pc, #556]	; 1541c <sigaltstack@plt+0x3e30>
   151ec:	mov	r2, #5
   151f0:	mov	r0, #0
   151f4:	bl	112ec <dcgettext@plt>
   151f8:	add	r1, r5, #24
   151fc:	ldm	r5, {r2, r3}
   15200:	ldm	r1, {r1, ip, lr}
   15204:	str	lr, [sp, #24]
   15208:	ldr	r6, [r5, #20]
   1520c:	str	ip, [sp, #20]
   15210:	ldr	lr, [r5, #16]
   15214:	str	r1, [sp, #16]
   15218:	ldr	r1, [r5, #8]
   1521c:	ldr	ip, [r5, #12]
   15220:	str	r6, [sp, #12]
   15224:	stm	sp, {r1, ip, lr}
   15228:	mov	r1, r0
   1522c:	mov	r0, r4
   15230:	bl	11484 <fprintf@plt>
   15234:	add	sp, sp, #32
   15238:	pop	{r4, r5, r6, pc}
   1523c:	mov	r2, #5
   15240:	ldr	r1, [pc, #472]	; 15420 <sigaltstack@plt+0x3e34>
   15244:	mov	r0, #0
   15248:	bl	112ec <dcgettext@plt>
   1524c:	ldr	r2, [r5]
   15250:	mov	r1, r0
   15254:	mov	r0, r4
   15258:	add	sp, sp, #32
   1525c:	pop	{r4, r5, r6, lr}
   15260:	b	11484 <fprintf@plt>
   15264:	mov	r2, #5
   15268:	ldr	r1, [pc, #436]	; 15424 <sigaltstack@plt+0x3e38>
   1526c:	mov	r0, #0
   15270:	bl	112ec <dcgettext@plt>
   15274:	ldm	r5, {r2, r3}
   15278:	mov	r1, r0
   1527c:	mov	r0, r4
   15280:	add	sp, sp, #32
   15284:	pop	{r4, r5, r6, lr}
   15288:	b	11484 <fprintf@plt>
   1528c:	mov	r2, #5
   15290:	ldr	r1, [pc, #400]	; 15428 <sigaltstack@plt+0x3e3c>
   15294:	mov	r0, #0
   15298:	bl	112ec <dcgettext@plt>
   1529c:	ldr	r1, [r5, #8]
   152a0:	ldm	r5, {r2, r3}
   152a4:	str	r1, [sp, #48]	; 0x30
   152a8:	mov	r1, r0
   152ac:	mov	r0, r4
   152b0:	add	sp, sp, #32
   152b4:	pop	{r4, r5, r6, lr}
   152b8:	b	11484 <fprintf@plt>
   152bc:	mov	r2, #5
   152c0:	ldr	r1, [pc, #356]	; 1542c <sigaltstack@plt+0x3e40>
   152c4:	mov	r0, #0
   152c8:	bl	112ec <dcgettext@plt>
   152cc:	ldr	r1, [r5, #8]
   152d0:	ldr	ip, [r5, #12]
   152d4:	ldm	r5, {r2, r3}
   152d8:	str	r1, [sp, #48]	; 0x30
   152dc:	str	ip, [sp, #52]	; 0x34
   152e0:	mov	r1, r0
   152e4:	mov	r0, r4
   152e8:	add	sp, sp, #32
   152ec:	pop	{r4, r5, r6, lr}
   152f0:	b	11484 <fprintf@plt>
   152f4:	mov	r2, #5
   152f8:	ldr	r1, [pc, #304]	; 15430 <sigaltstack@plt+0x3e44>
   152fc:	mov	r0, #0
   15300:	bl	112ec <dcgettext@plt>
   15304:	add	r1, r5, #8
   15308:	ldm	r5, {r2, r3}
   1530c:	ldm	r1, {r1, ip, lr}
   15310:	stm	sp, {r1, ip, lr}
   15314:	mov	r1, r0
   15318:	mov	r0, r4
   1531c:	bl	11484 <fprintf@plt>
   15320:	b	15234 <sigaltstack@plt+0x3c48>
   15324:	mov	r2, #5
   15328:	ldr	r1, [pc, #260]	; 15434 <sigaltstack@plt+0x3e48>
   1532c:	mov	r0, #0
   15330:	bl	112ec <dcgettext@plt>
   15334:	add	r1, r5, #8
   15338:	ldr	r6, [r5, #20]
   1533c:	ldm	r1, {r1, ip, lr}
   15340:	ldm	r5, {r2, r3}
   15344:	str	r6, [sp, #12]
   15348:	stm	sp, {r1, ip, lr}
   1534c:	mov	r1, r0
   15350:	mov	r0, r4
   15354:	bl	11484 <fprintf@plt>
   15358:	b	15234 <sigaltstack@plt+0x3c48>
   1535c:	mov	r2, #5
   15360:	ldr	r1, [pc, #208]	; 15438 <sigaltstack@plt+0x3e4c>
   15364:	mov	r0, #0
   15368:	bl	112ec <dcgettext@plt>
   1536c:	ldr	r1, [r5, #24]
   15370:	ldm	r5, {r2, r3}
   15374:	ldr	r6, [r5, #20]
   15378:	ldr	lr, [r5, #16]
   1537c:	str	r1, [sp, #16]
   15380:	ldr	r1, [r5, #8]
   15384:	ldr	ip, [r5, #12]
   15388:	str	r6, [sp, #12]
   1538c:	stm	sp, {r1, ip, lr}
   15390:	mov	r1, r0
   15394:	mov	r0, r4
   15398:	bl	11484 <fprintf@plt>
   1539c:	b	15234 <sigaltstack@plt+0x3c48>
   153a0:	mov	r2, #5
   153a4:	ldr	r1, [pc, #144]	; 1543c <sigaltstack@plt+0x3e50>
   153a8:	mov	r0, #0
   153ac:	bl	112ec <dcgettext@plt>
   153b0:	ldr	ip, [r5, #28]
   153b4:	ldr	r1, [r5, #24]
   153b8:	ldm	r5, {r2, r3}
   153bc:	ldr	r6, [r5, #20]
   153c0:	str	ip, [sp, #20]
   153c4:	ldr	lr, [r5, #16]
   153c8:	str	r1, [sp, #16]
   153cc:	ldr	r1, [r5, #8]
   153d0:	ldr	ip, [r5, #12]
   153d4:	str	r6, [sp, #12]
   153d8:	stm	sp, {r1, ip, lr}
   153dc:	mov	r1, r0
   153e0:	mov	r0, r4
   153e4:	bl	11484 <fprintf@plt>
   153e8:	b	15234 <sigaltstack@plt+0x3c48>
   153ec:	ldr	r1, [pc, #76]	; 15440 <sigaltstack@plt+0x3e54>
   153f0:	bl	11484 <fprintf@plt>
   153f4:	b	15158 <sigaltstack@plt+0x3b6c>
   153f8:	mov	r2, #5
   153fc:	ldr	r1, [pc, #64]	; 15444 <sigaltstack@plt+0x3e58>
   15400:	b	151f0 <sigaltstack@plt+0x3c04>
   15404:	andeq	r9, r1, r4, ror r3
   15408:	andeq	r9, r1, r8, lsl #7
   1540c:	andeq	r0, r0, r5, ror #15
   15410:	andeq	r9, r1, r8, lsl #13
   15414:	andeq	r9, r1, ip, lsl #7
   15418:	andeq	r9, r1, r8, lsr r4
   1541c:	andeq	r9, r1, r8, ror #10
   15420:	andeq	r9, r1, ip, asr r4
   15424:	andeq	r9, r1, ip, ror #8
   15428:	andeq	r9, r1, r4, lsl #9
   1542c:	andeq	r9, r1, r0, lsr #9
   15430:	andeq	r9, r1, r0, asr #9
   15434:	andeq	r9, r1, r4, ror #9
   15438:	andeq	r9, r1, ip, lsl #10
   1543c:	andeq	r9, r1, r8, lsr r5
   15440:	andeq	r9, r1, r0, lsl #7
   15444:	muleq	r1, ip, r5
   15448:	push	{r4, r5, lr}
   1544c:	sub	sp, sp, #12
   15450:	ldr	r5, [sp, #24]
   15454:	ldr	ip, [r5]
   15458:	cmp	ip, #0
   1545c:	beq	15478 <sigaltstack@plt+0x3e8c>
   15460:	mov	lr, r5
   15464:	mov	ip, #0
   15468:	ldr	r4, [lr, #4]!
   1546c:	add	ip, ip, #1
   15470:	cmp	r4, #0
   15474:	bne	15468 <sigaltstack@plt+0x3e7c>
   15478:	stm	sp, {r5, ip}
   1547c:	bl	15128 <sigaltstack@plt+0x3b3c>
   15480:	add	sp, sp, #12
   15484:	pop	{r4, r5, pc}
   15488:	push	{r4, r5, lr}
   1548c:	sub	sp, sp, #52	; 0x34
   15490:	add	r5, sp, #4
   15494:	ldr	r4, [sp, #64]	; 0x40
   15498:	mov	ip, #0
   1549c:	sub	r4, r4, #4
   154a0:	ldr	lr, [r4, #4]!
   154a4:	cmp	lr, #0
   154a8:	str	lr, [r5, #4]!
   154ac:	beq	154bc <sigaltstack@plt+0x3ed0>
   154b0:	add	ip, ip, #1
   154b4:	cmp	ip, #10
   154b8:	bne	154a0 <sigaltstack@plt+0x3eb4>
   154bc:	add	lr, sp, #8
   154c0:	str	ip, [sp, #4]
   154c4:	str	lr, [sp]
   154c8:	bl	15128 <sigaltstack@plt+0x3b3c>
   154cc:	add	sp, sp, #52	; 0x34
   154d0:	pop	{r4, r5, pc}
   154d4:	push	{r3}		; (str r3, [sp, #-4]!)
   154d8:	push	{r4, lr}
   154dc:	sub	sp, sp, #60	; 0x3c
   154e0:	add	lr, sp, #56	; 0x38
   154e4:	add	r3, sp, #72	; 0x48
   154e8:	str	r3, [lr, #-44]!	; 0xffffffd4
   154ec:	add	r4, sp, #68	; 0x44
   154f0:	mov	r3, #0
   154f4:	ldr	ip, [r4, #4]!
   154f8:	cmp	ip, #0
   154fc:	str	ip, [lr, #4]!
   15500:	beq	15510 <sigaltstack@plt+0x3f24>
   15504:	add	r3, r3, #1
   15508:	cmp	r3, #10
   1550c:	bne	154f4 <sigaltstack@plt+0x3f08>
   15510:	add	ip, sp, #16
   15514:	str	r3, [sp, #4]
   15518:	str	ip, [sp]
   1551c:	ldr	r3, [sp, #68]	; 0x44
   15520:	bl	15128 <sigaltstack@plt+0x3b3c>
   15524:	add	sp, sp, #60	; 0x3c
   15528:	pop	{r4, lr}
   1552c:	add	sp, sp, #4
   15530:	bx	lr
   15534:	ldr	r3, [pc, #92]	; 15598 <sigaltstack@plt+0x3fac>
   15538:	push	{r4, lr}
   1553c:	mov	r0, #10
   15540:	ldr	r1, [r3]
   15544:	bl	112e0 <fputc_unlocked@plt>
   15548:	mov	r2, #5
   1554c:	ldr	r1, [pc, #72]	; 1559c <sigaltstack@plt+0x3fb0>
   15550:	mov	r0, #0
   15554:	bl	112ec <dcgettext@plt>
   15558:	ldr	r1, [pc, #64]	; 155a0 <sigaltstack@plt+0x3fb4>
   1555c:	bl	11244 <printf@plt>
   15560:	mov	r2, #5
   15564:	ldr	r1, [pc, #56]	; 155a4 <sigaltstack@plt+0x3fb8>
   15568:	mov	r0, #0
   1556c:	bl	112ec <dcgettext@plt>
   15570:	ldr	r2, [pc, #48]	; 155a8 <sigaltstack@plt+0x3fbc>
   15574:	ldr	r1, [pc, #48]	; 155ac <sigaltstack@plt+0x3fc0>
   15578:	bl	11244 <printf@plt>
   1557c:	ldr	r1, [pc, #44]	; 155b0 <sigaltstack@plt+0x3fc4>
   15580:	mov	r2, #5
   15584:	mov	r0, #0
   15588:	bl	112ec <dcgettext@plt>
   1558c:	ldr	r1, [pc, #32]	; 155b4 <sigaltstack@plt+0x3fc8>
   15590:	pop	{r4, lr}
   15594:	b	11244 <printf@plt>
   15598:	muleq	r2, ip, r1
   1559c:	ldrdeq	r9, [r1], -r8
   155a0:	andeq	r9, r1, ip, ror #11
   155a4:	andeq	r9, r1, r4, lsl #12
   155a8:	andeq	r9, r1, r8, lsl r6
   155ac:	andeq	r8, r1, r0, asr #19
   155b0:	andeq	r9, r1, r0, asr #12
   155b4:	andeq	r9, r1, r8, ror #12
   155b8:	push	{r4, lr}
   155bc:	bl	15ca8 <sigaltstack@plt+0x46bc>
   155c0:	cmp	r0, #0
   155c4:	popne	{r4, pc}
   155c8:	bl	15af0 <sigaltstack@plt+0x4504>
   155cc:	push	{r4, lr}
   155d0:	bl	15ca8 <sigaltstack@plt+0x46bc>
   155d4:	cmp	r0, #0
   155d8:	popne	{r4, pc}
   155dc:	bl	15af0 <sigaltstack@plt+0x4504>
   155e0:	push	{r4, lr}
   155e4:	bl	15ca8 <sigaltstack@plt+0x46bc>
   155e8:	cmp	r0, #0
   155ec:	popne	{r4, pc}
   155f0:	bl	15af0 <sigaltstack@plt+0x4504>
   155f4:	push	{r4, r5, r6, lr}
   155f8:	mov	r5, r0
   155fc:	mov	r4, r1
   15600:	bl	15d28 <sigaltstack@plt+0x473c>
   15604:	cmp	r0, #0
   15608:	popne	{r4, r5, r6, pc}
   1560c:	adds	r4, r4, #0
   15610:	movne	r4, #1
   15614:	cmp	r5, #0
   15618:	orreq	r4, r4, #1
   1561c:	cmp	r4, #0
   15620:	popeq	{r4, r5, r6, pc}
   15624:	bl	15af0 <sigaltstack@plt+0x4504>
   15628:	push	{r4, lr}
   1562c:	cmp	r1, #0
   15630:	orreq	r1, r1, #1
   15634:	bl	15d28 <sigaltstack@plt+0x473c>
   15638:	cmp	r0, #0
   1563c:	popne	{r4, pc}
   15640:	bl	15af0 <sigaltstack@plt+0x4504>
   15644:	push	{r4, r5, r6, lr}
   15648:	mov	r6, r0
   1564c:	mov	r5, r1
   15650:	mov	r4, r2
   15654:	bl	15d84 <sigaltstack@plt+0x4798>
   15658:	cmp	r0, #0
   1565c:	popne	{r4, r5, r6, pc}
   15660:	cmp	r6, #0
   15664:	beq	15674 <sigaltstack@plt+0x4088>
   15668:	cmp	r5, #0
   1566c:	cmpne	r4, #0
   15670:	popeq	{r4, r5, r6, pc}
   15674:	bl	15af0 <sigaltstack@plt+0x4504>
   15678:	mov	r2, r1
   1567c:	mov	r1, r0
   15680:	mov	r0, #0
   15684:	b	15644 <sigaltstack@plt+0x4058>
   15688:	b	15644 <sigaltstack@plt+0x4058>
   1568c:	cmp	r2, #0
   15690:	cmpne	r1, #0
   15694:	moveq	r2, #1
   15698:	moveq	r1, r2
   1569c:	push	{r4, lr}
   156a0:	bl	15d84 <sigaltstack@plt+0x4798>
   156a4:	cmp	r0, #0
   156a8:	popne	{r4, pc}
   156ac:	bl	15af0 <sigaltstack@plt+0x4504>
   156b0:	push	{r4, r5, r6, lr}
   156b4:	subs	r6, r0, #0
   156b8:	sub	sp, sp, #8
   156bc:	mov	r5, r1
   156c0:	ldr	r4, [r1]
   156c4:	beq	15700 <sigaltstack@plt+0x4114>
   156c8:	lsr	r1, r4, #1
   156cc:	add	r3, r1, #1
   156d0:	mvn	r3, r3
   156d4:	cmp	r4, r3
   156d8:	bhi	156fc <sigaltstack@plt+0x4110>
   156dc:	add	r4, r4, #1
   156e0:	add	r4, r4, r1
   156e4:	mov	r0, r6
   156e8:	mov	r1, r4
   156ec:	bl	15644 <sigaltstack@plt+0x4058>
   156f0:	str	r4, [r5]
   156f4:	add	sp, sp, #8
   156f8:	pop	{r4, r5, r6, pc}
   156fc:	bl	15af0 <sigaltstack@plt+0x4504>
   15700:	cmp	r4, #0
   15704:	bne	156e4 <sigaltstack@plt+0x40f8>
   15708:	mov	r1, r2
   1570c:	mov	r0, #64	; 0x40
   15710:	str	r2, [sp, #4]
   15714:	bl	17f54 <sigaltstack@plt+0x6968>
   15718:	ldr	r2, [sp, #4]
   1571c:	cmp	r0, #0
   15720:	movne	r4, r0
   15724:	addeq	r4, r0, #1
   15728:	b	156e4 <sigaltstack@plt+0x40f8>
   1572c:	mov	r2, #1
   15730:	b	156b0 <sigaltstack@plt+0x40c4>
   15734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15738:	sub	sp, sp, #12
   1573c:	ldr	r6, [r1]
   15740:	mov	sl, r1
   15744:	mov	r9, r0
   15748:	asrs	r4, r6, #1
   1574c:	mov	r5, r2
   15750:	mov	fp, r3
   15754:	ldr	r7, [sp, #48]	; 0x30
   15758:	bmi	158c4 <sigaltstack@plt+0x42d8>
   1575c:	mvn	r3, #-2147483648	; 0x80000000
   15760:	sub	r3, r3, r4
   15764:	cmp	r6, r3
   15768:	movle	r3, #0
   1576c:	movgt	r3, #1
   15770:	mvn	r8, fp
   15774:	cmp	r3, #0
   15778:	addeq	r4, r4, r6
   1577c:	mvnne	r4, #-2147483648	; 0x80000000
   15780:	lsr	r8, r8, #31
   15784:	cmp	fp, r4
   15788:	movge	r3, #0
   1578c:	andlt	r3, r8, #1
   15790:	cmp	r3, #0
   15794:	beq	1587c <sigaltstack@plt+0x4290>
   15798:	cmp	r7, #0
   1579c:	blt	1594c <sigaltstack@plt+0x4360>
   157a0:	bne	15944 <sigaltstack@plt+0x4358>
   157a4:	mov	r2, #64	; 0x40
   157a8:	mov	r1, r7
   157ac:	mov	r0, r2
   157b0:	str	r2, [sp, #4]
   157b4:	bl	18160 <sigaltstack@plt+0x6b74>
   157b8:	ldr	r2, [sp, #4]
   157bc:	mov	r1, r7
   157c0:	mov	r4, r0
   157c4:	mov	r0, r2
   157c8:	bl	18380 <sigaltstack@plt+0x6d94>
   157cc:	ldr	r2, [sp, #4]
   157d0:	sub	r1, r2, r1
   157d4:	cmp	r9, #0
   157d8:	sub	r3, r4, r6
   157dc:	streq	r9, [sl]
   157e0:	cmp	r3, r5
   157e4:	bge	15868 <sigaltstack@plt+0x427c>
   157e8:	cmp	r5, #0
   157ec:	blt	158d8 <sigaltstack@plt+0x42ec>
   157f0:	cmp	r6, #0
   157f4:	blt	15814 <sigaltstack@plt+0x4228>
   157f8:	mvn	r3, #-2147483648	; 0x80000000
   157fc:	sub	r3, r3, r5
   15800:	cmp	r6, r3
   15804:	movle	r3, #0
   15808:	movgt	r3, #1
   1580c:	cmp	r3, #0
   15810:	bne	159d4 <sigaltstack@plt+0x43e8>
   15814:	add	r5, r6, r5
   15818:	cmp	fp, r5
   1581c:	movge	r8, #0
   15820:	andlt	r8, r8, #1
   15824:	cmp	r8, #0
   15828:	mov	r4, r5
   1582c:	bne	159d4 <sigaltstack@plt+0x43e8>
   15830:	cmp	r7, #0
   15834:	blt	158ec <sigaltstack@plt+0x4300>
   15838:	beq	15864 <sigaltstack@plt+0x4278>
   1583c:	cmp	r5, #0
   15840:	blt	15994 <sigaltstack@plt+0x43a8>
   15844:	mov	r1, r7
   15848:	mvn	r0, #-2147483648	; 0x80000000
   1584c:	bl	18160 <sigaltstack@plt+0x6b74>
   15850:	cmp	r5, r0
   15854:	movle	r0, #0
   15858:	movgt	r0, #1
   1585c:	cmp	r0, #0
   15860:	bne	159d4 <sigaltstack@plt+0x43e8>
   15864:	mul	r1, r5, r7
   15868:	mov	r0, r9
   1586c:	bl	155f4 <sigaltstack@plt+0x4008>
   15870:	str	r4, [sl]
   15874:	add	sp, sp, #12
   15878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1587c:	cmp	r7, #0
   15880:	blt	15918 <sigaltstack@plt+0x432c>
   15884:	beq	157a4 <sigaltstack@plt+0x41b8>
   15888:	cmp	r4, #0
   1588c:	blt	15954 <sigaltstack@plt+0x4368>
   15890:	mov	r1, r7
   15894:	mvn	r0, #-2147483648	; 0x80000000
   15898:	bl	18160 <sigaltstack@plt+0x6b74>
   1589c:	cmp	r0, r4
   158a0:	movge	r0, #0
   158a4:	movlt	r0, #1
   158a8:	cmp	r0, #0
   158ac:	mvnne	r2, #-2147483648	; 0x80000000
   158b0:	bne	157a8 <sigaltstack@plt+0x41bc>
   158b4:	mul	r1, r7, r4
   158b8:	cmp	r1, #63	; 0x3f
   158bc:	bgt	157d4 <sigaltstack@plt+0x41e8>
   158c0:	b	157a4 <sigaltstack@plt+0x41b8>
   158c4:	rsb	r3, r4, #-2147483648	; 0x80000000
   158c8:	cmp	r6, r3
   158cc:	movge	r3, #0
   158d0:	movlt	r3, #1
   158d4:	b	15770 <sigaltstack@plt+0x4184>
   158d8:	rsb	r3, r5, #-2147483648	; 0x80000000
   158dc:	cmp	r6, r3
   158e0:	movge	r3, #0
   158e4:	movlt	r3, #1
   158e8:	b	1580c <sigaltstack@plt+0x4220>
   158ec:	cmp	r5, #0
   158f0:	blt	15978 <sigaltstack@plt+0x438c>
   158f4:	cmn	r7, #1
   158f8:	beq	15864 <sigaltstack@plt+0x4278>
   158fc:	mov	r1, r7
   15900:	mov	r0, #-2147483648	; 0x80000000
   15904:	bl	18160 <sigaltstack@plt+0x6b74>
   15908:	cmp	r5, r0
   1590c:	movle	r0, #0
   15910:	movgt	r0, #1
   15914:	b	1585c <sigaltstack@plt+0x4270>
   15918:	cmp	r4, #0
   1591c:	blt	159b8 <sigaltstack@plt+0x43cc>
   15920:	cmn	r7, #1
   15924:	beq	158b4 <sigaltstack@plt+0x42c8>
   15928:	mov	r1, r7
   1592c:	mov	r0, #-2147483648	; 0x80000000
   15930:	bl	18160 <sigaltstack@plt+0x6b74>
   15934:	cmp	r0, r4
   15938:	movge	r0, #0
   1593c:	movlt	r0, #1
   15940:	b	158a8 <sigaltstack@plt+0x42bc>
   15944:	mov	r4, fp
   15948:	b	15890 <sigaltstack@plt+0x42a4>
   1594c:	mov	r4, fp
   15950:	b	15920 <sigaltstack@plt+0x4334>
   15954:	cmn	r4, #1
   15958:	beq	158b4 <sigaltstack@plt+0x42c8>
   1595c:	mov	r1, r4
   15960:	mov	r0, #-2147483648	; 0x80000000
   15964:	bl	18160 <sigaltstack@plt+0x6b74>
   15968:	cmp	r7, r0
   1596c:	movle	r0, #0
   15970:	movgt	r0, #1
   15974:	b	158a8 <sigaltstack@plt+0x42bc>
   15978:	mov	r1, r7
   1597c:	mvn	r0, #-2147483648	; 0x80000000
   15980:	bl	18160 <sigaltstack@plt+0x6b74>
   15984:	cmp	r5, r0
   15988:	movge	r0, #0
   1598c:	movlt	r0, #1
   15990:	b	1585c <sigaltstack@plt+0x4270>
   15994:	cmn	r5, #1
   15998:	beq	15864 <sigaltstack@plt+0x4278>
   1599c:	mov	r1, r5
   159a0:	mov	r0, #-2147483648	; 0x80000000
   159a4:	bl	18160 <sigaltstack@plt+0x6b74>
   159a8:	cmp	r7, r0
   159ac:	movle	r0, #0
   159b0:	movgt	r0, #1
   159b4:	b	1585c <sigaltstack@plt+0x4270>
   159b8:	mov	r1, r7
   159bc:	mvn	r0, #-2147483648	; 0x80000000
   159c0:	bl	18160 <sigaltstack@plt+0x6b74>
   159c4:	cmp	r0, r4
   159c8:	movle	r0, #0
   159cc:	movgt	r0, #1
   159d0:	b	158a8 <sigaltstack@plt+0x42bc>
   159d4:	bl	15af0 <sigaltstack@plt+0x4504>
   159d8:	push	{r4, lr}
   159dc:	mov	r1, #1
   159e0:	bl	15c08 <sigaltstack@plt+0x461c>
   159e4:	cmp	r0, #0
   159e8:	popne	{r4, pc}
   159ec:	bl	15af0 <sigaltstack@plt+0x4504>
   159f0:	push	{r4, lr}
   159f4:	mov	r1, #1
   159f8:	bl	15c08 <sigaltstack@plt+0x461c>
   159fc:	cmp	r0, #0
   15a00:	popne	{r4, pc}
   15a04:	bl	15af0 <sigaltstack@plt+0x4504>
   15a08:	push	{r4, lr}
   15a0c:	bl	15c08 <sigaltstack@plt+0x461c>
   15a10:	cmp	r0, #0
   15a14:	popne	{r4, pc}
   15a18:	bl	15af0 <sigaltstack@plt+0x4504>
   15a1c:	push	{r4, lr}
   15a20:	bl	15c08 <sigaltstack@plt+0x461c>
   15a24:	cmp	r0, #0
   15a28:	popne	{r4, pc}
   15a2c:	bl	15af0 <sigaltstack@plt+0x4504>
   15a30:	push	{r4, r5, r6, lr}
   15a34:	mov	r6, r0
   15a38:	mov	r0, r1
   15a3c:	mov	r4, r1
   15a40:	bl	15ca8 <sigaltstack@plt+0x46bc>
   15a44:	subs	r5, r0, #0
   15a48:	beq	15a60 <sigaltstack@plt+0x4474>
   15a4c:	mov	r2, r4
   15a50:	mov	r1, r6
   15a54:	bl	1128c <memcpy@plt>
   15a58:	mov	r0, r5
   15a5c:	pop	{r4, r5, r6, pc}
   15a60:	bl	15af0 <sigaltstack@plt+0x4504>
   15a64:	push	{r4, r5, r6, lr}
   15a68:	mov	r6, r0
   15a6c:	mov	r0, r1
   15a70:	mov	r4, r1
   15a74:	bl	15ca8 <sigaltstack@plt+0x46bc>
   15a78:	subs	r5, r0, #0
   15a7c:	beq	15a94 <sigaltstack@plt+0x44a8>
   15a80:	mov	r2, r4
   15a84:	mov	r1, r6
   15a88:	bl	1128c <memcpy@plt>
   15a8c:	mov	r0, r5
   15a90:	pop	{r4, r5, r6, pc}
   15a94:	bl	15af0 <sigaltstack@plt+0x4504>
   15a98:	push	{r4, r5, r6, lr}
   15a9c:	mov	r6, r0
   15aa0:	add	r0, r1, #1
   15aa4:	mov	r4, r1
   15aa8:	bl	15ca8 <sigaltstack@plt+0x46bc>
   15aac:	subs	r5, r0, #0
   15ab0:	beq	15ad0 <sigaltstack@plt+0x44e4>
   15ab4:	mov	r3, #0
   15ab8:	mov	r1, r6
   15abc:	strb	r3, [r5, r4]
   15ac0:	mov	r2, r4
   15ac4:	bl	1128c <memcpy@plt>
   15ac8:	mov	r0, r5
   15acc:	pop	{r4, r5, r6, pc}
   15ad0:	bl	15af0 <sigaltstack@plt+0x4504>
   15ad4:	push	{r4, lr}
   15ad8:	mov	r4, r0
   15adc:	bl	1146c <strlen@plt>
   15ae0:	add	r1, r0, #1
   15ae4:	mov	r0, r4
   15ae8:	pop	{r4, lr}
   15aec:	b	15a30 <sigaltstack@plt+0x4444>
   15af0:	ldr	r3, [pc, #44]	; 15b24 <sigaltstack@plt+0x4538>
   15af4:	push	{r4, lr}
   15af8:	mov	r2, #5
   15afc:	ldr	r1, [pc, #36]	; 15b28 <sigaltstack@plt+0x453c>
   15b00:	mov	r0, #0
   15b04:	ldr	r4, [r3]
   15b08:	bl	112ec <dcgettext@plt>
   15b0c:	ldr	r2, [pc, #24]	; 15b2c <sigaltstack@plt+0x4540>
   15b10:	mov	r1, #0
   15b14:	mov	r3, r0
   15b18:	mov	r0, r4
   15b1c:	bl	113ac <error@plt>
   15b20:	bl	115c8 <abort@plt>
   15b24:	andeq	sl, r2, r8, ror r1
   15b28:			; <UNDEFINED> instruction: 0x000196b8
   15b2c:	andeq	r8, r1, ip, lsl #15
   15b30:	push	{r4, r5, r6, lr}
   15b34:	bl	17578 <sigaltstack@plt+0x5f8c>
   15b38:	subs	r4, r0, #0
   15b3c:	popeq	{r4, r5, r6, pc}
   15b40:	ldr	r3, [pc, #36]	; 15b6c <sigaltstack@plt+0x4580>
   15b44:	mov	r2, #5
   15b48:	ldr	r1, [pc, #32]	; 15b70 <sigaltstack@plt+0x4584>
   15b4c:	mov	r0, #0
   15b50:	ldr	r5, [r3]
   15b54:	bl	112ec <dcgettext@plt>
   15b58:	mov	r1, r4
   15b5c:	mov	r2, r0
   15b60:	mov	r0, r5
   15b64:	pop	{r4, r5, r6, lr}
   15b68:	b	113ac <error@plt>
   15b6c:	andeq	sl, r2, r8, ror r1
   15b70:	andeq	r9, r1, ip, asr #13
   15b74:	push	{r4, lr}
   15b78:	sub	sp, sp, #8
   15b7c:	ldr	ip, [sp, #16]
   15b80:	str	ip, [sp]
   15b84:	bl	17634 <sigaltstack@plt+0x6048>
   15b88:	subs	r4, r0, #0
   15b8c:	blt	15b9c <sigaltstack@plt+0x45b0>
   15b90:	mov	r0, r4
   15b94:	add	sp, sp, #8
   15b98:	pop	{r4, pc}
   15b9c:	bl	1149c <__errno_location@plt>
   15ba0:	ldr	r3, [r0]
   15ba4:	cmp	r3, #12
   15ba8:	bne	15b90 <sigaltstack@plt+0x45a4>
   15bac:	bl	15af0 <sigaltstack@plt+0x4504>
   15bb0:	push	{r4, lr}
   15bb4:	bl	178a0 <sigaltstack@plt+0x62b4>
   15bb8:	subs	r4, r0, #0
   15bbc:	beq	15bc8 <sigaltstack@plt+0x45dc>
   15bc0:	mov	r0, r4
   15bc4:	pop	{r4, pc}
   15bc8:	bl	1149c <__errno_location@plt>
   15bcc:	ldr	r3, [r0]
   15bd0:	cmp	r3, #12
   15bd4:	bne	15bc0 <sigaltstack@plt+0x45d4>
   15bd8:	bl	15af0 <sigaltstack@plt+0x4504>
   15bdc:	push	{r4, lr}
   15be0:	bl	17a74 <sigaltstack@plt+0x6488>
   15be4:	subs	r4, r0, #0
   15be8:	beq	15bf4 <sigaltstack@plt+0x4608>
   15bec:	mov	r0, r4
   15bf0:	pop	{r4, pc}
   15bf4:	bl	1149c <__errno_location@plt>
   15bf8:	ldr	r3, [r0]
   15bfc:	cmp	r3, #12
   15c00:	bne	15bec <sigaltstack@plt+0x4600>
   15c04:	bl	15af0 <sigaltstack@plt+0x4504>
   15c08:	cmp	r1, #0
   15c0c:	cmpne	r0, #0
   15c10:	moveq	r1, #1
   15c14:	moveq	r0, r1
   15c18:	umull	r2, r3, r0, r1
   15c1c:	adds	r3, r3, #0
   15c20:	movne	r3, #1
   15c24:	cmp	r2, #0
   15c28:	blt	15c38 <sigaltstack@plt+0x464c>
   15c2c:	cmp	r3, #0
   15c30:	bne	15c38 <sigaltstack@plt+0x464c>
   15c34:	b	111fc <calloc@plt>
   15c38:	push	{r4, lr}
   15c3c:	bl	1149c <__errno_location@plt>
   15c40:	mov	r3, #12
   15c44:	str	r3, [r0]
   15c48:	mov	r0, #0
   15c4c:	pop	{r4, pc}
   15c50:	push	{r4, r5, lr}
   15c54:	sub	sp, sp, #12
   15c58:	mov	r5, r0
   15c5c:	bl	1149c <__errno_location@plt>
   15c60:	mov	r2, #0
   15c64:	mov	r4, r0
   15c68:	ldr	r3, [r0]
   15c6c:	str	r2, [r4]
   15c70:	mov	r0, r5
   15c74:	str	r3, [sp]
   15c78:	str	r3, [sp, #4]
   15c7c:	bl	11274 <free@plt>
   15c80:	ldr	r3, [r4]
   15c84:	add	r2, sp, #8
   15c88:	cmp	r3, #0
   15c8c:	moveq	r3, #4
   15c90:	movne	r3, #0
   15c94:	add	r3, r2, r3
   15c98:	ldr	r3, [r3, #-8]
   15c9c:	str	r3, [r4]
   15ca0:	add	sp, sp, #12
   15ca4:	pop	{r4, r5, pc}
   15ca8:	cmp	r0, #0
   15cac:	moveq	r0, #1
   15cb0:	cmp	r0, #0
   15cb4:	blt	15cbc <sigaltstack@plt+0x46d0>
   15cb8:	b	113e8 <malloc@plt>
   15cbc:	push	{r4, lr}
   15cc0:	bl	1149c <__errno_location@plt>
   15cc4:	mov	r3, #12
   15cc8:	str	r3, [r0]
   15ccc:	mov	r0, #0
   15cd0:	pop	{r4, pc}
   15cd4:	push	{r4, r5, r6, r7, lr}
   15cd8:	subs	r6, r0, #0
   15cdc:	sub	sp, sp, #12
   15ce0:	addeq	r6, sp, #4
   15ce4:	mov	r0, r6
   15ce8:	mov	r5, r2
   15cec:	mov	r7, r1
   15cf0:	bl	113a0 <mbrtowc@plt>
   15cf4:	cmp	r5, #0
   15cf8:	cmnne	r0, #3
   15cfc:	mov	r4, r0
   15d00:	bls	15d1c <sigaltstack@plt+0x4730>
   15d04:	mov	r0, #0
   15d08:	bl	15e2c <sigaltstack@plt+0x4840>
   15d0c:	cmp	r0, #0
   15d10:	moveq	r4, #1
   15d14:	ldrbeq	r3, [r7]
   15d18:	streq	r3, [r6]
   15d1c:	mov	r0, r4
   15d20:	add	sp, sp, #12
   15d24:	pop	{r4, r5, r6, r7, pc}
   15d28:	cmp	r0, #0
   15d2c:	beq	15d50 <sigaltstack@plt+0x4764>
   15d30:	cmp	r1, #0
   15d34:	push	{lr}		; (str lr, [sp, #-4]!)
   15d38:	sub	sp, sp, #12
   15d3c:	beq	15d58 <sigaltstack@plt+0x476c>
   15d40:	blt	15d70 <sigaltstack@plt+0x4784>
   15d44:	add	sp, sp, #12
   15d48:	pop	{lr}		; (ldr lr, [sp], #4)
   15d4c:	b	1131c <realloc@plt>
   15d50:	mov	r0, r1
   15d54:	b	15ca8 <sigaltstack@plt+0x46bc>
   15d58:	str	r1, [sp, #4]
   15d5c:	bl	15c50 <sigaltstack@plt+0x4664>
   15d60:	ldr	r3, [sp, #4]
   15d64:	mov	r0, r3
   15d68:	add	sp, sp, #12
   15d6c:	pop	{pc}		; (ldr pc, [sp], #4)
   15d70:	bl	1149c <__errno_location@plt>
   15d74:	mov	r2, #12
   15d78:	mov	r3, #0
   15d7c:	str	r2, [r0]
   15d80:	b	15d64 <sigaltstack@plt+0x4778>
   15d84:	push	{r4, r5, r6, lr}
   15d88:	subs	r4, r2, #0
   15d8c:	mov	r6, r0
   15d90:	mov	r5, r1
   15d94:	beq	15dc0 <sigaltstack@plt+0x47d4>
   15d98:	mov	r1, r4
   15d9c:	mvn	r0, #0
   15da0:	bl	17f54 <sigaltstack@plt+0x6968>
   15da4:	cmp	r0, r5
   15da8:	bcs	15dc0 <sigaltstack@plt+0x47d4>
   15dac:	bl	1149c <__errno_location@plt>
   15db0:	mov	r3, #12
   15db4:	str	r3, [r0]
   15db8:	mov	r0, #0
   15dbc:	pop	{r4, r5, r6, pc}
   15dc0:	mul	r1, r5, r4
   15dc4:	mov	r0, r6
   15dc8:	pop	{r4, r5, r6, lr}
   15dcc:	b	15d28 <sigaltstack@plt+0x473c>
   15dd0:	cmp	r0, r1
   15dd4:	beq	15e24 <sigaltstack@plt+0x4838>
   15dd8:	sub	r2, r0, #1
   15ddc:	sub	r1, r1, #1
   15de0:	b	15dec <sigaltstack@plt+0x4800>
   15de4:	cmp	r0, r3
   15de8:	bne	15e1c <sigaltstack@plt+0x4830>
   15dec:	ldrb	r0, [r2, #1]!
   15df0:	sub	r3, r0, #65	; 0x41
   15df4:	cmp	r3, #25
   15df8:	ldrb	r3, [r1, #1]!
   15dfc:	addls	r0, r0, #32
   15e00:	sub	ip, r3, #65	; 0x41
   15e04:	cmp	ip, #25
   15e08:	addls	r3, r3, #32
   15e0c:	uxtb	r0, r0
   15e10:	cmp	r0, #0
   15e14:	uxtb	r3, r3
   15e18:	bne	15de4 <sigaltstack@plt+0x47f8>
   15e1c:	sub	r0, r0, r3
   15e20:	bx	lr
   15e24:	mov	r0, #0
   15e28:	bx	lr
   15e2c:	push	{lr}		; (str lr, [sp, #-4]!)
   15e30:	sub	sp, sp, #268	; 0x10c
   15e34:	add	r1, sp, #4
   15e38:	ldr	r2, [pc, #60]	; 15e7c <sigaltstack@plt+0x4890>
   15e3c:	bl	174e0 <sigaltstack@plt+0x5ef4>
   15e40:	cmp	r0, #0
   15e44:	movne	r0, #0
   15e48:	bne	15e74 <sigaltstack@plt+0x4888>
   15e4c:	ldr	r1, [pc, #44]	; 15e80 <sigaltstack@plt+0x4894>
   15e50:	add	r0, sp, #4
   15e54:	bl	11238 <strcmp@plt>
   15e58:	cmp	r0, #0
   15e5c:	beq	15e74 <sigaltstack@plt+0x4888>
   15e60:	add	r0, sp, #4
   15e64:	ldr	r1, [pc, #24]	; 15e84 <sigaltstack@plt+0x4898>
   15e68:	bl	11238 <strcmp@plt>
   15e6c:	adds	r0, r0, #0
   15e70:	movne	r0, #1
   15e74:	add	sp, sp, #268	; 0x10c
   15e78:	pop	{pc}		; (ldr pc, [sp], #4)
   15e7c:	andeq	r0, r0, r1, lsl #2
   15e80:	andeq	r9, r1, r8, ror #13
   15e84:	andeq	r9, r1, ip, ror #13
   15e88:	push	{r4, lr}
   15e8c:	mov	r0, #14
   15e90:	bl	11550 <nl_langinfo@plt>
   15e94:	cmp	r0, #0
   15e98:	beq	15eb0 <sigaltstack@plt+0x48c4>
   15e9c:	ldrb	r2, [r0]
   15ea0:	ldr	r3, [pc, #16]	; 15eb8 <sigaltstack@plt+0x48cc>
   15ea4:	cmp	r2, #0
   15ea8:	moveq	r0, r3
   15eac:	pop	{r4, pc}
   15eb0:	ldr	r0, [pc]	; 15eb8 <sigaltstack@plt+0x48cc>
   15eb4:	pop	{r4, pc}
   15eb8:	strdeq	r9, [r1], -r4
   15ebc:	push	{r4, lr}
   15ec0:	mov	r4, r0
   15ec4:	bl	1125c <wcwidth@plt>
   15ec8:	cmp	r0, #0
   15ecc:	popge	{r4, pc}
   15ed0:	mov	r0, r4
   15ed4:	bl	11334 <iswcntrl@plt>
   15ed8:	clz	r0, r0
   15edc:	lsr	r0, r0, #5
   15ee0:	pop	{r4, pc}
   15ee4:	mov	r3, r1
   15ee8:	push	{r4, r5, r6, lr}
   15eec:	mov	r4, r1
   15ef0:	ldr	r1, [r3], #16
   15ef4:	mov	r5, r0
   15ef8:	cmp	r1, r3
   15efc:	strne	r1, [r0]
   15f00:	beq	15f24 <sigaltstack@plt+0x4938>
   15f04:	ldrb	r3, [r4, #8]
   15f08:	ldr	r2, [r4, #4]
   15f0c:	cmp	r3, #0
   15f10:	strb	r3, [r5, #8]
   15f14:	ldrne	r3, [r4, #12]
   15f18:	str	r2, [r5, #4]
   15f1c:	strne	r3, [r5, #12]
   15f20:	pop	{r4, r5, r6, pc}
   15f24:	add	r3, r0, #16
   15f28:	mov	r0, r3
   15f2c:	ldr	r2, [r4, #4]
   15f30:	bl	1128c <memcpy@plt>
   15f34:	str	r0, [r5]
   15f38:	b	15f04 <sigaltstack@plt+0x4918>
   15f3c:	ldr	r3, [pc, #20]	; 15f58 <sigaltstack@plt+0x496c>
   15f40:	lsr	r2, r0, #5
   15f44:	and	r0, r0, #31
   15f48:	ldr	r3, [r3, r2, lsl #2]
   15f4c:	lsr	r0, r3, r0
   15f50:	and	r0, r0, #1
   15f54:	bx	lr
   15f58:	strdeq	r9, [r1], -ip
   15f5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15f60:	mov	r6, r2
   15f64:	lsrs	r2, r6, #30
   15f68:	movne	ip, #1
   15f6c:	moveq	ip, #0
   15f70:	lsls	r2, r6, #2
   15f74:	add	fp, sp, #28
   15f78:	bmi	15f84 <sigaltstack@plt+0x4998>
   15f7c:	cmp	ip, #0
   15f80:	beq	15f90 <sigaltstack@plt+0x49a4>
   15f84:	mov	r0, #0
   15f88:	sub	sp, fp, #28
   15f8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f90:	cmp	r2, #4016	; 0xfb0
   15f94:	mov	r5, r0
   15f98:	mov	r4, r1
   15f9c:	mov	r7, r3
   15fa0:	bls	16074 <sigaltstack@plt+0x4a88>
   15fa4:	mov	r0, r2
   15fa8:	bl	17d14 <sigaltstack@plt+0x6728>
   15fac:	cmp	r0, #0
   15fb0:	beq	15f84 <sigaltstack@plt+0x4998>
   15fb4:	cmp	r6, #2
   15fb8:	mov	r3, #1
   15fbc:	str	r3, [r0, #4]
   15fc0:	movhi	r8, r4
   15fc4:	addhi	r2, r0, #8
   15fc8:	movhi	ip, #0
   15fcc:	movhi	r3, #2
   15fd0:	bls	1601c <sigaltstack@plt+0x4a30>
   15fd4:	ldrb	r1, [r8, #1]!
   15fd8:	ldrb	lr, [r4, ip]
   15fdc:	cmp	lr, r1
   15fe0:	bne	15ffc <sigaltstack@plt+0x4a10>
   15fe4:	b	1608c <sigaltstack@plt+0x4aa0>
   15fe8:	ldr	lr, [r0, ip, lsl #2]
   15fec:	sub	ip, ip, lr
   15ff0:	ldrb	lr, [r4, ip]
   15ff4:	cmp	lr, r1
   15ff8:	beq	1608c <sigaltstack@plt+0x4aa0>
   15ffc:	cmp	ip, #0
   16000:	bne	15fe8 <sigaltstack@plt+0x49fc>
   16004:	mov	ip, #0
   16008:	str	r3, [r2]
   1600c:	add	r3, r3, #1
   16010:	cmp	r6, r3
   16014:	add	r2, r2, #4
   16018:	bne	15fd4 <sigaltstack@plt+0x49e8>
   1601c:	mov	r2, #0
   16020:	str	r2, [r7]
   16024:	ldrb	r3, [r5]
   16028:	mov	ip, r5
   1602c:	cmp	r3, #0
   16030:	beq	16064 <sigaltstack@plt+0x4a78>
   16034:	ldrb	r1, [r4, r2]
   16038:	cmp	r1, r3
   1603c:	beq	1609c <sigaltstack@plt+0x4ab0>
   16040:	cmp	r2, #0
   16044:	addeq	r5, r5, #1
   16048:	ldrbeq	r3, [ip, #1]
   1604c:	ldrne	r1, [r0, r2, lsl #2]
   16050:	addeq	ip, ip, #1
   16054:	addne	r5, r5, r1
   16058:	subne	r2, r2, r1
   1605c:	cmp	r3, #0
   16060:	bne	16034 <sigaltstack@plt+0x4a48>
   16064:	bl	17d5c <sigaltstack@plt+0x6770>
   16068:	mov	r0, #1
   1606c:	sub	sp, fp, #28
   16070:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16074:	add	r3, r2, #29
   16078:	bic	r3, r3, #7
   1607c:	sub	sp, sp, r3
   16080:	add	r0, sp, #15
   16084:	bic	r0, r0, #15
   16088:	b	15fac <sigaltstack@plt+0x49c0>
   1608c:	add	ip, ip, #1
   16090:	sub	r1, r3, ip
   16094:	str	r1, [r2]
   16098:	b	1600c <sigaltstack@plt+0x4a20>
   1609c:	add	r2, r2, #1
   160a0:	cmp	r6, r2
   160a4:	add	r1, ip, #1
   160a8:	ldrbne	r3, [ip, #1]
   160ac:	movne	ip, r1
   160b0:	bne	1602c <sigaltstack@plt+0x4a40>
   160b4:	str	r5, [r7]
   160b8:	bl	17d5c <sigaltstack@plt+0x6770>
   160bc:	mov	r0, #1
   160c0:	b	1606c <sigaltstack@plt+0x4a80>
   160c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160c8:	add	fp, sp, #32
   160cc:	sub	sp, sp, #188	; 0xbc
   160d0:	str	r0, [fp, #-216]	; 0xffffff28
   160d4:	mov	r0, r1
   160d8:	mov	r5, r1
   160dc:	str	r2, [fp, #-212]	; 0xffffff2c
   160e0:	bl	17d80 <sigaltstack@plt+0x6794>
   160e4:	mov	r3, #44	; 0x2c
   160e8:	str	r0, [fp, #-208]	; 0xffffff30
   160ec:	umull	r0, r1, r0, r3
   160f0:	adds	r2, r1, #0
   160f4:	movne	r2, #1
   160f8:	cmp	r0, #0
   160fc:	blt	16108 <sigaltstack@plt+0x4b1c>
   16100:	cmp	r2, #0
   16104:	beq	16114 <sigaltstack@plt+0x4b28>
   16108:	mov	r0, #0
   1610c:	sub	sp, fp, #32
   16110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16114:	ldr	r2, [fp, #-208]	; 0xffffff30
   16118:	mul	r0, r3, r2
   1611c:	cmp	r0, #4016	; 0xfb0
   16120:	bls	16370 <sigaltstack@plt+0x4d84>
   16124:	bl	17d14 <sigaltstack@plt+0x6728>
   16128:	mov	r9, r0
   1612c:	cmp	r9, #0
   16130:	beq	16108 <sigaltstack@plt+0x4b1c>
   16134:	ldr	r3, [fp, #-208]	; 0xffffff30
   16138:	add	r4, r9, #16
   1613c:	mov	r6, #1
   16140:	add	sl, r3, r3, lsl #2
   16144:	sub	r8, fp, #172	; 0xac
   16148:	add	sl, r9, sl, lsl #3
   1614c:	mov	r7, #0
   16150:	str	r5, [fp, #-188]	; 0xffffff44
   16154:	str	r7, [fp, #-196]	; 0xffffff3c
   16158:	strb	r7, [fp, #-204]	; 0xffffff34
   1615c:	str	r7, [fp, #-200]	; 0xffffff38
   16160:	strb	r7, [fp, #-192]	; 0xffffff40
   16164:	ldrb	r3, [fp, #-204]	; 0xffffff34
   16168:	cmp	r3, #0
   1616c:	bne	16588 <sigaltstack@plt+0x4f9c>
   16170:	ldrb	r3, [r5]
   16174:	ldr	r1, [pc, #1848]	; 168b4 <sigaltstack@plt+0x52c8>
   16178:	and	r2, r3, #31
   1617c:	lsr	r3, r3, #5
   16180:	ldr	r3, [r1, r3, lsl #2]
   16184:	lsr	r3, r3, r2
   16188:	tst	r3, #1
   1618c:	beq	16574 <sigaltstack@plt+0x4f88>
   16190:	str	r6, [fp, #-184]	; 0xffffff48
   16194:	ldrb	r5, [r5]
   16198:	strb	r6, [fp, #-180]	; 0xffffff4c
   1619c:	strb	r6, [fp, #-192]	; 0xffffff40
   161a0:	cmp	r5, #0
   161a4:	str	r5, [fp, #-176]	; 0xffffff50
   161a8:	bne	165f4 <sigaltstack@plt+0x5008>
   161ac:	ldr	r3, [fp, #-208]	; 0xffffff30
   161b0:	str	r6, [sl, #4]
   161b4:	cmp	r3, #2
   161b8:	movhi	r4, r5
   161bc:	addhi	r7, sl, #8
   161c0:	movhi	r5, r9
   161c4:	movhi	r6, #2
   161c8:	bls	16258 <sigaltstack@plt+0x4c6c>
   161cc:	ldrb	r8, [r5, #48]	; 0x30
   161d0:	b	16200 <sigaltstack@plt+0x4c14>
   161d4:	ldrb	r2, [r3, #8]
   161d8:	cmp	r2, #0
   161dc:	beq	16210 <sigaltstack@plt+0x4c24>
   161e0:	ldr	r3, [r3, #12]
   161e4:	ldr	r2, [r5, #52]	; 0x34
   161e8:	cmp	r2, r3
   161ec:	beq	16234 <sigaltstack@plt+0x4c48>
   161f0:	cmp	r4, #0
   161f4:	beq	1672c <sigaltstack@plt+0x5140>
   161f8:	ldr	r3, [sl, r4, lsl #2]
   161fc:	sub	r4, r4, r3
   16200:	add	r3, r4, r4, lsl #2
   16204:	cmp	r8, #0
   16208:	add	r3, r9, r3, lsl #3
   1620c:	bne	161d4 <sigaltstack@plt+0x4be8>
   16210:	ldr	r2, [r5, #44]	; 0x2c
   16214:	ldr	r1, [r3, #4]
   16218:	cmp	r2, r1
   1621c:	bne	161f0 <sigaltstack@plt+0x4c04>
   16220:	ldr	r1, [r3]
   16224:	ldr	r0, [r5, #40]	; 0x28
   16228:	bl	112d4 <memcmp@plt>
   1622c:	cmp	r0, #0
   16230:	bne	161f0 <sigaltstack@plt+0x4c04>
   16234:	add	r4, r4, #1
   16238:	sub	r2, r6, r4
   1623c:	str	r2, [r7]
   16240:	ldr	r3, [fp, #-208]	; 0xffffff30
   16244:	add	r6, r6, #1
   16248:	cmp	r3, r6
   1624c:	add	r5, r5, #40	; 0x28
   16250:	add	r7, r7, #4
   16254:	bne	161cc <sigaltstack@plt+0x4be0>
   16258:	ldr	r1, [fp, #-216]	; 0xffffff28
   1625c:	mov	r2, #0
   16260:	str	r1, [fp, #-132]	; 0xffffff7c
   16264:	str	r1, [fp, #-76]	; 0xffffffb4
   16268:	ldr	r1, [fp, #-212]	; 0xffffff2c
   1626c:	mov	r3, r2
   16270:	cmp	r3, #0
   16274:	str	r2, [r1]
   16278:	strb	r2, [fp, #-148]	; 0xffffff6c
   1627c:	str	r2, [fp, #-144]	; 0xffffff70
   16280:	strb	r2, [fp, #-136]	; 0xffffff78
   16284:	strb	r2, [fp, #-92]	; 0xffffffa4
   16288:	str	r2, [fp, #-88]	; 0xffffffa8
   1628c:	strb	r2, [fp, #-80]	; 0xffffffb0
   16290:	mov	r8, r2
   16294:	mov	r7, r2
   16298:	str	r2, [fp, #-140]	; 0xffffff74
   1629c:	str	r2, [fp, #-84]	; 0xffffffac
   162a0:	mov	r6, #1
   162a4:	bne	164b4 <sigaltstack@plt+0x4ec8>
   162a8:	ldr	r5, [fp, #-76]	; 0xffffffb4
   162ac:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   162b0:	cmp	r3, #0
   162b4:	bne	162ec <sigaltstack@plt+0x4d00>
   162b8:	ldrb	r3, [r5]
   162bc:	ldr	r1, [pc, #1520]	; 168b4 <sigaltstack@plt+0x52c8>
   162c0:	and	r2, r3, #31
   162c4:	lsr	r3, r3, #5
   162c8:	ldr	r3, [r1, r3, lsl #2]
   162cc:	lsr	r3, r3, r2
   162d0:	tst	r3, #1
   162d4:	bne	1663c <sigaltstack@plt+0x5050>
   162d8:	sub	r0, fp, #88	; 0x58
   162dc:	bl	112b0 <mbsinit@plt>
   162e0:	cmp	r0, #0
   162e4:	beq	1688c <sigaltstack@plt+0x52a0>
   162e8:	strb	r6, [fp, #-92]	; 0xffffffa4
   162ec:	bl	11394 <__ctype_get_mb_cur_max@plt>
   162f0:	mov	r1, r0
   162f4:	mov	r0, r5
   162f8:	bl	14c28 <sigaltstack@plt+0x363c>
   162fc:	sub	r3, fp, #88	; 0x58
   16300:	mov	r1, r5
   16304:	mov	r2, r0
   16308:	sub	r0, fp, #64	; 0x40
   1630c:	bl	15cd4 <sigaltstack@plt+0x46e8>
   16310:	cmn	r0, #1
   16314:	str	r0, [fp, #-72]	; 0xffffffb8
   16318:	strbeq	r7, [fp, #-68]	; 0xffffffbc
   1631c:	streq	r6, [fp, #-72]	; 0xffffffb8
   16320:	strbeq	r6, [fp, #-80]	; 0xffffffb0
   16324:	beq	1639c <sigaltstack@plt+0x4db0>
   16328:	cmn	r0, #2
   1632c:	beq	16388 <sigaltstack@plt+0x4d9c>
   16330:	cmp	r0, #0
   16334:	beq	16820 <sigaltstack@plt+0x5234>
   16338:	ldr	r4, [fp, #-64]	; 0xffffffc0
   1633c:	sub	r0, fp, #88	; 0x58
   16340:	strb	r6, [fp, #-68]	; 0xffffffbc
   16344:	bl	112b0 <mbsinit@plt>
   16348:	strb	r6, [fp, #-80]	; 0xffffffb0
   1634c:	cmp	r0, #0
   16350:	strbne	r7, [fp, #-92]	; 0xffffffa4
   16354:	cmp	r4, #0
   16358:	bne	164cc <sigaltstack@plt+0x4ee0>
   1635c:	mov	r0, r9
   16360:	bl	17d5c <sigaltstack@plt+0x6770>
   16364:	mov	r0, #1
   16368:	sub	sp, fp, #32
   1636c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16370:	add	r3, r0, #29
   16374:	bic	r3, r3, #7
   16378:	sub	sp, sp, r3
   1637c:	add	r3, sp, #15
   16380:	bic	r9, r3, #15
   16384:	b	1612c <sigaltstack@plt+0x4b40>
   16388:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1638c:	bl	1146c <strlen@plt>
   16390:	strb	r7, [fp, #-68]	; 0xffffffbc
   16394:	strb	r6, [fp, #-80]	; 0xffffffb0
   16398:	str	r0, [fp, #-72]	; 0xffffffb8
   1639c:	add	r3, r8, r8, lsl #2
   163a0:	add	r3, r9, r3, lsl #3
   163a4:	ldr	r2, [r3, #4]
   163a8:	ldr	r4, [fp, #-72]	; 0xffffffb8
   163ac:	cmp	r2, r4
   163b0:	beq	166e4 <sigaltstack@plt+0x50f8>
   163b4:	cmp	r8, #0
   163b8:	beq	1669c <sigaltstack@plt+0x50b0>
   163bc:	ldr	r5, [sl, r8, lsl #2]
   163c0:	cmp	r5, #0
   163c4:	sub	r8, r8, r5
   163c8:	beq	164a8 <sigaltstack@plt+0x4ebc>
   163cc:	ldrb	r3, [fp, #-136]	; 0xffffff78
   163d0:	cmp	r3, #0
   163d4:	bne	164f8 <sigaltstack@plt+0x4f0c>
   163d8:	ldr	r4, [fp, #-132]	; 0xffffff7c
   163dc:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   163e0:	cmp	r3, #0
   163e4:	bne	1641c <sigaltstack@plt+0x4e30>
   163e8:	ldrb	r3, [r4]
   163ec:	ldr	r1, [pc, #1216]	; 168b4 <sigaltstack@plt+0x52c8>
   163f0:	and	r2, r3, #31
   163f4:	lsr	r3, r3, #5
   163f8:	ldr	r3, [r1, r3, lsl #2]
   163fc:	lsr	r3, r3, r2
   16400:	tst	r3, #1
   16404:	bne	1650c <sigaltstack@plt+0x4f20>
   16408:	sub	r0, fp, #144	; 0x90
   1640c:	bl	112b0 <mbsinit@plt>
   16410:	cmp	r0, #0
   16414:	beq	1688c <sigaltstack@plt+0x52a0>
   16418:	strb	r6, [fp, #-148]	; 0xffffff6c
   1641c:	bl	11394 <__ctype_get_mb_cur_max@plt>
   16420:	mov	r1, r0
   16424:	mov	r0, r4
   16428:	bl	14c28 <sigaltstack@plt+0x363c>
   1642c:	sub	r3, fp, #144	; 0x90
   16430:	mov	r1, r4
   16434:	mov	r2, r0
   16438:	sub	r0, fp, #120	; 0x78
   1643c:	bl	15cd4 <sigaltstack@plt+0x46e8>
   16440:	cmn	r0, #1
   16444:	str	r0, [fp, #-128]	; 0xffffff80
   16448:	beq	16484 <sigaltstack@plt+0x4e98>
   1644c:	cmn	r0, #2
   16450:	beq	16528 <sigaltstack@plt+0x4f3c>
   16454:	cmp	r0, #0
   16458:	beq	16540 <sigaltstack@plt+0x4f54>
   1645c:	ldr	r4, [fp, #-120]	; 0xffffff88
   16460:	sub	r0, fp, #144	; 0x90
   16464:	strb	r6, [fp, #-124]	; 0xffffff84
   16468:	bl	112b0 <mbsinit@plt>
   1646c:	strb	r6, [fp, #-136]	; 0xffffff78
   16470:	cmp	r0, #0
   16474:	strbne	r7, [fp, #-148]	; 0xffffff6c
   16478:	cmp	r4, #0
   1647c:	bne	1648c <sigaltstack@plt+0x4ea0>
   16480:	bl	115c8 <abort@plt>
   16484:	str	r6, [fp, #-128]	; 0xffffff80
   16488:	strb	r7, [fp, #-124]	; 0xffffff84
   1648c:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16490:	ldr	r3, [fp, #-128]	; 0xffffff80
   16494:	subs	r5, r5, #1
   16498:	add	r4, r4, r3
   1649c:	strb	r7, [fp, #-136]	; 0xffffff78
   164a0:	str	r4, [fp, #-132]	; 0xffffff7c
   164a4:	bne	163dc <sigaltstack@plt+0x4df0>
   164a8:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   164ac:	cmp	r3, #0
   164b0:	beq	162a8 <sigaltstack@plt+0x4cbc>
   164b4:	ldrb	r3, [fp, #-68]	; 0xffffffbc
   164b8:	cmp	r3, #0
   164bc:	ldrne	r4, [fp, #-64]	; 0xffffffc0
   164c0:	beq	1639c <sigaltstack@plt+0x4db0>
   164c4:	cmp	r4, #0
   164c8:	beq	1635c <sigaltstack@plt+0x4d70>
   164cc:	add	r3, r8, r8, lsl #2
   164d0:	add	r3, r9, r3, lsl #3
   164d4:	ldrb	r2, [r3, #8]
   164d8:	cmp	r2, #0
   164dc:	beq	163a4 <sigaltstack@plt+0x4db8>
   164e0:	ldr	r3, [r3, #12]
   164e4:	cmp	r4, r3
   164e8:	bne	163b4 <sigaltstack@plt+0x4dc8>
   164ec:	ldr	r4, [fp, #-72]	; 0xffffffb8
   164f0:	ldr	r5, [fp, #-76]	; 0xffffffb4
   164f4:	b	16700 <sigaltstack@plt+0x5114>
   164f8:	ldrb	r3, [fp, #-124]	; 0xffffff84
   164fc:	cmp	r3, #0
   16500:	ldrne	r4, [fp, #-120]	; 0xffffff88
   16504:	beq	1648c <sigaltstack@plt+0x4ea0>
   16508:	b	16478 <sigaltstack@plt+0x4e8c>
   1650c:	str	r6, [fp, #-128]	; 0xffffff80
   16510:	ldrb	r3, [r4]
   16514:	strb	r6, [fp, #-124]	; 0xffffff84
   16518:	strb	r6, [fp, #-136]	; 0xffffff78
   1651c:	str	r3, [fp, #-120]	; 0xffffff88
   16520:	mov	r4, r3
   16524:	b	16478 <sigaltstack@plt+0x4e8c>
   16528:	ldr	r4, [fp, #-132]	; 0xffffff7c
   1652c:	mov	r0, r4
   16530:	bl	1146c <strlen@plt>
   16534:	strb	r7, [fp, #-124]	; 0xffffff84
   16538:	str	r0, [fp, #-128]	; 0xffffff80
   1653c:	b	16490 <sigaltstack@plt+0x4ea4>
   16540:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16544:	str	r6, [fp, #-128]	; 0xffffff80
   16548:	ldrb	r3, [r4]
   1654c:	cmp	r3, #0
   16550:	bne	168a0 <sigaltstack@plt+0x52b4>
   16554:	ldr	r4, [fp, #-120]	; 0xffffff88
   16558:	cmp	r4, #0
   1655c:	beq	16460 <sigaltstack@plt+0x4e74>
   16560:	ldr	r3, [pc, #848]	; 168b8 <sigaltstack@plt+0x52cc>
   16564:	mov	r2, #172	; 0xac
   16568:	ldr	r1, [pc, #844]	; 168bc <sigaltstack@plt+0x52d0>
   1656c:	ldr	r0, [pc, #844]	; 168c0 <sigaltstack@plt+0x52d4>
   16570:	bl	115e0 <__assert_fail@plt>
   16574:	sub	r0, fp, #200	; 0xc8
   16578:	bl	112b0 <mbsinit@plt>
   1657c:	cmp	r0, #0
   16580:	beq	1688c <sigaltstack@plt+0x52a0>
   16584:	strb	r6, [fp, #-204]	; 0xffffff34
   16588:	bl	11394 <__ctype_get_mb_cur_max@plt>
   1658c:	mov	r1, r0
   16590:	mov	r0, r5
   16594:	bl	14c28 <sigaltstack@plt+0x363c>
   16598:	sub	r3, fp, #200	; 0xc8
   1659c:	mov	r1, r5
   165a0:	mov	r2, r0
   165a4:	sub	r0, fp, #176	; 0xb0
   165a8:	bl	15cd4 <sigaltstack@plt+0x46e8>
   165ac:	cmn	r0, #1
   165b0:	str	r0, [fp, #-184]	; 0xffffff48
   165b4:	strbeq	r7, [fp, #-180]	; 0xffffff4c
   165b8:	streq	r6, [fp, #-184]	; 0xffffff48
   165bc:	beq	16668 <sigaltstack@plt+0x507c>
   165c0:	cmn	r0, #2
   165c4:	beq	16658 <sigaltstack@plt+0x506c>
   165c8:	cmp	r0, #0
   165cc:	beq	16734 <sigaltstack@plt+0x5148>
   165d0:	ldr	r5, [fp, #-176]	; 0xffffff50
   165d4:	sub	r0, fp, #200	; 0xc8
   165d8:	strb	r6, [fp, #-180]	; 0xffffff4c
   165dc:	bl	112b0 <mbsinit@plt>
   165e0:	strb	r6, [fp, #-192]	; 0xffffff40
   165e4:	cmp	r0, #0
   165e8:	strbne	r7, [fp, #-204]	; 0xffffff34
   165ec:	cmp	r5, #0
   165f0:	beq	161ac <sigaltstack@plt+0x4bc0>
   165f4:	ldr	r3, [fp, #-188]	; 0xffffff44
   165f8:	mov	r2, r6
   165fc:	cmp	r3, r8
   16600:	strne	r3, [r4, #-16]
   16604:	beq	16680 <sigaltstack@plt+0x5094>
   16608:	ldr	r3, [fp, #-184]	; 0xffffff48
   1660c:	cmp	r2, #0
   16610:	str	r3, [r4, #-12]
   16614:	ldrne	r3, [fp, #-176]	; 0xffffff50
   16618:	ldr	r5, [fp, #-188]	; 0xffffff44
   1661c:	strne	r3, [r4, #-4]
   16620:	ldr	r3, [fp, #-184]	; 0xffffff48
   16624:	strb	r2, [r4, #-8]
   16628:	add	r5, r5, r3
   1662c:	add	r4, r4, #40	; 0x28
   16630:	strb	r7, [fp, #-192]	; 0xffffff40
   16634:	str	r5, [fp, #-188]	; 0xffffff44
   16638:	b	16164 <sigaltstack@plt+0x4b78>
   1663c:	str	r6, [fp, #-72]	; 0xffffffb8
   16640:	ldrb	r3, [r5]
   16644:	strb	r6, [fp, #-68]	; 0xffffffbc
   16648:	strb	r6, [fp, #-80]	; 0xffffffb0
   1664c:	str	r3, [fp, #-64]	; 0xffffffc0
   16650:	mov	r4, r3
   16654:	b	16354 <sigaltstack@plt+0x4d68>
   16658:	ldr	r0, [fp, #-188]	; 0xffffff44
   1665c:	bl	1146c <strlen@plt>
   16660:	strb	r7, [fp, #-180]	; 0xffffff4c
   16664:	str	r0, [fp, #-184]	; 0xffffff48
   16668:	ldr	r3, [fp, #-188]	; 0xffffff44
   1666c:	strb	r6, [fp, #-192]	; 0xffffff40
   16670:	cmp	r3, r8
   16674:	mov	r2, r7
   16678:	strne	r3, [r4, #-16]
   1667c:	bne	16608 <sigaltstack@plt+0x501c>
   16680:	ldr	r2, [fp, #-184]	; 0xffffff48
   16684:	mov	r1, r8
   16688:	mov	r0, r4
   1668c:	bl	1128c <memcpy@plt>
   16690:	str	r4, [r4, #-16]
   16694:	ldrb	r2, [fp, #-180]	; 0xffffff4c
   16698:	b	16608 <sigaltstack@plt+0x501c>
   1669c:	ldrb	r3, [fp, #-136]	; 0xffffff78
   166a0:	cmp	r3, #0
   166a4:	beq	16758 <sigaltstack@plt+0x516c>
   166a8:	ldrb	r3, [fp, #-124]	; 0xffffff84
   166ac:	cmp	r3, #0
   166b0:	ldrne	r4, [fp, #-120]	; 0xffffff88
   166b4:	bne	167f8 <sigaltstack@plt+0x520c>
   166b8:	ldr	r4, [fp, #-132]	; 0xffffff7c
   166bc:	ldr	r3, [fp, #-128]	; 0xffffff80
   166c0:	ldr	r5, [fp, #-76]	; 0xffffffb4
   166c4:	add	r4, r4, r3
   166c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   166cc:	strb	r7, [fp, #-136]	; 0xffffff78
   166d0:	add	r5, r5, r3
   166d4:	strb	r7, [fp, #-80]	; 0xffffffb0
   166d8:	str	r4, [fp, #-132]	; 0xffffff7c
   166dc:	str	r5, [fp, #-76]	; 0xffffffb4
   166e0:	b	162ac <sigaltstack@plt+0x4cc0>
   166e4:	ldr	r5, [fp, #-76]	; 0xffffffb4
   166e8:	ldr	r0, [r3]
   166ec:	mov	r1, r5
   166f0:	mov	r2, r4
   166f4:	bl	112d4 <memcmp@plt>
   166f8:	cmp	r0, #0
   166fc:	bne	163b4 <sigaltstack@plt+0x4dc8>
   16700:	ldr	r3, [fp, #-208]	; 0xffffff30
   16704:	add	r8, r8, #1
   16708:	add	r5, r5, r4
   1670c:	cmp	r3, r8
   16710:	str	r5, [fp, #-76]	; 0xffffffb4
   16714:	strb	r7, [fp, #-80]	; 0xffffffb0
   16718:	bne	162ac <sigaltstack@plt+0x4cc0>
   1671c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   16720:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16724:	str	r3, [r2]
   16728:	b	1635c <sigaltstack@plt+0x4d70>
   1672c:	str	r6, [r7]
   16730:	b	16240 <sigaltstack@plt+0x4c54>
   16734:	ldr	r3, [fp, #-188]	; 0xffffff44
   16738:	str	r6, [fp, #-184]	; 0xffffff48
   1673c:	ldrb	r3, [r3]
   16740:	cmp	r3, #0
   16744:	bne	168a0 <sigaltstack@plt+0x52b4>
   16748:	ldr	r5, [fp, #-176]	; 0xffffff50
   1674c:	cmp	r5, #0
   16750:	beq	165d4 <sigaltstack@plt+0x4fe8>
   16754:	b	16560 <sigaltstack@plt+0x4f74>
   16758:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   1675c:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16760:	cmp	r3, #0
   16764:	bne	1679c <sigaltstack@plt+0x51b0>
   16768:	ldrb	r3, [r4]
   1676c:	ldr	r1, [pc, #320]	; 168b4 <sigaltstack@plt+0x52c8>
   16770:	and	r2, r3, #31
   16774:	lsr	r3, r3, #5
   16778:	ldr	r3, [r1, r3, lsl #2]
   1677c:	lsr	r3, r3, r2
   16780:	tst	r3, #1
   16784:	bne	16804 <sigaltstack@plt+0x5218>
   16788:	sub	r0, fp, #144	; 0x90
   1678c:	bl	112b0 <mbsinit@plt>
   16790:	cmp	r0, #0
   16794:	beq	1688c <sigaltstack@plt+0x52a0>
   16798:	strb	r6, [fp, #-148]	; 0xffffff6c
   1679c:	bl	11394 <__ctype_get_mb_cur_max@plt>
   167a0:	mov	r1, r0
   167a4:	mov	r0, r4
   167a8:	bl	14c28 <sigaltstack@plt+0x363c>
   167ac:	sub	r3, fp, #144	; 0x90
   167b0:	mov	r1, r4
   167b4:	mov	r2, r0
   167b8:	sub	r0, fp, #120	; 0x78
   167bc:	bl	15cd4 <sigaltstack@plt+0x46e8>
   167c0:	cmn	r0, #1
   167c4:	str	r0, [fp, #-128]	; 0xffffff80
   167c8:	beq	16844 <sigaltstack@plt+0x5258>
   167cc:	cmn	r0, #2
   167d0:	beq	16850 <sigaltstack@plt+0x5264>
   167d4:	cmp	r0, #0
   167d8:	beq	16868 <sigaltstack@plt+0x527c>
   167dc:	ldr	r4, [fp, #-120]	; 0xffffff88
   167e0:	sub	r0, fp, #144	; 0x90
   167e4:	strb	r6, [fp, #-124]	; 0xffffff84
   167e8:	bl	112b0 <mbsinit@plt>
   167ec:	strb	r6, [fp, #-136]	; 0xffffff78
   167f0:	cmp	r0, #0
   167f4:	strbne	r7, [fp, #-148]	; 0xffffff6c
   167f8:	cmp	r4, #0
   167fc:	beq	16480 <sigaltstack@plt+0x4e94>
   16800:	b	166b8 <sigaltstack@plt+0x50cc>
   16804:	str	r6, [fp, #-128]	; 0xffffff80
   16808:	ldrb	r3, [r4]
   1680c:	strb	r6, [fp, #-124]	; 0xffffff84
   16810:	strb	r6, [fp, #-136]	; 0xffffff78
   16814:	str	r3, [fp, #-120]	; 0xffffff88
   16818:	mov	r4, r3
   1681c:	b	167f8 <sigaltstack@plt+0x520c>
   16820:	ldr	r5, [fp, #-76]	; 0xffffffb4
   16824:	str	r6, [fp, #-72]	; 0xffffffb8
   16828:	ldrb	r3, [r5]
   1682c:	cmp	r3, #0
   16830:	bne	168a0 <sigaltstack@plt+0x52b4>
   16834:	ldr	r4, [fp, #-64]	; 0xffffffc0
   16838:	cmp	r4, #0
   1683c:	beq	1633c <sigaltstack@plt+0x4d50>
   16840:	b	16560 <sigaltstack@plt+0x4f74>
   16844:	str	r6, [fp, #-128]	; 0xffffff80
   16848:	strb	r7, [fp, #-124]	; 0xffffff84
   1684c:	b	166b8 <sigaltstack@plt+0x50cc>
   16850:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16854:	mov	r0, r4
   16858:	bl	1146c <strlen@plt>
   1685c:	strb	r7, [fp, #-124]	; 0xffffff84
   16860:	str	r0, [fp, #-128]	; 0xffffff80
   16864:	b	166bc <sigaltstack@plt+0x50d0>
   16868:	ldr	r4, [fp, #-132]	; 0xffffff7c
   1686c:	str	r6, [fp, #-128]	; 0xffffff80
   16870:	ldrb	r3, [r4]
   16874:	cmp	r3, #0
   16878:	bne	168a0 <sigaltstack@plt+0x52b4>
   1687c:	ldr	r4, [fp, #-120]	; 0xffffff88
   16880:	cmp	r4, #0
   16884:	beq	167e0 <sigaltstack@plt+0x51f4>
   16888:	b	16560 <sigaltstack@plt+0x4f74>
   1688c:	ldr	r3, [pc, #36]	; 168b8 <sigaltstack@plt+0x52cc>
   16890:	mov	r2, #143	; 0x8f
   16894:	ldr	r1, [pc, #32]	; 168bc <sigaltstack@plt+0x52d0>
   16898:	ldr	r0, [pc, #36]	; 168c4 <sigaltstack@plt+0x52d8>
   1689c:	bl	115e0 <__assert_fail@plt>
   168a0:	ldr	r3, [pc, #16]	; 168b8 <sigaltstack@plt+0x52cc>
   168a4:	mov	r2, #171	; 0xab
   168a8:	ldr	r1, [pc, #12]	; 168bc <sigaltstack@plt+0x52d0>
   168ac:	ldr	r0, [pc, #20]	; 168c8 <sigaltstack@plt+0x52dc>
   168b0:	bl	115e0 <__assert_fail@plt>
   168b4:	strdeq	r9, [r1], -ip
   168b8:	andeq	r9, r1, ip, lsl r7
   168bc:	andeq	r9, r1, r4, lsr #5
   168c0:	andeq	r9, r1, r0, ror #5
   168c4:			; <UNDEFINED> instruction: 0x000192b0
   168c8:	andeq	r9, r1, r8, asr #5
   168cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168d0:	sub	sp, sp, #300	; 0x12c
   168d4:	mov	fp, r1
   168d8:	str	r0, [sp, #4]
   168dc:	bl	11394 <__ctype_get_mb_cur_max@plt>
   168e0:	cmp	r0, #1
   168e4:	bls	16aa4 <sigaltstack@plt+0x54b8>
   168e8:	ldrb	r2, [fp]
   168ec:	ldr	r9, [pc, #3028]	; 174c8 <sigaltstack@plt+0x5edc>
   168f0:	mov	r1, #0
   168f4:	and	r0, r2, #31
   168f8:	lsr	r3, r2, #5
   168fc:	str	fp, [sp, #32]
   16900:	ldr	r3, [r9, r3, lsl #2]
   16904:	str	r1, [sp, #24]
   16908:	strb	r1, [sp, #16]
   1690c:	lsr	r3, r3, r0
   16910:	ands	r4, r3, #1
   16914:	str	r1, [sp, #20]
   16918:	strb	r1, [sp, #28]
   1691c:	beq	16a08 <sigaltstack@plt+0x541c>
   16920:	mov	r3, #1
   16924:	mov	r4, r2
   16928:	str	r3, [sp, #36]	; 0x24
   1692c:	strb	r3, [sp, #40]	; 0x28
   16930:	cmp	r4, #0
   16934:	mov	r3, #1
   16938:	str	r2, [sp, #44]	; 0x2c
   1693c:	strb	r3, [sp, #28]
   16940:	beq	16a98 <sigaltstack@plt+0x54ac>
   16944:	ldr	r1, [sp, #4]
   16948:	mov	r3, #0
   1694c:	mov	sl, #1
   16950:	str	fp, [sp, #88]	; 0x58
   16954:	str	fp, [sp, #12]
   16958:	mov	r8, r3
   1695c:	mov	r7, r3
   16960:	mov	r5, sl
   16964:	mov	r4, r1
   16968:	mov	fp, r3
   1696c:	str	r1, [sp, #144]	; 0x90
   16970:	strb	r3, [sp, #72]	; 0x48
   16974:	str	r3, [sp, #76]	; 0x4c
   16978:	strb	r3, [sp, #84]	; 0x54
   1697c:	strb	r3, [sp, #128]	; 0x80
   16980:	str	r3, [sp, #132]	; 0x84
   16984:	strb	r3, [sp, #140]	; 0x8c
   16988:	str	r3, [sp, #8]
   1698c:	str	r3, [sp, #80]	; 0x50
   16990:	str	r3, [sp, #136]	; 0x88
   16994:	ldrb	r3, [sp, #128]	; 0x80
   16998:	cmp	r3, #0
   1699c:	bne	16c00 <sigaltstack@plt+0x5614>
   169a0:	ldrb	r3, [r4]
   169a4:	and	r2, r3, #31
   169a8:	lsr	r3, r3, #5
   169ac:	ldr	r3, [r9, r3, lsl #2]
   169b0:	lsr	r3, r3, r2
   169b4:	tst	r3, #1
   169b8:	beq	16bec <sigaltstack@plt+0x5600>
   169bc:	str	r5, [sp, #148]	; 0x94
   169c0:	ldrb	r4, [r4]
   169c4:	strb	r5, [sp, #152]	; 0x98
   169c8:	str	r4, [sp, #156]	; 0x9c
   169cc:	cmp	r4, #0
   169d0:	strb	r5, [sp, #140]	; 0x8c
   169d4:	beq	16bd4 <sigaltstack@plt+0x55e8>
   169d8:	cmp	fp, #9
   169dc:	movls	r2, #0
   169e0:	andhi	r2, sl, #1
   169e4:	cmp	r2, #0
   169e8:	beq	17420 <sigaltstack@plt+0x5e34>
   169ec:	add	r3, fp, fp, lsl #2
   169f0:	cmp	r8, r3
   169f4:	bcs	16cc4 <sigaltstack@plt+0x56d8>
   169f8:	add	r3, r8, #1
   169fc:	mov	sl, r2
   16a00:	ldr	r8, [sp, #8]
   16a04:	b	16de0 <sigaltstack@plt+0x57f4>
   16a08:	add	r0, sp, #20
   16a0c:	bl	112b0 <mbsinit@plt>
   16a10:	cmp	r0, #0
   16a14:	beq	17478 <sigaltstack@plt+0x5e8c>
   16a18:	mov	r5, #1
   16a1c:	strb	r5, [sp, #16]
   16a20:	bl	11394 <__ctype_get_mb_cur_max@plt>
   16a24:	mov	r1, r0
   16a28:	mov	r0, fp
   16a2c:	bl	14c28 <sigaltstack@plt+0x363c>
   16a30:	add	r3, sp, #20
   16a34:	mov	r1, fp
   16a38:	mov	r2, r0
   16a3c:	add	r0, sp, #44	; 0x2c
   16a40:	bl	15cd4 <sigaltstack@plt+0x46e8>
   16a44:	cmn	r0, #1
   16a48:	str	r0, [sp, #36]	; 0x24
   16a4c:	strbeq	r4, [sp, #40]	; 0x28
   16a50:	streq	r5, [sp, #36]	; 0x24
   16a54:	beq	16ea0 <sigaltstack@plt+0x58b4>
   16a58:	cmn	r0, #2
   16a5c:	beq	16e90 <sigaltstack@plt+0x58a4>
   16a60:	cmp	r0, #0
   16a64:	beq	173c0 <sigaltstack@plt+0x5dd4>
   16a68:	ldr	r4, [sp, #44]	; 0x2c
   16a6c:	mov	r3, #1
   16a70:	add	r0, sp, #20
   16a74:	strb	r3, [sp, #40]	; 0x28
   16a78:	bl	112b0 <mbsinit@plt>
   16a7c:	cmp	r0, #0
   16a80:	movne	r3, #0
   16a84:	strbne	r3, [sp, #16]
   16a88:	mov	r3, #1
   16a8c:	cmp	r4, #0
   16a90:	strb	r3, [sp, #28]
   16a94:	bne	16944 <sigaltstack@plt+0x5358>
   16a98:	ldr	r0, [sp, #4]
   16a9c:	add	sp, sp, #300	; 0x12c
   16aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16aa4:	ldrb	r7, [fp]
   16aa8:	cmp	r7, #0
   16aac:	beq	16a98 <sigaltstack@plt+0x54ac>
   16ab0:	ldr	r2, [sp, #4]
   16ab4:	add	r8, fp, #1
   16ab8:	ldrb	r3, [r2]
   16abc:	cmp	r3, #0
   16ac0:	beq	16bd4 <sigaltstack@plt+0x55e8>
   16ac4:	mov	r5, #0
   16ac8:	add	r6, r2, #1
   16acc:	cmp	r7, r3
   16ad0:	mov	r4, r5
   16ad4:	mov	r9, r5
   16ad8:	mov	sl, fp
   16adc:	mov	lr, #1
   16ae0:	add	r5, r5, #1
   16ae4:	sub	r0, r6, #1
   16ae8:	beq	16b80 <sigaltstack@plt+0x5594>
   16aec:	ldrb	r3, [r6]
   16af0:	cmp	r3, #0
   16af4:	beq	16bd4 <sigaltstack@plt+0x55e8>
   16af8:	add	r4, r4, #1
   16afc:	cmp	r5, #9
   16b00:	movls	r3, #0
   16b04:	andhi	r3, lr, #1
   16b08:	cmp	r3, #0
   16b0c:	beq	16b6c <sigaltstack@plt+0x5580>
   16b10:	add	r2, r5, r5, lsl #2
   16b14:	cmp	r4, r2
   16b18:	bcc	16be0 <sigaltstack@plt+0x55f4>
   16b1c:	cmp	sl, #0
   16b20:	str	r3, [sp, #4]
   16b24:	beq	16b44 <sigaltstack@plt+0x5558>
   16b28:	mov	r0, sl
   16b2c:	sub	r1, r4, r9
   16b30:	bl	114d8 <strnlen@plt>
   16b34:	ldrb	r2, [sl, r0]!
   16b38:	cmp	r2, #0
   16b3c:	bne	16e74 <sigaltstack@plt+0x5888>
   16b40:	mov	r9, r4
   16b44:	mov	r0, fp
   16b48:	bl	1146c <strlen@plt>
   16b4c:	add	r3, sp, #240	; 0xf0
   16b50:	mov	r1, fp
   16b54:	mov	r2, r0
   16b58:	mov	r0, r6
   16b5c:	bl	15f5c <sigaltstack@plt+0x4970>
   16b60:	subs	lr, r0, #0
   16b64:	bne	17418 <sigaltstack@plt+0x5e2c>
   16b68:	mov	sl, lr
   16b6c:	ldrb	r3, [r6], #1
   16b70:	cmp	r7, r3
   16b74:	add	r5, r5, #1
   16b78:	sub	r0, r6, #1
   16b7c:	bne	16aec <sigaltstack@plt+0x5500>
   16b80:	ldrb	r3, [fp, #1]
   16b84:	cmp	r3, #0
   16b88:	beq	16a9c <sigaltstack@plt+0x54b0>
   16b8c:	ldrb	r2, [r6]
   16b90:	cmp	r2, #0
   16b94:	beq	16bd4 <sigaltstack@plt+0x55e8>
   16b98:	cmp	r2, r3
   16b9c:	add	r4, r4, #2
   16ba0:	bne	16afc <sigaltstack@plt+0x5510>
   16ba4:	mov	ip, r6
   16ba8:	mov	r1, r8
   16bac:	b	16bbc <sigaltstack@plt+0x55d0>
   16bb0:	cmp	r3, r2
   16bb4:	add	r4, r4, #1
   16bb8:	bne	16afc <sigaltstack@plt+0x5510>
   16bbc:	ldrb	r3, [r1, #1]!
   16bc0:	cmp	r3, #0
   16bc4:	beq	16a9c <sigaltstack@plt+0x54b0>
   16bc8:	ldrb	r2, [ip, #1]!
   16bcc:	cmp	r2, #0
   16bd0:	bne	16bb0 <sigaltstack@plt+0x55c4>
   16bd4:	mov	r0, #0
   16bd8:	add	sp, sp, #300	; 0x12c
   16bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16be0:	mov	lr, r3
   16be4:	ldrb	r3, [r6], #1
   16be8:	b	16b70 <sigaltstack@plt+0x5584>
   16bec:	add	r0, sp, #132	; 0x84
   16bf0:	bl	112b0 <mbsinit@plt>
   16bf4:	cmp	r0, #0
   16bf8:	beq	17478 <sigaltstack@plt+0x5e8c>
   16bfc:	strb	r5, [sp, #128]	; 0x80
   16c00:	bl	11394 <__ctype_get_mb_cur_max@plt>
   16c04:	mov	r1, r0
   16c08:	mov	r0, r4
   16c0c:	bl	14c28 <sigaltstack@plt+0x363c>
   16c10:	add	r3, sp, #132	; 0x84
   16c14:	mov	r1, r4
   16c18:	mov	r2, r0
   16c1c:	add	r0, sp, #156	; 0x9c
   16c20:	bl	15cd4 <sigaltstack@plt+0x46e8>
   16c24:	cmn	r0, #1
   16c28:	str	r0, [sp, #148]	; 0x94
   16c2c:	strbeq	r7, [sp, #152]	; 0x98
   16c30:	streq	r5, [sp, #148]	; 0x94
   16c34:	beq	16c74 <sigaltstack@plt+0x5688>
   16c38:	cmn	r0, #2
   16c3c:	beq	16c64 <sigaltstack@plt+0x5678>
   16c40:	cmp	r0, #0
   16c44:	beq	17314 <sigaltstack@plt+0x5d28>
   16c48:	ldr	r4, [sp, #156]	; 0x9c
   16c4c:	add	r0, sp, #132	; 0x84
   16c50:	strb	r5, [sp, #152]	; 0x98
   16c54:	bl	112b0 <mbsinit@plt>
   16c58:	cmp	r0, #0
   16c5c:	strbne	r7, [sp, #128]	; 0x80
   16c60:	b	169cc <sigaltstack@plt+0x53e0>
   16c64:	ldr	r0, [sp, #144]	; 0x90
   16c68:	bl	1146c <strlen@plt>
   16c6c:	strb	r7, [sp, #152]	; 0x98
   16c70:	str	r0, [sp, #148]	; 0x94
   16c74:	cmp	fp, #9
   16c78:	movls	r3, #0
   16c7c:	andhi	r3, sl, #1
   16c80:	cmp	r3, #0
   16c84:	strb	r5, [sp, #140]	; 0x8c
   16c88:	addeq	r8, r8, #1
   16c8c:	bne	16cb8 <sigaltstack@plt+0x56cc>
   16c90:	ldr	r6, [sp, #148]	; 0x94
   16c94:	ldr	r3, [sp, #36]	; 0x24
   16c98:	ldr	r4, [sp, #144]	; 0x90
   16c9c:	cmp	r6, r3
   16ca0:	beq	16eb8 <sigaltstack@plt+0x58cc>
   16ca4:	add	r4, r4, r6
   16ca8:	str	r4, [sp, #144]	; 0x90
   16cac:	strb	r7, [sp, #140]	; 0x8c
   16cb0:	add	fp, fp, #1
   16cb4:	b	16994 <sigaltstack@plt+0x53a8>
   16cb8:	add	r2, fp, fp, lsl #2
   16cbc:	cmp	r8, r2
   16cc0:	bcc	174a0 <sigaltstack@plt+0x5eb4>
   16cc4:	ldr	r3, [sp, #8]
   16cc8:	subs	r6, r8, r3
   16ccc:	ldrb	r3, [sp, #84]	; 0x54
   16cd0:	beq	174ac <sigaltstack@plt+0x5ec0>
   16cd4:	cmp	r3, #0
   16cd8:	beq	16e88 <sigaltstack@plt+0x589c>
   16cdc:	ldrb	r3, [sp, #96]	; 0x60
   16ce0:	cmp	r3, #0
   16ce4:	ldrne	r4, [sp, #100]	; 0x64
   16ce8:	bne	16da4 <sigaltstack@plt+0x57b8>
   16cec:	ldr	r4, [sp, #88]	; 0x58
   16cf0:	ldr	r3, [sp, #92]	; 0x5c
   16cf4:	subs	r6, r6, #1
   16cf8:	add	r4, r4, r3
   16cfc:	strb	r7, [sp, #84]	; 0x54
   16d00:	str	r4, [sp, #88]	; 0x58
   16d04:	mov	sl, r4
   16d08:	beq	16ff0 <sigaltstack@plt+0x5a04>
   16d0c:	ldrb	r3, [sp, #72]	; 0x48
   16d10:	cmp	r3, #0
   16d14:	bne	16d48 <sigaltstack@plt+0x575c>
   16d18:	ldrb	r3, [r4]
   16d1c:	and	r2, r3, #31
   16d20:	lsr	r3, r3, #5
   16d24:	ldr	r3, [r9, r3, lsl #2]
   16d28:	lsr	r3, r3, r2
   16d2c:	tst	r3, #1
   16d30:	bne	16e10 <sigaltstack@plt+0x5824>
   16d34:	add	r0, sp, #76	; 0x4c
   16d38:	bl	112b0 <mbsinit@plt>
   16d3c:	cmp	r0, #0
   16d40:	beq	17478 <sigaltstack@plt+0x5e8c>
   16d44:	strb	r5, [sp, #72]	; 0x48
   16d48:	bl	11394 <__ctype_get_mb_cur_max@plt>
   16d4c:	mov	r1, r0
   16d50:	mov	r0, r4
   16d54:	bl	14c28 <sigaltstack@plt+0x363c>
   16d58:	add	r3, sp, #76	; 0x4c
   16d5c:	mov	r1, r4
   16d60:	mov	r2, r0
   16d64:	add	r0, sp, #100	; 0x64
   16d68:	bl	15cd4 <sigaltstack@plt+0x46e8>
   16d6c:	cmn	r0, #1
   16d70:	str	r0, [sp, #92]	; 0x5c
   16d74:	beq	16e2c <sigaltstack@plt+0x5840>
   16d78:	cmn	r0, #2
   16d7c:	beq	16e38 <sigaltstack@plt+0x584c>
   16d80:	cmp	r0, #0
   16d84:	beq	16e50 <sigaltstack@plt+0x5864>
   16d88:	ldr	r4, [sp, #100]	; 0x64
   16d8c:	add	r0, sp, #76	; 0x4c
   16d90:	strb	r5, [sp, #96]	; 0x60
   16d94:	bl	112b0 <mbsinit@plt>
   16d98:	strb	r5, [sp, #84]	; 0x54
   16d9c:	cmp	r0, #0
   16da0:	strbne	r7, [sp, #72]	; 0x48
   16da4:	cmp	r4, #0
   16da8:	bne	16cec <sigaltstack@plt+0x5700>
   16dac:	ldrb	r3, [sp, #84]	; 0x54
   16db0:	cmp	r3, #0
   16db4:	beq	16fec <sigaltstack@plt+0x5a00>
   16db8:	add	r2, sp, #240	; 0xf0
   16dbc:	ldr	r1, [sp, #12]
   16dc0:	ldr	r0, [sp, #4]
   16dc4:	bl	160c4 <sigaltstack@plt+0x4ad8>
   16dc8:	subs	sl, r0, #0
   16dcc:	bne	17418 <sigaltstack@plt+0x5e2c>
   16dd0:	ldrb	r3, [sp, #152]	; 0x98
   16dd4:	cmp	r3, #0
   16dd8:	add	r3, r8, #1
   16ddc:	beq	16eac <sigaltstack@plt+0x58c0>
   16de0:	ldrb	r2, [sp, #40]	; 0x28
   16de4:	cmp	r2, #0
   16de8:	beq	16eac <sigaltstack@plt+0x58c0>
   16dec:	ldr	r1, [sp, #156]	; 0x9c
   16df0:	ldr	r2, [sp, #44]	; 0x2c
   16df4:	str	r8, [sp, #8]
   16df8:	cmp	r1, r2
   16dfc:	beq	173b8 <sigaltstack@plt+0x5dcc>
   16e00:	ldr	r4, [sp, #144]	; 0x90
   16e04:	mov	r8, r3
   16e08:	ldr	r6, [sp, #148]	; 0x94
   16e0c:	b	16ca4 <sigaltstack@plt+0x56b8>
   16e10:	str	r5, [sp, #92]	; 0x5c
   16e14:	ldrb	r3, [r4]
   16e18:	strb	r5, [sp, #96]	; 0x60
   16e1c:	strb	r5, [sp, #84]	; 0x54
   16e20:	str	r3, [sp, #100]	; 0x64
   16e24:	mov	r4, r3
   16e28:	b	16da4 <sigaltstack@plt+0x57b8>
   16e2c:	str	r5, [sp, #92]	; 0x5c
   16e30:	strb	r7, [sp, #96]	; 0x60
   16e34:	b	16cec <sigaltstack@plt+0x5700>
   16e38:	ldr	r4, [sp, #88]	; 0x58
   16e3c:	mov	r0, r4
   16e40:	bl	1146c <strlen@plt>
   16e44:	strb	r7, [sp, #96]	; 0x60
   16e48:	str	r0, [sp, #92]	; 0x5c
   16e4c:	b	16cf0 <sigaltstack@plt+0x5704>
   16e50:	ldr	r4, [sp, #88]	; 0x58
   16e54:	str	r5, [sp, #92]	; 0x5c
   16e58:	ldrb	r3, [r4]
   16e5c:	cmp	r3, #0
   16e60:	bne	1748c <sigaltstack@plt+0x5ea0>
   16e64:	ldr	r4, [sp, #100]	; 0x64
   16e68:	cmp	r4, #0
   16e6c:	beq	16d8c <sigaltstack@plt+0x57a0>
   16e70:	b	16fd8 <sigaltstack@plt+0x59ec>
   16e74:	ldr	r3, [sp, #4]
   16e78:	mov	r9, r4
   16e7c:	mov	lr, r3
   16e80:	ldrb	r3, [r6], #1
   16e84:	b	16b70 <sigaltstack@plt+0x5584>
   16e88:	ldr	r4, [sp, #88]	; 0x58
   16e8c:	b	16d0c <sigaltstack@plt+0x5720>
   16e90:	ldr	r0, [sp, #32]
   16e94:	bl	1146c <strlen@plt>
   16e98:	strb	r4, [sp, #40]	; 0x28
   16e9c:	str	r0, [sp, #36]	; 0x24
   16ea0:	mov	r3, #1
   16ea4:	strb	r3, [sp, #28]
   16ea8:	b	16944 <sigaltstack@plt+0x5358>
   16eac:	str	r8, [sp, #8]
   16eb0:	mov	r8, r3
   16eb4:	b	16c90 <sigaltstack@plt+0x56a4>
   16eb8:	mov	r2, r6
   16ebc:	mov	r0, r4
   16ec0:	ldr	r1, [sp, #32]
   16ec4:	bl	112d4 <memcmp@plt>
   16ec8:	cmp	r0, #0
   16ecc:	bne	16ca4 <sigaltstack@plt+0x56b8>
   16ed0:	add	lr, sp, #128	; 0x80
   16ed4:	add	ip, sp, #184	; 0xb8
   16ed8:	ldm	lr!, {r0, r1, r2, r3}
   16edc:	stmia	ip!, {r0, r1, r2, r3}
   16ee0:	ldm	lr!, {r0, r1, r2, r3}
   16ee4:	strb	r7, [sp, #196]	; 0xc4
   16ee8:	stmia	ip!, {r0, r1, r2, r3}
   16eec:	ldm	lr!, {r0, r1, r2, r3}
   16ef0:	ldr	r4, [sp, #200]	; 0xc8
   16ef4:	stmia	ip!, {r0, r1, r2, r3}
   16ef8:	ldm	lr, {r0, r1}
   16efc:	ldr	r3, [sp, #204]	; 0xcc
   16f00:	add	r4, r4, r3
   16f04:	stm	ip, {r0, r1}
   16f08:	str	r4, [sp, #200]	; 0xc8
   16f0c:	ldr	r3, [sp, #12]
   16f10:	strb	r7, [sp, #240]	; 0xf0
   16f14:	str	r3, [sp, #256]	; 0x100
   16f18:	ldrb	r3, [r3]
   16f1c:	str	r7, [sp, #244]	; 0xf4
   16f20:	str	r7, [sp, #248]	; 0xf8
   16f24:	and	r2, r3, #31
   16f28:	lsr	r1, r3, #5
   16f2c:	strb	r7, [sp, #252]	; 0xfc
   16f30:	ldr	r6, [r9, r1, lsl #2]
   16f34:	lsr	r6, r6, r2
   16f38:	ands	r6, r6, #1
   16f3c:	beq	16f60 <sigaltstack@plt+0x5974>
   16f40:	mov	r4, r3
   16f44:	str	r5, [sp, #260]	; 0x104
   16f48:	str	r3, [sp, #268]	; 0x10c
   16f4c:	strb	r5, [sp, #264]	; 0x108
   16f50:	cmp	r4, #0
   16f54:	strb	r5, [sp, #252]	; 0xfc
   16f58:	bne	17044 <sigaltstack@plt+0x5a58>
   16f5c:	bl	115c8 <abort@plt>
   16f60:	add	r0, sp, #244	; 0xf4
   16f64:	bl	112b0 <mbsinit@plt>
   16f68:	cmp	r0, #0
   16f6c:	beq	17478 <sigaltstack@plt+0x5e8c>
   16f70:	strb	r5, [sp, #240]	; 0xf0
   16f74:	bl	11394 <__ctype_get_mb_cur_max@plt>
   16f78:	ldr	r4, [sp, #12]
   16f7c:	mov	r1, r0
   16f80:	mov	r0, r4
   16f84:	bl	14c28 <sigaltstack@plt+0x363c>
   16f88:	add	r3, sp, #244	; 0xf4
   16f8c:	mov	r1, r4
   16f90:	mov	r2, r0
   16f94:	add	r0, sp, #268	; 0x10c
   16f98:	bl	15cd4 <sigaltstack@plt+0x46e8>
   16f9c:	cmn	r0, #1
   16fa0:	str	r0, [sp, #260]	; 0x104
   16fa4:	beq	1742c <sigaltstack@plt+0x5e40>
   16fa8:	cmn	r0, #2
   16fac:	beq	1743c <sigaltstack@plt+0x5e50>
   16fb0:	cmp	r0, #0
   16fb4:	bne	173e4 <sigaltstack@plt+0x5df8>
   16fb8:	ldr	r4, [sp, #256]	; 0x100
   16fbc:	str	r5, [sp, #260]	; 0x104
   16fc0:	ldrb	r3, [r4]
   16fc4:	cmp	r3, #0
   16fc8:	bne	1748c <sigaltstack@plt+0x5ea0>
   16fcc:	ldr	r4, [sp, #268]	; 0x10c
   16fd0:	cmp	r4, #0
   16fd4:	beq	173e8 <sigaltstack@plt+0x5dfc>
   16fd8:	ldr	r3, [pc, #1260]	; 174cc <sigaltstack@plt+0x5ee0>
   16fdc:	mov	r2, #172	; 0xac
   16fe0:	ldr	r1, [pc, #1256]	; 174d0 <sigaltstack@plt+0x5ee4>
   16fe4:	ldr	r0, [pc, #1256]	; 174d4 <sigaltstack@plt+0x5ee8>
   16fe8:	bl	115e0 <__assert_fail@plt>
   16fec:	ldr	sl, [sp, #88]	; 0x58
   16ff0:	ldrb	r3, [sp, #72]	; 0x48
   16ff4:	cmp	r3, #0
   16ff8:	bne	1734c <sigaltstack@plt+0x5d60>
   16ffc:	ldrb	r3, [sl]
   17000:	and	r2, r3, #31
   17004:	lsr	r3, r3, #5
   17008:	ldr	r3, [r9, r3, lsl #2]
   1700c:	lsr	r3, r3, r2
   17010:	tst	r3, #1
   17014:	beq	17338 <sigaltstack@plt+0x5d4c>
   17018:	str	r5, [sp, #92]	; 0x5c
   1701c:	ldrb	r3, [sl]
   17020:	strb	r5, [sp, #96]	; 0x60
   17024:	strb	r5, [sp, #84]	; 0x54
   17028:	mov	r4, r3
   1702c:	str	r3, [sp, #100]	; 0x64
   17030:	cmp	r4, #0
   17034:	beq	16db8 <sigaltstack@plt+0x57cc>
   17038:	ldrb	r3, [sp, #152]	; 0x98
   1703c:	mov	sl, r5
   17040:	b	16dd4 <sigaltstack@plt+0x57e8>
   17044:	ldr	r4, [sp, #256]	; 0x100
   17048:	ldr	r3, [sp, #260]	; 0x104
   1704c:	strb	r7, [sp, #252]	; 0xfc
   17050:	add	r4, r4, r3
   17054:	ldrb	r3, [sp, #240]	; 0xf0
   17058:	add	r8, r8, #1
   1705c:	str	r4, [sp, #256]	; 0x100
   17060:	cmp	r3, #0
   17064:	bne	17204 <sigaltstack@plt+0x5c18>
   17068:	ldrb	r3, [r4]
   1706c:	and	r2, r3, #31
   17070:	lsr	r3, r3, #5
   17074:	ldr	r3, [r9, r3, lsl #2]
   17078:	lsr	r3, r3, r2
   1707c:	tst	r3, #1
   17080:	beq	1729c <sigaltstack@plt+0x5cb0>
   17084:	str	r5, [sp, #260]	; 0x104
   17088:	ldrb	r4, [r4]
   1708c:	strb	r5, [sp, #264]	; 0x108
   17090:	str	r4, [sp, #268]	; 0x10c
   17094:	cmp	r4, #0
   17098:	strb	r5, [sp, #252]	; 0xfc
   1709c:	bne	170c0 <sigaltstack@plt+0x5ad4>
   170a0:	ldr	r0, [sp, #144]	; 0x90
   170a4:	add	sp, sp, #300	; 0x12c
   170a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170ac:	ldr	r0, [sp, #256]	; 0x100
   170b0:	bl	1146c <strlen@plt>
   170b4:	strb	r7, [sp, #264]	; 0x108
   170b8:	str	r0, [sp, #260]	; 0x104
   170bc:	strb	r5, [sp, #252]	; 0xfc
   170c0:	ldrb	r3, [sp, #196]	; 0xc4
   170c4:	cmp	r3, #0
   170c8:	beq	170f8 <sigaltstack@plt+0x5b0c>
   170cc:	ldrb	r3, [sp, #208]	; 0xd0
   170d0:	cmp	r3, #0
   170d4:	ldrne	r4, [sp, #212]	; 0xd4
   170d8:	bne	171a0 <sigaltstack@plt+0x5bb4>
   170dc:	ldr	r2, [sp, #204]	; 0xcc
   170e0:	ldr	r3, [sp, #260]	; 0x104
   170e4:	cmp	r2, r3
   170e8:	beq	17284 <sigaltstack@plt+0x5c98>
   170ec:	ldr	r4, [sp, #144]	; 0x90
   170f0:	ldr	r6, [sp, #148]	; 0x94
   170f4:	b	16ca4 <sigaltstack@plt+0x56b8>
   170f8:	ldrb	r3, [sp, #184]	; 0xb8
   170fc:	ldr	r4, [sp, #200]	; 0xc8
   17100:	cmp	r3, #0
   17104:	bne	17138 <sigaltstack@plt+0x5b4c>
   17108:	ldrb	r3, [r4]
   1710c:	and	r2, r3, #31
   17110:	lsr	r3, r3, #5
   17114:	ldr	r3, [r9, r3, lsl #2]
   17118:	lsr	r3, r3, r2
   1711c:	tst	r3, #1
   17120:	bne	17268 <sigaltstack@plt+0x5c7c>
   17124:	add	r0, sp, #188	; 0xbc
   17128:	bl	112b0 <mbsinit@plt>
   1712c:	cmp	r0, #0
   17130:	beq	17478 <sigaltstack@plt+0x5e8c>
   17134:	strb	r5, [sp, #184]	; 0xb8
   17138:	bl	11394 <__ctype_get_mb_cur_max@plt>
   1713c:	mov	r1, r0
   17140:	mov	r0, r4
   17144:	bl	14c28 <sigaltstack@plt+0x363c>
   17148:	add	r3, sp, #188	; 0xbc
   1714c:	mov	r1, r4
   17150:	mov	r2, r0
   17154:	add	r0, sp, #212	; 0xd4
   17158:	bl	15cd4 <sigaltstack@plt+0x46e8>
   1715c:	cmn	r0, #1
   17160:	str	r0, [sp, #204]	; 0xcc
   17164:	strbeq	r7, [sp, #208]	; 0xd0
   17168:	streq	r5, [sp, #204]	; 0xcc
   1716c:	strbeq	r5, [sp, #196]	; 0xc4
   17170:	beq	170dc <sigaltstack@plt+0x5af0>
   17174:	cmn	r0, #2
   17178:	beq	172b4 <sigaltstack@plt+0x5cc8>
   1717c:	cmp	r0, #0
   17180:	beq	172f0 <sigaltstack@plt+0x5d04>
   17184:	ldr	r4, [sp, #212]	; 0xd4
   17188:	add	r0, sp, #188	; 0xbc
   1718c:	strb	r5, [sp, #208]	; 0xd0
   17190:	bl	112b0 <mbsinit@plt>
   17194:	strb	r5, [sp, #196]	; 0xc4
   17198:	cmp	r0, #0
   1719c:	strbne	r7, [sp, #184]	; 0xb8
   171a0:	cmp	r4, #0
   171a4:	beq	16bd4 <sigaltstack@plt+0x55e8>
   171a8:	ldrb	r3, [sp, #264]	; 0x108
   171ac:	cmp	r3, #0
   171b0:	beq	170dc <sigaltstack@plt+0x5af0>
   171b4:	ldr	r0, [sp, #268]	; 0x10c
   171b8:	subs	r0, r0, r4
   171bc:	movne	r0, #1
   171c0:	cmp	r0, #0
   171c4:	add	r1, r8, #1
   171c8:	bne	170ec <sigaltstack@plt+0x5b00>
   171cc:	ldr	r3, [sp, #200]	; 0xc8
   171d0:	ldr	r2, [sp, #204]	; 0xcc
   171d4:	ldr	r4, [sp, #256]	; 0x100
   171d8:	add	r3, r3, r2
   171dc:	str	r3, [sp, #200]	; 0xc8
   171e0:	ldrb	r3, [sp, #240]	; 0xf0
   171e4:	ldr	r2, [sp, #260]	; 0x104
   171e8:	strb	r0, [sp, #196]	; 0xc4
   171ec:	add	r4, r4, r2
   171f0:	cmp	r3, #0
   171f4:	strb	r0, [sp, #252]	; 0xfc
   171f8:	mov	r8, r1
   171fc:	str	r4, [sp, #256]	; 0x100
   17200:	beq	17068 <sigaltstack@plt+0x5a7c>
   17204:	bl	11394 <__ctype_get_mb_cur_max@plt>
   17208:	mov	r1, r0
   1720c:	mov	r0, r4
   17210:	bl	14c28 <sigaltstack@plt+0x363c>
   17214:	add	r3, sp, #244	; 0xf4
   17218:	mov	r1, r4
   1721c:	mov	r2, r0
   17220:	add	r0, sp, #268	; 0x10c
   17224:	bl	15cd4 <sigaltstack@plt+0x46e8>
   17228:	cmn	r0, #1
   1722c:	str	r0, [sp, #260]	; 0x104
   17230:	strbeq	r7, [sp, #264]	; 0x108
   17234:	streq	r5, [sp, #260]	; 0x104
   17238:	beq	170bc <sigaltstack@plt+0x5ad0>
   1723c:	cmn	r0, #2
   17240:	beq	170ac <sigaltstack@plt+0x5ac0>
   17244:	cmp	r0, #0
   17248:	beq	172cc <sigaltstack@plt+0x5ce0>
   1724c:	ldr	r4, [sp, #268]	; 0x10c
   17250:	add	r0, sp, #244	; 0xf4
   17254:	strb	r5, [sp, #264]	; 0x108
   17258:	bl	112b0 <mbsinit@plt>
   1725c:	cmp	r0, #0
   17260:	strbne	r7, [sp, #240]	; 0xf0
   17264:	b	17094 <sigaltstack@plt+0x5aa8>
   17268:	str	r5, [sp, #204]	; 0xcc
   1726c:	ldrb	r0, [r4]
   17270:	strb	r5, [sp, #208]	; 0xd0
   17274:	strb	r5, [sp, #196]	; 0xc4
   17278:	str	r0, [sp, #212]	; 0xd4
   1727c:	mov	r4, r0
   17280:	b	171a0 <sigaltstack@plt+0x5bb4>
   17284:	ldr	r1, [sp, #256]	; 0x100
   17288:	ldr	r0, [sp, #200]	; 0xc8
   1728c:	bl	112d4 <memcmp@plt>
   17290:	adds	r0, r0, #0
   17294:	movne	r0, #1
   17298:	b	171c0 <sigaltstack@plt+0x5bd4>
   1729c:	add	r0, sp, #244	; 0xf4
   172a0:	bl	112b0 <mbsinit@plt>
   172a4:	cmp	r0, #0
   172a8:	beq	17478 <sigaltstack@plt+0x5e8c>
   172ac:	strb	r5, [sp, #240]	; 0xf0
   172b0:	b	17204 <sigaltstack@plt+0x5c18>
   172b4:	ldr	r0, [sp, #200]	; 0xc8
   172b8:	bl	1146c <strlen@plt>
   172bc:	strb	r7, [sp, #208]	; 0xd0
   172c0:	strb	r5, [sp, #196]	; 0xc4
   172c4:	str	r0, [sp, #204]	; 0xcc
   172c8:	b	170dc <sigaltstack@plt+0x5af0>
   172cc:	ldr	r3, [sp, #256]	; 0x100
   172d0:	str	r5, [sp, #260]	; 0x104
   172d4:	ldrb	r3, [r3]
   172d8:	cmp	r3, #0
   172dc:	bne	1748c <sigaltstack@plt+0x5ea0>
   172e0:	ldr	r4, [sp, #268]	; 0x10c
   172e4:	cmp	r4, #0
   172e8:	beq	17250 <sigaltstack@plt+0x5c64>
   172ec:	b	16fd8 <sigaltstack@plt+0x59ec>
   172f0:	ldr	r3, [sp, #200]	; 0xc8
   172f4:	str	r5, [sp, #204]	; 0xcc
   172f8:	ldrb	r3, [r3]
   172fc:	cmp	r3, #0
   17300:	bne	1748c <sigaltstack@plt+0x5ea0>
   17304:	ldr	r4, [sp, #212]	; 0xd4
   17308:	cmp	r4, #0
   1730c:	beq	17188 <sigaltstack@plt+0x5b9c>
   17310:	b	16fd8 <sigaltstack@plt+0x59ec>
   17314:	ldr	r4, [sp, #144]	; 0x90
   17318:	str	r5, [sp, #148]	; 0x94
   1731c:	ldrb	r3, [r4]
   17320:	cmp	r3, #0
   17324:	bne	1748c <sigaltstack@plt+0x5ea0>
   17328:	ldr	r4, [sp, #156]	; 0x9c
   1732c:	cmp	r4, #0
   17330:	beq	16c4c <sigaltstack@plt+0x5660>
   17334:	b	16fd8 <sigaltstack@plt+0x59ec>
   17338:	add	r0, sp, #76	; 0x4c
   1733c:	bl	112b0 <mbsinit@plt>
   17340:	cmp	r0, #0
   17344:	beq	17478 <sigaltstack@plt+0x5e8c>
   17348:	strb	r5, [sp, #72]	; 0x48
   1734c:	bl	11394 <__ctype_get_mb_cur_max@plt>
   17350:	mov	r1, r0
   17354:	mov	r0, sl
   17358:	bl	14c28 <sigaltstack@plt+0x363c>
   1735c:	add	r3, sp, #76	; 0x4c
   17360:	mov	r1, sl
   17364:	mov	r2, r0
   17368:	add	r0, sp, #100	; 0x64
   1736c:	bl	15cd4 <sigaltstack@plt+0x46e8>
   17370:	cmn	r0, #1
   17374:	str	r0, [sp, #92]	; 0x5c
   17378:	strbeq	r7, [sp, #96]	; 0x60
   1737c:	streq	r5, [sp, #92]	; 0x5c
   17380:	strbeq	r5, [sp, #84]	; 0x54
   17384:	beq	17038 <sigaltstack@plt+0x5a4c>
   17388:	cmn	r0, #2
   1738c:	beq	17400 <sigaltstack@plt+0x5e14>
   17390:	cmp	r0, #0
   17394:	beq	17454 <sigaltstack@plt+0x5e68>
   17398:	ldr	r4, [sp, #100]	; 0x64
   1739c:	add	r0, sp, #76	; 0x4c
   173a0:	strb	r5, [sp, #96]	; 0x60
   173a4:	bl	112b0 <mbsinit@plt>
   173a8:	strb	r5, [sp, #84]	; 0x54
   173ac:	cmp	r0, #0
   173b0:	strbne	r7, [sp, #72]	; 0x48
   173b4:	b	17030 <sigaltstack@plt+0x5a44>
   173b8:	mov	r8, r3
   173bc:	b	16ed0 <sigaltstack@plt+0x58e4>
   173c0:	ldr	r3, [sp, #32]
   173c4:	str	r5, [sp, #36]	; 0x24
   173c8:	ldrb	r3, [r3]
   173cc:	cmp	r3, #0
   173d0:	bne	1748c <sigaltstack@plt+0x5ea0>
   173d4:	ldr	r4, [sp, #44]	; 0x2c
   173d8:	cmp	r4, #0
   173dc:	beq	16a6c <sigaltstack@plt+0x5480>
   173e0:	b	16fd8 <sigaltstack@plt+0x59ec>
   173e4:	ldr	r4, [sp, #268]	; 0x10c
   173e8:	add	r0, sp, #244	; 0xf4
   173ec:	strb	r5, [sp, #264]	; 0x108
   173f0:	bl	112b0 <mbsinit@plt>
   173f4:	cmp	r0, #0
   173f8:	strbne	r7, [sp, #240]	; 0xf0
   173fc:	b	16f50 <sigaltstack@plt+0x5964>
   17400:	ldr	r0, [sp, #88]	; 0x58
   17404:	bl	1146c <strlen@plt>
   17408:	strb	r7, [sp, #96]	; 0x60
   1740c:	strb	r5, [sp, #84]	; 0x54
   17410:	str	r0, [sp, #92]	; 0x5c
   17414:	b	17038 <sigaltstack@plt+0x5a4c>
   17418:	ldr	r0, [sp, #240]	; 0xf0
   1741c:	b	16a9c <sigaltstack@plt+0x54b0>
   17420:	add	r3, r8, #1
   17424:	ldr	r8, [sp, #8]
   17428:	b	16de0 <sigaltstack@plt+0x57f4>
   1742c:	str	r5, [sp, #260]	; 0x104
   17430:	strb	r6, [sp, #264]	; 0x108
   17434:	ldr	r4, [sp, #256]	; 0x100
   17438:	b	17048 <sigaltstack@plt+0x5a5c>
   1743c:	ldr	r4, [sp, #256]	; 0x100
   17440:	mov	r0, r4
   17444:	bl	1146c <strlen@plt>
   17448:	strb	r6, [sp, #264]	; 0x108
   1744c:	str	r0, [sp, #260]	; 0x104
   17450:	b	17048 <sigaltstack@plt+0x5a5c>
   17454:	ldr	r4, [sp, #88]	; 0x58
   17458:	str	r5, [sp, #92]	; 0x5c
   1745c:	ldrb	r3, [r4]
   17460:	cmp	r3, #0
   17464:	bne	1748c <sigaltstack@plt+0x5ea0>
   17468:	ldr	r4, [sp, #100]	; 0x64
   1746c:	cmp	r4, #0
   17470:	beq	1739c <sigaltstack@plt+0x5db0>
   17474:	b	16fd8 <sigaltstack@plt+0x59ec>
   17478:	ldr	r3, [pc, #76]	; 174cc <sigaltstack@plt+0x5ee0>
   1747c:	mov	r2, #143	; 0x8f
   17480:	ldr	r1, [pc, #72]	; 174d0 <sigaltstack@plt+0x5ee4>
   17484:	ldr	r0, [pc, #76]	; 174d8 <sigaltstack@plt+0x5eec>
   17488:	bl	115e0 <__assert_fail@plt>
   1748c:	ldr	r3, [pc, #56]	; 174cc <sigaltstack@plt+0x5ee0>
   17490:	mov	r2, #171	; 0xab
   17494:	ldr	r1, [pc, #52]	; 174d0 <sigaltstack@plt+0x5ee4>
   17498:	ldr	r0, [pc, #60]	; 174dc <sigaltstack@plt+0x5ef0>
   1749c:	bl	115e0 <__assert_fail@plt>
   174a0:	add	r8, r8, #1
   174a4:	mov	sl, r3
   174a8:	b	16c90 <sigaltstack@plt+0x56a4>
   174ac:	cmp	r3, #0
   174b0:	beq	16fec <sigaltstack@plt+0x5a00>
   174b4:	ldrb	r3, [sp, #96]	; 0x60
   174b8:	cmp	r3, #0
   174bc:	ldrne	r4, [sp, #100]	; 0x64
   174c0:	beq	17038 <sigaltstack@plt+0x5a4c>
   174c4:	b	17030 <sigaltstack@plt+0x5a44>
   174c8:	strdeq	r9, [r1], -ip
   174cc:	andeq	r9, r1, ip, lsl r7
   174d0:	andeq	r9, r1, r4, lsr #5
   174d4:	andeq	r9, r1, r0, ror #5
   174d8:			; <UNDEFINED> instruction: 0x000192b0
   174dc:	andeq	r9, r1, r8, asr #5
   174e0:	push	{r4, r5, r6, lr}
   174e4:	mov	r5, r1
   174e8:	mov	r1, #0
   174ec:	mov	r4, r2
   174f0:	bl	11520 <setlocale@plt>
   174f4:	subs	r6, r0, #0
   174f8:	beq	17554 <sigaltstack@plt+0x5f68>
   174fc:	bl	1146c <strlen@plt>
   17500:	cmp	r4, r0
   17504:	bhi	1753c <sigaltstack@plt+0x5f50>
   17508:	cmp	r4, #0
   1750c:	bne	17518 <sigaltstack@plt+0x5f2c>
   17510:	mov	r0, #34	; 0x22
   17514:	pop	{r4, r5, r6, pc}
   17518:	sub	r4, r4, #1
   1751c:	mov	r1, r6
   17520:	mov	r2, r4
   17524:	mov	r0, r5
   17528:	bl	1128c <memcpy@plt>
   1752c:	mov	r3, #0
   17530:	strb	r3, [r5, r4]
   17534:	mov	r0, #34	; 0x22
   17538:	pop	{r4, r5, r6, pc}
   1753c:	add	r2, r0, #1
   17540:	mov	r1, r6
   17544:	mov	r0, r5
   17548:	bl	1128c <memcpy@plt>
   1754c:	mov	r0, #0
   17550:	pop	{r4, r5, r6, pc}
   17554:	cmp	r4, #0
   17558:	beq	17568 <sigaltstack@plt+0x5f7c>
   1755c:	strb	r6, [r5]
   17560:	mov	r0, #22
   17564:	pop	{r4, r5, r6, pc}
   17568:	mov	r0, #22
   1756c:	pop	{r4, r5, r6, pc}
   17570:	mov	r1, #0
   17574:	b	11520 <setlocale@plt>
   17578:	push	{r4, r5, r6, r7, r8, lr}
   1757c:	mov	r4, #0
   17580:	ldr	r7, [pc, #164]	; 1762c <sigaltstack@plt+0x6040>
   17584:	ldr	r6, [pc, #164]	; 17630 <sigaltstack@plt+0x6044>
   17588:	mov	r5, #1
   1758c:	mov	r1, r5
   17590:	mov	r0, r4
   17594:	bl	17b40 <sigaltstack@plt+0x6554>
   17598:	cmp	r0, #0
   1759c:	blt	175b4 <sigaltstack@plt+0x5fc8>
   175a0:	add	r4, r4, #1
   175a4:	cmp	r4, #3
   175a8:	bne	1758c <sigaltstack@plt+0x5fa0>
   175ac:	mov	r0, #0
   175b0:	pop	{r4, r5, r6, r7, r8, pc}
   175b4:	cmp	r4, #0
   175b8:	beq	175f4 <sigaltstack@plt+0x6008>
   175bc:	clz	r1, r4
   175c0:	mov	r0, r6
   175c4:	lsr	r1, r1, #5
   175c8:	bl	113b8 <open64@plt>
   175cc:	cmp	r0, #0
   175d0:	blt	175e8 <sigaltstack@plt+0x5ffc>
   175d4:	cmp	r0, #2
   175d8:	ble	175a0 <sigaltstack@plt+0x5fb4>
   175dc:	bl	115d4 <close@plt>
   175e0:	mov	r0, #0
   175e4:	pop	{r4, r5, r6, r7, r8, pc}
   175e8:	bl	1149c <__errno_location@plt>
   175ec:	ldr	r0, [r0]
   175f0:	pop	{r4, r5, r6, r7, r8, pc}
   175f4:	mov	r1, r5
   175f8:	mov	r0, r7
   175fc:	bl	113b8 <open64@plt>
   17600:	cmp	r0, #0
   17604:	blt	175bc <sigaltstack@plt+0x5fd0>
   17608:	cmp	r0, #2
   1760c:	bgt	175dc <sigaltstack@plt+0x5ff0>
   17610:	mov	r1, r5
   17614:	mov	r0, #1
   17618:	bl	17b40 <sigaltstack@plt+0x6554>
   1761c:	mov	r4, #1
   17620:	cmp	r0, #0
   17624:	bge	175a0 <sigaltstack@plt+0x5fb4>
   17628:	b	175bc <sigaltstack@plt+0x5fd0>
   1762c:	andeq	r9, r1, ip, lsr r7
   17630:	andeq	r9, r1, r0, lsr r7
   17634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17638:	sub	sp, sp, #4096	; 0x1000
   1763c:	sub	sp, sp, #36	; 0x24
   17640:	mov	sl, #0
   17644:	mov	r8, r1
   17648:	mov	r6, r0
   1764c:	str	r0, [sp, #12]
   17650:	str	r3, [sp, #8]
   17654:	mov	r0, r2
   17658:	add	r4, sp, #32
   1765c:	mov	r5, r2
   17660:	str	sl, [sp]
   17664:	mov	r3, sl
   17668:	mov	r2, sl
   1766c:	mov	r1, sl
   17670:	bl	1122c <iconv@plt>
   17674:	cmp	r8, sl
   17678:	str	r6, [r4, #-16]
   1767c:	str	r8, [r4, #-12]
   17680:	beq	1788c <sigaltstack@plt+0x62a0>
   17684:	add	r7, sp, #24
   17688:	add	r6, sp, #28
   1768c:	mov	r9, #4096	; 0x1000
   17690:	b	176ac <sigaltstack@plt+0x60c0>
   17694:	ldr	r3, [r4, #-8]
   17698:	ldr	r2, [r4, #-12]
   1769c:	sub	r3, r3, r4
   176a0:	cmp	r2, #0
   176a4:	add	sl, sl, r3
   176a8:	beq	176e8 <sigaltstack@plt+0x60fc>
   176ac:	str	r6, [sp]
   176b0:	mov	r3, r7
   176b4:	add	r2, sp, #20
   176b8:	add	r1, sp, #16
   176bc:	mov	r0, r5
   176c0:	stmdb	r4, {r4, r9}
   176c4:	bl	1122c <iconv@plt>
   176c8:	cmn	r0, #1
   176cc:	bne	17694 <sigaltstack@plt+0x60a8>
   176d0:	bl	1149c <__errno_location@plt>
   176d4:	ldr	r3, [r0]
   176d8:	cmp	r3, #7
   176dc:	beq	17694 <sigaltstack@plt+0x60a8>
   176e0:	cmp	r3, #22
   176e4:	bne	17878 <sigaltstack@plt+0x628c>
   176e8:	mov	ip, #4096	; 0x1000
   176ec:	mov	r2, #0
   176f0:	str	r6, [sp]
   176f4:	mov	r1, r2
   176f8:	mov	r3, r7
   176fc:	mov	r0, r5
   17700:	stmdb	r4, {r4, ip}
   17704:	bl	1122c <iconv@plt>
   17708:	cmn	r0, #1
   1770c:	beq	17878 <sigaltstack@plt+0x628c>
   17710:	ldr	r9, [r4, #-8]
   17714:	sub	r9, r9, r4
   17718:	adds	r9, r9, sl
   1771c:	beq	17818 <sigaltstack@plt+0x622c>
   17720:	ldr	r3, [sp, #8]
   17724:	ldr	fp, [r3]
   17728:	cmp	fp, #0
   1772c:	beq	177f4 <sigaltstack@plt+0x6208>
   17730:	add	r3, sp, #4160	; 0x1040
   17734:	add	r3, r3, #8
   17738:	ldr	r3, [r3]
   1773c:	ldr	r3, [r3]
   17740:	cmp	r9, r3
   17744:	bhi	177f4 <sigaltstack@plt+0x6208>
   17748:	mov	r3, #0
   1774c:	str	r3, [sp]
   17750:	mov	r2, r3
   17754:	mov	r1, r3
   17758:	mov	r0, r5
   1775c:	bl	1122c <iconv@plt>
   17760:	ldr	r3, [sp, #12]
   17764:	mov	sl, r4
   17768:	stmdb	r4, {r3, r8, fp}
   1776c:	str	r9, [sl], #-12
   17770:	b	17798 <sigaltstack@plt+0x61ac>
   17774:	str	r4, [sp]
   17778:	mov	r3, r6
   1777c:	mov	r2, r7
   17780:	mov	r1, sl
   17784:	mov	r0, r5
   17788:	bl	1122c <iconv@plt>
   1778c:	cmn	r0, #1
   17790:	beq	1783c <sigaltstack@plt+0x6250>
   17794:	ldr	r8, [r4, #-8]
   17798:	cmp	r8, #0
   1779c:	bne	17774 <sigaltstack@plt+0x6188>
   177a0:	mov	r2, #0
   177a4:	str	r4, [sp]
   177a8:	mov	r3, r6
   177ac:	mov	r0, r5
   177b0:	mov	r1, r2
   177b4:	bl	1122c <iconv@plt>
   177b8:	cmn	r0, #1
   177bc:	beq	1784c <sigaltstack@plt+0x6260>
   177c0:	ldr	r3, [r4]
   177c4:	cmp	r3, #0
   177c8:	bne	1789c <sigaltstack@plt+0x62b0>
   177cc:	ldr	r2, [sp, #8]
   177d0:	str	fp, [r2]
   177d4:	add	r2, sp, #4160	; 0x1040
   177d8:	add	r2, r2, #8
   177dc:	ldr	r2, [r2]
   177e0:	str	r9, [r2]
   177e4:	mov	r0, r3
   177e8:	add	sp, sp, #4096	; 0x1000
   177ec:	add	sp, sp, #36	; 0x24
   177f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177f4:	mov	r0, r9
   177f8:	bl	15ca8 <sigaltstack@plt+0x46bc>
   177fc:	subs	fp, r0, #0
   17800:	bne	17748 <sigaltstack@plt+0x615c>
   17804:	bl	1149c <__errno_location@plt>
   17808:	mov	r2, #12
   1780c:	mvn	r3, #0
   17810:	str	r2, [r0]
   17814:	b	177e4 <sigaltstack@plt+0x61f8>
   17818:	add	r3, sp, #4160	; 0x1040
   1781c:	add	r3, r3, #8
   17820:	ldr	r3, [r3]
   17824:	str	r9, [r3]
   17828:	mov	r3, r9
   1782c:	mov	r0, r3
   17830:	add	sp, sp, #4096	; 0x1000
   17834:	add	sp, sp, #36	; 0x24
   17838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1783c:	bl	1149c <__errno_location@plt>
   17840:	ldr	r3, [r0]
   17844:	cmp	r3, #22
   17848:	beq	177a0 <sigaltstack@plt+0x61b4>
   1784c:	ldr	r3, [sp, #8]
   17850:	ldr	r3, [r3]
   17854:	cmp	fp, r3
   17858:	beq	17878 <sigaltstack@plt+0x628c>
   1785c:	mov	r0, fp
   17860:	bl	15c50 <sigaltstack@plt+0x4664>
   17864:	mvn	r3, #0
   17868:	mov	r0, r3
   1786c:	add	sp, sp, #4096	; 0x1000
   17870:	add	sp, sp, #36	; 0x24
   17874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17878:	mvn	r3, #0
   1787c:	mov	r0, r3
   17880:	add	sp, sp, #4096	; 0x1000
   17884:	add	sp, sp, #36	; 0x24
   17888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1788c:	mov	sl, r8
   17890:	add	r7, sp, #24
   17894:	add	r6, sp, #28
   17898:	b	176e8 <sigaltstack@plt+0x60fc>
   1789c:	bl	115c8 <abort@plt>
   178a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178a4:	sub	sp, sp, #28
   178a8:	mov	r8, r1
   178ac:	str	r0, [sp, #8]
   178b0:	bl	1146c <strlen@plt>
   178b4:	cmp	r0, #4096	; 0x1000
   178b8:	mov	r4, r0
   178bc:	lslcc	r4, r0, #4
   178c0:	add	r7, r4, #1
   178c4:	str	r0, [sp, #12]
   178c8:	mov	r0, r7
   178cc:	bl	15ca8 <sigaltstack@plt+0x46bc>
   178d0:	subs	r6, r0, #0
   178d4:	beq	17a64 <sigaltstack@plt+0x6478>
   178d8:	mov	r3, #0
   178dc:	str	r3, [sp]
   178e0:	mov	r2, r3
   178e4:	mov	r1, r3
   178e8:	mov	r0, r8
   178ec:	bl	1122c <iconv@plt>
   178f0:	add	r9, sp, #20
   178f4:	str	r6, [sp, #16]
   178f8:	str	r4, [sp, #20]
   178fc:	b	1795c <sigaltstack@plt+0x6370>
   17900:	bl	1149c <__errno_location@plt>
   17904:	mov	r1, r5
   17908:	mov	sl, r0
   1790c:	mov	r0, r6
   17910:	ldr	r3, [sl]
   17914:	cmp	r3, #22
   17918:	beq	17980 <sigaltstack@plt+0x6394>
   1791c:	cmp	r3, #7
   17920:	bne	17a40 <sigaltstack@plt+0x6454>
   17924:	ldr	r4, [sp, #16]
   17928:	cmp	r7, r5
   1792c:	sub	r4, r4, r6
   17930:	bcs	17a38 <sigaltstack@plt+0x644c>
   17934:	bl	15d28 <sigaltstack@plt+0x473c>
   17938:	sub	r3, r5, #1
   1793c:	sub	r3, r3, r4
   17940:	mov	r7, r5
   17944:	cmp	r0, #0
   17948:	add	r4, r0, r4
   1794c:	beq	17a38 <sigaltstack@plt+0x644c>
   17950:	mov	r6, r0
   17954:	str	r4, [sp, #16]
   17958:	str	r3, [sp, #20]
   1795c:	str	r9, [sp]
   17960:	add	r3, sp, #16
   17964:	add	r2, sp, #12
   17968:	add	r1, sp, #8
   1796c:	mov	r0, r8
   17970:	bl	1122c <iconv@plt>
   17974:	lsl	r5, r7, #1
   17978:	cmn	r0, #1
   1797c:	beq	17900 <sigaltstack@plt+0x6314>
   17980:	mov	sl, #0
   17984:	b	179dc <sigaltstack@plt+0x63f0>
   17988:	bl	1149c <__errno_location@plt>
   1798c:	mov	r1, r5
   17990:	mov	fp, r0
   17994:	mov	r0, r6
   17998:	ldr	r3, [fp]
   1799c:	cmp	r3, #7
   179a0:	bne	17a40 <sigaltstack@plt+0x6454>
   179a4:	ldr	r4, [sp, #16]
   179a8:	cmp	r7, r5
   179ac:	sub	r4, r4, r6
   179b0:	bcs	17a58 <sigaltstack@plt+0x646c>
   179b4:	bl	15d28 <sigaltstack@plt+0x473c>
   179b8:	sub	r3, r5, #1
   179bc:	sub	r3, r3, r4
   179c0:	mov	r7, r5
   179c4:	cmp	r0, #0
   179c8:	add	r4, r0, r4
   179cc:	beq	17a58 <sigaltstack@plt+0x646c>
   179d0:	mov	r6, r0
   179d4:	str	r4, [sp, #16]
   179d8:	str	r3, [sp, #20]
   179dc:	str	r9, [sp]
   179e0:	add	r3, sp, #16
   179e4:	mov	r2, sl
   179e8:	mov	r1, #0
   179ec:	mov	r0, r8
   179f0:	bl	1122c <iconv@plt>
   179f4:	lsl	r5, r7, #1
   179f8:	cmn	r0, #1
   179fc:	beq	17988 <sigaltstack@plt+0x639c>
   17a00:	ldr	r3, [sp, #16]
   17a04:	mov	r2, #0
   17a08:	add	r1, r3, #1
   17a0c:	str	r1, [sp, #16]
   17a10:	strb	r2, [r3]
   17a14:	ldr	r1, [sp, #16]
   17a18:	sub	r1, r1, r6
   17a1c:	cmp	r7, r1
   17a20:	bls	17a4c <sigaltstack@plt+0x6460>
   17a24:	mov	r0, r6
   17a28:	bl	15d28 <sigaltstack@plt+0x473c>
   17a2c:	cmp	r0, #0
   17a30:	movne	r6, r0
   17a34:	b	17a4c <sigaltstack@plt+0x6460>
   17a38:	mov	r3, #12
   17a3c:	str	r3, [sl]
   17a40:	mov	r0, r6
   17a44:	bl	15c50 <sigaltstack@plt+0x4664>
   17a48:	mov	r6, #0
   17a4c:	mov	r0, r6
   17a50:	add	sp, sp, #28
   17a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a58:	mov	r3, #12
   17a5c:	str	r3, [fp]
   17a60:	b	17a40 <sigaltstack@plt+0x6454>
   17a64:	bl	1149c <__errno_location@plt>
   17a68:	mov	r3, #12
   17a6c:	str	r3, [r0]
   17a70:	b	17a4c <sigaltstack@plt+0x6460>
   17a74:	push	{r4, r5, r6, lr}
   17a78:	mov	r4, r0
   17a7c:	ldrb	r3, [r0]
   17a80:	cmp	r3, #0
   17a84:	beq	17aa4 <sigaltstack@plt+0x64b8>
   17a88:	mov	r6, r1
   17a8c:	mov	r0, r6
   17a90:	mov	r1, r2
   17a94:	mov	r5, r2
   17a98:	bl	15dd0 <sigaltstack@plt+0x47e4>
   17a9c:	cmp	r0, #0
   17aa0:	bne	17abc <sigaltstack@plt+0x64d0>
   17aa4:	mov	r0, r4
   17aa8:	bl	112f8 <strdup@plt>
   17aac:	subs	r4, r0, #0
   17ab0:	beq	17b08 <sigaltstack@plt+0x651c>
   17ab4:	mov	r0, r4
   17ab8:	pop	{r4, r5, r6, pc}
   17abc:	mov	r0, r5
   17ac0:	mov	r1, r6
   17ac4:	bl	113f4 <iconv_open@plt>
   17ac8:	cmn	r0, #1
   17acc:	mov	r5, r0
   17ad0:	beq	17b1c <sigaltstack@plt+0x6530>
   17ad4:	mov	r0, r4
   17ad8:	mov	r1, r5
   17adc:	bl	178a0 <sigaltstack@plt+0x62b4>
   17ae0:	subs	r4, r0, #0
   17ae4:	beq	17b24 <sigaltstack@plt+0x6538>
   17ae8:	mov	r0, r5
   17aec:	bl	11220 <iconv_close@plt>
   17af0:	cmp	r0, #0
   17af4:	bge	17ab4 <sigaltstack@plt+0x64c8>
   17af8:	mov	r0, r4
   17afc:	bl	15c50 <sigaltstack@plt+0x4664>
   17b00:	mov	r4, #0
   17b04:	b	17ab4 <sigaltstack@plt+0x64c8>
   17b08:	bl	1149c <__errno_location@plt>
   17b0c:	mov	r3, #12
   17b10:	str	r3, [r0]
   17b14:	mov	r0, r4
   17b18:	pop	{r4, r5, r6, pc}
   17b1c:	mov	r4, #0
   17b20:	b	17ab4 <sigaltstack@plt+0x64c8>
   17b24:	bl	1149c <__errno_location@plt>
   17b28:	mov	r6, r0
   17b2c:	mov	r0, r5
   17b30:	ldr	r5, [r6]
   17b34:	bl	11220 <iconv_close@plt>
   17b38:	str	r5, [r6]
   17b3c:	b	17ab4 <sigaltstack@plt+0x64c8>
   17b40:	push	{r1, r2, r3}
   17b44:	push	{r4, r5, r6, r7, lr}
   17b48:	sub	sp, sp, #8
   17b4c:	add	r3, sp, #32
   17b50:	ldr	r1, [sp, #28]
   17b54:	str	r3, [sp, #4]
   17b58:	cmp	r1, #0
   17b5c:	beq	17bf4 <sigaltstack@plt+0x6608>
   17b60:	ldr	r2, [pc, #412]	; 17d04 <sigaltstack@plt+0x6718>
   17b64:	mov	r5, r0
   17b68:	cmp	r1, r2
   17b6c:	bne	17bb8 <sigaltstack@plt+0x65cc>
   17b70:	ldr	r6, [pc, #400]	; 17d08 <sigaltstack@plt+0x671c>
   17b74:	ldr	r7, [r3]
   17b78:	add	r2, sp, #36	; 0x24
   17b7c:	ldr	r3, [r6]
   17b80:	str	r2, [sp, #4]
   17b84:	cmp	r3, #0
   17b88:	mov	r2, r7
   17b8c:	blt	17cb8 <sigaltstack@plt+0x66cc>
   17b90:	bl	114fc <fcntl64@plt>
   17b94:	subs	r4, r0, #0
   17b98:	blt	17c3c <sigaltstack@plt+0x6650>
   17b9c:	mov	r3, #1
   17ba0:	str	r3, [r6]
   17ba4:	mov	r0, r4
   17ba8:	add	sp, sp, #8
   17bac:	pop	{r4, r5, r6, r7, lr}
   17bb0:	add	sp, sp, #12
   17bb4:	bx	lr
   17bb8:	cmp	r1, #11
   17bbc:	beq	17be4 <sigaltstack@plt+0x65f8>
   17bc0:	bgt	17c04 <sigaltstack@plt+0x6618>
   17bc4:	cmp	r1, #3
   17bc8:	beq	17be4 <sigaltstack@plt+0x65f8>
   17bcc:	ble	17cf8 <sigaltstack@plt+0x670c>
   17bd0:	cmp	r1, #8
   17bd4:	beq	17c24 <sigaltstack@plt+0x6638>
   17bd8:	ble	17c24 <sigaltstack@plt+0x6638>
   17bdc:	cmp	r1, #9
   17be0:	bne	17c24 <sigaltstack@plt+0x6638>
   17be4:	mov	r0, r5
   17be8:	bl	114fc <fcntl64@plt>
   17bec:	mov	r4, r0
   17bf0:	b	17ba4 <sigaltstack@plt+0x65b8>
   17bf4:	ldr	r2, [sp, #32]
   17bf8:	bl	114fc <fcntl64@plt>
   17bfc:	mov	r4, r0
   17c00:	b	17ba4 <sigaltstack@plt+0x65b8>
   17c04:	ldr	r3, [pc, #256]	; 17d0c <sigaltstack@plt+0x6720>
   17c08:	cmp	r1, r3
   17c0c:	bgt	17cd8 <sigaltstack@plt+0x66ec>
   17c10:	cmp	r1, r2
   17c14:	bge	17c24 <sigaltstack@plt+0x6638>
   17c18:	sub	r3, r3, #6
   17c1c:	cmp	r1, r3
   17c20:	beq	17be4 <sigaltstack@plt+0x65f8>
   17c24:	ldr	r3, [sp, #4]
   17c28:	mov	r0, r5
   17c2c:	ldr	r2, [r3]
   17c30:	bl	114fc <fcntl64@plt>
   17c34:	mov	r4, r0
   17c38:	b	17ba4 <sigaltstack@plt+0x65b8>
   17c3c:	bl	1149c <__errno_location@plt>
   17c40:	ldr	r3, [r0]
   17c44:	cmp	r3, #22
   17c48:	bne	17b9c <sigaltstack@plt+0x65b0>
   17c4c:	mov	r2, r7
   17c50:	mov	r0, r5
   17c54:	mov	r1, #0
   17c58:	bl	114fc <fcntl64@plt>
   17c5c:	subs	r4, r0, #0
   17c60:	blt	17ba4 <sigaltstack@plt+0x65b8>
   17c64:	mvn	r3, #0
   17c68:	str	r3, [r6]
   17c6c:	mov	r1, #1
   17c70:	mov	r0, r4
   17c74:	bl	114fc <fcntl64@plt>
   17c78:	subs	r2, r0, #0
   17c7c:	blt	17c98 <sigaltstack@plt+0x66ac>
   17c80:	orr	r2, r2, #1
   17c84:	mov	r1, #2
   17c88:	mov	r0, r4
   17c8c:	bl	114fc <fcntl64@plt>
   17c90:	cmn	r0, #1
   17c94:	bne	17ba4 <sigaltstack@plt+0x65b8>
   17c98:	bl	1149c <__errno_location@plt>
   17c9c:	mov	r5, r0
   17ca0:	mov	r0, r4
   17ca4:	ldr	r6, [r5]
   17ca8:	mvn	r4, #0
   17cac:	bl	115d4 <close@plt>
   17cb0:	str	r6, [r5]
   17cb4:	b	17ba4 <sigaltstack@plt+0x65b8>
   17cb8:	mov	r1, #0
   17cbc:	bl	114fc <fcntl64@plt>
   17cc0:	subs	r4, r0, #0
   17cc4:	blt	17ba4 <sigaltstack@plt+0x65b8>
   17cc8:	ldr	r3, [r6]
   17ccc:	cmn	r3, #1
   17cd0:	beq	17c6c <sigaltstack@plt+0x6680>
   17cd4:	b	17ba4 <sigaltstack@plt+0x65b8>
   17cd8:	ldr	r3, [pc, #48]	; 17d10 <sigaltstack@plt+0x6724>
   17cdc:	cmp	r1, r3
   17ce0:	beq	17c24 <sigaltstack@plt+0x6638>
   17ce4:	blt	17be4 <sigaltstack@plt+0x65f8>
   17ce8:	add	r3, r3, #1
   17cec:	cmp	r1, r3
   17cf0:	bne	17c24 <sigaltstack@plt+0x6638>
   17cf4:	b	17be4 <sigaltstack@plt+0x65f8>
   17cf8:	cmp	r1, #1
   17cfc:	bne	17c24 <sigaltstack@plt+0x6638>
   17d00:	b	17be4 <sigaltstack@plt+0x65f8>
   17d04:	andeq	r0, r0, r6, lsl #8
   17d08:	andeq	sl, r3, r4, ror #12
   17d0c:	andeq	r0, r0, r7, lsl #8
   17d10:	andeq	r0, r0, r9, lsl #8
   17d14:	cmn	r0, #-2147483631	; 0x80000011
   17d18:	bls	17d24 <sigaltstack@plt+0x6738>
   17d1c:	mov	r0, #0
   17d20:	bx	lr
   17d24:	push	{r4, lr}
   17d28:	add	r0, r0, #16
   17d2c:	bl	113e8 <malloc@plt>
   17d30:	subs	r2, r0, #0
   17d34:	beq	17d54 <sigaltstack@plt+0x6768>
   17d38:	add	r3, r2, #8
   17d3c:	bic	r3, r3, #15
   17d40:	add	r3, r3, #8
   17d44:	sub	r2, r3, r2
   17d48:	mov	r0, r3
   17d4c:	strb	r2, [r3, #-1]
   17d50:	pop	{r4, pc}
   17d54:	mov	r0, #0
   17d58:	pop	{r4, pc}
   17d5c:	tst	r0, #7
   17d60:	bne	17d78 <sigaltstack@plt+0x678c>
   17d64:	tst	r0, #8
   17d68:	bxeq	lr
   17d6c:	ldrb	r3, [r0, #-1]
   17d70:	sub	r0, r0, r3
   17d74:	b	15c50 <sigaltstack@plt+0x4664>
   17d78:	push	{r4, lr}
   17d7c:	bl	115c8 <abort@plt>
   17d80:	push	{r4, r5, r6, r7, r8, r9, lr}
   17d84:	sub	sp, sp, #60	; 0x3c
   17d88:	mov	r9, r0
   17d8c:	bl	11394 <__ctype_get_mb_cur_max@plt>
   17d90:	cmp	r0, #1
   17d94:	bls	17efc <sigaltstack@plt+0x6910>
   17d98:	mov	r3, #0
   17d9c:	ldr	r8, [pc, #408]	; 17f3c <sigaltstack@plt+0x6950>
   17da0:	mov	r5, r3
   17da4:	mov	r4, r9
   17da8:	mov	r6, r3
   17dac:	mov	r7, #1
   17db0:	str	r9, [sp, #16]
   17db4:	strb	r3, [sp]
   17db8:	str	r3, [sp, #4]
   17dbc:	strb	r3, [sp, #12]
   17dc0:	str	r3, [sp, #8]
   17dc4:	ldrb	r3, [sp]
   17dc8:	cmp	r3, #0
   17dcc:	bne	17e24 <sigaltstack@plt+0x6838>
   17dd0:	ldrb	r3, [r4]
   17dd4:	and	r2, r3, #31
   17dd8:	lsr	r3, r3, #5
   17ddc:	ldr	r3, [r8, r3, lsl #2]
   17de0:	lsr	r3, r3, r2
   17de4:	tst	r3, #1
   17de8:	beq	17e10 <sigaltstack@plt+0x6824>
   17dec:	str	r7, [sp, #20]
   17df0:	ldrb	r4, [r4]
   17df4:	strb	r7, [sp, #24]
   17df8:	cmp	r4, #0
   17dfc:	str	r4, [sp, #28]
   17e00:	bne	17e84 <sigaltstack@plt+0x6898>
   17e04:	mov	r0, r5
   17e08:	add	sp, sp, #60	; 0x3c
   17e0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17e10:	add	r0, sp, #4
   17e14:	bl	112b0 <mbsinit@plt>
   17e18:	cmp	r0, #0
   17e1c:	beq	17f14 <sigaltstack@plt+0x6928>
   17e20:	strb	r7, [sp]
   17e24:	bl	11394 <__ctype_get_mb_cur_max@plt>
   17e28:	mov	r1, r0
   17e2c:	mov	r0, r4
   17e30:	bl	14c28 <sigaltstack@plt+0x363c>
   17e34:	add	r3, sp, #4
   17e38:	mov	r1, r4
   17e3c:	mov	r2, r0
   17e40:	add	r0, sp, #28
   17e44:	bl	15cd4 <sigaltstack@plt+0x46e8>
   17e48:	cmn	r0, #1
   17e4c:	str	r0, [sp, #20]
   17e50:	beq	17ea0 <sigaltstack@plt+0x68b4>
   17e54:	cmn	r0, #2
   17e58:	beq	17ee4 <sigaltstack@plt+0x68f8>
   17e5c:	cmp	r0, #0
   17e60:	beq	17eb0 <sigaltstack@plt+0x68c4>
   17e64:	ldr	r4, [sp, #28]
   17e68:	add	r0, sp, #4
   17e6c:	strb	r7, [sp, #24]
   17e70:	bl	112b0 <mbsinit@plt>
   17e74:	cmp	r0, #0
   17e78:	strbne	r6, [sp]
   17e7c:	cmp	r4, #0
   17e80:	beq	17e04 <sigaltstack@plt+0x6818>
   17e84:	ldr	r4, [sp, #16]
   17e88:	ldr	r3, [sp, #20]
   17e8c:	add	r5, r5, #1
   17e90:	add	r4, r4, r3
   17e94:	strb	r6, [sp, #12]
   17e98:	str	r4, [sp, #16]
   17e9c:	b	17dc4 <sigaltstack@plt+0x67d8>
   17ea0:	str	r7, [sp, #20]
   17ea4:	strb	r6, [sp, #24]
   17ea8:	ldr	r4, [sp, #16]
   17eac:	b	17e88 <sigaltstack@plt+0x689c>
   17eb0:	ldr	r4, [sp, #16]
   17eb4:	str	r7, [sp, #20]
   17eb8:	ldrb	r3, [r4]
   17ebc:	cmp	r3, #0
   17ec0:	bne	17f28 <sigaltstack@plt+0x693c>
   17ec4:	ldr	r4, [sp, #28]
   17ec8:	cmp	r4, #0
   17ecc:	beq	17e68 <sigaltstack@plt+0x687c>
   17ed0:	ldr	r3, [pc, #104]	; 17f40 <sigaltstack@plt+0x6954>
   17ed4:	mov	r2, #172	; 0xac
   17ed8:	ldr	r1, [pc, #100]	; 17f44 <sigaltstack@plt+0x6958>
   17edc:	ldr	r0, [pc, #100]	; 17f48 <sigaltstack@plt+0x695c>
   17ee0:	bl	115e0 <__assert_fail@plt>
   17ee4:	ldr	r4, [sp, #16]
   17ee8:	mov	r0, r4
   17eec:	bl	1146c <strlen@plt>
   17ef0:	strb	r6, [sp, #24]
   17ef4:	str	r0, [sp, #20]
   17ef8:	b	17e88 <sigaltstack@plt+0x689c>
   17efc:	mov	r0, r9
   17f00:	bl	1146c <strlen@plt>
   17f04:	mov	r5, r0
   17f08:	mov	r0, r5
   17f0c:	add	sp, sp, #60	; 0x3c
   17f10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17f14:	ldr	r3, [pc, #36]	; 17f40 <sigaltstack@plt+0x6954>
   17f18:	mov	r2, #143	; 0x8f
   17f1c:	ldr	r1, [pc, #32]	; 17f44 <sigaltstack@plt+0x6958>
   17f20:	ldr	r0, [pc, #36]	; 17f4c <sigaltstack@plt+0x6960>
   17f24:	bl	115e0 <__assert_fail@plt>
   17f28:	ldr	r3, [pc, #16]	; 17f40 <sigaltstack@plt+0x6954>
   17f2c:	mov	r2, #171	; 0xab
   17f30:	ldr	r1, [pc, #12]	; 17f44 <sigaltstack@plt+0x6958>
   17f34:	ldr	r0, [pc, #20]	; 17f50 <sigaltstack@plt+0x6964>
   17f38:	bl	115e0 <__assert_fail@plt>
   17f3c:	strdeq	r9, [r1], -ip
   17f40:	andeq	r9, r1, r8, asr #14
   17f44:	andeq	r9, r1, r4, lsr #5
   17f48:	andeq	r9, r1, r0, ror #5
   17f4c:			; <UNDEFINED> instruction: 0x000192b0
   17f50:	andeq	r9, r1, r8, asr #5
   17f54:	subs	r2, r1, #1
   17f58:	bxeq	lr
   17f5c:	bcc	18134 <sigaltstack@plt+0x6b48>
   17f60:	cmp	r0, r1
   17f64:	bls	18118 <sigaltstack@plt+0x6b2c>
   17f68:	tst	r1, r2
   17f6c:	beq	18124 <sigaltstack@plt+0x6b38>
   17f70:	clz	r3, r0
   17f74:	clz	r2, r1
   17f78:	sub	r3, r2, r3
   17f7c:	rsbs	r3, r3, #31
   17f80:	addne	r3, r3, r3, lsl #1
   17f84:	mov	r2, #0
   17f88:	addne	pc, pc, r3, lsl #2
   17f8c:	nop			; (mov r0, r0)
   17f90:	cmp	r0, r1, lsl #31
   17f94:	adc	r2, r2, r2
   17f98:	subcs	r0, r0, r1, lsl #31
   17f9c:	cmp	r0, r1, lsl #30
   17fa0:	adc	r2, r2, r2
   17fa4:	subcs	r0, r0, r1, lsl #30
   17fa8:	cmp	r0, r1, lsl #29
   17fac:	adc	r2, r2, r2
   17fb0:	subcs	r0, r0, r1, lsl #29
   17fb4:	cmp	r0, r1, lsl #28
   17fb8:	adc	r2, r2, r2
   17fbc:	subcs	r0, r0, r1, lsl #28
   17fc0:	cmp	r0, r1, lsl #27
   17fc4:	adc	r2, r2, r2
   17fc8:	subcs	r0, r0, r1, lsl #27
   17fcc:	cmp	r0, r1, lsl #26
   17fd0:	adc	r2, r2, r2
   17fd4:	subcs	r0, r0, r1, lsl #26
   17fd8:	cmp	r0, r1, lsl #25
   17fdc:	adc	r2, r2, r2
   17fe0:	subcs	r0, r0, r1, lsl #25
   17fe4:	cmp	r0, r1, lsl #24
   17fe8:	adc	r2, r2, r2
   17fec:	subcs	r0, r0, r1, lsl #24
   17ff0:	cmp	r0, r1, lsl #23
   17ff4:	adc	r2, r2, r2
   17ff8:	subcs	r0, r0, r1, lsl #23
   17ffc:	cmp	r0, r1, lsl #22
   18000:	adc	r2, r2, r2
   18004:	subcs	r0, r0, r1, lsl #22
   18008:	cmp	r0, r1, lsl #21
   1800c:	adc	r2, r2, r2
   18010:	subcs	r0, r0, r1, lsl #21
   18014:	cmp	r0, r1, lsl #20
   18018:	adc	r2, r2, r2
   1801c:	subcs	r0, r0, r1, lsl #20
   18020:	cmp	r0, r1, lsl #19
   18024:	adc	r2, r2, r2
   18028:	subcs	r0, r0, r1, lsl #19
   1802c:	cmp	r0, r1, lsl #18
   18030:	adc	r2, r2, r2
   18034:	subcs	r0, r0, r1, lsl #18
   18038:	cmp	r0, r1, lsl #17
   1803c:	adc	r2, r2, r2
   18040:	subcs	r0, r0, r1, lsl #17
   18044:	cmp	r0, r1, lsl #16
   18048:	adc	r2, r2, r2
   1804c:	subcs	r0, r0, r1, lsl #16
   18050:	cmp	r0, r1, lsl #15
   18054:	adc	r2, r2, r2
   18058:	subcs	r0, r0, r1, lsl #15
   1805c:	cmp	r0, r1, lsl #14
   18060:	adc	r2, r2, r2
   18064:	subcs	r0, r0, r1, lsl #14
   18068:	cmp	r0, r1, lsl #13
   1806c:	adc	r2, r2, r2
   18070:	subcs	r0, r0, r1, lsl #13
   18074:	cmp	r0, r1, lsl #12
   18078:	adc	r2, r2, r2
   1807c:	subcs	r0, r0, r1, lsl #12
   18080:	cmp	r0, r1, lsl #11
   18084:	adc	r2, r2, r2
   18088:	subcs	r0, r0, r1, lsl #11
   1808c:	cmp	r0, r1, lsl #10
   18090:	adc	r2, r2, r2
   18094:	subcs	r0, r0, r1, lsl #10
   18098:	cmp	r0, r1, lsl #9
   1809c:	adc	r2, r2, r2
   180a0:	subcs	r0, r0, r1, lsl #9
   180a4:	cmp	r0, r1, lsl #8
   180a8:	adc	r2, r2, r2
   180ac:	subcs	r0, r0, r1, lsl #8
   180b0:	cmp	r0, r1, lsl #7
   180b4:	adc	r2, r2, r2
   180b8:	subcs	r0, r0, r1, lsl #7
   180bc:	cmp	r0, r1, lsl #6
   180c0:	adc	r2, r2, r2
   180c4:	subcs	r0, r0, r1, lsl #6
   180c8:	cmp	r0, r1, lsl #5
   180cc:	adc	r2, r2, r2
   180d0:	subcs	r0, r0, r1, lsl #5
   180d4:	cmp	r0, r1, lsl #4
   180d8:	adc	r2, r2, r2
   180dc:	subcs	r0, r0, r1, lsl #4
   180e0:	cmp	r0, r1, lsl #3
   180e4:	adc	r2, r2, r2
   180e8:	subcs	r0, r0, r1, lsl #3
   180ec:	cmp	r0, r1, lsl #2
   180f0:	adc	r2, r2, r2
   180f4:	subcs	r0, r0, r1, lsl #2
   180f8:	cmp	r0, r1, lsl #1
   180fc:	adc	r2, r2, r2
   18100:	subcs	r0, r0, r1, lsl #1
   18104:	cmp	r0, r1
   18108:	adc	r2, r2, r2
   1810c:	subcs	r0, r0, r1
   18110:	mov	r0, r2
   18114:	bx	lr
   18118:	moveq	r0, #1
   1811c:	movne	r0, #0
   18120:	bx	lr
   18124:	clz	r2, r1
   18128:	rsb	r2, r2, #31
   1812c:	lsr	r0, r0, r2
   18130:	bx	lr
   18134:	cmp	r0, #0
   18138:	mvnne	r0, #0
   1813c:	b	183a0 <sigaltstack@plt+0x6db4>
   18140:	cmp	r1, #0
   18144:	beq	18134 <sigaltstack@plt+0x6b48>
   18148:	push	{r0, r1, lr}
   1814c:	bl	17f54 <sigaltstack@plt+0x6968>
   18150:	pop	{r1, r2, lr}
   18154:	mul	r3, r2, r0
   18158:	sub	r1, r1, r3
   1815c:	bx	lr
   18160:	cmp	r1, #0
   18164:	beq	18370 <sigaltstack@plt+0x6d84>
   18168:	eor	ip, r0, r1
   1816c:	rsbmi	r1, r1, #0
   18170:	subs	r2, r1, #1
   18174:	beq	1833c <sigaltstack@plt+0x6d50>
   18178:	movs	r3, r0
   1817c:	rsbmi	r3, r0, #0
   18180:	cmp	r3, r1
   18184:	bls	18348 <sigaltstack@plt+0x6d5c>
   18188:	tst	r1, r2
   1818c:	beq	18358 <sigaltstack@plt+0x6d6c>
   18190:	clz	r2, r3
   18194:	clz	r0, r1
   18198:	sub	r2, r0, r2
   1819c:	rsbs	r2, r2, #31
   181a0:	addne	r2, r2, r2, lsl #1
   181a4:	mov	r0, #0
   181a8:	addne	pc, pc, r2, lsl #2
   181ac:	nop			; (mov r0, r0)
   181b0:	cmp	r3, r1, lsl #31
   181b4:	adc	r0, r0, r0
   181b8:	subcs	r3, r3, r1, lsl #31
   181bc:	cmp	r3, r1, lsl #30
   181c0:	adc	r0, r0, r0
   181c4:	subcs	r3, r3, r1, lsl #30
   181c8:	cmp	r3, r1, lsl #29
   181cc:	adc	r0, r0, r0
   181d0:	subcs	r3, r3, r1, lsl #29
   181d4:	cmp	r3, r1, lsl #28
   181d8:	adc	r0, r0, r0
   181dc:	subcs	r3, r3, r1, lsl #28
   181e0:	cmp	r3, r1, lsl #27
   181e4:	adc	r0, r0, r0
   181e8:	subcs	r3, r3, r1, lsl #27
   181ec:	cmp	r3, r1, lsl #26
   181f0:	adc	r0, r0, r0
   181f4:	subcs	r3, r3, r1, lsl #26
   181f8:	cmp	r3, r1, lsl #25
   181fc:	adc	r0, r0, r0
   18200:	subcs	r3, r3, r1, lsl #25
   18204:	cmp	r3, r1, lsl #24
   18208:	adc	r0, r0, r0
   1820c:	subcs	r3, r3, r1, lsl #24
   18210:	cmp	r3, r1, lsl #23
   18214:	adc	r0, r0, r0
   18218:	subcs	r3, r3, r1, lsl #23
   1821c:	cmp	r3, r1, lsl #22
   18220:	adc	r0, r0, r0
   18224:	subcs	r3, r3, r1, lsl #22
   18228:	cmp	r3, r1, lsl #21
   1822c:	adc	r0, r0, r0
   18230:	subcs	r3, r3, r1, lsl #21
   18234:	cmp	r3, r1, lsl #20
   18238:	adc	r0, r0, r0
   1823c:	subcs	r3, r3, r1, lsl #20
   18240:	cmp	r3, r1, lsl #19
   18244:	adc	r0, r0, r0
   18248:	subcs	r3, r3, r1, lsl #19
   1824c:	cmp	r3, r1, lsl #18
   18250:	adc	r0, r0, r0
   18254:	subcs	r3, r3, r1, lsl #18
   18258:	cmp	r3, r1, lsl #17
   1825c:	adc	r0, r0, r0
   18260:	subcs	r3, r3, r1, lsl #17
   18264:	cmp	r3, r1, lsl #16
   18268:	adc	r0, r0, r0
   1826c:	subcs	r3, r3, r1, lsl #16
   18270:	cmp	r3, r1, lsl #15
   18274:	adc	r0, r0, r0
   18278:	subcs	r3, r3, r1, lsl #15
   1827c:	cmp	r3, r1, lsl #14
   18280:	adc	r0, r0, r0
   18284:	subcs	r3, r3, r1, lsl #14
   18288:	cmp	r3, r1, lsl #13
   1828c:	adc	r0, r0, r0
   18290:	subcs	r3, r3, r1, lsl #13
   18294:	cmp	r3, r1, lsl #12
   18298:	adc	r0, r0, r0
   1829c:	subcs	r3, r3, r1, lsl #12
   182a0:	cmp	r3, r1, lsl #11
   182a4:	adc	r0, r0, r0
   182a8:	subcs	r3, r3, r1, lsl #11
   182ac:	cmp	r3, r1, lsl #10
   182b0:	adc	r0, r0, r0
   182b4:	subcs	r3, r3, r1, lsl #10
   182b8:	cmp	r3, r1, lsl #9
   182bc:	adc	r0, r0, r0
   182c0:	subcs	r3, r3, r1, lsl #9
   182c4:	cmp	r3, r1, lsl #8
   182c8:	adc	r0, r0, r0
   182cc:	subcs	r3, r3, r1, lsl #8
   182d0:	cmp	r3, r1, lsl #7
   182d4:	adc	r0, r0, r0
   182d8:	subcs	r3, r3, r1, lsl #7
   182dc:	cmp	r3, r1, lsl #6
   182e0:	adc	r0, r0, r0
   182e4:	subcs	r3, r3, r1, lsl #6
   182e8:	cmp	r3, r1, lsl #5
   182ec:	adc	r0, r0, r0
   182f0:	subcs	r3, r3, r1, lsl #5
   182f4:	cmp	r3, r1, lsl #4
   182f8:	adc	r0, r0, r0
   182fc:	subcs	r3, r3, r1, lsl #4
   18300:	cmp	r3, r1, lsl #3
   18304:	adc	r0, r0, r0
   18308:	subcs	r3, r3, r1, lsl #3
   1830c:	cmp	r3, r1, lsl #2
   18310:	adc	r0, r0, r0
   18314:	subcs	r3, r3, r1, lsl #2
   18318:	cmp	r3, r1, lsl #1
   1831c:	adc	r0, r0, r0
   18320:	subcs	r3, r3, r1, lsl #1
   18324:	cmp	r3, r1
   18328:	adc	r0, r0, r0
   1832c:	subcs	r3, r3, r1
   18330:	cmp	ip, #0
   18334:	rsbmi	r0, r0, #0
   18338:	bx	lr
   1833c:	teq	ip, r0
   18340:	rsbmi	r0, r0, #0
   18344:	bx	lr
   18348:	movcc	r0, #0
   1834c:	asreq	r0, ip, #31
   18350:	orreq	r0, r0, #1
   18354:	bx	lr
   18358:	clz	r2, r1
   1835c:	rsb	r2, r2, #31
   18360:	cmp	ip, #0
   18364:	lsr	r0, r3, r2
   18368:	rsbmi	r0, r0, #0
   1836c:	bx	lr
   18370:	cmp	r0, #0
   18374:	mvngt	r0, #-2147483648	; 0x80000000
   18378:	movlt	r0, #-2147483648	; 0x80000000
   1837c:	b	183a0 <sigaltstack@plt+0x6db4>
   18380:	cmp	r1, #0
   18384:	beq	18370 <sigaltstack@plt+0x6d84>
   18388:	push	{r0, r1, lr}
   1838c:	bl	18168 <sigaltstack@plt+0x6b7c>
   18390:	pop	{r1, r2, lr}
   18394:	mul	r3, r2, r0
   18398:	sub	r1, r1, r3
   1839c:	bx	lr
   183a0:	push	{r1, lr}
   183a4:	mov	r0, #8
   183a8:	bl	11214 <raise@plt>
   183ac:	pop	{r1, pc}
   183b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   183b4:	mov	r7, r0
   183b8:	ldr	r6, [pc, #72]	; 18408 <sigaltstack@plt+0x6e1c>
   183bc:	ldr	r5, [pc, #72]	; 1840c <sigaltstack@plt+0x6e20>
   183c0:	add	r6, pc, r6
   183c4:	add	r5, pc, r5
   183c8:	sub	r6, r6, r5
   183cc:	mov	r8, r1
   183d0:	mov	r9, r2
   183d4:	bl	111d0 <fdopen@plt-0x20>
   183d8:	asrs	r6, r6, #2
   183dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   183e0:	mov	r4, #0
   183e4:	add	r4, r4, #1
   183e8:	ldr	r3, [r5], #4
   183ec:	mov	r2, r9
   183f0:	mov	r1, r8
   183f4:	mov	r0, r7
   183f8:	blx	r3
   183fc:	cmp	r6, r4
   18400:	bne	183e4 <sigaltstack@plt+0x6df8>
   18404:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18408:	andeq	r1, r1, r8, asr #22
   1840c:	andeq	r1, r1, r0, asr #22
   18410:	bx	lr

Disassembly of section .fini:

00018414 <.fini>:
   18414:	push	{r3, lr}
   18418:	pop	{r3, pc}
