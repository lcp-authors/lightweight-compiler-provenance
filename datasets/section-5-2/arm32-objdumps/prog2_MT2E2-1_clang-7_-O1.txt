
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

000110c0 <.init>:
   110c0:	push	{r3, lr}
   110c4:	bl	111e8 <_start@@Base+0x3c>
   110c8:	pop	{r3, pc}

Disassembly of section .plt:

000110cc <calloc@plt-0x14>:
   110cc:	push	{lr}		; (str lr, [sp, #-4]!)
   110d0:	ldr	lr, [pc, #4]	; 110dc <calloc@plt-0x4>
   110d4:	add	lr, pc, lr
   110d8:	ldr	pc, [lr, #8]!
   110dc:	andeq	r1, r1, r4, lsr #30

000110e0 <calloc@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #69632	; 0x11000
   110e8:	ldr	pc, [ip, #3876]!	; 0xf24

000110ec <strcmp@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #69632	; 0x11000
   110f4:	ldr	pc, [ip, #3868]!	; 0xf1c

000110f8 <printf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #69632	; 0x11000
   11100:	ldr	pc, [ip, #3860]!	; 0xf14

00011104 <__isoc99_fscanf@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #69632	; 0x11000
   1110c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011110 <fopen@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #69632	; 0x11000
   11118:	ldr	pc, [ip, #3844]!	; 0xf04

0001111c <free@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #69632	; 0x11000
   11124:	ldr	pc, [ip, #3836]!	; 0xefc

00011128 <memcpy@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #69632	; 0x11000
   11130:	ldr	pc, [ip, #3828]!	; 0xef4

00011134 <realloc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #69632	; 0x11000
   1113c:	ldr	pc, [ip, #3820]!	; 0xeec

00011140 <strcpy@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #69632	; 0x11000
   11148:	ldr	pc, [ip, #3812]!	; 0xee4

0001114c <puts@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #69632	; 0x11000
   11154:	ldr	pc, [ip, #3804]!	; 0xedc

00011158 <malloc@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #69632	; 0x11000
   11160:	ldr	pc, [ip, #3796]!	; 0xed4

00011164 <__libc_start_main@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #69632	; 0x11000
   1116c:	ldr	pc, [ip, #3788]!	; 0xecc

00011170 <__gmon_start__@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #69632	; 0x11000
   11178:	ldr	pc, [ip, #3780]!	; 0xec4

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #69632	; 0x11000
   11184:	ldr	pc, [ip, #3772]!	; 0xebc

00011188 <putchar@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #69632	; 0x11000
   11190:	ldr	pc, [ip, #3764]!	; 0xeb4

00011194 <fclose@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #69632	; 0x11000
   1119c:	ldr	pc, [ip, #3756]!	; 0xeac

000111a0 <abort@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #69632	; 0x11000
   111a8:	ldr	pc, [ip, #3748]!	; 0xea4

Disassembly of section .text:

000111ac <_start@@Base>:
   111ac:	mov	fp, #0
   111b0:	mov	lr, #0
   111b4:	pop	{r1}		; (ldr r1, [sp], #4)
   111b8:	mov	r2, sp
   111bc:	push	{r2}		; (str r2, [sp, #-4]!)
   111c0:	push	{r0}		; (str r0, [sp, #-4]!)
   111c4:	ldr	ip, [pc, #16]	; 111dc <_start@@Base+0x30>
   111c8:	push	{ip}		; (str ip, [sp, #-4]!)
   111cc:	ldr	r0, [pc, #12]	; 111e0 <_start@@Base+0x34>
   111d0:	ldr	r3, [pc, #12]	; 111e4 <_start@@Base+0x38>
   111d4:	bl	11164 <__libc_start_main@plt>
   111d8:	bl	111a0 <abort@plt>
   111dc:	andeq	r2, r1, ip, lsl #13
   111e0:	andeq	r1, r1, r4, asr #8
   111e4:	andeq	r2, r1, ip, lsr #12
   111e8:	ldr	r3, [pc, #20]	; 11204 <_start@@Base+0x58>
   111ec:	ldr	r2, [pc, #20]	; 11208 <_start@@Base+0x5c>
   111f0:	add	r3, pc, r3
   111f4:	ldr	r2, [r3, r2]
   111f8:	cmp	r2, #0
   111fc:	bxeq	lr
   11200:	b	11170 <__gmon_start__@plt>
   11204:	andeq	r1, r1, r8, lsl #28
   11208:	andeq	r0, r0, r0, asr r0
   1120c:	ldr	r0, [pc, #24]	; 1122c <_start@@Base+0x80>
   11210:	ldr	r3, [pc, #24]	; 11230 <_start@@Base+0x84>
   11214:	cmp	r3, r0
   11218:	bxeq	lr
   1121c:	ldr	r3, [pc, #16]	; 11234 <_start@@Base+0x88>
   11220:	cmp	r3, #0
   11224:	bxeq	lr
   11228:	bx	r3
   1122c:	andeq	r3, r2, ip, asr r0
   11230:	andeq	r3, r2, ip, asr r0
   11234:	andeq	r0, r0, r0
   11238:	ldr	r0, [pc, #36]	; 11264 <_start@@Base+0xb8>
   1123c:	ldr	r1, [pc, #36]	; 11268 <_start@@Base+0xbc>
   11240:	sub	r1, r1, r0
   11244:	asr	r1, r1, #2
   11248:	add	r1, r1, r1, lsr #31
   1124c:	asrs	r1, r1, #1
   11250:	bxeq	lr
   11254:	ldr	r3, [pc, #16]	; 1126c <_start@@Base+0xc0>
   11258:	cmp	r3, #0
   1125c:	bxeq	lr
   11260:	bx	r3
   11264:	andeq	r3, r2, ip, asr r0
   11268:	andeq	r3, r2, ip, asr r0
   1126c:	andeq	r0, r0, r0
   11270:	push	{r4, lr}
   11274:	ldr	r4, [pc, #24]	; 11294 <_start@@Base+0xe8>
   11278:	ldrb	r3, [r4]
   1127c:	cmp	r3, #0
   11280:	popne	{r4, pc}
   11284:	bl	1120c <_start@@Base+0x60>
   11288:	mov	r3, #1
   1128c:	strb	r3, [r4]
   11290:	pop	{r4, pc}
   11294:	andeq	r3, r2, ip, asr r0
   11298:	b	11238 <_start@@Base+0x8c>

0001129c <crescente@@Base>:
   1129c:	push	{r4, r5, fp, lr}
   112a0:	add	fp, sp, #8
   112a4:	cmp	r0, #0
   112a8:	popeq	{r4, r5, fp, pc}
   112ac:	mov	r4, r0
   112b0:	movw	r5, #9892	; 0x26a4
   112b4:	movt	r5, #1
   112b8:	ldr	r0, [r4, #4]
   112bc:	bl	1129c <crescente@@Base>
   112c0:	ldr	r1, [r4]
   112c4:	mov	r0, r5
   112c8:	bl	110f8 <printf@plt>
   112cc:	ldr	r4, [r4, #8]
   112d0:	cmp	r4, #0
   112d4:	bne	112b8 <crescente@@Base+0x1c>
   112d8:	pop	{r4, r5, fp, pc}

000112dc <decrescente@@Base>:
   112dc:	push	{r4, r5, fp, lr}
   112e0:	add	fp, sp, #8
   112e4:	cmp	r0, #0
   112e8:	popeq	{r4, r5, fp, pc}
   112ec:	mov	r4, r0
   112f0:	movw	r5, #9892	; 0x26a4
   112f4:	movt	r5, #1
   112f8:	ldr	r0, [r4, #8]
   112fc:	bl	112dc <decrescente@@Base>
   11300:	ldr	r1, [r4]
   11304:	mov	r0, r5
   11308:	bl	110f8 <printf@plt>
   1130c:	ldr	r4, [r4, #4]
   11310:	cmp	r4, #0
   11314:	bne	112f8 <decrescente@@Base+0x1c>
   11318:	pop	{r4, r5, fp, pc}

0001131c <avl_imprime_ord@@Base>:
   1131c:	ldr	r0, [r0]
   11320:	cmp	r1, #0
   11324:	blt	1132c <avl_imprime_ord@@Base+0x10>
   11328:	b	1129c <crescente@@Base>
   1132c:	b	112dc <decrescente@@Base>

00011330 <valida_passwds@@Base>:
   11330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11334:	add	fp, sp, #28
   11338:	sub	sp, sp, #52	; 0x34
   1133c:	mov	r9, r2
   11340:	mov	r8, r1
   11344:	mov	r7, r0
   11348:	movw	r1, #9536	; 0x2540
   1134c:	movt	r1, #1
   11350:	mov	r0, #10
   11354:	bl	12038 <tabela_nova@@Base>
   11358:	mov	r4, r0
   1135c:	movw	r1, #9896	; 0x26a8
   11360:	movt	r1, #1
   11364:	add	r2, sp, #27
   11368:	add	r3, sp, #2
   1136c:	mov	r0, r7
   11370:	bl	11104 <__isoc99_fscanf@plt>
   11374:	cmp	r0, #2
   11378:	bne	113b8 <valida_passwds@@Base+0x88>
   1137c:	add	r5, sp, #27
   11380:	add	r6, sp, #2
   11384:	movw	sl, #9896	; 0x26a8
   11388:	movt	sl, #1
   1138c:	mov	r0, r4
   11390:	mov	r1, r5
   11394:	mov	r2, r6
   11398:	bl	1211c <tabela_adiciona@@Base>
   1139c:	mov	r0, r7
   113a0:	mov	r1, sl
   113a4:	mov	r2, r5
   113a8:	mov	r3, r6
   113ac:	bl	11104 <__isoc99_fscanf@plt>
   113b0:	cmp	r0, #2
   113b4:	beq	1138c <valida_passwds@@Base+0x5c>
   113b8:	ldr	r6, [r9]
   113bc:	cmp	r6, #0
   113c0:	ldrne	r7, [r8]
   113c4:	cmpne	r7, #0
   113c8:	beq	1142c <valida_passwds@@Base+0xfc>
   113cc:	movw	r5, #9902	; 0x26ae
   113d0:	movt	r5, #1
   113d4:	movw	r8, #10464	; 0x28e0
   113d8:	movt	r8, #1
   113dc:	movw	r9, #10432	; 0x28c0
   113e0:	movt	r9, #1
   113e4:	ldr	r2, [r6]
   113e8:	ldr	r1, [r7]
   113ec:	mov	r0, r5
   113f0:	bl	110f8 <printf@plt>
   113f4:	ldr	r1, [r7]
   113f8:	mov	r0, r4
   113fc:	bl	1230c <tabela_valor@@Base>
   11400:	ldr	r1, [r6]
   11404:	bl	110ec <strcmp@plt>
   11408:	cmp	r0, #0
   1140c:	movne	r0, r9
   11410:	moveq	r0, r8
   11414:	bl	1114c <puts@plt>
   11418:	ldr	r6, [r6, #4]
   1141c:	cmp	r6, #0
   11420:	ldrne	r7, [r7, #4]
   11424:	cmpne	r7, #0
   11428:	bne	113e4 <valida_passwds@@Base+0xb4>
   1142c:	mov	r0, r4
   11430:	bl	12380 <tabela_esvazia@@Base>
   11434:	mov	r0, r4
   11438:	bl	1111c <free@plt>
   1143c:	sub	sp, fp, #28
   11440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011444 <main@@Base>:
   11444:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11448:	add	fp, sp, #24
   1144c:	sub	sp, sp, #384	; 0x180
   11450:	movw	r0, #9992	; 0x2708
   11454:	movt	r0, #1
   11458:	add	r1, r0, #16
   1145c:	add	r2, r0, #32
   11460:	add	r5, sp, #80	; 0x50
   11464:	vld1.64	{d16-d17}, [r2]
   11468:	add	r2, r5, #32
   1146c:	mov	r3, #48	; 0x30
   11470:	vld1.64	{d18-d19}, [r1]
   11474:	vld1.64	{d20-d21}, [r0], r3
   11478:	vst1.64	{d16-d17}, [r2]
   1147c:	add	r1, r5, #16
   11480:	vst1.64	{d18-d19}, [r1]
   11484:	mov	r1, r5
   11488:	vst1.64	{d20-d21}, [r1], r3
   1148c:	ldr	r0, [r0]
   11490:	str	r0, [r1]
   11494:	movw	r0, #10496	; 0x2900
   11498:	movt	r0, #1
   1149c:	bl	1114c <puts@plt>
   114a0:	mov	r6, #0
   114a4:	bl	115f4 <avl_nova@@Base>
   114a8:	mov	r4, r0
   114ac:	add	r1, r5, r6
   114b0:	mov	r0, r4
   114b4:	bl	11888 <avl_insere@@Base>
   114b8:	add	r6, r6, #4
   114bc:	cmp	r6, #52	; 0x34
   114c0:	bne	114ac <main@@Base+0x68>
   114c4:	movw	r0, #9926	; 0x26c6
   114c8:	movt	r0, #1
   114cc:	bl	110f8 <printf@plt>
   114d0:	ldr	r0, [r4]
   114d4:	bl	11a5c <avl_imprime@@Base>
   114d8:	movw	r0, #9944	; 0x26d8
   114dc:	movt	r0, #1
   114e0:	bl	110f8 <printf@plt>
   114e4:	mov	r0, r4
   114e8:	mov	r1, #1
   114ec:	bl	1131c <avl_imprime_ord@@Base>
   114f0:	movw	r0, #10642	; 0x2992
   114f4:	movt	r0, #1
   114f8:	bl	1114c <puts@plt>
   114fc:	add	r6, sp, #80	; 0x50
   11500:	movw	r1, #10048	; 0x2740
   11504:	movt	r1, #1
   11508:	mov	r0, r6
   1150c:	mov	r2, #300	; 0x12c
   11510:	bl	11128 <memcpy@plt>
   11514:	mov	r4, sp
   11518:	movw	r1, #10352	; 0x2870
   1151c:	movt	r1, #1
   11520:	mov	r0, r4
   11524:	mov	r2, #75	; 0x4b
   11528:	bl	11128 <memcpy@plt>
   1152c:	movw	r0, #10528	; 0x2920
   11530:	movt	r0, #1
   11534:	bl	1114c <puts@plt>
   11538:	movw	r0, #9973	; 0x26f5
   1153c:	movt	r0, #1
   11540:	movw	r1, #9987	; 0x2703
   11544:	movt	r1, #1
   11548:	bl	11110 <fopen@plt>
   1154c:	cmp	r0, #0
   11550:	beq	115dc <main@@Base+0x198>
   11554:	mov	r8, r0
   11558:	mov	r5, #0
   1155c:	bl	11cac <lista_nova@@Base>
   11560:	mov	r7, r0
   11564:	add	r1, r6, r5
   11568:	mov	r0, r7
   1156c:	mov	r2, #0
   11570:	bl	11d54 <lista_insere@@Base>
   11574:	add	r5, r5, #100	; 0x64
   11578:	cmp	r5, #300	; 0x12c
   1157c:	bne	11564 <main@@Base+0x120>
   11580:	mov	r5, #0
   11584:	bl	11cac <lista_nova@@Base>
   11588:	mov	r6, r0
   1158c:	add	r1, r4, r5
   11590:	mov	r0, r6
   11594:	mov	r2, #0
   11598:	bl	11d54 <lista_insere@@Base>
   1159c:	add	r5, r5, #25
   115a0:	cmp	r5, #75	; 0x4b
   115a4:	bne	1158c <main@@Base+0x148>
   115a8:	mov	r0, r8
   115ac:	mov	r1, r7
   115b0:	mov	r2, r6
   115b4:	bl	11330 <valida_passwds@@Base>
   115b8:	mov	r0, r7
   115bc:	bl	11cdc <lista_apaga@@Base>
   115c0:	mov	r0, r6
   115c4:	bl	11cdc <lista_apaga@@Base>
   115c8:	mov	r0, r8
   115cc:	bl	11194 <fclose@plt>
   115d0:	mov	r0, #0
   115d4:	sub	sp, fp, #24
   115d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   115dc:	movw	r0, #10560	; 0x2940
   115e0:	movt	r0, #1
   115e4:	bl	1114c <puts@plt>
   115e8:	mvn	r0, #0
   115ec:	sub	sp, fp, #24
   115f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115f4 <avl_nova@@Base>:
   115f4:	push	{fp, lr}
   115f8:	mov	fp, sp
   115fc:	mov	r0, #4
   11600:	bl	11158 <malloc@plt>
   11604:	cmp	r0, #0
   11608:	moveq	r0, #0
   1160c:	movne	r1, #0
   11610:	strne	r1, [r0]
   11614:	pop	{fp, pc}

00011618 <avl_apaga@@Base>:
   11618:	cmp	r0, #0
   1161c:	bxeq	lr
   11620:	push	{r4, sl, fp, lr}
   11624:	add	fp, sp, #8
   11628:	mov	r4, r0
   1162c:	ldr	r0, [r0]
   11630:	cmp	r0, #0
   11634:	beq	1164c <avl_apaga@@Base+0x34>
   11638:	ldr	r1, [r0]
   1163c:	bl	11658 <avl_remove_impl@@Base>
   11640:	str	r0, [r4]
   11644:	cmp	r0, #0
   11648:	bne	11638 <avl_apaga@@Base+0x20>
   1164c:	mov	r0, r4
   11650:	pop	{r4, sl, fp, lr}
   11654:	b	1111c <free@plt>

00011658 <avl_remove_impl@@Base>:
   11658:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1165c:	add	fp, sp, #24
   11660:	mov	r8, #0
   11664:	cmp	r0, #0
   11668:	beq	11800 <avl_remove_impl@@Base+0x1a8>
   1166c:	mov	r7, r1
   11670:	mov	r4, r0
   11674:	ldr	r6, [r0]
   11678:	mov	r0, r1
   1167c:	mov	r1, r6
   11680:	bl	110ec <strcmp@plt>
   11684:	mov	r5, r4
   11688:	cmn	r0, #1
   1168c:	bgt	11698 <avl_remove_impl@@Base+0x40>
   11690:	ldr	r0, [r5, #4]!
   11694:	b	116a4 <avl_remove_impl@@Base+0x4c>
   11698:	cmp	r0, #0
   1169c:	beq	1174c <avl_remove_impl@@Base+0xf4>
   116a0:	ldr	r0, [r5, #8]!
   116a4:	mov	r1, r7
   116a8:	bl	11658 <avl_remove_impl@@Base>
   116ac:	str	r0, [r5]
   116b0:	ldr	r5, [r4, #4]
   116b4:	mov	r0, r5
   116b8:	bl	11abc <avl_altura@@Base>
   116bc:	mov	r7, r0
   116c0:	ldr	r6, [r4, #8]
   116c4:	mov	r0, r6
   116c8:	bl	11abc <avl_altura@@Base>
   116cc:	mov	r1, r0
   116d0:	mov	r0, r7
   116d4:	bl	11acc <max@@Base>
   116d8:	add	r0, r0, #1
   116dc:	str	r0, [r4, #12]
   116e0:	mov	r0, r4
   116e4:	bl	11c08 <calc_balanceamento@@Base>
   116e8:	cmp	r0, #2
   116ec:	blt	11718 <avl_remove_impl@@Base+0xc0>
   116f0:	mov	r0, r6
   116f4:	bl	11c08 <calc_balanceamento@@Base>
   116f8:	cmn	r0, #1
   116fc:	bgt	1170c <avl_remove_impl@@Base+0xb4>
   11700:	mov	r0, r6
   11704:	bl	11b24 <roda_direita@@Base>
   11708:	str	r0, [r4, #8]
   1170c:	mov	r0, r4
   11710:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11714:	b	11b94 <roda_esquerda@@Base>
   11718:	cmn	r0, #2
   1171c:	movgt	r0, r4
   11720:	popgt	{r4, r5, r6, r7, r8, sl, fp, pc}
   11724:	mov	r0, r5
   11728:	bl	11c08 <calc_balanceamento@@Base>
   1172c:	cmp	r0, #1
   11730:	blt	11740 <avl_remove_impl@@Base+0xe8>
   11734:	mov	r0, r5
   11738:	bl	11b94 <roda_esquerda@@Base>
   1173c:	str	r0, [r4, #4]
   11740:	mov	r0, r4
   11744:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11748:	b	11b24 <roda_direita@@Base>
   1174c:	ldr	r0, [r5, #8]!
   11750:	ldr	r7, [r5, #-4]
   11754:	cmp	r7, #0
   11758:	beq	11798 <avl_remove_impl@@Base+0x140>
   1175c:	cmp	r0, #0
   11760:	beq	117a4 <avl_remove_impl@@Base+0x14c>
   11764:	bl	11a0c <avl_no_valormin@@Base>
   11768:	mov	r7, r0
   1176c:	ldr	r0, [r0]
   11770:	bl	1117c <strlen@plt>
   11774:	add	r1, r0, #1
   11778:	mov	r0, r6
   1177c:	bl	11134 <realloc@plt>
   11780:	str	r0, [r4]
   11784:	ldr	r1, [r7]
   11788:	bl	11140 <strcpy@plt>
   1178c:	ldr	r0, [r4, #8]
   11790:	ldr	r1, [r7]
   11794:	b	116a8 <avl_remove_impl@@Base+0x50>
   11798:	cmp	r0, #0
   1179c:	mov	r7, r0
   117a0:	beq	117e0 <avl_remove_impl@@Base+0x188>
   117a4:	ldr	r0, [r7]
   117a8:	bl	1117c <strlen@plt>
   117ac:	add	r1, r0, #1
   117b0:	mov	r0, r6
   117b4:	bl	11134 <realloc@plt>
   117b8:	str	r0, [r4]
   117bc:	ldr	r1, [r7]
   117c0:	bl	11140 <strcpy@plt>
   117c4:	ldr	r0, [r7, #4]
   117c8:	str	r0, [r4, #4]
   117cc:	ldr	r0, [r7, #8]
   117d0:	str	r0, [r4, #8]
   117d4:	ldr	r0, [r7, #12]
   117d8:	str	r0, [r4, #12]
   117dc:	b	117e8 <avl_remove_impl@@Base+0x190>
   117e0:	mov	r7, r4
   117e4:	mov	r4, #0
   117e8:	ldr	r0, [r7]
   117ec:	bl	1111c <free@plt>
   117f0:	mov	r0, r7
   117f4:	bl	1111c <free@plt>
   117f8:	cmp	r4, #0
   117fc:	bne	116b0 <avl_remove_impl@@Base+0x58>
   11800:	mov	r0, r8
   11804:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011808 <avl_pesquisa@@Base>:
   11808:	cmp	r0, #0
   1180c:	cmpne	r1, #0
   11810:	bne	1181c <avl_pesquisa@@Base+0x14>
   11814:	mov	r0, #0
   11818:	bx	lr
   1181c:	ldr	r0, [r0]
   11820:	b	11824 <avl_pesquisa_impl@@Base>

00011824 <avl_pesquisa_impl@@Base>:
   11824:	push	{r4, r5, r6, sl, fp, lr}
   11828:	add	fp, sp, #16
   1182c:	mov	r4, #0
   11830:	cmp	r0, #0
   11834:	beq	11874 <avl_pesquisa_impl@@Base+0x50>
   11838:	mov	r5, r1
   1183c:	mov	r6, r0
   11840:	ldr	r1, [r6]
   11844:	mov	r0, r5
   11848:	bl	110ec <strcmp@plt>
   1184c:	cmn	r0, #1
   11850:	bgt	1185c <avl_pesquisa_impl@@Base+0x38>
   11854:	add	r0, r6, #4
   11858:	b	11868 <avl_pesquisa_impl@@Base+0x44>
   1185c:	cmp	r0, #0
   11860:	beq	1187c <avl_pesquisa_impl@@Base+0x58>
   11864:	add	r0, r6, #8
   11868:	ldr	r6, [r0]
   1186c:	cmp	r6, #0
   11870:	bne	11840 <avl_pesquisa_impl@@Base+0x1c>
   11874:	mov	r0, r4
   11878:	pop	{r4, r5, r6, sl, fp, pc}
   1187c:	mov	r4, r6
   11880:	mov	r0, r4
   11884:	pop	{r4, r5, r6, sl, fp, pc}

00011888 <avl_insere@@Base>:
   11888:	push	{r4, sl, fp, lr}
   1188c:	add	fp, sp, #8
   11890:	mov	r4, r0
   11894:	mvn	r0, #0
   11898:	cmp	r4, #0
   1189c:	cmpne	r1, #0
   118a0:	bne	118a8 <avl_insere@@Base+0x20>
   118a4:	pop	{r4, sl, fp, pc}
   118a8:	ldr	r0, [r4]
   118ac:	bl	118bc <avl_insere_impl@@Base>
   118b0:	str	r0, [r4]
   118b4:	mov	r0, #0
   118b8:	pop	{r4, sl, fp, pc}

000118bc <avl_insere_impl@@Base>:
   118bc:	push	{r4, r5, r6, r7, fp, lr}
   118c0:	add	fp, sp, #16
   118c4:	mov	r5, r1
   118c8:	cmp	r0, #0
   118cc:	beq	118f0 <avl_insere_impl@@Base+0x34>
   118d0:	mov	r4, r0
   118d4:	ldr	r1, [r0]
   118d8:	mov	r0, r5
   118dc:	bl	110ec <strcmp@plt>
   118e0:	cmn	r0, #1
   118e4:	bgt	118fc <avl_insere_impl@@Base+0x40>
   118e8:	add	r6, r4, #4
   118ec:	b	11908 <avl_insere_impl@@Base+0x4c>
   118f0:	mov	r0, r5
   118f4:	pop	{r4, r5, r6, r7, fp, lr}
   118f8:	b	11ad8 <avl_novo_no@@Base>
   118fc:	cmp	r0, #0
   11900:	beq	119b0 <avl_insere_impl@@Base+0xf4>
   11904:	add	r6, r4, #8
   11908:	ldr	r0, [r6]
   1190c:	mov	r1, r5
   11910:	bl	118bc <avl_insere_impl@@Base>
   11914:	str	r0, [r6]
   11918:	ldr	r5, [r4, #4]
   1191c:	mov	r0, r5
   11920:	bl	11abc <avl_altura@@Base>
   11924:	mov	r7, r0
   11928:	ldr	r6, [r4, #8]
   1192c:	mov	r0, r6
   11930:	bl	11abc <avl_altura@@Base>
   11934:	mov	r1, r0
   11938:	mov	r0, r7
   1193c:	bl	11acc <max@@Base>
   11940:	add	r0, r0, #1
   11944:	str	r0, [r4, #12]
   11948:	mov	r0, r4
   1194c:	bl	11c08 <calc_balanceamento@@Base>
   11950:	cmp	r0, #2
   11954:	blt	11980 <avl_insere_impl@@Base+0xc4>
   11958:	mov	r0, r6
   1195c:	bl	11c08 <calc_balanceamento@@Base>
   11960:	cmn	r0, #1
   11964:	bgt	11974 <avl_insere_impl@@Base+0xb8>
   11968:	mov	r0, r6
   1196c:	bl	11b24 <roda_direita@@Base>
   11970:	str	r0, [r4, #8]
   11974:	mov	r0, r4
   11978:	pop	{r4, r5, r6, r7, fp, lr}
   1197c:	b	11b94 <roda_esquerda@@Base>
   11980:	cmn	r0, #2
   11984:	bgt	119b0 <avl_insere_impl@@Base+0xf4>
   11988:	mov	r0, r5
   1198c:	bl	11c08 <calc_balanceamento@@Base>
   11990:	cmp	r0, #1
   11994:	blt	119a4 <avl_insere_impl@@Base+0xe8>
   11998:	mov	r0, r5
   1199c:	bl	11b94 <roda_esquerda@@Base>
   119a0:	str	r0, [r4, #4]
   119a4:	mov	r0, r4
   119a8:	pop	{r4, r5, r6, r7, fp, lr}
   119ac:	b	11b24 <roda_direita@@Base>
   119b0:	mov	r0, r4
   119b4:	pop	{r4, r5, r6, r7, fp, pc}

000119b8 <avl_remove@@Base>:
   119b8:	push	{r4, sl, fp, lr}
   119bc:	add	fp, sp, #8
   119c0:	mov	r4, r0
   119c4:	mvn	r0, #0
   119c8:	cmp	r4, #0
   119cc:	cmpne	r1, #0
   119d0:	bne	119d8 <avl_remove@@Base+0x20>
   119d4:	pop	{r4, sl, fp, pc}
   119d8:	ldr	r0, [r4]
   119dc:	bl	11658 <avl_remove_impl@@Base>
   119e0:	str	r0, [r4]
   119e4:	mov	r0, #0
   119e8:	pop	{r4, sl, fp, pc}

000119ec <avl_min@@Base>:
   119ec:	cmp	r0, #0
   119f0:	moveq	r0, #0
   119f4:	bxeq	lr
   119f8:	push	{fp, lr}
   119fc:	mov	fp, sp
   11a00:	bl	11a0c <avl_no_valormin@@Base>
   11a04:	ldr	r0, [r0]
   11a08:	pop	{fp, pc}

00011a0c <avl_no_valormin@@Base>:
   11a0c:	mov	r1, r0
   11a10:	ldr	r0, [r0, #4]
   11a14:	cmp	r0, #0
   11a18:	bne	11a0c <avl_no_valormin@@Base>
   11a1c:	mov	r0, r1
   11a20:	bx	lr

00011a24 <avl_max@@Base>:
   11a24:	cmp	r0, #0
   11a28:	moveq	r0, #0
   11a2c:	bxeq	lr
   11a30:	push	{fp, lr}
   11a34:	mov	fp, sp
   11a38:	bl	11a44 <avl_no_valormax@@Base>
   11a3c:	ldr	r0, [r0]
   11a40:	pop	{fp, pc}

00011a44 <avl_no_valormax@@Base>:
   11a44:	mov	r1, r0
   11a48:	ldr	r0, [r0, #8]
   11a4c:	cmp	r0, #0
   11a50:	bne	11a44 <avl_no_valormax@@Base>
   11a54:	mov	r0, r1
   11a58:	bx	lr

00011a5c <avl_imprime@@Base>:
   11a5c:	cmp	r0, #0
   11a60:	bxeq	lr
   11a64:	push	{fp, lr}
   11a68:	mov	fp, sp
   11a6c:	bl	11a7c <avl_preordem_impl@@Base>
   11a70:	mov	r0, #10
   11a74:	pop	{fp, lr}
   11a78:	b	11188 <putchar@plt>

00011a7c <avl_preordem_impl@@Base>:
   11a7c:	push	{r4, r5, fp, lr}
   11a80:	add	fp, sp, #8
   11a84:	cmp	r0, #0
   11a88:	popeq	{r4, r5, fp, pc}
   11a8c:	mov	r4, r0
   11a90:	movw	r5, #9892	; 0x26a4
   11a94:	movt	r5, #1
   11a98:	ldr	r1, [r4]
   11a9c:	mov	r0, r5
   11aa0:	bl	110f8 <printf@plt>
   11aa4:	ldr	r0, [r4, #4]
   11aa8:	bl	11a7c <avl_preordem_impl@@Base>
   11aac:	ldr	r4, [r4, #8]
   11ab0:	cmp	r4, #0
   11ab4:	bne	11a98 <avl_preordem_impl@@Base+0x1c>
   11ab8:	pop	{r4, r5, fp, pc}

00011abc <avl_altura@@Base>:
   11abc:	cmp	r0, #0
   11ac0:	ldrne	r0, [r0, #12]
   11ac4:	mvneq	r0, #0
   11ac8:	bx	lr

00011acc <max@@Base>:
   11acc:	cmp	r0, r1
   11ad0:	movle	r0, r1
   11ad4:	bx	lr

00011ad8 <avl_novo_no@@Base>:
   11ad8:	push	{r4, r5, fp, lr}
   11adc:	add	fp, sp, #8
   11ae0:	mov	r4, r0
   11ae4:	mov	r0, #16
   11ae8:	bl	11158 <malloc@plt>
   11aec:	mov	r5, r0
   11af0:	mov	r0, r4
   11af4:	bl	1117c <strlen@plt>
   11af8:	add	r0, r0, #1
   11afc:	bl	11158 <malloc@plt>
   11b00:	str	r0, [r5]
   11b04:	mov	r1, r4
   11b08:	bl	11140 <strcpy@plt>
   11b0c:	mov	r0, #0
   11b10:	str	r0, [r5, #4]
   11b14:	str	r0, [r5, #8]
   11b18:	str	r0, [r5, #12]
   11b1c:	mov	r0, r5
   11b20:	pop	{r4, r5, fp, pc}

00011b24 <roda_direita@@Base>:
   11b24:	push	{r4, r5, r6, sl, fp, lr}
   11b28:	add	fp, sp, #16
   11b2c:	mov	r5, r0
   11b30:	ldr	r4, [r0, #4]
   11b34:	ldr	r0, [r4, #8]
   11b38:	str	r5, [r4, #8]
   11b3c:	str	r0, [r5, #4]
   11b40:	bl	11abc <avl_altura@@Base>
   11b44:	mov	r6, r0
   11b48:	ldr	r0, [r5, #8]
   11b4c:	bl	11abc <avl_altura@@Base>
   11b50:	mov	r1, r0
   11b54:	mov	r0, r6
   11b58:	bl	11acc <max@@Base>
   11b5c:	add	r0, r0, #1
   11b60:	str	r0, [r5, #12]
   11b64:	ldr	r0, [r4, #4]
   11b68:	bl	11abc <avl_altura@@Base>
   11b6c:	mov	r6, r0
   11b70:	mov	r0, r5
   11b74:	bl	11abc <avl_altura@@Base>
   11b78:	mov	r1, r0
   11b7c:	mov	r0, r6
   11b80:	bl	11acc <max@@Base>
   11b84:	add	r0, r0, #1
   11b88:	str	r0, [r4, #12]
   11b8c:	mov	r0, r4
   11b90:	pop	{r4, r5, r6, sl, fp, pc}

00011b94 <roda_esquerda@@Base>:
   11b94:	push	{r4, r5, r6, r7, fp, lr}
   11b98:	add	fp, sp, #16
   11b9c:	mov	r5, r0
   11ba0:	ldr	r4, [r0, #8]
   11ba4:	ldr	r6, [r4, #4]
   11ba8:	str	r0, [r4, #4]
   11bac:	str	r6, [r0, #8]
   11bb0:	ldr	r0, [r0, #4]
   11bb4:	bl	11abc <avl_altura@@Base>
   11bb8:	mov	r7, r0
   11bbc:	mov	r0, r6
   11bc0:	bl	11abc <avl_altura@@Base>
   11bc4:	mov	r1, r0
   11bc8:	mov	r0, r7
   11bcc:	bl	11acc <max@@Base>
   11bd0:	add	r0, r0, #1
   11bd4:	str	r0, [r5, #12]
   11bd8:	mov	r0, r5
   11bdc:	bl	11abc <avl_altura@@Base>
   11be0:	mov	r5, r0
   11be4:	ldr	r0, [r4, #8]
   11be8:	bl	11abc <avl_altura@@Base>
   11bec:	mov	r1, r0
   11bf0:	mov	r0, r5
   11bf4:	bl	11acc <max@@Base>
   11bf8:	add	r0, r0, #1
   11bfc:	str	r0, [r4, #12]
   11c00:	mov	r0, r4
   11c04:	pop	{r4, r5, r6, r7, fp, pc}

00011c08 <calc_balanceamento@@Base>:
   11c08:	cmp	r0, #0
   11c0c:	moveq	r0, #0
   11c10:	bxeq	lr
   11c14:	push	{r4, r5, fp, lr}
   11c18:	add	fp, sp, #8
   11c1c:	mov	r4, r0
   11c20:	ldr	r0, [r0, #8]
   11c24:	bl	11abc <avl_altura@@Base>
   11c28:	mov	r5, r0
   11c2c:	ldr	r0, [r4, #4]
   11c30:	bl	11abc <avl_altura@@Base>
   11c34:	sub	r0, r5, r0
   11c38:	pop	{r4, r5, fp, pc}

00011c3c <novo_str@@Base>:
   11c3c:	push	{r4, r5, r6, sl, fp, lr}
   11c40:	add	fp, sp, #16
   11c44:	mov	r6, r0
   11c48:	mov	r0, #12
   11c4c:	bl	11158 <malloc@plt>
   11c50:	mov	r5, #0
   11c54:	cmp	r0, #0
   11c58:	beq	11c94 <novo_str@@Base+0x58>
   11c5c:	mov	r4, r0
   11c60:	mov	r0, r6
   11c64:	bl	1117c <strlen@plt>
   11c68:	add	r0, r0, #1
   11c6c:	bl	11158 <malloc@plt>
   11c70:	str	r0, [r4]
   11c74:	cmp	r0, #0
   11c78:	beq	11c9c <novo_str@@Base+0x60>
   11c7c:	mov	r1, r6
   11c80:	bl	11140 <strcpy@plt>
   11c84:	mov	r0, #0
   11c88:	str	r0, [r4, #4]
   11c8c:	str	r0, [r4, #8]
   11c90:	mov	r5, r4
   11c94:	mov	r0, r5
   11c98:	pop	{r4, r5, r6, sl, fp, pc}
   11c9c:	mov	r0, r4
   11ca0:	bl	1111c <free@plt>
   11ca4:	mov	r0, r5
   11ca8:	pop	{r4, r5, r6, sl, fp, pc}

00011cac <lista_nova@@Base>:
   11cac:	push	{fp, lr}
   11cb0:	mov	fp, sp
   11cb4:	mov	r0, #12
   11cb8:	bl	11158 <malloc@plt>
   11cbc:	cmp	r0, #0
   11cc0:	movne	r1, #0
   11cc4:	strne	r1, [r0]
   11cc8:	strne	r1, [r0, #4]
   11ccc:	strne	r1, [r0, #8]
   11cd0:	popne	{fp, pc}
   11cd4:	mov	r0, #0
   11cd8:	pop	{fp, pc}

00011cdc <lista_apaga@@Base>:
   11cdc:	cmp	r0, #0
   11ce0:	bxeq	lr
   11ce4:	push	{r4, r5, fp, lr}
   11ce8:	add	fp, sp, #8
   11cec:	mov	r4, r0
   11cf0:	b	11d0c <lista_apaga@@Base+0x30>
   11cf4:	ldr	r0, [r5, #4]
   11cf8:	str	r0, [r4]
   11cfc:	ldr	r0, [r5]
   11d00:	bl	1111c <free@plt>
   11d04:	mov	r0, r5
   11d08:	bl	1111c <free@plt>
   11d0c:	ldr	r5, [r4]
   11d10:	cmp	r5, #0
   11d14:	bne	11cf4 <lista_apaga@@Base+0x18>
   11d18:	mov	r0, r4
   11d1c:	pop	{r4, r5, fp, lr}
   11d20:	b	1111c <free@plt>

00011d24 <lista_tamanho@@Base>:
   11d24:	cmp	r0, #0
   11d28:	ldrne	r0, [r0, #8]
   11d2c:	mvneq	r0, #0
   11d30:	bx	lr

00011d34 <lista_inicio@@Base>:
   11d34:	cmp	r0, #0
   11d38:	ldrne	r0, [r0]
   11d3c:	moveq	r0, #0
   11d40:	bx	lr

00011d44 <lista_fim@@Base>:
   11d44:	cmp	r0, #0
   11d48:	ldrne	r0, [r0, #4]
   11d4c:	moveq	r0, #0
   11d50:	bx	lr

00011d54 <lista_insere@@Base>:
   11d54:	push	{r4, r5, r6, sl, fp, lr}
   11d58:	add	fp, sp, #16
   11d5c:	mov	r6, #0
   11d60:	cmp	r0, #0
   11d64:	cmpne	r1, #0
   11d68:	bne	11d74 <lista_insere@@Base+0x20>
   11d6c:	mov	r0, r6
   11d70:	pop	{r4, r5, r6, sl, fp, pc}
   11d74:	mov	r5, r2
   11d78:	mov	r4, r0
   11d7c:	mov	r0, r1
   11d80:	bl	11c3c <novo_str@@Base>
   11d84:	cmp	r0, #0
   11d88:	beq	11d6c <lista_insere@@Base+0x18>
   11d8c:	ldr	r1, [r4]
   11d90:	ldr	r2, [r4, #8]
   11d94:	add	r2, r2, #1
   11d98:	str	r2, [r4, #8]
   11d9c:	cmp	r5, #0
   11da0:	beq	11dc4 <lista_insere@@Base+0x70>
   11da4:	cmp	r1, r5
   11da8:	beq	11ddc <lista_insere@@Base+0x88>
   11dac:	ldr	r1, [r5, #8]
   11db0:	str	r5, [r0, #4]
   11db4:	str	r1, [r0, #8]
   11db8:	str	r0, [r1, #4]
   11dbc:	str	r0, [r5, #8]
   11dc0:	b	11df4 <lista_insere@@Base+0xa0>
   11dc4:	cmp	r1, #0
   11dc8:	beq	11dec <lista_insere@@Base+0x98>
   11dcc:	ldr	r1, [r4, #4]
   11dd0:	str	r1, [r0, #8]
   11dd4:	str	r0, [r1, #4]
   11dd8:	b	11df0 <lista_insere@@Base+0x9c>
   11ddc:	str	r1, [r0, #4]
   11de0:	str	r0, [r1, #8]
   11de4:	str	r0, [r4]
   11de8:	b	11df4 <lista_insere@@Base+0xa0>
   11dec:	str	r0, [r4]
   11df0:	str	r0, [r4, #4]
   11df4:	mov	r6, r0
   11df8:	mov	r0, r6
   11dfc:	pop	{r4, r5, r6, sl, fp, pc}

00011e00 <lista_remove@@Base>:
   11e00:	push	{r4, r5, fp, lr}
   11e04:	add	fp, sp, #8
   11e08:	mov	r5, #0
   11e0c:	cmp	r0, #0
   11e10:	movne	r4, r1
   11e14:	cmpne	r1, #0
   11e18:	bne	11e24 <lista_remove@@Base+0x24>
   11e1c:	mov	r0, r5
   11e20:	pop	{r4, r5, fp, pc}
   11e24:	ldr	r1, [r0, #8]
   11e28:	sub	r1, r1, #1
   11e2c:	str	r1, [r0, #8]
   11e30:	ldmib	r4, {r1, r2}
   11e34:	cmp	r2, #0
   11e38:	mov	r3, r0
   11e3c:	addne	r3, r2, #4
   11e40:	str	r1, [r3]
   11e44:	ldr	r5, [r4, #4]
   11e48:	ldr	r1, [r4, #8]
   11e4c:	add	r2, r5, #8
   11e50:	cmp	r5, #0
   11e54:	addeq	r2, r0, #4
   11e58:	str	r1, [r2]
   11e5c:	ldr	r0, [r4]
   11e60:	bl	1111c <free@plt>
   11e64:	mov	r0, r4
   11e68:	bl	1111c <free@plt>
   11e6c:	mov	r0, r5
   11e70:	pop	{r4, r5, fp, pc}

00011e74 <lista_pesquisa@@Base>:
   11e74:	push	{r4, r5, r6, sl, fp, lr}
   11e78:	add	fp, sp, #16
   11e7c:	mov	r4, #0
   11e80:	cmp	r0, #0
   11e84:	movne	r5, r1
   11e88:	cmpne	r1, #0
   11e8c:	bne	11e98 <lista_pesquisa@@Base+0x24>
   11e90:	mov	r0, r4
   11e94:	pop	{r4, r5, r6, sl, fp, pc}
   11e98:	cmp	r2, #1
   11e9c:	bhi	11e90 <lista_pesquisa@@Base+0x1c>
   11ea0:	cmp	r2, #0
   11ea4:	beq	11edc <lista_pesquisa@@Base+0x68>
   11ea8:	ldr	r6, [r0, #4]
   11eac:	cmp	r6, #0
   11eb0:	bne	11ec4 <lista_pesquisa@@Base+0x50>
   11eb4:	b	11e90 <lista_pesquisa@@Base+0x1c>
   11eb8:	ldr	r6, [r6, #8]
   11ebc:	cmp	r6, #0
   11ec0:	beq	11e90 <lista_pesquisa@@Base+0x1c>
   11ec4:	ldr	r0, [r6]
   11ec8:	mov	r1, r5
   11ecc:	bl	110ec <strcmp@plt>
   11ed0:	cmp	r0, #0
   11ed4:	bne	11eb8 <lista_pesquisa@@Base+0x44>
   11ed8:	b	11f0c <lista_pesquisa@@Base+0x98>
   11edc:	ldr	r6, [r0]
   11ee0:	cmp	r6, #0
   11ee4:	bne	11ef8 <lista_pesquisa@@Base+0x84>
   11ee8:	b	11e90 <lista_pesquisa@@Base+0x1c>
   11eec:	ldr	r6, [r6, #4]
   11ef0:	cmp	r6, #0
   11ef4:	beq	11e90 <lista_pesquisa@@Base+0x1c>
   11ef8:	ldr	r0, [r6]
   11efc:	mov	r1, r5
   11f00:	bl	110ec <strcmp@plt>
   11f04:	cmp	r0, #0
   11f08:	bne	11eec <lista_pesquisa@@Base+0x78>
   11f0c:	mov	r4, r6
   11f10:	mov	r0, r4
   11f14:	pop	{r4, r5, r6, sl, fp, pc}

00011f18 <lista_ordena@@Base>:
   11f18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f1c:	add	fp, sp, #24
   11f20:	cmp	r0, #0
   11f24:	beq	11f90 <lista_ordena@@Base+0x78>
   11f28:	ldr	r1, [r0, #8]
   11f2c:	mov	r8, #0
   11f30:	cmp	r1, #0
   11f34:	beq	11f94 <lista_ordena@@Base+0x7c>
   11f38:	ldr	r4, [r0]
   11f3c:	b	11f58 <lista_ordena@@Base+0x40>
   11f40:	cmp	r6, r4
   11f44:	ldrne	r0, [r4]
   11f48:	ldrne	r1, [r6]
   11f4c:	strne	r1, [r4]
   11f50:	strne	r0, [r6]
   11f54:	ldr	r4, [r5]
   11f58:	mov	r5, r4
   11f5c:	ldr	r7, [r5, #4]!
   11f60:	cmp	r7, #0
   11f64:	beq	11f94 <lista_ordena@@Base+0x7c>
   11f68:	mov	r6, r4
   11f6c:	ldr	r1, [r6]
   11f70:	ldr	r0, [r7]
   11f74:	bl	110ec <strcmp@plt>
   11f78:	cmp	r0, #0
   11f7c:	movlt	r6, r7
   11f80:	ldr	r7, [r7, #4]
   11f84:	cmp	r7, #0
   11f88:	bne	11f6c <lista_ordena@@Base+0x54>
   11f8c:	b	11f40 <lista_ordena@@Base+0x28>
   11f90:	mvn	r8, #0
   11f94:	mov	r0, r8
   11f98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011f9c <lista_inverte@@Base>:
   11f9c:	cmp	r0, #0
   11fa0:	mvneq	r1, #0
   11fa4:	moveq	r0, r1
   11fa8:	bxeq	lr
   11fac:	ldr	r2, [r0, #8]
   11fb0:	mov	r1, #0
   11fb4:	cmp	r2, #2
   11fb8:	blt	12030 <lista_inverte@@Base+0x94>
   11fbc:	beq	12004 <lista_inverte@@Base+0x68>
   11fc0:	sub	r1, r2, #2
   11fc4:	ldr	r2, [r0]
   11fc8:	ldr	r2, [r2, #4]
   11fcc:	ldr	ip, [r2, #4]
   11fd0:	ldr	r3, [r2, #8]
   11fd4:	str	ip, [r3, #4]
   11fd8:	ldr	ip, [r2, #4]
   11fdc:	ldr	r3, [r2, #8]
   11fe0:	str	r3, [ip, #8]
   11fe4:	ldr	r3, [r0]
   11fe8:	str	r3, [r2, #4]
   11fec:	ldr	r3, [r0]
   11ff0:	str	r2, [r3, #8]
   11ff4:	str	r2, [r0]
   11ff8:	subs	r1, r1, #1
   11ffc:	mov	r2, ip
   12000:	bne	11fcc <lista_inverte@@Base+0x30>
   12004:	ldr	r2, [r0, #4]
   12008:	ldr	r3, [r2, #8]
   1200c:	str	r3, [r0, #4]
   12010:	mov	r1, #0
   12014:	str	r1, [r3, #4]
   12018:	str	r1, [r2, #8]
   1201c:	ldr	r3, [r0]
   12020:	str	r3, [r2, #4]
   12024:	ldr	r3, [r0]
   12028:	str	r2, [r3, #8]
   1202c:	str	r2, [r0]
   12030:	mov	r0, r1
   12034:	bx	lr

00012038 <tabela_nova@@Base>:
   12038:	push	{r4, r5, r6, r7, fp, lr}
   1203c:	add	fp, sp, #16
   12040:	mov	r4, #0
   12044:	cmp	r0, #1
   12048:	blt	12094 <tabela_nova@@Base+0x5c>
   1204c:	mov	r6, r1
   12050:	cmp	r1, #0
   12054:	beq	12094 <tabela_nova@@Base+0x5c>
   12058:	mov	r5, r0
   1205c:	mov	r0, #12
   12060:	bl	11158 <malloc@plt>
   12064:	cmp	r0, #0
   12068:	beq	12094 <tabela_nova@@Base+0x5c>
   1206c:	mov	r7, r0
   12070:	mov	r0, r5
   12074:	mov	r1, #4
   12078:	bl	110e0 <calloc@plt>
   1207c:	str	r0, [r7, #4]
   12080:	cmp	r0, #0
   12084:	beq	1209c <tabela_nova@@Base+0x64>
   12088:	str	r6, [r7]
   1208c:	str	r5, [r7, #8]
   12090:	mov	r4, r7
   12094:	mov	r0, r4
   12098:	pop	{r4, r5, r6, r7, fp, pc}
   1209c:	mov	r0, r7
   120a0:	bl	1111c <free@plt>
   120a4:	mov	r0, r4
   120a8:	pop	{r4, r5, r6, r7, fp, pc}

000120ac <tabela_apaga@@Base>:
   120ac:	cmp	r0, #0
   120b0:	bxeq	lr
   120b4:	push	{r4, r5, r6, r7, fp, lr}
   120b8:	add	fp, sp, #16
   120bc:	mov	r4, r0
   120c0:	ldr	r0, [r0, #4]
   120c4:	ldr	r1, [r4, #8]
   120c8:	cmp	r1, #1
   120cc:	blt	1210c <tabela_apaga@@Base+0x60>
   120d0:	mov	r6, #0
   120d4:	ldr	r5, [r0, r6, lsl #2]
   120d8:	cmp	r5, #0
   120dc:	beq	120fc <tabela_apaga@@Base+0x50>
   120e0:	ldm	r5, {r0, r7}
   120e4:	bl	1111c <free@plt>
   120e8:	mov	r0, r5
   120ec:	bl	1111c <free@plt>
   120f0:	cmp	r7, #0
   120f4:	mov	r5, r7
   120f8:	bne	120e0 <tabela_apaga@@Base+0x34>
   120fc:	add	r6, r6, #1
   12100:	ldmib	r4, {r0, r1}
   12104:	cmp	r6, r1
   12108:	blt	120d4 <tabela_apaga@@Base+0x28>
   1210c:	bl	1111c <free@plt>
   12110:	mov	r0, r4
   12114:	pop	{r4, r5, r6, r7, fp, lr}
   12118:	b	1111c <free@plt>

0001211c <tabela_adiciona@@Base>:
   1211c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12120:	add	fp, sp, #28
   12124:	sub	sp, sp, #4
   12128:	mvn	sl, #1
   1212c:	cmp	r0, #0
   12130:	beq	12148 <tabela_adiciona@@Base+0x2c>
   12134:	mov	r7, r1
   12138:	cmp	r1, #0
   1213c:	movne	r9, r2
   12140:	cmpne	r2, #0
   12144:	bne	12154 <tabela_adiciona@@Base+0x38>
   12148:	mov	r0, sl
   1214c:	sub	sp, fp, #28
   12150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12154:	mov	r6, r0
   12158:	ldr	r2, [r0]
   1215c:	ldr	r1, [r0, #8]
   12160:	mov	r0, r7
   12164:	blx	r2
   12168:	mov	r8, r0
   1216c:	ldr	r0, [r6, #4]
   12170:	ldr	r5, [r0, r8, lsl #2]
   12174:	cmp	r5, #0
   12178:	bne	1218c <tabela_adiciona@@Base+0x70>
   1217c:	b	121b4 <tabela_adiciona@@Base+0x98>
   12180:	ldr	r5, [r5, #4]
   12184:	cmp	r5, #0
   12188:	beq	121b4 <tabela_adiciona@@Base+0x98>
   1218c:	ldr	r4, [r5]
   12190:	mov	r0, r4
   12194:	mov	r1, r7
   12198:	bl	110ec <strcmp@plt>
   1219c:	cmp	r0, #0
   121a0:	bne	12180 <tabela_adiciona@@Base+0x64>
   121a4:	add	r0, r4, #25
   121a8:	mov	r1, r9
   121ac:	bl	11140 <strcpy@plt>
   121b0:	b	12204 <tabela_adiciona@@Base+0xe8>
   121b4:	mov	r0, #8
   121b8:	bl	11158 <malloc@plt>
   121bc:	cmp	r0, #0
   121c0:	beq	12148 <tabela_adiciona@@Base+0x2c>
   121c4:	mov	r4, r0
   121c8:	mov	r0, #125	; 0x7d
   121cc:	bl	11158 <malloc@plt>
   121d0:	str	r0, [r4]
   121d4:	cmp	r0, #0
   121d8:	beq	12148 <tabela_adiciona@@Base+0x2c>
   121dc:	mov	r1, r7
   121e0:	bl	11140 <strcpy@plt>
   121e4:	ldr	r0, [r4]
   121e8:	add	r0, r0, #25
   121ec:	mov	r1, r9
   121f0:	bl	11140 <strcpy@plt>
   121f4:	ldr	r0, [r6, #4]
   121f8:	ldr	r1, [r0, r8, lsl #2]
   121fc:	str	r1, [r4, #4]
   12200:	str	r4, [r0, r8, lsl #2]
   12204:	mov	sl, #0
   12208:	b	12148 <tabela_adiciona@@Base+0x2c>

0001220c <tabela_remove@@Base>:
   1220c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12210:	add	fp, sp, #24
   12214:	cmp	r0, #0
   12218:	mvneq	r8, #1
   1221c:	moveq	r0, r8
   12220:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12224:	mov	r5, r1
   12228:	mov	r4, r0
   1222c:	ldr	r2, [r0]
   12230:	ldr	r1, [r0, #8]
   12234:	mov	r0, r5
   12238:	blx	r2
   1223c:	ldr	r7, [r4, #4]
   12240:	ldr	r4, [r7, r0, lsl #2]!
   12244:	cmp	r4, #0
   12248:	beq	12290 <tabela_remove@@Base+0x84>
   1224c:	ldr	r0, [r4]
   12250:	mov	r1, r5
   12254:	bl	110ec <strcmp@plt>
   12258:	mov	r8, #0
   1225c:	cmp	r0, #0
   12260:	beq	1229c <tabela_remove@@Base+0x90>
   12264:	ldr	r6, [r4, #4]
   12268:	cmp	r6, #0
   1226c:	beq	12290 <tabela_remove@@Base+0x84>
   12270:	ldr	r0, [r6]
   12274:	mov	r1, r5
   12278:	bl	110ec <strcmp@plt>
   1227c:	cmp	r0, #0
   12280:	mov	r0, r4
   12284:	mov	r4, r6
   12288:	bne	12264 <tabela_remove@@Base+0x58>
   1228c:	b	122a4 <tabela_remove@@Base+0x98>
   12290:	mvn	r8, #2
   12294:	mov	r0, r8
   12298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1229c:	mov	r6, r4
   122a0:	mov	r0, #0
   122a4:	cmp	r0, #0
   122a8:	addne	r7, r0, #4
   122ac:	ldr	r0, [r6, #4]
   122b0:	str	r0, [r7]
   122b4:	ldr	r0, [r6]
   122b8:	bl	1111c <free@plt>
   122bc:	mov	r0, r6
   122c0:	bl	1111c <free@plt>
   122c4:	mov	r0, r8
   122c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000122cc <tabela_existe@@Base>:
   122cc:	mov	r2, r0
   122d0:	mvn	r0, #1
   122d4:	cmp	r2, #0
   122d8:	cmpne	r1, #0
   122dc:	bne	122e4 <tabela_existe@@Base+0x18>
   122e0:	bx	lr
   122e4:	push	{fp, lr}
   122e8:	mov	fp, sp
   122ec:	mov	r0, r2
   122f0:	bl	1230c <tabela_valor@@Base>
   122f4:	mov	r1, r0
   122f8:	mov	r0, #1
   122fc:	cmp	r1, #0
   12300:	mvneq	r0, #2
   12304:	pop	{fp, lr}
   12308:	bx	lr

0001230c <tabela_valor@@Base>:
   1230c:	push	{r4, r5, r6, r7, fp, lr}
   12310:	add	fp, sp, #16
   12314:	mov	r4, #0
   12318:	cmp	r0, #0
   1231c:	beq	12348 <tabela_valor@@Base+0x3c>
   12320:	mov	r5, r1
   12324:	mov	r6, r0
   12328:	ldr	r2, [r0]
   1232c:	ldr	r1, [r0, #8]
   12330:	mov	r0, r5
   12334:	blx	r2
   12338:	ldr	r1, [r6, #4]
   1233c:	ldr	r7, [r1, r0, lsl #2]
   12340:	cmp	r7, #0
   12344:	bne	1235c <tabela_valor@@Base+0x50>
   12348:	mov	r0, r4
   1234c:	pop	{r4, r5, r6, r7, fp, pc}
   12350:	ldr	r7, [r7, #4]
   12354:	cmp	r7, #0
   12358:	beq	12348 <tabela_valor@@Base+0x3c>
   1235c:	ldr	r6, [r7]
   12360:	mov	r0, r6
   12364:	mov	r1, r5
   12368:	bl	110ec <strcmp@plt>
   1236c:	cmp	r0, #0
   12370:	bne	12350 <tabela_valor@@Base+0x44>
   12374:	add	r4, r6, #25
   12378:	mov	r0, r4
   1237c:	pop	{r4, r5, r6, r7, fp, pc}

00012380 <tabela_esvazia@@Base>:
   12380:	push	{r4, r5, r6, r7, fp, lr}
   12384:	add	fp, sp, #16
   12388:	cmp	r0, #0
   1238c:	mvneq	r0, #1
   12390:	popeq	{r4, r5, r6, r7, fp, pc}
   12394:	mov	r4, r0
   12398:	ldr	r0, [r0, #8]
   1239c:	cmp	r0, #1
   123a0:	movlt	r0, #0
   123a4:	poplt	{r4, r5, r6, r7, fp, pc}
   123a8:	mov	r6, #0
   123ac:	b	123cc <tabela_esvazia@@Base+0x4c>
   123b0:	ldr	r1, [r4, #4]
   123b4:	mov	r0, #0
   123b8:	str	r0, [r1, r6, lsl #2]
   123bc:	add	r6, r6, #1
   123c0:	ldr	r1, [r4, #8]
   123c4:	cmp	r6, r1
   123c8:	popge	{r4, r5, r6, r7, fp, pc}
   123cc:	ldr	r0, [r4, #4]
   123d0:	ldr	r5, [r0, r6, lsl #2]
   123d4:	cmp	r5, #0
   123d8:	beq	123b0 <tabela_esvazia@@Base+0x30>
   123dc:	ldm	r5, {r0, r7}
   123e0:	bl	1111c <free@plt>
   123e4:	mov	r0, r5
   123e8:	bl	1111c <free@plt>
   123ec:	cmp	r7, #0
   123f0:	mov	r5, r7
   123f4:	bne	123dc <tabela_esvazia@@Base+0x5c>
   123f8:	b	123b0 <tabela_esvazia@@Base+0x30>

000123fc <tabela_numelementos@@Base>:
   123fc:	cmp	r0, #0
   12400:	mvneq	r0, #1
   12404:	bxeq	lr
   12408:	ldr	r1, [r0, #8]
   1240c:	cmp	r1, #1
   12410:	movlt	r0, #0
   12414:	bxlt	lr
   12418:	ldr	ip, [r0, #4]
   1241c:	ldr	r2, [r0, #8]
   12420:	mov	r0, #0
   12424:	mov	r3, #0
   12428:	b	12438 <tabela_numelementos@@Base+0x3c>
   1242c:	add	r3, r3, #1
   12430:	cmp	r3, r2
   12434:	bxge	lr
   12438:	ldr	r1, [ip, r3, lsl #2]
   1243c:	cmp	r1, #0
   12440:	beq	1242c <tabela_numelementos@@Base+0x30>
   12444:	add	r0, r0, #1
   12448:	ldr	r1, [r1, #4]
   1244c:	cmp	r1, #0
   12450:	bne	12444 <tabela_numelementos@@Base+0x48>
   12454:	b	1242c <tabela_numelementos@@Base+0x30>

00012458 <tabela_elementos@@Base>:
   12458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1245c:	add	fp, sp, #28
   12460:	sub	sp, sp, #4
   12464:	mov	r4, r1
   12468:	mov	r5, r0
   1246c:	bl	123fc <tabela_numelementos@@Base>
   12470:	str	r0, [r4]
   12474:	mov	r6, #0
   12478:	cmp	r0, #1
   1247c:	blt	124fc <tabela_elementos@@Base+0xa4>
   12480:	mov	r1, #125	; 0x7d
   12484:	mul	r0, r0, r1
   12488:	bl	11158 <malloc@plt>
   1248c:	cmp	r0, #0
   12490:	beq	124fc <tabela_elementos@@Base+0xa4>
   12494:	mov	r8, r0
   12498:	ldr	r0, [r5, #8]
   1249c:	cmp	r0, #1
   124a0:	blt	124f8 <tabela_elementos@@Base+0xa0>
   124a4:	ldr	sl, [r5, #4]
   124a8:	ldr	r7, [r5, #8]
   124ac:	mov	r4, #0
   124b0:	mov	r6, #0
   124b4:	ldr	r9, [sl, r6, lsl #2]
   124b8:	cmp	r9, #0
   124bc:	beq	124ec <tabela_elementos@@Base+0x94>
   124c0:	mov	r0, #125	; 0x7d
   124c4:	mla	r5, r4, r0, r8
   124c8:	ldr	r1, [r9]
   124cc:	mov	r0, r5
   124d0:	mov	r2, #125	; 0x7d
   124d4:	bl	11128 <memcpy@plt>
   124d8:	add	r5, r5, #125	; 0x7d
   124dc:	add	r4, r4, #1
   124e0:	ldr	r9, [r9, #4]
   124e4:	cmp	r9, #0
   124e8:	bne	124c8 <tabela_elementos@@Base+0x70>
   124ec:	add	r6, r6, #1
   124f0:	cmp	r6, r7
   124f4:	blt	124b4 <tabela_elementos@@Base+0x5c>
   124f8:	mov	r6, r8
   124fc:	mov	r0, r6
   12500:	sub	sp, fp, #28
   12504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012508 <hash_krm@@Base>:
   12508:	ldrb	r2, [r0]
   1250c:	cmp	r2, #0
   12510:	beq	12530 <hash_krm@@Base+0x28>
   12514:	add	r3, r0, #1
   12518:	mov	r0, #7
   1251c:	uxtab	r0, r0, r2
   12520:	ldrb	r2, [r3], #1
   12524:	cmp	r2, #0
   12528:	bne	1251c <hash_krm@@Base+0x14>
   1252c:	b	12534 <hash_krm@@Base+0x2c>
   12530:	mov	r0, #7
   12534:	udiv	r2, r0, r1
   12538:	mls	r0, r2, r1, r0
   1253c:	bx	lr

00012540 <hash_djbm@@Base>:
   12540:	ldrb	r2, [r0]
   12544:	cmp	r2, #0
   12548:	beq	12570 <hash_djbm@@Base+0x30>
   1254c:	add	r3, r0, #1
   12550:	movw	r0, #5347	; 0x14e3
   12554:	uxtb	r2, r2
   12558:	rsb	r0, r0, r0, lsl #5
   1255c:	eor	r0, r0, r2
   12560:	ldrb	r2, [r3], #1
   12564:	cmp	r2, #0
   12568:	bne	12554 <hash_djbm@@Base+0x14>
   1256c:	b	12574 <hash_djbm@@Base+0x34>
   12570:	movw	r0, #5347	; 0x14e3
   12574:	udiv	r2, r0, r1
   12578:	mls	r0, r2, r1, r0
   1257c:	bx	lr

00012580 <mostraTabela@@Base>:
   12580:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12584:	add	fp, sp, #24
   12588:	mov	r4, r0
   1258c:	bl	123fc <tabela_numelementos@@Base>
   12590:	mov	r1, r0
   12594:	movw	r0, #10608	; 0x2970
   12598:	movt	r0, #1
   1259c:	bl	110f8 <printf@plt>
   125a0:	ldr	r0, [r4, #8]
   125a4:	cmp	r0, #1
   125a8:	blt	12620 <mostraTabela@@Base+0xa0>
   125ac:	mov	r5, #0
   125b0:	movw	r8, #10644	; 0x2994
   125b4:	movt	r8, #1
   125b8:	movw	r7, #10651	; 0x299b
   125bc:	movt	r7, #1
   125c0:	ldr	r0, [r4, #4]
   125c4:	ldr	r0, [r0, r5, lsl #2]
   125c8:	cmp	r0, #0
   125cc:	beq	12610 <mostraTabela@@Base+0x90>
   125d0:	mov	r0, r8
   125d4:	mov	r1, r5
   125d8:	bl	110f8 <printf@plt>
   125dc:	ldr	r0, [r4, #4]
   125e0:	ldr	r6, [r0, r5, lsl #2]
   125e4:	cmp	r6, #0
   125e8:	beq	12608 <mostraTabela@@Base+0x88>
   125ec:	ldr	r1, [r6]
   125f0:	add	r2, r1, #25
   125f4:	mov	r0, r7
   125f8:	bl	110f8 <printf@plt>
   125fc:	ldr	r6, [r6, #4]
   12600:	cmp	r6, #0
   12604:	bne	125ec <mostraTabela@@Base+0x6c>
   12608:	mov	r0, #10
   1260c:	bl	11188 <putchar@plt>
   12610:	ldr	r0, [r4, #8]
   12614:	add	r5, r5, #1
   12618:	cmp	r5, r0
   1261c:	blt	125c0 <mostraTabela@@Base+0x40>
   12620:	mov	r0, #10
   12624:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12628:	b	11188 <putchar@plt>

0001262c <__libc_csu_init@@Base>:
   1262c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12630:	mov	r7, r0
   12634:	ldr	r6, [pc, #72]	; 12684 <__libc_csu_init@@Base+0x58>
   12638:	ldr	r5, [pc, #72]	; 12688 <__libc_csu_init@@Base+0x5c>
   1263c:	add	r6, pc, r6
   12640:	add	r5, pc, r5
   12644:	sub	r6, r6, r5
   12648:	mov	r8, r1
   1264c:	mov	r9, r2
   12650:	bl	110c0 <calloc@plt-0x20>
   12654:	asrs	r6, r6, #2
   12658:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1265c:	mov	r4, #0
   12660:	add	r4, r4, #1
   12664:	ldr	r3, [r5], #4
   12668:	mov	r2, r9
   1266c:	mov	r1, r8
   12670:	mov	r0, r7
   12674:	blx	r3
   12678:	cmp	r6, r4
   1267c:	bne	12660 <__libc_csu_init@@Base+0x34>
   12680:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12684:	andeq	r0, r1, r8, asr #17
   12688:	andeq	r0, r1, r0, asr #17

0001268c <__libc_csu_fini@@Base>:
   1268c:	bx	lr

Disassembly of section .fini:

00012690 <.fini>:
   12690:	push	{r3, lr}
   12694:	pop	{r3, pc}
