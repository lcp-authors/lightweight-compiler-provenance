
../repos/coreutils/src/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010d18 <.init>:
   10d18:	push	{r3, lr}
   10d1c:	bl	11484 <close@plt+0x4f4>
   10d20:	pop	{r3, pc}

Disassembly of section .plt:

00010d24 <calloc@plt-0x14>:
   10d24:	push	{lr}		; (str lr, [sp, #-4]!)
   10d28:	ldr	lr, [pc, #4]	; 10d34 <calloc@plt-0x4>
   10d2c:	add	lr, pc, lr
   10d30:	ldr	pc, [lr, #8]!
   10d34:	andeq	r9, r1, ip, asr #5

00010d38 <calloc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #102400	; 0x19000
   10d40:	ldr	pc, [ip, #716]!	; 0x2cc

00010d44 <fputs_unlocked@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #102400	; 0x19000
   10d4c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d50 <__getdelim@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #102400	; 0x19000
   10d58:	ldr	pc, [ip, #700]!	; 0x2bc

00010d5c <strcmp@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #102400	; 0x19000
   10d64:	ldr	pc, [ip, #692]!	; 0x2b4

00010d68 <fflush@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #102400	; 0x19000
   10d70:	ldr	pc, [ip, #684]!	; 0x2ac

00010d74 <free@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #102400	; 0x19000
   10d7c:	ldr	pc, [ip, #676]!	; 0x2a4

00010d80 <_exit@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #102400	; 0x19000
   10d88:	ldr	pc, [ip, #668]!	; 0x29c

00010d8c <memcpy@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #102400	; 0x19000
   10d94:	ldr	pc, [ip, #660]!	; 0x294

00010d98 <mbsinit@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #102400	; 0x19000
   10da0:	ldr	pc, [ip, #652]!	; 0x28c

00010da4 <fwrite_unlocked@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #102400	; 0x19000
   10dac:	ldr	pc, [ip, #644]!	; 0x284

00010db0 <memcmp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #102400	; 0x19000
   10db8:	ldr	pc, [ip, #636]!	; 0x27c

00010dbc <fputc_unlocked@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #102400	; 0x19000
   10dc4:	ldr	pc, [ip, #628]!	; 0x274

00010dc8 <dcgettext@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #102400	; 0x19000
   10dd0:	ldr	pc, [ip, #620]!	; 0x26c

00010dd4 <dup2@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #102400	; 0x19000
   10ddc:	ldr	pc, [ip, #612]!	; 0x264

00010de0 <realloc@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #102400	; 0x19000
   10de8:	ldr	pc, [ip, #604]!	; 0x25c

00010dec <textdomain@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #102400	; 0x19000
   10df4:	ldr	pc, [ip, #596]!	; 0x254

00010df8 <iswprint@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #102400	; 0x19000
   10e00:	ldr	pc, [ip, #588]!	; 0x24c

00010e04 <fwrite@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #102400	; 0x19000
   10e0c:	ldr	pc, [ip, #580]!	; 0x244

00010e10 <lseek64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #102400	; 0x19000
   10e18:	ldr	pc, [ip, #572]!	; 0x23c

00010e1c <__ctype_get_mb_cur_max@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #102400	; 0x19000
   10e24:	ldr	pc, [ip, #564]!	; 0x234

00010e28 <__fpending@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #102400	; 0x19000
   10e30:	ldr	pc, [ip, #556]!	; 0x22c

00010e34 <mbrtowc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #102400	; 0x19000
   10e3c:	ldr	pc, [ip, #548]!	; 0x224

00010e40 <error@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #102400	; 0x19000
   10e48:	ldr	pc, [ip, #540]!	; 0x21c

00010e4c <fnmatch@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #102400	; 0x19000
   10e54:	ldr	pc, [ip, #532]!	; 0x214

00010e58 <open64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #102400	; 0x19000
   10e60:	ldr	pc, [ip, #524]!	; 0x20c

00010e64 <getenv@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #102400	; 0x19000
   10e6c:	ldr	pc, [ip, #516]!	; 0x204

00010e70 <puts@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #102400	; 0x19000
   10e78:	ldr	pc, [ip, #508]!	; 0x1fc

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #102400	; 0x19000
   10e84:	ldr	pc, [ip, #500]!	; 0x1f4

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #102400	; 0x19000
   10e90:	ldr	pc, [ip, #492]!	; 0x1ec

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #102400	; 0x19000
   10e9c:	ldr	pc, [ip, #484]!	; 0x1e4

00010ea0 <__gmon_start__@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #102400	; 0x19000
   10ea8:	ldr	pc, [ip, #476]!	; 0x1dc

00010eac <freopen64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #102400	; 0x19000
   10eb4:	ldr	pc, [ip, #468]!	; 0x1d4

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #102400	; 0x19000
   10ec0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #102400	; 0x19000
   10ecc:	ldr	pc, [ip, #452]!	; 0x1c4

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #102400	; 0x19000
   10ed8:	ldr	pc, [ip, #444]!	; 0x1bc

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #102400	; 0x19000
   10ee4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ee8 <__errno_location@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #102400	; 0x19000
   10ef0:	ldr	pc, [ip, #428]!	; 0x1ac

00010ef4 <__cxa_atexit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #102400	; 0x19000
   10efc:	ldr	pc, [ip, #420]!	; 0x1a4

00010f00 <memset@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #102400	; 0x19000
   10f08:	ldr	pc, [ip, #412]!	; 0x19c

00010f0c <__printf_chk@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #102400	; 0x19000
   10f14:	ldr	pc, [ip, #404]!	; 0x194

00010f18 <fileno@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #102400	; 0x19000
   10f20:	ldr	pc, [ip, #396]!	; 0x18c

00010f24 <__fprintf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #102400	; 0x19000
   10f2c:	ldr	pc, [ip, #388]!	; 0x184

00010f30 <fclose@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #102400	; 0x19000
   10f38:	ldr	pc, [ip, #380]!	; 0x17c

00010f3c <fseeko64@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #102400	; 0x19000
   10f44:	ldr	pc, [ip, #372]!	; 0x174

00010f48 <setlocale@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #102400	; 0x19000
   10f50:	ldr	pc, [ip, #364]!	; 0x16c

00010f54 <strrchr@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #102400	; 0x19000
   10f5c:	ldr	pc, [ip, #356]!	; 0x164

00010f60 <nl_langinfo@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #102400	; 0x19000
   10f68:	ldr	pc, [ip, #348]!	; 0x15c

00010f6c <bindtextdomain@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #102400	; 0x19000
   10f74:	ldr	pc, [ip, #340]!	; 0x154

00010f78 <strncmp@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #102400	; 0x19000
   10f80:	ldr	pc, [ip, #332]!	; 0x14c

00010f84 <abort@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #102400	; 0x19000
   10f8c:	ldr	pc, [ip, #324]!	; 0x144

00010f90 <close@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #102400	; 0x19000
   10f98:	ldr	pc, [ip, #316]!	; 0x13c

Disassembly of section .text:

00010f9c <_obstack_begin@@Base-0x1798>:
   10f9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10fa0:	mov	r5, #0
   10fa4:	movw	r4, #36644	; 0x8f24
   10fa8:	movt	r4, #1
   10fac:	strd	r6, [sp, #8]
   10fb0:	mov	r6, r1
   10fb4:	strd	r8, [sp, #16]
   10fb8:	mov	r8, r0
   10fbc:	mov	r7, r5
   10fc0:	strd	sl, [sp, #24]
   10fc4:	mov	sl, #2
   10fc8:	str	lr, [sp, #32]
   10fcc:	sub	sp, sp, #12
   10fd0:	ldr	r0, [r1]
   10fd4:	bl	12b74 <_obstack_memory_used@@Base+0x34>
   10fd8:	movw	r1, #36568	; 0x8ed8
   10fdc:	movt	r1, #1
   10fe0:	ldr	r9, [pc, #1116]	; 11444 <close@plt+0x4b4>
   10fe4:	mov	r0, #6
   10fe8:	bl	10f48 <setlocale@plt>
   10fec:	movw	r1, #36604	; 0x8efc
   10ff0:	movt	r1, #1
   10ff4:	movw	r0, #36380	; 0x8e1c
   10ff8:	movt	r0, #1
   10ffc:	bl	10f6c <bindtextdomain@plt>
   11000:	movw	r0, #36380	; 0x8e1c
   11004:	movt	r0, #1
   11008:	bl	10dec <textdomain@plt>
   1100c:	movw	r0, #8612	; 0x21a4
   11010:	movt	r0, #1
   11014:	bl	177b8 <_obstack_memory_used@@Base+0x4c78>
   11018:	mov	r3, r9
   1101c:	mov	r2, r4
   11020:	str	r7, [sp]
   11024:	mov	r1, r6
   11028:	mov	r0, r8
   1102c:	bl	10eb8 <getopt_long@plt>
   11030:	cmn	r0, #1
   11034:	beq	110c4 <close@plt+0x134>
   11038:	cmp	r0, #98	; 0x62
   1103c:	beq	110bc <close@plt+0x12c>
   11040:	ble	11054 <close@plt+0xc4>
   11044:	cmp	r0, #99	; 0x63
   11048:	bne	1109c <close@plt+0x10c>
   1104c:	mov	sl, #1
   11050:	b	11018 <close@plt+0x88>
   11054:	cmn	r0, #3
   11058:	bne	110ac <close@plt+0x11c>
   1105c:	movw	r2, #36628	; 0x8f14
   11060:	movt	r2, #1
   11064:	movw	r3, #41188	; 0xa0e4
   11068:	movt	r3, #2
   1106c:	movw	r0, #41292	; 0xa14c
   11070:	movt	r0, #2
   11074:	stm	sp, {r2, r7}
   11078:	movw	r1, #35624	; 0x8b28
   1107c:	movt	r1, #1
   11080:	ldr	r0, [r0]
   11084:	movw	r2, #36376	; 0x8e18
   11088:	movt	r2, #1
   1108c:	ldr	r3, [r3]
   11090:	bl	16ba8 <_obstack_memory_used@@Base+0x4068>
   11094:	mov	r0, #0
   11098:	bl	10ed0 <exit@plt>
   1109c:	cmp	r0, #112	; 0x70
   110a0:	bne	113d0 <close@plt+0x440>
   110a4:	mov	r5, #1
   110a8:	b	11018 <close@plt+0x88>
   110ac:	cmn	r0, #2
   110b0:	bne	113d0 <close@plt+0x440>
   110b4:	mov	r0, #0
   110b8:	bl	11d00 <close@plt+0xd70>
   110bc:	mov	sl, #0
   110c0:	b	11018 <close@plt+0x88>
   110c4:	movw	r3, #41272	; 0xa138
   110c8:	movt	r3, #2
   110cc:	ldr	r4, [r3]
   110d0:	cmp	sl, #2
   110d4:	moveq	r9, #0
   110d8:	andne	r9, r5, #1
   110dc:	cmp	r9, #0
   110e0:	sub	r8, r8, r4
   110e4:	add	fp, r6, r4, lsl #2
   110e8:	bne	113d8 <close@plt+0x448>
   110ec:	eor	r7, r5, #1
   110f0:	uxtb	r3, r7
   110f4:	cmp	r3, r8
   110f8:	blt	1135c <close@plt+0x3cc>
   110fc:	cmp	r5, #0
   11100:	beq	11158 <close@plt+0x1c8>
   11104:	movw	r5, #31172	; 0x79c4
   11108:	movt	r5, #1
   1110c:	mov	r4, r5
   11110:	movw	r6, #4309	; 0x10d5
   11114:	mov	r0, r4
   11118:	bl	10e70 <puts@plt>
   1111c:	mov	r0, r4
   11120:	bl	10edc <strlen@plt>
   11124:	add	r0, r0, #1
   11128:	add	r4, r4, r0
   1112c:	sub	r3, r4, r5
   11130:	cmp	r3, r6
   11134:	bls	11114 <close@plt+0x184>
   11138:	uxtb	r0, r7
   1113c:	add	sp, sp, #12
   11140:	ldrd	r4, [sp]
   11144:	ldrd	r6, [sp, #8]
   11148:	ldrd	r8, [sp, #16]
   1114c:	ldrd	sl, [sp, #24]
   11150:	add	sp, sp, #32
   11154:	pop	{pc}		; (ldr pc, [sp], #4)
   11158:	cmp	sl, #2
   1115c:	beq	112bc <close@plt+0x32c>
   11160:	movw	r0, #9124	; 0x23a4
   11164:	movt	r0, #1
   11168:	mov	r2, #0
   1116c:	movw	r3, #29736	; 0x7428
   11170:	movt	r3, #1
   11174:	mov	r1, r2
   11178:	str	r0, [sp]
   1117c:	movw	r0, #41300	; 0xa154
   11180:	movt	r0, #2
   11184:	bl	12734 <_obstack_begin@@Base>
   11188:	cmp	r8, #0
   1118c:	beq	112a8 <close@plt+0x318>
   11190:	ldr	r6, [r6, r4, lsl #2]
   11194:	movw	r1, #36856	; 0x8ff8
   11198:	movt	r1, #1
   1119c:	movw	r4, #41288	; 0xa148
   111a0:	movt	r4, #2
   111a4:	mov	r0, r6
   111a8:	bl	10d5c <strcmp@plt>
   111ac:	cmp	r0, #0
   111b0:	beq	111d0 <close@plt+0x240>
   111b4:	movw	r1, #36860	; 0x8ffc
   111b8:	movt	r1, #1
   111bc:	ldr	r2, [r4]
   111c0:	mov	r0, r6
   111c4:	bl	12404 <close@plt+0x1474>
   111c8:	subs	r5, r0, #0
   111cc:	beq	11328 <close@plt+0x398>
   111d0:	mov	r1, r6
   111d4:	ldr	r0, [r4]
   111d8:	bl	116f4 <close@plt+0x764>
   111dc:	mov	r5, r0
   111e0:	ldr	r0, [r4]
   111e4:	bl	12290 <close@plt+0x1300>
   111e8:	cmp	r0, #0
   111ec:	bne	11328 <close@plt+0x398>
   111f0:	cmp	r5, #0
   111f4:	moveq	r7, #1
   111f8:	beq	11138 <close@plt+0x1a8>
   111fc:	movw	ip, #41300	; 0xa154
   11200:	movt	ip, #2
   11204:	ldr	r4, [ip, #8]
   11208:	ldr	r3, [ip, #12]
   1120c:	cmp	r3, r4
   11210:	sub	r6, r3, r4
   11214:	beq	11318 <close@plt+0x388>
   11218:	ldr	r2, [ip, #4]
   1121c:	eor	r7, r5, #1
   11220:	movw	r0, #36572	; 0x8edc
   11224:	movt	r0, #1
   11228:	movw	r8, #36544	; 0x8ec0
   1122c:	movt	r8, #1
   11230:	ldr	r1, [ip, #24]
   11234:	ldr	lr, [ip, #16]
   11238:	add	r3, r3, r1
   1123c:	bic	r3, r3, r1
   11240:	movw	r1, #36584	; 0x8ee8
   11244:	movt	r1, #1
   11248:	sub	r5, r3, r2
   1124c:	sub	r2, lr, r2
   11250:	cmp	r5, r2
   11254:	movw	r5, #41292	; 0xa14c
   11258:	movt	r5, #2
   1125c:	movhi	r3, lr
   11260:	cmp	sl, #0
   11264:	movw	r2, #36548	; 0x8ec4
   11268:	movt	r2, #1
   1126c:	movne	r0, r1
   11270:	ldr	r1, [r5]
   11274:	moveq	r8, r2
   11278:	str	r3, [ip, #8]
   1127c:	str	r3, [ip, #12]
   11280:	bl	10d44 <fputs_unlocked@plt>
   11284:	mov	r2, r6
   11288:	mov	r0, r4
   1128c:	ldr	r3, [r5]
   11290:	mov	r1, #1
   11294:	bl	10da4 <fwrite_unlocked@plt>
   11298:	mov	r0, r8
   1129c:	ldr	r1, [r5]
   112a0:	bl	10d44 <fputs_unlocked@plt>
   112a4:	b	11138 <close@plt+0x1a8>
   112a8:	mov	r1, r8
   112ac:	mov	r0, r8
   112b0:	bl	116f4 <close@plt+0x764>
   112b4:	mov	r5, r0
   112b8:	b	111f0 <close@plt+0x260>
   112bc:	movw	r0, #36772	; 0x8fa4
   112c0:	movt	r0, #1
   112c4:	bl	10e64 <getenv@plt>
   112c8:	subs	r3, r0, #0
   112cc:	beq	11400 <close@plt+0x470>
   112d0:	ldrb	r3, [r3]
   112d4:	cmp	r3, #0
   112d8:	beq	11400 <close@plt+0x470>
   112dc:	bl	12034 <close@plt+0x10a4>
   112e0:	movw	r1, #36780	; 0x8fac
   112e4:	movt	r1, #1
   112e8:	mov	r5, r0
   112ec:	bl	10d5c <strcmp@plt>
   112f0:	cmp	r0, #0
   112f4:	moveq	sl, #1
   112f8:	beq	11160 <close@plt+0x1d0>
   112fc:	mov	r0, r5
   11300:	movw	r1, #36784	; 0x8fb0
   11304:	movt	r1, #1
   11308:	bl	10d5c <strcmp@plt>
   1130c:	clz	sl, r0
   11310:	lsr	sl, sl, #5
   11314:	b	11160 <close@plt+0x1d0>
   11318:	ldrb	r2, [ip, #40]	; 0x28
   1131c:	orr	r2, r2, #2
   11320:	strb	r2, [ip, #40]	; 0x28
   11324:	b	11218 <close@plt+0x288>
   11328:	bl	10ee8 <__errno_location@plt>
   1132c:	ldr	r4, [r0]
   11330:	mov	r2, r6
   11334:	mov	r1, #3
   11338:	mov	r0, #0
   1133c:	bl	15d38 <_obstack_memory_used@@Base+0x31f8>
   11340:	mov	r3, r0
   11344:	movw	r2, #37528	; 0x9298
   11348:	movt	r2, #1
   1134c:	mov	r0, #0
   11350:	mov	r1, r4
   11354:	bl	10e40 <error@plt>
   11358:	b	11138 <close@plt+0x1a8>
   1135c:	movw	r1, #36752	; 0x8f90
   11360:	movt	r1, #1
   11364:	mov	r2, #5
   11368:	mov	r0, r9
   1136c:	bl	10dc8 <dcgettext@plt>
   11370:	cmp	r5, #0
   11374:	mov	r7, r0
   11378:	beq	11424 <close@plt+0x494>
   1137c:	ldr	r0, [r6, r4, lsl #2]
   11380:	bl	164e4 <_obstack_memory_used@@Base+0x39a4>
   11384:	mov	r3, r0
   11388:	mov	r2, r7
   1138c:	mov	r1, r9
   11390:	mov	r0, r9
   11394:	bl	10e40 <error@plt>
   11398:	movw	r3, #41280	; 0xa140
   1139c:	movt	r3, #2
   113a0:	ldr	r4, [r3]
   113a4:	mov	r2, #5
   113a8:	mov	r0, r9
   113ac:	movw	r1, #36864	; 0x9000
   113b0:	movt	r1, #1
   113b4:	bl	10dc8 <dcgettext@plt>
   113b8:	mov	r3, r0
   113bc:	movw	r2, #37856	; 0x93e0
   113c0:	movt	r2, #1
   113c4:	mov	r1, #1
   113c8:	mov	r0, r4
   113cc:	bl	10f24 <__fprintf_chk@plt>
   113d0:	mov	r0, #1
   113d4:	bl	11d00 <close@plt+0xd70>
   113d8:	mov	r2, #5
   113dc:	movw	r1, #36648	; 0x8f28
   113e0:	movt	r1, #1
   113e4:	mov	r0, #0
   113e8:	bl	10dc8 <dcgettext@plt>
   113ec:	mov	r1, #0
   113f0:	mov	r2, r0
   113f4:	mov	r0, r1
   113f8:	bl	10e40 <error@plt>
   113fc:	b	113d0 <close@plt+0x440>
   11400:	mov	r2, #5
   11404:	movw	r1, #36792	; 0x8fb8
   11408:	movt	r1, #1
   1140c:	mov	r0, #0
   11410:	bl	10dc8 <dcgettext@plt>
   11414:	mov	r2, r0
   11418:	mov	r1, #0
   1141c:	mov	r0, #1
   11420:	bl	10e40 <error@plt>
   11424:	ldr	r0, [fp, #4]
   11428:	bl	164e4 <_obstack_memory_used@@Base+0x39a4>
   1142c:	mov	r3, r0
   11430:	mov	r2, r7
   11434:	mov	r1, r5
   11438:	mov	r0, r5
   1143c:	bl	10e40 <error@plt>
   11440:	b	113d0 <close@plt+0x440>
   11444:	andeq	r7, r1, r4, asr #18
   11448:	mov	fp, #0
   1144c:	mov	lr, #0
   11450:	pop	{r1}		; (ldr r1, [sp], #4)
   11454:	mov	r2, sp
   11458:	push	{r2}		; (str r2, [sp, #-4]!)
   1145c:	push	{r0}		; (str r0, [sp, #-4]!)
   11460:	ldr	ip, [pc, #16]	; 11478 <close@plt+0x4e8>
   11464:	push	{ip}		; (str ip, [sp, #-4]!)
   11468:	ldr	r0, [pc, #12]	; 1147c <close@plt+0x4ec>
   1146c:	ldr	r3, [pc, #12]	; 11480 <close@plt+0x4f0>
   11470:	bl	10e88 <__libc_start_main@plt>
   11474:	bl	10f84 <abort@plt>
   11478:			; <UNDEFINED> instruction: 0x000177b4
   1147c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11480:	andeq	r7, r1, r4, asr r7
   11484:	ldr	r3, [pc, #20]	; 114a0 <close@plt+0x510>
   11488:	ldr	r2, [pc, #20]	; 114a4 <close@plt+0x514>
   1148c:	add	r3, pc, r3
   11490:	ldr	r2, [r3, r2]
   11494:	cmp	r2, #0
   11498:	bxeq	lr
   1149c:	b	10ea0 <__gmon_start__@plt>
   114a0:	andeq	r8, r1, ip, ror #22
   114a4:	ldrdeq	r0, [r0], -r8
   114a8:	ldr	r0, [pc, #24]	; 114c8 <close@plt+0x538>
   114ac:	ldr	r3, [pc, #24]	; 114cc <close@plt+0x53c>
   114b0:	cmp	r3, r0
   114b4:	bxeq	lr
   114b8:	ldr	r3, [pc, #16]	; 114d0 <close@plt+0x540>
   114bc:	cmp	r3, #0
   114c0:	bxeq	lr
   114c4:	bx	r3
   114c8:	andeq	sl, r2, r0, lsr r1
   114cc:	andeq	sl, r2, r0, lsr r1
   114d0:	andeq	r0, r0, r0
   114d4:	ldr	r0, [pc, #36]	; 11500 <close@plt+0x570>
   114d8:	ldr	r1, [pc, #36]	; 11504 <close@plt+0x574>
   114dc:	sub	r1, r1, r0
   114e0:	asr	r1, r1, #2
   114e4:	add	r1, r1, r1, lsr #31
   114e8:	asrs	r1, r1, #1
   114ec:	bxeq	lr
   114f0:	ldr	r3, [pc, #16]	; 11508 <close@plt+0x578>
   114f4:	cmp	r3, #0
   114f8:	bxeq	lr
   114fc:	bx	r3
   11500:	andeq	sl, r2, r0, lsr r1
   11504:	andeq	sl, r2, r0, lsr r1
   11508:	andeq	r0, r0, r0
   1150c:	push	{r4, lr}
   11510:	ldr	r4, [pc, #24]	; 11530 <close@plt+0x5a0>
   11514:	ldrb	r3, [r4]
   11518:	cmp	r3, #0
   1151c:	popne	{r4, pc}
   11520:	bl	114a8 <close@plt+0x518>
   11524:	mov	r3, #1
   11528:	strb	r3, [r4]
   1152c:	pop	{r4, pc}
   11530:	andeq	sl, r2, r0, asr r1
   11534:	b	114d4 <close@plt+0x544>
   11538:	ldrb	r3, [r0]
   1153c:	cmp	r3, #0
   11540:	bxeq	lr
   11544:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11548:	movw	r4, #41300	; 0xa154
   1154c:	movt	r4, #2
   11550:	mov	r5, r0
   11554:	strd	r6, [sp, #8]
   11558:	mov	r6, #1
   1155c:	mov	r7, #92	; 0x5c
   11560:	str	r8, [sp, #16]
   11564:	mov	r8, r4
   11568:	str	lr, [sp, #20]
   1156c:	cmp	r3, #61	; 0x3d
   11570:	ldr	r2, [r4, #12]
   11574:	ldr	r1, [r4, #16]
   11578:	beq	11628 <close@plt+0x698>
   1157c:	bhi	1168c <close@plt+0x6fc>
   11580:	cmp	r3, #39	; 0x27
   11584:	bne	11620 <close@plt+0x690>
   11588:	cmp	r1, r2
   1158c:	beq	116a4 <close@plt+0x714>
   11590:	add	r1, r2, #1
   11594:	mov	r3, #39	; 0x27
   11598:	str	r1, [r4, #12]
   1159c:	strb	r3, [r2]
   115a0:	ldr	r3, [r4, #12]
   115a4:	ldr	r2, [r4, #16]
   115a8:	cmp	r2, r3
   115ac:	beq	116cc <close@plt+0x73c>
   115b0:	add	r2, r3, #1
   115b4:	str	r2, [r4, #12]
   115b8:	strb	r7, [r3]
   115bc:	ldr	r3, [r4, #12]
   115c0:	ldr	r2, [r4, #16]
   115c4:	cmp	r2, r3
   115c8:	beq	116b8 <close@plt+0x728>
   115cc:	add	r1, r3, #1
   115d0:	mov	r2, #39	; 0x27
   115d4:	mov	r6, #1
   115d8:	str	r1, [r4, #12]
   115dc:	strb	r2, [r3]
   115e0:	ldr	r2, [r4, #12]
   115e4:	ldr	r1, [r4, #16]
   115e8:	cmp	r1, r2
   115ec:	beq	11654 <close@plt+0x6c4>
   115f0:	add	r3, r2, #1
   115f4:	str	r3, [r4, #12]
   115f8:	ldrb	r3, [r5]
   115fc:	strb	r3, [r2]
   11600:	ldrb	r3, [r5, #1]!
   11604:	cmp	r3, #0
   11608:	bne	1156c <close@plt+0x5dc>
   1160c:	ldrd	r4, [sp]
   11610:	ldrd	r6, [sp, #8]
   11614:	ldr	r8, [sp, #16]
   11618:	add	sp, sp, #20
   1161c:	pop	{pc}		; (ldr pc, [sp], #4)
   11620:	cmp	r3, #58	; 0x3a
   11624:	bne	11684 <close@plt+0x6f4>
   11628:	cmp	r6, #0
   1162c:	beq	11684 <close@plt+0x6f4>
   11630:	cmp	r1, r2
   11634:	beq	116e0 <close@plt+0x750>
   11638:	add	r3, r2, #1
   1163c:	str	r3, [r4, #12]
   11640:	strb	r7, [r2]
   11644:	ldr	r2, [r4, #12]
   11648:	ldr	r1, [r4, #16]
   1164c:	cmp	r1, r2
   11650:	bne	115f0 <close@plt+0x660>
   11654:	mov	r1, #1
   11658:	mov	r0, r8
   1165c:	bl	128f8 <_obstack_newchunk@@Base>
   11660:	ldr	r3, [r4, #12]
   11664:	add	r2, r3, #1
   11668:	str	r2, [r4, #12]
   1166c:	ldrb	r2, [r5]
   11670:	strb	r2, [r3]
   11674:	ldrb	r3, [r5, #1]!
   11678:	cmp	r3, #0
   1167c:	bne	1156c <close@plt+0x5dc>
   11680:	b	1160c <close@plt+0x67c>
   11684:	mov	r6, #1
   11688:	b	115e8 <close@plt+0x658>
   1168c:	cmp	r3, #92	; 0x5c
   11690:	beq	1169c <close@plt+0x70c>
   11694:	cmp	r3, #94	; 0x5e
   11698:	bne	11684 <close@plt+0x6f4>
   1169c:	eor	r6, r6, #1
   116a0:	b	115e8 <close@plt+0x658>
   116a4:	mov	r1, #1
   116a8:	mov	r0, r8
   116ac:	bl	128f8 <_obstack_newchunk@@Base>
   116b0:	ldr	r2, [r4, #12]
   116b4:	b	11590 <close@plt+0x600>
   116b8:	mov	r1, #1
   116bc:	mov	r0, r8
   116c0:	bl	128f8 <_obstack_newchunk@@Base>
   116c4:	ldr	r3, [r4, #12]
   116c8:	b	115cc <close@plt+0x63c>
   116cc:	mov	r1, #1
   116d0:	mov	r0, r8
   116d4:	bl	128f8 <_obstack_newchunk@@Base>
   116d8:	ldr	r3, [r4, #12]
   116dc:	b	115b0 <close@plt+0x620>
   116e0:	mov	r1, #1
   116e4:	mov	r0, r8
   116e8:	bl	128f8 <_obstack_newchunk@@Base>
   116ec:	ldr	r2, [r4, #12]
   116f0:	b	11638 <close@plt+0x6a8>
   116f4:	mov	r3, #0
   116f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   116fc:	strd	r6, [sp, #8]
   11700:	strd	r8, [sp, #16]
   11704:	mov	r8, r0
   11708:	movw	r0, #35500	; 0x8aac
   1170c:	movt	r0, #1
   11710:	strd	sl, [sp, #24]
   11714:	str	lr, [sp, #32]
   11718:	sub	sp, sp, #44	; 0x2c
   1171c:	str	r1, [sp, #16]
   11720:	str	r3, [sp, #32]
   11724:	str	r3, [sp, #36]	; 0x24
   11728:	bl	10e64 <getenv@plt>
   1172c:	subs	r1, r0, #0
   11730:	beq	11b3c <close@plt+0xbac>
   11734:	ldrb	r2, [r1]
   11738:	movw	r3, #35484	; 0x8a9c
   1173c:	movt	r3, #1
   11740:	cmp	r2, #0
   11744:	moveq	r1, r3
   11748:	str	r1, [sp, #8]
   1174c:	movw	r3, #35508	; 0x8ab4
   11750:	movt	r3, #1
   11754:	movw	r5, #31172	; 0x79c4
   11758:	movt	r5, #1
   1175c:	movw	fp, #35500	; 0x8aac
   11760:	movt	fp, #1
   11764:	str	r3, [sp, #20]
   11768:	mov	r9, #3
   1176c:	mov	r3, #1
   11770:	mov	r6, #0
   11774:	str	r3, [sp, #12]
   11778:	cmp	r8, #0
   1177c:	add	r6, r6, #1
   11780:	beq	11918 <close@plt+0x988>
   11784:	mov	r3, r8
   11788:	mov	r2, #10
   1178c:	add	r1, sp, #36	; 0x24
   11790:	add	r0, sp, #32
   11794:	bl	10d50 <__getdelim@plt>
   11798:	cmp	r0, #0
   1179c:	ble	11a6c <close@plt+0xadc>
   117a0:	ldr	r4, [sp, #32]
   117a4:	bl	10ec4 <__ctype_b_loc@plt>
   117a8:	ldrb	r3, [r4]
   117ac:	mov	sl, r0
   117b0:	ldr	r1, [r0]
   117b4:	lsl	r2, r3, #1
   117b8:	ldrh	r2, [r1, r2]
   117bc:	tst	r2, #8192	; 0x2000
   117c0:	bne	1193c <close@plt+0x9ac>
   117c4:	cmp	r3, #35	; 0x23
   117c8:	cmpne	r3, #0
   117cc:	beq	11778 <close@plt+0x7e8>
   117d0:	mov	r7, r4
   117d4:	ldrb	r3, [r7, #1]!
   117d8:	lsl	r2, r3, #1
   117dc:	adds	r3, r3, #0
   117e0:	movne	r3, #1
   117e4:	ldrh	r2, [r1, r2]
   117e8:	eor	r2, r2, #8192	; 0x2000
   117ec:	ands	r3, r3, r2, lsr #13
   117f0:	bne	117d4 <close@plt+0x844>
   117f4:	sub	r1, r7, r4
   117f8:	mov	r0, r4
   117fc:	bl	172d4 <_obstack_memory_used@@Base+0x4794>
   11800:	ldrb	r3, [r7]
   11804:	mov	r4, r0
   11808:	cmp	r3, #0
   1180c:	beq	11a20 <close@plt+0xa90>
   11810:	ldr	r0, [sl]
   11814:	ldrb	r3, [r7, #1]!
   11818:	lsl	r2, r3, #1
   1181c:	ldrh	r2, [r0, r2]
   11820:	tst	r2, #8192	; 0x2000
   11824:	bne	11814 <close@plt+0x884>
   11828:	cmp	r3, #35	; 0x23
   1182c:	cmpne	r3, #0
   11830:	movne	r3, r7
   11834:	bne	11840 <close@plt+0x8b0>
   11838:	b	11a20 <close@plt+0xa90>
   1183c:	mov	r3, r1
   11840:	ldrb	r2, [r3, #1]
   11844:	add	r1, r3, #1
   11848:	cmp	r2, #0
   1184c:	cmpne	r2, #35	; 0x23
   11850:	bne	1183c <close@plt+0x8ac>
   11854:	ldrb	r2, [r1, #-1]
   11858:	lsl	r2, r2, #1
   1185c:	ldrh	r2, [r0, r2]
   11860:	tst	r2, #8192	; 0x2000
   11864:	movne	r1, r3
   11868:	bne	11958 <close@plt+0x9c8>
   1186c:	sub	r1, r1, r7
   11870:	mov	r0, r7
   11874:	bl	172d4 <_obstack_memory_used@@Base+0x4794>
   11878:	mov	r7, r0
   1187c:	mov	r1, fp
   11880:	mov	r0, r4
   11884:	bl	12108 <close@plt+0x1178>
   11888:	subs	r2, r0, #0
   1188c:	beq	11974 <close@plt+0x9e4>
   11890:	cmp	r9, #2
   11894:	beq	11994 <close@plt+0xa04>
   11898:	cmp	r9, #0
   1189c:	beq	118fc <close@plt+0x96c>
   118a0:	ldrb	r3, [r4]
   118a4:	cmp	r3, #46	; 0x2e
   118a8:	beq	119a4 <close@plt+0xa14>
   118ac:	cmp	r3, #42	; 0x2a
   118b0:	beq	11a94 <close@plt+0xb04>
   118b4:	movw	r1, #35552	; 0x8ae0
   118b8:	movt	r1, #1
   118bc:	mov	r0, r4
   118c0:	bl	12108 <close@plt+0x1178>
   118c4:	cmp	r0, #0
   118c8:	beq	118fc <close@plt+0x96c>
   118cc:	movw	r1, #35560	; 0x8ae8
   118d0:	movt	r1, #1
   118d4:	mov	r0, r4
   118d8:	bl	12108 <close@plt+0x1178>
   118dc:	cmp	r0, #0
   118e0:	beq	118fc <close@plt+0x96c>
   118e4:	movw	r1, #35568	; 0x8af0
   118e8:	movt	r1, #1
   118ec:	mov	r0, r4
   118f0:	bl	12108 <close@plt+0x1178>
   118f4:	cmp	r0, #0
   118f8:	bne	11b4c <close@plt+0xbbc>
   118fc:	mov	r0, r4
   11900:	add	r6, r6, #1
   11904:	bl	123a4 <close@plt+0x1414>
   11908:	mov	r0, r7
   1190c:	bl	123a4 <close@plt+0x1414>
   11910:	cmp	r8, #0
   11914:	bne	11784 <close@plt+0x7f4>
   11918:	ldr	r3, [pc, #988]	; 11cfc <close@plt+0xd6c>
   1191c:	cmp	r5, r3
   11920:	beq	11a74 <close@plt+0xae4>
   11924:	mov	r0, r5
   11928:	mov	r4, r5
   1192c:	bl	10edc <strlen@plt>
   11930:	add	r0, r0, #1
   11934:	add	r5, r5, r0
   11938:	b	117a4 <close@plt+0x814>
   1193c:	ldrb	r3, [r4, #1]!
   11940:	lsl	r2, r3, #1
   11944:	ldrh	r2, [r1, r2]
   11948:	tst	r2, #8192	; 0x2000
   1194c:	beq	117c4 <close@plt+0x834>
   11950:	b	1193c <close@plt+0x9ac>
   11954:	mov	r1, r2
   11958:	ldrb	r3, [r1, #-1]
   1195c:	sub	r2, r1, #1
   11960:	lsl	r3, r3, #1
   11964:	ldrh	r3, [r0, r3]
   11968:	tst	r3, #8192	; 0x2000
   1196c:	beq	1186c <close@plt+0x8dc>
   11970:	b	11954 <close@plt+0x9c4>
   11974:	mov	r0, r7
   11978:	ldr	r1, [sp, #8]
   1197c:	bl	10e4c <fnmatch@plt>
   11980:	cmp	r0, #0
   11984:	cmpne	r9, #2
   11988:	movne	r9, #0
   1198c:	moveq	r9, #2
   11990:	b	118fc <close@plt+0x96c>
   11994:	ldrb	r3, [r4]
   11998:	mov	r9, #1
   1199c:	cmp	r3, #46	; 0x2e
   119a0:	bne	118ac <close@plt+0x91c>
   119a4:	movw	sl, #41300	; 0xa154
   119a8:	movt	sl, #2
   119ac:	ldr	r2, [sl, #12]
   119b0:	ldr	r1, [sl, #16]
   119b4:	cmp	r1, r2
   119b8:	beq	11af8 <close@plt+0xb68>
   119bc:	add	r0, r2, #1
   119c0:	mov	r1, #42	; 0x2a
   119c4:	str	r0, [sl, #12]
   119c8:	mov	r0, r4
   119cc:	strb	r1, [r2]
   119d0:	bl	11538 <close@plt+0x5a8>
   119d4:	ldr	r2, [sl, #12]
   119d8:	ldr	r1, [sl, #16]
   119dc:	cmp	r1, r2
   119e0:	beq	11b24 <close@plt+0xb94>
   119e4:	add	r0, r2, #1
   119e8:	mov	r1, #61	; 0x3d
   119ec:	str	r0, [sl, #12]
   119f0:	mov	r0, r7
   119f4:	strb	r1, [r2]
   119f8:	bl	11538 <close@plt+0x5a8>
   119fc:	ldr	r2, [sl, #12]
   11a00:	ldr	r1, [sl, #16]
   11a04:	cmp	r1, r2
   11a08:	beq	11b0c <close@plt+0xb7c>
   11a0c:	add	r0, r2, #1
   11a10:	mov	r1, #58	; 0x3a
   11a14:	str	r0, [sl, #12]
   11a18:	strb	r1, [r2]
   11a1c:	b	118fc <close@plt+0x96c>
   11a20:	mov	r0, #0
   11a24:	mov	r2, #5
   11a28:	ldr	r1, [sp, #20]
   11a2c:	str	r0, [sp, #12]
   11a30:	bl	10dc8 <dcgettext@plt>
   11a34:	mov	r7, r0
   11a38:	mov	r1, #3
   11a3c:	ldr	r2, [sp, #16]
   11a40:	mov	r0, #0
   11a44:	bl	15d38 <_obstack_memory_used@@Base+0x31f8>
   11a48:	mov	r1, #0
   11a4c:	mov	r3, r0
   11a50:	str	r6, [sp]
   11a54:	mov	r0, r1
   11a58:	mov	r2, r7
   11a5c:	bl	10e40 <error@plt>
   11a60:	mov	r0, r4
   11a64:	bl	123a4 <close@plt+0x1414>
   11a68:	b	11778 <close@plt+0x7e8>
   11a6c:	ldr	r0, [sp, #32]
   11a70:	bl	123a4 <close@plt+0x1414>
   11a74:	ldr	r0, [sp, #12]
   11a78:	add	sp, sp, #44	; 0x2c
   11a7c:	ldrd	r4, [sp]
   11a80:	ldrd	r6, [sp, #8]
   11a84:	ldrd	r8, [sp, #16]
   11a88:	ldrd	sl, [sp, #24]
   11a8c:	add	sp, sp, #32
   11a90:	pop	{pc}		; (ldr pc, [sp], #4)
   11a94:	mov	r0, r4
   11a98:	movw	sl, #41300	; 0xa154
   11a9c:	movt	sl, #2
   11aa0:	bl	11538 <close@plt+0x5a8>
   11aa4:	ldr	r2, [sl, #12]
   11aa8:	ldr	r1, [sl, #16]
   11aac:	cmp	r1, r2
   11ab0:	beq	11c38 <close@plt+0xca8>
   11ab4:	ldr	r2, [sl, #12]
   11ab8:	mov	r1, #61	; 0x3d
   11abc:	mov	r0, r7
   11ac0:	add	ip, r2, #1
   11ac4:	str	ip, [sl, #12]
   11ac8:	strb	r1, [r2]
   11acc:	bl	11538 <close@plt+0x5a8>
   11ad0:	ldr	r2, [sl, #12]
   11ad4:	ldr	r1, [sl, #16]
   11ad8:	cmp	r1, r2
   11adc:	beq	11c24 <close@plt+0xc94>
   11ae0:	ldr	r2, [sl, #12]
   11ae4:	mov	r1, #58	; 0x3a
   11ae8:	add	r0, r2, #1
   11aec:	str	r0, [sl, #12]
   11af0:	strb	r1, [r2]
   11af4:	b	118fc <close@plt+0x96c>
   11af8:	mov	r1, #1
   11afc:	mov	r0, sl
   11b00:	bl	128f8 <_obstack_newchunk@@Base>
   11b04:	ldr	r2, [sl, #12]
   11b08:	b	119bc <close@plt+0xa2c>
   11b0c:	movw	r0, #41300	; 0xa154
   11b10:	movt	r0, #2
   11b14:	mov	r1, #1
   11b18:	bl	128f8 <_obstack_newchunk@@Base>
   11b1c:	ldr	r2, [sl, #12]
   11b20:	b	11a0c <close@plt+0xa7c>
   11b24:	movw	r0, #41300	; 0xa154
   11b28:	movt	r0, #2
   11b2c:	mov	r1, #1
   11b30:	bl	128f8 <_obstack_newchunk@@Base>
   11b34:	ldr	r2, [sl, #12]
   11b38:	b	119e4 <close@plt+0xa54>
   11b3c:	movw	r3, #35484	; 0x8a9c
   11b40:	movt	r3, #1
   11b44:	str	r3, [sp, #8]
   11b48:	b	1174c <close@plt+0x7bc>
   11b4c:	movw	r3, #30684	; 0x77dc
   11b50:	movt	r3, #1
   11b54:	str	r5, [sp, #24]
   11b58:	mov	sl, r3
   11b5c:	mov	r2, #0
   11b60:	str	r3, [sp, #28]
   11b64:	movw	r3, #35492	; 0x8aa4
   11b68:	movt	r3, #1
   11b6c:	mov	r5, sl
   11b70:	mov	r1, r3
   11b74:	mov	sl, r2
   11b78:	b	11b8c <close@plt+0xbfc>
   11b7c:	ldr	r1, [r5, #4]!
   11b80:	add	sl, sl, #1
   11b84:	cmp	r1, #0
   11b88:	beq	11c48 <close@plt+0xcb8>
   11b8c:	mov	r0, r4
   11b90:	bl	12108 <close@plt+0x1178>
   11b94:	cmp	r0, #0
   11b98:	bne	11b7c <close@plt+0xbec>
   11b9c:	ldr	r5, [sp, #24]
   11ba0:	str	sl, [sp, #24]
   11ba4:	movw	sl, #41300	; 0xa154
   11ba8:	movt	sl, #2
   11bac:	ldr	r2, [sl, #12]
   11bb0:	ldr	r1, [sl, #16]
   11bb4:	cmp	r1, r2
   11bb8:	beq	11cec <close@plt+0xd5c>
   11bbc:	ldrd	r2, [sp, #24]
   11bc0:	add	r3, r3, r2, lsl #2
   11bc4:	ldr	r2, [sl, #12]
   11bc8:	ldr	r3, [r3, #152]	; 0x98
   11bcc:	add	r1, r2, #1
   11bd0:	str	r1, [sl, #12]
   11bd4:	ldrb	r1, [r3]
   11bd8:	strb	r1, [r2]
   11bdc:	ldr	r2, [sl, #12]
   11be0:	ldr	r1, [sl, #16]
   11be4:	cmp	r1, r2
   11be8:	beq	11cd0 <close@plt+0xd40>
   11bec:	ldr	r2, [sl, #12]
   11bf0:	add	r1, r2, #1
   11bf4:	str	r1, [sl, #12]
   11bf8:	ldrb	r1, [r3, #1]
   11bfc:	strb	r1, [r2]
   11c00:	ldr	r2, [sl, #12]
   11c04:	ldr	r1, [sl, #16]
   11c08:	cmp	r1, r2
   11c0c:	bne	11ab4 <close@plt+0xb24>
   11c10:	movw	r0, #41300	; 0xa154
   11c14:	movt	r0, #2
   11c18:	mov	r1, #1
   11c1c:	bl	128f8 <_obstack_newchunk@@Base>
   11c20:	b	11ab4 <close@plt+0xb24>
   11c24:	movw	r0, #41300	; 0xa154
   11c28:	movt	r0, #2
   11c2c:	mov	r1, #1
   11c30:	bl	128f8 <_obstack_newchunk@@Base>
   11c34:	b	11ae0 <close@plt+0xb50>
   11c38:	mov	r1, #1
   11c3c:	mov	r0, sl
   11c40:	bl	128f8 <_obstack_newchunk@@Base>
   11c44:	b	11ab4 <close@plt+0xb24>
   11c48:	cmp	r9, #3
   11c4c:	mov	r3, r1
   11c50:	ldr	r5, [sp, #24]
   11c54:	beq	118fc <close@plt+0x96c>
   11c58:	mov	r2, #5
   11c5c:	movw	r1, #35580	; 0x8afc
   11c60:	movt	r1, #1
   11c64:	mov	r0, r3
   11c68:	str	r3, [sp, #12]
   11c6c:	bl	10dc8 <dcgettext@plt>
   11c70:	ldr	r2, [sp, #16]
   11c74:	mov	sl, r0
   11c78:	cmp	r2, #0
   11c7c:	beq	11cb4 <close@plt+0xd24>
   11c80:	ldr	r3, [sp, #12]
   11c84:	mov	r1, #3
   11c88:	mov	r0, r3
   11c8c:	bl	15d38 <_obstack_memory_used@@Base+0x31f8>
   11c90:	mov	r3, r0
   11c94:	mov	r1, #0
   11c98:	mov	r2, sl
   11c9c:	str	r6, [sp]
   11ca0:	mov	r0, r1
   11ca4:	str	r4, [sp, #4]
   11ca8:	str	r1, [sp, #12]
   11cac:	bl	10e40 <error@plt>
   11cb0:	b	118fc <close@plt+0x96c>
   11cb4:	movw	r1, #35612	; 0x8b1c
   11cb8:	movt	r1, #1
   11cbc:	ldr	r0, [sp, #16]
   11cc0:	mov	r2, #5
   11cc4:	bl	10dc8 <dcgettext@plt>
   11cc8:	mov	r3, r0
   11ccc:	b	11c94 <close@plt+0xd04>
   11cd0:	movw	r0, #41300	; 0xa154
   11cd4:	movt	r0, #2
   11cd8:	str	r3, [sp, #24]
   11cdc:	mov	r1, #1
   11ce0:	bl	128f8 <_obstack_newchunk@@Base>
   11ce4:	ldr	r3, [sp, #24]
   11ce8:	b	11bec <close@plt+0xc5c>
   11cec:	mov	r1, #1
   11cf0:	mov	r0, sl
   11cf4:	bl	128f8 <_obstack_newchunk@@Base>
   11cf8:	b	11bbc <close@plt+0xc2c>
   11cfc:	muleq	r1, sl, sl
   11d00:	subs	r6, r0, #0
   11d04:	str	r7, [sp, #-8]!
   11d08:	str	lr, [sp, #4]
   11d0c:	sub	sp, sp, #56	; 0x38
   11d10:	beq	11d58 <close@plt+0xdc8>
   11d14:	movw	r3, #41280	; 0xa140
   11d18:	movt	r3, #2
   11d1c:	ldr	r4, [r3]
   11d20:	mov	r2, #5
   11d24:	movw	r1, #35636	; 0x8b34
   11d28:	movt	r1, #1
   11d2c:	mov	r0, #0
   11d30:	bl	10dc8 <dcgettext@plt>
   11d34:	movw	r3, #41352	; 0xa188
   11d38:	movt	r3, #2
   11d3c:	mov	r2, r0
   11d40:	mov	r1, #1
   11d44:	ldr	r3, [r3]
   11d48:	mov	r0, r4
   11d4c:	bl	10f24 <__fprintf_chk@plt>
   11d50:	mov	r0, r6
   11d54:	bl	10ed0 <exit@plt>
   11d58:	mov	r2, #5
   11d5c:	movw	r1, #35676	; 0x8b5c
   11d60:	movt	r1, #1
   11d64:	movw	r7, #41292	; 0xa14c
   11d68:	movt	r7, #2
   11d6c:	bl	10dc8 <dcgettext@plt>
   11d70:	movw	r3, #41352	; 0xa188
   11d74:	movt	r3, #2
   11d78:	mov	r1, r0
   11d7c:	mov	r0, #1
   11d80:	ldr	r2, [r3]
   11d84:	bl	10f0c <__printf_chk@plt>
   11d88:	mov	r2, #5
   11d8c:	movw	r1, #35708	; 0x8b7c
   11d90:	movt	r1, #1
   11d94:	mov	r0, r6
   11d98:	bl	10dc8 <dcgettext@plt>
   11d9c:	ldr	r1, [r7]
   11da0:	bl	10d44 <fputs_unlocked@plt>
   11da4:	mov	r2, #5
   11da8:	movw	r1, #35984	; 0x8c90
   11dac:	movt	r1, #1
   11db0:	mov	r0, r6
   11db4:	bl	10dc8 <dcgettext@plt>
   11db8:	ldr	r1, [r7]
   11dbc:	bl	10d44 <fputs_unlocked@plt>
   11dc0:	mov	r2, #5
   11dc4:	movw	r1, #36032	; 0x8cc0
   11dc8:	movt	r1, #1
   11dcc:	mov	r0, r6
   11dd0:	bl	10dc8 <dcgettext@plt>
   11dd4:	ldr	r1, [r7]
   11dd8:	bl	10d44 <fputs_unlocked@plt>
   11ddc:	mov	r2, #5
   11de0:	movw	r1, #36088	; 0x8cf8
   11de4:	movt	r1, #1
   11de8:	mov	r0, r6
   11dec:	bl	10dc8 <dcgettext@plt>
   11df0:	ldr	r1, [r7]
   11df4:	bl	10d44 <fputs_unlocked@plt>
   11df8:	ldr	lr, [pc, #560]	; 12030 <close@plt+0x10a0>
   11dfc:	ldr	ip, [lr]
   11e00:	ldr	r4, [lr, #4]
   11e04:	ldrd	r8, [lr, #8]
   11e08:	subs	r1, ip, #0
   11e0c:	str	ip, [sp]
   11e10:	ldrd	r2, [lr, #16]
   11e14:	str	r4, [sp, #4]
   11e18:	ldrd	r4, [lr, #24]
   11e1c:	strd	r8, [sp, #8]
   11e20:	ldrd	r8, [lr, #32]
   11e24:	strd	r2, [sp, #16]
   11e28:	ldrd	r2, [lr, #40]	; 0x28
   11e2c:	strd	r4, [sp, #24]
   11e30:	ldrd	r4, [lr, #48]	; 0x30
   11e34:	strd	r8, [sp, #32]
   11e38:	strd	r2, [sp, #40]	; 0x28
   11e3c:	strd	r4, [sp, #48]	; 0x30
   11e40:	movwne	r5, #35624	; 0x8b28
   11e44:	mov	r4, sp
   11e48:	movtne	r5, #1
   11e4c:	bne	11f44 <close@plt+0xfb4>
   11e50:	ldr	r4, [r4, #4]
   11e54:	movw	r1, #36312	; 0x8dd8
   11e58:	movt	r1, #1
   11e5c:	mov	r2, #5
   11e60:	cmp	r4, #0
   11e64:	beq	11f58 <close@plt+0xfc8>
   11e68:	mov	r0, #0
   11e6c:	bl	10dc8 <dcgettext@plt>
   11e70:	mov	r1, r0
   11e74:	movw	r3, #36336	; 0x8df0
   11e78:	movt	r3, #1
   11e7c:	movw	r2, #36376	; 0x8e18
   11e80:	movt	r2, #1
   11e84:	mov	r0, #1
   11e88:	bl	10f0c <__printf_chk@plt>
   11e8c:	mov	r1, #0
   11e90:	mov	r0, #5
   11e94:	bl	10f48 <setlocale@plt>
   11e98:	cmp	r0, #0
   11e9c:	movweq	r5, #35624	; 0x8b28
   11ea0:	movteq	r5, #1
   11ea4:	beq	11ec8 <close@plt+0xf38>
   11ea8:	movw	r1, #36392	; 0x8e28
   11eac:	movt	r1, #1
   11eb0:	mov	r2, #3
   11eb4:	movw	r5, #35624	; 0x8b28
   11eb8:	movt	r5, #1
   11ebc:	bl	10f78 <strncmp@plt>
   11ec0:	cmp	r0, #0
   11ec4:	bne	12010 <close@plt+0x1080>
   11ec8:	mov	r2, #5
   11ecc:	movw	r1, #36468	; 0x8e74
   11ed0:	movt	r1, #1
   11ed4:	mov	r0, #0
   11ed8:	bl	10dc8 <dcgettext@plt>
   11edc:	mov	r1, r0
   11ee0:	movw	r3, #35624	; 0x8b28
   11ee4:	movt	r3, #1
   11ee8:	movw	r2, #36336	; 0x8df0
   11eec:	movt	r2, #1
   11ef0:	mov	r0, #1
   11ef4:	bl	10f0c <__printf_chk@plt>
   11ef8:	mov	r2, #5
   11efc:	movw	r1, #36496	; 0x8e90
   11f00:	movt	r1, #1
   11f04:	mov	r0, #0
   11f08:	bl	10dc8 <dcgettext@plt>
   11f0c:	movw	r2, #36932	; 0x9044
   11f10:	movt	r2, #1
   11f14:	cmp	r4, r5
   11f18:	movw	r3, #36568	; 0x8ed8
   11f1c:	movt	r3, #1
   11f20:	mov	r1, r0
   11f24:	moveq	r3, r2
   11f28:	mov	r2, r4
   11f2c:	mov	r0, #1
   11f30:	bl	10f0c <__printf_chk@plt>
   11f34:	b	11d50 <close@plt+0xdc0>
   11f38:	ldr	r1, [r4, #8]!
   11f3c:	cmp	r1, #0
   11f40:	beq	11e50 <close@plt+0xec0>
   11f44:	mov	r0, r5
   11f48:	bl	10d5c <strcmp@plt>
   11f4c:	cmp	r0, #0
   11f50:	bne	11f38 <close@plt+0xfa8>
   11f54:	b	11e50 <close@plt+0xec0>
   11f58:	mov	r0, r4
   11f5c:	bl	10dc8 <dcgettext@plt>
   11f60:	mov	r1, r0
   11f64:	movw	r3, #36336	; 0x8df0
   11f68:	movt	r3, #1
   11f6c:	movw	r2, #36376	; 0x8e18
   11f70:	movt	r2, #1
   11f74:	mov	r0, #1
   11f78:	bl	10f0c <__printf_chk@plt>
   11f7c:	mov	r1, r4
   11f80:	mov	r0, #5
   11f84:	bl	10f48 <setlocale@plt>
   11f88:	cmp	r0, #0
   11f8c:	beq	11fa8 <close@plt+0x1018>
   11f90:	movw	r1, #36392	; 0x8e28
   11f94:	movt	r1, #1
   11f98:	mov	r2, #3
   11f9c:	bl	10f78 <strncmp@plt>
   11fa0:	cmp	r0, #0
   11fa4:	bne	12004 <close@plt+0x1074>
   11fa8:	mov	r2, #5
   11fac:	movw	r1, #36468	; 0x8e74
   11fb0:	movt	r1, #1
   11fb4:	mov	r0, #0
   11fb8:	bl	10dc8 <dcgettext@plt>
   11fbc:	mov	r1, r0
   11fc0:	movw	r3, #35624	; 0x8b28
   11fc4:	movt	r3, #1
   11fc8:	movw	r2, #36336	; 0x8df0
   11fcc:	movt	r2, #1
   11fd0:	mov	r0, #1
   11fd4:	bl	10f0c <__printf_chk@plt>
   11fd8:	movw	r1, #36496	; 0x8e90
   11fdc:	movt	r1, #1
   11fe0:	mov	r2, #5
   11fe4:	mov	r0, #0
   11fe8:	bl	10dc8 <dcgettext@plt>
   11fec:	movw	r4, #35624	; 0x8b28
   11ff0:	movt	r4, #1
   11ff4:	movw	r3, #36932	; 0x9044
   11ff8:	movt	r3, #1
   11ffc:	mov	r1, r0
   12000:	b	11f28 <close@plt+0xf98>
   12004:	movw	r5, #35624	; 0x8b28
   12008:	movt	r5, #1
   1200c:	mov	r4, r5
   12010:	mov	r2, #5
   12014:	movw	r1, #36396	; 0x8e2c
   12018:	movt	r1, #1
   1201c:	mov	r0, #0
   12020:	bl	10dc8 <dcgettext@plt>
   12024:	ldr	r1, [r7]
   12028:	bl	10d44 <fputs_unlocked@plt>
   1202c:	b	11ec8 <close@plt+0xf38>
   12030:	andeq	r7, r1, ip, lsl #18
   12034:	ldrb	r3, [r0]
   12038:	cmp	r3, #47	; 0x2f
   1203c:	bne	1204c <close@plt+0x10bc>
   12040:	ldrb	r3, [r0, #1]!
   12044:	cmp	r3, #47	; 0x2f
   12048:	beq	12040 <close@plt+0x10b0>
   1204c:	cmp	r3, #0
   12050:	beq	12080 <close@plt+0x10f0>
   12054:	mov	r2, r0
   12058:	mov	r1, #0
   1205c:	cmp	r3, #47	; 0x2f
   12060:	moveq	r1, #1
   12064:	beq	12074 <close@plt+0x10e4>
   12068:	cmp	r1, #0
   1206c:	movne	r0, r2
   12070:	movne	r1, #0
   12074:	ldrb	r3, [r2, #1]!
   12078:	cmp	r3, #0
   1207c:	bne	1205c <close@plt+0x10cc>
   12080:	bx	lr
   12084:	str	r4, [sp, #-8]!
   12088:	mov	r4, r0
   1208c:	str	lr, [sp, #4]
   12090:	bl	10edc <strlen@plt>
   12094:	cmp	r0, #1
   12098:	bls	120ac <close@plt+0x111c>
   1209c:	sub	r2, r0, #1
   120a0:	ldrb	r1, [r4, r2]
   120a4:	cmp	r1, #47	; 0x2f
   120a8:	beq	120b8 <close@plt+0x1128>
   120ac:	ldr	r4, [sp]
   120b0:	add	sp, sp, #4
   120b4:	pop	{pc}		; (ldr pc, [sp], #4)
   120b8:	cmp	r2, #1
   120bc:	beq	120d0 <close@plt+0x1140>
   120c0:	add	r1, r4, r0
   120c4:	ldrb	r1, [r1, #-2]
   120c8:	cmp	r1, #47	; 0x2f
   120cc:	beq	120e0 <close@plt+0x1150>
   120d0:	ldr	r4, [sp]
   120d4:	add	sp, sp, #4
   120d8:	mov	r0, r2
   120dc:	pop	{pc}		; (ldr pc, [sp], #4)
   120e0:	sub	r3, r0, #3
   120e4:	rsb	r0, r4, #1
   120e8:	add	r3, r4, r3
   120ec:	cmp	r3, r4
   120f0:	add	r2, r0, r3
   120f4:	beq	120d0 <close@plt+0x1140>
   120f8:	ldrb	r1, [r3], #-1
   120fc:	cmp	r1, #47	; 0x2f
   12100:	bne	120d0 <close@plt+0x1140>
   12104:	b	120ec <close@plt+0x115c>
   12108:	cmp	r0, r1
   1210c:	beq	1217c <close@plt+0x11ec>
   12110:	sub	r0, r0, #1
   12114:	sub	r1, r1, #1
   12118:	str	r4, [sp, #-8]!
   1211c:	str	lr, [sp, #4]
   12120:	b	1212c <close@plt+0x119c>
   12124:	cmp	r3, r2
   12128:	bne	12164 <close@plt+0x11d4>
   1212c:	ldrb	r3, [r0, #1]!
   12130:	sub	r2, r3, #65	; 0x41
   12134:	mov	ip, r3
   12138:	cmp	r2, #25
   1213c:	ldrb	r2, [r1, #1]!
   12140:	addls	ip, r3, #32
   12144:	uxtbls	r3, ip
   12148:	sub	r4, r2, #65	; 0x41
   1214c:	mov	lr, r2
   12150:	cmp	r4, #25
   12154:	addls	lr, r2, #32
   12158:	uxtbls	r2, lr
   1215c:	cmp	r3, #0
   12160:	bne	12124 <close@plt+0x1194>
   12164:	uxtb	ip, ip
   12168:	uxtb	r0, lr
   1216c:	ldr	r4, [sp]
   12170:	add	sp, sp, #4
   12174:	sub	r0, ip, r0
   12178:	pop	{pc}		; (ldr pc, [sp], #4)
   1217c:	mov	r0, #0
   12180:	bx	lr
   12184:	movw	r3, #41344	; 0xa180
   12188:	movt	r3, #2
   1218c:	str	r0, [r3]
   12190:	bx	lr
   12194:	movw	r3, #41344	; 0xa180
   12198:	movt	r3, #2
   1219c:	strb	r0, [r3, #4]
   121a0:	bx	lr
   121a4:	movw	r3, #41292	; 0xa14c
   121a8:	movt	r3, #2
   121ac:	strd	r4, [sp, #-16]!
   121b0:	ldr	r0, [r3]
   121b4:	str	r6, [sp, #8]
   121b8:	str	lr, [sp, #12]
   121bc:	sub	sp, sp, #8
   121c0:	bl	174bc <_obstack_memory_used@@Base+0x497c>
   121c4:	cmp	r0, #0
   121c8:	beq	121f4 <close@plt+0x1264>
   121cc:	movw	r4, #41344	; 0xa180
   121d0:	movt	r4, #2
   121d4:	ldrb	r6, [r4, #4]
   121d8:	bl	10ee8 <__errno_location@plt>
   121dc:	mov	r5, r0
   121e0:	cmp	r6, #0
   121e4:	beq	12220 <close@plt+0x1290>
   121e8:	ldr	r3, [r0]
   121ec:	cmp	r3, #32
   121f0:	bne	12220 <close@plt+0x1290>
   121f4:	movw	r3, #41280	; 0xa140
   121f8:	movt	r3, #2
   121fc:	ldr	r0, [r3]
   12200:	bl	174bc <_obstack_memory_used@@Base+0x497c>
   12204:	cmp	r0, #0
   12208:	bne	12268 <close@plt+0x12d8>
   1220c:	add	sp, sp, #8
   12210:	ldrd	r4, [sp]
   12214:	ldr	r6, [sp, #8]
   12218:	add	sp, sp, #12
   1221c:	pop	{pc}		; (ldr pc, [sp], #4)
   12220:	movw	r1, #37512	; 0x9288
   12224:	movt	r1, #1
   12228:	mov	r2, #5
   1222c:	mov	r0, #0
   12230:	bl	10dc8 <dcgettext@plt>
   12234:	mov	r6, r0
   12238:	ldr	r0, [r4]
   1223c:	cmp	r0, #0
   12240:	beq	12278 <close@plt+0x12e8>
   12244:	ldr	r4, [r5]
   12248:	bl	15968 <_obstack_memory_used@@Base+0x2e28>
   1224c:	mov	r3, r0
   12250:	movw	r2, #37524	; 0x9294
   12254:	movt	r2, #1
   12258:	mov	r0, #0
   1225c:	str	r6, [sp]
   12260:	mov	r1, r4
   12264:	bl	10e40 <error@plt>
   12268:	movw	r3, #41192	; 0xa0e8
   1226c:	movt	r3, #2
   12270:	ldr	r0, [r3]
   12274:	bl	10d80 <_exit@plt>
   12278:	mov	r3, r6
   1227c:	movw	r2, #37528	; 0x9298
   12280:	movt	r2, #1
   12284:	ldr	r1, [r5]
   12288:	bl	10e40 <error@plt>
   1228c:	b	12268 <close@plt+0x12d8>
   12290:	strd	r4, [sp, #-12]!
   12294:	mov	r4, r0
   12298:	str	lr, [sp, #8]
   1229c:	sub	sp, sp, #12
   122a0:	bl	10f18 <fileno@plt>
   122a4:	cmp	r0, #0
   122a8:	mov	r0, r4
   122ac:	blt	12330 <close@plt+0x13a0>
   122b0:	bl	10e94 <__freading@plt>
   122b4:	cmp	r0, #0
   122b8:	bne	122fc <close@plt+0x136c>
   122bc:	mov	r0, r4
   122c0:	bl	12344 <close@plt+0x13b4>
   122c4:	cmp	r0, #0
   122c8:	beq	1232c <close@plt+0x139c>
   122cc:	bl	10ee8 <__errno_location@plt>
   122d0:	mov	r5, r0
   122d4:	mov	r0, r4
   122d8:	ldr	r4, [r5]
   122dc:	bl	10f30 <fclose@plt>
   122e0:	cmp	r4, #0
   122e4:	mvnne	r0, #0
   122e8:	strne	r4, [r5]
   122ec:	add	sp, sp, #12
   122f0:	ldrd	r4, [sp]
   122f4:	add	sp, sp, #8
   122f8:	pop	{pc}		; (ldr pc, [sp], #4)
   122fc:	mov	r0, r4
   12300:	bl	10f18 <fileno@plt>
   12304:	mov	r1, #1
   12308:	mov	r2, #0
   1230c:	mov	r3, #0
   12310:	str	r1, [sp]
   12314:	bl	10e10 <lseek64@plt>
   12318:	mvn	r3, #0
   1231c:	mvn	r2, #0
   12320:	cmp	r1, r3
   12324:	cmpeq	r0, r2
   12328:	bne	122bc <close@plt+0x132c>
   1232c:	mov	r0, r4
   12330:	add	sp, sp, #12
   12334:	ldrd	r4, [sp]
   12338:	ldr	lr, [sp, #8]
   1233c:	add	sp, sp, #12
   12340:	b	10f30 <fclose@plt>
   12344:	str	r4, [sp, #-8]!
   12348:	subs	r4, r0, #0
   1234c:	str	lr, [sp, #4]
   12350:	sub	sp, sp, #8
   12354:	beq	12370 <close@plt+0x13e0>
   12358:	bl	10e94 <__freading@plt>
   1235c:	cmp	r0, #0
   12360:	beq	12370 <close@plt+0x13e0>
   12364:	ldr	r3, [r4]
   12368:	tst	r3, #256	; 0x100
   1236c:	bne	12388 <close@plt+0x13f8>
   12370:	mov	r0, r4
   12374:	add	sp, sp, #8
   12378:	ldr	r4, [sp]
   1237c:	ldr	lr, [sp, #4]
   12380:	add	sp, sp, #8
   12384:	b	10d68 <fflush@plt>
   12388:	mov	r1, #1
   1238c:	mov	r2, #0
   12390:	mov	r3, #0
   12394:	mov	r0, r4
   12398:	str	r1, [sp]
   1239c:	bl	12614 <close@plt+0x1684>
   123a0:	b	12370 <close@plt+0x13e0>
   123a4:	strd	r4, [sp, #-12]!
   123a8:	mov	r5, r0
   123ac:	str	lr, [sp, #8]
   123b0:	sub	sp, sp, #12
   123b4:	bl	10ee8 <__errno_location@plt>
   123b8:	mov	r4, r0
   123bc:	mov	r2, #0
   123c0:	ldr	r3, [r4]
   123c4:	mov	r0, r5
   123c8:	str	r2, [r4]
   123cc:	str	r3, [sp]
   123d0:	str	r3, [sp, #4]
   123d4:	bl	10d74 <free@plt>
   123d8:	ldr	r3, [r4]
   123dc:	add	r2, sp, #8
   123e0:	clz	r3, r3
   123e4:	lsr	r3, r3, #5
   123e8:	add	r3, r2, r3, lsl #2
   123ec:	ldr	r3, [r3, #-8]
   123f0:	str	r3, [r4]
   123f4:	add	sp, sp, #12
   123f8:	ldrd	r4, [sp]
   123fc:	add	sp, sp, #8
   12400:	pop	{pc}		; (ldr pc, [sp], #4)
   12404:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12408:	mov	r5, r2
   1240c:	strd	r6, [sp, #8]
   12410:	strd	r8, [sp, #16]
   12414:	mov	r9, r0
   12418:	mov	r0, r2
   1241c:	str	sl, [sp, #24]
   12420:	mov	sl, r1
   12424:	str	lr, [sp, #28]
   12428:	bl	10f18 <fileno@plt>
   1242c:	mov	r4, r0
   12430:	bl	10ee8 <__errno_location@plt>
   12434:	cmp	r4, #1
   12438:	mov	r8, r0
   1243c:	beq	125c4 <close@plt+0x1634>
   12440:	cmp	r4, #2
   12444:	beq	1257c <close@plt+0x15ec>
   12448:	cmp	r4, #0
   1244c:	beq	12520 <close@plt+0x1590>
   12450:	mov	r1, #2
   12454:	mov	r0, r1
   12458:	bl	10dd4 <dup2@plt>
   1245c:	subs	r4, r0, #2
   12460:	movne	r4, #1
   12464:	mov	r1, #1
   12468:	mov	r0, r1
   1246c:	bl	10dd4 <dup2@plt>
   12470:	subs	r7, r0, #1
   12474:	movne	r7, #1
   12478:	mov	r1, #0
   1247c:	mov	r0, r1
   12480:	bl	10dd4 <dup2@plt>
   12484:	subs	r6, r0, #0
   12488:	beq	124bc <close@plt+0x152c>
   1248c:	movw	r0, #37532	; 0x929c
   12490:	movt	r0, #1
   12494:	mov	r1, #0
   12498:	bl	10e58 <open64@plt>
   1249c:	cmp	r0, #0
   124a0:	beq	124b8 <close@plt+0x1528>
   124a4:	bge	125e4 <close@plt+0x1654>
   124a8:	mov	r6, #1
   124ac:	mov	r5, #0
   124b0:	ldr	r9, [r8]
   124b4:	b	12540 <close@plt+0x15b0>
   124b8:	mov	r6, #1
   124bc:	cmp	r7, #0
   124c0:	bne	12584 <close@plt+0x15f4>
   124c4:	cmp	r4, #0
   124c8:	beq	12528 <close@plt+0x1598>
   124cc:	movw	r0, #37532	; 0x929c
   124d0:	movt	r0, #1
   124d4:	mov	r1, #0
   124d8:	bl	10e58 <open64@plt>
   124dc:	cmp	r0, #2
   124e0:	beq	12528 <close@plt+0x1598>
   124e4:	cmp	r0, #0
   124e8:	bge	125d0 <close@plt+0x1640>
   124ec:	ldr	r9, [r8]
   124f0:	mov	r5, #0
   124f4:	mov	r0, #2
   124f8:	bl	10f90 <close@plt>
   124fc:	cmp	r7, #0
   12500:	beq	12550 <close@plt+0x15c0>
   12504:	mov	r0, #1
   12508:	bl	10f90 <close@plt>
   1250c:	cmp	r6, #0
   12510:	beq	12558 <close@plt+0x15c8>
   12514:	mov	r0, #0
   12518:	bl	10f90 <close@plt>
   1251c:	b	12558 <close@plt+0x15c8>
   12520:	mov	r7, r4
   12524:	mov	r6, r4
   12528:	mov	r2, r5
   1252c:	mov	r0, r9
   12530:	mov	r1, sl
   12534:	bl	10eac <freopen64@plt>
   12538:	ldr	r9, [r8]
   1253c:	mov	r5, r0
   12540:	cmp	r4, #0
   12544:	bne	124f4 <close@plt+0x1564>
   12548:	cmp	r7, #0
   1254c:	bne	12504 <close@plt+0x1574>
   12550:	cmp	r6, #0
   12554:	bne	12514 <close@plt+0x1584>
   12558:	cmp	r5, #0
   1255c:	mov	r0, r5
   12560:	ldrd	r4, [sp]
   12564:	streq	r9, [r8]
   12568:	ldrd	r6, [sp, #8]
   1256c:	ldrd	r8, [sp, #16]
   12570:	ldr	sl, [sp, #24]
   12574:	add	sp, sp, #28
   12578:	pop	{pc}		; (ldr pc, [sp], #4)
   1257c:	mov	r4, #0
   12580:	b	12464 <close@plt+0x14d4>
   12584:	movw	r0, #37532	; 0x929c
   12588:	movt	r0, #1
   1258c:	mov	r1, #0
   12590:	bl	10e58 <open64@plt>
   12594:	cmp	r0, #1
   12598:	beq	124c4 <close@plt+0x1534>
   1259c:	cmp	r0, #0
   125a0:	bge	12600 <close@plt+0x1670>
   125a4:	ldr	r9, [r8]
   125a8:	cmp	r4, #0
   125ac:	moveq	r5, r4
   125b0:	beq	12504 <close@plt+0x1574>
   125b4:	mov	r0, #2
   125b8:	mov	r5, #0
   125bc:	bl	10f90 <close@plt>
   125c0:	b	12504 <close@plt+0x1574>
   125c4:	mov	r4, #0
   125c8:	mov	r7, r4
   125cc:	b	12478 <close@plt+0x14e8>
   125d0:	bl	10f90 <close@plt>
   125d4:	mov	r3, #9
   125d8:	mov	r9, r3
   125dc:	str	r3, [r8]
   125e0:	b	124f0 <close@plt+0x1560>
   125e4:	bl	10f90 <close@plt>
   125e8:	mov	r3, #9
   125ec:	mov	r6, #1
   125f0:	mov	r9, r3
   125f4:	mov	r5, #0
   125f8:	str	r3, [r8]
   125fc:	b	12540 <close@plt+0x15b0>
   12600:	bl	10f90 <close@plt>
   12604:	mov	r3, #9
   12608:	mov	r9, r3
   1260c:	str	r3, [r8]
   12610:	b	125a8 <close@plt+0x1618>
   12614:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12618:	mov	r4, r0
   1261c:	ldr	ip, [r0, #4]
   12620:	strd	r6, [sp, #8]
   12624:	str	lr, [sp, #20]
   12628:	ldr	lr, [r0, #8]
   1262c:	str	r8, [sp, #16]
   12630:	sub	sp, sp, #8
   12634:	ldr	r5, [sp, #32]
   12638:	cmp	lr, ip
   1263c:	beq	12664 <close@plt+0x16d4>
   12640:	mov	r0, r4
   12644:	str	r5, [sp, #32]
   12648:	add	sp, sp, #8
   1264c:	ldrd	r4, [sp]
   12650:	ldrd	r6, [sp, #8]
   12654:	ldr	r8, [sp, #16]
   12658:	ldr	lr, [sp, #20]
   1265c:	add	sp, sp, #24
   12660:	b	10f3c <fseeko64@plt>
   12664:	ldr	ip, [r0, #16]
   12668:	ldr	lr, [r0, #20]
   1266c:	cmp	lr, ip
   12670:	bne	12640 <close@plt+0x16b0>
   12674:	ldr	r8, [r0, #36]	; 0x24
   12678:	cmp	r8, #0
   1267c:	bne	12640 <close@plt+0x16b0>
   12680:	mov	r6, r2
   12684:	mov	r7, r3
   12688:	bl	10f18 <fileno@plt>
   1268c:	mov	r2, r6
   12690:	mov	r3, r7
   12694:	str	r5, [sp]
   12698:	bl	10e10 <lseek64@plt>
   1269c:	mvn	r3, #0
   126a0:	mvn	r2, #0
   126a4:	cmp	r1, r3
   126a8:	cmpeq	r0, r2
   126ac:	beq	126dc <close@plt+0x174c>
   126b0:	ldr	r3, [r4]
   126b4:	strd	r0, [r4, #80]	; 0x50
   126b8:	bic	r3, r3, #16
   126bc:	str	r3, [r4]
   126c0:	mov	r0, r8
   126c4:	add	sp, sp, #8
   126c8:	ldrd	r4, [sp]
   126cc:	ldrd	r6, [sp, #8]
   126d0:	ldr	r8, [sp, #16]
   126d4:	add	sp, sp, #20
   126d8:	pop	{pc}		; (ldr pc, [sp], #4)
   126dc:	mvn	r8, #0
   126e0:	b	126c0 <close@plt+0x1730>
   126e4:	movw	r3, #41280	; 0xa140
   126e8:	movt	r3, #2
   126ec:	str	r4, [sp, #-8]!
   126f0:	ldr	r4, [r3]
   126f4:	mov	r2, #5
   126f8:	movw	r1, #37544	; 0x92a8
   126fc:	movt	r1, #1
   12700:	mov	r0, #0
   12704:	str	lr, [sp, #4]
   12708:	bl	10dc8 <dcgettext@plt>
   1270c:	mov	r3, r0
   12710:	movw	r2, #37856	; 0x93e0
   12714:	movt	r2, #1
   12718:	mov	r1, #1
   1271c:	mov	r0, r4
   12720:	bl	10f24 <__fprintf_chk@plt>
   12724:	movw	r3, #41192	; 0xa0e8
   12728:	movt	r3, #2
   1272c:	ldr	r0, [r3]
   12730:	bl	10ed0 <exit@plt>

00012734 <_obstack_begin@@Base>:
   12734:	strd	r4, [sp, #-16]!
   12738:	subs	r5, r2, #0
   1273c:	mov	r4, r0
   12740:	ldrb	r2, [r0, #40]	; 0x28
   12744:	moveq	r5, #8
   12748:	str	r6, [sp, #8]
   1274c:	subne	r6, r5, #1
   12750:	moveq	r6, #7
   12754:	ldr	r0, [sp, #16]
   12758:	cmp	r1, #0
   1275c:	str	lr, [sp, #12]
   12760:	str	r6, [r4, #24]
   12764:	bfc	r2, #0, #1
   12768:	str	r3, [r4, #28]
   1276c:	str	r0, [r4, #32]
   12770:	movw	r0, #4072	; 0xfe8
   12774:	strb	r2, [r4, #40]	; 0x28
   12778:	moveq	r1, r0
   1277c:	ldrb	r2, [r4, #40]	; 0x28
   12780:	str	r1, [r4]
   12784:	tst	r2, #1
   12788:	beq	127f4 <_obstack_begin@@Base+0xc0>
   1278c:	ldr	r0, [r4, #36]	; 0x24
   12790:	blx	r3
   12794:	mov	r3, r0
   12798:	cmp	r3, #0
   1279c:	str	r3, [r4, #4]
   127a0:	beq	12804 <_obstack_begin@@Base+0xd0>
   127a4:	ldrb	lr, [r4, #40]	; 0x28
   127a8:	add	r1, r3, #8
   127ac:	rsb	r2, r5, #0
   127b0:	add	r1, r1, r6
   127b4:	mov	r5, #0
   127b8:	ldr	ip, [r4]
   127bc:	and	r2, r2, r1
   127c0:	mov	r0, #1
   127c4:	ldr	r6, [sp, #8]
   127c8:	bic	lr, lr, #6
   127cc:	str	r2, [r4, #8]
   127d0:	str	r2, [r4, #12]
   127d4:	add	r2, r3, ip
   127d8:	str	r2, [r3]
   127dc:	str	r2, [r4, #16]
   127e0:	str	r5, [r3, #4]
   127e4:	strb	lr, [r4, #40]	; 0x28
   127e8:	ldrd	r4, [sp]
   127ec:	add	sp, sp, #12
   127f0:	pop	{pc}		; (ldr pc, [sp], #4)
   127f4:	mov	r0, r1
   127f8:	blx	r3
   127fc:	mov	r3, r0
   12800:	b	12798 <_obstack_begin@@Base+0x64>
   12804:	movw	r3, #41196	; 0xa0ec
   12808:	movt	r3, #2
   1280c:	ldr	r3, [r3]
   12810:	blx	r3

00012814 <_obstack_begin_1@@Base>:
   12814:	strd	r4, [sp, #-16]!
   12818:	subs	r5, r2, #0
   1281c:	mov	r4, r0
   12820:	ldrb	r2, [r0, #40]	; 0x28
   12824:	moveq	r5, #8
   12828:	str	r6, [sp, #8]
   1282c:	subne	r6, r5, #1
   12830:	moveq	r6, #7
   12834:	ldr	ip, [sp, #16]
   12838:	cmp	r1, #0
   1283c:	str	lr, [sp, #12]
   12840:	str	r3, [r0, #28]
   12844:	orr	r2, r2, #1
   12848:	str	ip, [r0, #32]
   1284c:	movw	ip, #4072	; 0xfe8
   12850:	strb	r2, [r0, #40]	; 0x28
   12854:	moveq	r1, ip
   12858:	ldrb	r2, [r4, #40]	; 0x28
   1285c:	str	r1, [r4]
   12860:	ldr	r0, [sp, #20]
   12864:	str	r6, [r4, #24]
   12868:	tst	r2, #1
   1286c:	str	r0, [r4, #36]	; 0x24
   12870:	beq	128d8 <_obstack_begin_1@@Base+0xc4>
   12874:	blx	r3
   12878:	mov	r3, r0
   1287c:	cmp	r3, #0
   12880:	str	r3, [r4, #4]
   12884:	beq	128e8 <_obstack_begin_1@@Base+0xd4>
   12888:	ldrb	lr, [r4, #40]	; 0x28
   1288c:	add	r1, r3, #8
   12890:	rsb	r2, r5, #0
   12894:	add	r1, r1, r6
   12898:	mov	r5, #0
   1289c:	ldr	ip, [r4]
   128a0:	and	r2, r2, r1
   128a4:	mov	r0, #1
   128a8:	ldr	r6, [sp, #8]
   128ac:	bic	lr, lr, #6
   128b0:	str	r2, [r4, #8]
   128b4:	str	r2, [r4, #12]
   128b8:	add	r2, r3, ip
   128bc:	str	r2, [r3]
   128c0:	str	r2, [r4, #16]
   128c4:	str	r5, [r3, #4]
   128c8:	strb	lr, [r4, #40]	; 0x28
   128cc:	ldrd	r4, [sp]
   128d0:	add	sp, sp, #12
   128d4:	pop	{pc}		; (ldr pc, [sp], #4)
   128d8:	mov	r0, r1
   128dc:	blx	r3
   128e0:	mov	r3, r0
   128e4:	b	1287c <_obstack_begin_1@@Base+0x68>
   128e8:	movw	r3, #41196	; 0xa0ec
   128ec:	movt	r3, #2
   128f0:	ldr	r3, [r3]
   128f4:	blx	r3

000128f8 <_obstack_newchunk@@Base>:
   128f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   128fc:	mov	r4, r0
   12900:	ldr	ip, [r0]
   12904:	ldr	r2, [r0, #8]
   12908:	ldr	r3, [r0, #24]
   1290c:	strd	r6, [sp, #8]
   12910:	ldr	r7, [r0, #4]
   12914:	str	r8, [sp, #16]
   12918:	ldr	r6, [r0, #12]
   1291c:	str	lr, [sp, #20]
   12920:	sub	r6, r6, r2
   12924:	adds	r1, r6, r1
   12928:	movcs	r0, #1
   1292c:	movcc	r0, #0
   12930:	adds	r3, r3, r1
   12934:	eor	r0, r0, #1
   12938:	add	r5, r3, r6, lsr #3
   1293c:	movcs	r2, #1
   12940:	movcc	r2, #0
   12944:	cmp	r3, ip
   12948:	eor	r2, r2, #1
   1294c:	add	r5, r5, #100	; 0x64
   12950:	movcc	r3, ip
   12954:	cmp	r3, r5
   12958:	movcs	r5, r3
   1295c:	tst	r0, r2
   12960:	beq	12a54 <_obstack_newchunk@@Base+0x15c>
   12964:	ldrb	r3, [r4, #40]	; 0x28
   12968:	ldr	r2, [r4, #28]
   1296c:	tst	r3, #1
   12970:	bne	12a10 <_obstack_newchunk@@Base+0x118>
   12974:	mov	r0, r5
   12978:	blx	r2
   1297c:	mov	r8, r0
   12980:	cmp	r8, #0
   12984:	beq	12a54 <_obstack_newchunk@@Base+0x15c>
   12988:	add	r3, r8, r5
   1298c:	mov	r5, r8
   12990:	str	r8, [r4, #4]
   12994:	ldr	r0, [r4, #24]
   12998:	mov	r2, r6
   1299c:	ldr	r1, [r4, #8]
   129a0:	str	r7, [r8, #4]
   129a4:	str	r3, [r4, #16]
   129a8:	str	r3, [r5], #8
   129ac:	add	r5, r5, r0
   129b0:	bic	r5, r5, r0
   129b4:	mov	r0, r5
   129b8:	bl	10d8c <memcpy@plt>
   129bc:	ldrb	r2, [r4, #40]	; 0x28
   129c0:	tst	r2, #2
   129c4:	bne	129e4 <_obstack_newchunk@@Base+0xec>
   129c8:	ldr	r0, [r4, #8]
   129cc:	add	r3, r7, #8
   129d0:	ldr	r1, [r4, #24]
   129d4:	add	r3, r3, r1
   129d8:	bic	r3, r3, r1
   129dc:	cmp	r0, r3
   129e0:	beq	12a24 <_obstack_newchunk@@Base+0x12c>
   129e4:	ldrb	r3, [r4, #40]	; 0x28
   129e8:	add	r6, r5, r6
   129ec:	ldr	r8, [sp, #16]
   129f0:	str	r5, [r4, #8]
   129f4:	str	r6, [r4, #12]
   129f8:	bfc	r3, #1, #1
   129fc:	ldrd	r6, [sp, #8]
   12a00:	strb	r3, [r4, #40]	; 0x28
   12a04:	ldrd	r4, [sp]
   12a08:	add	sp, sp, #20
   12a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a10:	mov	r1, r5
   12a14:	ldr	r0, [r4, #36]	; 0x24
   12a18:	blx	r2
   12a1c:	mov	r8, r0
   12a20:	b	12980 <_obstack_newchunk@@Base+0x88>
   12a24:	ldr	r3, [r7, #4]
   12a28:	tst	r2, #1
   12a2c:	ldr	r2, [r4, #32]
   12a30:	str	r3, [r8, #4]
   12a34:	beq	12a48 <_obstack_newchunk@@Base+0x150>
   12a38:	mov	r1, r7
   12a3c:	ldr	r0, [r4, #36]	; 0x24
   12a40:	blx	r2
   12a44:	b	129e4 <_obstack_newchunk@@Base+0xec>
   12a48:	mov	r0, r7
   12a4c:	blx	r2
   12a50:	b	129e4 <_obstack_newchunk@@Base+0xec>
   12a54:	movw	r3, #41196	; 0xa0ec
   12a58:	movt	r3, #2
   12a5c:	ldr	r3, [r3]
   12a60:	blx	r3

00012a64 <_obstack_allocated_p@@Base>:
   12a64:	ldr	r0, [r0, #4]
   12a68:	cmp	r0, #0
   12a6c:	beq	12a9c <_obstack_allocated_p@@Base+0x38>
   12a70:	cmp	r1, r0
   12a74:	bls	12a84 <_obstack_allocated_p@@Base+0x20>
   12a78:	ldr	r3, [r0]
   12a7c:	cmp	r3, r1
   12a80:	bcs	12a94 <_obstack_allocated_p@@Base+0x30>
   12a84:	ldr	r0, [r0, #4]
   12a88:	cmp	r0, #0
   12a8c:	bne	12a70 <_obstack_allocated_p@@Base+0xc>
   12a90:	bx	lr
   12a94:	mov	r0, #1
   12a98:	bx	lr
   12a9c:	bx	lr

00012aa0 <_obstack_free@@Base>:
   12aa0:	strd	r4, [sp, #-16]!
   12aa4:	str	r6, [sp, #8]
   12aa8:	mov	r6, r1
   12aac:	ldr	r1, [r0, #4]
   12ab0:	str	lr, [sp, #12]
   12ab4:	cmp	r1, #0
   12ab8:	movne	r4, r0
   12abc:	bne	12ae4 <_obstack_free@@Base+0x44>
   12ac0:	b	12b34 <_obstack_free@@Base+0x94>
   12ac4:	ldr	r0, [r4, #36]	; 0x24
   12ac8:	blx	r3
   12acc:	ldrb	r3, [r4, #40]	; 0x28
   12ad0:	cmp	r5, #0
   12ad4:	orr	r3, r3, #2
   12ad8:	strb	r3, [r4, #40]	; 0x28
   12adc:	beq	12b34 <_obstack_free@@Base+0x94>
   12ae0:	mov	r1, r5
   12ae4:	cmp	r1, r6
   12ae8:	bcs	12af8 <_obstack_free@@Base+0x58>
   12aec:	ldr	r3, [r1]
   12af0:	cmp	r3, r6
   12af4:	bcs	12b18 <_obstack_free@@Base+0x78>
   12af8:	ldrb	r2, [r4, #40]	; 0x28
   12afc:	ldr	r5, [r1, #4]
   12b00:	ldr	r3, [r4, #32]
   12b04:	tst	r2, #1
   12b08:	bne	12ac4 <_obstack_free@@Base+0x24>
   12b0c:	mov	r0, r1
   12b10:	blx	r3
   12b14:	b	12acc <_obstack_free@@Base+0x2c>
   12b18:	stmib	r4, {r1, r6}
   12b1c:	str	r6, [r4, #12]
   12b20:	str	r3, [r4, #16]
   12b24:	ldrd	r4, [sp]
   12b28:	ldr	r6, [sp, #8]
   12b2c:	add	sp, sp, #12
   12b30:	pop	{pc}		; (ldr pc, [sp], #4)
   12b34:	cmp	r6, #0
   12b38:	beq	12b24 <_obstack_free@@Base+0x84>
   12b3c:	bl	10f84 <abort@plt>

00012b40 <_obstack_memory_used@@Base>:
   12b40:	ldr	r3, [r0, #4]
   12b44:	cmp	r3, #0
   12b48:	beq	12b6c <_obstack_memory_used@@Base+0x2c>
   12b4c:	mov	r0, #0
   12b50:	ldr	r2, [r3]
   12b54:	sub	r2, r2, r3
   12b58:	ldr	r3, [r3, #4]
   12b5c:	add	r0, r0, r2
   12b60:	cmp	r3, #0
   12b64:	bne	12b50 <_obstack_memory_used@@Base+0x10>
   12b68:	bx	lr
   12b6c:	mov	r0, r3
   12b70:	bx	lr
   12b74:	strd	r4, [sp, #-16]!
   12b78:	subs	r4, r0, #0
   12b7c:	str	r6, [sp, #8]
   12b80:	str	lr, [sp, #12]
   12b84:	beq	12c1c <_obstack_memory_used@@Base+0xdc>
   12b88:	mov	r1, #47	; 0x2f
   12b8c:	bl	10f54 <strrchr@plt>
   12b90:	subs	r5, r0, #0
   12b94:	beq	12bf4 <_obstack_memory_used@@Base+0xb4>
   12b98:	add	r6, r5, #1
   12b9c:	sub	r3, r6, r4
   12ba0:	cmp	r3, #6
   12ba4:	ble	12bf4 <_obstack_memory_used@@Base+0xb4>
   12ba8:	movw	r1, #37620	; 0x92f4
   12bac:	movt	r1, #1
   12bb0:	mov	r2, #7
   12bb4:	sub	r0, r5, #6
   12bb8:	bl	10f78 <strncmp@plt>
   12bbc:	cmp	r0, #0
   12bc0:	bne	12bf4 <_obstack_memory_used@@Base+0xb4>
   12bc4:	movw	r1, #37628	; 0x92fc
   12bc8:	movt	r1, #1
   12bcc:	mov	r2, #3
   12bd0:	mov	r0, r6
   12bd4:	bl	10f78 <strncmp@plt>
   12bd8:	cmp	r0, #0
   12bdc:	movne	r4, r6
   12be0:	bne	12bf4 <_obstack_memory_used@@Base+0xb4>
   12be4:	add	r4, r5, #4
   12be8:	movw	r3, #41264	; 0xa130
   12bec:	movt	r3, #2
   12bf0:	str	r4, [r3]
   12bf4:	movw	r2, #41352	; 0xa188
   12bf8:	movt	r2, #2
   12bfc:	ldr	r6, [sp, #8]
   12c00:	movw	r3, #41268	; 0xa134
   12c04:	movt	r3, #2
   12c08:	str	r4, [r2]
   12c0c:	str	r4, [r3]
   12c10:	ldrd	r4, [sp]
   12c14:	add	sp, sp, #12
   12c18:	pop	{pc}		; (ldr pc, [sp], #4)
   12c1c:	movw	r3, #41280	; 0xa140
   12c20:	movt	r3, #2
   12c24:	movw	r0, #37564	; 0x92bc
   12c28:	movt	r0, #1
   12c2c:	ldr	r3, [r3]
   12c30:	mov	r2, #55	; 0x37
   12c34:	mov	r1, #1
   12c38:	bl	10e04 <fwrite@plt>
   12c3c:	bl	10f84 <abort@plt>
   12c40:	mov	r2, #5
   12c44:	strd	r4, [sp, #-16]!
   12c48:	mov	r5, r0
   12c4c:	str	r6, [sp, #8]
   12c50:	mov	r6, r1
   12c54:	mov	r1, r0
   12c58:	mov	r0, #0
   12c5c:	str	lr, [sp, #12]
   12c60:	bl	10dc8 <dcgettext@plt>
   12c64:	cmp	r5, r0
   12c68:	mov	r4, r0
   12c6c:	beq	12c84 <_obstack_memory_used@@Base+0x144>
   12c70:	mov	r0, r4
   12c74:	ldrd	r4, [sp]
   12c78:	ldr	r6, [sp, #8]
   12c7c:	add	sp, sp, #12
   12c80:	pop	{pc}		; (ldr pc, [sp], #4)
   12c84:	bl	17544 <_obstack_memory_used@@Base+0x4a04>
   12c88:	ldrb	r3, [r0]
   12c8c:	bic	r3, r3, #32
   12c90:	cmp	r3, #85	; 0x55
   12c94:	bne	12cfc <_obstack_memory_used@@Base+0x1bc>
   12c98:	ldrb	r3, [r0, #1]
   12c9c:	bic	r3, r3, #32
   12ca0:	cmp	r3, #84	; 0x54
   12ca4:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12ca8:	ldrb	r3, [r0, #2]
   12cac:	bic	r3, r3, #32
   12cb0:	cmp	r3, #70	; 0x46
   12cb4:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12cb8:	ldrb	r3, [r0, #3]
   12cbc:	cmp	r3, #45	; 0x2d
   12cc0:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12cc4:	ldrb	r3, [r0, #4]
   12cc8:	cmp	r3, #56	; 0x38
   12ccc:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12cd0:	ldrb	r3, [r0, #5]
   12cd4:	cmp	r3, #0
   12cd8:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12cdc:	ldrb	r2, [r4]
   12ce0:	movw	r3, #37720	; 0x9358
   12ce4:	movt	r3, #1
   12ce8:	movw	r4, #37732	; 0x9364
   12cec:	movt	r4, #1
   12cf0:	cmp	r2, #96	; 0x60
   12cf4:	movne	r4, r3
   12cf8:	b	12c70 <_obstack_memory_used@@Base+0x130>
   12cfc:	cmp	r3, #71	; 0x47
   12d00:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d04:	ldrb	r3, [r0, #1]
   12d08:	bic	r3, r3, #32
   12d0c:	cmp	r3, #66	; 0x42
   12d10:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d14:	ldrb	r3, [r0, #2]
   12d18:	cmp	r3, #49	; 0x31
   12d1c:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d20:	ldrb	r3, [r0, #3]
   12d24:	cmp	r3, #56	; 0x38
   12d28:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d2c:	ldrb	r3, [r0, #4]
   12d30:	cmp	r3, #48	; 0x30
   12d34:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d38:	ldrb	r3, [r0, #5]
   12d3c:	cmp	r3, #51	; 0x33
   12d40:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d44:	ldrb	r3, [r0, #6]
   12d48:	cmp	r3, #48	; 0x30
   12d4c:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d50:	ldrb	r3, [r0, #7]
   12d54:	cmp	r3, #0
   12d58:	bne	12d7c <_obstack_memory_used@@Base+0x23c>
   12d5c:	ldrb	r2, [r4]
   12d60:	movw	r3, #37724	; 0x935c
   12d64:	movt	r3, #1
   12d68:	movw	r4, #37728	; 0x9360
   12d6c:	movt	r4, #1
   12d70:	cmp	r2, #96	; 0x60
   12d74:	movne	r4, r3
   12d78:	b	12c70 <_obstack_memory_used@@Base+0x130>
   12d7c:	movw	r3, #37736	; 0x9368
   12d80:	movt	r3, #1
   12d84:	cmp	r6, #9
   12d88:	movw	r4, #37716	; 0x9354
   12d8c:	movt	r4, #1
   12d90:	movne	r4, r3
   12d94:	b	12c70 <_obstack_memory_used@@Base+0x130>
   12d98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12d9c:	strd	r6, [sp, #8]
   12da0:	strd	r8, [sp, #16]
   12da4:	mov	r8, r3
   12da8:	strd	sl, [sp, #24]
   12dac:	mov	fp, r0
   12db0:	mov	sl, r1
   12db4:	str	lr, [sp, #32]
   12db8:	sub	sp, sp, #140	; 0x8c
   12dbc:	ldr	r3, [sp, #180]	; 0xb4
   12dc0:	str	r2, [sp, #28]
   12dc4:	and	r4, r3, #2
   12dc8:	ubfx	r3, r3, #1, #1
   12dcc:	str	r3, [sp, #44]	; 0x2c
   12dd0:	bl	10e1c <__ctype_get_mb_cur_max@plt>
   12dd4:	ldr	r3, [sp, #176]	; 0xb0
   12dd8:	str	r0, [sp, #76]	; 0x4c
   12ddc:	cmp	r3, #10
   12de0:	ldrls	pc, [pc, r3, lsl #2]
   12de4:	b	14780 <_obstack_memory_used@@Base+0x1c40>
   12de8:	andeq	r3, r1, r8, ror #4
   12dec:	andeq	r3, r1, r4, lsl #7
   12df0:	andeq	r3, r1, r0, lsl #18
   12df4:	strdeq	r3, [r1], -r0
   12df8:	andeq	r3, r1, r0, ror r1
   12dfc:	andeq	r3, r1, ip, ror #3
   12e00:	andeq	r3, r1, r4, asr #5
   12e04:	andeq	r3, r1, ip, lsr #6
   12e08:	andeq	r2, r1, r4, lsl lr
   12e0c:	andeq	r2, r1, r4, lsl lr
   12e10:	andeq	r2, r1, r4, lsl lr
   12e14:	ldr	r3, [sp, #176]	; 0xb0
   12e18:	cmp	r3, #10
   12e1c:	beq	12e48 <_obstack_memory_used@@Base+0x308>
   12e20:	mov	r1, r3
   12e24:	movw	r0, #37740	; 0x936c
   12e28:	movt	r0, #1
   12e2c:	bl	12c40 <_obstack_memory_used@@Base+0x100>
   12e30:	str	r0, [sp, #188]	; 0xbc
   12e34:	movw	r0, #37736	; 0x9368
   12e38:	movt	r0, #1
   12e3c:	ldr	r1, [sp, #176]	; 0xb0
   12e40:	bl	12c40 <_obstack_memory_used@@Base+0x100>
   12e44:	str	r0, [sp, #192]	; 0xc0
   12e48:	cmp	r4, #0
   12e4c:	movne	r4, #0
   12e50:	beq	1450c <_obstack_memory_used@@Base+0x19cc>
   12e54:	mov	r5, #0
   12e58:	ldr	r0, [sp, #192]	; 0xc0
   12e5c:	mov	r9, r5
   12e60:	str	r5, [sp, #64]	; 0x40
   12e64:	bl	10edc <strlen@plt>
   12e68:	mov	r3, #1
   12e6c:	ldr	r2, [sp, #44]	; 0x2c
   12e70:	cmp	r0, r5
   12e74:	moveq	r2, r5
   12e78:	str	r3, [sp, #32]
   12e7c:	str	r3, [sp, #48]	; 0x30
   12e80:	str	r5, [sp, #52]	; 0x34
   12e84:	str	r3, [sp, #60]	; 0x3c
   12e88:	ldr	r3, [sp, #180]	; 0xb4
   12e8c:	str	r0, [sp, #56]	; 0x38
   12e90:	str	r5, [sp, #68]	; 0x44
   12e94:	str	r5, [sp, #80]	; 0x50
   12e98:	str	r5, [sp, #84]	; 0x54
   12e9c:	and	r3, r3, #1
   12ea0:	str	r2, [sp, #88]	; 0x58
   12ea4:	str	r3, [sp, #92]	; 0x5c
   12ea8:	ldr	r3, [sp, #180]	; 0xb4
   12eac:	and	r3, r3, #4
   12eb0:	str	r3, [sp, #96]	; 0x60
   12eb4:	ldr	r3, [sp, #192]	; 0xc0
   12eb8:	str	r3, [sp, #72]	; 0x48
   12ebc:	mov	r3, fp
   12ec0:	mov	r7, #0
   12ec4:	mov	fp, r9
   12ec8:	mov	r9, r3
   12ecc:	cmn	r8, #1
   12ed0:	beq	134d4 <_obstack_memory_used@@Base+0x994>
   12ed4:	subs	r6, r8, r7
   12ed8:	movne	r6, #1
   12edc:	cmp	r6, #0
   12ee0:	beq	134ec <_obstack_memory_used@@Base+0x9ac>
   12ee4:	ldr	r0, [sp, #28]
   12ee8:	ldr	r3, [sp, #48]	; 0x30
   12eec:	cmp	r3, #0
   12ef0:	add	r3, r0, r7
   12ef4:	str	r3, [sp, #36]	; 0x24
   12ef8:	beq	13978 <_obstack_memory_used@@Base+0xe38>
   12efc:	ldr	r2, [sp, #56]	; 0x38
   12f00:	cmp	r2, #0
   12f04:	beq	13e78 <_obstack_memory_used@@Base+0x1338>
   12f08:	cmp	r2, #1
   12f0c:	mov	r3, r2
   12f10:	movls	r3, #0
   12f14:	movhi	r3, #1
   12f18:	cmn	r8, #1
   12f1c:	add	r5, r7, r2
   12f20:	movne	r3, #0
   12f24:	cmp	r3, #0
   12f28:	beq	12f34 <_obstack_memory_used@@Base+0x3f4>
   12f2c:	bl	10edc <strlen@plt>
   12f30:	mov	r8, r0
   12f34:	cmp	r5, r8
   12f38:	bhi	13e78 <_obstack_memory_used@@Base+0x1338>
   12f3c:	ldr	r0, [sp, #36]	; 0x24
   12f40:	ldr	r2, [sp, #56]	; 0x38
   12f44:	ldr	r1, [sp, #72]	; 0x48
   12f48:	bl	10db0 <memcmp@plt>
   12f4c:	cmp	r0, #0
   12f50:	bne	13e78 <_obstack_memory_used@@Base+0x1338>
   12f54:	ldr	r3, [sp, #44]	; 0x2c
   12f58:	cmp	r3, #0
   12f5c:	bne	14624 <_obstack_memory_used@@Base+0x1ae4>
   12f60:	ldr	r3, [sp, #36]	; 0x24
   12f64:	ldrb	r5, [r3]
   12f68:	cmp	r5, #126	; 0x7e
   12f6c:	ldrls	pc, [pc, r5, lsl #2]
   12f70:	b	1440c <_obstack_memory_used@@Base+0x18cc>
   12f74:	andeq	r3, r1, r8, asr #12
   12f78:	andeq	r4, r1, ip, lsl #8
   12f7c:	andeq	r4, r1, ip, lsl #8
   12f80:	andeq	r4, r1, ip, lsl #8
   12f84:	andeq	r4, r1, ip, lsl #8
   12f88:	andeq	r4, r1, ip, lsl #8
   12f8c:	andeq	r4, r1, ip, lsl #8
   12f90:	andeq	r3, r1, r0, lsr #11
   12f94:	muleq	r1, r8, r5
   12f98:	andeq	r3, r1, r8, lsr #11
   12f9c:	andeq	r3, r1, ip, lsr #14
   12fa0:	andeq	r3, r1, ip, lsl r7
   12fa4:	andeq	r3, r1, r4, asr #8
   12fa8:	strdeq	r3, [r1], -r8
   12fac:	andeq	r4, r1, ip, lsl #8
   12fb0:	andeq	r4, r1, ip, lsl #8
   12fb4:	andeq	r4, r1, ip, lsl #8
   12fb8:	andeq	r4, r1, ip, lsl #8
   12fbc:	andeq	r4, r1, ip, lsl #8
   12fc0:	andeq	r4, r1, ip, lsl #8
   12fc4:	andeq	r4, r1, ip, lsl #8
   12fc8:	andeq	r4, r1, ip, lsl #8
   12fcc:	andeq	r4, r1, ip, lsl #8
   12fd0:	andeq	r4, r1, ip, lsl #8
   12fd4:	andeq	r4, r1, ip, lsl #8
   12fd8:	andeq	r4, r1, ip, lsl #8
   12fdc:	andeq	r4, r1, ip, lsl #8
   12fe0:	andeq	r4, r1, ip, lsl #8
   12fe4:	andeq	r4, r1, ip, lsl #8
   12fe8:	andeq	r4, r1, ip, lsl #8
   12fec:	andeq	r4, r1, ip, lsl #8
   12ff0:	andeq	r4, r1, ip, lsl #8
   12ff4:	andeq	r3, r1, r4, lsr #15
   12ff8:	muleq	r1, r8, r7
   12ffc:	muleq	r1, r8, r7
   13000:	andeq	r3, r1, ip, lsl #15
   13004:	muleq	r1, r8, r7
   13008:	andeq	r3, r1, r0, ror r8
   1300c:	muleq	r1, r8, r7
   13010:	andeq	r3, r1, r0, ror #17
   13014:	muleq	r1, r8, r7
   13018:	muleq	r1, r8, r7
   1301c:	muleq	r1, r8, r7
   13020:	andeq	r3, r1, r0, ror r8
   13024:	andeq	r3, r1, r0, ror r8
   13028:	andeq	r3, r1, r0, ror r8
   1302c:	andeq	r3, r1, r0, ror r8
   13030:	andeq	r3, r1, r0, ror r8
   13034:	andeq	r3, r1, r0, ror r8
   13038:	andeq	r3, r1, r0, ror r8
   1303c:	andeq	r3, r1, r0, ror r8
   13040:	andeq	r3, r1, r0, ror r8
   13044:	andeq	r3, r1, r0, ror r8
   13048:	andeq	r3, r1, r0, ror r8
   1304c:	andeq	r3, r1, r0, ror r8
   13050:	andeq	r3, r1, r0, ror r8
   13054:	andeq	r3, r1, r0, ror r8
   13058:	andeq	r3, r1, r0, ror r8
   1305c:	andeq	r3, r1, r0, ror r8
   13060:	muleq	r1, r8, r7
   13064:	muleq	r1, r8, r7
   13068:	muleq	r1, r8, r7
   1306c:	muleq	r1, r8, r7
   13070:	muleq	r1, r0, r8
   13074:	andeq	r4, r1, ip, lsl #8
   13078:	andeq	r3, r1, r0, ror r8
   1307c:	andeq	r3, r1, r0, ror r8
   13080:	andeq	r3, r1, r0, ror r8
   13084:	andeq	r3, r1, r0, ror r8
   13088:	andeq	r3, r1, r0, ror r8
   1308c:	andeq	r3, r1, r0, ror r8
   13090:	andeq	r3, r1, r0, ror r8
   13094:	andeq	r3, r1, r0, ror r8
   13098:	andeq	r3, r1, r0, ror r8
   1309c:	andeq	r3, r1, r0, ror r8
   130a0:	andeq	r3, r1, r0, ror r8
   130a4:	andeq	r3, r1, r0, ror r8
   130a8:	andeq	r3, r1, r0, ror r8
   130ac:	andeq	r3, r1, r0, ror r8
   130b0:	andeq	r3, r1, r0, ror r8
   130b4:	andeq	r3, r1, r0, ror r8
   130b8:	andeq	r3, r1, r0, ror r8
   130bc:	andeq	r3, r1, r0, ror r8
   130c0:	andeq	r3, r1, r0, ror r8
   130c4:	andeq	r3, r1, r0, ror r8
   130c8:	andeq	r3, r1, r0, ror r8
   130cc:	andeq	r3, r1, r0, ror r8
   130d0:	andeq	r3, r1, r0, ror r8
   130d4:	andeq	r3, r1, r0, ror r8
   130d8:	andeq	r3, r1, r0, ror r8
   130dc:	andeq	r3, r1, r0, ror r8
   130e0:	muleq	r1, r8, r7
   130e4:	andeq	r3, r1, r4, lsr r8
   130e8:	andeq	r3, r1, r0, ror r8
   130ec:	muleq	r1, r8, r7
   130f0:	andeq	r3, r1, r0, ror r8
   130f4:	muleq	r1, r8, r7
   130f8:	andeq	r3, r1, r0, ror r8
   130fc:	andeq	r3, r1, r0, ror r8
   13100:	andeq	r3, r1, r0, ror r8
   13104:	andeq	r3, r1, r0, ror r8
   13108:	andeq	r3, r1, r0, ror r8
   1310c:	andeq	r3, r1, r0, ror r8
   13110:	andeq	r3, r1, r0, ror r8
   13114:	andeq	r3, r1, r0, ror r8
   13118:	andeq	r3, r1, r0, ror r8
   1311c:	andeq	r3, r1, r0, ror r8
   13120:	andeq	r3, r1, r0, ror r8
   13124:	andeq	r3, r1, r0, ror r8
   13128:	andeq	r3, r1, r0, ror r8
   1312c:	andeq	r3, r1, r0, ror r8
   13130:	andeq	r3, r1, r0, ror r8
   13134:	andeq	r3, r1, r0, ror r8
   13138:	andeq	r3, r1, r0, ror r8
   1313c:	andeq	r3, r1, r0, ror r8
   13140:	andeq	r3, r1, r0, ror r8
   13144:	andeq	r3, r1, r0, ror r8
   13148:	andeq	r3, r1, r0, ror r8
   1314c:	andeq	r3, r1, r0, ror r8
   13150:	andeq	r3, r1, r0, ror r8
   13154:	andeq	r3, r1, r0, ror r8
   13158:	andeq	r3, r1, r0, ror r8
   1315c:	andeq	r3, r1, r0, ror r8
   13160:	andeq	r3, r1, r0, asr #14
   13164:	muleq	r1, r8, r7
   13168:	andeq	r3, r1, r0, asr #14
   1316c:	andeq	r3, r1, ip, lsl #15
   13170:	ldr	r3, [sp, #180]	; 0xb4
   13174:	cmp	r4, #0
   13178:	and	r3, r3, #1
   1317c:	str	r3, [sp, #92]	; 0x5c
   13180:	ldr	r3, [sp, #180]	; 0xb4
   13184:	and	r3, r3, #4
   13188:	str	r3, [sp, #96]	; 0x60
   1318c:	moveq	r3, #1
   13190:	streq	r3, [sp, #60]	; 0x3c
   13194:	beq	13924 <_obstack_memory_used@@Base+0xde4>
   13198:	mov	r3, #0
   1319c:	mov	r2, #1
   131a0:	mov	r4, r3
   131a4:	mov	r9, r3
   131a8:	str	r2, [sp, #32]
   131ac:	str	r2, [sp, #44]	; 0x2c
   131b0:	str	r3, [sp, #48]	; 0x30
   131b4:	str	r2, [sp, #52]	; 0x34
   131b8:	str	r2, [sp, #56]	; 0x38
   131bc:	str	r3, [sp, #60]	; 0x3c
   131c0:	str	r2, [sp, #64]	; 0x40
   131c4:	str	r2, [sp, #68]	; 0x44
   131c8:	str	r3, [sp, #80]	; 0x50
   131cc:	str	r3, [sp, #84]	; 0x54
   131d0:	str	r3, [sp, #88]	; 0x58
   131d4:	movw	r3, #37736	; 0x9368
   131d8:	movt	r3, #1
   131dc:	str	r3, [sp, #72]	; 0x48
   131e0:	mov	r3, #2
   131e4:	str	r3, [sp, #176]	; 0xb0
   131e8:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   131ec:	ldr	r3, [sp, #180]	; 0xb4
   131f0:	cmp	r4, #0
   131f4:	and	r3, r3, #1
   131f8:	str	r3, [sp, #92]	; 0x5c
   131fc:	ldr	r3, [sp, #180]	; 0xb4
   13200:	and	r3, r3, #4
   13204:	str	r3, [sp, #96]	; 0x60
   13208:	bne	145dc <_obstack_memory_used@@Base+0x1a9c>
   1320c:	cmp	sl, #0
   13210:	beq	14388 <_obstack_memory_used@@Base+0x1848>
   13214:	mov	r3, #34	; 0x22
   13218:	mov	r2, r4
   1321c:	mov	r1, #1
   13220:	mov	r9, r2
   13224:	strb	r3, [fp]
   13228:	movw	r3, #37716	; 0x9354
   1322c:	movt	r3, #1
   13230:	mov	r4, r1
   13234:	str	r1, [sp, #32]
   13238:	str	r2, [sp, #44]	; 0x2c
   1323c:	str	r1, [sp, #48]	; 0x30
   13240:	str	r2, [sp, #52]	; 0x34
   13244:	str	r1, [sp, #56]	; 0x38
   13248:	str	r1, [sp, #60]	; 0x3c
   1324c:	str	r2, [sp, #64]	; 0x40
   13250:	str	r2, [sp, #68]	; 0x44
   13254:	str	r3, [sp, #72]	; 0x48
   13258:	str	r2, [sp, #80]	; 0x50
   1325c:	str	r2, [sp, #84]	; 0x54
   13260:	str	r2, [sp, #88]	; 0x58
   13264:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   13268:	mov	r3, #0
   1326c:	mov	r2, #1
   13270:	mov	r9, r3
   13274:	str	r2, [sp, #32]
   13278:	str	r3, [sp, #44]	; 0x2c
   1327c:	str	r3, [sp, #48]	; 0x30
   13280:	str	r3, [sp, #52]	; 0x34
   13284:	str	r3, [sp, #60]	; 0x3c
   13288:	strd	r2, [sp, #64]	; 0x40
   1328c:	str	r3, [sp, #72]	; 0x48
   13290:	str	r3, [sp, #80]	; 0x50
   13294:	str	r3, [sp, #88]	; 0x58
   13298:	ldr	r3, [sp, #180]	; 0xb4
   1329c:	and	r3, r3, r2
   132a0:	str	r3, [sp, #92]	; 0x5c
   132a4:	ldr	r3, [sp, #180]	; 0xb4
   132a8:	and	r3, r3, #4
   132ac:	str	r3, [sp, #96]	; 0x60
   132b0:	ldr	r3, [sp, #176]	; 0xb0
   132b4:	mov	r4, r3
   132b8:	str	r3, [sp, #56]	; 0x38
   132bc:	str	r3, [sp, #84]	; 0x54
   132c0:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   132c4:	mov	r3, #1
   132c8:	mov	r4, #0
   132cc:	mov	r9, r4
   132d0:	str	r3, [sp, #32]
   132d4:	str	r3, [sp, #44]	; 0x2c
   132d8:	str	r3, [sp, #48]	; 0x30
   132dc:	str	r4, [sp, #52]	; 0x34
   132e0:	str	r3, [sp, #56]	; 0x38
   132e4:	str	r3, [sp, #60]	; 0x3c
   132e8:	str	r3, [sp, #88]	; 0x58
   132ec:	movw	r3, #37716	; 0x9354
   132f0:	movt	r3, #1
   132f4:	str	r4, [sp, #64]	; 0x40
   132f8:	str	r4, [sp, #68]	; 0x44
   132fc:	str	r3, [sp, #72]	; 0x48
   13300:	ldr	r3, [sp, #180]	; 0xb4
   13304:	str	r4, [sp, #80]	; 0x50
   13308:	str	r4, [sp, #84]	; 0x54
   1330c:	and	r3, r3, #1
   13310:	str	r3, [sp, #92]	; 0x5c
   13314:	ldr	r3, [sp, #180]	; 0xb4
   13318:	and	r3, r3, #4
   1331c:	str	r3, [sp, #96]	; 0x60
   13320:	mov	r3, #5
   13324:	str	r3, [sp, #176]	; 0xb0
   13328:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   1332c:	mov	r3, #1
   13330:	mov	r4, #0
   13334:	mov	r9, r4
   13338:	str	r3, [sp, #32]
   1333c:	str	r4, [sp, #44]	; 0x2c
   13340:	str	r3, [sp, #48]	; 0x30
   13344:	str	r3, [sp, #60]	; 0x3c
   13348:	ldr	r3, [sp, #180]	; 0xb4
   1334c:	str	r4, [sp, #52]	; 0x34
   13350:	str	r4, [sp, #56]	; 0x38
   13354:	str	r4, [sp, #64]	; 0x40
   13358:	str	r4, [sp, #68]	; 0x44
   1335c:	and	r3, r3, #1
   13360:	str	r4, [sp, #72]	; 0x48
   13364:	str	r4, [sp, #80]	; 0x50
   13368:	str	r4, [sp, #84]	; 0x54
   1336c:	str	r3, [sp, #92]	; 0x5c
   13370:	ldr	r3, [sp, #180]	; 0xb4
   13374:	str	r4, [sp, #88]	; 0x58
   13378:	and	r3, r3, #4
   1337c:	str	r3, [sp, #96]	; 0x60
   13380:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   13384:	mov	r3, #0
   13388:	mov	r2, #1
   1338c:	ldr	r1, [sp, #176]	; 0xb0
   13390:	mov	r4, r3
   13394:	mov	r9, r3
   13398:	movw	r3, #37736	; 0x9368
   1339c:	movt	r3, #1
   133a0:	str	r2, [sp, #32]
   133a4:	str	r2, [sp, #44]	; 0x2c
   133a8:	str	r4, [sp, #48]	; 0x30
   133ac:	strd	r2, [sp, #68]	; 0x44
   133b0:	ldr	r3, [sp, #180]	; 0xb4
   133b4:	str	r2, [sp, #52]	; 0x34
   133b8:	str	r1, [sp, #56]	; 0x38
   133bc:	str	r4, [sp, #60]	; 0x3c
   133c0:	str	r2, [sp, #64]	; 0x40
   133c4:	and	r3, r3, r2
   133c8:	str	r4, [sp, #80]	; 0x50
   133cc:	str	r4, [sp, #84]	; 0x54
   133d0:	str	r4, [sp, #88]	; 0x58
   133d4:	str	r3, [sp, #92]	; 0x5c
   133d8:	ldr	r3, [sp, #180]	; 0xb4
   133dc:	and	r3, r3, #4
   133e0:	str	r3, [sp, #96]	; 0x60
   133e4:	mov	r3, #2
   133e8:	str	r3, [sp, #176]	; 0xb0
   133ec:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   133f0:	mov	r3, #1
   133f4:	mov	r2, #0
   133f8:	mov	r4, r2
   133fc:	mov	r9, r2
   13400:	str	r3, [sp, #32]
   13404:	str	r3, [sp, #44]	; 0x2c
   13408:	str	r2, [sp, #48]	; 0x30
   1340c:	str	r3, [sp, #52]	; 0x34
   13410:	str	r3, [sp, #56]	; 0x38
   13414:	str	r3, [sp, #60]	; 0x3c
   13418:	str	r3, [sp, #64]	; 0x40
   1341c:	str	r3, [sp, #68]	; 0x44
   13420:	str	r3, [sp, #88]	; 0x58
   13424:	movw	r3, #37736	; 0x9368
   13428:	movt	r3, #1
   1342c:	str	r3, [sp, #72]	; 0x48
   13430:	ldr	r3, [sp, #180]	; 0xb4
   13434:	str	r2, [sp, #80]	; 0x50
   13438:	str	r2, [sp, #84]	; 0x54
   1343c:	and	r3, r3, #1
   13440:	b	133d4 <_obstack_memory_used@@Base+0x894>
   13444:	mov	r5, #102	; 0x66
   13448:	mov	r6, #0
   1344c:	ldr	r3, [sp, #44]	; 0x2c
   13450:	cmp	r3, #0
   13454:	bne	14304 <_obstack_memory_used@@Base+0x17c4>
   13458:	ldr	r2, [sp, #52]	; 0x34
   1345c:	eor	r3, fp, #1
   13460:	ands	r3, r2, r3
   13464:	beq	1349c <_obstack_memory_used@@Base+0x95c>
   13468:	cmp	sl, r4
   1346c:	mov	fp, r3
   13470:	movhi	r2, #39	; 0x27
   13474:	strbhi	r2, [r9, r4]
   13478:	add	r2, r4, #1
   1347c:	cmp	sl, r2
   13480:	movhi	r1, #36	; 0x24
   13484:	strbhi	r1, [r9, r2]
   13488:	add	r2, r4, #2
   1348c:	add	r4, r4, #3
   13490:	cmp	sl, r2
   13494:	movhi	r1, #39	; 0x27
   13498:	strbhi	r1, [r9, r2]
   1349c:	cmp	sl, r4
   134a0:	add	r7, r7, #1
   134a4:	movhi	r3, #92	; 0x5c
   134a8:	strbhi	r3, [r9, r4]
   134ac:	add	r4, r4, #1
   134b0:	cmp	r4, sl
   134b4:	ldr	r3, [sp, #32]
   134b8:	strbcc	r5, [r9, r4]
   134bc:	cmp	r6, #0
   134c0:	add	r4, r4, #1
   134c4:	moveq	r3, #0
   134c8:	cmn	r8, #1
   134cc:	str	r3, [sp, #32]
   134d0:	bne	12ed4 <_obstack_memory_used@@Base+0x394>
   134d4:	ldr	r3, [sp, #28]
   134d8:	ldrb	r6, [r3, r7]
   134dc:	adds	r6, r6, #0
   134e0:	movne	r6, #1
   134e4:	cmp	r6, #0
   134e8:	bne	12ee4 <_obstack_memory_used@@Base+0x3a4>
   134ec:	mov	r3, r9
   134f0:	mov	r9, fp
   134f4:	mov	fp, r3
   134f8:	ldr	r3, [sp, #68]	; 0x44
   134fc:	cmp	r4, #0
   13500:	movne	r3, #0
   13504:	cmp	r3, #0
   13508:	bne	146fc <_obstack_memory_used@@Base+0x1bbc>
   1350c:	ldr	r3, [sp, #44]	; 0x2c
   13510:	ldr	r2, [sp, #52]	; 0x34
   13514:	eor	r3, r3, #1
   13518:	ands	r2, r3, r2
   1351c:	beq	14634 <_obstack_memory_used@@Base+0x1af4>
   13520:	ldr	r3, [sp, #80]	; 0x50
   13524:	cmp	r3, #0
   13528:	beq	14638 <_obstack_memory_used@@Base+0x1af8>
   1352c:	ldr	r3, [sp, #32]
   13530:	cmp	r3, #0
   13534:	bne	146ac <_obstack_memory_used@@Base+0x1b6c>
   13538:	ldr	r3, [sp, #84]	; 0x54
   1353c:	adds	r3, r3, #0
   13540:	movne	r3, #1
   13544:	cmp	sl, #0
   13548:	movne	r3, #0
   1354c:	cmp	r3, #0
   13550:	ldreq	r2, [sp, #80]	; 0x50
   13554:	beq	14638 <_obstack_memory_used@@Base+0x1af8>
   13558:	ldr	r2, [sp, #84]	; 0x54
   1355c:	mov	sl, r2
   13560:	mov	r0, #0
   13564:	mov	r4, #1
   13568:	mov	r1, #39	; 0x27
   1356c:	str	r0, [sp, #44]	; 0x2c
   13570:	strb	r1, [fp]
   13574:	str	r0, [sp, #48]	; 0x30
   13578:	str	r4, [sp, #52]	; 0x34
   1357c:	str	r4, [sp, #56]	; 0x38
   13580:	str	r4, [sp, #64]	; 0x40
   13584:	str	r0, [sp, #68]	; 0x44
   13588:	str	r3, [sp, #80]	; 0x50
   1358c:	str	r2, [sp, #84]	; 0x54
   13590:	str	r0, [sp, #88]	; 0x58
   13594:	b	131d4 <_obstack_memory_used@@Base+0x694>
   13598:	mov	r5, #98	; 0x62
   1359c:	b	13448 <_obstack_memory_used@@Base+0x908>
   135a0:	mov	r5, #97	; 0x61
   135a4:	b	13448 <_obstack_memory_used@@Base+0x908>
   135a8:	ldr	r3, [sp, #48]	; 0x30
   135ac:	str	r3, [sp, #40]	; 0x28
   135b0:	mov	r3, #116	; 0x74
   135b4:	ldr	r2, [sp, #68]	; 0x44
   135b8:	cmp	r2, #0
   135bc:	bne	137b8 <_obstack_memory_used@@Base+0xc78>
   135c0:	ldr	r2, [sp, #60]	; 0x3c
   135c4:	cmp	r2, #0
   135c8:	bne	13714 <_obstack_memory_used@@Base+0xbd4>
   135cc:	ldr	r3, [sp, #44]	; 0x2c
   135d0:	mov	r6, #0
   135d4:	cmp	r3, #0
   135d8:	beq	13784 <_obstack_memory_used@@Base+0xc44>
   135dc:	mov	r3, fp
   135e0:	ldr	r2, [sp, #184]	; 0xb8
   135e4:	cmp	r2, #0
   135e8:	beq	13608 <_obstack_memory_used@@Base+0xac8>
   135ec:	ubfx	r1, r5, #5, #8
   135f0:	mov	r0, r2
   135f4:	and	r2, r5, #31
   135f8:	ldr	r1, [r0, r1, lsl #2]
   135fc:	lsr	r2, r1, r2
   13600:	tst	r2, #1
   13604:	bne	1344c <_obstack_memory_used@@Base+0x90c>
   13608:	ldr	r2, [sp, #40]	; 0x28
   1360c:	cmp	r2, #0
   13610:	addeq	r7, r7, #1
   13614:	bne	1344c <_obstack_memory_used@@Base+0x90c>
   13618:	cmp	r3, #0
   1361c:	beq	134b0 <_obstack_memory_used@@Base+0x970>
   13620:	cmp	sl, r4
   13624:	mov	fp, #0
   13628:	movhi	r3, #39	; 0x27
   1362c:	strbhi	r3, [r9, r4]
   13630:	add	r3, r4, #1
   13634:	add	r4, r4, #2
   13638:	cmp	sl, r3
   1363c:	movhi	r2, #39	; 0x27
   13640:	strbhi	r2, [r9, r3]
   13644:	b	134b0 <_obstack_memory_used@@Base+0x970>
   13648:	ldr	r3, [sp, #48]	; 0x30
   1364c:	str	r3, [sp, #40]	; 0x28
   13650:	eor	r3, fp, #1
   13654:	ldr	r2, [sp, #52]	; 0x34
   13658:	ands	r2, r2, r3
   1365c:	beq	1431c <_obstack_memory_used@@Base+0x17dc>
   13660:	cmp	sl, r4
   13664:	movhi	r3, #39	; 0x27
   13668:	strbhi	r3, [r9, r4]
   1366c:	add	r3, r4, #1
   13670:	cmp	sl, r3
   13674:	movhi	r1, #36	; 0x24
   13678:	strbhi	r1, [r9, r3]
   1367c:	add	r3, r4, #2
   13680:	cmp	sl, r3
   13684:	movhi	r1, #39	; 0x27
   13688:	strbhi	r1, [r9, r3]
   1368c:	add	r3, r4, #3
   13690:	cmp	sl, r3
   13694:	bls	14368 <_obstack_memory_used@@Base+0x1828>
   13698:	mov	r4, r3
   1369c:	mov	r3, #92	; 0x5c
   136a0:	mov	fp, r2
   136a4:	mov	r2, r4
   136a8:	strb	r3, [r9, r4]
   136ac:	ldr	r3, [sp, #176]	; 0xb0
   136b0:	add	r4, r4, #1
   136b4:	cmp	r3, #2
   136b8:	beq	143d0 <_obstack_memory_used@@Base+0x1890>
   136bc:	add	r3, r7, #1
   136c0:	cmp	r3, r8
   136c4:	bcs	136dc <_obstack_memory_used@@Base+0xb9c>
   136c8:	ldr	r1, [sp, #28]
   136cc:	ldrb	r3, [r1, r3]
   136d0:	sub	r3, r3, #48	; 0x30
   136d4:	cmp	r3, #9
   136d8:	bls	143e0 <_obstack_memory_used@@Base+0x18a0>
   136dc:	mov	r3, #0
   136e0:	mov	r5, #48	; 0x30
   136e4:	ldr	r6, [sp, #64]	; 0x40
   136e8:	cmp	r6, #0
   136ec:	beq	135e0 <_obstack_memory_used@@Base+0xaa0>
   136f0:	mov	r6, #0
   136f4:	b	13608 <_obstack_memory_used@@Base+0xac8>
   136f8:	ldr	r3, [sp, #48]	; 0x30
   136fc:	str	r3, [sp, #40]	; 0x28
   13700:	ldr	r2, [sp, #60]	; 0x3c
   13704:	mov	r5, #13
   13708:	mov	r3, #114	; 0x72
   1370c:	cmp	r2, #0
   13710:	beq	135cc <_obstack_memory_used@@Base+0xa8c>
   13714:	mov	r5, r3
   13718:	b	13448 <_obstack_memory_used@@Base+0x908>
   1371c:	ldr	r3, [sp, #48]	; 0x30
   13720:	str	r3, [sp, #40]	; 0x28
   13724:	mov	r3, #118	; 0x76
   13728:	b	135c0 <_obstack_memory_used@@Base+0xa80>
   1372c:	ldr	r3, [sp, #48]	; 0x30
   13730:	str	r3, [sp, #40]	; 0x28
   13734:	mov	r5, #10
   13738:	mov	r3, #110	; 0x6e
   1373c:	b	135c0 <_obstack_memory_used@@Base+0xa80>
   13740:	ldr	r3, [sp, #48]	; 0x30
   13744:	cmn	r8, #1
   13748:	str	r3, [sp, #40]	; 0x28
   1374c:	beq	13b94 <_obstack_memory_used@@Base+0x1054>
   13750:	subs	r3, r8, #1
   13754:	movne	r3, #1
   13758:	cmp	r3, #0
   1375c:	bne	13768 <_obstack_memory_used@@Base+0xc28>
   13760:	cmp	r7, #0
   13764:	beq	137ac <_obstack_memory_used@@Base+0xc6c>
   13768:	mov	r6, #0
   1376c:	ldr	r3, [sp, #64]	; 0x40
   13770:	cmp	r3, #0
   13774:	beq	135dc <_obstack_memory_used@@Base+0xa9c>
   13778:	ldr	r3, [sp, #44]	; 0x2c
   1377c:	cmp	r3, #0
   13780:	bne	135dc <_obstack_memory_used@@Base+0xa9c>
   13784:	mov	r3, fp
   13788:	b	13608 <_obstack_memory_used@@Base+0xac8>
   1378c:	ldr	r3, [sp, #48]	; 0x30
   13790:	str	r3, [sp, #40]	; 0x28
   13794:	b	13760 <_obstack_memory_used@@Base+0xc20>
   13798:	ldr	r3, [sp, #48]	; 0x30
   1379c:	str	r3, [sp, #40]	; 0x28
   137a0:	b	13768 <_obstack_memory_used@@Base+0xc28>
   137a4:	ldr	r6, [sp, #48]	; 0x30
   137a8:	str	r6, [sp, #40]	; 0x28
   137ac:	ldr	r3, [sp, #68]	; 0x44
   137b0:	cmp	r3, #0
   137b4:	beq	1376c <_obstack_memory_used@@Base+0xc2c>
   137b8:	mov	r3, #2
   137bc:	mov	fp, r9
   137c0:	str	r3, [sp, #176]	; 0xb0
   137c4:	ldr	r3, [sp, #60]	; 0x3c
   137c8:	cmp	r3, #0
   137cc:	ldr	r3, [sp, #176]	; 0xb0
   137d0:	movne	r3, #4
   137d4:	str	r3, [sp, #176]	; 0xb0
   137d8:	mov	lr, #0
   137dc:	mov	r0, fp
   137e0:	ldr	r2, [sp, #28]
   137e4:	ldr	r3, [sp, #180]	; 0xb4
   137e8:	ldr	r1, [sp, #188]	; 0xbc
   137ec:	bic	ip, r3, #2
   137f0:	ldr	r3, [sp, #176]	; 0xb0
   137f4:	stm	sp, {r3, ip, lr}
   137f8:	mov	r3, r8
   137fc:	ldr	ip, [sp, #192]	; 0xc0
   13800:	str	r1, [sp, #12]
   13804:	mov	r1, sl
   13808:	str	ip, [sp, #16]
   1380c:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   13810:	mov	r4, r0
   13814:	mov	r0, r4
   13818:	add	sp, sp, #140	; 0x8c
   1381c:	ldrd	r4, [sp]
   13820:	ldrd	r6, [sp, #8]
   13824:	ldrd	r8, [sp, #16]
   13828:	ldrd	sl, [sp, #24]
   1382c:	add	sp, sp, #32
   13830:	pop	{pc}		; (ldr pc, [sp], #4)
   13834:	ldr	r3, [sp, #48]	; 0x30
   13838:	str	r3, [sp, #40]	; 0x28
   1383c:	ldr	r3, [sp, #176]	; 0xb0
   13840:	cmp	r3, #2
   13844:	beq	13bbc <_obstack_memory_used@@Base+0x107c>
   13848:	ldr	r3, [sp, #88]	; 0x58
   1384c:	cmp	r3, #0
   13850:	moveq	r5, #92	; 0x5c
   13854:	moveq	r3, r5
   13858:	beq	135c0 <_obstack_memory_used@@Base+0xa80>
   1385c:	add	r7, r7, #1
   13860:	mov	r3, fp
   13864:	mov	r6, #0
   13868:	mov	r5, #92	; 0x5c
   1386c:	b	13618 <_obstack_memory_used@@Base+0xad8>
   13870:	ldr	r3, [sp, #64]	; 0x40
   13874:	cmp	r3, #0
   13878:	bne	146f0 <_obstack_memory_used@@Base+0x1bb0>
   1387c:	ldr	r2, [sp, #48]	; 0x30
   13880:	mov	r3, fp
   13884:	mov	r6, r2
   13888:	str	r2, [sp, #40]	; 0x28
   1388c:	b	135e0 <_obstack_memory_used@@Base+0xaa0>
   13890:	ldr	r3, [sp, #176]	; 0xb0
   13894:	cmp	r3, #2
   13898:	beq	1462c <_obstack_memory_used@@Base+0x1aec>
   1389c:	cmp	r3, #5
   138a0:	ldr	r3, [sp, #48]	; 0x30
   138a4:	str	r3, [sp, #40]	; 0x28
   138a8:	bne	138d4 <_obstack_memory_used@@Base+0xd94>
   138ac:	ldr	r3, [sp, #96]	; 0x60
   138b0:	cmp	r3, #0
   138b4:	beq	14330 <_obstack_memory_used@@Base+0x17f0>
   138b8:	add	r3, r7, #2
   138bc:	cmp	r3, r8
   138c0:	bcs	138d4 <_obstack_memory_used@@Base+0xd94>
   138c4:	ldr	r2, [sp, #36]	; 0x24
   138c8:	ldrb	r5, [r2, #1]
   138cc:	cmp	r5, #63	; 0x3f
   138d0:	beq	14418 <_obstack_memory_used@@Base+0x18d8>
   138d4:	mov	r6, #0
   138d8:	mov	r5, #63	; 0x3f
   138dc:	b	1376c <_obstack_memory_used@@Base+0xc2c>
   138e0:	ldr	r3, [sp, #176]	; 0xb0
   138e4:	cmp	r3, #2
   138e8:	ldr	r3, [sp, #48]	; 0x30
   138ec:	beq	140d4 <_obstack_memory_used@@Base+0x1594>
   138f0:	mov	r5, #39	; 0x27
   138f4:	str	r3, [sp, #40]	; 0x28
   138f8:	str	r6, [sp, #80]	; 0x50
   138fc:	b	1376c <_obstack_memory_used@@Base+0xc2c>
   13900:	ldr	r3, [sp, #180]	; 0xb4
   13904:	cmp	r4, #0
   13908:	and	r3, r3, #1
   1390c:	str	r3, [sp, #92]	; 0x5c
   13910:	ldr	r3, [sp, #180]	; 0xb4
   13914:	and	r3, r3, #4
   13918:	str	r3, [sp, #96]	; 0x60
   1391c:	bne	1473c <_obstack_memory_used@@Base+0x1bfc>
   13920:	str	r4, [sp, #60]	; 0x3c
   13924:	cmp	sl, #0
   13928:	bne	14720 <_obstack_memory_used@@Base+0x1be0>
   1392c:	mov	r3, #1
   13930:	movw	r2, #37736	; 0x9368
   13934:	movt	r2, #1
   13938:	mov	r4, r3
   1393c:	mov	r3, #2
   13940:	mov	r9, sl
   13944:	str	r4, [sp, #32]
   13948:	str	sl, [sp, #44]	; 0x2c
   1394c:	str	sl, [sp, #48]	; 0x30
   13950:	str	r4, [sp, #52]	; 0x34
   13954:	str	r4, [sp, #56]	; 0x38
   13958:	str	r4, [sp, #64]	; 0x40
   1395c:	str	sl, [sp, #68]	; 0x44
   13960:	str	r2, [sp, #72]	; 0x48
   13964:	str	sl, [sp, #80]	; 0x50
   13968:	str	sl, [sp, #84]	; 0x54
   1396c:	str	sl, [sp, #88]	; 0x58
   13970:	str	r3, [sp, #176]	; 0xb0
   13974:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   13978:	ldrb	r5, [r0, r7]
   1397c:	cmp	r5, #126	; 0x7e
   13980:	ldrls	pc, [pc, r5, lsl #2]
   13984:	b	13ce8 <_obstack_memory_used@@Base+0x11a8>
   13988:			; <UNDEFINED> instruction: 0x00013cb4
   1398c:	andeq	r3, r1, r8, ror #25
   13990:	andeq	r3, r1, r8, ror #25
   13994:	andeq	r3, r1, r8, ror #25
   13998:	andeq	r3, r1, r8, ror #25
   1399c:	andeq	r3, r1, r8, ror #25
   139a0:	andeq	r3, r1, r8, ror #25
   139a4:	andeq	r3, r1, r4, lsr #25
   139a8:	muleq	r1, r4, ip
   139ac:	andeq	r3, r1, r8, lsl ip
   139b0:	andeq	r3, r1, r4, lsl #25
   139b4:	strdeq	r3, [r1], -r8
   139b8:	ldrdeq	r3, [r1], -r8
   139bc:	andeq	r3, r1, r4, ror #24
   139c0:	andeq	r3, r1, r8, ror #25
   139c4:	andeq	r3, r1, r8, ror #25
   139c8:	andeq	r3, r1, r8, ror #25
   139cc:	andeq	r3, r1, r8, ror #25
   139d0:	andeq	r3, r1, r8, ror #25
   139d4:	andeq	r3, r1, r8, ror #25
   139d8:	andeq	r3, r1, r8, ror #25
   139dc:	andeq	r3, r1, r8, ror #25
   139e0:	andeq	r3, r1, r8, ror #25
   139e4:	andeq	r3, r1, r8, ror #25
   139e8:	andeq	r3, r1, r8, ror #25
   139ec:	andeq	r3, r1, r8, ror #25
   139f0:	andeq	r3, r1, r8, ror #25
   139f4:	andeq	r3, r1, r8, ror #25
   139f8:	andeq	r3, r1, r8, ror #25
   139fc:	andeq	r3, r1, r8, ror #25
   13a00:	andeq	r3, r1, r8, ror #25
   13a04:	andeq	r3, r1, r8, ror #25
   13a08:	andeq	r3, r1, ip, lsl #24
   13a0c:	andeq	r3, r1, r4, ror ip
   13a10:	andeq	r3, r1, r4, ror ip
   13a14:	andeq	r3, r1, ip, ror #23
   13a18:	andeq	r3, r1, r4, ror ip
   13a1c:	andeq	r3, r1, r0, ror #23
   13a20:	andeq	r3, r1, r4, ror ip
   13a24:	andeq	r3, r1, r0, asr ip
   13a28:	andeq	r3, r1, r4, ror ip
   13a2c:	andeq	r3, r1, r4, ror ip
   13a30:	andeq	r3, r1, r4, ror ip
   13a34:	andeq	r3, r1, r0, ror #23
   13a38:	andeq	r3, r1, r0, ror #23
   13a3c:	andeq	r3, r1, r0, ror #23
   13a40:	andeq	r3, r1, r0, ror #23
   13a44:	andeq	r3, r1, r0, ror #23
   13a48:	andeq	r3, r1, r0, ror #23
   13a4c:	andeq	r3, r1, r0, ror #23
   13a50:	andeq	r3, r1, r0, ror #23
   13a54:	andeq	r3, r1, r0, ror #23
   13a58:	andeq	r3, r1, r0, ror #23
   13a5c:	andeq	r3, r1, r0, ror #23
   13a60:	andeq	r3, r1, r0, ror #23
   13a64:	andeq	r3, r1, r0, ror #23
   13a68:	andeq	r3, r1, r0, ror #23
   13a6c:	andeq	r3, r1, r0, ror #23
   13a70:	andeq	r3, r1, r0, ror #23
   13a74:	andeq	r3, r1, r4, ror ip
   13a78:	andeq	r3, r1, r4, ror ip
   13a7c:	andeq	r3, r1, r4, ror ip
   13a80:	andeq	r3, r1, r4, ror ip
   13a84:	andeq	r3, r1, r8, lsr #24
   13a88:	andeq	r3, r1, r8, ror #25
   13a8c:	andeq	r3, r1, r0, ror #23
   13a90:	andeq	r3, r1, r0, ror #23
   13a94:	andeq	r3, r1, r0, ror #23
   13a98:	andeq	r3, r1, r0, ror #23
   13a9c:	andeq	r3, r1, r0, ror #23
   13aa0:	andeq	r3, r1, r0, ror #23
   13aa4:	andeq	r3, r1, r0, ror #23
   13aa8:	andeq	r3, r1, r0, ror #23
   13aac:	andeq	r3, r1, r0, ror #23
   13ab0:	andeq	r3, r1, r0, ror #23
   13ab4:	andeq	r3, r1, r0, ror #23
   13ab8:	andeq	r3, r1, r0, ror #23
   13abc:	andeq	r3, r1, r0, ror #23
   13ac0:	andeq	r3, r1, r0, ror #23
   13ac4:	andeq	r3, r1, r0, ror #23
   13ac8:	andeq	r3, r1, r0, ror #23
   13acc:	andeq	r3, r1, r0, ror #23
   13ad0:	andeq	r3, r1, r0, ror #23
   13ad4:	andeq	r3, r1, r0, ror #23
   13ad8:	andeq	r3, r1, r0, ror #23
   13adc:	andeq	r3, r1, r0, ror #23
   13ae0:	andeq	r3, r1, r0, ror #23
   13ae4:	andeq	r3, r1, r0, ror #23
   13ae8:	andeq	r3, r1, r0, ror #23
   13aec:	andeq	r3, r1, r0, ror #23
   13af0:	andeq	r3, r1, r0, ror #23
   13af4:	andeq	r3, r1, r4, ror ip
   13af8:	andeq	r3, r1, r8, lsr #23
   13afc:	andeq	r3, r1, r0, ror #23
   13b00:	andeq	r3, r1, r4, ror ip
   13b04:	andeq	r3, r1, r0, ror #23
   13b08:	andeq	r3, r1, r4, ror ip
   13b0c:	andeq	r3, r1, r0, ror #23
   13b10:	andeq	r3, r1, r0, ror #23
   13b14:	andeq	r3, r1, r0, ror #23
   13b18:	andeq	r3, r1, r0, ror #23
   13b1c:	andeq	r3, r1, r0, ror #23
   13b20:	andeq	r3, r1, r0, ror #23
   13b24:	andeq	r3, r1, r0, ror #23
   13b28:	andeq	r3, r1, r0, ror #23
   13b2c:	andeq	r3, r1, r0, ror #23
   13b30:	andeq	r3, r1, r0, ror #23
   13b34:	andeq	r3, r1, r0, ror #23
   13b38:	andeq	r3, r1, r0, ror #23
   13b3c:	andeq	r3, r1, r0, ror #23
   13b40:	andeq	r3, r1, r0, ror #23
   13b44:	andeq	r3, r1, r0, ror #23
   13b48:	andeq	r3, r1, r0, ror #23
   13b4c:	andeq	r3, r1, r0, ror #23
   13b50:	andeq	r3, r1, r0, ror #23
   13b54:	andeq	r3, r1, r0, ror #23
   13b58:	andeq	r3, r1, r0, ror #23
   13b5c:	andeq	r3, r1, r0, ror #23
   13b60:	andeq	r3, r1, r0, ror #23
   13b64:	andeq	r3, r1, r0, ror #23
   13b68:	andeq	r3, r1, r0, ror #23
   13b6c:	andeq	r3, r1, r0, ror #23
   13b70:	andeq	r3, r1, r0, ror #23
   13b74:	andeq	r3, r1, r4, lsl #23
   13b78:	andeq	r3, r1, r4, ror ip
   13b7c:	andeq	r3, r1, r4, lsl #23
   13b80:	andeq	r3, r1, ip, ror #23
   13b84:	mov	r3, #0
   13b88:	cmn	r8, #1
   13b8c:	str	r3, [sp, #40]	; 0x28
   13b90:	bne	13750 <_obstack_memory_used@@Base+0xc10>
   13b94:	ldr	r3, [sp, #28]
   13b98:	ldrb	r3, [r3, #1]
   13b9c:	adds	r3, r3, #0
   13ba0:	movne	r3, #1
   13ba4:	b	13758 <_obstack_memory_used@@Base+0xc18>
   13ba8:	mov	r3, #0
   13bac:	str	r3, [sp, #40]	; 0x28
   13bb0:	ldr	r3, [sp, #176]	; 0xb0
   13bb4:	cmp	r3, #2
   13bb8:	bne	13848 <_obstack_memory_used@@Base+0xd08>
   13bbc:	ldr	r3, [sp, #44]	; 0x2c
   13bc0:	cmp	r3, #0
   13bc4:	bne	14504 <_obstack_memory_used@@Base+0x19c4>
   13bc8:	mov	r6, r3
   13bcc:	add	r7, r7, #1
   13bd0:	mov	r3, fp
   13bd4:	mov	r5, #92	; 0x5c
   13bd8:	b	13618 <_obstack_memory_used@@Base+0xad8>
   13bdc:	ldr	r6, [sp, #48]	; 0x30
   13be0:	mov	r3, #0
   13be4:	str	r3, [sp, #40]	; 0x28
   13be8:	b	1376c <_obstack_memory_used@@Base+0xc2c>
   13bec:	mov	r3, #0
   13bf0:	str	r3, [sp, #40]	; 0x28
   13bf4:	b	13760 <_obstack_memory_used@@Base+0xc20>
   13bf8:	mov	r3, #0
   13bfc:	str	r3, [sp, #40]	; 0x28
   13c00:	mov	r3, #118	; 0x76
   13c04:	b	135c0 <_obstack_memory_used@@Base+0xa80>
   13c08:	ldr	r6, [sp, #48]	; 0x30
   13c0c:	mov	r3, #0
   13c10:	str	r3, [sp, #40]	; 0x28
   13c14:	b	137ac <_obstack_memory_used@@Base+0xc6c>
   13c18:	mov	r3, #0
   13c1c:	str	r3, [sp, #40]	; 0x28
   13c20:	mov	r3, #116	; 0x74
   13c24:	b	135b4 <_obstack_memory_used@@Base+0xa74>
   13c28:	ldr	r3, [sp, #176]	; 0xb0
   13c2c:	cmp	r3, #2
   13c30:	beq	14140 <_obstack_memory_used@@Base+0x1600>
   13c34:	cmp	r3, #5
   13c38:	mov	r3, #0
   13c3c:	str	r3, [sp, #40]	; 0x28
   13c40:	beq	138ac <_obstack_memory_used@@Base+0xd6c>
   13c44:	mov	r6, #0
   13c48:	mov	r5, #63	; 0x3f
   13c4c:	b	1376c <_obstack_memory_used@@Base+0xc2c>
   13c50:	ldr	r3, [sp, #176]	; 0xb0
   13c54:	cmp	r3, #2
   13c58:	beq	140c8 <_obstack_memory_used@@Base+0x1588>
   13c5c:	mov	r3, #0
   13c60:	b	138f0 <_obstack_memory_used@@Base+0xdb0>
   13c64:	mov	r3, #0
   13c68:	str	r3, [sp, #40]	; 0x28
   13c6c:	mov	r3, #114	; 0x72
   13c70:	b	135b4 <_obstack_memory_used@@Base+0xa74>
   13c74:	mov	r3, #0
   13c78:	mov	r6, r3
   13c7c:	str	r3, [sp, #40]	; 0x28
   13c80:	b	137ac <_obstack_memory_used@@Base+0xc6c>
   13c84:	mov	r3, #0
   13c88:	str	r3, [sp, #40]	; 0x28
   13c8c:	mov	r3, #110	; 0x6e
   13c90:	b	135b4 <_obstack_memory_used@@Base+0xa74>
   13c94:	mov	r3, #0
   13c98:	str	r3, [sp, #40]	; 0x28
   13c9c:	mov	r3, #98	; 0x62
   13ca0:	b	135c0 <_obstack_memory_used@@Base+0xa80>
   13ca4:	mov	r3, #0
   13ca8:	str	r3, [sp, #40]	; 0x28
   13cac:	mov	r3, #97	; 0x61
   13cb0:	b	135c0 <_obstack_memory_used@@Base+0xa80>
   13cb4:	ldr	r3, [sp, #60]	; 0x3c
   13cb8:	cmp	r3, #0
   13cbc:	bne	140ac <_obstack_memory_used@@Base+0x156c>
   13cc0:	ldr	r3, [sp, #92]	; 0x5c
   13cc4:	cmp	r3, #0
   13cc8:	addne	r7, r7, #1
   13ccc:	bne	12ecc <_obstack_memory_used@@Base+0x38c>
   13cd0:	str	r3, [sp, #40]	; 0x28
   13cd4:	b	135cc <_obstack_memory_used@@Base+0xa8c>
   13cd8:	mov	r3, #0
   13cdc:	str	r3, [sp, #40]	; 0x28
   13ce0:	mov	r3, #102	; 0x66
   13ce4:	b	135c0 <_obstack_memory_used@@Base+0xa80>
   13ce8:	mov	r3, #0
   13cec:	str	r3, [sp, #40]	; 0x28
   13cf0:	ldr	r3, [sp, #76]	; 0x4c
   13cf4:	cmp	r3, #1
   13cf8:	bne	14160 <_obstack_memory_used@@Base+0x1620>
   13cfc:	bl	10ec4 <__ctype_b_loc@plt>
   13d00:	ldr	r2, [r0]
   13d04:	sxth	r3, r5
   13d08:	lsl	r3, r3, #1
   13d0c:	ldr	r1, [sp, #76]	; 0x4c
   13d10:	ldrh	r3, [r2, r3]
   13d14:	mov	r0, r1
   13d18:	and	r3, r3, #16384	; 0x4000
   13d1c:	cmp	r3, #0
   13d20:	ldr	r3, [sp, #60]	; 0x3c
   13d24:	movne	r6, #1
   13d28:	moveq	r6, #0
   13d2c:	movne	r2, #0
   13d30:	andeq	r2, r3, #1
   13d34:	cmp	r2, #0
   13d38:	beq	1376c <_obstack_memory_used@@Base+0xc2c>
   13d3c:	ldr	r2, [sp, #60]	; 0x3c
   13d40:	mov	r6, #0
   13d44:	add	r1, r0, r7
   13d48:	mov	ip, #39	; 0x27
   13d4c:	str	r6, [sp, #100]	; 0x64
   13d50:	mov	r0, #0
   13d54:	ldr	lr, [sp, #36]	; 0x24
   13d58:	str	r8, [sp, #36]	; 0x24
   13d5c:	ldr	r6, [sp, #40]	; 0x28
   13d60:	ldr	r8, [sp, #44]	; 0x2c
   13d64:	b	13e14 <_obstack_memory_used@@Base+0x12d4>
   13d68:	cmp	r8, #0
   13d6c:	bne	14348 <_obstack_memory_used@@Base+0x1808>
   13d70:	ldr	r0, [sp, #52]	; 0x34
   13d74:	eor	r3, fp, #1
   13d78:	ands	r3, r0, r3
   13d7c:	beq	13dac <_obstack_memory_used@@Base+0x126c>
   13d80:	cmp	sl, r4
   13d84:	add	r0, r4, #1
   13d88:	strbhi	ip, [r9, r4]
   13d8c:	cmp	sl, r0
   13d90:	movhi	fp, #36	; 0x24
   13d94:	strbhi	fp, [r9, r0]
   13d98:	add	r0, r4, #2
   13d9c:	mov	fp, r3
   13da0:	cmp	sl, r0
   13da4:	add	r4, r4, #3
   13da8:	strbhi	ip, [r9, r0]
   13dac:	cmp	sl, r4
   13db0:	movhi	r3, #92	; 0x5c
   13db4:	strbhi	r3, [r9, r4]
   13db8:	add	r3, r4, #1
   13dbc:	cmp	sl, r3
   13dc0:	bls	13dd0 <_obstack_memory_used@@Base+0x1290>
   13dc4:	lsr	r0, r5, #6
   13dc8:	add	r0, r0, #48	; 0x30
   13dcc:	strb	r0, [r9, r3]
   13dd0:	add	r3, r4, #2
   13dd4:	cmp	sl, r3
   13dd8:	bls	13de8 <_obstack_memory_used@@Base+0x12a8>
   13ddc:	ubfx	r0, r5, #3, #3
   13de0:	add	r0, r0, #48	; 0x30
   13de4:	strb	r0, [r9, r3]
   13de8:	add	r7, r7, #1
   13dec:	and	r5, r5, #7
   13df0:	cmp	r1, r7
   13df4:	add	r5, r5, #48	; 0x30
   13df8:	add	r4, r4, #3
   13dfc:	bls	1435c <_obstack_memory_used@@Base+0x181c>
   13e00:	mov	r0, r2
   13e04:	cmp	sl, r4
   13e08:	strbhi	r5, [r9, r4]
   13e0c:	add	r4, r4, #1
   13e10:	ldrb	r5, [lr, #1]!
   13e14:	cmp	r2, #0
   13e18:	bne	13d68 <_obstack_memory_used@@Base+0x1228>
   13e1c:	eor	r3, r0, #1
   13e20:	cmp	r6, #0
   13e24:	and	r3, r3, fp
   13e28:	uxtb	r3, r3
   13e2c:	beq	13e40 <_obstack_memory_used@@Base+0x1300>
   13e30:	cmp	sl, r4
   13e34:	movhi	r6, #92	; 0x5c
   13e38:	strbhi	r6, [r9, r4]
   13e3c:	add	r4, r4, #1
   13e40:	add	r7, r7, #1
   13e44:	cmp	r7, r1
   13e48:	bcs	1433c <_obstack_memory_used@@Base+0x17fc>
   13e4c:	cmp	r3, #0
   13e50:	beq	14380 <_obstack_memory_used@@Base+0x1840>
   13e54:	cmp	sl, r4
   13e58:	add	r3, r4, #1
   13e5c:	mov	r6, #0
   13e60:	strbhi	ip, [r9, r4]
   13e64:	cmp	sl, r3
   13e68:	add	r4, r4, #2
   13e6c:	mov	fp, r6
   13e70:	strbhi	ip, [r9, r3]
   13e74:	b	13e04 <_obstack_memory_used@@Base+0x12c4>
   13e78:	ldr	r3, [sp, #36]	; 0x24
   13e7c:	ldrb	r5, [r3]
   13e80:	cmp	r5, #126	; 0x7e
   13e84:	ldrls	pc, [pc, r5, lsl #2]
   13e88:	b	13ce8 <_obstack_memory_used@@Base+0x11a8>
   13e8c:	andeq	r4, r1, ip, lsr #1
   13e90:	andeq	r3, r1, r8, ror #25
   13e94:	andeq	r3, r1, r8, ror #25
   13e98:	andeq	r3, r1, r8, ror #25
   13e9c:	andeq	r3, r1, r8, ror #25
   13ea0:	andeq	r3, r1, r8, ror #25
   13ea4:	andeq	r3, r1, r8, ror #25
   13ea8:	andeq	r3, r1, r0, lsr #11
   13eac:	muleq	r1, r8, r5
   13eb0:	andeq	r3, r1, r8, lsl ip
   13eb4:	andeq	r4, r1, r0, lsr #1
   13eb8:	strdeq	r3, [r1], -r8
   13ebc:	andeq	r3, r1, r4, asr #8
   13ec0:	muleq	r1, r4, r0
   13ec4:	andeq	r3, r1, r8, ror #25
   13ec8:	andeq	r3, r1, r8, ror #25
   13ecc:	andeq	r3, r1, r8, ror #25
   13ed0:	andeq	r3, r1, r8, ror #25
   13ed4:	andeq	r3, r1, r8, ror #25
   13ed8:	andeq	r3, r1, r8, ror #25
   13edc:	andeq	r3, r1, r8, ror #25
   13ee0:	andeq	r3, r1, r8, ror #25
   13ee4:	andeq	r3, r1, r8, ror #25
   13ee8:	andeq	r3, r1, r8, ror #25
   13eec:	andeq	r3, r1, r8, ror #25
   13ef0:	andeq	r3, r1, r8, ror #25
   13ef4:	andeq	r3, r1, r8, ror #25
   13ef8:	andeq	r3, r1, r8, ror #25
   13efc:	andeq	r3, r1, r8, ror #25
   13f00:	andeq	r3, r1, r8, ror #25
   13f04:	andeq	r3, r1, r8, ror #25
   13f08:	andeq	r3, r1, r8, ror #25
   13f0c:	andeq	r3, r1, r8, lsl #24
   13f10:	andeq	r4, r1, r8, lsl #1
   13f14:	andeq	r4, r1, r8, lsl #1
   13f18:	andeq	r3, r1, ip, ror #23
   13f1c:	andeq	r4, r1, r8, lsl #1
   13f20:	ldrdeq	r3, [r1], -ip
   13f24:	andeq	r4, r1, r8, lsl #1
   13f28:	andeq	r3, r1, r0, asr ip
   13f2c:	andeq	r4, r1, r8, lsl #1
   13f30:	andeq	r4, r1, r8, lsl #1
   13f34:	andeq	r4, r1, r8, lsl #1
   13f38:	ldrdeq	r3, [r1], -ip
   13f3c:	ldrdeq	r3, [r1], -ip
   13f40:	ldrdeq	r3, [r1], -ip
   13f44:	ldrdeq	r3, [r1], -ip
   13f48:	ldrdeq	r3, [r1], -ip
   13f4c:	ldrdeq	r3, [r1], -ip
   13f50:	ldrdeq	r3, [r1], -ip
   13f54:	ldrdeq	r3, [r1], -ip
   13f58:	ldrdeq	r3, [r1], -ip
   13f5c:	ldrdeq	r3, [r1], -ip
   13f60:	ldrdeq	r3, [r1], -ip
   13f64:	ldrdeq	r3, [r1], -ip
   13f68:	ldrdeq	r3, [r1], -ip
   13f6c:	ldrdeq	r3, [r1], -ip
   13f70:	ldrdeq	r3, [r1], -ip
   13f74:	ldrdeq	r3, [r1], -ip
   13f78:	andeq	r4, r1, r8, lsl #1
   13f7c:	andeq	r4, r1, r8, lsl #1
   13f80:	andeq	r4, r1, r8, lsl #1
   13f84:	andeq	r4, r1, r8, lsl #1
   13f88:	andeq	r3, r1, r8, lsr #24
   13f8c:	andeq	r3, r1, r8, ror #25
   13f90:	ldrdeq	r3, [r1], -ip
   13f94:	ldrdeq	r3, [r1], -ip
   13f98:	ldrdeq	r3, [r1], -ip
   13f9c:	ldrdeq	r3, [r1], -ip
   13fa0:	ldrdeq	r3, [r1], -ip
   13fa4:	ldrdeq	r3, [r1], -ip
   13fa8:	ldrdeq	r3, [r1], -ip
   13fac:	ldrdeq	r3, [r1], -ip
   13fb0:	ldrdeq	r3, [r1], -ip
   13fb4:	ldrdeq	r3, [r1], -ip
   13fb8:	ldrdeq	r3, [r1], -ip
   13fbc:	ldrdeq	r3, [r1], -ip
   13fc0:	ldrdeq	r3, [r1], -ip
   13fc4:	ldrdeq	r3, [r1], -ip
   13fc8:	ldrdeq	r3, [r1], -ip
   13fcc:	ldrdeq	r3, [r1], -ip
   13fd0:	ldrdeq	r3, [r1], -ip
   13fd4:	ldrdeq	r3, [r1], -ip
   13fd8:	ldrdeq	r3, [r1], -ip
   13fdc:	ldrdeq	r3, [r1], -ip
   13fe0:	ldrdeq	r3, [r1], -ip
   13fe4:	ldrdeq	r3, [r1], -ip
   13fe8:	ldrdeq	r3, [r1], -ip
   13fec:	ldrdeq	r3, [r1], -ip
   13ff0:	ldrdeq	r3, [r1], -ip
   13ff4:	ldrdeq	r3, [r1], -ip
   13ff8:	andeq	r4, r1, r8, lsl #1
   13ffc:	andeq	r3, r1, r8, lsr #23
   14000:	ldrdeq	r3, [r1], -ip
   14004:	andeq	r4, r1, r8, lsl #1
   14008:	ldrdeq	r3, [r1], -ip
   1400c:	andeq	r4, r1, r8, lsl #1
   14010:	ldrdeq	r3, [r1], -ip
   14014:	ldrdeq	r3, [r1], -ip
   14018:	ldrdeq	r3, [r1], -ip
   1401c:	ldrdeq	r3, [r1], -ip
   14020:	ldrdeq	r3, [r1], -ip
   14024:	ldrdeq	r3, [r1], -ip
   14028:	ldrdeq	r3, [r1], -ip
   1402c:	ldrdeq	r3, [r1], -ip
   14030:	ldrdeq	r3, [r1], -ip
   14034:	ldrdeq	r3, [r1], -ip
   14038:	ldrdeq	r3, [r1], -ip
   1403c:	ldrdeq	r3, [r1], -ip
   14040:	ldrdeq	r3, [r1], -ip
   14044:	ldrdeq	r3, [r1], -ip
   14048:	ldrdeq	r3, [r1], -ip
   1404c:	ldrdeq	r3, [r1], -ip
   14050:	ldrdeq	r3, [r1], -ip
   14054:	ldrdeq	r3, [r1], -ip
   14058:	ldrdeq	r3, [r1], -ip
   1405c:	ldrdeq	r3, [r1], -ip
   14060:	ldrdeq	r3, [r1], -ip
   14064:	ldrdeq	r3, [r1], -ip
   14068:	ldrdeq	r3, [r1], -ip
   1406c:	ldrdeq	r3, [r1], -ip
   14070:	ldrdeq	r3, [r1], -ip
   14074:	ldrdeq	r3, [r1], -ip
   14078:	andeq	r3, r1, r4, lsl #23
   1407c:	andeq	r4, r1, r8, lsl #1
   14080:	andeq	r3, r1, r4, lsl #23
   14084:	andeq	r3, r1, ip, ror #23
   14088:	mov	r3, #0
   1408c:	str	r3, [sp, #40]	; 0x28
   14090:	b	13768 <_obstack_memory_used@@Base+0xc28>
   14094:	mov	r3, #0
   14098:	str	r3, [sp, #40]	; 0x28
   1409c:	b	13700 <_obstack_memory_used@@Base+0xbc0>
   140a0:	mov	r3, #0
   140a4:	str	r3, [sp, #40]	; 0x28
   140a8:	b	13734 <_obstack_memory_used@@Base+0xbf4>
   140ac:	ldr	r3, [sp, #44]	; 0x2c
   140b0:	cmp	r3, #0
   140b4:	beq	1364c <_obstack_memory_used@@Base+0xb0c>
   140b8:	ldr	r3, [sp, #52]	; 0x34
   140bc:	mov	fp, r9
   140c0:	str	r3, [sp, #60]	; 0x3c
   140c4:	b	137c4 <_obstack_memory_used@@Base+0xc84>
   140c8:	ldr	r3, [sp, #44]	; 0x2c
   140cc:	cmp	r3, #0
   140d0:	bne	14504 <_obstack_memory_used@@Base+0x19c4>
   140d4:	str	r3, [sp, #40]	; 0x28
   140d8:	cmp	sl, #0
   140dc:	ldr	r3, [sp, #84]	; 0x54
   140e0:	clz	r3, r3
   140e4:	lsr	r3, r3, #5
   140e8:	moveq	r3, #0
   140ec:	cmp	r3, #0
   140f0:	strne	sl, [sp, #84]	; 0x54
   140f4:	movne	sl, #0
   140f8:	bne	14128 <_obstack_memory_used@@Base+0x15e8>
   140fc:	cmp	sl, r4
   14100:	movhi	r3, #39	; 0x27
   14104:	strbhi	r3, [r9, r4]
   14108:	add	r3, r4, #1
   1410c:	cmp	sl, r3
   14110:	movhi	r2, #92	; 0x5c
   14114:	strbhi	r2, [r9, r3]
   14118:	add	r3, r4, #2
   1411c:	cmp	sl, r3
   14120:	movhi	r2, #39	; 0x27
   14124:	strbhi	r2, [r9, r3]
   14128:	mov	r3, #0
   1412c:	add	r4, r4, #3
   14130:	str	r6, [sp, #80]	; 0x50
   14134:	mov	fp, r3
   14138:	mov	r5, #39	; 0x27
   1413c:	b	13608 <_obstack_memory_used@@Base+0xac8>
   14140:	ldr	r3, [sp, #44]	; 0x2c
   14144:	cmp	r3, #0
   14148:	bne	14504 <_obstack_memory_used@@Base+0x19c4>
   1414c:	mov	r6, #0
   14150:	mov	r5, #63	; 0x3f
   14154:	str	r3, [sp, #40]	; 0x28
   14158:	mov	r3, fp
   1415c:	b	13608 <_obstack_memory_used@@Base+0xac8>
   14160:	mov	r2, #0
   14164:	mov	r3, #0
   14168:	cmn	r8, #1
   1416c:	strd	r2, [sp, #128]	; 0x80
   14170:	bne	14180 <_obstack_memory_used@@Base+0x1640>
   14174:	ldr	r0, [sp, #28]
   14178:	bl	10edc <strlen@plt>
   1417c:	mov	r8, r0
   14180:	str	r9, [sp, #100]	; 0x64
   14184:	mov	r3, #0
   14188:	strd	sl, [sp, #104]	; 0x68
   1418c:	ldr	sl, [sp, #28]
   14190:	str	r5, [sp, #112]	; 0x70
   14194:	mov	r5, r3
   14198:	ldr	r9, [sp, #68]	; 0x44
   1419c:	str	r4, [sp, #116]	; 0x74
   141a0:	add	r4, r7, r5
   141a4:	add	r3, sp, #128	; 0x80
   141a8:	add	fp, sl, r4
   141ac:	sub	r2, r8, r4
   141b0:	mov	r1, fp
   141b4:	add	r0, sp, #124	; 0x7c
   141b8:	bl	17590 <_obstack_memory_used@@Base+0x4a50>
   141bc:	subs	r1, r0, #0
   141c0:	beq	14200 <_obstack_memory_used@@Base+0x16c0>
   141c4:	cmn	r1, #1
   141c8:	beq	14558 <_obstack_memory_used@@Base+0x1a18>
   141cc:	cmn	r1, #2
   141d0:	beq	14578 <_obstack_memory_used@@Base+0x1a38>
   141d4:	cmp	r9, #0
   141d8:	bne	14230 <_obstack_memory_used@@Base+0x16f0>
   141dc:	ldr	r0, [sp, #124]	; 0x7c
   141e0:	add	r5, r5, r1
   141e4:	bl	10df8 <iswprint@plt>
   141e8:	cmp	r0, #0
   141ec:	add	r0, sp, #128	; 0x80
   141f0:	moveq	r6, #0
   141f4:	bl	10d98 <mbsinit@plt>
   141f8:	cmp	r0, #0
   141fc:	beq	141a0 <_obstack_memory_used@@Base+0x1660>
   14200:	ldr	r3, [sp, #60]	; 0x3c
   14204:	add	r9, sp, #100	; 0x64
   14208:	mov	r0, r5
   1420c:	ldm	r9, {r9, sl, fp}
   14210:	eor	r2, r6, #1
   14214:	ldr	r5, [sp, #112]	; 0x70
   14218:	and	r2, r2, r3
   1421c:	uxtb	r2, r2
   14220:	ldr	r4, [sp, #116]	; 0x74
   14224:	cmp	r0, #1
   14228:	bhi	13d44 <_obstack_memory_used@@Base+0x1204>
   1422c:	b	13d34 <_obstack_memory_used@@Base+0x11f4>
   14230:	cmp	r1, #1
   14234:	beq	141dc <_obstack_memory_used@@Base+0x169c>
   14238:	add	r2, r4, #1
   1423c:	add	r3, sl, r1
   14240:	add	r2, sl, r2
   14244:	add	r4, r3, r4
   14248:	ldrb	r3, [r2], #1
   1424c:	sub	r3, r3, #91	; 0x5b
   14250:	cmp	r3, #33	; 0x21
   14254:	ldrls	pc, [pc, r3, lsl #2]
   14258:	b	142e4 <_obstack_memory_used@@Base+0x17a4>
   1425c:	strdeq	r4, [r1], -r0
   14260:	strdeq	r4, [r1], -r0
   14264:	andeq	r4, r1, r4, ror #5
   14268:	strdeq	r4, [r1], -r0
   1426c:	andeq	r4, r1, r4, ror #5
   14270:	strdeq	r4, [r1], -r0
   14274:	andeq	r4, r1, r4, ror #5
   14278:	andeq	r4, r1, r4, ror #5
   1427c:	andeq	r4, r1, r4, ror #5
   14280:	andeq	r4, r1, r4, ror #5
   14284:	andeq	r4, r1, r4, ror #5
   14288:	andeq	r4, r1, r4, ror #5
   1428c:	andeq	r4, r1, r4, ror #5
   14290:	andeq	r4, r1, r4, ror #5
   14294:	andeq	r4, r1, r4, ror #5
   14298:	andeq	r4, r1, r4, ror #5
   1429c:	andeq	r4, r1, r4, ror #5
   142a0:	andeq	r4, r1, r4, ror #5
   142a4:	andeq	r4, r1, r4, ror #5
   142a8:	andeq	r4, r1, r4, ror #5
   142ac:	andeq	r4, r1, r4, ror #5
   142b0:	andeq	r4, r1, r4, ror #5
   142b4:	andeq	r4, r1, r4, ror #5
   142b8:	andeq	r4, r1, r4, ror #5
   142bc:	andeq	r4, r1, r4, ror #5
   142c0:	andeq	r4, r1, r4, ror #5
   142c4:	andeq	r4, r1, r4, ror #5
   142c8:	andeq	r4, r1, r4, ror #5
   142cc:	andeq	r4, r1, r4, ror #5
   142d0:	andeq	r4, r1, r4, ror #5
   142d4:	andeq	r4, r1, r4, ror #5
   142d8:	andeq	r4, r1, r4, ror #5
   142dc:	andeq	r4, r1, r4, ror #5
   142e0:	strdeq	r4, [r1], -r0
   142e4:	cmp	r4, r2
   142e8:	bne	14248 <_obstack_memory_used@@Base+0x1708>
   142ec:	b	141dc <_obstack_memory_used@@Base+0x169c>
   142f0:	mov	r3, #2
   142f4:	ldr	fp, [sp, #100]	; 0x64
   142f8:	str	r3, [sp, #176]	; 0xb0
   142fc:	ldr	sl, [sp, #104]	; 0x68
   14300:	b	137c4 <_obstack_memory_used@@Base+0xc84>
   14304:	ldr	r2, [sp, #52]	; 0x34
   14308:	mov	fp, r9
   1430c:	ldr	r3, [sp, #60]	; 0x3c
   14310:	and	r3, r3, r2
   14314:	str	r3, [sp, #60]	; 0x3c
   14318:	b	137c4 <_obstack_memory_used@@Base+0xc84>
   1431c:	cmp	sl, r4
   14320:	movhi	r2, fp
   14324:	bhi	1369c <_obstack_memory_used@@Base+0xb5c>
   14328:	mov	r2, r4
   1432c:	b	136ac <_obstack_memory_used@@Base+0xb6c>
   14330:	mov	r6, r3
   14334:	mov	r5, #63	; 0x3f
   14338:	b	1376c <_obstack_memory_used@@Base+0xc2c>
   1433c:	ldr	r8, [sp, #36]	; 0x24
   14340:	ldr	r6, [sp, #100]	; 0x64
   14344:	b	13618 <_obstack_memory_used@@Base+0xad8>
   14348:	mov	fp, r9
   1434c:	ldr	r8, [sp, #36]	; 0x24
   14350:	ldr	r3, [sp, #52]	; 0x34
   14354:	str	r3, [sp, #60]	; 0x3c
   14358:	b	137c4 <_obstack_memory_used@@Base+0xc84>
   1435c:	ldr	r8, [sp, #36]	; 0x24
   14360:	ldr	r6, [sp, #100]	; 0x64
   14364:	b	134b0 <_obstack_memory_used@@Base+0x970>
   14368:	mov	r3, #0
   1436c:	add	r4, r4, #4
   14370:	mov	fp, r2
   14374:	mov	r6, r3
   14378:	mov	r5, #48	; 0x30
   1437c:	b	13608 <_obstack_memory_used@@Base+0xac8>
   14380:	mov	r6, r3
   14384:	b	13e04 <_obstack_memory_used@@Base+0x12c4>
   14388:	mov	r3, #1
   1438c:	movw	r2, #37716	; 0x9354
   14390:	movt	r2, #1
   14394:	mov	r4, r3
   14398:	mov	r9, sl
   1439c:	str	r3, [sp, #32]
   143a0:	str	sl, [sp, #44]	; 0x2c
   143a4:	str	r3, [sp, #48]	; 0x30
   143a8:	str	sl, [sp, #52]	; 0x34
   143ac:	str	r3, [sp, #56]	; 0x38
   143b0:	str	r3, [sp, #60]	; 0x3c
   143b4:	str	sl, [sp, #64]	; 0x40
   143b8:	str	sl, [sp, #68]	; 0x44
   143bc:	str	r2, [sp, #72]	; 0x48
   143c0:	str	sl, [sp, #80]	; 0x50
   143c4:	str	sl, [sp, #84]	; 0x54
   143c8:	str	sl, [sp, #88]	; 0x58
   143cc:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   143d0:	mov	r3, #0
   143d4:	mov	r5, #48	; 0x30
   143d8:	mov	r6, r3
   143dc:	b	13608 <_obstack_memory_used@@Base+0xac8>
   143e0:	cmp	sl, r4
   143e4:	mov	r5, #48	; 0x30
   143e8:	movhi	r3, #48	; 0x30
   143ec:	strbhi	r3, [r9, r4]
   143f0:	add	r3, r2, #2
   143f4:	add	r4, r2, #3
   143f8:	cmp	sl, r3
   143fc:	movhi	r1, #48	; 0x30
   14400:	strbhi	r1, [r9, r3]
   14404:	mov	r3, #0
   14408:	b	136e4 <_obstack_memory_used@@Base+0xba4>
   1440c:	ldr	r3, [sp, #48]	; 0x30
   14410:	str	r3, [sp, #40]	; 0x28
   14414:	b	13cf0 <_obstack_memory_used@@Base+0x11b0>
   14418:	ldr	r2, [sp, #28]
   1441c:	ldrb	r2, [r2, r3]
   14420:	sub	r1, r2, #33	; 0x21
   14424:	cmp	r1, #29
   14428:	ldrls	pc, [pc, r1, lsl #2]
   1442c:	b	13768 <_obstack_memory_used@@Base+0xc28>
   14430:	andeq	r4, r1, r8, lsr #9
   14434:	andeq	r3, r1, r8, ror #14
   14438:	andeq	r3, r1, r8, ror #14
   1443c:	andeq	r3, r1, r8, ror #14
   14440:	andeq	r3, r1, r8, ror #14
   14444:	andeq	r3, r1, r8, ror #14
   14448:	andeq	r4, r1, r8, lsr #9
   1444c:	andeq	r4, r1, r8, lsr #9
   14450:	andeq	r4, r1, r8, lsr #9
   14454:	andeq	r3, r1, r8, ror #14
   14458:	andeq	r3, r1, r8, ror #14
   1445c:	andeq	r3, r1, r8, ror #14
   14460:	andeq	r4, r1, r8, lsr #9
   14464:	andeq	r3, r1, r8, ror #14
   14468:	andeq	r4, r1, r8, lsr #9
   1446c:	andeq	r3, r1, r8, ror #14
   14470:	andeq	r3, r1, r8, ror #14
   14474:	andeq	r3, r1, r8, ror #14
   14478:	andeq	r3, r1, r8, ror #14
   1447c:	andeq	r3, r1, r8, ror #14
   14480:	andeq	r3, r1, r8, ror #14
   14484:	andeq	r3, r1, r8, ror #14
   14488:	andeq	r3, r1, r8, ror #14
   1448c:	andeq	r3, r1, r8, ror #14
   14490:	andeq	r3, r1, r8, ror #14
   14494:	andeq	r3, r1, r8, ror #14
   14498:	andeq	r3, r1, r8, ror #14
   1449c:	andeq	r4, r1, r8, lsr #9
   144a0:	andeq	r4, r1, r8, lsr #9
   144a4:	andeq	r4, r1, r8, lsr #9
   144a8:	ldr	r1, [sp, #44]	; 0x2c
   144ac:	cmp	r1, #0
   144b0:	bne	14710 <_obstack_memory_used@@Base+0x1bd0>
   144b4:	cmp	sl, r4
   144b8:	mov	r7, r3
   144bc:	movhi	r1, #63	; 0x3f
   144c0:	mov	r5, r2
   144c4:	mov	r3, fp
   144c8:	strbhi	r1, [r9, r4]
   144cc:	add	r1, r4, #1
   144d0:	cmp	sl, r1
   144d4:	movhi	r0, #34	; 0x22
   144d8:	strbhi	r0, [r9, r1]
   144dc:	add	r1, r4, #2
   144e0:	cmp	sl, r1
   144e4:	movhi	r0, #34	; 0x22
   144e8:	strbhi	r0, [r9, r1]
   144ec:	add	r1, r4, #3
   144f0:	add	r4, r4, #4
   144f4:	cmp	sl, r1
   144f8:	movhi	r0, #63	; 0x3f
   144fc:	strbhi	r0, [r9, r1]
   14500:	b	136e4 <_obstack_memory_used@@Base+0xba4>
   14504:	mov	fp, r9
   14508:	b	137c4 <_obstack_memory_used@@Base+0xc84>
   1450c:	ldr	r3, [sp, #188]	; 0xbc
   14510:	ldrb	r3, [r3]
   14514:	cmp	r3, #0
   14518:	beq	12e54 <_obstack_memory_used@@Base+0x314>
   1451c:	ldr	r2, [sp, #188]	; 0xbc
   14520:	cmp	sl, r4
   14524:	bls	14544 <_obstack_memory_used@@Base+0x1a04>
   14528:	strb	r3, [fp, r4]
   1452c:	add	r4, r4, #1
   14530:	ldrb	r3, [r2, #1]!
   14534:	cmp	r3, #0
   14538:	beq	12e54 <_obstack_memory_used@@Base+0x314>
   1453c:	cmp	sl, r4
   14540:	bhi	14528 <_obstack_memory_used@@Base+0x19e8>
   14544:	ldrb	r3, [r2, #1]!
   14548:	add	r4, r4, #1
   1454c:	cmp	r3, #0
   14550:	bne	14520 <_obstack_memory_used@@Base+0x19e0>
   14554:	b	12e54 <_obstack_memory_used@@Base+0x314>
   14558:	add	r9, sp, #100	; 0x64
   1455c:	mov	r0, r5
   14560:	ldr	r2, [sp, #60]	; 0x3c
   14564:	mov	r6, #0
   14568:	ldm	r9, {r9, sl, fp}
   1456c:	ldr	r5, [sp, #112]	; 0x70
   14570:	ldr	r4, [sp, #116]	; 0x74
   14574:	b	14224 <_obstack_memory_used@@Base+0x16e4>
   14578:	cmp	r4, r8
   1457c:	add	r9, sp, #100	; 0x64
   14580:	mov	r1, r4
   14584:	mov	r2, fp
   14588:	ldm	r9, {r9, sl, fp}
   1458c:	mov	r3, r5
   14590:	mov	r0, r5
   14594:	ldr	r5, [sp, #112]	; 0x70
   14598:	ldr	r4, [sp, #116]	; 0x74
   1459c:	bcs	145d0 <_obstack_memory_used@@Base+0x1a90>
   145a0:	ldrb	r6, [r2]
   145a4:	cmp	r6, #0
   145a8:	bne	145bc <_obstack_memory_used@@Base+0x1a7c>
   145ac:	b	14708 <_obstack_memory_used@@Base+0x1bc8>
   145b0:	ldrb	r6, [r2, #1]!
   145b4:	cmp	r6, #0
   145b8:	beq	146a0 <_obstack_memory_used@@Base+0x1b60>
   145bc:	add	r3, r3, #1
   145c0:	add	r1, r7, r3
   145c4:	cmp	r8, r1
   145c8:	bhi	145b0 <_obstack_memory_used@@Base+0x1a70>
   145cc:	mov	r0, r3
   145d0:	mov	r6, #0
   145d4:	ldr	r2, [sp, #60]	; 0x3c
   145d8:	b	14224 <_obstack_memory_used@@Base+0x16e4>
   145dc:	mov	r3, #1
   145e0:	mov	r4, #0
   145e4:	mov	r9, r4
   145e8:	str	r3, [sp, #32]
   145ec:	str	r3, [sp, #44]	; 0x2c
   145f0:	str	r3, [sp, #48]	; 0x30
   145f4:	str	r4, [sp, #52]	; 0x34
   145f8:	str	r3, [sp, #56]	; 0x38
   145fc:	str	r3, [sp, #60]	; 0x3c
   14600:	str	r3, [sp, #88]	; 0x58
   14604:	movw	r3, #37716	; 0x9354
   14608:	movt	r3, #1
   1460c:	str	r4, [sp, #64]	; 0x40
   14610:	str	r4, [sp, #68]	; 0x44
   14614:	str	r3, [sp, #72]	; 0x48
   14618:	str	r4, [sp, #80]	; 0x50
   1461c:	str	r4, [sp, #84]	; 0x54
   14620:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   14624:	mov	fp, r9
   14628:	b	137d8 <_obstack_memory_used@@Base+0xc98>
   1462c:	ldr	r3, [sp, #48]	; 0x30
   14630:	b	1414c <_obstack_memory_used@@Base+0x160c>
   14634:	mov	r2, r3
   14638:	ldr	r3, [sp, #72]	; 0x48
   1463c:	cmp	r3, #0
   14640:	moveq	r2, #0
   14644:	andne	r2, r2, #1
   14648:	cmp	r2, #0
   1464c:	beq	1467c <_obstack_memory_used@@Base+0x1b3c>
   14650:	mov	r2, r3
   14654:	ldrb	r3, [r3]
   14658:	cmp	r3, #0
   1465c:	beq	1467c <_obstack_memory_used@@Base+0x1b3c>
   14660:	cmp	sl, r4
   14664:	bls	1468c <_obstack_memory_used@@Base+0x1b4c>
   14668:	strb	r3, [fp, r4]
   1466c:	add	r4, r4, #1
   14670:	ldrb	r3, [r2, #1]!
   14674:	cmp	r3, #0
   14678:	bne	14660 <_obstack_memory_used@@Base+0x1b20>
   1467c:	cmp	sl, r4
   14680:	movhi	r3, #0
   14684:	strbhi	r3, [fp, r4]
   14688:	b	13814 <_obstack_memory_used@@Base+0xcd4>
   1468c:	ldrb	r3, [r2, #1]!
   14690:	add	r4, r4, #1
   14694:	cmp	r3, #0
   14698:	bne	14660 <_obstack_memory_used@@Base+0x1b20>
   1469c:	b	1467c <_obstack_memory_used@@Base+0x1b3c>
   146a0:	mov	r0, r3
   146a4:	ldr	r2, [sp, #60]	; 0x3c
   146a8:	b	14224 <_obstack_memory_used@@Base+0x16e4>
   146ac:	mov	ip, #5
   146b0:	mov	r3, r8
   146b4:	ldr	r1, [sp, #84]	; 0x54
   146b8:	str	ip, [sp]
   146bc:	ldr	r2, [sp, #180]	; 0xb4
   146c0:	ldr	ip, [sp, #188]	; 0xbc
   146c4:	ldr	r0, [sp, #184]	; 0xb8
   146c8:	str	r2, [sp, #4]
   146cc:	ldr	r2, [sp, #28]
   146d0:	str	ip, [sp, #12]
   146d4:	ldr	ip, [sp, #192]	; 0xc0
   146d8:	str	r0, [sp, #8]
   146dc:	mov	r0, fp
   146e0:	str	ip, [sp, #16]
   146e4:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   146e8:	mov	r4, r0
   146ec:	b	13814 <_obstack_memory_used@@Base+0xcd4>
   146f0:	mov	r6, r3
   146f4:	str	r3, [sp, #40]	; 0x28
   146f8:	b	13784 <_obstack_memory_used@@Base+0xc44>
   146fc:	mov	r3, #2
   14700:	str	r3, [sp, #176]	; 0xb0
   14704:	b	137c4 <_obstack_memory_used@@Base+0xc84>
   14708:	ldr	r2, [sp, #60]	; 0x3c
   1470c:	b	14224 <_obstack_memory_used@@Base+0x16e4>
   14710:	mov	r3, #5
   14714:	mov	fp, r9
   14718:	str	r3, [sp, #176]	; 0xb0
   1471c:	b	137d8 <_obstack_memory_used@@Base+0xc98>
   14720:	mov	r1, #1
   14724:	mov	r9, #0
   14728:	mov	r3, r9
   1472c:	mov	r2, r9
   14730:	str	r1, [sp, #32]
   14734:	str	sl, [sp, #84]	; 0x54
   14738:	b	13560 <_obstack_memory_used@@Base+0xa20>
   1473c:	mov	r3, #0
   14740:	mov	r2, #1
   14744:	mov	r9, r3
   14748:	mov	r4, r3
   1474c:	str	r2, [sp, #32]
   14750:	strd	r2, [sp, #44]	; 0x2c
   14754:	strd	r2, [sp, #56]	; 0x38
   14758:	str	r3, [sp, #80]	; 0x50
   1475c:	str	r3, [sp, #84]	; 0x54
   14760:	str	r3, [sp, #88]	; 0x58
   14764:	movw	r3, #37736	; 0x9368
   14768:	movt	r3, #1
   1476c:	str	r2, [sp, #52]	; 0x34
   14770:	str	r2, [sp, #64]	; 0x40
   14774:	str	r2, [sp, #68]	; 0x44
   14778:	str	r3, [sp, #72]	; 0x48
   1477c:	b	12ebc <_obstack_memory_used@@Base+0x37c>
   14780:	bl	10f84 <abort@plt>
   14784:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14788:	mov	r4, r0
   1478c:	mov	r5, r3
   14790:	strd	r6, [sp, #8]
   14794:	movw	r7, #41200	; 0xa0f0
   14798:	movt	r7, #2
   1479c:	strd	r8, [sp, #16]
   147a0:	strd	sl, [sp, #24]
   147a4:	mov	sl, r1
   147a8:	mov	fp, r2
   147ac:	str	lr, [sp, #32]
   147b0:	sub	sp, sp, #60	; 0x3c
   147b4:	bl	10ee8 <__errno_location@plt>
   147b8:	mov	r8, r0
   147bc:	cmn	r4, #-2147483647	; 0x80000001
   147c0:	ldr	r6, [r7]
   147c4:	movne	r0, #0
   147c8:	moveq	r0, #1
   147cc:	ldr	r3, [r8]
   147d0:	orrs	r0, r0, r4, lsr #31
   147d4:	str	r3, [sp, #28]
   147d8:	bne	14968 <_obstack_memory_used@@Base+0x1e28>
   147dc:	ldr	r3, [r7, #4]
   147e0:	cmp	r3, r4
   147e4:	bgt	14844 <_obstack_memory_used@@Base+0x1d04>
   147e8:	add	r1, r7, #8
   147ec:	sub	r2, r4, r3
   147f0:	str	r3, [sp, #52]	; 0x34
   147f4:	cmp	r6, r1
   147f8:	add	r2, r2, #1
   147fc:	beq	14940 <_obstack_memory_used@@Base+0x1e00>
   14800:	mov	r1, #8
   14804:	mov	r0, r6
   14808:	mvn	r3, #-2147483648	; 0x80000000
   1480c:	str	r1, [sp]
   14810:	add	r1, sp, #52	; 0x34
   14814:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   14818:	mov	r6, r0
   1481c:	str	r0, [r7]
   14820:	ldr	r0, [r7, #4]
   14824:	mov	r1, #0
   14828:	ldr	r2, [sp, #52]	; 0x34
   1482c:	sub	r2, r2, r0
   14830:	add	r0, r6, r0, lsl #3
   14834:	lsl	r2, r2, #3
   14838:	bl	10f00 <memset@plt>
   1483c:	ldr	r3, [sp, #52]	; 0x34
   14840:	str	r3, [r7, #4]
   14844:	ldr	r1, [r5, #4]
   14848:	add	r0, r6, r4, lsl #3
   1484c:	add	ip, r5, #8
   14850:	mov	r3, fp
   14854:	mov	r2, sl
   14858:	ldr	r7, [r0, #4]
   1485c:	str	r0, [sp, #36]	; 0x24
   14860:	str	ip, [sp, #40]	; 0x28
   14864:	orr	r0, r1, #1
   14868:	ldr	r9, [r6, r4, lsl #3]
   1486c:	str	ip, [sp, #8]
   14870:	ldr	lr, [r5, #44]	; 0x2c
   14874:	str	r0, [sp, #4]
   14878:	ldr	ip, [r5]
   1487c:	mov	r1, r9
   14880:	str	ip, [sp, #32]
   14884:	ldr	ip, [r5, #40]	; 0x28
   14888:	str	ip, [sp, #12]
   1488c:	ldr	ip, [sp, #32]
   14890:	str	lr, [sp, #16]
   14894:	str	r0, [sp, #44]	; 0x2c
   14898:	mov	r0, r7
   1489c:	str	ip, [sp]
   148a0:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   148a4:	cmp	r9, r0
   148a8:	bhi	14918 <_obstack_memory_used@@Base+0x1dd8>
   148ac:	add	r9, r0, #1
   148b0:	movw	r3, #41356	; 0xa18c
   148b4:	movt	r3, #2
   148b8:	cmp	r7, r3
   148bc:	str	r9, [r6, r4, lsl #3]
   148c0:	beq	148cc <_obstack_memory_used@@Base+0x1d8c>
   148c4:	mov	r0, r7
   148c8:	bl	123a4 <close@plt+0x1414>
   148cc:	mov	r0, r9
   148d0:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   148d4:	ldr	ip, [r5]
   148d8:	mov	r3, fp
   148dc:	mov	r2, sl
   148e0:	mov	r1, r9
   148e4:	mov	r7, r0
   148e8:	ldr	lr, [sp, #36]	; 0x24
   148ec:	ldr	r4, [r5, #40]	; 0x28
   148f0:	str	r0, [lr, #4]
   148f4:	ldr	lr, [r5, #44]	; 0x2c
   148f8:	str	ip, [sp]
   148fc:	ldr	ip, [sp, #44]	; 0x2c
   14900:	str	ip, [sp, #4]
   14904:	ldr	ip, [sp, #40]	; 0x28
   14908:	str	r4, [sp, #12]
   1490c:	str	lr, [sp, #16]
   14910:	str	ip, [sp, #8]
   14914:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14918:	ldr	r3, [sp, #28]
   1491c:	mov	r0, r7
   14920:	str	r3, [r8]
   14924:	add	sp, sp, #60	; 0x3c
   14928:	ldrd	r4, [sp]
   1492c:	ldrd	r6, [sp, #8]
   14930:	ldrd	r8, [sp, #16]
   14934:	ldrd	sl, [sp, #24]
   14938:	add	sp, sp, #32
   1493c:	pop	{pc}		; (ldr pc, [sp], #4)
   14940:	mov	r1, #8
   14944:	mvn	r3, #-2147483648	; 0x80000000
   14948:	str	r1, [sp]
   1494c:	add	r1, sp, #52	; 0x34
   14950:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   14954:	ldrd	r2, [r7, #8]
   14958:	mov	r6, r0
   1495c:	str	r0, [r7]
   14960:	strd	r2, [r0]
   14964:	b	14820 <_obstack_memory_used@@Base+0x1ce0>
   14968:	bl	10f84 <abort@plt>
   1496c:	strd	r4, [sp, #-16]!
   14970:	mov	r5, r0
   14974:	str	r6, [sp, #8]
   14978:	str	lr, [sp, #12]
   1497c:	bl	10ee8 <__errno_location@plt>
   14980:	mov	r4, r0
   14984:	cmp	r5, #0
   14988:	ldr	r0, [pc, #32]	; 149b0 <_obstack_memory_used@@Base+0x1e70>
   1498c:	mov	r1, #48	; 0x30
   14990:	movne	r0, r5
   14994:	ldr	r6, [r4]
   14998:	bl	17244 <_obstack_memory_used@@Base+0x4704>
   1499c:	str	r6, [r4]
   149a0:	ldrd	r4, [sp]
   149a4:	ldr	r6, [sp, #8]
   149a8:	add	sp, sp, #12
   149ac:	pop	{pc}		; (ldr pc, [sp], #4)
   149b0:	andeq	sl, r2, ip, lsl #5
   149b4:	ldr	r3, [pc, #12]	; 149c8 <_obstack_memory_used@@Base+0x1e88>
   149b8:	cmp	r0, #0
   149bc:	moveq	r0, r3
   149c0:	ldr	r0, [r0]
   149c4:	bx	lr
   149c8:	andeq	sl, r2, ip, lsl #5
   149cc:	ldr	r3, [pc, #12]	; 149e0 <_obstack_memory_used@@Base+0x1ea0>
   149d0:	cmp	r0, #0
   149d4:	moveq	r0, r3
   149d8:	str	r1, [r0]
   149dc:	bx	lr
   149e0:	andeq	sl, r2, ip, lsl #5
   149e4:	ldr	r3, [pc, #52]	; 14a20 <_obstack_memory_used@@Base+0x1ee0>
   149e8:	cmp	r0, #0
   149ec:	push	{lr}		; (str lr, [sp, #-4]!)
   149f0:	lsr	lr, r1, #5
   149f4:	and	r1, r1, #31
   149f8:	moveq	r0, r3
   149fc:	add	r3, r0, #8
   14a00:	ldr	ip, [r3, lr, lsl #2]
   14a04:	lsr	r0, ip, r1
   14a08:	eor	r2, r2, r0
   14a0c:	and	r0, r0, #1
   14a10:	and	r2, r2, #1
   14a14:	eor	r1, ip, r2, lsl r1
   14a18:	str	r1, [r3, lr, lsl #2]
   14a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a20:	andeq	sl, r2, ip, lsl #5
   14a24:	ldr	r3, [pc, #16]	; 14a3c <_obstack_memory_used@@Base+0x1efc>
   14a28:	cmp	r0, #0
   14a2c:	movne	r3, r0
   14a30:	ldr	r0, [r3, #4]
   14a34:	str	r1, [r3, #4]
   14a38:	bx	lr
   14a3c:	andeq	sl, r2, ip, lsl #5
   14a40:	ldr	r3, [pc, #48]	; 14a78 <_obstack_memory_used@@Base+0x1f38>
   14a44:	cmp	r0, #0
   14a48:	mov	ip, #10
   14a4c:	moveq	r0, r3
   14a50:	cmp	r2, #0
   14a54:	cmpne	r1, #0
   14a58:	str	ip, [r0]
   14a5c:	beq	14a6c <_obstack_memory_used@@Base+0x1f2c>
   14a60:	str	r1, [r0, #40]	; 0x28
   14a64:	str	r2, [r0, #44]	; 0x2c
   14a68:	bx	lr
   14a6c:	str	r4, [sp, #-8]!
   14a70:	str	lr, [sp, #4]
   14a74:	bl	10f84 <abort@plt>
   14a78:	andeq	sl, r2, ip, lsl #5
   14a7c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14a80:	strd	r6, [sp, #8]
   14a84:	mov	r7, r0
   14a88:	mov	r6, r1
   14a8c:	strd	r8, [sp, #16]
   14a90:	mov	r8, r2
   14a94:	mov	r9, r3
   14a98:	str	lr, [sp, #24]
   14a9c:	sub	sp, sp, #28
   14aa0:	ldr	r4, [sp, #56]	; 0x38
   14aa4:	ldr	ip, [pc, #104]	; 14b14 <_obstack_memory_used@@Base+0x1fd4>
   14aa8:	cmp	r4, #0
   14aac:	moveq	r4, ip
   14ab0:	bl	10ee8 <__errno_location@plt>
   14ab4:	ldr	ip, [r4, #44]	; 0x2c
   14ab8:	mov	r5, r0
   14abc:	mov	r1, r6
   14ac0:	add	lr, r4, #8
   14ac4:	mov	r3, r9
   14ac8:	ldr	r6, [r5]
   14acc:	mov	r2, r8
   14ad0:	mov	r0, r7
   14ad4:	str	ip, [sp, #16]
   14ad8:	ldr	ip, [r4, #40]	; 0x28
   14adc:	str	lr, [sp, #8]
   14ae0:	str	ip, [sp, #12]
   14ae4:	ldr	ip, [r4, #4]
   14ae8:	str	ip, [sp, #4]
   14aec:	ldr	ip, [r4]
   14af0:	str	ip, [sp]
   14af4:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14af8:	str	r6, [r5]
   14afc:	add	sp, sp, #28
   14b00:	ldrd	r4, [sp]
   14b04:	ldrd	r6, [sp, #8]
   14b08:	ldrd	r8, [sp, #16]
   14b0c:	add	sp, sp, #24
   14b10:	pop	{pc}		; (ldr pc, [sp], #4)
   14b14:	andeq	sl, r2, ip, lsl #5
   14b18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14b1c:	cmp	r2, #0
   14b20:	ldr	r4, [pc, #192]	; 14be8 <_obstack_memory_used@@Base+0x20a8>
   14b24:	movne	r4, r2
   14b28:	strd	r6, [sp, #8]
   14b2c:	strd	r8, [sp, #16]
   14b30:	mov	r9, r1
   14b34:	mov	r8, r0
   14b38:	strd	sl, [sp, #24]
   14b3c:	str	lr, [sp, #32]
   14b40:	sub	sp, sp, #36	; 0x24
   14b44:	bl	10ee8 <__errno_location@plt>
   14b48:	ldr	r5, [r4, #4]
   14b4c:	mov	r6, r0
   14b50:	add	r7, r4, #8
   14b54:	mov	r1, #0
   14b58:	mov	r3, r9
   14b5c:	ldr	ip, [r4, #44]	; 0x2c
   14b60:	mov	r2, r8
   14b64:	mov	r0, r1
   14b68:	ldr	sl, [r6]
   14b6c:	orr	r5, r5, #1
   14b70:	str	ip, [sp, #16]
   14b74:	ldr	ip, [r4, #40]	; 0x28
   14b78:	stmib	sp, {r5, r7, ip}
   14b7c:	ldr	ip, [r4]
   14b80:	str	ip, [sp]
   14b84:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14b88:	add	r1, r0, #1
   14b8c:	mov	r0, r1
   14b90:	str	r1, [sp, #28]
   14b94:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   14b98:	ldr	ip, [r4, #44]	; 0x2c
   14b9c:	mov	fp, r0
   14ba0:	mov	r3, r9
   14ba4:	mov	r2, r8
   14ba8:	ldr	r1, [sp, #28]
   14bac:	str	ip, [sp, #16]
   14bb0:	ldr	ip, [r4, #40]	; 0x28
   14bb4:	stmib	sp, {r5, r7, ip}
   14bb8:	ldr	ip, [r4]
   14bbc:	str	ip, [sp]
   14bc0:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14bc4:	mov	r0, fp
   14bc8:	str	sl, [r6]
   14bcc:	add	sp, sp, #36	; 0x24
   14bd0:	ldrd	r4, [sp]
   14bd4:	ldrd	r6, [sp, #8]
   14bd8:	ldrd	r8, [sp, #16]
   14bdc:	ldrd	sl, [sp, #24]
   14be0:	add	sp, sp, #32
   14be4:	pop	{pc}		; (ldr pc, [sp], #4)
   14be8:	andeq	sl, r2, ip, lsl #5
   14bec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14bf0:	cmp	r3, #0
   14bf4:	ldr	r4, [pc, #220]	; 14cd8 <_obstack_memory_used@@Base+0x2198>
   14bf8:	movne	r4, r3
   14bfc:	strd	r6, [sp, #8]
   14c00:	mov	r6, r2
   14c04:	strd	r8, [sp, #16]
   14c08:	mov	r9, r0
   14c0c:	strd	sl, [sp, #24]
   14c10:	mov	sl, r1
   14c14:	str	lr, [sp, #32]
   14c18:	sub	sp, sp, #44	; 0x2c
   14c1c:	bl	10ee8 <__errno_location@plt>
   14c20:	ldr	r5, [r4, #4]
   14c24:	mov	r7, r0
   14c28:	mov	r1, #0
   14c2c:	add	r8, r4, #8
   14c30:	mov	r3, sl
   14c34:	ldr	ip, [r4, #44]	; 0x2c
   14c38:	mov	r2, r9
   14c3c:	mov	r0, r1
   14c40:	ldr	lr, [r7]
   14c44:	cmp	r6, r1
   14c48:	orreq	r5, r5, #1
   14c4c:	str	ip, [sp, #16]
   14c50:	ldr	ip, [r4, #40]	; 0x28
   14c54:	stmib	sp, {r5, r8, ip}
   14c58:	ldr	ip, [r4]
   14c5c:	str	lr, [sp, #28]
   14c60:	str	ip, [sp]
   14c64:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14c68:	add	r1, r0, #1
   14c6c:	mov	fp, r0
   14c70:	mov	r0, r1
   14c74:	str	r1, [sp, #36]	; 0x24
   14c78:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   14c7c:	ldr	ip, [r4, #44]	; 0x2c
   14c80:	mov	r3, sl
   14c84:	mov	r2, r9
   14c88:	ldr	r1, [sp, #36]	; 0x24
   14c8c:	str	ip, [sp, #16]
   14c90:	ldr	ip, [r4, #40]	; 0x28
   14c94:	str	r0, [sp, #32]
   14c98:	stmib	sp, {r5, r8, ip}
   14c9c:	ldr	ip, [r4]
   14ca0:	str	ip, [sp]
   14ca4:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14ca8:	ldr	lr, [sp, #28]
   14cac:	cmp	r6, #0
   14cb0:	ldr	r0, [sp, #32]
   14cb4:	str	lr, [r7]
   14cb8:	strne	fp, [r6]
   14cbc:	add	sp, sp, #44	; 0x2c
   14cc0:	ldrd	r4, [sp]
   14cc4:	ldrd	r6, [sp, #8]
   14cc8:	ldrd	r8, [sp, #16]
   14ccc:	ldrd	sl, [sp, #24]
   14cd0:	add	sp, sp, #32
   14cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cd8:	andeq	sl, r2, ip, lsl #5
   14cdc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14ce0:	movw	r5, #41200	; 0xa0f0
   14ce4:	movt	r5, #2
   14ce8:	ldr	r3, [r5, #4]
   14cec:	strd	r6, [sp, #8]
   14cf0:	str	r8, [sp, #16]
   14cf4:	str	lr, [sp, #20]
   14cf8:	ldr	r7, [r5]
   14cfc:	cmp	r3, #1
   14d00:	ble	14d24 <_obstack_memory_used@@Base+0x21e4>
   14d04:	mov	r4, #1
   14d08:	add	r6, r7, #4
   14d0c:	ldr	r0, [r6, r4, lsl #3]
   14d10:	add	r4, r4, #1
   14d14:	bl	123a4 <close@plt+0x1414>
   14d18:	ldr	r3, [r5, #4]
   14d1c:	cmp	r3, r4
   14d20:	bgt	14d0c <_obstack_memory_used@@Base+0x21cc>
   14d24:	ldr	r0, [r7, #4]
   14d28:	movw	r4, #41356	; 0xa18c
   14d2c:	movt	r4, #2
   14d30:	cmp	r0, r4
   14d34:	beq	14d48 <_obstack_memory_used@@Base+0x2208>
   14d38:	bl	123a4 <close@plt+0x1414>
   14d3c:	mov	r3, #256	; 0x100
   14d40:	str	r3, [r5, #8]
   14d44:	str	r4, [r5, #12]
   14d48:	ldr	r4, [pc, #44]	; 14d7c <_obstack_memory_used@@Base+0x223c>
   14d4c:	cmp	r7, r4
   14d50:	beq	14d60 <_obstack_memory_used@@Base+0x2220>
   14d54:	mov	r0, r7
   14d58:	bl	123a4 <close@plt+0x1414>
   14d5c:	str	r4, [r5]
   14d60:	mov	r3, #1
   14d64:	ldrd	r6, [sp, #8]
   14d68:	str	r3, [r5, #4]
   14d6c:	ldrd	r4, [sp]
   14d70:	ldr	r8, [sp, #16]
   14d74:	add	sp, sp, #20
   14d78:	pop	{pc}		; (ldr pc, [sp], #4)
   14d7c:	strdeq	sl, [r2], -r8
   14d80:	ldr	r3, [pc, #4]	; 14d8c <_obstack_memory_used@@Base+0x224c>
   14d84:	mvn	r2, #0
   14d88:	b	14784 <_obstack_memory_used@@Base+0x1c44>
   14d8c:	andeq	sl, r2, ip, lsl #5
   14d90:	ldr	r3, [pc]	; 14d98 <_obstack_memory_used@@Base+0x2258>
   14d94:	b	14784 <_obstack_memory_used@@Base+0x1c44>
   14d98:	andeq	sl, r2, ip, lsl #5
   14d9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14da0:	movw	r4, #41200	; 0xa0f0
   14da4:	movt	r4, #2
   14da8:	strd	r6, [sp, #8]
   14dac:	strd	r8, [sp, #16]
   14db0:	strd	sl, [sp, #24]
   14db4:	mov	sl, r0
   14db8:	str	lr, [sp, #32]
   14dbc:	sub	sp, sp, #44	; 0x2c
   14dc0:	bl	10ee8 <__errno_location@plt>
   14dc4:	ldr	r3, [r0]
   14dc8:	mov	r8, r0
   14dcc:	ldr	r2, [r4, #4]
   14dd0:	ldr	r5, [r4]
   14dd4:	str	r3, [sp, #28]
   14dd8:	cmp	r2, #0
   14ddc:	bgt	14e38 <_obstack_memory_used@@Base+0x22f8>
   14de0:	add	r3, r4, #8
   14de4:	str	r2, [sp, #36]	; 0x24
   14de8:	rsb	r2, r2, #1
   14dec:	cmp	r5, r3
   14df0:	beq	14f04 <_obstack_memory_used@@Base+0x23c4>
   14df4:	mov	r1, #8
   14df8:	mov	r0, r5
   14dfc:	mvn	r3, #-2147483648	; 0x80000000
   14e00:	str	r1, [sp]
   14e04:	add	r1, sp, #36	; 0x24
   14e08:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   14e0c:	mov	r5, r0
   14e10:	str	r0, [r4]
   14e14:	ldr	r0, [r4, #4]
   14e18:	mov	r1, #0
   14e1c:	ldr	r2, [sp, #36]	; 0x24
   14e20:	sub	r2, r2, r0
   14e24:	add	r0, r5, r0, lsl #3
   14e28:	lsl	r2, r2, #3
   14e2c:	bl	10f00 <memset@plt>
   14e30:	ldr	r3, [sp, #36]	; 0x24
   14e34:	str	r3, [r4, #4]
   14e38:	movw	r4, #41356	; 0xa18c
   14e3c:	movt	r4, #2
   14e40:	ldr	r9, [r5]
   14e44:	add	fp, r4, #264	; 0x108
   14e48:	mvn	r3, #0
   14e4c:	ldr	r7, [r4, #260]	; 0x104
   14e50:	mov	r2, sl
   14e54:	ldr	r6, [r5, #4]
   14e58:	str	fp, [sp, #8]
   14e5c:	mov	r1, r9
   14e60:	ldr	ip, [r4, #256]	; 0x100
   14e64:	orr	r7, r7, #1
   14e68:	ldr	lr, [r4, #300]	; 0x12c
   14e6c:	mov	r0, r6
   14e70:	str	ip, [sp]
   14e74:	str	r7, [sp, #4]
   14e78:	str	lr, [sp, #16]
   14e7c:	ldr	ip, [r4, #296]	; 0x128
   14e80:	str	ip, [sp, #12]
   14e84:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14e88:	cmp	r9, r0
   14e8c:	bhi	14edc <_obstack_memory_used@@Base+0x239c>
   14e90:	add	r9, r0, #1
   14e94:	cmp	r6, r4
   14e98:	str	r9, [r5]
   14e9c:	beq	14ea8 <_obstack_memory_used@@Base+0x2368>
   14ea0:	mov	r0, r6
   14ea4:	bl	123a4 <close@plt+0x1414>
   14ea8:	mov	r0, r9
   14eac:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   14eb0:	ldr	r3, [r4, #256]	; 0x100
   14eb4:	mov	r2, sl
   14eb8:	mov	r1, r9
   14ebc:	mov	r6, r0
   14ec0:	ldr	lr, [r4, #296]	; 0x128
   14ec4:	ldr	ip, [r4, #300]	; 0x12c
   14ec8:	str	r0, [r5, #4]
   14ecc:	stm	sp, {r3, r7, fp, lr}
   14ed0:	mvn	r3, #0
   14ed4:	str	ip, [sp, #16]
   14ed8:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   14edc:	ldr	r3, [sp, #28]
   14ee0:	mov	r0, r6
   14ee4:	str	r3, [r8]
   14ee8:	add	sp, sp, #44	; 0x2c
   14eec:	ldrd	r4, [sp]
   14ef0:	ldrd	r6, [sp, #8]
   14ef4:	ldrd	r8, [sp, #16]
   14ef8:	ldrd	sl, [sp, #24]
   14efc:	add	sp, sp, #32
   14f00:	pop	{pc}		; (ldr pc, [sp], #4)
   14f04:	mov	r0, #8
   14f08:	mvn	r3, #-2147483648	; 0x80000000
   14f0c:	add	r1, sp, #36	; 0x24
   14f10:	str	r0, [sp]
   14f14:	mov	r0, #0
   14f18:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   14f1c:	ldrd	r2, [r4, #8]
   14f20:	mov	r5, r0
   14f24:	str	r0, [r4]
   14f28:	strd	r2, [r0]
   14f2c:	b	14e14 <_obstack_memory_used@@Base+0x22d4>
   14f30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14f34:	movw	r4, #41200	; 0xa0f0
   14f38:	movt	r4, #2
   14f3c:	strd	r6, [sp, #8]
   14f40:	strd	r8, [sp, #16]
   14f44:	strd	sl, [sp, #24]
   14f48:	mov	sl, r0
   14f4c:	mov	fp, r1
   14f50:	str	lr, [sp, #32]
   14f54:	sub	sp, sp, #44	; 0x2c
   14f58:	bl	10ee8 <__errno_location@plt>
   14f5c:	ldr	r3, [r0]
   14f60:	mov	r8, r0
   14f64:	ldr	r2, [r4, #4]
   14f68:	ldr	r5, [r4]
   14f6c:	str	r3, [sp, #28]
   14f70:	cmp	r2, #0
   14f74:	bgt	14fd0 <_obstack_memory_used@@Base+0x2490>
   14f78:	add	r3, r4, #8
   14f7c:	str	r2, [sp, #36]	; 0x24
   14f80:	rsb	r2, r2, #1
   14f84:	cmp	r5, r3
   14f88:	beq	150ac <_obstack_memory_used@@Base+0x256c>
   14f8c:	mov	r1, #8
   14f90:	mov	r0, r5
   14f94:	mvn	r3, #-2147483648	; 0x80000000
   14f98:	str	r1, [sp]
   14f9c:	add	r1, sp, #36	; 0x24
   14fa0:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   14fa4:	mov	r5, r0
   14fa8:	str	r0, [r4]
   14fac:	ldr	r0, [r4, #4]
   14fb0:	mov	r1, #0
   14fb4:	ldr	r2, [sp, #36]	; 0x24
   14fb8:	sub	r2, r2, r0
   14fbc:	add	r0, r5, r0, lsl #3
   14fc0:	lsl	r2, r2, #3
   14fc4:	bl	10f00 <memset@plt>
   14fc8:	ldr	r3, [sp, #36]	; 0x24
   14fcc:	str	r3, [r4, #4]
   14fd0:	movw	r4, #41356	; 0xa18c
   14fd4:	movt	r4, #2
   14fd8:	ldr	r9, [r5]
   14fdc:	add	r0, r4, #264	; 0x108
   14fe0:	mov	r3, fp
   14fe4:	ldr	r7, [r4, #260]	; 0x104
   14fe8:	mov	r2, sl
   14fec:	ldr	r6, [r5, #4]
   14ff0:	str	r0, [sp, #8]
   14ff4:	mov	r1, r9
   14ff8:	ldr	ip, [r4, #256]	; 0x100
   14ffc:	orr	r7, r7, #1
   15000:	ldr	lr, [r4, #300]	; 0x12c
   15004:	mov	r0, r6
   15008:	str	ip, [sp]
   1500c:	str	r7, [sp, #4]
   15010:	str	lr, [sp, #16]
   15014:	ldr	ip, [r4, #296]	; 0x128
   15018:	str	ip, [sp, #12]
   1501c:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15020:	cmp	r9, r0
   15024:	bhi	15084 <_obstack_memory_used@@Base+0x2544>
   15028:	add	r9, r0, #1
   1502c:	cmp	r6, r4
   15030:	str	r9, [r5]
   15034:	beq	15040 <_obstack_memory_used@@Base+0x2500>
   15038:	mov	r0, r6
   1503c:	bl	123a4 <close@plt+0x1414>
   15040:	mov	r0, r9
   15044:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   15048:	ldr	ip, [r4, #256]	; 0x100
   1504c:	mov	r1, r9
   15050:	mov	r3, fp
   15054:	mov	r2, sl
   15058:	mov	r6, r0
   1505c:	ldr	r9, [r4, #296]	; 0x128
   15060:	ldr	lr, [r4, #300]	; 0x12c
   15064:	str	r0, [r5, #4]
   15068:	str	ip, [sp]
   1506c:	ldr	ip, [pc, #100]	; 150d8 <_obstack_memory_used@@Base+0x2598>
   15070:	str	r7, [sp, #4]
   15074:	str	ip, [sp, #8]
   15078:	str	r9, [sp, #12]
   1507c:	str	lr, [sp, #16]
   15080:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15084:	ldr	r3, [sp, #28]
   15088:	mov	r0, r6
   1508c:	str	r3, [r8]
   15090:	add	sp, sp, #44	; 0x2c
   15094:	ldrd	r4, [sp]
   15098:	ldrd	r6, [sp, #8]
   1509c:	ldrd	r8, [sp, #16]
   150a0:	ldrd	sl, [sp, #24]
   150a4:	add	sp, sp, #32
   150a8:	pop	{pc}		; (ldr pc, [sp], #4)
   150ac:	mov	r0, #8
   150b0:	mvn	r3, #-2147483648	; 0x80000000
   150b4:	add	r1, sp, #36	; 0x24
   150b8:	str	r0, [sp]
   150bc:	mov	r0, #0
   150c0:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   150c4:	ldrd	r2, [r4, #8]
   150c8:	mov	r5, r0
   150cc:	str	r0, [r4]
   150d0:	strd	r2, [r0]
   150d4:	b	14fac <_obstack_memory_used@@Base+0x246c>
   150d8:	muleq	r2, r4, r2
   150dc:	strd	r4, [sp, #-20]!	; 0xffffffec
   150e0:	mov	r4, #0
   150e4:	mov	r5, #0
   150e8:	strd	r6, [sp, #8]
   150ec:	cmp	r1, #10
   150f0:	str	lr, [sp, #16]
   150f4:	sub	sp, sp, #100	; 0x64
   150f8:	strd	r4, [sp, #48]	; 0x30
   150fc:	beq	15144 <_obstack_memory_used@@Base+0x2604>
   15100:	mov	r3, sp
   15104:	strd	r4, [sp, #8]
   15108:	str	r1, [sp, #48]	; 0x30
   1510c:	mov	r1, r2
   15110:	mvn	r2, #0
   15114:	ldrd	r6, [sp, #48]	; 0x30
   15118:	strd	r6, [sp]
   1511c:	strd	r4, [sp, #16]
   15120:	strd	r4, [sp, #24]
   15124:	strd	r4, [sp, #32]
   15128:	strd	r4, [sp, #40]	; 0x28
   1512c:	bl	14784 <_obstack_memory_used@@Base+0x1c44>
   15130:	add	sp, sp, #100	; 0x64
   15134:	ldrd	r4, [sp]
   15138:	ldrd	r6, [sp, #8]
   1513c:	add	sp, sp, #16
   15140:	pop	{pc}		; (ldr pc, [sp], #4)
   15144:	bl	10f84 <abort@plt>
   15148:	strd	r4, [sp, #-20]!	; 0xffffffec
   1514c:	mov	r4, #0
   15150:	mov	r5, #0
   15154:	strd	r6, [sp, #8]
   15158:	cmp	r1, #10
   1515c:	str	lr, [sp, #16]
   15160:	sub	sp, sp, #100	; 0x64
   15164:	strd	r4, [sp, #48]	; 0x30
   15168:	beq	151b4 <_obstack_memory_used@@Base+0x2674>
   1516c:	mov	ip, r2
   15170:	mov	r2, r3
   15174:	strd	r4, [sp, #8]
   15178:	str	r1, [sp, #48]	; 0x30
   1517c:	mov	r3, sp
   15180:	mov	r1, ip
   15184:	ldrd	r6, [sp, #48]	; 0x30
   15188:	strd	r6, [sp]
   1518c:	strd	r4, [sp, #16]
   15190:	strd	r4, [sp, #24]
   15194:	strd	r4, [sp, #32]
   15198:	strd	r4, [sp, #40]	; 0x28
   1519c:	bl	14784 <_obstack_memory_used@@Base+0x1c44>
   151a0:	add	sp, sp, #100	; 0x64
   151a4:	ldrd	r4, [sp]
   151a8:	ldrd	r6, [sp, #8]
   151ac:	add	sp, sp, #16
   151b0:	pop	{pc}		; (ldr pc, [sp], #4)
   151b4:	bl	10f84 <abort@plt>
   151b8:	mov	r2, #0
   151bc:	mov	r3, #0
   151c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   151c4:	strd	r6, [sp, #8]
   151c8:	cmp	r0, #10
   151cc:	strd	r8, [sp, #16]
   151d0:	strd	sl, [sp, #24]
   151d4:	str	lr, [sp, #32]
   151d8:	sub	sp, sp, #124	; 0x7c
   151dc:	strd	r2, [sp, #72]	; 0x48
   151e0:	strd	r2, [sp, #80]	; 0x50
   151e4:	strd	r2, [sp, #88]	; 0x58
   151e8:	strd	r2, [sp, #96]	; 0x60
   151ec:	strd	r2, [sp, #104]	; 0x68
   151f0:	strd	r2, [sp, #112]	; 0x70
   151f4:	beq	15398 <_obstack_memory_used@@Base+0x2858>
   151f8:	mov	r6, r1
   151fc:	movw	r4, #41200	; 0xa0f0
   15200:	movt	r4, #2
   15204:	str	r0, [sp, #72]	; 0x48
   15208:	ldrd	r0, [sp, #72]	; 0x48
   1520c:	strd	r0, [sp, #24]
   15210:	strd	r2, [sp, #32]
   15214:	strd	r2, [sp, #40]	; 0x28
   15218:	strd	r2, [sp, #48]	; 0x30
   1521c:	strd	r2, [sp, #56]	; 0x38
   15220:	strd	r2, [sp, #64]	; 0x40
   15224:	bl	10ee8 <__errno_location@plt>
   15228:	mov	r8, r0
   1522c:	ldr	r5, [r4]
   15230:	ldr	r2, [r4, #4]
   15234:	ldr	r9, [r0]
   15238:	cmp	r2, #0
   1523c:	bgt	15298 <_obstack_memory_used@@Base+0x2758>
   15240:	add	r3, r4, #8
   15244:	str	r2, [sp, #72]	; 0x48
   15248:	rsb	r2, r2, #1
   1524c:	cmp	r5, r3
   15250:	beq	1536c <_obstack_memory_used@@Base+0x282c>
   15254:	mov	r3, #8
   15258:	mov	r0, r5
   1525c:	add	r1, sp, #72	; 0x48
   15260:	str	r3, [sp]
   15264:	mvn	r3, #-2147483648	; 0x80000000
   15268:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   1526c:	mov	r5, r0
   15270:	str	r0, [r4]
   15274:	ldr	r0, [r4, #4]
   15278:	mov	r1, #0
   1527c:	ldr	r2, [sp, #72]	; 0x48
   15280:	sub	r2, r2, r0
   15284:	add	r0, r5, r0, lsl #3
   15288:	lsl	r2, r2, #3
   1528c:	bl	10f00 <memset@plt>
   15290:	ldr	r3, [sp, #72]	; 0x48
   15294:	str	r3, [r4, #4]
   15298:	ldr	sl, [r5]
   1529c:	add	r0, sp, #32
   152a0:	mvn	r3, #0
   152a4:	mov	r2, r6
   152a8:	ldr	r7, [sp, #28]
   152ac:	ldr	r4, [r5, #4]
   152b0:	mov	r1, sl
   152b4:	str	r0, [sp, #8]
   152b8:	ldr	lr, [sp, #24]
   152bc:	orr	r7, r7, #1
   152c0:	ldr	ip, [sp, #64]	; 0x40
   152c4:	mov	r0, r4
   152c8:	ldr	fp, [sp, #68]	; 0x44
   152cc:	str	lr, [sp]
   152d0:	str	r7, [sp, #4]
   152d4:	str	ip, [sp, #12]
   152d8:	str	fp, [sp, #16]
   152dc:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   152e0:	cmp	sl, r0
   152e4:	bhi	15348 <_obstack_memory_used@@Base+0x2808>
   152e8:	add	sl, r0, #1
   152ec:	movw	r3, #41356	; 0xa18c
   152f0:	movt	r3, #2
   152f4:	cmp	r4, r3
   152f8:	str	sl, [r5]
   152fc:	beq	15308 <_obstack_memory_used@@Base+0x27c8>
   15300:	mov	r0, r4
   15304:	bl	123a4 <close@plt+0x1414>
   15308:	mov	r0, sl
   1530c:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   15310:	ldr	r3, [sp, #24]
   15314:	mov	r2, r6
   15318:	mov	r1, sl
   1531c:	mov	r4, r0
   15320:	ldr	lr, [sp, #64]	; 0x40
   15324:	ldr	ip, [sp, #68]	; 0x44
   15328:	str	r0, [r5, #4]
   1532c:	add	r5, sp, #32
   15330:	stm	sp, {r3, r7}
   15334:	mvn	r3, #0
   15338:	str	r5, [sp, #8]
   1533c:	str	lr, [sp, #12]
   15340:	str	ip, [sp, #16]
   15344:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15348:	mov	r0, r4
   1534c:	str	r9, [r8]
   15350:	add	sp, sp, #124	; 0x7c
   15354:	ldrd	r4, [sp]
   15358:	ldrd	r6, [sp, #8]
   1535c:	ldrd	r8, [sp, #16]
   15360:	ldrd	sl, [sp, #24]
   15364:	add	sp, sp, #32
   15368:	pop	{pc}		; (ldr pc, [sp], #4)
   1536c:	mov	r0, #8
   15370:	mvn	r3, #-2147483648	; 0x80000000
   15374:	add	r1, sp, #72	; 0x48
   15378:	str	r0, [sp]
   1537c:	mov	r0, #0
   15380:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15384:	ldrd	r2, [r4, #8]
   15388:	mov	r5, r0
   1538c:	str	r0, [r4]
   15390:	strd	r2, [r0]
   15394:	b	15274 <_obstack_memory_used@@Base+0x2734>
   15398:	bl	10f84 <abort@plt>
   1539c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   153a0:	cmp	r0, #10
   153a4:	strd	r6, [sp, #8]
   153a8:	mov	r6, #0
   153ac:	mov	r7, #0
   153b0:	strd	r8, [sp, #16]
   153b4:	strd	sl, [sp, #24]
   153b8:	str	lr, [sp, #32]
   153bc:	sub	sp, sp, #124	; 0x7c
   153c0:	strd	r6, [sp, #72]	; 0x48
   153c4:	strd	r6, [sp, #80]	; 0x50
   153c8:	strd	r6, [sp, #88]	; 0x58
   153cc:	strd	r6, [sp, #96]	; 0x60
   153d0:	strd	r6, [sp, #104]	; 0x68
   153d4:	strd	r6, [sp, #112]	; 0x70
   153d8:	beq	15584 <_obstack_memory_used@@Base+0x2a44>
   153dc:	mov	sl, r2
   153e0:	movw	r5, #41200	; 0xa0f0
   153e4:	movt	r5, #2
   153e8:	str	r0, [sp, #72]	; 0x48
   153ec:	mov	r9, r1
   153f0:	ldrd	r2, [sp, #72]	; 0x48
   153f4:	strd	r2, [sp, #24]
   153f8:	strd	r6, [sp, #32]
   153fc:	strd	r6, [sp, #40]	; 0x28
   15400:	strd	r6, [sp, #48]	; 0x30
   15404:	strd	r6, [sp, #56]	; 0x38
   15408:	strd	r6, [sp, #64]	; 0x40
   1540c:	bl	10ee8 <__errno_location@plt>
   15410:	mov	r7, r0
   15414:	ldr	r4, [r5]
   15418:	ldr	r2, [r5, #4]
   1541c:	ldr	fp, [r0]
   15420:	cmp	r2, #0
   15424:	bgt	15480 <_obstack_memory_used@@Base+0x2940>
   15428:	add	r3, r5, #8
   1542c:	str	r2, [sp, #72]	; 0x48
   15430:	rsb	r2, r2, #1
   15434:	cmp	r4, r3
   15438:	beq	15558 <_obstack_memory_used@@Base+0x2a18>
   1543c:	mov	r3, #8
   15440:	mov	r0, r4
   15444:	add	r1, sp, #72	; 0x48
   15448:	str	r3, [sp]
   1544c:	mvn	r3, #-2147483648	; 0x80000000
   15450:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15454:	mov	r4, r0
   15458:	str	r0, [r5]
   1545c:	ldr	r0, [r5, #4]
   15460:	mov	r1, #0
   15464:	ldr	r2, [sp, #72]	; 0x48
   15468:	sub	r2, r2, r0
   1546c:	add	r0, r4, r0, lsl #3
   15470:	lsl	r2, r2, #3
   15474:	bl	10f00 <memset@plt>
   15478:	ldr	r3, [sp, #72]	; 0x48
   1547c:	str	r3, [r5, #4]
   15480:	ldr	ip, [sp, #24]
   15484:	add	r0, sp, #32
   15488:	mov	r3, sl
   1548c:	mov	r2, r9
   15490:	ldr	r6, [sp, #28]
   15494:	ldr	r8, [r4]
   15498:	ldr	r5, [r4, #4]
   1549c:	str	ip, [sp]
   154a0:	orr	r6, r6, #1
   154a4:	ldr	ip, [sp, #64]	; 0x40
   154a8:	mov	r1, r8
   154ac:	str	r6, [sp, #4]
   154b0:	ldr	lr, [sp, #68]	; 0x44
   154b4:	str	r0, [sp, #8]
   154b8:	mov	r0, r5
   154bc:	str	ip, [sp, #12]
   154c0:	str	lr, [sp, #16]
   154c4:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   154c8:	cmp	r8, r0
   154cc:	bhi	15534 <_obstack_memory_used@@Base+0x29f4>
   154d0:	add	r8, r0, #1
   154d4:	movw	r3, #41356	; 0xa18c
   154d8:	movt	r3, #2
   154dc:	cmp	r5, r3
   154e0:	str	r8, [r4]
   154e4:	beq	154f0 <_obstack_memory_used@@Base+0x29b0>
   154e8:	mov	r0, r5
   154ec:	bl	123a4 <close@plt+0x1414>
   154f0:	mov	r0, r8
   154f4:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   154f8:	ldr	lr, [sp, #24]
   154fc:	mov	r1, r8
   15500:	mov	r3, sl
   15504:	mov	r2, r9
   15508:	mov	r5, r0
   1550c:	ldr	r8, [sp, #64]	; 0x40
   15510:	ldr	ip, [sp, #68]	; 0x44
   15514:	str	r0, [r4, #4]
   15518:	str	lr, [sp]
   1551c:	add	lr, sp, #32
   15520:	str	r6, [sp, #4]
   15524:	str	lr, [sp, #8]
   15528:	str	r8, [sp, #12]
   1552c:	str	ip, [sp, #16]
   15530:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15534:	mov	r0, r5
   15538:	str	fp, [r7]
   1553c:	add	sp, sp, #124	; 0x7c
   15540:	ldrd	r4, [sp]
   15544:	ldrd	r6, [sp, #8]
   15548:	ldrd	r8, [sp, #16]
   1554c:	ldrd	sl, [sp, #24]
   15550:	add	sp, sp, #32
   15554:	pop	{pc}		; (ldr pc, [sp], #4)
   15558:	mov	r0, #8
   1555c:	mvn	r3, #-2147483648	; 0x80000000
   15560:	add	r1, sp, #72	; 0x48
   15564:	str	r0, [sp]
   15568:	mov	r0, #0
   1556c:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15570:	ldrd	r2, [r5, #8]
   15574:	mov	r4, r0
   15578:	str	r0, [r5]
   1557c:	strd	r2, [r0]
   15580:	b	1545c <_obstack_memory_used@@Base+0x291c>
   15584:	bl	10f84 <abort@plt>
   15588:	ldr	r3, [pc, #492]	; 1577c <_obstack_memory_used@@Base+0x2c3c>
   1558c:	lsr	ip, r2, #5
   15590:	and	r2, r2, #31
   15594:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15598:	movw	r5, #41200	; 0xa0f0
   1559c:	movt	r5, #2
   155a0:	strd	r6, [sp, #8]
   155a4:	strd	r8, [sp, #16]
   155a8:	strd	sl, [sp, #24]
   155ac:	mov	sl, r0
   155b0:	mov	fp, r1
   155b4:	ldrd	r0, [r3]
   155b8:	str	lr, [sp, #32]
   155bc:	sub	sp, sp, #92	; 0x5c
   155c0:	ldrd	r8, [r3, #8]
   155c4:	add	r6, sp, #48	; 0x30
   155c8:	strd	r0, [sp, #40]	; 0x28
   155cc:	ldrd	r0, [r3, #16]
   155d0:	strd	r8, [sp, #48]	; 0x30
   155d4:	ldrd	r8, [r3, #24]
   155d8:	strd	r0, [sp, #56]	; 0x38
   155dc:	ldrd	r0, [r3, #32]
   155e0:	strd	r8, [sp, #64]	; 0x40
   155e4:	ldrd	r8, [r3, #40]	; 0x28
   155e8:	strd	r0, [sp, #72]	; 0x48
   155ec:	strd	r8, [sp, #80]	; 0x50
   155f0:	ldr	r3, [r6, ip, lsl #2]
   155f4:	mvn	r1, r3, lsr r2
   155f8:	and	r1, r1, #1
   155fc:	eor	r2, r3, r1, lsl r2
   15600:	str	r2, [r6, ip, lsl #2]
   15604:	bl	10ee8 <__errno_location@plt>
   15608:	ldr	r3, [r0]
   1560c:	mov	r8, r0
   15610:	ldr	r2, [r5, #4]
   15614:	ldr	r4, [r5]
   15618:	str	r3, [sp, #28]
   1561c:	cmp	r2, #0
   15620:	bgt	1567c <_obstack_memory_used@@Base+0x2b3c>
   15624:	add	r3, r5, #8
   15628:	str	r2, [sp, #36]	; 0x24
   1562c:	rsb	r2, r2, #1
   15630:	cmp	r4, r3
   15634:	beq	15750 <_obstack_memory_used@@Base+0x2c10>
   15638:	mov	r1, #8
   1563c:	mov	r0, r4
   15640:	mvn	r3, #-2147483648	; 0x80000000
   15644:	str	r1, [sp]
   15648:	add	r1, sp, #36	; 0x24
   1564c:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15650:	mov	r4, r0
   15654:	str	r0, [r5]
   15658:	ldr	r0, [r5, #4]
   1565c:	mov	r1, #0
   15660:	ldr	r2, [sp, #36]	; 0x24
   15664:	sub	r2, r2, r0
   15668:	add	r0, r4, r0, lsl #3
   1566c:	lsl	r2, r2, #3
   15670:	bl	10f00 <memset@plt>
   15674:	ldr	r3, [sp, #36]	; 0x24
   15678:	str	r3, [r5, #4]
   1567c:	ldr	ip, [sp, #40]	; 0x28
   15680:	mov	r3, fp
   15684:	mov	r2, sl
   15688:	ldr	r7, [sp, #44]	; 0x2c
   1568c:	ldr	r9, [r4]
   15690:	ldr	r5, [r4, #4]
   15694:	str	ip, [sp]
   15698:	orr	r7, r7, #1
   1569c:	ldr	ip, [sp, #80]	; 0x50
   156a0:	mov	r1, r9
   156a4:	str	r7, [sp, #4]
   156a8:	ldr	lr, [sp, #84]	; 0x54
   156ac:	mov	r0, r5
   156b0:	str	r6, [sp, #8]
   156b4:	str	ip, [sp, #12]
   156b8:	str	lr, [sp, #16]
   156bc:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   156c0:	cmp	r9, r0
   156c4:	bhi	15728 <_obstack_memory_used@@Base+0x2be8>
   156c8:	add	r9, r0, #1
   156cc:	movw	r3, #41356	; 0xa18c
   156d0:	movt	r3, #2
   156d4:	cmp	r5, r3
   156d8:	str	r9, [r4]
   156dc:	beq	156e8 <_obstack_memory_used@@Base+0x2ba8>
   156e0:	mov	r0, r5
   156e4:	bl	123a4 <close@plt+0x1414>
   156e8:	mov	r0, r9
   156ec:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   156f0:	mov	r1, r9
   156f4:	ldr	ip, [sp, #40]	; 0x28
   156f8:	mov	r3, fp
   156fc:	mov	r2, sl
   15700:	mov	r5, r0
   15704:	ldr	r9, [sp, #80]	; 0x50
   15708:	ldr	lr, [sp, #84]	; 0x54
   1570c:	str	r0, [r4, #4]
   15710:	str	ip, [sp]
   15714:	str	r7, [sp, #4]
   15718:	str	r6, [sp, #8]
   1571c:	str	r9, [sp, #12]
   15720:	str	lr, [sp, #16]
   15724:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15728:	ldr	r3, [sp, #28]
   1572c:	mov	r0, r5
   15730:	str	r3, [r8]
   15734:	add	sp, sp, #92	; 0x5c
   15738:	ldrd	r4, [sp]
   1573c:	ldrd	r6, [sp, #8]
   15740:	ldrd	r8, [sp, #16]
   15744:	ldrd	sl, [sp, #24]
   15748:	add	sp, sp, #32
   1574c:	pop	{pc}		; (ldr pc, [sp], #4)
   15750:	mov	r0, #8
   15754:	mvn	r3, #-2147483648	; 0x80000000
   15758:	add	r1, sp, #36	; 0x24
   1575c:	str	r0, [sp]
   15760:	mov	r0, #0
   15764:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15768:	ldrd	r2, [r5, #8]
   1576c:	mov	r4, r0
   15770:	str	r0, [r5]
   15774:	strd	r2, [r0]
   15778:	b	15658 <_obstack_memory_used@@Base+0x2b18>
   1577c:	andeq	sl, r2, ip, lsl #5
   15780:	ldr	ip, [pc, #476]	; 15964 <_obstack_memory_used@@Base+0x2e24>
   15784:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15788:	movw	r4, #41200	; 0xa0f0
   1578c:	movt	r4, #2
   15790:	ldrd	r2, [ip, #8]
   15794:	strd	r6, [sp, #8]
   15798:	lsr	r7, r1, #5
   1579c:	mov	r6, r0
   157a0:	strd	r8, [sp, #16]
   157a4:	str	lr, [sp, #32]
   157a8:	and	lr, r1, #31
   157ac:	ldrd	r0, [ip]
   157b0:	strd	sl, [sp, #24]
   157b4:	sub	sp, sp, #84	; 0x54
   157b8:	add	r5, sp, #40	; 0x28
   157bc:	strd	r0, [sp, #32]
   157c0:	strd	r2, [sp, #40]	; 0x28
   157c4:	ldrd	r0, [ip, #16]
   157c8:	ldrd	r2, [ip, #24]
   157cc:	strd	r0, [sp, #48]	; 0x30
   157d0:	ldrd	r0, [ip, #32]
   157d4:	strd	r2, [sp, #56]	; 0x38
   157d8:	ldrd	r2, [ip, #40]	; 0x28
   157dc:	strd	r0, [sp, #64]	; 0x40
   157e0:	strd	r2, [sp, #72]	; 0x48
   157e4:	ldr	r1, [r5, r7, lsl #2]
   157e8:	mvn	r3, r1, lsr lr
   157ec:	and	r3, r3, #1
   157f0:	eor	r1, r1, r3, lsl lr
   157f4:	str	r1, [r5, r7, lsl #2]
   157f8:	bl	10ee8 <__errno_location@plt>
   157fc:	mov	r9, r0
   15800:	ldr	sl, [r0]
   15804:	ldr	r2, [r4, #4]
   15808:	ldr	r7, [r4]
   1580c:	cmp	r2, #0
   15810:	bgt	1586c <_obstack_memory_used@@Base+0x2d2c>
   15814:	add	r3, r4, #8
   15818:	str	r2, [sp, #28]
   1581c:	rsb	r2, r2, #1
   15820:	cmp	r7, r3
   15824:	beq	15938 <_obstack_memory_used@@Base+0x2df8>
   15828:	mov	r1, #8
   1582c:	mov	r0, r7
   15830:	mvn	r3, #-2147483648	; 0x80000000
   15834:	str	r1, [sp]
   15838:	add	r1, sp, #28
   1583c:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15840:	mov	r7, r0
   15844:	str	r0, [r4]
   15848:	ldr	r0, [r4, #4]
   1584c:	mov	r1, #0
   15850:	ldr	r2, [sp, #28]
   15854:	sub	r2, r2, r0
   15858:	add	r0, r7, r0, lsl #3
   1585c:	lsl	r2, r2, #3
   15860:	bl	10f00 <memset@plt>
   15864:	ldr	r3, [sp, #28]
   15868:	str	r3, [r4, #4]
   1586c:	ldr	ip, [sp, #32]
   15870:	mvn	r3, #0
   15874:	mov	r2, r6
   15878:	ldr	r8, [sp, #36]	; 0x24
   1587c:	ldr	fp, [r7]
   15880:	ldr	r4, [r7, #4]
   15884:	str	ip, [sp]
   15888:	orr	r8, r8, #1
   1588c:	ldr	ip, [sp, #72]	; 0x48
   15890:	mov	r1, fp
   15894:	str	r8, [sp, #4]
   15898:	ldr	lr, [sp, #76]	; 0x4c
   1589c:	mov	r0, r4
   158a0:	str	r5, [sp, #8]
   158a4:	str	ip, [sp, #12]
   158a8:	str	lr, [sp, #16]
   158ac:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   158b0:	cmp	fp, r0
   158b4:	bhi	15914 <_obstack_memory_used@@Base+0x2dd4>
   158b8:	add	fp, r0, #1
   158bc:	movw	r3, #41356	; 0xa18c
   158c0:	movt	r3, #2
   158c4:	cmp	r4, r3
   158c8:	str	fp, [r7]
   158cc:	beq	158d8 <_obstack_memory_used@@Base+0x2d98>
   158d0:	mov	r0, r4
   158d4:	bl	123a4 <close@plt+0x1414>
   158d8:	mov	r0, fp
   158dc:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   158e0:	ldr	r3, [sp, #32]
   158e4:	mov	r2, r6
   158e8:	mov	r1, fp
   158ec:	mov	r4, r0
   158f0:	ldr	lr, [sp, #72]	; 0x48
   158f4:	ldr	ip, [sp, #76]	; 0x4c
   158f8:	str	r0, [r7, #4]
   158fc:	stm	sp, {r3, r8}
   15900:	mvn	r3, #0
   15904:	str	r5, [sp, #8]
   15908:	str	lr, [sp, #12]
   1590c:	str	ip, [sp, #16]
   15910:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15914:	mov	r0, r4
   15918:	str	sl, [r9]
   1591c:	add	sp, sp, #84	; 0x54
   15920:	ldrd	r4, [sp]
   15924:	ldrd	r6, [sp, #8]
   15928:	ldrd	r8, [sp, #16]
   1592c:	ldrd	sl, [sp, #24]
   15930:	add	sp, sp, #32
   15934:	pop	{pc}		; (ldr pc, [sp], #4)
   15938:	mov	r0, #8
   1593c:	mvn	r3, #-2147483648	; 0x80000000
   15940:	add	r1, sp, #28
   15944:	str	r0, [sp]
   15948:	mov	r0, #0
   1594c:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15950:	ldrd	r2, [r4, #8]
   15954:	mov	r7, r0
   15958:	str	r0, [r4]
   1595c:	strd	r2, [r0]
   15960:	b	15848 <_obstack_memory_used@@Base+0x2d08>
   15964:	andeq	sl, r2, ip, lsl #5
   15968:	ldr	ip, [pc, #472]	; 15b48 <_obstack_memory_used@@Base+0x3008>
   1596c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15970:	mov	r5, r0
   15974:	movw	r4, #41200	; 0xa0f0
   15978:	movt	r4, #2
   1597c:	ldrd	r2, [ip]
   15980:	ldrd	r0, [ip, #8]
   15984:	strd	r6, [sp, #8]
   15988:	strd	r8, [sp, #16]
   1598c:	strd	sl, [sp, #24]
   15990:	str	lr, [sp, #32]
   15994:	sub	sp, sp, #84	; 0x54
   15998:	strd	r2, [sp, #32]
   1599c:	strd	r0, [sp, #40]	; 0x28
   159a0:	ldr	r6, [sp, #44]	; 0x2c
   159a4:	ldrd	r2, [ip, #16]
   159a8:	ldrd	r0, [ip, #24]
   159ac:	mvn	lr, r6
   159b0:	and	lr, lr, #67108864	; 0x4000000
   159b4:	eor	lr, lr, r6
   159b8:	ldrd	r6, [ip, #40]	; 0x28
   159bc:	strd	r2, [sp, #48]	; 0x30
   159c0:	ldrd	r2, [ip, #32]
   159c4:	str	lr, [sp, #44]	; 0x2c
   159c8:	strd	r0, [sp, #56]	; 0x38
   159cc:	strd	r2, [sp, #64]	; 0x40
   159d0:	strd	r6, [sp, #72]	; 0x48
   159d4:	bl	10ee8 <__errno_location@plt>
   159d8:	mov	r8, r0
   159dc:	ldr	r9, [r0]
   159e0:	ldr	r2, [r4, #4]
   159e4:	ldr	r6, [r4]
   159e8:	cmp	r2, #0
   159ec:	bgt	15a48 <_obstack_memory_used@@Base+0x2f08>
   159f0:	add	r3, r4, #8
   159f4:	str	r2, [sp, #28]
   159f8:	rsb	r2, r2, #1
   159fc:	cmp	r6, r3
   15a00:	beq	15b1c <_obstack_memory_used@@Base+0x2fdc>
   15a04:	mov	r1, #8
   15a08:	mov	r0, r6
   15a0c:	mvn	r3, #-2147483648	; 0x80000000
   15a10:	str	r1, [sp]
   15a14:	add	r1, sp, #28
   15a18:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15a1c:	mov	r6, r0
   15a20:	str	r0, [r4]
   15a24:	ldr	r0, [r4, #4]
   15a28:	mov	r1, #0
   15a2c:	ldr	r2, [sp, #28]
   15a30:	sub	r2, r2, r0
   15a34:	add	r0, r6, r0, lsl #3
   15a38:	lsl	r2, r2, #3
   15a3c:	bl	10f00 <memset@plt>
   15a40:	ldr	r3, [sp, #28]
   15a44:	str	r3, [r4, #4]
   15a48:	ldr	sl, [r6]
   15a4c:	add	r0, sp, #40	; 0x28
   15a50:	mvn	r3, #0
   15a54:	mov	r2, r5
   15a58:	ldr	r7, [sp, #36]	; 0x24
   15a5c:	ldr	r4, [r6, #4]
   15a60:	mov	r1, sl
   15a64:	str	r0, [sp, #8]
   15a68:	ldr	lr, [sp, #32]
   15a6c:	orr	r7, r7, #1
   15a70:	ldr	ip, [sp, #72]	; 0x48
   15a74:	mov	r0, r4
   15a78:	ldr	fp, [sp, #76]	; 0x4c
   15a7c:	str	lr, [sp]
   15a80:	str	r7, [sp, #4]
   15a84:	str	ip, [sp, #12]
   15a88:	str	fp, [sp, #16]
   15a8c:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15a90:	cmp	sl, r0
   15a94:	bhi	15af8 <_obstack_memory_used@@Base+0x2fb8>
   15a98:	add	sl, r0, #1
   15a9c:	movw	r3, #41356	; 0xa18c
   15aa0:	movt	r3, #2
   15aa4:	cmp	r4, r3
   15aa8:	str	sl, [r6]
   15aac:	beq	15ab8 <_obstack_memory_used@@Base+0x2f78>
   15ab0:	mov	r0, r4
   15ab4:	bl	123a4 <close@plt+0x1414>
   15ab8:	mov	r0, sl
   15abc:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   15ac0:	ldr	r3, [sp, #32]
   15ac4:	mov	r2, r5
   15ac8:	add	r5, sp, #40	; 0x28
   15acc:	mov	r1, sl
   15ad0:	mov	r4, r0
   15ad4:	ldr	lr, [sp, #72]	; 0x48
   15ad8:	ldr	ip, [sp, #76]	; 0x4c
   15adc:	str	r0, [r6, #4]
   15ae0:	stm	sp, {r3, r7}
   15ae4:	mvn	r3, #0
   15ae8:	str	r5, [sp, #8]
   15aec:	str	lr, [sp, #12]
   15af0:	str	ip, [sp, #16]
   15af4:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15af8:	mov	r0, r4
   15afc:	str	r9, [r8]
   15b00:	add	sp, sp, #84	; 0x54
   15b04:	ldrd	r4, [sp]
   15b08:	ldrd	r6, [sp, #8]
   15b0c:	ldrd	r8, [sp, #16]
   15b10:	ldrd	sl, [sp, #24]
   15b14:	add	sp, sp, #32
   15b18:	pop	{pc}		; (ldr pc, [sp], #4)
   15b1c:	mov	r0, #8
   15b20:	mvn	r3, #-2147483648	; 0x80000000
   15b24:	add	r1, sp, #28
   15b28:	str	r0, [sp]
   15b2c:	mov	r0, #0
   15b30:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15b34:	ldrd	r2, [r4, #8]
   15b38:	mov	r6, r0
   15b3c:	str	r0, [r4]
   15b40:	strd	r2, [r0]
   15b44:	b	15a24 <_obstack_memory_used@@Base+0x2ee4>
   15b48:	andeq	sl, r2, ip, lsl #5
   15b4c:	ldr	ip, [pc, #480]	; 15d34 <_obstack_memory_used@@Base+0x31f4>
   15b50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15b54:	mov	r5, r0
   15b58:	movw	r4, #41200	; 0xa0f0
   15b5c:	movt	r4, #2
   15b60:	ldrd	r2, [ip]
   15b64:	strd	r6, [sp, #8]
   15b68:	mov	r6, r1
   15b6c:	ldrd	r0, [ip, #8]
   15b70:	strd	r8, [sp, #16]
   15b74:	strd	sl, [sp, #24]
   15b78:	str	lr, [sp, #32]
   15b7c:	sub	sp, sp, #84	; 0x54
   15b80:	ldrd	r8, [ip, #40]	; 0x28
   15b84:	strd	r2, [sp, #32]
   15b88:	strd	r0, [sp, #40]	; 0x28
   15b8c:	ldrd	r2, [ip, #16]
   15b90:	ldr	r7, [sp, #44]	; 0x2c
   15b94:	ldrd	r0, [ip, #24]
   15b98:	strd	r2, [sp, #48]	; 0x30
   15b9c:	ldrd	r2, [ip, #32]
   15ba0:	mvn	lr, r7
   15ba4:	and	lr, lr, #67108864	; 0x4000000
   15ba8:	eor	lr, lr, r7
   15bac:	str	lr, [sp, #44]	; 0x2c
   15bb0:	strd	r0, [sp, #56]	; 0x38
   15bb4:	strd	r2, [sp, #64]	; 0x40
   15bb8:	strd	r8, [sp, #72]	; 0x48
   15bbc:	bl	10ee8 <__errno_location@plt>
   15bc0:	mov	r9, r0
   15bc4:	ldr	sl, [r0]
   15bc8:	ldr	r2, [r4, #4]
   15bcc:	ldr	r7, [r4]
   15bd0:	cmp	r2, #0
   15bd4:	bgt	15c30 <_obstack_memory_used@@Base+0x30f0>
   15bd8:	add	r3, r4, #8
   15bdc:	str	r2, [sp, #28]
   15be0:	rsb	r2, r2, #1
   15be4:	cmp	r7, r3
   15be8:	beq	15d08 <_obstack_memory_used@@Base+0x31c8>
   15bec:	mov	r1, #8
   15bf0:	mov	r0, r7
   15bf4:	mvn	r3, #-2147483648	; 0x80000000
   15bf8:	str	r1, [sp]
   15bfc:	add	r1, sp, #28
   15c00:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15c04:	mov	r7, r0
   15c08:	str	r0, [r4]
   15c0c:	ldr	r0, [r4, #4]
   15c10:	mov	r1, #0
   15c14:	ldr	r2, [sp, #28]
   15c18:	sub	r2, r2, r0
   15c1c:	add	r0, r7, r0, lsl #3
   15c20:	lsl	r2, r2, #3
   15c24:	bl	10f00 <memset@plt>
   15c28:	ldr	r3, [sp, #28]
   15c2c:	str	r3, [r4, #4]
   15c30:	ldr	ip, [sp, #32]
   15c34:	add	r0, sp, #40	; 0x28
   15c38:	mov	r3, r6
   15c3c:	mov	r2, r5
   15c40:	ldr	r8, [sp, #36]	; 0x24
   15c44:	ldr	fp, [r7]
   15c48:	ldr	r4, [r7, #4]
   15c4c:	str	ip, [sp]
   15c50:	orr	r8, r8, #1
   15c54:	ldr	ip, [sp, #72]	; 0x48
   15c58:	mov	r1, fp
   15c5c:	str	r8, [sp, #4]
   15c60:	ldr	lr, [sp, #76]	; 0x4c
   15c64:	str	r0, [sp, #8]
   15c68:	mov	r0, r4
   15c6c:	str	ip, [sp, #12]
   15c70:	str	lr, [sp, #16]
   15c74:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15c78:	cmp	fp, r0
   15c7c:	bhi	15ce4 <_obstack_memory_used@@Base+0x31a4>
   15c80:	add	fp, r0, #1
   15c84:	movw	r3, #41356	; 0xa18c
   15c88:	movt	r3, #2
   15c8c:	cmp	r4, r3
   15c90:	str	fp, [r7]
   15c94:	beq	15ca0 <_obstack_memory_used@@Base+0x3160>
   15c98:	mov	r0, r4
   15c9c:	bl	123a4 <close@plt+0x1414>
   15ca0:	mov	r0, fp
   15ca4:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   15ca8:	ldr	lr, [sp, #32]
   15cac:	mov	r2, r5
   15cb0:	mov	r3, r6
   15cb4:	mov	r1, fp
   15cb8:	mov	r4, r0
   15cbc:	ldr	r5, [sp, #72]	; 0x48
   15cc0:	ldr	ip, [sp, #76]	; 0x4c
   15cc4:	str	r0, [r7, #4]
   15cc8:	str	lr, [sp]
   15ccc:	add	lr, sp, #40	; 0x28
   15cd0:	str	r8, [sp, #4]
   15cd4:	str	lr, [sp, #8]
   15cd8:	str	r5, [sp, #12]
   15cdc:	str	ip, [sp, #16]
   15ce0:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   15ce4:	mov	r0, r4
   15ce8:	str	sl, [r9]
   15cec:	add	sp, sp, #84	; 0x54
   15cf0:	ldrd	r4, [sp]
   15cf4:	ldrd	r6, [sp, #8]
   15cf8:	ldrd	r8, [sp, #16]
   15cfc:	ldrd	sl, [sp, #24]
   15d00:	add	sp, sp, #32
   15d04:	pop	{pc}		; (ldr pc, [sp], #4)
   15d08:	mov	r0, #8
   15d0c:	mvn	r3, #-2147483648	; 0x80000000
   15d10:	add	r1, sp, #28
   15d14:	str	r0, [sp]
   15d18:	mov	r0, #0
   15d1c:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15d20:	ldrd	r2, [r4, #8]
   15d24:	mov	r7, r0
   15d28:	str	r0, [r4]
   15d2c:	strd	r2, [r0]
   15d30:	b	15c0c <_obstack_memory_used@@Base+0x30cc>
   15d34:	andeq	sl, r2, ip, lsl #5
   15d38:	strd	r4, [sp, #-12]!
   15d3c:	mov	r4, #0
   15d40:	mov	r5, #0
   15d44:	str	lr, [sp, #8]
   15d48:	sub	sp, sp, #100	; 0x64
   15d4c:	cmp	r1, #10
   15d50:	strd	r4, [sp]
   15d54:	strd	r4, [sp, #8]
   15d58:	strd	r4, [sp, #16]
   15d5c:	strd	r4, [sp, #24]
   15d60:	strd	r4, [sp, #32]
   15d64:	strd	r4, [sp, #40]	; 0x28
   15d68:	beq	15d98 <_obstack_memory_used@@Base+0x3258>
   15d6c:	mov	ip, #67108864	; 0x4000000
   15d70:	mov	r3, sp
   15d74:	str	r1, [sp]
   15d78:	mov	r1, r2
   15d7c:	mvn	r2, #0
   15d80:	str	ip, [sp, #12]
   15d84:	bl	14784 <_obstack_memory_used@@Base+0x1c44>
   15d88:	add	sp, sp, #100	; 0x64
   15d8c:	ldrd	r4, [sp]
   15d90:	add	sp, sp, #8
   15d94:	pop	{pc}		; (ldr pc, [sp], #4)
   15d98:	bl	10f84 <abort@plt>
   15d9c:	ldr	ip, [pc, #156]	; 15e40 <_obstack_memory_used@@Base+0x3300>
   15da0:	cmp	r2, #0
   15da4:	cmpne	r1, #0
   15da8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15dac:	strd	r6, [sp, #8]
   15db0:	mov	r6, r2
   15db4:	str	r8, [sp, #16]
   15db8:	mov	r8, r3
   15dbc:	strd	sl, [sp, #20]
   15dc0:	ldrd	r4, [ip]
   15dc4:	str	lr, [sp, #28]
   15dc8:	sub	sp, sp, #48	; 0x30
   15dcc:	mov	lr, #10
   15dd0:	ldrd	r2, [ip, #8]
   15dd4:	ldrd	sl, [ip, #16]
   15dd8:	strd	r4, [sp]
   15ddc:	ldrd	r4, [ip, #32]
   15de0:	str	lr, [sp]
   15de4:	strd	r2, [sp, #8]
   15de8:	strd	sl, [sp, #16]
   15dec:	ldrd	r2, [ip, #24]
   15df0:	ldrd	sl, [ip, #40]	; 0x28
   15df4:	strd	r2, [sp, #24]
   15df8:	strd	r4, [sp, #32]
   15dfc:	strd	sl, [sp, #40]	; 0x28
   15e00:	beq	15e3c <_obstack_memory_used@@Base+0x32fc>
   15e04:	mov	r7, r1
   15e08:	mov	r3, sp
   15e0c:	mov	r1, r8
   15e10:	mvn	r2, #0
   15e14:	str	r7, [sp, #40]	; 0x28
   15e18:	str	r6, [sp, #44]	; 0x2c
   15e1c:	bl	14784 <_obstack_memory_used@@Base+0x1c44>
   15e20:	add	sp, sp, #48	; 0x30
   15e24:	ldrd	r4, [sp]
   15e28:	ldrd	r6, [sp, #8]
   15e2c:	ldr	r8, [sp, #16]
   15e30:	ldrd	sl, [sp, #20]
   15e34:	add	sp, sp, #28
   15e38:	pop	{pc}		; (ldr pc, [sp], #4)
   15e3c:	bl	10f84 <abort@plt>
   15e40:	andeq	sl, r2, ip, lsl #5
   15e44:	ldr	ip, [pc, #156]	; 15ee8 <_obstack_memory_used@@Base+0x33a8>
   15e48:	cmp	r2, #0
   15e4c:	cmpne	r1, #0
   15e50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15e54:	strd	r6, [sp, #8]
   15e58:	mov	r6, r2
   15e5c:	str	r8, [sp, #16]
   15e60:	mov	r8, r3
   15e64:	strd	sl, [sp, #20]
   15e68:	ldrd	r4, [ip]
   15e6c:	str	lr, [sp, #28]
   15e70:	sub	sp, sp, #48	; 0x30
   15e74:	mov	lr, #10
   15e78:	ldrd	r2, [ip, #8]
   15e7c:	ldrd	sl, [ip, #16]
   15e80:	strd	r4, [sp]
   15e84:	ldrd	r4, [ip, #32]
   15e88:	str	lr, [sp]
   15e8c:	strd	r2, [sp, #8]
   15e90:	strd	sl, [sp, #16]
   15e94:	ldrd	r2, [ip, #24]
   15e98:	ldrd	sl, [ip, #40]	; 0x28
   15e9c:	strd	r2, [sp, #24]
   15ea0:	strd	r4, [sp, #32]
   15ea4:	strd	sl, [sp, #40]	; 0x28
   15ea8:	beq	15ee4 <_obstack_memory_used@@Base+0x33a4>
   15eac:	ldr	r2, [sp, #80]	; 0x50
   15eb0:	mov	r7, r1
   15eb4:	mov	r3, sp
   15eb8:	mov	r1, r8
   15ebc:	str	r7, [sp, #40]	; 0x28
   15ec0:	str	r6, [sp, #44]	; 0x2c
   15ec4:	bl	14784 <_obstack_memory_used@@Base+0x1c44>
   15ec8:	add	sp, sp, #48	; 0x30
   15ecc:	ldrd	r4, [sp]
   15ed0:	ldrd	r6, [sp, #8]
   15ed4:	ldr	r8, [sp, #16]
   15ed8:	ldrd	sl, [sp, #20]
   15edc:	add	sp, sp, #28
   15ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ee4:	bl	10f84 <abort@plt>
   15ee8:	andeq	sl, r2, ip, lsl #5
   15eec:	ldr	ip, [pc, #512]	; 160f4 <_obstack_memory_used@@Base+0x35b4>
   15ef0:	cmp	r0, #0
   15ef4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15ef8:	ldrd	r4, [ip, #16]
   15efc:	strd	r6, [sp, #8]
   15f00:	clz	r6, r1
   15f04:	mov	r7, r1
   15f08:	strd	r8, [sp, #16]
   15f0c:	mov	r8, r0
   15f10:	lsr	r6, r6, #5
   15f14:	strd	sl, [sp, #24]
   15f18:	mov	fp, r2
   15f1c:	mov	sl, #10
   15f20:	ldrd	r2, [ip]
   15f24:	moveq	r6, #1
   15f28:	str	lr, [sp, #32]
   15f2c:	sub	sp, sp, #92	; 0x5c
   15f30:	cmp	r6, #0
   15f34:	ldrd	r0, [ip, #8]
   15f38:	strd	r2, [sp, #40]	; 0x28
   15f3c:	strd	r4, [sp, #56]	; 0x38
   15f40:	ldrd	r2, [ip, #24]
   15f44:	strd	r0, [sp, #48]	; 0x30
   15f48:	ldrd	r0, [ip, #32]
   15f4c:	str	sl, [sp, #40]	; 0x28
   15f50:	ldrd	r4, [ip, #40]	; 0x28
   15f54:	strd	r2, [sp, #64]	; 0x40
   15f58:	strd	r0, [sp, #72]	; 0x48
   15f5c:	strd	r4, [sp, #80]	; 0x50
   15f60:	bne	160f0 <_obstack_memory_used@@Base+0x35b0>
   15f64:	movw	r5, #41200	; 0xa0f0
   15f68:	movt	r5, #2
   15f6c:	str	r8, [sp, #80]	; 0x50
   15f70:	str	r7, [sp, #84]	; 0x54
   15f74:	bl	10ee8 <__errno_location@plt>
   15f78:	ldr	r3, [r0]
   15f7c:	mov	r9, r0
   15f80:	ldr	r2, [r5, #4]
   15f84:	ldr	r4, [r5]
   15f88:	str	r3, [sp, #28]
   15f8c:	cmp	r2, #0
   15f90:	movgt	r1, sl
   15f94:	bgt	15ffc <_obstack_memory_used@@Base+0x34bc>
   15f98:	add	r3, r5, #8
   15f9c:	str	r2, [sp, #36]	; 0x24
   15fa0:	rsb	r2, r2, #1
   15fa4:	cmp	r4, r3
   15fa8:	beq	160c4 <_obstack_memory_used@@Base+0x3584>
   15fac:	mov	r1, #8
   15fb0:	mov	r0, r4
   15fb4:	mvn	r3, #-2147483648	; 0x80000000
   15fb8:	str	r1, [sp]
   15fbc:	add	r1, sp, #36	; 0x24
   15fc0:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   15fc4:	mov	r4, r0
   15fc8:	str	r0, [r5]
   15fcc:	ldr	r0, [r5, #4]
   15fd0:	mov	r1, #0
   15fd4:	ldr	r2, [sp, #36]	; 0x24
   15fd8:	sub	r2, r2, r0
   15fdc:	add	r0, r4, r0, lsl #3
   15fe0:	lsl	r2, r2, #3
   15fe4:	bl	10f00 <memset@plt>
   15fe8:	ldr	r3, [sp, #36]	; 0x24
   15fec:	ldr	r1, [sp, #40]	; 0x28
   15ff0:	ldr	r8, [sp, #80]	; 0x50
   15ff4:	str	r3, [r5, #4]
   15ff8:	ldr	r7, [sp, #84]	; 0x54
   15ffc:	mvn	r3, #0
   16000:	mov	r2, fp
   16004:	ldr	r6, [sp, #44]	; 0x2c
   16008:	ldr	sl, [r4]
   1600c:	ldr	r5, [r4, #4]
   16010:	orr	r6, r6, #1
   16014:	stm	sp, {r1, r6}
   16018:	add	r1, sp, #48	; 0x30
   1601c:	str	r8, [sp, #12]
   16020:	mov	r0, r5
   16024:	str	r1, [sp, #8]
   16028:	mov	r1, sl
   1602c:	str	r7, [sp, #16]
   16030:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   16034:	cmp	sl, r0
   16038:	bhi	1609c <_obstack_memory_used@@Base+0x355c>
   1603c:	add	r7, r0, #1
   16040:	movw	r3, #41356	; 0xa18c
   16044:	movt	r3, #2
   16048:	cmp	r5, r3
   1604c:	str	r7, [r4]
   16050:	beq	1605c <_obstack_memory_used@@Base+0x351c>
   16054:	mov	r0, r5
   16058:	bl	123a4 <close@plt+0x1414>
   1605c:	mov	r0, r7
   16060:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   16064:	ldr	r3, [sp, #40]	; 0x28
   16068:	mov	r2, fp
   1606c:	mov	r1, r7
   16070:	mov	r5, r0
   16074:	ldr	lr, [sp, #80]	; 0x50
   16078:	ldr	ip, [sp, #84]	; 0x54
   1607c:	str	r0, [r4, #4]
   16080:	add	r4, sp, #48	; 0x30
   16084:	stm	sp, {r3, r6}
   16088:	mvn	r3, #0
   1608c:	str	r4, [sp, #8]
   16090:	str	lr, [sp, #12]
   16094:	str	ip, [sp, #16]
   16098:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   1609c:	ldr	r3, [sp, #28]
   160a0:	mov	r0, r5
   160a4:	str	r3, [r9]
   160a8:	add	sp, sp, #92	; 0x5c
   160ac:	ldrd	r4, [sp]
   160b0:	ldrd	r6, [sp, #8]
   160b4:	ldrd	r8, [sp, #16]
   160b8:	ldrd	sl, [sp, #24]
   160bc:	add	sp, sp, #32
   160c0:	pop	{pc}		; (ldr pc, [sp], #4)
   160c4:	mov	r1, #8
   160c8:	mvn	r3, #-2147483648	; 0x80000000
   160cc:	mov	r0, r6
   160d0:	str	r1, [sp]
   160d4:	add	r1, sp, #36	; 0x24
   160d8:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   160dc:	ldrd	r2, [r5, #8]
   160e0:	mov	r4, r0
   160e4:	str	r0, [r5]
   160e8:	strd	r2, [r0]
   160ec:	b	15fcc <_obstack_memory_used@@Base+0x348c>
   160f0:	bl	10f84 <abort@plt>
   160f4:	andeq	sl, r2, ip, lsl #5
   160f8:	ldr	ip, [pc, #536]	; 16318 <_obstack_memory_used@@Base+0x37d8>
   160fc:	cmp	r0, #0
   16100:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16104:	ldrd	r4, [ip, #16]
   16108:	strd	r6, [sp, #8]
   1610c:	mov	r6, r1
   16110:	mov	r7, r0
   16114:	strd	r8, [sp, #16]
   16118:	mov	r9, #10
   1611c:	strd	sl, [sp, #24]
   16120:	mov	sl, r2
   16124:	mov	fp, r3
   16128:	str	lr, [sp, #32]
   1612c:	clz	lr, r1
   16130:	sub	sp, sp, #92	; 0x5c
   16134:	ldrd	r2, [ip]
   16138:	lsr	lr, lr, #5
   1613c:	moveq	lr, #1
   16140:	ldrd	r0, [ip, #8]
   16144:	cmp	lr, #0
   16148:	strd	r4, [sp, #56]	; 0x38
   1614c:	ldrd	r4, [ip, #40]	; 0x28
   16150:	str	lr, [sp, #28]
   16154:	strd	r2, [sp, #40]	; 0x28
   16158:	ldrd	r2, [ip, #24]
   1615c:	strd	r0, [sp, #48]	; 0x30
   16160:	ldrd	r0, [ip, #32]
   16164:	str	r9, [sp, #40]	; 0x28
   16168:	strd	r2, [sp, #64]	; 0x40
   1616c:	strd	r4, [sp, #80]	; 0x50
   16170:	strd	r0, [sp, #72]	; 0x48
   16174:	bne	16314 <_obstack_memory_used@@Base+0x37d4>
   16178:	movw	r5, #41200	; 0xa0f0
   1617c:	movt	r5, #2
   16180:	str	r7, [sp, #80]	; 0x50
   16184:	str	r6, [sp, #84]	; 0x54
   16188:	bl	10ee8 <__errno_location@plt>
   1618c:	ldr	r3, [r0]
   16190:	mov	r8, r0
   16194:	ldr	r2, [r5, #4]
   16198:	ldr	r4, [r5]
   1619c:	str	r3, [sp, #24]
   161a0:	cmp	r2, #0
   161a4:	movgt	r1, r9
   161a8:	bgt	16210 <_obstack_memory_used@@Base+0x36d0>
   161ac:	add	r3, r5, #8
   161b0:	str	r2, [sp, #36]	; 0x24
   161b4:	rsb	r2, r2, #1
   161b8:	cmp	r4, r3
   161bc:	beq	162e8 <_obstack_memory_used@@Base+0x37a8>
   161c0:	mov	r1, #8
   161c4:	mov	r0, r4
   161c8:	mvn	r3, #-2147483648	; 0x80000000
   161cc:	str	r1, [sp]
   161d0:	add	r1, sp, #36	; 0x24
   161d4:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   161d8:	mov	r4, r0
   161dc:	str	r0, [r5]
   161e0:	ldr	r0, [r5, #4]
   161e4:	mov	r1, #0
   161e8:	ldr	r2, [sp, #36]	; 0x24
   161ec:	sub	r2, r2, r0
   161f0:	add	r0, r4, r0, lsl #3
   161f4:	lsl	r2, r2, #3
   161f8:	bl	10f00 <memset@plt>
   161fc:	ldr	r3, [sp, #36]	; 0x24
   16200:	ldr	r1, [sp, #40]	; 0x28
   16204:	ldr	r7, [sp, #80]	; 0x50
   16208:	str	r3, [r5, #4]
   1620c:	ldr	r6, [sp, #84]	; 0x54
   16210:	mov	r3, fp
   16214:	mov	r2, sl
   16218:	ldr	r0, [sp, #44]	; 0x2c
   1621c:	ldr	r9, [r4]
   16220:	ldr	r5, [r4, #4]
   16224:	orr	r0, r0, #1
   16228:	str	r1, [sp]
   1622c:	add	r1, sp, #48	; 0x30
   16230:	str	r0, [sp, #4]
   16234:	str	r1, [sp, #8]
   16238:	mov	r1, r9
   1623c:	str	r7, [sp, #12]
   16240:	str	r6, [sp, #16]
   16244:	str	r0, [sp, #28]
   16248:	mov	r0, r5
   1624c:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   16250:	cmp	r9, r0
   16254:	bhi	162c0 <_obstack_memory_used@@Base+0x3780>
   16258:	add	r6, r0, #1
   1625c:	movw	r3, #41356	; 0xa18c
   16260:	movt	r3, #2
   16264:	cmp	r5, r3
   16268:	str	r6, [r4]
   1626c:	beq	16278 <_obstack_memory_used@@Base+0x3738>
   16270:	mov	r0, r5
   16274:	bl	123a4 <close@plt+0x1414>
   16278:	mov	r0, r6
   1627c:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   16280:	ldr	lr, [sp, #40]	; 0x28
   16284:	mov	r1, r6
   16288:	mov	r3, fp
   1628c:	mov	r2, sl
   16290:	mov	r5, r0
   16294:	ldr	r6, [sp, #80]	; 0x50
   16298:	ldr	ip, [sp, #84]	; 0x54
   1629c:	str	r0, [r4, #4]
   162a0:	str	lr, [sp]
   162a4:	ldr	lr, [sp, #28]
   162a8:	str	lr, [sp, #4]
   162ac:	add	lr, sp, #48	; 0x30
   162b0:	str	r6, [sp, #12]
   162b4:	str	lr, [sp, #8]
   162b8:	str	ip, [sp, #16]
   162bc:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   162c0:	ldr	r3, [sp, #24]
   162c4:	mov	r0, r5
   162c8:	str	r3, [r8]
   162cc:	add	sp, sp, #92	; 0x5c
   162d0:	ldrd	r4, [sp]
   162d4:	ldrd	r6, [sp, #8]
   162d8:	ldrd	r8, [sp, #16]
   162dc:	ldrd	sl, [sp, #24]
   162e0:	add	sp, sp, #32
   162e4:	pop	{pc}		; (ldr pc, [sp], #4)
   162e8:	mov	r1, #8
   162ec:	mvn	r3, #-2147483648	; 0x80000000
   162f0:	ldr	r0, [sp, #28]
   162f4:	str	r1, [sp]
   162f8:	add	r1, sp, #36	; 0x24
   162fc:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   16300:	ldrd	r2, [r5, #8]
   16304:	mov	r4, r0
   16308:	str	r0, [r5]
   1630c:	strd	r2, [r0]
   16310:	b	161e0 <_obstack_memory_used@@Base+0x36a0>
   16314:	bl	10f84 <abort@plt>
   16318:	andeq	sl, r2, ip, lsl #5
   1631c:	ldr	r3, [pc]	; 16324 <_obstack_memory_used@@Base+0x37e4>
   16320:	b	14784 <_obstack_memory_used@@Base+0x1c44>
   16324:	andeq	sl, r2, r0, lsl #2
   16328:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1632c:	movw	r4, #41200	; 0xa0f0
   16330:	movt	r4, #2
   16334:	strd	r6, [sp, #8]
   16338:	strd	r8, [sp, #16]
   1633c:	strd	sl, [sp, #24]
   16340:	mov	sl, r0
   16344:	mov	fp, r1
   16348:	str	lr, [sp, #32]
   1634c:	sub	sp, sp, #44	; 0x2c
   16350:	bl	10ee8 <__errno_location@plt>
   16354:	ldr	r3, [r0]
   16358:	mov	r8, r0
   1635c:	ldr	r2, [r4, #4]
   16360:	ldr	r5, [r4]
   16364:	str	r3, [sp, #28]
   16368:	cmp	r2, #0
   1636c:	bgt	163c8 <_obstack_memory_used@@Base+0x3888>
   16370:	add	r3, r4, #8
   16374:	str	r2, [sp, #36]	; 0x24
   16378:	rsb	r2, r2, #1
   1637c:	cmp	r5, r3
   16380:	beq	164a4 <_obstack_memory_used@@Base+0x3964>
   16384:	mov	r1, #8
   16388:	mov	r0, r5
   1638c:	mvn	r3, #-2147483648	; 0x80000000
   16390:	str	r1, [sp]
   16394:	add	r1, sp, #36	; 0x24
   16398:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   1639c:	mov	r5, r0
   163a0:	str	r0, [r4]
   163a4:	ldr	r0, [r4, #4]
   163a8:	mov	r1, #0
   163ac:	ldr	r2, [sp, #36]	; 0x24
   163b0:	sub	r2, r2, r0
   163b4:	add	r0, r5, r0, lsl #3
   163b8:	lsl	r2, r2, #3
   163bc:	bl	10f00 <memset@plt>
   163c0:	ldr	r3, [sp, #36]	; 0x24
   163c4:	str	r3, [r4, #4]
   163c8:	ldr	ip, [r4, #16]
   163cc:	mov	r3, fp
   163d0:	mov	r2, sl
   163d4:	ldr	r7, [r4, #20]
   163d8:	ldr	r0, [pc, #240]	; 164d0 <_obstack_memory_used@@Base+0x3990>
   163dc:	ldr	r9, [r5]
   163e0:	orr	r7, r7, #1
   163e4:	ldr	r6, [r5, #4]
   163e8:	str	ip, [sp]
   163ec:	ldr	ip, [r4, #56]	; 0x38
   163f0:	mov	r1, r9
   163f4:	str	r7, [sp, #4]
   163f8:	ldr	lr, [r4, #60]	; 0x3c
   163fc:	str	r0, [sp, #8]
   16400:	mov	r0, r6
   16404:	str	ip, [sp, #12]
   16408:	str	lr, [sp, #16]
   1640c:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   16410:	cmp	r9, r0
   16414:	bhi	1647c <_obstack_memory_used@@Base+0x393c>
   16418:	add	r9, r0, #1
   1641c:	movw	r3, #41356	; 0xa18c
   16420:	movt	r3, #2
   16424:	cmp	r6, r3
   16428:	str	r9, [r5]
   1642c:	beq	16438 <_obstack_memory_used@@Base+0x38f8>
   16430:	mov	r0, r6
   16434:	bl	123a4 <close@plt+0x1414>
   16438:	mov	r0, r9
   1643c:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   16440:	ldr	ip, [r4, #16]
   16444:	mov	r1, r9
   16448:	mov	r3, fp
   1644c:	mov	r2, sl
   16450:	mov	r6, r0
   16454:	ldr	r9, [r4, #56]	; 0x38
   16458:	ldr	lr, [r4, #60]	; 0x3c
   1645c:	str	r0, [r5, #4]
   16460:	str	ip, [sp]
   16464:	ldr	ip, [pc, #100]	; 164d0 <_obstack_memory_used@@Base+0x3990>
   16468:	str	r7, [sp, #4]
   1646c:	str	ip, [sp, #8]
   16470:	str	r9, [sp, #12]
   16474:	str	lr, [sp, #16]
   16478:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   1647c:	ldr	r3, [sp, #28]
   16480:	mov	r0, r6
   16484:	str	r3, [r8]
   16488:	add	sp, sp, #44	; 0x2c
   1648c:	ldrd	r4, [sp]
   16490:	ldrd	r6, [sp, #8]
   16494:	ldrd	r8, [sp, #16]
   16498:	ldrd	sl, [sp, #24]
   1649c:	add	sp, sp, #32
   164a0:	pop	{pc}		; (ldr pc, [sp], #4)
   164a4:	mov	r0, #8
   164a8:	mvn	r3, #-2147483648	; 0x80000000
   164ac:	add	r1, sp, #36	; 0x24
   164b0:	str	r0, [sp]
   164b4:	mov	r0, #0
   164b8:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   164bc:	ldrd	r2, [r4, #8]
   164c0:	mov	r5, r0
   164c4:	str	r0, [r4]
   164c8:	strd	r2, [r0]
   164cc:	b	163a4 <_obstack_memory_used@@Base+0x3864>
   164d0:	andeq	sl, r2, r8, lsl #2
   164d4:	ldr	r3, [pc, #4]	; 164e0 <_obstack_memory_used@@Base+0x39a0>
   164d8:	mvn	r2, #0
   164dc:	b	14784 <_obstack_memory_used@@Base+0x1c44>
   164e0:	andeq	sl, r2, r0, lsl #2
   164e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   164e8:	movw	r4, #41200	; 0xa0f0
   164ec:	movt	r4, #2
   164f0:	strd	r6, [sp, #8]
   164f4:	strd	r8, [sp, #16]
   164f8:	strd	sl, [sp, #24]
   164fc:	mov	sl, r0
   16500:	str	lr, [sp, #32]
   16504:	sub	sp, sp, #44	; 0x2c
   16508:	bl	10ee8 <__errno_location@plt>
   1650c:	ldr	r3, [r0]
   16510:	mov	r8, r0
   16514:	ldr	r2, [r4, #4]
   16518:	ldr	r5, [r4]
   1651c:	str	r3, [sp, #28]
   16520:	cmp	r2, #0
   16524:	bgt	16580 <_obstack_memory_used@@Base+0x3a40>
   16528:	add	r3, r4, #8
   1652c:	str	r2, [sp, #36]	; 0x24
   16530:	rsb	r2, r2, #1
   16534:	cmp	r5, r3
   16538:	beq	16648 <_obstack_memory_used@@Base+0x3b08>
   1653c:	mov	r1, #8
   16540:	mov	r0, r5
   16544:	mvn	r3, #-2147483648	; 0x80000000
   16548:	str	r1, [sp]
   1654c:	add	r1, sp, #36	; 0x24
   16550:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   16554:	mov	r5, r0
   16558:	str	r0, [r4]
   1655c:	ldr	r0, [r4, #4]
   16560:	mov	r1, #0
   16564:	ldr	r2, [sp, #36]	; 0x24
   16568:	sub	r2, r2, r0
   1656c:	add	r0, r5, r0, lsl #3
   16570:	lsl	r2, r2, #3
   16574:	bl	10f00 <memset@plt>
   16578:	ldr	r3, [sp, #36]	; 0x24
   1657c:	str	r3, [r4, #4]
   16580:	ldr	ip, [r4, #16]
   16584:	mvn	r3, #0
   16588:	mov	r2, sl
   1658c:	ldr	r7, [r4, #20]
   16590:	ldr	fp, [pc, #220]	; 16674 <_obstack_memory_used@@Base+0x3b34>
   16594:	ldr	r9, [r5]
   16598:	orr	r7, r7, #1
   1659c:	ldr	r6, [r5, #4]
   165a0:	str	ip, [sp]
   165a4:	ldr	ip, [r4, #56]	; 0x38
   165a8:	mov	r1, r9
   165ac:	stmib	sp, {r7, fp}
   165b0:	ldr	lr, [r4, #60]	; 0x3c
   165b4:	mov	r0, r6
   165b8:	str	ip, [sp, #12]
   165bc:	str	lr, [sp, #16]
   165c0:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   165c4:	cmp	r9, r0
   165c8:	bhi	16620 <_obstack_memory_used@@Base+0x3ae0>
   165cc:	add	r9, r0, #1
   165d0:	movw	r3, #41356	; 0xa18c
   165d4:	movt	r3, #2
   165d8:	cmp	r6, r3
   165dc:	str	r9, [r5]
   165e0:	beq	165ec <_obstack_memory_used@@Base+0x3aac>
   165e4:	mov	r0, r6
   165e8:	bl	123a4 <close@plt+0x1414>
   165ec:	mov	r0, r9
   165f0:	bl	16e00 <_obstack_memory_used@@Base+0x42c0>
   165f4:	ldr	r3, [r4, #16]
   165f8:	mov	r2, sl
   165fc:	mov	r1, r9
   16600:	mov	r6, r0
   16604:	ldr	lr, [r4, #56]	; 0x38
   16608:	ldr	ip, [r4, #60]	; 0x3c
   1660c:	str	r0, [r5, #4]
   16610:	stm	sp, {r3, r7, fp, lr}
   16614:	mvn	r3, #0
   16618:	str	ip, [sp, #16]
   1661c:	bl	12d98 <_obstack_memory_used@@Base+0x258>
   16620:	ldr	r3, [sp, #28]
   16624:	mov	r0, r6
   16628:	str	r3, [r8]
   1662c:	add	sp, sp, #44	; 0x2c
   16630:	ldrd	r4, [sp]
   16634:	ldrd	r6, [sp, #8]
   16638:	ldrd	r8, [sp, #16]
   1663c:	ldrd	sl, [sp, #24]
   16640:	add	sp, sp, #32
   16644:	pop	{pc}		; (ldr pc, [sp], #4)
   16648:	mov	r0, #8
   1664c:	mvn	r3, #-2147483648	; 0x80000000
   16650:	add	r1, sp, #36	; 0x24
   16654:	str	r0, [sp]
   16658:	mov	r0, #0
   1665c:	bl	170a4 <_obstack_memory_used@@Base+0x4564>
   16660:	ldrd	r2, [r4, #8]
   16664:	mov	r5, r0
   16668:	str	r0, [r4]
   1666c:	strd	r2, [r0]
   16670:	b	1655c <_obstack_memory_used@@Base+0x3a1c>
   16674:	andeq	sl, r2, r8, lsl #2
   16678:	cmp	r1, #0
   1667c:	strd	r4, [sp, #-16]!
   16680:	mov	ip, r3
   16684:	str	r6, [sp, #8]
   16688:	mov	r4, r0
   1668c:	str	lr, [sp, #12]
   16690:	sub	sp, sp, #32
   16694:	ldr	r5, [sp, #48]	; 0x30
   16698:	ldr	r6, [sp, #52]	; 0x34
   1669c:	beq	167e0 <_obstack_memory_used@@Base+0x3ca0>
   166a0:	mov	r3, r1
   166a4:	mov	r1, #1
   166a8:	stm	sp, {r2, ip}
   166ac:	movw	r2, #37848	; 0x93d8
   166b0:	movt	r2, #1
   166b4:	bl	10f24 <__fprintf_chk@plt>
   166b8:	mov	r2, #5
   166bc:	movw	r1, #37868	; 0x93ec
   166c0:	movt	r1, #1
   166c4:	mov	r0, #0
   166c8:	bl	10dc8 <dcgettext@plt>
   166cc:	movw	ip, #2022	; 0x7e6
   166d0:	mov	r3, r0
   166d4:	mov	r1, #1
   166d8:	movw	r2, #38596	; 0x96c4
   166dc:	movt	r2, #1
   166e0:	mov	r0, r4
   166e4:	str	ip, [sp]
   166e8:	bl	10f24 <__fprintf_chk@plt>
   166ec:	mov	r1, r4
   166f0:	mov	r0, #10
   166f4:	bl	10dbc <fputc_unlocked@plt>
   166f8:	mov	r2, #5
   166fc:	movw	r1, #37872	; 0x93f0
   16700:	movt	r1, #1
   16704:	mov	r0, #0
   16708:	bl	10dc8 <dcgettext@plt>
   1670c:	mov	r2, r0
   16710:	mov	r1, #1
   16714:	movw	r3, #38044	; 0x949c
   16718:	movt	r3, #1
   1671c:	mov	r0, r4
   16720:	bl	10f24 <__fprintf_chk@plt>
   16724:	mov	r1, r4
   16728:	mov	r0, #10
   1672c:	bl	10dbc <fputc_unlocked@plt>
   16730:	cmp	r6, #9
   16734:	ldrls	pc, [pc, r6, lsl #2]
   16738:	b	16a4c <_obstack_memory_used@@Base+0x3f0c>
   1673c:	andeq	r6, r1, ip, asr #15
   16740:	strdeq	r6, [r1], -ip
   16744:	andeq	r6, r1, r8, lsr r8
   16748:	andeq	r6, r1, r8, ror r8
   1674c:	andeq	r6, r1, r0, asr #17
   16750:	strdeq	r6, [r1], -r8
   16754:	andeq	r6, r1, r0, asr #18
   16758:	muleq	r1, r4, r9
   1675c:	andeq	r6, r1, ip, ror #19
   16760:	andeq	r6, r1, r4, ror #14
   16764:	movw	r1, #38348	; 0x95cc
   16768:	movt	r1, #1
   1676c:	mov	r2, #5
   16770:	mov	r0, #0
   16774:	bl	10dc8 <dcgettext@plt>
   16778:	ldr	lr, [r5, #4]
   1677c:	mov	r2, r0
   16780:	mov	r1, #1
   16784:	mov	r0, r4
   16788:	ldr	r3, [r5, #8]
   1678c:	ldr	ip, [r5, #32]
   16790:	str	lr, [sp]
   16794:	ldr	lr, [r5, #12]
   16798:	str	ip, [sp, #28]
   1679c:	ldr	ip, [r5, #28]
   167a0:	str	r3, [sp, #4]
   167a4:	ldr	r3, [r5, #16]
   167a8:	str	lr, [sp, #8]
   167ac:	ldr	lr, [r5, #20]
   167b0:	str	ip, [sp, #24]
   167b4:	ldr	ip, [r5, #24]
   167b8:	str	r3, [sp, #12]
   167bc:	ldr	r3, [r5]
   167c0:	str	lr, [sp, #16]
   167c4:	str	ip, [sp, #20]
   167c8:	bl	10f24 <__fprintf_chk@plt>
   167cc:	add	sp, sp, #32
   167d0:	ldrd	r4, [sp]
   167d4:	ldr	r6, [sp, #8]
   167d8:	add	sp, sp, #12
   167dc:	pop	{pc}		; (ldr pc, [sp], #4)
   167e0:	mov	r3, r2
   167e4:	mov	r1, #1
   167e8:	str	ip, [sp]
   167ec:	movw	r2, #37860	; 0x93e4
   167f0:	movt	r2, #1
   167f4:	bl	10f24 <__fprintf_chk@plt>
   167f8:	b	166b8 <_obstack_memory_used@@Base+0x3b78>
   167fc:	mov	r2, #5
   16800:	movw	r1, #38080	; 0x94c0
   16804:	movt	r1, #1
   16808:	mov	r0, #0
   1680c:	bl	10dc8 <dcgettext@plt>
   16810:	ldr	r3, [r5]
   16814:	mov	r2, r0
   16818:	mov	r1, #1
   1681c:	mov	r0, r4
   16820:	add	sp, sp, #32
   16824:	ldrd	r4, [sp]
   16828:	ldr	r6, [sp, #8]
   1682c:	ldr	lr, [sp, #12]
   16830:	add	sp, sp, #16
   16834:	b	10f24 <__fprintf_chk@plt>
   16838:	mov	r2, #5
   1683c:	movw	r1, #38096	; 0x94d0
   16840:	movt	r1, #1
   16844:	mov	r0, #0
   16848:	bl	10dc8 <dcgettext@plt>
   1684c:	ldm	r5, {r3, ip}
   16850:	mov	r2, r0
   16854:	mov	r1, #1
   16858:	mov	r0, r4
   1685c:	str	ip, [sp, #48]	; 0x30
   16860:	add	sp, sp, #32
   16864:	ldrd	r4, [sp]
   16868:	ldr	r6, [sp, #8]
   1686c:	ldr	lr, [sp, #12]
   16870:	add	sp, sp, #16
   16874:	b	10f24 <__fprintf_chk@plt>
   16878:	mov	r2, #5
   1687c:	movw	r1, #38120	; 0x94e8
   16880:	movt	r1, #1
   16884:	mov	r0, #0
   16888:	bl	10dc8 <dcgettext@plt>
   1688c:	ldm	r5, {r3, lr}
   16890:	mov	r2, r0
   16894:	mov	r1, #1
   16898:	mov	r0, r4
   1689c:	ldr	ip, [r5, #8]
   168a0:	str	lr, [sp, #48]	; 0x30
   168a4:	str	ip, [sp, #52]	; 0x34
   168a8:	add	sp, sp, #32
   168ac:	ldrd	r4, [sp]
   168b0:	ldr	r6, [sp, #8]
   168b4:	ldr	lr, [sp, #12]
   168b8:	add	sp, sp, #16
   168bc:	b	10f24 <__fprintf_chk@plt>
   168c0:	mov	r2, #5
   168c4:	movw	r1, #38148	; 0x9504
   168c8:	movt	r1, #1
   168cc:	mov	r0, #0
   168d0:	bl	10dc8 <dcgettext@plt>
   168d4:	ldmib	r5, {r3, ip, lr}
   168d8:	mov	r2, r0
   168dc:	mov	r1, #1
   168e0:	mov	r0, r4
   168e4:	str	r3, [sp]
   168e8:	ldr	r3, [r5]
   168ec:	stmib	sp, {ip, lr}
   168f0:	bl	10f24 <__fprintf_chk@plt>
   168f4:	b	167cc <_obstack_memory_used@@Base+0x3c8c>
   168f8:	mov	r2, #5
   168fc:	movw	r1, #38180	; 0x9524
   16900:	movt	r1, #1
   16904:	mov	r0, #0
   16908:	bl	10dc8 <dcgettext@plt>
   1690c:	ldmib	r5, {ip, lr}
   16910:	mov	r2, r0
   16914:	mov	r1, #1
   16918:	mov	r0, r4
   1691c:	ldr	r3, [r5, #16]
   16920:	str	ip, [sp]
   16924:	ldr	ip, [r5, #12]
   16928:	str	r3, [sp, #12]
   1692c:	ldr	r3, [r5]
   16930:	str	lr, [sp, #4]
   16934:	str	ip, [sp, #8]
   16938:	bl	10f24 <__fprintf_chk@plt>
   1693c:	b	167cc <_obstack_memory_used@@Base+0x3c8c>
   16940:	mov	r2, #5
   16944:	movw	r1, #38216	; 0x9548
   16948:	movt	r1, #1
   1694c:	mov	r0, #0
   16950:	bl	10dc8 <dcgettext@plt>
   16954:	ldr	lr, [r5, #4]
   16958:	mov	r2, r0
   1695c:	mov	r1, #1
   16960:	mov	r0, r4
   16964:	ldr	r3, [r5, #8]
   16968:	ldr	ip, [r5, #20]
   1696c:	str	lr, [sp]
   16970:	ldr	lr, [r5, #12]
   16974:	str	ip, [sp, #16]
   16978:	ldr	ip, [r5, #16]
   1697c:	str	r3, [sp, #4]
   16980:	ldr	r3, [r5]
   16984:	str	lr, [sp, #8]
   16988:	str	ip, [sp, #12]
   1698c:	bl	10f24 <__fprintf_chk@plt>
   16990:	b	167cc <_obstack_memory_used@@Base+0x3c8c>
   16994:	mov	r2, #5
   16998:	movw	r1, #38256	; 0x9570
   1699c:	movt	r1, #1
   169a0:	mov	r0, #0
   169a4:	bl	10dc8 <dcgettext@plt>
   169a8:	ldmib	r5, {r3, ip}
   169ac:	mov	r2, r0
   169b0:	mov	r1, #1
   169b4:	mov	r0, r4
   169b8:	ldr	lr, [r5, #24]
   169bc:	str	r3, [sp]
   169c0:	ldr	r3, [r5, #12]
   169c4:	str	lr, [sp, #20]
   169c8:	ldr	lr, [r5, #20]
   169cc:	str	ip, [sp, #4]
   169d0:	ldr	ip, [r5, #16]
   169d4:	str	r3, [sp, #8]
   169d8:	ldr	r3, [r5]
   169dc:	str	ip, [sp, #12]
   169e0:	str	lr, [sp, #16]
   169e4:	bl	10f24 <__fprintf_chk@plt>
   169e8:	b	167cc <_obstack_memory_used@@Base+0x3c8c>
   169ec:	mov	r2, #5
   169f0:	movw	r1, #38300	; 0x959c
   169f4:	movt	r1, #1
   169f8:	mov	r0, #0
   169fc:	bl	10dc8 <dcgettext@plt>
   16a00:	ldmib	r5, {ip, lr}
   16a04:	mov	r2, r0
   16a08:	mov	r1, #1
   16a0c:	mov	r0, r4
   16a10:	ldr	r3, [r5, #28]
   16a14:	str	ip, [sp]
   16a18:	ldr	ip, [r5, #12]
   16a1c:	str	r3, [sp, #24]
   16a20:	ldr	r3, [r5, #24]
   16a24:	str	lr, [sp, #4]
   16a28:	ldr	lr, [r5, #16]
   16a2c:	str	ip, [sp, #8]
   16a30:	ldr	ip, [r5, #20]
   16a34:	str	r3, [sp, #20]
   16a38:	ldr	r3, [r5]
   16a3c:	str	lr, [sp, #12]
   16a40:	str	ip, [sp, #16]
   16a44:	bl	10f24 <__fprintf_chk@plt>
   16a48:	b	167cc <_obstack_memory_used@@Base+0x3c8c>
   16a4c:	movw	r1, #38400	; 0x9600
   16a50:	movt	r1, #1
   16a54:	b	1676c <_obstack_memory_used@@Base+0x3c2c>
   16a58:	strd	r4, [sp, #-12]!
   16a5c:	str	lr, [sp, #8]
   16a60:	sub	sp, sp, #12
   16a64:	ldr	r5, [sp, #24]
   16a68:	ldr	ip, [r5]
   16a6c:	cmp	ip, #0
   16a70:	beq	16a8c <_obstack_memory_used@@Base+0x3f4c>
   16a74:	mov	lr, r5
   16a78:	mov	ip, #0
   16a7c:	ldr	r4, [lr, #4]!
   16a80:	add	ip, ip, #1
   16a84:	cmp	r4, #0
   16a88:	bne	16a7c <_obstack_memory_used@@Base+0x3f3c>
   16a8c:	stm	sp, {r5, ip}
   16a90:	bl	16678 <_obstack_memory_used@@Base+0x3b38>
   16a94:	add	sp, sp, #12
   16a98:	ldrd	r4, [sp]
   16a9c:	add	sp, sp, #8
   16aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   16aa4:	push	{lr}		; (str lr, [sp, #-4]!)
   16aa8:	sub	sp, sp, #52	; 0x34
   16aac:	ldr	ip, [sp, #56]	; 0x38
   16ab0:	ldr	lr, [ip]
   16ab4:	cmp	lr, #0
   16ab8:	str	lr, [sp, #8]
   16abc:	beq	16b54 <_obstack_memory_used@@Base+0x4014>
   16ac0:	ldr	lr, [ip, #4]
   16ac4:	cmp	lr, #0
   16ac8:	str	lr, [sp, #12]
   16acc:	beq	16b68 <_obstack_memory_used@@Base+0x4028>
   16ad0:	ldr	lr, [ip, #8]
   16ad4:	cmp	lr, #0
   16ad8:	str	lr, [sp, #16]
   16adc:	beq	16b70 <_obstack_memory_used@@Base+0x4030>
   16ae0:	ldr	lr, [ip, #12]
   16ae4:	cmp	lr, #0
   16ae8:	str	lr, [sp, #20]
   16aec:	beq	16b78 <_obstack_memory_used@@Base+0x4038>
   16af0:	ldr	lr, [ip, #16]
   16af4:	cmp	lr, #0
   16af8:	str	lr, [sp, #24]
   16afc:	beq	16b80 <_obstack_memory_used@@Base+0x4040>
   16b00:	ldr	lr, [ip, #20]
   16b04:	cmp	lr, #0
   16b08:	str	lr, [sp, #28]
   16b0c:	beq	16b88 <_obstack_memory_used@@Base+0x4048>
   16b10:	ldr	lr, [ip, #24]
   16b14:	cmp	lr, #0
   16b18:	str	lr, [sp, #32]
   16b1c:	beq	16b90 <_obstack_memory_used@@Base+0x4050>
   16b20:	ldr	lr, [ip, #28]
   16b24:	cmp	lr, #0
   16b28:	str	lr, [sp, #36]	; 0x24
   16b2c:	beq	16b98 <_obstack_memory_used@@Base+0x4058>
   16b30:	ldr	lr, [ip, #32]
   16b34:	cmp	lr, #0
   16b38:	str	lr, [sp, #40]	; 0x28
   16b3c:	beq	16ba0 <_obstack_memory_used@@Base+0x4060>
   16b40:	ldr	ip, [ip, #36]	; 0x24
   16b44:	cmp	ip, #0
   16b48:	str	ip, [sp, #44]	; 0x2c
   16b4c:	movne	lr, #10
   16b50:	moveq	lr, #9
   16b54:	add	ip, sp, #8
   16b58:	stm	sp, {ip, lr}
   16b5c:	bl	16678 <_obstack_memory_used@@Base+0x3b38>
   16b60:	add	sp, sp, #52	; 0x34
   16b64:	pop	{pc}		; (ldr pc, [sp], #4)
   16b68:	mov	lr, #1
   16b6c:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16b70:	mov	lr, #2
   16b74:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16b78:	mov	lr, #3
   16b7c:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16b80:	mov	lr, #4
   16b84:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16b88:	mov	lr, #5
   16b8c:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16b90:	mov	lr, #6
   16b94:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16b98:	mov	lr, #7
   16b9c:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16ba0:	mov	lr, #8
   16ba4:	b	16b54 <_obstack_memory_used@@Base+0x4014>
   16ba8:	push	{r3}		; (str r3, [sp, #-4]!)
   16bac:	push	{lr}		; (str lr, [sp, #-4]!)
   16bb0:	sub	sp, sp, #56	; 0x38
   16bb4:	ldr	ip, [sp, #64]	; 0x40
   16bb8:	add	r3, sp, #64	; 0x40
   16bbc:	str	r3, [sp, #12]
   16bc0:	cmp	ip, #0
   16bc4:	str	ip, [sp, #16]
   16bc8:	beq	16c60 <_obstack_memory_used@@Base+0x4120>
   16bcc:	ldr	ip, [sp, #68]	; 0x44
   16bd0:	cmp	ip, #0
   16bd4:	str	ip, [sp, #20]
   16bd8:	beq	16c84 <_obstack_memory_used@@Base+0x4144>
   16bdc:	ldr	ip, [sp, #72]	; 0x48
   16be0:	cmp	ip, #0
   16be4:	str	ip, [sp, #24]
   16be8:	beq	16c8c <_obstack_memory_used@@Base+0x414c>
   16bec:	ldr	ip, [sp, #76]	; 0x4c
   16bf0:	cmp	ip, #0
   16bf4:	str	ip, [sp, #28]
   16bf8:	beq	16c94 <_obstack_memory_used@@Base+0x4154>
   16bfc:	ldr	ip, [sp, #80]	; 0x50
   16c00:	cmp	ip, #0
   16c04:	str	ip, [sp, #32]
   16c08:	beq	16c9c <_obstack_memory_used@@Base+0x415c>
   16c0c:	ldr	ip, [sp, #84]	; 0x54
   16c10:	cmp	ip, #0
   16c14:	str	ip, [sp, #36]	; 0x24
   16c18:	beq	16ca4 <_obstack_memory_used@@Base+0x4164>
   16c1c:	ldr	ip, [sp, #88]	; 0x58
   16c20:	cmp	ip, #0
   16c24:	str	ip, [sp, #40]	; 0x28
   16c28:	beq	16cac <_obstack_memory_used@@Base+0x416c>
   16c2c:	ldr	ip, [sp, #92]	; 0x5c
   16c30:	cmp	ip, #0
   16c34:	str	ip, [sp, #44]	; 0x2c
   16c38:	beq	16cb4 <_obstack_memory_used@@Base+0x4174>
   16c3c:	ldr	ip, [sp, #96]	; 0x60
   16c40:	cmp	ip, #0
   16c44:	str	ip, [sp, #48]	; 0x30
   16c48:	beq	16cbc <_obstack_memory_used@@Base+0x417c>
   16c4c:	ldr	r3, [sp, #100]	; 0x64
   16c50:	cmp	r3, #0
   16c54:	str	r3, [sp, #52]	; 0x34
   16c58:	movne	ip, #10
   16c5c:	moveq	ip, #9
   16c60:	ldr	r3, [sp, #60]	; 0x3c
   16c64:	add	lr, sp, #16
   16c68:	str	lr, [sp]
   16c6c:	str	ip, [sp, #4]
   16c70:	bl	16678 <_obstack_memory_used@@Base+0x3b38>
   16c74:	add	sp, sp, #56	; 0x38
   16c78:	pop	{lr}		; (ldr lr, [sp], #4)
   16c7c:	add	sp, sp, #4
   16c80:	bx	lr
   16c84:	mov	ip, #1
   16c88:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16c8c:	mov	ip, #2
   16c90:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16c94:	mov	ip, #3
   16c98:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16c9c:	mov	ip, #4
   16ca0:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16ca4:	mov	ip, #5
   16ca8:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16cac:	mov	ip, #6
   16cb0:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16cb4:	mov	ip, #7
   16cb8:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16cbc:	mov	ip, #8
   16cc0:	b	16c60 <_obstack_memory_used@@Base+0x4120>
   16cc4:	movw	r3, #41292	; 0xa14c
   16cc8:	movt	r3, #2
   16ccc:	str	r4, [sp, #-8]!
   16cd0:	mov	r0, #10
   16cd4:	ldr	r1, [r3]
   16cd8:	str	lr, [sp, #4]
   16cdc:	bl	10dbc <fputc_unlocked@plt>
   16ce0:	mov	r2, #5
   16ce4:	movw	r1, #38460	; 0x963c
   16ce8:	movt	r1, #1
   16cec:	mov	r0, #0
   16cf0:	bl	10dc8 <dcgettext@plt>
   16cf4:	mov	r1, r0
   16cf8:	movw	r2, #38480	; 0x9650
   16cfc:	movt	r2, #1
   16d00:	mov	r0, #1
   16d04:	bl	10f0c <__printf_chk@plt>
   16d08:	mov	r2, #5
   16d0c:	movw	r1, #38504	; 0x9668
   16d10:	movt	r1, #1
   16d14:	mov	r0, #0
   16d18:	bl	10dc8 <dcgettext@plt>
   16d1c:	mov	r1, r0
   16d20:	movw	r3, #36336	; 0x8df0
   16d24:	movt	r3, #1
   16d28:	movw	r2, #36376	; 0x8e18
   16d2c:	movt	r2, #1
   16d30:	mov	r0, #1
   16d34:	bl	10f0c <__printf_chk@plt>
   16d38:	mov	r2, #5
   16d3c:	movw	r1, #38524	; 0x967c
   16d40:	movt	r1, #1
   16d44:	mov	r0, #0
   16d48:	bl	10dc8 <dcgettext@plt>
   16d4c:	mov	r1, r0
   16d50:	movw	r2, #38564	; 0x96a4
   16d54:	movt	r2, #1
   16d58:	mov	r0, #1
   16d5c:	ldr	r4, [sp]
   16d60:	ldr	lr, [sp, #4]
   16d64:	add	sp, sp, #8
   16d68:	b	10f0c <__printf_chk@plt>
   16d6c:	strd	r4, [sp, #-16]!
   16d70:	mov	r4, r0
   16d74:	mov	r5, r2
   16d78:	str	r6, [sp, #8]
   16d7c:	mov	r6, r1
   16d80:	str	lr, [sp, #12]
   16d84:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   16d88:	cmp	r0, #0
   16d8c:	beq	16da0 <_obstack_memory_used@@Base+0x4260>
   16d90:	ldrd	r4, [sp]
   16d94:	ldr	r6, [sp, #8]
   16d98:	add	sp, sp, #12
   16d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   16da0:	cmp	r4, #0
   16da4:	beq	16db4 <_obstack_memory_used@@Base+0x4274>
   16da8:	cmp	r6, #0
   16dac:	cmpne	r5, #0
   16db0:	beq	16d90 <_obstack_memory_used@@Base+0x4250>
   16db4:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16db8:	str	r4, [sp, #-8]!
   16dbc:	str	lr, [sp, #4]
   16dc0:	bl	17428 <_obstack_memory_used@@Base+0x48e8>
   16dc4:	cmp	r0, #0
   16dc8:	beq	16dd8 <_obstack_memory_used@@Base+0x4298>
   16dcc:	ldr	r4, [sp]
   16dd0:	add	sp, sp, #4
   16dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   16dd8:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16ddc:	str	r4, [sp, #-8]!
   16de0:	str	lr, [sp, #4]
   16de4:	bl	17428 <_obstack_memory_used@@Base+0x48e8>
   16de8:	cmp	r0, #0
   16dec:	beq	16dfc <_obstack_memory_used@@Base+0x42bc>
   16df0:	ldr	r4, [sp]
   16df4:	add	sp, sp, #4
   16df8:	pop	{pc}		; (ldr pc, [sp], #4)
   16dfc:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16e00:	str	r4, [sp, #-8]!
   16e04:	str	lr, [sp, #4]
   16e08:	bl	17428 <_obstack_memory_used@@Base+0x48e8>
   16e0c:	cmp	r0, #0
   16e10:	beq	16e20 <_obstack_memory_used@@Base+0x42e0>
   16e14:	ldr	r4, [sp]
   16e18:	add	sp, sp, #4
   16e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e20:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16e24:	strd	r4, [sp, #-16]!
   16e28:	mov	r5, r0
   16e2c:	mov	r4, r1
   16e30:	str	r6, [sp, #8]
   16e34:	str	lr, [sp, #12]
   16e38:	bl	17464 <_obstack_memory_used@@Base+0x4924>
   16e3c:	cmp	r0, #0
   16e40:	beq	16e54 <_obstack_memory_used@@Base+0x4314>
   16e44:	ldrd	r4, [sp]
   16e48:	ldr	r6, [sp, #8]
   16e4c:	add	sp, sp, #12
   16e50:	pop	{pc}		; (ldr pc, [sp], #4)
   16e54:	adds	r4, r4, #0
   16e58:	movne	r4, #1
   16e5c:	cmp	r5, #0
   16e60:	moveq	r4, #1
   16e64:	cmp	r4, #0
   16e68:	beq	16e44 <_obstack_memory_used@@Base+0x4304>
   16e6c:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16e70:	cmp	r1, #0
   16e74:	orreq	r1, r1, #1
   16e78:	str	r4, [sp, #-8]!
   16e7c:	str	lr, [sp, #4]
   16e80:	bl	17464 <_obstack_memory_used@@Base+0x4924>
   16e84:	cmp	r0, #0
   16e88:	beq	16e98 <_obstack_memory_used@@Base+0x4358>
   16e8c:	ldr	r4, [sp]
   16e90:	add	sp, sp, #4
   16e94:	pop	{pc}		; (ldr pc, [sp], #4)
   16e98:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16e9c:	strd	r4, [sp, #-16]!
   16ea0:	mov	r4, r0
   16ea4:	mov	r5, r2
   16ea8:	str	r6, [sp, #8]
   16eac:	mov	r6, r1
   16eb0:	str	lr, [sp, #12]
   16eb4:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   16eb8:	cmp	r0, #0
   16ebc:	beq	16ed0 <_obstack_memory_used@@Base+0x4390>
   16ec0:	ldrd	r4, [sp]
   16ec4:	ldr	r6, [sp, #8]
   16ec8:	add	sp, sp, #12
   16ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   16ed0:	cmp	r4, #0
   16ed4:	beq	16ee4 <_obstack_memory_used@@Base+0x43a4>
   16ed8:	cmp	r6, #0
   16edc:	cmpne	r5, #0
   16ee0:	beq	16ec0 <_obstack_memory_used@@Base+0x4380>
   16ee4:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16ee8:	cmp	r2, #0
   16eec:	cmpne	r1, #0
   16ef0:	str	r4, [sp, #-8]!
   16ef4:	moveq	r2, #1
   16ef8:	str	lr, [sp, #4]
   16efc:	moveq	r1, r2
   16f00:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   16f04:	cmp	r0, #0
   16f08:	beq	16f18 <_obstack_memory_used@@Base+0x43d8>
   16f0c:	ldr	r4, [sp]
   16f10:	add	sp, sp, #4
   16f14:	pop	{pc}		; (ldr pc, [sp], #4)
   16f18:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16f1c:	mov	r2, r1
   16f20:	mov	r1, r0
   16f24:	str	r4, [sp, #-8]!
   16f28:	mov	r0, #0
   16f2c:	str	lr, [sp, #4]
   16f30:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   16f34:	cmp	r0, #0
   16f38:	beq	16f48 <_obstack_memory_used@@Base+0x4408>
   16f3c:	ldr	r4, [sp]
   16f40:	add	sp, sp, #4
   16f44:	pop	{pc}		; (ldr pc, [sp], #4)
   16f48:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16f4c:	cmp	r1, #0
   16f50:	cmpne	r0, #0
   16f54:	str	r4, [sp, #-8]!
   16f58:	moveq	r2, #1
   16f5c:	movne	r2, r1
   16f60:	str	lr, [sp, #4]
   16f64:	movne	r1, r0
   16f68:	moveq	r1, r2
   16f6c:	mov	r0, #0
   16f70:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   16f74:	cmp	r0, #0
   16f78:	beq	16f88 <_obstack_memory_used@@Base+0x4448>
   16f7c:	ldr	r4, [sp]
   16f80:	add	sp, sp, #4
   16f84:	pop	{pc}		; (ldr pc, [sp], #4)
   16f88:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16f8c:	cmp	r0, #0
   16f90:	strd	r4, [sp, #-16]!
   16f94:	mov	r5, r1
   16f98:	ldr	r4, [r1]
   16f9c:	str	r6, [sp, #8]
   16fa0:	str	lr, [sp, #12]
   16fa4:	beq	16fec <_obstack_memory_used@@Base+0x44ac>
   16fa8:	lsr	r3, r4, #1
   16fac:	add	r3, r3, #1
   16fb0:	adds	r4, r4, r3
   16fb4:	bcs	16fe8 <_obstack_memory_used@@Base+0x44a8>
   16fb8:	mov	r2, #1
   16fbc:	mov	r1, r4
   16fc0:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   16fc4:	cmp	r0, #0
   16fc8:	beq	16fe0 <_obstack_memory_used@@Base+0x44a0>
   16fcc:	ldr	r6, [sp, #8]
   16fd0:	str	r4, [r5]
   16fd4:	ldrd	r4, [sp]
   16fd8:	add	sp, sp, #12
   16fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   16fe0:	cmp	r4, #0
   16fe4:	beq	16fcc <_obstack_memory_used@@Base+0x448c>
   16fe8:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   16fec:	cmp	r4, #0
   16ff0:	mov	r2, #1
   16ff4:	moveq	r4, #64	; 0x40
   16ff8:	mov	r1, r4
   16ffc:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   17000:	cmp	r0, #0
   17004:	bne	16fcc <_obstack_memory_used@@Base+0x448c>
   17008:	b	16fe8 <_obstack_memory_used@@Base+0x44a8>
   1700c:	cmp	r0, #0
   17010:	strd	r4, [sp, #-16]!
   17014:	mov	r5, r1
   17018:	ldr	r4, [r1]
   1701c:	str	r6, [sp, #8]
   17020:	mov	r6, r2
   17024:	str	lr, [sp, #12]
   17028:	beq	17070 <_obstack_memory_used@@Base+0x4530>
   1702c:	lsr	r3, r4, #1
   17030:	add	r3, r3, #1
   17034:	adds	r4, r4, r3
   17038:	bcs	1706c <_obstack_memory_used@@Base+0x452c>
   1703c:	mov	r1, r4
   17040:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   17044:	cmp	r0, #0
   17048:	beq	17060 <_obstack_memory_used@@Base+0x4520>
   1704c:	ldr	r6, [sp, #8]
   17050:	str	r4, [r5]
   17054:	ldrd	r4, [sp]
   17058:	add	sp, sp, #12
   1705c:	pop	{pc}		; (ldr pc, [sp], #4)
   17060:	cmp	r4, #0
   17064:	cmpne	r6, #0
   17068:	beq	1704c <_obstack_memory_used@@Base+0x450c>
   1706c:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   17070:	cmp	r4, #0
   17074:	bne	17088 <_obstack_memory_used@@Base+0x4548>
   17078:	mov	r4, #64	; 0x40
   1707c:	udiv	r4, r4, r2
   17080:	cmp	r2, #64	; 0x40
   17084:	addhi	r4, r4, #1
   17088:	mov	r2, r6
   1708c:	mov	r1, r4
   17090:	mov	r0, #0
   17094:	bl	17600 <_obstack_memory_used@@Base+0x4ac0>
   17098:	cmp	r0, #0
   1709c:	bne	1704c <_obstack_memory_used@@Base+0x450c>
   170a0:	b	1706c <_obstack_memory_used@@Base+0x452c>
   170a4:	ldr	ip, [r1]
   170a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   170ac:	strd	r6, [sp, #8]
   170b0:	mov	r7, r1
   170b4:	mov	r6, r0
   170b8:	str	r8, [sp, #16]
   170bc:	mvn	r8, r3
   170c0:	lsr	r8, r8, #31
   170c4:	str	lr, [sp, #20]
   170c8:	asr	r1, ip, #1
   170cc:	ldr	lr, [sp, #24]
   170d0:	adds	r4, ip, r1
   170d4:	mvnvs	r4, #-2147483648	; 0x80000000
   170d8:	cmp	r3, r4
   170dc:	movge	r1, #0
   170e0:	andlt	r1, r8, #1
   170e4:	cmp	r1, #0
   170e8:	movne	r4, r3
   170ec:	smull	r0, r1, r4, lr
   170f0:	cmp	r1, r0, asr #31
   170f4:	bne	171a4 <_obstack_memory_used@@Base+0x4664>
   170f8:	cmp	r0, #63	; 0x3f
   170fc:	mov	r5, r0
   17100:	ble	17170 <_obstack_memory_used@@Base+0x4630>
   17104:	cmp	r6, #0
   17108:	sub	r1, r4, ip
   1710c:	streq	r6, [r7]
   17110:	cmp	r1, r2
   17114:	bge	17144 <_obstack_memory_used@@Base+0x4604>
   17118:	adds	r4, ip, r2
   1711c:	bvs	171a0 <_obstack_memory_used@@Base+0x4660>
   17120:	cmp	r4, r3
   17124:	movle	r3, #0
   17128:	andgt	r3, r8, #1
   1712c:	cmp	r3, #0
   17130:	bne	171a0 <_obstack_memory_used@@Base+0x4660>
   17134:	smull	r0, r1, r4, lr
   17138:	cmp	r1, r0, asr #31
   1713c:	mov	r5, r0
   17140:	bne	171a0 <_obstack_memory_used@@Base+0x4660>
   17144:	mov	r1, r5
   17148:	mov	r0, r6
   1714c:	bl	17464 <_obstack_memory_used@@Base+0x4924>
   17150:	cmp	r0, #0
   17154:	beq	17184 <_obstack_memory_used@@Base+0x4644>
   17158:	ldr	r8, [sp, #16]
   1715c:	str	r4, [r7]
   17160:	ldrd	r4, [sp]
   17164:	ldrd	r6, [sp, #8]
   17168:	add	sp, sp, #20
   1716c:	pop	{pc}		; (ldr pc, [sp], #4)
   17170:	mov	r0, #64	; 0x40
   17174:	sdiv	r4, r0, lr
   17178:	mls	r5, lr, r4, r0
   1717c:	sub	r5, r0, r5
   17180:	b	17104 <_obstack_memory_used@@Base+0x45c4>
   17184:	adds	r5, r5, #0
   17188:	movne	r5, #1
   1718c:	cmp	r6, #0
   17190:	movne	r6, r5
   17194:	moveq	r6, #1
   17198:	cmp	r6, #0
   1719c:	beq	17158 <_obstack_memory_used@@Base+0x4618>
   171a0:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   171a4:	mvn	r0, #-2147483648	; 0x80000000
   171a8:	b	17174 <_obstack_memory_used@@Base+0x4634>
   171ac:	mov	r1, #1
   171b0:	str	r4, [sp, #-8]!
   171b4:	str	lr, [sp, #4]
   171b8:	bl	173b4 <_obstack_memory_used@@Base+0x4874>
   171bc:	cmp	r0, #0
   171c0:	beq	171d0 <_obstack_memory_used@@Base+0x4690>
   171c4:	ldr	r4, [sp]
   171c8:	add	sp, sp, #4
   171cc:	pop	{pc}		; (ldr pc, [sp], #4)
   171d0:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   171d4:	mov	r1, #1
   171d8:	str	r4, [sp, #-8]!
   171dc:	str	lr, [sp, #4]
   171e0:	bl	173b4 <_obstack_memory_used@@Base+0x4874>
   171e4:	cmp	r0, #0
   171e8:	beq	171f8 <_obstack_memory_used@@Base+0x46b8>
   171ec:	ldr	r4, [sp]
   171f0:	add	sp, sp, #4
   171f4:	pop	{pc}		; (ldr pc, [sp], #4)
   171f8:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   171fc:	str	r4, [sp, #-8]!
   17200:	str	lr, [sp, #4]
   17204:	bl	173b4 <_obstack_memory_used@@Base+0x4874>
   17208:	cmp	r0, #0
   1720c:	beq	1721c <_obstack_memory_used@@Base+0x46dc>
   17210:	ldr	r4, [sp]
   17214:	add	sp, sp, #4
   17218:	pop	{pc}		; (ldr pc, [sp], #4)
   1721c:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   17220:	str	r4, [sp, #-8]!
   17224:	str	lr, [sp, #4]
   17228:	bl	173b4 <_obstack_memory_used@@Base+0x4874>
   1722c:	cmp	r0, #0
   17230:	beq	17240 <_obstack_memory_used@@Base+0x4700>
   17234:	ldr	r4, [sp]
   17238:	add	sp, sp, #4
   1723c:	pop	{pc}		; (ldr pc, [sp], #4)
   17240:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   17244:	strd	r4, [sp, #-16]!
   17248:	mov	r4, r1
   1724c:	str	r6, [sp, #8]
   17250:	mov	r6, r0
   17254:	mov	r0, r1
   17258:	str	lr, [sp, #12]
   1725c:	bl	17428 <_obstack_memory_used@@Base+0x48e8>
   17260:	subs	r5, r0, #0
   17264:	beq	17288 <_obstack_memory_used@@Base+0x4748>
   17268:	mov	r2, r4
   1726c:	mov	r1, r6
   17270:	bl	10d8c <memcpy@plt>
   17274:	mov	r0, r5
   17278:	ldrd	r4, [sp]
   1727c:	ldr	r6, [sp, #8]
   17280:	add	sp, sp, #12
   17284:	pop	{pc}		; (ldr pc, [sp], #4)
   17288:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   1728c:	strd	r4, [sp, #-16]!
   17290:	mov	r4, r1
   17294:	str	r6, [sp, #8]
   17298:	mov	r6, r0
   1729c:	mov	r0, r1
   172a0:	str	lr, [sp, #12]
   172a4:	bl	17428 <_obstack_memory_used@@Base+0x48e8>
   172a8:	subs	r5, r0, #0
   172ac:	beq	172d0 <_obstack_memory_used@@Base+0x4790>
   172b0:	mov	r2, r4
   172b4:	mov	r1, r6
   172b8:	bl	10d8c <memcpy@plt>
   172bc:	mov	r0, r5
   172c0:	ldrd	r4, [sp]
   172c4:	ldr	r6, [sp, #8]
   172c8:	add	sp, sp, #12
   172cc:	pop	{pc}		; (ldr pc, [sp], #4)
   172d0:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   172d4:	strd	r4, [sp, #-16]!
   172d8:	mov	r4, r1
   172dc:	str	r6, [sp, #8]
   172e0:	mov	r6, r0
   172e4:	add	r0, r1, #1
   172e8:	str	lr, [sp, #12]
   172ec:	bl	17428 <_obstack_memory_used@@Base+0x48e8>
   172f0:	subs	r5, r0, #0
   172f4:	beq	17320 <_obstack_memory_used@@Base+0x47e0>
   172f8:	mov	r3, #0
   172fc:	mov	r1, r6
   17300:	mov	r2, r4
   17304:	strb	r3, [r5, r4]
   17308:	bl	10d8c <memcpy@plt>
   1730c:	mov	r0, r5
   17310:	ldrd	r4, [sp]
   17314:	ldr	r6, [sp, #8]
   17318:	add	sp, sp, #12
   1731c:	pop	{pc}		; (ldr pc, [sp], #4)
   17320:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   17324:	strd	r4, [sp, #-16]!
   17328:	str	r6, [sp, #8]
   1732c:	mov	r6, r0
   17330:	str	lr, [sp, #12]
   17334:	bl	10edc <strlen@plt>
   17338:	add	r4, r0, #1
   1733c:	mov	r0, r4
   17340:	bl	17428 <_obstack_memory_used@@Base+0x48e8>
   17344:	subs	r5, r0, #0
   17348:	beq	1736c <_obstack_memory_used@@Base+0x482c>
   1734c:	mov	r2, r4
   17350:	mov	r1, r6
   17354:	bl	10d8c <memcpy@plt>
   17358:	mov	r0, r5
   1735c:	ldrd	r4, [sp]
   17360:	ldr	r6, [sp, #8]
   17364:	add	sp, sp, #12
   17368:	pop	{pc}		; (ldr pc, [sp], #4)
   1736c:	bl	17370 <_obstack_memory_used@@Base+0x4830>
   17370:	movw	r3, #41192	; 0xa0e8
   17374:	movt	r3, #2
   17378:	str	r4, [sp, #-8]!
   1737c:	ldr	r4, [r3]
   17380:	mov	r2, #5
   17384:	movw	r1, #37544	; 0x92a8
   17388:	movt	r1, #1
   1738c:	mov	r0, #0
   17390:	str	lr, [sp, #4]
   17394:	bl	10dc8 <dcgettext@plt>
   17398:	mov	r3, r0
   1739c:	movw	r2, #37528	; 0x9298
   173a0:	movt	r2, #1
   173a4:	mov	r1, #0
   173a8:	mov	r0, r4
   173ac:	bl	10e40 <error@plt>
   173b0:	bl	10f84 <abort@plt>
   173b4:	cmp	r1, #0
   173b8:	cmpne	r0, #0
   173bc:	beq	17408 <_obstack_memory_used@@Base+0x48c8>
   173c0:	strd	r4, [sp, #-16]!
   173c4:	umull	r4, r5, r0, r1
   173c8:	str	r6, [sp, #8]
   173cc:	str	lr, [sp, #12]
   173d0:	adds	r3, r5, #0
   173d4:	movne	r3, #1
   173d8:	cmp	r4, #0
   173dc:	blt	173e8 <_obstack_memory_used@@Base+0x48a8>
   173e0:	cmp	r3, #0
   173e4:	beq	17414 <_obstack_memory_used@@Base+0x48d4>
   173e8:	bl	10ee8 <__errno_location@plt>
   173ec:	mov	r3, #12
   173f0:	ldrd	r4, [sp]
   173f4:	ldr	r6, [sp, #8]
   173f8:	add	sp, sp, #12
   173fc:	str	r3, [r0]
   17400:	mov	r0, #0
   17404:	pop	{pc}		; (ldr pc, [sp], #4)
   17408:	mov	r1, #1
   1740c:	mov	r0, r1
   17410:	b	10d38 <calloc@plt>
   17414:	ldrd	r4, [sp]
   17418:	ldr	r6, [sp, #8]
   1741c:	ldr	lr, [sp, #12]
   17420:	add	sp, sp, #16
   17424:	b	10d38 <calloc@plt>
   17428:	cmp	r0, #0
   1742c:	beq	17438 <_obstack_memory_used@@Base+0x48f8>
   17430:	blt	17440 <_obstack_memory_used@@Base+0x4900>
   17434:	b	10e7c <malloc@plt>
   17438:	mov	r0, #1
   1743c:	b	10e7c <malloc@plt>
   17440:	str	r4, [sp, #-8]!
   17444:	str	lr, [sp, #4]
   17448:	bl	10ee8 <__errno_location@plt>
   1744c:	mov	r3, #12
   17450:	ldr	r4, [sp]
   17454:	add	sp, sp, #4
   17458:	str	r3, [r0]
   1745c:	mov	r0, #0
   17460:	pop	{pc}		; (ldr pc, [sp], #4)
   17464:	cmp	r0, #0
   17468:	beq	17490 <_obstack_memory_used@@Base+0x4950>
   1746c:	cmp	r1, #0
   17470:	str	r4, [sp, #-8]!
   17474:	str	lr, [sp, #4]
   17478:	beq	17498 <_obstack_memory_used@@Base+0x4958>
   1747c:	blt	174ac <_obstack_memory_used@@Base+0x496c>
   17480:	ldr	r4, [sp]
   17484:	ldr	lr, [sp, #4]
   17488:	add	sp, sp, #8
   1748c:	b	10de0 <realloc@plt>
   17490:	mov	r0, r1
   17494:	b	17428 <_obstack_memory_used@@Base+0x48e8>
   17498:	bl	123a4 <close@plt+0x1414>
   1749c:	ldr	r4, [sp]
   174a0:	add	sp, sp, #4
   174a4:	mov	r0, #0
   174a8:	pop	{pc}		; (ldr pc, [sp], #4)
   174ac:	bl	10ee8 <__errno_location@plt>
   174b0:	mov	r3, #12
   174b4:	str	r3, [r0]
   174b8:	b	1749c <_obstack_memory_used@@Base+0x495c>
   174bc:	strd	r4, [sp, #-16]!
   174c0:	mov	r4, r0
   174c4:	str	r6, [sp, #8]
   174c8:	str	lr, [sp, #12]
   174cc:	bl	10e28 <__fpending@plt>
   174d0:	ldr	r5, [r4]
   174d4:	mov	r6, r0
   174d8:	mov	r0, r4
   174dc:	bl	12290 <close@plt+0x1300>
   174e0:	mov	r4, r0
   174e4:	and	r5, r5, #32
   174e8:	cmp	r5, #0
   174ec:	bne	17524 <_obstack_memory_used@@Base+0x49e4>
   174f0:	cmp	r0, #0
   174f4:	beq	17510 <_obstack_memory_used@@Base+0x49d0>
   174f8:	cmp	r6, #0
   174fc:	bne	1753c <_obstack_memory_used@@Base+0x49fc>
   17500:	bl	10ee8 <__errno_location@plt>
   17504:	ldr	r4, [r0]
   17508:	subs	r4, r4, #9
   1750c:	mvnne	r4, #0
   17510:	mov	r0, r4
   17514:	ldrd	r4, [sp]
   17518:	ldr	r6, [sp, #8]
   1751c:	add	sp, sp, #12
   17520:	pop	{pc}		; (ldr pc, [sp], #4)
   17524:	cmp	r0, #0
   17528:	bne	1753c <_obstack_memory_used@@Base+0x49fc>
   1752c:	bl	10ee8 <__errno_location@plt>
   17530:	str	r4, [r0]
   17534:	mvn	r4, #0
   17538:	b	17510 <_obstack_memory_used@@Base+0x49d0>
   1753c:	mvn	r4, #0
   17540:	b	17510 <_obstack_memory_used@@Base+0x49d0>
   17544:	mov	r0, #14
   17548:	str	r4, [sp, #-8]!
   1754c:	str	lr, [sp, #4]
   17550:	bl	10f60 <nl_langinfo@plt>
   17554:	cmp	r0, #0
   17558:	beq	1757c <_obstack_memory_used@@Base+0x4a3c>
   1755c:	ldrb	r2, [r0]
   17560:	movw	r3, #38644	; 0x96f4
   17564:	movt	r3, #1
   17568:	ldr	r4, [sp]
   1756c:	add	sp, sp, #4
   17570:	cmp	r2, #0
   17574:	moveq	r0, r3
   17578:	pop	{pc}		; (ldr pc, [sp], #4)
   1757c:	ldr	r4, [sp]
   17580:	add	sp, sp, #4
   17584:	movw	r0, #38644	; 0x96f4
   17588:	movt	r0, #1
   1758c:	pop	{pc}		; (ldr pc, [sp], #4)
   17590:	strd	r4, [sp, #-20]!	; 0xffffffec
   17594:	mov	r5, r2
   17598:	strd	r6, [sp, #8]
   1759c:	subs	r6, r0, #0
   175a0:	mov	r7, r1
   175a4:	str	lr, [sp, #16]
   175a8:	sub	sp, sp, #12
   175ac:	addeq	r6, sp, #4
   175b0:	mov	r0, r6
   175b4:	bl	10e34 <mbrtowc@plt>
   175b8:	cmp	r5, #0
   175bc:	cmnne	r0, #3
   175c0:	mov	r4, r0
   175c4:	bhi	175e0 <_obstack_memory_used@@Base+0x4aa0>
   175c8:	mov	r0, r4
   175cc:	add	sp, sp, #12
   175d0:	ldrd	r4, [sp]
   175d4:	ldrd	r6, [sp, #8]
   175d8:	add	sp, sp, #16
   175dc:	pop	{pc}		; (ldr pc, [sp], #4)
   175e0:	mov	r0, #0
   175e4:	bl	17638 <_obstack_memory_used@@Base+0x4af8>
   175e8:	cmp	r0, #0
   175ec:	bne	175c8 <_obstack_memory_used@@Base+0x4a88>
   175f0:	ldrb	r3, [r7]
   175f4:	mov	r4, #1
   175f8:	str	r3, [r6]
   175fc:	b	175c8 <_obstack_memory_used@@Base+0x4a88>
   17600:	umull	r2, r3, r1, r2
   17604:	cmp	r3, #0
   17608:	bne	17614 <_obstack_memory_used@@Base+0x4ad4>
   1760c:	mov	r1, r2
   17610:	b	17464 <_obstack_memory_used@@Base+0x4924>
   17614:	str	r4, [sp, #-8]!
   17618:	str	lr, [sp, #4]
   1761c:	bl	10ee8 <__errno_location@plt>
   17620:	mov	r3, #12
   17624:	ldr	r4, [sp]
   17628:	add	sp, sp, #4
   1762c:	str	r3, [r0]
   17630:	mov	r0, #0
   17634:	pop	{pc}		; (ldr pc, [sp], #4)
   17638:	push	{lr}		; (str lr, [sp, #-4]!)
   1763c:	sub	sp, sp, #268	; 0x10c
   17640:	movw	r2, #257	; 0x101
   17644:	add	r1, sp, #4
   17648:	bl	17690 <_obstack_memory_used@@Base+0x4b50>
   1764c:	cmp	r0, #0
   17650:	movne	r0, #0
   17654:	bne	17688 <_obstack_memory_used@@Base+0x4b48>
   17658:	movw	r1, #38652	; 0x96fc
   1765c:	movt	r1, #1
   17660:	add	r0, sp, #4
   17664:	bl	10d5c <strcmp@plt>
   17668:	cmp	r0, #0
   1766c:	beq	17688 <_obstack_memory_used@@Base+0x4b48>
   17670:	add	r0, sp, #4
   17674:	movw	r1, #38656	; 0x9700
   17678:	movt	r1, #1
   1767c:	bl	10d5c <strcmp@plt>
   17680:	adds	r0, r0, #0
   17684:	movne	r0, #1
   17688:	add	sp, sp, #268	; 0x10c
   1768c:	pop	{pc}		; (ldr pc, [sp], #4)
   17690:	strd	r4, [sp, #-16]!
   17694:	mov	r5, r1
   17698:	mov	r1, #0
   1769c:	mov	r4, r2
   176a0:	str	r6, [sp, #8]
   176a4:	str	lr, [sp, #12]
   176a8:	bl	10f48 <setlocale@plt>
   176ac:	subs	r6, r0, #0
   176b0:	beq	17730 <_obstack_memory_used@@Base+0x4bf0>
   176b4:	bl	10edc <strlen@plt>
   176b8:	cmp	r4, r0
   176bc:	bhi	176dc <_obstack_memory_used@@Base+0x4b9c>
   176c0:	cmp	r4, #0
   176c4:	moveq	r0, #34	; 0x22
   176c8:	bne	17700 <_obstack_memory_used@@Base+0x4bc0>
   176cc:	ldrd	r4, [sp]
   176d0:	ldr	r6, [sp, #8]
   176d4:	add	sp, sp, #12
   176d8:	pop	{pc}		; (ldr pc, [sp], #4)
   176dc:	add	r2, r0, #1
   176e0:	mov	r1, r6
   176e4:	mov	r0, r5
   176e8:	bl	10d8c <memcpy@plt>
   176ec:	ldrd	r4, [sp]
   176f0:	mov	r0, #0
   176f4:	ldr	r6, [sp, #8]
   176f8:	add	sp, sp, #12
   176fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17700:	sub	r4, r4, #1
   17704:	mov	r1, r6
   17708:	mov	r2, r4
   1770c:	mov	r0, r5
   17710:	bl	10d8c <memcpy@plt>
   17714:	mov	r3, #0
   17718:	mov	r0, #34	; 0x22
   1771c:	strb	r3, [r5, r4]
   17720:	ldrd	r4, [sp]
   17724:	ldr	r6, [sp, #8]
   17728:	add	sp, sp, #12
   1772c:	pop	{pc}		; (ldr pc, [sp], #4)
   17730:	cmp	r4, #0
   17734:	mov	r0, #22
   17738:	strbne	r6, [r5]
   1773c:	ldrd	r4, [sp]
   17740:	ldr	r6, [sp, #8]
   17744:	add	sp, sp, #12
   17748:	pop	{pc}		; (ldr pc, [sp], #4)
   1774c:	mov	r1, #0
   17750:	b	10f48 <setlocale@plt>
   17754:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17758:	mov	r7, r0
   1775c:	ldr	r6, [pc, #72]	; 177ac <_obstack_memory_used@@Base+0x4c6c>
   17760:	ldr	r5, [pc, #72]	; 177b0 <_obstack_memory_used@@Base+0x4c70>
   17764:	add	r6, pc, r6
   17768:	add	r5, pc, r5
   1776c:	sub	r6, r6, r5
   17770:	mov	r8, r1
   17774:	mov	r9, r2
   17778:	bl	10d18 <calloc@plt-0x20>
   1777c:	asrs	r6, r6, #2
   17780:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17784:	mov	r4, #0
   17788:	add	r4, r4, #1
   1778c:	ldr	r3, [r5], #4
   17790:	mov	r2, r9
   17794:	mov	r1, r8
   17798:	mov	r0, r7
   1779c:	blx	r3
   177a0:	cmp	r6, r4
   177a4:	bne	17788 <_obstack_memory_used@@Base+0x4c48>
   177a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   177ac:	andeq	r2, r1, r8, lsr #15
   177b0:	andeq	r2, r1, r0, lsr #15
   177b4:	bx	lr
   177b8:	ldr	r3, [pc, #12]	; 177cc <_obstack_memory_used@@Base+0x4c8c>
   177bc:	mov	r1, #0
   177c0:	add	r3, pc, r3
   177c4:	ldr	r2, [r3]
   177c8:	b	10ef4 <__cxa_atexit@plt>
   177cc:	andeq	r2, r1, r8, lsl r9

Disassembly of section .fini:

000177d0 <.fini>:
   177d0:	push	{r3, lr}
   177d4:	pop	{r3, pc}
