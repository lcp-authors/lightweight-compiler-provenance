
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00011f7c <.init>:
   11f7c:	push	{r3, lr}
   11f80:	bl	1217c <_start@@Base+0x3c>
   11f84:	pop	{r3, pc}

Disassembly of section .plt:

00011f88 <fdopen@plt-0x14>:
   11f88:	push	{lr}		; (str lr, [sp, #-4]!)
   11f8c:	ldr	lr, [pc, #4]	; 11f98 <fdopen@plt-0x4>
   11f90:	add	lr, pc, lr
   11f94:	ldr	pc, [lr, #8]!
   11f98:	andeq	sp, r1, r8, rrx

00011f9c <fdopen@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #118784	; 0x1d000
   11fa4:	ldr	pc, [ip, #104]!	; 0x68

00011fa8 <raise@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #118784	; 0x1d000
   11fb0:	ldr	pc, [ip, #96]!	; 0x60

00011fb4 <setbuf@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #118784	; 0x1d000
   11fbc:	ldr	pc, [ip, #88]!	; 0x58

00011fc0 <strtol@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #118784	; 0x1d000
   11fc8:	ldr	pc, [ip, #80]!	; 0x50

00011fcc <longjmp@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #118784	; 0x1d000
   11fd4:	ldr	pc, [ip, #72]!	; 0x48

00011fd8 <_setjmp@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #118784	; 0x1d000
   11fe0:	ldr	pc, [ip, #64]!	; 0x40

00011fe4 <free@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #118784	; 0x1d000
   11fec:	ldr	pc, [ip, #56]!	; 0x38

00011ff0 <memcpy@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #118784	; 0x1d000
   11ff8:	ldr	pc, [ip, #48]!	; 0x30

00011ffc <ftell@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #118784	; 0x1d000
   12004:	ldr	pc, [ip, #40]!	; 0x28

00012008 <fwrite@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #118784	; 0x1d000
   12010:	ldr	pc, [ip, #32]!

00012014 <strcpy@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #118784	; 0x1d000
   1201c:	ldr	pc, [ip, #24]!

00012020 <fread@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #118784	; 0x1d000
   12028:	ldr	pc, [ip, #16]!

0001202c <open64@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #118784	; 0x1d000
   12034:	ldr	pc, [ip, #8]!

00012038 <getenv@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #118784	; 0x1d000
   12040:	ldr	pc, [ip, #0]!

00012044 <malloc@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #28, 20	; 0x1c000
   1204c:	ldr	pc, [ip, #4088]!	; 0xff8

00012050 <__libc_start_main@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #28, 20	; 0x1c000
   12058:	ldr	pc, [ip, #4080]!	; 0xff0

0001205c <__gmon_start__@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #28, 20	; 0x1c000
   12064:	ldr	pc, [ip, #4072]!	; 0xfe8

00012068 <getpid@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #28, 20	; 0x1c000
   12070:	ldr	pc, [ip, #4064]!	; 0xfe0

00012074 <exit@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #28, 20	; 0x1c000
   1207c:	ldr	pc, [ip, #4056]!	; 0xfd8

00012080 <strlen@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #28, 20	; 0x1c000
   12088:	ldr	pc, [ip, #4048]!	; 0xfd0

0001208c <fprintf@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #28, 20	; 0x1c000
   12094:	ldr	pc, [ip, #4040]!	; 0xfc8

00012098 <__errno_location@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #28, 20	; 0x1c000
   120a0:	ldr	pc, [ip, #4032]!	; 0xfc0

000120a4 <mkdir@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #28, 20	; 0x1c000
   120ac:	ldr	pc, [ip, #4024]!	; 0xfb8

000120b0 <memset@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #28, 20	; 0x1c000
   120b8:	ldr	pc, [ip, #4016]!	; 0xfb0

000120bc <strncpy@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #28, 20	; 0x1c000
   120c4:	ldr	pc, [ip, #4008]!	; 0xfa8

000120c8 <access@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #28, 20	; 0x1c000
   120d0:	ldr	pc, [ip, #4000]!	; 0xfa0

000120d4 <fclose@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #28, 20	; 0x1c000
   120dc:	ldr	pc, [ip, #3992]!	; 0xf98

000120e0 <fcntl64@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #28, 20	; 0x1c000
   120e8:	ldr	pc, [ip, #3984]!	; 0xf90

000120ec <vfprintf@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #28, 20	; 0x1c000
   120f4:	ldr	pc, [ip, #3976]!	; 0xf88

000120f8 <putc@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #28, 20	; 0x1c000
   12100:	ldr	pc, [ip, #3968]!	; 0xf80

00012104 <atoi@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #28, 20	; 0x1c000
   1210c:	ldr	pc, [ip, #3960]!	; 0xf78

00012110 <fopen64@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #28, 20	; 0x1c000
   12118:	ldr	pc, [ip, #3952]!	; 0xf70

0001211c <fseek@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #28, 20	; 0x1c000
   12124:	ldr	pc, [ip, #3944]!	; 0xf68

00012128 <abort@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #28, 20	; 0x1c000
   12130:	ldr	pc, [ip, #3936]!	; 0xf60

00012134 <close@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #28, 20	; 0x1c000
   1213c:	ldr	pc, [ip, #3928]!	; 0xf58

Disassembly of section .text:

00012140 <_start@@Base>:
   12140:	mov	fp, #0
   12144:	mov	lr, #0
   12148:	pop	{r1}		; (ldr r1, [sp], #4)
   1214c:	mov	r2, sp
   12150:	push	{r2}		; (str r2, [sp, #-4]!)
   12154:	push	{r0}		; (str r0, [sp, #-4]!)
   12158:	ldr	ip, [pc, #16]	; 12170 <_start@@Base+0x30>
   1215c:	push	{ip}		; (str ip, [sp, #-4]!)
   12160:	ldr	r0, [pc, #12]	; 12174 <_start@@Base+0x34>
   12164:	ldr	r3, [pc, #12]	; 12178 <_start@@Base+0x38>
   12168:	bl	12050 <__libc_start_main@plt>
   1216c:	bl	12128 <abort@plt>
   12170:	andeq	sp, r1, r0, ror ip
   12174:	andeq	r4, r1, r4, lsr #22
   12178:	andeq	sp, r1, r0, lsl ip
   1217c:	ldr	r3, [pc, #20]	; 12198 <_start@@Base+0x58>
   12180:	ldr	r2, [pc, #20]	; 1219c <_start@@Base+0x5c>
   12184:	add	r3, pc, r3
   12188:	ldr	r2, [r3, r2]
   1218c:	cmp	r2, #0
   12190:	bxeq	lr
   12194:	b	1205c <__gmon_start__@plt>
   12198:	andeq	ip, r1, r4, ror lr
   1219c:	muleq	r0, ip, r0
   121a0:	ldr	r0, [pc, #24]	; 121c0 <_start@@Base+0x80>
   121a4:	ldr	r3, [pc, #24]	; 121c4 <_start@@Base+0x84>
   121a8:	cmp	r3, r0
   121ac:	bxeq	lr
   121b0:	ldr	r3, [pc, #16]	; 121c8 <_start@@Base+0x88>
   121b4:	cmp	r3, #0
   121b8:	bxeq	lr
   121bc:	bx	r3
   121c0:	andeq	pc, r2, ip, lsr #24
   121c4:	andeq	pc, r2, ip, lsr #24
   121c8:	andeq	r0, r0, r0
   121cc:	ldr	r0, [pc, #36]	; 121f8 <_start@@Base+0xb8>
   121d0:	ldr	r1, [pc, #36]	; 121fc <_start@@Base+0xbc>
   121d4:	sub	r1, r1, r0
   121d8:	asr	r1, r1, #2
   121dc:	add	r1, r1, r1, lsr #31
   121e0:	asrs	r1, r1, #1
   121e4:	bxeq	lr
   121e8:	ldr	r3, [pc, #16]	; 12200 <_start@@Base+0xc0>
   121ec:	cmp	r3, #0
   121f0:	bxeq	lr
   121f4:	bx	r3
   121f8:	andeq	pc, r2, ip, lsr #24
   121fc:	andeq	pc, r2, ip, lsr #24
   12200:	andeq	r0, r0, r0
   12204:	push	{r4, lr}
   12208:	ldr	r4, [pc, #24]	; 12228 <_start@@Base+0xe8>
   1220c:	ldrb	r3, [r4]
   12210:	cmp	r3, #0
   12214:	popne	{r4, pc}
   12218:	bl	121a0 <_start@@Base+0x60>
   1221c:	mov	r3, #1
   12220:	strb	r3, [r4]
   12224:	pop	{r4, pc}
   12228:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   1222c:	b	121cc <_start@@Base+0x8c>

00012230 <read_token_not@@Base>:
   12230:	str	r4, [sp, #-8]!
   12234:	str	lr, [sp, #4]
   12238:	sub	sp, sp, #24
   1223c:	movw	r4, #64576	; 0xfc40
   12240:	movt	r4, #2
   12244:	ldr	r3, [r4]
   12248:	ldr	r2, [r4, #4]
   1224c:	adds	r3, r3, #1
   12250:	adc	r2, r2, #0
   12254:	str	r3, [r4]
   12258:	str	r2, [r4, #4]
   1225c:	movw	r1, #56448	; 0xdc80
   12260:	movt	r1, #1
   12264:	add	r0, sp, #12
   12268:	bl	1a338 <init_lexer@@Base>
   1226c:	ldr	r3, [r4, #8]
   12270:	ldr	r2, [r4, #12]
   12274:	adds	r3, r3, #1
   12278:	adc	r2, r2, #0
   1227c:	str	r3, [r4, #8]
   12280:	str	r2, [r4, #12]
   12284:	add	r0, sp, #12
   12288:	bl	1a5b4 <next@@Base>
   1228c:	ldr	r3, [r4, #16]
   12290:	ldr	r2, [r4, #20]
   12294:	adds	r3, r3, #1
   12298:	adc	r2, r2, #0
   1229c:	str	r3, [r4, #16]
   122a0:	str	r2, [r4, #20]
   122a4:	ldr	r1, [r0]
   122a8:	mov	r3, #148	; 0x94
   122ac:	str	r3, [sp]
   122b0:	mov	r3, #620	; 0x26c
   122b4:	mov	r2, #0
   122b8:	mov	r0, #12
   122bc:	bl	16784 <UnityAssertEqualNumber@@Base>
   122c0:	ldr	r3, [r4, #24]
   122c4:	ldr	r2, [r4, #28]
   122c8:	adds	r3, r3, #1
   122cc:	adc	r2, r2, #0
   122d0:	str	r3, [r4, #24]
   122d4:	str	r2, [r4, #28]
   122d8:	add	r0, sp, #12
   122dc:	bl	1a3a4 <destroy_lexer@@Base>
   122e0:	ldr	r3, [r4, #32]
   122e4:	ldr	r2, [r4, #36]	; 0x24
   122e8:	adds	r3, r3, #1
   122ec:	adc	r2, r2, #0
   122f0:	str	r3, [r4, #32]
   122f4:	str	r2, [r4, #36]	; 0x24
   122f8:	add	sp, sp, #24
   122fc:	ldr	r4, [sp]
   12300:	add	sp, sp, #4
   12304:	pop	{pc}		; (ldr pc, [sp], #4)

00012308 <read_token_greaterthan@@Base>:
   12308:	str	r4, [sp, #-8]!
   1230c:	str	lr, [sp, #4]
   12310:	sub	sp, sp, #24
   12314:	movw	r4, #64576	; 0xfc40
   12318:	movt	r4, #2
   1231c:	ldr	r3, [r4, #40]	; 0x28
   12320:	ldr	r2, [r4, #44]	; 0x2c
   12324:	adds	r3, r3, #1
   12328:	adc	r2, r2, #0
   1232c:	str	r3, [r4, #40]	; 0x28
   12330:	str	r2, [r4, #44]	; 0x2c
   12334:	movw	r1, #56452	; 0xdc84
   12338:	movt	r1, #1
   1233c:	add	r0, sp, #12
   12340:	bl	1a338 <init_lexer@@Base>
   12344:	ldr	r3, [r4, #48]	; 0x30
   12348:	ldr	r2, [r4, #52]	; 0x34
   1234c:	adds	r3, r3, #1
   12350:	adc	r2, r2, #0
   12354:	str	r3, [r4, #48]	; 0x30
   12358:	str	r2, [r4, #52]	; 0x34
   1235c:	add	r0, sp, #12
   12360:	bl	1a5b4 <next@@Base>
   12364:	ldr	r3, [r4, #56]	; 0x38
   12368:	ldr	r2, [r4, #60]	; 0x3c
   1236c:	adds	r3, r3, #1
   12370:	adc	r2, r2, #0
   12374:	str	r3, [r4, #56]	; 0x38
   12378:	str	r2, [r4, #60]	; 0x3c
   1237c:	ldr	r1, [r0]
   12380:	mov	r3, #148	; 0x94
   12384:	str	r3, [sp]
   12388:	movw	r3, #603	; 0x25b
   1238c:	mov	r2, #0
   12390:	mov	r0, #12
   12394:	bl	16784 <UnityAssertEqualNumber@@Base>
   12398:	ldr	r3, [r4, #64]	; 0x40
   1239c:	ldr	r2, [r4, #68]	; 0x44
   123a0:	adds	r3, r3, #1
   123a4:	adc	r2, r2, #0
   123a8:	str	r3, [r4, #64]	; 0x40
   123ac:	str	r2, [r4, #68]	; 0x44
   123b0:	add	r0, sp, #12
   123b4:	bl	1a3a4 <destroy_lexer@@Base>
   123b8:	ldr	r3, [r4, #72]	; 0x48
   123bc:	ldr	r2, [r4, #76]	; 0x4c
   123c0:	adds	r3, r3, #1
   123c4:	adc	r2, r2, #0
   123c8:	str	r3, [r4, #72]	; 0x48
   123cc:	str	r2, [r4, #76]	; 0x4c
   123d0:	add	sp, sp, #24
   123d4:	ldr	r4, [sp]
   123d8:	add	sp, sp, #4
   123dc:	pop	{pc}		; (ldr pc, [sp], #4)

000123e0 <read_token_lessthan@@Base>:
   123e0:	str	r4, [sp, #-8]!
   123e4:	str	lr, [sp, #4]
   123e8:	sub	sp, sp, #24
   123ec:	movw	r4, #64576	; 0xfc40
   123f0:	movt	r4, #2
   123f4:	ldr	r3, [r4, #80]	; 0x50
   123f8:	ldr	r2, [r4, #84]	; 0x54
   123fc:	adds	r3, r3, #1
   12400:	adc	r2, r2, #0
   12404:	str	r3, [r4, #80]	; 0x50
   12408:	str	r2, [r4, #84]	; 0x54
   1240c:	movw	r1, #56456	; 0xdc88
   12410:	movt	r1, #1
   12414:	add	r0, sp, #12
   12418:	bl	1a338 <init_lexer@@Base>
   1241c:	ldr	r3, [r4, #88]	; 0x58
   12420:	ldr	r2, [r4, #92]	; 0x5c
   12424:	adds	r3, r3, #1
   12428:	adc	r2, r2, #0
   1242c:	str	r3, [r4, #88]	; 0x58
   12430:	str	r2, [r4, #92]	; 0x5c
   12434:	add	r0, sp, #12
   12438:	bl	1a5b4 <next@@Base>
   1243c:	ldr	r3, [r4, #96]	; 0x60
   12440:	ldr	r2, [r4, #100]	; 0x64
   12444:	adds	r3, r3, #1
   12448:	adc	r2, r2, #0
   1244c:	str	r3, [r4, #96]	; 0x60
   12450:	str	r2, [r4, #100]	; 0x64
   12454:	ldr	r1, [r0]
   12458:	mov	r3, #148	; 0x94
   1245c:	str	r3, [sp]
   12460:	movw	r3, #586	; 0x24a
   12464:	mov	r2, #0
   12468:	mov	r0, #12
   1246c:	bl	16784 <UnityAssertEqualNumber@@Base>
   12470:	ldr	r3, [r4, #104]	; 0x68
   12474:	ldr	r2, [r4, #108]	; 0x6c
   12478:	adds	r3, r3, #1
   1247c:	adc	r2, r2, #0
   12480:	str	r3, [r4, #104]	; 0x68
   12484:	str	r2, [r4, #108]	; 0x6c
   12488:	add	r0, sp, #12
   1248c:	bl	1a3a4 <destroy_lexer@@Base>
   12490:	ldr	r3, [r4, #112]	; 0x70
   12494:	ldr	r2, [r4, #116]	; 0x74
   12498:	adds	r3, r3, #1
   1249c:	adc	r2, r2, #0
   124a0:	str	r3, [r4, #112]	; 0x70
   124a4:	str	r2, [r4, #116]	; 0x74
   124a8:	add	sp, sp, #24
   124ac:	ldr	r4, [sp]
   124b0:	add	sp, sp, #4
   124b4:	pop	{pc}		; (ldr pc, [sp], #4)

000124b8 <read_token_greaterequalthan@@Base>:
   124b8:	str	r4, [sp, #-8]!
   124bc:	str	lr, [sp, #4]
   124c0:	sub	sp, sp, #24
   124c4:	movw	r4, #64576	; 0xfc40
   124c8:	movt	r4, #2
   124cc:	ldr	r3, [r4, #120]	; 0x78
   124d0:	ldr	r2, [r4, #124]	; 0x7c
   124d4:	adds	r3, r3, #1
   124d8:	adc	r2, r2, #0
   124dc:	str	r3, [r4, #120]	; 0x78
   124e0:	str	r2, [r4, #124]	; 0x7c
   124e4:	movw	r1, #56460	; 0xdc8c
   124e8:	movt	r1, #1
   124ec:	add	r0, sp, #12
   124f0:	bl	1a338 <init_lexer@@Base>
   124f4:	ldr	r3, [r4, #128]	; 0x80
   124f8:	ldr	r2, [r4, #132]	; 0x84
   124fc:	adds	r3, r3, #1
   12500:	adc	r2, r2, #0
   12504:	str	r3, [r4, #128]	; 0x80
   12508:	str	r2, [r4, #132]	; 0x84
   1250c:	add	r0, sp, #12
   12510:	bl	1a5b4 <next@@Base>
   12514:	ldr	r3, [r4, #136]	; 0x88
   12518:	ldr	r2, [r4, #140]	; 0x8c
   1251c:	adds	r3, r3, #1
   12520:	adc	r2, r2, #0
   12524:	str	r3, [r4, #136]	; 0x88
   12528:	str	r2, [r4, #140]	; 0x8c
   1252c:	ldr	r1, [r0]
   12530:	mov	r3, #148	; 0x94
   12534:	str	r3, [sp]
   12538:	movw	r3, #569	; 0x239
   1253c:	mov	r2, #0
   12540:	mov	r0, #12
   12544:	bl	16784 <UnityAssertEqualNumber@@Base>
   12548:	ldr	r3, [r4, #144]	; 0x90
   1254c:	ldr	r2, [r4, #148]	; 0x94
   12550:	adds	r3, r3, #1
   12554:	adc	r2, r2, #0
   12558:	str	r3, [r4, #144]	; 0x90
   1255c:	str	r2, [r4, #148]	; 0x94
   12560:	add	r0, sp, #12
   12564:	bl	1a3a4 <destroy_lexer@@Base>
   12568:	ldr	r3, [r4, #152]	; 0x98
   1256c:	ldr	r2, [r4, #156]	; 0x9c
   12570:	adds	r3, r3, #1
   12574:	adc	r2, r2, #0
   12578:	str	r3, [r4, #152]	; 0x98
   1257c:	str	r2, [r4, #156]	; 0x9c
   12580:	add	sp, sp, #24
   12584:	ldr	r4, [sp]
   12588:	add	sp, sp, #4
   1258c:	pop	{pc}		; (ldr pc, [sp], #4)

00012590 <read_token_andand@@Base>:
   12590:	str	r4, [sp, #-8]!
   12594:	str	lr, [sp, #4]
   12598:	sub	sp, sp, #24
   1259c:	movw	r4, #64576	; 0xfc40
   125a0:	movt	r4, #2
   125a4:	ldr	r3, [r4, #160]	; 0xa0
   125a8:	ldr	r2, [r4, #164]	; 0xa4
   125ac:	adds	r3, r3, #1
   125b0:	adc	r2, r2, #0
   125b4:	str	r3, [r4, #160]	; 0xa0
   125b8:	str	r2, [r4, #164]	; 0xa4
   125bc:	movw	r1, #56464	; 0xdc90
   125c0:	movt	r1, #1
   125c4:	add	r0, sp, #12
   125c8:	bl	1a338 <init_lexer@@Base>
   125cc:	ldr	r3, [r4, #168]	; 0xa8
   125d0:	ldr	r2, [r4, #172]	; 0xac
   125d4:	adds	r3, r3, #1
   125d8:	adc	r2, r2, #0
   125dc:	str	r3, [r4, #168]	; 0xa8
   125e0:	str	r2, [r4, #172]	; 0xac
   125e4:	add	r0, sp, #12
   125e8:	bl	1a5b4 <next@@Base>
   125ec:	ldr	r3, [r4, #176]	; 0xb0
   125f0:	ldr	r2, [r4, #180]	; 0xb4
   125f4:	adds	r3, r3, #1
   125f8:	adc	r2, r2, #0
   125fc:	str	r3, [r4, #176]	; 0xb0
   12600:	str	r2, [r4, #180]	; 0xb4
   12604:	ldr	r1, [r0]
   12608:	mov	r3, #148	; 0x94
   1260c:	str	r3, [sp]
   12610:	mov	r3, #552	; 0x228
   12614:	mov	r2, #0
   12618:	mov	r0, #12
   1261c:	bl	16784 <UnityAssertEqualNumber@@Base>
   12620:	ldr	r3, [r4, #184]	; 0xb8
   12624:	ldr	r2, [r4, #188]	; 0xbc
   12628:	adds	r3, r3, #1
   1262c:	adc	r2, r2, #0
   12630:	str	r3, [r4, #184]	; 0xb8
   12634:	str	r2, [r4, #188]	; 0xbc
   12638:	add	r0, sp, #12
   1263c:	bl	1a3a4 <destroy_lexer@@Base>
   12640:	ldr	r3, [r4, #192]	; 0xc0
   12644:	ldr	r2, [r4, #196]	; 0xc4
   12648:	adds	r3, r3, #1
   1264c:	adc	r2, r2, #0
   12650:	str	r3, [r4, #192]	; 0xc0
   12654:	str	r2, [r4, #196]	; 0xc4
   12658:	add	sp, sp, #24
   1265c:	ldr	r4, [sp]
   12660:	add	sp, sp, #4
   12664:	pop	{pc}		; (ldr pc, [sp], #4)

00012668 <read_token_oror@@Base>:
   12668:	str	r4, [sp, #-8]!
   1266c:	str	lr, [sp, #4]
   12670:	sub	sp, sp, #24
   12674:	movw	r4, #64576	; 0xfc40
   12678:	movt	r4, #2
   1267c:	ldr	r3, [r4, #200]	; 0xc8
   12680:	ldr	r2, [r4, #204]	; 0xcc
   12684:	adds	r3, r3, #1
   12688:	adc	r2, r2, #0
   1268c:	str	r3, [r4, #200]	; 0xc8
   12690:	str	r2, [r4, #204]	; 0xcc
   12694:	movw	r1, #56468	; 0xdc94
   12698:	movt	r1, #1
   1269c:	add	r0, sp, #12
   126a0:	bl	1a338 <init_lexer@@Base>
   126a4:	ldr	r3, [r4, #208]	; 0xd0
   126a8:	ldr	r2, [r4, #212]	; 0xd4
   126ac:	adds	r3, r3, #1
   126b0:	adc	r2, r2, #0
   126b4:	str	r3, [r4, #208]	; 0xd0
   126b8:	str	r2, [r4, #212]	; 0xd4
   126bc:	add	r0, sp, #12
   126c0:	bl	1a5b4 <next@@Base>
   126c4:	ldr	r3, [r4, #216]	; 0xd8
   126c8:	ldr	r2, [r4, #220]	; 0xdc
   126cc:	adds	r3, r3, #1
   126d0:	adc	r2, r2, #0
   126d4:	str	r3, [r4, #216]	; 0xd8
   126d8:	str	r2, [r4, #220]	; 0xdc
   126dc:	ldr	r1, [r0]
   126e0:	mov	r3, #148	; 0x94
   126e4:	str	r3, [sp]
   126e8:	movw	r3, #535	; 0x217
   126ec:	mov	r2, #0
   126f0:	mov	r0, #12
   126f4:	bl	16784 <UnityAssertEqualNumber@@Base>
   126f8:	ldr	r3, [r4, #224]	; 0xe0
   126fc:	ldr	r2, [r4, #228]	; 0xe4
   12700:	adds	r3, r3, #1
   12704:	adc	r2, r2, #0
   12708:	str	r3, [r4, #224]	; 0xe0
   1270c:	str	r2, [r4, #228]	; 0xe4
   12710:	add	r0, sp, #12
   12714:	bl	1a3a4 <destroy_lexer@@Base>
   12718:	ldr	r3, [r4, #232]	; 0xe8
   1271c:	ldr	r2, [r4, #236]	; 0xec
   12720:	adds	r3, r3, #1
   12724:	adc	r2, r2, #0
   12728:	str	r3, [r4, #232]	; 0xe8
   1272c:	str	r2, [r4, #236]	; 0xec
   12730:	add	sp, sp, #24
   12734:	ldr	r4, [sp]
   12738:	add	sp, sp, #4
   1273c:	pop	{pc}		; (ldr pc, [sp], #4)

00012740 <read_token_lessequalthan@@Base>:
   12740:	str	r4, [sp, #-8]!
   12744:	str	lr, [sp, #4]
   12748:	sub	sp, sp, #24
   1274c:	movw	r4, #64576	; 0xfc40
   12750:	movt	r4, #2
   12754:	ldr	r3, [r4, #240]	; 0xf0
   12758:	ldr	r2, [r4, #244]	; 0xf4
   1275c:	adds	r3, r3, #1
   12760:	adc	r2, r2, #0
   12764:	str	r3, [r4, #240]	; 0xf0
   12768:	str	r2, [r4, #244]	; 0xf4
   1276c:	movw	r1, #56472	; 0xdc98
   12770:	movt	r1, #1
   12774:	add	r0, sp, #12
   12778:	bl	1a338 <init_lexer@@Base>
   1277c:	ldr	r3, [r4, #248]	; 0xf8
   12780:	ldr	r2, [r4, #252]	; 0xfc
   12784:	adds	r3, r3, #1
   12788:	adc	r2, r2, #0
   1278c:	str	r3, [r4, #248]	; 0xf8
   12790:	str	r2, [r4, #252]	; 0xfc
   12794:	add	r0, sp, #12
   12798:	bl	1a5b4 <next@@Base>
   1279c:	ldr	r3, [r4, #256]	; 0x100
   127a0:	ldr	r1, [r4, #260]	; 0x104
   127a4:	adds	r3, r3, #1
   127a8:	adc	r1, r1, #0
   127ac:	str	r3, [r4, #256]	; 0x100
   127b0:	str	r1, [r4, #260]	; 0x104
   127b4:	ldr	r1, [r0]
   127b8:	mov	r3, #148	; 0x94
   127bc:	str	r3, [sp]
   127c0:	movw	r3, #518	; 0x206
   127c4:	mov	r2, #0
   127c8:	mov	r0, #12
   127cc:	bl	16784 <UnityAssertEqualNumber@@Base>
   127d0:	ldr	r3, [r4, #264]	; 0x108
   127d4:	ldr	r2, [r4, #268]	; 0x10c
   127d8:	adds	r3, r3, #1
   127dc:	adc	r2, r2, #0
   127e0:	str	r3, [r4, #264]	; 0x108
   127e4:	str	r2, [r4, #268]	; 0x10c
   127e8:	add	r0, sp, #12
   127ec:	bl	1a3a4 <destroy_lexer@@Base>
   127f0:	ldr	r3, [r4, #272]	; 0x110
   127f4:	ldr	r2, [r4, #276]	; 0x114
   127f8:	adds	r3, r3, #1
   127fc:	adc	r2, r2, #0
   12800:	str	r3, [r4, #272]	; 0x110
   12804:	str	r2, [r4, #276]	; 0x114
   12808:	add	sp, sp, #24
   1280c:	ldr	r4, [sp]
   12810:	add	sp, sp, #4
   12814:	pop	{pc}		; (ldr pc, [sp], #4)

00012818 <read_token_notequal@@Base>:
   12818:	str	r4, [sp, #-8]!
   1281c:	str	lr, [sp, #4]
   12820:	sub	sp, sp, #24
   12824:	ldr	r4, [pc, #192]	; 128ec <read_token_notequal@@Base+0xd4>
   12828:	ldr	r3, [r4, #-8]
   1282c:	ldr	r2, [r4, #-4]
   12830:	adds	r3, r3, #1
   12834:	adc	r2, r2, #0
   12838:	str	r3, [r4, #-8]
   1283c:	str	r2, [r4, #-4]
   12840:	movw	r1, #56476	; 0xdc9c
   12844:	movt	r1, #1
   12848:	add	r0, sp, #12
   1284c:	bl	1a338 <init_lexer@@Base>
   12850:	ldr	r3, [r4]
   12854:	ldr	r2, [r4, #4]
   12858:	adds	r3, r3, #1
   1285c:	adc	r2, r2, #0
   12860:	str	r3, [r4]
   12864:	str	r2, [r4, #4]
   12868:	add	r0, sp, #12
   1286c:	bl	1a5b4 <next@@Base>
   12870:	ldr	r3, [r4, #8]
   12874:	ldr	r2, [r4, #12]
   12878:	adds	r3, r3, #1
   1287c:	adc	r2, r2, #0
   12880:	str	r3, [r4, #8]
   12884:	str	r2, [r4, #12]
   12888:	ldr	r1, [r0]
   1288c:	mov	r3, #148	; 0x94
   12890:	str	r3, [sp]
   12894:	movw	r3, #501	; 0x1f5
   12898:	mov	r2, #0
   1289c:	mov	r0, #12
   128a0:	bl	16784 <UnityAssertEqualNumber@@Base>
   128a4:	ldr	r3, [r4, #16]
   128a8:	ldr	r2, [r4, #20]
   128ac:	adds	r3, r3, #1
   128b0:	adc	r2, r2, #0
   128b4:	str	r3, [r4, #16]
   128b8:	str	r2, [r4, #20]
   128bc:	add	r0, sp, #12
   128c0:	bl	1a3a4 <destroy_lexer@@Base>
   128c4:	ldr	r3, [r4, #24]
   128c8:	ldr	r2, [r4, #28]
   128cc:	adds	r3, r3, #1
   128d0:	adc	r2, r2, #0
   128d4:	str	r3, [r4, #24]
   128d8:	str	r2, [r4, #28]
   128dc:	add	sp, sp, #24
   128e0:	ldr	r4, [sp]
   128e4:	add	sp, sp, #4
   128e8:	pop	{pc}		; (ldr pc, [sp], #4)
   128ec:	andeq	pc, r2, r0, ror #26

000128f0 <read_token_equalequal@@Base>:
   128f0:	str	r4, [sp, #-8]!
   128f4:	str	lr, [sp, #4]
   128f8:	sub	sp, sp, #24
   128fc:	ldr	r4, [pc, #192]	; 129c4 <read_token_equalequal@@Base+0xd4>
   12900:	ldr	r3, [r4]
   12904:	ldr	r2, [r4, #4]
   12908:	adds	r3, r3, #1
   1290c:	adc	r2, r2, #0
   12910:	str	r3, [r4]
   12914:	str	r2, [r4, #4]
   12918:	movw	r1, #56480	; 0xdca0
   1291c:	movt	r1, #1
   12920:	add	r0, sp, #12
   12924:	bl	1a338 <init_lexer@@Base>
   12928:	ldr	r3, [r4, #8]
   1292c:	ldr	r2, [r4, #12]
   12930:	adds	r3, r3, #1
   12934:	adc	r2, r2, #0
   12938:	str	r3, [r4, #8]
   1293c:	str	r2, [r4, #12]
   12940:	add	r0, sp, #12
   12944:	bl	1a5b4 <next@@Base>
   12948:	ldr	r3, [r4, #16]
   1294c:	ldr	r2, [r4, #20]
   12950:	adds	r3, r3, #1
   12954:	adc	r2, r2, #0
   12958:	str	r3, [r4, #16]
   1295c:	str	r2, [r4, #20]
   12960:	ldr	r1, [r0]
   12964:	mov	r3, #148	; 0x94
   12968:	str	r3, [sp]
   1296c:	mov	r3, #484	; 0x1e4
   12970:	mov	r2, #0
   12974:	mov	r0, #12
   12978:	bl	16784 <UnityAssertEqualNumber@@Base>
   1297c:	ldr	r3, [r4, #24]
   12980:	ldr	r2, [r4, #28]
   12984:	adds	r3, r3, #1
   12988:	adc	r2, r2, #0
   1298c:	str	r3, [r4, #24]
   12990:	str	r2, [r4, #28]
   12994:	add	r0, sp, #12
   12998:	bl	1a3a4 <destroy_lexer@@Base>
   1299c:	ldr	r3, [r4, #32]
   129a0:	ldr	r2, [r4, #36]	; 0x24
   129a4:	adds	r3, r3, #1
   129a8:	adc	r2, r2, #0
   129ac:	str	r3, [r4, #32]
   129b0:	str	r2, [r4, #36]	; 0x24
   129b4:	add	sp, sp, #24
   129b8:	ldr	r4, [sp]
   129bc:	add	sp, sp, #4
   129c0:	pop	{pc}		; (ldr pc, [sp], #4)
   129c4:	andeq	pc, r2, r0, lsl #27

000129c8 <read_token_else@@Base>:
   129c8:	str	r4, [sp, #-8]!
   129cc:	str	lr, [sp, #4]
   129d0:	sub	sp, sp, #24
   129d4:	ldr	r4, [pc, #192]	; 12a9c <read_token_else@@Base+0xd4>
   129d8:	ldr	r3, [r4, #-8]
   129dc:	ldr	r2, [r4, #-4]
   129e0:	adds	r3, r3, #1
   129e4:	adc	r2, r2, #0
   129e8:	str	r3, [r4, #-8]
   129ec:	str	r2, [r4, #-4]
   129f0:	movw	r1, #56896	; 0xde40
   129f4:	movt	r1, #1
   129f8:	add	r0, sp, #12
   129fc:	bl	1a338 <init_lexer@@Base>
   12a00:	ldr	r3, [r4]
   12a04:	ldr	r2, [r4, #4]
   12a08:	adds	r3, r3, #1
   12a0c:	adc	r2, r2, #0
   12a10:	str	r3, [r4]
   12a14:	str	r2, [r4, #4]
   12a18:	add	r0, sp, #12
   12a1c:	bl	1a5b4 <next@@Base>
   12a20:	ldr	r3, [r4, #8]
   12a24:	ldr	r2, [r4, #12]
   12a28:	adds	r3, r3, #1
   12a2c:	adc	r2, r2, #0
   12a30:	str	r3, [r4, #8]
   12a34:	str	r2, [r4, #12]
   12a38:	ldr	r1, [r0]
   12a3c:	mov	r3, #148	; 0x94
   12a40:	str	r3, [sp]
   12a44:	movw	r3, #467	; 0x1d3
   12a48:	mov	r2, #0
   12a4c:	mov	r0, #11
   12a50:	bl	16784 <UnityAssertEqualNumber@@Base>
   12a54:	ldr	r3, [r4, #16]
   12a58:	ldr	r2, [r4, #20]
   12a5c:	adds	r3, r3, #1
   12a60:	adc	r2, r2, #0
   12a64:	str	r3, [r4, #16]
   12a68:	str	r2, [r4, #20]
   12a6c:	add	r0, sp, #12
   12a70:	bl	1a3a4 <destroy_lexer@@Base>
   12a74:	ldr	r3, [r4, #24]
   12a78:	ldr	r2, [r4, #28]
   12a7c:	adds	r3, r3, #1
   12a80:	adc	r2, r2, #0
   12a84:	str	r3, [r4, #24]
   12a88:	str	r2, [r4, #28]
   12a8c:	add	sp, sp, #24
   12a90:	ldr	r4, [sp]
   12a94:	add	sp, sp, #4
   12a98:	pop	{pc}		; (ldr pc, [sp], #4)
   12a9c:			; <UNDEFINED> instruction: 0x0002fdb0

00012aa0 <read_token_if@@Base>:
   12aa0:	str	r4, [sp, #-8]!
   12aa4:	str	lr, [sp, #4]
   12aa8:	sub	sp, sp, #24
   12aac:	ldr	r4, [pc, #192]	; 12b74 <read_token_if@@Base+0xd4>
   12ab0:	ldr	r3, [r4]
   12ab4:	ldr	r2, [r4, #4]
   12ab8:	adds	r3, r3, #1
   12abc:	adc	r2, r2, #0
   12ac0:	str	r3, [r4]
   12ac4:	str	r2, [r4, #4]
   12ac8:	movw	r1, #56484	; 0xdca4
   12acc:	movt	r1, #1
   12ad0:	add	r0, sp, #12
   12ad4:	bl	1a338 <init_lexer@@Base>
   12ad8:	ldr	r3, [r4, #8]
   12adc:	ldr	r2, [r4, #12]
   12ae0:	adds	r3, r3, #1
   12ae4:	adc	r2, r2, #0
   12ae8:	str	r3, [r4, #8]
   12aec:	str	r2, [r4, #12]
   12af0:	add	r0, sp, #12
   12af4:	bl	1a5b4 <next@@Base>
   12af8:	ldr	r3, [r4, #16]
   12afc:	ldr	r2, [r4, #20]
   12b00:	adds	r3, r3, #1
   12b04:	adc	r2, r2, #0
   12b08:	str	r3, [r4, #16]
   12b0c:	str	r2, [r4, #20]
   12b10:	ldr	r1, [r0]
   12b14:	mov	r3, #148	; 0x94
   12b18:	str	r3, [sp]
   12b1c:	movw	r3, #450	; 0x1c2
   12b20:	mov	r2, #0
   12b24:	mov	r0, #10
   12b28:	bl	16784 <UnityAssertEqualNumber@@Base>
   12b2c:	ldr	r3, [r4, #24]
   12b30:	ldr	r2, [r4, #28]
   12b34:	adds	r3, r3, #1
   12b38:	adc	r2, r2, #0
   12b3c:	str	r3, [r4, #24]
   12b40:	str	r2, [r4, #28]
   12b44:	add	r0, sp, #12
   12b48:	bl	1a3a4 <destroy_lexer@@Base>
   12b4c:	ldr	r3, [r4, #32]
   12b50:	ldr	r2, [r4, #36]	; 0x24
   12b54:	adds	r3, r3, #1
   12b58:	adc	r2, r2, #0
   12b5c:	str	r3, [r4, #32]
   12b60:	str	r2, [r4, #36]	; 0x24
   12b64:	add	sp, sp, #24
   12b68:	ldr	r4, [sp]
   12b6c:	add	sp, sp, #4
   12b70:	pop	{pc}		; (ldr pc, [sp], #4)
   12b74:	ldrdeq	pc, [r2], -r0

00012b78 <read_token_eof@@Base>:
   12b78:	str	r4, [sp, #-8]!
   12b7c:	str	lr, [sp, #4]
   12b80:	sub	sp, sp, #24
   12b84:	ldr	r4, [pc, #192]	; 12c4c <read_token_eof@@Base+0xd4>
   12b88:	ldr	r3, [r4, #-8]
   12b8c:	ldr	r2, [r4, #-4]
   12b90:	adds	r3, r3, #1
   12b94:	adc	r2, r2, #0
   12b98:	str	r3, [r4, #-8]
   12b9c:	str	r2, [r4, #-4]
   12ba0:	movw	r1, #58628	; 0xe504
   12ba4:	movt	r1, #1
   12ba8:	add	r0, sp, #12
   12bac:	bl	1a338 <init_lexer@@Base>
   12bb0:	ldr	r3, [r4]
   12bb4:	ldr	r2, [r4, #4]
   12bb8:	adds	r3, r3, #1
   12bbc:	adc	r2, r2, #0
   12bc0:	str	r3, [r4]
   12bc4:	str	r2, [r4, #4]
   12bc8:	add	r0, sp, #12
   12bcc:	bl	1a5b4 <next@@Base>
   12bd0:	ldr	r3, [r4, #8]
   12bd4:	ldr	r2, [r4, #12]
   12bd8:	adds	r3, r3, #1
   12bdc:	adc	r2, r2, #0
   12be0:	str	r3, [r4, #8]
   12be4:	str	r2, [r4, #12]
   12be8:	ldr	r1, [r0]
   12bec:	mov	r3, #148	; 0x94
   12bf0:	str	r3, [sp]
   12bf4:	movw	r3, #433	; 0x1b1
   12bf8:	mov	r2, #0
   12bfc:	mov	r0, #9
   12c00:	bl	16784 <UnityAssertEqualNumber@@Base>
   12c04:	ldr	r3, [r4, #16]
   12c08:	ldr	r2, [r4, #20]
   12c0c:	adds	r3, r3, #1
   12c10:	adc	r2, r2, #0
   12c14:	str	r3, [r4, #16]
   12c18:	str	r2, [r4, #20]
   12c1c:	add	r0, sp, #12
   12c20:	bl	1a3a4 <destroy_lexer@@Base>
   12c24:	ldr	r3, [r4, #24]
   12c28:	ldr	r2, [r4, #28]
   12c2c:	adds	r3, r3, #1
   12c30:	adc	r2, r2, #0
   12c34:	str	r3, [r4, #24]
   12c38:	str	r2, [r4, #28]
   12c3c:	add	sp, sp, #24
   12c40:	ldr	r4, [sp]
   12c44:	add	sp, sp, #4
   12c48:	pop	{pc}		; (ldr pc, [sp], #4)
   12c4c:	andeq	pc, r2, r0, lsl #28

00012c50 <read_token_semicolon@@Base>:
   12c50:	str	r4, [sp, #-8]!
   12c54:	str	lr, [sp, #4]
   12c58:	sub	sp, sp, #24
   12c5c:	ldr	r4, [pc, #192]	; 12d24 <read_token_semicolon@@Base+0xd4>
   12c60:	ldr	r3, [r4]
   12c64:	ldr	r2, [r4, #4]
   12c68:	adds	r3, r3, #1
   12c6c:	adc	r2, r2, #0
   12c70:	str	r3, [r4]
   12c74:	str	r2, [r4, #4]
   12c78:	movw	r1, #56488	; 0xdca8
   12c7c:	movt	r1, #1
   12c80:	add	r0, sp, #12
   12c84:	bl	1a338 <init_lexer@@Base>
   12c88:	ldr	r3, [r4, #8]
   12c8c:	ldr	r2, [r4, #12]
   12c90:	adds	r3, r3, #1
   12c94:	adc	r2, r2, #0
   12c98:	str	r3, [r4, #8]
   12c9c:	str	r2, [r4, #12]
   12ca0:	add	r0, sp, #12
   12ca4:	bl	1a5b4 <next@@Base>
   12ca8:	ldr	r3, [r4, #16]
   12cac:	ldr	r2, [r4, #20]
   12cb0:	adds	r3, r3, #1
   12cb4:	adc	r2, r2, #0
   12cb8:	str	r3, [r4, #16]
   12cbc:	str	r2, [r4, #20]
   12cc0:	ldr	r1, [r0]
   12cc4:	mov	r3, #148	; 0x94
   12cc8:	str	r3, [sp]
   12ccc:	mov	r3, #416	; 0x1a0
   12cd0:	mov	r2, #0
   12cd4:	mov	r0, #8
   12cd8:	bl	16784 <UnityAssertEqualNumber@@Base>
   12cdc:	ldr	r3, [r4, #24]
   12ce0:	ldr	r2, [r4, #28]
   12ce4:	adds	r3, r3, #1
   12ce8:	adc	r2, r2, #0
   12cec:	str	r3, [r4, #24]
   12cf0:	str	r2, [r4, #28]
   12cf4:	add	r0, sp, #12
   12cf8:	bl	1a3a4 <destroy_lexer@@Base>
   12cfc:	ldr	r3, [r4, #32]
   12d00:	ldr	r2, [r4, #36]	; 0x24
   12d04:	adds	r3, r3, #1
   12d08:	adc	r2, r2, #0
   12d0c:	str	r3, [r4, #32]
   12d10:	str	r2, [r4, #36]	; 0x24
   12d14:	add	sp, sp, #24
   12d18:	ldr	r4, [sp]
   12d1c:	add	sp, sp, #4
   12d20:	pop	{pc}		; (ldr pc, [sp], #4)
   12d24:	andeq	pc, r2, r0, lsr #28

00012d28 <read_token_return@@Base>:
   12d28:	str	r4, [sp, #-8]!
   12d2c:	str	lr, [sp, #4]
   12d30:	sub	sp, sp, #24
   12d34:	ldr	r4, [pc, #192]	; 12dfc <read_token_return@@Base+0xd4>
   12d38:	ldr	r3, [r4, #-8]
   12d3c:	ldr	r2, [r4, #-4]
   12d40:	adds	r3, r3, #1
   12d44:	adc	r2, r2, #0
   12d48:	str	r3, [r4, #-8]
   12d4c:	str	r2, [r4, #-4]
   12d50:	movw	r1, #56492	; 0xdcac
   12d54:	movt	r1, #1
   12d58:	add	r0, sp, #12
   12d5c:	bl	1a338 <init_lexer@@Base>
   12d60:	ldr	r3, [r4]
   12d64:	ldr	r2, [r4, #4]
   12d68:	adds	r3, r3, #1
   12d6c:	adc	r2, r2, #0
   12d70:	str	r3, [r4]
   12d74:	str	r2, [r4, #4]
   12d78:	add	r0, sp, #12
   12d7c:	bl	1a5b4 <next@@Base>
   12d80:	ldr	r3, [r4, #8]
   12d84:	ldr	r2, [r4, #12]
   12d88:	adds	r3, r3, #1
   12d8c:	adc	r2, r2, #0
   12d90:	str	r3, [r4, #8]
   12d94:	str	r2, [r4, #12]
   12d98:	ldr	r1, [r0]
   12d9c:	mov	r3, #148	; 0x94
   12da0:	str	r3, [sp]
   12da4:	movw	r3, #399	; 0x18f
   12da8:	mov	r2, #0
   12dac:	mov	r0, #7
   12db0:	bl	16784 <UnityAssertEqualNumber@@Base>
   12db4:	ldr	r3, [r4, #16]
   12db8:	ldr	r2, [r4, #20]
   12dbc:	adds	r3, r3, #1
   12dc0:	adc	r2, r2, #0
   12dc4:	str	r3, [r4, #16]
   12dc8:	str	r2, [r4, #20]
   12dcc:	add	r0, sp, #12
   12dd0:	bl	1a3a4 <destroy_lexer@@Base>
   12dd4:	ldr	r3, [r4, #24]
   12dd8:	ldr	r2, [r4, #28]
   12ddc:	adds	r3, r3, #1
   12de0:	adc	r2, r2, #0
   12de4:	str	r3, [r4, #24]
   12de8:	str	r2, [r4, #28]
   12dec:	add	sp, sp, #24
   12df0:	ldr	r4, [sp]
   12df4:	add	sp, sp, #4
   12df8:	pop	{pc}		; (ldr pc, [sp], #4)
   12dfc:	andeq	pc, r2, r0, asr lr	; <UNPREDICTABLE>

00012e00 <read_token_cbra@@Base>:
   12e00:	str	r4, [sp, #-8]!
   12e04:	str	lr, [sp, #4]
   12e08:	sub	sp, sp, #24
   12e0c:	ldr	r4, [pc, #192]	; 12ed4 <read_token_cbra@@Base+0xd4>
   12e10:	ldr	r3, [r4]
   12e14:	ldr	r2, [r4, #4]
   12e18:	adds	r3, r3, #1
   12e1c:	adc	r2, r2, #0
   12e20:	str	r3, [r4]
   12e24:	str	r2, [r4, #4]
   12e28:	movw	r1, #56700	; 0xdd7c
   12e2c:	movt	r1, #1
   12e30:	add	r0, sp, #12
   12e34:	bl	1a338 <init_lexer@@Base>
   12e38:	ldr	r3, [r4, #8]
   12e3c:	ldr	r2, [r4, #12]
   12e40:	adds	r3, r3, #1
   12e44:	adc	r2, r2, #0
   12e48:	str	r3, [r4, #8]
   12e4c:	str	r2, [r4, #12]
   12e50:	add	r0, sp, #12
   12e54:	bl	1a5b4 <next@@Base>
   12e58:	ldr	r3, [r4, #16]
   12e5c:	ldr	r2, [r4, #20]
   12e60:	adds	r3, r3, #1
   12e64:	adc	r2, r2, #0
   12e68:	str	r3, [r4, #16]
   12e6c:	str	r2, [r4, #20]
   12e70:	ldr	r1, [r0]
   12e74:	mov	r3, #148	; 0x94
   12e78:	str	r3, [sp]
   12e7c:	movw	r3, #382	; 0x17e
   12e80:	mov	r2, #0
   12e84:	mov	r0, #6
   12e88:	bl	16784 <UnityAssertEqualNumber@@Base>
   12e8c:	ldr	r3, [r4, #24]
   12e90:	ldr	r2, [r4, #28]
   12e94:	adds	r3, r3, #1
   12e98:	adc	r2, r2, #0
   12e9c:	str	r3, [r4, #24]
   12ea0:	str	r2, [r4, #28]
   12ea4:	add	r0, sp, #12
   12ea8:	bl	1a3a4 <destroy_lexer@@Base>
   12eac:	ldr	r3, [r4, #32]
   12eb0:	ldr	r2, [r4, #36]	; 0x24
   12eb4:	adds	r3, r3, #1
   12eb8:	adc	r2, r2, #0
   12ebc:	str	r3, [r4, #32]
   12ec0:	str	r2, [r4, #36]	; 0x24
   12ec4:	add	sp, sp, #24
   12ec8:	ldr	r4, [sp]
   12ecc:	add	sp, sp, #4
   12ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ed4:	andeq	pc, r2, r0, ror lr	; <UNPREDICTABLE>

00012ed8 <read_token_obra@@Base>:
   12ed8:	str	r4, [sp, #-8]!
   12edc:	str	lr, [sp, #4]
   12ee0:	sub	sp, sp, #24
   12ee4:	ldr	r4, [pc, #192]	; 12fac <read_token_obra@@Base+0xd4>
   12ee8:	ldr	r3, [r4, #-8]
   12eec:	ldr	r2, [r4, #-4]
   12ef0:	adds	r3, r3, #1
   12ef4:	adc	r2, r2, #0
   12ef8:	str	r3, [r4, #-8]
   12efc:	str	r2, [r4, #-4]
   12f00:	movw	r1, #56500	; 0xdcb4
   12f04:	movt	r1, #1
   12f08:	add	r0, sp, #12
   12f0c:	bl	1a338 <init_lexer@@Base>
   12f10:	ldr	r3, [r4]
   12f14:	ldr	r2, [r4, #4]
   12f18:	adds	r3, r3, #1
   12f1c:	adc	r2, r2, #0
   12f20:	str	r3, [r4]
   12f24:	str	r2, [r4, #4]
   12f28:	add	r0, sp, #12
   12f2c:	bl	1a5b4 <next@@Base>
   12f30:	ldr	r3, [r4, #8]
   12f34:	ldr	r2, [r4, #12]
   12f38:	adds	r3, r3, #1
   12f3c:	adc	r2, r2, #0
   12f40:	str	r3, [r4, #8]
   12f44:	str	r2, [r4, #12]
   12f48:	ldr	r1, [r0]
   12f4c:	mov	r3, #148	; 0x94
   12f50:	str	r3, [sp]
   12f54:	mov	r3, #364	; 0x16c
   12f58:	mov	r2, #0
   12f5c:	mov	r0, #5
   12f60:	bl	16784 <UnityAssertEqualNumber@@Base>
   12f64:	ldr	r3, [r4, #16]
   12f68:	ldr	r2, [r4, #20]
   12f6c:	adds	r3, r3, #1
   12f70:	adc	r2, r2, #0
   12f74:	str	r3, [r4, #16]
   12f78:	str	r2, [r4, #20]
   12f7c:	add	r0, sp, #12
   12f80:	bl	1a3a4 <destroy_lexer@@Base>
   12f84:	ldr	r3, [r4, #24]
   12f88:	ldr	r2, [r4, #28]
   12f8c:	adds	r3, r3, #1
   12f90:	adc	r2, r2, #0
   12f94:	str	r3, [r4, #24]
   12f98:	str	r2, [r4, #28]
   12f9c:	add	sp, sp, #24
   12fa0:	ldr	r4, [sp]
   12fa4:	add	sp, sp, #4
   12fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   12fac:	andeq	pc, r2, r0, lsr #29

00012fb0 <read_token_cpar@@Base>:
   12fb0:	str	r4, [sp, #-8]!
   12fb4:	str	lr, [sp, #4]
   12fb8:	sub	sp, sp, #24
   12fbc:	ldr	r4, [pc, #192]	; 13084 <read_token_cpar@@Base+0xd4>
   12fc0:	ldr	r3, [r4]
   12fc4:	ldr	r2, [r4, #4]
   12fc8:	adds	r3, r3, #1
   12fcc:	adc	r2, r2, #0
   12fd0:	str	r3, [r4]
   12fd4:	str	r2, [r4, #4]
   12fd8:	movw	r1, #56504	; 0xdcb8
   12fdc:	movt	r1, #1
   12fe0:	add	r0, sp, #12
   12fe4:	bl	1a338 <init_lexer@@Base>
   12fe8:	ldr	r3, [r4, #8]
   12fec:	ldr	r2, [r4, #12]
   12ff0:	adds	r3, r3, #1
   12ff4:	adc	r2, r2, #0
   12ff8:	str	r3, [r4, #8]
   12ffc:	str	r2, [r4, #12]
   13000:	add	r0, sp, #12
   13004:	bl	1a5b4 <next@@Base>
   13008:	ldr	r3, [r4, #16]
   1300c:	ldr	r2, [r4, #20]
   13010:	adds	r3, r3, #1
   13014:	adc	r2, r2, #0
   13018:	str	r3, [r4, #16]
   1301c:	str	r2, [r4, #20]
   13020:	ldr	r1, [r0]
   13024:	mov	r3, #148	; 0x94
   13028:	str	r3, [sp]
   1302c:	movw	r3, #347	; 0x15b
   13030:	mov	r2, #0
   13034:	mov	r0, #4
   13038:	bl	16784 <UnityAssertEqualNumber@@Base>
   1303c:	ldr	r3, [r4, #24]
   13040:	ldr	r2, [r4, #28]
   13044:	adds	r3, r3, #1
   13048:	adc	r2, r2, #0
   1304c:	str	r3, [r4, #24]
   13050:	str	r2, [r4, #28]
   13054:	add	r0, sp, #12
   13058:	bl	1a3a4 <destroy_lexer@@Base>
   1305c:	ldr	r3, [r4, #32]
   13060:	ldr	r2, [r4, #36]	; 0x24
   13064:	adds	r3, r3, #1
   13068:	adc	r2, r2, #0
   1306c:	str	r3, [r4, #32]
   13070:	str	r2, [r4, #36]	; 0x24
   13074:	add	sp, sp, #24
   13078:	ldr	r4, [sp]
   1307c:	add	sp, sp, #4
   13080:	pop	{pc}		; (ldr pc, [sp], #4)
   13084:	andeq	pc, r2, r0, asr #29

00013088 <read_token_opar@@Base>:
   13088:	str	r4, [sp, #-8]!
   1308c:	str	lr, [sp, #4]
   13090:	sub	sp, sp, #24
   13094:	ldr	r4, [pc, #192]	; 1315c <read_token_opar@@Base+0xd4>
   13098:	ldr	r3, [r4, #-8]
   1309c:	ldr	r2, [r4, #-4]
   130a0:	adds	r3, r3, #1
   130a4:	adc	r2, r2, #0
   130a8:	str	r3, [r4, #-8]
   130ac:	str	r2, [r4, #-4]
   130b0:	movw	r1, #56508	; 0xdcbc
   130b4:	movt	r1, #1
   130b8:	add	r0, sp, #12
   130bc:	bl	1a338 <init_lexer@@Base>
   130c0:	ldr	r3, [r4]
   130c4:	ldr	r2, [r4, #4]
   130c8:	adds	r3, r3, #1
   130cc:	adc	r2, r2, #0
   130d0:	str	r3, [r4]
   130d4:	str	r2, [r4, #4]
   130d8:	add	r0, sp, #12
   130dc:	bl	1a5b4 <next@@Base>
   130e0:	ldr	r3, [r4, #8]
   130e4:	ldr	r2, [r4, #12]
   130e8:	adds	r3, r3, #1
   130ec:	adc	r2, r2, #0
   130f0:	str	r3, [r4, #8]
   130f4:	str	r2, [r4, #12]
   130f8:	ldr	r1, [r0]
   130fc:	mov	r3, #148	; 0x94
   13100:	str	r3, [sp]
   13104:	movw	r3, #330	; 0x14a
   13108:	mov	r2, #0
   1310c:	mov	r0, #3
   13110:	bl	16784 <UnityAssertEqualNumber@@Base>
   13114:	ldr	r3, [r4, #16]
   13118:	ldr	r2, [r4, #20]
   1311c:	adds	r3, r3, #1
   13120:	adc	r2, r2, #0
   13124:	str	r3, [r4, #16]
   13128:	str	r2, [r4, #20]
   1312c:	add	r0, sp, #12
   13130:	bl	1a3a4 <destroy_lexer@@Base>
   13134:	ldr	r3, [r4, #24]
   13138:	ldr	r2, [r4, #28]
   1313c:	adds	r3, r3, #1
   13140:	adc	r2, r2, #0
   13144:	str	r3, [r4, #24]
   13148:	str	r2, [r4, #28]
   1314c:	add	sp, sp, #24
   13150:	ldr	r4, [sp]
   13154:	add	sp, sp, #4
   13158:	pop	{pc}		; (ldr pc, [sp], #4)
   1315c:	strdeq	pc, [r2], -r0

00013160 <read_token_function@@Base>:
   13160:	str	r4, [sp, #-8]!
   13164:	str	lr, [sp, #4]
   13168:	sub	sp, sp, #24
   1316c:	ldr	r4, [pc, #192]	; 13234 <read_token_function@@Base+0xd4>
   13170:	ldr	r3, [r4]
   13174:	ldr	r2, [r4, #4]
   13178:	adds	r3, r3, #1
   1317c:	adc	r2, r2, #0
   13180:	str	r3, [r4]
   13184:	str	r2, [r4, #4]
   13188:	movw	r1, #56512	; 0xdcc0
   1318c:	movt	r1, #1
   13190:	add	r0, sp, #12
   13194:	bl	1a338 <init_lexer@@Base>
   13198:	ldr	r3, [r4, #8]
   1319c:	ldr	r2, [r4, #12]
   131a0:	adds	r3, r3, #1
   131a4:	adc	r2, r2, #0
   131a8:	str	r3, [r4, #8]
   131ac:	str	r2, [r4, #12]
   131b0:	add	r0, sp, #12
   131b4:	bl	1a5b4 <next@@Base>
   131b8:	ldr	r3, [r4, #16]
   131bc:	ldr	r2, [r4, #20]
   131c0:	adds	r3, r3, #1
   131c4:	adc	r2, r2, #0
   131c8:	str	r3, [r4, #16]
   131cc:	str	r2, [r4, #20]
   131d0:	ldr	r1, [r0]
   131d4:	mov	r3, #148	; 0x94
   131d8:	str	r3, [sp]
   131dc:	movw	r3, #313	; 0x139
   131e0:	mov	r2, #0
   131e4:	mov	r0, #2
   131e8:	bl	16784 <UnityAssertEqualNumber@@Base>
   131ec:	ldr	r3, [r4, #24]
   131f0:	ldr	r2, [r4, #28]
   131f4:	adds	r3, r3, #1
   131f8:	adc	r2, r2, #0
   131fc:	str	r3, [r4, #24]
   13200:	str	r2, [r4, #28]
   13204:	add	r0, sp, #12
   13208:	bl	1a3a4 <destroy_lexer@@Base>
   1320c:	ldr	r3, [r4, #32]
   13210:	ldr	r2, [r4, #36]	; 0x24
   13214:	adds	r3, r3, #1
   13218:	adc	r2, r2, #0
   1321c:	str	r3, [r4, #32]
   13220:	str	r2, [r4, #36]	; 0x24
   13224:	add	sp, sp, #24
   13228:	ldr	r4, [sp]
   1322c:	add	sp, sp, #4
   13230:	pop	{pc}		; (ldr pc, [sp], #4)
   13234:	andeq	pc, r2, r0, lsl pc	; <UNPREDICTABLE>

00013238 <read_token_int_value@@Base>:
   13238:	str	r4, [sp, #-8]!
   1323c:	str	lr, [sp, #4]
   13240:	sub	sp, sp, #24
   13244:	ldr	r4, [pc, #192]	; 1330c <read_token_int_value@@Base+0xd4>
   13248:	ldr	r3, [r4, #-8]
   1324c:	ldr	r2, [r4, #-4]
   13250:	adds	r3, r3, #1
   13254:	adc	r2, r2, #0
   13258:	str	r3, [r4, #-8]
   1325c:	str	r2, [r4, #-4]
   13260:	movw	r1, #56520	; 0xdcc8
   13264:	movt	r1, #1
   13268:	add	r0, sp, #12
   1326c:	bl	1a338 <init_lexer@@Base>
   13270:	ldr	r3, [r4]
   13274:	ldr	r2, [r4, #4]
   13278:	adds	r3, r3, #1
   1327c:	adc	r2, r2, #0
   13280:	str	r3, [r4]
   13284:	str	r2, [r4, #4]
   13288:	add	r0, sp, #12
   1328c:	bl	1a5b4 <next@@Base>
   13290:	ldr	r3, [r4, #8]
   13294:	ldr	r2, [r4, #12]
   13298:	adds	r3, r3, #1
   1329c:	adc	r2, r2, #0
   132a0:	str	r3, [r4, #8]
   132a4:	str	r2, [r4, #12]
   132a8:	ldr	r1, [r0]
   132ac:	mov	r3, #148	; 0x94
   132b0:	str	r3, [sp]
   132b4:	mov	r3, #296	; 0x128
   132b8:	mov	r2, #0
   132bc:	mov	r0, #1
   132c0:	bl	16784 <UnityAssertEqualNumber@@Base>
   132c4:	ldr	r3, [r4, #16]
   132c8:	ldr	r2, [r4, #20]
   132cc:	adds	r3, r3, #1
   132d0:	adc	r2, r2, #0
   132d4:	str	r3, [r4, #16]
   132d8:	str	r2, [r4, #20]
   132dc:	add	r0, sp, #12
   132e0:	bl	1a3a4 <destroy_lexer@@Base>
   132e4:	ldr	r3, [r4, #24]
   132e8:	ldr	r2, [r4, #28]
   132ec:	adds	r3, r3, #1
   132f0:	adc	r2, r2, #0
   132f4:	str	r3, [r4, #24]
   132f8:	str	r2, [r4, #28]
   132fc:	add	sp, sp, #24
   13300:	ldr	r4, [sp]
   13304:	add	sp, sp, #4
   13308:	pop	{pc}		; (ldr pc, [sp], #4)
   1330c:	andeq	pc, r2, r0, asr #30

00013310 <read_token_int_type@@Base>:
   13310:	str	r4, [sp, #-8]!
   13314:	str	lr, [sp, #4]
   13318:	sub	sp, sp, #24
   1331c:	ldr	r4, [pc, #192]	; 133e4 <read_token_int_type@@Base+0xd4>
   13320:	ldr	r3, [r4]
   13324:	ldr	r2, [r4, #4]
   13328:	adds	r3, r3, #1
   1332c:	adc	r2, r2, #0
   13330:	str	r3, [r4]
   13334:	str	r2, [r4, #4]
   13338:	movw	r1, #56528	; 0xdcd0
   1333c:	movt	r1, #1
   13340:	add	r0, sp, #12
   13344:	bl	1a338 <init_lexer@@Base>
   13348:	ldr	r3, [r4, #8]
   1334c:	ldr	r2, [r4, #12]
   13350:	adds	r3, r3, #1
   13354:	adc	r2, r2, #0
   13358:	str	r3, [r4, #8]
   1335c:	str	r2, [r4, #12]
   13360:	add	r0, sp, #12
   13364:	bl	1a5b4 <next@@Base>
   13368:	ldr	r3, [r4, #16]
   1336c:	ldr	r2, [r4, #20]
   13370:	adds	r3, r3, #1
   13374:	adc	r2, r2, #0
   13378:	str	r3, [r4, #16]
   1337c:	str	r2, [r4, #20]
   13380:	ldr	r1, [r0]
   13384:	mov	r3, #148	; 0x94
   13388:	str	r3, [sp]
   1338c:	movw	r3, #279	; 0x117
   13390:	mov	r2, #0
   13394:	mov	r0, r2
   13398:	bl	16784 <UnityAssertEqualNumber@@Base>
   1339c:	ldr	r3, [r4, #24]
   133a0:	ldr	r2, [r4, #28]
   133a4:	adds	r3, r3, #1
   133a8:	adc	r2, r2, #0
   133ac:	str	r3, [r4, #24]
   133b0:	str	r2, [r4, #28]
   133b4:	add	r0, sp, #12
   133b8:	bl	1a3a4 <destroy_lexer@@Base>
   133bc:	ldr	r3, [r4, #32]
   133c0:	ldr	r2, [r4, #36]	; 0x24
   133c4:	adds	r3, r3, #1
   133c8:	adc	r2, r2, #0
   133cc:	str	r3, [r4, #32]
   133d0:	str	r2, [r4, #36]	; 0x24
   133d4:	add	sp, sp, #24
   133d8:	ldr	r4, [sp]
   133dc:	add	sp, sp, #4
   133e0:	pop	{pc}		; (ldr pc, [sp], #4)
   133e4:	andeq	pc, r2, r0, ror #30

000133e8 <if_with_else@@Base>:
   133e8:	strd	r4, [sp, #-16]!
   133ec:	str	r6, [sp, #8]
   133f0:	str	lr, [sp, #12]
   133f4:	sub	sp, sp, #24
   133f8:	movw	r6, #64576	; 0xfc40
   133fc:	movt	r6, #2
   13400:	add	r4, r6, #848	; 0x350
   13404:	ldr	r3, [r4, #-8]
   13408:	ldr	r2, [r4, #-4]
   1340c:	adds	r3, r3, #1
   13410:	adc	r2, r2, #0
   13414:	str	r3, [r4, #-8]
   13418:	str	r2, [r4, #-4]
   1341c:	movw	r1, #56532	; 0xdcd4
   13420:	movt	r1, #1
   13424:	add	r0, sp, #12
   13428:	bl	1a338 <init_lexer@@Base>
   1342c:	ldr	r3, [r4]
   13430:	ldr	r2, [r4, #4]
   13434:	adds	r3, r3, #1
   13438:	adc	r2, r2, #0
   1343c:	str	r3, [r4]
   13440:	str	r2, [r4, #4]
   13444:	add	r0, sp, #12
   13448:	bl	1a5b4 <next@@Base>
   1344c:	ldr	r3, [r4, #8]
   13450:	ldr	r2, [r4, #12]
   13454:	adds	r3, r3, #1
   13458:	adc	r2, r2, #0
   1345c:	str	r3, [r4, #8]
   13460:	str	r2, [r4, #12]
   13464:	ldr	r1, [r0]
   13468:	mov	r5, #148	; 0x94
   1346c:	str	r5, [sp]
   13470:	mov	r3, #210	; 0xd2
   13474:	mov	r2, #0
   13478:	mov	r0, r2
   1347c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13480:	ldr	r3, [r4, #16]
   13484:	ldr	r2, [r4, #20]
   13488:	adds	r3, r3, #1
   1348c:	adc	r2, r2, #0
   13490:	str	r3, [r4, #16]
   13494:	str	r2, [r4, #20]
   13498:	add	r0, sp, #12
   1349c:	bl	1a5b4 <next@@Base>
   134a0:	ldr	r3, [r4, #24]
   134a4:	ldr	r2, [r4, #28]
   134a8:	adds	r3, r3, #1
   134ac:	adc	r2, r2, #0
   134b0:	str	r3, [r4, #24]
   134b4:	str	r2, [r4, #28]
   134b8:	ldr	r1, [r0]
   134bc:	str	r5, [sp]
   134c0:	mov	r3, #212	; 0xd4
   134c4:	mov	r2, #0
   134c8:	mov	r0, #2
   134cc:	bl	16784 <UnityAssertEqualNumber@@Base>
   134d0:	ldr	r3, [r4, #32]
   134d4:	ldr	r2, [r4, #36]	; 0x24
   134d8:	adds	r3, r3, #1
   134dc:	adc	r2, r2, #0
   134e0:	str	r3, [r4, #32]
   134e4:	str	r2, [r4, #36]	; 0x24
   134e8:	add	r0, sp, #12
   134ec:	bl	1a5b4 <next@@Base>
   134f0:	ldr	r3, [r4, #40]	; 0x28
   134f4:	ldr	r2, [r4, #44]	; 0x2c
   134f8:	adds	r3, r3, #1
   134fc:	adc	r2, r2, #0
   13500:	str	r3, [r4, #40]	; 0x28
   13504:	str	r2, [r4, #44]	; 0x2c
   13508:	ldr	r1, [r0]
   1350c:	str	r5, [sp]
   13510:	mov	r3, #214	; 0xd6
   13514:	mov	r2, #0
   13518:	mov	r0, #3
   1351c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13520:	ldr	r3, [r4, #48]	; 0x30
   13524:	ldr	r2, [r4, #52]	; 0x34
   13528:	adds	r3, r3, #1
   1352c:	adc	r2, r2, #0
   13530:	str	r3, [r4, #48]	; 0x30
   13534:	str	r2, [r4, #52]	; 0x34
   13538:	add	r0, sp, #12
   1353c:	bl	1a5b4 <next@@Base>
   13540:	ldr	r3, [r4, #56]	; 0x38
   13544:	ldr	r2, [r4, #60]	; 0x3c
   13548:	adds	r3, r3, #1
   1354c:	adc	r2, r2, #0
   13550:	str	r3, [r4, #56]	; 0x38
   13554:	str	r2, [r4, #60]	; 0x3c
   13558:	ldr	r1, [r0]
   1355c:	str	r5, [sp]
   13560:	mov	r3, #216	; 0xd8
   13564:	mov	r2, #0
   13568:	mov	r0, #4
   1356c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13570:	ldr	r3, [r4, #64]	; 0x40
   13574:	ldr	r2, [r4, #68]	; 0x44
   13578:	adds	r3, r3, #1
   1357c:	adc	r2, r2, #0
   13580:	str	r3, [r4, #64]	; 0x40
   13584:	str	r2, [r4, #68]	; 0x44
   13588:	add	r0, sp, #12
   1358c:	bl	1a5b4 <next@@Base>
   13590:	ldr	r3, [r4, #72]	; 0x48
   13594:	ldr	r2, [r4, #76]	; 0x4c
   13598:	adds	r3, r3, #1
   1359c:	adc	r2, r2, #0
   135a0:	str	r3, [r4, #72]	; 0x48
   135a4:	str	r2, [r4, #76]	; 0x4c
   135a8:	ldr	r1, [r0]
   135ac:	str	r5, [sp]
   135b0:	mov	r3, #218	; 0xda
   135b4:	mov	r2, #0
   135b8:	mov	r0, #5
   135bc:	bl	16784 <UnityAssertEqualNumber@@Base>
   135c0:	ldr	r3, [r4, #80]	; 0x50
   135c4:	ldr	r2, [r4, #84]	; 0x54
   135c8:	adds	r3, r3, #1
   135cc:	adc	r2, r2, #0
   135d0:	str	r3, [r4, #80]	; 0x50
   135d4:	str	r2, [r4, #84]	; 0x54
   135d8:	add	r0, sp, #12
   135dc:	bl	1a5b4 <next@@Base>
   135e0:	ldr	r3, [r4, #88]	; 0x58
   135e4:	ldr	r2, [r4, #92]	; 0x5c
   135e8:	adds	r3, r3, #1
   135ec:	adc	r2, r2, #0
   135f0:	str	r3, [r4, #88]	; 0x58
   135f4:	str	r2, [r4, #92]	; 0x5c
   135f8:	ldr	r1, [r0]
   135fc:	str	r5, [sp]
   13600:	mov	r3, #220	; 0xdc
   13604:	mov	r2, #0
   13608:	mov	r0, #10
   1360c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13610:	ldr	r3, [r4, #96]	; 0x60
   13614:	ldr	r2, [r4, #100]	; 0x64
   13618:	adds	r3, r3, #1
   1361c:	adc	r2, r2, #0
   13620:	str	r3, [r4, #96]	; 0x60
   13624:	str	r2, [r4, #100]	; 0x64
   13628:	add	r0, sp, #12
   1362c:	bl	1a5b4 <next@@Base>
   13630:	ldr	r3, [r4, #104]	; 0x68
   13634:	ldr	r2, [r4, #108]	; 0x6c
   13638:	adds	r3, r3, #1
   1363c:	adc	r2, r2, #0
   13640:	str	r3, [r4, #104]	; 0x68
   13644:	str	r2, [r4, #108]	; 0x6c
   13648:	ldr	r1, [r0]
   1364c:	str	r5, [sp]
   13650:	mov	r3, #222	; 0xde
   13654:	mov	r2, #0
   13658:	mov	r0, #3
   1365c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13660:	ldr	r3, [r4, #112]	; 0x70
   13664:	ldr	r2, [r4, #116]	; 0x74
   13668:	adds	r3, r3, #1
   1366c:	adc	r2, r2, #0
   13670:	str	r3, [r4, #112]	; 0x70
   13674:	str	r2, [r4, #116]	; 0x74
   13678:	add	r0, sp, #12
   1367c:	bl	1a5b4 <next@@Base>
   13680:	ldr	r3, [r4, #120]	; 0x78
   13684:	ldr	r2, [r4, #124]	; 0x7c
   13688:	adds	r3, r3, #1
   1368c:	adc	r2, r2, #0
   13690:	str	r3, [r4, #120]	; 0x78
   13694:	str	r2, [r4, #124]	; 0x7c
   13698:	ldr	r1, [r0]
   1369c:	str	r5, [sp]
   136a0:	mov	r3, #224	; 0xe0
   136a4:	mov	r2, #0
   136a8:	mov	r0, #1
   136ac:	bl	16784 <UnityAssertEqualNumber@@Base>
   136b0:	ldr	r3, [r4, #128]	; 0x80
   136b4:	ldr	r2, [r4, #132]	; 0x84
   136b8:	adds	r3, r3, #1
   136bc:	adc	r2, r2, #0
   136c0:	str	r3, [r4, #128]	; 0x80
   136c4:	str	r2, [r4, #132]	; 0x84
   136c8:	add	r0, sp, #12
   136cc:	bl	1a5b4 <next@@Base>
   136d0:	ldr	r3, [r4, #136]	; 0x88
   136d4:	ldr	r2, [r4, #140]	; 0x8c
   136d8:	adds	r3, r3, #1
   136dc:	adc	r2, r2, #0
   136e0:	str	r3, [r4, #136]	; 0x88
   136e4:	str	r2, [r4, #140]	; 0x8c
   136e8:	ldr	r1, [r0]
   136ec:	str	r5, [sp]
   136f0:	mov	r3, #226	; 0xe2
   136f4:	mov	r2, #0
   136f8:	mov	r0, #12
   136fc:	bl	16784 <UnityAssertEqualNumber@@Base>
   13700:	ldr	r3, [r4, #144]	; 0x90
   13704:	ldr	r2, [r4, #148]	; 0x94
   13708:	adds	r3, r3, #1
   1370c:	adc	r2, r2, #0
   13710:	str	r3, [r4, #144]	; 0x90
   13714:	str	r2, [r4, #148]	; 0x94
   13718:	add	r0, sp, #12
   1371c:	bl	1a5b4 <next@@Base>
   13720:	ldr	r3, [r4, #152]	; 0x98
   13724:	ldr	r2, [r4, #156]	; 0x9c
   13728:	adds	r3, r3, #1
   1372c:	adc	r2, r2, #0
   13730:	str	r3, [r4, #152]	; 0x98
   13734:	str	r2, [r4, #156]	; 0x9c
   13738:	ldr	r1, [r0]
   1373c:	str	r5, [sp]
   13740:	mov	r3, #228	; 0xe4
   13744:	mov	r2, #0
   13748:	mov	r0, #1
   1374c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13750:	ldr	r3, [r4, #160]	; 0xa0
   13754:	ldr	r2, [r4, #164]	; 0xa4
   13758:	adds	r3, r3, #1
   1375c:	adc	r2, r2, #0
   13760:	str	r3, [r4, #160]	; 0xa0
   13764:	str	r2, [r4, #164]	; 0xa4
   13768:	add	r0, sp, #12
   1376c:	bl	1a5b4 <next@@Base>
   13770:	ldr	r3, [r4, #168]	; 0xa8
   13774:	ldr	r2, [r4, #172]	; 0xac
   13778:	adds	r3, r3, #1
   1377c:	adc	r2, r2, #0
   13780:	str	r3, [r4, #168]	; 0xa8
   13784:	str	r2, [r4, #172]	; 0xac
   13788:	ldr	r1, [r0]
   1378c:	str	r5, [sp]
   13790:	mov	r3, #230	; 0xe6
   13794:	mov	r2, #0
   13798:	mov	r0, #4
   1379c:	bl	16784 <UnityAssertEqualNumber@@Base>
   137a0:	ldr	r3, [r4, #176]	; 0xb0
   137a4:	ldr	r2, [r4, #180]	; 0xb4
   137a8:	adds	r3, r3, #1
   137ac:	adc	r2, r2, #0
   137b0:	str	r3, [r4, #176]	; 0xb0
   137b4:	str	r2, [r4, #180]	; 0xb4
   137b8:	add	r0, sp, #12
   137bc:	bl	1a5b4 <next@@Base>
   137c0:	ldr	r3, [r4, #184]	; 0xb8
   137c4:	ldr	r2, [r4, #188]	; 0xbc
   137c8:	adds	r3, r3, #1
   137cc:	adc	r2, r2, #0
   137d0:	str	r3, [r4, #184]	; 0xb8
   137d4:	str	r2, [r4, #188]	; 0xbc
   137d8:	ldr	r1, [r0]
   137dc:	str	r5, [sp]
   137e0:	mov	r3, #232	; 0xe8
   137e4:	mov	r2, #0
   137e8:	mov	r0, #5
   137ec:	bl	16784 <UnityAssertEqualNumber@@Base>
   137f0:	ldr	r3, [r4, #192]	; 0xc0
   137f4:	ldr	r2, [r4, #196]	; 0xc4
   137f8:	adds	r3, r3, #1
   137fc:	adc	r2, r2, #0
   13800:	str	r3, [r4, #192]	; 0xc0
   13804:	str	r2, [r4, #196]	; 0xc4
   13808:	add	r0, sp, #12
   1380c:	bl	1a5b4 <next@@Base>
   13810:	ldr	r3, [r4, #200]	; 0xc8
   13814:	ldr	r2, [r4, #204]	; 0xcc
   13818:	adds	r3, r3, #1
   1381c:	adc	r2, r2, #0
   13820:	str	r3, [r4, #200]	; 0xc8
   13824:	str	r2, [r4, #204]	; 0xcc
   13828:	ldr	r1, [r0]
   1382c:	str	r5, [sp]
   13830:	mov	r3, #234	; 0xea
   13834:	mov	r2, #0
   13838:	mov	r0, #7
   1383c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13840:	ldr	r3, [r4, #208]	; 0xd0
   13844:	ldr	r2, [r4, #212]	; 0xd4
   13848:	adds	r3, r3, #1
   1384c:	adc	r2, r2, #0
   13850:	str	r3, [r4, #208]	; 0xd0
   13854:	str	r2, [r4, #212]	; 0xd4
   13858:	add	r0, sp, #12
   1385c:	bl	1a5b4 <next@@Base>
   13860:	ldr	r3, [r4, #216]	; 0xd8
   13864:	ldr	r2, [r4, #220]	; 0xdc
   13868:	adds	r3, r3, #1
   1386c:	adc	r2, r2, #0
   13870:	str	r3, [r4, #216]	; 0xd8
   13874:	str	r2, [r4, #220]	; 0xdc
   13878:	ldr	r1, [r0]
   1387c:	str	r5, [sp]
   13880:	mov	r3, #236	; 0xec
   13884:	mov	r2, #0
   13888:	mov	r0, #1
   1388c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13890:	ldr	r3, [r4, #224]	; 0xe0
   13894:	ldr	r2, [r4, #228]	; 0xe4
   13898:	adds	r3, r3, #1
   1389c:	adc	r2, r2, #0
   138a0:	str	r3, [r4, #224]	; 0xe0
   138a4:	str	r2, [r4, #228]	; 0xe4
   138a8:	add	r0, sp, #12
   138ac:	bl	1a5b4 <next@@Base>
   138b0:	ldr	r3, [r4, #232]	; 0xe8
   138b4:	ldr	r2, [r4, #236]	; 0xec
   138b8:	adds	r3, r3, #1
   138bc:	adc	r2, r2, #0
   138c0:	str	r3, [r4, #232]	; 0xe8
   138c4:	str	r2, [r4, #236]	; 0xec
   138c8:	ldr	r1, [r0]
   138cc:	str	r5, [sp]
   138d0:	mov	r3, #238	; 0xee
   138d4:	mov	r2, #0
   138d8:	mov	r0, #8
   138dc:	bl	16784 <UnityAssertEqualNumber@@Base>
   138e0:	ldr	r3, [r4, #240]	; 0xf0
   138e4:	ldr	r2, [r4, #244]	; 0xf4
   138e8:	adds	r3, r3, #1
   138ec:	adc	r2, r2, #0
   138f0:	str	r3, [r4, #240]	; 0xf0
   138f4:	str	r2, [r4, #244]	; 0xf4
   138f8:	add	r0, sp, #12
   138fc:	bl	1a5b4 <next@@Base>
   13900:	ldr	r3, [r4, #248]	; 0xf8
   13904:	ldr	r2, [r4, #252]	; 0xfc
   13908:	adds	r3, r3, #1
   1390c:	adc	r2, r2, #0
   13910:	str	r3, [r4, #248]	; 0xf8
   13914:	str	r2, [r4, #252]	; 0xfc
   13918:	ldr	r1, [r0]
   1391c:	str	r5, [sp]
   13920:	mov	r3, #240	; 0xf0
   13924:	mov	r2, #0
   13928:	mov	r0, #6
   1392c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13930:	ldr	r3, [r6, #1104]	; 0x450
   13934:	ldr	r1, [r6, #1108]	; 0x454
   13938:	adds	r3, r3, #1
   1393c:	adc	r1, r1, #0
   13940:	str	r3, [r6, #1104]	; 0x450
   13944:	str	r1, [r6, #1108]	; 0x454
   13948:	add	r0, sp, #12
   1394c:	bl	1a5b4 <next@@Base>
   13950:	ldr	r3, [r6, #1112]	; 0x458
   13954:	ldr	r2, [r6, #1116]	; 0x45c
   13958:	adds	r3, r3, #1
   1395c:	adc	r2, r2, #0
   13960:	str	r3, [r6, #1112]	; 0x458
   13964:	str	r2, [r6, #1116]	; 0x45c
   13968:	ldr	r1, [r0]
   1396c:	str	r5, [sp]
   13970:	mov	r3, #242	; 0xf2
   13974:	mov	r2, #0
   13978:	mov	r0, #11
   1397c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13980:	ldr	r3, [r6, #1120]	; 0x460
   13984:	ldr	r2, [r6, #1124]	; 0x464
   13988:	adds	r3, r3, #1
   1398c:	adc	r2, r2, #0
   13990:	str	r3, [r6, #1120]	; 0x460
   13994:	str	r2, [r6, #1124]	; 0x464
   13998:	add	r0, sp, #12
   1399c:	bl	1a5b4 <next@@Base>
   139a0:	ldr	r3, [r6, #1128]	; 0x468
   139a4:	ldr	r2, [r6, #1132]	; 0x46c
   139a8:	adds	r3, r3, #1
   139ac:	adc	r2, r2, #0
   139b0:	str	r3, [r6, #1128]	; 0x468
   139b4:	str	r2, [r6, #1132]	; 0x46c
   139b8:	ldr	r1, [r0]
   139bc:	str	r5, [sp]
   139c0:	mov	r3, #244	; 0xf4
   139c4:	mov	r2, #0
   139c8:	mov	r0, #5
   139cc:	bl	16784 <UnityAssertEqualNumber@@Base>
   139d0:	ldr	r3, [r6, #1136]	; 0x470
   139d4:	ldr	r2, [r6, #1140]	; 0x474
   139d8:	adds	r3, r3, #1
   139dc:	adc	r2, r2, #0
   139e0:	str	r3, [r6, #1136]	; 0x470
   139e4:	str	r2, [r6, #1140]	; 0x474
   139e8:	add	r0, sp, #12
   139ec:	bl	1a5b4 <next@@Base>
   139f0:	ldr	r3, [r6, #1144]	; 0x478
   139f4:	ldr	r2, [r6, #1148]	; 0x47c
   139f8:	adds	r3, r3, #1
   139fc:	adc	r2, r2, #0
   13a00:	str	r3, [r6, #1144]	; 0x478
   13a04:	str	r2, [r6, #1148]	; 0x47c
   13a08:	ldr	r1, [r0]
   13a0c:	str	r5, [sp]
   13a10:	mov	r3, #246	; 0xf6
   13a14:	mov	r2, #0
   13a18:	mov	r0, #7
   13a1c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13a20:	ldr	r3, [r6, #1152]	; 0x480
   13a24:	ldr	r2, [r6, #1156]	; 0x484
   13a28:	adds	r3, r3, #1
   13a2c:	adc	r2, r2, #0
   13a30:	str	r3, [r6, #1152]	; 0x480
   13a34:	str	r2, [r6, #1156]	; 0x484
   13a38:	add	r0, sp, #12
   13a3c:	bl	1a5b4 <next@@Base>
   13a40:	ldr	r3, [r6, #1160]	; 0x488
   13a44:	ldr	r2, [r6, #1164]	; 0x48c
   13a48:	adds	r3, r3, #1
   13a4c:	adc	r2, r2, #0
   13a50:	str	r3, [r6, #1160]	; 0x488
   13a54:	str	r2, [r6, #1164]	; 0x48c
   13a58:	ldr	r1, [r0]
   13a5c:	str	r5, [sp]
   13a60:	mov	r3, #248	; 0xf8
   13a64:	mov	r2, #0
   13a68:	mov	r0, #1
   13a6c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13a70:	ldr	r3, [r6, #1168]	; 0x490
   13a74:	ldr	r2, [r6, #1172]	; 0x494
   13a78:	adds	r3, r3, #1
   13a7c:	adc	r2, r2, #0
   13a80:	str	r3, [r6, #1168]	; 0x490
   13a84:	str	r2, [r6, #1172]	; 0x494
   13a88:	add	r0, sp, #12
   13a8c:	bl	1a5b4 <next@@Base>
   13a90:	ldr	r3, [r6, #1176]	; 0x498
   13a94:	ldr	r2, [r6, #1180]	; 0x49c
   13a98:	adds	r3, r3, #1
   13a9c:	adc	r2, r2, #0
   13aa0:	str	r3, [r6, #1176]	; 0x498
   13aa4:	str	r2, [r6, #1180]	; 0x49c
   13aa8:	ldr	r1, [r0]
   13aac:	str	r5, [sp]
   13ab0:	mov	r3, #250	; 0xfa
   13ab4:	mov	r2, #0
   13ab8:	mov	r0, #8
   13abc:	bl	16784 <UnityAssertEqualNumber@@Base>
   13ac0:	ldr	r3, [r6, #1184]	; 0x4a0
   13ac4:	ldr	r2, [r6, #1188]	; 0x4a4
   13ac8:	adds	r3, r3, #1
   13acc:	adc	r2, r2, #0
   13ad0:	str	r3, [r6, #1184]	; 0x4a0
   13ad4:	str	r2, [r6, #1188]	; 0x4a4
   13ad8:	add	r0, sp, #12
   13adc:	bl	1a5b4 <next@@Base>
   13ae0:	ldr	r3, [r6, #1192]	; 0x4a8
   13ae4:	ldr	r2, [r6, #1196]	; 0x4ac
   13ae8:	adds	r3, r3, #1
   13aec:	adc	r2, r2, #0
   13af0:	str	r3, [r6, #1192]	; 0x4a8
   13af4:	str	r2, [r6, #1196]	; 0x4ac
   13af8:	ldr	r1, [r0]
   13afc:	str	r5, [sp]
   13b00:	mov	r3, #252	; 0xfc
   13b04:	mov	r2, #0
   13b08:	mov	r0, #6
   13b0c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13b10:	ldr	r3, [r6, #1200]	; 0x4b0
   13b14:	ldr	r2, [r6, #1204]	; 0x4b4
   13b18:	adds	r3, r3, #1
   13b1c:	adc	r2, r2, #0
   13b20:	str	r3, [r6, #1200]	; 0x4b0
   13b24:	str	r2, [r6, #1204]	; 0x4b4
   13b28:	add	r0, sp, #12
   13b2c:	bl	1a5b4 <next@@Base>
   13b30:	ldr	r3, [r6, #1208]	; 0x4b8
   13b34:	ldr	r2, [r6, #1212]	; 0x4bc
   13b38:	adds	r3, r3, #1
   13b3c:	adc	r2, r2, #0
   13b40:	str	r3, [r6, #1208]	; 0x4b8
   13b44:	str	r2, [r6, #1212]	; 0x4bc
   13b48:	ldr	r1, [r0]
   13b4c:	str	r5, [sp]
   13b50:	mov	r3, #254	; 0xfe
   13b54:	mov	r2, #0
   13b58:	mov	r0, #7
   13b5c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13b60:	ldr	r3, [r6, #1216]	; 0x4c0
   13b64:	ldr	r2, [r6, #1220]	; 0x4c4
   13b68:	adds	r3, r3, #1
   13b6c:	adc	r2, r2, #0
   13b70:	str	r3, [r6, #1216]	; 0x4c0
   13b74:	str	r2, [r6, #1220]	; 0x4c4
   13b78:	add	r0, sp, #12
   13b7c:	bl	1a5b4 <next@@Base>
   13b80:	ldr	r3, [r6, #1224]	; 0x4c8
   13b84:	ldr	r2, [r6, #1228]	; 0x4cc
   13b88:	adds	r3, r3, #1
   13b8c:	adc	r2, r2, #0
   13b90:	str	r3, [r6, #1224]	; 0x4c8
   13b94:	str	r2, [r6, #1228]	; 0x4cc
   13b98:	ldr	r1, [r0]
   13b9c:	str	r5, [sp]
   13ba0:	mov	r3, #256	; 0x100
   13ba4:	mov	r2, #0
   13ba8:	mov	r0, #1
   13bac:	bl	16784 <UnityAssertEqualNumber@@Base>
   13bb0:	ldr	r3, [r6, #1232]	; 0x4d0
   13bb4:	ldr	r2, [r6, #1236]	; 0x4d4
   13bb8:	adds	r3, r3, #1
   13bbc:	adc	r2, r2, #0
   13bc0:	str	r3, [r6, #1232]	; 0x4d0
   13bc4:	str	r2, [r6, #1236]	; 0x4d4
   13bc8:	add	r0, sp, #12
   13bcc:	bl	1a5b4 <next@@Base>
   13bd0:	ldr	r3, [r6, #1240]	; 0x4d8
   13bd4:	ldr	r2, [r6, #1244]	; 0x4dc
   13bd8:	adds	r3, r3, #1
   13bdc:	adc	r2, r2, #0
   13be0:	str	r3, [r6, #1240]	; 0x4d8
   13be4:	str	r2, [r6, #1244]	; 0x4dc
   13be8:	ldr	r1, [r0]
   13bec:	str	r5, [sp]
   13bf0:	movw	r3, #258	; 0x102
   13bf4:	mov	r2, #0
   13bf8:	mov	r0, #8
   13bfc:	bl	16784 <UnityAssertEqualNumber@@Base>
   13c00:	ldr	r3, [r6, #1248]	; 0x4e0
   13c04:	ldr	r2, [r6, #1252]	; 0x4e4
   13c08:	adds	r3, r3, #1
   13c0c:	adc	r2, r2, #0
   13c10:	str	r3, [r6, #1248]	; 0x4e0
   13c14:	str	r2, [r6, #1252]	; 0x4e4
   13c18:	add	r0, sp, #12
   13c1c:	bl	1a5b4 <next@@Base>
   13c20:	ldr	r3, [r6, #1256]	; 0x4e8
   13c24:	ldr	r2, [r6, #1260]	; 0x4ec
   13c28:	adds	r3, r3, #1
   13c2c:	adc	r2, r2, #0
   13c30:	str	r3, [r6, #1256]	; 0x4e8
   13c34:	str	r2, [r6, #1260]	; 0x4ec
   13c38:	ldr	r1, [r0]
   13c3c:	str	r5, [sp]
   13c40:	mov	r3, #260	; 0x104
   13c44:	mov	r2, #0
   13c48:	mov	r0, #6
   13c4c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13c50:	ldr	r3, [r6, #1264]	; 0x4f0
   13c54:	ldr	r2, [r6, #1268]	; 0x4f4
   13c58:	adds	r3, r3, #1
   13c5c:	adc	r2, r2, #0
   13c60:	str	r3, [r6, #1264]	; 0x4f0
   13c64:	str	r2, [r6, #1268]	; 0x4f4
   13c68:	add	r0, sp, #12
   13c6c:	bl	1a5b4 <next@@Base>
   13c70:	ldr	r3, [r6, #1272]	; 0x4f8
   13c74:	ldr	r2, [r6, #1276]	; 0x4fc
   13c78:	adds	r3, r3, #1
   13c7c:	adc	r2, r2, #0
   13c80:	str	r3, [r6, #1272]	; 0x4f8
   13c84:	str	r2, [r6, #1276]	; 0x4fc
   13c88:	ldr	r1, [r0]
   13c8c:	str	r5, [sp]
   13c90:	movw	r3, #262	; 0x106
   13c94:	mov	r2, #0
   13c98:	mov	r0, #9
   13c9c:	bl	16784 <UnityAssertEqualNumber@@Base>
   13ca0:	ldr	r3, [r6, #1280]	; 0x500
   13ca4:	ldr	r2, [r6, #1284]	; 0x504
   13ca8:	adds	r3, r3, #1
   13cac:	adc	r2, r2, #0
   13cb0:	str	r3, [r6, #1280]	; 0x500
   13cb4:	str	r2, [r6, #1284]	; 0x504
   13cb8:	add	r0, sp, #12
   13cbc:	bl	1a3a4 <destroy_lexer@@Base>
   13cc0:	ldr	r3, [r6, #1288]	; 0x508
   13cc4:	ldr	r2, [r6, #1292]	; 0x50c
   13cc8:	adds	r3, r3, #1
   13ccc:	adc	r2, r2, #0
   13cd0:	str	r3, [r6, #1288]	; 0x508
   13cd4:	str	r2, [r6, #1292]	; 0x50c
   13cd8:	add	sp, sp, #24
   13cdc:	ldrd	r4, [sp]
   13ce0:	ldr	r6, [sp, #8]
   13ce4:	add	sp, sp, #12
   13ce8:	pop	{pc}		; (ldr pc, [sp], #4)

00013cec <if_without_else@@Base>:
   13cec:	strd	r4, [sp, #-16]!
   13cf0:	str	r6, [sp, #8]
   13cf4:	str	lr, [sp, #12]
   13cf8:	sub	sp, sp, #24
   13cfc:	movw	r6, #64576	; 0xfc40
   13d00:	movt	r6, #2
   13d04:	add	r4, r6, #1296	; 0x510
   13d08:	ldr	r3, [r4]
   13d0c:	ldr	r2, [r4, #4]
   13d10:	adds	r3, r3, #1
   13d14:	adc	r2, r2, #0
   13d18:	str	r3, [r4]
   13d1c:	str	r2, [r4, #4]
   13d20:	movw	r1, #56616	; 0xdd28
   13d24:	movt	r1, #1
   13d28:	add	r0, sp, #12
   13d2c:	bl	1a338 <init_lexer@@Base>
   13d30:	ldr	r3, [r4, #8]
   13d34:	ldr	r2, [r4, #12]
   13d38:	adds	r3, r3, #1
   13d3c:	adc	r2, r2, #0
   13d40:	str	r3, [r4, #8]
   13d44:	str	r2, [r4, #12]
   13d48:	add	r0, sp, #12
   13d4c:	bl	1a5b4 <next@@Base>
   13d50:	ldr	r3, [r4, #16]
   13d54:	ldr	r2, [r4, #20]
   13d58:	adds	r3, r3, #1
   13d5c:	adc	r2, r2, #0
   13d60:	str	r3, [r4, #16]
   13d64:	str	r2, [r4, #20]
   13d68:	ldr	r1, [r0]
   13d6c:	mov	r5, #148	; 0x94
   13d70:	str	r5, [sp]
   13d74:	mov	r3, #140	; 0x8c
   13d78:	mov	r2, #0
   13d7c:	mov	r0, r2
   13d80:	bl	16784 <UnityAssertEqualNumber@@Base>
   13d84:	ldr	r3, [r4, #24]
   13d88:	ldr	r2, [r4, #28]
   13d8c:	adds	r3, r3, #1
   13d90:	adc	r2, r2, #0
   13d94:	str	r3, [r4, #24]
   13d98:	str	r2, [r4, #28]
   13d9c:	add	r0, sp, #12
   13da0:	bl	1a5b4 <next@@Base>
   13da4:	ldr	r3, [r4, #32]
   13da8:	ldr	r2, [r4, #36]	; 0x24
   13dac:	adds	r3, r3, #1
   13db0:	adc	r2, r2, #0
   13db4:	str	r3, [r4, #32]
   13db8:	str	r2, [r4, #36]	; 0x24
   13dbc:	ldr	r1, [r0]
   13dc0:	str	r5, [sp]
   13dc4:	mov	r3, #142	; 0x8e
   13dc8:	mov	r2, #0
   13dcc:	mov	r0, #2
   13dd0:	bl	16784 <UnityAssertEqualNumber@@Base>
   13dd4:	ldr	r3, [r4, #40]	; 0x28
   13dd8:	ldr	r2, [r4, #44]	; 0x2c
   13ddc:	adds	r3, r3, #1
   13de0:	adc	r2, r2, #0
   13de4:	str	r3, [r4, #40]	; 0x28
   13de8:	str	r2, [r4, #44]	; 0x2c
   13dec:	add	r0, sp, #12
   13df0:	bl	1a5b4 <next@@Base>
   13df4:	ldr	r3, [r4, #48]	; 0x30
   13df8:	ldr	r2, [r4, #52]	; 0x34
   13dfc:	adds	r3, r3, #1
   13e00:	adc	r2, r2, #0
   13e04:	str	r3, [r4, #48]	; 0x30
   13e08:	str	r2, [r4, #52]	; 0x34
   13e0c:	ldr	r1, [r0]
   13e10:	str	r5, [sp]
   13e14:	mov	r3, #144	; 0x90
   13e18:	mov	r2, #0
   13e1c:	mov	r0, #3
   13e20:	bl	16784 <UnityAssertEqualNumber@@Base>
   13e24:	ldr	r3, [r4, #56]	; 0x38
   13e28:	ldr	r2, [r4, #60]	; 0x3c
   13e2c:	adds	r3, r3, #1
   13e30:	adc	r2, r2, #0
   13e34:	str	r3, [r4, #56]	; 0x38
   13e38:	str	r2, [r4, #60]	; 0x3c
   13e3c:	add	r0, sp, #12
   13e40:	bl	1a5b4 <next@@Base>
   13e44:	ldr	r3, [r4, #64]	; 0x40
   13e48:	ldr	r2, [r4, #68]	; 0x44
   13e4c:	adds	r3, r3, #1
   13e50:	adc	r2, r2, #0
   13e54:	str	r3, [r4, #64]	; 0x40
   13e58:	str	r2, [r4, #68]	; 0x44
   13e5c:	ldr	r1, [r0]
   13e60:	str	r5, [sp]
   13e64:	mov	r3, #146	; 0x92
   13e68:	mov	r2, #0
   13e6c:	mov	r0, #4
   13e70:	bl	16784 <UnityAssertEqualNumber@@Base>
   13e74:	ldr	r3, [r4, #72]	; 0x48
   13e78:	ldr	r2, [r4, #76]	; 0x4c
   13e7c:	adds	r3, r3, #1
   13e80:	adc	r2, r2, #0
   13e84:	str	r3, [r4, #72]	; 0x48
   13e88:	str	r2, [r4, #76]	; 0x4c
   13e8c:	add	r0, sp, #12
   13e90:	bl	1a5b4 <next@@Base>
   13e94:	ldr	r3, [r4, #80]	; 0x50
   13e98:	ldr	r2, [r4, #84]	; 0x54
   13e9c:	adds	r3, r3, #1
   13ea0:	adc	r2, r2, #0
   13ea4:	str	r3, [r4, #80]	; 0x50
   13ea8:	str	r2, [r4, #84]	; 0x54
   13eac:	ldr	r1, [r0]
   13eb0:	str	r5, [sp]
   13eb4:	mov	r3, r5
   13eb8:	mov	r2, #0
   13ebc:	mov	r0, #5
   13ec0:	bl	16784 <UnityAssertEqualNumber@@Base>
   13ec4:	ldr	r3, [r4, #88]	; 0x58
   13ec8:	ldr	r2, [r4, #92]	; 0x5c
   13ecc:	adds	r3, r3, #1
   13ed0:	adc	r2, r2, #0
   13ed4:	str	r3, [r4, #88]	; 0x58
   13ed8:	str	r2, [r4, #92]	; 0x5c
   13edc:	add	r0, sp, #12
   13ee0:	bl	1a5b4 <next@@Base>
   13ee4:	ldr	r3, [r4, #96]	; 0x60
   13ee8:	ldr	r2, [r4, #100]	; 0x64
   13eec:	adds	r3, r3, #1
   13ef0:	adc	r2, r2, #0
   13ef4:	str	r3, [r4, #96]	; 0x60
   13ef8:	str	r2, [r4, #100]	; 0x64
   13efc:	ldr	r1, [r0]
   13f00:	str	r5, [sp]
   13f04:	mov	r3, #150	; 0x96
   13f08:	mov	r2, #0
   13f0c:	mov	r0, #10
   13f10:	bl	16784 <UnityAssertEqualNumber@@Base>
   13f14:	ldr	r3, [r4, #104]	; 0x68
   13f18:	ldr	r2, [r4, #108]	; 0x6c
   13f1c:	adds	r3, r3, #1
   13f20:	adc	r2, r2, #0
   13f24:	str	r3, [r4, #104]	; 0x68
   13f28:	str	r2, [r4, #108]	; 0x6c
   13f2c:	add	r0, sp, #12
   13f30:	bl	1a5b4 <next@@Base>
   13f34:	ldr	r3, [r4, #112]	; 0x70
   13f38:	ldr	r2, [r4, #116]	; 0x74
   13f3c:	adds	r3, r3, #1
   13f40:	adc	r2, r2, #0
   13f44:	str	r3, [r4, #112]	; 0x70
   13f48:	str	r2, [r4, #116]	; 0x74
   13f4c:	ldr	r1, [r0]
   13f50:	str	r5, [sp]
   13f54:	mov	r3, #152	; 0x98
   13f58:	mov	r2, #0
   13f5c:	mov	r0, #3
   13f60:	bl	16784 <UnityAssertEqualNumber@@Base>
   13f64:	ldr	r3, [r4, #120]	; 0x78
   13f68:	ldr	r2, [r4, #124]	; 0x7c
   13f6c:	adds	r3, r3, #1
   13f70:	adc	r2, r2, #0
   13f74:	str	r3, [r4, #120]	; 0x78
   13f78:	str	r2, [r4, #124]	; 0x7c
   13f7c:	add	r0, sp, #12
   13f80:	bl	1a5b4 <next@@Base>
   13f84:	ldr	r3, [r4, #128]	; 0x80
   13f88:	ldr	r2, [r4, #132]	; 0x84
   13f8c:	adds	r3, r3, #1
   13f90:	adc	r2, r2, #0
   13f94:	str	r3, [r4, #128]	; 0x80
   13f98:	str	r2, [r4, #132]	; 0x84
   13f9c:	ldr	r1, [r0]
   13fa0:	str	r5, [sp]
   13fa4:	mov	r3, #154	; 0x9a
   13fa8:	mov	r2, #0
   13fac:	mov	r0, #1
   13fb0:	bl	16784 <UnityAssertEqualNumber@@Base>
   13fb4:	ldr	r3, [r4, #136]	; 0x88
   13fb8:	ldr	r2, [r4, #140]	; 0x8c
   13fbc:	adds	r3, r3, #1
   13fc0:	adc	r2, r2, #0
   13fc4:	str	r3, [r4, #136]	; 0x88
   13fc8:	str	r2, [r4, #140]	; 0x8c
   13fcc:	add	r0, sp, #12
   13fd0:	bl	1a5b4 <next@@Base>
   13fd4:	ldr	r3, [r4, #144]	; 0x90
   13fd8:	ldr	r2, [r4, #148]	; 0x94
   13fdc:	adds	r3, r3, #1
   13fe0:	adc	r2, r2, #0
   13fe4:	str	r3, [r4, #144]	; 0x90
   13fe8:	str	r2, [r4, #148]	; 0x94
   13fec:	ldr	r1, [r0]
   13ff0:	str	r5, [sp]
   13ff4:	mov	r3, #156	; 0x9c
   13ff8:	mov	r2, #0
   13ffc:	mov	r0, #12
   14000:	bl	16784 <UnityAssertEqualNumber@@Base>
   14004:	ldr	r3, [r4, #152]	; 0x98
   14008:	ldr	r2, [r4, #156]	; 0x9c
   1400c:	adds	r3, r3, #1
   14010:	adc	r2, r2, #0
   14014:	str	r3, [r4, #152]	; 0x98
   14018:	str	r2, [r4, #156]	; 0x9c
   1401c:	add	r0, sp, #12
   14020:	bl	1a5b4 <next@@Base>
   14024:	ldr	r3, [r4, #160]	; 0xa0
   14028:	ldr	r2, [r4, #164]	; 0xa4
   1402c:	adds	r3, r3, #1
   14030:	adc	r2, r2, #0
   14034:	str	r3, [r4, #160]	; 0xa0
   14038:	str	r2, [r4, #164]	; 0xa4
   1403c:	ldr	r1, [r0]
   14040:	str	r5, [sp]
   14044:	mov	r3, #158	; 0x9e
   14048:	mov	r2, #0
   1404c:	mov	r0, #1
   14050:	bl	16784 <UnityAssertEqualNumber@@Base>
   14054:	ldr	r3, [r4, #168]	; 0xa8
   14058:	ldr	r2, [r4, #172]	; 0xac
   1405c:	adds	r3, r3, #1
   14060:	adc	r2, r2, #0
   14064:	str	r3, [r4, #168]	; 0xa8
   14068:	str	r2, [r4, #172]	; 0xac
   1406c:	add	r0, sp, #12
   14070:	bl	1a5b4 <next@@Base>
   14074:	ldr	r3, [r4, #176]	; 0xb0
   14078:	ldr	r2, [r4, #180]	; 0xb4
   1407c:	adds	r3, r3, #1
   14080:	adc	r2, r2, #0
   14084:	str	r3, [r4, #176]	; 0xb0
   14088:	str	r2, [r4, #180]	; 0xb4
   1408c:	ldr	r1, [r0]
   14090:	str	r5, [sp]
   14094:	mov	r3, #160	; 0xa0
   14098:	mov	r2, #0
   1409c:	mov	r0, #4
   140a0:	bl	16784 <UnityAssertEqualNumber@@Base>
   140a4:	ldr	r3, [r4, #184]	; 0xb8
   140a8:	ldr	r2, [r4, #188]	; 0xbc
   140ac:	adds	r3, r3, #1
   140b0:	adc	r2, r2, #0
   140b4:	str	r3, [r4, #184]	; 0xb8
   140b8:	str	r2, [r4, #188]	; 0xbc
   140bc:	add	r0, sp, #12
   140c0:	bl	1a5b4 <next@@Base>
   140c4:	ldr	r3, [r4, #192]	; 0xc0
   140c8:	ldr	r2, [r4, #196]	; 0xc4
   140cc:	adds	r3, r3, #1
   140d0:	adc	r2, r2, #0
   140d4:	str	r3, [r4, #192]	; 0xc0
   140d8:	str	r2, [r4, #196]	; 0xc4
   140dc:	ldr	r1, [r0]
   140e0:	str	r5, [sp]
   140e4:	mov	r3, #162	; 0xa2
   140e8:	mov	r2, #0
   140ec:	mov	r0, #5
   140f0:	bl	16784 <UnityAssertEqualNumber@@Base>
   140f4:	ldr	r3, [r4, #200]	; 0xc8
   140f8:	ldr	r2, [r4, #204]	; 0xcc
   140fc:	adds	r3, r3, #1
   14100:	adc	r2, r2, #0
   14104:	str	r3, [r4, #200]	; 0xc8
   14108:	str	r2, [r4, #204]	; 0xcc
   1410c:	add	r0, sp, #12
   14110:	bl	1a5b4 <next@@Base>
   14114:	ldr	r3, [r4, #208]	; 0xd0
   14118:	ldr	r2, [r4, #212]	; 0xd4
   1411c:	adds	r3, r3, #1
   14120:	adc	r2, r2, #0
   14124:	str	r3, [r4, #208]	; 0xd0
   14128:	str	r2, [r4, #212]	; 0xd4
   1412c:	ldr	r1, [r0]
   14130:	str	r5, [sp]
   14134:	mov	r3, #164	; 0xa4
   14138:	mov	r2, #0
   1413c:	mov	r0, #7
   14140:	bl	16784 <UnityAssertEqualNumber@@Base>
   14144:	ldr	r3, [r4, #216]	; 0xd8
   14148:	ldr	r2, [r4, #220]	; 0xdc
   1414c:	adds	r3, r3, #1
   14150:	adc	r2, r2, #0
   14154:	str	r3, [r4, #216]	; 0xd8
   14158:	str	r2, [r4, #220]	; 0xdc
   1415c:	add	r0, sp, #12
   14160:	bl	1a5b4 <next@@Base>
   14164:	ldr	r3, [r4, #224]	; 0xe0
   14168:	ldr	r2, [r4, #228]	; 0xe4
   1416c:	adds	r3, r3, #1
   14170:	adc	r2, r2, #0
   14174:	str	r3, [r4, #224]	; 0xe0
   14178:	str	r2, [r4, #228]	; 0xe4
   1417c:	ldr	r1, [r0]
   14180:	str	r5, [sp]
   14184:	mov	r3, #166	; 0xa6
   14188:	mov	r2, #0
   1418c:	mov	r0, #1
   14190:	bl	16784 <UnityAssertEqualNumber@@Base>
   14194:	ldr	r3, [r4, #232]	; 0xe8
   14198:	ldr	r2, [r4, #236]	; 0xec
   1419c:	adds	r3, r3, #1
   141a0:	adc	r2, r2, #0
   141a4:	str	r3, [r4, #232]	; 0xe8
   141a8:	str	r2, [r4, #236]	; 0xec
   141ac:	add	r0, sp, #12
   141b0:	bl	1a5b4 <next@@Base>
   141b4:	ldr	r3, [r4, #240]	; 0xf0
   141b8:	ldr	r2, [r4, #244]	; 0xf4
   141bc:	adds	r3, r3, #1
   141c0:	adc	r2, r2, #0
   141c4:	str	r3, [r4, #240]	; 0xf0
   141c8:	str	r2, [r4, #244]	; 0xf4
   141cc:	ldr	r1, [r0]
   141d0:	str	r5, [sp]
   141d4:	mov	r3, #168	; 0xa8
   141d8:	mov	r2, #0
   141dc:	mov	r0, #8
   141e0:	bl	16784 <UnityAssertEqualNumber@@Base>
   141e4:	ldr	r3, [r4, #248]	; 0xf8
   141e8:	ldr	r2, [r4, #252]	; 0xfc
   141ec:	adds	r3, r3, #1
   141f0:	adc	r2, r2, #0
   141f4:	str	r3, [r4, #248]	; 0xf8
   141f8:	str	r2, [r4, #252]	; 0xfc
   141fc:	add	r0, sp, #12
   14200:	bl	1a5b4 <next@@Base>
   14204:	ldr	r3, [r6, #1552]	; 0x610
   14208:	ldr	r1, [r6, #1556]	; 0x614
   1420c:	adds	r3, r3, #1
   14210:	adc	r1, r1, #0
   14214:	str	r3, [r6, #1552]	; 0x610
   14218:	str	r1, [r6, #1556]	; 0x614
   1421c:	ldr	r1, [r0]
   14220:	str	r5, [sp]
   14224:	mov	r3, #170	; 0xaa
   14228:	mov	r2, #0
   1422c:	mov	r0, #6
   14230:	bl	16784 <UnityAssertEqualNumber@@Base>
   14234:	ldr	r3, [r6, #1560]	; 0x618
   14238:	ldr	r2, [r6, #1564]	; 0x61c
   1423c:	adds	r3, r3, #1
   14240:	adc	r2, r2, #0
   14244:	str	r3, [r6, #1560]	; 0x618
   14248:	str	r2, [r6, #1564]	; 0x61c
   1424c:	add	r0, sp, #12
   14250:	bl	1a5b4 <next@@Base>
   14254:	ldr	r3, [r6, #1568]	; 0x620
   14258:	ldr	r2, [r6, #1572]	; 0x624
   1425c:	adds	r3, r3, #1
   14260:	adc	r2, r2, #0
   14264:	str	r3, [r6, #1568]	; 0x620
   14268:	str	r2, [r6, #1572]	; 0x624
   1426c:	ldr	r1, [r0]
   14270:	str	r5, [sp]
   14274:	mov	r3, #172	; 0xac
   14278:	mov	r2, #0
   1427c:	mov	r0, #7
   14280:	bl	16784 <UnityAssertEqualNumber@@Base>
   14284:	ldr	r3, [r6, #1576]	; 0x628
   14288:	ldr	r2, [r6, #1580]	; 0x62c
   1428c:	adds	r3, r3, #1
   14290:	adc	r2, r2, #0
   14294:	str	r3, [r6, #1576]	; 0x628
   14298:	str	r2, [r6, #1580]	; 0x62c
   1429c:	add	r0, sp, #12
   142a0:	bl	1a5b4 <next@@Base>
   142a4:	ldr	r3, [r6, #1584]	; 0x630
   142a8:	ldr	r2, [r6, #1588]	; 0x634
   142ac:	adds	r3, r3, #1
   142b0:	adc	r2, r2, #0
   142b4:	str	r3, [r6, #1584]	; 0x630
   142b8:	str	r2, [r6, #1588]	; 0x634
   142bc:	ldr	r1, [r0]
   142c0:	str	r5, [sp]
   142c4:	mov	r3, #174	; 0xae
   142c8:	mov	r2, #0
   142cc:	mov	r0, #1
   142d0:	bl	16784 <UnityAssertEqualNumber@@Base>
   142d4:	ldr	r3, [r6, #1592]	; 0x638
   142d8:	ldr	r2, [r6, #1596]	; 0x63c
   142dc:	adds	r3, r3, #1
   142e0:	adc	r2, r2, #0
   142e4:	str	r3, [r6, #1592]	; 0x638
   142e8:	str	r2, [r6, #1596]	; 0x63c
   142ec:	add	r0, sp, #12
   142f0:	bl	1a5b4 <next@@Base>
   142f4:	ldr	r3, [r6, #1600]	; 0x640
   142f8:	ldr	r2, [r6, #1604]	; 0x644
   142fc:	adds	r3, r3, #1
   14300:	adc	r2, r2, #0
   14304:	str	r3, [r6, #1600]	; 0x640
   14308:	str	r2, [r6, #1604]	; 0x644
   1430c:	ldr	r1, [r0]
   14310:	str	r5, [sp]
   14314:	mov	r3, #176	; 0xb0
   14318:	mov	r2, #0
   1431c:	mov	r0, #8
   14320:	bl	16784 <UnityAssertEqualNumber@@Base>
   14324:	ldr	r3, [r6, #1608]	; 0x648
   14328:	ldr	r2, [r6, #1612]	; 0x64c
   1432c:	adds	r3, r3, #1
   14330:	adc	r2, r2, #0
   14334:	str	r3, [r6, #1608]	; 0x648
   14338:	str	r2, [r6, #1612]	; 0x64c
   1433c:	add	r0, sp, #12
   14340:	bl	1a5b4 <next@@Base>
   14344:	ldr	r3, [r6, #1616]	; 0x650
   14348:	ldr	r2, [r6, #1620]	; 0x654
   1434c:	adds	r3, r3, #1
   14350:	adc	r2, r2, #0
   14354:	str	r3, [r6, #1616]	; 0x650
   14358:	str	r2, [r6, #1620]	; 0x654
   1435c:	ldr	r1, [r0]
   14360:	str	r5, [sp]
   14364:	mov	r3, #178	; 0xb2
   14368:	mov	r2, #0
   1436c:	mov	r0, #6
   14370:	bl	16784 <UnityAssertEqualNumber@@Base>
   14374:	ldr	r3, [r6, #1624]	; 0x658
   14378:	ldr	r2, [r6, #1628]	; 0x65c
   1437c:	adds	r3, r3, #1
   14380:	adc	r2, r2, #0
   14384:	str	r3, [r6, #1624]	; 0x658
   14388:	str	r2, [r6, #1628]	; 0x65c
   1438c:	add	r0, sp, #12
   14390:	bl	1a5b4 <next@@Base>
   14394:	ldr	r3, [r6, #1632]	; 0x660
   14398:	ldr	r2, [r6, #1636]	; 0x664
   1439c:	adds	r3, r3, #1
   143a0:	adc	r2, r2, #0
   143a4:	str	r3, [r6, #1632]	; 0x660
   143a8:	str	r2, [r6, #1636]	; 0x664
   143ac:	ldr	r1, [r0]
   143b0:	str	r5, [sp]
   143b4:	mov	r3, #180	; 0xb4
   143b8:	mov	r2, #0
   143bc:	mov	r0, #9
   143c0:	bl	16784 <UnityAssertEqualNumber@@Base>
   143c4:	ldr	r3, [r6, #1640]	; 0x668
   143c8:	ldr	r2, [r6, #1644]	; 0x66c
   143cc:	adds	r3, r3, #1
   143d0:	adc	r2, r2, #0
   143d4:	str	r3, [r6, #1640]	; 0x668
   143d8:	str	r2, [r6, #1644]	; 0x66c
   143dc:	add	r0, sp, #12
   143e0:	bl	1a3a4 <destroy_lexer@@Base>
   143e4:	ldr	r3, [r6, #1648]	; 0x670
   143e8:	ldr	r2, [r6, #1652]	; 0x674
   143ec:	adds	r3, r3, #1
   143f0:	adc	r2, r2, #0
   143f4:	str	r3, [r6, #1648]	; 0x670
   143f8:	str	r2, [r6, #1652]	; 0x674
   143fc:	add	sp, sp, #24
   14400:	ldrd	r4, [sp]
   14404:	ldr	r6, [sp, #8]
   14408:	add	sp, sp, #12
   1440c:	pop	{pc}		; (ldr pc, [sp], #4)

00014410 <simple_file_only_main@@Base>:
   14410:	strd	r4, [sp, #-12]!
   14414:	str	lr, [sp, #8]
   14418:	sub	sp, sp, #28
   1441c:	ldr	r4, [pc, #912]	; 147b4 <simple_file_only_main@@Base+0x3a4>
   14420:	ldr	r3, [r4, #-8]
   14424:	ldr	r2, [r4, #-4]
   14428:	adds	r3, r3, #1
   1442c:	adc	r2, r2, #0
   14430:	str	r3, [r4, #-8]
   14434:	str	r2, [r4, #-4]
   14438:	movw	r1, #56676	; 0xdd64
   1443c:	movt	r1, #1
   14440:	add	r0, sp, #12
   14444:	bl	1a338 <init_lexer@@Base>
   14448:	ldr	r3, [r4]
   1444c:	ldr	r2, [r4, #4]
   14450:	adds	r3, r3, #1
   14454:	adc	r2, r2, #0
   14458:	str	r3, [r4]
   1445c:	str	r2, [r4, #4]
   14460:	add	r0, sp, #12
   14464:	bl	1a5b4 <next@@Base>
   14468:	ldr	r3, [r4, #8]
   1446c:	ldr	r2, [r4, #12]
   14470:	adds	r3, r3, #1
   14474:	adc	r2, r2, #0
   14478:	str	r3, [r4, #8]
   1447c:	str	r2, [r4, #12]
   14480:	ldr	r1, [r0]
   14484:	mov	r5, #148	; 0x94
   14488:	str	r5, [sp]
   1448c:	mov	r3, #23
   14490:	mov	r2, #0
   14494:	mov	r0, r2
   14498:	bl	16784 <UnityAssertEqualNumber@@Base>
   1449c:	ldr	r3, [r4, #16]
   144a0:	ldr	r2, [r4, #20]
   144a4:	adds	r3, r3, #1
   144a8:	adc	r2, r2, #0
   144ac:	str	r3, [r4, #16]
   144b0:	str	r2, [r4, #20]
   144b4:	add	r0, sp, #12
   144b8:	bl	1a5b4 <next@@Base>
   144bc:	ldr	r3, [r4, #24]
   144c0:	ldr	r2, [r4, #28]
   144c4:	adds	r3, r3, #1
   144c8:	adc	r2, r2, #0
   144cc:	str	r3, [r4, #24]
   144d0:	str	r2, [r4, #28]
   144d4:	ldr	r1, [r0]
   144d8:	str	r5, [sp]
   144dc:	mov	r3, #25
   144e0:	mov	r2, #0
   144e4:	mov	r0, #2
   144e8:	bl	16784 <UnityAssertEqualNumber@@Base>
   144ec:	ldr	r3, [r4, #32]
   144f0:	ldr	r2, [r4, #36]	; 0x24
   144f4:	adds	r3, r3, #1
   144f8:	adc	r2, r2, #0
   144fc:	str	r3, [r4, #32]
   14500:	str	r2, [r4, #36]	; 0x24
   14504:	add	r0, sp, #12
   14508:	bl	1a5b4 <next@@Base>
   1450c:	ldr	r3, [r4, #40]	; 0x28
   14510:	ldr	r2, [r4, #44]	; 0x2c
   14514:	adds	r3, r3, #1
   14518:	adc	r2, r2, #0
   1451c:	str	r3, [r4, #40]	; 0x28
   14520:	str	r2, [r4, #44]	; 0x2c
   14524:	ldr	r1, [r0]
   14528:	str	r5, [sp]
   1452c:	mov	r3, #27
   14530:	mov	r2, #0
   14534:	mov	r0, #3
   14538:	bl	16784 <UnityAssertEqualNumber@@Base>
   1453c:	ldr	r3, [r4, #48]	; 0x30
   14540:	ldr	r2, [r4, #52]	; 0x34
   14544:	adds	r3, r3, #1
   14548:	adc	r2, r2, #0
   1454c:	str	r3, [r4, #48]	; 0x30
   14550:	str	r2, [r4, #52]	; 0x34
   14554:	add	r0, sp, #12
   14558:	bl	1a5b4 <next@@Base>
   1455c:	ldr	r3, [r4, #56]	; 0x38
   14560:	ldr	r2, [r4, #60]	; 0x3c
   14564:	adds	r3, r3, #1
   14568:	adc	r2, r2, #0
   1456c:	str	r3, [r4, #56]	; 0x38
   14570:	str	r2, [r4, #60]	; 0x3c
   14574:	ldr	r1, [r0]
   14578:	str	r5, [sp]
   1457c:	mov	r3, #29
   14580:	mov	r2, #0
   14584:	mov	r0, #4
   14588:	bl	16784 <UnityAssertEqualNumber@@Base>
   1458c:	ldr	r3, [r4, #64]	; 0x40
   14590:	ldr	r2, [r4, #68]	; 0x44
   14594:	adds	r3, r3, #1
   14598:	adc	r2, r2, #0
   1459c:	str	r3, [r4, #64]	; 0x40
   145a0:	str	r2, [r4, #68]	; 0x44
   145a4:	add	r0, sp, #12
   145a8:	bl	1a5b4 <next@@Base>
   145ac:	ldr	r3, [r4, #72]	; 0x48
   145b0:	ldr	r2, [r4, #76]	; 0x4c
   145b4:	adds	r3, r3, #1
   145b8:	adc	r2, r2, #0
   145bc:	str	r3, [r4, #72]	; 0x48
   145c0:	str	r2, [r4, #76]	; 0x4c
   145c4:	ldr	r1, [r0]
   145c8:	str	r5, [sp]
   145cc:	mov	r3, #31
   145d0:	mov	r2, #0
   145d4:	mov	r0, #5
   145d8:	bl	16784 <UnityAssertEqualNumber@@Base>
   145dc:	ldr	r3, [r4, #80]	; 0x50
   145e0:	ldr	r2, [r4, #84]	; 0x54
   145e4:	adds	r3, r3, #1
   145e8:	adc	r2, r2, #0
   145ec:	str	r3, [r4, #80]	; 0x50
   145f0:	str	r2, [r4, #84]	; 0x54
   145f4:	add	r0, sp, #12
   145f8:	bl	1a5b4 <next@@Base>
   145fc:	ldr	r3, [r4, #88]	; 0x58
   14600:	ldr	r2, [r4, #92]	; 0x5c
   14604:	adds	r3, r3, #1
   14608:	adc	r2, r2, #0
   1460c:	str	r3, [r4, #88]	; 0x58
   14610:	str	r2, [r4, #92]	; 0x5c
   14614:	ldr	r1, [r0]
   14618:	str	r5, [sp]
   1461c:	mov	r3, #33	; 0x21
   14620:	mov	r2, #0
   14624:	mov	r0, #7
   14628:	bl	16784 <UnityAssertEqualNumber@@Base>
   1462c:	ldr	r3, [r4, #96]	; 0x60
   14630:	ldr	r2, [r4, #100]	; 0x64
   14634:	adds	r3, r3, #1
   14638:	adc	r2, r2, #0
   1463c:	str	r3, [r4, #96]	; 0x60
   14640:	str	r2, [r4, #100]	; 0x64
   14644:	add	r0, sp, #12
   14648:	bl	1a5b4 <next@@Base>
   1464c:	ldr	r3, [r4, #104]	; 0x68
   14650:	ldr	r2, [r4, #108]	; 0x6c
   14654:	adds	r3, r3, #1
   14658:	adc	r2, r2, #0
   1465c:	str	r3, [r4, #104]	; 0x68
   14660:	str	r2, [r4, #108]	; 0x6c
   14664:	ldr	r1, [r0]
   14668:	str	r5, [sp]
   1466c:	mov	r3, #35	; 0x23
   14670:	mov	r2, #0
   14674:	mov	r0, #1
   14678:	bl	16784 <UnityAssertEqualNumber@@Base>
   1467c:	ldr	r3, [r4, #112]	; 0x70
   14680:	ldr	r2, [r4, #116]	; 0x74
   14684:	adds	r3, r3, #1
   14688:	adc	r2, r2, #0
   1468c:	str	r3, [r4, #112]	; 0x70
   14690:	str	r2, [r4, #116]	; 0x74
   14694:	add	r0, sp, #12
   14698:	bl	1a5b4 <next@@Base>
   1469c:	ldr	r3, [r4, #120]	; 0x78
   146a0:	ldr	r2, [r4, #124]	; 0x7c
   146a4:	adds	r3, r3, #1
   146a8:	adc	r2, r2, #0
   146ac:	str	r3, [r4, #120]	; 0x78
   146b0:	str	r2, [r4, #124]	; 0x7c
   146b4:	ldr	r1, [r0]
   146b8:	str	r5, [sp]
   146bc:	mov	r3, #37	; 0x25
   146c0:	mov	r2, #0
   146c4:	mov	r0, #8
   146c8:	bl	16784 <UnityAssertEqualNumber@@Base>
   146cc:	ldr	r3, [r4, #128]	; 0x80
   146d0:	ldr	r2, [r4, #132]	; 0x84
   146d4:	adds	r3, r3, #1
   146d8:	adc	r2, r2, #0
   146dc:	str	r3, [r4, #128]	; 0x80
   146e0:	str	r2, [r4, #132]	; 0x84
   146e4:	add	r0, sp, #12
   146e8:	bl	1a5b4 <next@@Base>
   146ec:	ldr	r3, [r4, #136]	; 0x88
   146f0:	ldr	r2, [r4, #140]	; 0x8c
   146f4:	adds	r3, r3, #1
   146f8:	adc	r2, r2, #0
   146fc:	str	r3, [r4, #136]	; 0x88
   14700:	str	r2, [r4, #140]	; 0x8c
   14704:	ldr	r1, [r0]
   14708:	str	r5, [sp]
   1470c:	mov	r3, #39	; 0x27
   14710:	mov	r2, #0
   14714:	mov	r0, #6
   14718:	bl	16784 <UnityAssertEqualNumber@@Base>
   1471c:	ldr	r3, [r4, #144]	; 0x90
   14720:	ldr	r2, [r4, #148]	; 0x94
   14724:	adds	r3, r3, #1
   14728:	adc	r2, r2, #0
   1472c:	str	r3, [r4, #144]	; 0x90
   14730:	str	r2, [r4, #148]	; 0x94
   14734:	add	r0, sp, #12
   14738:	bl	1a5b4 <next@@Base>
   1473c:	ldr	r3, [r4, #152]	; 0x98
   14740:	ldr	r2, [r4, #156]	; 0x9c
   14744:	adds	r3, r3, #1
   14748:	adc	r2, r2, #0
   1474c:	str	r3, [r4, #152]	; 0x98
   14750:	str	r2, [r4, #156]	; 0x9c
   14754:	ldr	r1, [r0]
   14758:	str	r5, [sp]
   1475c:	mov	r3, #41	; 0x29
   14760:	mov	r2, #0
   14764:	mov	r0, #9
   14768:	bl	16784 <UnityAssertEqualNumber@@Base>
   1476c:	ldr	r3, [r4, #160]	; 0xa0
   14770:	ldr	r2, [r4, #164]	; 0xa4
   14774:	adds	r3, r3, #1
   14778:	adc	r2, r2, #0
   1477c:	str	r3, [r4, #160]	; 0xa0
   14780:	str	r2, [r4, #164]	; 0xa4
   14784:	add	r0, sp, #12
   14788:	bl	1a3a4 <destroy_lexer@@Base>
   1478c:	ldr	r3, [r4, #168]	; 0xa8
   14790:	ldr	r2, [r4, #172]	; 0xac
   14794:	adds	r3, r3, #1
   14798:	adc	r2, r2, #0
   1479c:	str	r3, [r4, #168]	; 0xa8
   147a0:	str	r2, [r4, #172]	; 0xac
   147a4:	add	sp, sp, #28
   147a8:	ldrd	r4, [sp]
   147ac:	add	sp, sp, #8
   147b0:	pop	{pc}		; (ldr pc, [sp], #4)
   147b4:	andeq	r0, r3, r0, asr #5

000147b8 <push_token_and_call_next@@Base>:
   147b8:	strd	r4, [sp, #-12]!
   147bc:	str	lr, [sp, #8]
   147c0:	sub	sp, sp, #28
   147c4:	ldr	r4, [pc, #248]	; 148c4 <push_token_and_call_next@@Base+0x10c>
   147c8:	ldr	r3, [r4]
   147cc:	ldr	r2, [r4, #4]
   147d0:	adds	r3, r3, #1
   147d4:	adc	r2, r2, #0
   147d8:	str	r3, [r4]
   147dc:	str	r2, [r4, #4]
   147e0:	movw	r1, #56676	; 0xdd64
   147e4:	movt	r1, #1
   147e8:	add	r0, sp, #12
   147ec:	bl	1a338 <init_lexer@@Base>
   147f0:	ldr	r3, [r4, #8]
   147f4:	ldr	r2, [r4, #12]
   147f8:	adds	r3, r3, #1
   147fc:	adc	r2, r2, #0
   14800:	str	r3, [r4, #8]
   14804:	str	r2, [r4, #12]
   14808:	mov	r0, #8
   1480c:	bl	12044 <malloc@plt>
   14810:	mov	r5, r0
   14814:	mov	r1, r0
   14818:	add	r0, sp, #12
   1481c:	bl	1a424 <push_back@@Base>
   14820:	ldr	r3, [r4, #16]
   14824:	ldr	r2, [r4, #20]
   14828:	adds	r3, r3, #1
   1482c:	adc	r2, r2, #0
   14830:	str	r3, [r4, #16]
   14834:	str	r2, [r4, #20]
   14838:	add	r0, sp, #12
   1483c:	bl	1a5b4 <next@@Base>
   14840:	ldr	r3, [r4, #24]
   14844:	ldr	r2, [r4, #28]
   14848:	adds	r3, r3, #1
   1484c:	adc	r2, r2, #0
   14850:	str	r3, [r4, #24]
   14854:	str	r2, [r4, #28]
   14858:	mov	r3, #148	; 0x94
   1485c:	str	r3, [sp]
   14860:	mov	r3, #113	; 0x71
   14864:	mov	r2, #0
   14868:	mov	r1, r0
   1486c:	mov	r0, r5
   14870:	bl	16784 <UnityAssertEqualNumber@@Base>
   14874:	ldr	r3, [r4, #32]
   14878:	ldr	r2, [r4, #36]	; 0x24
   1487c:	adds	r3, r3, #1
   14880:	adc	r2, r2, #0
   14884:	str	r3, [r4, #32]
   14888:	str	r2, [r4, #36]	; 0x24
   1488c:	add	r0, sp, #12
   14890:	bl	1a3a4 <destroy_lexer@@Base>
   14894:	ldr	r3, [r4, #40]	; 0x28
   14898:	ldr	r2, [r4, #44]	; 0x2c
   1489c:	adds	r3, r3, #1
   148a0:	adc	r2, r2, #0
   148a4:	str	r3, [r4, #40]	; 0x28
   148a8:	str	r2, [r4, #44]	; 0x2c
   148ac:	mov	r0, r5
   148b0:	bl	11fe4 <free@plt>
   148b4:	add	sp, sp, #28
   148b8:	ldrd	r4, [sp]
   148bc:	add	sp, sp, #8
   148c0:	pop	{pc}		; (ldr pc, [sp], #4)
   148c4:	andeq	r0, r3, r0, ror r3

000148c8 <push_two_tokens_to_stack@@Base>:
   148c8:	strd	r4, [sp, #-20]!	; 0xffffffec
   148cc:	strd	r6, [sp, #8]
   148d0:	str	lr, [sp, #16]
   148d4:	sub	sp, sp, #28
   148d8:	ldr	r4, [pc, #332]	; 14a2c <push_two_tokens_to_stack@@Base+0x164>
   148dc:	ldr	r3, [r4]
   148e0:	ldr	r2, [r4, #4]
   148e4:	adds	r3, r3, #1
   148e8:	adc	r2, r2, #0
   148ec:	str	r3, [r4]
   148f0:	str	r2, [r4, #4]
   148f4:	movw	r1, #56676	; 0xdd64
   148f8:	movt	r1, #1
   148fc:	add	r0, sp, #12
   14900:	bl	1a338 <init_lexer@@Base>
   14904:	ldr	r3, [r4, #8]
   14908:	ldr	r2, [r4, #12]
   1490c:	adds	r3, r3, #1
   14910:	adc	r2, r2, #0
   14914:	str	r3, [r4, #8]
   14918:	str	r2, [r4, #12]
   1491c:	mov	r0, #8
   14920:	bl	12044 <malloc@plt>
   14924:	mov	r6, r0
   14928:	mov	r0, #8
   1492c:	bl	12044 <malloc@plt>
   14930:	mov	r5, r0
   14934:	mov	r1, r6
   14938:	add	r0, sp, #12
   1493c:	bl	1a424 <push_back@@Base>
   14940:	ldr	r3, [r4, #16]
   14944:	ldr	r2, [r4, #20]
   14948:	adds	r3, r3, #1
   1494c:	adc	r2, r2, #0
   14950:	str	r3, [r4, #16]
   14954:	str	r2, [r4, #20]
   14958:	ldr	r3, [sp, #16]
   1495c:	ldr	r0, [r3, #4]
   14960:	mov	r7, #148	; 0x94
   14964:	str	r7, [sp]
   14968:	mov	r3, #86	; 0x56
   1496c:	mov	r2, #0
   14970:	mov	r1, r6
   14974:	bl	16784 <UnityAssertEqualNumber@@Base>
   14978:	ldr	r3, [r4, #24]
   1497c:	ldr	r2, [r4, #28]
   14980:	adds	r3, r3, #1
   14984:	adc	r2, r2, #0
   14988:	str	r3, [r4, #24]
   1498c:	str	r2, [r4, #28]
   14990:	mov	r1, r5
   14994:	add	r0, sp, #12
   14998:	bl	1a424 <push_back@@Base>
   1499c:	ldr	r3, [r4, #32]
   149a0:	ldr	r2, [r4, #36]	; 0x24
   149a4:	adds	r3, r3, #1
   149a8:	adc	r2, r2, #0
   149ac:	str	r3, [r4, #32]
   149b0:	str	r2, [r4, #36]	; 0x24
   149b4:	ldr	r3, [sp, #16]
   149b8:	ldr	r0, [r3, #4]
   149bc:	str	r7, [sp]
   149c0:	mov	r3, #88	; 0x58
   149c4:	mov	r2, #0
   149c8:	mov	r1, r5
   149cc:	bl	16784 <UnityAssertEqualNumber@@Base>
   149d0:	ldr	r3, [r4, #40]	; 0x28
   149d4:	ldr	r2, [r4, #44]	; 0x2c
   149d8:	adds	r3, r3, #1
   149dc:	adc	r2, r2, #0
   149e0:	str	r3, [r4, #40]	; 0x28
   149e4:	str	r2, [r4, #44]	; 0x2c
   149e8:	add	r0, sp, #12
   149ec:	bl	1a3a4 <destroy_lexer@@Base>
   149f0:	ldr	r3, [r4, #48]	; 0x30
   149f4:	ldr	r2, [r4, #52]	; 0x34
   149f8:	adds	r3, r3, #1
   149fc:	adc	r2, r2, #0
   14a00:	str	r3, [r4, #48]	; 0x30
   14a04:	str	r2, [r4, #52]	; 0x34
   14a08:	mov	r0, r6
   14a0c:	bl	11fe4 <free@plt>
   14a10:	mov	r0, r5
   14a14:	bl	11fe4 <free@plt>
   14a18:	add	sp, sp, #28
   14a1c:	ldrd	r4, [sp]
   14a20:	ldrd	r6, [sp, #8]
   14a24:	add	sp, sp, #16
   14a28:	pop	{pc}		; (ldr pc, [sp], #4)
   14a2c:	andeq	r0, r3, r0, lsr #7

00014a30 <push_token_to_stack@@Base>:
   14a30:	strd	r4, [sp, #-12]!
   14a34:	str	lr, [sp, #8]
   14a38:	sub	sp, sp, #28
   14a3c:	ldr	r4, [pc, #220]	; 14b20 <push_token_to_stack@@Base+0xf0>
   14a40:	ldr	r3, [r4, #-8]
   14a44:	ldr	r2, [r4, #-4]
   14a48:	adds	r3, r3, #1
   14a4c:	adc	r2, r2, #0
   14a50:	str	r3, [r4, #-8]
   14a54:	str	r2, [r4, #-4]
   14a58:	movw	r1, #56676	; 0xdd64
   14a5c:	movt	r1, #1
   14a60:	add	r0, sp, #12
   14a64:	bl	1a338 <init_lexer@@Base>
   14a68:	ldr	r3, [r4]
   14a6c:	ldr	r2, [r4, #4]
   14a70:	adds	r3, r3, #1
   14a74:	adc	r2, r2, #0
   14a78:	str	r3, [r4]
   14a7c:	str	r2, [r4, #4]
   14a80:	mov	r0, #8
   14a84:	bl	12044 <malloc@plt>
   14a88:	mov	r5, r0
   14a8c:	mov	r1, r0
   14a90:	add	r0, sp, #12
   14a94:	bl	1a424 <push_back@@Base>
   14a98:	ldr	r3, [r4, #8]
   14a9c:	ldr	r2, [r4, #12]
   14aa0:	adds	r3, r3, #1
   14aa4:	adc	r2, r2, #0
   14aa8:	str	r3, [r4, #8]
   14aac:	str	r2, [r4, #12]
   14ab0:	ldr	r3, [sp, #16]
   14ab4:	ldr	r0, [r3, #4]
   14ab8:	mov	r3, #148	; 0x94
   14abc:	str	r3, [sp]
   14ac0:	mov	r3, #62	; 0x3e
   14ac4:	mov	r2, #0
   14ac8:	mov	r1, r5
   14acc:	bl	16784 <UnityAssertEqualNumber@@Base>
   14ad0:	ldr	r3, [r4, #16]
   14ad4:	ldr	r2, [r4, #20]
   14ad8:	adds	r3, r3, #1
   14adc:	adc	r2, r2, #0
   14ae0:	str	r3, [r4, #16]
   14ae4:	str	r2, [r4, #20]
   14ae8:	add	r0, sp, #12
   14aec:	bl	1a3a4 <destroy_lexer@@Base>
   14af0:	ldr	r3, [r4, #24]
   14af4:	ldr	r2, [r4, #28]
   14af8:	adds	r3, r3, #1
   14afc:	adc	r2, r2, #0
   14b00:	str	r3, [r4, #24]
   14b04:	str	r2, [r4, #28]
   14b08:	mov	r0, r5
   14b0c:	bl	11fe4 <free@plt>
   14b10:	add	sp, sp, #28
   14b14:	ldrd	r4, [sp]
   14b18:	add	sp, sp, #8
   14b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b20:	andeq	r0, r3, r0, ror #7

00014b24 <main@@Base>:
   14b24:	str	r4, [sp, #-8]!
   14b28:	str	lr, [sp, #4]
   14b2c:	ldr	r4, [pc, #1392]	; 150a4 <main@@Base+0x580>
   14b30:	ldr	r3, [r4]
   14b34:	ldr	r2, [r4, #4]
   14b38:	adds	r3, r3, #1
   14b3c:	adc	r2, r2, #0
   14b40:	str	r3, [r4]
   14b44:	str	r2, [r4, #4]
   14b48:	movw	r0, #56704	; 0xdd80
   14b4c:	movt	r0, #1
   14b50:	bl	19acc <UnityBegin@@Base>
   14b54:	ldr	r3, [r4, #8]
   14b58:	ldr	r2, [r4, #12]
   14b5c:	adds	r3, r3, #1
   14b60:	adc	r2, r2, #0
   14b64:	str	r3, [r4, #8]
   14b68:	str	r2, [r4, #12]
   14b6c:	movw	r2, #629	; 0x275
   14b70:	movw	r1, #56772	; 0xddc4
   14b74:	movt	r1, #1
   14b78:	movw	r0, #17424	; 0x4410
   14b7c:	movt	r0, #1
   14b80:	bl	19924 <UnityDefaultTestRun@@Base>
   14b84:	ldr	r3, [r4, #16]
   14b88:	ldr	r2, [r4, #20]
   14b8c:	adds	r3, r3, #1
   14b90:	adc	r2, r2, #0
   14b94:	str	r3, [r4, #16]
   14b98:	str	r2, [r4, #20]
   14b9c:	movw	r2, #630	; 0x276
   14ba0:	movw	r1, #56796	; 0xdddc
   14ba4:	movt	r1, #1
   14ba8:	movw	r0, #18992	; 0x4a30
   14bac:	movt	r0, #1
   14bb0:	bl	19924 <UnityDefaultTestRun@@Base>
   14bb4:	ldr	r3, [r4, #24]
   14bb8:	ldr	r2, [r4, #28]
   14bbc:	adds	r3, r3, #1
   14bc0:	adc	r2, r2, #0
   14bc4:	str	r3, [r4, #24]
   14bc8:	str	r2, [r4, #28]
   14bcc:	movw	r2, #631	; 0x277
   14bd0:	movw	r1, #56816	; 0xddf0
   14bd4:	movt	r1, #1
   14bd8:	movw	r0, #18632	; 0x48c8
   14bdc:	movt	r0, #1
   14be0:	bl	19924 <UnityDefaultTestRun@@Base>
   14be4:	ldr	r3, [r4, #32]
   14be8:	ldr	r2, [r4, #36]	; 0x24
   14bec:	adds	r3, r3, #1
   14bf0:	adc	r2, r2, #0
   14bf4:	str	r3, [r4, #32]
   14bf8:	str	r2, [r4, #36]	; 0x24
   14bfc:	mov	r2, #632	; 0x278
   14c00:	movw	r1, #56844	; 0xde0c
   14c04:	movt	r1, #1
   14c08:	movw	r0, #18360	; 0x47b8
   14c0c:	movt	r0, #1
   14c10:	bl	19924 <UnityDefaultTestRun@@Base>
   14c14:	ldr	r3, [r4, #40]	; 0x28
   14c18:	ldr	r2, [r4, #44]	; 0x2c
   14c1c:	adds	r3, r3, #1
   14c20:	adc	r2, r2, #0
   14c24:	str	r3, [r4, #40]	; 0x28
   14c28:	str	r2, [r4, #44]	; 0x2c
   14c2c:	movw	r2, #633	; 0x279
   14c30:	movw	r1, #56872	; 0xde28
   14c34:	movt	r1, #1
   14c38:	movw	r0, #15596	; 0x3cec
   14c3c:	movt	r0, #1
   14c40:	bl	19924 <UnityDefaultTestRun@@Base>
   14c44:	ldr	r3, [r4, #48]	; 0x30
   14c48:	ldr	r2, [r4, #52]	; 0x34
   14c4c:	adds	r3, r3, #1
   14c50:	adc	r2, r2, #0
   14c54:	str	r3, [r4, #48]	; 0x30
   14c58:	str	r2, [r4, #52]	; 0x34
   14c5c:	movw	r2, #634	; 0x27a
   14c60:	movw	r1, #56888	; 0xde38
   14c64:	movt	r1, #1
   14c68:	movw	r0, #13288	; 0x33e8
   14c6c:	movt	r0, #1
   14c70:	bl	19924 <UnityDefaultTestRun@@Base>
   14c74:	ldr	r3, [r4, #56]	; 0x38
   14c78:	ldr	r2, [r4, #60]	; 0x3c
   14c7c:	adds	r3, r3, #1
   14c80:	adc	r2, r2, #0
   14c84:	str	r3, [r4, #56]	; 0x38
   14c88:	str	r2, [r4, #60]	; 0x3c
   14c8c:	movw	r2, #635	; 0x27b
   14c90:	movw	r1, #56904	; 0xde48
   14c94:	movt	r1, #1
   14c98:	movw	r0, #13072	; 0x3310
   14c9c:	movt	r0, #1
   14ca0:	bl	19924 <UnityDefaultTestRun@@Base>
   14ca4:	ldr	r3, [r4, #64]	; 0x40
   14ca8:	ldr	r2, [r4, #68]	; 0x44
   14cac:	adds	r3, r3, #1
   14cb0:	adc	r2, r2, #0
   14cb4:	str	r3, [r4, #64]	; 0x40
   14cb8:	str	r2, [r4, #68]	; 0x44
   14cbc:	mov	r2, #636	; 0x27c
   14cc0:	movw	r1, #56924	; 0xde5c
   14cc4:	movt	r1, #1
   14cc8:	movw	r0, #12856	; 0x3238
   14ccc:	movt	r0, #1
   14cd0:	bl	19924 <UnityDefaultTestRun@@Base>
   14cd4:	ldr	r3, [r4, #72]	; 0x48
   14cd8:	ldr	r2, [r4, #76]	; 0x4c
   14cdc:	adds	r3, r3, #1
   14ce0:	adc	r2, r2, #0
   14ce4:	str	r3, [r4, #72]	; 0x48
   14ce8:	str	r2, [r4, #76]	; 0x4c
   14cec:	movw	r2, #637	; 0x27d
   14cf0:	movw	r1, #56948	; 0xde74
   14cf4:	movt	r1, #1
   14cf8:	movw	r0, #12640	; 0x3160
   14cfc:	movt	r0, #1
   14d00:	bl	19924 <UnityDefaultTestRun@@Base>
   14d04:	ldr	r3, [r4, #80]	; 0x50
   14d08:	ldr	r2, [r4, #84]	; 0x54
   14d0c:	adds	r3, r3, #1
   14d10:	adc	r2, r2, #0
   14d14:	str	r3, [r4, #80]	; 0x50
   14d18:	str	r2, [r4, #84]	; 0x54
   14d1c:	movw	r2, #638	; 0x27e
   14d20:	movw	r1, #56968	; 0xde88
   14d24:	movt	r1, #1
   14d28:	movw	r0, #12424	; 0x3088
   14d2c:	movt	r0, #1
   14d30:	bl	19924 <UnityDefaultTestRun@@Base>
   14d34:	ldr	r3, [r4, #88]	; 0x58
   14d38:	ldr	r2, [r4, #92]	; 0x5c
   14d3c:	adds	r3, r3, #1
   14d40:	adc	r2, r2, #0
   14d44:	str	r3, [r4, #88]	; 0x58
   14d48:	str	r2, [r4, #92]	; 0x5c
   14d4c:	movw	r2, #639	; 0x27f
   14d50:	movw	r1, #56984	; 0xde98
   14d54:	movt	r1, #1
   14d58:	movw	r0, #12208	; 0x2fb0
   14d5c:	movt	r0, #1
   14d60:	bl	19924 <UnityDefaultTestRun@@Base>
   14d64:	ldr	r3, [r4, #96]	; 0x60
   14d68:	ldr	r2, [r4, #100]	; 0x64
   14d6c:	adds	r3, r3, #1
   14d70:	adc	r2, r2, #0
   14d74:	str	r3, [r4, #96]	; 0x60
   14d78:	str	r2, [r4, #100]	; 0x64
   14d7c:	mov	r2, #640	; 0x280
   14d80:	movw	r1, #57000	; 0xdea8
   14d84:	movt	r1, #1
   14d88:	movw	r0, #11992	; 0x2ed8
   14d8c:	movt	r0, #1
   14d90:	bl	19924 <UnityDefaultTestRun@@Base>
   14d94:	ldr	r3, [r4, #104]	; 0x68
   14d98:	ldr	r2, [r4, #108]	; 0x6c
   14d9c:	adds	r3, r3, #1
   14da0:	adc	r2, r2, #0
   14da4:	str	r3, [r4, #104]	; 0x68
   14da8:	str	r2, [r4, #108]	; 0x6c
   14dac:	movw	r2, #641	; 0x281
   14db0:	movw	r1, #57016	; 0xdeb8
   14db4:	movt	r1, #1
   14db8:	movw	r0, #11776	; 0x2e00
   14dbc:	movt	r0, #1
   14dc0:	bl	19924 <UnityDefaultTestRun@@Base>
   14dc4:	ldr	r3, [r4, #112]	; 0x70
   14dc8:	ldr	r2, [r4, #116]	; 0x74
   14dcc:	adds	r3, r3, #1
   14dd0:	adc	r2, r2, #0
   14dd4:	str	r3, [r4, #112]	; 0x70
   14dd8:	str	r2, [r4, #116]	; 0x74
   14ddc:	movw	r2, #642	; 0x282
   14de0:	movw	r1, #57032	; 0xdec8
   14de4:	movt	r1, #1
   14de8:	movw	r0, #11560	; 0x2d28
   14dec:	movt	r0, #1
   14df0:	bl	19924 <UnityDefaultTestRun@@Base>
   14df4:	ldr	r3, [r4, #120]	; 0x78
   14df8:	ldr	r2, [r4, #124]	; 0x7c
   14dfc:	adds	r3, r3, #1
   14e00:	adc	r2, r2, #0
   14e04:	str	r3, [r4, #120]	; 0x78
   14e08:	str	r2, [r4, #124]	; 0x7c
   14e0c:	movw	r2, #643	; 0x283
   14e10:	movw	r1, #57052	; 0xdedc
   14e14:	movt	r1, #1
   14e18:	movw	r0, #11344	; 0x2c50
   14e1c:	movt	r0, #1
   14e20:	bl	19924 <UnityDefaultTestRun@@Base>
   14e24:	ldr	r3, [r4, #128]	; 0x80
   14e28:	ldr	r2, [r4, #132]	; 0x84
   14e2c:	adds	r3, r3, #1
   14e30:	adc	r2, r2, #0
   14e34:	str	r3, [r4, #128]	; 0x80
   14e38:	str	r2, [r4, #132]	; 0x84
   14e3c:	mov	r2, #644	; 0x284
   14e40:	movw	r1, #57076	; 0xdef4
   14e44:	movt	r1, #1
   14e48:	movw	r0, #11128	; 0x2b78
   14e4c:	movt	r0, #1
   14e50:	bl	19924 <UnityDefaultTestRun@@Base>
   14e54:	ldr	r3, [r4, #136]	; 0x88
   14e58:	ldr	r2, [r4, #140]	; 0x8c
   14e5c:	adds	r3, r3, #1
   14e60:	adc	r2, r2, #0
   14e64:	str	r3, [r4, #136]	; 0x88
   14e68:	str	r2, [r4, #140]	; 0x8c
   14e6c:	movw	r2, #645	; 0x285
   14e70:	movw	r1, #57092	; 0xdf04
   14e74:	movt	r1, #1
   14e78:	movw	r0, #10912	; 0x2aa0
   14e7c:	movt	r0, #1
   14e80:	bl	19924 <UnityDefaultTestRun@@Base>
   14e84:	ldr	r3, [r4, #144]	; 0x90
   14e88:	ldr	r2, [r4, #148]	; 0x94
   14e8c:	adds	r3, r3, #1
   14e90:	adc	r2, r2, #0
   14e94:	str	r3, [r4, #144]	; 0x90
   14e98:	str	r2, [r4, #148]	; 0x94
   14e9c:	movw	r2, #646	; 0x286
   14ea0:	movw	r1, #57108	; 0xdf14
   14ea4:	movt	r1, #1
   14ea8:	movw	r0, #10696	; 0x29c8
   14eac:	movt	r0, #1
   14eb0:	bl	19924 <UnityDefaultTestRun@@Base>
   14eb4:	ldr	r3, [r4, #152]	; 0x98
   14eb8:	ldr	r2, [r4, #156]	; 0x9c
   14ebc:	adds	r3, r3, #1
   14ec0:	adc	r2, r2, #0
   14ec4:	str	r3, [r4, #152]	; 0x98
   14ec8:	str	r2, [r4, #156]	; 0x9c
   14ecc:	movw	r2, #647	; 0x287
   14ed0:	movw	r1, #57124	; 0xdf24
   14ed4:	movt	r1, #1
   14ed8:	movw	r0, #10480	; 0x28f0
   14edc:	movt	r0, #1
   14ee0:	bl	19924 <UnityDefaultTestRun@@Base>
   14ee4:	ldr	r3, [r4, #160]	; 0xa0
   14ee8:	ldr	r2, [r4, #164]	; 0xa4
   14eec:	adds	r3, r3, #1
   14ef0:	adc	r2, r2, #0
   14ef4:	str	r3, [r4, #160]	; 0xa0
   14ef8:	str	r2, [r4, #164]	; 0xa4
   14efc:	mov	r2, #648	; 0x288
   14f00:	movw	r1, #57148	; 0xdf3c
   14f04:	movt	r1, #1
   14f08:	movw	r0, #10264	; 0x2818
   14f0c:	movt	r0, #1
   14f10:	bl	19924 <UnityDefaultTestRun@@Base>
   14f14:	ldr	r3, [r4, #168]	; 0xa8
   14f18:	ldr	r2, [r4, #172]	; 0xac
   14f1c:	adds	r3, r3, #1
   14f20:	adc	r2, r2, #0
   14f24:	str	r3, [r4, #168]	; 0xa8
   14f28:	str	r2, [r4, #172]	; 0xac
   14f2c:	movw	r2, #649	; 0x289
   14f30:	movw	r1, #57168	; 0xdf50
   14f34:	movt	r1, #1
   14f38:	movw	r0, #10048	; 0x2740
   14f3c:	movt	r0, #1
   14f40:	bl	19924 <UnityDefaultTestRun@@Base>
   14f44:	ldr	r3, [r4, #176]	; 0xb0
   14f48:	ldr	r2, [r4, #180]	; 0xb4
   14f4c:	adds	r3, r3, #1
   14f50:	adc	r2, r2, #0
   14f54:	str	r3, [r4, #176]	; 0xb0
   14f58:	str	r2, [r4, #180]	; 0xb4
   14f5c:	movw	r2, #650	; 0x28a
   14f60:	movw	r1, #57196	; 0xdf6c
   14f64:	movt	r1, #1
   14f68:	movw	r0, #9400	; 0x24b8
   14f6c:	movt	r0, #1
   14f70:	bl	19924 <UnityDefaultTestRun@@Base>
   14f74:	ldr	r3, [r4, #184]	; 0xb8
   14f78:	ldr	r2, [r4, #188]	; 0xbc
   14f7c:	adds	r3, r3, #1
   14f80:	adc	r2, r2, #0
   14f84:	str	r3, [r4, #184]	; 0xb8
   14f88:	str	r2, [r4, #188]	; 0xbc
   14f8c:	movw	r2, #651	; 0x28b
   14f90:	movw	r1, #57224	; 0xdf88
   14f94:	movt	r1, #1
   14f98:	movw	r0, #9832	; 0x2668
   14f9c:	movt	r0, #1
   14fa0:	bl	19924 <UnityDefaultTestRun@@Base>
   14fa4:	ldr	r3, [r4, #192]	; 0xc0
   14fa8:	ldr	r2, [r4, #196]	; 0xc4
   14fac:	adds	r3, r3, #1
   14fb0:	adc	r2, r2, #0
   14fb4:	str	r3, [r4, #192]	; 0xc0
   14fb8:	str	r2, [r4, #196]	; 0xc4
   14fbc:	mov	r2, #652	; 0x28c
   14fc0:	movw	r1, #57240	; 0xdf98
   14fc4:	movt	r1, #1
   14fc8:	movw	r0, #9616	; 0x2590
   14fcc:	movt	r0, #1
   14fd0:	bl	19924 <UnityDefaultTestRun@@Base>
   14fd4:	ldr	r3, [r4, #200]	; 0xc8
   14fd8:	ldr	r2, [r4, #204]	; 0xcc
   14fdc:	adds	r3, r3, #1
   14fe0:	adc	r2, r2, #0
   14fe4:	str	r3, [r4, #200]	; 0xc8
   14fe8:	str	r2, [r4, #204]	; 0xcc
   14fec:	movw	r2, #653	; 0x28d
   14ff0:	movw	r1, #57260	; 0xdfac
   14ff4:	movt	r1, #1
   14ff8:	movw	r0, #9184	; 0x23e0
   14ffc:	movt	r0, #1
   15000:	bl	19924 <UnityDefaultTestRun@@Base>
   15004:	ldr	r3, [r4, #208]	; 0xd0
   15008:	ldr	r2, [r4, #212]	; 0xd4
   1500c:	adds	r3, r3, #1
   15010:	adc	r2, r2, #0
   15014:	str	r3, [r4, #208]	; 0xd0
   15018:	str	r2, [r4, #212]	; 0xd4
   1501c:	movw	r2, #654	; 0x28e
   15020:	movw	r1, #57280	; 0xdfc0
   15024:	movt	r1, #1
   15028:	movw	r0, #8968	; 0x2308
   1502c:	movt	r0, #1
   15030:	bl	19924 <UnityDefaultTestRun@@Base>
   15034:	ldr	r3, [r4, #216]	; 0xd8
   15038:	ldr	r2, [r4, #220]	; 0xdc
   1503c:	adds	r3, r3, #1
   15040:	adc	r2, r2, #0
   15044:	str	r3, [r4, #216]	; 0xd8
   15048:	str	r2, [r4, #220]	; 0xdc
   1504c:	movw	r2, #655	; 0x28f
   15050:	movw	r1, #57304	; 0xdfd8
   15054:	movt	r1, #1
   15058:	movw	r0, #8752	; 0x2230
   1505c:	movt	r0, #1
   15060:	bl	19924 <UnityDefaultTestRun@@Base>
   15064:	ldr	r3, [r4, #224]	; 0xe0
   15068:	ldr	r2, [r4, #228]	; 0xe4
   1506c:	adds	r3, r3, #1
   15070:	adc	r2, r2, #0
   15074:	str	r3, [r4, #224]	; 0xe0
   15078:	str	r2, [r4, #228]	; 0xe4
   1507c:	bl	19b24 <UnityEnd@@Base>
   15080:	ldr	r3, [r4, #232]	; 0xe8
   15084:	ldr	r2, [r4, #236]	; 0xec
   15088:	adds	r3, r3, #1
   1508c:	adc	r2, r2, #0
   15090:	str	r3, [r4, #232]	; 0xe8
   15094:	str	r2, [r4, #236]	; 0xec
   15098:	ldr	r4, [sp]
   1509c:	add	sp, sp, #4
   150a0:	pop	{pc}		; (ldr pc, [sp], #4)
   150a4:	andeq	r0, r3, r0, lsl #8
   150a8:	str	r4, [sp, #-8]!
   150ac:	str	lr, [sp, #4]
   150b0:	movw	r0, #61620	; 0xf0b4
   150b4:	movt	r0, #2
   150b8:	bl	1d8f8 <__gcov_sort_n_vals@@Base+0x4a0>
   150bc:	ldr	r4, [sp]
   150c0:	add	sp, sp, #4
   150c4:	pop	{pc}		; (ldr pc, [sp], #4)
   150c8:	str	r4, [sp, #-8]!
   150cc:	str	lr, [sp, #4]
   150d0:	bl	1d888 <__gcov_sort_n_vals@@Base+0x430>
   150d4:	ldr	r4, [sp]
   150d8:	add	sp, sp, #4
   150dc:	pop	{pc}		; (ldr pc, [sp], #4)

000150e0 <UnityPrintNumber@@Base>:
   150e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   150e4:	strd	r6, [sp, #8]
   150e8:	str	r8, [sp, #16]
   150ec:	str	lr, [sp, #20]
   150f0:	subs	r7, r0, #0
   150f4:	blt	15170 <UnityPrintNumber@@Base+0x90>
   150f8:	movw	r3, #1264	; 0x4f0
   150fc:	movt	r3, #3
   15100:	ldr	r2, [r3, #8]
   15104:	ldr	r1, [r3, #12]
   15108:	adds	r2, r2, #1
   1510c:	adc	r1, r1, #0
   15110:	str	r2, [r3, #8]
   15114:	str	r1, [r3, #12]
   15118:	cmp	r7, #9
   1511c:	bls	15274 <UnityPrintNumber@@Base+0x194>
   15120:	movw	r2, #1264	; 0x4f0
   15124:	movt	r2, #3
   15128:	ldr	r3, [r2, #24]
   1512c:	ldr	r1, [r2, #28]
   15130:	adds	r3, r3, #1
   15134:	adc	r1, r1, #0
   15138:	mov	r4, #10
   1513c:	mov	ip, r3
   15140:	mov	r0, r1
   15144:	udiv	r2, r7, r4
   15148:	cmp	r2, #9
   1514c:	bls	15240 <UnityPrintNumber@@Base+0x160>
   15150:	add	r2, r4, r4, lsl #2
   15154:	lsl	r2, r2, #1
   15158:	adds	r3, r3, #1
   1515c:	adc	r1, r1, #0
   15160:	cmp	r2, r4
   15164:	bls	151c4 <UnityPrintNumber@@Base+0xe4>
   15168:	mov	r4, r2
   1516c:	b	1513c <UnityPrintNumber@@Base+0x5c>
   15170:	movw	r4, #1264	; 0x4f0
   15174:	movt	r4, #3
   15178:	ldr	r3, [r4]
   1517c:	ldr	r2, [r4, #4]
   15180:	adds	r3, r3, #1
   15184:	adc	r2, r2, #0
   15188:	str	r3, [r4]
   1518c:	str	r2, [r4, #4]
   15190:	movw	r3, #64564	; 0xfc34
   15194:	movt	r3, #2
   15198:	ldr	r1, [r3]
   1519c:	mov	r0, #45	; 0x2d
   151a0:	bl	120f8 <putc@plt>
   151a4:	ldr	r3, [r4, #16]
   151a8:	ldr	r2, [r4, #20]
   151ac:	adds	r3, r3, #1
   151b0:	adc	r2, r2, #0
   151b4:	str	r3, [r4, #16]
   151b8:	str	r2, [r4, #20]
   151bc:	rsb	r7, r7, #0
   151c0:	b	15118 <UnityPrintNumber@@Base+0x38>
   151c4:	movw	r3, #1264	; 0x4f0
   151c8:	movt	r3, #3
   151cc:	str	ip, [r3, #24]
   151d0:	str	r0, [r3, #28]
   151d4:	movw	r8, #64564	; 0xfc34
   151d8:	movt	r8, #2
   151dc:	movw	r6, #52429	; 0xcccd
   151e0:	movt	r6, #52428	; 0xcccc
   151e4:	movw	r5, #1264	; 0x4f0
   151e8:	movt	r5, #3
   151ec:	udiv	r0, r7, r4
   151f0:	umull	r2, r3, r6, r0
   151f4:	lsr	r3, r3, #3
   151f8:	add	r3, r3, r3, lsl #2
   151fc:	sub	r0, r0, r3, lsl #1
   15200:	add	r0, r0, #48	; 0x30
   15204:	ldr	r1, [r8]
   15208:	uxtb	r0, r0
   1520c:	bl	120f8 <putc@plt>
   15210:	umull	r2, r3, r6, r4
   15214:	lsr	r2, r3, #3
   15218:	cmp	r4, #9
   1521c:	bls	1527c <UnityPrintNumber@@Base+0x19c>
   15220:	ldr	r3, [r5, #48]	; 0x30
   15224:	ldr	r1, [r5, #52]	; 0x34
   15228:	adds	r3, r3, #1
   1522c:	adc	r1, r1, #0
   15230:	str	r3, [r5, #48]	; 0x30
   15234:	str	r1, [r5, #52]	; 0x34
   15238:	mov	r4, r2
   1523c:	b	151ec <UnityPrintNumber@@Base+0x10c>
   15240:	movw	r3, #1264	; 0x4f0
   15244:	movt	r3, #3
   15248:	str	ip, [r3, #24]
   1524c:	str	r1, [r3, #28]
   15250:	movw	r3, #1264	; 0x4f0
   15254:	movt	r3, #3
   15258:	ldr	r2, [r3, #32]
   1525c:	ldr	r1, [r3, #36]	; 0x24
   15260:	adds	r2, r2, #1
   15264:	adc	r1, r1, #0
   15268:	str	r2, [r3, #32]
   1526c:	str	r1, [r3, #36]	; 0x24
   15270:	b	151d4 <UnityPrintNumber@@Base+0xf4>
   15274:	mov	r4, #1
   15278:	b	15250 <UnityPrintNumber@@Base+0x170>
   1527c:	movw	r3, #1264	; 0x4f0
   15280:	movt	r3, #3
   15284:	ldr	r2, [r3, #40]	; 0x28
   15288:	ldr	r1, [r3, #44]	; 0x2c
   1528c:	adds	r2, r2, #1
   15290:	adc	r1, r1, #0
   15294:	str	r2, [r3, #40]	; 0x28
   15298:	str	r1, [r3, #44]	; 0x2c
   1529c:	ldrd	r4, [sp]
   152a0:	ldrd	r6, [sp, #8]
   152a4:	ldr	r8, [sp, #16]
   152a8:	add	sp, sp, #20
   152ac:	pop	{pc}		; (ldr pc, [sp], #4)

000152b0 <UnityPrintNumberUnsigned@@Base>:
   152b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   152b4:	strd	r6, [sp, #8]
   152b8:	str	r8, [sp, #16]
   152bc:	str	lr, [sp, #20]
   152c0:	mov	r7, r0
   152c4:	movw	r3, #1264	; 0x4f0
   152c8:	movt	r3, #3
   152cc:	ldr	r2, [r3, #56]	; 0x38
   152d0:	ldr	r1, [r3, #60]	; 0x3c
   152d4:	adds	r2, r2, #1
   152d8:	adc	r1, r1, #0
   152dc:	str	r2, [r3, #56]	; 0x38
   152e0:	str	r1, [r3, #60]	; 0x3c
   152e4:	cmp	r0, #9
   152e8:	bls	153e8 <UnityPrintNumberUnsigned@@Base+0x138>
   152ec:	mov	r2, r3
   152f0:	ldr	r3, [r3, #64]	; 0x40
   152f4:	ldr	r1, [r2, #68]	; 0x44
   152f8:	adds	r3, r3, #1
   152fc:	adc	r1, r1, #0
   15300:	mov	r4, #10
   15304:	mov	ip, r3
   15308:	mov	r0, r1
   1530c:	udiv	r2, r7, r4
   15310:	cmp	r2, #9
   15314:	bls	153b4 <UnityPrintNumberUnsigned@@Base+0x104>
   15318:	add	r2, r4, r4, lsl #2
   1531c:	lsl	r2, r2, #1
   15320:	adds	r3, r3, #1
   15324:	adc	r1, r1, #0
   15328:	cmp	r2, r4
   1532c:	bls	15338 <UnityPrintNumberUnsigned@@Base+0x88>
   15330:	mov	r4, r2
   15334:	b	15304 <UnityPrintNumberUnsigned@@Base+0x54>
   15338:	movw	r3, #1264	; 0x4f0
   1533c:	movt	r3, #3
   15340:	str	ip, [r3, #64]	; 0x40
   15344:	str	r0, [r3, #68]	; 0x44
   15348:	movw	r8, #64564	; 0xfc34
   1534c:	movt	r8, #2
   15350:	movw	r6, #52429	; 0xcccd
   15354:	movt	r6, #52428	; 0xcccc
   15358:	movw	r5, #1264	; 0x4f0
   1535c:	movt	r5, #3
   15360:	udiv	r0, r7, r4
   15364:	umull	r2, r3, r6, r0
   15368:	lsr	r3, r3, #3
   1536c:	add	r3, r3, r3, lsl #2
   15370:	sub	r0, r0, r3, lsl #1
   15374:	add	r0, r0, #48	; 0x30
   15378:	ldr	r1, [r8]
   1537c:	uxtb	r0, r0
   15380:	bl	120f8 <putc@plt>
   15384:	umull	r2, r3, r6, r4
   15388:	lsr	r2, r3, #3
   1538c:	cmp	r4, #9
   15390:	bls	153f0 <UnityPrintNumberUnsigned@@Base+0x140>
   15394:	ldr	r3, [r5, #88]	; 0x58
   15398:	ldr	r1, [r5, #92]	; 0x5c
   1539c:	adds	r3, r3, #1
   153a0:	adc	r1, r1, #0
   153a4:	str	r3, [r5, #88]	; 0x58
   153a8:	str	r1, [r5, #92]	; 0x5c
   153ac:	mov	r4, r2
   153b0:	b	15360 <UnityPrintNumberUnsigned@@Base+0xb0>
   153b4:	movw	r3, #1264	; 0x4f0
   153b8:	movt	r3, #3
   153bc:	str	ip, [r3, #64]	; 0x40
   153c0:	str	r1, [r3, #68]	; 0x44
   153c4:	movw	r3, #1264	; 0x4f0
   153c8:	movt	r3, #3
   153cc:	ldr	r2, [r3, #72]	; 0x48
   153d0:	ldr	r1, [r3, #76]	; 0x4c
   153d4:	adds	r2, r2, #1
   153d8:	adc	r1, r1, #0
   153dc:	str	r2, [r3, #72]	; 0x48
   153e0:	str	r1, [r3, #76]	; 0x4c
   153e4:	b	15348 <UnityPrintNumberUnsigned@@Base+0x98>
   153e8:	mov	r4, #1
   153ec:	b	153c4 <UnityPrintNumberUnsigned@@Base+0x114>
   153f0:	movw	r3, #1264	; 0x4f0
   153f4:	movt	r3, #3
   153f8:	ldr	r2, [r3, #80]	; 0x50
   153fc:	ldr	r1, [r3, #84]	; 0x54
   15400:	adds	r2, r2, #1
   15404:	adc	r1, r1, #0
   15408:	str	r2, [r3, #80]	; 0x50
   1540c:	str	r1, [r3, #84]	; 0x54
   15410:	ldrd	r4, [sp]
   15414:	ldrd	r6, [sp, #8]
   15418:	ldr	r8, [sp, #16]
   1541c:	add	sp, sp, #20
   15420:	pop	{pc}		; (ldr pc, [sp], #4)

00015424 <UnityPrintNumberHex@@Base>:
   15424:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15428:	strd	r6, [sp, #8]
   1542c:	str	r8, [sp, #16]
   15430:	str	lr, [sp, #20]
   15434:	mov	r7, r0
   15438:	mov	r5, r1
   1543c:	movw	r4, #1264	; 0x4f0
   15440:	movt	r4, #3
   15444:	ldr	r3, [r4, #96]	; 0x60
   15448:	ldr	r2, [r4, #100]	; 0x64
   1544c:	adds	r3, r3, #1
   15450:	adc	r2, r2, #0
   15454:	str	r3, [r4, #96]	; 0x60
   15458:	str	r2, [r4, #100]	; 0x64
   1545c:	movw	r6, #64564	; 0xfc34
   15460:	movt	r6, #2
   15464:	ldr	r1, [r6]
   15468:	mov	r0, #48	; 0x30
   1546c:	bl	120f8 <putc@plt>
   15470:	ldr	r3, [r4, #104]	; 0x68
   15474:	ldr	r2, [r4, #108]	; 0x6c
   15478:	adds	r3, r3, #1
   1547c:	adc	r2, r2, #0
   15480:	str	r3, [r4, #104]	; 0x68
   15484:	str	r2, [r4, #108]	; 0x6c
   15488:	ldr	r1, [r6]
   1548c:	mov	r0, #120	; 0x78
   15490:	bl	120f8 <putc@plt>
   15494:	ldr	r3, [r4, #112]	; 0x70
   15498:	ldr	r2, [r4, #116]	; 0x74
   1549c:	adds	r3, r3, #1
   154a0:	adc	r2, r2, #0
   154a4:	str	r3, [r4, #112]	; 0x70
   154a8:	str	r2, [r4, #116]	; 0x74
   154ac:	cmp	r5, #0
   154b0:	beq	15554 <UnityPrintNumberHex@@Base+0x130>
   154b4:	sub	r5, r5, #1
   154b8:	uxtb	r5, r5
   154bc:	lsl	r5, r5, #2
   154c0:	movw	r4, #1264	; 0x4f0
   154c4:	movt	r4, #3
   154c8:	movw	r6, #64564	; 0xfc34
   154cc:	movt	r6, #2
   154d0:	b	15504 <UnityPrintNumberHex@@Base+0xe0>
   154d4:	ldr	r3, [r4, #128]	; 0x80
   154d8:	ldr	r2, [r4, #132]	; 0x84
   154dc:	adds	r3, r3, #1
   154e0:	adc	r2, r2, #0
   154e4:	str	r3, [r4, #128]	; 0x80
   154e8:	str	r2, [r4, #132]	; 0x84
   154ec:	ldr	r1, [r6]
   154f0:	add	r0, r0, #55	; 0x37
   154f4:	bl	120f8 <putc@plt>
   154f8:	sub	r5, r5, #4
   154fc:	cmn	r5, #4
   15500:	beq	15554 <UnityPrintNumberHex@@Base+0x130>
   15504:	lsr	r0, r7, r5
   15508:	and	r0, r0, #15
   1550c:	cmp	r0, #9
   15510:	bhi	154d4 <UnityPrintNumberHex@@Base+0xb0>
   15514:	ldr	r3, [r4, #120]	; 0x78
   15518:	ldr	r2, [r4, #124]	; 0x7c
   1551c:	adds	r3, r3, #1
   15520:	adc	r2, r2, #0
   15524:	str	r3, [r4, #120]	; 0x78
   15528:	str	r2, [r4, #124]	; 0x7c
   1552c:	ldr	r1, [r6]
   15530:	add	r0, r0, #48	; 0x30
   15534:	bl	120f8 <putc@plt>
   15538:	ldr	r3, [r4, #136]	; 0x88
   1553c:	ldr	r2, [r4, #140]	; 0x8c
   15540:	adds	r3, r3, #1
   15544:	adc	r2, r2, #0
   15548:	str	r3, [r4, #136]	; 0x88
   1554c:	str	r2, [r4, #140]	; 0x8c
   15550:	b	154f8 <UnityPrintNumberHex@@Base+0xd4>
   15554:	movw	r3, #1264	; 0x4f0
   15558:	movt	r3, #3
   1555c:	ldr	r2, [r3, #144]	; 0x90
   15560:	ldr	r1, [r3, #148]	; 0x94
   15564:	adds	r2, r2, #1
   15568:	adc	r1, r1, #0
   1556c:	str	r2, [r3, #144]	; 0x90
   15570:	str	r1, [r3, #148]	; 0x94
   15574:	ldrd	r4, [sp]
   15578:	ldrd	r6, [sp, #8]
   1557c:	ldr	r8, [sp, #16]
   15580:	add	sp, sp, #20
   15584:	pop	{pc}		; (ldr pc, [sp], #4)

00015588 <UnityPrintNumberByStyle@@Base>:
   15588:	str	r4, [sp, #-8]!
   1558c:	str	lr, [sp, #4]
   15590:	tst	r1, #16
   15594:	bne	15600 <UnityPrintNumberByStyle@@Base+0x78>
   15598:	tst	r1, #32
   1559c:	beq	15640 <UnityPrintNumberByStyle@@Base+0xb8>
   155a0:	movw	r4, #1264	; 0x4f0
   155a4:	movt	r4, #3
   155a8:	ldr	r3, [r4, #168]	; 0xa8
   155ac:	ldr	r2, [r4, #172]	; 0xac
   155b0:	adds	r3, r3, #1
   155b4:	adc	r2, r2, #0
   155b8:	str	r3, [r4, #168]	; 0xa8
   155bc:	str	r2, [r4, #172]	; 0xac
   155c0:	movw	r3, #57420	; 0xe04c
   155c4:	movt	r3, #1
   155c8:	and	r1, r1, #15
   155cc:	sub	r1, r1, #1
   155d0:	ldr	r3, [r3, r1, lsl #2]
   155d4:	and	r0, r0, r3
   155d8:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   155dc:	ldr	r3, [r4, #184]	; 0xb8
   155e0:	ldr	r2, [r4, #188]	; 0xbc
   155e4:	adds	r3, r3, #1
   155e8:	adc	r2, r2, #0
   155ec:	str	r3, [r4, #184]	; 0xb8
   155f0:	str	r2, [r4, #188]	; 0xbc
   155f4:	ldr	r4, [sp]
   155f8:	add	sp, sp, #4
   155fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15600:	movw	r4, #1264	; 0x4f0
   15604:	movt	r4, #3
   15608:	ldr	r3, [r4, #152]	; 0x98
   1560c:	ldr	r2, [r4, #156]	; 0x9c
   15610:	adds	r3, r3, #1
   15614:	adc	r2, r2, #0
   15618:	str	r3, [r4, #152]	; 0x98
   1561c:	str	r2, [r4, #156]	; 0x9c
   15620:	bl	150e0 <UnityPrintNumber@@Base>
   15624:	ldr	r3, [r4, #160]	; 0xa0
   15628:	ldr	r2, [r4, #164]	; 0xa4
   1562c:	adds	r3, r3, #1
   15630:	adc	r2, r2, #0
   15634:	str	r3, [r4, #160]	; 0xa0
   15638:	str	r2, [r4, #164]	; 0xa4
   1563c:	b	155f4 <UnityPrintNumberByStyle@@Base+0x6c>
   15640:	movw	r4, #1264	; 0x4f0
   15644:	movt	r4, #3
   15648:	ldr	r3, [r4, #176]	; 0xb0
   1564c:	ldr	r2, [r4, #180]	; 0xb4
   15650:	adds	r3, r3, #1
   15654:	adc	r2, r2, #0
   15658:	str	r3, [r4, #176]	; 0xb0
   1565c:	str	r2, [r4, #180]	; 0xb4
   15660:	lsl	r1, r1, #1
   15664:	and	r1, r1, #30
   15668:	bl	15424 <UnityPrintNumberHex@@Base>
   1566c:	ldr	r3, [r4, #192]	; 0xc0
   15670:	ldr	r2, [r4, #196]	; 0xc4
   15674:	adds	r3, r3, #1
   15678:	adc	r2, r2, #0
   1567c:	str	r3, [r4, #192]	; 0xc0
   15680:	str	r2, [r4, #196]	; 0xc4
   15684:	b	155f4 <UnityPrintNumberByStyle@@Base+0x6c>

00015688 <UnityPrintLen@@Base>:
   15688:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1568c:	strd	r6, [sp, #8]
   15690:	strd	r8, [sp, #16]
   15694:	str	sl, [sp, #24]
   15698:	str	lr, [sp, #28]
   1569c:	subs	r8, r0, #0
   156a0:	beq	156f4 <UnityPrintLen@@Base+0x6c>
   156a4:	movw	r3, #1264	; 0x4f0
   156a8:	movt	r3, #3
   156ac:	ldr	r2, [r3, #200]	; 0xc8
   156b0:	ldr	ip, [r3, #204]	; 0xcc
   156b4:	adds	r2, r2, #1
   156b8:	adc	ip, ip, #0
   156bc:	str	r2, [r3, #200]	; 0xc8
   156c0:	str	ip, [r3, #204]	; 0xcc
   156c4:	ldrb	r0, [r8]
   156c8:	cmp	r0, #0
   156cc:	beq	1589c <UnityPrintLen@@Base+0x214>
   156d0:	cmp	r1, #0
   156d4:	beq	158d0 <UnityPrintLen@@Base+0x248>
   156d8:	mov	r9, r1
   156dc:	mov	r5, r8
   156e0:	mov	r4, r3
   156e4:	add	r6, r3, #272	; 0x110
   156e8:	movw	r7, #64564	; 0xfc34
   156ec:	movt	r7, #2
   156f0:	b	15818 <UnityPrintLen@@Base+0x190>
   156f4:	movw	r3, #1264	; 0x4f0
   156f8:	movt	r3, #3
   156fc:	ldr	r2, [r3, #208]	; 0xd0
   15700:	ldr	r1, [r3, #212]	; 0xd4
   15704:	adds	r2, r2, #1
   15708:	adc	r1, r1, #0
   1570c:	str	r2, [r3, #208]	; 0xd0
   15710:	str	r1, [r3, #212]	; 0xd4
   15714:	b	158b8 <UnityPrintLen@@Base+0x230>
   15718:	ldr	r3, [r4, #216]	; 0xd8
   1571c:	ldr	r2, [r4, #220]	; 0xdc
   15720:	adds	r3, r3, #1
   15724:	adc	r2, r2, #0
   15728:	str	r3, [r4, #216]	; 0xd8
   1572c:	str	r2, [r4, #220]	; 0xdc
   15730:	ldr	r1, [r7]
   15734:	bl	120f8 <putc@plt>
   15738:	ldr	r3, [r4, #224]	; 0xe0
   1573c:	ldr	r2, [r4, #228]	; 0xe4
   15740:	adds	r3, r3, #1
   15744:	adc	r2, r2, #0
   15748:	str	r3, [r4, #224]	; 0xe0
   1574c:	str	r2, [r4, #228]	; 0xe4
   15750:	b	15800 <UnityPrintLen@@Base+0x178>
   15754:	ldr	r3, [r4, #232]	; 0xe8
   15758:	ldr	r2, [r4, #236]	; 0xec
   1575c:	adds	r3, r3, #1
   15760:	adc	r2, r2, #0
   15764:	str	r3, [r4, #232]	; 0xe8
   15768:	str	r2, [r4, #236]	; 0xec
   1576c:	ldr	r1, [r7]
   15770:	mov	r0, #92	; 0x5c
   15774:	bl	120f8 <putc@plt>
   15778:	ldr	r3, [r4, #240]	; 0xf0
   1577c:	ldr	r2, [r4, #244]	; 0xf4
   15780:	adds	r3, r3, #1
   15784:	adc	r2, r2, #0
   15788:	str	r3, [r4, #240]	; 0xf0
   1578c:	str	r2, [r4, #244]	; 0xf4
   15790:	ldr	r1, [r7]
   15794:	mov	r0, #114	; 0x72
   15798:	bl	120f8 <putc@plt>
   1579c:	ldr	r3, [r4, #248]	; 0xf8
   157a0:	ldr	r2, [r4, #252]	; 0xfc
   157a4:	adds	r3, r3, #1
   157a8:	adc	r2, r2, #0
   157ac:	str	r3, [r4, #248]	; 0xf8
   157b0:	str	r2, [r4, #252]	; 0xfc
   157b4:	b	15800 <UnityPrintLen@@Base+0x178>
   157b8:	ldr	r3, [r6, #-8]
   157bc:	ldr	r2, [r6, #-4]
   157c0:	adds	r3, r3, #1
   157c4:	adc	r2, r2, #0
   157c8:	str	r3, [r6, #-8]
   157cc:	str	r2, [r6, #-4]
   157d0:	ldr	r1, [r7]
   157d4:	mov	r0, #92	; 0x5c
   157d8:	bl	120f8 <putc@plt>
   157dc:	ldr	r3, [r4, #288]	; 0x120
   157e0:	ldr	r1, [r4, #292]	; 0x124
   157e4:	adds	r3, r3, #1
   157e8:	adc	r1, r1, #0
   157ec:	str	r3, [r4, #288]	; 0x120
   157f0:	str	r1, [r4, #292]	; 0x124
   157f4:	mov	r1, #2
   157f8:	ldrb	r0, [r5]
   157fc:	bl	15424 <UnityPrintNumberHex@@Base>
   15800:	ldrb	r0, [r5, #1]!
   15804:	cmp	r0, #0
   15808:	beq	1589c <UnityPrintLen@@Base+0x214>
   1580c:	sub	r3, r5, r8
   15810:	cmp	r3, r9
   15814:	bcs	158d0 <UnityPrintLen@@Base+0x248>
   15818:	sub	r3, r0, #32
   1581c:	uxtb	r3, r3
   15820:	cmp	r3, #94	; 0x5e
   15824:	bls	15718 <UnityPrintLen@@Base+0x90>
   15828:	cmp	r0, #13
   1582c:	beq	15754 <UnityPrintLen@@Base+0xcc>
   15830:	cmp	r0, #10
   15834:	bne	157b8 <UnityPrintLen@@Base+0x130>
   15838:	ldr	r3, [r4, #256]	; 0x100
   1583c:	ldr	r1, [r4, #260]	; 0x104
   15840:	adds	r3, r3, #1
   15844:	adc	r1, r1, #0
   15848:	str	r3, [r4, #256]	; 0x100
   1584c:	str	r1, [r4, #260]	; 0x104
   15850:	ldr	r1, [r7]
   15854:	mov	r0, #92	; 0x5c
   15858:	bl	120f8 <putc@plt>
   1585c:	ldr	r3, [r6]
   15860:	ldr	r2, [r6, #4]
   15864:	adds	r3, r3, #1
   15868:	adc	r2, r2, #0
   1586c:	str	r3, [r6]
   15870:	str	r2, [r6, #4]
   15874:	ldr	r1, [r7]
   15878:	mov	r0, #110	; 0x6e
   1587c:	bl	120f8 <putc@plt>
   15880:	ldr	r3, [r4, #280]	; 0x118
   15884:	ldr	r1, [r4, #284]	; 0x11c
   15888:	adds	r3, r3, #1
   1588c:	adc	r1, r1, #0
   15890:	str	r3, [r4, #280]	; 0x118
   15894:	str	r1, [r4, #284]	; 0x11c
   15898:	b	15800 <UnityPrintLen@@Base+0x178>
   1589c:	ldr	r2, [pc, #76]	; 158f0 <UnityPrintLen@@Base+0x268>
   158a0:	ldr	r3, [r2, #-8]
   158a4:	ldr	r1, [r2, #-4]
   158a8:	adds	r3, r3, #1
   158ac:	adc	r1, r1, #0
   158b0:	str	r3, [r2, #-8]
   158b4:	str	r1, [r2, #-4]
   158b8:	ldrd	r4, [sp]
   158bc:	ldrd	r6, [sp, #8]
   158c0:	ldrd	r8, [sp, #16]
   158c4:	ldr	sl, [sp, #24]
   158c8:	add	sp, sp, #28
   158cc:	pop	{pc}		; (ldr pc, [sp], #4)
   158d0:	ldr	r2, [pc, #24]	; 158f0 <UnityPrintLen@@Base+0x268>
   158d4:	ldr	r3, [r2]
   158d8:	ldr	r1, [r2, #4]
   158dc:	adds	r3, r3, #1
   158e0:	adc	r1, r1, #0
   158e4:	str	r3, [r2]
   158e8:	str	r1, [r2, #4]
   158ec:	b	158b8 <UnityPrintLen@@Base+0x230>
   158f0:	andeq	r0, r3, r0, lsr #12

000158f4 <UnityPrint@@Base>:
   158f4:	strd	r4, [sp, #-16]!
   158f8:	str	r6, [sp, #8]
   158fc:	str	lr, [sp, #12]
   15900:	subs	r5, r0, #0
   15904:	beq	15940 <UnityPrint@@Base+0x4c>
   15908:	ldr	r2, [pc, #500]	; 15b04 <UnityPrint@@Base+0x210>
   1590c:	ldr	r3, [r2, #-8]
   15910:	ldr	r1, [r2, #-4]
   15914:	adds	r3, r3, #1
   15918:	adc	r1, r1, #0
   1591c:	str	r3, [r2, #-8]
   15920:	str	r1, [r2, #-4]
   15924:	ldrb	r0, [r5]
   15928:	cmp	r0, #0
   1592c:	beq	15ad8 <UnityPrint@@Base+0x1e4>
   15930:	mov	r4, r2
   15934:	movw	r6, #64564	; 0xfc34
   15938:	movt	r6, #2
   1593c:	b	15a54 <UnityPrint@@Base+0x160>
   15940:	ldr	r2, [pc, #444]	; 15b04 <UnityPrint@@Base+0x210>
   15944:	ldr	r3, [r2]
   15948:	ldr	r1, [r2, #4]
   1594c:	adds	r3, r3, #1
   15950:	adc	r1, r1, #0
   15954:	str	r3, [r2]
   15958:	str	r1, [r2, #4]
   1595c:	b	15af4 <UnityPrint@@Base+0x200>
   15960:	ldr	r3, [r4, #8]
   15964:	ldr	r2, [r4, #12]
   15968:	adds	r3, r3, #1
   1596c:	adc	r2, r2, #0
   15970:	str	r3, [r4, #8]
   15974:	str	r2, [r4, #12]
   15978:	ldr	r1, [r6]
   1597c:	bl	120f8 <putc@plt>
   15980:	ldr	r3, [r4, #16]
   15984:	ldr	r2, [r4, #20]
   15988:	adds	r3, r3, #1
   1598c:	adc	r2, r2, #0
   15990:	str	r3, [r4, #16]
   15994:	str	r2, [r4, #20]
   15998:	b	15a48 <UnityPrint@@Base+0x154>
   1599c:	ldr	r3, [r4, #24]
   159a0:	ldr	r2, [r4, #28]
   159a4:	adds	r3, r3, #1
   159a8:	adc	r2, r2, #0
   159ac:	str	r3, [r4, #24]
   159b0:	str	r2, [r4, #28]
   159b4:	ldr	r1, [r6]
   159b8:	mov	r0, #92	; 0x5c
   159bc:	bl	120f8 <putc@plt>
   159c0:	ldr	r3, [r4, #32]
   159c4:	ldr	r2, [r4, #36]	; 0x24
   159c8:	adds	r3, r3, #1
   159cc:	adc	r2, r2, #0
   159d0:	str	r3, [r4, #32]
   159d4:	str	r2, [r4, #36]	; 0x24
   159d8:	ldr	r1, [r6]
   159dc:	mov	r0, #114	; 0x72
   159e0:	bl	120f8 <putc@plt>
   159e4:	ldr	r3, [r4, #40]	; 0x28
   159e8:	ldr	r2, [r4, #44]	; 0x2c
   159ec:	adds	r3, r3, #1
   159f0:	adc	r2, r2, #0
   159f4:	str	r3, [r4, #40]	; 0x28
   159f8:	str	r2, [r4, #44]	; 0x2c
   159fc:	b	15a48 <UnityPrint@@Base+0x154>
   15a00:	ldr	r3, [r4, #56]	; 0x38
   15a04:	ldr	r2, [r4, #60]	; 0x3c
   15a08:	adds	r3, r3, #1
   15a0c:	adc	r2, r2, #0
   15a10:	str	r3, [r4, #56]	; 0x38
   15a14:	str	r2, [r4, #60]	; 0x3c
   15a18:	ldr	r1, [r6]
   15a1c:	mov	r0, #92	; 0x5c
   15a20:	bl	120f8 <putc@plt>
   15a24:	ldr	r3, [r4, #80]	; 0x50
   15a28:	ldr	r2, [r4, #84]	; 0x54
   15a2c:	adds	r3, r3, #1
   15a30:	adc	r2, r2, #0
   15a34:	str	r3, [r4, #80]	; 0x50
   15a38:	str	r2, [r4, #84]	; 0x54
   15a3c:	mov	r1, #2
   15a40:	ldrb	r0, [r5]
   15a44:	bl	15424 <UnityPrintNumberHex@@Base>
   15a48:	ldrb	r0, [r5, #1]!
   15a4c:	cmp	r0, #0
   15a50:	beq	15ad8 <UnityPrint@@Base+0x1e4>
   15a54:	sub	r3, r0, #32
   15a58:	uxtb	r3, r3
   15a5c:	cmp	r3, #94	; 0x5e
   15a60:	bls	15960 <UnityPrint@@Base+0x6c>
   15a64:	cmp	r0, #13
   15a68:	beq	1599c <UnityPrint@@Base+0xa8>
   15a6c:	cmp	r0, #10
   15a70:	bne	15a00 <UnityPrint@@Base+0x10c>
   15a74:	ldr	r3, [r4, #48]	; 0x30
   15a78:	ldr	r2, [r4, #52]	; 0x34
   15a7c:	adds	r3, r3, #1
   15a80:	adc	r2, r2, #0
   15a84:	str	r3, [r4, #48]	; 0x30
   15a88:	str	r2, [r4, #52]	; 0x34
   15a8c:	ldr	r1, [r6]
   15a90:	mov	r0, #92	; 0x5c
   15a94:	bl	120f8 <putc@plt>
   15a98:	ldr	r3, [r4, #64]	; 0x40
   15a9c:	ldr	r2, [r4, #68]	; 0x44
   15aa0:	adds	r3, r3, #1
   15aa4:	adc	r2, r2, #0
   15aa8:	str	r3, [r4, #64]	; 0x40
   15aac:	str	r2, [r4, #68]	; 0x44
   15ab0:	ldr	r1, [r6]
   15ab4:	mov	r0, #110	; 0x6e
   15ab8:	bl	120f8 <putc@plt>
   15abc:	ldr	r3, [r4, #72]	; 0x48
   15ac0:	ldr	r2, [r4, #76]	; 0x4c
   15ac4:	adds	r3, r3, #1
   15ac8:	adc	r2, r2, #0
   15acc:	str	r3, [r4, #72]	; 0x48
   15ad0:	str	r2, [r4, #76]	; 0x4c
   15ad4:	b	15a48 <UnityPrint@@Base+0x154>
   15ad8:	ldr	r2, [pc, #36]	; 15b04 <UnityPrint@@Base+0x210>
   15adc:	ldr	r3, [r2, #88]	; 0x58
   15ae0:	ldr	r1, [r2, #92]	; 0x5c
   15ae4:	adds	r3, r3, #1
   15ae8:	adc	r1, r1, #0
   15aec:	str	r3, [r2, #88]	; 0x58
   15af0:	str	r1, [r2, #92]	; 0x5c
   15af4:	ldrd	r4, [sp]
   15af8:	ldr	r6, [sp, #8]
   15afc:	add	sp, sp, #12
   15b00:	pop	{pc}		; (ldr pc, [sp], #4)
   15b04:	andeq	r0, r3, r0, lsr r6
   15b08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15b0c:	strd	r6, [sp, #8]
   15b10:	str	r8, [sp, #16]
   15b14:	str	lr, [sp, #20]
   15b18:	mov	r6, r0
   15b1c:	mov	r5, r1
   15b20:	ldr	r2, [pc, #480]	; 15d08 <UnityPrint@@Base+0x414>
   15b24:	ldr	r3, [r2]
   15b28:	ldr	r1, [r2, #4]
   15b2c:	adds	r3, r3, #1
   15b30:	adc	r1, r1, #0
   15b34:	str	r3, [r2]
   15b38:	str	r1, [r2, #4]
   15b3c:	ldr	r0, [pc, #456]	; 15d0c <UnityPrint@@Base+0x418>
   15b40:	bl	158f4 <UnityPrint@@Base>
   15b44:	cmp	r6, #0
   15b48:	beq	15c88 <UnityPrint@@Base+0x394>
   15b4c:	ldr	r4, [pc, #436]	; 15d08 <UnityPrint@@Base+0x414>
   15b50:	ldr	r3, [r4, #8]
   15b54:	ldr	r2, [r4, #12]
   15b58:	adds	r3, r3, #1
   15b5c:	adc	r2, r2, #0
   15b60:	str	r3, [r4, #8]
   15b64:	str	r2, [r4, #12]
   15b68:	movw	r7, #64564	; 0xfc34
   15b6c:	movt	r7, #2
   15b70:	ldr	r1, [r7]
   15b74:	mov	r0, #39	; 0x27
   15b78:	bl	120f8 <putc@plt>
   15b7c:	ldr	r3, [r4, #24]
   15b80:	ldr	r2, [r4, #28]
   15b84:	adds	r3, r3, #1
   15b88:	adc	r2, r2, #0
   15b8c:	str	r3, [r4, #24]
   15b90:	str	r2, [r4, #28]
   15b94:	mov	r0, r6
   15b98:	bl	158f4 <UnityPrint@@Base>
   15b9c:	ldr	r3, [r4, #32]
   15ba0:	ldr	r2, [r4, #36]	; 0x24
   15ba4:	adds	r3, r3, #1
   15ba8:	adc	r2, r2, #0
   15bac:	str	r3, [r4, #32]
   15bb0:	str	r2, [r4, #36]	; 0x24
   15bb4:	ldr	r1, [r7]
   15bb8:	mov	r0, #39	; 0x27
   15bbc:	bl	120f8 <putc@plt>
   15bc0:	ldr	r3, [r4, #40]	; 0x28
   15bc4:	ldr	r2, [r4, #44]	; 0x2c
   15bc8:	adds	r3, r3, #1
   15bcc:	adc	r2, r2, #0
   15bd0:	str	r3, [r4, #40]	; 0x28
   15bd4:	str	r2, [r4, #44]	; 0x2c
   15bd8:	ldr	r0, [pc, #304]	; 15d10 <UnityPrint@@Base+0x41c>
   15bdc:	bl	158f4 <UnityPrint@@Base>
   15be0:	cmp	r5, #0
   15be4:	beq	15cc8 <UnityPrint@@Base+0x3d4>
   15be8:	ldr	r4, [pc, #280]	; 15d08 <UnityPrint@@Base+0x414>
   15bec:	ldr	r3, [r4, #56]	; 0x38
   15bf0:	ldr	r2, [r4, #60]	; 0x3c
   15bf4:	adds	r3, r3, #1
   15bf8:	adc	r2, r2, #0
   15bfc:	str	r3, [r4, #56]	; 0x38
   15c00:	str	r2, [r4, #60]	; 0x3c
   15c04:	movw	r6, #64564	; 0xfc34
   15c08:	movt	r6, #2
   15c0c:	ldr	r1, [r6]
   15c10:	mov	r0, #39	; 0x27
   15c14:	bl	120f8 <putc@plt>
   15c18:	ldr	r3, [r4, #72]	; 0x48
   15c1c:	ldr	r2, [r4, #76]	; 0x4c
   15c20:	adds	r3, r3, #1
   15c24:	adc	r2, r2, #0
   15c28:	str	r3, [r4, #72]	; 0x48
   15c2c:	str	r2, [r4, #76]	; 0x4c
   15c30:	mov	r0, r5
   15c34:	bl	158f4 <UnityPrint@@Base>
   15c38:	ldr	r3, [r4, #80]	; 0x50
   15c3c:	ldr	r2, [r4, #84]	; 0x54
   15c40:	adds	r3, r3, #1
   15c44:	adc	r2, r2, #0
   15c48:	str	r3, [r4, #80]	; 0x50
   15c4c:	str	r2, [r4, #84]	; 0x54
   15c50:	ldr	r1, [r6]
   15c54:	mov	r0, #39	; 0x27
   15c58:	bl	120f8 <putc@plt>
   15c5c:	ldr	r3, [r4, #88]	; 0x58
   15c60:	ldr	r2, [r4, #92]	; 0x5c
   15c64:	adds	r3, r3, #1
   15c68:	adc	r2, r2, #0
   15c6c:	str	r3, [r4, #88]	; 0x58
   15c70:	str	r2, [r4, #92]	; 0x5c
   15c74:	ldrd	r4, [sp]
   15c78:	ldrd	r6, [sp, #8]
   15c7c:	ldr	r8, [sp, #16]
   15c80:	add	sp, sp, #20
   15c84:	pop	{pc}		; (ldr pc, [sp], #4)
   15c88:	ldr	r4, [pc, #120]	; 15d08 <UnityPrint@@Base+0x414>
   15c8c:	ldr	r3, [r4, #16]
   15c90:	ldr	r2, [r4, #20]
   15c94:	adds	r3, r3, #1
   15c98:	adc	r2, r2, #0
   15c9c:	str	r3, [r4, #16]
   15ca0:	str	r2, [r4, #20]
   15ca4:	ldr	r0, [pc, #104]	; 15d14 <UnityPrint@@Base+0x420>
   15ca8:	bl	158f4 <UnityPrint@@Base>
   15cac:	ldr	r3, [r4, #48]	; 0x30
   15cb0:	ldr	r2, [r4, #52]	; 0x34
   15cb4:	adds	r3, r3, #1
   15cb8:	adc	r2, r2, #0
   15cbc:	str	r3, [r4, #48]	; 0x30
   15cc0:	str	r2, [r4, #52]	; 0x34
   15cc4:	b	15bd8 <UnityPrint@@Base+0x2e4>
   15cc8:	ldr	r4, [pc, #56]	; 15d08 <UnityPrint@@Base+0x414>
   15ccc:	ldr	r3, [r4, #64]	; 0x40
   15cd0:	ldr	r2, [r4, #68]	; 0x44
   15cd4:	adds	r3, r3, #1
   15cd8:	adc	r2, r2, #0
   15cdc:	str	r3, [r4, #64]	; 0x40
   15ce0:	str	r2, [r4, #68]	; 0x44
   15ce4:	ldr	r0, [pc, #40]	; 15d14 <UnityPrint@@Base+0x420>
   15ce8:	bl	158f4 <UnityPrint@@Base>
   15cec:	ldr	r3, [r4, #96]	; 0x60
   15cf0:	ldr	r2, [r4, #100]	; 0x64
   15cf4:	adds	r3, r3, #1
   15cf8:	adc	r2, r2, #0
   15cfc:	str	r3, [r4, #96]	; 0x60
   15d00:	str	r2, [r4, #100]	; 0x64
   15d04:	b	15c74 <UnityPrint@@Base+0x380>
   15d08:	muleq	r3, r0, r6
   15d0c:	andeq	lr, r1, r8, rrx
   15d10:	andeq	lr, r1, ip, ror r0
   15d14:	andeq	lr, r1, r4, ror r0
   15d18:	strd	r4, [sp, #-16]!
   15d1c:	str	r6, [sp, #8]
   15d20:	str	lr, [sp, #12]
   15d24:	subs	r4, r0, #0
   15d28:	beq	15e78 <UnityPrint@@Base+0x584>
   15d2c:	ldr	r2, [pc, #420]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15d30:	ldr	r3, [r2, #-8]
   15d34:	ldr	r1, [r2, #-4]
   15d38:	adds	r3, r3, #1
   15d3c:	adc	r1, r1, #0
   15d40:	str	r3, [r2, #-8]
   15d44:	str	r1, [r2, #-4]
   15d48:	ldr	r0, [pc, #396]	; 15edc <UnityPrint@@Base+0x5e8>
   15d4c:	bl	158f4 <UnityPrint@@Base>
   15d50:	movw	r3, #5400	; 0x1518
   15d54:	movt	r3, #3
   15d58:	ldr	r3, [r3, #8]
   15d5c:	cmp	r3, #0
   15d60:	beq	15e98 <UnityPrint@@Base+0x5a4>
   15d64:	ldr	r5, [pc, #364]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15d68:	ldr	r3, [r5, #8]
   15d6c:	ldr	r2, [r5, #12]
   15d70:	adds	r3, r3, #1
   15d74:	adc	r2, r2, #0
   15d78:	str	r3, [r5, #8]
   15d7c:	str	r2, [r5, #12]
   15d80:	ldr	r0, [pc, #344]	; 15ee0 <UnityPrint@@Base+0x5ec>
   15d84:	bl	158f4 <UnityPrint@@Base>
   15d88:	ldr	r3, [r5, #24]
   15d8c:	ldr	r2, [r5, #28]
   15d90:	adds	r3, r3, #1
   15d94:	adc	r2, r2, #0
   15d98:	str	r3, [r5, #24]
   15d9c:	str	r2, [r5, #28]
   15da0:	movw	r5, #5400	; 0x1518
   15da4:	movt	r5, #3
   15da8:	ldr	r0, [r5, #8]
   15dac:	bl	158f4 <UnityPrint@@Base>
   15db0:	ldr	r3, [r5, #12]
   15db4:	cmp	r3, #0
   15db8:	beq	15eb8 <UnityPrint@@Base+0x5c4>
   15dbc:	ldr	r5, [pc, #276]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15dc0:	ldr	r3, [r5, #32]
   15dc4:	ldr	r2, [r5, #36]	; 0x24
   15dc8:	adds	r3, r3, #1
   15dcc:	adc	r2, r2, #0
   15dd0:	str	r3, [r5, #32]
   15dd4:	str	r2, [r5, #36]	; 0x24
   15dd8:	ldr	r0, [pc, #260]	; 15ee4 <UnityPrint@@Base+0x5f0>
   15ddc:	bl	158f4 <UnityPrint@@Base>
   15de0:	ldr	r3, [r5, #48]	; 0x30
   15de4:	ldr	r2, [r5, #52]	; 0x34
   15de8:	adds	r3, r3, #1
   15dec:	adc	r2, r2, #0
   15df0:	str	r3, [r5, #48]	; 0x30
   15df4:	str	r2, [r5, #52]	; 0x34
   15df8:	movw	r3, #5400	; 0x1518
   15dfc:	movt	r3, #3
   15e00:	ldr	r0, [r3, #12]
   15e04:	bl	158f4 <UnityPrint@@Base>
   15e08:	ldr	r3, [r5, #56]	; 0x38
   15e0c:	ldr	r2, [r5, #60]	; 0x3c
   15e10:	adds	r3, r3, #1
   15e14:	adc	r2, r2, #0
   15e18:	str	r3, [r5, #56]	; 0x38
   15e1c:	str	r2, [r5, #60]	; 0x3c
   15e20:	ldr	r0, [pc, #180]	; 15edc <UnityPrint@@Base+0x5e8>
   15e24:	bl	158f4 <UnityPrint@@Base>
   15e28:	ldr	r2, [pc, #168]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15e2c:	ldr	r3, [r2, #64]	; 0x40
   15e30:	ldr	r1, [r2, #68]	; 0x44
   15e34:	adds	r3, r3, #1
   15e38:	adc	r1, r1, #0
   15e3c:	str	r3, [r2, #64]	; 0x40
   15e40:	str	r1, [r2, #68]	; 0x44
   15e44:	mov	r0, r4
   15e48:	bl	158f4 <UnityPrint@@Base>
   15e4c:	ldr	r2, [pc, #132]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15e50:	ldr	r3, [r2, #72]	; 0x48
   15e54:	ldr	r1, [r2, #76]	; 0x4c
   15e58:	adds	r3, r3, #1
   15e5c:	adc	r1, r1, #0
   15e60:	str	r3, [r2, #72]	; 0x48
   15e64:	str	r1, [r2, #76]	; 0x4c
   15e68:	ldrd	r4, [sp]
   15e6c:	ldr	r6, [sp, #8]
   15e70:	add	sp, sp, #12
   15e74:	pop	{pc}		; (ldr pc, [sp], #4)
   15e78:	ldr	r2, [pc, #88]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15e7c:	ldr	r3, [r2]
   15e80:	ldr	r1, [r2, #4]
   15e84:	adds	r3, r3, #1
   15e88:	adc	r1, r1, #0
   15e8c:	str	r3, [r2]
   15e90:	str	r1, [r2, #4]
   15e94:	b	15e68 <UnityPrint@@Base+0x574>
   15e98:	ldr	r2, [pc, #56]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15e9c:	ldr	r3, [r2, #16]
   15ea0:	ldr	r1, [r2, #20]
   15ea4:	adds	r3, r3, #1
   15ea8:	adc	r1, r1, #0
   15eac:	str	r3, [r2, #16]
   15eb0:	str	r1, [r2, #20]
   15eb4:	b	15e44 <UnityPrint@@Base+0x550>
   15eb8:	ldr	r2, [pc, #24]	; 15ed8 <UnityPrint@@Base+0x5e4>
   15ebc:	ldr	r3, [r2, #40]	; 0x28
   15ec0:	ldr	r1, [r2, #44]	; 0x2c
   15ec4:	adds	r3, r3, #1
   15ec8:	adc	r1, r1, #0
   15ecc:	str	r3, [r2, #40]	; 0x28
   15ed0:	str	r1, [r2, #44]	; 0x2c
   15ed4:	b	15e20 <UnityPrint@@Base+0x52c>
   15ed8:	andeq	r0, r3, r0, lsl #14
   15edc:	andeq	lr, r1, r4, lsl #1
   15ee0:	andeq	lr, r1, r8, lsl #1
   15ee4:	muleq	r1, r4, r0
   15ee8:	strd	r4, [sp, #-16]!
   15eec:	str	r6, [sp, #8]
   15ef0:	str	lr, [sp, #12]
   15ef4:	mov	r6, r1
   15ef8:	ldr	r4, [pc, #252]	; 15ffc <UnityPrint@@Base+0x708>
   15efc:	ldr	r3, [r4]
   15f00:	ldr	r2, [r4, #4]
   15f04:	adds	r3, r3, #1
   15f08:	adc	r2, r2, #0
   15f0c:	str	r3, [r4]
   15f10:	str	r2, [r4, #4]
   15f14:	bl	158f4 <UnityPrint@@Base>
   15f18:	ldr	r3, [r4, #8]
   15f1c:	ldr	r2, [r4, #12]
   15f20:	adds	r3, r3, #1
   15f24:	adc	r2, r2, #0
   15f28:	str	r3, [r4, #8]
   15f2c:	str	r2, [r4, #12]
   15f30:	movw	r5, #64564	; 0xfc34
   15f34:	movt	r5, #2
   15f38:	ldr	r1, [r5]
   15f3c:	mov	r0, #58	; 0x3a
   15f40:	bl	120f8 <putc@plt>
   15f44:	ldr	r3, [r4, #16]
   15f48:	ldr	r2, [r4, #20]
   15f4c:	adds	r3, r3, #1
   15f50:	adc	r2, r2, #0
   15f54:	str	r3, [r4, #16]
   15f58:	str	r2, [r4, #20]
   15f5c:	mov	r0, r6
   15f60:	bl	150e0 <UnityPrintNumber@@Base>
   15f64:	ldr	r3, [r4, #24]
   15f68:	ldr	r2, [r4, #28]
   15f6c:	adds	r3, r3, #1
   15f70:	adc	r2, r2, #0
   15f74:	str	r3, [r4, #24]
   15f78:	str	r2, [r4, #28]
   15f7c:	ldr	r1, [r5]
   15f80:	mov	r0, #58	; 0x3a
   15f84:	bl	120f8 <putc@plt>
   15f88:	ldr	r3, [r4, #32]
   15f8c:	ldr	r2, [r4, #36]	; 0x24
   15f90:	adds	r3, r3, #1
   15f94:	adc	r2, r2, #0
   15f98:	str	r3, [r4, #32]
   15f9c:	str	r2, [r4, #36]	; 0x24
   15fa0:	movw	r3, #5400	; 0x1518
   15fa4:	movt	r3, #3
   15fa8:	ldr	r0, [r3, #4]
   15fac:	bl	158f4 <UnityPrint@@Base>
   15fb0:	ldr	r3, [r4, #40]	; 0x28
   15fb4:	ldr	r2, [r4, #44]	; 0x2c
   15fb8:	adds	r3, r3, #1
   15fbc:	adc	r2, r2, #0
   15fc0:	str	r3, [r4, #40]	; 0x28
   15fc4:	str	r2, [r4, #44]	; 0x2c
   15fc8:	ldr	r1, [r5]
   15fcc:	mov	r0, #58	; 0x3a
   15fd0:	bl	120f8 <putc@plt>
   15fd4:	ldr	r3, [r4, #48]	; 0x30
   15fd8:	ldr	r2, [r4, #52]	; 0x34
   15fdc:	adds	r3, r3, #1
   15fe0:	adc	r2, r2, #0
   15fe4:	str	r3, [r4, #48]	; 0x30
   15fe8:	str	r2, [r4, #52]	; 0x34
   15fec:	ldrd	r4, [sp]
   15ff0:	ldr	r6, [sp, #8]
   15ff4:	add	sp, sp, #12
   15ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   15ffc:	andeq	r0, r3, r0, asr r7
   16000:	str	r4, [sp, #-8]!
   16004:	str	lr, [sp, #4]
   16008:	ldr	r4, [pc, #152]	; 160a8 <UnityPrint@@Base+0x7b4>
   1600c:	ldr	r3, [r4, #-8]
   16010:	ldr	r2, [r4, #-4]
   16014:	adds	r3, r3, #1
   16018:	adc	r2, r2, #0
   1601c:	str	r3, [r4, #-8]
   16020:	str	r2, [r4, #-4]
   16024:	movw	r3, #5400	; 0x1518
   16028:	movt	r3, #3
   1602c:	mov	r1, r0
   16030:	ldr	r0, [r3]
   16034:	bl	15ee8 <UnityPrint@@Base+0x5f4>
   16038:	ldr	r3, [r4]
   1603c:	ldr	r2, [r4, #4]
   16040:	adds	r3, r3, #1
   16044:	adc	r2, r2, #0
   16048:	str	r3, [r4]
   1604c:	str	r2, [r4, #4]
   16050:	ldr	r0, [pc, #84]	; 160ac <UnityPrint@@Base+0x7b8>
   16054:	bl	158f4 <UnityPrint@@Base>
   16058:	ldr	r3, [r4, #8]
   1605c:	ldr	r2, [r4, #12]
   16060:	adds	r3, r3, #1
   16064:	adc	r2, r2, #0
   16068:	str	r3, [r4, #8]
   1606c:	str	r2, [r4, #12]
   16070:	movw	r3, #64564	; 0xfc34
   16074:	movt	r3, #2
   16078:	ldr	r1, [r3]
   1607c:	mov	r0, #58	; 0x3a
   16080:	bl	120f8 <putc@plt>
   16084:	ldr	r3, [r4, #16]
   16088:	ldr	r2, [r4, #20]
   1608c:	adds	r3, r3, #1
   16090:	adc	r2, r2, #0
   16094:	str	r3, [r4, #16]
   16098:	str	r2, [r4, #20]
   1609c:	ldr	r4, [sp]
   160a0:	add	sp, sp, #4
   160a4:	pop	{pc}		; (ldr pc, [sp], #4)
   160a8:	muleq	r3, r0, r7
   160ac:	andeq	lr, r1, r0, lsr #1
   160b0:	orrs	ip, r0, r1
   160b4:	beq	16230 <UnityPrint@@Base+0x93c>
   160b8:	strd	r4, [sp, #-16]!
   160bc:	str	r6, [sp, #8]
   160c0:	str	lr, [sp, #12]
   160c4:	mov	r4, r3
   160c8:	cmp	r0, #0
   160cc:	beq	16108 <UnityPrint@@Base+0x814>
   160d0:	ldr	lr, [pc, #380]	; 16254 <UnityPrint@@Base+0x960>
   160d4:	ldr	ip, [lr, #8]
   160d8:	ldr	r3, [lr, #12]
   160dc:	adds	ip, ip, #1
   160e0:	adc	r3, r3, #0
   160e4:	str	ip, [lr, #8]
   160e8:	str	r3, [lr, #12]
   160ec:	cmp	r1, #0
   160f0:	beq	1619c <UnityPrint@@Base+0x8a8>
   160f4:	mov	r0, #0
   160f8:	ldrd	r4, [sp]
   160fc:	ldr	r6, [sp, #8]
   16100:	add	sp, sp, #12
   16104:	pop	{pc}		; (ldr pc, [sp], #4)
   16108:	ldr	r5, [pc, #324]	; 16254 <UnityPrint@@Base+0x960>
   1610c:	ldr	r3, [r5]
   16110:	ldr	r1, [r5, #4]
   16114:	adds	r3, r3, #1
   16118:	adc	r1, r1, #0
   1611c:	str	r3, [r5]
   16120:	str	r1, [r5, #4]
   16124:	mov	r0, r2
   16128:	bl	16000 <UnityPrint@@Base+0x70c>
   1612c:	ldr	r3, [r5, #16]
   16130:	ldr	r2, [r5, #20]
   16134:	adds	r3, r3, #1
   16138:	adc	r2, r2, #0
   1613c:	str	r3, [r5, #16]
   16140:	str	r2, [r5, #20]
   16144:	ldr	r0, [pc, #268]	; 16258 <UnityPrint@@Base+0x964>
   16148:	bl	158f4 <UnityPrint@@Base>
   1614c:	ldr	r3, [r5, #24]
   16150:	ldr	r2, [r5, #28]
   16154:	adds	r3, r3, #1
   16158:	adc	r2, r2, #0
   1615c:	str	r3, [r5, #24]
   16160:	str	r2, [r5, #28]
   16164:	mov	r0, r4
   16168:	bl	15d18 <UnityPrint@@Base+0x424>
   1616c:	ldr	r3, [r5, #32]
   16170:	ldr	r2, [r5, #36]	; 0x24
   16174:	adds	r3, r3, #1
   16178:	adc	r2, r2, #0
   1617c:	str	r3, [r5, #32]
   16180:	str	r2, [r5, #36]	; 0x24
   16184:	movw	r0, #5400	; 0x1518
   16188:	movt	r0, #3
   1618c:	mov	r1, #1
   16190:	str	r1, [r0, #32]
   16194:	add	r0, r0, #40	; 0x28
   16198:	bl	11fcc <longjmp@plt>
   1619c:	mov	r5, lr
   161a0:	ldr	r3, [lr, #40]	; 0x28
   161a4:	ldr	r1, [lr, #44]	; 0x2c
   161a8:	adds	r3, r3, #1
   161ac:	adc	r1, r1, #0
   161b0:	str	r3, [lr, #40]	; 0x28
   161b4:	str	r1, [lr, #44]	; 0x2c
   161b8:	mov	r0, r2
   161bc:	bl	16000 <UnityPrint@@Base+0x70c>
   161c0:	ldr	r3, [r5, #48]	; 0x30
   161c4:	ldr	r2, [r5, #52]	; 0x34
   161c8:	adds	r3, r3, #1
   161cc:	adc	r2, r2, #0
   161d0:	str	r3, [r5, #48]	; 0x30
   161d4:	str	r2, [r5, #52]	; 0x34
   161d8:	ldr	r0, [pc, #124]	; 1625c <UnityPrint@@Base+0x968>
   161dc:	bl	158f4 <UnityPrint@@Base>
   161e0:	ldr	r3, [r5, #56]	; 0x38
   161e4:	ldr	r2, [r5, #60]	; 0x3c
   161e8:	adds	r3, r3, #1
   161ec:	adc	r2, r2, #0
   161f0:	str	r3, [r5, #56]	; 0x38
   161f4:	str	r2, [r5, #60]	; 0x3c
   161f8:	mov	r0, r4
   161fc:	bl	15d18 <UnityPrint@@Base+0x424>
   16200:	ldr	r3, [r5, #64]	; 0x40
   16204:	ldr	r2, [r5, #68]	; 0x44
   16208:	adds	r3, r3, #1
   1620c:	adc	r2, r2, #0
   16210:	str	r3, [r5, #64]	; 0x40
   16214:	str	r2, [r5, #68]	; 0x44
   16218:	movw	r0, #5400	; 0x1518
   1621c:	movt	r0, #3
   16220:	mov	r1, #1
   16224:	str	r1, [r0, #32]
   16228:	add	r0, r0, #40	; 0x28
   1622c:	bl	11fcc <longjmp@plt>
   16230:	ldr	r2, [pc, #28]	; 16254 <UnityPrint@@Base+0x960>
   16234:	ldr	r3, [r2, #-8]
   16238:	ldr	r1, [r2, #-4]
   1623c:	adds	r3, r3, #1
   16240:	adc	r1, r1, #0
   16244:	str	r3, [r2, #-8]
   16248:	str	r1, [r2, #-4]
   1624c:	mov	r0, #1
   16250:	bx	lr
   16254:			; <UNDEFINED> instruction: 0x000307b0
   16258:	andeq	lr, r1, r8, lsr #1
   1625c:	andeq	lr, r1, r8, asr #1

00016260 <UnityPrintMask@@Base>:
   16260:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16264:	strd	r6, [sp, #8]
   16268:	strd	r8, [sp, #16]
   1626c:	str	sl, [sp, #24]
   16270:	str	lr, [sp, #28]
   16274:	mov	r8, r0
   16278:	mov	r9, r1
   1627c:	ldr	r2, [pc, #288]	; 163a4 <UnityPrintMask@@Base+0x144>
   16280:	ldr	r3, [r2, #-8]
   16284:	ldr	r1, [r2, #-4]
   16288:	adds	r3, r3, #1
   1628c:	adc	r1, r1, #0
   16290:	str	r3, [r2, #-8]
   16294:	str	r1, [r2, #-4]
   16298:	mov	r6, #32
   1629c:	mov	r5, #-2147483648	; 0x80000000
   162a0:	mov	r4, r2
   162a4:	movw	r7, #64564	; 0xfc34
   162a8:	movt	r7, #2
   162ac:	b	162e0 <UnityPrintMask@@Base+0x80>
   162b0:	ldr	r3, [r4, #16]
   162b4:	ldr	r2, [r4, #20]
   162b8:	adds	r3, r3, #1
   162bc:	adc	r2, r2, #0
   162c0:	str	r3, [r4, #16]
   162c4:	str	r2, [r4, #20]
   162c8:	ldr	r1, [r7]
   162cc:	mov	r0, #48	; 0x30
   162d0:	bl	120f8 <putc@plt>
   162d4:	lsr	r5, r5, #1
   162d8:	subs	r6, r6, #1
   162dc:	beq	16370 <UnityPrintMask@@Base+0x110>
   162e0:	tst	r8, r5
   162e4:	beq	16330 <UnityPrintMask@@Base+0xd0>
   162e8:	tst	r9, r5
   162ec:	beq	162b0 <UnityPrintMask@@Base+0x50>
   162f0:	ldr	r3, [r4, #8]
   162f4:	ldr	r2, [r4, #12]
   162f8:	adds	r3, r3, #1
   162fc:	adc	r2, r2, #0
   16300:	str	r3, [r4, #8]
   16304:	str	r2, [r4, #12]
   16308:	ldr	r1, [r7]
   1630c:	mov	r0, #49	; 0x31
   16310:	bl	120f8 <putc@plt>
   16314:	ldr	r3, [r4, #24]
   16318:	ldr	r2, [r4, #28]
   1631c:	adds	r3, r3, #1
   16320:	adc	r2, r2, #0
   16324:	str	r3, [r4, #24]
   16328:	str	r2, [r4, #28]
   1632c:	b	162d4 <UnityPrintMask@@Base+0x74>
   16330:	ldr	r3, [r4]
   16334:	ldr	r2, [r4, #4]
   16338:	adds	r3, r3, #1
   1633c:	adc	r2, r2, #0
   16340:	str	r3, [r4]
   16344:	str	r2, [r4, #4]
   16348:	ldr	r1, [r7]
   1634c:	mov	r0, #88	; 0x58
   16350:	bl	120f8 <putc@plt>
   16354:	ldr	r3, [r4, #32]
   16358:	ldr	r2, [r4, #36]	; 0x24
   1635c:	adds	r3, r3, #1
   16360:	adc	r2, r2, #0
   16364:	str	r3, [r4, #32]
   16368:	str	r2, [r4, #36]	; 0x24
   1636c:	b	162d4 <UnityPrintMask@@Base+0x74>
   16370:	ldr	r2, [pc, #44]	; 163a4 <UnityPrintMask@@Base+0x144>
   16374:	ldr	r3, [r2, #40]	; 0x28
   16378:	ldr	r1, [r2, #44]	; 0x2c
   1637c:	adds	r3, r3, #1
   16380:	adc	r1, r1, #0
   16384:	str	r3, [r2, #40]	; 0x28
   16388:	str	r1, [r2, #44]	; 0x2c
   1638c:	ldrd	r4, [sp]
   16390:	ldrd	r6, [sp, #8]
   16394:	ldrd	r8, [sp, #16]
   16398:	ldr	sl, [sp, #24]
   1639c:	add	sp, sp, #28
   163a0:	pop	{pc}		; (ldr pc, [sp], #4)
   163a4:	andeq	r0, r3, r0, lsl #16

000163a8 <UnityPrintFail@@Base>:
   163a8:	str	r4, [sp, #-8]!
   163ac:	str	lr, [sp, #4]
   163b0:	ldr	r4, [pc, #64]	; 163f8 <UnityPrintFail@@Base+0x50>
   163b4:	ldr	r3, [r4]
   163b8:	ldr	r2, [r4, #4]
   163bc:	adds	r3, r3, #1
   163c0:	adc	r2, r2, #0
   163c4:	str	r3, [r4]
   163c8:	str	r2, [r4, #4]
   163cc:	ldr	r0, [pc, #40]	; 163fc <UnityPrintFail@@Base+0x54>
   163d0:	bl	158f4 <UnityPrint@@Base>
   163d4:	ldr	r3, [r4, #8]
   163d8:	ldr	r2, [r4, #12]
   163dc:	adds	r3, r3, #1
   163e0:	adc	r2, r2, #0
   163e4:	str	r3, [r4, #8]
   163e8:	str	r2, [r4, #12]
   163ec:	ldr	r4, [sp]
   163f0:	add	sp, sp, #4
   163f4:	pop	{pc}		; (ldr pc, [sp], #4)
   163f8:	andeq	r0, r3, r0, lsr r8
   163fc:	andeq	lr, r1, r0, lsr #1

00016400 <UnityPrintOk@@Base>:
   16400:	str	r4, [sp, #-8]!
   16404:	str	lr, [sp, #4]
   16408:	ldr	r4, [pc, #64]	; 16450 <UnityPrintOk@@Base+0x50>
   1640c:	ldr	r3, [r4]
   16410:	ldr	r2, [r4, #4]
   16414:	adds	r3, r3, #1
   16418:	adc	r2, r2, #0
   1641c:	str	r3, [r4]
   16420:	str	r2, [r4, #4]
   16424:	ldr	r0, [pc, #40]	; 16454 <UnityPrintOk@@Base+0x54>
   16428:	bl	158f4 <UnityPrint@@Base>
   1642c:	ldr	r3, [r4, #8]
   16430:	ldr	r2, [r4, #12]
   16434:	adds	r3, r3, #1
   16438:	adc	r2, r2, #0
   1643c:	str	r3, [r4, #8]
   16440:	str	r2, [r4, #12]
   16444:	ldr	r4, [sp]
   16448:	add	sp, sp, #4
   1644c:	pop	{pc}		; (ldr pc, [sp], #4)
   16450:	andeq	r0, r3, r0, asr #16
   16454:	andeq	lr, r1, r4, ror #1

00016458 <UnityConcludeTest@@Base>:
   16458:	str	r4, [sp, #-8]!
   1645c:	str	lr, [sp, #4]
   16460:	movw	r3, #5400	; 0x1518
   16464:	movt	r3, #3
   16468:	ldr	r3, [r3, #36]	; 0x24
   1646c:	cmp	r3, #0
   16470:	beq	164f4 <UnityConcludeTest@@Base+0x9c>
   16474:	ldr	r2, [pc, #300]	; 165a8 <UnityConcludeTest@@Base+0x150>
   16478:	ldr	r3, [r2]
   1647c:	ldr	r1, [r2, #4]
   16480:	adds	r3, r3, #1
   16484:	adc	r1, r1, #0
   16488:	str	r3, [r2]
   1648c:	str	r1, [r2, #4]
   16490:	movw	r3, #5400	; 0x1518
   16494:	movt	r3, #3
   16498:	ldr	r2, [r3, #28]
   1649c:	add	r2, r2, #1
   164a0:	str	r2, [r3, #28]
   164a4:	movw	r3, #5400	; 0x1518
   164a8:	movt	r3, #3
   164ac:	mov	r2, #0
   164b0:	str	r2, [r3, #32]
   164b4:	str	r2, [r3, #36]	; 0x24
   164b8:	movw	r3, #64564	; 0xfc34
   164bc:	movt	r3, #2
   164c0:	ldr	r1, [r3]
   164c4:	mov	r0, #10
   164c8:	bl	120f8 <putc@plt>
   164cc:	ldr	r2, [pc, #212]	; 165a8 <UnityConcludeTest@@Base+0x150>
   164d0:	ldr	r3, [r2, #40]	; 0x28
   164d4:	ldr	r1, [r2, #44]	; 0x2c
   164d8:	adds	r3, r3, #1
   164dc:	adc	r1, r1, #0
   164e0:	str	r3, [r2, #40]	; 0x28
   164e4:	str	r1, [r2, #44]	; 0x2c
   164e8:	ldr	r4, [sp]
   164ec:	add	sp, sp, #4
   164f0:	pop	{pc}		; (ldr pc, [sp], #4)
   164f4:	movw	r3, #5400	; 0x1518
   164f8:	movt	r3, #3
   164fc:	ldr	r3, [r3, #32]
   16500:	cmp	r3, #0
   16504:	beq	1653c <UnityConcludeTest@@Base+0xe4>
   16508:	ldr	r2, [pc, #152]	; 165a8 <UnityConcludeTest@@Base+0x150>
   1650c:	ldr	r3, [r2, #16]
   16510:	ldr	r1, [r2, #20]
   16514:	adds	r3, r3, #1
   16518:	adc	r1, r1, #0
   1651c:	str	r3, [r2, #16]
   16520:	str	r1, [r2, #20]
   16524:	movw	r3, #5400	; 0x1518
   16528:	movt	r3, #3
   1652c:	ldr	r2, [r3, #24]
   16530:	add	r2, r2, #1
   16534:	str	r2, [r3, #24]
   16538:	b	164a4 <UnityConcludeTest@@Base+0x4c>
   1653c:	ldr	r4, [pc, #100]	; 165a8 <UnityConcludeTest@@Base+0x150>
   16540:	ldr	r3, [r4, #8]
   16544:	ldr	r2, [r4, #12]
   16548:	adds	r3, r3, #1
   1654c:	adc	r2, r2, #0
   16550:	str	r3, [r4, #8]
   16554:	str	r2, [r4, #12]
   16558:	movw	r3, #5400	; 0x1518
   1655c:	movt	r3, #3
   16560:	ldr	r1, [r3, #16]
   16564:	ldr	r0, [r3]
   16568:	bl	15ee8 <UnityPrint@@Base+0x5f4>
   1656c:	ldr	r3, [r4, #24]
   16570:	ldr	r2, [r4, #28]
   16574:	adds	r3, r3, #1
   16578:	adc	r2, r2, #0
   1657c:	str	r3, [r4, #24]
   16580:	str	r2, [r4, #28]
   16584:	ldr	r0, [pc, #32]	; 165ac <UnityConcludeTest@@Base+0x154>
   16588:	bl	158f4 <UnityPrint@@Base>
   1658c:	ldr	r3, [r4, #32]
   16590:	ldr	r2, [r4, #36]	; 0x24
   16594:	adds	r3, r3, #1
   16598:	adc	r2, r2, #0
   1659c:	str	r3, [r4, #32]
   165a0:	str	r2, [r4, #36]	; 0x24
   165a4:	b	164a4 <UnityConcludeTest@@Base+0x4c>
   165a8:	andeq	r0, r3, r0, asr r8
   165ac:	andeq	lr, r1, r8, ror #1

000165b0 <UnityAssertBits@@Base>:
   165b0:	movw	ip, #5400	; 0x1518
   165b4:	movt	ip, #3
   165b8:	ldr	ip, [ip, #32]
   165bc:	cmp	ip, #0
   165c0:	bne	16760 <UnityAssertBits@@Base+0x1b0>
   165c4:	movw	ip, #5400	; 0x1518
   165c8:	movt	ip, #3
   165cc:	ldr	ip, [ip, #36]	; 0x24
   165d0:	cmp	ip, #0
   165d4:	bne	1662c <UnityAssertBits@@Base+0x7c>
   165d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   165dc:	strd	r6, [sp, #8]
   165e0:	strd	r8, [sp, #16]
   165e4:	str	sl, [sp, #24]
   165e8:	str	lr, [sp, #28]
   165ec:	ldr	lr, [pc, #396]	; 16780 <UnityAssertBits@@Base+0x1d0>
   165f0:	ldr	ip, [lr, #16]
   165f4:	ldr	r4, [lr, #20]
   165f8:	adds	ip, ip, #1
   165fc:	adc	r4, r4, #0
   16600:	str	ip, [lr, #16]
   16604:	str	r4, [lr, #20]
   16608:	eor	ip, r1, r2
   1660c:	tst	ip, r0
   16610:	bne	1664c <UnityAssertBits@@Base+0x9c>
   16614:	ldrd	r4, [sp]
   16618:	ldrd	r6, [sp, #8]
   1661c:	ldrd	r8, [sp, #16]
   16620:	ldr	sl, [sp, #24]
   16624:	add	sp, sp, #28
   16628:	pop	{pc}		; (ldr pc, [sp], #4)
   1662c:	ldr	r2, [pc, #332]	; 16780 <UnityAssertBits@@Base+0x1d0>
   16630:	ldr	r3, [r2, #8]
   16634:	ldr	r1, [r2, #12]
   16638:	adds	r3, r3, #1
   1663c:	adc	r1, r1, #0
   16640:	str	r3, [r2, #8]
   16644:	str	r1, [r2, #12]
   16648:	bx	lr
   1664c:	mov	r4, r3
   16650:	mov	r6, r2
   16654:	mov	r9, r1
   16658:	mov	r7, r0
   1665c:	mov	r5, lr
   16660:	ldr	r3, [lr, #24]
   16664:	ldr	r2, [lr, #28]
   16668:	adds	r3, r3, #1
   1666c:	adc	r2, r2, #0
   16670:	str	r3, [lr, #24]
   16674:	str	r2, [lr, #28]
   16678:	ldr	r0, [sp, #32]
   1667c:	bl	16000 <UnityPrint@@Base+0x70c>
   16680:	ldr	r3, [r5, #32]
   16684:	ldr	r2, [r5, #36]	; 0x24
   16688:	adds	r3, r3, #1
   1668c:	adc	r2, r2, #0
   16690:	str	r3, [r5, #32]
   16694:	str	r2, [r5, #36]	; 0x24
   16698:	movw	r8, #57420	; 0xe04c
   1669c:	movt	r8, #1
   166a0:	add	r0, r8, #28
   166a4:	bl	158f4 <UnityPrint@@Base>
   166a8:	ldr	r3, [r5, #40]	; 0x28
   166ac:	ldr	r2, [r5, #44]	; 0x2c
   166b0:	adds	r3, r3, #1
   166b4:	adc	r2, r2, #0
   166b8:	str	r3, [r5, #40]	; 0x28
   166bc:	str	r2, [r5, #44]	; 0x2c
   166c0:	mov	r1, r9
   166c4:	mov	r0, r7
   166c8:	bl	16260 <UnityPrintMask@@Base>
   166cc:	ldr	r3, [r5, #48]	; 0x30
   166d0:	ldr	r2, [r5, #52]	; 0x34
   166d4:	adds	r3, r3, #1
   166d8:	adc	r2, r2, #0
   166dc:	str	r3, [r5, #48]	; 0x30
   166e0:	str	r2, [r5, #52]	; 0x34
   166e4:	add	r0, r8, #48	; 0x30
   166e8:	bl	158f4 <UnityPrint@@Base>
   166ec:	ldr	r3, [r5, #56]	; 0x38
   166f0:	ldr	r2, [r5, #60]	; 0x3c
   166f4:	adds	r3, r3, #1
   166f8:	adc	r2, r2, #0
   166fc:	str	r3, [r5, #56]	; 0x38
   16700:	str	r2, [r5, #60]	; 0x3c
   16704:	mov	r1, r6
   16708:	mov	r0, r7
   1670c:	bl	16260 <UnityPrintMask@@Base>
   16710:	ldr	r3, [r5, #64]	; 0x40
   16714:	ldr	r2, [r5, #68]	; 0x44
   16718:	adds	r3, r3, #1
   1671c:	adc	r2, r2, #0
   16720:	str	r3, [r5, #64]	; 0x40
   16724:	str	r2, [r5, #68]	; 0x44
   16728:	mov	r0, r4
   1672c:	bl	15d18 <UnityPrint@@Base+0x424>
   16730:	ldr	r3, [r5, #72]	; 0x48
   16734:	ldr	r2, [r5, #76]	; 0x4c
   16738:	adds	r3, r3, #1
   1673c:	adc	r2, r2, #0
   16740:	str	r3, [r5, #72]	; 0x48
   16744:	str	r2, [r5, #76]	; 0x4c
   16748:	movw	r0, #5400	; 0x1518
   1674c:	movt	r0, #3
   16750:	mov	r1, #1
   16754:	str	r1, [r0, #32]
   16758:	add	r0, r0, #40	; 0x28
   1675c:	bl	11fcc <longjmp@plt>
   16760:	ldr	r2, [pc, #24]	; 16780 <UnityAssertBits@@Base+0x1d0>
   16764:	ldr	r3, [r2]
   16768:	ldr	r1, [r2, #4]
   1676c:	adds	r3, r3, #1
   16770:	adc	r1, r1, #0
   16774:	str	r3, [r2]
   16778:	str	r1, [r2, #4]
   1677c:	bx	lr
   16780:	andeq	r0, r3, r0, lsl #17

00016784 <UnityAssertEqualNumber@@Base>:
   16784:	movw	ip, #5400	; 0x1518
   16788:	movt	ip, #3
   1678c:	ldr	ip, [ip, #32]
   16790:	cmp	ip, #0
   16794:	bne	16924 <UnityAssertEqualNumber@@Base+0x1a0>
   16798:	movw	ip, #5400	; 0x1518
   1679c:	movt	ip, #3
   167a0:	ldr	ip, [ip, #36]	; 0x24
   167a4:	cmp	ip, #0
   167a8:	bne	167f4 <UnityAssertEqualNumber@@Base+0x70>
   167ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   167b0:	strd	r6, [sp, #8]
   167b4:	str	r8, [sp, #16]
   167b8:	str	lr, [sp, #20]
   167bc:	ldr	lr, [pc, #384]	; 16944 <UnityAssertEqualNumber@@Base+0x1c0>
   167c0:	ldr	ip, [lr, #16]
   167c4:	ldr	r4, [lr, #20]
   167c8:	adds	ip, ip, #1
   167cc:	adc	r4, r4, #0
   167d0:	str	ip, [lr, #16]
   167d4:	str	r4, [lr, #20]
   167d8:	cmp	r0, r1
   167dc:	bne	16814 <UnityAssertEqualNumber@@Base+0x90>
   167e0:	ldrd	r4, [sp]
   167e4:	ldrd	r6, [sp, #8]
   167e8:	ldr	r8, [sp, #16]
   167ec:	add	sp, sp, #20
   167f0:	pop	{pc}		; (ldr pc, [sp], #4)
   167f4:	ldr	r2, [pc, #328]	; 16944 <UnityAssertEqualNumber@@Base+0x1c0>
   167f8:	ldr	r3, [r2, #8]
   167fc:	ldr	r1, [r2, #12]
   16800:	adds	r3, r3, #1
   16804:	adc	r1, r1, #0
   16808:	str	r3, [r2, #8]
   1680c:	str	r1, [r2, #12]
   16810:	bx	lr
   16814:	mov	r5, r2
   16818:	mov	r6, r1
   1681c:	mov	r8, r0
   16820:	mov	r4, lr
   16824:	ldr	r2, [lr, #24]
   16828:	ldr	r1, [lr, #28]
   1682c:	adds	r2, r2, #1
   16830:	adc	r1, r1, #0
   16834:	str	r2, [lr, #24]
   16838:	str	r1, [lr, #28]
   1683c:	mov	r0, r3
   16840:	bl	16000 <UnityPrint@@Base+0x70c>
   16844:	ldr	r3, [r4, #32]
   16848:	ldr	r2, [r4, #36]	; 0x24
   1684c:	adds	r3, r3, #1
   16850:	adc	r2, r2, #0
   16854:	str	r3, [r4, #32]
   16858:	str	r2, [r4, #36]	; 0x24
   1685c:	movw	r7, #57420	; 0xe04c
   16860:	movt	r7, #1
   16864:	add	r0, r7, #28
   16868:	bl	158f4 <UnityPrint@@Base>
   1686c:	ldr	r3, [r4, #40]	; 0x28
   16870:	ldr	r2, [r4, #44]	; 0x2c
   16874:	adds	r3, r3, #1
   16878:	adc	r2, r2, #0
   1687c:	str	r3, [r4, #40]	; 0x28
   16880:	str	r2, [r4, #44]	; 0x2c
   16884:	ldr	r1, [sp, #24]
   16888:	mov	r0, r8
   1688c:	bl	15588 <UnityPrintNumberByStyle@@Base>
   16890:	ldr	r3, [r4, #48]	; 0x30
   16894:	ldr	r2, [r4, #52]	; 0x34
   16898:	adds	r3, r3, #1
   1689c:	adc	r2, r2, #0
   168a0:	str	r3, [r4, #48]	; 0x30
   168a4:	str	r2, [r4, #52]	; 0x34
   168a8:	add	r0, r7, #48	; 0x30
   168ac:	bl	158f4 <UnityPrint@@Base>
   168b0:	ldr	r3, [r4, #56]	; 0x38
   168b4:	ldr	r2, [r4, #60]	; 0x3c
   168b8:	adds	r3, r3, #1
   168bc:	adc	r2, r2, #0
   168c0:	str	r3, [r4, #56]	; 0x38
   168c4:	str	r2, [r4, #60]	; 0x3c
   168c8:	ldr	r1, [sp, #24]
   168cc:	mov	r0, r6
   168d0:	bl	15588 <UnityPrintNumberByStyle@@Base>
   168d4:	ldr	r3, [r4, #64]	; 0x40
   168d8:	ldr	r2, [r4, #68]	; 0x44
   168dc:	adds	r3, r3, #1
   168e0:	adc	r2, r2, #0
   168e4:	str	r3, [r4, #64]	; 0x40
   168e8:	str	r2, [r4, #68]	; 0x44
   168ec:	mov	r0, r5
   168f0:	bl	15d18 <UnityPrint@@Base+0x424>
   168f4:	ldr	r3, [r4, #72]	; 0x48
   168f8:	ldr	r2, [r4, #76]	; 0x4c
   168fc:	adds	r3, r3, #1
   16900:	adc	r2, r2, #0
   16904:	str	r3, [r4, #72]	; 0x48
   16908:	str	r2, [r4, #76]	; 0x4c
   1690c:	movw	r0, #5400	; 0x1518
   16910:	movt	r0, #3
   16914:	mov	r1, #1
   16918:	str	r1, [r0, #32]
   1691c:	add	r0, r0, #40	; 0x28
   16920:	bl	11fcc <longjmp@plt>
   16924:	ldr	r2, [pc, #24]	; 16944 <UnityAssertEqualNumber@@Base+0x1c0>
   16928:	ldr	r3, [r2]
   1692c:	ldr	r1, [r2, #4]
   16930:	adds	r3, r3, #1
   16934:	adc	r1, r1, #0
   16938:	str	r3, [r2]
   1693c:	str	r1, [r2, #4]
   16940:	bx	lr
   16944:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>

00016948 <UnityAssertEqualIntArray@@Base>:
   16948:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1694c:	strd	r6, [sp, #8]
   16950:	strd	r8, [sp, #16]
   16954:	strd	sl, [sp, #24]
   16958:	str	lr, [sp, #32]
   1695c:	sub	sp, sp, #4
   16960:	mov	r6, r3
   16964:	movw	r3, #5400	; 0x1518
   16968:	movt	r3, #3
   1696c:	ldr	r3, [r3, #32]
   16970:	cmp	r3, #0
   16974:	bne	16ab4 <UnityAssertEqualIntArray@@Base+0x16c>
   16978:	mov	r5, r0
   1697c:	mov	r4, r1
   16980:	mov	r8, r2
   16984:	movw	r3, #5400	; 0x1518
   16988:	movt	r3, #3
   1698c:	ldr	r3, [r3, #36]	; 0x24
   16990:	cmp	r3, #0
   16994:	bne	16aec <UnityAssertEqualIntArray@@Base+0x1a4>
   16998:	cmp	r2, #0
   1699c:	beq	16b0c <UnityAssertEqualIntArray@@Base+0x1c4>
   169a0:	ldr	r2, [pc, #2044]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   169a4:	ldr	r3, [r2, #24]
   169a8:	ldr	r1, [r2, #28]
   169ac:	adds	r3, r3, #1
   169b0:	adc	r1, r1, #0
   169b4:	str	r3, [r2, #24]
   169b8:	str	r1, [r2, #28]
   169bc:	mov	r3, r6
   169c0:	ldr	r2, [sp, #40]	; 0x28
   169c4:	mov	r1, r4
   169c8:	bl	160b0 <UnityPrint@@Base+0x7bc>
   169cc:	cmp	r0, #1
   169d0:	beq	16ba0 <UnityAssertEqualIntArray@@Base+0x258>
   169d4:	ldr	r3, [sp, #44]	; 0x2c
   169d8:	bic	r3, r3, #128	; 0x80
   169dc:	sub	r3, r3, #17
   169e0:	cmp	r3, #49	; 0x31
   169e4:	ldrls	pc, [pc, r3, lsl #2]
   169e8:	b	16f40 <UnityAssertEqualIntArray@@Base+0x5f8>
   169ec:	andeq	r6, r1, r0, lsl #27
   169f0:	andeq	r6, r1, r0, asr #23
   169f4:	andeq	r6, r1, r0, asr #30
   169f8:	andeq	r6, r1, r0, asr #30
   169fc:	andeq	r6, r1, r0, asr #30
   16a00:	andeq	r6, r1, r0, asr #30
   16a04:	andeq	r6, r1, r0, asr #30
   16a08:	andeq	r6, r1, r0, asr #30
   16a0c:	andeq	r6, r1, r0, asr #30
   16a10:	andeq	r6, r1, r0, asr #30
   16a14:	andeq	r6, r1, r0, asr #30
   16a18:	andeq	r6, r1, r0, asr #30
   16a1c:	andeq	r6, r1, r0, asr #30
   16a20:	andeq	r6, r1, r0, asr #30
   16a24:	andeq	r6, r1, r0, asr #30
   16a28:	andeq	r6, r1, r0, asr #30
   16a2c:	andeq	r6, r1, r0, lsl #27
   16a30:	andeq	r6, r1, r0, asr #23
   16a34:	andeq	r6, r1, r0, asr #30
   16a38:	andeq	r6, r1, r0, asr #30
   16a3c:	andeq	r6, r1, r0, asr #30
   16a40:	andeq	r6, r1, r0, asr #30
   16a44:	andeq	r6, r1, r0, asr #30
   16a48:	andeq	r6, r1, r0, asr #30
   16a4c:	andeq	r6, r1, r0, asr #30
   16a50:	andeq	r6, r1, r0, asr #30
   16a54:	andeq	r6, r1, r0, asr #30
   16a58:	andeq	r6, r1, r0, asr #30
   16a5c:	andeq	r6, r1, r0, asr #30
   16a60:	andeq	r6, r1, r0, asr #30
   16a64:	andeq	r6, r1, r0, asr #30
   16a68:	andeq	r6, r1, r0, asr #30
   16a6c:	andeq	r6, r1, r0, asr #30
   16a70:	andeq	r6, r1, r0, asr #30
   16a74:	andeq	r6, r1, r0, asr #30
   16a78:	andeq	r6, r1, r0, asr #30
   16a7c:	andeq	r6, r1, r0, asr #30
   16a80:	andeq	r6, r1, r0, asr #30
   16a84:	andeq	r6, r1, r0, asr #30
   16a88:	andeq	r6, r1, r0, asr #30
   16a8c:	andeq	r6, r1, r0, asr #30
   16a90:	andeq	r6, r1, r0, asr #30
   16a94:	andeq	r6, r1, r0, asr #30
   16a98:	andeq	r6, r1, r0, asr #30
   16a9c:	andeq	r6, r1, r0, asr #30
   16aa0:	andeq	r6, r1, r0, asr #30
   16aa4:	andeq	r6, r1, r0, asr #30
   16aa8:	andeq	r6, r1, r0, asr #30
   16aac:	andeq	r6, r1, r0, lsl #27
   16ab0:	andeq	r6, r1, r0, asr #23
   16ab4:	ldr	r2, [pc, #1768]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16ab8:	ldr	r3, [r2]
   16abc:	ldr	r1, [r2, #4]
   16ac0:	adds	r3, r3, #1
   16ac4:	adc	r1, r1, #0
   16ac8:	str	r3, [r2]
   16acc:	str	r1, [r2, #4]
   16ad0:	add	sp, sp, #4
   16ad4:	ldrd	r4, [sp]
   16ad8:	ldrd	r6, [sp, #8]
   16adc:	ldrd	r8, [sp, #16]
   16ae0:	ldrd	sl, [sp, #24]
   16ae4:	add	sp, sp, #32
   16ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   16aec:	ldr	r2, [pc, #1712]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16af0:	ldr	r3, [r2, #8]
   16af4:	ldr	r1, [r2, #12]
   16af8:	adds	r3, r3, #1
   16afc:	adc	r1, r1, #0
   16b00:	str	r3, [r2, #8]
   16b04:	str	r1, [r2, #12]
   16b08:	b	16ad0 <UnityAssertEqualIntArray@@Base+0x188>
   16b0c:	ldr	r4, [pc, #1680]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16b10:	ldr	r3, [r4, #16]
   16b14:	ldr	r2, [r4, #20]
   16b18:	adds	r3, r3, #1
   16b1c:	adc	r2, r2, #0
   16b20:	str	r3, [r4, #16]
   16b24:	str	r2, [r4, #20]
   16b28:	ldr	r0, [sp, #40]	; 0x28
   16b2c:	bl	16000 <UnityPrint@@Base+0x70c>
   16b30:	ldr	r3, [r4, #32]
   16b34:	ldr	r2, [r4, #36]	; 0x24
   16b38:	adds	r3, r3, #1
   16b3c:	adc	r2, r2, #0
   16b40:	str	r3, [r4, #32]
   16b44:	str	r2, [r4, #36]	; 0x24
   16b48:	ldr	r0, [pc, #1624]	; 171a8 <UnityAssertEqualIntArray@@Base+0x860>
   16b4c:	bl	158f4 <UnityPrint@@Base>
   16b50:	ldr	r3, [r4, #40]	; 0x28
   16b54:	ldr	r2, [r4, #44]	; 0x2c
   16b58:	adds	r3, r3, #1
   16b5c:	adc	r2, r2, #0
   16b60:	str	r3, [r4, #40]	; 0x28
   16b64:	str	r2, [r4, #44]	; 0x2c
   16b68:	mov	r0, r6
   16b6c:	bl	15d18 <UnityPrint@@Base+0x424>
   16b70:	ldr	r3, [r4, #48]	; 0x30
   16b74:	ldr	r2, [r4, #52]	; 0x34
   16b78:	adds	r3, r3, #1
   16b7c:	adc	r2, r2, #0
   16b80:	str	r3, [r4, #48]	; 0x30
   16b84:	str	r2, [r4, #52]	; 0x34
   16b88:	movw	r0, #5400	; 0x1518
   16b8c:	movt	r0, #3
   16b90:	mov	r1, #1
   16b94:	str	r1, [r0, #32]
   16b98:	add	r0, r0, #40	; 0x28
   16b9c:	bl	11fcc <longjmp@plt>
   16ba0:	ldr	r2, [pc, #1532]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16ba4:	ldr	r3, [r2, #56]	; 0x38
   16ba8:	ldr	r1, [r2, #60]	; 0x3c
   16bac:	adds	r3, r3, #1
   16bb0:	adc	r1, r1, #0
   16bb4:	str	r3, [r2, #56]	; 0x38
   16bb8:	str	r1, [r2, #60]	; 0x3c
   16bbc:	b	16ad0 <UnityAssertEqualIntArray@@Base+0x188>
   16bc0:	sub	r7, r8, #1
   16bc4:	ldrsh	r2, [r5]
   16bc8:	ldrsh	r3, [r4]
   16bcc:	cmp	r2, r3
   16bd0:	bne	17140 <UnityAssertEqualIntArray@@Base+0x7f8>
   16bd4:	ldr	r2, [pc, #1480]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16bd8:	ldr	r3, [r2, #160]	; 0xa0
   16bdc:	ldr	r2, [r2, #164]	; 0xa4
   16be0:	adds	r3, r3, #1
   16be4:	adc	r2, r2, #0
   16be8:	mov	r8, r7
   16bec:	mov	r1, r5
   16bf0:	mov	sl, r3
   16bf4:	mov	r9, r2
   16bf8:	add	r1, r1, #2
   16bfc:	add	r0, r4, r1
   16c00:	sub	r0, r0, r5
   16c04:	sub	r8, r8, #1
   16c08:	cmn	r8, #1
   16c0c:	beq	17148 <UnityAssertEqualIntArray@@Base+0x800>
   16c10:	ldrsh	ip, [r1]
   16c14:	adds	r3, r3, #1
   16c18:	adc	r2, r2, #0
   16c1c:	ldrsh	lr, [r0]
   16c20:	cmp	lr, ip
   16c24:	beq	16bf0 <UnityAssertEqualIntArray@@Base+0x2a8>
   16c28:	ldr	r3, [pc, #1396]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16c2c:	str	sl, [r3, #160]	; 0xa0
   16c30:	str	r9, [r3, #164]	; 0xa4
   16c34:	mov	r4, r0
   16c38:	mov	r5, r1
   16c3c:	ldr	r9, [pc, #1376]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16c40:	ldr	r3, [r9, #152]	; 0x98
   16c44:	ldr	r2, [r9, #156]	; 0x9c
   16c48:	adds	r3, r3, #1
   16c4c:	adc	r2, r2, #0
   16c50:	str	r3, [r9, #152]	; 0x98
   16c54:	str	r2, [r9, #156]	; 0x9c
   16c58:	ldr	r0, [sp, #40]	; 0x28
   16c5c:	bl	16000 <UnityPrint@@Base+0x70c>
   16c60:	ldr	r3, [r9, #168]	; 0xa8
   16c64:	ldr	r2, [r9, #172]	; 0xac
   16c68:	adds	r3, r3, #1
   16c6c:	adc	r2, r2, #0
   16c70:	str	r3, [r9, #168]	; 0xa8
   16c74:	str	r2, [r9, #172]	; 0xac
   16c78:	movw	sl, #57420	; 0xe04c
   16c7c:	movt	sl, #1
   16c80:	add	r0, sl, #220	; 0xdc
   16c84:	bl	158f4 <UnityPrint@@Base>
   16c88:	ldr	r3, [r9, #176]	; 0xb0
   16c8c:	ldr	r2, [r9, #180]	; 0xb4
   16c90:	adds	r3, r3, #1
   16c94:	adc	r2, r2, #0
   16c98:	str	r3, [r9, #176]	; 0xb0
   16c9c:	str	r2, [r9, #180]	; 0xb4
   16ca0:	sub	r0, r7, r8
   16ca4:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   16ca8:	ldr	r3, [r9, #184]	; 0xb8
   16cac:	ldr	r2, [r9, #188]	; 0xbc
   16cb0:	adds	r3, r3, #1
   16cb4:	adc	r2, r2, #0
   16cb8:	str	r3, [r9, #184]	; 0xb8
   16cbc:	str	r2, [r9, #188]	; 0xbc
   16cc0:	add	r0, sl, #28
   16cc4:	bl	158f4 <UnityPrint@@Base>
   16cc8:	ldr	r3, [r9, #192]	; 0xc0
   16ccc:	ldr	r2, [r9, #196]	; 0xc4
   16cd0:	adds	r3, r3, #1
   16cd4:	adc	r2, r2, #0
   16cd8:	str	r3, [r9, #192]	; 0xc0
   16cdc:	str	r2, [r9, #196]	; 0xc4
   16ce0:	ldr	r1, [sp, #44]	; 0x2c
   16ce4:	ldrsh	r0, [r5]
   16ce8:	bl	15588 <UnityPrintNumberByStyle@@Base>
   16cec:	ldr	r3, [r9, #200]	; 0xc8
   16cf0:	ldr	r2, [r9, #204]	; 0xcc
   16cf4:	adds	r3, r3, #1
   16cf8:	adc	r2, r2, #0
   16cfc:	str	r3, [r9, #200]	; 0xc8
   16d00:	str	r2, [r9, #204]	; 0xcc
   16d04:	add	r0, sl, #48	; 0x30
   16d08:	bl	158f4 <UnityPrint@@Base>
   16d0c:	ldr	r3, [r9, #208]	; 0xd0
   16d10:	ldr	r2, [r9, #212]	; 0xd4
   16d14:	adds	r3, r3, #1
   16d18:	adc	r2, r2, #0
   16d1c:	str	r3, [r9, #208]	; 0xd0
   16d20:	str	r2, [r9, #212]	; 0xd4
   16d24:	ldr	r1, [sp, #44]	; 0x2c
   16d28:	ldrsh	r0, [r4]
   16d2c:	bl	15588 <UnityPrintNumberByStyle@@Base>
   16d30:	ldr	r3, [r9, #216]	; 0xd8
   16d34:	ldr	r2, [r9, #220]	; 0xdc
   16d38:	adds	r3, r3, #1
   16d3c:	adc	r2, r2, #0
   16d40:	str	r3, [r9, #216]	; 0xd8
   16d44:	str	r2, [r9, #220]	; 0xdc
   16d48:	mov	r0, r6
   16d4c:	bl	15d18 <UnityPrint@@Base+0x424>
   16d50:	ldr	r3, [r9, #224]	; 0xe0
   16d54:	ldr	r2, [r9, #228]	; 0xe4
   16d58:	adds	r3, r3, #1
   16d5c:	adc	r2, r2, #0
   16d60:	str	r3, [r9, #224]	; 0xe0
   16d64:	str	r2, [r9, #228]	; 0xe4
   16d68:	movw	r0, #5400	; 0x1518
   16d6c:	movt	r0, #3
   16d70:	mov	r1, #1
   16d74:	str	r1, [r0, #32]
   16d78:	add	r0, r0, #40	; 0x28
   16d7c:	bl	11fcc <longjmp@plt>
   16d80:	sub	r9, r8, #1
   16d84:	ldrsb	r2, [r5]
   16d88:	ldrsb	r3, [r4]
   16d8c:	cmp	r2, r3
   16d90:	bne	17110 <UnityAssertEqualIntArray@@Base+0x7c8>
   16d94:	ldr	r2, [pc, #1032]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16d98:	ldr	r3, [r2, #72]	; 0x48
   16d9c:	ldr	r2, [r2, #76]	; 0x4c
   16da0:	adds	r3, r3, #1
   16da4:	adc	r2, r2, #0
   16da8:	mov	r7, r9
   16dac:	add	r5, r5, r8
   16db0:	add	r4, r4, r8
   16db4:	mov	sl, r3
   16db8:	mov	r8, r2
   16dbc:	sub	r1, r5, r7
   16dc0:	sub	r0, r4, r7
   16dc4:	sub	r7, r7, #1
   16dc8:	cmn	r7, #1
   16dcc:	beq	17118 <UnityAssertEqualIntArray@@Base+0x7d0>
   16dd0:	adds	r3, r3, #1
   16dd4:	adc	r2, r2, #0
   16dd8:	ldrsb	lr, [r1]
   16ddc:	ldrsb	ip, [r0]
   16de0:	cmp	lr, ip
   16de4:	beq	16db4 <UnityAssertEqualIntArray@@Base+0x46c>
   16de8:	ldr	r3, [pc, #948]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16dec:	str	sl, [r3, #72]	; 0x48
   16df0:	str	r8, [r3, #76]	; 0x4c
   16df4:	mov	r4, r0
   16df8:	mov	r5, r1
   16dfc:	ldr	r8, [pc, #928]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16e00:	ldr	r3, [r8, #64]	; 0x40
   16e04:	ldr	r2, [r8, #68]	; 0x44
   16e08:	adds	r3, r3, #1
   16e0c:	adc	r2, r2, #0
   16e10:	str	r3, [r8, #64]	; 0x40
   16e14:	str	r2, [r8, #68]	; 0x44
   16e18:	ldr	r0, [sp, #40]	; 0x28
   16e1c:	bl	16000 <UnityPrint@@Base+0x70c>
   16e20:	ldr	r3, [r8, #80]	; 0x50
   16e24:	ldr	r2, [r8, #84]	; 0x54
   16e28:	adds	r3, r3, #1
   16e2c:	adc	r2, r2, #0
   16e30:	str	r3, [r8, #80]	; 0x50
   16e34:	str	r2, [r8, #84]	; 0x54
   16e38:	movw	sl, #57420	; 0xe04c
   16e3c:	movt	sl, #1
   16e40:	add	r0, sl, #220	; 0xdc
   16e44:	bl	158f4 <UnityPrint@@Base>
   16e48:	ldr	r3, [r8, #88]	; 0x58
   16e4c:	ldr	r2, [r8, #92]	; 0x5c
   16e50:	adds	r3, r3, #1
   16e54:	adc	r2, r2, #0
   16e58:	str	r3, [r8, #88]	; 0x58
   16e5c:	str	r2, [r8, #92]	; 0x5c
   16e60:	sub	r0, r9, r7
   16e64:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   16e68:	ldr	r3, [r8, #96]	; 0x60
   16e6c:	ldr	r2, [r8, #100]	; 0x64
   16e70:	adds	r3, r3, #1
   16e74:	adc	r2, r2, #0
   16e78:	str	r3, [r8, #96]	; 0x60
   16e7c:	str	r2, [r8, #100]	; 0x64
   16e80:	add	r0, sl, #28
   16e84:	bl	158f4 <UnityPrint@@Base>
   16e88:	ldr	r3, [r8, #104]	; 0x68
   16e8c:	ldr	r2, [r8, #108]	; 0x6c
   16e90:	adds	r3, r3, #1
   16e94:	adc	r2, r2, #0
   16e98:	str	r3, [r8, #104]	; 0x68
   16e9c:	str	r2, [r8, #108]	; 0x6c
   16ea0:	ldr	r1, [sp, #44]	; 0x2c
   16ea4:	ldrsb	r0, [r5]
   16ea8:	bl	15588 <UnityPrintNumberByStyle@@Base>
   16eac:	ldr	r3, [r8, #112]	; 0x70
   16eb0:	ldr	r2, [r8, #116]	; 0x74
   16eb4:	adds	r3, r3, #1
   16eb8:	adc	r2, r2, #0
   16ebc:	str	r3, [r8, #112]	; 0x70
   16ec0:	str	r2, [r8, #116]	; 0x74
   16ec4:	add	r0, sl, #48	; 0x30
   16ec8:	bl	158f4 <UnityPrint@@Base>
   16ecc:	ldr	r3, [r8, #120]	; 0x78
   16ed0:	ldr	r2, [r8, #124]	; 0x7c
   16ed4:	adds	r3, r3, #1
   16ed8:	adc	r2, r2, #0
   16edc:	str	r3, [r8, #120]	; 0x78
   16ee0:	str	r2, [r8, #124]	; 0x7c
   16ee4:	ldr	r1, [sp, #44]	; 0x2c
   16ee8:	ldrsb	r0, [r4]
   16eec:	bl	15588 <UnityPrintNumberByStyle@@Base>
   16ef0:	ldr	r3, [r8, #128]	; 0x80
   16ef4:	ldr	r2, [r8, #132]	; 0x84
   16ef8:	adds	r3, r3, #1
   16efc:	adc	r2, r2, #0
   16f00:	str	r3, [r8, #128]	; 0x80
   16f04:	str	r2, [r8, #132]	; 0x84
   16f08:	mov	r0, r6
   16f0c:	bl	15d18 <UnityPrint@@Base+0x424>
   16f10:	ldr	r3, [r8, #136]	; 0x88
   16f14:	ldr	r2, [r8, #140]	; 0x8c
   16f18:	adds	r3, r3, #1
   16f1c:	adc	r2, r2, #0
   16f20:	str	r3, [r8, #136]	; 0x88
   16f24:	str	r2, [r8, #140]	; 0x8c
   16f28:	movw	r0, #5400	; 0x1518
   16f2c:	movt	r0, #3
   16f30:	mov	r1, #1
   16f34:	str	r1, [r0, #32]
   16f38:	add	r0, r0, #40	; 0x28
   16f3c:	bl	11fcc <longjmp@plt>
   16f40:	sub	r7, r8, #1
   16f44:	ldr	r2, [r5]
   16f48:	ldr	r3, [r4]
   16f4c:	cmp	r2, r3
   16f50:	bne	17170 <UnityAssertEqualIntArray@@Base+0x828>
   16f54:	ldr	r2, [pc, #584]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16f58:	ldr	r3, [r2, #248]	; 0xf8
   16f5c:	ldr	r2, [r2, #252]	; 0xfc
   16f60:	adds	r3, r3, #1
   16f64:	adc	r2, r2, #0
   16f68:	mov	r8, r7
   16f6c:	mov	r1, r5
   16f70:	mov	sl, r3
   16f74:	mov	r9, r2
   16f78:	add	r1, r1, #4
   16f7c:	add	r0, r4, r1
   16f80:	sub	r0, r0, r5
   16f84:	sub	r8, r8, #1
   16f88:	cmn	r8, #1
   16f8c:	beq	17178 <UnityAssertEqualIntArray@@Base+0x830>
   16f90:	ldr	lr, [r1]
   16f94:	adds	r3, r3, #1
   16f98:	adc	r2, r2, #0
   16f9c:	ldr	ip, [r0]
   16fa0:	cmp	lr, ip
   16fa4:	beq	16f70 <UnityAssertEqualIntArray@@Base+0x628>
   16fa8:	ldr	r3, [pc, #500]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   16fac:	str	sl, [r3, #248]	; 0xf8
   16fb0:	str	r9, [r3, #252]	; 0xfc
   16fb4:	mov	r4, r0
   16fb8:	mov	r5, r1
   16fbc:	movw	r9, #1264	; 0x4f0
   16fc0:	movt	r9, #3
   16fc4:	ldr	r3, [r9, #1312]	; 0x520
   16fc8:	ldr	r1, [r9, #1316]	; 0x524
   16fcc:	adds	r3, r3, #1
   16fd0:	adc	r1, r1, #0
   16fd4:	str	r3, [r9, #1312]	; 0x520
   16fd8:	str	r1, [r9, #1316]	; 0x524
   16fdc:	ldr	r0, [sp, #40]	; 0x28
   16fe0:	bl	16000 <UnityPrint@@Base+0x70c>
   16fe4:	ldr	r3, [r9, #1328]	; 0x530
   16fe8:	ldr	r1, [r9, #1332]	; 0x534
   16fec:	adds	r3, r3, #1
   16ff0:	adc	r1, r1, #0
   16ff4:	str	r3, [r9, #1328]	; 0x530
   16ff8:	str	r1, [r9, #1332]	; 0x534
   16ffc:	movw	sl, #57420	; 0xe04c
   17000:	movt	sl, #1
   17004:	add	r0, sl, #220	; 0xdc
   17008:	bl	158f4 <UnityPrint@@Base>
   1700c:	ldr	r3, [r9, #1336]	; 0x538
   17010:	ldr	r2, [r9, #1340]	; 0x53c
   17014:	adds	r3, r3, #1
   17018:	adc	r2, r2, #0
   1701c:	str	r3, [r9, #1336]	; 0x538
   17020:	str	r2, [r9, #1340]	; 0x53c
   17024:	sub	r0, r7, r8
   17028:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   1702c:	ldr	r3, [r9, #1344]	; 0x540
   17030:	ldr	r2, [r9, #1348]	; 0x544
   17034:	adds	r3, r3, #1
   17038:	adc	r2, r2, #0
   1703c:	str	r3, [r9, #1344]	; 0x540
   17040:	str	r2, [r9, #1348]	; 0x544
   17044:	add	r0, sl, #28
   17048:	bl	158f4 <UnityPrint@@Base>
   1704c:	add	r7, r9, #1360	; 0x550
   17050:	ldr	r3, [r7, #-8]
   17054:	ldr	r2, [r7, #-4]
   17058:	adds	r3, r3, #1
   1705c:	adc	r2, r2, #0
   17060:	str	r3, [r7, #-8]
   17064:	str	r2, [r7, #-4]
   17068:	ldr	r1, [sp, #44]	; 0x2c
   1706c:	ldr	r0, [r5]
   17070:	bl	15588 <UnityPrintNumberByStyle@@Base>
   17074:	ldr	r3, [r7]
   17078:	ldr	r2, [r7, #4]
   1707c:	adds	r3, r3, #1
   17080:	adc	r2, r2, #0
   17084:	str	r3, [r7]
   17088:	str	r2, [r7, #4]
   1708c:	add	r0, sl, #48	; 0x30
   17090:	bl	158f4 <UnityPrint@@Base>
   17094:	add	r5, r9, #1376	; 0x560
   17098:	ldr	r3, [r5, #-8]
   1709c:	ldr	r2, [r5, #-4]
   170a0:	adds	r3, r3, #1
   170a4:	adc	r2, r2, #0
   170a8:	str	r3, [r5, #-8]
   170ac:	str	r2, [r5, #-4]
   170b0:	ldr	r1, [sp, #44]	; 0x2c
   170b4:	ldr	r0, [r4]
   170b8:	bl	15588 <UnityPrintNumberByStyle@@Base>
   170bc:	ldr	r3, [r5]
   170c0:	ldr	r2, [r5, #4]
   170c4:	adds	r3, r3, #1
   170c8:	adc	r2, r2, #0
   170cc:	str	r3, [r5]
   170d0:	str	r2, [r5, #4]
   170d4:	mov	r0, r6
   170d8:	bl	15d18 <UnityPrint@@Base+0x424>
   170dc:	add	r9, r9, #1392	; 0x570
   170e0:	ldr	r3, [r9, #-8]
   170e4:	ldr	r2, [r9, #-4]
   170e8:	adds	r3, r3, #1
   170ec:	adc	r2, r2, #0
   170f0:	str	r3, [r9, #-8]
   170f4:	str	r2, [r9, #-4]
   170f8:	movw	r0, #5400	; 0x1518
   170fc:	movt	r0, #3
   17100:	mov	r1, #1
   17104:	str	r1, [r0, #32]
   17108:	add	r0, r0, #40	; 0x28
   1710c:	bl	11fcc <longjmp@plt>
   17110:	mov	r7, r9
   17114:	b	16dfc <UnityAssertEqualIntArray@@Base+0x4b4>
   17118:	ldr	r3, [pc, #132]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   1711c:	str	sl, [r3, #72]	; 0x48
   17120:	str	r2, [r3, #76]	; 0x4c
   17124:	ldr	r2, [r3, #144]	; 0x90
   17128:	ldr	r1, [r3, #148]	; 0x94
   1712c:	adds	r2, r2, #1
   17130:	adc	r1, r1, #0
   17134:	str	r2, [r3, #144]	; 0x90
   17138:	str	r1, [r3, #148]	; 0x94
   1713c:	b	16ad0 <UnityAssertEqualIntArray@@Base+0x188>
   17140:	mov	r8, r7
   17144:	b	16c3c <UnityAssertEqualIntArray@@Base+0x2f4>
   17148:	ldr	r3, [pc, #84]	; 171a4 <UnityAssertEqualIntArray@@Base+0x85c>
   1714c:	str	sl, [r3, #160]	; 0xa0
   17150:	str	r2, [r3, #164]	; 0xa4
   17154:	ldr	r2, [r3, #232]	; 0xe8
   17158:	ldr	r1, [r3, #236]	; 0xec
   1715c:	adds	r2, r2, #1
   17160:	adc	r1, r1, #0
   17164:	str	r2, [r3, #232]	; 0xe8
   17168:	str	r1, [r3, #236]	; 0xec
   1716c:	b	16ad0 <UnityAssertEqualIntArray@@Base+0x188>
   17170:	mov	r8, r7
   17174:	b	16fbc <UnityAssertEqualIntArray@@Base+0x674>
   17178:	movw	r3, #1264	; 0x4f0
   1717c:	movt	r3, #3
   17180:	str	sl, [r3, #1320]	; 0x528
   17184:	str	r9, [r3, #1324]	; 0x52c
   17188:	ldr	r2, [r3, #1392]	; 0x570
   1718c:	ldr	r1, [r3, #1396]	; 0x574
   17190:	adds	r2, r2, #1
   17194:	adc	r1, r1, #0
   17198:	str	r2, [r3, #1392]	; 0x570
   1719c:	str	r1, [r3, #1396]	; 0x574
   171a0:	b	16ad0 <UnityAssertEqualIntArray@@Base+0x188>
   171a4:	andeq	r0, r3, r0, lsr #18
   171a8:	strdeq	lr, [r1], -r0

000171ac <UnityAssertEqualFloatArray@@Base>:
   171ac:	movw	ip, #5400	; 0x1518
   171b0:	movt	ip, #3
   171b4:	ldr	ip, [ip, #32]
   171b8:	cmp	ip, #0
   171bc:	bne	17298 <UnityAssertEqualFloatArray@@Base+0xec>
   171c0:	movw	ip, #5400	; 0x1518
   171c4:	movt	ip, #3
   171c8:	ldr	ip, [ip, #36]	; 0x24
   171cc:	cmp	ip, #0
   171d0:	bne	172b8 <UnityAssertEqualFloatArray@@Base+0x10c>
   171d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   171d8:	strd	r6, [sp, #8]
   171dc:	strd	r8, [sp, #16]
   171e0:	strd	sl, [sp, #24]
   171e4:	str	lr, [sp, #32]
   171e8:	sub	sp, sp, #12
   171ec:	str	r3, [sp, #4]
   171f0:	mov	r6, r2
   171f4:	mov	r4, r1
   171f8:	mov	r5, r0
   171fc:	ldr	r2, [pc, #988]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17200:	ldr	r3, [r2, #8]
   17204:	ldr	r1, [r2, #12]
   17208:	adds	r3, r3, #1
   1720c:	adc	r1, r1, #0
   17210:	str	r3, [r2, #8]
   17214:	str	r1, [r2, #12]
   17218:	cmp	r6, #0
   1721c:	beq	172d8 <UnityAssertEqualFloatArray@@Base+0x12c>
   17220:	ldr	r3, [sp, #4]
   17224:	ldr	r2, [sp, #48]	; 0x30
   17228:	mov	r1, r4
   1722c:	bl	160b0 <UnityPrint@@Base+0x7bc>
   17230:	ldr	r2, [pc, #936]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17234:	ldr	r3, [r2, #48]	; 0x30
   17238:	ldr	r1, [r2, #52]	; 0x34
   1723c:	adds	r3, r3, #1
   17240:	adc	r1, r1, #0
   17244:	str	r3, [r2, #48]	; 0x30
   17248:	str	r1, [r2, #52]	; 0x34
   1724c:	cmp	r0, #1
   17250:	beq	1736c <UnityAssertEqualFloatArray@@Base+0x1c0>
   17254:	sub	r6, r6, #1
   17258:	ldr	lr, [r2, #64]	; 0x40
   1725c:	ldr	r8, [r2, #68]	; 0x44
   17260:	ldr	r7, [r2, #72]	; 0x48
   17264:	ldr	r9, [r2, #76]	; 0x4c
   17268:	ldr	r3, [r2, #96]	; 0x60
   1726c:	ldr	r2, [r2, #100]	; 0x64
   17270:	mov	r0, r5
   17274:	mov	r1, r4
   17278:	mov	r4, r6
   1727c:	mov	r5, #0
   17280:	mov	fp, r5
   17284:	mov	sl, r5
   17288:	vldr	s12, [pc, #840]	; 175d8 <UnityAssertEqualFloatArray@@Base+0x42c>
   1728c:	mov	ip, #1
   17290:	vldr	s11, [pc, #836]	; 175dc <UnityAssertEqualFloatArray@@Base+0x430>
   17294:	b	173e4 <UnityAssertEqualFloatArray@@Base+0x238>
   17298:	ldr	r2, [pc, #832]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   1729c:	ldr	r3, [r2, #-8]
   172a0:	ldr	r1, [r2, #-4]
   172a4:	adds	r3, r3, #1
   172a8:	adc	r1, r1, #0
   172ac:	str	r3, [r2, #-8]
   172b0:	str	r1, [r2, #-4]
   172b4:	bx	lr
   172b8:	ldr	r2, [pc, #800]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   172bc:	ldr	r3, [r2]
   172c0:	ldr	r1, [r2, #4]
   172c4:	adds	r3, r3, #1
   172c8:	adc	r1, r1, #0
   172cc:	str	r3, [r2]
   172d0:	str	r1, [r2, #4]
   172d4:	bx	lr
   172d8:	mov	r4, r2
   172dc:	ldr	r3, [r2, #16]
   172e0:	ldr	r2, [r2, #20]
   172e4:	adds	r3, r3, #1
   172e8:	adc	r2, r2, #0
   172ec:	str	r3, [r4, #16]
   172f0:	str	r2, [r4, #20]
   172f4:	ldr	r0, [sp, #48]	; 0x30
   172f8:	bl	16000 <UnityPrint@@Base+0x70c>
   172fc:	ldr	r3, [r4, #24]
   17300:	ldr	r2, [r4, #28]
   17304:	adds	r3, r3, #1
   17308:	adc	r2, r2, #0
   1730c:	str	r3, [r4, #24]
   17310:	str	r2, [r4, #28]
   17314:	ldr	r0, [pc, #712]	; 175e4 <UnityAssertEqualFloatArray@@Base+0x438>
   17318:	bl	158f4 <UnityPrint@@Base>
   1731c:	ldr	r3, [r4, #32]
   17320:	ldr	r2, [r4, #36]	; 0x24
   17324:	adds	r3, r3, #1
   17328:	adc	r2, r2, #0
   1732c:	str	r3, [r4, #32]
   17330:	str	r2, [r4, #36]	; 0x24
   17334:	ldr	r0, [sp, #4]
   17338:	bl	15d18 <UnityPrint@@Base+0x424>
   1733c:	ldr	r3, [r4, #40]	; 0x28
   17340:	ldr	r2, [r4, #44]	; 0x2c
   17344:	adds	r3, r3, #1
   17348:	adc	r2, r2, #0
   1734c:	str	r3, [r4, #40]	; 0x28
   17350:	str	r2, [r4, #44]	; 0x2c
   17354:	movw	r0, #5400	; 0x1518
   17358:	movt	r0, #3
   1735c:	mov	r1, #1
   17360:	str	r1, [r0, #32]
   17364:	add	r0, r0, #40	; 0x28
   17368:	bl	11fcc <longjmp@plt>
   1736c:	ldr	r2, [pc, #620]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17370:	ldr	r3, [r2, #56]	; 0x38
   17374:	ldr	r1, [r2, #60]	; 0x3c
   17378:	adds	r3, r3, #1
   1737c:	adc	r1, r1, #0
   17380:	str	r3, [r2, #56]	; 0x38
   17384:	str	r1, [r2, #60]	; 0x3c
   17388:	b	175bc <UnityAssertEqualFloatArray@@Base+0x410>
   1738c:	adds	lr, lr, #1
   17390:	adc	r8, r8, #0
   17394:	vsub.f32	s14, s12, s14
   17398:	mov	sl, ip
   1739c:	b	173fc <UnityAssertEqualFloatArray@@Base+0x250>
   173a0:	adds	r7, r7, #1
   173a4:	adc	r9, r9, #0
   173a8:	vsub.f32	s15, s12, s15
   173ac:	mov	fp, ip
   173b0:	vmul.f32	s13, s14, s12
   173b4:	vcmp.f32	s13, #0.0
   173b8:	vmrs	APSR_nzcv, fpscr
   173bc:	bne	17410 <UnityAssertEqualFloatArray@@Base+0x264>
   173c0:	vcmpe.f32	s14, s15
   173c4:	vmrs	APSR_nzcv, fpscr
   173c8:	bgt	1752c <UnityAssertEqualFloatArray@@Base+0x380>
   173cc:	adds	r3, r3, #1
   173d0:	adc	r2, r2, #0
   173d4:	sub	r4, r4, #1
   173d8:	mov	r5, ip
   173dc:	cmn	r4, #1
   173e0:	beq	17588 <UnityAssertEqualFloatArray@@Base+0x3dc>
   173e4:	vldmia	r0!, {s15}
   173e8:	vldmia	r1!, {s14}
   173ec:	vsub.f32	s14, s15, s14
   173f0:	vcmpe.f32	s14, #0.0
   173f4:	vmrs	APSR_nzcv, fpscr
   173f8:	bmi	1738c <UnityAssertEqualFloatArray@@Base+0x1e0>
   173fc:	vmul.f32	s15, s15, s11
   17400:	vcmpe.f32	s15, #0.0
   17404:	vmrs	APSR_nzcv, fpscr
   17408:	bpl	173b0 <UnityAssertEqualFloatArray@@Base+0x204>
   1740c:	b	173a0 <UnityAssertEqualFloatArray@@Base+0x1f4>
   17410:	cmp	sl, #0
   17414:	beq	17424 <UnityAssertEqualFloatArray@@Base+0x278>
   17418:	ldr	r1, [pc, #448]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   1741c:	str	lr, [r1, #64]	; 0x40
   17420:	str	r8, [r1, #68]	; 0x44
   17424:	cmp	fp, #0
   17428:	beq	17438 <UnityAssertEqualFloatArray@@Base+0x28c>
   1742c:	ldr	r1, [pc, #428]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17430:	str	r7, [r1, #72]	; 0x48
   17434:	str	r9, [r1, #76]	; 0x4c
   17438:	cmp	r5, #0
   1743c:	beq	1744c <UnityAssertEqualFloatArray@@Base+0x2a0>
   17440:	ldr	r1, [pc, #408]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17444:	str	r3, [r1, #96]	; 0x60
   17448:	str	r2, [r1, #100]	; 0x64
   1744c:	ldr	r2, [pc, #396]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17450:	ldr	r3, [r2, #80]	; 0x50
   17454:	ldr	r1, [r2, #84]	; 0x54
   17458:	adds	r3, r3, #1
   1745c:	adc	r1, r1, #0
   17460:	str	r3, [r2, #80]	; 0x50
   17464:	str	r1, [r2, #84]	; 0x54
   17468:	ldr	r0, [sp, #48]	; 0x30
   1746c:	bl	16000 <UnityPrint@@Base+0x70c>
   17470:	ldr	r5, [pc, #360]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17474:	ldr	r3, [r5, #104]	; 0x68
   17478:	ldr	r2, [r5, #108]	; 0x6c
   1747c:	adds	r3, r3, #1
   17480:	adc	r2, r2, #0
   17484:	str	r3, [r5, #104]	; 0x68
   17488:	str	r2, [r5, #108]	; 0x6c
   1748c:	movw	r7, #57420	; 0xe04c
   17490:	movt	r7, #1
   17494:	add	r0, r7, #220	; 0xdc
   17498:	bl	158f4 <UnityPrint@@Base>
   1749c:	ldr	r3, [r5, #112]	; 0x70
   174a0:	ldr	r2, [r5, #116]	; 0x74
   174a4:	adds	r3, r3, #1
   174a8:	adc	r2, r2, #0
   174ac:	str	r3, [r5, #112]	; 0x70
   174b0:	str	r2, [r5, #116]	; 0x74
   174b4:	sub	r0, r6, r4
   174b8:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   174bc:	ldr	r3, [r5, #120]	; 0x78
   174c0:	ldr	r2, [r5, #124]	; 0x7c
   174c4:	adds	r3, r3, #1
   174c8:	adc	r2, r2, #0
   174cc:	str	r3, [r5, #120]	; 0x78
   174d0:	str	r2, [r5, #124]	; 0x7c
   174d4:	add	r0, r7, #232	; 0xe8
   174d8:	bl	158f4 <UnityPrint@@Base>
   174dc:	ldr	r3, [r5, #128]	; 0x80
   174e0:	ldr	r2, [r5, #132]	; 0x84
   174e4:	adds	r3, r3, #1
   174e8:	adc	r2, r2, #0
   174ec:	str	r3, [r5, #128]	; 0x80
   174f0:	str	r2, [r5, #132]	; 0x84
   174f4:	ldr	r0, [sp, #4]
   174f8:	bl	15d18 <UnityPrint@@Base+0x424>
   174fc:	ldr	r3, [r5, #136]	; 0x88
   17500:	ldr	r2, [r5, #140]	; 0x8c
   17504:	adds	r3, r3, #1
   17508:	adc	r2, r2, #0
   1750c:	str	r3, [r5, #136]	; 0x88
   17510:	str	r2, [r5, #140]	; 0x8c
   17514:	movw	r0, #5400	; 0x1518
   17518:	movt	r0, #3
   1751c:	mov	r1, #1
   17520:	str	r1, [r0, #32]
   17524:	add	r0, r0, #40	; 0x28
   17528:	bl	11fcc <longjmp@plt>
   1752c:	cmp	sl, #0
   17530:	beq	17540 <UnityAssertEqualFloatArray@@Base+0x394>
   17534:	ldr	r1, [pc, #164]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17538:	str	lr, [r1, #64]	; 0x40
   1753c:	str	r8, [r1, #68]	; 0x44
   17540:	cmp	fp, #0
   17544:	beq	17554 <UnityAssertEqualFloatArray@@Base+0x3a8>
   17548:	ldr	r1, [pc, #144]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   1754c:	str	r7, [r1, #72]	; 0x48
   17550:	str	r9, [r1, #76]	; 0x4c
   17554:	cmp	r5, #0
   17558:	beq	17568 <UnityAssertEqualFloatArray@@Base+0x3bc>
   1755c:	ldr	r1, [pc, #124]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17560:	str	r3, [r1, #96]	; 0x60
   17564:	str	r2, [r1, #100]	; 0x64
   17568:	ldr	r2, [pc, #112]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   1756c:	ldr	r3, [r2, #88]	; 0x58
   17570:	ldr	r1, [r2, #92]	; 0x5c
   17574:	adds	r3, r3, #1
   17578:	adc	r1, r1, #0
   1757c:	str	r3, [r2, #88]	; 0x58
   17580:	str	r1, [r2, #92]	; 0x5c
   17584:	b	17468 <UnityAssertEqualFloatArray@@Base+0x2bc>
   17588:	cmp	sl, #0
   1758c:	beq	1759c <UnityAssertEqualFloatArray@@Base+0x3f0>
   17590:	ldr	r1, [pc, #72]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   17594:	str	lr, [r1, #64]	; 0x40
   17598:	str	r8, [r1, #68]	; 0x44
   1759c:	cmp	fp, #0
   175a0:	beq	175b0 <UnityAssertEqualFloatArray@@Base+0x404>
   175a4:	ldr	r1, [pc, #52]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   175a8:	str	r7, [r1, #72]	; 0x48
   175ac:	str	r9, [r1, #76]	; 0x4c
   175b0:	ldr	r1, [pc, #40]	; 175e0 <UnityAssertEqualFloatArray@@Base+0x434>
   175b4:	str	r3, [r1, #96]	; 0x60
   175b8:	str	r2, [r1, #100]	; 0x64
   175bc:	add	sp, sp, #12
   175c0:	ldrd	r4, [sp]
   175c4:	ldrd	r6, [sp, #8]
   175c8:	ldrd	r8, [sp, #16]
   175cc:	ldrd	sl, [sp, #24]
   175d0:	add	sp, sp, #32
   175d4:	pop	{pc}		; (ldr pc, [sp], #4)
   175d8:	andeq	r0, r0, r0
   175dc:	strcc	ip, [r7, -ip, lsr #11]!
   175e0:	andeq	r0, r3, r0, ror sl
   175e4:	strdeq	lr, [r1], -r0

000175e8 <UnityAssertFloatsWithin@@Base>:
   175e8:	movw	r3, #5400	; 0x1518
   175ec:	movt	r3, #3
   175f0:	ldr	r3, [r3, #32]
   175f4:	cmp	r3, #0
   175f8:	bne	177ac <UnityAssertFloatsWithin@@Base+0x1c4>
   175fc:	strd	r4, [sp, #-16]!
   17600:	str	r6, [sp, #8]
   17604:	str	lr, [sp, #12]
   17608:	mov	r4, r0
   1760c:	movw	r3, #5400	; 0x1518
   17610:	movt	r3, #3
   17614:	ldr	r3, [r3, #36]	; 0x24
   17618:	cmp	r3, #0
   1761c:	bne	17688 <UnityAssertFloatsWithin@@Base+0xa0>
   17620:	vsub.f32	s2, s2, s1
   17624:	vcmpe.f32	s2, #0.0
   17628:	vmrs	APSR_nzcv, fpscr
   1762c:	bmi	176a8 <UnityAssertFloatsWithin@@Base+0xc0>
   17630:	vcmpe.f32	s0, #0.0
   17634:	vmrs	APSR_nzcv, fpscr
   17638:	bmi	176d0 <UnityAssertFloatsWithin@@Base+0xe8>
   1763c:	vldr	s15, [pc, #392]	; 177cc <UnityAssertFloatsWithin@@Base+0x1e4>
   17640:	vmul.f32	s15, s2, s15
   17644:	vcmp.f32	s15, #0.0
   17648:	vmrs	APSR_nzcv, fpscr
   1764c:	bne	176f8 <UnityAssertFloatsWithin@@Base+0x110>
   17650:	ldr	r2, [pc, #376]	; 177d0 <UnityAssertFloatsWithin@@Base+0x1e8>
   17654:	ldr	r3, [r2, #40]	; 0x28
   17658:	ldr	ip, [r2, #44]	; 0x2c
   1765c:	adds	r3, r3, #1
   17660:	adc	ip, ip, #0
   17664:	str	r3, [r2, #40]	; 0x28
   17668:	str	ip, [r2, #44]	; 0x2c
   1766c:	vcmpe.f32	s2, s0
   17670:	vmrs	APSR_nzcv, fpscr
   17674:	bgt	17790 <UnityAssertFloatsWithin@@Base+0x1a8>
   17678:	ldrd	r4, [sp]
   1767c:	ldr	r6, [sp, #8]
   17680:	add	sp, sp, #12
   17684:	pop	{pc}		; (ldr pc, [sp], #4)
   17688:	ldr	r2, [pc, #320]	; 177d0 <UnityAssertFloatsWithin@@Base+0x1e8>
   1768c:	ldr	r3, [r2, #8]
   17690:	ldr	r1, [r2, #12]
   17694:	adds	r3, r3, #1
   17698:	adc	r1, r1, #0
   1769c:	str	r3, [r2, #8]
   176a0:	str	r1, [r2, #12]
   176a4:	b	17678 <UnityAssertFloatsWithin@@Base+0x90>
   176a8:	ldr	r2, [pc, #288]	; 177d0 <UnityAssertFloatsWithin@@Base+0x1e8>
   176ac:	ldr	r3, [r2, #16]
   176b0:	ldr	r0, [r2, #20]
   176b4:	adds	r3, r3, #1
   176b8:	adc	r0, r0, #0
   176bc:	str	r3, [r2, #16]
   176c0:	str	r0, [r2, #20]
   176c4:	vldr	s15, [pc, #256]	; 177cc <UnityAssertFloatsWithin@@Base+0x1e4>
   176c8:	vsub.f32	s2, s15, s2
   176cc:	b	17630 <UnityAssertFloatsWithin@@Base+0x48>
   176d0:	ldr	r2, [pc, #248]	; 177d0 <UnityAssertFloatsWithin@@Base+0x1e8>
   176d4:	ldr	r3, [r2, #24]
   176d8:	ldr	r0, [r2, #28]
   176dc:	adds	r3, r3, #1
   176e0:	adc	r0, r0, #0
   176e4:	str	r3, [r2, #24]
   176e8:	str	r0, [r2, #28]
   176ec:	vldr	s15, [pc, #216]	; 177cc <UnityAssertFloatsWithin@@Base+0x1e4>
   176f0:	vsub.f32	s0, s15, s0
   176f4:	b	1763c <UnityAssertFloatsWithin@@Base+0x54>
   176f8:	ldr	r2, [pc, #208]	; 177d0 <UnityAssertFloatsWithin@@Base+0x1e8>
   176fc:	ldr	r3, [r2, #32]
   17700:	ldr	r0, [r2, #36]	; 0x24
   17704:	adds	r3, r3, #1
   17708:	adc	r0, r0, #0
   1770c:	str	r3, [r2, #32]
   17710:	str	r0, [r2, #36]	; 0x24
   17714:	mov	r0, r1
   17718:	bl	16000 <UnityPrint@@Base+0x70c>
   1771c:	ldr	r5, [pc, #172]	; 177d0 <UnityAssertFloatsWithin@@Base+0x1e8>
   17720:	ldr	r3, [r5, #56]	; 0x38
   17724:	ldr	r2, [r5, #60]	; 0x3c
   17728:	adds	r3, r3, #1
   1772c:	adc	r2, r2, #0
   17730:	str	r3, [r5, #56]	; 0x38
   17734:	str	r2, [r5, #60]	; 0x3c
   17738:	ldr	r0, [pc, #148]	; 177d4 <UnityAssertFloatsWithin@@Base+0x1ec>
   1773c:	bl	158f4 <UnityPrint@@Base>
   17740:	ldr	r3, [r5, #64]	; 0x40
   17744:	ldr	r2, [r5, #68]	; 0x44
   17748:	adds	r3, r3, #1
   1774c:	adc	r2, r2, #0
   17750:	str	r3, [r5, #64]	; 0x40
   17754:	str	r2, [r5, #68]	; 0x44
   17758:	mov	r0, r4
   1775c:	bl	15d18 <UnityPrint@@Base+0x424>
   17760:	ldr	r3, [r5, #72]	; 0x48
   17764:	ldr	r2, [r5, #76]	; 0x4c
   17768:	adds	r3, r3, #1
   1776c:	adc	r2, r2, #0
   17770:	str	r3, [r5, #72]	; 0x48
   17774:	str	r2, [r5, #76]	; 0x4c
   17778:	movw	r0, #5400	; 0x1518
   1777c:	movt	r0, #3
   17780:	mov	r1, #1
   17784:	str	r1, [r0, #32]
   17788:	add	r0, r0, #40	; 0x28
   1778c:	bl	11fcc <longjmp@plt>
   17790:	ldr	r3, [r2, #48]	; 0x30
   17794:	ldr	r0, [r2, #52]	; 0x34
   17798:	adds	r3, r3, #1
   1779c:	adc	r0, r0, #0
   177a0:	str	r3, [r2, #48]	; 0x30
   177a4:	str	r0, [r2, #52]	; 0x34
   177a8:	b	17714 <UnityAssertFloatsWithin@@Base+0x12c>
   177ac:	ldr	r2, [pc, #28]	; 177d0 <UnityAssertFloatsWithin@@Base+0x1e8>
   177b0:	ldr	r3, [r2]
   177b4:	ldr	r1, [r2, #4]
   177b8:	adds	r3, r3, #1
   177bc:	adc	r1, r1, #0
   177c0:	str	r3, [r2]
   177c4:	str	r1, [r2, #4]
   177c8:	bx	lr
   177cc:	andeq	r0, r0, r0
   177d0:	andeq	r0, r3, r0, lsl #22
   177d4:	andeq	lr, r1, r4, lsr r1

000177d8 <UnityAssertFloatSpecial@@Base>:
   177d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   177dc:	strd	r6, [sp, #8]
   177e0:	str	r8, [sp, #16]
   177e4:	str	lr, [sp, #20]
   177e8:	sub	sp, sp, #16
   177ec:	ldr	r3, [pc, #1228]	; 17cc0 <UnityAssertFloatSpecial@@Base+0x4e8>
   177f0:	ldrd	r4, [r3]
   177f4:	strd	r4, [sp]
   177f8:	ldrd	r4, [r3, #8]
   177fc:	strd	r4, [sp, #8]
   17800:	movw	r3, #5400	; 0x1518
   17804:	movt	r3, #3
   17808:	ldr	r3, [r3, #32]
   1780c:	cmp	r3, #0
   17810:	bne	17878 <UnityAssertFloatSpecial@@Base+0xa0>
   17814:	lsr	r4, r2, #1
   17818:	movw	r3, #5400	; 0x1518
   1781c:	movt	r3, #3
   17820:	ldr	r3, [r3, #36]	; 0x24
   17824:	cmp	r3, #0
   17828:	bne	1785c <UnityAssertFloatSpecial@@Base+0x84>
   1782c:	and	r5, r2, #1
   17830:	cmp	r2, #7
   17834:	ldrls	pc, [pc, r2, lsl #2]
   17838:	b	17b98 <UnityAssertFloatSpecial@@Base+0x3c0>
   1783c:	andeq	r7, r1, ip, lsr #17
   17840:	andeq	r7, r1, ip, lsr #17
   17844:	andeq	r7, r1, r8, lsr sl
   17848:	andeq	r7, r1, r8, lsr sl
   1784c:	andeq	r7, r1, r4, asr #21
   17850:	andeq	r7, r1, r4, asr #21
   17854:	strdeq	r7, [r1], -r4
   17858:	strdeq	r7, [r1], -r4
   1785c:	ldr	r2, [pc, #1120]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17860:	ldr	r3, [r2]
   17864:	ldr	r1, [r2, #4]
   17868:	adds	r3, r3, #1
   1786c:	adc	r1, r1, #0
   17870:	str	r3, [r2]
   17874:	str	r1, [r2, #4]
   17878:	ldr	r2, [pc, #1092]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   1787c:	ldr	r3, [r2, #8]
   17880:	ldr	r1, [r2, #12]
   17884:	adds	r3, r3, #1
   17888:	adc	r1, r1, #0
   1788c:	str	r3, [r2, #8]
   17890:	str	r1, [r2, #12]
   17894:	add	sp, sp, #16
   17898:	ldrd	r4, [sp]
   1789c:	ldrd	r6, [sp, #8]
   178a0:	ldr	r8, [sp, #16]
   178a4:	add	sp, sp, #20
   178a8:	pop	{pc}		; (ldr pc, [sp], #4)
   178ac:	ldr	r2, [pc, #1040]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   178b0:	ldr	r3, [r2, #24]
   178b4:	ldr	ip, [r2, #28]
   178b8:	adds	r3, r3, #1
   178bc:	adc	ip, ip, #0
   178c0:	str	r3, [r2, #24]
   178c4:	str	ip, [r2, #28]
   178c8:	vabs.f32	s15, s0
   178cc:	vldr	s14, [pc, #1000]	; 17cbc <UnityAssertFloatSpecial@@Base+0x4e4>
   178d0:	vcmp.f32	s15, s14
   178d4:	vmrs	APSR_nzcv, fpscr
   178d8:	movle	r3, #0
   178dc:	ble	17924 <UnityAssertFloatSpecial@@Base+0x14c>
   178e0:	ldr	r3, [r2, #56]	; 0x38
   178e4:	ldr	ip, [r2, #60]	; 0x3c
   178e8:	adds	r3, r3, #1
   178ec:	adc	ip, ip, #0
   178f0:	str	r3, [r2, #56]	; 0x38
   178f4:	str	ip, [r2, #60]	; 0x3c
   178f8:	vmov	r3, s0
   178fc:	cmp	r3, #0
   17900:	mvnlt	r3, #0
   17904:	blt	17924 <UnityAssertFloatSpecial@@Base+0x14c>
   17908:	ldr	r3, [r2, #64]	; 0x40
   1790c:	ldr	ip, [r2, #68]	; 0x44
   17910:	adds	r3, r3, #1
   17914:	adc	ip, ip, #0
   17918:	str	r3, [r2, #64]	; 0x40
   1791c:	str	ip, [r2, #68]	; 0x44
   17920:	mov	r3, #1
   17924:	vcmpe.f32	s0, #0.0
   17928:	vmrs	APSR_nzcv, fpscr
   1792c:	movle	r3, #0
   17930:	andgt	r3, r3, #1
   17934:	cmp	r3, r5
   17938:	beq	17894 <UnityAssertFloatSpecial@@Base+0xbc>
   1793c:	mov	r7, r0
   17940:	ldr	r6, [pc, #892]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17944:	ldr	r3, [r6, #112]	; 0x70
   17948:	ldr	r2, [r6, #116]	; 0x74
   1794c:	adds	r3, r3, #1
   17950:	adc	r2, r2, #0
   17954:	str	r3, [r6, #112]	; 0x70
   17958:	str	r2, [r6, #116]	; 0x74
   1795c:	mov	r0, r1
   17960:	bl	16000 <UnityPrint@@Base+0x70c>
   17964:	ldr	r3, [r6, #120]	; 0x78
   17968:	ldr	r2, [r6, #124]	; 0x7c
   1796c:	adds	r3, r3, #1
   17970:	adc	r2, r2, #0
   17974:	str	r3, [r6, #120]	; 0x78
   17978:	str	r2, [r6, #124]	; 0x7c
   1797c:	ldr	r0, [pc, #836]	; 17cc8 <UnityAssertFloatSpecial@@Base+0x4f0>
   17980:	bl	158f4 <UnityPrint@@Base>
   17984:	ldr	r3, [r6, #128]	; 0x80
   17988:	ldr	r2, [r6, #132]	; 0x84
   1798c:	adds	r3, r3, #1
   17990:	adc	r2, r2, #0
   17994:	str	r3, [r6, #128]	; 0x80
   17998:	str	r2, [r6, #132]	; 0x84
   1799c:	cmp	r5, #0
   179a0:	beq	17bd0 <UnityAssertFloatSpecial@@Base+0x3f8>
   179a4:	add	r3, sp, #16
   179a8:	add	r4, r3, r4, lsl #2
   179ac:	ldr	r6, [r4, #-16]
   179b0:	mov	r0, r6
   179b4:	bl	158f4 <UnityPrint@@Base>
   179b8:	ldr	r4, [pc, #772]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   179bc:	ldr	r3, [r4, #152]	; 0x98
   179c0:	ldr	r2, [r4, #156]	; 0x9c
   179c4:	adds	r3, r3, #1
   179c8:	adc	r2, r2, #0
   179cc:	str	r3, [r4, #152]	; 0x98
   179d0:	str	r2, [r4, #156]	; 0x9c
   179d4:	movw	r5, #57420	; 0xe04c
   179d8:	movt	r5, #1
   179dc:	add	r0, r5, #48	; 0x30
   179e0:	bl	158f4 <UnityPrint@@Base>
   179e4:	ldr	r3, [r4, #160]	; 0xa0
   179e8:	ldr	r2, [r4, #164]	; 0xa4
   179ec:	adds	r3, r3, #1
   179f0:	adc	r2, r2, #0
   179f4:	str	r3, [r4, #160]	; 0xa0
   179f8:	str	r2, [r4, #164]	; 0xa4
   179fc:	ldr	r3, [r4, #168]	; 0xa8
   17a00:	ldr	r2, [r4, #172]	; 0xac
   17a04:	adds	r3, r3, #1
   17a08:	adc	r2, r2, #0
   17a0c:	str	r3, [r4, #168]	; 0xa8
   17a10:	str	r2, [r4, #172]	; 0xac
   17a14:	add	r0, r5, #296	; 0x128
   17a18:	bl	158f4 <UnityPrint@@Base>
   17a1c:	ldr	r3, [r4, #176]	; 0xb0
   17a20:	ldr	r2, [r4, #180]	; 0xb4
   17a24:	adds	r3, r3, #1
   17a28:	adc	r2, r2, #0
   17a2c:	str	r3, [r4, #176]	; 0xb0
   17a30:	str	r2, [r4, #180]	; 0xb4
   17a34:	b	17c60 <UnityAssertFloatSpecial@@Base+0x488>
   17a38:	ldr	r2, [pc, #644]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17a3c:	ldr	r3, [r2, #32]
   17a40:	ldr	ip, [r2, #36]	; 0x24
   17a44:	adds	r3, r3, #1
   17a48:	adc	ip, ip, #0
   17a4c:	str	r3, [r2, #32]
   17a50:	str	ip, [r2, #36]	; 0x24
   17a54:	vabs.f32	s15, s0
   17a58:	vldr	s14, [pc, #604]	; 17cbc <UnityAssertFloatSpecial@@Base+0x4e4>
   17a5c:	vcmp.f32	s15, s14
   17a60:	vmrs	APSR_nzcv, fpscr
   17a64:	movle	r3, #0
   17a68:	ble	17ab0 <UnityAssertFloatSpecial@@Base+0x2d8>
   17a6c:	ldr	r3, [r2, #72]	; 0x48
   17a70:	ldr	ip, [r2, #76]	; 0x4c
   17a74:	adds	r3, r3, #1
   17a78:	adc	ip, ip, #0
   17a7c:	str	r3, [r2, #72]	; 0x48
   17a80:	str	ip, [r2, #76]	; 0x4c
   17a84:	vmov	r3, s0
   17a88:	cmp	r3, #0
   17a8c:	mvnlt	r3, #0
   17a90:	blt	17ab0 <UnityAssertFloatSpecial@@Base+0x2d8>
   17a94:	ldr	r3, [r2, #80]	; 0x50
   17a98:	ldr	ip, [r2, #84]	; 0x54
   17a9c:	adds	r3, r3, #1
   17aa0:	adc	ip, ip, #0
   17aa4:	str	r3, [r2, #80]	; 0x50
   17aa8:	str	ip, [r2, #84]	; 0x54
   17aac:	mov	r3, #1
   17ab0:	vcmpe.f32	s0, #0.0
   17ab4:	vmrs	APSR_nzcv, fpscr
   17ab8:	movpl	r3, #0
   17abc:	andmi	r3, r3, #1
   17ac0:	b	17934 <UnityAssertFloatSpecial@@Base+0x15c>
   17ac4:	ldr	r2, [pc, #504]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17ac8:	ldr	r3, [r2, #40]	; 0x28
   17acc:	ldr	ip, [r2, #44]	; 0x2c
   17ad0:	adds	r3, r3, #1
   17ad4:	adc	ip, ip, #0
   17ad8:	str	r3, [r2, #40]	; 0x28
   17adc:	str	ip, [r2, #44]	; 0x2c
   17ae0:	vcmp.f32	s0, s0
   17ae4:	vmrs	APSR_nzcv, fpscr
   17ae8:	movvs	r3, #1
   17aec:	movvc	r3, #0
   17af0:	b	17934 <UnityAssertFloatSpecial@@Base+0x15c>
   17af4:	ldr	r2, [pc, #456]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17af8:	ldr	r3, [r2, #48]	; 0x30
   17afc:	ldr	ip, [r2, #52]	; 0x34
   17b00:	adds	r3, r3, #1
   17b04:	adc	ip, ip, #0
   17b08:	str	r3, [r2, #48]	; 0x30
   17b0c:	str	ip, [r2, #52]	; 0x34
   17b10:	vabs.f32	s15, s0
   17b14:	vldr	s14, [pc, #416]	; 17cbc <UnityAssertFloatSpecial@@Base+0x4e4>
   17b18:	vcmp.f32	s15, s14
   17b1c:	vmrs	APSR_nzcv, fpscr
   17b20:	ble	17b68 <UnityAssertFloatSpecial@@Base+0x390>
   17b24:	ldr	r3, [r2, #88]	; 0x58
   17b28:	ldr	ip, [r2, #92]	; 0x5c
   17b2c:	adds	r3, r3, #1
   17b30:	adc	ip, ip, #0
   17b34:	str	r3, [r2, #88]	; 0x58
   17b38:	str	ip, [r2, #92]	; 0x5c
   17b3c:	vmov	r3, s0
   17b40:	cmp	r3, #0
   17b44:	blt	17b60 <UnityAssertFloatSpecial@@Base+0x388>
   17b48:	ldr	r3, [r2, #96]	; 0x60
   17b4c:	ldr	ip, [r2, #100]	; 0x64
   17b50:	adds	r3, r3, #1
   17b54:	adc	ip, ip, #0
   17b58:	str	r3, [r2, #96]	; 0x60
   17b5c:	str	ip, [r2, #100]	; 0x64
   17b60:	mov	r3, #0
   17b64:	b	17934 <UnityAssertFloatSpecial@@Base+0x15c>
   17b68:	vcmp.f32	s0, s0
   17b6c:	vmrs	APSR_nzcv, fpscr
   17b70:	bvs	17bc8 <UnityAssertFloatSpecial@@Base+0x3f0>
   17b74:	ldr	r2, [pc, #328]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17b78:	ldr	r3, [r2, #104]	; 0x68
   17b7c:	ldr	ip, [r2, #108]	; 0x6c
   17b80:	adds	r3, r3, #1
   17b84:	adc	ip, ip, #0
   17b88:	str	r3, [r2, #104]	; 0x68
   17b8c:	str	ip, [r2, #108]	; 0x6c
   17b90:	mov	r3, #1
   17b94:	b	17934 <UnityAssertFloatSpecial@@Base+0x15c>
   17b98:	eor	r3, r5, #1
   17b9c:	ldr	ip, [pc, #288]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17ba0:	ldr	r2, [ip, #16]
   17ba4:	ldr	lr, [ip, #20]
   17ba8:	adds	r2, r2, #1
   17bac:	adc	lr, lr, #0
   17bb0:	str	r2, [ip, #16]
   17bb4:	str	lr, [ip, #20]
   17bb8:	ldr	r2, [pc, #268]	; 17ccc <UnityAssertFloatSpecial@@Base+0x4f4>
   17bbc:	str	r2, [sp]
   17bc0:	mov	r4, #0
   17bc4:	b	17934 <UnityAssertFloatSpecial@@Base+0x15c>
   17bc8:	mov	r3, #0
   17bcc:	b	17934 <UnityAssertFloatSpecial@@Base+0x15c>
   17bd0:	mov	r5, r6
   17bd4:	ldr	r3, [r6, #136]	; 0x88
   17bd8:	ldr	r2, [r6, #140]	; 0x8c
   17bdc:	adds	r3, r3, #1
   17be0:	adc	r2, r2, #0
   17be4:	str	r3, [r6, #136]	; 0x88
   17be8:	str	r2, [r6, #140]	; 0x8c
   17bec:	movw	r8, #57420	; 0xe04c
   17bf0:	movt	r8, #1
   17bf4:	add	r0, r8, #296	; 0x128
   17bf8:	bl	158f4 <UnityPrint@@Base>
   17bfc:	ldr	r3, [r6, #144]	; 0x90
   17c00:	ldr	r2, [r6, #148]	; 0x94
   17c04:	adds	r3, r3, #1
   17c08:	adc	r2, r2, #0
   17c0c:	str	r3, [r6, #144]	; 0x90
   17c10:	str	r2, [r6, #148]	; 0x94
   17c14:	add	r3, sp, #16
   17c18:	add	r4, r3, r4, lsl #2
   17c1c:	ldr	r6, [r4, #-16]
   17c20:	mov	r0, r6
   17c24:	bl	158f4 <UnityPrint@@Base>
   17c28:	ldr	r3, [r5, #152]	; 0x98
   17c2c:	ldr	r2, [r5, #156]	; 0x9c
   17c30:	adds	r3, r3, #1
   17c34:	adc	r2, r2, #0
   17c38:	str	r3, [r5, #152]	; 0x98
   17c3c:	str	r2, [r5, #156]	; 0x9c
   17c40:	add	r0, r8, #48	; 0x30
   17c44:	bl	158f4 <UnityPrint@@Base>
   17c48:	ldr	r3, [r5, #160]	; 0xa0
   17c4c:	ldr	r2, [r5, #164]	; 0xa4
   17c50:	adds	r3, r3, #1
   17c54:	adc	r2, r2, #0
   17c58:	str	r3, [r5, #160]	; 0xa0
   17c5c:	str	r2, [r5, #164]	; 0xa4
   17c60:	mov	r0, r6
   17c64:	bl	158f4 <UnityPrint@@Base>
   17c68:	ldr	r4, [pc, #84]	; 17cc4 <UnityAssertFloatSpecial@@Base+0x4ec>
   17c6c:	ldr	r3, [r4, #184]	; 0xb8
   17c70:	ldr	r2, [r4, #188]	; 0xbc
   17c74:	adds	r3, r3, #1
   17c78:	adc	r2, r2, #0
   17c7c:	str	r3, [r4, #184]	; 0xb8
   17c80:	str	r2, [r4, #188]	; 0xbc
   17c84:	mov	r0, r7
   17c88:	bl	15d18 <UnityPrint@@Base+0x424>
   17c8c:	ldr	r3, [r4, #192]	; 0xc0
   17c90:	ldr	r2, [r4, #196]	; 0xc4
   17c94:	adds	r3, r3, #1
   17c98:	adc	r2, r2, #0
   17c9c:	str	r3, [r4, #192]	; 0xc0
   17ca0:	str	r2, [r4, #196]	; 0xc4
   17ca4:	movw	r0, #5400	; 0x1518
   17ca8:	movt	r0, #3
   17cac:	mov	r1, #1
   17cb0:	str	r1, [r0, #32]
   17cb4:	add	r0, r0, #40	; 0x28
   17cb8:	bl	11fcc <longjmp@plt>
   17cbc:	svcvc	0x007fffff
   17cc0:	andeq	lr, r1, r0, asr r1
   17cc4:	andeq	r0, r3, r0, asr fp
   17cc8:	andeq	lr, r1, r8, rrx
   17ccc:	andeq	lr, r1, r0, ror #2

00017cd0 <UnityAssertNumbersWithin@@Base>:
   17cd0:	movw	ip, #5400	; 0x1518
   17cd4:	movt	ip, #3
   17cd8:	ldr	ip, [ip, #32]
   17cdc:	cmp	ip, #0
   17ce0:	bne	17fb8 <UnityAssertNumbersWithin@@Base+0x2e8>
   17ce4:	movw	ip, #5400	; 0x1518
   17ce8:	movt	ip, #3
   17cec:	ldr	ip, [ip, #36]	; 0x24
   17cf0:	cmp	ip, #0
   17cf4:	bne	17d84 <UnityAssertNumbersWithin@@Base+0xb4>
   17cf8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17cfc:	strd	r6, [sp, #8]
   17d00:	strd	r8, [sp, #16]
   17d04:	str	sl, [sp, #24]
   17d08:	str	lr, [sp, #28]
   17d0c:	ldr	ip, [sp, #36]	; 0x24
   17d10:	tst	ip, #16
   17d14:	beq	17de0 <UnityAssertNumbersWithin@@Base+0x110>
   17d18:	cmp	r2, r1
   17d1c:	ble	17da4 <UnityAssertNumbersWithin@@Base+0xd4>
   17d20:	ldr	lr, [pc, #688]	; 17fd8 <UnityAssertNumbersWithin@@Base+0x308>
   17d24:	ldr	ip, [lr, #8]
   17d28:	ldr	r4, [lr, #12]
   17d2c:	adds	ip, ip, #1
   17d30:	adc	r4, r4, #0
   17d34:	str	ip, [lr, #8]
   17d38:	str	r4, [lr, #12]
   17d3c:	movw	ip, #5400	; 0x1518
   17d40:	movt	ip, #3
   17d44:	sub	lr, r2, r1
   17d48:	cmp	lr, r0
   17d4c:	movls	lr, #0
   17d50:	movhi	lr, #1
   17d54:	str	lr, [ip, #32]
   17d58:	movw	ip, #5400	; 0x1518
   17d5c:	movt	ip, #3
   17d60:	ldr	ip, [ip, #32]
   17d64:	cmp	ip, #0
   17d68:	bne	17e60 <UnityAssertNumbersWithin@@Base+0x190>
   17d6c:	ldrd	r4, [sp]
   17d70:	ldrd	r6, [sp, #8]
   17d74:	ldrd	r8, [sp, #16]
   17d78:	ldr	sl, [sp, #24]
   17d7c:	add	sp, sp, #28
   17d80:	pop	{pc}		; (ldr pc, [sp], #4)
   17d84:	ldr	r2, [pc, #588]	; 17fd8 <UnityAssertNumbersWithin@@Base+0x308>
   17d88:	ldr	r3, [r2]
   17d8c:	ldr	r1, [r2, #4]
   17d90:	adds	r3, r3, #1
   17d94:	adc	r1, r1, #0
   17d98:	str	r3, [r2]
   17d9c:	str	r1, [r2, #4]
   17da0:	bx	lr
   17da4:	ldr	lr, [pc, #556]	; 17fd8 <UnityAssertNumbersWithin@@Base+0x308>
   17da8:	ldr	ip, [lr, #16]
   17dac:	ldr	r4, [lr, #20]
   17db0:	adds	ip, ip, #1
   17db4:	adc	r4, r4, #0
   17db8:	str	ip, [lr, #16]
   17dbc:	str	r4, [lr, #20]
   17dc0:	movw	ip, #5400	; 0x1518
   17dc4:	movt	ip, #3
   17dc8:	sub	lr, r1, r2
   17dcc:	cmp	lr, r0
   17dd0:	movls	lr, #0
   17dd4:	movhi	lr, #1
   17dd8:	str	lr, [ip, #32]
   17ddc:	b	17d58 <UnityAssertNumbersWithin@@Base+0x88>
   17de0:	cmp	r2, r1
   17de4:	bls	17e24 <UnityAssertNumbersWithin@@Base+0x154>
   17de8:	ldr	lr, [pc, #488]	; 17fd8 <UnityAssertNumbersWithin@@Base+0x308>
   17dec:	ldr	ip, [lr, #24]
   17df0:	ldr	r4, [lr, #28]
   17df4:	adds	ip, ip, #1
   17df8:	adc	r4, r4, #0
   17dfc:	str	ip, [lr, #24]
   17e00:	str	r4, [lr, #28]
   17e04:	movw	ip, #5400	; 0x1518
   17e08:	movt	ip, #3
   17e0c:	sub	lr, r2, r1
   17e10:	cmp	lr, r0
   17e14:	movls	lr, #0
   17e18:	movhi	lr, #1
   17e1c:	str	lr, [ip, #32]
   17e20:	b	17d58 <UnityAssertNumbersWithin@@Base+0x88>
   17e24:	ldr	lr, [pc, #428]	; 17fd8 <UnityAssertNumbersWithin@@Base+0x308>
   17e28:	ldr	ip, [lr, #32]
   17e2c:	ldr	r4, [lr, #36]	; 0x24
   17e30:	adds	ip, ip, #1
   17e34:	adc	r4, r4, #0
   17e38:	str	ip, [lr, #32]
   17e3c:	str	r4, [lr, #36]	; 0x24
   17e40:	movw	ip, #5400	; 0x1518
   17e44:	movt	ip, #3
   17e48:	sub	lr, r1, r2
   17e4c:	cmp	lr, r0
   17e50:	movls	lr, #0
   17e54:	movhi	lr, #1
   17e58:	str	lr, [ip, #32]
   17e5c:	b	17d58 <UnityAssertNumbersWithin@@Base+0x88>
   17e60:	mov	r5, r3
   17e64:	mov	r7, r2
   17e68:	mov	r8, r1
   17e6c:	mov	r9, r0
   17e70:	ldr	r4, [pc, #352]	; 17fd8 <UnityAssertNumbersWithin@@Base+0x308>
   17e74:	ldr	r3, [r4, #40]	; 0x28
   17e78:	ldr	r2, [r4, #44]	; 0x2c
   17e7c:	adds	r3, r3, #1
   17e80:	adc	r2, r2, #0
   17e84:	str	r3, [r4, #40]	; 0x28
   17e88:	str	r2, [r4, #44]	; 0x2c
   17e8c:	ldr	r0, [sp, #32]
   17e90:	bl	16000 <UnityPrint@@Base+0x70c>
   17e94:	ldr	r3, [r4, #48]	; 0x30
   17e98:	ldr	r2, [r4, #52]	; 0x34
   17e9c:	adds	r3, r3, #1
   17ea0:	adc	r2, r2, #0
   17ea4:	str	r3, [r4, #48]	; 0x30
   17ea8:	str	r2, [r4, #52]	; 0x34
   17eac:	movw	r6, #57420	; 0xe04c
   17eb0:	movt	r6, #1
   17eb4:	add	r0, r6, #232	; 0xe8
   17eb8:	bl	158f4 <UnityPrint@@Base>
   17ebc:	ldr	r3, [r4, #56]	; 0x38
   17ec0:	ldr	r2, [r4, #60]	; 0x3c
   17ec4:	adds	r3, r3, #1
   17ec8:	adc	r2, r2, #0
   17ecc:	str	r3, [r4, #56]	; 0x38
   17ed0:	str	r2, [r4, #60]	; 0x3c
   17ed4:	ldr	r1, [sp, #36]	; 0x24
   17ed8:	mov	r0, r9
   17edc:	bl	15588 <UnityPrintNumberByStyle@@Base>
   17ee0:	ldr	r3, [r4, #64]	; 0x40
   17ee4:	ldr	r2, [r4, #68]	; 0x44
   17ee8:	adds	r3, r3, #1
   17eec:	adc	r2, r2, #0
   17ef0:	str	r3, [r4, #64]	; 0x40
   17ef4:	str	r2, [r4, #68]	; 0x44
   17ef8:	add	r0, r6, #28
   17efc:	bl	158f4 <UnityPrint@@Base>
   17f00:	ldr	r3, [r4, #72]	; 0x48
   17f04:	ldr	r2, [r4, #76]	; 0x4c
   17f08:	adds	r3, r3, #1
   17f0c:	adc	r2, r2, #0
   17f10:	str	r3, [r4, #72]	; 0x48
   17f14:	str	r2, [r4, #76]	; 0x4c
   17f18:	ldr	r1, [sp, #36]	; 0x24
   17f1c:	mov	r0, r8
   17f20:	bl	15588 <UnityPrintNumberByStyle@@Base>
   17f24:	ldr	r3, [r4, #80]	; 0x50
   17f28:	ldr	r2, [r4, #84]	; 0x54
   17f2c:	adds	r3, r3, #1
   17f30:	adc	r2, r2, #0
   17f34:	str	r3, [r4, #80]	; 0x50
   17f38:	str	r2, [r4, #84]	; 0x54
   17f3c:	add	r0, r6, #48	; 0x30
   17f40:	bl	158f4 <UnityPrint@@Base>
   17f44:	ldr	r3, [r4, #88]	; 0x58
   17f48:	ldr	r2, [r4, #92]	; 0x5c
   17f4c:	adds	r3, r3, #1
   17f50:	adc	r2, r2, #0
   17f54:	str	r3, [r4, #88]	; 0x58
   17f58:	str	r2, [r4, #92]	; 0x5c
   17f5c:	ldr	r1, [sp, #36]	; 0x24
   17f60:	mov	r0, r7
   17f64:	bl	15588 <UnityPrintNumberByStyle@@Base>
   17f68:	ldr	r3, [r4, #96]	; 0x60
   17f6c:	ldr	r2, [r4, #100]	; 0x64
   17f70:	adds	r3, r3, #1
   17f74:	adc	r2, r2, #0
   17f78:	str	r3, [r4, #96]	; 0x60
   17f7c:	str	r2, [r4, #100]	; 0x64
   17f80:	mov	r0, r5
   17f84:	bl	15d18 <UnityPrint@@Base+0x424>
   17f88:	ldr	r3, [r4, #104]	; 0x68
   17f8c:	ldr	r2, [r4, #108]	; 0x6c
   17f90:	adds	r3, r3, #1
   17f94:	adc	r2, r2, #0
   17f98:	str	r3, [r4, #104]	; 0x68
   17f9c:	str	r2, [r4, #108]	; 0x6c
   17fa0:	movw	r0, #5400	; 0x1518
   17fa4:	movt	r0, #3
   17fa8:	mov	r1, #1
   17fac:	str	r1, [r0, #32]
   17fb0:	add	r0, r0, #40	; 0x28
   17fb4:	bl	11fcc <longjmp@plt>
   17fb8:	ldr	r2, [pc, #24]	; 17fd8 <UnityAssertNumbersWithin@@Base+0x308>
   17fbc:	ldr	r3, [r2, #-8]
   17fc0:	ldr	r1, [r2, #-4]
   17fc4:	adds	r3, r3, #1
   17fc8:	adc	r1, r1, #0
   17fcc:	str	r3, [r2, #-8]
   17fd0:	str	r1, [r2, #-4]
   17fd4:	bx	lr
   17fd8:	andeq	r0, r3, r0, lsr #24

00017fdc <UnityAssertEqualString@@Base>:
   17fdc:	movw	ip, #5400	; 0x1518
   17fe0:	movt	ip, #3
   17fe4:	ldr	ip, [ip, #32]
   17fe8:	cmp	ip, #0
   17fec:	bne	18258 <UnityAssertEqualString@@Base+0x27c>
   17ff0:	movw	ip, #5400	; 0x1518
   17ff4:	movt	ip, #3
   17ff8:	ldr	ip, [ip, #36]	; 0x24
   17ffc:	cmp	ip, #0
   18000:	bne	18058 <UnityAssertEqualString@@Base+0x7c>
   18004:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18008:	strd	r6, [sp, #8]
   1800c:	strd	r8, [sp, #16]
   18010:	strd	sl, [sp, #24]
   18014:	str	lr, [sp, #32]
   18018:	sub	sp, sp, #12
   1801c:	adds	r5, r1, #0
   18020:	movne	r5, #1
   18024:	cmp	r0, #0
   18028:	moveq	r5, #0
   1802c:	cmp	r5, #0
   18030:	beq	18160 <UnityAssertEqualString@@Base+0x184>
   18034:	ldr	lr, [pc, #572]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   18038:	ldr	ip, [lr, #24]
   1803c:	ldr	r4, [lr, #28]
   18040:	sub	lr, r0, #1
   18044:	sub	r6, r1, #1
   18048:	mov	r8, #0
   1804c:	rsb	fp, r0, #1
   18050:	str	r5, [sp, #4]
   18054:	b	18090 <UnityAssertEqualString@@Base+0xb4>
   18058:	ldr	r2, [pc, #536]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   1805c:	ldr	r3, [r2, #8]
   18060:	ldr	r1, [r2, #12]
   18064:	adds	r3, r3, #1
   18068:	adc	r1, r1, #0
   1806c:	str	r3, [r2, #8]
   18070:	str	r1, [r2, #12]
   18074:	bx	lr
   18078:	adds	ip, ip, #1
   1807c:	adc	r4, r4, #0
   18080:	ldrb	r7, [r6, #1]!
   18084:	cmp	r7, r5
   18088:	bne	18114 <UnityAssertEqualString@@Base+0x138>
   1808c:	ldr	r8, [sp, #4]
   18090:	mov	sl, ip
   18094:	mov	r9, r4
   18098:	add	r7, fp, lr
   1809c:	ldrb	r5, [lr, #1]!
   180a0:	cmp	r5, #0
   180a4:	bne	18078 <UnityAssertEqualString@@Base+0x9c>
   180a8:	cmp	r8, #0
   180ac:	beq	180bc <UnityAssertEqualString@@Base+0xe0>
   180b0:	ldr	ip, [pc, #448]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   180b4:	str	sl, [ip, #24]
   180b8:	str	r4, [ip, #28]
   180bc:	ldr	lr, [pc, #436]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   180c0:	ldr	ip, [lr, #32]
   180c4:	ldr	r4, [lr, #36]	; 0x24
   180c8:	adds	ip, ip, #1
   180cc:	adc	r4, r4, #0
   180d0:	str	ip, [lr, #32]
   180d4:	str	r4, [lr, #36]	; 0x24
   180d8:	ldrb	ip, [r1, r7]
   180dc:	cmp	ip, #0
   180e0:	beq	1812c <UnityAssertEqualString@@Base+0x150>
   180e4:	ldr	lr, [pc, #396]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   180e8:	ldr	ip, [lr, #16]
   180ec:	ldr	r4, [lr, #20]
   180f0:	adds	ip, ip, #1
   180f4:	adc	r4, r4, #0
   180f8:	str	ip, [lr, #16]
   180fc:	str	r4, [lr, #20]
   18100:	movw	ip, #5400	; 0x1518
   18104:	movt	ip, #3
   18108:	mov	lr, #1
   1810c:	str	lr, [ip, #32]
   18110:	b	18194 <UnityAssertEqualString@@Base+0x1b8>
   18114:	cmp	r8, #0
   18118:	beq	180e4 <UnityAssertEqualString@@Base+0x108>
   1811c:	ldr	ip, [pc, #340]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   18120:	str	sl, [ip, #24]
   18124:	str	r9, [ip, #28]
   18128:	b	180e4 <UnityAssertEqualString@@Base+0x108>
   1812c:	ldr	r3, [lr, #40]	; 0x28
   18130:	ldr	r1, [lr, #44]	; 0x2c
   18134:	adds	r3, r3, #1
   18138:	adc	r1, r1, #0
   1813c:	str	r3, [lr, #40]	; 0x28
   18140:	str	r1, [lr, #44]	; 0x2c
   18144:	add	sp, sp, #12
   18148:	ldrd	r4, [sp]
   1814c:	ldrd	r6, [sp, #8]
   18150:	ldrd	r8, [sp, #16]
   18154:	ldrd	sl, [sp, #24]
   18158:	add	sp, sp, #32
   1815c:	pop	{pc}		; (ldr pc, [sp], #4)
   18160:	cmp	r0, r1
   18164:	beq	18238 <UnityAssertEqualString@@Base+0x25c>
   18168:	ldr	lr, [pc, #264]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   1816c:	ldr	ip, [lr, #48]	; 0x30
   18170:	ldr	r4, [lr, #52]	; 0x34
   18174:	adds	ip, ip, #1
   18178:	adc	r4, r4, #0
   1817c:	str	ip, [lr, #48]	; 0x30
   18180:	str	r4, [lr, #52]	; 0x34
   18184:	movw	ip, #5400	; 0x1518
   18188:	movt	ip, #3
   1818c:	mov	lr, #1
   18190:	str	lr, [ip, #32]
   18194:	mov	r5, r2
   18198:	mov	r6, r1
   1819c:	mov	r7, r0
   181a0:	ldr	r4, [pc, #208]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   181a4:	ldr	r2, [r4, #64]	; 0x40
   181a8:	ldr	r1, [r4, #68]	; 0x44
   181ac:	adds	r2, r2, #1
   181b0:	adc	r1, r1, #0
   181b4:	str	r2, [r4, #64]	; 0x40
   181b8:	str	r1, [r4, #68]	; 0x44
   181bc:	mov	r0, r3
   181c0:	bl	16000 <UnityPrint@@Base+0x70c>
   181c4:	ldr	r3, [r4, #72]	; 0x48
   181c8:	ldr	r2, [r4, #76]	; 0x4c
   181cc:	adds	r3, r3, #1
   181d0:	adc	r2, r2, #0
   181d4:	str	r3, [r4, #72]	; 0x48
   181d8:	str	r2, [r4, #76]	; 0x4c
   181dc:	mov	r1, r6
   181e0:	mov	r0, r7
   181e4:	bl	15b08 <UnityPrint@@Base+0x214>
   181e8:	ldr	r3, [r4, #80]	; 0x50
   181ec:	ldr	r2, [r4, #84]	; 0x54
   181f0:	adds	r3, r3, #1
   181f4:	adc	r2, r2, #0
   181f8:	str	r3, [r4, #80]	; 0x50
   181fc:	str	r2, [r4, #84]	; 0x54
   18200:	mov	r0, r5
   18204:	bl	15d18 <UnityPrint@@Base+0x424>
   18208:	ldr	r3, [r4, #88]	; 0x58
   1820c:	ldr	r2, [r4, #92]	; 0x5c
   18210:	adds	r3, r3, #1
   18214:	adc	r2, r2, #0
   18218:	str	r3, [r4, #88]	; 0x58
   1821c:	str	r2, [r4, #92]	; 0x5c
   18220:	movw	r0, #5400	; 0x1518
   18224:	movt	r0, #3
   18228:	mov	r1, #1
   1822c:	str	r1, [r0, #32]
   18230:	add	r0, r0, #40	; 0x28
   18234:	bl	11fcc <longjmp@plt>
   18238:	ldr	r2, [pc, #56]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   1823c:	ldr	r3, [r2, #56]	; 0x38
   18240:	ldr	r1, [r2, #60]	; 0x3c
   18244:	adds	r3, r3, #1
   18248:	adc	r1, r1, #0
   1824c:	str	r3, [r2, #56]	; 0x38
   18250:	str	r1, [r2, #60]	; 0x3c
   18254:	b	18144 <UnityAssertEqualString@@Base+0x168>
   18258:	ldr	r2, [pc, #24]	; 18278 <UnityAssertEqualString@@Base+0x29c>
   1825c:	ldr	r3, [r2]
   18260:	ldr	r1, [r2, #4]
   18264:	adds	r3, r3, #1
   18268:	adc	r1, r1, #0
   1826c:	str	r3, [r2]
   18270:	str	r1, [r2, #4]
   18274:	bx	lr
   18278:	muleq	r3, r0, ip

0001827c <UnityAssertEqualStringLen@@Base>:
   1827c:	movw	ip, #5400	; 0x1518
   18280:	movt	ip, #3
   18284:	ldr	ip, [ip, #32]
   18288:	cmp	ip, #0
   1828c:	bne	18774 <UnityAssertEqualStringLen@@Base+0x4f8>
   18290:	movw	ip, #5400	; 0x1518
   18294:	movt	ip, #3
   18298:	ldr	ip, [ip, #36]	; 0x24
   1829c:	cmp	ip, #0
   182a0:	bne	18310 <UnityAssertEqualStringLen@@Base+0x94>
   182a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   182a8:	strd	r6, [sp, #8]
   182ac:	strd	r8, [sp, #16]
   182b0:	strd	sl, [sp, #24]
   182b4:	str	lr, [sp, #32]
   182b8:	sub	sp, sp, #12
   182bc:	str	r3, [sp, #4]
   182c0:	mov	r7, r2
   182c4:	mov	r6, r1
   182c8:	mov	r8, r0
   182cc:	adds	r2, r1, #0
   182d0:	movne	r2, #1
   182d4:	cmp	r0, #0
   182d8:	moveq	r2, #0
   182dc:	cmp	r2, #0
   182e0:	beq	1863c <UnityAssertEqualStringLen@@Base+0x3c0>
   182e4:	ldr	r1, [pc, #1192]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   182e8:	ldr	r3, [r1, #24]
   182ec:	ldr	r4, [r1, #28]
   182f0:	sub	r5, r0, #1
   182f4:	sub	ip, r6, #1
   182f8:	sub	fp, r7, #1
   182fc:	add	fp, fp, r6
   18300:	mov	r1, #0
   18304:	rsb	sl, r6, #1
   18308:	str	r2, [sp]
   1830c:	b	18590 <UnityAssertEqualStringLen@@Base+0x314>
   18310:	ldr	r2, [pc, #1148]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   18314:	ldr	r3, [r2, #8]
   18318:	ldr	r1, [r2, #12]
   1831c:	adds	r3, r3, #1
   18320:	adc	r1, r1, #0
   18324:	str	r3, [r2, #8]
   18328:	str	r1, [r2, #12]
   1832c:	bx	lr
   18330:	cmp	r1, #0
   18334:	beq	18344 <UnityAssertEqualStringLen@@Base+0xc8>
   18338:	ldr	r3, [pc, #1108]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   1833c:	str	r9, [r3, #24]
   18340:	str	r0, [r3, #28]
   18344:	movw	r5, #1264	; 0x4f0
   18348:	movt	r5, #3
   1834c:	ldr	r3, [r5, #2064]	; 0x810
   18350:	ldr	r2, [r5, #2068]	; 0x814
   18354:	adds	r3, r3, #1
   18358:	adc	r2, r2, #0
   1835c:	str	r3, [r5, #2064]	; 0x810
   18360:	str	r2, [r5, #2068]	; 0x814
   18364:	movw	r3, #5400	; 0x1518
   18368:	movt	r3, #3
   1836c:	mov	r2, #1
   18370:	str	r2, [r3, #32]
   18374:	ldr	r3, [r5, #2120]	; 0x848
   18378:	ldr	r2, [r5, #2124]	; 0x84c
   1837c:	adds	r3, r3, #1
   18380:	adc	r2, r2, #0
   18384:	str	r3, [r5, #2120]	; 0x848
   18388:	str	r2, [r5, #2124]	; 0x84c
   1838c:	ldr	r0, [sp, #48]	; 0x30
   18390:	bl	16000 <UnityPrint@@Base+0x70c>
   18394:	ldr	r3, [r5, #2128]	; 0x850
   18398:	ldr	r2, [r5, #2132]	; 0x854
   1839c:	adds	r3, r3, #1
   183a0:	adc	r2, r2, #0
   183a4:	str	r3, [r5, #2128]	; 0x850
   183a8:	str	r2, [r5, #2132]	; 0x854
   183ac:	ldr	r3, [r5, #2152]	; 0x868
   183b0:	ldr	r2, [r5, #2156]	; 0x86c
   183b4:	adds	r3, r3, #1
   183b8:	adc	r2, r2, #0
   183bc:	str	r3, [r5, #2152]	; 0x868
   183c0:	str	r2, [r5, #2156]	; 0x86c
   183c4:	ldr	r0, [pc, #972]	; 18798 <UnityAssertEqualStringLen@@Base+0x51c>
   183c8:	bl	158f4 <UnityPrint@@Base>
   183cc:	ldr	r4, [pc, #968]	; 1879c <UnityAssertEqualStringLen@@Base+0x520>
   183d0:	ldr	r3, [r4]
   183d4:	ldr	r2, [r4, #4]
   183d8:	adds	r3, r3, #1
   183dc:	adc	r2, r2, #0
   183e0:	str	r3, [r4]
   183e4:	str	r2, [r4, #4]
   183e8:	movw	r5, #64564	; 0xfc34
   183ec:	movt	r5, #2
   183f0:	ldr	r1, [r5]
   183f4:	mov	r0, #39	; 0x27
   183f8:	bl	120f8 <putc@plt>
   183fc:	ldr	r3, [r4, #16]
   18400:	ldr	r2, [r4, #20]
   18404:	adds	r3, r3, #1
   18408:	adc	r2, r2, #0
   1840c:	str	r3, [r4, #16]
   18410:	str	r2, [r4, #20]
   18414:	mov	r1, r7
   18418:	mov	r0, r8
   1841c:	bl	15688 <UnityPrintLen@@Base>
   18420:	ldr	r3, [r4, #24]
   18424:	ldr	r2, [r4, #28]
   18428:	adds	r3, r3, #1
   1842c:	adc	r2, r2, #0
   18430:	str	r3, [r4, #24]
   18434:	str	r2, [r4, #28]
   18438:	ldr	r1, [r5]
   1843c:	mov	r0, #39	; 0x27
   18440:	bl	120f8 <putc@plt>
   18444:	ldr	r3, [r4, #32]
   18448:	ldr	r2, [r4, #36]	; 0x24
   1844c:	adds	r3, r3, #1
   18450:	adc	r2, r2, #0
   18454:	str	r3, [r4, #32]
   18458:	str	r2, [r4, #36]	; 0x24
   1845c:	ldr	r0, [pc, #828]	; 187a0 <UnityAssertEqualStringLen@@Base+0x524>
   18460:	bl	158f4 <UnityPrint@@Base>
   18464:	cmp	r6, #0
   18468:	beq	18734 <UnityAssertEqualStringLen@@Base+0x4b8>
   1846c:	ldr	r4, [pc, #808]	; 1879c <UnityAssertEqualStringLen@@Base+0x520>
   18470:	ldr	r3, [r4, #48]	; 0x30
   18474:	ldr	r2, [r4, #52]	; 0x34
   18478:	adds	r3, r3, #1
   1847c:	adc	r2, r2, #0
   18480:	str	r3, [r4, #48]	; 0x30
   18484:	str	r2, [r4, #52]	; 0x34
   18488:	movw	r5, #64564	; 0xfc34
   1848c:	movt	r5, #2
   18490:	ldr	r1, [r5]
   18494:	mov	r0, #39	; 0x27
   18498:	bl	120f8 <putc@plt>
   1849c:	ldr	r3, [r4, #64]	; 0x40
   184a0:	ldr	r2, [r4, #68]	; 0x44
   184a4:	adds	r3, r3, #1
   184a8:	adc	r2, r2, #0
   184ac:	str	r3, [r4, #64]	; 0x40
   184b0:	str	r2, [r4, #68]	; 0x44
   184b4:	mov	r1, r7
   184b8:	mov	r0, r6
   184bc:	bl	15688 <UnityPrintLen@@Base>
   184c0:	ldr	r3, [r4, #72]	; 0x48
   184c4:	ldr	r2, [r4, #76]	; 0x4c
   184c8:	adds	r3, r3, #1
   184cc:	adc	r2, r2, #0
   184d0:	str	r3, [r4, #72]	; 0x48
   184d4:	str	r2, [r4, #76]	; 0x4c
   184d8:	ldr	r1, [r5]
   184dc:	mov	r0, #39	; 0x27
   184e0:	bl	120f8 <putc@plt>
   184e4:	ldr	r3, [r4, #80]	; 0x50
   184e8:	ldr	r2, [r4, #84]	; 0x54
   184ec:	adds	r3, r3, #1
   184f0:	adc	r2, r2, #0
   184f4:	str	r3, [r4, #80]	; 0x50
   184f8:	str	r2, [r4, #84]	; 0x54
   184fc:	ldr	r4, [pc, #656]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   18500:	ldr	r3, [r4, #88]	; 0x58
   18504:	ldr	r2, [r4, #92]	; 0x5c
   18508:	adds	r3, r3, #1
   1850c:	adc	r2, r2, #0
   18510:	str	r3, [r4, #88]	; 0x58
   18514:	str	r2, [r4, #92]	; 0x5c
   18518:	ldr	r0, [sp, #4]
   1851c:	bl	15d18 <UnityPrint@@Base+0x424>
   18520:	ldr	r3, [r4, #96]	; 0x60
   18524:	ldr	r2, [r4, #100]	; 0x64
   18528:	adds	r3, r3, #1
   1852c:	adc	r2, r2, #0
   18530:	str	r3, [r4, #96]	; 0x60
   18534:	str	r2, [r4, #100]	; 0x64
   18538:	movw	r0, #5400	; 0x1518
   1853c:	movt	r0, #3
   18540:	mov	r1, #1
   18544:	str	r1, [r0, #32]
   18548:	add	r0, r0, #40	; 0x28
   1854c:	bl	11fcc <longjmp@plt>
   18550:	mov	r2, r1
   18554:	ldr	r3, [r1, #40]	; 0x28
   18558:	ldr	r1, [r1, #44]	; 0x2c
   1855c:	adds	r3, r3, #1
   18560:	adc	r1, r1, #0
   18564:	str	r3, [r2, #40]	; 0x28
   18568:	str	r1, [r2, #44]	; 0x2c
   1856c:	b	18608 <UnityAssertEqualStringLen@@Base+0x38c>
   18570:	cmp	ip, fp
   18574:	beq	18624 <UnityAssertEqualStringLen@@Base+0x3a8>
   18578:	adds	r3, r3, #1
   1857c:	adc	r4, r4, #0
   18580:	ldrb	r2, [ip, #1]!
   18584:	cmp	r2, lr
   18588:	bne	18330 <UnityAssertEqualStringLen@@Base+0xb4>
   1858c:	ldr	r1, [sp]
   18590:	mov	r9, r3
   18594:	mov	r0, r4
   18598:	add	r2, sl, ip
   1859c:	ldrb	lr, [r5, #1]!
   185a0:	cmp	lr, #0
   185a4:	bne	18570 <UnityAssertEqualStringLen@@Base+0x2f4>
   185a8:	cmp	r1, #0
   185ac:	beq	185bc <UnityAssertEqualStringLen@@Base+0x340>
   185b0:	ldr	r3, [pc, #476]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   185b4:	str	r9, [r3, #24]
   185b8:	str	r4, [r3, #28]
   185bc:	ldr	r1, [pc, #464]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   185c0:	ldr	r3, [r1, #32]
   185c4:	ldr	r0, [r1, #36]	; 0x24
   185c8:	adds	r3, r3, #1
   185cc:	adc	r0, r0, #0
   185d0:	str	r3, [r1, #32]
   185d4:	str	r0, [r1, #36]	; 0x24
   185d8:	ldrb	r3, [r6, r2]
   185dc:	cmp	r3, #0
   185e0:	beq	18550 <UnityAssertEqualStringLen@@Base+0x2d4>
   185e4:	cmp	r7, r2
   185e8:	bhi	18344 <UnityAssertEqualStringLen@@Base+0xc8>
   185ec:	ldr	r2, [pc, #416]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   185f0:	ldr	r3, [r2, #48]	; 0x30
   185f4:	ldr	r1, [r2, #52]	; 0x34
   185f8:	adds	r3, r3, #1
   185fc:	adc	r1, r1, #0
   18600:	str	r3, [r2, #48]	; 0x30
   18604:	str	r1, [r2, #52]	; 0x34
   18608:	add	sp, sp, #12
   1860c:	ldrd	r4, [sp]
   18610:	ldrd	r6, [sp, #8]
   18614:	ldrd	r8, [sp, #16]
   18618:	ldrd	sl, [sp, #24]
   1861c:	add	sp, sp, #32
   18620:	pop	{pc}		; (ldr pc, [sp], #4)
   18624:	cmp	r1, #0
   18628:	beq	185ec <UnityAssertEqualStringLen@@Base+0x370>
   1862c:	ldr	r3, [pc, #352]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   18630:	str	r9, [r3, #24]
   18634:	str	r4, [r3, #28]
   18638:	b	185ec <UnityAssertEqualStringLen@@Base+0x370>
   1863c:	cmp	r0, r1
   18640:	beq	18714 <UnityAssertEqualStringLen@@Base+0x498>
   18644:	movw	r5, #1264	; 0x4f0
   18648:	movt	r5, #3
   1864c:	ldr	r3, [r5, #2104]	; 0x838
   18650:	ldr	r2, [r5, #2108]	; 0x83c
   18654:	adds	r3, r3, #1
   18658:	adc	r2, r2, #0
   1865c:	str	r3, [r5, #2104]	; 0x838
   18660:	str	r2, [r5, #2108]	; 0x83c
   18664:	movw	r3, #5400	; 0x1518
   18668:	movt	r3, #3
   1866c:	mov	r2, #1
   18670:	str	r2, [r3, #32]
   18674:	ldr	r3, [r5, #2120]	; 0x848
   18678:	ldr	r2, [r5, #2124]	; 0x84c
   1867c:	adds	r3, r3, #1
   18680:	adc	r2, r2, #0
   18684:	str	r3, [r5, #2120]	; 0x848
   18688:	str	r2, [r5, #2124]	; 0x84c
   1868c:	ldr	r0, [sp, #48]	; 0x30
   18690:	bl	16000 <UnityPrint@@Base+0x70c>
   18694:	ldr	r3, [r5, #2128]	; 0x850
   18698:	ldr	r2, [r5, #2132]	; 0x854
   1869c:	adds	r3, r3, #1
   186a0:	adc	r2, r2, #0
   186a4:	str	r3, [r5, #2128]	; 0x850
   186a8:	str	r2, [r5, #2132]	; 0x854
   186ac:	ldr	r3, [r5, #2152]	; 0x868
   186b0:	ldr	r2, [r5, #2156]	; 0x86c
   186b4:	adds	r3, r3, #1
   186b8:	adc	r2, r2, #0
   186bc:	str	r3, [r5, #2152]	; 0x868
   186c0:	str	r2, [r5, #2156]	; 0x86c
   186c4:	ldr	r0, [pc, #204]	; 18798 <UnityAssertEqualStringLen@@Base+0x51c>
   186c8:	bl	158f4 <UnityPrint@@Base>
   186cc:	cmp	r8, #0
   186d0:	bne	183cc <UnityAssertEqualStringLen@@Base+0x150>
   186d4:	ldr	r4, [pc, #192]	; 1879c <UnityAssertEqualStringLen@@Base+0x520>
   186d8:	ldr	r3, [r4, #8]
   186dc:	ldr	r2, [r4, #12]
   186e0:	adds	r3, r3, #1
   186e4:	adc	r2, r2, #0
   186e8:	str	r3, [r4, #8]
   186ec:	str	r2, [r4, #12]
   186f0:	ldr	r0, [pc, #172]	; 187a4 <UnityAssertEqualStringLen@@Base+0x528>
   186f4:	bl	158f4 <UnityPrint@@Base>
   186f8:	ldr	r3, [r4, #40]	; 0x28
   186fc:	ldr	r2, [r4, #44]	; 0x2c
   18700:	adds	r3, r3, #1
   18704:	adc	r2, r2, #0
   18708:	str	r3, [r4, #40]	; 0x28
   1870c:	str	r2, [r4, #44]	; 0x2c
   18710:	b	1845c <UnityAssertEqualStringLen@@Base+0x1e0>
   18714:	ldr	r2, [pc, #120]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   18718:	ldr	r3, [r2, #64]	; 0x40
   1871c:	ldr	r1, [r2, #68]	; 0x44
   18720:	adds	r3, r3, #1
   18724:	adc	r1, r1, #0
   18728:	str	r3, [r2, #64]	; 0x40
   1872c:	str	r1, [r2, #68]	; 0x44
   18730:	b	18608 <UnityAssertEqualStringLen@@Base+0x38c>
   18734:	ldr	r4, [pc, #96]	; 1879c <UnityAssertEqualStringLen@@Base+0x520>
   18738:	ldr	r3, [r4, #56]	; 0x38
   1873c:	ldr	r2, [r4, #60]	; 0x3c
   18740:	adds	r3, r3, #1
   18744:	adc	r2, r2, #0
   18748:	str	r3, [r4, #56]	; 0x38
   1874c:	str	r2, [r4, #60]	; 0x3c
   18750:	ldr	r0, [pc, #76]	; 187a4 <UnityAssertEqualStringLen@@Base+0x528>
   18754:	bl	158f4 <UnityPrint@@Base>
   18758:	ldr	r3, [r4, #88]	; 0x58
   1875c:	ldr	r2, [r4, #92]	; 0x5c
   18760:	adds	r3, r3, #1
   18764:	adc	r2, r2, #0
   18768:	str	r3, [r4, #88]	; 0x58
   1876c:	str	r2, [r4, #92]	; 0x5c
   18770:	b	184fc <UnityAssertEqualStringLen@@Base+0x280>
   18774:	ldr	r2, [pc, #24]	; 18794 <UnityAssertEqualStringLen@@Base+0x518>
   18778:	ldr	r3, [r2]
   1877c:	ldr	r1, [r2, #4]
   18780:	adds	r3, r3, #1
   18784:	adc	r1, r1, #0
   18788:	str	r3, [r2]
   1878c:	str	r1, [r2, #4]
   18790:	bx	lr
   18794:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   18798:	andeq	lr, r1, r8, rrx
   1879c:	andeq	r0, r3, r0, ror #26
   187a0:	andeq	lr, r1, ip, ror r0
   187a4:	andeq	lr, r1, r4, ror r0

000187a8 <UnityAssertEqualStringArray@@Base>:
   187a8:	movw	ip, #5400	; 0x1518
   187ac:	movt	ip, #3
   187b0:	ldr	ip, [ip, #32]
   187b4:	cmp	ip, #0
   187b8:	bne	188d0 <UnityAssertEqualStringArray@@Base+0x128>
   187bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   187c0:	strd	r6, [sp, #8]
   187c4:	strd	r8, [sp, #16]
   187c8:	strd	sl, [sp, #24]
   187cc:	str	lr, [sp, #32]
   187d0:	sub	sp, sp, #84	; 0x54
   187d4:	movw	ip, #5400	; 0x1518
   187d8:	movt	ip, #3
   187dc:	ldr	r5, [ip, #36]	; 0x24
   187e0:	cmp	r5, #0
   187e4:	bne	188f0 <UnityAssertEqualStringArray@@Base+0x148>
   187e8:	str	r3, [sp, #76]	; 0x4c
   187ec:	mov	ip, r2
   187f0:	str	r2, [sp, #40]	; 0x28
   187f4:	str	r1, [sp, #36]	; 0x24
   187f8:	mov	fp, r0
   187fc:	ldr	r2, [pc, #1968]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18800:	ldr	r3, [r2, #16]
   18804:	ldr	r1, [r2, #20]
   18808:	adds	r3, r3, #1
   1880c:	adc	r1, r1, #0
   18810:	str	r3, [r2, #16]
   18814:	str	r1, [r2, #20]
   18818:	cmp	ip, #0
   1881c:	beq	18928 <UnityAssertEqualStringArray@@Base+0x180>
   18820:	ldr	r3, [sp, #76]	; 0x4c
   18824:	ldr	r2, [sp, #120]	; 0x78
   18828:	ldr	r1, [sp, #36]	; 0x24
   1882c:	bl	160b0 <UnityPrint@@Base+0x7bc>
   18830:	ldr	r2, [pc, #1916]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18834:	ldr	r3, [r2, #56]	; 0x38
   18838:	ldr	r1, [r2, #60]	; 0x3c
   1883c:	adds	r3, r3, #1
   18840:	adc	r1, r1, #0
   18844:	str	r3, [r2, #56]	; 0x38
   18848:	str	r1, [r2, #60]	; 0x3c
   1884c:	cmp	r0, #1
   18850:	beq	189bc <UnityAssertEqualStringArray@@Base+0x214>
   18854:	ldr	r3, [pc, #1880]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18858:	ldr	r2, [r3, #72]	; 0x48
   1885c:	str	r2, [sp, #16]
   18860:	ldr	r2, [r3, #76]	; 0x4c
   18864:	str	r2, [sp, #20]
   18868:	ldr	r2, [r3, #120]	; 0x78
   1886c:	str	r2, [sp, #60]	; 0x3c
   18870:	ldr	r2, [r3, #124]	; 0x7c
   18874:	str	r2, [sp, #64]	; 0x40
   18878:	ldr	ip, [r3, #96]	; 0x60
   1887c:	ldr	r9, [r3, #100]	; 0x64
   18880:	ldr	r2, [r3, #104]	; 0x68
   18884:	str	r2, [sp, #24]
   18888:	ldr	r2, [r3, #108]	; 0x6c
   1888c:	str	r2, [sp, #28]
   18890:	movw	r2, #5400	; 0x1518
   18894:	movt	r2, #3
   18898:	ldr	r2, [r2, #32]
   1889c:	str	r2, [sp, #44]	; 0x2c
   188a0:	ldr	r8, [r3, #88]	; 0x58
   188a4:	ldr	r3, [r3, #92]	; 0x5c
   188a8:	str	r3, [sp, #4]
   188ac:	mov	r7, #0
   188b0:	str	r7, [sp, #56]	; 0x38
   188b4:	str	r7, [sp, #32]
   188b8:	str	r7, [sp, #12]
   188bc:	str	r7, [sp, #68]	; 0x44
   188c0:	mov	r3, #1
   188c4:	str	r3, [sp, #72]	; 0x48
   188c8:	str	r3, [sp, #8]
   188cc:	b	18c10 <UnityAssertEqualStringArray@@Base+0x468>
   188d0:	ldr	r2, [pc, #1756]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   188d4:	ldr	r3, [r2]
   188d8:	ldr	r1, [r2, #4]
   188dc:	adds	r3, r3, #1
   188e0:	adc	r1, r1, #0
   188e4:	str	r3, [r2]
   188e8:	str	r1, [r2, #4]
   188ec:	bx	lr
   188f0:	ldr	r2, [pc, #1724]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   188f4:	ldr	r3, [r2, #8]
   188f8:	ldr	r1, [r2, #12]
   188fc:	adds	r3, r3, #1
   18900:	adc	r1, r1, #0
   18904:	str	r3, [r2, #8]
   18908:	str	r1, [r2, #12]
   1890c:	add	sp, sp, #84	; 0x54
   18910:	ldrd	r4, [sp]
   18914:	ldrd	r6, [sp, #8]
   18918:	ldrd	r8, [sp, #16]
   1891c:	ldrd	sl, [sp, #24]
   18920:	add	sp, sp, #32
   18924:	pop	{pc}		; (ldr pc, [sp], #4)
   18928:	mov	r4, r2
   1892c:	ldr	r3, [r2, #24]
   18930:	ldr	r2, [r2, #28]
   18934:	adds	r3, r3, #1
   18938:	adc	r2, r2, #0
   1893c:	str	r3, [r4, #24]
   18940:	str	r2, [r4, #28]
   18944:	ldr	r0, [sp, #120]	; 0x78
   18948:	bl	16000 <UnityPrint@@Base+0x70c>
   1894c:	ldr	r3, [r4, #32]
   18950:	ldr	r2, [r4, #36]	; 0x24
   18954:	adds	r3, r3, #1
   18958:	adc	r2, r2, #0
   1895c:	str	r3, [r4, #32]
   18960:	str	r2, [r4, #36]	; 0x24
   18964:	ldr	r0, [pc, #1612]	; 18fb8 <UnityAssertEqualStringArray@@Base+0x810>
   18968:	bl	158f4 <UnityPrint@@Base>
   1896c:	ldr	r3, [r4, #40]	; 0x28
   18970:	ldr	r2, [r4, #44]	; 0x2c
   18974:	adds	r3, r3, #1
   18978:	adc	r2, r2, #0
   1897c:	str	r3, [r4, #40]	; 0x28
   18980:	str	r2, [r4, #44]	; 0x2c
   18984:	ldr	r0, [sp, #76]	; 0x4c
   18988:	bl	15d18 <UnityPrint@@Base+0x424>
   1898c:	ldr	r3, [r4, #48]	; 0x30
   18990:	ldr	r2, [r4, #52]	; 0x34
   18994:	adds	r3, r3, #1
   18998:	adc	r2, r2, #0
   1899c:	str	r3, [r4, #48]	; 0x30
   189a0:	str	r2, [r4, #52]	; 0x34
   189a4:	movw	r0, #5400	; 0x1518
   189a8:	movt	r0, #3
   189ac:	mov	r1, #1
   189b0:	str	r1, [r0, #32]
   189b4:	add	r0, r0, #40	; 0x28
   189b8:	bl	11fcc <longjmp@plt>
   189bc:	ldr	r3, [r2, #64]	; 0x40
   189c0:	ldr	r1, [r2, #68]	; 0x44
   189c4:	adds	r3, r3, #1
   189c8:	adc	r1, r1, #0
   189cc:	str	r3, [r2, #64]	; 0x40
   189d0:	str	r1, [r2, #68]	; 0x44
   189d4:	b	1890c <UnityAssertEqualStringArray@@Base+0x164>
   189d8:	mov	r3, r8
   189dc:	ldr	r1, [sp, #4]
   189e0:	sub	r2, r6, #1
   189e4:	sub	lr, sl, #1
   189e8:	rsb	r6, r6, #1
   189ec:	b	18a08 <UnityAssertEqualStringArray@@Base+0x260>
   189f0:	adds	r3, r3, #1
   189f4:	adc	r1, r1, #0
   189f8:	ldrb	r4, [lr, #1]!
   189fc:	cmp	r4, r0
   18a00:	bne	18ae4 <UnityAssertEqualStringArray@@Base+0x33c>
   18a04:	ldr	r7, [sp, #8]
   18a08:	mov	r8, r3
   18a0c:	str	r1, [sp, #4]
   18a10:	add	r4, r6, r2
   18a14:	ldrb	r0, [r2, #1]!
   18a18:	cmp	r0, #0
   18a1c:	bne	189f0 <UnityAssertEqualStringArray@@Base+0x248>
   18a20:	adds	ip, ip, #1
   18a24:	adc	r9, r9, #0
   18a28:	ldrb	r3, [sl, r4]
   18a2c:	cmp	r3, #0
   18a30:	beq	18b78 <UnityAssertEqualStringArray@@Base+0x3d0>
   18a34:	cmp	r7, #0
   18a38:	beq	18a48 <UnityAssertEqualStringArray@@Base+0x2a0>
   18a3c:	ldr	r3, [pc, #1392]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18a40:	str	r8, [r3, #88]	; 0x58
   18a44:	str	r1, [r3, #92]	; 0x5c
   18a48:	ldr	r3, [pc, #1380]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18a4c:	str	ip, [r3, #96]	; 0x60
   18a50:	str	r9, [r3, #100]	; 0x64
   18a54:	ldr	r3, [sp, #12]
   18a58:	cmp	r3, #0
   18a5c:	beq	18a74 <UnityAssertEqualStringArray@@Base+0x2cc>
   18a60:	ldr	r3, [pc, #1356]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18a64:	ldr	r2, [sp, #24]
   18a68:	str	r2, [r3, #104]	; 0x68
   18a6c:	ldr	r2, [sp, #28]
   18a70:	str	r2, [r3, #108]	; 0x6c
   18a74:	ldr	r3, [sp, #32]
   18a78:	cmp	r3, #0
   18a7c:	beq	18a94 <UnityAssertEqualStringArray@@Base+0x2ec>
   18a80:	ldr	r3, [pc, #1324]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18a84:	ldr	r2, [sp, #16]
   18a88:	str	r2, [r3, #72]	; 0x48
   18a8c:	ldr	r2, [sp, #20]
   18a90:	str	r2, [r3, #76]	; 0x4c
   18a94:	ldr	r3, [sp, #56]	; 0x38
   18a98:	cmp	r3, #0
   18a9c:	beq	18ab4 <UnityAssertEqualStringArray@@Base+0x30c>
   18aa0:	ldr	r3, [pc, #1292]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18aa4:	ldr	r2, [sp, #60]	; 0x3c
   18aa8:	str	r2, [r3, #120]	; 0x78
   18aac:	ldr	r2, [sp, #64]	; 0x40
   18ab0:	str	r2, [r3, #124]	; 0x7c
   18ab4:	ldr	r2, [pc, #1272]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18ab8:	ldr	r3, [r2, #80]	; 0x50
   18abc:	ldr	r1, [r2, #84]	; 0x54
   18ac0:	adds	r3, r3, #1
   18ac4:	adc	r1, r1, #0
   18ac8:	str	r3, [r2, #80]	; 0x50
   18acc:	str	r1, [r2, #84]	; 0x54
   18ad0:	movw	r3, #5400	; 0x1518
   18ad4:	movt	r3, #3
   18ad8:	mov	r2, #1
   18adc:	str	r2, [r3, #32]
   18ae0:	b	18cf4 <UnityAssertEqualStringArray@@Base+0x54c>
   18ae4:	cmp	r7, #0
   18ae8:	beq	18afc <UnityAssertEqualStringArray@@Base+0x354>
   18aec:	ldr	r3, [pc, #1216]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18af0:	str	r8, [r3, #88]	; 0x58
   18af4:	ldr	r2, [sp, #4]
   18af8:	str	r2, [r3, #92]	; 0x5c
   18afc:	ldr	r3, [sp, #68]	; 0x44
   18b00:	cmp	r3, #0
   18b04:	beq	18b14 <UnityAssertEqualStringArray@@Base+0x36c>
   18b08:	ldr	r3, [pc, #1188]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18b0c:	str	ip, [r3, #96]	; 0x60
   18b10:	str	r9, [r3, #100]	; 0x64
   18b14:	ldr	r3, [sp, #12]
   18b18:	cmp	r3, #0
   18b1c:	beq	18b34 <UnityAssertEqualStringArray@@Base+0x38c>
   18b20:	ldr	r3, [pc, #1164]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18b24:	ldr	r2, [sp, #24]
   18b28:	str	r2, [r3, #104]	; 0x68
   18b2c:	ldr	r2, [sp, #28]
   18b30:	str	r2, [r3, #108]	; 0x6c
   18b34:	ldr	r3, [sp, #32]
   18b38:	cmp	r3, #0
   18b3c:	beq	18b54 <UnityAssertEqualStringArray@@Base+0x3ac>
   18b40:	ldr	r3, [pc, #1132]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18b44:	ldr	r2, [sp, #16]
   18b48:	str	r2, [r3, #72]	; 0x48
   18b4c:	ldr	r2, [sp, #20]
   18b50:	str	r2, [r3, #76]	; 0x4c
   18b54:	ldr	r3, [sp, #56]	; 0x38
   18b58:	cmp	r3, #0
   18b5c:	beq	18ab4 <UnityAssertEqualStringArray@@Base+0x30c>
   18b60:	ldr	r3, [pc, #1100]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18b64:	ldr	r2, [sp, #60]	; 0x3c
   18b68:	str	r2, [r3, #120]	; 0x78
   18b6c:	ldr	r2, [sp, #64]	; 0x40
   18b70:	str	r2, [r3, #124]	; 0x7c
   18b74:	b	18ab4 <UnityAssertEqualStringArray@@Base+0x30c>
   18b78:	ldr	r3, [sp, #24]
   18b7c:	adds	r3, r3, #1
   18b80:	str	r3, [sp, #24]
   18b84:	ldr	r3, [sp, #28]
   18b88:	adc	r3, r3, #0
   18b8c:	str	r3, [sp, #28]
   18b90:	mov	r3, #1
   18b94:	str	r3, [sp, #12]
   18b98:	ldr	r3, [sp, #72]	; 0x48
   18b9c:	str	r3, [sp, #68]	; 0x44
   18ba0:	b	18bf4 <UnityAssertEqualStringArray@@Base+0x44c>
   18ba4:	ldr	r3, [sp, #16]
   18ba8:	adds	r3, r3, #1
   18bac:	str	r3, [sp, #16]
   18bb0:	ldr	r3, [sp, #20]
   18bb4:	adc	r3, r3, #0
   18bb8:	str	r3, [sp, #20]
   18bbc:	ldr	r3, [sp, #36]	; 0x24
   18bc0:	ldr	r3, [r3, r5, lsl #2]
   18bc4:	cmp	r3, #0
   18bc8:	bne	18da8 <UnityAssertEqualStringArray@@Base+0x600>
   18bcc:	ldr	r3, [sp, #60]	; 0x3c
   18bd0:	adds	r3, r3, #1
   18bd4:	str	r3, [sp, #60]	; 0x3c
   18bd8:	ldr	r3, [sp, #64]	; 0x40
   18bdc:	adc	r3, r3, #0
   18be0:	str	r3, [sp, #64]	; 0x40
   18be4:	mov	r3, #1
   18be8:	str	r3, [sp, #56]	; 0x38
   18bec:	ldr	r3, [sp, #72]	; 0x48
   18bf0:	str	r3, [sp, #32]
   18bf4:	ldr	r3, [sp, #44]	; 0x2c
   18bf8:	cmp	r3, #0
   18bfc:	bne	18e30 <UnityAssertEqualStringArray@@Base+0x688>
   18c00:	add	r5, r5, #1
   18c04:	ldr	r3, [sp, #40]	; 0x28
   18c08:	cmp	r3, r5
   18c0c:	beq	18f20 <UnityAssertEqualStringArray@@Base+0x778>
   18c10:	lsl	r3, r5, #2
   18c14:	str	r3, [sp, #52]	; 0x34
   18c18:	str	fp, [sp, #48]	; 0x30
   18c1c:	ldr	r6, [fp], #4
   18c20:	cmp	r6, #0
   18c24:	beq	18ba4 <UnityAssertEqualStringArray@@Base+0x3fc>
   18c28:	ldr	r3, [sp, #36]	; 0x24
   18c2c:	ldr	sl, [r3, r5, lsl #2]
   18c30:	cmp	sl, #0
   18c34:	bne	189d8 <UnityAssertEqualStringArray@@Base+0x230>
   18c38:	cmp	r7, #0
   18c3c:	beq	18c50 <UnityAssertEqualStringArray@@Base+0x4a8>
   18c40:	ldr	r3, [pc, #876]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18c44:	str	r8, [r3, #88]	; 0x58
   18c48:	ldr	r2, [sp, #4]
   18c4c:	str	r2, [r3, #92]	; 0x5c
   18c50:	ldr	r3, [sp, #68]	; 0x44
   18c54:	cmp	r3, #0
   18c58:	beq	18c68 <UnityAssertEqualStringArray@@Base+0x4c0>
   18c5c:	ldr	r3, [pc, #848]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18c60:	str	ip, [r3, #96]	; 0x60
   18c64:	str	r9, [r3, #100]	; 0x64
   18c68:	ldr	r3, [sp, #12]
   18c6c:	cmp	r3, #0
   18c70:	beq	18c88 <UnityAssertEqualStringArray@@Base+0x4e0>
   18c74:	ldr	r3, [pc, #824]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18c78:	ldr	r2, [sp, #24]
   18c7c:	str	r2, [r3, #104]	; 0x68
   18c80:	ldr	r2, [sp, #28]
   18c84:	str	r2, [r3, #108]	; 0x6c
   18c88:	ldr	r3, [sp, #32]
   18c8c:	cmp	r3, #0
   18c90:	beq	18ca8 <UnityAssertEqualStringArray@@Base+0x500>
   18c94:	ldr	r3, [pc, #792]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18c98:	ldr	r2, [sp, #16]
   18c9c:	str	r2, [r3, #72]	; 0x48
   18ca0:	ldr	r2, [sp, #20]
   18ca4:	str	r2, [r3, #76]	; 0x4c
   18ca8:	ldr	r3, [sp, #56]	; 0x38
   18cac:	cmp	r3, #0
   18cb0:	beq	18cc8 <UnityAssertEqualStringArray@@Base+0x520>
   18cb4:	ldr	r3, [pc, #760]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18cb8:	ldr	r2, [sp, #60]	; 0x3c
   18cbc:	str	r2, [r3, #120]	; 0x78
   18cc0:	ldr	r2, [sp, #64]	; 0x40
   18cc4:	str	r2, [r3, #124]	; 0x7c
   18cc8:	ldr	r2, [pc, #740]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18ccc:	ldr	r3, [r2, #112]	; 0x70
   18cd0:	ldr	r1, [r2, #116]	; 0x74
   18cd4:	adds	r3, r3, #1
   18cd8:	adc	r1, r1, #0
   18cdc:	str	r3, [r2, #112]	; 0x70
   18ce0:	str	r1, [r2, #116]	; 0x74
   18ce4:	movw	r3, #5400	; 0x1518
   18ce8:	movt	r3, #3
   18cec:	mov	r2, #1
   18cf0:	str	r2, [r3, #32]
   18cf4:	ldr	r4, [pc, #696]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18cf8:	ldr	r3, [r4, #128]	; 0x80
   18cfc:	ldr	r2, [r4, #132]	; 0x84
   18d00:	adds	r3, r3, #1
   18d04:	adc	r2, r2, #0
   18d08:	str	r3, [r4, #128]	; 0x80
   18d0c:	str	r2, [r4, #132]	; 0x84
   18d10:	ldr	r0, [sp, #120]	; 0x78
   18d14:	bl	16000 <UnityPrint@@Base+0x70c>
   18d18:	ldr	r3, [r4, #136]	; 0x88
   18d1c:	ldr	r2, [r4, #140]	; 0x8c
   18d20:	adds	r3, r3, #1
   18d24:	adc	r2, r2, #0
   18d28:	str	r3, [r4, #136]	; 0x88
   18d2c:	str	r2, [r4, #140]	; 0x8c
   18d30:	ldr	r3, [sp, #40]	; 0x28
   18d34:	cmp	r3, #1
   18d38:	bhi	18ec4 <UnityAssertEqualStringArray@@Base+0x71c>
   18d3c:	ldr	r3, [sp, #36]	; 0x24
   18d40:	ldr	r2, [sp, #52]	; 0x34
   18d44:	ldr	r1, [r3, r2]
   18d48:	ldr	r3, [sp, #48]	; 0x30
   18d4c:	ldr	r0, [r3]
   18d50:	bl	15b08 <UnityPrint@@Base+0x214>
   18d54:	ldr	r4, [pc, #600]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18d58:	ldr	r3, [r4, #168]	; 0xa8
   18d5c:	ldr	r2, [r4, #172]	; 0xac
   18d60:	adds	r3, r3, #1
   18d64:	adc	r2, r2, #0
   18d68:	str	r3, [r4, #168]	; 0xa8
   18d6c:	str	r2, [r4, #172]	; 0xac
   18d70:	ldr	r0, [sp, #76]	; 0x4c
   18d74:	bl	15d18 <UnityPrint@@Base+0x424>
   18d78:	ldr	r3, [r4, #176]	; 0xb0
   18d7c:	ldr	r2, [r4, #180]	; 0xb4
   18d80:	adds	r3, r3, #1
   18d84:	adc	r2, r2, #0
   18d88:	str	r3, [r4, #176]	; 0xb0
   18d8c:	str	r2, [r4, #180]	; 0xb4
   18d90:	movw	r0, #5400	; 0x1518
   18d94:	movt	r0, #3
   18d98:	mov	r1, #1
   18d9c:	str	r1, [r0, #32]
   18da0:	add	r0, r0, #40	; 0x28
   18da4:	bl	11fcc <longjmp@plt>
   18da8:	cmp	r7, #0
   18dac:	beq	18dc0 <UnityAssertEqualStringArray@@Base+0x618>
   18db0:	ldr	r3, [pc, #508]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18db4:	str	r8, [r3, #88]	; 0x58
   18db8:	ldr	r2, [sp, #4]
   18dbc:	str	r2, [r3, #92]	; 0x5c
   18dc0:	ldr	r3, [sp, #68]	; 0x44
   18dc4:	cmp	r3, #0
   18dc8:	beq	18dd8 <UnityAssertEqualStringArray@@Base+0x630>
   18dcc:	ldr	r3, [pc, #480]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18dd0:	str	ip, [r3, #96]	; 0x60
   18dd4:	str	r9, [r3, #100]	; 0x64
   18dd8:	ldr	r3, [sp, #12]
   18ddc:	cmp	r3, #0
   18de0:	beq	18df8 <UnityAssertEqualStringArray@@Base+0x650>
   18de4:	ldr	r3, [pc, #456]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18de8:	ldr	r2, [sp, #24]
   18dec:	str	r2, [r3, #104]	; 0x68
   18df0:	ldr	r2, [sp, #28]
   18df4:	str	r2, [r3, #108]	; 0x6c
   18df8:	ldr	r3, [pc, #436]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18dfc:	ldr	r2, [sp, #16]
   18e00:	str	r2, [r3, #72]	; 0x48
   18e04:	ldr	r2, [sp, #20]
   18e08:	str	r2, [r3, #76]	; 0x4c
   18e0c:	ldr	r3, [sp, #56]	; 0x38
   18e10:	cmp	r3, #0
   18e14:	beq	18cc8 <UnityAssertEqualStringArray@@Base+0x520>
   18e18:	ldr	r3, [pc, #404]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18e1c:	ldr	r2, [sp, #60]	; 0x3c
   18e20:	str	r2, [r3, #120]	; 0x78
   18e24:	ldr	r2, [sp, #64]	; 0x40
   18e28:	str	r2, [r3, #124]	; 0x7c
   18e2c:	b	18cc8 <UnityAssertEqualStringArray@@Base+0x520>
   18e30:	cmp	r7, #0
   18e34:	beq	18e48 <UnityAssertEqualStringArray@@Base+0x6a0>
   18e38:	ldr	r3, [pc, #372]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18e3c:	str	r8, [r3, #88]	; 0x58
   18e40:	ldr	r2, [sp, #4]
   18e44:	str	r2, [r3, #92]	; 0x5c
   18e48:	ldr	r3, [sp, #68]	; 0x44
   18e4c:	cmp	r3, #0
   18e50:	beq	18e60 <UnityAssertEqualStringArray@@Base+0x6b8>
   18e54:	ldr	r3, [pc, #344]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18e58:	str	ip, [r3, #96]	; 0x60
   18e5c:	str	r9, [r3, #100]	; 0x64
   18e60:	ldr	r3, [sp, #12]
   18e64:	cmp	r3, #0
   18e68:	beq	18e80 <UnityAssertEqualStringArray@@Base+0x6d8>
   18e6c:	ldr	r3, [pc, #320]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18e70:	ldr	r2, [sp, #24]
   18e74:	str	r2, [r3, #104]	; 0x68
   18e78:	ldr	r2, [sp, #28]
   18e7c:	str	r2, [r3, #108]	; 0x6c
   18e80:	ldr	r3, [sp, #32]
   18e84:	cmp	r3, #0
   18e88:	beq	18ea0 <UnityAssertEqualStringArray@@Base+0x6f8>
   18e8c:	ldr	r3, [pc, #288]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18e90:	ldr	r2, [sp, #16]
   18e94:	str	r2, [r3, #72]	; 0x48
   18e98:	ldr	r2, [sp, #20]
   18e9c:	str	r2, [r3, #76]	; 0x4c
   18ea0:	ldr	r3, [sp, #56]	; 0x38
   18ea4:	cmp	r3, #0
   18ea8:	beq	18cf4 <UnityAssertEqualStringArray@@Base+0x54c>
   18eac:	ldr	r3, [pc, #256]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18eb0:	ldr	r2, [sp, #60]	; 0x3c
   18eb4:	str	r2, [r3, #120]	; 0x78
   18eb8:	ldr	r2, [sp, #64]	; 0x40
   18ebc:	str	r2, [r3, #124]	; 0x7c
   18ec0:	b	18cf4 <UnityAssertEqualStringArray@@Base+0x54c>
   18ec4:	ldr	r3, [r4, #144]	; 0x90
   18ec8:	ldr	r2, [r4, #148]	; 0x94
   18ecc:	adds	r3, r3, #1
   18ed0:	adc	r2, r2, #0
   18ed4:	str	r3, [r4, #144]	; 0x90
   18ed8:	str	r2, [r4, #148]	; 0x94
   18edc:	ldr	r0, [pc, #216]	; 18fbc <UnityAssertEqualStringArray@@Base+0x814>
   18ee0:	bl	158f4 <UnityPrint@@Base>
   18ee4:	ldr	r3, [r4, #152]	; 0x98
   18ee8:	ldr	r2, [r4, #156]	; 0x9c
   18eec:	adds	r3, r3, #1
   18ef0:	adc	r2, r2, #0
   18ef4:	str	r3, [r4, #152]	; 0x98
   18ef8:	str	r2, [r4, #156]	; 0x9c
   18efc:	mov	r0, r5
   18f00:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   18f04:	ldr	r3, [r4, #160]	; 0xa0
   18f08:	ldr	r2, [r4, #164]	; 0xa4
   18f0c:	adds	r3, r3, #1
   18f10:	adc	r2, r2, #0
   18f14:	str	r3, [r4, #160]	; 0xa0
   18f18:	str	r2, [r4, #164]	; 0xa4
   18f1c:	b	18d3c <UnityAssertEqualStringArray@@Base+0x594>
   18f20:	cmp	r7, #0
   18f24:	beq	18f38 <UnityAssertEqualStringArray@@Base+0x790>
   18f28:	ldr	r3, [pc, #132]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18f2c:	str	r8, [r3, #88]	; 0x58
   18f30:	ldr	r2, [sp, #4]
   18f34:	str	r2, [r3, #92]	; 0x5c
   18f38:	ldr	r3, [sp, #68]	; 0x44
   18f3c:	cmp	r3, #0
   18f40:	beq	18f50 <UnityAssertEqualStringArray@@Base+0x7a8>
   18f44:	ldr	r3, [pc, #104]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18f48:	str	ip, [r3, #96]	; 0x60
   18f4c:	str	r9, [r3, #100]	; 0x64
   18f50:	ldr	r3, [sp, #12]
   18f54:	cmp	r3, #0
   18f58:	beq	18f70 <UnityAssertEqualStringArray@@Base+0x7c8>
   18f5c:	ldr	r3, [pc, #80]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18f60:	ldr	r2, [sp, #24]
   18f64:	str	r2, [r3, #104]	; 0x68
   18f68:	ldr	r2, [sp, #28]
   18f6c:	str	r2, [r3, #108]	; 0x6c
   18f70:	ldr	r3, [sp, #32]
   18f74:	cmp	r3, #0
   18f78:	beq	18f90 <UnityAssertEqualStringArray@@Base+0x7e8>
   18f7c:	ldr	r3, [pc, #48]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18f80:	ldr	r2, [sp, #16]
   18f84:	str	r2, [r3, #72]	; 0x48
   18f88:	ldr	r2, [sp, #20]
   18f8c:	str	r2, [r3, #76]	; 0x4c
   18f90:	ldr	r3, [sp, #56]	; 0x38
   18f94:	cmp	r3, #0
   18f98:	beq	1890c <UnityAssertEqualStringArray@@Base+0x164>
   18f9c:	ldr	r3, [pc, #16]	; 18fb4 <UnityAssertEqualStringArray@@Base+0x80c>
   18fa0:	ldr	r2, [sp, #60]	; 0x3c
   18fa4:	str	r2, [r3, #120]	; 0x78
   18fa8:	ldr	r2, [sp, #64]	; 0x40
   18fac:	str	r2, [r3, #124]	; 0x7c
   18fb0:	b	1890c <UnityAssertEqualStringArray@@Base+0x164>
   18fb4:	andeq	r0, r3, r0, asr #27
   18fb8:	strdeq	lr, [r1], -r0
   18fbc:	andeq	lr, r1, r8, lsr #2

00018fc0 <UnityAssertEqualMemory@@Base>:
   18fc0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18fc4:	strd	r6, [sp, #8]
   18fc8:	strd	r8, [sp, #16]
   18fcc:	strd	sl, [sp, #24]
   18fd0:	str	lr, [sp, #32]
   18fd4:	sub	sp, sp, #20
   18fd8:	str	r3, [sp, #8]
   18fdc:	movw	r3, #5400	; 0x1518
   18fe0:	movt	r3, #3
   18fe4:	ldr	r3, [r3, #32]
   18fe8:	cmp	r3, #0
   18fec:	bne	190b0 <UnityAssertEqualMemory@@Base+0xf0>
   18ff0:	mov	r5, r0
   18ff4:	mov	r6, r1
   18ff8:	mov	r4, r2
   18ffc:	movw	r3, #5400	; 0x1518
   19000:	movt	r3, #3
   19004:	ldr	r3, [r3, #36]	; 0x24
   19008:	cmp	r3, #0
   1900c:	bne	190e8 <UnityAssertEqualMemory@@Base+0x128>
   19010:	ldr	r2, [pc, #1096]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   19014:	ldr	r3, [r2, #8]
   19018:	ldr	r1, [r2, #12]
   1901c:	adds	r3, r3, #1
   19020:	adc	r1, r1, #0
   19024:	str	r3, [r2, #8]
   19028:	str	r1, [r2, #12]
   1902c:	clz	r3, r4
   19030:	lsr	r3, r3, #5
   19034:	ldr	r2, [sp, #8]
   19038:	cmp	r2, #0
   1903c:	moveq	r3, #1
   19040:	str	r3, [sp]
   19044:	cmp	r3, #0
   19048:	bne	19108 <UnityAssertEqualMemory@@Base+0x148>
   1904c:	ldr	r3, [sp, #56]	; 0x38
   19050:	ldr	r2, [sp, #60]	; 0x3c
   19054:	mov	r1, r6
   19058:	bl	160b0 <UnityPrint@@Base+0x7bc>
   1905c:	ldr	r2, [pc, #1020]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   19060:	ldr	r3, [r2, #48]	; 0x30
   19064:	ldr	r1, [r2, #52]	; 0x34
   19068:	adds	r3, r3, #1
   1906c:	adc	r1, r1, #0
   19070:	str	r3, [r2, #48]	; 0x30
   19074:	str	r1, [r2, #52]	; 0x34
   19078:	cmp	r0, #1
   1907c:	beq	1919c <UnityAssertEqualMemory@@Base+0x1dc>
   19080:	ldr	r3, [sp, #8]
   19084:	sub	r7, r3, #1
   19088:	str	r7, [sp, #12]
   1908c:	mov	r1, r2
   19090:	ldr	r3, [r2, #72]	; 0x48
   19094:	ldr	r2, [r2, #76]	; 0x4c
   19098:	ldr	ip, [r1, #176]	; 0xb0
   1909c:	ldr	lr, [r1, #180]	; 0xb4
   190a0:	sub	r8, r4, #1
   190a4:	sub	r1, r4, #2
   190a8:	str	r1, [sp, #4]
   190ac:	b	193f8 <UnityAssertEqualMemory@@Base+0x438>
   190b0:	ldr	r2, [pc, #936]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   190b4:	ldr	r3, [r2, #-8]
   190b8:	ldr	r1, [r2, #-4]
   190bc:	adds	r3, r3, #1
   190c0:	adc	r1, r1, #0
   190c4:	str	r3, [r2, #-8]
   190c8:	str	r1, [r2, #-4]
   190cc:	add	sp, sp, #20
   190d0:	ldrd	r4, [sp]
   190d4:	ldrd	r6, [sp, #8]
   190d8:	ldrd	r8, [sp, #16]
   190dc:	ldrd	sl, [sp, #24]
   190e0:	add	sp, sp, #32
   190e4:	pop	{pc}		; (ldr pc, [sp], #4)
   190e8:	ldr	r2, [pc, #880]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   190ec:	ldr	r3, [r2]
   190f0:	ldr	r1, [r2, #4]
   190f4:	adds	r3, r3, #1
   190f8:	adc	r1, r1, #0
   190fc:	str	r3, [r2]
   19100:	str	r1, [r2, #4]
   19104:	b	190cc <UnityAssertEqualMemory@@Base+0x10c>
   19108:	ldr	r4, [pc, #848]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   1910c:	ldr	r3, [r4, #16]
   19110:	ldr	r2, [r4, #20]
   19114:	adds	r3, r3, #1
   19118:	adc	r2, r2, #0
   1911c:	str	r3, [r4, #16]
   19120:	str	r2, [r4, #20]
   19124:	ldr	r0, [sp, #60]	; 0x3c
   19128:	bl	16000 <UnityPrint@@Base+0x70c>
   1912c:	ldr	r3, [r4, #24]
   19130:	ldr	r2, [r4, #28]
   19134:	adds	r3, r3, #1
   19138:	adc	r2, r2, #0
   1913c:	str	r3, [r4, #24]
   19140:	str	r2, [r4, #28]
   19144:	ldr	r0, [pc, #792]	; 19464 <UnityAssertEqualMemory@@Base+0x4a4>
   19148:	bl	158f4 <UnityPrint@@Base>
   1914c:	ldr	r3, [r4, #32]
   19150:	ldr	r2, [r4, #36]	; 0x24
   19154:	adds	r3, r3, #1
   19158:	adc	r2, r2, #0
   1915c:	str	r3, [r4, #32]
   19160:	str	r2, [r4, #36]	; 0x24
   19164:	ldr	r0, [sp, #56]	; 0x38
   19168:	bl	15d18 <UnityPrint@@Base+0x424>
   1916c:	ldr	r3, [r4, #40]	; 0x28
   19170:	ldr	r2, [r4, #44]	; 0x2c
   19174:	adds	r3, r3, #1
   19178:	adc	r2, r2, #0
   1917c:	str	r3, [r4, #40]	; 0x28
   19180:	str	r2, [r4, #44]	; 0x2c
   19184:	movw	r0, #5400	; 0x1518
   19188:	movt	r0, #3
   1918c:	mov	r1, #1
   19190:	str	r1, [r0, #32]
   19194:	add	r0, r0, #40	; 0x28
   19198:	bl	11fcc <longjmp@plt>
   1919c:	ldr	r2, [pc, #700]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   191a0:	ldr	r3, [r2, #56]	; 0x38
   191a4:	ldr	r1, [r2, #60]	; 0x3c
   191a8:	adds	r3, r3, #1
   191ac:	adc	r1, r1, #0
   191b0:	str	r3, [r2, #56]	; 0x38
   191b4:	str	r1, [r2, #60]	; 0x3c
   191b8:	b	190cc <UnityAssertEqualMemory@@Base+0x10c>
   191bc:	ldr	r1, [pc, #668]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   191c0:	str	r3, [r1, #72]	; 0x48
   191c4:	str	r2, [r1, #76]	; 0x4c
   191c8:	ldr	r3, [sp]
   191cc:	cmp	r3, #0
   191d0:	beq	191dc <UnityAssertEqualMemory@@Base+0x21c>
   191d4:	str	ip, [r1, #176]	; 0xb0
   191d8:	str	lr, [r1, #180]	; 0xb4
   191dc:	ldr	r9, [pc, #636]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   191e0:	ldr	r3, [r9, #64]	; 0x40
   191e4:	ldr	r2, [r9, #68]	; 0x44
   191e8:	adds	r3, r3, #1
   191ec:	adc	r2, r2, #0
   191f0:	str	r3, [r9, #64]	; 0x40
   191f4:	str	r2, [r9, #68]	; 0x44
   191f8:	ldr	r0, [sp, #60]	; 0x3c
   191fc:	bl	16000 <UnityPrint@@Base+0x70c>
   19200:	ldr	r3, [r9, #80]	; 0x50
   19204:	ldr	r2, [r9, #84]	; 0x54
   19208:	adds	r3, r3, #1
   1920c:	adc	r2, r2, #0
   19210:	str	r3, [r9, #80]	; 0x50
   19214:	str	r2, [r9, #84]	; 0x54
   19218:	ldr	r0, [pc, #584]	; 19468 <UnityAssertEqualMemory@@Base+0x4a8>
   1921c:	bl	158f4 <UnityPrint@@Base>
   19220:	ldr	r3, [r9, #88]	; 0x58
   19224:	ldr	r2, [r9, #92]	; 0x5c
   19228:	adds	r3, r3, #1
   1922c:	adc	r2, r2, #0
   19230:	str	r3, [r9, #88]	; 0x58
   19234:	str	r2, [r9, #92]	; 0x5c
   19238:	ldr	r3, [sp, #8]
   1923c:	cmp	r3, #1
   19240:	bhi	19378 <UnityAssertEqualMemory@@Base+0x3b8>
   19244:	movw	r9, #57420	; 0xe04c
   19248:	movt	r9, #1
   1924c:	add	r0, r9, #324	; 0x144
   19250:	bl	158f4 <UnityPrint@@Base>
   19254:	ldr	r7, [pc, #516]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   19258:	ldr	r3, [r7, #120]	; 0x78
   1925c:	ldr	r2, [r7, #124]	; 0x7c
   19260:	adds	r3, r3, #1
   19264:	adc	r2, r2, #0
   19268:	str	r3, [r7, #120]	; 0x78
   1926c:	str	r2, [r7, #124]	; 0x7c
   19270:	sub	r0, r8, r4
   19274:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   19278:	ldr	r3, [r7, #128]	; 0x80
   1927c:	ldr	r2, [r7, #132]	; 0x84
   19280:	adds	r3, r3, #1
   19284:	adc	r2, r2, #0
   19288:	str	r3, [r7, #128]	; 0x80
   1928c:	str	r2, [r7, #132]	; 0x84
   19290:	add	r0, r9, #28
   19294:	bl	158f4 <UnityPrint@@Base>
   19298:	ldr	r3, [r7, #136]	; 0x88
   1929c:	ldr	r2, [r7, #140]	; 0x8c
   192a0:	adds	r3, r3, #1
   192a4:	adc	r2, r2, #0
   192a8:	str	r3, [r7, #136]	; 0x88
   192ac:	str	r2, [r7, #140]	; 0x8c
   192b0:	mov	r1, #65	; 0x41
   192b4:	ldrb	r0, [r5]
   192b8:	bl	15588 <UnityPrintNumberByStyle@@Base>
   192bc:	ldr	r3, [r7, #144]	; 0x90
   192c0:	ldr	r2, [r7, #148]	; 0x94
   192c4:	adds	r3, r3, #1
   192c8:	adc	r2, r2, #0
   192cc:	str	r3, [r7, #144]	; 0x90
   192d0:	str	r2, [r7, #148]	; 0x94
   192d4:	add	r0, r9, #48	; 0x30
   192d8:	bl	158f4 <UnityPrint@@Base>
   192dc:	ldr	r3, [r7, #152]	; 0x98
   192e0:	ldr	r2, [r7, #156]	; 0x9c
   192e4:	adds	r3, r3, #1
   192e8:	adc	r2, r2, #0
   192ec:	str	r3, [r7, #152]	; 0x98
   192f0:	str	r2, [r7, #156]	; 0x9c
   192f4:	mov	r1, #65	; 0x41
   192f8:	ldrb	r0, [r6]
   192fc:	bl	15588 <UnityPrintNumberByStyle@@Base>
   19300:	ldr	r3, [r7, #160]	; 0xa0
   19304:	ldr	r2, [r7, #164]	; 0xa4
   19308:	adds	r3, r3, #1
   1930c:	adc	r2, r2, #0
   19310:	str	r3, [r7, #160]	; 0xa0
   19314:	str	r2, [r7, #164]	; 0xa4
   19318:	ldr	r0, [sp, #56]	; 0x38
   1931c:	bl	15d18 <UnityPrint@@Base+0x424>
   19320:	ldr	r3, [r7, #168]	; 0xa8
   19324:	ldr	r2, [r7, #172]	; 0xac
   19328:	adds	r3, r3, #1
   1932c:	adc	r2, r2, #0
   19330:	str	r3, [r7, #168]	; 0xa8
   19334:	str	r2, [r7, #172]	; 0xac
   19338:	movw	r0, #5400	; 0x1518
   1933c:	movt	r0, #3
   19340:	mov	r1, #1
   19344:	str	r1, [r0, #32]
   19348:	add	r0, r0, #40	; 0x28
   1934c:	bl	11fcc <longjmp@plt>
   19350:	ldr	r1, [sp]
   19354:	cmp	r1, #0
   19358:	beq	19370 <UnityAssertEqualMemory@@Base+0x3b0>
   1935c:	ldr	r1, [pc, #252]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   19360:	str	r3, [r1, #72]	; 0x48
   19364:	str	r2, [r1, #76]	; 0x4c
   19368:	str	ip, [r1, #176]	; 0xb0
   1936c:	str	lr, [r1, #180]	; 0xb4
   19370:	mov	r4, r8
   19374:	b	191dc <UnityAssertEqualMemory@@Base+0x21c>
   19378:	ldr	r3, [r9, #96]	; 0x60
   1937c:	ldr	r2, [r9, #100]	; 0x64
   19380:	adds	r3, r3, #1
   19384:	adc	r2, r2, #0
   19388:	str	r3, [r9, #96]	; 0x60
   1938c:	str	r2, [r9, #100]	; 0x64
   19390:	ldr	r0, [pc, #212]	; 1946c <UnityAssertEqualMemory@@Base+0x4ac>
   19394:	bl	158f4 <UnityPrint@@Base>
   19398:	ldr	r3, [r9, #104]	; 0x68
   1939c:	ldr	r2, [r9, #108]	; 0x6c
   193a0:	adds	r3, r3, #1
   193a4:	adc	r2, r2, #0
   193a8:	str	r3, [r9, #104]	; 0x68
   193ac:	str	r2, [r9, #108]	; 0x6c
   193b0:	ldr	r3, [sp, #12]
   193b4:	sub	r0, r3, r7
   193b8:	bl	152b0 <UnityPrintNumberUnsigned@@Base>
   193bc:	ldr	r3, [r9, #112]	; 0x70
   193c0:	ldr	r2, [r9, #116]	; 0x74
   193c4:	adds	r3, r3, #1
   193c8:	adc	r2, r2, #0
   193cc:	str	r3, [r9, #112]	; 0x70
   193d0:	str	r2, [r9, #116]	; 0x74
   193d4:	b	19244 <UnityAssertEqualMemory@@Base+0x284>
   193d8:	adds	ip, ip, #1
   193dc:	adc	lr, lr, #0
   193e0:	sub	r1, r7, #1
   193e4:	mov	r0, #1
   193e8:	str	r0, [sp]
   193ec:	cmp	r7, #0
   193f0:	beq	19448 <UnityAssertEqualMemory@@Base+0x488>
   193f4:	mov	r7, r1
   193f8:	ldrb	r0, [r5]
   193fc:	ldrb	r1, [r6]
   19400:	cmp	r0, r1
   19404:	bne	19350 <UnityAssertEqualMemory@@Base+0x390>
   19408:	ldr	r4, [sp, #4]
   1940c:	add	r1, r5, r8
   19410:	add	r0, r6, r8
   19414:	adds	r3, r3, #1
   19418:	adc	r2, r2, #0
   1941c:	sub	r5, r1, r4
   19420:	sub	r6, r0, r4
   19424:	cmn	r4, #1
   19428:	beq	193d8 <UnityAssertEqualMemory@@Base+0x418>
   1942c:	sub	r9, r4, #1
   19430:	ldrb	fp, [r5]
   19434:	ldrb	sl, [r6]
   19438:	cmp	fp, sl
   1943c:	bne	191bc <UnityAssertEqualMemory@@Base+0x1fc>
   19440:	mov	r4, r9
   19444:	b	19414 <UnityAssertEqualMemory@@Base+0x454>
   19448:	ldr	r1, [pc, #16]	; 19460 <UnityAssertEqualMemory@@Base+0x4a0>
   1944c:	str	r3, [r1, #72]	; 0x48
   19450:	str	r2, [r1, #76]	; 0x4c
   19454:	str	ip, [r1, #176]	; 0xb0
   19458:	str	lr, [r1, #180]	; 0xb4
   1945c:	b	190cc <UnityAssertEqualMemory@@Base+0x10c>
   19460:	andeq	r0, r3, r0, lsl #29
   19464:	strdeq	lr, [r1], -r0
   19468:	andeq	lr, r1, ip, ror r1
   1946c:	andeq	lr, r1, r8, lsr #2

00019470 <UnityFail@@Base>:
   19470:	movw	r3, #5400	; 0x1518
   19474:	movt	r3, #3
   19478:	ldr	r3, [r3, #32]
   1947c:	cmp	r3, #0
   19480:	bne	19694 <UnityFail@@Base+0x224>
   19484:	ldr	r2, [pc, #688]	; 1973c <UnityFail@@Base+0x2cc>
   19488:	ldr	r3, [r2]
   1948c:	ldr	ip, [r2, #4]
   19490:	adds	r3, r3, #1
   19494:	adc	ip, ip, #0
   19498:	str	r3, [r2]
   1949c:	str	ip, [r2, #4]
   194a0:	movw	r3, #5400	; 0x1518
   194a4:	movt	r3, #3
   194a8:	ldr	r3, [r3, #36]	; 0x24
   194ac:	cmp	r3, #0
   194b0:	bxne	lr
   194b4:	strd	r4, [sp, #-16]!
   194b8:	str	r6, [sp, #8]
   194bc:	str	lr, [sp, #12]
   194c0:	mov	r4, r0
   194c4:	mov	r5, r2
   194c8:	ldr	r3, [r2, #8]
   194cc:	ldr	r2, [r2, #12]
   194d0:	adds	r3, r3, #1
   194d4:	adc	r2, r2, #0
   194d8:	str	r3, [r5, #8]
   194dc:	str	r2, [r5, #12]
   194e0:	movw	r3, #5400	; 0x1518
   194e4:	movt	r3, #3
   194e8:	ldr	r0, [r3]
   194ec:	bl	15ee8 <UnityPrint@@Base+0x5f4>
   194f0:	ldr	r3, [r5, #16]
   194f4:	ldr	r2, [r5, #20]
   194f8:	adds	r3, r3, #1
   194fc:	adc	r2, r2, #0
   19500:	str	r3, [r5, #16]
   19504:	str	r2, [r5, #20]
   19508:	bl	163a8 <UnityPrintFail@@Base>
   1950c:	cmp	r4, #0
   19510:	beq	196b4 <UnityFail@@Base+0x244>
   19514:	ldr	r5, [pc, #544]	; 1973c <UnityFail@@Base+0x2cc>
   19518:	ldr	r3, [r5, #24]
   1951c:	ldr	r2, [r5, #28]
   19520:	adds	r3, r3, #1
   19524:	adc	r2, r2, #0
   19528:	str	r3, [r5, #24]
   1952c:	str	r2, [r5, #28]
   19530:	movw	r3, #64564	; 0xfc34
   19534:	movt	r3, #2
   19538:	ldr	r1, [r3]
   1953c:	mov	r0, #58	; 0x3a
   19540:	bl	120f8 <putc@plt>
   19544:	ldr	r3, [r5, #40]	; 0x28
   19548:	ldr	r2, [r5, #44]	; 0x2c
   1954c:	adds	r3, r3, #1
   19550:	adc	r2, r2, #0
   19554:	str	r3, [r5, #40]	; 0x28
   19558:	str	r2, [r5, #44]	; 0x2c
   1955c:	movw	r3, #5400	; 0x1518
   19560:	movt	r3, #3
   19564:	ldr	r3, [r3, #8]
   19568:	cmp	r3, #0
   1956c:	beq	1964c <UnityFail@@Base+0x1dc>
   19570:	ldr	r3, [r5, #48]	; 0x30
   19574:	ldr	r2, [r5, #52]	; 0x34
   19578:	adds	r3, r3, #1
   1957c:	adc	r2, r2, #0
   19580:	str	r3, [r5, #48]	; 0x30
   19584:	str	r2, [r5, #52]	; 0x34
   19588:	ldr	r0, [pc, #432]	; 19740 <UnityFail@@Base+0x2d0>
   1958c:	bl	158f4 <UnityPrint@@Base>
   19590:	ldr	r3, [r5, #56]	; 0x38
   19594:	ldr	r2, [r5, #60]	; 0x3c
   19598:	adds	r3, r3, #1
   1959c:	adc	r2, r2, #0
   195a0:	str	r3, [r5, #56]	; 0x38
   195a4:	str	r2, [r5, #60]	; 0x3c
   195a8:	movw	r5, #5400	; 0x1518
   195ac:	movt	r5, #3
   195b0:	ldr	r0, [r5, #8]
   195b4:	bl	158f4 <UnityPrint@@Base>
   195b8:	ldr	r3, [r5, #12]
   195bc:	cmp	r3, #0
   195c0:	beq	196d0 <UnityFail@@Base+0x260>
   195c4:	ldr	r5, [pc, #368]	; 1973c <UnityFail@@Base+0x2cc>
   195c8:	ldr	r3, [r5, #64]	; 0x40
   195cc:	ldr	r2, [r5, #68]	; 0x44
   195d0:	adds	r3, r3, #1
   195d4:	adc	r2, r2, #0
   195d8:	str	r3, [r5, #64]	; 0x40
   195dc:	str	r2, [r5, #68]	; 0x44
   195e0:	ldr	r0, [pc, #348]	; 19744 <UnityFail@@Base+0x2d4>
   195e4:	bl	158f4 <UnityPrint@@Base>
   195e8:	ldr	r3, [r5, #80]	; 0x50
   195ec:	ldr	r2, [r5, #84]	; 0x54
   195f0:	adds	r3, r3, #1
   195f4:	adc	r2, r2, #0
   195f8:	str	r3, [r5, #80]	; 0x50
   195fc:	str	r2, [r5, #84]	; 0x54
   19600:	movw	r3, #5400	; 0x1518
   19604:	movt	r3, #3
   19608:	ldr	r0, [r3, #12]
   1960c:	bl	158f4 <UnityPrint@@Base>
   19610:	ldr	r3, [r5, #88]	; 0x58
   19614:	ldr	r2, [r5, #92]	; 0x5c
   19618:	adds	r3, r3, #1
   1961c:	adc	r2, r2, #0
   19620:	str	r3, [r5, #88]	; 0x58
   19624:	str	r2, [r5, #92]	; 0x5c
   19628:	ldr	r0, [pc, #280]	; 19748 <UnityFail@@Base+0x2d8>
   1962c:	bl	158f4 <UnityPrint@@Base>
   19630:	ldr	r2, [pc, #260]	; 1973c <UnityFail@@Base+0x2cc>
   19634:	ldr	r3, [r2, #96]	; 0x60
   19638:	ldr	r1, [r2, #100]	; 0x64
   1963c:	adds	r3, r3, #1
   19640:	adc	r1, r1, #0
   19644:	str	r3, [r2, #96]	; 0x60
   19648:	str	r1, [r2, #100]	; 0x64
   1964c:	ldrb	r3, [r4]
   19650:	cmp	r3, #32
   19654:	bne	196f0 <UnityFail@@Base+0x280>
   19658:	mov	r0, r4
   1965c:	bl	158f4 <UnityPrint@@Base>
   19660:	ldr	r2, [pc, #212]	; 1973c <UnityFail@@Base+0x2cc>
   19664:	ldr	r3, [r2, #120]	; 0x78
   19668:	ldr	r1, [r2, #124]	; 0x7c
   1966c:	adds	r3, r3, #1
   19670:	adc	r1, r1, #0
   19674:	str	r3, [r2, #120]	; 0x78
   19678:	str	r1, [r2, #124]	; 0x7c
   1967c:	movw	r0, #5400	; 0x1518
   19680:	movt	r0, #3
   19684:	mov	r1, #1
   19688:	str	r1, [r0, #32]
   1968c:	add	r0, r0, #40	; 0x28
   19690:	bl	11fcc <longjmp@plt>
   19694:	ldr	r2, [pc, #160]	; 1973c <UnityFail@@Base+0x2cc>
   19698:	ldr	r3, [r2, #-8]
   1969c:	ldr	r1, [r2, #-4]
   196a0:	adds	r3, r3, #1
   196a4:	adc	r1, r1, #0
   196a8:	str	r3, [r2, #-8]
   196ac:	str	r1, [r2, #-4]
   196b0:	bx	lr
   196b4:	ldr	r3, [r5, #32]
   196b8:	ldr	r1, [r5, #36]	; 0x24
   196bc:	adds	r3, r3, #1
   196c0:	adc	r1, r1, #0
   196c4:	str	r3, [r5, #32]
   196c8:	str	r1, [r5, #36]	; 0x24
   196cc:	b	1967c <UnityFail@@Base+0x20c>
   196d0:	ldr	r2, [pc, #100]	; 1973c <UnityFail@@Base+0x2cc>
   196d4:	ldr	r3, [r2, #72]	; 0x48
   196d8:	ldr	r1, [r2, #76]	; 0x4c
   196dc:	adds	r3, r3, #1
   196e0:	adc	r1, r1, #0
   196e4:	str	r3, [r2, #72]	; 0x48
   196e8:	str	r1, [r2, #76]	; 0x4c
   196ec:	b	19628 <UnityFail@@Base+0x1b8>
   196f0:	ldr	r5, [pc, #68]	; 1973c <UnityFail@@Base+0x2cc>
   196f4:	ldr	r3, [r5, #104]	; 0x68
   196f8:	ldr	r2, [r5, #108]	; 0x6c
   196fc:	adds	r3, r3, #1
   19700:	adc	r2, r2, #0
   19704:	str	r3, [r5, #104]	; 0x68
   19708:	str	r2, [r5, #108]	; 0x6c
   1970c:	movw	r3, #64564	; 0xfc34
   19710:	movt	r3, #2
   19714:	ldr	r1, [r3]
   19718:	mov	r0, #32
   1971c:	bl	120f8 <putc@plt>
   19720:	ldr	r3, [r5, #112]	; 0x70
   19724:	ldr	r2, [r5, #116]	; 0x74
   19728:	adds	r3, r3, #1
   1972c:	adc	r2, r2, #0
   19730:	str	r3, [r5, #112]	; 0x70
   19734:	str	r2, [r5, #116]	; 0x74
   19738:	b	19658 <UnityFail@@Base+0x1e8>
   1973c:	andeq	r0, r3, r0, asr #30
   19740:	andeq	lr, r1, r8, lsl #1
   19744:	muleq	r1, r4, r0
   19748:	andeq	lr, r1, r4, lsl #1

0001974c <UnityIgnore@@Base>:
   1974c:	movw	r3, #5400	; 0x1518
   19750:	movt	r3, #3
   19754:	ldr	r3, [r3, #32]
   19758:	cmp	r3, #0
   1975c:	bne	19898 <UnityIgnore@@Base+0x14c>
   19760:	ldr	r2, [pc, #364]	; 198d4 <UnityIgnore@@Base+0x188>
   19764:	ldr	r3, [r2, #8]
   19768:	ldr	ip, [r2, #12]
   1976c:	adds	r3, r3, #1
   19770:	adc	ip, ip, #0
   19774:	str	r3, [r2, #8]
   19778:	str	ip, [r2, #12]
   1977c:	movw	r3, #5400	; 0x1518
   19780:	movt	r3, #3
   19784:	ldr	r3, [r3, #36]	; 0x24
   19788:	cmp	r3, #0
   1978c:	bxne	lr
   19790:	strd	r4, [sp, #-16]!
   19794:	str	r6, [sp, #8]
   19798:	str	lr, [sp, #12]
   1979c:	mov	r4, r0
   197a0:	mov	r5, r2
   197a4:	ldr	r3, [r2, #16]
   197a8:	ldr	r2, [r2, #20]
   197ac:	adds	r3, r3, #1
   197b0:	adc	r2, r2, #0
   197b4:	str	r3, [r5, #16]
   197b8:	str	r2, [r5, #20]
   197bc:	movw	r3, #5400	; 0x1518
   197c0:	movt	r3, #3
   197c4:	ldr	r0, [r3]
   197c8:	bl	15ee8 <UnityPrint@@Base+0x5f4>
   197cc:	ldr	r3, [r5, #24]
   197d0:	ldr	r2, [r5, #28]
   197d4:	adds	r3, r3, #1
   197d8:	adc	r2, r2, #0
   197dc:	str	r3, [r5, #24]
   197e0:	str	r2, [r5, #28]
   197e4:	ldr	r0, [pc, #236]	; 198d8 <UnityIgnore@@Base+0x18c>
   197e8:	bl	158f4 <UnityPrint@@Base>
   197ec:	cmp	r4, #0
   197f0:	beq	198b8 <UnityIgnore@@Base+0x16c>
   197f4:	ldr	r5, [pc, #216]	; 198d4 <UnityIgnore@@Base+0x188>
   197f8:	ldr	r3, [r5, #32]
   197fc:	ldr	r2, [r5, #36]	; 0x24
   19800:	adds	r3, r3, #1
   19804:	adc	r2, r2, #0
   19808:	str	r3, [r5, #32]
   1980c:	str	r2, [r5, #36]	; 0x24
   19810:	movw	r6, #64564	; 0xfc34
   19814:	movt	r6, #2
   19818:	ldr	r1, [r6]
   1981c:	mov	r0, #58	; 0x3a
   19820:	bl	120f8 <putc@plt>
   19824:	ldr	r3, [r5, #48]	; 0x30
   19828:	ldr	r2, [r5, #52]	; 0x34
   1982c:	adds	r3, r3, #1
   19830:	adc	r2, r2, #0
   19834:	str	r3, [r5, #48]	; 0x30
   19838:	str	r2, [r5, #52]	; 0x34
   1983c:	ldr	r1, [r6]
   19840:	mov	r0, #32
   19844:	bl	120f8 <putc@plt>
   19848:	ldr	r3, [r5, #56]	; 0x38
   1984c:	ldr	r2, [r5, #60]	; 0x3c
   19850:	adds	r3, r3, #1
   19854:	adc	r2, r2, #0
   19858:	str	r3, [r5, #56]	; 0x38
   1985c:	str	r2, [r5, #60]	; 0x3c
   19860:	mov	r0, r4
   19864:	bl	158f4 <UnityPrint@@Base>
   19868:	ldr	r3, [r5, #64]	; 0x40
   1986c:	ldr	r2, [r5, #68]	; 0x44
   19870:	adds	r3, r3, #1
   19874:	adc	r2, r2, #0
   19878:	str	r3, [r5, #64]	; 0x40
   1987c:	str	r2, [r5, #68]	; 0x44
   19880:	movw	r0, #5400	; 0x1518
   19884:	movt	r0, #3
   19888:	mov	r1, #1
   1988c:	str	r1, [r0, #36]	; 0x24
   19890:	add	r0, r0, #40	; 0x28
   19894:	bl	11fcc <longjmp@plt>
   19898:	ldr	r2, [pc, #52]	; 198d4 <UnityIgnore@@Base+0x188>
   1989c:	ldr	r3, [r2]
   198a0:	ldr	r1, [r2, #4]
   198a4:	adds	r3, r3, #1
   198a8:	adc	r1, r1, #0
   198ac:	str	r3, [r2]
   198b0:	str	r1, [r2, #4]
   198b4:	bx	lr
   198b8:	ldr	r3, [r5, #40]	; 0x28
   198bc:	ldr	r1, [r5, #44]	; 0x2c
   198c0:	adds	r3, r3, #1
   198c4:	adc	r1, r1, #0
   198c8:	str	r3, [r5, #40]	; 0x28
   198cc:	str	r1, [r5, #44]	; 0x2c
   198d0:	b	19880 <UnityIgnore@@Base+0x134>
   198d4:	andeq	r0, r3, r0, asr #31
   198d8:	muleq	r1, r8, r1

000198dc <setUp@@Base>:
   198dc:	ldr	r2, [pc, #24]	; 198fc <setUp@@Base+0x20>
   198e0:	ldr	r3, [r2, #-8]
   198e4:	ldr	r1, [r2, #-4]
   198e8:	adds	r3, r3, #1
   198ec:	adc	r1, r1, #0
   198f0:	str	r3, [r2, #-8]
   198f4:	str	r1, [r2, #-4]
   198f8:	bx	lr
   198fc:	andeq	r1, r3, r0, lsl r0

00019900 <tearDown@@Base>:
   19900:	ldr	r2, [pc, #24]	; 19920 <tearDown@@Base+0x20>
   19904:	ldr	r3, [r2]
   19908:	ldr	r1, [r2, #4]
   1990c:	adds	r3, r3, #1
   19910:	adc	r1, r1, #0
   19914:	str	r3, [r2]
   19918:	str	r1, [r2, #4]
   1991c:	bx	lr
   19920:	andeq	r1, r3, r0, lsl r0

00019924 <UnityDefaultTestRun@@Base>:
   19924:	str	r4, [sp, #-8]!
   19928:	str	lr, [sp, #4]
   1992c:	sub	sp, sp, #8
   19930:	str	r0, [sp, #4]
   19934:	ldr	r0, [pc, #392]	; 19ac4 <UnityDefaultTestRun@@Base+0x1a0>
   19938:	ldr	r3, [r0, #-8]
   1993c:	ldr	ip, [r0, #-4]
   19940:	adds	r3, r3, #1
   19944:	adc	ip, ip, #0
   19948:	str	r3, [r0, #-8]
   1994c:	str	ip, [r0, #-4]
   19950:	movw	r0, #5400	; 0x1518
   19954:	movt	r0, #3
   19958:	str	r1, [r0, #4]
   1995c:	str	r2, [r0, #16]
   19960:	ldr	r3, [r0, #20]
   19964:	add	r3, r3, #1
   19968:	str	r3, [r0, #20]
   1996c:	mov	r3, #0
   19970:	str	r3, [r0, #8]
   19974:	str	r3, [r0, #12]
   19978:	add	r0, r0, #40	; 0x28
   1997c:	bl	11fd8 <_setjmp@plt>
   19980:	ldr	r2, [pc, #316]	; 19ac4 <UnityDefaultTestRun@@Base+0x1a0>
   19984:	ldr	r3, [r2]
   19988:	ldr	r1, [r2, #4]
   1998c:	adds	r3, r3, #1
   19990:	adc	r1, r1, #0
   19994:	str	r3, [r2]
   19998:	str	r1, [r2, #4]
   1999c:	cmp	r0, #0
   199a0:	beq	19a2c <UnityDefaultTestRun@@Base+0x108>
   199a4:	ldr	r0, [pc, #284]	; 19ac8 <UnityDefaultTestRun@@Base+0x1a4>
   199a8:	bl	11fd8 <_setjmp@plt>
   199ac:	ldr	r2, [pc, #272]	; 19ac4 <UnityDefaultTestRun@@Base+0x1a0>
   199b0:	ldr	r3, [r2, #32]
   199b4:	ldr	r1, [r2, #36]	; 0x24
   199b8:	adds	r3, r3, #1
   199bc:	adc	r1, r1, #0
   199c0:	str	r3, [r2, #32]
   199c4:	str	r1, [r2, #36]	; 0x24
   199c8:	cmp	r0, #0
   199cc:	bne	199fc <UnityDefaultTestRun@@Base+0xd8>
   199d0:	ldr	r3, [r2, #40]	; 0x28
   199d4:	ldr	r1, [r2, #44]	; 0x2c
   199d8:	adds	r3, r3, #1
   199dc:	adc	r1, r1, #0
   199e0:	str	r3, [r2, #40]	; 0x28
   199e4:	str	r1, [r2, #44]	; 0x2c
   199e8:	movw	r3, #5400	; 0x1518
   199ec:	movt	r3, #3
   199f0:	ldr	r3, [r3, #36]	; 0x24
   199f4:	cmp	r3, #0
   199f8:	beq	19a88 <UnityDefaultTestRun@@Base+0x164>
   199fc:	bl	16458 <UnityConcludeTest@@Base>
   19a00:	ldr	r2, [pc, #188]	; 19ac4 <UnityDefaultTestRun@@Base+0x1a0>
   19a04:	ldr	r3, [r2, #64]	; 0x40
   19a08:	ldr	r1, [r2, #68]	; 0x44
   19a0c:	adds	r3, r3, #1
   19a10:	adc	r1, r1, #0
   19a14:	str	r3, [r2, #64]	; 0x40
   19a18:	str	r1, [r2, #68]	; 0x44
   19a1c:	add	sp, sp, #8
   19a20:	ldr	r4, [sp]
   19a24:	add	sp, sp, #4
   19a28:	pop	{pc}		; (ldr pc, [sp], #4)
   19a2c:	mov	r4, r2
   19a30:	ldr	r3, [r2, #8]
   19a34:	ldr	r2, [r2, #12]
   19a38:	adds	r3, r3, #1
   19a3c:	adc	r2, r2, #0
   19a40:	str	r3, [r4, #8]
   19a44:	str	r2, [r4, #12]
   19a48:	bl	198dc <setUp@@Base>
   19a4c:	ldr	r3, [r4, #16]
   19a50:	ldr	r2, [r4, #20]
   19a54:	adds	r3, r3, #1
   19a58:	adc	r2, r2, #0
   19a5c:	str	r3, [r4, #16]
   19a60:	str	r2, [r4, #20]
   19a64:	ldr	r3, [sp, #4]
   19a68:	blx	r3
   19a6c:	ldr	r3, [r4, #24]
   19a70:	ldr	r2, [r4, #28]
   19a74:	adds	r3, r3, #1
   19a78:	adc	r2, r2, #0
   19a7c:	str	r3, [r4, #24]
   19a80:	str	r2, [r4, #28]
   19a84:	b	199a4 <UnityDefaultTestRun@@Base+0x80>
   19a88:	mov	r4, r2
   19a8c:	ldr	r3, [r2, #48]	; 0x30
   19a90:	ldr	r2, [r2, #52]	; 0x34
   19a94:	adds	r3, r3, #1
   19a98:	adc	r2, r2, #0
   19a9c:	str	r3, [r4, #48]	; 0x30
   19aa0:	str	r2, [r4, #52]	; 0x34
   19aa4:	bl	19900 <tearDown@@Base>
   19aa8:	ldr	r3, [r4, #56]	; 0x38
   19aac:	ldr	r2, [r4, #60]	; 0x3c
   19ab0:	adds	r3, r3, #1
   19ab4:	adc	r2, r2, #0
   19ab8:	str	r3, [r4, #56]	; 0x38
   19abc:	str	r2, [r4, #60]	; 0x3c
   19ac0:	b	199fc <UnityDefaultTestRun@@Base+0xd8>
   19ac4:	andeq	r1, r3, r0, lsr #32
   19ac8:	andeq	r1, r3, r0, asr #10

00019acc <UnityBegin@@Base>:
   19acc:	ldr	r2, [pc, #76]	; 19b20 <UnityBegin@@Base+0x54>
   19ad0:	ldr	r3, [r2, #-8]
   19ad4:	ldr	r1, [r2, #-4]
   19ad8:	adds	r3, r3, #1
   19adc:	adc	r1, r1, #0
   19ae0:	str	r3, [r2, #-8]
   19ae4:	str	r1, [r2, #-4]
   19ae8:	movw	r3, #5400	; 0x1518
   19aec:	movt	r3, #3
   19af0:	str	r0, [r3]
   19af4:	mov	r2, #0
   19af8:	str	r2, [r3, #4]
   19afc:	str	r2, [r3, #16]
   19b00:	str	r2, [r3, #20]
   19b04:	str	r2, [r3, #24]
   19b08:	str	r2, [r3, #28]
   19b0c:	str	r2, [r3, #32]
   19b10:	str	r2, [r3, #36]	; 0x24
   19b14:	str	r2, [r3, #8]
   19b18:	str	r2, [r3, #12]
   19b1c:	bx	lr
   19b20:	andeq	r1, r3, r0, ror r0

00019b24 <UnityEnd@@Base>:
   19b24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19b28:	strd	r6, [sp, #8]
   19b2c:	str	r8, [sp, #16]
   19b30:	str	lr, [sp, #20]
   19b34:	ldr	r4, [pc, #556]	; 19d68 <UnityEnd@@Base+0x244>
   19b38:	ldr	r3, [r4]
   19b3c:	ldr	r2, [r4, #4]
   19b40:	adds	r3, r3, #1
   19b44:	adc	r2, r2, #0
   19b48:	str	r3, [r4]
   19b4c:	str	r2, [r4, #4]
   19b50:	movw	r7, #64564	; 0xfc34
   19b54:	movt	r7, #2
   19b58:	ldr	r1, [r7]
   19b5c:	mov	r0, #10
   19b60:	bl	120f8 <putc@plt>
   19b64:	ldr	r3, [r4, #8]
   19b68:	ldr	r2, [r4, #12]
   19b6c:	adds	r3, r3, #1
   19b70:	adc	r2, r2, #0
   19b74:	str	r3, [r4, #8]
   19b78:	str	r2, [r4, #12]
   19b7c:	movw	r6, #57420	; 0xe04c
   19b80:	movt	r6, #1
   19b84:	add	r0, r6, #340	; 0x154
   19b88:	bl	158f4 <UnityPrint@@Base>
   19b8c:	ldr	r3, [r4, #16]
   19b90:	ldr	r2, [r4, #20]
   19b94:	adds	r3, r3, #1
   19b98:	adc	r2, r2, #0
   19b9c:	str	r3, [r4, #16]
   19ba0:	str	r2, [r4, #20]
   19ba4:	ldr	r1, [r7]
   19ba8:	mov	r0, #10
   19bac:	bl	120f8 <putc@plt>
   19bb0:	ldr	r3, [r4, #24]
   19bb4:	ldr	r2, [r4, #28]
   19bb8:	adds	r3, r3, #1
   19bbc:	adc	r2, r2, #0
   19bc0:	str	r3, [r4, #24]
   19bc4:	str	r2, [r4, #28]
   19bc8:	movw	r5, #5400	; 0x1518
   19bcc:	movt	r5, #3
   19bd0:	ldr	r0, [r5, #20]
   19bd4:	bl	150e0 <UnityPrintNumber@@Base>
   19bd8:	ldr	r3, [r4, #32]
   19bdc:	ldr	r2, [r4, #36]	; 0x24
   19be0:	adds	r3, r3, #1
   19be4:	adc	r2, r2, #0
   19be8:	str	r3, [r4, #32]
   19bec:	str	r2, [r4, #36]	; 0x24
   19bf0:	add	r0, r6, #364	; 0x16c
   19bf4:	bl	158f4 <UnityPrint@@Base>
   19bf8:	ldr	r3, [r4, #40]	; 0x28
   19bfc:	ldr	r2, [r4, #44]	; 0x2c
   19c00:	adds	r3, r3, #1
   19c04:	adc	r2, r2, #0
   19c08:	str	r3, [r4, #40]	; 0x28
   19c0c:	str	r2, [r4, #44]	; 0x2c
   19c10:	ldr	r0, [r5, #24]
   19c14:	bl	150e0 <UnityPrintNumber@@Base>
   19c18:	ldr	r3, [r4, #48]	; 0x30
   19c1c:	ldr	r2, [r4, #52]	; 0x34
   19c20:	adds	r3, r3, #1
   19c24:	adc	r2, r2, #0
   19c28:	str	r3, [r4, #48]	; 0x30
   19c2c:	str	r2, [r4, #52]	; 0x34
   19c30:	add	r0, r6, #372	; 0x174
   19c34:	bl	158f4 <UnityPrint@@Base>
   19c38:	ldr	r3, [r4, #56]	; 0x38
   19c3c:	ldr	r2, [r4, #60]	; 0x3c
   19c40:	adds	r3, r3, #1
   19c44:	adc	r2, r2, #0
   19c48:	str	r3, [r4, #56]	; 0x38
   19c4c:	str	r2, [r4, #60]	; 0x3c
   19c50:	ldr	r0, [r5, #28]
   19c54:	bl	150e0 <UnityPrintNumber@@Base>
   19c58:	ldr	r3, [r4, #64]	; 0x40
   19c5c:	ldr	r2, [r4, #68]	; 0x44
   19c60:	adds	r3, r3, #1
   19c64:	adc	r2, r2, #0
   19c68:	str	r3, [r4, #64]	; 0x40
   19c6c:	str	r2, [r4, #68]	; 0x44
   19c70:	add	r0, r6, #384	; 0x180
   19c74:	bl	158f4 <UnityPrint@@Base>
   19c78:	ldr	r3, [r4, #72]	; 0x48
   19c7c:	ldr	r2, [r4, #76]	; 0x4c
   19c80:	adds	r3, r3, #1
   19c84:	adc	r2, r2, #0
   19c88:	str	r3, [r4, #72]	; 0x48
   19c8c:	str	r2, [r4, #76]	; 0x4c
   19c90:	ldr	r1, [r7]
   19c94:	mov	r0, #10
   19c98:	bl	120f8 <putc@plt>
   19c9c:	ldr	r3, [r5, #24]
   19ca0:	cmp	r3, #0
   19ca4:	bne	19d2c <UnityEnd@@Base+0x208>
   19ca8:	ldr	r3, [r4, #80]	; 0x50
   19cac:	ldr	r2, [r4, #84]	; 0x54
   19cb0:	adds	r3, r3, #1
   19cb4:	adc	r2, r2, #0
   19cb8:	str	r3, [r4, #80]	; 0x50
   19cbc:	str	r2, [r4, #84]	; 0x54
   19cc0:	bl	16400 <UnityPrintOk@@Base>
   19cc4:	ldr	r3, [r4, #96]	; 0x60
   19cc8:	ldr	r2, [r4, #100]	; 0x64
   19ccc:	adds	r3, r3, #1
   19cd0:	adc	r2, r2, #0
   19cd4:	str	r3, [r4, #96]	; 0x60
   19cd8:	str	r2, [r4, #100]	; 0x64
   19cdc:	movw	r3, #64564	; 0xfc34
   19ce0:	movt	r3, #2
   19ce4:	ldr	r1, [r3]
   19ce8:	mov	r0, #10
   19cec:	bl	120f8 <putc@plt>
   19cf0:	ldr	r2, [pc, #112]	; 19d68 <UnityEnd@@Base+0x244>
   19cf4:	ldr	r3, [r2, #112]	; 0x70
   19cf8:	ldr	r1, [r2, #116]	; 0x74
   19cfc:	adds	r3, r3, #1
   19d00:	adc	r1, r1, #0
   19d04:	str	r3, [r2, #112]	; 0x70
   19d08:	str	r1, [r2, #116]	; 0x74
   19d0c:	movw	r3, #5400	; 0x1518
   19d10:	movt	r3, #3
   19d14:	ldr	r0, [r3, #24]
   19d18:	ldrd	r4, [sp]
   19d1c:	ldrd	r6, [sp, #8]
   19d20:	ldr	r8, [sp, #16]
   19d24:	add	sp, sp, #20
   19d28:	pop	{pc}		; (ldr pc, [sp], #4)
   19d2c:	ldr	r4, [pc, #52]	; 19d68 <UnityEnd@@Base+0x244>
   19d30:	ldr	r3, [r4, #88]	; 0x58
   19d34:	ldr	r2, [r4, #92]	; 0x5c
   19d38:	adds	r3, r3, #1
   19d3c:	adc	r2, r2, #0
   19d40:	str	r3, [r4, #88]	; 0x58
   19d44:	str	r2, [r4, #92]	; 0x5c
   19d48:	bl	163a8 <UnityPrintFail@@Base>
   19d4c:	ldr	r3, [r4, #104]	; 0x68
   19d50:	ldr	r2, [r4, #108]	; 0x6c
   19d54:	adds	r3, r3, #1
   19d58:	adc	r2, r2, #0
   19d5c:	str	r3, [r4, #104]	; 0x68
   19d60:	str	r2, [r4, #108]	; 0x6c
   19d64:	b	19cdc <UnityEnd@@Base+0x1b8>
   19d68:	andeq	r1, r3, r0, ror r0
   19d6c:	str	r4, [sp, #-8]!
   19d70:	str	lr, [sp, #4]
   19d74:	movw	r0, #62464	; 0xf400
   19d78:	movt	r0, #2
   19d7c:	bl	1d8f8 <__gcov_sort_n_vals@@Base+0x4a0>
   19d80:	ldr	r4, [sp]
   19d84:	add	sp, sp, #4
   19d88:	pop	{pc}		; (ldr pc, [sp], #4)
   19d8c:	str	r4, [sp, #-8]!
   19d90:	str	lr, [sp, #4]
   19d94:	bl	1d888 <__gcov_sort_n_vals@@Base+0x430>
   19d98:	ldr	r4, [sp]
   19d9c:	add	sp, sp, #4
   19da0:	pop	{pc}		; (ldr pc, [sp], #4)

00019da4 <init_token_int_type@@Base>:
   19da4:	movw	r3, #4328	; 0x10e8
   19da8:	movt	r3, #3
   19dac:	ldr	r2, [r3]
   19db0:	ldr	r1, [r3, #4]
   19db4:	adds	r2, r2, #1
   19db8:	adc	r1, r1, #0
   19dbc:	str	r2, [r3]
   19dc0:	str	r1, [r3, #4]
   19dc4:	mov	r3, #0
   19dc8:	str	r3, [r0]
   19dcc:	bx	lr

00019dd0 <init_token_int_value@@Base>:
   19dd0:	movw	r3, #4328	; 0x10e8
   19dd4:	movt	r3, #3
   19dd8:	ldr	r2, [r3, #8]
   19ddc:	ldr	ip, [r3, #12]
   19de0:	adds	r2, r2, #1
   19de4:	adc	ip, ip, #0
   19de8:	str	r2, [r3, #8]
   19dec:	str	ip, [r3, #12]
   19df0:	mov	r3, #1
   19df4:	str	r3, [r0]
   19df8:	str	r1, [r0, #4]
   19dfc:	bx	lr

00019e00 <init_token_function@@Base>:
   19e00:	movw	r3, #4328	; 0x10e8
   19e04:	movt	r3, #3
   19e08:	ldr	r2, [r3, #16]
   19e0c:	ldr	ip, [r3, #20]
   19e10:	adds	r2, r2, #1
   19e14:	adc	ip, ip, #0
   19e18:	str	r2, [r3, #16]
   19e1c:	str	ip, [r3, #20]
   19e20:	mov	r3, #2
   19e24:	str	r3, [r0]
   19e28:	str	r1, [r0, #4]
   19e2c:	bx	lr

00019e30 <init_token_opar@@Base>:
   19e30:	movw	r3, #4328	; 0x10e8
   19e34:	movt	r3, #3
   19e38:	ldr	r2, [r3, #24]
   19e3c:	ldr	r1, [r3, #28]
   19e40:	adds	r2, r2, #1
   19e44:	adc	r1, r1, #0
   19e48:	str	r2, [r3, #24]
   19e4c:	str	r1, [r3, #28]
   19e50:	mov	r3, #3
   19e54:	str	r3, [r0]
   19e58:	bx	lr

00019e5c <init_token_cpar@@Base>:
   19e5c:	movw	r3, #4328	; 0x10e8
   19e60:	movt	r3, #3
   19e64:	ldr	r2, [r3, #32]
   19e68:	ldr	r1, [r3, #36]	; 0x24
   19e6c:	adds	r2, r2, #1
   19e70:	adc	r1, r1, #0
   19e74:	str	r2, [r3, #32]
   19e78:	str	r1, [r3, #36]	; 0x24
   19e7c:	mov	r3, #4
   19e80:	str	r3, [r0]
   19e84:	bx	lr

00019e88 <init_token_obra@@Base>:
   19e88:	movw	r3, #4328	; 0x10e8
   19e8c:	movt	r3, #3
   19e90:	ldr	r2, [r3, #40]	; 0x28
   19e94:	ldr	r1, [r3, #44]	; 0x2c
   19e98:	adds	r2, r2, #1
   19e9c:	adc	r1, r1, #0
   19ea0:	str	r2, [r3, #40]	; 0x28
   19ea4:	str	r1, [r3, #44]	; 0x2c
   19ea8:	mov	r3, #5
   19eac:	str	r3, [r0]
   19eb0:	bx	lr

00019eb4 <init_token_cbra@@Base>:
   19eb4:	movw	r3, #4328	; 0x10e8
   19eb8:	movt	r3, #3
   19ebc:	ldr	r2, [r3, #48]	; 0x30
   19ec0:	ldr	r1, [r3, #52]	; 0x34
   19ec4:	adds	r2, r2, #1
   19ec8:	adc	r1, r1, #0
   19ecc:	str	r2, [r3, #48]	; 0x30
   19ed0:	str	r1, [r3, #52]	; 0x34
   19ed4:	mov	r3, #6
   19ed8:	str	r3, [r0]
   19edc:	bx	lr

00019ee0 <init_token_return@@Base>:
   19ee0:	movw	r3, #4328	; 0x10e8
   19ee4:	movt	r3, #3
   19ee8:	ldr	r2, [r3, #56]	; 0x38
   19eec:	ldr	r1, [r3, #60]	; 0x3c
   19ef0:	adds	r2, r2, #1
   19ef4:	adc	r1, r1, #0
   19ef8:	str	r2, [r3, #56]	; 0x38
   19efc:	str	r1, [r3, #60]	; 0x3c
   19f00:	mov	r3, #7
   19f04:	str	r3, [r0]
   19f08:	bx	lr

00019f0c <init_token_semicolon@@Base>:
   19f0c:	movw	r3, #4328	; 0x10e8
   19f10:	movt	r3, #3
   19f14:	ldr	r2, [r3, #64]	; 0x40
   19f18:	ldr	r1, [r3, #68]	; 0x44
   19f1c:	adds	r2, r2, #1
   19f20:	adc	r1, r1, #0
   19f24:	str	r2, [r3, #64]	; 0x40
   19f28:	str	r1, [r3, #68]	; 0x44
   19f2c:	mov	r3, #8
   19f30:	str	r3, [r0]
   19f34:	bx	lr

00019f38 <init_token_eof@@Base>:
   19f38:	movw	r3, #4328	; 0x10e8
   19f3c:	movt	r3, #3
   19f40:	ldr	r2, [r3, #72]	; 0x48
   19f44:	ldr	r1, [r3, #76]	; 0x4c
   19f48:	adds	r2, r2, #1
   19f4c:	adc	r1, r1, #0
   19f50:	str	r2, [r3, #72]	; 0x48
   19f54:	str	r1, [r3, #76]	; 0x4c
   19f58:	mov	r3, #9
   19f5c:	str	r3, [r0]
   19f60:	bx	lr

00019f64 <init_token_if@@Base>:
   19f64:	movw	r3, #4328	; 0x10e8
   19f68:	movt	r3, #3
   19f6c:	ldr	r2, [r3, #80]	; 0x50
   19f70:	ldr	r1, [r3, #84]	; 0x54
   19f74:	adds	r2, r2, #1
   19f78:	adc	r1, r1, #0
   19f7c:	str	r2, [r3, #80]	; 0x50
   19f80:	str	r1, [r3, #84]	; 0x54
   19f84:	mov	r3, #10
   19f88:	str	r3, [r0]
   19f8c:	bx	lr

00019f90 <init_token_else@@Base>:
   19f90:	movw	r3, #4328	; 0x10e8
   19f94:	movt	r3, #3
   19f98:	ldr	r2, [r3, #88]	; 0x58
   19f9c:	ldr	r1, [r3, #92]	; 0x5c
   19fa0:	adds	r2, r2, #1
   19fa4:	adc	r1, r1, #0
   19fa8:	str	r2, [r3, #88]	; 0x58
   19fac:	str	r1, [r3, #92]	; 0x5c
   19fb0:	mov	r3, #11
   19fb4:	str	r3, [r0]
   19fb8:	bx	lr

00019fbc <init_token_boolean_op@@Base>:
   19fbc:	movw	r3, #4328	; 0x10e8
   19fc0:	movt	r3, #3
   19fc4:	ldr	r2, [r3, #96]	; 0x60
   19fc8:	ldr	ip, [r3, #100]	; 0x64
   19fcc:	adds	r2, r2, #1
   19fd0:	adc	ip, ip, #0
   19fd4:	str	r2, [r3, #96]	; 0x60
   19fd8:	str	ip, [r3, #100]	; 0x64
   19fdc:	mov	r3, #12
   19fe0:	str	r3, [r0]
   19fe4:	str	r1, [r0, #4]
   19fe8:	bx	lr

00019fec <free_token_int_type@@Base>:
   19fec:	str	r4, [sp, #-8]!
   19ff0:	str	lr, [sp, #4]
   19ff4:	movw	r3, #4328	; 0x10e8
   19ff8:	movt	r3, #3
   19ffc:	ldr	r2, [r3, #104]	; 0x68
   1a000:	ldr	r1, [r3, #108]	; 0x6c
   1a004:	adds	r2, r2, #1
   1a008:	adc	r1, r1, #0
   1a00c:	str	r2, [r3, #104]	; 0x68
   1a010:	str	r1, [r3, #108]	; 0x6c
   1a014:	bl	11fe4 <free@plt>
   1a018:	ldr	r4, [sp]
   1a01c:	add	sp, sp, #4
   1a020:	pop	{pc}		; (ldr pc, [sp], #4)

0001a024 <free_token_int_value@@Base>:
   1a024:	str	r4, [sp, #-8]!
   1a028:	str	lr, [sp, #4]
   1a02c:	movw	r3, #4328	; 0x10e8
   1a030:	movt	r3, #3
   1a034:	ldr	r2, [r3, #112]	; 0x70
   1a038:	ldr	r1, [r3, #116]	; 0x74
   1a03c:	adds	r2, r2, #1
   1a040:	adc	r1, r1, #0
   1a044:	str	r2, [r3, #112]	; 0x70
   1a048:	str	r1, [r3, #116]	; 0x74
   1a04c:	bl	11fe4 <free@plt>
   1a050:	ldr	r4, [sp]
   1a054:	add	sp, sp, #4
   1a058:	pop	{pc}		; (ldr pc, [sp], #4)

0001a05c <free_token_function@@Base>:
   1a05c:	str	r4, [sp, #-8]!
   1a060:	str	lr, [sp, #4]
   1a064:	movw	r3, #4328	; 0x10e8
   1a068:	movt	r3, #3
   1a06c:	ldr	r2, [r3, #120]	; 0x78
   1a070:	ldr	r1, [r3, #124]	; 0x7c
   1a074:	adds	r2, r2, #1
   1a078:	adc	r1, r1, #0
   1a07c:	str	r2, [r3, #120]	; 0x78
   1a080:	str	r1, [r3, #124]	; 0x7c
   1a084:	bl	11fe4 <free@plt>
   1a088:	ldr	r4, [sp]
   1a08c:	add	sp, sp, #4
   1a090:	pop	{pc}		; (ldr pc, [sp], #4)

0001a094 <free_token_opar@@Base>:
   1a094:	str	r4, [sp, #-8]!
   1a098:	str	lr, [sp, #4]
   1a09c:	movw	r3, #4328	; 0x10e8
   1a0a0:	movt	r3, #3
   1a0a4:	ldr	r2, [r3, #128]	; 0x80
   1a0a8:	ldr	r1, [r3, #132]	; 0x84
   1a0ac:	adds	r2, r2, #1
   1a0b0:	adc	r1, r1, #0
   1a0b4:	str	r2, [r3, #128]	; 0x80
   1a0b8:	str	r1, [r3, #132]	; 0x84
   1a0bc:	bl	11fe4 <free@plt>
   1a0c0:	ldr	r4, [sp]
   1a0c4:	add	sp, sp, #4
   1a0c8:	pop	{pc}		; (ldr pc, [sp], #4)

0001a0cc <free_token_cpar@@Base>:
   1a0cc:	str	r4, [sp, #-8]!
   1a0d0:	str	lr, [sp, #4]
   1a0d4:	movw	r3, #4328	; 0x10e8
   1a0d8:	movt	r3, #3
   1a0dc:	ldr	r2, [r3, #136]	; 0x88
   1a0e0:	ldr	r1, [r3, #140]	; 0x8c
   1a0e4:	adds	r2, r2, #1
   1a0e8:	adc	r1, r1, #0
   1a0ec:	str	r2, [r3, #136]	; 0x88
   1a0f0:	str	r1, [r3, #140]	; 0x8c
   1a0f4:	bl	11fe4 <free@plt>
   1a0f8:	ldr	r4, [sp]
   1a0fc:	add	sp, sp, #4
   1a100:	pop	{pc}		; (ldr pc, [sp], #4)

0001a104 <free_token_obra@@Base>:
   1a104:	str	r4, [sp, #-8]!
   1a108:	str	lr, [sp, #4]
   1a10c:	movw	r3, #4328	; 0x10e8
   1a110:	movt	r3, #3
   1a114:	ldr	r2, [r3, #144]	; 0x90
   1a118:	ldr	r1, [r3, #148]	; 0x94
   1a11c:	adds	r2, r2, #1
   1a120:	adc	r1, r1, #0
   1a124:	str	r2, [r3, #144]	; 0x90
   1a128:	str	r1, [r3, #148]	; 0x94
   1a12c:	bl	11fe4 <free@plt>
   1a130:	ldr	r4, [sp]
   1a134:	add	sp, sp, #4
   1a138:	pop	{pc}		; (ldr pc, [sp], #4)

0001a13c <free_token_cbra@@Base>:
   1a13c:	str	r4, [sp, #-8]!
   1a140:	str	lr, [sp, #4]
   1a144:	movw	r3, #4328	; 0x10e8
   1a148:	movt	r3, #3
   1a14c:	ldr	r2, [r3, #152]	; 0x98
   1a150:	ldr	r1, [r3, #156]	; 0x9c
   1a154:	adds	r2, r2, #1
   1a158:	adc	r1, r1, #0
   1a15c:	str	r2, [r3, #152]	; 0x98
   1a160:	str	r1, [r3, #156]	; 0x9c
   1a164:	bl	11fe4 <free@plt>
   1a168:	ldr	r4, [sp]
   1a16c:	add	sp, sp, #4
   1a170:	pop	{pc}		; (ldr pc, [sp], #4)

0001a174 <free_token_return@@Base>:
   1a174:	str	r4, [sp, #-8]!
   1a178:	str	lr, [sp, #4]
   1a17c:	movw	r3, #4328	; 0x10e8
   1a180:	movt	r3, #3
   1a184:	ldr	r2, [r3, #160]	; 0xa0
   1a188:	ldr	r1, [r3, #164]	; 0xa4
   1a18c:	adds	r2, r2, #1
   1a190:	adc	r1, r1, #0
   1a194:	str	r2, [r3, #160]	; 0xa0
   1a198:	str	r1, [r3, #164]	; 0xa4
   1a19c:	bl	11fe4 <free@plt>
   1a1a0:	ldr	r4, [sp]
   1a1a4:	add	sp, sp, #4
   1a1a8:	pop	{pc}		; (ldr pc, [sp], #4)

0001a1ac <free_token_semicolon@@Base>:
   1a1ac:	str	r4, [sp, #-8]!
   1a1b0:	str	lr, [sp, #4]
   1a1b4:	movw	r3, #4328	; 0x10e8
   1a1b8:	movt	r3, #3
   1a1bc:	ldr	r2, [r3, #168]	; 0xa8
   1a1c0:	ldr	r1, [r3, #172]	; 0xac
   1a1c4:	adds	r2, r2, #1
   1a1c8:	adc	r1, r1, #0
   1a1cc:	str	r2, [r3, #168]	; 0xa8
   1a1d0:	str	r1, [r3, #172]	; 0xac
   1a1d4:	bl	11fe4 <free@plt>
   1a1d8:	ldr	r4, [sp]
   1a1dc:	add	sp, sp, #4
   1a1e0:	pop	{pc}		; (ldr pc, [sp], #4)

0001a1e4 <free_token_eof@@Base>:
   1a1e4:	str	r4, [sp, #-8]!
   1a1e8:	str	lr, [sp, #4]
   1a1ec:	movw	r3, #4328	; 0x10e8
   1a1f0:	movt	r3, #3
   1a1f4:	ldr	r2, [r3, #176]	; 0xb0
   1a1f8:	ldr	r1, [r3, #180]	; 0xb4
   1a1fc:	adds	r2, r2, #1
   1a200:	adc	r1, r1, #0
   1a204:	str	r2, [r3, #176]	; 0xb0
   1a208:	str	r1, [r3, #180]	; 0xb4
   1a20c:	bl	11fe4 <free@plt>
   1a210:	ldr	r4, [sp]
   1a214:	add	sp, sp, #4
   1a218:	pop	{pc}		; (ldr pc, [sp], #4)

0001a21c <free_token_if@@Base>:
   1a21c:	str	r4, [sp, #-8]!
   1a220:	str	lr, [sp, #4]
   1a224:	movw	r3, #4328	; 0x10e8
   1a228:	movt	r3, #3
   1a22c:	ldr	r2, [r3, #184]	; 0xb8
   1a230:	ldr	r1, [r3, #188]	; 0xbc
   1a234:	adds	r2, r2, #1
   1a238:	adc	r1, r1, #0
   1a23c:	str	r2, [r3, #184]	; 0xb8
   1a240:	str	r1, [r3, #188]	; 0xbc
   1a244:	bl	11fe4 <free@plt>
   1a248:	ldr	r4, [sp]
   1a24c:	add	sp, sp, #4
   1a250:	pop	{pc}		; (ldr pc, [sp], #4)

0001a254 <free_token_else@@Base>:
   1a254:	str	r4, [sp, #-8]!
   1a258:	str	lr, [sp, #4]
   1a25c:	movw	r3, #4328	; 0x10e8
   1a260:	movt	r3, #3
   1a264:	ldr	r2, [r3, #192]	; 0xc0
   1a268:	ldr	r1, [r3, #196]	; 0xc4
   1a26c:	adds	r2, r2, #1
   1a270:	adc	r1, r1, #0
   1a274:	str	r2, [r3, #192]	; 0xc0
   1a278:	str	r1, [r3, #196]	; 0xc4
   1a27c:	bl	11fe4 <free@plt>
   1a280:	ldr	r4, [sp]
   1a284:	add	sp, sp, #4
   1a288:	pop	{pc}		; (ldr pc, [sp], #4)

0001a28c <free_token_boolean_op@@Base>:
   1a28c:	str	r4, [sp, #-8]!
   1a290:	str	lr, [sp, #4]
   1a294:	mov	r4, r0
   1a298:	ldr	r0, [r0, #4]
   1a29c:	cmp	r0, #0
   1a2a0:	beq	1a2dc <free_token_boolean_op@@Base+0x50>
   1a2a4:	movw	r3, #4328	; 0x10e8
   1a2a8:	movt	r3, #3
   1a2ac:	ldr	r2, [r3, #200]	; 0xc8
   1a2b0:	ldr	r1, [r3, #204]	; 0xcc
   1a2b4:	adds	r2, r2, #1
   1a2b8:	adc	r1, r1, #0
   1a2bc:	str	r2, [r3, #200]	; 0xc8
   1a2c0:	str	r1, [r3, #204]	; 0xcc
   1a2c4:	bl	11fe4 <free@plt>
   1a2c8:	mov	r0, r4
   1a2cc:	bl	11fe4 <free@plt>
   1a2d0:	ldr	r4, [sp]
   1a2d4:	add	sp, sp, #4
   1a2d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2dc:	movw	r3, #4328	; 0x10e8
   1a2e0:	movt	r3, #3
   1a2e4:	ldr	r2, [r3, #208]	; 0xd0
   1a2e8:	ldr	r1, [r3, #212]	; 0xd4
   1a2ec:	adds	r2, r2, #1
   1a2f0:	adc	r1, r1, #0
   1a2f4:	str	r2, [r3, #208]	; 0xd0
   1a2f8:	str	r1, [r3, #212]	; 0xd4
   1a2fc:	b	1a2c8 <free_token_boolean_op@@Base+0x3c>
   1a300:	str	r4, [sp, #-8]!
   1a304:	str	lr, [sp, #4]
   1a308:	movw	r0, #63476	; 0xf7f4
   1a30c:	movt	r0, #2
   1a310:	bl	1d8f8 <__gcov_sort_n_vals@@Base+0x4a0>
   1a314:	ldr	r4, [sp]
   1a318:	add	sp, sp, #4
   1a31c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a320:	str	r4, [sp, #-8]!
   1a324:	str	lr, [sp, #4]
   1a328:	bl	1d888 <__gcov_sort_n_vals@@Base+0x430>
   1a32c:	ldr	r4, [sp]
   1a330:	add	sp, sp, #4
   1a334:	pop	{pc}		; (ldr pc, [sp], #4)

0001a338 <init_lexer@@Base>:
   1a338:	movw	r3, #4544	; 0x11c0
   1a33c:	movt	r3, #3
   1a340:	ldr	r2, [r3]
   1a344:	ldr	ip, [r3, #4]
   1a348:	adds	r2, r2, #1
   1a34c:	adc	ip, ip, #0
   1a350:	str	r2, [r3]
   1a354:	str	ip, [r3, #4]
   1a358:	str	r1, [r0]
   1a35c:	mov	r3, #0
   1a360:	str	r3, [r0, #4]
   1a364:	str	r3, [r0, #8]
   1a368:	bx	lr

0001a36c <free_stack_base@@Base>:
   1a36c:	str	r4, [sp, #-8]!
   1a370:	str	lr, [sp, #4]
   1a374:	movw	r3, #4544	; 0x11c0
   1a378:	movt	r3, #3
   1a37c:	ldr	r2, [r3, #8]
   1a380:	ldr	r1, [r3, #12]
   1a384:	adds	r2, r2, #1
   1a388:	adc	r1, r1, #0
   1a38c:	str	r2, [r3, #8]
   1a390:	str	r1, [r3, #12]
   1a394:	bl	11fe4 <free@plt>
   1a398:	ldr	r4, [sp]
   1a39c:	add	sp, sp, #4
   1a3a0:	pop	{pc}		; (ldr pc, [sp], #4)

0001a3a4 <destroy_lexer@@Base>:
   1a3a4:	ldr	r0, [r0, #4]
   1a3a8:	cmp	r0, #0
   1a3ac:	beq	1a400 <destroy_lexer@@Base+0x5c>
   1a3b0:	str	r4, [sp, #-8]!
   1a3b4:	str	lr, [sp, #4]
   1a3b8:	movw	r4, #4544	; 0x11c0
   1a3bc:	movt	r4, #3
   1a3c0:	ldr	r3, [r4, #16]
   1a3c4:	ldr	r2, [r4, #20]
   1a3c8:	adds	r3, r3, #1
   1a3cc:	adc	r2, r2, #0
   1a3d0:	str	r3, [r4, #16]
   1a3d4:	str	r2, [r4, #20]
   1a3d8:	bl	1a36c <free_stack_base@@Base>
   1a3dc:	ldr	r3, [r4, #32]
   1a3e0:	ldr	r2, [r4, #36]	; 0x24
   1a3e4:	adds	r3, r3, #1
   1a3e8:	adc	r2, r2, #0
   1a3ec:	str	r3, [r4, #32]
   1a3f0:	str	r2, [r4, #36]	; 0x24
   1a3f4:	ldr	r4, [sp]
   1a3f8:	add	sp, sp, #4
   1a3fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a400:	movw	r3, #4544	; 0x11c0
   1a404:	movt	r3, #3
   1a408:	ldr	r2, [r3, #24]
   1a40c:	ldr	r1, [r3, #28]
   1a410:	adds	r2, r2, #1
   1a414:	adc	r1, r1, #0
   1a418:	str	r2, [r3, #24]
   1a41c:	str	r1, [r3, #28]
   1a420:	bx	lr

0001a424 <push_back@@Base>:
   1a424:	strd	r4, [sp, #-16]!
   1a428:	str	r6, [sp, #8]
   1a42c:	str	lr, [sp, #12]
   1a430:	mov	r4, r0
   1a434:	mov	r5, r1
   1a438:	movw	r3, #4544	; 0x11c0
   1a43c:	movt	r3, #3
   1a440:	ldr	r2, [r3, #40]	; 0x28
   1a444:	ldr	r1, [r3, #44]	; 0x2c
   1a448:	adds	r2, r2, #1
   1a44c:	adc	r1, r1, #0
   1a450:	str	r2, [r3, #40]	; 0x28
   1a454:	str	r1, [r3, #44]	; 0x2c
   1a458:	mov	r0, #8
   1a45c:	bl	12044 <malloc@plt>
   1a460:	str	r5, [r0, #4]
   1a464:	ldr	r3, [r4, #4]
   1a468:	str	r3, [r0]
   1a46c:	str	r0, [r4, #4]
   1a470:	ldrd	r4, [sp]
   1a474:	ldr	r6, [sp, #8]
   1a478:	add	sp, sp, #12
   1a47c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a480 <get_char@@Base>:
   1a480:	movw	r3, #4544	; 0x11c0
   1a484:	movt	r3, #3
   1a488:	ldr	r2, [r3, #48]	; 0x30
   1a48c:	ldr	r1, [r3, #52]	; 0x34
   1a490:	adds	r2, r2, #1
   1a494:	adc	r1, r1, #0
   1a498:	str	r2, [r3, #48]	; 0x30
   1a49c:	str	r1, [r3, #52]	; 0x34
   1a4a0:	ldr	r2, [r0]
   1a4a4:	ldr	r3, [r0, #8]
   1a4a8:	add	r1, r3, #1
   1a4ac:	str	r1, [r0, #8]
   1a4b0:	ldrb	r0, [r2, r3]
   1a4b4:	bx	lr

0001a4b8 <push_back_chars@@Base>:
   1a4b8:	str	r4, [sp, #-8]!
   1a4bc:	str	lr, [sp, #4]
   1a4c0:	ldr	ip, [r0, #8]
   1a4c4:	cmp	ip, r1
   1a4c8:	bcc	1a500 <push_back_chars@@Base+0x48>
   1a4cc:	movw	r3, #4544	; 0x11c0
   1a4d0:	movt	r3, #3
   1a4d4:	ldr	r2, [r3, #56]	; 0x38
   1a4d8:	ldr	lr, [r3, #60]	; 0x3c
   1a4dc:	adds	r2, r2, #1
   1a4e0:	adc	lr, lr, #0
   1a4e4:	str	r2, [r3, #56]	; 0x38
   1a4e8:	str	lr, [r3, #60]	; 0x3c
   1a4ec:	sub	ip, ip, r1
   1a4f0:	str	ip, [r0, #8]
   1a4f4:	ldr	r4, [sp]
   1a4f8:	add	sp, sp, #4
   1a4fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a500:	movw	r4, #4544	; 0x11c0
   1a504:	movt	r4, #3
   1a508:	ldr	r3, [r4, #64]	; 0x40
   1a50c:	ldr	r2, [r4, #68]	; 0x44
   1a510:	adds	r3, r3, #1
   1a514:	adc	r2, r2, #0
   1a518:	str	r3, [r4, #64]	; 0x40
   1a51c:	str	r2, [r4, #68]	; 0x44
   1a520:	movw	r3, #64560	; 0xfc30
   1a524:	movt	r3, #2
   1a528:	ldr	r3, [r3]
   1a52c:	mov	r2, #32
   1a530:	mov	r1, #1
   1a534:	movw	r0, #58152	; 0xe328
   1a538:	movt	r0, #1
   1a53c:	bl	12008 <fwrite@plt>
   1a540:	ldr	r3, [r4, #72]	; 0x48
   1a544:	ldr	r2, [r4, #76]	; 0x4c
   1a548:	adds	r3, r3, #1
   1a54c:	adc	r2, r2, #0
   1a550:	str	r3, [r4, #72]	; 0x48
   1a554:	str	r2, [r4, #76]	; 0x4c
   1a558:	mov	r0, #1
   1a55c:	bl	12074 <exit@plt>

0001a560 <push_back_one_char@@Base>:
   1a560:	str	r4, [sp, #-8]!
   1a564:	str	lr, [sp, #4]
   1a568:	movw	r4, #4544	; 0x11c0
   1a56c:	movt	r4, #3
   1a570:	ldr	r3, [r4, #80]	; 0x50
   1a574:	ldr	r2, [r4, #84]	; 0x54
   1a578:	adds	r3, r3, #1
   1a57c:	adc	r2, r2, #0
   1a580:	str	r3, [r4, #80]	; 0x50
   1a584:	str	r2, [r4, #84]	; 0x54
   1a588:	mov	r1, #1
   1a58c:	bl	1a4b8 <push_back_chars@@Base>
   1a590:	ldr	r3, [r4, #88]	; 0x58
   1a594:	ldr	r2, [r4, #92]	; 0x5c
   1a598:	adds	r3, r3, #1
   1a59c:	adc	r2, r2, #0
   1a5a0:	str	r3, [r4, #88]	; 0x58
   1a5a4:	str	r2, [r4, #92]	; 0x5c
   1a5a8:	ldr	r4, [sp]
   1a5ac:	add	sp, sp, #4
   1a5b0:	pop	{pc}		; (ldr pc, [sp], #4)

0001a5b4 <next@@Base>:
   1a5b4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1a5b8:	strd	r6, [sp, #8]
   1a5bc:	strd	r8, [sp, #16]
   1a5c0:	str	lr, [sp, #24]
   1a5c4:	sub	sp, sp, #516	; 0x204
   1a5c8:	mov	r5, r0
   1a5cc:	ldr	r0, [r0, #4]
   1a5d0:	cmp	r0, #0
   1a5d4:	beq	1a644 <next@@Base+0x90>
   1a5d8:	movw	r4, #4544	; 0x11c0
   1a5dc:	movt	r4, #3
   1a5e0:	ldr	r3, [r4, #96]	; 0x60
   1a5e4:	ldr	r2, [r4, #100]	; 0x64
   1a5e8:	adds	r3, r3, #1
   1a5ec:	adc	r2, r2, #0
   1a5f0:	str	r3, [r4, #96]	; 0x60
   1a5f4:	str	r2, [r4, #100]	; 0x64
   1a5f8:	ldr	r3, [r0]
   1a5fc:	str	r3, [r5, #4]
   1a600:	ldr	r6, [r0, #4]
   1a604:	mov	r3, #0
   1a608:	str	r3, [r0, #4]
   1a60c:	bl	1a36c <free_stack_base@@Base>
   1a610:	ldr	r3, [r4, #112]	; 0x70
   1a614:	ldr	r2, [r4, #116]	; 0x74
   1a618:	adds	r3, r3, #1
   1a61c:	adc	r2, r2, #0
   1a620:	str	r3, [r4, #112]	; 0x70
   1a624:	str	r2, [r4, #116]	; 0x74
   1a628:	mov	r0, r6
   1a62c:	add	sp, sp, #516	; 0x204
   1a630:	ldrd	r4, [sp]
   1a634:	ldrd	r6, [sp, #8]
   1a638:	ldrd	r8, [sp, #16]
   1a63c:	add	sp, sp, #24
   1a640:	pop	{pc}		; (ldr pc, [sp], #4)
   1a644:	movw	r3, #4544	; 0x11c0
   1a648:	movt	r3, #3
   1a64c:	ldr	r2, [r3, #104]	; 0x68
   1a650:	ldr	r1, [r3, #108]	; 0x6c
   1a654:	adds	r2, r2, #1
   1a658:	adc	r1, r1, #0
   1a65c:	str	r2, [r3, #104]	; 0x68
   1a660:	str	r1, [r3, #108]	; 0x6c
   1a664:	mov	r0, r5
   1a668:	bl	1a480 <get_char@@Base>
   1a66c:	mov	r7, #0
   1a670:	mov	r4, r7
   1a674:	movw	r6, #4544	; 0x11c0
   1a678:	movt	r6, #3
   1a67c:	mov	r8, r7
   1a680:	add	r9, r6, #336	; 0x150
   1a684:	cmp	r0, #0
   1a688:	beq	1b858 <next@@Base+0x12a4>
   1a68c:	ldr	r2, [r6, #120]	; 0x78
   1a690:	ldr	r1, [r6, #124]	; 0x7c
   1a694:	mov	r3, r8
   1a698:	mov	ip, #1
   1a69c:	cmp	r7, #5
   1a6a0:	ldrls	pc, [pc, r7, lsl #2]
   1a6a4:	b	1a7fc <next@@Base+0x248>
   1a6a8:	andeq	sl, r1, ip, lsl #16
   1a6ac:	andeq	sl, r1, r0, asr #13
   1a6b0:	andeq	fp, r1, ip, lsl #3
   1a6b4:	andeq	fp, r1, r8, ror #5
   1a6b8:	andeq	fp, r1, r4, lsl #9
   1a6bc:	andeq	fp, r1, r4, lsl #14
   1a6c0:	cmp	r3, #0
   1a6c4:	bne	1a7e8 <next@@Base+0x234>
   1a6c8:	movw	r3, #4544	; 0x11c0
   1a6cc:	movt	r3, #3
   1a6d0:	ldr	r2, [r3, #128]	; 0x80
   1a6d4:	ldr	r1, [r3, #132]	; 0x84
   1a6d8:	adds	r2, r2, #1
   1a6dc:	adc	r1, r1, #0
   1a6e0:	str	r2, [r3, #128]	; 0x80
   1a6e4:	str	r1, [r3, #132]	; 0x84
   1a6e8:	sub	r3, r0, #48	; 0x30
   1a6ec:	uxtb	r3, r3
   1a6f0:	cmp	r3, #9
   1a6f4:	movls	r1, r4
   1a6f8:	ldrls	r6, [pc, #4000]	; 1b6a0 <next@@Base+0x10ec>
   1a6fc:	bhi	1a73c <next@@Base+0x188>
   1a700:	ldr	r3, [r6]
   1a704:	ldr	r2, [r6, #4]
   1a708:	adds	r3, r3, #1
   1a70c:	adc	r2, r2, #0
   1a710:	str	r3, [r6]
   1a714:	str	r2, [r6, #4]
   1a718:	add	r4, r1, #1
   1a71c:	strb	r0, [sp, r1]
   1a720:	mov	r0, r5
   1a724:	bl	1a480 <get_char@@Base>
   1a728:	mov	r1, r4
   1a72c:	sub	r3, r0, #48	; 0x30
   1a730:	uxtb	r3, r3
   1a734:	cmp	r3, #9
   1a738:	bls	1a700 <next@@Base+0x14c>
   1a73c:	movw	r7, #4544	; 0x11c0
   1a740:	movt	r7, #3
   1a744:	ldr	r3, [r7, #552]	; 0x228
   1a748:	ldr	r2, [r7, #556]	; 0x22c
   1a74c:	adds	r3, r3, #1
   1a750:	adc	r2, r2, #0
   1a754:	str	r3, [r7, #552]	; 0x228
   1a758:	str	r2, [r7, #556]	; 0x22c
   1a75c:	mov	r0, r5
   1a760:	bl	1a560 <push_back_one_char@@Base>
   1a764:	ldr	r3, [r7, #560]	; 0x230
   1a768:	ldr	r2, [r7, #564]	; 0x234
   1a76c:	adds	r3, r3, #1
   1a770:	adc	r2, r2, #0
   1a774:	str	r3, [r7, #560]	; 0x230
   1a778:	str	r2, [r7, #564]	; 0x234
   1a77c:	add	r3, sp, #512	; 0x200
   1a780:	add	r4, r3, r4
   1a784:	mov	r5, #0
   1a788:	strb	r5, [r4, #-512]	; 0xfffffe00
   1a78c:	mov	r0, #8
   1a790:	bl	12044 <malloc@plt>
   1a794:	mov	r6, r0
   1a798:	mov	r2, #10
   1a79c:	mov	r1, r5
   1a7a0:	mov	r0, sp
   1a7a4:	bl	11fc0 <strtol@plt>
   1a7a8:	ldr	r3, [r7, #568]	; 0x238
   1a7ac:	ldr	r2, [r7, #572]	; 0x23c
   1a7b0:	adds	r3, r3, #1
   1a7b4:	adc	r2, r2, r5
   1a7b8:	str	r3, [r7, #568]	; 0x238
   1a7bc:	str	r2, [r7, #572]	; 0x23c
   1a7c0:	mov	r1, r0
   1a7c4:	mov	r0, r6
   1a7c8:	bl	19dd0 <init_token_int_value@@Base>
   1a7cc:	ldr	r3, [r7, #576]	; 0x240
   1a7d0:	ldr	r2, [r7, #580]	; 0x244
   1a7d4:	adds	r3, r3, #1
   1a7d8:	adc	r2, r2, r5
   1a7dc:	str	r3, [r7, #576]	; 0x240
   1a7e0:	str	r2, [r7, #580]	; 0x244
   1a7e4:	b	1a628 <next@@Base+0x74>
   1a7e8:	movw	r3, #4544	; 0x11c0
   1a7ec:	movt	r3, #3
   1a7f0:	str	r2, [r3, #120]	; 0x78
   1a7f4:	str	r1, [r3, #124]	; 0x7c
   1a7f8:	b	1a6c8 <next@@Base+0x114>
   1a7fc:	adds	r2, r2, #1
   1a800:	adc	r1, r1, #0
   1a804:	mov	r3, ip
   1a808:	b	1a69c <next@@Base+0xe8>
   1a80c:	cmp	r3, #0
   1a810:	strne	r2, [r6, #120]	; 0x78
   1a814:	strne	r1, [r6, #124]	; 0x7c
   1a818:	cmp	r0, #32
   1a81c:	cmpne	r0, #9
   1a820:	beq	1a8e4 <next@@Base+0x330>
   1a824:	cmp	r0, #10
   1a828:	beq	1a920 <next@@Base+0x36c>
   1a82c:	cmp	r0, #48	; 0x30
   1a830:	beq	1a93c <next@@Base+0x388>
   1a834:	sub	r3, r0, #49	; 0x31
   1a838:	uxtb	r3, r3
   1a83c:	cmp	r3, #8
   1a840:	bls	1a98c <next@@Base+0x3d8>
   1a844:	cmp	r0, #40	; 0x28
   1a848:	beq	1a9e0 <next@@Base+0x42c>
   1a84c:	cmp	r0, #41	; 0x29
   1a850:	beq	1aa2c <next@@Base+0x478>
   1a854:	cmp	r0, #123	; 0x7b
   1a858:	beq	1aa78 <next@@Base+0x4c4>
   1a85c:	cmp	r0, #125	; 0x7d
   1a860:	beq	1aac4 <next@@Base+0x510>
   1a864:	cmp	r0, #59	; 0x3b
   1a868:	beq	1ab10 <next@@Base+0x55c>
   1a86c:	cmp	r0, #101	; 0x65
   1a870:	beq	1ab5c <next@@Base+0x5a8>
   1a874:	cmp	r0, #105	; 0x69
   1a878:	beq	1abb4 <next@@Base+0x600>
   1a87c:	cmp	r0, #109	; 0x6d
   1a880:	beq	1ac0c <next@@Base+0x658>
   1a884:	cmp	r0, #114	; 0x72
   1a888:	bne	1ac64 <next@@Base+0x6b0>
   1a88c:	ldr	r3, [r9]
   1a890:	ldr	r2, [r9, #4]
   1a894:	adds	r3, r3, #1
   1a898:	adc	r2, r2, #0
   1a89c:	str	r3, [r9]
   1a8a0:	str	r2, [r9, #4]
   1a8a4:	add	r7, r4, #1
   1a8a8:	add	r3, sp, #512	; 0x200
   1a8ac:	add	r4, r3, r4
   1a8b0:	mov	r3, #114	; 0x72
   1a8b4:	strb	r3, [r4, #-512]	; 0xfffffe00
   1a8b8:	mov	r0, r5
   1a8bc:	bl	1a480 <get_char@@Base>
   1a8c0:	ldr	r3, [r6, #344]	; 0x158
   1a8c4:	ldr	r1, [r6, #348]	; 0x15c
   1a8c8:	adds	r3, r3, #1
   1a8cc:	adc	r1, r1, #0
   1a8d0:	str	r3, [r6, #344]	; 0x158
   1a8d4:	str	r1, [r6, #348]	; 0x15c
   1a8d8:	mov	r4, r7
   1a8dc:	mov	r7, #4
   1a8e0:	b	1a904 <next@@Base+0x350>
   1a8e4:	ldr	r3, [r6, #160]	; 0xa0
   1a8e8:	ldr	r2, [r6, #164]	; 0xa4
   1a8ec:	adds	r3, r3, #1
   1a8f0:	adc	r2, r2, #0
   1a8f4:	str	r3, [r6, #160]	; 0xa0
   1a8f8:	str	r2, [r6, #164]	; 0xa4
   1a8fc:	mov	r0, r5
   1a900:	bl	1a480 <get_char@@Base>
   1a904:	ldr	r3, [r6, #816]	; 0x330
   1a908:	ldr	r1, [r6, #820]	; 0x334
   1a90c:	adds	r3, r3, #1
   1a910:	adc	r1, r1, #0
   1a914:	str	r3, [r6, #816]	; 0x330
   1a918:	str	r1, [r6, #820]	; 0x334
   1a91c:	b	1a684 <next@@Base+0xd0>
   1a920:	ldr	r3, [r6, #168]	; 0xa8
   1a924:	ldr	r2, [r6, #172]	; 0xac
   1a928:	adds	r3, r3, #1
   1a92c:	adc	r2, r2, #0
   1a930:	str	r3, [r6, #168]	; 0xa8
   1a934:	str	r2, [r6, #172]	; 0xac
   1a938:	b	1a8fc <next@@Base+0x348>
   1a93c:	movw	r4, #4544	; 0x11c0
   1a940:	movt	r4, #3
   1a944:	ldr	r3, [r4, #176]	; 0xb0
   1a948:	ldr	r2, [r4, #180]	; 0xb4
   1a94c:	adds	r3, r3, #1
   1a950:	adc	r2, r2, #0
   1a954:	str	r3, [r4, #176]	; 0xb0
   1a958:	str	r2, [r4, #180]	; 0xb4
   1a95c:	mov	r0, #8
   1a960:	bl	12044 <malloc@plt>
   1a964:	mov	r6, r0
   1a968:	mov	r1, #0
   1a96c:	bl	19dd0 <init_token_int_value@@Base>
   1a970:	ldr	r3, [r4, #184]	; 0xb8
   1a974:	ldr	r2, [r4, #188]	; 0xbc
   1a978:	adds	r3, r3, #1
   1a97c:	adc	r2, r2, #0
   1a980:	str	r3, [r4, #184]	; 0xb8
   1a984:	str	r2, [r4, #188]	; 0xbc
   1a988:	b	1a628 <next@@Base+0x74>
   1a98c:	ldr	r3, [r6, #192]	; 0xc0
   1a990:	ldr	r2, [r6, #196]	; 0xc4
   1a994:	adds	r3, r3, #1
   1a998:	adc	r2, r2, #0
   1a99c:	str	r3, [r6, #192]	; 0xc0
   1a9a0:	str	r2, [r6, #196]	; 0xc4
   1a9a4:	add	r7, r4, #1
   1a9a8:	add	r3, sp, #512	; 0x200
   1a9ac:	add	r4, r3, r4
   1a9b0:	strb	r0, [r4, #-512]	; 0xfffffe00
   1a9b4:	mov	r0, r5
   1a9b8:	bl	1a480 <get_char@@Base>
   1a9bc:	ldr	r3, [r6, #200]	; 0xc8
   1a9c0:	ldr	r2, [r6, #204]	; 0xcc
   1a9c4:	adds	r3, r3, #1
   1a9c8:	adc	r2, r2, #0
   1a9cc:	str	r3, [r6, #200]	; 0xc8
   1a9d0:	str	r2, [r6, #204]	; 0xcc
   1a9d4:	mov	r4, r7
   1a9d8:	mov	r7, #1
   1a9dc:	b	1a904 <next@@Base+0x350>
   1a9e0:	movw	r4, #4544	; 0x11c0
   1a9e4:	movt	r4, #3
   1a9e8:	ldr	r3, [r4, #208]	; 0xd0
   1a9ec:	ldr	r2, [r4, #212]	; 0xd4
   1a9f0:	adds	r3, r3, #1
   1a9f4:	adc	r2, r2, #0
   1a9f8:	str	r3, [r4, #208]	; 0xd0
   1a9fc:	str	r2, [r4, #212]	; 0xd4
   1aa00:	mov	r0, #4
   1aa04:	bl	12044 <malloc@plt>
   1aa08:	mov	r6, r0
   1aa0c:	bl	19e30 <init_token_opar@@Base>
   1aa10:	ldr	r3, [r4, #216]	; 0xd8
   1aa14:	ldr	r2, [r4, #220]	; 0xdc
   1aa18:	adds	r3, r3, #1
   1aa1c:	adc	r2, r2, #0
   1aa20:	str	r3, [r4, #216]	; 0xd8
   1aa24:	str	r2, [r4, #220]	; 0xdc
   1aa28:	b	1a628 <next@@Base+0x74>
   1aa2c:	movw	r4, #4544	; 0x11c0
   1aa30:	movt	r4, #3
   1aa34:	ldr	r3, [r4, #224]	; 0xe0
   1aa38:	ldr	r2, [r4, #228]	; 0xe4
   1aa3c:	adds	r3, r3, #1
   1aa40:	adc	r2, r2, #0
   1aa44:	str	r3, [r4, #224]	; 0xe0
   1aa48:	str	r2, [r4, #228]	; 0xe4
   1aa4c:	mov	r0, #4
   1aa50:	bl	12044 <malloc@plt>
   1aa54:	mov	r6, r0
   1aa58:	bl	19e5c <init_token_cpar@@Base>
   1aa5c:	ldr	r3, [r4, #232]	; 0xe8
   1aa60:	ldr	r2, [r4, #236]	; 0xec
   1aa64:	adds	r3, r3, #1
   1aa68:	adc	r2, r2, #0
   1aa6c:	str	r3, [r4, #232]	; 0xe8
   1aa70:	str	r2, [r4, #236]	; 0xec
   1aa74:	b	1a628 <next@@Base+0x74>
   1aa78:	movw	r4, #4544	; 0x11c0
   1aa7c:	movt	r4, #3
   1aa80:	ldr	r3, [r4, #240]	; 0xf0
   1aa84:	ldr	r2, [r4, #244]	; 0xf4
   1aa88:	adds	r3, r3, #1
   1aa8c:	adc	r2, r2, #0
   1aa90:	str	r3, [r4, #240]	; 0xf0
   1aa94:	str	r2, [r4, #244]	; 0xf4
   1aa98:	mov	r0, #4
   1aa9c:	bl	12044 <malloc@plt>
   1aaa0:	mov	r6, r0
   1aaa4:	bl	19e88 <init_token_obra@@Base>
   1aaa8:	ldr	r3, [r4, #248]	; 0xf8
   1aaac:	ldr	r2, [r4, #252]	; 0xfc
   1aab0:	adds	r3, r3, #1
   1aab4:	adc	r2, r2, #0
   1aab8:	str	r3, [r4, #248]	; 0xf8
   1aabc:	str	r2, [r4, #252]	; 0xfc
   1aac0:	b	1a628 <next@@Base+0x74>
   1aac4:	movw	r4, #4544	; 0x11c0
   1aac8:	movt	r4, #3
   1aacc:	ldr	r3, [r4, #256]	; 0x100
   1aad0:	ldr	r1, [r4, #260]	; 0x104
   1aad4:	adds	r3, r3, #1
   1aad8:	adc	r1, r1, #0
   1aadc:	str	r3, [r4, #256]	; 0x100
   1aae0:	str	r1, [r4, #260]	; 0x104
   1aae4:	mov	r0, #4
   1aae8:	bl	12044 <malloc@plt>
   1aaec:	mov	r6, r0
   1aaf0:	bl	19eb4 <init_token_cbra@@Base>
   1aaf4:	ldr	r3, [r4, #264]	; 0x108
   1aaf8:	ldr	r2, [r4, #268]	; 0x10c
   1aafc:	adds	r3, r3, #1
   1ab00:	adc	r2, r2, #0
   1ab04:	str	r3, [r4, #264]	; 0x108
   1ab08:	str	r2, [r4, #268]	; 0x10c
   1ab0c:	b	1a628 <next@@Base+0x74>
   1ab10:	movw	r4, #4544	; 0x11c0
   1ab14:	movt	r4, #3
   1ab18:	ldr	r3, [r4, #272]	; 0x110
   1ab1c:	ldr	r1, [r4, #276]	; 0x114
   1ab20:	adds	r3, r3, #1
   1ab24:	adc	r1, r1, #0
   1ab28:	str	r3, [r4, #272]	; 0x110
   1ab2c:	str	r1, [r4, #276]	; 0x114
   1ab30:	mov	r0, #4
   1ab34:	bl	12044 <malloc@plt>
   1ab38:	mov	r6, r0
   1ab3c:	bl	19f0c <init_token_semicolon@@Base>
   1ab40:	ldr	r3, [r4, #280]	; 0x118
   1ab44:	ldr	r2, [r4, #284]	; 0x11c
   1ab48:	adds	r3, r3, #1
   1ab4c:	adc	r2, r2, #0
   1ab50:	str	r3, [r4, #280]	; 0x118
   1ab54:	str	r2, [r4, #284]	; 0x11c
   1ab58:	b	1a628 <next@@Base+0x74>
   1ab5c:	ldr	r3, [r6, #288]	; 0x120
   1ab60:	ldr	r1, [r6, #292]	; 0x124
   1ab64:	adds	r3, r3, #1
   1ab68:	adc	r1, r1, #0
   1ab6c:	str	r3, [r6, #288]	; 0x120
   1ab70:	str	r1, [r6, #292]	; 0x124
   1ab74:	add	r7, r4, #1
   1ab78:	add	r3, sp, #512	; 0x200
   1ab7c:	add	r4, r3, r4
   1ab80:	mov	r3, #101	; 0x65
   1ab84:	strb	r3, [r4, #-512]	; 0xfffffe00
   1ab88:	mov	r0, r5
   1ab8c:	bl	1a480 <get_char@@Base>
   1ab90:	ldr	r3, [r6, #296]	; 0x128
   1ab94:	ldr	r1, [r6, #300]	; 0x12c
   1ab98:	adds	r3, r3, #1
   1ab9c:	adc	r1, r1, #0
   1aba0:	str	r3, [r6, #296]	; 0x128
   1aba4:	str	r1, [r6, #300]	; 0x12c
   1aba8:	mov	r4, r7
   1abac:	mov	r7, #5
   1abb0:	b	1a904 <next@@Base+0x350>
   1abb4:	ldr	r3, [r6, #304]	; 0x130
   1abb8:	ldr	r1, [r6, #308]	; 0x134
   1abbc:	adds	r3, r3, #1
   1abc0:	adc	r1, r1, #0
   1abc4:	str	r3, [r6, #304]	; 0x130
   1abc8:	str	r1, [r6, #308]	; 0x134
   1abcc:	add	r7, r4, #1
   1abd0:	add	r3, sp, #512	; 0x200
   1abd4:	add	r4, r3, r4
   1abd8:	mov	r3, #105	; 0x69
   1abdc:	strb	r3, [r4, #-512]	; 0xfffffe00
   1abe0:	mov	r0, r5
   1abe4:	bl	1a480 <get_char@@Base>
   1abe8:	ldr	r3, [r6, #312]	; 0x138
   1abec:	ldr	r1, [r6, #316]	; 0x13c
   1abf0:	adds	r3, r3, #1
   1abf4:	adc	r1, r1, #0
   1abf8:	str	r3, [r6, #312]	; 0x138
   1abfc:	str	r1, [r6, #316]	; 0x13c
   1ac00:	mov	r4, r7
   1ac04:	mov	r7, #2
   1ac08:	b	1a904 <next@@Base+0x350>
   1ac0c:	ldr	r3, [r6, #320]	; 0x140
   1ac10:	ldr	r1, [r6, #324]	; 0x144
   1ac14:	adds	r3, r3, #1
   1ac18:	adc	r1, r1, #0
   1ac1c:	str	r3, [r6, #320]	; 0x140
   1ac20:	str	r1, [r6, #324]	; 0x144
   1ac24:	add	r7, r4, #1
   1ac28:	add	r3, sp, #512	; 0x200
   1ac2c:	add	r4, r3, r4
   1ac30:	mov	r3, #109	; 0x6d
   1ac34:	strb	r3, [r4, #-512]	; 0xfffffe00
   1ac38:	mov	r0, r5
   1ac3c:	bl	1a480 <get_char@@Base>
   1ac40:	ldr	r3, [r9, #-8]
   1ac44:	ldr	r2, [r9, #-4]
   1ac48:	adds	r3, r3, #1
   1ac4c:	adc	r2, r2, #0
   1ac50:	str	r3, [r9, #-8]
   1ac54:	str	r2, [r9, #-4]
   1ac58:	mov	r4, r7
   1ac5c:	mov	r7, #3
   1ac60:	b	1a904 <next@@Base+0x350>
   1ac64:	cmp	r0, #33	; 0x21
   1ac68:	beq	1ad44 <next@@Base+0x790>
   1ac6c:	and	r3, r0, #253	; 0xfd
   1ac70:	cmp	r3, #60	; 0x3c
   1ac74:	beq	1ae54 <next@@Base+0x8a0>
   1ac78:	cmp	r0, #61	; 0x3d
   1ac7c:	beq	1af5c <next@@Base+0x9a8>
   1ac80:	ldr	r2, [pc, #2588]	; 1b6a4 <next@@Base+0x10f0>
   1ac84:	ldr	r3, [r2, #-8]
   1ac88:	ldr	r1, [r2, #-4]
   1ac8c:	adds	r3, r3, #1
   1ac90:	adc	r1, r1, #0
   1ac94:	str	r3, [r2, #-8]
   1ac98:	str	r1, [r2, #-4]
   1ac9c:	cmp	r0, #124	; 0x7c
   1aca0:	beq	1b034 <next@@Base+0xa80>
   1aca4:	cmp	r0, #38	; 0x26
   1aca8:	bne	1b12c <next@@Base+0xb78>
   1acac:	add	r3, sp, #512	; 0x200
   1acb0:	add	r4, r3, r4
   1acb4:	mov	r3, #38	; 0x26
   1acb8:	strb	r3, [r4, #-512]	; 0xfffffe00
   1acbc:	mov	r0, r5
   1acc0:	bl	1a480 <get_char@@Base>
   1acc4:	mov	r4, r0
   1acc8:	ldr	r2, [pc, #2520]	; 1b6a8 <next@@Base+0x10f4>
   1accc:	ldr	r3, [r2]
   1acd0:	ldr	r1, [r2, #4]
   1acd4:	adds	r3, r3, #1
   1acd8:	adc	r1, r1, #0
   1acdc:	str	r3, [r2]
   1ace0:	str	r1, [r2, #4]
   1ace4:	mov	r0, #8
   1ace8:	bl	12044 <malloc@plt>
   1acec:	mov	r6, r0
   1acf0:	cmp	r4, #38	; 0x26
   1acf4:	bne	1b108 <next@@Base+0xb54>
   1acf8:	mov	r0, #3
   1acfc:	bl	12044 <malloc@plt>
   1ad00:	mov	r1, r0
   1ad04:	ldrb	r3, [sp]
   1ad08:	strb	r3, [r0]
   1ad0c:	mov	r3, #38	; 0x26
   1ad10:	strb	r3, [r0, #1]
   1ad14:	mov	r3, #0
   1ad18:	strb	r3, [r0, #2]
   1ad1c:	mov	r0, r6
   1ad20:	bl	19fbc <init_token_boolean_op@@Base>
   1ad24:	ldr	r2, [pc, #2432]	; 1b6ac <next@@Base+0x10f8>
   1ad28:	ldr	r3, [r2]
   1ad2c:	ldr	r1, [r2, #4]
   1ad30:	adds	r3, r3, #1
   1ad34:	adc	r1, r1, #0
   1ad38:	str	r3, [r2]
   1ad3c:	str	r1, [r2, #4]
   1ad40:	b	1a628 <next@@Base+0x74>
   1ad44:	movw	r6, #4544	; 0x11c0
   1ad48:	movt	r6, #3
   1ad4c:	ldr	r3, [r6, #352]	; 0x160
   1ad50:	ldr	r1, [r6, #356]	; 0x164
   1ad54:	adds	r3, r3, #1
   1ad58:	adc	r1, r1, #0
   1ad5c:	str	r3, [r6, #352]	; 0x160
   1ad60:	str	r1, [r6, #356]	; 0x164
   1ad64:	add	r3, sp, #512	; 0x200
   1ad68:	add	r4, r3, r4
   1ad6c:	mov	r3, #33	; 0x21
   1ad70:	strb	r3, [r4, #-512]	; 0xfffffe00
   1ad74:	mov	r0, r5
   1ad78:	bl	1a480 <get_char@@Base>
   1ad7c:	mov	r4, r0
   1ad80:	ldr	r3, [r6, #360]	; 0x168
   1ad84:	ldr	r2, [r6, #364]	; 0x16c
   1ad88:	adds	r3, r3, #1
   1ad8c:	adc	r2, r2, #0
   1ad90:	str	r3, [r6, #360]	; 0x168
   1ad94:	str	r2, [r6, #364]	; 0x16c
   1ad98:	mov	r0, #8
   1ad9c:	bl	12044 <malloc@plt>
   1ada0:	mov	r6, r0
   1ada4:	cmp	r4, #61	; 0x3d
   1ada8:	beq	1ae14 <next@@Base+0x860>
   1adac:	mov	r0, r5
   1adb0:	bl	1a560 <push_back_one_char@@Base>
   1adb4:	ldr	r2, [pc, #2292]	; 1b6b0 <next@@Base+0x10fc>
   1adb8:	ldr	r3, [r2]
   1adbc:	ldr	r1, [r2, #4]
   1adc0:	adds	r3, r3, #1
   1adc4:	adc	r1, r1, #0
   1adc8:	str	r3, [r2]
   1adcc:	str	r1, [r2, #4]
   1add0:	mov	r0, #2
   1add4:	bl	12044 <malloc@plt>
   1add8:	ldrb	r3, [sp]
   1addc:	strb	r3, [r0]
   1ade0:	mov	r3, #0
   1ade4:	strb	r3, [r0, #1]
   1ade8:	mov	r1, r0
   1adec:	mov	r0, r6
   1adf0:	bl	19fbc <init_token_boolean_op@@Base>
   1adf4:	ldr	r2, [pc, #2232]	; 1b6b4 <next@@Base+0x1100>
   1adf8:	ldr	r3, [r2]
   1adfc:	ldr	r1, [r2, #4]
   1ae00:	adds	r3, r3, #1
   1ae04:	adc	r1, r1, #0
   1ae08:	str	r3, [r2]
   1ae0c:	str	r1, [r2, #4]
   1ae10:	b	1a628 <next@@Base+0x74>
   1ae14:	mov	r0, #3
   1ae18:	bl	12044 <malloc@plt>
   1ae1c:	ldrb	r3, [sp]
   1ae20:	strb	r3, [r0]
   1ae24:	mov	r3, #61	; 0x3d
   1ae28:	strb	r3, [r0, #1]
   1ae2c:	mov	r3, #0
   1ae30:	strb	r3, [r0, #2]
   1ae34:	ldr	r2, [pc, #2168]	; 1b6b4 <next@@Base+0x1100>
   1ae38:	ldr	r3, [r2, #-8]
   1ae3c:	ldr	r1, [r2, #-4]
   1ae40:	adds	r3, r3, #1
   1ae44:	adc	r1, r1, #0
   1ae48:	str	r3, [r2, #-8]
   1ae4c:	str	r1, [r2, #-4]
   1ae50:	b	1ade8 <next@@Base+0x834>
   1ae54:	ldr	r6, [pc, #2140]	; 1b6b8 <next@@Base+0x1104>
   1ae58:	ldr	r3, [r6, #-8]
   1ae5c:	ldr	r2, [r6, #-4]
   1ae60:	adds	r3, r3, #1
   1ae64:	adc	r2, r2, #0
   1ae68:	str	r3, [r6, #-8]
   1ae6c:	str	r2, [r6, #-4]
   1ae70:	add	r3, sp, #512	; 0x200
   1ae74:	add	r4, r3, r4
   1ae78:	strb	r0, [r4, #-512]	; 0xfffffe00
   1ae7c:	mov	r0, r5
   1ae80:	bl	1a480 <get_char@@Base>
   1ae84:	mov	r4, r0
   1ae88:	ldr	r3, [r6]
   1ae8c:	ldr	r2, [r6, #4]
   1ae90:	adds	r3, r3, #1
   1ae94:	adc	r2, r2, #0
   1ae98:	str	r3, [r6]
   1ae9c:	str	r2, [r6, #4]
   1aea0:	mov	r0, #8
   1aea4:	bl	12044 <malloc@plt>
   1aea8:	mov	r6, r0
   1aeac:	cmp	r4, #61	; 0x3d
   1aeb0:	beq	1af1c <next@@Base+0x968>
   1aeb4:	mov	r0, r5
   1aeb8:	bl	1a560 <push_back_one_char@@Base>
   1aebc:	ldr	r2, [pc, #2040]	; 1b6bc <next@@Base+0x1108>
   1aec0:	ldr	r3, [r2, #-8]
   1aec4:	ldr	r1, [r2, #-4]
   1aec8:	adds	r3, r3, #1
   1aecc:	adc	r1, r1, #0
   1aed0:	str	r3, [r2, #-8]
   1aed4:	str	r1, [r2, #-4]
   1aed8:	mov	r0, #2
   1aedc:	bl	12044 <malloc@plt>
   1aee0:	ldrb	r3, [sp]
   1aee4:	strb	r3, [r0]
   1aee8:	mov	r3, #0
   1aeec:	strb	r3, [r0, #1]
   1aef0:	mov	r1, r0
   1aef4:	mov	r0, r6
   1aef8:	bl	19fbc <init_token_boolean_op@@Base>
   1aefc:	ldr	r2, [pc, #1980]	; 1b6c0 <next@@Base+0x110c>
   1af00:	ldr	r3, [r2, #-8]
   1af04:	ldr	r1, [r2, #-4]
   1af08:	adds	r3, r3, #1
   1af0c:	adc	r1, r1, #0
   1af10:	str	r3, [r2, #-8]
   1af14:	str	r1, [r2, #-4]
   1af18:	b	1a628 <next@@Base+0x74>
   1af1c:	mov	r0, #3
   1af20:	bl	12044 <malloc@plt>
   1af24:	ldrb	r3, [sp]
   1af28:	strb	r3, [r0]
   1af2c:	mov	r3, #61	; 0x3d
   1af30:	strb	r3, [r0, #1]
   1af34:	mov	r3, #0
   1af38:	strb	r3, [r0, #2]
   1af3c:	ldr	r2, [pc, #1912]	; 1b6bc <next@@Base+0x1108>
   1af40:	ldr	r3, [r2]
   1af44:	ldr	r1, [r2, #4]
   1af48:	adds	r3, r3, #1
   1af4c:	adc	r1, r1, #0
   1af50:	str	r3, [r2]
   1af54:	str	r1, [r2, #4]
   1af58:	b	1aef0 <next@@Base+0x93c>
   1af5c:	movw	r6, #4544	; 0x11c0
   1af60:	movt	r6, #3
   1af64:	ldr	r3, [r6, #432]	; 0x1b0
   1af68:	ldr	r1, [r6, #436]	; 0x1b4
   1af6c:	adds	r3, r3, #1
   1af70:	adc	r1, r1, #0
   1af74:	str	r3, [r6, #432]	; 0x1b0
   1af78:	str	r1, [r6, #436]	; 0x1b4
   1af7c:	add	r3, sp, #512	; 0x200
   1af80:	add	r4, r3, r4
   1af84:	mov	r3, #61	; 0x3d
   1af88:	strb	r3, [r4, #-512]	; 0xfffffe00
   1af8c:	mov	r0, r5
   1af90:	bl	1a480 <get_char@@Base>
   1af94:	mov	r4, r0
   1af98:	ldr	r3, [r6, #448]	; 0x1c0
   1af9c:	ldr	r2, [r6, #452]	; 0x1c4
   1afa0:	adds	r3, r3, #1
   1afa4:	adc	r2, r2, #0
   1afa8:	str	r3, [r6, #448]	; 0x1c0
   1afac:	str	r2, [r6, #452]	; 0x1c4
   1afb0:	mov	r0, #8
   1afb4:	bl	12044 <malloc@plt>
   1afb8:	mov	r6, r0
   1afbc:	cmp	r4, #61	; 0x3d
   1afc0:	bne	1b010 <next@@Base+0xa5c>
   1afc4:	mov	r0, #3
   1afc8:	bl	12044 <malloc@plt>
   1afcc:	mov	r1, r0
   1afd0:	ldrb	r3, [sp]
   1afd4:	strb	r3, [r0]
   1afd8:	mov	r3, #61	; 0x3d
   1afdc:	strb	r3, [r0, #1]
   1afe0:	mov	r3, #0
   1afe4:	strb	r3, [r0, #2]
   1afe8:	mov	r0, r6
   1afec:	bl	19fbc <init_token_boolean_op@@Base>
   1aff0:	ldr	r2, [pc, #1740]	; 1b6c4 <next@@Base+0x1110>
   1aff4:	ldr	r3, [r2]
   1aff8:	ldr	r1, [r2, #4]
   1affc:	adds	r3, r3, #1
   1b000:	adc	r1, r1, #0
   1b004:	str	r3, [r2]
   1b008:	str	r1, [r2, #4]
   1b00c:	b	1a628 <next@@Base+0x74>
   1b010:	ldr	r2, [pc, #1708]	; 1b6c4 <next@@Base+0x1110>
   1b014:	ldr	r3, [r2, #-8]
   1b018:	ldr	r1, [r2, #-4]
   1b01c:	adds	r3, r3, #1
   1b020:	adc	r1, r1, #0
   1b024:	str	r3, [r2, #-8]
   1b028:	str	r1, [r2, #-4]
   1b02c:	mov	r0, #1
   1b030:	bl	12074 <exit@plt>
   1b034:	add	r6, r2, #32
   1b038:	ldr	r3, [r6, #-8]
   1b03c:	ldr	r2, [r6, #-4]
   1b040:	adds	r3, r3, #1
   1b044:	adc	r2, r2, #0
   1b048:	str	r3, [r6, #-8]
   1b04c:	str	r2, [r6, #-4]
   1b050:	add	r3, sp, #512	; 0x200
   1b054:	add	r4, r3, r4
   1b058:	mov	r3, #124	; 0x7c
   1b05c:	strb	r3, [r4, #-512]	; 0xfffffe00
   1b060:	mov	r0, r5
   1b064:	bl	1a480 <get_char@@Base>
   1b068:	mov	r4, r0
   1b06c:	ldr	r3, [r6]
   1b070:	ldr	r2, [r6, #4]
   1b074:	adds	r3, r3, #1
   1b078:	adc	r2, r2, #0
   1b07c:	str	r3, [r6]
   1b080:	str	r2, [r6, #4]
   1b084:	mov	r0, #8
   1b088:	bl	12044 <malloc@plt>
   1b08c:	mov	r6, r0
   1b090:	cmp	r4, #124	; 0x7c
   1b094:	bne	1b0e4 <next@@Base+0xb30>
   1b098:	mov	r0, #3
   1b09c:	bl	12044 <malloc@plt>
   1b0a0:	mov	r1, r0
   1b0a4:	ldrb	r3, [sp]
   1b0a8:	strb	r3, [r0]
   1b0ac:	mov	r3, #124	; 0x7c
   1b0b0:	strb	r3, [r0, #1]
   1b0b4:	mov	r3, #0
   1b0b8:	strb	r3, [r0, #2]
   1b0bc:	mov	r0, r6
   1b0c0:	bl	19fbc <init_token_boolean_op@@Base>
   1b0c4:	ldr	r2, [pc, #1532]	; 1b6c8 <next@@Base+0x1114>
   1b0c8:	ldr	r3, [r2]
   1b0cc:	ldr	r1, [r2, #4]
   1b0d0:	adds	r3, r3, #1
   1b0d4:	adc	r1, r1, #0
   1b0d8:	str	r3, [r2]
   1b0dc:	str	r1, [r2, #4]
   1b0e0:	b	1a628 <next@@Base+0x74>
   1b0e4:	ldr	r2, [pc, #1500]	; 1b6c8 <next@@Base+0x1114>
   1b0e8:	ldr	r3, [r2, #-8]
   1b0ec:	ldr	r1, [r2, #-4]
   1b0f0:	adds	r3, r3, #1
   1b0f4:	adc	r1, r1, #0
   1b0f8:	str	r3, [r2, #-8]
   1b0fc:	str	r1, [r2, #-4]
   1b100:	mov	r0, #1
   1b104:	bl	12074 <exit@plt>
   1b108:	ldr	r2, [pc, #1436]	; 1b6ac <next@@Base+0x10f8>
   1b10c:	ldr	r3, [r2, #-8]
   1b110:	ldr	r1, [r2, #-4]
   1b114:	adds	r3, r3, #1
   1b118:	adc	r1, r1, #0
   1b11c:	str	r3, [r2, #-8]
   1b120:	str	r1, [r2, #-4]
   1b124:	mov	r0, #1
   1b128:	bl	12074 <exit@plt>
   1b12c:	movw	r4, #4544	; 0x11c0
   1b130:	movt	r4, #3
   1b134:	ldr	r3, [r4, #504]	; 0x1f8
   1b138:	ldr	r1, [r4, #508]	; 0x1fc
   1b13c:	adds	r3, r3, #1
   1b140:	adc	r1, r1, #0
   1b144:	str	r3, [r4, #504]	; 0x1f8
   1b148:	str	r1, [r4, #508]	; 0x1fc
   1b14c:	movw	r3, #64560	; 0xfc30
   1b150:	movt	r3, #2
   1b154:	mov	r2, r0
   1b158:	movw	r1, #58188	; 0xe34c
   1b15c:	movt	r1, #1
   1b160:	ldr	r0, [r3]
   1b164:	bl	1208c <fprintf@plt>
   1b168:	add	r4, r4, #544	; 0x220
   1b16c:	ldr	r3, [r4, #-8]
   1b170:	ldr	r2, [r4, #-4]
   1b174:	adds	r3, r3, #1
   1b178:	adc	r2, r2, #0
   1b17c:	str	r3, [r4, #-8]
   1b180:	str	r2, [r4, #-4]
   1b184:	mov	r0, #1
   1b188:	bl	12074 <exit@plt>
   1b18c:	cmp	r3, #0
   1b190:	bne	1b228 <next@@Base+0xc74>
   1b194:	cmp	r0, #102	; 0x66
   1b198:	beq	1b260 <next@@Base+0xcac>
   1b19c:	cmp	r0, #110	; 0x6e
   1b1a0:	bne	1b2c4 <next@@Base+0xd10>
   1b1a4:	ldr	r6, [pc, #1312]	; 1b6cc <next@@Base+0x1118>
   1b1a8:	ldr	r3, [r6, #-8]
   1b1ac:	ldr	r2, [r6, #-4]
   1b1b0:	adds	r3, r3, #1
   1b1b4:	adc	r2, r2, #0
   1b1b8:	str	r3, [r6, #-8]
   1b1bc:	str	r2, [r6, #-4]
   1b1c0:	add	r3, sp, #512	; 0x200
   1b1c4:	add	r4, r3, r4
   1b1c8:	mov	r3, #110	; 0x6e
   1b1cc:	strb	r3, [r4, #-512]	; 0xfffffe00
   1b1d0:	mov	r0, r5
   1b1d4:	bl	1a480 <get_char@@Base>
   1b1d8:	ldr	r3, [r6]
   1b1dc:	ldr	r2, [r6, #4]
   1b1e0:	adds	r3, r3, #1
   1b1e4:	adc	r2, r2, #0
   1b1e8:	str	r3, [r6]
   1b1ec:	str	r2, [r6, #4]
   1b1f0:	cmp	r0, #116	; 0x74
   1b1f4:	bne	1b23c <next@@Base+0xc88>
   1b1f8:	mov	r0, #4
   1b1fc:	bl	12044 <malloc@plt>
   1b200:	mov	r6, r0
   1b204:	bl	19da4 <init_token_int_type@@Base>
   1b208:	ldr	r2, [pc, #1216]	; 1b6d0 <next@@Base+0x111c>
   1b20c:	ldr	r3, [r2]
   1b210:	ldr	r1, [r2, #4]
   1b214:	adds	r3, r3, #1
   1b218:	adc	r1, r1, #0
   1b21c:	str	r3, [r2]
   1b220:	str	r1, [r2, #4]
   1b224:	b	1a628 <next@@Base+0x74>
   1b228:	movw	r3, #4544	; 0x11c0
   1b22c:	movt	r3, #3
   1b230:	str	r2, [r3, #120]	; 0x78
   1b234:	str	r1, [r3, #124]	; 0x7c
   1b238:	b	1b194 <next@@Base+0xbe0>
   1b23c:	add	r2, r6, #16
   1b240:	ldr	r3, [r2, #-8]
   1b244:	ldr	r1, [r2, #-4]
   1b248:	adds	r3, r3, #1
   1b24c:	adc	r1, r1, #0
   1b250:	str	r3, [r2, #-8]
   1b254:	str	r1, [r2, #-4]
   1b258:	mov	r0, #1
   1b25c:	bl	12074 <exit@plt>
   1b260:	movw	r5, #4544	; 0x11c0
   1b264:	movt	r5, #3
   1b268:	ldr	r3, [r5, #592]	; 0x250
   1b26c:	ldr	r1, [r5, #596]	; 0x254
   1b270:	adds	r3, r3, #1
   1b274:	adc	r1, r1, #0
   1b278:	str	r3, [r5, #592]	; 0x250
   1b27c:	str	r1, [r5, #596]	; 0x254
   1b280:	add	r3, sp, #512	; 0x200
   1b284:	add	r4, r3, r4
   1b288:	mov	r3, #102	; 0x66
   1b28c:	strb	r3, [r4, #-512]	; 0xfffffe00
   1b290:	mov	r3, #0
   1b294:	strb	r3, [r4, #-511]	; 0xfffffe01
   1b298:	mov	r0, #4
   1b29c:	bl	12044 <malloc@plt>
   1b2a0:	mov	r6, r0
   1b2a4:	bl	19f64 <init_token_if@@Base>
   1b2a8:	ldr	r3, [r5, #632]	; 0x278
   1b2ac:	ldr	r2, [r5, #636]	; 0x27c
   1b2b0:	adds	r3, r3, #1
   1b2b4:	adc	r2, r2, #0
   1b2b8:	str	r3, [r5, #632]	; 0x278
   1b2bc:	str	r2, [r5, #636]	; 0x27c
   1b2c0:	b	1a628 <next@@Base+0x74>
   1b2c4:	ldr	r2, [pc, #1032]	; 1b6d4 <next@@Base+0x1120>
   1b2c8:	ldr	r3, [r2, #-8]
   1b2cc:	ldr	r1, [r2, #-4]
   1b2d0:	adds	r3, r3, #1
   1b2d4:	adc	r1, r1, #0
   1b2d8:	str	r3, [r2, #-8]
   1b2dc:	str	r1, [r2, #-4]
   1b2e0:	mov	r0, #1
   1b2e4:	bl	12074 <exit@plt>
   1b2e8:	cmp	r3, #0
   1b2ec:	bne	1b40c <next@@Base+0xe58>
   1b2f0:	movw	r3, #4544	; 0x11c0
   1b2f4:	movt	r3, #3
   1b2f8:	ldr	r2, [r3, #136]	; 0x88
   1b2fc:	ldr	r1, [r3, #140]	; 0x8c
   1b300:	adds	r2, r2, #1
   1b304:	adc	r1, r1, #0
   1b308:	str	r2, [r3, #136]	; 0x88
   1b30c:	str	r1, [r3, #140]	; 0x8c
   1b310:	cmp	r0, #97	; 0x61
   1b314:	bne	1b420 <next@@Base+0xe6c>
   1b318:	add	r7, r4, #1
   1b31c:	mov	r2, #97	; 0x61
   1b320:	add	r3, sp, #512	; 0x200
   1b324:	add	r3, r3, r4
   1b328:	strb	r2, [r3, #-512]	; 0xfffffe00
   1b32c:	mov	r0, r5
   1b330:	bl	1a480 <get_char@@Base>
   1b334:	ldr	r2, [pc, #924]	; 1b6d8 <next@@Base+0x1124>
   1b338:	ldr	r3, [r2, #-8]
   1b33c:	ldr	r1, [r2, #-4]
   1b340:	adds	r3, r3, #1
   1b344:	adc	r1, r1, #0
   1b348:	str	r3, [r2, #-8]
   1b34c:	str	r1, [r2, #-4]
   1b350:	cmp	r0, #105	; 0x69
   1b354:	bne	1b444 <next@@Base+0xe90>
   1b358:	add	r6, r4, #2
   1b35c:	add	r3, sp, #512	; 0x200
   1b360:	add	r7, r3, r7
   1b364:	mov	r3, #105	; 0x69
   1b368:	strb	r3, [r7, #-512]	; 0xfffffe00
   1b36c:	mov	r0, r5
   1b370:	bl	1a480 <get_char@@Base>
   1b374:	ldr	r2, [pc, #864]	; 1b6dc <next@@Base+0x1128>
   1b378:	ldr	r3, [r2, #-8]
   1b37c:	ldr	r1, [r2, #-4]
   1b380:	adds	r3, r3, #1
   1b384:	adc	r1, r1, #0
   1b388:	str	r3, [r2, #-8]
   1b38c:	str	r1, [r2, #-4]
   1b390:	cmp	r0, #110	; 0x6e
   1b394:	bne	1b464 <next@@Base+0xeb0>
   1b398:	add	r5, r4, #3
   1b39c:	add	r3, sp, #512	; 0x200
   1b3a0:	add	r6, r3, r6
   1b3a4:	mov	r3, #110	; 0x6e
   1b3a8:	strb	r3, [r6, #-512]	; 0xfffffe00
   1b3ac:	add	r3, sp, #512	; 0x200
   1b3b0:	add	r3, r3, r5
   1b3b4:	mov	r6, #0
   1b3b8:	strb	r6, [r3, #-512]	; 0xfffffe00
   1b3bc:	add	r0, r4, #4
   1b3c0:	bl	12044 <malloc@plt>
   1b3c4:	mov	r4, r0
   1b3c8:	mov	r2, r5
   1b3cc:	mov	r1, sp
   1b3d0:	bl	120bc <strncpy@plt>
   1b3d4:	strb	r6, [r4, r5]
   1b3d8:	mov	r0, #8
   1b3dc:	bl	12044 <malloc@plt>
   1b3e0:	mov	r6, r0
   1b3e4:	mov	r1, r4
   1b3e8:	bl	19e00 <init_token_function@@Base>
   1b3ec:	ldr	r2, [pc, #748]	; 1b6e0 <next@@Base+0x112c>
   1b3f0:	ldr	r3, [r2, #-8]
   1b3f4:	ldr	r1, [r2, #-4]
   1b3f8:	adds	r3, r3, #1
   1b3fc:	adc	r1, r1, #0
   1b400:	str	r3, [r2, #-8]
   1b404:	str	r1, [r2, #-4]
   1b408:	b	1a628 <next@@Base+0x74>
   1b40c:	movw	r3, #4544	; 0x11c0
   1b410:	movt	r3, #3
   1b414:	str	r2, [r3, #120]	; 0x78
   1b418:	str	r1, [r3, #124]	; 0x7c
   1b41c:	b	1b2f0 <next@@Base+0xd3c>
   1b420:	add	r2, r3, #640	; 0x280
   1b424:	ldr	r3, [r2]
   1b428:	ldr	r1, [r2, #4]
   1b42c:	adds	r3, r3, #1
   1b430:	adc	r1, r1, #0
   1b434:	str	r3, [r2]
   1b438:	str	r1, [r2, #4]
   1b43c:	mov	r0, #1
   1b440:	bl	12074 <exit@plt>
   1b444:	ldr	r3, [r2]
   1b448:	ldr	r1, [r2, #4]
   1b44c:	adds	r3, r3, #1
   1b450:	adc	r1, r1, #0
   1b454:	str	r3, [r2]
   1b458:	str	r1, [r2, #4]
   1b45c:	mov	r0, #1
   1b460:	bl	12074 <exit@plt>
   1b464:	ldr	r3, [r2]
   1b468:	ldr	r1, [r2, #4]
   1b46c:	adds	r3, r3, #1
   1b470:	adc	r1, r1, #0
   1b474:	str	r3, [r2]
   1b478:	str	r1, [r2, #4]
   1b47c:	mov	r0, #1
   1b480:	bl	12074 <exit@plt>
   1b484:	cmp	r3, #0
   1b488:	bne	1b5e4 <next@@Base+0x1030>
   1b48c:	movw	r3, #4544	; 0x11c0
   1b490:	movt	r3, #3
   1b494:	ldr	r2, [r3, #144]	; 0x90
   1b498:	ldr	r1, [r3, #148]	; 0x94
   1b49c:	adds	r2, r2, #1
   1b4a0:	adc	r1, r1, #0
   1b4a4:	str	r2, [r3, #144]	; 0x90
   1b4a8:	str	r1, [r3, #148]	; 0x94
   1b4ac:	cmp	r0, #101	; 0x65
   1b4b0:	bne	1b5f8 <next@@Base+0x1044>
   1b4b4:	add	r7, r4, #1
   1b4b8:	mov	r2, #101	; 0x65
   1b4bc:	add	r3, sp, #512	; 0x200
   1b4c0:	add	r3, r3, r4
   1b4c4:	strb	r2, [r3, #-512]	; 0xfffffe00
   1b4c8:	mov	r0, r5
   1b4cc:	bl	1a480 <get_char@@Base>
   1b4d0:	ldr	r2, [pc, #524]	; 1b6e4 <next@@Base+0x1130>
   1b4d4:	ldr	r3, [r2, #-8]
   1b4d8:	ldr	r1, [r2, #-4]
   1b4dc:	adds	r3, r3, #1
   1b4e0:	adc	r1, r1, #0
   1b4e4:	str	r3, [r2, #-8]
   1b4e8:	str	r1, [r2, #-4]
   1b4ec:	cmp	r0, #116	; 0x74
   1b4f0:	bne	1b61c <next@@Base+0x1068>
   1b4f4:	add	r6, r4, #2
   1b4f8:	add	r3, sp, #512	; 0x200
   1b4fc:	add	r7, r3, r7
   1b500:	mov	r3, #116	; 0x74
   1b504:	strb	r3, [r7, #-512]	; 0xfffffe00
   1b508:	mov	r0, r5
   1b50c:	bl	1a480 <get_char@@Base>
   1b510:	ldr	r2, [pc, #464]	; 1b6e8 <next@@Base+0x1134>
   1b514:	ldr	r3, [r2, #-8]
   1b518:	ldr	r1, [r2, #-4]
   1b51c:	adds	r3, r3, #1
   1b520:	adc	r1, r1, #0
   1b524:	str	r3, [r2, #-8]
   1b528:	str	r1, [r2, #-4]
   1b52c:	cmp	r0, #117	; 0x75
   1b530:	bne	1b63c <next@@Base+0x1088>
   1b534:	add	r4, r4, #3
   1b538:	add	r3, sp, #512	; 0x200
   1b53c:	add	r6, r3, r6
   1b540:	mov	r3, #117	; 0x75
   1b544:	strb	r3, [r6, #-512]	; 0xfffffe00
   1b548:	mov	r0, r5
   1b54c:	bl	1a480 <get_char@@Base>
   1b550:	cmp	r0, #114	; 0x72
   1b554:	bne	1b65c <next@@Base+0x10a8>
   1b558:	movw	r6, #4544	; 0x11c0
   1b55c:	movt	r6, #3
   1b560:	ldr	r3, [r6, #736]	; 0x2e0
   1b564:	ldr	r1, [r6, #740]	; 0x2e4
   1b568:	adds	r3, r3, #1
   1b56c:	adc	r1, r1, #0
   1b570:	str	r3, [r6, #736]	; 0x2e0
   1b574:	str	r1, [r6, #740]	; 0x2e4
   1b578:	add	r3, sp, #512	; 0x200
   1b57c:	add	r4, r3, r4
   1b580:	mov	r3, #114	; 0x72
   1b584:	strb	r3, [r4, #-512]	; 0xfffffe00
   1b588:	mov	r0, r5
   1b58c:	bl	1a480 <get_char@@Base>
   1b590:	add	r6, r6, #752	; 0x2f0
   1b594:	ldr	r3, [r6, #-8]
   1b598:	ldr	r2, [r6, #-4]
   1b59c:	adds	r3, r3, #1
   1b5a0:	adc	r2, r2, #0
   1b5a4:	str	r3, [r6, #-8]
   1b5a8:	str	r2, [r6, #-4]
   1b5ac:	cmp	r0, #110	; 0x6e
   1b5b0:	bne	1b680 <next@@Base+0x10cc>
   1b5b4:	mov	r0, #4
   1b5b8:	bl	12044 <malloc@plt>
   1b5bc:	mov	r6, r0
   1b5c0:	bl	19ee0 <init_token_return@@Base>
   1b5c4:	ldr	r2, [pc, #288]	; 1b6ec <next@@Base+0x1138>
   1b5c8:	ldr	r3, [r2, #-8]
   1b5cc:	ldr	r1, [r2, #-4]
   1b5d0:	adds	r3, r3, #1
   1b5d4:	adc	r1, r1, #0
   1b5d8:	str	r3, [r2, #-8]
   1b5dc:	str	r1, [r2, #-4]
   1b5e0:	b	1a628 <next@@Base+0x74>
   1b5e4:	movw	r3, #4544	; 0x11c0
   1b5e8:	movt	r3, #3
   1b5ec:	str	r2, [r3, #120]	; 0x78
   1b5f0:	str	r1, [r3, #124]	; 0x7c
   1b5f4:	b	1b48c <next@@Base+0xed8>
   1b5f8:	add	r2, r3, #688	; 0x2b0
   1b5fc:	ldr	r3, [r2]
   1b600:	ldr	r1, [r2, #4]
   1b604:	adds	r3, r3, #1
   1b608:	adc	r1, r1, #0
   1b60c:	str	r3, [r2]
   1b610:	str	r1, [r2, #4]
   1b614:	mov	r0, #1
   1b618:	bl	12074 <exit@plt>
   1b61c:	ldr	r3, [r2]
   1b620:	ldr	r1, [r2, #4]
   1b624:	adds	r3, r3, #1
   1b628:	adc	r1, r1, #0
   1b62c:	str	r3, [r2]
   1b630:	str	r1, [r2, #4]
   1b634:	mov	r0, #1
   1b638:	bl	12074 <exit@plt>
   1b63c:	ldr	r3, [r2]
   1b640:	ldr	r1, [r2, #4]
   1b644:	adds	r3, r3, #1
   1b648:	adc	r1, r1, #0
   1b64c:	str	r3, [r2]
   1b650:	str	r1, [r2, #4]
   1b654:	mov	r0, #1
   1b658:	bl	12074 <exit@plt>
   1b65c:	ldr	r2, [pc, #140]	; 1b6f0 <next@@Base+0x113c>
   1b660:	ldr	r3, [r2, #-8]
   1b664:	ldr	r1, [r2, #-4]
   1b668:	adds	r3, r3, #1
   1b66c:	adc	r1, r1, #0
   1b670:	str	r3, [r2, #-8]
   1b674:	str	r1, [r2, #-4]
   1b678:	mov	r0, #1
   1b67c:	bl	12074 <exit@plt>
   1b680:	ldr	r3, [r6]
   1b684:	ldr	r1, [r6, #4]
   1b688:	adds	r3, r3, #1
   1b68c:	adc	r1, r1, #0
   1b690:	str	r3, [r6]
   1b694:	str	r1, [r6, #4]
   1b698:	mov	r0, #1
   1b69c:	bl	12074 <exit@plt>
   1b6a0:	andeq	r1, r3, r0, ror #7
   1b6a4:	andeq	r1, r3, r0, lsl #7
   1b6a8:	andeq	r1, r3, r0, asr #7
   1b6ac:	ldrdeq	r1, [r3], -r0
   1b6b0:	andeq	r1, r3, r0, lsr r3
   1b6b4:	andeq	r1, r3, r0, asr #6
   1b6b8:	andeq	r1, r3, r0, asr r3
   1b6bc:	andeq	r1, r3, r0, ror #6
   1b6c0:	andeq	r1, r3, r0, ror r3
   1b6c4:	muleq	r3, r0, r3
   1b6c8:			; <UNDEFINED> instruction: 0x000313b0
   1b6cc:	andeq	r1, r3, r0, lsr #8
   1b6d0:	andeq	r1, r3, r0, lsr r4
   1b6d4:	andeq	r1, r3, r0, lsl r4
   1b6d8:	andeq	r1, r3, r0, asr r4
   1b6dc:	andeq	r1, r3, r0, ror #8
   1b6e0:	andeq	r1, r3, r0, ror r4
   1b6e4:	andeq	r1, r3, r0, lsl #9
   1b6e8:	muleq	r3, r0, r4
   1b6ec:	andeq	r1, r3, r0, asr #9
   1b6f0:	andeq	r1, r3, r0, lsr #9
   1b6f4:	ldrdeq	r1, [r3], -r0
   1b6f8:	andeq	r1, r3, r0, ror #9
   1b6fc:	strdeq	r1, [r3], -r0
   1b700:	andeq	r1, r3, r0, lsl #10
   1b704:	cmp	r3, #0
   1b708:	bne	1b7e0 <next@@Base+0x122c>
   1b70c:	movw	r3, #4544	; 0x11c0
   1b710:	movt	r3, #3
   1b714:	ldr	r2, [r3, #152]	; 0x98
   1b718:	ldr	r1, [r3, #156]	; 0x9c
   1b71c:	adds	r2, r2, #1
   1b720:	adc	r1, r1, #0
   1b724:	str	r2, [r3, #152]	; 0x98
   1b728:	str	r1, [r3, #156]	; 0x9c
   1b72c:	cmp	r0, #108	; 0x6c
   1b730:	bne	1b7f4 <next@@Base+0x1240>
   1b734:	add	r6, r4, #1
   1b738:	add	r3, sp, #512	; 0x200
   1b73c:	add	r4, r3, r4
   1b740:	mov	r3, #108	; 0x6c
   1b744:	strb	r3, [r4, #-512]	; 0xfffffe00
   1b748:	mov	r0, r5
   1b74c:	bl	1a480 <get_char@@Base>
   1b750:	ldr	r2, [pc, #-100]	; 1b6f4 <next@@Base+0x1140>
   1b754:	ldr	r3, [r2, #-8]
   1b758:	ldr	r1, [r2, #-4]
   1b75c:	adds	r3, r3, #1
   1b760:	adc	r1, r1, #0
   1b764:	str	r3, [r2, #-8]
   1b768:	str	r1, [r2, #-4]
   1b76c:	cmp	r0, #115	; 0x73
   1b770:	bne	1b818 <next@@Base+0x1264>
   1b774:	add	r3, sp, #512	; 0x200
   1b778:	add	r6, r3, r6
   1b77c:	mov	r3, #115	; 0x73
   1b780:	strb	r3, [r6, #-512]	; 0xfffffe00
   1b784:	mov	r0, r5
   1b788:	bl	1a480 <get_char@@Base>
   1b78c:	ldr	r2, [pc, #-156]	; 1b6f8 <next@@Base+0x1144>
   1b790:	ldr	r3, [r2, #-8]
   1b794:	ldr	r1, [r2, #-4]
   1b798:	adds	r3, r3, #1
   1b79c:	adc	r1, r1, #0
   1b7a0:	str	r3, [r2, #-8]
   1b7a4:	str	r1, [r2, #-4]
   1b7a8:	cmp	r0, #101	; 0x65
   1b7ac:	bne	1b838 <next@@Base+0x1284>
   1b7b0:	mov	r0, #4
   1b7b4:	bl	12044 <malloc@plt>
   1b7b8:	mov	r6, r0
   1b7bc:	bl	19f90 <init_token_else@@Base>
   1b7c0:	ldr	r2, [pc, #-204]	; 1b6fc <next@@Base+0x1148>
   1b7c4:	ldr	r3, [r2, #-8]
   1b7c8:	ldr	r1, [r2, #-4]
   1b7cc:	adds	r3, r3, #1
   1b7d0:	adc	r1, r1, #0
   1b7d4:	str	r3, [r2, #-8]
   1b7d8:	str	r1, [r2, #-4]
   1b7dc:	b	1a628 <next@@Base+0x74>
   1b7e0:	movw	r3, #4544	; 0x11c0
   1b7e4:	movt	r3, #3
   1b7e8:	str	r2, [r3, #120]	; 0x78
   1b7ec:	str	r1, [r3, #124]	; 0x7c
   1b7f0:	b	1b70c <next@@Base+0x1158>
   1b7f4:	add	r2, r3, #768	; 0x300
   1b7f8:	ldr	r3, [r2]
   1b7fc:	ldr	r1, [r2, #4]
   1b800:	adds	r3, r3, #1
   1b804:	adc	r1, r1, #0
   1b808:	str	r3, [r2]
   1b80c:	str	r1, [r2, #4]
   1b810:	mov	r0, #1
   1b814:	bl	12074 <exit@plt>
   1b818:	ldr	r3, [r2]
   1b81c:	ldr	r1, [r2, #4]
   1b820:	adds	r3, r3, #1
   1b824:	adc	r1, r1, #0
   1b828:	str	r3, [r2]
   1b82c:	str	r1, [r2, #4]
   1b830:	mov	r0, #1
   1b834:	bl	12074 <exit@plt>
   1b838:	ldr	r3, [r2]
   1b83c:	ldr	r1, [r2, #4]
   1b840:	adds	r3, r3, #1
   1b844:	adc	r1, r1, #0
   1b848:	str	r3, [r2]
   1b84c:	str	r1, [r2, #4]
   1b850:	mov	r0, #1
   1b854:	bl	12074 <exit@plt>
   1b858:	ldr	r4, [pc, #-352]	; 1b700 <next@@Base+0x114c>
   1b85c:	ldr	r3, [r4, #-8]
   1b860:	ldr	r2, [r4, #-4]
   1b864:	adds	r3, r3, #1
   1b868:	adc	r2, r2, #0
   1b86c:	str	r3, [r4, #-8]
   1b870:	str	r2, [r4, #-4]
   1b874:	mov	r0, #4
   1b878:	bl	12044 <malloc@plt>
   1b87c:	mov	r6, r0
   1b880:	bl	19f38 <init_token_eof@@Base>
   1b884:	ldr	r3, [r4]
   1b888:	ldr	r2, [r4, #4]
   1b88c:	adds	r3, r3, #1
   1b890:	adc	r2, r2, #0
   1b894:	str	r3, [r4]
   1b898:	str	r2, [r4, #4]
   1b89c:	b	1a628 <next@@Base+0x74>
   1b8a0:	str	r4, [sp, #-8]!
   1b8a4:	str	lr, [sp, #4]
   1b8a8:	movw	r0, #64264	; 0xfb08
   1b8ac:	movt	r0, #2
   1b8b0:	bl	1d8f8 <__gcov_sort_n_vals@@Base+0x4a0>
   1b8b4:	ldr	r4, [sp]
   1b8b8:	add	sp, sp, #4
   1b8bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8c0:	str	r4, [sp, #-8]!
   1b8c4:	str	lr, [sp, #4]
   1b8c8:	bl	1d888 <__gcov_sort_n_vals@@Base+0x430>
   1b8cc:	ldr	r4, [sp]
   1b8d0:	add	sp, sp, #4
   1b8d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8d8:	b	1cb7c <next@@Base+0x25c8>
   1b8dc:	push	{r4, r5, r6, r7, r8, lr}
   1b8e0:	subs	r5, r1, #0
   1b8e4:	popeq	{r4, r5, r6, r7, r8, pc}
   1b8e8:	mov	r4, r0
   1b8ec:	bl	1b8d8 <next@@Base+0x1324>
   1b8f0:	ldr	r3, [r4]
   1b8f4:	ldr	r2, [r4, #4]
   1b8f8:	adds	r6, r3, r0
   1b8fc:	adc	r7, r2, r1
   1b900:	subs	r5, r5, #1
   1b904:	strd	r6, [r4], #8
   1b908:	bne	1b8ec <next@@Base+0x1338>
   1b90c:	pop	{r4, r5, r6, r7, r8, pc}
   1b910:	ldr	r3, [pc, #20]	; 1b92c <next@@Base+0x1378>
   1b914:	ldr	r2, [pc, #20]	; 1b930 <next@@Base+0x137c>
   1b918:	add	r3, pc, r3
   1b91c:	ldr	r3, [r3, r2]
   1b920:	ldmib	r3, {r0, r3}
   1b924:	add	r0, r0, r3
   1b928:	bx	lr
   1b92c:	andeq	r3, r1, r0, ror #13
   1b930:	andeq	r0, r0, r4, lsr #1
   1b934:	ldr	r3, [pc, #28]	; 1b958 <next@@Base+0x13a4>
   1b938:	ldr	r2, [pc, #28]	; 1b95c <next@@Base+0x13a8>
   1b93c:	add	r3, pc, r3
   1b940:	ldr	r3, [r3, r2]
   1b944:	ldr	r2, [r3]
   1b948:	cmp	r2, #0
   1b94c:	ldrne	r0, [r3, #20]
   1b950:	moveq	r0, #1
   1b954:	bx	lr
   1b958:			; <UNDEFINED> instruction: 0x000136bc
   1b95c:	andeq	r0, r0, r4, lsr #1
   1b960:	bx	lr
   1b964:	ldr	ip, [pc, #32]	; 1b98c <next@@Base+0x13d8>
   1b968:	mov	r3, #32
   1b96c:	teq	r0, r1
   1b970:	movmi	r2, ip
   1b974:	movpl	r2, #0
   1b978:	subs	r3, r3, #1
   1b97c:	lsl	r1, r1, #1
   1b980:	eor	r0, r2, r0, lsl #1
   1b984:	bne	1b96c <next@@Base+0x13b8>
   1b988:	bx	lr
   1b98c:	strbeq	r1, [r1], #3511	; 0xdb7
   1b990:	ldr	r2, [pc, #60]	; 1b9d4 <next@@Base+0x1420>
   1b994:	ldr	r3, [pc, #60]	; 1b9d8 <next@@Base+0x1424>
   1b998:	add	r2, pc, r2
   1b99c:	push	{r4, lr}
   1b9a0:	ldr	r4, [r2, r3]
   1b9a4:	ldr	r0, [r4]
   1b9a8:	cmp	r0, #0
   1b9ac:	popeq	{r4, pc}
   1b9b0:	ldr	r3, [pc, #36]	; 1b9dc <next@@Base+0x1428>
   1b9b4:	ldr	r3, [r2, r3]
   1b9b8:	ldr	r3, [r3]
   1b9bc:	cmp	r0, r3
   1b9c0:	popeq	{r4, pc}
   1b9c4:	bl	120d4 <fclose@plt>
   1b9c8:	mov	r3, #0
   1b9cc:	str	r3, [r4]
   1b9d0:	pop	{r4, pc}
   1b9d4:	andeq	r3, r1, r0, ror #12
   1b9d8:	andeq	r0, r0, r8, lsr #1
   1b9dc:	muleq	r0, r8, r0
   1b9e0:	ldr	r3, [pc, #76]	; 1ba34 <next@@Base+0x1480>
   1b9e4:	ldr	r1, [pc, #76]	; 1ba38 <next@@Base+0x1484>
   1b9e8:	add	r3, pc, r3
   1b9ec:	push	{r4, r5, r6, lr}
   1b9f0:	mov	r5, r0
   1b9f4:	ldr	r4, [r3, r1]
   1b9f8:	lsl	r1, r0, #2
   1b9fc:	mov	r0, r4
   1ba00:	mov	r2, #1
   1ba04:	ldr	r3, [r0], #28
   1ba08:	bl	12008 <fwrite@plt>
   1ba0c:	cmp	r0, #1
   1ba10:	movne	r3, #1
   1ba14:	ldr	r0, [r4, #8]
   1ba18:	strne	r3, [r4, #20]
   1ba1c:	ldr	r3, [r4, #4]
   1ba20:	sub	r0, r0, r5
   1ba24:	add	r3, r3, r5
   1ba28:	str	r3, [r4, #4]
   1ba2c:	str	r0, [r4, #8]
   1ba30:	pop	{r4, r5, r6, pc}
   1ba34:	andeq	r3, r1, r0, lsl r6
   1ba38:	andeq	r0, r0, r4, lsr #1
   1ba3c:	ldr	r3, [pc, #80]	; 1ba94 <next@@Base+0x14e0>
   1ba40:	ldr	r2, [pc, #80]	; 1ba98 <next@@Base+0x14e4>
   1ba44:	add	r3, pc, r3
   1ba48:	push	{r4, r5, r6, lr}
   1ba4c:	mov	r5, r0
   1ba50:	ldr	r4, [r3, r2]
   1ba54:	ldr	r3, [r4, #8]
   1ba58:	cmp	r3, #1024	; 0x400
   1ba5c:	bcs	1ba74 <next@@Base+0x14c0>
   1ba60:	add	r0, r3, #7
   1ba64:	add	r3, r5, r3
   1ba68:	str	r3, [r4, #8]
   1ba6c:	add	r0, r4, r0, lsl #2
   1ba70:	pop	{r4, r5, r6, pc}
   1ba74:	mov	r0, #1024	; 0x400
   1ba78:	bl	1b9e0 <next@@Base+0x142c>
   1ba7c:	ldr	r3, [r4, #8]
   1ba80:	cmp	r3, #0
   1ba84:	addne	r2, r4, #4096	; 0x1000
   1ba88:	ldrne	r2, [r2, #28]
   1ba8c:	strne	r2, [r4, #28]
   1ba90:	b	1ba60 <next@@Base+0x14ac>
   1ba94:			; <UNDEFINED> instruction: 0x000135b4
   1ba98:	andeq	r0, r0, r4, lsr #1
   1ba9c:	ldr	r3, [pc, #192]	; 1bb64 <next@@Base+0x15b0>
   1baa0:	ldr	r2, [pc, #192]	; 1bb68 <next@@Base+0x15b4>
   1baa4:	add	r3, pc, r3
   1baa8:	push	{r4, r5, r6, lr}
   1baac:	ldr	r4, [r3, r2]
   1bab0:	ldr	r2, [r4, #24]
   1bab4:	ldr	r3, [r4, #8]
   1bab8:	ldr	ip, [r4, #12]
   1babc:	cmp	r2, #0
   1bac0:	sub	ip, ip, r3
   1bac4:	ble	1bb40 <next@@Base+0x158c>
   1bac8:	cmp	ip, r0
   1bacc:	mov	r5, r0
   1bad0:	bcs	1bb2c <next@@Base+0x1578>
   1bad4:	ldr	r2, [r4, #4]
   1bad8:	cmp	ip, #0
   1badc:	add	r2, r2, r3
   1bae0:	str	r2, [r4, #4]
   1bae4:	addne	r2, r4, #28
   1bae8:	mov	r0, r4
   1baec:	ldrne	r3, [r2, r3, lsl #2]
   1baf0:	mov	r6, #0
   1baf4:	strne	r3, [r4, #28]
   1baf8:	ldr	r3, [r0], #28
   1bafc:	mov	r2, #4096	; 0x1000
   1bb00:	add	r0, r0, ip, lsl #2
   1bb04:	mov	r1, #1
   1bb08:	str	ip, [r4, #12]
   1bb0c:	str	r6, [r4, #8]
   1bb10:	bl	12020 <fread@plt>
   1bb14:	ldr	r3, [r4, #12]
   1bb18:	add	r0, r3, r0, lsr #2
   1bb1c:	cmp	r0, r5
   1bb20:	str	r0, [r4, #12]
   1bb24:	bcc	1bb48 <next@@Base+0x1594>
   1bb28:	ldr	r3, [r4, #8]
   1bb2c:	add	r0, r3, #7
   1bb30:	add	r5, r5, r3
   1bb34:	str	r5, [r4, #8]
   1bb38:	add	r0, r4, r0, lsl #2
   1bb3c:	pop	{r4, r5, r6, pc}
   1bb40:	mov	r0, #0
   1bb44:	pop	{r4, r5, r6, pc}
   1bb48:	ldr	r3, [r4, #16]
   1bb4c:	str	r6, [r4, #12]
   1bb50:	add	r5, r5, r3
   1bb54:	sub	r5, r5, r0
   1bb58:	str	r5, [r4, #16]
   1bb5c:	mov	r0, r6
   1bb60:	pop	{r4, r5, r6, pc}
   1bb64:	andeq	r3, r1, r4, asr r5
   1bb68:	andeq	r0, r0, r4, lsr #1
   1bb6c:	push	{r4, r5, r6, lr}
   1bb70:	ldr	r4, [pc, #92]	; 1bbd4 <next@@Base+0x1620>
   1bb74:	ldr	r3, [pc, #92]	; 1bbd8 <next@@Base+0x1624>
   1bb78:	add	r4, pc, r4
   1bb7c:	ldr	r5, [r4, r3]
   1bb80:	ldr	r0, [r5]
   1bb84:	cmp	r0, #0
   1bb88:	popne	{r4, r5, r6, pc}
   1bb8c:	ldr	r0, [pc, #72]	; 1bbdc <next@@Base+0x1628>
   1bb90:	add	r0, pc, r0
   1bb94:	bl	12038 <getenv@plt>
   1bb98:	cmp	r0, #0
   1bb9c:	beq	1bbcc <next@@Base+0x1618>
   1bba0:	ldr	r1, [pc, #56]	; 1bbe0 <next@@Base+0x162c>
   1bba4:	add	r1, pc, r1
   1bba8:	bl	12110 <fopen64@plt>
   1bbac:	str	r0, [r5]
   1bbb0:	cmp	r0, #0
   1bbb4:	popne	{r4, r5, r6, pc}
   1bbb8:	ldr	r3, [pc, #36]	; 1bbe4 <next@@Base+0x1630>
   1bbbc:	ldr	r3, [r4, r3]
   1bbc0:	ldr	r0, [r3]
   1bbc4:	str	r0, [r5]
   1bbc8:	pop	{r4, r5, r6, pc}
   1bbcc:	ldr	r0, [r5]
   1bbd0:	b	1bbb0 <next@@Base+0x15fc>
   1bbd4:	andeq	r3, r1, r0, lsl #9
   1bbd8:	andeq	r0, r0, r8, lsr #1
   1bbdc:	andeq	r2, r0, r4, lsr r8
   1bbe0:	muleq	r0, ip, r4
   1bbe4:	muleq	r0, r8, r0
   1bbe8:	push	{r0, r1, r2, r3}
   1bbec:	push	{lr}		; (str lr, [sp, #-4]!)
   1bbf0:	sub	sp, sp, #12
   1bbf4:	add	r3, sp, #20
   1bbf8:	str	r3, [sp, #4]
   1bbfc:	bl	1bb6c <next@@Base+0x15b8>
   1bc00:	ldr	r1, [sp, #16]
   1bc04:	ldr	r2, [sp, #4]
   1bc08:	bl	120ec <vfprintf@plt>
   1bc0c:	add	sp, sp, #12
   1bc10:	pop	{lr}		; (ldr lr, [sp], #4)
   1bc14:	add	sp, sp, #16
   1bc18:	bx	lr
   1bc1c:	push	{r4, r5, r6, r7, r8, lr}
   1bc20:	subs	r6, r1, #0
   1bc24:	beq	1bc78 <next@@Base+0x16c4>
   1bc28:	cmp	r2, #0
   1bc2c:	ldr	r7, [r6]
   1bc30:	beq	1bc68 <next@@Base+0x16b4>
   1bc34:	add	r4, r0, #12
   1bc38:	add	r5, r4, r2, lsl #2
   1bc3c:	mov	r3, #0
   1bc40:	ldr	r2, [r4, #4]!
   1bc44:	add	r1, r6, r3, lsl #3
   1bc48:	cmp	r2, #0
   1bc4c:	add	r8, r3, #1
   1bc50:	beq	1bc60 <next@@Base+0x16ac>
   1bc54:	ldr	r0, [r1, #28]
   1bc58:	bl	11fe4 <free@plt>
   1bc5c:	mov	r3, r8
   1bc60:	cmp	r4, r5
   1bc64:	bne	1bc40 <next@@Base+0x168c>
   1bc68:	mov	r0, r6
   1bc6c:	bl	11fe4 <free@plt>
   1bc70:	mov	r0, r7
   1bc74:	pop	{r4, r5, r6, r7, r8, pc}
   1bc78:	mov	r7, r6
   1bc7c:	b	1bc70 <next@@Base+0x16bc>
   1bc80:	push	{r4, r5}
   1bc84:	mov	r4, r0
   1bc88:	mov	r5, r1
   1bc8c:	orrs	r3, r4, r5
   1bc90:	beq	1bcd4 <next@@Base+0x1720>
   1bc94:	cmp	r1, #0
   1bc98:	clzeq	r2, r0
   1bc9c:	addeq	r2, r2, #32
   1bca0:	clzne	r2, r1
   1bca4:	rsb	r3, r2, #63	; 0x3f
   1bca8:	cmp	r3, #1
   1bcac:	bls	1bcd4 <next@@Base+0x1720>
   1bcb0:	rsb	r1, r2, #61	; 0x3d
   1bcb4:	rsb	r0, r1, #32
   1bcb8:	lsr	r3, r4, r1
   1bcbc:	sub	r1, r1, #32
   1bcc0:	orr	r3, r3, r5, lsl r0
   1bcc4:	orr	r3, r3, r5, lsr r1
   1bcc8:	rsb	r2, r2, #1073741886	; 0x4000003e
   1bccc:	and	r0, r3, #3
   1bcd0:	add	r0, r0, r2, lsl #2
   1bcd4:	pop	{r4, r5}
   1bcd8:	bx	lr
   1bcdc:	push	{r4, r5, r6, lr}
   1bce0:	mov	r1, r3
   1bce4:	mov	r6, r0
   1bce8:	mov	r0, r2
   1bcec:	mov	r4, r2
   1bcf0:	mov	r5, r3
   1bcf4:	bl	1bc80 <next@@Base+0x16cc>
   1bcf8:	add	r0, r0, r0, lsl #1
   1bcfc:	lsl	r0, r0, #3
   1bd00:	add	r3, r6, r0
   1bd04:	ldr	r1, [r6, r0]
   1bd08:	ldr	r2, [r3, #16]
   1bd0c:	add	r1, r1, #1
   1bd10:	str	r1, [r6, r0]
   1bd14:	ldrd	r0, [r3, #8]
   1bd18:	ldr	ip, [r3, #20]
   1bd1c:	adds	r2, r2, r4
   1bd20:	str	r2, [r3, #16]
   1bd24:	adc	r2, ip, r5
   1bd28:	cmp	r4, r0
   1bd2c:	sbcs	r1, r5, r1
   1bd30:	str	r2, [r3, #20]
   1bd34:	strdlt	r4, [r3, #8]
   1bd38:	pop	{r4, r5, r6, pc}
   1bd3c:	ldr	r3, [r1, #8]
   1bd40:	cmp	r3, #0
   1bd44:	bxeq	lr
   1bd48:	add	r2, r1, #6016	; 0x1780
   1bd4c:	push	{r4, r5, r6, r7, r8, lr}
   1bd50:	mov	r3, r1
   1bd54:	mov	r8, r1
   1bd58:	mov	r7, r0
   1bd5c:	ldrd	r4, [r1, #24]
   1bd60:	add	r2, r2, #32
   1bd64:	mov	ip, #0
   1bd68:	mov	r0, #0
   1bd6c:	mov	r1, #0
   1bd70:	str	ip, [r3, #40]	; 0x28
   1bd74:	strd	r4, [r3, #48]	; 0x30
   1bd78:	strd	r0, [r3, #56]	; 0x38
   1bd7c:	add	r3, r3, #24
   1bd80:	cmp	r3, r2
   1bd84:	bne	1bd70 <next@@Base+0x17bc>
   1bd88:	cmp	r7, #0
   1bd8c:	popeq	{r4, r5, r6, r7, r8, pc}
   1bd90:	add	r8, r8, #40	; 0x28
   1bd94:	ldr	r3, [r7, #16]
   1bd98:	cmp	r3, #0
   1bd9c:	beq	1be24 <next@@Base+0x1870>
   1bda0:	ldr	r2, [r7, #52]	; 0x34
   1bda4:	cmp	r2, #0
   1bda8:	beq	1be24 <next@@Base+0x1870>
   1bdac:	mov	r6, #0
   1bdb0:	b	1bdc0 <next@@Base+0x180c>
   1bdb4:	add	r6, r6, #1
   1bdb8:	cmp	r2, r6
   1bdbc:	beq	1be24 <next@@Base+0x1870>
   1bdc0:	ldr	r3, [r7, #56]	; 0x38
   1bdc4:	ldr	r5, [r3, r6, lsl #2]
   1bdc8:	cmp	r5, #0
   1bdcc:	beq	1bdb4 <next@@Base+0x1800>
   1bdd0:	ldr	r3, [r5]
   1bdd4:	cmp	r3, r7
   1bdd8:	bne	1bdb4 <next@@Base+0x1800>
   1bddc:	ldr	r3, [r5, #16]
   1bde0:	cmp	r3, #0
   1bde4:	beq	1bdb4 <next@@Base+0x1800>
   1bde8:	mov	r4, #0
   1bdec:	ldr	r2, [r5, #20]
   1bdf0:	lsl	r3, r4, #3
   1bdf4:	add	r2, r2, r3
   1bdf8:	mov	r0, r8
   1bdfc:	ldrd	r2, [r2]
   1be00:	bl	1bcdc <next@@Base+0x1728>
   1be04:	ldr	r3, [r5, #16]
   1be08:	add	r4, r4, #1
   1be0c:	cmp	r3, r4
   1be10:	bhi	1bdec <next@@Base+0x1838>
   1be14:	ldr	r2, [r7, #52]	; 0x34
   1be18:	add	r6, r6, #1
   1be1c:	cmp	r2, r6
   1be20:	bne	1bdc0 <next@@Base+0x180c>
   1be24:	ldr	r7, [r7, #4]
   1be28:	cmp	r7, #0
   1be2c:	bne	1bd94 <next@@Base+0x17e0>
   1be30:	pop	{r4, r5, r6, r7, r8, pc}
   1be34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be38:	sub	sp, sp, #12
   1be3c:	mov	r6, r0
   1be40:	str	r0, [sp, #4]
   1be44:	mov	r8, r2
   1be48:	mov	r0, r1
   1be4c:	mov	r4, r1
   1be50:	ldr	r2, [pc, #364]	; 1bfc4 <next@@Base+0x1a10>
   1be54:	mov	r1, #0
   1be58:	bl	120b0 <memset@plt>
   1be5c:	mov	r5, #0
   1be60:	cmp	r6, #0
   1be64:	str	r5, [r8]
   1be68:	beq	1bfa8 <next@@Base+0x19f4>
   1be6c:	mov	r9, r5
   1be70:	ldr	r0, [r6, #12]
   1be74:	bl	12080 <strlen@plt>
   1be78:	cmp	r5, r0
   1be7c:	strcc	r0, [r8]
   1be80:	mov	r0, r9
   1be84:	ldr	r1, [r6, #8]
   1be88:	bl	1b964 <next@@Base+0x13b0>
   1be8c:	ldr	r7, [r6, #52]	; 0x34
   1be90:	mov	r1, r7
   1be94:	bl	1b964 <next@@Base+0x13b0>
   1be98:	cmp	r7, #0
   1be9c:	mov	r9, r0
   1bea0:	beq	1bf94 <next@@Base+0x19e0>
   1bea4:	ldr	r5, [r6, #56]	; 0x38
   1bea8:	add	r7, r5, r7, lsl #2
   1beac:	sub	r7, r7, #4
   1beb0:	sub	r5, r5, #4
   1beb4:	b	1bee4 <next@@Base+0x1930>
   1beb8:	ldr	r3, [sl]
   1bebc:	mov	r0, r9
   1bec0:	cmp	r3, r6
   1bec4:	beq	1bf00 <next@@Base+0x194c>
   1bec8:	mov	r1, #0
   1becc:	bl	1b964 <next@@Base+0x13b0>
   1bed0:	mov	r1, #0
   1bed4:	bl	1b964 <next@@Base+0x13b0>
   1bed8:	mov	r9, r0
   1bedc:	cmp	r5, r7
   1bee0:	beq	1bf94 <next@@Base+0x19e0>
   1bee4:	ldr	sl, [r5, #4]!
   1bee8:	cmp	sl, #0
   1beec:	bne	1beb8 <next@@Base+0x1904>
   1bef0:	mov	r1, sl
   1bef4:	mov	r0, r9
   1bef8:	bl	1b964 <next@@Base+0x13b0>
   1befc:	b	1bed0 <next@@Base+0x191c>
   1bf00:	ldr	r1, [sl, #12]
   1bf04:	bl	1b964 <next@@Base+0x13b0>
   1bf08:	ldr	r1, [sl, #8]
   1bf0c:	bl	1b964 <next@@Base+0x13b0>
   1bf10:	ldr	r3, [r6, #16]
   1bf14:	cmp	r3, #0
   1bf18:	mov	r9, r0
   1bf1c:	beq	1bedc <next@@Base+0x1928>
   1bf20:	ldr	fp, [sl, #16]
   1bf24:	ldr	r3, [r4, #8]
   1bf28:	mov	r1, fp
   1bf2c:	add	r3, r3, fp
   1bf30:	str	r3, [r4, #8]
   1bf34:	bl	1b964 <next@@Base+0x13b0>
   1bf38:	cmp	fp, #0
   1bf3c:	mov	r9, r0
   1bf40:	beq	1bedc <next@@Base+0x1928>
   1bf44:	ldr	r2, [sl, #20]
   1bf48:	ldr	r3, [r4, #16]
   1bf4c:	add	lr, r2, fp, lsl #3
   1bf50:	ldr	ip, [r4, #20]
   1bf54:	sub	lr, lr, #8
   1bf58:	sub	r2, r2, #8
   1bf5c:	ldrd	r0, [r2, #8]!
   1bf60:	ldrd	sl, [r4, #24]
   1bf64:	adds	r3, r3, r0
   1bf68:	adc	ip, ip, r1
   1bf6c:	str	ip, [r4, #20]
   1bf70:	str	r3, [r4, #16]
   1bf74:	ldrd	r0, [r2]
   1bf78:	cmp	sl, r0
   1bf7c:	sbcs	sl, fp, r1
   1bf80:	strdlt	r0, [r4, #24]
   1bf84:	cmp	lr, r2
   1bf88:	bne	1bf5c <next@@Base+0x19a8>
   1bf8c:	cmp	r5, r7
   1bf90:	bne	1bee4 <next@@Base+0x1930>
   1bf94:	ldr	r6, [r6, #4]
   1bf98:	cmp	r6, #0
   1bf9c:	beq	1bfac <next@@Base+0x19f8>
   1bfa0:	ldr	r5, [r8]
   1bfa4:	b	1be70 <next@@Base+0x18bc>
   1bfa8:	ldr	r9, [sp, #4]
   1bfac:	ldr	r0, [sp, #4]
   1bfb0:	mov	r1, r4
   1bfb4:	bl	1bd3c <next@@Base+0x1788>
   1bfb8:	mov	r0, r9
   1bfbc:	add	sp, sp, #12
   1bfc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfc4:	andeq	r1, r0, r8, asr #15
   1bfc8:	push	{r4, r5, r6, lr}
   1bfcc:	mov	r4, r0
   1bfd0:	ldr	r0, [pc, #192]	; 1c098 <next@@Base+0x1ae4>
   1bfd4:	add	r0, pc, r0
   1bfd8:	bl	12038 <getenv@plt>
   1bfdc:	subs	r3, r0, #0
   1bfe0:	beq	1bfec <next@@Base+0x1a38>
   1bfe4:	bl	12104 <atoi@plt>
   1bfe8:	bic	r3, r0, r0, asr #31
   1bfec:	ldr	r0, [pc, #168]	; 1c09c <next@@Base+0x1ae8>
   1bff0:	str	r3, [r4, #8]
   1bff4:	add	r0, pc, r0
   1bff8:	bl	12038 <getenv@plt>
   1bffc:	subs	r6, r0, #0
   1c000:	beq	1c070 <next@@Base+0x1abc>
   1c004:	bl	12080 <strlen@plt>
   1c008:	ldr	r3, [r4, #4]
   1c00c:	add	r3, r3, #2
   1c010:	cmp	r0, #0
   1c014:	bne	1c050 <next@@Base+0x1a9c>
   1c018:	ldr	r2, [r4, #8]
   1c01c:	cmp	r2, #0
   1c020:	beq	1c084 <next@@Base+0x1ad0>
   1c024:	ldr	r6, [pc, #116]	; 1c0a0 <next@@Base+0x1aec>
   1c028:	mov	r5, #1
   1c02c:	add	r6, pc, r6
   1c030:	str	r5, [r4, #12]
   1c034:	add	r0, r3, r5
   1c038:	bl	12044 <malloc@plt>
   1c03c:	mov	r2, r5
   1c040:	mov	r1, r6
   1c044:	str	r0, [r4]
   1c048:	pop	{r4, r5, r6, lr}
   1c04c:	b	11ff0 <memcpy@plt>
   1c050:	sub	r5, r0, #1
   1c054:	ldrb	r2, [r6, r5]
   1c058:	cmp	r2, #47	; 0x2f
   1c05c:	movne	r5, r0
   1c060:	bne	1c030 <next@@Base+0x1a7c>
   1c064:	cmp	r5, #0
   1c068:	bne	1c030 <next@@Base+0x1a7c>
   1c06c:	b	1c018 <next@@Base+0x1a64>
   1c070:	ldr	r2, [r4, #8]
   1c074:	ldr	r3, [r4, #4]
   1c078:	cmp	r2, #0
   1c07c:	add	r3, r3, #2
   1c080:	bne	1c024 <next@@Base+0x1a70>
   1c084:	str	r2, [r4, #12]
   1c088:	mov	r0, r3
   1c08c:	bl	12044 <malloc@plt>
   1c090:	str	r0, [r4]
   1c094:	pop	{r4, r5, r6, pc}
   1c098:	andeq	r2, r0, r4, lsl #8
   1c09c:	strdeq	r2, [r0], -r8
   1c0a0:	andeq	r2, r0, r8, lsr #7
   1c0a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0a8:	sub	sp, sp, #6080	; 0x17c0
   1c0ac:	sub	sp, sp, #36	; 0x24
   1c0b0:	mov	r3, r0
   1c0b4:	str	r1, [sp, #40]	; 0x28
   1c0b8:	mov	r1, #0
   1c0bc:	mov	r4, r1
   1c0c0:	str	r0, [sp, #56]	; 0x38
   1c0c4:	add	r7, r3, #6016	; 0x1780
   1c0c8:	add	r0, sp, #64	; 0x40
   1c0cc:	add	r6, sp, #2016	; 0x7e0
   1c0d0:	ldr	r2, [pc, #984]	; 1c4b0 <next@@Base+0x1efc>
   1c0d4:	mov	r5, #251	; 0xfb
   1c0d8:	str	r0, [sp, #60]	; 0x3c
   1c0dc:	str	r5, [sp, #52]	; 0x34
   1c0e0:	str	r6, [sp, #36]	; 0x24
   1c0e4:	mov	r9, r4
   1c0e8:	bl	120b0 <memset@plt>
   1c0ec:	mov	sl, r4
   1c0f0:	add	r3, r7, #8
   1c0f4:	mov	r0, r4
   1c0f8:	str	r3, [sp, #48]	; 0x30
   1c0fc:	sub	r3, r6, #1952	; 0x7a0
   1c100:	str	r3, [sp, #44]	; 0x2c
   1c104:	ldr	r3, [sp, #48]	; 0x30
   1c108:	ldr	r2, [r3, #16]
   1c10c:	ldr	r7, [r3]
   1c110:	str	r2, [sp, #16]
   1c114:	ldr	r2, [r3, #20]
   1c118:	cmp	r7, #0
   1c11c:	str	r2, [sp, #20]
   1c120:	beq	1c440 <next@@Base+0x1e8c>
   1c124:	ldrd	r2, [r3, #8]
   1c128:	str	r9, [sp, #12]
   1c12c:	strd	r2, [sp, #24]
   1c130:	b	1c210 <next@@Base+0x1c5c>
   1c134:	bls	1c4a4 <next@@Base+0x1ef0>
   1c138:	ldr	r3, [sp, #12]
   1c13c:	mov	r2, r4
   1c140:	umull	r0, r1, r7, r3
   1c144:	mov	r3, #0
   1c148:	mla	r1, r7, sl, r1
   1c14c:	bl	1d9c0 <__gcov_sort_n_vals@@Base+0x568>
   1c150:	mov	r6, r0
   1c154:	mov	r8, r1
   1c158:	ldr	r3, [sp, #12]
   1c15c:	sub	r4, r4, r7
   1c160:	subs	r3, r3, r6
   1c164:	sbc	sl, sl, r8
   1c168:	mov	fp, r7
   1c16c:	mov	r7, #0
   1c170:	str	r3, [sp, #12]
   1c174:	ldr	r0, [sp, #16]
   1c178:	ldr	r3, [sp, #20]
   1c17c:	str	r7, [sp, #16]
   1c180:	str	r7, [sp, #20]
   1c184:	adds	r6, r6, r0
   1c188:	ldrd	r0, [sp]
   1c18c:	adc	r8, r8, r3
   1c190:	bl	1bc80 <next@@Base+0x16cc>
   1c194:	ldr	r3, [sp, #44]	; 0x2c
   1c198:	add	r1, r0, r0, lsl #1
   1c19c:	lsl	r1, r1, #3
   1c1a0:	add	ip, r3, r1
   1c1a4:	ldr	r3, [sp, #36]	; 0x24
   1c1a8:	ldr	lr, [ip, #16]
   1c1ac:	add	r1, r3, r1
   1c1b0:	adds	r6, lr, r6
   1c1b4:	ldr	lr, [ip, #20]
   1c1b8:	ldrd	r2, [ip, #8]
   1c1bc:	adc	lr, lr, r8
   1c1c0:	ldrd	r8, [sp]
   1c1c4:	str	lr, [sp, #32]
   1c1c8:	orrs	lr, r2, r3
   1c1cc:	moveq	lr, #1
   1c1d0:	movne	lr, #0
   1c1d4:	cmp	r8, r2
   1c1d8:	sbcs	r3, r9, r3
   1c1dc:	orrlt	lr, lr, #1
   1c1e0:	cmp	lr, #0
   1c1e4:	str	r6, [ip, #16]
   1c1e8:	ldr	r6, [r1, #-1952]	; 0xfffff860
   1c1ec:	ldr	r3, [sp, #32]
   1c1f0:	strdne	r8, [ip, #8]
   1c1f4:	cmp	r4, #0
   1c1f8:	add	fp, r6, fp
   1c1fc:	subeq	r5, r5, #1
   1c200:	cmp	r7, #0
   1c204:	str	r3, [ip, #20]
   1c208:	str	fp, [r1, #-1952]	; 0xfffff860
   1c20c:	beq	1c43c <next@@Base+0x1e88>
   1c210:	cmp	r4, #0
   1c214:	beq	1c298 <next@@Base+0x1ce4>
   1c218:	add	r2, r5, r5, lsl #1
   1c21c:	ldr	r3, [sp, #40]	; 0x28
   1c220:	add	r2, r3, r2, lsl #3
   1c224:	ldrd	r0, [sp, #24]
   1c228:	ldr	r3, [r2, #8]
   1c22c:	ldr	r2, [r2, #12]
   1c230:	adds	r3, r0, r3
   1c234:	str	r3, [sp]
   1c238:	adc	r3, r1, r2
   1c23c:	cmp	r4, r7
   1c240:	str	r3, [sp, #4]
   1c244:	bcs	1c134 <next@@Base+0x1b80>
   1c248:	ldr	r6, [sp, #16]
   1c24c:	ldr	r8, [sp, #20]
   1c250:	mov	r2, r7
   1c254:	umull	r0, r1, r4, r6
   1c258:	mov	r3, #0
   1c25c:	mla	r1, r4, r8, r1
   1c260:	bl	1d9c0 <__gcov_sort_n_vals@@Base+0x568>
   1c264:	sub	r7, r7, r4
   1c268:	mov	fp, r4
   1c26c:	mov	r4, #0
   1c270:	subs	r2, r6, r0
   1c274:	str	r2, [sp, #16]
   1c278:	sbc	r2, r8, r1
   1c27c:	ldr	r6, [sp, #12]
   1c280:	mov	r8, sl
   1c284:	mov	r3, r1
   1c288:	str	r2, [sp, #20]
   1c28c:	str	r4, [sp, #12]
   1c290:	mov	sl, r4
   1c294:	b	1c184 <next@@Base+0x1bd0>
   1c298:	cmp	r5, #0
   1c29c:	blt	1c49c <next@@Base+0x1ee8>
   1c2a0:	ldr	r3, [sp, #40]	; 0x28
   1c2a4:	add	r2, r5, r5, lsl #1
   1c2a8:	ldr	r4, [r3, r2, lsl #3]
   1c2ac:	add	r2, r3, r2, lsl #3
   1c2b0:	cmp	r4, #0
   1c2b4:	bne	1c42c <next@@Base+0x1e78>
   1c2b8:	mov	r3, r2
   1c2bc:	ldr	r9, [sp, #12]
   1c2c0:	b	1c2d4 <next@@Base+0x1d20>
   1c2c4:	ldr	r4, [r3]
   1c2c8:	mov	r2, r3
   1c2cc:	cmp	r4, #0
   1c2d0:	bne	1c42c <next@@Base+0x1e78>
   1c2d4:	subs	r5, r5, #1
   1c2d8:	sub	r3, r3, #24
   1c2dc:	bcs	1c2c4 <next@@Base+0x1d10>
   1c2e0:	ldr	r2, [sp, #52]	; 0x34
   1c2e4:	ldr	ip, [sp, #36]	; 0x24
   1c2e8:	ldr	r4, [sp, #16]
   1c2ec:	lsl	r3, r2, #1
   1c2f0:	add	r1, r3, r2
   1c2f4:	sub	r2, ip, #1952	; 0x7a0
   1c2f8:	lsl	r1, r1, #3
   1c2fc:	add	r2, r2, r1
   1c300:	add	r1, ip, r1
   1c304:	ldr	ip, [r2, #16]
   1c308:	ldr	lr, [r1, #-1952]	; 0xfffff860
   1c30c:	adds	ip, ip, r4
   1c310:	add	r7, lr, r7
   1c314:	ldrd	r4, [r2, #8]
   1c318:	ldr	lr, [r2, #20]
   1c31c:	str	r7, [r1, #-1952]	; 0xfffff860
   1c320:	ldr	r1, [sp, #20]
   1c324:	str	ip, [r2, #16]
   1c328:	adc	lr, lr, r1
   1c32c:	orrs	r1, r4, r5
   1c330:	str	lr, [r2, #20]
   1c334:	beq	1c40c <next@@Base+0x1e58>
   1c338:	ldrd	r6, [sp, #24]
   1c33c:	cmp	r6, r4
   1c340:	sbcs	r2, r7, r5
   1c344:	blt	1c40c <next@@Base+0x1e58>
   1c348:	ldr	r2, [sp, #52]	; 0x34
   1c34c:	ldr	lr, [sp, #60]	; 0x3c
   1c350:	add	ip, r3, r2
   1c354:	ldr	r3, [sp, #56]	; 0x38
   1c358:	lsl	ip, ip, #3
   1c35c:	add	r1, lr, ip
   1c360:	add	ip, r3, ip
   1c364:	b	1c3c0 <next@@Base+0x1e0c>
   1c368:	ldr	r3, [r1, #-8]
   1c36c:	ldr	r6, [ip, #-8]
   1c370:	ldr	r7, [ip, #-4]
   1c374:	ldr	r2, [r1, #-4]
   1c378:	adds	r6, r3, r6
   1c37c:	ldrd	r4, [r1, #-16]
   1c380:	adc	r2, r2, r7
   1c384:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1c388:	ldr	r7, [ip, #-24]	; 0xffffffe8
   1c38c:	orrs	r8, r4, r5
   1c390:	add	r3, r3, r7
   1c394:	str	r2, [r1, #-4]
   1c398:	str	r3, [r1, #-24]	; 0xffffffe8
   1c39c:	str	r6, [r1, #-8]
   1c3a0:	ldrd	r2, [ip, #-16]
   1c3a4:	sub	ip, ip, #24
   1c3a8:	beq	1c3b8 <next@@Base+0x1e04>
   1c3ac:	cmp	r2, r4
   1c3b0:	sbcs	r4, r3, r5
   1c3b4:	bge	1c3bc <next@@Base+0x1e08>
   1c3b8:	strd	r2, [r1, #-16]
   1c3bc:	sub	r1, r1, #24
   1c3c0:	cmp	r1, lr
   1c3c4:	bne	1c368 <next@@Base+0x1db4>
   1c3c8:	ldr	r3, [sp, #36]	; 0x24
   1c3cc:	add	r0, r0, r0, lsl #1
   1c3d0:	sub	r3, r3, #1952	; 0x7a0
   1c3d4:	add	r3, r3, r0, lsl #3
   1c3d8:	ldr	r1, [sp, #60]	; 0x3c
   1c3dc:	ldr	r2, [r3, #16]
   1c3e0:	ldr	ip, [r3, #20]
   1c3e4:	adds	r9, r2, r9
   1c3e8:	adc	sl, ip, sl
   1c3ec:	ldr	r0, [sp, #56]	; 0x38
   1c3f0:	ldr	r2, [pc, #184]	; 1c4b0 <next@@Base+0x1efc>
   1c3f4:	str	r9, [r3, #16]
   1c3f8:	str	sl, [r3, #20]
   1c3fc:	bl	11ff0 <memcpy@plt>
   1c400:	add	sp, sp, #6080	; 0x17c0
   1c404:	add	sp, sp, #36	; 0x24
   1c408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c40c:	ldr	r2, [sp, #52]	; 0x34
   1c410:	ldrd	r4, [sp, #24]
   1c414:	add	r1, r3, r2
   1c418:	ldr	r2, [sp, #36]	; 0x24
   1c41c:	sub	r2, r2, #1952	; 0x7a0
   1c420:	add	r2, r2, r1, lsl #3
   1c424:	strd	r4, [r2, #8]
   1c428:	b	1c348 <next@@Base+0x1d94>
   1c42c:	ldr	r3, [r2, #16]
   1c430:	ldr	sl, [r2, #20]
   1c434:	str	r3, [sp, #12]
   1c438:	b	1c224 <next@@Base+0x1c70>
   1c43c:	ldr	r9, [sp, #12]
   1c440:	ldr	r3, [sp, #52]	; 0x34
   1c444:	sub	r3, r3, #1
   1c448:	str	r3, [sp, #52]	; 0x34
   1c44c:	cmn	r3, #1
   1c450:	ldr	r3, [sp, #48]	; 0x30
   1c454:	sub	r3, r3, #24
   1c458:	str	r3, [sp, #48]	; 0x30
   1c45c:	bne	1c104 <next@@Base+0x1b50>
   1c460:	cmp	r4, #0
   1c464:	subne	r5, r5, #1
   1c468:	cmp	r5, #0
   1c46c:	blt	1c3c8 <next@@Base+0x1e14>
   1c470:	add	r5, r5, r5, lsl #1
   1c474:	ldr	ip, [sp, #40]	; 0x28
   1c478:	add	r3, ip, r5, lsl #3
   1c47c:	ldr	r2, [r3, #16]
   1c480:	ldr	r1, [r3, #20]
   1c484:	adds	r9, r9, r2
   1c488:	adc	sl, sl, r1
   1c48c:	cmp	ip, r3
   1c490:	sub	r3, r3, #24
   1c494:	bne	1c47c <next@@Base+0x1ec8>
   1c498:	b	1c3c8 <next@@Base+0x1e14>
   1c49c:	ldr	r9, [sp, #12]
   1c4a0:	b	1c2e0 <next@@Base+0x1d2c>
   1c4a4:	ldr	r6, [sp, #12]
   1c4a8:	mov	r8, sl
   1c4ac:	b	1c158 <next@@Base+0x1ba4>
   1c4b0:	andeq	r1, r0, r0, lsr #15
   1c4b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c4b8:	ldrb	r4, [r0]
   1c4bc:	cmp	r4, #47	; 0x2f
   1c4c0:	addeq	r5, r0, #1
   1c4c4:	ldrbeq	r4, [r0, #1]
   1c4c8:	movne	r5, r0
   1c4cc:	cmp	r4, #0
   1c4d0:	beq	1c524 <next@@Base+0x1f70>
   1c4d4:	mov	r6, r0
   1c4d8:	mov	r7, #0
   1c4dc:	mov	r8, #47	; 0x2f
   1c4e0:	ldr	sl, [pc, #136]	; 1c570 <next@@Base+0x1fbc>
   1c4e4:	b	1c4f4 <next@@Base+0x1f40>
   1c4e8:	ldrb	r4, [r5, #1]!
   1c4ec:	cmp	r4, #0
   1c4f0:	beq	1c524 <next@@Base+0x1f70>
   1c4f4:	cmp	r4, #47	; 0x2f
   1c4f8:	bne	1c4e8 <next@@Base+0x1f34>
   1c4fc:	strb	r7, [r5]
   1c500:	mov	r1, #0
   1c504:	mov	r0, r6
   1c508:	bl	120c8 <access@plt>
   1c50c:	cmn	r0, #1
   1c510:	beq	1c530 <next@@Base+0x1f7c>
   1c514:	strb	r8, [r5]
   1c518:	ldrb	r4, [r5, #1]!
   1c51c:	cmp	r4, #0
   1c520:	bne	1c4f4 <next@@Base+0x1f40>
   1c524:	mov	r9, #0
   1c528:	mov	r0, r9
   1c52c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c530:	mov	r1, sl
   1c534:	mov	r0, r6
   1c538:	bl	120a4 <mkdir@plt>
   1c53c:	cmn	r0, #1
   1c540:	mov	r9, r0
   1c544:	bne	1c514 <next@@Base+0x1f60>
   1c548:	bl	12098 <__errno_location@plt>
   1c54c:	ldr	r3, [r0]
   1c550:	cmp	r3, #17
   1c554:	beq	1c514 <next@@Base+0x1f60>
   1c558:	ldr	r0, [pc, #20]	; 1c574 <next@@Base+0x1fc0>
   1c55c:	mov	r1, r6
   1c560:	add	r0, pc, r0
   1c564:	bl	1bbe8 <next@@Base+0x1634>
   1c568:	strb	r4, [r5]
   1c56c:	b	1c528 <next@@Base+0x1f74>
   1c570:	andeq	r0, r0, sp, ror #3
   1c574:	muleq	r0, r8, lr
   1c578:	ldr	r3, [pc, #76]	; 1c5cc <next@@Base+0x2018>
   1c57c:	cmp	r1, r3
   1c580:	beq	1c5c4 <next@@Base+0x2010>
   1c584:	cmp	r2, #0
   1c588:	ldr	ip, [pc, #64]	; 1c5d0 <next@@Base+0x201c>
   1c58c:	push	{lr}		; (str lr, [sp, #-4]!)
   1c590:	rev	r3, r1
   1c594:	sub	sp, sp, #12
   1c598:	ldreq	r2, [r0]
   1c59c:	ldr	r0, [pc, #48]	; 1c5d4 <next@@Base+0x2020>
   1c5a0:	stm	sp, {r3, ip}
   1c5a4:	mov	r1, r2
   1c5a8:	mov	r3, sp
   1c5ac:	add	r2, sp, #4
   1c5b0:	add	r0, pc, r0
   1c5b4:	bl	1bbe8 <next@@Base+0x1634>
   1c5b8:	mov	r0, #0
   1c5bc:	add	sp, sp, #12
   1c5c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5c4:	mov	r0, #1
   1c5c8:	bx	lr
   1c5cc:	teqmi	r8, sl, lsr #6
   1c5d0:	bcs	cea6dc <__bss_end__@@Base+0xcb7fe4>
   1c5d4:	andeq	r1, r0, r0, ror lr
   1c5d8:	ldr	r2, [r2]
   1c5dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c5e0:	cmp	r2, #0
   1c5e4:	mov	r4, r3
   1c5e8:	ldr	r2, [r3, #12]
   1c5ec:	ldr	r3, [sp, #32]
   1c5f0:	beq	1c6dc <next@@Base+0x2128>
   1c5f4:	cmp	r1, #0
   1c5f8:	addeq	r1, r2, #1
   1c5fc:	streq	r1, [r4, #12]
   1c600:	cmp	r2, #0
   1c604:	ldr	r0, [r4, #16]
   1c608:	ldr	lr, [r4, #20]
   1c60c:	ldrd	r6, [r4, #24]
   1c610:	ldr	r2, [r4, #32]
   1c614:	ldr	r1, [r4, #36]	; 0x24
   1c618:	bne	1c688 <next@@Base+0x20d4>
   1c61c:	ldr	ip, [r3, #8]
   1c620:	str	ip, [r4, #8]
   1c624:	ldr	ip, [r3, #16]
   1c628:	ldr	r5, [r3, #20]
   1c62c:	adds	r0, ip, r0
   1c630:	adc	lr, r5, lr
   1c634:	str	r0, [r4, #16]
   1c638:	str	lr, [r4, #20]
   1c63c:	ldrd	r8, [r3, #24]
   1c640:	cmp	r6, r8
   1c644:	sbcs	r0, r7, r9
   1c648:	bge	1c6fc <next@@Base+0x2148>
   1c64c:	strd	r8, [r4, #24]
   1c650:	ldr	r0, [r3, #24]
   1c654:	ldr	ip, [r3, #28]
   1c658:	adds	r2, r0, r2
   1c65c:	adc	r1, ip, r1
   1c660:	str	r1, [r4, #36]	; 0x24
   1c664:	str	r2, [r4, #32]
   1c668:	add	r1, r3, #40	; 0x28
   1c66c:	ldr	r2, [pc, #176]	; 1c724 <next@@Base+0x2170>
   1c670:	add	r0, r4, #40	; 0x28
   1c674:	bl	11ff0 <memcpy@plt>
   1c678:	ldr	r3, [sp, #36]	; 0x24
   1c67c:	mov	r0, #0
   1c680:	str	r3, [r4]
   1c684:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c688:	ldr	ip, [r3, #16]
   1c68c:	ldr	r5, [r3, #20]
   1c690:	adds	r0, ip, r0
   1c694:	adc	lr, r5, lr
   1c698:	str	r0, [r4, #16]
   1c69c:	str	lr, [r4, #20]
   1c6a0:	ldrd	r8, [r3, #24]
   1c6a4:	cmp	r6, r8
   1c6a8:	sbcs	r0, r7, r9
   1c6ac:	bge	1c710 <next@@Base+0x215c>
   1c6b0:	strd	r8, [r4, #24]
   1c6b4:	ldr	r0, [r3, #24]
   1c6b8:	ldr	ip, [r3, #28]
   1c6bc:	adds	r2, r0, r2
   1c6c0:	adc	r1, ip, r1
   1c6c4:	str	r1, [r4, #36]	; 0x24
   1c6c8:	str	r2, [r4, #32]
   1c6cc:	add	r1, r3, #40	; 0x28
   1c6d0:	add	r0, r4, #40	; 0x28
   1c6d4:	bl	1c0a4 <next@@Base+0x1af0>
   1c6d8:	b	1c678 <next@@Base+0x20c4>
   1c6dc:	cmp	r2, #0
   1c6e0:	beq	1c678 <next@@Base+0x20c4>
   1c6e4:	mov	r1, r0
   1c6e8:	ldr	r0, [pc, #56]	; 1c728 <next@@Base+0x2174>
   1c6ec:	add	r0, pc, r0
   1c6f0:	bl	1bbe8 <next@@Base+0x1634>
   1c6f4:	mvn	r0, #0
   1c6f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c6fc:	adds	r2, r2, r8
   1c700:	adc	r1, r1, r9
   1c704:	str	r1, [r4, #36]	; 0x24
   1c708:	str	r2, [r4, #32]
   1c70c:	b	1c668 <next@@Base+0x20b4>
   1c710:	adds	r2, r2, r8
   1c714:	adc	r1, r1, r9
   1c718:	str	r1, [r4, #36]	; 0x24
   1c71c:	str	r2, [r4, #32]
   1c720:	b	1c6cc <next@@Base+0x2118>
   1c724:	andeq	r1, r0, r0, lsr #15
   1c728:	andeq	r1, r0, ip, ror #26
   1c72c:	ldr	r0, [pc, #52]	; 1c768 <next@@Base+0x21b4>
   1c730:	ldr	r3, [pc, #52]	; 1c76c <next@@Base+0x21b8>
   1c734:	add	r0, pc, r0
   1c738:	push	{lr}		; (str lr, [sp, #-4]!)
   1c73c:	mov	ip, #0
   1c740:	ldr	r3, [r0, r3]
   1c744:	mvn	lr, #0
   1c748:	mov	r2, ip
   1c74c:	str	lr, [r3, #24]
   1c750:	mov	r1, ip
   1c754:	ldr	r0, [r3]
   1c758:	pop	{lr}		; (ldr lr, [sp], #4)
   1c75c:	str	ip, [r3, #4]
   1c760:	str	ip, [r3, #8]
   1c764:	b	1211c <fseek@plt>
   1c768:	andeq	r2, r1, r4, asr #17
   1c76c:	andeq	r0, r0, r4, lsr #1
   1c770:	push	{r4, r5, r6, r7, lr}
   1c774:	mov	r2, #0
   1c778:	sub	sp, sp, #36	; 0x24
   1c77c:	mov	r3, #0
   1c780:	mov	r4, #0
   1c784:	mov	r6, r0
   1c788:	strd	r2, [sp, #8]
   1c78c:	strd	r2, [sp, #16]
   1c790:	strh	r4, [sp, #2]
   1c794:	bl	12068 <getpid@plt>
   1c798:	ldr	r3, [pc, #196]	; 1c864 <next@@Base+0x22b0>
   1c79c:	ldr	ip, [pc, #196]	; 1c868 <next@@Base+0x22b4>
   1c7a0:	add	r3, pc, r3
   1c7a4:	mvn	lr, #0
   1c7a8:	mov	r7, #1
   1c7ac:	ldr	r2, [pc, #184]	; 1c86c <next@@Base+0x22b8>
   1c7b0:	mov	r1, #66	; 0x42
   1c7b4:	str	r0, [sp, #24]
   1c7b8:	ldr	r5, [r3, ip]
   1c7bc:	mov	r0, r6
   1c7c0:	strh	r7, [sp]
   1c7c4:	str	r4, [r5, #4]
   1c7c8:	str	r4, [r5, #12]
   1c7cc:	str	r4, [r5, #8]
   1c7d0:	str	r4, [r5, #20]
   1c7d4:	str	lr, [r5, #16]
   1c7d8:	bl	1202c <open64@plt>
   1c7dc:	subs	r6, r0, #0
   1c7e0:	movlt	r0, r4
   1c7e4:	blt	1c848 <next@@Base+0x2294>
   1c7e8:	mov	r4, sp
   1c7ec:	mov	r2, r4
   1c7f0:	mov	r1, #14
   1c7f4:	mov	r0, r6
   1c7f8:	bl	120e0 <fcntl64@plt>
   1c7fc:	cmp	r0, #0
   1c800:	beq	1c814 <next@@Base+0x2260>
   1c804:	bl	12098 <__errno_location@plt>
   1c808:	ldr	r3, [r0]
   1c80c:	cmp	r3, #4
   1c810:	beq	1c7ec <next@@Base+0x2238>
   1c814:	ldr	r1, [pc, #84]	; 1c870 <next@@Base+0x22bc>
   1c818:	mov	r0, r6
   1c81c:	add	r1, pc, r1
   1c820:	bl	11f9c <fdopen@plt>
   1c824:	cmp	r0, #0
   1c828:	mov	r4, r0
   1c82c:	str	r0, [r5]
   1c830:	beq	1c850 <next@@Base+0x229c>
   1c834:	mov	r4, #1
   1c838:	mov	r1, #0
   1c83c:	str	r4, [r5, #24]
   1c840:	bl	11fb4 <setbuf@plt>
   1c844:	mov	r0, r4
   1c848:	add	sp, sp, #36	; 0x24
   1c84c:	pop	{r4, r5, r6, r7, pc}
   1c850:	mov	r0, r6
   1c854:	bl	12134 <close@plt>
   1c858:	mov	r0, r4
   1c85c:	add	sp, sp, #36	; 0x24
   1c860:	pop	{r4, r5, r6, r7, pc}
   1c864:	andeq	r2, r1, r8, asr r8
   1c868:	andeq	r0, r0, r4, lsr #1
   1c86c:			; <UNDEFINED> instruction: 0x000001b6
   1c870:	andeq	r1, r0, r8, ror #24
   1c874:	push	{r4, r5, r6, lr}
   1c878:	mov	r4, r1
   1c87c:	ldr	r5, [pc, #248]	; 1c97c <next@@Base+0x23c8>
   1c880:	ldr	ip, [r4, #8]
   1c884:	ldr	lr, [r4, #12]
   1c888:	ldr	r6, [r4]
   1c88c:	cmp	ip, #0
   1c890:	mov	r1, r0
   1c894:	add	r5, pc, r5
   1c898:	add	r0, r6, lr
   1c89c:	ble	1c8d8 <next@@Base+0x2324>
   1c8a0:	ldrb	r3, [r1]
   1c8a4:	cmp	r3, #47	; 0x2f
   1c8a8:	addeq	r2, r1, #1
   1c8ac:	ldrbeq	r3, [r1, #1]
   1c8b0:	movne	r2, r1
   1c8b4:	cmp	r3, #0
   1c8b8:	beq	1c8d8 <next@@Base+0x2324>
   1c8bc:	cmp	r3, #47	; 0x2f
   1c8c0:	moveq	r1, r2
   1c8c4:	ldrb	r3, [r2, #1]!
   1c8c8:	subeq	ip, ip, #1
   1c8cc:	cmp	r3, #0
   1c8d0:	cmpne	ip, #0
   1c8d4:	bne	1c8bc <next@@Base+0x2308>
   1c8d8:	cmp	lr, #0
   1c8dc:	bne	1c8fc <next@@Base+0x2348>
   1c8e0:	bl	12014 <strcpy@plt>
   1c8e4:	ldr	r0, [r4]
   1c8e8:	bl	1c770 <next@@Base+0x21bc>
   1c8ec:	cmp	r0, #0
   1c8f0:	beq	1c914 <next@@Base+0x2360>
   1c8f4:	mov	r0, #0
   1c8f8:	pop	{r4, r5, r6, pc}
   1c8fc:	ldrb	r3, [r1]
   1c900:	cmp	r3, #47	; 0x2f
   1c904:	movne	r3, #47	; 0x2f
   1c908:	addne	r0, r0, #1
   1c90c:	strbne	r3, [r6, lr]
   1c910:	b	1c8e0 <next@@Base+0x232c>
   1c914:	ldr	r0, [r4]
   1c918:	bl	1c4b4 <next@@Base+0x1f00>
   1c91c:	cmp	r0, #0
   1c920:	bne	1c958 <next@@Base+0x23a4>
   1c924:	ldr	r0, [r4]
   1c928:	bl	1c770 <next@@Base+0x21bc>
   1c92c:	cmp	r0, #0
   1c930:	bne	1c8f4 <next@@Base+0x2340>
   1c934:	ldr	r3, [pc, #68]	; 1c980 <next@@Base+0x23cc>
   1c938:	ldr	r1, [pc, #68]	; 1c984 <next@@Base+0x23d0>
   1c93c:	ldr	r2, [r4]
   1c940:	ldr	r3, [r5, r3]
   1c944:	add	r1, pc, r1
   1c948:	ldr	r0, [r3]
   1c94c:	bl	1208c <fprintf@plt>
   1c950:	mvn	r0, #0
   1c954:	pop	{r4, r5, r6, pc}
   1c958:	ldr	r3, [pc, #32]	; 1c980 <next@@Base+0x23cc>
   1c95c:	ldr	r1, [pc, #36]	; 1c988 <next@@Base+0x23d4>
   1c960:	ldr	r2, [r4]
   1c964:	ldr	r3, [r5, r3]
   1c968:	add	r1, pc, r1
   1c96c:	ldr	r0, [r3]
   1c970:	bl	1208c <fprintf@plt>
   1c974:	mvn	r0, #0
   1c978:	pop	{r4, r5, r6, pc}
   1c97c:	andeq	r2, r1, r4, ror #14
   1c980:	muleq	r0, r8, r0
   1c984:	andeq	r1, r0, r8, asr fp
   1c988:	andeq	r1, r0, r0, lsr #22
   1c98c:	ldr	r3, [pc, #96]	; 1c9f4 <next@@Base+0x2440>
   1c990:	ldr	r2, [pc, #96]	; 1c9f8 <next@@Base+0x2444>
   1c994:	add	r3, pc, r3
   1c998:	push	{r4, lr}
   1c99c:	ldr	r4, [r3, r2]
   1c9a0:	ldr	r0, [r4]
   1c9a4:	cmp	r0, #0
   1c9a8:	beq	1c9c8 <next@@Base+0x2414>
   1c9ac:	ldr	r3, [r4, #8]
   1c9b0:	cmp	r3, #0
   1c9b4:	bne	1c9d8 <next@@Base+0x2424>
   1c9b8:	bl	120d4 <fclose@plt>
   1c9bc:	mov	r3, #0
   1c9c0:	str	r3, [r4]
   1c9c4:	str	r3, [r4, #12]
   1c9c8:	mov	r3, #0
   1c9cc:	str	r3, [r4, #24]
   1c9d0:	ldr	r0, [r4, #20]
   1c9d4:	pop	{r4, pc}
   1c9d8:	ldr	r2, [r4, #24]
   1c9dc:	cmp	r2, #0
   1c9e0:	bge	1c9b8 <next@@Base+0x2404>
   1c9e4:	mov	r0, r3
   1c9e8:	bl	1b9e0 <next@@Base+0x142c>
   1c9ec:	ldr	r0, [r4]
   1c9f0:	b	1c9b8 <next@@Base+0x2404>
   1c9f4:	andeq	r2, r1, r4, ror #12
   1c9f8:	andeq	r0, r0, r4, lsr #1
   1c9fc:	push	{r4, lr}
   1ca00:	mov	r4, r0
   1ca04:	mov	r0, #1
   1ca08:	bl	1ba3c <next@@Base+0x1488>
   1ca0c:	str	r4, [r0]
   1ca10:	pop	{r4, pc}
   1ca14:	push	{r4, r5, r6, lr}
   1ca18:	mov	r5, r0
   1ca1c:	mov	r0, #2
   1ca20:	mov	r4, r1
   1ca24:	bl	1ba3c <next@@Base+0x1488>
   1ca28:	str	r5, [r0]
   1ca2c:	str	r4, [r0, #4]
   1ca30:	pop	{r4, r5, r6, pc}
   1ca34:	push	{r4, r5, r6, lr}
   1ca38:	mov	r5, r0
   1ca3c:	mov	r0, #2
   1ca40:	mov	r4, r1
   1ca44:	bl	1ba3c <next@@Base+0x1488>
   1ca48:	str	r5, [r0]
   1ca4c:	str	r4, [r0, #4]
   1ca50:	pop	{r4, r5, r6, pc}
   1ca54:	mov	r2, #0
   1ca58:	push	{r4, r5, r6, r7, r8, lr}
   1ca5c:	mov	r3, r2
   1ca60:	sub	sp, sp, #32
   1ca64:	mov	r5, r1
   1ca68:	mov	r7, r2
   1ca6c:	mov	r4, r1
   1ca70:	mov	r8, #1
   1ca74:	str	r2, [sp]
   1ca78:	str	r2, [sp, #4]
   1ca7c:	str	r2, [sp, #8]
   1ca80:	str	r2, [sp, #12]
   1ca84:	str	r2, [sp, #16]
   1ca88:	str	r2, [sp, #20]
   1ca8c:	str	r2, [sp, #24]
   1ca90:	str	r2, [sp, #28]
   1ca94:	lsr	r2, r3, #5
   1ca98:	ldr	lr, [r1, #40]	; 0x28
   1ca9c:	add	ip, sp, #32
   1caa0:	cmp	lr, #0
   1caa4:	add	r2, ip, r2, lsl #2
   1caa8:	and	r6, r3, #31
   1caac:	ldrne	ip, [r2, #-32]	; 0xffffffe0
   1cab0:	add	r3, r3, #1
   1cab4:	orrne	ip, ip, r8, lsl r6
   1cab8:	addne	r7, r7, #1
   1cabc:	strne	ip, [r2, #-32]	; 0xffffffe0
   1cac0:	cmp	r3, #252	; 0xfc
   1cac4:	add	r1, r1, #24
   1cac8:	bne	1ca94 <next@@Base+0x24e0>
   1cacc:	add	r7, r7, r7, lsl #2
   1cad0:	add	r1, r7, #17
   1cad4:	bl	1ca34 <next@@Base+0x2480>
   1cad8:	ldr	r0, [r5]
   1cadc:	bl	1c9fc <next@@Base+0x2448>
   1cae0:	ldr	r0, [r5, #8]
   1cae4:	bl	1c9fc <next@@Base+0x2448>
   1cae8:	ldr	r0, [r5, #12]
   1caec:	bl	1c9fc <next@@Base+0x2448>
   1caf0:	ldrd	r0, [r5, #16]
   1caf4:	bl	1ca14 <next@@Base+0x2460>
   1caf8:	ldrd	r0, [r5, #24]
   1cafc:	bl	1ca14 <next@@Base+0x2460>
   1cb00:	ldrd	r0, [r5, #32]
   1cb04:	bl	1ca14 <next@@Base+0x2460>
   1cb08:	sub	r6, sp, #4
   1cb0c:	add	r7, sp, #28
   1cb10:	ldr	r0, [r6, #4]!
   1cb14:	bl	1c9fc <next@@Base+0x2448>
   1cb18:	cmp	r7, r6
   1cb1c:	bne	1cb10 <next@@Base+0x255c>
   1cb20:	add	r5, r5, #6016	; 0x1780
   1cb24:	add	r5, r5, #32
   1cb28:	ldr	r3, [r4, #40]	; 0x28
   1cb2c:	subs	r0, r3, #0
   1cb30:	beq	1cb48 <next@@Base+0x2594>
   1cb34:	bl	1c9fc <next@@Base+0x2448>
   1cb38:	ldrd	r0, [r4, #48]	; 0x30
   1cb3c:	bl	1ca14 <next@@Base+0x2460>
   1cb40:	ldrd	r0, [r4, #56]	; 0x38
   1cb44:	bl	1ca14 <next@@Base+0x2460>
   1cb48:	add	r4, r4, #24
   1cb4c:	cmp	r4, r5
   1cb50:	bne	1cb28 <next@@Base+0x2574>
   1cb54:	add	sp, sp, #32
   1cb58:	pop	{r4, r5, r6, r7, r8, pc}
   1cb5c:	push	{r4, lr}
   1cb60:	mov	r0, #1
   1cb64:	bl	1ba9c <next@@Base+0x14e8>
   1cb68:	subs	r3, r0, #0
   1cb6c:	popeq	{r4, pc}
   1cb70:	ldr	r0, [r3]
   1cb74:	pop	{r4, lr}
   1cb78:	b	1b960 <next@@Base+0x13ac>
   1cb7c:	push	{r4, lr}
   1cb80:	mov	r0, #2
   1cb84:	bl	1ba9c <next@@Base+0x14e8>
   1cb88:	subs	r2, r0, #0
   1cb8c:	beq	1cbb0 <next@@Base+0x25fc>
   1cb90:	ldr	r0, [r2]
   1cb94:	bl	1b960 <next@@Base+0x13ac>
   1cb98:	mov	r3, r0
   1cb9c:	ldr	r0, [r2, #4]
   1cba0:	bl	1b960 <next@@Base+0x13ac>
   1cba4:	mov	r1, r0
   1cba8:	mov	r0, r3
   1cbac:	pop	{r4, pc}
   1cbb0:	mov	r3, r2
   1cbb4:	mov	r1, r2
   1cbb8:	mov	r0, r3
   1cbbc:	pop	{r4, pc}
   1cbc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cbc4:	sub	sp, sp, #28
   1cbc8:	mov	r8, r1
   1cbcc:	str	r3, [sp, #12]
   1cbd0:	mov	r4, #0
   1cbd4:	add	r3, r1, #52	; 0x34
   1cbd8:	add	r1, r1, #16
   1cbdc:	str	r0, [sp, #20]
   1cbe0:	str	r2, [sp, #16]
   1cbe4:	ldr	r2, [r3, #-4]!
   1cbe8:	cmp	r2, #0
   1cbec:	addne	r4, r4, #1
   1cbf0:	cmp	r1, r3
   1cbf4:	bne	1cbe4 <next@@Base+0x2630>
   1cbf8:	add	r4, r4, #4
   1cbfc:	lsl	r4, r4, #3
   1cc00:	mov	r0, r4
   1cc04:	bl	12044 <malloc@plt>
   1cc08:	subs	r6, r0, #0
   1cc0c:	beq	1cce0 <next@@Base+0x272c>
   1cc10:	ldr	r3, [sp, #12]
   1cc14:	mov	r4, #0
   1cc18:	str	r3, [r6, #4]
   1cc1c:	str	r4, [r6]
   1cc20:	bl	1cb5c <next@@Base+0x25a8>
   1cc24:	mov	r7, r4
   1cc28:	add	r5, r8, #12
   1cc2c:	str	r0, [r6, #12]
   1cc30:	bl	1cb5c <next@@Base+0x25a8>
   1cc34:	str	r0, [r6, #16]
   1cc38:	bl	1cb5c <next@@Base+0x25a8>
   1cc3c:	str	r0, [r6, #20]
   1cc40:	b	1cc50 <next@@Base+0x269c>
   1cc44:	add	r4, r4, #1
   1cc48:	cmp	r4, #9
   1cc4c:	beq	1cccc <next@@Base+0x2718>
   1cc50:	ldr	r3, [r5, #4]!
   1cc54:	cmp	r3, #0
   1cc58:	beq	1cc44 <next@@Base+0x2690>
   1cc5c:	bl	1cb5c <next@@Base+0x25a8>
   1cc60:	lsl	r3, r4, #17
   1cc64:	add	r3, r3, #27262976	; 0x1a00000
   1cc68:	add	r3, r3, #65536	; 0x10000
   1cc6c:	cmp	r0, r3
   1cc70:	bne	1cd34 <next@@Base+0x2780>
   1cc74:	bl	1cb5c <next@@Base+0x25a8>
   1cc78:	lsr	sl, r0, #1
   1cc7c:	lsl	fp, sl, #3
   1cc80:	mov	r0, fp
   1cc84:	bl	12044 <malloc@plt>
   1cc88:	subs	r9, r0, #0
   1cc8c:	beq	1cd44 <next@@Base+0x2790>
   1cc90:	add	r1, r6, r7, lsl #3
   1cc94:	cmp	sl, #0
   1cc98:	str	sl, [r1, #24]
   1cc9c:	str	r9, [r1, #28]
   1cca0:	sub	fp, sl, #1
   1cca4:	beq	1ccbc <next@@Base+0x2708>
   1cca8:	bl	1cb7c <next@@Base+0x25c8>
   1ccac:	sub	fp, fp, #1
   1ccb0:	cmn	fp, #1
   1ccb4:	strd	r0, [r9], #8
   1ccb8:	bne	1cca8 <next@@Base+0x26f4>
   1ccbc:	add	r4, r4, #1
   1ccc0:	cmp	r4, #9
   1ccc4:	add	r7, r7, #1
   1ccc8:	bne	1cc50 <next@@Base+0x269c>
   1cccc:	ldr	r3, [sp, #16]
   1ccd0:	mov	r0, r6
   1ccd4:	str	r6, [r3]
   1ccd8:	add	sp, sp, #28
   1ccdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cce0:	mvn	r5, #0
   1cce4:	cmp	r4, #0
   1cce8:	bne	1cd28 <next@@Base+0x2774>
   1ccec:	ldr	r3, [pc, #92]	; 1cd50 <next@@Base+0x279c>
   1ccf0:	mov	r4, r5
   1ccf4:	add	r3, pc, r3
   1ccf8:	ldr	r0, [pc, #84]	; 1cd54 <next@@Base+0x27a0>
   1ccfc:	ldr	r2, [sp, #12]
   1cd00:	ldr	r1, [sp, #20]
   1cd04:	str	r4, [sp]
   1cd08:	add	r0, pc, r0
   1cd0c:	bl	1bbe8 <next@@Base+0x1634>
   1cd10:	mov	r2, r5
   1cd14:	mov	r1, r6
   1cd18:	mov	r0, r8
   1cd1c:	add	sp, sp, #28
   1cd20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd24:	b	1bc1c <next@@Base+0x1668>
   1cd28:	ldr	r3, [pc, #40]	; 1cd58 <next@@Base+0x27a4>
   1cd2c:	add	r3, pc, r3
   1cd30:	b	1ccf8 <next@@Base+0x2744>
   1cd34:	ldr	r3, [pc, #32]	; 1cd5c <next@@Base+0x27a8>
   1cd38:	mov	r5, r4
   1cd3c:	add	r3, pc, r3
   1cd40:	b	1ccf8 <next@@Base+0x2744>
   1cd44:	mov	r5, r4
   1cd48:	mov	r4, fp
   1cd4c:	b	1cce4 <next@@Base+0x2730>
   1cd50:	andeq	r1, r0, r4, asr #15
   1cd54:	ldrdeq	r1, [r0], -r4
   1cd58:	andeq	r1, r0, r0, lsr #15
   1cd5c:	andeq	r1, r0, ip, ror r7
   1cd60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd64:	sub	sp, sp, #36	; 0x24
   1cd68:	mov	r9, r0
   1cd6c:	bl	1cb5c <next@@Base+0x25a8>
   1cd70:	mov	r7, #0
   1cd74:	sub	r4, sp, #4
   1cd78:	add	r5, sp, #28
   1cd7c:	str	r0, [r9]
   1cd80:	bl	1cb5c <next@@Base+0x25a8>
   1cd84:	str	r0, [r9, #8]
   1cd88:	bl	1cb5c <next@@Base+0x25a8>
   1cd8c:	str	r0, [r9, #12]
   1cd90:	bl	1cb7c <next@@Base+0x25c8>
   1cd94:	strd	r0, [r9, #16]
   1cd98:	bl	1cb7c <next@@Base+0x25c8>
   1cd9c:	strd	r0, [r9, #24]
   1cda0:	bl	1cb7c <next@@Base+0x25c8>
   1cda4:	ldr	r2, [pc, #264]	; 1ceb4 <next@@Base+0x2900>
   1cda8:	strd	r0, [r9, #32]
   1cdac:	add	r0, r9, #40	; 0x28
   1cdb0:	mov	r1, r7
   1cdb4:	bl	120b0 <memset@plt>
   1cdb8:	bl	1cb5c <next@@Base+0x25a8>
   1cdbc:	str	r0, [r4, #4]!
   1cdc0:	bl	1daa4 <__gcov_sort_n_vals@@Base+0x64c>
   1cdc4:	cmp	r4, r5
   1cdc8:	add	r7, r7, r0
   1cdcc:	bne	1cdb8 <next@@Base+0x2804>
   1cdd0:	cmp	r7, #0
   1cdd4:	sub	r7, r7, #1
   1cdd8:	beq	1cea0 <next@@Base+0x28ec>
   1cddc:	ldr	r8, [pc, #212]	; 1ceb8 <next@@Base+0x2904>
   1cde0:	ldr	sl, [pc, #212]	; 1cebc <next@@Base+0x2908>
   1cde4:	mov	r4, #0
   1cde8:	add	r8, pc, r8
   1cdec:	add	sl, pc, sl
   1cdf0:	mov	r5, r4
   1cdf4:	mov	r6, r4
   1cdf8:	cmp	r4, #0
   1cdfc:	addeq	r3, sp, #32
   1ce00:	addeq	r6, r3, r5, lsl #2
   1ce04:	subeq	r6, r6, #36	; 0x24
   1ce08:	beq	1ce24 <next@@Base+0x2870>
   1ce0c:	b	1ce4c <next@@Base+0x2898>
   1ce10:	ldr	r4, [r6, #4]!
   1ce14:	add	r3, r5, #1
   1ce18:	cmp	r4, #0
   1ce1c:	bne	1ce44 <next@@Base+0x2890>
   1ce20:	mov	r5, r3
   1ce24:	cmp	r5, #7
   1ce28:	bls	1ce10 <next@@Base+0x285c>
   1ce2c:	mov	r0, r8
   1ce30:	bl	1bbe8 <next@@Base+0x1634>
   1ce34:	ldr	r4, [r6, #4]!
   1ce38:	add	r3, r5, #1
   1ce3c:	cmp	r4, #0
   1ce40:	beq	1ce20 <next@@Base+0x286c>
   1ce44:	lsl	r6, r5, #5
   1ce48:	mov	r5, r3
   1ce4c:	tst	r4, #1
   1ce50:	bne	1ce64 <next@@Base+0x28b0>
   1ce54:	lsr	r4, r4, #1
   1ce58:	tst	r4, #1
   1ce5c:	add	r6, r6, #1
   1ce60:	beq	1ce54 <next@@Base+0x28a0>
   1ce64:	cmp	r6, #251	; 0xfb
   1ce68:	bhi	1cea8 <next@@Base+0x28f4>
   1ce6c:	bl	1cb5c <next@@Base+0x25a8>
   1ce70:	add	fp, r6, r6, lsl #1
   1ce74:	sub	r7, r7, #1
   1ce78:	add	fp, r9, fp, lsl #3
   1ce7c:	lsr	r4, r4, #1
   1ce80:	add	r6, r6, #1
   1ce84:	str	r0, [fp, #40]	; 0x28
   1ce88:	bl	1cb7c <next@@Base+0x25c8>
   1ce8c:	strd	r0, [fp, #48]	; 0x30
   1ce90:	bl	1cb7c <next@@Base+0x25c8>
   1ce94:	cmn	r7, #1
   1ce98:	strd	r0, [fp, #56]	; 0x38
   1ce9c:	bne	1cdf8 <next@@Base+0x2844>
   1cea0:	add	sp, sp, #36	; 0x24
   1cea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cea8:	mov	r0, sl
   1ceac:	bl	1bbe8 <next@@Base+0x1634>
   1ceb0:	b	1ce6c <next@@Base+0x28b8>
   1ceb4:	andeq	r1, r0, r0, lsr #15
   1ceb8:	andeq	r1, r0, r8, lsl r7
   1cebc:	andeq	r1, r0, r4, asr r7
   1cec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cec4:	sub	sp, sp, #6080	; 0x17c0
   1cec8:	sub	sp, sp, #28
   1cecc:	mov	r4, r1
   1ced0:	strd	r2, [sp, #4]
   1ced4:	add	r3, sp, #6144	; 0x1800
   1ced8:	mov	r9, r0
   1cedc:	ldr	r7, [r3]
   1cee0:	add	r3, sp, #6144	; 0x1800
   1cee4:	add	r3, r3, #4
   1cee8:	ldr	r6, [r3]
   1ceec:	add	r3, sp, #6144	; 0x1800
   1cef0:	add	r3, r3, #8
   1cef4:	ldr	sl, [r3]
   1cef8:	bl	1cb5c <next@@Base+0x25a8>
   1cefc:	add	r3, r4, #12
   1cf00:	mov	r2, r9
   1cf04:	str	r3, [sp, #12]
   1cf08:	mov	r1, r0
   1cf0c:	mov	r0, r3
   1cf10:	bl	1c578 <next@@Base+0x1fc4>
   1cf14:	cmp	r0, #0
   1cf18:	beq	1d1a0 <next@@Base+0x2bec>
   1cf1c:	bl	1cb5c <next@@Base+0x25a8>
   1cf20:	ldr	r3, [r4, #8]
   1cf24:	cmp	r0, r3
   1cf28:	bne	1cfbc <next@@Base+0x2a08>
   1cf2c:	ldr	fp, [pc, #628]	; 1d1a8 <next@@Base+0x2bf4>
   1cf30:	add	r5, sp, #16
   1cf34:	add	fp, pc, fp
   1cf38:	bl	1b910 <next@@Base+0x135c>
   1cf3c:	str	r0, [r6]
   1cf40:	bl	1cb5c <next@@Base+0x25a8>
   1cf44:	cmp	r0, #-1560281088	; 0xa3000000
   1cf48:	bne	1d000 <next@@Base+0x2a4c>
   1cf4c:	bl	1cb5c <next@@Base+0x25a8>
   1cf50:	mov	r0, r5
   1cf54:	bl	1cd60 <next@@Base+0x27ac>
   1cf58:	bl	1b934 <next@@Base+0x1380>
   1cf5c:	add	r2, sp, #2000	; 0x7d0
   1cf60:	add	r2, r2, #8
   1cf64:	subs	r8, r0, #0
   1cf68:	bne	1d134 <next@@Base+0x2b80>
   1cf6c:	ldr	r3, [r7]
   1cf70:	cmp	r3, #0
   1cf74:	bne	1cfcc <next@@Base+0x2a18>
   1cf78:	ldr	r3, [r2, #-1992]	; 0xfffff838
   1cf7c:	cmp	r3, sl
   1cf80:	bne	1cf38 <next@@Base+0x2984>
   1cf84:	ldr	r3, [sp, #8]
   1cf88:	ldr	r2, [r2, #-1984]	; 0xfffff840
   1cf8c:	ldr	r3, [r3]
   1cf90:	cmp	r2, r3
   1cf94:	bne	1cf38 <next@@Base+0x2984>
   1cf98:	ldr	r2, [pc, #524]	; 1d1ac <next@@Base+0x2bf8>
   1cf9c:	mov	r1, r5
   1cfa0:	ldr	r0, [sp, #4]
   1cfa4:	bl	11ff0 <memcpy@plt>
   1cfa8:	ldr	r3, [r6]
   1cfac:	str	r3, [r7]
   1cfb0:	b	1cf38 <next@@Base+0x2984>
   1cfb4:	cmp	r0, #0
   1cfb8:	bne	1d174 <next@@Base+0x2bc0>
   1cfbc:	mov	r0, #0
   1cfc0:	add	sp, sp, #6080	; 0x17c0
   1cfc4:	add	sp, sp, #28
   1cfc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cfcc:	ldr	r0, [pc, #476]	; 1d1b0 <next@@Base+0x2bfc>
   1cfd0:	bl	12044 <malloc@plt>
   1cfd4:	ldr	r2, [pc, #464]	; 1d1ac <next@@Base+0x2bf8>
   1cfd8:	mov	r1, r5
   1cfdc:	mov	r3, r0
   1cfe0:	str	r0, [fp]
   1cfe4:	add	r0, r0, #8
   1cfe8:	str	r3, [sp]
   1cfec:	bl	11ff0 <memcpy@plt>
   1cff0:	ldr	r3, [sp]
   1cff4:	str	r8, [r3]
   1cff8:	ldr	fp, [fp]
   1cffc:	b	1cf38 <next@@Base+0x2984>
   1d000:	ldr	r5, [r4, #52]	; 0x34
   1d004:	cmp	r5, #0
   1d008:	beq	1cfb4 <next@@Base+0x2a00>
   1d00c:	ldr	r3, [r4, #56]	; 0x38
   1d010:	cmp	r0, #16777216	; 0x1000000
   1d014:	ldr	r8, [r3]
   1d018:	bne	1d170 <next@@Base+0x2bbc>
   1d01c:	ldr	r6, [pc, #400]	; 1d1b4 <next@@Base+0x2c00>
   1d020:	mov	r5, #0
   1d024:	add	r6, pc, r6
   1d028:	add	r6, r6, #4
   1d02c:	b	1d070 <next@@Base+0x2abc>
   1d030:	mov	r2, r6
   1d034:	mov	r3, r5
   1d038:	mov	r1, r4
   1d03c:	mov	r0, r9
   1d040:	bl	1cbc0 <next@@Base+0x260c>
   1d044:	subs	r6, r0, #0
   1d048:	beq	1d174 <next@@Base+0x2bc0>
   1d04c:	bl	1cb5c <next@@Base+0x25a8>
   1d050:	ldr	r3, [r4, #52]	; 0x34
   1d054:	add	r5, r5, #1
   1d058:	cmp	r3, r5
   1d05c:	beq	1cfb4 <next@@Base+0x2a00>
   1d060:	ldr	r3, [r4, #56]	; 0x38
   1d064:	cmp	r0, #16777216	; 0x1000000
   1d068:	ldr	r8, [r3, r5, lsl #2]
   1d06c:	bne	1d174 <next@@Base+0x2bc0>
   1d070:	bl	1cb5c <next@@Base+0x25a8>
   1d074:	cmp	r0, #0
   1d078:	beq	1d04c <next@@Base+0x2a98>
   1d07c:	cmp	r0, #3
   1d080:	bne	1d174 <next@@Base+0x2bc0>
   1d084:	cmp	r8, #0
   1d088:	beq	1d030 <next@@Base+0x2a7c>
   1d08c:	ldr	r3, [r8]
   1d090:	cmp	r4, r3
   1d094:	bne	1d030 <next@@Base+0x2a7c>
   1d098:	bl	1cb5c <next@@Base+0x25a8>
   1d09c:	ldr	r3, [r8, #4]
   1d0a0:	cmp	r0, r3
   1d0a4:	bne	1d174 <next@@Base+0x2bc0>
   1d0a8:	bl	1cb5c <next@@Base+0x25a8>
   1d0ac:	ldr	r3, [r8, #8]
   1d0b0:	cmp	r0, r3
   1d0b4:	bne	1d174 <next@@Base+0x2bc0>
   1d0b8:	bl	1cb5c <next@@Base+0x25a8>
   1d0bc:	ldr	r3, [r8, #12]
   1d0c0:	cmp	r0, r3
   1d0c4:	bne	1d174 <next@@Base+0x2bc0>
   1d0c8:	ldr	r7, [pc, #232]	; 1d1b8 <next@@Base+0x2c04>
   1d0cc:	ldr	fp, [sp, #12]
   1d0d0:	add	r8, r8, #16
   1d0d4:	ldr	sl, [fp, #4]!
   1d0d8:	cmp	sl, #0
   1d0dc:	beq	1d114 <next@@Base+0x2b60>
   1d0e0:	bl	1cb5c <next@@Base+0x25a8>
   1d0e4:	str	r0, [sp]
   1d0e8:	bl	1cb5c <next@@Base+0x25a8>
   1d0ec:	ldr	r3, [sp]
   1d0f0:	cmp	r3, r7
   1d0f4:	bne	1d174 <next@@Base+0x2bc0>
   1d0f8:	ldr	r3, [r8]
   1d0fc:	mov	r1, r3
   1d100:	cmp	r0, r3, lsl #1
   1d104:	bne	1d174 <next@@Base+0x2bc0>
   1d108:	ldr	r0, [r8, #4]
   1d10c:	blx	sl
   1d110:	add	r8, r8, #8
   1d114:	ldr	r3, [pc, #160]	; 1d1bc <next@@Base+0x2c08>
   1d118:	add	r7, r7, #131072	; 0x20000
   1d11c:	cmp	r7, r3
   1d120:	bne	1d0d4 <next@@Base+0x2b20>
   1d124:	bl	1b934 <next@@Base+0x1380>
   1d128:	cmp	r0, #0
   1d12c:	beq	1d04c <next@@Base+0x2a98>
   1d130:	mov	r8, r0
   1d134:	cmp	r8, #0
   1d138:	blt	1d164 <next@@Base+0x2bb0>
   1d13c:	ldr	r2, [pc, #124]	; 1d1c0 <next@@Base+0x2c0c>
   1d140:	add	r2, pc, r2
   1d144:	ldr	r0, [pc, #120]	; 1d1c4 <next@@Base+0x2c10>
   1d148:	mov	r1, r9
   1d14c:	add	r0, pc, r0
   1d150:	bl	1bbe8 <next@@Base+0x1634>
   1d154:	mvn	r0, #0
   1d158:	add	sp, sp, #6080	; 0x17c0
   1d15c:	add	sp, sp, #28
   1d160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d164:	ldr	r2, [pc, #92]	; 1d1c8 <next@@Base+0x2c14>
   1d168:	add	r2, pc, r2
   1d16c:	b	1d144 <next@@Base+0x2b90>
   1d170:	mov	r5, #0
   1d174:	ldr	r2, [pc, #80]	; 1d1cc <next@@Base+0x2c18>
   1d178:	ldr	r0, [pc, #80]	; 1d1d0 <next@@Base+0x2c1c>
   1d17c:	mov	r3, r5
   1d180:	mov	r1, r9
   1d184:	add	r2, pc, r2
   1d188:	add	r0, pc, r0
   1d18c:	bl	1bbe8 <next@@Base+0x1634>
   1d190:	mvn	r0, #0
   1d194:	add	sp, sp, #6080	; 0x17c0
   1d198:	add	sp, sp, #28
   1d19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d1a0:	mvn	r0, #0
   1d1a4:	b	1cfc0 <next@@Base+0x2a0c>
   1d1a8:	andeq	r4, r1, ip, asr #11
   1d1ac:	andeq	r1, r0, r8, asr #15
   1d1b0:	ldrdeq	r1, [r0], -r0
   1d1b4:	ldrdeq	r4, [r1], -ip
   1d1b8:			; <UNDEFINED> instruction: 0x01a10000
   1d1bc:			; <UNDEFINED> instruction: 0x01b30000
   1d1c0:	andeq	r1, r0, r8, asr #8
   1d1c4:	andeq	r1, r0, r8, ror r4
   1d1c8:	andeq	r1, r0, r4, lsl r4
   1d1cc:	andeq	r1, r0, ip, lsl #8
   1d1d0:	andeq	r1, r0, r4, lsl r4
   1d1d4:	ldr	r3, [pc, #72]	; 1d224 <next@@Base+0x2c70>
   1d1d8:	ldr	r2, [pc, #72]	; 1d228 <next@@Base+0x2c74>
   1d1dc:	add	r3, pc, r3
   1d1e0:	push	{r4, r5, r6, lr}
   1d1e4:	mov	r5, r0
   1d1e8:	ldr	r4, [r3, r2]
   1d1ec:	ldr	r0, [r4, #8]
   1d1f0:	cmp	r0, #0
   1d1f4:	bne	1d21c <next@@Base+0x2c68>
   1d1f8:	lsl	r1, r5, #2
   1d1fc:	mov	r2, #0
   1d200:	ldr	r0, [r4]
   1d204:	bl	1211c <fseek@plt>
   1d208:	ldr	r0, [r4]
   1d20c:	bl	11ffc <ftell@plt>
   1d210:	asr	r0, r0, #2
   1d214:	str	r0, [r4, #4]
   1d218:	pop	{r4, r5, r6, pc}
   1d21c:	bl	1b9e0 <next@@Base+0x142c>
   1d220:	b	1d1f8 <next@@Base+0x2c44>
   1d224:	andeq	r1, r1, ip, lsl lr
   1d228:	andeq	r0, r0, r4, lsr #1
   1d22c:	cmp	r2, #0
   1d230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d234:	mov	r8, r0
   1d238:	sub	sp, sp, #20
   1d23c:	mov	r5, r1
   1d240:	mov	r4, r3
   1d244:	beq	1d414 <next@@Base+0x2e60>
   1d248:	cmp	r4, #0
   1d24c:	bne	1d430 <next@@Base+0x2e7c>
   1d250:	mov	r1, r5
   1d254:	ldr	r5, [pc, #480]	; 1d43c <next@@Base+0x2e88>
   1d258:	mov	r0, #-1560281088	; 0xa3000000
   1d25c:	add	r5, pc, r5
   1d260:	bl	1ca54 <next@@Base+0x24a0>
   1d264:	ldr	r4, [r5]
   1d268:	cmp	r4, #0
   1d26c:	beq	1d298 <next@@Base+0x2ce4>
   1d270:	add	r1, r4, #8
   1d274:	mov	r0, #-1560281088	; 0xa3000000
   1d278:	bl	1ca54 <next@@Base+0x24a0>
   1d27c:	ldr	r3, [r5]
   1d280:	mov	r0, r3
   1d284:	ldr	r4, [r3]
   1d288:	bl	11fe4 <free@plt>
   1d28c:	cmp	r4, #0
   1d290:	str	r4, [r5]
   1d294:	bne	1d270 <next@@Base+0x2cbc>
   1d298:	ldr	r3, [r8, #52]	; 0x34
   1d29c:	cmp	r3, #0
   1d2a0:	beq	1d3ec <next@@Base+0x2e38>
   1d2a4:	ldr	r3, [pc, #404]	; 1d440 <next@@Base+0x2e8c>
   1d2a8:	ldr	r9, [pc, #404]	; 1d444 <next@@Base+0x2e90>
   1d2ac:	add	r3, pc, r3
   1d2b0:	str	r3, [sp, #4]
   1d2b4:	ldr	r3, [pc, #396]	; 1d448 <next@@Base+0x2e94>
   1d2b8:	mov	r7, #0
   1d2bc:	add	r3, pc, r3
   1d2c0:	str	r3, [sp, #12]
   1d2c4:	b	1d300 <next@@Base+0x2d4c>
   1d2c8:	ldr	r3, [r8, #56]	; 0x38
   1d2cc:	ldr	r4, [r3, r7, lsl #2]
   1d2d0:	cmp	r4, #0
   1d2d4:	beq	1d2e4 <next@@Base+0x2d30>
   1d2d8:	ldr	r3, [r4]
   1d2dc:	cmp	r3, r8
   1d2e0:	beq	1d3fc <next@@Base+0x2e48>
   1d2e4:	mov	r1, #0
   1d2e8:	mov	r0, #16777216	; 0x1000000
   1d2ec:	bl	1ca34 <next@@Base+0x2480>
   1d2f0:	ldr	r3, [r8, #52]	; 0x34
   1d2f4:	add	r7, r7, #1
   1d2f8:	cmp	r3, r7
   1d2fc:	beq	1d3ec <next@@Base+0x2e38>
   1d300:	ldr	r3, [sp, #4]
   1d304:	ldr	r4, [r3, #4]
   1d308:	cmp	r4, #0
   1d30c:	beq	1d2c8 <next@@Base+0x2d14>
   1d310:	ldr	r3, [r4, #4]
   1d314:	cmp	r3, r7
   1d318:	bne	1d2c8 <next@@Base+0x2d14>
   1d31c:	mov	r3, #1
   1d320:	mov	r1, #3
   1d324:	mov	r0, #16777216	; 0x1000000
   1d328:	add	r4, r4, #8
   1d32c:	str	r3, [sp, #8]
   1d330:	bl	1ca34 <next@@Base+0x2480>
   1d334:	ldr	r0, [r4, #4]
   1d338:	bl	1c9fc <next@@Base+0x2448>
   1d33c:	ldr	r0, [r4, #8]
   1d340:	bl	1c9fc <next@@Base+0x2448>
   1d344:	ldr	r0, [r4, #12]
   1d348:	bl	1c9fc <next@@Base+0x2448>
   1d34c:	ldr	r5, [pc, #248]	; 1d44c <next@@Base+0x2e98>
   1d350:	add	r4, r4, #16
   1d354:	add	r6, r8, #12
   1d358:	b	1d368 <next@@Base+0x2db4>
   1d35c:	add	r5, r5, #131072	; 0x20000
   1d360:	cmp	r5, r9
   1d364:	beq	1d3b8 <next@@Base+0x2e04>
   1d368:	ldr	r3, [r6, #4]!
   1d36c:	cmp	r3, #0
   1d370:	beq	1d35c <next@@Base+0x2da8>
   1d374:	ldr	fp, [r4]
   1d378:	mov	r0, r5
   1d37c:	sub	sl, fp, #1
   1d380:	lsl	r1, fp, #1
   1d384:	bl	1ca34 <next@@Base+0x2480>
   1d388:	cmp	fp, #0
   1d38c:	ldr	fp, [r4, #4]
   1d390:	beq	1d3a8 <next@@Base+0x2df4>
   1d394:	sub	sl, sl, #1
   1d398:	ldrd	r0, [fp], #8
   1d39c:	bl	1ca14 <next@@Base+0x2460>
   1d3a0:	cmn	sl, #1
   1d3a4:	bne	1d394 <next@@Base+0x2de0>
   1d3a8:	add	r5, r5, #131072	; 0x20000
   1d3ac:	cmp	r5, r9
   1d3b0:	add	r4, r4, #8
   1d3b4:	bne	1d368 <next@@Base+0x2db4>
   1d3b8:	ldr	r3, [sp, #8]
   1d3bc:	cmp	r3, #0
   1d3c0:	beq	1d2f0 <next@@Base+0x2d3c>
   1d3c4:	ldr	r4, [sp, #12]
   1d3c8:	mov	r2, #9
   1d3cc:	mov	r0, r8
   1d3d0:	ldr	r1, [r4, #4]
   1d3d4:	bl	1bc1c <next@@Base+0x1668>
   1d3d8:	ldr	r3, [r8, #52]	; 0x34
   1d3dc:	add	r7, r7, #1
   1d3e0:	cmp	r3, r7
   1d3e4:	str	r0, [r4, #4]
   1d3e8:	bne	1d300 <next@@Base+0x2d4c>
   1d3ec:	mov	r0, #0
   1d3f0:	add	sp, sp, #20
   1d3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3f8:	b	1c9fc <next@@Base+0x2448>
   1d3fc:	mov	r1, #3
   1d400:	mov	r0, #16777216	; 0x1000000
   1d404:	bl	1ca34 <next@@Base+0x2480>
   1d408:	mov	r3, #0
   1d40c:	str	r3, [sp, #8]
   1d410:	b	1d334 <next@@Base+0x2d80>
   1d414:	ldr	r1, [pc, #52]	; 1d450 <next@@Base+0x2e9c>
   1d418:	ldr	r0, [pc, #52]	; 1d454 <next@@Base+0x2ea0>
   1d41c:	bl	1ca34 <next@@Base+0x2480>
   1d420:	ldr	r0, [r8, #8]
   1d424:	bl	1c9fc <next@@Base+0x2448>
   1d428:	cmp	r4, #0
   1d42c:	beq	1d250 <next@@Base+0x2c9c>
   1d430:	mov	r0, r4
   1d434:	bl	1d1d4 <next@@Base+0x2c20>
   1d438:	b	1d250 <next@@Base+0x2c9c>
   1d43c:	andeq	r4, r1, r4, lsr #5
   1d440:	andeq	r4, r1, r4, asr r2
   1d444:			; <UNDEFINED> instruction: 0x01b30000
   1d448:	andeq	r4, r1, r4, asr #4
   1d44c:			; <UNDEFINED> instruction: 0x01a10000
   1d450:	teqmi	r8, sl, lsr #6
   1d454:	strbvs	r6, [r3, -r1, ror #8]!

0001d458 <__gcov_sort_n_vals@@Base>:
   1d458:	cmp	r1, #2
   1d45c:	bxle	lr
   1d460:	sub	r1, r1, #3
   1d464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d468:	add	r2, r0, #8
   1d46c:	sub	sp, sp, #20
   1d470:	mov	r6, r0
   1d474:	bic	r7, r1, #1
   1d478:	mvn	r8, #15
   1d47c:	mov	lr, #0
   1d480:	ldrd	r0, [r2]
   1d484:	ldrd	r4, [r2, #16]
   1d488:	ldrd	sl, [r2, #8]
   1d48c:	add	r9, r2, #16
   1d490:	cmp	r0, r4
   1d494:	sbcs	r3, r1, r5
   1d498:	mov	ip, r9
   1d49c:	sub	r1, r6, r8
   1d4a0:	strd	sl, [sp]
   1d4a4:	mov	r3, lr
   1d4a8:	bge	1d510 <__gcov_sort_n_vals@@Base+0xb8>
   1d4ac:	add	sl, r8, #16
   1d4b0:	mvn	fp, #1
   1d4b4:	add	sl, r2, sl
   1d4b8:	orr	fp, lr, fp
   1d4bc:	str	r7, [sp, #8]
   1d4c0:	str	r6, [sp, #12]
   1d4c4:	b	1d4dc <__gcov_sort_n_vals@@Base+0x84>
   1d4c8:	ldrd	r6, [ip, #-16]
   1d4cc:	sub	r2, r2, #16
   1d4d0:	cmp	r6, r4
   1d4d4:	sbcs	r1, r7, r5
   1d4d8:	bge	1d538 <__gcov_sort_n_vals@@Base+0xe0>
   1d4dc:	ldrd	r6, [r2, #-8]
   1d4e0:	lsl	r1, r3, #3
   1d4e4:	mov	r0, r3
   1d4e8:	strd	r6, [r2, #8]
   1d4ec:	ldrd	r6, [sl, r1]
   1d4f0:	sub	r3, r3, #2
   1d4f4:	cmp	r3, fp
   1d4f8:	strd	r6, [r2, #16]
   1d4fc:	mov	ip, r2
   1d500:	bne	1d4c8 <__gcov_sort_n_vals@@Base+0x70>
   1d504:	ldr	r6, [sp, #12]
   1d508:	ldr	r7, [sp, #8]
   1d50c:	add	r1, r6, r1
   1d510:	ldrd	r2, [sp]
   1d514:	cmp	lr, r7
   1d518:	sub	r8, r8, #16
   1d51c:	strd	r2, [r1]
   1d520:	add	lr, lr, #2
   1d524:	strd	r4, [ip]
   1d528:	mov	r2, r9
   1d52c:	bne	1d480 <__gcov_sort_n_vals@@Base+0x28>
   1d530:	add	sp, sp, #20
   1d534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d538:	ldr	r6, [sp, #12]
   1d53c:	ldr	r7, [sp, #8]
   1d540:	add	r1, r6, r0, lsl #3
   1d544:	b	1d510 <__gcov_sort_n_vals@@Base+0xb8>
   1d548:	push	{r4, r5, r6, lr}
   1d54c:	ldr	r4, [pc, #76]	; 1d5a0 <__gcov_sort_n_vals@@Base+0x148>
   1d550:	smull	r2, r3, r4, r0
   1d554:	asr	r4, r0, #31
   1d558:	rsb	r4, r4, r3, asr #1
   1d55c:	add	r4, r4, r4, lsl #3
   1d560:	subs	r4, r0, r4
   1d564:	bne	1d59c <__gcov_sort_n_vals@@Base+0x144>
   1d568:	cmp	r0, #0
   1d56c:	mov	r6, r0
   1d570:	ldr	r5, [r1]
   1d574:	pople	{r4, r5, r6, pc}
   1d578:	add	r5, r5, #8
   1d57c:	mov	r0, r5
   1d580:	add	r4, r4, #9
   1d584:	mov	r1, #8
   1d588:	bl	1d458 <__gcov_sort_n_vals@@Base>
   1d58c:	cmp	r6, r4
   1d590:	add	r5, r5, #72	; 0x48
   1d594:	bgt	1d57c <__gcov_sort_n_vals@@Base+0x124>
   1d598:	pop	{r4, r5, r6, pc}
   1d59c:	bl	12128 <abort@plt>
   1d5a0:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1d5a4:	ldr	r3, [r0, #48]	; 0x30
   1d5a8:	cmp	r3, #0
   1d5ac:	bxeq	lr
   1d5b0:	push	{r4, r5, r6, lr}
   1d5b4:	ldr	lr, [r0, #52]	; 0x34
   1d5b8:	cmp	lr, #0
   1d5bc:	popeq	{r4, r5, r6, pc}
   1d5c0:	mov	r5, r0
   1d5c4:	mov	r4, #0
   1d5c8:	add	r6, r0, #12
   1d5cc:	ldr	r1, [r5, #56]	; 0x38
   1d5d0:	mov	r2, r6
   1d5d4:	mov	r3, #0
   1d5d8:	ldr	r1, [r1, r4, lsl #2]
   1d5dc:	add	r1, r1, #16
   1d5e0:	ldr	ip, [r2, #4]!
   1d5e4:	cmp	ip, #0
   1d5e8:	beq	1d5f8 <__gcov_sort_n_vals@@Base+0x1a0>
   1d5ec:	cmp	r3, #8
   1d5f0:	beq	1d614 <__gcov_sort_n_vals@@Base+0x1bc>
   1d5f4:	add	r1, r1, #8
   1d5f8:	add	r3, r3, #1
   1d5fc:	cmp	r3, #9
   1d600:	bne	1d5e0 <__gcov_sort_n_vals@@Base+0x188>
   1d604:	add	r4, r4, #1
   1d608:	cmp	lr, r4
   1d60c:	bne	1d5cc <__gcov_sort_n_vals@@Base+0x174>
   1d610:	pop	{r4, r5, r6, pc}
   1d614:	ldr	r0, [r1], #4
   1d618:	bl	1d548 <__gcov_sort_n_vals@@Base+0xf0>
   1d61c:	ldr	lr, [r5, #52]	; 0x34
   1d620:	b	1d604 <__gcov_sort_n_vals@@Base+0x1ac>
   1d624:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d628:	sub	sp, sp, #6080	; 0x17c0
   1d62c:	ldr	ip, [pc, #396]	; 1d7c0 <__gcov_sort_n_vals@@Base+0x368>
   1d630:	sub	sp, sp, #36	; 0x24
   1d634:	add	ip, pc, ip
   1d638:	add	r5, sp, #2016	; 0x7e0
   1d63c:	mov	r4, r0
   1d640:	mov	r6, r1
   1d644:	mov	r1, #0
   1d648:	str	r1, [ip, #4]
   1d64c:	str	r1, [ip]
   1d650:	mov	r8, r2
   1d654:	mov	r7, r3
   1d658:	str	r1, [r5, #-2000]	; 0xfffff830
   1d65c:	str	r1, [r5, #-1996]	; 0xfffff834
   1d660:	bl	1d5a4 <__gcov_sort_n_vals@@Base+0x14c>
   1d664:	mov	r1, r6
   1d668:	ldr	r0, [r4, #12]
   1d66c:	bl	1c874 <next@@Base+0x22c0>
   1d670:	cmn	r0, #1
   1d674:	beq	1d6f0 <__gcov_sort_n_vals@@Base+0x298>
   1d678:	bl	1cb5c <next@@Base+0x25a8>
   1d67c:	cmp	r0, #0
   1d680:	beq	1d6fc <__gcov_sort_n_vals@@Base+0x2a4>
   1d684:	ldr	r2, [pc, #312]	; 1d7c4 <__gcov_sort_n_vals@@Base+0x36c>
   1d688:	ldr	r1, [r6]
   1d68c:	cmp	r0, r2
   1d690:	beq	1d754 <__gcov_sort_n_vals@@Base+0x2fc>
   1d694:	ldr	r0, [pc, #300]	; 1d7c8 <__gcov_sort_n_vals@@Base+0x370>
   1d698:	add	r0, pc, r0
   1d69c:	bl	1bbe8 <next@@Base+0x1634>
   1d6a0:	ldr	r5, [pc, #292]	; 1d7cc <__gcov_sort_n_vals@@Base+0x374>
   1d6a4:	add	r5, pc, r5
   1d6a8:	ldr	r1, [r5, #4]
   1d6ac:	cmp	r1, #0
   1d6b0:	beq	1d6d0 <__gcov_sort_n_vals@@Base+0x278>
   1d6b4:	mov	r2, #9
   1d6b8:	mov	r0, r4
   1d6bc:	bl	1bc1c <next@@Base+0x1668>
   1d6c0:	cmp	r0, #0
   1d6c4:	mov	r1, r0
   1d6c8:	str	r0, [r5, #4]
   1d6cc:	bne	1d6b4 <__gcov_sort_n_vals@@Base+0x25c>
   1d6d0:	bl	1c98c <next@@Base+0x23d8>
   1d6d4:	cmp	r0, #0
   1d6d8:	beq	1d6f0 <__gcov_sort_n_vals@@Base+0x298>
   1d6dc:	blt	1d7b4 <__gcov_sort_n_vals@@Base+0x35c>
   1d6e0:	ldr	r0, [pc, #232]	; 1d7d0 <__gcov_sort_n_vals@@Base+0x378>
   1d6e4:	add	r0, pc, r0
   1d6e8:	ldr	r1, [r6]
   1d6ec:	bl	1bbe8 <next@@Base+0x1634>
   1d6f0:	add	sp, sp, #6080	; 0x17c0
   1d6f4:	add	sp, sp, #36	; 0x24
   1d6f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d6fc:	bl	1c72c <next@@Base+0x2178>
   1d700:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1d704:	add	r9, sp, #24
   1d708:	cmp	r1, #0
   1d70c:	beq	1d79c <__gcov_sort_n_vals@@Base+0x344>
   1d710:	add	r3, sp, #6144	; 0x1800
   1d714:	str	r7, [sp, #4]
   1d718:	ldr	r3, [r3]
   1d71c:	mov	r1, r8
   1d720:	str	r3, [sp]
   1d724:	add	r2, r4, #16
   1d728:	mov	r3, r9
   1d72c:	ldr	r0, [r6]
   1d730:	bl	1c5d8 <next@@Base+0x2024>
   1d734:	cmn	r0, #1
   1d738:	beq	1d6a0 <__gcov_sort_n_vals@@Base+0x248>
   1d73c:	mov	r1, r9
   1d740:	ldr	r3, [r5, #-2000]	; 0xfffff830
   1d744:	ldr	r2, [r5, #-1996]	; 0xfffff834
   1d748:	mov	r0, r4
   1d74c:	bl	1d22c <next@@Base+0x2c78>
   1d750:	b	1d6a0 <__gcov_sort_n_vals@@Base+0x248>
   1d754:	add	ip, sp, #20
   1d758:	add	r3, sp, #16
   1d75c:	str	r7, [sp, #8]
   1d760:	stm	sp, {r3, ip}
   1d764:	add	r3, sp, #6144	; 0x1800
   1d768:	add	r9, sp, #24
   1d76c:	ldr	r3, [r3]
   1d770:	mov	r0, r1
   1d774:	mov	r2, r9
   1d778:	add	r3, r3, #8
   1d77c:	mov	r1, r4
   1d780:	bl	1cec0 <next@@Base+0x290c>
   1d784:	cmn	r0, #1
   1d788:	beq	1d6a0 <__gcov_sort_n_vals@@Base+0x248>
   1d78c:	bl	1c72c <next@@Base+0x2178>
   1d790:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1d794:	cmp	r1, #0
   1d798:	bne	1d710 <__gcov_sort_n_vals@@Base+0x2b8>
   1d79c:	ldr	r2, [pc, #48]	; 1d7d4 <__gcov_sort_n_vals@@Base+0x37c>
   1d7a0:	mov	r0, r9
   1d7a4:	bl	120b0 <memset@plt>
   1d7a8:	ldr	r3, [r5, #-1996]	; 0xfffff834
   1d7ac:	str	r3, [r5, #-2000]	; 0xfffff830
   1d7b0:	b	1d710 <__gcov_sort_n_vals@@Base+0x2b8>
   1d7b4:	ldr	r0, [pc, #28]	; 1d7d8 <__gcov_sort_n_vals@@Base+0x380>
   1d7b8:	add	r0, pc, r0
   1d7bc:	b	1d6e8 <__gcov_sort_n_vals@@Base+0x290>
   1d7c0:	andeq	r3, r1, ip, asr #29
   1d7c4:	strbvs	r6, [r3, -r1, ror #8]!
   1d7c8:	andeq	r0, r0, r4, lsl #31
   1d7cc:	andeq	r3, r1, ip, asr lr
   1d7d0:	andeq	r0, r0, ip, lsl pc
   1d7d4:	andeq	r1, r0, r8, asr #15
   1d7d8:	andeq	r0, r0, r8, lsr #28
   1d7dc:	push	{r4, r5, r6, r7, r8, lr}
   1d7e0:	sub	sp, sp, #6080	; 0x17c0
   1d7e4:	sub	sp, sp, #32
   1d7e8:	add	r6, sp, #24
   1d7ec:	add	r2, sp, #12
   1d7f0:	mov	r8, r1
   1d7f4:	mov	r1, r6
   1d7f8:	mov	r4, r0
   1d7fc:	bl	1be34 <next@@Base+0x1880>
   1d800:	add	r5, sp, #8
   1d804:	mov	r7, r0
   1d808:	mov	r0, r5
   1d80c:	bl	1bfc8 <next@@Base+0x1a14>
   1d810:	cmp	r4, #0
   1d814:	beq	1d83c <__gcov_sort_n_vals@@Base+0x3e4>
   1d818:	mov	r0, r4
   1d81c:	str	r6, [sp]
   1d820:	mov	r3, r7
   1d824:	mov	r2, r8
   1d828:	mov	r1, r5
   1d82c:	bl	1d624 <__gcov_sort_n_vals@@Base+0x1cc>
   1d830:	ldr	r4, [r4, #4]
   1d834:	cmp	r4, #0
   1d838:	bne	1d818 <__gcov_sort_n_vals@@Base+0x3c0>
   1d83c:	ldr	r0, [sp, #8]
   1d840:	bl	11fe4 <free@plt>
   1d844:	add	sp, sp, #6080	; 0x17c0
   1d848:	add	sp, sp, #32
   1d84c:	pop	{r4, r5, r6, r7, r8, pc}
   1d850:	ldrb	r1, [r0, #4]
   1d854:	tst	r1, #1
   1d858:	bxne	lr
   1d85c:	push	{r4, lr}
   1d860:	lsr	r1, r1, #1
   1d864:	mov	r4, r0
   1d868:	and	r1, r1, #1
   1d86c:	ldr	r0, [r0]
   1d870:	bl	1d7dc <__gcov_sort_n_vals@@Base+0x384>
   1d874:	ldrb	r3, [r4, #4]
   1d878:	bic	r3, r3, #3
   1d87c:	orr	r3, r3, #3
   1d880:	strb	r3, [r4, #4]
   1d884:	pop	{r4, pc}
   1d888:	push	{r4, r5, r6, lr}
   1d88c:	ldr	r4, [pc, #84]	; 1d8e8 <__gcov_sort_n_vals@@Base+0x490>
   1d890:	ldr	r5, [pc, #84]	; 1d8ec <__gcov_sort_n_vals@@Base+0x494>
   1d894:	add	r4, pc, r4
   1d898:	mov	r0, r4
   1d89c:	bl	1d850 <__gcov_sort_n_vals@@Base+0x3f8>
   1d8a0:	ldr	r3, [r4, #8]
   1d8a4:	add	r5, pc, r5
   1d8a8:	cmp	r3, #0
   1d8ac:	ldrne	r2, [r4, #12]
   1d8b0:	strne	r2, [r3, #12]
   1d8b4:	ldr	r2, [pc, #52]	; 1d8f0 <__gcov_sort_n_vals@@Base+0x498>
   1d8b8:	add	r2, pc, r2
   1d8bc:	ldr	r2, [r2, #12]
   1d8c0:	cmp	r2, #0
   1d8c4:	strne	r3, [r2, #8]
   1d8c8:	beq	1d8d4 <__gcov_sort_n_vals@@Base+0x47c>
   1d8cc:	pop	{r4, r5, r6, lr}
   1d8d0:	b	1b990 <next@@Base+0x13dc>
   1d8d4:	ldr	r2, [pc, #24]	; 1d8f4 <__gcov_sort_n_vals@@Base+0x49c>
   1d8d8:	ldr	r2, [r5, r2]
   1d8dc:	pop	{r4, r5, r6, lr}
   1d8e0:	str	r3, [r2, #4]
   1d8e4:	b	1b990 <next@@Base+0x13dc>
   1d8e8:	andeq	r3, r1, ip, lsr #28
   1d8ec:	andeq	r1, r1, r4, asr r7
   1d8f0:	andeq	r3, r1, r8, lsl #28
   1d8f4:	andeq	r0, r0, r0, lsr #1
   1d8f8:	ldr	r1, [r0]
   1d8fc:	push	{r4, r5, r6, lr}
   1d900:	cmp	r1, #0
   1d904:	ldr	r5, [pc, #156]	; 1d9a8 <__gcov_sort_n_vals@@Base+0x550>
   1d908:	add	r5, pc, r5
   1d90c:	popeq	{r4, r5, r6, pc}
   1d910:	ldr	r3, [r0, #52]	; 0x34
   1d914:	cmp	r3, #0
   1d918:	popeq	{r4, r5, r6, pc}
   1d91c:	mov	r4, r0
   1d920:	mov	r2, #0
   1d924:	add	r0, r0, #12
   1d928:	bl	1c578 <next@@Base+0x1fc4>
   1d92c:	cmp	r0, #0
   1d930:	popeq	{r4, r5, r6, pc}
   1d934:	ldr	r6, [pc, #112]	; 1d9ac <__gcov_sort_n_vals@@Base+0x554>
   1d938:	add	r6, pc, r6
   1d93c:	ldr	r2, [r6]
   1d940:	cmp	r2, #0
   1d944:	beq	1d95c <__gcov_sort_n_vals@@Base+0x504>
   1d948:	ldr	r3, [pc, #96]	; 1d9b0 <__gcov_sort_n_vals@@Base+0x558>
   1d94c:	str	r2, [r4, #4]
   1d950:	add	r3, pc, r3
   1d954:	str	r4, [r3]
   1d958:	pop	{r4, r5, r6, pc}
   1d95c:	ldr	r3, [pc, #80]	; 1d9b4 <__gcov_sort_n_vals@@Base+0x55c>
   1d960:	ldr	r2, [pc, #80]	; 1d9b8 <__gcov_sort_n_vals@@Base+0x560>
   1d964:	mov	r0, #12
   1d968:	ldr	r5, [r5, r3]
   1d96c:	add	r2, pc, r2
   1d970:	ldr	r1, [r5]
   1d974:	bl	1c578 <next@@Base+0x1fc4>
   1d978:	cmp	r0, #0
   1d97c:	ldreq	r2, [r6]
   1d980:	beq	1d948 <__gcov_sort_n_vals@@Base+0x4f0>
   1d984:	ldr	r3, [r5, #4]
   1d988:	cmp	r3, #0
   1d98c:	str	r3, [r6, #8]
   1d990:	strne	r6, [r3, #12]
   1d994:	ldr	r3, [pc, #32]	; 1d9bc <__gcov_sort_n_vals@@Base+0x564>
   1d998:	add	r3, pc, r3
   1d99c:	str	r3, [r5, #4]
   1d9a0:	ldr	r2, [r3]
   1d9a4:	b	1d948 <__gcov_sort_n_vals@@Base+0x4f0>
   1d9a8:	strdeq	r1, [r1], -r0
   1d9ac:	andeq	r3, r1, r8, lsl #27
   1d9b0:	andeq	r3, r1, r0, ror sp
   1d9b4:	andeq	r0, r0, r0, lsr #1
   1d9b8:	ldrdeq	r0, [r0], -r4
   1d9bc:	andeq	r3, r1, r8, lsr #26
   1d9c0:	cmp	r3, #0
   1d9c4:	cmpeq	r2, #0
   1d9c8:	bne	1d9ec <__gcov_sort_n_vals@@Base+0x594>
   1d9cc:	cmp	r1, #0
   1d9d0:	movlt	r1, #-2147483648	; 0x80000000
   1d9d4:	movlt	r0, #0
   1d9d8:	blt	1d9e8 <__gcov_sort_n_vals@@Base+0x590>
   1d9dc:	cmpeq	r0, #0
   1d9e0:	mvnne	r1, #-2147483648	; 0x80000000
   1d9e4:	mvnne	r0, #0
   1d9e8:	b	1da94 <__gcov_sort_n_vals@@Base+0x63c>
   1d9ec:	sub	sp, sp, #8
   1d9f0:	push	{sp, lr}
   1d9f4:	cmp	r1, #0
   1d9f8:	blt	1da18 <__gcov_sort_n_vals@@Base+0x5c0>
   1d9fc:	cmp	r3, #0
   1da00:	blt	1da4c <__gcov_sort_n_vals@@Base+0x5f4>
   1da04:	bl	1dae8 <__gcov_sort_n_vals@@Base+0x690>
   1da08:	ldr	lr, [sp, #4]
   1da0c:	add	sp, sp, #8
   1da10:	pop	{r2, r3}
   1da14:	bx	lr
   1da18:	rsbs	r0, r0, #0
   1da1c:	sbc	r1, r1, r1, lsl #1
   1da20:	cmp	r3, #0
   1da24:	blt	1da70 <__gcov_sort_n_vals@@Base+0x618>
   1da28:	bl	1dae8 <__gcov_sort_n_vals@@Base+0x690>
   1da2c:	ldr	lr, [sp, #4]
   1da30:	add	sp, sp, #8
   1da34:	pop	{r2, r3}
   1da38:	rsbs	r0, r0, #0
   1da3c:	sbc	r1, r1, r1, lsl #1
   1da40:	rsbs	r2, r2, #0
   1da44:	sbc	r3, r3, r3, lsl #1
   1da48:	bx	lr
   1da4c:	rsbs	r2, r2, #0
   1da50:	sbc	r3, r3, r3, lsl #1
   1da54:	bl	1dae8 <__gcov_sort_n_vals@@Base+0x690>
   1da58:	ldr	lr, [sp, #4]
   1da5c:	add	sp, sp, #8
   1da60:	pop	{r2, r3}
   1da64:	rsbs	r0, r0, #0
   1da68:	sbc	r1, r1, r1, lsl #1
   1da6c:	bx	lr
   1da70:	rsbs	r2, r2, #0
   1da74:	sbc	r3, r3, r3, lsl #1
   1da78:	bl	1dae8 <__gcov_sort_n_vals@@Base+0x690>
   1da7c:	ldr	lr, [sp, #4]
   1da80:	add	sp, sp, #8
   1da84:	pop	{r2, r3}
   1da88:	rsbs	r2, r2, #0
   1da8c:	sbc	r3, r3, r3, lsl #1
   1da90:	bx	lr
   1da94:	push	{r1, lr}
   1da98:	mov	r0, #8
   1da9c:	bl	11fa8 <raise@plt>
   1daa0:	pop	{r1, pc}
   1daa4:	ldr	r3, [pc, #48]	; 1dadc <__gcov_sort_n_vals@@Base+0x684>
   1daa8:	ldr	r2, [pc, #48]	; 1dae0 <__gcov_sort_n_vals@@Base+0x688>
   1daac:	and	r3, r3, r0, lsr #1
   1dab0:	sub	r0, r0, r3
   1dab4:	and	r3, r0, r2
   1dab8:	and	r0, r2, r0, lsr #2
   1dabc:	add	r3, r3, r0
   1dac0:	ldr	r0, [pc, #28]	; 1dae4 <__gcov_sort_n_vals@@Base+0x68c>
   1dac4:	add	r3, r3, r3, lsr #4
   1dac8:	and	r0, r0, r3
   1dacc:	add	r0, r0, r0, lsl #8
   1dad0:	add	r0, r0, r0, lsl #16
   1dad4:	lsr	r0, r0, #24
   1dad8:	bx	lr
   1dadc:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   1dae0:	teqcc	r3, #-872415232	; 0xcc000000
   1dae4:	svceq	0x000f0f0f
   1dae8:	cmp	r1, r3
   1daec:	cmpeq	r0, r2
   1daf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1daf4:	mov	r4, r0
   1daf8:	movcc	r0, #0
   1dafc:	mov	r5, r1
   1db00:	ldr	lr, [sp, #36]	; 0x24
   1db04:	movcc	r1, r0
   1db08:	bcc	1dc04 <__gcov_sort_n_vals@@Base+0x7ac>
   1db0c:	cmp	r3, #0
   1db10:	clzeq	ip, r2
   1db14:	clzne	ip, r3
   1db18:	addeq	ip, ip, #32
   1db1c:	cmp	r5, #0
   1db20:	clzeq	r1, r4
   1db24:	addeq	r1, r1, #32
   1db28:	clzne	r1, r5
   1db2c:	sub	ip, ip, r1
   1db30:	sub	sl, ip, #32
   1db34:	lsl	r9, r3, ip
   1db38:	rsb	fp, ip, #32
   1db3c:	orr	r9, r9, r2, lsl sl
   1db40:	orr	r9, r9, r2, lsr fp
   1db44:	lsl	r8, r2, ip
   1db48:	cmp	r5, r9
   1db4c:	cmpeq	r4, r8
   1db50:	movcc	r0, #0
   1db54:	movcc	r1, r0
   1db58:	bcc	1db74 <__gcov_sort_n_vals@@Base+0x71c>
   1db5c:	mov	r0, #1
   1db60:	subs	r4, r4, r8
   1db64:	lsl	r1, r0, sl
   1db68:	orr	r1, r1, r0, lsr fp
   1db6c:	lsl	r0, r0, ip
   1db70:	sbc	r5, r5, r9
   1db74:	cmp	ip, #0
   1db78:	beq	1dc04 <__gcov_sort_n_vals@@Base+0x7ac>
   1db7c:	lsr	r6, r8, #1
   1db80:	orr	r6, r6, r9, lsl #31
   1db84:	lsr	r7, r9, #1
   1db88:	mov	r2, ip
   1db8c:	b	1dbb0 <__gcov_sort_n_vals@@Base+0x758>
   1db90:	subs	r3, r4, r6
   1db94:	sbc	r8, r5, r7
   1db98:	adds	r3, r3, r3
   1db9c:	adc	r8, r8, r8
   1dba0:	adds	r4, r3, #1
   1dba4:	adc	r5, r8, #0
   1dba8:	subs	r2, r2, #1
   1dbac:	beq	1dbcc <__gcov_sort_n_vals@@Base+0x774>
   1dbb0:	cmp	r5, r7
   1dbb4:	cmpeq	r4, r6
   1dbb8:	bcs	1db90 <__gcov_sort_n_vals@@Base+0x738>
   1dbbc:	adds	r4, r4, r4
   1dbc0:	adc	r5, r5, r5
   1dbc4:	subs	r2, r2, #1
   1dbc8:	bne	1dbb0 <__gcov_sort_n_vals@@Base+0x758>
   1dbcc:	lsr	r3, r4, ip
   1dbd0:	orr	r3, r3, r5, lsl fp
   1dbd4:	lsr	r2, r5, ip
   1dbd8:	orr	r3, r3, r5, lsr sl
   1dbdc:	adds	r0, r0, r4
   1dbe0:	mov	r4, r3
   1dbe4:	lsl	r3, r2, ip
   1dbe8:	orr	r3, r3, r4, lsl sl
   1dbec:	lsl	ip, r4, ip
   1dbf0:	orr	r3, r3, r4, lsr fp
   1dbf4:	adc	r1, r1, r5
   1dbf8:	subs	r0, r0, ip
   1dbfc:	mov	r5, r2
   1dc00:	sbc	r1, r1, r3
   1dc04:	cmp	lr, #0
   1dc08:	strdne	r4, [lr]
   1dc0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dc10 <__libc_csu_init@@Base>:
   1dc10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dc14:	mov	r7, r0
   1dc18:	ldr	r6, [pc, #72]	; 1dc68 <__libc_csu_init@@Base+0x58>
   1dc1c:	ldr	r5, [pc, #72]	; 1dc6c <__libc_csu_init@@Base+0x5c>
   1dc20:	add	r6, pc, r6
   1dc24:	add	r5, pc, r5
   1dc28:	sub	r6, r6, r5
   1dc2c:	mov	r8, r1
   1dc30:	mov	r9, r2
   1dc34:	bl	11f7c <fdopen@plt-0x20>
   1dc38:	asrs	r6, r6, #2
   1dc3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dc40:	mov	r4, #0
   1dc44:	add	r4, r4, #1
   1dc48:	ldr	r3, [r5], #4
   1dc4c:	mov	r2, r9
   1dc50:	mov	r1, r8
   1dc54:	mov	r0, r7
   1dc58:	blx	r3
   1dc5c:	cmp	r6, r4
   1dc60:	bne	1dc44 <__libc_csu_init@@Base+0x34>
   1dc64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dc68:	ldrdeq	r1, [r1], -ip
   1dc6c:	andeq	r1, r1, r4, asr #5

0001dc70 <__libc_csu_fini@@Base>:
   1dc70:	bx	lr

Disassembly of section .fini:

0001dc74 <.fini>:
   1dc74:	push	{r3, lr}
   1dc78:	pop	{r3, pc}
