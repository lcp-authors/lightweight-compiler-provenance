
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010a9c <.init>:
   10a9c:	push	{r3, lr}
   10aa0:	bl	10b94 <_start@@Base+0x3c>
   10aa4:	pop	{r3, pc}

Disassembly of section .plt:

00010aa8 <strcmp@plt-0x14>:
   10aa8:	push	{lr}		; (str lr, [sp, #-4]!)
   10aac:	ldr	lr, [pc, #4]	; 10ab8 <strcmp@plt-0x4>
   10ab0:	add	lr, pc, lr
   10ab4:	ldr	pc, [lr, #8]!
   10ab8:	andeq	r2, r1, r8, asr #10

00010abc <strcmp@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #73728	; 0x12000
   10ac4:	ldr	pc, [ip, #1352]!	; 0x548

00010ac8 <printf@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1344]!	; 0x540

00010ad4 <free@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1336]!	; 0x538

00010ae0 <strdup@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1328]!	; 0x530

00010aec <strcpy@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1320]!	; 0x528

00010af8 <puts@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1312]!	; 0x520

00010b04 <malloc@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1304]!	; 0x518

00010b10 <__libc_start_main@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1296]!	; 0x510

00010b1c <__gmon_start__@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1288]!	; 0x508

00010b28 <strlen@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1280]!	; 0x500

00010b34 <setvbuf@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b40 <putchar@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b4c <abort@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1256]!	; 0x4e8

Disassembly of section .text:

00010b58 <_start@@Base>:
   10b58:	mov	fp, #0
   10b5c:	mov	lr, #0
   10b60:	pop	{r1}		; (ldr r1, [sp], #4)
   10b64:	mov	r2, sp
   10b68:	push	{r2}		; (str r2, [sp, #-4]!)
   10b6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b70:	ldr	ip, [pc, #16]	; 10b88 <_start@@Base+0x30>
   10b74:	push	{ip}		; (str ip, [sp, #-4]!)
   10b78:	ldr	r0, [pc, #12]	; 10b8c <_start@@Base+0x34>
   10b7c:	ldr	r3, [pc, #12]	; 10b90 <_start@@Base+0x38>
   10b80:	bl	10b10 <__libc_start_main@plt>
   10b84:	bl	10b4c <abort@plt>
   10b88:	andeq	r1, r1, r0, lsl #27
   10b8c:	andeq	r1, r1, ip, asr #16
   10b90:	andeq	r1, r1, r0, lsr #26
   10b94:	ldr	r3, [pc, #20]	; 10bb0 <_start@@Base+0x58>
   10b98:	ldr	r2, [pc, #20]	; 10bb4 <_start@@Base+0x5c>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r2, [r3, r2]
   10ba4:	cmp	r2, #0
   10ba8:	bxeq	lr
   10bac:	b	10b1c <__gmon_start__@plt>
   10bb0:	andeq	r2, r1, ip, asr r4
   10bb4:	andeq	r0, r0, r0, asr #32
   10bb8:	ldr	r0, [pc, #24]	; 10bd8 <_start@@Base+0x80>
   10bbc:	ldr	r3, [pc, #24]	; 10bdc <_start@@Base+0x84>
   10bc0:	cmp	r3, r0
   10bc4:	bxeq	lr
   10bc8:	ldr	r3, [pc, #16]	; 10be0 <_start@@Base+0x88>
   10bcc:	cmp	r3, #0
   10bd0:	bxeq	lr
   10bd4:	bx	r3
   10bd8:	andeq	r3, r2, ip, asr #32
   10bdc:	andeq	r3, r2, ip, asr #32
   10be0:	andeq	r0, r0, r0
   10be4:	ldr	r0, [pc, #36]	; 10c10 <_start@@Base+0xb8>
   10be8:	ldr	r1, [pc, #36]	; 10c14 <_start@@Base+0xbc>
   10bec:	sub	r1, r1, r0
   10bf0:	asr	r1, r1, #2
   10bf4:	add	r1, r1, r1, lsr #31
   10bf8:	asrs	r1, r1, #1
   10bfc:	bxeq	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <_start@@Base+0xc0>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	andeq	r3, r2, ip, asr #32
   10c14:	andeq	r3, r2, ip, asr #32
   10c18:	andeq	r0, r0, r0
   10c1c:	push	{r4, lr}
   10c20:	ldr	r4, [pc, #24]	; 10c40 <_start@@Base+0xe8>
   10c24:	ldrb	r3, [r4]
   10c28:	cmp	r3, #0
   10c2c:	popne	{r4, pc}
   10c30:	bl	10bb8 <_start@@Base+0x60>
   10c34:	mov	r3, #1
   10c38:	strb	r3, [r4]
   10c3c:	pop	{r4, pc}
   10c40:	andeq	r3, r2, r8, asr r0
   10c44:	b	10be4 <_start@@Base+0x8c>

00010c48 <_l@@Base>:
   10c48:	sub	sp, sp, #12
   10c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c50:	add	fp, sp, #28
   10c54:	sub	sp, sp, #8
   10c58:	mov	r9, r0
   10c5c:	add	r0, fp, #8
   10c60:	stm	r0, {r1, r2, r3}
   10c64:	mov	r0, #12
   10c68:	bl	10b04 <malloc@plt>
   10c6c:	mov	r1, #0
   10c70:	mov	r8, r0
   10c74:	cmp	r9, #1
   10c78:	str	r1, [r0]
   10c7c:	stmib	r0, {r1, r9}
   10c80:	add	r0, fp, #8
   10c84:	str	r0, [sp, #4]
   10c88:	blt	10cfc <_l@@Base+0xb4>
   10c8c:	mov	r5, #0
   10c90:	ldr	r0, [sp, #4]
   10c94:	cmp	r5, #0
   10c98:	mov	sl, r8
   10c9c:	addne	sl, r6, #4
   10ca0:	add	r1, r0, #4
   10ca4:	str	r1, [sp, #4]
   10ca8:	ldr	r7, [r0]
   10cac:	mov	r0, #12
   10cb0:	bl	10b04 <malloc@plt>
   10cb4:	cmp	r5, #0
   10cb8:	mov	r4, r0
   10cbc:	str	r0, [sl]
   10cc0:	moveq	r6, r5
   10cc4:	str	r6, [r0, #8]
   10cc8:	mov	r0, r7
   10ccc:	bl	10b28 <strlen@plt>
   10cd0:	add	r0, r0, #1
   10cd4:	bl	10b04 <malloc@plt>
   10cd8:	mov	r1, r7
   10cdc:	str	r0, [r4]
   10ce0:	bl	10aec <strcpy@plt>
   10ce4:	add	r5, r5, #1
   10ce8:	mov	r6, r4
   10cec:	cmp	r9, r5
   10cf0:	bne	10c90 <_l@@Base+0x48>
   10cf4:	mov	r1, #0
   10cf8:	b	10cfc <_l@@Base+0xb4>
   10cfc:	str	r1, [r4, #4]
   10d00:	str	r4, [r8, #4]
   10d04:	mov	r0, r8
   10d08:	sub	sp, fp, #28
   10d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d10:	add	sp, sp, #12
   10d14:	bx	lr

00010d18 <_f@@Base>:
   10d18:	cmp	r0, #0
   10d1c:	moveq	r0, #0
   10d20:	bxeq	lr
   10d24:	ldr	r0, [r0]
   10d28:	mov	r2, #0
   10d2c:	cmp	r1, #1
   10d30:	blt	10d58 <_f@@Base+0x40>
   10d34:	cmp	r0, #0
   10d38:	beq	10d58 <_f@@Base+0x40>
   10d3c:	mov	r2, #0
   10d40:	ldr	r0, [r0, #4]
   10d44:	add	r2, r2, #1
   10d48:	cmp	r2, r1
   10d4c:	bge	10d58 <_f@@Base+0x40>
   10d50:	cmp	r0, #0
   10d54:	bne	10d40 <_f@@Base+0x28>
   10d58:	cmp	r2, r1
   10d5c:	movwne	r0, #8830	; 0x227e
   10d60:	movtne	r0, #1
   10d64:	bxne	lr
   10d68:	ldr	r0, [r0]
   10d6c:	bx	lr

00010d70 <teste_lista_nova@@Base>:
   10d70:	push	{r4, sl, fp, lr}
   10d74:	add	fp, sp, #8
   10d78:	movw	r0, #7568	; 0x1d90
   10d7c:	movt	r0, #1
   10d80:	bl	10ac8 <printf@plt>
   10d84:	bl	118e8 <lista_nova@@Base>
   10d88:	cmp	r0, #0
   10d8c:	beq	10dc4 <teste_lista_nova@@Base+0x54>
   10d90:	mov	r4, r0
   10d94:	ldr	r0, [r0, #8]
   10d98:	cmp	r0, #0
   10d9c:	beq	10de0 <teste_lista_nova@@Base+0x70>
   10da0:	movw	r0, #7605	; 0x1db5
   10da4:	movt	r0, #1
   10da8:	bl	10ac8 <printf@plt>
   10dac:	mov	r0, r4
   10db0:	bl	1190c <lista_apaga@@Base>
   10db4:	mov	r0, #10
   10db8:	bl	10b40 <putchar@plt>
   10dbc:	mov	r0, #1
   10dc0:	pop	{r4, sl, fp, pc}
   10dc4:	movw	r0, #7583	; 0x1d9f
   10dc8:	movt	r0, #1
   10dcc:	bl	10ac8 <printf@plt>
   10dd0:	mov	r0, #10
   10dd4:	bl	10b40 <putchar@plt>
   10dd8:	mov	r0, #1
   10ddc:	pop	{r4, sl, fp, pc}
   10de0:	mov	r0, r4
   10de4:	bl	1190c <lista_apaga@@Base>
   10de8:	movw	r0, #8831	; 0x227f
   10dec:	movt	r0, #1
   10df0:	bl	10af8 <puts@plt>
   10df4:	mov	r0, #0
   10df8:	pop	{r4, sl, fp, pc}

00010dfc <teste_lista_insere@@Base>:
   10dfc:	push	{r4, r5, r6, r7, fp, lr}
   10e00:	add	fp, sp, #16
   10e04:	movw	r1, #7640	; 0x1dd8
   10e08:	mov	r0, #2
   10e0c:	movt	r1, #1
   10e10:	mov	r2, r1
   10e14:	bl	10c48 <_l@@Base>
   10e18:	mov	r5, r0
   10e1c:	movw	r0, #7650	; 0x1de2
   10e20:	movt	r0, #1
   10e24:	bl	10ac8 <printf@plt>
   10e28:	ldr	r0, [r5]
   10e2c:	movw	r1, #7644	; 0x1ddc
   10e30:	movt	r1, #1
   10e34:	ldr	r2, [r0, #4]
   10e38:	mov	r0, r5
   10e3c:	bl	119ac <lista_insere@@Base>
   10e40:	mov	r4, #0
   10e44:	cmp	r0, #0
   10e48:	beq	10e5c <teste_lista_insere@@Base+0x60>
   10e4c:	ldr	r0, [r5, #8]
   10e50:	cmp	r0, #3
   10e54:	bne	10e78 <teste_lista_insere@@Base+0x7c>
   10e58:	b	10e94 <teste_lista_insere@@Base+0x98>
   10e5c:	movw	r0, #7667	; 0x1df3
   10e60:	movt	r0, #1
   10e64:	bl	10ac8 <printf@plt>
   10e68:	mov	r4, #1
   10e6c:	ldr	r0, [r5, #8]
   10e70:	cmp	r0, #3
   10e74:	beq	10e94 <teste_lista_insere@@Base+0x98>
   10e78:	movw	r0, #7709	; 0x1e1d
   10e7c:	movt	r0, #1
   10e80:	bl	10ac8 <printf@plt>
   10e84:	ldr	r0, [r5, #8]
   10e88:	add	r4, r4, #1
   10e8c:	cmp	r0, #3
   10e90:	bne	110ec <teste_lista_insere@@Base+0x2f0>
   10e94:	ldr	r6, [r5]
   10e98:	movw	r1, #7640	; 0x1dd8
   10e9c:	movt	r1, #1
   10ea0:	ldr	r0, [r6]
   10ea4:	bl	10abc <strcmp@plt>
   10ea8:	cmp	r0, #0
   10eac:	bne	10ee8 <teste_lista_insere@@Base+0xec>
   10eb0:	ldr	r7, [r6, #4]
   10eb4:	movw	r1, #7644	; 0x1ddc
   10eb8:	movt	r1, #1
   10ebc:	ldr	r0, [r7]
   10ec0:	bl	10abc <strcmp@plt>
   10ec4:	cmp	r0, #0
   10ec8:	bne	10ee8 <teste_lista_insere@@Base+0xec>
   10ecc:	ldr	r0, [r7, #4]
   10ed0:	movw	r1, #7640	; 0x1dd8
   10ed4:	movt	r1, #1
   10ed8:	ldr	r0, [r0]
   10edc:	bl	10abc <strcmp@plt>
   10ee0:	cmp	r0, #0
   10ee4:	beq	10efc <teste_lista_insere@@Base+0x100>
   10ee8:	movw	r0, #7769	; 0x1e59
   10eec:	movt	r0, #1
   10ef0:	bl	10ac8 <printf@plt>
   10ef4:	ldr	r6, [r5]
   10ef8:	add	r4, r4, #1
   10efc:	movw	r1, #7644	; 0x1ddc
   10f00:	mov	r0, r5
   10f04:	mov	r2, r6
   10f08:	movt	r1, #1
   10f0c:	bl	119ac <lista_insere@@Base>
   10f10:	ldr	r1, [r5]
   10f14:	cmp	r0, r1
   10f18:	beq	10f2c <teste_lista_insere@@Base+0x130>
   10f1c:	movw	r0, #7823	; 0x1e8f
   10f20:	movt	r0, #1
   10f24:	bl	10ac8 <printf@plt>
   10f28:	add	r4, r4, #1
   10f2c:	ldr	r0, [r5, #8]
   10f30:	cmp	r0, #4
   10f34:	beq	10f54 <teste_lista_insere@@Base+0x158>
   10f38:	movw	r0, #7871	; 0x1ebf
   10f3c:	movt	r0, #1
   10f40:	bl	10ac8 <printf@plt>
   10f44:	ldr	r0, [r5, #8]
   10f48:	add	r4, r4, #1
   10f4c:	cmp	r0, #4
   10f50:	bne	110ec <teste_lista_insere@@Base+0x2f0>
   10f54:	ldr	r6, [r5]
   10f58:	movw	r1, #7644	; 0x1ddc
   10f5c:	movt	r1, #1
   10f60:	ldr	r0, [r6]
   10f64:	bl	10abc <strcmp@plt>
   10f68:	cmp	r0, #0
   10f6c:	bne	10fc4 <teste_lista_insere@@Base+0x1c8>
   10f70:	ldr	r6, [r6, #4]
   10f74:	movw	r1, #7640	; 0x1dd8
   10f78:	movt	r1, #1
   10f7c:	ldr	r0, [r6]
   10f80:	bl	10abc <strcmp@plt>
   10f84:	cmp	r0, #0
   10f88:	bne	10fc4 <teste_lista_insere@@Base+0x1c8>
   10f8c:	ldr	r6, [r6, #4]
   10f90:	movw	r1, #7644	; 0x1ddc
   10f94:	movt	r1, #1
   10f98:	ldr	r0, [r6]
   10f9c:	bl	10abc <strcmp@plt>
   10fa0:	cmp	r0, #0
   10fa4:	bne	10fc4 <teste_lista_insere@@Base+0x1c8>
   10fa8:	ldr	r0, [r6, #4]
   10fac:	movw	r1, #7640	; 0x1dd8
   10fb0:	movt	r1, #1
   10fb4:	ldr	r0, [r0]
   10fb8:	bl	10abc <strcmp@plt>
   10fbc:	cmp	r0, #0
   10fc0:	beq	10fd4 <teste_lista_insere@@Base+0x1d8>
   10fc4:	movw	r0, #7769	; 0x1e59
   10fc8:	movt	r0, #1
   10fcc:	bl	10ac8 <printf@plt>
   10fd0:	add	r4, r4, #1
   10fd4:	movw	r1, #7644	; 0x1ddc
   10fd8:	mov	r0, r5
   10fdc:	mov	r2, #0
   10fe0:	movt	r1, #1
   10fe4:	bl	119ac <lista_insere@@Base>
   10fe8:	ldr	r0, [r5, #8]
   10fec:	cmp	r0, #5
   10ff0:	beq	11010 <teste_lista_insere@@Base+0x214>
   10ff4:	movw	r0, #7931	; 0x1efb
   10ff8:	movt	r0, #1
   10ffc:	bl	10ac8 <printf@plt>
   11000:	ldr	r0, [r5, #8]
   11004:	add	r4, r4, #1
   11008:	cmp	r0, #5
   1100c:	bne	110ec <teste_lista_insere@@Base+0x2f0>
   11010:	ldr	r0, [r5]
   11014:	movw	r1, #7644	; 0x1ddc
   11018:	movt	r1, #1
   1101c:	ldr	r0, [r0, #4]
   11020:	ldr	r0, [r0, #4]
   11024:	ldr	r0, [r0, #4]
   11028:	ldr	r0, [r0, #4]
   1102c:	ldr	r0, [r0]
   11030:	bl	10abc <strcmp@plt>
   11034:	cmp	r0, #0
   11038:	beq	1104c <teste_lista_insere@@Base+0x250>
   1103c:	movw	r0, #7769	; 0x1e59
   11040:	movt	r0, #1
   11044:	bl	10ac8 <printf@plt>
   11048:	add	r4, r4, #1
   1104c:	mov	r0, r5
   11050:	bl	1190c <lista_apaga@@Base>
   11054:	bl	118e8 <lista_nova@@Base>
   11058:	movw	r1, #7644	; 0x1ddc
   1105c:	mov	r2, #0
   11060:	mov	r5, r0
   11064:	movt	r1, #1
   11068:	bl	119ac <lista_insere@@Base>
   1106c:	ldr	r0, [r5, #8]
   11070:	cmp	r0, #1
   11074:	beq	11088 <teste_lista_insere@@Base+0x28c>
   11078:	movw	r0, #7991	; 0x1f37
   1107c:	movt	r0, #1
   11080:	bl	10ac8 <printf@plt>
   11084:	add	r4, r4, #1
   11088:	mov	r0, r5
   1108c:	bl	1197c <lista_tamanho@@Base>
   11090:	cmp	r0, #1
   11094:	bne	110e4 <teste_lista_insere@@Base+0x2e8>
   11098:	ldr	r0, [r5]
   1109c:	movw	r1, #7644	; 0x1ddc
   110a0:	movt	r1, #1
   110a4:	ldr	r0, [r0]
   110a8:	bl	10abc <strcmp@plt>
   110ac:	cmp	r0, #0
   110b0:	beq	110dc <teste_lista_insere@@Base+0x2e0>
   110b4:	movw	r0, #7769	; 0x1e59
   110b8:	movt	r0, #1
   110bc:	bl	10ac8 <printf@plt>
   110c0:	mov	r0, r5
   110c4:	bl	1190c <lista_apaga@@Base>
   110c8:	add	r4, r4, #1
   110cc:	mov	r0, #10
   110d0:	bl	10b40 <putchar@plt>
   110d4:	mov	r0, r4
   110d8:	pop	{r4, r5, r6, r7, fp, pc}
   110dc:	mov	r0, r5
   110e0:	bl	1190c <lista_apaga@@Base>
   110e4:	cmp	r4, #0
   110e8:	beq	110fc <teste_lista_insere@@Base+0x300>
   110ec:	mov	r0, #10
   110f0:	bl	10b40 <putchar@plt>
   110f4:	mov	r0, r4
   110f8:	pop	{r4, r5, r6, r7, fp, pc}
   110fc:	movw	r0, #8831	; 0x227f
   11100:	movt	r0, #1
   11104:	bl	10af8 <puts@plt>
   11108:	mov	r4, #0
   1110c:	mov	r0, r4
   11110:	pop	{r4, r5, r6, r7, fp, pc}

00011114 <teste_lista_remove@@Base>:
   11114:	push	{r4, r5, r6, sl, fp, lr}
   11118:	add	fp, sp, #16
   1111c:	sub	sp, sp, #8
   11120:	movw	r1, #8060	; 0x1f7c
   11124:	movw	r0, #8063	; 0x1f7f
   11128:	movw	r2, #8054	; 0x1f76
   1112c:	movw	r3, #8057	; 0x1f79
   11130:	movt	r1, #1
   11134:	movt	r0, #1
   11138:	movt	r2, #1
   1113c:	movt	r3, #1
   11140:	str	r1, [sp]
   11144:	movw	r1, #8051	; 0x1f73
   11148:	str	r0, [sp, #4]
   1114c:	mov	r0, #5
   11150:	movt	r1, #1
   11154:	bl	10c48 <_l@@Base>
   11158:	mov	r4, r0
   1115c:	movw	r0, #8066	; 0x1f82
   11160:	movt	r0, #1
   11164:	bl	10ac8 <printf@plt>
   11168:	ldr	r0, [r4]
   1116c:	ldr	r0, [r0, #4]
   11170:	ldr	r0, [r0, #4]
   11174:	ldr	r1, [r0, #4]
   11178:	mov	r0, r4
   1117c:	bl	11a84 <lista_remove@@Base>
   11180:	ldr	r1, [r4, #4]
   11184:	cmp	r0, r1
   11188:	beq	11268 <teste_lista_remove@@Base+0x154>
   1118c:	movw	r0, #8083	; 0x1f93
   11190:	movt	r0, #1
   11194:	bl	10ac8 <printf@plt>
   11198:	mov	r5, #1
   1119c:	ldr	r0, [r4, #8]
   111a0:	cmp	r0, #4
   111a4:	beq	111b8 <teste_lista_remove@@Base+0xa4>
   111a8:	movw	r0, #8140	; 0x1fcc
   111ac:	movt	r0, #1
   111b0:	bl	10ac8 <printf@plt>
   111b4:	add	r5, r5, #1
   111b8:	ldr	r6, [r4]
   111bc:	movw	r1, #8051	; 0x1f73
   111c0:	movt	r1, #1
   111c4:	ldr	r0, [r6]
   111c8:	bl	10abc <strcmp@plt>
   111cc:	cmp	r0, #0
   111d0:	bne	11228 <teste_lista_remove@@Base+0x114>
   111d4:	ldr	r6, [r6, #4]
   111d8:	movw	r1, #8054	; 0x1f76
   111dc:	movt	r1, #1
   111e0:	ldr	r0, [r6]
   111e4:	bl	10abc <strcmp@plt>
   111e8:	cmp	r0, #0
   111ec:	bne	11228 <teste_lista_remove@@Base+0x114>
   111f0:	ldr	r6, [r6, #4]
   111f4:	movw	r1, #8057	; 0x1f79
   111f8:	movt	r1, #1
   111fc:	ldr	r0, [r6]
   11200:	bl	10abc <strcmp@plt>
   11204:	cmp	r0, #0
   11208:	bne	11228 <teste_lista_remove@@Base+0x114>
   1120c:	ldr	r0, [r6, #4]
   11210:	movw	r1, #8063	; 0x1f7f
   11214:	movt	r1, #1
   11218:	ldr	r0, [r0]
   1121c:	bl	10abc <strcmp@plt>
   11220:	cmp	r0, #0
   11224:	beq	11238 <teste_lista_remove@@Base+0x124>
   11228:	movw	r0, #8200	; 0x2008
   1122c:	movt	r0, #1
   11230:	bl	10ac8 <printf@plt>
   11234:	add	r5, r5, #1
   11238:	mov	r0, r4
   1123c:	mov	r1, #0
   11240:	bl	11a84 <lista_remove@@Base>
   11244:	cmp	r0, #0
   11248:	beq	1127c <teste_lista_remove@@Base+0x168>
   1124c:	movw	r0, #8254	; 0x203e
   11250:	movt	r0, #1
   11254:	bl	10ac8 <printf@plt>
   11258:	mov	r0, r4
   1125c:	bl	1190c <lista_apaga@@Base>
   11260:	add	r5, r5, #1
   11264:	b	1128c <teste_lista_remove@@Base+0x178>
   11268:	mov	r5, #0
   1126c:	ldr	r0, [r4, #8]
   11270:	cmp	r0, #4
   11274:	bne	111a8 <teste_lista_remove@@Base+0x94>
   11278:	b	111b8 <teste_lista_remove@@Base+0xa4>
   1127c:	mov	r0, r4
   11280:	bl	1190c <lista_apaga@@Base>
   11284:	cmp	r5, #0
   11288:	beq	112a0 <teste_lista_remove@@Base+0x18c>
   1128c:	mov	r0, #10
   11290:	bl	10b40 <putchar@plt>
   11294:	mov	r0, r5
   11298:	sub	sp, fp, #16
   1129c:	pop	{r4, r5, r6, sl, fp, pc}
   112a0:	movw	r0, #8831	; 0x227f
   112a4:	movt	r0, #1
   112a8:	bl	10af8 <puts@plt>
   112ac:	mov	r5, #0
   112b0:	mov	r0, r5
   112b4:	sub	sp, fp, #16
   112b8:	pop	{r4, r5, r6, sl, fp, pc}

000112bc <teste_lista_pesquisa@@Base>:
   112bc:	push	{r4, r5, r6, sl, fp, lr}
   112c0:	add	fp, sp, #16
   112c4:	sub	sp, sp, #16
   112c8:	movw	r1, #7640	; 0x1dd8
   112cc:	movw	r6, #8304	; 0x2070
   112d0:	mov	r0, #7
   112d4:	movt	r1, #1
   112d8:	movt	r6, #1
   112dc:	mov	r2, r1
   112e0:	mov	r3, r1
   112e4:	stm	sp, {r1, r6}
   112e8:	str	r1, [sp, #8]
   112ec:	str	r1, [sp, #12]
   112f0:	bl	10c48 <_l@@Base>
   112f4:	mov	r5, r0
   112f8:	movw	r0, #8307	; 0x2073
   112fc:	movt	r0, #1
   11300:	bl	10ac8 <printf@plt>
   11304:	mov	r0, r5
   11308:	mov	r1, r6
   1130c:	mov	r2, #0
   11310:	mov	r4, #0
   11314:	bl	11b18 <lista_pesquisa@@Base>
   11318:	ldr	r1, [r5]
   1131c:	ldr	r1, [r1, #4]
   11320:	ldr	r1, [r1, #4]
   11324:	ldr	r1, [r1, #4]
   11328:	ldr	r1, [r1, #4]
   1132c:	cmp	r0, r1
   11330:	beq	11344 <teste_lista_pesquisa@@Base+0x88>
   11334:	movw	r0, #8326	; 0x2086
   11338:	movt	r0, #1
   1133c:	bl	10ac8 <printf@plt>
   11340:	mov	r4, #1
   11344:	movw	r1, #8397	; 0x20cd
   11348:	mov	r0, r5
   1134c:	mov	r2, #0
   11350:	movt	r1, #1
   11354:	bl	11b18 <lista_pesquisa@@Base>
   11358:	cmp	r0, #0
   1135c:	beq	11370 <teste_lista_pesquisa@@Base+0xb4>
   11360:	movw	r0, #8404	; 0x20d4
   11364:	movt	r0, #1
   11368:	bl	10ac8 <printf@plt>
   1136c:	add	r4, r4, #1
   11370:	movw	r1, #7640	; 0x1dd8
   11374:	mov	r0, r5
   11378:	mov	r2, #1
   1137c:	movt	r1, #1
   11380:	bl	11b18 <lista_pesquisa@@Base>
   11384:	ldr	r1, [r5]
   11388:	ldr	r1, [r1, #4]
   1138c:	ldr	r1, [r1, #4]
   11390:	ldr	r1, [r1, #4]
   11394:	ldr	r1, [r1, #4]
   11398:	ldr	r1, [r1, #4]
   1139c:	ldr	r1, [r1, #4]
   113a0:	cmp	r0, r1
   113a4:	beq	113b8 <teste_lista_pesquisa@@Base+0xfc>
   113a8:	movw	r0, #8326	; 0x2086
   113ac:	movt	r0, #1
   113b0:	bl	10ac8 <printf@plt>
   113b4:	add	r4, r4, #1
   113b8:	movw	r1, #8397	; 0x20cd
   113bc:	mov	r0, r5
   113c0:	mov	r2, #1
   113c4:	movt	r1, #1
   113c8:	bl	11b18 <lista_pesquisa@@Base>
   113cc:	cmp	r0, #0
   113d0:	beq	113f0 <teste_lista_pesquisa@@Base+0x134>
   113d4:	movw	r0, #8404	; 0x20d4
   113d8:	movt	r0, #1
   113dc:	bl	10ac8 <printf@plt>
   113e0:	mov	r0, r5
   113e4:	bl	1190c <lista_apaga@@Base>
   113e8:	add	r4, r4, #1
   113ec:	b	11400 <teste_lista_pesquisa@@Base+0x144>
   113f0:	mov	r0, r5
   113f4:	bl	1190c <lista_apaga@@Base>
   113f8:	cmp	r4, #0
   113fc:	beq	11414 <teste_lista_pesquisa@@Base+0x158>
   11400:	mov	r0, #10
   11404:	bl	10b40 <putchar@plt>
   11408:	mov	r0, r4
   1140c:	sub	sp, fp, #16
   11410:	pop	{r4, r5, r6, sl, fp, pc}
   11414:	movw	r0, #8831	; 0x227f
   11418:	movt	r0, #1
   1141c:	bl	10af8 <puts@plt>
   11420:	mov	r4, #0
   11424:	mov	r0, r4
   11428:	sub	sp, fp, #16
   1142c:	pop	{r4, r5, r6, sl, fp, pc}

00011430 <teste_lista_ordena@@Base>:
   11430:	push	{r4, r5, r6, sl, fp, lr}
   11434:	add	fp, sp, #16
   11438:	sub	sp, sp, #8
   1143c:	movw	r1, #8477	; 0x211d
   11440:	movw	r0, #8480	; 0x2120
   11444:	movw	r2, #8471	; 0x2117
   11448:	movw	r3, #8474	; 0x211a
   1144c:	movt	r1, #1
   11450:	movt	r0, #1
   11454:	movt	r2, #1
   11458:	movt	r3, #1
   1145c:	str	r1, [sp]
   11460:	movw	r1, #8468	; 0x2114
   11464:	str	r0, [sp, #4]
   11468:	mov	r0, #5
   1146c:	movt	r1, #1
   11470:	bl	10c48 <_l@@Base>
   11474:	mov	r5, r0
   11478:	movw	r0, #8483	; 0x2123
   1147c:	movt	r0, #1
   11480:	bl	10ac8 <printf@plt>
   11484:	mov	r0, #0
   11488:	mov	r4, #0
   1148c:	bl	11bc4 <lista_ordena@@Base>
   11490:	cmn	r0, #1
   11494:	beq	114a8 <teste_lista_ordena@@Base+0x78>
   11498:	movw	r0, #8500	; 0x2134
   1149c:	movt	r0, #1
   114a0:	bl	10ac8 <printf@plt>
   114a4:	mov	r4, #1
   114a8:	mov	r0, r5
   114ac:	bl	11bc4 <lista_ordena@@Base>
   114b0:	ldr	r6, [r5]
   114b4:	movw	r1, #8468	; 0x2114
   114b8:	movt	r1, #1
   114bc:	ldr	r0, [r6]
   114c0:	bl	10abc <strcmp@plt>
   114c4:	cmp	r0, #0
   114c8:	bne	1153c <teste_lista_ordena@@Base+0x10c>
   114cc:	ldr	r6, [r6, #4]
   114d0:	movw	r1, #8471	; 0x2117
   114d4:	movt	r1, #1
   114d8:	ldr	r0, [r6]
   114dc:	bl	10abc <strcmp@plt>
   114e0:	cmp	r0, #0
   114e4:	bne	1153c <teste_lista_ordena@@Base+0x10c>
   114e8:	ldr	r6, [r6, #4]
   114ec:	movw	r1, #8477	; 0x211d
   114f0:	movt	r1, #1
   114f4:	ldr	r0, [r6]
   114f8:	bl	10abc <strcmp@plt>
   114fc:	cmp	r0, #0
   11500:	bne	1153c <teste_lista_ordena@@Base+0x10c>
   11504:	ldr	r6, [r6, #4]
   11508:	movw	r1, #8480	; 0x2120
   1150c:	movt	r1, #1
   11510:	ldr	r0, [r6]
   11514:	bl	10abc <strcmp@plt>
   11518:	cmp	r0, #0
   1151c:	bne	1153c <teste_lista_ordena@@Base+0x10c>
   11520:	ldr	r0, [r6, #4]
   11524:	movw	r1, #8474	; 0x211a
   11528:	movt	r1, #1
   1152c:	ldr	r0, [r0]
   11530:	bl	10abc <strcmp@plt>
   11534:	cmp	r0, #0
   11538:	beq	1154c <teste_lista_ordena@@Base+0x11c>
   1153c:	movw	r0, #8546	; 0x2162
   11540:	movt	r0, #1
   11544:	bl	10ac8 <printf@plt>
   11548:	add	r4, r4, #1
   1154c:	ldr	r6, [r5, #4]
   11550:	movw	r1, #8474	; 0x211a
   11554:	movt	r1, #1
   11558:	ldr	r0, [r6]
   1155c:	bl	10abc <strcmp@plt>
   11560:	cmp	r0, #0
   11564:	bne	115d8 <teste_lista_ordena@@Base+0x1a8>
   11568:	ldr	r6, [r6, #8]
   1156c:	movw	r1, #8480	; 0x2120
   11570:	movt	r1, #1
   11574:	ldr	r0, [r6]
   11578:	bl	10abc <strcmp@plt>
   1157c:	cmp	r0, #0
   11580:	bne	115d8 <teste_lista_ordena@@Base+0x1a8>
   11584:	ldr	r6, [r6, #8]
   11588:	movw	r1, #8477	; 0x211d
   1158c:	movt	r1, #1
   11590:	ldr	r0, [r6]
   11594:	bl	10abc <strcmp@plt>
   11598:	cmp	r0, #0
   1159c:	bne	115d8 <teste_lista_ordena@@Base+0x1a8>
   115a0:	ldr	r6, [r6, #8]
   115a4:	movw	r1, #8471	; 0x2117
   115a8:	movt	r1, #1
   115ac:	ldr	r0, [r6]
   115b0:	bl	10abc <strcmp@plt>
   115b4:	cmp	r0, #0
   115b8:	bne	115d8 <teste_lista_ordena@@Base+0x1a8>
   115bc:	ldr	r0, [r6, #8]
   115c0:	movw	r1, #8468	; 0x2114
   115c4:	movt	r1, #1
   115c8:	ldr	r0, [r0]
   115cc:	bl	10abc <strcmp@plt>
   115d0:	cmp	r0, #0
   115d4:	beq	11604 <teste_lista_ordena@@Base+0x1d4>
   115d8:	movw	r0, #8607	; 0x219f
   115dc:	movt	r0, #1
   115e0:	bl	10ac8 <printf@plt>
   115e4:	mov	r0, r5
   115e8:	bl	1190c <lista_apaga@@Base>
   115ec:	add	r4, r4, #1
   115f0:	mov	r0, #10
   115f4:	bl	10b40 <putchar@plt>
   115f8:	mov	r0, r4
   115fc:	sub	sp, fp, #16
   11600:	pop	{r4, r5, r6, sl, fp, pc}
   11604:	mov	r0, r5
   11608:	bl	1190c <lista_apaga@@Base>
   1160c:	cmp	r4, #0
   11610:	bne	115f0 <teste_lista_ordena@@Base+0x1c0>
   11614:	movw	r0, #8831	; 0x227f
   11618:	movt	r0, #1
   1161c:	bl	10af8 <puts@plt>
   11620:	mov	r4, #0
   11624:	mov	r0, r4
   11628:	sub	sp, fp, #16
   1162c:	pop	{r4, r5, r6, sl, fp, pc}

00011630 <teste_lista_inverte@@Base>:
   11630:	push	{r4, r5, r6, sl, fp, lr}
   11634:	add	fp, sp, #16
   11638:	sub	sp, sp, #8
   1163c:	movw	r1, #8477	; 0x211d
   11640:	movw	r0, #8480	; 0x2120
   11644:	movw	r2, #8471	; 0x2117
   11648:	movw	r3, #8474	; 0x211a
   1164c:	movt	r1, #1
   11650:	movt	r0, #1
   11654:	movt	r2, #1
   11658:	movt	r3, #1
   1165c:	str	r1, [sp]
   11660:	movw	r1, #8468	; 0x2114
   11664:	str	r0, [sp, #4]
   11668:	mov	r0, #5
   1166c:	movt	r1, #1
   11670:	bl	10c48 <_l@@Base>
   11674:	mov	r5, r0
   11678:	movw	r0, #8669	; 0x21dd
   1167c:	movt	r0, #1
   11680:	bl	10ac8 <printf@plt>
   11684:	mov	r0, #0
   11688:	mov	r4, #0
   1168c:	bl	11c98 <lista_inverte@@Base>
   11690:	cmn	r0, #1
   11694:	beq	116a8 <teste_lista_inverte@@Base+0x78>
   11698:	movw	r0, #8500	; 0x2134
   1169c:	movt	r0, #1
   116a0:	bl	10ac8 <printf@plt>
   116a4:	mov	r4, #1
   116a8:	mov	r0, r5
   116ac:	bl	11c98 <lista_inverte@@Base>
   116b0:	ldr	r0, [r5, #8]
   116b4:	cmp	r0, #5
   116b8:	beq	116cc <teste_lista_inverte@@Base+0x9c>
   116bc:	movw	r0, #8687	; 0x21ef
   116c0:	movt	r0, #1
   116c4:	bl	10ac8 <printf@plt>
   116c8:	add	r4, r4, #1
   116cc:	ldr	r6, [r5]
   116d0:	movw	r1, #8480	; 0x2120
   116d4:	movt	r1, #1
   116d8:	ldr	r0, [r6]
   116dc:	bl	10abc <strcmp@plt>
   116e0:	cmp	r0, #0
   116e4:	bne	11758 <teste_lista_inverte@@Base+0x128>
   116e8:	ldr	r6, [r6, #4]
   116ec:	movw	r1, #8477	; 0x211d
   116f0:	movt	r1, #1
   116f4:	ldr	r0, [r6]
   116f8:	bl	10abc <strcmp@plt>
   116fc:	cmp	r0, #0
   11700:	bne	11758 <teste_lista_inverte@@Base+0x128>
   11704:	ldr	r6, [r6, #4]
   11708:	movw	r1, #8474	; 0x211a
   1170c:	movt	r1, #1
   11710:	ldr	r0, [r6]
   11714:	bl	10abc <strcmp@plt>
   11718:	cmp	r0, #0
   1171c:	bne	11758 <teste_lista_inverte@@Base+0x128>
   11720:	ldr	r6, [r6, #4]
   11724:	movw	r1, #8471	; 0x2117
   11728:	movt	r1, #1
   1172c:	ldr	r0, [r6]
   11730:	bl	10abc <strcmp@plt>
   11734:	cmp	r0, #0
   11738:	bne	11758 <teste_lista_inverte@@Base+0x128>
   1173c:	ldr	r0, [r6, #4]
   11740:	movw	r1, #8468	; 0x2114
   11744:	movt	r1, #1
   11748:	ldr	r0, [r0]
   1174c:	bl	10abc <strcmp@plt>
   11750:	cmp	r0, #0
   11754:	beq	11768 <teste_lista_inverte@@Base+0x138>
   11758:	movw	r0, #8731	; 0x221b
   1175c:	movt	r0, #1
   11760:	bl	10ac8 <printf@plt>
   11764:	add	r4, r4, #1
   11768:	ldr	r6, [r5, #4]
   1176c:	movw	r1, #8468	; 0x2114
   11770:	movt	r1, #1
   11774:	ldr	r0, [r6]
   11778:	bl	10abc <strcmp@plt>
   1177c:	cmp	r0, #0
   11780:	bne	117f4 <teste_lista_inverte@@Base+0x1c4>
   11784:	ldr	r6, [r6, #8]
   11788:	movw	r1, #8471	; 0x2117
   1178c:	movt	r1, #1
   11790:	ldr	r0, [r6]
   11794:	bl	10abc <strcmp@plt>
   11798:	cmp	r0, #0
   1179c:	bne	117f4 <teste_lista_inverte@@Base+0x1c4>
   117a0:	ldr	r6, [r6, #8]
   117a4:	movw	r1, #8474	; 0x211a
   117a8:	movt	r1, #1
   117ac:	ldr	r0, [r6]
   117b0:	bl	10abc <strcmp@plt>
   117b4:	cmp	r0, #0
   117b8:	bne	117f4 <teste_lista_inverte@@Base+0x1c4>
   117bc:	ldr	r6, [r6, #8]
   117c0:	movw	r1, #8477	; 0x211d
   117c4:	movt	r1, #1
   117c8:	ldr	r0, [r6]
   117cc:	bl	10abc <strcmp@plt>
   117d0:	cmp	r0, #0
   117d4:	bne	117f4 <teste_lista_inverte@@Base+0x1c4>
   117d8:	ldr	r0, [r6, #8]
   117dc:	movw	r1, #8480	; 0x2120
   117e0:	movt	r1, #1
   117e4:	ldr	r0, [r0]
   117e8:	bl	10abc <strcmp@plt>
   117ec:	cmp	r0, #0
   117f0:	beq	11820 <teste_lista_inverte@@Base+0x1f0>
   117f4:	movw	r0, #8607	; 0x219f
   117f8:	movt	r0, #1
   117fc:	bl	10ac8 <printf@plt>
   11800:	mov	r0, r5
   11804:	bl	1190c <lista_apaga@@Base>
   11808:	add	r4, r4, #1
   1180c:	mov	r0, #10
   11810:	bl	10b40 <putchar@plt>
   11814:	mov	r0, r4
   11818:	sub	sp, fp, #16
   1181c:	pop	{r4, r5, r6, sl, fp, pc}
   11820:	mov	r0, r5
   11824:	bl	1190c <lista_apaga@@Base>
   11828:	cmp	r4, #0
   1182c:	bne	1180c <teste_lista_inverte@@Base+0x1dc>
   11830:	movw	r0, #8831	; 0x227f
   11834:	movt	r0, #1
   11838:	bl	10af8 <puts@plt>
   1183c:	mov	r4, #0
   11840:	mov	r0, r4
   11844:	sub	sp, fp, #16
   11848:	pop	{r4, r5, r6, sl, fp, pc}

0001184c <main@@Base>:
   1184c:	push	{r4, sl, fp, lr}
   11850:	add	fp, sp, #8
   11854:	movw	r0, #12372	; 0x3054
   11858:	mov	r1, #0
   1185c:	mov	r2, #2
   11860:	mov	r3, #0
   11864:	movt	r0, #2
   11868:	ldr	r0, [r0]
   1186c:	bl	10b34 <setvbuf@plt>
   11870:	movw	r0, #12368	; 0x3050
   11874:	mov	r1, #0
   11878:	mov	r2, #2
   1187c:	mov	r3, #0
   11880:	movt	r0, #2
   11884:	ldr	r0, [r0]
   11888:	bl	10b34 <setvbuf@plt>
   1188c:	bl	10d70 <teste_lista_nova@@Base>
   11890:	mov	r4, r0
   11894:	bl	10dfc <teste_lista_insere@@Base>
   11898:	add	r4, r0, r4
   1189c:	bl	11114 <teste_lista_remove@@Base>
   118a0:	add	r4, r4, r0
   118a4:	bl	112bc <teste_lista_pesquisa@@Base>
   118a8:	add	r4, r4, r0
   118ac:	bl	11430 <teste_lista_ordena@@Base>
   118b0:	add	r4, r4, r0
   118b4:	bl	11630 <teste_lista_inverte@@Base>
   118b8:	adds	r1, r4, r0
   118bc:	beq	118d4 <main@@Base+0x88>
   118c0:	movw	r0, #8793	; 0x2259
   118c4:	movt	r0, #1
   118c8:	bl	10ac8 <printf@plt>
   118cc:	mov	r0, #0
   118d0:	pop	{r4, sl, fp, pc}
   118d4:	movw	r0, #8834	; 0x2282
   118d8:	movt	r0, #1
   118dc:	bl	10af8 <puts@plt>
   118e0:	mov	r0, #0
   118e4:	pop	{r4, sl, fp, pc}

000118e8 <lista_nova@@Base>:
   118e8:	push	{fp, lr}
   118ec:	mov	fp, sp
   118f0:	mov	r0, #12
   118f4:	bl	10b04 <malloc@plt>
   118f8:	cmp	r0, #0
   118fc:	moveq	r0, #0
   11900:	movne	r1, #0
   11904:	strne	r1, [r0, #8]
   11908:	pop	{fp, pc}

0001190c <lista_apaga@@Base>:
   1190c:	cmp	r0, #0
   11910:	bxeq	lr
   11914:	push	{r4, r5, r6, sl, fp, lr}
   11918:	add	fp, sp, #16
   1191c:	mov	r4, r0
   11920:	ldr	r0, [r0, #8]
   11924:	cmp	r0, #0
   11928:	beq	11970 <lista_apaga@@Base+0x64>
   1192c:	ldr	r6, [r4]
   11930:	cmp	r6, #0
   11934:	beq	11970 <lista_apaga@@Base+0x64>
   11938:	ldr	r5, [r6, #4]
   1193c:	cmp	r5, #0
   11940:	beq	11970 <lista_apaga@@Base+0x64>
   11944:	ldr	r0, [r6]
   11948:	bl	10ad4 <free@plt>
   1194c:	mov	r0, r6
   11950:	bl	10ad4 <free@plt>
   11954:	ldm	r5, {r0, r6}
   11958:	bl	10ad4 <free@plt>
   1195c:	mov	r0, r5
   11960:	bl	10ad4 <free@plt>
   11964:	cmp	r6, #0
   11968:	mov	r5, r6
   1196c:	bne	11954 <lista_apaga@@Base+0x48>
   11970:	mov	r0, r4
   11974:	pop	{r4, r5, r6, sl, fp, lr}
   11978:	b	10ad4 <free@plt>

0001197c <lista_tamanho@@Base>:
   1197c:	cmp	r0, #0
   11980:	ldrne	r0, [r0, #8]
   11984:	mvneq	r0, #0
   11988:	bx	lr

0001198c <lista_inicio@@Base>:
   1198c:	cmp	r0, #0
   11990:	ldrne	r0, [r0]
   11994:	moveq	r0, #0
   11998:	bx	lr

0001199c <lista_fim@@Base>:
   1199c:	cmp	r0, #0
   119a0:	ldrne	r0, [r0, #4]
   119a4:	moveq	r0, #0
   119a8:	bx	lr

000119ac <lista_insere@@Base>:
   119ac:	push	{r4, r5, r6, r7, fp, lr}
   119b0:	add	fp, sp, #16
   119b4:	cmp	r0, #0
   119b8:	beq	11a28 <lista_insere@@Base+0x7c>
   119bc:	mov	r4, r0
   119c0:	mov	r0, #12
   119c4:	mov	r6, r2
   119c8:	mov	r7, r1
   119cc:	bl	10b04 <malloc@plt>
   119d0:	mov	r5, r0
   119d4:	mov	r0, r7
   119d8:	bl	10b28 <strlen@plt>
   119dc:	add	r0, r0, #1
   119e0:	bl	10b04 <malloc@plt>
   119e4:	mov	r1, r7
   119e8:	str	r0, [r5]
   119ec:	bl	10aec <strcpy@plt>
   119f0:	ldr	r0, [r4, #8]
   119f4:	cmp	r0, #0
   119f8:	beq	11a34 <lista_insere@@Base+0x88>
   119fc:	cmp	r6, #0
   11a00:	beq	11a4c <lista_insere@@Base+0xa0>
   11a04:	ldr	r1, [r4]
   11a08:	cmp	r1, r6
   11a0c:	beq	11a64 <lista_insere@@Base+0xb8>
   11a10:	mov	r1, r6
   11a14:	ldr	r2, [r1, #8]!
   11a18:	str	r5, [r2, #4]
   11a1c:	str	r6, [r5, #4]
   11a20:	str	r2, [r5, #8]
   11a24:	b	11a70 <lista_insere@@Base+0xc4>
   11a28:	mov	r5, #0
   11a2c:	mov	r0, r5
   11a30:	pop	{r4, r5, r6, r7, fp, pc}
   11a34:	mov	r1, #0
   11a38:	str	r1, [r5, #4]
   11a3c:	str	r1, [r5, #8]
   11a40:	mov	r1, r4
   11a44:	str	r5, [r1], #4
   11a48:	b	11a70 <lista_insere@@Base+0xc4>
   11a4c:	mov	r1, r4
   11a50:	mov	r2, #0
   11a54:	ldr	r3, [r1, #4]!
   11a58:	stmib	r5, {r2, r3}
   11a5c:	str	r5, [r3, #4]
   11a60:	b	11a70 <lista_insere@@Base+0xc4>
   11a64:	str	r1, [r5, #4]
   11a68:	str	r5, [r4]
   11a6c:	add	r1, r5, #8
   11a70:	add	r0, r0, #1
   11a74:	str	r5, [r1]
   11a78:	str	r0, [r4, #8]
   11a7c:	mov	r0, r5
   11a80:	pop	{r4, r5, r6, r7, fp, pc}

00011a84 <lista_remove@@Base>:
   11a84:	push	{r4, r5, r6, sl, fp, lr}
   11a88:	add	fp, sp, #16
   11a8c:	cmp	r1, #0
   11a90:	beq	11acc <lista_remove@@Base+0x48>
   11a94:	mov	r5, r0
   11a98:	ldr	r0, [r0]
   11a9c:	ldr	r4, [r1, #4]
   11aa0:	mov	r6, r1
   11aa4:	cmp	r0, r1
   11aa8:	beq	11ad8 <lista_remove@@Base+0x54>
   11aac:	ldr	r1, [r5, #4]
   11ab0:	ldr	r0, [r6, #8]
   11ab4:	cmp	r1, r6
   11ab8:	beq	11ae8 <lista_remove@@Base+0x64>
   11abc:	str	r4, [r0, #4]
   11ac0:	ldr	r1, [r6, #4]
   11ac4:	str	r0, [r1, #8]
   11ac8:	b	11af4 <lista_remove@@Base+0x70>
   11acc:	mov	r4, #0
   11ad0:	mov	r0, r4
   11ad4:	pop	{r4, r5, r6, sl, fp, pc}
   11ad8:	mov	r0, #0
   11adc:	str	r0, [r4, #8]
   11ae0:	str	r4, [r5]
   11ae4:	b	11af4 <lista_remove@@Base+0x70>
   11ae8:	mov	r1, #0
   11aec:	str	r1, [r0, #4]
   11af0:	str	r0, [r5, #4]
   11af4:	ldr	r0, [r6]
   11af8:	bl	10ad4 <free@plt>
   11afc:	mov	r0, r6
   11b00:	bl	10ad4 <free@plt>
   11b04:	ldr	r0, [r5, #8]
   11b08:	sub	r0, r0, #1
   11b0c:	str	r0, [r5, #8]
   11b10:	mov	r0, r4
   11b14:	pop	{r4, r5, r6, sl, fp, pc}

00011b18 <lista_pesquisa@@Base>:
   11b18:	push	{r4, r5, r6, r7, fp, lr}
   11b1c:	add	fp, sp, #16
   11b20:	mov	r5, #0
   11b24:	cmp	r0, #0
   11b28:	beq	11bbc <lista_pesquisa@@Base+0xa4>
   11b2c:	mov	r4, r1
   11b30:	cmp	r2, #1
   11b34:	beq	11b7c <lista_pesquisa@@Base+0x64>
   11b38:	cmp	r2, #0
   11b3c:	bne	11bbc <lista_pesquisa@@Base+0xa4>
   11b40:	ldr	r6, [r0, #8]
   11b44:	cmp	r6, #1
   11b48:	blt	11bbc <lista_pesquisa@@Base+0xa4>
   11b4c:	mov	r7, #0
   11b50:	ldr	r5, [r0]
   11b54:	mov	r1, r4
   11b58:	ldr	r0, [r5]
   11b5c:	bl	10abc <strcmp@plt>
   11b60:	cmp	r0, #0
   11b64:	beq	11bbc <lista_pesquisa@@Base+0xa4>
   11b68:	add	r7, r7, #1
   11b6c:	add	r0, r5, #4
   11b70:	cmp	r7, r6
   11b74:	blt	11b50 <lista_pesquisa@@Base+0x38>
   11b78:	b	11bb8 <lista_pesquisa@@Base+0xa0>
   11b7c:	ldr	r6, [r0, #8]
   11b80:	cmp	r6, #1
   11b84:	blt	11bbc <lista_pesquisa@@Base+0xa4>
   11b88:	add	r0, r0, #4
   11b8c:	mov	r7, #0
   11b90:	ldr	r5, [r0]
   11b94:	mov	r1, r4
   11b98:	ldr	r0, [r5]
   11b9c:	bl	10abc <strcmp@plt>
   11ba0:	cmp	r0, #0
   11ba4:	beq	11bbc <lista_pesquisa@@Base+0xa4>
   11ba8:	add	r7, r7, #1
   11bac:	add	r0, r5, #8
   11bb0:	cmp	r7, r6
   11bb4:	blt	11b90 <lista_pesquisa@@Base+0x78>
   11bb8:	mov	r5, #0
   11bbc:	mov	r0, r5
   11bc0:	pop	{r4, r5, r6, r7, fp, pc}

00011bc4 <lista_ordena@@Base>:
   11bc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bc8:	add	fp, sp, #28
   11bcc:	sub	sp, sp, #4
   11bd0:	cmp	r0, #0
   11bd4:	beq	11c88 <lista_ordena@@Base+0xc4>
   11bd8:	ldr	r1, [r0, #8]
   11bdc:	mov	r2, #0
   11be0:	cmp	r1, #0
   11be4:	beq	11c7c <lista_ordena@@Base+0xb8>
   11be8:	ldr	sl, [r0]
   11bec:	ldr	r9, [r0, #4]
   11bf0:	cmp	sl, r9
   11bf4:	beq	11c7c <lista_ordena@@Base+0xb8>
   11bf8:	mov	r8, sl
   11bfc:	b	11c0c <lista_ordena@@Base+0x48>
   11c00:	mov	r8, r4
   11c04:	cmp	r8, r9
   11c08:	beq	11c78 <lista_ordena@@Base+0xb4>
   11c0c:	ldr	r4, [r8, #4]
   11c10:	ldr	r5, [r8]
   11c14:	ldr	r6, [r4]
   11c18:	mov	r0, r5
   11c1c:	mov	r1, r6
   11c20:	bl	10abc <strcmp@plt>
   11c24:	cmp	r0, #1
   11c28:	blt	11c00 <lista_ordena@@Base+0x3c>
   11c2c:	mov	r7, r8
   11c30:	mov	r0, r8
   11c34:	str	r6, [r7]
   11c38:	str	r5, [r4]
   11c3c:	cmp	r0, sl
   11c40:	mov	r7, sl
   11c44:	ldrne	r7, [r0, #8]
   11c48:	ldr	r4, [r7, #4]
   11c4c:	ldr	r5, [r7]
   11c50:	ldr	r6, [r4]
   11c54:	mov	r0, r5
   11c58:	mov	r1, r6
   11c5c:	bl	10abc <strcmp@plt>
   11c60:	cmp	r0, #0
   11c64:	mov	r0, r7
   11c68:	bgt	11c34 <lista_ordena@@Base+0x70>
   11c6c:	ldr	r8, [r8, #4]
   11c70:	cmp	r8, r9
   11c74:	bne	11c0c <lista_ordena@@Base+0x48>
   11c78:	mov	r2, #0
   11c7c:	mov	r0, r2
   11c80:	sub	sp, fp, #28
   11c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c88:	mvn	r2, #0
   11c8c:	mov	r0, r2
   11c90:	sub	sp, fp, #28
   11c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011c98 <lista_inverte@@Base>:
   11c98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c9c:	add	fp, sp, #24
   11ca0:	cmp	r0, #0
   11ca4:	beq	11d14 <lista_inverte@@Base+0x7c>
   11ca8:	mov	r9, r0
   11cac:	ldr	r0, [r0, #8]
   11cb0:	mov	r8, #0
   11cb4:	cmp	r0, #2
   11cb8:	blt	11d0c <lista_inverte@@Base+0x74>
   11cbc:	add	r7, r9, #4
   11cc0:	mov	r8, #0
   11cc4:	mov	r4, r9
   11cc8:	mov	r5, #0
   11ccc:	ldr	r4, [r4]
   11cd0:	ldr	r7, [r7]
   11cd4:	ldr	r0, [r4]
   11cd8:	bl	10ae0 <strdup@plt>
   11cdc:	mov	r6, r0
   11ce0:	ldr	r0, [r7]
   11ce4:	bl	10ae0 <strdup@plt>
   11ce8:	str	r0, [r4], #4
   11cec:	mov	r0, r6
   11cf0:	bl	10ae0 <strdup@plt>
   11cf4:	str	r0, [r7], #8
   11cf8:	add	r5, r5, #1
   11cfc:	ldr	r0, [r9, #8]
   11d00:	add	r0, r0, r0, lsr #31
   11d04:	cmp	r5, r0, asr #1
   11d08:	blt	11ccc <lista_inverte@@Base+0x34>
   11d0c:	mov	r0, r8
   11d10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d14:	mvn	r8, #0
   11d18:	mov	r0, r8
   11d1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011d20 <__libc_csu_init@@Base>:
   11d20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d24:	mov	r7, r0
   11d28:	ldr	r6, [pc, #72]	; 11d78 <__libc_csu_init@@Base+0x58>
   11d2c:	ldr	r5, [pc, #72]	; 11d7c <__libc_csu_init@@Base+0x5c>
   11d30:	add	r6, pc, r6
   11d34:	add	r5, pc, r5
   11d38:	sub	r6, r6, r5
   11d3c:	mov	r8, r1
   11d40:	mov	r9, r2
   11d44:	bl	10a9c <strcmp@plt-0x20>
   11d48:	asrs	r6, r6, #2
   11d4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d50:	mov	r4, #0
   11d54:	add	r4, r4, #1
   11d58:	ldr	r3, [r5], #4
   11d5c:	mov	r2, r9
   11d60:	mov	r1, r8
   11d64:	mov	r0, r7
   11d68:	blx	r3
   11d6c:	cmp	r6, r4
   11d70:	bne	11d54 <__libc_csu_init@@Base+0x34>
   11d74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d78:	ldrdeq	r1, [r1], -r4
   11d7c:	andeq	r1, r1, ip, asr #3

00011d80 <__libc_csu_fini@@Base>:
   11d80:	bx	lr

Disassembly of section .fini:

00011d84 <.fini>:
   11d84:	push	{r3, lr}
   11d88:	pop	{r3, pc}
