
../repos/coreutils/src/sum:     file format elf32-littlearm


Disassembly of section .init:

00011074 <.init>:
   11074:	push	{r3, lr}
   11078:	bl	113ac <putc_unlocked@plt+0x48>
   1107c:	pop	{r3, pc}

Disassembly of section .plt:

00011080 <fdopen@plt-0x14>:
   11080:	push	{lr}		; (str lr, [sp, #-4]!)
   11084:	ldr	lr, [pc, #4]	; 11090 <fdopen@plt-0x4>
   11088:	add	lr, pc, lr
   1108c:	ldr	pc, [lr, #8]!
   11090:	andeq	r6, r1, r0, ror pc

00011094 <fdopen@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #90112	; 0x16000
   1109c:	ldr	pc, [ip, #3952]!	; 0xf70

000110a0 <calloc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #90112	; 0x16000
   110a8:	ldr	pc, [ip, #3944]!	; 0xf68

000110ac <fputs_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #90112	; 0x16000
   110b4:	ldr	pc, [ip, #3936]!	; 0xf60

000110b8 <raise@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #90112	; 0x16000
   110c0:	ldr	pc, [ip, #3928]!	; 0xf58

000110c4 <strcmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #90112	; 0x16000
   110cc:	ldr	pc, [ip, #3920]!	; 0xf50

000110d0 <posix_fadvise64@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #90112	; 0x16000
   110d8:	ldr	pc, [ip, #3912]!	; 0xf48

000110dc <fflush@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #90112	; 0x16000
   110e4:	ldr	pc, [ip, #3904]!	; 0xf40

000110e8 <memmove@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #90112	; 0x16000
   110f0:	ldr	pc, [ip, #3896]!	; 0xf38

000110f4 <free@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #90112	; 0x16000
   110fc:	ldr	pc, [ip, #3888]!	; 0xf30

00011100 <_exit@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #90112	; 0x16000
   11108:	ldr	pc, [ip, #3880]!	; 0xf28

0001110c <memcpy@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #90112	; 0x16000
   11114:	ldr	pc, [ip, #3872]!	; 0xf20

00011118 <mbsinit@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #90112	; 0x16000
   11120:	ldr	pc, [ip, #3864]!	; 0xf18

00011124 <memcmp@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #90112	; 0x16000
   1112c:	ldr	pc, [ip, #3856]!	; 0xf10

00011130 <dcgettext@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #90112	; 0x16000
   11138:	ldr	pc, [ip, #3848]!	; 0xf08

0001113c <realloc@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #90112	; 0x16000
   11144:	ldr	pc, [ip, #3840]!	; 0xf00

00011148 <textdomain@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #90112	; 0x16000
   11150:	ldr	pc, [ip, #3832]!	; 0xef8

00011154 <iswprint@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #90112	; 0x16000
   1115c:	ldr	pc, [ip, #3824]!	; 0xef0

00011160 <fwrite@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #90112	; 0x16000
   11168:	ldr	pc, [ip, #3816]!	; 0xee8

0001116c <lseek64@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #90112	; 0x16000
   11174:	ldr	pc, [ip, #3808]!	; 0xee0

00011178 <__ctype_get_mb_cur_max@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #90112	; 0x16000
   11180:	ldr	pc, [ip, #3800]!	; 0xed8

00011184 <__fpending@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #90112	; 0x16000
   1118c:	ldr	pc, [ip, #3792]!	; 0xed0

00011190 <ferror_unlocked@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #90112	; 0x16000
   11198:	ldr	pc, [ip, #3784]!	; 0xec8

0001119c <mbrtowc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #90112	; 0x16000
   111a4:	ldr	pc, [ip, #3776]!	; 0xec0

000111a8 <error@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #90112	; 0x16000
   111b0:	ldr	pc, [ip, #3768]!	; 0xeb8

000111b4 <getenv@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #90112	; 0x16000
   111bc:	ldr	pc, [ip, #3760]!	; 0xeb0

000111c0 <malloc@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #90112	; 0x16000
   111c8:	ldr	pc, [ip, #3752]!	; 0xea8

000111cc <__libc_start_main@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #90112	; 0x16000
   111d4:	ldr	pc, [ip, #3744]!	; 0xea0

000111d8 <__freading@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #90112	; 0x16000
   111e0:	ldr	pc, [ip, #3736]!	; 0xe98

000111e4 <__gmon_start__@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #90112	; 0x16000
   111ec:	ldr	pc, [ip, #3728]!	; 0xe90

000111f0 <getopt_long@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #90112	; 0x16000
   111f8:	ldr	pc, [ip, #3720]!	; 0xe88

000111fc <__ctype_b_loc@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #90112	; 0x16000
   11204:	ldr	pc, [ip, #3712]!	; 0xe80

00011208 <exit@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #90112	; 0x16000
   11210:	ldr	pc, [ip, #3704]!	; 0xe78

00011214 <strlen@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #90112	; 0x16000
   1121c:	ldr	pc, [ip, #3696]!	; 0xe70

00011220 <strchr@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #90112	; 0x16000
   11228:	ldr	pc, [ip, #3688]!	; 0xe68

0001122c <__errno_location@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #90112	; 0x16000
   11234:	ldr	pc, [ip, #3680]!	; 0xe60

00011238 <__sprintf_chk@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #90112	; 0x16000
   11240:	ldr	pc, [ip, #3672]!	; 0xe58

00011244 <__cxa_atexit@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #90112	; 0x16000
   1124c:	ldr	pc, [ip, #3664]!	; 0xe50

00011250 <setvbuf@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #90112	; 0x16000
   11258:	ldr	pc, [ip, #3656]!	; 0xe48

0001125c <memset@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #90112	; 0x16000
   11264:	ldr	pc, [ip, #3648]!	; 0xe40

00011268 <__printf_chk@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #90112	; 0x16000
   11270:	ldr	pc, [ip, #3640]!	; 0xe38

00011274 <fileno@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #90112	; 0x16000
   1127c:	ldr	pc, [ip, #3632]!	; 0xe30

00011280 <strtoumax@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #90112	; 0x16000
   11288:	ldr	pc, [ip, #3624]!	; 0xe28

0001128c <__fprintf_chk@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #90112	; 0x16000
   11294:	ldr	pc, [ip, #3616]!	; 0xe20

00011298 <fclose@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #90112	; 0x16000
   112a0:	ldr	pc, [ip, #3608]!	; 0xe18

000112a4 <fseeko64@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #90112	; 0x16000
   112ac:	ldr	pc, [ip, #3600]!	; 0xe10

000112b0 <fcntl64@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #90112	; 0x16000
   112b8:	ldr	pc, [ip, #3592]!	; 0xe08

000112bc <setlocale@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #90112	; 0x16000
   112c4:	ldr	pc, [ip, #3584]!	; 0xe00

000112c8 <strrchr@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #90112	; 0x16000
   112d0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112d4 <nl_langinfo@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #90112	; 0x16000
   112dc:	ldr	pc, [ip, #3568]!	; 0xdf0

000112e0 <localeconv@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #90112	; 0x16000
   112e8:	ldr	pc, [ip, #3560]!	; 0xde8

000112ec <clearerr_unlocked@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #90112	; 0x16000
   112f4:	ldr	pc, [ip, #3552]!	; 0xde0

000112f8 <fopen64@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #90112	; 0x16000
   11300:	ldr	pc, [ip, #3544]!	; 0xdd8

00011304 <bindtextdomain@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #90112	; 0x16000
   1130c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011310 <fread_unlocked@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #90112	; 0x16000
   11318:	ldr	pc, [ip, #3528]!	; 0xdc8

0001131c <strncmp@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #90112	; 0x16000
   11324:	ldr	pc, [ip, #3520]!	; 0xdc0

00011328 <abort@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #90112	; 0x16000
   11330:	ldr	pc, [ip, #3512]!	; 0xdb8

00011334 <feof_unlocked@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #90112	; 0x16000
   1133c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011340 <close@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #90112	; 0x16000
   11348:	ldr	pc, [ip, #3496]!	; 0xda8

0001134c <putchar_unlocked@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #90112	; 0x16000
   11354:	ldr	pc, [ip, #3488]!	; 0xda0

00011358 <__assert_fail@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #90112	; 0x16000
   11360:	ldr	pc, [ip, #3480]!	; 0xd98

00011364 <putc_unlocked@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #90112	; 0x16000
   1136c:	ldr	pc, [ip, #3472]!	; 0xd90

Disassembly of section .text:

00011370 <.text>:
   11370:	mov	fp, #0
   11374:	mov	lr, #0
   11378:	pop	{r1}		; (ldr r1, [sp], #4)
   1137c:	mov	r2, sp
   11380:	push	{r2}		; (str r2, [sp, #-4]!)
   11384:	push	{r0}		; (str r0, [sp, #-4]!)
   11388:	ldr	ip, [pc, #16]	; 113a0 <putc_unlocked@plt+0x3c>
   1138c:	push	{ip}		; (str ip, [sp, #-4]!)
   11390:	ldr	r0, [pc, #12]	; 113a4 <putc_unlocked@plt+0x40>
   11394:	ldr	r3, [pc, #12]	; 113a8 <putc_unlocked@plt+0x44>
   11398:	bl	111cc <__libc_start_main@plt>
   1139c:	bl	11328 <abort@plt>
   113a0:	muleq	r1, r8, sl
   113a4:	andeq	r1, r1, r8, lsl fp
   113a8:	andeq	r6, r1, r8, lsr sl
   113ac:	ldr	r3, [pc, #20]	; 113c8 <putc_unlocked@plt+0x64>
   113b0:	ldr	r2, [pc, #20]	; 113cc <putc_unlocked@plt+0x68>
   113b4:	add	r3, pc, r3
   113b8:	ldr	r2, [r3, r2]
   113bc:	cmp	r2, #0
   113c0:	bxeq	lr
   113c4:	b	111e4 <__gmon_start__@plt>
   113c8:	andeq	r6, r1, r4, asr #24
   113cc:	andeq	r0, r0, r0, lsl #2
   113d0:	ldr	r0, [pc, #24]	; 113f0 <putc_unlocked@plt+0x8c>
   113d4:	ldr	r3, [pc, #24]	; 113f4 <putc_unlocked@plt+0x90>
   113d8:	cmp	r3, r0
   113dc:	bxeq	lr
   113e0:	ldr	r3, [pc, #16]	; 113f8 <putc_unlocked@plt+0x94>
   113e4:	cmp	r3, #0
   113e8:	bxeq	lr
   113ec:	bx	r3
   113f0:	andeq	r8, r2, ip, asr r1
   113f4:	andeq	r8, r2, ip, asr r1
   113f8:	andeq	r0, r0, r0
   113fc:	ldr	r0, [pc, #36]	; 11428 <putc_unlocked@plt+0xc4>
   11400:	ldr	r1, [pc, #36]	; 1142c <putc_unlocked@plt+0xc8>
   11404:	sub	r1, r1, r0
   11408:	asr	r1, r1, #2
   1140c:	add	r1, r1, r1, lsr #31
   11410:	asrs	r1, r1, #1
   11414:	bxeq	lr
   11418:	ldr	r3, [pc, #16]	; 11430 <putc_unlocked@plt+0xcc>
   1141c:	cmp	r3, #0
   11420:	bxeq	lr
   11424:	bx	r3
   11428:	andeq	r8, r2, ip, asr r1
   1142c:	andeq	r8, r2, ip, asr r1
   11430:	andeq	r0, r0, r0
   11434:	push	{r4, lr}
   11438:	ldr	r4, [pc, #24]	; 11458 <putc_unlocked@plt+0xf4>
   1143c:	ldrb	r3, [r4]
   11440:	cmp	r3, #0
   11444:	popne	{r4, pc}
   11448:	bl	113d0 <putc_unlocked@plt+0x6c>
   1144c:	mov	r3, #1
   11450:	strb	r3, [r4]
   11454:	pop	{r4, pc}
   11458:	andeq	r8, r2, r0, lsl #3
   1145c:	b	113fc <putc_unlocked@plt+0x98>
   11460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11464:	add	fp, sp, #28
   11468:	sub	sp, sp, #12
   1146c:	mov	r5, r2
   11470:	mov	r6, r1
   11474:	mov	r7, r0
   11478:	mov	r0, #32768	; 0x8000
   1147c:	bl	158ac <putc_unlocked@plt+0x4548>
   11480:	cmp	r0, #0
   11484:	beq	1152c <putc_unlocked@plt+0x1c8>
   11488:	mov	r4, r0
   1148c:	str	r6, [sp]
   11490:	str	r5, [sp, #4]
   11494:	mov	r6, #0
   11498:	mov	sl, #0
   1149c:	mov	r1, #0
   114a0:	str	r1, [sp, #8]
   114a4:	mov	r8, #0
   114a8:	mov	r9, r8
   114ac:	add	r0, r4, r8
   114b0:	rsb	r2, r8, #32768	; 0x8000
   114b4:	mov	r1, #1
   114b8:	mov	r3, r7
   114bc:	bl	11310 <fread_unlocked@plt>
   114c0:	add	r8, r0, r8
   114c4:	cmp	r8, #32768	; 0x8000
   114c8:	beq	114ec <putc_unlocked@plt+0x188>
   114cc:	mov	r5, r0
   114d0:	cmp	r0, #0
   114d4:	beq	11534 <putc_unlocked@plt+0x1d0>
   114d8:	mov	r0, r7
   114dc:	bl	11334 <feof_unlocked@plt>
   114e0:	cmp	r0, #0
   114e4:	beq	114a8 <putc_unlocked@plt+0x144>
   114e8:	b	11548 <putc_unlocked@plt+0x1e4>
   114ec:	mov	r0, #0
   114f0:	ldrb	r1, [r4, r0]
   114f4:	lsr	r2, r6, #1
   114f8:	add	r2, r2, r6, lsl #15
   114fc:	add	r1, r2, r1
   11500:	uxth	r6, r1
   11504:	add	r0, r0, #1
   11508:	cmp	r0, r8
   1150c:	bcc	114f0 <putc_unlocked@plt+0x18c>
   11510:	adds	sl, sl, r8
   11514:	ldr	r1, [sp, #8]
   11518:	adcs	r1, r1, #0
   1151c:	mov	r0, #0
   11520:	adcs	r0, r0, #0
   11524:	beq	114a0 <putc_unlocked@plt+0x13c>
   11528:	b	11594 <putc_unlocked@plt+0x230>
   1152c:	mvn	r7, #0
   11530:	b	115c0 <putc_unlocked@plt+0x25c>
   11534:	mov	r0, r7
   11538:	bl	11190 <ferror_unlocked@plt>
   1153c:	mvn	r7, #0
   11540:	cmp	r0, #0
   11544:	bne	115b8 <putc_unlocked@plt+0x254>
   11548:	cmp	r8, #0
   1154c:	beq	1157c <putc_unlocked@plt+0x218>
   11550:	add	r0, r5, r9
   11554:	mov	r1, r4
   11558:	ldr	r5, [sp, #8]
   1155c:	lsr	r2, r6, #1
   11560:	add	r2, r2, r6, lsl #15
   11564:	ldrb	r3, [r1], #1
   11568:	add	r2, r2, r3
   1156c:	uxth	r6, r2
   11570:	subs	r0, r0, #1
   11574:	bne	1155c <putc_unlocked@plt+0x1f8>
   11578:	b	11580 <putc_unlocked@plt+0x21c>
   1157c:	ldr	r5, [sp, #8]
   11580:	mov	r7, #0
   11584:	adds	r0, sl, r8
   11588:	adcs	r1, r5, #0
   1158c:	adcs	r2, r7, #0
   11590:	beq	115a8 <putc_unlocked@plt+0x244>
   11594:	bl	1122c <__errno_location@plt>
   11598:	mov	r1, #75	; 0x4b
   1159c:	str	r1, [r0]
   115a0:	mvn	r7, #0
   115a4:	b	115b8 <putc_unlocked@plt+0x254>
   115a8:	ldr	r2, [sp]
   115ac:	str	r6, [r2]
   115b0:	ldr	r2, [sp, #4]
   115b4:	strd	r0, [r2]
   115b8:	mov	r0, r4
   115bc:	bl	12234 <putc_unlocked@plt+0xed0>
   115c0:	mov	r0, r7
   115c4:	sub	sp, fp, #28
   115c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115d0:	add	fp, sp, #28
   115d4:	sub	sp, sp, #12
   115d8:	mov	r5, r2
   115dc:	mov	r6, r1
   115e0:	mov	r7, r0
   115e4:	mov	r0, #32768	; 0x8000
   115e8:	bl	158ac <putc_unlocked@plt+0x4548>
   115ec:	cmp	r0, #0
   115f0:	beq	1168c <putc_unlocked@plt+0x328>
   115f4:	mov	r4, r0
   115f8:	str	r6, [sp]
   115fc:	str	r5, [sp, #4]
   11600:	mov	sl, #0
   11604:	mov	r1, #0
   11608:	mov	r6, #0
   1160c:	str	r1, [sp, #8]
   11610:	mov	r8, #0
   11614:	mov	r9, r8
   11618:	add	r0, r4, r8
   1161c:	rsb	r2, r8, #32768	; 0x8000
   11620:	mov	r1, #1
   11624:	mov	r3, r7
   11628:	bl	11310 <fread_unlocked@plt>
   1162c:	add	r8, r0, r8
   11630:	cmp	r8, #32768	; 0x8000
   11634:	beq	11658 <putc_unlocked@plt+0x2f4>
   11638:	mov	r5, r0
   1163c:	cmp	r0, #0
   11640:	beq	11694 <putc_unlocked@plt+0x330>
   11644:	mov	r0, r7
   11648:	bl	11334 <feof_unlocked@plt>
   1164c:	cmp	r0, #0
   11650:	beq	11614 <putc_unlocked@plt+0x2b0>
   11654:	b	116a8 <putc_unlocked@plt+0x344>
   11658:	mov	r0, #0
   1165c:	ldrb	r1, [r4, r0]
   11660:	add	r6, r6, r1
   11664:	add	r0, r0, #1
   11668:	cmp	r0, r8
   1166c:	bcc	1165c <putc_unlocked@plt+0x2f8>
   11670:	adds	sl, sl, r8
   11674:	ldr	r1, [sp, #8]
   11678:	adcs	r1, r1, #0
   1167c:	mov	r0, #0
   11680:	adcs	r0, r0, #0
   11684:	beq	1160c <putc_unlocked@plt+0x2a8>
   11688:	b	116e8 <putc_unlocked@plt+0x384>
   1168c:	mvn	r7, #0
   11690:	b	11724 <putc_unlocked@plt+0x3c0>
   11694:	mov	r0, r7
   11698:	bl	11190 <ferror_unlocked@plt>
   1169c:	mvn	r7, #0
   116a0:	cmp	r0, #0
   116a4:	bne	1171c <putc_unlocked@plt+0x3b8>
   116a8:	cmp	r8, #0
   116ac:	beq	116d0 <putc_unlocked@plt+0x36c>
   116b0:	add	r0, r5, r9
   116b4:	mov	r1, r4
   116b8:	ldr	r3, [sp, #8]
   116bc:	ldrb	r2, [r1], #1
   116c0:	add	r6, r6, r2
   116c4:	subs	r0, r0, #1
   116c8:	bne	116bc <putc_unlocked@plt+0x358>
   116cc:	b	116d4 <putc_unlocked@plt+0x370>
   116d0:	ldr	r3, [sp, #8]
   116d4:	mov	r7, #0
   116d8:	adds	r0, sl, r8
   116dc:	adcs	r1, r3, #0
   116e0:	adcs	r2, r7, #0
   116e4:	beq	116fc <putc_unlocked@plt+0x398>
   116e8:	bl	1122c <__errno_location@plt>
   116ec:	mov	r1, #75	; 0x4b
   116f0:	str	r1, [r0]
   116f4:	mvn	r7, #0
   116f8:	b	1171c <putc_unlocked@plt+0x3b8>
   116fc:	lsr	r2, r6, #16
   11700:	uxtah	r2, r2, r6
   11704:	lsr	r3, r2, #16
   11708:	uxtah	r2, r3, r2
   1170c:	ldr	r3, [sp]
   11710:	str	r2, [r3]
   11714:	ldr	r2, [sp, #4]
   11718:	strd	r0, [r2]
   1171c:	mov	r0, r4
   11720:	bl	12234 <putc_unlocked@plt+0xed0>
   11724:	mov	r0, r7
   11728:	sub	sp, fp, #28
   1172c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11730:	push	{r4, r5, r6, r7, fp, lr}
   11734:	add	fp, sp, #16
   11738:	sub	sp, sp, #672	; 0x2a0
   1173c:	mov	r4, r0
   11740:	ldr	r5, [r2]
   11744:	mov	r0, #0
   11748:	mov	r1, #1024	; 0x400
   1174c:	mov	r2, #1
   11750:	str	r2, [sp]
   11754:	stmib	sp, {r0, r1}
   11758:	str	r0, [sp, #12]
   1175c:	ldr	r0, [fp, #16]
   11760:	ldr	r1, [fp, #20]
   11764:	add	r2, sp, #20
   11768:	mov	r3, #0
   1176c:	bl	12300 <putc_unlocked@plt+0xf9c>
   11770:	mov	r3, r0
   11774:	movw	r1, #27332	; 0x6ac4
   11778:	movt	r1, #1
   1177c:	mov	r0, #1
   11780:	mov	r2, r5
   11784:	bl	11268 <__printf_chk@plt>
   11788:	ldr	r5, [fp, #8]
   1178c:	ldr	r0, [fp, #12]
   11790:	cmp	r0, #0
   11794:	beq	117ac <putc_unlocked@plt+0x448>
   11798:	movw	r1, #29740	; 0x742c
   1179c:	movt	r1, #1
   117a0:	mov	r0, #1
   117a4:	mov	r2, r4
   117a8:	bl	11268 <__printf_chk@plt>
   117ac:	mov	r0, r5
   117b0:	bl	1134c <putchar_unlocked@plt>
   117b4:	sub	sp, fp, #16
   117b8:	pop	{r4, r5, r6, r7, fp, pc}
   117bc:	push	{r4, r5, r6, r7, fp, lr}
   117c0:	add	fp, sp, #16
   117c4:	sub	sp, sp, #672	; 0x2a0
   117c8:	mov	r4, r0
   117cc:	ldr	r5, [r2]
   117d0:	mov	r0, #0
   117d4:	mov	r1, #512	; 0x200
   117d8:	mov	r2, #1
   117dc:	str	r2, [sp]
   117e0:	stmib	sp, {r0, r1}
   117e4:	str	r0, [sp, #12]
   117e8:	ldr	r0, [fp, #16]
   117ec:	ldr	r1, [fp, #20]
   117f0:	add	r2, sp, #20
   117f4:	mov	r3, #0
   117f8:	bl	12300 <putc_unlocked@plt+0xf9c>
   117fc:	mov	r3, r0
   11800:	movw	r1, #27341	; 0x6acd
   11804:	movt	r1, #1
   11808:	mov	r0, #1
   1180c:	mov	r2, r5
   11810:	bl	11268 <__printf_chk@plt>
   11814:	ldr	r5, [fp, #8]
   11818:	ldr	r0, [fp, #12]
   1181c:	cmp	r0, #0
   11820:	beq	11838 <putc_unlocked@plt+0x4d4>
   11824:	movw	r1, #29740	; 0x742c
   11828:	movt	r1, #1
   1182c:	mov	r0, #1
   11830:	mov	r2, r4
   11834:	bl	11268 <__printf_chk@plt>
   11838:	mov	r0, r5
   1183c:	bl	1134c <putchar_unlocked@plt>
   11840:	sub	sp, fp, #16
   11844:	pop	{r4, r5, r6, r7, fp, pc}
   11848:	push	{fp, lr}
   1184c:	mov	fp, sp
   11850:	mov	r4, r0
   11854:	cmp	r0, #0
   11858:	bne	11920 <putc_unlocked@plt+0x5bc>
   1185c:	movw	r1, #27386	; 0x6afa
   11860:	movt	r1, #1
   11864:	mov	r0, #0
   11868:	mov	r2, #5
   1186c:	bl	11130 <dcgettext@plt>
   11870:	mov	r1, r0
   11874:	movw	r0, #33168	; 0x8190
   11878:	movt	r0, #2
   1187c:	ldr	r2, [r0]
   11880:	mov	r0, #1
   11884:	bl	11268 <__printf_chk@plt>
   11888:	movw	r1, #27419	; 0x6b1b
   1188c:	movt	r1, #1
   11890:	mov	r0, #0
   11894:	mov	r2, #5
   11898:	bl	11130 <dcgettext@plt>
   1189c:	mov	r1, r0
   118a0:	movw	r2, #27458	; 0x6b42
   118a4:	movt	r2, #1
   118a8:	mov	r0, #1
   118ac:	mov	r3, #16
   118b0:	bl	11268 <__printf_chk@plt>
   118b4:	bl	11964 <putc_unlocked@plt+0x600>
   118b8:	movw	r1, #27462	; 0x6b46
   118bc:	movt	r1, #1
   118c0:	mov	r0, #0
   118c4:	mov	r2, #5
   118c8:	bl	11130 <dcgettext@plt>
   118cc:	movw	r5, #33148	; 0x817c
   118d0:	movt	r5, #2
   118d4:	ldr	r1, [r5]
   118d8:	bl	110ac <fputs_unlocked@plt>
   118dc:	movw	r1, #27600	; 0x6bd0
   118e0:	movt	r1, #1
   118e4:	mov	r0, #0
   118e8:	mov	r2, #5
   118ec:	bl	11130 <dcgettext@plt>
   118f0:	ldr	r1, [r5]
   118f4:	bl	110ac <fputs_unlocked@plt>
   118f8:	movw	r1, #27645	; 0x6bfd
   118fc:	movt	r1, #1
   11900:	mov	r0, #0
   11904:	mov	r2, #5
   11908:	bl	11130 <dcgettext@plt>
   1190c:	ldr	r1, [r5]
   11910:	bl	110ac <fputs_unlocked@plt>
   11914:	bl	11994 <putc_unlocked@plt+0x630>
   11918:	mov	r0, r4
   1191c:	bl	11208 <exit@plt>
   11920:	movw	r0, #33136	; 0x8170
   11924:	movt	r0, #2
   11928:	ldr	r5, [r0]
   1192c:	movw	r1, #27347	; 0x6ad3
   11930:	movt	r1, #1
   11934:	mov	r0, #0
   11938:	mov	r2, #5
   1193c:	bl	11130 <dcgettext@plt>
   11940:	mov	r2, r0
   11944:	movw	r0, #33168	; 0x8190
   11948:	movt	r0, #2
   1194c:	ldr	r3, [r0]
   11950:	mov	r0, r5
   11954:	mov	r1, #1
   11958:	bl	1128c <__fprintf_chk@plt>
   1195c:	mov	r0, r4
   11960:	bl	11208 <exit@plt>
   11964:	push	{fp, lr}
   11968:	mov	fp, sp
   1196c:	movw	r1, #27789	; 0x6c8d
   11970:	movt	r1, #1
   11974:	mov	r0, #0
   11978:	mov	r2, #5
   1197c:	bl	11130 <dcgettext@plt>
   11980:	movw	r1, #33148	; 0x817c
   11984:	movt	r1, #2
   11988:	ldr	r1, [r1]
   1198c:	pop	{fp, lr}
   11990:	b	110ac <fputs_unlocked@plt>
   11994:	push	{r4, r5, fp, lr}
   11998:	add	fp, sp, #8
   1199c:	sub	sp, sp, #56	; 0x38
   119a0:	movw	r0, #28248	; 0x6e58
   119a4:	movt	r0, #1
   119a8:	add	r1, r0, #32
   119ac:	mov	r5, sp
   119b0:	mov	r2, #48	; 0x30
   119b4:	vld1.64	{d16-d17}, [r1]
   119b8:	add	r1, r5, #32
   119bc:	add	r3, r0, #16
   119c0:	vld1.64	{d18-d19}, [r0], r2
   119c4:	vld1.64	{d20-d21}, [r3]
   119c8:	vldr	d22, [r0]
   119cc:	vst1.64	{d16-d17}, [r1]
   119d0:	add	r0, r5, #16
   119d4:	vst1.64	{d20-d21}, [r0]
   119d8:	mov	r0, r5
   119dc:	vst1.64	{d18-d19}, [r0], r2
   119e0:	vstr	d22, [r0]
   119e4:	ldr	r1, [sp]
   119e8:	cmp	r1, #0
   119ec:	beq	11a14 <putc_unlocked@plt+0x6b0>
   119f0:	mov	r5, sp
   119f4:	movw	r4, #27936	; 0x6d20
   119f8:	movt	r4, #1
   119fc:	mov	r0, r4
   11a00:	bl	110c4 <strcmp@plt>
   11a04:	cmp	r0, #0
   11a08:	ldrne	r1, [r5, #8]!
   11a0c:	cmpne	r1, #0
   11a10:	bne	119fc <putc_unlocked@plt+0x698>
   11a14:	ldr	r4, [r5, #4]
   11a18:	movw	r1, #27940	; 0x6d24
   11a1c:	movt	r1, #1
   11a20:	mov	r0, #0
   11a24:	mov	r2, #5
   11a28:	bl	11130 <dcgettext@plt>
   11a2c:	mov	r1, r0
   11a30:	movw	r2, #27726	; 0x6c4e
   11a34:	movt	r2, #1
   11a38:	movw	r3, #27963	; 0x6d3b
   11a3c:	movt	r3, #1
   11a40:	mov	r0, #1
   11a44:	bl	11268 <__printf_chk@plt>
   11a48:	movw	r5, #27936	; 0x6d20
   11a4c:	movt	r5, #1
   11a50:	cmp	r4, #0
   11a54:	moveq	r4, r5
   11a58:	mov	r0, #5
   11a5c:	mov	r1, #0
   11a60:	bl	112bc <setlocale@plt>
   11a64:	cmp	r0, #0
   11a68:	beq	11aa8 <putc_unlocked@plt+0x744>
   11a6c:	movw	r1, #28003	; 0x6d63
   11a70:	movt	r1, #1
   11a74:	mov	r2, #3
   11a78:	bl	1131c <strncmp@plt>
   11a7c:	cmp	r0, #0
   11a80:	beq	11aa8 <putc_unlocked@plt+0x744>
   11a84:	movw	r1, #28007	; 0x6d67
   11a88:	movt	r1, #1
   11a8c:	mov	r0, #0
   11a90:	mov	r2, #5
   11a94:	bl	11130 <dcgettext@plt>
   11a98:	movw	r1, #33148	; 0x817c
   11a9c:	movt	r1, #2
   11aa0:	ldr	r1, [r1]
   11aa4:	bl	110ac <fputs_unlocked@plt>
   11aa8:	movw	r1, #28078	; 0x6dae
   11aac:	movt	r1, #1
   11ab0:	mov	r0, #0
   11ab4:	mov	r2, #5
   11ab8:	bl	11130 <dcgettext@plt>
   11abc:	mov	r1, r0
   11ac0:	movw	r2, #27963	; 0x6d3b
   11ac4:	movt	r2, #1
   11ac8:	mov	r0, #1
   11acc:	mov	r3, r5
   11ad0:	bl	11268 <__printf_chk@plt>
   11ad4:	movw	r1, #28105	; 0x6dc9
   11ad8:	movt	r1, #1
   11adc:	mov	r0, #0
   11ae0:	mov	r2, #5
   11ae4:	bl	11130 <dcgettext@plt>
   11ae8:	mov	r1, r0
   11aec:	movw	r0, #27873	; 0x6ce1
   11af0:	movt	r0, #1
   11af4:	movw	r3, #28155	; 0x6dfb
   11af8:	movt	r3, #1
   11afc:	cmp	r4, r5
   11b00:	moveq	r3, r0
   11b04:	mov	r0, #1
   11b08:	mov	r2, r4
   11b0c:	bl	11268 <__printf_chk@plt>
   11b10:	sub	sp, fp, #8
   11b14:	pop	{r4, r5, fp, pc}
   11b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b1c:	add	fp, sp, #28
   11b20:	sub	sp, sp, #44	; 0x2c
   11b24:	mov	r8, r1
   11b28:	str	r0, [sp, #16]
   11b2c:	sub	r0, fp, #34	; 0x22
   11b30:	bl	11dbc <putc_unlocked@plt+0xa58>
   11b34:	str	r0, [sp, #20]
   11b38:	ldr	r0, [r8]
   11b3c:	bl	12e14 <putc_unlocked@plt+0x1ab0>
   11b40:	movw	r1, #28155	; 0x6dfb
   11b44:	movt	r1, #1
   11b48:	mov	r0, #6
   11b4c:	bl	112bc <setlocale@plt>
   11b50:	movw	r4, #27730	; 0x6c52
   11b54:	movt	r4, #1
   11b58:	movw	r1, #27699	; 0x6c33
   11b5c:	movt	r1, #1
   11b60:	mov	r0, r4
   11b64:	bl	11304 <bindtextdomain@plt>
   11b68:	mov	r0, r4
   11b6c:	bl	11148 <textdomain@plt>
   11b70:	movw	r0, #8016	; 0x1f50
   11b74:	movt	r0, #1
   11b78:	bl	16a9c <putc_unlocked@plt+0x5738>
   11b7c:	movw	r9, #33148	; 0x817c
   11b80:	movt	r9, #2
   11b84:	ldr	r0, [r9]
   11b88:	mov	r6, #0
   11b8c:	mov	r1, #0
   11b90:	mov	r2, #1
   11b94:	mov	r3, #0
   11b98:	bl	11250 <setvbuf@plt>
   11b9c:	movw	r4, #27723	; 0x6c4b
   11ba0:	movt	r4, #1
   11ba4:	movw	r7, #28176	; 0x6e10
   11ba8:	movt	r7, #1
   11bac:	b	11bbc <putc_unlocked@plt+0x858>
   11bb0:	movw	r0, #33156	; 0x8184
   11bb4:	movt	r0, #2
   11bb8:	strb	r1, [r0]
   11bbc:	str	r6, [sp]
   11bc0:	ldr	r0, [sp, #16]
   11bc4:	mov	r1, r8
   11bc8:	mov	r2, r4
   11bcc:	mov	r3, r7
   11bd0:	bl	111f0 <getopt_long@plt>
   11bd4:	cmp	r0, #113	; 0x71
   11bd8:	ble	11bf8 <putc_unlocked@plt+0x894>
   11bdc:	cmp	r0, #114	; 0x72
   11be0:	mov	r1, #0
   11be4:	beq	11bb0 <putc_unlocked@plt+0x84c>
   11be8:	cmp	r0, #115	; 0x73
   11bec:	bne	11d88 <putc_unlocked@plt+0xa24>
   11bf0:	mov	r1, #1
   11bf4:	b	11bb0 <putc_unlocked@plt+0x84c>
   11bf8:	cmn	r0, #1
   11bfc:	bne	11d24 <putc_unlocked@plt+0x9c0>
   11c00:	ldr	r1, [sp, #16]
   11c04:	add	r6, r8, r1, lsl #2
   11c08:	movw	r0, #33128	; 0x8168
   11c0c:	movt	r0, #2
   11c10:	ldr	r0, [r0]
   11c14:	cmp	r0, r1
   11c18:	movweq	r1, #28534	; 0x6f76
   11c1c:	movteq	r1, #1
   11c20:	streq	r1, [r6], #4
   11c24:	add	sl, r8, r0, lsl #2
   11c28:	mov	r8, #1
   11c2c:	cmp	sl, r6
   11c30:	bcs	11ce8 <putc_unlocked@plt+0x984>
   11c34:	mov	r9, #1
   11c38:	sub	r7, fp, #35	; 0x23
   11c3c:	add	r5, sp, #24
   11c40:	ldr	r4, [sl]
   11c44:	mov	r0, r4
   11c48:	ldr	r1, [sp, #20]
   11c4c:	mov	r2, r7
   11c50:	mov	r3, r5
   11c54:	bl	11dcc <putc_unlocked@plt+0xa68>
   11c58:	cmp	r0, #0
   11c5c:	mov	r8, #0
   11c60:	beq	11cd8 <putc_unlocked@plt+0x974>
   11c64:	movw	r0, #33156	; 0x8184
   11c68:	movt	r0, #2
   11c6c:	ldrb	r0, [r0]
   11c70:	movw	r1, #33128	; 0x8168
   11c74:	movt	r1, #2
   11c78:	ldr	r1, [r1]
   11c7c:	ldr	r2, [sp, #24]
   11c80:	ldr	r3, [sp, #28]
   11c84:	mov	r8, r6
   11c88:	mov	r6, r5
   11c8c:	mov	r5, r7
   11c90:	ldr	r7, [sp, #16]
   11c94:	subs	r1, r1, r7
   11c98:	movwne	r1, #1
   11c9c:	mov	r7, #10
   11ca0:	str	r7, [sp]
   11ca4:	stmib	sp, {r1, r2, r3}
   11ca8:	movw	r1, #28240	; 0x6e50
   11cac:	movt	r1, #1
   11cb0:	ldr	r7, [r1, r0, lsl #2]
   11cb4:	mov	r0, r4
   11cb8:	mov	r1, #0
   11cbc:	ldr	r2, [sp, #20]
   11cc0:	mov	r3, #0
   11cc4:	blx	r7
   11cc8:	mov	r7, r5
   11ccc:	mov	r5, r6
   11cd0:	mov	r6, r8
   11cd4:	mov	r8, r9
   11cd8:	add	sl, sl, #4
   11cdc:	cmp	sl, r6
   11ce0:	mov	r9, r8
   11ce4:	bcc	11c40 <putc_unlocked@plt+0x8dc>
   11ce8:	movw	r0, #33157	; 0x8185
   11cec:	movt	r0, #2
   11cf0:	ldrb	r0, [r0]
   11cf4:	cmp	r0, #0
   11cf8:	beq	11d14 <putc_unlocked@plt+0x9b0>
   11cfc:	movw	r0, #33144	; 0x8178
   11d00:	movt	r0, #2
   11d04:	ldr	r0, [r0]
   11d08:	bl	12078 <putc_unlocked@plt+0xd14>
   11d0c:	cmn	r0, #1
   11d10:	beq	11d90 <putc_unlocked@plt+0xa2c>
   11d14:	mov	r0, #1
   11d18:	bic	r0, r0, r8
   11d1c:	sub	sp, fp, #28
   11d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d24:	cmn	r0, #3
   11d28:	bne	11d78 <putc_unlocked@plt+0xa14>
   11d2c:	movw	r0, #33040	; 0x8110
   11d30:	movt	r0, #2
   11d34:	ldr	r3, [r0]
   11d38:	ldr	r0, [r9]
   11d3c:	mov	r1, #0
   11d40:	movw	r2, #27758	; 0x6c6e
   11d44:	movt	r2, #1
   11d48:	movw	r7, #27740	; 0x6c5c
   11d4c:	movt	r7, #1
   11d50:	str	r7, [sp]
   11d54:	str	r2, [sp, #4]
   11d58:	str	r1, [sp, #8]
   11d5c:	movw	r1, #27936	; 0x6d20
   11d60:	movt	r1, #1
   11d64:	movw	r2, #27726	; 0x6c4e
   11d68:	movt	r2, #1
   11d6c:	bl	14e28 <putc_unlocked@plt+0x3ac4>
   11d70:	mov	r0, #0
   11d74:	bl	11208 <exit@plt>
   11d78:	cmn	r0, #2
   11d7c:	bne	11d88 <putc_unlocked@plt+0xa24>
   11d80:	mov	r0, #0
   11d84:	bl	11848 <putc_unlocked@plt+0x4e4>
   11d88:	mov	r0, #1
   11d8c:	bl	11848 <putc_unlocked@plt+0x4e4>
   11d90:	bl	1122c <__errno_location@plt>
   11d94:	ldr	r4, [r0]
   11d98:	movw	r1, #27774	; 0x6c7e
   11d9c:	movt	r1, #1
   11da0:	mov	r0, #0
   11da4:	mov	r2, #5
   11da8:	bl	11130 <dcgettext@plt>
   11dac:	mov	r2, r0
   11db0:	mov	r0, #1
   11db4:	mov	r1, r4
   11db8:	bl	111a8 <error@plt>
   11dbc:	add	r0, r0, #3
   11dc0:	and	r1, r0, #3
   11dc4:	sub	r0, r0, r1
   11dc8:	bx	lr
   11dcc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11dd0:	add	fp, sp, #24
   11dd4:	mov	r6, r3
   11dd8:	mov	r7, r2
   11ddc:	mov	r4, r1
   11de0:	mov	r8, r0
   11de4:	movw	r1, #28534	; 0x6f76
   11de8:	movt	r1, #1
   11dec:	bl	110c4 <strcmp@plt>
   11df0:	mov	r5, r0
   11df4:	mov	r0, #0
   11df8:	strb	r0, [r7]
   11dfc:	cmp	r5, #0
   11e00:	beq	11e54 <putc_unlocked@plt+0xaf0>
   11e04:	movw	r1, #28337	; 0x6eb1
   11e08:	movt	r1, #1
   11e0c:	mov	r0, r8
   11e10:	bl	12180 <putc_unlocked@plt+0xe1c>
   11e14:	mov	r7, r0
   11e18:	cmp	r0, #0
   11e1c:	bne	11e70 <putc_unlocked@plt+0xb0c>
   11e20:	bl	1122c <__errno_location@plt>
   11e24:	ldr	r5, [r0]
   11e28:	mov	r4, #0
   11e2c:	mov	r0, #0
   11e30:	mov	r1, #3
   11e34:	mov	r2, r8
   11e38:	bl	1450c <putc_unlocked@plt+0x31a8>
   11e3c:	mov	r3, r0
   11e40:	movw	r2, #29741	; 0x742d
   11e44:	movt	r2, #1
   11e48:	mov	r0, #0
   11e4c:	mov	r1, r5
   11e50:	b	11f24 <putc_unlocked@plt+0xbc0>
   11e54:	movw	r0, #33157	; 0x8185
   11e58:	movt	r0, #2
   11e5c:	mov	r1, #1
   11e60:	strb	r1, [r0]
   11e64:	movw	r0, #33144	; 0x8178
   11e68:	movt	r0, #2
   11e6c:	ldr	r7, [r0]
   11e70:	mov	r0, r7
   11e74:	mov	r1, #2
   11e78:	bl	1203c <putc_unlocked@plt+0xcd8>
   11e7c:	movw	r0, #33156	; 0x8184
   11e80:	movt	r0, #2
   11e84:	ldrb	r0, [r0]
   11e88:	movw	r1, #28304	; 0x6e90
   11e8c:	movt	r1, #1
   11e90:	ldr	r3, [r1, r0, lsl #2]
   11e94:	mov	r0, r7
   11e98:	mov	r1, r4
   11e9c:	mov	r2, r6
   11ea0:	blx	r3
   11ea4:	cmp	r0, #0
   11ea8:	beq	11eb8 <putc_unlocked@plt+0xb54>
   11eac:	bl	1122c <__errno_location@plt>
   11eb0:	ldr	r6, [r0]
   11eb4:	b	11ebc <putc_unlocked@plt+0xb58>
   11eb8:	mov	r6, #0
   11ebc:	mov	r0, r7
   11ec0:	cmp	r5, #0
   11ec4:	beq	11ee8 <putc_unlocked@plt+0xb84>
   11ec8:	bl	12078 <putc_unlocked@plt+0xd14>
   11ecc:	cmp	r6, #0
   11ed0:	bne	11eec <putc_unlocked@plt+0xb88>
   11ed4:	cmp	r0, #0
   11ed8:	beq	11eec <putc_unlocked@plt+0xb88>
   11edc:	bl	1122c <__errno_location@plt>
   11ee0:	ldr	r6, [r0]
   11ee4:	b	11eec <putc_unlocked@plt+0xb88>
   11ee8:	bl	112ec <clearerr_unlocked@plt>
   11eec:	cmp	r6, #0
   11ef0:	moveq	r4, #1
   11ef4:	moveq	r0, r4
   11ef8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   11efc:	mov	r4, #0
   11f00:	mov	r0, #0
   11f04:	mov	r1, #3
   11f08:	mov	r2, r8
   11f0c:	bl	1450c <putc_unlocked@plt+0x31a8>
   11f10:	mov	r3, r0
   11f14:	movw	r2, #29741	; 0x742d
   11f18:	movt	r2, #1
   11f1c:	mov	r0, #0
   11f20:	mov	r1, r6
   11f24:	bl	111a8 <error@plt>
   11f28:	mov	r0, r4
   11f2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11f30:	movw	r1, #33160	; 0x8188
   11f34:	movt	r1, #2
   11f38:	str	r0, [r1]
   11f3c:	bx	lr
   11f40:	movw	r1, #33164	; 0x818c
   11f44:	movt	r1, #2
   11f48:	strb	r0, [r1]
   11f4c:	bx	lr
   11f50:	push	{r4, r5, r6, sl, fp, lr}
   11f54:	add	fp, sp, #16
   11f58:	sub	sp, sp, #8
   11f5c:	movw	r0, #33148	; 0x817c
   11f60:	movt	r0, #2
   11f64:	ldr	r0, [r0]
   11f68:	bl	16028 <putc_unlocked@plt+0x4cc4>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f98 <putc_unlocked@plt+0xc34>
   11f74:	movw	r0, #33164	; 0x818c
   11f78:	movt	r0, #2
   11f7c:	ldrb	r0, [r0]
   11f80:	cmp	r0, #0
   11f84:	beq	11fb8 <putc_unlocked@plt+0xc54>
   11f88:	bl	1122c <__errno_location@plt>
   11f8c:	ldr	r0, [r0]
   11f90:	cmp	r0, #32
   11f94:	bne	11fb8 <putc_unlocked@plt+0xc54>
   11f98:	movw	r0, #33136	; 0x8170
   11f9c:	movt	r0, #2
   11fa0:	ldr	r0, [r0]
   11fa4:	bl	16028 <putc_unlocked@plt+0x4cc4>
   11fa8:	cmp	r0, #0
   11fac:	subeq	sp, fp, #16
   11fb0:	popeq	{r4, r5, r6, sl, fp, pc}
   11fb4:	b	12028 <putc_unlocked@plt+0xcc4>
   11fb8:	movw	r1, #28327	; 0x6ea7
   11fbc:	movt	r1, #1
   11fc0:	mov	r0, #0
   11fc4:	mov	r2, #5
   11fc8:	bl	11130 <dcgettext@plt>
   11fcc:	mov	r4, r0
   11fd0:	movw	r0, #33160	; 0x8188
   11fd4:	movt	r0, #2
   11fd8:	ldr	r6, [r0]
   11fdc:	bl	1122c <__errno_location@plt>
   11fe0:	ldr	r5, [r0]
   11fe4:	cmp	r6, #0
   11fe8:	bne	12004 <putc_unlocked@plt+0xca0>
   11fec:	movw	r2, #29741	; 0x742d
   11ff0:	movt	r2, #1
   11ff4:	mov	r0, #0
   11ff8:	mov	r1, r5
   11ffc:	mov	r3, r4
   12000:	b	12024 <putc_unlocked@plt+0xcc0>
   12004:	mov	r0, r6
   12008:	bl	144fc <putc_unlocked@plt+0x3198>
   1200c:	mov	r3, r0
   12010:	str	r4, [sp]
   12014:	movw	r2, #28339	; 0x6eb3
   12018:	movt	r2, #1
   1201c:	mov	r0, #0
   12020:	mov	r1, r5
   12024:	bl	111a8 <error@plt>
   12028:	movw	r0, #33044	; 0x8114
   1202c:	movt	r0, #2
   12030:	ldr	r0, [r0]
   12034:	bl	11100 <_exit@plt>
   12038:	b	110d0 <posix_fadvise64@plt>
   1203c:	cmp	r0, #0
   12040:	bxeq	lr
   12044:	push	{r4, sl, fp, lr}
   12048:	add	fp, sp, #8
   1204c:	sub	sp, sp, #16
   12050:	mov	r4, r1
   12054:	bl	11274 <fileno@plt>
   12058:	mov	r1, #0
   1205c:	str	r1, [sp]
   12060:	stmib	sp, {r1, r4}
   12064:	mov	r2, #0
   12068:	mov	r3, #0
   1206c:	bl	12038 <putc_unlocked@plt+0xcd4>
   12070:	sub	sp, fp, #8
   12074:	pop	{r4, sl, fp, pc}
   12078:	push	{r4, r5, fp, lr}
   1207c:	add	fp, sp, #8
   12080:	sub	sp, sp, #8
   12084:	mov	r4, r0
   12088:	bl	11274 <fileno@plt>
   1208c:	cmn	r0, #1
   12090:	ble	12108 <putc_unlocked@plt+0xda4>
   12094:	mov	r0, r4
   12098:	bl	111d8 <__freading@plt>
   1209c:	cmp	r0, #0
   120a0:	beq	120cc <putc_unlocked@plt+0xd68>
   120a4:	mov	r0, r4
   120a8:	bl	11274 <fileno@plt>
   120ac:	mov	r1, #1
   120b0:	str	r1, [sp]
   120b4:	mov	r2, #0
   120b8:	mov	r3, #0
   120bc:	bl	1116c <lseek64@plt>
   120c0:	and	r0, r0, r1
   120c4:	cmn	r0, #1
   120c8:	beq	12108 <putc_unlocked@plt+0xda4>
   120cc:	mov	r0, r4
   120d0:	bl	12118 <putc_unlocked@plt+0xdb4>
   120d4:	cmp	r0, #0
   120d8:	beq	12108 <putc_unlocked@plt+0xda4>
   120dc:	bl	1122c <__errno_location@plt>
   120e0:	ldr	r5, [r0]
   120e4:	mov	r0, r4
   120e8:	bl	11298 <fclose@plt>
   120ec:	cmp	r5, #0
   120f0:	beq	12100 <putc_unlocked@plt+0xd9c>
   120f4:	bl	1122c <__errno_location@plt>
   120f8:	str	r5, [r0]
   120fc:	mvn	r0, #0
   12100:	sub	sp, fp, #8
   12104:	pop	{r4, r5, fp, pc}
   12108:	mov	r0, r4
   1210c:	sub	sp, fp, #8
   12110:	pop	{r4, r5, fp, lr}
   12114:	b	11298 <fclose@plt>
   12118:	push	{r4, sl, fp, lr}
   1211c:	add	fp, sp, #8
   12120:	mov	r4, r0
   12124:	cmp	r0, #0
   12128:	beq	12140 <putc_unlocked@plt+0xddc>
   1212c:	mov	r0, r4
   12130:	bl	111d8 <__freading@plt>
   12134:	cmp	r0, #0
   12138:	movne	r0, r4
   1213c:	blne	1214c <putc_unlocked@plt+0xde8>
   12140:	mov	r0, r4
   12144:	pop	{r4, sl, fp, lr}
   12148:	b	110dc <fflush@plt>
   1214c:	ldrb	r1, [r0, #1]
   12150:	tst	r1, #1
   12154:	bxeq	lr
   12158:	push	{fp, lr}
   1215c:	mov	fp, sp
   12160:	sub	sp, sp, #8
   12164:	mov	r1, #1
   12168:	str	r1, [sp]
   1216c:	mov	r2, #0
   12170:	mov	r3, #0
   12174:	bl	1225c <putc_unlocked@plt+0xef8>
   12178:	mov	sp, fp
   1217c:	pop	{fp, pc}
   12180:	push	{r4, r5, r6, r7, fp, lr}
   12184:	add	fp, sp, #16
   12188:	mov	r5, r1
   1218c:	bl	112f8 <fopen64@plt>
   12190:	mov	r4, #0
   12194:	cmp	r0, #0
   12198:	beq	121e8 <putc_unlocked@plt+0xe84>
   1219c:	mov	r6, r0
   121a0:	bl	11274 <fileno@plt>
   121a4:	cmp	r0, #2
   121a8:	movhi	r0, r6
   121ac:	pophi	{r4, r5, r6, r7, fp, pc}
   121b0:	bl	14a60 <putc_unlocked@plt+0x36fc>
   121b4:	cmn	r0, #1
   121b8:	ble	12214 <putc_unlocked@plt+0xeb0>
   121bc:	mov	r7, r0
   121c0:	mov	r0, r6
   121c4:	bl	12078 <putc_unlocked@plt+0xd14>
   121c8:	cmp	r0, #0
   121cc:	bne	121f0 <putc_unlocked@plt+0xe8c>
   121d0:	mov	r0, r7
   121d4:	mov	r1, r5
   121d8:	bl	11094 <fdopen@plt>
   121dc:	mov	r4, r0
   121e0:	cmp	r0, #0
   121e4:	beq	121f0 <putc_unlocked@plt+0xe8c>
   121e8:	mov	r0, r4
   121ec:	pop	{r4, r5, r6, r7, fp, pc}
   121f0:	bl	1122c <__errno_location@plt>
   121f4:	mov	r4, r0
   121f8:	ldr	r5, [r0]
   121fc:	mov	r0, r7
   12200:	bl	11340 <close@plt>
   12204:	str	r5, [r4]
   12208:	mov	r4, #0
   1220c:	mov	r0, r4
   12210:	pop	{r4, r5, r6, r7, fp, pc}
   12214:	bl	1122c <__errno_location@plt>
   12218:	mov	r5, r0
   1221c:	ldr	r7, [r0]
   12220:	mov	r0, r6
   12224:	bl	12078 <putc_unlocked@plt+0xd14>
   12228:	str	r7, [r5]
   1222c:	mov	r0, r4
   12230:	pop	{r4, r5, r6, r7, fp, pc}
   12234:	push	{r4, r5, r6, sl, fp, lr}
   12238:	add	fp, sp, #16
   1223c:	mov	r4, r0
   12240:	bl	1122c <__errno_location@plt>
   12244:	mov	r5, r0
   12248:	ldr	r6, [r0]
   1224c:	mov	r0, r4
   12250:	bl	110f4 <free@plt>
   12254:	str	r6, [r5]
   12258:	pop	{r4, r5, r6, sl, fp, pc}
   1225c:	push	{r4, r5, r6, r7, fp, lr}
   12260:	add	fp, sp, #16
   12264:	sub	sp, sp, #8
   12268:	mov	r5, r3
   1226c:	mov	r6, r2
   12270:	mov	r4, r0
   12274:	ldr	r0, [r0, #4]
   12278:	ldr	r1, [r4, #8]
   1227c:	cmp	r1, r0
   12280:	bne	1229c <putc_unlocked@plt+0xf38>
   12284:	ldrd	r0, [r4, #16]
   12288:	cmp	r1, r0
   1228c:	bne	1229c <putc_unlocked@plt+0xf38>
   12290:	ldr	r0, [r4, #36]	; 0x24
   12294:	cmp	r0, #0
   12298:	beq	122b4 <putc_unlocked@plt+0xf50>
   1229c:	mov	r0, r4
   122a0:	mov	r2, r6
   122a4:	mov	r3, r5
   122a8:	sub	sp, fp, #16
   122ac:	pop	{r4, r5, r6, r7, fp, lr}
   122b0:	b	112a4 <fseeko64@plt>
   122b4:	ldr	r7, [fp, #8]
   122b8:	mov	r0, r4
   122bc:	bl	11274 <fileno@plt>
   122c0:	str	r7, [sp]
   122c4:	mov	r2, r6
   122c8:	mov	r3, r5
   122cc:	bl	1116c <lseek64@plt>
   122d0:	and	r2, r0, r1
   122d4:	cmn	r2, #1
   122d8:	mvneq	r0, #0
   122dc:	subeq	sp, fp, #16
   122e0:	popeq	{r4, r5, r6, r7, fp, pc}
   122e4:	strd	r0, [r4, #80]	; 0x50
   122e8:	ldr	r0, [r4]
   122ec:	bic	r0, r0, #16
   122f0:	str	r0, [r4]
   122f4:	mov	r0, #0
   122f8:	sub	sp, fp, #16
   122fc:	pop	{r4, r5, r6, r7, fp, pc}
   12300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12304:	add	fp, sp, #28
   12308:	sub	sp, sp, #4
   1230c:	vpush	{d8-d9}
   12310:	sub	sp, sp, #56	; 0x38
   12314:	mov	r5, r3
   12318:	mov	r7, r2
   1231c:	str	r1, [sp, #48]	; 0x30
   12320:	str	r0, [sp, #36]	; 0x24
   12324:	bl	112e0 <localeconv@plt>
   12328:	mov	r4, r0
   1232c:	ldr	r6, [r0]
   12330:	mov	r0, r6
   12334:	bl	11214 <strlen@plt>
   12338:	sub	r1, r0, #1
   1233c:	movw	r2, #28346	; 0x6eba
   12340:	movt	r2, #1
   12344:	cmp	r1, #16
   12348:	movcc	r2, r6
   1234c:	str	r2, [sp, #8]
   12350:	movcs	r0, #1
   12354:	str	r0, [sp, #12]
   12358:	ldr	r6, [r4, #4]
   1235c:	ldr	r4, [r4, #8]
   12360:	mov	r0, r6
   12364:	bl	11214 <strlen@plt>
   12368:	movw	r1, #28155	; 0x6dfb
   1236c:	movt	r1, #1
   12370:	cmp	r0, #17
   12374:	movcc	r1, r6
   12378:	movw	r0, #647	; 0x287
   1237c:	str	r7, [sp, #32]
   12380:	add	r0, r7, r0
   12384:	str	r0, [sp, #40]	; 0x28
   12388:	ands	r0, r5, #32
   1238c:	str	r0, [sp, #24]
   12390:	mov	r0, #1000	; 0x3e8
   12394:	movwne	r0, #1024	; 0x400
   12398:	str	r0, [sp, #52]	; 0x34
   1239c:	and	r7, r5, #3
   123a0:	ldr	r3, [fp, #20]
   123a4:	ldr	r2, [fp, #16]
   123a8:	ldr	r6, [fp, #12]
   123ac:	ldr	sl, [fp, #8]
   123b0:	subs	r0, sl, r2
   123b4:	sbcs	r0, r6, r3
   123b8:	str	r5, [sp, #44]	; 0x2c
   123bc:	str	r4, [sp, #20]
   123c0:	str	r1, [sp, #16]
   123c4:	str	r7, [sp, #28]
   123c8:	bcs	124c0 <putc_unlocked@plt+0x115c>
   123cc:	orrs	r0, sl, r6
   123d0:	beq	125b4 <putc_unlocked@plt+0x1250>
   123d4:	mov	r0, r2
   123d8:	mov	r1, r3
   123dc:	mov	r2, sl
   123e0:	mov	r3, r6
   123e4:	bl	16884 <putc_unlocked@plt+0x5520>
   123e8:	ldr	r2, [fp, #16]
   123ec:	ldr	r3, [fp, #20]
   123f0:	mov	r8, r0
   123f4:	mov	r7, r1
   123f8:	umull	r0, r1, r0, sl
   123fc:	mla	r1, r8, r6, r1
   12400:	mla	r1, r7, sl, r1
   12404:	subs	r0, r2, r0
   12408:	sbc	r1, r3, r1
   1240c:	orrs	r0, r0, r1
   12410:	bne	125b4 <putc_unlocked@plt+0x1250>
   12414:	ldr	r5, [sp, #36]	; 0x24
   12418:	mov	r0, r5
   1241c:	ldr	r4, [sp, #48]	; 0x30
   12420:	mov	r1, r4
   12424:	mov	r2, r8
   12428:	mov	r3, r7
   1242c:	mov	r6, r7
   12430:	bl	16884 <putc_unlocked@plt+0x5520>
   12434:	mov	r9, r0
   12438:	mov	r7, r1
   1243c:	umull	r0, r1, r0, r8
   12440:	mla	r1, r9, r6, r1
   12444:	mla	r1, r7, r8, r1
   12448:	subs	r0, r5, r0
   1244c:	sbc	r1, r4, r1
   12450:	add	r1, r1, r1, lsl #2
   12454:	mov	r2, #10
   12458:	umull	r5, r0, r0, r2
   1245c:	add	sl, r0, r1, lsl #1
   12460:	mov	r0, r5
   12464:	mov	r1, sl
   12468:	mov	r2, r8
   1246c:	mov	r3, r6
   12470:	bl	16884 <putc_unlocked@plt+0x5520>
   12474:	mov	r4, r0
   12478:	umull	r0, r2, r0, r8
   1247c:	mla	r2, r4, r6, r2
   12480:	mla	r1, r1, r8, r2
   12484:	subs	r0, r5, r0
   12488:	sbc	r1, sl, r1
   1248c:	lsl	r1, r1, #1
   12490:	orr	r1, r1, r0, lsr #31
   12494:	mov	r2, #2
   12498:	subs	r3, r8, r0, lsl #1
   1249c:	sbcs	r3, r6, r1
   124a0:	movwcc	r2, #3
   124a4:	orr	sl, r1, r0, lsl #1
   124a8:	cmp	sl, #0
   124ac:	movwne	sl, #1
   124b0:	rsbs	r0, r8, r0, lsl #1
   124b4:	sbcs	r0, r1, r6
   124b8:	movcs	sl, r2
   124bc:	b	12544 <putc_unlocked@plt+0x11e0>
   124c0:	mov	r0, sl
   124c4:	mov	r1, r6
   124c8:	bl	16884 <putc_unlocked@plt+0x5520>
   124cc:	ldr	r2, [fp, #16]
   124d0:	ldr	r3, [fp, #20]
   124d4:	mov	r4, r0
   124d8:	mov	r5, r1
   124dc:	umull	r0, r1, r0, r2
   124e0:	mla	r1, r4, r3, r1
   124e4:	mla	r1, r5, r2, r1
   124e8:	subs	r0, sl, r0
   124ec:	sbc	r1, r6, r1
   124f0:	orrs	r0, r0, r1
   124f4:	bne	125b4 <putc_unlocked@plt+0x1250>
   124f8:	ldr	r8, [sp, #36]	; 0x24
   124fc:	umull	r9, r0, r4, r8
   12500:	ldr	r1, [sp, #48]	; 0x30
   12504:	mla	r0, r4, r1, r0
   12508:	mla	r7, r5, r8, r0
   1250c:	mov	r0, r9
   12510:	mov	r1, r7
   12514:	mov	r2, r4
   12518:	mov	r3, r5
   1251c:	bl	16884 <putc_unlocked@plt+0x5520>
   12520:	ldr	r2, [fp, #16]
   12524:	ldr	r3, [fp, #20]
   12528:	ldr	r5, [sp, #48]	; 0x30
   1252c:	eor	r1, r1, r5
   12530:	eor	r0, r0, r8
   12534:	orrs	r0, r0, r1
   12538:	bne	125b4 <putc_unlocked@plt+0x1250>
   1253c:	mov	sl, #0
   12540:	mov	r4, #0
   12544:	ldr	r0, [sp, #44]	; 0x2c
   12548:	ldr	r6, [sp, #52]	; 0x34
   1254c:	ands	ip, r0, #16
   12550:	mvn	r5, #0
   12554:	beq	12568 <putc_unlocked@plt+0x1204>
   12558:	mov	r5, #0
   1255c:	subs	r0, r9, r6
   12560:	sbcs	r0, r7, #0
   12564:	bcs	127d4 <putc_unlocked@plt+0x1470>
   12568:	ldr	r3, [sp, #40]	; 0x28
   1256c:	mov	r8, r9
   12570:	ldr	r9, [sp, #28]
   12574:	cmp	r9, #0
   12578:	beq	12928 <putc_unlocked@plt+0x15c4>
   1257c:	cmp	r9, #1
   12580:	bne	127c8 <putc_unlocked@plt+0x1464>
   12584:	mov	r0, #0
   12588:	rsbs	r1, sl, #0
   1258c:	sbc	r0, r0, #0
   12590:	and	r2, r8, #1
   12594:	eor	r1, r2, r1
   12598:	orrs	r0, r1, r0
   1259c:	addne	r4, r4, #1
   125a0:	cmp	r4, #5
   125a4:	ldr	r9, [sp, #40]	; 0x28
   125a8:	ldr	sl, [sp, #32]
   125ac:	bgt	1293c <putc_unlocked@plt+0x15d8>
   125b0:	b	12998 <putc_unlocked@plt+0x1634>
   125b4:	mov	r0, r2
   125b8:	mov	r1, r3
   125bc:	bl	16810 <putc_unlocked@plt+0x54ac>
   125c0:	vmov	d8, r0, r1
   125c4:	ldr	r0, [sp, #36]	; 0x24
   125c8:	ldr	r1, [sp, #48]	; 0x30
   125cc:	bl	16810 <putc_unlocked@plt+0x54ac>
   125d0:	mov	r5, r0
   125d4:	mov	r7, r1
   125d8:	mov	r0, sl
   125dc:	mov	r1, r6
   125e0:	bl	16810 <putc_unlocked@plt+0x54ac>
   125e4:	vmov	d16, r0, r1
   125e8:	vmov	d17, r5, r7
   125ec:	vdiv.f64	d16, d16, d8
   125f0:	vmul.f64	d0, d16, d17
   125f4:	ldr	r8, [sp, #44]	; 0x2c
   125f8:	tst	r8, #16
   125fc:	bne	12644 <putc_unlocked@plt+0x12e0>
   12600:	ldr	r0, [sp, #28]
   12604:	bl	12aa8 <putc_unlocked@plt+0x1744>
   12608:	vstr	d0, [sp]
   1260c:	mvn	r5, #0
   12610:	movw	r3, #28348	; 0x6ebc
   12614:	movt	r3, #1
   12618:	ldr	sl, [sp, #32]
   1261c:	mov	r0, sl
   12620:	mov	r1, #1
   12624:	mvn	r2, #0
   12628:	bl	11238 <__sprintf_chk@plt>
   1262c:	mov	r0, sl
   12630:	bl	11214 <strlen@plt>
   12634:	mov	r2, r0
   12638:	mov	r7, #0
   1263c:	ldr	r9, [sp, #40]	; 0x28
   12640:	b	12738 <putc_unlocked@plt+0x13d4>
   12644:	vmov.f64	d16, #112	; 0x3f800000  1.0
   12648:	ldr	r0, [sp, #52]	; 0x34
   1264c:	vmov	s2, r0
   12650:	vcvt.f64.u32	d17, s2
   12654:	mov	r5, #0
   12658:	vmul.f64	d16, d16, d17
   1265c:	add	r5, r5, #1
   12660:	cmp	r5, #7
   12664:	vmulls.f64	d18, d16, d17
   12668:	vcmpels.f64	d18, d0
   1266c:	vmrsls	APSR_nzcv, fpscr
   12670:	bls	12658 <putc_unlocked@plt+0x12f4>
   12674:	vdiv.f64	d8, d0, d16
   12678:	ldr	r9, [sp, #28]
   1267c:	mov	r0, r9
   12680:	vmov.f64	d0, d8
   12684:	bl	12aa8 <putc_unlocked@plt+0x1744>
   12688:	vstr	d0, [sp]
   1268c:	movw	r3, #28354	; 0x6ec2
   12690:	movt	r3, #1
   12694:	ldr	sl, [sp, #32]
   12698:	mov	r0, sl
   1269c:	mov	r1, #1
   126a0:	mvn	r2, #0
   126a4:	bl	11238 <__sprintf_chk@plt>
   126a8:	mov	r0, #3
   126ac:	ldr	r1, [sp, #24]
   126b0:	cmp	r1, #0
   126b4:	movwne	r0, #2
   126b8:	ldr	r7, [sp, #12]
   126bc:	add	r4, r0, r7
   126c0:	mov	r0, sl
   126c4:	bl	11214 <strlen@plt>
   126c8:	cmp	r4, r0
   126cc:	ldr	r4, [sp, #40]	; 0x28
   126d0:	bcc	126f4 <putc_unlocked@plt+0x1390>
   126d4:	mov	r2, r0
   126d8:	add	r7, r7, #1
   126dc:	tst	r8, #8
   126e0:	beq	12734 <putc_unlocked@plt+0x13d0>
   126e4:	add	r0, sl, r2
   126e8:	ldrb	r0, [r0, #-1]
   126ec:	cmp	r0, #48	; 0x30
   126f0:	bne	12734 <putc_unlocked@plt+0x13d0>
   126f4:	vmov.f64	d9, #36	; 0x41200000  10.0
   126f8:	vmul.f64	d0, d8, d9
   126fc:	mov	r0, r9
   12700:	bl	12aa8 <putc_unlocked@plt+0x1744>
   12704:	vdiv.f64	d16, d0, d9
   12708:	vstr	d16, [sp]
   1270c:	movw	r3, #28348	; 0x6ebc
   12710:	movt	r3, #1
   12714:	mov	r0, sl
   12718:	mov	r1, #1
   1271c:	mvn	r2, #0
   12720:	bl	11238 <__sprintf_chk@plt>
   12724:	mov	r0, sl
   12728:	bl	11214 <strlen@plt>
   1272c:	mov	r2, r0
   12730:	mov	r7, #0
   12734:	mov	r9, r4
   12738:	sub	r4, r9, r2
   1273c:	mov	r0, r4
   12740:	mov	r1, sl
   12744:	bl	110e8 <memmove@plt>
   12748:	sub	r0, r9, r7
   1274c:	tst	r8, #4
   12750:	beq	1276c <putc_unlocked@plt+0x1408>
   12754:	sub	r1, r0, r4
   12758:	mov	r0, r4
   1275c:	ldr	r2, [sp, #20]
   12760:	ldr	r3, [sp, #16]
   12764:	bl	12b30 <putc_unlocked@plt+0x17cc>
   12768:	mov	r4, r0
   1276c:	ldr	r3, [fp, #20]
   12770:	ldr	r7, [fp, #16]
   12774:	ldr	r6, [sp, #52]	; 0x34
   12778:	tst	r8, #128	; 0x80
   1277c:	beq	128f8 <putc_unlocked@plt+0x1594>
   12780:	cmn	r5, #1
   12784:	bgt	12890 <putc_unlocked@plt+0x152c>
   12788:	mov	r5, #0
   1278c:	subs	r0, r7, #2
   12790:	sbcs	r0, r3, #0
   12794:	bcc	12890 <putc_unlocked@plt+0x152c>
   12798:	mov	r0, #0
   1279c:	mov	r1, #1
   127a0:	mov	r5, #0
   127a4:	cmp	r5, #7
   127a8:	beq	1288c <putc_unlocked@plt+0x1528>
   127ac:	add	r5, r5, #1
   127b0:	umull	r1, r2, r1, r6
   127b4:	mla	r0, r0, r6, r2
   127b8:	subs	r2, r1, r7
   127bc:	sbcs	r2, r0, r3
   127c0:	bcc	127a4 <putc_unlocked@plt+0x1440>
   127c4:	b	12890 <putc_unlocked@plt+0x152c>
   127c8:	ldr	r9, [sp, #40]	; 0x28
   127cc:	ldr	sl, [sp, #32]
   127d0:	b	12998 <putc_unlocked@plt+0x1634>
   127d4:	str	ip, [sp, #48]	; 0x30
   127d8:	mov	r5, #0
   127dc:	mov	r0, r9
   127e0:	mov	r1, r7
   127e4:	mov	r2, r6
   127e8:	mov	r3, #0
   127ec:	bl	16884 <putc_unlocked@plt+0x5520>
   127f0:	mov	r8, r0
   127f4:	mov	r7, r1
   127f8:	mls	r0, r0, r6, r9
   127fc:	add	r0, r0, r0, lsl #2
   12800:	add	r0, r4, r0, lsl #1
   12804:	udiv	r4, r0, r6
   12808:	mls	r0, r4, r6, r0
   1280c:	lsl	r0, r0, #1
   12810:	add	r0, r0, sl, lsr #1
   12814:	cmp	r0, r6
   12818:	bcs	12830 <putc_unlocked@plt+0x14cc>
   1281c:	add	r1, r0, sl
   12820:	cmn	r0, sl
   12824:	movwne	r1, #1
   12828:	mov	sl, r1
   1282c:	b	12840 <putc_unlocked@plt+0x14dc>
   12830:	add	r0, r0, sl
   12834:	cmp	r6, r0
   12838:	mov	sl, #2
   1283c:	movwcc	sl, #3
   12840:	add	r5, r5, #1
   12844:	cmp	r5, #7
   12848:	bhi	1285c <putc_unlocked@plt+0x14f8>
   1284c:	subs	r0, r8, r6
   12850:	sbcs	r0, r7, #0
   12854:	mov	r9, r8
   12858:	bcs	127dc <putc_unlocked@plt+0x1478>
   1285c:	rsbs	r0, r8, #9
   12860:	rscs	r0, r7, #0
   12864:	bcc	12914 <putc_unlocked@plt+0x15b0>
   12868:	ldr	r9, [sp, #28]
   1286c:	cmp	r9, #1
   12870:	ldr	ip, [sp, #48]	; 0x30
   12874:	bne	129ec <putc_unlocked@plt+0x1688>
   12878:	and	r0, r4, #1
   1287c:	add	r0, sl, r0
   12880:	cmp	r0, #2
   12884:	bhi	129fc <putc_unlocked@plt+0x1698>
   12888:	b	12a30 <putc_unlocked@plt+0x16cc>
   1288c:	mov	r5, #8
   12890:	and	r0, r8, #256	; 0x100
   12894:	tst	r8, #64	; 0x40
   12898:	orrsne	r1, r5, r0
   1289c:	movne	r1, #32
   128a0:	strbne	r1, [sl, #647]	; 0x287
   128a4:	addne	r9, sl, #648	; 0x288
   128a8:	cmp	r5, #0
   128ac:	beq	128d4 <putc_unlocked@plt+0x1570>
   128b0:	ldr	r1, [sp, #24]
   128b4:	cmp	r1, #0
   128b8:	moveq	r1, #107	; 0x6b
   128bc:	cmpeq	r5, #1
   128c0:	beq	128d0 <putc_unlocked@plt+0x156c>
   128c4:	movw	r1, #28436	; 0x6f14
   128c8:	movt	r1, #1
   128cc:	ldrb	r1, [r1, r5]
   128d0:	strb	r1, [r9], #1
   128d4:	cmp	r0, #0
   128d8:	beq	128f8 <putc_unlocked@plt+0x1594>
   128dc:	ldr	r0, [sp, #24]
   128e0:	cmp	r0, #0
   128e4:	cmpne	r5, #0
   128e8:	movne	r0, #105	; 0x69
   128ec:	strbne	r0, [r9], #1
   128f0:	mov	r0, #66	; 0x42
   128f4:	strb	r0, [r9], #1
   128f8:	mov	r0, #0
   128fc:	strb	r0, [r9]
   12900:	mov	r0, r4
   12904:	sub	sp, fp, #48	; 0x30
   12908:	vpop	{d8-d9}
   1290c:	add	sp, sp, #4
   12910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12914:	ldr	r3, [sp, #40]	; 0x28
   12918:	ldr	r9, [sp, #28]
   1291c:	ldr	ip, [sp, #48]	; 0x30
   12920:	cmp	r9, #0
   12924:	bne	1257c <putc_unlocked@plt+0x1218>
   12928:	add	r0, r4, sl
   1292c:	cmp	r0, #1
   12930:	ldr	r9, [sp, #40]	; 0x28
   12934:	ldr	sl, [sp, #32]
   12938:	blt	12998 <putc_unlocked@plt+0x1634>
   1293c:	adds	r8, r8, #1
   12940:	adc	r7, r7, #0
   12944:	cmp	r5, #7
   12948:	bgt	12998 <putc_unlocked@plt+0x1634>
   1294c:	cmp	ip, #0
   12950:	beq	12998 <putc_unlocked@plt+0x1634>
   12954:	eor	r0, r8, r6
   12958:	orrs	r0, r0, r7
   1295c:	addeq	r5, r5, #1
   12960:	moveq	r7, #0
   12964:	moveq	r8, #1
   12968:	ldreq	r0, [sp, #44]	; 0x2c
   1296c:	tsteq	r0, #8
   12970:	bne	12998 <putc_unlocked@plt+0x1634>
   12974:	mov	r0, #48	; 0x30
   12978:	strb	r0, [r3, #-1]!
   1297c:	ldr	r2, [sp, #12]
   12980:	sub	r3, r3, r2
   12984:	mov	r0, r3
   12988:	ldr	r1, [sp, #8]
   1298c:	mov	r4, r3
   12990:	bl	1110c <memcpy@plt>
   12994:	mov	r3, r4
   12998:	str	r3, [sp, #48]	; 0x30
   1299c:	mov	r4, r3
   129a0:	mov	r0, r8
   129a4:	mov	r1, r7
   129a8:	mov	r2, #10
   129ac:	mov	r3, #0
   129b0:	bl	16884 <putc_unlocked@plt+0x5520>
   129b4:	add	r2, r0, r0, lsl #2
   129b8:	sub	r2, r8, r2, lsl #1
   129bc:	orr	r2, r2, #48	; 0x30
   129c0:	strb	r2, [r4, #-1]!
   129c4:	rsbs	r2, r8, #9
   129c8:	rscs	r2, r7, #0
   129cc:	mov	r8, r0
   129d0:	mov	r7, r1
   129d4:	bcc	129a0 <putc_unlocked@plt+0x163c>
   129d8:	ldr	r8, [sp, #44]	; 0x2c
   129dc:	ldr	r0, [sp, #48]	; 0x30
   129e0:	tst	r8, #4
   129e4:	bne	12754 <putc_unlocked@plt+0x13f0>
   129e8:	b	1276c <putc_unlocked@plt+0x1408>
   129ec:	cmp	r9, #0
   129f0:	bne	12a30 <putc_unlocked@plt+0x16cc>
   129f4:	cmp	sl, #0
   129f8:	beq	12a30 <putc_unlocked@plt+0x16cc>
   129fc:	adds	r0, r8, #1
   12a00:	adc	r1, r7, #0
   12a04:	add	r4, r4, #1
   12a08:	mov	sl, #0
   12a0c:	cmp	r4, #10
   12a10:	bne	12a30 <putc_unlocked@plt+0x16cc>
   12a14:	mov	r4, #0
   12a18:	rsbs	r2, r0, #9
   12a1c:	rscs	r2, r1, #0
   12a20:	mov	r8, r0
   12a24:	mov	r7, r1
   12a28:	mov	sl, #0
   12a2c:	bcc	12a88 <putc_unlocked@plt+0x1724>
   12a30:	ldr	r0, [sp, #44]	; 0x2c
   12a34:	tst	r0, #8
   12a38:	beq	12a4c <putc_unlocked@plt+0x16e8>
   12a3c:	cmp	r4, #0
   12a40:	bne	12a4c <putc_unlocked@plt+0x16e8>
   12a44:	ldr	r3, [sp, #40]	; 0x28
   12a48:	b	12a78 <putc_unlocked@plt+0x1714>
   12a4c:	add	r0, r4, #48	; 0x30
   12a50:	ldr	r1, [sp, #32]
   12a54:	strb	r0, [r1, #646]!	; 0x286
   12a58:	ldr	r2, [sp, #12]
   12a5c:	sub	r4, r1, r2
   12a60:	mov	r0, r4
   12a64:	ldr	r1, [sp, #8]
   12a68:	bl	1110c <memcpy@plt>
   12a6c:	mov	r3, r4
   12a70:	ldr	ip, [sp, #48]	; 0x30
   12a74:	mov	sl, #0
   12a78:	mov	r4, #0
   12a7c:	cmp	r9, #0
   12a80:	bne	1257c <putc_unlocked@plt+0x1218>
   12a84:	b	12928 <putc_unlocked@plt+0x15c4>
   12a88:	mov	sl, #0
   12a8c:	ldr	r3, [sp, #40]	; 0x28
   12a90:	mov	r8, #10
   12a94:	mov	r7, #0
   12a98:	cmp	r9, #0
   12a9c:	bne	1257c <putc_unlocked@plt+0x1218>
   12aa0:	b	12928 <putc_unlocked@plt+0x15c4>
   12aa4:	nop	{0}
   12aa8:	push	{r4, r5, r6, sl, fp, lr}
   12aac:	add	fp, sp, #16
   12ab0:	vpush	{d8}
   12ab4:	vmov.f64	d8, d0
   12ab8:	cmp	r0, #1
   12abc:	beq	12b18 <putc_unlocked@plt+0x17b4>
   12ac0:	vldr	d16, [pc, #96]	; 12b28 <putc_unlocked@plt+0x17c4>
   12ac4:	vcmpe.f64	d8, d16
   12ac8:	vmrs	APSR_nzcv, fpscr
   12acc:	bpl	12b18 <putc_unlocked@plt+0x17b4>
   12ad0:	mov	r4, r0
   12ad4:	vmov	r0, r1, d8
   12ad8:	bl	168d0 <putc_unlocked@plt+0x556c>
   12adc:	mov	r5, r0
   12ae0:	mov	r6, r1
   12ae4:	bl	16810 <putc_unlocked@plt+0x54ac>
   12ae8:	mov	r2, #0
   12aec:	vmov	d16, r0, r1
   12af0:	vcmp.f64	d16, d8
   12af4:	vmrs	APSR_nzcv, fpscr
   12af8:	movwne	r2, #1
   12afc:	clz	r0, r4
   12b00:	lsr	r0, r0, #5
   12b04:	and	r0, r0, r2
   12b08:	adds	r0, r0, r5
   12b0c:	adc	r1, r6, #0
   12b10:	bl	16810 <putc_unlocked@plt+0x54ac>
   12b14:	vmov	d8, r0, r1
   12b18:	vorr	d0, d8, d8
   12b1c:	vpop	{d8}
   12b20:	pop	{r4, r5, r6, sl, fp, pc}
   12b24:	nop	{0}
   12b28:	andeq	r0, r0, r0
   12b2c:	mvnsmi	r0, #0
   12b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b34:	add	fp, sp, #28
   12b38:	sub	sp, sp, #52	; 0x34
   12b3c:	mov	r5, r3
   12b40:	mov	r9, r2
   12b44:	mov	r6, r1
   12b48:	mov	r4, r0
   12b4c:	mov	r0, r3
   12b50:	bl	11214 <strlen@plt>
   12b54:	str	r0, [sp, #4]
   12b58:	add	sl, sp, #8
   12b5c:	mov	r0, sl
   12b60:	mov	r1, r4
   12b64:	mov	r2, r6
   12b68:	bl	1110c <memcpy@plt>
   12b6c:	add	r0, r4, r6
   12b70:	ldrb	r7, [r9]
   12b74:	cmp	r7, #255	; 0xff
   12b78:	mov	r8, r7
   12b7c:	moveq	r8, r6
   12b80:	cmp	r7, #0
   12b84:	mvneq	r8, #0
   12b88:	cmp	r8, r6
   12b8c:	movhi	r8, r6
   12b90:	sub	r4, r0, r8
   12b94:	sub	r6, r6, r8
   12b98:	add	r1, sl, r6
   12b9c:	mov	r0, r4
   12ba0:	mov	r2, r8
   12ba4:	bl	1110c <memcpy@plt>
   12ba8:	cmp	r6, #0
   12bac:	beq	12c3c <putc_unlocked@plt+0x18d8>
   12bb0:	clz	r0, r7
   12bb4:	lsr	sl, r0, #5
   12bb8:	ldr	r0, [sp, #4]
   12bbc:	rsb	r0, r0, #0
   12bc0:	str	r0, [sp]
   12bc4:	ldr	r0, [sp]
   12bc8:	add	r4, r4, r0
   12bcc:	mov	r0, r4
   12bd0:	mov	r1, r5
   12bd4:	ldr	r2, [sp, #4]
   12bd8:	bl	1110c <memcpy@plt>
   12bdc:	tst	sl, #1
   12be0:	addeq	r9, r9, #1
   12be4:	mov	sl, r5
   12be8:	ldrb	r5, [r9]
   12bec:	cmp	r5, #255	; 0xff
   12bf0:	mov	r7, r5
   12bf4:	moveq	r7, r6
   12bf8:	cmp	r5, #0
   12bfc:	moveq	r7, r8
   12c00:	cmp	r6, r7
   12c04:	movcc	r7, r6
   12c08:	sub	r4, r4, r7
   12c0c:	sub	r6, r6, r7
   12c10:	add	r0, sp, #8
   12c14:	add	r1, r0, r6
   12c18:	mov	r0, r4
   12c1c:	mov	r2, r7
   12c20:	bl	1110c <memcpy@plt>
   12c24:	clz	r0, r5
   12c28:	mov	r5, sl
   12c2c:	lsr	sl, r0, #5
   12c30:	cmp	r6, #0
   12c34:	mov	r8, r7
   12c38:	bne	12bc4 <putc_unlocked@plt+0x1860>
   12c3c:	mov	r0, r4
   12c40:	sub	sp, fp, #28
   12c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c48:	push	{r4, sl, fp, lr}
   12c4c:	add	fp, sp, #8
   12c50:	mov	r4, r2
   12c54:	mov	r2, r1
   12c58:	mov	r1, r4
   12c5c:	bl	12c7c <putc_unlocked@plt+0x1918>
   12c60:	ldrd	r2, [r4]
   12c64:	orrs	r1, r2, r3
   12c68:	popne	{r4, sl, fp, pc}
   12c6c:	bl	12de8 <putc_unlocked@plt+0x1a84>
   12c70:	strd	r0, [r4]
   12c74:	mov	r0, #4
   12c78:	pop	{r4, sl, fp, pc}
   12c7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c80:	add	fp, sp, #24
   12c84:	sub	sp, sp, #8
   12c88:	mov	r8, r2
   12c8c:	mov	r5, r1
   12c90:	cmp	r0, #0
   12c94:	bne	12cc0 <putc_unlocked@plt+0x195c>
   12c98:	movw	r0, #28360	; 0x6ec8
   12c9c:	movt	r0, #1
   12ca0:	bl	111b4 <getenv@plt>
   12ca4:	cmp	r0, #0
   12ca8:	bne	12cc0 <putc_unlocked@plt+0x195c>
   12cac:	movw	r0, #28371	; 0x6ed3
   12cb0:	movt	r0, #1
   12cb4:	bl	111b4 <getenv@plt>
   12cb8:	cmp	r0, #0
   12cbc:	beq	12dd0 <putc_unlocked@plt+0x1a6c>
   12cc0:	mov	r6, r0
   12cc4:	ldrb	r4, [r6], #1
   12cc8:	cmp	r4, #39	; 0x27
   12ccc:	movne	r6, r0
   12cd0:	movw	r1, #28448	; 0x6f20
   12cd4:	movt	r1, #1
   12cd8:	movw	r7, #28460	; 0x6f2c
   12cdc:	movt	r7, #1
   12ce0:	mov	r0, r6
   12ce4:	mov	r2, r7
   12ce8:	mov	r3, #4
   12cec:	bl	15938 <putc_unlocked@plt+0x45d4>
   12cf0:	sub	r1, r4, #39	; 0x27
   12cf4:	clz	r1, r1
   12cf8:	lsr	r1, r1, #5
   12cfc:	lsl	r4, r1, #2
   12d00:	cmp	r0, #0
   12d04:	blt	12d24 <putc_unlocked@plt+0x19c0>
   12d08:	mov	r1, #0
   12d0c:	mov	r2, #1
   12d10:	str	r2, [r5]
   12d14:	str	r1, [r5, #4]
   12d18:	ldr	r0, [r7, r0, lsl #2]
   12d1c:	orr	r0, r0, r4
   12d20:	b	12d98 <putc_unlocked@plt+0x1a34>
   12d24:	movw	r0, #28381	; 0x6edd
   12d28:	movt	r0, #1
   12d2c:	str	r0, [sp]
   12d30:	add	r1, sp, #4
   12d34:	mov	r7, #0
   12d38:	mov	r0, r6
   12d3c:	mov	r2, #0
   12d40:	mov	r3, r5
   12d44:	bl	15324 <putc_unlocked@plt+0x3fc0>
   12d48:	cmp	r0, #0
   12d4c:	strne	r7, [r8]
   12d50:	subne	sp, fp, #24
   12d54:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d58:	ldrb	r0, [r6]
   12d5c:	sub	r0, r0, #48	; 0x30
   12d60:	uxtb	r0, r0
   12d64:	cmp	r0, #10
   12d68:	bcc	12d94 <putc_unlocked@plt+0x1a30>
   12d6c:	ldr	r1, [sp, #4]
   12d70:	cmp	r1, r6
   12d74:	beq	12da8 <putc_unlocked@plt+0x1a44>
   12d78:	add	r0, r6, #1
   12d7c:	ldrb	r2, [r6, #1]
   12d80:	sub	r2, r2, #48	; 0x30
   12d84:	uxtb	r2, r2
   12d88:	cmp	r2, #10
   12d8c:	mov	r6, r0
   12d90:	bcs	12d70 <putc_unlocked@plt+0x1a0c>
   12d94:	mov	r0, r4
   12d98:	str	r0, [r8]
   12d9c:	mov	r0, #0
   12da0:	sub	sp, fp, #24
   12da4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12da8:	ldrb	r2, [r1, #-1]
   12dac:	orr	r0, r4, #384	; 0x180
   12db0:	cmp	r2, #66	; 0x42
   12db4:	mov	r2, r0
   12db8:	orrne	r2, r4, #128	; 0x80
   12dbc:	bne	12de0 <putc_unlocked@plt+0x1a7c>
   12dc0:	ldrb	r1, [r1, #-2]
   12dc4:	cmp	r1, #105	; 0x69
   12dc8:	orreq	r0, r2, #32
   12dcc:	b	12d98 <putc_unlocked@plt+0x1a34>
   12dd0:	bl	12de8 <putc_unlocked@plt+0x1a84>
   12dd4:	strd	r0, [r5]
   12dd8:	mov	r0, #0
   12ddc:	b	12d98 <putc_unlocked@plt+0x1a34>
   12de0:	orr	r0, r2, #32
   12de4:	b	12d98 <putc_unlocked@plt+0x1a34>
   12de8:	push	{fp, lr}
   12dec:	mov	fp, sp
   12df0:	movw	r0, #28417	; 0x6f01
   12df4:	movt	r0, #1
   12df8:	bl	111b4 <getenv@plt>
   12dfc:	mov	r1, #512	; 0x200
   12e00:	cmp	r0, #0
   12e04:	movweq	r1, #1024	; 0x400
   12e08:	mov	r0, r1
   12e0c:	mov	r1, #0
   12e10:	pop	{fp, pc}
   12e14:	push	{r4, r5, fp, lr}
   12e18:	add	fp, sp, #8
   12e1c:	cmp	r0, #0
   12e20:	beq	12eb4 <putc_unlocked@plt+0x1b50>
   12e24:	mov	r4, r0
   12e28:	mov	r1, #47	; 0x2f
   12e2c:	bl	112c8 <strrchr@plt>
   12e30:	cmp	r0, #0
   12e34:	mov	r5, r4
   12e38:	addne	r5, r0, #1
   12e3c:	sub	r0, r5, r4
   12e40:	cmp	r0, #7
   12e44:	blt	12e98 <putc_unlocked@plt+0x1b34>
   12e48:	sub	r0, r5, #7
   12e4c:	movw	r1, #28524	; 0x6f6c
   12e50:	movt	r1, #1
   12e54:	mov	r2, #7
   12e58:	bl	1131c <strncmp@plt>
   12e5c:	cmp	r0, #0
   12e60:	bne	12e98 <putc_unlocked@plt+0x1b34>
   12e64:	movw	r1, #28532	; 0x6f74
   12e68:	movt	r1, #1
   12e6c:	mov	r0, r5
   12e70:	mov	r2, #3
   12e74:	bl	1131c <strncmp@plt>
   12e78:	cmp	r0, #0
   12e7c:	beq	12e88 <putc_unlocked@plt+0x1b24>
   12e80:	mov	r4, r5
   12e84:	b	12e98 <putc_unlocked@plt+0x1b34>
   12e88:	add	r4, r5, #3
   12e8c:	movw	r0, #33120	; 0x8160
   12e90:	movt	r0, #2
   12e94:	str	r4, [r0]
   12e98:	movw	r0, #33124	; 0x8164
   12e9c:	movt	r0, #2
   12ea0:	str	r4, [r0]
   12ea4:	movw	r0, #33168	; 0x8190
   12ea8:	movt	r0, #2
   12eac:	str	r4, [r0]
   12eb0:	pop	{r4, r5, fp, pc}
   12eb4:	movw	r0, #33136	; 0x8170
   12eb8:	movt	r0, #2
   12ebc:	ldr	r3, [r0]
   12ec0:	movw	r0, #28468	; 0x6f34
   12ec4:	movt	r0, #1
   12ec8:	mov	r1, #55	; 0x37
   12ecc:	mov	r2, #1
   12ed0:	bl	11160 <fwrite@plt>
   12ed4:	bl	11328 <abort@plt>
   12ed8:	push	{r4, r5, r6, sl, fp, lr}
   12edc:	add	fp, sp, #16
   12ee0:	mov	r4, r0
   12ee4:	movw	r0, #33176	; 0x8198
   12ee8:	movt	r0, #2
   12eec:	cmp	r4, #0
   12ef0:	moveq	r4, r0
   12ef4:	bl	1122c <__errno_location@plt>
   12ef8:	mov	r5, r0
   12efc:	ldr	r6, [r0]
   12f00:	mov	r0, r4
   12f04:	mov	r1, #48	; 0x30
   12f08:	bl	15224 <putc_unlocked@plt+0x3ec0>
   12f0c:	str	r6, [r5]
   12f10:	pop	{r4, r5, r6, sl, fp, pc}
   12f14:	movw	r1, #33176	; 0x8198
   12f18:	movt	r1, #2
   12f1c:	cmp	r0, #0
   12f20:	movne	r1, r0
   12f24:	ldr	r0, [r1]
   12f28:	bx	lr
   12f2c:	movw	r2, #33176	; 0x8198
   12f30:	movt	r2, #2
   12f34:	cmp	r0, #0
   12f38:	movne	r2, r0
   12f3c:	str	r1, [r2]
   12f40:	bx	lr
   12f44:	movw	r3, #33176	; 0x8198
   12f48:	movt	r3, #2
   12f4c:	cmp	r0, #0
   12f50:	movne	r3, r0
   12f54:	ubfx	r0, r1, #5, #3
   12f58:	add	r0, r3, r0, lsl #2
   12f5c:	ldr	r3, [r0, #8]
   12f60:	and	r1, r1, #31
   12f64:	eor	r2, r2, r3, lsr r1
   12f68:	and	r2, r2, #1
   12f6c:	eor	r2, r3, r2, lsl r1
   12f70:	str	r2, [r0, #8]
   12f74:	mov	r0, #1
   12f78:	and	r0, r0, r3, lsr r1
   12f7c:	bx	lr
   12f80:	movw	r2, #33176	; 0x8198
   12f84:	movt	r2, #2
   12f88:	cmp	r0, #0
   12f8c:	movne	r2, r0
   12f90:	ldr	r0, [r2, #4]
   12f94:	str	r1, [r2, #4]
   12f98:	bx	lr
   12f9c:	movw	r3, #33176	; 0x8198
   12fa0:	movt	r3, #2
   12fa4:	cmp	r0, #0
   12fa8:	movne	r3, r0
   12fac:	mov	r0, #10
   12fb0:	str	r0, [r3]
   12fb4:	cmp	r1, #0
   12fb8:	cmpne	r2, #0
   12fbc:	bne	12fcc <putc_unlocked@plt+0x1c68>
   12fc0:	push	{fp, lr}
   12fc4:	mov	fp, sp
   12fc8:	bl	11328 <abort@plt>
   12fcc:	str	r1, [r3, #40]	; 0x28
   12fd0:	str	r2, [r3, #44]	; 0x2c
   12fd4:	bx	lr
   12fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fdc:	add	fp, sp, #28
   12fe0:	sub	sp, sp, #20
   12fe4:	mov	r8, r3
   12fe8:	mov	r9, r2
   12fec:	mov	sl, r1
   12ff0:	mov	r7, r0
   12ff4:	ldr	r0, [fp, #8]
   12ff8:	movw	r5, #33176	; 0x8198
   12ffc:	movt	r5, #2
   13000:	cmp	r0, #0
   13004:	movne	r5, r0
   13008:	bl	1122c <__errno_location@plt>
   1300c:	mov	r4, r0
   13010:	ldm	r5, {r0, r1}
   13014:	ldr	r2, [r5, #40]	; 0x28
   13018:	ldr	r3, [r5, #44]	; 0x2c
   1301c:	ldr	r6, [r4]
   13020:	add	r5, r5, #8
   13024:	stm	sp, {r0, r1, r5}
   13028:	str	r2, [sp, #12]
   1302c:	str	r3, [sp, #16]
   13030:	mov	r0, r7
   13034:	mov	r1, sl
   13038:	mov	r2, r9
   1303c:	mov	r3, r8
   13040:	bl	13050 <putc_unlocked@plt+0x1cec>
   13044:	str	r6, [r4]
   13048:	sub	sp, fp, #28
   1304c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13054:	add	fp, sp, #28
   13058:	sub	sp, sp, #156	; 0x9c
   1305c:	mov	r9, r3
   13060:	str	r2, [fp, #-84]	; 0xffffffac
   13064:	mov	r6, r1
   13068:	mov	r7, r0
   1306c:	ldr	r0, [fp, #12]
   13070:	and	r1, r0, #4
   13074:	str	r1, [sp, #32]
   13078:	and	r1, r0, #1
   1307c:	str	r1, [sp, #36]	; 0x24
   13080:	ubfx	sl, r0, #1, #1
   13084:	bl	11178 <__ctype_get_mb_cur_max@plt>
   13088:	str	r0, [sp, #40]	; 0x28
   1308c:	ldr	r0, [fp, #24]
   13090:	str	r0, [sp, #76]	; 0x4c
   13094:	ldr	r0, [fp, #20]
   13098:	str	r0, [sp, #68]	; 0x44
   1309c:	ldr	r0, [fp, #8]
   130a0:	str	r0, [fp, #-60]	; 0xffffffc4
   130a4:	mov	r0, #0
   130a8:	str	r0, [sp, #72]	; 0x48
   130ac:	mov	r0, #0
   130b0:	str	r0, [sp, #92]	; 0x5c
   130b4:	mov	r0, #0
   130b8:	str	r0, [fp, #-72]	; 0xffffffb8
   130bc:	mov	r0, #0
   130c0:	mov	r1, #0
   130c4:	str	r1, [fp, #-56]	; 0xffffffc8
   130c8:	mov	r1, #0
   130cc:	str	r1, [sp, #56]	; 0x38
   130d0:	mov	r5, #1
   130d4:	str	r7, [sp, #80]	; 0x50
   130d8:	mov	r4, r6
   130dc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   130e0:	cmp	r6, #10
   130e4:	bhi	1404c <putc_unlocked@plt+0x2ce8>
   130e8:	add	r1, pc, #20
   130ec:	mov	r8, #0
   130f0:	mov	r2, #1
   130f4:	mov	r3, #0
   130f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   130fc:	mov	lr, r9
   13100:	ldr	pc, [r1, r6, lsl #2]
   13104:	ldrdeq	r3, [r1], -ip
   13108:	andeq	r3, r1, ip, lsl #4
   1310c:	andeq	r3, r1, ip, asr #3
   13110:	andeq	r3, r1, r4, asr #3
   13114:	andeq	r3, r1, r0, lsl #4
   13118:	andeq	r3, r1, r0, ror #4
   1311c:	andeq	r3, r1, ip, ror #3
   13120:			; <UNDEFINED> instruction: 0x000132bc
   13124:	andeq	r3, r1, r0, lsr r1
   13128:	andeq	r3, r1, r0, lsr r1
   1312c:	andeq	r3, r1, r8, asr r1
   13130:	movw	r0, #28614	; 0x6fc6
   13134:	movt	r0, #1
   13138:	mov	r1, r6
   1313c:	bl	14658 <putc_unlocked@plt+0x32f4>
   13140:	str	r0, [sp, #68]	; 0x44
   13144:	movw	r0, #28616	; 0x6fc8
   13148:	movt	r0, #1
   1314c:	mov	r1, r6
   13150:	bl	14658 <putc_unlocked@plt+0x32f4>
   13154:	str	r0, [sp, #76]	; 0x4c
   13158:	mov	r8, #0
   1315c:	tst	sl, #1
   13160:	bne	13198 <putc_unlocked@plt+0x1e34>
   13164:	ldr	r0, [sp, #68]	; 0x44
   13168:	ldrb	r0, [r0]
   1316c:	cmp	r0, #0
   13170:	beq	13198 <putc_unlocked@plt+0x1e34>
   13174:	ldr	r1, [sp, #68]	; 0x44
   13178:	add	r1, r1, #1
   1317c:	mov	r8, #0
   13180:	cmp	r8, r4
   13184:	strbcc	r0, [r7, r8]
   13188:	ldrb	r0, [r1, r8]
   1318c:	add	r8, r8, #1
   13190:	cmp	r0, #0
   13194:	bne	13180 <putc_unlocked@plt+0x1e1c>
   13198:	ldr	r6, [sp, #76]	; 0x4c
   1319c:	mov	r0, r6
   131a0:	bl	11214 <strlen@plt>
   131a4:	str	r0, [fp, #-72]	; 0xffffffb8
   131a8:	str	r6, [sp, #92]	; 0x5c
   131ac:	mov	r2, #1
   131b0:	mov	r3, sl
   131b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   131b8:	mov	lr, r9
   131bc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   131c0:	b	132bc <putc_unlocked@plt+0x1f58>
   131c4:	mov	r0, #1
   131c8:	b	1320c <putc_unlocked@plt+0x1ea8>
   131cc:	tst	sl, #1
   131d0:	bne	1320c <putc_unlocked@plt+0x1ea8>
   131d4:	mov	r2, r0
   131d8:	b	13234 <putc_unlocked@plt+0x1ed0>
   131dc:	mov	r6, #0
   131e0:	mov	r8, #0
   131e4:	mov	r2, r0
   131e8:	b	132b8 <putc_unlocked@plt+0x1f54>
   131ec:	mov	r0, #1
   131f0:	str	r0, [fp, #-72]	; 0xffffffb8
   131f4:	mov	r8, #0
   131f8:	mov	r6, #5
   131fc:	b	13278 <putc_unlocked@plt+0x1f14>
   13200:	mov	r2, #1
   13204:	tst	sl, #1
   13208:	beq	13234 <putc_unlocked@plt+0x1ed0>
   1320c:	mov	r1, #1
   13210:	str	r1, [fp, #-72]	; 0xffffffb8
   13214:	mov	r8, #0
   13218:	mov	r6, #2
   1321c:	movw	r1, #28616	; 0x6fc8
   13220:	movt	r1, #1
   13224:	str	r1, [sp, #92]	; 0x5c
   13228:	mov	r2, r0
   1322c:	mov	r3, #1
   13230:	b	132bc <putc_unlocked@plt+0x1f58>
   13234:	mov	r8, #1
   13238:	mov	r6, #2
   1323c:	cmp	r4, #0
   13240:	movne	r0, #39	; 0x27
   13244:	strbne	r0, [r7]
   13248:	movw	r0, #28616	; 0x6fc8
   1324c:	movt	r0, #1
   13250:	str	r0, [sp, #92]	; 0x5c
   13254:	mov	r0, #1
   13258:	str	r0, [fp, #-72]	; 0xffffffb8
   1325c:	b	132b8 <putc_unlocked@plt+0x1f54>
   13260:	mov	r6, #5
   13264:	tst	sl, #1
   13268:	beq	13290 <putc_unlocked@plt+0x1f2c>
   1326c:	mov	r0, #1
   13270:	str	r0, [fp, #-72]	; 0xffffffb8
   13274:	mov	r8, #0
   13278:	movw	r0, #28612	; 0x6fc4
   1327c:	movt	r0, #1
   13280:	str	r0, [sp, #92]	; 0x5c
   13284:	mov	r2, #1
   13288:	mov	r3, #1
   1328c:	b	132bc <putc_unlocked@plt+0x1f58>
   13290:	cmp	r4, #0
   13294:	movne	r0, #34	; 0x22
   13298:	strbne	r0, [r7]
   1329c:	mov	r8, #1
   132a0:	movw	r0, #28612	; 0x6fc4
   132a4:	movt	r0, #1
   132a8:	str	r0, [sp, #92]	; 0x5c
   132ac:	mov	r0, #1
   132b0:	str	r0, [fp, #-72]	; 0xffffffb8
   132b4:	mov	r2, #1
   132b8:	mov	r3, #0
   132bc:	ldr	r0, [fp, #16]
   132c0:	cmp	r0, #0
   132c4:	movwne	r0, #1
   132c8:	and	r0, r0, r3
   132cc:	str	r0, [fp, #-88]	; 0xffffffa8
   132d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   132d4:	cmp	r0, #0
   132d8:	movwne	r0, #1
   132dc:	and	r1, r0, r3
   132e0:	and	r1, r2, r1
   132e4:	str	r1, [sp, #48]	; 0x30
   132e8:	str	r6, [fp, #-60]	; 0xffffffc4
   132ec:	subs	r6, r6, #2
   132f0:	clz	r1, r6
   132f4:	lsr	r1, r1, #5
   132f8:	and	r1, r1, r3
   132fc:	str	r1, [sp, #60]	; 0x3c
   13300:	str	r6, [fp, #-80]	; 0xffffffb0
   13304:	mov	r1, r6
   13308:	movwne	r1, #1
   1330c:	str	r3, [fp, #-76]	; 0xffffffb4
   13310:	eor	r3, r3, #1
   13314:	str	r3, [sp, #88]	; 0x58
   13318:	orr	r3, r1, r3
   1331c:	str	r3, [sp, #64]	; 0x40
   13320:	and	r1, r1, r2
   13324:	str	r1, [fp, #-68]	; 0xffffffbc
   13328:	and	r0, r0, r1
   1332c:	str	r0, [fp, #-64]	; 0xffffffc0
   13330:	str	r2, [sp, #84]	; 0x54
   13334:	eor	r0, r2, #1
   13338:	str	r0, [sp, #52]	; 0x34
   1333c:	mov	r6, #0
   13340:	cmn	lr, #1
   13344:	beq	13354 <putc_unlocked@plt+0x1ff0>
   13348:	cmp	r6, lr
   1334c:	bne	13360 <putc_unlocked@plt+0x1ffc>
   13350:	b	13ecc <putc_unlocked@plt+0x2b68>
   13354:	ldrb	r0, [ip, r6]
   13358:	cmp	r0, #0
   1335c:	beq	13ecc <putc_unlocked@plt+0x2b68>
   13360:	str	r5, [fp, #-48]	; 0xffffffd0
   13364:	mov	sl, #0
   13368:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1336c:	cmp	r0, #0
   13370:	beq	133a4 <putc_unlocked@plt+0x2040>
   13374:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13378:	add	r5, r6, r0
   1337c:	cmp	r0, #2
   13380:	bcc	1339c <putc_unlocked@plt+0x2038>
   13384:	cmn	lr, #1
   13388:	bne	1339c <putc_unlocked@plt+0x2038>
   1338c:	mov	r0, ip
   13390:	bl	11214 <strlen@plt>
   13394:	ldr	ip, [fp, #-84]	; 0xffffffac
   13398:	mov	lr, r0
   1339c:	cmp	r5, lr
   133a0:	bls	133b0 <putc_unlocked@plt+0x204c>
   133a4:	mov	r0, #0
   133a8:	str	r0, [fp, #-52]	; 0xffffffcc
   133ac:	b	133fc <putc_unlocked@plt+0x2098>
   133b0:	mov	r5, r4
   133b4:	mov	r4, lr
   133b8:	add	r0, ip, r6
   133bc:	ldr	r1, [sp, #92]	; 0x5c
   133c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   133c4:	bl	11124 <memcmp@plt>
   133c8:	cmp	r0, #0
   133cc:	mov	r1, r0
   133d0:	movwne	r1, #1
   133d4:	ldr	r2, [sp, #88]	; 0x58
   133d8:	orr	r1, r1, r2
   133dc:	tst	r1, #1
   133e0:	beq	13f90 <putc_unlocked@plt+0x2c2c>
   133e4:	clz	r0, r0
   133e8:	lsr	r0, r0, #5
   133ec:	str	r0, [fp, #-52]	; 0xffffffcc
   133f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   133f4:	mov	lr, r4
   133f8:	mov	r4, r5
   133fc:	ldrb	r5, [ip, r6]
   13400:	cmp	r5, #126	; 0x7e
   13404:	bhi	137c0 <putc_unlocked@plt+0x245c>
   13408:	mov	r9, #1
   1340c:	mov	r2, #110	; 0x6e
   13410:	mov	r0, #97	; 0x61
   13414:	add	r3, pc, #4
   13418:	mov	r1, #0
   1341c:	ldr	pc, [r3, r5, lsl #2]
   13420:			; <UNDEFINED> instruction: 0x000136b8
   13424:	andeq	r3, r1, r0, asr #15
   13428:	andeq	r3, r1, r0, asr #15
   1342c:	andeq	r3, r1, r0, asr #15
   13430:	andeq	r3, r1, r0, asr #15
   13434:	andeq	r3, r1, r0, asr #15
   13438:	andeq	r3, r1, r0, asr #15
   1343c:	andeq	r3, r1, r4, lsl #17
   13440:	muleq	r1, r8, r6
   13444:	muleq	r1, r0, r6
   13448:	andeq	r3, r1, r4, lsr #13
   1344c:	andeq	r3, r1, r8, lsr #14
   13450:	andeq	r3, r1, r8, lsl #13
   13454:	andeq	r3, r1, r0, lsr #13
   13458:	andeq	r3, r1, r0, asr #15
   1345c:	andeq	r3, r1, r0, asr #15
   13460:	andeq	r3, r1, r0, asr #15
   13464:	andeq	r3, r1, r0, asr #15
   13468:	andeq	r3, r1, r0, asr #15
   1346c:	andeq	r3, r1, r0, asr #15
   13470:	andeq	r3, r1, r0, asr #15
   13474:	andeq	r3, r1, r0, asr #15
   13478:	andeq	r3, r1, r0, asr #15
   1347c:	andeq	r3, r1, r0, asr #15
   13480:	andeq	r3, r1, r0, asr #15
   13484:	andeq	r3, r1, r0, asr #15
   13488:	andeq	r3, r1, r0, asr #15
   1348c:	andeq	r3, r1, r0, asr #15
   13490:	andeq	r3, r1, r0, asr #15
   13494:	andeq	r3, r1, r0, asr #15
   13498:	andeq	r3, r1, r0, asr #15
   1349c:	andeq	r3, r1, r0, asr #15
   134a0:	andeq	r3, r1, r4, lsr r8
   134a4:	andeq	r3, r1, r8, lsr r8
   134a8:	andeq	r3, r1, r8, lsr r8
   134ac:	andeq	r3, r1, r0, lsr r6
   134b0:	andeq	r3, r1, r8, lsr r8
   134b4:	andeq	r3, r1, ip, lsl r6
   134b8:	andeq	r3, r1, r8, lsr r8
   134bc:	andeq	r3, r1, r0, lsr r7
   134c0:	andeq	r3, r1, r8, lsr r8
   134c4:	andeq	r3, r1, r8, lsr r8
   134c8:	andeq	r3, r1, r8, lsr r8
   134cc:	andeq	r3, r1, ip, lsl r6
   134d0:	andeq	r3, r1, ip, lsl r6
   134d4:	andeq	r3, r1, ip, lsl r6
   134d8:	andeq	r3, r1, ip, lsl r6
   134dc:	andeq	r3, r1, ip, lsl r6
   134e0:	andeq	r3, r1, ip, lsl r6
   134e4:	andeq	r3, r1, ip, lsl r6
   134e8:	andeq	r3, r1, ip, lsl r6
   134ec:	andeq	r3, r1, ip, lsl r6
   134f0:	andeq	r3, r1, ip, lsl r6
   134f4:	andeq	r3, r1, ip, lsl r6
   134f8:	andeq	r3, r1, ip, lsl r6
   134fc:	andeq	r3, r1, ip, lsl r6
   13500:	andeq	r3, r1, ip, lsl r6
   13504:	andeq	r3, r1, ip, lsl r6
   13508:	andeq	r3, r1, ip, lsl r6
   1350c:	andeq	r3, r1, r8, lsr r8
   13510:	andeq	r3, r1, r8, lsr r8
   13514:	andeq	r3, r1, r8, lsr r8
   13518:	andeq	r3, r1, r8, lsr r8
   1351c:	strdeq	r3, [r1], -r8
   13520:	andeq	r3, r1, r0, asr #15
   13524:	andeq	r3, r1, ip, lsl r6
   13528:	andeq	r3, r1, ip, lsl r6
   1352c:	andeq	r3, r1, ip, lsl r6
   13530:	andeq	r3, r1, ip, lsl r6
   13534:	andeq	r3, r1, ip, lsl r6
   13538:	andeq	r3, r1, ip, lsl r6
   1353c:	andeq	r3, r1, ip, lsl r6
   13540:	andeq	r3, r1, ip, lsl r6
   13544:	andeq	r3, r1, ip, lsl r6
   13548:	andeq	r3, r1, ip, lsl r6
   1354c:	andeq	r3, r1, ip, lsl r6
   13550:	andeq	r3, r1, ip, lsl r6
   13554:	andeq	r3, r1, ip, lsl r6
   13558:	andeq	r3, r1, ip, lsl r6
   1355c:	andeq	r3, r1, ip, lsl r6
   13560:	andeq	r3, r1, ip, lsl r6
   13564:	andeq	r3, r1, ip, lsl r6
   13568:	andeq	r3, r1, ip, lsl r6
   1356c:	andeq	r3, r1, ip, lsl r6
   13570:	andeq	r3, r1, ip, lsl r6
   13574:	andeq	r3, r1, ip, lsl r6
   13578:	andeq	r3, r1, ip, lsl r6
   1357c:	andeq	r3, r1, ip, lsl r6
   13580:	andeq	r3, r1, ip, lsl r6
   13584:	andeq	r3, r1, ip, lsl r6
   13588:	andeq	r3, r1, ip, lsl r6
   1358c:	andeq	r3, r1, r8, lsr r8
   13590:	andeq	r3, r1, r4, ror #12
   13594:	andeq	r3, r1, ip, lsl r6
   13598:	andeq	r3, r1, r8, lsr r8
   1359c:	andeq	r3, r1, ip, lsl r6
   135a0:	andeq	r3, r1, r8, lsr r8
   135a4:	andeq	r3, r1, ip, lsl r6
   135a8:	andeq	r3, r1, ip, lsl r6
   135ac:	andeq	r3, r1, ip, lsl r6
   135b0:	andeq	r3, r1, ip, lsl r6
   135b4:	andeq	r3, r1, ip, lsl r6
   135b8:	andeq	r3, r1, ip, lsl r6
   135bc:	andeq	r3, r1, ip, lsl r6
   135c0:	andeq	r3, r1, ip, lsl r6
   135c4:	andeq	r3, r1, ip, lsl r6
   135c8:	andeq	r3, r1, ip, lsl r6
   135cc:	andeq	r3, r1, ip, lsl r6
   135d0:	andeq	r3, r1, ip, lsl r6
   135d4:	andeq	r3, r1, ip, lsl r6
   135d8:	andeq	r3, r1, ip, lsl r6
   135dc:	andeq	r3, r1, ip, lsl r6
   135e0:	andeq	r3, r1, ip, lsl r6
   135e4:	andeq	r3, r1, ip, lsl r6
   135e8:	andeq	r3, r1, ip, lsl r6
   135ec:	andeq	r3, r1, ip, lsl r6
   135f0:	andeq	r3, r1, ip, lsl r6
   135f4:	andeq	r3, r1, ip, lsl r6
   135f8:	andeq	r3, r1, ip, lsl r6
   135fc:	andeq	r3, r1, ip, lsl r6
   13600:	andeq	r3, r1, ip, lsl r6
   13604:	andeq	r3, r1, ip, lsl r6
   13608:	andeq	r3, r1, ip, lsl r6
   1360c:	andeq	r3, r1, r4, asr #12
   13610:	andeq	r3, r1, r8, lsr r8
   13614:	andeq	r3, r1, r4, asr #12
   13618:	andeq	r3, r1, r0, lsr r6
   1361c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13620:	cmp	r0, #0
   13624:	beq	13898 <putc_unlocked@plt+0x2534>
   13628:	ldr	r0, [fp, #16]
   1362c:	b	1389c <putc_unlocked@plt+0x2538>
   13630:	mov	r9, #0
   13634:	cmp	r6, #0
   13638:	beq	13834 <putc_unlocked@plt+0x24d0>
   1363c:	mov	sl, #0
   13640:	b	1361c <putc_unlocked@plt+0x22b8>
   13644:	mov	r9, #0
   13648:	cmn	lr, #1
   1364c:	beq	13818 <putc_unlocked@plt+0x24b4>
   13650:	cmp	r6, #0
   13654:	bne	1363c <putc_unlocked@plt+0x22d8>
   13658:	cmp	lr, #1
   1365c:	beq	13834 <putc_unlocked@plt+0x24d0>
   13660:	b	1363c <putc_unlocked@plt+0x22d8>
   13664:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13668:	cmp	r0, #2
   1366c:	bne	13860 <putc_unlocked@plt+0x24fc>
   13670:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13674:	tst	r0, #1
   13678:	bne	13fa8 <putc_unlocked@plt+0x2c44>
   1367c:	mov	sl, #0
   13680:	mov	r0, #92	; 0x5c
   13684:	b	13874 <putc_unlocked@plt+0x2510>
   13688:	mov	r0, #102	; 0x66
   1368c:	b	13884 <putc_unlocked@plt+0x2520>
   13690:	mov	r2, #116	; 0x74
   13694:	b	136a4 <putc_unlocked@plt+0x2340>
   13698:	mov	r0, #98	; 0x62
   1369c:	b	13884 <putc_unlocked@plt+0x2520>
   136a0:	mov	r2, #114	; 0x72
   136a4:	ldr	r0, [sp, #64]	; 0x40
   136a8:	tst	r0, #1
   136ac:	mov	r0, r2
   136b0:	bne	13884 <putc_unlocked@plt+0x2520>
   136b4:	b	13fa8 <putc_unlocked@plt+0x2c44>
   136b8:	ldr	r0, [sp, #84]	; 0x54
   136bc:	tst	r0, #1
   136c0:	beq	13974 <putc_unlocked@plt+0x2610>
   136c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   136c8:	tst	r0, #1
   136cc:	bne	13fa8 <putc_unlocked@plt+0x2c44>
   136d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   136d4:	cmp	r0, #2
   136d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   136dc:	movwne	r0, #1
   136e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   136e4:	orr	r0, r0, r2
   136e8:	tst	r0, #1
   136ec:	beq	13d68 <putc_unlocked@plt+0x2a04>
   136f0:	mov	r0, r8
   136f4:	b	13d9c <putc_unlocked@plt+0x2a38>
   136f8:	mov	sl, #0
   136fc:	mov	r5, #63	; 0x3f
   13700:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13704:	cmp	r0, #5
   13708:	beq	13b28 <putc_unlocked@plt+0x27c4>
   1370c:	cmp	r0, #2
   13710:	bne	13bc8 <putc_unlocked@plt+0x2864>
   13714:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13718:	tst	r0, #1
   1371c:	mov	r9, #0
   13720:	beq	1361c <putc_unlocked@plt+0x22b8>
   13724:	b	13fa8 <putc_unlocked@plt+0x2c44>
   13728:	mov	r0, #118	; 0x76
   1372c:	b	13884 <putc_unlocked@plt+0x2520>
   13730:	mov	r5, #39	; 0x27
   13734:	mov	r0, #1
   13738:	str	r0, [sp, #56]	; 0x38
   1373c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13740:	cmp	r0, #2
   13744:	bne	13994 <putc_unlocked@plt+0x2630>
   13748:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1374c:	tst	r0, #1
   13750:	bne	13fa8 <putc_unlocked@plt+0x2c44>
   13754:	ldr	r2, [sp, #72]	; 0x48
   13758:	cmp	r2, #0
   1375c:	mov	r0, r2
   13760:	movwne	r0, #1
   13764:	clz	r1, r4
   13768:	lsr	r1, r1, #5
   1376c:	orrs	r0, r0, r1
   13770:	moveq	r2, r4
   13774:	str	r2, [sp, #72]	; 0x48
   13778:	moveq	r4, r0
   1377c:	cmp	r8, r4
   13780:	movcc	r0, #39	; 0x27
   13784:	strbcc	r0, [r7, r8]
   13788:	add	r0, r8, #1
   1378c:	cmp	r0, r4
   13790:	movcc	r1, #92	; 0x5c
   13794:	strbcc	r1, [r7, r0]
   13798:	add	r0, r8, #2
   1379c:	cmp	r0, r4
   137a0:	movcc	r1, #39	; 0x27
   137a4:	strbcc	r1, [r7, r0]
   137a8:	add	r8, r8, #3
   137ac:	mov	r0, #0
   137b0:	str	r0, [fp, #-56]	; 0xffffffc8
   137b4:	mov	sl, #0
   137b8:	mov	r9, #1
   137bc:	b	1361c <putc_unlocked@plt+0x22b8>
   137c0:	str	r4, [sp, #24]
   137c4:	ldr	r0, [sp, #40]	; 0x28
   137c8:	cmp	r0, #1
   137cc:	bne	1399c <putc_unlocked@plt+0x2638>
   137d0:	str	lr, [sp, #28]
   137d4:	bl	111fc <__ctype_b_loc@plt>
   137d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   137dc:	ldr	r0, [r0]
   137e0:	add	r0, r0, r5, lsl #1
   137e4:	ldrb	r0, [r0, #1]
   137e8:	ubfx	r9, r0, #6, #1
   137ec:	mov	r1, #1
   137f0:	ldr	r4, [sp, #24]
   137f4:	ldr	r0, [sp, #52]	; 0x34
   137f8:	orr	r0, r9, r0
   137fc:	mov	r2, r1
   13800:	cmp	r1, #1
   13804:	bhi	13bd0 <putc_unlocked@plt+0x286c>
   13808:	tst	r0, #1
   1380c:	beq	13bd0 <putc_unlocked@plt+0x286c>
   13810:	ldr	lr, [sp, #28]
   13814:	b	1361c <putc_unlocked@plt+0x22b8>
   13818:	cmp	r6, #0
   1381c:	ldrbeq	r0, [ip, #1]
   13820:	cmpeq	r0, #0
   13824:	beq	13834 <putc_unlocked@plt+0x24d0>
   13828:	mvn	lr, #0
   1382c:	mov	sl, #0
   13830:	b	1361c <putc_unlocked@plt+0x22b8>
   13834:	mov	r1, #1
   13838:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1383c:	cmp	r0, #2
   13840:	bne	13858 <putc_unlocked@plt+0x24f4>
   13844:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13848:	tst	r0, #1
   1384c:	mov	r9, r1
   13850:	beq	1361c <putc_unlocked@plt+0x22b8>
   13854:	b	13fa8 <putc_unlocked@plt+0x2c44>
   13858:	mov	r9, r1
   1385c:	b	1361c <putc_unlocked@plt+0x22b8>
   13860:	mov	sl, #0
   13864:	mov	r0, #92	; 0x5c
   13868:	ldr	r1, [sp, #48]	; 0x30
   1386c:	cmp	r1, #0
   13870:	beq	13884 <putc_unlocked@plt+0x2520>
   13874:	mov	r9, #0
   13878:	cmp	sl, #0
   1387c:	beq	13e34 <putc_unlocked@plt+0x2ad0>
   13880:	b	13e70 <putc_unlocked@plt+0x2b0c>
   13884:	mov	r9, #0
   13888:	ldr	r1, [sp, #84]	; 0x54
   1388c:	tst	r1, #1
   13890:	mov	sl, #0
   13894:	bne	138d4 <putc_unlocked@plt+0x2570>
   13898:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1389c:	cmp	r0, #0
   138a0:	mov	r0, r5
   138a4:	beq	138c8 <putc_unlocked@plt+0x2564>
   138a8:	ubfx	r0, r5, #5, #3
   138ac:	ldr	r1, [fp, #16]
   138b0:	ldr	r0, [r1, r0, lsl #2]
   138b4:	and	r1, r5, #31
   138b8:	mov	r2, #1
   138bc:	tst	r0, r2, lsl r1
   138c0:	mov	r0, r5
   138c4:	bne	138d4 <putc_unlocked@plt+0x2570>
   138c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   138cc:	cmp	r1, #0
   138d0:	beq	13e2c <putc_unlocked@plt+0x2ac8>
   138d4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   138d8:	tst	r1, #1
   138dc:	bne	13fa8 <putc_unlocked@plt+0x2c44>
   138e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   138e4:	cmp	r1, #2
   138e8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   138ec:	movwne	r1, #1
   138f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138f4:	orr	r1, r1, r2
   138f8:	tst	r1, #1
   138fc:	beq	13908 <putc_unlocked@plt+0x25a4>
   13900:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13904:	b	13944 <putc_unlocked@plt+0x25e0>
   13908:	cmp	r8, r4
   1390c:	movcc	r1, #39	; 0x27
   13910:	strbcc	r1, [r7, r8]
   13914:	add	r1, r8, #1
   13918:	cmp	r1, r4
   1391c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13920:	movcc	r2, #36	; 0x24
   13924:	strbcc	r2, [r7, r1]
   13928:	add	r1, r8, #2
   1392c:	cmp	r1, r4
   13930:	movcc	r2, #39	; 0x27
   13934:	strbcc	r2, [r7, r1]
   13938:	add	r8, r8, #3
   1393c:	mov	r1, #1
   13940:	str	r1, [fp, #-56]	; 0xffffffc8
   13944:	cmp	r8, r4
   13948:	movcc	r1, #92	; 0x5c
   1394c:	strbcc	r1, [r7, r8]
   13950:	add	r8, r8, #1
   13954:	cmp	r8, r4
   13958:	strbcc	r0, [r7, r8]
   1395c:	and	r5, r5, r9
   13960:	add	r8, r8, #1
   13964:	add	r6, r6, #1
   13968:	cmn	lr, #1
   1396c:	bne	13348 <putc_unlocked@plt+0x1fe4>
   13970:	b	13354 <putc_unlocked@plt+0x1ff0>
   13974:	mov	r9, #0
   13978:	ldr	r0, [sp, #36]	; 0x24
   1397c:	cmp	r0, #0
   13980:	mov	sl, #0
   13984:	mov	r5, #0
   13988:	beq	13898 <putc_unlocked@plt+0x2534>
   1398c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13990:	b	13964 <putc_unlocked@plt+0x2600>
   13994:	mov	r9, #1
   13998:	b	1361c <putc_unlocked@plt+0x22b8>
   1399c:	mov	r0, #0
   139a0:	str	r0, [fp, #-36]	; 0xffffffdc
   139a4:	str	r0, [fp, #-40]	; 0xffffffd8
   139a8:	cmn	lr, #1
   139ac:	bne	139c0 <putc_unlocked@plt+0x265c>
   139b0:	mov	r0, ip
   139b4:	bl	11214 <strlen@plt>
   139b8:	ldr	ip, [fp, #-84]	; 0xffffffac
   139bc:	mov	lr, r0
   139c0:	add	r0, ip, r6
   139c4:	str	r0, [sp, #20]
   139c8:	mov	r9, #1
   139cc:	mov	r7, #0
   139d0:	sub	r4, fp, #40	; 0x28
   139d4:	str	lr, [sp, #28]
   139d8:	str	r7, [sp, #44]	; 0x2c
   139dc:	add	r7, r7, r6
   139e0:	add	r1, ip, r7
   139e4:	sub	r2, lr, r7
   139e8:	sub	r0, fp, #44	; 0x2c
   139ec:	mov	r3, r4
   139f0:	bl	1631c <putc_unlocked@plt+0x4fb8>
   139f4:	cmp	r0, #0
   139f8:	beq	13eb8 <putc_unlocked@plt+0x2b54>
   139fc:	cmn	r0, #1
   13a00:	beq	13e78 <putc_unlocked@plt+0x2b14>
   13a04:	cmn	r0, #2
   13a08:	ldr	lr, [sp, #28]
   13a0c:	beq	13e80 <putc_unlocked@plt+0x2b1c>
   13a10:	cmp	r0, #2
   13a14:	mov	r1, #0
   13a18:	movwcc	r1, #1
   13a1c:	ldr	r2, [sp, #60]	; 0x3c
   13a20:	eor	r2, r2, #1
   13a24:	orrs	r1, r2, r1
   13a28:	ldr	r4, [sp, #24]
   13a2c:	bne	13aec <putc_unlocked@plt+0x2788>
   13a30:	ldr	r1, [sp, #44]	; 0x2c
   13a34:	ldr	r2, [sp, #20]
   13a38:	add	r1, r2, r1
   13a3c:	mov	r2, #1
   13a40:	ldrb	r3, [r1, r2]
   13a44:	sub	r3, r3, #91	; 0x5b
   13a48:	cmp	r3, #33	; 0x21
   13a4c:	bhi	13ae0 <putc_unlocked@plt+0x277c>
   13a50:	add	r7, pc, #0
   13a54:	ldr	pc, [r7, r3, lsl #2]
   13a58:	andeq	r3, r1, r0, lsr #31
   13a5c:	andeq	r3, r1, r0, lsr #31
   13a60:	andeq	r3, r1, r0, ror #21
   13a64:	andeq	r3, r1, r0, lsr #31
   13a68:	andeq	r3, r1, r0, ror #21
   13a6c:	andeq	r3, r1, r0, lsr #31
   13a70:	andeq	r3, r1, r0, ror #21
   13a74:	andeq	r3, r1, r0, ror #21
   13a78:	andeq	r3, r1, r0, ror #21
   13a7c:	andeq	r3, r1, r0, ror #21
   13a80:	andeq	r3, r1, r0, ror #21
   13a84:	andeq	r3, r1, r0, ror #21
   13a88:	andeq	r3, r1, r0, ror #21
   13a8c:	andeq	r3, r1, r0, ror #21
   13a90:	andeq	r3, r1, r0, ror #21
   13a94:	andeq	r3, r1, r0, ror #21
   13a98:	andeq	r3, r1, r0, ror #21
   13a9c:	andeq	r3, r1, r0, ror #21
   13aa0:	andeq	r3, r1, r0, ror #21
   13aa4:	andeq	r3, r1, r0, ror #21
   13aa8:	andeq	r3, r1, r0, ror #21
   13aac:	andeq	r3, r1, r0, ror #21
   13ab0:	andeq	r3, r1, r0, ror #21
   13ab4:	andeq	r3, r1, r0, ror #21
   13ab8:	andeq	r3, r1, r0, ror #21
   13abc:	andeq	r3, r1, r0, ror #21
   13ac0:	andeq	r3, r1, r0, ror #21
   13ac4:	andeq	r3, r1, r0, ror #21
   13ac8:	andeq	r3, r1, r0, ror #21
   13acc:	andeq	r3, r1, r0, ror #21
   13ad0:	andeq	r3, r1, r0, ror #21
   13ad4:	andeq	r3, r1, r0, ror #21
   13ad8:	andeq	r3, r1, r0, ror #21
   13adc:	andeq	r3, r1, r0, lsr #31
   13ae0:	add	r2, r2, #1
   13ae4:	cmp	r2, r0
   13ae8:	bcc	13a40 <putc_unlocked@plt+0x26dc>
   13aec:	ldr	r7, [sp, #44]	; 0x2c
   13af0:	add	r7, r0, r7
   13af4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13af8:	bl	11154 <iswprint@plt>
   13afc:	cmp	r0, #0
   13b00:	movwne	r0, #1
   13b04:	and	r9, r9, r0
   13b08:	sub	r4, fp, #40	; 0x28
   13b0c:	mov	r0, r4
   13b10:	bl	11118 <mbsinit@plt>
   13b14:	ldr	lr, [sp, #28]
   13b18:	cmp	r0, #0
   13b1c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b20:	beq	139d8 <putc_unlocked@plt+0x2674>
   13b24:	b	13ec0 <putc_unlocked@plt+0x2b5c>
   13b28:	ldr	r0, [sp, #32]
   13b2c:	cmp	r0, #0
   13b30:	beq	13bc8 <putc_unlocked@plt+0x2864>
   13b34:	add	r0, r6, #2
   13b38:	cmp	r0, lr
   13b3c:	bcs	13bc8 <putc_unlocked@plt+0x2864>
   13b40:	add	r1, ip, r6
   13b44:	ldrb	r1, [r1, #1]
   13b48:	cmp	r1, #63	; 0x3f
   13b4c:	bne	13bc8 <putc_unlocked@plt+0x2864>
   13b50:	ldrb	r9, [ip, r0]
   13b54:	sub	r2, r9, #33	; 0x21
   13b58:	cmp	r2, #29
   13b5c:	bhi	13bc8 <putc_unlocked@plt+0x2864>
   13b60:	mov	r3, #1
   13b64:	movw	r1, #20929	; 0x51c1
   13b68:	movt	r1, #14336	; 0x3800
   13b6c:	tst	r1, r3, lsl r2
   13b70:	beq	13bc8 <putc_unlocked@plt+0x2864>
   13b74:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13b78:	tst	r1, #1
   13b7c:	bne	13fa8 <putc_unlocked@plt+0x2c44>
   13b80:	cmp	r8, r4
   13b84:	movcc	r1, #63	; 0x3f
   13b88:	strbcc	r1, [r7, r8]
   13b8c:	add	r2, r8, #1
   13b90:	cmp	r2, r4
   13b94:	movcc	r1, #34	; 0x22
   13b98:	strbcc	r1, [r7, r2]
   13b9c:	add	r2, r8, #2
   13ba0:	cmp	r2, r4
   13ba4:	movcc	r1, #34	; 0x22
   13ba8:	strbcc	r1, [r7, r2]
   13bac:	add	r2, r8, #3
   13bb0:	cmp	r2, r4
   13bb4:	movcc	r1, #63	; 0x3f
   13bb8:	strbcc	r1, [r7, r2]
   13bbc:	add	r8, r8, #4
   13bc0:	mov	r6, r0
   13bc4:	mov	r5, r9
   13bc8:	mov	r9, #0
   13bcc:	b	1361c <putc_unlocked@plt+0x22b8>
   13bd0:	add	r1, r2, r6
   13bd4:	str	r1, [sp, #44]	; 0x2c
   13bd8:	add	r1, r6, #1
   13bdc:	mov	r3, #0
   13be0:	ldr	lr, [sp, #28]
   13be4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13be8:	tst	r0, #1
   13bec:	bne	13ce0 <putc_unlocked@plt+0x297c>
   13bf0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13bf4:	tst	r2, #1
   13bf8:	bne	13fa8 <putc_unlocked@plt+0x2c44>
   13bfc:	cmp	r6, #2
   13c00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13c04:	movwne	r3, #1
   13c08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13c0c:	orr	r3, r3, r2
   13c10:	tst	r3, #1
   13c14:	bne	13c50 <putc_unlocked@plt+0x28ec>
   13c18:	cmp	r8, r4
   13c1c:	movcc	r2, #39	; 0x27
   13c20:	strbcc	r2, [r7, r8]
   13c24:	add	r3, r8, #1
   13c28:	cmp	r3, r4
   13c2c:	movcc	r2, #36	; 0x24
   13c30:	strbcc	r2, [r7, r3]
   13c34:	add	r3, r8, #2
   13c38:	cmp	r3, r4
   13c3c:	movcc	r2, #39	; 0x27
   13c40:	strbcc	r2, [r7, r3]
   13c44:	add	r8, r8, #3
   13c48:	mov	r2, #1
   13c4c:	str	r2, [fp, #-56]	; 0xffffffc8
   13c50:	cmp	r8, r4
   13c54:	movcc	r2, #92	; 0x5c
   13c58:	strbcc	r2, [r7, r8]
   13c5c:	add	r3, r8, #1
   13c60:	cmp	r3, r4
   13c64:	bcs	13c84 <putc_unlocked@plt+0x2920>
   13c68:	and	r7, r5, #192	; 0xc0
   13c6c:	mov	r2, #48	; 0x30
   13c70:	orr	r7, r2, r7, lsr #6
   13c74:	ldr	r6, [sp, #80]	; 0x50
   13c78:	strb	r7, [r6, r3]
   13c7c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13c80:	ldr	r7, [sp, #80]	; 0x50
   13c84:	add	r3, r8, #2
   13c88:	cmp	r3, r4
   13c8c:	bcs	13cac <putc_unlocked@plt+0x2948>
   13c90:	lsr	r7, r5, #3
   13c94:	mov	r2, #6
   13c98:	bfi	r7, r2, #3, #29
   13c9c:	ldr	r6, [sp, #80]	; 0x50
   13ca0:	strb	r7, [r6, r3]
   13ca4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13ca8:	ldr	r7, [sp, #80]	; 0x50
   13cac:	mov	r2, #6
   13cb0:	bfi	r5, r2, #3, #29
   13cb4:	add	r8, r8, #3
   13cb8:	mov	r3, #1
   13cbc:	b	13d04 <putc_unlocked@plt+0x29a0>
   13cc0:	ldr	r7, [sp, #80]	; 0x50
   13cc4:	cmp	r8, r4
   13cc8:	strbcc	r5, [r7, r8]
   13ccc:	ldrb	r5, [ip, r1]
   13cd0:	add	r1, r1, #1
   13cd4:	add	r8, r8, #1
   13cd8:	tst	r0, #1
   13cdc:	beq	13bf0 <putc_unlocked@plt+0x288c>
   13ce0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13ce4:	tst	r2, #1
   13ce8:	beq	13cfc <putc_unlocked@plt+0x2998>
   13cec:	cmp	r8, r4
   13cf0:	movcc	r2, #92	; 0x5c
   13cf4:	strbcc	r2, [r7, r8]
   13cf8:	add	r8, r8, #1
   13cfc:	mov	r2, #0
   13d00:	str	r2, [fp, #-52]	; 0xffffffcc
   13d04:	and	sl, r3, #1
   13d08:	ldr	r2, [sp, #44]	; 0x2c
   13d0c:	cmp	r2, r1
   13d10:	bls	13e1c <putc_unlocked@plt+0x2ab8>
   13d14:	cmp	sl, #0
   13d18:	movwne	sl, #1
   13d1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13d20:	mvn	r7, r2
   13d24:	orr	r7, r7, sl
   13d28:	tst	r7, #1
   13d2c:	bne	13cc0 <putc_unlocked@plt+0x295c>
   13d30:	cmp	r8, r4
   13d34:	ldrcc	r7, [sp, #80]	; 0x50
   13d38:	movcc	r2, #39	; 0x27
   13d3c:	strbcc	r2, [r7, r8]
   13d40:	add	r7, r8, #1
   13d44:	cmp	r7, r4
   13d48:	ldrcc	r6, [sp, #80]	; 0x50
   13d4c:	movcc	r2, #39	; 0x27
   13d50:	strbcc	r2, [r6, r7]
   13d54:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   13d58:	add	r8, r8, #2
   13d5c:	mov	r2, #0
   13d60:	str	r2, [fp, #-56]	; 0xffffffc8
   13d64:	b	13cc0 <putc_unlocked@plt+0x295c>
   13d68:	cmp	r8, r4
   13d6c:	movcc	r0, #39	; 0x27
   13d70:	strbcc	r0, [r7, r8]
   13d74:	add	r0, r8, #1
   13d78:	cmp	r0, r4
   13d7c:	movcc	r1, #36	; 0x24
   13d80:	strbcc	r1, [r7, r0]
   13d84:	add	r0, r8, #2
   13d88:	cmp	r0, r4
   13d8c:	movcc	r1, #39	; 0x27
   13d90:	strbcc	r1, [r7, r0]
   13d94:	add	r0, r8, #3
   13d98:	mov	r2, #1
   13d9c:	cmp	r0, r4
   13da0:	movcc	r1, #92	; 0x5c
   13da4:	strbcc	r1, [r7, r0]
   13da8:	str	r2, [fp, #-56]	; 0xffffffc8
   13dac:	add	r8, r0, #1
   13db0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13db4:	cmp	r1, #2
   13db8:	beq	13e0c <putc_unlocked@plt+0x2aa8>
   13dbc:	add	r1, r6, #1
   13dc0:	mov	r9, #0
   13dc4:	mov	sl, #1
   13dc8:	mov	r5, #48	; 0x30
   13dcc:	cmp	r1, lr
   13dd0:	bcs	1361c <putc_unlocked@plt+0x22b8>
   13dd4:	ldrb	r1, [ip, r1]
   13dd8:	sub	r1, r1, #48	; 0x30
   13ddc:	uxtb	r1, r1
   13de0:	cmp	r1, #9
   13de4:	bhi	1361c <putc_unlocked@plt+0x22b8>
   13de8:	cmp	r8, r4
   13dec:	movcc	r1, #48	; 0x30
   13df0:	strbcc	r1, [r7, r8]
   13df4:	add	r1, r0, #2
   13df8:	cmp	r1, r4
   13dfc:	movcc	r2, #48	; 0x30
   13e00:	strbcc	r2, [r7, r1]
   13e04:	add	r8, r0, #3
   13e08:	b	1361c <putc_unlocked@plt+0x22b8>
   13e0c:	mov	r0, #48	; 0x30
   13e10:	mov	sl, #1
   13e14:	mov	r9, #0
   13e18:	b	138c8 <putc_unlocked@plt+0x2564>
   13e1c:	sub	r6, r1, #1
   13e20:	cmp	sl, #0
   13e24:	movwne	sl, #1
   13e28:	mov	r0, r5
   13e2c:	cmp	sl, #0
   13e30:	bne	13e70 <putc_unlocked@plt+0x2b0c>
   13e34:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13e38:	tst	r1, #1
   13e3c:	beq	13e70 <putc_unlocked@plt+0x2b0c>
   13e40:	cmp	r8, r4
   13e44:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13e48:	movcc	r1, #39	; 0x27
   13e4c:	strbcc	r1, [r7, r8]
   13e50:	add	r1, r8, #1
   13e54:	cmp	r1, r4
   13e58:	movcc	r2, #39	; 0x27
   13e5c:	strbcc	r2, [r7, r1]
   13e60:	add	r8, r8, #2
   13e64:	mov	r1, #0
   13e68:	str	r1, [fp, #-56]	; 0xffffffc8
   13e6c:	b	13954 <putc_unlocked@plt+0x25f0>
   13e70:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13e74:	b	13954 <putc_unlocked@plt+0x25f0>
   13e78:	mov	r9, #0
   13e7c:	b	13eb8 <putc_unlocked@plt+0x2b54>
   13e80:	mov	r9, #0
   13e84:	cmp	r7, lr
   13e88:	bcs	13eb8 <putc_unlocked@plt+0x2b54>
   13e8c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e90:	ldr	r7, [sp, #44]	; 0x2c
   13e94:	ldr	r0, [sp, #20]
   13e98:	ldrb	r0, [r0, r7]
   13e9c:	cmp	r0, #0
   13ea0:	beq	13ec0 <putc_unlocked@plt+0x2b5c>
   13ea4:	add	r7, r7, #1
   13ea8:	add	r0, r6, r7
   13eac:	cmp	r0, lr
   13eb0:	bcc	13e94 <putc_unlocked@plt+0x2b30>
   13eb4:	b	13ec0 <putc_unlocked@plt+0x2b5c>
   13eb8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ebc:	ldr	r7, [sp, #44]	; 0x2c
   13ec0:	mov	r1, r7
   13ec4:	ldr	r7, [sp, #80]	; 0x50
   13ec8:	b	137f0 <putc_unlocked@plt+0x248c>
   13ecc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13ed0:	eor	r0, r1, #2
   13ed4:	orr	r0, r0, r8
   13ed8:	clz	r0, r0
   13edc:	lsr	r0, r0, #5
   13ee0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13ee4:	tst	r2, r0
   13ee8:	bne	13fa8 <putc_unlocked@plt+0x2c44>
   13eec:	cmp	r1, #2
   13ef0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13ef4:	movwne	r0, #1
   13ef8:	orr	r0, r2, r0
   13efc:	tst	r0, #1
   13f00:	ldreq	r0, [sp, #56]	; 0x38
   13f04:	eoreq	r0, r0, #1
   13f08:	tsteq	r0, #1
   13f0c:	bne	13f40 <putc_unlocked@plt+0x2bdc>
   13f10:	mov	r9, lr
   13f14:	tst	r5, #1
   13f18:	bne	14010 <putc_unlocked@plt+0x2cac>
   13f1c:	ldr	r0, [sp, #72]	; 0x48
   13f20:	cmp	r0, #0
   13f24:	beq	13f40 <putc_unlocked@plt+0x2bdc>
   13f28:	mov	r5, #0
   13f2c:	cmp	r4, #0
   13f30:	ldr	r0, [sp, #84]	; 0x54
   13f34:	mov	sl, r2
   13f38:	ldr	r6, [sp, #72]	; 0x48
   13f3c:	beq	130d8 <putc_unlocked@plt+0x1d74>
   13f40:	ldr	r1, [sp, #92]	; 0x5c
   13f44:	clz	r0, r1
   13f48:	lsr	r0, r0, #5
   13f4c:	orr	r0, r0, r2
   13f50:	tst	r0, #1
   13f54:	bne	13f80 <putc_unlocked@plt+0x2c1c>
   13f58:	ldrb	r0, [r1]
   13f5c:	cmp	r0, #0
   13f60:	beq	13f80 <putc_unlocked@plt+0x2c1c>
   13f64:	add	r1, r1, #1
   13f68:	cmp	r8, r4
   13f6c:	strbcc	r0, [r7, r8]
   13f70:	add	r8, r8, #1
   13f74:	ldrb	r0, [r1], #1
   13f78:	cmp	r0, #0
   13f7c:	bne	13f68 <putc_unlocked@plt+0x2c04>
   13f80:	cmp	r8, r4
   13f84:	movcc	r0, #0
   13f88:	strbcc	r0, [r7, r8]
   13f8c:	b	14004 <putc_unlocked@plt+0x2ca0>
   13f90:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f94:	mov	lr, r4
   13f98:	mov	r4, r5
   13f9c:	b	13fa8 <putc_unlocked@plt+0x2c44>
   13fa0:	ldr	r7, [sp, #80]	; 0x50
   13fa4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13fa8:	mov	r0, #0
   13fac:	ldr	r1, [fp, #12]
   13fb0:	bic	r1, r1, #2
   13fb4:	ldr	r2, [sp, #84]	; 0x54
   13fb8:	tst	r2, #1
   13fbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13fc0:	mov	r2, r3
   13fc4:	movwne	r2, #4
   13fc8:	cmp	r3, #2
   13fcc:	movne	r2, r3
   13fd0:	str	r2, [sp]
   13fd4:	str	r1, [sp, #4]
   13fd8:	str	r0, [sp, #8]
   13fdc:	ldr	r0, [sp, #68]	; 0x44
   13fe0:	str	r0, [sp, #12]
   13fe4:	ldr	r0, [sp, #76]	; 0x4c
   13fe8:	str	r0, [sp, #16]
   13fec:	mov	r0, r7
   13ff0:	mov	r1, r4
   13ff4:	mov	r2, ip
   13ff8:	mov	r3, lr
   13ffc:	bl	13050 <putc_unlocked@plt+0x1cec>
   14000:	mov	r8, r0
   14004:	mov	r0, r8
   14008:	sub	sp, fp, #28
   1400c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14010:	mov	r0, #5
   14014:	str	r0, [sp]
   14018:	ldr	r0, [fp, #12]
   1401c:	str	r0, [sp, #4]
   14020:	ldr	r0, [fp, #16]
   14024:	str	r0, [sp, #8]
   14028:	ldr	r0, [sp, #68]	; 0x44
   1402c:	str	r0, [sp, #12]
   14030:	ldr	r0, [sp, #76]	; 0x4c
   14034:	str	r0, [sp, #16]
   14038:	mov	r0, r7
   1403c:	ldr	r1, [sp, #72]	; 0x48
   14040:	ldr	r2, [fp, #-84]	; 0xffffffac
   14044:	mov	r3, r9
   14048:	b	13ffc <putc_unlocked@plt+0x2c98>
   1404c:	bl	11328 <abort@plt>
   14050:	mov	r3, r2
   14054:	mov	r2, #0
   14058:	b	1405c <putc_unlocked@plt+0x2cf8>
   1405c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14060:	add	fp, sp, #28
   14064:	sub	sp, sp, #36	; 0x24
   14068:	mov	r4, r2
   1406c:	str	r2, [sp, #24]
   14070:	mov	r5, r1
   14074:	mov	r6, r0
   14078:	str	r0, [sp, #20]
   1407c:	movw	r8, #33176	; 0x8198
   14080:	movt	r8, #2
   14084:	cmp	r3, #0
   14088:	movne	r8, r3
   1408c:	bl	1122c <__errno_location@plt>
   14090:	str	r0, [sp, #28]
   14094:	ldm	r8, {r3, r9}
   14098:	ldr	r1, [r8, #40]	; 0x28
   1409c:	ldr	r2, [r8, #44]	; 0x2c
   140a0:	ldr	r7, [r0]
   140a4:	str	r7, [sp, #32]
   140a8:	add	sl, r8, #8
   140ac:	cmp	r4, #0
   140b0:	orreq	r9, r9, #1
   140b4:	stm	sp, {r3, r9, sl}
   140b8:	str	r1, [sp, #12]
   140bc:	str	r2, [sp, #16]
   140c0:	mov	r0, #0
   140c4:	mov	r1, #0
   140c8:	mov	r2, r6
   140cc:	mov	r3, r5
   140d0:	mov	r7, r5
   140d4:	bl	13050 <putc_unlocked@plt+0x1cec>
   140d8:	mov	r5, r0
   140dc:	add	r4, r0, #1
   140e0:	mov	r0, r4
   140e4:	bl	14f6c <putc_unlocked@plt+0x3c08>
   140e8:	mov	r6, r0
   140ec:	ldr	r0, [r8]
   140f0:	ldr	r1, [r8, #40]	; 0x28
   140f4:	ldr	r2, [r8, #44]	; 0x2c
   140f8:	stm	sp, {r0, r9, sl}
   140fc:	str	r1, [sp, #12]
   14100:	str	r2, [sp, #16]
   14104:	mov	r0, r6
   14108:	mov	r1, r4
   1410c:	ldr	r2, [sp, #20]
   14110:	mov	r3, r7
   14114:	bl	13050 <putc_unlocked@plt+0x1cec>
   14118:	ldr	r0, [sp, #24]
   1411c:	ldr	r1, [sp, #32]
   14120:	ldr	r2, [sp, #28]
   14124:	str	r1, [r2]
   14128:	cmp	r0, #0
   1412c:	strne	r5, [r0]
   14130:	mov	r0, r6
   14134:	sub	sp, fp, #28
   14138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1413c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14140:	add	fp, sp, #24
   14144:	movw	r8, #33048	; 0x8118
   14148:	movt	r8, #2
   1414c:	ldr	r4, [r8]
   14150:	movw	r5, #33052	; 0x811c
   14154:	movt	r5, #2
   14158:	ldr	r0, [r5]
   1415c:	cmp	r0, #2
   14160:	blt	1418c <putc_unlocked@plt+0x2e28>
   14164:	add	r7, r4, #12
   14168:	mov	r6, #0
   1416c:	ldr	r0, [r7, r6, lsl #3]
   14170:	bl	12234 <putc_unlocked@plt+0xed0>
   14174:	add	r0, r6, #1
   14178:	ldr	r1, [r5]
   1417c:	add	r2, r6, #2
   14180:	cmp	r2, r1
   14184:	mov	r6, r0
   14188:	blt	1416c <putc_unlocked@plt+0x2e08>
   1418c:	ldr	r0, [r4, #4]
   14190:	movw	r7, #33224	; 0x81c8
   14194:	movt	r7, #2
   14198:	cmp	r0, r7
   1419c:	beq	141b4 <putc_unlocked@plt+0x2e50>
   141a0:	bl	12234 <putc_unlocked@plt+0xed0>
   141a4:	movw	r0, #33056	; 0x8120
   141a8:	movt	r0, #2
   141ac:	mov	r6, #256	; 0x100
   141b0:	strd	r6, [r0]
   141b4:	movw	r6, #33056	; 0x8120
   141b8:	movt	r6, #2
   141bc:	cmp	r4, r6
   141c0:	beq	141d0 <putc_unlocked@plt+0x2e6c>
   141c4:	mov	r0, r4
   141c8:	bl	12234 <putc_unlocked@plt+0xed0>
   141cc:	str	r6, [r8]
   141d0:	mov	r0, #1
   141d4:	str	r0, [r5]
   141d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141dc:	movw	r3, #33176	; 0x8198
   141e0:	movt	r3, #2
   141e4:	mvn	r2, #0
   141e8:	b	141ec <putc_unlocked@plt+0x2e88>
   141ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141f0:	add	fp, sp, #28
   141f4:	sub	sp, sp, #44	; 0x2c
   141f8:	mov	r7, r3
   141fc:	str	r2, [sp, #36]	; 0x24
   14200:	str	r1, [sp, #32]
   14204:	mov	r5, r0
   14208:	bl	1122c <__errno_location@plt>
   1420c:	cmp	r5, #0
   14210:	blt	1437c <putc_unlocked@plt+0x3018>
   14214:	cmn	r5, #-2147483647	; 0x80000001
   14218:	beq	1437c <putc_unlocked@plt+0x3018>
   1421c:	movw	r4, #33048	; 0x8118
   14220:	movt	r4, #2
   14224:	ldr	r6, [r4]
   14228:	str	r0, [sp, #28]
   1422c:	ldr	r0, [r0]
   14230:	str	r0, [sp, #24]
   14234:	movw	r8, #33052	; 0x811c
   14238:	movt	r8, #2
   1423c:	ldr	r1, [r8]
   14240:	cmp	r1, r5
   14244:	ble	14250 <putc_unlocked@plt+0x2eec>
   14248:	mov	sl, r6
   1424c:	b	142b8 <putc_unlocked@plt+0x2f54>
   14250:	str	r1, [fp, #-32]	; 0xffffffe0
   14254:	mov	r0, #8
   14258:	str	r0, [sp]
   1425c:	movw	r9, #33056	; 0x8120
   14260:	movt	r9, #2
   14264:	subs	r0, r6, r9
   14268:	movne	r0, r6
   1426c:	add	r2, r5, #1
   14270:	sub	r2, r2, r1
   14274:	sub	r1, fp, #32
   14278:	mvn	r3, #-2147483648	; 0x80000000
   1427c:	bl	15054 <putc_unlocked@plt+0x3cf0>
   14280:	mov	sl, r0
   14284:	str	r0, [r4]
   14288:	cmp	r6, r9
   1428c:	ldrdeq	r0, [r9]
   14290:	stmeq	sl, {r0, r1}
   14294:	ldr	r1, [r8]
   14298:	add	r0, sl, r1, lsl #3
   1429c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   142a0:	sub	r1, r2, r1
   142a4:	lsl	r2, r1, #3
   142a8:	mov	r1, #0
   142ac:	bl	1125c <memset@plt>
   142b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142b4:	str	r0, [r8]
   142b8:	mov	r9, sl
   142bc:	ldr	r6, [r9, r5, lsl #3]!
   142c0:	ldr	r4, [r9, #4]!
   142c4:	ldm	r7, {r0, r1}
   142c8:	ldr	r2, [r7, #40]	; 0x28
   142cc:	ldr	r3, [r7, #44]	; 0x2c
   142d0:	orr	r8, r1, #1
   142d4:	add	r1, r7, #8
   142d8:	stm	sp, {r0, r8}
   142dc:	str	r1, [sp, #20]
   142e0:	add	r0, sp, #8
   142e4:	stm	r0, {r1, r2, r3}
   142e8:	mov	r0, r4
   142ec:	mov	r1, r6
   142f0:	ldr	r2, [sp, #32]
   142f4:	ldr	r3, [sp, #36]	; 0x24
   142f8:	bl	13050 <putc_unlocked@plt+0x1cec>
   142fc:	cmp	r6, r0
   14300:	bhi	14364 <putc_unlocked@plt+0x3000>
   14304:	add	r6, r0, #1
   14308:	str	r6, [sl, r5, lsl #3]
   1430c:	movw	r0, #33224	; 0x81c8
   14310:	movt	r0, #2
   14314:	cmp	r4, r0
   14318:	beq	14324 <putc_unlocked@plt+0x2fc0>
   1431c:	mov	r0, r4
   14320:	bl	12234 <putc_unlocked@plt+0xed0>
   14324:	mov	r0, r6
   14328:	bl	14f6c <putc_unlocked@plt+0x3c08>
   1432c:	mov	r4, r0
   14330:	str	r0, [r9]
   14334:	ldr	r0, [r7]
   14338:	ldr	r1, [r7, #40]	; 0x28
   1433c:	ldr	r2, [r7, #44]	; 0x2c
   14340:	stm	sp, {r0, r8}
   14344:	ldr	r0, [sp, #20]
   14348:	add	r3, sp, #8
   1434c:	stm	r3, {r0, r1, r2}
   14350:	mov	r0, r4
   14354:	mov	r1, r6
   14358:	ldr	r2, [sp, #32]
   1435c:	ldr	r3, [sp, #36]	; 0x24
   14360:	bl	13050 <putc_unlocked@plt+0x1cec>
   14364:	ldr	r0, [sp, #28]
   14368:	ldr	r1, [sp, #24]
   1436c:	str	r1, [r0]
   14370:	mov	r0, r4
   14374:	sub	sp, fp, #28
   14378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1437c:	bl	11328 <abort@plt>
   14380:	movw	r3, #33176	; 0x8198
   14384:	movt	r3, #2
   14388:	b	141ec <putc_unlocked@plt+0x2e88>
   1438c:	mov	r1, r0
   14390:	mov	r0, #0
   14394:	b	141dc <putc_unlocked@plt+0x2e78>
   14398:	mov	r2, r1
   1439c:	mov	r1, r0
   143a0:	mov	r0, #0
   143a4:	b	14380 <putc_unlocked@plt+0x301c>
   143a8:	push	{r4, r5, r6, sl, fp, lr}
   143ac:	add	fp, sp, #16
   143b0:	sub	sp, sp, #48	; 0x30
   143b4:	mov	r4, r2
   143b8:	mov	r5, r0
   143bc:	mov	r6, sp
   143c0:	mov	r0, r6
   143c4:	bl	143e4 <putc_unlocked@plt+0x3080>
   143c8:	mov	r0, r5
   143cc:	mov	r1, r4
   143d0:	mvn	r2, #0
   143d4:	mov	r3, r6
   143d8:	bl	141ec <putc_unlocked@plt+0x2e88>
   143dc:	sub	sp, fp, #16
   143e0:	pop	{r4, r5, r6, sl, fp, pc}
   143e4:	vmov.i32	q8, #0	; 0x00000000
   143e8:	mov	r2, #32
   143ec:	mov	r3, r0
   143f0:	vst1.32	{d16-d17}, [r3], r2
   143f4:	vst1.32	{d16-d17}, [r3]
   143f8:	add	r2, r0, #16
   143fc:	vst1.32	{d16-d17}, [r2]
   14400:	cmp	r1, #10
   14404:	strne	r1, [r0]
   14408:	bxne	lr
   1440c:	push	{fp, lr}
   14410:	mov	fp, sp
   14414:	bl	11328 <abort@plt>
   14418:	push	{r4, r5, r6, r7, fp, lr}
   1441c:	add	fp, sp, #16
   14420:	sub	sp, sp, #48	; 0x30
   14424:	mov	r4, r3
   14428:	mov	r5, r2
   1442c:	mov	r6, r0
   14430:	mov	r7, sp
   14434:	mov	r0, r7
   14438:	bl	143e4 <putc_unlocked@plt+0x3080>
   1443c:	mov	r0, r6
   14440:	mov	r1, r5
   14444:	mov	r2, r4
   14448:	mov	r3, r7
   1444c:	bl	141ec <putc_unlocked@plt+0x2e88>
   14450:	sub	sp, fp, #16
   14454:	pop	{r4, r5, r6, r7, fp, pc}
   14458:	mov	r2, r1
   1445c:	mov	r1, r0
   14460:	mov	r0, #0
   14464:	b	143a8 <putc_unlocked@plt+0x3044>
   14468:	mov	r3, r2
   1446c:	mov	r2, r1
   14470:	mov	r1, r0
   14474:	mov	r0, #0
   14478:	b	14418 <putc_unlocked@plt+0x30b4>
   1447c:	push	{r4, r5, r6, sl, fp, lr}
   14480:	add	fp, sp, #16
   14484:	sub	sp, sp, #48	; 0x30
   14488:	mov	r4, r1
   1448c:	mov	r5, r0
   14490:	mov	r0, #32
   14494:	movw	r1, #33176	; 0x8198
   14498:	movt	r1, #2
   1449c:	add	r3, r1, #16
   144a0:	vld1.64	{d16-d17}, [r1], r0
   144a4:	mov	r6, sp
   144a8:	vld1.64	{d18-d19}, [r3]
   144ac:	add	r3, r6, #16
   144b0:	vld1.64	{d20-d21}, [r1]
   144b4:	vst1.64	{d18-d19}, [r3]
   144b8:	mov	r1, r6
   144bc:	vst1.64	{d16-d17}, [r1], r0
   144c0:	vst1.64	{d20-d21}, [r1]
   144c4:	mov	r0, r6
   144c8:	mov	r1, r2
   144cc:	mov	r2, #1
   144d0:	bl	12f44 <putc_unlocked@plt+0x1be0>
   144d4:	mov	r0, #0
   144d8:	mov	r1, r5
   144dc:	mov	r2, r4
   144e0:	mov	r3, r6
   144e4:	bl	141ec <putc_unlocked@plt+0x2e88>
   144e8:	sub	sp, fp, #16
   144ec:	pop	{r4, r5, r6, sl, fp, pc}
   144f0:	mov	r2, r1
   144f4:	mvn	r1, #0
   144f8:	b	1447c <putc_unlocked@plt+0x3118>
   144fc:	mov	r1, #58	; 0x3a
   14500:	b	144f0 <putc_unlocked@plt+0x318c>
   14504:	mov	r2, #58	; 0x3a
   14508:	b	1447c <putc_unlocked@plt+0x3118>
   1450c:	push	{r4, r5, r6, sl, fp, lr}
   14510:	add	fp, sp, #16
   14514:	sub	sp, sp, #48	; 0x30
   14518:	mov	r4, r2
   1451c:	mov	r5, r0
   14520:	mov	r6, sp
   14524:	mov	r0, r6
   14528:	bl	143e4 <putc_unlocked@plt+0x3080>
   1452c:	mov	r0, r6
   14530:	mov	r1, #58	; 0x3a
   14534:	mov	r2, #1
   14538:	bl	12f44 <putc_unlocked@plt+0x1be0>
   1453c:	mov	r0, r5
   14540:	mov	r1, r4
   14544:	mvn	r2, #0
   14548:	mov	r3, r6
   1454c:	bl	141ec <putc_unlocked@plt+0x2e88>
   14550:	sub	sp, fp, #16
   14554:	pop	{r4, r5, r6, sl, fp, pc}
   14558:	push	{fp, lr}
   1455c:	mov	fp, sp
   14560:	sub	sp, sp, #8
   14564:	mvn	ip, #0
   14568:	str	ip, [sp]
   1456c:	bl	14578 <putc_unlocked@plt+0x3214>
   14570:	mov	sp, fp
   14574:	pop	{fp, pc}
   14578:	push	{r4, r5, r6, r7, fp, lr}
   1457c:	add	fp, sp, #16
   14580:	sub	sp, sp, #48	; 0x30
   14584:	mov	r7, r3
   14588:	mov	r5, r0
   1458c:	mov	r0, #32
   14590:	movw	r3, #33176	; 0x8198
   14594:	movt	r3, #2
   14598:	add	r4, r3, #16
   1459c:	vld1.64	{d16-d17}, [r3], r0
   145a0:	mov	r6, sp
   145a4:	vld1.64	{d18-d19}, [r4]
   145a8:	add	r4, r6, #16
   145ac:	vld1.64	{d20-d21}, [r3]
   145b0:	vst1.64	{d18-d19}, [r4]
   145b4:	mov	r3, r6
   145b8:	vst1.64	{d16-d17}, [r3], r0
   145bc:	vst1.64	{d20-d21}, [r3]
   145c0:	mov	r0, r6
   145c4:	bl	12f9c <putc_unlocked@plt+0x1c38>
   145c8:	ldr	r2, [fp, #8]
   145cc:	mov	r0, r5
   145d0:	mov	r1, r7
   145d4:	mov	r3, r6
   145d8:	bl	141ec <putc_unlocked@plt+0x2e88>
   145dc:	sub	sp, fp, #16
   145e0:	pop	{r4, r5, r6, r7, fp, pc}
   145e4:	mov	r3, r2
   145e8:	mov	r2, r1
   145ec:	mov	r1, r0
   145f0:	mov	r0, #0
   145f4:	b	14558 <putc_unlocked@plt+0x31f4>
   145f8:	push	{fp, lr}
   145fc:	mov	fp, sp
   14600:	sub	sp, sp, #8
   14604:	mov	ip, r2
   14608:	mov	r2, r1
   1460c:	mov	r1, r0
   14610:	str	r3, [sp]
   14614:	mov	r0, #0
   14618:	mov	r3, ip
   1461c:	bl	14578 <putc_unlocked@plt+0x3214>
   14620:	mov	sp, fp
   14624:	pop	{fp, pc}
   14628:	movw	r3, #33064	; 0x8128
   1462c:	movt	r3, #2
   14630:	b	141ec <putc_unlocked@plt+0x2e88>
   14634:	mov	r2, r1
   14638:	mov	r1, r0
   1463c:	mov	r0, #0
   14640:	b	14628 <putc_unlocked@plt+0x32c4>
   14644:	mvn	r2, #0
   14648:	b	14628 <putc_unlocked@plt+0x32c4>
   1464c:	mov	r1, r0
   14650:	mov	r0, #0
   14654:	b	14644 <putc_unlocked@plt+0x32e0>
   14658:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1465c:	add	fp, sp, #24
   14660:	sub	sp, sp, #16
   14664:	mov	r4, r1
   14668:	mov	r5, r0
   1466c:	mov	r7, #0
   14670:	mov	r0, #0
   14674:	mov	r1, r5
   14678:	mov	r2, #5
   1467c:	bl	11130 <dcgettext@plt>
   14680:	cmp	r0, r5
   14684:	beq	14690 <putc_unlocked@plt+0x332c>
   14688:	sub	sp, fp, #24
   1468c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14690:	bl	162e4 <putc_unlocked@plt+0x4f80>
   14694:	mov	r6, r0
   14698:	mov	r8, #56	; 0x38
   1469c:	mov	r0, #45	; 0x2d
   146a0:	stm	sp, {r0, r8}
   146a4:	str	r7, [sp, #8]
   146a8:	str	r7, [sp, #12]
   146ac:	mov	r0, r6
   146b0:	mov	r1, #85	; 0x55
   146b4:	mov	r2, #84	; 0x54
   146b8:	mov	r3, #70	; 0x46
   146bc:	bl	14754 <putc_unlocked@plt+0x33f0>
   146c0:	cmp	r0, #0
   146c4:	beq	146e0 <putc_unlocked@plt+0x337c>
   146c8:	ldrb	r1, [r5]
   146cc:	movw	r2, #28618	; 0x6fca
   146d0:	movt	r2, #1
   146d4:	movw	r0, #28622	; 0x6fce
   146d8:	movt	r0, #1
   146dc:	b	14724 <putc_unlocked@plt+0x33c0>
   146e0:	mov	r0, #48	; 0x30
   146e4:	mov	r1, #51	; 0x33
   146e8:	str	r8, [sp]
   146ec:	stmib	sp, {r0, r1}
   146f0:	str	r0, [sp, #12]
   146f4:	mov	r0, r6
   146f8:	mov	r1, #71	; 0x47
   146fc:	mov	r2, #66	; 0x42
   14700:	mov	r3, #49	; 0x31
   14704:	bl	14754 <putc_unlocked@plt+0x33f0>
   14708:	cmp	r0, #0
   1470c:	beq	14734 <putc_unlocked@plt+0x33d0>
   14710:	ldrb	r1, [r5]
   14714:	movw	r2, #28626	; 0x6fd2
   14718:	movt	r2, #1
   1471c:	movw	r0, #28630	; 0x6fd6
   14720:	movt	r0, #1
   14724:	cmp	r1, #96	; 0x60
   14728:	moveq	r0, r2
   1472c:	sub	sp, fp, #24
   14730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14734:	movw	r1, #28612	; 0x6fc4
   14738:	movt	r1, #1
   1473c:	movw	r0, #28616	; 0x6fc8
   14740:	movt	r0, #1
   14744:	cmp	r4, #9
   14748:	moveq	r0, r1
   1474c:	sub	sp, fp, #24
   14750:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14754:	push	{r4, r5, r6, r7, fp, lr}
   14758:	add	fp, sp, #16
   1475c:	sub	sp, sp, #16
   14760:	mov	r4, r3
   14764:	mov	r5, r2
   14768:	mov	r7, r1
   1476c:	mov	r6, r0
   14770:	mov	r0, r1
   14774:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   14778:	ldrb	r1, [r6]
   1477c:	cmp	r0, #0
   14780:	andne	r1, r1, #223	; 0xdf
   14784:	mov	r0, #0
   14788:	cmp	r1, r7
   1478c:	bne	147cc <putc_unlocked@plt+0x3468>
   14790:	cmp	r7, #0
   14794:	moveq	r0, #1
   14798:	subeq	sp, fp, #16
   1479c:	popeq	{r4, r5, r6, r7, fp, pc}
   147a0:	ldr	r0, [fp, #20]
   147a4:	ldr	r1, [fp, #16]
   147a8:	ldr	r2, [fp, #12]
   147ac:	ldr	r3, [fp, #8]
   147b0:	str	r2, [sp]
   147b4:	str	r1, [sp, #4]
   147b8:	str	r0, [sp, #8]
   147bc:	mov	r0, r6
   147c0:	mov	r1, r5
   147c4:	mov	r2, r4
   147c8:	bl	147d4 <putc_unlocked@plt+0x3470>
   147cc:	sub	sp, fp, #16
   147d0:	pop	{r4, r5, r6, r7, fp, pc}
   147d4:	push	{r4, r5, r6, r7, fp, lr}
   147d8:	add	fp, sp, #16
   147dc:	sub	sp, sp, #8
   147e0:	mov	r4, r3
   147e4:	mov	r5, r2
   147e8:	mov	r7, r1
   147ec:	mov	r6, r0
   147f0:	mov	r0, r1
   147f4:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   147f8:	ldrb	r1, [r6, #1]
   147fc:	cmp	r0, #0
   14800:	andne	r1, r1, #223	; 0xdf
   14804:	mov	r0, #0
   14808:	cmp	r1, r7
   1480c:	bne	14844 <putc_unlocked@plt+0x34e0>
   14810:	cmp	r7, #0
   14814:	moveq	r0, #1
   14818:	subeq	sp, fp, #16
   1481c:	popeq	{r4, r5, r6, r7, fp, pc}
   14820:	ldr	r0, [fp, #16]
   14824:	ldr	r1, [fp, #12]
   14828:	ldr	r3, [fp, #8]
   1482c:	str	r1, [sp]
   14830:	str	r0, [sp, #4]
   14834:	mov	r0, r6
   14838:	mov	r1, r5
   1483c:	mov	r2, r4
   14840:	bl	1484c <putc_unlocked@plt+0x34e8>
   14844:	sub	sp, fp, #16
   14848:	pop	{r4, r5, r6, r7, fp, pc}
   1484c:	push	{r4, r5, r6, r7, fp, lr}
   14850:	add	fp, sp, #16
   14854:	sub	sp, sp, #8
   14858:	mov	r4, r3
   1485c:	mov	r5, r2
   14860:	mov	r7, r1
   14864:	mov	r6, r0
   14868:	mov	r0, r1
   1486c:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   14870:	ldrb	r1, [r6, #2]
   14874:	cmp	r0, #0
   14878:	andne	r1, r1, #223	; 0xdf
   1487c:	mov	r0, #0
   14880:	cmp	r1, r7
   14884:	bne	148b4 <putc_unlocked@plt+0x3550>
   14888:	cmp	r7, #0
   1488c:	moveq	r0, #1
   14890:	subeq	sp, fp, #16
   14894:	popeq	{r4, r5, r6, r7, fp, pc}
   14898:	ldr	r0, [fp, #12]
   1489c:	ldr	r3, [fp, #8]
   148a0:	str	r0, [sp]
   148a4:	mov	r0, r6
   148a8:	mov	r1, r5
   148ac:	mov	r2, r4
   148b0:	bl	148bc <putc_unlocked@plt+0x3558>
   148b4:	sub	sp, fp, #16
   148b8:	pop	{r4, r5, r6, r7, fp, pc}
   148bc:	push	{r4, r5, r6, r7, fp, lr}
   148c0:	add	fp, sp, #16
   148c4:	mov	r4, r3
   148c8:	mov	r5, r2
   148cc:	mov	r7, r1
   148d0:	mov	r6, r0
   148d4:	mov	r0, r1
   148d8:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   148dc:	ldrb	r1, [r6, #3]
   148e0:	ldr	r3, [fp, #8]
   148e4:	cmp	r0, #0
   148e8:	andne	r1, r1, #223	; 0xdf
   148ec:	mov	r0, #0
   148f0:	cmp	r1, r7
   148f4:	popne	{r4, r5, r6, r7, fp, pc}
   148f8:	cmp	r7, #0
   148fc:	beq	14914 <putc_unlocked@plt+0x35b0>
   14900:	mov	r0, r6
   14904:	mov	r1, r5
   14908:	mov	r2, r4
   1490c:	pop	{r4, r5, r6, r7, fp, lr}
   14910:	b	1491c <putc_unlocked@plt+0x35b8>
   14914:	mov	r0, #1
   14918:	pop	{r4, r5, r6, r7, fp, pc}
   1491c:	push	{r4, r5, r6, r7, fp, lr}
   14920:	add	fp, sp, #16
   14924:	mov	r4, r3
   14928:	mov	r5, r2
   1492c:	mov	r7, r1
   14930:	mov	r6, r0
   14934:	mov	r0, r1
   14938:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   1493c:	ldrb	r1, [r6, #4]
   14940:	cmp	r0, #0
   14944:	andne	r1, r1, #223	; 0xdf
   14948:	mov	r0, #0
   1494c:	cmp	r1, r7
   14950:	popne	{r4, r5, r6, r7, fp, pc}
   14954:	cmp	r7, #0
   14958:	beq	14970 <putc_unlocked@plt+0x360c>
   1495c:	mov	r0, r6
   14960:	mov	r1, r5
   14964:	mov	r2, r4
   14968:	pop	{r4, r5, r6, r7, fp, lr}
   1496c:	b	14978 <putc_unlocked@plt+0x3614>
   14970:	mov	r0, #1
   14974:	pop	{r4, r5, r6, r7, fp, pc}
   14978:	push	{r4, r5, r6, sl, fp, lr}
   1497c:	add	fp, sp, #16
   14980:	mov	r4, r2
   14984:	mov	r6, r1
   14988:	mov	r5, r0
   1498c:	mov	r0, r1
   14990:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   14994:	ldrb	r1, [r5, #5]
   14998:	cmp	r0, #0
   1499c:	andne	r1, r1, #223	; 0xdf
   149a0:	mov	r0, #0
   149a4:	cmp	r1, r6
   149a8:	popne	{r4, r5, r6, sl, fp, pc}
   149ac:	cmp	r6, #0
   149b0:	beq	149c4 <putc_unlocked@plt+0x3660>
   149b4:	mov	r0, r5
   149b8:	mov	r1, r4
   149bc:	pop	{r4, r5, r6, sl, fp, lr}
   149c0:	b	149cc <putc_unlocked@plt+0x3668>
   149c4:	mov	r0, #1
   149c8:	pop	{r4, r5, r6, sl, fp, pc}
   149cc:	push	{r4, r5, fp, lr}
   149d0:	add	fp, sp, #8
   149d4:	mov	r5, r1
   149d8:	mov	r4, r0
   149dc:	mov	r0, r1
   149e0:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   149e4:	ldrb	r1, [r4, #6]
   149e8:	cmp	r0, #0
   149ec:	andne	r1, r1, #223	; 0xdf
   149f0:	mov	r0, #0
   149f4:	cmp	r1, r5
   149f8:	popne	{r4, r5, fp, pc}
   149fc:	cmp	r5, #0
   14a00:	beq	14a10 <putc_unlocked@plt+0x36ac>
   14a04:	mov	r0, r4
   14a08:	pop	{r4, r5, fp, lr}
   14a0c:	b	14a18 <putc_unlocked@plt+0x36b4>
   14a10:	mov	r0, #1
   14a14:	pop	{r4, r5, fp, pc}
   14a18:	push	{r4, sl, fp, lr}
   14a1c:	add	fp, sp, #8
   14a20:	mov	r4, r0
   14a24:	mov	r0, #0
   14a28:	bl	15fb8 <putc_unlocked@plt+0x4c54>
   14a2c:	ldrb	r1, [r4, #7]
   14a30:	cmp	r0, #0
   14a34:	beq	14a4c <putc_unlocked@plt+0x36e8>
   14a38:	tst	r1, #223	; 0xdf
   14a3c:	moveq	r0, #1
   14a40:	popeq	{r4, sl, fp, pc}
   14a44:	mov	r0, #0
   14a48:	pop	{r4, sl, fp, pc}
   14a4c:	cmp	r1, #0
   14a50:	moveq	r0, #1
   14a54:	popeq	{r4, sl, fp, pc}
   14a58:	mov	r0, #0
   14a5c:	pop	{r4, sl, fp, pc}
   14a60:	mov	r1, #0
   14a64:	mov	r2, #3
   14a68:	b	160b0 <putc_unlocked@plt+0x4d4c>
   14a6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a70:	add	fp, sp, #24
   14a74:	sub	sp, sp, #32
   14a78:	mov	r4, r2
   14a7c:	mov	r8, r0
   14a80:	ldr	r6, [fp, #12]
   14a84:	ldr	r7, [fp, #8]
   14a88:	cmp	r1, #0
   14a8c:	beq	14ab4 <putc_unlocked@plt+0x3750>
   14a90:	mov	r5, r1
   14a94:	str	r4, [sp]
   14a98:	str	r3, [sp, #4]
   14a9c:	movw	r2, #28720	; 0x7030
   14aa0:	movt	r2, #1
   14aa4:	mov	r0, r8
   14aa8:	mov	r1, #1
   14aac:	mov	r3, r5
   14ab0:	b	14acc <putc_unlocked@plt+0x3768>
   14ab4:	str	r3, [sp]
   14ab8:	movw	r2, #28732	; 0x703c
   14abc:	movt	r2, #1
   14ac0:	mov	r0, r8
   14ac4:	mov	r1, #1
   14ac8:	mov	r3, r4
   14acc:	bl	1128c <__fprintf_chk@plt>
   14ad0:	movw	r1, #28739	; 0x7043
   14ad4:	movt	r1, #1
   14ad8:	mov	r0, #0
   14adc:	mov	r2, #5
   14ae0:	bl	11130 <dcgettext@plt>
   14ae4:	mov	r3, r0
   14ae8:	movw	r0, #2022	; 0x7e6
   14aec:	str	r0, [sp]
   14af0:	movw	r2, #29457	; 0x7311
   14af4:	movt	r2, #1
   14af8:	mov	r0, r8
   14afc:	mov	r1, #1
   14b00:	bl	1128c <__fprintf_chk@plt>
   14b04:	movw	r4, #28154	; 0x6dfa
   14b08:	movt	r4, #1
   14b0c:	mov	r0, r4
   14b10:	mov	r1, r8
   14b14:	bl	110ac <fputs_unlocked@plt>
   14b18:	movw	r1, #28743	; 0x7047
   14b1c:	movt	r1, #1
   14b20:	mov	r0, #0
   14b24:	mov	r2, #5
   14b28:	bl	11130 <dcgettext@plt>
   14b2c:	mov	r2, r0
   14b30:	movw	r3, #28914	; 0x70f2
   14b34:	movt	r3, #1
   14b38:	mov	r0, r8
   14b3c:	mov	r1, #1
   14b40:	bl	1128c <__fprintf_chk@plt>
   14b44:	mov	r0, r4
   14b48:	mov	r1, r8
   14b4c:	bl	110ac <fputs_unlocked@plt>
   14b50:	cmp	r6, #9
   14b54:	bhi	14b90 <putc_unlocked@plt+0x382c>
   14b58:	add	r0, pc, #0
   14b5c:	ldr	pc, [r0, r6, lsl #2]
   14b60:	andeq	r4, r1, r8, lsl #23
   14b64:	muleq	r1, ip, fp
   14b68:	andeq	r4, r1, ip, asr #23
   14b6c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b70:	andeq	r4, r1, ip, lsl ip
   14b74:	andeq	r4, r1, r4, asr #24
   14b78:	andeq	r4, r1, ip, ror #24
   14b7c:	andeq	r4, r1, r4, lsr #25
   14b80:	andeq	r4, r1, r4, asr #26
   14b84:	andeq	r4, r1, ip, ror #25
   14b88:	sub	sp, fp, #24
   14b8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b90:	movw	r1, #29267	; 0x7253
   14b94:	movt	r1, #1
   14b98:	b	14cf4 <putc_unlocked@plt+0x3990>
   14b9c:	movw	r1, #28948	; 0x7114
   14ba0:	movt	r1, #1
   14ba4:	mov	r0, #0
   14ba8:	mov	r2, #5
   14bac:	bl	11130 <dcgettext@plt>
   14bb0:	mov	r2, r0
   14bb4:	ldr	r3, [r7]
   14bb8:	mov	r0, r8
   14bbc:	mov	r1, #1
   14bc0:	sub	sp, fp, #24
   14bc4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14bc8:	b	1128c <__fprintf_chk@plt>
   14bcc:	movw	r1, #28964	; 0x7124
   14bd0:	movt	r1, #1
   14bd4:	mov	r0, #0
   14bd8:	mov	r2, #5
   14bdc:	bl	11130 <dcgettext@plt>
   14be0:	mov	r2, r0
   14be4:	ldr	r3, [r7]
   14be8:	ldr	r0, [r7, #4]
   14bec:	str	r0, [sp]
   14bf0:	b	14ce0 <putc_unlocked@plt+0x397c>
   14bf4:	movw	r1, #28987	; 0x713b
   14bf8:	movt	r1, #1
   14bfc:	mov	r0, #0
   14c00:	mov	r2, #5
   14c04:	bl	11130 <dcgettext@plt>
   14c08:	mov	r2, r0
   14c0c:	ldr	r3, [r7]
   14c10:	ldmib	r7, {r0, r1}
   14c14:	stm	sp, {r0, r1}
   14c18:	b	14ce0 <putc_unlocked@plt+0x397c>
   14c1c:	movw	r1, #29015	; 0x7157
   14c20:	movt	r1, #1
   14c24:	mov	r0, #0
   14c28:	mov	r2, #5
   14c2c:	bl	11130 <dcgettext@plt>
   14c30:	mov	r2, r0
   14c34:	ldr	r3, [r7]
   14c38:	ldmib	r7, {r0, r1, r7}
   14c3c:	stm	sp, {r0, r1, r7}
   14c40:	b	14ce0 <putc_unlocked@plt+0x397c>
   14c44:	movw	r1, #29047	; 0x7177
   14c48:	movt	r1, #1
   14c4c:	mov	r0, #0
   14c50:	mov	r2, #5
   14c54:	bl	11130 <dcgettext@plt>
   14c58:	mov	r2, r0
   14c5c:	ldr	r3, [r7]
   14c60:	ldmib	r7, {r0, r1, r6, r7}
   14c64:	stm	sp, {r0, r1, r6, r7}
   14c68:	b	14ce0 <putc_unlocked@plt+0x397c>
   14c6c:	movw	r1, #29083	; 0x719b
   14c70:	movt	r1, #1
   14c74:	mov	r0, #0
   14c78:	mov	r2, #5
   14c7c:	bl	11130 <dcgettext@plt>
   14c80:	mov	r2, r0
   14c84:	ldr	r3, [r7]
   14c88:	ldmib	r7, {r0, r1, r6}
   14c8c:	ldr	r5, [r7, #16]
   14c90:	ldr	r7, [r7, #20]
   14c94:	stm	sp, {r0, r1, r6}
   14c98:	str	r5, [sp, #12]
   14c9c:	str	r7, [sp, #16]
   14ca0:	b	14ce0 <putc_unlocked@plt+0x397c>
   14ca4:	movw	r1, #29123	; 0x71c3
   14ca8:	movt	r1, #1
   14cac:	mov	r0, #0
   14cb0:	mov	r2, #5
   14cb4:	bl	11130 <dcgettext@plt>
   14cb8:	mov	r2, r0
   14cbc:	ldr	r3, [r7]
   14cc0:	ldmib	r7, {r0, r1, r6}
   14cc4:	ldr	r5, [r7, #16]
   14cc8:	ldr	r4, [r7, #20]
   14ccc:	ldr	r7, [r7, #24]
   14cd0:	stm	sp, {r0, r1, r6}
   14cd4:	str	r5, [sp, #12]
   14cd8:	str	r4, [sp, #16]
   14cdc:	str	r7, [sp, #20]
   14ce0:	mov	r0, r8
   14ce4:	mov	r1, #1
   14ce8:	b	14d94 <putc_unlocked@plt+0x3a30>
   14cec:	movw	r1, #29215	; 0x721f
   14cf0:	movt	r1, #1
   14cf4:	mov	r0, #0
   14cf8:	mov	r2, #5
   14cfc:	bl	11130 <dcgettext@plt>
   14d00:	mov	ip, r0
   14d04:	ldr	r3, [r7]
   14d08:	ldr	r0, [r7, #4]
   14d0c:	ldr	r1, [r7, #8]
   14d10:	ldr	r6, [r7, #12]
   14d14:	ldr	r5, [r7, #16]
   14d18:	ldr	r4, [r7, #20]
   14d1c:	ldr	r2, [r7, #24]
   14d20:	ldr	lr, [r7, #28]
   14d24:	ldr	r7, [r7, #32]
   14d28:	stm	sp, {r0, r1, r6}
   14d2c:	str	r5, [sp, #12]
   14d30:	str	r4, [sp, #16]
   14d34:	str	r2, [sp, #20]
   14d38:	str	lr, [sp, #24]
   14d3c:	str	r7, [sp, #28]
   14d40:	b	14d88 <putc_unlocked@plt+0x3a24>
   14d44:	movw	r1, #29167	; 0x71ef
   14d48:	movt	r1, #1
   14d4c:	mov	r0, #0
   14d50:	mov	r2, #5
   14d54:	bl	11130 <dcgettext@plt>
   14d58:	mov	ip, r0
   14d5c:	ldr	r3, [r7]
   14d60:	ldmib	r7, {r0, r1, r6}
   14d64:	ldr	r5, [r7, #16]
   14d68:	ldr	r4, [r7, #20]
   14d6c:	ldr	r2, [r7, #24]
   14d70:	ldr	r7, [r7, #28]
   14d74:	stm	sp, {r0, r1, r6}
   14d78:	str	r5, [sp, #12]
   14d7c:	str	r4, [sp, #16]
   14d80:	str	r2, [sp, #20]
   14d84:	str	r7, [sp, #24]
   14d88:	mov	r0, r8
   14d8c:	mov	r1, #1
   14d90:	mov	r2, ip
   14d94:	bl	1128c <__fprintf_chk@plt>
   14d98:	sub	sp, fp, #24
   14d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14da0:	push	{r4, sl, fp, lr}
   14da4:	add	fp, sp, #8
   14da8:	sub	sp, sp, #8
   14dac:	mov	lr, #0
   14db0:	ldr	ip, [fp, #8]
   14db4:	ldr	r4, [ip, lr, lsl #2]
   14db8:	add	lr, lr, #1
   14dbc:	cmp	r4, #0
   14dc0:	bne	14db4 <putc_unlocked@plt+0x3a50>
   14dc4:	sub	r4, lr, #1
   14dc8:	str	ip, [sp]
   14dcc:	str	r4, [sp, #4]
   14dd0:	bl	14a6c <putc_unlocked@plt+0x3708>
   14dd4:	sub	sp, fp, #8
   14dd8:	pop	{r4, sl, fp, pc}
   14ddc:	push	{r4, r5, fp, lr}
   14de0:	add	fp, sp, #8
   14de4:	sub	sp, sp, #48	; 0x30
   14de8:	mov	ip, #0
   14dec:	ldr	r4, [fp, #8]
   14df0:	add	lr, sp, #8
   14df4:	ldr	r5, [r4]
   14df8:	str	r5, [lr, ip, lsl #2]
   14dfc:	cmp	r5, #0
   14e00:	beq	14e14 <putc_unlocked@plt+0x3ab0>
   14e04:	add	ip, ip, #1
   14e08:	add	r4, r4, #4
   14e0c:	cmp	ip, #10
   14e10:	bcc	14df4 <putc_unlocked@plt+0x3a90>
   14e14:	str	lr, [sp]
   14e18:	str	ip, [sp, #4]
   14e1c:	bl	14a6c <putc_unlocked@plt+0x3708>
   14e20:	sub	sp, fp, #8
   14e24:	pop	{r4, r5, fp, pc}
   14e28:	push	{fp, lr}
   14e2c:	mov	fp, sp
   14e30:	sub	sp, sp, #8
   14e34:	add	ip, fp, #8
   14e38:	str	ip, [sp, #4]
   14e3c:	str	ip, [sp]
   14e40:	bl	14ddc <putc_unlocked@plt+0x3a78>
   14e44:	mov	sp, fp
   14e48:	pop	{fp, pc}
   14e4c:	push	{fp, lr}
   14e50:	mov	fp, sp
   14e54:	movw	r0, #33148	; 0x817c
   14e58:	movt	r0, #2
   14e5c:	ldr	r1, [r0]
   14e60:	movw	r0, #28154	; 0x6dfa
   14e64:	movt	r0, #1
   14e68:	bl	110ac <fputs_unlocked@plt>
   14e6c:	movw	r1, #29327	; 0x728f
   14e70:	movt	r1, #1
   14e74:	mov	r0, #0
   14e78:	mov	r2, #5
   14e7c:	bl	11130 <dcgettext@plt>
   14e80:	mov	r1, r0
   14e84:	movw	r2, #29347	; 0x72a3
   14e88:	movt	r2, #1
   14e8c:	mov	r0, #1
   14e90:	bl	11268 <__printf_chk@plt>
   14e94:	movw	r1, #29369	; 0x72b9
   14e98:	movt	r1, #1
   14e9c:	mov	r0, #0
   14ea0:	mov	r2, #5
   14ea4:	bl	11130 <dcgettext@plt>
   14ea8:	mov	r1, r0
   14eac:	movw	r2, #27726	; 0x6c4e
   14eb0:	movt	r2, #1
   14eb4:	movw	r3, #27963	; 0x6d3b
   14eb8:	movt	r3, #1
   14ebc:	mov	r0, #1
   14ec0:	bl	11268 <__printf_chk@plt>
   14ec4:	movw	r1, #29389	; 0x72cd
   14ec8:	movt	r1, #1
   14ecc:	mov	r0, #0
   14ed0:	mov	r2, #5
   14ed4:	bl	11130 <dcgettext@plt>
   14ed8:	mov	r1, r0
   14edc:	movw	r2, #29428	; 0x72f4
   14ee0:	movt	r2, #1
   14ee4:	mov	r0, #1
   14ee8:	pop	{fp, lr}
   14eec:	b	11268 <__printf_chk@plt>
   14ef0:	b	14ef4 <putc_unlocked@plt+0x3b90>
   14ef4:	push	{r4, r5, r6, sl, fp, lr}
   14ef8:	add	fp, sp, #16
   14efc:	mov	r4, r2
   14f00:	mov	r5, r1
   14f04:	mov	r6, r0
   14f08:	bl	1637c <putc_unlocked@plt+0x5018>
   14f0c:	cmp	r0, #0
   14f10:	popne	{r4, r5, r6, sl, fp, pc}
   14f14:	cmp	r6, #0
   14f18:	beq	14f2c <putc_unlocked@plt+0x3bc8>
   14f1c:	cmp	r5, #0
   14f20:	cmpne	r4, #0
   14f24:	bne	14f2c <putc_unlocked@plt+0x3bc8>
   14f28:	pop	{r4, r5, r6, sl, fp, pc}
   14f2c:	bl	152e0 <putc_unlocked@plt+0x3f7c>
   14f30:	push	{fp, lr}
   14f34:	mov	fp, sp
   14f38:	bl	158ac <putc_unlocked@plt+0x4548>
   14f3c:	bl	14f44 <putc_unlocked@plt+0x3be0>
   14f40:	pop	{fp, pc}
   14f44:	cmp	r0, #0
   14f48:	bxne	lr
   14f4c:	push	{fp, lr}
   14f50:	mov	fp, sp
   14f54:	bl	152e0 <putc_unlocked@plt+0x3f7c>
   14f58:	push	{fp, lr}
   14f5c:	mov	fp, sp
   14f60:	bl	162b0 <putc_unlocked@plt+0x4f4c>
   14f64:	bl	14f44 <putc_unlocked@plt+0x3be0>
   14f68:	pop	{fp, pc}
   14f6c:	b	14f30 <putc_unlocked@plt+0x3bcc>
   14f70:	push	{r4, r5, fp, lr}
   14f74:	add	fp, sp, #8
   14f78:	mov	r4, r1
   14f7c:	mov	r5, r0
   14f80:	bl	158dc <putc_unlocked@plt+0x4578>
   14f84:	cmp	r0, #0
   14f88:	popne	{r4, r5, fp, pc}
   14f8c:	cmp	r5, #0
   14f90:	beq	14fa0 <putc_unlocked@plt+0x3c3c>
   14f94:	cmp	r4, #0
   14f98:	bne	14fa0 <putc_unlocked@plt+0x3c3c>
   14f9c:	pop	{r4, r5, fp, pc}
   14fa0:	bl	152e0 <putc_unlocked@plt+0x3f7c>
   14fa4:	push	{fp, lr}
   14fa8:	mov	fp, sp
   14fac:	bl	162b4 <putc_unlocked@plt+0x4f50>
   14fb0:	bl	14f44 <putc_unlocked@plt+0x3be0>
   14fb4:	pop	{fp, pc}
   14fb8:	push	{fp, lr}
   14fbc:	mov	fp, sp
   14fc0:	bl	162c4 <putc_unlocked@plt+0x4f60>
   14fc4:	bl	14f44 <putc_unlocked@plt+0x3be0>
   14fc8:	pop	{fp, pc}
   14fcc:	push	{fp, lr}
   14fd0:	mov	fp, sp
   14fd4:	mov	r2, r1
   14fd8:	mov	r1, r0
   14fdc:	mov	r0, #0
   14fe0:	bl	14ef4 <putc_unlocked@plt+0x3b90>
   14fe4:	pop	{fp, pc}
   14fe8:	mov	r2, r1
   14fec:	mov	r1, r0
   14ff0:	mov	r0, #0
   14ff4:	b	14fb8 <putc_unlocked@plt+0x3c54>
   14ff8:	mov	r2, #1
   14ffc:	b	15000 <putc_unlocked@plt+0x3c9c>
   15000:	push	{r4, r5, fp, lr}
   15004:	add	fp, sp, #8
   15008:	mov	r4, r1
   1500c:	ldr	r5, [r1]
   15010:	cmp	r0, #0
   15014:	beq	1502c <putc_unlocked@plt+0x3cc8>
   15018:	mov	r1, #1
   1501c:	add	r1, r1, r5, lsr #1
   15020:	adds	r5, r5, r1
   15024:	bcc	15044 <putc_unlocked@plt+0x3ce0>
   15028:	bl	152e0 <putc_unlocked@plt+0x3f7c>
   1502c:	cmp	r5, #0
   15030:	bne	15044 <putc_unlocked@plt+0x3ce0>
   15034:	mov	r1, #64	; 0x40
   15038:	udiv	r5, r1, r2
   1503c:	cmp	r2, #64	; 0x40
   15040:	addhi	r5, r5, #1
   15044:	mov	r1, r5
   15048:	bl	14ef4 <putc_unlocked@plt+0x3b90>
   1504c:	str	r5, [r4]
   15050:	pop	{r4, r5, fp, pc}
   15054:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15058:	add	fp, sp, #24
   1505c:	mov	r8, r1
   15060:	ldr	r6, [r1]
   15064:	add	r1, r6, r6, asr #1
   15068:	cmp	r1, r6
   1506c:	mvnvs	r1, #-2147483648	; 0x80000000
   15070:	cmp	r1, r3
   15074:	mov	r5, r1
   15078:	movgt	r5, r3
   1507c:	cmn	r3, #1
   15080:	movle	r5, r1
   15084:	ldr	r4, [fp, #8]
   15088:	cmn	r4, #1
   1508c:	ble	150b4 <putc_unlocked@plt+0x3d50>
   15090:	cmp	r4, #0
   15094:	beq	15108 <putc_unlocked@plt+0x3da4>
   15098:	cmn	r5, #1
   1509c:	ble	150dc <putc_unlocked@plt+0x3d78>
   150a0:	mvn	r7, #-2147483648	; 0x80000000
   150a4:	udiv	r1, r7, r4
   150a8:	cmp	r1, r5
   150ac:	bge	15108 <putc_unlocked@plt+0x3da4>
   150b0:	b	15118 <putc_unlocked@plt+0x3db4>
   150b4:	cmn	r5, #1
   150b8:	ble	150f8 <putc_unlocked@plt+0x3d94>
   150bc:	cmn	r4, #1
   150c0:	beq	15108 <putc_unlocked@plt+0x3da4>
   150c4:	mov	r1, #-2147483648	; 0x80000000
   150c8:	sdiv	r1, r1, r4
   150cc:	mvn	r7, #-2147483648	; 0x80000000
   150d0:	cmp	r1, r5
   150d4:	bge	15108 <putc_unlocked@plt+0x3da4>
   150d8:	b	15118 <putc_unlocked@plt+0x3db4>
   150dc:	beq	15108 <putc_unlocked@plt+0x3da4>
   150e0:	mov	r1, #-2147483648	; 0x80000000
   150e4:	sdiv	r1, r1, r5
   150e8:	mvn	r7, #-2147483648	; 0x80000000
   150ec:	cmp	r1, r4
   150f0:	bge	15108 <putc_unlocked@plt+0x3da4>
   150f4:	b	15118 <putc_unlocked@plt+0x3db4>
   150f8:	mvn	r7, #-2147483648	; 0x80000000
   150fc:	sdiv	r1, r7, r4
   15100:	cmp	r5, r1
   15104:	blt	15118 <putc_unlocked@plt+0x3db4>
   15108:	mul	r1, r5, r4
   1510c:	mov	r7, #64	; 0x40
   15110:	cmp	r1, #63	; 0x3f
   15114:	bgt	15120 <putc_unlocked@plt+0x3dbc>
   15118:	sdiv	r5, r7, r4
   1511c:	mul	r1, r5, r4
   15120:	cmp	r0, #0
   15124:	moveq	r7, #0
   15128:	streq	r7, [r8]
   1512c:	sub	r7, r5, r6
   15130:	cmp	r7, r2
   15134:	bge	151e0 <putc_unlocked@plt+0x3e7c>
   15138:	add	r5, r6, r2
   1513c:	mov	r1, #0
   15140:	cmp	r5, r3
   15144:	mov	r2, #0
   15148:	movwgt	r2, #1
   1514c:	cmn	r3, #1
   15150:	movwgt	r1, #1
   15154:	cmp	r5, r6
   15158:	bvs	151c8 <putc_unlocked@plt+0x3e64>
   1515c:	ands	r1, r1, r2
   15160:	bne	151c8 <putc_unlocked@plt+0x3e64>
   15164:	cmn	r4, #1
   15168:	ble	15190 <putc_unlocked@plt+0x3e2c>
   1516c:	cmp	r4, #0
   15170:	beq	151dc <putc_unlocked@plt+0x3e78>
   15174:	cmn	r5, #1
   15178:	ble	151b4 <putc_unlocked@plt+0x3e50>
   1517c:	mvn	r1, #-2147483648	; 0x80000000
   15180:	udiv	r1, r1, r4
   15184:	cmp	r1, r5
   15188:	bge	151dc <putc_unlocked@plt+0x3e78>
   1518c:	b	151c8 <putc_unlocked@plt+0x3e64>
   15190:	cmn	r5, #1
   15194:	ble	151cc <putc_unlocked@plt+0x3e68>
   15198:	cmn	r4, #1
   1519c:	beq	151dc <putc_unlocked@plt+0x3e78>
   151a0:	mov	r1, #-2147483648	; 0x80000000
   151a4:	sdiv	r1, r1, r4
   151a8:	cmp	r1, r5
   151ac:	bge	151dc <putc_unlocked@plt+0x3e78>
   151b0:	b	151c8 <putc_unlocked@plt+0x3e64>
   151b4:	beq	151dc <putc_unlocked@plt+0x3e78>
   151b8:	mov	r1, #-2147483648	; 0x80000000
   151bc:	sdiv	r1, r1, r5
   151c0:	cmp	r1, r4
   151c4:	bge	151dc <putc_unlocked@plt+0x3e78>
   151c8:	bl	152e0 <putc_unlocked@plt+0x3f7c>
   151cc:	mvn	r1, #-2147483648	; 0x80000000
   151d0:	sdiv	r1, r1, r4
   151d4:	cmp	r5, r1
   151d8:	blt	151c8 <putc_unlocked@plt+0x3e64>
   151dc:	mul	r1, r5, r4
   151e0:	bl	14f70 <putc_unlocked@plt+0x3c0c>
   151e4:	str	r5, [r8]
   151e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   151ec:	mov	r1, #1
   151f0:	b	151f4 <putc_unlocked@plt+0x3e90>
   151f4:	push	{fp, lr}
   151f8:	mov	fp, sp
   151fc:	bl	15858 <putc_unlocked@plt+0x44f4>
   15200:	bl	14f44 <putc_unlocked@plt+0x3be0>
   15204:	pop	{fp, pc}
   15208:	mov	r1, #1
   1520c:	b	15210 <putc_unlocked@plt+0x3eac>
   15210:	push	{fp, lr}
   15214:	mov	fp, sp
   15218:	bl	162c0 <putc_unlocked@plt+0x4f5c>
   1521c:	bl	14f44 <putc_unlocked@plt+0x3be0>
   15220:	pop	{fp, pc}
   15224:	push	{r4, r5, r6, sl, fp, lr}
   15228:	add	fp, sp, #16
   1522c:	mov	r4, r1
   15230:	mov	r5, r0
   15234:	mov	r0, r1
   15238:	bl	14f30 <putc_unlocked@plt+0x3bcc>
   1523c:	mov	r6, r0
   15240:	mov	r1, r5
   15244:	mov	r2, r4
   15248:	bl	1110c <memcpy@plt>
   1524c:	mov	r0, r6
   15250:	pop	{r4, r5, r6, sl, fp, pc}
   15254:	push	{r4, r5, r6, sl, fp, lr}
   15258:	add	fp, sp, #16
   1525c:	mov	r4, r1
   15260:	mov	r5, r0
   15264:	mov	r0, r1
   15268:	bl	14f58 <putc_unlocked@plt+0x3bf4>
   1526c:	mov	r6, r0
   15270:	mov	r1, r5
   15274:	mov	r2, r4
   15278:	bl	1110c <memcpy@plt>
   1527c:	mov	r0, r6
   15280:	pop	{r4, r5, r6, sl, fp, pc}
   15284:	push	{r4, r5, r6, sl, fp, lr}
   15288:	add	fp, sp, #16
   1528c:	mov	r4, r1
   15290:	mov	r5, r0
   15294:	add	r0, r1, #1
   15298:	bl	14f58 <putc_unlocked@plt+0x3bf4>
   1529c:	mov	r6, r0
   152a0:	mov	r0, #0
   152a4:	strb	r0, [r6, r4]
   152a8:	mov	r0, r6
   152ac:	mov	r1, r5
   152b0:	mov	r2, r4
   152b4:	bl	1110c <memcpy@plt>
   152b8:	mov	r0, r6
   152bc:	pop	{r4, r5, r6, sl, fp, pc}
   152c0:	push	{r4, sl, fp, lr}
   152c4:	add	fp, sp, #8
   152c8:	mov	r4, r0
   152cc:	bl	11214 <strlen@plt>
   152d0:	add	r1, r0, #1
   152d4:	mov	r0, r4
   152d8:	pop	{r4, sl, fp, lr}
   152dc:	b	15224 <putc_unlocked@plt+0x3ec0>
   152e0:	push	{fp, lr}
   152e4:	mov	fp, sp
   152e8:	movw	r0, #33044	; 0x8114
   152ec:	movt	r0, #2
   152f0:	ldr	r4, [r0]
   152f4:	movw	r1, #29504	; 0x7340
   152f8:	movt	r1, #1
   152fc:	mov	r0, #0
   15300:	mov	r2, #5
   15304:	bl	11130 <dcgettext@plt>
   15308:	mov	r3, r0
   1530c:	movw	r2, #29741	; 0x742d
   15310:	movt	r2, #1
   15314:	mov	r0, r4
   15318:	mov	r1, #0
   1531c:	bl	111a8 <error@plt>
   15320:	bl	11328 <abort@plt>
   15324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15328:	add	fp, sp, #28
   1532c:	sub	sp, sp, #20
   15330:	cmp	r2, #37	; 0x25
   15334:	bcs	15764 <putc_unlocked@plt+0x4400>
   15338:	mov	r5, r2
   1533c:	mov	r6, r1
   15340:	mov	r4, r0
   15344:	str	r3, [sp, #4]
   15348:	ldr	sl, [fp, #8]
   1534c:	bl	1122c <__errno_location@plt>
   15350:	mov	r7, r0
   15354:	mov	r0, #0
   15358:	str	r0, [r7]
   1535c:	bl	111fc <__ctype_b_loc@plt>
   15360:	ldr	r1, [r0]
   15364:	mov	r2, r4
   15368:	ldrb	r0, [r2], #1
   1536c:	add	r3, r1, r0, lsl #1
   15370:	ldrb	r3, [r3, #1]
   15374:	tst	r3, #32
   15378:	bne	15368 <putc_unlocked@plt+0x4004>
   1537c:	add	r9, sp, #16
   15380:	cmp	r6, #0
   15384:	movne	r9, r6
   15388:	mov	r8, #4
   1538c:	cmp	r0, #45	; 0x2d
   15390:	beq	15758 <putc_unlocked@plt+0x43f4>
   15394:	mov	r0, r4
   15398:	mov	r1, r9
   1539c:	mov	r2, r5
   153a0:	bl	11280 <strtoumax@plt>
   153a4:	str	r1, [sp, #12]
   153a8:	str	r0, [sp, #8]
   153ac:	ldr	r6, [r9]
   153b0:	cmp	r6, r4
   153b4:	beq	153dc <putc_unlocked@plt+0x4078>
   153b8:	ldr	r0, [r7]
   153bc:	cmp	r0, #0
   153c0:	beq	15410 <putc_unlocked@plt+0x40ac>
   153c4:	cmp	r0, #34	; 0x22
   153c8:	bne	15758 <putc_unlocked@plt+0x43f4>
   153cc:	mov	r8, #1
   153d0:	cmp	sl, #0
   153d4:	bne	1541c <putc_unlocked@plt+0x40b8>
   153d8:	b	15748 <putc_unlocked@plt+0x43e4>
   153dc:	cmp	sl, #0
   153e0:	ldrbne	r1, [r6]
   153e4:	cmpne	r1, #0
   153e8:	beq	15758 <putc_unlocked@plt+0x43f4>
   153ec:	mov	r0, sl
   153f0:	bl	11220 <strchr@plt>
   153f4:	cmp	r0, #0
   153f8:	beq	15758 <putc_unlocked@plt+0x43f4>
   153fc:	mov	r8, #0
   15400:	str	r8, [sp, #12]
   15404:	mov	r0, #1
   15408:	str	r0, [sp, #8]
   1540c:	b	1541c <putc_unlocked@plt+0x40b8>
   15410:	mov	r8, r0
   15414:	cmp	sl, #0
   15418:	beq	15748 <putc_unlocked@plt+0x43e4>
   1541c:	ldrb	r4, [r6]
   15420:	cmp	r4, #0
   15424:	beq	15748 <putc_unlocked@plt+0x43e4>
   15428:	mov	r0, sl
   1542c:	mov	r1, r4
   15430:	bl	11220 <strchr@plt>
   15434:	cmp	r0, #0
   15438:	beq	15648 <putc_unlocked@plt+0x42e4>
   1543c:	sub	r0, r4, #69	; 0x45
   15440:	mov	r7, #1
   15444:	mov	r5, #1024	; 0x400
   15448:	cmp	r0, #47	; 0x2f
   1544c:	bhi	15544 <putc_unlocked@plt+0x41e0>
   15450:	add	r1, pc, #0
   15454:	ldr	pc, [r1, r0, lsl #2]
   15458:	andeq	r5, r1, r8, lsl r5
   1545c:	andeq	r5, r1, r4, asr #10
   15460:	andeq	r5, r1, r8, lsl r5
   15464:	andeq	r5, r1, r4, asr #10
   15468:	andeq	r5, r1, r4, asr #10
   1546c:	andeq	r5, r1, r4, asr #10
   15470:	andeq	r5, r1, r8, lsl r5
   15474:	andeq	r5, r1, r4, asr #10
   15478:	andeq	r5, r1, r8, lsl r5
   1547c:	andeq	r5, r1, r4, asr #10
   15480:	andeq	r5, r1, r4, asr #10
   15484:	andeq	r5, r1, r8, lsl r5
   15488:	andeq	r5, r1, r4, asr #10
   1548c:	andeq	r5, r1, r4, asr #10
   15490:	andeq	r5, r1, r4, asr #10
   15494:	andeq	r5, r1, r8, lsl r5
   15498:	andeq	r5, r1, r4, asr #10
   1549c:	andeq	r5, r1, r4, asr #10
   154a0:	andeq	r5, r1, r4, asr #10
   154a4:	andeq	r5, r1, r4, asr #10
   154a8:	andeq	r5, r1, r8, lsl r5
   154ac:	andeq	r5, r1, r8, lsl r5
   154b0:	andeq	r5, r1, r4, asr #10
   154b4:	andeq	r5, r1, r4, asr #10
   154b8:	andeq	r5, r1, r4, asr #10
   154bc:	andeq	r5, r1, r4, asr #10
   154c0:	andeq	r5, r1, r4, asr #10
   154c4:	andeq	r5, r1, r4, asr #10
   154c8:	andeq	r5, r1, r4, asr #10
   154cc:	andeq	r5, r1, r4, asr #10
   154d0:	andeq	r5, r1, r4, asr #10
   154d4:	andeq	r5, r1, r4, asr #10
   154d8:	andeq	r5, r1, r4, asr #10
   154dc:	andeq	r5, r1, r4, asr #10
   154e0:	andeq	r5, r1, r8, lsl r5
   154e4:	andeq	r5, r1, r4, asr #10
   154e8:	andeq	r5, r1, r4, asr #10
   154ec:	andeq	r5, r1, r4, asr #10
   154f0:	andeq	r5, r1, r8, lsl r5
   154f4:	andeq	r5, r1, r4, asr #10
   154f8:	andeq	r5, r1, r8, lsl r5
   154fc:	andeq	r5, r1, r4, asr #10
   15500:	andeq	r5, r1, r4, asr #10
   15504:	andeq	r5, r1, r4, asr #10
   15508:	andeq	r5, r1, r4, asr #10
   1550c:	andeq	r5, r1, r4, asr #10
   15510:	andeq	r5, r1, r4, asr #10
   15514:	andeq	r5, r1, r8, lsl r5
   15518:	mov	r0, sl
   1551c:	mov	r1, #48	; 0x30
   15520:	bl	11220 <strchr@plt>
   15524:	cmp	r0, #0
   15528:	beq	15544 <putc_unlocked@plt+0x41e0>
   1552c:	ldrb	r0, [r6, #1]
   15530:	cmp	r0, #66	; 0x42
   15534:	cmpne	r0, #68	; 0x44
   15538:	bne	15660 <putc_unlocked@plt+0x42fc>
   1553c:	mov	r7, #2
   15540:	mov	r5, #1000	; 0x3e8
   15544:	sub	r1, r4, #66	; 0x42
   15548:	cmp	r1, #53	; 0x35
   1554c:	bhi	15648 <putc_unlocked@plt+0x42e4>
   15550:	mov	r0, #0
   15554:	add	r2, pc, #0
   15558:	ldr	pc, [r2, r1, lsl #2]
   1555c:	andeq	r5, r1, ip, asr #13
   15560:	andeq	r5, r1, r8, asr #12
   15564:	andeq	r5, r1, r8, asr #12
   15568:	ldrdeq	r5, [r1], -r8
   1556c:	andeq	r5, r1, r8, asr #12
   15570:	andeq	r5, r1, r4, lsr r6
   15574:	andeq	r5, r1, r8, asr #12
   15578:	andeq	r5, r1, r8, asr #12
   1557c:	andeq	r5, r1, r8, asr #12
   15580:	andeq	r5, r1, ip, ror r6
   15584:	andeq	r5, r1, r8, asr #12
   15588:	muleq	r1, r0, r6
   1558c:	andeq	r5, r1, r8, asr #12
   15590:	andeq	r5, r1, r8, asr #12
   15594:	andeq	r5, r1, ip, ror #13
   15598:	andeq	r5, r1, r8, asr #12
   1559c:	andeq	r5, r1, r8, asr #12
   155a0:	andeq	r5, r1, r8, asr #12
   155a4:	andeq	r5, r1, r4, lsr #13
   155a8:	andeq	r5, r1, r8, asr #12
   155ac:	andeq	r5, r1, r8, asr #12
   155b0:	andeq	r5, r1, r8, asr #12
   155b4:	andeq	r5, r1, r8, asr #12
   155b8:	andeq	r5, r1, r0, lsl #14
   155bc:			; <UNDEFINED> instruction: 0x000156b8
   155c0:	andeq	r5, r1, r8, asr #12
   155c4:	andeq	r5, r1, r8, asr #12
   155c8:	andeq	r5, r1, r8, asr #12
   155cc:	andeq	r5, r1, r8, asr #12
   155d0:	andeq	r5, r1, r8, asr #12
   155d4:	andeq	r5, r1, r8, asr #12
   155d8:	andeq	r5, r1, r8, asr #12
   155dc:	andeq	r5, r1, r4, lsl r7
   155e0:	andeq	r5, r1, ip, lsr #14
   155e4:	andeq	r5, r1, r8, asr #12
   155e8:	andeq	r5, r1, r8, asr #12
   155ec:	andeq	r5, r1, r8, asr #12
   155f0:	andeq	r5, r1, r4, lsr r6
   155f4:	andeq	r5, r1, r8, asr #12
   155f8:	andeq	r5, r1, r8, asr #12
   155fc:	andeq	r5, r1, r8, asr #12
   15600:	andeq	r5, r1, ip, ror r6
   15604:	andeq	r5, r1, r8, asr #12
   15608:	muleq	r1, r0, r6
   1560c:	andeq	r5, r1, r8, asr #12
   15610:	andeq	r5, r1, r8, asr #12
   15614:	andeq	r5, r1, r8, asr #12
   15618:	andeq	r5, r1, r8, asr #12
   1561c:	andeq	r5, r1, r8, asr #12
   15620:	andeq	r5, r1, r8, asr #12
   15624:	andeq	r5, r1, r4, lsr #13
   15628:	andeq	r5, r1, r8, asr #12
   1562c:	andeq	r5, r1, r8, asr #12
   15630:	andeq	r5, r1, r0, lsr #14
   15634:	add	r0, sp, #8
   15638:	mov	r1, r5
   1563c:	mov	r2, #3
   15640:	bl	15810 <putc_unlocked@plt+0x44ac>
   15644:	b	1572c <putc_unlocked@plt+0x43c8>
   15648:	ldr	r0, [sp, #8]
   1564c:	ldr	r1, [sp, #12]
   15650:	ldr	r2, [sp, #4]
   15654:	strd	r0, [r2]
   15658:	orr	r8, r8, #2
   1565c:	b	15758 <putc_unlocked@plt+0x43f4>
   15660:	cmp	r0, #105	; 0x69
   15664:	bne	15544 <putc_unlocked@plt+0x41e0>
   15668:	ldrb	r0, [r6, #2]
   1566c:	mov	r7, #1
   15670:	cmp	r0, #66	; 0x42
   15674:	movweq	r7, #3
   15678:	b	15544 <putc_unlocked@plt+0x41e0>
   1567c:	add	r0, sp, #8
   15680:	mov	r1, r5
   15684:	mov	r2, #1
   15688:	bl	15810 <putc_unlocked@plt+0x44ac>
   1568c:	b	1572c <putc_unlocked@plt+0x43c8>
   15690:	add	r0, sp, #8
   15694:	mov	r1, r5
   15698:	mov	r2, #2
   1569c:	bl	15810 <putc_unlocked@plt+0x44ac>
   156a0:	b	1572c <putc_unlocked@plt+0x43c8>
   156a4:	add	r0, sp, #8
   156a8:	mov	r1, r5
   156ac:	mov	r2, #4
   156b0:	bl	15810 <putc_unlocked@plt+0x44ac>
   156b4:	b	1572c <putc_unlocked@plt+0x43c8>
   156b8:	add	r0, sp, #8
   156bc:	mov	r1, r5
   156c0:	mov	r2, #7
   156c4:	bl	15810 <putc_unlocked@plt+0x44ac>
   156c8:	b	1572c <putc_unlocked@plt+0x43c8>
   156cc:	add	r0, sp, #8
   156d0:	mov	r1, #1024	; 0x400
   156d4:	b	15728 <putc_unlocked@plt+0x43c4>
   156d8:	add	r0, sp, #8
   156dc:	mov	r1, r5
   156e0:	mov	r2, #6
   156e4:	bl	15810 <putc_unlocked@plt+0x44ac>
   156e8:	b	1572c <putc_unlocked@plt+0x43c8>
   156ec:	add	r0, sp, #8
   156f0:	mov	r1, r5
   156f4:	mov	r2, #5
   156f8:	bl	15810 <putc_unlocked@plt+0x44ac>
   156fc:	b	1572c <putc_unlocked@plt+0x43c8>
   15700:	add	r0, sp, #8
   15704:	mov	r1, r5
   15708:	mov	r2, #8
   1570c:	bl	15810 <putc_unlocked@plt+0x44ac>
   15710:	b	1572c <putc_unlocked@plt+0x43c8>
   15714:	add	r0, sp, #8
   15718:	mov	r1, #512	; 0x200
   1571c:	b	15728 <putc_unlocked@plt+0x43c4>
   15720:	add	r0, sp, #8
   15724:	mov	r1, #2
   15728:	bl	15784 <putc_unlocked@plt+0x4420>
   1572c:	ldr	r1, [r9]
   15730:	add	r2, r1, r7
   15734:	str	r2, [r9]
   15738:	ldrb	r1, [r1, r7]
   1573c:	orr	r8, r0, r8
   15740:	cmp	r1, #0
   15744:	orrne	r8, r8, #2
   15748:	ldr	r0, [sp, #8]
   1574c:	ldr	r1, [sp, #12]
   15750:	ldr	r2, [sp, #4]
   15754:	strd	r0, [r2]
   15758:	mov	r0, r8
   1575c:	sub	sp, fp, #28
   15760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15764:	movw	r0, #29521	; 0x7351
   15768:	movt	r0, #1
   1576c:	movw	r1, #29559	; 0x7377
   15770:	movt	r1, #1
   15774:	movw	r3, #29575	; 0x7387
   15778:	movt	r3, #1
   1577c:	mov	r2, #85	; 0x55
   15780:	bl	11358 <__assert_fail@plt>
   15784:	push	{r4, r5, r6, r7, fp, lr}
   15788:	add	fp, sp, #16
   1578c:	mov	r5, r1
   15790:	mov	r4, r0
   15794:	cmn	r1, #1
   15798:	ble	157d0 <putc_unlocked@plt+0x446c>
   1579c:	cmp	r5, #0
   157a0:	beq	157f0 <putc_unlocked@plt+0x448c>
   157a4:	asr	r3, r5, #31
   157a8:	mvn	r6, #0
   157ac:	mvn	r0, #0
   157b0:	mvn	r1, #0
   157b4:	mov	r2, r5
   157b8:	bl	16884 <putc_unlocked@plt+0x5520>
   157bc:	ldrd	r2, [r4]
   157c0:	subs	r0, r0, r2
   157c4:	sbcs	r0, r1, r3
   157c8:	bcc	157e0 <putc_unlocked@plt+0x447c>
   157cc:	b	157f0 <putc_unlocked@plt+0x448c>
   157d0:	ldrd	r0, [r4]
   157d4:	orrs	r0, r0, r1
   157d8:	beq	157f0 <putc_unlocked@plt+0x448c>
   157dc:	mvn	r6, #0
   157e0:	mov	r0, #1
   157e4:	mvn	r7, #0
   157e8:	strd	r6, [r4]
   157ec:	pop	{r4, r5, r6, r7, fp, pc}
   157f0:	ldrd	r0, [r4]
   157f4:	umull	r6, r2, r0, r5
   157f8:	asr	r3, r5, #31
   157fc:	mla	r0, r0, r3, r2
   15800:	mla	r7, r1, r5, r0
   15804:	mov	r0, #0
   15808:	strd	r6, [r4]
   1580c:	pop	{r4, r5, r6, r7, fp, pc}
   15810:	push	{r4, r5, r6, r7, fp, lr}
   15814:	add	fp, sp, #16
   15818:	cmp	r2, #0
   1581c:	moveq	r6, #0
   15820:	moveq	r0, r6
   15824:	popeq	{r4, r5, r6, r7, fp, pc}
   15828:	mov	r4, r2
   1582c:	mov	r5, r1
   15830:	mov	r7, r0
   15834:	mov	r6, #0
   15838:	mov	r0, r7
   1583c:	mov	r1, r5
   15840:	bl	15784 <putc_unlocked@plt+0x4420>
   15844:	orr	r6, r0, r6
   15848:	subs	r4, r4, #1
   1584c:	bne	15838 <putc_unlocked@plt+0x44d4>
   15850:	mov	r0, r6
   15854:	pop	{r4, r5, r6, r7, fp, pc}
   15858:	clz	r2, r1
   1585c:	lsr	r2, r2, #5
   15860:	clz	r3, r0
   15864:	lsr	r3, r3, #5
   15868:	orrs	r2, r3, r2
   1586c:	movwne	r1, #1
   15870:	movwne	r0, #1
   15874:	cmp	r1, #0
   15878:	beq	158a8 <putc_unlocked@plt+0x4544>
   1587c:	mvn	r2, #-2147483648	; 0x80000000
   15880:	udiv	r2, r2, r1
   15884:	cmp	r2, r0
   15888:	bcs	158a8 <putc_unlocked@plt+0x4544>
   1588c:	push	{fp, lr}
   15890:	mov	fp, sp
   15894:	bl	1122c <__errno_location@plt>
   15898:	mov	r1, #12
   1589c:	str	r1, [r0]
   158a0:	mov	r0, #0
   158a4:	pop	{fp, pc}
   158a8:	b	110a0 <calloc@plt>
   158ac:	cmp	r0, #0
   158b0:	movweq	r0, #1
   158b4:	cmn	r0, #1
   158b8:	ble	158c0 <putc_unlocked@plt+0x455c>
   158bc:	b	111c0 <malloc@plt>
   158c0:	push	{fp, lr}
   158c4:	mov	fp, sp
   158c8:	bl	1122c <__errno_location@plt>
   158cc:	mov	r1, #12
   158d0:	str	r1, [r0]
   158d4:	mov	r0, #0
   158d8:	pop	{fp, pc}
   158dc:	push	{fp, lr}
   158e0:	mov	fp, sp
   158e4:	cmp	r0, #0
   158e8:	beq	15904 <putc_unlocked@plt+0x45a0>
   158ec:	cmp	r1, #0
   158f0:	beq	15910 <putc_unlocked@plt+0x45ac>
   158f4:	cmn	r1, #1
   158f8:	ble	1591c <putc_unlocked@plt+0x45b8>
   158fc:	pop	{fp, lr}
   15900:	b	1113c <realloc@plt>
   15904:	mov	r0, r1
   15908:	pop	{fp, lr}
   1590c:	b	158ac <putc_unlocked@plt+0x4548>
   15910:	bl	12234 <putc_unlocked@plt+0xed0>
   15914:	mov	r0, #0
   15918:	pop	{fp, pc}
   1591c:	bl	1122c <__errno_location@plt>
   15920:	mov	r1, #12
   15924:	str	r1, [r0]
   15928:	mov	r0, #0
   1592c:	pop	{fp, pc}
   15930:	mov	r0, #1
   15934:	b	11848 <putc_unlocked@plt+0x4e4>
   15938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1593c:	add	fp, sp, #28
   15940:	sub	sp, sp, #12
   15944:	mov	r4, r3
   15948:	mov	r6, r2
   1594c:	mov	r5, r1
   15950:	mov	sl, r0
   15954:	bl	11214 <strlen@plt>
   15958:	ldr	r8, [r5]
   1595c:	cmp	r8, #0
   15960:	beq	15a1c <putc_unlocked@plt+0x46b8>
   15964:	mov	r7, r0
   15968:	add	r9, r5, #4
   1596c:	mov	r0, #0
   15970:	str	r0, [sp]
   15974:	mvn	r0, #0
   15978:	str	r0, [sp, #8]
   1597c:	str	r6, [sp, #4]
   15980:	mov	r5, #0
   15984:	mov	r0, r8
   15988:	mov	r1, sl
   1598c:	mov	r2, r7
   15990:	bl	1131c <strncmp@plt>
   15994:	cmp	r0, #0
   15998:	bne	159f0 <putc_unlocked@plt+0x468c>
   1599c:	mov	r0, r8
   159a0:	bl	11214 <strlen@plt>
   159a4:	cmp	r0, r7
   159a8:	beq	15a20 <putc_unlocked@plt+0x46bc>
   159ac:	ldr	r0, [sp, #8]
   159b0:	cmn	r0, #1
   159b4:	beq	159ec <putc_unlocked@plt+0x4688>
   159b8:	ldr	r0, [sp, #4]
   159bc:	cmp	r0, #0
   159c0:	beq	159e0 <putc_unlocked@plt+0x467c>
   159c4:	ldr	r1, [sp, #8]
   159c8:	mla	r0, r1, r4, r0
   159cc:	mov	r1, r6
   159d0:	mov	r2, r4
   159d4:	bl	11124 <memcmp@plt>
   159d8:	cmp	r0, #0
   159dc:	beq	159f0 <putc_unlocked@plt+0x468c>
   159e0:	mov	r0, #1
   159e4:	str	r0, [sp]
   159e8:	b	159f0 <putc_unlocked@plt+0x468c>
   159ec:	str	r5, [sp, #8]
   159f0:	add	r6, r6, r4
   159f4:	ldr	r8, [r9, r5, lsl #2]
   159f8:	add	r5, r5, #1
   159fc:	cmp	r8, #0
   15a00:	bne	15984 <putc_unlocked@plt+0x4620>
   15a04:	ldr	r0, [sp]
   15a08:	tst	r0, #1
   15a0c:	ldr	r0, [sp, #8]
   15a10:	mvnne	r0, #1
   15a14:	sub	sp, fp, #28
   15a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a1c:	mvn	r5, #0
   15a20:	mov	r0, r5
   15a24:	sub	sp, fp, #28
   15a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a2c:	push	{r4, r5, r6, r7, fp, lr}
   15a30:	add	fp, sp, #16
   15a34:	mov	r5, r0
   15a38:	ldr	r0, [r1]
   15a3c:	mvn	r4, #0
   15a40:	cmp	r0, #0
   15a44:	beq	15a74 <putc_unlocked@plt+0x4710>
   15a48:	add	r7, r1, #4
   15a4c:	mov	r6, #0
   15a50:	mov	r1, r5
   15a54:	bl	110c4 <strcmp@plt>
   15a58:	cmp	r0, #0
   15a5c:	moveq	r0, r6
   15a60:	popeq	{r4, r5, r6, r7, fp, pc}
   15a64:	ldr	r0, [r7, r6, lsl #2]
   15a68:	add	r6, r6, #1
   15a6c:	cmp	r0, #0
   15a70:	bne	15a50 <putc_unlocked@plt+0x46ec>
   15a74:	mov	r0, r4
   15a78:	pop	{r4, r5, r6, r7, fp, pc}
   15a7c:	push	{r4, r5, r6, sl, fp, lr}
   15a80:	add	fp, sp, #16
   15a84:	sub	sp, sp, #8
   15a88:	mov	r4, r1
   15a8c:	mov	r5, r0
   15a90:	movw	r0, #29654	; 0x73d6
   15a94:	movt	r0, #1
   15a98:	movw	r1, #29681	; 0x73f1
   15a9c:	movt	r1, #1
   15aa0:	cmn	r2, #1
   15aa4:	moveq	r1, r0
   15aa8:	mov	r0, #0
   15aac:	mov	r2, #5
   15ab0:	bl	11130 <dcgettext@plt>
   15ab4:	mov	r6, r0
   15ab8:	mov	r0, #0
   15abc:	mov	r1, #8
   15ac0:	mov	r2, r4
   15ac4:	bl	143a8 <putc_unlocked@plt+0x3044>
   15ac8:	mov	r4, r0
   15acc:	mov	r0, #1
   15ad0:	mov	r1, r5
   15ad4:	bl	14644 <putc_unlocked@plt+0x32e0>
   15ad8:	str	r0, [sp]
   15adc:	mov	r0, #0
   15ae0:	mov	r1, #0
   15ae4:	mov	r2, r6
   15ae8:	mov	r3, r4
   15aec:	bl	111a8 <error@plt>
   15af0:	sub	sp, fp, #16
   15af4:	pop	{r4, r5, r6, sl, fp, pc}
   15af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15afc:	add	fp, sp, #28
   15b00:	sub	sp, sp, #4
   15b04:	mov	sl, r2
   15b08:	mov	r5, r1
   15b0c:	mov	r7, r0
   15b10:	mov	r8, #0
   15b14:	movw	r1, #29710	; 0x740e
   15b18:	movt	r1, #1
   15b1c:	mov	r0, #0
   15b20:	mov	r2, #5
   15b24:	bl	11130 <dcgettext@plt>
   15b28:	movw	r4, #33136	; 0x8170
   15b2c:	movt	r4, #2
   15b30:	ldr	r1, [r4]
   15b34:	bl	110ac <fputs_unlocked@plt>
   15b38:	ldr	r6, [r7]
   15b3c:	cmp	r6, #0
   15b40:	beq	15be0 <putc_unlocked@plt+0x487c>
   15b44:	add	r9, r7, #4
   15b48:	mov	r7, #0
   15b4c:	str	sl, [sp]
   15b50:	cmp	r8, #0
   15b54:	beq	15b70 <putc_unlocked@plt+0x480c>
   15b58:	mov	r0, r7
   15b5c:	mov	r1, r5
   15b60:	mov	r2, sl
   15b64:	bl	11124 <memcmp@plt>
   15b68:	cmp	r0, #0
   15b6c:	beq	15b9c <putc_unlocked@plt+0x4838>
   15b70:	ldr	r7, [r4]
   15b74:	mov	r0, r6
   15b78:	bl	1464c <putc_unlocked@plt+0x32e8>
   15b7c:	mov	r3, r0
   15b80:	mov	r0, r7
   15b84:	mov	r1, #1
   15b88:	movw	r2, #29731	; 0x7423
   15b8c:	movt	r2, #1
   15b90:	bl	1128c <__fprintf_chk@plt>
   15b94:	mov	r7, r5
   15b98:	b	15bcc <putc_unlocked@plt+0x4868>
   15b9c:	mov	sl, r9
   15ba0:	ldr	r9, [r4]
   15ba4:	mov	r0, r6
   15ba8:	bl	1464c <putc_unlocked@plt+0x32e8>
   15bac:	mov	r3, r0
   15bb0:	mov	r0, r9
   15bb4:	mov	r9, sl
   15bb8:	ldr	sl, [sp]
   15bbc:	mov	r1, #1
   15bc0:	movw	r2, #29739	; 0x742b
   15bc4:	movt	r2, #1
   15bc8:	bl	1128c <__fprintf_chk@plt>
   15bcc:	add	r5, r5, sl
   15bd0:	ldr	r6, [r9, -r8, lsl #2]
   15bd4:	sub	r8, r8, #1
   15bd8:	cmp	r6, #0
   15bdc:	bne	15b50 <putc_unlocked@plt+0x47ec>
   15be0:	ldr	r1, [r4]
   15be4:	mov	r0, #10
   15be8:	sub	sp, fp, #28
   15bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bf0:	b	11364 <putc_unlocked@plt>
   15bf4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15bf8:	add	fp, sp, #24
   15bfc:	mov	r4, r3
   15c00:	mov	r5, r2
   15c04:	mov	r7, r1
   15c08:	mov	r6, r0
   15c0c:	ldr	r8, [fp, #8]
   15c10:	ldr	r0, [fp, #16]
   15c14:	cmp	r0, #0
   15c18:	beq	15c34 <putc_unlocked@plt+0x48d0>
   15c1c:	mov	r0, r7
   15c20:	mov	r1, r5
   15c24:	mov	r2, r4
   15c28:	mov	r3, r8
   15c2c:	bl	15938 <putc_unlocked@plt+0x45d4>
   15c30:	b	15c40 <putc_unlocked@plt+0x48dc>
   15c34:	mov	r0, r7
   15c38:	mov	r1, r5
   15c3c:	bl	15a2c <putc_unlocked@plt+0x46c8>
   15c40:	mov	r2, r0
   15c44:	cmn	r0, #1
   15c48:	ble	15c54 <putc_unlocked@plt+0x48f0>
   15c4c:	mov	r0, r2
   15c50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15c54:	ldr	r9, [fp, #12]
   15c58:	mov	r0, r6
   15c5c:	mov	r1, r7
   15c60:	bl	15a7c <putc_unlocked@plt+0x4718>
   15c64:	mov	r0, r5
   15c68:	mov	r1, r4
   15c6c:	mov	r2, r8
   15c70:	bl	15af8 <putc_unlocked@plt+0x4794>
   15c74:	blx	r9
   15c78:	mvn	r2, #0
   15c7c:	mov	r0, r2
   15c80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15c84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15c88:	add	fp, sp, #24
   15c8c:	ldr	r6, [r1]
   15c90:	cmp	r6, #0
   15c94:	beq	15cf8 <putc_unlocked@plt+0x4994>
   15c98:	mov	r4, r3
   15c9c:	mov	r7, r2
   15ca0:	mov	r8, r1
   15ca4:	mov	r9, r0
   15ca8:	mov	r1, r2
   15cac:	mov	r2, r3
   15cb0:	bl	11124 <memcmp@plt>
   15cb4:	cmp	r0, #0
   15cb8:	beq	15cf0 <putc_unlocked@plt+0x498c>
   15cbc:	add	r7, r7, r4
   15cc0:	add	r5, r8, #4
   15cc4:	ldr	r6, [r5]
   15cc8:	cmp	r6, #0
   15ccc:	beq	15cf8 <putc_unlocked@plt+0x4994>
   15cd0:	mov	r0, r9
   15cd4:	mov	r1, r7
   15cd8:	mov	r2, r4
   15cdc:	bl	11124 <memcmp@plt>
   15ce0:	add	r7, r7, r4
   15ce4:	add	r5, r5, #4
   15ce8:	cmp	r0, #0
   15cec:	bne	15cc4 <putc_unlocked@plt+0x4960>
   15cf0:	mov	r0, r6
   15cf4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15cf8:	mov	r6, #0
   15cfc:	mov	r0, r6
   15d00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d04:	mov	r1, r0
   15d08:	sub	r2, r0, #65	; 0x41
   15d0c:	mov	r0, #1
   15d10:	cmp	r2, #26
   15d14:	subcs	r2, r1, #97	; 0x61
   15d18:	cmpcs	r2, #26
   15d1c:	bcs	15d24 <putc_unlocked@plt+0x49c0>
   15d20:	bx	lr
   15d24:	sub	r1, r1, #48	; 0x30
   15d28:	cmp	r1, #10
   15d2c:	movcs	r0, #0
   15d30:	bx	lr
   15d34:	mov	r1, r0
   15d38:	sub	r2, r0, #65	; 0x41
   15d3c:	mov	r0, #1
   15d40:	cmp	r2, #26
   15d44:	subcs	r1, r1, #97	; 0x61
   15d48:	cmpcs	r1, #26
   15d4c:	movcs	r0, #0
   15d50:	bx	lr
   15d54:	mov	r1, #0
   15d58:	cmp	r0, #128	; 0x80
   15d5c:	movwcc	r1, #1
   15d60:	mov	r0, r1
   15d64:	bx	lr
   15d68:	sub	r1, r0, #9
   15d6c:	clz	r1, r1
   15d70:	lsr	r1, r1, #5
   15d74:	sub	r0, r0, #32
   15d78:	clz	r0, r0
   15d7c:	lsr	r0, r0, #5
   15d80:	orr	r0, r0, r1
   15d84:	bx	lr
   15d88:	mov	r1, r0
   15d8c:	mov	r0, #1
   15d90:	cmp	r1, #32
   15d94:	bxcc	lr
   15d98:	cmp	r1, #127	; 0x7f
   15d9c:	movne	r0, #0
   15da0:	bx	lr
   15da4:	sub	r1, r0, #48	; 0x30
   15da8:	mov	r0, #0
   15dac:	cmp	r1, #10
   15db0:	movwcc	r0, #1
   15db4:	bx	lr
   15db8:	sub	r1, r0, #33	; 0x21
   15dbc:	mov	r0, #0
   15dc0:	cmp	r1, #94	; 0x5e
   15dc4:	movwcc	r0, #1
   15dc8:	bx	lr
   15dcc:	sub	r1, r0, #97	; 0x61
   15dd0:	mov	r0, #0
   15dd4:	cmp	r1, #26
   15dd8:	movwcc	r0, #1
   15ddc:	bx	lr
   15de0:	sub	r1, r0, #32
   15de4:	mov	r0, #0
   15de8:	cmp	r1, #95	; 0x5f
   15dec:	movwcc	r0, #1
   15df0:	bx	lr
   15df4:	sub	r1, r0, #33	; 0x21
   15df8:	cmp	r1, #93	; 0x5d
   15dfc:	bhi	15f88 <putc_unlocked@plt+0x4c24>
   15e00:	mov	r0, #1
   15e04:	add	r2, pc, #0
   15e08:	ldr	pc, [r2, r1, lsl #2]
   15e0c:	andeq	r5, r1, r4, lsl #31
   15e10:	andeq	r5, r1, r4, lsl #31
   15e14:	andeq	r5, r1, r4, lsl #31
   15e18:	andeq	r5, r1, r4, lsl #31
   15e1c:	andeq	r5, r1, r4, lsl #31
   15e20:	andeq	r5, r1, r4, lsl #31
   15e24:	andeq	r5, r1, r4, lsl #31
   15e28:	andeq	r5, r1, r4, lsl #31
   15e2c:	andeq	r5, r1, r4, lsl #31
   15e30:	andeq	r5, r1, r4, lsl #31
   15e34:	andeq	r5, r1, r4, lsl #31
   15e38:	andeq	r5, r1, r4, lsl #31
   15e3c:	andeq	r5, r1, r4, lsl #31
   15e40:	andeq	r5, r1, r4, lsl #31
   15e44:	andeq	r5, r1, r4, lsl #31
   15e48:	andeq	r5, r1, r8, lsl #31
   15e4c:	andeq	r5, r1, r8, lsl #31
   15e50:	andeq	r5, r1, r8, lsl #31
   15e54:	andeq	r5, r1, r8, lsl #31
   15e58:	andeq	r5, r1, r8, lsl #31
   15e5c:	andeq	r5, r1, r8, lsl #31
   15e60:	andeq	r5, r1, r8, lsl #31
   15e64:	andeq	r5, r1, r8, lsl #31
   15e68:	andeq	r5, r1, r8, lsl #31
   15e6c:	andeq	r5, r1, r8, lsl #31
   15e70:	andeq	r5, r1, r4, lsl #31
   15e74:	andeq	r5, r1, r4, lsl #31
   15e78:	andeq	r5, r1, r4, lsl #31
   15e7c:	andeq	r5, r1, r4, lsl #31
   15e80:	andeq	r5, r1, r4, lsl #31
   15e84:	andeq	r5, r1, r4, lsl #31
   15e88:	andeq	r5, r1, r4, lsl #31
   15e8c:	andeq	r5, r1, r8, lsl #31
   15e90:	andeq	r5, r1, r8, lsl #31
   15e94:	andeq	r5, r1, r8, lsl #31
   15e98:	andeq	r5, r1, r8, lsl #31
   15e9c:	andeq	r5, r1, r8, lsl #31
   15ea0:	andeq	r5, r1, r8, lsl #31
   15ea4:	andeq	r5, r1, r8, lsl #31
   15ea8:	andeq	r5, r1, r8, lsl #31
   15eac:	andeq	r5, r1, r8, lsl #31
   15eb0:	andeq	r5, r1, r8, lsl #31
   15eb4:	andeq	r5, r1, r8, lsl #31
   15eb8:	andeq	r5, r1, r8, lsl #31
   15ebc:	andeq	r5, r1, r8, lsl #31
   15ec0:	andeq	r5, r1, r8, lsl #31
   15ec4:	andeq	r5, r1, r8, lsl #31
   15ec8:	andeq	r5, r1, r8, lsl #31
   15ecc:	andeq	r5, r1, r8, lsl #31
   15ed0:	andeq	r5, r1, r8, lsl #31
   15ed4:	andeq	r5, r1, r8, lsl #31
   15ed8:	andeq	r5, r1, r8, lsl #31
   15edc:	andeq	r5, r1, r8, lsl #31
   15ee0:	andeq	r5, r1, r8, lsl #31
   15ee4:	andeq	r5, r1, r8, lsl #31
   15ee8:	andeq	r5, r1, r8, lsl #31
   15eec:	andeq	r5, r1, r8, lsl #31
   15ef0:	andeq	r5, r1, r8, lsl #31
   15ef4:	andeq	r5, r1, r4, lsl #31
   15ef8:	andeq	r5, r1, r4, lsl #31
   15efc:	andeq	r5, r1, r4, lsl #31
   15f00:	andeq	r5, r1, r4, lsl #31
   15f04:	andeq	r5, r1, r4, lsl #31
   15f08:	andeq	r5, r1, r4, lsl #31
   15f0c:	andeq	r5, r1, r8, lsl #31
   15f10:	andeq	r5, r1, r8, lsl #31
   15f14:	andeq	r5, r1, r8, lsl #31
   15f18:	andeq	r5, r1, r8, lsl #31
   15f1c:	andeq	r5, r1, r8, lsl #31
   15f20:	andeq	r5, r1, r8, lsl #31
   15f24:	andeq	r5, r1, r8, lsl #31
   15f28:	andeq	r5, r1, r8, lsl #31
   15f2c:	andeq	r5, r1, r8, lsl #31
   15f30:	andeq	r5, r1, r8, lsl #31
   15f34:	andeq	r5, r1, r8, lsl #31
   15f38:	andeq	r5, r1, r8, lsl #31
   15f3c:	andeq	r5, r1, r8, lsl #31
   15f40:	andeq	r5, r1, r8, lsl #31
   15f44:	andeq	r5, r1, r8, lsl #31
   15f48:	andeq	r5, r1, r8, lsl #31
   15f4c:	andeq	r5, r1, r8, lsl #31
   15f50:	andeq	r5, r1, r8, lsl #31
   15f54:	andeq	r5, r1, r8, lsl #31
   15f58:	andeq	r5, r1, r8, lsl #31
   15f5c:	andeq	r5, r1, r8, lsl #31
   15f60:	andeq	r5, r1, r8, lsl #31
   15f64:	andeq	r5, r1, r8, lsl #31
   15f68:	andeq	r5, r1, r8, lsl #31
   15f6c:	andeq	r5, r1, r8, lsl #31
   15f70:	andeq	r5, r1, r8, lsl #31
   15f74:	andeq	r5, r1, r4, lsl #31
   15f78:	andeq	r5, r1, r4, lsl #31
   15f7c:	andeq	r5, r1, r4, lsl #31
   15f80:	andeq	r5, r1, r4, lsl #31
   15f84:	bx	lr
   15f88:	mov	r0, #0
   15f8c:	bx	lr
   15f90:	sub	r0, r0, #9
   15f94:	cmp	r0, #23
   15f98:	movhi	r0, #0
   15f9c:	bxhi	lr
   15fa0:	bic	r0, r0, #-16777216	; 0xff000000
   15fa4:	movw	r1, #31
   15fa8:	movt	r1, #128	; 0x80
   15fac:	mov	r2, #1
   15fb0:	and	r0, r2, r1, lsr r0
   15fb4:	bx	lr
   15fb8:	sub	r1, r0, #65	; 0x41
   15fbc:	mov	r0, #0
   15fc0:	cmp	r1, #26
   15fc4:	movwcc	r0, #1
   15fc8:	bx	lr
   15fcc:	mov	r1, r0
   15fd0:	sub	r2, r0, #48	; 0x30
   15fd4:	mov	r0, #1
   15fd8:	cmp	r2, #22
   15fdc:	bhi	15ff4 <putc_unlocked@plt+0x4c90>
   15fe0:	mov	ip, #1
   15fe4:	movw	r3, #1023	; 0x3ff
   15fe8:	movt	r3, #126	; 0x7e
   15fec:	tst	r3, ip, lsl r2
   15ff0:	bxne	lr
   15ff4:	sub	r1, r1, #97	; 0x61
   15ff8:	cmp	r1, #6
   15ffc:	movcs	r0, #0
   16000:	bxcs	lr
   16004:	bx	lr
   16008:	sub	r1, r0, #65	; 0x41
   1600c:	cmp	r1, #26
   16010:	addcc	r0, r0, #32
   16014:	bx	lr
   16018:	sub	r1, r0, #97	; 0x61
   1601c:	cmp	r1, #26
   16020:	subcc	r0, r0, #32
   16024:	bx	lr
   16028:	push	{r4, r5, r6, sl, fp, lr}
   1602c:	add	fp, sp, #16
   16030:	mov	r4, r0
   16034:	bl	11184 <__fpending@plt>
   16038:	mov	r5, r0
   1603c:	mov	r0, r4
   16040:	bl	11190 <ferror_unlocked@plt>
   16044:	mov	r6, r0
   16048:	mov	r0, r4
   1604c:	bl	12078 <putc_unlocked@plt+0xd14>
   16050:	cmp	r6, #0
   16054:	beq	16074 <putc_unlocked@plt+0x4d10>
   16058:	mvn	r4, #0
   1605c:	cmp	r0, #0
   16060:	bne	160a8 <putc_unlocked@plt+0x4d44>
   16064:	bl	1122c <__errno_location@plt>
   16068:	mov	r1, #0
   1606c:	str	r1, [r0]
   16070:	b	160a8 <putc_unlocked@plt+0x4d44>
   16074:	cmp	r0, #0
   16078:	mov	r4, r0
   1607c:	mvnne	r4, #0
   16080:	cmp	r5, #0
   16084:	bne	160a8 <putc_unlocked@plt+0x4d44>
   16088:	cmp	r0, #0
   1608c:	beq	160a8 <putc_unlocked@plt+0x4d44>
   16090:	bl	1122c <__errno_location@plt>
   16094:	ldr	r0, [r0]
   16098:	subs	r4, r0, #9
   1609c:	mvnne	r4, #0
   160a0:	mov	r0, r4
   160a4:	pop	{r4, r5, r6, sl, fp, pc}
   160a8:	mov	r0, r4
   160ac:	pop	{r4, r5, r6, sl, fp, pc}
   160b0:	sub	sp, sp, #8
   160b4:	push	{fp, lr}
   160b8:	mov	fp, sp
   160bc:	sub	sp, sp, #8
   160c0:	str	r3, [fp, #12]
   160c4:	str	r2, [fp, #8]
   160c8:	add	r2, fp, #8
   160cc:	str	r2, [sp, #4]
   160d0:	cmp	r1, #11
   160d4:	bhi	16114 <putc_unlocked@plt+0x4db0>
   160d8:	mov	r2, #1
   160dc:	movw	r3, #1300	; 0x514
   160e0:	tst	r3, r2, lsl r1
   160e4:	bne	16164 <putc_unlocked@plt+0x4e00>
   160e8:	movw	r3, #2570	; 0xa0a
   160ec:	tst	r3, r2, lsl r1
   160f0:	bne	1613c <putc_unlocked@plt+0x4dd8>
   160f4:	cmp	r1, #0
   160f8:	bne	16114 <putc_unlocked@plt+0x4db0>
   160fc:	ldr	r1, [sp, #4]
   16100:	add	r2, r1, #4
   16104:	str	r2, [sp, #4]
   16108:	ldr	r1, [r1]
   1610c:	bl	16188 <putc_unlocked@plt+0x4e24>
   16110:	b	16178 <putc_unlocked@plt+0x4e14>
   16114:	sub	r2, r1, #1024	; 0x400
   16118:	cmp	r2, #10
   1611c:	bhi	16164 <putc_unlocked@plt+0x4e00>
   16120:	mov	ip, #1
   16124:	movw	r3, #645	; 0x285
   16128:	tst	r3, ip, lsl r2
   1612c:	bne	16164 <putc_unlocked@plt+0x4e00>
   16130:	movw	r3, #1282	; 0x502
   16134:	tst	r3, ip, lsl r2
   16138:	beq	16144 <putc_unlocked@plt+0x4de0>
   1613c:	bl	112b0 <fcntl64@plt>
   16140:	b	16178 <putc_unlocked@plt+0x4e14>
   16144:	cmp	r2, #6
   16148:	bne	16164 <putc_unlocked@plt+0x4e00>
   1614c:	ldr	r1, [sp, #4]
   16150:	add	r2, r1, #4
   16154:	str	r2, [sp, #4]
   16158:	ldr	r1, [r1]
   1615c:	bl	16194 <putc_unlocked@plt+0x4e30>
   16160:	b	16178 <putc_unlocked@plt+0x4e14>
   16164:	ldr	r2, [sp, #4]
   16168:	add	r3, r2, #4
   1616c:	str	r3, [sp, #4]
   16170:	ldr	r2, [r2]
   16174:	bl	112b0 <fcntl64@plt>
   16178:	mov	sp, fp
   1617c:	pop	{fp, lr}
   16180:	add	sp, sp, #8
   16184:	bx	lr
   16188:	mov	r2, r1
   1618c:	mov	r1, #0
   16190:	b	112b0 <fcntl64@plt>
   16194:	push	{r4, r5, r6, r7, fp, lr}
   16198:	add	fp, sp, #16
   1619c:	mov	r5, r1
   161a0:	mov	r6, r0
   161a4:	movw	r7, #33480	; 0x82c8
   161a8:	movt	r7, #2
   161ac:	ldr	r0, [r7]
   161b0:	cmp	r0, #0
   161b4:	blt	16218 <putc_unlocked@plt+0x4eb4>
   161b8:	mov	r0, r6
   161bc:	movw	r1, #1030	; 0x406
   161c0:	mov	r2, r5
   161c4:	bl	112b0 <fcntl64@plt>
   161c8:	mov	r4, r0
   161cc:	cmn	r0, #1
   161d0:	bgt	16204 <putc_unlocked@plt+0x4ea0>
   161d4:	bl	1122c <__errno_location@plt>
   161d8:	ldr	r0, [r0]
   161dc:	cmp	r0, #22
   161e0:	bne	16204 <putc_unlocked@plt+0x4ea0>
   161e4:	mov	r0, r6
   161e8:	mov	r1, r5
   161ec:	bl	16188 <putc_unlocked@plt+0x4e24>
   161f0:	mov	r4, r0
   161f4:	cmp	r0, #0
   161f8:	blt	16268 <putc_unlocked@plt+0x4f04>
   161fc:	mvn	r0, #0
   16200:	b	16208 <putc_unlocked@plt+0x4ea4>
   16204:	mov	r0, #1
   16208:	str	r0, [r7]
   1620c:	cmp	r4, #0
   16210:	bge	16230 <putc_unlocked@plt+0x4ecc>
   16214:	b	16268 <putc_unlocked@plt+0x4f04>
   16218:	mov	r0, r6
   1621c:	mov	r1, r5
   16220:	bl	16188 <putc_unlocked@plt+0x4e24>
   16224:	mov	r4, r0
   16228:	cmp	r4, #0
   1622c:	blt	16268 <putc_unlocked@plt+0x4f04>
   16230:	ldr	r0, [r7]
   16234:	cmn	r0, #1
   16238:	bne	16268 <putc_unlocked@plt+0x4f04>
   1623c:	mov	r0, r4
   16240:	mov	r1, #1
   16244:	bl	112b0 <fcntl64@plt>
   16248:	cmp	r0, #0
   1624c:	blt	16270 <putc_unlocked@plt+0x4f0c>
   16250:	orr	r2, r0, #1
   16254:	mov	r0, r4
   16258:	mov	r1, #2
   1625c:	bl	112b0 <fcntl64@plt>
   16260:	cmn	r0, #1
   16264:	beq	16270 <putc_unlocked@plt+0x4f0c>
   16268:	mov	r0, r4
   1626c:	pop	{r4, r5, r6, r7, fp, pc}
   16270:	bl	1122c <__errno_location@plt>
   16274:	mov	r5, r0
   16278:	ldr	r6, [r0]
   1627c:	mov	r0, r4
   16280:	bl	11340 <close@plt>
   16284:	str	r6, [r5]
   16288:	mvn	r4, #0
   1628c:	mov	r0, r4
   16290:	pop	{r4, r5, r6, r7, fp, pc}
   16294:	push	{fp, lr}
   16298:	mov	fp, sp
   1629c:	bl	1122c <__errno_location@plt>
   162a0:	mov	r1, #12
   162a4:	str	r1, [r0]
   162a8:	mov	r0, #0
   162ac:	pop	{fp, pc}
   162b0:	b	158ac <putc_unlocked@plt+0x4548>
   162b4:	cmp	r1, #0
   162b8:	orreq	r1, r1, #1
   162bc:	b	158dc <putc_unlocked@plt+0x4578>
   162c0:	b	15858 <putc_unlocked@plt+0x44f4>
   162c4:	clz	r3, r2
   162c8:	lsr	ip, r3, #5
   162cc:	clz	r3, r1
   162d0:	lsr	r3, r3, #5
   162d4:	orrs	r3, r3, ip
   162d8:	movwne	r1, #1
   162dc:	movwne	r2, #1
   162e0:	b	1637c <putc_unlocked@plt+0x5018>
   162e4:	push	{fp, lr}
   162e8:	mov	fp, sp
   162ec:	mov	r0, #14
   162f0:	bl	112d4 <nl_langinfo@plt>
   162f4:	movw	r1, #28155	; 0x6dfb
   162f8:	movt	r1, #1
   162fc:	cmp	r0, #0
   16300:	movne	r1, r0
   16304:	ldrb	r2, [r1]
   16308:	movw	r0, #29744	; 0x7430
   1630c:	movt	r0, #1
   16310:	cmp	r2, #0
   16314:	movne	r0, r1
   16318:	pop	{fp, pc}
   1631c:	push	{r4, r5, r6, r7, fp, lr}
   16320:	add	fp, sp, #16
   16324:	sub	sp, sp, #8
   16328:	mov	r7, r2
   1632c:	mov	r4, r1
   16330:	add	r5, sp, #4
   16334:	cmp	r0, #0
   16338:	movne	r5, r0
   1633c:	mov	r0, r5
   16340:	bl	1119c <mbrtowc@plt>
   16344:	mov	r6, r0
   16348:	cmp	r7, #0
   1634c:	beq	16370 <putc_unlocked@plt+0x500c>
   16350:	cmn	r6, #2
   16354:	bcc	16370 <putc_unlocked@plt+0x500c>
   16358:	mov	r0, #0
   1635c:	bl	163b8 <putc_unlocked@plt+0x5054>
   16360:	cmp	r0, #0
   16364:	ldrbeq	r0, [r4]
   16368:	streq	r0, [r5]
   1636c:	moveq	r6, #1
   16370:	mov	r0, r6
   16374:	sub	sp, fp, #16
   16378:	pop	{r4, r5, r6, r7, fp, pc}
   1637c:	cmp	r2, #0
   16380:	beq	163b0 <putc_unlocked@plt+0x504c>
   16384:	mvn	r3, #0
   16388:	udiv	r3, r3, r2
   1638c:	cmp	r3, r1
   16390:	bcs	163b0 <putc_unlocked@plt+0x504c>
   16394:	push	{fp, lr}
   16398:	mov	fp, sp
   1639c:	bl	1122c <__errno_location@plt>
   163a0:	mov	r1, #12
   163a4:	str	r1, [r0]
   163a8:	mov	r0, #0
   163ac:	pop	{fp, pc}
   163b0:	mul	r1, r2, r1
   163b4:	b	158dc <putc_unlocked@plt+0x4578>
   163b8:	push	{r4, sl, fp, lr}
   163bc:	add	fp, sp, #8
   163c0:	sub	sp, sp, #264	; 0x108
   163c4:	add	r1, sp, #7
   163c8:	movw	r2, #257	; 0x101
   163cc:	bl	1641c <putc_unlocked@plt+0x50b8>
   163d0:	mov	r4, #0
   163d4:	cmp	r0, #0
   163d8:	bne	16410 <putc_unlocked@plt+0x50ac>
   163dc:	add	r0, sp, #7
   163e0:	movw	r1, #29750	; 0x7436
   163e4:	movt	r1, #1
   163e8:	bl	110c4 <strcmp@plt>
   163ec:	cmp	r0, #0
   163f0:	beq	16410 <putc_unlocked@plt+0x50ac>
   163f4:	add	r0, sp, #7
   163f8:	movw	r1, #29752	; 0x7438
   163fc:	movt	r1, #1
   16400:	bl	110c4 <strcmp@plt>
   16404:	mov	r4, r0
   16408:	cmp	r0, #0
   1640c:	movwne	r4, #1
   16410:	mov	r0, r4
   16414:	sub	sp, fp, #8
   16418:	pop	{r4, sl, fp, pc}
   1641c:	b	16420 <putc_unlocked@plt+0x50bc>
   16420:	push	{r4, r5, r6, r7, fp, lr}
   16424:	add	fp, sp, #16
   16428:	mov	r6, r2
   1642c:	mov	r4, r1
   16430:	bl	164bc <putc_unlocked@plt+0x5158>
   16434:	cmp	r0, #0
   16438:	beq	16468 <putc_unlocked@plt+0x5104>
   1643c:	mov	r7, r0
   16440:	bl	11214 <strlen@plt>
   16444:	cmp	r0, r6
   16448:	bcs	16488 <putc_unlocked@plt+0x5124>
   1644c:	add	r2, r0, #1
   16450:	mov	r0, r4
   16454:	mov	r1, r7
   16458:	bl	1110c <memcpy@plt>
   1645c:	mov	r5, #0
   16460:	mov	r0, r5
   16464:	pop	{r4, r5, r6, r7, fp, pc}
   16468:	mov	r5, #22
   1646c:	cmp	r6, #0
   16470:	movne	r0, #0
   16474:	strbne	r0, [r4]
   16478:	movne	r0, r5
   1647c:	popne	{r4, r5, r6, r7, fp, pc}
   16480:	mov	r0, r5
   16484:	pop	{r4, r5, r6, r7, fp, pc}
   16488:	mov	r5, #34	; 0x22
   1648c:	cmp	r6, #0
   16490:	beq	164b0 <putc_unlocked@plt+0x514c>
   16494:	sub	r6, r6, #1
   16498:	mov	r0, r4
   1649c:	mov	r1, r7
   164a0:	mov	r2, r6
   164a4:	bl	1110c <memcpy@plt>
   164a8:	mov	r0, #0
   164ac:	strb	r0, [r4, r6]
   164b0:	mov	r0, r5
   164b4:	pop	{r4, r5, r6, r7, fp, pc}
   164b8:	b	164bc <putc_unlocked@plt+0x5158>
   164bc:	mov	r1, #0
   164c0:	b	112bc <setlocale@plt>
   164c4:	eor	r1, r1, #-2147483648	; 0x80000000
   164c8:	b	164d0 <putc_unlocked@plt+0x516c>
   164cc:	eor	r3, r3, #-2147483648	; 0x80000000
   164d0:	push	{r4, r5, lr}
   164d4:	lsl	r4, r1, #1
   164d8:	lsl	r5, r3, #1
   164dc:	teq	r4, r5
   164e0:	teqeq	r0, r2
   164e4:	orrsne	ip, r4, r0
   164e8:	orrsne	ip, r5, r2
   164ec:	mvnsne	ip, r4, asr #21
   164f0:	mvnsne	ip, r5, asr #21
   164f4:	beq	166e0 <putc_unlocked@plt+0x537c>
   164f8:	lsr	r4, r4, #21
   164fc:	rsbs	r5, r4, r5, lsr #21
   16500:	rsblt	r5, r5, #0
   16504:	ble	16524 <putc_unlocked@plt+0x51c0>
   16508:	add	r4, r4, r5
   1650c:	eor	r2, r0, r2
   16510:	eor	r3, r1, r3
   16514:	eor	r0, r2, r0
   16518:	eor	r1, r3, r1
   1651c:	eor	r2, r0, r2
   16520:	eor	r3, r1, r3
   16524:	cmp	r5, #54	; 0x36
   16528:	pophi	{r4, r5, pc}
   1652c:	tst	r1, #-2147483648	; 0x80000000
   16530:	lsl	r1, r1, #12
   16534:	mov	ip, #1048576	; 0x100000
   16538:	orr	r1, ip, r1, lsr #12
   1653c:	beq	16548 <putc_unlocked@plt+0x51e4>
   16540:	rsbs	r0, r0, #0
   16544:	rsc	r1, r1, #0
   16548:	tst	r3, #-2147483648	; 0x80000000
   1654c:	lsl	r3, r3, #12
   16550:	orr	r3, ip, r3, lsr #12
   16554:	beq	16560 <putc_unlocked@plt+0x51fc>
   16558:	rsbs	r2, r2, #0
   1655c:	rsc	r3, r3, #0
   16560:	teq	r4, r5
   16564:	beq	166c8 <putc_unlocked@plt+0x5364>
   16568:	sub	r4, r4, #1
   1656c:	rsbs	lr, r5, #32
   16570:	blt	1658c <putc_unlocked@plt+0x5228>
   16574:	lsl	ip, r2, lr
   16578:	adds	r0, r0, r2, lsr r5
   1657c:	adc	r1, r1, #0
   16580:	adds	r0, r0, r3, lsl lr
   16584:	adcs	r1, r1, r3, asr r5
   16588:	b	165a8 <putc_unlocked@plt+0x5244>
   1658c:	sub	r5, r5, #32
   16590:	add	lr, lr, #32
   16594:	cmp	r2, #1
   16598:	lsl	ip, r3, lr
   1659c:	orrcs	ip, ip, #2
   165a0:	adds	r0, r0, r3, asr r5
   165a4:	adcs	r1, r1, r3, asr #31
   165a8:	and	r5, r1, #-2147483648	; 0x80000000
   165ac:	bpl	165bc <putc_unlocked@plt+0x5258>
   165b0:	rsbs	ip, ip, #0
   165b4:	rscs	r0, r0, #0
   165b8:	rsc	r1, r1, #0
   165bc:	cmp	r1, #1048576	; 0x100000
   165c0:	bcc	16600 <putc_unlocked@plt+0x529c>
   165c4:	cmp	r1, #2097152	; 0x200000
   165c8:	bcc	165e8 <putc_unlocked@plt+0x5284>
   165cc:	lsrs	r1, r1, #1
   165d0:	rrxs	r0, r0
   165d4:	rrx	ip, ip
   165d8:	add	r4, r4, #1
   165dc:	lsl	r2, r4, #21
   165e0:	cmn	r2, #4194304	; 0x400000
   165e4:	bcs	16740 <putc_unlocked@plt+0x53dc>
   165e8:	cmp	ip, #-2147483648	; 0x80000000
   165ec:	lsrseq	ip, r0, #1
   165f0:	adcs	r0, r0, #0
   165f4:	adc	r1, r1, r4, lsl #20
   165f8:	orr	r1, r1, r5
   165fc:	pop	{r4, r5, pc}
   16600:	lsls	ip, ip, #1
   16604:	adcs	r0, r0, r0
   16608:	adc	r1, r1, r1
   1660c:	tst	r1, #1048576	; 0x100000
   16610:	sub	r4, r4, #1
   16614:	bne	165e8 <putc_unlocked@plt+0x5284>
   16618:	teq	r1, #0
   1661c:	moveq	r1, r0
   16620:	moveq	r0, #0
   16624:	clz	r3, r1
   16628:	addeq	r3, r3, #32
   1662c:	sub	r3, r3, #11
   16630:	subs	r2, r3, #32
   16634:	bge	16658 <putc_unlocked@plt+0x52f4>
   16638:	adds	r2, r2, #12
   1663c:	ble	16654 <putc_unlocked@plt+0x52f0>
   16640:	add	ip, r2, #20
   16644:	rsb	r2, r2, #12
   16648:	lsl	r0, r1, ip
   1664c:	lsr	r1, r1, r2
   16650:	b	16668 <putc_unlocked@plt+0x5304>
   16654:	add	r2, r2, #20
   16658:	rsble	ip, r2, #32
   1665c:	lsl	r1, r1, r2
   16660:	orrle	r1, r1, r0, lsr ip
   16664:	lslle	r0, r0, r2
   16668:	subs	r4, r4, r3
   1666c:	addge	r1, r1, r4, lsl #20
   16670:	orrge	r1, r1, r5
   16674:	popge	{r4, r5, pc}
   16678:	mvn	r4, r4
   1667c:	subs	r4, r4, #31
   16680:	bge	166bc <putc_unlocked@plt+0x5358>
   16684:	adds	r4, r4, #12
   16688:	bgt	166a4 <putc_unlocked@plt+0x5340>
   1668c:	add	r4, r4, #20
   16690:	rsb	r2, r4, #32
   16694:	lsr	r0, r0, r4
   16698:	orr	r0, r0, r1, lsl r2
   1669c:	orr	r1, r5, r1, lsr r4
   166a0:	pop	{r4, r5, pc}
   166a4:	rsb	r4, r4, #12
   166a8:	rsb	r2, r4, #32
   166ac:	lsr	r0, r0, r2
   166b0:	orr	r0, r0, r1, lsl r4
   166b4:	mov	r1, r5
   166b8:	pop	{r4, r5, pc}
   166bc:	lsr	r0, r1, r4
   166c0:	mov	r1, r5
   166c4:	pop	{r4, r5, pc}
   166c8:	teq	r4, #0
   166cc:	eor	r3, r3, #1048576	; 0x100000
   166d0:	eoreq	r1, r1, #1048576	; 0x100000
   166d4:	addeq	r4, r4, #1
   166d8:	subne	r5, r5, #1
   166dc:	b	16568 <putc_unlocked@plt+0x5204>
   166e0:	mvns	ip, r4, asr #21
   166e4:	mvnsne	ip, r5, asr #21
   166e8:	beq	16750 <putc_unlocked@plt+0x53ec>
   166ec:	teq	r4, r5
   166f0:	teqeq	r0, r2
   166f4:	beq	16708 <putc_unlocked@plt+0x53a4>
   166f8:	orrs	ip, r4, r0
   166fc:	moveq	r1, r3
   16700:	moveq	r0, r2
   16704:	pop	{r4, r5, pc}
   16708:	teq	r1, r3
   1670c:	movne	r1, #0
   16710:	movne	r0, #0
   16714:	popne	{r4, r5, pc}
   16718:	lsrs	ip, r4, #21
   1671c:	bne	16730 <putc_unlocked@plt+0x53cc>
   16720:	lsls	r0, r0, #1
   16724:	adcs	r1, r1, r1
   16728:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1672c:	pop	{r4, r5, pc}
   16730:	adds	r4, r4, #4194304	; 0x400000
   16734:	addcc	r1, r1, #1048576	; 0x100000
   16738:	popcc	{r4, r5, pc}
   1673c:	and	r5, r1, #-2147483648	; 0x80000000
   16740:	orr	r1, r5, #2130706432	; 0x7f000000
   16744:	orr	r1, r1, #15728640	; 0xf00000
   16748:	mov	r0, #0
   1674c:	pop	{r4, r5, pc}
   16750:	mvns	ip, r4, asr #21
   16754:	movne	r1, r3
   16758:	movne	r0, r2
   1675c:	mvnseq	ip, r5, asr #21
   16760:	movne	r3, r1
   16764:	movne	r2, r0
   16768:	orrs	r4, r0, r1, lsl #12
   1676c:	orrseq	r5, r2, r3, lsl #12
   16770:	teqeq	r1, r3
   16774:	orrne	r1, r1, #524288	; 0x80000
   16778:	pop	{r4, r5, pc}
   1677c:	teq	r0, #0
   16780:	moveq	r1, #0
   16784:	bxeq	lr
   16788:	push	{r4, r5, lr}
   1678c:	mov	r4, #1024	; 0x400
   16790:	add	r4, r4, #50	; 0x32
   16794:	mov	r5, #0
   16798:	mov	r1, #0
   1679c:	b	16618 <putc_unlocked@plt+0x52b4>
   167a0:	teq	r0, #0
   167a4:	moveq	r1, #0
   167a8:	bxeq	lr
   167ac:	push	{r4, r5, lr}
   167b0:	mov	r4, #1024	; 0x400
   167b4:	add	r4, r4, #50	; 0x32
   167b8:	ands	r5, r0, #-2147483648	; 0x80000000
   167bc:	rsbmi	r0, r0, #0
   167c0:	mov	r1, #0
   167c4:	b	16618 <putc_unlocked@plt+0x52b4>
   167c8:	lsls	r2, r0, #1
   167cc:	asr	r1, r2, #3
   167d0:	rrx	r1, r1
   167d4:	lsl	r0, r2, #28
   167d8:	andsne	r3, r2, #-16777216	; 0xff000000
   167dc:	teqne	r3, #-16777216	; 0xff000000
   167e0:	eorne	r1, r1, #939524096	; 0x38000000
   167e4:	bxne	lr
   167e8:	bics	r2, r2, #-16777216	; 0xff000000
   167ec:	bxeq	lr
   167f0:	teq	r3, #-16777216	; 0xff000000
   167f4:	orreq	r1, r1, #524288	; 0x80000
   167f8:	bxeq	lr
   167fc:	push	{r4, r5, lr}
   16800:	mov	r4, #896	; 0x380
   16804:	and	r5, r1, #-2147483648	; 0x80000000
   16808:	bic	r1, r1, #-2147483648	; 0x80000000
   1680c:	b	16618 <putc_unlocked@plt+0x52b4>
   16810:	orrs	r2, r0, r1
   16814:	bxeq	lr
   16818:	push	{r4, r5, lr}
   1681c:	mov	r5, #0
   16820:	b	16840 <putc_unlocked@plt+0x54dc>
   16824:	orrs	r2, r0, r1
   16828:	bxeq	lr
   1682c:	push	{r4, r5, lr}
   16830:	ands	r5, r1, #-2147483648	; 0x80000000
   16834:	bpl	16840 <putc_unlocked@plt+0x54dc>
   16838:	rsbs	r0, r0, #0
   1683c:	rsc	r1, r1, #0
   16840:	mov	r4, #1024	; 0x400
   16844:	add	r4, r4, #50	; 0x32
   16848:	lsrs	ip, r1, #22
   1684c:	beq	165bc <putc_unlocked@plt+0x5258>
   16850:	mov	r2, #3
   16854:	lsrs	ip, ip, #3
   16858:	addne	r2, r2, #3
   1685c:	lsrs	ip, ip, #3
   16860:	addne	r2, r2, #3
   16864:	add	r2, r2, ip, lsr #3
   16868:	rsb	r3, r2, #32
   1686c:	lsl	ip, r0, r3
   16870:	lsr	r0, r0, r2
   16874:	orr	r0, r0, r1, lsl r3
   16878:	lsr	r1, r1, r2
   1687c:	add	r4, r4, r2
   16880:	b	165bc <putc_unlocked@plt+0x5258>
   16884:	cmp	r3, #0
   16888:	cmpeq	r2, #0
   1688c:	bne	168a4 <putc_unlocked@plt+0x5540>
   16890:	cmp	r1, #0
   16894:	cmpeq	r0, #0
   16898:	mvnne	r1, #0
   1689c:	mvnne	r0, #0
   168a0:	b	168c0 <putc_unlocked@plt+0x555c>
   168a4:	sub	sp, sp, #8
   168a8:	push	{sp, lr}
   168ac:	bl	16910 <putc_unlocked@plt+0x55ac>
   168b0:	ldr	lr, [sp, #4]
   168b4:	add	sp, sp, #8
   168b8:	pop	{r2, r3}
   168bc:	bx	lr
   168c0:	push	{r1, lr}
   168c4:	mov	r0, #8
   168c8:	bl	110b8 <raise@plt>
   168cc:	pop	{r1, pc}
   168d0:	vmov	d6, r0, r1
   168d4:	vldr	d7, [pc, #36]	; 16900 <putc_unlocked@plt+0x559c>
   168d8:	vldr	d5, [pc, #40]	; 16908 <putc_unlocked@plt+0x55a4>
   168dc:	vmul.f64	d7, d6, d7
   168e0:	vcvt.u32.f64	s14, d7
   168e4:	vcvt.f64.u32	d4, s14
   168e8:	vmov	r1, s14
   168ec:	vmls.f64	d6, d4, d5
   168f0:	vcvt.u32.f64	s15, d6
   168f4:	vmov	r0, s15
   168f8:	bx	lr
   168fc:	nop			; (mov r0, r0)
   16900:	andeq	r0, r0, r0
   16904:	ldclcc	0, cr0, [r0]
   16908:	andeq	r0, r0, r0
   1690c:	mvnsmi	r0, r0
   16910:	cmp	r1, r3
   16914:	cmpeq	r0, r2
   16918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1691c:	mov	r4, r0
   16920:	movcc	r0, #0
   16924:	mov	r5, r1
   16928:	ldr	lr, [sp, #36]	; 0x24
   1692c:	movcc	r1, r0
   16930:	bcc	16a2c <putc_unlocked@plt+0x56c8>
   16934:	cmp	r3, #0
   16938:	clzeq	ip, r2
   1693c:	clzne	ip, r3
   16940:	addeq	ip, ip, #32
   16944:	cmp	r5, #0
   16948:	clzeq	r1, r4
   1694c:	addeq	r1, r1, #32
   16950:	clzne	r1, r5
   16954:	sub	ip, ip, r1
   16958:	sub	sl, ip, #32
   1695c:	lsl	r9, r3, ip
   16960:	rsb	fp, ip, #32
   16964:	orr	r9, r9, r2, lsl sl
   16968:	orr	r9, r9, r2, lsr fp
   1696c:	lsl	r8, r2, ip
   16970:	cmp	r5, r9
   16974:	cmpeq	r4, r8
   16978:	movcc	r0, #0
   1697c:	movcc	r1, r0
   16980:	bcc	1699c <putc_unlocked@plt+0x5638>
   16984:	mov	r0, #1
   16988:	subs	r4, r4, r8
   1698c:	lsl	r1, r0, sl
   16990:	orr	r1, r1, r0, lsr fp
   16994:	lsl	r0, r0, ip
   16998:	sbc	r5, r5, r9
   1699c:	cmp	ip, #0
   169a0:	beq	16a2c <putc_unlocked@plt+0x56c8>
   169a4:	lsr	r6, r8, #1
   169a8:	orr	r6, r6, r9, lsl #31
   169ac:	lsr	r7, r9, #1
   169b0:	mov	r2, ip
   169b4:	b	169d8 <putc_unlocked@plt+0x5674>
   169b8:	subs	r3, r4, r6
   169bc:	sbc	r8, r5, r7
   169c0:	adds	r3, r3, r3
   169c4:	adc	r8, r8, r8
   169c8:	adds	r4, r3, #1
   169cc:	adc	r5, r8, #0
   169d0:	subs	r2, r2, #1
   169d4:	beq	169f4 <putc_unlocked@plt+0x5690>
   169d8:	cmp	r5, r7
   169dc:	cmpeq	r4, r6
   169e0:	bcs	169b8 <putc_unlocked@plt+0x5654>
   169e4:	adds	r4, r4, r4
   169e8:	adc	r5, r5, r5
   169ec:	subs	r2, r2, #1
   169f0:	bne	169d8 <putc_unlocked@plt+0x5674>
   169f4:	lsr	r3, r4, ip
   169f8:	orr	r3, r3, r5, lsl fp
   169fc:	lsr	r2, r5, ip
   16a00:	orr	r3, r3, r5, lsr sl
   16a04:	adds	r0, r0, r4
   16a08:	mov	r4, r3
   16a0c:	lsl	r3, r2, ip
   16a10:	orr	r3, r3, r4, lsl sl
   16a14:	lsl	ip, r4, ip
   16a18:	orr	r3, r3, r4, lsr fp
   16a1c:	adc	r1, r1, r5
   16a20:	subs	r0, r0, ip
   16a24:	mov	r5, r2
   16a28:	sbc	r1, r1, r3
   16a2c:	cmp	lr, #0
   16a30:	strdne	r4, [lr]
   16a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a3c:	mov	r7, r0
   16a40:	ldr	r6, [pc, #72]	; 16a90 <putc_unlocked@plt+0x572c>
   16a44:	ldr	r5, [pc, #72]	; 16a94 <putc_unlocked@plt+0x5730>
   16a48:	add	r6, pc, r6
   16a4c:	add	r5, pc, r5
   16a50:	sub	r6, r6, r5
   16a54:	mov	r8, r1
   16a58:	mov	r9, r2
   16a5c:	bl	11074 <fdopen@plt-0x20>
   16a60:	asrs	r6, r6, #2
   16a64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a68:	mov	r4, #0
   16a6c:	add	r4, r4, #1
   16a70:	ldr	r3, [r5], #4
   16a74:	mov	r2, r9
   16a78:	mov	r1, r8
   16a7c:	mov	r0, r7
   16a80:	blx	r3
   16a84:	cmp	r6, r4
   16a88:	bne	16a6c <putc_unlocked@plt+0x5708>
   16a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a90:			; <UNDEFINED> instruction: 0x000114bc
   16a94:			; <UNDEFINED> instruction: 0x000114b4
   16a98:	bx	lr
   16a9c:	ldr	r3, [pc, #12]	; 16ab0 <putc_unlocked@plt+0x574c>
   16aa0:	mov	r1, #0
   16aa4:	add	r3, pc, r3
   16aa8:	ldr	r2, [r3]
   16aac:	b	11244 <__cxa_atexit@plt>
   16ab0:	andeq	r1, r1, r0, ror #12

Disassembly of section .fini:

00016ab4 <.fini>:
   16ab4:	push	{r3, lr}
   16ab8:	pop	{r3, pc}
