
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a24 <.init>:
   10a24:	push	{r3, lr}
   10a28:	bl	10cf8 <_start@@Base+0x3c>
   10a2c:	pop	{r3, pc}

Disassembly of section .plt:

00010a30 <calloc@plt-0x14>:
   10a30:	push	{lr}		; (str lr, [sp, #-4]!)
   10a34:	ldr	lr, [pc, #4]	; 10a40 <calloc@plt-0x4>
   10a38:	add	lr, pc, lr
   10a3c:	ldr	pc, [lr, #8]!
   10a40:	andeq	r1, r1, r0, asr #11

00010a44 <calloc@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a50 <strstr@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a5c <strcmp@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a68 <printf@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a74 <fopen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a80 <free@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1432]!	; 0x598

00010a8c <fgets@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1424]!	; 0x590

00010a98 <time@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1416]!	; 0x588

00010aa4 <realloc@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1408]!	; 0x580

00010ab0 <strcat@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1400]!	; 0x578

00010abc <strcpy@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1392]!	; 0x570

00010ac8 <puts@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1384]!	; 0x568

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1376]!	; 0x560

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1368]!	; 0x558

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1360]!	; 0x550

00010af8 <strlen@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1352]!	; 0x548

00010b04 <srand@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1344]!	; 0x540

00010b10 <rand@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1336]!	; 0x538

00010b1c <fclose@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1328]!	; 0x530

00010b28 <abort@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1320]!	; 0x528

Disassembly of section .text:

00010b34 <main@@Base>:
   10b34:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10b38:	mov	r4, #0
   10b3c:	strd	r6, [sp, #8]
   10b40:	str	r8, [sp, #16]
   10b44:	mov	r8, r4
   10b48:	str	lr, [sp, #20]
   10b4c:	sub	sp, sp, #104	; 0x68
   10b50:	bl	1100c <vetor_novo@@Base>
   10b54:	mov	r6, r0
   10b58:	movw	r1, #6152	; 0x1808
   10b5c:	movt	r1, #1
   10b60:	movw	r0, #5908	; 0x1714
   10b64:	movt	r0, #1
   10b68:	bl	10a74 <fopen@plt>
   10b6c:	mov	r7, r0
   10b70:	b	10ba4 <main@@Base+0x70>
   10b74:	bl	10af8 <strlen@plt>
   10b78:	add	r3, sp, #104	; 0x68
   10b7c:	mov	r2, r4
   10b80:	add	r3, r3, r0
   10b84:	add	r1, sp, #4
   10b88:	mov	r0, r6
   10b8c:	add	r4, r4, #1
   10b90:	strb	r8, [r3, #-101]	; 0xffffff9b
   10b94:	bl	111bc <vetor_insere@@Base>
   10b98:	cmn	r0, #1
   10b9c:	mov	r5, r0
   10ba0:	beq	10cac <main@@Base+0x178>
   10ba4:	mov	r2, r7
   10ba8:	mov	r1, #100	; 0x64
   10bac:	add	r0, sp, #4
   10bb0:	bl	10a8c <fgets@plt>
   10bb4:	cmp	r0, #0
   10bb8:	add	r0, sp, #4
   10bbc:	bne	10b74 <main@@Base+0x40>
   10bc0:	mov	r1, r4
   10bc4:	movw	r0, #5980	; 0x175c
   10bc8:	movt	r0, #1
   10bcc:	bl	10a68 <printf@plt>
   10bd0:	mov	r0, r6
   10bd4:	bl	10dac <vetor_imprime@@Base>
   10bd8:	movw	r1, #6008	; 0x1778
   10bdc:	movt	r1, #1
   10be0:	mov	r0, r6
   10be4:	bl	1134c <vetor_pesquisa@@Base>
   10be8:	mov	r1, r0
   10bec:	movw	r0, #6044	; 0x179c
   10bf0:	movt	r0, #1
   10bf4:	bl	10a68 <printf@plt>
   10bf8:	mov	r0, r6
   10bfc:	bl	113c4 <vetor_ordena@@Base>
   10c00:	cmp	r0, #0
   10c04:	beq	10ca0 <main@@Base+0x16c>
   10c08:	movw	r0, #6116	; 0x17e4
   10c0c:	movt	r0, #1
   10c10:	bl	10ac8 <puts@plt>
   10c14:	movw	r1, #6156	; 0x180c
   10c18:	movt	r1, #1
   10c1c:	mov	r0, r6
   10c20:	mov	r5, #0
   10c24:	bl	10e14 <vetor_num_ocorrencias@@Base>
   10c28:	mov	r1, r0
   10c2c:	movw	r0, #6176	; 0x1820
   10c30:	movt	r0, #1
   10c34:	bl	10a68 <printf@plt>
   10c38:	mov	r0, r6
   10c3c:	bl	10e8c <vetor_remove_repetidas@@Base>
   10c40:	ldr	r1, [r6]
   10c44:	movw	r0, #6232	; 0x1858
   10c48:	movt	r0, #1
   10c4c:	sub	r1, r1, #1
   10c50:	bl	10a68 <printf@plt>
   10c54:	movw	r1, #6296	; 0x1898
   10c58:	movt	r1, #1
   10c5c:	mov	r0, r6
   10c60:	bl	10f60 <vetor_pesquisa_parcial@@Base>
   10c64:	mov	r4, r0
   10c68:	bl	10dac <vetor_imprime@@Base>
   10c6c:	mov	r0, r4
   10c70:	bl	1104c <vetor_apaga@@Base>
   10c74:	mov	r0, r6
   10c78:	bl	1104c <vetor_apaga@@Base>
   10c7c:	mov	r0, r7
   10c80:	bl	10b1c <fclose@plt>
   10c84:	mov	r0, r5
   10c88:	add	sp, sp, #104	; 0x68
   10c8c:	ldrd	r4, [sp]
   10c90:	ldrd	r6, [sp, #8]
   10c94:	ldr	r8, [sp, #16]
   10c98:	add	sp, sp, #20
   10c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   10ca0:	mov	r0, r6
   10ca4:	bl	10dac <vetor_imprime@@Base>
   10ca8:	b	10c14 <main@@Base+0xe0>
   10cac:	movw	r0, #5932	; 0x172c
   10cb0:	movt	r0, #1
   10cb4:	bl	10ac8 <puts@plt>
   10cb8:	b	10c84 <main@@Base+0x150>

00010cbc <_start@@Base>:
   10cbc:	mov	fp, #0
   10cc0:	mov	lr, #0
   10cc4:	pop	{r1}		; (ldr r1, [sp], #4)
   10cc8:	mov	r2, sp
   10ccc:	push	{r2}		; (str r2, [sp, #-4]!)
   10cd0:	push	{r0}		; (str r0, [sp, #-4]!)
   10cd4:	ldr	ip, [pc, #16]	; 10cec <_start@@Base+0x30>
   10cd8:	push	{ip}		; (str ip, [sp, #-4]!)
   10cdc:	ldr	r0, [pc, #12]	; 10cf0 <_start@@Base+0x34>
   10ce0:	ldr	r3, [pc, #12]	; 10cf4 <_start@@Base+0x38>
   10ce4:	bl	10ae0 <__libc_start_main@plt>
   10ce8:	bl	10b28 <abort@plt>
   10cec:	andeq	r1, r1, ip, lsl #13
   10cf0:	andeq	r0, r1, r4, lsr fp
   10cf4:	andeq	r1, r1, ip, lsr #12
   10cf8:	ldr	r3, [pc, #20]	; 10d14 <_start@@Base+0x58>
   10cfc:	ldr	r2, [pc, #20]	; 10d18 <_start@@Base+0x5c>
   10d00:	add	r3, pc, r3
   10d04:	ldr	r2, [r3, r2]
   10d08:	cmp	r2, #0
   10d0c:	bxeq	lr
   10d10:	b	10aec <__gmon_start__@plt>
   10d14:	strdeq	r1, [r1], -r8
   10d18:	andeq	r0, r0, ip, asr r0
   10d1c:	ldr	r0, [pc, #24]	; 10d3c <_start@@Base+0x80>
   10d20:	ldr	r3, [pc, #24]	; 10d40 <_start@@Base+0x84>
   10d24:	cmp	r3, r0
   10d28:	bxeq	lr
   10d2c:	ldr	r3, [pc, #16]	; 10d44 <_start@@Base+0x88>
   10d30:	cmp	r3, #0
   10d34:	bxeq	lr
   10d38:	bx	r3
   10d3c:	andeq	r2, r2, r8, rrx
   10d40:	andeq	r2, r2, r8, rrx
   10d44:	andeq	r0, r0, r0
   10d48:	ldr	r0, [pc, #36]	; 10d74 <_start@@Base+0xb8>
   10d4c:	ldr	r1, [pc, #36]	; 10d78 <_start@@Base+0xbc>
   10d50:	sub	r1, r1, r0
   10d54:	asr	r1, r1, #2
   10d58:	add	r1, r1, r1, lsr #31
   10d5c:	asrs	r1, r1, #1
   10d60:	bxeq	lr
   10d64:	ldr	r3, [pc, #16]	; 10d7c <_start@@Base+0xc0>
   10d68:	cmp	r3, #0
   10d6c:	bxeq	lr
   10d70:	bx	r3
   10d74:	andeq	r2, r2, r8, rrx
   10d78:	andeq	r2, r2, r8, rrx
   10d7c:	andeq	r0, r0, r0
   10d80:	push	{r4, lr}
   10d84:	ldr	r4, [pc, #24]	; 10da4 <_start@@Base+0xe8>
   10d88:	ldrb	r3, [r4]
   10d8c:	cmp	r3, #0
   10d90:	popne	{r4, pc}
   10d94:	bl	10d1c <_start@@Base+0x60>
   10d98:	mov	r3, #1
   10d9c:	strb	r3, [r4]
   10da0:	pop	{r4, pc}
   10da4:	andeq	r2, r2, r8, rrx
   10da8:	b	10d48 <_start@@Base+0x8c>

00010dac <vetor_imprime@@Base>:
   10dac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10db0:	strd	r6, [sp, #8]
   10db4:	ldr	r7, [r0]
   10db8:	str	r8, [sp, #16]
   10dbc:	str	lr, [sp, #20]
   10dc0:	cmp	r7, #0
   10dc4:	ble	10e00 <vetor_imprime@@Base+0x54>
   10dc8:	movw	r6, #5788	; 0x169c
   10dcc:	movt	r6, #1
   10dd0:	mov	r5, r0
   10dd4:	mov	r4, #0
   10dd8:	mov	r1, r4
   10ddc:	mov	r0, r5
   10de0:	bl	11188 <vetor_elemento@@Base>
   10de4:	mov	r2, r0
   10de8:	mov	r1, r4
   10dec:	mov	r0, r6
   10df0:	add	r4, r4, #1
   10df4:	bl	10a68 <printf@plt>
   10df8:	cmp	r7, r4
   10dfc:	bne	10dd8 <vetor_imprime@@Base+0x2c>
   10e00:	ldrd	r4, [sp]
   10e04:	ldrd	r6, [sp, #8]
   10e08:	ldr	r8, [sp, #16]
   10e0c:	add	sp, sp, #20
   10e10:	pop	{pc}		; (ldr pc, [sp], #4)

00010e14 <vetor_num_ocorrencias@@Base>:
   10e14:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10e18:	strd	r6, [sp, #8]
   10e1c:	ldr	r7, [r0]
   10e20:	str	r8, [sp, #16]
   10e24:	str	lr, [sp, #20]
   10e28:	cmp	r7, #0
   10e2c:	ble	10e84 <vetor_num_ocorrencias@@Base+0x70>
   10e30:	mov	r4, #0
   10e34:	mov	r6, r1
   10e38:	mov	r5, r0
   10e3c:	mov	r8, r4
   10e40:	mov	r1, r4
   10e44:	mov	r0, r5
   10e48:	bl	11188 <vetor_elemento@@Base>
   10e4c:	mov	r1, r0
   10e50:	mov	r0, r6
   10e54:	bl	10a5c <strcmp@plt>
   10e58:	cmp	r0, #0
   10e5c:	add	r4, r4, #1
   10e60:	addeq	r8, r8, #1
   10e64:	cmp	r7, r4
   10e68:	bne	10e40 <vetor_num_ocorrencias@@Base+0x2c>
   10e6c:	mov	r0, r8
   10e70:	ldrd	r4, [sp]
   10e74:	ldrd	r6, [sp, #8]
   10e78:	ldr	r8, [sp, #16]
   10e7c:	add	sp, sp, #20
   10e80:	pop	{pc}		; (ldr pc, [sp], #4)
   10e84:	mov	r8, #0
   10e88:	b	10e6c <vetor_num_ocorrencias@@Base+0x58>

00010e8c <vetor_remove_repetidas@@Base>:
   10e8c:	ldr	r3, [r0]
   10e90:	cmp	r3, #0
   10e94:	bxle	lr
   10e98:	strd	r4, [sp, #-20]!	; 0xffffffec
   10e9c:	mov	r5, r0
   10ea0:	strd	r6, [sp, #8]
   10ea4:	movw	r7, #5804	; 0x16ac
   10ea8:	movt	r7, #1
   10eac:	mov	r6, #0
   10eb0:	str	lr, [sp, #16]
   10eb4:	sub	sp, sp, #108	; 0x6c
   10eb8:	mov	r1, r6
   10ebc:	mov	r0, r5
   10ec0:	bl	11188 <vetor_elemento@@Base>
   10ec4:	mov	r1, r0
   10ec8:	add	r0, sp, #4
   10ecc:	bl	10abc <strcpy@plt>
   10ed0:	ldr	r3, [r5]
   10ed4:	add	r6, r6, #1
   10ed8:	cmp	r6, r3
   10edc:	bge	10f4c <vetor_remove_repetidas@@Base+0xc0>
   10ee0:	mov	r4, r6
   10ee4:	b	10ef4 <vetor_remove_repetidas@@Base+0x68>
   10ee8:	ldr	r3, [r5]
   10eec:	cmp	r3, r4
   10ef0:	ble	10f44 <vetor_remove_repetidas@@Base+0xb8>
   10ef4:	mov	r1, r4
   10ef8:	mov	r0, r5
   10efc:	bl	11188 <vetor_elemento@@Base>
   10f00:	mov	r1, r0
   10f04:	add	r0, sp, #4
   10f08:	bl	10a5c <strcmp@plt>
   10f0c:	cmp	r0, #0
   10f10:	addne	r4, r4, #1
   10f14:	bne	10ee8 <vetor_remove_repetidas@@Base+0x5c>
   10f18:	mov	r1, r4
   10f1c:	mov	r0, r5
   10f20:	bl	112b4 <vetor_remove@@Base>
   10f24:	cmn	r0, #1
   10f28:	bne	10ee8 <vetor_remove_repetidas@@Base+0x5c>
   10f2c:	mov	r0, r7
   10f30:	add	r4, r4, #1
   10f34:	bl	10ac8 <puts@plt>
   10f38:	ldr	r3, [r5]
   10f3c:	cmp	r3, r4
   10f40:	bgt	10ef4 <vetor_remove_repetidas@@Base+0x68>
   10f44:	cmp	r3, r6
   10f48:	bgt	10eb8 <vetor_remove_repetidas@@Base+0x2c>
   10f4c:	add	sp, sp, #108	; 0x6c
   10f50:	ldrd	r4, [sp]
   10f54:	ldrd	r6, [sp, #8]
   10f58:	add	sp, sp, #16
   10f5c:	pop	{pc}		; (ldr pc, [sp], #4)

00010f60 <vetor_pesquisa_parcial@@Base>:
   10f60:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f64:	mov	r5, r0
   10f68:	strd	r6, [sp, #8]
   10f6c:	mov	r6, r1
   10f70:	str	r8, [sp, #16]
   10f74:	str	lr, [sp, #20]
   10f78:	bl	1100c <vetor_novo@@Base>
   10f7c:	ldr	r3, [r5]
   10f80:	mov	r7, r0
   10f84:	cmp	r3, #0
   10f88:	ble	10fe8 <vetor_pesquisa_parcial@@Base+0x88>
   10f8c:	movw	r8, #5848	; 0x16d8
   10f90:	movt	r8, #1
   10f94:	mov	r4, #0
   10f98:	mov	r1, r4
   10f9c:	mov	r0, r5
   10fa0:	bl	11188 <vetor_elemento@@Base>
   10fa4:	mov	r1, r6
   10fa8:	bl	10a50 <strstr@plt>
   10fac:	cmp	r0, #0
   10fb0:	mov	r1, r4
   10fb4:	mov	r0, r5
   10fb8:	add	r4, r4, #1
   10fbc:	beq	10fdc <vetor_pesquisa_parcial@@Base+0x7c>
   10fc0:	bl	11188 <vetor_elemento@@Base>
   10fc4:	mov	r1, r0
   10fc8:	mov	r2, #0
   10fcc:	mov	r0, r7
   10fd0:	bl	111bc <vetor_insere@@Base>
   10fd4:	cmn	r0, #1
   10fd8:	beq	11000 <vetor_pesquisa_parcial@@Base+0xa0>
   10fdc:	ldr	r3, [r5]
   10fe0:	cmp	r3, r4
   10fe4:	bgt	10f98 <vetor_pesquisa_parcial@@Base+0x38>
   10fe8:	mov	r0, r7
   10fec:	ldrd	r4, [sp]
   10ff0:	ldrd	r6, [sp, #8]
   10ff4:	ldr	r8, [sp, #16]
   10ff8:	add	sp, sp, #20
   10ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   11000:	mov	r0, r8
   11004:	bl	10ac8 <puts@plt>
   11008:	b	10fdc <vetor_pesquisa_parcial@@Base+0x7c>

0001100c <vetor_novo@@Base>:
   1100c:	mov	r0, #12
   11010:	strd	r4, [sp, #-16]!
   11014:	str	r6, [sp, #8]
   11018:	str	lr, [sp, #12]
   1101c:	bl	10ad4 <malloc@plt>
   11020:	cmp	r0, #0
   11024:	beq	1103c <vetor_novo@@Base+0x30>
   11028:	mov	r4, #0
   1102c:	mov	r5, #0
   11030:	mov	r3, #0
   11034:	strd	r4, [r0]
   11038:	str	r3, [r0, #8]
   1103c:	ldrd	r4, [sp]
   11040:	ldr	r6, [sp, #8]
   11044:	add	sp, sp, #12
   11048:	pop	{pc}		; (ldr pc, [sp], #4)

0001104c <vetor_apaga@@Base>:
   1104c:	strd	r4, [sp, #-16]!
   11050:	subs	r5, r0, #0
   11054:	str	r6, [sp, #8]
   11058:	str	lr, [sp, #12]
   1105c:	beq	110ac <vetor_apaga@@Base+0x60>
   11060:	ldr	r3, [r5]
   11064:	cmp	r3, #0
   11068:	ble	1108c <vetor_apaga@@Base+0x40>
   1106c:	mov	r4, #0
   11070:	ldr	r3, [r5, #8]
   11074:	ldr	r0, [r3, r4, lsl #2]
   11078:	add	r4, r4, #1
   1107c:	bl	10a80 <free@plt>
   11080:	ldr	r3, [r5]
   11084:	cmp	r3, r4
   11088:	bgt	11070 <vetor_apaga@@Base+0x24>
   1108c:	ldr	r0, [r5, #8]
   11090:	bl	10a80 <free@plt>
   11094:	mov	r0, r5
   11098:	ldrd	r4, [sp]
   1109c:	ldr	r6, [sp, #8]
   110a0:	ldr	lr, [sp, #12]
   110a4:	add	sp, sp, #16
   110a8:	b	10a80 <free@plt>
   110ac:	ldrd	r4, [sp]
   110b0:	ldr	r6, [sp, #8]
   110b4:	add	sp, sp, #12
   110b8:	pop	{pc}		; (ldr pc, [sp], #4)

000110bc <vetor_atribui@@Base>:
   110bc:	cmp	r0, #0
   110c0:	lsrne	r3, r1, #31
   110c4:	moveq	r3, #1
   110c8:	cmp	r3, #0
   110cc:	bne	11170 <vetor_atribui@@Base+0xb4>
   110d0:	ldr	r3, [r0]
   110d4:	cmp	r3, r1
   110d8:	ble	11170 <vetor_atribui@@Base+0xb4>
   110dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   110e0:	mov	r5, r0
   110e4:	mov	r0, r2
   110e8:	mov	r4, r1
   110ec:	strd	r6, [sp, #8]
   110f0:	mov	r6, r2
   110f4:	strd	r8, [sp, #16]
   110f8:	str	sl, [sp, #24]
   110fc:	str	lr, [sp, #28]
   11100:	bl	10af8 <strlen@plt>
   11104:	ldr	r8, [r5, #8]
   11108:	mov	r9, r0
   1110c:	ldr	r7, [r8, r4, lsl #2]
   11110:	mov	r0, r7
   11114:	bl	10af8 <strlen@plt>
   11118:	cmp	r0, r9
   1111c:	bcc	11148 <vetor_atribui@@Base+0x8c>
   11120:	mov	r1, r6
   11124:	mov	r0, r7
   11128:	bl	10abc <strcpy@plt>
   1112c:	mov	r0, r4
   11130:	ldrd	r4, [sp]
   11134:	ldrd	r6, [sp, #8]
   11138:	ldrd	r8, [sp, #16]
   1113c:	ldr	sl, [sp, #24]
   11140:	add	sp, sp, #28
   11144:	pop	{pc}		; (ldr pc, [sp], #4)
   11148:	mov	r0, r7
   1114c:	add	r1, r9, #1
   11150:	bl	10aa4 <realloc@plt>
   11154:	ldr	r3, [r5, #8]
   11158:	str	r0, [r8, r4, lsl #2]
   1115c:	ldr	r7, [r3, r4, lsl #2]
   11160:	cmp	r7, #0
   11164:	bne	11120 <vetor_atribui@@Base+0x64>
   11168:	mvn	r0, #0
   1116c:	b	11130 <vetor_atribui@@Base+0x74>
   11170:	mvn	r0, #0
   11174:	bx	lr

00011178 <vetor_tamanho@@Base>:
   11178:	cmp	r0, #0
   1117c:	ldrne	r0, [r0]
   11180:	mvneq	r0, #0
   11184:	bx	lr

00011188 <vetor_elemento@@Base>:
   11188:	cmp	r0, #0
   1118c:	lsrne	r3, r1, #31
   11190:	moveq	r3, #1
   11194:	cmp	r3, #0
   11198:	bne	111b4 <vetor_elemento@@Base+0x2c>
   1119c:	ldr	r2, [r0]
   111a0:	cmp	r2, r1
   111a4:	ble	111b4 <vetor_elemento@@Base+0x2c>
   111a8:	ldr	r3, [r0, #8]
   111ac:	ldr	r0, [r3, r1, lsl #2]
   111b0:	bx	lr
   111b4:	mov	r0, #0
   111b8:	bx	lr

000111bc <vetor_insere@@Base>:
   111bc:	cmp	r0, #0
   111c0:	lsrne	r3, r2, #31
   111c4:	moveq	r3, #1
   111c8:	cmp	r3, #0
   111cc:	bne	112ac <vetor_insere@@Base+0xf0>
   111d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   111d4:	strd	r6, [sp, #8]
   111d8:	ldr	r6, [r0]
   111dc:	str	r8, [sp, #16]
   111e0:	str	lr, [sp, #20]
   111e4:	cmp	r6, r2
   111e8:	blt	112a4 <vetor_insere@@Base+0xe8>
   111ec:	ldmib	r0, {r3, r5}
   111f0:	mov	r7, r0
   111f4:	mov	r8, r1
   111f8:	mov	r4, r2
   111fc:	cmp	r6, r3
   11200:	beq	1126c <vetor_insere@@Base+0xb0>
   11204:	cmp	r4, r6
   11208:	addlt	r3, r5, r6, lsl #2
   1120c:	addlt	r2, r5, r4, lsl #2
   11210:	bge	11224 <vetor_insere@@Base+0x68>
   11214:	ldr	ip, [r3, #-4]
   11218:	str	ip, [r3], #-4
   1121c:	cmp	r2, r3
   11220:	bne	11214 <vetor_insere@@Base+0x58>
   11224:	mov	r0, r8
   11228:	bl	10af8 <strlen@plt>
   1122c:	add	r0, r0, #1
   11230:	mov	r1, #1
   11234:	bl	10a44 <calloc@plt>
   11238:	cmp	r0, #0
   1123c:	str	r0, [r5, r4, lsl #2]
   11240:	beq	112a4 <vetor_insere@@Base+0xe8>
   11244:	mov	r1, r8
   11248:	bl	10abc <strcpy@plt>
   1124c:	add	r1, r6, #1
   11250:	mov	r0, r4
   11254:	str	r1, [r7]
   11258:	ldrd	r4, [sp]
   1125c:	ldrd	r6, [sp, #8]
   11260:	ldr	r8, [sp, #16]
   11264:	add	sp, sp, #20
   11268:	pop	{pc}		; (ldr pc, [sp], #4)
   1126c:	cmp	r6, #0
   11270:	mov	r0, r5
   11274:	lslne	r3, r6, #1
   11278:	moveq	r3, #1
   1127c:	moveq	r1, #4
   11280:	lslne	r1, r6, #3
   11284:	str	r3, [r7, #4]
   11288:	bl	10aa4 <realloc@plt>
   1128c:	cmp	r0, #0
   11290:	mov	r5, r0
   11294:	str	r0, [r7, #8]
   11298:	beq	112a4 <vetor_insere@@Base+0xe8>
   1129c:	ldr	r6, [r7]
   112a0:	b	11204 <vetor_insere@@Base+0x48>
   112a4:	mvn	r0, #0
   112a8:	b	11258 <vetor_insere@@Base+0x9c>
   112ac:	mvn	r0, #0
   112b0:	bx	lr

000112b4 <vetor_remove@@Base>:
   112b4:	cmp	r0, #0
   112b8:	lsrne	r3, r1, #31
   112bc:	moveq	r3, #1
   112c0:	cmp	r3, #0
   112c4:	bne	11344 <vetor_remove@@Base+0x90>
   112c8:	ldr	r3, [r0]
   112cc:	cmp	r3, r1
   112d0:	ble	11344 <vetor_remove@@Base+0x90>
   112d4:	ldr	r3, [r0, #8]
   112d8:	strd	r4, [sp, #-16]!
   112dc:	mov	r5, r0
   112e0:	mov	r4, r1
   112e4:	ldr	r0, [r3, r1, lsl #2]
   112e8:	str	r6, [sp, #8]
   112ec:	lsl	r6, r1, #2
   112f0:	str	lr, [sp, #12]
   112f4:	bl	10a80 <free@plt>
   112f8:	ldr	r0, [r5]
   112fc:	add	r1, r4, #1
   11300:	cmp	r1, r0
   11304:	bge	11328 <vetor_remove@@Base+0x74>
   11308:	ldr	r3, [r5, #8]
   1130c:	sub	r1, r3, #4
   11310:	add	r3, r3, r6
   11314:	add	r1, r1, r0, lsl #2
   11318:	ldr	r2, [r3, #4]
   1131c:	str	r2, [r3], #4
   11320:	cmp	r1, r3
   11324:	bne	11318 <vetor_remove@@Base+0x64>
   11328:	sub	r3, r0, #1
   1132c:	ldr	r6, [sp, #8]
   11330:	mov	r0, #0
   11334:	str	r3, [r5]
   11338:	ldrd	r4, [sp]
   1133c:	add	sp, sp, #12
   11340:	pop	{pc}		; (ldr pc, [sp], #4)
   11344:	mvn	r0, #0
   11348:	bx	lr

0001134c <vetor_pesquisa@@Base>:
   1134c:	cmp	r0, #0
   11350:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11354:	strd	r6, [sp, #8]
   11358:	str	r8, [sp, #16]
   1135c:	str	lr, [sp, #20]
   11360:	beq	113bc <vetor_pesquisa@@Base+0x70>
   11364:	ldr	r7, [r0]
   11368:	cmp	r7, #0
   1136c:	ble	113bc <vetor_pesquisa@@Base+0x70>
   11370:	ldr	r5, [r0, #8]
   11374:	mov	r6, r1
   11378:	mov	r4, #0
   1137c:	sub	r5, r5, #4
   11380:	b	11390 <vetor_pesquisa@@Base+0x44>
   11384:	add	r4, r4, #1
   11388:	cmp	r7, r4
   1138c:	beq	113bc <vetor_pesquisa@@Base+0x70>
   11390:	mov	r1, r6
   11394:	ldr	r0, [r5, #4]!
   11398:	bl	10a5c <strcmp@plt>
   1139c:	cmp	r0, #0
   113a0:	bne	11384 <vetor_pesquisa@@Base+0x38>
   113a4:	mov	r0, r4
   113a8:	ldrd	r4, [sp]
   113ac:	ldrd	r6, [sp, #8]
   113b0:	ldr	r8, [sp, #16]
   113b4:	add	sp, sp, #20
   113b8:	pop	{pc}		; (ldr pc, [sp], #4)
   113bc:	mvn	r4, #0
   113c0:	b	113a4 <vetor_pesquisa@@Base+0x58>

000113c4 <vetor_ordena@@Base>:
   113c4:	cmp	r0, #0
   113c8:	beq	1146c <vetor_ordena@@Base+0xa8>
   113cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   113d0:	strd	r6, [sp, #8]
   113d4:	strd	sl, [sp, #24]
   113d8:	ldr	sl, [r0]
   113dc:	strd	r8, [sp, #16]
   113e0:	str	lr, [sp, #32]
   113e4:	sub	sp, sp, #12
   113e8:	cmp	sl, #1
   113ec:	ble	1144c <vetor_ordena@@Base+0x88>
   113f0:	ldr	r3, [r0, #8]
   113f4:	mov	r8, #1
   113f8:	mov	r9, r3
   113fc:	str	r3, [sp, #4]
   11400:	ldr	r7, [r9, #4]!
   11404:	mov	r5, r8
   11408:	mov	r4, r9
   1140c:	ldr	r6, [r4, #-4]
   11410:	mov	r0, r7
   11414:	mov	fp, r4
   11418:	mov	r1, r6
   1141c:	bl	10a5c <strcmp@plt>
   11420:	cmp	r0, #0
   11424:	bge	1143c <vetor_ordena@@Base+0x78>
   11428:	subs	r5, r5, #1
   1142c:	str	r6, [r4]
   11430:	sub	r4, fp, #4
   11434:	bne	1140c <vetor_ordena@@Base+0x48>
   11438:	ldr	fp, [sp, #4]
   1143c:	add	r8, r8, #1
   11440:	str	r7, [fp]
   11444:	cmp	r8, sl
   11448:	bne	11400 <vetor_ordena@@Base+0x3c>
   1144c:	mov	r0, #0
   11450:	add	sp, sp, #12
   11454:	ldrd	r4, [sp]
   11458:	ldrd	r6, [sp, #8]
   1145c:	ldrd	r8, [sp, #16]
   11460:	ldrd	sl, [sp, #24]
   11464:	add	sp, sp, #32
   11468:	pop	{pc}		; (ldr pc, [sp], #4)
   1146c:	mvn	r0, #0
   11470:	bx	lr

00011474 <vetor_concatena@@Base>:
   11474:	clz	r3, r1
   11478:	cmp	r0, #0
   1147c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11480:	lsr	r3, r3, #5
   11484:	moveq	r4, #1
   11488:	strd	r6, [sp, #8]
   1148c:	str	r8, [sp, #16]
   11490:	movne	r4, r3
   11494:	str	lr, [sp, #20]
   11498:	cmp	r4, #0
   1149c:	bne	11514 <vetor_concatena@@Base+0xa0>
   114a0:	mov	r7, r1
   114a4:	mov	r5, r0
   114a8:	mov	r0, #12
   114ac:	bl	10ad4 <malloc@plt>
   114b0:	ldr	r2, [r5]
   114b4:	subs	r6, r0, #0
   114b8:	ldr	r1, [r7]
   114bc:	add	r0, r2, r1, lsl #2
   114c0:	beq	1151c <vetor_concatena@@Base+0xa8>
   114c4:	ldmib	r5, {r3, ip}
   114c8:	str	r4, [r6]
   114cc:	ldr	lr, [r7, #4]
   114d0:	str	r0, [r6, #8]
   114d4:	ldr	r0, [r2, r1, lsl #2]
   114d8:	ldr	r1, [ip]
   114dc:	add	r3, r3, lr
   114e0:	str	r3, [r6, #4]
   114e4:	bl	10abc <strcpy@plt>
   114e8:	ldr	r3, [r6, #8]
   114ec:	ldr	r2, [r7, #8]
   114f0:	ldr	r0, [r3]
   114f4:	ldr	r1, [r2]
   114f8:	bl	10ab0 <strcat@plt>
   114fc:	mov	r0, r6
   11500:	ldrd	r4, [sp]
   11504:	ldrd	r6, [sp, #8]
   11508:	ldr	r8, [sp, #16]
   1150c:	add	sp, sp, #20
   11510:	pop	{pc}		; (ldr pc, [sp], #4)
   11514:	mov	r6, #0
   11518:	b	114fc <vetor_concatena@@Base+0x88>
   1151c:	str	r0, [r6, #8]
   11520:	udf	#0

00011524 <vetor_inverte@@Base>:
   11524:	cmp	r0, #0
   11528:	beq	1158c <vetor_inverte@@Base+0x68>
   1152c:	ldr	r2, [r0]
   11530:	cmp	r2, #0
   11534:	ble	1158c <vetor_inverte@@Base+0x68>
   11538:	ldr	r1, [r0, #8]
   1153c:	mov	r3, r2
   11540:	strd	r4, [sp, #-12]!
   11544:	str	lr, [sp, #8]
   11548:	add	r0, r1, r2, lsl #2
   1154c:	sub	r1, r1, #4
   11550:	ldr	ip, [r1, #4]!
   11554:	sub	r3, r3, #1
   11558:	cmp	r2, r3
   1155c:	sub	r4, r2, r3
   11560:	ldr	lr, [r0]
   11564:	movlt	r5, r2
   11568:	movge	r5, r3
   1156c:	cmp	r5, r4
   11570:	str	lr, [r1]
   11574:	str	ip, [r0], #-4
   11578:	bgt	11550 <vetor_inverte@@Base+0x2c>
   1157c:	ldrd	r4, [sp]
   11580:	add	sp, sp, #8
   11584:	mov	r0, #0
   11588:	pop	{pc}		; (ldr pc, [sp], #4)
   1158c:	mov	r0, #0
   11590:	bx	lr

00011594 <vetor_baralha@@Base>:
   11594:	strd	r4, [sp, #-20]!	; 0xffffffec
   11598:	strd	r6, [sp, #8]
   1159c:	str	lr, [sp, #16]
   115a0:	sub	sp, sp, #12
   115a4:	ldr	r7, [r0]
   115a8:	mov	r0, #12
   115ac:	bl	10ad4 <malloc@plt>
   115b0:	subs	r6, r0, #0
   115b4:	beq	115cc <vetor_baralha@@Base+0x38>
   115b8:	mov	r0, #0
   115bc:	mov	r1, #0
   115c0:	mov	r3, #0
   115c4:	strd	r0, [r6]
   115c8:	str	r3, [r6, #8]
   115cc:	add	r0, sp, #4
   115d0:	bl	10a98 <time@plt>
   115d4:	bl	10b04 <srand@plt>
   115d8:	cmp	r7, #0
   115dc:	ble	11614 <vetor_baralha@@Base+0x80>
   115e0:	add	r5, r7, #1
   115e4:	mov	r4, #0
   115e8:	bl	10b10 <rand@plt>
   115ec:	sdiv	r2, r0, r5
   115f0:	ldr	r3, [r6, #8]
   115f4:	ldr	r1, [r3, r4, lsl #2]
   115f8:	mls	r0, r2, r5, r0
   115fc:	ldr	r2, [r3, r0, lsl #2]
   11600:	str	r2, [r3, r4, lsl #2]
   11604:	add	r4, r4, #1
   11608:	cmp	r7, r4
   1160c:	str	r1, [r3, r0, lsl #2]
   11610:	bne	115e8 <vetor_baralha@@Base+0x54>
   11614:	mov	r0, r6
   11618:	add	sp, sp, #12
   1161c:	ldrd	r4, [sp]
   11620:	ldrd	r6, [sp, #8]
   11624:	add	sp, sp, #16
   11628:	pop	{pc}		; (ldr pc, [sp], #4)

0001162c <__libc_csu_init@@Base>:
   1162c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11630:	mov	r7, r0
   11634:	ldr	r6, [pc, #72]	; 11684 <__libc_csu_init@@Base+0x58>
   11638:	ldr	r5, [pc, #72]	; 11688 <__libc_csu_init@@Base+0x5c>
   1163c:	add	r6, pc, r6
   11640:	add	r5, pc, r5
   11644:	sub	r6, r6, r5
   11648:	mov	r8, r1
   1164c:	mov	r9, r2
   11650:	bl	10a24 <calloc@plt-0x20>
   11654:	asrs	r6, r6, #2
   11658:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1165c:	mov	r4, #0
   11660:	add	r4, r4, #1
   11664:	ldr	r3, [r5], #4
   11668:	mov	r2, r9
   1166c:	mov	r1, r8
   11670:	mov	r0, r7
   11674:	blx	r3
   11678:	cmp	r6, r4
   1167c:	bne	11660 <__libc_csu_init@@Base+0x34>
   11680:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11684:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11688:	andeq	r0, r1, r8, asr #17

0001168c <__libc_csu_fini@@Base>:
   1168c:	bx	lr

Disassembly of section .fini:

00011690 <.fini>:
   11690:	push	{r3, lr}
   11694:	pop	{r3, pc}
