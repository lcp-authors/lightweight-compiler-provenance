
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011a74 <.init>:
   11a74:	push	{r3, lr}
   11a78:	bl	11b6c <_start@@Base+0x3c>
   11a7c:	pop	{r3, pc}

Disassembly of section .plt:

00011a80 <raise@plt-0x14>:
   11a80:	push	{lr}		; (str lr, [sp, #-4]!)
   11a84:	ldr	lr, [pc, #4]	; 11a90 <raise@plt-0x4>
   11a88:	add	lr, pc, lr
   11a8c:	ldr	pc, [lr, #8]!
   11a90:	andeq	r3, r1, r0, ror r5

00011a94 <raise@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #77824	; 0x13000
   11a9c:	ldr	pc, [ip, #1392]!	; 0x570

00011aa0 <strcmp@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #77824	; 0x13000
   11aa8:	ldr	pc, [ip, #1384]!	; 0x568

00011aac <printf@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #77824	; 0x13000
   11ab4:	ldr	pc, [ip, #1376]!	; 0x560

00011ab8 <free@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #77824	; 0x13000
   11ac0:	ldr	pc, [ip, #1368]!	; 0x558

00011ac4 <realloc@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #77824	; 0x13000
   11acc:	ldr	pc, [ip, #1360]!	; 0x550

00011ad0 <strcpy@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #77824	; 0x13000
   11ad8:	ldr	pc, [ip, #1352]!	; 0x548

00011adc <malloc@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #77824	; 0x13000
   11ae4:	ldr	pc, [ip, #1344]!	; 0x540

00011ae8 <__libc_start_main@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #77824	; 0x13000
   11af0:	ldr	pc, [ip, #1336]!	; 0x538

00011af4 <__gmon_start__@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #77824	; 0x13000
   11afc:	ldr	pc, [ip, #1328]!	; 0x530

00011b00 <strlen@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #77824	; 0x13000
   11b08:	ldr	pc, [ip, #1320]!	; 0x528

00011b0c <snprintf@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #77824	; 0x13000
   11b14:	ldr	pc, [ip, #1312]!	; 0x520

00011b18 <__isoc99_sscanf@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #77824	; 0x13000
   11b20:	ldr	pc, [ip, #1304]!	; 0x518

00011b24 <abort@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #77824	; 0x13000
   11b2c:	ldr	pc, [ip, #1296]!	; 0x510

Disassembly of section .text:

00011b30 <_start@@Base>:
   11b30:	mov	fp, #0
   11b34:	mov	lr, #0
   11b38:	pop	{r1}		; (ldr r1, [sp], #4)
   11b3c:	mov	r2, sp
   11b40:	push	{r2}		; (str r2, [sp, #-4]!)
   11b44:	push	{r0}		; (str r0, [sp, #-4]!)
   11b48:	ldr	ip, [pc, #16]	; 11b60 <_start@@Base+0x30>
   11b4c:	push	{ip}		; (str ip, [sp, #-4]!)
   11b50:	ldr	r0, [pc, #12]	; 11b64 <_start@@Base+0x34>
   11b54:	ldr	r3, [pc, #12]	; 11b68 <_start@@Base+0x38>
   11b58:	bl	11ae8 <__libc_start_main@plt>
   11b5c:	bl	11b24 <abort@plt>
   11b60:	andeq	r4, r1, r0, asr #28
   11b64:	andeq	r1, r1, r8, asr ip
   11b68:	andeq	r4, r1, r0, ror #27
   11b6c:	ldr	r3, [pc, #20]	; 11b88 <_start@@Base+0x58>
   11b70:	ldr	r2, [pc, #20]	; 11b8c <_start@@Base+0x5c>
   11b74:	add	r3, pc, r3
   11b78:	ldr	r2, [r3, r2]
   11b7c:	cmp	r2, #0
   11b80:	bxeq	lr
   11b84:	b	11af4 <__gmon_start__@plt>
   11b88:	andeq	r3, r1, r4, lsl #9
   11b8c:	andeq	r0, r0, r0, asr #32
   11b90:	ldr	r3, [pc, #28]	; 11bb4 <_start@@Base+0x84>
   11b94:	ldr	r0, [pc, #28]	; 11bb8 <_start@@Base+0x88>
   11b98:	sub	r3, r3, r0
   11b9c:	cmp	r3, #6
   11ba0:	bxls	lr
   11ba4:	ldr	r3, [pc, #16]	; 11bbc <_start@@Base+0x8c>
   11ba8:	cmp	r3, #0
   11bac:	bxeq	lr
   11bb0:	bx	r3
   11bb4:	andeq	r5, r2, pc, asr #32
   11bb8:	andeq	r5, r2, ip, asr #32
   11bbc:	andeq	r0, r0, r0
   11bc0:	ldr	r1, [pc, #36]	; 11bec <_start@@Base+0xbc>
   11bc4:	ldr	r0, [pc, #36]	; 11bf0 <_start@@Base+0xc0>
   11bc8:	sub	r1, r1, r0
   11bcc:	asr	r1, r1, #2
   11bd0:	add	r1, r1, r1, lsr #31
   11bd4:	asrs	r1, r1, #1
   11bd8:	bxeq	lr
   11bdc:	ldr	r3, [pc, #16]	; 11bf4 <_start@@Base+0xc4>
   11be0:	cmp	r3, #0
   11be4:	bxeq	lr
   11be8:	bx	r3
   11bec:	andeq	r5, r2, ip, asr #32
   11bf0:	andeq	r5, r2, ip, asr #32
   11bf4:	andeq	r0, r0, r0
   11bf8:	push	{r4, lr}
   11bfc:	ldr	r4, [pc, #24]	; 11c1c <_start@@Base+0xec>
   11c00:	ldrb	r3, [r4]
   11c04:	cmp	r3, #0
   11c08:	popne	{r4, pc}
   11c0c:	bl	11b90 <_start@@Base+0x60>
   11c10:	mov	r3, #1
   11c14:	strb	r3, [r4]
   11c18:	pop	{r4, pc}
   11c1c:	andeq	r5, r2, ip, asr #32
   11c20:	ldr	r0, [pc, #40]	; 11c50 <_start@@Base+0x120>
   11c24:	ldr	r3, [r0]
   11c28:	cmp	r3, #0
   11c2c:	bne	11c34 <_start@@Base+0x104>
   11c30:	b	11bc0 <_start@@Base+0x90>
   11c34:	ldr	r3, [pc, #24]	; 11c54 <_start@@Base+0x124>
   11c38:	cmp	r3, #0
   11c3c:	beq	11c30 <_start@@Base+0x100>
   11c40:	push	{r4, lr}
   11c44:	blx	r3
   11c48:	pop	{r4, lr}
   11c4c:	b	11bc0 <_start@@Base+0x90>
   11c50:	andeq	r4, r2, r4, lsl pc
   11c54:	andeq	r0, r0, r0

00011c58 <main@@Base>:
   11c58:	push	{r4, r5, r6, lr}
   11c5c:	sub	sp, sp, #56	; 0x38
   11c60:	mov	r0, sp
   11c64:	bl	11d2c <table_init@@Base>
   11c68:	mov	r2, #0
   11c6c:	ldr	r1, [pc, #168]	; 11d1c <main@@Base+0xc4>
   11c70:	mov	r0, sp
   11c74:	bl	12734 <table_add_column@@Base>
   11c78:	mov	r6, r0
   11c7c:	mov	r2, #21
   11c80:	ldr	r1, [pc, #152]	; 11d20 <main@@Base+0xc8>
   11c84:	mov	r0, sp
   11c88:	bl	12734 <table_add_column@@Base>
   11c8c:	mov	r5, r0
   11c90:	mov	r0, sp
   11c94:	bl	126b8 <table_get_column_length@@Base>
   11c98:	cmp	r0, #2
   11c9c:	moveq	r4, #0
   11ca0:	beq	11cb0 <main@@Base+0x58>
   11ca4:	ldr	r0, [pc, #120]	; 11d24 <main@@Base+0xcc>
   11ca8:	bl	11aac <printf@plt>
   11cac:	mvn	r4, #0
   11cb0:	mov	r1, r6
   11cb4:	mov	r0, sp
   11cb8:	bl	129c4 <table_get_column_name@@Base>
   11cbc:	ldr	r1, [pc, #88]	; 11d1c <main@@Base+0xc4>
   11cc0:	bl	11aa0 <strcmp@plt>
   11cc4:	cmp	r0, #0
   11cc8:	bne	11cfc <main@@Base+0xa4>
   11ccc:	mov	r1, r5
   11cd0:	mov	r0, sp
   11cd4:	bl	129c4 <table_get_column_name@@Base>
   11cd8:	ldr	r1, [pc, #64]	; 11d20 <main@@Base+0xc8>
   11cdc:	bl	11aa0 <strcmp@plt>
   11ce0:	cmp	r0, #0
   11ce4:	bne	11d0c <main@@Base+0xb4>
   11ce8:	mov	r0, sp
   11cec:	bl	11d90 <table_destroy@@Base>
   11cf0:	mov	r0, r4
   11cf4:	add	sp, sp, #56	; 0x38
   11cf8:	pop	{r4, r5, r6, pc}
   11cfc:	ldr	r0, [pc, #36]	; 11d28 <main@@Base+0xd0>
   11d00:	bl	11aac <printf@plt>
   11d04:	mvn	r4, #0
   11d08:	b	11ccc <main@@Base+0x74>
   11d0c:	ldr	r0, [pc, #20]	; 11d28 <main@@Base+0xd0>
   11d10:	bl	11aac <printf@plt>
   11d14:	mvn	r4, #0
   11d18:	b	11ce8 <main@@Base+0x90>
   11d1c:	andeq	r4, r1, r0, asr lr
   11d20:	andeq	r4, r1, r4, asr lr
   11d24:	andeq	r4, r1, ip, asr lr
   11d28:	andeq	r4, r1, r4, lsl #29

00011d2c <table_init@@Base>:
   11d2c:	mov	r3, #0
   11d30:	str	r3, [r0]
   11d34:	str	r3, [r0, #4]
   11d38:	str	r3, [r0, #12]
   11d3c:	mov	r2, #10
   11d40:	str	r2, [r0, #8]
   11d44:	str	r3, [r0, #16]
   11d48:	str	r3, [r0, #20]
   11d4c:	str	r3, [r0, #28]
   11d50:	mov	r1, #20
   11d54:	str	r1, [r0, #24]
   11d58:	str	r3, [r0, #36]	; 0x24
   11d5c:	str	r3, [r0, #40]	; 0x28
   11d60:	str	r3, [r0, #44]	; 0x2c
   11d64:	str	r3, [r0, #32]
   11d68:	str	r3, [r0, #52]	; 0x34
   11d6c:	str	r2, [r0, #48]	; 0x30
   11d70:	bx	lr

00011d74 <table_new@@Base>:
   11d74:	push	{r4, lr}
   11d78:	mov	r0, #56	; 0x38
   11d7c:	bl	11adc <malloc@plt>
   11d80:	mov	r4, r0
   11d84:	bl	11d2c <table_init@@Base>
   11d88:	mov	r0, r4
   11d8c:	pop	{r4, pc}

00011d90 <table_destroy@@Base>:
   11d90:	push	{r4, r5, r6, lr}
   11d94:	subs	r5, r0, #0
   11d98:	popeq	{r4, r5, r6, pc}
   11d9c:	mov	r3, #64	; 0x40
   11da0:	mvn	r2, #0
   11da4:	mov	r1, r2
   11da8:	mov	r0, r5
   11dac:	bl	125c8 <table_notify@@Base>
   11db0:	mov	r0, r5
   11db4:	bl	1348c <table_get_row_length@@Base>
   11db8:	subs	r6, r0, #0
   11dbc:	ble	11ddc <table_destroy@@Base+0x4c>
   11dc0:	mov	r4, #0
   11dc4:	mov	r1, r4
   11dc8:	mov	r0, r5
   11dcc:	bl	1343c <table_row_destroy@@Base>
   11dd0:	add	r4, r4, #1
   11dd4:	cmp	r6, r4
   11dd8:	bne	11dc4 <table_destroy@@Base+0x34>
   11ddc:	ldr	r0, [r5, #16]
   11de0:	cmp	r0, #0
   11de4:	beq	11dec <table_destroy@@Base+0x5c>
   11de8:	bl	11ab8 <free@plt>
   11dec:	mov	r0, r5
   11df0:	bl	126b8 <table_get_column_length@@Base>
   11df4:	subs	r6, r0, #0
   11df8:	ble	11e18 <table_destroy@@Base+0x88>
   11dfc:	mov	r4, #0
   11e00:	mov	r1, r4
   11e04:	mov	r0, r5
   11e08:	bl	12698 <table_column_destroy@@Base>
   11e0c:	add	r4, r4, #1
   11e10:	cmp	r6, r4
   11e14:	bne	11e00 <table_destroy@@Base+0x70>
   11e18:	ldr	r0, [r5]
   11e1c:	cmp	r0, #0
   11e20:	beq	11e28 <table_destroy@@Base+0x98>
   11e24:	bl	11ab8 <free@plt>
   11e28:	ldr	r0, [r5, #36]	; 0x24
   11e2c:	cmp	r0, #0
   11e30:	beq	11e38 <table_destroy@@Base+0xa8>
   11e34:	bl	11ab8 <free@plt>
   11e38:	ldr	r0, [r5, #40]	; 0x28
   11e3c:	cmp	r0, #0
   11e40:	beq	11e48 <table_destroy@@Base+0xb8>
   11e44:	bl	11ab8 <free@plt>
   11e48:	ldr	r0, [r5, #44]	; 0x2c
   11e4c:	cmp	r0, #0
   11e50:	popeq	{r4, r5, r6, pc}
   11e54:	bl	11ab8 <free@plt>
   11e58:	pop	{r4, r5, r6, pc}

00011e5c <table_delete@@Base>:
   11e5c:	push	{r4, lr}
   11e60:	mov	r4, r0
   11e64:	bl	11d90 <table_destroy@@Base>
   11e68:	mov	r0, r4
   11e6c:	bl	11ab8 <free@plt>
   11e70:	pop	{r4, pc}

00011e74 <table_dupe@@Base>:
   11e74:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e78:	sub	sp, sp, #20
   11e7c:	mov	r6, r0
   11e80:	bl	1348c <table_get_row_length@@Base>
   11e84:	mov	r9, r0
   11e88:	mov	r0, r6
   11e8c:	bl	126b8 <table_get_column_length@@Base>
   11e90:	mov	r7, r0
   11e94:	bl	11d74 <table_new@@Base>
   11e98:	mov	r8, r0
   11e9c:	cmp	r7, #0
   11ea0:	ble	11ee0 <table_dupe@@Base+0x6c>
   11ea4:	mov	r4, #0
   11ea8:	mov	r1, r4
   11eac:	mov	r0, r6
   11eb0:	bl	129c4 <table_get_column_name@@Base>
   11eb4:	mov	r5, r0
   11eb8:	mov	r1, r4
   11ebc:	mov	r0, r6
   11ec0:	bl	12720 <table_get_column_data_type@@Base>
   11ec4:	mov	r2, r0
   11ec8:	mov	r1, r5
   11ecc:	mov	r0, r8
   11ed0:	bl	12734 <table_add_column@@Base>
   11ed4:	add	r4, r4, #1
   11ed8:	cmp	r7, r4
   11edc:	bne	11ea8 <table_dupe@@Base+0x34>
   11ee0:	cmp	r9, #0
   11ee4:	ble	1234c <table_dupe@@Base+0x4d8>
   11ee8:	mov	r5, #0
   11eec:	b	12334 <table_dupe@@Base+0x4c0>
   11ef0:	mov	r2, r4
   11ef4:	mov	r1, r5
   11ef8:	mov	r0, r6
   11efc:	bl	132b4 <table_get_int@@Base>
   11f00:	mov	r3, r0
   11f04:	mov	r2, r4
   11f08:	mov	r1, r5
   11f0c:	mov	r0, r8
   11f10:	bl	13cf0 <table_set_int@@Base>
   11f14:	add	r4, r4, #1
   11f18:	cmp	r7, r4
   11f1c:	beq	12328 <table_dupe@@Base+0x4b4>
   11f20:	mov	r1, r4
   11f24:	mov	r0, r6
   11f28:	bl	12720 <table_get_column_data_type@@Base>
   11f2c:	cmp	r0, #23
   11f30:	ldrls	pc, [pc, r0, lsl #2]
   11f34:	b	11f14 <table_dupe@@Base+0xa0>
   11f38:	strdeq	r1, [r1], -r0
   11f3c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11f40:	andeq	r1, r1, r0, asr #31
   11f44:	andeq	r1, r1, r8, ror #31
   11f48:	andeq	r2, r1, r0, lsl r0
   11f4c:	andeq	r2, r1, r8, lsr r0
   11f50:	andeq	r2, r1, r0, rrx
   11f54:	andeq	r2, r1, r8, lsl #1
   11f58:	strheq	r2, [r1], -r0
   11f5c:	ldrdeq	r2, [r1], -r8
   11f60:	andeq	r2, r1, r0, lsl #2
   11f64:	andeq	r2, r1, r8, lsr #2
   11f68:	andeq	r2, r1, r0, asr r1
   11f6c:	andeq	r2, r1, r8, ror r1
   11f70:	andeq	r2, r1, r0, lsr #3
   11f74:	andeq	r2, r1, r8, asr #3
   11f78:	andeq	r2, r1, r8, lsl r2
   11f7c:	andeq	r2, r1, ip, lsr r2
   11f80:	andeq	r2, r1, r0, ror #4
   11f84:	andeq	r2, r1, ip, lsr #5
   11f88:	ldrdeq	r2, [r1], -r4
   11f8c:	strdeq	r2, [r1], -r0
   11f90:	andeq	r2, r1, r4, lsl #5
   11f94:	strdeq	r2, [r1], -ip
   11f98:	mov	r2, r4
   11f9c:	mov	r1, r5
   11fa0:	mov	r0, r6
   11fa4:	bl	132c4 <table_get_uint@@Base>
   11fa8:	mov	r3, r0
   11fac:	mov	r2, r4
   11fb0:	mov	r1, r5
   11fb4:	mov	r0, r8
   11fb8:	bl	13d18 <table_set_uint@@Base>
   11fbc:	b	11f14 <table_dupe@@Base+0xa0>
   11fc0:	mov	r2, r4
   11fc4:	mov	r1, r5
   11fc8:	mov	r0, r6
   11fcc:	bl	132d4 <table_get_int8@@Base>
   11fd0:	mov	r3, r0
   11fd4:	mov	r2, r4
   11fd8:	mov	r1, r5
   11fdc:	mov	r0, r8
   11fe0:	bl	13d40 <table_set_int8@@Base>
   11fe4:	b	11f14 <table_dupe@@Base+0xa0>
   11fe8:	mov	r2, r4
   11fec:	mov	r1, r5
   11ff0:	mov	r0, r6
   11ff4:	bl	132e4 <table_get_uint8@@Base>
   11ff8:	mov	r3, r0
   11ffc:	mov	r2, r4
   12000:	mov	r1, r5
   12004:	mov	r0, r8
   12008:	bl	13d68 <table_set_uint8@@Base>
   1200c:	b	11f14 <table_dupe@@Base+0xa0>
   12010:	mov	r2, r4
   12014:	mov	r1, r5
   12018:	mov	r0, r6
   1201c:	bl	132f4 <table_get_int16@@Base>
   12020:	mov	r3, r0
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r0, r8
   12030:	bl	13d90 <table_set_int16@@Base>
   12034:	b	11f14 <table_dupe@@Base+0xa0>
   12038:	mov	r2, r4
   1203c:	mov	r1, r5
   12040:	mov	r0, r6
   12044:	bl	13304 <table_get_uint16@@Base>
   12048:	mov	r3, r0
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r0, r8
   12058:	bl	13db8 <table_set_uint16@@Base>
   1205c:	b	11f14 <table_dupe@@Base+0xa0>
   12060:	mov	r2, r4
   12064:	mov	r1, r5
   12068:	mov	r0, r6
   1206c:	bl	13314 <table_get_int32@@Base>
   12070:	mov	r3, r0
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	mov	r0, r8
   12080:	bl	13de0 <table_set_int32@@Base>
   12084:	b	11f14 <table_dupe@@Base+0xa0>
   12088:	mov	r2, r4
   1208c:	mov	r1, r5
   12090:	mov	r0, r6
   12094:	bl	13324 <table_get_uint32@@Base>
   12098:	mov	r3, r0
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	mov	r0, r8
   120a8:	bl	13e08 <table_set_uint32@@Base>
   120ac:	b	11f14 <table_dupe@@Base+0xa0>
   120b0:	mov	r2, r4
   120b4:	mov	r1, r5
   120b8:	mov	r0, r6
   120bc:	bl	13334 <table_get_int64@@Base>
   120c0:	strd	r0, [sp]
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	mov	r0, r8
   120d0:	bl	13e30 <table_set_int64@@Base>
   120d4:	b	11f14 <table_dupe@@Base+0xa0>
   120d8:	mov	r2, r4
   120dc:	mov	r1, r5
   120e0:	mov	r0, r6
   120e4:	bl	13344 <table_get_uint64@@Base>
   120e8:	strd	r0, [sp]
   120ec:	mov	r2, r4
   120f0:	mov	r1, r5
   120f4:	mov	r0, r8
   120f8:	bl	13e50 <table_set_uint64@@Base>
   120fc:	b	11f14 <table_dupe@@Base+0xa0>
   12100:	mov	r2, r4
   12104:	mov	r1, r5
   12108:	mov	r0, r6
   1210c:	bl	13354 <table_get_short@@Base>
   12110:	mov	r3, r0
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r0, r8
   12120:	bl	13e70 <table_set_short@@Base>
   12124:	b	11f14 <table_dupe@@Base+0xa0>
   12128:	mov	r2, r4
   1212c:	mov	r1, r5
   12130:	mov	r0, r6
   12134:	bl	13364 <table_get_ushort@@Base>
   12138:	mov	r3, r0
   1213c:	mov	r2, r4
   12140:	mov	r1, r5
   12144:	mov	r0, r8
   12148:	bl	13e98 <table_set_ushort@@Base>
   1214c:	b	11f14 <table_dupe@@Base+0xa0>
   12150:	mov	r2, r4
   12154:	mov	r1, r5
   12158:	mov	r0, r6
   1215c:	bl	13374 <table_get_long@@Base>
   12160:	mov	r3, r0
   12164:	mov	r2, r4
   12168:	mov	r1, r5
   1216c:	mov	r0, r8
   12170:	bl	13ec0 <table_set_long@@Base>
   12174:	b	11f14 <table_dupe@@Base+0xa0>
   12178:	mov	r2, r4
   1217c:	mov	r1, r5
   12180:	mov	r0, r6
   12184:	bl	13384 <table_get_ulong@@Base>
   12188:	mov	r3, r0
   1218c:	mov	r2, r4
   12190:	mov	r1, r5
   12194:	mov	r0, r8
   12198:	bl	13ee8 <table_set_ulong@@Base>
   1219c:	b	11f14 <table_dupe@@Base+0xa0>
   121a0:	mov	r2, r4
   121a4:	mov	r1, r5
   121a8:	mov	r0, r6
   121ac:	bl	13394 <table_get_llong@@Base>
   121b0:	strd	r0, [sp]
   121b4:	mov	r2, r4
   121b8:	mov	r1, r5
   121bc:	mov	r0, r8
   121c0:	bl	13f10 <table_set_llong@@Base>
   121c4:	b	11f14 <table_dupe@@Base+0xa0>
   121c8:	mov	r2, r4
   121cc:	mov	r1, r5
   121d0:	mov	r0, r6
   121d4:	bl	133a4 <table_get_ullong@@Base>
   121d8:	strd	r0, [sp]
   121dc:	mov	r2, r4
   121e0:	mov	r1, r5
   121e4:	mov	r0, r8
   121e8:	bl	13f30 <table_set_ullong@@Base>
   121ec:	b	11f14 <table_dupe@@Base+0xa0>
   121f0:	mov	r2, r4
   121f4:	mov	r1, r5
   121f8:	mov	r0, r6
   121fc:	bl	13404 <table_get_string@@Base>
   12200:	mov	r3, r0
   12204:	mov	r2, r4
   12208:	mov	r1, r5
   1220c:	mov	r0, r8
   12210:	bl	13fbc <table_set_string@@Base>
   12214:	b	11f14 <table_dupe@@Base+0xa0>
   12218:	mov	r2, r4
   1221c:	mov	r1, r5
   12220:	mov	r0, r6
   12224:	bl	133b4 <table_get_float@@Base>
   12228:	mov	r2, r4
   1222c:	mov	r1, r5
   12230:	mov	r0, r8
   12234:	bl	13f50 <table_set_float@@Base>
   12238:	b	11f14 <table_dupe@@Base+0xa0>
   1223c:	mov	r2, r4
   12240:	mov	r1, r5
   12244:	mov	r0, r6
   12248:	bl	133c4 <table_get_double@@Base>
   1224c:	mov	r2, r4
   12250:	mov	r1, r5
   12254:	mov	r0, r8
   12258:	bl	13f74 <table_set_double@@Base>
   1225c:	b	11f14 <table_dupe@@Base+0xa0>
   12260:	mov	r2, r4
   12264:	mov	r1, r5
   12268:	mov	r0, r6
   1226c:	bl	133d4 <table_get_ldouble@@Base>
   12270:	mov	r2, r4
   12274:	mov	r1, r5
   12278:	mov	r0, r8
   1227c:	bl	13f98 <table_set_ldouble@@Base>
   12280:	b	11f14 <table_dupe@@Base+0xa0>
   12284:	mov	r2, r4
   12288:	mov	r1, r5
   1228c:	mov	r0, r6
   12290:	bl	132a4 <table_get_bool@@Base>
   12294:	mov	r3, r0
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r0, r8
   122a4:	bl	13cc8 <table_set_bool@@Base>
   122a8:	b	11f14 <table_dupe@@Base+0xa0>
   122ac:	mov	r2, r4
   122b0:	mov	r1, r5
   122b4:	mov	r0, r6
   122b8:	bl	133e4 <table_get_char@@Base>
   122bc:	mov	r3, r0
   122c0:	mov	r2, r4
   122c4:	mov	r1, r5
   122c8:	mov	r0, r8
   122cc:	bl	13fd8 <table_set_char@@Base>
   122d0:	b	11f14 <table_dupe@@Base+0xa0>
   122d4:	mov	r2, r4
   122d8:	mov	r1, r5
   122dc:	mov	r0, r6
   122e0:	bl	133f4 <table_get_uchar@@Base>
   122e4:	mov	r3, r0
   122e8:	mov	r2, r4
   122ec:	mov	r1, r5
   122f0:	mov	r0, r8
   122f4:	bl	14000 <table_set_uchar@@Base>
   122f8:	b	11f14 <table_dupe@@Base+0xa0>
   122fc:	mov	r2, r4
   12300:	mov	r1, r5
   12304:	mov	r0, r6
   12308:	bl	13410 <table_get_ptr@@Base>
   1230c:	str	r0, [sp, #12]
   12310:	add	r3, sp, #12
   12314:	mov	r2, r4
   12318:	mov	r1, r5
   1231c:	mov	r0, r8
   12320:	bl	14028 <table_set_ptr@@Base>
   12324:	b	11f14 <table_dupe@@Base+0xa0>
   12328:	add	r5, r5, #1
   1232c:	cmp	r9, r5
   12330:	beq	1234c <table_dupe@@Base+0x4d8>
   12334:	mov	r0, r8
   12338:	bl	13494 <table_add_row@@Base>
   1233c:	cmp	r7, #0
   12340:	ble	12328 <table_dupe@@Base+0x4b4>
   12344:	mov	r4, #0
   12348:	b	11f20 <table_dupe@@Base+0xac>
   1234c:	mov	r0, r8
   12350:	add	sp, sp, #20
   12354:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012358 <table_get_major_version@@Base>:
   12358:	mov	r0, #0
   1235c:	bx	lr

00012360 <table_get_minor_version@@Base>:
   12360:	mov	r0, #0
   12364:	bx	lr

00012368 <table_get_patch_version@@Base>:
   12368:	mov	r0, #0
   1236c:	bx	lr

00012370 <table_get_version@@Base>:
   12370:	ldr	r0, [pc]	; 12378 <table_get_version@@Base+0x8>
   12374:	bx	lr
   12378:	andeq	r4, r1, r8, ror #29

0001237c <table_get_callback_length@@Base>:
   1237c:	ldr	r0, [r0, #32]
   12380:	bx	lr

00012384 <table_register_callback@@Base>:
   12384:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12388:	ldr	r5, [r0, #32]
   1238c:	cmp	r5, #0
   12390:	ble	123ec <table_register_callback@@Base+0x68>
   12394:	ldr	lr, [r0, #36]	; 0x24
   12398:	sub	lr, lr, #4
   1239c:	mov	ip, #0
   123a0:	b	123b0 <table_register_callback@@Base+0x2c>
   123a4:	add	ip, ip, #1
   123a8:	cmp	ip, r5
   123ac:	beq	123ec <table_register_callback@@Base+0x68>
   123b0:	lsl	r6, ip, #2
   123b4:	ldr	r4, [lr, #4]!
   123b8:	cmp	r1, r4
   123bc:	bne	123a4 <table_register_callback@@Base+0x20>
   123c0:	ldr	r4, [r0, #40]	; 0x28
   123c4:	ldr	r4, [r4, ip, lsl #2]
   123c8:	cmp	r2, r4
   123cc:	bne	123a4 <table_register_callback@@Base+0x20>
   123d0:	cmp	ip, #0
   123d4:	ble	123ec <table_register_callback@@Base+0x68>
   123d8:	ldr	r1, [r0, #44]	; 0x2c
   123dc:	ldr	r2, [r1, r6]
   123e0:	orr	r3, r2, r3
   123e4:	str	r3, [r1, r6]
   123e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123ec:	mov	r7, r3
   123f0:	mov	r4, r2
   123f4:	mov	r9, r1
   123f8:	mov	r6, r0
   123fc:	ldr	r8, [r0, #48]	; 0x30
   12400:	mov	r1, r8
   12404:	mov	r0, r5
   12408:	bl	14db0 <table_cell_nullify@@Base+0x218>
   1240c:	cmp	r1, #0
   12410:	beq	12440 <table_register_callback@@Base+0xbc>
   12414:	ldr	r3, [r6, #32]
   12418:	ldr	r2, [r6, #36]	; 0x24
   1241c:	str	r9, [r2, r3, lsl #2]
   12420:	ldr	r2, [r6, #40]	; 0x28
   12424:	str	r4, [r2, r3, lsl #2]
   12428:	ldr	r2, [r6, #44]	; 0x2c
   1242c:	str	r7, [r2, r3, lsl #2]
   12430:	ldr	r3, [r6, #32]
   12434:	add	r3, r3, #1
   12438:	str	r3, [r6, #32]
   1243c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12440:	ldr	r1, [r6, #52]	; 0x34
   12444:	add	r1, r8, r1
   12448:	str	r1, [r6, #52]	; 0x34
   1244c:	lsl	r1, r1, #2
   12450:	ldr	r0, [r6, #36]	; 0x24
   12454:	bl	11ac4 <realloc@plt>
   12458:	str	r0, [r6, #36]	; 0x24
   1245c:	ldr	r1, [r6, #52]	; 0x34
   12460:	lsl	r1, r1, #2
   12464:	ldr	r0, [r6, #40]	; 0x28
   12468:	bl	11ac4 <realloc@plt>
   1246c:	str	r0, [r6, #40]	; 0x28
   12470:	ldr	r1, [r6, #52]	; 0x34
   12474:	lsl	r1, r1, #2
   12478:	ldr	r0, [r6, #44]	; 0x2c
   1247c:	bl	11ac4 <realloc@plt>
   12480:	str	r0, [r6, #44]	; 0x2c
   12484:	b	12414 <table_register_callback@@Base+0x90>

00012488 <table_unregister_callback@@Base>:
   12488:	push	{r4, r5, r6, lr}
   1248c:	ldr	lr, [r0, #32]
   12490:	cmp	lr, #0
   12494:	pople	{r4, r5, r6, pc}
   12498:	ldr	r4, [r0, #36]	; 0x24
   1249c:	sub	r4, r4, #4
   124a0:	mov	r3, #0
   124a4:	b	124b4 <table_unregister_callback@@Base+0x2c>
   124a8:	add	r3, r3, #1
   124ac:	cmp	r3, lr
   124b0:	beq	12588 <table_unregister_callback@@Base+0x100>
   124b4:	lsl	ip, r3, #2
   124b8:	ldr	r5, [r4, #4]!
   124bc:	cmp	r1, r5
   124c0:	bne	124a8 <table_unregister_callback@@Base+0x20>
   124c4:	ldr	r5, [r0, #40]	; 0x28
   124c8:	ldr	r5, [r5, r3, lsl #2]
   124cc:	cmp	r2, r5
   124d0:	bne	124a8 <table_unregister_callback@@Base+0x20>
   124d4:	cmn	r3, #1
   124d8:	popeq	{r4, r5, r6, pc}
   124dc:	sub	lr, lr, #1
   124e0:	cmp	lr, r3
   124e4:	ble	12528 <table_unregister_callback@@Base+0xa0>
   124e8:	ldr	r1, [r0, #36]	; 0x24
   124ec:	add	r2, ip, #4
   124f0:	ldr	lr, [r1, r2]
   124f4:	str	lr, [r1, ip]
   124f8:	ldr	r1, [r0, #40]	; 0x28
   124fc:	ldr	lr, [r1, r2]
   12500:	str	lr, [r1, ip]
   12504:	ldr	r1, [r0, #44]	; 0x2c
   12508:	ldr	lr, [r1, r2]
   1250c:	str	lr, [r1, ip]
   12510:	add	r3, r3, #1
   12514:	ldr	lr, [r0, #32]
   12518:	sub	lr, lr, #1
   1251c:	mov	ip, r2
   12520:	cmp	lr, r3
   12524:	bgt	124e8 <table_unregister_callback@@Base+0x60>
   12528:	mov	r4, r0
   1252c:	str	lr, [r0, #32]
   12530:	ldr	r5, [r0, #48]	; 0x30
   12534:	mov	r1, r5
   12538:	mov	r0, lr
   1253c:	bl	14db0 <table_cell_nullify@@Base+0x218>
   12540:	cmp	r1, #0
   12544:	popne	{r4, r5, r6, pc}
   12548:	ldr	r1, [r4, #52]	; 0x34
   1254c:	sub	r1, r1, r5
   12550:	str	r1, [r4, #52]	; 0x34
   12554:	cmp	r1, #0
   12558:	bne	1258c <table_unregister_callback@@Base+0x104>
   1255c:	ldr	r0, [r4, #36]	; 0x24
   12560:	bl	11ab8 <free@plt>
   12564:	ldr	r0, [r4, #40]	; 0x28
   12568:	bl	11ab8 <free@plt>
   1256c:	ldr	r0, [r4, #44]	; 0x2c
   12570:	bl	11ab8 <free@plt>
   12574:	mov	r3, #0
   12578:	str	r3, [r4, #36]	; 0x24
   1257c:	str	r3, [r4, #40]	; 0x28
   12580:	str	r3, [r4, #44]	; 0x2c
   12584:	pop	{r4, r5, r6, pc}
   12588:	pop	{r4, r5, r6, pc}
   1258c:	lsl	r1, r1, #2
   12590:	ldr	r0, [r4, #36]	; 0x24
   12594:	bl	11ac4 <realloc@plt>
   12598:	str	r0, [r4, #36]	; 0x24
   1259c:	ldr	r1, [r4, #52]	; 0x34
   125a0:	lsl	r1, r1, #2
   125a4:	ldr	r0, [r4, #40]	; 0x28
   125a8:	bl	11ac4 <realloc@plt>
   125ac:	str	r0, [r4, #40]	; 0x28
   125b0:	ldr	r1, [r4, #52]	; 0x34
   125b4:	lsl	r1, r1, #2
   125b8:	ldr	r0, [r4, #44]	; 0x2c
   125bc:	bl	11ac4 <realloc@plt>
   125c0:	str	r0, [r4, #44]	; 0x2c
   125c4:	pop	{r4, r5, r6, pc}

000125c8 <table_notify@@Base>:
   125c8:	ldr	ip, [r0, #32]
   125cc:	cmp	ip, #0
   125d0:	bxle	lr
   125d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   125d8:	sub	sp, sp, #12
   125dc:	mov	r6, r3
   125e0:	mov	r8, r2
   125e4:	mov	r7, r1
   125e8:	mov	r5, r0
   125ec:	mov	r4, #0
   125f0:	b	12604 <table_notify@@Base+0x3c>
   125f4:	add	r4, r4, #1
   125f8:	ldr	r0, [r5, #32]
   125fc:	cmp	r0, r4
   12600:	ble	12640 <table_notify@@Base+0x78>
   12604:	ldr	r0, [r5, #44]	; 0x2c
   12608:	ldr	r0, [r0, r4, lsl #2]
   1260c:	tst	r6, r0
   12610:	beq	125f4 <table_notify@@Base+0x2c>
   12614:	ldr	r3, [r5, #36]	; 0x24
   12618:	ldr	r2, [r5, #40]	; 0x28
   1261c:	ldr	r2, [r2, r4, lsl #2]
   12620:	str	r2, [sp]
   12624:	ldr	r9, [r3, r4, lsl #2]
   12628:	mov	r3, r6
   1262c:	mov	r2, r8
   12630:	mov	r1, r7
   12634:	mov	r0, r5
   12638:	blx	r9
   1263c:	b	125f4 <table_notify@@Base+0x2c>
   12640:	add	sp, sp, #12
   12644:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012648 <table_column_init@@Base>:
   12648:	push	{r4, r5, r6, r7, r8, lr}
   1264c:	mov	r7, r2
   12650:	mov	r8, r3
   12654:	add	r1, r1, r1, lsl #1
   12658:	lsl	r4, r1, #2
   1265c:	ldr	r6, [r0]
   12660:	add	r5, r6, r4
   12664:	mov	r0, r2
   12668:	bl	11b00 <strlen@plt>
   1266c:	add	r0, r0, #1
   12670:	bl	11adc <malloc@plt>
   12674:	str	r0, [r6, r4]
   12678:	cmp	r0, #0
   1267c:	beq	12688 <table_column_init@@Base+0x40>
   12680:	mov	r1, r7
   12684:	bl	11ad0 <strcpy@plt>
   12688:	str	r8, [r5, #4]
   1268c:	ldr	r3, [sp, #24]
   12690:	str	r3, [r5, #8]
   12694:	pop	{r4, r5, r6, r7, r8, pc}

00012698 <table_column_destroy@@Base>:
   12698:	ldr	r3, [r0]
   1269c:	add	r1, r1, r1, lsl #1
   126a0:	ldr	r0, [r3, r1, lsl #2]
   126a4:	cmp	r0, #0
   126a8:	bxeq	lr
   126ac:	push	{r4, lr}
   126b0:	bl	11ab8 <free@plt>
   126b4:	pop	{r4, pc}

000126b8 <table_get_column_length@@Base>:
   126b8:	ldr	r0, [r0, #4]
   126bc:	bx	lr

000126c0 <table_get_column@@Base>:
   126c0:	push	{r4, r5, r6, r7, r8, lr}
   126c4:	ldr	r7, [r0, #4]
   126c8:	cmp	r7, #0
   126cc:	ble	1270c <table_get_column@@Base+0x4c>
   126d0:	mov	r6, r1
   126d4:	ldr	r8, [r0]
   126d8:	mov	r5, #0
   126dc:	mov	r4, r5
   126e0:	mov	r1, r6
   126e4:	ldr	r0, [r8, r5]
   126e8:	bl	11aa0 <strcmp@plt>
   126ec:	cmp	r0, #0
   126f0:	beq	12710 <table_get_column@@Base+0x50>
   126f4:	add	r4, r4, #1
   126f8:	add	r5, r5, #12
   126fc:	cmp	r4, r7
   12700:	bne	126e0 <table_get_column@@Base+0x20>
   12704:	mvn	r4, #0
   12708:	b	12718 <table_get_column@@Base+0x58>
   1270c:	mov	r4, #0
   12710:	cmp	r7, r4
   12714:	mvneq	r4, #0
   12718:	mov	r0, r4
   1271c:	pop	{r4, r5, r6, r7, r8, pc}

00012720 <table_get_column_data_type@@Base>:
   12720:	ldr	r3, [r0]
   12724:	add	r1, r1, r1, lsl #1
   12728:	add	r3, r3, r1, lsl #2
   1272c:	ldr	r0, [r3, #4]
   12730:	bx	lr

00012734 <table_add_column@@Base>:
   12734:	push	{r4, r5, r6, r7, r8, r9, lr}
   12738:	sub	sp, sp, #12
   1273c:	mov	r5, r0
   12740:	mov	r9, r1
   12744:	mov	r8, r2
   12748:	ldr	r4, [r0, #8]
   1274c:	mov	r1, r4
   12750:	ldr	r0, [r0, #4]
   12754:	bl	14db0 <table_cell_nullify@@Base+0x218>
   12758:	cmp	r1, #0
   1275c:	beq	127e0 <table_add_column@@Base+0xac>
   12760:	mov	r0, r5
   12764:	bl	1348c <table_get_row_length@@Base>
   12768:	mov	r6, r0
   1276c:	ldr	r7, [r5, #4]
   12770:	mov	r0, r8
   12774:	bl	13100 <table_get_default_compare_function_for_data_type@@Base>
   12778:	str	r0, [sp]
   1277c:	mov	r3, r8
   12780:	mov	r2, r9
   12784:	mov	r1, r7
   12788:	mov	r0, r5
   1278c:	bl	12648 <table_column_init@@Base>
   12790:	cmp	r6, #0
   12794:	ble	127b8 <table_add_column@@Base+0x84>
   12798:	mov	r4, #0
   1279c:	mov	r2, r7
   127a0:	mov	r1, r4
   127a4:	mov	r0, r5
   127a8:	bl	14b40 <table_cell_init@@Base>
   127ac:	add	r4, r4, #1
   127b0:	cmp	r6, r4
   127b4:	bne	1279c <table_add_column@@Base+0x68>
   127b8:	mov	r3, #8
   127bc:	ldr	r2, [r5, #4]
   127c0:	mvn	r1, #0
   127c4:	mov	r0, r5
   127c8:	bl	125c8 <table_notify@@Base>
   127cc:	ldr	r0, [r5, #4]
   127d0:	add	r3, r0, #1
   127d4:	str	r3, [r5, #4]
   127d8:	add	sp, sp, #12
   127dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   127e0:	ldr	r1, [r5, #12]
   127e4:	add	r4, r4, r1
   127e8:	str	r4, [r5, #12]
   127ec:	add	r4, r4, r4, lsl #1
   127f0:	lsl	r1, r4, #2
   127f4:	ldr	r0, [r5]
   127f8:	bl	11ac4 <realloc@plt>
   127fc:	str	r0, [r5]
   12800:	mov	r0, r5
   12804:	bl	1348c <table_get_row_length@@Base>
   12808:	subs	r7, r0, #0
   1280c:	ble	12760 <table_add_column@@Base+0x2c>
   12810:	mov	r4, #0
   12814:	mov	r1, r4
   12818:	mov	r0, r5
   1281c:	bl	1364c <table_get_row_ptr@@Base>
   12820:	mov	r6, r0
   12824:	ldr	r1, [r5, #12]
   12828:	lsl	r1, r1, #2
   1282c:	ldr	r0, [r0]
   12830:	bl	11ac4 <realloc@plt>
   12834:	str	r0, [r6]
   12838:	add	r4, r4, #1
   1283c:	cmp	r7, r4
   12840:	bne	12814 <table_add_column@@Base+0xe0>
   12844:	b	12760 <table_add_column@@Base+0x2c>

00012848 <table_remove_column@@Base>:
   12848:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1284c:	mov	r6, r0
   12850:	mov	r7, r1
   12854:	bl	12698 <table_column_destroy@@Base>
   12858:	ldr	r4, [r6, #4]
   1285c:	sub	r8, r4, #1
   12860:	cmp	r7, r8
   12864:	bge	128ac <table_remove_column@@Base+0x64>
   12868:	add	r3, r7, r7, lsl #1
   1286c:	lsl	r3, r3, #2
   12870:	mov	r0, r7
   12874:	ldr	r2, [r6]
   12878:	add	ip, r3, #12
   1287c:	add	lr, r2, r3
   12880:	add	r1, r2, ip
   12884:	ldr	r9, [r1]
   12888:	ldr	r5, [r1, #4]
   1288c:	ldr	r1, [r1, #8]
   12890:	str	r9, [r2, r3]
   12894:	str	r5, [lr, #4]
   12898:	str	r1, [lr, #8]
   1289c:	add	r0, r0, #1
   128a0:	mov	r3, ip
   128a4:	cmp	r8, r0
   128a8:	bgt	12874 <table_remove_column@@Base+0x2c>
   128ac:	mov	r0, r6
   128b0:	bl	1348c <table_get_row_length@@Base>
   128b4:	subs	r9, r0, #0
   128b8:	ble	12920 <table_remove_column@@Base+0xd8>
   128bc:	lsl	sl, r7, #2
   128c0:	mov	r5, #0
   128c4:	sub	r4, r4, #1
   128c8:	mov	r2, r7
   128cc:	mov	r1, r5
   128d0:	mov	r0, r6
   128d4:	bl	14b54 <table_cell_destroy@@Base>
   128d8:	mov	r1, r5
   128dc:	mov	r0, r6
   128e0:	bl	1364c <table_get_row_ptr@@Base>
   128e4:	cmp	r7, r8
   128e8:	bge	12914 <table_remove_column@@Base+0xcc>
   128ec:	mov	r2, sl
   128f0:	mov	r3, r7
   128f4:	ldr	ip, [r0]
   128f8:	add	r1, r2, #4
   128fc:	ldr	lr, [ip, r1]
   12900:	str	lr, [ip, r2]
   12904:	add	r3, r3, #1
   12908:	mov	r2, r1
   1290c:	cmp	r3, r4
   12910:	bne	128f4 <table_remove_column@@Base+0xac>
   12914:	add	r5, r5, #1
   12918:	cmp	r9, r5
   1291c:	bne	128c8 <table_remove_column@@Base+0x80>
   12920:	ldr	r0, [r6, #4]
   12924:	sub	r0, r0, #1
   12928:	str	r0, [r6, #4]
   1292c:	ldr	r4, [r6, #8]
   12930:	mov	r1, r4
   12934:	bl	14db0 <table_cell_nullify@@Base+0x218>
   12938:	cmp	r1, #0
   1293c:	beq	1295c <table_remove_column@@Base+0x114>
   12940:	mov	r3, #16
   12944:	mov	r2, r7
   12948:	mvn	r1, #0
   1294c:	mov	r0, r6
   12950:	bl	125c8 <table_notify@@Base>
   12954:	mov	r0, #0
   12958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1295c:	ldr	r1, [r6, #12]
   12960:	sub	r1, r1, r4
   12964:	str	r1, [r6, #12]
   12968:	add	r1, r1, r1, lsl #1
   1296c:	lsl	r1, r1, #2
   12970:	ldr	r0, [r6]
   12974:	bl	11ac4 <realloc@plt>
   12978:	str	r0, [r6]
   1297c:	mov	r0, r6
   12980:	bl	1348c <table_get_row_length@@Base>
   12984:	subs	r8, r0, #0
   12988:	ble	12940 <table_remove_column@@Base+0xf8>
   1298c:	mov	r4, #0
   12990:	mov	r1, r4
   12994:	mov	r0, r6
   12998:	bl	1364c <table_get_row_ptr@@Base>
   1299c:	mov	r5, r0
   129a0:	ldr	r1, [r6, #12]
   129a4:	lsl	r1, r1, #2
   129a8:	ldr	r0, [r0]
   129ac:	bl	11ac4 <realloc@plt>
   129b0:	str	r0, [r5]
   129b4:	add	r4, r4, #1
   129b8:	cmp	r8, r4
   129bc:	bne	12990 <table_remove_column@@Base+0x148>
   129c0:	b	12940 <table_remove_column@@Base+0xf8>

000129c4 <table_get_column_name@@Base>:
   129c4:	ldr	r3, [r0]
   129c8:	add	r1, r1, r1, lsl #1
   129cc:	ldr	r0, [r3, r1, lsl #2]
   129d0:	bx	lr

000129d4 <table_get_col_ptr@@Base>:
   129d4:	add	r1, r1, r1, lsl #1
   129d8:	ldr	r0, [r0]
   129dc:	add	r0, r0, r1, lsl #2
   129e0:	bx	lr

000129e4 <table_get_column_compare_function@@Base>:
   129e4:	ldr	r3, [r0]
   129e8:	add	r1, r1, r1, lsl #1
   129ec:	add	r3, r3, r1, lsl #2
   129f0:	ldr	r0, [r3, #8]
   129f4:	bx	lr

000129f8 <table_set_column_compare_function@@Base>:
   129f8:	ldr	r3, [r0]
   129fc:	add	r1, r1, r1, lsl #1
   12a00:	add	r3, r3, r1, lsl #2
   12a04:	str	r2, [r3, #8]
   12a08:	bx	lr

00012a0c <table_compare_bool@@Base>:
   12a0c:	cmp	r0, #0
   12a10:	beq	12a3c <table_compare_bool@@Base+0x30>
   12a14:	cmp	r1, #0
   12a18:	beq	12a48 <table_compare_bool@@Base+0x3c>
   12a1c:	ldrb	r0, [r0]
   12a20:	ldrb	r1, [r1]
   12a24:	cmp	r0, r1
   12a28:	bgt	12a50 <table_compare_bool@@Base+0x44>
   12a2c:	cmp	r0, r1
   12a30:	movge	r0, #0
   12a34:	mvnlt	r0, #0
   12a38:	bx	lr
   12a3c:	adds	r0, r1, #0
   12a40:	mvnne	r0, #0
   12a44:	bx	lr
   12a48:	mov	r0, #1
   12a4c:	bx	lr
   12a50:	mov	r0, #1
   12a54:	bx	lr

00012a58 <table_compare_int@@Base>:
   12a58:	cmp	r0, #0
   12a5c:	beq	12a88 <table_compare_int@@Base+0x30>
   12a60:	cmp	r1, #0
   12a64:	beq	12a94 <table_compare_int@@Base+0x3c>
   12a68:	ldr	r0, [r0]
   12a6c:	ldr	r1, [r1]
   12a70:	cmp	r0, r1
   12a74:	bgt	12a9c <table_compare_int@@Base+0x44>
   12a78:	cmp	r0, r1
   12a7c:	movge	r0, #0
   12a80:	mvnlt	r0, #0
   12a84:	bx	lr
   12a88:	adds	r0, r1, #0
   12a8c:	mvnne	r0, #0
   12a90:	bx	lr
   12a94:	mov	r0, #1
   12a98:	bx	lr
   12a9c:	mov	r0, #1
   12aa0:	bx	lr

00012aa4 <table_compare_uint@@Base>:
   12aa4:	cmp	r0, #0
   12aa8:	beq	12ad4 <table_compare_uint@@Base+0x30>
   12aac:	cmp	r1, #0
   12ab0:	beq	12ae0 <table_compare_uint@@Base+0x3c>
   12ab4:	ldr	r0, [r0]
   12ab8:	ldr	r1, [r1]
   12abc:	cmp	r0, r1
   12ac0:	bhi	12ae8 <table_compare_uint@@Base+0x44>
   12ac4:	cmp	r0, r1
   12ac8:	movcs	r0, #0
   12acc:	mvncc	r0, #0
   12ad0:	bx	lr
   12ad4:	adds	r0, r1, #0
   12ad8:	mvnne	r0, #0
   12adc:	bx	lr
   12ae0:	mov	r0, #1
   12ae4:	bx	lr
   12ae8:	mov	r0, #1
   12aec:	bx	lr

00012af0 <table_compare_int8@@Base>:
   12af0:	cmp	r0, #0
   12af4:	beq	12b20 <table_compare_int8@@Base+0x30>
   12af8:	cmp	r1, #0
   12afc:	beq	12b2c <table_compare_int8@@Base+0x3c>
   12b00:	ldrsb	r0, [r0]
   12b04:	ldrsb	r1, [r1]
   12b08:	cmp	r0, r1
   12b0c:	bgt	12b34 <table_compare_int8@@Base+0x44>
   12b10:	cmp	r0, r1
   12b14:	movge	r0, #0
   12b18:	mvnlt	r0, #0
   12b1c:	bx	lr
   12b20:	adds	r0, r1, #0
   12b24:	mvnne	r0, #0
   12b28:	bx	lr
   12b2c:	mov	r0, #1
   12b30:	bx	lr
   12b34:	mov	r0, #1
   12b38:	bx	lr

00012b3c <table_compare_uint8@@Base>:
   12b3c:	cmp	r0, #0
   12b40:	beq	12b6c <table_compare_uint8@@Base+0x30>
   12b44:	cmp	r1, #0
   12b48:	beq	12b78 <table_compare_uint8@@Base+0x3c>
   12b4c:	ldrb	r0, [r0]
   12b50:	ldrb	r1, [r1]
   12b54:	cmp	r0, r1
   12b58:	bhi	12b80 <table_compare_uint8@@Base+0x44>
   12b5c:	cmp	r0, r1
   12b60:	movcs	r0, #0
   12b64:	mvncc	r0, #0
   12b68:	bx	lr
   12b6c:	adds	r0, r1, #0
   12b70:	mvnne	r0, #0
   12b74:	bx	lr
   12b78:	mov	r0, #1
   12b7c:	bx	lr
   12b80:	mov	r0, #1
   12b84:	bx	lr

00012b88 <table_compare_int16@@Base>:
   12b88:	cmp	r0, #0
   12b8c:	beq	12bb8 <table_compare_int16@@Base+0x30>
   12b90:	cmp	r1, #0
   12b94:	beq	12bc4 <table_compare_int16@@Base+0x3c>
   12b98:	ldrsh	r0, [r0]
   12b9c:	ldrsh	r1, [r1]
   12ba0:	cmp	r0, r1
   12ba4:	bgt	12bcc <table_compare_int16@@Base+0x44>
   12ba8:	cmp	r0, r1
   12bac:	movge	r0, #0
   12bb0:	mvnlt	r0, #0
   12bb4:	bx	lr
   12bb8:	adds	r0, r1, #0
   12bbc:	mvnne	r0, #0
   12bc0:	bx	lr
   12bc4:	mov	r0, #1
   12bc8:	bx	lr
   12bcc:	mov	r0, #1
   12bd0:	bx	lr

00012bd4 <table_compare_uint16@@Base>:
   12bd4:	cmp	r0, #0
   12bd8:	beq	12c04 <table_compare_uint16@@Base+0x30>
   12bdc:	cmp	r1, #0
   12be0:	beq	12c10 <table_compare_uint16@@Base+0x3c>
   12be4:	ldrh	r0, [r0]
   12be8:	ldrh	r1, [r1]
   12bec:	cmp	r0, r1
   12bf0:	bhi	12c18 <table_compare_uint16@@Base+0x44>
   12bf4:	cmp	r0, r1
   12bf8:	movcs	r0, #0
   12bfc:	mvncc	r0, #0
   12c00:	bx	lr
   12c04:	adds	r0, r1, #0
   12c08:	mvnne	r0, #0
   12c0c:	bx	lr
   12c10:	mov	r0, #1
   12c14:	bx	lr
   12c18:	mov	r0, #1
   12c1c:	bx	lr

00012c20 <table_compare_int32@@Base>:
   12c20:	cmp	r0, #0
   12c24:	beq	12c50 <table_compare_int32@@Base+0x30>
   12c28:	cmp	r1, #0
   12c2c:	beq	12c5c <table_compare_int32@@Base+0x3c>
   12c30:	ldr	r0, [r0]
   12c34:	ldr	r1, [r1]
   12c38:	cmp	r0, r1
   12c3c:	bgt	12c64 <table_compare_int32@@Base+0x44>
   12c40:	cmp	r0, r1
   12c44:	movge	r0, #0
   12c48:	mvnlt	r0, #0
   12c4c:	bx	lr
   12c50:	adds	r0, r1, #0
   12c54:	mvnne	r0, #0
   12c58:	bx	lr
   12c5c:	mov	r0, #1
   12c60:	bx	lr
   12c64:	mov	r0, #1
   12c68:	bx	lr

00012c6c <table_compare_uint32@@Base>:
   12c6c:	cmp	r0, #0
   12c70:	beq	12c9c <table_compare_uint32@@Base+0x30>
   12c74:	cmp	r1, #0
   12c78:	beq	12ca8 <table_compare_uint32@@Base+0x3c>
   12c7c:	ldr	r0, [r0]
   12c80:	ldr	r1, [r1]
   12c84:	cmp	r0, r1
   12c88:	bhi	12cb0 <table_compare_uint32@@Base+0x44>
   12c8c:	cmp	r0, r1
   12c90:	movcs	r0, #0
   12c94:	mvncc	r0, #0
   12c98:	bx	lr
   12c9c:	adds	r0, r1, #0
   12ca0:	mvnne	r0, #0
   12ca4:	bx	lr
   12ca8:	mov	r0, #1
   12cac:	bx	lr
   12cb0:	mov	r0, #1
   12cb4:	bx	lr

00012cb8 <table_compare_int64@@Base>:
   12cb8:	cmp	r0, #0
   12cbc:	beq	12cfc <table_compare_int64@@Base+0x44>
   12cc0:	cmp	r1, #0
   12cc4:	beq	12d08 <table_compare_int64@@Base+0x50>
   12cc8:	push	{r4, r5}
   12ccc:	ldrd	r4, [r0]
   12cd0:	ldrd	r2, [r1]
   12cd4:	cmp	r2, r4
   12cd8:	sbcs	r1, r3, r5
   12cdc:	movlt	r0, #1
   12ce0:	blt	12cf4 <table_compare_int64@@Base+0x3c>
   12ce4:	cmp	r4, r2
   12ce8:	sbcs	r3, r5, r3
   12cec:	mvnlt	r0, #0
   12cf0:	movge	r0, #0
   12cf4:	pop	{r4, r5}
   12cf8:	bx	lr
   12cfc:	adds	r0, r1, #0
   12d00:	mvnne	r0, #0
   12d04:	bx	lr
   12d08:	mov	r0, #1
   12d0c:	bx	lr

00012d10 <table_compare_uint64@@Base>:
   12d10:	cmp	r0, #0
   12d14:	beq	12d4c <table_compare_uint64@@Base+0x3c>
   12d18:	cmp	r1, #0
   12d1c:	beq	12d58 <table_compare_uint64@@Base+0x48>
   12d20:	push	{r4, r5}
   12d24:	ldrd	r4, [r0]
   12d28:	ldrd	r2, [r1]
   12d2c:	cmp	r5, r3
   12d30:	cmpeq	r4, r2
   12d34:	movhi	r0, #1
   12d38:	bhi	12d44 <table_compare_uint64@@Base+0x34>
   12d3c:	mvncc	r0, #0
   12d40:	movcs	r0, #0
   12d44:	pop	{r4, r5}
   12d48:	bx	lr
   12d4c:	adds	r0, r1, #0
   12d50:	mvnne	r0, #0
   12d54:	bx	lr
   12d58:	mov	r0, #1
   12d5c:	bx	lr

00012d60 <table_compare_short@@Base>:
   12d60:	cmp	r0, #0
   12d64:	beq	12d90 <table_compare_short@@Base+0x30>
   12d68:	cmp	r1, #0
   12d6c:	beq	12d9c <table_compare_short@@Base+0x3c>
   12d70:	ldrsh	r0, [r0]
   12d74:	ldrsh	r1, [r1]
   12d78:	cmp	r0, r1
   12d7c:	bgt	12da4 <table_compare_short@@Base+0x44>
   12d80:	cmp	r0, r1
   12d84:	movge	r0, #0
   12d88:	mvnlt	r0, #0
   12d8c:	bx	lr
   12d90:	adds	r0, r1, #0
   12d94:	mvnne	r0, #0
   12d98:	bx	lr
   12d9c:	mov	r0, #1
   12da0:	bx	lr
   12da4:	mov	r0, #1
   12da8:	bx	lr

00012dac <table_compare_ushort@@Base>:
   12dac:	cmp	r0, #0
   12db0:	beq	12ddc <table_compare_ushort@@Base+0x30>
   12db4:	cmp	r1, #0
   12db8:	beq	12de8 <table_compare_ushort@@Base+0x3c>
   12dbc:	ldrh	r0, [r0]
   12dc0:	ldrh	r1, [r1]
   12dc4:	cmp	r0, r1
   12dc8:	bhi	12df0 <table_compare_ushort@@Base+0x44>
   12dcc:	cmp	r0, r1
   12dd0:	movcs	r0, #0
   12dd4:	mvncc	r0, #0
   12dd8:	bx	lr
   12ddc:	adds	r0, r1, #0
   12de0:	mvnne	r0, #0
   12de4:	bx	lr
   12de8:	mov	r0, #1
   12dec:	bx	lr
   12df0:	mov	r0, #1
   12df4:	bx	lr

00012df8 <table_compare_long@@Base>:
   12df8:	cmp	r0, #0
   12dfc:	beq	12e28 <table_compare_long@@Base+0x30>
   12e00:	cmp	r1, #0
   12e04:	beq	12e34 <table_compare_long@@Base+0x3c>
   12e08:	ldr	r0, [r0]
   12e0c:	ldr	r1, [r1]
   12e10:	cmp	r0, r1
   12e14:	bgt	12e3c <table_compare_long@@Base+0x44>
   12e18:	cmp	r0, r1
   12e1c:	movge	r0, #0
   12e20:	mvnlt	r0, #0
   12e24:	bx	lr
   12e28:	adds	r0, r1, #0
   12e2c:	mvnne	r0, #0
   12e30:	bx	lr
   12e34:	mov	r0, #1
   12e38:	bx	lr
   12e3c:	mov	r0, #1
   12e40:	bx	lr

00012e44 <table_compare_ulong@@Base>:
   12e44:	cmp	r0, #0
   12e48:	beq	12e74 <table_compare_ulong@@Base+0x30>
   12e4c:	cmp	r1, #0
   12e50:	beq	12e80 <table_compare_ulong@@Base+0x3c>
   12e54:	ldr	r0, [r0]
   12e58:	ldr	r1, [r1]
   12e5c:	cmp	r0, r1
   12e60:	bhi	12e88 <table_compare_ulong@@Base+0x44>
   12e64:	cmp	r0, r1
   12e68:	movcs	r0, #0
   12e6c:	mvncc	r0, #0
   12e70:	bx	lr
   12e74:	adds	r0, r1, #0
   12e78:	mvnne	r0, #0
   12e7c:	bx	lr
   12e80:	mov	r0, #1
   12e84:	bx	lr
   12e88:	mov	r0, #1
   12e8c:	bx	lr

00012e90 <table_compare_llong@@Base>:
   12e90:	cmp	r0, #0
   12e94:	beq	12ed4 <table_compare_llong@@Base+0x44>
   12e98:	cmp	r1, #0
   12e9c:	beq	12ee0 <table_compare_llong@@Base+0x50>
   12ea0:	push	{r4, r5}
   12ea4:	ldrd	r4, [r0]
   12ea8:	ldrd	r2, [r1]
   12eac:	cmp	r2, r4
   12eb0:	sbcs	r1, r3, r5
   12eb4:	movlt	r0, #1
   12eb8:	blt	12ecc <table_compare_llong@@Base+0x3c>
   12ebc:	cmp	r4, r2
   12ec0:	sbcs	r3, r5, r3
   12ec4:	mvnlt	r0, #0
   12ec8:	movge	r0, #0
   12ecc:	pop	{r4, r5}
   12ed0:	bx	lr
   12ed4:	adds	r0, r1, #0
   12ed8:	mvnne	r0, #0
   12edc:	bx	lr
   12ee0:	mov	r0, #1
   12ee4:	bx	lr

00012ee8 <table_compare_ullong@@Base>:
   12ee8:	cmp	r0, #0
   12eec:	beq	12f18 <table_compare_ullong@@Base+0x30>
   12ef0:	cmp	r1, #0
   12ef4:	beq	12f24 <table_compare_ullong@@Base+0x3c>
   12ef8:	ldr	r0, [r0]
   12efc:	ldr	r1, [r1]
   12f00:	cmp	r0, r1
   12f04:	bhi	12f2c <table_compare_ullong@@Base+0x44>
   12f08:	cmp	r0, r1
   12f0c:	movcs	r0, #0
   12f10:	mvncc	r0, #0
   12f14:	bx	lr
   12f18:	adds	r0, r1, #0
   12f1c:	mvnne	r0, #0
   12f20:	bx	lr
   12f24:	mov	r0, #1
   12f28:	bx	lr
   12f2c:	mov	r0, #1
   12f30:	bx	lr

00012f34 <table_compare_float@@Base>:
   12f34:	cmp	r0, #0
   12f38:	beq	12f64 <table_compare_float@@Base+0x30>
   12f3c:	cmp	r1, #0
   12f40:	beq	12f70 <table_compare_float@@Base+0x3c>
   12f44:	vldr	s14, [r0]
   12f48:	vldr	s15, [r1]
   12f4c:	vcmpe.f32	s14, s15
   12f50:	vmrs	APSR_nzcv, fpscr
   12f54:	bgt	12f78 <table_compare_float@@Base+0x44>
   12f58:	mvnmi	r0, #0
   12f5c:	movpl	r0, #0
   12f60:	bx	lr
   12f64:	adds	r0, r1, #0
   12f68:	mvnne	r0, #0
   12f6c:	bx	lr
   12f70:	mov	r0, #1
   12f74:	bx	lr
   12f78:	mov	r0, #1
   12f7c:	bx	lr

00012f80 <table_compare_double@@Base>:
   12f80:	cmp	r0, #0
   12f84:	beq	12fb0 <table_compare_double@@Base+0x30>
   12f88:	cmp	r1, #0
   12f8c:	beq	12fbc <table_compare_double@@Base+0x3c>
   12f90:	vldr	d6, [r0]
   12f94:	vldr	d7, [r1]
   12f98:	vcmpe.f64	d6, d7
   12f9c:	vmrs	APSR_nzcv, fpscr
   12fa0:	bgt	12fc4 <table_compare_double@@Base+0x44>
   12fa4:	mvnmi	r0, #0
   12fa8:	movpl	r0, #0
   12fac:	bx	lr
   12fb0:	adds	r0, r1, #0
   12fb4:	mvnne	r0, #0
   12fb8:	bx	lr
   12fbc:	mov	r0, #1
   12fc0:	bx	lr
   12fc4:	mov	r0, #1
   12fc8:	bx	lr

00012fcc <table_compare_ldouble@@Base>:
   12fcc:	cmp	r0, #0
   12fd0:	beq	12ffc <table_compare_ldouble@@Base+0x30>
   12fd4:	cmp	r1, #0
   12fd8:	beq	13008 <table_compare_ldouble@@Base+0x3c>
   12fdc:	vldr	d6, [r0]
   12fe0:	vldr	d7, [r1]
   12fe4:	vcmpe.f64	d6, d7
   12fe8:	vmrs	APSR_nzcv, fpscr
   12fec:	bgt	13010 <table_compare_ldouble@@Base+0x44>
   12ff0:	mvnmi	r0, #0
   12ff4:	movpl	r0, #0
   12ff8:	bx	lr
   12ffc:	adds	r0, r1, #0
   13000:	mvnne	r0, #0
   13004:	bx	lr
   13008:	mov	r0, #1
   1300c:	bx	lr
   13010:	mov	r0, #1
   13014:	bx	lr

00013018 <table_compare_char@@Base>:
   13018:	cmp	r0, #0
   1301c:	beq	13048 <table_compare_char@@Base+0x30>
   13020:	cmp	r1, #0
   13024:	beq	13054 <table_compare_char@@Base+0x3c>
   13028:	ldrb	r0, [r0]
   1302c:	ldrb	r1, [r1]
   13030:	cmp	r0, r1
   13034:	bhi	1305c <table_compare_char@@Base+0x44>
   13038:	cmp	r0, r1
   1303c:	movcs	r0, #0
   13040:	mvncc	r0, #0
   13044:	bx	lr
   13048:	adds	r0, r1, #0
   1304c:	mvnne	r0, #0
   13050:	bx	lr
   13054:	mov	r0, #1
   13058:	bx	lr
   1305c:	mov	r0, #1
   13060:	bx	lr

00013064 <table_compare_uchar@@Base>:
   13064:	cmp	r0, #0
   13068:	beq	13094 <table_compare_uchar@@Base+0x30>
   1306c:	cmp	r1, #0
   13070:	beq	130a0 <table_compare_uchar@@Base+0x3c>
   13074:	ldrb	r0, [r0]
   13078:	ldrb	r1, [r1]
   1307c:	cmp	r0, r1
   13080:	bhi	130a8 <table_compare_uchar@@Base+0x44>
   13084:	cmp	r0, r1
   13088:	movcs	r0, #0
   1308c:	mvncc	r0, #0
   13090:	bx	lr
   13094:	adds	r0, r1, #0
   13098:	mvnne	r0, #0
   1309c:	bx	lr
   130a0:	mov	r0, #1
   130a4:	bx	lr
   130a8:	mov	r0, #1
   130ac:	bx	lr

000130b0 <table_compare_ptr@@Base>:
   130b0:	cmp	r0, r1
   130b4:	bhi	130c8 <table_compare_ptr@@Base+0x18>
   130b8:	cmp	r0, r1
   130bc:	movcs	r0, #0
   130c0:	mvncc	r0, #0
   130c4:	bx	lr
   130c8:	mov	r0, #1
   130cc:	bx	lr

000130d0 <table_compare_string@@Base>:
   130d0:	cmp	r0, #0
   130d4:	beq	130ec <table_compare_string@@Base+0x1c>
   130d8:	cmp	r1, #0
   130dc:	beq	130f8 <table_compare_string@@Base+0x28>
   130e0:	push	{r4, lr}
   130e4:	bl	11aa0 <strcmp@plt>
   130e8:	pop	{r4, pc}
   130ec:	adds	r0, r1, #0
   130f0:	mvnne	r0, #0
   130f4:	bx	lr
   130f8:	mov	r0, #1
   130fc:	bx	lr

00013100 <table_get_default_compare_function_for_data_type@@Base>:
   13100:	cmp	r0, #23
   13104:	ldrls	pc, [pc, r0, lsl #2]
   13108:	b	1322c <table_get_default_compare_function_for_data_type@@Base+0x12c>
   1310c:	andeq	r3, r1, ip, ror #2
   13110:	andeq	r3, r1, r4, ror r1
   13114:	andeq	r3, r1, ip, ror r1
   13118:	andeq	r3, r1, r4, lsl #3
   1311c:	andeq	r3, r1, ip, lsl #3
   13120:	muleq	r1, r4, r1
   13124:	muleq	r1, ip, r1
   13128:	andeq	r3, r1, r4, lsr #3
   1312c:	andeq	r3, r1, ip, lsr #3
   13130:			; <UNDEFINED> instruction: 0x000131b4
   13134:			; <UNDEFINED> instruction: 0x000131bc
   13138:	andeq	r3, r1, r4, asr #3
   1313c:	andeq	r3, r1, ip, asr #3
   13140:	ldrdeq	r3, [r1], -r4
   13144:	ldrdeq	r3, [r1], -ip
   13148:	andeq	r3, r1, r4, ror #3
   1314c:	strdeq	r3, [r1], -r4
   13150:	strdeq	r3, [r1], -ip
   13154:	andeq	r3, r1, r4, lsl #4
   13158:	andeq	r3, r1, r4, lsl r2
   1315c:	andeq	r3, r1, ip, lsl r2
   13160:	andeq	r3, r1, ip, ror #3
   13164:	andeq	r3, r1, ip, lsl #4
   13168:	andeq	r3, r1, r4, lsr #4
   1316c:	ldr	r0, [pc, #192]	; 13234 <table_get_default_compare_function_for_data_type@@Base+0x134>
   13170:	bx	lr
   13174:	ldr	r0, [pc, #188]	; 13238 <table_get_default_compare_function_for_data_type@@Base+0x138>
   13178:	bx	lr
   1317c:	ldr	r0, [pc, #184]	; 1323c <table_get_default_compare_function_for_data_type@@Base+0x13c>
   13180:	bx	lr
   13184:	ldr	r0, [pc, #180]	; 13240 <table_get_default_compare_function_for_data_type@@Base+0x140>
   13188:	bx	lr
   1318c:	ldr	r0, [pc, #176]	; 13244 <table_get_default_compare_function_for_data_type@@Base+0x144>
   13190:	bx	lr
   13194:	ldr	r0, [pc, #172]	; 13248 <table_get_default_compare_function_for_data_type@@Base+0x148>
   13198:	bx	lr
   1319c:	ldr	r0, [pc, #168]	; 1324c <table_get_default_compare_function_for_data_type@@Base+0x14c>
   131a0:	bx	lr
   131a4:	ldr	r0, [pc, #164]	; 13250 <table_get_default_compare_function_for_data_type@@Base+0x150>
   131a8:	bx	lr
   131ac:	ldr	r0, [pc, #160]	; 13254 <table_get_default_compare_function_for_data_type@@Base+0x154>
   131b0:	bx	lr
   131b4:	ldr	r0, [pc, #156]	; 13258 <table_get_default_compare_function_for_data_type@@Base+0x158>
   131b8:	bx	lr
   131bc:	ldr	r0, [pc, #152]	; 1325c <table_get_default_compare_function_for_data_type@@Base+0x15c>
   131c0:	bx	lr
   131c4:	ldr	r0, [pc, #148]	; 13260 <table_get_default_compare_function_for_data_type@@Base+0x160>
   131c8:	bx	lr
   131cc:	ldr	r0, [pc, #144]	; 13264 <table_get_default_compare_function_for_data_type@@Base+0x164>
   131d0:	bx	lr
   131d4:	ldr	r0, [pc, #140]	; 13268 <table_get_default_compare_function_for_data_type@@Base+0x168>
   131d8:	bx	lr
   131dc:	ldr	r0, [pc, #136]	; 1326c <table_get_default_compare_function_for_data_type@@Base+0x16c>
   131e0:	bx	lr
   131e4:	ldr	r0, [pc, #132]	; 13270 <table_get_default_compare_function_for_data_type@@Base+0x170>
   131e8:	bx	lr
   131ec:	ldr	r0, [pc, #128]	; 13274 <table_get_default_compare_function_for_data_type@@Base+0x174>
   131f0:	bx	lr
   131f4:	ldr	r0, [pc, #124]	; 13278 <table_get_default_compare_function_for_data_type@@Base+0x178>
   131f8:	bx	lr
   131fc:	ldr	r0, [pc, #120]	; 1327c <table_get_default_compare_function_for_data_type@@Base+0x17c>
   13200:	bx	lr
   13204:	ldr	r0, [pc, #116]	; 13280 <table_get_default_compare_function_for_data_type@@Base+0x180>
   13208:	bx	lr
   1320c:	ldr	r0, [pc, #112]	; 13284 <table_get_default_compare_function_for_data_type@@Base+0x184>
   13210:	bx	lr
   13214:	ldr	r0, [pc, #108]	; 13288 <table_get_default_compare_function_for_data_type@@Base+0x188>
   13218:	bx	lr
   1321c:	ldr	r0, [pc, #104]	; 1328c <table_get_default_compare_function_for_data_type@@Base+0x18c>
   13220:	bx	lr
   13224:	ldr	r0, [pc, #100]	; 13290 <table_get_default_compare_function_for_data_type@@Base+0x190>
   13228:	bx	lr
   1322c:	mov	r0, #0
   13230:	bx	lr
   13234:	andeq	r2, r1, r8, asr sl
   13238:	andeq	r2, r1, r4, lsr #21
   1323c:	strdeq	r2, [r1], -r0
   13240:	andeq	r2, r1, ip, lsr fp
   13244:	andeq	r2, r1, r8, lsl #23
   13248:	ldrdeq	r2, [r1], -r4
   1324c:	andeq	r2, r1, r0, lsr #24
   13250:	andeq	r2, r1, ip, ror #24
   13254:			; <UNDEFINED> instruction: 0x00012cb8
   13258:	andeq	r2, r1, r0, lsl sp
   1325c:	andeq	r2, r1, r0, ror #26
   13260:	andeq	r2, r1, ip, lsr #27
   13264:	strdeq	r2, [r1], -r8
   13268:	andeq	r2, r1, r4, asr #28
   1326c:	muleq	r1, r0, lr
   13270:	andeq	r2, r1, r8, ror #29
   13274:	ldrdeq	r3, [r1], -r0
   13278:	andeq	r2, r1, r4, lsr pc
   1327c:	andeq	r2, r1, r0, lsl #31
   13280:	andeq	r2, r1, ip, asr #31
   13284:	andeq	r2, r1, ip, lsl #20
   13288:	andeq	r3, r1, r8, lsl r0
   1328c:	andeq	r3, r1, r4, rrx
   13290:	strheq	r3, [r1], -r0

00013294 <table_get@@Base>:
   13294:	push	{r4, lr}
   13298:	bl	14b28 <table_get_cell_ptr@@Base>
   1329c:	ldr	r0, [r0]
   132a0:	pop	{r4, pc}

000132a4 <table_get_bool@@Base>:
   132a4:	push	{r4, lr}
   132a8:	bl	13294 <table_get@@Base>
   132ac:	ldrb	r0, [r0]
   132b0:	pop	{r4, pc}

000132b4 <table_get_int@@Base>:
   132b4:	push	{r4, lr}
   132b8:	bl	13294 <table_get@@Base>
   132bc:	ldr	r0, [r0]
   132c0:	pop	{r4, pc}

000132c4 <table_get_uint@@Base>:
   132c4:	push	{r4, lr}
   132c8:	bl	13294 <table_get@@Base>
   132cc:	ldr	r0, [r0]
   132d0:	pop	{r4, pc}

000132d4 <table_get_int8@@Base>:
   132d4:	push	{r4, lr}
   132d8:	bl	13294 <table_get@@Base>
   132dc:	ldrsb	r0, [r0]
   132e0:	pop	{r4, pc}

000132e4 <table_get_uint8@@Base>:
   132e4:	push	{r4, lr}
   132e8:	bl	13294 <table_get@@Base>
   132ec:	ldrb	r0, [r0]
   132f0:	pop	{r4, pc}

000132f4 <table_get_int16@@Base>:
   132f4:	push	{r4, lr}
   132f8:	bl	13294 <table_get@@Base>
   132fc:	ldrsh	r0, [r0]
   13300:	pop	{r4, pc}

00013304 <table_get_uint16@@Base>:
   13304:	push	{r4, lr}
   13308:	bl	13294 <table_get@@Base>
   1330c:	ldrh	r0, [r0]
   13310:	pop	{r4, pc}

00013314 <table_get_int32@@Base>:
   13314:	push	{r4, lr}
   13318:	bl	13294 <table_get@@Base>
   1331c:	ldr	r0, [r0]
   13320:	pop	{r4, pc}

00013324 <table_get_uint32@@Base>:
   13324:	push	{r4, lr}
   13328:	bl	13294 <table_get@@Base>
   1332c:	ldr	r0, [r0]
   13330:	pop	{r4, pc}

00013334 <table_get_int64@@Base>:
   13334:	push	{r4, lr}
   13338:	bl	13294 <table_get@@Base>
   1333c:	ldrd	r0, [r0]
   13340:	pop	{r4, pc}

00013344 <table_get_uint64@@Base>:
   13344:	push	{r4, lr}
   13348:	bl	13294 <table_get@@Base>
   1334c:	ldrd	r0, [r0]
   13350:	pop	{r4, pc}

00013354 <table_get_short@@Base>:
   13354:	push	{r4, lr}
   13358:	bl	13294 <table_get@@Base>
   1335c:	ldrsh	r0, [r0]
   13360:	pop	{r4, pc}

00013364 <table_get_ushort@@Base>:
   13364:	push	{r4, lr}
   13368:	bl	13294 <table_get@@Base>
   1336c:	ldrh	r0, [r0]
   13370:	pop	{r4, pc}

00013374 <table_get_long@@Base>:
   13374:	push	{r4, lr}
   13378:	bl	13294 <table_get@@Base>
   1337c:	ldr	r0, [r0]
   13380:	pop	{r4, pc}

00013384 <table_get_ulong@@Base>:
   13384:	push	{r4, lr}
   13388:	bl	13294 <table_get@@Base>
   1338c:	ldr	r0, [r0]
   13390:	pop	{r4, pc}

00013394 <table_get_llong@@Base>:
   13394:	push	{r4, lr}
   13398:	bl	13294 <table_get@@Base>
   1339c:	ldrd	r0, [r0]
   133a0:	pop	{r4, pc}

000133a4 <table_get_ullong@@Base>:
   133a4:	push	{r4, lr}
   133a8:	bl	13294 <table_get@@Base>
   133ac:	ldrd	r0, [r0]
   133b0:	pop	{r4, pc}

000133b4 <table_get_float@@Base>:
   133b4:	push	{r4, lr}
   133b8:	bl	13294 <table_get@@Base>
   133bc:	vldr	s0, [r0]
   133c0:	pop	{r4, pc}

000133c4 <table_get_double@@Base>:
   133c4:	push	{r4, lr}
   133c8:	bl	13294 <table_get@@Base>
   133cc:	vldr	d0, [r0]
   133d0:	pop	{r4, pc}

000133d4 <table_get_ldouble@@Base>:
   133d4:	push	{r4, lr}
   133d8:	bl	13294 <table_get@@Base>
   133dc:	vldr	d0, [r0]
   133e0:	pop	{r4, pc}

000133e4 <table_get_char@@Base>:
   133e4:	push	{r4, lr}
   133e8:	bl	13294 <table_get@@Base>
   133ec:	ldrb	r0, [r0]
   133f0:	pop	{r4, pc}

000133f4 <table_get_uchar@@Base>:
   133f4:	push	{r4, lr}
   133f8:	bl	13294 <table_get@@Base>
   133fc:	ldrb	r0, [r0]
   13400:	pop	{r4, pc}

00013404 <table_get_string@@Base>:
   13404:	push	{r4, lr}
   13408:	bl	13294 <table_get@@Base>
   1340c:	pop	{r4, pc}

00013410 <table_get_ptr@@Base>:
   13410:	push	{r4, lr}
   13414:	bl	13294 <table_get@@Base>
   13418:	pop	{r4, pc}

0001341c <table_row_init@@Base>:
   1341c:	push	{r4, r5, r6, lr}
   13420:	mov	r5, r1
   13424:	ldr	r4, [r0, #16]
   13428:	ldr	r0, [r0, #12]
   1342c:	lsl	r0, r0, #2
   13430:	bl	11adc <malloc@plt>
   13434:	str	r0, [r4, r5, lsl #2]
   13438:	pop	{r4, r5, r6, pc}

0001343c <table_row_destroy@@Base>:
   1343c:	push	{r4, r5, r6, r7, r8, lr}
   13440:	mov	r6, r0
   13444:	mov	r5, r1
   13448:	bl	126b8 <table_get_column_length@@Base>
   1344c:	ldr	r8, [r6, #16]
   13450:	subs	r7, r0, #0
   13454:	ble	13478 <table_row_destroy@@Base+0x3c>
   13458:	mov	r4, #0
   1345c:	mov	r2, r4
   13460:	mov	r1, r5
   13464:	mov	r0, r6
   13468:	bl	14b54 <table_cell_destroy@@Base>
   1346c:	add	r4, r4, #1
   13470:	cmp	r7, r4
   13474:	bne	1345c <table_row_destroy@@Base+0x20>
   13478:	ldr	r0, [r8, r5, lsl #2]
   1347c:	cmp	r0, #0
   13480:	popeq	{r4, r5, r6, r7, r8, pc}
   13484:	bl	11ab8 <free@plt>
   13488:	pop	{r4, r5, r6, r7, r8, pc}

0001348c <table_get_row_length@@Base>:
   1348c:	ldr	r0, [r0, #20]
   13490:	bx	lr

00013494 <table_add_row@@Base>:
   13494:	push	{r4, r5, r6, r7, r8, lr}
   13498:	mov	r5, r0
   1349c:	ldr	r4, [r0, #24]
   134a0:	mov	r1, r4
   134a4:	ldr	r0, [r0, #20]
   134a8:	bl	14db0 <table_cell_nullify@@Base+0x218>
   134ac:	cmp	r1, #0
   134b0:	beq	1351c <table_add_row@@Base+0x88>
   134b4:	ldr	r7, [r5, #20]
   134b8:	mov	r0, r5
   134bc:	bl	126b8 <table_get_column_length@@Base>
   134c0:	mov	r6, r0
   134c4:	mov	r1, r7
   134c8:	mov	r0, r5
   134cc:	bl	1341c <table_row_init@@Base>
   134d0:	cmp	r6, #0
   134d4:	ble	134f8 <table_add_row@@Base+0x64>
   134d8:	mov	r4, #0
   134dc:	mov	r2, r4
   134e0:	mov	r1, r7
   134e4:	mov	r0, r5
   134e8:	bl	14b40 <table_cell_init@@Base>
   134ec:	add	r4, r4, #1
   134f0:	cmp	r6, r4
   134f4:	bne	134dc <table_add_row@@Base+0x48>
   134f8:	mov	r3, #2
   134fc:	mvn	r2, #0
   13500:	ldr	r1, [r5, #20]
   13504:	mov	r0, r5
   13508:	bl	125c8 <table_notify@@Base>
   1350c:	ldr	r0, [r5, #20]
   13510:	add	r3, r0, #1
   13514:	str	r3, [r5, #20]
   13518:	pop	{r4, r5, r6, r7, r8, pc}
   1351c:	ldr	r1, [r5, #28]
   13520:	add	r1, r4, r1
   13524:	str	r1, [r5, #28]
   13528:	lsl	r1, r1, #2
   1352c:	ldr	r0, [r5, #16]
   13530:	bl	11ac4 <realloc@plt>
   13534:	str	r0, [r5, #16]
   13538:	b	134b4 <table_add_row@@Base+0x20>

0001353c <table_remove_row@@Base>:
   1353c:	push	{r4, r5, r6, r7, r8, lr}
   13540:	mov	r5, r0
   13544:	mov	r6, r1
   13548:	ldr	r7, [r0, #20]
   1354c:	bl	126b8 <table_get_column_length@@Base>
   13550:	subs	r8, r0, #0
   13554:	ble	135a4 <table_remove_row@@Base+0x68>
   13558:	mov	r4, #0
   1355c:	b	1356c <table_remove_row@@Base+0x30>
   13560:	add	r4, r4, #1
   13564:	cmp	r8, r4
   13568:	beq	135a4 <table_remove_row@@Base+0x68>
   1356c:	mov	r1, r4
   13570:	mov	r0, r5
   13574:	bl	12720 <table_get_column_data_type@@Base>
   13578:	cmp	r0, #23
   1357c:	beq	13560 <table_remove_row@@Base+0x24>
   13580:	mov	r2, r4
   13584:	mov	r1, r6
   13588:	mov	r0, r5
   1358c:	bl	14b28 <table_get_cell_ptr@@Base>
   13590:	ldr	r0, [r0]
   13594:	cmp	r0, #0
   13598:	beq	13560 <table_remove_row@@Base+0x24>
   1359c:	bl	11ab8 <free@plt>
   135a0:	b	13560 <table_remove_row@@Base+0x24>
   135a4:	lsl	r4, r6, #2
   135a8:	ldr	r3, [r5, #16]
   135ac:	ldr	r0, [r3, r6, lsl #2]
   135b0:	cmp	r0, #0
   135b4:	beq	135bc <table_remove_row@@Base+0x80>
   135b8:	bl	11ab8 <free@plt>
   135bc:	sub	r3, r7, #1
   135c0:	cmp	r6, r3
   135c4:	bge	135f0 <table_remove_row@@Base+0xb4>
   135c8:	mov	ip, r3
   135cc:	mov	r3, r6
   135d0:	ldr	r1, [r5, #16]
   135d4:	add	r2, r4, #4
   135d8:	ldr	r0, [r1, r2]
   135dc:	str	r0, [r1, r4]
   135e0:	add	r3, r3, #1
   135e4:	mov	r4, r2
   135e8:	cmp	ip, r3
   135ec:	bne	135d0 <table_remove_row@@Base+0x94>
   135f0:	ldr	r0, [r5, #20]
   135f4:	sub	r0, r0, #1
   135f8:	str	r0, [r5, #20]
   135fc:	ldr	r4, [r5, #24]
   13600:	mov	r1, r4
   13604:	bl	14db0 <table_cell_nullify@@Base+0x218>
   13608:	cmp	r1, #0
   1360c:	beq	1362c <table_remove_row@@Base+0xf0>
   13610:	mov	r3, #4
   13614:	mvn	r2, #0
   13618:	mov	r1, r6
   1361c:	mov	r0, r5
   13620:	bl	125c8 <table_notify@@Base>
   13624:	mov	r0, #0
   13628:	pop	{r4, r5, r6, r7, r8, pc}
   1362c:	ldr	r1, [r5, #28]
   13630:	sub	r1, r1, r4
   13634:	str	r1, [r5, #28]
   13638:	lsl	r1, r1, #2
   1363c:	ldr	r0, [r5, #16]
   13640:	bl	11ac4 <realloc@plt>
   13644:	str	r0, [r5, #16]
   13648:	b	13610 <table_remove_row@@Base+0xd4>

0001364c <table_get_row_ptr@@Base>:
   1364c:	ldr	r0, [r0, #16]
   13650:	add	r0, r0, r1, lsl #2
   13654:	bx	lr

00013658 <table_set_row_ptr@@Base>:
   13658:	ldr	r3, [r0, #16]
   1365c:	ldr	r2, [r2]
   13660:	str	r2, [r3, r1, lsl #2]
   13664:	bx	lr

00013668 <table_set@@Base>:
   13668:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1366c:	mov	r5, r0
   13670:	mov	r9, r1
   13674:	mov	r6, r2
   13678:	mov	r7, r3
   1367c:	ldr	r4, [sp, #32]
   13680:	bl	14b28 <table_get_cell_ptr@@Base>
   13684:	mov	r8, r0
   13688:	mov	r1, r6
   1368c:	mov	r0, r5
   13690:	bl	129d4 <table_get_col_ptr@@Base>
   13694:	cmp	r4, #23
   13698:	ldrls	pc, [pc, r4, lsl #2]
   1369c:	b	13cc0 <table_set@@Base+0x658>
   136a0:	andeq	r3, r1, ip, lsr r7
   136a4:	andeq	r3, r1, r8, ror r7
   136a8:			; <UNDEFINED> instruction: 0x000137b4
   136ac:	strdeq	r3, [r1], -r0
   136b0:	andeq	r3, r1, ip, lsr #16
   136b4:	andeq	r3, r1, r8, ror #16
   136b8:	andeq	r3, r1, r4, lsr #17
   136bc:	andeq	r3, r1, r0, ror #17
   136c0:	andeq	r3, r1, ip, lsl r9
   136c4:	andeq	r3, r1, r4, ror #18
   136c8:	andeq	r3, r1, r8, lsr #19
   136cc:	andeq	r3, r1, r4, ror #19
   136d0:	andeq	r3, r1, r0, lsr #20
   136d4:	andeq	r3, r1, ip, asr sl
   136d8:	muleq	r1, r8, sl
   136dc:	ldrdeq	r3, [r1], -ip
   136e0:	andeq	r3, r1, r0, lsr #22
   136e4:	andeq	r3, r1, ip, asr fp
   136e8:	andeq	r3, r1, r0, lsr #23
   136ec:	andeq	r3, r1, ip, lsl ip
   136f0:	andeq	r3, r1, r8, asr ip
   136f4:	andeq	r3, r1, r4, ror #23
   136f8:	andeq	r3, r1, r0, lsl #14
   136fc:	muleq	r1, r4, ip
   13700:	ldr	r3, [r0, #4]
   13704:	cmp	r3, #22
   13708:	bne	1395c <table_set@@Base+0x2f4>
   1370c:	ldr	r0, [r8]
   13710:	cmp	r0, #0
   13714:	beq	13724 <table_set@@Base+0xbc>
   13718:	ldrb	r3, [r7]
   1371c:	strb	r3, [r0]
   13720:	b	13ca4 <table_set@@Base+0x63c>
   13724:	mov	r0, #1
   13728:	bl	11adc <malloc@plt>
   1372c:	str	r0, [r8]
   13730:	cmp	r0, #0
   13734:	bne	13718 <table_set@@Base+0xb0>
   13738:	b	1395c <table_set@@Base+0x2f4>
   1373c:	ldr	r3, [r0, #4]
   13740:	cmp	r3, #0
   13744:	bne	1395c <table_set@@Base+0x2f4>
   13748:	ldr	r0, [r8]
   1374c:	cmp	r0, #0
   13750:	beq	13760 <table_set@@Base+0xf8>
   13754:	ldr	r3, [r7]
   13758:	str	r3, [r0]
   1375c:	b	13ca4 <table_set@@Base+0x63c>
   13760:	mov	r0, #4
   13764:	bl	11adc <malloc@plt>
   13768:	str	r0, [r8]
   1376c:	cmp	r0, #0
   13770:	bne	13754 <table_set@@Base+0xec>
   13774:	b	1395c <table_set@@Base+0x2f4>
   13778:	ldr	r3, [r0, #4]
   1377c:	cmp	r3, #1
   13780:	bne	1395c <table_set@@Base+0x2f4>
   13784:	ldr	r0, [r8]
   13788:	cmp	r0, #0
   1378c:	beq	1379c <table_set@@Base+0x134>
   13790:	ldr	r3, [r7]
   13794:	str	r3, [r0]
   13798:	b	13ca4 <table_set@@Base+0x63c>
   1379c:	mov	r0, #4
   137a0:	bl	11adc <malloc@plt>
   137a4:	str	r0, [r8]
   137a8:	cmp	r0, #0
   137ac:	bne	13790 <table_set@@Base+0x128>
   137b0:	b	1395c <table_set@@Base+0x2f4>
   137b4:	ldr	r3, [r0, #4]
   137b8:	cmp	r3, #2
   137bc:	bne	1395c <table_set@@Base+0x2f4>
   137c0:	ldr	r0, [r8]
   137c4:	cmp	r0, #0
   137c8:	beq	137d8 <table_set@@Base+0x170>
   137cc:	ldrb	r3, [r7]
   137d0:	strb	r3, [r0]
   137d4:	b	13ca4 <table_set@@Base+0x63c>
   137d8:	mov	r0, #1
   137dc:	bl	11adc <malloc@plt>
   137e0:	str	r0, [r8]
   137e4:	cmp	r0, #0
   137e8:	bne	137cc <table_set@@Base+0x164>
   137ec:	b	1395c <table_set@@Base+0x2f4>
   137f0:	ldr	r3, [r0, #4]
   137f4:	cmp	r3, #3
   137f8:	bne	1395c <table_set@@Base+0x2f4>
   137fc:	ldr	r0, [r8]
   13800:	cmp	r0, #0
   13804:	beq	13814 <table_set@@Base+0x1ac>
   13808:	ldrb	r3, [r7]
   1380c:	strb	r3, [r0]
   13810:	b	13ca4 <table_set@@Base+0x63c>
   13814:	mov	r0, #1
   13818:	bl	11adc <malloc@plt>
   1381c:	str	r0, [r8]
   13820:	cmp	r0, #0
   13824:	bne	13808 <table_set@@Base+0x1a0>
   13828:	b	1395c <table_set@@Base+0x2f4>
   1382c:	ldr	r3, [r0, #4]
   13830:	cmp	r3, #4
   13834:	bne	1395c <table_set@@Base+0x2f4>
   13838:	ldr	r0, [r8]
   1383c:	cmp	r0, #0
   13840:	beq	13850 <table_set@@Base+0x1e8>
   13844:	ldrh	r3, [r7]
   13848:	strh	r3, [r0]
   1384c:	b	13ca4 <table_set@@Base+0x63c>
   13850:	mov	r0, #2
   13854:	bl	11adc <malloc@plt>
   13858:	str	r0, [r8]
   1385c:	cmp	r0, #0
   13860:	bne	13844 <table_set@@Base+0x1dc>
   13864:	b	1395c <table_set@@Base+0x2f4>
   13868:	ldr	r3, [r0, #4]
   1386c:	cmp	r3, #5
   13870:	bne	1395c <table_set@@Base+0x2f4>
   13874:	ldr	r0, [r8]
   13878:	cmp	r0, #0
   1387c:	beq	1388c <table_set@@Base+0x224>
   13880:	ldrh	r3, [r7]
   13884:	strh	r3, [r0]
   13888:	b	13ca4 <table_set@@Base+0x63c>
   1388c:	mov	r0, #2
   13890:	bl	11adc <malloc@plt>
   13894:	str	r0, [r8]
   13898:	cmp	r0, #0
   1389c:	bne	13880 <table_set@@Base+0x218>
   138a0:	b	1395c <table_set@@Base+0x2f4>
   138a4:	ldr	r3, [r0, #4]
   138a8:	cmp	r3, #6
   138ac:	bne	1395c <table_set@@Base+0x2f4>
   138b0:	ldr	r0, [r8]
   138b4:	cmp	r0, #0
   138b8:	beq	138c8 <table_set@@Base+0x260>
   138bc:	ldr	r3, [r7]
   138c0:	str	r3, [r0]
   138c4:	b	13ca4 <table_set@@Base+0x63c>
   138c8:	mov	r0, #4
   138cc:	bl	11adc <malloc@plt>
   138d0:	str	r0, [r8]
   138d4:	cmp	r0, #0
   138d8:	bne	138bc <table_set@@Base+0x254>
   138dc:	b	1395c <table_set@@Base+0x2f4>
   138e0:	ldr	r3, [r0, #4]
   138e4:	cmp	r3, #7
   138e8:	bne	1395c <table_set@@Base+0x2f4>
   138ec:	ldr	r0, [r8]
   138f0:	cmp	r0, #0
   138f4:	beq	13904 <table_set@@Base+0x29c>
   138f8:	ldr	r3, [r7]
   138fc:	str	r3, [r0]
   13900:	b	13ca4 <table_set@@Base+0x63c>
   13904:	mov	r0, #4
   13908:	bl	11adc <malloc@plt>
   1390c:	str	r0, [r8]
   13910:	cmp	r0, #0
   13914:	bne	138f8 <table_set@@Base+0x290>
   13918:	b	1395c <table_set@@Base+0x2f4>
   1391c:	ldr	r3, [r0, #4]
   13920:	cmp	r3, #8
   13924:	bne	1395c <table_set@@Base+0x2f4>
   13928:	ldr	r0, [r8]
   1392c:	cmp	r0, #0
   13930:	beq	13948 <table_set@@Base+0x2e0>
   13934:	ldr	r2, [r7]
   13938:	ldr	r3, [r7, #4]
   1393c:	str	r2, [r0]
   13940:	str	r3, [r0, #4]
   13944:	b	13ca4 <table_set@@Base+0x63c>
   13948:	mov	r0, #8
   1394c:	bl	11adc <malloc@plt>
   13950:	str	r0, [r8]
   13954:	cmp	r0, #0
   13958:	bne	13934 <table_set@@Base+0x2cc>
   1395c:	mvn	r0, #0
   13960:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13964:	ldr	r3, [r0, #4]
   13968:	cmp	r3, #9
   1396c:	bne	1395c <table_set@@Base+0x2f4>
   13970:	ldr	r0, [r8]
   13974:	cmp	r0, #0
   13978:	beq	13990 <table_set@@Base+0x328>
   1397c:	ldr	r2, [r7]
   13980:	ldr	r3, [r7, #4]
   13984:	str	r2, [r0]
   13988:	str	r3, [r0, #4]
   1398c:	b	13ca4 <table_set@@Base+0x63c>
   13990:	mov	r0, #8
   13994:	bl	11adc <malloc@plt>
   13998:	str	r0, [r8]
   1399c:	cmp	r0, #0
   139a0:	bne	1397c <table_set@@Base+0x314>
   139a4:	b	1395c <table_set@@Base+0x2f4>
   139a8:	ldr	r3, [r0, #4]
   139ac:	cmp	r3, #10
   139b0:	bne	1395c <table_set@@Base+0x2f4>
   139b4:	ldr	r0, [r8]
   139b8:	cmp	r0, #0
   139bc:	beq	139cc <table_set@@Base+0x364>
   139c0:	ldrh	r3, [r7]
   139c4:	strh	r3, [r0]
   139c8:	b	13ca4 <table_set@@Base+0x63c>
   139cc:	mov	r0, #2
   139d0:	bl	11adc <malloc@plt>
   139d4:	str	r0, [r8]
   139d8:	cmp	r0, #0
   139dc:	bne	139c0 <table_set@@Base+0x358>
   139e0:	b	1395c <table_set@@Base+0x2f4>
   139e4:	ldr	r3, [r0, #4]
   139e8:	cmp	r3, #11
   139ec:	bne	1395c <table_set@@Base+0x2f4>
   139f0:	ldr	r0, [r8]
   139f4:	cmp	r0, #0
   139f8:	beq	13a08 <table_set@@Base+0x3a0>
   139fc:	ldrh	r3, [r7]
   13a00:	strh	r3, [r0]
   13a04:	b	13ca4 <table_set@@Base+0x63c>
   13a08:	mov	r0, #2
   13a0c:	bl	11adc <malloc@plt>
   13a10:	str	r0, [r8]
   13a14:	cmp	r0, #0
   13a18:	bne	139fc <table_set@@Base+0x394>
   13a1c:	b	1395c <table_set@@Base+0x2f4>
   13a20:	ldr	r3, [r0, #4]
   13a24:	cmp	r3, #12
   13a28:	bne	1395c <table_set@@Base+0x2f4>
   13a2c:	ldr	r0, [r8]
   13a30:	cmp	r0, #0
   13a34:	beq	13a44 <table_set@@Base+0x3dc>
   13a38:	ldr	r3, [r7]
   13a3c:	str	r3, [r0]
   13a40:	b	13ca4 <table_set@@Base+0x63c>
   13a44:	mov	r0, #4
   13a48:	bl	11adc <malloc@plt>
   13a4c:	str	r0, [r8]
   13a50:	cmp	r0, #0
   13a54:	bne	13a38 <table_set@@Base+0x3d0>
   13a58:	b	1395c <table_set@@Base+0x2f4>
   13a5c:	ldr	r3, [r0, #4]
   13a60:	cmp	r3, #13
   13a64:	bne	1395c <table_set@@Base+0x2f4>
   13a68:	ldr	r0, [r8]
   13a6c:	cmp	r0, #0
   13a70:	beq	13a80 <table_set@@Base+0x418>
   13a74:	ldr	r3, [r7]
   13a78:	str	r3, [r0]
   13a7c:	b	13ca4 <table_set@@Base+0x63c>
   13a80:	mov	r0, #4
   13a84:	bl	11adc <malloc@plt>
   13a88:	str	r0, [r8]
   13a8c:	cmp	r0, #0
   13a90:	bne	13a74 <table_set@@Base+0x40c>
   13a94:	b	1395c <table_set@@Base+0x2f4>
   13a98:	ldr	r3, [r0, #4]
   13a9c:	cmp	r3, #14
   13aa0:	bne	1395c <table_set@@Base+0x2f4>
   13aa4:	ldr	r0, [r8]
   13aa8:	cmp	r0, #0
   13aac:	beq	13ac4 <table_set@@Base+0x45c>
   13ab0:	ldr	r2, [r7]
   13ab4:	ldr	r3, [r7, #4]
   13ab8:	str	r2, [r0]
   13abc:	str	r3, [r0, #4]
   13ac0:	b	13ca4 <table_set@@Base+0x63c>
   13ac4:	mov	r0, #8
   13ac8:	bl	11adc <malloc@plt>
   13acc:	str	r0, [r8]
   13ad0:	cmp	r0, #0
   13ad4:	bne	13ab0 <table_set@@Base+0x448>
   13ad8:	b	1395c <table_set@@Base+0x2f4>
   13adc:	ldr	r3, [r0, #4]
   13ae0:	cmp	r3, #15
   13ae4:	bne	1395c <table_set@@Base+0x2f4>
   13ae8:	ldr	r0, [r8]
   13aec:	cmp	r0, #0
   13af0:	beq	13b08 <table_set@@Base+0x4a0>
   13af4:	ldr	r2, [r7]
   13af8:	ldr	r3, [r7, #4]
   13afc:	str	r2, [r0]
   13b00:	str	r3, [r0, #4]
   13b04:	b	13ca4 <table_set@@Base+0x63c>
   13b08:	mov	r0, #8
   13b0c:	bl	11adc <malloc@plt>
   13b10:	str	r0, [r8]
   13b14:	cmp	r0, #0
   13b18:	bne	13af4 <table_set@@Base+0x48c>
   13b1c:	b	1395c <table_set@@Base+0x2f4>
   13b20:	ldr	r3, [r0, #4]
   13b24:	cmp	r3, #16
   13b28:	bne	1395c <table_set@@Base+0x2f4>
   13b2c:	ldr	r0, [r8]
   13b30:	cmp	r0, #0
   13b34:	beq	13b44 <table_set@@Base+0x4dc>
   13b38:	ldr	r3, [r7]
   13b3c:	str	r3, [r0]
   13b40:	b	13ca4 <table_set@@Base+0x63c>
   13b44:	mov	r0, #4
   13b48:	bl	11adc <malloc@plt>
   13b4c:	str	r0, [r8]
   13b50:	cmp	r0, #0
   13b54:	bne	13b38 <table_set@@Base+0x4d0>
   13b58:	b	1395c <table_set@@Base+0x2f4>
   13b5c:	ldr	r3, [r0, #4]
   13b60:	cmp	r3, #17
   13b64:	bne	1395c <table_set@@Base+0x2f4>
   13b68:	ldr	r0, [r8]
   13b6c:	cmp	r0, #0
   13b70:	beq	13b88 <table_set@@Base+0x520>
   13b74:	ldr	r2, [r7]
   13b78:	ldr	r3, [r7, #4]
   13b7c:	str	r2, [r0]
   13b80:	str	r3, [r0, #4]
   13b84:	b	13ca4 <table_set@@Base+0x63c>
   13b88:	mov	r0, #8
   13b8c:	bl	11adc <malloc@plt>
   13b90:	str	r0, [r8]
   13b94:	cmp	r0, #0
   13b98:	bne	13b74 <table_set@@Base+0x50c>
   13b9c:	b	1395c <table_set@@Base+0x2f4>
   13ba0:	ldr	r3, [r0, #4]
   13ba4:	cmp	r3, #18
   13ba8:	bne	1395c <table_set@@Base+0x2f4>
   13bac:	ldr	r0, [r8]
   13bb0:	cmp	r0, #0
   13bb4:	beq	13bcc <table_set@@Base+0x564>
   13bb8:	ldr	r2, [r7]
   13bbc:	ldr	r3, [r7, #4]
   13bc0:	str	r2, [r0]
   13bc4:	str	r3, [r0, #4]
   13bc8:	b	13ca4 <table_set@@Base+0x63c>
   13bcc:	mov	r0, #8
   13bd0:	bl	11adc <malloc@plt>
   13bd4:	str	r0, [r8]
   13bd8:	cmp	r0, #0
   13bdc:	bne	13bb8 <table_set@@Base+0x550>
   13be0:	b	1395c <table_set@@Base+0x2f4>
   13be4:	ldr	r3, [r0, #4]
   13be8:	cmp	r3, #21
   13bec:	bne	1395c <table_set@@Base+0x2f4>
   13bf0:	mov	r0, r7
   13bf4:	bl	11b00 <strlen@plt>
   13bf8:	add	r1, r0, #1
   13bfc:	ldr	r0, [r8]
   13c00:	bl	11ac4 <realloc@plt>
   13c04:	str	r0, [r8]
   13c08:	cmp	r0, #0
   13c0c:	beq	1395c <table_set@@Base+0x2f4>
   13c10:	mov	r1, r7
   13c14:	bl	11ad0 <strcpy@plt>
   13c18:	b	13ca4 <table_set@@Base+0x63c>
   13c1c:	ldr	r3, [r0, #4]
   13c20:	cmp	r3, #19
   13c24:	bne	1395c <table_set@@Base+0x2f4>
   13c28:	ldr	r0, [r8]
   13c2c:	cmp	r0, #0
   13c30:	beq	13c40 <table_set@@Base+0x5d8>
   13c34:	ldrb	r3, [r7]
   13c38:	strb	r3, [r0]
   13c3c:	b	13ca4 <table_set@@Base+0x63c>
   13c40:	mov	r0, #1
   13c44:	bl	11adc <malloc@plt>
   13c48:	str	r0, [r8]
   13c4c:	cmp	r0, #0
   13c50:	bne	13c34 <table_set@@Base+0x5cc>
   13c54:	b	1395c <table_set@@Base+0x2f4>
   13c58:	ldr	r3, [r0, #4]
   13c5c:	cmp	r3, #20
   13c60:	bne	1395c <table_set@@Base+0x2f4>
   13c64:	ldr	r0, [r8]
   13c68:	cmp	r0, #0
   13c6c:	beq	13c7c <table_set@@Base+0x614>
   13c70:	ldrb	r3, [r7]
   13c74:	strb	r3, [r0]
   13c78:	b	13ca4 <table_set@@Base+0x63c>
   13c7c:	mov	r0, #1
   13c80:	bl	11adc <malloc@plt>
   13c84:	str	r0, [r8]
   13c88:	cmp	r0, #0
   13c8c:	bne	13c70 <table_set@@Base+0x608>
   13c90:	b	1395c <table_set@@Base+0x2f4>
   13c94:	ldr	r3, [r0, #4]
   13c98:	cmp	r3, #23
   13c9c:	bne	1395c <table_set@@Base+0x2f4>
   13ca0:	str	r7, [r8]
   13ca4:	mov	r3, #1
   13ca8:	mov	r2, r6
   13cac:	mov	r1, r9
   13cb0:	mov	r0, r5
   13cb4:	bl	125c8 <table_notify@@Base>
   13cb8:	mov	r0, #0
   13cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13cc0:	mvn	r0, #0
   13cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013cc8 <table_set_bool@@Base>:
   13cc8:	push	{lr}		; (str lr, [sp, #-4]!)
   13ccc:	sub	sp, sp, #20
   13cd0:	add	ip, sp, #16
   13cd4:	strb	r3, [ip, #-1]!
   13cd8:	mov	r3, #22
   13cdc:	str	r3, [sp]
   13ce0:	mov	r3, ip
   13ce4:	bl	13668 <table_set@@Base>
   13ce8:	add	sp, sp, #20
   13cec:	pop	{pc}		; (ldr pc, [sp], #4)

00013cf0 <table_set_int@@Base>:
   13cf0:	push	{lr}		; (str lr, [sp, #-4]!)
   13cf4:	sub	sp, sp, #20
   13cf8:	add	ip, sp, #16
   13cfc:	str	r3, [ip, #-4]!
   13d00:	mov	r3, #0
   13d04:	str	r3, [sp]
   13d08:	mov	r3, ip
   13d0c:	bl	13668 <table_set@@Base>
   13d10:	add	sp, sp, #20
   13d14:	pop	{pc}		; (ldr pc, [sp], #4)

00013d18 <table_set_uint@@Base>:
   13d18:	push	{lr}		; (str lr, [sp, #-4]!)
   13d1c:	sub	sp, sp, #20
   13d20:	add	ip, sp, #16
   13d24:	str	r3, [ip, #-4]!
   13d28:	mov	r3, #1
   13d2c:	str	r3, [sp]
   13d30:	mov	r3, ip
   13d34:	bl	13668 <table_set@@Base>
   13d38:	add	sp, sp, #20
   13d3c:	pop	{pc}		; (ldr pc, [sp], #4)

00013d40 <table_set_int8@@Base>:
   13d40:	push	{lr}		; (str lr, [sp, #-4]!)
   13d44:	sub	sp, sp, #20
   13d48:	add	ip, sp, #16
   13d4c:	strb	r3, [ip, #-1]!
   13d50:	mov	r3, #2
   13d54:	str	r3, [sp]
   13d58:	mov	r3, ip
   13d5c:	bl	13668 <table_set@@Base>
   13d60:	add	sp, sp, #20
   13d64:	pop	{pc}		; (ldr pc, [sp], #4)

00013d68 <table_set_uint8@@Base>:
   13d68:	push	{lr}		; (str lr, [sp, #-4]!)
   13d6c:	sub	sp, sp, #20
   13d70:	add	ip, sp, #16
   13d74:	strb	r3, [ip, #-1]!
   13d78:	mov	r3, #3
   13d7c:	str	r3, [sp]
   13d80:	mov	r3, ip
   13d84:	bl	13668 <table_set@@Base>
   13d88:	add	sp, sp, #20
   13d8c:	pop	{pc}		; (ldr pc, [sp], #4)

00013d90 <table_set_int16@@Base>:
   13d90:	push	{lr}		; (str lr, [sp, #-4]!)
   13d94:	sub	sp, sp, #20
   13d98:	add	ip, sp, #16
   13d9c:	strh	r3, [ip, #-2]!
   13da0:	mov	r3, #4
   13da4:	str	r3, [sp]
   13da8:	mov	r3, ip
   13dac:	bl	13668 <table_set@@Base>
   13db0:	add	sp, sp, #20
   13db4:	pop	{pc}		; (ldr pc, [sp], #4)

00013db8 <table_set_uint16@@Base>:
   13db8:	push	{lr}		; (str lr, [sp, #-4]!)
   13dbc:	sub	sp, sp, #20
   13dc0:	add	ip, sp, #16
   13dc4:	strh	r3, [ip, #-2]!
   13dc8:	mov	r3, #5
   13dcc:	str	r3, [sp]
   13dd0:	mov	r3, ip
   13dd4:	bl	13668 <table_set@@Base>
   13dd8:	add	sp, sp, #20
   13ddc:	pop	{pc}		; (ldr pc, [sp], #4)

00013de0 <table_set_int32@@Base>:
   13de0:	push	{lr}		; (str lr, [sp, #-4]!)
   13de4:	sub	sp, sp, #20
   13de8:	add	ip, sp, #16
   13dec:	str	r3, [ip, #-4]!
   13df0:	mov	r3, #6
   13df4:	str	r3, [sp]
   13df8:	mov	r3, ip
   13dfc:	bl	13668 <table_set@@Base>
   13e00:	add	sp, sp, #20
   13e04:	pop	{pc}		; (ldr pc, [sp], #4)

00013e08 <table_set_uint32@@Base>:
   13e08:	push	{lr}		; (str lr, [sp, #-4]!)
   13e0c:	sub	sp, sp, #20
   13e10:	add	ip, sp, #16
   13e14:	str	r3, [ip, #-4]!
   13e18:	mov	r3, #7
   13e1c:	str	r3, [sp]
   13e20:	mov	r3, ip
   13e24:	bl	13668 <table_set@@Base>
   13e28:	add	sp, sp, #20
   13e2c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e30 <table_set_int64@@Base>:
   13e30:	push	{lr}		; (str lr, [sp, #-4]!)
   13e34:	sub	sp, sp, #12
   13e38:	mov	r3, #8
   13e3c:	str	r3, [sp]
   13e40:	add	r3, sp, #16
   13e44:	bl	13668 <table_set@@Base>
   13e48:	add	sp, sp, #12
   13e4c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e50 <table_set_uint64@@Base>:
   13e50:	push	{lr}		; (str lr, [sp, #-4]!)
   13e54:	sub	sp, sp, #12
   13e58:	mov	r3, #9
   13e5c:	str	r3, [sp]
   13e60:	add	r3, sp, #16
   13e64:	bl	13668 <table_set@@Base>
   13e68:	add	sp, sp, #12
   13e6c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e70 <table_set_short@@Base>:
   13e70:	push	{lr}		; (str lr, [sp, #-4]!)
   13e74:	sub	sp, sp, #20
   13e78:	add	ip, sp, #16
   13e7c:	strh	r3, [ip, #-2]!
   13e80:	mov	r3, #10
   13e84:	str	r3, [sp]
   13e88:	mov	r3, ip
   13e8c:	bl	13668 <table_set@@Base>
   13e90:	add	sp, sp, #20
   13e94:	pop	{pc}		; (ldr pc, [sp], #4)

00013e98 <table_set_ushort@@Base>:
   13e98:	push	{lr}		; (str lr, [sp, #-4]!)
   13e9c:	sub	sp, sp, #20
   13ea0:	add	ip, sp, #16
   13ea4:	strh	r3, [ip, #-2]!
   13ea8:	mov	r3, #11
   13eac:	str	r3, [sp]
   13eb0:	mov	r3, ip
   13eb4:	bl	13668 <table_set@@Base>
   13eb8:	add	sp, sp, #20
   13ebc:	pop	{pc}		; (ldr pc, [sp], #4)

00013ec0 <table_set_long@@Base>:
   13ec0:	push	{lr}		; (str lr, [sp, #-4]!)
   13ec4:	sub	sp, sp, #20
   13ec8:	add	ip, sp, #16
   13ecc:	str	r3, [ip, #-4]!
   13ed0:	mov	r3, #12
   13ed4:	str	r3, [sp]
   13ed8:	mov	r3, ip
   13edc:	bl	13668 <table_set@@Base>
   13ee0:	add	sp, sp, #20
   13ee4:	pop	{pc}		; (ldr pc, [sp], #4)

00013ee8 <table_set_ulong@@Base>:
   13ee8:	push	{lr}		; (str lr, [sp, #-4]!)
   13eec:	sub	sp, sp, #20
   13ef0:	add	ip, sp, #16
   13ef4:	str	r3, [ip, #-4]!
   13ef8:	mov	r3, #13
   13efc:	str	r3, [sp]
   13f00:	mov	r3, ip
   13f04:	bl	13668 <table_set@@Base>
   13f08:	add	sp, sp, #20
   13f0c:	pop	{pc}		; (ldr pc, [sp], #4)

00013f10 <table_set_llong@@Base>:
   13f10:	push	{lr}		; (str lr, [sp, #-4]!)
   13f14:	sub	sp, sp, #12
   13f18:	mov	r3, #14
   13f1c:	str	r3, [sp]
   13f20:	add	r3, sp, #16
   13f24:	bl	13668 <table_set@@Base>
   13f28:	add	sp, sp, #12
   13f2c:	pop	{pc}		; (ldr pc, [sp], #4)

00013f30 <table_set_ullong@@Base>:
   13f30:	push	{lr}		; (str lr, [sp, #-4]!)
   13f34:	sub	sp, sp, #12
   13f38:	mov	r3, #15
   13f3c:	str	r3, [sp]
   13f40:	add	r3, sp, #16
   13f44:	bl	13668 <table_set@@Base>
   13f48:	add	sp, sp, #12
   13f4c:	pop	{pc}		; (ldr pc, [sp], #4)

00013f50 <table_set_float@@Base>:
   13f50:	push	{lr}		; (str lr, [sp, #-4]!)
   13f54:	sub	sp, sp, #20
   13f58:	add	r3, sp, #16
   13f5c:	vstmdb	r3!, {s0}
   13f60:	mov	ip, #16
   13f64:	str	ip, [sp]
   13f68:	bl	13668 <table_set@@Base>
   13f6c:	add	sp, sp, #20
   13f70:	pop	{pc}		; (ldr pc, [sp], #4)

00013f74 <table_set_double@@Base>:
   13f74:	push	{lr}		; (str lr, [sp, #-4]!)
   13f78:	sub	sp, sp, #20
   13f7c:	add	r3, sp, #16
   13f80:	vstmdb	r3!, {d0}
   13f84:	mov	ip, #17
   13f88:	str	ip, [sp]
   13f8c:	bl	13668 <table_set@@Base>
   13f90:	add	sp, sp, #20
   13f94:	pop	{pc}		; (ldr pc, [sp], #4)

00013f98 <table_set_ldouble@@Base>:
   13f98:	push	{lr}		; (str lr, [sp, #-4]!)
   13f9c:	sub	sp, sp, #20
   13fa0:	add	r3, sp, #16
   13fa4:	vstmdb	r3!, {d0}
   13fa8:	mov	ip, #18
   13fac:	str	ip, [sp]
   13fb0:	bl	13668 <table_set@@Base>
   13fb4:	add	sp, sp, #20
   13fb8:	pop	{pc}		; (ldr pc, [sp], #4)

00013fbc <table_set_string@@Base>:
   13fbc:	push	{lr}		; (str lr, [sp, #-4]!)
   13fc0:	sub	sp, sp, #12
   13fc4:	mov	ip, #21
   13fc8:	str	ip, [sp]
   13fcc:	bl	13668 <table_set@@Base>
   13fd0:	add	sp, sp, #12
   13fd4:	pop	{pc}		; (ldr pc, [sp], #4)

00013fd8 <table_set_char@@Base>:
   13fd8:	push	{lr}		; (str lr, [sp, #-4]!)
   13fdc:	sub	sp, sp, #20
   13fe0:	add	ip, sp, #16
   13fe4:	strb	r3, [ip, #-1]!
   13fe8:	mov	r3, #19
   13fec:	str	r3, [sp]
   13ff0:	mov	r3, ip
   13ff4:	bl	13668 <table_set@@Base>
   13ff8:	add	sp, sp, #20
   13ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00014000 <table_set_uchar@@Base>:
   14000:	push	{lr}		; (str lr, [sp, #-4]!)
   14004:	sub	sp, sp, #20
   14008:	add	ip, sp, #16
   1400c:	strb	r3, [ip, #-1]!
   14010:	mov	r3, #20
   14014:	str	r3, [sp]
   14018:	mov	r3, ip
   1401c:	bl	13668 <table_set@@Base>
   14020:	add	sp, sp, #20
   14024:	pop	{pc}		; (ldr pc, [sp], #4)

00014028 <table_set_ptr@@Base>:
   14028:	push	{lr}		; (str lr, [sp, #-4]!)
   1402c:	sub	sp, sp, #12
   14030:	mov	ip, #23
   14034:	str	ip, [sp]
   14038:	bl	13668 <table_set@@Base>
   1403c:	add	sp, sp, #12
   14040:	pop	{pc}		; (ldr pc, [sp], #4)

00014044 <table_cell_to_buffer@@Base>:
   14044:	push	{r4, r5, r6, r7, lr}
   14048:	sub	sp, sp, #12
   1404c:	mov	r6, r0
   14050:	mov	r7, r1
   14054:	mov	r4, r2
   14058:	mov	r5, r3
   1405c:	mov	r1, r2
   14060:	bl	12720 <table_get_column_data_type@@Base>
   14064:	cmp	r0, #23
   14068:	ldrls	pc, [pc, r0, lsl #2]
   1406c:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14070:	ldrdeq	r4, [r1], -r0
   14074:	andeq	r4, r1, r0, lsl #2
   14078:	andeq	r4, r1, r8, lsr #2
   1407c:	andeq	r4, r1, r0, asr r1
   14080:	andeq	r4, r1, r8, ror r1
   14084:	andeq	r4, r1, r0, lsr #3
   14088:	andeq	r4, r1, r8, asr #3
   1408c:	strdeq	r4, [r1], -r0
   14090:	andeq	r4, r1, r8, lsl r2
   14094:	andeq	r4, r1, r0, asr #4
   14098:	andeq	r4, r1, r8, ror #4
   1409c:	muleq	r1, r0, r2
   140a0:			; <UNDEFINED> instruction: 0x000142b8
   140a4:	andeq	r4, r1, r0, ror #5
   140a8:	andeq	r4, r1, r8, lsl #6
   140ac:	andeq	r4, r1, r0, lsr r3
   140b0:	andeq	r4, r1, r0, lsl #7
   140b4:	andeq	r4, r1, ip, lsr #7
   140b8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140bc:	andeq	r4, r1, r4, lsr #8
   140c0:	andeq	r4, r1, ip, asr #8
   140c4:	andeq	r4, r1, r8, asr r3
   140c8:	strdeq	r4, [r1], -ip
   140cc:	andeq	r4, r1, r4, ror r4
   140d0:	mov	r2, r4
   140d4:	mov	r1, r7
   140d8:	mov	r0, r6
   140dc:	bl	132b4 <table_get_int@@Base>
   140e0:	mov	r3, r0
   140e4:	ldr	r2, [pc, #944]	; 1449c <table_cell_to_buffer@@Base+0x458>
   140e8:	ldr	r1, [sp, #32]
   140ec:	mov	r0, r5
   140f0:	bl	11b0c <snprintf@plt>
   140f4:	mov	r0, #0
   140f8:	add	sp, sp, #12
   140fc:	pop	{r4, r5, r6, r7, pc}
   14100:	mov	r2, r4
   14104:	mov	r1, r7
   14108:	mov	r0, r6
   1410c:	bl	132c4 <table_get_uint@@Base>
   14110:	mov	r3, r0
   14114:	ldr	r2, [pc, #900]	; 144a0 <table_cell_to_buffer@@Base+0x45c>
   14118:	ldr	r1, [sp, #32]
   1411c:	mov	r0, r5
   14120:	bl	11b0c <snprintf@plt>
   14124:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14128:	mov	r2, r4
   1412c:	mov	r1, r7
   14130:	mov	r0, r6
   14134:	bl	132d4 <table_get_int8@@Base>
   14138:	mov	r3, r0
   1413c:	ldr	r2, [pc, #856]	; 1449c <table_cell_to_buffer@@Base+0x458>
   14140:	ldr	r1, [sp, #32]
   14144:	mov	r0, r5
   14148:	bl	11b0c <snprintf@plt>
   1414c:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14150:	mov	r2, r4
   14154:	mov	r1, r7
   14158:	mov	r0, r6
   1415c:	bl	132e4 <table_get_uint8@@Base>
   14160:	mov	r3, r0
   14164:	ldr	r2, [pc, #820]	; 144a0 <table_cell_to_buffer@@Base+0x45c>
   14168:	ldr	r1, [sp, #32]
   1416c:	mov	r0, r5
   14170:	bl	11b0c <snprintf@plt>
   14174:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14178:	mov	r2, r4
   1417c:	mov	r1, r7
   14180:	mov	r0, r6
   14184:	bl	132f4 <table_get_int16@@Base>
   14188:	mov	r3, r0
   1418c:	ldr	r2, [pc, #776]	; 1449c <table_cell_to_buffer@@Base+0x458>
   14190:	ldr	r1, [sp, #32]
   14194:	mov	r0, r5
   14198:	bl	11b0c <snprintf@plt>
   1419c:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   141a0:	mov	r2, r4
   141a4:	mov	r1, r7
   141a8:	mov	r0, r6
   141ac:	bl	13304 <table_get_uint16@@Base>
   141b0:	mov	r3, r0
   141b4:	ldr	r2, [pc, #740]	; 144a0 <table_cell_to_buffer@@Base+0x45c>
   141b8:	ldr	r1, [sp, #32]
   141bc:	mov	r0, r5
   141c0:	bl	11b0c <snprintf@plt>
   141c4:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   141c8:	mov	r2, r4
   141cc:	mov	r1, r7
   141d0:	mov	r0, r6
   141d4:	bl	13314 <table_get_int32@@Base>
   141d8:	mov	r3, r0
   141dc:	ldr	r2, [pc, #696]	; 1449c <table_cell_to_buffer@@Base+0x458>
   141e0:	ldr	r1, [sp, #32]
   141e4:	mov	r0, r5
   141e8:	bl	11b0c <snprintf@plt>
   141ec:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   141f0:	mov	r2, r4
   141f4:	mov	r1, r7
   141f8:	mov	r0, r6
   141fc:	bl	13324 <table_get_uint32@@Base>
   14200:	mov	r3, r0
   14204:	ldr	r2, [pc, #660]	; 144a0 <table_cell_to_buffer@@Base+0x45c>
   14208:	ldr	r1, [sp, #32]
   1420c:	mov	r0, r5
   14210:	bl	11b0c <snprintf@plt>
   14214:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14218:	mov	r2, r4
   1421c:	mov	r1, r7
   14220:	mov	r0, r6
   14224:	bl	13334 <table_get_int64@@Base>
   14228:	strd	r0, [sp]
   1422c:	ldr	r2, [pc, #624]	; 144a4 <table_cell_to_buffer@@Base+0x460>
   14230:	ldr	r1, [sp, #32]
   14234:	mov	r0, r5
   14238:	bl	11b0c <snprintf@plt>
   1423c:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14240:	mov	r2, r4
   14244:	mov	r1, r7
   14248:	mov	r0, r6
   1424c:	bl	13344 <table_get_uint64@@Base>
   14250:	strd	r0, [sp]
   14254:	ldr	r2, [pc, #588]	; 144a8 <table_cell_to_buffer@@Base+0x464>
   14258:	ldr	r1, [sp, #32]
   1425c:	mov	r0, r5
   14260:	bl	11b0c <snprintf@plt>
   14264:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14268:	mov	r2, r4
   1426c:	mov	r1, r7
   14270:	mov	r0, r6
   14274:	bl	13354 <table_get_short@@Base>
   14278:	mov	r3, r0
   1427c:	ldr	r2, [pc, #552]	; 144ac <table_cell_to_buffer@@Base+0x468>
   14280:	ldr	r1, [sp, #32]
   14284:	mov	r0, r5
   14288:	bl	11b0c <snprintf@plt>
   1428c:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14290:	mov	r2, r4
   14294:	mov	r1, r7
   14298:	mov	r0, r6
   1429c:	bl	13364 <table_get_ushort@@Base>
   142a0:	mov	r3, r0
   142a4:	ldr	r2, [pc, #516]	; 144b0 <table_cell_to_buffer@@Base+0x46c>
   142a8:	ldr	r1, [sp, #32]
   142ac:	mov	r0, r5
   142b0:	bl	11b0c <snprintf@plt>
   142b4:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   142b8:	mov	r2, r4
   142bc:	mov	r1, r7
   142c0:	mov	r0, r6
   142c4:	bl	13374 <table_get_long@@Base>
   142c8:	mov	r3, r0
   142cc:	ldr	r2, [pc, #480]	; 144b4 <table_cell_to_buffer@@Base+0x470>
   142d0:	ldr	r1, [sp, #32]
   142d4:	mov	r0, r5
   142d8:	bl	11b0c <snprintf@plt>
   142dc:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   142e0:	mov	r2, r4
   142e4:	mov	r1, r7
   142e8:	mov	r0, r6
   142ec:	bl	13384 <table_get_ulong@@Base>
   142f0:	mov	r3, r0
   142f4:	ldr	r2, [pc, #444]	; 144b8 <table_cell_to_buffer@@Base+0x474>
   142f8:	ldr	r1, [sp, #32]
   142fc:	mov	r0, r5
   14300:	bl	11b0c <snprintf@plt>
   14304:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14308:	mov	r2, r4
   1430c:	mov	r1, r7
   14310:	mov	r0, r6
   14314:	bl	13394 <table_get_llong@@Base>
   14318:	strd	r0, [sp]
   1431c:	ldr	r2, [pc, #384]	; 144a4 <table_cell_to_buffer@@Base+0x460>
   14320:	ldr	r1, [sp, #32]
   14324:	mov	r0, r5
   14328:	bl	11b0c <snprintf@plt>
   1432c:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14330:	mov	r2, r4
   14334:	mov	r1, r7
   14338:	mov	r0, r6
   1433c:	bl	133a4 <table_get_ullong@@Base>
   14340:	strd	r0, [sp]
   14344:	ldr	r2, [pc, #348]	; 144a8 <table_cell_to_buffer@@Base+0x464>
   14348:	ldr	r1, [sp, #32]
   1434c:	mov	r0, r5
   14350:	bl	11b0c <snprintf@plt>
   14354:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14358:	mov	r2, r4
   1435c:	mov	r1, r7
   14360:	mov	r0, r6
   14364:	bl	13404 <table_get_string@@Base>
   14368:	mov	r3, r0
   1436c:	ldr	r2, [pc, #328]	; 144bc <table_cell_to_buffer@@Base+0x478>
   14370:	ldr	r1, [sp, #32]
   14374:	mov	r0, r5
   14378:	bl	11b0c <snprintf@plt>
   1437c:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14380:	mov	r2, r4
   14384:	mov	r1, r7
   14388:	mov	r0, r6
   1438c:	bl	133b4 <table_get_float@@Base>
   14390:	vcvt.f64.f32	d0, s0
   14394:	vstr	d0, [sp]
   14398:	ldr	r2, [pc, #288]	; 144c0 <table_cell_to_buffer@@Base+0x47c>
   1439c:	ldr	r1, [sp, #32]
   143a0:	mov	r0, r5
   143a4:	bl	11b0c <snprintf@plt>
   143a8:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   143ac:	mov	r2, r4
   143b0:	mov	r1, r7
   143b4:	mov	r0, r6
   143b8:	bl	133c4 <table_get_double@@Base>
   143bc:	vstr	d0, [sp]
   143c0:	ldr	r2, [pc, #252]	; 144c4 <table_cell_to_buffer@@Base+0x480>
   143c4:	ldr	r1, [sp, #32]
   143c8:	mov	r0, r5
   143cc:	bl	11b0c <snprintf@plt>
   143d0:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   143d4:	mov	r2, r4
   143d8:	mov	r1, r7
   143dc:	mov	r0, r6
   143e0:	bl	133d4 <table_get_ldouble@@Base>
   143e4:	vstr	d0, [sp]
   143e8:	ldr	r2, [pc, #216]	; 144c8 <table_cell_to_buffer@@Base+0x484>
   143ec:	ldr	r1, [sp, #32]
   143f0:	mov	r0, r5
   143f4:	bl	11b0c <snprintf@plt>
   143f8:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   143fc:	mov	r2, r4
   14400:	mov	r1, r7
   14404:	mov	r0, r6
   14408:	bl	132a4 <table_get_bool@@Base>
   1440c:	mov	r3, r0
   14410:	ldr	r2, [pc, #132]	; 1449c <table_cell_to_buffer@@Base+0x458>
   14414:	ldr	r1, [sp, #32]
   14418:	mov	r0, r5
   1441c:	bl	11b0c <snprintf@plt>
   14420:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14424:	mov	r2, r4
   14428:	mov	r1, r7
   1442c:	mov	r0, r6
   14430:	bl	133e4 <table_get_char@@Base>
   14434:	mov	r3, r0
   14438:	ldr	r2, [pc, #140]	; 144cc <table_cell_to_buffer@@Base+0x488>
   1443c:	ldr	r1, [sp, #32]
   14440:	mov	r0, r5
   14444:	bl	11b0c <snprintf@plt>
   14448:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   1444c:	mov	r2, r4
   14450:	mov	r1, r7
   14454:	mov	r0, r6
   14458:	bl	133f4 <table_get_uchar@@Base>
   1445c:	mov	r3, r0
   14460:	ldr	r2, [pc, #100]	; 144cc <table_cell_to_buffer@@Base+0x488>
   14464:	ldr	r1, [sp, #32]
   14468:	mov	r0, r5
   1446c:	bl	11b0c <snprintf@plt>
   14470:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   14474:	mov	r2, r4
   14478:	mov	r1, r7
   1447c:	mov	r0, r6
   14480:	bl	13410 <table_get_ptr@@Base>
   14484:	mov	r3, r0
   14488:	ldr	r2, [pc, #64]	; 144d0 <table_cell_to_buffer@@Base+0x48c>
   1448c:	ldr	r1, [sp, #32]
   14490:	mov	r0, r5
   14494:	bl	11b0c <snprintf@plt>
   14498:	b	140f4 <table_cell_to_buffer@@Base+0xb0>
   1449c:	andeq	r4, r1, r4, lsr #29
   144a0:	andeq	r4, r1, r8, lsr #29
   144a4:	andeq	r4, r1, ip, lsr #29
   144a8:			; <UNDEFINED> instruction: 0x00014eb4
   144ac:			; <UNDEFINED> instruction: 0x00014ebc
   144b0:	andeq	r4, r1, r0, asr #29
   144b4:	andeq	r4, r1, r4, asr #29
   144b8:	andeq	r4, r1, r8, asr #29
   144bc:	andeq	r4, r1, ip, asr #29
   144c0:	ldrdeq	r4, [r1], -r0
   144c4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144c8:	ldrdeq	r4, [r1], -r8
   144cc:	ldrdeq	r4, [r1], -ip
   144d0:	andeq	r4, r1, r0, ror #29

000144d4 <table_cell_from_buffer@@Base>:
   144d4:	push	{r4, r5, r6, r7, lr}
   144d8:	sub	sp, sp, #268	; 0x10c
   144dc:	mov	r6, r0
   144e0:	mov	r7, r1
   144e4:	mov	r4, r2
   144e8:	mov	r5, r3
   144ec:	mov	r1, r2
   144f0:	bl	12720 <table_get_column_data_type@@Base>
   144f4:	cmp	r0, #23
   144f8:	ldrls	pc, [pc, r0, lsl #2]
   144fc:	b	14ae0 <table_cell_from_buffer@@Base+0x60c>
   14500:	andeq	r4, r1, r0, ror #10
   14504:	muleq	r1, r8, r5
   14508:	ldrdeq	r4, [r1], -r0
   1450c:	andeq	r4, r1, r8, lsl #12
   14510:	andeq	r4, r1, r0, asr #12
   14514:	andeq	r4, r1, r8, ror r6
   14518:			; <UNDEFINED> instruction: 0x000146b0
   1451c:	andeq	r4, r1, r8, ror #13
   14520:	andeq	r4, r1, r0, lsr #14
   14524:	andeq	r4, r1, ip, asr r7
   14528:	muleq	r1, r8, r7
   1452c:	ldrdeq	r4, [r1], -r0
   14530:	andeq	r4, r1, r8, lsl #16
   14534:	andeq	r4, r1, r0, asr #16
   14538:	andeq	r4, r1, r8, ror r8
   1453c:			; <UNDEFINED> instruction: 0x000148b4
   14540:	andeq	r4, r1, r8, lsr #18
   14544:	andeq	r4, r1, r0, ror #18
   14548:	muleq	r1, r8, r9
   1454c:	andeq	r4, r1, ip, lsr #20
   14550:	andeq	r4, r1, r4, ror #20
   14554:	strdeq	r4, [r1], -r0
   14558:	ldrdeq	r4, [r1], -r0
   1455c:	muleq	r1, ip, sl
   14560:	add	r2, sp, #8
   14564:	ldr	r1, [pc, #1404]	; 14ae8 <table_cell_from_buffer@@Base+0x614>
   14568:	mov	r0, r5
   1456c:	bl	11b18 <__isoc99_sscanf@plt>
   14570:	cmp	r0, #1
   14574:	mvnne	r5, #0
   14578:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   1457c:	ldr	r3, [sp, #8]
   14580:	mov	r2, r4
   14584:	mov	r1, r7
   14588:	mov	r0, r6
   1458c:	bl	13cf0 <table_set_int@@Base>
   14590:	mov	r5, #0
   14594:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14598:	add	r2, sp, #8
   1459c:	ldr	r1, [pc, #1352]	; 14aec <table_cell_from_buffer@@Base+0x618>
   145a0:	mov	r0, r5
   145a4:	bl	11b18 <__isoc99_sscanf@plt>
   145a8:	cmp	r0, #1
   145ac:	mvnne	r5, #0
   145b0:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   145b4:	ldr	r3, [sp, #8]
   145b8:	mov	r2, r4
   145bc:	mov	r1, r7
   145c0:	mov	r0, r6
   145c4:	bl	13d18 <table_set_uint@@Base>
   145c8:	mov	r5, #0
   145cc:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   145d0:	add	r2, sp, #8
   145d4:	ldr	r1, [pc, #1300]	; 14af0 <table_cell_from_buffer@@Base+0x61c>
   145d8:	mov	r0, r5
   145dc:	bl	11b18 <__isoc99_sscanf@plt>
   145e0:	cmp	r0, #1
   145e4:	mvnne	r5, #0
   145e8:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   145ec:	ldrsb	r3, [sp, #8]
   145f0:	mov	r2, r4
   145f4:	mov	r1, r7
   145f8:	mov	r0, r6
   145fc:	bl	13d40 <table_set_int8@@Base>
   14600:	mov	r5, #0
   14604:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14608:	add	r2, sp, #8
   1460c:	ldr	r1, [pc, #1248]	; 14af4 <table_cell_from_buffer@@Base+0x620>
   14610:	mov	r0, r5
   14614:	bl	11b18 <__isoc99_sscanf@plt>
   14618:	cmp	r0, #1
   1461c:	mvnne	r5, #0
   14620:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14624:	ldrb	r3, [sp, #8]
   14628:	mov	r2, r4
   1462c:	mov	r1, r7
   14630:	mov	r0, r6
   14634:	bl	13d68 <table_set_uint8@@Base>
   14638:	mov	r5, #0
   1463c:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14640:	add	r2, sp, #8
   14644:	ldr	r1, [pc, #1196]	; 14af8 <table_cell_from_buffer@@Base+0x624>
   14648:	mov	r0, r5
   1464c:	bl	11b18 <__isoc99_sscanf@plt>
   14650:	cmp	r0, #1
   14654:	mvnne	r5, #0
   14658:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   1465c:	ldrsh	r3, [sp, #8]
   14660:	mov	r2, r4
   14664:	mov	r1, r7
   14668:	mov	r0, r6
   1466c:	bl	13d90 <table_set_int16@@Base>
   14670:	mov	r5, #0
   14674:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14678:	add	r2, sp, #8
   1467c:	ldr	r1, [pc, #1144]	; 14afc <table_cell_from_buffer@@Base+0x628>
   14680:	mov	r0, r5
   14684:	bl	11b18 <__isoc99_sscanf@plt>
   14688:	cmp	r0, #1
   1468c:	mvnne	r5, #0
   14690:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14694:	ldrh	r3, [sp, #8]
   14698:	mov	r2, r4
   1469c:	mov	r1, r7
   146a0:	mov	r0, r6
   146a4:	bl	13db8 <table_set_uint16@@Base>
   146a8:	mov	r5, #0
   146ac:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   146b0:	add	r2, sp, #8
   146b4:	ldr	r1, [pc, #1068]	; 14ae8 <table_cell_from_buffer@@Base+0x614>
   146b8:	mov	r0, r5
   146bc:	bl	11b18 <__isoc99_sscanf@plt>
   146c0:	cmp	r0, #1
   146c4:	mvnne	r5, #0
   146c8:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   146cc:	ldr	r3, [sp, #8]
   146d0:	mov	r2, r4
   146d4:	mov	r1, r7
   146d8:	mov	r0, r6
   146dc:	bl	13de0 <table_set_int32@@Base>
   146e0:	mov	r5, #0
   146e4:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   146e8:	add	r2, sp, #8
   146ec:	ldr	r1, [pc, #1016]	; 14aec <table_cell_from_buffer@@Base+0x618>
   146f0:	mov	r0, r5
   146f4:	bl	11b18 <__isoc99_sscanf@plt>
   146f8:	cmp	r0, #1
   146fc:	mvnne	r5, #0
   14700:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14704:	ldr	r3, [sp, #8]
   14708:	mov	r2, r4
   1470c:	mov	r1, r7
   14710:	mov	r0, r6
   14714:	bl	13e08 <table_set_uint32@@Base>
   14718:	mov	r5, #0
   1471c:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14720:	add	r2, sp, #8
   14724:	ldr	r1, [pc, #980]	; 14b00 <table_cell_from_buffer@@Base+0x62c>
   14728:	mov	r0, r5
   1472c:	bl	11b18 <__isoc99_sscanf@plt>
   14730:	cmp	r0, #1
   14734:	mvnne	r5, #0
   14738:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   1473c:	ldrd	r2, [sp, #8]
   14740:	strd	r2, [sp]
   14744:	mov	r2, r4
   14748:	mov	r1, r7
   1474c:	mov	r0, r6
   14750:	bl	13e30 <table_set_int64@@Base>
   14754:	mov	r5, #0
   14758:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   1475c:	add	r2, sp, #8
   14760:	ldr	r1, [pc, #924]	; 14b04 <table_cell_from_buffer@@Base+0x630>
   14764:	mov	r0, r5
   14768:	bl	11b18 <__isoc99_sscanf@plt>
   1476c:	cmp	r0, #1
   14770:	mvnne	r5, #0
   14774:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14778:	ldrd	r2, [sp, #8]
   1477c:	strd	r2, [sp]
   14780:	mov	r2, r4
   14784:	mov	r1, r7
   14788:	mov	r0, r6
   1478c:	bl	13e50 <table_set_uint64@@Base>
   14790:	mov	r5, #0
   14794:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14798:	add	r2, sp, #8
   1479c:	ldr	r1, [pc, #852]	; 14af8 <table_cell_from_buffer@@Base+0x624>
   147a0:	mov	r0, r5
   147a4:	bl	11b18 <__isoc99_sscanf@plt>
   147a8:	cmp	r0, #1
   147ac:	mvnne	r5, #0
   147b0:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   147b4:	ldrsh	r3, [sp, #8]
   147b8:	mov	r2, r4
   147bc:	mov	r1, r7
   147c0:	mov	r0, r6
   147c4:	bl	13e70 <table_set_short@@Base>
   147c8:	mov	r5, #0
   147cc:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   147d0:	add	r2, sp, #8
   147d4:	ldr	r1, [pc, #800]	; 14afc <table_cell_from_buffer@@Base+0x628>
   147d8:	mov	r0, r5
   147dc:	bl	11b18 <__isoc99_sscanf@plt>
   147e0:	cmp	r0, #1
   147e4:	mvnne	r5, #0
   147e8:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   147ec:	ldrh	r3, [sp, #8]
   147f0:	mov	r2, r4
   147f4:	mov	r1, r7
   147f8:	mov	r0, r6
   147fc:	bl	13e98 <table_set_ushort@@Base>
   14800:	mov	r5, #0
   14804:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14808:	add	r2, sp, #8
   1480c:	ldr	r1, [pc, #756]	; 14b08 <table_cell_from_buffer@@Base+0x634>
   14810:	mov	r0, r5
   14814:	bl	11b18 <__isoc99_sscanf@plt>
   14818:	cmp	r0, #1
   1481c:	mvnne	r5, #0
   14820:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14824:	ldr	r3, [sp, #8]
   14828:	mov	r2, r4
   1482c:	mov	r1, r7
   14830:	mov	r0, r6
   14834:	bl	13ec0 <table_set_long@@Base>
   14838:	mov	r5, #0
   1483c:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14840:	add	r2, sp, #8
   14844:	ldr	r1, [pc, #704]	; 14b0c <table_cell_from_buffer@@Base+0x638>
   14848:	mov	r0, r5
   1484c:	bl	11b18 <__isoc99_sscanf@plt>
   14850:	cmp	r0, #1
   14854:	mvnne	r5, #0
   14858:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   1485c:	ldr	r3, [sp, #8]
   14860:	mov	r2, r4
   14864:	mov	r1, r7
   14868:	mov	r0, r6
   1486c:	bl	13ee8 <table_set_ulong@@Base>
   14870:	mov	r5, #0
   14874:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14878:	add	r2, sp, #8
   1487c:	ldr	r1, [pc, #636]	; 14b00 <table_cell_from_buffer@@Base+0x62c>
   14880:	mov	r0, r5
   14884:	bl	11b18 <__isoc99_sscanf@plt>
   14888:	cmp	r0, #1
   1488c:	mvnne	r5, #0
   14890:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14894:	ldrd	r2, [sp, #8]
   14898:	strd	r2, [sp]
   1489c:	mov	r2, r4
   148a0:	mov	r1, r7
   148a4:	mov	r0, r6
   148a8:	bl	13f10 <table_set_llong@@Base>
   148ac:	mov	r5, #0
   148b0:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   148b4:	add	r2, sp, #8
   148b8:	ldr	r1, [pc, #580]	; 14b04 <table_cell_from_buffer@@Base+0x630>
   148bc:	mov	r0, r5
   148c0:	bl	11b18 <__isoc99_sscanf@plt>
   148c4:	cmp	r0, #1
   148c8:	mvnne	r5, #0
   148cc:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   148d0:	ldrd	r2, [sp, #8]
   148d4:	strd	r2, [sp]
   148d8:	mov	r2, r4
   148dc:	mov	r1, r7
   148e0:	mov	r0, r6
   148e4:	bl	13f30 <table_set_ullong@@Base>
   148e8:	mov	r5, #0
   148ec:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   148f0:	add	r2, sp, #8
   148f4:	ldr	r1, [pc, #532]	; 14b10 <table_cell_from_buffer@@Base+0x63c>
   148f8:	mov	r0, r5
   148fc:	bl	11b18 <__isoc99_sscanf@plt>
   14900:	cmp	r0, #1
   14904:	mvnne	r5, #0
   14908:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   1490c:	add	r3, sp, #8
   14910:	mov	r2, r4
   14914:	mov	r1, r7
   14918:	mov	r0, r6
   1491c:	bl	13fbc <table_set_string@@Base>
   14920:	mov	r5, #0
   14924:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14928:	add	r2, sp, #8
   1492c:	ldr	r1, [pc, #480]	; 14b14 <table_cell_from_buffer@@Base+0x640>
   14930:	mov	r0, r5
   14934:	bl	11b18 <__isoc99_sscanf@plt>
   14938:	cmp	r0, #1
   1493c:	mvnne	r5, #0
   14940:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14944:	vldr	s0, [sp, #8]
   14948:	mov	r2, r4
   1494c:	mov	r1, r7
   14950:	mov	r0, r6
   14954:	bl	13f50 <table_set_float@@Base>
   14958:	mov	r5, #0
   1495c:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14960:	add	r2, sp, #8
   14964:	ldr	r1, [pc, #428]	; 14b18 <table_cell_from_buffer@@Base+0x644>
   14968:	mov	r0, r5
   1496c:	bl	11b18 <__isoc99_sscanf@plt>
   14970:	cmp	r0, #1
   14974:	mvnne	r5, #0
   14978:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   1497c:	vldr	d0, [sp, #8]
   14980:	mov	r2, r4
   14984:	mov	r1, r7
   14988:	mov	r0, r6
   1498c:	bl	13f74 <table_set_double@@Base>
   14990:	mov	r5, #0
   14994:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14998:	add	r2, sp, #8
   1499c:	ldr	r1, [pc, #376]	; 14b1c <table_cell_from_buffer@@Base+0x648>
   149a0:	mov	r0, r5
   149a4:	bl	11b18 <__isoc99_sscanf@plt>
   149a8:	cmp	r0, #1
   149ac:	mvnne	r5, #0
   149b0:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   149b4:	vldr	d0, [sp, #8]
   149b8:	mov	r2, r4
   149bc:	mov	r1, r7
   149c0:	mov	r0, r6
   149c4:	bl	13f98 <table_set_ldouble@@Base>
   149c8:	mov	r5, #0
   149cc:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   149d0:	add	r2, sp, #8
   149d4:	ldr	r1, [pc, #268]	; 14ae8 <table_cell_from_buffer@@Base+0x614>
   149d8:	mov	r0, r5
   149dc:	bl	11b18 <__isoc99_sscanf@plt>
   149e0:	cmp	r0, #1
   149e4:	mvnne	r5, #0
   149e8:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   149ec:	ldr	r5, [sp, #8]
   149f0:	cmp	r5, #0
   149f4:	beq	14a14 <table_cell_from_buffer@@Base+0x540>
   149f8:	mov	r3, #1
   149fc:	mov	r2, r4
   14a00:	mov	r1, r7
   14a04:	mov	r0, r6
   14a08:	bl	13cc8 <table_set_bool@@Base>
   14a0c:	mov	r5, #0
   14a10:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14a14:	mov	r3, #0
   14a18:	mov	r2, r4
   14a1c:	mov	r1, r7
   14a20:	mov	r0, r6
   14a24:	bl	13cc8 <table_set_bool@@Base>
   14a28:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14a2c:	add	r2, sp, #8
   14a30:	ldr	r1, [pc, #232]	; 14b20 <table_cell_from_buffer@@Base+0x64c>
   14a34:	mov	r0, r5
   14a38:	bl	11b18 <__isoc99_sscanf@plt>
   14a3c:	cmp	r0, #1
   14a40:	mvnne	r5, #0
   14a44:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14a48:	ldrb	r3, [sp, #8]
   14a4c:	mov	r2, r4
   14a50:	mov	r1, r7
   14a54:	mov	r0, r6
   14a58:	bl	13fd8 <table_set_char@@Base>
   14a5c:	mov	r5, #0
   14a60:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14a64:	add	r2, sp, #8
   14a68:	ldr	r1, [pc, #176]	; 14b20 <table_cell_from_buffer@@Base+0x64c>
   14a6c:	mov	r0, r5
   14a70:	bl	11b18 <__isoc99_sscanf@plt>
   14a74:	cmp	r0, #1
   14a78:	mvnne	r5, #0
   14a7c:	bne	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14a80:	ldrb	r3, [sp, #8]
   14a84:	mov	r2, r4
   14a88:	mov	r1, r7
   14a8c:	mov	r0, r6
   14a90:	bl	14000 <table_set_uchar@@Base>
   14a94:	mov	r5, #0
   14a98:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14a9c:	add	r2, sp, #8
   14aa0:	ldr	r1, [pc, #124]	; 14b24 <table_cell_from_buffer@@Base+0x650>
   14aa4:	mov	r0, r5
   14aa8:	bl	11b18 <__isoc99_sscanf@plt>
   14aac:	cmp	r0, #1
   14ab0:	mvnne	r5, #0
   14ab4:	beq	14ac4 <table_cell_from_buffer@@Base+0x5f0>
   14ab8:	mov	r0, r5
   14abc:	add	sp, sp, #268	; 0x10c
   14ac0:	pop	{r4, r5, r6, r7, pc}
   14ac4:	ldr	r3, [sp, #8]
   14ac8:	mov	r2, r4
   14acc:	mov	r1, r7
   14ad0:	mov	r0, r6
   14ad4:	bl	14028 <table_set_ptr@@Base>
   14ad8:	mov	r5, #0
   14adc:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14ae0:	mov	r5, #0
   14ae4:	b	14ab8 <table_cell_from_buffer@@Base+0x5e4>
   14ae8:	andeq	r4, r1, r4, lsr #29
   14aec:	andeq	r4, r1, r8, lsr #29
   14af0:	andeq	r4, r1, r4, ror #29
   14af4:	andeq	r4, r1, ip, ror #29
   14af8:			; <UNDEFINED> instruction: 0x00014ebc
   14afc:	andeq	r4, r1, r0, asr #29
   14b00:	andeq	r4, r1, ip, lsr #29
   14b04:			; <UNDEFINED> instruction: 0x00014eb4
   14b08:	andeq	r4, r1, r4, asr #29
   14b0c:	andeq	r4, r1, r8, asr #29
   14b10:	andeq	r4, r1, ip, asr #29
   14b14:	ldrdeq	r4, [r1], -r0
   14b18:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b1c:	ldrdeq	r4, [r1], -r8
   14b20:	ldrdeq	r4, [r1], -ip
   14b24:	andeq	r4, r1, r0, ror #29

00014b28 <table_get_cell_ptr@@Base>:
   14b28:	push	{r4, lr}
   14b2c:	mov	r4, r2
   14b30:	bl	1364c <table_get_row_ptr@@Base>
   14b34:	ldr	r0, [r0]
   14b38:	add	r0, r0, r4, lsl #2
   14b3c:	pop	{r4, pc}

00014b40 <table_cell_init@@Base>:
   14b40:	push	{r4, lr}
   14b44:	bl	14b28 <table_get_cell_ptr@@Base>
   14b48:	mov	r3, #0
   14b4c:	str	r3, [r0]
   14b50:	pop	{r4, pc}

00014b54 <table_cell_destroy@@Base>:
   14b54:	push	{r4, r5, r6, lr}
   14b58:	mov	r5, r0
   14b5c:	mov	r6, r1
   14b60:	mov	r4, r2
   14b64:	mov	r1, r2
   14b68:	bl	12720 <table_get_column_data_type@@Base>
   14b6c:	cmp	r0, #23
   14b70:	popeq	{r4, r5, r6, pc}
   14b74:	mov	r2, r4
   14b78:	mov	r1, r6
   14b7c:	mov	r0, r5
   14b80:	bl	14b28 <table_get_cell_ptr@@Base>
   14b84:	ldr	r0, [r0]
   14b88:	cmp	r0, #0
   14b8c:	popeq	{r4, r5, r6, pc}
   14b90:	bl	11ab8 <free@plt>
   14b94:	pop	{r4, r5, r6, pc}

00014b98 <table_cell_nullify@@Base>:
   14b98:	push	{r4, lr}
   14b9c:	bl	14b28 <table_get_cell_ptr@@Base>
   14ba0:	mov	r4, r0
   14ba4:	ldr	r0, [r0]
   14ba8:	cmp	r0, #0
   14bac:	beq	14bbc <table_cell_nullify@@Base+0x24>
   14bb0:	bl	11ab8 <free@plt>
   14bb4:	mov	r3, #0
   14bb8:	str	r3, [r4]
   14bbc:	mov	r0, #0
   14bc0:	pop	{r4, pc}
   14bc4:	subs	r2, r1, #1
   14bc8:	bxeq	lr
   14bcc:	bcc	14da4 <table_cell_nullify@@Base+0x20c>
   14bd0:	cmp	r0, r1
   14bd4:	bls	14d88 <table_cell_nullify@@Base+0x1f0>
   14bd8:	tst	r1, r2
   14bdc:	beq	14d94 <table_cell_nullify@@Base+0x1fc>
   14be0:	clz	r3, r0
   14be4:	clz	r2, r1
   14be8:	sub	r3, r2, r3
   14bec:	rsbs	r3, r3, #31
   14bf0:	addne	r3, r3, r3, lsl #1
   14bf4:	mov	r2, #0
   14bf8:	addne	pc, pc, r3, lsl #2
   14bfc:	nop			; (mov r0, r0)
   14c00:	cmp	r0, r1, lsl #31
   14c04:	adc	r2, r2, r2
   14c08:	subcs	r0, r0, r1, lsl #31
   14c0c:	cmp	r0, r1, lsl #30
   14c10:	adc	r2, r2, r2
   14c14:	subcs	r0, r0, r1, lsl #30
   14c18:	cmp	r0, r1, lsl #29
   14c1c:	adc	r2, r2, r2
   14c20:	subcs	r0, r0, r1, lsl #29
   14c24:	cmp	r0, r1, lsl #28
   14c28:	adc	r2, r2, r2
   14c2c:	subcs	r0, r0, r1, lsl #28
   14c30:	cmp	r0, r1, lsl #27
   14c34:	adc	r2, r2, r2
   14c38:	subcs	r0, r0, r1, lsl #27
   14c3c:	cmp	r0, r1, lsl #26
   14c40:	adc	r2, r2, r2
   14c44:	subcs	r0, r0, r1, lsl #26
   14c48:	cmp	r0, r1, lsl #25
   14c4c:	adc	r2, r2, r2
   14c50:	subcs	r0, r0, r1, lsl #25
   14c54:	cmp	r0, r1, lsl #24
   14c58:	adc	r2, r2, r2
   14c5c:	subcs	r0, r0, r1, lsl #24
   14c60:	cmp	r0, r1, lsl #23
   14c64:	adc	r2, r2, r2
   14c68:	subcs	r0, r0, r1, lsl #23
   14c6c:	cmp	r0, r1, lsl #22
   14c70:	adc	r2, r2, r2
   14c74:	subcs	r0, r0, r1, lsl #22
   14c78:	cmp	r0, r1, lsl #21
   14c7c:	adc	r2, r2, r2
   14c80:	subcs	r0, r0, r1, lsl #21
   14c84:	cmp	r0, r1, lsl #20
   14c88:	adc	r2, r2, r2
   14c8c:	subcs	r0, r0, r1, lsl #20
   14c90:	cmp	r0, r1, lsl #19
   14c94:	adc	r2, r2, r2
   14c98:	subcs	r0, r0, r1, lsl #19
   14c9c:	cmp	r0, r1, lsl #18
   14ca0:	adc	r2, r2, r2
   14ca4:	subcs	r0, r0, r1, lsl #18
   14ca8:	cmp	r0, r1, lsl #17
   14cac:	adc	r2, r2, r2
   14cb0:	subcs	r0, r0, r1, lsl #17
   14cb4:	cmp	r0, r1, lsl #16
   14cb8:	adc	r2, r2, r2
   14cbc:	subcs	r0, r0, r1, lsl #16
   14cc0:	cmp	r0, r1, lsl #15
   14cc4:	adc	r2, r2, r2
   14cc8:	subcs	r0, r0, r1, lsl #15
   14ccc:	cmp	r0, r1, lsl #14
   14cd0:	adc	r2, r2, r2
   14cd4:	subcs	r0, r0, r1, lsl #14
   14cd8:	cmp	r0, r1, lsl #13
   14cdc:	adc	r2, r2, r2
   14ce0:	subcs	r0, r0, r1, lsl #13
   14ce4:	cmp	r0, r1, lsl #12
   14ce8:	adc	r2, r2, r2
   14cec:	subcs	r0, r0, r1, lsl #12
   14cf0:	cmp	r0, r1, lsl #11
   14cf4:	adc	r2, r2, r2
   14cf8:	subcs	r0, r0, r1, lsl #11
   14cfc:	cmp	r0, r1, lsl #10
   14d00:	adc	r2, r2, r2
   14d04:	subcs	r0, r0, r1, lsl #10
   14d08:	cmp	r0, r1, lsl #9
   14d0c:	adc	r2, r2, r2
   14d10:	subcs	r0, r0, r1, lsl #9
   14d14:	cmp	r0, r1, lsl #8
   14d18:	adc	r2, r2, r2
   14d1c:	subcs	r0, r0, r1, lsl #8
   14d20:	cmp	r0, r1, lsl #7
   14d24:	adc	r2, r2, r2
   14d28:	subcs	r0, r0, r1, lsl #7
   14d2c:	cmp	r0, r1, lsl #6
   14d30:	adc	r2, r2, r2
   14d34:	subcs	r0, r0, r1, lsl #6
   14d38:	cmp	r0, r1, lsl #5
   14d3c:	adc	r2, r2, r2
   14d40:	subcs	r0, r0, r1, lsl #5
   14d44:	cmp	r0, r1, lsl #4
   14d48:	adc	r2, r2, r2
   14d4c:	subcs	r0, r0, r1, lsl #4
   14d50:	cmp	r0, r1, lsl #3
   14d54:	adc	r2, r2, r2
   14d58:	subcs	r0, r0, r1, lsl #3
   14d5c:	cmp	r0, r1, lsl #2
   14d60:	adc	r2, r2, r2
   14d64:	subcs	r0, r0, r1, lsl #2
   14d68:	cmp	r0, r1, lsl #1
   14d6c:	adc	r2, r2, r2
   14d70:	subcs	r0, r0, r1, lsl #1
   14d74:	cmp	r0, r1
   14d78:	adc	r2, r2, r2
   14d7c:	subcs	r0, r0, r1
   14d80:	mov	r0, r2
   14d84:	bx	lr
   14d88:	moveq	r0, #1
   14d8c:	movne	r0, #0
   14d90:	bx	lr
   14d94:	clz	r2, r1
   14d98:	rsb	r2, r2, #31
   14d9c:	lsr	r0, r0, r2
   14da0:	bx	lr
   14da4:	cmp	r0, #0
   14da8:	mvnne	r0, #0
   14dac:	b	14dd0 <table_cell_nullify@@Base+0x238>
   14db0:	cmp	r1, #0
   14db4:	beq	14da4 <table_cell_nullify@@Base+0x20c>
   14db8:	push	{r0, r1, lr}
   14dbc:	bl	14bc4 <table_cell_nullify@@Base+0x2c>
   14dc0:	pop	{r1, r2, lr}
   14dc4:	mul	r3, r2, r0
   14dc8:	sub	r1, r1, r3
   14dcc:	bx	lr
   14dd0:	push	{r1, lr}
   14dd4:	mov	r0, #8
   14dd8:	bl	11a94 <raise@plt>
   14ddc:	pop	{r1, pc}

00014de0 <__libc_csu_init@@Base>:
   14de0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14de4:	mov	r7, r0
   14de8:	ldr	r6, [pc, #72]	; 14e38 <__libc_csu_init@@Base+0x58>
   14dec:	ldr	r5, [pc, #72]	; 14e3c <__libc_csu_init@@Base+0x5c>
   14df0:	add	r6, pc, r6
   14df4:	add	r5, pc, r5
   14df8:	sub	r6, r6, r5
   14dfc:	mov	r8, r1
   14e00:	mov	r9, r2
   14e04:	bl	11a74 <raise@plt-0x20>
   14e08:	asrs	r6, r6, #2
   14e0c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e10:	mov	r4, #0
   14e14:	add	r4, r4, #1
   14e18:	ldr	r3, [r5], #4
   14e1c:	mov	r2, r9
   14e20:	mov	r1, r8
   14e24:	mov	r0, r7
   14e28:	blx	r3
   14e2c:	cmp	r6, r4
   14e30:	bne	14e14 <__libc_csu_init@@Base+0x34>
   14e34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e38:	andeq	r0, r1, r8, lsl r1
   14e3c:	andeq	r0, r1, r0, lsl r1

00014e40 <__libc_csu_fini@@Base>:
   14e40:	bx	lr

Disassembly of section .fini:

00014e44 <.fini>:
   14e44:	push	{r3, lr}
   14e48:	pop	{r3, pc}
