
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

000148b0 <.init>:
   148b0:	push	{r3, lr}
   148b4:	bl	14acc <_start@@Base+0x3c>
   148b8:	pop	{r3, pc}

Disassembly of section .plt:

000148bc <calloc@plt-0x14>:
   148bc:	push	{lr}		; (str lr, [sp, #-4]!)
   148c0:	ldr	lr, [pc, #4]	; 148cc <calloc@plt-0x4>
   148c4:	add	lr, pc, lr
   148c8:	ldr	pc, [lr, #8]!
   148cc:	andeq	sp, r4, r4, lsr r7

000148d0 <calloc@plt>:
   148d0:	add	ip, pc, #0, 12
   148d4:	add	ip, ip, #315392	; 0x4d000
   148d8:	ldr	pc, [ip, #1844]!	; 0x734

000148dc <raise@plt>:
   148dc:	add	ip, pc, #0, 12
   148e0:	add	ip, ip, #315392	; 0x4d000
   148e4:	ldr	pc, [ip, #1836]!	; 0x72c

000148e8 <strcmp@plt>:
   148e8:	add	ip, pc, #0, 12
   148ec:	add	ip, ip, #315392	; 0x4d000
   148f0:	ldr	pc, [ip, #1828]!	; 0x724

000148f4 <fopen@plt>:
   148f4:	add	ip, pc, #0, 12
   148f8:	add	ip, ip, #315392	; 0x4d000
   148fc:	ldr	pc, [ip, #1820]!	; 0x71c

00014900 <free@plt>:
   14900:	add	ip, pc, #0, 12
   14904:	add	ip, ip, #315392	; 0x4d000
   14908:	ldr	pc, [ip, #1812]!	; 0x714

0001490c <memcpy@plt>:
   1490c:	add	ip, pc, #0, 12
   14910:	add	ip, ip, #315392	; 0x4d000
   14914:	ldr	pc, [ip, #1804]!	; 0x70c

00014918 <ftell@plt>:
   14918:	add	ip, pc, #0, 12
   1491c:	add	ip, ip, #315392	; 0x4d000
   14920:	ldr	pc, [ip, #1796]!	; 0x704

00014924 <memcmp@plt>:
   14924:	add	ip, pc, #0, 12
   14928:	add	ip, ip, #315392	; 0x4d000
   1492c:	ldr	pc, [ip, #1788]!	; 0x6fc

00014930 <fputc_unlocked@plt>:
   14930:	add	ip, pc, #0, 12
   14934:	add	ip, ip, #315392	; 0x4d000
   14938:	ldr	pc, [ip, #1780]!	; 0x6f4

0001493c <rewind@plt>:
   1493c:	add	ip, pc, #0, 12
   14940:	add	ip, ip, #315392	; 0x4d000
   14944:	ldr	pc, [ip, #1772]!	; 0x6ec

00014948 <realloc@plt>:
   14948:	add	ip, pc, #0, 12
   1494c:	add	ip, ip, #315392	; 0x4d000
   14950:	ldr	pc, [ip, #1764]!	; 0x6e4

00014954 <fwrite@plt>:
   14954:	add	ip, pc, #0, 12
   14958:	add	ip, ip, #315392	; 0x4d000
   1495c:	ldr	pc, [ip, #1756]!	; 0x6dc

00014960 <puts@plt>:
   14960:	add	ip, pc, #0, 12
   14964:	add	ip, ip, #315392	; 0x4d000
   14968:	ldr	pc, [ip, #1748]!	; 0x6d4

0001496c <malloc@plt>:
   1496c:	add	ip, pc, #0, 12
   14970:	add	ip, ip, #315392	; 0x4d000
   14974:	ldr	pc, [ip, #1740]!	; 0x6cc

00014978 <__libc_start_main@plt>:
   14978:	add	ip, pc, #0, 12
   1497c:	add	ip, ip, #315392	; 0x4d000
   14980:	ldr	pc, [ip, #1732]!	; 0x6c4

00014984 <__ctype_toupper_loc@plt>:
   14984:	add	ip, pc, #0, 12
   14988:	add	ip, ip, #315392	; 0x4d000
   1498c:	ldr	pc, [ip, #1724]!	; 0x6bc

00014990 <__gmon_start__@plt>:
   14990:	add	ip, pc, #0, 12
   14994:	add	ip, ip, #315392	; 0x4d000
   14998:	ldr	pc, [ip, #1716]!	; 0x6b4

0001499c <exit@plt>:
   1499c:	add	ip, pc, #0, 12
   149a0:	add	ip, ip, #315392	; 0x4d000
   149a4:	ldr	pc, [ip, #1708]!	; 0x6ac

000149a8 <strlen@plt>:
   149a8:	add	ip, pc, #0, 12
   149ac:	add	ip, ip, #315392	; 0x4d000
   149b0:	ldr	pc, [ip, #1700]!	; 0x6a4

000149b4 <strchr@plt>:
   149b4:	add	ip, pc, #0, 12
   149b8:	add	ip, ip, #315392	; 0x4d000
   149bc:	ldr	pc, [ip, #1692]!	; 0x69c

000149c0 <fprintf@plt>:
   149c0:	add	ip, pc, #0, 12
   149c4:	add	ip, ip, #315392	; 0x4d000
   149c8:	ldr	pc, [ip, #1684]!	; 0x694

000149cc <posix_memalign@plt>:
   149cc:	add	ip, pc, #0, 12
   149d0:	add	ip, ip, #315392	; 0x4d000
   149d4:	ldr	pc, [ip, #1676]!	; 0x68c

000149d8 <memset@plt>:
   149d8:	add	ip, pc, #0, 12
   149dc:	add	ip, ip, #315392	; 0x4d000
   149e0:	ldr	pc, [ip, #1668]!	; 0x684

000149e4 <strncpy@plt>:
   149e4:	add	ip, pc, #0, 12
   149e8:	add	ip, ip, #315392	; 0x4d000
   149ec:	ldr	pc, [ip, #1660]!	; 0x67c

000149f0 <strtod@plt>:
   149f0:	add	ip, pc, #0, 12
   149f4:	add	ip, ip, #315392	; 0x4d000
   149f8:	ldr	pc, [ip, #1652]!	; 0x674

000149fc <memchr@plt>:
   149fc:	add	ip, pc, #0, 12
   14a00:	add	ip, ip, #315392	; 0x4d000
   14a04:	ldr	pc, [ip, #1644]!	; 0x66c

00014a08 <fclose@plt>:
   14a08:	add	ip, pc, #0, 12
   14a0c:	add	ip, ip, #315392	; 0x4d000
   14a10:	ldr	pc, [ip, #1636]!	; 0x664

00014a14 <vfprintf@plt>:
   14a14:	add	ip, pc, #0, 12
   14a18:	add	ip, ip, #315392	; 0x4d000
   14a1c:	ldr	pc, [ip, #1628]!	; 0x65c

00014a20 <fputc@plt>:
   14a20:	add	ip, pc, #0, 12
   14a24:	add	ip, ip, #315392	; 0x4d000
   14a28:	ldr	pc, [ip, #1620]!	; 0x654

00014a2c <sprintf@plt>:
   14a2c:	add	ip, pc, #0, 12
   14a30:	add	ip, ip, #315392	; 0x4d000
   14a34:	ldr	pc, [ip, #1612]!	; 0x64c

00014a38 <vsnprintf@plt>:
   14a38:	add	ip, pc, #0, 12
   14a3c:	add	ip, ip, #315392	; 0x4d000
   14a40:	ldr	pc, [ip, #1604]!	; 0x644

00014a44 <qsort@plt>:
   14a44:	add	ip, pc, #0, 12
   14a48:	add	ip, ip, #315392	; 0x4d000
   14a4c:	ldr	pc, [ip, #1596]!	; 0x63c

00014a50 <fread_unlocked@plt>:
   14a50:	add	ip, pc, #0, 12
   14a54:	add	ip, ip, #315392	; 0x4d000
   14a58:	ldr	pc, [ip, #1588]!	; 0x634

00014a5c <fseek@plt>:
   14a5c:	add	ip, pc, #0, 12
   14a60:	add	ip, ip, #315392	; 0x4d000
   14a64:	ldr	pc, [ip, #1580]!	; 0x62c

00014a68 <strncmp@plt>:
   14a68:	add	ip, pc, #0, 12
   14a6c:	add	ip, ip, #315392	; 0x4d000
   14a70:	ldr	pc, [ip, #1572]!	; 0x624

00014a74 <abort@plt>:
   14a74:	add	ip, pc, #0, 12
   14a78:	add	ip, ip, #315392	; 0x4d000
   14a7c:	ldr	pc, [ip, #1564]!	; 0x61c

00014a80 <__assert_fail@plt>:
   14a80:	add	ip, pc, #0, 12
   14a84:	add	ip, ip, #315392	; 0x4d000
   14a88:	ldr	pc, [ip, #1556]!	; 0x614

Disassembly of section .text:

00014a90 <_start@@Base>:
   14a90:	mov	fp, #0
   14a94:	mov	lr, #0
   14a98:	pop	{r1}		; (ldr r1, [sp], #4)
   14a9c:	mov	r2, sp
   14aa0:	push	{r2}		; (str r2, [sp, #-4]!)
   14aa4:	push	{r0}		; (str r0, [sp, #-4]!)
   14aa8:	ldr	ip, [pc, #16]	; 14ac0 <_start@@Base+0x30>
   14aac:	push	{ip}		; (str ip, [sp, #-4]!)
   14ab0:	ldr	r0, [pc, #12]	; 14ac4 <_start@@Base+0x34>
   14ab4:	ldr	r3, [pc, #12]	; 14ac8 <_start@@Base+0x38>
   14ab8:	bl	14978 <__libc_start_main@plt>
   14abc:	bl	14a74 <abort@plt>
   14ac0:	andeq	r4, r3, r8, lsl #22
   14ac4:			; <UNDEFINED> instruction: 0x000154b4
   14ac8:	andeq	r4, r3, r8, lsr #21
   14acc:	ldr	r3, [pc, #20]	; 14ae8 <_start@@Base+0x58>
   14ad0:	ldr	r2, [pc, #20]	; 14aec <_start@@Base+0x5c>
   14ad4:	add	r3, pc, r3
   14ad8:	ldr	r2, [r3, r2]
   14adc:	cmp	r2, #0
   14ae0:	bxeq	lr
   14ae4:	b	14990 <__gmon_start__@plt>
   14ae8:	andeq	sp, r4, r4, lsr #10
   14aec:	andeq	r0, r0, r0, lsr #1
   14af0:	ldr	r0, [pc, #24]	; 14b10 <_start@@Base+0x80>
   14af4:	ldr	r3, [pc, #24]	; 14b14 <_start@@Base+0x84>
   14af8:	cmp	r3, r0
   14afc:	bxeq	lr
   14b00:	ldr	r3, [pc, #16]	; 14b18 <_start@@Base+0x88>
   14b04:	cmp	r3, #0
   14b08:	bxeq	lr
   14b0c:	bx	r3
   14b10:	andeq	r2, r6, ip, lsr #1
   14b14:	andeq	r2, r6, ip, lsr #1
   14b18:	andeq	r0, r0, r0
   14b1c:	ldr	r0, [pc, #36]	; 14b48 <_start@@Base+0xb8>
   14b20:	ldr	r1, [pc, #36]	; 14b4c <_start@@Base+0xbc>
   14b24:	sub	r1, r1, r0
   14b28:	asr	r1, r1, #2
   14b2c:	add	r1, r1, r1, lsr #31
   14b30:	asrs	r1, r1, #1
   14b34:	bxeq	lr
   14b38:	ldr	r3, [pc, #16]	; 14b50 <_start@@Base+0xc0>
   14b3c:	cmp	r3, #0
   14b40:	bxeq	lr
   14b44:	bx	r3
   14b48:	andeq	r2, r6, ip, lsr #1
   14b4c:	andeq	r2, r6, ip, lsr #1
   14b50:	andeq	r0, r0, r0
   14b54:	push	{r4, lr}
   14b58:	ldr	r4, [pc, #24]	; 14b78 <_start@@Base+0xe8>
   14b5c:	ldrb	r3, [r4]
   14b60:	cmp	r3, #0
   14b64:	popne	{r4, pc}
   14b68:	bl	14af0 <_start@@Base+0x60>
   14b6c:	mov	r3, #1
   14b70:	strb	r3, [r4]
   14b74:	pop	{r4, pc}
   14b78:	strheq	r2, [r6], -r8
   14b7c:	b	14b1c <_start@@Base+0x8c>

00014b80 <usage@@Base>:
   14b80:	push	{r4, sl, fp, lr}
   14b84:	add	fp, sp, #8
   14b88:	mov	r4, r0
   14b8c:	movw	r1, #55058	; 0xd712
   14b90:	movt	r1, #4
   14b94:	movw	r2, #19236	; 0x4b24
   14b98:	movt	r2, #3
   14b9c:	bl	149c0 <fprintf@plt>
   14ba0:	movw	r1, #19290	; 0x4b5a
   14ba4:	movt	r1, #3
   14ba8:	movw	r2, #19303	; 0x4b67
   14bac:	movt	r2, #3
   14bb0:	mov	r0, r4
   14bb4:	bl	149c0 <fprintf@plt>
   14bb8:	movw	r0, #19309	; 0x4b6d
   14bbc:	movt	r0, #3
   14bc0:	mov	r1, #35	; 0x23
   14bc4:	mov	r2, #1
   14bc8:	mov	r3, r4
   14bcc:	bl	14954 <fwrite@plt>
   14bd0:	movw	r0, #19345	; 0x4b91
   14bd4:	movt	r0, #3
   14bd8:	movw	r1, #1409	; 0x581
   14bdc:	mov	r2, #1
   14be0:	mov	r3, r4
   14be4:	pop	{r4, sl, fp, lr}
   14be8:	b	14954 <fwrite@plt>

00014bec <help@@Base>:
   14bec:	push	{r4, sl, fp, lr}
   14bf0:	add	fp, sp, #8
   14bf4:	mov	r4, r0
   14bf8:	bl	14b80 <usage@@Base>
   14bfc:	movw	r0, #20755	; 0x5113
   14c00:	movt	r0, #3
   14c04:	movw	r1, #3140	; 0xc44
   14c08:	mov	r2, #1
   14c0c:	mov	r3, r4
   14c10:	pop	{r4, sl, fp, lr}
   14c14:	b	14954 <fwrite@plt>

00014c18 <parse_bool_arg@@Base>:
   14c18:	push	{r4, r5, fp, lr}
   14c1c:	add	fp, sp, #8
   14c20:	mov	r4, r0
   14c24:	movw	r1, #29885	; 0x74bd
   14c28:	movt	r1, #4
   14c2c:	bl	148e8 <strcmp@plt>
   14c30:	mov	r5, #0
   14c34:	cmp	r0, #0
   14c38:	beq	14c88 <parse_bool_arg@@Base+0x70>
   14c3c:	movw	r1, #23896	; 0x5d58
   14c40:	movt	r1, #3
   14c44:	mov	r0, r4
   14c48:	bl	148e8 <strcmp@plt>
   14c4c:	cmp	r0, #0
   14c50:	beq	14c88 <parse_bool_arg@@Base+0x70>
   14c54:	movw	r1, #2726	; 0xaa6
   14c58:	movt	r1, #5
   14c5c:	mov	r0, r4
   14c60:	bl	148e8 <strcmp@plt>
   14c64:	mov	r5, #1
   14c68:	cmp	r0, #0
   14c6c:	beq	14c88 <parse_bool_arg@@Base+0x70>
   14c70:	movw	r1, #23899	; 0x5d5b
   14c74:	movt	r1, #3
   14c78:	mov	r0, r4
   14c7c:	bl	148e8 <strcmp@plt>
   14c80:	cmp	r0, #0
   14c84:	bne	14c90 <parse_bool_arg@@Base+0x78>
   14c88:	mov	r0, r5
   14c8c:	pop	{r4, r5, fp, pc}
   14c90:	movw	r0, #8368	; 0x20b0
   14c94:	movt	r0, #6
   14c98:	ldr	r0, [r0]
   14c9c:	movw	r1, #23903	; 0x5d5f
   14ca0:	movt	r1, #3
   14ca4:	mov	r2, r4
   14ca8:	bl	149c0 <fprintf@plt>
   14cac:	mvn	r5, #0
   14cb0:	mov	r0, r5
   14cb4:	pop	{r4, r5, fp, pc}

00014cb8 <match_long_arg@@Base>:
   14cb8:	push	{r4, r5, fp, lr}
   14cbc:	add	fp, sp, #8
   14cc0:	mov	r4, r2
   14cc4:	mov	r5, r0
   14cc8:	bl	14a68 <strncmp@plt>
   14ccc:	mov	r1, r0
   14cd0:	mov	r0, #0
   14cd4:	cmp	r1, #0
   14cd8:	popne	{r4, r5, fp, pc}
   14cdc:	mov	r0, r5
   14ce0:	bl	149a8 <strlen@plt>
   14ce4:	sub	r0, r0, r4
   14ce8:	clz	r0, r0
   14cec:	lsr	r0, r0, #5
   14cf0:	pop	{r4, r5, fp, pc}

00014cf4 <set_opt@@Base>:
   14cf4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14cf8:	add	fp, sp, #24
   14cfc:	mov	r9, r2
   14d00:	mov	r6, r1
   14d04:	mov	r8, r0
   14d08:	mov	r0, r1
   14d0c:	bl	149a8 <strlen@plt>
   14d10:	mov	r4, r0
   14d14:	mov	r0, r6
   14d18:	mov	r1, #61	; 0x3d
   14d1c:	bl	149b4 <strchr@plt>
   14d20:	cmp	r0, #0
   14d24:	subne	r4, r0, r6
   14d28:	addne	r9, r0, #1
   14d2c:	ldrb	r7, [r6]
   14d30:	cmp	r7, #104	; 0x68
   14d34:	beq	151d4 <set_opt@@Base+0x4e0>
   14d38:	mov	r5, r0
   14d3c:	movw	r0, #23968	; 0x5da0
   14d40:	movt	r0, #3
   14d44:	mov	r1, r6
   14d48:	bl	148e8 <strcmp@plt>
   14d4c:	cmp	r0, #0
   14d50:	beq	151d4 <set_opt@@Base+0x4e0>
   14d54:	movw	r0, #23974	; 0x5da6
   14d58:	movt	r0, #3
   14d5c:	mov	r1, r6
   14d60:	bl	148e8 <strcmp@plt>
   14d64:	cmp	r0, #0
   14d68:	beq	151ec <set_opt@@Base+0x4f8>
   14d6c:	movw	r0, #24924	; 0x615c
   14d70:	movt	r0, #3
   14d74:	mov	r1, r6
   14d78:	bl	148e8 <strcmp@plt>
   14d7c:	cmp	r0, #0
   14d80:	beq	14e40 <set_opt@@Base+0x14c>
   14d84:	movw	r0, #23983	; 0x5daf
   14d88:	movt	r0, #3
   14d8c:	mov	r1, r6
   14d90:	bl	148e8 <strcmp@plt>
   14d94:	cmp	r0, #0
   14d98:	beq	14e50 <set_opt@@Base+0x15c>
   14d9c:	movw	r0, #23991	; 0x5db7
   14da0:	movt	r0, #3
   14da4:	mov	r1, r6
   14da8:	bl	148e8 <strcmp@plt>
   14dac:	cmp	r0, #0
   14db0:	beq	14e60 <set_opt@@Base+0x16c>
   14db4:	movw	r0, #24004	; 0x5dc4
   14db8:	movt	r0, #3
   14dbc:	mov	r1, r6
   14dc0:	bl	148e8 <strcmp@plt>
   14dc4:	cmp	r0, #0
   14dc8:	beq	14e70 <set_opt@@Base+0x17c>
   14dcc:	movw	r0, #24018	; 0x5dd2
   14dd0:	movt	r0, #3
   14dd4:	mov	r1, r6
   14dd8:	bl	148e8 <strcmp@plt>
   14ddc:	cmp	r0, #0
   14de0:	beq	14e78 <set_opt@@Base+0x184>
   14de4:	movw	r0, #24024	; 0x5dd8
   14de8:	movt	r0, #3
   14dec:	mov	r1, r6
   14df0:	mov	r2, r4
   14df4:	bl	14cb8 <match_long_arg@@Base>
   14df8:	cmp	r0, #0
   14dfc:	bne	14eec <set_opt@@Base+0x1f8>
   14e00:	movw	r0, #24200	; 0x5e88
   14e04:	movt	r0, #3
   14e08:	mov	r1, r6
   14e0c:	mov	r2, r4
   14e10:	bl	14cb8 <match_long_arg@@Base>
   14e14:	cmp	r0, #0
   14e18:	beq	14e8c <set_opt@@Base+0x198>
   14e1c:	cmp	r9, #0
   14e20:	beq	1522c <set_opt@@Base+0x538>
   14e24:	mov	r0, r9
   14e28:	bl	14c18 <parse_bool_arg@@Base>
   14e2c:	str	r0, [r8, #188]	; 0xbc
   14e30:	cmn	r0, #1
   14e34:	bgt	14fac <set_opt@@Base+0x2b8>
   14e38:	mvn	r0, #0
   14e3c:	bl	1499c <exit@plt>
   14e40:	mov	r0, #1
   14e44:	str	r0, [r8, #108]	; 0x6c
   14e48:	mov	r0, #0
   14e4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e50:	mov	r0, #1
   14e54:	str	r0, [r8, #180]	; 0xb4
   14e58:	mov	r0, #0
   14e5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e60:	mov	r0, #1
   14e64:	str	r0, [r8, #164]	; 0xa4
   14e68:	mov	r0, #0
   14e6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e70:	mov	r0, #1
   14e74:	b	14e80 <set_opt@@Base+0x18c>
   14e78:	mov	r0, #1
   14e7c:	str	r0, [r8, #164]	; 0xa4
   14e80:	str	r0, [r8, #168]	; 0xa8
   14e84:	mov	r0, #0
   14e88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e8c:	movw	r0, #24884	; 0x6134
   14e90:	movt	r0, #3
   14e94:	mov	r1, r6
   14e98:	mov	r2, r4
   14e9c:	bl	14cb8 <match_long_arg@@Base>
   14ea0:	cmp	r0, #0
   14ea4:	beq	14ec0 <set_opt@@Base+0x1cc>
   14ea8:	cmp	r9, #0
   14eac:	beq	15248 <set_opt@@Base+0x554>
   14eb0:	mov	r0, #1
   14eb4:	str	r0, [r8, #112]	; 0x70
   14eb8:	str	r9, [r8, #116]	; 0x74
   14ebc:	b	14fac <set_opt@@Base+0x2b8>
   14ec0:	movw	r0, #24293	; 0x5ee5
   14ec4:	movt	r0, #3
   14ec8:	mov	r1, r6
   14ecc:	mov	r2, r4
   14ed0:	bl	14cb8 <match_long_arg@@Base>
   14ed4:	cmp	r0, #0
   14ed8:	beq	14f2c <set_opt@@Base+0x238>
   14edc:	cmp	r9, #0
   14ee0:	beq	15264 <set_opt@@Base+0x570>
   14ee4:	str	r9, [r8, #120]	; 0x78
   14ee8:	b	14fac <set_opt@@Base+0x2b8>
   14eec:	movw	r4, #8368	; 0x20b0
   14ef0:	movt	r4, #6
   14ef4:	ldr	r3, [r4]
   14ef8:	movw	r0, #24042	; 0x5dea
   14efc:	movt	r0, #3
   14f00:	mov	r1, #112	; 0x70
   14f04:	mov	r2, #1
   14f08:	bl	14954 <fwrite@plt>
   14f0c:	cmp	r9, #0
   14f10:	beq	15280 <set_opt@@Base+0x58c>
   14f14:	mov	r0, r9
   14f18:	bl	14c18 <parse_bool_arg@@Base>
   14f1c:	str	r0, [r8, #184]	; 0xb8
   14f20:	cmn	r0, #1
   14f24:	bgt	14fac <set_opt@@Base+0x2b8>
   14f28:	b	14e38 <set_opt@@Base+0x144>
   14f2c:	movw	r0, #24342	; 0x5f16
   14f30:	movt	r0, #3
   14f34:	mov	r1, r6
   14f38:	mov	r2, r4
   14f3c:	bl	14cb8 <match_long_arg@@Base>
   14f40:	cmp	r0, #0
   14f44:	beq	14f58 <set_opt@@Base+0x264>
   14f48:	cmp	r9, #0
   14f4c:	beq	152a0 <set_opt@@Base+0x5ac>
   14f50:	str	r9, [r8, #124]	; 0x7c
   14f54:	b	14fac <set_opt@@Base+0x2b8>
   14f58:	movw	r0, #24387	; 0x5f43
   14f5c:	movt	r0, #3
   14f60:	mov	r1, r6
   14f64:	mov	r2, r4
   14f68:	bl	14cb8 <match_long_arg@@Base>
   14f6c:	cmp	r0, #0
   14f70:	beq	14f84 <set_opt@@Base+0x290>
   14f74:	cmp	r9, #0
   14f78:	beq	152b8 <set_opt@@Base+0x5c4>
   14f7c:	str	r9, [r8, #196]	; 0xc4
   14f80:	b	14fac <set_opt@@Base+0x2b8>
   14f84:	movw	r0, #24394	; 0x5f4a
   14f88:	movt	r0, #3
   14f8c:	mov	r1, r6
   14f90:	mov	r2, r4
   14f94:	bl	14cb8 <match_long_arg@@Base>
   14f98:	cmp	r0, #0
   14f9c:	beq	14fbc <set_opt@@Base+0x2c8>
   14fa0:	cmp	r9, #0
   14fa4:	beq	152ec <set_opt@@Base+0x5f8>
   14fa8:	str	r9, [r8, #192]	; 0xc0
   14fac:	mov	r0, #2
   14fb0:	cmp	r5, #0
   14fb4:	movwne	r0, #0
   14fb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14fbc:	sub	r0, r7, #45	; 0x2d
   14fc0:	cmp	r0, #74	; 0x4a
   14fc4:	bhi	152d0 <set_opt@@Base+0x5dc>
   14fc8:	add	r1, pc, #0
   14fcc:	ldr	pc, [r1, r0, lsl #2]
   14fd0:	andeq	r5, r1, r8, lsl #6
   14fd4:	ldrdeq	r5, [r1], -r0
   14fd8:	ldrdeq	r5, [r1], -r0
   14fdc:	ldrdeq	r5, [r1], -r0
   14fe0:	ldrdeq	r5, [r1], -r0
   14fe4:	ldrdeq	r5, [r1], -r0
   14fe8:	ldrdeq	r5, [r1], -r0
   14fec:	ldrdeq	r5, [r1], -r0
   14ff0:	ldrdeq	r5, [r1], -r0
   14ff4:	ldrdeq	r5, [r1], -r0
   14ff8:	ldrdeq	r5, [r1], -r0
   14ffc:	ldrdeq	r5, [r1], -r0
   15000:	ldrdeq	r5, [r1], -r0
   15004:	ldrdeq	r5, [r1], -r0
   15008:	ldrdeq	r5, [r1], -r0
   1500c:	ldrdeq	r5, [r1], -r0
   15010:	ldrdeq	r5, [r1], -r0
   15014:	ldrdeq	r5, [r1], -r0
   15018:	ldrdeq	r5, [r1], -r0
   1501c:	ldrdeq	r5, [r1], -r0
   15020:	ldrdeq	r5, [r1], -r0
   15024:	ldrdeq	r5, [r1], -r0
   15028:	ldrdeq	r5, [r1], -r0
   1502c:	ldrdeq	r5, [r1], -r0
   15030:	ldrdeq	r5, [r1], -r0
   15034:	ldrdeq	r5, [r1], -r0
   15038:	ldrdeq	r5, [r1], -r0
   1503c:	ldrdeq	r5, [r1], -r0
   15040:	strdeq	r5, [r1], -ip
   15044:	ldrdeq	r5, [r1], -r0
   15048:	ldrdeq	r5, [r1], -r0
   1504c:	ldrdeq	r5, [r1], -r0
   15050:	ldrdeq	r5, [r1], -r0
   15054:	ldrdeq	r5, [r1], -r0
   15058:	ldrdeq	r5, [r1], -r0
   1505c:	ldrdeq	r5, [r1], -r0
   15060:	ldrdeq	r5, [r1], -r0
   15064:	ldrdeq	r5, [r1], -r0
   15068:	ldrdeq	r5, [r1], -r0
   1506c:	ldrdeq	r5, [r1], -r0
   15070:	ldrdeq	r5, [r1], -r0
   15074:	ldrdeq	r5, [r1], -r0
   15078:	ldrdeq	r5, [r1], -r0
   1507c:	ldrdeq	r5, [r1], -r0
   15080:	ldrdeq	r5, [r1], -r0
   15084:	ldrdeq	r5, [r1], -r0
   15088:	ldrdeq	r5, [r1], -r0
   1508c:	ldrdeq	r5, [r1], -r0
   15090:	ldrdeq	r5, [r1], -r0
   15094:	ldrdeq	r5, [r1], -r0
   15098:	ldrdeq	r5, [r1], -r0
   1509c:	ldrdeq	r5, [r1], -r0
   150a0:			; <UNDEFINED> instruction: 0x000151b0
   150a4:	ldrdeq	r5, [r1], -r0
   150a8:	andeq	r5, r1, ip, asr r1
   150ac:	andeq	r5, r1, r0, lsr #3
   150b0:	ldrdeq	r5, [r1], -r0
   150b4:	ldrdeq	r5, [r1], -r0
   150b8:	ldrdeq	r5, [r1], -r0
   150bc:	ldrdeq	r5, [r1], -r0
   150c0:	ldrdeq	r5, [r1], -r0
   150c4:	ldrdeq	r5, [r1], -r0
   150c8:	ldrdeq	r5, [r1], -r0
   150cc:	ldrdeq	r5, [r1], -r0
   150d0:	ldrdeq	r5, [r1], -r0
   150d4:	ldrdeq	r5, [r1], -r0
   150d8:	andeq	r5, r1, ip, ror #2
   150dc:	ldrdeq	r5, [r1], -r0
   150e0:	ldrdeq	r5, [r1], -r0
   150e4:	andeq	r5, r1, r4, asr #2
   150e8:	ldrdeq	r5, [r1], -r0
   150ec:	ldrdeq	r5, [r1], -r0
   150f0:	ldrdeq	r5, [r1], -r0
   150f4:	andeq	r5, r1, ip, asr #2
   150f8:	andeq	r5, r1, r4, lsr r1
   150fc:	ldrb	r1, [r6, #1]!
   15100:	mov	r0, #1
   15104:	cmp	r1, #0
   15108:	bne	1511c <set_opt@@Base+0x428>
   1510c:	mov	r0, #2
   15110:	cmp	r9, #0
   15114:	mov	r6, r9
   15118:	beq	15348 <set_opt@@Base+0x654>
   1511c:	ldr	r1, [r8, #200]	; 0xc8
   15120:	ldr	r2, [r8, #208]	; 0xd0
   15124:	add	r3, r2, #1
   15128:	str	r3, [r8, #208]	; 0xd0
   1512c:	str	r6, [r1, r2, lsl #2]
   15130:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15134:	mov	r0, #1
   15138:	str	r0, [r8, #156]	; 0x9c
   1513c:	mov	r0, #0
   15140:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15144:	mov	r0, #1
   15148:	b	151c8 <set_opt@@Base+0x4d4>
   1514c:	mov	r0, #1
   15150:	str	r0, [r8, #160]	; 0xa0
   15154:	mov	r0, #0
   15158:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1515c:	mov	r0, #1
   15160:	str	r0, [r8, #144]	; 0x90
   15164:	mov	r0, #0
   15168:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1516c:	ldr	r0, [r8, #216]	; 0xd8
   15170:	cmp	r0, #0
   15174:	bne	1532c <set_opt@@Base+0x638>
   15178:	ldrb	r1, [r6, #1]!
   1517c:	mov	r0, #1
   15180:	cmp	r1, #0
   15184:	bne	15198 <set_opt@@Base+0x4a4>
   15188:	mov	r0, #2
   1518c:	cmp	r9, #0
   15190:	mov	r6, r9
   15194:	beq	15364 <set_opt@@Base+0x670>
   15198:	str	r6, [r8, #216]	; 0xd8
   1519c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151a0:	mov	r0, #1
   151a4:	str	r0, [r8, #112]	; 0x70
   151a8:	mov	r0, #0
   151ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151b0:	mov	r0, #1
   151b4:	str	r0, [r8, #144]	; 0x90
   151b8:	str	r0, [r8, #148]	; 0x94
   151bc:	str	r0, [r8, #152]	; 0x98
   151c0:	str	r0, [r8, #156]	; 0x9c
   151c4:	str	r0, [r8, #160]	; 0xa0
   151c8:	str	r0, [r8, #172]	; 0xac
   151cc:	mov	r0, #0
   151d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151d4:	movw	r0, #8372	; 0x20b4
   151d8:	movt	r0, #6
   151dc:	ldr	r0, [r0]
   151e0:	bl	14bec <help@@Base>
   151e4:	mov	r0, #0
   151e8:	bl	1499c <exit@plt>
   151ec:	movw	r4, #8368	; 0x20b0
   151f0:	movt	r4, #6
   151f4:	ldr	r0, [r4]
   151f8:	movw	r1, #55058	; 0xd712
   151fc:	movt	r1, #4
   15200:	movw	r2, #19236	; 0x4b24
   15204:	movt	r2, #3
   15208:	bl	149c0 <fprintf@plt>
   1520c:	ldr	r0, [r4]
   15210:	movw	r1, #19290	; 0x4b5a
   15214:	movt	r1, #3
   15218:	movw	r2, #19303	; 0x4b67
   1521c:	movt	r2, #3
   15220:	bl	149c0 <fprintf@plt>
   15224:	mov	r0, #0
   15228:	bl	1499c <exit@plt>
   1522c:	movw	r0, #8368	; 0x20b0
   15230:	movt	r0, #6
   15234:	ldr	r3, [r0]
   15238:	movw	r0, #24215	; 0x5e97
   1523c:	movt	r0, #3
   15240:	mov	r1, #41	; 0x29
   15244:	b	15290 <set_opt@@Base+0x59c>
   15248:	movw	r0, #8368	; 0x20b0
   1524c:	movt	r0, #6
   15250:	ldr	r3, [r0]
   15254:	movw	r0, #24257	; 0x5ec1
   15258:	movt	r0, #3
   1525c:	mov	r1, #35	; 0x23
   15260:	b	15290 <set_opt@@Base+0x59c>
   15264:	movw	r0, #8368	; 0x20b0
   15268:	movt	r0, #6
   1526c:	ldr	r3, [r0]
   15270:	movw	r0, #24304	; 0x5ef0
   15274:	movt	r0, #3
   15278:	mov	r1, #37	; 0x25
   1527c:	b	15290 <set_opt@@Base+0x59c>
   15280:	ldr	r3, [r4]
   15284:	movw	r0, #24155	; 0x5e5b
   15288:	movt	r0, #3
   1528c:	mov	r1, #44	; 0x2c
   15290:	mov	r2, #1
   15294:	bl	14954 <fwrite@plt>
   15298:	mvn	r0, #0
   1529c:	bl	1499c <exit@plt>
   152a0:	movw	r0, #8368	; 0x20b0
   152a4:	movt	r0, #6
   152a8:	ldr	r3, [r0]
   152ac:	movw	r0, #24351	; 0x5f1f
   152b0:	movt	r0, #3
   152b4:	b	1525c <set_opt@@Base+0x568>
   152b8:	movw	r0, #8368	; 0x20b0
   152bc:	movt	r0, #6
   152c0:	ldr	r3, [r0]
   152c4:	movw	r0, #24402	; 0x5f52
   152c8:	movt	r0, #3
   152cc:	b	15240 <set_opt@@Base+0x54c>
   152d0:	movw	r0, #8368	; 0x20b0
   152d4:	movt	r0, #6
   152d8:	ldr	r0, [r0]
   152dc:	movw	r1, #24590	; 0x600e
   152e0:	movt	r1, #3
   152e4:	mov	r2, r7
   152e8:	b	15320 <set_opt@@Base+0x62c>
   152ec:	movw	r0, #8368	; 0x20b0
   152f0:	movt	r0, #6
   152f4:	ldr	r3, [r0]
   152f8:	movw	r0, #24444	; 0x5f7c
   152fc:	movt	r0, #3
   15300:	mov	r1, #28
   15304:	b	15290 <set_opt@@Base+0x59c>
   15308:	movw	r0, #8368	; 0x20b0
   1530c:	movt	r0, #6
   15310:	ldr	r0, [r0]
   15314:	movw	r1, #24473	; 0x5f99
   15318:	movt	r1, #3
   1531c:	mov	r2, r6
   15320:	bl	149c0 <fprintf@plt>
   15324:	mvn	r0, #0
   15328:	bl	1499c <exit@plt>
   1532c:	movw	r0, #8368	; 0x20b0
   15330:	movt	r0, #6
   15334:	ldr	r3, [r0]
   15338:	movw	r0, #24523	; 0x5fcb
   1533c:	movt	r0, #3
   15340:	mov	r1, #37	; 0x25
   15344:	b	15290 <set_opt@@Base+0x59c>
   15348:	movw	r0, #8368	; 0x20b0
   1534c:	movt	r0, #6
   15350:	ldr	r3, [r0]
   15354:	movw	r0, #24494	; 0x5fae
   15358:	movt	r0, #3
   1535c:	mov	r1, #28
   15360:	b	15290 <set_opt@@Base+0x59c>
   15364:	movw	r0, #8368	; 0x20b0
   15368:	movt	r0, #6
   1536c:	ldr	r3, [r0]
   15370:	movw	r0, #24561	; 0x5ff1
   15374:	movt	r0, #3
   15378:	mov	r1, #28
   1537c:	b	15290 <set_opt@@Base+0x59c>

00015380 <get_opt@@Base>:
   15380:	push	{r4, r5, r6, sl, fp, lr}
   15384:	add	fp, sp, #16
   15388:	mov	r4, r2
   1538c:	mov	r5, r1
   15390:	mov	r6, r0
   15394:	ldrb	r0, [r5, #1]!
   15398:	cmp	r0, #45	; 0x2d
   1539c:	beq	153f0 <get_opt@@Base+0x70>
   153a0:	cmp	r0, #0
   153a4:	beq	15418 <get_opt@@Base+0x98>
   153a8:	mov	r0, r6
   153ac:	mov	r1, r5
   153b0:	mov	r2, r4
   153b4:	bl	14cf4 <set_opt@@Base>
   153b8:	mov	r1, r0
   153bc:	mov	r0, #0
   153c0:	cmp	r1, #0
   153c4:	beq	153dc <get_opt@@Base+0x5c>
   153c8:	cmp	r1, #1
   153cc:	popeq	{r4, r5, r6, sl, fp, pc}
   153d0:	cmp	r1, #2
   153d4:	bne	153e0 <get_opt@@Base+0x60>
   153d8:	b	15410 <get_opt@@Base+0x90>
   153dc:	add	r5, r5, #1
   153e0:	ldrb	r1, [r5]
   153e4:	cmp	r1, #0
   153e8:	bne	153a8 <get_opt@@Base+0x28>
   153ec:	pop	{r4, r5, r6, sl, fp, pc}
   153f0:	mov	r0, r6
   153f4:	mov	r1, r5
   153f8:	mov	r2, r4
   153fc:	bl	14cf4 <set_opt@@Base>
   15400:	sub	r0, r0, #2
   15404:	clz	r0, r0
   15408:	lsr	r0, r0, #5
   1540c:	pop	{r4, r5, r6, sl, fp, pc}
   15410:	mov	r0, #1
   15414:	pop	{r4, r5, r6, sl, fp, pc}
   15418:	movw	r0, #8368	; 0x20b0
   1541c:	movt	r0, #6
   15420:	ldr	r3, [r0]
   15424:	movw	r0, #24611	; 0x6023
   15428:	movt	r0, #3
   1542c:	mov	r1, #24
   15430:	mov	r2, #1
   15434:	bl	14954 <fwrite@plt>
   15438:	mvn	r0, #0
   1543c:	bl	1499c <exit@plt>

00015440 <parse_opts@@Base>:
   15440:	push	{r4, r5, r6, r7, fp, lr}
   15444:	add	fp, sp, #16
   15448:	cmp	r0, #2
   1544c:	poplt	{r4, r5, r6, r7, fp, pc}
   15450:	mov	r4, r2
   15454:	mov	r5, r1
   15458:	mov	r6, r0
   1545c:	mov	r7, #1
   15460:	ldr	r1, [r5, r7, lsl #2]
   15464:	ldrb	r0, [r1]
   15468:	cmp	r0, #45	; 0x2d
   1546c:	bne	15490 <parse_opts@@Base+0x50>
   15470:	add	r0, r7, #1
   15474:	mov	r2, #0
   15478:	cmp	r0, r6
   1547c:	ldrlt	r2, [r5, r0, lsl #2]
   15480:	mov	r0, r4
   15484:	bl	15380 <get_opt@@Base>
   15488:	add	r7, r0, r7
   1548c:	b	154a4 <parse_opts@@Base+0x64>
   15490:	ldr	r0, [r4, #204]	; 0xcc
   15494:	ldr	r2, [r4, #212]	; 0xd4
   15498:	add	r3, r2, #1
   1549c:	str	r3, [r4, #212]	; 0xd4
   154a0:	str	r1, [r0, r2, lsl #2]
   154a4:	add	r7, r7, #1
   154a8:	cmp	r7, r6
   154ac:	blt	15460 <parse_opts@@Base+0x20>
   154b0:	pop	{r4, r5, r6, r7, fp, pc}

000154b4 <main@@Base>:
   154b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154b8:	add	fp, sp, #24
   154bc:	sub	sp, sp, #224	; 0xe0
   154c0:	cmp	r0, #1
   154c4:	ble	157c8 <main@@Base+0x314>
   154c8:	mov	r4, r1
   154cc:	mov	r5, r0
   154d0:	mov	r0, sp
   154d4:	bl	15838 <flatcc_init_options@@Base>
   154d8:	lsl	r6, r5, #2
   154dc:	mov	r0, r6
   154e0:	bl	1496c <malloc@plt>
   154e4:	str	r0, [sp, #200]	; 0xc8
   154e8:	cmp	r0, #0
   154ec:	beq	157e0 <main@@Base+0x32c>
   154f0:	mov	r0, r6
   154f4:	bl	1496c <malloc@plt>
   154f8:	str	r0, [sp, #204]	; 0xcc
   154fc:	cmp	r0, #0
   15500:	beq	15808 <main@@Base+0x354>
   15504:	mov	r2, sp
   15508:	mov	r0, r5
   1550c:	mov	r1, r4
   15510:	bl	15440 <parse_opts@@Base>
   15514:	ldr	r2, [sp, #144]	; 0x90
   15518:	ldr	r7, [sp, #156]	; 0x9c
   1551c:	ldr	r1, [sp, #212]	; 0xd4
   15520:	cmp	r2, #0
   15524:	mov	r3, r2
   15528:	movwne	r3, #1
   1552c:	cmp	r7, #0
   15530:	mov	r0, r7
   15534:	movwne	r0, #1
   15538:	and	r3, r0, r3
   1553c:	str	r3, [sp, #148]	; 0x94
   15540:	cmp	r1, #0
   15544:	beq	155bc <main@@Base+0x108>
   15548:	ldr	r0, [sp, #152]	; 0x98
   1554c:	orrs	r0, r0, r7
   15550:	mov	r1, #1
   15554:	bne	15574 <main@@Base+0xc0>
   15558:	ldr	r0, [sp, #160]	; 0xa0
   1555c:	orrs	r0, r0, r2
   15560:	movwne	r0, #1
   15564:	orrs	r0, r3, r0
   15568:	ldreq	r0, [sp, #164]	; 0xa4
   1556c:	cmpeq	r0, #0
   15570:	beq	15720 <main@@Base+0x26c>
   15574:	ldr	r0, [sp, #180]	; 0xb4
   15578:	cmp	r0, #0
   1557c:	beq	1560c <main@@Base+0x158>
   15580:	cmp	r1, #0
   15584:	beq	15630 <main@@Base+0x17c>
   15588:	ldr	r0, [sp, #108]	; 0x6c
   1558c:	cmp	r0, #0
   15590:	bne	15768 <main@@Base+0x2b4>
   15594:	ldr	r0, [sp, #124]	; 0x7c
   15598:	cmp	r0, #0
   1559c:	beq	15630 <main@@Base+0x17c>
   155a0:	movw	r0, #8368	; 0x20b0
   155a4:	movt	r0, #6
   155a8:	ldr	r3, [r0]
   155ac:	movw	r0, #24789	; 0x60d5
   155b0:	movt	r0, #3
   155b4:	mov	r1, #58	; 0x3a
   155b8:	b	15780 <main@@Base+0x2cc>
   155bc:	cmp	r2, #0
   155c0:	beq	15704 <main@@Base+0x250>
   155c4:	ldr	r0, [sp, #180]	; 0xb4
   155c8:	cmp	r0, #0
   155cc:	bne	15704 <main@@Base+0x250>
   155d0:	mov	r0, sp
   155d4:	mov	r1, #0
   155d8:	mov	r2, #0
   155dc:	mov	r3, #0
   155e0:	bl	15918 <flatcc_create_context@@Base>
   155e4:	cmp	r0, #0
   155e8:	beq	156e8 <main@@Base+0x234>
   155ec:	mov	r4, r0
   155f0:	bl	160b4 <flatcc_generate_files@@Base>
   155f4:	cmp	r0, #0
   155f8:	bne	156dc <main@@Base+0x228>
   155fc:	mov	r0, r4
   15600:	bl	161ec <flatcc_destroy_context@@Base>
   15604:	mov	r4, #0
   15608:	b	157ac <main@@Base+0x2f8>
   1560c:	eor	r0, r1, #1
   15610:	cmp	r7, #0
   15614:	movwne	r7, #1
   15618:	orrs	r0, r7, r0
   1561c:	ldreq	r0, [sp, #160]	; 0xa0
   15620:	cmpeq	r0, #0
   15624:	beq	15630 <main@@Base+0x17c>
   15628:	mov	r0, #1
   1562c:	str	r0, [sp, #152]	; 0x98
   15630:	ldr	r0, [sp, #120]	; 0x78
   15634:	cmp	r0, #0
   15638:	beq	15648 <main@@Base+0x194>
   1563c:	ldr	r0, [sp, #116]	; 0x74
   15640:	cmp	r0, #0
   15644:	beq	15730 <main@@Base+0x27c>
   15648:	ldr	r0, [sp, #108]	; 0x6c
   1564c:	cmp	r0, #0
   15650:	ldrne	r0, [sp, #124]	; 0x7c
   15654:	cmpne	r0, #0
   15658:	bne	1574c <main@@Base+0x298>
   1565c:	ldr	r0, [sp, #212]	; 0xd4
   15660:	cmp	r0, #1
   15664:	blt	156d4 <main@@Base+0x220>
   15668:	mov	r6, #0
   1566c:	ldr	r7, [sp, #204]	; 0xcc
   15670:	mov	r5, sp
   15674:	mov	r8, #1
   15678:	ldr	r1, [r7, r6, lsl #2]
   1567c:	mov	r0, r5
   15680:	mov	r2, #0
   15684:	mov	r3, #0
   15688:	bl	15918 <flatcc_create_context@@Base>
   1568c:	cmp	r0, #0
   15690:	beq	156e8 <main@@Base+0x234>
   15694:	mov	r4, r0
   15698:	ldr	r1, [r7, r6, lsl #2]
   1569c:	bl	15a20 <flatcc_parse_file@@Base>
   156a0:	cmp	r0, #0
   156a4:	bne	156dc <main@@Base+0x228>
   156a8:	mov	r0, r4
   156ac:	bl	160b4 <flatcc_generate_files@@Base>
   156b0:	cmp	r0, #0
   156b4:	bne	156dc <main@@Base+0x228>
   156b8:	mov	r0, r4
   156bc:	bl	161ec <flatcc_destroy_context@@Base>
   156c0:	str	r8, [sp, #128]	; 0x80
   156c4:	add	r6, r6, #1
   156c8:	ldr	r0, [sp, #212]	; 0xd4
   156cc:	cmp	r6, r0
   156d0:	blt	15678 <main@@Base+0x1c4>
   156d4:	mov	r4, #0
   156d8:	b	157ac <main@@Base+0x2f8>
   156dc:	mov	r0, r4
   156e0:	bl	161ec <flatcc_destroy_context@@Base>
   156e4:	b	15788 <main@@Base+0x2d4>
   156e8:	movw	r0, #8368	; 0x20b0
   156ec:	movt	r0, #6
   156f0:	ldr	r3, [r0]
   156f4:	movw	r0, #24681	; 0x6069
   156f8:	movt	r0, #3
   156fc:	mov	r1, #49	; 0x31
   15700:	b	15780 <main@@Base+0x2cc>
   15704:	movw	r0, #8368	; 0x20b0
   15708:	movt	r0, #6
   1570c:	ldr	r3, [r0]
   15710:	movw	r0, #24663	; 0x6057
   15714:	movt	r0, #3
   15718:	mov	r1, #17
   1571c:	b	15780 <main@@Base+0x2cc>
   15720:	ldr	r1, [sp, #168]	; 0xa8
   15724:	cmp	r1, #0
   15728:	movwne	r1, #1
   1572c:	b	15574 <main@@Base+0xc0>
   15730:	movw	r0, #8368	; 0x20b0
   15734:	movt	r0, #6
   15738:	ldr	r3, [r0]
   1573c:	movw	r0, #24848	; 0x6110
   15740:	movt	r0, #3
   15744:	mov	r1, #44	; 0x2c
   15748:	b	15780 <main@@Base+0x2cc>
   1574c:	movw	r0, #8368	; 0x20b0
   15750:	movt	r0, #6
   15754:	ldr	r3, [r0]
   15758:	movw	r0, #24893	; 0x613d
   1575c:	movt	r0, #3
   15760:	mov	r1, #38	; 0x26
   15764:	b	15780 <main@@Base+0x2cc>
   15768:	movw	r0, #8368	; 0x20b0
   1576c:	movt	r0, #6
   15770:	ldr	r3, [r0]
   15774:	movw	r0, #24731	; 0x609b
   15778:	movt	r0, #3
   1577c:	mov	r1, #57	; 0x39
   15780:	mov	r2, #1
   15784:	bl	14954 <fwrite@plt>
   15788:	movw	r0, #8368	; 0x20b0
   1578c:	movt	r0, #6
   15790:	ldr	r3, [r0]
   15794:	movw	r0, #24932	; 0x6164
   15798:	movt	r0, #3
   1579c:	mov	r1, #14
   157a0:	mov	r2, #1
   157a4:	bl	14954 <fwrite@plt>
   157a8:	mvn	r4, #0
   157ac:	ldr	r0, [sp, #200]	; 0xc8
   157b0:	bl	14900 <free@plt>
   157b4:	ldr	r0, [sp, #204]	; 0xcc
   157b8:	bl	14900 <free@plt>
   157bc:	mov	r0, r4
   157c0:	sub	sp, fp, #24
   157c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   157c8:	movw	r0, #8368	; 0x20b0
   157cc:	movt	r0, #6
   157d0:	ldr	r0, [r0]
   157d4:	bl	14b80 <usage@@Base>
   157d8:	mvn	r0, #0
   157dc:	bl	1499c <exit@plt>
   157e0:	movw	r0, #8368	; 0x20b0
   157e4:	movt	r0, #6
   157e8:	ldr	r3, [r0]
   157ec:	movw	r0, #24636	; 0x603c
   157f0:	movt	r0, #3
   157f4:	mov	r1, #26
   157f8:	mov	r2, #1
   157fc:	bl	14954 <fwrite@plt>
   15800:	mvn	r0, #0
   15804:	bl	1499c <exit@plt>
   15808:	movw	r0, #8368	; 0x20b0
   1580c:	movt	r0, #6
   15810:	ldr	r3, [r0]
   15814:	movw	r0, #24636	; 0x603c
   15818:	movt	r0, #3
   1581c:	mov	r1, #26
   15820:	mov	r2, #1
   15824:	bl	14954 <fwrite@plt>
   15828:	ldr	r0, [sp, #200]	; 0xc8
   1582c:	bl	14900 <free@plt>
   15830:	mvn	r0, #0
   15834:	bl	1499c <exit@plt>

00015838 <flatcc_init_options@@Base>:
   15838:	push	{r4, r5, fp, lr}
   1583c:	add	fp, sp, #8
   15840:	mov	r4, r0
   15844:	mov	r5, #0
   15848:	mov	r1, #0
   1584c:	mov	r2, #224	; 0xe0
   15850:	bl	149d8 <memset@plt>
   15854:	mov	r0, #65536	; 0x10000
   15858:	mov	r1, #100	; 0x64
   1585c:	stm	r4, {r0, r1}
   15860:	str	r1, [r4, #8]
   15864:	mov	r0, #1
   15868:	str	r0, [r4, #16]
   1586c:	str	r0, [r4, #20]
   15870:	str	r0, [r4, #24]
   15874:	str	r0, [r4, #28]
   15878:	str	r0, [r4, #32]
   1587c:	str	r0, [r4, #36]	; 0x24
   15880:	str	r0, [r4, #40]	; 0x28
   15884:	str	r0, [r4, #44]	; 0x2c
   15888:	mov	lr, #4
   1588c:	mov	r2, #2
   15890:	vmov.i32	q8, #0	; 0x00000000
   15894:	movw	ip, #65534	; 0xfffe
   15898:	str	r0, [r4, #48]	; 0x30
   1589c:	str	r0, [r4, #52]	; 0x34
   158a0:	str	r5, [r4, #56]	; 0x38
   158a4:	str	r5, [r4, #60]	; 0x3c
   158a8:	str	lr, [r4, #64]	; 0x40
   158ac:	str	r2, [r4, #68]	; 0x44
   158b0:	str	r0, [r4, #72]	; 0x48
   158b4:	str	r0, [r4, #76]	; 0x4c
   158b8:	movw	r2, #24947	; 0x6173
   158bc:	movt	r2, #3
   158c0:	movw	r3, #24952	; 0x6178
   158c4:	movt	r3, #3
   158c8:	movw	r1, #24958	; 0x617e
   158cc:	movt	r1, #3
   158d0:	str	r5, [r4, #80]	; 0x50
   158d4:	str	r0, [r4, #84]	; 0x54
   158d8:	str	ip, [r4, #88]	; 0x58
   158dc:	str	r5, [r4, #92]	; 0x5c
   158e0:	str	r2, [r4, #96]	; 0x60
   158e4:	str	r3, [r4, #100]	; 0x64
   158e8:	str	r1, [r4, #104]	; 0x68
   158ec:	str	r5, [r4, #132]	; 0x84
   158f0:	str	r0, [r4, #136]	; 0x88
   158f4:	str	r0, [r4, #140]	; 0x8c
   158f8:	str	r5, [r4, #164]	; 0xa4
   158fc:	add	r1, r4, #144	; 0x90
   15900:	vst1.64	{d16-d17}, [r1]
   15904:	str	lr, [r4, #176]	; 0xb0
   15908:	str	r5, [r4, #180]	; 0xb4
   1590c:	str	r0, [r4, #184]	; 0xb8
   15910:	str	r5, [r4, #188]	; 0xbc
   15914:	pop	{r4, r5, fp, pc}

00015918 <flatcc_create_context@@Base>:
   15918:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1591c:	add	fp, sp, #24
   15920:	sub	sp, sp, #8
   15924:	mov	r7, r3
   15928:	mov	r8, r2
   1592c:	mov	r9, r1
   15930:	mov	r6, r0
   15934:	mov	r0, #560	; 0x230
   15938:	bl	1496c <malloc@plt>
   1593c:	cmp	r0, #0
   15940:	beq	15978 <flatcc_create_context@@Base+0x60>
   15944:	mov	r5, r0
   15948:	mov	r4, #0
   1594c:	str	r7, [sp]
   15950:	str	r4, [sp, #4]
   15954:	mov	r1, r6
   15958:	mov	r2, r9
   1595c:	mov	r3, r8
   15960:	bl	28338 <__flatcc_fb_init_parser@@Base>
   15964:	cmp	r0, #0
   15968:	beq	15980 <flatcc_create_context@@Base+0x68>
   1596c:	mov	r0, r5
   15970:	bl	14900 <free@plt>
   15974:	b	15984 <flatcc_create_context@@Base+0x6c>
   15978:	mov	r4, #0
   1597c:	b	15984 <flatcc_create_context@@Base+0x6c>
   15980:	mov	r4, r5
   15984:	mov	r0, r4
   15988:	sub	sp, fp, #24
   1598c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015990 <flatcc_parse_buffer@@Base>:
   15990:	push	{r4, r5, r6, sl, fp, lr}
   15994:	add	fp, sp, #16
   15998:	mov	r5, r2
   1599c:	mov	r6, r1
   159a0:	mov	r4, r0
   159a4:	mov	r0, #1
   159a8:	str	r0, [r4, #140]	; 0x8c
   159ac:	ldr	r0, [r4, #128]	; 0x80
   159b0:	cmp	r0, r2
   159b4:	bcs	159d8 <flatcc_parse_buffer@@Base+0x48>
   159b8:	cmp	r0, #0
   159bc:	beq	159d8 <flatcc_parse_buffer@@Base+0x48>
   159c0:	movw	r1, #24963	; 0x6183
   159c4:	movt	r1, #3
   159c8:	mov	r0, r4
   159cc:	bl	28000 <__flatcc_fb_print_error@@Base>
   159d0:	mvn	r0, #0
   159d4:	pop	{r4, r5, r6, sl, fp, pc}
   159d8:	add	r0, r4, #524	; 0x20c
   159dc:	add	r1, r4, #352	; 0x160
   159e0:	mov	r2, #1
   159e4:	bl	263f4 <ptr_set_insert_item@@Base>
   159e8:	mov	r0, r4
   159ec:	mov	r1, r6
   159f0:	mov	r2, r5
   159f4:	mov	r3, #0
   159f8:	bl	28600 <__flatcc_fb_parse@@Base>
   159fc:	mov	r1, r0
   15a00:	mvn	r0, #0
   15a04:	cmp	r1, #0
   15a08:	popne	{r4, r5, r6, sl, fp, pc}
   15a0c:	mov	r0, r4
   15a10:	bl	2bed8 <__flatcc_fb_build_schema@@Base>
   15a14:	cmp	r0, #0
   15a18:	mvnne	r0, #0
   15a1c:	pop	{r4, r5, r6, sl, fp, pc}

00015a20 <flatcc_parse_file@@Base>:
   15a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a24:	add	fp, sp, #28
   15a28:	sub	sp, sp, #20
   15a2c:	mov	r6, r1
   15a30:	mov	r4, r0
   15a34:	mov	r0, r1
   15a38:	bl	149a8 <strlen@plt>
   15a3c:	mov	sl, r0
   15a40:	ldr	r0, [r4, #412]	; 0x19c
   15a44:	add	r8, r4, #352	; 0x160
   15a48:	add	r0, r0, #32
   15a4c:	mov	r1, r8
   15a50:	mov	r2, #1
   15a54:	bl	27790 <fb_schema_table_insert_item@@Base>
   15a58:	mov	r5, #0
   15a5c:	cmp	r0, #0
   15a60:	beq	15a70 <flatcc_parse_file@@Base+0x50>
   15a64:	mov	r0, r5
   15a68:	sub	sp, fp, #28
   15a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a70:	ldr	r9, [r4, #552]	; 0x228
   15a74:	cmp	r9, #0
   15a78:	beq	15b98 <flatcc_parse_file@@Base+0x178>
   15a7c:	str	r9, [sp, #12]
   15a80:	str	r8, [sp, #8]
   15a84:	ldr	r0, [r4, #336]	; 0x150
   15a88:	cmp	r0, #1
   15a8c:	blt	15b20 <flatcc_parse_file@@Base+0x100>
   15a90:	mov	r8, #0
   15a94:	add	r9, sp, #16
   15a98:	ldr	r0, [r4, #328]	; 0x148
   15a9c:	ldr	r5, [r0, r8, lsl #2]
   15aa0:	mov	r0, r5
   15aa4:	bl	149a8 <strlen@plt>
   15aa8:	mov	r1, r0
   15aac:	movw	r0, #26232	; 0x6678
   15ab0:	movt	r0, #3
   15ab4:	str	r0, [sp]
   15ab8:	mov	r0, #1
   15abc:	str	r0, [sp, #4]
   15ac0:	mov	r0, r5
   15ac4:	mov	r2, r6
   15ac8:	mov	r3, sl
   15acc:	bl	27b20 <__flatcc_fb_create_join_path_n@@Base>
   15ad0:	mov	r5, r0
   15ad4:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15ad8:	ldr	r1, [r4, #128]	; 0x80
   15adc:	mov	r0, r5
   15ae0:	mov	r2, r9
   15ae4:	bl	27ee8 <__flatcc_fb_read_file@@Base>
   15ae8:	cmp	r0, #0
   15aec:	bne	15bc8 <flatcc_parse_file@@Base+0x1a8>
   15af0:	mov	r0, r5
   15af4:	bl	14900 <free@plt>
   15af8:	ldr	r0, [r4, #128]	; 0x80
   15afc:	ldr	r1, [sp, #16]
   15b00:	cmp	r1, r0
   15b04:	bls	15b10 <flatcc_parse_file@@Base+0xf0>
   15b08:	cmp	r0, #0
   15b0c:	bne	15cfc <flatcc_parse_file@@Base+0x2dc>
   15b10:	add	r8, r8, #1
   15b14:	ldr	r0, [r4, #336]	; 0x150
   15b18:	cmp	r8, r0
   15b1c:	blt	15a98 <flatcc_parse_file@@Base+0x78>
   15b20:	ldr	r9, [sp, #12]
   15b24:	cmp	r9, #0
   15b28:	beq	15d14 <flatcc_parse_file@@Base+0x2f4>
   15b2c:	ldr	r5, [r4, #552]	; 0x228
   15b30:	mov	r0, r5
   15b34:	bl	149a8 <strlen@plt>
   15b38:	mov	r1, r0
   15b3c:	mov	r0, r5
   15b40:	bl	27e58 <__flatcc_fb_find_basename@@Base>
   15b44:	mov	r1, r0
   15b48:	mov	r0, #1
   15b4c:	movw	r2, #26232	; 0x6678
   15b50:	movt	r2, #3
   15b54:	str	r2, [sp]
   15b58:	str	r0, [sp, #4]
   15b5c:	mov	r0, r5
   15b60:	mov	r2, r6
   15b64:	mov	r3, sl
   15b68:	bl	27b20 <__flatcc_fb_create_join_path_n@@Base>
   15b6c:	mov	r5, r0
   15b70:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15b74:	ldr	r1, [r4, #128]	; 0x80
   15b78:	add	r2, sp, #16
   15b7c:	mov	r0, r5
   15b80:	bl	27ee8 <__flatcc_fb_read_file@@Base>
   15b84:	cmp	r0, #0
   15b88:	beq	15cdc <flatcc_parse_file@@Base+0x2bc>
   15b8c:	mov	r7, r0
   15b90:	ldr	r8, [sp, #8]
   15b94:	b	15bd4 <flatcc_parse_file@@Base+0x1b4>
   15b98:	ldr	r1, [r4, #128]	; 0x80
   15b9c:	add	r2, sp, #16
   15ba0:	mov	r0, r6
   15ba4:	bl	27ee8 <__flatcc_fb_read_file@@Base>
   15ba8:	cmp	r0, #0
   15bac:	beq	15c6c <flatcc_parse_file@@Base+0x24c>
   15bb0:	mov	r7, r0
   15bb4:	mov	r0, r6
   15bb8:	bl	27a74 <__flatcc_fb_copy_path@@Base>
   15bbc:	mov	r5, r0
   15bc0:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15bc4:	b	15bd4 <flatcc_parse_file@@Base+0x1b4>
   15bc8:	mov	r7, r0
   15bcc:	ldr	r8, [sp, #8]
   15bd0:	ldr	r9, [sp, #12]
   15bd4:	ldr	r0, [r4, #412]	; 0x19c
   15bd8:	ldr	r1, [r0, #56]	; 0x38
   15bdc:	ldr	r2, [sp, #16]
   15be0:	add	r1, r1, r2
   15be4:	str	r1, [r0, #56]	; 0x38
   15be8:	str	r5, [r4, #548]	; 0x224
   15bec:	mov	r0, r4
   15bf0:	mov	r1, r7
   15bf4:	mov	r3, #1
   15bf8:	bl	28600 <__flatcc_fb_parse@@Base>
   15bfc:	cmp	r0, #0
   15c00:	beq	15c0c <flatcc_parse_file@@Base+0x1ec>
   15c04:	mov	r5, #0
   15c08:	b	15a64 <flatcc_parse_file@@Base+0x44>
   15c0c:	mov	r5, r0
   15c10:	ldr	r7, [r8]
   15c14:	cmp	r7, #0
   15c18:	bne	15c34 <flatcc_parse_file@@Base+0x214>
   15c1c:	b	15c94 <flatcc_parse_file@@Base+0x274>
   15c20:	mov	r0, r6
   15c24:	bl	14900 <free@plt>
   15c28:	ldr	r7, [r7]
   15c2c:	cmp	r7, #0
   15c30:	beq	15c94 <flatcc_parse_file@@Base+0x274>
   15c34:	ldrd	r0, [r7, #8]
   15c38:	bl	27a00 <__flatcc_fb_copy_path_n@@Base>
   15c3c:	mov	r6, r0
   15c40:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15c44:	mov	r0, r4
   15c48:	mov	r1, r6
   15c4c:	bl	15d68 <flatcc_parse_file@@Base+0x348>
   15c50:	cmp	r0, #0
   15c54:	beq	15c20 <flatcc_parse_file@@Base+0x200>
   15c58:	cmp	r6, #0
   15c5c:	beq	15a64 <flatcc_parse_file@@Base+0x44>
   15c60:	mov	r0, r6
   15c64:	bl	14900 <free@plt>
   15c68:	b	15a64 <flatcc_parse_file@@Base+0x44>
   15c6c:	ldr	r0, [r4, #128]	; 0x80
   15c70:	ldr	r1, [r4, #412]	; 0x19c
   15c74:	ldr	r1, [r1, #56]	; 0x38
   15c78:	ldr	r2, [sp, #16]
   15c7c:	add	r1, r1, r2
   15c80:	cmp	r1, r0
   15c84:	bls	15a7c <flatcc_parse_file@@Base+0x5c>
   15c88:	cmp	r0, #0
   15c8c:	bne	15cfc <flatcc_parse_file@@Base+0x2dc>
   15c90:	b	15a7c <flatcc_parse_file@@Base+0x5c>
   15c94:	add	r0, r4, #524	; 0x20c
   15c98:	mov	r1, r8
   15c9c:	mov	r2, #1
   15ca0:	bl	263f4 <ptr_set_insert_item@@Base>
   15ca4:	mov	r0, r4
   15ca8:	bl	2bed8 <__flatcc_fb_build_schema@@Base>
   15cac:	cmp	r0, #0
   15cb0:	bne	15a64 <flatcc_parse_file@@Base+0x44>
   15cb4:	cmp	r9, #0
   15cb8:	bne	15c04 <flatcc_parse_file@@Base+0x1e4>
   15cbc:	ldr	r0, [r4, #240]	; 0xf0
   15cc0:	cmp	r0, #0
   15cc4:	beq	15c04 <flatcc_parse_file@@Base+0x1e4>
   15cc8:	mov	r0, r4
   15ccc:	bl	15e7c <flatcc_parse_file@@Base+0x45c>
   15cd0:	cmp	r0, #0
   15cd4:	moveq	r5, #0
   15cd8:	b	15a64 <flatcc_parse_file@@Base+0x44>
   15cdc:	mov	r0, r5
   15ce0:	bl	14900 <free@plt>
   15ce4:	ldr	r0, [r4, #128]	; 0x80
   15ce8:	ldr	r1, [sp, #16]
   15cec:	cmp	r1, r0
   15cf0:	bls	15d14 <flatcc_parse_file@@Base+0x2f4>
   15cf4:	cmp	r0, #0
   15cf8:	beq	15d14 <flatcc_parse_file@@Base+0x2f4>
   15cfc:	movw	r1, #24963	; 0x6183
   15d00:	movt	r1, #3
   15d04:	mov	r0, r4
   15d08:	bl	28000 <__flatcc_fb_print_error@@Base>
   15d0c:	mvn	r5, #0
   15d10:	b	15a64 <flatcc_parse_file@@Base+0x44>
   15d14:	movw	r1, #24999	; 0x61a7
   15d18:	movt	r1, #3
   15d1c:	mov	r0, r4
   15d20:	mov	r2, r6
   15d24:	bl	28000 <__flatcc_fb_print_error@@Base>
   15d28:	mvn	r5, #0
   15d2c:	b	15a64 <flatcc_parse_file@@Base+0x44>
   15d30:	cmp	r0, #0
   15d34:	bxne	lr
   15d38:	push	{fp, lr}
   15d3c:	mov	fp, sp
   15d40:	movw	r0, #8368	; 0x20b0
   15d44:	movt	r0, #6
   15d48:	ldr	r3, [r0]
   15d4c:	movw	r0, #25039	; 0x61cf
   15d50:	movt	r0, #3
   15d54:	mov	r1, #34	; 0x22
   15d58:	mov	r2, #1
   15d5c:	bl	14954 <fwrite@plt>
   15d60:	mov	r0, #1
   15d64:	bl	1499c <exit@plt>
   15d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d6c:	add	fp, sp, #28
   15d70:	sub	sp, sp, #4
   15d74:	mov	sl, r1
   15d78:	mov	r5, r0
   15d7c:	ldr	r0, [r0, #132]	; 0x84
   15d80:	ldr	r4, [r5, #412]	; 0x19c
   15d84:	ldr	r1, [r4, #52]	; 0x34
   15d88:	cmp	r1, r0
   15d8c:	cmpge	r0, #1
   15d90:	bge	15e00 <flatcc_parse_file@@Base+0x3e0>
   15d94:	ldr	r0, [r5, #136]	; 0x88
   15d98:	ldr	r1, [r4, #48]	; 0x30
   15d9c:	cmp	r1, r0
   15da0:	cmpge	r0, #1
   15da4:	bge	15e0c <flatcc_parse_file@@Base+0x3ec>
   15da8:	add	r0, r5, #128	; 0x80
   15dac:	mov	r1, sl
   15db0:	mov	r2, r5
   15db4:	bl	16224 <flatcc_destroy_context@@Base+0x38>
   15db8:	mvn	r6, #0
   15dbc:	cmp	r0, #0
   15dc0:	beq	15e20 <flatcc_parse_file@@Base+0x400>
   15dc4:	mov	r7, r0
   15dc8:	add	r8, r5, #352	; 0x160
   15dcc:	add	r0, r4, #32
   15dd0:	add	r9, r7, #352	; 0x160
   15dd4:	mov	r1, r9
   15dd8:	bl	27870 <fb_schema_table_find_item@@Base>
   15ddc:	cmp	r0, #0
   15de0:	beq	15e2c <flatcc_parse_file@@Base+0x40c>
   15de4:	mov	r1, r0
   15de8:	mov	r0, r8
   15dec:	bl	1629c <flatcc_destroy_context@@Base+0xb0>
   15df0:	mov	r0, r7
   15df4:	bl	161ec <flatcc_destroy_context@@Base>
   15df8:	mov	r6, #0
   15dfc:	b	15e20 <flatcc_parse_file@@Base+0x400>
   15e00:	movw	r1, #25074	; 0x61f2
   15e04:	movt	r1, #3
   15e08:	b	15e14 <flatcc_parse_file@@Base+0x3f4>
   15e0c:	movw	r1, #25106	; 0x6212
   15e10:	movt	r1, #3
   15e14:	mov	r0, r5
   15e18:	bl	28000 <__flatcc_fb_print_error@@Base>
   15e1c:	mvn	r6, #0
   15e20:	mov	r0, r6
   15e24:	sub	sp, fp, #28
   15e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e2c:	ldr	r0, [r5]
   15e30:	str	r0, [r7]
   15e34:	str	r7, [r5]
   15e38:	ldr	r0, [r5, #548]	; 0x224
   15e3c:	str	r0, [r7, #552]	; 0x228
   15e40:	ldr	r0, [r4, #48]	; 0x30
   15e44:	ldr	r1, [r4, #52]	; 0x34
   15e48:	add	r1, r1, #1
   15e4c:	add	r0, r0, #1
   15e50:	str	r0, [r4, #48]	; 0x30
   15e54:	str	r1, [r4, #52]	; 0x34
   15e58:	mov	r0, r7
   15e5c:	mov	r1, sl
   15e60:	bl	15a20 <flatcc_parse_file@@Base>
   15e64:	cmp	r0, #0
   15e68:	bne	15e20 <flatcc_parse_file@@Base+0x400>
   15e6c:	mov	r0, r8
   15e70:	mov	r1, r9
   15e74:	bl	1629c <flatcc_destroy_context@@Base+0xb0>
   15e78:	b	15df8 <flatcc_parse_file@@Base+0x3d8>
   15e7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e80:	add	fp, sp, #24
   15e84:	mov	r6, r0
   15e88:	ldr	r0, [r0, #552]	; 0x228
   15e8c:	cmp	r0, #0
   15e90:	bne	1603c <flatcc_parse_file@@Base+0x61c>
   15e94:	ldr	r1, [r6, #244]	; 0xf4
   15e98:	ldr	r7, [r6, #248]	; 0xf8
   15e9c:	ldr	r3, [r6, #344]	; 0x158
   15ea0:	ldr	ip, [r6, #512]	; 0x200
   15ea4:	movw	r2, #25272	; 0x62b8
   15ea8:	movt	r2, #3
   15eac:	movw	r5, #26232	; 0x6678
   15eb0:	movt	r5, #3
   15eb4:	cmp	r1, #0
   15eb8:	movne	r2, r5
   15ebc:	cmp	r3, #0
   15ec0:	moveq	r3, r5
   15ec4:	cmp	r1, #0
   15ec8:	mov	r0, r5
   15ecc:	moveq	r0, r3
   15ed0:	moveq	r1, ip
   15ed4:	cmp	r7, #0
   15ed8:	mov	r4, r5
   15edc:	bne	15f04 <flatcc_parse_file@@Base+0x4e4>
   15ee0:	ldr	r7, [r6, #308]	; 0x134
   15ee4:	movw	r4, #54057	; 0xd329
   15ee8:	movt	r4, #4
   15eec:	movw	r5, #24952	; 0x6178
   15ef0:	movt	r5, #3
   15ef4:	cmp	r7, #0
   15ef8:	moveq	r5, r4
   15efc:	mov	r7, ip
   15f00:	mov	r4, r3
   15f04:	mov	r3, #1
   15f08:	bl	27c3c <__flatcc_fb_create_join_path@@Base>
   15f0c:	mov	r8, r0
   15f10:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15f14:	mov	r0, r4
   15f18:	mov	r1, r7
   15f1c:	mov	r2, r5
   15f20:	mov	r3, #1
   15f24:	bl	27c3c <__flatcc_fb_create_join_path@@Base>
   15f28:	mov	r4, r0
   15f2c:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15f30:	mov	r0, r4
   15f34:	bl	27e38 <__flatcc_fb_create_make_path@@Base>
   15f38:	mov	r9, r0
   15f3c:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15f40:	cmp	r4, #0
   15f44:	beq	15f50 <flatcc_parse_file@@Base+0x530>
   15f48:	mov	r0, r4
   15f4c:	bl	14900 <free@plt>
   15f50:	movw	r1, #25279	; 0x62bf
   15f54:	movt	r1, #3
   15f58:	mov	r0, r8
   15f5c:	bl	148f4 <fopen@plt>
   15f60:	mov	r7, r0
   15f64:	cmp	r0, #0
   15f68:	beq	16018 <flatcc_parse_file@@Base+0x5f8>
   15f6c:	movw	r1, #25329	; 0x62f1
   15f70:	movt	r1, #3
   15f74:	mov	r0, r7
   15f78:	mov	r2, r9
   15f7c:	bl	149c0 <fprintf@plt>
   15f80:	ldr	r5, [r6]
   15f84:	cmp	r5, #0
   15f88:	beq	15fd0 <flatcc_parse_file@@Base+0x5b0>
   15f8c:	movw	r6, #25333	; 0x62f5
   15f90:	movt	r6, #3
   15f94:	ldr	r0, [r5, #548]	; 0x224
   15f98:	bl	27e38 <__flatcc_fb_create_make_path@@Base>
   15f9c:	mov	r4, r0
   15fa0:	bl	15d30 <flatcc_parse_file@@Base+0x310>
   15fa4:	mov	r0, r7
   15fa8:	mov	r1, r6
   15fac:	mov	r2, r4
   15fb0:	bl	149c0 <fprintf@plt>
   15fb4:	ldr	r5, [r5]
   15fb8:	cmp	r4, #0
   15fbc:	beq	15fc8 <flatcc_parse_file@@Base+0x5a8>
   15fc0:	mov	r0, r4
   15fc4:	bl	14900 <free@plt>
   15fc8:	cmp	r5, #0
   15fcc:	bne	15f94 <flatcc_parse_file@@Base+0x574>
   15fd0:	mov	r0, #10
   15fd4:	mov	r1, r7
   15fd8:	bl	14930 <fputc_unlocked@plt>
   15fdc:	mov	r6, #0
   15fe0:	cmp	r8, #0
   15fe4:	beq	15ff0 <flatcc_parse_file@@Base+0x5d0>
   15fe8:	mov	r0, r8
   15fec:	bl	14900 <free@plt>
   15ff0:	cmp	r9, #0
   15ff4:	beq	16000 <flatcc_parse_file@@Base+0x5e0>
   15ff8:	mov	r0, r9
   15ffc:	bl	14900 <free@plt>
   16000:	cmp	r7, #0
   16004:	beq	16010 <flatcc_parse_file@@Base+0x5f0>
   16008:	mov	r0, r7
   1600c:	bl	14a08 <fclose@plt>
   16010:	mov	r0, r6
   16014:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16018:	movw	r1, #25282	; 0x62c2
   1601c:	movt	r1, #3
   16020:	mov	r0, r6
   16024:	mov	r2, r8
   16028:	bl	28000 <__flatcc_fb_print_error@@Base>
   1602c:	mvn	r6, #0
   16030:	cmp	r8, #0
   16034:	bne	15fe8 <flatcc_parse_file@@Base+0x5c8>
   16038:	b	15ff0 <flatcc_parse_file@@Base+0x5d0>
   1603c:	movw	r0, #25136	; 0x6230
   16040:	movt	r0, #3
   16044:	movw	r1, #25157	; 0x6245
   16048:	movt	r1, #3
   1604c:	movw	r3, #25227	; 0x628b
   16050:	movt	r3, #3
   16054:	mov	r2, #220	; 0xdc
   16058:	bl	14a80 <__assert_fail@plt>

0001605c <flatcc_generate_binary_schema_to_buffer@@Base>:
   1605c:	push	{fp, lr}
   16060:	mov	fp, sp
   16064:	sub	sp, sp, #8
   16068:	mov	ip, r1
   1606c:	str	r2, [sp, #4]
   16070:	add	r2, r0, #128	; 0x80
   16074:	add	r1, r0, #352	; 0x160
   16078:	add	r3, sp, #4
   1607c:	mov	r0, r2
   16080:	mov	r2, ip
   16084:	bl	23a4c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   16088:	ldr	r1, [sp, #4]
   1608c:	cmp	r0, #0
   16090:	mvneq	r1, #0
   16094:	mov	r0, r1
   16098:	mov	sp, fp
   1609c:	pop	{fp, pc}

000160a0 <flatcc_generate_binary_schema@@Base>:
   160a0:	mov	r2, r1
   160a4:	add	r3, r0, #128	; 0x80
   160a8:	add	r1, r0, #352	; 0x160
   160ac:	mov	r0, r3
   160b0:	b	23c48 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

000160b4 <flatcc_generate_files@@Base>:
   160b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   160b8:	add	fp, sp, #24
   160bc:	sub	sp, sp, #232	; 0xe8
   160c0:	mvn	r4, #0
   160c4:	cmp	r0, #0
   160c8:	beq	160dc <flatcc_generate_files@@Base+0x28>
   160cc:	mov	r5, r0
   160d0:	ldr	r0, [r0, #108]	; 0x6c
   160d4:	cmp	r0, #0
   160d8:	beq	160e8 <flatcc_generate_files@@Base+0x34>
   160dc:	mov	r0, r4
   160e0:	sub	sp, fp, #24
   160e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   160e8:	mov	r0, #0
   160ec:	mov	r1, r5
   160f0:	mov	r7, r1
   160f4:	str	r0, [r1, #4]
   160f8:	ldr	r1, [r1]
   160fc:	cmp	r1, #0
   16100:	mov	r0, r7
   16104:	bne	160f0 <flatcc_generate_files@@Base+0x3c>
   16108:	ldr	r0, [r5, #308]	; 0x134
   1610c:	add	r6, r5, #128	; 0x80
   16110:	cmp	r0, #0
   16114:	beq	1612c <flatcc_generate_files@@Base+0x78>
   16118:	add	r1, r5, #352	; 0x160
   1611c:	mov	r0, r6
   16120:	bl	23cbc <__flatcc_fb_codegen_bfbs_to_file@@Base>
   16124:	cmp	r0, #0
   16128:	bne	160dc <flatcc_generate_files@@Base+0x28>
   1612c:	mov	r0, sp
   16130:	mov	r1, r6
   16134:	bl	16440 <__flatcc_fb_init_output_c@@Base>
   16138:	cmp	r0, #0
   1613c:	bne	160dc <flatcc_generate_files@@Base+0x28>
   16140:	ldr	r0, [r5, #256]	; 0x100
   16144:	cmp	r0, #0
   16148:	beq	161b0 <flatcc_generate_files@@Base+0xfc>
   1614c:	ldr	r0, [r5, #120]	; 0x78
   16150:	mov	r4, #0
   16154:	cmp	r0, #0
   16158:	beq	161e0 <flatcc_generate_files@@Base+0x12c>
   1615c:	ldr	r0, [r5, #300]	; 0x12c
   16160:	cmp	r0, #0
   16164:	beq	161c8 <flatcc_generate_files@@Base+0x114>
   16168:	cmp	r7, #0
   1616c:	beq	161e0 <flatcc_generate_files@@Base+0x12c>
   16170:	mov	r5, sp
   16174:	ldr	r0, [r7, #108]	; 0x6c
   16178:	cmp	r0, #0
   1617c:	bne	161dc <flatcc_generate_files@@Base+0x128>
   16180:	add	r1, r7, #352	; 0x160
   16184:	mov	r0, r5
   16188:	bl	16998 <__flatcc_fb_codegen_c@@Base>
   1618c:	cmp	r0, #0
   16190:	mov	r4, r0
   16194:	movwne	r4, #1
   16198:	ldr	r7, [r7, #4]
   1619c:	cmp	r7, #0
   161a0:	beq	161e0 <flatcc_generate_files@@Base+0x12c>
   161a4:	cmp	r0, #0
   161a8:	beq	16174 <flatcc_generate_files@@Base+0xc0>
   161ac:	b	161e0 <flatcc_generate_files@@Base+0x12c>
   161b0:	mov	r0, sp
   161b4:	bl	168d8 <__flatcc_fb_codegen_common_c@@Base>
   161b8:	mov	r4, r0
   161bc:	cmp	r0, #0
   161c0:	bne	161e0 <flatcc_generate_files@@Base+0x12c>
   161c4:	b	1614c <flatcc_generate_files@@Base+0x98>
   161c8:	add	r1, r5, #352	; 0x160
   161cc:	mov	r0, sp
   161d0:	bl	16998 <__flatcc_fb_codegen_c@@Base>
   161d4:	mov	r4, r0
   161d8:	b	161e0 <flatcc_generate_files@@Base+0x12c>
   161dc:	mov	r4, #1
   161e0:	mov	r0, sp
   161e4:	bl	16408 <__flatcc_fb_end_output_c@@Base>
   161e8:	b	160dc <flatcc_generate_files@@Base+0x28>

000161ec <flatcc_destroy_context@@Base>:
   161ec:	push	{r4, r5, fp, lr}
   161f0:	add	fp, sp, #8
   161f4:	cmp	r0, #0
   161f8:	popeq	{r4, r5, fp, pc}
   161fc:	mov	r4, r0
   16200:	ldr	r5, [r4]
   16204:	mov	r0, r4
   16208:	bl	29748 <__flatcc_fb_clear_parser@@Base>
   1620c:	mov	r0, r4
   16210:	bl	14900 <free@plt>
   16214:	cmp	r5, #0
   16218:	mov	r4, r5
   1621c:	bne	16200 <flatcc_destroy_context@@Base+0x14>
   16220:	pop	{r4, r5, fp, pc}
   16224:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16228:	add	fp, sp, #24
   1622c:	sub	sp, sp, #8
   16230:	mov	r6, r2
   16234:	mov	r8, r1
   16238:	mov	r7, r0
   1623c:	mov	r0, #560	; 0x230
   16240:	bl	1496c <malloc@plt>
   16244:	mov	r4, #0
   16248:	cmp	r0, #0
   1624c:	beq	16290 <flatcc_destroy_context@@Base+0xa4>
   16250:	mov	r5, r0
   16254:	ldr	r3, [r6, #8]
   16258:	ldr	r1, [r6, #12]
   1625c:	ldr	r0, [r6, #412]	; 0x19c
   16260:	str	r1, [sp]
   16264:	str	r0, [sp, #4]
   16268:	mov	r0, r5
   1626c:	mov	r1, r7
   16270:	mov	r2, r8
   16274:	bl	28338 <__flatcc_fb_init_parser@@Base>
   16278:	cmp	r0, #0
   1627c:	beq	1628c <flatcc_destroy_context@@Base+0xa0>
   16280:	mov	r0, r5
   16284:	bl	14900 <free@plt>
   16288:	b	16290 <flatcc_destroy_context@@Base+0xa4>
   1628c:	mov	r4, r5
   16290:	mov	r0, r4
   16294:	sub	sp, fp, #24
   16298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1629c:	mov	r2, r0
   162a0:	add	r0, r1, #172	; 0xac
   162a4:	movw	r1, #25264	; 0x62b0
   162a8:	movt	r1, #1
   162ac:	b	2658c <ptr_set_visit@@Base>
   162b0:	add	r0, r0, #172	; 0xac
   162b4:	mov	r2, #1
   162b8:	b	263f4 <ptr_set_insert_item@@Base>

000162bc <__flatcc_fb_open_output_file@@Base>:
   162bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   162c0:	add	fp, sp, #24
   162c4:	sub	sp, sp, #8
   162c8:	mov	r9, r1
   162cc:	mov	r4, r0
   162d0:	ldr	r0, [r0, #204]	; 0xcc
   162d4:	ldr	r1, [r4, #212]	; 0xd4
   162d8:	ldr	r1, [r1, #216]	; 0xd8
   162dc:	movw	r6, #26232	; 0x6678
   162e0:	movt	r6, #3
   162e4:	cmp	r1, #0
   162e8:	movne	r6, r1
   162ec:	mov	r5, #0
   162f0:	cmp	r0, #0
   162f4:	bne	16358 <__flatcc_fb_open_output_file@@Base+0x9c>
   162f8:	mov	r7, r3
   162fc:	mov	r8, r2
   16300:	mov	r0, r6
   16304:	bl	149a8 <strlen@plt>
   16308:	mov	r1, r0
   1630c:	mov	r0, #1
   16310:	str	r7, [sp]
   16314:	str	r0, [sp, #4]
   16318:	mov	r0, r6
   1631c:	mov	r2, r9
   16320:	mov	r3, r8
   16324:	bl	27b20 <__flatcc_fb_create_join_path_n@@Base>
   16328:	mov	r6, r0
   1632c:	bl	16388 <__flatcc_fb_open_output_file@@Base+0xcc>
   16330:	movw	r1, #25279	; 0x62bf
   16334:	movt	r1, #3
   16338:	mov	r0, r6
   1633c:	bl	148f4 <fopen@plt>
   16340:	str	r0, [r4, #204]	; 0xcc
   16344:	mov	r5, #0
   16348:	cmp	r0, #0
   1634c:	beq	16364 <__flatcc_fb_open_output_file@@Base+0xa8>
   16350:	mov	r0, r6
   16354:	bl	14900 <free@plt>
   16358:	mov	r0, r5
   1635c:	sub	sp, fp, #24
   16360:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16364:	movw	r0, #8368	; 0x20b0
   16368:	movt	r0, #6
   1636c:	ldr	r0, [r0]
   16370:	movw	r1, #25337	; 0x62f9
   16374:	movt	r1, #3
   16378:	mov	r2, r6
   1637c:	bl	149c0 <fprintf@plt>
   16380:	mvn	r5, #0
   16384:	b	16350 <__flatcc_fb_open_output_file@@Base+0x94>
   16388:	cmp	r0, #0
   1638c:	bxne	lr
   16390:	push	{fp, lr}
   16394:	mov	fp, sp
   16398:	movw	r0, #8368	; 0x20b0
   1639c:	movt	r0, #6
   163a0:	ldr	r3, [r0]
   163a4:	movw	r0, #25039	; 0x61cf
   163a8:	movt	r0, #3
   163ac:	mov	r1, #34	; 0x22
   163b0:	mov	r2, #1
   163b4:	bl	14954 <fwrite@plt>
   163b8:	mov	r0, #1
   163bc:	bl	1499c <exit@plt>

000163c0 <__flatcc_fb_close_output_file@@Base>:
   163c0:	push	{r4, sl, fp, lr}
   163c4:	add	fp, sp, #8
   163c8:	mov	r4, r0
   163cc:	ldr	r0, [r0, #212]	; 0xd4
   163d0:	ldr	r1, [r0, #124]	; 0x7c
   163d4:	cmp	r1, #0
   163d8:	bne	163e8 <__flatcc_fb_close_output_file@@Base+0x28>
   163dc:	ldr	r0, [r0, #108]	; 0x6c
   163e0:	cmp	r0, #0
   163e4:	beq	163ec <__flatcc_fb_close_output_file@@Base+0x2c>
   163e8:	pop	{r4, sl, fp, pc}
   163ec:	ldr	r0, [r4, #204]	; 0xcc
   163f0:	cmp	r0, #0
   163f4:	popeq	{r4, sl, fp, pc}
   163f8:	bl	14a08 <fclose@plt>
   163fc:	mov	r0, #0
   16400:	str	r0, [r4, #204]	; 0xcc
   16404:	pop	{r4, sl, fp, pc}

00016408 <__flatcc_fb_end_output_c@@Base>:
   16408:	push	{r4, sl, fp, lr}
   1640c:	add	fp, sp, #8
   16410:	mov	r4, r0
   16414:	ldr	r0, [r0, #204]	; 0xcc
   16418:	cmp	r0, #0
   1641c:	movwne	r1, #8372	; 0x20b4
   16420:	movtne	r1, #6
   16424:	ldrne	r1, [r1]
   16428:	cmpne	r0, r1
   1642c:	beq	16434 <__flatcc_fb_end_output_c@@Base+0x2c>
   16430:	bl	14a08 <fclose@plt>
   16434:	mov	r0, #0
   16438:	str	r0, [r4, #204]	; 0xcc
   1643c:	pop	{r4, sl, fp, pc}

00016440 <__flatcc_fb_init_output_c@@Base>:
   16440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16444:	add	fp, sp, #28
   16448:	sub	sp, sp, #4
   1644c:	mov	r6, r1
   16450:	mov	r4, r0
   16454:	ldr	r5, [r1, #128]	; 0x80
   16458:	ldr	r7, [r1, #216]	; 0xd8
   1645c:	mov	sl, #0
   16460:	mov	r1, #0
   16464:	mov	r2, #232	; 0xe8
   16468:	bl	149d8 <memset@plt>
   1646c:	str	r6, [r4, #212]	; 0xd4
   16470:	movw	r0, #25279	; 0x62bf
   16474:	movt	r0, #3
   16478:	movw	r8, #25371	; 0x631b
   1647c:	movt	r8, #3
   16480:	cmp	r5, #0
   16484:	moveq	r8, r0
   16488:	movw	r9, #26232	; 0x6678
   1648c:	movt	r9, #3
   16490:	cmp	r7, #0
   16494:	movne	r9, r7
   16498:	ldr	r5, [r6, #196]	; 0xc4
   1649c:	cmp	r5, #0
   164a0:	beq	164dc <__flatcc_fb_init_output_c@@Base+0x9c>
   164a4:	mov	r0, r5
   164a8:	bl	149a8 <strlen@plt>
   164ac:	mov	r7, r0
   164b0:	cmp	r0, #101	; 0x65
   164b4:	bcc	164e8 <__flatcc_fb_init_output_c@@Base+0xa8>
   164b8:	movw	r0, #8368	; 0x20b0
   164bc:	movt	r0, #6
   164c0:	ldr	r0, [r0]
   164c4:	movw	r1, #25374	; 0x631e
   164c8:	movt	r1, #3
   164cc:	mov	r2, #100	; 0x64
   164d0:	bl	149c0 <fprintf@plt>
   164d4:	mvn	sl, #0
   164d8:	b	16548 <__flatcc_fb_init_output_c@@Base+0x108>
   164dc:	movw	r5, #25429	; 0x6355
   164e0:	movt	r5, #3
   164e4:	mov	r7, #11
   164e8:	mov	r0, r4
   164ec:	mov	r1, r5
   164f0:	mov	r2, #100	; 0x64
   164f4:	bl	149e4 <strncpy@plt>
   164f8:	strb	sl, [r4, #100]	; 0x64
   164fc:	cmp	r7, #0
   16500:	addne	r0, r4, r7
   16504:	movne	r1, #95	; 0x5f
   16508:	strhne	r1, [r0]
   1650c:	add	r5, r4, #102	; 0x66
   16510:	mov	r0, r5
   16514:	mov	r1, r4
   16518:	bl	165dc <__flatcc_fb_init_output_c@@Base+0x19c>
   1651c:	mov	sl, #0
   16520:	strb	sl, [r5, r7]
   16524:	ldr	r0, [r6, #176]	; 0xb0
   16528:	str	r0, [r4, #224]	; 0xe0
   1652c:	ldr	r0, [r6, #108]	; 0x6c
   16530:	cmp	r0, #0
   16534:	beq	16554 <__flatcc_fb_init_output_c@@Base+0x114>
   16538:	movw	r0, #8372	; 0x20b4
   1653c:	movt	r0, #6
   16540:	ldr	r0, [r0]
   16544:	str	r0, [r4, #204]	; 0xcc
   16548:	mov	r0, sl
   1654c:	sub	sp, fp, #28
   16550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16554:	ldr	r0, [r4, #212]	; 0xd4
   16558:	ldr	r1, [r0, #124]	; 0x7c
   1655c:	cmp	r1, #0
   16560:	beq	16548 <__flatcc_fb_init_output_c@@Base+0x108>
   16564:	movw	r2, #26232	; 0x6678
   16568:	movt	r2, #3
   1656c:	mov	r0, r9
   16570:	mov	r3, #1
   16574:	bl	27c3c <__flatcc_fb_create_join_path@@Base>
   16578:	mov	r6, r0
   1657c:	bl	16388 <__flatcc_fb_open_output_file@@Base+0xcc>
   16580:	mov	r0, r6
   16584:	mov	r1, r8
   16588:	bl	148f4 <fopen@plt>
   1658c:	str	r0, [r4, #204]	; 0xcc
   16590:	mov	sl, #0
   16594:	cmp	r0, #0
   16598:	beq	165b0 <__flatcc_fb_init_output_c@@Base+0x170>
   1659c:	cmp	r6, #0
   165a0:	beq	16548 <__flatcc_fb_init_output_c@@Base+0x108>
   165a4:	mov	r0, r6
   165a8:	bl	14900 <free@plt>
   165ac:	b	16548 <__flatcc_fb_init_output_c@@Base+0x108>
   165b0:	movw	r0, #8368	; 0x20b0
   165b4:	movt	r0, #6
   165b8:	ldr	r0, [r0]
   165bc:	movw	r1, #25337	; 0x62f9
   165c0:	movt	r1, #3
   165c4:	mov	r2, r6
   165c8:	bl	149c0 <fprintf@plt>
   165cc:	mvn	sl, #0
   165d0:	cmp	r6, #0
   165d4:	bne	165a4 <__flatcc_fb_init_output_c@@Base+0x164>
   165d8:	b	16548 <__flatcc_fb_init_output_c@@Base+0x108>
   165dc:	push	{r4, r5, r6, sl, fp, lr}
   165e0:	add	fp, sp, #16
   165e4:	mov	r4, r0
   165e8:	ldrb	r5, [r1]
   165ec:	cmp	r5, #0
   165f0:	beq	16618 <__flatcc_fb_init_output_c@@Base+0x1d8>
   165f4:	add	r6, r1, #1
   165f8:	bl	14984 <__ctype_toupper_loc@plt>
   165fc:	ldr	r1, [r0]
   16600:	uxtb	r2, r5
   16604:	ldr	r1, [r1, r2, lsl #2]
   16608:	strb	r1, [r4], #1
   1660c:	ldrb	r5, [r6], #1
   16610:	cmp	r5, #0
   16614:	bne	165fc <__flatcc_fb_init_output_c@@Base+0x1bc>
   16618:	mov	r0, #0
   1661c:	strb	r0, [r4]
   16620:	pop	{r4, r5, r6, sl, fp, pc}

00016624 <__flatcc_fb_gen_c_includes@@Base>:
   16624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16628:	add	fp, sp, #28
   1662c:	sub	sp, sp, #36	; 0x24
   16630:	str	r2, [sp, #12]
   16634:	str	r1, [sp, #8]
   16638:	mov	r6, r0
   1663c:	ldr	r0, [r0, #208]	; 0xd0
   16640:	ldr	r8, [r0]
   16644:	vmov.i32	q8, #0	; 0x00000000
   16648:	add	r4, sp, #16
   1664c:	vst1.64	{d16-d17}, [r4]
   16650:	ldr	r0, [r0, #164]	; 0xa4
   16654:	bl	27a74 <__flatcc_fb_copy_path@@Base>
   16658:	mov	r1, r0
   1665c:	mov	r0, r4
   16660:	mov	r2, #1
   16664:	bl	25e14 <str_set_insert_item@@Base>
   16668:	cmp	r8, #0
   1666c:	beq	1672c <__flatcc_fb_gen_c_includes@@Base+0x108>
   16670:	add	r7, sp, #16
   16674:	ldrd	r0, [r8, #8]
   16678:	ldr	r2, [r6, #212]	; 0xd4
   1667c:	ldr	r2, [r2, #96]	; 0x60
   16680:	bl	27e84 <__flatcc_fb_create_basename@@Base>
   16684:	mov	r4, r0
   16688:	bl	16388 <__flatcc_fb_open_output_file@@Base+0xcc>
   1668c:	ldr	r8, [r8]
   16690:	mov	r0, r4
   16694:	bl	27a74 <__flatcc_fb_copy_path@@Base>
   16698:	mov	r5, r0
   1669c:	bl	16388 <__flatcc_fb_open_output_file@@Base+0xcc>
   166a0:	ldrb	r9, [r5]
   166a4:	cmp	r9, #0
   166a8:	beq	166d4 <__flatcc_fb_gen_c_includes@@Base+0xb0>
   166ac:	add	sl, r5, #1
   166b0:	bl	14984 <__ctype_toupper_loc@plt>
   166b4:	ldr	r1, [r0]
   166b8:	uxtb	r2, r9
   166bc:	ldr	r1, [r1, r2, lsl #2]
   166c0:	strb	r1, [sl, #-1]
   166c4:	ldrb	r9, [sl]
   166c8:	add	sl, sl, #1
   166cc:	cmp	r9, #0
   166d0:	bne	166b4 <__flatcc_fb_gen_c_includes@@Base+0x90>
   166d4:	mov	r0, r7
   166d8:	mov	r1, r5
   166dc:	mov	r2, #1
   166e0:	bl	25e14 <str_set_insert_item@@Base>
   166e4:	cmp	r0, #0
   166e8:	beq	166f8 <__flatcc_fb_gen_c_includes@@Base+0xd4>
   166ec:	mov	r0, r5
   166f0:	bl	14900 <free@plt>
   166f4:	b	1671c <__flatcc_fb_gen_c_includes@@Base+0xf8>
   166f8:	ldr	r0, [r6, #204]	; 0xcc
   166fc:	str	r4, [sp]
   16700:	ldr	r1, [sp, #8]
   16704:	str	r1, [sp, #4]
   16708:	movw	r1, #25441	; 0x6361
   1670c:	movt	r1, #3
   16710:	mov	r2, r5
   16714:	ldr	r3, [sp, #12]
   16718:	bl	149c0 <fprintf@plt>
   1671c:	mov	r0, r4
   16720:	bl	14900 <free@plt>
   16724:	cmp	r8, #0
   16728:	bne	16674 <__flatcc_fb_gen_c_includes@@Base+0x50>
   1672c:	add	r0, sp, #16
   16730:	movw	r1, #26440	; 0x6748
   16734:	movt	r1, #1
   16738:	mov	r2, #0
   1673c:	bl	25a98 <str_set_destroy@@Base>
   16740:	sub	sp, fp, #28
   16744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16748:	mov	r0, r1
   1674c:	b	14900 <free@plt>

00016750 <__flatcc_fb_copy_scope@@Base>:
   16750:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16754:	add	fp, sp, #24
   16758:	mov	r4, r1
   1675c:	mov	r6, r0
   16760:	ldr	r1, [r0]
   16764:	ldr	r5, [r0, #24]
   16768:	cmp	r1, #0
   1676c:	mov	r0, r5
   16770:	beq	16798 <__flatcc_fb_copy_scope@@Base+0x48>
   16774:	mov	r0, r5
   16778:	ldr	r2, [r1]
   1677c:	ldr	r1, [r1, #4]
   16780:	ldr	r1, [r1, #4]
   16784:	add	r0, r0, r1
   16788:	add	r0, r0, #1
   1678c:	cmp	r2, #0
   16790:	mov	r1, r2
   16794:	bne	16778 <__flatcc_fb_copy_scope@@Base+0x28>
   16798:	cmp	r0, #101	; 0x65
   1679c:	bls	167a8 <__flatcc_fb_copy_scope@@Base+0x58>
   167a0:	mvn	r5, #0
   167a4:	b	167f8 <__flatcc_fb_copy_scope@@Base+0xa8>
   167a8:	ldr	r1, [r6, #20]
   167ac:	mov	r0, r4
   167b0:	mov	r2, r5
   167b4:	bl	1490c <memcpy@plt>
   167b8:	ldr	r7, [r6]
   167bc:	cmp	r7, #0
   167c0:	beq	167f4 <__flatcc_fb_copy_scope@@Base+0xa4>
   167c4:	mov	r8, #95	; 0x5f
   167c8:	add	r0, r4, r5
   167cc:	ldr	r2, [r7, #4]
   167d0:	ldm	r2, {r1, r6}
   167d4:	mov	r2, r6
   167d8:	bl	1490c <memcpy@plt>
   167dc:	add	r0, r6, r5
   167e0:	strb	r8, [r4, r0]
   167e4:	add	r5, r0, #1
   167e8:	ldr	r7, [r7]
   167ec:	cmp	r7, #0
   167f0:	bne	167c8 <__flatcc_fb_copy_scope@@Base+0x78>
   167f4:	add	r4, r4, r5
   167f8:	mov	r0, #0
   167fc:	strb	r0, [r4]
   16800:	mov	r0, r5
   16804:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016808 <__flatcc_fb_scoped_symbol_name@@Base>:
   16808:	push	{r4, r5, fp, lr}
   1680c:	add	fp, sp, #8
   16810:	mov	r4, r2
   16814:	ldr	r5, [r1, #4]
   16818:	ldr	r1, [r2, #204]	; 0xcc
   1681c:	cmp	r1, r0
   16820:	beq	16838 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
   16824:	mov	r1, r4
   16828:	bl	16750 <__flatcc_fb_copy_scope@@Base>
   1682c:	str	r0, [r4, #208]	; 0xd0
   16830:	cmn	r0, #1
   16834:	ble	168ac <__flatcc_fb_scoped_symbol_name@@Base+0xa4>
   16838:	ldr	r2, [r5, #4]
   1683c:	ldr	r0, [r4, #208]	; 0xd0
   16840:	add	r0, r0, r2
   16844:	str	r2, [r4, #212]	; 0xd4
   16848:	str	r0, [r4, #216]	; 0xd8
   1684c:	cmp	r0, #204	; 0xcc
   16850:	bge	16878 <__flatcc_fb_scoped_symbol_name@@Base+0x70>
   16854:	ldr	r0, [r4, #208]	; 0xd0
   16858:	ldr	r2, [r4, #212]	; 0xd4
   1685c:	add	r0, r4, r0
   16860:	ldr	r1, [r5]
   16864:	bl	1490c <memcpy@plt>
   16868:	ldr	r0, [r4, #216]	; 0xd8
   1686c:	mov	r1, #0
   16870:	strb	r1, [r4, r0]
   16874:	pop	{r4, r5, fp, pc}
   16878:	ldr	r3, [r5]
   1687c:	movw	r0, #8368	; 0x20b0
   16880:	movt	r0, #6
   16884:	ldr	r0, [r0]
   16888:	movw	r1, #25507	; 0x63a3
   1688c:	movt	r1, #3
   16890:	bl	149c0 <fprintf@plt>
   16894:	mov	r0, #203	; 0xcb
   16898:	ldr	r1, [r4, #208]	; 0xd0
   1689c:	rsb	r1, r1, #203	; 0xcb
   168a0:	str	r1, [r4, #212]	; 0xd4
   168a4:	str	r0, [r4, #216]	; 0xd8
   168a8:	b	16854 <__flatcc_fb_scoped_symbol_name@@Base+0x4c>
   168ac:	mov	r0, #0
   168b0:	str	r0, [r4, #208]	; 0xd0
   168b4:	movw	r0, #8368	; 0x20b0
   168b8:	movt	r0, #6
   168bc:	ldr	r3, [r0]
   168c0:	movw	r0, #25478	; 0x6386
   168c4:	movt	r0, #3
   168c8:	mov	r1, #28
   168cc:	mov	r2, #1
   168d0:	bl	14954 <fwrite@plt>
   168d4:	b	16838 <__flatcc_fb_scoped_symbol_name@@Base+0x30>

000168d8 <__flatcc_fb_codegen_common_c@@Base>:
   168d8:	push	{r4, r5, r6, sl, fp, lr}
   168dc:	add	fp, sp, #16
   168e0:	mov	r4, r0
   168e4:	bl	149a8 <strlen@plt>
   168e8:	sub	r5, r0, #1
   168ec:	ldr	r0, [r4, #212]	; 0xd4
   168f0:	ldr	r0, [r0, #144]	; 0x90
   168f4:	cmp	r0, #0
   168f8:	beq	1693c <__flatcc_fb_codegen_common_c@@Base+0x64>
   168fc:	movw	r3, #25545	; 0x63c9
   16900:	movt	r3, #3
   16904:	mov	r0, r4
   16908:	mov	r1, r4
   1690c:	mov	r2, r5
   16910:	bl	162bc <__flatcc_fb_open_output_file@@Base>
   16914:	mvn	r6, #0
   16918:	cmp	r0, #0
   1691c:	bne	16974 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   16920:	mov	r0, r4
   16924:	bl	16b7c <__flatcc_fb_gen_common_c_header@@Base>
   16928:	mov	r6, r0
   1692c:	mov	r0, r4
   16930:	bl	163c0 <__flatcc_fb_close_output_file@@Base>
   16934:	cmp	r6, #0
   16938:	bne	16974 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   1693c:	ldr	r0, [r4, #212]	; 0xd4
   16940:	ldr	r0, [r0, #148]	; 0x94
   16944:	mov	r6, #0
   16948:	cmp	r0, #0
   1694c:	beq	16974 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   16950:	movw	r3, #25562	; 0x63da
   16954:	movt	r3, #3
   16958:	mov	r0, r4
   1695c:	mov	r1, r4
   16960:	mov	r2, r5
   16964:	bl	162bc <__flatcc_fb_open_output_file@@Base>
   16968:	mvn	r6, #0
   1696c:	cmp	r0, #0
   16970:	beq	1697c <__flatcc_fb_codegen_common_c@@Base+0xa4>
   16974:	mov	r0, r6
   16978:	pop	{r4, r5, r6, sl, fp, pc}
   1697c:	mov	r0, r4
   16980:	bl	19c90 <__flatcc_fb_gen_common_c_builder_header@@Base>
   16984:	mov	r0, r4
   16988:	bl	163c0 <__flatcc_fb_close_output_file@@Base>
   1698c:	mov	r6, #0
   16990:	mov	r0, r6
   16994:	pop	{r4, r5, r6, sl, fp, pc}

00016998 <__flatcc_fb_codegen_c@@Base>:
   16998:	push	{r4, r5, r6, sl, fp, lr}
   1699c:	add	fp, sp, #16
   169a0:	mov	r4, r0
   169a4:	str	r1, [r0, #208]	; 0xd0
   169a8:	ldr	r0, [r1, #60]	; 0x3c
   169ac:	mov	r1, #0
   169b0:	mov	r2, #0
   169b4:	bl	27020 <fb_scope_table_find@@Base>
   169b8:	str	r0, [r4, #216]	; 0xd8
   169bc:	ldr	r0, [r4, #208]	; 0xd0
   169c0:	ldr	r6, [r0, #160]	; 0xa0
   169c4:	mov	r0, r6
   169c8:	bl	149a8 <strlen@plt>
   169cc:	mov	r5, r0
   169d0:	ldr	r0, [r4, #212]	; 0xd4
   169d4:	ldr	r0, [r0, #152]	; 0x98
   169d8:	cmp	r0, #0
   169dc:	beq	16a20 <__flatcc_fb_codegen_c@@Base+0x88>
   169e0:	movw	r3, #54057	; 0xd329
   169e4:	movt	r3, #4
   169e8:	mov	r0, r4
   169ec:	mov	r1, r6
   169f0:	mov	r2, r5
   169f4:	bl	162bc <__flatcc_fb_open_output_file@@Base>
   169f8:	mov	r1, r0
   169fc:	mvn	r0, #0
   16a00:	cmp	r1, #0
   16a04:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a08:	mov	r0, r4
   16a0c:	bl	174b4 <__flatcc_fb_gen_c_reader@@Base>
   16a10:	cmp	r0, #0
   16a14:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a18:	mov	r0, r4
   16a1c:	bl	163c0 <__flatcc_fb_close_output_file@@Base>
   16a20:	ldr	r0, [r4, #212]	; 0xd4
   16a24:	ldr	r0, [r0, #156]	; 0x9c
   16a28:	cmp	r0, #0
   16a2c:	beq	16a74 <__flatcc_fb_codegen_c@@Base+0xdc>
   16a30:	ldr	r0, [r4, #208]	; 0xd0
   16a34:	ldr	r1, [r0, #160]	; 0xa0
   16a38:	movw	r3, #52777	; 0xce29
   16a3c:	movt	r3, #4
   16a40:	mov	r0, r4
   16a44:	mov	r2, r5
   16a48:	bl	162bc <__flatcc_fb_open_output_file@@Base>
   16a4c:	mov	r1, r0
   16a50:	mvn	r0, #0
   16a54:	cmp	r1, #0
   16a58:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a5c:	mov	r0, r4
   16a60:	bl	1a550 <__flatcc_fb_gen_c_builder@@Base>
   16a64:	cmp	r0, #0
   16a68:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a6c:	mov	r0, r4
   16a70:	bl	163c0 <__flatcc_fb_close_output_file@@Base>
   16a74:	ldr	r0, [r4, #212]	; 0xd4
   16a78:	ldr	r0, [r0, #160]	; 0xa0
   16a7c:	cmp	r0, #0
   16a80:	beq	16ac8 <__flatcc_fb_codegen_c@@Base+0x130>
   16a84:	ldr	r0, [r4, #208]	; 0xd0
   16a88:	ldr	r1, [r0, #160]	; 0xa0
   16a8c:	movw	r3, #25580	; 0x63ec
   16a90:	movt	r3, #3
   16a94:	mov	r0, r4
   16a98:	mov	r2, r5
   16a9c:	bl	162bc <__flatcc_fb_open_output_file@@Base>
   16aa0:	mov	r1, r0
   16aa4:	mvn	r0, #0
   16aa8:	cmp	r1, #0
   16aac:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16ab0:	mov	r0, r4
   16ab4:	bl	1cb84 <__flatcc_fb_gen_c_verifier@@Base>
   16ab8:	cmp	r0, #0
   16abc:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16ac0:	mov	r0, r4
   16ac4:	bl	163c0 <__flatcc_fb_close_output_file@@Base>
   16ac8:	ldr	r0, [r4, #212]	; 0xd4
   16acc:	ldr	r0, [r0, #164]	; 0xa4
   16ad0:	cmp	r0, #0
   16ad4:	beq	16b1c <__flatcc_fb_codegen_c@@Base+0x184>
   16ad8:	ldr	r0, [r4, #208]	; 0xd0
   16adc:	ldr	r1, [r0, #160]	; 0xa0
   16ae0:	movw	r3, #25592	; 0x63f8
   16ae4:	movt	r3, #3
   16ae8:	mov	r0, r4
   16aec:	mov	r2, r5
   16af0:	bl	162bc <__flatcc_fb_open_output_file@@Base>
   16af4:	mov	r1, r0
   16af8:	mvn	r0, #0
   16afc:	cmp	r1, #0
   16b00:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b04:	mov	r0, r4
   16b08:	bl	1d694 <__flatcc_fb_gen_c_json_parser@@Base>
   16b0c:	cmp	r0, #0
   16b10:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b14:	mov	r0, r4
   16b18:	bl	163c0 <__flatcc_fb_close_output_file@@Base>
   16b1c:	ldr	r0, [r4, #212]	; 0xd4
   16b20:	ldr	r1, [r0, #168]	; 0xa8
   16b24:	mov	r0, #0
   16b28:	cmp	r1, #0
   16b2c:	beq	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b30:	ldr	r0, [r4, #208]	; 0xd0
   16b34:	ldr	r1, [r0, #160]	; 0xa0
   16b38:	movw	r3, #25607	; 0x6407
   16b3c:	movt	r3, #3
   16b40:	mov	r0, r4
   16b44:	mov	r2, r5
   16b48:	bl	162bc <__flatcc_fb_open_output_file@@Base>
   16b4c:	mov	r1, r0
   16b50:	mvn	r0, #0
   16b54:	cmp	r1, #0
   16b58:	bne	16b78 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b5c:	mov	r0, r4
   16b60:	bl	22320 <__flatcc_fb_gen_c_json_printer@@Base>
   16b64:	cmp	r0, #0
   16b68:	popne	{r4, r5, r6, sl, fp, pc}
   16b6c:	mov	r0, r4
   16b70:	bl	163c0 <__flatcc_fb_close_output_file@@Base>
   16b74:	mov	r0, #0
   16b78:	pop	{r4, r5, r6, sl, fp, pc}

00016b7c <__flatcc_fb_gen_common_c_header@@Base>:
   16b7c:	push	{r4, r5, fp, lr}
   16b80:	add	fp, sp, #8
   16b84:	mov	r5, r0
   16b88:	ldr	r0, [r0, #204]	; 0xcc
   16b8c:	add	r4, r5, #102	; 0x66
   16b90:	movw	r1, #25623	; 0x6417
   16b94:	movt	r1, #3
   16b98:	mov	r2, r4
   16b9c:	mov	r3, r4
   16ba0:	bl	149c0 <fprintf@plt>
   16ba4:	ldr	r3, [r5, #204]	; 0xcc
   16ba8:	movw	r0, #25678	; 0x644e
   16bac:	movt	r0, #3
   16bb0:	mov	r1, #81	; 0x51
   16bb4:	mov	r2, #1
   16bb8:	bl	14954 <fwrite@plt>
   16bbc:	ldr	r3, [r5, #204]	; 0xcc
   16bc0:	movw	r0, #25760	; 0x64a0
   16bc4:	movt	r0, #3
   16bc8:	mov	r1, #52	; 0x34
   16bcc:	mov	r2, #1
   16bd0:	bl	14954 <fwrite@plt>
   16bd4:	ldr	r0, [r5, #212]	; 0xd4
   16bd8:	ldr	r0, [r0, #136]	; 0x88
   16bdc:	cmp	r0, #0
   16be0:	bne	16bfc <__flatcc_fb_gen_common_c_header@@Base+0x80>
   16be4:	ldr	r3, [r5, #204]	; 0xcc
   16be8:	movw	r0, #25813	; 0x64d5
   16bec:	movt	r0, #3
   16bf0:	mov	r1, #135	; 0x87
   16bf4:	mov	r2, #1
   16bf8:	bl	14954 <fwrite@plt>
   16bfc:	mov	r0, r5
   16c00:	bl	16c30 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   16c04:	mov	r0, r5
   16c08:	bl	16c58 <__flatcc_fb_gen_common_c_header@@Base+0xdc>
   16c0c:	mov	r0, r5
   16c10:	bl	1748c <__flatcc_fb_gen_common_c_header@@Base+0x910>
   16c14:	ldr	r0, [r5, #204]	; 0xcc
   16c18:	movw	r1, #25949	; 0x655d
   16c1c:	movt	r1, #3
   16c20:	mov	r2, r4
   16c24:	bl	149c0 <fprintf@plt>
   16c28:	mov	r0, #0
   16c2c:	pop	{r4, r5, fp, pc}
   16c30:	ldr	r1, [r0, #212]	; 0xd4
   16c34:	ldr	r1, [r1, #140]	; 0x8c
   16c38:	cmp	r1, #0
   16c3c:	bxeq	lr
   16c40:	ldr	r3, [r0, #204]	; 0xcc
   16c44:	movw	r0, #26154	; 0x662a
   16c48:	movt	r0, #3
   16c4c:	mov	r1, #36	; 0x24
   16c50:	mov	r2, #1
   16c54:	b	14954 <fwrite@plt>
   16c58:	push	{r4, sl, fp, lr}
   16c5c:	add	fp, sp, #8
   16c60:	sub	sp, sp, #232	; 0xe8
   16c64:	mov	r4, r0
   16c68:	ldr	r3, [r0, #204]	; 0xcc
   16c6c:	movw	r0, #26191	; 0x664f
   16c70:	movt	r0, #3
   16c74:	mov	r1, #41	; 0x29
   16c78:	mov	r2, #1
   16c7c:	bl	14954 <fwrite@plt>
   16c80:	movw	r1, #26233	; 0x6679
   16c84:	movt	r1, #3
   16c88:	mov	r0, r4
   16c8c:	bl	148e8 <strcmp@plt>
   16c90:	cmp	r0, #0
   16c94:	beq	16d1c <__flatcc_fb_gen_common_c_header@@Base+0x1a0>
   16c98:	ldr	r0, [r4, #204]	; 0xcc
   16c9c:	str	r4, [sp]
   16ca0:	str	r4, [sp, #4]
   16ca4:	str	r4, [sp, #8]
   16ca8:	movw	r1, #26246	; 0x6686
   16cac:	movt	r1, #3
   16cb0:	mov	r2, r4
   16cb4:	mov	r3, r4
   16cb8:	bl	149c0 <fprintf@plt>
   16cbc:	ldr	r0, [r4, #204]	; 0xcc
   16cc0:	str	r4, [sp]
   16cc4:	str	r4, [sp, #4]
   16cc8:	movw	r1, #26453	; 0x6755
   16ccc:	movt	r1, #3
   16cd0:	movw	r2, #26231	; 0x6677
   16cd4:	movt	r2, #3
   16cd8:	mov	r3, r4
   16cdc:	bl	149c0 <fprintf@plt>
   16ce0:	ldr	r0, [r4, #204]	; 0xcc
   16ce4:	str	r4, [sp]
   16ce8:	str	r4, [sp, #4]
   16cec:	str	r4, [sp, #8]
   16cf0:	movw	r1, #26796	; 0x68ac
   16cf4:	movt	r1, #3
   16cf8:	mov	r2, r4
   16cfc:	mov	r3, r4
   16d00:	bl	149c0 <fprintf@plt>
   16d04:	ldr	r0, [r4, #204]	; 0xcc
   16d08:	add	r2, r4, #102	; 0x66
   16d0c:	movw	r1, #27410	; 0x6b12
   16d10:	movt	r1, #3
   16d14:	mov	r3, r2
   16d18:	bl	149c0 <fprintf@plt>
   16d1c:	ldr	r0, [r4, #204]	; 0xcc
   16d20:	movw	r1, #27490	; 0x6b62
   16d24:	movt	r1, #3
   16d28:	mov	r2, r4
   16d2c:	mov	r3, r4
   16d30:	bl	149c0 <fprintf@plt>
   16d34:	ldr	r0, [r4, #204]	; 0xcc
   16d38:	str	r4, [sp]
   16d3c:	str	r4, [sp, #4]
   16d40:	str	r4, [sp, #8]
   16d44:	str	r4, [sp, #12]
   16d48:	str	r4, [sp, #16]
   16d4c:	movw	r1, #27631	; 0x6bef
   16d50:	movt	r1, #3
   16d54:	mov	r2, r4
   16d58:	mov	r3, r4
   16d5c:	bl	149c0 <fprintf@plt>
   16d60:	ldr	r0, [r4, #204]	; 0xcc
   16d64:	movw	r1, #28002	; 0x6d62
   16d68:	movt	r1, #3
   16d6c:	mov	r2, r4
   16d70:	mov	r3, r4
   16d74:	bl	149c0 <fprintf@plt>
   16d78:	ldr	r0, [r4, #204]	; 0xcc
   16d7c:	str	r4, [sp]
   16d80:	str	r4, [sp, #4]
   16d84:	movw	r1, #28087	; 0x6db7
   16d88:	movt	r1, #3
   16d8c:	mov	r2, r4
   16d90:	mov	r3, r4
   16d94:	bl	149c0 <fprintf@plt>
   16d98:	ldr	r2, [r4, #204]	; 0xcc
   16d9c:	ldr	r0, [r4, #212]	; 0xd4
   16da0:	ldr	r0, [r0, #32]
   16da4:	cmp	r0, #0
   16da8:	beq	16dc4 <__flatcc_fb_gen_common_c_header@@Base+0x248>
   16dac:	movw	r1, #28380	; 0x6edc
   16db0:	movt	r1, #3
   16db4:	mov	r0, r2
   16db8:	mov	r2, r4
   16dbc:	bl	149c0 <fprintf@plt>
   16dc0:	b	16dd0 <__flatcc_fb_gen_common_c_header@@Base+0x254>
   16dc4:	mov	r0, #10
   16dc8:	mov	r1, r2
   16dcc:	bl	14a20 <fputc@plt>
   16dd0:	ldr	r0, [r4, #204]	; 0xcc
   16dd4:	movw	r1, #28425	; 0x6f09
   16dd8:	movt	r1, #3
   16ddc:	mov	r2, r4
   16de0:	mov	r3, r4
   16de4:	bl	149c0 <fprintf@plt>
   16de8:	ldr	r0, [r4, #204]	; 0xcc
   16dec:	str	r4, [sp]
   16df0:	str	r4, [sp, #4]
   16df4:	str	r4, [sp, #8]
   16df8:	movw	r1, #28636	; 0x6fdc
   16dfc:	movt	r1, #3
   16e00:	mov	r2, r4
   16e04:	mov	r3, r4
   16e08:	bl	149c0 <fprintf@plt>
   16e0c:	ldr	r0, [r4, #204]	; 0xcc
   16e10:	str	r4, [sp]
   16e14:	str	r4, [sp, #4]
   16e18:	str	r4, [sp, #8]
   16e1c:	movw	r1, #29062	; 0x7186
   16e20:	movt	r1, #3
   16e24:	mov	r2, r4
   16e28:	mov	r3, r4
   16e2c:	bl	149c0 <fprintf@plt>
   16e30:	ldr	r0, [r4, #204]	; 0xcc
   16e34:	str	r4, [sp]
   16e38:	movw	r1, #29222	; 0x7226
   16e3c:	movt	r1, #3
   16e40:	mov	r2, r4
   16e44:	mov	r3, r4
   16e48:	bl	149c0 <fprintf@plt>
   16e4c:	ldr	r0, [r4, #204]	; 0xcc
   16e50:	str	r4, [sp]
   16e54:	movw	r1, #29440	; 0x7300
   16e58:	movt	r1, #3
   16e5c:	mov	r2, r4
   16e60:	mov	r3, r4
   16e64:	bl	149c0 <fprintf@plt>
   16e68:	ldr	r0, [r4, #204]	; 0xcc
   16e6c:	str	r4, [sp]
   16e70:	movw	r1, #29658	; 0x73da
   16e74:	movt	r1, #3
   16e78:	mov	r2, r4
   16e7c:	mov	r3, r4
   16e80:	bl	149c0 <fprintf@plt>
   16e84:	ldr	r0, [r4, #204]	; 0xcc
   16e88:	str	r4, [sp]
   16e8c:	str	r4, [sp, #4]
   16e90:	str	r4, [sp, #8]
   16e94:	movw	r1, #29874	; 0x74b2
   16e98:	movt	r1, #3
   16e9c:	mov	r2, r4
   16ea0:	mov	r3, r4
   16ea4:	bl	149c0 <fprintf@plt>
   16ea8:	ldr	r2, [r4, #204]	; 0xcc
   16eac:	ldr	r0, [r4, #212]	; 0xd4
   16eb0:	ldr	r0, [r0, #32]
   16eb4:	cmp	r0, #0
   16eb8:	beq	16ed4 <__flatcc_fb_gen_common_c_header@@Base+0x358>
   16ebc:	movw	r1, #30106	; 0x759a
   16ec0:	movt	r1, #3
   16ec4:	mov	r0, r2
   16ec8:	mov	r2, r4
   16ecc:	bl	149c0 <fprintf@plt>
   16ed0:	b	16ee0 <__flatcc_fb_gen_common_c_header@@Base+0x364>
   16ed4:	mov	r0, #10
   16ed8:	mov	r1, r2
   16edc:	bl	14a20 <fputc@plt>
   16ee0:	ldr	r0, [r4, #204]	; 0xcc
   16ee4:	str	r4, [sp]
   16ee8:	str	r4, [sp, #4]
   16eec:	movw	r1, #30148	; 0x75c4
   16ef0:	movt	r1, #3
   16ef4:	mov	r2, r4
   16ef8:	mov	r3, r4
   16efc:	bl	149c0 <fprintf@plt>
   16f00:	ldr	r0, [r4, #204]	; 0xcc
   16f04:	movw	r1, #30307	; 0x7663
   16f08:	movt	r1, #3
   16f0c:	mov	r2, r4
   16f10:	mov	r3, r4
   16f14:	bl	149c0 <fprintf@plt>
   16f18:	ldr	r0, [r4, #204]	; 0xcc
   16f1c:	str	r4, [sp]
   16f20:	movw	r1, #30373	; 0x76a5
   16f24:	movt	r1, #3
   16f28:	mov	r2, r4
   16f2c:	mov	r3, r4
   16f30:	bl	149c0 <fprintf@plt>
   16f34:	ldr	r0, [r4, #204]	; 0xcc
   16f38:	movw	r1, #30511	; 0x772f
   16f3c:	movt	r1, #3
   16f40:	mov	r2, r4
   16f44:	mov	r3, r4
   16f48:	bl	149c0 <fprintf@plt>
   16f4c:	ldr	r0, [r4, #204]	; 0xcc
   16f50:	str	r4, [sp]
   16f54:	str	r4, [sp, #4]
   16f58:	movw	r1, #30625	; 0x77a1
   16f5c:	movt	r1, #3
   16f60:	mov	r2, r4
   16f64:	mov	r3, r4
   16f68:	bl	149c0 <fprintf@plt>
   16f6c:	ldr	r0, [r4, #204]	; 0xcc
   16f70:	movw	r1, #30913	; 0x78c1
   16f74:	movt	r1, #3
   16f78:	mov	r2, r4
   16f7c:	mov	r3, r4
   16f80:	bl	149c0 <fprintf@plt>
   16f84:	ldr	r0, [r4, #204]	; 0xcc
   16f88:	movw	r1, #31032	; 0x7938
   16f8c:	movt	r1, #3
   16f90:	mov	r2, r4
   16f94:	mov	r3, r4
   16f98:	bl	149c0 <fprintf@plt>
   16f9c:	ldr	r0, [r4, #204]	; 0xcc
   16fa0:	str	r4, [sp]
   16fa4:	str	r4, [sp, #4]
   16fa8:	movw	r1, #31160	; 0x79b8
   16fac:	movt	r1, #3
   16fb0:	mov	r2, r4
   16fb4:	mov	r3, r4
   16fb8:	bl	149c0 <fprintf@plt>
   16fbc:	ldr	r0, [r4, #204]	; 0xcc
   16fc0:	str	r4, [sp, #32]
   16fc4:	str	r4, [sp, #36]	; 0x24
   16fc8:	str	r4, [sp]
   16fcc:	str	r4, [sp, #4]
   16fd0:	str	r4, [sp, #8]
   16fd4:	str	r4, [sp, #12]
   16fd8:	str	r4, [sp, #16]
   16fdc:	str	r4, [sp, #20]
   16fe0:	str	r4, [sp, #24]
   16fe4:	str	r4, [sp, #28]
   16fe8:	movw	r1, #31259	; 0x7a1b
   16fec:	movt	r1, #3
   16ff0:	mov	r2, r4
   16ff4:	mov	r3, r4
   16ff8:	bl	149c0 <fprintf@plt>
   16ffc:	ldr	r0, [r4, #204]	; 0xcc
   17000:	movw	r1, #31548	; 0x7b3c
   17004:	movt	r1, #3
   17008:	mov	r2, r4
   1700c:	bl	149c0 <fprintf@plt>
   17010:	ldr	r0, [r4, #204]	; 0xcc
   17014:	str	r4, [sp]
   17018:	str	r4, [sp, #4]
   1701c:	movw	r1, #31582	; 0x7b5e
   17020:	movt	r1, #3
   17024:	mov	r2, r4
   17028:	mov	r3, r4
   1702c:	bl	149c0 <fprintf@plt>
   17030:	ldr	r0, [r4, #204]	; 0xcc
   17034:	str	r4, [sp, #32]
   17038:	str	r4, [sp, #36]	; 0x24
   1703c:	str	r4, [sp, #40]	; 0x28
   17040:	str	r4, [sp, #44]	; 0x2c
   17044:	str	r4, [sp, #48]	; 0x30
   17048:	str	r4, [sp, #52]	; 0x34
   1704c:	str	r4, [sp, #56]	; 0x38
   17050:	str	r4, [sp]
   17054:	str	r4, [sp, #4]
   17058:	str	r4, [sp, #8]
   1705c:	str	r4, [sp, #12]
   17060:	str	r4, [sp, #16]
   17064:	str	r4, [sp, #20]
   17068:	str	r4, [sp, #24]
   1706c:	str	r4, [sp, #28]
   17070:	movw	r1, #31717	; 0x7be5
   17074:	movt	r1, #3
   17078:	mov	r2, r4
   1707c:	mov	r3, r4
   17080:	bl	149c0 <fprintf@plt>
   17084:	mov	r0, r4
   17088:	bl	19280 <__flatcc_fb_gen_c_reader@@Base+0x1dcc>
   1708c:	mov	r0, r4
   17090:	bl	1936c <__flatcc_fb_gen_c_reader@@Base+0x1eb8>
   17094:	mov	r0, r4
   17098:	bl	1949c <__flatcc_fb_gen_c_reader@@Base+0x1fe8>
   1709c:	ldr	r0, [r4, #212]	; 0xd4
   170a0:	ldr	r0, [r0, #136]	; 0x88
   170a4:	cmp	r0, #0
   170a8:	beq	170b8 <__flatcc_fb_gen_common_c_header@@Base+0x53c>
   170ac:	mov	r0, r4
   170b0:	bl	19b60 <__flatcc_gen_sort@@Base>
   170b4:	b	170d0 <__flatcc_fb_gen_common_c_header@@Base+0x554>
   170b8:	ldr	r3, [r4, #204]	; 0xcc
   170bc:	movw	r0, #32148	; 0x7d94
   170c0:	movt	r0, #3
   170c4:	mov	r1, #20
   170c8:	mov	r2, #1
   170cc:	bl	14954 <fwrite@plt>
   170d0:	ldr	r0, [r4, #204]	; 0xcc
   170d4:	str	r4, [sp]
   170d8:	str	r4, [sp, #4]
   170dc:	str	r4, [sp, #8]
   170e0:	movw	r1, #32169	; 0x7da9
   170e4:	movt	r1, #3
   170e8:	mov	r2, r4
   170ec:	mov	r3, r4
   170f0:	bl	149c0 <fprintf@plt>
   170f4:	ldr	r2, [r4, #204]	; 0xcc
   170f8:	ldr	r0, [r4, #212]	; 0xd4
   170fc:	ldr	r0, [r0, #136]	; 0x88
   17100:	cmp	r0, #0
   17104:	beq	17120 <__flatcc_fb_gen_common_c_header@@Base+0x5a4>
   17108:	movw	r1, #32394	; 0x7e8a
   1710c:	movt	r1, #3
   17110:	mov	r0, r2
   17114:	mov	r2, r4
   17118:	bl	149c0 <fprintf@plt>
   1711c:	b	1712c <__flatcc_fb_gen_common_c_header@@Base+0x5b0>
   17120:	mov	r0, #10
   17124:	mov	r1, r2
   17128:	bl	14a20 <fputc@plt>
   1712c:	ldr	r1, [r4, #204]	; 0xcc
   17130:	mov	r0, #10
   17134:	bl	14a20 <fputc@plt>
   17138:	ldr	r0, [r4, #204]	; 0xcc
   1713c:	str	r4, [sp]
   17140:	movw	r1, #32426	; 0x7eaa
   17144:	movt	r1, #3
   17148:	mov	r2, r4
   1714c:	mov	r3, r4
   17150:	bl	149c0 <fprintf@plt>
   17154:	ldr	r0, [r4, #204]	; 0xcc
   17158:	str	r4, [sp, #64]	; 0x40
   1715c:	str	r4, [sp, #68]	; 0x44
   17160:	str	r4, [sp, #72]	; 0x48
   17164:	str	r4, [sp, #76]	; 0x4c
   17168:	str	r4, [sp, #80]	; 0x50
   1716c:	str	r4, [sp, #84]	; 0x54
   17170:	str	r4, [sp, #88]	; 0x58
   17174:	str	r4, [sp, #92]	; 0x5c
   17178:	str	r4, [sp, #32]
   1717c:	str	r4, [sp, #36]	; 0x24
   17180:	str	r4, [sp, #40]	; 0x28
   17184:	str	r4, [sp, #44]	; 0x2c
   17188:	str	r4, [sp, #48]	; 0x30
   1718c:	str	r4, [sp, #52]	; 0x34
   17190:	str	r4, [sp, #56]	; 0x38
   17194:	str	r4, [sp, #60]	; 0x3c
   17198:	str	r4, [sp]
   1719c:	str	r4, [sp, #4]
   171a0:	str	r4, [sp, #8]
   171a4:	str	r4, [sp, #12]
   171a8:	str	r4, [sp, #16]
   171ac:	str	r4, [sp, #20]
   171b0:	str	r4, [sp, #24]
   171b4:	str	r4, [sp, #28]
   171b8:	movw	r1, #32554	; 0x7f2a
   171bc:	movt	r1, #3
   171c0:	mov	r2, r4
   171c4:	mov	r3, r4
   171c8:	bl	149c0 <fprintf@plt>
   171cc:	ldr	r0, [r4, #204]	; 0xcc
   171d0:	str	r4, [sp, #32]
   171d4:	str	r4, [sp, #36]	; 0x24
   171d8:	str	r4, [sp]
   171dc:	str	r4, [sp, #4]
   171e0:	str	r4, [sp, #8]
   171e4:	str	r4, [sp, #12]
   171e8:	str	r4, [sp, #16]
   171ec:	str	r4, [sp, #20]
   171f0:	str	r4, [sp, #24]
   171f4:	str	r4, [sp, #28]
   171f8:	movw	r1, #33085	; 0x813d
   171fc:	movt	r1, #3
   17200:	mov	r2, r4
   17204:	mov	r3, r4
   17208:	bl	149c0 <fprintf@plt>
   1720c:	ldr	r0, [r4, #204]	; 0xcc
   17210:	str	r4, [sp, #224]	; 0xe0
   17214:	str	r4, [sp, #228]	; 0xe4
   17218:	str	r4, [sp, #192]	; 0xc0
   1721c:	str	r4, [sp, #196]	; 0xc4
   17220:	str	r4, [sp, #200]	; 0xc8
   17224:	str	r4, [sp, #204]	; 0xcc
   17228:	str	r4, [sp, #208]	; 0xd0
   1722c:	str	r4, [sp, #212]	; 0xd4
   17230:	str	r4, [sp, #216]	; 0xd8
   17234:	str	r4, [sp, #220]	; 0xdc
   17238:	str	r4, [sp, #160]	; 0xa0
   1723c:	str	r4, [sp, #164]	; 0xa4
   17240:	str	r4, [sp, #168]	; 0xa8
   17244:	str	r4, [sp, #172]	; 0xac
   17248:	str	r4, [sp, #176]	; 0xb0
   1724c:	str	r4, [sp, #180]	; 0xb4
   17250:	str	r4, [sp, #184]	; 0xb8
   17254:	str	r4, [sp, #188]	; 0xbc
   17258:	str	r4, [sp, #128]	; 0x80
   1725c:	str	r4, [sp, #132]	; 0x84
   17260:	str	r4, [sp, #136]	; 0x88
   17264:	str	r4, [sp, #140]	; 0x8c
   17268:	str	r4, [sp, #144]	; 0x90
   1726c:	str	r4, [sp, #148]	; 0x94
   17270:	str	r4, [sp, #152]	; 0x98
   17274:	str	r4, [sp, #156]	; 0x9c
   17278:	str	r4, [sp, #96]	; 0x60
   1727c:	str	r4, [sp, #100]	; 0x64
   17280:	str	r4, [sp, #104]	; 0x68
   17284:	str	r4, [sp, #108]	; 0x6c
   17288:	str	r4, [sp, #112]	; 0x70
   1728c:	str	r4, [sp, #116]	; 0x74
   17290:	str	r4, [sp, #120]	; 0x78
   17294:	str	r4, [sp, #124]	; 0x7c
   17298:	str	r4, [sp, #64]	; 0x40
   1729c:	str	r4, [sp, #68]	; 0x44
   172a0:	str	r4, [sp, #72]	; 0x48
   172a4:	str	r4, [sp, #76]	; 0x4c
   172a8:	str	r4, [sp, #80]	; 0x50
   172ac:	str	r4, [sp, #84]	; 0x54
   172b0:	str	r4, [sp, #88]	; 0x58
   172b4:	str	r4, [sp, #92]	; 0x5c
   172b8:	str	r4, [sp, #32]
   172bc:	str	r4, [sp, #36]	; 0x24
   172c0:	str	r4, [sp, #40]	; 0x28
   172c4:	str	r4, [sp, #44]	; 0x2c
   172c8:	str	r4, [sp, #48]	; 0x30
   172cc:	str	r4, [sp, #52]	; 0x34
   172d0:	str	r4, [sp, #56]	; 0x38
   172d4:	str	r4, [sp, #60]	; 0x3c
   172d8:	str	r4, [sp]
   172dc:	str	r4, [sp, #4]
   172e0:	str	r4, [sp, #8]
   172e4:	str	r4, [sp, #12]
   172e8:	str	r4, [sp, #16]
   172ec:	str	r4, [sp, #20]
   172f0:	str	r4, [sp, #24]
   172f4:	str	r4, [sp, #28]
   172f8:	movw	r1, #33415	; 0x8287
   172fc:	movt	r1, #3
   17300:	mov	r2, r4
   17304:	mov	r3, r4
   17308:	bl	149c0 <fprintf@plt>
   1730c:	ldr	r0, [r4, #212]	; 0xd4
   17310:	ldr	r0, [r0, #136]	; 0x88
   17314:	cmp	r0, #0
   17318:	beq	17330 <__flatcc_fb_gen_common_c_header@@Base+0x7b4>
   1731c:	ldr	r0, [r4, #204]	; 0xcc
   17320:	movw	r1, #35136	; 0x8940
   17324:	movt	r1, #3
   17328:	mov	r2, r4
   1732c:	bl	149c0 <fprintf@plt>
   17330:	ldr	r0, [r4, #204]	; 0xcc
   17334:	movw	r1, #35162	; 0x895a
   17338:	movt	r1, #3
   1733c:	mov	r2, r4
   17340:	mov	r3, r4
   17344:	bl	149c0 <fprintf@plt>
   17348:	ldr	r2, [r4, #204]	; 0xcc
   1734c:	ldr	r0, [r4, #212]	; 0xd4
   17350:	ldr	r0, [r0, #32]
   17354:	cmp	r0, #0
   17358:	beq	17374 <__flatcc_fb_gen_common_c_header@@Base+0x7f8>
   1735c:	movw	r1, #28380	; 0x6edc
   17360:	movt	r1, #3
   17364:	mov	r0, r2
   17368:	mov	r2, r4
   1736c:	bl	149c0 <fprintf@plt>
   17370:	b	17380 <__flatcc_fb_gen_common_c_header@@Base+0x804>
   17374:	mov	r0, #10
   17378:	mov	r1, r2
   1737c:	bl	14a20 <fputc@plt>
   17380:	ldr	r0, [r4, #204]	; 0xcc
   17384:	movw	r1, #35315	; 0x89f3
   17388:	movt	r1, #3
   1738c:	mov	r2, r4
   17390:	bl	149c0 <fprintf@plt>
   17394:	ldr	r0, [r4, #204]	; 0xcc
   17398:	str	r4, [sp, #32]
   1739c:	str	r4, [sp, #36]	; 0x24
   173a0:	str	r4, [sp, #40]	; 0x28
   173a4:	str	r4, [sp, #44]	; 0x2c
   173a8:	str	r4, [sp]
   173ac:	str	r4, [sp, #4]
   173b0:	str	r4, [sp, #8]
   173b4:	str	r4, [sp, #12]
   173b8:	str	r4, [sp, #16]
   173bc:	str	r4, [sp, #20]
   173c0:	str	r4, [sp, #24]
   173c4:	str	r4, [sp, #28]
   173c8:	movw	r1, #35442	; 0x8a72
   173cc:	movt	r1, #3
   173d0:	mov	r2, r4
   173d4:	mov	r3, r4
   173d8:	bl	149c0 <fprintf@plt>
   173dc:	ldr	r0, [r4, #204]	; 0xcc
   173e0:	str	r4, [sp]
   173e4:	movw	r1, #36283	; 0x8dbb
   173e8:	movt	r1, #3
   173ec:	mov	r2, r4
   173f0:	mov	r3, r4
   173f4:	bl	149c0 <fprintf@plt>
   173f8:	ldr	r0, [r4, #204]	; 0xcc
   173fc:	str	r4, [sp]
   17400:	str	r4, [sp, #4]
   17404:	str	r4, [sp, #8]
   17408:	str	r4, [sp, #12]
   1740c:	movw	r1, #36466	; 0x8e72
   17410:	movt	r1, #3
   17414:	mov	r2, r4
   17418:	mov	r3, r4
   1741c:	bl	149c0 <fprintf@plt>
   17420:	ldr	r0, [r4, #204]	; 0xcc
   17424:	str	r4, [sp]
   17428:	str	r4, [sp, #4]
   1742c:	movw	r1, #36921	; 0x9039
   17430:	movt	r1, #3
   17434:	mov	r2, r4
   17438:	mov	r3, r4
   1743c:	bl	149c0 <fprintf@plt>
   17440:	ldr	r0, [r4, #204]	; 0xcc
   17444:	str	r4, [sp]
   17448:	str	r4, [sp, #4]
   1744c:	str	r4, [sp, #8]
   17450:	str	r4, [sp, #12]
   17454:	str	r4, [sp, #16]
   17458:	str	r4, [sp, #20]
   1745c:	str	r4, [sp, #24]
   17460:	str	r4, [sp, #28]
   17464:	movw	r1, #37557	; 0x92b5
   17468:	movt	r1, #3
   1746c:	mov	r2, r4
   17470:	mov	r3, r4
   17474:	bl	149c0 <fprintf@plt>
   17478:	ldr	r1, [r4, #204]	; 0xcc
   1747c:	mov	r0, #10
   17480:	sub	sp, fp, #8
   17484:	pop	{r4, sl, fp, lr}
   17488:	b	14a20 <fputc@plt>
   1748c:	ldr	r1, [r0, #212]	; 0xd4
   17490:	ldr	r1, [r1, #140]	; 0x8c
   17494:	cmp	r1, #0
   17498:	bxeq	lr
   1749c:	ldr	r3, [r0, #204]	; 0xcc
   174a0:	movw	r0, #50196	; 0xc414
   174a4:	movt	r0, #3
   174a8:	mov	r1, #36	; 0x24
   174ac:	mov	r2, #1
   174b0:	b	14954 <fwrite@plt>

000174b4 <__flatcc_fb_gen_c_reader@@Base>:
   174b4:	push	{r4, r5, fp, lr}
   174b8:	add	fp, sp, #8
   174bc:	sub	sp, sp, #8
   174c0:	mov	r4, r0
   174c4:	bl	176cc <__flatcc_fb_gen_c_reader@@Base+0x218>
   174c8:	ldr	r0, [r4, #208]	; 0xd0
   174cc:	ldr	r5, [r0, #44]	; 0x2c
   174d0:	cmp	r5, #0
   174d4:	beq	174f0 <__flatcc_fb_gen_c_reader@@Base+0x3c>
   174d8:	mov	r0, r4
   174dc:	mov	r1, r5
   174e0:	bl	17888 <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   174e4:	ldr	r5, [r5, #120]	; 0x78
   174e8:	cmp	r5, #0
   174ec:	bne	174d8 <__flatcc_fb_gen_c_reader@@Base+0x24>
   174f0:	ldr	r1, [r4, #204]	; 0xcc
   174f4:	mov	r0, #10
   174f8:	bl	14a20 <fputc@plt>
   174fc:	ldr	r0, [r4, #208]	; 0xd0
   17500:	ldr	r5, [r0, #40]	; 0x28
   17504:	cmp	r5, #0
   17508:	bne	1751c <__flatcc_fb_gen_c_reader@@Base+0x68>
   1750c:	b	17538 <__flatcc_fb_gen_c_reader@@Base+0x84>
   17510:	ldr	r5, [r5]
   17514:	cmp	r5, #0
   17518:	beq	17538 <__flatcc_fb_gen_c_reader@@Base+0x84>
   1751c:	ldrh	r0, [r5, #8]
   17520:	cmp	r0, #0
   17524:	bne	17510 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   17528:	mov	r0, r4
   1752c:	mov	r1, r5
   17530:	bl	17888 <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   17534:	b	17510 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   17538:	ldr	r0, [r4, #208]	; 0xd0
   1753c:	ldr	r5, [r0, #40]	; 0x28
   17540:	cmp	r5, #0
   17544:	bne	17558 <__flatcc_fb_gen_c_reader@@Base+0xa4>
   17548:	b	17574 <__flatcc_fb_gen_c_reader@@Base+0xc0>
   1754c:	ldr	r5, [r5]
   17550:	cmp	r5, #0
   17554:	beq	17574 <__flatcc_fb_gen_c_reader@@Base+0xc0>
   17558:	ldrh	r0, [r5, #8]
   1755c:	cmp	r0, #1
   17560:	bhi	1754c <__flatcc_fb_gen_c_reader@@Base+0x98>
   17564:	mov	r0, r4
   17568:	mov	r1, r5
   1756c:	bl	179dc <__flatcc_fb_gen_c_reader@@Base+0x528>
   17570:	b	1754c <__flatcc_fb_gen_c_reader@@Base+0x98>
   17574:	ldr	r1, [r4, #204]	; 0xcc
   17578:	mov	r0, #10
   1757c:	bl	14a20 <fputc@plt>
   17580:	ldr	r0, [r4, #208]	; 0xd0
   17584:	ldr	r5, [r0, #40]	; 0x28
   17588:	cmp	r5, #0
   1758c:	bne	175a0 <__flatcc_fb_gen_c_reader@@Base+0xec>
   17590:	b	175bc <__flatcc_fb_gen_c_reader@@Base+0x108>
   17594:	ldr	r5, [r5]
   17598:	cmp	r5, #0
   1759c:	beq	175bc <__flatcc_fb_gen_c_reader@@Base+0x108>
   175a0:	ldrh	r0, [r5, #8]
   175a4:	cmp	r0, #3
   175a8:	bne	17594 <__flatcc_fb_gen_c_reader@@Base+0xe0>
   175ac:	mov	r0, r4
   175b0:	mov	r1, r5
   175b4:	bl	17ac8 <__flatcc_fb_gen_c_reader@@Base+0x614>
   175b8:	b	17594 <__flatcc_fb_gen_c_reader@@Base+0xe0>
   175bc:	ldr	r1, [r4, #204]	; 0xcc
   175c0:	mov	r0, #10
   175c4:	bl	14a20 <fputc@plt>
   175c8:	ldr	r0, [r4, #208]	; 0xd0
   175cc:	ldr	r5, [r0, #44]	; 0x2c
   175d0:	cmp	r5, #0
   175d4:	beq	175f0 <__flatcc_fb_gen_c_reader@@Base+0x13c>
   175d8:	mov	r0, r4
   175dc:	mov	r1, r5
   175e0:	bl	17e9c <__flatcc_fb_gen_c_reader@@Base+0x9e8>
   175e4:	ldr	r5, [r5, #120]	; 0x78
   175e8:	cmp	r5, #0
   175ec:	bne	175d8 <__flatcc_fb_gen_c_reader@@Base+0x124>
   175f0:	ldr	r0, [r4, #208]	; 0xd0
   175f4:	ldr	r5, [r0, #40]	; 0x28
   175f8:	cmp	r5, #0
   175fc:	bne	17610 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   17600:	b	1765c <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   17604:	ldr	r5, [r5]
   17608:	cmp	r5, #0
   1760c:	beq	1765c <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   17610:	ldrh	r0, [r5, #8]
   17614:	sub	r1, r0, #1
   17618:	cmp	r1, #3
   1761c:	bcc	17604 <__flatcc_fb_gen_c_reader@@Base+0x150>
   17620:	cmp	r0, #0
   17624:	beq	1764c <__flatcc_fb_gen_c_reader@@Base+0x198>
   17628:	cmp	r0, #4
   1762c:	bne	1767c <__flatcc_fb_gen_c_reader@@Base+0x1c8>
   17630:	mov	r0, r4
   17634:	mov	r1, r5
   17638:	bl	17ac8 <__flatcc_fb_gen_c_reader@@Base+0x614>
   1763c:	ldr	r5, [r5]
   17640:	cmp	r5, #0
   17644:	bne	17610 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   17648:	b	1765c <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   1764c:	mov	r0, r4
   17650:	mov	r1, r5
   17654:	bl	187a4 <__flatcc_fb_gen_c_reader@@Base+0x12f0>
   17658:	b	17604 <__flatcc_fb_gen_c_reader@@Base+0x150>
   1765c:	ldr	r1, [r4, #204]	; 0xcc
   17660:	mov	r0, #10
   17664:	bl	14a20 <fputc@plt>
   17668:	mov	r0, r4
   1766c:	bl	19254 <__flatcc_fb_gen_c_reader@@Base+0x1da0>
   17670:	mov	r0, #0
   17674:	sub	sp, fp, #8
   17678:	pop	{r4, r5, fp, pc}
   1767c:	movw	r0, #8368	; 0x20b0
   17680:	movt	r0, #6
   17684:	ldr	r0, [r0]
   17688:	movw	r1, #26066	; 0x65d2
   1768c:	movt	r1, #3
   17690:	str	r1, [sp]
   17694:	movw	r1, #25975	; 0x6577
   17698:	movt	r1, #3
   1769c:	movw	r4, #25986	; 0x6582
   176a0:	movt	r4, #3
   176a4:	mov	r2, r4
   176a8:	movw	r3, #1672	; 0x688
   176ac:	bl	149c0 <fprintf@plt>
   176b0:	movw	r0, #29885	; 0x74bd
   176b4:	movt	r0, #4
   176b8:	movw	r3, #26110	; 0x65fe
   176bc:	movt	r3, #3
   176c0:	mov	r1, r4
   176c4:	movw	r2, #1672	; 0x688
   176c8:	bl	14a80 <__assert_fail@plt>
   176cc:	push	{r4, r5, r6, sl, fp, lr}
   176d0:	add	fp, sp, #16
   176d4:	sub	sp, sp, #8
   176d8:	mov	r4, r0
   176dc:	ldr	r0, [r0, #204]	; 0xcc
   176e0:	ldr	r1, [r4, #208]	; 0xd0
   176e4:	ldr	r2, [r4, #212]	; 0xd4
   176e8:	ldr	r6, [r2, #132]	; 0x84
   176ec:	ldr	r2, [r1, #164]	; 0xa4
   176f0:	movw	r1, #50233	; 0xc439
   176f4:	movt	r1, #3
   176f8:	mov	r3, r2
   176fc:	bl	149c0 <fprintf@plt>
   17700:	ldr	r3, [r4, #204]	; 0xcc
   17704:	movw	r0, #25678	; 0x644e
   17708:	movt	r0, #3
   1770c:	mov	r1, #81	; 0x51
   17710:	mov	r2, #1
   17714:	bl	14954 <fwrite@plt>
   17718:	add	r5, r4, #102	; 0x66
   1771c:	ldr	r3, [r4, #204]	; 0xcc
   17720:	cmp	r6, #0
   17724:	beq	17780 <__flatcc_fb_gen_c_reader@@Base+0x2cc>
   17728:	movw	r0, #50274	; 0xc462
   1772c:	movt	r0, #3
   17730:	movw	r1, #443	; 0x1bb
   17734:	mov	r2, #1
   17738:	bl	14954 <fwrite@plt>
   1773c:	ldr	r0, [r4, #204]	; 0xcc
   17740:	movw	r1, #50718	; 0xc61e
   17744:	movt	r1, #3
   17748:	mov	r2, r5
   1774c:	mov	r3, r4
   17750:	bl	149c0 <fprintf@plt>
   17754:	movw	r1, #54057	; 0xd329
   17758:	movt	r1, #4
   1775c:	movw	r2, #50782	; 0xc65e
   17760:	movt	r2, #3
   17764:	mov	r0, r4
   17768:	bl	16624 <__flatcc_fb_gen_c_includes@@Base>
   1776c:	ldr	r3, [r4, #204]	; 0xcc
   17770:	movw	r0, #50792	; 0xc668
   17774:	movt	r0, #3
   17778:	mov	r1, #39	; 0x27
   1777c:	b	177d8 <__flatcc_fb_gen_c_reader@@Base+0x324>
   17780:	movw	r1, #50718	; 0xc61e
   17784:	movt	r1, #3
   17788:	mov	r0, r3
   1778c:	mov	r2, r5
   17790:	mov	r3, r4
   17794:	bl	149c0 <fprintf@plt>
   17798:	movw	r1, #54057	; 0xd329
   1779c:	movt	r1, #4
   177a0:	movw	r2, #50782	; 0xc65e
   177a4:	movt	r2, #3
   177a8:	mov	r0, r4
   177ac:	bl	16624 <__flatcc_fb_gen_c_includes@@Base>
   177b0:	ldr	r3, [r4, #204]	; 0xcc
   177b4:	movw	r0, #50792	; 0xc668
   177b8:	movt	r0, #3
   177bc:	mov	r1, #39	; 0x27
   177c0:	mov	r2, #1
   177c4:	bl	14954 <fwrite@plt>
   177c8:	ldr	r3, [r4, #204]	; 0xcc
   177cc:	movw	r0, #50832	; 0xc690
   177d0:	movt	r0, #3
   177d4:	mov	r1, #58	; 0x3a
   177d8:	mov	r2, #1
   177dc:	bl	14954 <fwrite@plt>
   177e0:	mov	r0, r4
   177e4:	bl	16c30 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   177e8:	ldr	r0, [r4, #204]	; 0xcc
   177ec:	ldr	r1, [r4, #208]	; 0xd0
   177f0:	ldrh	r2, [r1, #16]
   177f4:	cmp	r2, #2
   177f8:	bne	17814 <__flatcc_fb_gen_c_reader@@Base+0x360>
   177fc:	ldrd	r2, [r1, #8]
   17800:	str	r3, [sp]
   17804:	str	r2, [sp, #4]
   17808:	movw	r1, #50891	; 0xc6cb
   1780c:	movt	r1, #3
   17810:	b	1781c <__flatcc_fb_gen_c_reader@@Base+0x368>
   17814:	movw	r1, #50940	; 0xc6fc
   17818:	movt	r1, #3
   1781c:	mov	r2, r4
   17820:	mov	r3, r4
   17824:	bl	149c0 <fprintf@plt>
   17828:	ldr	r0, [r4, #204]	; 0xcc
   1782c:	ldr	r1, [r4, #208]	; 0xd0
   17830:	ldrh	r2, [r1, #32]
   17834:	cmp	r2, #2
   17838:	bne	17854 <__flatcc_fb_gen_c_reader@@Base+0x3a0>
   1783c:	ldrd	r2, [r1, #24]
   17840:	str	r3, [sp]
   17844:	str	r2, [sp, #4]
   17848:	movw	r1, #50992	; 0xc730
   1784c:	movt	r1, #3
   17850:	b	17868 <__flatcc_fb_gen_c_reader@@Base+0x3b4>
   17854:	ldr	r1, [r4, #212]	; 0xd4
   17858:	ldr	r1, [r1, #104]	; 0x68
   1785c:	str	r1, [sp]
   17860:	movw	r1, #51040	; 0xc760
   17864:	movt	r1, #3
   17868:	mov	r2, r4
   1786c:	mov	r3, r4
   17870:	bl	149c0 <fprintf@plt>
   17874:	ldr	r1, [r4, #204]	; 0xcc
   17878:	mov	r0, #10
   1787c:	sub	sp, fp, #16
   17880:	pop	{r4, r5, r6, sl, fp, lr}
   17884:	b	14a20 <fputc@plt>
   17888:	push	{r4, r5, fp, lr}
   1788c:	add	fp, sp, #8
   17890:	sub	sp, sp, #224	; 0xe0
   17894:	mov	r5, r1
   17898:	mov	r4, r0
   1789c:	mov	r0, sp
   178a0:	mov	r1, #0
   178a4:	mov	r2, #220	; 0xdc
   178a8:	bl	149d8 <memset@plt>
   178ac:	ldrh	r0, [r5, #8]
   178b0:	cmp	r0, #2
   178b4:	bcs	179bc <__flatcc_fb_gen_c_reader@@Base+0x508>
   178b8:	mov	r1, sp
   178bc:	mov	r0, r5
   178c0:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   178c4:	ldrh	r0, [r5, #8]
   178c8:	cmp	r0, #1
   178cc:	bne	178f8 <__flatcc_fb_gen_c_reader@@Base+0x444>
   178d0:	ldr	r0, [r4, #204]	; 0xcc
   178d4:	ldrd	r2, [r5, #112]	; 0x70
   178d8:	orrs	r1, r2, r3
   178dc:	beq	17940 <__flatcc_fb_gen_c_reader@@Base+0x48c>
   178e0:	movw	r1, #51257	; 0xc839
   178e4:	movt	r1, #3
   178e8:	mov	r2, sp
   178ec:	mov	r3, r2
   178f0:	bl	149c0 <fprintf@plt>
   178f4:	b	17950 <__flatcc_fb_gen_c_reader@@Base+0x49c>
   178f8:	ldr	r0, [r4, #204]	; 0xcc
   178fc:	movw	r1, #51416	; 0xc8d8
   17900:	movt	r1, #3
   17904:	mov	r5, sp
   17908:	mov	r2, r5
   1790c:	mov	r3, r5
   17910:	bl	149c0 <fprintf@plt>
   17914:	ldr	r0, [r4, #204]	; 0xcc
   17918:	movw	r1, #51460	; 0xc904
   1791c:	movt	r1, #3
   17920:	mov	r2, r4
   17924:	mov	r3, r5
   17928:	bl	149c0 <fprintf@plt>
   1792c:	ldr	r0, [r4, #204]	; 0xcc
   17930:	movw	r1, #51498	; 0xc92a
   17934:	movt	r1, #3
   17938:	mov	r2, r4
   1793c:	b	179ac <__flatcc_fb_gen_c_reader@@Base+0x4f8>
   17940:	movw	r1, #51218	; 0xc812
   17944:	movt	r1, #3
   17948:	mov	r2, sp
   1794c:	bl	149c0 <fprintf@plt>
   17950:	ldr	r0, [r4, #204]	; 0xcc
   17954:	movw	r1, #51282	; 0xc852
   17958:	movt	r1, #3
   1795c:	mov	r5, sp
   17960:	mov	r2, r5
   17964:	mov	r3, r5
   17968:	bl	149c0 <fprintf@plt>
   1796c:	ldr	r0, [r4, #204]	; 0xcc
   17970:	movw	r1, #51316	; 0xc874
   17974:	movt	r1, #3
   17978:	mov	r2, r5
   1797c:	mov	r3, r5
   17980:	bl	149c0 <fprintf@plt>
   17984:	ldr	r0, [r4, #204]	; 0xcc
   17988:	movw	r1, #51352	; 0xc898
   1798c:	movt	r1, #3
   17990:	mov	r2, r5
   17994:	mov	r3, r5
   17998:	bl	149c0 <fprintf@plt>
   1799c:	ldr	r0, [r4, #204]	; 0xcc
   179a0:	movw	r1, #51383	; 0xc8b7
   179a4:	movt	r1, #3
   179a8:	mov	r2, r5
   179ac:	mov	r3, r5
   179b0:	bl	149c0 <fprintf@plt>
   179b4:	sub	sp, fp, #8
   179b8:	pop	{r4, r5, fp, pc}
   179bc:	movw	r0, #51093	; 0xc795
   179c0:	movt	r0, #3
   179c4:	movw	r1, #25986	; 0x6582
   179c8:	movt	r1, #3
   179cc:	movw	r3, #51159	; 0xc7d7
   179d0:	movt	r3, #3
   179d4:	movw	r2, #863	; 0x35f
   179d8:	bl	14a80 <__assert_fail@plt>
   179dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   179e0:	add	fp, sp, #24
   179e4:	sub	sp, sp, #248	; 0xf8
   179e8:	mov	r5, r1
   179ec:	mov	r4, r0
   179f0:	add	r6, sp, #8
   179f4:	mov	r7, #0
   179f8:	mov	r0, r6
   179fc:	mov	r1, #0
   17a00:	mov	r2, #220	; 0xdc
   17a04:	bl	149d8 <memset@plt>
   17a08:	mov	r0, r5
   17a0c:	mov	r1, r6
   17a10:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17a14:	ldr	r5, [r5, #88]	; 0x58
   17a18:	ldr	r0, [r4, #204]	; 0xcc
   17a1c:	str	r4, [sp]
   17a20:	movw	r1, #51538	; 0xc952
   17a24:	movt	r1, #3
   17a28:	mov	r2, r6
   17a2c:	mov	r3, r6
   17a30:	bl	149c0 <fprintf@plt>
   17a34:	ldr	r0, [r4, #204]	; 0xcc
   17a38:	str	r5, [sp]
   17a3c:	movw	r1, #51603	; 0xc993
   17a40:	movt	r1, #3
   17a44:	mov	r2, r6
   17a48:	mov	r3, r4
   17a4c:	bl	149c0 <fprintf@plt>
   17a50:	sub	r0, fp, #41	; 0x29
   17a54:	movw	r1, #30812	; 0x785c
   17a58:	add	r2, r0, r7, lsl #2
   17a5c:	strh	r1, [r2]
   17a60:	and	r3, r5, #15
   17a64:	cmp	r3, #9
   17a68:	mov	r6, #48	; 0x30
   17a6c:	movwhi	r6, #87	; 0x57
   17a70:	add	r3, r6, r3
   17a74:	strb	r3, [r2, #3]
   17a78:	ubfx	r3, r5, #4, #4
   17a7c:	cmp	r3, #9
   17a80:	mov	r6, #48	; 0x30
   17a84:	movwhi	r6, #87	; 0x57
   17a88:	add	r3, r6, r3
   17a8c:	strb	r3, [r2, #2]
   17a90:	add	r7, r7, #1
   17a94:	lsr	r5, r5, #8
   17a98:	cmp	r7, #4
   17a9c:	bne	17a58 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   17aa0:	mov	r0, #0
   17aa4:	strb	r0, [fp, #-25]	; 0xffffffe7
   17aa8:	ldr	r0, [r4, #204]	; 0xcc
   17aac:	movw	r1, #51644	; 0xc9bc
   17ab0:	movt	r1, #3
   17ab4:	add	r2, sp, #8
   17ab8:	sub	r3, fp, #41	; 0x29
   17abc:	bl	149c0 <fprintf@plt>
   17ac0:	sub	sp, fp, #24
   17ac4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17acc:	add	fp, sp, #28
   17ad0:	sub	sp, sp, #356	; 0x164
   17ad4:	mov	r5, r1
   17ad8:	mov	r4, r0
   17adc:	add	r8, sp, #24
   17ae0:	mov	r0, r8
   17ae4:	mov	r1, #0
   17ae8:	mov	r2, #220	; 0xdc
   17aec:	bl	149d8 <memset@plt>
   17af0:	ldrh	r0, [r5, #8]
   17af4:	sub	r0, r0, #3
   17af8:	uxth	r0, r0
   17afc:	cmp	r0, #2
   17b00:	bcs	17e5c <__flatcc_fb_gen_c_reader@@Base+0x9a8>
   17b04:	ldrh	r0, [r5, #48]	; 0x30
   17b08:	cmp	r0, #8
   17b0c:	bne	17e7c <__flatcc_fb_gen_c_reader@@Base+0x9c8>
   17b10:	ldr	r6, [r5, #40]	; 0x28
   17b14:	mov	r0, r6
   17b18:	mov	r1, r4
   17b1c:	bl	19640 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   17b20:	mov	r9, r0
   17b24:	mov	r0, r6
   17b28:	bl	19658 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   17b2c:	mov	r6, r0
   17b30:	ldr	r0, [r5, #112]	; 0x70
   17b34:	str	r0, [sp, #20]
   17b38:	ldrh	r7, [r5, #8]
   17b3c:	mov	r0, r5
   17b40:	mov	r1, r8
   17b44:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17b48:	ldr	r2, [r5, #32]
   17b4c:	movw	r1, #26232	; 0x6678
   17b50:	movt	r1, #3
   17b54:	mov	r0, r4
   17b58:	bl	196cc <__flatcc_fb_gen_c_reader@@Base+0x2218>
   17b5c:	movw	r0, #51824	; 0xca70
   17b60:	movt	r0, #3
   17b64:	movw	sl, #63645	; 0xf89d
   17b68:	movt	sl, #4
   17b6c:	cmp	r7, #3
   17b70:	movne	sl, r0
   17b74:	ldr	r0, [r4, #204]	; 0xcc
   17b78:	stm	sp, {r8, sl}
   17b7c:	movw	r1, #51835	; 0xca7b
   17b80:	movt	r1, #3
   17b84:	mov	r2, r9
   17b88:	mov	r3, r6
   17b8c:	bl	149c0 <fprintf@plt>
   17b90:	ldr	r0, [r4, #204]	; 0xcc
   17b94:	ldr	r1, [sp, #20]
   17b98:	lsl	r1, r1, #3
   17b9c:	stm	sp, {r8, sl}
   17ba0:	str	r1, [sp, #8]
   17ba4:	movw	r1, #51858	; 0xca92
   17ba8:	movt	r1, #3
   17bac:	mov	r2, r4
   17bb0:	mov	r6, r8
   17bb4:	mov	r3, r8
   17bb8:	bl	149c0 <fprintf@plt>
   17bbc:	str	r7, [sp, #20]
   17bc0:	cmp	r7, #3
   17bc4:	beq	17be4 <__flatcc_fb_gen_c_reader@@Base+0x730>
   17bc8:	ldr	r0, [r4, #204]	; 0xcc
   17bcc:	str	r6, [sp]
   17bd0:	movw	r1, #51900	; 0xcabc
   17bd4:	movt	r1, #3
   17bd8:	mov	r2, r4
   17bdc:	mov	r3, r4
   17be0:	bl	149c0 <fprintf@plt>
   17be4:	ldr	r7, [r5, #20]
   17be8:	cmp	r7, #0
   17bec:	beq	17c5c <__flatcc_fb_gen_c_reader@@Base+0x7a8>
   17bf0:	sub	r8, fp, #136	; 0x88
   17bf4:	movw	r9, #51926	; 0xcad6
   17bf8:	movt	r9, #3
   17bfc:	ldr	r2, [r7, #68]	; 0x44
   17c00:	mov	r0, r4
   17c04:	movw	r1, #26232	; 0x6678
   17c08:	movt	r1, #3
   17c0c:	bl	196cc <__flatcc_fb_gen_c_reader@@Base+0x2218>
   17c10:	mov	r0, r7
   17c14:	sub	r1, fp, #140	; 0x8c
   17c18:	sub	r2, fp, #36	; 0x24
   17c1c:	bl	1977c <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17c20:	ldr	r0, [r5, #40]	; 0x28
   17c24:	add	r1, r7, #48	; 0x30
   17c28:	mov	r2, r8
   17c2c:	bl	19784 <__flatcc_fb_gen_c_reader@@Base+0x22d0>
   17c30:	ldr	r0, [r4, #204]	; 0xcc
   17c34:	ldr	r3, [fp, #-140]	; 0xffffff74
   17c38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c3c:	stm	sp, {r1, r6, sl}
   17c40:	str	r8, [sp, #12]
   17c44:	mov	r1, r9
   17c48:	mov	r2, r6
   17c4c:	bl	149c0 <fprintf@plt>
   17c50:	ldr	r7, [r7]
   17c54:	cmp	r7, #0
   17c58:	bne	17bfc <__flatcc_fb_gen_c_reader@@Base+0x748>
   17c5c:	ldr	r1, [r4, #204]	; 0xcc
   17c60:	mov	r0, #10
   17c64:	bl	14a20 <fputc@plt>
   17c68:	ldr	r0, [r4, #204]	; 0xcc
   17c6c:	ldr	r1, [sp, #20]
   17c70:	cmp	r1, #3
   17c74:	beq	17ca0 <__flatcc_fb_gen_c_reader@@Base+0x7ec>
   17c78:	movw	r1, #51957	; 0xcaf5
   17c7c:	movt	r1, #3
   17c80:	add	r2, sp, #24
   17c84:	mov	r3, r2
   17c88:	bl	149c0 <fprintf@plt>
   17c8c:	ldr	r3, [r4, #204]	; 0xcc
   17c90:	movw	r0, #48678	; 0xbe26
   17c94:	movt	r0, #4
   17c98:	mov	r1, #20
   17c9c:	b	17cc4 <__flatcc_fb_gen_c_reader@@Base+0x810>
   17ca0:	movw	r1, #52021	; 0xcb35
   17ca4:	movt	r1, #3
   17ca8:	add	r2, sp, #24
   17cac:	mov	r3, r2
   17cb0:	bl	149c0 <fprintf@plt>
   17cb4:	ldr	r3, [r4, #204]	; 0xcc
   17cb8:	movw	r0, #52075	; 0xcb6b
   17cbc:	movt	r0, #3
   17cc0:	mov	r1, #21
   17cc4:	mov	r2, #1
   17cc8:	bl	14954 <fwrite@plt>
   17ccc:	mov	r8, r5
   17cd0:	ldr	r6, [r5, #20]
   17cd4:	cmp	r6, #0
   17cd8:	beq	17d3c <__flatcc_fb_gen_c_reader@@Base+0x888>
   17cdc:	sub	sl, fp, #140	; 0x8c
   17ce0:	sub	r5, fp, #36	; 0x24
   17ce4:	add	r7, sp, #24
   17ce8:	movw	r9, #52097	; 0xcb81
   17cec:	movt	r9, #3
   17cf0:	mov	r0, r6
   17cf4:	mov	r1, sl
   17cf8:	mov	r2, r5
   17cfc:	bl	1977c <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17d00:	ldr	r0, [r4, #204]	; 0xcc
   17d04:	ldrb	r2, [r6, #10]
   17d08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17d0c:	ldr	r3, [fp, #-140]	; 0xffffff74
   17d10:	tst	r2, #4
   17d14:	stm	sp, {r1, r3}
   17d18:	str	r1, [sp, #8]
   17d1c:	movweq	r1, #52149	; 0xcbb5
   17d20:	movteq	r1, #3
   17d24:	movne	r1, r9
   17d28:	mov	r2, r7
   17d2c:	bl	149c0 <fprintf@plt>
   17d30:	ldr	r6, [r6]
   17d34:	cmp	r6, #0
   17d38:	bne	17cf0 <__flatcc_fb_gen_c_reader@@Base+0x83c>
   17d3c:	ldr	r3, [r4, #204]	; 0xcc
   17d40:	movw	r0, #52183	; 0xcbd7
   17d44:	movt	r0, #3
   17d48:	mov	r1, #32
   17d4c:	mov	r2, #1
   17d50:	bl	14954 <fwrite@plt>
   17d54:	ldr	r1, [r4, #204]	; 0xcc
   17d58:	mov	r0, #10
   17d5c:	bl	14a20 <fputc@plt>
   17d60:	ldr	r0, [r4, #204]	; 0xcc
   17d64:	ldr	r1, [sp, #20]
   17d68:	cmp	r1, #3
   17d6c:	beq	17d98 <__flatcc_fb_gen_c_reader@@Base+0x8e4>
   17d70:	movw	r1, #52216	; 0xcbf8
   17d74:	movt	r1, #3
   17d78:	add	r2, sp, #24
   17d7c:	mov	r3, r2
   17d80:	bl	149c0 <fprintf@plt>
   17d84:	ldr	r3, [r4, #204]	; 0xcc
   17d88:	movw	r0, #48678	; 0xbe26
   17d8c:	movt	r0, #4
   17d90:	mov	r1, #20
   17d94:	b	17dbc <__flatcc_fb_gen_c_reader@@Base+0x908>
   17d98:	movw	r1, #52276	; 0xcc34
   17d9c:	movt	r1, #3
   17da0:	add	r2, sp, #24
   17da4:	mov	r3, r2
   17da8:	bl	149c0 <fprintf@plt>
   17dac:	ldr	r3, [r4, #204]	; 0xcc
   17db0:	movw	r0, #52075	; 0xcb6b
   17db4:	movt	r0, #3
   17db8:	mov	r1, #21
   17dbc:	mov	r2, #1
   17dc0:	bl	14954 <fwrite@plt>
   17dc4:	ldr	r5, [r8, #20]
   17dc8:	cmp	r5, #0
   17dcc:	beq	17e30 <__flatcc_fb_gen_c_reader@@Base+0x97c>
   17dd0:	sub	r9, fp, #140	; 0x8c
   17dd4:	sub	r7, fp, #36	; 0x24
   17dd8:	movw	r8, #52379	; 0xcc9b
   17ddc:	movt	r8, #3
   17de0:	add	r6, sp, #24
   17de4:	movw	sl, #52332	; 0xcc6c
   17de8:	movt	sl, #3
   17dec:	mov	r0, r5
   17df0:	mov	r1, r9
   17df4:	mov	r2, r7
   17df8:	bl	1977c <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17dfc:	ldr	r0, [r4, #204]	; 0xcc
   17e00:	ldrb	r2, [r5, #10]
   17e04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17e08:	ldr	r3, [fp, #-140]	; 0xffffff74
   17e0c:	tst	r2, #4
   17e10:	str	r1, [sp]
   17e14:	moveq	r1, r8
   17e18:	movne	r1, sl
   17e1c:	mov	r2, r6
   17e20:	bl	149c0 <fprintf@plt>
   17e24:	ldr	r5, [r5]
   17e28:	cmp	r5, #0
   17e2c:	bne	17dec <__flatcc_fb_gen_c_reader@@Base+0x938>
   17e30:	ldr	r3, [r4, #204]	; 0xcc
   17e34:	movw	r0, #52408	; 0xccb8
   17e38:	movt	r0, #3
   17e3c:	mov	r1, #31
   17e40:	mov	r2, #1
   17e44:	bl	14954 <fwrite@plt>
   17e48:	ldr	r1, [r4, #204]	; 0xcc
   17e4c:	mov	r0, #10
   17e50:	bl	14a20 <fputc@plt>
   17e54:	sub	sp, fp, #28
   17e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e5c:	movw	r0, #51677	; 0xc9dd
   17e60:	movt	r0, #3
   17e64:	movw	r1, #25986	; 0x6582
   17e68:	movt	r1, #3
   17e6c:	movw	r3, #51741	; 0xca1d
   17e70:	movt	r3, #3
   17e74:	movw	r2, #1204	; 0x4b4
   17e78:	bl	14a80 <__assert_fail@plt>
   17e7c:	movw	r0, #51792	; 0xca50
   17e80:	movt	r0, #3
   17e84:	movw	r1, #25986	; 0x6582
   17e88:	movt	r1, #3
   17e8c:	movw	r3, #51741	; 0xca1d
   17e90:	movt	r3, #3
   17e94:	movw	r2, #1205	; 0x4b5
   17e98:	bl	14a80 <__assert_fail@plt>
   17e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ea0:	add	fp, sp, #28
   17ea4:	sub	sp, sp, #516	; 0x204
   17ea8:	mov	r5, r1
   17eac:	mov	r9, r0
   17eb0:	ldr	r0, [r0, #212]	; 0xd4
   17eb4:	ldr	r0, [r0, #132]	; 0x84
   17eb8:	str	r0, [sp, #52]	; 0x34
   17ebc:	sub	r0, fp, #264	; 0x108
   17ec0:	mov	r1, #0
   17ec4:	mov	r2, #220	; 0xdc
   17ec8:	bl	149d8 <memset@plt>
   17ecc:	add	sl, sp, #56	; 0x38
   17ed0:	mov	r0, sl
   17ed4:	mov	r1, #0
   17ed8:	mov	r2, #220	; 0xdc
   17edc:	bl	149d8 <memset@plt>
   17ee0:	ldrh	r0, [r5, #8]
   17ee4:	cmp	r0, #1
   17ee8:	bne	18744 <__flatcc_fb_gen_c_reader@@Base+0x1290>
   17eec:	mov	r8, r5
   17ef0:	ldrh	r0, [r8, #104]!	; 0x68
   17ef4:	cmp	r0, #0
   17ef8:	bne	17f08 <__flatcc_fb_gen_c_reader@@Base+0xa54>
   17efc:	ldrd	r0, [r5, #96]	; 0x60
   17f00:	orrs	r0, r0, r1
   17f04:	bne	18764 <__flatcc_fb_gen_c_reader@@Base+0x12b0>
   17f08:	mov	r7, r5
   17f0c:	ldr	r0, [r7, #112]!	; 0x70
   17f10:	ldr	r1, [r7, #4]
   17f14:	orrs	r0, r0, r1
   17f18:	bne	17f28 <__flatcc_fb_gen_c_reader@@Base+0xa74>
   17f1c:	ldrd	r0, [r5, #96]	; 0x60
   17f20:	orrs	r0, r0, r1
   17f24:	bne	18784 <__flatcc_fb_gen_c_reader@@Base+0x12d0>
   17f28:	sub	r6, fp, #264	; 0x108
   17f2c:	mov	r0, r5
   17f30:	mov	r1, r6
   17f34:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17f38:	ldr	r2, [r5, #32]
   17f3c:	movw	r1, #26232	; 0x6678
   17f40:	movt	r1, #3
   17f44:	mov	r0, r9
   17f48:	bl	196cc <__flatcc_fb_gen_c_reader@@Base+0x2218>
   17f4c:	ldrd	r0, [r7]
   17f50:	orrs	r0, r0, r1
   17f54:	str	r9, [sp, #44]	; 0x2c
   17f58:	beq	181d0 <__flatcc_fb_gen_c_reader@@Base+0xd1c>
   17f5c:	str	r7, [sp, #24]
   17f60:	ldr	r0, [sp, #52]	; 0x34
   17f64:	cmp	r0, #0
   17f68:	beq	17f84 <__flatcc_fb_gen_c_reader@@Base+0xad0>
   17f6c:	ldr	r3, [r9, #204]	; 0xcc
   17f70:	movw	r0, #53333	; 0xd055
   17f74:	movt	r0, #3
   17f78:	mov	r1, #16
   17f7c:	mov	r2, #1
   17f80:	bl	14954 <fwrite@plt>
   17f84:	ldr	r0, [r9, #204]	; 0xcc
   17f88:	movw	r1, #53350	; 0xd066
   17f8c:	movt	r1, #3
   17f90:	sub	r2, fp, #264	; 0x108
   17f94:	bl	149c0 <fprintf@plt>
   17f98:	str	r5, [sp, #28]
   17f9c:	ldr	r7, [r5, #20]
   17fa0:	cmp	r7, #0
   17fa4:	beq	18230 <__flatcc_fb_gen_c_reader@@Base+0xd7c>
   17fa8:	mov	r5, #0
   17fac:	add	r6, sp, #56	; 0x38
   17fb0:	mov	sl, #0
   17fb4:	mov	r4, #0
   17fb8:	str	r8, [sp, #36]	; 0x24
   17fbc:	ldr	r2, [r7, #68]	; 0x44
   17fc0:	mov	r0, r9
   17fc4:	movw	r1, #50190	; 0xc40e
   17fc8:	movt	r1, #4
   17fcc:	bl	196cc <__flatcc_fb_gen_c_reader@@Base+0x2218>
   17fd0:	mov	r0, r7
   17fd4:	sub	r1, fp, #36	; 0x24
   17fd8:	sub	r2, fp, #40	; 0x28
   17fdc:	bl	1977c <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17fe0:	cmp	r5, #0
   17fe4:	mov	r0, r8
   17fe8:	addne	r0, r7, #74	; 0x4a
   17fec:	ldrh	r0, [r0]
   17ff0:	str	r0, [sp, #48]	; 0x30
   17ff4:	ldr	r0, [sp, #52]	; 0x34
   17ff8:	cmp	r0, #0
   17ffc:	ldrne	r0, [r7, #80]	; 0x50
   18000:	subsne	r3, r0, r5
   18004:	beq	18020 <__flatcc_fb_gen_c_reader@@Base+0xb6c>
   18008:	ldr	r0, [r9, #204]	; 0xcc
   1800c:	movw	r1, #53363	; 0xd073
   18010:	movt	r1, #3
   18014:	mov	r2, r4
   18018:	bl	149c0 <fprintf@plt>
   1801c:	add	r4, r4, #1
   18020:	ldrb	r0, [r7, #72]	; 0x48
   18024:	tst	r0, #4
   18028:	bne	18090 <__flatcc_fb_gen_c_reader@@Base+0xbdc>
   1802c:	str	sl, [sp, #40]	; 0x28
   18030:	ldrh	r0, [r7, #24]
   18034:	cmp	r0, #14
   18038:	beq	180cc <__flatcc_fb_gen_c_reader@@Base+0xc18>
   1803c:	mov	sl, r4
   18040:	ldr	r4, [sp, #52]	; 0x34
   18044:	cmp	r0, #8
   18048:	bne	186b8 <__flatcc_fb_gen_c_reader@@Base+0x1204>
   1804c:	ldr	r9, [r7, #16]
   18050:	mov	r0, r9
   18054:	ldr	r5, [sp, #44]	; 0x2c
   18058:	mov	r1, r5
   1805c:	bl	19640 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   18060:	str	r0, [sp, #32]
   18064:	mov	r0, r9
   18068:	mov	r9, r5
   1806c:	bl	19658 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   18070:	mov	r3, r0
   18074:	ldr	r0, [r5, #204]	; 0xcc
   18078:	cmp	r4, #0
   1807c:	beq	18154 <__flatcc_fb_gen_c_reader@@Base+0xca0>
   18080:	movw	r1, #53507	; 0xd103
   18084:	movt	r1, #3
   18088:	ldr	r2, [sp, #32]
   1808c:	b	18168 <__flatcc_fb_gen_c_reader@@Base+0xcb4>
   18090:	mov	r8, r4
   18094:	ldr	r0, [r9, #204]	; 0xcc
   18098:	mov	r5, r7
   1809c:	ldr	r3, [r5, #88]!	; 0x58
   180a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   180a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   180a8:	ldr	r4, [sp, #52]	; 0x34
   180ac:	cmp	r4, #0
   180b0:	beq	18124 <__flatcc_fb_gen_c_reader@@Base+0xc70>
   180b4:	str	r2, [sp]
   180b8:	str	r1, [sp, #4]
   180bc:	movw	r1, #53393	; 0xd091
   180c0:	movt	r1, #3
   180c4:	mov	r2, sl
   180c8:	b	18140 <__flatcc_fb_gen_c_reader@@Base+0xc8c>
   180cc:	ldr	r0, [r7, #16]
   180d0:	ldrh	r5, [r0, #8]
   180d4:	orr	r1, r5, #2
   180d8:	cmp	r1, #3
   180dc:	bne	18724 <__flatcc_fb_gen_c_reader@@Base+0x1270>
   180e0:	mov	sl, r8
   180e4:	mov	r1, r6
   180e8:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   180ec:	cmp	r5, #1
   180f0:	movw	r3, #53630	; 0xd17e
   180f4:	movt	r3, #3
   180f8:	movw	r0, #26232	; 0x6678
   180fc:	movt	r0, #3
   18100:	moveq	r3, r0
   18104:	ldr	r0, [r9, #204]	; 0xcc
   18108:	ldr	r1, [sp, #52]	; 0x34
   1810c:	cmp	r1, #0
   18110:	beq	18174 <__flatcc_fb_gen_c_reader@@Base+0xcc0>
   18114:	movw	r1, #53636	; 0xd184
   18118:	movt	r1, #3
   1811c:	mov	r2, r6
   18120:	b	18188 <__flatcc_fb_gen_c_reader@@Base+0xcd4>
   18124:	str	r3, [sp]
   18128:	str	r2, [sp, #4]
   1812c:	str	r1, [sp, #8]
   18130:	movw	r1, #53444	; 0xd0c4
   18134:	movt	r1, #3
   18138:	ldr	r2, [sp, #48]	; 0x30
   1813c:	mov	r3, sl
   18140:	bl	149c0 <fprintf@plt>
   18144:	add	sl, sl, #1
   18148:	mov	r4, r8
   1814c:	ldr	r8, [sp, #36]	; 0x24
   18150:	b	181b0 <__flatcc_fb_gen_c_reader@@Base+0xcfc>
   18154:	str	r3, [sp]
   18158:	movw	r1, #53517	; 0xd10d
   1815c:	movt	r1, #3
   18160:	ldr	r2, [sp, #48]	; 0x30
   18164:	ldr	r3, [sp, #32]
   18168:	bl	149c0 <fprintf@plt>
   1816c:	mov	r4, sl
   18170:	b	18190 <__flatcc_fb_gen_c_reader@@Base+0xcdc>
   18174:	str	r3, [sp]
   18178:	movw	r1, #53648	; 0xd190
   1817c:	movt	r1, #3
   18180:	ldr	r2, [sp, #48]	; 0x30
   18184:	mov	r3, r6
   18188:	bl	149c0 <fprintf@plt>
   1818c:	mov	r8, sl
   18190:	ldr	r0, [r9, #204]	; 0xcc
   18194:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18198:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1819c:	movw	r1, #53711	; 0xd1cf
   181a0:	movt	r1, #3
   181a4:	bl	149c0 <fprintf@plt>
   181a8:	add	r5, r7, #88	; 0x58
   181ac:	ldr	sl, [sp, #40]	; 0x28
   181b0:	ldr	r0, [r7]
   181b4:	ldr	r1, [r7, #80]	; 0x50
   181b8:	ldr	r2, [r5]
   181bc:	add	r5, r2, r1
   181c0:	cmp	r0, #0
   181c4:	mov	r7, r0
   181c8:	bne	17fbc <__flatcc_fb_gen_c_reader@@Base+0xb08>
   181cc:	b	18238 <__flatcc_fb_gen_c_reader@@Base+0xd84>
   181d0:	ldr	r0, [r9, #204]	; 0xcc
   181d4:	movw	r1, #53009	; 0xcf11
   181d8:	movt	r1, #3
   181dc:	mov	r2, r6
   181e0:	bl	149c0 <fprintf@plt>
   181e4:	ldr	r0, [r9, #204]	; 0xcc
   181e8:	str	r6, [sp]
   181ec:	movw	r1, #53106	; 0xcf72
   181f0:	movt	r1, #3
   181f4:	mov	r2, r6
   181f8:	mov	r3, r6
   181fc:	bl	149c0 <fprintf@plt>
   18200:	ldr	r0, [r9, #204]	; 0xcc
   18204:	str	r6, [sp]
   18208:	movw	r1, #53190	; 0xcfc6
   1820c:	movt	r1, #3
   18210:	mov	r2, r6
   18214:	mov	r3, r6
   18218:	bl	149c0 <fprintf@plt>
   1821c:	ldr	r0, [r9, #204]	; 0xcc
   18220:	str	r6, [sp]
   18224:	movw	r1, #53256	; 0xd008
   18228:	movt	r1, #3
   1822c:	b	18330 <__flatcc_fb_gen_c_reader@@Base+0xe7c>
   18230:	mov	r4, #0
   18234:	mov	r5, #0
   18238:	ldr	r0, [sp, #52]	; 0x34
   1823c:	cmp	r0, #0
   18240:	beq	182a4 <__flatcc_fb_gen_c_reader@@Base+0xdf0>
   18244:	ldr	r7, [sp, #24]
   18248:	ldr	r0, [r7]
   1824c:	subs	r3, r0, r5
   18250:	add	sl, sp, #56	; 0x38
   18254:	beq	1826c <__flatcc_fb_gen_c_reader@@Base+0xdb8>
   18258:	ldr	r0, [r9, #204]	; 0xcc
   1825c:	movw	r1, #53363	; 0xd073
   18260:	movt	r1, #3
   18264:	mov	r2, r4
   18268:	bl	149c0 <fprintf@plt>
   1826c:	ldr	r3, [r9, #204]	; 0xcc
   18270:	movw	r0, #30321	; 0x7671
   18274:	movt	r0, #4
   18278:	mov	r1, #3
   1827c:	mov	r2, #1
   18280:	bl	14954 <fwrite@plt>
   18284:	ldr	r3, [r9, #204]	; 0xcc
   18288:	movw	r0, #53718	; 0xd1d6
   1828c:	movt	r0, #3
   18290:	mov	r1, #15
   18294:	mov	r2, #1
   18298:	bl	14954 <fwrite@plt>
   1829c:	ldr	r5, [sp, #28]
   182a0:	b	182c8 <__flatcc_fb_gen_c_reader@@Base+0xe14>
   182a4:	ldr	r3, [r9, #204]	; 0xcc
   182a8:	movw	r0, #30321	; 0x7671
   182ac:	movt	r0, #4
   182b0:	mov	r1, #3
   182b4:	mov	r2, #1
   182b8:	bl	14954 <fwrite@plt>
   182bc:	add	sl, sp, #56	; 0x38
   182c0:	ldr	r5, [sp, #28]
   182c4:	ldr	r7, [sp, #24]
   182c8:	ldr	r0, [r9, #204]	; 0xcc
   182cc:	ldrd	r2, [r7]
   182d0:	stm	sp, {r2, r3}
   182d4:	movw	r1, #53734	; 0xd1e6
   182d8:	movt	r1, #3
   182dc:	sub	r6, fp, #264	; 0x108
   182e0:	mov	r2, r6
   182e4:	bl	149c0 <fprintf@plt>
   182e8:	ldr	r0, [r9, #204]	; 0xcc
   182ec:	str	r6, [sp]
   182f0:	movw	r1, #53797	; 0xd225
   182f4:	movt	r1, #3
   182f8:	mov	r2, r6
   182fc:	mov	r3, r6
   18300:	bl	149c0 <fprintf@plt>
   18304:	ldr	r0, [r9, #204]	; 0xcc
   18308:	str	r6, [sp]
   1830c:	movw	r1, #53885	; 0xd27d
   18310:	movt	r1, #3
   18314:	mov	r2, r6
   18318:	mov	r3, r6
   1831c:	bl	149c0 <fprintf@plt>
   18320:	ldr	r0, [r9, #204]	; 0xcc
   18324:	stm	sp, {r6, r9}
   18328:	movw	r1, #53955	; 0xd2c3
   1832c:	movt	r1, #3
   18330:	mov	r2, r6
   18334:	mov	r3, r6
   18338:	bl	149c0 <fprintf@plt>
   1833c:	ldr	r0, [r9, #204]	; 0xcc
   18340:	ldrd	r2, [r7]
   18344:	stm	sp, {r2, r3}
   18348:	movw	r1, #54042	; 0xd31a
   1834c:	movt	r1, #3
   18350:	mov	r4, r9
   18354:	sub	r9, fp, #264	; 0x108
   18358:	mov	r2, r9
   1835c:	bl	149c0 <fprintf@plt>
   18360:	ldr	r0, [r4, #204]	; 0xcc
   18364:	str	r4, [sp]
   18368:	movw	r1, #54092	; 0xd34c
   1836c:	movt	r1, #3
   18370:	mov	r2, r9
   18374:	mov	r3, r9
   18378:	bl	149c0 <fprintf@plt>
   1837c:	ldr	r0, [r4, #204]	; 0xcc
   18380:	movw	r1, #54156	; 0xd38c
   18384:	movt	r1, #3
   18388:	mov	r2, r4
   1838c:	mov	r3, r9
   18390:	bl	149c0 <fprintf@plt>
   18394:	ldr	r1, [r4, #204]	; 0xcc
   18398:	mov	r0, #10
   1839c:	bl	14a20 <fputc@plt>
   183a0:	ldr	r6, [r5, #20]
   183a4:	cmp	r6, #0
   183a8:	beq	186a0 <__flatcc_fb_gen_c_reader@@Base+0x11ec>
   183ac:	mov	r0, #0
   183b0:	str	r0, [sp, #48]	; 0x30
   183b4:	sub	r7, fp, #36	; 0x24
   183b8:	sub	r4, fp, #40	; 0x28
   183bc:	mov	r0, #0
   183c0:	str	r0, [sp, #52]	; 0x34
   183c4:	ldrb	r0, [r6, #72]	; 0x48
   183c8:	tst	r0, #4
   183cc:	bne	18694 <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   183d0:	mov	r0, r6
   183d4:	mov	r1, r7
   183d8:	mov	r2, r4
   183dc:	bl	1977c <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   183e0:	ldrh	r0, [r6, #24]
   183e4:	cmp	r0, #14
   183e8:	beq	18468 <__flatcc_fb_gen_c_reader@@Base+0xfb4>
   183ec:	cmp	r0, #8
   183f0:	bne	18650 <__flatcc_fb_gen_c_reader@@Base+0x119c>
   183f4:	ldr	r8, [r6, #16]
   183f8:	mov	r0, r8
   183fc:	ldr	r4, [sp, #44]	; 0x2c
   18400:	mov	r1, r4
   18404:	bl	19640 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   18408:	mov	r7, r9
   1840c:	mov	r9, sl
   18410:	mov	sl, r0
   18414:	mov	r0, r8
   18418:	bl	19658 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   1841c:	mov	r5, r0
   18420:	ldr	r0, [r6, #16]
   18424:	bl	19934 <__flatcc_fb_gen_c_reader@@Base+0x2480>
   18428:	ldr	r1, [r4, #204]	; 0xcc
   1842c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18430:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18434:	stm	sp, {r2, r3, r4}
   18438:	str	r0, [sp, #12]
   1843c:	str	sl, [sp, #16]
   18440:	mov	sl, r9
   18444:	mov	r9, r7
   18448:	sub	r7, fp, #36	; 0x24
   1844c:	str	r5, [sp, #20]
   18450:	mov	r0, r1
   18454:	movw	r1, #54180	; 0xd3a4
   18458:	movt	r1, #3
   1845c:	mov	r2, r4
   18460:	sub	r4, fp, #40	; 0x28
   18464:	b	18648 <__flatcc_fb_gen_c_reader@@Base+0x1194>
   18468:	ldr	r0, [r6, #16]
   1846c:	mov	r1, sl
   18470:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18474:	ldr	r0, [r6, #16]
   18478:	ldrh	r1, [r0, #8]
   1847c:	cmp	r1, #1
   18480:	beq	1862c <__flatcc_fb_gen_c_reader@@Base+0x1178>
   18484:	cmp	r1, #3
   18488:	bne	18650 <__flatcc_fb_gen_c_reader@@Base+0x119c>
   1848c:	ldr	r0, [r0, #40]	; 0x28
   18490:	bl	19934 <__flatcc_fb_gen_c_reader@@Base+0x2480>
   18494:	ldr	r4, [sp, #44]	; 0x2c
   18498:	ldr	r0, [r4, #204]	; 0xcc
   1849c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   184a0:	ldr	r8, [fp, #-40]	; 0xffffffd8
   184a4:	stm	sp, {r5, r8, sl}
   184a8:	str	sl, [sp, #12]
   184ac:	movw	r1, #54234	; 0xd3da
   184b0:	movt	r1, #3
   184b4:	mov	r2, r4
   184b8:	mov	r3, r9
   184bc:	bl	149c0 <fprintf@plt>
   184c0:	ldr	r0, [r4, #212]	; 0xd4
   184c4:	ldr	r0, [r0, #32]
   184c8:	cmp	r0, #0
   184cc:	bne	184f8 <__flatcc_fb_gen_c_reader@@Base+0x1044>
   184d0:	ldrb	r0, [r6, #72]	; 0x48
   184d4:	tst	r0, #128	; 0x80
   184d8:	beq	184f8 <__flatcc_fb_gen_c_reader@@Base+0x1044>
   184dc:	ldr	r2, [sp, #44]	; 0x2c
   184e0:	ldr	r0, [r2, #204]	; 0xcc
   184e4:	stm	sp, {r5, r8, sl}
   184e8:	movw	r1, #54291	; 0xd413
   184ec:	movt	r1, #3
   184f0:	mov	r3, r9
   184f4:	bl	149c0 <fprintf@plt>
   184f8:	ldrb	r0, [r6, #72]	; 0x48
   184fc:	tst	r0, #128	; 0x80
   18500:	sub	r4, fp, #40	; 0x28
   18504:	beq	18650 <__flatcc_fb_gen_c_reader@@Base+0x119c>
   18508:	ldr	r0, [sp, #48]	; 0x30
   1850c:	cmp	r0, #0
   18510:	ldr	r4, [sp, #44]	; 0x2c
   18514:	beq	18530 <__flatcc_fb_gen_c_reader@@Base+0x107c>
   18518:	ldr	r3, [r4, #204]	; 0xcc
   1851c:	movw	r0, #54345	; 0xd449
   18520:	movt	r0, #3
   18524:	mov	r1, #66	; 0x42
   18528:	mov	r2, #1
   1852c:	bl	14954 <fwrite@plt>
   18530:	ldr	r3, [r4, #204]	; 0xcc
   18534:	movw	r0, #54412	; 0xd48c
   18538:	movt	r0, #3
   1853c:	mov	r1, #61	; 0x3d
   18540:	mov	r2, #1
   18544:	bl	14954 <fwrite@plt>
   18548:	ldr	r0, [r4, #204]	; 0xcc
   1854c:	stm	sp, {r5, r8, sl}
   18550:	movw	r1, #54474	; 0xd4ca
   18554:	movt	r1, #3
   18558:	mov	r2, r4
   1855c:	mov	r3, r9
   18560:	bl	149c0 <fprintf@plt>
   18564:	ldr	r0, [r4, #212]	; 0xd4
   18568:	ldr	r0, [r0, #136]	; 0x88
   1856c:	cmp	r0, #0
   18570:	beq	18594 <__flatcc_fb_gen_c_reader@@Base+0x10e0>
   18574:	ldr	r0, [r4, #204]	; 0xcc
   18578:	stm	sp, {r5, r8, sl}
   1857c:	str	r9, [sp, #12]
   18580:	movw	r1, #54528	; 0xd500
   18584:	movt	r1, #3
   18588:	mov	r2, r4
   1858c:	mov	r3, r9
   18590:	bl	149c0 <fprintf@plt>
   18594:	mov	r0, #1
   18598:	str	r0, [sp, #52]	; 0x34
   1859c:	ldr	r0, [sp, #48]	; 0x30
   185a0:	cmp	r0, #0
   185a4:	sub	r4, fp, #40	; 0x28
   185a8:	bne	18694 <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   185ac:	ldr	r4, [sp, #44]	; 0x2c
   185b0:	ldr	r0, [r4, #204]	; 0xcc
   185b4:	stm	sp, {r5, r8, sl}
   185b8:	movw	r1, #54588	; 0xd53c
   185bc:	movt	r1, #3
   185c0:	mov	r2, r4
   185c4:	mov	r3, r9
   185c8:	bl	149c0 <fprintf@plt>
   185cc:	ldr	r0, [r4, #204]	; 0xcc
   185d0:	stm	sp, {r5, r8, sl}
   185d4:	movw	r1, #54650	; 0xd57a
   185d8:	movt	r1, #3
   185dc:	mov	r2, r4
   185e0:	mov	r3, r9
   185e4:	bl	149c0 <fprintf@plt>
   185e8:	ldr	r0, [r4, #212]	; 0xd4
   185ec:	ldr	r0, [r0, #136]	; 0x88
   185f0:	mov	r1, #1
   185f4:	str	r1, [sp, #52]	; 0x34
   185f8:	cmp	r0, #0
   185fc:	beq	1861c <__flatcc_fb_gen_c_reader@@Base+0x1168>
   18600:	ldr	r0, [r4, #204]	; 0xcc
   18604:	stm	sp, {r5, r8}
   18608:	movw	r1, #54712	; 0xd5b8
   1860c:	movt	r1, #3
   18610:	mov	r2, r9
   18614:	mov	r3, r9
   18618:	bl	149c0 <fprintf@plt>
   1861c:	mov	r0, #1
   18620:	str	r0, [sp, #48]	; 0x30
   18624:	sub	r4, fp, #40	; 0x28
   18628:	b	18694 <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   1862c:	ldr	r2, [sp, #44]	; 0x2c
   18630:	ldr	r0, [r2, #204]	; 0xcc
   18634:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18638:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1863c:	stm	sp, {r1, r3, sl}
   18640:	movw	r1, #54753	; 0xd5e1
   18644:	movt	r1, #3
   18648:	mov	r3, r9
   1864c:	bl	149c0 <fprintf@plt>
   18650:	ldr	r0, [sp, #52]	; 0x34
   18654:	cmp	r0, #0
   18658:	bne	18694 <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   1865c:	ldrh	r0, [r6, #72]	; 0x48
   18660:	ands	r0, r0, #128	; 0x80
   18664:	beq	18694 <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   18668:	ldr	r0, [sp, #44]	; 0x2c
   1866c:	ldr	r3, [r0, #204]	; 0xcc
   18670:	mov	r0, #1
   18674:	str	r0, [sp, #48]	; 0x30
   18678:	movw	r0, #54808	; 0xd618
   1867c:	movt	r0, #3
   18680:	mov	r1, #84	; 0x54
   18684:	mov	r2, #1
   18688:	bl	14954 <fwrite@plt>
   1868c:	mov	r0, #0
   18690:	str	r0, [sp, #52]	; 0x34
   18694:	ldr	r6, [r6]
   18698:	cmp	r6, #0
   1869c:	bne	183c4 <__flatcc_fb_gen_c_reader@@Base+0xf10>
   186a0:	ldr	r0, [sp, #44]	; 0x2c
   186a4:	ldr	r1, [r0, #204]	; 0xcc
   186a8:	mov	r0, #10
   186ac:	bl	14a20 <fputc@plt>
   186b0:	sub	sp, fp, #28
   186b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186b8:	ldr	r0, [sp, #44]	; 0x2c
   186bc:	ldr	r0, [r0, #204]	; 0xcc
   186c0:	movw	r1, #53672	; 0xd1a8
   186c4:	movt	r1, #3
   186c8:	movw	r2, #53680	; 0xd1b0
   186cc:	movt	r2, #3
   186d0:	bl	149c0 <fprintf@plt>
   186d4:	movw	r0, #8368	; 0x20b0
   186d8:	movt	r0, #6
   186dc:	ldr	r0, [r0]
   186e0:	movw	r1, #52568	; 0xcd58
   186e4:	movt	r1, #3
   186e8:	str	r1, [sp]
   186ec:	movw	r1, #25975	; 0x6577
   186f0:	movt	r1, #3
   186f4:	movw	r4, #25986	; 0x6582
   186f8:	movt	r4, #3
   186fc:	mov	r2, r4
   18700:	movw	r3, #1029	; 0x405
   18704:	bl	149c0 <fprintf@plt>
   18708:	movw	r0, #29885	; 0x74bd
   1870c:	movt	r0, #4
   18710:	movw	r3, #52893	; 0xce9d
   18714:	movt	r3, #3
   18718:	mov	r1, r4
   1871c:	movw	r2, #1029	; 0x405
   18720:	bl	14a80 <__assert_fail@plt>
   18724:	movw	r0, #53539	; 0xd123
   18728:	movt	r0, #3
   1872c:	movw	r1, #25986	; 0x6582
   18730:	movt	r1, #3
   18734:	movw	r3, #52893	; 0xce9d
   18738:	movt	r3, #3
   1873c:	movw	r2, #1018	; 0x3fa
   18740:	bl	14a80 <__assert_fail@plt>
   18744:	movw	r0, #52861	; 0xce7d
   18748:	movt	r0, #3
   1874c:	movw	r1, #25986	; 0x6582
   18750:	movt	r1, #3
   18754:	movw	r3, #52893	; 0xce9d
   18758:	movt	r3, #3
   1875c:	mov	r2, #936	; 0x3a8
   18760:	bl	14a80 <__assert_fail@plt>
   18764:	movw	r0, #52946	; 0xced2
   18768:	movt	r0, #3
   1876c:	movw	r1, #25986	; 0x6582
   18770:	movt	r1, #3
   18774:	movw	r3, #52893	; 0xce9d
   18778:	movt	r3, #3
   1877c:	movw	r2, #937	; 0x3a9
   18780:	bl	14a80 <__assert_fail@plt>
   18784:	movw	r0, #52978	; 0xcef2
   18788:	movt	r0, #3
   1878c:	movw	r1, #25986	; 0x6582
   18790:	movt	r1, #3
   18794:	movw	r3, #52893	; 0xce9d
   18798:	movt	r3, #3
   1879c:	movw	r2, #938	; 0x3aa
   187a0:	bl	14a80 <__assert_fail@plt>
   187a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187a8:	add	fp, sp, #28
   187ac:	sub	sp, sp, #620	; 0x26c
   187b0:	mov	r5, r0
   187b4:	ldrh	r0, [r1, #8]
   187b8:	cmp	r0, #0
   187bc:	bne	19234 <__flatcc_fb_gen_c_reader@@Base+0x1d80>
   187c0:	mov	r4, r1
   187c4:	sub	r8, fp, #264	; 0x108
   187c8:	mov	r0, #0
   187cc:	str	r0, [sp, #56]	; 0x38
   187d0:	mov	r0, r8
   187d4:	mov	r1, #0
   187d8:	mov	r2, #220	; 0xdc
   187dc:	bl	149d8 <memset@plt>
   187e0:	add	r0, sp, #160	; 0xa0
   187e4:	mov	r1, #0
   187e8:	mov	r2, #220	; 0xdc
   187ec:	bl	149d8 <memset@plt>
   187f0:	ldr	r1, [r5, #204]	; 0xcc
   187f4:	mov	r0, #10
   187f8:	bl	14a20 <fputc@plt>
   187fc:	mov	r0, r4
   18800:	mov	r1, r8
   18804:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18808:	ldr	r2, [r4, #32]
   1880c:	movw	r1, #26232	; 0x6678
   18810:	movt	r1, #3
   18814:	mov	r0, r5
   18818:	bl	196cc <__flatcc_fb_gen_c_reader@@Base+0x2218>
   1881c:	ldr	r0, [r5, #204]	; 0xcc
   18820:	movw	r1, #55021	; 0xd6ed
   18824:	movt	r1, #3
   18828:	mov	r2, r8
   1882c:	bl	149c0 <fprintf@plt>
   18830:	ldr	r0, [r5, #204]	; 0xcc
   18834:	str	r5, [sp]
   18838:	movw	r1, #54092	; 0xd34c
   1883c:	movt	r1, #3
   18840:	mov	r2, r8
   18844:	mov	r3, r8
   18848:	bl	149c0 <fprintf@plt>
   1884c:	ldr	r0, [r5, #204]	; 0xcc
   18850:	str	r8, [sp]
   18854:	stmib	sp, {r5, r8}
   18858:	movw	r1, #55062	; 0xd716
   1885c:	movt	r1, #3
   18860:	mov	r2, r8
   18864:	mov	r3, r8
   18868:	bl	149c0 <fprintf@plt>
   1886c:	ldr	r0, [r5, #204]	; 0xcc
   18870:	movw	r1, #55163	; 0xd77b
   18874:	movt	r1, #3
   18878:	mov	r2, r5
   1887c:	mov	r3, r8
   18880:	bl	149c0 <fprintf@plt>
   18884:	ldr	r1, [r5, #204]	; 0xcc
   18888:	mov	r0, #10
   1888c:	bl	14a20 <fputc@plt>
   18890:	str	r4, [sp, #40]	; 0x28
   18894:	ldr	r7, [r4, #20]
   18898:	cmp	r7, #0
   1889c:	beq	1913c <__flatcc_fb_gen_c_reader@@Base+0x1c88>
   188a0:	movw	r9, #26232	; 0x6678
   188a4:	movt	r9, #3
   188a8:	sub	sl, fp, #40	; 0x28
   188ac:	sub	r6, fp, #36	; 0x24
   188b0:	b	18a58 <__flatcc_fb_gen_c_reader@@Base+0x15a4>
   188b4:	ldr	r0, [r0, #40]	; 0x28
   188b8:	add	r1, r7, #48	; 0x30
   188bc:	add	r2, sp, #60	; 0x3c
   188c0:	bl	19784 <__flatcc_fb_gen_c_reader@@Base+0x22d0>
   188c4:	ldr	r0, [r5, #204]	; 0xcc
   188c8:	ldrd	r2, [r8]
   188cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   188d0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   188d4:	stm	sp, {r2, r3}
   188d8:	mov	r8, r9
   188dc:	str	r9, [sp, #8]
   188e0:	str	r1, [sp, #12]
   188e4:	str	r6, [sp, #16]
   188e8:	add	r4, sp, #160	; 0xa0
   188ec:	str	r4, [sp, #20]
   188f0:	str	r4, [sp, #24]
   188f4:	add	r1, sp, #60	; 0x3c
   188f8:	str	r1, [sp, #28]
   188fc:	movw	r1, #56064	; 0xdb00
   18900:	movt	r1, #3
   18904:	mov	r2, r5
   18908:	bl	149c0 <fprintf@plt>
   1890c:	ldr	r0, [r5, #212]	; 0xd4
   18910:	ldr	r0, [r0, #32]
   18914:	cmp	r0, #0
   18918:	bne	1894c <__flatcc_fb_gen_c_reader@@Base+0x1498>
   1891c:	ldrb	r0, [r7, #72]	; 0x48
   18920:	tst	r0, #128	; 0x80
   18924:	beq	1894c <__flatcc_fb_gen_c_reader@@Base+0x1498>
   18928:	ldr	r0, [r5, #204]	; 0xcc
   1892c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18930:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18934:	stm	sp, {r1, r2, r4}
   18938:	movw	r1, #54291	; 0xd413
   1893c:	movt	r1, #3
   18940:	mov	r2, r5
   18944:	mov	r3, r8
   18948:	bl	149c0 <fprintf@plt>
   1894c:	ldrb	r0, [r7, #72]	; 0x48
   18950:	tst	r0, #128	; 0x80
   18954:	movw	r9, #26232	; 0x6678
   18958:	movt	r9, #3
   1895c:	beq	19100 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   18960:	ldr	r0, [sp, #56]	; 0x38
   18964:	cmp	r0, #0
   18968:	sub	r6, fp, #36	; 0x24
   1896c:	beq	18988 <__flatcc_fb_gen_c_reader@@Base+0x14d4>
   18970:	ldr	r3, [r5, #204]	; 0xcc
   18974:	movw	r0, #54345	; 0xd449
   18978:	movt	r0, #3
   1897c:	mov	r1, #66	; 0x42
   18980:	mov	r2, #1
   18984:	bl	14954 <fwrite@plt>
   18988:	ldr	r3, [r5, #204]	; 0xcc
   1898c:	movw	r0, #54412	; 0xd48c
   18990:	movt	r0, #3
   18994:	mov	r1, #61	; 0x3d
   18998:	mov	r2, #1
   1899c:	bl	14954 <fwrite@plt>
   189a0:	ldr	r0, [r5, #204]	; 0xcc
   189a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   189a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   189ac:	stm	sp, {r1, r2}
   189b0:	add	r4, sp, #160	; 0xa0
   189b4:	str	r4, [sp, #8]
   189b8:	movw	r1, #54474	; 0xd4ca
   189bc:	movt	r1, #3
   189c0:	mov	r2, r5
   189c4:	mov	r3, r8
   189c8:	bl	149c0 <fprintf@plt>
   189cc:	ldr	r0, [r5, #212]	; 0xd4
   189d0:	ldr	r0, [r0, #136]	; 0x88
   189d4:	cmp	r0, #0
   189d8:	beq	18a00 <__flatcc_fb_gen_c_reader@@Base+0x154c>
   189dc:	ldr	r0, [r5, #204]	; 0xcc
   189e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   189e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   189e8:	stm	sp, {r1, r2, r4, r5}
   189ec:	movw	r1, #56124	; 0xdb3c
   189f0:	movt	r1, #3
   189f4:	mov	r2, r5
   189f8:	mov	r3, r8
   189fc:	bl	149c0 <fprintf@plt>
   18a00:	ldr	r0, [sp, #56]	; 0x38
   18a04:	cmp	r0, #0
   18a08:	bne	19130 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18a0c:	ldr	r0, [r5, #204]	; 0xcc
   18a10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a18:	stm	sp, {r1, r2}
   18a1c:	add	r1, sp, #160	; 0xa0
   18a20:	mov	r4, r1
   18a24:	str	r1, [sp, #8]
   18a28:	movw	r1, #54588	; 0xd53c
   18a2c:	movt	r1, #3
   18a30:	mov	r2, r5
   18a34:	mov	r3, r8
   18a38:	bl	149c0 <fprintf@plt>
   18a3c:	ldr	r0, [r5, #204]	; 0xcc
   18a40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a44:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a48:	stm	sp, {r1, r2, r4}
   18a4c:	movw	r1, #54650	; 0xd57a
   18a50:	movt	r1, #3
   18a54:	b	18ec8 <__flatcc_fb_gen_c_reader@@Base+0x1a14>
   18a58:	ldr	r2, [r7, #68]	; 0x44
   18a5c:	mov	r0, r5
   18a60:	mov	r1, r9
   18a64:	bl	196cc <__flatcc_fb_gen_c_reader@@Base+0x2218>
   18a68:	mov	r0, r7
   18a6c:	mov	r1, sl
   18a70:	mov	r2, r6
   18a74:	bl	1977c <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   18a78:	ldrh	r0, [r7, #72]	; 0x48
   18a7c:	tst	r0, #4
   18a80:	bne	18b40 <__flatcc_fb_gen_c_reader@@Base+0x168c>
   18a84:	ubfx	r4, r0, #8, #1
   18a88:	ldrh	r0, [r7, #24]
   18a8c:	sub	r0, r0, #7
   18a90:	cmp	r0, #8
   18a94:	bhi	19144 <__flatcc_fb_gen_c_reader@@Base+0x1c90>
   18a98:	mov	r9, r8
   18a9c:	add	r8, r7, #96	; 0x60
   18aa0:	add	r1, pc, #0
   18aa4:	ldr	pc, [r1, r0, lsl #2]
   18aa8:	andeq	r8, r1, ip, asr #21
   18aac:			; <UNDEFINED> instruction: 0x00018cbc
   18ab0:	andeq	r8, r1, r4, lsl pc
   18ab4:	andeq	r8, r1, r4, ror #22
   18ab8:	andeq	r9, r1, r4, asr #2
   18abc:	andeq	r9, r1, r4, asr #2
   18ac0:	andeq	r9, r1, r4, asr #2
   18ac4:	andeq	r8, r1, ip, asr #31
   18ac8:	andeq	r8, r1, ip, asr pc
   18acc:	ldr	r0, [r7, #16]
   18ad0:	bl	199a8 <__flatcc_fb_gen_c_reader@@Base+0x24f4>
   18ad4:	ldr	ip, [r5, #204]	; 0xcc
   18ad8:	ldrd	r2, [r8]
   18adc:	ldr	r6, [fp, #-40]	; 0xffffffd8
   18ae0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18ae4:	stm	sp, {r2, r3}
   18ae8:	mov	r8, r9
   18aec:	str	r9, [sp, #8]
   18af0:	str	r6, [sp, #12]
   18af4:	movw	r9, #26232	; 0x6678
   18af8:	movt	r9, #3
   18afc:	str	r1, [sp, #16]
   18b00:	str	r5, [sp, #20]
   18b04:	str	r0, [sp, #24]
   18b08:	str	r4, [sp, #28]
   18b0c:	mov	r0, ip
   18b10:	movw	r1, #55562	; 0xd90a
   18b14:	movt	r1, #3
   18b18:	mov	r2, r5
   18b1c:	bl	149c0 <fprintf@plt>
   18b20:	ldr	r1, [r7, #104]	; 0x68
   18b24:	cmp	r1, #0
   18b28:	beq	19100 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   18b2c:	mov	r0, r5
   18b30:	ldr	r2, [sp, #40]	; 0x28
   18b34:	mov	r3, r7
   18b38:	bl	19a1c <__flatcc_fb_gen_c_reader@@Base+0x2568>
   18b3c:	b	19100 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   18b40:	ldr	r0, [r5, #204]	; 0xcc
   18b44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18b48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18b4c:	str	r1, [sp]
   18b50:	movw	r1, #55186	; 0xd792
   18b54:	movt	r1, #3
   18b58:	mov	r2, r8
   18b5c:	bl	149c0 <fprintf@plt>
   18b60:	b	19130 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18b64:	ldr	r0, [r5, #204]	; 0xcc
   18b68:	ldrd	r2, [r8]
   18b6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b70:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18b74:	stm	sp, {r2, r3}
   18b78:	mov	r8, r9
   18b7c:	str	r9, [sp, #8]
   18b80:	str	r1, [sp, #12]
   18b84:	str	r6, [sp, #16]
   18b88:	str	r4, [sp, #20]
   18b8c:	movw	r1, #55613	; 0xd93d
   18b90:	movt	r1, #3
   18b94:	mov	r2, r5
   18b98:	bl	149c0 <fprintf@plt>
   18b9c:	ldr	r0, [r5, #212]	; 0xd4
   18ba0:	ldr	r0, [r0, #32]
   18ba4:	cmp	r0, #0
   18ba8:	bne	18bdc <__flatcc_fb_gen_c_reader@@Base+0x1728>
   18bac:	ldrb	r0, [r7, #72]	; 0x48
   18bb0:	tst	r0, #128	; 0x80
   18bb4:	beq	18bdc <__flatcc_fb_gen_c_reader@@Base+0x1728>
   18bb8:	ldr	r0, [r5, #204]	; 0xcc
   18bbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18bc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18bc4:	stm	sp, {r1, r2}
   18bc8:	movw	r1, #55658	; 0xd96a
   18bcc:	movt	r1, #3
   18bd0:	mov	r2, r5
   18bd4:	mov	r3, r8
   18bd8:	bl	149c0 <fprintf@plt>
   18bdc:	ldrb	r0, [r7, #72]	; 0x48
   18be0:	tst	r0, #128	; 0x80
   18be4:	movw	r9, #26232	; 0x6678
   18be8:	movt	r9, #3
   18bec:	beq	19100 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   18bf0:	ldr	r0, [sp, #56]	; 0x38
   18bf4:	cmp	r0, #0
   18bf8:	sub	r6, fp, #36	; 0x24
   18bfc:	beq	18c18 <__flatcc_fb_gen_c_reader@@Base+0x1764>
   18c00:	ldr	r3, [r5, #204]	; 0xcc
   18c04:	movw	r0, #54345	; 0xd449
   18c08:	movt	r0, #3
   18c0c:	mov	r1, #66	; 0x42
   18c10:	mov	r2, #1
   18c14:	bl	14954 <fwrite@plt>
   18c18:	ldr	r0, [r5, #204]	; 0xcc
   18c1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c24:	stm	sp, {r1, r2}
   18c28:	movw	r1, #55701	; 0xd995
   18c2c:	movt	r1, #3
   18c30:	mov	r2, r5
   18c34:	mov	r3, r8
   18c38:	bl	149c0 <fprintf@plt>
   18c3c:	ldr	r0, [r5, #212]	; 0xd4
   18c40:	ldr	r0, [r0, #136]	; 0x88
   18c44:	cmp	r0, #0
   18c48:	beq	18c70 <__flatcc_fb_gen_c_reader@@Base+0x17bc>
   18c4c:	ldr	r0, [r5, #204]	; 0xcc
   18c50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c58:	stm	sp, {r1, r2}
   18c5c:	movw	r1, #55744	; 0xd9c0
   18c60:	movt	r1, #3
   18c64:	mov	r2, r5
   18c68:	mov	r3, r8
   18c6c:	bl	149c0 <fprintf@plt>
   18c70:	ldr	r0, [sp, #56]	; 0x38
   18c74:	cmp	r0, #0
   18c78:	bne	19130 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18c7c:	ldr	r0, [r5, #204]	; 0xcc
   18c80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c88:	stm	sp, {r1, r2}
   18c8c:	movw	r1, #55787	; 0xd9eb
   18c90:	movt	r1, #3
   18c94:	mov	r2, r5
   18c98:	mov	r3, r8
   18c9c:	bl	149c0 <fprintf@plt>
   18ca0:	ldr	r0, [r5, #204]	; 0xcc
   18ca4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ca8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18cac:	stm	sp, {r1, r2}
   18cb0:	movw	r1, #55838	; 0xda1e
   18cb4:	movt	r1, #3
   18cb8:	b	18ec8 <__flatcc_fb_gen_c_reader@@Base+0x1a14>
   18cbc:	ldr	r4, [r7, #16]
   18cc0:	mov	r0, r4
   18cc4:	mov	r1, r5
   18cc8:	bl	19640 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   18ccc:	str	r0, [sp, #52]	; 0x34
   18cd0:	mov	r0, r4
   18cd4:	bl	19658 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   18cd8:	mov	r6, r0
   18cdc:	ldr	r0, [r7, #16]
   18ce0:	bl	19934 <__flatcc_fb_gen_c_reader@@Base+0x2480>
   18ce4:	str	r0, [sp, #44]	; 0x2c
   18ce8:	ldr	r0, [r7, #16]
   18cec:	add	r1, r7, #48	; 0x30
   18cf0:	add	r4, sp, #60	; 0x3c
   18cf4:	mov	r2, r4
   18cf8:	bl	19784 <__flatcc_fb_gen_c_reader@@Base+0x22d0>
   18cfc:	ldrd	r2, [r8]
   18d00:	ldr	r0, [r5, #204]	; 0xcc
   18d04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18d08:	ldr	r4, [fp, #-36]	; 0xffffffdc
   18d0c:	str	r6, [sp, #48]	; 0x30
   18d10:	str	r6, [sp, #32]
   18d14:	add	r6, sp, #60	; 0x3c
   18d18:	str	r6, [sp, #36]	; 0x24
   18d1c:	stm	sp, {r2, r3}
   18d20:	mov	r8, r9
   18d24:	str	r9, [sp, #8]
   18d28:	add	r2, sp, #12
   18d2c:	stm	r2, {r1, r4, r5}
   18d30:	ldr	r1, [sp, #44]	; 0x2c
   18d34:	str	r1, [sp, #24]
   18d38:	ldr	r1, [sp, #52]	; 0x34
   18d3c:	str	r1, [sp, #28]
   18d40:	movw	r1, #55231	; 0xd7bf
   18d44:	movt	r1, #3
   18d48:	mov	r2, r5
   18d4c:	bl	149c0 <fprintf@plt>
   18d50:	ldr	r0, [r5, #212]	; 0xd4
   18d54:	ldr	r0, [r0, #32]
   18d58:	cmp	r0, #0
   18d5c:	bne	18da0 <__flatcc_fb_gen_c_reader@@Base+0x18ec>
   18d60:	ldrb	r0, [r7, #72]	; 0x48
   18d64:	tst	r0, #128	; 0x80
   18d68:	beq	18da0 <__flatcc_fb_gen_c_reader@@Base+0x18ec>
   18d6c:	ldr	r0, [r5, #204]	; 0xcc
   18d70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18d74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18d78:	stm	sp, {r1, r2}
   18d7c:	ldr	r1, [sp, #52]	; 0x34
   18d80:	str	r1, [sp, #8]
   18d84:	ldr	r1, [sp, #48]	; 0x30
   18d88:	str	r1, [sp, #12]
   18d8c:	movw	r1, #55288	; 0xd7f8
   18d90:	movt	r1, #3
   18d94:	mov	r2, r5
   18d98:	mov	r3, r8
   18d9c:	bl	149c0 <fprintf@plt>
   18da0:	ldrb	r0, [r7, #72]	; 0x48
   18da4:	tst	r0, #128	; 0x80
   18da8:	movw	r9, #26232	; 0x6678
   18dac:	movt	r9, #3
   18db0:	beq	19100 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   18db4:	ldr	r0, [sp, #56]	; 0x38
   18db8:	cmp	r0, #0
   18dbc:	sub	r6, fp, #36	; 0x24
   18dc0:	beq	18ddc <__flatcc_fb_gen_c_reader@@Base+0x1928>
   18dc4:	ldr	r3, [r5, #204]	; 0xcc
   18dc8:	movw	r0, #54345	; 0xd449
   18dcc:	movt	r0, #3
   18dd0:	mov	r1, #66	; 0x42
   18dd4:	mov	r2, #1
   18dd8:	bl	14954 <fwrite@plt>
   18ddc:	ldr	r3, [r5, #204]	; 0xcc
   18de0:	movw	r0, #54412	; 0xd48c
   18de4:	movt	r0, #3
   18de8:	mov	r1, #61	; 0x3d
   18dec:	mov	r2, #1
   18df0:	bl	14954 <fwrite@plt>
   18df4:	ldr	r0, [r5, #204]	; 0xcc
   18df8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18dfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18e00:	stm	sp, {r1, r2}
   18e04:	ldr	r1, [sp, #52]	; 0x34
   18e08:	str	r1, [sp, #8]
   18e0c:	ldr	r4, [sp, #48]	; 0x30
   18e10:	str	r4, [sp, #12]
   18e14:	movw	r1, #55337	; 0xd829
   18e18:	movt	r1, #3
   18e1c:	mov	r2, r5
   18e20:	mov	r3, r8
   18e24:	bl	149c0 <fprintf@plt>
   18e28:	ldr	r0, [r5, #212]	; 0xd4
   18e2c:	ldr	r0, [r0, #136]	; 0x88
   18e30:	cmp	r0, #0
   18e34:	beq	18e68 <__flatcc_fb_gen_c_reader@@Base+0x19b4>
   18e38:	ldr	r0, [r5, #204]	; 0xcc
   18e3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18e44:	stm	sp, {r1, r2}
   18e48:	ldr	r1, [sp, #52]	; 0x34
   18e4c:	add	r2, sp, #8
   18e50:	stm	r2, {r1, r4, r5}
   18e54:	movw	r1, #55386	; 0xd85a
   18e58:	movt	r1, #3
   18e5c:	mov	r2, r5
   18e60:	mov	r3, r8
   18e64:	bl	149c0 <fprintf@plt>
   18e68:	ldr	r0, [sp, #56]	; 0x38
   18e6c:	cmp	r0, #0
   18e70:	bne	19130 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18e74:	ldr	r0, [r5, #204]	; 0xcc
   18e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18e80:	stm	sp, {r1, r2}
   18e84:	ldr	r4, [sp, #52]	; 0x34
   18e88:	str	r4, [sp, #8]
   18e8c:	ldr	r1, [sp, #48]	; 0x30
   18e90:	str	r1, [sp, #12]
   18e94:	movw	r1, #55448	; 0xd898
   18e98:	movt	r1, #3
   18e9c:	mov	r2, r5
   18ea0:	mov	r3, r8
   18ea4:	bl	149c0 <fprintf@plt>
   18ea8:	ldr	r0, [r5, #204]	; 0xcc
   18eac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18eb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18eb4:	stm	sp, {r1, r2, r4}
   18eb8:	ldr	r1, [sp, #48]	; 0x30
   18ebc:	str	r1, [sp, #12]
   18ec0:	movw	r1, #55505	; 0xd8d1
   18ec4:	movt	r1, #3
   18ec8:	mov	r2, r5
   18ecc:	mov	r3, r8
   18ed0:	bl	149c0 <fprintf@plt>
   18ed4:	ldr	r0, [r5, #212]	; 0xd4
   18ed8:	ldr	r0, [r0, #136]	; 0x88
   18edc:	mov	r1, #1
   18ee0:	str	r1, [sp, #56]	; 0x38
   18ee4:	cmp	r0, #0
   18ee8:	beq	19130 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18eec:	ldr	r0, [r5, #204]	; 0xcc
   18ef0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ef4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18ef8:	stm	sp, {r1, r2}
   18efc:	movw	r1, #54712	; 0xd5b8
   18f00:	movt	r1, #3
   18f04:	mov	r2, r8
   18f08:	mov	r3, r8
   18f0c:	bl	149c0 <fprintf@plt>
   18f10:	b	19130 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18f14:	ldr	r0, [r5, #204]	; 0xcc
   18f18:	ldrd	r2, [r8]
   18f1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f20:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18f24:	stm	sp, {r2, r3}
   18f28:	mov	r8, r9
   18f2c:	str	r9, [sp, #8]
   18f30:	str	r1, [sp, #12]
   18f34:	str	r6, [sp, #16]
   18f38:	movw	r9, #26232	; 0x6678
   18f3c:	movt	r9, #3
   18f40:	str	r5, [sp, #20]
   18f44:	str	r4, [sp, #24]
   18f48:	movw	r1, #55889	; 0xda51
   18f4c:	movt	r1, #3
   18f50:	mov	r2, r5
   18f54:	bl	149c0 <fprintf@plt>
   18f58:	b	19100 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   18f5c:	ldr	r0, [r7, #16]
   18f60:	add	r1, sp, #160	; 0xa0
   18f64:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18f68:	ldr	r0, [r7, #16]
   18f6c:	ldrh	r6, [r0, #8]
   18f70:	cmp	r6, #4
   18f74:	bhi	19194 <__flatcc_fb_gen_c_reader@@Base+0x1ce0>
   18f78:	cmp	r6, #2
   18f7c:	beq	19194 <__flatcc_fb_gen_c_reader@@Base+0x1ce0>
   18f80:	ldr	r3, [r8, #4]
   18f84:	ldr	r8, [r8]
   18f88:	ldr	r0, [r5, #204]	; 0xcc
   18f8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18f90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18f94:	cmp	r6, #4
   18f98:	bne	19040 <__flatcc_fb_gen_c_reader@@Base+0x1b8c>
   18f9c:	str	r8, [sp]
   18fa0:	str	r3, [sp, #4]
   18fa4:	mov	r8, r9
   18fa8:	str	r9, [sp, #8]
   18fac:	str	r2, [sp, #12]
   18fb0:	str	r1, [sp, #16]
   18fb4:	add	r1, sp, #160	; 0xa0
   18fb8:	str	r1, [sp, #20]
   18fbc:	str	r4, [sp, #24]
   18fc0:	movw	r1, #56396	; 0xdc4c
   18fc4:	movt	r1, #3
   18fc8:	b	190a8 <__flatcc_fb_gen_c_reader@@Base+0x1bf4>
   18fcc:	ldr	r0, [r7, #16]
   18fd0:	add	r1, sp, #160	; 0xa0
   18fd4:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18fd8:	ldr	r0, [r7, #16]
   18fdc:	ldrh	r1, [r0, #8]
   18fe0:	cmp	r1, #4
   18fe4:	bhi	191e4 <__flatcc_fb_gen_c_reader@@Base+0x1d30>
   18fe8:	add	r2, pc, #0
   18fec:	ldr	pc, [r2, r1, lsl #2]
   18ff0:	andeq	r9, r1, r4
   18ff4:	strheq	r9, [r1], -r8
   18ff8:	andeq	r9, r1, r4, ror #3
   18ffc:			; <UNDEFINED> instruction: 0x000188b4
   19000:	andeq	r9, r1, r0, ror r0
   19004:	ldr	r0, [r5, #204]	; 0xcc
   19008:	ldrd	r2, [r8]
   1900c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19010:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19014:	stm	sp, {r2, r3}
   19018:	mov	r8, r9
   1901c:	str	r9, [sp, #8]
   19020:	str	r1, [sp, #12]
   19024:	str	r6, [sp, #16]
   19028:	add	r1, sp, #160	; 0xa0
   1902c:	str	r1, [sp, #20]
   19030:	str	r4, [sp, #24]
   19034:	movw	r1, #56008	; 0xdac8
   19038:	movt	r1, #3
   1903c:	b	190f0 <__flatcc_fb_gen_c_reader@@Base+0x1c3c>
   19040:	str	r8, [sp]
   19044:	str	r3, [sp, #4]
   19048:	mov	r8, r9
   1904c:	str	r9, [sp, #8]
   19050:	str	r2, [sp, #12]
   19054:	str	r1, [sp, #16]
   19058:	add	r1, sp, #160	; 0xa0
   1905c:	str	r1, [sp, #20]
   19060:	str	r4, [sp, #24]
   19064:	movw	r1, #56455	; 0xdc87
   19068:	movt	r1, #3
   1906c:	b	190f0 <__flatcc_fb_gen_c_reader@@Base+0x1c3c>
   19070:	ldr	r0, [r5, #204]	; 0xcc
   19074:	ldrd	r2, [r8]
   19078:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1907c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19080:	stm	sp, {r2, r3}
   19084:	mov	r8, r9
   19088:	str	r9, [sp, #8]
   1908c:	str	r1, [sp, #12]
   19090:	str	r6, [sp, #16]
   19094:	add	r1, sp, #160	; 0xa0
   19098:	str	r1, [sp, #20]
   1909c:	str	r4, [sp, #24]
   190a0:	movw	r1, #56191	; 0xdb7f
   190a4:	movt	r1, #3
   190a8:	mov	r2, r5
   190ac:	mov	r3, r5
   190b0:	bl	149c0 <fprintf@plt>
   190b4:	b	190f8 <__flatcc_fb_gen_c_reader@@Base+0x1c44>
   190b8:	ldr	r0, [r5, #204]	; 0xcc
   190bc:	ldrd	r2, [r8]
   190c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   190c4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   190c8:	stm	sp, {r2, r3}
   190cc:	mov	r8, r9
   190d0:	str	r9, [sp, #8]
   190d4:	str	r1, [sp, #12]
   190d8:	str	r6, [sp, #16]
   190dc:	add	r1, sp, #160	; 0xa0
   190e0:	str	r1, [sp, #20]
   190e4:	str	r4, [sp, #24]
   190e8:	movw	r1, #55950	; 0xda8e
   190ec:	movt	r1, #3
   190f0:	mov	r2, r5
   190f4:	bl	149c0 <fprintf@plt>
   190f8:	movw	r9, #26232	; 0x6678
   190fc:	movt	r9, #3
   19100:	ldrb	r0, [r7, #72]	; 0x48
   19104:	tst	r0, #128	; 0x80
   19108:	sub	r6, fp, #36	; 0x24
   1910c:	beq	19130 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   19110:	ldr	r3, [r5, #204]	; 0xcc
   19114:	mov	r0, #1
   19118:	str	r0, [sp, #56]	; 0x38
   1911c:	movw	r0, #54808	; 0xd618
   19120:	movt	r0, #3
   19124:	mov	r1, #84	; 0x54
   19128:	mov	r2, #1
   1912c:	bl	14954 <fwrite@plt>
   19130:	ldr	r7, [r7]
   19134:	cmp	r7, #0
   19138:	bne	18a58 <__flatcc_fb_gen_c_reader@@Base+0x15a4>
   1913c:	sub	sp, fp, #28
   19140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19144:	movw	r0, #8368	; 0x20b0
   19148:	movt	r0, #6
   1914c:	ldr	r0, [r0]
   19150:	movw	r1, #56510	; 0xdcbe
   19154:	movt	r1, #3
   19158:	str	r1, [sp]
   1915c:	movw	r1, #25975	; 0x6577
   19160:	movt	r1, #3
   19164:	movw	r4, #25986	; 0x6582
   19168:	movt	r4, #3
   1916c:	mov	r2, r4
   19170:	movw	r3, #1599	; 0x63f
   19174:	bl	149c0 <fprintf@plt>
   19178:	movw	r0, #29885	; 0x74bd
   1917c:	movt	r0, #4
   19180:	movw	r3, #54969	; 0xd6b9
   19184:	movt	r3, #3
   19188:	mov	r1, r4
   1918c:	movw	r2, #1599	; 0x63f
   19190:	bl	14a80 <__assert_fail@plt>
   19194:	movw	r0, #8368	; 0x20b0
   19198:	movt	r0, #6
   1919c:	ldr	r0, [r0]
   191a0:	movw	r1, #56316	; 0xdbfc
   191a4:	movt	r1, #3
   191a8:	str	r1, [sp]
   191ac:	movw	r1, #25975	; 0x6577
   191b0:	movt	r1, #3
   191b4:	movw	r4, #25986	; 0x6582
   191b8:	movt	r4, #3
   191bc:	mov	r2, r4
   191c0:	mov	r3, #1584	; 0x630
   191c4:	bl	149c0 <fprintf@plt>
   191c8:	movw	r0, #29885	; 0x74bd
   191cc:	movt	r0, #4
   191d0:	movw	r3, #54969	; 0xd6b9
   191d4:	movt	r3, #3
   191d8:	mov	r1, r4
   191dc:	mov	r2, #1584	; 0x630
   191e0:	bl	14a80 <__assert_fail@plt>
   191e4:	movw	r0, #8368	; 0x20b0
   191e8:	movt	r0, #6
   191ec:	ldr	r0, [r0]
   191f0:	movw	r1, #56243	; 0xdbb3
   191f4:	movt	r1, #3
   191f8:	str	r1, [sp]
   191fc:	movw	r1, #25975	; 0x6577
   19200:	movt	r1, #3
   19204:	movw	r4, #25986	; 0x6582
   19208:	movt	r4, #3
   1920c:	mov	r2, r4
   19210:	mov	r3, #1568	; 0x620
   19214:	bl	149c0 <fprintf@plt>
   19218:	movw	r0, #29885	; 0x74bd
   1921c:	movt	r0, #4
   19220:	movw	r3, #54969	; 0xd6b9
   19224:	movt	r3, #3
   19228:	mov	r1, r4
   1922c:	mov	r2, #1568	; 0x620
   19230:	bl	14a80 <__assert_fail@plt>
   19234:	movw	r0, #51128	; 0xc7b8
   19238:	movt	r0, #3
   1923c:	movw	r1, #25986	; 0x6582
   19240:	movt	r1, #3
   19244:	movw	r3, #54969	; 0xd6b9
   19248:	movt	r3, #3
   1924c:	movw	r2, #1362	; 0x552
   19250:	bl	14a80 <__assert_fail@plt>
   19254:	push	{r4, sl, fp, lr}
   19258:	add	fp, sp, #8
   1925c:	mov	r4, r0
   19260:	bl	1748c <__flatcc_fb_gen_common_c_header@@Base+0x910>
   19264:	ldr	r0, [r4, #204]	; 0xcc
   19268:	ldr	r1, [r4, #208]	; 0xd0
   1926c:	ldr	r2, [r1, #164]	; 0xa4
   19270:	movw	r1, #56943	; 0xde6f
   19274:	movt	r1, #3
   19278:	pop	{r4, sl, fp, lr}
   1927c:	b	149c0 <fprintf@plt>
   19280:	push	{r4, sl, fp, lr}
   19284:	add	fp, sp, #8
   19288:	sub	sp, sp, #24
   1928c:	mov	r4, r0
   19290:	ldr	r0, [r0, #204]	; 0xcc
   19294:	str	r4, [sp]
   19298:	str	r4, [sp, #4]
   1929c:	str	r4, [sp, #8]
   192a0:	str	r4, [sp, #12]
   192a4:	str	r4, [sp, #16]
   192a8:	str	r4, [sp, #20]
   192ac:	movw	r1, #38295	; 0x9597
   192b0:	movt	r1, #3
   192b4:	mov	r2, r4
   192b8:	mov	r3, r4
   192bc:	bl	149c0 <fprintf@plt>
   192c0:	ldr	r0, [r4, #204]	; 0xcc
   192c4:	str	r4, [sp]
   192c8:	str	r4, [sp, #4]
   192cc:	movw	r1, #38490	; 0x965a
   192d0:	movt	r1, #3
   192d4:	mov	r2, r4
   192d8:	mov	r3, r4
   192dc:	bl	149c0 <fprintf@plt>
   192e0:	ldr	r0, [r4, #204]	; 0xcc
   192e4:	str	r4, [sp]
   192e8:	str	r4, [sp, #4]
   192ec:	movw	r1, #38643	; 0x96f3
   192f0:	movt	r1, #3
   192f4:	mov	r2, r4
   192f8:	mov	r3, r4
   192fc:	bl	149c0 <fprintf@plt>
   19300:	ldr	r0, [r4, #204]	; 0xcc
   19304:	movw	r1, #38762	; 0x976a
   19308:	movt	r1, #3
   1930c:	mov	r2, r4
   19310:	bl	149c0 <fprintf@plt>
   19314:	ldr	r0, [r4, #204]	; 0xcc
   19318:	movw	r1, #39483	; 0x9a3b
   1931c:	movt	r1, #3
   19320:	mov	r2, r4
   19324:	bl	149c0 <fprintf@plt>
   19328:	ldr	r0, [r4, #204]	; 0xcc
   1932c:	movw	r1, #40141	; 0x9ccd
   19330:	movt	r1, #3
   19334:	mov	r2, r4
   19338:	bl	149c0 <fprintf@plt>
   1933c:	ldr	r0, [r4, #204]	; 0xcc
   19340:	movw	r1, #40270	; 0x9d4e
   19344:	movt	r1, #3
   19348:	mov	r2, r4
   1934c:	bl	149c0 <fprintf@plt>
   19350:	ldr	r0, [r4, #204]	; 0xcc
   19354:	movw	r1, #40380	; 0x9dbc
   19358:	movt	r1, #3
   1935c:	mov	r2, r4
   19360:	sub	sp, fp, #8
   19364:	pop	{r4, sl, fp, lr}
   19368:	b	149c0 <fprintf@plt>
   1936c:	push	{r4, sl, fp, lr}
   19370:	add	fp, sp, #8
   19374:	sub	sp, sp, #40	; 0x28
   19378:	mov	r4, r0
   1937c:	ldr	r0, [r0, #204]	; 0xcc
   19380:	str	r4, [sp]
   19384:	str	r4, [sp, #4]
   19388:	movw	r1, #40864	; 0x9fa0
   1938c:	movt	r1, #3
   19390:	mov	r2, r4
   19394:	mov	r3, r4
   19398:	bl	149c0 <fprintf@plt>
   1939c:	ldr	r0, [r4, #204]	; 0xcc
   193a0:	str	r4, [sp]
   193a4:	str	r4, [sp, #4]
   193a8:	str	r4, [sp, #8]
   193ac:	str	r4, [sp, #12]
   193b0:	movw	r1, #41033	; 0xa049
   193b4:	movt	r1, #3
   193b8:	mov	r2, r4
   193bc:	mov	r3, r4
   193c0:	bl	149c0 <fprintf@plt>
   193c4:	ldr	r0, [r4, #204]	; 0xcc
   193c8:	str	r4, [sp]
   193cc:	movw	r1, #41508	; 0xa224
   193d0:	movt	r1, #3
   193d4:	mov	r2, r4
   193d8:	mov	r3, r4
   193dc:	bl	149c0 <fprintf@plt>
   193e0:	ldr	r0, [r4, #204]	; 0xcc
   193e4:	str	r4, [sp, #32]
   193e8:	str	r4, [sp]
   193ec:	str	r4, [sp, #4]
   193f0:	str	r4, [sp, #8]
   193f4:	str	r4, [sp, #12]
   193f8:	str	r4, [sp, #16]
   193fc:	str	r4, [sp, #20]
   19400:	str	r4, [sp, #24]
   19404:	str	r4, [sp, #28]
   19408:	movw	r1, #42046	; 0xa43e
   1940c:	movt	r1, #3
   19410:	mov	r2, r4
   19414:	mov	r3, r4
   19418:	bl	149c0 <fprintf@plt>
   1941c:	ldr	r0, [r4, #204]	; 0xcc
   19420:	movw	r1, #42389	; 0xa595
   19424:	movt	r1, #3
   19428:	mov	r2, r4
   1942c:	mov	r3, r4
   19430:	bl	149c0 <fprintf@plt>
   19434:	ldr	r0, [r4, #204]	; 0xcc
   19438:	str	r4, [sp]
   1943c:	movw	r1, #42596	; 0xa664
   19440:	movt	r1, #3
   19444:	mov	r2, r4
   19448:	mov	r3, r4
   1944c:	bl	149c0 <fprintf@plt>
   19450:	ldr	r0, [r4, #204]	; 0xcc
   19454:	str	r4, [sp]
   19458:	movw	r1, #42777	; 0xa719
   1945c:	movt	r1, #3
   19460:	mov	r2, r4
   19464:	mov	r3, r4
   19468:	bl	149c0 <fprintf@plt>
   1946c:	ldr	r0, [r4, #204]	; 0xcc
   19470:	movw	r1, #43214	; 0xa8ce
   19474:	movt	r1, #3
   19478:	mov	r2, r4
   1947c:	bl	149c0 <fprintf@plt>
   19480:	ldr	r0, [r4, #204]	; 0xcc
   19484:	movw	r1, #43384	; 0xa978
   19488:	movt	r1, #3
   1948c:	mov	r2, r4
   19490:	sub	sp, fp, #8
   19494:	pop	{r4, sl, fp, lr}
   19498:	b	149c0 <fprintf@plt>
   1949c:	push	{r4, sl, fp, lr}
   194a0:	add	fp, sp, #8
   194a4:	sub	sp, sp, #48	; 0x30
   194a8:	mov	r4, r0
   194ac:	ldr	r0, [r0, #204]	; 0xcc
   194b0:	movw	r1, #43685	; 0xaaa5
   194b4:	movt	r1, #3
   194b8:	mov	r2, r4
   194bc:	mov	r3, r4
   194c0:	bl	149c0 <fprintf@plt>
   194c4:	ldr	r0, [r4, #204]	; 0xcc
   194c8:	movw	r1, #44021	; 0xabf5
   194cc:	movt	r1, #3
   194d0:	mov	r2, r4
   194d4:	mov	r3, r4
   194d8:	bl	149c0 <fprintf@plt>
   194dc:	ldr	r0, [r4, #204]	; 0xcc
   194e0:	str	r4, [sp, #32]
   194e4:	str	r4, [sp]
   194e8:	str	r4, [sp, #4]
   194ec:	str	r4, [sp, #8]
   194f0:	str	r4, [sp, #12]
   194f4:	str	r4, [sp, #16]
   194f8:	str	r4, [sp, #20]
   194fc:	str	r4, [sp, #24]
   19500:	str	r4, [sp, #28]
   19504:	movw	r1, #44233	; 0xacc9
   19508:	movt	r1, #3
   1950c:	mov	r2, r4
   19510:	mov	r3, r4
   19514:	bl	149c0 <fprintf@plt>
   19518:	ldr	r0, [r4, #204]	; 0xcc
   1951c:	str	r4, [sp, #32]
   19520:	str	r4, [sp]
   19524:	str	r4, [sp, #4]
   19528:	str	r4, [sp, #8]
   1952c:	str	r4, [sp, #12]
   19530:	str	r4, [sp, #16]
   19534:	str	r4, [sp, #20]
   19538:	str	r4, [sp, #24]
   1953c:	str	r4, [sp, #28]
   19540:	movw	r1, #44612	; 0xae44
   19544:	movt	r1, #3
   19548:	mov	r2, r4
   1954c:	mov	r3, r4
   19550:	bl	149c0 <fprintf@plt>
   19554:	ldr	r0, [r4, #204]	; 0xcc
   19558:	str	r4, [sp]
   1955c:	str	r4, [sp, #4]
   19560:	str	r4, [sp, #8]
   19564:	str	r4, [sp, #12]
   19568:	str	r4, [sp, #16]
   1956c:	movw	r1, #44997	; 0xafc5
   19570:	movt	r1, #3
   19574:	mov	r2, r4
   19578:	mov	r3, r4
   1957c:	bl	149c0 <fprintf@plt>
   19580:	ldr	r0, [r4, #204]	; 0xcc
   19584:	str	r4, [sp, #32]
   19588:	str	r4, [sp]
   1958c:	str	r4, [sp, #4]
   19590:	str	r4, [sp, #8]
   19594:	str	r4, [sp, #12]
   19598:	str	r4, [sp, #16]
   1959c:	str	r4, [sp, #20]
   195a0:	str	r4, [sp, #24]
   195a4:	str	r4, [sp, #28]
   195a8:	movw	r1, #45850	; 0xb31a
   195ac:	movt	r1, #3
   195b0:	mov	r2, r4
   195b4:	mov	r3, r4
   195b8:	bl	149c0 <fprintf@plt>
   195bc:	ldr	r0, [r4, #204]	; 0xcc
   195c0:	str	r4, [sp, #32]
   195c4:	str	r4, [sp, #36]	; 0x24
   195c8:	str	r4, [sp, #40]	; 0x28
   195cc:	str	r4, [sp]
   195d0:	str	r4, [sp, #4]
   195d4:	str	r4, [sp, #8]
   195d8:	str	r4, [sp, #12]
   195dc:	str	r4, [sp, #16]
   195e0:	str	r4, [sp, #20]
   195e4:	str	r4, [sp, #24]
   195e8:	str	r4, [sp, #28]
   195ec:	movw	r1, #46650	; 0xb63a
   195f0:	movt	r1, #3
   195f4:	mov	r2, r4
   195f8:	mov	r3, r4
   195fc:	bl	149c0 <fprintf@plt>
   19600:	ldr	r0, [r4, #204]	; 0xcc
   19604:	movw	r1, #48387	; 0xbd03
   19608:	movt	r1, #3
   1960c:	mov	r2, r4
   19610:	bl	149c0 <fprintf@plt>
   19614:	ldr	r0, [r4, #204]	; 0xcc
   19618:	movw	r1, #48979	; 0xbf53
   1961c:	movt	r1, #3
   19620:	mov	r2, r4
   19624:	sub	sp, fp, #8
   19628:	pop	{r4, sl, fp, lr}
   1962c:	b	149c0 <fprintf@plt>
   19630:	mov	r2, r1
   19634:	mov	r1, r0
   19638:	ldr	r0, [r0, #12]
   1963c:	b	16808 <__flatcc_fb_scoped_symbol_name@@Base>
   19640:	movw	r2, #26232	; 0x6678
   19644:	movt	r2, #3
   19648:	cmp	r0, #5
   1964c:	moveq	r2, r1
   19650:	mov	r0, r2
   19654:	bx	lr
   19658:	sub	r0, r0, #1
   1965c:	cmp	r0, #11
   19660:	movwcc	r1, #56976	; 0xde90
   19664:	movtcc	r1, #3
   19668:	ldrcc	r0, [r1, r0, lsl #2]
   1966c:	bxcc	lr
   19670:	push	{r4, sl, fp, lr}
   19674:	add	fp, sp, #8
   19678:	sub	sp, sp, #8
   1967c:	movw	r0, #8368	; 0x20b0
   19680:	movt	r0, #6
   19684:	ldr	r0, [r0]
   19688:	movw	r1, #52568	; 0xcd58
   1968c:	movt	r1, #3
   19690:	str	r1, [sp]
   19694:	movw	r1, #25975	; 0x6577
   19698:	movt	r1, #3
   1969c:	movw	r4, #52495	; 0xcd0f
   196a0:	movt	r4, #3
   196a4:	mov	r2, r4
   196a8:	mov	r3, #141	; 0x8d
   196ac:	bl	149c0 <fprintf@plt>
   196b0:	movw	r0, #29885	; 0x74bd
   196b4:	movt	r0, #4
   196b8:	movw	r3, #52623	; 0xcd8f
   196bc:	movt	r3, #3
   196c0:	mov	r1, r4
   196c4:	mov	r2, #141	; 0x8d
   196c8:	bl	14a80 <__assert_fail@plt>
   196cc:	cmp	r2, #0
   196d0:	bxeq	lr
   196d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   196d8:	add	fp, sp, #24
   196dc:	mov	r5, r1
   196e0:	mov	r4, r0
   196e4:	mov	r0, #0
   196e8:	mov	r1, #1
   196ec:	movw	r6, #29901	; 0x74cd
   196f0:	movt	r6, #4
   196f4:	movw	r8, #52677	; 0xcdc5
   196f8:	movt	r8, #3
   196fc:	movw	r9, #52670	; 0xcdbe
   19700:	movt	r9, #3
   19704:	mov	r7, r2
   19708:	ldr	r2, [r2, #4]
   1970c:	ldr	r2, [r2, #8]
   19710:	cmp	r0, r2
   19714:	beq	19730 <__flatcc_fb_gen_c_reader@@Base+0x227c>
   19718:	ldr	r0, [r4, #204]	; 0xcc
   1971c:	cmp	r1, #0
   19720:	moveq	r1, r8
   19724:	movne	r1, r9
   19728:	mov	r2, r5
   1972c:	bl	149c0 <fprintf@plt>
   19730:	ldr	r0, [r4, #204]	; 0xcc
   19734:	ldr	r1, [r7, #4]
   19738:	ldr	r3, [r1]
   1973c:	ldr	r2, [r1, #4]
   19740:	mov	r1, r6
   19744:	bl	149c0 <fprintf@plt>
   19748:	ldr	r2, [r7]
   1974c:	ldr	r0, [r7, #4]
   19750:	ldr	r0, [r0, #8]
   19754:	mov	r1, #0
   19758:	cmp	r2, #0
   1975c:	bne	19704 <__flatcc_fb_gen_c_reader@@Base+0x2250>
   19760:	ldr	r3, [r4, #204]	; 0xcc
   19764:	movw	r0, #47224	; 0xb878
   19768:	movt	r0, #4
   1976c:	mov	r1, #4
   19770:	mov	r2, #1
   19774:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   19778:	b	14954 <fwrite@plt>
   1977c:	ldr	r0, [r0, #4]
   19780:	b	198ac <__flatcc_fb_gen_c_reader@@Base+0x23f8>
   19784:	push	{r4, r5, fp, lr}
   19788:	add	fp, sp, #8
   1978c:	sub	sp, sp, #8
   19790:	mov	r5, r1
   19794:	ldrh	r1, [r1, #8]
   19798:	sub	r1, r1, #3
   1979c:	cmp	r1, #3
   197a0:	bhi	1985c <__flatcc_fb_gen_c_reader@@Base+0x23a8>
   197a4:	mov	r4, r2
   197a8:	add	r2, pc, #0
   197ac:	ldr	pc, [r2, r1, lsl #2]
   197b0:	andeq	r9, r1, r0, asr #15
   197b4:	andeq	r9, r1, r8, lsl r8
   197b8:	andeq	r9, r1, r4, ror #15
   197bc:	andeq	r9, r1, r0, lsl #16
   197c0:	vldr	d16, [r5]
   197c4:	cmp	r0, #11
   197c8:	bne	19840 <__flatcc_fb_gen_c_reader@@Base+0x238c>
   197cc:	vcvt.f32.f64	s0, d16
   197d0:	vcvt.f64.f32	d16, s0
   197d4:	vmov	r2, r3, d16
   197d8:	movw	r1, #52709	; 0xcde5
   197dc:	movt	r1, #3
   197e0:	b	1984c <__flatcc_fb_gen_c_reader@@Base+0x2398>
   197e4:	bl	198c0 <__flatcc_fb_gen_c_reader@@Base+0x240c>
   197e8:	mov	r2, r0
   197ec:	ldrd	r0, [r5]
   197f0:	stm	sp, {r0, r1}
   197f4:	movw	r1, #52684	; 0xcdcc
   197f8:	movt	r1, #3
   197fc:	b	19830 <__flatcc_fb_gen_c_reader@@Base+0x237c>
   19800:	bl	198c0 <__flatcc_fb_gen_c_reader@@Base+0x240c>
   19804:	mov	r2, r0
   19808:	ldrb	r3, [r5]
   1980c:	movw	r1, #52702	; 0xcdde
   19810:	movt	r1, #3
   19814:	b	1984c <__flatcc_fb_gen_c_reader@@Base+0x2398>
   19818:	bl	198c0 <__flatcc_fb_gen_c_reader@@Base+0x240c>
   1981c:	mov	r2, r0
   19820:	ldrd	r0, [r5]
   19824:	stm	sp, {r0, r1}
   19828:	movw	r1, #52693	; 0xcdd5
   1982c:	movt	r1, #3
   19830:	mov	r0, r4
   19834:	bl	14a2c <sprintf@plt>
   19838:	sub	sp, fp, #8
   1983c:	pop	{r4, r5, fp, pc}
   19840:	vmov	r2, r3, d16
   19844:	movw	r1, #52713	; 0xcde9
   19848:	movt	r1, #3
   1984c:	mov	r0, r4
   19850:	sub	sp, fp, #8
   19854:	pop	{r4, r5, fp, lr}
   19858:	b	14a2c <sprintf@plt>
   1985c:	movw	r0, #8368	; 0x20b0
   19860:	movt	r0, #6
   19864:	ldr	r0, [r0]
   19868:	movw	r1, #52568	; 0xcd58
   1986c:	movt	r1, #3
   19870:	str	r1, [sp]
   19874:	movw	r1, #25975	; 0x6577
   19878:	movt	r1, #3
   1987c:	movw	r4, #52495	; 0xcd0f
   19880:	movt	r4, #3
   19884:	mov	r2, r4
   19888:	mov	r3, #260	; 0x104
   1988c:	bl	149c0 <fprintf@plt>
   19890:	movw	r0, #29885	; 0x74bd
   19894:	movt	r0, #4
   19898:	movw	r3, #52717	; 0xcded
   1989c:	movt	r3, #3
   198a0:	mov	r1, r4
   198a4:	mov	r2, #260	; 0x104
   198a8:	bl	14a80 <__assert_fail@plt>
   198ac:	ldr	r3, [r0, #4]
   198b0:	str	r3, [r1]
   198b4:	ldr	r0, [r0]
   198b8:	str	r0, [r2]
   198bc:	bx	lr
   198c0:	sub	r0, r0, #1
   198c4:	cmp	r0, #9
   198c8:	movwcc	r1, #57024	; 0xdec0
   198cc:	movtcc	r1, #3
   198d0:	ldrcc	r0, [r1, r0, lsl #2]
   198d4:	bxcc	lr
   198d8:	push	{r4, sl, fp, lr}
   198dc:	add	fp, sp, #8
   198e0:	sub	sp, sp, #8
   198e4:	movw	r0, #8368	; 0x20b0
   198e8:	movt	r0, #6
   198ec:	ldr	r0, [r0]
   198f0:	movw	r1, #52568	; 0xcd58
   198f4:	movt	r1, #3
   198f8:	str	r1, [sp]
   198fc:	movw	r1, #25975	; 0x6577
   19900:	movt	r1, #3
   19904:	movw	r4, #52495	; 0xcd0f
   19908:	movt	r4, #3
   1990c:	mov	r2, r4
   19910:	mov	r3, #226	; 0xe2
   19914:	bl	149c0 <fprintf@plt>
   19918:	movw	r0, #29885	; 0x74bd
   1991c:	movt	r0, #4
   19920:	movw	r3, #52819	; 0xce53
   19924:	movt	r3, #3
   19928:	mov	r1, r4
   1992c:	mov	r2, #226	; 0xe2
   19930:	bl	14a80 <__assert_fail@plt>
   19934:	sub	r0, r0, #1
   19938:	cmp	r0, #11
   1993c:	movwcc	r1, #57072	; 0xdef0
   19940:	movtcc	r1, #3
   19944:	ldrcc	r0, [r1, r0, lsl #2]
   19948:	bxcc	lr
   1994c:	push	{r4, sl, fp, lr}
   19950:	add	fp, sp, #8
   19954:	sub	sp, sp, #8
   19958:	movw	r0, #8368	; 0x20b0
   1995c:	movt	r0, #6
   19960:	ldr	r0, [r0]
   19964:	movw	r1, #52568	; 0xcd58
   19968:	movt	r1, #3
   1996c:	str	r1, [sp]
   19970:	movw	r1, #25975	; 0x6577
   19974:	movt	r1, #3
   19978:	movw	r4, #52495	; 0xcd0f
   1997c:	movt	r4, #3
   19980:	mov	r2, r4
   19984:	mov	r3, #96	; 0x60
   19988:	bl	149c0 <fprintf@plt>
   1998c:	movw	r0, #29885	; 0x74bd
   19990:	movt	r0, #4
   19994:	movw	r3, #54920	; 0xd688
   19998:	movt	r3, #3
   1999c:	mov	r1, r4
   199a0:	mov	r2, #96	; 0x60
   199a4:	bl	14a80 <__assert_fail@plt>
   199a8:	sub	r0, r0, #1
   199ac:	cmp	r0, #11
   199b0:	movwcc	r1, #57120	; 0xdf20
   199b4:	movtcc	r1, #3
   199b8:	ldrcc	r0, [r1, r0, lsl #2]
   199bc:	bxcc	lr
   199c0:	push	{r4, sl, fp, lr}
   199c4:	add	fp, sp, #8
   199c8:	sub	sp, sp, #8
   199cc:	movw	r0, #8368	; 0x20b0
   199d0:	movt	r0, #6
   199d4:	ldr	r0, [r0]
   199d8:	movw	r1, #52568	; 0xcd58
   199dc:	movt	r1, #3
   199e0:	str	r1, [sp]
   199e4:	movw	r1, #25975	; 0x6577
   199e8:	movt	r1, #3
   199ec:	movw	r4, #52495	; 0xcd0f
   199f0:	movt	r4, #3
   199f4:	mov	r2, r4
   199f8:	mov	r3, #186	; 0xba
   199fc:	bl	149c0 <fprintf@plt>
   19a00:	movw	r0, #29885	; 0x74bd
   19a04:	movt	r0, #4
   19a08:	movw	r3, #56665	; 0xdd59
   19a0c:	movt	r3, #3
   19a10:	mov	r1, r4
   19a14:	mov	r2, #186	; 0xba
   19a18:	bl	14a80 <__assert_fail@plt>
   19a1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19a20:	add	fp, sp, #24
   19a24:	sub	sp, sp, #472	; 0x1d8
   19a28:	mov	r5, r3
   19a2c:	mov	r6, r2
   19a30:	mov	r7, r1
   19a34:	mov	r4, r0
   19a38:	add	r0, sp, #240	; 0xf0
   19a3c:	mov	r1, #0
   19a40:	mov	r2, #220	; 0xdc
   19a44:	bl	149d8 <memset@plt>
   19a48:	add	r0, sp, #16
   19a4c:	mov	r1, #0
   19a50:	mov	r2, #220	; 0xdc
   19a54:	bl	149d8 <memset@plt>
   19a58:	cmp	r7, #0
   19a5c:	beq	19ae8 <__flatcc_fb_gen_c_reader@@Base+0x2634>
   19a60:	ldrh	r0, [r7, #8]
   19a64:	cmp	r0, #0
   19a68:	beq	19a80 <__flatcc_fb_gen_c_reader@@Base+0x25cc>
   19a6c:	cmp	r0, #1
   19a70:	bne	19af0 <__flatcc_fb_gen_c_reader@@Base+0x263c>
   19a74:	movw	r9, #56726	; 0xdd96
   19a78:	movt	r9, #3
   19a7c:	b	19a88 <__flatcc_fb_gen_c_reader@@Base+0x25d4>
   19a80:	movw	r9, #56719	; 0xdd8f
   19a84:	movt	r9, #3
   19a88:	add	r8, sp, #240	; 0xf0
   19a8c:	mov	r0, r7
   19a90:	mov	r1, r8
   19a94:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   19a98:	ldrh	r0, [r6, #8]
   19a9c:	cmp	r0, #0
   19aa0:	bne	19b40 <__flatcc_fb_gen_c_reader@@Base+0x268c>
   19aa4:	add	r7, sp, #16
   19aa8:	mov	r0, r6
   19aac:	mov	r1, r7
   19ab0:	bl	19630 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   19ab4:	sub	r1, fp, #36	; 0x24
   19ab8:	sub	r2, fp, #32
   19abc:	mov	r0, r5
   19ac0:	bl	1977c <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   19ac4:	ldr	r0, [r4, #204]	; 0xcc
   19ac8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19acc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19ad0:	stm	sp, {r1, r2, r8, r9}
   19ad4:	movw	r1, #56898	; 0xde42
   19ad8:	movt	r1, #3
   19adc:	mov	r2, r4
   19ae0:	mov	r3, r7
   19ae4:	bl	149c0 <fprintf@plt>
   19ae8:	sub	sp, fp, #24
   19aec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19af0:	movw	r0, #8368	; 0x20b0
   19af4:	movt	r0, #6
   19af8:	ldr	r0, [r0]
   19afc:	movw	r1, #56734	; 0xdd9e
   19b00:	movt	r1, #3
   19b04:	str	r1, [sp]
   19b08:	movw	r1, #25975	; 0x6577
   19b0c:	movt	r1, #3
   19b10:	movw	r4, #25986	; 0x6582
   19b14:	movt	r4, #3
   19b18:	mov	r2, r4
   19b1c:	movw	r3, #1339	; 0x53b
   19b20:	bl	149c0 <fprintf@plt>
   19b24:	movw	r0, #29885	; 0x74bd
   19b28:	movt	r0, #4
   19b2c:	movw	r3, #56786	; 0xddd2
   19b30:	movt	r3, #3
   19b34:	mov	r1, r4
   19b38:	movw	r2, #1339	; 0x53b
   19b3c:	bl	14a80 <__assert_fail@plt>
   19b40:	movw	r0, #56867	; 0xde23
   19b44:	movt	r0, #3
   19b48:	movw	r1, #25986	; 0x6582
   19b4c:	movt	r1, #3
   19b50:	movw	r3, #56786	; 0xddd2
   19b54:	movt	r3, #3
   19b58:	movw	r2, #1343	; 0x53f
   19b5c:	bl	14a80 <__assert_fail@plt>

00019b60 <__flatcc_gen_sort@@Base>:
   19b60:	push	{r4, sl, fp, lr}
   19b64:	add	fp, sp, #8
   19b68:	sub	sp, sp, #24
   19b6c:	mov	r4, r0
   19b70:	ldr	r0, [r0, #204]	; 0xcc
   19b74:	movw	r1, #57164	; 0xdf4c
   19b78:	movt	r1, #3
   19b7c:	mov	r2, r4
   19b80:	bl	149c0 <fprintf@plt>
   19b84:	ldr	r0, [r4, #204]	; 0xcc
   19b88:	movw	r1, #58138	; 0xe31a
   19b8c:	movt	r1, #3
   19b90:	mov	r2, r4
   19b94:	mov	r3, r4
   19b98:	bl	149c0 <fprintf@plt>
   19b9c:	ldr	r0, [r4, #204]	; 0xcc
   19ba0:	str	r4, [sp]
   19ba4:	movw	r1, #58410	; 0xe42a
   19ba8:	movt	r1, #3
   19bac:	mov	r2, r4
   19bb0:	mov	r3, r4
   19bb4:	bl	149c0 <fprintf@plt>
   19bb8:	ldr	r0, [r4, #204]	; 0xcc
   19bbc:	str	r4, [sp]
   19bc0:	str	r4, [sp, #4]
   19bc4:	movw	r1, #58622	; 0xe4fe
   19bc8:	movt	r1, #3
   19bcc:	mov	r2, r4
   19bd0:	mov	r3, r4
   19bd4:	bl	149c0 <fprintf@plt>
   19bd8:	ldr	r0, [r4, #204]	; 0xcc
   19bdc:	movw	r1, #58770	; 0xe592
   19be0:	movt	r1, #3
   19be4:	mov	r2, r4
   19be8:	mov	r3, r4
   19bec:	bl	149c0 <fprintf@plt>
   19bf0:	ldr	r0, [r4, #204]	; 0xcc
   19bf4:	str	r4, [sp]
   19bf8:	str	r4, [sp, #4]
   19bfc:	movw	r1, #59177	; 0xe729
   19c00:	movt	r1, #3
   19c04:	mov	r2, r4
   19c08:	mov	r3, r4
   19c0c:	bl	149c0 <fprintf@plt>
   19c10:	ldr	r0, [r4, #204]	; 0xcc
   19c14:	str	r4, [sp]
   19c18:	str	r4, [sp, #4]
   19c1c:	str	r4, [sp, #8]
   19c20:	str	r4, [sp, #12]
   19c24:	movw	r1, #59310	; 0xe7ae
   19c28:	movt	r1, #3
   19c2c:	mov	r2, r4
   19c30:	mov	r3, r4
   19c34:	bl	149c0 <fprintf@plt>
   19c38:	ldr	r0, [r4, #204]	; 0xcc
   19c3c:	str	r4, [sp]
   19c40:	str	r4, [sp, #4]
   19c44:	movw	r1, #59452	; 0xe83c
   19c48:	movt	r1, #3
   19c4c:	mov	r2, r4
   19c50:	mov	r3, r4
   19c54:	bl	149c0 <fprintf@plt>
   19c58:	ldr	r0, [r4, #204]	; 0xcc
   19c5c:	str	r4, [sp]
   19c60:	str	r4, [sp, #4]
   19c64:	str	r4, [sp, #8]
   19c68:	str	r4, [sp, #12]
   19c6c:	str	r4, [sp, #16]
   19c70:	movw	r1, #59549	; 0xe89d
   19c74:	movt	r1, #3
   19c78:	mov	r2, r4
   19c7c:	mov	r3, r4
   19c80:	bl	149c0 <fprintf@plt>
   19c84:	mov	r0, #0
   19c88:	sub	sp, fp, #8
   19c8c:	pop	{r4, sl, fp, pc}

00019c90 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   19c90:	push	{r4, r5, fp, lr}
   19c94:	add	fp, sp, #8
   19c98:	sub	sp, sp, #8
   19c9c:	mov	r5, r0
   19ca0:	ldr	r0, [r0, #204]	; 0xcc
   19ca4:	add	r4, r5, #102	; 0x66
   19ca8:	movw	r1, #59668	; 0xe914
   19cac:	movt	r1, #3
   19cb0:	mov	r2, r4
   19cb4:	bl	149c0 <fprintf@plt>
   19cb8:	ldr	r0, [r5, #204]	; 0xcc
   19cbc:	movw	r1, #59697	; 0xe931
   19cc0:	movt	r1, #3
   19cc4:	mov	r2, r4
   19cc8:	bl	149c0 <fprintf@plt>
   19ccc:	ldr	r3, [r5, #204]	; 0xcc
   19cd0:	movw	r0, #25678	; 0x644e
   19cd4:	movt	r0, #3
   19cd8:	mov	r1, #81	; 0x51
   19cdc:	mov	r2, #1
   19ce0:	bl	14954 <fwrite@plt>
   19ce4:	ldr	r3, [r5, #204]	; 0xcc
   19ce8:	movw	r0, #59726	; 0xe94e
   19cec:	movt	r0, #3
   19cf0:	mov	r1, #53	; 0x35
   19cf4:	mov	r2, #1
   19cf8:	bl	14954 <fwrite@plt>
   19cfc:	mov	r0, r5
   19d00:	bl	1a500 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   19d04:	ldr	r3, [r5, #204]	; 0xcc
   19d08:	movw	r0, #59780	; 0xe984
   19d0c:	movt	r0, #3
   19d10:	mov	r1, #22
   19d14:	mov	r2, #1
   19d18:	bl	14954 <fwrite@plt>
   19d1c:	ldr	r3, [r5, #204]	; 0xcc
   19d20:	movw	r0, #59803	; 0xe99b
   19d24:	movt	r0, #3
   19d28:	mov	r1, #35	; 0x23
   19d2c:	mov	r2, #1
   19d30:	bl	14954 <fwrite@plt>
   19d34:	ldr	r3, [r5, #204]	; 0xcc
   19d38:	movw	r0, #50774	; 0xc656
   19d3c:	movt	r0, #3
   19d40:	mov	r1, #7
   19d44:	mov	r2, #1
   19d48:	bl	14954 <fwrite@plt>
   19d4c:	movw	r1, #59839	; 0xe9bf
   19d50:	movt	r1, #3
   19d54:	mov	r0, r5
   19d58:	bl	148e8 <strcmp@plt>
   19d5c:	cmp	r0, #0
   19d60:	beq	19ddc <__flatcc_fb_gen_common_c_builder_header@@Base+0x14c>
   19d64:	ldr	r0, [r5, #204]	; 0xcc
   19d68:	movw	r1, #59855	; 0xe9cf
   19d6c:	movt	r1, #3
   19d70:	mov	r2, r5
   19d74:	bl	149c0 <fprintf@plt>
   19d78:	ldr	r0, [r5, #204]	; 0xcc
   19d7c:	movw	r1, #59894	; 0xe9f6
   19d80:	movt	r1, #3
   19d84:	mov	r2, r5
   19d88:	bl	149c0 <fprintf@plt>
   19d8c:	ldr	r0, [r5, #204]	; 0xcc
   19d90:	movw	r1, #59933	; 0xea1d
   19d94:	movt	r1, #3
   19d98:	mov	r2, r5
   19d9c:	bl	149c0 <fprintf@plt>
   19da0:	ldr	r0, [r5, #204]	; 0xcc
   19da4:	movw	r1, #59976	; 0xea48
   19da8:	movt	r1, #3
   19dac:	mov	r2, r5
   19db0:	bl	149c0 <fprintf@plt>
   19db4:	ldr	r0, [r5, #204]	; 0xcc
   19db8:	movw	r1, #60027	; 0xea7b
   19dbc:	movt	r1, #3
   19dc0:	mov	r2, r5
   19dc4:	bl	149c0 <fprintf@plt>
   19dc8:	ldr	r0, [r5, #204]	; 0xcc
   19dcc:	movw	r1, #60086	; 0xeab6
   19dd0:	movt	r1, #3
   19dd4:	mov	r2, r5
   19dd8:	bl	149c0 <fprintf@plt>
   19ddc:	ldr	r0, [r5, #204]	; 0xcc
   19de0:	movw	r1, #60174	; 0xeb0e
   19de4:	movt	r1, #3
   19de8:	mov	r2, r5
   19dec:	mov	r3, r5
   19df0:	bl	149c0 <fprintf@plt>
   19df4:	ldr	r0, [r5, #204]	; 0xcc
   19df8:	movw	r1, #60201	; 0xeb29
   19dfc:	movt	r1, #3
   19e00:	mov	r2, r5
   19e04:	mov	r3, r5
   19e08:	bl	149c0 <fprintf@plt>
   19e0c:	movw	r1, #26233	; 0x6679
   19e10:	movt	r1, #3
   19e14:	mov	r0, r5
   19e18:	bl	148e8 <strcmp@plt>
   19e1c:	cmp	r0, #0
   19e20:	beq	19e4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x1bc>
   19e24:	ldr	r0, [r5, #204]	; 0xcc
   19e28:	movw	r1, #60240	; 0xeb50
   19e2c:	movt	r1, #3
   19e30:	mov	r2, r5
   19e34:	bl	149c0 <fprintf@plt>
   19e38:	ldr	r0, [r5, #204]	; 0xcc
   19e3c:	movw	r1, #60289	; 0xeb81
   19e40:	movt	r1, #3
   19e44:	mov	r2, r5
   19e48:	bl	149c0 <fprintf@plt>
   19e4c:	ldr	r1, [r5, #204]	; 0xcc
   19e50:	mov	r0, #10
   19e54:	bl	14a20 <fputc@plt>
   19e58:	ldr	r0, [r5, #204]	; 0xcc
   19e5c:	movw	r1, #60325	; 0xeba5
   19e60:	movt	r1, #3
   19e64:	mov	r2, r5
   19e68:	bl	149c0 <fprintf@plt>
   19e6c:	ldr	r0, [r5, #204]	; 0xcc
   19e70:	movw	r1, #61208	; 0xef18
   19e74:	movt	r1, #3
   19e78:	mov	r2, r5
   19e7c:	bl	149c0 <fprintf@plt>
   19e80:	ldr	r0, [r5, #204]	; 0xcc
   19e84:	str	r5, [sp]
   19e88:	movw	r1, #62945	; 0xf5e1
   19e8c:	movt	r1, #3
   19e90:	mov	r2, r5
   19e94:	mov	r3, r5
   19e98:	bl	149c0 <fprintf@plt>
   19e9c:	ldr	r0, [r5, #204]	; 0xcc
   19ea0:	movw	r1, #63082	; 0xf66a
   19ea4:	movt	r1, #3
   19ea8:	mov	r2, r5
   19eac:	bl	149c0 <fprintf@plt>
   19eb0:	ldr	r0, [r5, #204]	; 0xcc
   19eb4:	movw	r1, #293	; 0x125
   19eb8:	movt	r1, #4
   19ebc:	mov	r2, r5
   19ec0:	bl	149c0 <fprintf@plt>
   19ec4:	ldr	r0, [r5, #204]	; 0xcc
   19ec8:	movw	r1, #1280	; 0x500
   19ecc:	movt	r1, #4
   19ed0:	mov	r2, r5
   19ed4:	bl	149c0 <fprintf@plt>
   19ed8:	ldr	r0, [r5, #204]	; 0xcc
   19edc:	movw	r1, #2870	; 0xb36
   19ee0:	movt	r1, #4
   19ee4:	mov	r2, r5
   19ee8:	bl	149c0 <fprintf@plt>
   19eec:	ldr	r0, [r5, #204]	; 0xcc
   19ef0:	movw	r1, #4018	; 0xfb2
   19ef4:	movt	r1, #4
   19ef8:	mov	r2, r5
   19efc:	mov	r3, r5
   19f00:	bl	149c0 <fprintf@plt>
   19f04:	ldr	r0, [r5, #204]	; 0xcc
   19f08:	str	r5, [sp]
   19f0c:	movw	r1, #5925	; 0x1725
   19f10:	movt	r1, #4
   19f14:	mov	r2, r5
   19f18:	mov	r3, r5
   19f1c:	bl	149c0 <fprintf@plt>
   19f20:	ldr	r0, [r5, #204]	; 0xcc
   19f24:	movw	r1, #7277	; 0x1c6d
   19f28:	movt	r1, #4
   19f2c:	mov	r2, r5
   19f30:	bl	149c0 <fprintf@plt>
   19f34:	ldr	r0, [r5, #204]	; 0xcc
   19f38:	movw	r1, #8427	; 0x20eb
   19f3c:	movt	r1, #4
   19f40:	mov	r2, r5
   19f44:	bl	149c0 <fprintf@plt>
   19f48:	ldr	r0, [r5, #204]	; 0xcc
   19f4c:	movw	r1, #8825	; 0x2279
   19f50:	movt	r1, #4
   19f54:	mov	r2, r5
   19f58:	bl	149c0 <fprintf@plt>
   19f5c:	ldr	r0, [r5, #204]	; 0xcc
   19f60:	movw	r1, #9683	; 0x25d3
   19f64:	movt	r1, #4
   19f68:	mov	r2, r5
   19f6c:	mov	r3, r5
   19f70:	bl	149c0 <fprintf@plt>
   19f74:	ldr	r0, [r5, #204]	; 0xcc
   19f78:	movw	r1, #10200	; 0x27d8
   19f7c:	movt	r1, #4
   19f80:	mov	r2, r5
   19f84:	bl	149c0 <fprintf@plt>
   19f88:	ldr	r0, [r5, #204]	; 0xcc
   19f8c:	str	r5, [sp]
   19f90:	movw	r1, #11073	; 0x2b41
   19f94:	movt	r1, #4
   19f98:	mov	r2, r5
   19f9c:	mov	r3, r5
   19fa0:	bl	149c0 <fprintf@plt>
   19fa4:	ldr	r0, [r5, #204]	; 0xcc
   19fa8:	str	r5, [sp]
   19fac:	str	r5, [sp, #4]
   19fb0:	movw	r1, #12349	; 0x303d
   19fb4:	movt	r1, #4
   19fb8:	mov	r2, r5
   19fbc:	mov	r3, r5
   19fc0:	bl	149c0 <fprintf@plt>
   19fc4:	ldr	r0, [r5, #204]	; 0xcc
   19fc8:	movw	r1, #12614	; 0x3146
   19fcc:	movt	r1, #4
   19fd0:	mov	r2, r5
   19fd4:	mov	r3, r5
   19fd8:	bl	149c0 <fprintf@plt>
   19fdc:	ldr	r0, [r5, #204]	; 0xcc
   19fe0:	str	r5, [sp]
   19fe4:	str	r5, [sp, #4]
   19fe8:	movw	r1, #13486	; 0x34ae
   19fec:	movt	r1, #4
   19ff0:	mov	r2, r5
   19ff4:	mov	r3, r5
   19ff8:	bl	149c0 <fprintf@plt>
   19ffc:	ldr	r0, [r5, #204]	; 0xcc
   1a000:	movw	r1, #15020	; 0x3aac
   1a004:	movt	r1, #4
   1a008:	mov	r2, r5
   1a00c:	mov	r3, r5
   1a010:	bl	149c0 <fprintf@plt>
   1a014:	ldr	r0, [r5, #204]	; 0xcc
   1a018:	movw	r1, #15455	; 0x3c5f
   1a01c:	movt	r1, #4
   1a020:	mov	r2, r5
   1a024:	bl	149c0 <fprintf@plt>
   1a028:	ldr	r0, [r5, #204]	; 0xcc
   1a02c:	movw	r1, #16004	; 0x3e84
   1a030:	movt	r1, #4
   1a034:	mov	r2, r5
   1a038:	bl	149c0 <fprintf@plt>
   1a03c:	ldr	r0, [r5, #204]	; 0xcc
   1a040:	movw	r1, #16964	; 0x4244
   1a044:	movt	r1, #4
   1a048:	mov	r2, r5
   1a04c:	bl	149c0 <fprintf@plt>
   1a050:	ldr	r0, [r5, #204]	; 0xcc
   1a054:	movw	r1, #17665	; 0x4501
   1a058:	movt	r1, #4
   1a05c:	mov	r2, r5
   1a060:	bl	149c0 <fprintf@plt>
   1a064:	ldr	r0, [r5, #204]	; 0xcc
   1a068:	movw	r1, #18709	; 0x4915
   1a06c:	movt	r1, #4
   1a070:	mov	r2, r5
   1a074:	mov	r3, r5
   1a078:	bl	149c0 <fprintf@plt>
   1a07c:	ldr	r0, [r5, #204]	; 0xcc
   1a080:	movw	r1, #18945	; 0x4a01
   1a084:	movt	r1, #4
   1a088:	mov	r2, r5
   1a08c:	bl	149c0 <fprintf@plt>
   1a090:	ldr	r0, [r5, #204]	; 0xcc
   1a094:	movw	r1, #19554	; 0x4c62
   1a098:	movt	r1, #4
   1a09c:	mov	r2, r5
   1a0a0:	bl	149c0 <fprintf@plt>
   1a0a4:	ldr	r0, [r5, #204]	; 0xcc
   1a0a8:	movw	r1, #20441	; 0x4fd9
   1a0ac:	movt	r1, #4
   1a0b0:	mov	r2, r5
   1a0b4:	mov	r3, r5
   1a0b8:	bl	149c0 <fprintf@plt>
   1a0bc:	ldr	r0, [r5, #204]	; 0xcc
   1a0c0:	movw	r1, #21544	; 0x5428
   1a0c4:	movt	r1, #4
   1a0c8:	mov	r2, r5
   1a0cc:	mov	r3, r5
   1a0d0:	bl	149c0 <fprintf@plt>
   1a0d4:	ldr	r0, [r5, #204]	; 0xcc
   1a0d8:	movw	r1, #22208	; 0x56c0
   1a0dc:	movt	r1, #4
   1a0e0:	mov	r2, r5
   1a0e4:	mov	r3, r5
   1a0e8:	bl	149c0 <fprintf@plt>
   1a0ec:	ldr	r0, [r5, #204]	; 0xcc
   1a0f0:	movw	r1, #23228	; 0x5abc
   1a0f4:	movt	r1, #4
   1a0f8:	mov	r2, r5
   1a0fc:	mov	r3, r5
   1a100:	bl	149c0 <fprintf@plt>
   1a104:	ldr	r0, [r5, #204]	; 0xcc
   1a108:	str	r5, [sp]
   1a10c:	movw	r1, #23496	; 0x5bc8
   1a110:	movt	r1, #4
   1a114:	mov	r2, r5
   1a118:	mov	r3, r5
   1a11c:	bl	149c0 <fprintf@plt>
   1a120:	ldr	r0, [r5, #204]	; 0xcc
   1a124:	movw	r1, #23635	; 0x5c53
   1a128:	movt	r1, #4
   1a12c:	mov	r2, r5
   1a130:	mov	r3, r5
   1a134:	bl	149c0 <fprintf@plt>
   1a138:	ldr	r0, [r5, #204]	; 0xcc
   1a13c:	movw	r1, #24479	; 0x5f9f
   1a140:	movt	r1, #4
   1a144:	mov	r2, r5
   1a148:	bl	149c0 <fprintf@plt>
   1a14c:	ldr	r0, [r5, #204]	; 0xcc
   1a150:	movw	r1, #25127	; 0x6227
   1a154:	movt	r1, #4
   1a158:	mov	r2, r5
   1a15c:	bl	149c0 <fprintf@plt>
   1a160:	ldr	r0, [r5, #204]	; 0xcc
   1a164:	movw	r1, #25781	; 0x64b5
   1a168:	movt	r1, #4
   1a16c:	mov	r2, r5
   1a170:	bl	149c0 <fprintf@plt>
   1a174:	ldr	r0, [r5, #204]	; 0xcc
   1a178:	str	r5, [sp]
   1a17c:	movw	r1, #27243	; 0x6a6b
   1a180:	movt	r1, #4
   1a184:	mov	r2, r5
   1a188:	mov	r3, r5
   1a18c:	bl	149c0 <fprintf@plt>
   1a190:	ldr	r0, [r5, #204]	; 0xcc
   1a194:	movw	r1, #27386	; 0x6afa
   1a198:	movt	r1, #4
   1a19c:	mov	r2, r5
   1a1a0:	bl	149c0 <fprintf@plt>
   1a1a4:	ldr	r0, [r5, #204]	; 0xcc
   1a1a8:	movw	r1, #27430	; 0x6b26
   1a1ac:	movt	r1, #4
   1a1b0:	mov	r2, r5
   1a1b4:	bl	149c0 <fprintf@plt>
   1a1b8:	ldr	r0, [r5, #204]	; 0xcc
   1a1bc:	movw	r1, #27464	; 0x6b48
   1a1c0:	movt	r1, #4
   1a1c4:	mov	r2, r5
   1a1c8:	bl	149c0 <fprintf@plt>
   1a1cc:	ldr	r0, [r5, #204]	; 0xcc
   1a1d0:	movw	r1, #27506	; 0x6b72
   1a1d4:	movt	r1, #4
   1a1d8:	mov	r2, r5
   1a1dc:	bl	149c0 <fprintf@plt>
   1a1e0:	ldr	r0, [r5, #204]	; 0xcc
   1a1e4:	movw	r1, #27539	; 0x6b93
   1a1e8:	movt	r1, #4
   1a1ec:	mov	r2, r5
   1a1f0:	mov	r3, r5
   1a1f4:	bl	149c0 <fprintf@plt>
   1a1f8:	ldr	r0, [r5, #204]	; 0xcc
   1a1fc:	movw	r1, #27583	; 0x6bbf
   1a200:	movt	r1, #4
   1a204:	mov	r2, r5
   1a208:	bl	149c0 <fprintf@plt>
   1a20c:	ldr	r0, [r5, #204]	; 0xcc
   1a210:	movw	r1, #27616	; 0x6be0
   1a214:	movt	r1, #4
   1a218:	mov	r2, r5
   1a21c:	bl	149c0 <fprintf@plt>
   1a220:	ldr	r0, [r5, #204]	; 0xcc
   1a224:	movw	r1, #27662	; 0x6c0e
   1a228:	movt	r1, #4
   1a22c:	mov	r2, r5
   1a230:	bl	149c0 <fprintf@plt>
   1a234:	ldr	r0, [r5, #204]	; 0xcc
   1a238:	movw	r1, #27697	; 0x6c31
   1a23c:	movt	r1, #4
   1a240:	mov	r2, r5
   1a244:	bl	149c0 <fprintf@plt>
   1a248:	ldr	r0, [r5, #204]	; 0xcc
   1a24c:	movw	r1, #27743	; 0x6c5f
   1a250:	movt	r1, #4
   1a254:	mov	r2, r5
   1a258:	bl	149c0 <fprintf@plt>
   1a25c:	ldr	r0, [r5, #204]	; 0xcc
   1a260:	movw	r1, #27778	; 0x6c82
   1a264:	movt	r1, #4
   1a268:	mov	r2, r5
   1a26c:	bl	149c0 <fprintf@plt>
   1a270:	ldr	r0, [r5, #204]	; 0xcc
   1a274:	movw	r1, #27824	; 0x6cb0
   1a278:	movt	r1, #4
   1a27c:	mov	r2, r5
   1a280:	bl	149c0 <fprintf@plt>
   1a284:	ldr	r0, [r5, #204]	; 0xcc
   1a288:	movw	r1, #27859	; 0x6cd3
   1a28c:	movt	r1, #4
   1a290:	mov	r2, r5
   1a294:	bl	149c0 <fprintf@plt>
   1a298:	ldr	r0, [r5, #204]	; 0xcc
   1a29c:	movw	r1, #27903	; 0x6cff
   1a2a0:	movt	r1, #4
   1a2a4:	mov	r2, r5
   1a2a8:	bl	149c0 <fprintf@plt>
   1a2ac:	ldr	r0, [r5, #204]	; 0xcc
   1a2b0:	movw	r1, #27937	; 0x6d21
   1a2b4:	movt	r1, #4
   1a2b8:	mov	r2, r5
   1a2bc:	bl	149c0 <fprintf@plt>
   1a2c0:	ldr	r0, [r5, #204]	; 0xcc
   1a2c4:	movw	r1, #27981	; 0x6d4d
   1a2c8:	movt	r1, #4
   1a2cc:	mov	r2, r5
   1a2d0:	bl	149c0 <fprintf@plt>
   1a2d4:	ldr	r0, [r5, #204]	; 0xcc
   1a2d8:	movw	r1, #28015	; 0x6d6f
   1a2dc:	movt	r1, #4
   1a2e0:	mov	r2, r5
   1a2e4:	bl	149c0 <fprintf@plt>
   1a2e8:	ldr	r0, [r5, #204]	; 0xcc
   1a2ec:	movw	r1, #28059	; 0x6d9b
   1a2f0:	movt	r1, #4
   1a2f4:	mov	r2, r5
   1a2f8:	bl	149c0 <fprintf@plt>
   1a2fc:	ldr	r0, [r5, #204]	; 0xcc
   1a300:	movw	r1, #28093	; 0x6dbd
   1a304:	movt	r1, #4
   1a308:	mov	r2, r5
   1a30c:	bl	149c0 <fprintf@plt>
   1a310:	ldr	r0, [r5, #204]	; 0xcc
   1a314:	movw	r1, #28135	; 0x6de7
   1a318:	movt	r1, #4
   1a31c:	mov	r2, r5
   1a320:	bl	149c0 <fprintf@plt>
   1a324:	ldr	r0, [r5, #204]	; 0xcc
   1a328:	movw	r1, #28169	; 0x6e09
   1a32c:	movt	r1, #4
   1a330:	mov	r2, r5
   1a334:	bl	149c0 <fprintf@plt>
   1a338:	ldr	r0, [r5, #204]	; 0xcc
   1a33c:	movw	r1, #28213	; 0x6e35
   1a340:	movt	r1, #4
   1a344:	mov	r2, r5
   1a348:	bl	149c0 <fprintf@plt>
   1a34c:	ldr	r1, [r5, #204]	; 0xcc
   1a350:	mov	r0, #10
   1a354:	bl	14a20 <fputc@plt>
   1a358:	ldr	r0, [r5, #204]	; 0xcc
   1a35c:	str	r5, [sp]
   1a360:	movw	r1, #28248	; 0x6e58
   1a364:	movt	r1, #4
   1a368:	mov	r2, r5
   1a36c:	mov	r3, r5
   1a370:	bl	149c0 <fprintf@plt>
   1a374:	ldr	r0, [r5, #204]	; 0xcc
   1a378:	str	r5, [sp]
   1a37c:	movw	r1, #28288	; 0x6e80
   1a380:	movt	r1, #4
   1a384:	mov	r2, r5
   1a388:	mov	r3, r5
   1a38c:	bl	149c0 <fprintf@plt>
   1a390:	ldr	r0, [r5, #204]	; 0xcc
   1a394:	str	r5, [sp]
   1a398:	str	r5, [sp, #4]
   1a39c:	movw	r1, #28326	; 0x6ea6
   1a3a0:	movt	r1, #4
   1a3a4:	mov	r2, r5
   1a3a8:	mov	r3, r5
   1a3ac:	bl	149c0 <fprintf@plt>
   1a3b0:	ldr	r0, [r5, #204]	; 0xcc
   1a3b4:	str	r5, [sp]
   1a3b8:	movw	r1, #28366	; 0x6ece
   1a3bc:	movt	r1, #4
   1a3c0:	mov	r2, r5
   1a3c4:	mov	r3, r5
   1a3c8:	bl	149c0 <fprintf@plt>
   1a3cc:	ldr	r0, [r5, #204]	; 0xcc
   1a3d0:	str	r5, [sp]
   1a3d4:	movw	r1, #28408	; 0x6ef8
   1a3d8:	movt	r1, #4
   1a3dc:	mov	r2, r5
   1a3e0:	mov	r3, r5
   1a3e4:	bl	149c0 <fprintf@plt>
   1a3e8:	ldr	r0, [r5, #204]	; 0xcc
   1a3ec:	str	r5, [sp]
   1a3f0:	movw	r1, #28450	; 0x6f22
   1a3f4:	movt	r1, #4
   1a3f8:	mov	r2, r5
   1a3fc:	mov	r3, r5
   1a400:	bl	149c0 <fprintf@plt>
   1a404:	ldr	r0, [r5, #204]	; 0xcc
   1a408:	str	r5, [sp]
   1a40c:	movw	r1, #28492	; 0x6f4c
   1a410:	movt	r1, #4
   1a414:	mov	r2, r5
   1a418:	mov	r3, r5
   1a41c:	bl	149c0 <fprintf@plt>
   1a420:	ldr	r0, [r5, #204]	; 0xcc
   1a424:	str	r5, [sp]
   1a428:	movw	r1, #28532	; 0x6f74
   1a42c:	movt	r1, #4
   1a430:	mov	r2, r5
   1a434:	mov	r3, r5
   1a438:	bl	149c0 <fprintf@plt>
   1a43c:	ldr	r0, [r5, #204]	; 0xcc
   1a440:	str	r5, [sp]
   1a444:	movw	r1, #28572	; 0x6f9c
   1a448:	movt	r1, #4
   1a44c:	mov	r2, r5
   1a450:	mov	r3, r5
   1a454:	bl	149c0 <fprintf@plt>
   1a458:	ldr	r0, [r5, #204]	; 0xcc
   1a45c:	str	r5, [sp]
   1a460:	movw	r1, #28612	; 0x6fc4
   1a464:	movt	r1, #4
   1a468:	mov	r2, r5
   1a46c:	mov	r3, r5
   1a470:	bl	149c0 <fprintf@plt>
   1a474:	ldr	r0, [r5, #204]	; 0xcc
   1a478:	str	r5, [sp]
   1a47c:	movw	r1, #28650	; 0x6fea
   1a480:	movt	r1, #4
   1a484:	mov	r2, r5
   1a488:	mov	r3, r5
   1a48c:	bl	149c0 <fprintf@plt>
   1a490:	ldr	r1, [r5, #204]	; 0xcc
   1a494:	mov	r0, #10
   1a498:	bl	14a20 <fputc@plt>
   1a49c:	ldr	r0, [r5, #204]	; 0xcc
   1a4a0:	movw	r1, #28690	; 0x7012
   1a4a4:	movt	r1, #4
   1a4a8:	mov	r2, r5
   1a4ac:	mov	r3, r5
   1a4b0:	bl	149c0 <fprintf@plt>
   1a4b4:	ldr	r1, [r5, #204]	; 0xcc
   1a4b8:	mov	r0, #10
   1a4bc:	bl	14a20 <fputc@plt>
   1a4c0:	ldr	r0, [r5, #204]	; 0xcc
   1a4c4:	movw	r1, #28712	; 0x7028
   1a4c8:	movt	r1, #4
   1a4cc:	mov	r2, r5
   1a4d0:	mov	r3, r5
   1a4d4:	bl	149c0 <fprintf@plt>
   1a4d8:	mov	r0, r5
   1a4dc:	bl	1a528 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1a4e0:	ldr	r0, [r5, #204]	; 0xcc
   1a4e4:	movw	r1, #28734	; 0x703e
   1a4e8:	movt	r1, #4
   1a4ec:	mov	r2, r4
   1a4f0:	bl	149c0 <fprintf@plt>
   1a4f4:	mov	r0, #0
   1a4f8:	sub	sp, fp, #8
   1a4fc:	pop	{r4, r5, fp, pc}
   1a500:	ldr	r1, [r0, #212]	; 0xd4
   1a504:	ldr	r1, [r1, #140]	; 0x8c
   1a508:	cmp	r1, #0
   1a50c:	bxeq	lr
   1a510:	ldr	r3, [r0, #204]	; 0xcc
   1a514:	movw	r0, #26154	; 0x662a
   1a518:	movt	r0, #3
   1a51c:	mov	r1, #36	; 0x24
   1a520:	mov	r2, #1
   1a524:	b	14954 <fwrite@plt>
   1a528:	ldr	r1, [r0, #212]	; 0xd4
   1a52c:	ldr	r1, [r1, #140]	; 0x8c
   1a530:	cmp	r1, #0
   1a534:	bxeq	lr
   1a538:	ldr	r3, [r0, #204]	; 0xcc
   1a53c:	movw	r0, #50196	; 0xc414
   1a540:	movt	r0, #3
   1a544:	mov	r1, #36	; 0x24
   1a548:	mov	r2, #1
   1a54c:	b	14954 <fwrite@plt>

0001a550 <__flatcc_fb_gen_c_builder@@Base>:
   1a550:	push	{r4, sl, fp, lr}
   1a554:	add	fp, sp, #8
   1a558:	mov	r4, r0
   1a55c:	bl	1a588 <__flatcc_fb_gen_c_builder@@Base+0x38>
   1a560:	mov	r0, r4
   1a564:	bl	1a714 <__flatcc_fb_gen_c_builder@@Base+0x1c4>
   1a568:	mov	r0, r4
   1a56c:	bl	1a7d4 <__flatcc_fb_gen_c_builder@@Base+0x284>
   1a570:	mov	r0, r4
   1a574:	bl	1a814 <__flatcc_fb_gen_c_builder@@Base+0x2c4>
   1a578:	mov	r0, r4
   1a57c:	bl	1a930 <__flatcc_fb_gen_c_builder@@Base+0x3e0>
   1a580:	mov	r0, #0
   1a584:	pop	{r4, sl, fp, pc}
   1a588:	push	{r4, r5, fp, lr}
   1a58c:	add	fp, sp, #8
   1a590:	sub	sp, sp, #8
   1a594:	mov	r4, r0
   1a598:	ldr	r0, [r0, #204]	; 0xcc
   1a59c:	ldr	r1, [r4, #208]	; 0xd0
   1a5a0:	ldr	r2, [r1, #164]	; 0xa4
   1a5a4:	movw	r1, #28768	; 0x7060
   1a5a8:	movt	r1, #4
   1a5ac:	mov	r3, r2
   1a5b0:	bl	149c0 <fprintf@plt>
   1a5b4:	ldr	r3, [r4, #204]	; 0xcc
   1a5b8:	movw	r0, #25678	; 0x644e
   1a5bc:	movt	r0, #3
   1a5c0:	mov	r1, #81	; 0x51
   1a5c4:	mov	r2, #1
   1a5c8:	bl	14954 <fwrite@plt>
   1a5cc:	ldr	r0, [r4, #204]	; 0xcc
   1a5d0:	ldr	r1, [r4, #208]	; 0xd0
   1a5d4:	ldr	r2, [r1, #164]	; 0xa4
   1a5d8:	movw	r1, #28811	; 0x708b
   1a5dc:	movt	r1, #4
   1a5e0:	bl	149c0 <fprintf@plt>
   1a5e4:	ldr	r0, [r4, #204]	; 0xcc
   1a5e8:	ldr	r1, [r4, #208]	; 0xd0
   1a5ec:	ldr	r2, [r1, #160]	; 0xa0
   1a5f0:	movw	r1, #28832	; 0x70a0
   1a5f4:	movt	r1, #4
   1a5f8:	bl	149c0 <fprintf@plt>
   1a5fc:	ldr	r3, [r4, #204]	; 0xcc
   1a600:	movw	r5, #50774	; 0xc656
   1a604:	movt	r5, #3
   1a608:	mov	r0, r5
   1a60c:	mov	r1, #7
   1a610:	mov	r2, #1
   1a614:	bl	14954 <fwrite@plt>
   1a618:	ldr	r0, [r4, #204]	; 0xcc
   1a61c:	add	r2, r4, #102	; 0x66
   1a620:	movw	r1, #59668	; 0xe914
   1a624:	movt	r1, #3
   1a628:	bl	149c0 <fprintf@plt>
   1a62c:	ldr	r0, [r4, #204]	; 0xcc
   1a630:	movw	r1, #28856	; 0x70b8
   1a634:	movt	r1, #4
   1a638:	mov	r2, r4
   1a63c:	bl	149c0 <fprintf@plt>
   1a640:	ldr	r3, [r4, #204]	; 0xcc
   1a644:	mov	r0, r5
   1a648:	mov	r1, #7
   1a64c:	mov	r2, #1
   1a650:	bl	14954 <fwrite@plt>
   1a654:	movw	r1, #52777	; 0xce29
   1a658:	movt	r1, #4
   1a65c:	movw	r2, #28887	; 0x70d7
   1a660:	movt	r2, #4
   1a664:	mov	r0, r4
   1a668:	bl	16624 <__flatcc_fb_gen_c_includes@@Base>
   1a66c:	mov	r0, r4
   1a670:	bl	1a500 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1a674:	ldr	r0, [r4, #204]	; 0xcc
   1a678:	ldr	r1, [r4, #208]	; 0xd0
   1a67c:	ldrh	r2, [r1, #16]
   1a680:	cmp	r2, #2
   1a684:	bne	1a6a0 <__flatcc_fb_gen_c_builder@@Base+0x150>
   1a688:	ldrd	r2, [r1, #8]
   1a68c:	str	r3, [sp]
   1a690:	str	r2, [sp, #4]
   1a694:	movw	r1, #50891	; 0xc6cb
   1a698:	movt	r1, #3
   1a69c:	b	1a6a8 <__flatcc_fb_gen_c_builder@@Base+0x158>
   1a6a0:	movw	r1, #50940	; 0xc6fc
   1a6a4:	movt	r1, #3
   1a6a8:	mov	r2, r4
   1a6ac:	mov	r3, r4
   1a6b0:	bl	149c0 <fprintf@plt>
   1a6b4:	ldr	r0, [r4, #204]	; 0xcc
   1a6b8:	ldr	r1, [r4, #208]	; 0xd0
   1a6bc:	ldrh	r2, [r1, #32]
   1a6c0:	cmp	r2, #2
   1a6c4:	bne	1a6e0 <__flatcc_fb_gen_c_builder@@Base+0x190>
   1a6c8:	ldrd	r2, [r1, #24]
   1a6cc:	str	r3, [sp]
   1a6d0:	str	r2, [sp, #4]
   1a6d4:	movw	r1, #50992	; 0xc730
   1a6d8:	movt	r1, #3
   1a6dc:	b	1a6f4 <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   1a6e0:	ldr	r1, [r4, #212]	; 0xd4
   1a6e4:	ldr	r1, [r1, #104]	; 0x68
   1a6e8:	str	r1, [sp]
   1a6ec:	movw	r1, #51040	; 0xc760
   1a6f0:	movt	r1, #3
   1a6f4:	mov	r2, r4
   1a6f8:	mov	r3, r4
   1a6fc:	bl	149c0 <fprintf@plt>
   1a700:	ldr	r1, [r4, #204]	; 0xcc
   1a704:	mov	r0, #10
   1a708:	sub	sp, fp, #8
   1a70c:	pop	{r4, r5, fp, lr}
   1a710:	b	14a20 <fputc@plt>
   1a714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a718:	add	fp, sp, #24
   1a71c:	sub	sp, sp, #232	; 0xe8
   1a720:	mov	r4, r0
   1a724:	add	r5, sp, #8
   1a728:	mov	r7, #0
   1a72c:	mov	r0, r5
   1a730:	mov	r1, #0
   1a734:	mov	r2, #220	; 0xdc
   1a738:	bl	149d8 <memset@plt>
   1a73c:	ldr	r0, [r4, #208]	; 0xd0
   1a740:	ldr	r6, [r0, #40]	; 0x28
   1a744:	cmp	r6, #0
   1a748:	beq	1a7cc <__flatcc_fb_gen_c_builder@@Base+0x27c>
   1a74c:	movw	r8, #28898	; 0x70e2
   1a750:	movt	r8, #4
   1a754:	movw	r9, #28967	; 0x7127
   1a758:	movt	r9, #4
   1a75c:	ldrh	r0, [r6, #8]
   1a760:	cmp	r0, #3
   1a764:	bne	1a7ac <__flatcc_fb_gen_c_builder@@Base+0x25c>
   1a768:	mov	r0, r6
   1a76c:	mov	r1, r5
   1a770:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1a774:	ldr	r0, [r4, #204]	; 0xcc
   1a778:	str	r5, [sp]
   1a77c:	mov	r1, r8
   1a780:	mov	r2, r5
   1a784:	mov	r3, r5
   1a788:	bl	149c0 <fprintf@plt>
   1a78c:	ldr	r0, [r4, #204]	; 0xcc
   1a790:	str	r5, [sp]
   1a794:	str	r5, [sp, #4]
   1a798:	mov	r1, r9
   1a79c:	mov	r2, r4
   1a7a0:	mov	r3, r4
   1a7a4:	bl	149c0 <fprintf@plt>
   1a7a8:	mov	r7, #1
   1a7ac:	ldr	r6, [r6]
   1a7b0:	cmp	r6, #0
   1a7b4:	bne	1a75c <__flatcc_fb_gen_c_builder@@Base+0x20c>
   1a7b8:	cmp	r7, #0
   1a7bc:	beq	1a7cc <__flatcc_fb_gen_c_builder@@Base+0x27c>
   1a7c0:	ldr	r1, [r4, #204]	; 0xcc
   1a7c4:	mov	r0, #10
   1a7c8:	bl	14a20 <fputc@plt>
   1a7cc:	sub	sp, fp, #24
   1a7d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a7d4:	push	{r4, r5, fp, lr}
   1a7d8:	add	fp, sp, #8
   1a7dc:	mov	r4, r0
   1a7e0:	ldr	r0, [r0, #208]	; 0xd0
   1a7e4:	ldr	r5, [r0, #44]	; 0x2c
   1a7e8:	b	1a808 <__flatcc_fb_gen_c_builder@@Base+0x2b8>
   1a7ec:	mov	r0, r4
   1a7f0:	mov	r1, r5
   1a7f4:	bl	1a96c <__flatcc_fb_gen_c_builder@@Base+0x41c>
   1a7f8:	ldr	r1, [r4, #204]	; 0xcc
   1a7fc:	mov	r0, #10
   1a800:	bl	14a20 <fputc@plt>
   1a804:	ldr	r5, [r5, #120]	; 0x78
   1a808:	cmp	r5, #0
   1a80c:	popeq	{r4, r5, fp, pc}
   1a810:	b	1a7ec <__flatcc_fb_gen_c_builder@@Base+0x29c>
   1a814:	push	{r4, r5, r6, sl, fp, lr}
   1a818:	add	fp, sp, #16
   1a81c:	mov	r4, r0
   1a820:	bl	1b548 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   1a824:	ldr	r0, [r4, #208]	; 0xd0
   1a828:	ldr	r5, [r0, #40]	; 0x28
   1a82c:	mov	r6, #0
   1a830:	cmp	r5, #0
   1a834:	bne	1a848 <__flatcc_fb_gen_c_builder@@Base+0x2f8>
   1a838:	b	1a874 <__flatcc_fb_gen_c_builder@@Base+0x324>
   1a83c:	ldr	r5, [r5]
   1a840:	cmp	r5, #0
   1a844:	beq	1a874 <__flatcc_fb_gen_c_builder@@Base+0x324>
   1a848:	ldrh	r0, [r5, #8]
   1a84c:	cmp	r0, #0
   1a850:	bne	1a83c <__flatcc_fb_gen_c_builder@@Base+0x2ec>
   1a854:	mov	r0, r4
   1a858:	mov	r1, r5
   1a85c:	bl	1b5e4 <__flatcc_fb_gen_c_builder@@Base+0x1094>
   1a860:	mov	r0, r4
   1a864:	mov	r1, r5
   1a868:	bl	1b6ec <__flatcc_fb_gen_c_builder@@Base+0x119c>
   1a86c:	mov	r6, #1
   1a870:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x2ec>
   1a874:	ldr	r0, [r4, #208]	; 0xd0
   1a878:	ldr	r5, [r0, #40]	; 0x28
   1a87c:	cmp	r5, #0
   1a880:	bne	1a894 <__flatcc_fb_gen_c_builder@@Base+0x344>
   1a884:	b	1a8b0 <__flatcc_fb_gen_c_builder@@Base+0x360>
   1a888:	ldr	r5, [r5]
   1a88c:	cmp	r5, #0
   1a890:	beq	1a8b0 <__flatcc_fb_gen_c_builder@@Base+0x360>
   1a894:	ldrh	r0, [r5, #8]
   1a898:	cmp	r0, #0
   1a89c:	bne	1a888 <__flatcc_fb_gen_c_builder@@Base+0x338>
   1a8a0:	mov	r0, r4
   1a8a4:	mov	r1, r5
   1a8a8:	bl	1b750 <__flatcc_fb_gen_c_builder@@Base+0x1200>
   1a8ac:	b	1a888 <__flatcc_fb_gen_c_builder@@Base+0x338>
   1a8b0:	cmp	r6, #0
   1a8b4:	beq	1a924 <__flatcc_fb_gen_c_builder@@Base+0x3d4>
   1a8b8:	ldr	r1, [r4, #204]	; 0xcc
   1a8bc:	mov	r0, #10
   1a8c0:	bl	14a20 <fputc@plt>
   1a8c4:	mov	r0, r4
   1a8c8:	bl	1b80c <__flatcc_fb_gen_c_builder@@Base+0x12bc>
   1a8cc:	ldr	r0, [r4, #208]	; 0xd0
   1a8d0:	ldr	r5, [r0, #40]	; 0x28
   1a8d4:	b	1a8dc <__flatcc_fb_gen_c_builder@@Base+0x38c>
   1a8d8:	ldr	r5, [r5]
   1a8dc:	cmp	r5, #0
   1a8e0:	popeq	{r4, r5, r6, sl, fp, pc}
   1a8e4:	ldrh	r0, [r5, #8]
   1a8e8:	cmp	r0, #0
   1a8ec:	bne	1a8d8 <__flatcc_fb_gen_c_builder@@Base+0x388>
   1a8f0:	mov	r0, r4
   1a8f4:	mov	r1, r5
   1a8f8:	bl	1b870 <__flatcc_fb_gen_c_builder@@Base+0x1320>
   1a8fc:	mov	r0, r4
   1a900:	mov	r1, r5
   1a904:	bl	1bfb0 <__flatcc_fb_gen_c_builder@@Base+0x1a60>
   1a908:	mov	r0, r4
   1a90c:	mov	r1, r5
   1a910:	bl	1c1c0 <__flatcc_fb_gen_c_builder@@Base+0x1c70>
   1a914:	ldr	r1, [r4, #204]	; 0xcc
   1a918:	mov	r0, #10
   1a91c:	bl	14a20 <fputc@plt>
   1a920:	b	1a8d8 <__flatcc_fb_gen_c_builder@@Base+0x388>
   1a924:	mov	r0, r4
   1a928:	pop	{r4, r5, r6, sl, fp, lr}
   1a92c:	b	1b80c <__flatcc_fb_gen_c_builder@@Base+0x12bc>
   1a930:	push	{r4, sl, fp, lr}
   1a934:	add	fp, sp, #8
   1a938:	mov	r4, r0
   1a93c:	bl	1a528 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1a940:	ldr	r0, [r4, #204]	; 0xcc
   1a944:	ldr	r1, [r4, #208]	; 0xd0
   1a948:	ldr	r2, [r1, #164]	; 0xa4
   1a94c:	movw	r1, #32992	; 0x80e0
   1a950:	movt	r1, #4
   1a954:	pop	{r4, sl, fp, lr}
   1a958:	b	149c0 <fprintf@plt>
   1a95c:	mov	r2, r1
   1a960:	mov	r1, r0
   1a964:	ldr	r0, [r0, #12]
   1a968:	b	16808 <__flatcc_fb_scoped_symbol_name@@Base>
   1a96c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a970:	add	fp, sp, #28
   1a974:	sub	sp, sp, #260	; 0x104
   1a978:	mov	r6, r1
   1a97c:	mov	r4, r0
   1a980:	add	r5, sp, #32
   1a984:	mov	r9, #0
   1a988:	mov	r0, r5
   1a98c:	mov	r1, #0
   1a990:	mov	r2, #220	; 0xdc
   1a994:	bl	149d8 <memset@plt>
   1a998:	ldrh	r0, [r6, #8]
   1a99c:	cmp	r0, #1
   1a9a0:	bne	1ad10 <__flatcc_fb_gen_c_builder@@Base+0x7c0>
   1a9a4:	mov	r0, r6
   1a9a8:	mov	r1, r5
   1a9ac:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1a9b0:	mov	r0, r6
   1a9b4:	bl	1ad30 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1a9b8:	mov	r7, r0
   1a9bc:	ldr	r0, [r4, #204]	; 0xcc
   1a9c0:	movw	r1, #29146	; 0x71da
   1a9c4:	movt	r1, #4
   1a9c8:	mov	r2, r5
   1a9cc:	bl	149c0 <fprintf@plt>
   1a9d0:	mov	r0, #1
   1a9d4:	str	r0, [sp]
   1a9d8:	mov	r8, #1
   1a9dc:	mov	r0, r4
   1a9e0:	mov	r1, r6
   1a9e4:	mov	r2, #0
   1a9e8:	mov	r3, r7
   1a9ec:	bl	1ad94 <__flatcc_fb_gen_c_builder@@Base+0x844>
   1a9f0:	ldr	r0, [r4, #204]	; 0xcc
   1a9f4:	movw	r1, #29172	; 0x71f4
   1a9f8:	movt	r1, #4
   1a9fc:	mov	r2, r5
   1aa00:	bl	149c0 <fprintf@plt>
   1aa04:	str	r8, [sp]
   1aa08:	mov	r0, r4
   1aa0c:	mov	r1, r6
   1aa10:	mov	r2, #0
   1aa14:	mov	r3, r7
   1aa18:	bl	1af20 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   1aa1c:	ldr	r1, [r4, #204]	; 0xcc
   1aa20:	mov	r0, #10
   1aa24:	bl	14a20 <fputc@plt>
   1aa28:	ldr	r0, [r4, #204]	; 0xcc
   1aa2c:	str	r5, [sp]
   1aa30:	movw	r1, #29197	; 0x720d
   1aa34:	movt	r1, #4
   1aa38:	mov	r2, r5
   1aa3c:	mov	r3, r5
   1aa40:	bl	149c0 <fprintf@plt>
   1aa44:	str	r9, [sp]
   1aa48:	mov	r0, r4
   1aa4c:	mov	r1, r6
   1aa50:	mov	r2, #0
   1aa54:	mov	r3, r7
   1aa58:	bl	1ad94 <__flatcc_fb_gen_c_builder@@Base+0x844>
   1aa5c:	ldr	r3, [r4, #204]	; 0xcc
   1aa60:	movw	r0, #29235	; 0x7233
   1aa64:	movt	r0, #4
   1aa68:	mov	r1, #4
   1aa6c:	mov	r2, #1
   1aa70:	bl	14954 <fwrite@plt>
   1aa74:	str	r9, [sp]
   1aa78:	mov	r0, r4
   1aa7c:	mov	r1, r6
   1aa80:	mov	r2, r7
   1aa84:	mov	r3, #0
   1aa88:	bl	1af9c <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1aa8c:	ldr	r3, [r4, #204]	; 0xcc
   1aa90:	movw	r8, #53177	; 0xcfb9
   1aa94:	movt	r8, #3
   1aa98:	mov	r0, r8
   1aa9c:	mov	r1, #12
   1aaa0:	mov	r2, #1
   1aaa4:	bl	14954 <fwrite@plt>
   1aaa8:	ldr	r0, [r4, #204]	; 0xcc
   1aaac:	str	r5, [sp]
   1aab0:	str	r5, [sp, #4]
   1aab4:	movw	r1, #29240	; 0x7238
   1aab8:	movt	r1, #4
   1aabc:	mov	r2, r5
   1aac0:	mov	r3, r5
   1aac4:	bl	149c0 <fprintf@plt>
   1aac8:	ldr	r3, [r4, #204]	; 0xcc
   1aacc:	movw	r9, #29237	; 0x7235
   1aad0:	movt	r9, #4
   1aad4:	mov	r0, r9
   1aad8:	mov	sl, #0
   1aadc:	mov	r1, #2
   1aae0:	mov	r2, #1
   1aae4:	bl	14954 <fwrite@plt>
   1aae8:	mov	r0, #1
   1aaec:	str	r0, [sp]
   1aaf0:	mov	r0, r4
   1aaf4:	mov	r1, r6
   1aaf8:	mov	r2, r7
   1aafc:	mov	r3, #0
   1ab00:	bl	1af9c <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1ab04:	ldr	r3, [r4, #204]	; 0xcc
   1ab08:	mov	r0, r8
   1ab0c:	mov	r1, #12
   1ab10:	mov	r2, #1
   1ab14:	bl	14954 <fwrite@plt>
   1ab18:	ldr	r0, [r4, #204]	; 0xcc
   1ab1c:	str	r5, [sp]
   1ab20:	movw	r1, #29294	; 0x726e
   1ab24:	movt	r1, #4
   1ab28:	mov	r2, r5
   1ab2c:	mov	r3, r5
   1ab30:	bl	149c0 <fprintf@plt>
   1ab34:	str	sl, [sp]
   1ab38:	mov	r0, r4
   1ab3c:	mov	r1, r6
   1ab40:	mov	r2, #0
   1ab44:	mov	r3, r7
   1ab48:	bl	1ad94 <__flatcc_fb_gen_c_builder@@Base+0x844>
   1ab4c:	ldr	r3, [r4, #204]	; 0xcc
   1ab50:	movw	r0, #29235	; 0x7233
   1ab54:	movt	r0, #4
   1ab58:	mov	r1, #4
   1ab5c:	mov	r2, #1
   1ab60:	bl	14954 <fwrite@plt>
   1ab64:	str	sl, [sp]
   1ab68:	mov	r0, r4
   1ab6c:	mov	r1, r6
   1ab70:	mov	r2, r7
   1ab74:	mov	r3, #2
   1ab78:	bl	1af9c <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1ab7c:	ldr	r3, [r4, #204]	; 0xcc
   1ab80:	mov	r0, r8
   1ab84:	mov	r1, #12
   1ab88:	mov	r2, #1
   1ab8c:	bl	14954 <fwrite@plt>
   1ab90:	ldr	r0, [r4, #204]	; 0xcc
   1ab94:	str	r5, [sp]
   1ab98:	str	r5, [sp, #4]
   1ab9c:	movw	r1, #29338	; 0x729a
   1aba0:	movt	r1, #4
   1aba4:	mov	r2, r5
   1aba8:	mov	r3, r5
   1abac:	bl	149c0 <fprintf@plt>
   1abb0:	ldr	r3, [r4, #204]	; 0xcc
   1abb4:	mov	r0, r9
   1abb8:	mov	r1, #2
   1abbc:	mov	r2, #1
   1abc0:	bl	14954 <fwrite@plt>
   1abc4:	mov	r0, #1
   1abc8:	str	r0, [sp]
   1abcc:	mov	r0, r4
   1abd0:	mov	r1, r6
   1abd4:	mov	r2, r7
   1abd8:	mov	r3, #2
   1abdc:	bl	1af9c <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1abe0:	ldr	r3, [r4, #204]	; 0xcc
   1abe4:	mov	r0, r8
   1abe8:	mov	r1, #12
   1abec:	mov	r2, #1
   1abf0:	bl	14954 <fwrite@plt>
   1abf4:	ldr	r0, [r4, #204]	; 0xcc
   1abf8:	str	r5, [sp]
   1abfc:	movw	r1, #29398	; 0x72d6
   1ac00:	movt	r1, #4
   1ac04:	mov	r2, r5
   1ac08:	mov	r3, r5
   1ac0c:	bl	149c0 <fprintf@plt>
   1ac10:	str	sl, [sp]
   1ac14:	mov	r0, r4
   1ac18:	mov	r1, r6
   1ac1c:	mov	r2, #0
   1ac20:	mov	r3, r7
   1ac24:	bl	1ad94 <__flatcc_fb_gen_c_builder@@Base+0x844>
   1ac28:	ldr	r3, [r4, #204]	; 0xcc
   1ac2c:	movw	r0, #29235	; 0x7233
   1ac30:	movt	r0, #4
   1ac34:	mov	r1, #4
   1ac38:	mov	r2, #1
   1ac3c:	bl	14954 <fwrite@plt>
   1ac40:	str	sl, [sp]
   1ac44:	mov	r0, r4
   1ac48:	mov	r1, r6
   1ac4c:	mov	r2, r7
   1ac50:	mov	r3, #1
   1ac54:	bl	1af9c <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1ac58:	ldr	r3, [r4, #204]	; 0xcc
   1ac5c:	mov	r0, r8
   1ac60:	mov	r1, #12
   1ac64:	mov	r2, #1
   1ac68:	bl	14954 <fwrite@plt>
   1ac6c:	ldr	r0, [r4, #204]	; 0xcc
   1ac70:	str	r5, [sp]
   1ac74:	str	r5, [sp, #4]
   1ac78:	movw	r1, #29444	; 0x7304
   1ac7c:	movt	r1, #4
   1ac80:	mov	r2, r5
   1ac84:	mov	r3, r5
   1ac88:	bl	149c0 <fprintf@plt>
   1ac8c:	ldr	r3, [r4, #204]	; 0xcc
   1ac90:	mov	r0, r9
   1ac94:	mov	r1, #2
   1ac98:	mov	r2, #1
   1ac9c:	bl	14954 <fwrite@plt>
   1aca0:	mov	r0, #1
   1aca4:	str	r0, [sp]
   1aca8:	mov	r0, r4
   1acac:	mov	r1, r6
   1acb0:	mov	r2, r7
   1acb4:	mov	r3, #1
   1acb8:	bl	1af9c <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1acbc:	ldr	r3, [r4, #204]	; 0xcc
   1acc0:	mov	r0, r8
   1acc4:	mov	r1, #12
   1acc8:	mov	r2, #1
   1accc:	bl	14954 <fwrite@plt>
   1acd0:	ldr	r0, [r4, #204]	; 0xcc
   1acd4:	ldrd	r2, [r6, #112]	; 0x70
   1acd8:	ldrh	r1, [r6, #104]	; 0x68
   1acdc:	str	r2, [sp, #8]
   1ace0:	str	r3, [sp, #12]
   1ace4:	str	r1, [sp, #16]
   1ace8:	str	r5, [sp, #20]
   1acec:	str	r5, [sp, #24]
   1acf0:	str	r5, [sp]
   1acf4:	movw	r1, #29506	; 0x7342
   1acf8:	movt	r1, #4
   1acfc:	mov	r2, r4
   1ad00:	mov	r3, r4
   1ad04:	bl	149c0 <fprintf@plt>
   1ad08:	sub	sp, fp, #28
   1ad0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad10:	movw	r0, #52861	; 0xce7d
   1ad14:	movt	r0, #3
   1ad18:	movw	r1, #29004	; 0x714c
   1ad1c:	movt	r1, #4
   1ad20:	movw	r3, #29085	; 0x719d
   1ad24:	movt	r3, #4
   1ad28:	movw	r2, #1010	; 0x3f2
   1ad2c:	bl	14a80 <__assert_fail@plt>
   1ad30:	push	{r4, r5, fp, lr}
   1ad34:	add	fp, sp, #8
   1ad38:	ldr	r5, [r0, #20]
   1ad3c:	mov	r4, #0
   1ad40:	b	1ad48 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1ad44:	ldr	r5, [r5]
   1ad48:	cmp	r5, #0
   1ad4c:	moveq	r0, r4
   1ad50:	popeq	{r4, r5, fp, pc}
   1ad54:	ldrb	r0, [r5, #72]	; 0x48
   1ad58:	tst	r0, #4
   1ad5c:	bne	1ad44 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1ad60:	ldrh	r0, [r5, #24]
   1ad64:	cmp	r0, #14
   1ad68:	bne	1ad8c <__flatcc_fb_gen_c_builder@@Base+0x83c>
   1ad6c:	ldr	r0, [r5, #16]
   1ad70:	ldrh	r1, [r0, #8]
   1ad74:	cmp	r1, #1
   1ad78:	bne	1ad8c <__flatcc_fb_gen_c_builder@@Base+0x83c>
   1ad7c:	bl	1ad30 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1ad80:	add	r4, r0, r4
   1ad84:	ldr	r5, [r5]
   1ad88:	b	1ad48 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1ad8c:	add	r4, r4, #1
   1ad90:	b	1ad44 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1ad94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad98:	add	fp, sp, #28
   1ad9c:	sub	sp, sp, #236	; 0xec
   1ada0:	mov	r5, r3
   1ada4:	mov	r4, r2
   1ada8:	mov	r7, r1
   1adac:	mov	r6, r0
   1adb0:	add	r0, sp, #8
   1adb4:	mov	r1, #0
   1adb8:	mov	r2, #220	; 0xdc
   1adbc:	bl	149d8 <memset@plt>
   1adc0:	ldr	r9, [r7, #20]
   1adc4:	cmp	r9, #0
   1adc8:	beq	1aec4 <__flatcc_fb_gen_c_builder@@Base+0x974>
   1adcc:	ldr	r7, [fp, #8]
   1add0:	ldrb	r0, [r9, #72]	; 0x48
   1add4:	tst	r0, #4
   1add8:	bne	1aeb8 <__flatcc_fb_gen_c_builder@@Base+0x968>
   1addc:	ldrh	r0, [r9, #24]
   1ade0:	cmp	r0, #8
   1ade4:	beq	1ae1c <__flatcc_fb_gen_c_builder@@Base+0x8cc>
   1ade8:	cmp	r0, #14
   1adec:	bne	1aed0 <__flatcc_fb_gen_c_builder@@Base+0x980>
   1adf0:	ldr	r1, [r9, #16]
   1adf4:	ldrh	r0, [r1, #8]
   1adf8:	cmp	r0, #1
   1adfc:	bne	1ae68 <__flatcc_fb_gen_c_builder@@Base+0x918>
   1ae00:	str	r7, [sp]
   1ae04:	mov	r0, r6
   1ae08:	mov	r2, r4
   1ae0c:	mov	r3, r5
   1ae10:	bl	1ad94 <__flatcc_fb_gen_c_builder@@Base+0x844>
   1ae14:	mov	r4, r0
   1ae18:	b	1aeb8 <__flatcc_fb_gen_c_builder@@Base+0x968>
   1ae1c:	mov	r0, r6
   1ae20:	mov	r1, r4
   1ae24:	mov	r2, r5
   1ae28:	mov	r3, r7
   1ae2c:	bl	1b3a4 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1ae30:	ldr	sl, [r9, #16]
   1ae34:	mov	r0, sl
   1ae38:	mov	r1, r6
   1ae3c:	bl	1b42c <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1ae40:	mov	r8, r0
   1ae44:	mov	r0, sl
   1ae48:	bl	1b444 <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1ae4c:	mov	r3, r0
   1ae50:	ldr	r0, [r6, #204]	; 0xcc
   1ae54:	str	r4, [sp]
   1ae58:	movw	r1, #29591	; 0x7397
   1ae5c:	movt	r1, #4
   1ae60:	mov	r2, r8
   1ae64:	b	1aeb0 <__flatcc_fb_gen_c_builder@@Base+0x960>
   1ae68:	mov	r0, r6
   1ae6c:	mov	r1, r4
   1ae70:	mov	r2, r5
   1ae74:	mov	r3, r7
   1ae78:	bl	1b3a4 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1ae7c:	ldr	r0, [r9, #16]
   1ae80:	mov	r8, r5
   1ae84:	mov	r5, r7
   1ae88:	add	r7, sp, #8
   1ae8c:	mov	r1, r7
   1ae90:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1ae94:	ldr	r0, [r6, #204]	; 0xcc
   1ae98:	movw	r1, #29577	; 0x7389
   1ae9c:	movt	r1, #4
   1aea0:	mov	r2, r7
   1aea4:	mov	r7, r5
   1aea8:	mov	r5, r8
   1aeac:	mov	r3, r4
   1aeb0:	bl	149c0 <fprintf@plt>
   1aeb4:	add	r4, r4, #1
   1aeb8:	ldr	r9, [r9]
   1aebc:	cmp	r9, #0
   1aec0:	bne	1add0 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1aec4:	mov	r0, r4
   1aec8:	sub	sp, fp, #28
   1aecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aed0:	movw	r0, #8368	; 0x20b0
   1aed4:	movt	r0, #6
   1aed8:	ldr	r0, [r0]
   1aedc:	movw	r1, #29600	; 0x73a0
   1aee0:	movt	r1, #4
   1aee4:	str	r1, [sp]
   1aee8:	movw	r1, #25975	; 0x6577
   1aeec:	movt	r1, #3
   1aef0:	movw	r4, #29004	; 0x714c
   1aef4:	movt	r4, #4
   1aef8:	mov	r2, r4
   1aefc:	movw	r3, #850	; 0x352
   1af00:	bl	149c0 <fprintf@plt>
   1af04:	movw	r0, #29885	; 0x74bd
   1af08:	movt	r0, #4
   1af0c:	movw	r3, #29646	; 0x73ce
   1af10:	movt	r3, #4
   1af14:	mov	r1, r4
   1af18:	movw	r2, #850	; 0x352
   1af1c:	bl	14a80 <__assert_fail@plt>
   1af20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af24:	add	fp, sp, #28
   1af28:	sub	sp, sp, #4
   1af2c:	mov	r5, r3
   1af30:	mov	r9, r2
   1af34:	mov	r6, r0
   1af38:	mov	r0, r1
   1af3c:	bl	1ad30 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1af40:	cmp	r0, #1
   1af44:	blt	1af90 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1af48:	mov	r7, r0
   1af4c:	ldr	r8, [fp, #8]
   1af50:	mov	r4, #0
   1af54:	movw	sl, #29916	; 0x74dc
   1af58:	movt	sl, #4
   1af5c:	mov	r0, r6
   1af60:	mov	r1, r4
   1af64:	mov	r2, r5
   1af68:	mov	r3, r8
   1af6c:	bl	1b3a4 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1af70:	add	r2, r9, r4
   1af74:	ldr	r0, [r6, #204]	; 0xcc
   1af78:	mov	r1, sl
   1af7c:	bl	149c0 <fprintf@plt>
   1af80:	add	r4, r4, #1
   1af84:	cmp	r7, r4
   1af88:	bne	1af5c <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1af8c:	add	r9, r7, r9
   1af90:	mov	r0, r9
   1af94:	sub	sp, fp, #28
   1af98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afa0:	add	fp, sp, #28
   1afa4:	sub	sp, sp, #268	; 0x10c
   1afa8:	mov	r7, r3
   1afac:	str	r2, [sp, #20]
   1afb0:	mov	r5, r1
   1afb4:	mov	r4, r0
   1afb8:	add	r0, sp, #32
   1afbc:	mov	r1, #0
   1afc0:	mov	r2, #220	; 0xdc
   1afc4:	bl	149d8 <memset@plt>
   1afc8:	movw	r0, #29739	; 0x742b
   1afcc:	movt	r0, #4
   1afd0:	movw	r1, #26232	; 0x6678
   1afd4:	movt	r1, #3
   1afd8:	cmp	r7, #1
   1afdc:	moveq	r1, r0
   1afe0:	movw	r0, #29732	; 0x7424
   1afe4:	movt	r0, #4
   1afe8:	cmp	r7, #2
   1afec:	movne	r0, r1
   1aff0:	str	r0, [sp, #24]
   1aff4:	ldr	r5, [r5, #20]
   1aff8:	cmp	r5, #0
   1affc:	beq	1b328 <__flatcc_fb_gen_c_builder@@Base+0xdd8>
   1b000:	sub	sl, fp, #36	; 0x24
   1b004:	sub	r6, fp, #40	; 0x28
   1b008:	mov	r8, #0
   1b00c:	mov	r9, #0
   1b010:	str	r7, [sp, #28]
   1b014:	mov	r0, r5
   1b018:	mov	r1, sl
   1b01c:	mov	r2, r6
   1b020:	bl	1b4b8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1b024:	cmp	r8, #1
   1b028:	blt	1b05c <__flatcc_fb_gen_c_builder@@Base+0xb0c>
   1b02c:	ldr	r3, [r4, #204]	; 0xcc
   1b030:	tst	r8, #3
   1b034:	beq	1b048 <__flatcc_fb_gen_c_builder@@Base+0xaf8>
   1b038:	movw	r0, #29753	; 0x7439
   1b03c:	movt	r0, #4
   1b040:	mov	r1, #2
   1b044:	b	1b054 <__flatcc_fb_gen_c_builder@@Base+0xb04>
   1b048:	movw	r0, #29748	; 0x7434
   1b04c:	movt	r0, #4
   1b050:	mov	r1, #4
   1b054:	mov	r2, #1
   1b058:	bl	14954 <fwrite@plt>
   1b05c:	ldrh	r0, [r5, #24]
   1b060:	cmp	r0, #8
   1b064:	beq	1b0c8 <__flatcc_fb_gen_c_builder@@Base+0xb78>
   1b068:	cmp	r0, #14
   1b06c:	bne	1b354 <__flatcc_fb_gen_c_builder@@Base+0xe04>
   1b070:	ldr	r0, [r5, #16]
   1b074:	add	r1, sp, #32
   1b078:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b07c:	ldrh	r0, [r5, #72]	; 0x48
   1b080:	and	r0, r0, #4
   1b084:	ldr	r1, [r5, #16]
   1b088:	ldrh	r1, [r1, #8]
   1b08c:	cmp	r1, #1
   1b090:	bne	1b130 <__flatcc_fb_gen_c_builder@@Base+0xbe0>
   1b094:	cmp	r0, #0
   1b098:	beq	1b158 <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1b09c:	ldr	r0, [r4, #204]	; 0xcc
   1b0a0:	movw	r1, #29756	; 0x743c
   1b0a4:	movt	r1, #4
   1b0a8:	mov	r2, r9
   1b0ac:	mov	r3, r9
   1b0b0:	bl	149c0 <fprintf@plt>
   1b0b4:	ldr	r0, [r5, #16]
   1b0b8:	bl	1ad30 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1b0bc:	add	r8, r0, r8
   1b0c0:	add	r9, r9, #1
   1b0c4:	b	1b31c <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1b0c8:	ldr	r0, [r5, #16]
   1b0cc:	bl	1b4c0 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1b0d0:	mov	r3, r0
   1b0d4:	ldrb	r0, [r5, #72]	; 0x48
   1b0d8:	tst	r0, #4
   1b0dc:	bne	1b138 <__flatcc_fb_gen_c_builder@@Base+0xbe8>
   1b0e0:	ldrd	r0, [r5, #88]	; 0x58
   1b0e4:	eor	r0, r0, #1
   1b0e8:	orrs	r0, r0, r1
   1b0ec:	movne	r0, r7
   1b0f0:	cmp	r0, #2
   1b0f4:	beq	1b204 <__flatcc_fb_gen_c_builder@@Base+0xcb4>
   1b0f8:	cmp	r0, #1
   1b0fc:	bne	1b1dc <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   1b100:	ldr	r0, [r4, #204]	; 0xcc
   1b104:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b108:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b10c:	ldr	r7, [fp, #8]
   1b110:	cmp	r7, #0
   1b114:	beq	1b2bc <__flatcc_fb_gen_c_builder@@Base+0xd6c>
   1b118:	str	r2, [sp]
   1b11c:	stmib	sp, {r1, r2}
   1b120:	str	r1, [sp, #12]
   1b124:	movw	r1, #29920	; 0x74e0
   1b128:	movt	r1, #4
   1b12c:	b	1b2e0 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1b130:	cmp	r0, #0
   1b134:	beq	1b190 <__flatcc_fb_gen_c_builder@@Base+0xc40>
   1b138:	ldr	r0, [r4, #204]	; 0xcc
   1b13c:	movw	r1, #29865	; 0x74a9
   1b140:	movt	r1, #4
   1b144:	mov	r2, r9
   1b148:	bl	149c0 <fprintf@plt>
   1b14c:	add	r8, r8, #1
   1b150:	add	r9, r9, #1
   1b154:	b	1b31c <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1b158:	ldr	r0, [r4, #204]	; 0xcc
   1b15c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b160:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b164:	ldr	r3, [fp, #8]
   1b168:	cmp	r3, #0
   1b16c:	beq	1b234 <__flatcc_fb_gen_c_builder@@Base+0xce4>
   1b170:	str	r2, [sp]
   1b174:	stmib	sp, {r1, r2}
   1b178:	str	r1, [sp, #12]
   1b17c:	movw	r1, #29813	; 0x7475
   1b180:	movt	r1, #4
   1b184:	add	r2, sp, #32
   1b188:	ldr	r3, [sp, #24]
   1b18c:	b	1b314 <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1b190:	ldrd	r0, [r5, #88]	; 0x58
   1b194:	eor	r0, r0, #1
   1b198:	orrs	r0, r0, r1
   1b19c:	movne	r0, r7
   1b1a0:	cmp	r0, #2
   1b1a4:	beq	1b290 <__flatcc_fb_gen_c_builder@@Base+0xd40>
   1b1a8:	cmp	r0, #1
   1b1ac:	bne	1b1dc <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   1b1b0:	ldr	r0, [r4, #204]	; 0xcc
   1b1b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b1bc:	ldr	r2, [fp, #8]
   1b1c0:	cmp	r2, #0
   1b1c4:	beq	1b2f4 <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1b1c8:	stm	sp, {r1, r3}
   1b1cc:	str	r1, [sp, #8]
   1b1d0:	movw	r1, #29922	; 0x74e2
   1b1d4:	movt	r1, #4
   1b1d8:	b	1b310 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1b1dc:	ldr	r0, [r4, #204]	; 0xcc
   1b1e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b1e8:	ldr	r1, [fp, #8]
   1b1ec:	cmp	r1, #0
   1b1f0:	beq	1b280 <__flatcc_fb_gen_c_builder@@Base+0xd30>
   1b1f4:	stm	sp, {r2, r3}
   1b1f8:	movw	r1, #29887	; 0x74bf
   1b1fc:	movt	r1, #4
   1b200:	b	1b314 <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1b204:	ldr	r0, [r4, #204]	; 0xcc
   1b208:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b20c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b210:	ldr	r7, [fp, #8]
   1b214:	cmp	r7, #0
   1b218:	beq	1b2d0 <__flatcc_fb_gen_c_builder@@Base+0xd80>
   1b21c:	str	r2, [sp]
   1b220:	stmib	sp, {r1, r2}
   1b224:	str	r1, [sp, #12]
   1b228:	movw	r1, #29994	; 0x752a
   1b22c:	movt	r1, #4
   1b230:	b	1b2e0 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1b234:	str	r2, [sp]
   1b238:	str	r1, [sp, #4]
   1b23c:	movw	r1, #29844	; 0x7494
   1b240:	movt	r1, #4
   1b244:	add	r2, sp, #32
   1b248:	ldr	r3, [sp, #24]
   1b24c:	bl	149c0 <fprintf@plt>
   1b250:	ldr	r1, [r5, #16]
   1b254:	mov	r0, #0
   1b258:	str	r0, [sp]
   1b25c:	mov	r0, r4
   1b260:	mov	r2, r8
   1b264:	ldr	r3, [sp, #20]
   1b268:	bl	1af20 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   1b26c:	mov	r8, r0
   1b270:	ldr	r1, [r4, #204]	; 0xcc
   1b274:	mov	r0, #41	; 0x29
   1b278:	bl	14a20 <fputc@plt>
   1b27c:	b	1b31c <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1b280:	str	r8, [sp]
   1b284:	movw	r1, #29906	; 0x74d2
   1b288:	movt	r1, #4
   1b28c:	b	1b314 <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1b290:	ldr	r0, [r4, #204]	; 0xcc
   1b294:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b298:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b29c:	ldr	r2, [fp, #8]
   1b2a0:	cmp	r2, #0
   1b2a4:	beq	1b304 <__flatcc_fb_gen_c_builder@@Base+0xdb4>
   1b2a8:	stm	sp, {r1, r3}
   1b2ac:	str	r1, [sp, #8]
   1b2b0:	movw	r1, #29996	; 0x752c
   1b2b4:	movt	r1, #4
   1b2b8:	b	1b310 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1b2bc:	str	r2, [sp]
   1b2c0:	stmib	sp, {r1, r8}
   1b2c4:	movw	r1, #29959	; 0x7507
   1b2c8:	movt	r1, #4
   1b2cc:	b	1b2e0 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1b2d0:	str	r2, [sp]
   1b2d4:	stmib	sp, {r1, r8}
   1b2d8:	movw	r1, #30031	; 0x754f
   1b2dc:	movt	r1, #4
   1b2e0:	mov	r2, r4
   1b2e4:	bl	149c0 <fprintf@plt>
   1b2e8:	add	r8, r8, #1
   1b2ec:	ldr	r7, [sp, #28]
   1b2f0:	b	1b31c <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1b2f4:	stm	sp, {r1, r8}
   1b2f8:	movw	r1, #29961	; 0x7509
   1b2fc:	movt	r1, #4
   1b300:	b	1b310 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1b304:	stm	sp, {r1, r8}
   1b308:	movw	r1, #30033	; 0x7551
   1b30c:	movt	r1, #4
   1b310:	add	r2, sp, #32
   1b314:	bl	149c0 <fprintf@plt>
   1b318:	add	r8, r8, #1
   1b31c:	ldr	r5, [r5]
   1b320:	cmp	r5, #0
   1b324:	bne	1b014 <__flatcc_fb_gen_c_builder@@Base+0xac4>
   1b328:	ldr	r0, [sp, #20]
   1b32c:	cmp	r0, #1
   1b330:	blt	1b34c <__flatcc_fb_gen_c_builder@@Base+0xdfc>
   1b334:	ldr	r3, [r4, #204]	; 0xcc
   1b338:	movw	r0, #29748	; 0x7434
   1b33c:	movt	r0, #4
   1b340:	mov	r1, #4
   1b344:	mov	r2, #1
   1b348:	bl	14954 <fwrite@plt>
   1b34c:	sub	sp, fp, #28
   1b350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b354:	movw	r0, #8368	; 0x20b0
   1b358:	movt	r0, #6
   1b35c:	ldr	r0, [r0]
   1b360:	movw	r1, #30064	; 0x7570
   1b364:	movt	r1, #4
   1b368:	str	r1, [sp]
   1b36c:	movw	r1, #25975	; 0x6577
   1b370:	movt	r1, #3
   1b374:	movw	r4, #29004	; 0x714c
   1b378:	movt	r4, #4
   1b37c:	mov	r2, r4
   1b380:	movw	r3, #993	; 0x3e1
   1b384:	bl	149c0 <fprintf@plt>
   1b388:	movw	r0, #29885	; 0x74bd
   1b38c:	movt	r0, #4
   1b390:	movw	r3, #30091	; 0x758b
   1b394:	movt	r3, #4
   1b398:	mov	r1, r4
   1b39c:	movw	r2, #993	; 0x3e1
   1b3a0:	bl	14a80 <__assert_fail@plt>
   1b3a4:	push	{fp, lr}
   1b3a8:	mov	fp, sp
   1b3ac:	mov	lr, r2
   1b3b0:	movw	ip, #26231	; 0x6677
   1b3b4:	movt	ip, #3
   1b3b8:	movw	r2, #32145	; 0x7d91
   1b3bc:	movt	r2, #3
   1b3c0:	cmp	r3, #0
   1b3c4:	moveq	r2, ip
   1b3c8:	cmp	lr, #0
   1b3cc:	popeq	{fp, pc}
   1b3d0:	cmp	r1, #0
   1b3d4:	beq	1b404 <__flatcc_fb_gen_c_builder@@Base+0xeb4>
   1b3d8:	ldr	ip, [r0, #204]	; 0xcc
   1b3dc:	tst	r1, #3
   1b3e0:	bne	1b410 <__flatcc_fb_gen_c_builder@@Base+0xec0>
   1b3e4:	sub	r0, lr, r1
   1b3e8:	cmp	r0, #2
   1b3ec:	ble	1b410 <__flatcc_fb_gen_c_builder@@Base+0xec0>
   1b3f0:	movw	r1, #29726	; 0x741e
   1b3f4:	movt	r1, #4
   1b3f8:	mov	r0, ip
   1b3fc:	pop	{fp, lr}
   1b400:	b	149c0 <fprintf@plt>
   1b404:	ldr	ip, [r0, #204]	; 0xcc
   1b408:	cmp	lr, #5
   1b40c:	bge	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xea0>
   1b410:	movw	r0, #52365	; 0xcc8d
   1b414:	movt	r0, #4
   1b418:	mov	r1, #2
   1b41c:	mov	r2, #1
   1b420:	mov	r3, ip
   1b424:	pop	{fp, lr}
   1b428:	b	14954 <fwrite@plt>
   1b42c:	movw	r2, #26232	; 0x6678
   1b430:	movt	r2, #3
   1b434:	cmp	r0, #5
   1b438:	moveq	r2, r1
   1b43c:	mov	r0, r2
   1b440:	bx	lr
   1b444:	sub	r0, r0, #1
   1b448:	cmp	r0, #11
   1b44c:	movwcc	r1, #33024	; 0x8100
   1b450:	movtcc	r1, #4
   1b454:	ldrcc	r0, [r1, r0, lsl #2]
   1b458:	bxcc	lr
   1b45c:	push	{r4, sl, fp, lr}
   1b460:	add	fp, sp, #8
   1b464:	sub	sp, sp, #8
   1b468:	movw	r0, #8368	; 0x20b0
   1b46c:	movt	r0, #6
   1b470:	ldr	r0, [r0]
   1b474:	movw	r1, #52568	; 0xcd58
   1b478:	movt	r1, #3
   1b47c:	str	r1, [sp]
   1b480:	movw	r1, #25975	; 0x6577
   1b484:	movt	r1, #3
   1b488:	movw	r4, #52495	; 0xcd0f
   1b48c:	movt	r4, #3
   1b490:	mov	r2, r4
   1b494:	mov	r3, #141	; 0x8d
   1b498:	bl	149c0 <fprintf@plt>
   1b49c:	movw	r0, #29885	; 0x74bd
   1b4a0:	movt	r0, #4
   1b4a4:	movw	r3, #52623	; 0xcd8f
   1b4a8:	movt	r3, #3
   1b4ac:	mov	r1, r4
   1b4b0:	mov	r2, #141	; 0x8d
   1b4b4:	bl	14a80 <__assert_fail@plt>
   1b4b8:	ldr	r0, [r0, #4]
   1b4bc:	b	1b534 <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1b4c0:	sub	r0, r0, #1
   1b4c4:	cmp	r0, #11
   1b4c8:	movwcc	r1, #33072	; 0x8130
   1b4cc:	movtcc	r1, #4
   1b4d0:	ldrcc	r0, [r1, r0, lsl #2]
   1b4d4:	bxcc	lr
   1b4d8:	push	{r4, sl, fp, lr}
   1b4dc:	add	fp, sp, #8
   1b4e0:	sub	sp, sp, #8
   1b4e4:	movw	r0, #8368	; 0x20b0
   1b4e8:	movt	r0, #6
   1b4ec:	ldr	r0, [r0]
   1b4f0:	movw	r1, #52568	; 0xcd58
   1b4f4:	movt	r1, #3
   1b4f8:	str	r1, [sp]
   1b4fc:	movw	r1, #25975	; 0x6577
   1b500:	movt	r1, #3
   1b504:	movw	r4, #52495	; 0xcd0f
   1b508:	movt	r4, #3
   1b50c:	mov	r2, r4
   1b510:	mov	r3, #96	; 0x60
   1b514:	bl	149c0 <fprintf@plt>
   1b518:	movw	r0, #29885	; 0x74bd
   1b51c:	movt	r0, #4
   1b520:	movw	r3, #54920	; 0xd688
   1b524:	movt	r3, #3
   1b528:	mov	r1, r4
   1b52c:	mov	r2, #96	; 0x60
   1b530:	bl	14a80 <__assert_fail@plt>
   1b534:	ldr	r3, [r0, #4]
   1b538:	str	r3, [r1]
   1b53c:	ldr	r0, [r0]
   1b540:	str	r0, [r2]
   1b544:	bx	lr
   1b548:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b54c:	add	fp, sp, #24
   1b550:	sub	sp, sp, #232	; 0xe8
   1b554:	mov	r4, r0
   1b558:	add	r5, sp, #8
   1b55c:	mov	r7, #0
   1b560:	mov	r0, r5
   1b564:	mov	r1, #0
   1b568:	mov	r2, #220	; 0xdc
   1b56c:	bl	149d8 <memset@plt>
   1b570:	ldr	r0, [r4, #208]	; 0xd0
   1b574:	ldr	r6, [r0, #40]	; 0x28
   1b578:	cmp	r6, #0
   1b57c:	beq	1b5dc <__flatcc_fb_gen_c_builder@@Base+0x108c>
   1b580:	movw	r8, #30184	; 0x75e8
   1b584:	movt	r8, #4
   1b588:	ldrh	r0, [r6, #8]
   1b58c:	cmp	r0, #4
   1b590:	bne	1b5bc <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1b594:	mov	r0, r6
   1b598:	mov	r1, r5
   1b59c:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b5a0:	ldr	r0, [r4, #204]	; 0xcc
   1b5a4:	stm	sp, {r4, r5}
   1b5a8:	mov	r1, r8
   1b5ac:	mov	r2, r4
   1b5b0:	mov	r3, r5
   1b5b4:	bl	149c0 <fprintf@plt>
   1b5b8:	mov	r7, #1
   1b5bc:	ldr	r6, [r6]
   1b5c0:	cmp	r6, #0
   1b5c4:	bne	1b588 <__flatcc_fb_gen_c_builder@@Base+0x1038>
   1b5c8:	cmp	r7, #0
   1b5cc:	beq	1b5dc <__flatcc_fb_gen_c_builder@@Base+0x108c>
   1b5d0:	ldr	r1, [r4, #204]	; 0xcc
   1b5d4:	mov	r0, #10
   1b5d8:	bl	14a20 <fputc@plt>
   1b5dc:	sub	sp, fp, #24
   1b5e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b5e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b5e8:	add	fp, sp, #24
   1b5ec:	sub	sp, sp, #224	; 0xe0
   1b5f0:	mov	r7, r1
   1b5f4:	mov	r4, r0
   1b5f8:	mov	r8, sp
   1b5fc:	mov	r5, #0
   1b600:	mov	r0, r8
   1b604:	mov	r1, #0
   1b608:	mov	r2, #220	; 0xdc
   1b60c:	bl	149d8 <memset@plt>
   1b610:	mov	r0, r7
   1b614:	bl	1c220 <__flatcc_fb_gen_c_builder@@Base+0x1cd0>
   1b618:	mov	r6, r0
   1b61c:	mov	r0, r7
   1b620:	mov	r1, r8
   1b624:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b628:	ldr	r0, [r4, #204]	; 0xcc
   1b62c:	movw	r1, #30269	; 0x763d
   1b630:	movt	r1, #4
   1b634:	mov	r2, r4
   1b638:	mov	r3, r8
   1b63c:	bl	149c0 <fprintf@plt>
   1b640:	ldr	r7, [r7, #20]
   1b644:	cmp	r7, #0
   1b648:	beq	1b6cc <__flatcc_fb_gen_c_builder@@Base+0x117c>
   1b64c:	movw	r8, #30314	; 0x766a
   1b650:	movt	r8, #4
   1b654:	ldrh	r0, [r7, #72]	; 0x48
   1b658:	and	r0, r0, #260	; 0x104
   1b65c:	cmp	r0, #256	; 0x100
   1b660:	bne	1b6a4 <__flatcc_fb_gen_c_builder@@Base+0x1154>
   1b664:	cmp	r5, #1
   1b668:	blt	1b684 <__flatcc_fb_gen_c_builder@@Base+0x1134>
   1b66c:	mov	r0, r4
   1b670:	mov	r1, r5
   1b674:	mov	r2, r6
   1b678:	mov	r3, #0
   1b67c:	bl	1b3a4 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1b680:	b	1b690 <__flatcc_fb_gen_c_builder@@Base+0x1140>
   1b684:	ldr	r1, [r4, #204]	; 0xcc
   1b688:	mov	r0, #32
   1b68c:	bl	14a20 <fputc@plt>
   1b690:	ldr	r2, [r7, #96]	; 0x60
   1b694:	ldr	r0, [r4, #204]	; 0xcc
   1b698:	mov	r1, r8
   1b69c:	bl	149c0 <fprintf@plt>
   1b6a0:	add	r5, r5, #1
   1b6a4:	ldr	r7, [r7]
   1b6a8:	cmp	r7, #0
   1b6ac:	bne	1b654 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1b6b0:	ldr	r3, [r4, #204]	; 0xcc
   1b6b4:	cmp	r5, #1
   1b6b8:	blt	1b6d0 <__flatcc_fb_gen_c_builder@@Base+0x1180>
   1b6bc:	movw	r0, #30317	; 0x766d
   1b6c0:	movt	r0, #4
   1b6c4:	mov	r1, #7
   1b6c8:	b	1b6dc <__flatcc_fb_gen_c_builder@@Base+0x118c>
   1b6cc:	ldr	r3, [r4, #204]	; 0xcc
   1b6d0:	movw	r0, #30318	; 0x766e
   1b6d4:	movt	r0, #4
   1b6d8:	mov	r1, #6
   1b6dc:	mov	r2, #1
   1b6e0:	bl	14954 <fwrite@plt>
   1b6e4:	sub	sp, fp, #24
   1b6e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b6ec:	push	{r4, r5, r6, sl, fp, lr}
   1b6f0:	add	fp, sp, #16
   1b6f4:	sub	sp, sp, #240	; 0xf0
   1b6f8:	mov	r4, r1
   1b6fc:	mov	r5, r0
   1b700:	add	r6, sp, #16
   1b704:	mov	r0, r6
   1b708:	mov	r1, #0
   1b70c:	mov	r2, #220	; 0xdc
   1b710:	bl	149d8 <memset@plt>
   1b714:	mov	r0, r4
   1b718:	mov	r1, r6
   1b71c:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b720:	ldr	r0, [r5, #204]	; 0xcc
   1b724:	ldrd	r2, [r4, #96]	; 0x60
   1b728:	str	r2, [sp, #8]
   1b72c:	str	r3, [sp, #12]
   1b730:	str	r6, [sp]
   1b734:	movw	r1, #30325	; 0x7675
   1b738:	movt	r1, #4
   1b73c:	mov	r2, r5
   1b740:	mov	r3, r5
   1b744:	bl	149c0 <fprintf@plt>
   1b748:	sub	sp, fp, #16
   1b74c:	pop	{r4, r5, r6, sl, fp, pc}
   1b750:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b754:	add	fp, sp, #24
   1b758:	sub	sp, sp, #232	; 0xe8
   1b75c:	mov	r6, r1
   1b760:	mov	r5, r0
   1b764:	add	r4, sp, #8
   1b768:	mov	r0, r4
   1b76c:	mov	r1, #0
   1b770:	mov	r2, #220	; 0xdc
   1b774:	bl	149d8 <memset@plt>
   1b778:	mov	r0, r6
   1b77c:	mov	r1, r4
   1b780:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b784:	mov	r0, r6
   1b788:	bl	1c220 <__flatcc_fb_gen_c_builder@@Base+0x1cd0>
   1b78c:	mov	r7, r0
   1b790:	ldr	r0, [r5, #204]	; 0xcc
   1b794:	movw	r1, #29146	; 0x71da
   1b798:	movt	r1, #4
   1b79c:	mov	r2, r4
   1b7a0:	bl	149c0 <fprintf@plt>
   1b7a4:	mov	r0, r5
   1b7a8:	mov	r1, r6
   1b7ac:	mov	r2, r7
   1b7b0:	bl	1c250 <__flatcc_fb_gen_c_builder@@Base+0x1d00>
   1b7b4:	ldr	r0, [r5, #204]	; 0xcc
   1b7b8:	movw	r1, #29172	; 0x71f4
   1b7bc:	movt	r1, #4
   1b7c0:	mov	r2, r4
   1b7c4:	bl	149c0 <fprintf@plt>
   1b7c8:	mov	r0, r5
   1b7cc:	mov	r1, r6
   1b7d0:	mov	r2, r7
   1b7d4:	bl	1c594 <__flatcc_fb_gen_c_builder@@Base+0x2044>
   1b7d8:	ldr	r1, [r5, #204]	; 0xcc
   1b7dc:	mov	r0, #10
   1b7e0:	bl	14a20 <fputc@plt>
   1b7e4:	ldr	r0, [r5, #204]	; 0xcc
   1b7e8:	str	r5, [sp]
   1b7ec:	str	r4, [sp, #4]
   1b7f0:	movw	r1, #30356	; 0x7694
   1b7f4:	movt	r1, #4
   1b7f8:	mov	r2, r4
   1b7fc:	mov	r3, r4
   1b800:	bl	149c0 <fprintf@plt>
   1b804:	sub	sp, fp, #24
   1b808:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b80c:	push	{r4, r5, fp, lr}
   1b810:	add	fp, sp, #8
   1b814:	mov	r4, r0
   1b818:	ldr	r0, [r0, #208]	; 0xd0
   1b81c:	ldr	r5, [r0, #40]	; 0x28
   1b820:	cmp	r5, #0
   1b824:	popeq	{r4, r5, fp, pc}
   1b828:	mov	r0, #0
   1b82c:	ldrh	r1, [r5, #8]
   1b830:	cmp	r1, #4
   1b834:	bne	1b848 <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   1b838:	mov	r0, r4
   1b83c:	mov	r1, r5
   1b840:	bl	1c600 <__flatcc_fb_gen_c_builder@@Base+0x20b0>
   1b844:	mov	r0, #1
   1b848:	ldr	r5, [r5]
   1b84c:	cmp	r5, #0
   1b850:	bne	1b82c <__flatcc_fb_gen_c_builder@@Base+0x12dc>
   1b854:	cmp	r0, #0
   1b858:	beq	1b86c <__flatcc_fb_gen_c_builder@@Base+0x131c>
   1b85c:	ldr	r1, [r4, #204]	; 0xcc
   1b860:	mov	r0, #10
   1b864:	pop	{r4, r5, fp, lr}
   1b868:	b	14a20 <fputc@plt>
   1b86c:	pop	{r4, r5, fp, pc}
   1b870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b874:	add	fp, sp, #28
   1b878:	sub	sp, sp, #628	; 0x274
   1b87c:	mov	r6, r1
   1b880:	mov	r4, r0
   1b884:	sub	r9, fp, #264	; 0x108
   1b888:	mov	r0, r9
   1b88c:	mov	r1, #0
   1b890:	mov	r2, #220	; 0xdc
   1b894:	bl	149d8 <memset@plt>
   1b898:	add	r0, sp, #168	; 0xa8
   1b89c:	mov	r1, #0
   1b8a0:	mov	r2, #220	; 0xdc
   1b8a4:	bl	149d8 <memset@plt>
   1b8a8:	mov	r0, r6
   1b8ac:	mov	r1, r9
   1b8b0:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b8b4:	ldr	r7, [r6, #20]
   1b8b8:	cmp	r7, #0
   1b8bc:	beq	1be5c <__flatcc_fb_gen_c_builder@@Base+0x190c>
   1b8c0:	sub	r5, fp, #40	; 0x28
   1b8c4:	sub	r6, fp, #36	; 0x24
   1b8c8:	mov	r0, r7
   1b8cc:	mov	r1, r5
   1b8d0:	mov	r2, r6
   1b8d4:	bl	1b4b8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1b8d8:	ldrb	r0, [r7, #72]	; 0x48
   1b8dc:	tst	r0, #4
   1b8e0:	bne	1b9ec <__flatcc_fb_gen_c_builder@@Base+0x149c>
   1b8e4:	ldrh	r0, [r7, #24]
   1b8e8:	sub	r0, r0, #7
   1b8ec:	cmp	r0, #8
   1b8f0:	bhi	1be70 <__flatcc_fb_gen_c_builder@@Base+0x1920>
   1b8f4:	add	r1, pc, #0
   1b8f8:	ldr	pc, [r1, r0, lsl #2]
   1b8fc:	andeq	fp, r1, r0, lsr #18
   1b900:	andeq	fp, r1, ip, lsr sl
   1b904:	andeq	fp, r1, r0, ror #21
   1b908:	andeq	fp, r1, r0, lsl sl
   1b90c:	andeq	fp, r1, r0, ror lr
   1b910:	andeq	fp, r1, r0, ror lr
   1b914:	andeq	fp, r1, r0, ror lr
   1b918:	andeq	fp, r1, r0, lsr #23
   1b91c:	andeq	fp, r1, r4, lsl fp
   1b920:	ldr	r5, [r7, #16]
   1b924:	mov	r0, r5
   1b928:	mov	r1, r4
   1b92c:	bl	1b42c <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1b930:	mov	r6, r0
   1b934:	mov	r0, r5
   1b938:	bl	1b444 <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1b93c:	mov	r5, r0
   1b940:	ldr	r0, [r7, #16]
   1b944:	bl	1b4c0 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1b948:	ldr	r1, [r4, #204]	; 0xcc
   1b94c:	ldrd	r2, [r7, #96]	; 0x60
   1b950:	ldr	sl, [fp, #-40]	; 0xffffffd8
   1b954:	ldr	r8, [fp, #-36]	; 0xffffffdc
   1b958:	str	r6, [sp, #32]
   1b95c:	sub	r6, fp, #36	; 0x24
   1b960:	str	r5, [sp, #36]	; 0x24
   1b964:	sub	r5, fp, #40	; 0x28
   1b968:	stm	sp, {r2, r3, r4, r9, sl}
   1b96c:	str	r8, [sp, #20]
   1b970:	str	r4, [sp, #24]
   1b974:	str	r0, [sp, #28]
   1b978:	mov	r0, r1
   1b97c:	movw	r1, #31391	; 0x7a9f
   1b980:	movt	r1, #4
   1b984:	mov	r2, r4
   1b988:	bl	149c0 <fprintf@plt>
   1b98c:	ldr	r0, [r7, #104]	; 0x68
   1b990:	cmp	r0, #0
   1b994:	beq	1be50 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1b998:	ldrh	r1, [r0, #8]
   1b99c:	cmp	r1, #1
   1b9a0:	beq	1bc08 <__flatcc_fb_gen_c_builder@@Base+0x16b8>
   1b9a4:	cmp	r1, #0
   1b9a8:	bne	1bf60 <__flatcc_fb_gen_c_builder@@Base+0x1a10>
   1b9ac:	add	r5, sp, #168	; 0xa8
   1b9b0:	mov	r1, r5
   1b9b4:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b9b8:	ldr	r0, [r4, #204]	; 0xcc
   1b9bc:	stm	sp, {r9, sl}
   1b9c0:	str	r8, [sp, #8]
   1b9c4:	str	r5, [sp, #12]
   1b9c8:	str	r5, [sp, #16]
   1b9cc:	str	r5, [sp, #20]
   1b9d0:	movw	r1, #31446	; 0x7ad6
   1b9d4:	movt	r1, #4
   1b9d8:	mov	r2, r4
   1b9dc:	mov	r3, r4
   1b9e0:	bl	149c0 <fprintf@plt>
   1b9e4:	sub	r5, fp, #40	; 0x28
   1b9e8:	b	1be50 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1b9ec:	ldr	r0, [r4, #204]	; 0xcc
   1b9f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b9f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b9f8:	str	r1, [sp]
   1b9fc:	movw	r1, #31268	; 0x7a24
   1ba00:	movt	r1, #4
   1ba04:	mov	r2, r9
   1ba08:	bl	149c0 <fprintf@plt>
   1ba0c:	b	1be50 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1ba10:	ldr	r0, [r4, #204]	; 0xcc
   1ba14:	ldrd	r2, [r7, #96]	; 0x60
   1ba18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ba1c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1ba20:	stm	sp, {r2, r3, r4, r9}
   1ba24:	str	r1, [sp, #16]
   1ba28:	str	r6, [sp, #20]
   1ba2c:	sub	r6, fp, #36	; 0x24
   1ba30:	movw	r1, #31718	; 0x7be6
   1ba34:	movt	r1, #4
   1ba38:	b	1bb08 <__flatcc_fb_gen_c_builder@@Base+0x15b8>
   1ba3c:	ldr	sl, [r7, #16]
   1ba40:	mov	r0, sl
   1ba44:	mov	r1, r4
   1ba48:	bl	1b42c <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1ba4c:	str	r0, [sp, #64]	; 0x40
   1ba50:	mov	r0, sl
   1ba54:	bl	1b444 <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1ba58:	mov	r8, r9
   1ba5c:	mov	r9, r0
   1ba60:	ldr	r0, [r7, #16]
   1ba64:	bl	1b4c0 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1ba68:	str	r0, [sp, #60]	; 0x3c
   1ba6c:	ldr	r0, [r7, #16]
   1ba70:	add	r1, r7, #48	; 0x30
   1ba74:	add	r2, sp, #68	; 0x44
   1ba78:	bl	1c79c <__flatcc_fb_gen_c_builder@@Base+0x224c>
   1ba7c:	add	r5, r7, #88	; 0x58
   1ba80:	ldm	r5, {r1, r2, r3, r5}
   1ba84:	ldrh	r6, [r7, #74]	; 0x4a
   1ba88:	ldr	r0, [r4, #204]	; 0xcc
   1ba8c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1ba90:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1ba94:	ldr	sl, [sp, #64]	; 0x40
   1ba98:	str	sl, [sp, #32]
   1ba9c:	str	r9, [sp, #36]	; 0x24
   1baa0:	mov	r9, r8
   1baa4:	add	sl, sp, #40	; 0x28
   1baa8:	stm	sl, {r1, r2, r6}
   1baac:	sub	r6, fp, #36	; 0x24
   1bab0:	add	r1, sp, #68	; 0x44
   1bab4:	str	r1, [sp, #52]	; 0x34
   1bab8:	stm	sp, {r3, r5}
   1babc:	sub	r5, fp, #40	; 0x28
   1bac0:	add	r1, sp, #8
   1bac4:	stm	r1, {r4, r8, ip, lr}
   1bac8:	str	r4, [sp, #24]
   1bacc:	ldr	r1, [sp, #60]	; 0x3c
   1bad0:	str	r1, [sp, #28]
   1bad4:	movw	r1, #31322	; 0x7a5a
   1bad8:	movt	r1, #4
   1badc:	b	1bb08 <__flatcc_fb_gen_c_builder@@Base+0x15b8>
   1bae0:	ldr	r0, [r4, #204]	; 0xcc
   1bae4:	ldrd	r2, [r7, #96]	; 0x60
   1bae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1baec:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1baf0:	stm	sp, {r2, r3, r4, r9}
   1baf4:	str	r1, [sp, #16]
   1baf8:	str	r6, [sp, #20]
   1bafc:	sub	r6, fp, #36	; 0x24
   1bb00:	movw	r1, #31761	; 0x7c11
   1bb04:	movt	r1, #4
   1bb08:	mov	r2, r4
   1bb0c:	bl	149c0 <fprintf@plt>
   1bb10:	b	1be50 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1bb14:	ldr	r0, [r7, #16]
   1bb18:	add	r1, sp, #168	; 0xa8
   1bb1c:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1bb20:	ldr	r0, [r7, #16]
   1bb24:	ldrh	r1, [r0, #8]
   1bb28:	cmp	r1, #4
   1bb2c:	bhi	1bec0 <__flatcc_fb_gen_c_builder@@Base+0x1970>
   1bb30:	add	r2, pc, #0
   1bb34:	ldr	pc, [r2, r1, lsl #2]
   1bb38:	andeq	fp, r1, ip, asr #22
   1bb3c:	andeq	fp, r1, r4, lsl sp
   1bb40:	andeq	fp, r1, r0, asr #29
   1bb44:			; <UNDEFINED> instruction: 0x0001bdb0
   1bb48:	andeq	fp, r1, r0, asr ip
   1bb4c:	ldrb	r0, [r0, #10]
   1bb50:	tst	r0, #8
   1bb54:	beq	1bb70 <__flatcc_fb_gen_c_builder@@Base+0x1620>
   1bb58:	ldr	r3, [r4, #204]	; 0xcc
   1bb5c:	movw	r0, #32032	; 0x7d20
   1bb60:	movt	r0, #4
   1bb64:	mov	r1, #32
   1bb68:	mov	r2, #1
   1bb6c:	bl	14954 <fwrite@plt>
   1bb70:	ldr	r0, [r4, #204]	; 0xcc
   1bb74:	ldrd	r2, [r7, #96]	; 0x60
   1bb78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bb7c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bb80:	stm	sp, {r2, r3, r4, r9}
   1bb84:	str	r1, [sp, #16]
   1bb88:	str	r6, [sp, #20]
   1bb8c:	add	r1, sp, #168	; 0xa8
   1bb90:	str	r1, [sp, #24]
   1bb94:	movw	r1, #32118	; 0x7d76
   1bb98:	movt	r1, #4
   1bb9c:	b	1be44 <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1bba0:	ldr	r0, [r7, #16]
   1bba4:	add	r1, sp, #168	; 0xa8
   1bba8:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1bbac:	ldr	r0, [r7, #16]
   1bbb0:	ldrh	r1, [r0, #8]
   1bbb4:	cmp	r1, #4
   1bbb8:	bhi	1bf10 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
   1bbbc:	add	r2, pc, #0
   1bbc0:	ldr	pc, [r2, r1, lsl #2]
   1bbc4:	ldrdeq	fp, [r1], -r8
   1bbc8:	andeq	fp, r1, ip, ror #26
   1bbcc:	andeq	fp, r1, r0, lsl pc
   1bbd0:	andeq	fp, r1, r8, ror #27
   1bbd4:			; <UNDEFINED> instruction: 0x0001bcb4
   1bbd8:	ldr	r0, [r4, #204]	; 0xcc
   1bbdc:	ldrd	r2, [r7, #96]	; 0x60
   1bbe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bbe4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bbe8:	stm	sp, {r2, r3, r4, r9}
   1bbec:	str	r1, [sp, #16]
   1bbf0:	str	r6, [sp, #20]
   1bbf4:	add	r1, sp, #168	; 0xa8
   1bbf8:	str	r1, [sp, #24]
   1bbfc:	movw	r1, #31868	; 0x7c7c
   1bc00:	movt	r1, #4
   1bc04:	b	1be44 <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1bc08:	add	r5, sp, #168	; 0xa8
   1bc0c:	mov	r1, r5
   1bc10:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1bc14:	ldr	r0, [r4, #204]	; 0xcc
   1bc18:	ldr	r1, [r7, #104]	; 0x68
   1bc1c:	ldrh	r1, [r1, #104]	; 0x68
   1bc20:	stm	sp, {r9, sl}
   1bc24:	str	r8, [sp, #8]
   1bc28:	str	r5, [sp, #12]
   1bc2c:	str	r1, [sp, #16]
   1bc30:	str	r5, [sp, #20]
   1bc34:	str	r5, [sp, #24]
   1bc38:	sub	r5, fp, #40	; 0x28
   1bc3c:	movw	r1, #31527	; 0x7b27
   1bc40:	movt	r1, #4
   1bc44:	mov	r2, r4
   1bc48:	mov	r3, r4
   1bc4c:	b	1ba08 <__flatcc_fb_gen_c_builder@@Base+0x14b8>
   1bc50:	ldr	r0, [r4, #204]	; 0xcc
   1bc54:	ldrd	r2, [r7, #96]	; 0x60
   1bc58:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1bc5c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bc60:	stm	sp, {r2, r3, r4, r9}
   1bc64:	str	r5, [sp, #16]
   1bc68:	str	r6, [sp, #20]
   1bc6c:	add	r1, sp, #168	; 0xa8
   1bc70:	str	r1, [sp, #24]
   1bc74:	movw	r1, #32229	; 0x7de5
   1bc78:	movt	r1, #4
   1bc7c:	mov	r2, r4
   1bc80:	bl	149c0 <fprintf@plt>
   1bc84:	ldr	r0, [r7, #16]
   1bc88:	str	r0, [sp]
   1bc8c:	mov	r0, #1
   1bc90:	str	r0, [sp, #4]
   1bc94:	mov	r0, r4
   1bc98:	mov	r1, r9
   1bc9c:	mov	r2, r5
   1bca0:	sub	r5, fp, #40	; 0x28
   1bca4:	mov	r3, r6
   1bca8:	sub	r6, fp, #36	; 0x24
   1bcac:	bl	1c8c4 <__flatcc_fb_gen_c_builder@@Base+0x2374>
   1bcb0:	b	1be50 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1bcb4:	ldr	r0, [r4, #204]	; 0xcc
   1bcb8:	ldrd	r2, [r7, #96]	; 0x60
   1bcbc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1bcc0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bcc4:	stm	sp, {r2, r3, r4, r9}
   1bcc8:	str	r5, [sp, #16]
   1bccc:	str	r6, [sp, #20]
   1bcd0:	add	r1, sp, #168	; 0xa8
   1bcd4:	str	r1, [sp, #24]
   1bcd8:	movw	r1, #31986	; 0x7cf2
   1bcdc:	movt	r1, #4
   1bce0:	mov	r2, r4
   1bce4:	bl	149c0 <fprintf@plt>
   1bce8:	ldr	r0, [r7, #16]
   1bcec:	str	r0, [sp]
   1bcf0:	mov	r0, #0
   1bcf4:	str	r0, [sp, #4]
   1bcf8:	mov	r0, r4
   1bcfc:	mov	r1, r9
   1bd00:	mov	r2, r5
   1bd04:	sub	r5, fp, #40	; 0x28
   1bd08:	mov	r3, r6
   1bd0c:	bl	1c8c4 <__flatcc_fb_gen_c_builder@@Base+0x2374>
   1bd10:	b	1be4c <__flatcc_fb_gen_c_builder@@Base+0x18fc>
   1bd14:	ldrb	r0, [r0, #10]
   1bd18:	tst	r0, #8
   1bd1c:	beq	1bd38 <__flatcc_fb_gen_c_builder@@Base+0x17e8>
   1bd20:	ldr	r3, [r4, #204]	; 0xcc
   1bd24:	movw	r0, #32032	; 0x7d20
   1bd28:	movt	r0, #4
   1bd2c:	mov	r1, #32
   1bd30:	mov	r2, #1
   1bd34:	bl	14954 <fwrite@plt>
   1bd38:	ldr	r0, [r4, #204]	; 0xcc
   1bd3c:	ldrd	r2, [r7, #96]	; 0x60
   1bd40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd44:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bd48:	stm	sp, {r2, r3, r4, r9}
   1bd4c:	str	r1, [sp, #16]
   1bd50:	str	r6, [sp, #20]
   1bd54:	add	r1, sp, #168	; 0xa8
   1bd58:	str	r1, [sp, #24]
   1bd5c:	str	r1, [sp, #28]
   1bd60:	movw	r1, #32065	; 0x7d41
   1bd64:	movt	r1, #4
   1bd68:	b	1be44 <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1bd6c:	ldr	r0, [r4, #204]	; 0xcc
   1bd70:	add	r6, r7, #88	; 0x58
   1bd74:	ldm	r6, {r1, r2, r3, r6}
   1bd78:	ldrh	r5, [r7, #74]	; 0x4a
   1bd7c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1bd80:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1bd84:	add	r8, sp, #32
   1bd88:	stm	r8, {r1, r2, r5}
   1bd8c:	sub	r5, fp, #40	; 0x28
   1bd90:	stm	sp, {r3, r6}
   1bd94:	add	r1, sp, #8
   1bd98:	stm	r1, {r4, r9, ip, lr}
   1bd9c:	add	r1, sp, #168	; 0xa8
   1bda0:	str	r1, [sp, #24]
   1bda4:	movw	r1, #31811	; 0x7c43
   1bda8:	movt	r1, #4
   1bdac:	b	1be44 <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1bdb0:	ldr	r0, [r4, #204]	; 0xcc
   1bdb4:	ldrd	r2, [r7, #96]	; 0x60
   1bdb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bdbc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bdc0:	stm	sp, {r2, r3, r4, r9}
   1bdc4:	str	r1, [sp, #16]
   1bdc8:	str	r6, [sp, #20]
   1bdcc:	sub	r6, fp, #36	; 0x24
   1bdd0:	add	r1, sp, #168	; 0xa8
   1bdd4:	str	r1, [sp, #24]
   1bdd8:	str	r1, [sp, #28]
   1bddc:	movw	r1, #32171	; 0x7dab
   1bde0:	movt	r1, #4
   1bde4:	b	1bb08 <__flatcc_fb_gen_c_builder@@Base+0x15b8>
   1bde8:	ldr	r0, [r0, #40]	; 0x28
   1bdec:	add	r1, r7, #48	; 0x30
   1bdf0:	add	r8, sp, #68	; 0x44
   1bdf4:	mov	r2, r8
   1bdf8:	bl	1c79c <__flatcc_fb_gen_c_builder@@Base+0x224c>
   1bdfc:	add	r6, r7, #88	; 0x58
   1be00:	ldm	r6, {r1, r2, r3, r6}
   1be04:	ldrh	r5, [r7, #74]	; 0x4a
   1be08:	ldr	r0, [r4, #204]	; 0xcc
   1be0c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1be10:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1be14:	add	sl, sp, #32
   1be18:	stm	sl, {r1, r2, r5}
   1be1c:	sub	r5, fp, #40	; 0x28
   1be20:	str	r8, [sp, #44]	; 0x2c
   1be24:	stm	sp, {r3, r6}
   1be28:	add	r1, sp, #8
   1be2c:	stm	r1, {r4, r9, ip, lr}
   1be30:	add	r1, sp, #168	; 0xa8
   1be34:	str	r1, [sp, #24]
   1be38:	str	r1, [sp, #28]
   1be3c:	movw	r1, #31914	; 0x7caa
   1be40:	movt	r1, #4
   1be44:	mov	r2, r4
   1be48:	bl	149c0 <fprintf@plt>
   1be4c:	sub	r6, fp, #36	; 0x24
   1be50:	ldr	r7, [r7]
   1be54:	cmp	r7, #0
   1be58:	bne	1b8c8 <__flatcc_fb_gen_c_builder@@Base+0x1378>
   1be5c:	ldr	r1, [r4, #204]	; 0xcc
   1be60:	mov	r0, #10
   1be64:	bl	14a20 <fputc@plt>
   1be68:	sub	sp, fp, #28
   1be6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be70:	movw	r0, #8368	; 0x20b0
   1be74:	movt	r0, #6
   1be78:	ldr	r0, [r0]
   1be7c:	movw	r1, #56510	; 0xdcbe
   1be80:	movt	r1, #3
   1be84:	str	r1, [sp]
   1be88:	movw	r1, #25975	; 0x6577
   1be8c:	movt	r1, #3
   1be90:	movw	r4, #29004	; 0x714c
   1be94:	movt	r4, #4
   1be98:	mov	r2, r4
   1be9c:	movw	r3, #1512	; 0x5e8
   1bea0:	bl	149c0 <fprintf@plt>
   1bea4:	movw	r0, #29885	; 0x74bd
   1bea8:	movt	r0, #4
   1beac:	movw	r3, #31652	; 0x7ba4
   1beb0:	movt	r3, #4
   1beb4:	mov	r1, r4
   1beb8:	movw	r2, #1512	; 0x5e8
   1bebc:	bl	14a80 <__assert_fail@plt>
   1bec0:	movw	r0, #8368	; 0x20b0
   1bec4:	movt	r0, #6
   1bec8:	ldr	r0, [r0]
   1becc:	movw	r1, #56316	; 0xdbfc
   1bed0:	movt	r1, #3
   1bed4:	str	r1, [sp]
   1bed8:	movw	r1, #25975	; 0x6577
   1bedc:	movt	r1, #3
   1bee0:	movw	r4, #29004	; 0x714c
   1bee4:	movt	r4, #4
   1bee8:	mov	r2, r4
   1beec:	movw	r3, #1507	; 0x5e3
   1bef0:	bl	149c0 <fprintf@plt>
   1bef4:	movw	r0, #29885	; 0x74bd
   1bef8:	movt	r0, #4
   1befc:	movw	r3, #31652	; 0x7ba4
   1bf00:	movt	r3, #4
   1bf04:	mov	r1, r4
   1bf08:	movw	r2, #1507	; 0x5e3
   1bf0c:	bl	14a80 <__assert_fail@plt>
   1bf10:	movw	r0, #8368	; 0x20b0
   1bf14:	movt	r0, #6
   1bf18:	ldr	r0, [r0]
   1bf1c:	movw	r1, #56243	; 0xdbb3
   1bf20:	movt	r1, #3
   1bf24:	str	r1, [sp]
   1bf28:	movw	r1, #25975	; 0x6577
   1bf2c:	movt	r1, #3
   1bf30:	movw	r4, #29004	; 0x714c
   1bf34:	movt	r4, #4
   1bf38:	mov	r2, r4
   1bf3c:	mov	r3, #1472	; 0x5c0
   1bf40:	bl	149c0 <fprintf@plt>
   1bf44:	movw	r0, #29885	; 0x74bd
   1bf48:	movt	r0, #4
   1bf4c:	movw	r3, #31652	; 0x7ba4
   1bf50:	movt	r3, #4
   1bf54:	mov	r1, r4
   1bf58:	mov	r2, #1472	; 0x5c0
   1bf5c:	bl	14a80 <__assert_fail@plt>
   1bf60:	movw	r0, #8368	; 0x20b0
   1bf64:	movt	r0, #6
   1bf68:	ldr	r0, [r0]
   1bf6c:	movw	r1, #31613	; 0x7b7d
   1bf70:	movt	r1, #4
   1bf74:	str	r1, [sp]
   1bf78:	movw	r1, #25975	; 0x6577
   1bf7c:	movt	r1, #3
   1bf80:	movw	r4, #29004	; 0x714c
   1bf84:	movt	r4, #4
   1bf88:	mov	r2, r4
   1bf8c:	movw	r3, #1430	; 0x596
   1bf90:	bl	149c0 <fprintf@plt>
   1bf94:	movw	r0, #29885	; 0x74bd
   1bf98:	movt	r0, #4
   1bf9c:	movw	r3, #31652	; 0x7ba4
   1bfa0:	movt	r3, #4
   1bfa4:	mov	r1, r4
   1bfa8:	movw	r2, #1430	; 0x596
   1bfac:	bl	14a80 <__assert_fail@plt>
   1bfb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bfb4:	add	fp, sp, #28
   1bfb8:	sub	sp, sp, #260	; 0x104
   1bfbc:	mov	r7, r1
   1bfc0:	mov	r4, r0
   1bfc4:	ldrh	r9, [r1, #92]	; 0x5c
   1bfc8:	add	r5, sp, #24
   1bfcc:	mov	r8, #0
   1bfd0:	mov	r0, r5
   1bfd4:	mov	r1, #0
   1bfd8:	mov	r2, #220	; 0xdc
   1bfdc:	bl	149d8 <memset@plt>
   1bfe0:	mov	r0, r7
   1bfe4:	mov	r1, r5
   1bfe8:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1bfec:	ldr	r0, [r4, #204]	; 0xcc
   1bff0:	stm	sp, {r4, r5}
   1bff4:	movw	r1, #32665	; 0x7f99
   1bff8:	movt	r1, #4
   1bffc:	mov	r2, r5
   1c000:	mov	r3, r5
   1c004:	bl	149c0 <fprintf@plt>
   1c008:	ldr	r0, [r4, #204]	; 0xcc
   1c00c:	movw	r1, #32732	; 0x7fdc
   1c010:	movt	r1, #4
   1c014:	mov	r2, r5
   1c018:	bl	149c0 <fprintf@plt>
   1c01c:	ldr	r6, [r7, #24]
   1c020:	cmp	r6, #0
   1c024:	beq	1c1a4 <__flatcc_fb_gen_c_builder@@Base+0x1c54>
   1c028:	str	r7, [sp, #20]
   1c02c:	ands	r9, r9, #8
   1c030:	str	r9, [sp, #16]
   1c034:	movwne	r9, #1
   1c038:	sub	sl, fp, #40	; 0x28
   1c03c:	add	r7, sp, #24
   1c040:	ldrb	r0, [r6, #72]	; 0x48
   1c044:	tst	r0, #4
   1c048:	bne	1c0f0 <__flatcc_fb_gen_c_builder@@Base+0x1ba0>
   1c04c:	mov	r0, r6
   1c050:	sub	r1, fp, #36	; 0x24
   1c054:	mov	r2, sl
   1c058:	bl	1b4b8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1c05c:	ldrh	r0, [r6, #24]
   1c060:	cmp	r0, #14
   1c064:	bne	1c088 <__flatcc_fb_gen_c_builder@@Base+0x1b38>
   1c068:	ldr	r0, [r6, #16]
   1c06c:	ldrh	r0, [r0, #8]
   1c070:	cmp	r0, #4
   1c074:	moveq	r8, #1
   1c078:	sub	r0, r0, #4
   1c07c:	movwne	r0, #1
   1c080:	orrs	r0, r0, r9
   1c084:	beq	1c0bc <__flatcc_fb_gen_c_builder@@Base+0x1b6c>
   1c088:	ldr	r0, [r4, #204]	; 0xcc
   1c08c:	ldr	r2, [r6, #96]	; 0x60
   1c090:	ldr	r1, [r6, #100]	; 0x64
   1c094:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c098:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1c09c:	str	r2, [sp, #8]
   1c0a0:	str	r1, [sp, #12]
   1c0a4:	str	r5, [sp]
   1c0a8:	movw	r1, #32794	; 0x801a
   1c0ac:	movt	r1, #4
   1c0b0:	mov	r2, r7
   1c0b4:	bl	149c0 <fprintf@plt>
   1c0b8:	b	1c0f0 <__flatcc_fb_gen_c_builder@@Base+0x1ba0>
   1c0bc:	ldr	r0, [r4, #204]	; 0xcc
   1c0c0:	ldr	r2, [r6, #96]	; 0x60
   1c0c4:	ldr	r1, [r6, #100]	; 0x64
   1c0c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c0cc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1c0d0:	str	r2, [sp, #8]
   1c0d4:	str	r1, [sp, #12]
   1c0d8:	str	r5, [sp]
   1c0dc:	movw	r1, #32754	; 0x7ff2
   1c0e0:	movt	r1, #4
   1c0e4:	mov	r2, r7
   1c0e8:	bl	149c0 <fprintf@plt>
   1c0ec:	mov	r8, #1
   1c0f0:	ldr	r6, [r6, #108]	; 0x6c
   1c0f4:	cmp	r6, #0
   1c0f8:	bne	1c040 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1c0fc:	ldr	r0, [sp, #16]
   1c100:	cmp	r0, #0
   1c104:	ldr	r0, [sp, #20]
   1c108:	bne	1c1a4 <__flatcc_fb_gen_c_builder@@Base+0x1c54>
   1c10c:	cmp	r8, #0
   1c110:	ldrne	r5, [r0, #24]
   1c114:	cmpne	r5, #0
   1c118:	beq	1c1a4 <__flatcc_fb_gen_c_builder@@Base+0x1c54>
   1c11c:	sub	r8, fp, #36	; 0x24
   1c120:	sub	r9, fp, #40	; 0x28
   1c124:	movw	sl, #32828	; 0x803c
   1c128:	movt	sl, #4
   1c12c:	add	r7, sp, #24
   1c130:	b	1c184 <__flatcc_fb_gen_c_builder@@Base+0x1c34>
   1c134:	ldr	r0, [r5, #16]
   1c138:	ldrh	r0, [r0, #8]
   1c13c:	cmp	r0, #4
   1c140:	bne	1c198 <__flatcc_fb_gen_c_builder@@Base+0x1c48>
   1c144:	mov	r0, r5
   1c148:	mov	r1, r8
   1c14c:	mov	r2, r9
   1c150:	bl	1b4b8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1c154:	ldr	r0, [r4, #204]	; 0xcc
   1c158:	ldr	r2, [r5, #96]	; 0x60
   1c15c:	ldr	r1, [r5, #100]	; 0x64
   1c160:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c164:	ldr	r6, [fp, #-40]	; 0xffffffd8
   1c168:	str	r2, [sp, #8]
   1c16c:	str	r1, [sp, #12]
   1c170:	str	r6, [sp]
   1c174:	mov	r1, sl
   1c178:	mov	r2, r7
   1c17c:	bl	149c0 <fprintf@plt>
   1c180:	b	1c198 <__flatcc_fb_gen_c_builder@@Base+0x1c48>
   1c184:	ldrb	r0, [r5, #72]	; 0x48
   1c188:	tst	r0, #4
   1c18c:	ldrheq	r0, [r5, #24]
   1c190:	cmpeq	r0, #14
   1c194:	beq	1c134 <__flatcc_fb_gen_c_builder@@Base+0x1be4>
   1c198:	ldr	r5, [r5, #108]	; 0x6c
   1c19c:	cmp	r5, #0
   1c1a0:	bne	1c184 <__flatcc_fb_gen_c_builder@@Base+0x1c34>
   1c1a4:	ldr	r0, [r4, #204]	; 0xcc
   1c1a8:	movw	r1, #32872	; 0x8068
   1c1ac:	movt	r1, #4
   1c1b0:	add	r2, sp, #24
   1c1b4:	bl	149c0 <fprintf@plt>
   1c1b8:	sub	sp, fp, #28
   1c1bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1c0:	push	{r4, r5, r6, sl, fp, lr}
   1c1c4:	add	fp, sp, #16
   1c1c8:	sub	sp, sp, #240	; 0xf0
   1c1cc:	mov	r4, r1
   1c1d0:	mov	r5, r0
   1c1d4:	add	r6, sp, #16
   1c1d8:	mov	r0, r6
   1c1dc:	mov	r1, #0
   1c1e0:	mov	r2, #220	; 0xdc
   1c1e4:	bl	149d8 <memset@plt>
   1c1e8:	mov	r0, r4
   1c1ec:	mov	r1, r6
   1c1f0:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1c1f4:	ldr	r0, [r5, #204]	; 0xcc
   1c1f8:	str	r6, [sp]
   1c1fc:	str	r6, [sp, #4]
   1c200:	str	r6, [sp, #8]
   1c204:	movw	r1, #32925	; 0x809d
   1c208:	movt	r1, #4
   1c20c:	mov	r2, r5
   1c210:	mov	r3, r5
   1c214:	bl	149c0 <fprintf@plt>
   1c218:	sub	sp, fp, #16
   1c21c:	pop	{r4, r5, r6, sl, fp, pc}
   1c220:	ldr	r1, [r0, #20]
   1c224:	mov	r0, #0
   1c228:	cmp	r1, #0
   1c22c:	bxeq	lr
   1c230:	mov	r2, #1
   1c234:	ldrh	r3, [r1, #72]	; 0x48
   1c238:	bic	r3, r2, r3, lsr #2
   1c23c:	add	r0, r0, r3
   1c240:	ldr	r1, [r1]
   1c244:	cmp	r1, #0
   1c248:	bne	1c234 <__flatcc_fb_gen_c_builder@@Base+0x1ce4>
   1c24c:	bx	lr
   1c250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c254:	add	fp, sp, #28
   1c258:	sub	sp, sp, #236	; 0xec
   1c25c:	mov	r4, r2
   1c260:	mov	r7, r1
   1c264:	mov	r5, r0
   1c268:	add	r0, sp, #8
   1c26c:	mov	r6, #0
   1c270:	mov	r1, #0
   1c274:	mov	r2, #220	; 0xdc
   1c278:	bl	149d8 <memset@plt>
   1c27c:	ldr	r7, [r7, #20]
   1c280:	cmp	r7, #0
   1c284:	beq	1c49c <__flatcc_fb_gen_c_builder@@Base+0x1f4c>
   1c288:	add	r8, sp, #8
   1c28c:	ldrb	r0, [r7, #72]	; 0x48
   1c290:	tst	r0, #4
   1c294:	bne	1c490 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
   1c298:	mov	r0, r5
   1c29c:	mov	r1, r6
   1c2a0:	mov	r2, r4
   1c2a4:	mov	r3, #1
   1c2a8:	bl	1b3a4 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1c2ac:	ldrh	r0, [r7, #24]
   1c2b0:	sub	r0, r0, #7
   1c2b4:	cmp	r0, #8
   1c2b8:	bhi	1c4a4 <__flatcc_fb_gen_c_builder@@Base+0x1f54>
   1c2bc:	add	r6, r6, #1
   1c2c0:	add	r1, pc, #0
   1c2c4:	ldr	pc, [r1, r0, lsl #2]
   1c2c8:	andeq	ip, r1, ip, ror #5
   1c2cc:	andeq	ip, r1, r4, lsr r3
   1c2d0:	andeq	ip, r1, ip, ror r3
   1c2d4:	andeq	ip, r1, ip, lsl r3
   1c2d8:	andeq	ip, r1, r4, lsr #9
   1c2dc:	andeq	ip, r1, r4, lsr #9
   1c2e0:	andeq	ip, r1, r4, lsr #9
   1c2e4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c2e8:	muleq	r1, r8, r3
   1c2ec:	ldr	r0, [r7, #16]
   1c2f0:	bl	1b4c0 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1c2f4:	mov	r3, r0
   1c2f8:	ldr	r0, [r5, #204]	; 0xcc
   1c2fc:	ldr	r2, [r7, #96]	; 0x60
   1c300:	ldr	r1, [r7, #100]	; 0x64
   1c304:	str	r2, [sp]
   1c308:	str	r1, [sp, #4]
   1c30c:	movw	r1, #30686	; 0x77de
   1c310:	movt	r1, #4
   1c314:	mov	r2, r5
   1c318:	b	1c374 <__flatcc_fb_gen_c_builder@@Base+0x1e24>
   1c31c:	ldr	r0, [r5, #204]	; 0xcc
   1c320:	ldrd	r2, [r7, #96]	; 0x60
   1c324:	stm	sp, {r2, r3}
   1c328:	movw	r1, #30707	; 0x77f3
   1c32c:	movt	r1, #4
   1c330:	b	1c390 <__flatcc_fb_gen_c_builder@@Base+0x1e40>
   1c334:	ldr	r9, [r7, #16]
   1c338:	mov	r0, r9
   1c33c:	mov	r1, r5
   1c340:	bl	1b42c <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1c344:	mov	sl, r0
   1c348:	mov	r0, r9
   1c34c:	bl	1b444 <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1c350:	mov	r3, r0
   1c354:	ldr	r0, [r5, #204]	; 0xcc
   1c358:	ldr	r2, [r7, #96]	; 0x60
   1c35c:	ldr	r1, [r7, #100]	; 0x64
   1c360:	str	r2, [sp]
   1c364:	str	r1, [sp, #4]
   1c368:	movw	r1, #30675	; 0x77d3
   1c36c:	movt	r1, #4
   1c370:	mov	r2, sl
   1c374:	bl	149c0 <fprintf@plt>
   1c378:	b	1c490 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
   1c37c:	ldr	r0, [r5, #204]	; 0xcc
   1c380:	ldrd	r2, [r7, #96]	; 0x60
   1c384:	stm	sp, {r2, r3}
   1c388:	movw	r1, #30728	; 0x7808
   1c38c:	movt	r1, #4
   1c390:	mov	r2, r5
   1c394:	b	1c48c <__flatcc_fb_gen_c_builder@@Base+0x1f3c>
   1c398:	ldr	r0, [r7, #16]
   1c39c:	mov	r1, r8
   1c3a0:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1c3a4:	ldr	r0, [r7, #16]
   1c3a8:	ldrh	r0, [r0, #8]
   1c3ac:	cmp	r0, #2
   1c3b0:	bcc	1c3c4 <__flatcc_fb_gen_c_builder@@Base+0x1e74>
   1c3b4:	cmp	r0, #4
   1c3b8:	beq	1c42c <__flatcc_fb_gen_c_builder@@Base+0x1edc>
   1c3bc:	cmp	r0, #3
   1c3c0:	bne	1c544 <__flatcc_fb_gen_c_builder@@Base+0x1ff4>
   1c3c4:	ldr	r0, [r5, #204]	; 0xcc
   1c3c8:	ldrd	r2, [r7, #96]	; 0x60
   1c3cc:	stm	sp, {r2, r3}
   1c3d0:	movw	r1, #30688	; 0x77e0
   1c3d4:	movt	r1, #4
   1c3d8:	b	1c488 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1c3dc:	ldr	r0, [r7, #16]
   1c3e0:	mov	r1, r8
   1c3e4:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1c3e8:	ldr	r0, [r7, #16]
   1c3ec:	ldrh	r0, [r0, #8]
   1c3f0:	cmp	r0, #4
   1c3f4:	bhi	1c4f4 <__flatcc_fb_gen_c_builder@@Base+0x1fa4>
   1c3f8:	add	r1, pc, #0
   1c3fc:	ldr	pc, [r1, r0, lsl #2]
   1c400:	andeq	ip, r1, r4, lsl r4
   1c404:	andeq	ip, r1, ip, asr r4
   1c408:	strdeq	ip, [r1], -r4
   1c40c:	andeq	ip, r1, r4, ror r4
   1c410:	andeq	ip, r1, r4, asr #8
   1c414:	ldr	r0, [r5, #204]	; 0xcc
   1c418:	ldrd	r2, [r7, #96]	; 0x60
   1c41c:	stm	sp, {r2, r3}
   1c420:	movw	r1, #30452	; 0x76f4
   1c424:	movt	r1, #4
   1c428:	b	1c488 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1c42c:	ldr	r0, [r5, #204]	; 0xcc
   1c430:	ldrd	r2, [r7, #96]	; 0x60
   1c434:	stm	sp, {r2, r3}
   1c438:	movw	r1, #30606	; 0x778e
   1c43c:	movt	r1, #4
   1c440:	b	1c488 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1c444:	ldr	r0, [r5, #204]	; 0xcc
   1c448:	ldrd	r2, [r7, #96]	; 0x60
   1c44c:	stm	sp, {r2, r3}
   1c450:	movw	r1, #30467	; 0x7703
   1c454:	movt	r1, #4
   1c458:	b	1c488 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1c45c:	ldr	r0, [r5, #204]	; 0xcc
   1c460:	ldrd	r2, [r7, #96]	; 0x60
   1c464:	stm	sp, {r2, r3}
   1c468:	movw	r1, #30424	; 0x76d8
   1c46c:	movt	r1, #4
   1c470:	b	1c488 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1c474:	ldr	r0, [r5, #204]	; 0xcc
   1c478:	ldrd	r2, [r7, #96]	; 0x60
   1c47c:	stm	sp, {r2, r3}
   1c480:	movw	r1, #30436	; 0x76e4
   1c484:	movt	r1, #4
   1c488:	mov	r2, r8
   1c48c:	bl	149c0 <fprintf@plt>
   1c490:	ldr	r7, [r7]
   1c494:	cmp	r7, #0
   1c498:	bne	1c28c <__flatcc_fb_gen_c_builder@@Base+0x1d3c>
   1c49c:	sub	sp, fp, #28
   1c4a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4a4:	movw	r0, #8368	; 0x20b0
   1c4a8:	movt	r0, #6
   1c4ac:	ldr	r0, [r0]
   1c4b0:	movw	r1, #29600	; 0x73a0
   1c4b4:	movt	r1, #4
   1c4b8:	str	r1, [sp]
   1c4bc:	movw	r1, #25975	; 0x6577
   1c4c0:	movt	r1, #3
   1c4c4:	movw	r4, #29004	; 0x714c
   1c4c8:	movt	r4, #4
   1c4cc:	mov	r2, r4
   1c4d0:	movw	r3, #1209	; 0x4b9
   1c4d4:	bl	149c0 <fprintf@plt>
   1c4d8:	movw	r0, #29885	; 0x74bd
   1c4dc:	movt	r0, #4
   1c4e0:	movw	r3, #30532	; 0x7744
   1c4e4:	movt	r3, #4
   1c4e8:	mov	r1, r4
   1c4ec:	movw	r2, #1209	; 0x4b9
   1c4f0:	bl	14a80 <__assert_fail@plt>
   1c4f4:	movw	r0, #8368	; 0x20b0
   1c4f8:	movt	r0, #6
   1c4fc:	ldr	r0, [r0]
   1c500:	movw	r1, #30488	; 0x7718
   1c504:	movt	r1, #4
   1c508:	str	r1, [sp]
   1c50c:	movw	r1, #25975	; 0x6577
   1c510:	movt	r1, #3
   1c514:	movw	r4, #29004	; 0x714c
   1c518:	movt	r4, #4
   1c51c:	mov	r2, r4
   1c520:	movw	r3, #1173	; 0x495
   1c524:	bl	149c0 <fprintf@plt>
   1c528:	movw	r0, #29885	; 0x74bd
   1c52c:	movt	r0, #4
   1c530:	movw	r3, #30532	; 0x7744
   1c534:	movt	r3, #4
   1c538:	mov	r1, r4
   1c53c:	movw	r2, #1173	; 0x495
   1c540:	bl	14a80 <__assert_fail@plt>
   1c544:	movw	r0, #8368	; 0x20b0
   1c548:	movt	r0, #6
   1c54c:	ldr	r0, [r0]
   1c550:	movw	r1, #30631	; 0x77a7
   1c554:	movt	r1, #4
   1c558:	str	r1, [sp]
   1c55c:	movw	r1, #25975	; 0x6577
   1c560:	movt	r1, #3
   1c564:	movw	r4, #29004	; 0x714c
   1c568:	movt	r4, #4
   1c56c:	mov	r2, r4
   1c570:	movw	r3, #1189	; 0x4a5
   1c574:	bl	149c0 <fprintf@plt>
   1c578:	movw	r0, #29885	; 0x74bd
   1c57c:	movt	r0, #4
   1c580:	movw	r3, #30532	; 0x7744
   1c584:	movt	r3, #4
   1c588:	mov	r1, r4
   1c58c:	movw	r2, #1189	; 0x4a5
   1c590:	bl	14a80 <__assert_fail@plt>
   1c594:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c598:	add	fp, sp, #24
   1c59c:	ldr	r7, [r1, #20]
   1c5a0:	cmp	r7, #0
   1c5a4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c5a8:	mov	r4, r2
   1c5ac:	mov	r5, r0
   1c5b0:	mov	r6, #0
   1c5b4:	movw	r8, #30680	; 0x77d8
   1c5b8:	movt	r8, #4
   1c5bc:	ldrb	r0, [r7, #72]	; 0x48
   1c5c0:	tst	r0, #4
   1c5c4:	bne	1c5f0 <__flatcc_fb_gen_c_builder@@Base+0x20a0>
   1c5c8:	mov	r0, r5
   1c5cc:	mov	r1, r6
   1c5d0:	mov	r2, r4
   1c5d4:	mov	r3, #1
   1c5d8:	bl	1b3a4 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1c5dc:	ldrd	r2, [r7, #96]	; 0x60
   1c5e0:	ldr	r0, [r5, #204]	; 0xcc
   1c5e4:	mov	r1, r8
   1c5e8:	bl	149c0 <fprintf@plt>
   1c5ec:	add	r6, r6, #1
   1c5f0:	ldr	r7, [r7]
   1c5f4:	cmp	r7, #0
   1c5f8:	bne	1c5bc <__flatcc_fb_gen_c_builder@@Base+0x206c>
   1c5fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c604:	add	fp, sp, #28
   1c608:	sub	sp, sp, #492	; 0x1ec
   1c60c:	mov	r6, r1
   1c610:	mov	r4, r0
   1c614:	add	r5, sp, #256	; 0x100
   1c618:	mov	r0, r5
   1c61c:	mov	r1, #0
   1c620:	mov	r2, #220	; 0xdc
   1c624:	bl	149d8 <memset@plt>
   1c628:	add	r9, sp, #32
   1c62c:	mov	r0, r9
   1c630:	mov	r1, #0
   1c634:	mov	r2, #220	; 0xdc
   1c638:	bl	149d8 <memset@plt>
   1c63c:	mov	r0, r6
   1c640:	mov	r1, r5
   1c644:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1c648:	ldr	r7, [r6, #20]
   1c64c:	cmp	r7, #0
   1c650:	beq	1c728 <__flatcc_fb_gen_c_builder@@Base+0x21d8>
   1c654:	sub	sl, fp, #40	; 0x28
   1c658:	sub	r6, fp, #36	; 0x24
   1c65c:	movw	r8, #30753	; 0x7821
   1c660:	movt	r8, #4
   1c664:	ldrh	r0, [r7, #24]
   1c668:	cmp	r0, #0
   1c66c:	beq	1c6fc <__flatcc_fb_gen_c_builder@@Base+0x21ac>
   1c670:	cmp	r0, #10
   1c674:	beq	1c6c4 <__flatcc_fb_gen_c_builder@@Base+0x2174>
   1c678:	cmp	r0, #14
   1c67c:	bne	1c74c <__flatcc_fb_gen_c_builder@@Base+0x21fc>
   1c680:	ldr	r0, [r7, #16]
   1c684:	mov	r1, r9
   1c688:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1c68c:	mov	r0, r7
   1c690:	mov	r1, sl
   1c694:	mov	r2, r6
   1c698:	bl	1b4b8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1c69c:	ldr	r0, [r4, #204]	; 0xcc
   1c6a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c6a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6a8:	stm	sp, {r1, r2, r9}
   1c6ac:	str	r5, [sp, #12]
   1c6b0:	str	r5, [sp, #16]
   1c6b4:	str	r1, [sp, #20]
   1c6b8:	str	r2, [sp, #24]
   1c6bc:	mov	r1, r8
   1c6c0:	b	1c710 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
   1c6c4:	mov	r0, r7
   1c6c8:	mov	r1, sl
   1c6cc:	mov	r2, r6
   1c6d0:	bl	1b4b8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1c6d4:	ldr	r0, [r4, #204]	; 0xcc
   1c6d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c6dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6e0:	stm	sp, {r1, r2, r4, r5}
   1c6e4:	str	r5, [sp, #16]
   1c6e8:	str	r1, [sp, #20]
   1c6ec:	str	r2, [sp, #24]
   1c6f0:	movw	r1, #30885	; 0x78a5
   1c6f4:	movt	r1, #4
   1c6f8:	b	1c710 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
   1c6fc:	ldr	r0, [r4, #204]	; 0xcc
   1c700:	str	r5, [sp]
   1c704:	str	r5, [sp, #4]
   1c708:	movw	r1, #31023	; 0x792f
   1c70c:	movt	r1, #4
   1c710:	mov	r2, r5
   1c714:	mov	r3, r5
   1c718:	bl	149c0 <fprintf@plt>
   1c71c:	ldr	r7, [r7]
   1c720:	cmp	r7, #0
   1c724:	bne	1c664 <__flatcc_fb_gen_c_builder@@Base+0x2114>
   1c728:	ldr	r0, [r4, #204]	; 0xcc
   1c72c:	str	r5, [sp]
   1c730:	movw	r1, #31236	; 0x7a04
   1c734:	movt	r1, #4
   1c738:	mov	r2, r4
   1c73c:	mov	r3, r4
   1c740:	bl	149c0 <fprintf@plt>
   1c744:	sub	sp, fp, #28
   1c748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c74c:	movw	r0, #8368	; 0x20b0
   1c750:	movt	r0, #6
   1c754:	ldr	r0, [r0]
   1c758:	movw	r1, #31141	; 0x79a5
   1c75c:	movt	r1, #4
   1c760:	str	r1, [sp]
   1c764:	movw	r1, #25975	; 0x6577
   1c768:	movt	r1, #3
   1c76c:	movw	r4, #29004	; 0x714c
   1c770:	movt	r4, #4
   1c774:	mov	r2, r4
   1c778:	movw	r3, #1608	; 0x648
   1c77c:	bl	149c0 <fprintf@plt>
   1c780:	movw	r0, #29885	; 0x74bd
   1c784:	movt	r0, #4
   1c788:	movw	r3, #31185	; 0x79d1
   1c78c:	movt	r3, #4
   1c790:	mov	r1, r4
   1c794:	movw	r2, #1608	; 0x648
   1c798:	bl	14a80 <__assert_fail@plt>
   1c79c:	push	{r4, r5, fp, lr}
   1c7a0:	add	fp, sp, #8
   1c7a4:	sub	sp, sp, #8
   1c7a8:	mov	r5, r1
   1c7ac:	ldrh	r1, [r1, #8]
   1c7b0:	sub	r1, r1, #3
   1c7b4:	cmp	r1, #3
   1c7b8:	bhi	1c874 <__flatcc_fb_gen_c_builder@@Base+0x2324>
   1c7bc:	mov	r4, r2
   1c7c0:	add	r2, pc, #0
   1c7c4:	ldr	pc, [r2, r1, lsl #2]
   1c7c8:	ldrdeq	ip, [r1], -r8
   1c7cc:	andeq	ip, r1, r0, lsr r8
   1c7d0:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c7d4:	andeq	ip, r1, r8, lsl r8
   1c7d8:	vldr	d16, [r5]
   1c7dc:	cmp	r0, #11
   1c7e0:	bne	1c858 <__flatcc_fb_gen_c_builder@@Base+0x2308>
   1c7e4:	vcvt.f32.f64	s0, d16
   1c7e8:	vcvt.f64.f32	d16, s0
   1c7ec:	vmov	r2, r3, d16
   1c7f0:	movw	r1, #52709	; 0xcde5
   1c7f4:	movt	r1, #3
   1c7f8:	b	1c864 <__flatcc_fb_gen_c_builder@@Base+0x2314>
   1c7fc:	bl	1cb10 <__flatcc_fb_gen_c_builder@@Base+0x25c0>
   1c800:	mov	r2, r0
   1c804:	ldrd	r0, [r5]
   1c808:	stm	sp, {r0, r1}
   1c80c:	movw	r1, #52684	; 0xcdcc
   1c810:	movt	r1, #3
   1c814:	b	1c848 <__flatcc_fb_gen_c_builder@@Base+0x22f8>
   1c818:	bl	1cb10 <__flatcc_fb_gen_c_builder@@Base+0x25c0>
   1c81c:	mov	r2, r0
   1c820:	ldrb	r3, [r5]
   1c824:	movw	r1, #52702	; 0xcdde
   1c828:	movt	r1, #3
   1c82c:	b	1c864 <__flatcc_fb_gen_c_builder@@Base+0x2314>
   1c830:	bl	1cb10 <__flatcc_fb_gen_c_builder@@Base+0x25c0>
   1c834:	mov	r2, r0
   1c838:	ldrd	r0, [r5]
   1c83c:	stm	sp, {r0, r1}
   1c840:	movw	r1, #52693	; 0xcdd5
   1c844:	movt	r1, #3
   1c848:	mov	r0, r4
   1c84c:	bl	14a2c <sprintf@plt>
   1c850:	sub	sp, fp, #8
   1c854:	pop	{r4, r5, fp, pc}
   1c858:	vmov	r2, r3, d16
   1c85c:	movw	r1, #52713	; 0xcde9
   1c860:	movt	r1, #3
   1c864:	mov	r0, r4
   1c868:	sub	sp, fp, #8
   1c86c:	pop	{r4, r5, fp, lr}
   1c870:	b	14a2c <sprintf@plt>
   1c874:	movw	r0, #8368	; 0x20b0
   1c878:	movt	r0, #6
   1c87c:	ldr	r0, [r0]
   1c880:	movw	r1, #52568	; 0xcd58
   1c884:	movt	r1, #3
   1c888:	str	r1, [sp]
   1c88c:	movw	r1, #25975	; 0x6577
   1c890:	movt	r1, #3
   1c894:	movw	r4, #52495	; 0xcd0f
   1c898:	movt	r4, #3
   1c89c:	mov	r2, r4
   1c8a0:	mov	r3, #260	; 0x104
   1c8a4:	bl	149c0 <fprintf@plt>
   1c8a8:	movw	r0, #29885	; 0x74bd
   1c8ac:	movt	r0, #4
   1c8b0:	movw	r3, #52717	; 0xcded
   1c8b4:	movt	r3, #3
   1c8b8:	mov	r1, r4
   1c8bc:	mov	r2, #260	; 0x104
   1c8c0:	bl	14a80 <__assert_fail@plt>
   1c8c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8c8:	add	fp, sp, #28
   1c8cc:	sub	sp, sp, #500	; 0x1f4
   1c8d0:	str	r3, [sp, #36]	; 0x24
   1c8d4:	str	r2, [sp, #32]
   1c8d8:	mov	sl, r1
   1c8dc:	mov	r7, r0
   1c8e0:	add	r4, sp, #264	; 0x108
   1c8e4:	mov	r0, r4
   1c8e8:	mov	r1, #0
   1c8ec:	mov	r2, #220	; 0xdc
   1c8f0:	bl	149d8 <memset@plt>
   1c8f4:	add	r0, sp, #40	; 0x28
   1c8f8:	mov	r1, #0
   1c8fc:	mov	r2, #220	; 0xdc
   1c900:	bl	149d8 <memset@plt>
   1c904:	ldr	r8, [fp, #8]
   1c908:	mov	r0, r8
   1c90c:	mov	r1, r4
   1c910:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1c914:	ldr	r0, [fp, #12]
   1c918:	movw	r1, #62213	; 0xf305
   1c91c:	movt	r1, #4
   1c920:	movw	r4, #32282	; 0x7e1a
   1c924:	movt	r4, #4
   1c928:	cmp	r0, #0
   1c92c:	moveq	r4, r1
   1c930:	ldr	r9, [r8, #20]
   1c934:	cmp	r9, #0
   1c938:	beq	1ca68 <__flatcc_fb_gen_c_builder@@Base+0x2518>
   1c93c:	sub	r5, fp, #40	; 0x28
   1c940:	sub	r6, fp, #36	; 0x24
   1c944:	mov	r0, r9
   1c948:	mov	r1, r5
   1c94c:	mov	r2, r6
   1c950:	bl	1b4b8 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1c954:	ldrh	r0, [r9, #24]
   1c958:	cmp	r0, #0
   1c95c:	beq	1ca5c <__flatcc_fb_gen_c_builder@@Base+0x250c>
   1c960:	cmp	r0, #10
   1c964:	beq	1c9dc <__flatcc_fb_gen_c_builder@@Base+0x248c>
   1c968:	cmp	r0, #14
   1c96c:	add	r8, sp, #40	; 0x28
   1c970:	bne	1ca70 <__flatcc_fb_gen_c_builder@@Base+0x2520>
   1c974:	ldr	r0, [r9, #16]
   1c978:	mov	r1, r8
   1c97c:	bl	1a95c <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1c980:	ldr	r0, [r9, #16]
   1c984:	ldrh	r0, [r0, #8]
   1c988:	cmp	r0, #1
   1c98c:	beq	1ca18 <__flatcc_fb_gen_c_builder@@Base+0x24c8>
   1c990:	cmp	r0, #0
   1c994:	bne	1cac0 <__flatcc_fb_gen_c_builder@@Base+0x2570>
   1c998:	ldr	r0, [r7, #204]	; 0xcc
   1c99c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c9a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c9a4:	stm	sp, {r7, sl}
   1c9a8:	ldr	r3, [sp, #32]
   1c9ac:	str	r3, [sp, #8]
   1c9b0:	ldr	r3, [sp, #36]	; 0x24
   1c9b4:	str	r3, [sp, #12]
   1c9b8:	add	r3, sp, #264	; 0x108
   1c9bc:	str	r3, [sp, #16]
   1c9c0:	str	r1, [sp, #20]
   1c9c4:	str	r2, [sp, #24]
   1c9c8:	add	r1, sp, #40	; 0x28
   1c9cc:	str	r1, [sp, #28]
   1c9d0:	movw	r1, #32295	; 0x7e27
   1c9d4:	movt	r1, #4
   1c9d8:	b	1ca50 <__flatcc_fb_gen_c_builder@@Base+0x2500>
   1c9dc:	ldr	r0, [r7, #204]	; 0xcc
   1c9e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c9e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c9e8:	stm	sp, {r7, sl}
   1c9ec:	ldr	r3, [sp, #32]
   1c9f0:	str	r3, [sp, #8]
   1c9f4:	ldr	r3, [sp, #36]	; 0x24
   1c9f8:	str	r3, [sp, #12]
   1c9fc:	add	r3, sp, #264	; 0x108
   1ca00:	str	r3, [sp, #16]
   1ca04:	str	r1, [sp, #20]
   1ca08:	str	r2, [sp, #24]
   1ca0c:	movw	r1, #32564	; 0x7f34
   1ca10:	movt	r1, #4
   1ca14:	b	1ca50 <__flatcc_fb_gen_c_builder@@Base+0x2500>
   1ca18:	ldr	r0, [r7, #204]	; 0xcc
   1ca1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ca20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ca24:	stm	sp, {r7, sl}
   1ca28:	ldr	r3, [sp, #32]
   1ca2c:	str	r3, [sp, #8]
   1ca30:	ldr	r3, [sp, #36]	; 0x24
   1ca34:	str	r3, [sp, #12]
   1ca38:	add	r3, sp, #264	; 0x108
   1ca3c:	str	r3, [sp, #16]
   1ca40:	add	r3, sp, #20
   1ca44:	stm	r3, {r1, r2, r8}
   1ca48:	movw	r1, #32354	; 0x7e62
   1ca4c:	movt	r1, #4
   1ca50:	mov	r2, r7
   1ca54:	mov	r3, r4
   1ca58:	bl	149c0 <fprintf@plt>
   1ca5c:	ldr	r9, [r9]
   1ca60:	cmp	r9, #0
   1ca64:	bne	1c944 <__flatcc_fb_gen_c_builder@@Base+0x23f4>
   1ca68:	sub	sp, fp, #28
   1ca6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca70:	movw	r0, #8368	; 0x20b0
   1ca74:	movt	r0, #6
   1ca78:	ldr	r0, [r0]
   1ca7c:	movw	r1, #32620	; 0x7f6c
   1ca80:	movt	r1, #4
   1ca84:	str	r1, [sp]
   1ca88:	movw	r1, #25975	; 0x6577
   1ca8c:	movt	r1, #3
   1ca90:	movw	r4, #29004	; 0x714c
   1ca94:	movt	r4, #4
   1ca98:	mov	r2, r4
   1ca9c:	movw	r3, #1368	; 0x558
   1caa0:	bl	149c0 <fprintf@plt>
   1caa4:	movw	r0, #29885	; 0x74bd
   1caa8:	movt	r0, #4
   1caac:	movw	r3, #32468	; 0x7ed4
   1cab0:	movt	r3, #4
   1cab4:	mov	r1, r4
   1cab8:	movw	r2, #1368	; 0x558
   1cabc:	bl	14a80 <__assert_fail@plt>
   1cac0:	movw	r0, #8368	; 0x20b0
   1cac4:	movt	r0, #6
   1cac8:	ldr	r0, [r0]
   1cacc:	movw	r1, #32414	; 0x7e9e
   1cad0:	movt	r1, #4
   1cad4:	str	r1, [sp]
   1cad8:	movw	r1, #25975	; 0x6577
   1cadc:	movt	r1, #3
   1cae0:	movw	r4, #29004	; 0x714c
   1cae4:	movt	r4, #4
   1cae8:	mov	r2, r4
   1caec:	movw	r3, #1358	; 0x54e
   1caf0:	bl	149c0 <fprintf@plt>
   1caf4:	movw	r0, #29885	; 0x74bd
   1caf8:	movt	r0, #4
   1cafc:	movw	r3, #32468	; 0x7ed4
   1cb00:	movt	r3, #4
   1cb04:	mov	r1, r4
   1cb08:	movw	r2, #1358	; 0x54e
   1cb0c:	bl	14a80 <__assert_fail@plt>
   1cb10:	sub	r0, r0, #1
   1cb14:	cmp	r0, #9
   1cb18:	movwcc	r1, #33120	; 0x8160
   1cb1c:	movtcc	r1, #4
   1cb20:	ldrcc	r0, [r1, r0, lsl #2]
   1cb24:	bxcc	lr
   1cb28:	push	{r4, sl, fp, lr}
   1cb2c:	add	fp, sp, #8
   1cb30:	sub	sp, sp, #8
   1cb34:	movw	r0, #8368	; 0x20b0
   1cb38:	movt	r0, #6
   1cb3c:	ldr	r0, [r0]
   1cb40:	movw	r1, #52568	; 0xcd58
   1cb44:	movt	r1, #3
   1cb48:	str	r1, [sp]
   1cb4c:	movw	r1, #25975	; 0x6577
   1cb50:	movt	r1, #3
   1cb54:	movw	r4, #52495	; 0xcd0f
   1cb58:	movt	r4, #3
   1cb5c:	mov	r2, r4
   1cb60:	mov	r3, #226	; 0xe2
   1cb64:	bl	149c0 <fprintf@plt>
   1cb68:	movw	r0, #29885	; 0x74bd
   1cb6c:	movt	r0, #4
   1cb70:	movw	r3, #52819	; 0xce53
   1cb74:	movt	r3, #3
   1cb78:	mov	r1, r4
   1cb7c:	mov	r2, #226	; 0xe2
   1cb80:	bl	14a80 <__assert_fail@plt>

0001cb84 <__flatcc_fb_gen_c_verifier@@Base>:
   1cb84:	push	{r4, sl, fp, lr}
   1cb88:	add	fp, sp, #8
   1cb8c:	mov	r4, r0
   1cb90:	bl	1cbc4 <__flatcc_fb_gen_c_verifier@@Base+0x40>
   1cb94:	mov	r0, r4
   1cb98:	bl	1cc94 <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1cb9c:	mov	r0, r4
   1cba0:	bl	1cd18 <__flatcc_fb_gen_c_verifier@@Base+0x194>
   1cba4:	mov	r0, r4
   1cba8:	bl	1cd58 <__flatcc_fb_gen_c_verifier@@Base+0x1d4>
   1cbac:	mov	r0, r4
   1cbb0:	bl	1cd98 <__flatcc_fb_gen_c_verifier@@Base+0x214>
   1cbb4:	mov	r0, r4
   1cbb8:	bl	1cdd8 <__flatcc_fb_gen_c_verifier@@Base+0x254>
   1cbbc:	mov	r0, #0
   1cbc0:	pop	{r4, sl, fp, pc}
   1cbc4:	push	{r4, sl, fp, lr}
   1cbc8:	add	fp, sp, #8
   1cbcc:	mov	r4, r0
   1cbd0:	ldr	r0, [r0, #204]	; 0xcc
   1cbd4:	ldr	r1, [r4, #208]	; 0xd0
   1cbd8:	ldr	r2, [r1, #164]	; 0xa4
   1cbdc:	movw	r1, #33156	; 0x8184
   1cbe0:	movt	r1, #4
   1cbe4:	mov	r3, r2
   1cbe8:	bl	149c0 <fprintf@plt>
   1cbec:	ldr	r3, [r4, #204]	; 0xcc
   1cbf0:	movw	r0, #25678	; 0x644e
   1cbf4:	movt	r0, #3
   1cbf8:	mov	r1, #81	; 0x51
   1cbfc:	mov	r2, #1
   1cc00:	bl	14954 <fwrite@plt>
   1cc04:	ldr	r0, [r4, #204]	; 0xcc
   1cc08:	ldr	r1, [r4, #208]	; 0xd0
   1cc0c:	ldr	r2, [r1, #164]	; 0xa4
   1cc10:	movw	r1, #28811	; 0x708b
   1cc14:	movt	r1, #4
   1cc18:	bl	149c0 <fprintf@plt>
   1cc1c:	ldr	r0, [r4, #204]	; 0xcc
   1cc20:	ldr	r1, [r4, #208]	; 0xd0
   1cc24:	ldr	r2, [r1, #160]	; 0xa0
   1cc28:	movw	r1, #28832	; 0x70a0
   1cc2c:	movt	r1, #4
   1cc30:	bl	149c0 <fprintf@plt>
   1cc34:	ldr	r3, [r4, #204]	; 0xcc
   1cc38:	movw	r0, #50774	; 0xc656
   1cc3c:	movt	r0, #3
   1cc40:	mov	r1, #7
   1cc44:	mov	r2, #1
   1cc48:	bl	14954 <fwrite@plt>
   1cc4c:	ldr	r3, [r4, #204]	; 0xcc
   1cc50:	movw	r0, #33201	; 0x81b1
   1cc54:	movt	r0, #4
   1cc58:	mov	r1, #36	; 0x24
   1cc5c:	mov	r2, #1
   1cc60:	bl	14954 <fwrite@plt>
   1cc64:	movw	r1, #25580	; 0x63ec
   1cc68:	movt	r1, #3
   1cc6c:	movw	r2, #33238	; 0x81d6
   1cc70:	movt	r2, #4
   1cc74:	mov	r0, r4
   1cc78:	bl	16624 <__flatcc_fb_gen_c_includes@@Base>
   1cc7c:	mov	r0, r4
   1cc80:	bl	1ce04 <__flatcc_fb_gen_c_verifier@@Base+0x280>
   1cc84:	ldr	r1, [r4, #204]	; 0xcc
   1cc88:	mov	r0, #10
   1cc8c:	pop	{r4, sl, fp, lr}
   1cc90:	b	14a20 <fputc@plt>
   1cc94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cc98:	add	fp, sp, #24
   1cc9c:	sub	sp, sp, #224	; 0xe0
   1cca0:	mov	r4, r0
   1cca4:	mov	r0, sp
   1cca8:	mov	r1, #0
   1ccac:	mov	r2, #220	; 0xdc
   1ccb0:	bl	149d8 <memset@plt>
   1ccb4:	ldr	r0, [r4, #208]	; 0xd0
   1ccb8:	ldr	r5, [r0, #40]	; 0x28
   1ccbc:	cmp	r5, #0
   1ccc0:	beq	1cd04 <__flatcc_fb_gen_c_verifier@@Base+0x180>
   1ccc4:	mov	r6, sp
   1ccc8:	movw	r7, #33250	; 0x81e2
   1cccc:	movt	r7, #4
   1ccd0:	ldrh	r0, [r5, #8]
   1ccd4:	cmp	r0, #0
   1ccd8:	bne	1ccf8 <__flatcc_fb_gen_c_verifier@@Base+0x174>
   1ccdc:	mov	r0, r5
   1cce0:	mov	r1, r6
   1cce4:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1cce8:	ldr	r0, [r4, #204]	; 0xcc
   1ccec:	mov	r1, r7
   1ccf0:	mov	r2, r6
   1ccf4:	bl	149c0 <fprintf@plt>
   1ccf8:	ldr	r5, [r5]
   1ccfc:	cmp	r5, #0
   1cd00:	bne	1ccd0 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1cd04:	ldr	r1, [r4, #204]	; 0xcc
   1cd08:	mov	r0, #10
   1cd0c:	bl	14a20 <fputc@plt>
   1cd10:	sub	sp, fp, #24
   1cd14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cd18:	push	{r4, r5, fp, lr}
   1cd1c:	add	fp, sp, #8
   1cd20:	mov	r4, r0
   1cd24:	ldr	r0, [r0, #208]	; 0xd0
   1cd28:	ldr	r5, [r0, #40]	; 0x28
   1cd2c:	b	1cd34 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
   1cd30:	ldr	r5, [r5]
   1cd34:	cmp	r5, #0
   1cd38:	popeq	{r4, r5, fp, pc}
   1cd3c:	ldrh	r0, [r5, #8]
   1cd40:	cmp	r0, #4
   1cd44:	bne	1cd30 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1cd48:	mov	r0, r4
   1cd4c:	mov	r1, r5
   1cd50:	bl	1ce3c <__flatcc_fb_gen_c_verifier@@Base+0x2b8>
   1cd54:	b	1cd30 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1cd58:	push	{r4, r5, fp, lr}
   1cd5c:	add	fp, sp, #8
   1cd60:	mov	r4, r0
   1cd64:	ldr	r0, [r0, #208]	; 0xd0
   1cd68:	ldr	r5, [r0, #40]	; 0x28
   1cd6c:	b	1cd74 <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
   1cd70:	ldr	r5, [r5]
   1cd74:	cmp	r5, #0
   1cd78:	popeq	{r4, r5, fp, pc}
   1cd7c:	ldrh	r0, [r5, #8]
   1cd80:	cmp	r0, #1
   1cd84:	bne	1cd70 <__flatcc_fb_gen_c_verifier@@Base+0x1ec>
   1cd88:	mov	r0, r4
   1cd8c:	mov	r1, r5
   1cd90:	bl	1d07c <__flatcc_fb_gen_c_verifier@@Base+0x4f8>
   1cd94:	b	1cd70 <__flatcc_fb_gen_c_verifier@@Base+0x1ec>
   1cd98:	push	{r4, r5, fp, lr}
   1cd9c:	add	fp, sp, #8
   1cda0:	mov	r4, r0
   1cda4:	ldr	r0, [r0, #208]	; 0xd0
   1cda8:	ldr	r5, [r0, #40]	; 0x28
   1cdac:	b	1cdb4 <__flatcc_fb_gen_c_verifier@@Base+0x230>
   1cdb0:	ldr	r5, [r5]
   1cdb4:	cmp	r5, #0
   1cdb8:	popeq	{r4, r5, fp, pc}
   1cdbc:	ldrh	r0, [r5, #8]
   1cdc0:	cmp	r0, #0
   1cdc4:	bne	1cdb0 <__flatcc_fb_gen_c_verifier@@Base+0x22c>
   1cdc8:	mov	r0, r4
   1cdcc:	mov	r1, r5
   1cdd0:	bl	1d154 <__flatcc_fb_gen_c_verifier@@Base+0x5d0>
   1cdd4:	b	1cdb0 <__flatcc_fb_gen_c_verifier@@Base+0x22c>
   1cdd8:	push	{r4, sl, fp, lr}
   1cddc:	add	fp, sp, #8
   1cde0:	mov	r4, r0
   1cde4:	bl	1d66c <__flatcc_fb_gen_c_verifier@@Base+0xae8>
   1cde8:	ldr	r0, [r4, #204]	; 0xcc
   1cdec:	ldr	r1, [r4, #208]	; 0xd0
   1cdf0:	ldr	r2, [r1, #164]	; 0xa4
   1cdf4:	movw	r1, #36259	; 0x8da3
   1cdf8:	movt	r1, #4
   1cdfc:	pop	{r4, sl, fp, lr}
   1ce00:	b	149c0 <fprintf@plt>
   1ce04:	ldr	r1, [r0, #212]	; 0xd4
   1ce08:	ldr	r1, [r1, #140]	; 0x8c
   1ce0c:	cmp	r1, #0
   1ce10:	bxeq	lr
   1ce14:	ldr	r3, [r0, #204]	; 0xcc
   1ce18:	movw	r0, #26154	; 0x662a
   1ce1c:	movt	r0, #3
   1ce20:	mov	r1, #36	; 0x24
   1ce24:	mov	r2, #1
   1ce28:	b	14954 <fwrite@plt>
   1ce2c:	mov	r2, r1
   1ce30:	mov	r1, r0
   1ce34:	ldr	r0, [r0, #12]
   1ce38:	b	16808 <__flatcc_fb_scoped_symbol_name@@Base>
   1ce3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce40:	add	fp, sp, #28
   1ce44:	sub	sp, sp, #484	; 0x1e4
   1ce48:	mov	r5, r1
   1ce4c:	mov	r9, r0
   1ce50:	add	r6, sp, #256	; 0x100
   1ce54:	mov	r0, r6
   1ce58:	mov	r1, #0
   1ce5c:	mov	r2, #220	; 0xdc
   1ce60:	bl	149d8 <memset@plt>
   1ce64:	add	r0, sp, #32
   1ce68:	mov	r1, #0
   1ce6c:	mov	r2, #220	; 0xdc
   1ce70:	bl	149d8 <memset@plt>
   1ce74:	mov	r0, r5
   1ce78:	mov	r1, r6
   1ce7c:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1ce80:	ldr	r0, [r9, #204]	; 0xcc
   1ce84:	movw	r1, #33319	; 0x8227
   1ce88:	movt	r1, #4
   1ce8c:	mov	r2, r6
   1ce90:	bl	149c0 <fprintf@plt>
   1ce94:	ldr	r5, [r5, #20]
   1ce98:	cmp	r5, #0
   1ce9c:	beq	1cfa0 <__flatcc_fb_gen_c_verifier@@Base+0x41c>
   1cea0:	add	r8, sp, #28
   1cea4:	add	sl, sp, #24
   1cea8:	movw	r4, #33771	; 0x83eb
   1ceac:	movt	r4, #4
   1ceb0:	add	r6, sp, #32
   1ceb4:	mov	r0, r5
   1ceb8:	mov	r1, r8
   1cebc:	mov	r2, sl
   1cec0:	bl	1d060 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1cec4:	ldrh	r0, [r5, #24]
   1cec8:	cmp	r0, #0
   1cecc:	beq	1cf94 <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1ced0:	cmp	r0, #10
   1ced4:	beq	1cf2c <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ced8:	cmp	r0, #14
   1cedc:	bne	1cfc0 <__flatcc_fb_gen_c_verifier@@Base+0x43c>
   1cee0:	ldr	r0, [r5, #16]
   1cee4:	mov	r1, r6
   1cee8:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1ceec:	ldr	r1, [r5, #16]
   1cef0:	ldrh	r0, [r1, #8]
   1cef4:	cmp	r0, #1
   1cef8:	beq	1cf4c <__flatcc_fb_gen_c_verifier@@Base+0x3c8>
   1cefc:	cmp	r0, #0
   1cf00:	bne	1d010 <__flatcc_fb_gen_c_verifier@@Base+0x48c>
   1cf04:	ldr	r2, [r5, #48]	; 0x30
   1cf08:	ldr	r0, [r9, #204]	; 0xcc
   1cf0c:	ldr	r1, [sp, #28]
   1cf10:	ldr	r3, [sp, #24]
   1cf14:	stm	sp, {r1, r3}
   1cf18:	movw	r1, #33415	; 0x8287
   1cf1c:	movt	r1, #4
   1cf20:	mov	r3, r6
   1cf24:	bl	149c0 <fprintf@plt>
   1cf28:	b	1cf94 <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1cf2c:	ldr	r2, [r5, #48]	; 0x30
   1cf30:	ldr	r0, [r9, #204]	; 0xcc
   1cf34:	ldr	r3, [sp, #28]
   1cf38:	ldr	r1, [sp, #24]
   1cf3c:	str	r1, [sp]
   1cf40:	mov	r1, r4
   1cf44:	bl	149c0 <fprintf@plt>
   1cf48:	b	1cf94 <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1cf4c:	ldr	r2, [r5, #48]	; 0x30
   1cf50:	ldr	r0, [r9, #204]	; 0xcc
   1cf54:	ldr	r3, [r1, #112]	; 0x70
   1cf58:	ldr	r7, [r1, #116]	; 0x74
   1cf5c:	ldrh	r1, [r1, #104]	; 0x68
   1cf60:	mov	lr, r6
   1cf64:	ldr	r6, [sp, #28]
   1cf68:	mov	ip, r4
   1cf6c:	ldr	r4, [sp, #24]
   1cf70:	stm	sp, {r3, r7}
   1cf74:	str	r1, [sp, #8]
   1cf78:	str	r6, [sp, #12]
   1cf7c:	mov	r6, lr
   1cf80:	str	r4, [sp, #16]
   1cf84:	mov	r4, ip
   1cf88:	movw	r1, #33495	; 0x82d7
   1cf8c:	movt	r1, #4
   1cf90:	bl	149c0 <fprintf@plt>
   1cf94:	ldr	r5, [r5]
   1cf98:	cmp	r5, #0
   1cf9c:	bne	1ceb4 <__flatcc_fb_gen_c_verifier@@Base+0x330>
   1cfa0:	ldr	r3, [r9, #204]	; 0xcc
   1cfa4:	movw	r0, #33886	; 0x845e
   1cfa8:	movt	r0, #4
   1cfac:	mov	r1, #47	; 0x2f
   1cfb0:	mov	r2, #1
   1cfb4:	bl	14954 <fwrite@plt>
   1cfb8:	sub	sp, fp, #28
   1cfbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cfc0:	movw	r0, #8368	; 0x20b0
   1cfc4:	movt	r0, #6
   1cfc8:	ldr	r0, [r0]
   1cfcc:	movw	r1, #33835	; 0x842b
   1cfd0:	movt	r1, #4
   1cfd4:	str	r1, [sp]
   1cfd8:	movw	r1, #25975	; 0x6577
   1cfdc:	movt	r1, #3
   1cfe0:	movw	r4, #33569	; 0x8321
   1cfe4:	movt	r4, #4
   1cfe8:	mov	r2, r4
   1cfec:	mov	r3, #83	; 0x53
   1cff0:	bl	149c0 <fprintf@plt>
   1cff4:	movw	r0, #29885	; 0x74bd
   1cff8:	movt	r0, #4
   1cffc:	movw	r3, #33711	; 0x83af
   1d000:	movt	r3, #4
   1d004:	mov	r1, r4
   1d008:	mov	r2, #83	; 0x53
   1d00c:	bl	14a80 <__assert_fail@plt>
   1d010:	movw	r0, #8368	; 0x20b0
   1d014:	movt	r0, #6
   1d018:	ldr	r0, [r0]
   1d01c:	movw	r1, #33651	; 0x8373
   1d020:	movt	r1, #4
   1d024:	str	r1, [sp]
   1d028:	movw	r1, #25975	; 0x6577
   1d02c:	movt	r1, #3
   1d030:	movw	r4, #33569	; 0x8321
   1d034:	movt	r4, #4
   1d038:	mov	r2, r4
   1d03c:	mov	r3, #74	; 0x4a
   1d040:	bl	149c0 <fprintf@plt>
   1d044:	movw	r0, #29885	; 0x74bd
   1d048:	movt	r0, #4
   1d04c:	movw	r3, #33711	; 0x83af
   1d050:	movt	r3, #4
   1d054:	mov	r1, r4
   1d058:	mov	r2, #74	; 0x4a
   1d05c:	bl	14a80 <__assert_fail@plt>
   1d060:	ldr	r0, [r0, #4]
   1d064:	b	1d068 <__flatcc_fb_gen_c_verifier@@Base+0x4e4>
   1d068:	ldr	r3, [r0, #4]
   1d06c:	str	r3, [r1]
   1d070:	ldr	r0, [r0]
   1d074:	str	r0, [r2]
   1d078:	bx	lr
   1d07c:	push	{r4, r5, r6, sl, fp, lr}
   1d080:	add	fp, sp, #16
   1d084:	sub	sp, sp, #240	; 0xf0
   1d088:	mov	r5, r1
   1d08c:	mov	r6, r0
   1d090:	add	r4, sp, #16
   1d094:	mov	r0, r4
   1d098:	mov	r1, #0
   1d09c:	mov	r2, #220	; 0xdc
   1d0a0:	bl	149d8 <memset@plt>
   1d0a4:	mov	r0, r5
   1d0a8:	mov	r1, r4
   1d0ac:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1d0b0:	ldr	r0, [r6, #204]	; 0xcc
   1d0b4:	ldrd	r2, [r5, #112]	; 0x70
   1d0b8:	ldrh	r1, [r5, #104]	; 0x68
   1d0bc:	stm	sp, {r2, r3}
   1d0c0:	str	r1, [sp, #8]
   1d0c4:	movw	r1, #33934	; 0x848e
   1d0c8:	movt	r1, #4
   1d0cc:	mov	r2, r4
   1d0d0:	mov	r3, r4
   1d0d4:	bl	149c0 <fprintf@plt>
   1d0d8:	ldr	r0, [r6, #204]	; 0xcc
   1d0dc:	ldrd	r2, [r5, #112]	; 0x70
   1d0e0:	ldrh	r1, [r5, #104]	; 0x68
   1d0e4:	stm	sp, {r2, r3}
   1d0e8:	str	r1, [sp, #8]
   1d0ec:	movw	r1, #34087	; 0x8527
   1d0f0:	movt	r1, #4
   1d0f4:	mov	r2, r4
   1d0f8:	mov	r3, r4
   1d0fc:	bl	149c0 <fprintf@plt>
   1d100:	ldr	r0, [r6, #204]	; 0xcc
   1d104:	ldrd	r2, [r5, #112]	; 0x70
   1d108:	ldrh	r1, [r5, #104]	; 0x68
   1d10c:	stm	sp, {r2, r3}
   1d110:	str	r1, [sp, #8]
   1d114:	movw	r1, #34251	; 0x85cb
   1d118:	movt	r1, #4
   1d11c:	mov	r2, r4
   1d120:	mov	r3, r6
   1d124:	bl	149c0 <fprintf@plt>
   1d128:	ldr	r0, [r6, #204]	; 0xcc
   1d12c:	ldrd	r2, [r5, #112]	; 0x70
   1d130:	ldrh	r1, [r5, #104]	; 0x68
   1d134:	stm	sp, {r2, r3}
   1d138:	str	r1, [sp, #8]
   1d13c:	movw	r1, #34434	; 0x8682
   1d140:	movt	r1, #4
   1d144:	mov	r2, r4
   1d148:	bl	149c0 <fprintf@plt>
   1d14c:	sub	sp, fp, #16
   1d150:	pop	{r4, r5, r6, sl, fp, pc}
   1d154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d158:	add	fp, sp, #28
   1d15c:	sub	sp, sp, #484	; 0x1e4
   1d160:	mov	r7, r1
   1d164:	mov	r4, r0
   1d168:	add	r5, sp, #256	; 0x100
   1d16c:	mov	r0, r5
   1d170:	mov	r1, #0
   1d174:	mov	r2, #220	; 0xdc
   1d178:	bl	149d8 <memset@plt>
   1d17c:	add	r8, sp, #32
   1d180:	mov	r0, r8
   1d184:	mov	r1, #0
   1d188:	mov	r2, #220	; 0xdc
   1d18c:	bl	149d8 <memset@plt>
   1d190:	mov	r0, r7
   1d194:	mov	r1, r5
   1d198:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1d19c:	ldr	r0, [r4, #204]	; 0xcc
   1d1a0:	movw	r1, #34610	; 0x8732
   1d1a4:	movt	r1, #4
   1d1a8:	mov	r2, r5
   1d1ac:	bl	149c0 <fprintf@plt>
   1d1b0:	ldr	r9, [r7, #20]
   1d1b4:	cmp	r9, #0
   1d1b8:	beq	1d524 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   1d1bc:	mov	r0, #1
   1d1c0:	movw	sl, #34709	; 0x8795
   1d1c4:	movt	sl, #4
   1d1c8:	movw	r6, #38359	; 0x95d7
   1d1cc:	movt	r6, #4
   1d1d0:	b	1d2c0 <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   1d1d4:	add	sl, r9, #88	; 0x58
   1d1d8:	ldm	sl, {r6, r7, sl}
   1d1dc:	ldr	r8, [r9, #100]	; 0x64
   1d1e0:	orrs	r3, r6, r7
   1d1e4:	mov	r2, r6
   1d1e8:	movweq	r2, #1
   1d1ec:	movne	r3, r7
   1d1f0:	mvn	r0, #0
   1d1f4:	mov	r1, #0
   1d1f8:	bl	34858 <fb_value_set_visit@@Base+0x6c0>
   1d1fc:	ldr	r2, [r4, #204]	; 0xcc
   1d200:	ldrh	r3, [r9, #74]	; 0x4a
   1d204:	str	r6, [sp, #8]
   1d208:	movw	r6, #38359	; 0x95d7
   1d20c:	movt	r6, #4
   1d210:	str	r7, [sp, #12]
   1d214:	str	r3, [sp, #16]
   1d218:	str	r5, [sp]
   1d21c:	str	r0, [sp, #24]
   1d220:	str	r1, [sp, #28]
   1d224:	mov	r0, r2
   1d228:	movw	r1, #34917	; 0x8865
   1d22c:	movt	r1, #4
   1d230:	mov	r2, sl
   1d234:	movw	sl, #34709	; 0x8795
   1d238:	movt	sl, #4
   1d23c:	mov	r3, r8
   1d240:	add	r8, sp, #32
   1d244:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d248:	ldrd	r2, [r9, #96]	; 0x60
   1d24c:	ldr	r0, [r4, #204]	; 0xcc
   1d250:	stm	sp, {r5, r8}
   1d254:	movw	r1, #35310	; 0x89ee
   1d258:	movt	r1, #4
   1d25c:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d260:	ldrd	r2, [r9, #96]	; 0x60
   1d264:	ldr	r0, [r4, #204]	; 0xcc
   1d268:	stm	sp, {r5, r8}
   1d26c:	movw	r1, #35375	; 0x8a2f
   1d270:	movt	r1, #4
   1d274:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d278:	ldrd	r2, [r9, #96]	; 0x60
   1d27c:	ldr	r0, [r4, #204]	; 0xcc
   1d280:	stm	sp, {r5, r8}
   1d284:	movw	r1, #35072	; 0x8900
   1d288:	movt	r1, #4
   1d28c:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d290:	ldrd	r2, [r9, #96]	; 0x60
   1d294:	ldr	r0, [r4, #204]	; 0xcc
   1d298:	stm	sp, {r5, r8}
   1d29c:	movw	r1, #35130	; 0x893a
   1d2a0:	movt	r1, #4
   1d2a4:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d2a8:	ldrh	r1, [r9, #74]	; 0x4a
   1d2ac:	str	r5, [sp]
   1d2b0:	stmib	sp, {r1, r8}
   1d2b4:	movw	r1, #34780	; 0x87dc
   1d2b8:	movt	r1, #4
   1d2bc:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d2c0:	ldrb	r1, [r9, #72]	; 0x48
   1d2c4:	tst	r1, #4
   1d2c8:	bne	1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x974>
   1d2cc:	ldr	r3, [r4, #204]	; 0xcc
   1d2d0:	cmp	r0, #0
   1d2d4:	beq	1d2e8 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1d2d8:	movw	r0, #34680	; 0x8778
   1d2dc:	movt	r0, #4
   1d2e0:	mov	r1, #28
   1d2e4:	b	1d2f0 <__flatcc_fb_gen_c_verifier@@Base+0x76c>
   1d2e8:	mov	r0, sl
   1d2ec:	mov	r1, #30
   1d2f0:	mov	r2, #1
   1d2f4:	bl	14954 <fwrite@plt>
   1d2f8:	ldrh	r0, [r9, #72]	; 0x48
   1d2fc:	ubfx	r5, r0, #8, #1
   1d300:	ldrh	r0, [r9, #24]
   1d304:	sub	r0, r0, #7
   1d308:	cmp	r0, #8
   1d30c:	bhi	1d4dc <__flatcc_fb_gen_c_verifier@@Base+0x958>
   1d310:	add	r1, pc, #0
   1d314:	ldr	pc, [r1, r0, lsl #2]
   1d318:	andeq	sp, r1, ip, lsr r3
   1d31c:	andeq	sp, r1, r8, lsr #9
   1d320:	muleq	r1, r8, r3
   1d324:	andeq	sp, r1, r8, asr r4
   1d328:	ldrdeq	sp, [r1], -ip
   1d32c:	ldrdeq	sp, [r1], -ip
   1d330:	ldrdeq	sp, [r1], -ip
   1d334:	andeq	sp, r1, r0, ror r4
   1d338:			; <UNDEFINED> instruction: 0x0001d3b0
   1d33c:	ldr	r0, [r9, #104]	; 0x68
   1d340:	cmp	r0, #0
   1d344:	beq	1d1d4 <__flatcc_fb_gen_c_verifier@@Base+0x650>
   1d348:	mov	r1, r8
   1d34c:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1d350:	ldr	r0, [r4, #204]	; 0xcc
   1d354:	ldr	r2, [r9, #96]	; 0x60
   1d358:	ldr	r3, [r9, #100]	; 0x64
   1d35c:	ldr	r1, [r9, #104]	; 0x68
   1d360:	ldrh	r1, [r1, #8]
   1d364:	cmp	r1, #0
   1d368:	beq	1d2a8 <__flatcc_fb_gen_c_verifier@@Base+0x724>
   1d36c:	ldrd	r6, [r9, #88]	; 0x58
   1d370:	ldrh	r1, [r9, #74]	; 0x4a
   1d374:	str	r6, [sp, #8]
   1d378:	movw	r6, #38359	; 0x95d7
   1d37c:	movt	r6, #4
   1d380:	str	r7, [sp, #12]
   1d384:	str	r1, [sp, #16]
   1d388:	str	r5, [sp]
   1d38c:	movw	r1, #34853	; 0x8825
   1d390:	movt	r1, #4
   1d394:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d398:	ldrd	r2, [r9, #96]	; 0x60
   1d39c:	ldr	r0, [r4, #204]	; 0xcc
   1d3a0:	str	r5, [sp]
   1d3a4:	movw	r1, #35024	; 0x88d0
   1d3a8:	movt	r1, #4
   1d3ac:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d3b0:	ldr	r0, [r9, #16]
   1d3b4:	mov	r1, r8
   1d3b8:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1d3bc:	ldr	r0, [r9, #16]
   1d3c0:	ldrh	r0, [r0, #8]
   1d3c4:	cmp	r0, #4
   1d3c8:	bhi	1d5cc <__flatcc_fb_gen_c_verifier@@Base+0xa48>
   1d3cc:	add	r1, pc, #0
   1d3d0:	ldr	pc, [r1, r0, lsl #2]
   1d3d4:	andeq	sp, r1, r8, asr #4
   1d3d8:	andeq	sp, r1, r8, ror #7
   1d3dc:	andeq	sp, r1, ip, asr #11
   1d3e0:	andeq	sp, r1, r8, ror #7
   1d3e4:	andeq	sp, r1, r0, ror #4
   1d3e8:	add	sl, r9, #88	; 0x58
   1d3ec:	ldm	sl, {r6, r7, r8, sl}
   1d3f0:	orrs	r3, r6, r7
   1d3f4:	mov	r2, r6
   1d3f8:	movweq	r2, #1
   1d3fc:	movne	r3, r7
   1d400:	mvn	r0, #0
   1d404:	mov	r1, #0
   1d408:	bl	34858 <fb_value_set_visit@@Base+0x6c0>
   1d40c:	ldr	r2, [r4, #204]	; 0xcc
   1d410:	ldrh	r3, [r9, #74]	; 0x4a
   1d414:	str	r6, [sp, #8]
   1d418:	movw	r6, #38359	; 0x95d7
   1d41c:	movt	r6, #4
   1d420:	str	r7, [sp, #12]
   1d424:	str	r3, [sp, #16]
   1d428:	str	r5, [sp]
   1d42c:	str	r0, [sp, #24]
   1d430:	str	r1, [sp, #28]
   1d434:	mov	r0, r2
   1d438:	movw	r1, #34917	; 0x8865
   1d43c:	movt	r1, #4
   1d440:	mov	r2, r8
   1d444:	add	r8, sp, #32
   1d448:	mov	r3, sl
   1d44c:	movw	sl, #34709	; 0x8795
   1d450:	movt	sl, #4
   1d454:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d458:	ldrd	r2, [r9, #96]	; 0x60
   1d45c:	ldr	r0, [r4, #204]	; 0xcc
   1d460:	str	r5, [sp]
   1d464:	movw	r1, #34983	; 0x88a7
   1d468:	movt	r1, #4
   1d46c:	b	1d4d8 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d470:	ldr	r0, [r9, #16]
   1d474:	mov	r1, r8
   1d478:	bl	1ce2c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1d47c:	ldr	r0, [r9, #16]
   1d480:	ldrh	r0, [r0, #8]
   1d484:	cmp	r0, #4
   1d488:	bhi	1d61c <__flatcc_fb_gen_c_verifier@@Base+0xa98>
   1d48c:	add	r1, pc, #0
   1d490:	ldr	pc, [r1, r0, lsl #2]
   1d494:	andeq	sp, r1, r8, ror r2
   1d498:	andeq	sp, r1, r8, lsr #9
   1d49c:	andeq	sp, r1, ip, lsl r6
   1d4a0:	andeq	sp, r1, r8, lsr #9
   1d4a4:	muleq	r1, r0, r2
   1d4a8:	ldr	r0, [r4, #204]	; 0xcc
   1d4ac:	ldr	r1, [r9, #88]	; 0x58
   1d4b0:	ldr	r7, [r9, #92]	; 0x5c
   1d4b4:	ldr	r2, [r9, #96]	; 0x60
   1d4b8:	ldr	r3, [r9, #100]	; 0x64
   1d4bc:	ldrh	r6, [r9, #74]	; 0x4a
   1d4c0:	stm	sp, {r1, r7}
   1d4c4:	str	r6, [sp, #8]
   1d4c8:	movw	r6, #38359	; 0x95d7
   1d4cc:	movt	r6, #4
   1d4d0:	movw	r1, #34740	; 0x87b4
   1d4d4:	movt	r1, #4
   1d4d8:	bl	149c0 <fprintf@plt>
   1d4dc:	ldr	r0, [r4, #204]	; 0xcc
   1d4e0:	ldr	r1, [r9, #4]
   1d4e4:	ldr	r3, [r1]
   1d4e8:	ldr	r2, [r1, #4]
   1d4ec:	mov	r1, r6
   1d4f0:	bl	149c0 <fprintf@plt>
   1d4f4:	mov	r0, #0
   1d4f8:	ldr	r9, [r9]
   1d4fc:	cmp	r9, #0
   1d500:	bne	1d2c0 <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   1d504:	cmp	r0, #0
   1d508:	bne	1d524 <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   1d50c:	ldr	r3, [r4, #204]	; 0xcc
   1d510:	movw	r0, #35509	; 0x8ab5
   1d514:	movt	r0, #4
   1d518:	mov	r1, #15
   1d51c:	mov	r2, #1
   1d520:	bl	14954 <fwrite@plt>
   1d524:	ldr	r3, [r4, #204]	; 0xcc
   1d528:	movw	r0, #35525	; 0x8ac5
   1d52c:	movt	r0, #4
   1d530:	mov	r1, #29
   1d534:	mov	r2, #1
   1d538:	bl	14954 <fwrite@plt>
   1d53c:	ldr	r3, [r4, #204]	; 0xcc
   1d540:	movw	r0, #52096	; 0xcb80
   1d544:	movt	r0, #4
   1d548:	mov	r1, #3
   1d54c:	mov	r2, #1
   1d550:	bl	14954 <fwrite@plt>
   1d554:	ldr	r0, [r4, #204]	; 0xcc
   1d558:	add	r5, sp, #256	; 0x100
   1d55c:	str	r5, [sp]
   1d560:	movw	r1, #35555	; 0x8ae3
   1d564:	movt	r1, #4
   1d568:	mov	r2, r5
   1d56c:	mov	r3, r5
   1d570:	bl	149c0 <fprintf@plt>
   1d574:	ldr	r0, [r4, #204]	; 0xcc
   1d578:	str	r5, [sp]
   1d57c:	movw	r1, #35715	; 0x8b83
   1d580:	movt	r1, #4
   1d584:	mov	r2, r5
   1d588:	mov	r3, r5
   1d58c:	bl	149c0 <fprintf@plt>
   1d590:	ldr	r0, [r4, #204]	; 0xcc
   1d594:	movw	r1, #35886	; 0x8c2e
   1d598:	movt	r1, #4
   1d59c:	mov	r2, r5
   1d5a0:	mov	r3, r5
   1d5a4:	bl	149c0 <fprintf@plt>
   1d5a8:	ldr	r0, [r4, #204]	; 0xcc
   1d5ac:	str	r5, [sp]
   1d5b0:	movw	r1, #36069	; 0x8ce5
   1d5b4:	movt	r1, #4
   1d5b8:	mov	r2, r5
   1d5bc:	mov	r3, r4
   1d5c0:	bl	149c0 <fprintf@plt>
   1d5c4:	sub	sp, fp, #28
   1d5c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d5cc:	movw	r0, #8368	; 0x20b0
   1d5d0:	movt	r0, #6
   1d5d4:	ldr	r0, [r0]
   1d5d8:	movw	r1, #35442	; 0x8a72
   1d5dc:	movt	r1, #4
   1d5e0:	str	r1, [sp]
   1d5e4:	movw	r1, #25975	; 0x6577
   1d5e8:	movt	r1, #3
   1d5ec:	movw	r4, #33569	; 0x8321
   1d5f0:	movt	r4, #4
   1d5f4:	mov	r2, r4
   1d5f8:	mov	r3, #202	; 0xca
   1d5fc:	bl	149c0 <fprintf@plt>
   1d600:	movw	r0, #29885	; 0x74bd
   1d604:	movt	r0, #4
   1d608:	movw	r3, #35250	; 0x89b2
   1d60c:	movt	r3, #4
   1d610:	mov	r1, r4
   1d614:	mov	r2, #202	; 0xca
   1d618:	bl	14a80 <__assert_fail@plt>
   1d61c:	movw	r0, #8368	; 0x20b0
   1d620:	movt	r0, #6
   1d624:	ldr	r0, [r0]
   1d628:	movw	r1, #35190	; 0x8976
   1d62c:	movt	r1, #4
   1d630:	str	r1, [sp]
   1d634:	movw	r1, #25975	; 0x6577
   1d638:	movt	r1, #3
   1d63c:	movw	r4, #33569	; 0x8321
   1d640:	movt	r4, #4
   1d644:	mov	r2, r4
   1d648:	mov	r3, #178	; 0xb2
   1d64c:	bl	149c0 <fprintf@plt>
   1d650:	movw	r0, #29885	; 0x74bd
   1d654:	movt	r0, #4
   1d658:	movw	r3, #35250	; 0x89b2
   1d65c:	movt	r3, #4
   1d660:	mov	r1, r4
   1d664:	mov	r2, #178	; 0xb2
   1d668:	bl	14a80 <__assert_fail@plt>
   1d66c:	ldr	r1, [r0, #212]	; 0xd4
   1d670:	ldr	r1, [r1, #140]	; 0x8c
   1d674:	cmp	r1, #0
   1d678:	bxeq	lr
   1d67c:	ldr	r3, [r0, #204]	; 0xcc
   1d680:	movw	r0, #50196	; 0xc414
   1d684:	movt	r0, #3
   1d688:	mov	r1, #36	; 0x24
   1d68c:	mov	r2, #1
   1d690:	b	14954 <fwrite@plt>

0001d694 <__flatcc_fb_gen_c_json_parser@@Base>:
   1d694:	push	{r4, sl, fp, lr}
   1d698:	add	fp, sp, #8
   1d69c:	mov	r4, r0
   1d6a0:	bl	1d6c4 <__flatcc_fb_gen_c_json_parser@@Base+0x30>
   1d6a4:	mov	r0, r4
   1d6a8:	bl	1d770 <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
   1d6ac:	mov	r0, r4
   1d6b0:	bl	1db28 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1d6b4:	mov	r0, r4
   1d6b8:	bl	1dc14 <__flatcc_fb_gen_c_json_parser@@Base+0x580>
   1d6bc:	mov	r0, #0
   1d6c0:	pop	{r4, sl, fp, pc}
   1d6c4:	push	{r4, r5, fp, lr}
   1d6c8:	add	fp, sp, #8
   1d6cc:	mov	r4, r0
   1d6d0:	ldr	r0, [r0, #208]	; 0xd0
   1d6d4:	ldr	r2, [r0, #164]	; 0xa4
   1d6d8:	movw	r1, #36287	; 0x8dbf
   1d6dc:	movt	r1, #4
   1d6e0:	mov	r0, r4
   1d6e4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d6e8:	ldr	r0, [r4, #208]	; 0xd0
   1d6ec:	ldr	r2, [r0, #164]	; 0xa4
   1d6f0:	movw	r1, #36312	; 0x8dd8
   1d6f4:	movt	r1, #4
   1d6f8:	mov	r0, r4
   1d6fc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d700:	movw	r5, #26232	; 0x6678
   1d704:	movt	r5, #3
   1d708:	mov	r0, r4
   1d70c:	mov	r1, r5
   1d710:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d714:	movw	r1, #36337	; 0x8df1
   1d718:	movt	r1, #4
   1d71c:	mov	r0, r4
   1d720:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d724:	mov	r0, r4
   1d728:	mov	r1, r5
   1d72c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d730:	movw	r1, #36416	; 0x8e40
   1d734:	movt	r1, #4
   1d738:	mov	r0, r4
   1d73c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d740:	movw	r1, #25592	; 0x63f8
   1d744:	movt	r1, #3
   1d748:	movw	r2, #36322	; 0x8de2
   1d74c:	movt	r2, #4
   1d750:	mov	r0, r4
   1d754:	bl	16624 <__flatcc_fb_gen_c_includes@@Base>
   1d758:	mov	r0, r4
   1d75c:	bl	1dd4c <__flatcc_fb_gen_c_json_parser@@Base+0x6b8>
   1d760:	mov	r0, r4
   1d764:	mov	r1, r5
   1d768:	pop	{r4, r5, fp, lr}
   1d76c:	b	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d770:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d774:	add	fp, sp, #28
   1d778:	sub	sp, sp, #228	; 0xe4
   1d77c:	mov	r4, r0
   1d780:	ldr	r0, [r0, #208]	; 0xd0
   1d784:	ldr	r5, [r0, #52]	; 0x34
   1d788:	mov	r0, sp
   1d78c:	mov	r1, #0
   1d790:	mov	r2, #220	; 0xdc
   1d794:	bl	149d8 <memset@plt>
   1d798:	cmp	r5, #0
   1d79c:	beq	1d8a0 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1d7a0:	ldrh	r0, [r5, #8]
   1d7a4:	cmp	r0, #1
   1d7a8:	bhi	1d8a0 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1d7ac:	movw	r1, #36455	; 0x8e67
   1d7b0:	movt	r1, #4
   1d7b4:	mov	r0, r4
   1d7b8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7bc:	movw	r1, #36458	; 0x8e6a
   1d7c0:	movt	r1, #4
   1d7c4:	mov	r0, r4
   1d7c8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7cc:	movw	r1, #36544	; 0x8ec0
   1d7d0:	movt	r1, #4
   1d7d4:	mov	r0, r4
   1d7d8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7dc:	movw	r1, #36547	; 0x8ec3
   1d7e0:	movt	r1, #4
   1d7e4:	mov	r0, r4
   1d7e8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7ec:	movw	r1, #36615	; 0x8f07
   1d7f0:	movt	r1, #4
   1d7f4:	mov	r0, r4
   1d7f8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7fc:	movw	r1, #36669	; 0x8f3d
   1d800:	movt	r1, #4
   1d804:	mov	r0, r4
   1d808:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d80c:	movw	r1, #36709	; 0x8f65
   1d810:	movt	r1, #4
   1d814:	mov	r0, r4
   1d818:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d81c:	movw	r1, #36781	; 0x8fad
   1d820:	movt	r1, #4
   1d824:	mov	r0, r4
   1d828:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d82c:	movw	r1, #40366	; 0x9dae
   1d830:	movt	r1, #4
   1d834:	mov	r0, r4
   1d838:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d83c:	ldr	r0, [r4, #208]	; 0xd0
   1d840:	ldr	r2, [r0, #160]	; 0xa0
   1d844:	movw	r1, #36843	; 0x8feb
   1d848:	movt	r1, #4
   1d84c:	mov	r0, r4
   1d850:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d854:	ldr	r0, [r4, #220]	; 0xdc
   1d858:	add	r0, r0, #2
   1d85c:	str	r0, [r4, #220]	; 0xdc
   1d860:	movw	r1, #36916	; 0x9034
   1d864:	movt	r1, #4
   1d868:	mov	r0, r4
   1d86c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d870:	ldr	r0, [r4, #220]	; 0xdc
   1d874:	cmp	r0, #0
   1d878:	beq	1db08 <__flatcc_fb_gen_c_json_parser@@Base+0x474>
   1d87c:	subs	r1, r0, #1
   1d880:	str	r1, [r4, #220]	; 0xdc
   1d884:	beq	1db08 <__flatcc_fb_gen_c_json_parser@@Base+0x474>
   1d888:	sub	r0, r0, #2
   1d88c:	str	r0, [r4, #220]	; 0xdc
   1d890:	movw	r1, #26232	; 0x6678
   1d894:	movt	r1, #3
   1d898:	mov	r0, r4
   1d89c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d8a0:	ldr	r0, [r4, #208]	; 0xd0
   1d8a4:	ldr	r5, [r0, #40]	; 0x28
   1d8a8:	cmp	r5, #0
   1d8ac:	beq	1da24 <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   1d8b0:	mov	r6, sp
   1d8b4:	movw	r7, #37298	; 0x91b2
   1d8b8:	movt	r7, #4
   1d8bc:	movw	r8, #37397	; 0x9215
   1d8c0:	movt	r8, #4
   1d8c4:	movw	r9, #37103	; 0x90ef
   1d8c8:	movt	r9, #4
   1d8cc:	movw	sl, #37246	; 0x917e
   1d8d0:	movt	sl, #4
   1d8d4:	ldrh	r0, [r5, #8]
   1d8d8:	cmp	r0, #4
   1d8dc:	bhi	1da18 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   1d8e0:	add	r1, pc, #0
   1d8e4:	ldr	pc, [r1, r0, lsl #2]
   1d8e8:	strdeq	sp, [r1], -ip
   1d8ec:	andeq	sp, r1, ip, ror #18
   1d8f0:	andeq	sp, r1, r8, lsl sl
   1d8f4:	andeq	sp, r1, r8, lsl r9
   1d8f8:	andeq	sp, r1, r4, lsr #19
   1d8fc:	mov	r0, r5
   1d900:	mov	r1, r6
   1d904:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d908:	mov	r0, r4
   1d90c:	movw	r1, #37708	; 0x934c
   1d910:	movt	r1, #4
   1d914:	b	1d998 <__flatcc_fb_gen_c_json_parser@@Base+0x304>
   1d918:	mov	r0, r5
   1d91c:	mov	r1, r6
   1d920:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d924:	mov	r0, r4
   1d928:	mov	r1, r7
   1d92c:	mov	r2, r6
   1d930:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d934:	ldr	r0, [r4, #220]	; 0xdc
   1d938:	add	r0, r0, #2
   1d93c:	str	r0, [r4, #220]	; 0xdc
   1d940:	mov	r0, r4
   1d944:	mov	r1, r8
   1d948:	mov	r2, r6
   1d94c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d950:	ldr	r0, [r4, #220]	; 0xdc
   1d954:	cmp	r0, #0
   1d958:	beq	1daa8 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
   1d95c:	subs	r1, r0, #1
   1d960:	str	r1, [r4, #220]	; 0xdc
   1d964:	bne	1da10 <__flatcc_fb_gen_c_json_parser@@Base+0x37c>
   1d968:	b	1daa8 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
   1d96c:	mov	r0, r5
   1d970:	mov	r1, r6
   1d974:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d978:	mov	r0, r4
   1d97c:	movw	r1, #37448	; 0x9248
   1d980:	movt	r1, #4
   1d984:	mov	r2, r6
   1d988:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d98c:	mov	r0, r4
   1d990:	movw	r1, #37576	; 0x92c8
   1d994:	movt	r1, #4
   1d998:	mov	r2, r6
   1d99c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d9a0:	b	1da18 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   1d9a4:	mov	r0, r5
   1d9a8:	mov	r1, r6
   1d9ac:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d9b0:	mov	r0, r4
   1d9b4:	mov	r1, r9
   1d9b8:	mov	r2, r6
   1d9bc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d9c0:	mov	r0, r4
   1d9c4:	mov	r1, sl
   1d9c8:	mov	r2, r6
   1d9cc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d9d0:	mov	r0, r4
   1d9d4:	mov	r1, r7
   1d9d8:	mov	r2, r6
   1d9dc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d9e0:	ldr	r0, [r4, #220]	; 0xdc
   1d9e4:	add	r0, r0, #2
   1d9e8:	str	r0, [r4, #220]	; 0xdc
   1d9ec:	mov	r0, r4
   1d9f0:	mov	r1, r8
   1d9f4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d9f8:	ldr	r0, [r4, #220]	; 0xdc
   1d9fc:	cmp	r0, #0
   1da00:	beq	1dac8 <__flatcc_fb_gen_c_json_parser@@Base+0x434>
   1da04:	subs	r1, r0, #1
   1da08:	str	r1, [r4, #220]	; 0xdc
   1da0c:	beq	1dac8 <__flatcc_fb_gen_c_json_parser@@Base+0x434>
   1da10:	sub	r0, r0, #2
   1da14:	str	r0, [r4, #220]	; 0xdc
   1da18:	ldr	r5, [r5]
   1da1c:	cmp	r5, #0
   1da20:	bne	1d8d4 <__flatcc_fb_gen_c_json_parser@@Base+0x240>
   1da24:	ldr	r0, [r4, #208]	; 0xd0
   1da28:	ldr	r0, [r0, #60]	; 0x3c
   1da2c:	movw	r1, #56708	; 0xdd84
   1da30:	movt	r1, #1
   1da34:	mov	r2, r4
   1da38:	bl	2719c <fb_scope_table_visit@@Base>
   1da3c:	ldr	r0, [r4, #208]	; 0xd0
   1da40:	ldr	r2, [r0, #160]	; 0xa0
   1da44:	movw	r1, #37839	; 0x93cf
   1da48:	movt	r1, #4
   1da4c:	mov	r0, r4
   1da50:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1da54:	ldr	r0, [r4, #220]	; 0xdc
   1da58:	add	r0, r0, #2
   1da5c:	str	r0, [r4, #220]	; 0xdc
   1da60:	movw	r1, #37397	; 0x9215
   1da64:	movt	r1, #4
   1da68:	mov	r0, r4
   1da6c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1da70:	ldr	r0, [r4, #220]	; 0xdc
   1da74:	cmp	r0, #0
   1da78:	beq	1dae8 <__flatcc_fb_gen_c_json_parser@@Base+0x454>
   1da7c:	subs	r1, r0, #1
   1da80:	str	r1, [r4, #220]	; 0xdc
   1da84:	beq	1dae8 <__flatcc_fb_gen_c_json_parser@@Base+0x454>
   1da88:	sub	r0, r0, #2
   1da8c:	str	r0, [r4, #220]	; 0xdc
   1da90:	movw	r1, #26232	; 0x6678
   1da94:	movt	r1, #3
   1da98:	mov	r0, r4
   1da9c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1daa0:	sub	sp, fp, #28
   1daa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1daa8:	movw	r0, #36960	; 0x9060
   1daac:	movt	r0, #4
   1dab0:	movw	r1, #36972	; 0x906c
   1dab4:	movt	r1, #4
   1dab8:	movw	r3, #37057	; 0x90c1
   1dabc:	movt	r3, #4
   1dac0:	movw	r2, #1747	; 0x6d3
   1dac4:	bl	14a80 <__assert_fail@plt>
   1dac8:	movw	r0, #36960	; 0x9060
   1dacc:	movt	r0, #4
   1dad0:	movw	r1, #36972	; 0x906c
   1dad4:	movt	r1, #4
   1dad8:	movw	r3, #37057	; 0x90c1
   1dadc:	movt	r3, #4
   1dae0:	movw	r2, #1731	; 0x6c3
   1dae4:	bl	14a80 <__assert_fail@plt>
   1dae8:	movw	r0, #36960	; 0x9060
   1daec:	movt	r0, #4
   1daf0:	movw	r1, #36972	; 0x906c
   1daf4:	movt	r1, #4
   1daf8:	movw	r3, #37057	; 0x90c1
   1dafc:	movt	r3, #4
   1db00:	movw	r2, #1755	; 0x6db
   1db04:	bl	14a80 <__assert_fail@plt>
   1db08:	movw	r0, #36960	; 0x9060
   1db0c:	movt	r0, #4
   1db10:	movw	r1, #36972	; 0x906c
   1db14:	movt	r1, #4
   1db18:	movw	r3, #37057	; 0x90c1
   1db1c:	movt	r3, #4
   1db20:	movw	r2, #1716	; 0x6b4
   1db24:	bl	14a80 <__assert_fail@plt>
   1db28:	push	{r4, r5, fp, lr}
   1db2c:	add	fp, sp, #8
   1db30:	mov	r4, r0
   1db34:	ldr	r0, [r0, #208]	; 0xd0
   1db38:	ldr	r5, [r0, #40]	; 0x28
   1db3c:	cmp	r5, #0
   1db40:	bne	1db54 <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1db44:	b	1dbe8 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1db48:	ldr	r5, [r5]
   1db4c:	cmp	r5, #0
   1db50:	beq	1dbe8 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1db54:	ldrh	r0, [r5, #8]
   1db58:	cmp	r0, #4
   1db5c:	bhi	1db48 <__flatcc_fb_gen_c_json_parser@@Base+0x4b4>
   1db60:	add	r1, pc, #0
   1db64:	ldr	pc, [r1, r0, lsl #2]
   1db68:	andeq	sp, r1, ip, ror fp
   1db6c:	muleq	r1, r8, fp
   1db70:	andeq	sp, r1, r8, asr #22
   1db74:	ldrdeq	sp, [r1], -r8
   1db78:	andeq	sp, r1, r0, asr #23
   1db7c:	mov	r0, r4
   1db80:	mov	r1, r5
   1db84:	bl	1ed24 <__flatcc_fb_gen_c_json_parser@@Base+0x1690>
   1db88:	ldr	r5, [r5]
   1db8c:	cmp	r5, #0
   1db90:	bne	1db54 <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1db94:	b	1dbe8 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1db98:	mov	r0, r4
   1db9c:	mov	r1, r5
   1dba0:	bl	1e7a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   1dba4:	mov	r0, r4
   1dba8:	mov	r1, r5
   1dbac:	bl	1eae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
   1dbb0:	ldr	r5, [r5]
   1dbb4:	cmp	r5, #0
   1dbb8:	bne	1db54 <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1dbbc:	b	1dbe8 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1dbc0:	mov	r0, r4
   1dbc4:	mov	r1, r5
   1dbc8:	bl	1ddd8 <__flatcc_fb_gen_c_json_parser@@Base+0x744>
   1dbcc:	mov	r0, r4
   1dbd0:	mov	r1, r5
   1dbd4:	bl	1e31c <__flatcc_fb_gen_c_json_parser@@Base+0xc88>
   1dbd8:	mov	r0, r4
   1dbdc:	mov	r1, r5
   1dbe0:	bl	1e4b8 <__flatcc_fb_gen_c_json_parser@@Base+0xe24>
   1dbe4:	b	1db48 <__flatcc_fb_gen_c_json_parser@@Base+0x4b4>
   1dbe8:	ldr	r0, [r4, #208]	; 0xd0
   1dbec:	ldr	r0, [r0, #60]	; 0x3c
   1dbf0:	movw	r1, #62220	; 0xf30c
   1dbf4:	movt	r1, #1
   1dbf8:	mov	r2, r4
   1dbfc:	bl	2719c <fb_scope_table_visit@@Base>
   1dc00:	mov	r0, r4
   1dc04:	bl	1f5b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f1c>
   1dc08:	mov	r0, r4
   1dc0c:	pop	{r4, r5, fp, lr}
   1dc10:	b	1f86c <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   1dc14:	push	{r4, sl, fp, lr}
   1dc18:	add	fp, sp, #8
   1dc1c:	mov	r4, r0
   1dc20:	bl	222f8 <__flatcc_fb_gen_c_json_parser@@Base+0x4c64>
   1dc24:	ldr	r0, [r4, #208]	; 0xd0
   1dc28:	ldr	r2, [r0, #164]	; 0xa4
   1dc2c:	movw	r1, #46505	; 0xb5a9
   1dc30:	movt	r1, #4
   1dc34:	mov	r0, r4
   1dc38:	pop	{r4, sl, fp, lr}
   1dc3c:	b	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc40:	sub	sp, sp, #8
   1dc44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc48:	add	fp, sp, #28
   1dc4c:	sub	sp, sp, #4
   1dc50:	mov	r8, r1
   1dc54:	mov	r4, r0
   1dc58:	str	r3, [fp, #12]
   1dc5c:	str	r2, [fp, #8]
   1dc60:	ldr	r0, [r0, #212]	; 0xd4
   1dc64:	ldr	r5, [r4, #220]	; 0xdc
   1dc68:	ldr	r7, [r0, #176]	; 0xb0
   1dc6c:	movw	r0, #8384	; 0x20c0
   1dc70:	movt	r0, #6
   1dc74:	ldrb	r0, [r0]
   1dc78:	cmp	r0, #0
   1dc7c:	bne	1dc94 <__flatcc_fb_gen_c_json_parser@@Base+0x600>
   1dc80:	movw	r0, #8384	; 0x20c0
   1dc84:	movt	r0, #6
   1dc88:	mov	r1, #32
   1dc8c:	mov	r2, #64	; 0x40
   1dc90:	bl	149d8 <memset@plt>
   1dc94:	ldrb	r0, [r8]
   1dc98:	cmp	r0, #0
   1dc9c:	beq	1dd30 <__flatcc_fb_gen_c_json_parser@@Base+0x69c>
   1dca0:	mul	r9, r7, r5
   1dca4:	ldr	r0, [r4, #204]	; 0xcc
   1dca8:	cmp	r9, #65	; 0x41
   1dcac:	blt	1dd04 <__flatcc_fb_gen_c_json_parser@@Base+0x670>
   1dcb0:	add	r6, r9, #64	; 0x40
   1dcb4:	mvn	r1, r9
   1dcb8:	cmn	r1, #129	; 0x81
   1dcbc:	mvnle	r1, #128	; 0x80
   1dcc0:	mla	r1, r7, r5, r1
   1dcc4:	add	r1, r1, #64	; 0x40
   1dcc8:	bic	sl, r1, #63	; 0x3f
   1dccc:	movw	r7, #29901	; 0x74cd
   1dcd0:	movt	r7, #4
   1dcd4:	movw	r5, #8384	; 0x20c0
   1dcd8:	movt	r5, #6
   1dcdc:	mov	r1, r7
   1dce0:	mov	r2, #64	; 0x40
   1dce4:	mov	r3, r5
   1dce8:	bl	149c0 <fprintf@plt>
   1dcec:	sub	r6, r6, #64	; 0x40
   1dcf0:	ldr	r0, [r4, #204]	; 0xcc
   1dcf4:	cmp	r6, #128	; 0x80
   1dcf8:	bgt	1dcdc <__flatcc_fb_gen_c_json_parser@@Base+0x648>
   1dcfc:	sub	r1, r9, #64	; 0x40
   1dd00:	sub	r9, r1, sl
   1dd04:	movw	r1, #29901	; 0x74cd
   1dd08:	movt	r1, #4
   1dd0c:	movw	r3, #8384	; 0x20c0
   1dd10:	movt	r3, #6
   1dd14:	mov	r2, r9
   1dd18:	bl	149c0 <fprintf@plt>
   1dd1c:	add	r2, fp, #8
   1dd20:	str	r2, [sp]
   1dd24:	ldr	r0, [r4, #204]	; 0xcc
   1dd28:	mov	r1, r8
   1dd2c:	bl	14a14 <vfprintf@plt>
   1dd30:	ldr	r1, [r4, #204]	; 0xcc
   1dd34:	mov	r0, #10
   1dd38:	bl	14a20 <fputc@plt>
   1dd3c:	sub	sp, fp, #28
   1dd40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd44:	add	sp, sp, #8
   1dd48:	bx	lr
   1dd4c:	ldr	r1, [r0, #212]	; 0xd4
   1dd50:	ldr	r1, [r1, #140]	; 0x8c
   1dd54:	cmp	r1, #0
   1dd58:	bxeq	lr
   1dd5c:	ldr	r3, [r0, #204]	; 0xcc
   1dd60:	movw	r0, #26154	; 0x662a
   1dd64:	movt	r0, #3
   1dd68:	mov	r1, #36	; 0x24
   1dd6c:	mov	r2, #1
   1dd70:	b	14954 <fwrite@plt>
   1dd74:	mov	r2, r1
   1dd78:	mov	r1, r0
   1dd7c:	ldr	r0, [r0, #12]
   1dd80:	b	16808 <__flatcc_fb_scoped_symbol_name@@Base>
   1dd84:	push	{r4, r5, fp, lr}
   1dd88:	add	fp, sp, #8
   1dd8c:	sub	sp, sp, #208	; 0xd0
   1dd90:	mov	r4, r0
   1dd94:	add	r5, sp, #4
   1dd98:	mov	r0, r1
   1dd9c:	mov	r1, r5
   1dda0:	bl	16750 <__flatcc_fb_copy_scope@@Base>
   1dda4:	ldr	r0, [r4, #208]	; 0xd0
   1dda8:	ldr	r2, [r0, #160]	; 0xa0
   1ddac:	movw	r1, #37946	; 0x943a
   1ddb0:	movt	r1, #4
   1ddb4:	mov	r0, r4
   1ddb8:	mov	r3, r5
   1ddbc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ddc0:	movw	r1, #37397	; 0x9215
   1ddc4:	movt	r1, #4
   1ddc8:	mov	r0, r4
   1ddcc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ddd0:	sub	sp, fp, #8
   1ddd4:	pop	{r4, r5, fp, pc}
   1ddd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dddc:	add	fp, sp, #28
   1dde0:	sub	sp, sp, #468	; 0x1d4
   1dde4:	mov	r5, r1
   1dde8:	mov	r4, r0
   1ddec:	add	r6, sp, #240	; 0xf0
   1ddf0:	mov	r0, r6
   1ddf4:	mov	r1, #0
   1ddf8:	mov	r2, #220	; 0xdc
   1ddfc:	bl	149d8 <memset@plt>
   1de00:	add	r0, sp, #16
   1de04:	mov	r1, #0
   1de08:	mov	r2, #220	; 0xdc
   1de0c:	bl	149d8 <memset@plt>
   1de10:	mov	r0, r5
   1de14:	mov	r1, r6
   1de18:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1de1c:	movw	r1, #38054	; 0x94a6
   1de20:	movt	r1, #4
   1de24:	mov	r0, r4
   1de28:	mov	r2, r6
   1de2c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1de30:	movw	r1, #50187	; 0xc40b
   1de34:	movt	r1, #4
   1de38:	mov	r0, r4
   1de3c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1de40:	ldr	r0, [r4, #220]	; 0xdc
   1de44:	add	r0, r0, #1
   1de48:	str	r0, [r4, #220]	; 0xdc
   1de4c:	movw	r1, #26232	; 0x6678
   1de50:	movt	r1, #3
   1de54:	mov	r0, r4
   1de58:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1de5c:	movw	r1, #38198	; 0x9536
   1de60:	movt	r1, #4
   1de64:	mov	r0, r4
   1de68:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1de6c:	movw	r1, #38211	; 0x9543
   1de70:	movt	r1, #4
   1de74:	mov	r0, r4
   1de78:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1de7c:	movw	r1, #38227	; 0x9553
   1de80:	movt	r1, #4
   1de84:	mov	r0, r4
   1de88:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1de8c:	ldr	r0, [r4, #220]	; 0xdc
   1de90:	add	r0, r0, #1
   1de94:	str	r0, [r4, #220]	; 0xdc
   1de98:	movw	r1, #38246	; 0x9566
   1de9c:	movt	r1, #4
   1dea0:	mov	r0, r4
   1dea4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dea8:	ldr	r0, [r4, #220]	; 0xdc
   1deac:	cmp	r0, #0
   1deb0:	beq	1e25c <__flatcc_fb_gen_c_json_parser@@Base+0xbc8>
   1deb4:	sub	r0, r0, #1
   1deb8:	str	r0, [r4, #220]	; 0xdc
   1debc:	ldr	r5, [r5, #20]
   1dec0:	cmp	r5, #0
   1dec4:	beq	1e000 <__flatcc_fb_gen_c_json_parser@@Base+0x96c>
   1dec8:	add	r6, sp, #12
   1decc:	add	r7, sp, #8
   1ded0:	movw	r8, #38351	; 0x95cf
   1ded4:	movt	r8, #4
   1ded8:	movw	sl, #38527	; 0x967f
   1dedc:	movt	sl, #4
   1dee0:	add	r9, sp, #16
   1dee4:	mov	r0, r5
   1dee8:	mov	r1, r6
   1deec:	mov	r2, r7
   1def0:	bl	1f89c <__flatcc_fb_gen_c_json_parser@@Base+0x2208>
   1def4:	ldrh	r0, [r5, #24]
   1def8:	cmp	r0, #0
   1defc:	beq	1dff4 <__flatcc_fb_gen_c_json_parser@@Base+0x960>
   1df00:	cmp	r0, #10
   1df04:	beq	1df6c <__flatcc_fb_gen_c_json_parser@@Base+0x8d8>
   1df08:	cmp	r0, #14
   1df0c:	bne	1e17c <__flatcc_fb_gen_c_json_parser@@Base+0xae8>
   1df10:	ldr	r0, [r5, #16]
   1df14:	mov	r1, r9
   1df18:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1df1c:	ldr	r2, [r5, #48]	; 0x30
   1df20:	ldr	r3, [sp, #12]
   1df24:	ldr	r0, [sp, #8]
   1df28:	str	r0, [sp]
   1df2c:	mov	r0, r4
   1df30:	mov	r1, r8
   1df34:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df38:	ldr	r0, [r4, #220]	; 0xdc
   1df3c:	add	r0, r0, #1
   1df40:	str	r0, [r4, #220]	; 0xdc
   1df44:	ldr	r0, [r5, #16]
   1df48:	ldrh	r0, [r0, #8]
   1df4c:	cmp	r0, #1
   1df50:	beq	1dfc0 <__flatcc_fb_gen_c_json_parser@@Base+0x92c>
   1df54:	cmp	r0, #0
   1df58:	bne	1e1cc <__flatcc_fb_gen_c_json_parser@@Base+0xb38>
   1df5c:	mov	r0, r4
   1df60:	movw	r1, #38371	; 0x95e3
   1df64:	movt	r1, #4
   1df68:	b	1dfcc <__flatcc_fb_gen_c_json_parser@@Base+0x938>
   1df6c:	ldr	r2, [r5, #48]	; 0x30
   1df70:	ldr	r3, [sp, #12]
   1df74:	ldr	r0, [sp, #8]
   1df78:	str	r0, [sp]
   1df7c:	mov	r0, r4
   1df80:	mov	r1, r8
   1df84:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df88:	ldr	r0, [r4, #220]	; 0xdc
   1df8c:	add	r0, r0, #1
   1df90:	str	r0, [r4, #220]	; 0xdc
   1df94:	mov	r0, r4
   1df98:	movw	r1, #38534	; 0x9686
   1df9c:	movt	r1, #4
   1dfa0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dfa4:	mov	r0, r4
   1dfa8:	mov	r1, sl
   1dfac:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dfb0:	ldr	r0, [r4, #220]	; 0xdc
   1dfb4:	cmp	r0, #0
   1dfb8:	bne	1dfec <__flatcc_fb_gen_c_json_parser@@Base+0x958>
   1dfbc:	b	1e23c <__flatcc_fb_gen_c_json_parser@@Base+0xba8>
   1dfc0:	mov	r0, r4
   1dfc4:	movw	r1, #38421	; 0x9615
   1dfc8:	movt	r1, #4
   1dfcc:	mov	r2, r9
   1dfd0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dfd4:	mov	r0, r4
   1dfd8:	mov	r1, sl
   1dfdc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dfe0:	ldr	r0, [r4, #220]	; 0xdc
   1dfe4:	cmp	r0, #0
   1dfe8:	beq	1e21c <__flatcc_fb_gen_c_json_parser@@Base+0xb88>
   1dfec:	sub	r0, r0, #1
   1dff0:	str	r0, [r4, #220]	; 0xdc
   1dff4:	ldr	r5, [r5]
   1dff8:	cmp	r5, #0
   1dffc:	bne	1dee4 <__flatcc_fb_gen_c_json_parser@@Base+0x850>
   1e000:	movw	r1, #38642	; 0x96f2
   1e004:	movt	r1, #4
   1e008:	mov	r0, r4
   1e00c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e010:	ldr	r0, [r4, #220]	; 0xdc
   1e014:	add	r0, r0, #1
   1e018:	str	r0, [r4, #220]	; 0xdc
   1e01c:	movw	r1, #38651	; 0x96fb
   1e020:	movt	r1, #4
   1e024:	mov	r0, r4
   1e028:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e02c:	ldr	r0, [r4, #220]	; 0xdc
   1e030:	add	r0, r0, #1
   1e034:	str	r0, [r4, #220]	; 0xdc
   1e038:	movw	r1, #38708	; 0x9734
   1e03c:	movt	r1, #4
   1e040:	mov	r0, r4
   1e044:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e048:	ldr	r0, [r4, #220]	; 0xdc
   1e04c:	cmp	r0, #0
   1e050:	beq	1e27c <__flatcc_fb_gen_c_json_parser@@Base+0xbe8>
   1e054:	sub	r0, r0, #1
   1e058:	str	r0, [r4, #220]	; 0xdc
   1e05c:	movw	r1, #38800	; 0x9790
   1e060:	movt	r1, #4
   1e064:	mov	r0, r4
   1e068:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e06c:	ldr	r0, [r4, #220]	; 0xdc
   1e070:	add	r0, r0, #1
   1e074:	str	r0, [r4, #220]	; 0xdc
   1e078:	movw	r1, #38809	; 0x9799
   1e07c:	movt	r1, #4
   1e080:	mov	r0, r4
   1e084:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e088:	ldr	r0, [r4, #220]	; 0xdc
   1e08c:	cmp	r0, #0
   1e090:	beq	1e29c <__flatcc_fb_gen_c_json_parser@@Base+0xc08>
   1e094:	sub	r0, r0, #1
   1e098:	str	r0, [r4, #220]	; 0xdc
   1e09c:	movw	r1, #35313	; 0x89f1
   1e0a0:	movt	r1, #3
   1e0a4:	mov	r0, r4
   1e0a8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e0ac:	ldr	r0, [r4, #220]	; 0xdc
   1e0b0:	cmp	r0, #0
   1e0b4:	beq	1e2bc <__flatcc_fb_gen_c_json_parser@@Base+0xc28>
   1e0b8:	sub	r0, r0, #1
   1e0bc:	str	r0, [r4, #220]	; 0xdc
   1e0c0:	movw	r1, #35313	; 0x89f1
   1e0c4:	movt	r1, #3
   1e0c8:	mov	r0, r4
   1e0cc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e0d0:	movw	r1, #38864	; 0x97d0
   1e0d4:	movt	r1, #4
   1e0d8:	mov	r0, r4
   1e0dc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e0e0:	movw	r1, #38892	; 0x97ec
   1e0e4:	movt	r1, #4
   1e0e8:	mov	r0, r4
   1e0ec:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e0f0:	ldr	r0, [r4, #220]	; 0xdc
   1e0f4:	add	r0, r0, #1
   1e0f8:	str	r0, [r4, #220]	; 0xdc
   1e0fc:	movw	r1, #38908	; 0x97fc
   1e100:	movt	r1, #4
   1e104:	mov	r0, r4
   1e108:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e10c:	ldr	r0, [r4, #220]	; 0xdc
   1e110:	cmp	r0, #0
   1e114:	beq	1e2dc <__flatcc_fb_gen_c_json_parser@@Base+0xc48>
   1e118:	sub	r0, r0, #1
   1e11c:	str	r0, [r4, #220]	; 0xdc
   1e120:	movw	r1, #35313	; 0x89f1
   1e124:	movt	r1, #3
   1e128:	mov	r0, r4
   1e12c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e130:	movw	r1, #38880	; 0x97e0
   1e134:	movt	r1, #4
   1e138:	mov	r0, r4
   1e13c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e140:	ldr	r0, [r4, #220]	; 0xdc
   1e144:	cmp	r0, #0
   1e148:	beq	1e2fc <__flatcc_fb_gen_c_json_parser@@Base+0xc68>
   1e14c:	sub	r0, r0, #1
   1e150:	str	r0, [r4, #220]	; 0xdc
   1e154:	movw	r1, #35313	; 0x89f1
   1e158:	movt	r1, #3
   1e15c:	mov	r0, r4
   1e160:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e164:	movw	r1, #26232	; 0x6678
   1e168:	movt	r1, #3
   1e16c:	mov	r0, r4
   1e170:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e174:	sub	sp, fp, #28
   1e178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e17c:	movw	r0, #8368	; 0x20b0
   1e180:	movt	r0, #6
   1e184:	ldr	r0, [r0]
   1e188:	movw	r1, #38596	; 0x96c4
   1e18c:	movt	r1, #4
   1e190:	str	r1, [sp]
   1e194:	movw	r1, #25975	; 0x6577
   1e198:	movt	r1, #3
   1e19c:	movw	r4, #36972	; 0x906c
   1e1a0:	movt	r4, #4
   1e1a4:	mov	r2, r4
   1e1a8:	movw	r3, #1535	; 0x5ff
   1e1ac:	bl	149c0 <fprintf@plt>
   1e1b0:	movw	r0, #29885	; 0x74bd
   1e1b4:	movt	r0, #4
   1e1b8:	movw	r3, #38293	; 0x9595
   1e1bc:	movt	r3, #4
   1e1c0:	mov	r1, r4
   1e1c4:	movw	r2, #1535	; 0x5ff
   1e1c8:	bl	14a80 <__assert_fail@plt>
   1e1cc:	movw	r0, #8368	; 0x20b0
   1e1d0:	movt	r0, #6
   1e1d4:	ldr	r0, [r0]
   1e1d8:	movw	r1, #38472	; 0x9648
   1e1dc:	movt	r1, #4
   1e1e0:	str	r1, [sp]
   1e1e4:	movw	r1, #25975	; 0x6577
   1e1e8:	movt	r1, #3
   1e1ec:	movw	r4, #36972	; 0x906c
   1e1f0:	movt	r4, #4
   1e1f4:	mov	r2, r4
   1e1f8:	movw	r3, #1522	; 0x5f2
   1e1fc:	bl	149c0 <fprintf@plt>
   1e200:	movw	r0, #29885	; 0x74bd
   1e204:	movt	r0, #4
   1e208:	movw	r3, #38293	; 0x9595
   1e20c:	movt	r3, #4
   1e210:	mov	r1, r4
   1e214:	movw	r2, #1522	; 0x5f2
   1e218:	bl	14a80 <__assert_fail@plt>
   1e21c:	movw	r0, #36960	; 0x9060
   1e220:	movt	r0, #4
   1e224:	movw	r1, #36972	; 0x906c
   1e228:	movt	r1, #4
   1e22c:	movw	r3, #38293	; 0x9595
   1e230:	movt	r3, #4
   1e234:	movw	r2, #1526	; 0x5f6
   1e238:	bl	14a80 <__assert_fail@plt>
   1e23c:	movw	r0, #36960	; 0x9060
   1e240:	movt	r0, #4
   1e244:	movw	r1, #36972	; 0x906c
   1e248:	movt	r1, #4
   1e24c:	movw	r3, #38293	; 0x9595
   1e250:	movt	r3, #4
   1e254:	movw	r2, #1532	; 0x5fc
   1e258:	bl	14a80 <__assert_fail@plt>
   1e25c:	movw	r0, #36960	; 0x9060
   1e260:	movt	r0, #4
   1e264:	movw	r1, #36972	; 0x906c
   1e268:	movt	r1, #4
   1e26c:	movw	r3, #38293	; 0x9595
   1e270:	movt	r3, #4
   1e274:	movw	r2, #1503	; 0x5df
   1e278:	bl	14a80 <__assert_fail@plt>
   1e27c:	movw	r0, #36960	; 0x9060
   1e280:	movt	r0, #4
   1e284:	movw	r1, #36972	; 0x906c
   1e288:	movt	r1, #4
   1e28c:	movw	r3, #38293	; 0x9595
   1e290:	movt	r3, #4
   1e294:	movw	r2, #1543	; 0x607
   1e298:	bl	14a80 <__assert_fail@plt>
   1e29c:	movw	r0, #36960	; 0x9060
   1e2a0:	movt	r0, #4
   1e2a4:	movw	r1, #36972	; 0x906c
   1e2a8:	movt	r1, #4
   1e2ac:	movw	r3, #38293	; 0x9595
   1e2b0:	movt	r3, #4
   1e2b4:	movw	r2, #1545	; 0x609
   1e2b8:	bl	14a80 <__assert_fail@plt>
   1e2bc:	movw	r0, #36960	; 0x9060
   1e2c0:	movt	r0, #4
   1e2c4:	movw	r1, #36972	; 0x906c
   1e2c8:	movt	r1, #4
   1e2cc:	movw	r3, #38293	; 0x9595
   1e2d0:	movt	r3, #4
   1e2d4:	movw	r2, #1546	; 0x60a
   1e2d8:	bl	14a80 <__assert_fail@plt>
   1e2dc:	movw	r0, #36960	; 0x9060
   1e2e0:	movt	r0, #4
   1e2e4:	movw	r1, #36972	; 0x906c
   1e2e8:	movt	r1, #4
   1e2ec:	movw	r3, #38293	; 0x9595
   1e2f0:	movt	r3, #4
   1e2f4:	movw	r2, #1550	; 0x60e
   1e2f8:	bl	14a80 <__assert_fail@plt>
   1e2fc:	movw	r0, #36960	; 0x9060
   1e300:	movt	r0, #4
   1e304:	movw	r1, #36972	; 0x906c
   1e308:	movt	r1, #4
   1e30c:	movw	r3, #38293	; 0x9595
   1e310:	movt	r3, #4
   1e314:	mov	r2, #1552	; 0x610
   1e318:	bl	14a80 <__assert_fail@plt>
   1e31c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e320:	add	fp, sp, #24
   1e324:	sub	sp, sp, #240	; 0xf0
   1e328:	mov	r5, r1
   1e32c:	mov	r4, r0
   1e330:	add	r6, sp, #16
   1e334:	mov	r0, r6
   1e338:	mov	r1, #0
   1e33c:	mov	r2, #220	; 0xdc
   1e340:	bl	149d8 <memset@plt>
   1e344:	mov	r0, r5
   1e348:	mov	r1, r6
   1e34c:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1e350:	movw	r1, #38994	; 0x9852
   1e354:	movt	r1, #4
   1e358:	mov	r0, r4
   1e35c:	mov	r2, r6
   1e360:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e364:	movw	r1, #50187	; 0xc40b
   1e368:	movt	r1, #4
   1e36c:	mov	r0, r4
   1e370:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e374:	ldr	r0, [r4, #220]	; 0xdc
   1e378:	add	r0, r0, #1
   1e37c:	str	r0, [r4, #220]	; 0xdc
   1e380:	movw	r1, #38211	; 0x9543
   1e384:	movt	r1, #4
   1e388:	mov	r0, r4
   1e38c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e390:	ldr	r5, [r5, #20]
   1e394:	cmp	r5, #0
   1e398:	beq	1e408 <__flatcc_fb_gen_c_json_parser@@Base+0xd74>
   1e39c:	add	r6, sp, #12
   1e3a0:	add	r7, sp, #8
   1e3a4:	movw	r8, #39045	; 0x9885
   1e3a8:	movt	r8, #4
   1e3ac:	movw	r9, #39074	; 0x98a2
   1e3b0:	movt	r9, #4
   1e3b4:	mov	r0, r5
   1e3b8:	mov	r1, r6
   1e3bc:	mov	r2, r7
   1e3c0:	bl	1f89c <__flatcc_fb_gen_c_json_parser@@Base+0x2208>
   1e3c4:	ldrh	r0, [r5, #24]
   1e3c8:	cmp	r0, #0
   1e3cc:	beq	1e3f0 <__flatcc_fb_gen_c_json_parser@@Base+0xd5c>
   1e3d0:	ldr	r2, [r5, #48]	; 0x30
   1e3d4:	ldr	r3, [sp, #12]
   1e3d8:	ldr	r0, [sp, #8]
   1e3dc:	str	r0, [sp]
   1e3e0:	mov	r0, r4
   1e3e4:	mov	r1, r9
   1e3e8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e3ec:	b	1e3fc <__flatcc_fb_gen_c_json_parser@@Base+0xd68>
   1e3f0:	mov	r0, r4
   1e3f4:	mov	r1, r8
   1e3f8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e3fc:	ldr	r5, [r5]
   1e400:	cmp	r5, #0
   1e404:	bne	1e3b4 <__flatcc_fb_gen_c_json_parser@@Base+0xd20>
   1e408:	movw	r1, #39104	; 0x98c0
   1e40c:	movt	r1, #4
   1e410:	mov	r0, r4
   1e414:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e418:	ldr	r0, [r4, #220]	; 0xdc
   1e41c:	adds	r1, r0, #1
   1e420:	str	r1, [r4, #220]	; 0xdc
   1e424:	beq	1e478 <__flatcc_fb_gen_c_json_parser@@Base+0xde4>
   1e428:	str	r0, [r4, #220]	; 0xdc
   1e42c:	movw	r1, #35313	; 0x89f1
   1e430:	movt	r1, #3
   1e434:	mov	r0, r4
   1e438:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e43c:	ldr	r0, [r4, #220]	; 0xdc
   1e440:	cmp	r0, #0
   1e444:	beq	1e498 <__flatcc_fb_gen_c_json_parser@@Base+0xe04>
   1e448:	sub	r0, r0, #1
   1e44c:	str	r0, [r4, #220]	; 0xdc
   1e450:	movw	r1, #35313	; 0x89f1
   1e454:	movt	r1, #3
   1e458:	mov	r0, r4
   1e45c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e460:	movw	r1, #26232	; 0x6678
   1e464:	movt	r1, #3
   1e468:	mov	r0, r4
   1e46c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e470:	sub	sp, fp, #24
   1e474:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e478:	movw	r0, #36960	; 0x9060
   1e47c:	movt	r0, #4
   1e480:	movw	r1, #36972	; 0x906c
   1e484:	movt	r1, #4
   1e488:	movw	r3, #39123	; 0x98d3
   1e48c:	movt	r3, #4
   1e490:	movw	r2, #1582	; 0x62e
   1e494:	bl	14a80 <__assert_fail@plt>
   1e498:	movw	r0, #36960	; 0x9060
   1e49c:	movt	r0, #4
   1e4a0:	movw	r1, #36972	; 0x906c
   1e4a4:	movt	r1, #4
   1e4a8:	movw	r3, #39123	; 0x98d3
   1e4ac:	movt	r3, #4
   1e4b0:	movw	r2, #1583	; 0x62f
   1e4b4:	bl	14a80 <__assert_fail@plt>
   1e4b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e4bc:	add	fp, sp, #24
   1e4c0:	sub	sp, sp, #264	; 0x108
   1e4c4:	mov	r5, r1
   1e4c8:	mov	r4, r0
   1e4cc:	mov	r0, #0
   1e4d0:	str	r0, [sp, #36]	; 0x24
   1e4d4:	vmov.i32	q8, #0	; 0x00000000
   1e4d8:	mov	r0, #12
   1e4dc:	add	r1, sp, #8
   1e4e0:	vst1.64	{d16-d17}, [r1], r0
   1e4e4:	vst1.32	{d16-d17}, [r1]
   1e4e8:	ldrh	r0, [r5, #8]
   1e4ec:	sub	r0, r0, #3
   1e4f0:	uxth	r0, r0
   1e4f4:	cmp	r0, #2
   1e4f8:	bcs	1e714 <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1e4fc:	add	r1, sp, #36	; 0x24
   1e500:	mov	r0, r5
   1e504:	bl	1f8b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2224>
   1e508:	str	r0, [sp, #8]
   1e50c:	ldr	r7, [sp, #36]	; 0x24
   1e510:	cmp	r0, #0
   1e514:	bne	1e520 <__flatcc_fb_gen_c_json_parser@@Base+0xe8c>
   1e518:	cmp	r7, #1
   1e51c:	bge	1e734 <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   1e520:	mov	r0, #2
   1e524:	str	r0, [sp, #24]
   1e528:	str	r5, [sp, #20]
   1e52c:	movw	r0, #64052	; 0xfa34
   1e530:	movt	r0, #1
   1e534:	str	r0, [sp, #12]
   1e538:	movw	r0, #64216	; 0xfad8
   1e53c:	movt	r0, #1
   1e540:	str	r0, [sp, #16]
   1e544:	add	r6, sp, #40	; 0x28
   1e548:	mov	r0, r6
   1e54c:	mov	r1, #0
   1e550:	mov	r2, #220	; 0xdc
   1e554:	bl	149d8 <memset@plt>
   1e558:	mov	r0, r5
   1e55c:	mov	r1, r6
   1e560:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1e564:	movw	r1, #37298	; 0x91b2
   1e568:	movt	r1, #4
   1e56c:	mov	r0, r4
   1e570:	mov	r2, r6
   1e574:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e578:	ldr	r0, [r4, #220]	; 0xdc
   1e57c:	add	r0, r0, #2
   1e580:	str	r0, [r4, #220]	; 0xdc
   1e584:	movw	r1, #39303	; 0x9987
   1e588:	movt	r1, #4
   1e58c:	mov	r0, r4
   1e590:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e594:	ldr	r0, [r4, #220]	; 0xdc
   1e598:	cmp	r0, #0
   1e59c:	beq	1e6f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1e5a0:	subs	r1, r0, #1
   1e5a4:	str	r1, [r4, #220]	; 0xdc
   1e5a8:	beq	1e6f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1e5ac:	sub	r0, r0, #2
   1e5b0:	str	r0, [r4, #220]	; 0xdc
   1e5b4:	movw	r1, #50187	; 0xc40b
   1e5b8:	movt	r1, #4
   1e5bc:	mov	r0, r4
   1e5c0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e5c4:	ldr	r0, [r4, #220]	; 0xdc
   1e5c8:	add	r0, r0, #1
   1e5cc:	str	r0, [r4, #220]	; 0xdc
   1e5d0:	cmp	r7, #0
   1e5d4:	beq	1e680 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   1e5d8:	movw	r1, #39424	; 0x9a00
   1e5dc:	movt	r1, #4
   1e5e0:	mov	r0, r4
   1e5e4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e5e8:	movw	r1, #39453	; 0x9a1d
   1e5ec:	movt	r1, #4
   1e5f0:	mov	r0, r4
   1e5f4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e5f8:	movw	r1, #39471	; 0x9a2f
   1e5fc:	movt	r1, #4
   1e600:	mov	r0, r4
   1e604:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e608:	movw	r1, #26232	; 0x6678
   1e60c:	movt	r1, #3
   1e610:	mov	r0, r4
   1e614:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e618:	movw	r1, #39483	; 0x9a3b
   1e61c:	movt	r1, #4
   1e620:	mov	r0, r4
   1e624:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e628:	mov	r0, #0
   1e62c:	str	r0, [sp]
   1e630:	sub	r3, r7, #1
   1e634:	add	r1, sp, #8
   1e638:	mov	r0, r4
   1e63c:	mov	r2, #0
   1e640:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1e644:	movw	r1, #38880	; 0x97e0
   1e648:	movt	r1, #4
   1e64c:	mov	r0, r4
   1e650:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e654:	ldr	r0, [r4, #220]	; 0xdc
   1e658:	cmp	r0, #0
   1e65c:	bne	1e6bc <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1e660:	movw	r0, #36960	; 0x9060
   1e664:	movt	r0, #4
   1e668:	movw	r1, #36972	; 0x906c
   1e66c:	movt	r1, #4
   1e670:	movw	r3, #39186	; 0x9912
   1e674:	movt	r3, #4
   1e678:	movw	r2, #1278	; 0x4fe
   1e67c:	bl	14a80 <__assert_fail@plt>
   1e680:	movw	r1, #39353	; 0x99b9
   1e684:	movt	r1, #4
   1e688:	mov	r0, r4
   1e68c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e690:	movw	r1, #39379	; 0x99d3
   1e694:	movt	r1, #4
   1e698:	mov	r0, r4
   1e69c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e6a0:	movw	r1, #39395	; 0x99e3
   1e6a4:	movt	r1, #4
   1e6a8:	mov	r0, r4
   1e6ac:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e6b0:	ldr	r0, [r4, #220]	; 0xdc
   1e6b4:	cmp	r0, #0
   1e6b8:	beq	1e784 <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   1e6bc:	sub	r0, r0, #1
   1e6c0:	str	r0, [r4, #220]	; 0xdc
   1e6c4:	movw	r1, #35313	; 0x89f1
   1e6c8:	movt	r1, #3
   1e6cc:	mov	r0, r4
   1e6d0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e6d4:	movw	r1, #26232	; 0x6678
   1e6d8:	movt	r1, #3
   1e6dc:	mov	r0, r4
   1e6e0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e6e4:	ldr	r0, [sp, #8]
   1e6e8:	bl	200d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1e6ec:	sub	sp, fp, #24
   1e6f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e6f4:	movw	r0, #36960	; 0x9060
   1e6f8:	movt	r0, #4
   1e6fc:	movw	r1, #36972	; 0x906c
   1e700:	movt	r1, #4
   1e704:	movw	r3, #39186	; 0x9912
   1e708:	movt	r3, #4
   1e70c:	movw	r2, #1263	; 0x4ef
   1e710:	bl	14a80 <__assert_fail@plt>
   1e714:	movw	r0, #51677	; 0xc9dd
   1e718:	movt	r0, #3
   1e71c:	movw	r1, #36972	; 0x906c
   1e720:	movt	r1, #4
   1e724:	movw	r3, #39186	; 0x9912
   1e728:	movt	r3, #4
   1e72c:	movw	r2, #1246	; 0x4de
   1e730:	bl	14a80 <__assert_fail@plt>
   1e734:	movw	r0, #8368	; 0x20b0
   1e738:	movt	r0, #6
   1e73c:	ldr	r0, [r0]
   1e740:	movw	r1, #39243	; 0x994b
   1e744:	movt	r1, #4
   1e748:	str	r1, [sp]
   1e74c:	movw	r1, #25975	; 0x6577
   1e750:	movt	r1, #3
   1e754:	movw	r4, #36972	; 0x906c
   1e758:	movt	r4, #4
   1e75c:	mov	r2, r4
   1e760:	movw	r3, #1249	; 0x4e1
   1e764:	bl	149c0 <fprintf@plt>
   1e768:	movw	r0, #29885	; 0x74bd
   1e76c:	movt	r0, #4
   1e770:	movw	r3, #39186	; 0x9912
   1e774:	movt	r3, #4
   1e778:	mov	r1, r4
   1e77c:	movw	r2, #1249	; 0x4e1
   1e780:	bl	14a80 <__assert_fail@plt>
   1e784:	movw	r0, #36960	; 0x9060
   1e788:	movt	r0, #4
   1e78c:	movw	r1, #36972	; 0x906c
   1e790:	movt	r1, #4
   1e794:	movw	r3, #39186	; 0x9912
   1e798:	movt	r3, #4
   1e79c:	movw	r2, #1269	; 0x4f5
   1e7a0:	bl	14a80 <__assert_fail@plt>
   1e7a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e7a8:	add	fp, sp, #24
   1e7ac:	sub	sp, sp, #264	; 0x108
   1e7b0:	mov	r5, r1
   1e7b4:	mov	r4, r0
   1e7b8:	vmov.i32	q8, #0	; 0x00000000
   1e7bc:	mov	r0, #12
   1e7c0:	add	r1, sp, #8
   1e7c4:	vst1.64	{d16-d17}, [r1], r0
   1e7c8:	vst1.32	{d16-d17}, [r1]
   1e7cc:	ldrh	r0, [r5, #8]
   1e7d0:	cmp	r0, #1
   1e7d4:	bne	1ea34 <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   1e7d8:	add	r1, sp, #36	; 0x24
   1e7dc:	mov	r0, r5
   1e7e0:	bl	1f8b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2224>
   1e7e4:	str	r0, [sp, #8]
   1e7e8:	ldr	r7, [sp, #36]	; 0x24
   1e7ec:	cmp	r0, #0
   1e7f0:	bne	1e7fc <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1e7f4:	cmp	r7, #1
   1e7f8:	bge	1ea54 <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
   1e7fc:	mov	r0, #1
   1e800:	str	r0, [sp, #24]
   1e804:	str	r5, [sp, #20]
   1e808:	movw	r0, #2240	; 0x8c0
   1e80c:	movt	r0, #2
   1e810:	str	r0, [sp, #12]
   1e814:	movw	r0, #2412	; 0x96c
   1e818:	movt	r0, #2
   1e81c:	str	r0, [sp, #16]
   1e820:	add	r6, sp, #40	; 0x28
   1e824:	mov	r0, r6
   1e828:	mov	r1, #0
   1e82c:	mov	r2, #220	; 0xdc
   1e830:	bl	149d8 <memset@plt>
   1e834:	mov	r0, r5
   1e838:	mov	r1, r6
   1e83c:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1e840:	movw	r1, #40555	; 0x9e6b
   1e844:	movt	r1, #4
   1e848:	mov	r0, r4
   1e84c:	mov	r2, r6
   1e850:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e854:	movw	r1, #50187	; 0xc40b
   1e858:	movt	r1, #4
   1e85c:	mov	r0, r4
   1e860:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e864:	ldr	r0, [r4, #220]	; 0xdc
   1e868:	add	r0, r0, #1
   1e86c:	str	r0, [r4, #220]	; 0xdc
   1e870:	movw	r1, #40682	; 0x9eea
   1e874:	movt	r1, #4
   1e878:	mov	r0, r4
   1e87c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e880:	cmp	r7, #1
   1e884:	blt	1e8c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   1e888:	movw	r1, #40692	; 0x9ef4
   1e88c:	movt	r1, #4
   1e890:	mov	r0, r4
   1e894:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e898:	movw	r1, #40718	; 0x9f0e
   1e89c:	movt	r1, #4
   1e8a0:	mov	r0, r4
   1e8a4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e8a8:	movw	r1, #39453	; 0x9a1d
   1e8ac:	movt	r1, #4
   1e8b0:	mov	r0, r4
   1e8b4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e8b8:	movw	r1, #39471	; 0x9a2f
   1e8bc:	movt	r1, #4
   1e8c0:	mov	r0, r4
   1e8c4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e8c8:	movw	r1, #26232	; 0x6678
   1e8cc:	movt	r1, #3
   1e8d0:	mov	r0, r4
   1e8d4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e8d8:	movw	r1, #40730	; 0x9f1a
   1e8dc:	movt	r1, #4
   1e8e0:	mov	r0, r4
   1e8e4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e8e8:	movw	r1, #40791	; 0x9f57
   1e8ec:	movt	r1, #4
   1e8f0:	mov	r0, r4
   1e8f4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e8f8:	ldr	r0, [r4, #220]	; 0xdc
   1e8fc:	add	r0, r0, #1
   1e900:	str	r0, [r4, #220]	; 0xdc
   1e904:	cmp	r7, #0
   1e908:	beq	1e94c <__flatcc_fb_gen_c_json_parser@@Base+0x12b8>
   1e90c:	movw	r1, #40884	; 0x9fb4
   1e910:	movt	r1, #4
   1e914:	mov	r0, r4
   1e918:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e91c:	movw	r1, #39483	; 0x9a3b
   1e920:	movt	r1, #4
   1e924:	mov	r0, r4
   1e928:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e92c:	mov	r0, #0
   1e930:	str	r0, [sp]
   1e934:	sub	r3, r7, #1
   1e938:	add	r1, sp, #8
   1e93c:	mov	r0, r4
   1e940:	mov	r2, #0
   1e944:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1e948:	b	1e96c <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   1e94c:	movw	r1, #40806	; 0x9f66
   1e950:	movt	r1, #4
   1e954:	mov	r0, r4
   1e958:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e95c:	movw	r1, #40826	; 0x9f7a
   1e960:	movt	r1, #4
   1e964:	mov	r0, r4
   1e968:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e96c:	movw	r1, #40938	; 0x9fea
   1e970:	movt	r1, #4
   1e974:	mov	r0, r4
   1e978:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e97c:	ldr	r0, [r4, #220]	; 0xdc
   1e980:	cmp	r0, #0
   1e984:	beq	1eaa4 <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   1e988:	sub	r0, r0, #1
   1e98c:	str	r0, [r4, #220]	; 0xdc
   1e990:	movw	r1, #35313	; 0x89f1
   1e994:	movt	r1, #3
   1e998:	mov	r0, r4
   1e99c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e9a0:	movw	r1, #38880	; 0x97e0
   1e9a4:	movt	r1, #4
   1e9a8:	mov	r0, r4
   1e9ac:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e9b0:	cmp	r7, #1
   1e9b4:	blt	1e9f0 <__flatcc_fb_gen_c_json_parser@@Base+0x135c>
   1e9b8:	ldr	r0, [r4, #220]	; 0xdc
   1e9bc:	mov	r1, #0
   1e9c0:	str	r1, [r4, #220]	; 0xdc
   1e9c4:	str	r0, [r4, #228]	; 0xe4
   1e9c8:	movw	r1, #40998	; 0xa026
   1e9cc:	movt	r1, #4
   1e9d0:	mov	r0, r4
   1e9d4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e9d8:	ldr	r0, [r4, #228]	; 0xe4
   1e9dc:	str	r0, [r4, #220]	; 0xdc
   1e9e0:	movw	r1, #38908	; 0x97fc
   1e9e4:	movt	r1, #4
   1e9e8:	mov	r0, r4
   1e9ec:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e9f0:	ldr	r0, [r4, #220]	; 0xdc
   1e9f4:	cmp	r0, #0
   1e9f8:	beq	1eac4 <__flatcc_fb_gen_c_json_parser@@Base+0x1430>
   1e9fc:	sub	r0, r0, #1
   1ea00:	str	r0, [r4, #220]	; 0xdc
   1ea04:	movw	r1, #35313	; 0x89f1
   1ea08:	movt	r1, #3
   1ea0c:	mov	r0, r4
   1ea10:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea14:	movw	r1, #26232	; 0x6678
   1ea18:	movt	r1, #3
   1ea1c:	mov	r0, r4
   1ea20:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea24:	ldr	r0, [sp, #8]
   1ea28:	bl	200d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1ea2c:	sub	sp, fp, #24
   1ea30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ea34:	movw	r0, #52861	; 0xce7d
   1ea38:	movt	r0, #3
   1ea3c:	movw	r1, #36972	; 0x906c
   1ea40:	movt	r1, #4
   1ea44:	movw	r3, #40489	; 0x9e29
   1ea48:	movt	r3, #4
   1ea4c:	movw	r2, #1301	; 0x515
   1ea50:	bl	14a80 <__assert_fail@plt>
   1ea54:	movw	r0, #8368	; 0x20b0
   1ea58:	movt	r0, #6
   1ea5c:	ldr	r0, [r0]
   1ea60:	movw	r1, #39243	; 0x994b
   1ea64:	movt	r1, #4
   1ea68:	str	r1, [sp]
   1ea6c:	movw	r1, #25975	; 0x6577
   1ea70:	movt	r1, #3
   1ea74:	movw	r4, #36972	; 0x906c
   1ea78:	movt	r4, #4
   1ea7c:	mov	r2, r4
   1ea80:	movw	r3, #1303	; 0x517
   1ea84:	bl	149c0 <fprintf@plt>
   1ea88:	movw	r0, #29885	; 0x74bd
   1ea8c:	movt	r0, #4
   1ea90:	movw	r3, #40489	; 0x9e29
   1ea94:	movt	r3, #4
   1ea98:	mov	r1, r4
   1ea9c:	movw	r2, #1303	; 0x517
   1eaa0:	bl	14a80 <__assert_fail@plt>
   1eaa4:	movw	r0, #36960	; 0x9060
   1eaa8:	movt	r0, #4
   1eaac:	movw	r1, #36972	; 0x906c
   1eab0:	movt	r1, #4
   1eab4:	movw	r3, #40489	; 0x9e29
   1eab8:	movt	r3, #4
   1eabc:	movw	r2, #1334	; 0x536
   1eac0:	bl	14a80 <__assert_fail@plt>
   1eac4:	movw	r0, #36960	; 0x9060
   1eac8:	movt	r0, #4
   1eacc:	movw	r1, #36972	; 0x906c
   1ead0:	movt	r1, #4
   1ead4:	movw	r3, #40489	; 0x9e29
   1ead8:	movt	r3, #4
   1eadc:	movw	r2, #1343	; 0x53f
   1eae0:	bl	14a80 <__assert_fail@plt>
   1eae4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1eae8:	add	fp, sp, #24
   1eaec:	sub	sp, sp, #232	; 0xe8
   1eaf0:	mov	r4, r0
   1eaf4:	ldrh	r0, [r1, #8]
   1eaf8:	cmp	r0, #1
   1eafc:	bne	1ecc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1630>
   1eb00:	mov	r6, r1
   1eb04:	add	r5, sp, #8
   1eb08:	mov	r7, #0
   1eb0c:	mov	r0, r5
   1eb10:	mov	r1, #0
   1eb14:	mov	r2, #220	; 0xdc
   1eb18:	bl	149d8 <memset@plt>
   1eb1c:	mov	r0, r6
   1eb20:	mov	r1, r5
   1eb24:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1eb28:	movw	r1, #43796	; 0xab14
   1eb2c:	movt	r1, #4
   1eb30:	mov	r0, r4
   1eb34:	mov	r2, r5
   1eb38:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eb3c:	movw	r1, #50187	; 0xc40b
   1eb40:	movt	r1, #4
   1eb44:	mov	r0, r4
   1eb48:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eb4c:	ldr	r0, [r4, #220]	; 0xdc
   1eb50:	add	r0, r0, #1
   1eb54:	str	r0, [r4, #220]	; 0xdc
   1eb58:	movw	r1, #40718	; 0x9f0e
   1eb5c:	movt	r1, #4
   1eb60:	mov	r0, r4
   1eb64:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eb68:	movw	r1, #26232	; 0x6678
   1eb6c:	movt	r1, #3
   1eb70:	mov	r0, r4
   1eb74:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eb78:	movw	r1, #38198	; 0x9536
   1eb7c:	movt	r1, #4
   1eb80:	mov	r0, r4
   1eb84:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eb88:	ldrd	r2, [r6, #112]	; 0x70
   1eb8c:	ldrh	r0, [r6, #104]	; 0x68
   1eb90:	str	r0, [sp]
   1eb94:	movw	r1, #43927	; 0xab97
   1eb98:	movt	r1, #4
   1eb9c:	mov	r0, r4
   1eba0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eba4:	movw	r1, #42577	; 0xa651
   1eba8:	movt	r1, #4
   1ebac:	mov	r0, r4
   1ebb0:	mov	r2, r5
   1ebb4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ebb8:	movw	r1, #44003	; 0xabe3
   1ebbc:	movt	r1, #4
   1ebc0:	mov	r0, r4
   1ebc4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ebc8:	movw	r1, #38880	; 0x97e0
   1ebcc:	movt	r1, #4
   1ebd0:	mov	r0, r4
   1ebd4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ebd8:	ldr	r0, [r4, #220]	; 0xdc
   1ebdc:	str	r7, [r4, #220]	; 0xdc
   1ebe0:	str	r0, [r4, #228]	; 0xe4
   1ebe4:	movw	r1, #40998	; 0xa026
   1ebe8:	movt	r1, #4
   1ebec:	mov	r0, r4
   1ebf0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ebf4:	ldr	r0, [r4, #228]	; 0xe4
   1ebf8:	str	r0, [r4, #220]	; 0xdc
   1ebfc:	movw	r1, #38908	; 0x97fc
   1ec00:	movt	r1, #4
   1ec04:	mov	r0, r4
   1ec08:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ec0c:	ldr	r0, [r4, #220]	; 0xdc
   1ec10:	cmp	r0, #0
   1ec14:	beq	1ece4 <__flatcc_fb_gen_c_json_parser@@Base+0x1650>
   1ec18:	sub	r0, r0, #1
   1ec1c:	str	r0, [r4, #220]	; 0xdc
   1ec20:	movw	r1, #35313	; 0x89f1
   1ec24:	movt	r1, #3
   1ec28:	mov	r0, r4
   1ec2c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ec30:	movw	r1, #26232	; 0x6678
   1ec34:	movt	r1, #3
   1ec38:	mov	r0, r4
   1ec3c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ec40:	movw	r1, #44084	; 0xac34
   1ec44:	movt	r1, #4
   1ec48:	add	r5, sp, #8
   1ec4c:	mov	r0, r4
   1ec50:	mov	r2, r5
   1ec54:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ec58:	movw	r1, #50187	; 0xc40b
   1ec5c:	movt	r1, #4
   1ec60:	mov	r0, r4
   1ec64:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ec68:	ldr	r0, [r4, #220]	; 0xdc
   1ec6c:	add	r0, r0, #1
   1ec70:	str	r0, [r4, #220]	; 0xdc
   1ec74:	movw	r1, #44232	; 0xacc8
   1ec78:	movt	r1, #4
   1ec7c:	mov	r0, r4
   1ec80:	mov	r2, r5
   1ec84:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ec88:	ldr	r0, [r4, #220]	; 0xdc
   1ec8c:	cmp	r0, #0
   1ec90:	beq	1ed04 <__flatcc_fb_gen_c_json_parser@@Base+0x1670>
   1ec94:	sub	r0, r0, #1
   1ec98:	str	r0, [r4, #220]	; 0xdc
   1ec9c:	movw	r1, #35313	; 0x89f1
   1eca0:	movt	r1, #3
   1eca4:	mov	r0, r4
   1eca8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ecac:	movw	r1, #26232	; 0x6678
   1ecb0:	movt	r1, #3
   1ecb4:	mov	r0, r4
   1ecb8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ecbc:	sub	sp, fp, #24
   1ecc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ecc4:	movw	r0, #52861	; 0xce7d
   1ecc8:	movt	r0, #3
   1eccc:	movw	r1, #36972	; 0x906c
   1ecd0:	movt	r1, #4
   1ecd4:	movw	r3, #43737	; 0xaad9
   1ecd8:	movt	r3, #4
   1ecdc:	movw	r2, #1353	; 0x549
   1ece0:	bl	14a80 <__assert_fail@plt>
   1ece4:	movw	r0, #36960	; 0x9060
   1ece8:	movt	r0, #4
   1ecec:	movw	r1, #36972	; 0x906c
   1ecf0:	movt	r1, #4
   1ecf4:	movw	r3, #43737	; 0xaad9
   1ecf8:	movt	r3, #4
   1ecfc:	movw	r2, #1370	; 0x55a
   1ed00:	bl	14a80 <__assert_fail@plt>
   1ed04:	movw	r0, #36960	; 0x9060
   1ed08:	movt	r0, #4
   1ed0c:	movw	r1, #36972	; 0x906c
   1ed10:	movt	r1, #4
   1ed14:	movw	r3, #43737	; 0xaad9
   1ed18:	movt	r3, #4
   1ed1c:	mov	r2, #1376	; 0x560
   1ed20:	bl	14a80 <__assert_fail@plt>
   1ed24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed28:	add	fp, sp, #28
   1ed2c:	sub	sp, sp, #268	; 0x10c
   1ed30:	mov	r7, r1
   1ed34:	mov	r4, r0
   1ed38:	vmov.i32	q8, #0	; 0x00000000
   1ed3c:	mov	r0, #12
   1ed40:	add	r1, sp, #8
   1ed44:	vst1.64	{d16-d17}, [r1], r0
   1ed48:	vst1.32	{d16-d17}, [r1]
   1ed4c:	ldrh	r0, [r7, #8]
   1ed50:	cmp	r0, #0
   1ed54:	bne	1f1fc <__flatcc_fb_gen_c_json_parser@@Base+0x1b68>
   1ed58:	add	r1, sp, #36	; 0x24
   1ed5c:	mov	r0, r7
   1ed60:	bl	1f8b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2224>
   1ed64:	str	r0, [sp, #8]
   1ed68:	ldr	sl, [sp, #36]	; 0x24
   1ed6c:	cmp	r0, #0
   1ed70:	bne	1ed7c <__flatcc_fb_gen_c_json_parser@@Base+0x16e8>
   1ed74:	cmp	sl, #1
   1ed78:	bge	1f21c <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   1ed7c:	mov	r1, #0
   1ed80:	str	r1, [sp, #24]
   1ed84:	str	r7, [sp, #20]
   1ed88:	movw	r2, #2240	; 0x8c0
   1ed8c:	movt	r2, #2
   1ed90:	str	r2, [sp, #12]
   1ed94:	movw	r2, #2412	; 0x96c
   1ed98:	movt	r2, #2
   1ed9c:	str	r2, [sp, #16]
   1eda0:	str	r1, [sp, #28]
   1eda4:	cmp	sl, #1
   1eda8:	blt	1edd0 <__flatcc_fb_gen_c_json_parser@@Base+0x173c>
   1edac:	add	r1, r0, #12
   1edb0:	ldr	r0, [sp, #28]
   1edb4:	mov	r2, sl
   1edb8:	ldr	r3, [r1], #16
   1edbc:	cmp	r3, #0
   1edc0:	addne	r0, r0, #1
   1edc4:	subs	r2, r2, #1
   1edc8:	bne	1edb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1724>
   1edcc:	str	r0, [sp, #28]
   1edd0:	add	r6, sp, #40	; 0x28
   1edd4:	mov	r0, r6
   1edd8:	mov	r1, #0
   1eddc:	mov	r2, #220	; 0xdc
   1ede0:	bl	149d8 <memset@plt>
   1ede4:	mov	r0, r7
   1ede8:	mov	r1, r6
   1edec:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1edf0:	movw	r1, #44387	; 0xad63
   1edf4:	movt	r1, #4
   1edf8:	mov	r0, r4
   1edfc:	mov	r2, r6
   1ee00:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee04:	movw	r1, #50187	; 0xc40b
   1ee08:	movt	r1, #4
   1ee0c:	mov	r0, r4
   1ee10:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee14:	ldr	r0, [r4, #220]	; 0xdc
   1ee18:	add	r0, r0, #1
   1ee1c:	str	r0, [r4, #220]	; 0xdc
   1ee20:	movw	r1, #40682	; 0x9eea
   1ee24:	movt	r1, #4
   1ee28:	mov	r0, r4
   1ee2c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee30:	cmp	sl, #1
   1ee34:	blt	1ee78 <__flatcc_fb_gen_c_json_parser@@Base+0x17e4>
   1ee38:	movw	r1, #40718	; 0x9f0e
   1ee3c:	movt	r1, #4
   1ee40:	mov	r0, r4
   1ee44:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee48:	movw	r1, #44517	; 0xade5
   1ee4c:	movt	r1, #4
   1ee50:	mov	r0, r4
   1ee54:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee58:	movw	r1, #39453	; 0x9a1d
   1ee5c:	movt	r1, #4
   1ee60:	mov	r0, r4
   1ee64:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee68:	movw	r1, #39471	; 0x9a2f
   1ee6c:	movt	r1, #4
   1ee70:	mov	r0, r4
   1ee74:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee78:	ldr	r0, [sp, #28]
   1ee7c:	cmp	r0, #0
   1ee80:	beq	1ee94 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
   1ee84:	movw	r1, #44550	; 0xae06
   1ee88:	movt	r1, #4
   1ee8c:	mov	r0, r4
   1ee90:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee94:	movw	r1, #26232	; 0x6678
   1ee98:	movt	r1, #3
   1ee9c:	mov	r0, r4
   1eea0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eea4:	movw	r1, #38198	; 0x9536
   1eea8:	movt	r1, #4
   1eeac:	mov	r0, r4
   1eeb0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eeb4:	ldrd	r2, [r7, #96]	; 0x60
   1eeb8:	movw	r1, #44567	; 0xae17
   1eebc:	movt	r1, #4
   1eec0:	mov	r0, r4
   1eec4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eec8:	ldr	r2, [sp, #28]
   1eecc:	cmp	r2, #0
   1eed0:	beq	1eee8 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   1eed4:	asr	r3, r2, #31
   1eed8:	movw	r1, #44628	; 0xae54
   1eedc:	movt	r1, #4
   1eee0:	mov	r0, r4
   1eee4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eee8:	movw	r1, #40730	; 0x9f1a
   1eeec:	movt	r1, #4
   1eef0:	mov	r0, r4
   1eef4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eef8:	movw	r1, #40791	; 0x9f57
   1eefc:	movt	r1, #4
   1ef00:	mov	r0, r4
   1ef04:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef08:	ldr	r0, [r4, #220]	; 0xdc
   1ef0c:	add	r0, r0, #1
   1ef10:	str	r0, [r4, #220]	; 0xdc
   1ef14:	movw	r1, #40884	; 0x9fb4
   1ef18:	movt	r1, #4
   1ef1c:	mov	r0, r4
   1ef20:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef24:	cmp	sl, #1
   1ef28:	blt	1ef5c <__flatcc_fb_gen_c_json_parser@@Base+0x18c8>
   1ef2c:	movw	r1, #39483	; 0x9a3b
   1ef30:	movt	r1, #4
   1ef34:	mov	r0, r4
   1ef38:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef3c:	mov	r0, #0
   1ef40:	str	r0, [sp]
   1ef44:	sub	r3, sl, #1
   1ef48:	add	r1, sp, #8
   1ef4c:	mov	r0, r4
   1ef50:	mov	r2, #0
   1ef54:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1ef58:	b	1ef7c <__flatcc_fb_gen_c_json_parser@@Base+0x18e8>
   1ef5c:	movw	r1, #44719	; 0xaeaf
   1ef60:	movt	r1, #4
   1ef64:	mov	r0, r4
   1ef68:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef6c:	movw	r1, #40826	; 0x9f7a
   1ef70:	movt	r1, #4
   1ef74:	mov	r0, r4
   1ef78:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef7c:	movw	r1, #44746	; 0xaeca
   1ef80:	movt	r1, #4
   1ef84:	mov	r0, r4
   1ef88:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef8c:	ldr	r0, [r4, #220]	; 0xdc
   1ef90:	cmp	r0, #0
   1ef94:	beq	1f26c <__flatcc_fb_gen_c_json_parser@@Base+0x1bd8>
   1ef98:	sub	r0, r0, #1
   1ef9c:	str	r0, [r4, #220]	; 0xdc
   1efa0:	movw	r1, #35313	; 0x89f1
   1efa4:	movt	r1, #3
   1efa8:	mov	r0, r4
   1efac:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1efb0:	movw	r1, #44805	; 0xaf05
   1efb4:	movt	r1, #4
   1efb8:	mov	r0, r4
   1efbc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1efc0:	cmp	sl, #1
   1efc4:	blt	1f0c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a34>
   1efc8:	mov	r6, #0
   1efcc:	mov	r5, #1
   1efd0:	movw	r9, #44891	; 0xaf5b
   1efd4:	movt	r9, #4
   1efd8:	movw	r8, #44834	; 0xaf22
   1efdc:	movt	r8, #4
   1efe0:	ldr	r0, [sp, #8]
   1efe4:	add	r0, r0, r6, lsl #4
   1efe8:	ldr	r7, [r0, #8]
   1efec:	ldrh	r0, [r7, #72]	; 0x48
   1eff0:	and	r0, r0, #260	; 0x104
   1eff4:	cmp	r0, #256	; 0x100
   1eff8:	bne	1f040 <__flatcc_fb_gen_c_json_parser@@Base+0x19ac>
   1effc:	mov	r0, r7
   1f000:	bl	200dc <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1f004:	ldrd	r2, [r7, #96]	; 0x60
   1f008:	subs	r2, r2, r0
   1f00c:	sbc	r3, r3, r0, asr #31
   1f010:	mov	r0, r4
   1f014:	cmp	r5, #0
   1f018:	bne	1f028 <__flatcc_fb_gen_c_json_parser@@Base+0x1994>
   1f01c:	mov	r1, r9
   1f020:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f024:	b	1f03c <__flatcc_fb_gen_c_json_parser@@Base+0x19a8>
   1f028:	mov	r1, r8
   1f02c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f030:	ldr	r0, [r4, #220]	; 0xdc
   1f034:	add	r0, r0, #1
   1f038:	str	r0, [r4, #220]	; 0xdc
   1f03c:	mov	r5, #0
   1f040:	add	r6, r6, #1
   1f044:	cmp	sl, r6
   1f048:	bne	1efe0 <__flatcc_fb_gen_c_json_parser@@Base+0x194c>
   1f04c:	cmp	r5, #0
   1f050:	bne	1f0c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a34>
   1f054:	ldr	r0, [r4, #220]	; 0xdc
   1f058:	cmp	r0, #0
   1f05c:	beq	1f2cc <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   1f060:	sub	r0, r0, #1
   1f064:	str	r0, [r4, #220]	; 0xdc
   1f068:	movw	r1, #42350	; 0xa56e
   1f06c:	movt	r1, #4
   1f070:	mov	r0, r4
   1f074:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f078:	ldr	r0, [r4, #220]	; 0xdc
   1f07c:	add	r0, r0, #1
   1f080:	str	r0, [r4, #220]	; 0xdc
   1f084:	movw	r1, #44948	; 0xaf94
   1f088:	movt	r1, #4
   1f08c:	mov	r0, r4
   1f090:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f094:	movw	r1, #41873	; 0xa391
   1f098:	movt	r1, #4
   1f09c:	mov	r0, r4
   1f0a0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f0a4:	ldr	r0, [r4, #220]	; 0xdc
   1f0a8:	cmp	r0, #0
   1f0ac:	beq	1f2ec <__flatcc_fb_gen_c_json_parser@@Base+0x1c58>
   1f0b0:	sub	r0, r0, #1
   1f0b4:	str	r0, [r4, #220]	; 0xdc
   1f0b8:	movw	r1, #35313	; 0x89f1
   1f0bc:	movt	r1, #3
   1f0c0:	mov	r0, r4
   1f0c4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f0c8:	ldr	r0, [sp, #28]
   1f0cc:	cmp	r0, #0
   1f0d0:	beq	1f0e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a50>
   1f0d4:	movw	r1, #45034	; 0xafea
   1f0d8:	movt	r1, #4
   1f0dc:	mov	r0, r4
   1f0e0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f0e4:	movw	r1, #45101	; 0xb02d
   1f0e8:	movt	r1, #4
   1f0ec:	mov	r0, r4
   1f0f0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f0f4:	movw	r1, #38880	; 0x97e0
   1f0f8:	movt	r1, #4
   1f0fc:	mov	r0, r4
   1f100:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f104:	ldr	r0, [r4, #220]	; 0xdc
   1f108:	mov	r1, #0
   1f10c:	str	r1, [r4, #220]	; 0xdc
   1f110:	str	r0, [r4, #228]	; 0xe4
   1f114:	movw	r1, #40998	; 0xa026
   1f118:	movt	r1, #4
   1f11c:	mov	r0, r4
   1f120:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f124:	ldr	r0, [r4, #228]	; 0xe4
   1f128:	str	r0, [r4, #220]	; 0xdc
   1f12c:	movw	r1, #38908	; 0x97fc
   1f130:	movt	r1, #4
   1f134:	mov	r0, r4
   1f138:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f13c:	ldr	r0, [r4, #220]	; 0xdc
   1f140:	cmp	r0, #0
   1f144:	beq	1f28c <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   1f148:	sub	r0, r0, #1
   1f14c:	str	r0, [r4, #220]	; 0xdc
   1f150:	movw	r1, #35313	; 0x89f1
   1f154:	movt	r1, #3
   1f158:	mov	r0, r4
   1f15c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f160:	movw	r1, #26232	; 0x6678
   1f164:	movt	r1, #3
   1f168:	mov	r0, r4
   1f16c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f170:	movw	r1, #44084	; 0xac34
   1f174:	movt	r1, #4
   1f178:	add	r5, sp, #40	; 0x28
   1f17c:	mov	r0, r4
   1f180:	mov	r2, r5
   1f184:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f188:	movw	r1, #50187	; 0xc40b
   1f18c:	movt	r1, #4
   1f190:	mov	r0, r4
   1f194:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f198:	ldr	r0, [r4, #220]	; 0xdc
   1f19c:	add	r0, r0, #1
   1f1a0:	str	r0, [r4, #220]	; 0xdc
   1f1a4:	movw	r1, #45167	; 0xb06f
   1f1a8:	movt	r1, #4
   1f1ac:	mov	r0, r4
   1f1b0:	mov	r2, r5
   1f1b4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f1b8:	ldr	r0, [r4, #220]	; 0xdc
   1f1bc:	cmp	r0, #0
   1f1c0:	beq	1f2ac <__flatcc_fb_gen_c_json_parser@@Base+0x1c18>
   1f1c4:	sub	r0, r0, #1
   1f1c8:	str	r0, [r4, #220]	; 0xdc
   1f1cc:	movw	r1, #35313	; 0x89f1
   1f1d0:	movt	r1, #3
   1f1d4:	mov	r0, r4
   1f1d8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f1dc:	movw	r1, #26232	; 0x6678
   1f1e0:	movt	r1, #3
   1f1e4:	mov	r0, r4
   1f1e8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f1ec:	ldr	r0, [sp, #8]
   1f1f0:	bl	200d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1f1f4:	sub	sp, fp, #28
   1f1f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1fc:	movw	r0, #51128	; 0xc7b8
   1f200:	movt	r0, #3
   1f204:	movw	r1, #36972	; 0x906c
   1f208:	movt	r1, #4
   1f20c:	movw	r3, #44329	; 0xad29
   1f210:	movt	r3, #4
   1f214:	movw	r2, #1390	; 0x56e
   1f218:	bl	14a80 <__assert_fail@plt>
   1f21c:	movw	r0, #8368	; 0x20b0
   1f220:	movt	r0, #6
   1f224:	ldr	r0, [r0]
   1f228:	movw	r1, #39243	; 0x994b
   1f22c:	movt	r1, #4
   1f230:	str	r1, [sp]
   1f234:	movw	r1, #25975	; 0x6577
   1f238:	movt	r1, #3
   1f23c:	movw	r4, #36972	; 0x906c
   1f240:	movt	r4, #4
   1f244:	mov	r2, r4
   1f248:	mov	r3, #1392	; 0x570
   1f24c:	bl	149c0 <fprintf@plt>
   1f250:	movw	r0, #29885	; 0x74bd
   1f254:	movt	r0, #4
   1f258:	movw	r3, #44329	; 0xad29
   1f25c:	movt	r3, #4
   1f260:	mov	r1, r4
   1f264:	mov	r2, #1392	; 0x570
   1f268:	bl	14a80 <__assert_fail@plt>
   1f26c:	movw	r0, #36960	; 0x9060
   1f270:	movt	r0, #4
   1f274:	movw	r1, #36972	; 0x906c
   1f278:	movt	r1, #4
   1f27c:	movw	r3, #44329	; 0xad29
   1f280:	movt	r3, #4
   1f284:	movw	r2, #1438	; 0x59e
   1f288:	bl	14a80 <__assert_fail@plt>
   1f28c:	movw	r0, #36960	; 0x9060
   1f290:	movt	r0, #4
   1f294:	movw	r1, #36972	; 0x906c
   1f298:	movt	r1, #4
   1f29c:	movw	r3, #44329	; 0xad29
   1f2a0:	movt	r3, #4
   1f2a4:	movw	r2, #1473	; 0x5c1
   1f2a8:	bl	14a80 <__assert_fail@plt>
   1f2ac:	movw	r0, #36960	; 0x9060
   1f2b0:	movt	r0, #4
   1f2b4:	movw	r1, #36972	; 0x906c
   1f2b8:	movt	r1, #4
   1f2bc:	movw	r3, #44329	; 0xad29
   1f2c0:	movt	r3, #4
   1f2c4:	movw	r2, #1479	; 0x5c7
   1f2c8:	bl	14a80 <__assert_fail@plt>
   1f2cc:	movw	r0, #36960	; 0x9060
   1f2d0:	movt	r0, #4
   1f2d4:	movw	r1, #36972	; 0x906c
   1f2d8:	movt	r1, #4
   1f2dc:	movw	r3, #44329	; 0xad29
   1f2e0:	movt	r3, #4
   1f2e4:	movw	r2, #1458	; 0x5b2
   1f2e8:	bl	14a80 <__assert_fail@plt>
   1f2ec:	movw	r0, #36960	; 0x9060
   1f2f0:	movt	r0, #4
   1f2f4:	movw	r1, #36972	; 0x906c
   1f2f8:	movt	r1, #4
   1f2fc:	movw	r3, #44329	; 0xad29
   1f300:	movt	r3, #4
   1f304:	movw	r2, #1461	; 0x5b5
   1f308:	bl	14a80 <__assert_fail@plt>
   1f30c:	push	{r4, r5, r6, sl, fp, lr}
   1f310:	add	fp, sp, #16
   1f314:	sub	sp, sp, #240	; 0xf0
   1f318:	mov	r5, r1
   1f31c:	mov	r4, r0
   1f320:	mov	r6, #0
   1f324:	str	r6, [fp, #-20]	; 0xffffffec
   1f328:	vmov.i32	q8, #0	; 0x00000000
   1f32c:	sub	r0, fp, #48	; 0x30
   1f330:	add	r0, r0, #4
   1f334:	vst1.32	{d16-d17}, [r0]
   1f338:	str	r6, [fp, #-24]	; 0xffffffe8
   1f33c:	str	r6, [fp, #-28]	; 0xffffffe4
   1f340:	add	r1, sp, #4
   1f344:	mov	r0, r5
   1f348:	bl	16750 <__flatcc_fb_copy_scope@@Base>
   1f34c:	ldr	r0, [r4, #208]	; 0xd0
   1f350:	sub	r2, fp, #20
   1f354:	mov	r1, r5
   1f358:	bl	21730 <__flatcc_fb_gen_c_json_parser@@Base+0x409c>
   1f35c:	str	r0, [fp, #-48]	; 0xffffffd0
   1f360:	ldr	r5, [fp, #-20]	; 0xffffffec
   1f364:	cmp	r0, #0
   1f368:	bne	1f374 <__flatcc_fb_gen_c_json_parser@@Base+0x1ce0>
   1f36c:	cmp	r5, #1
   1f370:	bge	1f540 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   1f374:	mov	r0, #3
   1f378:	str	r0, [fp, #-32]	; 0xffffffe0
   1f37c:	str	r6, [fp, #-36]	; 0xffffffdc
   1f380:	movw	r0, #6088	; 0x17c8
   1f384:	movt	r0, #2
   1f388:	str	r0, [fp, #-44]	; 0xffffffd4
   1f38c:	movw	r0, #6244	; 0x1864
   1f390:	movt	r0, #2
   1f394:	str	r0, [fp, #-40]	; 0xffffffd8
   1f398:	ldr	r0, [r4, #208]	; 0xd0
   1f39c:	ldr	r2, [r0, #160]	; 0xa0
   1f3a0:	movw	r1, #37946	; 0x943a
   1f3a4:	movt	r1, #4
   1f3a8:	add	r3, sp, #4
   1f3ac:	mov	r0, r4
   1f3b0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f3b4:	ldr	r0, [r4, #220]	; 0xdc
   1f3b8:	add	r0, r0, #2
   1f3bc:	str	r0, [r4, #220]	; 0xdc
   1f3c0:	movw	r1, #45312	; 0xb100
   1f3c4:	movt	r1, #4
   1f3c8:	mov	r0, r4
   1f3cc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f3d0:	ldr	r0, [r4, #220]	; 0xdc
   1f3d4:	cmp	r0, #0
   1f3d8:	beq	1f520 <__flatcc_fb_gen_c_json_parser@@Base+0x1e8c>
   1f3dc:	subs	r1, r0, #1
   1f3e0:	str	r1, [r4, #220]	; 0xdc
   1f3e4:	beq	1f520 <__flatcc_fb_gen_c_json_parser@@Base+0x1e8c>
   1f3e8:	sub	r0, r0, #2
   1f3ec:	str	r0, [r4, #220]	; 0xdc
   1f3f0:	movw	r1, #50187	; 0xc40b
   1f3f4:	movt	r1, #4
   1f3f8:	mov	r0, r4
   1f3fc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f400:	ldr	r0, [r4, #220]	; 0xdc
   1f404:	add	r0, r0, #1
   1f408:	str	r0, [r4, #220]	; 0xdc
   1f40c:	cmp	r5, #0
   1f410:	beq	1f4bc <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   1f414:	movw	r1, #39424	; 0x9a00
   1f418:	movt	r1, #4
   1f41c:	mov	r0, r4
   1f420:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f424:	movw	r1, #39453	; 0x9a1d
   1f428:	movt	r1, #4
   1f42c:	mov	r0, r4
   1f430:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f434:	movw	r1, #39471	; 0x9a2f
   1f438:	movt	r1, #4
   1f43c:	mov	r0, r4
   1f440:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f444:	movw	r1, #26232	; 0x6678
   1f448:	movt	r1, #3
   1f44c:	mov	r0, r4
   1f450:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f454:	movw	r1, #39483	; 0x9a3b
   1f458:	movt	r1, #4
   1f45c:	mov	r0, r4
   1f460:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f464:	mov	r0, #0
   1f468:	str	r0, [sp]
   1f46c:	sub	r3, r5, #1
   1f470:	sub	r1, fp, #48	; 0x30
   1f474:	mov	r0, r4
   1f478:	mov	r2, #0
   1f47c:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1f480:	movw	r1, #38880	; 0x97e0
   1f484:	movt	r1, #4
   1f488:	mov	r0, r4
   1f48c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f490:	ldr	r0, [r4, #220]	; 0xdc
   1f494:	cmp	r0, #0
   1f498:	bne	1f4e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e54>
   1f49c:	movw	r0, #36960	; 0x9060
   1f4a0:	movt	r0, #4
   1f4a4:	movw	r1, #36972	; 0x906c
   1f4a8:	movt	r1, #4
   1f4ac:	movw	r3, #45262	; 0xb0ce
   1f4b0:	movt	r3, #4
   1f4b4:	movw	r2, #1166	; 0x48e
   1f4b8:	bl	14a80 <__assert_fail@plt>
   1f4bc:	movw	r1, #45362	; 0xb132
   1f4c0:	movt	r1, #4
   1f4c4:	mov	r0, r4
   1f4c8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f4cc:	movw	r1, #39395	; 0x99e3
   1f4d0:	movt	r1, #4
   1f4d4:	mov	r0, r4
   1f4d8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f4dc:	ldr	r0, [r4, #220]	; 0xdc
   1f4e0:	cmp	r0, #0
   1f4e4:	beq	1f590 <__flatcc_fb_gen_c_json_parser@@Base+0x1efc>
   1f4e8:	sub	r0, r0, #1
   1f4ec:	str	r0, [r4, #220]	; 0xdc
   1f4f0:	movw	r1, #35313	; 0x89f1
   1f4f4:	movt	r1, #3
   1f4f8:	mov	r0, r4
   1f4fc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f500:	movw	r1, #26232	; 0x6678
   1f504:	movt	r1, #3
   1f508:	mov	r0, r4
   1f50c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f510:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f514:	bl	200d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1f518:	sub	sp, fp, #16
   1f51c:	pop	{r4, r5, r6, sl, fp, pc}
   1f520:	movw	r0, #36960	; 0x9060
   1f524:	movt	r0, #4
   1f528:	movw	r1, #36972	; 0x906c
   1f52c:	movt	r1, #4
   1f530:	movw	r3, #45262	; 0xb0ce
   1f534:	movt	r3, #4
   1f538:	mov	r2, #1152	; 0x480
   1f53c:	bl	14a80 <__assert_fail@plt>
   1f540:	movw	r0, #8368	; 0x20b0
   1f544:	movt	r0, #6
   1f548:	ldr	r0, [r0]
   1f54c:	movw	r1, #39243	; 0x994b
   1f550:	movt	r1, #4
   1f554:	str	r1, [sp]
   1f558:	movw	r1, #25975	; 0x6577
   1f55c:	movt	r1, #3
   1f560:	movw	r4, #36972	; 0x906c
   1f564:	movt	r4, #4
   1f568:	mov	r2, r4
   1f56c:	movw	r3, #1140	; 0x474
   1f570:	bl	149c0 <fprintf@plt>
   1f574:	movw	r0, #29885	; 0x74bd
   1f578:	movt	r0, #4
   1f57c:	movw	r3, #45262	; 0xb0ce
   1f580:	movt	r3, #4
   1f584:	mov	r1, r4
   1f588:	movw	r2, #1140	; 0x474
   1f58c:	bl	14a80 <__assert_fail@plt>
   1f590:	movw	r0, #36960	; 0x9060
   1f594:	movt	r0, #4
   1f598:	movw	r1, #36972	; 0x906c
   1f59c:	movt	r1, #4
   1f5a0:	movw	r3, #45262	; 0xb0ce
   1f5a4:	movt	r3, #4
   1f5a8:	movw	r2, #1157	; 0x485
   1f5ac:	bl	14a80 <__assert_fail@plt>
   1f5b0:	push	{r4, r5, fp, lr}
   1f5b4:	add	fp, sp, #8
   1f5b8:	sub	sp, sp, #80	; 0x50
   1f5bc:	mov	r4, r0
   1f5c0:	mov	r0, #0
   1f5c4:	str	r0, [fp, #-12]
   1f5c8:	vmov.i32	q8, #0	; 0x00000000
   1f5cc:	mov	r0, #12
   1f5d0:	sub	r1, fp, #40	; 0x28
   1f5d4:	vst1.64	{d16-d17}, [r1], r0
   1f5d8:	vst1.32	{d16-d17}, [r1]
   1f5dc:	ldr	r1, [r4, #208]	; 0xd0
   1f5e0:	ldr	r2, [r1, #60]	; 0x3c
   1f5e4:	add	r0, sp, #4
   1f5e8:	bl	219b8 <__flatcc_fb_gen_c_json_parser@@Base+0x4324>
   1f5ec:	cmp	r0, #0
   1f5f0:	beq	1f5fc <__flatcc_fb_gen_c_json_parser@@Base+0x1f68>
   1f5f4:	sub	sp, fp, #8
   1f5f8:	pop	{r4, r5, fp, pc}
   1f5fc:	add	r0, sp, #4
   1f600:	sub	r1, fp, #12
   1f604:	bl	21ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x4430>
   1f608:	str	r0, [fp, #-40]	; 0xffffffd8
   1f60c:	ldr	r5, [fp, #-12]
   1f610:	cmp	r0, #0
   1f614:	bne	1f620 <__flatcc_fb_gen_c_json_parser@@Base+0x1f8c>
   1f618:	cmp	r5, #1
   1f61c:	bge	1f7f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2160>
   1f620:	mov	r0, #4
   1f624:	str	r0, [fp, #-24]	; 0xffffffe8
   1f628:	mov	r0, #0
   1f62c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f630:	movw	r0, #6088	; 0x17c8
   1f634:	movt	r0, #2
   1f638:	str	r0, [fp, #-36]	; 0xffffffdc
   1f63c:	movw	r0, #6244	; 0x1864
   1f640:	movt	r0, #2
   1f644:	str	r0, [fp, #-32]	; 0xffffffe0
   1f648:	ldr	r0, [r4, #208]	; 0xd0
   1f64c:	ldr	r2, [r0, #160]	; 0xa0
   1f650:	movw	r1, #37839	; 0x93cf
   1f654:	movt	r1, #4
   1f658:	mov	r0, r4
   1f65c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f660:	ldr	r0, [r4, #220]	; 0xdc
   1f664:	add	r0, r0, #2
   1f668:	str	r0, [r4, #220]	; 0xdc
   1f66c:	movw	r1, #45312	; 0xb100
   1f670:	movt	r1, #4
   1f674:	mov	r0, r4
   1f678:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f67c:	ldr	r0, [r4, #220]	; 0xdc
   1f680:	cmp	r0, #0
   1f684:	beq	1f7d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2140>
   1f688:	subs	r1, r0, #1
   1f68c:	str	r1, [r4, #220]	; 0xdc
   1f690:	beq	1f7d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2140>
   1f694:	sub	r0, r0, #2
   1f698:	str	r0, [r4, #220]	; 0xdc
   1f69c:	movw	r1, #50187	; 0xc40b
   1f6a0:	movt	r1, #4
   1f6a4:	mov	r0, r4
   1f6a8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f6ac:	ldr	r0, [r4, #220]	; 0xdc
   1f6b0:	add	r0, r0, #1
   1f6b4:	str	r0, [r4, #220]	; 0xdc
   1f6b8:	cmp	r5, #0
   1f6bc:	beq	1f768 <__flatcc_fb_gen_c_json_parser@@Base+0x20d4>
   1f6c0:	movw	r1, #39424	; 0x9a00
   1f6c4:	movt	r1, #4
   1f6c8:	mov	r0, r4
   1f6cc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f6d0:	movw	r1, #39453	; 0x9a1d
   1f6d4:	movt	r1, #4
   1f6d8:	mov	r0, r4
   1f6dc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f6e0:	movw	r1, #39471	; 0x9a2f
   1f6e4:	movt	r1, #4
   1f6e8:	mov	r0, r4
   1f6ec:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f6f0:	movw	r1, #26232	; 0x6678
   1f6f4:	movt	r1, #3
   1f6f8:	mov	r0, r4
   1f6fc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f700:	movw	r1, #39483	; 0x9a3b
   1f704:	movt	r1, #4
   1f708:	mov	r0, r4
   1f70c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f710:	mov	r0, #0
   1f714:	str	r0, [sp]
   1f718:	sub	r3, r5, #1
   1f71c:	sub	r1, fp, #40	; 0x28
   1f720:	mov	r0, r4
   1f724:	mov	r2, #0
   1f728:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1f72c:	movw	r1, #38880	; 0x97e0
   1f730:	movt	r1, #4
   1f734:	mov	r0, r4
   1f738:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f73c:	ldr	r0, [r4, #220]	; 0xdc
   1f740:	cmp	r0, #0
   1f744:	bne	1f794 <__flatcc_fb_gen_c_json_parser@@Base+0x2100>
   1f748:	movw	r0, #36960	; 0x9060
   1f74c:	movt	r0, #4
   1f750:	movw	r1, #36972	; 0x906c
   1f754:	movt	r1, #4
   1f758:	movw	r3, #45704	; 0xb288
   1f75c:	movt	r3, #4
   1f760:	movw	r2, #1219	; 0x4c3
   1f764:	bl	14a80 <__assert_fail@plt>
   1f768:	movw	r1, #45747	; 0xb2b3
   1f76c:	movt	r1, #4
   1f770:	mov	r0, r4
   1f774:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f778:	movw	r1, #39395	; 0x99e3
   1f77c:	movt	r1, #4
   1f780:	mov	r0, r4
   1f784:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f788:	ldr	r0, [r4, #220]	; 0xdc
   1f78c:	cmp	r0, #0
   1f790:	beq	1f84c <__flatcc_fb_gen_c_json_parser@@Base+0x21b8>
   1f794:	sub	r0, r0, #1
   1f798:	str	r0, [r4, #220]	; 0xdc
   1f79c:	movw	r1, #35313	; 0x89f1
   1f7a0:	movt	r1, #3
   1f7a4:	mov	r0, r4
   1f7a8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f7ac:	movw	r1, #26232	; 0x6678
   1f7b0:	movt	r1, #3
   1f7b4:	mov	r0, r4
   1f7b8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f7bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f7c0:	bl	200d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1f7c4:	add	r0, sp, #4
   1f7c8:	bl	21b7c <__flatcc_fb_gen_c_json_parser@@Base+0x44e8>
   1f7cc:	sub	sp, fp, #8
   1f7d0:	pop	{r4, r5, fp, pc}
   1f7d4:	movw	r0, #36960	; 0x9060
   1f7d8:	movt	r0, #4
   1f7dc:	movw	r1, #36972	; 0x906c
   1f7e0:	movt	r1, #4
   1f7e4:	movw	r3, #45704	; 0xb288
   1f7e8:	movt	r3, #4
   1f7ec:	movw	r2, #1205	; 0x4b5
   1f7f0:	bl	14a80 <__assert_fail@plt>
   1f7f4:	add	r0, sp, #4
   1f7f8:	bl	21b7c <__flatcc_fb_gen_c_json_parser@@Base+0x44e8>
   1f7fc:	movw	r0, #8368	; 0x20b0
   1f800:	movt	r0, #6
   1f804:	ldr	r0, [r0]
   1f808:	movw	r1, #39243	; 0x994b
   1f80c:	movt	r1, #4
   1f810:	str	r1, [sp]
   1f814:	movw	r1, #25975	; 0x6577
   1f818:	movt	r1, #3
   1f81c:	movw	r4, #36972	; 0x906c
   1f820:	movt	r4, #4
   1f824:	mov	r2, r4
   1f828:	movw	r3, #1194	; 0x4aa
   1f82c:	bl	149c0 <fprintf@plt>
   1f830:	movw	r0, #29885	; 0x74bd
   1f834:	movt	r0, #4
   1f838:	movw	r3, #45704	; 0xb288
   1f83c:	movt	r3, #4
   1f840:	mov	r1, r4
   1f844:	movw	r2, #1194	; 0x4aa
   1f848:	bl	14a80 <__assert_fail@plt>
   1f84c:	movw	r0, #36960	; 0x9060
   1f850:	movt	r0, #4
   1f854:	movw	r1, #36972	; 0x906c
   1f858:	movt	r1, #4
   1f85c:	movw	r3, #45704	; 0xb288
   1f860:	movt	r3, #4
   1f864:	movw	r2, #1210	; 0x4ba
   1f868:	bl	14a80 <__assert_fail@plt>
   1f86c:	ldr	r1, [r0, #208]	; 0xd0
   1f870:	ldr	r1, [r1, #52]	; 0x34
   1f874:	cmp	r1, #0
   1f878:	beq	1f894 <__flatcc_fb_gen_c_json_parser@@Base+0x2200>
   1f87c:	ldrh	r2, [r1, #8]
   1f880:	cmp	r2, #1
   1f884:	beq	1f898 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   1f888:	cmp	r2, #0
   1f88c:	bxne	lr
   1f890:	b	21e30 <__flatcc_fb_gen_c_json_parser@@Base+0x479c>
   1f894:	bx	lr
   1f898:	b	22094 <__flatcc_fb_gen_c_json_parser@@Base+0x4a00>
   1f89c:	ldr	r0, [r0, #4]
   1f8a0:	b	1f8a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1f8a4:	ldr	r3, [r0, #4]
   1f8a8:	str	r3, [r1]
   1f8ac:	ldr	r0, [r0]
   1f8b0:	str	r0, [r2]
   1f8b4:	bx	lr
   1f8b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8bc:	add	fp, sp, #28
   1f8c0:	sub	sp, sp, #4
   1f8c4:	mov	r5, r1
   1f8c8:	ldr	r7, [r0, #20]
   1f8cc:	cmp	r7, #0
   1f8d0:	beq	1fa20 <__flatcc_fb_gen_c_json_parser@@Base+0x238c>
   1f8d4:	mov	r8, r0
   1f8d8:	mov	r6, #0
   1f8dc:	mov	r4, #0
   1f8e0:	ldrb	r0, [r7, #72]	; 0x48
   1f8e4:	tst	r0, #4
   1f8e8:	bne	1f910 <__flatcc_fb_gen_c_json_parser@@Base+0x227c>
   1f8ec:	mov	r0, r7
   1f8f0:	bl	200dc <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1f8f4:	cmp	r0, #0
   1f8f8:	ldrne	r0, [r7, #4]
   1f8fc:	ldrne	r0, [r0, #4]
   1f900:	addne	r0, r6, r0
   1f904:	addne	r6, r0, #6
   1f908:	addne	r4, r4, #1
   1f90c:	add	r4, r4, #1
   1f910:	ldr	r7, [r7]
   1f914:	cmp	r7, #0
   1f918:	bne	1f8e0 <__flatcc_fb_gen_c_json_parser@@Base+0x224c>
   1f91c:	str	r4, [r5]
   1f920:	mov	r7, #0
   1f924:	cmp	r4, #0
   1f928:	beq	1fa28 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   1f92c:	add	r0, r6, r4, lsl #4
   1f930:	bl	1496c <malloc@plt>
   1f934:	str	r0, [sp]
   1f938:	cmp	r0, #0
   1f93c:	beq	1fa28 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   1f940:	ldr	r6, [r8, #20]
   1f944:	cmp	r6, #0
   1f948:	beq	1fa00 <__flatcc_fb_gen_c_json_parser@@Base+0x236c>
   1f94c:	lsl	r0, r4, #4
   1f950:	ldr	r8, [sp]
   1f954:	add	r7, r8, r0
   1f958:	mov	sl, #0
   1f95c:	ldrb	r0, [r6, #72]	; 0x48
   1f960:	tst	r0, #4
   1f964:	bne	1f9f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   1f968:	ldr	r0, [r6, #4]
   1f96c:	ldr	r0, [r0]
   1f970:	str	r0, [r8]
   1f974:	ldr	r9, [r6, #4]
   1f978:	ldr	r5, [r9, #4]
   1f97c:	stmib	r8, {r5, r6}
   1f980:	mov	r0, #0
   1f984:	str	r0, [r8, #12]
   1f988:	mov	r0, r6
   1f98c:	bl	200dc <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1f990:	cmp	r0, #0
   1f994:	beq	1f9f0 <__flatcc_fb_gen_c_json_parser@@Base+0x235c>
   1f998:	str	sl, [r6, #112]	; 0x70
   1f99c:	add	r0, r5, #5
   1f9a0:	str	r7, [r8, #16]
   1f9a4:	str	r0, [r8, #20]
   1f9a8:	ldr	r1, [r9]
   1f9ac:	mov	r0, r7
   1f9b0:	mov	r2, r5
   1f9b4:	bl	1490c <memcpy@plt>
   1f9b8:	ldr	r0, [r6, #4]
   1f9bc:	ldr	r0, [r0, #4]
   1f9c0:	movw	r1, #29791	; 0x745f
   1f9c4:	movt	r1, #28793	; 0x7079
   1f9c8:	str	r1, [r7, r0]!
   1f9cc:	mov	r0, #101	; 0x65
   1f9d0:	strh	r0, [r7, #4]
   1f9d4:	str	r6, [r8, #24]
   1f9d8:	mov	r0, #1
   1f9dc:	str	r0, [r8, #28]
   1f9e0:	add	r7, r7, #6
   1f9e4:	add	r8, r8, #32
   1f9e8:	add	sl, sl, #1
   1f9ec:	b	1f9f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   1f9f0:	add	r8, r8, #16
   1f9f4:	ldr	r6, [r6]
   1f9f8:	cmp	r6, #0
   1f9fc:	bne	1f95c <__flatcc_fb_gen_c_json_parser@@Base+0x22c8>
   1fa00:	movw	r3, #272	; 0x110
   1fa04:	movt	r3, #2
   1fa08:	ldr	r7, [sp]
   1fa0c:	mov	r0, r7
   1fa10:	mov	r1, r4
   1fa14:	mov	r2, #16
   1fa18:	bl	14a44 <qsort@plt>
   1fa1c:	b	1fa28 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   1fa20:	mov	r7, #0
   1fa24:	str	r7, [r5]
   1fa28:	mov	r0, r7
   1fa2c:	sub	sp, fp, #28
   1fa30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa34:	push	{r4, r5, r6, sl, fp, lr}
   1fa38:	add	fp, sp, #16
   1fa3c:	mov	r5, r2
   1fa40:	mov	r6, r1
   1fa44:	mov	r4, r0
   1fa48:	ldr	r2, [fp, #8]
   1fa4c:	movw	r1, #39529	; 0x9a69
   1fa50:	movt	r1, #4
   1fa54:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fa58:	movw	r1, #39609	; 0x9ab9
   1fa5c:	movt	r1, #4
   1fa60:	mov	r0, r4
   1fa64:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fa68:	ldr	r0, [r4, #220]	; 0xdc
   1fa6c:	add	r0, r0, #1
   1fa70:	str	r0, [r4, #220]	; 0xdc
   1fa74:	mov	r0, r4
   1fa78:	mov	r1, r6
   1fa7c:	mov	r2, r5
   1fa80:	bl	20144 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab0>
   1fa84:	ldr	r0, [r4, #220]	; 0xdc
   1fa88:	cmp	r0, #0
   1fa8c:	beq	1fab8 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   1fa90:	sub	r0, r0, #1
   1fa94:	str	r0, [r4, #220]	; 0xdc
   1fa98:	movw	r1, #38800	; 0x9790
   1fa9c:	movt	r1, #4
   1faa0:	mov	r0, r4
   1faa4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1faa8:	ldr	r0, [r4, #220]	; 0xdc
   1faac:	add	r0, r0, #1
   1fab0:	str	r0, [r4, #220]	; 0xdc
   1fab4:	pop	{r4, r5, r6, sl, fp, pc}
   1fab8:	movw	r0, #36960	; 0x9060
   1fabc:	movt	r0, #4
   1fac0:	movw	r1, #36972	; 0x906c
   1fac4:	movt	r1, #4
   1fac8:	movw	r3, #39628	; 0x9acc
   1facc:	movt	r3, #4
   1fad0:	movw	r2, #719	; 0x2cf
   1fad4:	bl	14a80 <__assert_fail@plt>
   1fad8:	movw	r1, #39900	; 0x9bdc
   1fadc:	movt	r1, #4
   1fae0:	b	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fae8:	add	fp, sp, #28
   1faec:	sub	sp, sp, #52	; 0x34
   1faf0:	mov	r7, r3
   1faf4:	mov	sl, r2
   1faf8:	mov	r8, r1
   1fafc:	mov	r4, r0
   1fb00:	mov	r0, #0
   1fb04:	str	r0, [sp, #44]	; 0x2c
   1fb08:	str	r0, [sp, #40]	; 0x28
   1fb0c:	str	r0, [sp, #36]	; 0x24
   1fb10:	str	r0, [sp, #32]
   1fb14:	movw	r1, #26232	; 0x6678
   1fb18:	movt	r1, #3
   1fb1c:	str	r1, [sp, #28]
   1fb20:	str	r0, [sp, #24]
   1fb24:	ldr	r5, [r8]
   1fb28:	add	r0, r5, r2, lsl #4
   1fb2c:	ldr	r9, [fp, #8]
   1fb30:	mov	r1, r9
   1fb34:	bl	201e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b54>
   1fb38:	cmp	r0, #0
   1fb3c:	beq	1fde4 <__flatcc_fb_gen_c_json_parser@@Base+0x2750>
   1fb40:	mov	r0, r5
   1fb44:	mov	r1, sl
   1fb48:	mov	r2, r7
   1fb4c:	mov	r3, r9
   1fb50:	bl	205a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f14>
   1fb54:	mov	r5, r0
   1fb58:	ldr	r0, [r8]
   1fb5c:	cmp	r5, sl
   1fb60:	ble	1fc48 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   1fb64:	add	r1, sp, #24
   1fb68:	add	r2, sp, #28
   1fb6c:	str	r2, [sp]
   1fb70:	str	r1, [sp, #4]
   1fb74:	add	r0, r0, r5, lsl #4
   1fb78:	add	r2, sp, #40	; 0x28
   1fb7c:	add	r3, sp, #32
   1fb80:	mov	r1, r9
   1fb84:	bl	20680 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1fb88:	ldr	r2, [sp, #40]	; 0x28
   1fb8c:	ldr	r3, [sp, #44]	; 0x2c
   1fb90:	ldr	r0, [sp, #24]
   1fb94:	ldr	r1, [sp, #28]
   1fb98:	stm	sp, {r0, r1}
   1fb9c:	movw	r1, #39918	; 0x9bee
   1fba0:	movt	r1, #4
   1fba4:	mov	r0, r4
   1fba8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fbac:	ldr	r0, [r4, #220]	; 0xdc
   1fbb0:	add	r0, r0, #1
   1fbb4:	str	r0, [r4, #220]	; 0xdc
   1fbb8:	str	r9, [sp]
   1fbbc:	sub	r3, r5, #1
   1fbc0:	mov	r0, r4
   1fbc4:	mov	r1, r8
   1fbc8:	mov	r2, sl
   1fbcc:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1fbd0:	ldr	r0, [r4, #220]	; 0xdc
   1fbd4:	cmp	r0, #0
   1fbd8:	beq	20030 <__flatcc_fb_gen_c_json_parser@@Base+0x299c>
   1fbdc:	sub	r0, r0, #1
   1fbe0:	str	r0, [r4, #220]	; 0xdc
   1fbe4:	ldr	r3, [sp, #28]
   1fbe8:	ldr	r2, [sp, #24]
   1fbec:	movw	r1, #40010	; 0x9c4a
   1fbf0:	movt	r1, #4
   1fbf4:	mov	r0, r4
   1fbf8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fbfc:	ldr	r0, [r4, #220]	; 0xdc
   1fc00:	add	r0, r0, #1
   1fc04:	str	r0, [r4, #220]	; 0xdc
   1fc08:	str	r9, [sp]
   1fc0c:	mov	r0, r4
   1fc10:	mov	r1, r8
   1fc14:	mov	r2, r5
   1fc18:	mov	r3, r7
   1fc1c:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1fc20:	ldr	r0, [r4, #220]	; 0xdc
   1fc24:	cmp	r0, #0
   1fc28:	beq	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x29bc>
   1fc2c:	sub	r0, r0, #1
   1fc30:	str	r0, [r4, #220]	; 0xdc
   1fc34:	ldr	r3, [sp, #28]
   1fc38:	ldr	r2, [sp, #24]
   1fc3c:	movw	r1, #40039	; 0x9c67
   1fc40:	movt	r1, #4
   1fc44:	b	20020 <__flatcc_fb_gen_c_json_parser@@Base+0x298c>
   1fc48:	mov	r1, sl
   1fc4c:	mov	r2, r7
   1fc50:	mov	r3, r9
   1fc54:	bl	20778 <__flatcc_fb_gen_c_json_parser@@Base+0x30e4>
   1fc58:	mov	r6, r0
   1fc5c:	sub	r2, r0, #1
   1fc60:	ldr	r5, [r8]
   1fc64:	mov	r0, r5
   1fc68:	mov	r1, sl
   1fc6c:	str	r2, [sp, #12]
   1fc70:	mov	r3, r9
   1fc74:	bl	20854 <__flatcc_fb_gen_c_json_parser@@Base+0x31c0>
   1fc78:	mov	r3, r0
   1fc7c:	cmp	r0, r6
   1fc80:	str	r6, [sp, #20]
   1fc84:	str	r0, [sp, #16]
   1fc88:	bge	1fe14 <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   1fc8c:	mov	r6, #0
   1fc90:	cmp	r3, sl
   1fc94:	ble	1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   1fc98:	add	r0, r5, r3, lsl #4
   1fc9c:	sub	r0, r0, #16
   1fca0:	mov	r1, r9
   1fca4:	mov	r6, r3
   1fca8:	bl	208a8 <__flatcc_fb_gen_c_json_parser@@Base+0x3214>
   1fcac:	mov	r3, r6
   1fcb0:	sub	r0, r0, #8
   1fcb4:	clz	r0, r0
   1fcb8:	lsr	r6, r0, #5
   1fcbc:	add	r0, sp, #24
   1fcc0:	add	r1, sp, #28
   1fcc4:	str	r1, [sp]
   1fcc8:	str	r0, [sp, #4]
   1fccc:	add	r0, r5, r3, lsl #4
   1fcd0:	add	r2, sp, #40	; 0x28
   1fcd4:	mov	r5, r3
   1fcd8:	add	r3, sp, #32
   1fcdc:	mov	r1, r9
   1fce0:	bl	20680 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1fce4:	ldr	r2, [sp, #40]	; 0x28
   1fce8:	ldr	r3, [sp, #44]	; 0x2c
   1fcec:	ldr	r0, [sp, #24]
   1fcf0:	ldr	r1, [sp, #28]
   1fcf4:	stm	sp, {r0, r1}
   1fcf8:	movw	r1, #40061	; 0x9c7d
   1fcfc:	movt	r1, #4
   1fd00:	mov	r0, r4
   1fd04:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fd08:	ldr	r0, [r4, #220]	; 0xdc
   1fd0c:	add	r0, r0, #1
   1fd10:	str	r0, [r4, #220]	; 0xdc
   1fd14:	cmp	r6, #0
   1fd18:	beq	1fe44 <__flatcc_fb_gen_c_json_parser@@Base+0x27b0>
   1fd1c:	ldr	r3, [sp, #28]
   1fd20:	ldr	r2, [sp, #24]
   1fd24:	movw	r1, #40101	; 0x9ca5
   1fd28:	movt	r1, #4
   1fd2c:	mov	r0, r4
   1fd30:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fd34:	ldm	r8, {r0, ip}
   1fd38:	ldr	r1, [r8, #12]
   1fd3c:	sub	r2, r5, #1
   1fd40:	mov	r6, r2
   1fd44:	add	r0, r0, r2, lsl #4
   1fd48:	ldr	r2, [r0, #8]
   1fd4c:	ldr	r3, [r0, #12]
   1fd50:	mov	r0, #8
   1fd54:	str	r0, [sp]
   1fd58:	mov	r0, r4
   1fd5c:	blx	ip
   1fd60:	ldr	r3, [sp, #28]
   1fd64:	ldr	r2, [sp, #24]
   1fd68:	movw	r1, #40133	; 0x9cc5
   1fd6c:	movt	r1, #4
   1fd70:	mov	r0, r4
   1fd74:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fd78:	movw	r1, #40161	; 0x9ce1
   1fd7c:	movt	r1, #4
   1fd80:	mov	r0, r4
   1fd84:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fd88:	movw	r1, #39483	; 0x9a3b
   1fd8c:	movt	r1, #4
   1fd90:	mov	r0, r4
   1fd94:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fd98:	add	r0, r9, #8
   1fd9c:	str	r0, [sp]
   1fda0:	mov	r0, r4
   1fda4:	mov	r1, r8
   1fda8:	mov	r2, r5
   1fdac:	ldr	r3, [sp, #12]
   1fdb0:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1fdb4:	ldr	r0, [r4, #220]	; 0xdc
   1fdb8:	cmp	r0, #0
   1fdbc:	beq	200b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a1c>
   1fdc0:	sub	r0, r0, #1
   1fdc4:	str	r0, [r4, #220]	; 0xdc
   1fdc8:	ldr	r3, [sp, #28]
   1fdcc:	ldr	r2, [sp, #24]
   1fdd0:	movw	r1, #40171	; 0x9ceb
   1fdd4:	movt	r1, #4
   1fdd8:	mov	r0, r4
   1fddc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fde0:	b	1fe84 <__flatcc_fb_gen_c_json_parser@@Base+0x27f0>
   1fde4:	cmp	r7, sl
   1fde8:	bne	1fe20 <__flatcc_fb_gen_c_json_parser@@Base+0x278c>
   1fdec:	mov	r0, #0
   1fdf0:	str	r9, [sp]
   1fdf4:	str	r0, [sp, #4]
   1fdf8:	mov	r0, r4
   1fdfc:	mov	r1, r8
   1fe00:	mov	r2, sl
   1fe04:	mov	r3, r7
   1fe08:	bl	20208 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1fe0c:	sub	sp, fp, #28
   1fe10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe14:	mov	r2, r6
   1fe18:	mov	r6, r3
   1fe1c:	b	1fec0 <__flatcc_fb_gen_c_json_parser@@Base+0x282c>
   1fe20:	add	r0, sl, #1
   1fe24:	cmp	r0, r7
   1fe28:	bne	1fb40 <__flatcc_fb_gen_c_json_parser@@Base+0x24ac>
   1fe2c:	add	r0, r5, r7, lsl #4
   1fe30:	mov	r1, r9
   1fe34:	bl	201e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b54>
   1fe38:	cmp	r0, #0
   1fe3c:	bne	1fb40 <__flatcc_fb_gen_c_json_parser@@Base+0x24ac>
   1fe40:	b	1fdec <__flatcc_fb_gen_c_json_parser@@Base+0x2758>
   1fe44:	movw	r1, #40161	; 0x9ce1
   1fe48:	movt	r1, #4
   1fe4c:	mov	r0, r4
   1fe50:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fe54:	movw	r1, #39483	; 0x9a3b
   1fe58:	movt	r1, #4
   1fe5c:	mov	r0, r4
   1fe60:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fe64:	add	r0, r9, #8
   1fe68:	str	r0, [sp]
   1fe6c:	mov	r0, r4
   1fe70:	mov	r1, r8
   1fe74:	mov	r2, r5
   1fe78:	ldr	r3, [sp, #12]
   1fe7c:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1fe80:	mov	r6, r5
   1fe84:	ldr	r0, [r4, #220]	; 0xdc
   1fe88:	cmp	r0, #0
   1fe8c:	beq	20070 <__flatcc_fb_gen_c_json_parser@@Base+0x29dc>
   1fe90:	sub	r0, r0, #1
   1fe94:	str	r0, [r4, #220]	; 0xdc
   1fe98:	ldr	r3, [sp, #28]
   1fe9c:	ldr	r2, [sp, #24]
   1fea0:	movw	r1, #40200	; 0x9d08
   1fea4:	movt	r1, #4
   1fea8:	mov	r0, r4
   1feac:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1feb0:	ldr	r0, [r4, #220]	; 0xdc
   1feb4:	add	r0, r0, #1
   1feb8:	str	r0, [r4, #220]	; 0xdc
   1febc:	ldr	r2, [sp, #20]
   1fec0:	mov	r5, #0
   1fec4:	cmp	r6, sl
   1fec8:	mov	r0, #0
   1fecc:	movwgt	r0, #1
   1fed0:	str	r7, [sp, #12]
   1fed4:	cmp	r2, r7
   1fed8:	mov	r1, #0
   1fedc:	movwle	r1, #1
   1fee0:	and	r9, r1, r0
   1fee4:	cmp	r9, #1
   1fee8:	ldreq	r0, [r8, #24]
   1feec:	addeq	r5, r0, #1
   1fef0:	streq	r5, [r8, #24]
   1fef4:	cmp	r6, sl
   1fef8:	ble	1ff70 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1fefc:	ldr	r0, [fp, #8]
   1ff00:	stm	sp, {r0, r5}
   1ff04:	sub	r3, r6, #1
   1ff08:	mov	r0, r4
   1ff0c:	mov	r1, r8
   1ff10:	mov	r2, sl
   1ff14:	mov	r7, r6
   1ff18:	bl	20208 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1ff1c:	ldr	r2, [sp, #20]
   1ff20:	cmp	r9, #0
   1ff24:	beq	1ff70 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1ff28:	movw	r1, #40230	; 0x9d26
   1ff2c:	movt	r1, #4
   1ff30:	mov	r0, r4
   1ff34:	mov	r2, r5
   1ff38:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ff3c:	ldr	r0, [r4, #220]	; 0xdc
   1ff40:	mov	r1, #0
   1ff44:	str	r1, [r4, #220]	; 0xdc
   1ff48:	str	r0, [r4, #228]	; 0xe4
   1ff4c:	movw	r1, #40252	; 0x9d3c
   1ff50:	movt	r1, #4
   1ff54:	mov	r0, r4
   1ff58:	mov	r2, r5
   1ff5c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ff60:	mov	r6, r7
   1ff64:	ldr	r2, [sp, #20]
   1ff68:	ldr	r0, [r4, #228]	; 0xe4
   1ff6c:	str	r0, [r4, #220]	; 0xdc
   1ff70:	ldr	r3, [sp, #12]
   1ff74:	cmp	r2, r3
   1ff78:	ble	1ff94 <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
   1ff7c:	cmp	r6, sl
   1ff80:	bgt	1ffa8 <__flatcc_fb_gen_c_json_parser@@Base+0x2914>
   1ff84:	ldr	r1, [r8, #8]
   1ff88:	mov	r0, r4
   1ff8c:	blx	r1
   1ff90:	b	1ffec <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   1ff94:	ldr	r0, [fp, #8]
   1ff98:	str	r0, [sp]
   1ff9c:	mov	r0, r4
   1ffa0:	mov	r1, r8
   1ffa4:	bl	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1ffa8:	cmp	r9, #0
   1ffac:	beq	1ffec <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   1ffb0:	ldr	r0, [r4, #220]	; 0xdc
   1ffb4:	mov	r1, #0
   1ffb8:	str	r1, [r4, #220]	; 0xdc
   1ffbc:	str	r0, [r4, #228]	; 0xe4
   1ffc0:	movw	r1, #40249	; 0x9d39
   1ffc4:	movt	r1, #4
   1ffc8:	mov	r0, r4
   1ffcc:	mov	r2, r5
   1ffd0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ffd4:	ldr	r0, [r4, #228]	; 0xe4
   1ffd8:	str	r0, [r4, #220]	; 0xdc
   1ffdc:	movw	r1, #40263	; 0x9d47
   1ffe0:	movt	r1, #4
   1ffe4:	mov	r0, r4
   1ffe8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ffec:	ldr	r0, [sp, #20]
   1fff0:	ldr	r1, [sp, #16]
   1fff4:	cmp	r1, r0
   1fff8:	bge	20028 <__flatcc_fb_gen_c_json_parser@@Base+0x2994>
   1fffc:	ldr	r0, [r4, #220]	; 0xdc
   20000:	cmp	r0, #0
   20004:	beq	20090 <__flatcc_fb_gen_c_json_parser@@Base+0x29fc>
   20008:	sub	r0, r0, #1
   2000c:	str	r0, [r4, #220]	; 0xdc
   20010:	ldr	r3, [sp, #28]
   20014:	ldr	r2, [sp, #24]
   20018:	movw	r1, #40272	; 0x9d50
   2001c:	movt	r1, #4
   20020:	mov	r0, r4
   20024:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20028:	sub	sp, fp, #28
   2002c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20030:	movw	r0, #36960	; 0x9060
   20034:	movt	r0, #4
   20038:	movw	r1, #36972	; 0x906c
   2003c:	movt	r1, #4
   20040:	movw	r3, #39956	; 0x9c14
   20044:	movt	r3, #4
   20048:	movw	r2, #973	; 0x3cd
   2004c:	bl	14a80 <__assert_fail@plt>
   20050:	movw	r0, #36960	; 0x9060
   20054:	movt	r0, #4
   20058:	movw	r1, #36972	; 0x906c
   2005c:	movt	r1, #4
   20060:	movw	r3, #39956	; 0x9c14
   20064:	movt	r3, #4
   20068:	movw	r2, #975	; 0x3cf
   2006c:	bl	14a80 <__assert_fail@plt>
   20070:	movw	r0, #36960	; 0x9060
   20074:	movt	r0, #4
   20078:	movw	r1, #36972	; 0x906c
   2007c:	movt	r1, #4
   20080:	movw	r3, #39956	; 0x9c14
   20084:	movt	r3, #4
   20088:	movw	r2, #1044	; 0x414
   2008c:	bl	14a80 <__assert_fail@plt>
   20090:	movw	r0, #36960	; 0x9060
   20094:	movt	r0, #4
   20098:	movw	r1, #36972	; 0x906c
   2009c:	movt	r1, #4
   200a0:	movw	r3, #39956	; 0x9c14
   200a4:	movt	r3, #4
   200a8:	mov	r2, #1072	; 0x430
   200ac:	bl	14a80 <__assert_fail@plt>
   200b0:	movw	r0, #36960	; 0x9060
   200b4:	movt	r0, #4
   200b8:	movw	r1, #36972	; 0x906c
   200bc:	movt	r1, #4
   200c0:	movw	r3, #39956	; 0x9c14
   200c4:	movt	r3, #4
   200c8:	mov	r2, #1040	; 0x410
   200cc:	bl	14a80 <__assert_fail@plt>
   200d0:	cmp	r0, #0
   200d4:	bxeq	lr
   200d8:	b	14900 <free@plt>
   200dc:	ldrh	r1, [r0, #24]
   200e0:	movw	r2, #65534	; 0xfffe
   200e4:	and	r2, r1, r2
   200e8:	mov	r1, #0
   200ec:	cmp	r2, #14
   200f0:	bne	20108 <__flatcc_fb_gen_c_json_parser@@Base+0x2a74>
   200f4:	ldr	r0, [r0, #16]
   200f8:	ldrh	r0, [r0, #8]
   200fc:	sub	r0, r0, #4
   20100:	clz	r0, r0
   20104:	lsr	r1, r0, #5
   20108:	mov	r0, r1
   2010c:	bx	lr
   20110:	push	{r4, r5, fp, lr}
   20114:	add	fp, sp, #8
   20118:	ldm	r1, {r3, r4}
   2011c:	ldm	r0, {r1, r5}
   20120:	cmp	r5, r4
   20124:	mov	r2, r5
   20128:	movgt	r2, r4
   2012c:	mov	r0, r1
   20130:	mov	r1, r3
   20134:	bl	14924 <memcmp@plt>
   20138:	cmp	r0, #0
   2013c:	subeq	r0, r5, r4
   20140:	pop	{r4, r5, fp, pc}
   20144:	ldr	r1, [r1, #40]	; 0x28
   20148:	sub	r3, r1, #1
   2014c:	cmp	r3, #5
   20150:	bcs	2015c <__flatcc_fb_gen_c_json_parser@@Base+0x2ac8>
   20154:	ldrd	r2, [r2, #48]	; 0x30
   20158:	b	20174 <__flatcc_fb_gen_c_json_parser@@Base+0x2ae0>
   2015c:	sub	r1, r1, #6
   20160:	cmp	r1, #4
   20164:	bcs	2018c <__flatcc_fb_gen_c_json_parser@@Base+0x2af8>
   20168:	ldrd	r2, [r2, #48]	; 0x30
   2016c:	cmn	r3, #1
   20170:	ble	20180 <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   20174:	movw	r1, #39703	; 0x9b17
   20178:	movt	r1, #4
   2017c:	b	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20180:	movw	r1, #39745	; 0x9b41
   20184:	movt	r1, #4
   20188:	b	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2018c:	push	{r4, sl, fp, lr}
   20190:	add	fp, sp, #8
   20194:	sub	sp, sp, #8
   20198:	movw	r0, #8368	; 0x20b0
   2019c:	movt	r0, #6
   201a0:	ldr	r0, [r0]
   201a4:	movw	r1, #39787	; 0x9b6b
   201a8:	movt	r1, #4
   201ac:	str	r1, [sp]
   201b0:	movw	r1, #25975	; 0x6577
   201b4:	movt	r1, #3
   201b8:	movw	r4, #36972	; 0x906c
   201bc:	movt	r4, #4
   201c0:	mov	r2, r4
   201c4:	movw	r3, #710	; 0x2c6
   201c8:	bl	149c0 <fprintf@plt>
   201cc:	movw	r0, #29885	; 0x74bd
   201d0:	movt	r0, #4
   201d4:	movw	r3, #39822	; 0x9b8e
   201d8:	movt	r3, #4
   201dc:	mov	r1, r4
   201e0:	movw	r2, #710	; 0x2c6
   201e4:	bl	14a80 <__assert_fail@plt>
   201e8:	mvn	r2, #7
   201ec:	sub	r2, r2, r1
   201f0:	ldr	r3, [r0, #4]
   201f4:	add	r0, r2, r3
   201f8:	add	r1, r1, #8
   201fc:	cmp	r1, r3
   20200:	movwgt	r0, #0
   20204:	bx	lr
   20208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2020c:	add	fp, sp, #28
   20210:	sub	sp, sp, #52	; 0x34
   20214:	mov	sl, r3
   20218:	mov	r5, r1
   2021c:	mov	r4, r0
   20220:	mov	r0, #0
   20224:	str	r0, [sp, #44]	; 0x2c
   20228:	str	r0, [sp, #40]	; 0x28
   2022c:	str	r0, [sp, #36]	; 0x24
   20230:	str	r0, [sp, #32]
   20234:	ldr	r0, [r1]
   20238:	add	r1, sp, #24
   2023c:	add	r3, sp, #28
   20240:	str	r3, [sp]
   20244:	str	r1, [sp, #4]
   20248:	sub	r8, sl, r2
   2024c:	add	r1, r8, #1
   20250:	add	r1, r1, r1, lsr #31
   20254:	str	r2, [sp, #16]
   20258:	add	r1, r2, r1, asr #1
   2025c:	str	r1, [sp, #20]
   20260:	add	r0, r0, r1, lsl #4
   20264:	ldr	r1, [fp, #8]
   20268:	add	r2, sp, #40	; 0x28
   2026c:	add	r3, sp, #32
   20270:	bl	20680 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   20274:	mov	r9, r0
   20278:	cmp	r0, #8
   2027c:	bne	202a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2c0c>
   20280:	ldr	r2, [sp, #40]	; 0x28
   20284:	ldr	r3, [sp, #44]	; 0x2c
   20288:	ldr	r0, [sp, #24]
   2028c:	ldr	r1, [sp, #28]
   20290:	stm	sp, {r0, r1}
   20294:	movw	r1, #40295	; 0x9d67
   20298:	movt	r1, #4
   2029c:	b	202d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2c3c>
   202a0:	ldr	r2, [sp, #32]
   202a4:	ldr	r3, [sp, #36]	; 0x24
   202a8:	ldr	r0, [sp, #40]	; 0x28
   202ac:	ldr	r1, [sp, #44]	; 0x2c
   202b0:	mov	r7, r5
   202b4:	ldr	r5, [sp, #24]
   202b8:	ldr	r6, [sp, #28]
   202bc:	stm	sp, {r0, r1, r5}
   202c0:	mov	r5, r7
   202c4:	str	r6, [sp, #12]
   202c8:	movw	r1, #40327	; 0x9d87
   202cc:	movt	r1, #4
   202d0:	mov	r0, r4
   202d4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   202d8:	ldr	r7, [fp, #12]
   202dc:	ldr	r0, [r4, #220]	; 0xdc
   202e0:	add	r0, r0, #1
   202e4:	str	r0, [r4, #220]	; 0xdc
   202e8:	add	r0, r8, #2
   202ec:	cmp	r0, #2
   202f0:	bhi	20340 <__flatcc_fb_gen_c_json_parser@@Base+0x2cac>
   202f4:	ldr	r0, [r5]
   202f8:	mov	r6, r7
   202fc:	ldr	r7, [r5, #4]
   20300:	ldr	r1, [r5, #12]
   20304:	ldr	r2, [sp, #20]
   20308:	add	r0, r0, r2, lsl #4
   2030c:	ldr	r2, [r0, #8]
   20310:	ldr	r3, [r0, #12]
   20314:	str	r9, [sp]
   20318:	mov	r0, r4
   2031c:	blx	r7
   20320:	cmp	r6, #1
   20324:	blt	203b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d24>
   20328:	movw	r1, #40370	; 0x9db2
   2032c:	movt	r1, #4
   20330:	mov	r0, r4
   20334:	mov	r2, r6
   20338:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2033c:	b	203c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d30>
   20340:	ldr	r8, [sp, #20]
   20344:	cmp	r8, sl
   20348:	bne	20398 <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
   2034c:	ldr	r0, [r5]
   20350:	mov	r6, r7
   20354:	ldr	r7, [r5, #4]
   20358:	ldr	r1, [r5, #12]
   2035c:	add	r0, r0, r8, lsl #4
   20360:	ldr	r2, [r0, #8]
   20364:	ldr	r3, [r0, #12]
   20368:	str	r9, [sp]
   2036c:	mov	r0, r4
   20370:	blx	r7
   20374:	mov	r7, r6
   20378:	cmp	r6, #1
   2037c:	blt	20450 <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   20380:	movw	r1, #40370	; 0x9db2
   20384:	movt	r1, #4
   20388:	mov	r0, r4
   2038c:	mov	r2, r7
   20390:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20394:	b	2045c <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   20398:	ldr	r6, [fp, #8]
   2039c:	stm	sp, {r6, r7}
   203a0:	mov	r0, r4
   203a4:	mov	r1, r5
   203a8:	mov	r2, r8
   203ac:	mov	r3, sl
   203b0:	bl	20208 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   203b4:	b	20484 <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   203b8:	ldr	r1, [r5, #8]
   203bc:	mov	r0, r4
   203c0:	blx	r1
   203c4:	ldr	r0, [r4, #220]	; 0xdc
   203c8:	cmp	r0, #0
   203cc:	beq	20528 <__flatcc_fb_gen_c_json_parser@@Base+0x2e94>
   203d0:	sub	r0, r0, #1
   203d4:	str	r0, [r4, #220]	; 0xdc
   203d8:	movw	r1, #35313	; 0x89f1
   203dc:	movt	r1, #3
   203e0:	mov	r0, r4
   203e4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   203e8:	ldr	r0, [r4, #220]	; 0xdc
   203ec:	cmp	r0, #0
   203f0:	beq	20548 <__flatcc_fb_gen_c_json_parser@@Base+0x2eb4>
   203f4:	sub	r0, r0, #1
   203f8:	str	r0, [r4, #220]	; 0xdc
   203fc:	ldr	r3, [sp, #28]
   20400:	ldr	r2, [sp, #24]
   20404:	movw	r1, #40452	; 0x9e04
   20408:	movt	r1, #4
   2040c:	mov	r0, r4
   20410:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20414:	ldr	r0, [r4, #220]	; 0xdc
   20418:	add	r0, r0, #1
   2041c:	str	r0, [r4, #220]	; 0xdc
   20420:	cmp	r6, #1
   20424:	blt	20440 <__flatcc_fb_gen_c_json_parser@@Base+0x2dac>
   20428:	movw	r1, #40370	; 0x9db2
   2042c:	movt	r1, #4
   20430:	mov	r0, r4
   20434:	mov	r2, r6
   20438:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2043c:	b	204d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   20440:	ldr	r1, [r5, #8]
   20444:	mov	r0, r4
   20448:	blx	r1
   2044c:	b	204d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   20450:	ldr	r1, [r5, #8]
   20454:	mov	r0, r4
   20458:	blx	r1
   2045c:	ldr	r0, [r4, #220]	; 0xdc
   20460:	cmp	r0, #0
   20464:	ldr	r6, [fp, #8]
   20468:	beq	20588 <__flatcc_fb_gen_c_json_parser@@Base+0x2ef4>
   2046c:	sub	r0, r0, #1
   20470:	str	r0, [r4, #220]	; 0xdc
   20474:	movw	r1, #35313	; 0x89f1
   20478:	movt	r1, #3
   2047c:	mov	r0, r4
   20480:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20484:	ldr	r0, [r4, #220]	; 0xdc
   20488:	cmp	r0, #0
   2048c:	beq	20568 <__flatcc_fb_gen_c_json_parser@@Base+0x2ed4>
   20490:	sub	r0, r0, #1
   20494:	str	r0, [r4, #220]	; 0xdc
   20498:	ldr	r3, [sp, #28]
   2049c:	ldr	r2, [sp, #24]
   204a0:	movw	r1, #40452	; 0x9e04
   204a4:	movt	r1, #4
   204a8:	mov	r0, r4
   204ac:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   204b0:	ldr	r0, [r4, #220]	; 0xdc
   204b4:	add	r0, r0, #1
   204b8:	str	r0, [r4, #220]	; 0xdc
   204bc:	stm	sp, {r6, r7}
   204c0:	sub	r3, r8, #1
   204c4:	mov	r0, r4
   204c8:	mov	r1, r5
   204cc:	ldr	r2, [sp, #16]
   204d0:	bl	20208 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   204d4:	ldr	r0, [r4, #220]	; 0xdc
   204d8:	cmp	r0, #0
   204dc:	beq	20508 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   204e0:	sub	r0, r0, #1
   204e4:	str	r0, [r4, #220]	; 0xdc
   204e8:	ldr	r3, [sp, #28]
   204ec:	ldr	r2, [sp, #24]
   204f0:	movw	r1, #40474	; 0x9e1a
   204f4:	movt	r1, #4
   204f8:	mov	r0, r4
   204fc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20500:	sub	sp, fp, #28
   20504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20508:	movw	r0, #36960	; 0x9060
   2050c:	movt	r0, #4
   20510:	movw	r1, #36972	; 0x906c
   20514:	movt	r1, #4
   20518:	movw	r3, #40386	; 0x9dc2
   2051c:	movt	r3, #4
   20520:	movw	r2, #910	; 0x38e
   20524:	bl	14a80 <__assert_fail@plt>
   20528:	movw	r0, #36960	; 0x9060
   2052c:	movt	r0, #4
   20530:	movw	r1, #36972	; 0x906c
   20534:	movt	r1, #4
   20538:	movw	r3, #40386	; 0x9dc2
   2053c:	movt	r3, #4
   20540:	mov	r2, #888	; 0x378
   20544:	bl	14a80 <__assert_fail@plt>
   20548:	movw	r0, #36960	; 0x9060
   2054c:	movt	r0, #4
   20550:	movw	r1, #36972	; 0x906c
   20554:	movt	r1, #4
   20558:	movw	r3, #40386	; 0x9dc2
   2055c:	movt	r3, #4
   20560:	movw	r2, #889	; 0x379
   20564:	bl	14a80 <__assert_fail@plt>
   20568:	movw	r0, #36960	; 0x9060
   2056c:	movt	r0, #4
   20570:	movw	r1, #36972	; 0x906c
   20574:	movt	r1, #4
   20578:	movw	r3, #40386	; 0x9dc2
   2057c:	movt	r3, #4
   20580:	movw	r2, #907	; 0x38b
   20584:	bl	14a80 <__assert_fail@plt>
   20588:	movw	r0, #36960	; 0x9060
   2058c:	movt	r0, #4
   20590:	movw	r1, #36972	; 0x906c
   20594:	movt	r1, #4
   20598:	movw	r3, #40386	; 0x9dc2
   2059c:	movt	r3, #4
   205a0:	movw	r2, #903	; 0x387
   205a4:	bl	14a80 <__assert_fail@plt>
   205a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   205ac:	add	fp, sp, #28
   205b0:	sub	sp, sp, #44	; 0x2c
   205b4:	mov	r4, r3
   205b8:	mov	r5, r1
   205bc:	mov	r9, #0
   205c0:	str	r9, [sp, #36]	; 0x24
   205c4:	str	r9, [sp, #32]
   205c8:	str	r9, [sp, #28]
   205cc:	str	r9, [sp, #24]
   205d0:	str	r9, [sp, #20]
   205d4:	str	r9, [sp, #16]
   205d8:	str	r9, [sp, #12]
   205dc:	str	r9, [sp, #8]
   205e0:	sub	r1, r2, r1
   205e4:	add	r1, r1, r1, lsr #31
   205e8:	add	r1, r5, r1, asr #1
   205ec:	add	r0, r0, r1, lsl #4
   205f0:	sub	r6, r0, #16
   205f4:	add	sl, sp, #8
   205f8:	mov	r8, r1
   205fc:	cmp	r1, r5
   20600:	ble	20674 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe0>
   20604:	str	r9, [sp]
   20608:	str	r9, [sp, #4]
   2060c:	mov	r0, r6
   20610:	mov	r1, r4
   20614:	add	r2, sp, #32
   20618:	add	r3, sp, #16
   2061c:	bl	20680 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   20620:	str	r9, [sp]
   20624:	str	r9, [sp, #4]
   20628:	add	r0, r6, #16
   2062c:	mov	r1, r4
   20630:	add	r2, sp, #24
   20634:	mov	r3, sl
   20638:	bl	20680 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   2063c:	ldr	r0, [sp, #32]
   20640:	ldr	r1, [sp, #36]	; 0x24
   20644:	ldr	r2, [sp, #24]
   20648:	ldr	r3, [sp, #28]
   2064c:	eor	r1, r3, r1
   20650:	ldr	r3, [sp, #16]
   20654:	ldr	r7, [sp, #20]
   20658:	and	r1, r1, r7
   2065c:	eor	r0, r2, r0
   20660:	and	r0, r0, r3
   20664:	orrs	r0, r0, r1
   20668:	sub	r6, r6, #16
   2066c:	sub	r1, r8, #1
   20670:	beq	205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   20674:	mov	r0, r8
   20678:	sub	sp, fp, #28
   2067c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20680:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20684:	add	fp, sp, #24
   20688:	mov	ip, r0
   2068c:	ldr	r4, [r0, #4]
   20690:	mov	r0, #0
   20694:	ldr	lr, [fp, #8]
   20698:	cmp	r4, r1
   2069c:	mov	r8, #0
   206a0:	blt	20760 <__flatcc_fb_gen_c_json_parser@@Base+0x30cc>
   206a4:	sub	r0, r4, r1
   206a8:	cmp	r0, #8
   206ac:	movge	r0, #8
   206b0:	ldr	r7, [ip]
   206b4:	add	r8, r7, r1
   206b8:	cmp	r0, #0
   206bc:	beq	20720 <__flatcc_fb_gen_c_json_parser@@Base+0x308c>
   206c0:	sub	r1, r1, #1
   206c4:	sub	r7, r1, r4
   206c8:	cmn	r7, #9
   206cc:	mvnle	r7, #8
   206d0:	mov	r1, #72	; 0x48
   206d4:	add	r1, r1, r7, lsl #3
   206d8:	add	r4, r7, #2
   206dc:	mov	ip, #0
   206e0:	mov	r9, #0
   206e4:	ldrb	r5, [r8, -r4]
   206e8:	rsb	r6, r1, #32
   206ec:	lsr	r6, r5, r6
   206f0:	sub	r7, r1, #32
   206f4:	cmp	r7, #0
   206f8:	lslge	r6, r5, r7
   206fc:	orr	r9, r6, r9
   20700:	lsl	r5, r5, r1
   20704:	movwge	r5, #0
   20708:	orr	ip, r5, ip
   2070c:	add	r4, r4, #1
   20710:	add	r1, r1, #8
   20714:	cmp	r4, #1
   20718:	bne	206e4 <__flatcc_fb_gen_c_json_parser@@Base+0x3050>
   2071c:	b	20728 <__flatcc_fb_gen_c_json_parser@@Base+0x3094>
   20720:	mov	ip, #0
   20724:	mov	r9, #0
   20728:	str	ip, [r2]
   2072c:	str	r9, [r2, #4]
   20730:	mov	r1, #32
   20734:	sub	r1, r1, r0, lsl #3
   20738:	mov	r2, #64	; 0x40
   2073c:	sub	r2, r2, r0, lsl #3
   20740:	mvn	r7, #0
   20744:	lsl	r4, r7, r2
   20748:	cmp	r1, #0
   2074c:	movwge	r4, #0
   20750:	rsb	r2, r2, #32
   20754:	ror	r5, r7, r2
   20758:	lslge	r5, r7, r1
   2075c:	strd	r4, [r3]
   20760:	ldr	r1, [fp, #12]
   20764:	cmp	lr, #0
   20768:	strne	r8, [lr]
   2076c:	cmp	r1, #0
   20770:	strne	r0, [r1]
   20774:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2077c:	add	fp, sp, #28
   20780:	sub	sp, sp, #44	; 0x2c
   20784:	mov	r4, r3
   20788:	mov	sl, r2
   2078c:	mov	r9, #0
   20790:	str	r9, [sp, #36]	; 0x24
   20794:	str	r9, [sp, #32]
   20798:	str	r9, [sp, #28]
   2079c:	str	r9, [sp, #24]
   207a0:	str	r9, [sp, #20]
   207a4:	str	r9, [sp, #16]
   207a8:	str	r9, [sp, #12]
   207ac:	str	r9, [sp, #8]
   207b0:	sub	r2, r2, r1
   207b4:	add	r2, r2, r2, lsr #31
   207b8:	add	r1, r1, r2, asr #1
   207bc:	add	r6, r1, #1
   207c0:	add	r7, r0, r6, lsl #4
   207c4:	add	r8, sp, #8
   207c8:	sub	r0, r6, #1
   207cc:	cmp	r0, sl
   207d0:	bge	20848 <__flatcc_fb_gen_c_json_parser@@Base+0x31b4>
   207d4:	str	r9, [sp]
   207d8:	str	r9, [sp, #4]
   207dc:	sub	r0, r7, #16
   207e0:	mov	r1, r4
   207e4:	add	r2, sp, #32
   207e8:	add	r3, sp, #16
   207ec:	bl	20680 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   207f0:	str	r9, [sp]
   207f4:	str	r9, [sp, #4]
   207f8:	mov	r0, r7
   207fc:	mov	r1, r4
   20800:	add	r2, sp, #24
   20804:	mov	r3, r8
   20808:	bl	20680 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   2080c:	ldr	r0, [sp, #32]
   20810:	ldr	r1, [sp, #36]	; 0x24
   20814:	ldr	r2, [sp, #24]
   20818:	ldr	r3, [sp, #28]
   2081c:	eor	r1, r3, r1
   20820:	ldr	r3, [sp, #16]
   20824:	ldr	r5, [sp, #20]
   20828:	and	r1, r1, r5
   2082c:	eor	r0, r2, r0
   20830:	and	r0, r0, r3
   20834:	orrs	r0, r0, r1
   20838:	add	r7, r7, #16
   2083c:	add	r6, r6, #1
   20840:	beq	207c8 <__flatcc_fb_gen_c_json_parser@@Base+0x3134>
   20844:	sub	r6, r6, #1
   20848:	mov	r0, r6
   2084c:	sub	sp, fp, #28
   20850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20854:	push	{r4, r5, r6, r7, fp, lr}
   20858:	add	fp, sp, #16
   2085c:	mov	r6, r1
   20860:	cmp	r1, r2
   20864:	bgt	208a0 <__flatcc_fb_gen_c_json_parser@@Base+0x320c>
   20868:	mov	r4, r3
   2086c:	mov	r5, r2
   20870:	add	r7, r0, r6, lsl #4
   20874:	b	2088c <__flatcc_fb_gen_c_json_parser@@Base+0x31f8>
   20878:	add	r7, r7, #16
   2087c:	add	r0, r6, #1
   20880:	cmp	r6, r5
   20884:	mov	r6, r0
   20888:	popge	{r4, r5, r6, r7, fp, pc}
   2088c:	mov	r0, r7
   20890:	mov	r1, r4
   20894:	bl	201e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b54>
   20898:	cmp	r0, #0
   2089c:	ble	20878 <__flatcc_fb_gen_c_json_parser@@Base+0x31e4>
   208a0:	mov	r0, r6
   208a4:	pop	{r4, r5, r6, r7, fp, pc}
   208a8:	ldr	r2, [r0, #4]
   208ac:	sub	r0, r2, r1
   208b0:	add	r1, r1, #8
   208b4:	cmp	r1, r2
   208b8:	movwlt	r0, #0
   208bc:	bx	lr
   208c0:	push	{r4, r5, r6, r7, fp, lr}
   208c4:	add	fp, sp, #16
   208c8:	mov	r5, r3
   208cc:	mov	r6, r2
   208d0:	mov	r7, r1
   208d4:	mov	r4, r0
   208d8:	ldr	r2, [fp, #8]
   208dc:	movw	r1, #41006	; 0xa02e
   208e0:	movt	r1, #4
   208e4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   208e8:	movw	r1, #41073	; 0xa071
   208ec:	movt	r1, #4
   208f0:	mov	r0, r4
   208f4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   208f8:	ldr	r0, [r4, #220]	; 0xdc
   208fc:	add	r0, r0, #1
   20900:	str	r0, [r4, #220]	; 0xdc
   20904:	mov	r0, r4
   20908:	mov	r1, r7
   2090c:	mov	r2, r6
   20910:	mov	r3, r5
   20914:	bl	20978 <__flatcc_fb_gen_c_json_parser@@Base+0x32e4>
   20918:	ldr	r0, [r4, #220]	; 0xdc
   2091c:	cmp	r0, #0
   20920:	beq	2094c <__flatcc_fb_gen_c_json_parser@@Base+0x32b8>
   20924:	sub	r0, r0, #1
   20928:	str	r0, [r4, #220]	; 0xdc
   2092c:	movw	r1, #38800	; 0x9790
   20930:	movt	r1, #4
   20934:	mov	r0, r4
   20938:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2093c:	ldr	r0, [r4, #220]	; 0xdc
   20940:	add	r0, r0, #1
   20944:	str	r0, [r4, #220]	; 0xdc
   20948:	pop	{r4, r5, r6, r7, fp, pc}
   2094c:	movw	r0, #36960	; 0x9060
   20950:	movt	r0, #4
   20954:	movw	r1, #36972	; 0x906c
   20958:	movt	r1, #4
   2095c:	movw	r3, #41092	; 0xa084
   20960:	movt	r3, #4
   20964:	movw	r2, #675	; 0x2a3
   20968:	bl	14a80 <__assert_fail@plt>
   2096c:	movw	r1, #40826	; 0x9f7a
   20970:	movt	r1, #4
   20974:	b	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2097c:	add	fp, sp, #28
   20980:	sub	sp, sp, #540	; 0x21c
   20984:	mov	r9, r3
   20988:	mov	r5, r2
   2098c:	mov	r6, r1
   20990:	mov	r4, r0
   20994:	sub	r0, fp, #256	; 0x100
   20998:	mov	r1, #0
   2099c:	str	r1, [sp, #104]	; 0x68
   209a0:	mov	r1, #0
   209a4:	mov	r2, #220	; 0xdc
   209a8:	bl	149d8 <memset@plt>
   209ac:	ldr	r0, [r6, #12]
   209b0:	add	r1, sp, #108	; 0x6c
   209b4:	bl	16750 <__flatcc_fb_copy_scope@@Base>
   209b8:	str	r5, [sp, #88]	; 0x58
   209bc:	ldrh	r0, [r5, #24]
   209c0:	ldrh	r1, [r6, #8]
   209c4:	str	r1, [sp, #92]	; 0x5c
   209c8:	cmp	r0, #15
   209cc:	mov	r5, #0
   209d0:	bhi	209e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3354>
   209d4:	mov	r1, #1
   209d8:	movw	r2, #33408	; 0x8280
   209dc:	tst	r2, r1, lsl r0
   209e0:	mov	r5, #0
   209e4:	movne	r5, #1
   209e8:	sub	r6, r0, #7
   209ec:	cmp	r6, #8
   209f0:	bhi	214c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3e2c>
   209f4:	add	r0, pc, #68	; 0x44
   209f8:	mov	lr, #0
   209fc:	mov	ip, #0
   20a00:	mov	sl, #0
   20a04:	mov	r2, #0
   20a08:	str	r2, [sp, #44]	; 0x2c
   20a0c:	mov	r2, #0
   20a10:	str	r2, [sp, #40]	; 0x28
   20a14:	mov	r8, #0
   20a18:	mov	r2, #0
   20a1c:	str	r2, [sp, #80]	; 0x50
   20a20:	mov	r2, #0
   20a24:	str	r2, [sp, #96]	; 0x60
   20a28:	mov	r3, #0
   20a2c:	mov	r2, #0
   20a30:	mov	r7, #0
   20a34:	mov	r1, #0
   20a38:	str	r1, [sp, #48]	; 0x30
   20a3c:	ldr	pc, [r0, r6, lsl #2]
   20a40:	andeq	r0, r2, ip, lsr #22
   20a44:	andeq	r0, r2, r8, asr #22
   20a48:	andeq	r0, r2, r4, ror #20
   20a4c:	andeq	r0, r2, r4, ror #20
   20a50:	andeq	r0, r2, r8, lsl #23
   20a54:	andeq	r0, r2, r8, lsl #23
   20a58:	andeq	r0, r2, r8, lsl #23
   20a5c:	muleq	r2, r0, sl
   20a60:	muleq	r2, r0, sl
   20a64:	mov	r0, #1
   20a68:	str	r0, [sp, #44]	; 0x2c
   20a6c:	mov	r0, #0
   20a70:	str	r0, [sp, #40]	; 0x28
   20a74:	mov	r8, #0
   20a78:	mov	r0, #0
   20a7c:	str	r0, [sp, #80]	; 0x50
   20a80:	mov	r0, #0
   20a84:	str	r0, [sp, #96]	; 0x60
   20a88:	mov	r3, #0
   20a8c:	b	20b18 <__flatcc_fb_gen_c_json_parser@@Base+0x3484>
   20a90:	ldr	r6, [sp, #88]	; 0x58
   20a94:	ldr	r0, [r6, #16]
   20a98:	sub	r1, fp, #256	; 0x100
   20a9c:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   20aa0:	ldr	r0, [r6, #16]
   20aa4:	ldrh	r1, [r0, #8]
   20aa8:	eor	r2, r1, #4
   20aac:	orr	r2, r9, r2
   20ab0:	clz	r2, r2
   20ab4:	lsr	r3, r2, #5
   20ab8:	clz	r2, r1
   20abc:	lsr	r2, r2, #5
   20ac0:	str	r2, [sp, #80]	; 0x50
   20ac4:	sub	r2, r1, #1
   20ac8:	clz	r2, r2
   20acc:	lsr	r2, r2, #5
   20ad0:	str	r2, [sp, #96]	; 0x60
   20ad4:	cmp	r1, #3
   20ad8:	bne	20b04 <__flatcc_fb_gen_c_json_parser@@Base+0x3470>
   20adc:	ldr	r0, [r0, #40]	; 0x28
   20ae0:	str	r0, [sp, #48]	; 0x30
   20ae4:	mov	r0, #1
   20ae8:	str	r0, [sp, #40]	; 0x28
   20aec:	mov	r0, #0
   20af0:	str	r0, [sp, #44]	; 0x2c
   20af4:	mov	r8, #1
   20af8:	mov	r2, #0
   20afc:	mov	r7, #0
   20b00:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x34f4>
   20b04:	mov	r0, #0
   20b08:	str	r0, [sp, #44]	; 0x2c
   20b0c:	mov	r0, #0
   20b10:	str	r0, [sp, #40]	; 0x28
   20b14:	mov	r8, #0
   20b18:	mov	r2, #0
   20b1c:	mov	r7, #0
   20b20:	mov	r0, #0
   20b24:	str	r0, [sp, #48]	; 0x30
   20b28:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x34f4>
   20b2c:	ldr	r2, [sp, #88]	; 0x58
   20b30:	ldrh	r1, [r2, #72]	; 0x48
   20b34:	and	ip, r1, #2048	; 0x800
   20b38:	and	lr, r1, #1024	; 0x400
   20b3c:	ldr	sl, [r2, #104]	; 0x68
   20b40:	cmp	sl, #0
   20b44:	movwne	sl, #1
   20b48:	ldr	r2, [sp, #88]	; 0x58
   20b4c:	ldr	r0, [r2, #16]
   20b50:	str	r0, [sp, #48]	; 0x30
   20b54:	mov	r8, #1
   20b58:	mov	r0, #0
   20b5c:	str	r0, [sp, #44]	; 0x2c
   20b60:	mov	r0, #0
   20b64:	str	r0, [sp, #40]	; 0x28
   20b68:	mov	r0, #0
   20b6c:	str	r0, [sp, #80]	; 0x50
   20b70:	mov	r0, #0
   20b74:	str	r0, [sp, #96]	; 0x60
   20b78:	mov	r3, #0
   20b7c:	str	lr, [sp, #104]	; 0x68
   20b80:	mov	r2, ip
   20b84:	mov	r7, sl
   20b88:	ldr	r6, [sp, #104]	; 0x68
   20b8c:	orrs	r0, r2, r6
   20b90:	str	r0, [sp, #64]	; 0x40
   20b94:	beq	20c08 <__flatcc_fb_gen_c_json_parser@@Base+0x3574>
   20b98:	cmp	r5, #0
   20b9c:	beq	20bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x3524>
   20ba0:	mov	r5, #0
   20ba4:	ldr	r0, [sp, #48]	; 0x30
   20ba8:	cmp	r0, #4
   20bac:	mov	sl, #0
   20bb0:	mov	r7, #0
   20bb4:	beq	20c0c <__flatcc_fb_gen_c_json_parser@@Base+0x3578>
   20bb8:	movw	r0, #8368	; 0x20b0
   20bbc:	movt	r0, #6
   20bc0:	ldr	r0, [r0]
   20bc4:	movw	r1, #41172	; 0xa0d4
   20bc8:	movt	r1, #4
   20bcc:	str	r1, [sp]
   20bd0:	movw	r1, #25975	; 0x6577
   20bd4:	movt	r1, #3
   20bd8:	movw	r4, #36972	; 0x906c
   20bdc:	movt	r4, #4
   20be0:	mov	r2, r4
   20be4:	movw	r3, #466	; 0x1d2
   20be8:	bl	149c0 <fprintf@plt>
   20bec:	movw	r0, #29885	; 0x74bd
   20bf0:	movt	r0, #4
   20bf4:	movw	r3, #41231	; 0xa10f
   20bf8:	movt	r3, #4
   20bfc:	mov	r1, r4
   20c00:	movw	r2, #466	; 0x1d2
   20c04:	bl	14a80 <__assert_fail@plt>
   20c08:	mov	sl, r8
   20c0c:	cmp	r5, #0
   20c10:	mov	r0, r5
   20c14:	movwne	r0, #1
   20c18:	cmp	r9, #0
   20c1c:	mov	r1, r9
   20c20:	movwne	r1, #1
   20c24:	ands	r0, r1, r0
   20c28:	str	r0, [sp, #16]
   20c2c:	movwne	r5, #0
   20c30:	cmp	r5, #0
   20c34:	mov	r0, r5
   20c38:	movwne	r0, #1
   20c3c:	cmp	r3, #0
   20c40:	str	r3, [sp, #28]
   20c44:	mov	r1, r3
   20c48:	movwne	r1, #1
   20c4c:	ands	r0, r1, r0
   20c50:	str	r0, [sp, #24]
   20c54:	movwne	r5, #0
   20c58:	str	r5, [sp, #100]	; 0x64
   20c5c:	cmp	r9, #0
   20c60:	movwne	sl, #0
   20c64:	cmp	r7, #0
   20c68:	beq	20c88 <__flatcc_fb_gen_c_json_parser@@Base+0x35f4>
   20c6c:	movw	r1, #41309	; 0xa15d
   20c70:	movt	r1, #4
   20c74:	mov	r0, r4
   20c78:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20c7c:	ldr	r0, [r4, #220]	; 0xdc
   20c80:	add	r0, r0, #1
   20c84:	str	r0, [r4, #220]	; 0xdc
   20c88:	ldr	r0, [sp, #88]	; 0x58
   20c8c:	add	r1, r0, #96	; 0x60
   20c90:	str	r1, [sp, #56]	; 0x38
   20c94:	add	r1, r0, #88	; 0x58
   20c98:	str	r1, [sp, #68]	; 0x44
   20c9c:	add	r1, r0, #48	; 0x30
   20ca0:	str	r1, [sp, #36]	; 0x24
   20ca4:	add	r0, r0, #80	; 0x50
   20ca8:	str	r0, [sp, #52]	; 0x34
   20cac:	clz	r0, r6
   20cb0:	lsr	r0, r0, #5
   20cb4:	str	r0, [sp, #32]
   20cb8:	str	r9, [sp, #20]
   20cbc:	clz	r0, r9
   20cc0:	lsr	r0, r0, #5
   20cc4:	str	r0, [sp, #76]	; 0x4c
   20cc8:	movw	r0, #41168	; 0xa0d0
   20ccc:	movt	r0, #4
   20cd0:	str	r0, [sp, #84]	; 0x54
   20cd4:	str	r0, [sp, #60]	; 0x3c
   20cd8:	b	20e5c <__flatcc_fb_gen_c_json_parser@@Base+0x37c8>
   20cdc:	ldr	r0, [sp, #80]	; 0x50
   20ce0:	cmp	r0, #0
   20ce4:	beq	20d00 <__flatcc_fb_gen_c_json_parser@@Base+0x366c>
   20ce8:	mov	r0, r4
   20cec:	movw	r1, #42770	; 0xa712
   20cf0:	movt	r1, #4
   20cf4:	sub	r2, fp, #256	; 0x100
   20cf8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20cfc:	b	2138c <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   20d00:	ldr	r0, [sp, #28]
   20d04:	cmp	r0, #0
   20d08:	beq	20d44 <__flatcc_fb_gen_c_json_parser@@Base+0x36b0>
   20d0c:	ldr	r0, [sp, #56]	; 0x38
   20d10:	ldrd	r0, [r0]
   20d14:	ldr	r2, [sp, #88]	; 0x58
   20d18:	ldr	r2, [r2, #112]	; 0x70
   20d1c:	ldr	r3, [sp, #24]
   20d20:	cmp	r3, #0
   20d24:	beq	20e10 <__flatcc_fb_gen_c_json_parser@@Base+0x377c>
   20d28:	stm	sp, {r0, r1}
   20d2c:	sub	r0, fp, #256	; 0x100
   20d30:	str	r0, [sp, #8]
   20d34:	mov	r0, r4
   20d38:	movw	r1, #42818	; 0xa742
   20d3c:	movt	r1, #4
   20d40:	b	20e50 <__flatcc_fb_gen_c_json_parser@@Base+0x37bc>
   20d44:	ldr	r0, [sp, #20]
   20d48:	cmp	r0, #0
   20d4c:	beq	20e2c <__flatcc_fb_gen_c_json_parser@@Base+0x3798>
   20d50:	mov	r0, r4
   20d54:	movw	r1, #41666	; 0xa2c2
   20d58:	movt	r1, #4
   20d5c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20d60:	ldr	r0, [r4, #220]	; 0xdc
   20d64:	add	r0, r0, #2
   20d68:	str	r0, [r4, #220]	; 0xdc
   20d6c:	mov	r0, r4
   20d70:	movw	r1, #41734	; 0xa306
   20d74:	movt	r1, #4
   20d78:	sub	r2, fp, #256	; 0x100
   20d7c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20d80:	ldr	r0, [r4, #208]	; 0xd0
   20d84:	ldr	r2, [r0, #160]	; 0xa0
   20d88:	mov	r0, r4
   20d8c:	movw	r1, #41754	; 0xa31a
   20d90:	movt	r1, #4
   20d94:	add	r3, sp, #108	; 0x6c
   20d98:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20d9c:	ldr	r0, [r4, #208]	; 0xd0
   20da0:	ldr	r2, [r0, #160]	; 0xa0
   20da4:	mov	r0, r4
   20da8:	movw	r1, #41783	; 0xa337
   20dac:	movt	r1, #4
   20db0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20db4:	ldr	r0, [r4, #220]	; 0xdc
   20db8:	cmp	r0, #0
   20dbc:	beq	215b8 <__flatcc_fb_gen_c_json_parser@@Base+0x3f24>
   20dc0:	subs	r1, r0, #1
   20dc4:	str	r1, [r4, #220]	; 0xdc
   20dc8:	beq	215b8 <__flatcc_fb_gen_c_json_parser@@Base+0x3f24>
   20dcc:	sub	r0, r0, #2
   20dd0:	str	r0, [r4, #220]	; 0xdc
   20dd4:	ldr	r0, [sp, #56]	; 0x38
   20dd8:	ldrd	r0, [r0]
   20ddc:	ldr	r2, [sp, #88]	; 0x58
   20de0:	ldr	r2, [r2, #112]	; 0x70
   20de4:	ldr	r3, [sp, #16]
   20de8:	cmp	r3, #0
   20dec:	beq	20e38 <__flatcc_fb_gen_c_json_parser@@Base+0x37a4>
   20df0:	stm	sp, {r0, r1}
   20df4:	sub	r0, fp, #256	; 0x100
   20df8:	str	r0, [sp, #8]
   20dfc:	str	r0, [sp, #12]
   20e00:	mov	r0, r4
   20e04:	movw	r1, #43005	; 0xa7fd
   20e08:	movt	r1, #4
   20e0c:	b	20e50 <__flatcc_fb_gen_c_json_parser@@Base+0x37bc>
   20e10:	stm	sp, {r0, r1}
   20e14:	sub	r0, fp, #256	; 0x100
   20e18:	str	r0, [sp, #8]
   20e1c:	mov	r0, r4
   20e20:	movw	r1, #42915	; 0xa7a3
   20e24:	movt	r1, #4
   20e28:	b	20e50 <__flatcc_fb_gen_c_json_parser@@Base+0x37bc>
   20e2c:	cmp	r8, #0
   20e30:	bne	21394 <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   20e34:	b	215d8 <__flatcc_fb_gen_c_json_parser@@Base+0x3f44>
   20e38:	stm	sp, {r0, r1}
   20e3c:	sub	r0, fp, #256	; 0x100
   20e40:	str	r0, [sp, #8]
   20e44:	mov	r0, r4
   20e48:	movw	r1, #43152	; 0xa890
   20e4c:	movt	r1, #4
   20e50:	mov	r3, #0
   20e54:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20e58:	b	2138c <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   20e5c:	cmp	r7, #2
   20e60:	str	r7, [sp, #104]	; 0x68
   20e64:	bne	20f04 <__flatcc_fb_gen_c_json_parser@@Base+0x3870>
   20e68:	ldr	r0, [r4, #220]	; 0xdc
   20e6c:	cmp	r0, #0
   20e70:	beq	214c8 <__flatcc_fb_gen_c_json_parser@@Base+0x3e34>
   20e74:	sub	r0, r0, #1
   20e78:	str	r0, [r4, #220]	; 0xdc
   20e7c:	mov	r0, r4
   20e80:	movw	r1, #41361	; 0xa191
   20e84:	movt	r1, #4
   20e88:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20e8c:	ldr	r0, [r4, #220]	; 0xdc
   20e90:	add	r0, r0, #1
   20e94:	str	r0, [r4, #220]	; 0xdc
   20e98:	ldr	r5, [sp, #88]	; 0x58
   20e9c:	ldr	r0, [r5, #104]	; 0x68
   20ea0:	sub	r1, fp, #256	; 0x100
   20ea4:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   20ea8:	ldr	r0, [r5, #104]	; 0x68
   20eac:	ldrh	r5, [r0, #8]
   20eb0:	mov	r0, r4
   20eb4:	movw	r1, #41383	; 0xa1a7
   20eb8:	movt	r1, #4
   20ebc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20ec0:	cmp	r5, #0
   20ec4:	ldr	r0, [sp, #96]	; 0x60
   20ec8:	movne	r0, #1
   20ecc:	str	r0, [sp, #96]	; 0x60
   20ed0:	clz	r0, r0
   20ed4:	lsr	r9, r0, #5
   20ed8:	ldr	r0, [sp, #76]	; 0x4c
   20edc:	and	r5, r9, r0
   20ee0:	ldr	r0, [sp, #80]	; 0x50
   20ee4:	movweq	r0, #1
   20ee8:	str	r0, [sp, #80]	; 0x50
   20eec:	mov	r8, #0
   20ef0:	mov	r0, #0
   20ef4:	str	r0, [sp, #100]	; 0x64
   20ef8:	mov	sl, #0
   20efc:	mov	r7, #0
   20f00:	b	21114 <__flatcc_fb_gen_c_json_parser@@Base+0x3a80>
   20f04:	ldr	r1, [sp, #96]	; 0x60
   20f08:	orr	r0, r1, sl
   20f0c:	clz	r0, r0
   20f10:	lsr	r5, r0, #5
   20f14:	clz	r9, r1
   20f18:	str	sl, [sp, #72]	; 0x48
   20f1c:	cmp	sl, #0
   20f20:	beq	20f50 <__flatcc_fb_gen_c_json_parser@@Base+0x38bc>
   20f24:	ldr	r6, [sp, #48]	; 0x30
   20f28:	mov	r0, r6
   20f2c:	bl	21648 <__flatcc_fb_gen_c_json_parser@@Base+0x3fb4>
   20f30:	mov	r8, r0
   20f34:	mov	sl, #1
   20f38:	cmp	r6, #5
   20f3c:	str	r0, [sp, #84]	; 0x54
   20f40:	bne	20f58 <__flatcc_fb_gen_c_json_parser@@Base+0x38c4>
   20f44:	movw	r0, #52467	; 0xccf3
   20f48:	movt	r0, #3
   20f4c:	b	20f60 <__flatcc_fb_gen_c_json_parser@@Base+0x38cc>
   20f50:	mov	sl, #0
   20f54:	b	20f64 <__flatcc_fb_gen_c_json_parser@@Base+0x38d0>
   20f58:	mov	r0, r6
   20f5c:	bl	216bc <__flatcc_fb_gen_c_json_parser@@Base+0x4028>
   20f60:	str	r0, [sp, #60]	; 0x3c
   20f64:	ldr	r0, [sp, #76]	; 0x4c
   20f68:	and	r5, r5, r0
   20f6c:	lsr	r9, r9, #5
   20f70:	ldr	r0, [sp, #100]	; 0x64
   20f74:	cmp	r0, #0
   20f78:	beq	20f98 <__flatcc_fb_gen_c_json_parser@@Base+0x3904>
   20f7c:	cmp	r5, #0
   20f80:	beq	20fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x3920>
   20f84:	mov	r0, r4
   20f88:	movw	r1, #41448	; 0xa1e8
   20f8c:	movt	r1, #4
   20f90:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20f94:	b	21008 <__flatcc_fb_gen_c_json_parser@@Base+0x3974>
   20f98:	mov	r8, #0
   20f9c:	cmp	sl, #0
   20fa0:	ldr	sl, [sp, #72]	; 0x48
   20fa4:	bne	21048 <__flatcc_fb_gen_c_json_parser@@Base+0x39b4>
   20fa8:	mov	r0, #0
   20fac:	str	r0, [sp, #100]	; 0x64
   20fb0:	b	20efc <__flatcc_fb_gen_c_json_parser@@Base+0x3868>
   20fb4:	ldr	r0, [sp, #68]	; 0x44
   20fb8:	ldr	r8, [r0]
   20fbc:	ldr	r7, [r0, #4]
   20fc0:	orrs	r3, r8, r7
   20fc4:	mov	r2, r8
   20fc8:	movweq	r2, #1
   20fcc:	movne	r3, r7
   20fd0:	mvn	r0, #0
   20fd4:	mov	r1, #0
   20fd8:	bl	34858 <fb_value_set_visit@@Base+0x6c0>
   20fdc:	ldr	r2, [sp, #88]	; 0x58
   20fe0:	ldrsh	r2, [r2, #74]	; 0x4a
   20fe4:	str	r2, [sp]
   20fe8:	str	r0, [sp, #8]
   20fec:	str	r1, [sp, #12]
   20ff0:	mov	r0, r4
   20ff4:	movw	r1, #41511	; 0xa227
   20ff8:	movt	r1, #4
   20ffc:	mov	r2, r8
   21000:	mov	r3, r7
   21004:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21008:	mov	r0, r4
   2100c:	movw	r1, #41594	; 0xa27a
   21010:	movt	r1, #4
   21014:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21018:	mov	r0, r4
   2101c:	movw	r1, #40791	; 0x9f57
   21020:	movt	r1, #4
   21024:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21028:	ldr	r0, [r4, #220]	; 0xdc
   2102c:	add	r0, r0, #1
   21030:	str	r0, [r4, #220]	; 0xdc
   21034:	mov	r7, #0
   21038:	mov	r8, #1
   2103c:	cmp	sl, #0
   21040:	ldr	sl, [sp, #72]	; 0x48
   21044:	beq	210f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3a5c>
   21048:	mov	r0, r4
   2104c:	movw	r1, #41654	; 0xa2b6
   21050:	movt	r1, #4
   21054:	ldr	r2, [sp, #60]	; 0x3c
   21058:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2105c:	mov	r0, r4
   21060:	movw	r1, #41666	; 0xa2c2
   21064:	movt	r1, #4
   21068:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2106c:	ldr	r0, [r4, #220]	; 0xdc
   21070:	add	r0, r0, #2
   21074:	str	r0, [r4, #220]	; 0xdc
   21078:	ldr	r0, [sp, #40]	; 0x28
   2107c:	cmp	r0, #0
   21080:	beq	21098 <__flatcc_fb_gen_c_json_parser@@Base+0x3a04>
   21084:	mov	r0, r4
   21088:	movw	r1, #41734	; 0xa306
   2108c:	movt	r1, #4
   21090:	sub	r2, fp, #256	; 0x100
   21094:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21098:	ldr	r0, [r4, #208]	; 0xd0
   2109c:	ldr	r2, [r0, #160]	; 0xa0
   210a0:	mov	r0, r4
   210a4:	movw	r1, #41754	; 0xa31a
   210a8:	movt	r1, #4
   210ac:	add	r3, sp, #108	; 0x6c
   210b0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   210b4:	ldr	r0, [r4, #208]	; 0xd0
   210b8:	ldr	r2, [r0, #160]	; 0xa0
   210bc:	mov	r0, r4
   210c0:	movw	r1, #41783	; 0xa337
   210c4:	movt	r1, #4
   210c8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   210cc:	ldr	r0, [r4, #220]	; 0xdc
   210d0:	cmp	r0, #0
   210d4:	beq	214e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3e54>
   210d8:	subs	r1, r0, #1
   210dc:	str	r1, [r4, #220]	; 0xdc
   210e0:	beq	214e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3e54>
   210e4:	sub	r0, r0, #2
   210e8:	str	r0, [r4, #220]	; 0xdc
   210ec:	mov	r7, #1
   210f0:	ldr	r0, [sp, #100]	; 0x64
   210f4:	clz	r0, r0
   210f8:	lsr	r0, r0, #5
   210fc:	orrs	r0, r5, r0
   21100:	bne	21114 <__flatcc_fb_gen_c_json_parser@@Base+0x3a80>
   21104:	mov	r0, r4
   21108:	movw	r1, #41816	; 0xa358
   2110c:	movt	r1, #4
   21110:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21114:	ldr	r0, [sp, #92]	; 0x5c
   21118:	cmp	r0, #1
   2111c:	bne	21138 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa4>
   21120:	ldr	r0, [sp, #52]	; 0x34
   21124:	ldrd	r2, [r0]
   21128:	mov	r0, r4
   2112c:	movw	r1, #41886	; 0xa39e
   21130:	movt	r1, #4
   21134:	b	21168 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad4>
   21138:	orrs	r0, r8, r9
   2113c:	bne	2116c <__flatcc_fb_gen_c_json_parser@@Base+0x3ad8>
   21140:	ldr	r0, [sp, #56]	; 0x38
   21144:	ldrd	r2, [r0]
   21148:	ldr	r0, [sp, #68]	; 0x44
   2114c:	ldrd	r0, [r0]
   21150:	ldr	r6, [sp, #88]	; 0x58
   21154:	ldrh	r6, [r6, #74]	; 0x4a
   21158:	stm	sp, {r0, r1, r6}
   2115c:	mov	r0, r4
   21160:	movw	r1, #41931	; 0xa3cb
   21164:	movt	r1, #4
   21168:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2116c:	cmp	r7, #0
   21170:	beq	21258 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc4>
   21174:	mov	r6, r5
   21178:	mov	r0, r4
   2117c:	movw	r1, #42010	; 0xa41a
   21180:	movt	r1, #4
   21184:	ldr	r5, [sp, #84]	; 0x54
   21188:	mov	r2, r5
   2118c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21190:	mov	r0, r4
   21194:	movw	r1, #42069	; 0xa455
   21198:	movt	r1, #4
   2119c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   211a0:	ldr	r0, [r4, #220]	; 0xdc
   211a4:	add	r0, r0, #1
   211a8:	str	r0, [r4, #220]	; 0xdc
   211ac:	mov	r0, r4
   211b0:	movw	r1, #42088	; 0xa468
   211b4:	movt	r1, #4
   211b8:	mov	r2, r5
   211bc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   211c0:	mov	r0, r4
   211c4:	movw	r1, #42174	; 0xa4be
   211c8:	movt	r1, #4
   211cc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   211d0:	ldr	r0, [r4, #220]	; 0xdc
   211d4:	cmp	r0, #0
   211d8:	beq	21508 <__flatcc_fb_gen_c_json_parser@@Base+0x3e74>
   211dc:	sub	r0, r0, #1
   211e0:	str	r0, [r4, #220]	; 0xdc
   211e4:	mov	r0, r4
   211e8:	movw	r1, #35313	; 0x89f1
   211ec:	movt	r1, #3
   211f0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   211f4:	ldr	r0, [sp, #92]	; 0x5c
   211f8:	sub	r0, r0, #1
   211fc:	clz	r0, r0
   21200:	lsr	r0, r0, #5
   21204:	orr	r5, r0, r8
   21208:	ldr	r0, [sp, #64]	; 0x40
   2120c:	cmp	r0, #0
   21210:	ldr	r9, [sp, #104]	; 0x68
   21214:	cmpeq	r5, #0
   21218:	bne	21334 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca0>
   2121c:	ldr	r0, [sp, #88]	; 0x58
   21220:	ldrh	r0, [r0, #56]	; 0x38
   21224:	sub	r1, r0, #5
   21228:	cmp	r1, #2
   2122c:	bcc	212c8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c34>
   21230:	cmp	r0, #3
   21234:	beq	212e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c4c>
   21238:	cmp	r0, #4
   2123c:	bne	21568 <__flatcc_fb_gen_c_json_parser@@Base+0x3ed4>
   21240:	ldr	r0, [sp, #36]	; 0x24
   21244:	ldrd	r2, [r0]
   21248:	mov	r0, r4
   2124c:	movw	r1, #42286	; 0xa52e
   21250:	movt	r1, #4
   21254:	b	212f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c64>
   21258:	cmp	r9, #0
   2125c:	beq	21280 <__flatcc_fb_gen_c_json_parser@@Base+0x3bec>
   21260:	ldr	r0, [sp, #44]	; 0x2c
   21264:	cmp	r0, #0
   21268:	ldr	r9, [sp, #104]	; 0x68
   2126c:	beq	212a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c10>
   21270:	mov	r0, r4
   21274:	movw	r1, #42633	; 0xa689
   21278:	movt	r1, #4
   2127c:	b	21388 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf4>
   21280:	mov	r0, r4
   21284:	movw	r1, #42577	; 0xa651
   21288:	movt	r1, #4
   2128c:	sub	r2, fp, #256	; 0x100
   21290:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21294:	cmp	r8, #0
   21298:	ldr	r9, [sp, #104]	; 0x68
   2129c:	bne	21394 <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   212a0:	b	21414 <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   212a4:	ldr	r0, [sp, #64]	; 0x40
   212a8:	cmp	r0, #0
   212ac:	beq	20cdc <__flatcc_fb_gen_c_json_parser@@Base+0x3648>
   212b0:	mov	r0, r4
   212b4:	movw	r1, #42693	; 0xa6c5
   212b8:	movt	r1, #4
   212bc:	ldr	r2, [sp, #32]
   212c0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   212c4:	b	2138c <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   212c8:	ldr	r0, [sp, #36]	; 0x24
   212cc:	ldrd	r2, [r0]
   212d0:	mov	r0, r4
   212d4:	movw	r1, #42218	; 0xa4ea
   212d8:	movt	r1, #4
   212dc:	b	212f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c64>
   212e0:	ldr	r0, [sp, #36]	; 0x24
   212e4:	vldr	d16, [r0]
   212e8:	vmov	r2, r3, d16
   212ec:	mov	r0, r4
   212f0:	movw	r1, #42354	; 0xa572
   212f4:	movt	r1, #4
   212f8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   212fc:	ldr	r0, [r4, #220]	; 0xdc
   21300:	add	r0, r0, #1
   21304:	str	r0, [r4, #220]	; 0xdc
   21308:	ldr	r0, [sp, #56]	; 0x38
   2130c:	ldrd	r2, [r0]
   21310:	ldr	r0, [sp, #68]	; 0x44
   21314:	ldrd	r0, [r0]
   21318:	ldr	r7, [sp, #88]	; 0x58
   2131c:	ldrsh	r7, [r7, #74]	; 0x4a
   21320:	stm	sp, {r0, r1, r7}
   21324:	mov	r0, r4
   21328:	movw	r1, #42468	; 0xa5e4
   2132c:	movt	r1, #4
   21330:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21334:	mov	r0, r4
   21338:	movw	r1, #42548	; 0xa634
   2133c:	movt	r1, #4
   21340:	mov	r2, r4
   21344:	ldr	r3, [sp, #84]	; 0x54
   21348:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2134c:	cmp	r5, #0
   21350:	beq	21364 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd0>
   21354:	cmp	r8, #0
   21358:	mov	r5, r6
   2135c:	bne	21394 <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   21360:	b	21414 <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   21364:	ldr	r0, [r4, #220]	; 0xdc
   21368:	cmp	r0, #0
   2136c:	beq	21548 <__flatcc_fb_gen_c_json_parser@@Base+0x3eb4>
   21370:	mov	r5, r6
   21374:	sub	r0, r0, #1
   21378:	str	r0, [r4, #220]	; 0xdc
   2137c:	mov	r0, r4
   21380:	movw	r1, #35313	; 0x89f1
   21384:	movt	r1, #3
   21388:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2138c:	cmp	r8, #0
   21390:	beq	21414 <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   21394:	cmp	r5, #0
   21398:	beq	213bc <__flatcc_fb_gen_c_json_parser@@Base+0x3d28>
   2139c:	mov	r0, r4
   213a0:	movw	r1, #43314	; 0xa932
   213a4:	movt	r1, #4
   213a8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   213ac:	mov	r0, r4
   213b0:	movw	r1, #43399	; 0xa987
   213b4:	movt	r1, #4
   213b8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   213bc:	mov	r0, r4
   213c0:	movw	r1, #43412	; 0xa994
   213c4:	movt	r1, #4
   213c8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   213cc:	ldr	r0, [r4, #220]	; 0xdc
   213d0:	cmp	r0, #0
   213d4:	beq	21528 <__flatcc_fb_gen_c_json_parser@@Base+0x3e94>
   213d8:	sub	r0, r0, #1
   213dc:	str	r0, [r4, #220]	; 0xdc
   213e0:	mov	r0, r4
   213e4:	movw	r1, #35313	; 0x89f1
   213e8:	movt	r1, #3
   213ec:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   213f0:	mov	r0, r4
   213f4:	cmp	r5, #0
   213f8:	beq	21408 <__flatcc_fb_gen_c_json_parser@@Base+0x3d74>
   213fc:	movw	r1, #43470	; 0xa9ce
   21400:	movt	r1, #4
   21404:	b	21410 <__flatcc_fb_gen_c_json_parser@@Base+0x3d7c>
   21408:	movw	r1, #43520	; 0xaa00
   2140c:	movt	r1, #4
   21410:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21414:	mov	r7, #2
   21418:	cmp	r9, #1
   2141c:	beq	20e5c <__flatcc_fb_gen_c_json_parser@@Base+0x37c8>
   21420:	cmp	r9, #2
   21424:	bne	2146c <__flatcc_fb_gen_c_json_parser@@Base+0x3dd8>
   21428:	movw	r1, #43563	; 0xaa2b
   2142c:	movt	r1, #4
   21430:	mov	r0, r4
   21434:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21438:	movw	r1, #43586	; 0xaa42
   2143c:	movt	r1, #4
   21440:	mov	r0, r4
   21444:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21448:	ldr	r0, [r4, #220]	; 0xdc
   2144c:	cmp	r0, #0
   21450:	beq	21628 <__flatcc_fb_gen_c_json_parser@@Base+0x3f94>
   21454:	sub	r0, r0, #1
   21458:	str	r0, [r4, #220]	; 0xdc
   2145c:	movw	r1, #43634	; 0xaa72
   21460:	movt	r1, #4
   21464:	mov	r0, r4
   21468:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2146c:	ldr	r0, [sp, #44]	; 0x2c
   21470:	ldr	r1, [sp, #64]	; 0x40
   21474:	orr	r0, r1, r0
   21478:	orr	r0, r0, r9
   2147c:	ldr	r1, [sp, #100]	; 0x64
   21480:	orr	r0, r0, r1
   21484:	ldr	r1, [sp, #80]	; 0x50
   21488:	orrs	r0, r0, r1
   2148c:	beq	214b8 <__flatcc_fb_gen_c_json_parser@@Base+0x3e24>
   21490:	ldr	r0, [sp, #88]	; 0x58
   21494:	ldrd	r2, [r0, #96]	; 0x60
   21498:	movw	r1, #43653	; 0xaa85
   2149c:	movt	r1, #4
   214a0:	mov	r0, r4
   214a4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   214a8:	movw	r1, #43399	; 0xa987
   214ac:	movt	r1, #4
   214b0:	mov	r0, r4
   214b4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   214b8:	sub	sp, fp, #28
   214bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   214c0:	mov	r0, #0
   214c4:	b	20a68 <__flatcc_fb_gen_c_json_parser@@Base+0x33d4>
   214c8:	movw	r0, #36960	; 0x9060
   214cc:	movt	r0, #4
   214d0:	movw	r1, #36972	; 0x906c
   214d4:	movt	r1, #4
   214d8:	movw	r3, #41231	; 0xa10f
   214dc:	movt	r3, #4
   214e0:	movw	r2, #490	; 0x1ea
   214e4:	bl	14a80 <__assert_fail@plt>
   214e8:	movw	r0, #36960	; 0x9060
   214ec:	movt	r0, #4
   214f0:	movw	r1, #36972	; 0x906c
   214f4:	movt	r1, #4
   214f8:	movw	r3, #41231	; 0xa10f
   214fc:	movt	r3, #4
   21500:	movw	r2, #539	; 0x21b
   21504:	bl	14a80 <__assert_fail@plt>
   21508:	movw	r0, #36960	; 0x9060
   2150c:	movt	r0, #4
   21510:	movw	r1, #36972	; 0x906c
   21514:	movt	r1, #4
   21518:	movw	r3, #41231	; 0xa10f
   2151c:	movt	r3, #4
   21520:	movw	r2, #559	; 0x22f
   21524:	bl	14a80 <__assert_fail@plt>
   21528:	movw	r0, #36960	; 0x9060
   2152c:	movt	r0, #4
   21530:	movw	r1, #36972	; 0x906c
   21534:	movt	r1, #4
   21538:	movw	r3, #41231	; 0xa10f
   2153c:	movt	r3, #4
   21540:	movw	r2, #647	; 0x287
   21544:	bl	14a80 <__assert_fail@plt>
   21548:	movw	r0, #36960	; 0x9060
   2154c:	movt	r0, #4
   21550:	movw	r1, #36972	; 0x906c
   21554:	movt	r1, #4
   21558:	movw	r3, #41231	; 0xa10f
   2155c:	movt	r3, #4
   21560:	movw	r2, #602	; 0x25a
   21564:	bl	14a80 <__assert_fail@plt>
   21568:	movw	r0, #8368	; 0x20b0
   2156c:	movt	r0, #6
   21570:	ldr	r0, [r0]
   21574:	movw	r1, #42421	; 0xa5b5
   21578:	movt	r1, #4
   2157c:	str	r1, [sp]
   21580:	movw	r1, #25975	; 0x6577
   21584:	movt	r1, #3
   21588:	movw	r4, #36972	; 0x906c
   2158c:	movt	r4, #4
   21590:	mov	r2, r4
   21594:	movw	r3, #590	; 0x24e
   21598:	bl	149c0 <fprintf@plt>
   2159c:	movw	r0, #29885	; 0x74bd
   215a0:	movt	r0, #4
   215a4:	movw	r3, #41231	; 0xa10f
   215a8:	movt	r3, #4
   215ac:	mov	r1, r4
   215b0:	movw	r2, #590	; 0x24e
   215b4:	bl	14a80 <__assert_fail@plt>
   215b8:	movw	r0, #36960	; 0x9060
   215bc:	movt	r0, #4
   215c0:	movw	r1, #36972	; 0x906c
   215c4:	movt	r1, #4
   215c8:	movw	r3, #41231	; 0xa10f
   215cc:	movt	r3, #4
   215d0:	movw	r2, #627	; 0x273
   215d4:	bl	14a80 <__assert_fail@plt>
   215d8:	movw	r0, #8368	; 0x20b0
   215dc:	movt	r0, #6
   215e0:	ldr	r0, [r0]
   215e4:	movw	r1, #43265	; 0xa901
   215e8:	movt	r1, #4
   215ec:	str	r1, [sp]
   215f0:	movw	r1, #25975	; 0x6577
   215f4:	movt	r1, #3
   215f8:	movw	r4, #36972	; 0x906c
   215fc:	movt	r4, #4
   21600:	mov	r2, r4
   21604:	mov	r3, #636	; 0x27c
   21608:	bl	149c0 <fprintf@plt>
   2160c:	movw	r0, #29885	; 0x74bd
   21610:	movt	r0, #4
   21614:	movw	r3, #41231	; 0xa10f
   21618:	movt	r3, #4
   2161c:	mov	r1, r4
   21620:	mov	r2, #636	; 0x27c
   21624:	bl	14a80 <__assert_fail@plt>
   21628:	movw	r0, #36960	; 0x9060
   2162c:	movt	r0, #4
   21630:	movw	r1, #36972	; 0x906c
   21634:	movt	r1, #4
   21638:	movw	r3, #41231	; 0xa10f
   2163c:	movt	r3, #4
   21640:	movw	r2, #661	; 0x295
   21644:	bl	14a80 <__assert_fail@plt>
   21648:	sub	r0, r0, #1
   2164c:	cmp	r0, #11
   21650:	movwcc	r1, #46544	; 0xb5d0
   21654:	movtcc	r1, #4
   21658:	ldrcc	r0, [r1, r0, lsl #2]
   2165c:	bxcc	lr
   21660:	push	{r4, sl, fp, lr}
   21664:	add	fp, sp, #8
   21668:	sub	sp, sp, #8
   2166c:	movw	r0, #8368	; 0x20b0
   21670:	movt	r0, #6
   21674:	ldr	r0, [r0]
   21678:	movw	r1, #52568	; 0xcd58
   2167c:	movt	r1, #3
   21680:	str	r1, [sp]
   21684:	movw	r1, #25975	; 0x6577
   21688:	movt	r1, #3
   2168c:	movw	r4, #52495	; 0xcd0f
   21690:	movt	r4, #3
   21694:	mov	r2, r4
   21698:	mov	r3, #96	; 0x60
   2169c:	bl	149c0 <fprintf@plt>
   216a0:	movw	r0, #29885	; 0x74bd
   216a4:	movt	r0, #4
   216a8:	movw	r3, #54920	; 0xd688
   216ac:	movt	r3, #3
   216b0:	mov	r1, r4
   216b4:	mov	r2, #96	; 0x60
   216b8:	bl	14a80 <__assert_fail@plt>
   216bc:	sub	r0, r0, #1
   216c0:	cmp	r0, #11
   216c4:	movwcc	r1, #46592	; 0xb600
   216c8:	movtcc	r1, #4
   216cc:	ldrcc	r0, [r1, r0, lsl #2]
   216d0:	bxcc	lr
   216d4:	push	{r4, sl, fp, lr}
   216d8:	add	fp, sp, #8
   216dc:	sub	sp, sp, #8
   216e0:	movw	r0, #8368	; 0x20b0
   216e4:	movt	r0, #6
   216e8:	ldr	r0, [r0]
   216ec:	movw	r1, #52568	; 0xcd58
   216f0:	movt	r1, #3
   216f4:	str	r1, [sp]
   216f8:	movw	r1, #25975	; 0x6577
   216fc:	movt	r1, #3
   21700:	movw	r4, #52495	; 0xcd0f
   21704:	movt	r4, #3
   21708:	mov	r2, r4
   2170c:	mov	r3, #141	; 0x8d
   21710:	bl	149c0 <fprintf@plt>
   21714:	movw	r0, #29885	; 0x74bd
   21718:	movt	r0, #4
   2171c:	movw	r3, #52623	; 0xcd8f
   21720:	movt	r3, #3
   21724:	mov	r1, r4
   21728:	mov	r2, #141	; 0x8d
   2172c:	bl	14a80 <__assert_fail@plt>
   21730:	push	{r4, r5, r6, sl, fp, lr}
   21734:	add	fp, sp, #16
   21738:	sub	sp, sp, #16
   2173c:	mov	r6, r2
   21740:	mov	r4, #0
   21744:	str	r4, [sp]
   21748:	stmib	sp, {r0, r4}
   2174c:	add	r5, r1, #4
   21750:	movw	r1, #6256	; 0x1870
   21754:	movt	r1, #2
   21758:	mov	r2, sp
   2175c:	mov	r0, r5
   21760:	bl	26ba8 <fb_symbol_table_visit@@Base>
   21764:	ldr	r0, [sp]
   21768:	str	r0, [r6]
   2176c:	cmp	r0, #0
   21770:	beq	217bc <__flatcc_fb_gen_c_json_parser@@Base+0x4128>
   21774:	lsl	r0, r0, #4
   21778:	bl	1496c <malloc@plt>
   2177c:	cmp	r0, #0
   21780:	beq	217bc <__flatcc_fb_gen_c_json_parser@@Base+0x4128>
   21784:	mov	r6, r0
   21788:	str	r0, [sp, #8]
   2178c:	movw	r1, #6296	; 0x1898
   21790:	movt	r1, #2
   21794:	mov	r2, sp
   21798:	mov	r0, r5
   2179c:	bl	26ba8 <fb_symbol_table_visit@@Base>
   217a0:	ldr	r1, [sp]
   217a4:	movw	r3, #272	; 0x110
   217a8:	movt	r3, #2
   217ac:	mov	r0, r6
   217b0:	mov	r2, #16
   217b4:	bl	14a44 <qsort@plt>
   217b8:	mov	r4, r6
   217bc:	mov	r0, r4
   217c0:	sub	sp, fp, #16
   217c4:	pop	{r4, r5, r6, sl, fp, pc}
   217c8:	push	{r4, r5, fp, lr}
   217cc:	add	fp, sp, #8
   217d0:	mov	r5, r2
   217d4:	mov	r4, r0
   217d8:	ldr	r2, [fp, #8]
   217dc:	movw	r1, #45412	; 0xb164
   217e0:	movt	r1, #4
   217e4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   217e8:	movw	r1, #39609	; 0x9ab9
   217ec:	movt	r1, #4
   217f0:	mov	r0, r4
   217f4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   217f8:	ldr	r0, [r4, #220]	; 0xdc
   217fc:	add	r0, r0, #1
   21800:	str	r0, [r4, #220]	; 0xdc
   21804:	mov	r0, r4
   21808:	mov	r1, r5
   2180c:	bl	21934 <__flatcc_fb_gen_c_json_parser@@Base+0x42a0>
   21810:	ldr	r0, [r4, #220]	; 0xdc
   21814:	cmp	r0, #0
   21818:	beq	21844 <__flatcc_fb_gen_c_json_parser@@Base+0x41b0>
   2181c:	sub	r0, r0, #1
   21820:	str	r0, [r4, #220]	; 0xdc
   21824:	movw	r1, #38800	; 0x9790
   21828:	movt	r1, #4
   2182c:	mov	r0, r4
   21830:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21834:	ldr	r0, [r4, #220]	; 0xdc
   21838:	add	r0, r0, #1
   2183c:	str	r0, [r4, #220]	; 0xdc
   21840:	pop	{r4, r5, fp, pc}
   21844:	movw	r0, #36960	; 0x9060
   21848:	movt	r0, #4
   2184c:	movw	r1, #36972	; 0x906c
   21850:	movt	r1, #4
   21854:	movw	r3, #45478	; 0xb1a6
   21858:	movt	r3, #4
   2185c:	movw	r2, #742	; 0x2e6
   21860:	bl	14a80 <__assert_fail@plt>
   21864:	movw	r1, #39900	; 0x9bdc
   21868:	movt	r1, #4
   2186c:	b	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21870:	push	{r4, sl, fp, lr}
   21874:	add	fp, sp, #8
   21878:	mov	r4, r0
   2187c:	ldr	r0, [r0, #4]
   21880:	bl	218e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4250>
   21884:	cmp	r0, #0
   21888:	ldrne	r0, [r4]
   2188c:	addne	r0, r0, #1
   21890:	strne	r0, [r4]
   21894:	pop	{r4, sl, fp, pc}
   21898:	push	{r4, r5, fp, lr}
   2189c:	add	fp, sp, #8
   218a0:	mov	r5, r1
   218a4:	mov	r4, r0
   218a8:	ldr	r0, [r0, #4]
   218ac:	bl	218e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4250>
   218b0:	cmp	r0, #0
   218b4:	popeq	{r4, r5, fp, pc}
   218b8:	ldr	r0, [r4, #8]
   218bc:	ldr	r1, [r5, #4]
   218c0:	ldr	r1, [r1]
   218c4:	str	r1, [r0]
   218c8:	ldr	r0, [r5, #4]
   218cc:	ldr	r0, [r0, #4]
   218d0:	ldr	r1, [r4, #8]
   218d4:	stmib	r1, {r0, r5}
   218d8:	add	r0, r1, #16
   218dc:	str	r0, [r4, #8]
   218e0:	pop	{r4, r5, fp, pc}
   218e4:	push	{r4, sl, fp, lr}
   218e8:	add	fp, sp, #8
   218ec:	mov	r4, r1
   218f0:	ldrh	r1, [r1, #8]
   218f4:	sub	r1, r1, #3
   218f8:	cmp	r1, #1
   218fc:	movhi	r0, #0
   21900:	pophi	{r4, sl, fp, pc}
   21904:	ldr	r1, [r4, #16]
   21908:	add	r0, r0, #172	; 0xac
   2190c:	bl	2191c <__flatcc_fb_gen_c_json_parser@@Base+0x4288>
   21910:	cmp	r0, #0
   21914:	movne	r0, r4
   21918:	pop	{r4, sl, fp, pc}
   2191c:	push	{fp, lr}
   21920:	mov	fp, sp
   21924:	bl	264a4 <ptr_set_find_item@@Base>
   21928:	cmp	r0, #0
   2192c:	movwne	r0, #1
   21930:	pop	{fp, pc}
   21934:	push	{r4, r5, r6, sl, fp, lr}
   21938:	add	fp, sp, #16
   2193c:	sub	sp, sp, #224	; 0xe0
   21940:	mov	r4, r0
   21944:	ldrh	r0, [r1, #8]
   21948:	sub	r0, r0, #3
   2194c:	uxth	r0, r0
   21950:	cmp	r0, #2
   21954:	bcs	21998 <__flatcc_fb_gen_c_json_parser@@Base+0x4304>
   21958:	mov	r5, r1
   2195c:	mov	r6, sp
   21960:	mov	r0, r6
   21964:	mov	r1, #0
   21968:	mov	r2, #220	; 0xdc
   2196c:	bl	149d8 <memset@plt>
   21970:	mov	r0, r5
   21974:	mov	r1, r6
   21978:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   2197c:	movw	r1, #45633	; 0xb241
   21980:	movt	r1, #4
   21984:	mov	r0, r4
   21988:	mov	r2, r6
   2198c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21990:	sub	sp, fp, #16
   21994:	pop	{r4, r5, r6, sl, fp, pc}
   21998:	movw	r0, #51677	; 0xc9dd
   2199c:	movt	r0, #3
   219a0:	movw	r1, #36972	; 0x906c
   219a4:	movt	r1, #4
   219a8:	movw	r3, #45554	; 0xb1f2
   219ac:	movt	r3, #4
   219b0:	movw	r2, #729	; 0x2d9
   219b4:	bl	14a80 <__assert_fail@plt>
   219b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   219bc:	add	fp, sp, #24
   219c0:	mov	r8, r2
   219c4:	mov	r4, r0
   219c8:	mov	r0, #0
   219cc:	vmov.i32	q8, #0	; 0x00000000
   219d0:	mov	r2, #1
   219d4:	str	r2, [r4]
   219d8:	str	r0, [r4, #36]	; 0x24
   219dc:	str	r1, [r4, #40]	; 0x28
   219e0:	add	r0, r4, #20
   219e4:	vst1.32	{d16-d17}, [r0]
   219e8:	add	r0, r4, #4
   219ec:	vst1.32	{d16-d17}, [r0]
   219f0:	movw	r1, #7124	; 0x1bd4
   219f4:	movt	r1, #2
   219f8:	mov	r0, r8
   219fc:	mov	r2, r4
   21a00:	bl	2719c <fb_scope_table_visit@@Base>
   21a04:	ldr	r5, [r4, #4]
   21a08:	mov	r0, r5
   21a0c:	mov	r1, #8
   21a10:	bl	148d0 <calloc@plt>
   21a14:	str	r0, [r4, #16]
   21a18:	ldr	r7, [r4, #8]
   21a1c:	mov	r0, r7
   21a20:	mov	r1, #8
   21a24:	bl	148d0 <calloc@plt>
   21a28:	str	r0, [r4, #20]
   21a2c:	ldr	r6, [r4, #12]
   21a30:	mov	r0, r6
   21a34:	bl	1496c <malloc@plt>
   21a38:	ldr	r1, [r4, #16]
   21a3c:	ldr	r2, [r4, #20]
   21a40:	add	r3, r4, #24
   21a44:	stm	r3, {r0, r1, r2}
   21a48:	str	r0, [r4, #36]	; 0x24
   21a4c:	cmp	r5, #1
   21a50:	blt	21a5c <__flatcc_fb_gen_c_json_parser@@Base+0x43c8>
   21a54:	cmp	r1, #0
   21a58:	beq	21a80 <__flatcc_fb_gen_c_json_parser@@Base+0x43ec>
   21a5c:	cmp	r7, #1
   21a60:	blt	21a70 <__flatcc_fb_gen_c_json_parser@@Base+0x43dc>
   21a64:	ldr	r1, [r4, #20]
   21a68:	cmp	r1, #0
   21a6c:	beq	21a80 <__flatcc_fb_gen_c_json_parser@@Base+0x43ec>
   21a70:	cmp	r6, #0
   21a74:	beq	21a90 <__flatcc_fb_gen_c_json_parser@@Base+0x43fc>
   21a78:	cmp	r0, #0
   21a7c:	bne	21a90 <__flatcc_fb_gen_c_json_parser@@Base+0x43fc>
   21a80:	mov	r0, r4
   21a84:	bl	21b7c <__flatcc_fb_gen_c_json_parser@@Base+0x44e8>
   21a88:	mvn	r0, #0
   21a8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21a90:	movw	r1, #7144	; 0x1be8
   21a94:	movt	r1, #2
   21a98:	mov	r0, r8
   21a9c:	mov	r2, r4
   21aa0:	bl	2719c <fb_scope_table_visit@@Base>
   21aa4:	ldr	r1, [r4, #4]
   21aa8:	ldr	r0, [r4, #16]
   21aac:	bl	21bfc <__flatcc_fb_gen_c_json_parser@@Base+0x4568>
   21ab0:	ldr	r1, [r4, #8]
   21ab4:	ldr	r0, [r4, #20]
   21ab8:	bl	21bfc <__flatcc_fb_gen_c_json_parser@@Base+0x4568>
   21abc:	mov	r0, #0
   21ac0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21ac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ac8:	add	fp, sp, #28
   21acc:	sub	sp, sp, #4
   21ad0:	mov	r5, r0
   21ad4:	ldr	r0, [r0, #8]
   21ad8:	str	r0, [r1]
   21adc:	mov	r7, #0
   21ae0:	cmp	r0, #0
   21ae4:	beq	21b70 <__flatcc_fb_gen_c_json_parser@@Base+0x44dc>
   21ae8:	mov	r8, r1
   21aec:	lsl	r0, r0, #4
   21af0:	bl	1496c <malloc@plt>
   21af4:	cmp	r0, #0
   21af8:	beq	21b70 <__flatcc_fb_gen_c_json_parser@@Base+0x44dc>
   21afc:	mov	r9, r0
   21b00:	ldr	r1, [r5, #8]
   21b04:	cmp	r1, #1
   21b08:	blt	21b50 <__flatcc_fb_gen_c_json_parser@@Base+0x44bc>
   21b0c:	add	r7, r9, #8
   21b10:	mov	sl, #0
   21b14:	mov	r6, #0
   21b18:	ldr	r4, [r5, #20]
   21b1c:	add	r0, r4, r6, lsl #3
   21b20:	ldr	r1, [r0, #4]
   21b24:	str	r1, [r7, #-8]
   21b28:	ldr	r0, [r0, #4]
   21b2c:	bl	149a8 <strlen@plt>
   21b30:	str	r0, [r7, #-4]
   21b34:	ldr	r0, [r4, r6, lsl #3]
   21b38:	stm	r7, {r0, sl}
   21b3c:	add	r7, r7, #16
   21b40:	add	r6, r6, #1
   21b44:	ldr	r1, [r5, #8]
   21b48:	cmp	r6, r1
   21b4c:	blt	21b18 <__flatcc_fb_gen_c_json_parser@@Base+0x4484>
   21b50:	movw	r3, #272	; 0x110
   21b54:	movt	r3, #2
   21b58:	mov	r0, r9
   21b5c:	mov	r2, #16
   21b60:	bl	14a44 <qsort@plt>
   21b64:	ldr	r0, [r5, #8]
   21b68:	str	r0, [r8]
   21b6c:	mov	r7, r9
   21b70:	mov	r0, r7
   21b74:	sub	sp, fp, #28
   21b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b7c:	push	{r4, sl, fp, lr}
   21b80:	add	fp, sp, #8
   21b84:	mov	r4, r0
   21b88:	ldr	r0, [r0, #16]
   21b8c:	cmp	r0, #0
   21b90:	beq	21b98 <__flatcc_fb_gen_c_json_parser@@Base+0x4504>
   21b94:	bl	14900 <free@plt>
   21b98:	ldr	r0, [r4, #20]
   21b9c:	cmp	r0, #0
   21ba0:	beq	21ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x4514>
   21ba4:	bl	14900 <free@plt>
   21ba8:	ldr	r0, [r4, #24]
   21bac:	cmp	r0, #0
   21bb0:	beq	21bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x4524>
   21bb4:	bl	14900 <free@plt>
   21bb8:	vmov.i32	q8, #0	; 0x00000000
   21bbc:	mov	r0, #28
   21bc0:	add	r1, r4, #16
   21bc4:	vst1.32	{d16-d17}, [r4], r0
   21bc8:	vst1.32	{d16-d17}, [r4]
   21bcc:	vst1.32	{d16-d17}, [r1]
   21bd0:	pop	{r4, sl, fp, pc}
   21bd4:	mov	r2, r0
   21bd8:	add	r0, r1, #4
   21bdc:	movw	r1, #7232	; 0x1c40
   21be0:	movt	r1, #2
   21be4:	b	26ba8 <fb_symbol_table_visit@@Base>
   21be8:	mov	r2, r0
   21bec:	add	r0, r1, #4
   21bf0:	movw	r1, #7468	; 0x1d2c
   21bf4:	movt	r1, #2
   21bf8:	b	26ba8 <fb_symbol_table_visit@@Base>
   21bfc:	push	{r4, r5, fp, lr}
   21c00:	add	fp, sp, #8
   21c04:	mov	r4, r1
   21c08:	mov	r5, r0
   21c0c:	movw	r3, #7716	; 0x1e24
   21c10:	movt	r3, #2
   21c14:	mov	r2, #8
   21c18:	bl	14a44 <qsort@plt>
   21c1c:	cmp	r4, #1
   21c20:	poplt	{r4, r5, fp, pc}
   21c24:	mov	r0, #0
   21c28:	ldr	r1, [r5, r0, lsl #3]
   21c2c:	str	r0, [r1, #124]	; 0x7c
   21c30:	add	r0, r0, #1
   21c34:	cmp	r4, r0
   21c38:	bne	21c28 <__flatcc_fb_gen_c_json_parser@@Base+0x4594>
   21c3c:	pop	{r4, r5, fp, pc}
   21c40:	push	{r4, r5, fp, lr}
   21c44:	add	fp, sp, #8
   21c48:	mov	r5, r1
   21c4c:	mov	r4, r0
   21c50:	ldr	r0, [r0, #40]	; 0x28
   21c54:	bl	21cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x4664>
   21c58:	cmp	r0, #0
   21c5c:	popeq	{r4, r5, fp, pc}
   21c60:	ldr	r2, [r4]
   21c64:	mov	r1, #1
   21c68:	cmp	r2, #0
   21c6c:	beq	21ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x4614>
   21c70:	ldr	r0, [r0, #12]
   21c74:	ldr	r0, [r0]
   21c78:	cmp	r0, #0
   21c7c:	beq	21ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x4614>
   21c80:	mov	r1, #0
   21c84:	ldr	r2, [r0]
   21c88:	ldr	r0, [r0, #4]
   21c8c:	ldr	r0, [r0, #4]
   21c90:	add	r0, r1, r0
   21c94:	add	r1, r0, #1
   21c98:	cmp	r2, #0
   21c9c:	mov	r0, r2
   21ca0:	bne	21c84 <__flatcc_fb_gen_c_json_parser@@Base+0x45f0>
   21ca4:	add	r1, r1, #1
   21ca8:	ldr	r0, [r5, #4]
   21cac:	ldr	r0, [r0, #4]
   21cb0:	add	r0, r1, r0
   21cb4:	ldr	r1, [r4, #12]
   21cb8:	add	r0, r0, r1
   21cbc:	str	r0, [r4, #12]
   21cc0:	ldrh	r0, [r5, #8]
   21cc4:	sub	r1, r0, #3
   21cc8:	cmp	r1, #2
   21ccc:	bcc	21ce8 <__flatcc_fb_gen_c_json_parser@@Base+0x4654>
   21cd0:	cmp	r0, #1
   21cd4:	ldrls	r0, [r4, #4]
   21cd8:	addls	r0, r0, #1
   21cdc:	strls	r0, [r4, #4]
   21ce0:	popls	{r4, r5, fp, pc}
   21ce4:	pop	{r4, r5, fp, pc}
   21ce8:	ldr	r0, [r4, #8]
   21cec:	add	r0, r0, #1
   21cf0:	str	r0, [r4, #8]
   21cf4:	pop	{r4, r5, fp, pc}
   21cf8:	push	{r4, sl, fp, lr}
   21cfc:	add	fp, sp, #8
   21d00:	mov	r4, r1
   21d04:	ldrh	r1, [r1, #8]
   21d08:	cmp	r1, #4
   21d0c:	movhi	r0, #0
   21d10:	pophi	{r4, sl, fp, pc}
   21d14:	ldr	r1, [r4, #16]
   21d18:	add	r0, r0, #172	; 0xac
   21d1c:	bl	2191c <__flatcc_fb_gen_c_json_parser@@Base+0x4288>
   21d20:	cmp	r0, #0
   21d24:	movne	r0, r4
   21d28:	pop	{r4, sl, fp, pc}
   21d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d30:	add	fp, sp, #28
   21d34:	sub	sp, sp, #4
   21d38:	mov	r9, r1
   21d3c:	mov	sl, r0
   21d40:	ldr	r0, [r0, #40]	; 0x28
   21d44:	bl	21cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x4664>
   21d48:	cmp	r0, #0
   21d4c:	beq	21e1c <__flatcc_fb_gen_c_json_parser@@Base+0x4788>
   21d50:	ldr	r1, [sl]
   21d54:	ldr	r8, [sl, #36]	; 0x24
   21d58:	cmp	r1, #0
   21d5c:	mov	r6, r8
   21d60:	beq	21da8 <__flatcc_fb_gen_c_json_parser@@Base+0x4714>
   21d64:	ldr	r0, [r0, #12]
   21d68:	ldr	r5, [r0]
   21d6c:	cmp	r5, #0
   21d70:	mov	r6, r8
   21d74:	beq	21da8 <__flatcc_fb_gen_c_json_parser@@Base+0x4714>
   21d78:	mov	r4, #46	; 0x2e
   21d7c:	mov	r6, r8
   21d80:	ldr	r0, [r5, #4]
   21d84:	ldm	r0, {r1, r7}
   21d88:	mov	r0, r6
   21d8c:	mov	r2, r7
   21d90:	bl	1490c <memcpy@plt>
   21d94:	strb	r4, [r6, r7]!
   21d98:	add	r6, r6, #1
   21d9c:	ldr	r5, [r5]
   21da0:	cmp	r5, #0
   21da4:	bne	21d80 <__flatcc_fb_gen_c_json_parser@@Base+0x46ec>
   21da8:	ldr	r0, [r9, #4]
   21dac:	ldm	r0, {r1, r7}
   21db0:	mov	r0, r6
   21db4:	mov	r2, r7
   21db8:	bl	1490c <memcpy@plt>
   21dbc:	mov	r0, #0
   21dc0:	strb	r0, [r6, r7]!
   21dc4:	add	r0, r6, #1
   21dc8:	str	r0, [sl, #36]	; 0x24
   21dcc:	ldrh	r0, [r9, #8]
   21dd0:	sub	r1, r0, #3
   21dd4:	cmp	r1, #2
   21dd8:	bcc	21e04 <__flatcc_fb_gen_c_json_parser@@Base+0x4770>
   21ddc:	cmp	r0, #1
   21de0:	bhi	21e1c <__flatcc_fb_gen_c_json_parser@@Base+0x4788>
   21de4:	ldr	r0, [sl, #28]
   21de8:	str	r9, [r0]
   21dec:	ldr	r0, [sl, #28]
   21df0:	str	r8, [r0, #4]
   21df4:	add	r0, r0, #8
   21df8:	str	r0, [sl, #28]
   21dfc:	sub	sp, fp, #28
   21e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e04:	ldr	r0, [sl, #32]
   21e08:	str	r9, [r0]
   21e0c:	ldr	r0, [sl, #32]
   21e10:	str	r8, [r0, #4]
   21e14:	add	r0, r0, #8
   21e18:	str	r0, [sl, #32]
   21e1c:	sub	sp, fp, #28
   21e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e24:	ldr	r1, [r1, #4]
   21e28:	ldr	r0, [r0, #4]
   21e2c:	b	148e8 <strcmp@plt>
   21e30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21e34:	add	fp, sp, #24
   21e38:	sub	sp, sp, #224	; 0xe0
   21e3c:	mov	r5, r1
   21e40:	mov	r4, r0
   21e44:	mov	r6, sp
   21e48:	mov	r0, r6
   21e4c:	mov	r1, #0
   21e50:	mov	r2, #220	; 0xdc
   21e54:	bl	149d8 <memset@plt>
   21e58:	mov	r0, r5
   21e5c:	mov	r1, r6
   21e60:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   21e64:	ldr	r0, [r4, #208]	; 0xd0
   21e68:	ldr	r2, [r0, #160]	; 0xa0
   21e6c:	movw	r1, #36843	; 0x8feb
   21e70:	movt	r1, #4
   21e74:	mov	r0, r4
   21e78:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21e7c:	ldr	r0, [r4, #220]	; 0xdc
   21e80:	add	r0, r0, #2
   21e84:	str	r0, [r4, #220]	; 0xdc
   21e88:	movw	r1, #45804	; 0xb2ec
   21e8c:	movt	r1, #4
   21e90:	mov	r0, r4
   21e94:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21e98:	ldr	r0, [r4, #220]	; 0xdc
   21e9c:	cmp	r0, #0
   21ea0:	beq	22034 <__flatcc_fb_gen_c_json_parser@@Base+0x49a0>
   21ea4:	subs	r1, r0, #1
   21ea8:	str	r1, [r4, #220]	; 0xdc
   21eac:	beq	22034 <__flatcc_fb_gen_c_json_parser@@Base+0x49a0>
   21eb0:	sub	r0, r0, #2
   21eb4:	str	r0, [r4, #220]	; 0xdc
   21eb8:	movw	r1, #50187	; 0xc40b
   21ebc:	movt	r1, #4
   21ec0:	mov	r0, r4
   21ec4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21ec8:	ldr	r0, [r4, #220]	; 0xdc
   21ecc:	add	r0, r0, #1
   21ed0:	str	r0, [r4, #220]	; 0xdc
   21ed4:	movw	r1, #45910	; 0xb356
   21ed8:	movt	r1, #4
   21edc:	mov	r0, r4
   21ee0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21ee4:	movw	r1, #45939	; 0xb373
   21ee8:	movt	r1, #4
   21eec:	mov	r0, r4
   21ef0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21ef4:	movw	r1, #26232	; 0x6678
   21ef8:	movt	r1, #3
   21efc:	mov	r0, r4
   21f00:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21f04:	movw	r1, #45966	; 0xb38e
   21f08:	movt	r1, #4
   21f0c:	mov	r0, r4
   21f10:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21f14:	movw	r1, #45993	; 0xb3a9
   21f18:	movt	r1, #4
   21f1c:	mov	r0, r4
   21f20:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21f24:	ldr	r0, [r4, #208]	; 0xd0
   21f28:	ldrh	r1, [r0, #16]
   21f2c:	cmp	r1, #2
   21f30:	bne	21f54 <__flatcc_fb_gen_c_json_parser@@Base+0x48c0>
   21f34:	ldrd	r6, [r0, #8]
   21f38:	movw	r1, #46052	; 0xb3e4
   21f3c:	movt	r1, #4
   21f40:	mov	r0, r4
   21f44:	mov	r2, r7
   21f48:	mov	r3, r6
   21f4c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21f50:	b	21f64 <__flatcc_fb_gen_c_json_parser@@Base+0x48d0>
   21f54:	movw	r1, #46113	; 0xb421
   21f58:	movt	r1, #4
   21f5c:	mov	r0, r4
   21f60:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21f64:	movw	r1, #46169	; 0xb459
   21f68:	movt	r1, #4
   21f6c:	mov	r2, sp
   21f70:	mov	r0, r4
   21f74:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21f78:	movw	r1, #46221	; 0xb48d
   21f7c:	movt	r1, #4
   21f80:	mov	r0, r4
   21f84:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21f88:	ldr	r0, [r4, #220]	; 0xdc
   21f8c:	add	r0, r0, #1
   21f90:	str	r0, [r4, #220]	; 0xdc
   21f94:	movw	r1, #46239	; 0xb49f
   21f98:	movt	r1, #4
   21f9c:	mov	r0, r4
   21fa0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21fa4:	ldr	r0, [r4, #220]	; 0xdc
   21fa8:	cmp	r0, #0
   21fac:	beq	22054 <__flatcc_fb_gen_c_json_parser@@Base+0x49c0>
   21fb0:	sub	r0, r0, #1
   21fb4:	str	r0, [r4, #220]	; 0xdc
   21fb8:	movw	r1, #35313	; 0x89f1
   21fbc:	movt	r1, #3
   21fc0:	mov	r0, r4
   21fc4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21fc8:	movw	r1, #46258	; 0xb4b2
   21fcc:	movt	r1, #4
   21fd0:	mov	r0, r4
   21fd4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21fd8:	movw	r1, #46310	; 0xb4e6
   21fdc:	movt	r1, #4
   21fe0:	mov	r0, r4
   21fe4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21fe8:	movw	r1, #39113	; 0x98c9
   21fec:	movt	r1, #4
   21ff0:	mov	r0, r4
   21ff4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21ff8:	ldr	r0, [r4, #220]	; 0xdc
   21ffc:	cmp	r0, #0
   22000:	beq	22074 <__flatcc_fb_gen_c_json_parser@@Base+0x49e0>
   22004:	sub	r0, r0, #1
   22008:	str	r0, [r4, #220]	; 0xdc
   2200c:	movw	r1, #35313	; 0x89f1
   22010:	movt	r1, #3
   22014:	mov	r0, r4
   22018:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2201c:	movw	r1, #26232	; 0x6678
   22020:	movt	r1, #3
   22024:	mov	r0, r4
   22028:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2202c:	sub	sp, fp, #24
   22030:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22034:	movw	r0, #36960	; 0x9060
   22038:	movt	r0, #4
   2203c:	movw	r1, #36972	; 0x906c
   22040:	movt	r1, #4
   22044:	movw	r3, #45847	; 0xb317
   22048:	movt	r3, #4
   2204c:	movw	r2, #1610	; 0x64a
   22050:	bl	14a80 <__assert_fail@plt>
   22054:	movw	r0, #36960	; 0x9060
   22058:	movt	r0, #4
   2205c:	movw	r1, #36972	; 0x906c
   22060:	movt	r1, #4
   22064:	movw	r3, #45847	; 0xb317
   22068:	movt	r3, #4
   2206c:	movw	r2, #1626	; 0x65a
   22070:	bl	14a80 <__assert_fail@plt>
   22074:	movw	r0, #36960	; 0x9060
   22078:	movt	r0, #4
   2207c:	movw	r1, #36972	; 0x906c
   22080:	movt	r1, #4
   22084:	movw	r3, #45847	; 0xb317
   22088:	movt	r3, #4
   2208c:	movw	r2, #1630	; 0x65e
   22090:	bl	14a80 <__assert_fail@plt>
   22094:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22098:	add	fp, sp, #24
   2209c:	sub	sp, sp, #224	; 0xe0
   220a0:	mov	r5, r1
   220a4:	mov	r4, r0
   220a8:	mov	r6, sp
   220ac:	mov	r0, r6
   220b0:	mov	r1, #0
   220b4:	mov	r2, #220	; 0xdc
   220b8:	bl	149d8 <memset@plt>
   220bc:	mov	r0, r5
   220c0:	mov	r1, r6
   220c4:	bl	1dd74 <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   220c8:	ldr	r0, [r4, #208]	; 0xd0
   220cc:	ldr	r2, [r0, #160]	; 0xa0
   220d0:	movw	r1, #36843	; 0x8feb
   220d4:	movt	r1, #4
   220d8:	mov	r0, r4
   220dc:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   220e0:	ldr	r0, [r4, #220]	; 0xdc
   220e4:	add	r0, r0, #2
   220e8:	str	r0, [r4, #220]	; 0xdc
   220ec:	movw	r1, #45804	; 0xb2ec
   220f0:	movt	r1, #4
   220f4:	mov	r0, r4
   220f8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   220fc:	ldr	r0, [r4, #220]	; 0xdc
   22100:	cmp	r0, #0
   22104:	beq	22298 <__flatcc_fb_gen_c_json_parser@@Base+0x4c04>
   22108:	subs	r1, r0, #1
   2210c:	str	r1, [r4, #220]	; 0xdc
   22110:	beq	22298 <__flatcc_fb_gen_c_json_parser@@Base+0x4c04>
   22114:	sub	r0, r0, #2
   22118:	str	r0, [r4, #220]	; 0xdc
   2211c:	movw	r1, #50187	; 0xc40b
   22120:	movt	r1, #4
   22124:	mov	r0, r4
   22128:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2212c:	ldr	r0, [r4, #220]	; 0xdc
   22130:	add	r0, r0, #1
   22134:	str	r0, [r4, #220]	; 0xdc
   22138:	movw	r1, #46394	; 0xb53a
   2213c:	movt	r1, #4
   22140:	mov	r0, r4
   22144:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22148:	movw	r1, #45939	; 0xb373
   2214c:	movt	r1, #4
   22150:	mov	r0, r4
   22154:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22158:	movw	r1, #26232	; 0x6678
   2215c:	movt	r1, #3
   22160:	mov	r0, r4
   22164:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22168:	movw	r1, #46421	; 0xb555
   2216c:	movt	r1, #4
   22170:	mov	r0, r4
   22174:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22178:	movw	r1, #45993	; 0xb3a9
   2217c:	movt	r1, #4
   22180:	mov	r0, r4
   22184:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22188:	ldr	r0, [r4, #208]	; 0xd0
   2218c:	ldrh	r1, [r0, #16]
   22190:	cmp	r1, #2
   22194:	bne	221b8 <__flatcc_fb_gen_c_json_parser@@Base+0x4b24>
   22198:	ldrd	r6, [r0, #8]
   2219c:	movw	r1, #46052	; 0xb3e4
   221a0:	movt	r1, #4
   221a4:	mov	r0, r4
   221a8:	mov	r2, r7
   221ac:	mov	r3, r6
   221b0:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   221b4:	b	221c8 <__flatcc_fb_gen_c_json_parser@@Base+0x4b34>
   221b8:	movw	r1, #46113	; 0xb421
   221bc:	movt	r1, #4
   221c0:	mov	r0, r4
   221c4:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   221c8:	movw	r1, #46446	; 0xb56e
   221cc:	movt	r1, #4
   221d0:	mov	r2, sp
   221d4:	mov	r0, r4
   221d8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   221dc:	movw	r1, #46221	; 0xb48d
   221e0:	movt	r1, #4
   221e4:	mov	r0, r4
   221e8:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   221ec:	ldr	r0, [r4, #220]	; 0xdc
   221f0:	add	r0, r0, #1
   221f4:	str	r0, [r4, #220]	; 0xdc
   221f8:	movw	r1, #46239	; 0xb49f
   221fc:	movt	r1, #4
   22200:	mov	r0, r4
   22204:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22208:	ldr	r0, [r4, #220]	; 0xdc
   2220c:	cmp	r0, #0
   22210:	beq	222b8 <__flatcc_fb_gen_c_json_parser@@Base+0x4c24>
   22214:	sub	r0, r0, #1
   22218:	str	r0, [r4, #220]	; 0xdc
   2221c:	movw	r1, #35313	; 0x89f1
   22220:	movt	r1, #3
   22224:	mov	r0, r4
   22228:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2222c:	movw	r1, #46258	; 0xb4b2
   22230:	movt	r1, #4
   22234:	mov	r0, r4
   22238:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2223c:	movw	r1, #46310	; 0xb4e6
   22240:	movt	r1, #4
   22244:	mov	r0, r4
   22248:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2224c:	movw	r1, #39113	; 0x98c9
   22250:	movt	r1, #4
   22254:	mov	r0, r4
   22258:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2225c:	ldr	r0, [r4, #220]	; 0xdc
   22260:	cmp	r0, #0
   22264:	beq	222d8 <__flatcc_fb_gen_c_json_parser@@Base+0x4c44>
   22268:	sub	r0, r0, #1
   2226c:	str	r0, [r4, #220]	; 0xdc
   22270:	movw	r1, #35313	; 0x89f1
   22274:	movt	r1, #3
   22278:	mov	r0, r4
   2227c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22280:	movw	r1, #26232	; 0x6678
   22284:	movt	r1, #3
   22288:	mov	r0, r4
   2228c:	bl	1dc40 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   22290:	sub	sp, fp, #24
   22294:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22298:	movw	r0, #36960	; 0x9060
   2229c:	movt	r0, #4
   222a0:	movw	r1, #36972	; 0x906c
   222a4:	movt	r1, #4
   222a8:	movw	r3, #46330	; 0xb4fa
   222ac:	movt	r3, #4
   222b0:	movw	r2, #1645	; 0x66d
   222b4:	bl	14a80 <__assert_fail@plt>
   222b8:	movw	r0, #36960	; 0x9060
   222bc:	movt	r0, #4
   222c0:	movw	r1, #36972	; 0x906c
   222c4:	movt	r1, #4
   222c8:	movw	r3, #46330	; 0xb4fa
   222cc:	movt	r3, #4
   222d0:	movw	r2, #1661	; 0x67d
   222d4:	bl	14a80 <__assert_fail@plt>
   222d8:	movw	r0, #36960	; 0x9060
   222dc:	movt	r0, #4
   222e0:	movw	r1, #36972	; 0x906c
   222e4:	movt	r1, #4
   222e8:	movw	r3, #46330	; 0xb4fa
   222ec:	movt	r3, #4
   222f0:	movw	r2, #1665	; 0x681
   222f4:	bl	14a80 <__assert_fail@plt>
   222f8:	ldr	r1, [r0, #212]	; 0xd4
   222fc:	ldr	r1, [r1, #140]	; 0x8c
   22300:	cmp	r1, #0
   22304:	bxeq	lr
   22308:	ldr	r3, [r0, #204]	; 0xcc
   2230c:	movw	r0, #50196	; 0xc414
   22310:	movt	r0, #3
   22314:	mov	r1, #36	; 0x24
   22318:	mov	r2, #1
   2231c:	b	14954 <fwrite@plt>

00022320 <__flatcc_fb_gen_c_json_printer@@Base>:
   22320:	push	{r4, sl, fp, lr}
   22324:	add	fp, sp, #8
   22328:	mov	r4, r0
   2232c:	bl	22370 <__flatcc_fb_gen_c_json_printer@@Base+0x50>
   22330:	mov	r0, r4
   22334:	bl	223f8 <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   22338:	mov	r0, r4
   2233c:	bl	22524 <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   22340:	mov	r0, r4
   22344:	bl	22564 <__flatcc_fb_gen_c_json_printer@@Base+0x244>
   22348:	mov	r0, r4
   2234c:	bl	225a4 <__flatcc_fb_gen_c_json_printer@@Base+0x284>
   22350:	mov	r0, r4
   22354:	bl	225e4 <__flatcc_fb_gen_c_json_printer@@Base+0x2c4>
   22358:	mov	r0, r4
   2235c:	bl	22624 <__flatcc_fb_gen_c_json_printer@@Base+0x304>
   22360:	mov	r0, r4
   22364:	bl	22648 <__flatcc_fb_gen_c_json_printer@@Base+0x328>
   22368:	mov	r0, #0
   2236c:	pop	{r4, sl, fp, pc}
   22370:	push	{r4, sl, fp, lr}
   22374:	add	fp, sp, #8
   22378:	mov	r4, r0
   2237c:	ldr	r0, [r0, #204]	; 0xcc
   22380:	ldr	r1, [r4, #208]	; 0xd0
   22384:	ldr	r2, [r1, #164]	; 0xa4
   22388:	movw	r1, #46636	; 0xb62c
   2238c:	movt	r1, #4
   22390:	mov	r3, r2
   22394:	bl	149c0 <fprintf@plt>
   22398:	ldr	r3, [r4, #204]	; 0xcc
   2239c:	movw	r0, #25678	; 0x644e
   223a0:	movt	r0, #3
   223a4:	mov	r1, #81	; 0x51
   223a8:	mov	r2, #1
   223ac:	bl	14954 <fwrite@plt>
   223b0:	ldr	r3, [r4, #204]	; 0xcc
   223b4:	movw	r0, #46689	; 0xb661
   223b8:	movt	r0, #4
   223bc:	mov	r1, #40	; 0x28
   223c0:	mov	r2, #1
   223c4:	bl	14954 <fwrite@plt>
   223c8:	movw	r1, #25607	; 0x6407
   223cc:	movt	r1, #3
   223d0:	movw	r2, #46730	; 0xb68a
   223d4:	movt	r2, #4
   223d8:	mov	r0, r4
   223dc:	bl	16624 <__flatcc_fb_gen_c_includes@@Base>
   223e0:	mov	r0, r4
   223e4:	bl	22674 <__flatcc_fb_gen_c_json_printer@@Base+0x354>
   223e8:	ldr	r1, [r4, #204]	; 0xcc
   223ec:	mov	r0, #10
   223f0:	pop	{r4, sl, fp, lr}
   223f4:	b	14a20 <fputc@plt>
   223f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   223fc:	add	fp, sp, #24
   22400:	sub	sp, sp, #224	; 0xe0
   22404:	mov	r4, r0
   22408:	ldr	r0, [r0, #208]	; 0xd0
   2240c:	ldr	r5, [r0, #52]	; 0x34
   22410:	mov	r0, sp
   22414:	mov	r1, #0
   22418:	mov	r2, #220	; 0xdc
   2241c:	bl	149d8 <memset@plt>
   22420:	cmp	r5, #0
   22424:	beq	22464 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   22428:	ldrh	r0, [r5, #8]
   2242c:	cmp	r0, #1
   22430:	bhi	22464 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   22434:	ldr	r3, [r4, #204]	; 0xcc
   22438:	movw	r0, #46746	; 0xb69a
   2243c:	movt	r0, #4
   22440:	movw	r1, #482	; 0x1e2
   22444:	mov	r2, #1
   22448:	bl	14954 <fwrite@plt>
   2244c:	ldr	r0, [r4, #204]	; 0xcc
   22450:	ldr	r1, [r4, #208]	; 0xd0
   22454:	ldr	r2, [r1, #160]	; 0xa0
   22458:	movw	r1, #47229	; 0xb87d
   2245c:	movt	r1, #4
   22460:	bl	149c0 <fprintf@plt>
   22464:	ldr	r0, [r4, #208]	; 0xd0
   22468:	ldr	r5, [r0, #40]	; 0x28
   2246c:	cmp	r5, #0
   22470:	beq	22510 <__flatcc_fb_gen_c_json_printer@@Base+0x1f0>
   22474:	mov	r6, sp
   22478:	movw	r8, #47515	; 0xb99b
   2247c:	movt	r8, #4
   22480:	movw	r9, #47621	; 0xba05
   22484:	movt	r9, #4
   22488:	movw	r7, #47317	; 0xb8d5
   2248c:	movt	r7, #4
   22490:	ldrh	r0, [r5, #8]
   22494:	cmp	r0, #0
   22498:	beq	224e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   2249c:	cmp	r0, #1
   224a0:	beq	224d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0>
   224a4:	cmp	r0, #4
   224a8:	bne	22504 <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   224ac:	mov	r0, r5
   224b0:	mov	r1, r6
   224b4:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   224b8:	ldr	r0, [r4, #204]	; 0xcc
   224bc:	mov	r1, r7
   224c0:	mov	r2, r6
   224c4:	mov	r3, r6
   224c8:	bl	149c0 <fprintf@plt>
   224cc:	b	22504 <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   224d0:	mov	r0, r5
   224d4:	mov	r1, r6
   224d8:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   224dc:	ldr	r0, [r4, #204]	; 0xcc
   224e0:	mov	r1, r9
   224e4:	b	224fc <__flatcc_fb_gen_c_json_printer@@Base+0x1dc>
   224e8:	mov	r0, r5
   224ec:	mov	r1, r6
   224f0:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   224f4:	ldr	r0, [r4, #204]	; 0xcc
   224f8:	mov	r1, r8
   224fc:	mov	r2, r6
   22500:	bl	149c0 <fprintf@plt>
   22504:	ldr	r5, [r5]
   22508:	cmp	r5, #0
   2250c:	bne	22490 <__flatcc_fb_gen_c_json_printer@@Base+0x170>
   22510:	ldr	r1, [r4, #204]	; 0xcc
   22514:	mov	r0, #10
   22518:	bl	14a20 <fputc@plt>
   2251c:	sub	sp, fp, #24
   22520:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22524:	push	{r4, r5, fp, lr}
   22528:	add	fp, sp, #8
   2252c:	mov	r4, r0
   22530:	ldr	r0, [r0, #208]	; 0xd0
   22534:	ldr	r5, [r0, #40]	; 0x28
   22538:	b	22540 <__flatcc_fb_gen_c_json_printer@@Base+0x220>
   2253c:	ldr	r5, [r5]
   22540:	cmp	r5, #0
   22544:	popeq	{r4, r5, fp, pc}
   22548:	ldrh	r0, [r5, #8]
   2254c:	cmp	r0, #3
   22550:	bne	2253c <__flatcc_fb_gen_c_json_printer@@Base+0x21c>
   22554:	mov	r0, r4
   22558:	mov	r1, r5
   2255c:	bl	226ac <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22560:	b	2253c <__flatcc_fb_gen_c_json_printer@@Base+0x21c>
   22564:	push	{r4, r5, fp, lr}
   22568:	add	fp, sp, #8
   2256c:	mov	r4, r0
   22570:	ldr	r0, [r0, #208]	; 0xd0
   22574:	ldr	r5, [r0, #40]	; 0x28
   22578:	b	22580 <__flatcc_fb_gen_c_json_printer@@Base+0x260>
   2257c:	ldr	r5, [r5]
   22580:	cmp	r5, #0
   22584:	popeq	{r4, r5, fp, pc}
   22588:	ldrh	r0, [r5, #8]
   2258c:	cmp	r0, #4
   22590:	bne	2257c <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   22594:	mov	r0, r4
   22598:	mov	r1, r5
   2259c:	bl	22c58 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   225a0:	b	2257c <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   225a4:	push	{r4, r5, fp, lr}
   225a8:	add	fp, sp, #8
   225ac:	mov	r4, r0
   225b0:	ldr	r0, [r0, #208]	; 0xd0
   225b4:	ldr	r5, [r0, #40]	; 0x28
   225b8:	b	225c0 <__flatcc_fb_gen_c_json_printer@@Base+0x2a0>
   225bc:	ldr	r5, [r5]
   225c0:	cmp	r5, #0
   225c4:	popeq	{r4, r5, fp, pc}
   225c8:	ldrh	r0, [r5, #8]
   225cc:	cmp	r0, #1
   225d0:	bne	225bc <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   225d4:	mov	r0, r4
   225d8:	mov	r1, r5
   225dc:	bl	22f28 <__flatcc_fb_gen_c_json_printer@@Base+0xc08>
   225e0:	b	225bc <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   225e4:	push	{r4, r5, fp, lr}
   225e8:	add	fp, sp, #8
   225ec:	mov	r4, r0
   225f0:	ldr	r0, [r0, #208]	; 0xd0
   225f4:	ldr	r5, [r0, #40]	; 0x28
   225f8:	b	22600 <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   225fc:	ldr	r5, [r5]
   22600:	cmp	r5, #0
   22604:	popeq	{r4, r5, fp, pc}
   22608:	ldrh	r0, [r5, #8]
   2260c:	cmp	r0, #0
   22610:	bne	225fc <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   22614:	mov	r0, r4
   22618:	mov	r1, r5
   2261c:	bl	230ec <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   22620:	b	225fc <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   22624:	ldr	r1, [r0, #208]	; 0xd0
   22628:	ldr	r1, [r1, #52]	; 0x34
   2262c:	cmp	r1, #0
   22630:	bxeq	lr
   22634:	ldrh	r2, [r1, #8]
   22638:	cmp	r2, #1
   2263c:	bhi	22644 <__flatcc_fb_gen_c_json_printer@@Base+0x324>
   22640:	b	2395c <__flatcc_fb_gen_c_json_printer@@Base+0x163c>
   22644:	bx	lr
   22648:	push	{r4, sl, fp, lr}
   2264c:	add	fp, sp, #8
   22650:	mov	r4, r0
   22654:	bl	23a24 <__flatcc_fb_gen_c_json_printer@@Base+0x1704>
   22658:	ldr	r0, [r4, #204]	; 0xcc
   2265c:	ldr	r1, [r4, #208]	; 0xd0
   22660:	ldr	r2, [r1, #164]	; 0xa4
   22664:	movw	r1, #52382	; 0xcc9e
   22668:	movt	r1, #4
   2266c:	pop	{r4, sl, fp, lr}
   22670:	b	149c0 <fprintf@plt>
   22674:	ldr	r1, [r0, #212]	; 0xd4
   22678:	ldr	r1, [r1, #140]	; 0x8c
   2267c:	cmp	r1, #0
   22680:	bxeq	lr
   22684:	ldr	r3, [r0, #204]	; 0xcc
   22688:	movw	r0, #26154	; 0x662a
   2268c:	movt	r0, #3
   22690:	mov	r1, #36	; 0x24
   22694:	mov	r2, #1
   22698:	b	14954 <fwrite@plt>
   2269c:	mov	r2, r1
   226a0:	mov	r1, r0
   226a4:	ldr	r0, [r0, #12]
   226a8:	b	16808 <__flatcc_fb_scoped_symbol_name@@Base>
   226ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226b0:	add	fp, sp, #28
   226b4:	sub	sp, sp, #252	; 0xfc
   226b8:	mov	sl, r1
   226bc:	mov	r4, r0
   226c0:	add	r5, sp, #24
   226c4:	mov	r7, #0
   226c8:	mov	r0, r5
   226cc:	mov	r1, #0
   226d0:	mov	r2, #220	; 0xdc
   226d4:	bl	149d8 <memset@plt>
   226d8:	mov	r0, sl
   226dc:	mov	r1, r5
   226e0:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   226e4:	ldr	r0, [sl, #40]	; 0x28
   226e8:	bl	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   226ec:	mov	r5, r0
   226f0:	ldr	r0, [sl, #40]	; 0x28
   226f4:	bl	22bcc <__flatcc_fb_gen_c_json_printer@@Base+0x8ac>
   226f8:	mov	r9, r0
   226fc:	ldr	r0, [sl, #40]	; 0x28
   22700:	mov	r1, r4
   22704:	bl	22c40 <__flatcc_fb_gen_c_json_printer@@Base+0x920>
   22708:	mov	r3, r0
   2270c:	ldrh	r0, [sl, #92]	; 0x5c
   22710:	ands	r6, r0, #32
   22714:	str	r5, [sp, #20]
   22718:	beq	22760 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
   2271c:	ldrd	r0, [sl, #112]	; 0x70
   22720:	eor	r2, r0, #1
   22724:	orrs	r2, r2, r1
   22728:	movw	r8, #47699	; 0xba53
   2272c:	movt	r8, #4
   22730:	beq	22798 <__flatcc_fb_gen_c_json_printer@@Base+0x478>
   22734:	eor	r2, r0, #4
   22738:	orrs	r2, r2, r1
   2273c:	beq	2277c <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   22740:	eor	r0, r0, #2
   22744:	orrs	r0, r0, r1
   22748:	bne	227ac <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   2274c:	movw	r5, #65535	; 0xffff
   22750:	movw	r0, #52458	; 0xccea
   22754:	movt	r0, #3
   22758:	str	r0, [sp, #16]
   2275c:	b	227c8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   22760:	ldr	r0, [r4, #204]!	; 0xcc
   22764:	str	r9, [sp]
   22768:	movw	r1, #47708	; 0xba5c
   2276c:	movt	r1, #4
   22770:	add	r2, sp, #24
   22774:	bl	149c0 <fprintf@plt>
   22778:	b	2283c <__flatcc_fb_gen_c_json_printer@@Base+0x51c>
   2277c:	mvn	r5, #0
   22780:	movw	r0, #52449	; 0xcce1
   22784:	movt	r0, #3
   22788:	str	r0, [sp, #16]
   2278c:	movw	r8, #47701	; 0xba55
   22790:	movt	r8, #4
   22794:	b	227c8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   22798:	mov	r5, #255	; 0xff
   2279c:	movw	r0, #52467	; 0xccf3
   227a0:	movt	r0, #3
   227a4:	str	r0, [sp, #16]
   227a8:	b	227c8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   227ac:	mvn	r5, #0
   227b0:	movw	r0, #52440	; 0xccd8
   227b4:	movt	r0, #3
   227b8:	str	r0, [sp, #16]
   227bc:	movw	r8, #47704	; 0xba58
   227c0:	movt	r8, #4
   227c4:	mvn	r7, #0
   227c8:	ldr	r0, [sl, #20]
   227cc:	cmp	r0, #0
   227d0:	beq	22928 <__flatcc_fb_gen_c_json_printer@@Base+0x608>
   227d4:	add	r1, r0, #48	; 0x30
   227d8:	ldrh	r2, [r0, #56]	; 0x38
   227dc:	cmp	r2, #4
   227e0:	beq	227f4 <__flatcc_fb_gen_c_json_printer@@Base+0x4d4>
   227e4:	cmp	r2, #6
   227e8:	beq	22808 <__flatcc_fb_gen_c_json_printer@@Base+0x4e8>
   227ec:	cmp	r2, #5
   227f0:	bne	22810 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   227f4:	ldr	r2, [r1]
   227f8:	ldr	r1, [r1, #4]
   227fc:	bic	r7, r7, r1
   22800:	bic	r5, r5, r2
   22804:	b	22810 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   22808:	ldrb	r1, [r1]
   2280c:	bic	r5, r5, r1
   22810:	ldr	r0, [r0]
   22814:	cmp	r0, #0
   22818:	bne	227d4 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   2281c:	ldr	r0, [r4, #204]!	; 0xcc
   22820:	str	r9, [sp]
   22824:	movw	r1, #47708	; 0xba5c
   22828:	movt	r1, #4
   2282c:	add	r2, sp, #24
   22830:	bl	149c0 <fprintf@plt>
   22834:	cmp	r6, #0
   22838:	bne	22940 <__flatcc_fb_gen_c_json_printer@@Base+0x620>
   2283c:	ldr	r3, [r4]
   22840:	movw	r0, #48308	; 0xbcb4
   22844:	movt	r0, #4
   22848:	mov	r1, #18
   2284c:	mov	r2, #1
   22850:	bl	14954 <fwrite@plt>
   22854:	ldr	r5, [sl, #20]
   22858:	cmp	r5, #0
   2285c:	beq	22910 <__flatcc_fb_gen_c_json_printer@@Base+0x5f0>
   22860:	movw	r8, #48394	; 0xbd0a
   22864:	movt	r8, #4
   22868:	movw	r9, #48461	; 0xbd4d
   2286c:	movt	r9, #4
   22870:	movw	r7, #48327	; 0xbcc7
   22874:	movt	r7, #4
   22878:	add	r0, r5, #48	; 0x30
   2287c:	ldrh	r1, [r5, #56]	; 0x38
   22880:	cmp	r1, #4
   22884:	beq	228e0 <__flatcc_fb_gen_c_json_printer@@Base+0x5c0>
   22888:	cmp	r1, #6
   2288c:	beq	228bc <__flatcc_fb_gen_c_json_printer@@Base+0x59c>
   22890:	cmp	r1, #5
   22894:	bne	22ab8 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   22898:	ldrd	r2, [r0]
   2289c:	ldr	r0, [r4]
   228a0:	ldr	r1, [r5, #4]
   228a4:	ldr	r6, [r1]
   228a8:	ldr	r1, [r1, #4]
   228ac:	stm	sp, {r1, r6}
   228b0:	str	r1, [sp, #8]
   228b4:	mov	r1, r7
   228b8:	b	22900 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
   228bc:	ldrb	r2, [r5, #48]	; 0x30
   228c0:	ldr	r0, [r4]
   228c4:	ldr	r1, [r5, #4]
   228c8:	ldr	r6, [r1]
   228cc:	ldr	r3, [r1, #4]
   228d0:	str	r6, [sp]
   228d4:	str	r3, [sp, #4]
   228d8:	mov	r1, r9
   228dc:	b	22900 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
   228e0:	ldrd	r2, [r0]
   228e4:	ldr	r0, [r4]
   228e8:	ldr	r1, [r5, #4]
   228ec:	ldr	r6, [r1]
   228f0:	ldr	r1, [r1, #4]
   228f4:	stm	sp, {r1, r6}
   228f8:	str	r1, [sp, #8]
   228fc:	mov	r1, r8
   22900:	bl	149c0 <fprintf@plt>
   22904:	ldr	r5, [r5]
   22908:	cmp	r5, #0
   2290c:	bne	22878 <__flatcc_fb_gen_c_json_printer@@Base+0x558>
   22910:	ldr	r0, [r4]
   22914:	movw	r1, #48526	; 0xbd8e
   22918:	movt	r1, #4
   2291c:	ldr	r2, [sp, #20]
   22920:	bl	149c0 <fprintf@plt>
   22924:	b	22a98 <__flatcc_fb_gen_c_json_printer@@Base+0x778>
   22928:	ldr	r0, [r4, #204]!	; 0xcc
   2292c:	str	r9, [sp]
   22930:	movw	r1, #47708	; 0xba5c
   22934:	movt	r1, #4
   22938:	add	r2, sp, #24
   2293c:	bl	149c0 <fprintf@plt>
   22940:	ldr	r6, [sp, #16]
   22944:	mov	r0, r6
   22948:	mov	r1, r9
   2294c:	bl	148e8 <strcmp@plt>
   22950:	mov	r1, r0
   22954:	ldr	r0, [r4]
   22958:	cmp	r1, #0
   2295c:	beq	22978 <__flatcc_fb_gen_c_json_printer@@Base+0x658>
   22960:	movw	r1, #47778	; 0xbaa2
   22964:	movt	r1, #4
   22968:	mov	r2, r6
   2296c:	mov	r3, r6
   22970:	bl	149c0 <fprintf@plt>
   22974:	b	22988 <__flatcc_fb_gen_c_json_printer@@Base+0x668>
   22978:	movw	r1, #47797	; 0xbab5
   2297c:	movt	r1, #4
   22980:	mov	r2, r6
   22984:	bl	149c0 <fprintf@plt>
   22988:	ldr	r3, [r4]
   2298c:	movw	r0, #47812	; 0xbac4
   22990:	movt	r0, #4
   22994:	mov	r1, #54	; 0x36
   22998:	mov	r2, #1
   2299c:	bl	14954 <fwrite@plt>
   229a0:	ldr	r1, [r4]
   229a4:	mov	r0, #10
   229a8:	bl	14a20 <fputc@plt>
   229ac:	orrs	r0, r5, r7
   229b0:	beq	229d4 <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   229b4:	ldr	r0, [r4]
   229b8:	ldr	r1, [sp, #20]
   229bc:	str	r1, [sp]
   229c0:	movw	r1, #47867	; 0xbafb
   229c4:	movt	r1, #4
   229c8:	mov	r2, r5
   229cc:	mov	r3, r7
   229d0:	bl	149c0 <fprintf@plt>
   229d4:	ldr	r3, [r4]
   229d8:	movw	r0, #47964	; 0xbb5c
   229dc:	movt	r0, #4
   229e0:	mov	r1, #59	; 0x3b
   229e4:	mov	r2, #1
   229e8:	bl	14954 <fwrite@plt>
   229ec:	ldr	r6, [sl, #20]
   229f0:	cmp	r6, #0
   229f4:	beq	22a80 <__flatcc_fb_gen_c_json_printer@@Base+0x760>
   229f8:	movw	r5, #48024	; 0xbb98
   229fc:	movt	r5, #4
   22a00:	add	r0, r6, #48	; 0x30
   22a04:	ldrh	r1, [r6, #56]	; 0x38
   22a08:	cmp	r1, #4
   22a0c:	beq	22a20 <__flatcc_fb_gen_c_json_printer@@Base+0x700>
   22a10:	cmp	r1, #6
   22a14:	beq	22a48 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   22a18:	cmp	r1, #5
   22a1c:	bne	22b08 <__flatcc_fb_gen_c_json_printer@@Base+0x7e8>
   22a20:	ldrd	r2, [r0]
   22a24:	ldr	r0, [r4]
   22a28:	ldr	r1, [r6, #4]
   22a2c:	ldr	r7, [r1]
   22a30:	ldr	r1, [r1, #4]
   22a34:	str	r8, [sp]
   22a38:	stmib	sp, {r1, r7}
   22a3c:	str	r1, [sp, #12]
   22a40:	mov	r1, r5
   22a44:	b	22a70 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
   22a48:	ldrb	r2, [r6, #48]	; 0x30
   22a4c:	ldr	r0, [r4]
   22a50:	ldr	r1, [r6, #4]
   22a54:	ldr	r3, [r1]
   22a58:	ldr	r1, [r1, #4]
   22a5c:	str	r8, [sp]
   22a60:	stmib	sp, {r1, r3}
   22a64:	str	r1, [sp, #12]
   22a68:	mov	r1, r5
   22a6c:	mov	r3, #0
   22a70:	bl	149c0 <fprintf@plt>
   22a74:	ldr	r6, [r6]
   22a78:	cmp	r6, #0
   22a7c:	bne	22a00 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   22a80:	ldr	r3, [r4]
   22a84:	movw	r0, #47964	; 0xbb5c
   22a88:	movt	r0, #4
   22a8c:	mov	r1, #59	; 0x3b
   22a90:	mov	r2, #1
   22a94:	bl	14954 <fwrite@plt>
   22a98:	ldr	r3, [r4]
   22a9c:	movw	r0, #52096	; 0xcb80
   22aa0:	movt	r0, #4
   22aa4:	mov	r1, #3
   22aa8:	mov	r2, #1
   22aac:	bl	14954 <fwrite@plt>
   22ab0:	sub	sp, fp, #28
   22ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ab8:	movw	r0, #8368	; 0x20b0
   22abc:	movt	r0, #6
   22ac0:	ldr	r0, [r0]
   22ac4:	movw	r1, #48187	; 0xbc3b
   22ac8:	movt	r1, #4
   22acc:	str	r1, [sp]
   22ad0:	movw	r1, #25975	; 0x6577
   22ad4:	movt	r1, #3
   22ad8:	movw	r4, #48101	; 0xbbe5
   22adc:	movt	r4, #4
   22ae0:	mov	r2, r4
   22ae4:	mov	r3, #157	; 0x9d
   22ae8:	bl	149c0 <fprintf@plt>
   22aec:	movw	r0, #29885	; 0x74bd
   22af0:	movt	r0, #4
   22af4:	movw	r3, #48245	; 0xbc75
   22af8:	movt	r3, #4
   22afc:	mov	r1, r4
   22b00:	mov	r2, #157	; 0x9d
   22b04:	bl	14a80 <__assert_fail@plt>
   22b08:	movw	r0, #8368	; 0x20b0
   22b0c:	movt	r0, #6
   22b10:	ldr	r0, [r0]
   22b14:	movw	r1, #48187	; 0xbc3b
   22b18:	movt	r1, #4
   22b1c:	str	r1, [sp]
   22b20:	movw	r1, #25975	; 0x6577
   22b24:	movt	r1, #3
   22b28:	movw	r4, #48101	; 0xbbe5
   22b2c:	movt	r4, #4
   22b30:	mov	r2, r4
   22b34:	mov	r3, #134	; 0x86
   22b38:	bl	149c0 <fprintf@plt>
   22b3c:	movw	r0, #29885	; 0x74bd
   22b40:	movt	r0, #4
   22b44:	movw	r3, #48245	; 0xbc75
   22b48:	movt	r3, #4
   22b4c:	mov	r1, r4
   22b50:	mov	r2, #134	; 0x86
   22b54:	bl	14a80 <__assert_fail@plt>
   22b58:	sub	r0, r0, #1
   22b5c:	cmp	r0, #11
   22b60:	movwcc	r1, #52416	; 0xccc0
   22b64:	movtcc	r1, #4
   22b68:	ldrcc	r0, [r1, r0, lsl #2]
   22b6c:	bxcc	lr
   22b70:	push	{r4, sl, fp, lr}
   22b74:	add	fp, sp, #8
   22b78:	sub	sp, sp, #8
   22b7c:	movw	r0, #8368	; 0x20b0
   22b80:	movt	r0, #6
   22b84:	ldr	r0, [r0]
   22b88:	movw	r1, #52568	; 0xcd58
   22b8c:	movt	r1, #3
   22b90:	str	r1, [sp]
   22b94:	movw	r1, #25975	; 0x6577
   22b98:	movt	r1, #3
   22b9c:	movw	r4, #52495	; 0xcd0f
   22ba0:	movt	r4, #3
   22ba4:	mov	r2, r4
   22ba8:	mov	r3, #96	; 0x60
   22bac:	bl	149c0 <fprintf@plt>
   22bb0:	movw	r0, #29885	; 0x74bd
   22bb4:	movt	r0, #4
   22bb8:	movw	r3, #54920	; 0xd688
   22bbc:	movt	r3, #3
   22bc0:	mov	r1, r4
   22bc4:	mov	r2, #96	; 0x60
   22bc8:	bl	14a80 <__assert_fail@plt>
   22bcc:	sub	r0, r0, #1
   22bd0:	cmp	r0, #11
   22bd4:	movwcc	r1, #52464	; 0xccf0
   22bd8:	movtcc	r1, #4
   22bdc:	ldrcc	r0, [r1, r0, lsl #2]
   22be0:	bxcc	lr
   22be4:	push	{r4, sl, fp, lr}
   22be8:	add	fp, sp, #8
   22bec:	sub	sp, sp, #8
   22bf0:	movw	r0, #8368	; 0x20b0
   22bf4:	movt	r0, #6
   22bf8:	ldr	r0, [r0]
   22bfc:	movw	r1, #52568	; 0xcd58
   22c00:	movt	r1, #3
   22c04:	str	r1, [sp]
   22c08:	movw	r1, #25975	; 0x6577
   22c0c:	movt	r1, #3
   22c10:	movw	r4, #52495	; 0xcd0f
   22c14:	movt	r4, #3
   22c18:	mov	r2, r4
   22c1c:	mov	r3, #141	; 0x8d
   22c20:	bl	149c0 <fprintf@plt>
   22c24:	movw	r0, #29885	; 0x74bd
   22c28:	movt	r0, #4
   22c2c:	movw	r3, #52623	; 0xcd8f
   22c30:	movt	r3, #3
   22c34:	mov	r1, r4
   22c38:	mov	r2, #141	; 0x8d
   22c3c:	bl	14a80 <__assert_fail@plt>
   22c40:	movw	r2, #26232	; 0x6678
   22c44:	movt	r2, #3
   22c48:	cmp	r0, #5
   22c4c:	moveq	r2, r1
   22c50:	mov	r0, r2
   22c54:	bx	lr
   22c58:	push	{r4, r5, fp, lr}
   22c5c:	add	fp, sp, #8
   22c60:	mov	r4, r1
   22c64:	mov	r5, r0
   22c68:	bl	22c7c <__flatcc_fb_gen_c_json_printer@@Base+0x95c>
   22c6c:	mov	r0, r5
   22c70:	mov	r1, r4
   22c74:	pop	{r4, r5, fp, lr}
   22c78:	b	22d4c <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   22c7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22c80:	add	fp, sp, #24
   22c84:	sub	sp, sp, #232	; 0xe8
   22c88:	mov	r5, r1
   22c8c:	mov	r4, r0
   22c90:	add	r6, sp, #8
   22c94:	mov	r0, r6
   22c98:	mov	r1, #0
   22c9c:	mov	r2, #220	; 0xdc
   22ca0:	bl	149d8 <memset@plt>
   22ca4:	mov	r0, r5
   22ca8:	mov	r1, r6
   22cac:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22cb0:	ldr	r0, [r4, #204]	; 0xcc
   22cb4:	movw	r1, #48585	; 0xbdc9
   22cb8:	movt	r1, #4
   22cbc:	mov	r2, r6
   22cc0:	bl	149c0 <fprintf@plt>
   22cc4:	ldr	r6, [r5, #20]
   22cc8:	cmp	r6, #0
   22ccc:	beq	22d14 <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   22cd0:	movw	r7, #48699	; 0xbe3b
   22cd4:	movt	r7, #4
   22cd8:	ldrh	r0, [r6, #24]
   22cdc:	cmp	r0, #0
   22ce0:	beq	22d08 <__flatcc_fb_gen_c_json_printer@@Base+0x9e8>
   22ce4:	ldr	r0, [r4, #204]	; 0xcc
   22ce8:	ldr	r1, [r6, #4]
   22cec:	ldr	r2, [r6, #48]	; 0x30
   22cf0:	ldr	r5, [r1]
   22cf4:	ldr	r3, [r1, #4]
   22cf8:	str	r5, [sp]
   22cfc:	str	r3, [sp, #4]
   22d00:	mov	r1, r7
   22d04:	bl	149c0 <fprintf@plt>
   22d08:	ldr	r6, [r6]
   22d0c:	cmp	r6, #0
   22d10:	bne	22cd8 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   22d14:	ldr	r3, [r4, #204]	; 0xcc
   22d18:	movw	r0, #48780	; 0xbe8c
   22d1c:	movt	r0, #4
   22d20:	mov	r1, #78	; 0x4e
   22d24:	mov	r2, #1
   22d28:	bl	14954 <fwrite@plt>
   22d2c:	ldr	r3, [r4, #204]	; 0xcc
   22d30:	movw	r0, #33924	; 0x8484
   22d34:	movt	r0, #4
   22d38:	mov	r1, #9
   22d3c:	mov	r2, #1
   22d40:	bl	14954 <fwrite@plt>
   22d44:	sub	sp, fp, #24
   22d48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22d4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22d50:	add	fp, sp, #24
   22d54:	sub	sp, sp, #456	; 0x1c8
   22d58:	mov	r5, r1
   22d5c:	mov	r4, r0
   22d60:	add	r6, sp, #232	; 0xe8
   22d64:	mov	r0, r6
   22d68:	mov	r1, #0
   22d6c:	mov	r2, #220	; 0xdc
   22d70:	bl	149d8 <memset@plt>
   22d74:	add	r0, sp, #8
   22d78:	mov	r1, #0
   22d7c:	mov	r2, #220	; 0xdc
   22d80:	bl	149d8 <memset@plt>
   22d84:	mov	r0, r5
   22d88:	mov	r1, r6
   22d8c:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22d90:	ldr	r0, [r4, #204]	; 0xcc
   22d94:	movw	r1, #48859	; 0xbedb
   22d98:	movt	r1, #4
   22d9c:	mov	r2, r6
   22da0:	bl	149c0 <fprintf@plt>
   22da4:	ldr	r7, [r5, #20]
   22da8:	cmp	r7, #0
   22dac:	beq	22e50 <__flatcc_fb_gen_c_json_printer@@Base+0xb30>
   22db0:	movw	r5, #49302	; 0xc096
   22db4:	movt	r5, #4
   22db8:	add	r6, sp, #8
   22dbc:	movw	r8, #49090	; 0xbfc2
   22dc0:	movt	r8, #4
   22dc4:	movw	r9, #48990	; 0xbf5e
   22dc8:	movt	r9, #4
   22dcc:	ldrh	r0, [r7, #24]
   22dd0:	cmp	r0, #0
   22dd4:	beq	22e44 <__flatcc_fb_gen_c_json_printer@@Base+0xb24>
   22dd8:	cmp	r0, #10
   22ddc:	beq	22e1c <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   22de0:	cmp	r0, #14
   22de4:	bne	22e88 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   22de8:	ldr	r0, [r7, #16]
   22dec:	mov	r1, r6
   22df0:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22df4:	ldr	r0, [r7, #16]
   22df8:	ldrh	r0, [r0, #8]
   22dfc:	cmp	r0, #1
   22e00:	beq	22e30 <__flatcc_fb_gen_c_json_printer@@Base+0xb10>
   22e04:	cmp	r0, #0
   22e08:	bne	22ed8 <__flatcc_fb_gen_c_json_printer@@Base+0xbb8>
   22e0c:	ldr	r2, [r7, #48]	; 0x30
   22e10:	ldr	r0, [r4, #204]	; 0xcc
   22e14:	mov	r1, r9
   22e18:	b	22e3c <__flatcc_fb_gen_c_json_printer@@Base+0xb1c>
   22e1c:	ldr	r2, [r7, #48]	; 0x30
   22e20:	ldr	r0, [r4, #204]	; 0xcc
   22e24:	mov	r1, r5
   22e28:	bl	149c0 <fprintf@plt>
   22e2c:	b	22e44 <__flatcc_fb_gen_c_json_printer@@Base+0xb24>
   22e30:	ldr	r2, [r7, #48]	; 0x30
   22e34:	ldr	r0, [r4, #204]	; 0xcc
   22e38:	mov	r1, r8
   22e3c:	mov	r3, r6
   22e40:	bl	149c0 <fprintf@plt>
   22e44:	ldr	r7, [r7]
   22e48:	cmp	r7, #0
   22e4c:	bne	22dcc <__flatcc_fb_gen_c_json_printer@@Base+0xaac>
   22e50:	ldr	r3, [r4, #204]	; 0xcc
   22e54:	movw	r0, #49382	; 0xc0e6
   22e58:	movt	r0, #4
   22e5c:	mov	r1, #28
   22e60:	mov	r2, #1
   22e64:	bl	14954 <fwrite@plt>
   22e68:	ldr	r3, [r4, #204]	; 0xcc
   22e6c:	movw	r0, #33924	; 0x8484
   22e70:	movt	r0, #4
   22e74:	mov	r1, #9
   22e78:	mov	r2, #1
   22e7c:	bl	14954 <fwrite@plt>
   22e80:	sub	sp, fp, #24
   22e84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22e88:	movw	r0, #8368	; 0x20b0
   22e8c:	movt	r0, #6
   22e90:	ldr	r0, [r0]
   22e94:	movw	r1, #49192	; 0xc028
   22e98:	movt	r1, #4
   22e9c:	str	r1, [sp]
   22ea0:	movw	r1, #25975	; 0x6577
   22ea4:	movt	r1, #3
   22ea8:	movw	r4, #48101	; 0xbbe5
   22eac:	movt	r4, #4
   22eb0:	mov	r2, r4
   22eb4:	mov	r3, #251	; 0xfb
   22eb8:	bl	149c0 <fprintf@plt>
   22ebc:	movw	r0, #29885	; 0x74bd
   22ec0:	movt	r0, #4
   22ec4:	movw	r3, #49231	; 0xc04f
   22ec8:	movt	r3, #4
   22ecc:	mov	r1, r4
   22ed0:	mov	r2, #251	; 0xfb
   22ed4:	bl	14a80 <__assert_fail@plt>
   22ed8:	movw	r0, #8368	; 0x20b0
   22edc:	movt	r0, #6
   22ee0:	ldr	r0, [r0]
   22ee4:	movw	r1, #49192	; 0xc028
   22ee8:	movt	r1, #4
   22eec:	str	r1, [sp]
   22ef0:	movw	r1, #25975	; 0x6577
   22ef4:	movt	r1, #3
   22ef8:	movw	r4, #48101	; 0xbbe5
   22efc:	movt	r4, #4
   22f00:	mov	r2, r4
   22f04:	mov	r3, #240	; 0xf0
   22f08:	bl	149c0 <fprintf@plt>
   22f0c:	movw	r0, #29885	; 0x74bd
   22f10:	movt	r0, #4
   22f14:	movw	r3, #49231	; 0xc04f
   22f18:	movt	r3, #4
   22f1c:	mov	r1, r4
   22f20:	mov	r2, #240	; 0xf0
   22f24:	bl	14a80 <__assert_fail@plt>
   22f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f2c:	add	fp, sp, #28
   22f30:	sub	sp, sp, #476	; 0x1dc
   22f34:	mov	r7, r1
   22f38:	mov	r9, r0
   22f3c:	add	r6, sp, #248	; 0xf8
   22f40:	mov	r5, #0
   22f44:	mov	r0, r6
   22f48:	mov	r1, #0
   22f4c:	mov	r2, #220	; 0xdc
   22f50:	bl	149d8 <memset@plt>
   22f54:	add	sl, sp, #24
   22f58:	mov	r0, sl
   22f5c:	mov	r1, #0
   22f60:	mov	r2, #220	; 0xdc
   22f64:	bl	149d8 <memset@plt>
   22f68:	mov	r0, r7
   22f6c:	mov	r1, r6
   22f70:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22f74:	ldr	r0, [r9, #204]	; 0xcc
   22f78:	movw	r1, #49411	; 0xc103
   22f7c:	movt	r1, #4
   22f80:	mov	r2, r6
   22f84:	bl	149c0 <fprintf@plt>
   22f88:	ldr	r6, [r7, #20]
   22f8c:	cmp	r6, #0
   22f90:	beq	230b4 <__flatcc_fb_gen_c_json_printer@@Base+0xd94>
   22f94:	movw	r8, #49490	; 0xc152
   22f98:	movt	r8, #4
   22f9c:	ldrb	r0, [r6, #72]	; 0x48
   22fa0:	tst	r0, #4
   22fa4:	bne	230a4 <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   22fa8:	ldrh	r0, [r6, #24]
   22fac:	cmp	r0, #14
   22fb0:	beq	22ff8 <__flatcc_fb_gen_c_json_printer@@Base+0xcd8>
   22fb4:	cmp	r0, #8
   22fb8:	bne	230a4 <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   22fbc:	ldr	r0, [r6, #16]
   22fc0:	bl	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   22fc4:	mov	r2, r0
   22fc8:	ldr	r0, [r9, #204]	; 0xcc
   22fcc:	ldr	r1, [r6, #4]
   22fd0:	ldr	r3, [r6, #80]	; 0x50
   22fd4:	ldr	r7, [r6, #84]	; 0x54
   22fd8:	ldr	r4, [r1]
   22fdc:	ldr	r1, [r1, #4]
   22fe0:	stm	sp, {r3, r7}
   22fe4:	str	r1, [sp, #8]
   22fe8:	str	r4, [sp, #12]
   22fec:	str	r1, [sp, #16]
   22ff0:	mov	r1, r8
   22ff4:	b	23060 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
   22ff8:	ldr	r0, [r6, #16]
   22ffc:	mov	r1, sl
   23000:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   23004:	ldr	r0, [r6, #16]
   23008:	ldrh	r1, [r0, #8]
   2300c:	cmp	r1, #1
   23010:	beq	2306c <__flatcc_fb_gen_c_json_printer@@Base+0xd4c>
   23014:	cmp	r1, #3
   23018:	bne	230a4 <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   2301c:	ldr	r0, [r0, #40]	; 0x28
   23020:	bl	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   23024:	mov	r2, r0
   23028:	ldr	r0, [r9, #204]	; 0xcc
   2302c:	ldr	r1, [r6, #4]
   23030:	ldr	r4, [r6, #80]	; 0x50
   23034:	ldr	r3, [r6, #84]	; 0x54
   23038:	ldr	r7, [r1]
   2303c:	ldr	r1, [r1, #4]
   23040:	str	r4, [sp]
   23044:	str	r3, [sp, #4]
   23048:	str	r1, [sp, #8]
   2304c:	str	r7, [sp, #12]
   23050:	str	r1, [sp, #16]
   23054:	str	sl, [sp, #20]
   23058:	movw	r1, #49563	; 0xc19b
   2305c:	movt	r1, #4
   23060:	mov	r3, r5
   23064:	bl	149c0 <fprintf@plt>
   23068:	b	230a4 <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   2306c:	ldr	r0, [r9, #204]	; 0xcc
   23070:	ldr	r1, [r6, #4]
   23074:	ldrd	r2, [r6, #80]	; 0x50
   23078:	ldr	r7, [r1]
   2307c:	ldr	r1, [r1, #4]
   23080:	stm	sp, {r2, r3}
   23084:	str	r1, [sp, #8]
   23088:	str	r7, [sp, #12]
   2308c:	str	r1, [sp, #16]
   23090:	str	sl, [sp, #20]
   23094:	movw	r1, #49661	; 0xc1fd
   23098:	movt	r1, #4
   2309c:	mov	r2, r5
   230a0:	bl	149c0 <fprintf@plt>
   230a4:	add	r5, r5, #1
   230a8:	ldr	r6, [r6]
   230ac:	cmp	r6, #0
   230b0:	bne	22f9c <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   230b4:	ldr	r3, [r9, #204]	; 0xcc
   230b8:	movw	r0, #52096	; 0xcb80
   230bc:	movt	r0, #4
   230c0:	mov	r1, #3
   230c4:	mov	r2, #1
   230c8:	bl	14954 <fwrite@plt>
   230cc:	ldr	r0, [r9, #204]	; 0xcc
   230d0:	movw	r1, #49762	; 0xc262
   230d4:	movt	r1, #4
   230d8:	add	r2, sp, #248	; 0xf8
   230dc:	mov	r3, r2
   230e0:	bl	149c0 <fprintf@plt>
   230e4:	sub	sp, fp, #28
   230e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   230ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230f0:	add	fp, sp, #28
   230f4:	sub	sp, sp, #500	; 0x1f4
   230f8:	mov	r7, r1
   230fc:	mov	r8, r0
   23100:	sub	r5, fp, #256	; 0x100
   23104:	mov	r0, r5
   23108:	mov	r1, #0
   2310c:	mov	r2, #220	; 0xdc
   23110:	bl	149d8 <memset@plt>
   23114:	add	r0, sp, #48	; 0x30
   23118:	mov	r1, #0
   2311c:	mov	r2, #220	; 0xdc
   23120:	bl	149d8 <memset@plt>
   23124:	mov	r0, r7
   23128:	mov	r1, r5
   2312c:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   23130:	mov	sl, r7
   23134:	ldr	r6, [sl, #96]!	; 0x60
   23138:	ldr	r4, [sl, #4]
   2313c:	mov	r0, r6
   23140:	mov	r1, #4
   23144:	bl	148d0 <calloc@plt>
   23148:	mov	r5, r0
   2314c:	orrs	r0, r6, r4
   23150:	beq	2315c <__flatcc_fb_gen_c_json_printer@@Base+0xe3c>
   23154:	cmp	r5, #0
   23158:	beq	2390c <__flatcc_fb_gen_c_json_printer@@Base+0x15ec>
   2315c:	ldr	r0, [r7, #20]
   23160:	cmp	r0, #0
   23164:	beq	2317c <__flatcc_fb_gen_c_json_printer@@Base+0xe5c>
   23168:	ldr	r1, [r0, #96]	; 0x60
   2316c:	str	r0, [r5, r1, lsl #2]
   23170:	ldr	r0, [r0]
   23174:	cmp	r0, #0
   23178:	bne	23168 <__flatcc_fb_gen_c_json_printer@@Base+0xe48>
   2317c:	mov	r4, r8
   23180:	ldr	r0, [r4, #204]!	; 0xcc
   23184:	movw	r1, #50083	; 0xc3a3
   23188:	movt	r1, #4
   2318c:	sub	r2, fp, #256	; 0x100
   23190:	bl	149c0 <fprintf@plt>
   23194:	ldrd	r0, [sl]
   23198:	orrs	r0, r0, r1
   2319c:	beq	23784 <__flatcc_fb_gen_c_json_printer@@Base+0x1464>
   231a0:	add	r0, r7, #112	; 0x70
   231a4:	str	r0, [sp, #40]	; 0x28
   231a8:	mov	r8, #0
   231ac:	mov	r6, #0
   231b0:	str	r4, [sp, #44]	; 0x2c
   231b4:	ldr	r9, [r5, r8, lsl #2]
   231b8:	cmp	r9, #0
   231bc:	beq	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   231c0:	ldrb	r0, [r9, #72]	; 0x48
   231c4:	tst	r0, #4
   231c8:	bne	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   231cc:	ldr	r3, [r4]
   231d0:	movw	r0, #50189	; 0xc40d
   231d4:	movt	r0, #4
   231d8:	mov	r1, #5
   231dc:	mov	r2, #1
   231e0:	bl	14954 <fwrite@plt>
   231e4:	ldrh	r0, [r9, #24]
   231e8:	sub	r0, r0, #7
   231ec:	cmp	r0, #8
   231f0:	bhi	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   231f4:	add	r1, pc, #0
   231f8:	ldr	pc, [r1, r0, lsl #2]
   231fc:	andeq	r3, r2, r0, lsr #4
   23200:	andeq	r3, r2, r8, lsl #6
   23204:	andeq	r3, r2, r0, ror r2
   23208:	andeq	r3, r2, r0, lsl #7
   2320c:	andeq	r3, r2, ip, ror #14
   23210:	andeq	r3, r2, ip, ror #14
   23214:	andeq	r3, r2, ip, ror #14
   23218:	andeq	r3, r2, ip, lsr #7
   2321c:	muleq	r2, ip, r2
   23220:	ldrh	r0, [r9, #72]	; 0x48
   23224:	tst	r0, #3072	; 0xc00
   23228:	beq	23460 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   2322c:	mov	r1, #1
   23230:	bic	r1, r1, r0, lsr #10
   23234:	ldr	r0, [r4]
   23238:	ldr	r2, [r9, #4]
   2323c:	ldr	r4, [r9, #96]	; 0x60
   23240:	ldr	r3, [r9, #100]	; 0x64
   23244:	ldr	r7, [r2]
   23248:	ldr	r2, [r2, #4]
   2324c:	stm	sp, {r2, r7}
   23250:	str	r2, [sp, #8]
   23254:	str	r1, [sp, #12]
   23258:	movw	r1, #50386	; 0xc4d2
   2325c:	movt	r1, #4
   23260:	mov	r2, r4
   23264:	ldr	r4, [sp, #44]	; 0x2c
   23268:	bl	149c0 <fprintf@plt>
   2326c:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   23270:	ldr	r0, [r4]
   23274:	ldr	r1, [r9, #4]
   23278:	ldrd	r2, [r9, #96]	; 0x60
   2327c:	ldr	r7, [r1]
   23280:	ldr	r1, [r1, #4]
   23284:	stm	sp, {r1, r7}
   23288:	str	r1, [sp, #8]
   2328c:	movw	r1, #50782	; 0xc65e
   23290:	movt	r1, #4
   23294:	bl	149c0 <fprintf@plt>
   23298:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   2329c:	ldr	r0, [r9, #16]
   232a0:	add	r1, sp, #48	; 0x30
   232a4:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   232a8:	ldr	r0, [r9, #16]
   232ac:	ldrh	r0, [r0, #8]
   232b0:	cmp	r0, #4
   232b4:	bhi	237cc <__flatcc_fb_gen_c_json_printer@@Base+0x14ac>
   232b8:	add	r1, pc, #0
   232bc:	ldr	pc, [r1, r0, lsl #2]
   232c0:	ldrdeq	r3, [r2], -r4
   232c4:	andeq	r3, r2, ip, ror #9
   232c8:	andeq	r3, r2, ip, asr #15
   232cc:	andeq	r3, r2, ip, ror #10
   232d0:			; <UNDEFINED> instruction: 0x000234b4
   232d4:	ldr	r0, [r4]
   232d8:	ldr	r1, [r9, #4]
   232dc:	ldrd	r2, [r9, #96]	; 0x60
   232e0:	ldr	r7, [r1]
   232e4:	ldr	r1, [r1, #4]
   232e8:	stm	sp, {r1, r7}
   232ec:	str	r1, [sp, #8]
   232f0:	add	r1, sp, #48	; 0x30
   232f4:	str	r1, [sp, #12]
   232f8:	movw	r1, #51421	; 0xc8dd
   232fc:	movt	r1, #4
   23300:	bl	149c0 <fprintf@plt>
   23304:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   23308:	ldr	r0, [r9, #16]
   2330c:	bl	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   23310:	mov	ip, r0
   23314:	add	r1, r9, #48	; 0x30
   23318:	ldrh	r0, [r9, #56]	; 0x38
   2331c:	sub	r3, r0, #5
   23320:	cmp	r3, #2
   23324:	bcc	2341c <__flatcc_fb_gen_c_json_printer@@Base+0x10fc>
   23328:	cmp	r0, #3
   2332c:	beq	23534 <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   23330:	cmp	r0, #4
   23334:	bne	2381c <__flatcc_fb_gen_c_json_printer@@Base+0x14fc>
   23338:	ldr	r0, [r4]
   2333c:	ldr	r2, [r9, #4]
   23340:	ldr	r4, [r9, #96]	; 0x60
   23344:	ldr	r3, [r9, #100]	; 0x64
   23348:	ldr	r7, [r2]
   2334c:	ldr	r2, [r2, #4]
   23350:	ldm	r1, {r1, r9}
   23354:	str	r1, [sp, #24]
   23358:	str	r9, [sp, #28]
   2335c:	str	r4, [sp]
   23360:	ldr	r4, [sp, #44]	; 0x2c
   23364:	str	r3, [sp, #4]
   23368:	str	r2, [sp, #8]
   2336c:	str	r7, [sp, #12]
   23370:	str	r2, [sp, #16]
   23374:	movw	r1, #50259	; 0xc453
   23378:	movt	r1, #4
   2337c:	b	23764 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   23380:	ldr	r0, [r4]
   23384:	ldr	r1, [r9, #4]
   23388:	ldrd	r2, [r9, #96]	; 0x60
   2338c:	ldr	r7, [r1]
   23390:	ldr	r1, [r1, #4]
   23394:	stm	sp, {r1, r7}
   23398:	str	r1, [sp, #8]
   2339c:	movw	r1, #50720	; 0xc620
   233a0:	movt	r1, #4
   233a4:	bl	149c0 <fprintf@plt>
   233a8:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   233ac:	ldr	r0, [r9, #16]
   233b0:	add	r7, sp, #48	; 0x30
   233b4:	mov	r1, r7
   233b8:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   233bc:	ldr	r0, [r9, #16]
   233c0:	ldrh	r1, [r0, #8]
   233c4:	cmp	r1, #4
   233c8:	bhi	2386c <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
   233cc:	add	r2, pc, #0
   233d0:	ldr	pc, [r2, r1, lsl #2]
   233d4:	andeq	r3, r2, r8, ror #7
   233d8:	andeq	r3, r2, r4, lsl #12
   233dc:	andeq	r3, r2, ip, ror #16
   233e0:	andeq	r3, r2, r8, lsr r6
   233e4:	andeq	r3, r2, ip, asr #11
   233e8:	ldr	r0, [r4]
   233ec:	ldr	r1, [r9, #4]
   233f0:	ldrd	r2, [r9, #96]	; 0x60
   233f4:	mov	ip, r7
   233f8:	ldr	r7, [r1]
   233fc:	ldr	r1, [r1, #4]
   23400:	stm	sp, {r1, r7}
   23404:	str	r1, [sp, #8]
   23408:	str	ip, [sp, #12]
   2340c:	movw	r1, #51169	; 0xc7e1
   23410:	movt	r1, #4
   23414:	bl	149c0 <fprintf@plt>
   23418:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   2341c:	ldr	r0, [r4]
   23420:	ldr	r3, [r9, #4]
   23424:	ldr	r4, [r9, #96]	; 0x60
   23428:	ldr	r7, [r9, #100]	; 0x64
   2342c:	ldm	r3, {r2, r3}
   23430:	ldm	r1, {r1, r9}
   23434:	str	r1, [sp, #24]
   23438:	str	r9, [sp, #28]
   2343c:	str	r4, [sp]
   23440:	ldr	r4, [sp, #44]	; 0x2c
   23444:	str	r7, [sp, #4]
   23448:	str	r3, [sp, #8]
   2344c:	str	r2, [sp, #12]
   23450:	str	r3, [sp, #16]
   23454:	movw	r1, #50195	; 0xc413
   23458:	movt	r1, #4
   2345c:	b	23764 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   23460:	ldr	r0, [r9, #104]	; 0x68
   23464:	cmp	r0, #0
   23468:	beq	236a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1384>
   2346c:	add	r1, sp, #48	; 0x30
   23470:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   23474:	ldr	r0, [r4]
   23478:	ldr	r1, [r9, #4]
   2347c:	add	r4, r9, #96	; 0x60
   23480:	ldm	r4, {r2, r3, r4}
   23484:	ldr	r7, [r1]
   23488:	ldr	r1, [r1, #4]
   2348c:	ldrh	r4, [r4, #8]
   23490:	cmp	r4, #0
   23494:	beq	236ec <__flatcc_fb_gen_c_json_printer@@Base+0x13cc>
   23498:	stm	sp, {r1, r7}
   2349c:	str	r1, [sp, #8]
   234a0:	add	r1, sp, #48	; 0x30
   234a4:	str	r1, [sp, #12]
   234a8:	movw	r1, #50559	; 0xc57f
   234ac:	movt	r1, #4
   234b0:	b	23704 <__flatcc_fb_gen_c_json_printer@@Base+0x13e4>
   234b4:	ldr	r0, [r4]
   234b8:	ldr	r1, [r9, #4]
   234bc:	ldrd	r2, [r9, #96]	; 0x60
   234c0:	ldr	r7, [r1]
   234c4:	ldr	r1, [r1, #4]
   234c8:	stm	sp, {r1, r7}
   234cc:	str	r1, [sp, #8]
   234d0:	add	r1, sp, #48	; 0x30
   234d4:	str	r1, [sp, #12]
   234d8:	str	r1, [sp, #16]
   234dc:	movw	r1, #51703	; 0xc9f7
   234e0:	movt	r1, #4
   234e4:	bl	149c0 <fprintf@plt>
   234e8:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   234ec:	ldr	ip, [r9, #88]	; 0x58
   234f0:	ldr	r7, [r9, #92]	; 0x5c
   234f4:	ldr	r2, [r9, #96]	; 0x60
   234f8:	ldr	r3, [r9, #100]	; 0x64
   234fc:	ldr	r0, [r4]
   23500:	ldr	r4, [r9, #4]
   23504:	ldm	r4, {r1, r4}
   23508:	str	ip, [sp, #16]
   2350c:	str	r7, [sp, #20]
   23510:	add	r7, sp, #48	; 0x30
   23514:	str	r7, [sp, #24]
   23518:	str	r4, [sp]
   2351c:	stmib	sp, {r1, r4}
   23520:	ldr	r4, [sp, #44]	; 0x2c
   23524:	movw	r1, #51606	; 0xc996
   23528:	movt	r1, #4
   2352c:	bl	149c0 <fprintf@plt>
   23530:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   23534:	ldr	r0, [r4]
   23538:	ldrd	r2, [r9, #96]	; 0x60
   2353c:	ldr	r1, [r9, #4]
   23540:	vldr	d16, [r9, #48]	; 0x30
   23544:	ldr	r7, [r1]
   23548:	ldr	r1, [r1, #4]
   2354c:	vstr	d16, [sp, #24]
   23550:	stm	sp, {r2, r3}
   23554:	str	r1, [sp, #8]
   23558:	str	r7, [sp, #12]
   2355c:	str	r1, [sp, #16]
   23560:	movw	r1, #50323	; 0xc493
   23564:	movt	r1, #4
   23568:	b	23764 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   2356c:	ldr	r0, [r9, #16]
   23570:	bl	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   23574:	mov	ip, r0
   23578:	ldr	r0, [r4]
   2357c:	ldr	r1, [sp, #40]	; 0x28
   23580:	ldr	r4, [r1]
   23584:	ldr	r1, [r1, #4]
   23588:	ldr	r3, [r9, #4]
   2358c:	ldr	r2, [r9, #96]	; 0x60
   23590:	ldr	r9, [r9, #100]	; 0x64
   23594:	ldr	r7, [r3]
   23598:	ldr	r3, [r3, #4]
   2359c:	str	r4, [sp, #24]
   235a0:	ldr	r4, [sp, #44]	; 0x2c
   235a4:	str	r1, [sp, #28]
   235a8:	add	r1, sp, #48	; 0x30
   235ac:	str	r1, [sp, #32]
   235b0:	stm	sp, {r2, r9}
   235b4:	str	r3, [sp, #8]
   235b8:	str	r7, [sp, #12]
   235bc:	str	r3, [sp, #16]
   235c0:	movw	r1, #51510	; 0xc936
   235c4:	movt	r1, #4
   235c8:	b	23764 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   235cc:	ldr	r0, [r4]
   235d0:	ldr	r1, [r9, #4]
   235d4:	ldrd	r2, [r9, #96]	; 0x60
   235d8:	mov	ip, r7
   235dc:	ldr	r7, [r1]
   235e0:	ldr	r1, [r1, #4]
   235e4:	stm	sp, {r1, r7}
   235e8:	str	r1, [sp, #8]
   235ec:	str	ip, [sp, #12]
   235f0:	str	ip, [sp, #16]
   235f4:	movw	r1, #51251	; 0xc833
   235f8:	movt	r1, #4
   235fc:	bl	149c0 <fprintf@plt>
   23600:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   23604:	ldr	r0, [r4]
   23608:	ldr	r1, [r9, #4]
   2360c:	ldrd	r2, [r9, #96]	; 0x60
   23610:	mov	ip, r7
   23614:	ldr	r7, [r1]
   23618:	ldr	r1, [r1, #4]
   2361c:	stm	sp, {r1, r7}
   23620:	str	r1, [sp, #8]
   23624:	str	ip, [sp, #12]
   23628:	movw	r1, #51085	; 0xc78d
   2362c:	movt	r1, #4
   23630:	bl	149c0 <fprintf@plt>
   23634:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   23638:	ldr	r0, [r0, #40]	; 0x28
   2363c:	bl	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   23640:	mov	ip, r0
   23644:	add	r1, r9, #48	; 0x30
   23648:	ldrh	r0, [r9, #56]	; 0x38
   2364c:	sub	r3, r0, #5
   23650:	cmp	r3, #2
   23654:	bcs	23710 <__flatcc_fb_gen_c_json_printer@@Base+0x13f0>
   23658:	ldr	r0, [r4]
   2365c:	ldr	r3, [r9, #4]
   23660:	mov	lr, r7
   23664:	ldr	r4, [r9, #96]	; 0x60
   23668:	ldr	r7, [r9, #100]	; 0x64
   2366c:	ldm	r3, {r2, r3}
   23670:	ldm	r1, {r1, r9}
   23674:	str	r1, [sp, #24]
   23678:	str	r9, [sp, #28]
   2367c:	str	lr, [sp, #32]
   23680:	str	r4, [sp]
   23684:	ldr	r4, [sp, #44]	; 0x2c
   23688:	str	r7, [sp, #4]
   2368c:	str	r3, [sp, #8]
   23690:	str	r2, [sp, #12]
   23694:	str	r3, [sp, #16]
   23698:	movw	r1, #50851	; 0xc6a3
   2369c:	movt	r1, #4
   236a0:	b	23764 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   236a4:	ldr	r0, [r9, #16]
   236a8:	bl	22b58 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   236ac:	mov	r2, r0
   236b0:	ldr	r0, [r4]
   236b4:	ldr	r1, [r9, #4]
   236b8:	ldr	r4, [r9, #96]	; 0x60
   236bc:	ldr	r3, [r9, #100]	; 0x64
   236c0:	ldr	r7, [r1]
   236c4:	ldr	r1, [r1, #4]
   236c8:	str	r4, [sp]
   236cc:	ldr	r4, [sp, #44]	; 0x2c
   236d0:	str	r3, [sp, #4]
   236d4:	str	r1, [sp, #8]
   236d8:	str	r7, [sp, #12]
   236dc:	str	r1, [sp, #16]
   236e0:	movw	r1, #50655	; 0xc5df
   236e4:	movt	r1, #4
   236e8:	b	23768 <__flatcc_fb_gen_c_json_printer@@Base+0x1448>
   236ec:	stm	sp, {r1, r7}
   236f0:	str	r1, [sp, #8]
   236f4:	add	r1, sp, #48	; 0x30
   236f8:	str	r1, [sp, #12]
   236fc:	movw	r1, #50465	; 0xc521
   23700:	movt	r1, #4
   23704:	bl	149c0 <fprintf@plt>
   23708:	ldr	r4, [sp, #44]	; 0x2c
   2370c:	b	2376c <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   23710:	cmp	r0, #4
   23714:	bne	238bc <__flatcc_fb_gen_c_json_printer@@Base+0x159c>
   23718:	ldr	r0, [r4]
   2371c:	ldr	r2, [r9, #4]
   23720:	ldr	r4, [r9, #96]	; 0x60
   23724:	ldr	r3, [r9, #100]	; 0x64
   23728:	ldr	r7, [r2]
   2372c:	ldr	r2, [r2, #4]
   23730:	ldm	r1, {r1, r9}
   23734:	str	r1, [sp, #24]
   23738:	str	r9, [sp, #28]
   2373c:	add	r1, sp, #48	; 0x30
   23740:	str	r1, [sp, #32]
   23744:	str	r4, [sp]
   23748:	ldr	r4, [sp, #44]	; 0x2c
   2374c:	str	r3, [sp, #4]
   23750:	str	r2, [sp, #8]
   23754:	str	r7, [sp, #12]
   23758:	str	r2, [sp, #16]
   2375c:	movw	r1, #50940	; 0xc6fc
   23760:	movt	r1, #4
   23764:	mov	r2, ip
   23768:	bl	149c0 <fprintf@plt>
   2376c:	adds	r8, r8, #1
   23770:	adc	r6, r6, #0
   23774:	ldrd	r0, [sl]
   23778:	subs	r0, r8, r0
   2377c:	sbcs	r0, r6, r1
   23780:	bcc	231b4 <__flatcc_fb_gen_c_json_printer@@Base+0xe94>
   23784:	ldr	r3, [r4]
   23788:	movw	r0, #52095	; 0xcb7f
   2378c:	movt	r0, #4
   23790:	mov	r1, #4
   23794:	mov	r2, #1
   23798:	bl	14954 <fwrite@plt>
   2379c:	ldr	r0, [r4]
   237a0:	movw	r1, #51887	; 0xcaaf
   237a4:	movt	r1, #4
   237a8:	sub	r2, fp, #256	; 0x100
   237ac:	mov	r3, r2
   237b0:	bl	149c0 <fprintf@plt>
   237b4:	cmp	r5, #0
   237b8:	beq	237c4 <__flatcc_fb_gen_c_json_printer@@Base+0x14a4>
   237bc:	mov	r0, r5
   237c0:	bl	14900 <free@plt>
   237c4:	sub	sp, fp, #28
   237c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237cc:	movw	r0, #8368	; 0x20b0
   237d0:	movt	r0, #6
   237d4:	ldr	r0, [r0]
   237d8:	movw	r1, #51818	; 0xca6a
   237dc:	movt	r1, #4
   237e0:	str	r1, [sp]
   237e4:	movw	r1, #25975	; 0x6577
   237e8:	movt	r1, #3
   237ec:	movw	r4, #48101	; 0xbbe5
   237f0:	movt	r4, #4
   237f4:	mov	r2, r4
   237f8:	movw	r3, #543	; 0x21f
   237fc:	bl	149c0 <fprintf@plt>
   23800:	movw	r0, #29885	; 0x74bd
   23804:	movt	r0, #4
   23808:	movw	r3, #50019	; 0xc363
   2380c:	movt	r3, #4
   23810:	mov	r1, r4
   23814:	movw	r2, #543	; 0x21f
   23818:	bl	14a80 <__assert_fail@plt>
   2381c:	movw	r0, #8368	; 0x20b0
   23820:	movt	r0, #6
   23824:	ldr	r0, [r0]
   23828:	movw	r1, #42421	; 0xa5b5
   2382c:	movt	r1, #4
   23830:	str	r1, [sp]
   23834:	movw	r1, #25975	; 0x6577
   23838:	movt	r1, #3
   2383c:	movw	r4, #48101	; 0xbbe5
   23840:	movt	r4, #4
   23844:	mov	r2, r4
   23848:	movw	r3, #406	; 0x196
   2384c:	bl	149c0 <fprintf@plt>
   23850:	movw	r0, #29885	; 0x74bd
   23854:	movt	r0, #4
   23858:	movw	r3, #50019	; 0xc363
   2385c:	movt	r3, #4
   23860:	mov	r1, r4
   23864:	movw	r2, #406	; 0x196
   23868:	bl	14a80 <__assert_fail@plt>
   2386c:	movw	r0, #8368	; 0x20b0
   23870:	movt	r0, #6
   23874:	ldr	r0, [r0]
   23878:	movw	r1, #51359	; 0xc89f
   2387c:	movt	r1, #4
   23880:	str	r1, [sp]
   23884:	movw	r1, #25975	; 0x6577
   23888:	movt	r1, #3
   2388c:	movw	r4, #48101	; 0xbbe5
   23890:	movt	r4, #4
   23894:	mov	r2, r4
   23898:	mov	r3, #504	; 0x1f8
   2389c:	bl	149c0 <fprintf@plt>
   238a0:	movw	r0, #29885	; 0x74bd
   238a4:	movt	r0, #4
   238a8:	movw	r3, #50019	; 0xc363
   238ac:	movt	r3, #4
   238b0:	mov	r1, r4
   238b4:	mov	r2, #504	; 0x1f8
   238b8:	bl	14a80 <__assert_fail@plt>
   238bc:	movw	r0, #8368	; 0x20b0
   238c0:	movt	r0, #6
   238c4:	ldr	r0, [r0]
   238c8:	movw	r1, #51029	; 0xc755
   238cc:	movt	r1, #4
   238d0:	str	r1, [sp]
   238d4:	movw	r1, #25975	; 0x6577
   238d8:	movt	r1, #3
   238dc:	movw	r4, #48101	; 0xbbe5
   238e0:	movt	r4, #4
   238e4:	mov	r2, r4
   238e8:	movw	r3, #483	; 0x1e3
   238ec:	bl	149c0 <fprintf@plt>
   238f0:	movw	r0, #29885	; 0x74bd
   238f4:	movt	r0, #4
   238f8:	movw	r3, #50019	; 0xc363
   238fc:	movt	r3, #4
   23900:	mov	r1, r4
   23904:	movw	r2, #483	; 0x1e3
   23908:	bl	14a80 <__assert_fail@plt>
   2390c:	movw	r0, #8368	; 0x20b0
   23910:	movt	r0, #6
   23914:	ldr	r0, [r0]
   23918:	movw	r1, #49977	; 0xc339
   2391c:	movt	r1, #4
   23920:	str	r1, [sp]
   23924:	movw	r1, #25975	; 0x6577
   23928:	movt	r1, #3
   2392c:	movw	r4, #48101	; 0xbbe5
   23930:	movt	r4, #4
   23934:	mov	r2, r4
   23938:	movw	r3, #361	; 0x169
   2393c:	bl	149c0 <fprintf@plt>
   23940:	movw	r0, #29885	; 0x74bd
   23944:	movt	r0, #4
   23948:	movw	r3, #50019	; 0xc363
   2394c:	movt	r3, #4
   23950:	mov	r1, r4
   23954:	movw	r2, #361	; 0x169
   23958:	bl	14a80 <__assert_fail@plt>
   2395c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23960:	add	fp, sp, #24
   23964:	sub	sp, sp, #224	; 0xe0
   23968:	mov	r5, r1
   2396c:	mov	r4, r0
   23970:	mov	r6, sp
   23974:	mov	r0, r6
   23978:	mov	r1, #0
   2397c:	mov	r2, #220	; 0xdc
   23980:	bl	149d8 <memset@plt>
   23984:	mov	r0, r5
   23988:	mov	r1, r6
   2398c:	bl	2269c <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   23990:	ldr	r0, [r4, #204]	; 0xcc
   23994:	ldr	r1, [r4, #208]	; 0xd0
   23998:	ldr	r2, [r1, #160]	; 0xa0
   2399c:	movw	r1, #52100	; 0xcb84
   239a0:	movt	r1, #4
   239a4:	bl	149c0 <fprintf@plt>
   239a8:	ldr	r0, [r4, #204]	; 0xcc
   239ac:	movw	r1, #52186	; 0xcbda
   239b0:	movt	r1, #4
   239b4:	mov	r2, r6
   239b8:	bl	149c0 <fprintf@plt>
   239bc:	ldr	r3, [r4, #204]	; 0xcc
   239c0:	ldr	r0, [r4, #208]	; 0xd0
   239c4:	ldrh	r1, [r0, #16]
   239c8:	cmp	r1, #2
   239cc:	bne	239f0 <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
   239d0:	ldrd	r6, [r0, #8]
   239d4:	movw	r1, #52368	; 0xcc90
   239d8:	movt	r1, #4
   239dc:	mov	r0, r3
   239e0:	mov	r2, r7
   239e4:	mov	r3, r6
   239e8:	bl	149c0 <fprintf@plt>
   239ec:	b	23a04 <__flatcc_fb_gen_c_json_printer@@Base+0x16e4>
   239f0:	movw	r0, #52378	; 0xcc9a
   239f4:	movt	r0, #4
   239f8:	mov	r1, #3
   239fc:	mov	r2, #1
   23a00:	bl	14954 <fwrite@plt>
   23a04:	ldr	r3, [r4, #204]	; 0xcc
   23a08:	movw	r0, #52096	; 0xcb80
   23a0c:	movt	r0, #4
   23a10:	mov	r1, #3
   23a14:	mov	r2, #1
   23a18:	bl	14954 <fwrite@plt>
   23a1c:	sub	sp, fp, #24
   23a20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23a24:	ldr	r1, [r0, #212]	; 0xd4
   23a28:	ldr	r1, [r1, #140]	; 0x8c
   23a2c:	cmp	r1, #0
   23a30:	bxeq	lr
   23a34:	ldr	r3, [r0, #204]	; 0xcc
   23a38:	movw	r0, #50196	; 0xc414
   23a3c:	movt	r0, #3
   23a40:	mov	r1, #36	; 0x24
   23a44:	mov	r2, #1
   23a48:	b	14954 <fwrite@plt>

00023a4c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   23a4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23a50:	add	fp, sp, #24
   23a54:	sub	sp, sp, #232	; 0xe8
   23a58:	mov	r8, r3
   23a5c:	mov	r4, r2
   23a60:	mov	r6, r1
   23a64:	mov	r7, r0
   23a68:	mov	r5, sp
   23a6c:	mov	r0, r5
   23a70:	bl	2f1a4 <flatcc_builder_init@@Base>
   23a74:	mov	r0, r5
   23a78:	mov	r1, r7
   23a7c:	mov	r2, r6
   23a80:	bl	23ac4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   23a84:	ldr	r2, [r8]
   23a88:	mov	r0, r5
   23a8c:	mov	r1, r4
   23a90:	bl	3207c <flatcc_builder_copy_buffer@@Base>
   23a94:	cmp	r0, #0
   23a98:	movne	r0, r4
   23a9c:	blne	23bf8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   23aa0:	mov	r5, sp
   23aa4:	mov	r0, r5
   23aa8:	bl	31f98 <flatcc_builder_get_buffer_size@@Base>
   23aac:	str	r0, [r8]
   23ab0:	mov	r0, r5
   23ab4:	bl	2f31c <flatcc_builder_clear@@Base>
   23ab8:	mov	r0, r4
   23abc:	sub	sp, fp, #24
   23ac0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23ac4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23ac8:	add	fp, sp, #24
   23acc:	sub	sp, sp, #48	; 0x30
   23ad0:	mov	r5, r2
   23ad4:	mov	r7, r1
   23ad8:	mov	r4, r0
   23adc:	ldr	r3, [r2, #60]	; 0x3c
   23ae0:	ldr	r2, [r1, #184]	; 0xb8
   23ae4:	add	r0, sp, #4
   23ae8:	mov	r1, r5
   23aec:	bl	23e6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   23af0:	mvn	r6, #0
   23af4:	cmp	r0, #0
   23af8:	bne	23bec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   23afc:	ldr	r0, [sp, #8]
   23b00:	cmp	r0, #1
   23b04:	blt	23b20 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd4>
   23b08:	lsl	r0, r0, #2
   23b0c:	bl	1496c <malloc@plt>
   23b10:	cmp	r0, #0
   23b14:	beq	23be4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x198>
   23b18:	mov	r8, r0
   23b1c:	b	23b24 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8>
   23b20:	mov	r8, #0
   23b24:	ldr	r0, [r7, #188]	; 0xbc
   23b28:	cmp	r0, #0
   23b2c:	beq	23b3c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0>
   23b30:	mov	r0, r4
   23b34:	bl	23fcc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
   23b38:	b	23b44 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf8>
   23b3c:	mov	r0, r4
   23b40:	bl	23ff0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x334>
   23b44:	ldrh	r0, [r5, #16]
   23b48:	cmp	r0, #2
   23b4c:	bne	23b64 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x118>
   23b50:	ldrd	r2, [r5, #8]
   23b54:	mov	r0, r4
   23b58:	mov	r1, r2
   23b5c:	mov	r2, r3
   23b60:	bl	24014 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   23b64:	ldrh	r0, [r5, #32]
   23b68:	cmp	r0, #2
   23b6c:	bne	23b84 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x138>
   23b70:	ldrd	r2, [r5, #24]
   23b74:	mov	r0, r4
   23b78:	mov	r1, r2
   23b7c:	mov	r2, r3
   23b80:	bl	24034 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x378>
   23b84:	ldr	r2, [sp, #8]
   23b88:	ldr	r1, [sp, #20]
   23b8c:	mov	r0, r4
   23b90:	mov	r3, r8
   23b94:	bl	24054 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x398>
   23b98:	ldr	r2, [sp, #12]
   23b9c:	ldr	r1, [sp, #24]
   23ba0:	mov	r0, r4
   23ba4:	mov	r3, r8
   23ba8:	bl	24118 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x45c>
   23bac:	ldr	r1, [r5, #52]	; 0x34
   23bb0:	mov	r0, r4
   23bb4:	mov	r2, r8
   23bb8:	bl	2420c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x550>
   23bbc:	mov	r0, r4
   23bc0:	bl	24230 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x574>
   23bc4:	add	r0, sp, #4
   23bc8:	bl	23f74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   23bcc:	mov	r6, #0
   23bd0:	cmp	r8, #0
   23bd4:	beq	23bec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   23bd8:	mov	r0, r8
   23bdc:	bl	14900 <free@plt>
   23be0:	b	23bec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   23be4:	add	r0, sp, #4
   23be8:	bl	23f74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   23bec:	mov	r0, r6
   23bf0:	sub	sp, fp, #24
   23bf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23bf8:	push	{r4, r5, fp, lr}
   23bfc:	add	fp, sp, #8
   23c00:	bl	254e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1824>
   23c04:	bl	25518 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x185c>
   23c08:	mov	r4, r0
   23c0c:	bl	25598 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18dc>
   23c10:	cmp	r0, #0
   23c14:	popeq	{r4, r5, fp, pc}
   23c18:	mov	r5, #0
   23c1c:	mov	r0, r4
   23c20:	mov	r1, r5
   23c24:	bl	255ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18f0>
   23c28:	bl	255fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1940>
   23c2c:	bl	2567c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19c0>
   23c30:	add	r5, r5, #1
   23c34:	mov	r0, r4
   23c38:	bl	25598 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18dc>
   23c3c:	cmp	r5, r0
   23c40:	bcc	23c1c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1d0>
   23c44:	pop	{r4, r5, fp, pc}

00023c48 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   23c48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23c4c:	add	fp, sp, #24
   23c50:	sub	sp, sp, #232	; 0xe8
   23c54:	mov	r5, r2
   23c58:	mov	r4, r1
   23c5c:	mov	r6, r0
   23c60:	mov	r7, sp
   23c64:	mov	r0, r7
   23c68:	bl	2f1a4 <flatcc_builder_init@@Base>
   23c6c:	mov	r0, r7
   23c70:	mov	r1, r6
   23c74:	mov	r2, r4
   23c78:	bl	23ac4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   23c7c:	mov	r4, #0
   23c80:	cmp	r0, #0
   23c84:	bne	23ca8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   23c88:	mov	r0, sp
   23c8c:	mov	r1, r5
   23c90:	bl	320c8 <flatcc_builder_finalize_buffer@@Base>
   23c94:	cmp	r0, #0
   23c98:	beq	23ca8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   23c9c:	mov	r5, r0
   23ca0:	bl	23bf8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   23ca4:	mov	r4, r5
   23ca8:	mov	r0, sp
   23cac:	bl	2f31c <flatcc_builder_clear@@Base>
   23cb0:	mov	r0, r4
   23cb4:	sub	sp, fp, #24
   23cb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00023cbc <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   23cbc:	push	{r4, r5, r6, r7, fp, lr}
   23cc0:	add	fp, sp, #16
   23cc4:	sub	sp, sp, #8
   23cc8:	mov	r5, r1
   23ccc:	mov	r6, r0
   23cd0:	bl	23d7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   23cd4:	cmp	r0, #0
   23cd8:	beq	23d28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c>
   23cdc:	mov	r4, r0
   23ce0:	add	r2, sp, #4
   23ce4:	mov	r0, r6
   23ce8:	mov	r1, r5
   23cec:	bl	23c48 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   23cf0:	cmp	r0, #0
   23cf4:	beq	23d30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x74>
   23cf8:	mov	r5, r0
   23cfc:	ldr	r7, [sp, #4]
   23d00:	mov	r1, #1
   23d04:	mov	r2, r7
   23d08:	mov	r3, r4
   23d0c:	bl	14954 <fwrite@plt>
   23d10:	mov	r6, #0
   23d14:	cmp	r7, r0
   23d18:	bne	23d54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x98>
   23d1c:	mov	r0, r5
   23d20:	bl	14900 <free@plt>
   23d24:	b	23d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x84>
   23d28:	mvn	r6, #0
   23d2c:	b	23d48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8c>
   23d30:	movw	r0, #54624	; 0xd560
   23d34:	movt	r0, #4
   23d38:	bl	14960 <puts@plt>
   23d3c:	mvn	r6, #0
   23d40:	mov	r0, r4
   23d44:	bl	23e50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x194>
   23d48:	mov	r0, r6
   23d4c:	sub	sp, fp, #16
   23d50:	pop	{r4, r5, r6, r7, fp, pc}
   23d54:	movw	r0, #8368	; 0x20b0
   23d58:	movt	r0, #6
   23d5c:	ldr	r3, [r0]
   23d60:	movw	r0, #52508	; 0xcd1c
   23d64:	movt	r0, #4
   23d68:	mov	r1, #38	; 0x26
   23d6c:	mov	r2, #1
   23d70:	bl	14954 <fwrite@plt>
   23d74:	mvn	r6, #0
   23d78:	b	23d1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x60>
   23d7c:	push	{r4, r5, r6, sl, fp, lr}
   23d80:	add	fp, sp, #16
   23d84:	sub	sp, sp, #8
   23d88:	ldr	r2, [r0, #108]	; 0x6c
   23d8c:	ldr	r0, [r0, #216]	; 0xd8
   23d90:	movw	r4, #26232	; 0x6678
   23d94:	movt	r4, #3
   23d98:	cmp	r0, #0
   23d9c:	movne	r4, r0
   23da0:	cmp	r2, #0
   23da4:	beq	23db8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc>
   23da8:	movw	r0, #8372	; 0x20b4
   23dac:	movt	r0, #6
   23db0:	ldr	r5, [r0]
   23db4:	b	23e24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   23db8:	ldr	r5, [r1, #160]	; 0xa0
   23dbc:	mov	r0, r5
   23dc0:	bl	149a8 <strlen@plt>
   23dc4:	mov	r6, r0
   23dc8:	mov	r0, r4
   23dcc:	bl	149a8 <strlen@plt>
   23dd0:	mov	r1, r0
   23dd4:	mov	r0, #1
   23dd8:	movw	r2, #24952	; 0x6178
   23ddc:	movt	r2, #3
   23de0:	str	r2, [sp]
   23de4:	str	r0, [sp, #4]
   23de8:	mov	r0, r4
   23dec:	mov	r2, r5
   23df0:	mov	r3, r6
   23df4:	bl	27b20 <__flatcc_fb_create_join_path_n@@Base>
   23df8:	mov	r4, r0
   23dfc:	bl	25a34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d78>
   23e00:	movw	r1, #25279	; 0x62bf
   23e04:	movt	r1, #3
   23e08:	mov	r0, r4
   23e0c:	bl	148f4 <fopen@plt>
   23e10:	mov	r5, r0
   23e14:	cmp	r0, #0
   23e18:	beq	23e30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   23e1c:	mov	r0, r4
   23e20:	bl	14900 <free@plt>
   23e24:	mov	r0, r5
   23e28:	sub	sp, fp, #16
   23e2c:	pop	{r4, r5, r6, sl, fp, pc}
   23e30:	movw	r0, #8368	; 0x20b0
   23e34:	movt	r0, #6
   23e38:	ldr	r0, [r0]
   23e3c:	movw	r1, #54541	; 0xd50d
   23e40:	movt	r1, #4
   23e44:	mov	r2, r4
   23e48:	bl	149c0 <fprintf@plt>
   23e4c:	b	23e1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   23e50:	cmp	r0, #0
   23e54:	movwne	r1, #8372	; 0x20b4
   23e58:	movtne	r1, #6
   23e5c:	ldrne	r1, [r1]
   23e60:	cmpne	r1, r0
   23e64:	bxeq	lr
   23e68:	b	14a08 <fclose@plt>
   23e6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23e70:	add	fp, sp, #24
   23e74:	mov	r8, r3
   23e78:	mov	r4, r0
   23e7c:	mov	r0, #0
   23e80:	vmov.i32	q8, #0	; 0x00000000
   23e84:	str	r2, [r4]
   23e88:	str	r0, [r4, #36]	; 0x24
   23e8c:	str	r1, [r4, #40]	; 0x28
   23e90:	add	r0, r4, #20
   23e94:	vst1.32	{d16-d17}, [r0]
   23e98:	add	r0, r4, #4
   23e9c:	vst1.32	{d16-d17}, [r0]
   23ea0:	movw	r1, #16976	; 0x4250
   23ea4:	movt	r1, #2
   23ea8:	mov	r0, r3
   23eac:	mov	r2, r4
   23eb0:	bl	2719c <fb_scope_table_visit@@Base>
   23eb4:	ldr	r5, [r4, #4]
   23eb8:	mov	r0, r5
   23ebc:	mov	r1, #8
   23ec0:	bl	148d0 <calloc@plt>
   23ec4:	str	r0, [r4, #16]
   23ec8:	ldr	r7, [r4, #8]
   23ecc:	mov	r0, r7
   23ed0:	mov	r1, #8
   23ed4:	bl	148d0 <calloc@plt>
   23ed8:	str	r0, [r4, #20]
   23edc:	ldr	r6, [r4, #12]
   23ee0:	mov	r0, r6
   23ee4:	bl	1496c <malloc@plt>
   23ee8:	ldr	r1, [r4, #16]
   23eec:	ldr	r2, [r4, #20]
   23ef0:	add	r3, r4, #24
   23ef4:	stm	r3, {r0, r1, r2}
   23ef8:	str	r0, [r4, #36]	; 0x24
   23efc:	cmp	r5, #1
   23f00:	blt	23f0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x250>
   23f04:	cmp	r1, #0
   23f08:	beq	23f30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x274>
   23f0c:	cmp	r7, #1
   23f10:	blt	23f20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x264>
   23f14:	ldr	r1, [r4, #20]
   23f18:	cmp	r1, #0
   23f1c:	beq	23f30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x274>
   23f20:	cmp	r6, #0
   23f24:	beq	23f40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x284>
   23f28:	cmp	r0, #0
   23f2c:	bne	23f40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x284>
   23f30:	mov	r0, r4
   23f34:	bl	23f74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   23f38:	mvn	r0, #0
   23f3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23f40:	movw	r1, #16996	; 0x4264
   23f44:	movt	r1, #2
   23f48:	mov	r0, r8
   23f4c:	mov	r2, r4
   23f50:	bl	2719c <fb_scope_table_visit@@Base>
   23f54:	ldr	r1, [r4, #4]
   23f58:	ldr	r0, [r4, #16]
   23f5c:	bl	24278 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bc>
   23f60:	ldr	r1, [r4, #8]
   23f64:	ldr	r0, [r4, #20]
   23f68:	bl	24278 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bc>
   23f6c:	mov	r0, #0
   23f70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23f74:	push	{r4, sl, fp, lr}
   23f78:	add	fp, sp, #8
   23f7c:	mov	r4, r0
   23f80:	ldr	r0, [r0, #16]
   23f84:	cmp	r0, #0
   23f88:	beq	23f90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d4>
   23f8c:	bl	14900 <free@plt>
   23f90:	ldr	r0, [r4, #20]
   23f94:	cmp	r0, #0
   23f98:	beq	23fa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e4>
   23f9c:	bl	14900 <free@plt>
   23fa0:	ldr	r0, [r4, #24]
   23fa4:	cmp	r0, #0
   23fa8:	beq	23fb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f4>
   23fac:	bl	14900 <free@plt>
   23fb0:	vmov.i32	q8, #0	; 0x00000000
   23fb4:	mov	r0, #28
   23fb8:	add	r1, r4, #16
   23fbc:	vst1.32	{d16-d17}, [r4], r0
   23fc0:	vst1.32	{d16-d17}, [r4]
   23fc4:	vst1.32	{d16-d17}, [r1]
   23fc8:	pop	{r4, sl, fp, pc}
   23fcc:	push	{r4, sl, fp, lr}
   23fd0:	add	fp, sp, #8
   23fd4:	mov	r4, r0
   23fd8:	bl	244c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x808>
   23fdc:	cmp	r0, #0
   23fe0:	popne	{r4, sl, fp, pc}
   23fe4:	mov	r0, r4
   23fe8:	pop	{r4, sl, fp, lr}
   23fec:	b	244d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81c>
   23ff0:	push	{r4, sl, fp, lr}
   23ff4:	add	fp, sp, #8
   23ff8:	mov	r4, r0
   23ffc:	bl	244e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x824>
   24000:	cmp	r0, #0
   24004:	popne	{r4, sl, fp, pc}
   24008:	mov	r0, r4
   2400c:	pop	{r4, sl, fp, lr}
   24010:	b	244d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81c>
   24014:	push	{r4, sl, fp, lr}
   24018:	add	fp, sp, #8
   2401c:	mov	r4, r0
   24020:	bl	31bf4 <flatcc_builder_create_string@@Base>
   24024:	mov	r1, r0
   24028:	mov	r0, r4
   2402c:	pop	{r4, sl, fp, lr}
   24030:	b	244f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x838>
   24034:	push	{r4, sl, fp, lr}
   24038:	add	fp, sp, #8
   2403c:	mov	r4, r0
   24040:	bl	31bf4 <flatcc_builder_create_string@@Base>
   24044:	mov	r1, r0
   24048:	mov	r0, r4
   2404c:	pop	{r4, sl, fp, lr}
   24050:	b	2451c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x860>
   24054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24058:	add	fp, sp, #28
   2405c:	push	{r3}		; (str r3, [sp, #-4]!)
   24060:	mov	r9, r2
   24064:	mov	r6, r0
   24068:	cmp	r2, #1
   2406c:	blt	24100 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x444>
   24070:	add	r5, r1, #4
   24074:	mov	sl, r9
   24078:	ldr	r4, [sp]
   2407c:	ldr	r7, [r5, #-4]
   24080:	mov	r0, r6
   24084:	bl	24544 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x888>
   24088:	ldr	r1, [r5]
   2408c:	mov	r0, r6
   24090:	bl	2454c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x890>
   24094:	mov	r0, r6
   24098:	bl	2456c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8b0>
   2409c:	mov	r0, r6
   240a0:	mov	r1, r7
   240a4:	bl	24570 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8b4>
   240a8:	mov	r0, r6
   240ac:	bl	247a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xaec>
   240b0:	ldrh	r8, [r7, #8]
   240b4:	cmp	r8, #1
   240b8:	bne	240c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40c>
   240bc:	ldr	r1, [r7, #112]	; 0x70
   240c0:	mov	r0, r6
   240c4:	bl	247c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb0c>
   240c8:	sub	r0, r8, #1
   240cc:	clz	r0, r0
   240d0:	lsr	r1, r0, #5
   240d4:	mov	r0, r6
   240d8:	bl	24804 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb48>
   240dc:	ldrh	r1, [r7, #104]	; 0x68
   240e0:	mov	r0, r6
   240e4:	bl	24840 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb84>
   240e8:	mov	r0, r6
   240ec:	bl	2487c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc0>
   240f0:	str	r0, [r4], #4
   240f4:	add	r5, r5, #8
   240f8:	subs	sl, sl, #1
   240fc:	bne	2407c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c0>
   24100:	mov	r0, r6
   24104:	ldr	r1, [sp]
   24108:	mov	r2, r9
   2410c:	sub	sp, fp, #28
   24110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24114:	b	248cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc10>
   24118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2411c:	add	fp, sp, #28
   24120:	sub	sp, sp, #20
   24124:	str	r3, [sp, #12]
   24128:	mov	sl, r2
   2412c:	str	r1, [sp, #16]
   24130:	mov	r6, r0
   24134:	bl	250f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1438>
   24138:	cmp	sl, #1
   2413c:	blt	241fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x540>
   24140:	mov	r5, #0
   24144:	ldr	r4, [sp, #16]
   24148:	ldr	r8, [r4, r5, lsl #3]!
   2414c:	ldrh	r9, [r8, #8]
   24150:	mov	r0, r6
   24154:	bl	250f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x143c>
   24158:	ldr	r1, [r4, #4]
   2415c:	mov	r0, r6
   24160:	bl	250fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1440>
   24164:	mov	r0, r6
   24168:	bl	2511c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1460>
   2416c:	ldr	r4, [r8, #20]
   24170:	cmp	r4, #0
   24174:	beq	241a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
   24178:	cmp	r9, #4
   2417c:	mov	r7, #0
   24180:	ldr	r0, [sp, #12]
   24184:	moveq	r7, r0
   24188:	mov	r0, r6
   2418c:	mov	r1, r4
   24190:	mov	r2, r7
   24194:	bl	25120 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1464>
   24198:	ldr	r4, [r4]
   2419c:	cmp	r4, #0
   241a0:	bne	24188 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   241a4:	mov	r0, r6
   241a8:	bl	25188 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14cc>
   241ac:	sub	r0, r9, #4
   241b0:	clz	r0, r0
   241b4:	lsr	r1, r0, #5
   241b8:	mov	r0, r6
   241bc:	bl	251a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14ec>
   241c0:	ldr	r2, [r8, #40]	; 0x28
   241c4:	ldr	r3, [r8, #44]	; 0x2c
   241c8:	ldr	r0, [r8, #48]	; 0x30
   241cc:	ldr	r1, [r8, #52]	; 0x34
   241d0:	stm	sp, {r0, r1}
   241d4:	mov	r0, r6
   241d8:	bl	24a88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdcc>
   241dc:	mov	r1, r0
   241e0:	mov	r0, r6
   241e4:	bl	251e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1528>
   241e8:	mov	r0, r6
   241ec:	bl	2520c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1550>
   241f0:	add	r5, r5, #1
   241f4:	cmp	r5, sl
   241f8:	bne	24144 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x488>
   241fc:	mov	r0, r6
   24200:	sub	sp, fp, #28
   24204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24208:	b	2522c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1570>
   2420c:	cmp	r1, #0
   24210:	bxeq	lr
   24214:	ldrh	r3, [r1, #8]
   24218:	cmp	r3, #0
   2421c:	beq	24224 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>
   24220:	bx	lr
   24224:	ldr	r1, [r1, #124]	; 0x7c
   24228:	ldr	r1, [r2, r1, lsl #2]
   2422c:	b	25464 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17a8>
   24230:	push	{r4, sl, fp, lr}
   24234:	add	fp, sp, #8
   24238:	mov	r4, r0
   2423c:	bl	25490 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17d4>
   24240:	mov	r1, r0
   24244:	mov	r0, r4
   24248:	pop	{r4, sl, fp, lr}
   2424c:	b	2548c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17d0>
   24250:	mov	r2, r0
   24254:	add	r0, r1, #4
   24258:	movw	r1, #17084	; 0x42bc
   2425c:	movt	r1, #2
   24260:	b	26ba8 <fb_symbol_table_visit@@Base>
   24264:	mov	r2, r0
   24268:	add	r0, r1, #4
   2426c:	movw	r1, #17344	; 0x43c0
   24270:	movt	r1, #2
   24274:	b	26ba8 <fb_symbol_table_visit@@Base>
   24278:	push	{r4, r5, fp, lr}
   2427c:	add	fp, sp, #8
   24280:	mov	r4, r1
   24284:	mov	r5, r0
   24288:	movw	r3, #17592	; 0x44b8
   2428c:	movt	r3, #2
   24290:	mov	r2, #8
   24294:	bl	14a44 <qsort@plt>
   24298:	cmp	r4, #1
   2429c:	poplt	{r4, r5, fp, pc}
   242a0:	mov	r0, #0
   242a4:	ldr	r1, [r5, r0, lsl #3]
   242a8:	str	r0, [r1, #124]	; 0x7c
   242ac:	add	r0, r0, #1
   242b0:	cmp	r4, r0
   242b4:	bne	242a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5e8>
   242b8:	pop	{r4, r5, fp, pc}
   242bc:	push	{r4, r5, fp, lr}
   242c0:	add	fp, sp, #8
   242c4:	mov	r5, r1
   242c8:	mov	r4, r0
   242cc:	ldr	r0, [r0, #40]	; 0x28
   242d0:	bl	24374 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b8>
   242d4:	cmp	r0, #0
   242d8:	popeq	{r4, r5, fp, pc}
   242dc:	ldr	r2, [r4]
   242e0:	mov	r1, #1
   242e4:	cmp	r2, #0
   242e8:	beq	24324 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x668>
   242ec:	ldr	r0, [r0, #12]
   242f0:	ldr	r0, [r0]
   242f4:	cmp	r0, #0
   242f8:	beq	24324 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x668>
   242fc:	mov	r1, #0
   24300:	ldr	r2, [r0]
   24304:	ldr	r0, [r0, #4]
   24308:	ldr	r0, [r0, #4]
   2430c:	add	r0, r1, r0
   24310:	add	r1, r0, #1
   24314:	cmp	r2, #0
   24318:	mov	r0, r2
   2431c:	bne	24300 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x644>
   24320:	add	r1, r1, #1
   24324:	ldr	r0, [r5, #4]
   24328:	ldr	r0, [r0, #4]
   2432c:	add	r0, r1, r0
   24330:	ldr	r1, [r4, #12]
   24334:	add	r0, r0, r1
   24338:	str	r0, [r4, #12]
   2433c:	ldrh	r0, [r5, #8]
   24340:	sub	r1, r0, #3
   24344:	cmp	r1, #2
   24348:	bcc	24364 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6a8>
   2434c:	cmp	r0, #1
   24350:	ldrls	r0, [r4, #4]
   24354:	addls	r0, r0, #1
   24358:	strls	r0, [r4, #4]
   2435c:	popls	{r4, r5, fp, pc}
   24360:	pop	{r4, r5, fp, pc}
   24364:	ldr	r0, [r4, #8]
   24368:	add	r0, r0, #1
   2436c:	str	r0, [r4, #8]
   24370:	pop	{r4, r5, fp, pc}
   24374:	push	{r4, sl, fp, lr}
   24378:	add	fp, sp, #8
   2437c:	mov	r4, r1
   24380:	ldrh	r1, [r1, #8]
   24384:	cmp	r1, #4
   24388:	movhi	r0, #0
   2438c:	pophi	{r4, sl, fp, pc}
   24390:	ldr	r1, [r4, #16]
   24394:	add	r0, r0, #172	; 0xac
   24398:	bl	243a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6ec>
   2439c:	cmp	r0, #0
   243a0:	movne	r0, r4
   243a4:	pop	{r4, sl, fp, pc}
   243a8:	push	{fp, lr}
   243ac:	mov	fp, sp
   243b0:	bl	264a4 <ptr_set_find_item@@Base>
   243b4:	cmp	r0, #0
   243b8:	movwne	r0, #1
   243bc:	pop	{fp, pc}
   243c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   243c4:	add	fp, sp, #28
   243c8:	sub	sp, sp, #4
   243cc:	mov	r9, r1
   243d0:	mov	sl, r0
   243d4:	ldr	r0, [r0, #40]	; 0x28
   243d8:	bl	24374 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b8>
   243dc:	cmp	r0, #0
   243e0:	beq	244b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7f4>
   243e4:	ldr	r1, [sl]
   243e8:	ldr	r8, [sl, #36]	; 0x24
   243ec:	cmp	r1, #0
   243f0:	mov	r6, r8
   243f4:	beq	2443c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x780>
   243f8:	ldr	r0, [r0, #12]
   243fc:	ldr	r5, [r0]
   24400:	cmp	r5, #0
   24404:	mov	r6, r8
   24408:	beq	2443c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x780>
   2440c:	mov	r4, #46	; 0x2e
   24410:	mov	r6, r8
   24414:	ldr	r0, [r5, #4]
   24418:	ldm	r0, {r1, r7}
   2441c:	mov	r0, r6
   24420:	mov	r2, r7
   24424:	bl	1490c <memcpy@plt>
   24428:	strb	r4, [r6, r7]!
   2442c:	add	r6, r6, #1
   24430:	ldr	r5, [r5]
   24434:	cmp	r5, #0
   24438:	bne	24414 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x758>
   2443c:	ldr	r0, [r9, #4]
   24440:	ldm	r0, {r1, r7}
   24444:	mov	r0, r6
   24448:	mov	r2, r7
   2444c:	bl	1490c <memcpy@plt>
   24450:	mov	r0, #0
   24454:	strb	r0, [r6, r7]!
   24458:	add	r0, r6, #1
   2445c:	str	r0, [sl, #36]	; 0x24
   24460:	ldrh	r0, [r9, #8]
   24464:	sub	r1, r0, #3
   24468:	cmp	r1, #2
   2446c:	bcc	24498 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7dc>
   24470:	cmp	r0, #1
   24474:	bhi	244b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7f4>
   24478:	ldr	r0, [sl, #28]
   2447c:	str	r9, [r0]
   24480:	ldr	r0, [sl, #28]
   24484:	str	r8, [r0, #4]
   24488:	add	r0, r0, #8
   2448c:	str	r0, [sl, #28]
   24490:	sub	sp, fp, #28
   24494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24498:	ldr	r0, [sl, #32]
   2449c:	str	r9, [r0]
   244a0:	ldr	r0, [sl, #32]
   244a4:	str	r8, [r0, #4]
   244a8:	add	r0, r0, #8
   244ac:	str	r0, [sl, #32]
   244b0:	sub	sp, fp, #28
   244b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244b8:	ldr	r1, [r1, #4]
   244bc:	ldr	r0, [r0, #4]
   244c0:	b	148e8 <strcmp@plt>
   244c4:	movw	r1, #52547	; 0xcd43
   244c8:	movt	r1, #4
   244cc:	mov	r2, #0
   244d0:	mov	r3, #2
   244d4:	b	2fab4 <flatcc_builder_start_buffer@@Base>
   244d8:	mov	r1, #5
   244dc:	b	3079c <flatcc_builder_start_table@@Base>
   244e0:	movw	r1, #52547	; 0xcd43
   244e4:	movt	r1, #4
   244e8:	mov	r2, #0
   244ec:	mov	r3, #0
   244f0:	b	2fab4 <flatcc_builder_start_buffer@@Base>
   244f4:	push	{r4, sl, fp, lr}
   244f8:	add	fp, sp, #8
   244fc:	cmp	r1, #0
   24500:	popeq	{r4, sl, fp, pc}
   24504:	mov	r4, r1
   24508:	mov	r1, #2
   2450c:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   24510:	cmp	r0, #0
   24514:	strne	r4, [r0]
   24518:	pop	{r4, sl, fp, pc}
   2451c:	push	{r4, sl, fp, lr}
   24520:	add	fp, sp, #8
   24524:	cmp	r1, #0
   24528:	popeq	{r4, sl, fp, pc}
   2452c:	mov	r4, r1
   24530:	mov	r1, #3
   24534:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   24538:	cmp	r0, #0
   2453c:	strne	r4, [r0]
   24540:	pop	{r4, sl, fp, pc}
   24544:	mov	r1, #5
   24548:	b	3079c <flatcc_builder_start_table@@Base>
   2454c:	push	{r4, sl, fp, lr}
   24550:	add	fp, sp, #8
   24554:	mov	r4, r0
   24558:	bl	31cb0 <flatcc_builder_create_string_str@@Base>
   2455c:	mov	r1, r0
   24560:	mov	r0, r4
   24564:	pop	{r4, sl, fp, lr}
   24568:	b	248ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc30>
   2456c:	b	30558 <flatcc_builder_start_offset_vector@@Base>
   24570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24574:	add	fp, sp, #28
   24578:	sub	sp, sp, #4
   2457c:	vpush	{d8}
   24580:	sub	sp, sp, #16
   24584:	str	r1, [sp, #8]
   24588:	ldr	r9, [r1, #20]
   2458c:	cmp	r9, #0
   24590:	beq	24798 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xadc>
   24594:	mov	r5, r0
   24598:	mov	r8, #0
   2459c:	tst	r8, #255	; 0xff
   245a0:	mov	r7, #0
   245a4:	ldrbeq	r0, [r9, #72]	; 0x48
   245a8:	lsreq	r7, r0, #7
   245ac:	mov	r4, r9
   245b0:	ldrh	r0, [r4, #24]!
   245b4:	sub	sl, r4, #8
   245b8:	ldrh	r1, [r4, #48]	; 0x30
   245bc:	ubfx	r6, r1, #2, #1
   245c0:	ubfx	r1, r1, #8, #1
   245c4:	str	r1, [sp, #12]
   245c8:	cmp	r0, #14
   245cc:	bne	24664 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9a8>
   245d0:	ldr	r0, [sl]
   245d4:	ldrh	r0, [r0, #8]
   245d8:	cmp	r0, #4
   245dc:	bne	24664 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9a8>
   245e0:	mov	r0, r5
   245e4:	bl	24914 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc58>
   245e8:	mov	r0, r5
   245ec:	bl	24918 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc5c>
   245f0:	ldr	r0, [r9, #4]
   245f4:	ldm	r0, {r1, r2}
   245f8:	mov	r0, r5
   245fc:	bl	2491c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc60>
   24600:	mov	r0, r5
   24604:	movw	r1, #51829	; 0xca75
   24608:	movt	r1, #3
   2460c:	mov	r2, #5
   24610:	bl	2491c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc60>
   24614:	mov	r0, r5
   24618:	bl	24920 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc64>
   2461c:	mov	r0, r5
   24620:	bl	24940 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc84>
   24624:	ldrh	r0, [r9, #96]	; 0x60
   24628:	mov	r1, #2
   2462c:	add	r0, r1, r0, lsl #1
   24630:	uxth	r1, r0
   24634:	mov	r0, r5
   24638:	bl	2496c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb0>
   2463c:	ldrh	r0, [r9, #96]	; 0x60
   24640:	sub	r0, r0, #1
   24644:	uxth	r1, r0
   24648:	mov	r0, r5
   2464c:	bl	249a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcec>
   24650:	mov	r0, r5
   24654:	mov	r1, r6
   24658:	bl	249e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd28>
   2465c:	mov	r0, r5
   24660:	bl	24a20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd64>
   24664:	mov	r0, r5
   24668:	bl	24914 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc58>
   2466c:	ldr	r0, [r9, #4]
   24670:	ldm	r0, {r1, r2}
   24674:	mov	r0, r5
   24678:	bl	24a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd84>
   2467c:	ldrd	r2, [sl]
   24680:	ldrd	r0, [r4]
   24684:	stm	sp, {r0, r1}
   24688:	mov	r0, r5
   2468c:	bl	24a88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdcc>
   24690:	mov	r1, r0
   24694:	mov	r0, r5
   24698:	bl	24a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xda4>
   2469c:	ldr	r0, [sp, #8]
   246a0:	ldrh	r0, [r0, #8]
   246a4:	cmp	r0, #1
   246a8:	beq	246f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa38>
   246ac:	cmp	r0, #0
   246b0:	bne	24774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xab8>
   246b4:	vmov.i32	d8, #0	; 0x00000000
   246b8:	ldrh	r0, [r9, #56]	; 0x38
   246bc:	sub	r2, r0, #3
   246c0:	mov	r1, #0
   246c4:	cmp	r2, #3
   246c8:	bhi	24704 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa48>
   246cc:	add	r0, r9, #48	; 0x30
   246d0:	add	r3, pc, #0
   246d4:	ldr	pc, [r3, r2, lsl #2]
   246d8:	andeq	r4, r2, ip, lsl #14
   246dc:	andeq	r4, r2, r8, ror #13
   246e0:	andeq	r4, r2, r8, ror #13
   246e4:	andeq	r4, r2, ip, lsl r7
   246e8:	ldr	r2, [r0]
   246ec:	ldr	r1, [r0, #4]
   246f0:	b	24720 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa64>
   246f4:	ldrh	r1, [r9, #80]	; 0x50
   246f8:	mov	r0, r5
   246fc:	bl	2496c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb0>
   24700:	b	24774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xab8>
   24704:	mov	r2, #0
   24708:	b	24720 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa64>
   2470c:	mov	r2, #0
   24710:	vldr	d8, [r0]
   24714:	mov	r1, #0
   24718:	b	24720 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa64>
   2471c:	ldrb	r2, [r0]
   24720:	mov	r0, r5
   24724:	mov	r3, r1
   24728:	bl	24c94 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfd8>
   2472c:	mov	r0, r5
   24730:	vorr	d0, d8, d8
   24734:	bl	24cd8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x101c>
   24738:	ldrh	r1, [r9, #96]	; 0x60
   2473c:	mov	r0, r5
   24740:	bl	249a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcec>
   24744:	ldrh	r0, [r9, #96]	; 0x60
   24748:	mov	r1, #4
   2474c:	add	r0, r1, r0, lsl #1
   24750:	uxth	r1, r0
   24754:	mov	r0, r5
   24758:	bl	2496c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb0>
   2475c:	mov	r0, r5
   24760:	mov	r1, r7
   24764:	bl	24d24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1068>
   24768:	mov	r0, r5
   2476c:	ldr	r1, [sp, #12]
   24770:	bl	24d60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10a4>
   24774:	mov	r0, r5
   24778:	mov	r1, r6
   2477c:	bl	249e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd28>
   24780:	mov	r0, r5
   24784:	bl	24a20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd64>
   24788:	orr	r8, r8, r7
   2478c:	ldr	r9, [r9]
   24790:	cmp	r9, #0
   24794:	bne	2459c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8e0>
   24798:	sub	sp, fp, #40	; 0x28
   2479c:	vpop	{d8}
   247a0:	add	sp, sp, #4
   247a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247a8:	push	{r4, sl, fp, lr}
   247ac:	add	fp, sp, #8
   247b0:	mov	r4, r0
   247b4:	bl	3060c <flatcc_builder_end_offset_vector@@Base>
   247b8:	mov	r1, r0
   247bc:	mov	r0, r4
   247c0:	pop	{r4, sl, fp, lr}
   247c4:	b	250a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13e8>
   247c8:	push	{r4, sl, fp, lr}
   247cc:	add	fp, sp, #8
   247d0:	cmp	r1, #0
   247d4:	popeq	{r4, sl, fp, pc}
   247d8:	mov	r4, r1
   247dc:	mov	r1, #4
   247e0:	mov	r2, #4
   247e4:	mov	r3, #4
   247e8:	bl	315b0 <flatcc_builder_table_add@@Base>
   247ec:	cmp	r0, #0
   247f0:	beq	24800 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb44>
   247f4:	mov	r1, r4
   247f8:	pop	{r4, sl, fp, lr}
   247fc:	b	24f70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b4>
   24800:	pop	{r4, sl, fp, pc}
   24804:	push	{r4, sl, fp, lr}
   24808:	add	fp, sp, #8
   2480c:	cmp	r1, #0
   24810:	popeq	{r4, sl, fp, pc}
   24814:	mov	r4, r1
   24818:	mov	r1, #2
   2481c:	mov	r2, #1
   24820:	mov	r3, #1
   24824:	bl	315b0 <flatcc_builder_table_add@@Base>
   24828:	cmp	r0, #0
   2482c:	beq	2483c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb80>
   24830:	mov	r1, r4
   24834:	pop	{r4, sl, fp, lr}
   24838:	b	24fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   2483c:	pop	{r4, sl, fp, pc}
   24840:	push	{r4, sl, fp, lr}
   24844:	add	fp, sp, #8
   24848:	cmp	r1, #0
   2484c:	popeq	{r4, sl, fp, pc}
   24850:	mov	r4, r1
   24854:	mov	r1, #3
   24858:	mov	r2, #4
   2485c:	mov	r3, #4
   24860:	bl	315b0 <flatcc_builder_table_add@@Base>
   24864:	cmp	r0, #0
   24868:	beq	24878 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbbc>
   2486c:	mov	r1, r4
   24870:	pop	{r4, sl, fp, lr}
   24874:	b	24f70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b4>
   24878:	pop	{r4, sl, fp, pc}
   2487c:	push	{r4, sl, fp, lr}
   24880:	add	fp, sp, #8
   24884:	mov	r4, r0
   24888:	movw	r1, #54600	; 0xd548
   2488c:	movt	r1, #4
   24890:	mov	r2, #2
   24894:	bl	30e2c <flatcc_builder_check_required@@Base>
   24898:	cmp	r0, #0
   2489c:	beq	248ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbf0>
   248a0:	mov	r0, r4
   248a4:	pop	{r4, sl, fp, lr}
   248a8:	b	30ebc <flatcc_builder_end_table@@Base>
   248ac:	movw	r0, #53068	; 0xcf4c
   248b0:	movt	r0, #4
   248b4:	movw	r1, #52693	; 0xcdd5
   248b8:	movt	r1, #4
   248bc:	movw	r3, #53215	; 0xcfdf
   248c0:	movt	r3, #4
   248c4:	mov	r2, #31
   248c8:	bl	14a80 <__assert_fail@plt>
   248cc:	push	{r4, sl, fp, lr}
   248d0:	add	fp, sp, #8
   248d4:	mov	r4, r0
   248d8:	bl	305b8 <flatcc_builder_create_offset_vector@@Base>
   248dc:	mov	r1, r0
   248e0:	mov	r0, r4
   248e4:	pop	{r4, sl, fp, lr}
   248e8:	b	250cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1410>
   248ec:	push	{r4, sl, fp, lr}
   248f0:	add	fp, sp, #8
   248f4:	cmp	r1, #0
   248f8:	popeq	{r4, sl, fp, pc}
   248fc:	mov	r4, r1
   24900:	mov	r1, #0
   24904:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   24908:	cmp	r0, #0
   2490c:	strne	r4, [r0]
   24910:	pop	{r4, sl, fp, pc}
   24914:	b	24d9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e0>
   24918:	b	30670 <flatcc_builder_start_string@@Base>
   2491c:	b	3022c <flatcc_builder_append_string@@Base>
   24920:	push	{r4, sl, fp, lr}
   24924:	add	fp, sp, #8
   24928:	mov	r4, r0
   2492c:	bl	31d0c <flatcc_builder_end_string@@Base>
   24930:	mov	r1, r0
   24934:	mov	r0, r4
   24938:	pop	{r4, sl, fp, lr}
   2493c:	b	24da4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e8>
   24940:	push	{r4, sl, fp, lr}
   24944:	add	fp, sp, #8
   24948:	mov	r4, r0
   2494c:	mov	r1, #1
   24950:	mov	r2, #0
   24954:	mvn	r3, #0
   24958:	bl	24dcc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   2495c:	mov	r1, r0
   24960:	mov	r0, r4
   24964:	pop	{r4, sl, fp, lr}
   24968:	b	24a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xda4>
   2496c:	push	{r4, sl, fp, lr}
   24970:	add	fp, sp, #8
   24974:	cmp	r1, #0
   24978:	popeq	{r4, sl, fp, pc}
   2497c:	mov	r4, r1
   24980:	mov	r1, #3
   24984:	mov	r2, #2
   24988:	mov	r3, #2
   2498c:	bl	315b0 <flatcc_builder_table_add@@Base>
   24990:	cmp	r0, #0
   24994:	beq	249a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xce8>
   24998:	mov	r1, r4
   2499c:	pop	{r4, sl, fp, lr}
   249a0:	b	24fb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12fc>
   249a4:	pop	{r4, sl, fp, pc}
   249a8:	push	{r4, sl, fp, lr}
   249ac:	add	fp, sp, #8
   249b0:	cmp	r1, #0
   249b4:	popeq	{r4, sl, fp, pc}
   249b8:	mov	r4, r1
   249bc:	mov	r1, #2
   249c0:	mov	r2, #2
   249c4:	mov	r3, #2
   249c8:	bl	315b0 <flatcc_builder_table_add@@Base>
   249cc:	cmp	r0, #0
   249d0:	beq	249e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd24>
   249d4:	mov	r1, r4
   249d8:	pop	{r4, sl, fp, lr}
   249dc:	b	24fb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12fc>
   249e0:	pop	{r4, sl, fp, pc}
   249e4:	push	{r4, sl, fp, lr}
   249e8:	add	fp, sp, #8
   249ec:	cmp	r1, #0
   249f0:	popeq	{r4, sl, fp, pc}
   249f4:	mov	r4, r1
   249f8:	mov	r1, #6
   249fc:	mov	r2, #1
   24a00:	mov	r3, #1
   24a04:	bl	315b0 <flatcc_builder_table_add@@Base>
   24a08:	cmp	r0, #0
   24a0c:	beq	24a1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd60>
   24a10:	mov	r1, r4
   24a14:	pop	{r4, sl, fp, lr}
   24a18:	b	24fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   24a1c:	pop	{r4, sl, fp, pc}
   24a20:	push	{r4, sl, fp, lr}
   24a24:	add	fp, sp, #8
   24a28:	mov	r4, r0
   24a2c:	bl	2500c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1350>
   24a30:	mov	r1, r0
   24a34:	mov	r0, r4
   24a38:	pop	{r4, sl, fp, lr}
   24a3c:	b	25000 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1344>
   24a40:	push	{r4, sl, fp, lr}
   24a44:	add	fp, sp, #8
   24a48:	mov	r4, r0
   24a4c:	bl	31bf4 <flatcc_builder_create_string@@Base>
   24a50:	mov	r1, r0
   24a54:	mov	r0, r4
   24a58:	pop	{r4, sl, fp, lr}
   24a5c:	b	24da4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e8>
   24a60:	push	{r4, sl, fp, lr}
   24a64:	add	fp, sp, #8
   24a68:	cmp	r1, #0
   24a6c:	popeq	{r4, sl, fp, pc}
   24a70:	mov	r4, r1
   24a74:	mov	r1, #1
   24a78:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   24a7c:	cmp	r0, #0
   24a80:	strne	r4, [r0]
   24a84:	pop	{r4, sl, fp, pc}
   24a88:	push	{r4, r5, r6, r7, fp, lr}
   24a8c:	add	fp, sp, #16
   24a90:	mov	ip, r2
   24a94:	ldrh	r1, [fp, #8]
   24a98:	sub	r6, r1, #2
   24a9c:	mov	r2, #0
   24aa0:	mvn	r3, #0
   24aa4:	cmp	r6, #13
   24aa8:	bhi	24ba8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xeec>
   24aac:	mov	r4, #13
   24ab0:	add	r7, pc, #12
   24ab4:	mov	lr, #0
   24ab8:	mov	r5, #13
   24abc:	mov	r1, #0
   24ac0:	ldr	pc, [r7, r6, lsl #2]
   24ac4:	andeq	r4, r2, r8, ror ip
   24ac8:	andeq	r4, r2, ip, ror ip
   24acc:	andeq	r4, r2, ip, ror ip
   24ad0:	andeq	r4, r2, ip, ror ip
   24ad4:	andeq	r4, r2, ip, ror ip
   24ad8:	andeq	r4, r2, r0, asr fp
   24adc:	andeq	r4, r2, r4, asr fp
   24ae0:	andeq	r4, r2, r8, ror #24
   24ae4:	andeq	r4, r2, ip, ror ip
   24ae8:	andeq	r4, r2, ip, ror ip
   24aec:	andeq	r4, r2, ip, ror ip
   24af0:	andeq	r4, r2, ip, ror ip
   24af4:	strdeq	r4, [r2], -ip
   24af8:	andeq	r4, r2, r0, lsr fp
   24afc:	ldrh	r6, [ip, #8]
   24b00:	ldr	r1, [ip, #124]	; 0x7c
   24b04:	mov	r5, #15
   24b08:	cmp	r6, #2
   24b0c:	bcc	24bb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xefc>
   24b10:	cmp	r6, #4
   24b14:	beq	24bb4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xef8>
   24b18:	cmp	r6, #3
   24b1c:	bne	24ba8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xeec>
   24b20:	ldr	ip, [ip, #40]	; 0x28
   24b24:	mov	r3, r1
   24b28:	mov	lr, #0
   24b2c:	b	24b54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe98>
   24b30:	ldrh	r1, [ip, #8]
   24b34:	ldr	r3, [ip, #124]	; 0x7c
   24b38:	mov	r4, #15
   24b3c:	cmp	r1, #2
   24b40:	bcc	24c68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfac>
   24b44:	cmp	r1, #3
   24b48:	bne	24ba8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xeec>
   24b4c:	ldr	ip, [ip, #40]	; 0x28
   24b50:	mov	lr, #14
   24b54:	sub	r1, ip, #1
   24b58:	cmp	r1, #10
   24b5c:	mov	r4, #0
   24b60:	bhi	24c54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf98>
   24b64:	add	r7, pc, #0
   24b68:	ldr	pc, [r7, r1, lsl #2]
   24b6c:	muleq	r2, r8, fp
   24b70:	andeq	r4, r2, r0, asr #23
   24b74:	ldrdeq	r4, [r2], -r0
   24b78:	andeq	r4, r2, r0, ror #23
   24b7c:	strdeq	r4, [r2], -r0
   24b80:	andeq	r4, r2, r0, lsl #24
   24b84:	andeq	r4, r2, r0, lsl ip
   24b88:	andeq	r4, r2, r0, lsr #24
   24b8c:	andeq	r4, r2, r0, lsr ip
   24b90:	andeq	r4, r2, r0, asr #24
   24b94:	andeq	r4, r2, r0, asr ip
   24b98:	mov	r4, #10
   24b9c:	cmp	lr, #0
   24ba0:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24ba4:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24ba8:	mov	r1, #0
   24bac:	pop	{r4, r5, r6, r7, fp, lr}
   24bb0:	b	24dcc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   24bb4:	mov	r5, #16
   24bb8:	mov	r3, r1
   24bbc:	b	24c78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfbc>
   24bc0:	mov	r4, #8
   24bc4:	cmp	lr, #0
   24bc8:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24bcc:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24bd0:	mov	r4, #6
   24bd4:	cmp	lr, #0
   24bd8:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24bdc:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24be0:	mov	r4, #4
   24be4:	cmp	lr, #0
   24be8:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24bec:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24bf0:	mov	r4, #2
   24bf4:	cmp	lr, #0
   24bf8:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24bfc:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24c00:	mov	r4, #9
   24c04:	cmp	lr, #0
   24c08:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24c0c:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24c10:	mov	r4, #7
   24c14:	cmp	lr, #0
   24c18:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24c1c:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24c20:	mov	r4, #5
   24c24:	cmp	lr, #0
   24c28:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24c2c:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24c30:	mov	r4, #3
   24c34:	cmp	lr, #0
   24c38:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24c3c:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24c40:	mov	r4, #12
   24c44:	cmp	lr, #0
   24c48:	bne	24c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   24c4c:	b	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24c50:	mov	r4, #11
   24c54:	cmp	lr, #0
   24c58:	beq	24c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   24c5c:	cmp	lr, #14
   24c60:	mov	r5, lr
   24c64:	bne	24c78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfbc>
   24c68:	mov	r1, #14
   24c6c:	mov	r2, r4
   24c70:	pop	{r4, r5, r6, r7, fp, lr}
   24c74:	b	24dcc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   24c78:	mov	r1, r5
   24c7c:	pop	{r4, r5, r6, r7, fp, lr}
   24c80:	b	24dcc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   24c84:	mov	r1, r4
   24c88:	mov	r2, #0
   24c8c:	pop	{r4, r5, r6, r7, fp, lr}
   24c90:	b	24dcc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   24c94:	push	{r4, r5, fp, lr}
   24c98:	add	fp, sp, #8
   24c9c:	orrs	r1, r2, r3
   24ca0:	popeq	{r4, r5, fp, pc}
   24ca4:	mov	r4, r3
   24ca8:	mov	r5, r2
   24cac:	mov	r1, #4
   24cb0:	mov	r2, #8
   24cb4:	mov	r3, #8
   24cb8:	bl	315b0 <flatcc_builder_table_add@@Base>
   24cbc:	cmp	r0, #0
   24cc0:	beq	24cd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1018>
   24cc4:	mov	r2, r5
   24cc8:	mov	r3, r4
   24ccc:	pop	{r4, r5, fp, lr}
   24cd0:	b	2505c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13a0>
   24cd4:	pop	{r4, r5, fp, pc}
   24cd8:	push	{fp, lr}
   24cdc:	mov	fp, sp
   24ce0:	vpush	{d8}
   24ce4:	vcmp.f64	d0, #0.0
   24ce8:	vmrs	APSR_nzcv, fpscr
   24cec:	bne	24cf8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x103c>
   24cf0:	vpop	{d8}
   24cf4:	pop	{fp, pc}
   24cf8:	vmov.f64	d8, d0
   24cfc:	mov	r1, #5
   24d00:	mov	r2, #8
   24d04:	mov	r3, #8
   24d08:	bl	315b0 <flatcc_builder_table_add@@Base>
   24d0c:	cmp	r0, #0
   24d10:	beq	24cf0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1034>
   24d14:	vmov.f64	d0, d8
   24d18:	vpop	{d8}
   24d1c:	pop	{fp, lr}
   24d20:	b	25088 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13cc>
   24d24:	push	{r4, sl, fp, lr}
   24d28:	add	fp, sp, #8
   24d2c:	cmp	r1, #0
   24d30:	popeq	{r4, sl, fp, pc}
   24d34:	mov	r4, r1
   24d38:	mov	r1, #8
   24d3c:	mov	r2, #1
   24d40:	mov	r3, #1
   24d44:	bl	315b0 <flatcc_builder_table_add@@Base>
   24d48:	cmp	r0, #0
   24d4c:	beq	24d5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10a0>
   24d50:	mov	r1, r4
   24d54:	pop	{r4, sl, fp, lr}
   24d58:	b	24fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   24d5c:	pop	{r4, sl, fp, pc}
   24d60:	push	{r4, sl, fp, lr}
   24d64:	add	fp, sp, #8
   24d68:	cmp	r1, #0
   24d6c:	popeq	{r4, sl, fp, pc}
   24d70:	mov	r4, r1
   24d74:	mov	r1, #7
   24d78:	mov	r2, #1
   24d7c:	mov	r3, #1
   24d80:	bl	315b0 <flatcc_builder_table_add@@Base>
   24d84:	cmp	r0, #0
   24d88:	beq	24d98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10dc>
   24d8c:	mov	r1, r4
   24d90:	pop	{r4, sl, fp, lr}
   24d94:	b	24fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   24d98:	pop	{r4, sl, fp, pc}
   24d9c:	mov	r1, #9
   24da0:	b	3079c <flatcc_builder_start_table@@Base>
   24da4:	push	{r4, sl, fp, lr}
   24da8:	add	fp, sp, #8
   24dac:	cmp	r1, #0
   24db0:	popeq	{r4, sl, fp, pc}
   24db4:	mov	r4, r1
   24db8:	mov	r1, #0
   24dbc:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   24dc0:	cmp	r0, #0
   24dc4:	strne	r4, [r0]
   24dc8:	pop	{r4, sl, fp, pc}
   24dcc:	push	{r4, r5, r6, r7, fp, lr}
   24dd0:	add	fp, sp, #16
   24dd4:	mov	r7, r3
   24dd8:	mov	r5, r2
   24ddc:	mov	r6, r1
   24de0:	mov	r4, r0
   24de4:	bl	24e40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1184>
   24de8:	cmp	r0, #0
   24dec:	bne	24e2c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1170>
   24df0:	mov	r0, r4
   24df4:	mov	r1, r7
   24df8:	bl	24e48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x118c>
   24dfc:	cmp	r0, #0
   24e00:	bne	24e2c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1170>
   24e04:	mov	r0, r4
   24e08:	mov	r1, r6
   24e0c:	bl	24e90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11d4>
   24e10:	cmp	r0, #0
   24e14:	bne	24e2c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1170>
   24e18:	mov	r0, r4
   24e1c:	mov	r1, r5
   24e20:	bl	24ed8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x121c>
   24e24:	cmp	r0, #0
   24e28:	beq	24e34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1178>
   24e2c:	mov	r0, #0
   24e30:	pop	{r4, r5, r6, r7, fp, pc}
   24e34:	mov	r0, r4
   24e38:	pop	{r4, r5, r6, r7, fp, lr}
   24e3c:	b	24f20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1264>
   24e40:	mov	r1, #3
   24e44:	b	3079c <flatcc_builder_start_table@@Base>
   24e48:	push	{r4, r5, fp, lr}
   24e4c:	add	fp, sp, #8
   24e50:	mov	r4, #0
   24e54:	cmn	r1, #1
   24e58:	beq	24e88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11cc>
   24e5c:	mov	r5, r1
   24e60:	mov	r1, #2
   24e64:	mov	r2, #4
   24e68:	mov	r3, #4
   24e6c:	bl	315b0 <flatcc_builder_table_add@@Base>
   24e70:	cmp	r0, #0
   24e74:	mvneq	r4, #0
   24e78:	moveq	r0, r4
   24e7c:	popeq	{r4, r5, fp, pc}
   24e80:	mov	r1, r5
   24e84:	bl	24f70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b4>
   24e88:	mov	r0, r4
   24e8c:	pop	{r4, r5, fp, pc}
   24e90:	push	{r4, r5, fp, lr}
   24e94:	add	fp, sp, #8
   24e98:	cmp	r1, #0
   24e9c:	moveq	r4, #0
   24ea0:	moveq	r0, r4
   24ea4:	popeq	{r4, r5, fp, pc}
   24ea8:	mov	r5, r1
   24eac:	mov	r4, #0
   24eb0:	mov	r1, #0
   24eb4:	mov	r2, #1
   24eb8:	mov	r3, #1
   24ebc:	bl	315b0 <flatcc_builder_table_add@@Base>
   24ec0:	cmp	r0, #0
   24ec4:	mvneq	r4, #0
   24ec8:	movne	r1, r5
   24ecc:	blne	24f94 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12d8>
   24ed0:	mov	r0, r4
   24ed4:	pop	{r4, r5, fp, pc}
   24ed8:	push	{r4, r5, fp, lr}
   24edc:	add	fp, sp, #8
   24ee0:	mov	r4, #0
   24ee4:	cmp	r1, #0
   24ee8:	beq	24f18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x125c>
   24eec:	mov	r5, r1
   24ef0:	mov	r1, #1
   24ef4:	mov	r2, #1
   24ef8:	mov	r3, #1
   24efc:	bl	315b0 <flatcc_builder_table_add@@Base>
   24f00:	cmp	r0, #0
   24f04:	mvneq	r4, #0
   24f08:	moveq	r0, r4
   24f0c:	popeq	{r4, r5, fp, pc}
   24f10:	mov	r1, r5
   24f14:	bl	24f94 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12d8>
   24f18:	mov	r0, r4
   24f1c:	pop	{r4, r5, fp, pc}
   24f20:	push	{r4, sl, fp, lr}
   24f24:	add	fp, sp, #8
   24f28:	mov	r4, r0
   24f2c:	movw	r1, #54592	; 0xd540
   24f30:	movt	r1, #4
   24f34:	mov	r2, #0
   24f38:	bl	30e2c <flatcc_builder_check_required@@Base>
   24f3c:	cmp	r0, #0
   24f40:	beq	24f50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1294>
   24f44:	mov	r0, r4
   24f48:	pop	{r4, sl, fp, lr}
   24f4c:	b	30ebc <flatcc_builder_end_table@@Base>
   24f50:	movw	r0, #52552	; 0xcd48
   24f54:	movt	r0, #4
   24f58:	movw	r1, #52693	; 0xcdd5
   24f5c:	movt	r1, #4
   24f60:	movw	r3, #52788	; 0xce34
   24f64:	movt	r3, #4
   24f68:	mov	r2, #23
   24f6c:	bl	14a80 <__assert_fail@plt>
   24f70:	push	{r4, r5, fp, lr}
   24f74:	add	fp, sp, #8
   24f78:	mov	r4, r1
   24f7c:	mov	r5, r0
   24f80:	mov	r0, r1
   24f84:	bl	24f90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12d4>
   24f88:	str	r4, [r5]
   24f8c:	pop	{r4, r5, fp, pc}
   24f90:	bx	lr
   24f94:	push	{r4, r5, fp, lr}
   24f98:	add	fp, sp, #8
   24f9c:	mov	r4, r1
   24fa0:	mov	r5, r0
   24fa4:	mov	r0, r1
   24fa8:	bl	24fb4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12f8>
   24fac:	strb	r4, [r5]
   24fb0:	pop	{r4, r5, fp, pc}
   24fb4:	bx	lr
   24fb8:	push	{r4, r5, fp, lr}
   24fbc:	add	fp, sp, #8
   24fc0:	mov	r4, r1
   24fc4:	mov	r5, r0
   24fc8:	mov	r0, r1
   24fcc:	bl	24fd8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x131c>
   24fd0:	strh	r4, [r5]
   24fd4:	pop	{r4, r5, fp, pc}
   24fd8:	bx	lr
   24fdc:	push	{r4, r5, fp, lr}
   24fe0:	add	fp, sp, #8
   24fe4:	mov	r4, r1
   24fe8:	mov	r5, r0
   24fec:	mov	r0, r1
   24ff0:	bl	24ffc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1340>
   24ff4:	strb	r4, [r5]
   24ff8:	pop	{r4, r5, fp, pc}
   24ffc:	bx	lr
   25000:	cmp	r1, #0
   25004:	bxeq	lr
   25008:	b	300dc <flatcc_builder_offset_vector_push@@Base>
   2500c:	push	{r4, sl, fp, lr}
   25010:	add	fp, sp, #8
   25014:	mov	r4, r0
   25018:	movw	r1, #54594	; 0xd542
   2501c:	movt	r1, #4
   25020:	mov	r2, #2
   25024:	bl	30e2c <flatcc_builder_check_required@@Base>
   25028:	cmp	r0, #0
   2502c:	beq	2503c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1380>
   25030:	mov	r0, r4
   25034:	pop	{r4, sl, fp, lr}
   25038:	b	30ebc <flatcc_builder_end_table@@Base>
   2503c:	movw	r0, #52855	; 0xce77
   25040:	movt	r0, #4
   25044:	movw	r1, #52693	; 0xcdd5
   25048:	movt	r1, #4
   2504c:	movw	r3, #52999	; 0xcf07
   25050:	movt	r3, #4
   25054:	mov	r2, #29
   25058:	bl	14a80 <__assert_fail@plt>
   2505c:	push	{r4, r6, r7, sl, fp, lr}
   25060:	add	fp, sp, #16
   25064:	mov	r1, r3
   25068:	mov	r6, r2
   2506c:	mov	r4, r0
   25070:	mov	r0, r2
   25074:	bl	25084 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13c8>
   25078:	mov	r7, r1
   2507c:	strd	r6, [r4]
   25080:	pop	{r4, r6, r7, sl, fp, pc}
   25084:	bx	lr
   25088:	push	{r4, sl, fp, lr}
   2508c:	add	fp, sp, #8
   25090:	mov	r4, r0
   25094:	bl	250a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13e4>
   25098:	vstr	d0, [r4]
   2509c:	pop	{r4, sl, fp, pc}
   250a0:	bx	lr
   250a4:	push	{r4, sl, fp, lr}
   250a8:	add	fp, sp, #8
   250ac:	cmp	r1, #0
   250b0:	popeq	{r4, sl, fp, pc}
   250b4:	mov	r4, r1
   250b8:	mov	r1, #1
   250bc:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   250c0:	cmp	r0, #0
   250c4:	strne	r4, [r0]
   250c8:	pop	{r4, sl, fp, pc}
   250cc:	push	{r4, sl, fp, lr}
   250d0:	add	fp, sp, #8
   250d4:	cmp	r1, #0
   250d8:	popeq	{r4, sl, fp, pc}
   250dc:	mov	r4, r1
   250e0:	mov	r1, #0
   250e4:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   250e8:	cmp	r0, #0
   250ec:	strne	r4, [r0]
   250f0:	pop	{r4, sl, fp, pc}
   250f4:	b	30558 <flatcc_builder_start_offset_vector@@Base>
   250f8:	b	2524c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1590>
   250fc:	push	{r4, sl, fp, lr}
   25100:	add	fp, sp, #8
   25104:	mov	r4, r0
   25108:	bl	31cb0 <flatcc_builder_create_string_str@@Base>
   2510c:	mov	r1, r0
   25110:	mov	r0, r4
   25114:	pop	{r4, sl, fp, lr}
   25118:	b	25254 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1598>
   2511c:	b	30558 <flatcc_builder_start_offset_vector@@Base>
   25120:	push	{r4, r5, r6, sl, fp, lr}
   25124:	add	fp, sp, #16
   25128:	mov	r6, r2
   2512c:	mov	r5, r1
   25130:	mov	r4, r0
   25134:	bl	2527c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c0>
   25138:	ldr	r0, [r5, #4]
   2513c:	ldm	r0, {r1, r2}
   25140:	mov	r0, r4
   25144:	bl	25280 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c4>
   25148:	cmp	r6, #0
   2514c:	beq	25170 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b4>
   25150:	ldrh	r0, [r5, #24]
   25154:	cmp	r0, #14
   25158:	bne	25170 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b4>
   2515c:	ldr	r0, [r5, #16]
   25160:	ldr	r0, [r0, #124]	; 0x7c
   25164:	ldr	r1, [r6, r0, lsl #2]
   25168:	mov	r0, r4
   2516c:	bl	252a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15e4>
   25170:	ldrd	r2, [r5, #48]	; 0x30
   25174:	mov	r0, r4
   25178:	bl	252c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160c>
   2517c:	mov	r0, r4
   25180:	pop	{r4, r5, r6, sl, fp, lr}
   25184:	b	2530c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1650>
   25188:	push	{r4, sl, fp, lr}
   2518c:	add	fp, sp, #8
   25190:	mov	r4, r0
   25194:	bl	3060c <flatcc_builder_end_offset_vector@@Base>
   25198:	mov	r1, r0
   2519c:	mov	r0, r4
   251a0:	pop	{r4, sl, fp, lr}
   251a4:	b	253b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16fc>
   251a8:	push	{r4, sl, fp, lr}
   251ac:	add	fp, sp, #8
   251b0:	cmp	r1, #0
   251b4:	popeq	{r4, sl, fp, pc}
   251b8:	mov	r4, r1
   251bc:	mov	r1, #2
   251c0:	mov	r2, #1
   251c4:	mov	r3, #1
   251c8:	bl	315b0 <flatcc_builder_table_add@@Base>
   251cc:	cmp	r0, #0
   251d0:	beq	251e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1524>
   251d4:	mov	r1, r4
   251d8:	pop	{r4, sl, fp, lr}
   251dc:	b	24fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   251e0:	pop	{r4, sl, fp, pc}
   251e4:	push	{r4, sl, fp, lr}
   251e8:	add	fp, sp, #8
   251ec:	cmp	r1, #0
   251f0:	popeq	{r4, sl, fp, pc}
   251f4:	mov	r4, r1
   251f8:	mov	r1, #3
   251fc:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   25200:	cmp	r0, #0
   25204:	strne	r4, [r0]
   25208:	pop	{r4, sl, fp, pc}
   2520c:	push	{r4, sl, fp, lr}
   25210:	add	fp, sp, #8
   25214:	mov	r4, r0
   25218:	bl	253ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1730>
   2521c:	mov	r1, r0
   25220:	mov	r0, r4
   25224:	pop	{r4, sl, fp, lr}
   25228:	b	253e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1724>
   2522c:	push	{r4, sl, fp, lr}
   25230:	add	fp, sp, #8
   25234:	mov	r4, r0
   25238:	bl	3060c <flatcc_builder_end_offset_vector@@Base>
   2523c:	mov	r1, r0
   25240:	mov	r0, r4
   25244:	pop	{r4, sl, fp, lr}
   25248:	b	2543c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1780>
   2524c:	mov	r1, #4
   25250:	b	3079c <flatcc_builder_start_table@@Base>
   25254:	push	{r4, sl, fp, lr}
   25258:	add	fp, sp, #8
   2525c:	cmp	r1, #0
   25260:	popeq	{r4, sl, fp, pc}
   25264:	mov	r4, r1
   25268:	mov	r1, #0
   2526c:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   25270:	cmp	r0, #0
   25274:	strne	r4, [r0]
   25278:	pop	{r4, sl, fp, pc}
   2527c:	b	2532c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1670>
   25280:	push	{r4, sl, fp, lr}
   25284:	add	fp, sp, #8
   25288:	mov	r4, r0
   2528c:	bl	31bf4 <flatcc_builder_create_string@@Base>
   25290:	mov	r1, r0
   25294:	mov	r0, r4
   25298:	pop	{r4, sl, fp, lr}
   2529c:	b	25334 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1678>
   252a0:	push	{r4, sl, fp, lr}
   252a4:	add	fp, sp, #8
   252a8:	cmp	r1, #0
   252ac:	popeq	{r4, sl, fp, pc}
   252b0:	mov	r4, r1
   252b4:	mov	r1, #2
   252b8:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   252bc:	cmp	r0, #0
   252c0:	strne	r4, [r0]
   252c4:	pop	{r4, sl, fp, pc}
   252c8:	push	{r4, r5, fp, lr}
   252cc:	add	fp, sp, #8
   252d0:	orrs	r1, r2, r3
   252d4:	popeq	{r4, r5, fp, pc}
   252d8:	mov	r4, r3
   252dc:	mov	r5, r2
   252e0:	mov	r1, #1
   252e4:	mov	r2, #8
   252e8:	mov	r3, #8
   252ec:	bl	315b0 <flatcc_builder_table_add@@Base>
   252f0:	cmp	r0, #0
   252f4:	beq	25308 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x164c>
   252f8:	mov	r2, r5
   252fc:	mov	r3, r4
   25300:	pop	{r4, r5, fp, lr}
   25304:	b	2505c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13a0>
   25308:	pop	{r4, r5, fp, pc}
   2530c:	push	{r4, sl, fp, lr}
   25310:	add	fp, sp, #8
   25314:	mov	r4, r0
   25318:	bl	25368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16ac>
   2531c:	mov	r1, r0
   25320:	mov	r0, r4
   25324:	pop	{r4, sl, fp, lr}
   25328:	b	2535c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16a0>
   2532c:	mov	r1, #3
   25330:	b	3079c <flatcc_builder_start_table@@Base>
   25334:	push	{r4, sl, fp, lr}
   25338:	add	fp, sp, #8
   2533c:	cmp	r1, #0
   25340:	popeq	{r4, sl, fp, pc}
   25344:	mov	r4, r1
   25348:	mov	r1, #0
   2534c:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   25350:	cmp	r0, #0
   25354:	strne	r4, [r0]
   25358:	pop	{r4, sl, fp, pc}
   2535c:	cmp	r1, #0
   25360:	bxeq	lr
   25364:	b	300dc <flatcc_builder_offset_vector_push@@Base>
   25368:	push	{r4, sl, fp, lr}
   2536c:	add	fp, sp, #8
   25370:	mov	r4, r0
   25374:	movw	r1, #54606	; 0xd54e
   25378:	movt	r1, #4
   2537c:	mov	r2, #1
   25380:	bl	30e2c <flatcc_builder_check_required@@Base>
   25384:	cmp	r0, #0
   25388:	beq	25398 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16dc>
   2538c:	mov	r0, r4
   25390:	pop	{r4, sl, fp, lr}
   25394:	b	30ebc <flatcc_builder_end_table@@Base>
   25398:	movw	r0, #53286	; 0xd026
   2539c:	movt	r0, #4
   253a0:	movw	r1, #52693	; 0xcdd5
   253a4:	movt	r1, #4
   253a8:	movw	r3, #53436	; 0xd0bc
   253ac:	movt	r3, #4
   253b0:	mov	r2, #25
   253b4:	bl	14a80 <__assert_fail@plt>
   253b8:	push	{r4, sl, fp, lr}
   253bc:	add	fp, sp, #8
   253c0:	cmp	r1, #0
   253c4:	popeq	{r4, sl, fp, pc}
   253c8:	mov	r4, r1
   253cc:	mov	r1, #1
   253d0:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   253d4:	cmp	r0, #0
   253d8:	strne	r4, [r0]
   253dc:	pop	{r4, sl, fp, pc}
   253e0:	cmp	r1, #0
   253e4:	bxeq	lr
   253e8:	b	300dc <flatcc_builder_offset_vector_push@@Base>
   253ec:	push	{r4, sl, fp, lr}
   253f0:	add	fp, sp, #8
   253f4:	mov	r4, r0
   253f8:	movw	r1, #54610	; 0xd552
   253fc:	movt	r1, #4
   25400:	mov	r2, #3
   25404:	bl	30e2c <flatcc_builder_check_required@@Base>
   25408:	cmp	r0, #0
   2540c:	beq	2541c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1760>
   25410:	mov	r0, r4
   25414:	pop	{r4, sl, fp, lr}
   25418:	b	30ebc <flatcc_builder_end_table@@Base>
   2541c:	movw	r0, #53509	; 0xd105
   25420:	movt	r0, #4
   25424:	movw	r1, #52693	; 0xcdd5
   25428:	movt	r1, #4
   2542c:	movw	r3, #53650	; 0xd192
   25430:	movt	r3, #4
   25434:	mov	r2, #27
   25438:	bl	14a80 <__assert_fail@plt>
   2543c:	push	{r4, sl, fp, lr}
   25440:	add	fp, sp, #8
   25444:	cmp	r1, #0
   25448:	popeq	{r4, sl, fp, pc}
   2544c:	mov	r4, r1
   25450:	mov	r1, #1
   25454:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   25458:	cmp	r0, #0
   2545c:	strne	r4, [r0]
   25460:	pop	{r4, sl, fp, pc}
   25464:	push	{r4, sl, fp, lr}
   25468:	add	fp, sp, #8
   2546c:	cmp	r1, #0
   25470:	popeq	{r4, sl, fp, pc}
   25474:	mov	r4, r1
   25478:	mov	r1, #4
   2547c:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   25480:	cmp	r0, #0
   25484:	strne	r4, [r0]
   25488:	pop	{r4, sl, fp, pc}
   2548c:	b	2fc68 <flatcc_builder_end_buffer@@Base>
   25490:	push	{r4, sl, fp, lr}
   25494:	add	fp, sp, #8
   25498:	mov	r4, r0
   2549c:	movw	r1, #54618	; 0xd55a
   254a0:	movt	r1, #4
   254a4:	mov	r2, #2
   254a8:	bl	30e2c <flatcc_builder_check_required@@Base>
   254ac:	cmp	r0, #0
   254b0:	beq	254c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1804>
   254b4:	mov	r0, r4
   254b8:	pop	{r4, sl, fp, lr}
   254bc:	b	30ebc <flatcc_builder_end_table@@Base>
   254c0:	movw	r0, #53717	; 0xd1d5
   254c4:	movt	r0, #4
   254c8:	movw	r1, #52693	; 0xcdd5
   254cc:	movt	r1, #4
   254d0:	movw	r3, #53864	; 0xd268
   254d4:	movt	r3, #4
   254d8:	mov	r2, #33	; 0x21
   254dc:	bl	14a80 <__assert_fail@plt>
   254e0:	push	{r4, r5, fp, lr}
   254e4:	add	fp, sp, #8
   254e8:	mov	r5, #0
   254ec:	cmp	r0, #0
   254f0:	beq	25510 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1854>
   254f4:	mov	r4, r0
   254f8:	bl	25680 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19c4>
   254fc:	cmp	r0, #0
   25500:	beq	25510 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1854>
   25504:	mov	r0, r4
   25508:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   2550c:	add	r5, r4, r0
   25510:	mov	r0, r5
   25514:	pop	{r4, r5, fp, pc}
   25518:	push	{r4, r5, fp, lr}
   2551c:	add	fp, sp, #8
   25520:	cmp	r0, #0
   25524:	beq	25578 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18bc>
   25528:	mov	r4, r0
   2552c:	bl	256c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a04>
   25530:	sub	r5, r4, r0
   25534:	mov	r0, r5
   25538:	bl	256c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   2553c:	cmp	r0, #6
   25540:	bcc	2556c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18b0>
   25544:	add	r0, r5, #4
   25548:	bl	256c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   2554c:	cmp	r0, #0
   25550:	beq	2556c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18b0>
   25554:	add	r4, r4, r0
   25558:	mov	r0, r4
   2555c:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   25560:	add	r0, r4, r0
   25564:	add	r0, r0, #4
   25568:	pop	{r4, r5, fp, pc}
   2556c:	movw	r0, #54144	; 0xd380
   25570:	movt	r0, #4
   25574:	b	25580 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18c4>
   25578:	movw	r0, #53935	; 0xd2af
   2557c:	movt	r0, #4
   25580:	movw	r1, #53973	; 0xd2d5
   25584:	movt	r1, #4
   25588:	movw	r3, #54067	; 0xd333
   2558c:	movt	r3, #4
   25590:	mov	r2, #237	; 0xed
   25594:	bl	14a80 <__assert_fail@plt>
   25598:	cmp	r0, #0
   2559c:	moveq	r0, #0
   255a0:	bxeq	lr
   255a4:	sub	r0, r0, #4
   255a8:	b	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   255ac:	push	{r4, r5, fp, lr}
   255b0:	add	fp, sp, #8
   255b4:	mov	r4, r1
   255b8:	mov	r5, r0
   255bc:	bl	256d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a1c>
   255c0:	cmp	r0, r4
   255c4:	bls	255dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1920>
   255c8:	add	r4, r5, r4, lsl #2
   255cc:	mov	r0, r4
   255d0:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   255d4:	add	r0, r4, r0
   255d8:	pop	{r4, r5, fp, pc}
   255dc:	movw	r0, #54177	; 0xd3a1
   255e0:	movt	r0, #4
   255e4:	movw	r1, #53973	; 0xd2d5
   255e8:	movt	r1, #4
   255ec:	movw	r3, #54232	; 0xd3d8
   255f0:	movt	r3, #4
   255f4:	mov	r2, #215	; 0xd7
   255f8:	bl	14a80 <__assert_fail@plt>
   255fc:	push	{r4, r5, fp, lr}
   25600:	add	fp, sp, #8
   25604:	cmp	r0, #0
   25608:	beq	2565c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a0>
   2560c:	mov	r4, r0
   25610:	bl	256c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a04>
   25614:	sub	r5, r4, r0
   25618:	mov	r0, r5
   2561c:	bl	256c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   25620:	cmp	r0, #8
   25624:	bcc	25650 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1994>
   25628:	add	r0, r5, #6
   2562c:	bl	256c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   25630:	cmp	r0, #0
   25634:	beq	25650 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1994>
   25638:	add	r4, r4, r0
   2563c:	mov	r0, r4
   25640:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   25644:	add	r0, r4, r0
   25648:	add	r0, r0, #4
   2564c:	pop	{r4, r5, fp, pc}
   25650:	movw	r0, #54144	; 0xd380
   25654:	movt	r0, #4
   25658:	b	25664 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a8>
   2565c:	movw	r0, #53935	; 0xd2af
   25660:	movt	r0, #4
   25664:	movw	r1, #53973	; 0xd2d5
   25668:	movt	r1, #4
   2566c:	movw	r3, #54316	; 0xd42c
   25670:	movt	r3, #4
   25674:	mov	r2, #224	; 0xe0
   25678:	bl	14a80 <__assert_fail@plt>
   2567c:	b	256ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a30>
   25680:	push	{fp, lr}
   25684:	mov	fp, sp
   25688:	add	r0, r0, #4
   2568c:	bl	256b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19f4>
   25690:	movw	r1, #47550	; 0xb9be
   25694:	movt	r1, #44221	; 0xacbd
   25698:	add	r0, r0, r1
   2569c:	clz	r0, r0
   256a0:	lsr	r0, r0, #5
   256a4:	pop	{fp, pc}
   256a8:	ldr	r0, [r0]
   256ac:	b	256bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a00>
   256b0:	ldr	r0, [r0]
   256b4:	b	256b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19fc>
   256b8:	bx	lr
   256bc:	bx	lr
   256c0:	ldr	r0, [r0]
   256c4:	b	256d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a14>
   256c8:	ldrh	r0, [r0]
   256cc:	b	256d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a18>
   256d0:	bx	lr
   256d4:	bx	lr
   256d8:	cmp	r0, #0
   256dc:	moveq	r0, #0
   256e0:	bxeq	lr
   256e4:	sub	r0, r0, #4
   256e8:	b	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   256ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256f0:	add	fp, sp, #28
   256f4:	sub	sp, sp, #4
   256f8:	mov	r8, r0
   256fc:	bl	257ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1af0>
   25700:	cmp	r0, #0
   25704:	beq	257a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ae8>
   25708:	mov	r5, r0
   2570c:	lsr	r7, r0, #1
   25710:	sub	r6, r0, #1
   25714:	mov	r0, r8
   25718:	mov	r1, r7
   2571c:	mov	r2, r6
   25720:	bl	257c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b04>
   25724:	sub	r7, r7, #1
   25728:	cmn	r7, #1
   2572c:	bne	25714 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   25730:	cmp	r6, #0
   25734:	beq	257a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ae8>
   25738:	mov	r0, #4
   2573c:	sub	r7, r0, r5, lsl #2
   25740:	mvn	r0, #3
   25744:	add	r4, r0, r5, lsl #2
   25748:	sub	r5, r5, #2
   2574c:	add	r6, r8, r4
   25750:	mov	r0, r6
   25754:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   25758:	add	r9, r0, r4
   2575c:	mov	r0, r8
   25760:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   25764:	mov	sl, r0
   25768:	mov	r0, r8
   2576c:	mov	r1, r9
   25770:	bl	258d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   25774:	add	r1, sl, r7
   25778:	mov	r0, r6
   2577c:	bl	258d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   25780:	mov	r0, r8
   25784:	mov	r1, #0
   25788:	mov	r2, r5
   2578c:	bl	257c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b04>
   25790:	add	r7, r7, #4
   25794:	sub	r5, r5, #1
   25798:	sub	r4, r4, #4
   2579c:	cmn	r5, #1
   257a0:	bne	2574c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a90>
   257a4:	sub	sp, fp, #28
   257a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257ac:	cmp	r0, #0
   257b0:	moveq	r0, #0
   257b4:	bxeq	lr
   257b8:	sub	r0, r0, #4
   257bc:	b	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   257c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257c4:	add	fp, sp, #28
   257c8:	sub	sp, sp, #4
   257cc:	cmp	r2, r1, lsl #1
   257d0:	bcc	258d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c14>
   257d4:	mov	r4, r2
   257d8:	mov	sl, r1
   257dc:	mov	r8, r0
   257e0:	lsl	r7, r1, #1
   257e4:	str	r2, [sp]
   257e8:	cmp	r7, r4
   257ec:	bcs	25838 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b7c>
   257f0:	mov	r0, r8
   257f4:	mov	r1, r7
   257f8:	bl	25978 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   257fc:	bl	258f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   25800:	mov	r9, r0
   25804:	orr	r4, r7, #1
   25808:	mov	r0, r8
   2580c:	mov	r1, r4
   25810:	bl	25978 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   25814:	bl	258f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   25818:	mov	r6, r0
   2581c:	bl	25a1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   25820:	mov	r2, r0
   25824:	mov	r0, r9
   25828:	mov	r1, r6
   2582c:	bl	259c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0c>
   25830:	cmp	r0, #0
   25834:	movlt	r7, r4
   25838:	mov	r6, r7
   2583c:	mov	r0, r8
   25840:	mov	r1, sl
   25844:	bl	25978 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   25848:	bl	258f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   2584c:	mov	r7, r0
   25850:	mov	r0, r8
   25854:	mov	r1, r6
   25858:	bl	25978 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   2585c:	bl	258f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   25860:	mov	r5, r0
   25864:	bl	25a1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   25868:	mov	r2, r0
   2586c:	mov	r0, r7
   25870:	mov	r1, r5
   25874:	bl	259c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0c>
   25878:	cmn	r0, #1
   2587c:	bgt	258d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c14>
   25880:	sub	r7, sl, r6
   25884:	add	r5, r8, r6, lsl #2
   25888:	mov	r0, r5
   2588c:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   25890:	sub	r9, r0, r7, lsl #2
   25894:	add	r4, r8, sl, lsl #2
   25898:	mov	r0, r4
   2589c:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   258a0:	mov	sl, r0
   258a4:	mov	r0, r4
   258a8:	mov	r1, r9
   258ac:	ldr	r4, [sp]
   258b0:	bl	258d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   258b4:	add	r1, sl, r7, lsl #2
   258b8:	mov	r0, r5
   258bc:	bl	258d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   258c0:	lsl	r7, r6, #1
   258c4:	cmp	r4, r6, lsl #1
   258c8:	mov	sl, r6
   258cc:	bcs	257e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b2c>
   258d0:	sub	sp, fp, #28
   258d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   258d8:	push	{r4, r5, fp, lr}
   258dc:	add	fp, sp, #8
   258e0:	mov	r4, r1
   258e4:	mov	r5, r0
   258e8:	mov	r0, r1
   258ec:	bl	25a30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d74>
   258f0:	str	r4, [r5]
   258f4:	pop	{r4, r5, fp, pc}
   258f8:	push	{r4, r5, fp, lr}
   258fc:	add	fp, sp, #8
   25900:	cmp	r0, #0
   25904:	beq	25958 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c9c>
   25908:	mov	r4, r0
   2590c:	bl	256c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a04>
   25910:	sub	r5, r4, r0
   25914:	mov	r0, r5
   25918:	bl	256c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   2591c:	cmp	r0, #6
   25920:	bcc	2594c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   25924:	add	r0, r5, #4
   25928:	bl	256c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   2592c:	cmp	r0, #0
   25930:	beq	2594c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   25934:	add	r4, r4, r0
   25938:	mov	r0, r4
   2593c:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   25940:	add	r0, r4, r0
   25944:	add	r0, r0, #4
   25948:	pop	{r4, r5, fp, pc}
   2594c:	movw	r0, #54144	; 0xd380
   25950:	movt	r0, #4
   25954:	b	25960 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ca4>
   25958:	movw	r0, #53935	; 0xd2af
   2595c:	movt	r0, #4
   25960:	movw	r1, #53973	; 0xd2d5
   25964:	movt	r1, #4
   25968:	movw	r3, #54391	; 0xd477
   2596c:	movt	r3, #4
   25970:	mov	r2, #195	; 0xc3
   25974:	bl	14a80 <__assert_fail@plt>
   25978:	push	{r4, r5, fp, lr}
   2597c:	add	fp, sp, #8
   25980:	mov	r4, r1
   25984:	mov	r5, r0
   25988:	bl	256d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a1c>
   2598c:	cmp	r0, r4
   25990:	bls	259a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cec>
   25994:	add	r4, r5, r4, lsl #2
   25998:	mov	r0, r4
   2599c:	bl	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   259a0:	add	r0, r4, r0
   259a4:	pop	{r4, r5, fp, pc}
   259a8:	movw	r0, #54177	; 0xd3a1
   259ac:	movt	r0, #4
   259b0:	movw	r1, #53973	; 0xd2d5
   259b4:	movt	r1, #4
   259b8:	movw	r3, #54460	; 0xd4bc
   259bc:	movt	r3, #4
   259c0:	mov	r2, #192	; 0xc0
   259c4:	bl	14a80 <__assert_fail@plt>
   259c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   259cc:	add	fp, sp, #24
   259d0:	mov	r4, r2
   259d4:	mov	r8, r1
   259d8:	mov	r6, r0
   259dc:	bl	25a1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   259e0:	mov	r7, r0
   259e4:	mov	r5, #0
   259e8:	cmp	r0, r4
   259ec:	movwhi	r5, #1
   259f0:	mov	r2, r4
   259f4:	movcc	r2, r0
   259f8:	mov	r0, r6
   259fc:	mov	r1, r8
   25a00:	bl	14a68 <strncmp@plt>
   25a04:	cmp	r0, #0
   25a08:	mvneq	r0, #0
   25a0c:	movne	r5, r0
   25a10:	cmp	r7, r4
   25a14:	movcs	r0, r5
   25a18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25a1c:	cmp	r0, #0
   25a20:	moveq	r0, #0
   25a24:	bxeq	lr
   25a28:	sub	r0, r0, #4
   25a2c:	b	256a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   25a30:	bx	lr
   25a34:	cmp	r0, #0
   25a38:	bxne	lr
   25a3c:	push	{fp, lr}
   25a40:	mov	fp, sp
   25a44:	movw	r0, #8368	; 0x20b0
   25a48:	movt	r0, #6
   25a4c:	ldr	r3, [r0]
   25a50:	movw	r0, #25039	; 0x61cf
   25a54:	movt	r0, #3
   25a58:	mov	r1, #34	; 0x22
   25a5c:	mov	r2, #1
   25a60:	bl	14954 <fwrite@plt>
   25a64:	mov	r0, #1
   25a68:	bl	1499c <exit@plt>

00025a6c <str_set_clear@@Base>:
   25a6c:	b	25a70 <str_set_clear@@Base+0x4>
   25a70:	push	{r4, sl, fp, lr}
   25a74:	add	fp, sp, #8
   25a78:	mov	r4, r0
   25a7c:	ldr	r0, [r0]
   25a80:	cmp	r0, #0
   25a84:	beq	25a8c <str_set_clear@@Base+0x20>
   25a88:	bl	14900 <free@plt>
   25a8c:	vmov.i32	q8, #0	; 0x00000000
   25a90:	vst1.32	{d16-d17}, [r4]
   25a94:	pop	{r4, sl, fp, pc}

00025a98 <str_set_destroy@@Base>:
   25a98:	push	{r4, sl, fp, lr}
   25a9c:	add	fp, sp, #8
   25aa0:	mov	r4, r0
   25aa4:	cmp	r1, #0
   25aa8:	movne	r0, r4
   25aac:	blne	25abc <str_set_destroy@@Base+0x24>
   25ab0:	mov	r0, r4
   25ab4:	pop	{r4, sl, fp, lr}
   25ab8:	b	25a70 <str_set_clear@@Base+0x4>
   25abc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25ac0:	add	fp, sp, #24
   25ac4:	mov	r6, r0
   25ac8:	ldr	r0, [r0, #12]
   25acc:	cmp	r0, #0
   25ad0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   25ad4:	mov	r8, r2
   25ad8:	mov	r5, r1
   25adc:	ldr	r7, [r6]
   25ae0:	mov	r4, #0
   25ae4:	ldr	r1, [r7, r4, lsl #2]
   25ae8:	orr	r0, r1, #2
   25aec:	cmp	r0, #2
   25af0:	beq	25afc <str_set_destroy@@Base+0x64>
   25af4:	mov	r0, r8
   25af8:	blx	r5
   25afc:	ldr	r0, [r6, #12]
   25b00:	add	r4, r4, #1
   25b04:	cmp	r4, r0
   25b08:	bcc	25ae4 <str_set_destroy@@Base+0x4c>
   25b0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025b10 <str_set_init@@Base>:
   25b10:	b	25b14 <str_set_init@@Base+0x4>
   25b14:	push	{r4, r5, fp, lr}
   25b18:	add	fp, sp, #8
   25b1c:	mov	r4, r0
   25b20:	mov	r2, #4
   25b24:	mov	r0, #179	; 0xb3
   25b28:	mov	r5, r2
   25b2c:	mul	r3, r2, r0
   25b30:	lsl	r2, r2, #1
   25b34:	cmp	r1, r3, lsr #8
   25b38:	bhi	25b28 <str_set_init@@Base+0x18>
   25b3c:	mov	r0, r5
   25b40:	mov	r1, #4
   25b44:	bl	148d0 <calloc@plt>
   25b48:	str	r0, [r4]
   25b4c:	cmp	r0, #0
   25b50:	movne	r0, #0
   25b54:	strne	r0, [r4, #4]
   25b58:	strne	r0, [r4, #8]
   25b5c:	strne	r5, [r4, #12]
   25b60:	popne	{r4, r5, fp, pc}
   25b64:	mvn	r0, #0
   25b68:	pop	{r4, r5, fp, pc}

00025b6c <str_set_resize@@Base>:
   25b6c:	b	25b70 <str_set_resize@@Base+0x4>
   25b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25b74:	add	fp, sp, #28
   25b78:	sub	sp, sp, #28
   25b7c:	mov	r4, r0
   25b80:	ldr	r5, [r0]
   25b84:	ldr	r0, [r0, #8]
   25b88:	cmp	r0, r1
   25b8c:	movhi	r1, r0
   25b90:	add	r8, sp, #8
   25b94:	mov	r0, r8
   25b98:	bl	25b14 <str_set_init@@Base+0x4>
   25b9c:	mov	r1, r0
   25ba0:	mvn	r0, #0
   25ba4:	cmp	r1, #0
   25ba8:	beq	25bb4 <str_set_resize@@Base+0x48>
   25bac:	sub	sp, fp, #28
   25bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25bb4:	ldr	r0, [r4, #12]
   25bb8:	cmp	r0, #0
   25bbc:	beq	25c10 <str_set_resize@@Base+0xa4>
   25bc0:	mov	r6, #0
   25bc4:	mov	sl, #3
   25bc8:	add	r9, sp, #8
   25bcc:	ldr	r7, [r5, r6, lsl #2]
   25bd0:	orr	r0, r7, #2
   25bd4:	cmp	r0, #2
   25bd8:	beq	25c00 <str_set_resize@@Base+0x94>
   25bdc:	mov	r0, r7
   25be0:	bl	25e5c <str_set_insert_item@@Base+0x48>
   25be4:	bl	25e60 <str_set_insert_item@@Base+0x4c>
   25be8:	mov	r2, r0
   25bec:	str	sl, [sp]
   25bf0:	mov	r0, r9
   25bf4:	mov	r1, r7
   25bf8:	mov	r3, r7
   25bfc:	bl	25c30 <str_set_insert@@Base+0x4>
   25c00:	ldr	r0, [r4, #12]
   25c04:	add	r6, r6, #1
   25c08:	cmp	r6, r0
   25c0c:	bcc	25bcc <str_set_resize@@Base+0x60>
   25c10:	mov	r0, r4
   25c14:	bl	25a70 <str_set_clear@@Base+0x4>
   25c18:	vld1.64	{d16-d17}, [r8]
   25c1c:	vst1.32	{d16-d17}, [r4]
   25c20:	mov	r0, #0
   25c24:	sub	sp, fp, #28
   25c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025c2c <str_set_insert@@Base>:
   25c2c:	b	25c30 <str_set_insert@@Base+0x4>
   25c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c34:	add	fp, sp, #28
   25c38:	sub	sp, sp, #12
   25c3c:	str	r2, [sp, #8]
   25c40:	cmp	r3, #2
   25c44:	beq	25d8c <str_set_insert@@Base+0x160>
   25c48:	mov	r9, r3
   25c4c:	cmp	r3, #1
   25c50:	beq	25dac <str_set_insert@@Base+0x180>
   25c54:	cmp	r9, #0
   25c58:	beq	25dcc <str_set_insert@@Base+0x1a0>
   25c5c:	mov	r7, r1
   25c60:	mov	r5, r0
   25c64:	ldr	r0, [r0, #8]
   25c68:	ldr	r1, [r5, #12]
   25c6c:	mov	r2, #179	; 0xb3
   25c70:	mul	r1, r1, r2
   25c74:	cmp	r0, r1, lsr #8
   25c78:	bcc	25c90 <str_set_insert@@Base+0x64>
   25c7c:	lsl	r1, r0, #1
   25c80:	mov	r0, r5
   25c84:	bl	25b70 <str_set_resize@@Base+0x4>
   25c88:	cmp	r0, #0
   25c8c:	bne	25dec <str_set_insert@@Base+0x1c0>
   25c90:	ldr	sl, [fp, #8]
   25c94:	ldr	r8, [r5]
   25c98:	ldr	r4, [r5, #12]
   25c9c:	mov	r0, r7
   25ca0:	ldr	r1, [sp, #8]
   25ca4:	bl	25ffc <str_set_visit@@Base+0x4>
   25ca8:	sub	r6, r4, #1
   25cac:	and	r1, r0, r6
   25cb0:	orr	r2, sl, #1
   25cb4:	cmp	r2, #3
   25cb8:	bne	25cf0 <str_set_insert@@Base+0xc4>
   25cbc:	ldr	r2, [r5, #8]
   25cc0:	add	r2, r2, #1
   25cc4:	str	r2, [r5, #8]
   25cc8:	b	25cd0 <str_set_insert@@Base+0xa4>
   25ccc:	and	r1, r0, r6
   25cd0:	add	r0, r0, #1
   25cd4:	mov	r5, r8
   25cd8:	ldr	r1, [r5, r1, lsl #2]!
   25cdc:	orr	r1, r1, #2
   25ce0:	cmp	r1, #2
   25ce4:	bne	25ccc <str_set_insert@@Base+0xa0>
   25ce8:	mov	r4, #0
   25cec:	b	25d68 <str_set_insert@@Base+0x13c>
   25cf0:	stm	sp, {r5, r9}
   25cf4:	add	sl, r0, #1
   25cf8:	mov	r9, #0
   25cfc:	b	25d08 <str_set_insert@@Base+0xdc>
   25d00:	and	r1, sl, r6
   25d04:	add	sl, sl, #1
   25d08:	mov	r5, r8
   25d0c:	ldr	r4, [r5, r1, lsl #2]!
   25d10:	cmp	r4, #2
   25d14:	beq	25d3c <str_set_insert@@Base+0x110>
   25d18:	cmp	r4, #0
   25d1c:	beq	25d48 <str_set_insert@@Base+0x11c>
   25d20:	mov	r0, r7
   25d24:	ldr	r1, [sp, #8]
   25d28:	mov	r2, r4
   25d2c:	bl	26034 <str_set_visit@@Base+0x3c>
   25d30:	cmp	r0, #0
   25d34:	beq	25d00 <str_set_insert@@Base+0xd4>
   25d38:	b	25d78 <str_set_insert@@Base+0x14c>
   25d3c:	cmp	r9, #0
   25d40:	moveq	r9, r5
   25d44:	b	25d00 <str_set_insert@@Base+0xd4>
   25d48:	ldr	r1, [sp]
   25d4c:	ldr	r0, [r1, #8]
   25d50:	add	r0, r0, #1
   25d54:	str	r0, [r1, #8]
   25d58:	cmp	r9, #0
   25d5c:	movne	r5, r9
   25d60:	mov	r4, #0
   25d64:	ldr	r9, [sp, #4]
   25d68:	str	r9, [r5]
   25d6c:	mov	r0, r4
   25d70:	sub	sp, fp, #28
   25d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d78:	ldr	r0, [fp, #8]
   25d7c:	cmp	r0, #0
   25d80:	ldr	r9, [sp, #4]
   25d84:	streq	r9, [r5]
   25d88:	b	25d6c <str_set_insert@@Base+0x140>
   25d8c:	movw	r0, #54861	; 0xd64d
   25d90:	movt	r0, #4
   25d94:	movw	r1, #54707	; 0xd5b3
   25d98:	movt	r1, #4
   25d9c:	movw	r3, #54787	; 0xd603
   25da0:	movt	r3, #4
   25da4:	mov	r2, #115	; 0x73
   25da8:	bl	14a80 <__assert_fail@plt>
   25dac:	movw	r0, #54884	; 0xd664
   25db0:	movt	r0, #4
   25db4:	movw	r1, #54707	; 0xd5b3
   25db8:	movt	r1, #4
   25dbc:	movw	r3, #54787	; 0xd603
   25dc0:	movt	r3, #4
   25dc4:	mov	r2, #116	; 0x74
   25dc8:	bl	14a80 <__assert_fail@plt>
   25dcc:	movw	r0, #54684	; 0xd59c
   25dd0:	movt	r0, #4
   25dd4:	movw	r1, #54707	; 0xd5b3
   25dd8:	movt	r1, #4
   25ddc:	movw	r3, #54787	; 0xd603
   25de0:	movt	r3, #4
   25de4:	mov	r2, #114	; 0x72
   25de8:	bl	14a80 <__assert_fail@plt>
   25dec:	movw	r0, #8368	; 0x20b0
   25df0:	movt	r0, #6
   25df4:	ldr	r0, [r0]
   25df8:	movw	r1, #54905	; 0xd679
   25dfc:	movt	r1, #4
   25e00:	movw	r2, #54928	; 0xd690
   25e04:	movt	r2, #4
   25e08:	bl	149c0 <fprintf@plt>
   25e0c:	mov	r0, #1
   25e10:	bl	1499c <exit@plt>

00025e14 <str_set_insert_item@@Base>:
   25e14:	push	{r4, r5, r6, sl, fp, lr}
   25e18:	add	fp, sp, #16
   25e1c:	sub	sp, sp, #8
   25e20:	mov	r4, r2
   25e24:	mov	r5, r1
   25e28:	mov	r6, r0
   25e2c:	mov	r0, r1
   25e30:	bl	25e5c <str_set_insert_item@@Base+0x48>
   25e34:	mov	r0, r5
   25e38:	bl	25e60 <str_set_insert_item@@Base+0x4c>
   25e3c:	mov	r2, r0
   25e40:	str	r4, [sp]
   25e44:	mov	r0, r6
   25e48:	mov	r1, r5
   25e4c:	mov	r3, r5
   25e50:	bl	25c30 <str_set_insert@@Base+0x4>
   25e54:	sub	sp, fp, #16
   25e58:	pop	{r4, r5, r6, sl, fp, pc}
   25e5c:	bx	lr
   25e60:	b	149a8 <strlen@plt>

00025e64 <str_set_find@@Base>:
   25e64:	b	25e68 <str_set_find@@Base+0x4>
   25e68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25e6c:	add	fp, sp, #24
   25e70:	ldr	r4, [r0]
   25e74:	cmp	r4, #0
   25e78:	beq	25edc <str_set_find@@Base+0x78>
   25e7c:	mov	r8, r2
   25e80:	mov	r9, r1
   25e84:	ldr	r5, [r0, #12]
   25e88:	mov	r0, r1
   25e8c:	mov	r1, r2
   25e90:	bl	25ffc <str_set_visit@@Base+0x4>
   25e94:	mov	r6, r0
   25e98:	sub	r5, r5, #1
   25e9c:	b	25ea4 <str_set_find@@Base+0x40>
   25ea0:	add	r6, r6, #1
   25ea4:	and	r0, r6, r5
   25ea8:	ldr	r7, [r4, r0, lsl #2]
   25eac:	cmp	r7, #2
   25eb0:	beq	25ea0 <str_set_find@@Base+0x3c>
   25eb4:	cmp	r7, #0
   25eb8:	beq	25edc <str_set_find@@Base+0x78>
   25ebc:	mov	r0, r9
   25ec0:	mov	r1, r8
   25ec4:	mov	r2, r7
   25ec8:	bl	26034 <str_set_visit@@Base+0x3c>
   25ecc:	cmp	r0, #0
   25ed0:	beq	25ea0 <str_set_find@@Base+0x3c>
   25ed4:	mov	r0, r7
   25ed8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25edc:	mov	r7, #0
   25ee0:	mov	r0, r7
   25ee4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025ee8 <str_set_find_item@@Base>:
   25ee8:	push	{r4, r5, fp, lr}
   25eec:	add	fp, sp, #8
   25ef0:	mov	r4, r1
   25ef4:	mov	r5, r0
   25ef8:	mov	r0, r1
   25efc:	bl	25e5c <str_set_insert_item@@Base+0x48>
   25f00:	mov	r0, r4
   25f04:	bl	25e60 <str_set_insert_item@@Base+0x4c>
   25f08:	mov	r2, r0
   25f0c:	mov	r0, r5
   25f10:	mov	r1, r4
   25f14:	pop	{r4, r5, fp, lr}
   25f18:	b	25e68 <str_set_find@@Base+0x4>

00025f1c <str_set_remove@@Base>:
   25f1c:	b	25f20 <str_set_remove@@Base+0x4>
   25f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25f24:	add	fp, sp, #28
   25f28:	sub	sp, sp, #4
   25f2c:	ldr	r5, [r0]
   25f30:	mov	r7, #0
   25f34:	cmp	r5, #0
   25f38:	beq	25fb8 <str_set_remove@@Base+0x9c>
   25f3c:	mov	r9, r2
   25f40:	mov	sl, r1
   25f44:	str	r0, [sp]
   25f48:	ldr	r6, [r0, #12]
   25f4c:	mov	r0, r1
   25f50:	mov	r1, r2
   25f54:	bl	25ffc <str_set_visit@@Base+0x4>
   25f58:	mov	r4, r0
   25f5c:	sub	r6, r6, #1
   25f60:	b	25f68 <str_set_remove@@Base+0x4c>
   25f64:	add	r4, r4, #1
   25f68:	and	r8, r4, r6
   25f6c:	ldr	r7, [r5, r8, lsl #2]
   25f70:	cmp	r7, #2
   25f74:	beq	25f64 <str_set_remove@@Base+0x48>
   25f78:	cmp	r7, #0
   25f7c:	beq	25fb4 <str_set_remove@@Base+0x98>
   25f80:	mov	r0, sl
   25f84:	mov	r1, r9
   25f88:	mov	r2, r7
   25f8c:	bl	26034 <str_set_visit@@Base+0x3c>
   25f90:	cmp	r0, #0
   25f94:	beq	25f64 <str_set_remove@@Base+0x48>
   25f98:	mov	r0, #2
   25f9c:	str	r0, [r5, r8, lsl #2]
   25fa0:	ldr	r1, [sp]
   25fa4:	ldr	r0, [r1, #8]
   25fa8:	sub	r0, r0, #1
   25fac:	str	r0, [r1, #8]
   25fb0:	b	25fb8 <str_set_remove@@Base+0x9c>
   25fb4:	mov	r7, #0
   25fb8:	mov	r0, r7
   25fbc:	sub	sp, fp, #28
   25fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025fc4 <str_set_remove_item@@Base>:
   25fc4:	push	{r4, r5, fp, lr}
   25fc8:	add	fp, sp, #8
   25fcc:	mov	r4, r1
   25fd0:	mov	r5, r0
   25fd4:	mov	r0, r1
   25fd8:	bl	25e5c <str_set_insert_item@@Base+0x48>
   25fdc:	mov	r0, r4
   25fe0:	bl	25e60 <str_set_insert_item@@Base+0x4c>
   25fe4:	mov	r2, r0
   25fe8:	mov	r0, r5
   25fec:	mov	r1, r4
   25ff0:	pop	{r4, r5, fp, lr}
   25ff4:	b	25f20 <str_set_remove@@Base+0x4>

00025ff8 <str_set_visit@@Base>:
   25ff8:	b	25abc <str_set_destroy@@Base+0x24>
   25ffc:	push	{fp, lr}
   26000:	mov	fp, sp
   26004:	sub	sp, sp, #16
   26008:	add	r2, sp, #8
   2600c:	movw	r3, #15186	; 0x3b52
   26010:	movt	r3, #12137	; 0x2f69
   26014:	str	r3, [sp]
   26018:	str	r2, [sp, #4]
   2601c:	mov	r2, r1
   26020:	mov	r3, #0
   26024:	bl	32a10 <cmetrohash64_1@@Base>
   26028:	ldr	r0, [sp, #8]
   2602c:	mov	sp, fp
   26030:	pop	{fp, pc}
   26034:	push	{fp, lr}
   26038:	mov	fp, sp
   2603c:	mov	r3, r1
   26040:	mov	r1, r2
   26044:	mov	r2, r3
   26048:	bl	14a68 <strncmp@plt>
   2604c:	clz	r0, r0
   26050:	lsr	r0, r0, #5
   26054:	pop	{fp, pc}

00026058 <ptr_set_clear@@Base>:
   26058:	b	2605c <ptr_set_clear@@Base+0x4>
   2605c:	push	{r4, sl, fp, lr}
   26060:	add	fp, sp, #8
   26064:	mov	r4, r0
   26068:	ldr	r0, [r0]
   2606c:	cmp	r0, #0
   26070:	beq	26078 <ptr_set_clear@@Base+0x20>
   26074:	bl	14900 <free@plt>
   26078:	vmov.i32	q8, #0	; 0x00000000
   2607c:	vst1.32	{d16-d17}, [r4]
   26080:	pop	{r4, sl, fp, pc}

00026084 <ptr_set_destroy@@Base>:
   26084:	push	{r4, sl, fp, lr}
   26088:	add	fp, sp, #8
   2608c:	mov	r4, r0
   26090:	cmp	r1, #0
   26094:	movne	r0, r4
   26098:	blne	260a8 <ptr_set_destroy@@Base+0x24>
   2609c:	mov	r0, r4
   260a0:	pop	{r4, sl, fp, lr}
   260a4:	b	2605c <ptr_set_clear@@Base+0x4>
   260a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   260ac:	add	fp, sp, #24
   260b0:	mov	r6, r0
   260b4:	ldr	r0, [r0, #12]
   260b8:	cmp	r0, #0
   260bc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   260c0:	mov	r8, r2
   260c4:	mov	r5, r1
   260c8:	ldr	r7, [r6]
   260cc:	mov	r4, #0
   260d0:	ldr	r1, [r7, r4, lsl #2]
   260d4:	orr	r0, r1, #2
   260d8:	cmp	r0, #2
   260dc:	beq	260e8 <ptr_set_destroy@@Base+0x64>
   260e0:	mov	r0, r8
   260e4:	blx	r5
   260e8:	ldr	r0, [r6, #12]
   260ec:	add	r4, r4, #1
   260f0:	cmp	r4, r0
   260f4:	bcc	260d0 <ptr_set_destroy@@Base+0x4c>
   260f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000260fc <ptr_set_init@@Base>:
   260fc:	b	26100 <ptr_set_init@@Base+0x4>
   26100:	push	{r4, r5, fp, lr}
   26104:	add	fp, sp, #8
   26108:	mov	r4, r0
   2610c:	mov	r2, #4
   26110:	mov	r0, #179	; 0xb3
   26114:	mov	r5, r2
   26118:	mul	r3, r2, r0
   2611c:	lsl	r2, r2, #1
   26120:	cmp	r1, r3, lsr #8
   26124:	bhi	26114 <ptr_set_init@@Base+0x18>
   26128:	mov	r0, r5
   2612c:	mov	r1, #4
   26130:	bl	148d0 <calloc@plt>
   26134:	str	r0, [r4]
   26138:	cmp	r0, #0
   2613c:	movne	r0, #0
   26140:	strne	r0, [r4, #4]
   26144:	strne	r0, [r4, #8]
   26148:	strne	r5, [r4, #12]
   2614c:	popne	{r4, r5, fp, pc}
   26150:	mvn	r0, #0
   26154:	pop	{r4, r5, fp, pc}

00026158 <ptr_set_resize@@Base>:
   26158:	b	2615c <ptr_set_resize@@Base+0x4>
   2615c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26160:	add	fp, sp, #24
   26164:	sub	sp, sp, #16
   26168:	mov	r4, r0
   2616c:	ldr	r5, [r0]
   26170:	ldr	r0, [r0, #8]
   26174:	cmp	r0, r1
   26178:	movhi	r1, r0
   2617c:	mov	r8, sp
   26180:	mov	r0, r8
   26184:	bl	26100 <ptr_set_init@@Base+0x4>
   26188:	mov	r1, r0
   2618c:	mvn	r0, #0
   26190:	cmp	r1, #0
   26194:	beq	261a0 <ptr_set_resize@@Base+0x48>
   26198:	sub	sp, fp, #24
   2619c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   261a0:	ldr	r0, [r4, #12]
   261a4:	cmp	r0, #0
   261a8:	beq	261f0 <ptr_set_resize@@Base+0x98>
   261ac:	mov	r6, #0
   261b0:	mov	r9, sp
   261b4:	ldr	r7, [r5, r6, lsl #2]
   261b8:	orr	r0, r7, #2
   261bc:	cmp	r0, #2
   261c0:	beq	261e0 <ptr_set_resize@@Base+0x88>
   261c4:	mov	r0, r7
   261c8:	bl	26428 <ptr_set_insert_item@@Base+0x34>
   261cc:	mov	r0, r9
   261d0:	mov	r1, r7
   261d4:	mov	r2, r7
   261d8:	mov	r3, #3
   261dc:	bl	26218 <ptr_set_insert@@Base+0xc>
   261e0:	ldr	r0, [r4, #12]
   261e4:	add	r6, r6, #1
   261e8:	cmp	r6, r0
   261ec:	bcc	261b4 <ptr_set_resize@@Base+0x5c>
   261f0:	mov	r0, r4
   261f4:	bl	2605c <ptr_set_clear@@Base+0x4>
   261f8:	vld1.64	{d16-d17}, [r8]
   261fc:	vst1.32	{d16-d17}, [r4]
   26200:	mov	r0, #0
   26204:	sub	sp, fp, #24
   26208:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002620c <ptr_set_insert@@Base>:
   2620c:	mov	r2, r3
   26210:	ldr	r3, [sp]
   26214:	b	26218 <ptr_set_insert@@Base+0xc>
   26218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2621c:	add	fp, sp, #28
   26220:	sub	sp, sp, #12
   26224:	cmp	r2, #2
   26228:	beq	2636c <ptr_set_insert@@Base+0x160>
   2622c:	mov	r9, r2
   26230:	cmp	r2, #1
   26234:	beq	2638c <ptr_set_insert@@Base+0x180>
   26238:	cmp	r9, #0
   2623c:	beq	263ac <ptr_set_insert@@Base+0x1a0>
   26240:	mov	r6, r3
   26244:	mov	r7, r1
   26248:	mov	r4, r0
   2624c:	ldr	r0, [r0, #8]
   26250:	ldr	r1, [r4, #12]
   26254:	mov	r2, #179	; 0xb3
   26258:	mul	r1, r1, r2
   2625c:	cmp	r0, r1, lsr #8
   26260:	bcc	26278 <ptr_set_insert@@Base+0x6c>
   26264:	lsl	r1, r0, #1
   26268:	mov	r0, r4
   2626c:	bl	2615c <ptr_set_resize@@Base+0x4>
   26270:	cmp	r0, #0
   26274:	bne	263cc <ptr_set_insert@@Base+0x1c0>
   26278:	ldr	r8, [r4]
   2627c:	ldr	r0, [r4, #12]
   26280:	sub	r5, r0, #1
   26284:	mov	r0, r7
   26288:	bl	26590 <ptr_set_visit@@Base+0x4>
   2628c:	and	r1, r0, r5
   26290:	orr	r2, r6, #1
   26294:	cmp	r2, #3
   26298:	bne	262d0 <ptr_set_insert@@Base+0xc4>
   2629c:	ldr	r2, [r4, #8]
   262a0:	add	r2, r2, #1
   262a4:	str	r2, [r4, #8]
   262a8:	b	262b0 <ptr_set_insert@@Base+0xa4>
   262ac:	and	r1, r0, r5
   262b0:	add	r0, r0, #1
   262b4:	mov	r4, r8
   262b8:	ldr	r1, [r4, r1, lsl #2]!
   262bc:	orr	r1, r1, #2
   262c0:	cmp	r1, #2
   262c4:	bne	262ac <ptr_set_insert@@Base+0xa0>
   262c8:	mov	r6, #0
   262cc:	b	26348 <ptr_set_insert@@Base+0x13c>
   262d0:	str	r6, [sp]
   262d4:	stmib	sp, {r4, r9}
   262d8:	add	sl, r0, #1
   262dc:	mov	r9, #0
   262e0:	b	262ec <ptr_set_insert@@Base+0xe0>
   262e4:	and	r1, sl, r5
   262e8:	add	sl, sl, #1
   262ec:	mov	r4, r8
   262f0:	ldr	r6, [r4, r1, lsl #2]!
   262f4:	cmp	r6, #2
   262f8:	beq	2631c <ptr_set_insert@@Base+0x110>
   262fc:	cmp	r6, #0
   26300:	beq	26328 <ptr_set_insert@@Base+0x11c>
   26304:	mov	r0, r7
   26308:	mov	r1, r6
   2630c:	bl	265b0 <ptr_set_visit@@Base+0x24>
   26310:	cmp	r0, #0
   26314:	beq	262e4 <ptr_set_insert@@Base+0xd8>
   26318:	b	26358 <ptr_set_insert@@Base+0x14c>
   2631c:	cmp	r9, #0
   26320:	moveq	r9, r4
   26324:	b	262e4 <ptr_set_insert@@Base+0xd8>
   26328:	ldr	r1, [sp, #4]
   2632c:	ldr	r0, [r1, #8]
   26330:	add	r0, r0, #1
   26334:	str	r0, [r1, #8]
   26338:	cmp	r9, #0
   2633c:	movne	r4, r9
   26340:	mov	r6, #0
   26344:	ldr	r9, [sp, #8]
   26348:	str	r9, [r4]
   2634c:	mov	r0, r6
   26350:	sub	sp, fp, #28
   26354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26358:	ldr	r0, [sp]
   2635c:	cmp	r0, #0
   26360:	ldr	r9, [sp, #8]
   26364:	streq	r9, [r4]
   26368:	b	2634c <ptr_set_insert@@Base+0x140>
   2636c:	movw	r0, #54861	; 0xd64d
   26370:	movt	r0, #4
   26374:	movw	r1, #54707	; 0xd5b3
   26378:	movt	r1, #4
   2637c:	movw	r3, #54787	; 0xd603
   26380:	movt	r3, #4
   26384:	mov	r2, #115	; 0x73
   26388:	bl	14a80 <__assert_fail@plt>
   2638c:	movw	r0, #54884	; 0xd664
   26390:	movt	r0, #4
   26394:	movw	r1, #54707	; 0xd5b3
   26398:	movt	r1, #4
   2639c:	movw	r3, #54787	; 0xd603
   263a0:	movt	r3, #4
   263a4:	mov	r2, #116	; 0x74
   263a8:	bl	14a80 <__assert_fail@plt>
   263ac:	movw	r0, #54684	; 0xd59c
   263b0:	movt	r0, #4
   263b4:	movw	r1, #54707	; 0xd5b3
   263b8:	movt	r1, #4
   263bc:	movw	r3, #54787	; 0xd603
   263c0:	movt	r3, #4
   263c4:	mov	r2, #114	; 0x72
   263c8:	bl	14a80 <__assert_fail@plt>
   263cc:	movw	r0, #8368	; 0x20b0
   263d0:	movt	r0, #6
   263d4:	ldr	r0, [r0]
   263d8:	movw	r1, #54905	; 0xd679
   263dc:	movt	r1, #4
   263e0:	movw	r2, #54928	; 0xd690
   263e4:	movt	r2, #4
   263e8:	bl	149c0 <fprintf@plt>
   263ec:	mov	r0, #1
   263f0:	bl	1499c <exit@plt>

000263f4 <ptr_set_insert_item@@Base>:
   263f4:	push	{r4, r5, r6, sl, fp, lr}
   263f8:	add	fp, sp, #16
   263fc:	mov	r4, r2
   26400:	mov	r5, r1
   26404:	mov	r6, r0
   26408:	mov	r0, r1
   2640c:	bl	26428 <ptr_set_insert_item@@Base+0x34>
   26410:	mov	r0, r6
   26414:	mov	r1, r5
   26418:	mov	r2, r5
   2641c:	mov	r3, r4
   26420:	pop	{r4, r5, r6, sl, fp, lr}
   26424:	b	26218 <ptr_set_insert@@Base+0xc>
   26428:	bx	lr

0002642c <ptr_set_find@@Base>:
   2642c:	b	26430 <ptr_set_find@@Base+0x4>
   26430:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26434:	add	fp, sp, #24
   26438:	ldr	r7, [r0]
   2643c:	cmp	r7, #0
   26440:	beq	26498 <ptr_set_find@@Base+0x6c>
   26444:	mov	r8, r1
   26448:	ldr	r0, [r0, #12]
   2644c:	sub	r4, r0, #1
   26450:	mov	r0, r1
   26454:	bl	26590 <ptr_set_visit@@Base+0x4>
   26458:	mov	r5, r0
   2645c:	b	26464 <ptr_set_find@@Base+0x38>
   26460:	add	r5, r5, #1
   26464:	and	r0, r5, r4
   26468:	ldr	r6, [r7, r0, lsl #2]
   2646c:	cmp	r6, #2
   26470:	beq	26460 <ptr_set_find@@Base+0x34>
   26474:	cmp	r6, #0
   26478:	beq	26498 <ptr_set_find@@Base+0x6c>
   2647c:	mov	r0, r8
   26480:	mov	r1, r6
   26484:	bl	265b0 <ptr_set_visit@@Base+0x24>
   26488:	cmp	r0, #0
   2648c:	beq	26460 <ptr_set_find@@Base+0x34>
   26490:	mov	r0, r6
   26494:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26498:	mov	r6, #0
   2649c:	mov	r0, r6
   264a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000264a4 <ptr_set_find_item@@Base>:
   264a4:	push	{r4, r5, fp, lr}
   264a8:	add	fp, sp, #8
   264ac:	mov	r4, r1
   264b0:	mov	r5, r0
   264b4:	mov	r0, r1
   264b8:	bl	26428 <ptr_set_insert_item@@Base+0x34>
   264bc:	mov	r0, r5
   264c0:	mov	r1, r4
   264c4:	pop	{r4, r5, fp, lr}
   264c8:	b	26430 <ptr_set_find@@Base+0x4>

000264cc <ptr_set_remove@@Base>:
   264cc:	b	264d0 <ptr_set_remove@@Base+0x4>
   264d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   264d4:	add	fp, sp, #28
   264d8:	sub	sp, sp, #4
   264dc:	ldr	sl, [r0]
   264e0:	mov	r6, #0
   264e4:	cmp	sl, #0
   264e8:	beq	26558 <ptr_set_remove@@Base+0x8c>
   264ec:	mov	r9, r1
   264f0:	mov	r8, r0
   264f4:	ldr	r0, [r0, #12]
   264f8:	sub	r5, r0, #1
   264fc:	mov	r0, r1
   26500:	bl	26590 <ptr_set_visit@@Base+0x4>
   26504:	mov	r7, r0
   26508:	b	26510 <ptr_set_remove@@Base+0x44>
   2650c:	add	r7, r7, #1
   26510:	and	r4, r7, r5
   26514:	ldr	r6, [sl, r4, lsl #2]
   26518:	cmp	r6, #2
   2651c:	beq	2650c <ptr_set_remove@@Base+0x40>
   26520:	cmp	r6, #0
   26524:	beq	26554 <ptr_set_remove@@Base+0x88>
   26528:	mov	r0, r9
   2652c:	mov	r1, r6
   26530:	bl	265b0 <ptr_set_visit@@Base+0x24>
   26534:	cmp	r0, #0
   26538:	beq	2650c <ptr_set_remove@@Base+0x40>
   2653c:	mov	r0, #2
   26540:	str	r0, [sl, r4, lsl #2]
   26544:	ldr	r0, [r8, #8]
   26548:	sub	r0, r0, #1
   2654c:	str	r0, [r8, #8]
   26550:	b	26558 <ptr_set_remove@@Base+0x8c>
   26554:	mov	r6, #0
   26558:	mov	r0, r6
   2655c:	sub	sp, fp, #28
   26560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026564 <ptr_set_remove_item@@Base>:
   26564:	push	{r4, r5, fp, lr}
   26568:	add	fp, sp, #8
   2656c:	mov	r4, r1
   26570:	mov	r5, r0
   26574:	mov	r0, r1
   26578:	bl	26428 <ptr_set_insert_item@@Base+0x34>
   2657c:	mov	r0, r5
   26580:	mov	r1, r4
   26584:	pop	{r4, r5, fp, lr}
   26588:	b	264d0 <ptr_set_remove@@Base+0x4>

0002658c <ptr_set_visit@@Base>:
   2658c:	b	260a8 <ptr_set_destroy@@Base+0x24>
   26590:	push	{fp, lr}
   26594:	mov	fp, sp
   26598:	sub	sp, sp, #8
   2659c:	str	r0, [sp, #4]
   265a0:	add	r0, sp, #4
   265a4:	bl	265c0 <ptr_set_visit@@Base+0x34>
   265a8:	mov	sp, fp
   265ac:	pop	{fp, pc}
   265b0:	sub	r0, r0, r1
   265b4:	clz	r0, r0
   265b8:	lsr	r0, r0, #5
   265bc:	bx	lr
   265c0:	push	{fp, lr}
   265c4:	mov	fp, sp
   265c8:	sub	sp, sp, #16
   265cc:	add	r1, sp, #8
   265d0:	movw	r2, #15186	; 0x3b52
   265d4:	movt	r2, #12137	; 0x2f69
   265d8:	str	r2, [sp]
   265dc:	str	r1, [sp, #4]
   265e0:	mov	r2, #4
   265e4:	mov	r3, #0
   265e8:	bl	32a10 <cmetrohash64_1@@Base>
   265ec:	ldr	r0, [sp, #8]
   265f0:	mov	sp, fp
   265f4:	pop	{fp, pc}

000265f8 <fb_symbol_table_clear@@Base>:
   265f8:	b	265fc <fb_symbol_table_clear@@Base+0x4>
   265fc:	push	{r4, sl, fp, lr}
   26600:	add	fp, sp, #8
   26604:	mov	r4, r0
   26608:	ldr	r0, [r0]
   2660c:	cmp	r0, #0
   26610:	beq	26618 <fb_symbol_table_clear@@Base+0x20>
   26614:	bl	14900 <free@plt>
   26618:	vmov.i32	q8, #0	; 0x00000000
   2661c:	vst1.32	{d16-d17}, [r4]
   26620:	pop	{r4, sl, fp, pc}

00026624 <fb_symbol_table_destroy@@Base>:
   26624:	push	{r4, sl, fp, lr}
   26628:	add	fp, sp, #8
   2662c:	mov	r4, r0
   26630:	cmp	r1, #0
   26634:	movne	r0, r4
   26638:	blne	26648 <fb_symbol_table_destroy@@Base+0x24>
   2663c:	mov	r0, r4
   26640:	pop	{r4, sl, fp, lr}
   26644:	b	265fc <fb_symbol_table_clear@@Base+0x4>
   26648:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2664c:	add	fp, sp, #24
   26650:	mov	r6, r0
   26654:	ldr	r0, [r0, #12]
   26658:	cmp	r0, #0
   2665c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   26660:	mov	r8, r2
   26664:	mov	r5, r1
   26668:	ldr	r7, [r6]
   2666c:	mov	r4, #0
   26670:	ldr	r1, [r7, r4, lsl #2]
   26674:	orr	r0, r1, #2
   26678:	cmp	r0, #2
   2667c:	beq	26688 <fb_symbol_table_destroy@@Base+0x64>
   26680:	mov	r0, r8
   26684:	blx	r5
   26688:	ldr	r0, [r6, #12]
   2668c:	add	r4, r4, #1
   26690:	cmp	r4, r0
   26694:	bcc	26670 <fb_symbol_table_destroy@@Base+0x4c>
   26698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002669c <fb_symbol_table_init@@Base>:
   2669c:	b	266a0 <fb_symbol_table_init@@Base+0x4>
   266a0:	push	{r4, r5, fp, lr}
   266a4:	add	fp, sp, #8
   266a8:	mov	r4, r0
   266ac:	mov	r2, #4
   266b0:	mov	r0, #179	; 0xb3
   266b4:	mov	r5, r2
   266b8:	mul	r3, r2, r0
   266bc:	lsl	r2, r2, #1
   266c0:	cmp	r1, r3, lsr #8
   266c4:	bhi	266b4 <fb_symbol_table_init@@Base+0x18>
   266c8:	mov	r0, r5
   266cc:	mov	r1, #4
   266d0:	bl	148d0 <calloc@plt>
   266d4:	str	r0, [r4]
   266d8:	cmp	r0, #0
   266dc:	movne	r0, #0
   266e0:	strne	r0, [r4, #4]
   266e4:	strne	r0, [r4, #8]
   266e8:	strne	r5, [r4, #12]
   266ec:	popne	{r4, r5, fp, pc}
   266f0:	mvn	r0, #0
   266f4:	pop	{r4, r5, fp, pc}

000266f8 <fb_symbol_table_resize@@Base>:
   266f8:	b	266fc <fb_symbol_table_resize@@Base+0x4>
   266fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26700:	add	fp, sp, #28
   26704:	sub	sp, sp, #28
   26708:	mov	r4, r0
   2670c:	ldr	sl, [r0]
   26710:	ldr	r0, [r0, #8]
   26714:	cmp	r0, r1
   26718:	movhi	r1, r0
   2671c:	add	r0, sp, #8
   26720:	bl	266a0 <fb_symbol_table_init@@Base+0x4>
   26724:	mov	r1, r0
   26728:	mvn	r0, #0
   2672c:	cmp	r1, #0
   26730:	beq	2673c <fb_symbol_table_resize@@Base+0x44>
   26734:	sub	sp, fp, #28
   26738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2673c:	ldr	r0, [r4, #12]
   26740:	cmp	r0, #0
   26744:	beq	267a0 <fb_symbol_table_resize@@Base+0xa8>
   26748:	mov	r6, #0
   2674c:	mov	r8, #3
   26750:	add	r9, sp, #8
   26754:	ldr	r7, [sl, r6, lsl #2]
   26758:	orr	r0, r7, #2
   2675c:	cmp	r0, #2
   26760:	beq	26790 <fb_symbol_table_resize@@Base+0x98>
   26764:	mov	r0, r7
   26768:	bl	269f4 <fb_symbol_table_insert_item@@Base+0x4c>
   2676c:	mov	r5, r0
   26770:	mov	r0, r7
   26774:	bl	26a00 <fb_symbol_table_insert_item@@Base+0x58>
   26778:	mov	r2, r0
   2677c:	str	r8, [sp]
   26780:	mov	r0, r9
   26784:	mov	r1, r5
   26788:	mov	r3, r7
   2678c:	bl	267c4 <fb_symbol_table_insert@@Base+0x4>
   26790:	ldr	r0, [r4, #12]
   26794:	add	r6, r6, #1
   26798:	cmp	r6, r0
   2679c:	bcc	26754 <fb_symbol_table_resize@@Base+0x5c>
   267a0:	mov	r0, r4
   267a4:	bl	265fc <fb_symbol_table_clear@@Base+0x4>
   267a8:	add	r0, sp, #8
   267ac:	vld1.64	{d16-d17}, [r0]
   267b0:	vst1.32	{d16-d17}, [r4]
   267b4:	mov	r0, #0
   267b8:	sub	sp, fp, #28
   267bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000267c0 <fb_symbol_table_insert@@Base>:
   267c0:	b	267c4 <fb_symbol_table_insert@@Base+0x4>
   267c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   267c8:	add	fp, sp, #28
   267cc:	sub	sp, sp, #12
   267d0:	str	r2, [sp, #8]
   267d4:	cmp	r3, #2
   267d8:	beq	26920 <fb_symbol_table_insert@@Base+0x160>
   267dc:	mov	r9, r3
   267e0:	cmp	r3, #1
   267e4:	beq	26940 <fb_symbol_table_insert@@Base+0x180>
   267e8:	cmp	r9, #0
   267ec:	beq	26960 <fb_symbol_table_insert@@Base+0x1a0>
   267f0:	mov	r7, r1
   267f4:	mov	r5, r0
   267f8:	ldr	r0, [r0, #8]
   267fc:	ldr	r1, [r5, #12]
   26800:	mov	r2, #179	; 0xb3
   26804:	mul	r1, r1, r2
   26808:	cmp	r0, r1, lsr #8
   2680c:	bcc	26824 <fb_symbol_table_insert@@Base+0x64>
   26810:	lsl	r1, r0, #1
   26814:	mov	r0, r5
   26818:	bl	266fc <fb_symbol_table_resize@@Base+0x4>
   2681c:	cmp	r0, #0
   26820:	bne	26980 <fb_symbol_table_insert@@Base+0x1c0>
   26824:	ldr	sl, [fp, #8]
   26828:	ldr	r8, [r5]
   2682c:	ldr	r4, [r5, #12]
   26830:	mov	r0, r7
   26834:	ldr	r1, [sp, #8]
   26838:	bl	26bac <fb_symbol_table_visit@@Base+0x4>
   2683c:	sub	r6, r4, #1
   26840:	and	r1, r0, r6
   26844:	orr	r2, sl, #1
   26848:	cmp	r2, #3
   2684c:	bne	26884 <fb_symbol_table_insert@@Base+0xc4>
   26850:	ldr	r2, [r5, #8]
   26854:	add	r2, r2, #1
   26858:	str	r2, [r5, #8]
   2685c:	b	26864 <fb_symbol_table_insert@@Base+0xa4>
   26860:	and	r1, r0, r6
   26864:	add	r0, r0, #1
   26868:	mov	r5, r8
   2686c:	ldr	r1, [r5, r1, lsl #2]!
   26870:	orr	r1, r1, #2
   26874:	cmp	r1, #2
   26878:	bne	26860 <fb_symbol_table_insert@@Base+0xa0>
   2687c:	mov	r4, #0
   26880:	b	268fc <fb_symbol_table_insert@@Base+0x13c>
   26884:	stm	sp, {r5, r9}
   26888:	add	sl, r0, #1
   2688c:	mov	r9, #0
   26890:	b	2689c <fb_symbol_table_insert@@Base+0xdc>
   26894:	and	r1, sl, r6
   26898:	add	sl, sl, #1
   2689c:	mov	r5, r8
   268a0:	ldr	r4, [r5, r1, lsl #2]!
   268a4:	cmp	r4, #2
   268a8:	beq	268d0 <fb_symbol_table_insert@@Base+0x110>
   268ac:	cmp	r4, #0
   268b0:	beq	268dc <fb_symbol_table_insert@@Base+0x11c>
   268b4:	mov	r0, r7
   268b8:	ldr	r1, [sp, #8]
   268bc:	mov	r2, r4
   268c0:	bl	26be4 <fb_symbol_table_visit@@Base+0x3c>
   268c4:	cmp	r0, #0
   268c8:	beq	26894 <fb_symbol_table_insert@@Base+0xd4>
   268cc:	b	2690c <fb_symbol_table_insert@@Base+0x14c>
   268d0:	cmp	r9, #0
   268d4:	moveq	r9, r5
   268d8:	b	26894 <fb_symbol_table_insert@@Base+0xd4>
   268dc:	ldr	r1, [sp]
   268e0:	ldr	r0, [r1, #8]
   268e4:	add	r0, r0, #1
   268e8:	str	r0, [r1, #8]
   268ec:	cmp	r9, #0
   268f0:	movne	r5, r9
   268f4:	mov	r4, #0
   268f8:	ldr	r9, [sp, #4]
   268fc:	str	r9, [r5]
   26900:	mov	r0, r4
   26904:	sub	sp, fp, #28
   26908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2690c:	ldr	r0, [fp, #8]
   26910:	cmp	r0, #0
   26914:	ldr	r9, [sp, #4]
   26918:	streq	r9, [r5]
   2691c:	b	26900 <fb_symbol_table_insert@@Base+0x140>
   26920:	movw	r0, #54861	; 0xd64d
   26924:	movt	r0, #4
   26928:	movw	r1, #54707	; 0xd5b3
   2692c:	movt	r1, #4
   26930:	movw	r3, #54787	; 0xd603
   26934:	movt	r3, #4
   26938:	mov	r2, #115	; 0x73
   2693c:	bl	14a80 <__assert_fail@plt>
   26940:	movw	r0, #54884	; 0xd664
   26944:	movt	r0, #4
   26948:	movw	r1, #54707	; 0xd5b3
   2694c:	movt	r1, #4
   26950:	movw	r3, #54787	; 0xd603
   26954:	movt	r3, #4
   26958:	mov	r2, #116	; 0x74
   2695c:	bl	14a80 <__assert_fail@plt>
   26960:	movw	r0, #54684	; 0xd59c
   26964:	movt	r0, #4
   26968:	movw	r1, #54707	; 0xd5b3
   2696c:	movt	r1, #4
   26970:	movw	r3, #54787	; 0xd603
   26974:	movt	r3, #4
   26978:	mov	r2, #114	; 0x72
   2697c:	bl	14a80 <__assert_fail@plt>
   26980:	movw	r0, #8368	; 0x20b0
   26984:	movt	r0, #6
   26988:	ldr	r0, [r0]
   2698c:	movw	r1, #54905	; 0xd679
   26990:	movt	r1, #4
   26994:	movw	r2, #54928	; 0xd690
   26998:	movt	r2, #4
   2699c:	bl	149c0 <fprintf@plt>
   269a0:	mov	r0, #1
   269a4:	bl	1499c <exit@plt>

000269a8 <fb_symbol_table_insert_item@@Base>:
   269a8:	push	{r4, r5, r6, r7, fp, lr}
   269ac:	add	fp, sp, #16
   269b0:	sub	sp, sp, #8
   269b4:	mov	r4, r2
   269b8:	mov	r5, r1
   269bc:	mov	r6, r0
   269c0:	mov	r0, r1
   269c4:	bl	269f4 <fb_symbol_table_insert_item@@Base+0x4c>
   269c8:	mov	r7, r0
   269cc:	mov	r0, r5
   269d0:	bl	26a00 <fb_symbol_table_insert_item@@Base+0x58>
   269d4:	mov	r2, r0
   269d8:	str	r4, [sp]
   269dc:	mov	r0, r6
   269e0:	mov	r1, r7
   269e4:	mov	r3, r5
   269e8:	bl	267c4 <fb_symbol_table_insert@@Base+0x4>
   269ec:	sub	sp, fp, #16
   269f0:	pop	{r4, r5, r6, r7, fp, pc}
   269f4:	ldr	r0, [r0, #4]
   269f8:	ldr	r0, [r0]
   269fc:	bx	lr
   26a00:	ldr	r0, [r0, #4]
   26a04:	ldr	r0, [r0, #4]
   26a08:	bx	lr

00026a0c <fb_symbol_table_find@@Base>:
   26a0c:	b	26a10 <fb_symbol_table_find@@Base+0x4>
   26a10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26a14:	add	fp, sp, #24
   26a18:	ldr	r4, [r0]
   26a1c:	cmp	r4, #0
   26a20:	beq	26a84 <fb_symbol_table_find@@Base+0x78>
   26a24:	mov	r8, r2
   26a28:	mov	r9, r1
   26a2c:	ldr	r5, [r0, #12]
   26a30:	mov	r0, r1
   26a34:	mov	r1, r2
   26a38:	bl	26bac <fb_symbol_table_visit@@Base+0x4>
   26a3c:	mov	r6, r0
   26a40:	sub	r5, r5, #1
   26a44:	b	26a4c <fb_symbol_table_find@@Base+0x40>
   26a48:	add	r6, r6, #1
   26a4c:	and	r0, r6, r5
   26a50:	ldr	r7, [r4, r0, lsl #2]
   26a54:	cmp	r7, #2
   26a58:	beq	26a48 <fb_symbol_table_find@@Base+0x3c>
   26a5c:	cmp	r7, #0
   26a60:	beq	26a84 <fb_symbol_table_find@@Base+0x78>
   26a64:	mov	r0, r9
   26a68:	mov	r1, r8
   26a6c:	mov	r2, r7
   26a70:	bl	26be4 <fb_symbol_table_visit@@Base+0x3c>
   26a74:	cmp	r0, #0
   26a78:	beq	26a48 <fb_symbol_table_find@@Base+0x3c>
   26a7c:	mov	r0, r7
   26a80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26a84:	mov	r7, #0
   26a88:	mov	r0, r7
   26a8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026a90 <fb_symbol_table_find_item@@Base>:
   26a90:	push	{r4, r5, r6, sl, fp, lr}
   26a94:	add	fp, sp, #16
   26a98:	mov	r4, r1
   26a9c:	mov	r5, r0
   26aa0:	mov	r0, r1
   26aa4:	bl	269f4 <fb_symbol_table_insert_item@@Base+0x4c>
   26aa8:	mov	r6, r0
   26aac:	mov	r0, r4
   26ab0:	bl	26a00 <fb_symbol_table_insert_item@@Base+0x58>
   26ab4:	mov	r2, r0
   26ab8:	mov	r0, r5
   26abc:	mov	r1, r6
   26ac0:	pop	{r4, r5, r6, sl, fp, lr}
   26ac4:	b	26a10 <fb_symbol_table_find@@Base+0x4>

00026ac8 <fb_symbol_table_remove@@Base>:
   26ac8:	b	26acc <fb_symbol_table_remove@@Base+0x4>
   26acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ad0:	add	fp, sp, #28
   26ad4:	sub	sp, sp, #4
   26ad8:	ldr	r5, [r0]
   26adc:	mov	r7, #0
   26ae0:	cmp	r5, #0
   26ae4:	beq	26b64 <fb_symbol_table_remove@@Base+0x9c>
   26ae8:	mov	r9, r2
   26aec:	mov	sl, r1
   26af0:	str	r0, [sp]
   26af4:	ldr	r6, [r0, #12]
   26af8:	mov	r0, r1
   26afc:	mov	r1, r2
   26b00:	bl	26bac <fb_symbol_table_visit@@Base+0x4>
   26b04:	mov	r4, r0
   26b08:	sub	r6, r6, #1
   26b0c:	b	26b14 <fb_symbol_table_remove@@Base+0x4c>
   26b10:	add	r4, r4, #1
   26b14:	and	r8, r4, r6
   26b18:	ldr	r7, [r5, r8, lsl #2]
   26b1c:	cmp	r7, #2
   26b20:	beq	26b10 <fb_symbol_table_remove@@Base+0x48>
   26b24:	cmp	r7, #0
   26b28:	beq	26b60 <fb_symbol_table_remove@@Base+0x98>
   26b2c:	mov	r0, sl
   26b30:	mov	r1, r9
   26b34:	mov	r2, r7
   26b38:	bl	26be4 <fb_symbol_table_visit@@Base+0x3c>
   26b3c:	cmp	r0, #0
   26b40:	beq	26b10 <fb_symbol_table_remove@@Base+0x48>
   26b44:	mov	r0, #2
   26b48:	str	r0, [r5, r8, lsl #2]
   26b4c:	ldr	r1, [sp]
   26b50:	ldr	r0, [r1, #8]
   26b54:	sub	r0, r0, #1
   26b58:	str	r0, [r1, #8]
   26b5c:	b	26b64 <fb_symbol_table_remove@@Base+0x9c>
   26b60:	mov	r7, #0
   26b64:	mov	r0, r7
   26b68:	sub	sp, fp, #28
   26b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026b70 <fb_symbol_table_remove_item@@Base>:
   26b70:	push	{r4, r5, r6, sl, fp, lr}
   26b74:	add	fp, sp, #16
   26b78:	mov	r4, r1
   26b7c:	mov	r5, r0
   26b80:	mov	r0, r1
   26b84:	bl	269f4 <fb_symbol_table_insert_item@@Base+0x4c>
   26b88:	mov	r6, r0
   26b8c:	mov	r0, r4
   26b90:	bl	26a00 <fb_symbol_table_insert_item@@Base+0x58>
   26b94:	mov	r2, r0
   26b98:	mov	r0, r5
   26b9c:	mov	r1, r6
   26ba0:	pop	{r4, r5, r6, sl, fp, lr}
   26ba4:	b	26acc <fb_symbol_table_remove@@Base+0x4>

00026ba8 <fb_symbol_table_visit@@Base>:
   26ba8:	b	26648 <fb_symbol_table_destroy@@Base+0x24>
   26bac:	push	{fp, lr}
   26bb0:	mov	fp, sp
   26bb4:	sub	sp, sp, #16
   26bb8:	add	r2, sp, #8
   26bbc:	movw	r3, #15186	; 0x3b52
   26bc0:	movt	r3, #12137	; 0x2f69
   26bc4:	str	r3, [sp]
   26bc8:	str	r2, [sp, #4]
   26bcc:	mov	r2, r1
   26bd0:	mov	r3, #0
   26bd4:	bl	32a10 <cmetrohash64_1@@Base>
   26bd8:	ldr	r0, [sp, #8]
   26bdc:	mov	sp, fp
   26be0:	pop	{fp, pc}
   26be4:	push	{r4, r5, r6, sl, fp, lr}
   26be8:	add	fp, sp, #16
   26bec:	mov	r6, r2
   26bf0:	mov	r4, r1
   26bf4:	mov	r5, r0
   26bf8:	mov	r0, r2
   26bfc:	bl	26a00 <fb_symbol_table_insert_item@@Base+0x58>
   26c00:	mov	r1, r0
   26c04:	mov	r0, #0
   26c08:	cmp	r1, r4
   26c0c:	popne	{r4, r5, r6, sl, fp, pc}
   26c10:	mov	r0, r6
   26c14:	bl	269f4 <fb_symbol_table_insert_item@@Base+0x4c>
   26c18:	mov	r1, r0
   26c1c:	mov	r0, r5
   26c20:	mov	r2, r4
   26c24:	bl	14924 <memcmp@plt>
   26c28:	clz	r0, r0
   26c2c:	lsr	r0, r0, #5
   26c30:	pop	{r4, r5, r6, sl, fp, pc}

00026c34 <fb_scope_table_clear@@Base>:
   26c34:	b	26c38 <fb_scope_table_clear@@Base+0x4>
   26c38:	push	{r4, sl, fp, lr}
   26c3c:	add	fp, sp, #8
   26c40:	mov	r4, r0
   26c44:	ldr	r0, [r0]
   26c48:	cmp	r0, #0
   26c4c:	beq	26c54 <fb_scope_table_clear@@Base+0x20>
   26c50:	bl	14900 <free@plt>
   26c54:	vmov.i32	q8, #0	; 0x00000000
   26c58:	vst1.32	{d16-d17}, [r4]
   26c5c:	pop	{r4, sl, fp, pc}

00026c60 <fb_scope_table_destroy@@Base>:
   26c60:	push	{r4, sl, fp, lr}
   26c64:	add	fp, sp, #8
   26c68:	mov	r4, r0
   26c6c:	cmp	r1, #0
   26c70:	movne	r0, r4
   26c74:	blne	26c84 <fb_scope_table_destroy@@Base+0x24>
   26c78:	mov	r0, r4
   26c7c:	pop	{r4, sl, fp, lr}
   26c80:	b	26c38 <fb_scope_table_clear@@Base+0x4>
   26c84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26c88:	add	fp, sp, #24
   26c8c:	mov	r6, r0
   26c90:	ldr	r0, [r0, #12]
   26c94:	cmp	r0, #0
   26c98:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   26c9c:	mov	r8, r2
   26ca0:	mov	r5, r1
   26ca4:	ldr	r7, [r6]
   26ca8:	mov	r4, #0
   26cac:	ldr	r1, [r7, r4, lsl #2]
   26cb0:	orr	r0, r1, #2
   26cb4:	cmp	r0, #2
   26cb8:	beq	26cc4 <fb_scope_table_destroy@@Base+0x64>
   26cbc:	mov	r0, r8
   26cc0:	blx	r5
   26cc4:	ldr	r0, [r6, #12]
   26cc8:	add	r4, r4, #1
   26ccc:	cmp	r4, r0
   26cd0:	bcc	26cac <fb_scope_table_destroy@@Base+0x4c>
   26cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026cd8 <fb_scope_table_init@@Base>:
   26cd8:	b	26cdc <fb_scope_table_init@@Base+0x4>
   26cdc:	push	{r4, r5, fp, lr}
   26ce0:	add	fp, sp, #8
   26ce4:	mov	r4, r0
   26ce8:	mov	r2, #4
   26cec:	mov	r0, #179	; 0xb3
   26cf0:	mov	r5, r2
   26cf4:	mul	r3, r2, r0
   26cf8:	lsl	r2, r2, #1
   26cfc:	cmp	r1, r3, lsr #8
   26d00:	bhi	26cf0 <fb_scope_table_init@@Base+0x18>
   26d04:	mov	r0, r5
   26d08:	mov	r1, #4
   26d0c:	bl	148d0 <calloc@plt>
   26d10:	str	r0, [r4]
   26d14:	cmp	r0, #0
   26d18:	movne	r0, #0
   26d1c:	strne	r0, [r4, #4]
   26d20:	strne	r0, [r4, #8]
   26d24:	strne	r5, [r4, #12]
   26d28:	popne	{r4, r5, fp, pc}
   26d2c:	mvn	r0, #0
   26d30:	pop	{r4, r5, fp, pc}

00026d34 <fb_scope_table_resize@@Base>:
   26d34:	b	26d38 <fb_scope_table_resize@@Base+0x4>
   26d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26d3c:	add	fp, sp, #28
   26d40:	sub	sp, sp, #28
   26d44:	mov	r4, r0
   26d48:	ldr	r5, [r0]
   26d4c:	ldr	r0, [r0, #8]
   26d50:	cmp	r0, r1
   26d54:	movhi	r1, r0
   26d58:	add	r8, sp, #8
   26d5c:	mov	r0, r8
   26d60:	bl	26cdc <fb_scope_table_init@@Base+0x4>
   26d64:	mov	r1, r0
   26d68:	mvn	r0, #0
   26d6c:	cmp	r1, #0
   26d70:	beq	26d7c <fb_scope_table_resize@@Base+0x48>
   26d74:	sub	sp, fp, #28
   26d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26d7c:	ldr	r0, [r4, #12]
   26d80:	cmp	r0, #0
   26d84:	beq	26dd4 <fb_scope_table_resize@@Base+0xa0>
   26d88:	mov	r6, #0
   26d8c:	mov	sl, #3
   26d90:	add	r9, sp, #8
   26d94:	ldr	r7, [r5, r6, lsl #2]
   26d98:	orr	r0, r7, #2
   26d9c:	cmp	r0, #2
   26da0:	beq	26dc4 <fb_scope_table_resize@@Base+0x90>
   26da4:	mov	r0, r7
   26da8:	bl	27018 <fb_scope_table_insert_item@@Base+0x40>
   26dac:	mov	r1, r0
   26db0:	str	sl, [sp]
   26db4:	mov	r0, r9
   26db8:	mov	r2, #0
   26dbc:	mov	r3, r7
   26dc0:	bl	26df4 <fb_scope_table_insert@@Base+0x4>
   26dc4:	ldr	r0, [r4, #12]
   26dc8:	add	r6, r6, #1
   26dcc:	cmp	r6, r0
   26dd0:	bcc	26d94 <fb_scope_table_resize@@Base+0x60>
   26dd4:	mov	r0, r4
   26dd8:	bl	26c38 <fb_scope_table_clear@@Base+0x4>
   26ddc:	vld1.64	{d16-d17}, [r8]
   26de0:	vst1.32	{d16-d17}, [r4]
   26de4:	mov	r0, #0
   26de8:	sub	sp, fp, #28
   26dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026df0 <fb_scope_table_insert@@Base>:
   26df0:	b	26df4 <fb_scope_table_insert@@Base+0x4>
   26df4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26df8:	add	fp, sp, #28
   26dfc:	sub	sp, sp, #12
   26e00:	str	r2, [sp, #8]
   26e04:	cmp	r3, #2
   26e08:	beq	26f50 <fb_scope_table_insert@@Base+0x160>
   26e0c:	mov	r9, r3
   26e10:	cmp	r3, #1
   26e14:	beq	26f70 <fb_scope_table_insert@@Base+0x180>
   26e18:	cmp	r9, #0
   26e1c:	beq	26f90 <fb_scope_table_insert@@Base+0x1a0>
   26e20:	mov	r7, r1
   26e24:	mov	r5, r0
   26e28:	ldr	r0, [r0, #8]
   26e2c:	ldr	r1, [r5, #12]
   26e30:	mov	r2, #179	; 0xb3
   26e34:	mul	r1, r1, r2
   26e38:	cmp	r0, r1, lsr #8
   26e3c:	bcc	26e54 <fb_scope_table_insert@@Base+0x64>
   26e40:	lsl	r1, r0, #1
   26e44:	mov	r0, r5
   26e48:	bl	26d38 <fb_scope_table_resize@@Base+0x4>
   26e4c:	cmp	r0, #0
   26e50:	bne	26fb0 <fb_scope_table_insert@@Base+0x1c0>
   26e54:	ldr	sl, [fp, #8]
   26e58:	ldr	r8, [r5]
   26e5c:	ldr	r4, [r5, #12]
   26e60:	mov	r0, r7
   26e64:	ldr	r1, [sp, #8]
   26e68:	bl	271a0 <fb_scope_table_visit@@Base+0x4>
   26e6c:	sub	r6, r4, #1
   26e70:	and	r1, r0, r6
   26e74:	orr	r2, sl, #1
   26e78:	cmp	r2, #3
   26e7c:	bne	26eb4 <fb_scope_table_insert@@Base+0xc4>
   26e80:	ldr	r2, [r5, #8]
   26e84:	add	r2, r2, #1
   26e88:	str	r2, [r5, #8]
   26e8c:	b	26e94 <fb_scope_table_insert@@Base+0xa4>
   26e90:	and	r1, r0, r6
   26e94:	add	r0, r0, #1
   26e98:	mov	r5, r8
   26e9c:	ldr	r1, [r5, r1, lsl #2]!
   26ea0:	orr	r1, r1, #2
   26ea4:	cmp	r1, #2
   26ea8:	bne	26e90 <fb_scope_table_insert@@Base+0xa0>
   26eac:	mov	r4, #0
   26eb0:	b	26f2c <fb_scope_table_insert@@Base+0x13c>
   26eb4:	stm	sp, {r5, r9}
   26eb8:	add	sl, r0, #1
   26ebc:	mov	r9, #0
   26ec0:	b	26ecc <fb_scope_table_insert@@Base+0xdc>
   26ec4:	and	r1, sl, r6
   26ec8:	add	sl, sl, #1
   26ecc:	mov	r5, r8
   26ed0:	ldr	r4, [r5, r1, lsl #2]!
   26ed4:	cmp	r4, #2
   26ed8:	beq	26f00 <fb_scope_table_insert@@Base+0x110>
   26edc:	cmp	r4, #0
   26ee0:	beq	26f0c <fb_scope_table_insert@@Base+0x11c>
   26ee4:	mov	r0, r7
   26ee8:	ldr	r1, [sp, #8]
   26eec:	mov	r2, r4
   26ef0:	bl	27264 <fb_scope_table_visit@@Base+0xc8>
   26ef4:	cmp	r0, #0
   26ef8:	beq	26ec4 <fb_scope_table_insert@@Base+0xd4>
   26efc:	b	26f3c <fb_scope_table_insert@@Base+0x14c>
   26f00:	cmp	r9, #0
   26f04:	moveq	r9, r5
   26f08:	b	26ec4 <fb_scope_table_insert@@Base+0xd4>
   26f0c:	ldr	r1, [sp]
   26f10:	ldr	r0, [r1, #8]
   26f14:	add	r0, r0, #1
   26f18:	str	r0, [r1, #8]
   26f1c:	cmp	r9, #0
   26f20:	movne	r5, r9
   26f24:	mov	r4, #0
   26f28:	ldr	r9, [sp, #4]
   26f2c:	str	r9, [r5]
   26f30:	mov	r0, r4
   26f34:	sub	sp, fp, #28
   26f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26f3c:	ldr	r0, [fp, #8]
   26f40:	cmp	r0, #0
   26f44:	ldr	r9, [sp, #4]
   26f48:	streq	r9, [r5]
   26f4c:	b	26f30 <fb_scope_table_insert@@Base+0x140>
   26f50:	movw	r0, #54861	; 0xd64d
   26f54:	movt	r0, #4
   26f58:	movw	r1, #54707	; 0xd5b3
   26f5c:	movt	r1, #4
   26f60:	movw	r3, #54787	; 0xd603
   26f64:	movt	r3, #4
   26f68:	mov	r2, #115	; 0x73
   26f6c:	bl	14a80 <__assert_fail@plt>
   26f70:	movw	r0, #54884	; 0xd664
   26f74:	movt	r0, #4
   26f78:	movw	r1, #54707	; 0xd5b3
   26f7c:	movt	r1, #4
   26f80:	movw	r3, #54787	; 0xd603
   26f84:	movt	r3, #4
   26f88:	mov	r2, #116	; 0x74
   26f8c:	bl	14a80 <__assert_fail@plt>
   26f90:	movw	r0, #54684	; 0xd59c
   26f94:	movt	r0, #4
   26f98:	movw	r1, #54707	; 0xd5b3
   26f9c:	movt	r1, #4
   26fa0:	movw	r3, #54787	; 0xd603
   26fa4:	movt	r3, #4
   26fa8:	mov	r2, #114	; 0x72
   26fac:	bl	14a80 <__assert_fail@plt>
   26fb0:	movw	r0, #8368	; 0x20b0
   26fb4:	movt	r0, #6
   26fb8:	ldr	r0, [r0]
   26fbc:	movw	r1, #54905	; 0xd679
   26fc0:	movt	r1, #4
   26fc4:	movw	r2, #54928	; 0xd690
   26fc8:	movt	r2, #4
   26fcc:	bl	149c0 <fprintf@plt>
   26fd0:	mov	r0, #1
   26fd4:	bl	1499c <exit@plt>

00026fd8 <fb_scope_table_insert_item@@Base>:
   26fd8:	push	{r4, r5, r6, sl, fp, lr}
   26fdc:	add	fp, sp, #16
   26fe0:	sub	sp, sp, #8
   26fe4:	mov	r4, r2
   26fe8:	mov	r5, r1
   26fec:	mov	r6, r0
   26ff0:	mov	r0, r1
   26ff4:	bl	27018 <fb_scope_table_insert_item@@Base+0x40>
   26ff8:	mov	r1, r0
   26ffc:	str	r4, [sp]
   27000:	mov	r0, r6
   27004:	mov	r2, #0
   27008:	mov	r3, r5
   2700c:	bl	26df4 <fb_scope_table_insert@@Base+0x4>
   27010:	sub	sp, fp, #16
   27014:	pop	{r4, r5, r6, sl, fp, pc}
   27018:	ldr	r0, [r0]
   2701c:	bx	lr

00027020 <fb_scope_table_find@@Base>:
   27020:	b	27024 <fb_scope_table_find@@Base+0x4>
   27024:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27028:	add	fp, sp, #24
   2702c:	ldr	r4, [r0]
   27030:	cmp	r4, #0
   27034:	beq	27098 <fb_scope_table_find@@Base+0x78>
   27038:	mov	r8, r2
   2703c:	mov	r9, r1
   27040:	ldr	r5, [r0, #12]
   27044:	mov	r0, r1
   27048:	mov	r1, r2
   2704c:	bl	271a0 <fb_scope_table_visit@@Base+0x4>
   27050:	mov	r6, r0
   27054:	sub	r5, r5, #1
   27058:	b	27060 <fb_scope_table_find@@Base+0x40>
   2705c:	add	r6, r6, #1
   27060:	and	r0, r6, r5
   27064:	ldr	r7, [r4, r0, lsl #2]
   27068:	cmp	r7, #2
   2706c:	beq	2705c <fb_scope_table_find@@Base+0x3c>
   27070:	cmp	r7, #0
   27074:	beq	27098 <fb_scope_table_find@@Base+0x78>
   27078:	mov	r0, r9
   2707c:	mov	r1, r8
   27080:	mov	r2, r7
   27084:	bl	27264 <fb_scope_table_visit@@Base+0xc8>
   27088:	cmp	r0, #0
   2708c:	beq	2705c <fb_scope_table_find@@Base+0x3c>
   27090:	mov	r0, r7
   27094:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27098:	mov	r7, #0
   2709c:	mov	r0, r7
   270a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000270a4 <fb_scope_table_find_item@@Base>:
   270a4:	push	{r4, sl, fp, lr}
   270a8:	add	fp, sp, #8
   270ac:	mov	r4, r0
   270b0:	mov	r0, r1
   270b4:	bl	27018 <fb_scope_table_insert_item@@Base+0x40>
   270b8:	mov	r1, r0
   270bc:	mov	r0, r4
   270c0:	mov	r2, #0
   270c4:	pop	{r4, sl, fp, lr}
   270c8:	b	27024 <fb_scope_table_find@@Base+0x4>

000270cc <fb_scope_table_remove@@Base>:
   270cc:	b	270d0 <fb_scope_table_remove@@Base+0x4>
   270d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   270d4:	add	fp, sp, #28
   270d8:	sub	sp, sp, #4
   270dc:	ldr	r5, [r0]
   270e0:	mov	r7, #0
   270e4:	cmp	r5, #0
   270e8:	beq	27168 <fb_scope_table_remove@@Base+0x9c>
   270ec:	mov	r9, r2
   270f0:	mov	sl, r1
   270f4:	str	r0, [sp]
   270f8:	ldr	r6, [r0, #12]
   270fc:	mov	r0, r1
   27100:	mov	r1, r2
   27104:	bl	271a0 <fb_scope_table_visit@@Base+0x4>
   27108:	mov	r4, r0
   2710c:	sub	r6, r6, #1
   27110:	b	27118 <fb_scope_table_remove@@Base+0x4c>
   27114:	add	r4, r4, #1
   27118:	and	r8, r4, r6
   2711c:	ldr	r7, [r5, r8, lsl #2]
   27120:	cmp	r7, #2
   27124:	beq	27114 <fb_scope_table_remove@@Base+0x48>
   27128:	cmp	r7, #0
   2712c:	beq	27164 <fb_scope_table_remove@@Base+0x98>
   27130:	mov	r0, sl
   27134:	mov	r1, r9
   27138:	mov	r2, r7
   2713c:	bl	27264 <fb_scope_table_visit@@Base+0xc8>
   27140:	cmp	r0, #0
   27144:	beq	27114 <fb_scope_table_remove@@Base+0x48>
   27148:	mov	r0, #2
   2714c:	str	r0, [r5, r8, lsl #2]
   27150:	ldr	r1, [sp]
   27154:	ldr	r0, [r1, #8]
   27158:	sub	r0, r0, #1
   2715c:	str	r0, [r1, #8]
   27160:	b	27168 <fb_scope_table_remove@@Base+0x9c>
   27164:	mov	r7, #0
   27168:	mov	r0, r7
   2716c:	sub	sp, fp, #28
   27170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027174 <fb_scope_table_remove_item@@Base>:
   27174:	push	{r4, sl, fp, lr}
   27178:	add	fp, sp, #8
   2717c:	mov	r4, r0
   27180:	mov	r0, r1
   27184:	bl	27018 <fb_scope_table_insert_item@@Base+0x40>
   27188:	mov	r1, r0
   2718c:	mov	r0, r4
   27190:	mov	r2, #0
   27194:	pop	{r4, sl, fp, lr}
   27198:	b	270d0 <fb_scope_table_remove@@Base+0x4>

0002719c <fb_scope_table_visit@@Base>:
   2719c:	b	26c84 <fb_scope_table_destroy@@Base+0x24>
   271a0:	push	{r4, r5, r6, r7, fp, lr}
   271a4:	add	fp, sp, #16
   271a8:	mov	r6, r1
   271ac:	mov	r4, r0
   271b0:	cmp	r1, #1
   271b4:	blt	27218 <fb_scope_table_visit@@Base+0x7c>
   271b8:	mov	r5, #0
   271bc:	b	271cc <fb_scope_table_visit@@Base+0x30>
   271c0:	add	r0, r7, #1
   271c4:	add	r4, r4, r0
   271c8:	sub	r6, r6, r0
   271cc:	cmp	r6, #0
   271d0:	mov	r7, #0
   271d4:	beq	271f4 <fb_scope_table_visit@@Base+0x58>
   271d8:	mov	r7, #0
   271dc:	ldrb	r0, [r4, r7]
   271e0:	cmp	r0, #46	; 0x2e
   271e4:	beq	271f4 <fb_scope_table_visit@@Base+0x58>
   271e8:	add	r7, r7, #1
   271ec:	cmp	r7, r6
   271f0:	bcc	271dc <fb_scope_table_visit@@Base+0x40>
   271f4:	mov	r0, r4
   271f8:	mov	r1, r7
   271fc:	bl	27388 <fb_scope_table_visit@@Base+0x1ec>
   27200:	eor	r0, r0, r5
   27204:	bl	273c4 <fb_scope_table_visit@@Base+0x228>
   27208:	mov	r5, r0
   2720c:	cmp	r7, r6
   27210:	bne	271c0 <fb_scope_table_visit@@Base+0x24>
   27214:	b	2725c <fb_scope_table_visit@@Base+0xc0>
   27218:	cmp	r4, #0
   2721c:	moveq	r5, #0
   27220:	moveq	r0, r5
   27224:	popeq	{r4, r5, r6, r7, fp, pc}
   27228:	mvn	r6, r6
   2722c:	mov	r5, #0
   27230:	ldr	r1, [r4, #4]
   27234:	ldm	r1, {r0, r1}
   27238:	bl	27388 <fb_scope_table_visit@@Base+0x1ec>
   2723c:	eor	r0, r0, r5
   27240:	bl	273c4 <fb_scope_table_visit@@Base+0x228>
   27244:	mov	r5, r0
   27248:	cmp	r6, #0
   2724c:	subne	r6, r6, #1
   27250:	ldrne	r4, [r4]
   27254:	cmpne	r4, #0
   27258:	bne	27230 <fb_scope_table_visit@@Base+0x94>
   2725c:	mov	r0, r5
   27260:	pop	{r4, r5, r6, r7, fp, pc}
   27264:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27268:	add	fp, sp, #24
   2726c:	mov	r5, r1
   27270:	mov	r4, r0
   27274:	ldr	r7, [r2]
   27278:	cmp	r1, #1
   2727c:	blt	27304 <fb_scope_table_visit@@Base+0x168>
   27280:	cmp	r7, #0
   27284:	beq	27374 <fb_scope_table_visit@@Base+0x1d8>
   27288:	ldr	r1, [r7, #4]
   2728c:	ldr	r0, [r1, #4]
   27290:	cmp	r0, r5
   27294:	bhi	27374 <fb_scope_table_visit@@Base+0x1d8>
   27298:	cmp	r0, #0
   2729c:	beq	272cc <fb_scope_table_visit@@Base+0x130>
   272a0:	ldr	r2, [r1]
   272a4:	mov	r8, #0
   272a8:	mov	r1, #0
   272ac:	ldrb	r3, [r4, r1]
   272b0:	ldrb	r6, [r2, r1]
   272b4:	cmp	r6, r3
   272b8:	bne	27358 <fb_scope_table_visit@@Base+0x1bc>
   272bc:	add	r1, r1, #1
   272c0:	cmp	r1, r0
   272c4:	bcc	272ac <fb_scope_table_visit@@Base+0x110>
   272c8:	b	272d0 <fb_scope_table_visit@@Base+0x134>
   272cc:	mov	r1, #0
   272d0:	cmp	r0, r5
   272d4:	beq	27380 <fb_scope_table_visit@@Base+0x1e4>
   272d8:	ldrb	r1, [r4, r1]
   272dc:	mov	r8, #0
   272e0:	cmp	r1, #46	; 0x2e
   272e4:	bne	27358 <fb_scope_table_visit@@Base+0x1bc>
   272e8:	add	r0, r0, #1
   272ec:	add	r4, r4, r0
   272f0:	sub	r5, r5, r0
   272f4:	ldr	r7, [r7]
   272f8:	cmp	r7, #0
   272fc:	bne	27288 <fb_scope_table_visit@@Base+0xec>
   27300:	b	27358 <fb_scope_table_visit@@Base+0x1bc>
   27304:	mov	r8, #0
   27308:	cmp	r7, #0
   2730c:	cmpne	r4, #0
   27310:	beq	27360 <fb_scope_table_visit@@Base+0x1c4>
   27314:	ldr	r0, [r7, #4]
   27318:	ldr	r2, [r0, #4]
   2731c:	ldr	r1, [r4, #4]
   27320:	ldr	r3, [r1, #4]
   27324:	cmp	r2, r3
   27328:	bne	27358 <fb_scope_table_visit@@Base+0x1bc>
   2732c:	ldr	r1, [r1]
   27330:	ldr	r0, [r0]
   27334:	bl	14a68 <strncmp@plt>
   27338:	cmp	r0, #0
   2733c:	bne	27358 <fb_scope_table_visit@@Base+0x1bc>
   27340:	adds	r5, r5, #1
   27344:	ldr	r4, [r4]
   27348:	ldr	r7, [r7]
   2734c:	bne	27308 <fb_scope_table_visit@@Base+0x16c>
   27350:	clz	r0, r7
   27354:	b	27368 <fb_scope_table_visit@@Base+0x1cc>
   27358:	mov	r0, r8
   2735c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27360:	orr	r0, r7, r4
   27364:	clz	r0, r0
   27368:	lsr	r8, r0, #5
   2736c:	mov	r0, r8
   27370:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27374:	mov	r8, #0
   27378:	mov	r0, r8
   2737c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27380:	ldr	r0, [r7]
   27384:	b	27364 <fb_scope_table_visit@@Base+0x1c8>
   27388:	mov	r2, r0
   2738c:	movw	r0, #11863	; 0x2e57
   27390:	movt	r0, #12137	; 0x2f69
   27394:	cmp	r1, #1
   27398:	beq	273c0 <fb_scope_table_visit@@Base+0x224>
   2739c:	rsb	r1, r1, #1
   273a0:	ldrb	r3, [r2]
   273a4:	cmp	r3, #0
   273a8:	bxeq	lr
   273ac:	add	r0, r0, r0, lsl #5
   273b0:	eor	r0, r0, r3
   273b4:	adds	r1, r1, #1
   273b8:	add	r2, r2, #1
   273bc:	bne	273a0 <fb_scope_table_visit@@Base+0x204>
   273c0:	bx	lr
   273c4:	movw	r1, #15186	; 0x3b52
   273c8:	movt	r1, #12137	; 0x2f69
   273cc:	eor	r0, r0, r1
   273d0:	movw	r1, #31153	; 0x79b1
   273d4:	movt	r1, #40503	; 0x9e37
   273d8:	mul	r0, r0, r1
   273dc:	bx	lr

000273e0 <fb_schema_table_clear@@Base>:
   273e0:	b	273e4 <fb_schema_table_clear@@Base+0x4>
   273e4:	push	{r4, sl, fp, lr}
   273e8:	add	fp, sp, #8
   273ec:	mov	r4, r0
   273f0:	ldr	r0, [r0]
   273f4:	cmp	r0, #0
   273f8:	beq	27400 <fb_schema_table_clear@@Base+0x20>
   273fc:	bl	14900 <free@plt>
   27400:	vmov.i32	q8, #0	; 0x00000000
   27404:	vst1.32	{d16-d17}, [r4]
   27408:	pop	{r4, sl, fp, pc}

0002740c <fb_schema_table_destroy@@Base>:
   2740c:	push	{r4, sl, fp, lr}
   27410:	add	fp, sp, #8
   27414:	mov	r4, r0
   27418:	cmp	r1, #0
   2741c:	movne	r0, r4
   27420:	blne	27430 <fb_schema_table_destroy@@Base+0x24>
   27424:	mov	r0, r4
   27428:	pop	{r4, sl, fp, lr}
   2742c:	b	273e4 <fb_schema_table_clear@@Base+0x4>
   27430:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27434:	add	fp, sp, #24
   27438:	mov	r6, r0
   2743c:	ldr	r0, [r0, #12]
   27440:	cmp	r0, #0
   27444:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   27448:	mov	r8, r2
   2744c:	mov	r5, r1
   27450:	ldr	r7, [r6]
   27454:	mov	r4, #0
   27458:	ldr	r1, [r7, r4, lsl #2]
   2745c:	orr	r0, r1, #2
   27460:	cmp	r0, #2
   27464:	beq	27470 <fb_schema_table_destroy@@Base+0x64>
   27468:	mov	r0, r8
   2746c:	blx	r5
   27470:	ldr	r0, [r6, #12]
   27474:	add	r4, r4, #1
   27478:	cmp	r4, r0
   2747c:	bcc	27458 <fb_schema_table_destroy@@Base+0x4c>
   27480:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027484 <fb_schema_table_init@@Base>:
   27484:	b	27488 <fb_schema_table_init@@Base+0x4>
   27488:	push	{r4, r5, fp, lr}
   2748c:	add	fp, sp, #8
   27490:	mov	r4, r0
   27494:	mov	r2, #4
   27498:	mov	r0, #179	; 0xb3
   2749c:	mov	r5, r2
   274a0:	mul	r3, r2, r0
   274a4:	lsl	r2, r2, #1
   274a8:	cmp	r1, r3, lsr #8
   274ac:	bhi	2749c <fb_schema_table_init@@Base+0x18>
   274b0:	mov	r0, r5
   274b4:	mov	r1, #4
   274b8:	bl	148d0 <calloc@plt>
   274bc:	str	r0, [r4]
   274c0:	cmp	r0, #0
   274c4:	movne	r0, #0
   274c8:	strne	r0, [r4, #4]
   274cc:	strne	r0, [r4, #8]
   274d0:	strne	r5, [r4, #12]
   274d4:	popne	{r4, r5, fp, pc}
   274d8:	mvn	r0, #0
   274dc:	pop	{r4, r5, fp, pc}

000274e0 <fb_schema_table_resize@@Base>:
   274e0:	b	274e4 <fb_schema_table_resize@@Base+0x4>
   274e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   274e8:	add	fp, sp, #28
   274ec:	sub	sp, sp, #28
   274f0:	mov	r4, r0
   274f4:	ldr	sl, [r0]
   274f8:	ldr	r0, [r0, #8]
   274fc:	cmp	r0, r1
   27500:	movhi	r1, r0
   27504:	add	r0, sp, #8
   27508:	bl	27488 <fb_schema_table_init@@Base+0x4>
   2750c:	mov	r1, r0
   27510:	mvn	r0, #0
   27514:	cmp	r1, #0
   27518:	beq	27524 <fb_schema_table_resize@@Base+0x44>
   2751c:	sub	sp, fp, #28
   27520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27524:	ldr	r0, [r4, #12]
   27528:	cmp	r0, #0
   2752c:	beq	27588 <fb_schema_table_resize@@Base+0xa8>
   27530:	mov	r6, #0
   27534:	mov	r8, #3
   27538:	add	r9, sp, #8
   2753c:	ldr	r7, [sl, r6, lsl #2]
   27540:	orr	r0, r7, #2
   27544:	cmp	r0, #2
   27548:	beq	27578 <fb_schema_table_resize@@Base+0x98>
   2754c:	mov	r0, r7
   27550:	bl	277dc <fb_schema_table_insert_item@@Base+0x4c>
   27554:	mov	r5, r0
   27558:	mov	r0, r7
   2755c:	bl	277e4 <fb_schema_table_insert_item@@Base+0x54>
   27560:	mov	r2, r0
   27564:	str	r8, [sp]
   27568:	mov	r0, r9
   2756c:	mov	r1, r5
   27570:	mov	r3, r7
   27574:	bl	275ac <fb_schema_table_insert@@Base+0x4>
   27578:	ldr	r0, [r4, #12]
   2757c:	add	r6, r6, #1
   27580:	cmp	r6, r0
   27584:	bcc	2753c <fb_schema_table_resize@@Base+0x5c>
   27588:	mov	r0, r4
   2758c:	bl	273e4 <fb_schema_table_clear@@Base+0x4>
   27590:	add	r0, sp, #8
   27594:	vld1.64	{d16-d17}, [r0]
   27598:	vst1.32	{d16-d17}, [r4]
   2759c:	mov	r0, #0
   275a0:	sub	sp, fp, #28
   275a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000275a8 <fb_schema_table_insert@@Base>:
   275a8:	b	275ac <fb_schema_table_insert@@Base+0x4>
   275ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   275b0:	add	fp, sp, #28
   275b4:	sub	sp, sp, #12
   275b8:	str	r2, [sp, #8]
   275bc:	cmp	r3, #2
   275c0:	beq	27708 <fb_schema_table_insert@@Base+0x160>
   275c4:	mov	r9, r3
   275c8:	cmp	r3, #1
   275cc:	beq	27728 <fb_schema_table_insert@@Base+0x180>
   275d0:	cmp	r9, #0
   275d4:	beq	27748 <fb_schema_table_insert@@Base+0x1a0>
   275d8:	mov	r7, r1
   275dc:	mov	r5, r0
   275e0:	ldr	r0, [r0, #8]
   275e4:	ldr	r1, [r5, #12]
   275e8:	mov	r2, #179	; 0xb3
   275ec:	mul	r1, r1, r2
   275f0:	cmp	r0, r1, lsr #8
   275f4:	bcc	2760c <fb_schema_table_insert@@Base+0x64>
   275f8:	lsl	r1, r0, #1
   275fc:	mov	r0, r5
   27600:	bl	274e4 <fb_schema_table_resize@@Base+0x4>
   27604:	cmp	r0, #0
   27608:	bne	27768 <fb_schema_table_insert@@Base+0x1c0>
   2760c:	ldr	sl, [fp, #8]
   27610:	ldr	r8, [r5]
   27614:	ldr	r4, [r5, #12]
   27618:	mov	r0, r7
   2761c:	ldr	r1, [sp, #8]
   27620:	bl	2798c <fb_schema_table_visit@@Base+0x4>
   27624:	sub	r6, r4, #1
   27628:	and	r1, r0, r6
   2762c:	orr	r2, sl, #1
   27630:	cmp	r2, #3
   27634:	bne	2766c <fb_schema_table_insert@@Base+0xc4>
   27638:	ldr	r2, [r5, #8]
   2763c:	add	r2, r2, #1
   27640:	str	r2, [r5, #8]
   27644:	b	2764c <fb_schema_table_insert@@Base+0xa4>
   27648:	and	r1, r0, r6
   2764c:	add	r0, r0, #1
   27650:	mov	r5, r8
   27654:	ldr	r1, [r5, r1, lsl #2]!
   27658:	orr	r1, r1, #2
   2765c:	cmp	r1, #2
   27660:	bne	27648 <fb_schema_table_insert@@Base+0xa0>
   27664:	mov	r4, #0
   27668:	b	276e4 <fb_schema_table_insert@@Base+0x13c>
   2766c:	stm	sp, {r5, r9}
   27670:	add	sl, r0, #1
   27674:	mov	r9, #0
   27678:	b	27684 <fb_schema_table_insert@@Base+0xdc>
   2767c:	and	r1, sl, r6
   27680:	add	sl, sl, #1
   27684:	mov	r5, r8
   27688:	ldr	r4, [r5, r1, lsl #2]!
   2768c:	cmp	r4, #2
   27690:	beq	276b8 <fb_schema_table_insert@@Base+0x110>
   27694:	cmp	r4, #0
   27698:	beq	276c4 <fb_schema_table_insert@@Base+0x11c>
   2769c:	mov	r0, r7
   276a0:	ldr	r1, [sp, #8]
   276a4:	mov	r2, r4
   276a8:	bl	279c4 <fb_schema_table_visit@@Base+0x3c>
   276ac:	cmp	r0, #0
   276b0:	beq	2767c <fb_schema_table_insert@@Base+0xd4>
   276b4:	b	276f4 <fb_schema_table_insert@@Base+0x14c>
   276b8:	cmp	r9, #0
   276bc:	moveq	r9, r5
   276c0:	b	2767c <fb_schema_table_insert@@Base+0xd4>
   276c4:	ldr	r1, [sp]
   276c8:	ldr	r0, [r1, #8]
   276cc:	add	r0, r0, #1
   276d0:	str	r0, [r1, #8]
   276d4:	cmp	r9, #0
   276d8:	movne	r5, r9
   276dc:	mov	r4, #0
   276e0:	ldr	r9, [sp, #4]
   276e4:	str	r9, [r5]
   276e8:	mov	r0, r4
   276ec:	sub	sp, fp, #28
   276f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276f4:	ldr	r0, [fp, #8]
   276f8:	cmp	r0, #0
   276fc:	ldr	r9, [sp, #4]
   27700:	streq	r9, [r5]
   27704:	b	276e8 <fb_schema_table_insert@@Base+0x140>
   27708:	movw	r0, #54861	; 0xd64d
   2770c:	movt	r0, #4
   27710:	movw	r1, #54707	; 0xd5b3
   27714:	movt	r1, #4
   27718:	movw	r3, #54787	; 0xd603
   2771c:	movt	r3, #4
   27720:	mov	r2, #115	; 0x73
   27724:	bl	14a80 <__assert_fail@plt>
   27728:	movw	r0, #54884	; 0xd664
   2772c:	movt	r0, #4
   27730:	movw	r1, #54707	; 0xd5b3
   27734:	movt	r1, #4
   27738:	movw	r3, #54787	; 0xd603
   2773c:	movt	r3, #4
   27740:	mov	r2, #116	; 0x74
   27744:	bl	14a80 <__assert_fail@plt>
   27748:	movw	r0, #54684	; 0xd59c
   2774c:	movt	r0, #4
   27750:	movw	r1, #54707	; 0xd5b3
   27754:	movt	r1, #4
   27758:	movw	r3, #54787	; 0xd603
   2775c:	movt	r3, #4
   27760:	mov	r2, #114	; 0x72
   27764:	bl	14a80 <__assert_fail@plt>
   27768:	movw	r0, #8368	; 0x20b0
   2776c:	movt	r0, #6
   27770:	ldr	r0, [r0]
   27774:	movw	r1, #54905	; 0xd679
   27778:	movt	r1, #4
   2777c:	movw	r2, #54928	; 0xd690
   27780:	movt	r2, #4
   27784:	bl	149c0 <fprintf@plt>
   27788:	mov	r0, #1
   2778c:	bl	1499c <exit@plt>

00027790 <fb_schema_table_insert_item@@Base>:
   27790:	push	{r4, r5, r6, r7, fp, lr}
   27794:	add	fp, sp, #16
   27798:	sub	sp, sp, #8
   2779c:	mov	r4, r2
   277a0:	mov	r5, r1
   277a4:	mov	r6, r0
   277a8:	mov	r0, r1
   277ac:	bl	277dc <fb_schema_table_insert_item@@Base+0x4c>
   277b0:	mov	r7, r0
   277b4:	mov	r0, r5
   277b8:	bl	277e4 <fb_schema_table_insert_item@@Base+0x54>
   277bc:	mov	r2, r0
   277c0:	str	r4, [sp]
   277c4:	mov	r0, r6
   277c8:	mov	r1, r7
   277cc:	mov	r3, r5
   277d0:	bl	275ac <fb_schema_table_insert@@Base+0x4>
   277d4:	sub	sp, fp, #16
   277d8:	pop	{r4, r5, r6, r7, fp, pc}
   277dc:	ldr	r0, [r0, #144]	; 0x90
   277e0:	bx	lr
   277e4:	ldr	r0, [r0, #148]	; 0x94
   277e8:	bx	lr

000277ec <fb_schema_table_find@@Base>:
   277ec:	b	277f0 <fb_schema_table_find@@Base+0x4>
   277f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   277f4:	add	fp, sp, #24
   277f8:	ldr	r4, [r0]
   277fc:	cmp	r4, #0
   27800:	beq	27864 <fb_schema_table_find@@Base+0x78>
   27804:	mov	r8, r2
   27808:	mov	r9, r1
   2780c:	ldr	r5, [r0, #12]
   27810:	mov	r0, r1
   27814:	mov	r1, r2
   27818:	bl	2798c <fb_schema_table_visit@@Base+0x4>
   2781c:	mov	r6, r0
   27820:	sub	r5, r5, #1
   27824:	b	2782c <fb_schema_table_find@@Base+0x40>
   27828:	add	r6, r6, #1
   2782c:	and	r0, r6, r5
   27830:	ldr	r7, [r4, r0, lsl #2]
   27834:	cmp	r7, #2
   27838:	beq	27828 <fb_schema_table_find@@Base+0x3c>
   2783c:	cmp	r7, #0
   27840:	beq	27864 <fb_schema_table_find@@Base+0x78>
   27844:	mov	r0, r9
   27848:	mov	r1, r8
   2784c:	mov	r2, r7
   27850:	bl	279c4 <fb_schema_table_visit@@Base+0x3c>
   27854:	cmp	r0, #0
   27858:	beq	27828 <fb_schema_table_find@@Base+0x3c>
   2785c:	mov	r0, r7
   27860:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27864:	mov	r7, #0
   27868:	mov	r0, r7
   2786c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027870 <fb_schema_table_find_item@@Base>:
   27870:	push	{r4, r5, r6, sl, fp, lr}
   27874:	add	fp, sp, #16
   27878:	mov	r4, r1
   2787c:	mov	r5, r0
   27880:	mov	r0, r1
   27884:	bl	277dc <fb_schema_table_insert_item@@Base+0x4c>
   27888:	mov	r6, r0
   2788c:	mov	r0, r4
   27890:	bl	277e4 <fb_schema_table_insert_item@@Base+0x54>
   27894:	mov	r2, r0
   27898:	mov	r0, r5
   2789c:	mov	r1, r6
   278a0:	pop	{r4, r5, r6, sl, fp, lr}
   278a4:	b	277f0 <fb_schema_table_find@@Base+0x4>

000278a8 <fb_schema_table_remove@@Base>:
   278a8:	b	278ac <fb_schema_table_remove@@Base+0x4>
   278ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   278b0:	add	fp, sp, #28
   278b4:	sub	sp, sp, #4
   278b8:	ldr	r5, [r0]
   278bc:	mov	r7, #0
   278c0:	cmp	r5, #0
   278c4:	beq	27944 <fb_schema_table_remove@@Base+0x9c>
   278c8:	mov	r9, r2
   278cc:	mov	sl, r1
   278d0:	str	r0, [sp]
   278d4:	ldr	r6, [r0, #12]
   278d8:	mov	r0, r1
   278dc:	mov	r1, r2
   278e0:	bl	2798c <fb_schema_table_visit@@Base+0x4>
   278e4:	mov	r4, r0
   278e8:	sub	r6, r6, #1
   278ec:	b	278f4 <fb_schema_table_remove@@Base+0x4c>
   278f0:	add	r4, r4, #1
   278f4:	and	r8, r4, r6
   278f8:	ldr	r7, [r5, r8, lsl #2]
   278fc:	cmp	r7, #2
   27900:	beq	278f0 <fb_schema_table_remove@@Base+0x48>
   27904:	cmp	r7, #0
   27908:	beq	27940 <fb_schema_table_remove@@Base+0x98>
   2790c:	mov	r0, sl
   27910:	mov	r1, r9
   27914:	mov	r2, r7
   27918:	bl	279c4 <fb_schema_table_visit@@Base+0x3c>
   2791c:	cmp	r0, #0
   27920:	beq	278f0 <fb_schema_table_remove@@Base+0x48>
   27924:	mov	r0, #2
   27928:	str	r0, [r5, r8, lsl #2]
   2792c:	ldr	r1, [sp]
   27930:	ldr	r0, [r1, #8]
   27934:	sub	r0, r0, #1
   27938:	str	r0, [r1, #8]
   2793c:	b	27944 <fb_schema_table_remove@@Base+0x9c>
   27940:	mov	r7, #0
   27944:	mov	r0, r7
   27948:	sub	sp, fp, #28
   2794c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027950 <fb_schema_table_remove_item@@Base>:
   27950:	push	{r4, r5, r6, sl, fp, lr}
   27954:	add	fp, sp, #16
   27958:	mov	r4, r1
   2795c:	mov	r5, r0
   27960:	mov	r0, r1
   27964:	bl	277dc <fb_schema_table_insert_item@@Base+0x4c>
   27968:	mov	r6, r0
   2796c:	mov	r0, r4
   27970:	bl	277e4 <fb_schema_table_insert_item@@Base+0x54>
   27974:	mov	r2, r0
   27978:	mov	r0, r5
   2797c:	mov	r1, r6
   27980:	pop	{r4, r5, r6, sl, fp, lr}
   27984:	b	278ac <fb_schema_table_remove@@Base+0x4>

00027988 <fb_schema_table_visit@@Base>:
   27988:	b	27430 <fb_schema_table_destroy@@Base+0x24>
   2798c:	push	{fp, lr}
   27990:	mov	fp, sp
   27994:	sub	sp, sp, #16
   27998:	add	r2, sp, #8
   2799c:	movw	r3, #15186	; 0x3b52
   279a0:	movt	r3, #12137	; 0x2f69
   279a4:	str	r3, [sp]
   279a8:	str	r2, [sp, #4]
   279ac:	mov	r2, r1
   279b0:	mov	r3, #0
   279b4:	bl	32a10 <cmetrohash64_1@@Base>
   279b8:	ldr	r0, [sp, #8]
   279bc:	mov	sp, fp
   279c0:	pop	{fp, pc}
   279c4:	mov	ip, r1
   279c8:	ldr	r3, [r2, #148]	; 0x94
   279cc:	mov	r1, #0
   279d0:	cmp	r3, ip
   279d4:	bne	279f8 <fb_schema_table_visit@@Base+0x70>
   279d8:	push	{fp, lr}
   279dc:	mov	fp, sp
   279e0:	ldr	r1, [r2, #144]	; 0x90
   279e4:	mov	r2, ip
   279e8:	bl	14924 <memcmp@plt>
   279ec:	clz	r0, r0
   279f0:	lsr	r1, r0, #5
   279f4:	pop	{fp, lr}
   279f8:	mov	r0, r1
   279fc:	bx	lr

00027a00 <__flatcc_fb_copy_path_n@@Base>:
   27a00:	push	{r4, r5, r6, sl, fp, lr}
   27a04:	add	fp, sp, #16
   27a08:	mov	r4, r0
   27a0c:	bl	27a48 <__flatcc_fb_copy_path_n@@Base+0x48>
   27a10:	mov	r5, r0
   27a14:	add	r0, r0, #1
   27a18:	bl	1496c <malloc@plt>
   27a1c:	mov	r6, r0
   27a20:	cmp	r0, #0
   27a24:	beq	27a40 <__flatcc_fb_copy_path_n@@Base+0x40>
   27a28:	mov	r0, r6
   27a2c:	mov	r1, r4
   27a30:	mov	r2, r5
   27a34:	bl	1490c <memcpy@plt>
   27a38:	mov	r0, #0
   27a3c:	strb	r0, [r6, r5]
   27a40:	mov	r0, r6
   27a44:	pop	{r4, r5, r6, sl, fp, pc}
   27a48:	push	{r4, r5, fp, lr}
   27a4c:	add	fp, sp, #8
   27a50:	mov	r4, r1
   27a54:	mov	r5, r0
   27a58:	mov	r1, #0
   27a5c:	mov	r2, r4
   27a60:	bl	149fc <memchr@plt>
   27a64:	cmp	r0, #0
   27a68:	subne	r4, r0, r5
   27a6c:	mov	r0, r4
   27a70:	pop	{r4, r5, fp, pc}

00027a74 <__flatcc_fb_copy_path@@Base>:
   27a74:	push	{r4, r5, r6, sl, fp, lr}
   27a78:	add	fp, sp, #16
   27a7c:	mov	r5, r0
   27a80:	bl	149a8 <strlen@plt>
   27a84:	mov	r4, r0
   27a88:	add	r0, r0, #1
   27a8c:	bl	1496c <malloc@plt>
   27a90:	mov	r6, r0
   27a94:	cmp	r0, #0
   27a98:	beq	27ab4 <__flatcc_fb_copy_path@@Base+0x40>
   27a9c:	mov	r0, r6
   27aa0:	mov	r1, r5
   27aa4:	mov	r2, r4
   27aa8:	bl	1490c <memcpy@plt>
   27aac:	mov	r0, #0
   27ab0:	strb	r0, [r6, r4]
   27ab4:	mov	r0, r6
   27ab8:	pop	{r4, r5, r6, sl, fp, pc}

00027abc <__flatcc_fb_chomp@@Base>:
   27abc:	push	{r4, r5, r6, r7, fp, lr}
   27ac0:	add	fp, sp, #16
   27ac4:	mov	r5, r2
   27ac8:	mov	r4, r1
   27acc:	mov	r7, r0
   27ad0:	cmp	r2, #0
   27ad4:	beq	27b10 <__flatcc_fb_chomp@@Base+0x54>
   27ad8:	mov	r0, r5
   27adc:	bl	149a8 <strlen@plt>
   27ae0:	mov	r6, r0
   27ae4:	cmp	r6, r4
   27ae8:	bcs	27b08 <__flatcc_fb_chomp@@Base+0x4c>
   27aec:	add	r0, r7, r4
   27af0:	sub	r0, r0, r6
   27af4:	mov	r1, r5
   27af8:	mov	r2, r6
   27afc:	bl	14a68 <strncmp@plt>
   27b00:	cmp	r0, #0
   27b04:	subeq	r4, r4, r6
   27b08:	mov	r0, r4
   27b0c:	pop	{r4, r5, r6, r7, fp, pc}
   27b10:	mov	r6, #0
   27b14:	cmp	r6, r4
   27b18:	bcc	27aec <__flatcc_fb_chomp@@Base+0x30>
   27b1c:	b	27b08 <__flatcc_fb_chomp@@Base+0x4c>

00027b20 <__flatcc_fb_create_join_path_n@@Base>:
   27b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27b24:	add	fp, sp, #28
   27b28:	sub	sp, sp, #4
   27b2c:	mov	r4, r3
   27b30:	mov	r9, r2
   27b34:	mov	r6, r1
   27b38:	mov	r7, r0
   27b3c:	ldr	r0, [fp, #8]
   27b40:	cmp	r0, #0
   27b44:	beq	27b54 <__flatcc_fb_create_join_path_n@@Base+0x34>
   27b48:	bl	149a8 <strlen@plt>
   27b4c:	mov	sl, r0
   27b50:	b	27b58 <__flatcc_fb_create_join_path_n@@Base+0x38>
   27b54:	mov	sl, #0
   27b58:	ldr	r8, [fp, #12]
   27b5c:	cmp	r7, #0
   27b60:	beq	27b7c <__flatcc_fb_create_join_path_n@@Base+0x5c>
   27b64:	cmp	r4, #0
   27b68:	beq	27b80 <__flatcc_fb_create_join_path_n@@Base+0x60>
   27b6c:	ldrb	r0, [r9]
   27b70:	cmp	r0, #47	; 0x2f
   27b74:	cmpne	r0, #92	; 0x5c
   27b78:	bne	27c24 <__flatcc_fb_create_join_path_n@@Base+0x104>
   27b7c:	mov	r6, #0
   27b80:	cmp	r8, #0
   27b84:	cmpne	r6, #0
   27b88:	bne	27b94 <__flatcc_fb_create_join_path_n@@Base+0x74>
   27b8c:	mov	r8, #0
   27b90:	b	27ba8 <__flatcc_fb_create_join_path_n@@Base+0x88>
   27b94:	add	r0, r7, r6
   27b98:	ldrb	r0, [r0, #-1]
   27b9c:	cmp	r0, #92	; 0x5c
   27ba0:	cmpne	r0, #47	; 0x2f
   27ba4:	moveq	r8, #0
   27ba8:	add	r0, r6, r4
   27bac:	add	r0, r0, sl
   27bb0:	add	r0, r0, r8
   27bb4:	add	r0, r0, #1
   27bb8:	bl	1496c <malloc@plt>
   27bbc:	mov	r5, r0
   27bc0:	cmp	r0, #0
   27bc4:	beq	27c18 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   27bc8:	mov	r0, r5
   27bcc:	mov	r1, r7
   27bd0:	mov	r2, r6
   27bd4:	bl	1490c <memcpy@plt>
   27bd8:	cmp	r8, #0
   27bdc:	movne	r0, #47	; 0x2f
   27be0:	strbne	r0, [r5, r6]
   27be4:	addne	r6, r6, #1
   27be8:	add	r0, r5, r6
   27bec:	mov	r1, r9
   27bf0:	mov	r2, r4
   27bf4:	bl	1490c <memcpy@plt>
   27bf8:	add	r4, r6, r4
   27bfc:	add	r0, r5, r4
   27c00:	ldr	r1, [fp, #8]
   27c04:	mov	r2, sl
   27c08:	bl	1490c <memcpy@plt>
   27c0c:	add	r0, r4, sl
   27c10:	mov	r1, #0
   27c14:	strb	r1, [r5, r0]
   27c18:	mov	r0, r5
   27c1c:	sub	sp, fp, #28
   27c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c24:	cmp	r4, #2
   27c28:	bcc	27b80 <__flatcc_fb_create_join_path_n@@Base+0x60>
   27c2c:	ldrb	r0, [r9, #1]
   27c30:	cmp	r0, #58	; 0x3a
   27c34:	moveq	r6, #0
   27c38:	b	27b80 <__flatcc_fb_create_join_path_n@@Base+0x60>

00027c3c <__flatcc_fb_create_join_path@@Base>:
   27c3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27c40:	add	fp, sp, #24
   27c44:	sub	sp, sp, #8
   27c48:	mov	r8, r3
   27c4c:	mov	r9, r2
   27c50:	mov	r4, r1
   27c54:	mov	r6, r0
   27c58:	mov	r5, #0
   27c5c:	cmp	r0, #0
   27c60:	mov	r7, #0
   27c64:	beq	27c74 <__flatcc_fb_create_join_path@@Base+0x38>
   27c68:	mov	r0, r6
   27c6c:	bl	149a8 <strlen@plt>
   27c70:	mov	r7, r0
   27c74:	cmp	r4, #0
   27c78:	beq	27c88 <__flatcc_fb_create_join_path@@Base+0x4c>
   27c7c:	mov	r0, r4
   27c80:	bl	149a8 <strlen@plt>
   27c84:	mov	r5, r0
   27c88:	str	r9, [sp]
   27c8c:	str	r8, [sp, #4]
   27c90:	mov	r0, r6
   27c94:	mov	r1, r7
   27c98:	mov	r2, r4
   27c9c:	mov	r3, r5
   27ca0:	bl	27b20 <__flatcc_fb_create_join_path_n@@Base>
   27ca4:	sub	sp, fp, #24
   27ca8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027cac <__flatcc_fb_create_path_ext_n@@Base>:
   27cac:	push	{fp, lr}
   27cb0:	mov	fp, sp
   27cb4:	sub	sp, sp, #8
   27cb8:	mov	ip, r1
   27cbc:	mov	r3, r0
   27cc0:	mov	r0, #0
   27cc4:	str	r2, [sp]
   27cc8:	str	r0, [sp, #4]
   27ccc:	mov	r0, #0
   27cd0:	mov	r1, #0
   27cd4:	mov	r2, r3
   27cd8:	mov	r3, ip
   27cdc:	bl	27b20 <__flatcc_fb_create_join_path_n@@Base>
   27ce0:	mov	sp, fp
   27ce4:	pop	{fp, pc}

00027ce8 <__flatcc_fb_create_path_ext@@Base>:
   27ce8:	mov	r2, r1
   27cec:	mov	r1, r0
   27cf0:	mov	r0, #0
   27cf4:	mov	r3, #0
   27cf8:	b	27c3c <__flatcc_fb_create_join_path@@Base>

00027cfc <__flatcc_fb_create_make_path_n@@Base>:
   27cfc:	push	{r4, r5, r6, sl, fp, lr}
   27d00:	add	fp, sp, #16
   27d04:	mov	r6, r0
   27d08:	cmp	r1, #0
   27d0c:	beq	27d54 <__flatcc_fb_create_make_path_n@@Base+0x58>
   27d10:	cmp	r1, #1
   27d14:	bne	27d60 <__flatcc_fb_create_make_path_n@@Base+0x64>
   27d18:	ldrb	r5, [r6]
   27d1c:	cmp	r5, #92	; 0x5c
   27d20:	cmpne	r5, #32
   27d24:	bne	27d54 <__flatcc_fb_create_make_path_n@@Base+0x58>
   27d28:	mov	r0, #3
   27d2c:	bl	1496c <malloc@plt>
   27d30:	cmp	r0, #0
   27d34:	moveq	r0, #0
   27d38:	popeq	{r4, r5, r6, sl, fp, pc}
   27d3c:	strb	r5, [r0, #1]
   27d40:	mov	r1, #92	; 0x5c
   27d44:	strb	r1, [r0]
   27d48:	mov	r1, #0
   27d4c:	strb	r1, [r0, #2]
   27d50:	pop	{r4, r5, r6, sl, fp, pc}
   27d54:	mov	r0, r6
   27d58:	pop	{r4, r5, r6, sl, fp, lr}
   27d5c:	b	27a00 <__flatcc_fb_copy_path_n@@Base>
   27d60:	sub	r5, r1, #1
   27d64:	ldrb	r3, [r6]
   27d68:	mov	r2, #1
   27d6c:	mov	r0, r1
   27d70:	uxtb	r3, r3
   27d74:	cmp	r3, #92	; 0x5c
   27d78:	bne	27d88 <__flatcc_fb_create_make_path_n@@Base+0x8c>
   27d7c:	ldrb	r4, [r6, r2]
   27d80:	cmp	r4, #32
   27d84:	addeq	r0, r0, #1
   27d88:	cmp	r3, #32
   27d8c:	addeq	r0, r0, #1
   27d90:	ldrb	r3, [r6, r2]
   27d94:	add	r2, r2, #1
   27d98:	cmp	r1, r2
   27d9c:	bne	27d70 <__flatcc_fb_create_make_path_n@@Base+0x74>
   27da0:	cmp	r3, #32
   27da4:	addeq	r0, r0, #1
   27da8:	add	r0, r0, #1
   27dac:	bl	1496c <malloc@plt>
   27db0:	cmp	r0, #0
   27db4:	moveq	r0, #0
   27db8:	popeq	{r4, r5, r6, sl, fp, pc}
   27dbc:	ldrb	r1, [r6]
   27dc0:	cmp	r5, #0
   27dc4:	beq	27e10 <__flatcc_fb_create_make_path_n@@Base+0x114>
   27dc8:	add	r3, r6, #1
   27dcc:	mov	r2, #0
   27dd0:	mov	ip, #92	; 0x5c
   27dd4:	uxtb	r4, r1
   27dd8:	cmp	r4, #32
   27ddc:	beq	27df0 <__flatcc_fb_create_make_path_n@@Base+0xf4>
   27de0:	cmp	r4, #92	; 0x5c
   27de4:	ldrbeq	r6, [r3]
   27de8:	cmpeq	r6, #32
   27dec:	bne	27df8 <__flatcc_fb_create_make_path_n@@Base+0xfc>
   27df0:	strb	ip, [r0, r2]
   27df4:	add	r2, r2, #1
   27df8:	strb	r1, [r0, r2]
   27dfc:	subs	r5, r5, #1
   27e00:	add	r2, r2, #1
   27e04:	ldrb	r1, [r3], #1
   27e08:	bne	27dd4 <__flatcc_fb_create_make_path_n@@Base+0xd8>
   27e0c:	b	27e14 <__flatcc_fb_create_make_path_n@@Base+0x118>
   27e10:	mov	r2, #0
   27e14:	cmp	r1, #32
   27e18:	moveq	r3, #92	; 0x5c
   27e1c:	strbeq	r3, [r0, r2]
   27e20:	addeq	r2, r2, #1
   27e24:	mov	r3, r0
   27e28:	strb	r1, [r3, r2]!
   27e2c:	mov	r1, #0
   27e30:	strb	r1, [r3, #1]
   27e34:	pop	{r4, r5, r6, sl, fp, pc}

00027e38 <__flatcc_fb_create_make_path@@Base>:
   27e38:	push	{r4, sl, fp, lr}
   27e3c:	add	fp, sp, #8
   27e40:	mov	r4, r0
   27e44:	bl	149a8 <strlen@plt>
   27e48:	mov	r1, r0
   27e4c:	mov	r0, r4
   27e50:	pop	{r4, sl, fp, lr}
   27e54:	b	27cfc <__flatcc_fb_create_make_path_n@@Base>

00027e58 <__flatcc_fb_find_basename@@Base>:
   27e58:	mov	r2, r1
   27e5c:	cmp	r1, #0
   27e60:	addne	r1, r0, r2
   27e64:	ldrbne	r3, [r1, #-1]
   27e68:	cmpne	r3, #92	; 0x5c
   27e6c:	beq	27e7c <__flatcc_fb_find_basename@@Base+0x24>
   27e70:	sub	r1, r2, #1
   27e74:	cmp	r3, #47	; 0x2f
   27e78:	bne	27e58 <__flatcc_fb_find_basename@@Base>
   27e7c:	mov	r0, r2
   27e80:	bx	lr

00027e84 <__flatcc_fb_create_basename@@Base>:
   27e84:	push	{r4, r5, r6, sl, fp, lr}
   27e88:	add	fp, sp, #16
   27e8c:	mov	r5, r2
   27e90:	mov	r6, r1
   27e94:	mov	r4, r0
   27e98:	bl	27e58 <__flatcc_fb_find_basename@@Base>
   27e9c:	add	r4, r4, r0
   27ea0:	sub	r1, r6, r0
   27ea4:	mov	r0, r4
   27ea8:	mov	r2, r5
   27eac:	bl	27abc <__flatcc_fb_chomp@@Base>
   27eb0:	mov	r5, r0
   27eb4:	add	r0, r0, #1
   27eb8:	bl	1496c <malloc@plt>
   27ebc:	mov	r6, r0
   27ec0:	cmp	r0, #0
   27ec4:	beq	27ee0 <__flatcc_fb_create_basename@@Base+0x5c>
   27ec8:	mov	r0, r6
   27ecc:	mov	r1, r4
   27ed0:	mov	r2, r5
   27ed4:	bl	1490c <memcpy@plt>
   27ed8:	mov	r0, #0
   27edc:	strb	r0, [r6, r5]
   27ee0:	mov	r0, r6
   27ee4:	pop	{r4, r5, r6, sl, fp, pc}

00027ee8 <__flatcc_fb_read_file@@Base>:
   27ee8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27eec:	add	fp, sp, #24
   27ef0:	sub	sp, sp, #8
   27ef4:	mov	r7, r1
   27ef8:	add	r9, sp, #4
   27efc:	cmp	r2, #0
   27f00:	movne	r9, r2
   27f04:	movw	r1, #55028	; 0xd6f4
   27f08:	movt	r1, #4
   27f0c:	bl	148f4 <fopen@plt>
   27f10:	cmp	r0, #0
   27f14:	beq	27fac <__flatcc_fb_read_file@@Base+0xc4>
   27f18:	mov	r6, r0
   27f1c:	mov	r8, #0
   27f20:	mov	r1, #0
   27f24:	mov	r2, #2
   27f28:	bl	14a5c <fseek@plt>
   27f2c:	mov	r0, r6
   27f30:	bl	14918 <ftell@plt>
   27f34:	mov	r5, r0
   27f38:	str	r0, [r9]
   27f3c:	cmp	r7, #0
   27f40:	cmpne	r5, r7
   27f44:	bhi	27fbc <__flatcc_fb_read_file@@Base+0xd4>
   27f48:	mov	r0, r6
   27f4c:	bl	1493c <rewind@plt>
   27f50:	cmp	r5, #0
   27f54:	mov	r0, r5
   27f58:	movweq	r0, #1
   27f5c:	bl	1496c <malloc@plt>
   27f60:	cmp	r0, #0
   27f64:	beq	27fbc <__flatcc_fb_read_file@@Base+0xd4>
   27f68:	mov	r7, r0
   27f6c:	mov	r8, r0
   27f70:	mov	r1, #0
   27f74:	mov	r4, r1
   27f78:	add	r0, r7, r1
   27f7c:	sub	r2, r5, r1
   27f80:	mov	r1, #1
   27f84:	mov	r3, r6
   27f88:	bl	14a50 <fread_unlocked@plt>
   27f8c:	add	r1, r0, r4
   27f90:	cmp	r0, #0
   27f94:	bne	27f74 <__flatcc_fb_read_file@@Base+0x8c>
   27f98:	cmp	r5, r4
   27f9c:	bne	27fb4 <__flatcc_fb_read_file@@Base+0xcc>
   27fa0:	mov	r0, r6
   27fa4:	bl	14a08 <fclose@plt>
   27fa8:	b	27fd8 <__flatcc_fb_read_file@@Base+0xf0>
   27fac:	mov	r5, #0
   27fb0:	b	27fd4 <__flatcc_fb_read_file@@Base+0xec>
   27fb4:	cmp	r6, #0
   27fb8:	beq	27fc4 <__flatcc_fb_read_file@@Base+0xdc>
   27fbc:	mov	r0, r6
   27fc0:	bl	14a08 <fclose@plt>
   27fc4:	cmp	r8, #0
   27fc8:	beq	27fd4 <__flatcc_fb_read_file@@Base+0xec>
   27fcc:	mov	r0, r8
   27fd0:	bl	14900 <free@plt>
   27fd4:	mov	r8, #0
   27fd8:	str	r5, [r9]
   27fdc:	mov	r0, r8
   27fe0:	sub	sp, fp, #24
   27fe4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027fe8 <__flatcc_fb_default_error_out@@Base>:
   27fe8:	mov	r0, r1
   27fec:	movw	r1, #8368	; 0x20b0
   27ff0:	movt	r1, #6
   27ff4:	ldr	r3, [r1]
   27ff8:	mov	r1, #1
   27ffc:	b	14954 <fwrite@plt>

00028000 <__flatcc_fb_print_error@@Base>:
   28000:	sub	sp, sp, #8
   28004:	push	{r4, r5, fp, lr}
   28008:	add	fp, sp, #8
   2800c:	sub	sp, sp, #208	; 0xd0
   28010:	mov	r5, r1
   28014:	mov	r4, r0
   28018:	str	r3, [fp, #12]
   2801c:	str	r2, [fp, #8]
   28020:	add	r3, fp, #8
   28024:	str	r3, [fp, #-12]
   28028:	add	r0, sp, #4
   2802c:	mov	r1, #200	; 0xc8
   28030:	mov	r2, r5
   28034:	bl	14a38 <vsnprintf@plt>
   28038:	mov	r5, r0
   2803c:	cmp	r0, #200	; 0xc8
   28040:	blt	2805c <__flatcc_fb_print_error@@Base+0x5c>
   28044:	mov	r0, #0
   28048:	strb	r0, [sp, #203]	; 0xcb
   2804c:	movw	r0, #11822	; 0x2e2e
   28050:	movt	r0, #2606	; 0xa2e
   28054:	str	r0, [sp, #199]	; 0xc7
   28058:	mov	r5, #199	; 0xc7
   2805c:	ldr	r3, [r4, #12]
   28060:	ldr	r4, [r4, #8]
   28064:	add	r1, sp, #4
   28068:	mov	r0, r3
   2806c:	mov	r2, r5
   28070:	blx	r4
   28074:	mov	r0, r5
   28078:	sub	sp, fp, #8
   2807c:	pop	{r4, r5, fp, lr}
   28080:	add	sp, sp, #8
   28084:	bx	lr

00028088 <__flatcc_error_find_file_of_token@@Base>:
   28088:	mov	r2, r0
   2808c:	movw	r0, #26232	; 0x6678
   28090:	movt	r0, #3
   28094:	b	2809c <__flatcc_error_find_file_of_token@@Base+0x14>
   28098:	ldr	r2, [r2]
   2809c:	cmp	r2, #0
   280a0:	bxeq	lr
   280a4:	ldr	r3, [r2, #20]
   280a8:	cmp	r3, r1
   280ac:	bhi	28098 <__flatcc_error_find_file_of_token@@Base+0x10>
   280b0:	ldr	r3, [r2, #24]
   280b4:	cmp	r3, r1
   280b8:	bls	28098 <__flatcc_error_find_file_of_token@@Base+0x10>
   280bc:	ldr	r0, [r2, #520]	; 0x208
   280c0:	bx	lr

000280c4 <__flatcc_error_report@@Base>:
   280c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   280c8:	add	fp, sp, #28
   280cc:	sub	sp, sp, #36	; 0x24
   280d0:	mov	r6, r3
   280d4:	mov	sl, r2
   280d8:	mov	r7, r1
   280dc:	mov	r9, r0
   280e0:	ldr	r5, [fp, #12]
   280e4:	ldr	r4, [fp, #8]
   280e8:	cmp	r1, #0
   280ec:	beq	280f8 <__flatcc_error_report@@Base+0x34>
   280f0:	cmp	r4, #0
   280f4:	ldmeq	r7, {r4, r5}
   280f8:	cmp	r4, #0
   280fc:	moveq	r5, r4
   28100:	movw	r0, #26232	; 0x6678
   28104:	movt	r0, #3
   28108:	moveq	r4, r0
   2810c:	cmp	sl, #0
   28110:	moveq	sl, r0
   28114:	cmp	r7, #0
   28118:	beq	2815c <__flatcc_error_report@@Base+0x98>
   2811c:	cmp	r6, #0
   28120:	bne	2815c <__flatcc_error_report@@Base+0x98>
   28124:	mov	r0, r9
   28128:	mov	r1, r7
   2812c:	bl	28088 <__flatcc_error_find_file_of_token@@Base>
   28130:	mov	r2, r0
   28134:	ldr	r3, [r7, #8]
   28138:	ldr	r0, [r7, #12]
   2813c:	stm	sp, {r0, r5}
   28140:	str	r4, [sp, #8]
   28144:	str	sl, [sp, #12]
   28148:	movw	r1, #55031	; 0xd6f7
   2814c:	movt	r1, #4
   28150:	mov	r0, r9
   28154:	bl	28000 <__flatcc_fb_print_error@@Base>
   28158:	b	28240 <__flatcc_error_report@@Base+0x17c>
   2815c:	cmp	r7, #0
   28160:	cmpne	r6, #0
   28164:	bne	281b0 <__flatcc_error_report@@Base+0xec>
   28168:	orrs	r0, r7, r6
   2816c:	beq	28218 <__flatcc_error_report@@Base+0x154>
   28170:	cmp	r6, #0
   28174:	beq	28230 <__flatcc_error_report@@Base+0x16c>
   28178:	mov	r0, r9
   2817c:	mov	r1, r6
   28180:	bl	28088 <__flatcc_error_find_file_of_token@@Base>
   28184:	mov	r3, r0
   28188:	ldm	r6, {r0, r1, r2, r7}
   2818c:	stm	sp, {r2, r7}
   28190:	str	r1, [sp, #8]
   28194:	str	r0, [sp, #12]
   28198:	movw	r1, #55124	; 0xd754
   2819c:	movt	r1, #4
   281a0:	mov	r0, r9
   281a4:	mov	r2, sl
   281a8:	bl	28000 <__flatcc_fb_print_error@@Base>
   281ac:	b	28240 <__flatcc_error_report@@Base+0x17c>
   281b0:	mov	r0, r9
   281b4:	mov	r1, r7
   281b8:	bl	28088 <__flatcc_error_find_file_of_token@@Base>
   281bc:	mov	r8, r0
   281c0:	mov	r0, r9
   281c4:	mov	r1, r6
   281c8:	bl	28088 <__flatcc_error_find_file_of_token@@Base>
   281cc:	ldr	r3, [r7, #8]
   281d0:	ldr	r1, [r7, #12]
   281d4:	ldm	r6, {r2, ip}
   281d8:	ldr	r7, [r6, #8]
   281dc:	ldr	r6, [r6, #12]
   281e0:	str	r2, [sp, #32]
   281e4:	stm	sp, {r1, r5}
   281e8:	str	r4, [sp, #8]
   281ec:	str	sl, [sp, #12]
   281f0:	str	r0, [sp, #16]
   281f4:	str	r7, [sp, #20]
   281f8:	str	r6, [sp, #24]
   281fc:	str	ip, [sp, #28]
   28200:	movw	r1, #55062	; 0xd716
   28204:	movt	r1, #4
   28208:	mov	r0, r9
   2820c:	mov	r2, r8
   28210:	bl	28000 <__flatcc_fb_print_error@@Base>
   28214:	b	28240 <__flatcc_error_report@@Base+0x17c>
   28218:	movw	r1, #55113	; 0xd749
   2821c:	movt	r1, #4
   28220:	mov	r0, r9
   28224:	mov	r2, sl
   28228:	bl	28000 <__flatcc_fb_print_error@@Base>
   2822c:	b	28240 <__flatcc_error_report@@Base+0x17c>
   28230:	movw	r1, #55155	; 0xd773
   28234:	movt	r1, #4
   28238:	mov	r0, r9
   2823c:	bl	28000 <__flatcc_fb_print_error@@Base>
   28240:	ldr	r0, [r9, #108]	; 0x6c
   28244:	add	r0, r0, #1
   28248:	str	r0, [r9, #108]	; 0x6c
   2824c:	sub	sp, fp, #28
   28250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028254 <error_ref_sym@@Base>:
   28254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28258:	add	fp, sp, #28
   2825c:	sub	sp, sp, #76	; 0x4c
   28260:	mov	sl, r1
   28264:	cmp	r1, #0
   28268:	beq	282e8 <error_ref_sym@@Base+0x94>
   2826c:	str	r3, [sp, #12]
   28270:	str	r0, [sp, #16]
   28274:	str	r2, [sp, #20]
   28278:	mov	r5, #50	; 0x32
   2827c:	mov	r8, #0
   28280:	add	r6, sp, #25
   28284:	mov	r9, #46	; 0x2e
   28288:	mov	r7, sl
   2828c:	add	r0, r6, r8
   28290:	ldr	r2, [r7, #4]
   28294:	ldm	r2, {r1, r4}
   28298:	cmp	r5, r4
   2829c:	movlt	r4, r5
   282a0:	mov	r2, r4
   282a4:	bl	1490c <memcpy@plt>
   282a8:	add	r0, r4, r8
   282ac:	strb	r9, [r6, r0]
   282b0:	mvn	r1, r4
   282b4:	add	r5, r5, r1
   282b8:	add	r8, r0, #1
   282bc:	ldr	r7, [r7]
   282c0:	cmp	r7, #0
   282c4:	beq	282d0 <error_ref_sym@@Base+0x7c>
   282c8:	cmp	r5, #0
   282cc:	bgt	2828c <error_ref_sym@@Base+0x38>
   282d0:	mov	r1, #0
   282d4:	strb	r1, [r6, r8]
   282d8:	cmp	r5, #0
   282dc:	ble	282f4 <error_ref_sym@@Base+0xa0>
   282e0:	sub	r6, r0, r0, asr #31
   282e4:	b	28304 <error_ref_sym@@Base+0xb0>
   282e8:	mov	r6, #0
   282ec:	strb	r6, [sp, #25]
   282f0:	b	28310 <error_ref_sym@@Base+0xbc>
   282f4:	movw	r0, #11822	; 0x2e2e
   282f8:	movt	r0, #46	; 0x2e
   282fc:	str	r0, [sp, #72]	; 0x48
   28300:	mov	r6, #50	; 0x32
   28304:	ldr	r2, [sp, #20]
   28308:	ldr	r0, [sp, #16]
   2830c:	ldr	r3, [sp, #12]
   28310:	ldr	r1, [sl, #4]
   28314:	cmp	r3, #0
   28318:	ldrne	r3, [r3, #4]
   2831c:	moveq	r3, #0
   28320:	add	r7, sp, #25
   28324:	str	r7, [sp]
   28328:	str	r6, [sp, #4]
   2832c:	bl	280c4 <__flatcc_error_report@@Base>
   28330:	sub	sp, fp, #28
   28334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028338 <__flatcc_fb_init_parser@@Base>:
   28338:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2833c:	add	fp, sp, #24
   28340:	mov	r5, r3
   28344:	mov	r6, r2
   28348:	mov	r8, r1
   2834c:	mov	r4, r0
   28350:	mov	r1, #0
   28354:	mov	r2, #560	; 0x230
   28358:	bl	149d8 <memset@plt>
   2835c:	cmp	r5, #0
   28360:	beq	28374 <__flatcc_fb_init_parser@@Base+0x3c>
   28364:	ldr	r1, [fp, #8]
   28368:	str	r5, [r4, #8]
   2836c:	str	r1, [r4, #12]
   28370:	b	28380 <__flatcc_fb_init_parser@@Base+0x48>
   28374:	movw	r0, #32744	; 0x7fe8
   28378:	movt	r0, #2
   2837c:	str	r0, [r4, #8]
   28380:	ldr	r5, [fp, #12]
   28384:	add	r0, r4, #128	; 0x80
   28388:	cmp	r8, #0
   2838c:	beq	283a0 <__flatcc_fb_init_parser@@Base+0x68>
   28390:	mov	r1, r8
   28394:	mov	r2, #224	; 0xe0
   28398:	bl	1490c <memcpy@plt>
   2839c:	b	283a4 <__flatcc_fb_init_parser@@Base+0x6c>
   283a0:	bl	15838 <flatcc_init_options@@Base>
   283a4:	cmp	r5, #0
   283a8:	addeq	r5, r4, #416	; 0x1a0
   283ac:	str	r5, [r4, #412]	; 0x19c
   283b0:	ldr	r0, [r4, #192]	; 0xc0
   283b4:	cmp	r0, #8
   283b8:	bhi	284e0 <__flatcc_fb_init_parser@@Base+0x1a8>
   283bc:	mov	r1, #1
   283c0:	mov	r2, #276	; 0x114
   283c4:	tst	r2, r1, lsl r0
   283c8:	beq	284e0 <__flatcc_fb_init_parser@@Base+0x1a8>
   283cc:	ldr	r0, [r4, #196]	; 0xc4
   283d0:	cmp	r0, #8
   283d4:	bhi	284ec <__flatcc_fb_init_parser@@Base+0x1b4>
   283d8:	mov	r1, #1
   283dc:	mov	r2, #276	; 0x114
   283e0:	tst	r2, r1, lsl r0
   283e4:	beq	284ec <__flatcc_fb_init_parser@@Base+0x1b4>
   283e8:	movw	r7, #55302	; 0xd806
   283ec:	movt	r7, #4
   283f0:	cmp	r6, #0
   283f4:	movne	r7, r6
   283f8:	mov	r0, r7
   283fc:	bl	149a8 <strlen@plt>
   28400:	mov	r9, r0
   28404:	ldr	r2, [r8, #96]	; 0x60
   28408:	mov	r0, r7
   2840c:	mov	r1, r9
   28410:	bl	27e84 <__flatcc_fb_create_basename@@Base>
   28414:	str	r0, [r4, #512]	; 0x200
   28418:	bl	28514 <__flatcc_fb_init_parser@@Base+0x1dc>
   2841c:	ldr	r5, [r4, #512]	; 0x200
   28420:	mov	r0, r5
   28424:	bl	149a8 <strlen@plt>
   28428:	mov	r6, r0
   2842c:	mov	r0, r5
   28430:	mov	r1, r6
   28434:	bl	27a00 <__flatcc_fb_copy_path_n@@Base>
   28438:	mov	r5, r0
   2843c:	bl	28514 <__flatcc_fb_init_parser@@Base+0x1dc>
   28440:	mov	r0, r5
   28444:	mov	r1, r6
   28448:	bl	2854c <__flatcc_fb_init_parser@@Base+0x214>
   2844c:	str	r5, [r4, #516]	; 0x204
   28450:	str	r5, [r4, #496]	; 0x1f0
   28454:	str	r6, [r4, #500]	; 0x1f4
   28458:	movw	r2, #26232	; 0x6678
   2845c:	movt	r2, #3
   28460:	mov	r0, r7
   28464:	mov	r1, r9
   28468:	bl	27e84 <__flatcc_fb_create_basename@@Base>
   2846c:	str	r0, [r4, #520]	; 0x208
   28470:	bl	28514 <__flatcc_fb_init_parser@@Base+0x1dc>
   28474:	ldr	r0, [r8, #192]	; 0xc0
   28478:	cmp	r0, #0
   2847c:	beq	2848c <__flatcc_fb_init_parser@@Base+0x154>
   28480:	str	r0, [r4, #476]	; 0x1dc
   28484:	bl	149a8 <strlen@plt>
   28488:	str	r0, [r4, #480]	; 0x1e0
   2848c:	mov	r5, #0
   28490:	mov	r0, r4
   28494:	mov	r1, #0
   28498:	bl	28594 <__flatcc_fb_init_parser@@Base+0x25c>
   2849c:	mov	r6, r0
   284a0:	str	r0, [r4, #544]	; 0x220
   284a4:	ldr	r0, [r4, #412]	; 0x19c
   284a8:	mov	r1, #0
   284ac:	mov	r2, #0
   284b0:	bl	27020 <fb_scope_table_find@@Base>
   284b4:	cmp	r6, r0
   284b8:	moveq	r0, r5
   284bc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   284c0:	movw	r0, #55307	; 0xd80b
   284c4:	movt	r0, #4
   284c8:	movw	r1, #55390	; 0xd85e
   284cc:	movt	r1, #4
   284d0:	movw	r3, #55460	; 0xd8a4
   284d4:	movt	r3, #4
   284d8:	movw	r2, #1331	; 0x533
   284dc:	bl	14a80 <__assert_fail@plt>
   284e0:	movw	r1, #55189	; 0xd795
   284e4:	movt	r1, #4
   284e8:	b	284f4 <__flatcc_fb_init_parser@@Base+0x1bc>
   284ec:	movw	r1, #55245	; 0xd7cd
   284f0:	movt	r1, #4
   284f4:	mov	r0, r4
   284f8:	bl	28508 <__flatcc_fb_init_parser@@Base+0x1d0>
   284fc:	mvn	r5, #0
   28500:	mov	r0, r5
   28504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28508:	mov	r2, r1
   2850c:	mov	r1, #0
   28510:	b	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   28514:	cmp	r0, #0
   28518:	bxne	lr
   2851c:	push	{fp, lr}
   28520:	mov	fp, sp
   28524:	movw	r0, #8368	; 0x20b0
   28528:	movt	r0, #6
   2852c:	ldr	r3, [r0]
   28530:	movw	r0, #25039	; 0x61cf
   28534:	movt	r0, #3
   28538:	mov	r1, #34	; 0x22
   2853c:	mov	r2, #1
   28540:	bl	14954 <fwrite@plt>
   28544:	mov	r0, #1
   28548:	bl	1499c <exit@plt>
   2854c:	push	{r4, r5, r6, r7, fp, lr}
   28550:	add	fp, sp, #16
   28554:	cmp	r1, #0
   28558:	beq	28590 <__flatcc_fb_init_parser@@Base+0x258>
   2855c:	mov	r4, r1
   28560:	mov	r5, r0
   28564:	mov	r6, #0
   28568:	ldrb	r7, [r5, r6]
   2856c:	cmp	r7, #0
   28570:	popeq	{r4, r5, r6, r7, fp, pc}
   28574:	bl	14984 <__ctype_toupper_loc@plt>
   28578:	ldr	r0, [r0]
   2857c:	ldr	r0, [r0, r7, lsl #2]
   28580:	strb	r0, [r5, r6]
   28584:	add	r6, r6, #1
   28588:	cmp	r6, r4
   2858c:	bcc	28568 <__flatcc_fb_init_parser@@Base+0x230>
   28590:	pop	{r4, r5, r6, r7, fp, pc}
   28594:	push	{r4, r5, r6, sl, fp, lr}
   28598:	add	fp, sp, #16
   2859c:	mov	r5, r1
   285a0:	mov	r4, r0
   285a4:	ldr	r0, [r0, #412]	; 0x19c
   285a8:	mov	r2, #0
   285ac:	bl	27020 <fb_scope_table_find@@Base>
   285b0:	mov	r6, r0
   285b4:	cmp	r0, #0
   285b8:	beq	285c4 <__flatcc_fb_init_parser@@Base+0x28c>
   285bc:	mov	r0, r6
   285c0:	pop	{r4, r5, r6, sl, fp, pc}
   285c4:	mov	r0, r4
   285c8:	mov	r1, #28
   285cc:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   285d0:	mov	r6, r0
   285d4:	str	r5, [r0]
   285d8:	ldr	r0, [r4, #476]	; 0x1dc
   285dc:	ldr	r1, [r4, #480]	; 0x1e0
   285e0:	str	r0, [r6, #20]
   285e4:	str	r1, [r6, #24]
   285e8:	ldr	r0, [r4, #412]	; 0x19c
   285ec:	mov	r1, r6
   285f0:	mov	r2, #1
   285f4:	bl	26fd8 <fb_scope_table_insert_item@@Base>
   285f8:	mov	r0, r6
   285fc:	pop	{r4, r5, r6, sl, fp, pc}

00028600 <__flatcc_fb_parse@@Base>:
   28600:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28604:	add	fp, sp, #24
   28608:	mov	r5, r3
   2860c:	mov	r6, r2
   28610:	mov	r7, r1
   28614:	mov	r4, r0
   28618:	mov	r0, #1
   2861c:	str	r1, [r4, #60]	; 0x3c
   28620:	str	r0, [r4, #64]	; 0x40
   28624:	add	r0, r4, #68	; 0x44
   28628:	movw	r1, #55575	; 0xd917
   2862c:	movt	r1, #4
   28630:	mov	r2, #9
   28634:	bl	286b4 <__flatcc_fb_parse@@Base+0xb4>
   28638:	add	r0, r4, #88	; 0x58
   2863c:	movw	r1, #61504	; 0xf040
   28640:	movt	r1, #4
   28644:	movw	r8, #64554	; 0xfc2a
   28648:	movt	r8, #65535	; 0xffff
   2864c:	mov	r2, r8
   28650:	bl	286b4 <__flatcc_fb_parse@@Base+0xb4>
   28654:	cmp	r5, #0
   28658:	strne	r7, [r4, #16]
   2865c:	mov	r0, r7
   28660:	mov	r1, r6
   28664:	mov	r2, r4
   28668:	bl	286e0 <__flatcc_fb_parse@@Base+0xe0>
   2866c:	ldr	r1, [r4, #20]
   28670:	ldr	r2, [r4, #40]	; 0x28
   28674:	ldr	r0, [r4, #216]	; 0xd8
   28678:	str	r2, [r4, #24]
   2867c:	str	r1, [r4, #40]	; 0x28
   28680:	bl	1496c <malloc@plt>
   28684:	str	r0, [r4, #112]	; 0x70
   28688:	bl	28514 <__flatcc_fb_init_parser@@Base+0x1dc>
   2868c:	ldr	r0, [r4, #40]	; 0x28
   28690:	ldr	r0, [r0, #16]
   28694:	add	r1, r8, #18
   28698:	cmp	r0, r1
   2869c:	moveq	r0, r4
   286a0:	bleq	2965c <__flatcc_fb_parse@@Base+0x105c>
   286a4:	mov	r0, r4
   286a8:	bl	296c8 <__flatcc_fb_parse@@Base+0x10c8>
   286ac:	ldr	r0, [r4, #108]	; 0x6c
   286b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   286b4:	push	{r4, sl, fp, lr}
   286b8:	add	fp, sp, #8
   286bc:	mov	r4, r0
   286c0:	str	r1, [r0]
   286c4:	str	r2, [r0, #16]
   286c8:	mov	r0, r1
   286cc:	bl	149a8 <strlen@plt>
   286d0:	mov	r1, #0
   286d4:	stmib	r4, {r0, r1}
   286d8:	str	r1, [r4, #12]
   286dc:	pop	{r4, sl, fp, pc}
   286e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   286e4:	add	fp, sp, #28
   286e8:	sub	sp, sp, #20
   286ec:	mov	r4, r2
   286f0:	mov	r5, r0
   286f4:	add	r8, r0, r1
   286f8:	cmp	r1, #0
   286fc:	beq	295dc <__flatcc_fb_parse@@Base+0xfdc>
   28700:	sub	r0, r8, #1
   28704:	str	r0, [sp, #16]
   28708:	sub	r0, r8, #2
   2870c:	str	r0, [sp, #12]
   28710:	movw	r0, #15934	; 0x3e3e
   28714:	movt	r0, #61	; 0x3d
   28718:	add	r0, r0, #65536	; 0x10000
   2871c:	str	r0, [sp, #8]
   28720:	mov	sl, #48	; 0x30
   28724:	movw	r9, #58117	; 0xe305
   28728:	movt	r9, #4
   2872c:	mov	r6, r5
   28730:	ldrb	r1, [r5]
   28734:	cmp	r1, #126	; 0x7e
   28738:	bhi	28ad0 <__flatcc_fb_parse@@Base+0x4d0>
   2873c:	add	r0, pc, #0
   28740:	ldr	pc, [r0, r1, lsl #2]
   28744:	andeq	r9, r2, r4, lsl #12
   28748:	ldrdeq	r8, [r2], -r0
   2874c:	ldrdeq	r8, [r2], -r0
   28750:	ldrdeq	r8, [r2], -r0
   28754:	ldrdeq	r8, [r2], -r0
   28758:	ldrdeq	r8, [r2], -r0
   2875c:	ldrdeq	r8, [r2], -r0
   28760:	ldrdeq	r8, [r2], -r0
   28764:	ldrdeq	r8, [r2], -r0
   28768:	andeq	r8, r2, r4, lsr #21
   2876c:	strdeq	r8, [r2], -ip
   28770:	ldrdeq	r8, [r2], -r0
   28774:	ldrdeq	r8, [r2], -r0
   28778:	andeq	r8, r2, r4, lsl fp
   2877c:	ldrdeq	r8, [r2], -r0
   28780:	ldrdeq	r8, [r2], -r0
   28784:	ldrdeq	r8, [r2], -r0
   28788:	ldrdeq	r8, [r2], -r0
   2878c:	ldrdeq	r8, [r2], -r0
   28790:	ldrdeq	r8, [r2], -r0
   28794:	ldrdeq	r8, [r2], -r0
   28798:	ldrdeq	r8, [r2], -r0
   2879c:	ldrdeq	r8, [r2], -r0
   287a0:	ldrdeq	r8, [r2], -r0
   287a4:	ldrdeq	r8, [r2], -r0
   287a8:	ldrdeq	r8, [r2], -r0
   287ac:	ldrdeq	r8, [r2], -r0
   287b0:	ldrdeq	r8, [r2], -r0
   287b4:	ldrdeq	r8, [r2], -r0
   287b8:	ldrdeq	r8, [r2], -r0
   287bc:	ldrdeq	r8, [r2], -r0
   287c0:	ldrdeq	r8, [r2], -r0
   287c4:	andeq	r8, r2, r4, lsr #21
   287c8:	andeq	r8, r2, r4, lsl #21
   287cc:	andeq	r8, r2, r0, asr #22
   287d0:	ldrdeq	r8, [r2], -r0
   287d4:	ldrdeq	r8, [r2], -r0
   287d8:	andeq	r8, r2, r4, lsl #21
   287dc:	andeq	r8, r2, ip, asr #26
   287e0:	ldrdeq	r8, [r2], -r0
   287e4:	andeq	r8, r2, r0, asr #19
   287e8:	andeq	r8, r2, r0, asr #19
   287ec:	andeq	r8, r2, ip, ror sp
   287f0:	andeq	r8, r2, r8, lsr #27
   287f4:	andeq	r8, r2, r0, asr #19
   287f8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   287fc:	andeq	r8, r2, r0, lsl lr
   28800:	andeq	r8, r2, r4, lsr lr
   28804:	andeq	r8, r2, ip, lsl #29
   28808:	andeq	r8, r2, r8, asr #19
   2880c:	andeq	r8, r2, r8, asr #19
   28810:	andeq	r8, r2, r8, asr #19
   28814:	andeq	r8, r2, r8, asr #19
   28818:	andeq	r8, r2, r8, asr #19
   2881c:	andeq	r8, r2, r8, asr #19
   28820:	andeq	r8, r2, r8, asr #19
   28824:	andeq	r8, r2, r8, asr #19
   28828:	andeq	r8, r2, r8, asr #19
   2882c:	strdeq	r8, [r2], -ip
   28830:	andeq	r8, r2, r0, asr #19
   28834:	andeq	r8, r2, ip, lsr #30
   28838:	andeq	r8, r2, r4, ror #30
   2883c:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   28840:	andeq	r8, r2, r0, asr #19
   28844:	ldrdeq	r8, [r2], -r0
   28848:	andeq	r8, r2, r0, asr #18
   2884c:	andeq	r8, r2, r0, asr #18
   28850:	andeq	r8, r2, r0, asr #18
   28854:	andeq	r8, r2, r0, asr #18
   28858:	andeq	r8, r2, r0, asr #18
   2885c:	andeq	r8, r2, r0, asr #18
   28860:	andeq	r8, r2, r0, asr #18
   28864:	andeq	r8, r2, r0, asr #18
   28868:	andeq	r8, r2, r0, asr #18
   2886c:	andeq	r8, r2, r0, asr #18
   28870:	andeq	r8, r2, r0, asr #18
   28874:	andeq	r8, r2, r0, asr #18
   28878:	andeq	r8, r2, r0, asr #18
   2887c:	andeq	r8, r2, r0, asr #18
   28880:	andeq	r8, r2, r0, asr #18
   28884:	andeq	r8, r2, r0, asr #18
   28888:	andeq	r8, r2, r0, asr #18
   2888c:	andeq	r8, r2, r0, asr #18
   28890:	andeq	r8, r2, r0, asr #18
   28894:	andeq	r8, r2, r0, asr #18
   28898:	andeq	r8, r2, r0, asr #18
   2889c:	andeq	r8, r2, r0, asr #18
   288a0:	andeq	r8, r2, r0, asr #18
   288a4:	andeq	r8, r2, r0, asr #18
   288a8:	andeq	r8, r2, r0, asr #18
   288ac:	andeq	r8, r2, r0, asr #18
   288b0:	andeq	r8, r2, r0, asr #19
   288b4:	andeq	r8, r2, r0, asr #19
   288b8:	andeq	r8, r2, r0, asr #19
   288bc:	andeq	r8, r2, r4, lsl #21
   288c0:	andeq	r8, r2, r0, asr #18
   288c4:	ldrdeq	r8, [r2], -r0
   288c8:	andeq	r8, r2, r0, asr #18
   288cc:	andeq	r8, r2, r0, asr #18
   288d0:	andeq	r8, r2, r0, asr #18
   288d4:	andeq	r8, r2, r0, asr #18
   288d8:	andeq	r8, r2, r0, asr #18
   288dc:	andeq	r8, r2, r0, asr #18
   288e0:	andeq	r8, r2, r0, asr #18
   288e4:	andeq	r8, r2, r0, asr #18
   288e8:	andeq	r8, r2, r0, asr #18
   288ec:	andeq	r8, r2, r0, asr #18
   288f0:	andeq	r8, r2, r0, asr #18
   288f4:	andeq	r8, r2, r0, asr #18
   288f8:	andeq	r8, r2, r0, asr #18
   288fc:	andeq	r8, r2, r0, asr #18
   28900:	andeq	r8, r2, r0, asr #18
   28904:	andeq	r8, r2, r0, asr #18
   28908:	andeq	r8, r2, r0, asr #18
   2890c:	andeq	r8, r2, r0, asr #18
   28910:	andeq	r8, r2, r0, asr #18
   28914:	andeq	r8, r2, r0, asr #18
   28918:	andeq	r8, r2, r0, asr #18
   2891c:	andeq	r8, r2, r0, asr #18
   28920:	andeq	r8, r2, r0, asr #18
   28924:	andeq	r8, r2, r0, asr #18
   28928:	andeq	r8, r2, r0, asr #18
   2892c:	andeq	r8, r2, r0, asr #18
   28930:	andeq	r8, r2, r0, asr #19
   28934:	andeq	r8, r2, r4, asr #31
   28938:	andeq	r8, r2, r0, asr #19
   2893c:	andeq	r8, r2, r4, lsl #21
   28940:	add	r5, r6, #1
   28944:	lsl	r0, r1, #8
   28948:	cmp	r5, r8
   2894c:	beq	28984 <__flatcc_fb_parse@@Base+0x384>
   28950:	ldrb	r1, [r5]
   28954:	ldrb	r2, [r9, r1]
   28958:	cmp	r2, #0
   2895c:	beq	28984 <__flatcc_fb_parse@@Base+0x384>
   28960:	orr	r0, r0, r1, lsl #16
   28964:	add	r1, r6, #2
   28968:	mov	r5, r1
   2896c:	cmp	r8, r1
   28970:	movne	r1, r5
   28974:	ldrbne	r2, [r1], #1
   28978:	ldrbne	r2, [r9, r2]
   2897c:	cmpne	r2, #0
   28980:	bne	28968 <__flatcc_fb_parse@@Base+0x368>
   28984:	sub	r1, r5, r6
   28988:	uxtab	r1, sl, r1
   2898c:	ldrb	r2, [r5, #-1]
   28990:	orr	r0, r0, r2, lsl #24
   28994:	orr	r0, r0, r1
   28998:	mov	r1, r6
   2899c:	bl	299f0 <__flatcc_fb_clear_parser@@Base+0x2a8>
   289a0:	mov	r1, r0
   289a4:	mov	r0, r4
   289a8:	mov	r2, r6
   289ac:	mov	r3, r5
   289b0:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   289b4:	cmp	r5, r8
   289b8:	bne	2872c <__flatcc_fb_parse@@Base+0x12c>
   289bc:	b	295e0 <__flatcc_fb_parse@@Base+0xfe0>
   289c0:	add	r5, r6, #1
   289c4:	b	289a4 <__flatcc_fb_parse@@Base+0x3a4>
   289c8:	mov	r5, r6
   289cc:	ldrb	r0, [r5, #1]!
   289d0:	sub	r1, r0, #48	; 0x30
   289d4:	uxtb	r1, r1
   289d8:	cmp	r1, #10
   289dc:	bcc	289cc <__flatcc_fb_parse@@Base+0x3cc>
   289e0:	cmp	r0, #46	; 0x2e
   289e4:	mov	r0, r5
   289e8:	bne	28a14 <__flatcc_fb_parse@@Base+0x414>
   289ec:	add	r1, r5, #1
   289f0:	mov	r5, r1
   289f4:	cmp	r8, r1
   289f8:	beq	28a14 <__flatcc_fb_parse@@Base+0x414>
   289fc:	mov	r1, r5
   28a00:	ldrb	r2, [r1], #1
   28a04:	sub	r2, r2, #48	; 0x30
   28a08:	uxtb	r2, r2
   28a0c:	cmp	r2, #10
   28a10:	bcc	289f0 <__flatcc_fb_parse@@Base+0x3f0>
   28a14:	cmp	r5, r8
   28a18:	beq	28a70 <__flatcc_fb_parse@@Base+0x470>
   28a1c:	ldrb	r1, [r5]
   28a20:	orr	r1, r1, #32
   28a24:	cmp	r1, #101	; 0x65
   28a28:	bne	28a70 <__flatcc_fb_parse@@Base+0x470>
   28a2c:	add	r1, r5, #1
   28a30:	cmp	r1, r8
   28a34:	ldrbne	r2, [r1]
   28a38:	cmpne	r2, #43	; 0x2b
   28a3c:	beq	28a48 <__flatcc_fb_parse@@Base+0x448>
   28a40:	cmp	r2, #45	; 0x2d
   28a44:	movne	r1, r5
   28a48:	add	r1, r1, #1
   28a4c:	mov	r5, r1
   28a50:	cmp	r8, r1
   28a54:	beq	28a70 <__flatcc_fb_parse@@Base+0x470>
   28a58:	mov	r1, r5
   28a5c:	ldrb	r2, [r1], #1
   28a60:	sub	r2, r2, #48	; 0x30
   28a64:	uxtb	r2, r2
   28a68:	cmp	r2, #10
   28a6c:	bcc	28a4c <__flatcc_fb_parse@@Base+0x44c>
   28a70:	cmp	r0, r5
   28a74:	mov	r0, r4
   28a78:	moveq	r1, #10
   28a7c:	movne	r1, #11
   28a80:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28a84:	add	r5, r6, #1
   28a88:	cmp	r5, r8
   28a8c:	beq	289a4 <__flatcc_fb_parse@@Base+0x3a4>
   28a90:	ldrb	r0, [r5]
   28a94:	cmp	r0, #61	; 0x3d
   28a98:	orreq	r1, r1, #15616	; 0x3d00
   28a9c:	addeq	r5, r6, #2
   28aa0:	b	289a4 <__flatcc_fb_parse@@Base+0x3a4>
   28aa4:	add	r5, r6, #1
   28aa8:	cmp	r5, r8
   28aac:	beq	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   28ab0:	ldrb	r0, [r5]
   28ab4:	cmp	r0, #32
   28ab8:	cmpne	r0, #9
   28abc:	bne	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   28ac0:	add	r5, r5, #1
   28ac4:	cmp	r8, r5
   28ac8:	bne	28ab0 <__flatcc_fb_parse@@Base+0x4b0>
   28acc:	b	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   28ad0:	add	r5, r6, #1
   28ad4:	cmp	r1, #32
   28ad8:	bcc	28ae4 <__flatcc_fb_parse@@Base+0x4e4>
   28adc:	cmp	r1, #127	; 0x7f
   28ae0:	bne	28af0 <__flatcc_fb_parse@@Base+0x4f0>
   28ae4:	cmp	r1, #9
   28ae8:	cmpne	r1, #32
   28aec:	bne	2926c <__flatcc_fb_parse@@Base+0xc6c>
   28af0:	mov	r0, r4
   28af4:	mov	r1, #8
   28af8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28afc:	add	r5, r6, #1
   28b00:	cmp	r5, r8
   28b04:	beq	28b2c <__flatcc_fb_parse@@Base+0x52c>
   28b08:	ldrb	r0, [r6, #1]
   28b0c:	cmp	r0, #13
   28b10:	b	28b28 <__flatcc_fb_parse@@Base+0x528>
   28b14:	add	r5, r6, #1
   28b18:	cmp	r5, r8
   28b1c:	beq	28b2c <__flatcc_fb_parse@@Base+0x52c>
   28b20:	ldrb	r0, [r6, #1]
   28b24:	cmp	r0, #10
   28b28:	addeq	r5, r6, #2
   28b2c:	str	r5, [r4, #60]	; 0x3c
   28b30:	ldr	r0, [r4, #64]	; 0x40
   28b34:	add	r0, r0, #1
   28b38:	str	r0, [r4, #64]	; 0x40
   28b3c:	b	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   28b40:	add	r7, r6, #1
   28b44:	mov	r0, r4
   28b48:	mov	r1, #19
   28b4c:	mov	r2, r6
   28b50:	b	28b70 <__flatcc_fb_parse@@Base+0x570>
   28b54:	str	r7, [r4, #60]	; 0x3c
   28b58:	ldr	r0, [r4, #64]	; 0x40
   28b5c:	add	r0, r0, #1
   28b60:	str	r0, [r4, #64]	; 0x40
   28b64:	mov	r0, r4
   28b68:	mov	r1, #18
   28b6c:	mov	r2, sl
   28b70:	mov	r3, r7
   28b74:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28b78:	mov	sl, r7
   28b7c:	b	28ba4 <__flatcc_fb_parse@@Base+0x5a4>
   28b80:	add	r3, r6, #1
   28b84:	mov	r0, r4
   28b88:	mov	r1, #6
   28b8c:	mov	r2, r6
   28b90:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28b94:	add	r7, sl, #1
   28b98:	mov	sl, r7
   28b9c:	b	28ba4 <__flatcc_fb_parse@@Base+0x5a4>
   28ba0:	add	r7, r5, #2
   28ba4:	mov	r5, r7
   28ba8:	cmp	r8, r7
   28bac:	beq	28bc0 <__flatcc_fb_parse@@Base+0x5c0>
   28bb0:	ldrb	r0, [r5]
   28bb4:	cmp	r0, #34	; 0x22
   28bb8:	cmpne	r0, #92	; 0x5c
   28bbc:	bne	28be4 <__flatcc_fb_parse@@Base+0x5e4>
   28bc0:	cmp	sl, r5
   28bc4:	beq	28bfc <__flatcc_fb_parse@@Base+0x5fc>
   28bc8:	mov	r0, r4
   28bcc:	mov	r1, #20
   28bd0:	mov	r2, sl
   28bd4:	mov	r3, r5
   28bd8:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28bdc:	mov	r6, r5
   28be0:	b	28c00 <__flatcc_fb_parse@@Base+0x600>
   28be4:	cmp	r0, #32
   28be8:	bcc	28bc0 <__flatcc_fb_parse@@Base+0x5c0>
   28bec:	add	r7, r5, #1
   28bf0:	cmp	r0, #127	; 0x7f
   28bf4:	bne	28ba4 <__flatcc_fb_parse@@Base+0x5a4>
   28bf8:	b	28bc0 <__flatcc_fb_parse@@Base+0x5c0>
   28bfc:	mov	r6, sl
   28c00:	ldrb	r0, [r5]
   28c04:	cmp	r0, #34	; 0x22
   28c08:	mov	sl, #48	; 0x30
   28c0c:	beq	29048 <__flatcc_fb_parse@@Base+0xa48>
   28c10:	cmp	r8, r5
   28c14:	cmpne	r0, #0
   28c18:	beq	29058 <__flatcc_fb_parse@@Base+0xa58>
   28c1c:	cmp	r0, #92	; 0x5c
   28c20:	bne	28ce8 <__flatcc_fb_parse@@Base+0x6e8>
   28c24:	add	sl, r5, #1
   28c28:	mov	r0, r4
   28c2c:	mov	r1, #21
   28c30:	mov	r2, r6
   28c34:	mov	r3, sl
   28c38:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28c3c:	ldr	r0, [sp, #16]
   28c40:	cmp	r0, r5
   28c44:	beq	29068 <__flatcc_fb_parse@@Base+0xa68>
   28c48:	ldrb	r0, [sl]
   28c4c:	cmp	r0, #34	; 0x22
   28c50:	bhi	28d00 <__flatcc_fb_parse@@Base+0x700>
   28c54:	add	r1, pc, #0
   28c58:	ldr	pc, [r1, r0, lsl #2]
   28c5c:	andeq	r9, r2, r8, rrx
   28c60:	andeq	r8, r2, r8, lsl #26
   28c64:	andeq	r8, r2, r8, lsl #26
   28c68:	andeq	r8, r2, r8, lsl #26
   28c6c:	andeq	r8, r2, r8, lsl #26
   28c70:	andeq	r8, r2, r8, lsl #26
   28c74:	andeq	r8, r2, r8, lsl #26
   28c78:	andeq	r8, r2, r8, lsl #26
   28c7c:	andeq	r8, r2, r8, lsl #26
   28c80:	andeq	r8, r2, r8, lsl #26
   28c84:	andeq	r8, r2, r0, lsl sp
   28c88:	andeq	r8, r2, r8, lsl #26
   28c8c:	andeq	r8, r2, r8, lsl #26
   28c90:	andeq	r8, r2, ip, lsr #26
   28c94:	andeq	r8, r2, r8, lsl #26
   28c98:	andeq	r8, r2, r8, lsl #26
   28c9c:	andeq	r8, r2, r8, lsl #26
   28ca0:	andeq	r8, r2, r8, lsl #26
   28ca4:	andeq	r8, r2, r8, lsl #26
   28ca8:	andeq	r8, r2, r8, lsl #26
   28cac:	andeq	r8, r2, r8, lsl #26
   28cb0:	andeq	r8, r2, r8, lsl #26
   28cb4:	andeq	r8, r2, r8, lsl #26
   28cb8:	andeq	r8, r2, r8, lsl #26
   28cbc:	andeq	r8, r2, r8, lsl #26
   28cc0:	andeq	r8, r2, r8, lsl #26
   28cc4:	andeq	r8, r2, r8, lsl #26
   28cc8:	andeq	r8, r2, r8, lsl #26
   28ccc:	andeq	r8, r2, r8, lsl #26
   28cd0:	andeq	r8, r2, r8, lsl #26
   28cd4:	andeq	r8, r2, r8, lsl #26
   28cd8:	andeq	r8, r2, r8, lsl #26
   28cdc:	andeq	r8, r2, r8, lsl #26
   28ce0:	andeq	r8, r2, r8, lsl #26
   28ce4:	andeq	r8, r2, r0, lsr #23
   28ce8:	ldrb	r0, [r5]
   28cec:	mov	sl, r5
   28cf0:	cmp	r0, #13
   28cf4:	cmpne	r0, #10
   28cf8:	bne	28b80 <__flatcc_fb_parse@@Base+0x580>
   28cfc:	b	2917c <__flatcc_fb_parse@@Base+0xb7c>
   28d00:	cmp	r0, #92	; 0x5c
   28d04:	beq	28ba0 <__flatcc_fb_parse@@Base+0x5a0>
   28d08:	mov	r6, sl
   28d0c:	b	28cf0 <__flatcc_fb_parse@@Base+0x6f0>
   28d10:	add	r7, r5, #2
   28d14:	ldr	r0, [sp, #12]
   28d18:	cmp	r0, r5
   28d1c:	beq	28b54 <__flatcc_fb_parse@@Base+0x554>
   28d20:	ldrb	r0, [r5, #2]
   28d24:	cmp	r0, #13
   28d28:	b	28d44 <__flatcc_fb_parse@@Base+0x744>
   28d2c:	add	r7, r5, #2
   28d30:	ldr	r0, [sp, #12]
   28d34:	cmp	r0, r5
   28d38:	beq	28b54 <__flatcc_fb_parse@@Base+0x554>
   28d3c:	ldrb	r0, [r5, #2]
   28d40:	cmp	r0, #10
   28d44:	addeq	r7, r5, #3
   28d48:	b	28b54 <__flatcc_fb_parse@@Base+0x554>
   28d4c:	add	r5, r6, #1
   28d50:	cmp	r5, r8
   28d54:	beq	290a4 <__flatcc_fb_parse@@Base+0xaa4>
   28d58:	ldrb	r0, [r5]
   28d5c:	cmp	r0, #38	; 0x26
   28d60:	beq	2908c <__flatcc_fb_parse@@Base+0xa8c>
   28d64:	cmp	r0, #61	; 0x3d
   28d68:	bne	290a4 <__flatcc_fb_parse@@Base+0xaa4>
   28d6c:	add	r5, r6, #2
   28d70:	mov	r0, r4
   28d74:	movw	r1, #15654	; 0x3d26
   28d78:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28d7c:	add	r5, r6, #1
   28d80:	cmp	r5, r8
   28d84:	beq	28ff4 <__flatcc_fb_parse@@Base+0x9f4>
   28d88:	ldrb	r0, [r5]
   28d8c:	cmp	r0, #42	; 0x2a
   28d90:	beq	290b0 <__flatcc_fb_parse@@Base+0xab0>
   28d94:	cmp	r0, #61	; 0x3d
   28d98:	bne	28ff4 <__flatcc_fb_parse@@Base+0x9f4>
   28d9c:	mov	r0, r4
   28da0:	movw	r1, #15658	; 0x3d2a
   28da4:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28da8:	add	r5, r6, #1
   28dac:	cmp	r5, r8
   28db0:	beq	29000 <__flatcc_fb_parse@@Base+0xa00>
   28db4:	ldrb	r0, [r5]
   28db8:	cmp	r0, #43	; 0x2b
   28dbc:	beq	290bc <__flatcc_fb_parse@@Base+0xabc>
   28dc0:	cmp	r0, #61	; 0x3d
   28dc4:	bne	29000 <__flatcc_fb_parse@@Base+0xa00>
   28dc8:	add	r5, r6, #2
   28dcc:	mov	r0, r4
   28dd0:	movw	r1, #15659	; 0x3d2b
   28dd4:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28dd8:	add	r5, r6, #1
   28ddc:	cmp	r5, r8
   28de0:	beq	29024 <__flatcc_fb_parse@@Base+0xa24>
   28de4:	ldrb	r0, [r5]
   28de8:	cmp	r0, #45	; 0x2d
   28dec:	beq	2919c <__flatcc_fb_parse@@Base+0xb9c>
   28df0:	cmp	r0, #62	; 0x3e
   28df4:	beq	291ac <__flatcc_fb_parse@@Base+0xbac>
   28df8:	cmp	r0, #61	; 0x3d
   28dfc:	bne	29024 <__flatcc_fb_parse@@Base+0xa24>
   28e00:	add	r5, r6, #2
   28e04:	mov	r0, r4
   28e08:	movw	r1, #15661	; 0x3d2d
   28e0c:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28e10:	add	r5, r6, #1
   28e14:	cmp	r5, r8
   28e18:	beq	292b8 <__flatcc_fb_parse@@Base+0xcb8>
   28e1c:	ldrb	r0, [r5]
   28e20:	sub	r1, r0, #48	; 0x30
   28e24:	cmp	r1, #10
   28e28:	bcs	29284 <__flatcc_fb_parse@@Base+0xc84>
   28e2c:	mov	r0, r6
   28e30:	b	289ec <__flatcc_fb_parse@@Base+0x3ec>
   28e34:	add	r5, r6, #1
   28e38:	cmp	r5, r8
   28e3c:	beq	29030 <__flatcc_fb_parse@@Base+0xa30>
   28e40:	ldrb	r0, [r5]
   28e44:	cmp	r0, #42	; 0x2a
   28e48:	beq	291bc <__flatcc_fb_parse@@Base+0xbbc>
   28e4c:	cmp	r0, #61	; 0x3d
   28e50:	beq	291ec <__flatcc_fb_parse@@Base+0xbec>
   28e54:	cmp	r0, #47	; 0x2f
   28e58:	bne	29030 <__flatcc_fb_parse@@Base+0xa30>
   28e5c:	add	r0, r6, #2
   28e60:	cmp	r0, r8
   28e64:	beq	292d0 <__flatcc_fb_parse@@Base+0xcd0>
   28e68:	ldrb	r1, [r0]
   28e6c:	sub	r2, r1, #33	; 0x21
   28e70:	clz	r2, r2
   28e74:	lsr	r2, r2, #5
   28e78:	sub	r1, r1, #47	; 0x2f
   28e7c:	clz	r1, r1
   28e80:	lsr	r1, r1, #5
   28e84:	orr	r1, r1, r2
   28e88:	b	292d4 <__flatcc_fb_parse@@Base+0xcd4>
   28e8c:	add	r0, r6, #1
   28e90:	cmp	r0, r8
   28e94:	mov	r5, r6
   28e98:	beq	289cc <__flatcc_fb_parse@@Base+0x3cc>
   28e9c:	ldrb	r0, [r0]
   28ea0:	orr	r0, r0, #32
   28ea4:	cmp	r0, #120	; 0x78
   28ea8:	mov	r5, r6
   28eac:	bne	289cc <__flatcc_fb_parse@@Base+0x3cc>
   28eb0:	add	r5, r6, #2
   28eb4:	cmp	r5, r8
   28eb8:	beq	28ef0 <__flatcc_fb_parse@@Base+0x8f0>
   28ebc:	ldrb	r0, [r5]
   28ec0:	sub	r1, r0, #48	; 0x30
   28ec4:	uxtb	r1, r1
   28ec8:	cmp	r1, #10
   28ecc:	bcc	28ee4 <__flatcc_fb_parse@@Base+0x8e4>
   28ed0:	orr	r0, r0, #32
   28ed4:	sub	r0, r0, #97	; 0x61
   28ed8:	uxtb	r0, r0
   28edc:	cmp	r0, #5
   28ee0:	bhi	28ef0 <__flatcc_fb_parse@@Base+0x8f0>
   28ee4:	add	r5, r5, #1
   28ee8:	cmp	r8, r5
   28eec:	bne	28ebc <__flatcc_fb_parse@@Base+0x8bc>
   28ef0:	mov	r0, r4
   28ef4:	mov	r1, #14
   28ef8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28efc:	add	r5, r6, #1
   28f00:	cmp	r5, r8
   28f04:	beq	2900c <__flatcc_fb_parse@@Base+0xa0c>
   28f08:	ldrb	r0, [r5]
   28f0c:	cmp	r0, #58	; 0x3a
   28f10:	beq	290cc <__flatcc_fb_parse@@Base+0xacc>
   28f14:	cmp	r0, #61	; 0x3d
   28f18:	bne	2900c <__flatcc_fb_parse@@Base+0xa0c>
   28f1c:	add	r5, r6, #2
   28f20:	mov	r0, r4
   28f24:	movw	r1, #15674	; 0x3d3a
   28f28:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28f2c:	add	r5, r6, #1
   28f30:	cmp	r5, r8
   28f34:	beq	2903c <__flatcc_fb_parse@@Base+0xa3c>
   28f38:	ldrb	r0, [r5]
   28f3c:	cmp	r0, #61	; 0x3d
   28f40:	beq	291fc <__flatcc_fb_parse@@Base+0xbfc>
   28f44:	cmp	r0, #60	; 0x3c
   28f48:	beq	2920c <__flatcc_fb_parse@@Base+0xc0c>
   28f4c:	cmp	r0, #45	; 0x2d
   28f50:	bne	2903c <__flatcc_fb_parse@@Base+0xa3c>
   28f54:	add	r5, r6, #2
   28f58:	mov	r0, r4
   28f5c:	movw	r1, #11580	; 0x2d3c
   28f60:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28f64:	add	r5, r6, #1
   28f68:	cmp	r5, r8
   28f6c:	beq	29260 <__flatcc_fb_parse@@Base+0xc60>
   28f70:	ldrb	r0, [r5]
   28f74:	cmp	r0, #61	; 0x3d
   28f78:	beq	290f8 <__flatcc_fb_parse@@Base+0xaf8>
   28f7c:	cmp	r0, #62	; 0x3e
   28f80:	bne	29260 <__flatcc_fb_parse@@Base+0xc60>
   28f84:	add	r5, r6, #2
   28f88:	mov	r0, r4
   28f8c:	movw	r1, #15933	; 0x3e3d
   28f90:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28f94:	add	r5, r6, #1
   28f98:	cmp	r5, r8
   28f9c:	beq	29018 <__flatcc_fb_parse@@Base+0xa18>
   28fa0:	ldrb	r0, [r5]
   28fa4:	cmp	r0, #62	; 0x3e
   28fa8:	beq	29124 <__flatcc_fb_parse@@Base+0xb24>
   28fac:	cmp	r0, #61	; 0x3d
   28fb0:	bne	29018 <__flatcc_fb_parse@@Base+0xa18>
   28fb4:	add	r5, r6, #2
   28fb8:	mov	r0, r4
   28fbc:	movw	r1, #15678	; 0x3d3e
   28fc0:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28fc4:	add	r5, r6, #1
   28fc8:	cmp	r5, r8
   28fcc:	beq	29170 <__flatcc_fb_parse@@Base+0xb70>
   28fd0:	ldrb	r0, [r5]
   28fd4:	cmp	r0, #124	; 0x7c
   28fd8:	beq	29158 <__flatcc_fb_parse@@Base+0xb58>
   28fdc:	cmp	r0, #61	; 0x3d
   28fe0:	bne	29170 <__flatcc_fb_parse@@Base+0xb70>
   28fe4:	add	r5, r6, #2
   28fe8:	mov	r0, r4
   28fec:	movw	r1, #15740	; 0x3d7c
   28ff0:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   28ff4:	mov	r0, r4
   28ff8:	mov	r1, #42	; 0x2a
   28ffc:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29000:	mov	r0, r4
   29004:	mov	r1, #43	; 0x2b
   29008:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   2900c:	mov	r0, r4
   29010:	mov	r1, #58	; 0x3a
   29014:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29018:	mov	r0, r4
   2901c:	mov	r1, #62	; 0x3e
   29020:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29024:	mov	r0, r4
   29028:	mov	r1, #45	; 0x2d
   2902c:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29030:	mov	r0, r4
   29034:	mov	r1, #47	; 0x2f
   29038:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   2903c:	mov	r0, r4
   29040:	mov	r1, #60	; 0x3c
   29044:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29048:	add	r5, r5, #1
   2904c:	mov	r0, r4
   29050:	mov	r1, #22
   29054:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29058:	mov	r0, r4
   2905c:	mov	r1, #23
   29060:	mov	r2, r5
   29064:	b	289ac <__flatcc_fb_parse@@Base+0x3ac>
   29068:	add	r5, r5, #1
   2906c:	mov	r0, r4
   29070:	mov	r1, #23
   29074:	mov	r2, r5
   29078:	mov	r3, r5
   2907c:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29080:	mov	r6, r5
   29084:	mov	sl, #48	; 0x30
   29088:	b	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   2908c:	add	r5, r6, #2
   29090:	mov	r0, r4
   29094:	movw	r1, #9766	; 0x2626
   29098:	mov	r2, r6
   2909c:	mov	r3, r5
   290a0:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   290a4:	mov	r0, r4
   290a8:	mov	r1, #38	; 0x26
   290ac:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   290b0:	mov	r0, r4
   290b4:	movw	r1, #10794	; 0x2a2a
   290b8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   290bc:	add	r5, r6, #2
   290c0:	mov	r0, r4
   290c4:	movw	r1, #11051	; 0x2b2b
   290c8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   290cc:	add	r5, r6, #2
   290d0:	cmp	r5, r8
   290d4:	beq	29240 <__flatcc_fb_parse@@Base+0xc40>
   290d8:	ldrb	r0, [r5]
   290dc:	cmp	r0, #61	; 0x3d
   290e0:	bne	29240 <__flatcc_fb_parse@@Base+0xc40>
   290e4:	add	r5, r6, #3
   290e8:	mov	r0, r4
   290ec:	movw	r1, #14906	; 0x3a3a
   290f0:	movt	r1, #61	; 0x3d
   290f4:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   290f8:	add	r5, r6, #2
   290fc:	cmp	r5, r8
   29100:	beq	2924c <__flatcc_fb_parse@@Base+0xc4c>
   29104:	ldrb	r0, [r5]
   29108:	cmp	r0, #61	; 0x3d
   2910c:	bne	2924c <__flatcc_fb_parse@@Base+0xc4c>
   29110:	add	r5, r6, #3
   29114:	mov	r0, r4
   29118:	movw	r1, #15677	; 0x3d3d
   2911c:	movt	r1, #61	; 0x3d
   29120:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29124:	add	r5, r6, #2
   29128:	cmp	r5, r8
   2912c:	beq	29278 <__flatcc_fb_parse@@Base+0xc78>
   29130:	ldrb	r0, [r5]
   29134:	cmp	r0, #62	; 0x3e
   29138:	beq	29548 <__flatcc_fb_parse@@Base+0xf48>
   2913c:	cmp	r0, #61	; 0x3d
   29140:	bne	29278 <__flatcc_fb_parse@@Base+0xc78>
   29144:	add	r5, r6, #3
   29148:	mov	r0, r4
   2914c:	movw	r1, #15934	; 0x3e3e
   29150:	movt	r1, #61	; 0x3d
   29154:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29158:	add	r5, r6, #2
   2915c:	mov	r0, r4
   29160:	movw	r1, #31868	; 0x7c7c
   29164:	mov	r2, r6
   29168:	mov	r3, r5
   2916c:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29170:	mov	r0, r4
   29174:	mov	r1, #124	; 0x7c
   29178:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   2917c:	mov	r0, r4
   29180:	mov	r1, #23
   29184:	mov	r2, sl
   29188:	mov	r3, sl
   2918c:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29190:	mov	r5, sl
   29194:	mov	sl, #48	; 0x30
   29198:	b	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   2919c:	add	r5, r6, #2
   291a0:	mov	r0, r4
   291a4:	movw	r1, #11565	; 0x2d2d
   291a8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   291ac:	add	r5, r6, #2
   291b0:	mov	r0, r4
   291b4:	movw	r1, #15917	; 0x3e2d
   291b8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   291bc:	add	r0, r6, #2
   291c0:	cmp	r0, r8
   291c4:	beq	293d4 <__flatcc_fb_parse@@Base+0xdd4>
   291c8:	ldrb	r1, [r0]
   291cc:	sub	r2, r1, #33	; 0x21
   291d0:	clz	r2, r2
   291d4:	lsr	r2, r2, #5
   291d8:	sub	r1, r1, #42	; 0x2a
   291dc:	clz	r1, r1
   291e0:	lsr	r1, r1, #5
   291e4:	orr	r1, r1, r2
   291e8:	b	293d8 <__flatcc_fb_parse@@Base+0xdd8>
   291ec:	add	r5, r6, #2
   291f0:	mov	r0, r4
   291f4:	movw	r1, #15663	; 0x3d2f
   291f8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   291fc:	add	r5, r6, #2
   29200:	mov	r0, r4
   29204:	movw	r1, #15676	; 0x3d3c
   29208:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   2920c:	add	r5, r6, #2
   29210:	cmp	r5, r8
   29214:	beq	292c4 <__flatcc_fb_parse@@Base+0xcc4>
   29218:	ldrb	r0, [r5]
   2921c:	cmp	r0, #60	; 0x3c
   29220:	beq	29580 <__flatcc_fb_parse@@Base+0xf80>
   29224:	cmp	r0, #61	; 0x3d
   29228:	bne	292c4 <__flatcc_fb_parse@@Base+0xcc4>
   2922c:	add	r5, r6, #3
   29230:	mov	r0, r4
   29234:	movw	r1, #15420	; 0x3c3c
   29238:	movt	r1, #61	; 0x3d
   2923c:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29240:	mov	r0, r4
   29244:	movw	r1, #14906	; 0x3a3a
   29248:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   2924c:	mov	r0, r4
   29250:	movw	r1, #15677	; 0x3d3d
   29254:	mov	r2, r6
   29258:	mov	r3, r5
   2925c:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29260:	mov	r0, r4
   29264:	mov	r1, #61	; 0x3d
   29268:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   2926c:	mov	r0, r4
   29270:	mov	r1, #5
   29274:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29278:	mov	r0, r4
   2927c:	movw	r1, #15934	; 0x3e3e
   29280:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29284:	cmp	r0, #46	; 0x2e
   29288:	bne	292b8 <__flatcc_fb_parse@@Base+0xcb8>
   2928c:	add	r5, r6, #2
   29290:	cmp	r5, r8
   29294:	beq	29574 <__flatcc_fb_parse@@Base+0xf74>
   29298:	ldrb	r0, [r5]
   2929c:	cmp	r0, #46	; 0x2e
   292a0:	bne	29574 <__flatcc_fb_parse@@Base+0xf74>
   292a4:	add	r5, r6, #3
   292a8:	mov	r0, r4
   292ac:	movw	r1, #11822	; 0x2e2e
   292b0:	movt	r1, #46	; 0x2e
   292b4:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   292b8:	mov	r0, r4
   292bc:	mov	r1, #46	; 0x2e
   292c0:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   292c4:	mov	r0, r4
   292c8:	movw	r1, #15420	; 0x3c3c
   292cc:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   292d0:	mov	r1, #0
   292d4:	add	r5, r0, r1
   292d8:	sub	r0, r5, r6
   292dc:	sub	r0, r0, #3
   292e0:	clz	r0, r0
   292e4:	lsr	r0, r0, #5
   292e8:	str	r0, [r4, #32]
   292ec:	str	r4, [sp, #4]
   292f0:	mov	r0, r4
   292f4:	mov	r1, r5
   292f8:	mov	r2, r5
   292fc:	bl	299d0 <__flatcc_fb_clear_parser@@Base+0x288>
   29300:	b	2932c <__flatcc_fb_parse@@Base+0xd2c>
   29304:	add	r2, r6, #1
   29308:	ldr	r0, [sp, #4]
   2930c:	mov	r1, r6
   29310:	bl	299d0 <__flatcc_fb_clear_parser@@Base+0x288>
   29314:	b	2932c <__flatcc_fb_parse@@Base+0xd2c>
   29318:	add	r3, r6, #1
   2931c:	ldr	r0, [sp, #4]
   29320:	mov	r1, #7
   29324:	mov	r2, r6
   29328:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   2932c:	sub	r0, r8, r5
   29330:	mov	r1, #0
   29334:	mov	r4, r1
   29338:	adds	r7, r0, r1
   2933c:	beq	29358 <__flatcc_fb_parse@@Base+0xd58>
   29340:	ldrb	r2, [r5, -r4]
   29344:	cmp	r2, #32
   29348:	bcc	29358 <__flatcc_fb_parse@@Base+0xd58>
   2934c:	sub	r1, r4, #1
   29350:	cmp	r2, #127	; 0x7f
   29354:	bne	29334 <__flatcc_fb_parse@@Base+0xd34>
   29358:	sub	sl, r5, r4
   2935c:	cmp	r4, #0
   29360:	mov	r6, r5
   29364:	beq	2937c <__flatcc_fb_parse@@Base+0xd7c>
   29368:	ldr	r0, [sp, #4]
   2936c:	mov	r1, r5
   29370:	mov	r2, sl
   29374:	bl	299d0 <__flatcc_fb_clear_parser@@Base+0x288>
   29378:	mov	r6, sl
   2937c:	cmp	r7, #0
   29380:	beq	29634 <__flatcc_fb_parse@@Base+0x1034>
   29384:	ldrb	r0, [sl]
   29388:	cmp	r0, #13
   2938c:	cmpne	r0, #10
   29390:	beq	293b8 <__flatcc_fb_parse@@Base+0xdb8>
   29394:	cmp	r0, #0
   29398:	beq	29634 <__flatcc_fb_parse@@Base+0x1034>
   2939c:	sub	r0, r5, r4
   293a0:	add	r5, r0, #1
   293a4:	ldrb	r0, [r6]
   293a8:	cmp	r0, #32
   293ac:	cmpne	r0, #9
   293b0:	beq	29304 <__flatcc_fb_parse@@Base+0xd04>
   293b4:	b	29318 <__flatcc_fb_parse@@Base+0xd18>
   293b8:	ldr	r0, [sp, #4]
   293bc:	mov	r1, #0
   293c0:	str	r1, [r0, #32]
   293c4:	sub	r5, r5, r4
   293c8:	mov	r4, r0
   293cc:	mov	sl, #48	; 0x30
   293d0:	b	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   293d4:	mov	r1, #0
   293d8:	add	r7, r0, r1
   293dc:	sub	r0, r7, r6
   293e0:	sub	r0, r0, #3
   293e4:	clz	r0, r0
   293e8:	lsr	r0, r0, #5
   293ec:	str	r0, [r4, #32]
   293f0:	mov	r0, r4
   293f4:	mov	r1, r7
   293f8:	mov	r2, r7
   293fc:	bl	299d0 <__flatcc_fb_clear_parser@@Base+0x288>
   29400:	b	2942c <__flatcc_fb_parse@@Base+0xe2c>
   29404:	str	r7, [r4, #60]	; 0x3c
   29408:	ldr	r0, [r4, #64]	; 0x40
   2940c:	add	r0, r0, #1
   29410:	str	r0, [r4, #64]	; 0x40
   29414:	b	2942c <__flatcc_fb_parse@@Base+0xe2c>
   29418:	add	r3, r6, #1
   2941c:	mov	r0, r4
   29420:	mov	r1, #7
   29424:	mov	r2, r6
   29428:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   2942c:	cmp	r7, r8
   29430:	mov	r5, r7
   29434:	beq	29480 <__flatcc_fb_parse@@Base+0xe80>
   29438:	sub	r1, r7, #1
   2943c:	mov	r5, r7
   29440:	mov	r0, r5
   29444:	ldrb	r2, [r5]
   29448:	cmp	r2, #32
   2944c:	bcc	294a8 <__flatcc_fb_parse@@Base+0xea8>
   29450:	cmp	r2, #127	; 0x7f
   29454:	beq	294a8 <__flatcc_fb_parse@@Base+0xea8>
   29458:	cmp	r2, #47	; 0x2f
   2945c:	bne	29470 <__flatcc_fb_parse@@Base+0xe70>
   29460:	ldrb	r2, [r0, #-1]
   29464:	cmp	r2, #42	; 0x2a
   29468:	mov	r5, r1
   2946c:	beq	29480 <__flatcc_fb_parse@@Base+0xe80>
   29470:	add	r5, r0, #1
   29474:	cmp	r8, r5
   29478:	mov	r1, r0
   2947c:	bne	29440 <__flatcc_fb_parse@@Base+0xe40>
   29480:	cmp	r7, r5
   29484:	beq	294b4 <__flatcc_fb_parse@@Base+0xeb4>
   29488:	mov	r0, r4
   2948c:	mov	r1, r7
   29490:	mov	r2, r5
   29494:	bl	299d0 <__flatcc_fb_clear_parser@@Base+0x288>
   29498:	mov	r6, r5
   2949c:	cmp	r5, r8
   294a0:	bne	294c0 <__flatcc_fb_parse@@Base+0xec0>
   294a4:	b	2963c <__flatcc_fb_parse@@Base+0x103c>
   294a8:	mov	r5, r0
   294ac:	cmp	r7, r5
   294b0:	bne	29488 <__flatcc_fb_parse@@Base+0xe88>
   294b4:	mov	r6, r7
   294b8:	cmp	r5, r8
   294bc:	beq	2963c <__flatcc_fb_parse@@Base+0x103c>
   294c0:	ldrb	r0, [r5]
   294c4:	cmp	r0, #10
   294c8:	beq	29514 <__flatcc_fb_parse@@Base+0xf14>
   294cc:	cmp	r0, #13
   294d0:	beq	2952c <__flatcc_fb_parse@@Base+0xf2c>
   294d4:	cmp	r0, #0
   294d8:	beq	2963c <__flatcc_fb_parse@@Base+0x103c>
   294dc:	cmp	r0, #32
   294e0:	bcc	294ec <__flatcc_fb_parse@@Base+0xeec>
   294e4:	cmp	r0, #127	; 0x7f
   294e8:	bne	295c8 <__flatcc_fb_parse@@Base+0xfc8>
   294ec:	add	r7, r5, #1
   294f0:	ldrb	r0, [r6]
   294f4:	cmp	r0, #32
   294f8:	cmpne	r0, #9
   294fc:	bne	29418 <__flatcc_fb_parse@@Base+0xe18>
   29500:	add	r2, r6, #1
   29504:	mov	r0, r4
   29508:	mov	r1, r6
   2950c:	bl	299d0 <__flatcc_fb_clear_parser@@Base+0x288>
   29510:	b	2942c <__flatcc_fb_parse@@Base+0xe2c>
   29514:	add	r7, r5, #1
   29518:	cmp	r7, r8
   2951c:	beq	29404 <__flatcc_fb_parse@@Base+0xe04>
   29520:	ldrb	r0, [r5, #1]
   29524:	cmp	r0, #13
   29528:	b	29540 <__flatcc_fb_parse@@Base+0xf40>
   2952c:	add	r7, r5, #1
   29530:	cmp	r7, r8
   29534:	beq	29404 <__flatcc_fb_parse@@Base+0xe04>
   29538:	ldrb	r0, [r5, #1]
   2953c:	cmp	r0, #10
   29540:	addeq	r7, r5, #2
   29544:	b	29404 <__flatcc_fb_parse@@Base+0xe04>
   29548:	add	r5, r6, #3
   2954c:	cmp	r5, r8
   29550:	beq	295ac <__flatcc_fb_parse@@Base+0xfac>
   29554:	ldrb	r0, [r5]
   29558:	cmp	r0, #61	; 0x3d
   2955c:	bne	295ac <__flatcc_fb_parse@@Base+0xfac>
   29560:	add	r5, r6, #4
   29564:	mov	r0, r4
   29568:	movw	r1, #15934	; 0x3e3e
   2956c:	movt	r1, #15678	; 0x3d3e
   29570:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29574:	mov	r0, r4
   29578:	movw	r1, #11822	; 0x2e2e
   2957c:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   29580:	add	r5, r6, #3
   29584:	cmp	r5, r8
   29588:	beq	295b8 <__flatcc_fb_parse@@Base+0xfb8>
   2958c:	ldrb	r0, [r5]
   29590:	cmp	r0, #61	; 0x3d
   29594:	bne	295b8 <__flatcc_fb_parse@@Base+0xfb8>
   29598:	add	r5, r6, #4
   2959c:	mov	r0, r4
   295a0:	movw	r1, #15420	; 0x3c3c
   295a4:	movt	r1, #15676	; 0x3d3c
   295a8:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   295ac:	mov	r0, r4
   295b0:	ldr	r1, [sp, #8]
   295b4:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   295b8:	mov	r0, r4
   295bc:	movw	r1, #15420	; 0x3c3c
   295c0:	movt	r1, #60	; 0x3c
   295c4:	b	289a8 <__flatcc_fb_parse@@Base+0x3a8>
   295c8:	mov	r0, #0
   295cc:	str	r0, [r4, #32]
   295d0:	add	r5, r5, #2
   295d4:	mov	r6, r5
   295d8:	b	289b4 <__flatcc_fb_parse@@Base+0x3b4>
   295dc:	mov	r6, r5
   295e0:	cmp	r5, r8
   295e4:	beq	295f4 <__flatcc_fb_parse@@Base+0xff4>
   295e8:	ldrb	r0, [r5]
   295ec:	cmp	r0, #0
   295f0:	beq	29618 <__flatcc_fb_parse@@Base+0x1018>
   295f4:	mov	r0, r4
   295f8:	mov	r1, #0
   295fc:	mov	r2, r5
   29600:	b	29624 <__flatcc_fb_parse@@Base+0x1024>
   29604:	mov	r0, r4
   29608:	mov	r1, #0
   2960c:	mov	r2, r6
   29610:	mov	r3, r6
   29614:	b	29628 <__flatcc_fb_parse@@Base+0x1028>
   29618:	mov	r0, r4
   2961c:	mov	r1, #0
   29620:	mov	r2, r6
   29624:	mov	r3, r5
   29628:	sub	sp, fp, #28
   2962c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29630:	b	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29634:	sub	r5, r5, r4
   29638:	ldr	r4, [sp, #4]
   2963c:	mov	r0, r4
   29640:	mov	r1, #27
   29644:	mov	r2, r5
   29648:	mov	r3, r5
   2964c:	bl	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29650:	cmp	r5, r8
   29654:	bne	295e8 <__flatcc_fb_parse@@Base+0xfe8>
   29658:	b	295f4 <__flatcc_fb_parse@@Base+0xff4>
   2965c:	push	{r4, sl, fp, lr}
   29660:	add	fp, sp, #8
   29664:	mov	r4, r0
   29668:	ldr	r2, [r0, #24]
   2966c:	ldr	r0, [r0, #40]	; 0x28
   29670:	b	29694 <__flatcc_fb_parse@@Base+0x1094>
   29674:	ldr	r0, [r0, #36]	; 0x24
   29678:	cmn	r0, #964	; 0x3c4
   2967c:	movne	r0, r1
   29680:	popne	{r4, sl, fp, pc}
   29684:	mov	r0, r4
   29688:	bl	2a238 <__flatcc_fb_clear_parser@@Base+0xaf0>
   2968c:	ldr	r2, [r4, #24]
   29690:	ldr	r0, [r4, #40]	; 0x28
   29694:	add	r1, r0, #20
   29698:	str	r1, [r4, #40]	; 0x28
   2969c:	cmp	r1, r2
   296a0:	bne	29674 <__flatcc_fb_parse@@Base+0x1074>
   296a4:	str	r0, [r4, #40]	; 0x28
   296a8:	movw	r0, #29885	; 0x74bd
   296ac:	movt	r0, #4
   296b0:	movw	r1, #55390	; 0xd85e
   296b4:	movt	r1, #4
   296b8:	movw	r3, #55679	; 0xd97f
   296bc:	movt	r3, #4
   296c0:	movw	r2, #341	; 0x155
   296c4:	bl	14a80 <__assert_fail@plt>
   296c8:	push	{r4, r5, fp, lr}
   296cc:	add	fp, sp, #8
   296d0:	mov	r4, r0
   296d4:	bl	2a264 <__flatcc_fb_clear_parser@@Base+0xb1c>
   296d8:	ldr	r5, [r4, #40]	; 0x28
   296dc:	mov	r0, r5
   296e0:	bl	2a32c <__flatcc_fb_clear_parser@@Base+0xbe4>
   296e4:	cmp	r0, #0
   296e8:	bne	29730 <__flatcc_fb_parse@@Base+0x1130>
   296ec:	ldr	r0, [r4, #108]	; 0x6c
   296f0:	cmp	r0, #9
   296f4:	bgt	29744 <__flatcc_fb_parse@@Base+0x1144>
   296f8:	mov	r0, r4
   296fc:	bl	2a33c <__flatcc_fb_clear_parser@@Base+0xbf4>
   29700:	ldr	r1, [r4, #40]	; 0x28
   29704:	cmp	r1, r5
   29708:	mov	r5, r1
   2970c:	bne	296dc <__flatcc_fb_parse@@Base+0x10dc>
   29710:	ldr	r0, [r4, #108]	; 0x6c
   29714:	cmp	r0, #0
   29718:	popne	{r4, r5, fp, pc}
   2971c:	movw	r2, #55711	; 0xd99f
   29720:	movt	r2, #4
   29724:	mov	r0, r4
   29728:	pop	{r4, r5, fp, lr}
   2972c:	b	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   29730:	add	r0, r4, #356	; 0x164
   29734:	bl	2a5f0 <__flatcc_fb_clear_parser@@Base+0xea8>
   29738:	add	r0, r4, #392	; 0x188
   2973c:	pop	{r4, r5, fp, lr}
   29740:	b	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   29744:	pop	{r4, r5, fp, pc}

00029748 <__flatcc_fb_clear_parser@@Base>:
   29748:	push	{r4, r5, fp, lr}
   2974c:	add	fp, sp, #8
   29750:	mov	r4, r0
   29754:	ldr	r5, [r0, #392]	; 0x188
   29758:	cmp	r5, #0
   2975c:	bne	29770 <__flatcc_fb_clear_parser@@Base+0x28>
   29760:	b	29790 <__flatcc_fb_clear_parser@@Base+0x48>
   29764:	ldr	r5, [r5]
   29768:	cmp	r5, #0
   2976c:	beq	29790 <__flatcc_fb_clear_parser@@Base+0x48>
   29770:	ldrh	r0, [r5, #8]
   29774:	cmp	r0, #4
   29778:	bhi	29764 <__flatcc_fb_clear_parser@@Base+0x1c>
   2977c:	add	r0, r5, #56	; 0x38
   29780:	bl	265f8 <fb_symbol_table_clear@@Base>
   29784:	add	r0, r5, #72	; 0x48
   29788:	bl	33c6c <fb_value_set_clear@@Base>
   2978c:	b	29764 <__flatcc_fb_clear_parser@@Base+0x1c>
   29790:	add	r0, r4, #448	; 0x1c0
   29794:	bl	273e0 <fb_schema_table_clear@@Base>
   29798:	add	r0, r4, #432	; 0x1b0
   2979c:	bl	3364c <fb_name_table_clear@@Base>
   297a0:	add	r0, r4, #524	; 0x20c
   297a4:	bl	26058 <ptr_set_clear@@Base>
   297a8:	ldr	r0, [r4, #112]	; 0x70
   297ac:	cmp	r0, #0
   297b0:	beq	297b8 <__flatcc_fb_clear_parser@@Base+0x70>
   297b4:	bl	14900 <free@plt>
   297b8:	ldr	r0, [r4, #20]
   297bc:	cmp	r0, #0
   297c0:	beq	297c8 <__flatcc_fb_clear_parser@@Base+0x80>
   297c4:	bl	14900 <free@plt>
   297c8:	ldr	r0, [r4, #512]	; 0x200
   297cc:	cmp	r0, #0
   297d0:	beq	297d8 <__flatcc_fb_clear_parser@@Base+0x90>
   297d4:	bl	14900 <free@plt>
   297d8:	ldr	r0, [r4, #516]	; 0x204
   297dc:	cmp	r0, #0
   297e0:	beq	297e8 <__flatcc_fb_clear_parser@@Base+0xa0>
   297e4:	bl	14900 <free@plt>
   297e8:	ldr	r0, [r4, #520]	; 0x208
   297ec:	cmp	r0, #0
   297f0:	beq	297f8 <__flatcc_fb_clear_parser@@Base+0xb0>
   297f4:	bl	14900 <free@plt>
   297f8:	ldr	r0, [r4, #548]	; 0x224
   297fc:	cmp	r0, #0
   29800:	beq	29808 <__flatcc_fb_clear_parser@@Base+0xc0>
   29804:	bl	14900 <free@plt>
   29808:	add	r0, r4, #416	; 0x1a0
   2980c:	movw	r1, #38984	; 0x9848
   29810:	movt	r1, #2
   29814:	mov	r2, #0
   29818:	bl	26c60 <fb_scope_table_destroy@@Base>
   2981c:	mov	r0, r4
   29820:	bl	29850 <__flatcc_fb_clear_parser@@Base+0x108>
   29824:	ldr	r0, [r4, #16]
   29828:	cmp	r0, #0
   2982c:	beq	29834 <__flatcc_fb_clear_parser@@Base+0xec>
   29830:	bl	14900 <free@plt>
   29834:	mov	r0, r4
   29838:	mov	r1, #0
   2983c:	mov	r2, #560	; 0x230
   29840:	pop	{r4, r5, fp, lr}
   29844:	b	149d8 <memset@plt>
   29848:	add	r0, r1, #4
   2984c:	b	265f8 <fb_symbol_table_clear@@Base>
   29850:	push	{r4, sl, fp, lr}
   29854:	add	fp, sp, #8
   29858:	ldr	r0, [r0, #48]	; 0x30
   2985c:	cmp	r0, #0
   29860:	popeq	{r4, sl, fp, pc}
   29864:	ldr	r4, [r0]
   29868:	bl	14900 <free@plt>
   2986c:	cmp	r4, #0
   29870:	mov	r0, r4
   29874:	bne	29864 <__flatcc_fb_clear_parser@@Base+0x11c>
   29878:	pop	{r4, sl, fp, pc}
   2987c:	mov	r3, #0
   29880:	b	29884 <__flatcc_fb_clear_parser@@Base+0x13c>
   29884:	push	{fp, lr}
   29888:	mov	fp, sp
   2988c:	sub	sp, sp, #8
   29890:	mov	ip, #0
   29894:	str	ip, [sp]
   29898:	str	ip, [sp, #4]
   2989c:	bl	280c4 <__flatcc_error_report@@Base>
   298a0:	mov	sp, fp
   298a4:	pop	{fp, pc}
   298a8:	push	{r4, r5, r6, r7, fp, lr}
   298ac:	add	fp, sp, #16
   298b0:	mov	r4, r0
   298b4:	ldr	r2, [r0, #44]	; 0x2c
   298b8:	ldr	r0, [r0, #52]	; 0x34
   298bc:	add	r1, r1, #15
   298c0:	bic	r6, r1, #15
   298c4:	add	r1, r0, r6
   298c8:	cmp	r1, r2
   298cc:	bls	29904 <__flatcc_fb_clear_parser@@Base+0x1bc>
   298d0:	mov	r7, #65536	; 0x10000
   298d4:	mov	r0, #65536	; 0x10000
   298d8:	mov	r1, #1
   298dc:	bl	148d0 <calloc@plt>
   298e0:	mov	r5, r0
   298e4:	bl	28514 <__flatcc_fb_init_parser@@Base+0x1dc>
   298e8:	ldr	r0, [r4, #48]	; 0x30
   298ec:	mov	r1, r5
   298f0:	str	r0, [r1], r7
   298f4:	add	r0, r5, #16
   298f8:	str	r1, [r4, #44]	; 0x2c
   298fc:	str	r5, [r4, #48]	; 0x30
   29900:	str	r0, [r4, #52]	; 0x34
   29904:	ldr	r1, [r4, #52]	; 0x34
   29908:	add	r1, r1, r6
   2990c:	str	r1, [r4, #52]	; 0x34
   29910:	pop	{r4, r5, r6, r7, fp, pc}
   29914:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29918:	add	fp, sp, #24
   2991c:	mov	r8, r3
   29920:	mov	r5, r2
   29924:	mov	r9, r1
   29928:	mov	r4, r0
   2992c:	ldr	r1, [r0, #20]
   29930:	ldr	r0, [r0, #28]
   29934:	ldr	r7, [r4, #40]	; 0x28
   29938:	add	r2, r0, r0, lsl #2
   2993c:	add	r1, r1, r2, lsl #2
   29940:	str	r1, [r4, #24]
   29944:	cmp	r7, r1
   29948:	bne	29998 <__flatcc_fb_clear_parser@@Base+0x250>
   2994c:	lsl	r1, r0, #1
   29950:	cmp	r0, #0
   29954:	movweq	r1, #1024	; 0x400
   29958:	str	r1, [r4, #28]
   2995c:	add	r0, r1, r1, lsl #2
   29960:	lsl	r1, r0, #2
   29964:	ldr	r6, [r4, #20]
   29968:	mov	r0, r6
   2996c:	bl	14948 <realloc@plt>
   29970:	str	r0, [r4, #20]
   29974:	bl	28514 <__flatcc_fb_init_parser@@Base+0x1dc>
   29978:	sub	r0, r7, r6
   2997c:	ldr	r1, [r4, #20]
   29980:	ldr	r2, [r4, #28]
   29984:	add	r0, r1, r0
   29988:	str	r0, [r4, #40]	; 0x28
   2998c:	add	r0, r2, r2, lsl #2
   29990:	add	r0, r1, r0, lsl #2
   29994:	str	r0, [r4, #24]
   29998:	ldr	r0, [r4, #40]	; 0x28
   2999c:	str	r5, [r0]
   299a0:	str	r9, [r0, #16]
   299a4:	sub	r1, r8, r5
   299a8:	str	r1, [r0, #4]
   299ac:	ldr	r1, [r4, #64]	; 0x40
   299b0:	str	r1, [r0, #8]
   299b4:	ldr	r1, [r4, #60]	; 0x3c
   299b8:	add	r2, r5, #1
   299bc:	sub	r1, r2, r1
   299c0:	str	r1, [r0, #12]
   299c4:	add	r0, r0, #20
   299c8:	str	r0, [r4, #40]	; 0x28
   299cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   299d0:	mov	r3, r2
   299d4:	mov	r2, r1
   299d8:	ldr	r1, [r0, #32]
   299dc:	cmp	r1, #0
   299e0:	bxeq	lr
   299e4:	movw	r1, #64572	; 0xfc3c
   299e8:	movt	r1, #65535	; 0xffff
   299ec:	b	29914 <__flatcc_fb_clear_parser@@Base+0x1cc>
   299f0:	push	{fp, lr}
   299f4:	mov	fp, sp
   299f8:	movw	r2, #29242	; 0x723a
   299fc:	movt	r2, #25968	; 0x6570
   29a00:	cmp	r0, r2
   29a04:	ble	29a80 <__flatcc_fb_clear_parser@@Base+0x338>
   29a08:	movw	r2, #26173	; 0x663d
   29a0c:	movt	r2, #28265	; 0x6e69
   29a10:	cmp	r0, r2
   29a14:	bgt	29b08 <__flatcc_fb_clear_parser@@Base+0x3c0>
   29a18:	movw	r2, #30004	; 0x7534
   29a1c:	movt	r2, #26476	; 0x676c
   29a20:	cmp	r0, r2
   29a24:	ble	29be8 <__flatcc_fb_clear_parser@@Base+0x4a0>
   29a28:	movw	r2, #29493	; 0x7335
   29a2c:	movt	r2, #26484	; 0x6774
   29a30:	cmp	r0, r2
   29a34:	ble	29d30 <__flatcc_fb_clear_parser@@Base+0x5e8>
   29a38:	movw	r2, #29494	; 0x7336
   29a3c:	movt	r2, #26484	; 0x6774
   29a40:	cmp	r0, r2
   29a44:	beq	29f50 <__flatcc_fb_clear_parser@@Base+0x808>
   29a48:	movw	r2, #25140	; 0x6234
   29a4c:	movt	r2, #27759	; 0x6c6f
   29a50:	cmp	r0, r2
   29a54:	beq	29f78 <__flatcc_fb_clear_parser@@Base+0x830>
   29a58:	movw	r2, #25908	; 0x6534
   29a5c:	movt	r2, #28014	; 0x6d6e
   29a60:	cmp	r0, r2
   29a64:	ldreq	r0, [r1]
   29a68:	movweq	r1, #28261	; 0x6e65
   29a6c:	movteq	r1, #28021	; 0x6d75
   29a70:	cmpeq	r0, r1
   29a74:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29a78:	mvn	r0, #996	; 0x3e4
   29a7c:	pop	{fp, pc}
   29a80:	movw	r2, #30004	; 0x7534
   29a84:	movt	r2, #14441	; 0x3869
   29a88:	cmp	r0, r2
   29a8c:	ble	29b80 <__flatcc_fb_clear_parser@@Base+0x438>
   29a90:	movw	r2, #29748	; 0x7434
   29a94:	movt	r2, #25953	; 0x6561
   29a98:	cmp	r0, r2
   29a9c:	ble	29c38 <__flatcc_fb_clear_parser@@Base+0x4f0>
   29aa0:	movw	r2, #26934	; 0x6936
   29aa4:	movt	r2, #25966	; 0x656e
   29aa8:	cmp	r0, r2
   29aac:	ble	29d68 <__flatcc_fb_clear_parser@@Base+0x620>
   29ab0:	movw	r2, #26935	; 0x6937
   29ab4:	movt	r2, #25966	; 0x656e
   29ab8:	cmp	r0, r2
   29abc:	beq	29f9c <__flatcc_fb_clear_parser@@Base+0x854>
   29ac0:	movw	r2, #25654	; 0x6436
   29ac4:	movt	r2, #25967	; 0x656f
   29ac8:	cmp	r0, r2
   29acc:	beq	29fc4 <__flatcc_fb_clear_parser@@Base+0x87c>
   29ad0:	movw	r2, #29241	; 0x7239
   29ad4:	movt	r2, #25967	; 0x656f
   29ad8:	cmp	r0, r2
   29adc:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29ae0:	movw	r0, #55638	; 0xd956
   29ae4:	movt	r0, #4
   29ae8:	mov	r2, #9
   29aec:	bl	14924 <memcmp@plt>
   29af0:	cmp	r0, #0
   29af4:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29af8:	movw	r0, #64537	; 0xfc19
   29afc:	movt	r0, #65535	; 0xffff
   29b00:	add	r0, r0, #31
   29b04:	pop	{fp, pc}
   29b08:	movw	r2, #30003	; 0x7533
   29b0c:	movt	r2, #29801	; 0x7469
   29b10:	cmp	r0, r2
   29b14:	ble	29c80 <__flatcc_fb_clear_parser@@Base+0x538>
   29b18:	movw	r2, #26930	; 0x6932
   29b1c:	movt	r2, #29806	; 0x746e
   29b20:	cmp	r0, r2
   29b24:	ble	29db0 <__flatcc_fb_clear_parser@@Base+0x668>
   29b28:	movw	r2, #29494	; 0x7336
   29b2c:	movt	r2, #29812	; 0x7474
   29b30:	cmp	r0, r2
   29b34:	beq	29fec <__flatcc_fb_clear_parser@@Base+0x8a4>
   29b38:	movw	r2, #30006	; 0x7536
   29b3c:	movt	r2, #29811	; 0x7473
   29b40:	cmp	r0, r2
   29b44:	beq	2a010 <__flatcc_fb_clear_parser@@Base+0x8c8>
   29b48:	movw	r2, #26931	; 0x6933
   29b4c:	movt	r2, #29806	; 0x746e
   29b50:	cmp	r0, r2
   29b54:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29b58:	movw	r0, #51417	; 0xc8d9
   29b5c:	movt	r0, #4
   29b60:	mov	r2, #3
   29b64:	bl	14924 <memcmp@plt>
   29b68:	cmp	r0, #0
   29b6c:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29b70:	movw	r0, #64537	; 0xfc19
   29b74:	movt	r0, #65535	; 0xffff
   29b78:	add	r0, r0, #5
   29b7c:	pop	{fp, pc}
   29b80:	movw	r2, #26166	; 0x6636
   29b84:	movt	r2, #13420	; 0x346c
   29b88:	cmp	r0, r2
   29b8c:	bgt	29cd8 <__flatcc_fb_clear_parser@@Base+0x590>
   29b90:	movw	r2, #26932	; 0x6934
   29b94:	movt	r2, #12910	; 0x326e
   29b98:	cmp	r0, r2
   29b9c:	bgt	29df4 <__flatcc_fb_clear_parser@@Base+0x6ac>
   29ba0:	movw	r2, #30006	; 0x7536
   29ba4:	movt	r2, #12905	; 0x3269
   29ba8:	cmp	r0, r2
   29bac:	beq	2a038 <__flatcc_fb_clear_parser@@Base+0x8f0>
   29bb0:	movw	r2, #26167	; 0x6637
   29bb4:	movt	r2, #12908	; 0x326c
   29bb8:	cmp	r0, r2
   29bbc:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29bc0:	movw	r0, #55604	; 0xd934
   29bc4:	movt	r0, #4
   29bc8:	mov	r2, #7
   29bcc:	bl	14924 <memcmp@plt>
   29bd0:	cmp	r0, #0
   29bd4:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29bd8:	movw	r0, #64537	; 0xfc19
   29bdc:	movt	r0, #65535	; 0xffff
   29be0:	add	r0, r0, #3
   29be4:	pop	{fp, pc}
   29be8:	movw	r2, #24888	; 0x6138
   29bec:	movt	r2, #25972	; 0x6574
   29bf0:	cmp	r0, r2
   29bf4:	bgt	29e3c <__flatcc_fb_clear_parser@@Base+0x6f4>
   29bf8:	movw	r2, #29243	; 0x723b
   29bfc:	movt	r2, #25968	; 0x6570
   29c00:	cmp	r0, r2
   29c04:	beq	2a060 <__flatcc_fb_clear_parser@@Base+0x918>
   29c08:	movw	r2, #29748	; 0x7434
   29c0c:	movt	r2, #25970	; 0x6572
   29c10:	cmp	r0, r2
   29c14:	ldreq	r0, [r1]
   29c18:	movweq	r1, #29300	; 0x7274
   29c1c:	movteq	r1, #25973	; 0x6575
   29c20:	cmpeq	r0, r1
   29c24:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29c28:	movw	r0, #64537	; 0xfc19
   29c2c:	movt	r0, #65535	; 0xffff
   29c30:	add	r0, r0, #11
   29c34:	pop	{fp, pc}
   29c38:	movw	r2, #26164	; 0x6634
   29c3c:	movt	r2, #25953	; 0x6561
   29c40:	cmp	r0, r2
   29c44:	bgt	29e7c <__flatcc_fb_clear_parser@@Base+0x734>
   29c48:	movw	r2, #30005	; 0x7535
   29c4c:	movt	r2, #14441	; 0x3869
   29c50:	cmp	r0, r2
   29c54:	beq	2a088 <__flatcc_fb_clear_parser@@Base+0x940>
   29c58:	movw	r2, #26932	; 0x6934
   29c5c:	movt	r2, #14446	; 0x386e
   29c60:	cmp	r0, r2
   29c64:	ldreq	r0, [r1]
   29c68:	movweq	r1, #28265	; 0x6e69
   29c6c:	movteq	r1, #14452	; 0x3874
   29c70:	cmpeq	r0, r1
   29c74:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29c78:	mvn	r0, #992	; 0x3e0
   29c7c:	pop	{fp, pc}
   29c80:	movw	r2, #26174	; 0x663e
   29c84:	movt	r2, #29289	; 0x7269
   29c88:	cmp	r0, r2
   29c8c:	bgt	29ec0 <__flatcc_fb_clear_parser@@Base+0x778>
   29c90:	movw	r2, #26174	; 0x663e
   29c94:	movt	r2, #28265	; 0x6e69
   29c98:	cmp	r0, r2
   29c9c:	beq	2a0ac <__flatcc_fb_clear_parser@@Base+0x964>
   29ca0:	movw	r2, #30005	; 0x7535
   29ca4:	movt	r2, #28270	; 0x6e6e
   29ca8:	cmp	r0, r2
   29cac:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29cb0:	movw	r0, #51735	; 0xca17
   29cb4:	movt	r0, #3
   29cb8:	mov	r2, #5
   29cbc:	bl	14924 <memcmp@plt>
   29cc0:	cmp	r0, #0
   29cc4:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29cc8:	movw	r0, #64537	; 0xfc19
   29ccc:	movt	r0, #65535	; 0xffff
   29cd0:	add	r0, r0, #23
   29cd4:	pop	{fp, pc}
   29cd8:	movw	r2, #30005	; 0x7535
   29cdc:	movt	r2, #13929	; 0x3669
   29ce0:	cmp	r0, r2
   29ce4:	bgt	29f08 <__flatcc_fb_clear_parser@@Base+0x7c0>
   29ce8:	movw	r2, #26167	; 0x6637
   29cec:	movt	r2, #13420	; 0x346c
   29cf0:	cmp	r0, r2
   29cf4:	beq	2a0d4 <__flatcc_fb_clear_parser@@Base+0x98c>
   29cf8:	movw	r2, #26933	; 0x6935
   29cfc:	movt	r2, #13422	; 0x346e
   29d00:	cmp	r0, r2
   29d04:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29d08:	movw	r0, #54894	; 0xd66e
   29d0c:	movt	r0, #3
   29d10:	mov	r2, #5
   29d14:	bl	14924 <memcmp@plt>
   29d18:	cmp	r0, #0
   29d1c:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29d20:	movw	r0, #64537	; 0xfc19
   29d24:	movt	r0, #65535	; 0xffff
   29d28:	add	r0, r0, #9
   29d2c:	pop	{fp, pc}
   29d30:	movw	r2, #30005	; 0x7535
   29d34:	movt	r2, #26476	; 0x676c
   29d38:	cmp	r0, r2
   29d3c:	beq	2a0fc <__flatcc_fb_clear_parser@@Base+0x9b4>
   29d40:	movw	r2, #27700	; 0x6c34
   29d44:	movt	r2, #26479	; 0x676f
   29d48:	cmp	r0, r2
   29d4c:	ldreq	r0, [r1]
   29d50:	movweq	r1, #28524	; 0x6f6c
   29d54:	movteq	r1, #26478	; 0x676e
   29d58:	cmpeq	r0, r1
   29d5c:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29d60:	mvn	r0, #988	; 0x3dc
   29d64:	pop	{fp, pc}
   29d68:	movw	r2, #29749	; 0x7435
   29d6c:	movt	r2, #25953	; 0x6561
   29d70:	cmp	r0, r2
   29d74:	beq	2a120 <__flatcc_fb_clear_parser@@Base+0x9d8>
   29d78:	movw	r2, #30005	; 0x7535
   29d7c:	movt	r2, #25954	; 0x6562
   29d80:	cmp	r0, r2
   29d84:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29d88:	movw	r0, #61504	; 0xf040
   29d8c:	movt	r0, #4
   29d90:	mov	r2, #5
   29d94:	bl	14924 <memcmp@plt>
   29d98:	cmp	r0, #0
   29d9c:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29da0:	movw	r0, #64537	; 0xfc19
   29da4:	movt	r0, #65535	; 0xffff
   29da8:	add	r0, r0, #17
   29dac:	pop	{fp, pc}
   29db0:	movw	r2, #30004	; 0x7534
   29db4:	movt	r2, #29801	; 0x7469
   29db8:	cmp	r0, r2
   29dbc:	beq	2a148 <__flatcc_fb_clear_parser@@Base+0xa00>
   29dc0:	movw	r2, #26165	; 0x6635
   29dc4:	movt	r2, #29804	; 0x746c
   29dc8:	cmp	r0, r2
   29dcc:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29dd0:	movw	r0, #52482	; 0xcd02
   29dd4:	movt	r0, #3
   29dd8:	mov	r2, #5
   29ddc:	bl	14924 <memcmp@plt>
   29de0:	cmp	r0, #0
   29de4:	mvneq	r0, #984	; 0x3d8
   29de8:	popeq	{fp, pc}
   29dec:	mov	r0, #9
   29df0:	pop	{fp, pc}
   29df4:	movw	r2, #26933	; 0x6935
   29df8:	movt	r2, #12910	; 0x326e
   29dfc:	cmp	r0, r2
   29e00:	beq	2a16c <__flatcc_fb_clear_parser@@Base+0xa24>
   29e04:	movw	r2, #30006	; 0x7536
   29e08:	movt	r2, #13417	; 0x3469
   29e0c:	cmp	r0, r2
   29e10:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29e14:	movw	r0, #54893	; 0xd66d
   29e18:	movt	r0, #3
   29e1c:	mov	r2, #6
   29e20:	bl	14924 <memcmp@plt>
   29e24:	cmp	r0, #0
   29e28:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29e2c:	movw	r0, #64537	; 0xfc19
   29e30:	movt	r0, #65535	; 0xffff
   29e34:	add	r0, r0, #21
   29e38:	pop	{fp, pc}
   29e3c:	movw	r2, #24889	; 0x6139
   29e40:	movt	r2, #25972	; 0x6574
   29e44:	cmp	r0, r2
   29e48:	beq	2a194 <__flatcc_fb_clear_parser@@Base+0xa4c>
   29e4c:	movw	r2, #25140	; 0x6234
   29e50:	movt	r2, #25977	; 0x6579
   29e54:	cmp	r0, r2
   29e58:	ldreq	r0, [r1]
   29e5c:	movweq	r1, #31074	; 0x7962
   29e60:	movteq	r1, #25972	; 0x6574
   29e64:	cmpeq	r0, r1
   29e68:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29e6c:	movw	r0, #64537	; 0xfc19
   29e70:	movt	r0, #65535	; 0xffff
   29e74:	add	r0, r0, #1
   29e78:	pop	{fp, pc}
   29e7c:	movw	r2, #26165	; 0x6635
   29e80:	movt	r2, #25953	; 0x6561
   29e84:	cmp	r0, r2
   29e88:	beq	2a1bc <__flatcc_fb_clear_parser@@Base+0xa74>
   29e8c:	movw	r2, #28217	; 0x6e39
   29e90:	movt	r2, #25953	; 0x6561
   29e94:	cmp	r0, r2
   29e98:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29e9c:	movw	r0, #24032	; 0x5de0
   29ea0:	movt	r0, #3
   29ea4:	mov	r2, #9
   29ea8:	bl	14924 <memcmp@plt>
   29eac:	cmp	r0, #0
   29eb0:	mvneq	r0, #968	; 0x3c8
   29eb4:	popeq	{fp, pc}
   29eb8:	mov	r0, #9
   29ebc:	pop	{fp, pc}
   29ec0:	movw	r2, #26175	; 0x663f
   29ec4:	movt	r2, #29289	; 0x7269
   29ec8:	cmp	r0, r2
   29ecc:	beq	2a1e4 <__flatcc_fb_clear_parser@@Base+0xa9c>
   29ed0:	movw	r2, #29493	; 0x7335
   29ed4:	movt	r2, #29800	; 0x7468
   29ed8:	cmp	r0, r2
   29edc:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29ee0:	movw	r0, #55598	; 0xd92e
   29ee4:	movt	r0, #4
   29ee8:	mov	r2, #5
   29eec:	bl	14924 <memcmp@plt>
   29ef0:	cmp	r0, #0
   29ef4:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29ef8:	movw	r0, #64537	; 0xfc19
   29efc:	movt	r0, #65535	; 0xffff
   29f00:	add	r0, r0, #15
   29f04:	pop	{fp, pc}
   29f08:	movw	r2, #30006	; 0x7536
   29f0c:	movt	r2, #13929	; 0x3669
   29f10:	cmp	r0, r2
   29f14:	beq	2a208 <__flatcc_fb_clear_parser@@Base+0xac0>
   29f18:	movw	r2, #26933	; 0x6935
   29f1c:	movt	r2, #13934	; 0x366e
   29f20:	cmp	r0, r2
   29f24:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29f28:	movw	r0, #54908	; 0xd67c
   29f2c:	movt	r0, #3
   29f30:	mov	r2, #5
   29f34:	bl	14924 <memcmp@plt>
   29f38:	cmp	r0, #0
   29f3c:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29f40:	movw	r0, #64537	; 0xfc19
   29f44:	movt	r0, #65535	; 0xffff
   29f48:	add	r0, r0, #7
   29f4c:	pop	{fp, pc}
   29f50:	movw	r0, #60083	; 0xeab3
   29f54:	movt	r0, #4
   29f58:	mov	r2, #6
   29f5c:	bl	14924 <memcmp@plt>
   29f60:	cmp	r0, #0
   29f64:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29f68:	movw	r0, #64537	; 0xfc19
   29f6c:	movt	r0, #65535	; 0xffff
   29f70:	add	r0, r0, #25
   29f74:	pop	{fp, pc}
   29f78:	ldr	r0, [r1]
   29f7c:	movw	r1, #28514	; 0x6f62
   29f80:	movt	r1, #27759	; 0x6c6f
   29f84:	cmp	r0, r1
   29f88:	movweq	r0, #64537	; 0xfc19
   29f8c:	movteq	r0, #65535	; 0xffff
   29f90:	popeq	{fp, pc}
   29f94:	mov	r0, #9
   29f98:	pop	{fp, pc}
   29f9c:	movw	r0, #55620	; 0xd944
   29fa0:	movt	r0, #4
   29fa4:	mov	r2, #7
   29fa8:	bl	14924 <memcmp@plt>
   29fac:	cmp	r0, #0
   29fb0:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29fb4:	movw	r0, #64537	; 0xfc19
   29fb8:	movt	r0, #65535	; 0xffff
   29fbc:	add	r0, r0, #28
   29fc0:	pop	{fp, pc}
   29fc4:	movw	r0, #52488	; 0xcd08
   29fc8:	movt	r0, #3
   29fcc:	mov	r2, #6
   29fd0:	bl	14924 <memcmp@plt>
   29fd4:	cmp	r0, #0
   29fd8:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   29fdc:	movw	r0, #64537	; 0xfc19
   29fe0:	movt	r0, #65535	; 0xffff
   29fe4:	add	r0, r0, #24
   29fe8:	pop	{fp, pc}
   29fec:	movw	r0, #59292	; 0xe79c
   29ff0:	movt	r0, #4
   29ff4:	mov	r2, #6
   29ff8:	bl	14924 <memcmp@plt>
   29ffc:	cmp	r0, #0
   2a000:	mvneq	r0, #972	; 0x3cc
   2a004:	popeq	{fp, pc}
   2a008:	mov	r0, #9
   2a00c:	pop	{fp, pc}
   2a010:	movw	r0, #55597	; 0xd92d
   2a014:	movt	r0, #4
   2a018:	mov	r2, #6
   2a01c:	bl	14924 <memcmp@plt>
   2a020:	cmp	r0, #0
   2a024:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a028:	movw	r0, #64537	; 0xfc19
   2a02c:	movt	r0, #65535	; 0xffff
   2a030:	add	r0, r0, #27
   2a034:	pop	{fp, pc}
   2a038:	movw	r0, #54900	; 0xd674
   2a03c:	movt	r0, #3
   2a040:	mov	r2, #6
   2a044:	bl	14924 <memcmp@plt>
   2a048:	cmp	r0, #0
   2a04c:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a050:	movw	r0, #64537	; 0xfc19
   2a054:	movt	r0, #65535	; 0xffff
   2a058:	add	r0, r0, #20
   2a05c:	pop	{fp, pc}
   2a060:	movw	r0, #63675	; 0xf8bb
   2a064:	movt	r0, #4
   2a068:	mov	r2, #11
   2a06c:	bl	14924 <memcmp@plt>
   2a070:	cmp	r0, #0
   2a074:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a078:	movw	r0, #64537	; 0xfc19
   2a07c:	movt	r0, #65535	; 0xffff
   2a080:	add	r0, r0, #32
   2a084:	pop	{fp, pc}
   2a088:	movw	r0, #54914	; 0xd682
   2a08c:	movt	r0, #3
   2a090:	mov	r2, #5
   2a094:	bl	14924 <memcmp@plt>
   2a098:	cmp	r0, #0
   2a09c:	mvneq	r0, #980	; 0x3d4
   2a0a0:	popeq	{fp, pc}
   2a0a4:	mov	r0, #9
   2a0a8:	pop	{fp, pc}
   2a0ac:	movw	r0, #55648	; 0xd960
   2a0b0:	movt	r0, #4
   2a0b4:	mov	r2, #14
   2a0b8:	bl	14924 <memcmp@plt>
   2a0bc:	cmp	r0, #0
   2a0c0:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a0c4:	movw	r0, #64537	; 0xfc19
   2a0c8:	movt	r0, #65535	; 0xffff
   2a0cc:	add	r0, r0, #33	; 0x21
   2a0d0:	pop	{fp, pc}
   2a0d4:	movw	r0, #55612	; 0xd93c
   2a0d8:	movt	r0, #4
   2a0dc:	mov	r2, #7
   2a0e0:	bl	14924 <memcmp@plt>
   2a0e4:	cmp	r0, #0
   2a0e8:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a0ec:	movw	r0, #64537	; 0xfc19
   2a0f0:	movt	r0, #65535	; 0xffff
   2a0f4:	add	r0, r0, #4
   2a0f8:	pop	{fp, pc}
   2a0fc:	movw	r0, #55591	; 0xd927
   2a100:	movt	r0, #4
   2a104:	mov	r2, #5
   2a108:	bl	14924 <memcmp@plt>
   2a10c:	cmp	r0, #0
   2a110:	mvneq	r0, #976	; 0x3d0
   2a114:	popeq	{fp, pc}
   2a118:	mov	r0, #9
   2a11c:	pop	{fp, pc}
   2a120:	movw	r0, #58749	; 0xe57d
   2a124:	movt	r0, #4
   2a128:	mov	r2, #5
   2a12c:	bl	14924 <memcmp@plt>
   2a130:	cmp	r0, #0
   2a134:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a138:	movw	r0, #64537	; 0xfc19
   2a13c:	movt	r0, #65535	; 0xffff
   2a140:	add	r0, r0, #16
   2a144:	pop	{fp, pc}
   2a148:	ldr	r0, [r1]
   2a14c:	movw	r1, #26997	; 0x6975
   2a150:	movt	r1, #29806	; 0x746e
   2a154:	cmp	r0, r1
   2a158:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a15c:	movw	r0, #64537	; 0xfc19
   2a160:	movt	r0, #65535	; 0xffff
   2a164:	add	r0, r0, #12
   2a168:	pop	{fp, pc}
   2a16c:	movw	r0, #54901	; 0xd675
   2a170:	movt	r0, #3
   2a174:	mov	r2, #5
   2a178:	bl	14924 <memcmp@plt>
   2a17c:	cmp	r0, #0
   2a180:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a184:	movw	r0, #64537	; 0xfc19
   2a188:	movt	r0, #65535	; 0xffff
   2a18c:	add	r0, r0, #8
   2a190:	pop	{fp, pc}
   2a194:	movw	r0, #55628	; 0xd94c
   2a198:	movt	r0, #4
   2a19c:	mov	r2, #9
   2a1a0:	bl	14924 <memcmp@plt>
   2a1a4:	cmp	r0, #0
   2a1a8:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a1ac:	movw	r0, #64537	; 0xfc19
   2a1b0:	movt	r0, #65535	; 0xffff
   2a1b4:	add	r0, r0, #29
   2a1b8:	pop	{fp, pc}
   2a1bc:	movw	r0, #55585	; 0xd921
   2a1c0:	movt	r0, #4
   2a1c4:	mov	r2, #5
   2a1c8:	bl	14924 <memcmp@plt>
   2a1cc:	cmp	r0, #0
   2a1d0:	bne	2a220 <__flatcc_fb_clear_parser@@Base+0xad8>
   2a1d4:	movw	r0, #64537	; 0xfc19
   2a1d8:	movt	r0, #65535	; 0xffff
   2a1dc:	add	r0, r0, #13
   2a1e0:	pop	{fp, pc}
   2a1e4:	movw	r0, #55663	; 0xd96f
   2a1e8:	movt	r0, #4
   2a1ec:	mov	r2, #15
   2a1f0:	bl	14924 <memcmp@plt>
   2a1f4:	cmp	r0, #0
   2a1f8:	mvneq	r0, #964	; 0x3c4
   2a1fc:	popeq	{fp, pc}
   2a200:	mov	r0, #9
   2a204:	pop	{fp, pc}
   2a208:	movw	r0, #54907	; 0xd67b
   2a20c:	movt	r0, #3
   2a210:	mov	r2, #6
   2a214:	bl	14924 <memcmp@plt>
   2a218:	cmp	r0, #0
   2a21c:	beq	2a228 <__flatcc_fb_clear_parser@@Base+0xae0>
   2a220:	mov	r0, #9
   2a224:	pop	{fp, pc}
   2a228:	movw	r0, #64537	; 0xfc19
   2a22c:	movt	r0, #65535	; 0xffff
   2a230:	add	r0, r0, #19
   2a234:	pop	{fp, pc}
   2a238:	push	{r4, r5, fp, lr}
   2a23c:	add	fp, sp, #8
   2a240:	mov	r4, r1
   2a244:	mov	r5, r0
   2a248:	mov	r1, #12
   2a24c:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2a250:	str	r4, [r0, #4]
   2a254:	ldr	r1, [r5, #36]	; 0x24
   2a258:	str	r1, [r0]
   2a25c:	str	r0, [r5, #36]	; 0x24
   2a260:	pop	{r4, r5, fp, pc}
   2a264:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a268:	add	fp, sp, #24
   2a26c:	mov	r4, r0
   2a270:	ldr	r5, [r0, #40]	; 0x28
   2a274:	movw	r8, #64565	; 0xfc35
   2a278:	movt	r8, #65535	; 0xffff
   2a27c:	mov	r1, r8
   2a280:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a284:	cmp	r0, #0
   2a288:	beq	2a328 <__flatcc_fb_clear_parser@@Base+0xbe0>
   2a28c:	movw	r7, #55789	; 0xd9ed
   2a290:	movt	r7, #4
   2a294:	movw	r6, #55835	; 0xda1b
   2a298:	movt	r6, #4
   2a29c:	movw	r9, #55733	; 0xd9b5
   2a2a0:	movt	r9, #4
   2a2a4:	ldr	r0, [r4, #140]	; 0x8c
   2a2a8:	cmp	r0, #0
   2a2ac:	beq	2a2c0 <__flatcc_fb_clear_parser@@Base+0xb78>
   2a2b0:	mov	r0, r4
   2a2b4:	mov	r1, r5
   2a2b8:	mov	r2, r9
   2a2bc:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2a2c0:	ldr	r0, [r4, #108]	; 0x6c
   2a2c4:	cmp	r0, #9
   2a2c8:	popgt	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a2cc:	mov	r0, r4
   2a2d0:	mov	r1, #19
   2a2d4:	mov	r2, r7
   2a2d8:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2a2dc:	cmp	r0, #0
   2a2e0:	bne	2a2f0 <__flatcc_fb_clear_parser@@Base+0xba8>
   2a2e4:	mov	r0, r4
   2a2e8:	mov	r1, #59	; 0x3b
   2a2ec:	bl	2a6c4 <__flatcc_fb_clear_parser@@Base+0xf7c>
   2a2f0:	mov	r0, r4
   2a2f4:	bl	2a870 <__flatcc_fb_clear_parser@@Base+0x1128>
   2a2f8:	add	r1, r0, #8
   2a2fc:	mov	r0, r4
   2a300:	bl	2a708 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2a304:	mov	r0, r4
   2a308:	mov	r1, #59	; 0x3b
   2a30c:	mov	r2, r6
   2a310:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2a314:	mov	r0, r4
   2a318:	mov	r1, r8
   2a31c:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a320:	cmp	r0, #0
   2a324:	bne	2a2a4 <__flatcc_fb_clear_parser@@Base+0xb5c>
   2a328:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a32c:	ldr	r0, [r0, #16]
   2a330:	clz	r0, r0
   2a334:	lsr	r0, r0, #5
   2a338:	bx	lr
   2a33c:	push	{r4, sl, fp, lr}
   2a340:	add	fp, sp, #8
   2a344:	sub	sp, sp, #8
   2a348:	mov	r4, r0
   2a34c:	ldr	r1, [r0, #40]	; 0x28
   2a350:	ldr	r0, [r1, #16]
   2a354:	cmp	r0, #4
   2a358:	bgt	2a41c <__flatcc_fb_clear_parser@@Base+0xcd4>
   2a35c:	movw	r2, #997	; 0x3e5
   2a360:	add	r0, r0, r2
   2a364:	cmp	r0, #32
   2a368:	bhi	2a5d8 <__flatcc_fb_clear_parser@@Base+0xe90>
   2a36c:	add	r2, pc, #0
   2a370:	ldr	pc, [r2, r0, lsl #2]
   2a374:	strdeq	sl, [r2], -r8
   2a378:	ldrdeq	sl, [r2], -r8
   2a37c:	ldrdeq	sl, [r2], -r8
   2a380:	ldrdeq	sl, [r2], -r8
   2a384:	ldrdeq	sl, [r2], -r8
   2a388:	ldrdeq	sl, [r2], -r8
   2a38c:	ldrdeq	sl, [r2], -r8
   2a390:	ldrdeq	sl, [r2], -r8
   2a394:	ldrdeq	sl, [r2], -r8
   2a398:	ldrdeq	sl, [r2], -r8
   2a39c:	ldrdeq	sl, [r2], -r8
   2a3a0:	ldrdeq	sl, [r2], -r8
   2a3a4:	ldrdeq	sl, [r2], -r8
   2a3a8:	ldrdeq	sl, [r2], -r8
   2a3ac:	andeq	sl, r2, r4, ror #8
   2a3b0:	ldrdeq	sl, [r2], -r8
   2a3b4:	ldrdeq	sl, [r2], -r8
   2a3b8:	ldrdeq	sl, [r2], -r8
   2a3bc:	ldrdeq	sl, [r2], -r8
   2a3c0:	ldrdeq	sl, [r2], -r8
   2a3c4:	ldrdeq	sl, [r2], -r8
   2a3c8:	andeq	sl, r2, r4, lsl #9
   2a3cc:	ldrdeq	sl, [r2], -r8
   2a3d0:	ldrdeq	sl, [r2], -r8
   2a3d4:	andeq	sl, r2, r8, lsr #9
   2a3d8:	ldrdeq	sl, [r2], -r8
   2a3dc:	andeq	sl, r2, r8, asr #9
   2a3e0:	ldrdeq	sl, [r2], -r4
   2a3e4:	strdeq	sl, [r2], -r8
   2a3e8:	andeq	sl, r2, r0, lsl r5
   2a3ec:	andeq	sl, r2, ip, lsr #10
   2a3f0:	andeq	sl, r2, ip, asr r5
   2a3f4:	andeq	sl, r2, r8, ror r5
   2a3f8:	mov	r0, r4
   2a3fc:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a400:	mov	r0, r4
   2a404:	bl	2af88 <__flatcc_fb_clear_parser@@Base+0x1840>
   2a408:	mov	r1, r0
   2a40c:	mov	r0, r4
   2a410:	sub	sp, fp, #8
   2a414:	pop	{r4, sl, fp, lr}
   2a418:	b	2add0 <__flatcc_fb_clear_parser@@Base+0x1688>
   2a41c:	cmp	r0, #26
   2a420:	bgt	2a448 <__flatcc_fb_clear_parser@@Base+0xd00>
   2a424:	cmp	r0, #5
   2a428:	beq	2a594 <__flatcc_fb_clear_parser@@Base+0xe4c>
   2a42c:	cmp	r0, #7
   2a430:	bne	2a5d8 <__flatcc_fb_clear_parser@@Base+0xe90>
   2a434:	mov	r0, #1
   2a438:	str	r0, [sp]
   2a43c:	movw	r2, #56236	; 0xdbac
   2a440:	movt	r2, #4
   2a444:	b	2a5a4 <__flatcc_fb_clear_parser@@Base+0xe5c>
   2a448:	cmp	r0, #27
   2a44c:	beq	2a5b0 <__flatcc_fb_clear_parser@@Base+0xe68>
   2a450:	cmp	r0, #123	; 0x7b
   2a454:	bne	2a5d8 <__flatcc_fb_clear_parser@@Base+0xe90>
   2a458:	movw	r2, #56088	; 0xdb18
   2a45c:	movt	r2, #4
   2a460:	b	2a5e0 <__flatcc_fb_clear_parser@@Base+0xe98>
   2a464:	mov	r0, r4
   2a468:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a46c:	mov	r0, r4
   2a470:	bl	2ad2c <__flatcc_fb_clear_parser@@Base+0x15e4>
   2a474:	mov	r1, r0
   2a478:	movw	r2, #64553	; 0xfc29
   2a47c:	movt	r2, #65535	; 0xffff
   2a480:	b	2a54c <__flatcc_fb_clear_parser@@Base+0xe04>
   2a484:	mov	r0, r4
   2a488:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a48c:	mov	r0, r4
   2a490:	bl	2b1c0 <__flatcc_fb_clear_parser@@Base+0x1a78>
   2a494:	mov	r1, r0
   2a498:	mov	r0, r4
   2a49c:	sub	sp, fp, #8
   2a4a0:	pop	{r4, sl, fp, lr}
   2a4a4:	b	2afdc <__flatcc_fb_clear_parser@@Base+0x1894>
   2a4a8:	mov	r0, r4
   2a4ac:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a4b0:	mov	r0, r4
   2a4b4:	bl	2acd8 <__flatcc_fb_clear_parser@@Base+0x1590>
   2a4b8:	mov	r1, r0
   2a4bc:	mov	r0, r4
   2a4c0:	mvn	r2, #972	; 0x3cc
   2a4c4:	b	2a550 <__flatcc_fb_clear_parser@@Base+0xe08>
   2a4c8:	movw	r2, #56034	; 0xdae2
   2a4cc:	movt	r2, #4
   2a4d0:	b	2a5e0 <__flatcc_fb_clear_parser@@Base+0xe98>
   2a4d4:	mov	r0, r4
   2a4d8:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a4dc:	mov	r0, r4
   2a4e0:	bl	2abb8 <__flatcc_fb_clear_parser@@Base+0x1470>
   2a4e4:	mov	r1, r0
   2a4e8:	mov	r0, r4
   2a4ec:	sub	sp, fp, #8
   2a4f0:	pop	{r4, sl, fp, lr}
   2a4f4:	b	2ab34 <__flatcc_fb_clear_parser@@Base+0x13ec>
   2a4f8:	mov	r0, r4
   2a4fc:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a500:	mov	r0, r4
   2a504:	sub	sp, fp, #8
   2a508:	pop	{r4, sl, fp, lr}
   2a50c:	b	2a8bc <__flatcc_fb_clear_parser@@Base+0x1174>
   2a510:	mov	r0, r4
   2a514:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a518:	add	r1, r4, #400	; 0x190
   2a51c:	mov	r0, r4
   2a520:	sub	sp, fp, #8
   2a524:	pop	{r4, sl, fp, lr}
   2a528:	b	2aad0 <__flatcc_fb_clear_parser@@Base+0x1388>
   2a52c:	mov	r0, r4
   2a530:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a534:	mov	r0, r4
   2a538:	bl	2ad7c <__flatcc_fb_clear_parser@@Base+0x1634>
   2a53c:	mov	r1, r0
   2a540:	movw	r0, #64553	; 0xfc29
   2a544:	movt	r0, #65535	; 0xffff
   2a548:	add	r2, r0, #16
   2a54c:	mov	r0, r4
   2a550:	sub	sp, fp, #8
   2a554:	pop	{r4, sl, fp, lr}
   2a558:	b	2abdc <__flatcc_fb_clear_parser@@Base+0x1494>
   2a55c:	mov	r0, r4
   2a560:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a564:	add	r1, r4, #376	; 0x178
   2a568:	mov	r0, r4
   2a56c:	sub	sp, fp, #8
   2a570:	pop	{r4, sl, fp, lr}
   2a574:	b	2a968 <__flatcc_fb_clear_parser@@Base+0x1220>
   2a578:	mov	r0, r4
   2a57c:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a580:	add	r1, r4, #360	; 0x168
   2a584:	mov	r0, r4
   2a588:	sub	sp, fp, #8
   2a58c:	pop	{r4, sl, fp, lr}
   2a590:	b	2aa00 <__flatcc_fb_clear_parser@@Base+0x12b8>
   2a594:	mov	r0, #1
   2a598:	str	r0, [sp]
   2a59c:	movw	r2, #56186	; 0xdb7a
   2a5a0:	movt	r2, #4
   2a5a4:	movw	r3, #55938	; 0xda82
   2a5a8:	movt	r3, #4
   2a5ac:	b	2a5c8 <__flatcc_fb_clear_parser@@Base+0xe80>
   2a5b0:	mov	r0, #5
   2a5b4:	str	r0, [sp]
   2a5b8:	movw	r2, #56276	; 0xdbd4
   2a5bc:	movt	r2, #4
   2a5c0:	movw	r3, #56297	; 0xdbe9
   2a5c4:	movt	r3, #4
   2a5c8:	mov	r0, r4
   2a5cc:	bl	2a894 <__flatcc_fb_clear_parser@@Base+0x114c>
   2a5d0:	sub	sp, fp, #8
   2a5d4:	pop	{r4, sl, fp, pc}
   2a5d8:	movw	r2, #56303	; 0xdbef
   2a5dc:	movt	r2, #4
   2a5e0:	mov	r0, r4
   2a5e4:	sub	sp, fp, #8
   2a5e8:	pop	{r4, sl, fp, lr}
   2a5ec:	b	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2a5f0:	ldr	r1, [r0]
   2a5f4:	cmp	r1, #0
   2a5f8:	moveq	r2, #0
   2a5fc:	streq	r2, [r0]
   2a600:	bxeq	lr
   2a604:	mov	r3, #0
   2a608:	mov	r2, r1
   2a60c:	ldr	r1, [r1]
   2a610:	str	r3, [r2]
   2a614:	cmp	r1, #0
   2a618:	mov	r3, r2
   2a61c:	bne	2a608 <__flatcc_fb_clear_parser@@Base+0xec0>
   2a620:	str	r2, [r0]
   2a624:	bx	lr
   2a628:	ldr	r1, [r0]
   2a62c:	cmp	r1, #0
   2a630:	moveq	r2, #0
   2a634:	streq	r2, [r0]
   2a638:	bxeq	lr
   2a63c:	mov	r3, #0
   2a640:	mov	r2, r1
   2a644:	ldr	r1, [r1]
   2a648:	str	r3, [r2]
   2a64c:	cmp	r1, #0
   2a650:	mov	r3, r2
   2a654:	bne	2a640 <__flatcc_fb_clear_parser@@Base+0xef8>
   2a658:	str	r2, [r0]
   2a65c:	bx	lr
   2a660:	push	{r4, sl, fp, lr}
   2a664:	add	fp, sp, #8
   2a668:	ldr	r4, [r0, #40]	; 0x28
   2a66c:	ldr	r3, [r4, #16]
   2a670:	mov	r2, #0
   2a674:	cmp	r3, r1
   2a678:	bne	2a684 <__flatcc_fb_clear_parser@@Base+0xf3c>
   2a67c:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a680:	mov	r2, r4
   2a684:	mov	r0, r2
   2a688:	pop	{r4, sl, fp, pc}
   2a68c:	push	{r4, sl, fp, lr}
   2a690:	add	fp, sp, #8
   2a694:	ldr	r4, [r0, #40]	; 0x28
   2a698:	ldr	r3, [r4, #16]
   2a69c:	cmp	r3, r1
   2a6a0:	bne	2a6b0 <__flatcc_fb_clear_parser@@Base+0xf68>
   2a6a4:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a6a8:	mov	r0, r4
   2a6ac:	pop	{r4, sl, fp, pc}
   2a6b0:	mov	r1, r4
   2a6b4:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2a6b8:	mov	r4, #0
   2a6bc:	mov	r0, r4
   2a6c0:	pop	{r4, sl, fp, pc}
   2a6c4:	push	{r4, r5, r6, sl, fp, lr}
   2a6c8:	add	fp, sp, #16
   2a6cc:	mov	r5, r1
   2a6d0:	mov	r4, r0
   2a6d4:	ldr	r6, [r4, #40]	; 0x28
   2a6d8:	mov	r0, r6
   2a6dc:	bl	2a32c <__flatcc_fb_clear_parser@@Base+0xbe4>
   2a6e0:	cmp	r0, #0
   2a6e4:	popne	{r4, r5, r6, sl, fp, pc}
   2a6e8:	ldr	r6, [r6, #16]
   2a6ec:	mov	r0, r4
   2a6f0:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a6f4:	cmp	r6, r5
   2a6f8:	bne	2a6d4 <__flatcc_fb_clear_parser@@Base+0xf8c>
   2a6fc:	mov	r0, #0
   2a700:	str	r0, [r4, #36]	; 0x24
   2a704:	pop	{r4, r5, r6, sl, fp, pc}
   2a708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a70c:	add	fp, sp, #28
   2a710:	sub	sp, sp, #4
   2a714:	mov	r4, r1
   2a718:	mov	r5, r0
   2a71c:	mov	r0, #0
   2a720:	mov	r1, #2
   2a724:	strh	r1, [r4, #8]
   2a728:	str	r0, [r4]
   2a72c:	str	r0, [r4, #4]
   2a730:	mov	r6, #1
   2a734:	movw	r8, #55896	; 0xda58
   2a738:	movt	r8, #4
   2a73c:	movw	r9, #55938	; 0xda82
   2a740:	movt	r9, #4
   2a744:	movw	sl, #55940	; 0xda84
   2a748:	movt	sl, #4
   2a74c:	movw	r7, #55866	; 0xda3a
   2a750:	movt	r7, #4
   2a754:	b	2a760 <__flatcc_fb_clear_parser@@Base+0x1018>
   2a758:	mov	r0, r5
   2a75c:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2a760:	ldr	r1, [r5, #40]	; 0x28
   2a764:	ldr	r0, [r1, #16]
   2a768:	sub	r0, r0, #6
   2a76c:	cmp	r0, #17
   2a770:	bhi	2a818 <__flatcc_fb_clear_parser@@Base+0x10d0>
   2a774:	add	r2, pc, #0
   2a778:	ldr	pc, [r2, r0, lsl #2]
   2a77c:	andeq	sl, r2, r4, asr #15
   2a780:	andeq	sl, r2, r8, lsl r8
   2a784:	andeq	sl, r2, r8, lsl r8
   2a788:	andeq	sl, r2, r8, lsl r8
   2a78c:	andeq	sl, r2, r8, lsl r8
   2a790:	andeq	sl, r2, r8, lsl r8
   2a794:	andeq	sl, r2, r8, lsl r8
   2a798:	andeq	sl, r2, r8, lsl r8
   2a79c:	andeq	sl, r2, r8, lsl r8
   2a7a0:	andeq	sl, r2, r8, lsl r8
   2a7a4:	andeq	sl, r2, r8, lsl r8
   2a7a8:	andeq	sl, r2, r8, lsl r8
   2a7ac:	andeq	sl, r2, r0, ror #15
   2a7b0:	andeq	sl, r2, r8, lsl r8
   2a7b4:	strdeq	sl, [r2], -r0
   2a7b8:	andeq	sl, r2, r4, lsl #16
   2a7bc:	andeq	sl, r2, r0, lsr r8
   2a7c0:	andeq	sl, r2, r0, lsr r8
   2a7c4:	strh	r6, [r4, #8]
   2a7c8:	str	r6, [sp]
   2a7cc:	mov	r0, r5
   2a7d0:	mov	r2, r8
   2a7d4:	mov	r3, r9
   2a7d8:	bl	2a894 <__flatcc_fb_clear_parser@@Base+0x114c>
   2a7dc:	b	2a758 <__flatcc_fb_clear_parser@@Base+0x1010>
   2a7e0:	strh	r6, [r4, #8]
   2a7e4:	mov	r0, r5
   2a7e8:	mov	r2, sl
   2a7ec:	b	2a810 <__flatcc_fb_clear_parser@@Base+0x10c8>
   2a7f0:	ldr	r0, [r4]
   2a7f4:	cmp	r0, #0
   2a7f8:	ldreq	r0, [r1]
   2a7fc:	streq	r0, [r4]
   2a800:	b	2a758 <__flatcc_fb_clear_parser@@Base+0x1010>
   2a804:	strh	r6, [r4, #8]
   2a808:	mov	r0, r5
   2a80c:	mov	r2, r7
   2a810:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2a814:	b	2a758 <__flatcc_fb_clear_parser@@Base+0x1010>
   2a818:	movw	r2, #55971	; 0xdaa3
   2a81c:	movt	r2, #4
   2a820:	mov	r0, r5
   2a824:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2a828:	mov	r0, #1
   2a82c:	strh	r0, [r4, #8]
   2a830:	ldr	r0, [r4]
   2a834:	cmp	r0, #0
   2a838:	ldrne	r1, [r5, #40]	; 0x28
   2a83c:	ldrne	r1, [r1]
   2a840:	subne	r0, r1, r0
   2a844:	strne	r0, [r4, #4]
   2a848:	movw	r2, #56014	; 0xdace
   2a84c:	movt	r2, #4
   2a850:	mov	r0, r5
   2a854:	mov	r1, #22
   2a858:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2a85c:	cmp	r0, #0
   2a860:	moveq	r0, #1
   2a864:	strheq	r0, [r4, #8]
   2a868:	sub	sp, fp, #28
   2a86c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a870:	push	{r4, sl, fp, lr}
   2a874:	add	fp, sp, #8
   2a878:	mov	r4, r0
   2a87c:	mov	r1, #24
   2a880:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2a884:	ldr	r1, [r4, #352]	; 0x160
   2a888:	str	r1, [r0]
   2a88c:	str	r0, [r4, #352]	; 0x160
   2a890:	pop	{r4, sl, fp, pc}
   2a894:	push	{fp, lr}
   2a898:	mov	fp, sp
   2a89c:	sub	sp, sp, #8
   2a8a0:	str	r3, [sp]
   2a8a4:	ldr	r3, [fp, #8]
   2a8a8:	str	r3, [sp, #4]
   2a8ac:	mov	r3, #0
   2a8b0:	bl	280c4 <__flatcc_error_report@@Base>
   2a8b4:	mov	sp, fp
   2a8b8:	pop	{fp, pc}
   2a8bc:	push	{r4, r5, fp, lr}
   2a8c0:	add	fp, sp, #8
   2a8c4:	sub	sp, sp, #8
   2a8c8:	mov	r4, r0
   2a8cc:	mov	r0, #0
   2a8d0:	str	r0, [sp, #4]
   2a8d4:	ldr	r5, [r4, #40]	; 0x28
   2a8d8:	mov	r0, r4
   2a8dc:	mov	r1, #59	; 0x3b
   2a8e0:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a8e4:	cmp	r5, #0
   2a8e8:	cmpne	r0, #0
   2a8ec:	bne	2a934 <__flatcc_fb_clear_parser@@Base+0x11ec>
   2a8f0:	ldr	r1, [r4, #40]	; 0x28
   2a8f4:	ldr	r0, [r1, #16]
   2a8f8:	cmp	r0, #9
   2a8fc:	bne	2a944 <__flatcc_fb_clear_parser@@Base+0x11fc>
   2a900:	add	r1, sp, #4
   2a904:	mov	r0, r4
   2a908:	bl	2b214 <__flatcc_fb_clear_parser@@Base+0x1acc>
   2a90c:	movw	r2, #56373	; 0xdc35
   2a910:	movt	r2, #4
   2a914:	mov	r0, r4
   2a918:	mov	r1, #59	; 0x3b
   2a91c:	mov	r3, r5
   2a920:	bl	2b2a8 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2a924:	ldr	r1, [sp, #4]
   2a928:	mov	r0, r4
   2a92c:	bl	28594 <__flatcc_fb_init_parser@@Base+0x25c>
   2a930:	b	2a938 <__flatcc_fb_clear_parser@@Base+0x11f0>
   2a934:	mov	r0, #0
   2a938:	str	r0, [r4, #544]	; 0x220
   2a93c:	sub	sp, fp, #8
   2a940:	pop	{r4, r5, fp, pc}
   2a944:	movw	r2, #56341	; 0xdc15
   2a948:	movt	r2, #4
   2a94c:	mov	r0, r4
   2a950:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2a954:	mov	r0, r4
   2a958:	mov	r1, #59	; 0x3b
   2a95c:	bl	2a6c4 <__flatcc_fb_clear_parser@@Base+0xf7c>
   2a960:	sub	sp, fp, #8
   2a964:	pop	{r4, r5, fp, pc}
   2a968:	push	{r4, r5, r6, r7, fp, lr}
   2a96c:	add	fp, sp, #16
   2a970:	sub	sp, sp, #8
   2a974:	mov	r5, r1
   2a978:	mov	r4, r0
   2a97c:	ldrh	r0, [r1, #8]
   2a980:	cmp	r0, #2
   2a984:	bne	2a9a8 <__flatcc_fb_clear_parser@@Base+0x1260>
   2a988:	ldr	r1, [r4, #40]	; 0x28
   2a98c:	ldrd	r6, [r5]
   2a990:	str	r7, [sp]
   2a994:	movw	r2, #56447	; 0xdc7f
   2a998:	movt	r2, #4
   2a99c:	mov	r0, r4
   2a9a0:	mov	r3, r6
   2a9a4:	bl	2a894 <__flatcc_fb_clear_parser@@Base+0x114c>
   2a9a8:	movw	r2, #56474	; 0xdc9a
   2a9ac:	movt	r2, #4
   2a9b0:	mov	r0, r4
   2a9b4:	mov	r1, #19
   2a9b8:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2a9bc:	cmp	r0, #0
   2a9c0:	beq	2a9ec <__flatcc_fb_clear_parser@@Base+0x12a4>
   2a9c4:	mov	r0, r4
   2a9c8:	mov	r1, r5
   2a9cc:	bl	2a708 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2a9d0:	movw	r2, #56513	; 0xdcc1
   2a9d4:	movt	r2, #4
   2a9d8:	mov	r0, r4
   2a9dc:	mov	r1, #59	; 0x3b
   2a9e0:	sub	sp, fp, #16
   2a9e4:	pop	{r4, r5, r6, r7, fp, lr}
   2a9e8:	b	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2a9ec:	mov	r0, r4
   2a9f0:	mov	r1, #59	; 0x3b
   2a9f4:	sub	sp, fp, #16
   2a9f8:	pop	{r4, r5, r6, r7, fp, lr}
   2a9fc:	b	2a6c4 <__flatcc_fb_clear_parser@@Base+0xf7c>
   2aa00:	push	{r4, r5, r6, r7, fp, lr}
   2aa04:	add	fp, sp, #16
   2aa08:	sub	sp, sp, #8
   2aa0c:	mov	r5, r1
   2aa10:	mov	r4, r0
   2aa14:	ldrh	r0, [r1, #8]
   2aa18:	cmp	r0, #0
   2aa1c:	beq	2aa40 <__flatcc_fb_clear_parser@@Base+0x12f8>
   2aa20:	ldr	r1, [r4, #40]	; 0x28
   2aa24:	ldrd	r6, [r5]
   2aa28:	str	r7, [sp]
   2aa2c:	movw	r2, #56541	; 0xdcdd
   2aa30:	movt	r2, #4
   2aa34:	mov	r0, r4
   2aa38:	mov	r3, r6
   2aa3c:	bl	2a894 <__flatcc_fb_clear_parser@@Base+0x114c>
   2aa40:	movw	r2, #56569	; 0xdcf9
   2aa44:	movt	r2, #4
   2aa48:	mov	r0, r4
   2aa4c:	mov	r1, #19
   2aa50:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2aa54:	cmp	r0, #0
   2aa58:	beq	2aa9c <__flatcc_fb_clear_parser@@Base+0x1354>
   2aa5c:	ldr	r6, [r4, #40]	; 0x28
   2aa60:	mov	r0, r4
   2aa64:	mov	r1, r5
   2aa68:	bl	2a708 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2aa6c:	ldr	r0, [r5]
   2aa70:	cmp	r0, #0
   2aa74:	ldrne	r0, [r5, #4]
   2aa78:	cmpne	r0, #4
   2aa7c:	bne	2aab0 <__flatcc_fb_clear_parser@@Base+0x1368>
   2aa80:	movw	r2, #56646	; 0xdd46
   2aa84:	movt	r2, #4
   2aa88:	mov	r0, r4
   2aa8c:	mov	r1, #59	; 0x3b
   2aa90:	sub	sp, fp, #16
   2aa94:	pop	{r4, r5, r6, r7, fp, lr}
   2aa98:	b	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2aa9c:	mov	r0, r4
   2aaa0:	mov	r1, #59	; 0x3b
   2aaa4:	sub	sp, fp, #16
   2aaa8:	pop	{r4, r5, r6, r7, fp, lr}
   2aaac:	b	2a6c4 <__flatcc_fb_clear_parser@@Base+0xf7c>
   2aab0:	mov	r0, #1
   2aab4:	strh	r0, [r5, #8]
   2aab8:	movw	r2, #56609	; 0xdd21
   2aabc:	movt	r2, #4
   2aac0:	mov	r0, r4
   2aac4:	mov	r1, r6
   2aac8:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2aacc:	b	2aa80 <__flatcc_fb_clear_parser@@Base+0x1338>
   2aad0:	push	{r4, r5, r6, sl, fp, lr}
   2aad4:	add	fp, sp, #16
   2aad8:	mov	r6, r1
   2aadc:	mov	r5, r0
   2aae0:	ldr	r4, [r0, #40]	; 0x28
   2aae4:	ldr	r0, [r1]
   2aae8:	cmp	r0, #0
   2aaec:	beq	2ab04 <__flatcc_fb_clear_parser@@Base+0x13bc>
   2aaf0:	movw	r2, #56675	; 0xdd63
   2aaf4:	movt	r2, #4
   2aaf8:	mov	r0, r5
   2aafc:	mov	r1, r4
   2ab00:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2ab04:	mov	r0, r5
   2ab08:	mov	r1, r6
   2ab0c:	bl	2b214 <__flatcc_fb_clear_parser@@Base+0x1acc>
   2ab10:	ldr	r0, [r5, #544]	; 0x220
   2ab14:	str	r0, [r6, #8]
   2ab18:	movw	r2, #56697	; 0xdd79
   2ab1c:	movt	r2, #4
   2ab20:	mov	r0, r5
   2ab24:	mov	r1, #59	; 0x3b
   2ab28:	mov	r3, r4
   2ab2c:	pop	{r4, r5, r6, sl, fp, lr}
   2ab30:	b	2b2a8 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2ab34:	push	{r4, r5, r6, sl, fp, lr}
   2ab38:	add	fp, sp, #16
   2ab3c:	sub	sp, sp, #8
   2ab40:	mov	r6, r1
   2ab44:	mov	r4, r0
   2ab48:	ldr	r5, [r0, #40]	; 0x28
   2ab4c:	movw	r2, #56734	; 0xdd9e
   2ab50:	movt	r2, #4
   2ab54:	mov	r1, #19
   2ab58:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2ab5c:	cmp	r0, #0
   2ab60:	beq	2ab9c <__flatcc_fb_clear_parser@@Base+0x1454>
   2ab64:	add	r1, r6, #8
   2ab68:	mov	r0, r4
   2ab6c:	bl	2a708 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2ab70:	ldr	r0, [r6, #12]
   2ab74:	cmp	r0, #0
   2ab78:	bne	2ab9c <__flatcc_fb_clear_parser@@Base+0x1454>
   2ab7c:	mov	r0, #0
   2ab80:	str	r0, [sp]
   2ab84:	movw	r2, #56768	; 0xddc0
   2ab88:	movt	r2, #4
   2ab8c:	mov	r0, r4
   2ab90:	mov	r1, r5
   2ab94:	mov	r3, #0
   2ab98:	bl	2a894 <__flatcc_fb_clear_parser@@Base+0x114c>
   2ab9c:	movw	r2, #56799	; 0xdddf
   2aba0:	movt	r2, #4
   2aba4:	mov	r0, r4
   2aba8:	mov	r1, #59	; 0x3b
   2abac:	sub	sp, fp, #16
   2abb0:	pop	{r4, r5, r6, sl, fp, lr}
   2abb4:	b	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2abb8:	push	{r4, sl, fp, lr}
   2abbc:	add	fp, sp, #8
   2abc0:	mov	r4, r0
   2abc4:	mov	r1, #32
   2abc8:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2abcc:	ldr	r1, [r4, #356]	; 0x164
   2abd0:	str	r1, [r0]
   2abd4:	str	r0, [r4, #356]	; 0x164
   2abd8:	pop	{r4, sl, fp, pc}
   2abdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2abe0:	add	fp, sp, #24
   2abe4:	mov	r5, r2
   2abe8:	mov	r6, r1
   2abec:	mov	r4, r0
   2abf0:	movw	r2, #56822	; 0xddf6
   2abf4:	movt	r2, #4
   2abf8:	mov	r1, #9
   2abfc:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2ac00:	cmp	r0, #0
   2ac04:	beq	2ac88 <__flatcc_fb_clear_parser@@Base+0x1540>
   2ac08:	str	r0, [r6, #4]
   2ac0c:	mov	r0, r4
   2ac10:	bl	2b2f8 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2ac14:	str	r0, [r6, #28]
   2ac18:	movw	r2, #56857	; 0xde19
   2ac1c:	movt	r2, #4
   2ac20:	mov	r0, r4
   2ac24:	mov	r1, #123	; 0x7b
   2ac28:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2ac2c:	cmp	r0, #0
   2ac30:	beq	2ac88 <__flatcc_fb_clear_parser@@Base+0x1540>
   2ac34:	add	r6, r6, #20
   2ac38:	ldr	r8, [r4, #40]	; 0x28
   2ac3c:	movw	r7, #64569	; 0xfc39
   2ac40:	movt	r7, #65535	; 0xffff
   2ac44:	ldr	r0, [r4, #40]	; 0x28
   2ac48:	ldr	r0, [r0, #16]
   2ac4c:	cmp	r0, #125	; 0x7d
   2ac50:	beq	2ac98 <__flatcc_fb_clear_parser@@Base+0x1550>
   2ac54:	mov	r0, r4
   2ac58:	mov	r1, r6
   2ac5c:	bl	2b4ec <__flatcc_fb_clear_parser@@Base+0x1da4>
   2ac60:	mov	r1, r0
   2ac64:	mov	r0, r4
   2ac68:	cmp	r5, r7
   2ac6c:	bne	2ac78 <__flatcc_fb_clear_parser@@Base+0x1530>
   2ac70:	bl	2b3f8 <__flatcc_fb_clear_parser@@Base+0x1cb0>
   2ac74:	b	2ac7c <__flatcc_fb_clear_parser@@Base+0x1534>
   2ac78:	bl	2b53c <__flatcc_fb_clear_parser@@Base+0x1df4>
   2ac7c:	ldr	r0, [r4, #108]	; 0x6c
   2ac80:	cmp	r0, #9
   2ac84:	ble	2ac44 <__flatcc_fb_clear_parser@@Base+0x14fc>
   2ac88:	mov	r0, r4
   2ac8c:	mov	r1, #125	; 0x7d
   2ac90:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ac94:	b	2a6c4 <__flatcc_fb_clear_parser@@Base+0xf7c>
   2ac98:	mov	r0, r4
   2ac9c:	mov	r1, #125	; 0x7d
   2aca0:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2aca4:	cmp	r8, #0
   2aca8:	beq	2accc <__flatcc_fb_clear_parser@@Base+0x1584>
   2acac:	cmp	r0, #0
   2acb0:	bne	2accc <__flatcc_fb_clear_parser@@Base+0x1584>
   2acb4:	ldr	r1, [r4, #40]	; 0x28
   2acb8:	movw	r2, #56882	; 0xde32
   2acbc:	movt	r2, #4
   2acc0:	mov	r0, r4
   2acc4:	mov	r3, r8
   2acc8:	bl	29884 <__flatcc_fb_clear_parser@@Base+0x13c>
   2accc:	mov	r0, r6
   2acd0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2acd4:	b	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2acd8:	push	{r4, r5, fp, lr}
   2acdc:	add	fp, sp, #8
   2ace0:	mov	r4, r0
   2ace4:	mov	r1, #128	; 0x80
   2ace8:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2acec:	mov	r5, r0
   2acf0:	ldr	r0, [r4, #392]	; 0x188
   2acf4:	mov	r1, #1
   2acf8:	strh	r1, [r5, #8]
   2acfc:	str	r0, [r5]
   2ad00:	str	r5, [r4, #392]	; 0x188
   2ad04:	ldr	r0, [r4, #544]	; 0x220
   2ad08:	str	r0, [r5, #12]
   2ad0c:	add	r0, r4, #36	; 0x24
   2ad10:	bl	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2ad14:	ldr	r0, [r4, #36]	; 0x24
   2ad18:	str	r0, [r5, #32]
   2ad1c:	mov	r0, #0
   2ad20:	str	r0, [r4, #36]	; 0x24
   2ad24:	mov	r0, r5
   2ad28:	pop	{r4, r5, fp, pc}
   2ad2c:	push	{r4, r5, r6, sl, fp, lr}
   2ad30:	add	fp, sp, #16
   2ad34:	mov	r4, r0
   2ad38:	mov	r1, #128	; 0x80
   2ad3c:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2ad40:	mov	r5, r0
   2ad44:	ldr	r0, [r4, #392]	; 0x188
   2ad48:	mov	r6, #0
   2ad4c:	strh	r6, [r5, #8]
   2ad50:	str	r0, [r5]
   2ad54:	str	r5, [r4, #392]	; 0x188
   2ad58:	ldr	r0, [r4, #544]	; 0x220
   2ad5c:	str	r0, [r5, #12]
   2ad60:	add	r0, r4, #36	; 0x24
   2ad64:	bl	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2ad68:	ldr	r0, [r4, #36]	; 0x24
   2ad6c:	str	r0, [r5, #32]
   2ad70:	str	r6, [r4, #36]	; 0x24
   2ad74:	mov	r0, r5
   2ad78:	pop	{r4, r5, r6, sl, fp, pc}
   2ad7c:	push	{r4, r5, fp, lr}
   2ad80:	add	fp, sp, #8
   2ad84:	mov	r4, r0
   2ad88:	mov	r1, #128	; 0x80
   2ad8c:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2ad90:	mov	r5, r0
   2ad94:	ldr	r0, [r4, #392]	; 0x188
   2ad98:	mov	r1, #2
   2ad9c:	strh	r1, [r5, #8]
   2ada0:	str	r0, [r5]
   2ada4:	str	r5, [r4, #392]	; 0x188
   2ada8:	ldr	r0, [r4, #544]	; 0x220
   2adac:	str	r0, [r5, #12]
   2adb0:	add	r0, r4, #36	; 0x24
   2adb4:	bl	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2adb8:	ldr	r0, [r4, #36]	; 0x24
   2adbc:	str	r0, [r5, #32]
   2adc0:	mov	r0, #0
   2adc4:	str	r0, [r4, #36]	; 0x24
   2adc8:	mov	r0, r5
   2adcc:	pop	{r4, r5, fp, pc}
   2add0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2add4:	add	fp, sp, #28
   2add8:	sub	sp, sp, #4
   2addc:	mov	r5, r1
   2ade0:	mov	r4, r0
   2ade4:	movw	r2, #57750	; 0xe196
   2ade8:	movt	r2, #4
   2adec:	mov	r1, #9
   2adf0:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2adf4:	str	r0, [r5, #4]
   2adf8:	cmp	r0, #0
   2adfc:	beq	2af4c <__flatcc_fb_clear_parser@@Base+0x1804>
   2ae00:	mov	r0, r4
   2ae04:	mov	r1, #58	; 0x3a
   2ae08:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2ae0c:	cmp	r0, #0
   2ae10:	beq	2ae64 <__flatcc_fb_clear_parser@@Base+0x171c>
   2ae14:	add	r1, r5, #40	; 0x28
   2ae18:	mov	r0, r4
   2ae1c:	bl	2bce0 <__flatcc_fb_clear_parser@@Base+0x2598>
   2ae20:	ldr	r1, [r5, #40]	; 0x28
   2ae24:	ldrh	r0, [r5, #48]	; 0x30
   2ae28:	cmp	r0, #8
   2ae2c:	bne	2ae54 <__flatcc_fb_clear_parser@@Base+0x170c>
   2ae30:	ldr	r0, [r1, #16]
   2ae34:	add	r0, r0, #996	; 0x3e4
   2ae38:	cmp	r0, #21
   2ae3c:	bhi	2ae64 <__flatcc_fb_clear_parser@@Base+0x171c>
   2ae40:	mov	r2, #1
   2ae44:	movw	r3, #2051	; 0x803
   2ae48:	movt	r3, #32
   2ae4c:	tst	r3, r2, lsl r0
   2ae50:	beq	2ae64 <__flatcc_fb_clear_parser@@Base+0x171c>
   2ae54:	movw	r2, #57787	; 0xe1bb
   2ae58:	movt	r2, #4
   2ae5c:	mov	r0, r4
   2ae60:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2ae64:	mov	r0, r4
   2ae68:	bl	2b2f8 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2ae6c:	str	r0, [r5, #28]
   2ae70:	movw	r2, #57810	; 0xe1d2
   2ae74:	movt	r2, #4
   2ae78:	mov	r0, r4
   2ae7c:	mov	r1, #123	; 0x7b
   2ae80:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2ae84:	cmp	r0, #0
   2ae88:	beq	2af4c <__flatcc_fb_clear_parser@@Base+0x1804>
   2ae8c:	mov	r9, r0
   2ae90:	movw	r2, #57840	; 0xe1f0
   2ae94:	movt	r2, #4
   2ae98:	mov	r0, r4
   2ae9c:	mov	r1, #9
   2aea0:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2aea4:	cmp	r0, #0
   2aea8:	beq	2af4c <__flatcc_fb_clear_parser@@Base+0x1804>
   2aeac:	mov	r6, r0
   2aeb0:	add	r5, r5, #20
   2aeb4:	mov	r8, #0
   2aeb8:	movw	sl, #57840	; 0xe1f0
   2aebc:	movt	sl, #4
   2aec0:	ldr	r0, [r4, #108]	; 0x6c
   2aec4:	cmp	r0, #9
   2aec8:	bgt	2af4c <__flatcc_fb_clear_parser@@Base+0x1804>
   2aecc:	mov	r0, r4
   2aed0:	mov	r1, r5
   2aed4:	bl	2b4ec <__flatcc_fb_clear_parser@@Base+0x1da4>
   2aed8:	mov	r7, r0
   2aedc:	str	r6, [r0, #4]
   2aee0:	mov	r0, r4
   2aee4:	mov	r1, #61	; 0x3d
   2aee8:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2aeec:	cmp	r0, #0
   2aef0:	beq	2af0c <__flatcc_fb_clear_parser@@Base+0x17c4>
   2aef4:	add	r1, r7, #48	; 0x30
   2aef8:	mov	r0, r4
   2aefc:	mov	r2, #0
   2af00:	movw	r3, #57867	; 0xe20b
   2af04:	movt	r3, #4
   2af08:	bl	2b614 <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2af0c:	mov	r0, r4
   2af10:	mov	r1, #44	; 0x2c
   2af14:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2af18:	cmp	r0, #0
   2af1c:	ldrne	r0, [r4, #40]	; 0x28
   2af20:	ldrne	r0, [r0, #16]
   2af24:	cmpne	r0, #125	; 0x7d
   2af28:	beq	2af60 <__flatcc_fb_clear_parser@@Base+0x1818>
   2af2c:	str	r8, [r4, #36]	; 0x24
   2af30:	mov	r0, r4
   2af34:	mov	r1, #9
   2af38:	mov	r2, sl
   2af3c:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2af40:	mov	r6, r0
   2af44:	cmp	r0, #0
   2af48:	bne	2aec0 <__flatcc_fb_clear_parser@@Base+0x1778>
   2af4c:	mov	r0, r4
   2af50:	mov	r1, #125	; 0x7d
   2af54:	sub	sp, fp, #28
   2af58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2af5c:	b	2a6c4 <__flatcc_fb_clear_parser@@Base+0xf7c>
   2af60:	movw	r2, #57894	; 0xe226
   2af64:	movt	r2, #4
   2af68:	mov	r0, r4
   2af6c:	mov	r1, #125	; 0x7d
   2af70:	mov	r3, r9
   2af74:	bl	2b2a8 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2af78:	mov	r0, r5
   2af7c:	sub	sp, fp, #28
   2af80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2af84:	b	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2af88:	push	{r4, r5, fp, lr}
   2af8c:	add	fp, sp, #8
   2af90:	mov	r4, r0
   2af94:	mov	r1, #128	; 0x80
   2af98:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2af9c:	mov	r5, r0
   2afa0:	ldr	r0, [r4, #392]	; 0x188
   2afa4:	mov	r1, #3
   2afa8:	strh	r1, [r5, #8]
   2afac:	str	r0, [r5]
   2afb0:	str	r5, [r4, #392]	; 0x188
   2afb4:	ldr	r0, [r4, #544]	; 0x220
   2afb8:	str	r0, [r5, #12]
   2afbc:	add	r0, r4, #36	; 0x24
   2afc0:	bl	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2afc4:	ldr	r0, [r4, #36]	; 0x24
   2afc8:	str	r0, [r5, #32]
   2afcc:	mov	r0, #0
   2afd0:	str	r0, [r4, #36]	; 0x24
   2afd4:	mov	r0, r5
   2afd8:	pop	{r4, r5, fp, pc}
   2afdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2afe0:	add	fp, sp, #28
   2afe4:	sub	sp, sp, #4
   2afe8:	mov	r6, r1
   2afec:	mov	r4, r0
   2aff0:	movw	r2, #57928	; 0xe248
   2aff4:	movt	r2, #4
   2aff8:	mov	r1, #9
   2affc:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b000:	str	r0, [r6, #4]
   2b004:	cmp	r0, #0
   2b008:	beq	2b174 <__flatcc_fb_clear_parser@@Base+0x1a2c>
   2b00c:	mov	r0, r4
   2b010:	bl	2b2f8 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2b014:	str	r0, [r6, #28]
   2b018:	movw	r2, #57966	; 0xe26e
   2b01c:	movt	r2, #4
   2b020:	mov	r0, r4
   2b024:	mov	r1, #123	; 0x7b
   2b028:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b02c:	cmp	r0, #0
   2b030:	beq	2b174 <__flatcc_fb_clear_parser@@Base+0x1a2c>
   2b034:	mov	r5, r0
   2b038:	ldr	r7, [r4, #40]	; 0x28
   2b03c:	ldr	r0, [r7, #16]
   2b040:	cmp	r0, #9
   2b044:	bne	2b160 <__flatcc_fb_clear_parser@@Base+0x1a18>
   2b048:	add	r6, r6, #20
   2b04c:	mov	sl, sp
   2b050:	ldr	r0, [r4, #108]	; 0x6c
   2b054:	cmp	r0, #9
   2b058:	bgt	2b174 <__flatcc_fb_clear_parser@@Base+0x1a2c>
   2b05c:	mov	r0, r4
   2b060:	mov	r1, r6
   2b064:	bl	2b4ec <__flatcc_fb_clear_parser@@Base+0x1da4>
   2b068:	mov	r9, r0
   2b06c:	mov	r0, r4
   2b070:	mov	r1, sl
   2b074:	bl	2b214 <__flatcc_fb_clear_parser@@Base+0x1acc>
   2b078:	ldr	r0, [sp]
   2b07c:	mov	r1, #12
   2b080:	strh	r1, [r9, #24]
   2b084:	str	r0, [r9, #16]
   2b088:	ldr	r0, [sp]
   2b08c:	ldr	r1, [r0]
   2b090:	cmp	r1, #0
   2b094:	beq	2b0ac <__flatcc_fb_clear_parser@@Base+0x1964>
   2b098:	mov	r0, r1
   2b09c:	ldr	r1, [r1]
   2b0a0:	cmp	r1, #0
   2b0a4:	bne	2b098 <__flatcc_fb_clear_parser@@Base+0x1950>
   2b0a8:	str	r0, [sp]
   2b0ac:	ldr	r0, [r0, #4]
   2b0b0:	str	r0, [r9, #4]
   2b0b4:	mov	r0, r4
   2b0b8:	mov	r1, #58	; 0x3a
   2b0bc:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b0c0:	cmp	r0, #0
   2b0c4:	beq	2b0fc <__flatcc_fb_clear_parser@@Base+0x19b4>
   2b0c8:	add	r8, r9, #16
   2b0cc:	ldr	r0, [r8]
   2b0d0:	ldr	r0, [r0]
   2b0d4:	cmp	r0, #0
   2b0d8:	beq	2b0f0 <__flatcc_fb_clear_parser@@Base+0x19a8>
   2b0dc:	mov	r0, r4
   2b0e0:	mov	r1, r7
   2b0e4:	movw	r2, #58025	; 0xe2a9
   2b0e8:	movt	r2, #4
   2b0ec:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b0f0:	mov	r0, r4
   2b0f4:	mov	r1, r8
   2b0f8:	bl	2bce0 <__flatcc_fb_clear_parser@@Base+0x2598>
   2b0fc:	mov	r0, r4
   2b100:	mov	r1, #61	; 0x3d
   2b104:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b108:	cmp	r0, #0
   2b10c:	beq	2b128 <__flatcc_fb_clear_parser@@Base+0x19e0>
   2b110:	add	r1, r9, #48	; 0x30
   2b114:	mov	r0, r4
   2b118:	mov	r2, #0
   2b11c:	movw	r3, #57867	; 0xe20b
   2b120:	movt	r3, #4
   2b124:	bl	2b614 <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2b128:	mov	r0, r4
   2b12c:	mov	r1, #44	; 0x2c
   2b130:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b134:	cmp	r0, #0
   2b138:	ldrne	r0, [r4, #40]	; 0x28
   2b13c:	ldrne	r0, [r0, #16]
   2b140:	cmpne	r0, #125	; 0x7d
   2b144:	beq	2b184 <__flatcc_fb_clear_parser@@Base+0x1a3c>
   2b148:	mov	r0, #0
   2b14c:	str	r0, [r4, #36]	; 0x24
   2b150:	ldr	r7, [r4, #40]	; 0x28
   2b154:	ldr	r0, [r7, #16]
   2b158:	cmp	r0, #9
   2b15c:	beq	2b050 <__flatcc_fb_clear_parser@@Base+0x1908>
   2b160:	movw	r2, #57997	; 0xe28d
   2b164:	movt	r2, #4
   2b168:	mov	r0, r4
   2b16c:	mov	r1, r7
   2b170:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b174:	mov	r0, r4
   2b178:	bl	2be80 <__flatcc_fb_clear_parser@@Base+0x2738>
   2b17c:	sub	sp, fp, #28
   2b180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b184:	movw	r2, #58082	; 0xe2e2
   2b188:	movt	r2, #4
   2b18c:	mov	r0, r4
   2b190:	mov	r1, #125	; 0x7d
   2b194:	mov	r3, r5
   2b198:	bl	2b2a8 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2b19c:	mov	r0, r6
   2b1a0:	bl	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2b1a4:	mov	r0, r4
   2b1a8:	mov	r1, r6
   2b1ac:	bl	2b4ec <__flatcc_fb_clear_parser@@Base+0x1da4>
   2b1b0:	add	r1, r4, #68	; 0x44
   2b1b4:	str	r1, [r0, #4]
   2b1b8:	sub	sp, fp, #28
   2b1bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b1c0:	push	{r4, r5, fp, lr}
   2b1c4:	add	fp, sp, #8
   2b1c8:	mov	r4, r0
   2b1cc:	mov	r1, #128	; 0x80
   2b1d0:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2b1d4:	mov	r5, r0
   2b1d8:	ldr	r0, [r4, #392]	; 0x188
   2b1dc:	mov	r1, #4
   2b1e0:	strh	r1, [r5, #8]
   2b1e4:	str	r0, [r5]
   2b1e8:	str	r5, [r4, #392]	; 0x188
   2b1ec:	ldr	r0, [r4, #544]	; 0x220
   2b1f0:	str	r0, [r5, #12]
   2b1f4:	add	r0, r4, #36	; 0x24
   2b1f8:	bl	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2b1fc:	ldr	r0, [r4, #36]	; 0x24
   2b200:	str	r0, [r5, #32]
   2b204:	mov	r0, #0
   2b208:	str	r0, [r4, #36]	; 0x24
   2b20c:	mov	r0, r5
   2b210:	pop	{r4, r5, fp, pc}
   2b214:	push	{r4, r5, r6, sl, fp, lr}
   2b218:	add	fp, sp, #16
   2b21c:	mov	r5, r1
   2b220:	mov	r4, r0
   2b224:	ldr	r1, [r0, #40]	; 0x28
   2b228:	bl	2b2dc <__flatcc_fb_clear_parser@@Base+0x1b94>
   2b22c:	str	r0, [r5]
   2b230:	mov	r0, r4
   2b234:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2b238:	ldr	r6, [r5]
   2b23c:	mov	r0, r4
   2b240:	mov	r1, #46	; 0x2e
   2b244:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b248:	cmp	r0, #0
   2b24c:	popeq	{r4, r5, r6, sl, fp, pc}
   2b250:	ldr	r1, [r4, #40]	; 0x28
   2b254:	ldr	r0, [r1, #16]
   2b258:	cmp	r0, #9
   2b25c:	bne	2b294 <__flatcc_fb_clear_parser@@Base+0x1b4c>
   2b260:	mov	r0, r4
   2b264:	bl	2b2dc <__flatcc_fb_clear_parser@@Base+0x1b94>
   2b268:	mov	r5, r0
   2b26c:	str	r0, [r6]
   2b270:	mov	r0, r4
   2b274:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2b278:	mov	r0, r4
   2b27c:	mov	r1, #46	; 0x2e
   2b280:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b284:	cmp	r0, #0
   2b288:	mov	r6, r5
   2b28c:	bne	2b250 <__flatcc_fb_clear_parser@@Base+0x1b08>
   2b290:	pop	{r4, r5, r6, sl, fp, pc}
   2b294:	movw	r2, #56410	; 0xdc5a
   2b298:	movt	r2, #4
   2b29c:	mov	r0, r4
   2b2a0:	pop	{r4, r5, r6, sl, fp, lr}
   2b2a4:	b	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b2a8:	push	{fp, lr}
   2b2ac:	mov	fp, sp
   2b2b0:	mov	ip, r1
   2b2b4:	mov	r1, #0
   2b2b8:	str	r1, [r0, #36]	; 0x24
   2b2bc:	ldr	r1, [r0, #40]	; 0x28
   2b2c0:	ldr	lr, [r1, #16]
   2b2c4:	cmp	lr, ip
   2b2c8:	bne	2b2d4 <__flatcc_fb_clear_parser@@Base+0x1b8c>
   2b2cc:	pop	{fp, lr}
   2b2d0:	b	2965c <__flatcc_fb_parse@@Base+0x105c>
   2b2d4:	pop	{fp, lr}
   2b2d8:	b	29884 <__flatcc_fb_clear_parser@@Base+0x13c>
   2b2dc:	push	{r4, sl, fp, lr}
   2b2e0:	add	fp, sp, #8
   2b2e4:	mov	r4, r1
   2b2e8:	mov	r1, #12
   2b2ec:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2b2f0:	str	r4, [r0, #4]
   2b2f4:	pop	{r4, sl, fp, pc}
   2b2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b2fc:	add	fp, sp, #28
   2b300:	sub	sp, sp, #4
   2b304:	mov	r4, r0
   2b308:	mov	r5, #0
   2b30c:	str	r5, [sp]
   2b310:	mov	r1, #40	; 0x28
   2b314:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b318:	cmp	r0, #0
   2b31c:	beq	2b3ec <__flatcc_fb_clear_parser@@Base+0x1ca4>
   2b320:	mov	r9, r0
   2b324:	mov	r0, r4
   2b328:	mov	r1, #9
   2b32c:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b330:	cmp	r0, #0
   2b334:	beq	2b3c8 <__flatcc_fb_clear_parser@@Base+0x1c80>
   2b338:	mov	r7, r0
   2b33c:	mov	r6, sp
   2b340:	movw	sl, #56955	; 0xde7b
   2b344:	movt	sl, #4
   2b348:	movw	r8, #56923	; 0xde5b
   2b34c:	movt	r8, #4
   2b350:	mov	r0, r4
   2b354:	mov	r1, r6
   2b358:	bl	2b5f0 <__flatcc_fb_clear_parser@@Base+0x1ea8>
   2b35c:	ldr	r5, [sp]
   2b360:	str	r7, [r5, #4]
   2b364:	mov	r0, r4
   2b368:	mov	r1, #58	; 0x3a
   2b36c:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b370:	cmp	r0, #0
   2b374:	beq	2b38c <__flatcc_fb_clear_parser@@Base+0x1c44>
   2b378:	add	r1, r5, #8
   2b37c:	mov	r0, r4
   2b380:	mov	r2, #1
   2b384:	mov	r3, r8
   2b388:	bl	2b614 <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2b38c:	ldr	r0, [r4, #108]	; 0x6c
   2b390:	cmp	r0, #9
   2b394:	bgt	2b3ec <__flatcc_fb_clear_parser@@Base+0x1ca4>
   2b398:	mov	r0, r4
   2b39c:	mov	r1, #44	; 0x2c
   2b3a0:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b3a4:	cmp	r0, #0
   2b3a8:	beq	2b3c8 <__flatcc_fb_clear_parser@@Base+0x1c80>
   2b3ac:	mov	r0, r4
   2b3b0:	mov	r1, #9
   2b3b4:	mov	r2, sl
   2b3b8:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b3bc:	mov	r7, r0
   2b3c0:	cmp	r0, #0
   2b3c4:	bne	2b350 <__flatcc_fb_clear_parser@@Base+0x1c08>
   2b3c8:	movw	r2, #57000	; 0xdea8
   2b3cc:	movt	r2, #4
   2b3d0:	mov	r0, r4
   2b3d4:	mov	r1, #41	; 0x29
   2b3d8:	mov	r3, r9
   2b3dc:	bl	2b2a8 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2b3e0:	mov	r0, sp
   2b3e4:	bl	2b800 <__flatcc_fb_clear_parser@@Base+0x20b8>
   2b3e8:	ldr	r5, [sp]
   2b3ec:	mov	r0, r5
   2b3f0:	sub	sp, fp, #28
   2b3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b3f8:	push	{r4, r5, fp, lr}
   2b3fc:	add	fp, sp, #8
   2b400:	mov	r5, r1
   2b404:	mov	r4, r0
   2b408:	movw	r2, #57240	; 0xdf98
   2b40c:	movt	r2, #4
   2b410:	mov	r1, #9
   2b414:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b418:	cmp	r0, #0
   2b41c:	beq	2b4b8 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2b420:	str	r0, [r5, #4]
   2b424:	movw	r2, #57267	; 0xdfb3
   2b428:	movt	r2, #4
   2b42c:	mov	r0, r4
   2b430:	mov	r1, #40	; 0x28
   2b434:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b438:	cmp	r0, #0
   2b43c:	beq	2b4b8 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2b440:	add	r1, r5, #32
   2b444:	mov	r0, r4
   2b448:	bl	2bce0 <__flatcc_fb_clear_parser@@Base+0x2598>
   2b44c:	movw	r2, #57304	; 0xdfd8
   2b450:	movt	r2, #4
   2b454:	mov	r0, r4
   2b458:	mov	r1, #41	; 0x29
   2b45c:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b460:	cmp	r0, #0
   2b464:	beq	2b4b8 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2b468:	movw	r2, #57343	; 0xdfff
   2b46c:	movt	r2, #4
   2b470:	mov	r0, r4
   2b474:	mov	r1, #58	; 0x3a
   2b478:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b47c:	cmp	r0, #0
   2b480:	beq	2b4b8 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2b484:	add	r1, r5, #16
   2b488:	mov	r0, r4
   2b48c:	bl	2bce0 <__flatcc_fb_clear_parser@@Base+0x2598>
   2b490:	mov	r0, r4
   2b494:	mov	r1, #61	; 0x3d
   2b498:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b49c:	cmp	r0, #0
   2b4a0:	beq	2b4c4 <__flatcc_fb_clear_parser@@Base+0x1d7c>
   2b4a4:	mov	r1, r0
   2b4a8:	movw	r2, #57394	; 0xe032
   2b4ac:	movt	r2, #4
   2b4b0:	mov	r0, r4
   2b4b4:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b4b8:	mov	r0, r4
   2b4bc:	pop	{r4, r5, fp, lr}
   2b4c0:	b	2be80 <__flatcc_fb_clear_parser@@Base+0x2738>
   2b4c4:	mov	r0, r4
   2b4c8:	bl	2b2f8 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2b4cc:	str	r0, [r5, #64]	; 0x40
   2b4d0:	movw	r2, #57432	; 0xe058
   2b4d4:	movt	r2, #4
   2b4d8:	mov	r0, r4
   2b4dc:	mov	r1, #59	; 0x3b
   2b4e0:	mov	r3, #0
   2b4e4:	pop	{r4, r5, fp, lr}
   2b4e8:	b	2b2a8 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2b4ec:	push	{r4, r5, r6, sl, fp, lr}
   2b4f0:	add	fp, sp, #16
   2b4f4:	mov	r4, r1
   2b4f8:	mov	r5, r0
   2b4fc:	mov	r1, #120	; 0x78
   2b500:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2b504:	mov	r6, r0
   2b508:	ldr	r0, [r4]
   2b50c:	mov	r1, #5
   2b510:	strh	r1, [r6, #8]
   2b514:	str	r0, [r6]
   2b518:	str	r6, [r4]
   2b51c:	add	r0, r5, #36	; 0x24
   2b520:	bl	2a628 <__flatcc_fb_clear_parser@@Base+0xee0>
   2b524:	ldr	r0, [r5, #36]	; 0x24
   2b528:	str	r0, [r6, #68]	; 0x44
   2b52c:	mov	r0, #0
   2b530:	str	r0, [r5, #36]	; 0x24
   2b534:	mov	r0, r6
   2b538:	pop	{r4, r5, r6, sl, fp, pc}
   2b53c:	push	{r4, r5, fp, lr}
   2b540:	add	fp, sp, #8
   2b544:	mov	r5, r1
   2b548:	mov	r4, r0
   2b54c:	movw	r2, #57614	; 0xe10e
   2b550:	movt	r2, #4
   2b554:	mov	r1, #9
   2b558:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b55c:	cmp	r0, #0
   2b560:	beq	2b5e4 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   2b564:	str	r0, [r5, #4]
   2b568:	movw	r2, #57640	; 0xe128
   2b56c:	movt	r2, #4
   2b570:	mov	r0, r4
   2b574:	mov	r1, #58	; 0x3a
   2b578:	bl	2a68c <__flatcc_fb_clear_parser@@Base+0xf44>
   2b57c:	cmp	r0, #0
   2b580:	beq	2b5e4 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   2b584:	add	r1, r5, #16
   2b588:	mov	r0, r4
   2b58c:	bl	2bce0 <__flatcc_fb_clear_parser@@Base+0x2598>
   2b590:	mov	r0, r4
   2b594:	mov	r1, #61	; 0x3d
   2b598:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b59c:	cmp	r0, #0
   2b5a0:	beq	2b5bc <__flatcc_fb_clear_parser@@Base+0x1e74>
   2b5a4:	add	r1, r5, #48	; 0x30
   2b5a8:	movw	r3, #57681	; 0xe151
   2b5ac:	movt	r3, #4
   2b5b0:	mov	r0, r4
   2b5b4:	mov	r2, #2
   2b5b8:	bl	2b614 <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2b5bc:	mov	r0, r4
   2b5c0:	bl	2b2f8 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2b5c4:	str	r0, [r5, #64]	; 0x40
   2b5c8:	movw	r2, #57716	; 0xe174
   2b5cc:	movt	r2, #4
   2b5d0:	mov	r0, r4
   2b5d4:	mov	r1, #59	; 0x3b
   2b5d8:	mov	r3, #0
   2b5dc:	pop	{r4, r5, fp, lr}
   2b5e0:	b	2b2a8 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2b5e4:	mov	r0, r4
   2b5e8:	pop	{r4, r5, fp, lr}
   2b5ec:	b	2be80 <__flatcc_fb_clear_parser@@Base+0x2738>
   2b5f0:	push	{r4, sl, fp, lr}
   2b5f4:	add	fp, sp, #8
   2b5f8:	mov	r4, r1
   2b5fc:	mov	r1, #24
   2b600:	bl	298a8 <__flatcc_fb_clear_parser@@Base+0x160>
   2b604:	ldr	r1, [r4]
   2b608:	str	r1, [r0]
   2b60c:	str	r0, [r4]
   2b610:	pop	{r4, sl, fp, pc}
   2b614:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b618:	add	fp, sp, #24
   2b61c:	mov	r8, r3
   2b620:	mov	r5, r2
   2b624:	mov	r6, r1
   2b628:	mov	r4, r0
   2b62c:	mov	r1, #45	; 0x2d
   2b630:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b634:	mov	r7, r0
   2b638:	ldr	r9, [r4, #40]	; 0x28
   2b63c:	ldr	r0, [r9, #16]
   2b640:	sub	r1, r0, #9
   2b644:	cmp	r1, #10
   2b648:	bhi	2b6b0 <__flatcc_fb_clear_parser@@Base+0x1f68>
   2b64c:	add	r0, pc, #0
   2b650:	ldr	pc, [r0, r1, lsl #2]
   2b654:	andeq	fp, r2, r0, lsl #13
   2b658:	ldrdeq	fp, [r2], -r8
   2b65c:	andeq	fp, r2, r0, lsl #14
   2b660:	andeq	fp, r2, r4, ror r7
   2b664:	andeq	fp, r2, r4, ror r7
   2b668:	andeq	fp, r2, r8, lsr #14
   2b66c:	andeq	fp, r2, r4, ror r7
   2b670:	andeq	fp, r2, r4, ror r7
   2b674:	andeq	fp, r2, r4, ror r7
   2b678:	andeq	fp, r2, r4, ror r7
   2b67c:	andeq	fp, r2, r0, asr r7
   2b680:	mov	r0, r4
   2b684:	mov	r1, r6
   2b688:	bl	2b214 <__flatcc_fb_clear_parser@@Base+0x1acc>
   2b68c:	mov	r0, #13
   2b690:	strh	r0, [r6, #8]
   2b694:	cmp	r7, #0
   2b698:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b69c:	mov	r0, #1
   2b6a0:	strh	r0, [r6, #8]
   2b6a4:	movw	r2, #57065	; 0xdee9
   2b6a8:	movt	r2, #4
   2b6ac:	b	2b7ec <__flatcc_fb_clear_parser@@Base+0x20a4>
   2b6b0:	cmn	r0, #988	; 0x3dc
   2b6b4:	beq	2b788 <__flatcc_fb_clear_parser@@Base+0x2040>
   2b6b8:	movw	r1, #64550	; 0xfc26
   2b6bc:	movt	r1, #65535	; 0xffff
   2b6c0:	cmp	r0, r1
   2b6c4:	bne	2b774 <__flatcc_fb_clear_parser@@Base+0x202c>
   2b6c8:	mov	r0, #6
   2b6cc:	strh	r0, [r6, #8]
   2b6d0:	mov	r0, #0
   2b6d4:	b	2b794 <__flatcc_fb_clear_parser@@Base+0x204c>
   2b6d8:	cmp	r7, #0
   2b6dc:	mov	r3, r7
   2b6e0:	movwne	r3, #1
   2b6e4:	mov	r0, r4
   2b6e8:	mov	r1, r9
   2b6ec:	mov	r2, r6
   2b6f0:	bl	2b8b8 <__flatcc_fb_clear_parser@@Base+0x2170>
   2b6f4:	cmp	r7, #0
   2b6f8:	bne	2b7a0 <__flatcc_fb_clear_parser@@Base+0x2058>
   2b6fc:	b	2b7c8 <__flatcc_fb_clear_parser@@Base+0x2080>
   2b700:	cmp	r7, #0
   2b704:	mov	r3, r7
   2b708:	movwne	r3, #1
   2b70c:	mov	r0, r4
   2b710:	mov	r1, r9
   2b714:	mov	r2, r6
   2b718:	bl	2b938 <__flatcc_fb_clear_parser@@Base+0x21f0>
   2b71c:	cmp	r7, #0
   2b720:	bne	2b7a0 <__flatcc_fb_clear_parser@@Base+0x2058>
   2b724:	b	2b7c8 <__flatcc_fb_clear_parser@@Base+0x2080>
   2b728:	cmp	r7, #0
   2b72c:	mov	r3, r7
   2b730:	movwne	r3, #1
   2b734:	mov	r0, r4
   2b738:	mov	r1, r9
   2b73c:	mov	r2, r6
   2b740:	bl	2b838 <__flatcc_fb_clear_parser@@Base+0x20f0>
   2b744:	cmp	r7, #0
   2b748:	bne	2b7a0 <__flatcc_fb_clear_parser@@Base+0x2058>
   2b74c:	b	2b7c8 <__flatcc_fb_clear_parser@@Base+0x2080>
   2b750:	mov	r0, r4
   2b754:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2b758:	mov	r0, r4
   2b75c:	mov	r1, r6
   2b760:	bl	2a708 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2b764:	tst	r5, #1
   2b768:	bne	2b7d4 <__flatcc_fb_clear_parser@@Base+0x208c>
   2b76c:	mov	r0, #1
   2b770:	strh	r0, [r6, #8]
   2b774:	mov	r0, r4
   2b778:	mov	r1, r9
   2b77c:	mov	r2, r8
   2b780:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b784:	b	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b788:	mov	r0, #6
   2b78c:	strh	r0, [r6, #8]
   2b790:	mov	r0, #1
   2b794:	strb	r0, [r6]
   2b798:	cmp	r7, #0
   2b79c:	beq	2b7c8 <__flatcc_fb_clear_parser@@Base+0x2080>
   2b7a0:	ldrh	r0, [r6, #8]
   2b7a4:	cmp	r0, #6
   2b7a8:	bne	2b7c8 <__flatcc_fb_clear_parser@@Base+0x2080>
   2b7ac:	mov	r0, #1
   2b7b0:	strh	r0, [r6, #8]
   2b7b4:	movw	r2, #57095	; 0xdf07
   2b7b8:	movt	r2, #4
   2b7bc:	mov	r0, r4
   2b7c0:	mov	r1, r9
   2b7c4:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b7c8:	mov	r0, r4
   2b7cc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b7d0:	b	2965c <__flatcc_fb_parse@@Base+0x105c>
   2b7d4:	cmp	r7, #0
   2b7d8:	beq	2b7fc <__flatcc_fb_clear_parser@@Base+0x20b4>
   2b7dc:	mov	r0, #1
   2b7e0:	strh	r0, [r6, #8]
   2b7e4:	movw	r2, #57031	; 0xdec7
   2b7e8:	movt	r2, #4
   2b7ec:	mov	r0, r4
   2b7f0:	mov	r1, r9
   2b7f4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b7f8:	b	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b7fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b800:	ldr	r1, [r0]
   2b804:	cmp	r1, #0
   2b808:	moveq	r2, #0
   2b80c:	streq	r2, [r0]
   2b810:	bxeq	lr
   2b814:	mov	r3, #0
   2b818:	mov	r2, r1
   2b81c:	ldr	r1, [r1]
   2b820:	str	r3, [r2]
   2b824:	cmp	r1, #0
   2b828:	mov	r3, r2
   2b82c:	bne	2b818 <__flatcc_fb_clear_parser@@Base+0x20d0>
   2b830:	str	r2, [r0]
   2b834:	bx	lr
   2b838:	push	{r4, r5, r6, r7, fp, lr}
   2b83c:	add	fp, sp, #16
   2b840:	sub	sp, sp, #8
   2b844:	mov	r5, r3
   2b848:	mov	r4, r2
   2b84c:	mov	r6, r1
   2b850:	mov	r7, r0
   2b854:	mov	r0, #5
   2b858:	strh	r0, [r2, #8]
   2b85c:	ldm	r1, {r0, r1}
   2b860:	add	r3, sp, #4
   2b864:	bl	2b9d8 <__flatcc_fb_clear_parser@@Base+0x2290>
   2b868:	ldr	r0, [sp, #4]
   2b86c:	cmp	r0, #0
   2b870:	beq	2b890 <__flatcc_fb_clear_parser@@Base+0x2148>
   2b874:	mov	r0, #1
   2b878:	strh	r0, [r4, #8]
   2b87c:	movw	r2, #57130	; 0xdf2a
   2b880:	movt	r2, #4
   2b884:	mov	r0, r7
   2b888:	mov	r1, r6
   2b88c:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b890:	cmp	r5, #0
   2b894:	beq	2b8b0 <__flatcc_fb_clear_parser@@Base+0x2168>
   2b898:	mov	r0, #4
   2b89c:	strh	r0, [r4, #8]
   2b8a0:	ldrd	r0, [r4]
   2b8a4:	rsbs	r0, r0, #0
   2b8a8:	rsc	r1, r1, #0
   2b8ac:	strd	r0, [r4]
   2b8b0:	sub	sp, fp, #16
   2b8b4:	pop	{r4, r5, r6, r7, fp, pc}
   2b8b8:	push	{r4, r5, r6, r7, fp, lr}
   2b8bc:	add	fp, sp, #16
   2b8c0:	sub	sp, sp, #8
   2b8c4:	mov	r5, r3
   2b8c8:	mov	r4, r2
   2b8cc:	mov	r6, r1
   2b8d0:	mov	r7, r0
   2b8d4:	mov	r0, #5
   2b8d8:	strh	r0, [r2, #8]
   2b8dc:	ldm	r1, {r0, r1}
   2b8e0:	add	r3, sp, #4
   2b8e4:	bl	2bb8c <__flatcc_fb_clear_parser@@Base+0x2444>
   2b8e8:	ldr	r0, [sp, #4]
   2b8ec:	cmp	r0, #0
   2b8f0:	beq	2b910 <__flatcc_fb_clear_parser@@Base+0x21c8>
   2b8f4:	mov	r0, #1
   2b8f8:	strh	r0, [r4, #8]
   2b8fc:	movw	r2, #57157	; 0xdf45
   2b900:	movt	r2, #4
   2b904:	mov	r0, r7
   2b908:	mov	r1, r6
   2b90c:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b910:	cmp	r5, #0
   2b914:	beq	2b930 <__flatcc_fb_clear_parser@@Base+0x21e8>
   2b918:	mov	r0, #4
   2b91c:	strh	r0, [r4, #8]
   2b920:	ldrd	r0, [r4]
   2b924:	rsbs	r0, r0, #0
   2b928:	rsc	r1, r1, #0
   2b92c:	strd	r0, [r4]
   2b930:	sub	sp, fp, #16
   2b934:	pop	{r4, r5, r6, r7, fp, pc}
   2b938:	push	{r4, r5, r6, r7, fp, lr}
   2b93c:	add	fp, sp, #16
   2b940:	sub	sp, sp, #8
   2b944:	mov	r7, r3
   2b948:	mov	r5, r2
   2b94c:	mov	r4, r1
   2b950:	mov	r6, r0
   2b954:	mov	r0, #3
   2b958:	strh	r0, [r2, #8]
   2b95c:	ldr	r0, [r1]
   2b960:	add	r1, sp, #4
   2b964:	bl	149f0 <strtod@plt>
   2b968:	vstr	d0, [r5]
   2b96c:	ldm	r4, {r0, r1}
   2b970:	add	r1, r0, r1
   2b974:	ldr	r2, [sp, #4]
   2b978:	cmp	r2, r1
   2b97c:	beq	2b994 <__flatcc_fb_clear_parser@@Base+0x224c>
   2b980:	mov	r0, #1
   2b984:	strh	r0, [r5, #8]
   2b988:	movw	r2, #57180	; 0xdf5c
   2b98c:	movt	r2, #4
   2b990:	b	2b9b0 <__flatcc_fb_clear_parser@@Base+0x2268>
   2b994:	ldrb	r0, [r0]
   2b998:	cmp	r0, #46	; 0x2e
   2b99c:	bne	2b9c4 <__flatcc_fb_clear_parser@@Base+0x227c>
   2b9a0:	mov	r0, #1
   2b9a4:	strh	r0, [r5, #8]
   2b9a8:	movw	r2, #57201	; 0xdf71
   2b9ac:	movt	r2, #4
   2b9b0:	mov	r0, r6
   2b9b4:	mov	r1, r4
   2b9b8:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2b9bc:	sub	sp, fp, #16
   2b9c0:	pop	{r4, r5, r6, r7, fp, pc}
   2b9c4:	cmp	r7, #0
   2b9c8:	vnegne.f64	d16, d0
   2b9cc:	vstrne	d16, [r5]
   2b9d0:	sub	sp, fp, #16
   2b9d4:	pop	{r4, r5, r6, r7, fp, pc}
   2b9d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b9dc:	add	fp, sp, #28
   2b9e0:	sub	sp, sp, #12
   2b9e4:	add	ip, sp, #8
   2b9e8:	cmp	r3, #0
   2b9ec:	movne	ip, r3
   2b9f0:	cmp	r1, #0
   2b9f4:	beq	2bae8 <__flatcc_fb_clear_parser@@Base+0x23a0>
   2b9f8:	add	lr, r0, r1
   2b9fc:	ldrb	sl, [r0]
   2ba00:	sub	r1, sl, #45	; 0x2d
   2ba04:	clz	r1, r1
   2ba08:	lsr	r5, r1, #5
   2ba0c:	add	r4, r0, r5
   2ba10:	sub	r1, lr, r4
   2ba14:	mvn	r6, #3
   2ba18:	cmp	r1, #2
   2ba1c:	blt	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2ba20:	ldrb	r1, [r4]
   2ba24:	cmp	r1, #48	; 0x30
   2ba28:	bne	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2ba2c:	ldrb	r1, [r4, #1]
   2ba30:	orr	r1, r1, #32
   2ba34:	cmp	r1, #120	; 0x78
   2ba38:	bne	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2ba3c:	add	r3, r4, #2
   2ba40:	sub	r1, lr, r3
   2ba44:	cmp	r1, #16
   2ba48:	mov	r1, lr
   2ba4c:	addgt	r1, r4, #18
   2ba50:	cmp	r3, r1
   2ba54:	beq	2bb10 <__flatcc_fb_clear_parser@@Base+0x23c8>
   2ba58:	str	r2, [sp, #4]
   2ba5c:	str	r5, [sp]
   2ba60:	rsb	r3, r5, #0
   2ba64:	sub	r0, r3, r0
   2ba68:	add	r7, r1, r0
   2ba6c:	mov	r0, #0
   2ba70:	mov	r6, #2
   2ba74:	mov	r5, #0
   2ba78:	mvn	r1, #86	; 0x56
   2ba7c:	adds	r8, r1, #39	; 0x27
   2ba80:	mvn	r1, #0
   2ba84:	adc	r2, r1, #0
   2ba88:	ldrb	r3, [r4, r6]
   2ba8c:	sub	r9, r3, #48	; 0x30
   2ba90:	uxtb	r1, r9
   2ba94:	cmp	r1, #10
   2ba98:	bcc	2bab8 <__flatcc_fb_clear_parser@@Base+0x2370>
   2ba9c:	orr	r3, r3, #32
   2baa0:	sub	r1, r3, #97	; 0x61
   2baa4:	uxtb	r1, r1
   2baa8:	cmp	r1, #5
   2baac:	mvn	r8, #86	; 0x56
   2bab0:	mvn	r2, #0
   2bab4:	bhi	2baf8 <__flatcc_fb_clear_parser@@Base+0x23b0>
   2bab8:	lsl	r1, r5, #4
   2babc:	orr	r1, r1, r0, lsr #28
   2bac0:	adds	r0, r8, r0, lsl #4
   2bac4:	adc	r1, r1, r2
   2bac8:	adds	r0, r0, r3
   2bacc:	adc	r5, r1, #0
   2bad0:	add	r6, r6, #1
   2bad4:	cmp	r7, r6
   2bad8:	bne	2ba78 <__flatcc_fb_clear_parser@@Base+0x2330>
   2badc:	add	r3, r4, r6
   2bae0:	mov	r7, #1
   2bae4:	b	2bb00 <__flatcc_fb_clear_parser@@Base+0x23b8>
   2bae8:	mvn	r6, #4
   2baec:	str	r6, [ip]
   2baf0:	sub	sp, fp, #28
   2baf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2baf8:	add	r3, r4, r6
   2bafc:	mov	r7, #0
   2bb00:	ldr	r8, [sp, #4]
   2bb04:	ldr	r9, [sp]
   2bb08:	cmp	r6, #2
   2bb0c:	bne	2bb20 <__flatcc_fb_clear_parser@@Base+0x23d8>
   2bb10:	mvn	r6, #3
   2bb14:	cmp	sl, #45	; 0x2d
   2bb18:	mvneq	r6, #2
   2bb1c:	b	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2bb20:	cmp	r3, lr
   2bb24:	beq	2bb80 <__flatcc_fb_clear_parser@@Base+0x2438>
   2bb28:	ldrb	r1, [r4, r6]
   2bb2c:	cmp	r7, #0
   2bb30:	beq	2bb68 <__flatcc_fb_clear_parser@@Base+0x2420>
   2bb34:	sub	r2, r1, #48	; 0x30
   2bb38:	uxtb	r2, r2
   2bb3c:	cmp	r2, #9
   2bb40:	bls	2bb58 <__flatcc_fb_clear_parser@@Base+0x2410>
   2bb44:	orr	r1, r1, #32
   2bb48:	sub	r2, r1, #97	; 0x61
   2bb4c:	uxtb	r2, r2
   2bb50:	cmp	r2, #5
   2bb54:	bhi	2bb68 <__flatcc_fb_clear_parser@@Base+0x2420>
   2bb58:	mvn	r6, #0
   2bb5c:	cmp	sl, #45	; 0x2d
   2bb60:	mvneq	r6, #1
   2bb64:	b	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2bb68:	mvn	r6, #2
   2bb6c:	cmp	r1, #46	; 0x2e
   2bb70:	beq	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2bb74:	cmp	r1, #80	; 0x50
   2bb78:	cmpne	r1, #112	; 0x70
   2bb7c:	beq	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2bb80:	stm	r8, {r0, r5}
   2bb84:	mov	r6, r9
   2bb88:	b	2baec <__flatcc_fb_clear_parser@@Base+0x23a4>
   2bb8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bb90:	add	fp, sp, #28
   2bb94:	sub	sp, sp, #4
   2bb98:	mov	ip, sp
   2bb9c:	cmp	r3, #0
   2bba0:	movne	ip, r3
   2bba4:	cmp	r1, #0
   2bba8:	beq	2bc18 <__flatcc_fb_clear_parser@@Base+0x24d0>
   2bbac:	ldrb	r9, [r0]
   2bbb0:	sub	r3, r9, #45	; 0x2d
   2bbb4:	clz	r3, r3
   2bbb8:	lsr	r8, r3, #5
   2bbbc:	add	lr, r0, r8
   2bbc0:	cmp	r8, r1
   2bbc4:	bne	2bc20 <__flatcc_fb_clear_parser@@Base+0x24d8>
   2bbc8:	mov	r6, #0
   2bbcc:	mov	r3, #0
   2bbd0:	mov	r1, lr
   2bbd4:	mov	r7, #0
   2bbd8:	cmp	r1, r0
   2bbdc:	beq	2bca0 <__flatcc_fb_clear_parser@@Base+0x2558>
   2bbe0:	mvn	r0, #2
   2bbe4:	cmp	r1, lr
   2bbe8:	beq	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bbec:	cmp	r7, #0
   2bbf0:	beq	2bcc8 <__flatcc_fb_clear_parser@@Base+0x2580>
   2bbf4:	ldrb	r1, [r1]
   2bbf8:	cmp	r1, #79	; 0x4f
   2bbfc:	ble	2bcb8 <__flatcc_fb_clear_parser@@Base+0x2570>
   2bc00:	cmp	r1, #80	; 0x50
   2bc04:	beq	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bc08:	cmp	r1, #101	; 0x65
   2bc0c:	cmpne	r1, #112	; 0x70
   2bc10:	beq	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bc14:	b	2bcc8 <__flatcc_fb_clear_parser@@Base+0x2580>
   2bc18:	mvn	r0, #4
   2bc1c:	b	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bc20:	sub	r7, r1, r8
   2bc24:	mov	r6, #0
   2bc28:	mov	sl, #10
   2bc2c:	mov	r1, lr
   2bc30:	mov	r3, #0
   2bc34:	ldrb	r4, [r1]
   2bc38:	sub	r5, r4, #48	; 0x30
   2bc3c:	uxtb	r5, r5
   2bc40:	cmp	r5, #9
   2bc44:	bhi	2bc94 <__flatcc_fb_clear_parser@@Base+0x254c>
   2bc48:	add	r5, r3, r3, lsl #2
   2bc4c:	lsl	r5, r5, #1
   2bc50:	umlal	r4, r5, r6, sl
   2bc54:	subs	r4, r4, #48	; 0x30
   2bc58:	sbc	r5, r5, #0
   2bc5c:	subs	r6, r4, r6
   2bc60:	sbcs	r3, r5, r3
   2bc64:	bcc	2bca8 <__flatcc_fb_clear_parser@@Base+0x2560>
   2bc68:	subs	r7, r7, #1
   2bc6c:	add	r1, r1, #1
   2bc70:	mov	r6, r4
   2bc74:	mov	r3, r5
   2bc78:	bne	2bc34 <__flatcc_fb_clear_parser@@Base+0x24ec>
   2bc7c:	mov	r7, #0
   2bc80:	mov	r6, r4
   2bc84:	mov	r3, r5
   2bc88:	cmp	r1, r0
   2bc8c:	bne	2bbe0 <__flatcc_fb_clear_parser@@Base+0x2498>
   2bc90:	b	2bca0 <__flatcc_fb_clear_parser@@Base+0x2558>
   2bc94:	mov	r7, #1
   2bc98:	cmp	r1, r0
   2bc9c:	bne	2bbe0 <__flatcc_fb_clear_parser@@Base+0x2498>
   2bca0:	mvn	r0, #3
   2bca4:	b	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bca8:	mvn	r0, #0
   2bcac:	cmp	r9, #45	; 0x2d
   2bcb0:	mvneq	r0, #1
   2bcb4:	b	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bcb8:	cmp	r1, #46	; 0x2e
   2bcbc:	beq	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bcc0:	cmp	r1, #69	; 0x45
   2bcc4:	beq	2bcd4 <__flatcc_fb_clear_parser@@Base+0x258c>
   2bcc8:	str	r6, [r2]
   2bccc:	str	r3, [r2, #4]
   2bcd0:	mov	r0, r8
   2bcd4:	str	r0, [ip]
   2bcd8:	sub	sp, fp, #28
   2bcdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bce0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bce4:	add	fp, sp, #24
   2bce8:	mov	r7, r1
   2bcec:	mov	r4, r0
   2bcf0:	ldr	r8, [r0, #40]	; 0x28
   2bcf4:	mov	r5, #1
   2bcf8:	strh	r5, [r1, #8]
   2bcfc:	mov	r0, r4
   2bd00:	mov	r1, #91	; 0x5b
   2bd04:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2bd08:	sub	r5, r5, #1
   2bd0c:	cmp	r0, #0
   2bd10:	bne	2bcfc <__flatcc_fb_clear_parser@@Base+0x25b4>
   2bd14:	mov	r6, r0
   2bd18:	rsb	r0, r5, #0
   2bd1c:	cmp	r0, #2
   2bd20:	bcc	2bd38 <__flatcc_fb_clear_parser@@Base+0x25f0>
   2bd24:	movw	r2, #57467	; 0xe07b
   2bd28:	movt	r2, #4
   2bd2c:	mov	r0, r4
   2bd30:	mov	r1, r8
   2bd34:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2bd38:	ldr	r1, [r4, #40]	; 0x28
   2bd3c:	ldr	r0, [r1, #16]
   2bd40:	movw	r2, #999	; 0x3e7
   2bd44:	add	r2, r0, r2
   2bd48:	cmp	r2, #27
   2bd4c:	bhi	2be2c <__flatcc_fb_clear_parser@@Base+0x26e4>
   2bd50:	mov	ip, #1
   2bd54:	movw	r3, #55291	; 0xd7fb
   2bd58:	movt	r3, #2430	; 0x97e
   2bd5c:	tst	r3, ip, lsl r2
   2bd60:	beq	2be0c <__flatcc_fb_clear_parser@@Base+0x26c4>
   2bd64:	mov	r0, #7
   2bd68:	cmp	r5, #0
   2bd6c:	movweq	r0, #8
   2bd70:	ldr	r1, [r4, #40]	; 0x28
   2bd74:	strh	r0, [r7, #8]
   2bd78:	str	r1, [r7]
   2bd7c:	mov	r0, r4
   2bd80:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2bd84:	mov	r0, r4
   2bd88:	mov	r1, #93	; 0x5d
   2bd8c:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2bd90:	cmp	r0, #0
   2bd94:	beq	2bda8 <__flatcc_fb_clear_parser@@Base+0x2660>
   2bd98:	add	r5, r5, #1
   2bd9c:	cmp	r5, #1
   2bda0:	bne	2bd84 <__flatcc_fb_clear_parser@@Base+0x263c>
   2bda4:	b	2bdb0 <__flatcc_fb_clear_parser@@Base+0x2668>
   2bda8:	cmp	r5, #0
   2bdac:	beq	2bdc8 <__flatcc_fb_clear_parser@@Base+0x2680>
   2bdb0:	movw	r2, #57558	; 0xe0d6
   2bdb4:	movt	r2, #4
   2bdb8:	mov	r0, r4
   2bdbc:	mov	r1, r6
   2bdc0:	mov	r3, r8
   2bdc4:	bl	29884 <__flatcc_fb_clear_parser@@Base+0x13c>
   2bdc8:	mov	r0, r4
   2bdcc:	mov	r1, #93	; 0x5d
   2bdd0:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2bdd4:	cmp	r0, #0
   2bdd8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bddc:	mov	r1, r0
   2bde0:	movw	r2, #57591	; 0xe0f7
   2bde4:	movt	r2, #4
   2bde8:	mov	r0, r4
   2bdec:	mov	r3, r8
   2bdf0:	bl	29884 <__flatcc_fb_clear_parser@@Base+0x13c>
   2bdf4:	mov	r0, r4
   2bdf8:	mov	r1, #93	; 0x5d
   2bdfc:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0xf18>
   2be00:	cmp	r0, #0
   2be04:	bne	2bdf4 <__flatcc_fb_clear_parser@@Base+0x26ac>
   2be08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2be0c:	cmp	r2, #25
   2be10:	bne	2be2c <__flatcc_fb_clear_parser@@Base+0x26e4>
   2be14:	str	r1, [r7]
   2be18:	mov	r0, #9
   2be1c:	cmp	r5, #0
   2be20:	movweq	r0, #10
   2be24:	strh	r0, [r7, #8]
   2be28:	b	2bd7c <__flatcc_fb_clear_parser@@Base+0x2634>
   2be2c:	cmp	r0, #9
   2be30:	beq	2be48 <__flatcc_fb_clear_parser@@Base+0x2700>
   2be34:	cmp	r0, #93	; 0x5d
   2be38:	bne	2be68 <__flatcc_fb_clear_parser@@Base+0x2720>
   2be3c:	movw	r2, #57507	; 0xe0a3
   2be40:	movt	r2, #4
   2be44:	b	2be70 <__flatcc_fb_clear_parser@@Base+0x2728>
   2be48:	mov	r0, r4
   2be4c:	mov	r1, r7
   2be50:	bl	2b214 <__flatcc_fb_clear_parser@@Base+0x1acc>
   2be54:	mov	r0, #11
   2be58:	cmp	r5, #0
   2be5c:	movweq	r0, #12
   2be60:	strh	r0, [r7, #8]
   2be64:	b	2bd84 <__flatcc_fb_clear_parser@@Base+0x263c>
   2be68:	movw	r2, #57535	; 0xe0bf
   2be6c:	movt	r2, #4
   2be70:	mov	r0, r4
   2be74:	mov	r1, r6
   2be78:	bl	2987c <__flatcc_fb_clear_parser@@Base+0x134>
   2be7c:	b	2bd84 <__flatcc_fb_clear_parser@@Base+0x263c>
   2be80:	push	{r4, r5, fp, lr}
   2be84:	add	fp, sp, #8
   2be88:	mov	r4, r0
   2be8c:	ldr	r5, [r0, #40]	; 0x28
   2be90:	b	2bea0 <__flatcc_fb_clear_parser@@Base+0x2758>
   2be94:	mov	r0, r4
   2be98:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2be9c:	ldr	r5, [r4, #40]	; 0x28
   2bea0:	mov	r0, r5
   2bea4:	bl	2a32c <__flatcc_fb_clear_parser@@Base+0xbe4>
   2bea8:	cmp	r0, #0
   2beac:	popne	{r4, r5, fp, pc}
   2beb0:	ldr	r0, [r5, #16]
   2beb4:	cmp	r0, #125	; 0x7d
   2beb8:	beq	2becc <__flatcc_fb_clear_parser@@Base+0x2784>
   2bebc:	cmp	r0, #59	; 0x3b
   2bec0:	bne	2be94 <__flatcc_fb_clear_parser@@Base+0x274c>
   2bec4:	mov	r0, r4
   2bec8:	bl	2965c <__flatcc_fb_parse@@Base+0x105c>
   2becc:	mov	r0, #0
   2bed0:	str	r0, [r4, #36]	; 0x24
   2bed4:	pop	{r4, r5, fp, pc}

0002bed8 <__flatcc_fb_build_schema@@Base>:
   2bed8:	push	{r4, r5, r6, r7, fp, lr}
   2bedc:	add	fp, sp, #16
   2bee0:	mov	r4, r0
   2bee4:	add	r0, r0, #524	; 0x20c
   2bee8:	add	r5, r4, #352	; 0x160
   2beec:	mov	r1, r5
   2bef0:	bl	2c288 <__flatcc_fb_build_schema@@Base+0x3b0>
   2bef4:	cmp	r0, #0
   2bef8:	beq	2c268 <__flatcc_fb_build_schema@@Base+0x390>
   2befc:	ldr	r6, [r4, #392]	; 0x188
   2bf00:	cmp	r6, #0
   2bf04:	beq	2bf68 <__flatcc_fb_build_schema@@Base+0x90>
   2bf08:	movw	r7, #58544	; 0xe4b0
   2bf0c:	movt	r7, #4
   2bf10:	ldrh	r0, [r6, #8]
   2bf14:	cmp	r0, #4
   2bf18:	bhi	2bf5c <__flatcc_fb_build_schema@@Base+0x84>
   2bf1c:	mov	r0, r6
   2bf20:	bl	2c2a0 <__flatcc_fb_build_schema@@Base+0x3c8>
   2bf24:	str	r5, [r6, #16]
   2bf28:	ldr	r0, [r6, #12]
   2bf2c:	cmp	r0, #0
   2bf30:	beq	2bf5c <__flatcc_fb_build_schema@@Base+0x84>
   2bf34:	add	r0, r0, #4
   2bf38:	mov	r1, r6
   2bf3c:	bl	2c320 <__flatcc_fb_build_schema@@Base+0x448>
   2bf40:	cmp	r0, #0
   2bf44:	beq	2bf5c <__flatcc_fb_build_schema@@Base+0x84>
   2bf48:	mov	r3, r0
   2bf4c:	mov	r0, r4
   2bf50:	mov	r1, r6
   2bf54:	mov	r2, r7
   2bf58:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2bf5c:	ldr	r6, [r6]
   2bf60:	cmp	r6, #0
   2bf64:	bne	2bf10 <__flatcc_fb_build_schema@@Base+0x38>
   2bf68:	ldr	r5, [r4, #356]	; 0x164
   2bf6c:	cmp	r5, #0
   2bf70:	bne	2bf84 <__flatcc_fb_build_schema@@Base+0xac>
   2bf74:	b	2bfac <__flatcc_fb_build_schema@@Base+0xd4>
   2bf78:	ldr	r5, [r5]
   2bf7c:	cmp	r5, #0
   2bf80:	beq	2bfac <__flatcc_fb_build_schema@@Base+0xd4>
   2bf84:	ldr	r0, [r4, #412]	; 0x19c
   2bf88:	add	r0, r0, #16
   2bf8c:	mov	r1, r5
   2bf90:	bl	2c334 <__flatcc_fb_build_schema@@Base+0x45c>
   2bf94:	cmp	r0, #0
   2bf98:	beq	2bf78 <__flatcc_fb_build_schema@@Base+0xa0>
   2bf9c:	mov	r0, r4
   2bfa0:	mov	r1, r5
   2bfa4:	bl	2c33c <__flatcc_fb_build_schema@@Base+0x464>
   2bfa8:	b	2bf78 <__flatcc_fb_build_schema@@Base+0xa0>
   2bfac:	mov	r0, r4
   2bfb0:	bl	2c380 <__flatcc_fb_build_schema@@Base+0x4a8>
   2bfb4:	ldr	r0, [r4, #184]	; 0xb8
   2bfb8:	cmp	r0, #0
   2bfbc:	bne	2bffc <__flatcc_fb_build_schema@@Base+0x124>
   2bfc0:	ldr	r5, [r4, #392]	; 0x188
   2bfc4:	cmp	r5, #0
   2bfc8:	beq	2c134 <__flatcc_fb_build_schema@@Base+0x25c>
   2bfcc:	mov	r6, #1
   2bfd0:	ldrh	r0, [r5, #8]
   2bfd4:	cmp	r0, #3
   2bfd8:	bne	2bff0 <__flatcc_fb_build_schema@@Base+0x118>
   2bfdc:	mov	r0, r4
   2bfe0:	mov	r1, r5
   2bfe4:	bl	2c3f0 <__flatcc_fb_build_schema@@Base+0x518>
   2bfe8:	cmp	r0, #0
   2bfec:	strhne	r6, [r5, #48]	; 0x30
   2bff0:	ldr	r5, [r5]
   2bff4:	cmp	r5, #0
   2bff8:	bne	2bfd0 <__flatcc_fb_build_schema@@Base+0xf8>
   2bffc:	ldr	r5, [r4, #392]	; 0x188
   2c000:	cmp	r5, #0
   2c004:	beq	2c134 <__flatcc_fb_build_schema@@Base+0x25c>
   2c008:	mov	r6, #1
   2c00c:	ldrh	r0, [r5, #8]
   2c010:	cmp	r0, #4
   2c014:	bhi	2c1dc <__flatcc_fb_build_schema@@Base+0x304>
   2c018:	add	r1, pc, #0
   2c01c:	ldr	pc, [r1, r0, lsl #2]
   2c020:	andeq	ip, r2, r4, ror r0
   2c024:	andeq	ip, r2, r4, lsr r0
   2c028:	andeq	ip, r2, r4, ror r0
   2c02c:	andeq	ip, r2, r4, asr r0
   2c030:	andeq	ip, r2, r4, asr #32
   2c034:	mov	r0, r4
   2c038:	mov	r1, r5
   2c03c:	bl	2cb1c <__flatcc_fb_build_schema@@Base+0xc44>
   2c040:	b	2c06c <__flatcc_fb_build_schema@@Base+0x194>
   2c044:	mov	r0, r4
   2c048:	mov	r1, r5
   2c04c:	bl	2cdc8 <__flatcc_fb_build_schema@@Base+0xef0>
   2c050:	b	2c06c <__flatcc_fb_build_schema@@Base+0x194>
   2c054:	ldr	r0, [r4, #184]	; 0xb8
   2c058:	cmp	r0, #0
   2c05c:	beq	2c074 <__flatcc_fb_build_schema@@Base+0x19c>
   2c060:	mov	r0, r4
   2c064:	mov	r1, r5
   2c068:	bl	2c3f0 <__flatcc_fb_build_schema@@Base+0x518>
   2c06c:	cmp	r0, #0
   2c070:	strhne	r6, [r5, #48]	; 0x30
   2c074:	ldr	r5, [r5]
   2c078:	cmp	r5, #0
   2c07c:	bne	2c00c <__flatcc_fb_build_schema@@Base+0x134>
   2c080:	ldr	r5, [r4, #392]	; 0x188
   2c084:	cmp	r5, #0
   2c088:	beq	2c134 <__flatcc_fb_build_schema@@Base+0x25c>
   2c08c:	mov	r6, #1
   2c090:	ldrh	r0, [r5, #8]
   2c094:	cmp	r0, #1
   2c098:	bne	2c0bc <__flatcc_fb_build_schema@@Base+0x1e4>
   2c09c:	ldrh	r0, [r5, #48]	; 0x30
   2c0a0:	cmp	r0, #1
   2c0a4:	beq	2c0bc <__flatcc_fb_build_schema@@Base+0x1e4>
   2c0a8:	mov	r0, r4
   2c0ac:	mov	r1, r5
   2c0b0:	bl	2cdd4 <__flatcc_fb_build_schema@@Base+0xefc>
   2c0b4:	cmp	r0, #0
   2c0b8:	strhne	r6, [r5, #48]	; 0x30
   2c0bc:	ldr	r5, [r5]
   2c0c0:	cmp	r5, #0
   2c0c4:	bne	2c090 <__flatcc_fb_build_schema@@Base+0x1b8>
   2c0c8:	ldr	r5, [r4, #392]	; 0x188
   2c0cc:	cmp	r5, #0
   2c0d0:	beq	2c134 <__flatcc_fb_build_schema@@Base+0x25c>
   2c0d4:	mov	r6, #1
   2c0d8:	ldrh	r0, [r5, #8]
   2c0dc:	cmp	r0, #2
   2c0e0:	beq	2c108 <__flatcc_fb_build_schema@@Base+0x230>
   2c0e4:	cmp	r0, #0
   2c0e8:	bne	2c128 <__flatcc_fb_build_schema@@Base+0x250>
   2c0ec:	ldrh	r0, [r5, #48]	; 0x30
   2c0f0:	cmp	r0, #1
   2c0f4:	beq	2c128 <__flatcc_fb_build_schema@@Base+0x250>
   2c0f8:	mov	r0, r4
   2c0fc:	mov	r1, r5
   2c100:	bl	2d12c <__flatcc_fb_build_schema@@Base+0x1254>
   2c104:	b	2c120 <__flatcc_fb_build_schema@@Base+0x248>
   2c108:	ldrh	r0, [r5, #48]	; 0x30
   2c10c:	cmp	r0, #1
   2c110:	beq	2c128 <__flatcc_fb_build_schema@@Base+0x250>
   2c114:	mov	r0, r4
   2c118:	mov	r1, r5
   2c11c:	bl	2dda0 <__flatcc_fb_build_schema@@Base+0x1ec8>
   2c120:	cmp	r0, #0
   2c124:	strhne	r6, [r5, #48]	; 0x30
   2c128:	ldr	r5, [r5]
   2c12c:	cmp	r5, #0
   2c130:	bne	2c0d8 <__flatcc_fb_build_schema@@Base+0x200>
   2c134:	add	r0, r4, #396	; 0x18c
   2c138:	bl	2dff8 <__flatcc_fb_build_schema@@Base+0x2120>
   2c13c:	ldr	r5, [r4, #392]	; 0x188
   2c140:	cmp	r5, #0
   2c144:	bne	2c158 <__flatcc_fb_build_schema@@Base+0x280>
   2c148:	b	2c190 <__flatcc_fb_build_schema@@Base+0x2b8>
   2c14c:	ldr	r5, [r5]
   2c150:	cmp	r5, #0
   2c154:	beq	2c190 <__flatcc_fb_build_schema@@Base+0x2b8>
   2c158:	ldrh	r0, [r5, #8]
   2c15c:	cmp	r0, #0
   2c160:	bne	2c14c <__flatcc_fb_build_schema@@Base+0x274>
   2c164:	ldr	r1, [r5, #20]
   2c168:	ldrb	r0, [r5, #92]	; 0x5c
   2c16c:	tst	r0, #8
   2c170:	bne	2c180 <__flatcc_fb_build_schema@@Base+0x2a8>
   2c174:	mov	r0, r4
   2c178:	bl	2e068 <__flatcc_fb_build_schema@@Base+0x2190>
   2c17c:	b	2c188 <__flatcc_fb_build_schema@@Base+0x2b0>
   2c180:	mov	r0, r1
   2c184:	bl	2e030 <__flatcc_fb_build_schema@@Base+0x2158>
   2c188:	str	r0, [r5, #24]
   2c18c:	b	2c14c <__flatcc_fb_build_schema@@Base+0x274>
   2c190:	ldr	r2, [r4, #400]	; 0x190
   2c194:	cmp	r2, #0
   2c198:	beq	2c1f8 <__flatcc_fb_build_schema@@Base+0x320>
   2c19c:	ldr	r1, [r4, #408]	; 0x198
   2c1a0:	mov	r0, r4
   2c1a4:	bl	2e214 <__flatcc_fb_build_schema@@Base+0x233c>
   2c1a8:	str	r0, [r4, #404]	; 0x194
   2c1ac:	cmp	r0, #0
   2c1b0:	beq	2c218 <__flatcc_fb_build_schema@@Base+0x340>
   2c1b4:	ldrh	r1, [r0, #8]
   2c1b8:	ldr	r2, [r4, #176]	; 0xb0
   2c1bc:	cmp	r2, #0
   2c1c0:	beq	2c228 <__flatcc_fb_build_schema@@Base+0x350>
   2c1c4:	cmp	r1, #2
   2c1c8:	bcc	2c248 <__flatcc_fb_build_schema@@Base+0x370>
   2c1cc:	ldr	r1, [r4, #400]	; 0x190
   2c1d0:	movw	r2, #58691	; 0xe543
   2c1d4:	movt	r2, #4
   2c1d8:	b	2c23c <__flatcc_fb_build_schema@@Base+0x364>
   2c1dc:	movw	r2, #58598	; 0xe4e6
   2c1e0:	movt	r2, #4
   2c1e4:	mov	r0, r4
   2c1e8:	mov	r1, r5
   2c1ec:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2c1f0:	mvn	r0, #0
   2c1f4:	pop	{r4, r5, r6, r7, fp, pc}
   2c1f8:	ldr	r0, [r4, #208]	; 0xd0
   2c1fc:	cmp	r0, #0
   2c200:	beq	2c254 <__flatcc_fb_build_schema@@Base+0x37c>
   2c204:	movw	r1, #58648	; 0xe518
   2c208:	movt	r1, #4
   2c20c:	mov	r0, r4
   2c210:	bl	2e208 <__flatcc_fb_build_schema@@Base+0x2330>
   2c214:	b	2c254 <__flatcc_fb_build_schema@@Base+0x37c>
   2c218:	ldr	r1, [r4, #400]	; 0x190
   2c21c:	movw	r2, #58671	; 0xe52f
   2c220:	movt	r2, #4
   2c224:	b	2c23c <__flatcc_fb_build_schema@@Base+0x364>
   2c228:	cmp	r1, #0
   2c22c:	beq	2c248 <__flatcc_fb_build_schema@@Base+0x370>
   2c230:	ldr	r1, [r4, #400]	; 0x190
   2c234:	movw	r2, #58729	; 0xe569
   2c238:	movt	r2, #4
   2c23c:	mov	r0, r4
   2c240:	bl	2e21c <__flatcc_fb_build_schema@@Base+0x2344>
   2c244:	b	2c24c <__flatcc_fb_build_schema@@Base+0x374>
   2c248:	str	r0, [r4, #404]	; 0x194
   2c24c:	mov	r0, #0
   2c250:	str	r0, [r4, #400]	; 0x190
   2c254:	ldr	r0, [r4, #108]	; 0x6c
   2c258:	clz	r1, r0
   2c25c:	lsr	r1, r1, #5
   2c260:	str	r1, [r4, #120]	; 0x78
   2c264:	pop	{r4, r5, r6, r7, fp, pc}
   2c268:	movw	r0, #58373	; 0xe405
   2c26c:	movt	r0, #4
   2c270:	movw	r1, #58427	; 0xe43b
   2c274:	movt	r1, #4
   2c278:	movw	r3, #58500	; 0xe484
   2c27c:	movt	r3, #4
   2c280:	movw	r2, #1558	; 0x616
   2c284:	bl	14a80 <__assert_fail@plt>
   2c288:	push	{fp, lr}
   2c28c:	mov	fp, sp
   2c290:	bl	264a4 <ptr_set_find_item@@Base>
   2c294:	cmp	r0, #0
   2c298:	movwne	r0, #1
   2c29c:	pop	{fp, pc}
   2c2a0:	push	{r4, r5, r6, r7, fp, lr}
   2c2a4:	add	fp, sp, #16
   2c2a8:	mov	r4, r0
   2c2ac:	ldr	r1, [r0, #12]
   2c2b0:	movw	r6, #40389	; 0x9dc5
   2c2b4:	movt	r6, #33052	; 0x811c
   2c2b8:	cmp	r1, #0
   2c2bc:	mov	r0, r6
   2c2c0:	beq	2c304 <__flatcc_fb_build_schema@@Base+0x42c>
   2c2c4:	ldr	r7, [r1]
   2c2c8:	cmp	r7, #0
   2c2cc:	mov	r0, r6
   2c2d0:	beq	2c304 <__flatcc_fb_build_schema@@Base+0x42c>
   2c2d4:	movw	r5, #36707	; 0x8f63
   2c2d8:	movt	r5, #4
   2c2dc:	mov	r0, r6
   2c2e0:	ldr	r2, [r7, #4]
   2c2e4:	ldm	r2, {r1, r2}
   2c2e8:	bl	2e224 <__flatcc_fb_build_schema@@Base+0x234c>
   2c2ec:	mov	r1, r5
   2c2f0:	mov	r2, #1
   2c2f4:	bl	2e224 <__flatcc_fb_build_schema@@Base+0x234c>
   2c2f8:	ldr	r7, [r7]
   2c2fc:	cmp	r7, #0
   2c300:	bne	2c2e0 <__flatcc_fb_build_schema@@Base+0x408>
   2c304:	ldr	r2, [r4, #4]
   2c308:	ldm	r2, {r1, r2}
   2c30c:	bl	2e224 <__flatcc_fb_build_schema@@Base+0x234c>
   2c310:	cmp	r0, #0
   2c314:	movne	r6, r0
   2c318:	str	r6, [r4, #88]	; 0x58
   2c31c:	pop	{r4, r5, r6, r7, fp, pc}
   2c320:	mov	r2, #1
   2c324:	b	269a8 <fb_symbol_table_insert_item@@Base>
   2c328:	ldr	r3, [r3, #4]
   2c32c:	ldr	r1, [r1, #4]
   2c330:	b	2e24c <__flatcc_fb_build_schema@@Base+0x2374>
   2c334:	mov	r2, #1
   2c338:	b	339fc <fb_name_table_insert_item@@Base>
   2c33c:	cmp	r1, #0
   2c340:	beq	2c374 <__flatcc_fb_build_schema@@Base+0x49c>
   2c344:	push	{fp, lr}
   2c348:	mov	fp, sp
   2c34c:	sub	sp, sp, #8
   2c350:	ldrd	r2, [r1, #8]
   2c354:	stm	sp, {r2, r3}
   2c358:	movw	r2, #58572	; 0xe4cc
   2c35c:	movt	r2, #4
   2c360:	mov	r1, #0
   2c364:	mov	r3, #0
   2c368:	bl	280c4 <__flatcc_error_report@@Base>
   2c36c:	mov	sp, fp
   2c370:	pop	{fp, pc}
   2c374:	movw	r1, #58572	; 0xe4cc
   2c378:	movt	r1, #4
   2c37c:	b	2e208 <__flatcc_fb_build_schema@@Base+0x2330>
   2c380:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c384:	add	fp, sp, #24
   2c388:	mov	r4, r0
   2c38c:	mov	r8, #0
   2c390:	movw	r9, #64224	; 0xfae0
   2c394:	movt	r9, #4
   2c398:	mov	r6, #2
   2c39c:	mov	r7, #0
   2c3a0:	mov	r0, r4
   2c3a4:	bl	2e270 <__flatcc_fb_build_schema@@Base+0x2398>
   2c3a8:	mov	r5, r0
   2c3ac:	str	r7, [r0, #24]
   2c3b0:	ldr	r0, [r9, r7, lsl #2]
   2c3b4:	str	r0, [r5, #8]
   2c3b8:	bl	149a8 <strlen@plt>
   2c3bc:	str	r0, [r5, #12]
   2c3c0:	strh	r6, [r5, #16]
   2c3c4:	str	r8, [r5]
   2c3c8:	ldr	r0, [r4, #412]	; 0x19c
   2c3cc:	add	r0, r0, #16
   2c3d0:	mov	r1, r5
   2c3d4:	bl	2c334 <__flatcc_fb_build_schema@@Base+0x45c>
   2c3d8:	cmp	r0, #0
   2c3dc:	strne	r7, [r0, #24]
   2c3e0:	add	r7, r7, #1
   2c3e4:	cmp	r7, #12
   2c3e8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c3ec:	b	2c3a0 <__flatcc_fb_build_schema@@Base+0x4c8>
   2c3f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c3f4:	add	fp, sp, #28
   2c3f8:	sub	sp, sp, #108	; 0x6c
   2c3fc:	mov	r8, r0
   2c400:	str	r1, [sp, #36]	; 0x24
   2c404:	ldrh	r4, [r1, #8]
   2c408:	cmp	r4, #4
   2c40c:	bne	2c42c <__flatcc_fb_build_schema@@Base+0x554>
   2c410:	ldr	r0, [sp, #36]	; 0x24
   2c414:	ldrh	r0, [r0, #48]	; 0x30
   2c418:	cmp	r0, #0
   2c41c:	beq	2c468 <__flatcc_fb_build_schema@@Base+0x590>
   2c420:	movw	r2, #58984	; 0xe668
   2c424:	movt	r2, #4
   2c428:	b	2c5ac <__flatcc_fb_build_schema@@Base+0x6d4>
   2c42c:	cmp	r4, #3
   2c430:	bne	2cafc <__flatcc_fb_build_schema@@Base+0xc24>
   2c434:	ldr	r0, [sp, #36]	; 0x24
   2c438:	ldrh	r0, [r0, #48]	; 0x30
   2c43c:	cmp	r0, #8
   2c440:	beq	2c480 <__flatcc_fb_build_schema@@Base+0x5a8>
   2c444:	cmp	r0, #0
   2c448:	bne	2c5a4 <__flatcc_fb_build_schema@@Base+0x6cc>
   2c44c:	mov	r0, #1
   2c450:	ldr	r1, [sp, #36]	; 0x24
   2c454:	strh	r0, [r1, #48]	; 0x30
   2c458:	movw	r2, #58913	; 0xe621
   2c45c:	movt	r2, #4
   2c460:	mov	r0, r8
   2c464:	b	2c5b4 <__flatcc_fb_build_schema@@Base+0x6dc>
   2c468:	mov	r0, #4
   2c46c:	ldr	r2, [sp, #36]	; 0x24
   2c470:	str	r0, [r2, #40]	; 0x28
   2c474:	mov	r1, #8
   2c478:	strh	r1, [r2, #48]	; 0x30
   2c47c:	b	2c490 <__flatcc_fb_build_schema@@Base+0x5b8>
   2c480:	ldr	r5, [sp, #36]	; 0x24
   2c484:	ldr	r0, [r5, #40]	; 0x28
   2c488:	bl	2e30c <__flatcc_fb_build_schema@@Base+0x2434>
   2c48c:	str	r0, [r5, #40]	; 0x28
   2c490:	bl	2e330 <__flatcc_fb_build_schema@@Base+0x2458>
   2c494:	mov	sl, #0
   2c498:	ldr	r5, [sp, #36]	; 0x24
   2c49c:	str	r0, [r5, #112]	; 0x70
   2c4a0:	str	sl, [r5, #116]	; 0x74
   2c4a4:	strh	r0, [r5, #104]	; 0x68
   2c4a8:	ldr	r1, [r5, #28]
   2c4ac:	add	r3, sp, #60	; 0x3c
   2c4b0:	mov	r0, r8
   2c4b4:	mov	r2, #32
   2c4b8:	bl	2e340 <__flatcc_fb_build_schema@@Base+0x2468>
   2c4bc:	strh	r0, [r5, #92]	; 0x5c
   2c4c0:	tst	r0, #32
   2c4c4:	beq	2c4e0 <__flatcc_fb_build_schema@@Base+0x608>
   2c4c8:	mov	r0, #0
   2c4cc:	str	r0, [sp, #44]	; 0x2c
   2c4d0:	str	r0, [sp, #40]	; 0x28
   2c4d4:	mov	r0, #5
   2c4d8:	strh	r0, [sp, #48]	; 0x30
   2c4dc:	mov	sl, #1
   2c4e0:	ldr	r0, [sp, #36]	; 0x24
   2c4e4:	ldr	r2, [r0, #40]	; 0x28
   2c4e8:	cmp	r2, #5
   2c4ec:	bne	2c504 <__flatcc_fb_build_schema@@Base+0x62c>
   2c4f0:	mov	r0, #6
   2c4f4:	strh	r0, [sp, #48]	; 0x30
   2c4f8:	mov	r0, #0
   2c4fc:	strb	r0, [sp, #40]	; 0x28
   2c500:	b	2c544 <__flatcc_fb_build_schema@@Base+0x66c>
   2c504:	mov	r0, #0
   2c508:	str	r0, [sp, #44]	; 0x2c
   2c50c:	str	r0, [sp, #40]	; 0x28
   2c510:	mov	r0, #4
   2c514:	strh	r0, [sp, #48]	; 0x30
   2c518:	add	r3, sp, #40	; 0x28
   2c51c:	mov	r0, r8
   2c520:	ldr	r1, [sp, #36]	; 0x24
   2c524:	bl	2eb14 <__flatcc_fb_coerce_scalar_type@@Base>
   2c528:	cmp	r0, #0
   2c52c:	beq	2c544 <__flatcc_fb_build_schema@@Base+0x66c>
   2c530:	movw	r1, #59047	; 0xe6a7
   2c534:	movt	r1, #4
   2c538:	mov	r0, r8
   2c53c:	bl	2e208 <__flatcc_fb_build_schema@@Base+0x2330>
   2c540:	b	2c5b8 <__flatcc_fb_build_schema@@Base+0x6e0>
   2c544:	ldr	r0, [sp, #36]	; 0x24
   2c548:	ldr	r6, [r0, #20]
   2c54c:	cmp	r6, #0
   2c550:	beq	2c5c8 <__flatcc_fb_build_schema@@Base+0x6f0>
   2c554:	ldr	r2, [sp, #40]	; 0x28
   2c558:	ldr	r0, [sp, #44]	; 0x2c
   2c55c:	mov	r1, r2
   2c560:	str	r2, [sp, #28]
   2c564:	lsr	r1, r2, #8
   2c568:	orr	r1, r1, r0, lsl #24
   2c56c:	str	r1, [sp, #24]
   2c570:	ldr	r1, [sp, #36]	; 0x24
   2c574:	add	r2, r1, #72	; 0x48
   2c578:	str	r2, [sp, #12]
   2c57c:	add	r2, r8, #68	; 0x44
   2c580:	str	r2, [sp, #32]
   2c584:	add	r5, r1, #56	; 0x38
   2c588:	lsr	r0, r0, #8
   2c58c:	str	r0, [sp, #20]
   2c590:	add	r7, sp, #40	; 0x28
   2c594:	mov	r9, #1
   2c598:	str	r5, [sp, #8]
   2c59c:	str	sl, [sp, #4]
   2c5a0:	b	2c604 <__flatcc_fb_build_schema@@Base+0x72c>
   2c5a4:	movw	r2, #58935	; 0xe637
   2c5a8:	movt	r2, #4
   2c5ac:	mov	r0, r8
   2c5b0:	ldr	r1, [sp, #36]	; 0x24
   2c5b4:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2c5b8:	mvn	r9, #0
   2c5bc:	mov	r0, r9
   2c5c0:	sub	sp, fp, #28
   2c5c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c5c8:	mov	r9, #0
   2c5cc:	b	2c5bc <__flatcc_fb_build_schema@@Base+0x6e4>
   2c5d0:	ldr	r1, [r6, #16]
   2c5d4:	mov	r0, r8
   2c5d8:	movw	r2, #59299	; 0xe7a3
   2c5dc:	movt	r2, #4
   2c5e0:	mov	r3, r6
   2c5e4:	bl	28254 <error_ref_sym@@Base>
   2c5e8:	b	2c6b4 <__flatcc_fb_build_schema@@Base+0x7dc>
   2c5ec:	mov	r0, r8
   2c5f0:	mov	r1, r6
   2c5f4:	movw	r2, #59345	; 0xe7d1
   2c5f8:	movt	r2, #4
   2c5fc:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2c600:	b	2c6b4 <__flatcc_fb_build_schema@@Base+0x7dc>
   2c604:	mov	r0, r5
   2c608:	mov	r1, r6
   2c60c:	bl	2c320 <__flatcc_fb_build_schema@@Base+0x448>
   2c610:	cmp	r0, #0
   2c614:	beq	2c644 <__flatcc_fb_build_schema@@Base+0x76c>
   2c618:	mov	r3, r0
   2c61c:	ldr	r0, [r0, #4]
   2c620:	ldr	r1, [sp, #32]
   2c624:	cmp	r0, r1
   2c628:	beq	2c6a0 <__flatcc_fb_build_schema@@Base+0x7c8>
   2c62c:	mov	r0, r8
   2c630:	mov	r1, r6
   2c634:	movw	r2, #59138	; 0xe702
   2c638:	movt	r2, #4
   2c63c:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2c640:	b	2c6b4 <__flatcc_fb_build_schema@@Base+0x7dc>
   2c644:	ldrh	r0, [r6, #8]
   2c648:	cmp	r0, #5
   2c64c:	bne	2ca30 <__flatcc_fb_build_schema@@Base+0xb58>
   2c650:	ldr	r0, [r6, #64]	; 0x40
   2c654:	cmp	r0, #0
   2c658:	bne	2cadc <__flatcc_fb_build_schema@@Base+0xc04>
   2c65c:	cmp	r4, #4
   2c660:	bne	2c6c8 <__flatcc_fb_build_schema@@Base+0x7f0>
   2c664:	ldr	r0, [r6, #4]
   2c668:	ldr	r1, [sp, #32]
   2c66c:	cmp	r0, r1
   2c670:	beq	2c6c0 <__flatcc_fb_build_schema@@Base+0x7e8>
   2c674:	ldrh	r0, [r6, #24]
   2c678:	cmp	r0, #1
   2c67c:	beq	2ca1c <__flatcc_fb_build_schema@@Base+0xb44>
   2c680:	cmp	r0, #12
   2c684:	beq	2c728 <__flatcc_fb_build_schema@@Base+0x850>
   2c688:	cmp	r0, #10
   2c68c:	bne	2c76c <__flatcc_fb_build_schema@@Base+0x894>
   2c690:	mov	r0, #0
   2c694:	str	r0, [r6, #88]	; 0x58
   2c698:	str	r0, [r6, #92]	; 0x5c
   2c69c:	b	2c6c8 <__flatcc_fb_build_schema@@Base+0x7f0>
   2c6a0:	mov	r0, r8
   2c6a4:	mov	r1, r6
   2c6a8:	movw	r2, #59109	; 0xe6e5
   2c6ac:	movt	r2, #4
   2c6b0:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2c6b4:	mov	r0, #1
   2c6b8:	strh	r0, [r6, #24]
   2c6bc:	b	2ca1c <__flatcc_fb_build_schema@@Base+0xb44>
   2c6c0:	mov	r0, #0
   2c6c4:	strh	r0, [r6, #24]
   2c6c8:	ldrh	r0, [r6, #56]	; 0x38
   2c6cc:	cmp	r9, #0
   2c6d0:	cmpeq	r0, #0
   2c6d4:	bne	2c804 <__flatcc_fb_build_schema@@Base+0x92c>
   2c6d8:	ldrh	r0, [sp, #48]	; 0x30
   2c6dc:	cmp	r0, #4
   2c6e0:	beq	2c7ac <__flatcc_fb_build_schema@@Base+0x8d4>
   2c6e4:	cmp	r0, #6
   2c6e8:	beq	2c780 <__flatcc_fb_build_schema@@Base+0x8a8>
   2c6ec:	cmp	r0, #5
   2c6f0:	bne	2c800 <__flatcc_fb_build_schema@@Base+0x928>
   2c6f4:	ldr	r0, [sp, #36]	; 0x24
   2c6f8:	ldr	r0, [r0, #40]	; 0x28
   2c6fc:	cmp	r0, #6
   2c700:	ldreq	r0, [sp, #40]	; 0x28
   2c704:	ldreq	r1, [sp, #44]	; 0x2c
   2c708:	andeq	r0, r0, r1
   2c70c:	cmneq	r0, #1
   2c710:	bne	2c7e8 <__flatcc_fb_build_schema@@Base+0x910>
   2c714:	mov	r0, r8
   2c718:	mov	r1, r6
   2c71c:	movw	r2, #59415	; 0xe817
   2c720:	movt	r2, #4
   2c724:	b	2c7e4 <__flatcc_fb_build_schema@@Base+0x90c>
   2c728:	ldr	r2, [r6, #16]
   2c72c:	ldr	r0, [sp, #36]	; 0x24
   2c730:	ldr	r1, [r0, #12]
   2c734:	mov	r0, r8
   2c738:	bl	2e214 <__flatcc_fb_build_schema@@Base+0x233c>
   2c73c:	cmp	r0, #0
   2c740:	beq	2c5d0 <__flatcc_fb_build_schema@@Base+0x6f8>
   2c744:	mov	r3, r0
   2c748:	ldrh	r0, [r0, #8]
   2c74c:	cmp	r0, #2
   2c750:	bcs	2c5ec <__flatcc_fb_build_schema@@Base+0x714>
   2c754:	mov	r0, #0
   2c758:	str	r0, [r6, #88]	; 0x58
   2c75c:	str	r0, [r6, #92]	; 0x5c
   2c760:	str	r3, [r6, #16]
   2c764:	mov	r0, #14
   2c768:	b	2c6c4 <__flatcc_fb_build_schema@@Base+0x7ec>
   2c76c:	mov	r0, r8
   2c770:	mov	r1, r6
   2c774:	movw	r2, #59228	; 0xe75c
   2c778:	movt	r2, #4
   2c77c:	b	2c6b0 <__flatcc_fb_build_schema@@Base+0x7d8>
   2c780:	ldrb	r0, [sp, #40]	; 0x28
   2c784:	cmp	r0, #1
   2c788:	bne	2c7a0 <__flatcc_fb_build_schema@@Base+0x8c8>
   2c78c:	mov	r0, r8
   2c790:	mov	r1, r6
   2c794:	movw	r2, #59471	; 0xe84f
   2c798:	movt	r2, #4
   2c79c:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2c7a0:	mov	r0, #1
   2c7a4:	strb	r0, [sp, #40]	; 0x28
   2c7a8:	b	2c800 <__flatcc_fb_build_schema@@Base+0x928>
   2c7ac:	ldr	r0, [sp, #36]	; 0x24
   2c7b0:	ldr	r0, [r0, #40]	; 0x28
   2c7b4:	cmp	r0, #6
   2c7b8:	ldreq	r0, [sp, #40]	; 0x28
   2c7bc:	ldreq	r1, [sp, #44]	; 0x2c
   2c7c0:	mvneq	r2, #-2147483648	; 0x80000000
   2c7c4:	eoreq	r1, r1, r2
   2c7c8:	mvneq	r0, r0
   2c7cc:	orrseq	r0, r0, r1
   2c7d0:	bne	2c7e8 <__flatcc_fb_build_schema@@Base+0x910>
   2c7d4:	mov	r0, r8
   2c7d8:	mov	r1, r6
   2c7dc:	movw	r2, #59444	; 0xe834
   2c7e0:	movt	r2, #4
   2c7e4:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2c7e8:	ldr	r0, [sp, #40]	; 0x28
   2c7ec:	ldr	r1, [sp, #44]	; 0x2c
   2c7f0:	adds	r0, r0, #1
   2c7f4:	str	r0, [sp, #40]	; 0x28
   2c7f8:	adc	r0, r1, #0
   2c7fc:	str	r0, [sp, #44]	; 0x2c
   2c800:	ldrh	r0, [r6, #56]	; 0x38
   2c804:	add	ip, r6, #48	; 0x30
   2c808:	cmp	sl, #0
   2c80c:	beq	2c8c0 <__flatcc_fb_build_schema@@Base+0x9e8>
   2c810:	cmp	r0, #0
   2c814:	beq	2c828 <__flatcc_fb_build_schema@@Base+0x950>
   2c818:	cmp	r0, #5
   2c81c:	bne	2ca78 <__flatcc_fb_build_schema@@Base+0xba0>
   2c820:	vld1.64	{d16-d17}, [ip]
   2c824:	vst1.64	{d16-d17}, [r7]
   2c828:	mov	r0, r8
   2c82c:	mov	r8, ip
   2c830:	mov	sl, r0
   2c834:	ldr	r5, [sp, #36]	; 0x24
   2c838:	ldr	r0, [r5, #40]	; 0x28
   2c83c:	ldr	r7, [sp, #40]	; 0x28
   2c840:	ldr	r1, [sp, #44]	; 0x2c
   2c844:	str	r1, [sp, #16]
   2c848:	bl	2e330 <__flatcc_fb_build_schema@@Base+0x2458>
   2c84c:	subs	r0, r7, r0, lsl #3
   2c850:	ldr	r0, [sp, #16]
   2c854:	sbcs	r0, r0, #0
   2c858:	bcs	2ca3c <__flatcc_fb_build_schema@@Base+0xb64>
   2c85c:	mov	ip, #1
   2c860:	lsl	r0, ip, r7
   2c864:	sub	r1, r7, #32
   2c868:	cmp	r1, #0
   2c86c:	movwge	r0, #0
   2c870:	rsb	r2, r7, #32
   2c874:	lsr	r3, ip, r2
   2c878:	lslge	r3, ip, r1
   2c87c:	mov	r7, r8
   2c880:	stm	r7, {r0, r3}
   2c884:	mov	r0, #5
   2c888:	strh	r0, [r6, #56]	; 0x38
   2c88c:	ldr	r2, [r5, #40]	; 0x28
   2c890:	mov	r8, sl
   2c894:	mov	r0, sl
   2c898:	mov	r1, r6
   2c89c:	mov	r3, r7
   2c8a0:	bl	2eb14 <__flatcc_fb_coerce_scalar_type@@Base>
   2c8a4:	mov	ip, r7
   2c8a8:	cmp	r0, #0
   2c8ac:	ldr	sl, [sp, #4]
   2c8b0:	bne	2ca4c <__flatcc_fb_build_schema@@Base+0xb74>
   2c8b4:	cmp	r9, #0
   2c8b8:	bne	2c9ac <__flatcc_fb_build_schema@@Base+0xad4>
   2c8bc:	b	2c908 <__flatcc_fb_build_schema@@Base+0xa30>
   2c8c0:	cmp	r0, #0
   2c8c4:	beq	2c8f8 <__flatcc_fb_build_schema@@Base+0xa20>
   2c8c8:	vld1.64	{d16-d17}, [ip]
   2c8cc:	vst1.64	{d16-d17}, [r7]
   2c8d0:	ldr	r0, [sp, #36]	; 0x24
   2c8d4:	ldr	r2, [r0, #40]	; 0x28
   2c8d8:	mov	r0, r8
   2c8dc:	mov	r1, r6
   2c8e0:	mov	r3, r7
   2c8e4:	mov	r5, ip
   2c8e8:	bl	2eb14 <__flatcc_fb_coerce_scalar_type@@Base>
   2c8ec:	mov	ip, r5
   2c8f0:	cmp	r0, #0
   2c8f4:	bne	2c5b8 <__flatcc_fb_build_schema@@Base+0x6e0>
   2c8f8:	vld1.64	{d16-d17}, [r7]
   2c8fc:	vst1.64	{d16-d17}, [ip]
   2c900:	cmp	r9, #0
   2c904:	bne	2c9ac <__flatcc_fb_build_schema@@Base+0xad4>
   2c908:	ldr	r0, [r8, #180]	; 0xb4
   2c90c:	cmp	r0, #0
   2c910:	beq	2c9ac <__flatcc_fb_build_schema@@Base+0xad4>
   2c914:	ldrh	r0, [sp, #48]	; 0x30
   2c918:	cmp	r0, #4
   2c91c:	beq	2c964 <__flatcc_fb_build_schema@@Base+0xa8c>
   2c920:	cmp	r0, #6
   2c924:	beq	2c998 <__flatcc_fb_build_schema@@Base+0xac0>
   2c928:	cmp	r0, #5
   2c92c:	bne	2c9ac <__flatcc_fb_build_schema@@Base+0xad4>
   2c930:	ldr	r0, [sp, #20]
   2c934:	lsl	r0, r0, #8
   2c938:	ldr	r2, [sp, #24]
   2c93c:	orr	r0, r0, r2, lsr #24
   2c940:	ldr	r1, [sp, #28]
   2c944:	uxtb	r1, r1
   2c948:	orr	r1, r1, r2, lsl #8
   2c94c:	ldr	r2, [sp, #40]	; 0x28
   2c950:	ldr	r3, [sp, #44]	; 0x2c
   2c954:	subs	r1, r1, r2
   2c958:	sbcs	r0, r0, r3
   2c95c:	bcc	2c9ac <__flatcc_fb_build_schema@@Base+0xad4>
   2c960:	b	2ca8c <__flatcc_fb_build_schema@@Base+0xbb4>
   2c964:	ldr	r0, [sp, #20]
   2c968:	lsl	r0, r0, #8
   2c96c:	ldr	r2, [sp, #24]
   2c970:	orr	r0, r0, r2, lsr #24
   2c974:	ldr	r1, [sp, #28]
   2c978:	uxtb	r1, r1
   2c97c:	orr	r1, r1, r2, lsl #8
   2c980:	ldr	r2, [sp, #40]	; 0x28
   2c984:	ldr	r3, [sp, #44]	; 0x2c
   2c988:	subs	r1, r1, r2
   2c98c:	sbcs	r0, r0, r3
   2c990:	blt	2c9ac <__flatcc_fb_build_schema@@Base+0xad4>
   2c994:	b	2ca8c <__flatcc_fb_build_schema@@Base+0xbb4>
   2c998:	ldr	r0, [sp, #28]
   2c99c:	uxtb	r0, r0
   2c9a0:	ldrb	r1, [sp, #40]	; 0x28
   2c9a4:	cmp	r1, r0
   2c9a8:	bls	2cac4 <__flatcc_fb_build_schema@@Base+0xbec>
   2c9ac:	ldr	r5, [sp, #40]	; 0x28
   2c9b0:	ldr	r7, [sp, #44]	; 0x2c
   2c9b4:	ldr	r0, [sp, #12]
   2c9b8:	mov	r1, ip
   2c9bc:	bl	2e4f4 <__flatcc_fb_build_schema@@Base+0x261c>
   2c9c0:	cmp	r0, #0
   2c9c4:	beq	2c9dc <__flatcc_fb_build_schema@@Base+0xb04>
   2c9c8:	cmp	r4, #4
   2c9cc:	beq	2ca58 <__flatcc_fb_build_schema@@Base+0xb80>
   2c9d0:	ldrh	r0, [r6, #10]
   2c9d4:	orr	r0, r0, #4
   2c9d8:	strh	r0, [r6, #10]
   2c9dc:	lsr	r0, r5, #8
   2c9e0:	orr	r0, r0, r7, lsl #24
   2c9e4:	str	r0, [sp, #24]
   2c9e8:	lsr	r0, r7, #8
   2c9ec:	str	r0, [sp, #20]
   2c9f0:	ldr	r0, [r6, #64]	; 0x40
   2c9f4:	cmp	r0, #0
   2c9f8:	str	r5, [sp, #28]
   2c9fc:	beq	2ca14 <__flatcc_fb_build_schema@@Base+0xb3c>
   2ca00:	mov	r0, r8
   2ca04:	mov	r1, r6
   2ca08:	movw	r2, #59868	; 0xe9dc
   2ca0c:	movt	r2, #4
   2ca10:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2ca14:	ldr	r5, [sp, #8]
   2ca18:	add	r7, sp, #40	; 0x28
   2ca1c:	ldr	r6, [r6]
   2ca20:	mov	r9, #0
   2ca24:	cmp	r6, #0
   2ca28:	bne	2c604 <__flatcc_fb_build_schema@@Base+0x72c>
   2ca2c:	b	2c5bc <__flatcc_fb_build_schema@@Base+0x6e4>
   2ca30:	movw	r2, #59165	; 0xe71d
   2ca34:	movt	r2, #4
   2ca38:	b	2ca80 <__flatcc_fb_build_schema@@Base+0xba8>
   2ca3c:	movw	r2, #59575	; 0xe8b7
   2ca40:	movt	r2, #4
   2ca44:	mov	r0, sl
   2ca48:	b	2ca84 <__flatcc_fb_build_schema@@Base+0xbac>
   2ca4c:	movw	r2, #59575	; 0xe8b7
   2ca50:	movt	r2, #4
   2ca54:	b	2ca80 <__flatcc_fb_build_schema@@Base+0xba8>
   2ca58:	movw	r2, #59794	; 0xe992
   2ca5c:	movt	r2, #4
   2ca60:	mov	r0, r8
   2ca64:	mov	r1, r6
   2ca68:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2ca6c:	mov	r0, #1
   2ca70:	strh	r0, [r6, #56]	; 0x38
   2ca74:	b	2c5b8 <__flatcc_fb_build_schema@@Base+0x6e0>
   2ca78:	movw	r2, #59516	; 0xe87c
   2ca7c:	movt	r2, #4
   2ca80:	mov	r0, r8
   2ca84:	mov	r1, r6
   2ca88:	b	2c5b4 <__flatcc_fb_build_schema@@Base+0x6dc>
   2ca8c:	cmp	r4, #4
   2ca90:	bne	2cab8 <__flatcc_fb_build_schema@@Base+0xbe0>
   2ca94:	ldr	r0, [sp, #28]
   2ca98:	uxtb	r0, r0
   2ca9c:	ldr	r2, [sp, #24]
   2caa0:	orr	r0, r0, r2, lsl #8
   2caa4:	ldr	r1, [sp, #20]
   2caa8:	lsl	r1, r1, #8
   2caac:	orr	r1, r1, r2, lsr #24
   2cab0:	orrs	r0, r0, r1
   2cab4:	beq	2cad0 <__flatcc_fb_build_schema@@Base+0xbf8>
   2cab8:	movw	r2, #59691	; 0xe92b
   2cabc:	movt	r2, #4
   2cac0:	b	2ca60 <__flatcc_fb_build_schema@@Base+0xb88>
   2cac4:	movw	r2, #59730	; 0xe952
   2cac8:	movt	r2, #4
   2cacc:	b	2ca60 <__flatcc_fb_build_schema@@Base+0xb88>
   2cad0:	movw	r2, #59626	; 0xe8ea
   2cad4:	movt	r2, #4
   2cad8:	b	2ca60 <__flatcc_fb_build_schema@@Base+0xb88>
   2cadc:	movw	r0, #59206	; 0xe746
   2cae0:	movt	r0, #4
   2cae4:	movw	r1, #58427	; 0xe43b
   2cae8:	movt	r1, #4
   2caec:	movw	r3, #58859	; 0xe5eb
   2caf0:	movt	r3, #4
   2caf4:	movw	r2, #1315	; 0x523
   2caf8:	bl	14a80 <__assert_fail@plt>
   2cafc:	movw	r0, #63620	; 0xf884
   2cb00:	movt	r0, #4
   2cb04:	movw	r1, #58427	; 0xe43b
   2cb08:	movt	r1, #4
   2cb0c:	movw	r3, #58859	; 0xe5eb
   2cb10:	movt	r3, #4
   2cb14:	movw	r2, #1229	; 0x4cd
   2cb18:	bl	14a80 <__assert_fail@plt>
   2cb1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cb20:	add	fp, sp, #28
   2cb24:	sub	sp, sp, #52	; 0x34
   2cb28:	mov	r5, r1
   2cb2c:	mov	r4, r0
   2cb30:	ldrh	r0, [r1, #48]	; 0x30
   2cb34:	cmp	r0, #0
   2cb38:	beq	2cb5c <__flatcc_fb_build_schema@@Base+0xc84>
   2cb3c:	movw	r2, #60154	; 0xeafa
   2cb40:	movt	r2, #4
   2cb44:	mov	r0, r4
   2cb48:	mov	r1, r5
   2cb4c:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2cb50:	mvn	r0, #0
   2cb54:	sub	sp, fp, #28
   2cb58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cb5c:	ldr	r1, [r5, #28]
   2cb60:	add	r3, sp, #4
   2cb64:	mov	r0, r4
   2cb68:	mov	r2, #16
   2cb6c:	bl	2e340 <__flatcc_fb_build_schema@@Base+0x2468>
   2cb70:	strh	r0, [r5, #92]	; 0x5c
   2cb74:	ldr	r0, [sp, #20]
   2cb78:	cmp	r0, #0
   2cb7c:	beq	2cbb4 <__flatcc_fb_build_schema@@Base+0xcdc>
   2cb80:	ldrd	r6, [r0, #8]
   2cb84:	mov	r0, r6
   2cb88:	mov	r1, r7
   2cb8c:	bl	2e528 <__flatcc_fb_build_schema@@Base+0x2650>
   2cb90:	cmp	r0, #0
   2cb94:	beq	2cba0 <__flatcc_fb_build_schema@@Base+0xcc8>
   2cb98:	strh	r6, [r5, #104]	; 0x68
   2cb9c:	b	2cbb4 <__flatcc_fb_build_schema@@Base+0xcdc>
   2cba0:	movw	r2, #60196	; 0xeb24
   2cba4:	movt	r2, #4
   2cba8:	mov	r0, r4
   2cbac:	mov	r1, r5
   2cbb0:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2cbb4:	ldr	r6, [r5, #20]
   2cbb8:	cmp	r6, #0
   2cbbc:	moveq	r0, #0
   2cbc0:	subeq	sp, fp, #28
   2cbc4:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cbc8:	add	r7, r5, #56	; 0x38
   2cbcc:	mov	r9, #0
   2cbd0:	add	r8, sp, #4
   2cbd4:	movw	sl, #60269	; 0xeb6d
   2cbd8:	movt	sl, #4
   2cbdc:	b	2cc14 <__flatcc_fb_build_schema@@Base+0xd3c>
   2cbe0:	ldr	r1, [r4, #152]	; 0x98
   2cbe4:	cmp	r1, #0
   2cbe8:	beq	2cd9c <__flatcc_fb_build_schema@@Base+0xec4>
   2cbec:	cmp	r0, #3
   2cbf0:	bne	2cda8 <__flatcc_fb_build_schema@@Base+0xed0>
   2cbf4:	ldrb	r0, [r6, #72]	; 0x48
   2cbf8:	tst	r0, #128	; 0x80
   2cbfc:	beq	2ccdc <__flatcc_fb_build_schema@@Base+0xe04>
   2cc00:	ldr	r0, [r4, #148]	; 0x94
   2cc04:	cmp	r0, #0
   2cc08:	beq	2cd84 <__flatcc_fb_build_schema@@Base+0xeac>
   2cc0c:	add	r9, r9, #1
   2cc10:	b	2ccdc <__flatcc_fb_build_schema@@Base+0xe04>
   2cc14:	mov	r0, r7
   2cc18:	mov	r1, r6
   2cc1c:	bl	2c320 <__flatcc_fb_build_schema@@Base+0x448>
   2cc20:	cmp	r0, #0
   2cc24:	beq	2cc40 <__flatcc_fb_build_schema@@Base+0xd68>
   2cc28:	mov	r3, r0
   2cc2c:	mov	r0, r4
   2cc30:	mov	r1, r6
   2cc34:	mov	r2, sl
   2cc38:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2cc3c:	b	2cd20 <__flatcc_fb_build_schema@@Base+0xe48>
   2cc40:	ldrh	r0, [r6, #8]
   2cc44:	cmp	r0, #5
   2cc48:	bne	2cd64 <__flatcc_fb_build_schema@@Base+0xe8c>
   2cc4c:	ldr	r0, [r4, #168]	; 0xa8
   2cc50:	ldr	r3, [r4, #172]	; 0xac
   2cc54:	cmp	r3, #0
   2cc58:	movwne	r3, #128	; 0x80
   2cc5c:	cmp	r0, #0
   2cc60:	orrne	r3, r3, #4
   2cc64:	ldr	r1, [r6, #64]	; 0x40
   2cc68:	mov	r0, r4
   2cc6c:	mov	r2, r3
   2cc70:	mov	r3, r8
   2cc74:	bl	2e340 <__flatcc_fb_build_schema@@Base+0x2468>
   2cc78:	strh	r0, [r6, #72]	; 0x48
   2cc7c:	ldrh	r1, [r6, #24]
   2cc80:	cmp	r1, #8
   2cc84:	beq	2ccd4 <__flatcc_fb_build_schema@@Base+0xdfc>
   2cc88:	cmp	r1, #12
   2cc8c:	bne	2cd70 <__flatcc_fb_build_schema@@Base+0xe98>
   2cc90:	ldr	r2, [r6, #16]
   2cc94:	ldr	r1, [r5, #12]
   2cc98:	mov	r0, r4
   2cc9c:	bl	2e214 <__flatcc_fb_build_schema@@Base+0x233c>
   2cca0:	cmp	r0, #0
   2cca4:	beq	2cd00 <__flatcc_fb_build_schema@@Base+0xe28>
   2cca8:	mov	r3, r0
   2ccac:	mov	r0, #14
   2ccb0:	strh	r0, [r6, #24]
   2ccb4:	str	r3, [r6, #16]
   2ccb8:	ldrh	r0, [r3, #8]
   2ccbc:	cmp	r0, #1
   2ccc0:	bne	2cbe0 <__flatcc_fb_build_schema@@Base+0xd08>
   2ccc4:	ldrb	r0, [r6, #72]	; 0x48
   2ccc8:	tst	r0, #128	; 0x80
   2cccc:	beq	2ccdc <__flatcc_fb_build_schema@@Base+0xe04>
   2ccd0:	b	2cd84 <__flatcc_fb_build_schema@@Base+0xeac>
   2ccd4:	ubfx	r0, r0, #7, #1
   2ccd8:	add	r9, r9, r0
   2ccdc:	ldrh	r0, [r6, #56]	; 0x38
   2cce0:	cmp	r0, #0
   2cce4:	beq	2cd20 <__flatcc_fb_build_schema@@Base+0xe48>
   2cce8:	mov	r0, r4
   2ccec:	mov	r1, r6
   2ccf0:	movw	r2, #60620	; 0xeccc
   2ccf4:	movt	r2, #4
   2ccf8:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2ccfc:	b	2cd20 <__flatcc_fb_build_schema@@Base+0xe48>
   2cd00:	ldr	r1, [r6, #16]
   2cd04:	mov	r0, r4
   2cd08:	movw	r2, #60339	; 0xebb3
   2cd0c:	movt	r2, #4
   2cd10:	mov	r3, r6
   2cd14:	bl	28254 <error_ref_sym@@Base>
   2cd18:	mov	r0, #1
   2cd1c:	strh	r0, [r6, #24]
   2cd20:	ldr	r6, [r6]
   2cd24:	cmp	r6, #0
   2cd28:	bne	2cc14 <__flatcc_fb_build_schema@@Base+0xd3c>
   2cd2c:	mov	r0, #0
   2cd30:	cmp	r9, #0
   2cd34:	beq	2cb54 <__flatcc_fb_build_schema@@Base+0xc7c>
   2cd38:	ldrh	r1, [r5, #10]
   2cd3c:	orr	r1, r1, #8
   2cd40:	strh	r1, [r5, #10]
   2cd44:	cmp	r9, #2
   2cd48:	blt	2cb54 <__flatcc_fb_build_schema@@Base+0xc7c>
   2cd4c:	ldr	r1, [r4, #156]	; 0x9c
   2cd50:	cmp	r1, #0
   2cd54:	bne	2cb54 <__flatcc_fb_build_schema@@Base+0xc7c>
   2cd58:	movw	r2, #60669	; 0xecfd
   2cd5c:	movt	r2, #4
   2cd60:	b	2cb44 <__flatcc_fb_build_schema@@Base+0xc6c>
   2cd64:	movw	r2, #60303	; 0xeb8f
   2cd68:	movt	r2, #4
   2cd6c:	b	2cd78 <__flatcc_fb_build_schema@@Base+0xea0>
   2cd70:	movw	r2, #60562	; 0xec92
   2cd74:	movt	r2, #4
   2cd78:	mov	r0, r4
   2cd7c:	mov	r1, r6
   2cd80:	b	2cb4c <__flatcc_fb_build_schema@@Base+0xc74>
   2cd84:	movw	r2, #60453	; 0xec25
   2cd88:	movt	r2, #4
   2cd8c:	mov	r0, r4
   2cd90:	mov	r1, r6
   2cd94:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2cd98:	b	2cdbc <__flatcc_fb_build_schema@@Base+0xee4>
   2cd9c:	movw	r2, #60502	; 0xec56
   2cda0:	movt	r2, #4
   2cda4:	b	2cdb0 <__flatcc_fb_build_schema@@Base+0xed8>
   2cda8:	movw	r2, #60385	; 0xebe1
   2cdac:	movt	r2, #4
   2cdb0:	mov	r0, r4
   2cdb4:	mov	r1, r6
   2cdb8:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2cdbc:	mov	r0, #1
   2cdc0:	strh	r0, [r6, #24]
   2cdc4:	b	2cb50 <__flatcc_fb_build_schema@@Base+0xc78>
   2cdc8:	b	2c3f0 <__flatcc_fb_build_schema@@Base+0x518>
   2cdcc:	ldr	r1, [r1, #4]
   2cdd0:	b	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2cdd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cdd8:	add	fp, sp, #28
   2cddc:	sub	sp, sp, #4
   2cde0:	mov	r4, r0
   2cde4:	ldrh	r0, [r1, #8]
   2cde8:	cmp	r0, #1
   2cdec:	bne	2d0cc <__flatcc_fb_build_schema@@Base+0x11f4>
   2cdf0:	mov	r5, r1
   2cdf4:	ldrh	r0, [r1, #10]
   2cdf8:	tst	r0, #1
   2cdfc:	bne	2d0ec <__flatcc_fb_build_schema@@Base+0x1214>
   2ce00:	mov	r7, #0
   2ce04:	tst	r0, #2
   2ce08:	bne	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2ce0c:	ldr	r1, [r5, #120]	; 0x78
   2ce10:	cmp	r1, #0
   2ce14:	bne	2d10c <__flatcc_fb_build_schema@@Base+0x1234>
   2ce18:	orr	r0, r0, #1
   2ce1c:	strh	r0, [r5, #10]
   2ce20:	ldr	sl, [r5, #20]
   2ce24:	cmp	sl, #0
   2ce28:	beq	2cfb0 <__flatcc_fb_build_schema@@Base+0x10d8>
   2ce2c:	add	r8, r5, #112	; 0x70
   2ce30:	mov	r9, #1
   2ce34:	ldr	r0, [r4, #116]	; 0x74
   2ce38:	cmp	r0, #100	; 0x64
   2ce3c:	bge	2d040 <__flatcc_fb_build_schema@@Base+0x1168>
   2ce40:	ldrh	r0, [sl, #24]
   2ce44:	mvn	r7, #0
   2ce48:	cmp	r0, #8
   2ce4c:	beq	2ce7c <__flatcc_fb_build_schema@@Base+0xfa4>
   2ce50:	cmp	r0, #14
   2ce54:	bne	2d058 <__flatcc_fb_build_schema@@Base+0x1180>
   2ce58:	ldr	r6, [sl, #16]
   2ce5c:	ldrh	r0, [r6, #8]
   2ce60:	cmp	r0, #1
   2ce64:	beq	2cea4 <__flatcc_fb_build_schema@@Base+0xfcc>
   2ce68:	cmp	r0, #3
   2ce6c:	bne	2d06c <__flatcc_fb_build_schema@@Base+0x1194>
   2ce70:	ldrd	r0, [r6, #112]	; 0x70
   2ce74:	strh	r0, [sl, #74]	; 0x4a
   2ce78:	b	2cf14 <__flatcc_fb_build_schema@@Base+0x103c>
   2ce7c:	ldr	r6, [sl, #16]
   2ce80:	mov	r0, r6
   2ce84:	bl	2e30c <__flatcc_fb_build_schema@@Base+0x2434>
   2ce88:	str	r0, [sl, #16]
   2ce8c:	bl	2e330 <__flatcc_fb_build_schema@@Base+0x2458>
   2ce90:	cmp	r0, #0
   2ce94:	beq	2d084 <__flatcc_fb_build_schema@@Base+0x11ac>
   2ce98:	strh	r0, [sl, #74]	; 0x4a
   2ce9c:	mov	r1, #0
   2cea0:	b	2cf14 <__flatcc_fb_build_schema@@Base+0x103c>
   2cea4:	ldrh	r0, [r6, #10]
   2cea8:	tst	r0, #1
   2ceac:	bne	2d0a0 <__flatcc_fb_build_schema@@Base+0x11c8>
   2ceb0:	tst	r0, #2
   2ceb4:	bne	2cf08 <__flatcc_fb_build_schema@@Base+0x1030>
   2ceb8:	ldr	r0, [r4, #188]	; 0xbc
   2cebc:	cmp	r0, #0
   2cec0:	beq	2cedc <__flatcc_fb_build_schema@@Base+0x1004>
   2cec4:	mov	r0, r4
   2cec8:	mov	r1, sl
   2cecc:	movw	r2, #60956	; 0xee1c
   2ced0:	movt	r2, #4
   2ced4:	mov	r3, r6
   2ced8:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2cedc:	ldr	r0, [r4, #116]	; 0x74
   2cee0:	add	r0, r0, #1
   2cee4:	str	r0, [r4, #116]	; 0x74
   2cee8:	mov	r0, r4
   2ceec:	mov	r1, r6
   2cef0:	bl	2cdd4 <__flatcc_fb_build_schema@@Base+0xefc>
   2cef4:	ldr	r1, [r4, #116]	; 0x74
   2cef8:	sub	r1, r1, #1
   2cefc:	str	r1, [r4, #116]	; 0x74
   2cf00:	cmp	r0, #0
   2cf04:	bne	2d0bc <__flatcc_fb_build_schema@@Base+0x11e4>
   2cf08:	ldrh	r0, [r6, #104]	; 0x68
   2cf0c:	strh	r0, [sl, #74]	; 0x4a
   2cf10:	ldrd	r0, [r6, #112]	; 0x70
   2cf14:	strd	r0, [sl, #88]	; 0x58
   2cf18:	ldrh	r2, [sl, #74]	; 0x4a
   2cf1c:	ldrd	r0, [r8]
   2cf20:	mov	r3, #0
   2cf24:	bl	2e598 <__flatcc_fb_build_schema@@Base+0x26c0>
   2cf28:	mov	r2, r0
   2cf2c:	mov	r3, r1
   2cf30:	strd	r2, [sl, #80]	; 0x50
   2cf34:	ldrd	r0, [r8]
   2cf38:	subs	r7, r2, r0
   2cf3c:	sbcs	r7, r3, r1
   2cf40:	bcc	2d024 <__flatcc_fb_build_schema@@Base+0x114c>
   2cf44:	ldrd	r6, [sl, #88]	; 0x58
   2cf48:	adds	r6, r6, r2
   2cf4c:	adcs	r7, r7, r3
   2cf50:	mov	r2, #0
   2cf54:	adc	r2, r2, #0
   2cf58:	cmp	r2, #1
   2cf5c:	beq	2d024 <__flatcc_fb_build_schema@@Base+0x114c>
   2cf60:	subs	r0, r6, r0
   2cf64:	sbcs	r0, r7, r1
   2cf68:	bcc	2cf78 <__flatcc_fb_build_schema@@Base+0x10a0>
   2cf6c:	subs	r0, r6, #65536	; 0x10000
   2cf70:	sbcs	r0, r7, #0
   2cf74:	bcc	2cf8c <__flatcc_fb_build_schema@@Base+0x10b4>
   2cf78:	mov	r0, r4
   2cf7c:	mov	r1, sl
   2cf80:	movw	r2, #61083	; 0xee9b
   2cf84:	movt	r2, #4
   2cf88:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2cf8c:	strd	r6, [r8]
   2cf90:	ldrh	r0, [sl, #74]	; 0x4a
   2cf94:	uxth	r1, r9
   2cf98:	cmp	r1, r0
   2cf9c:	movcc	r9, r0
   2cfa0:	ldr	sl, [sl]
   2cfa4:	cmp	sl, #0
   2cfa8:	bne	2ce34 <__flatcc_fb_build_schema@@Base+0xf5c>
   2cfac:	b	2cfb4 <__flatcc_fb_build_schema@@Base+0x10dc>
   2cfb0:	mov	r9, #1
   2cfb4:	ldrh	r0, [r5, #104]	; 0x68
   2cfb8:	cmp	r0, #0
   2cfbc:	beq	2cfe0 <__flatcc_fb_build_schema@@Base+0x1108>
   2cfc0:	uxth	r1, r9
   2cfc4:	cmp	r1, r0
   2cfc8:	bls	2cfe4 <__flatcc_fb_build_schema@@Base+0x110c>
   2cfcc:	movw	r2, #61134	; 0xeece
   2cfd0:	movt	r2, #4
   2cfd4:	mov	r0, r4
   2cfd8:	mov	r1, r5
   2cfdc:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2cfe0:	strh	r9, [r5, #104]	; 0x68
   2cfe4:	ldrd	r0, [r5, #112]	; 0x70
   2cfe8:	ldrh	r2, [r5, #104]	; 0x68
   2cfec:	mov	r7, #0
   2cff0:	mov	r3, #0
   2cff4:	bl	2e598 <__flatcc_fb_build_schema@@Base+0x26c0>
   2cff8:	str	r1, [r5, #116]	; 0x74
   2cffc:	str	r0, [r5, #112]	; 0x70
   2d000:	ldrh	r0, [r5, #10]
   2d004:	movw	r1, #65532	; 0xfffc
   2d008:	and	r0, r0, r1
   2d00c:	orr	r0, r0, #2
   2d010:	strh	r0, [r5, #10]
   2d014:	ldr	r0, [r4, #396]	; 0x18c
   2d018:	str	r0, [r5, #120]	; 0x78
   2d01c:	str	r5, [r4, #396]	; 0x18c
   2d020:	b	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2d024:	movw	r2, #61062	; 0xee86
   2d028:	movt	r2, #4
   2d02c:	mov	r0, r4
   2d030:	mov	r1, sl
   2d034:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d038:	mvn	r7, #0
   2d03c:	b	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2d040:	movw	r1, #60835	; 0xeda3
   2d044:	movt	r1, #4
   2d048:	mov	r0, r4
   2d04c:	bl	2e208 <__flatcc_fb_build_schema@@Base+0x2330>
   2d050:	mvn	r7, #0
   2d054:	b	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2d058:	cmp	r0, #1
   2d05c:	beq	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2d060:	movw	r2, #60908	; 0xedec
   2d064:	movt	r2, #4
   2d068:	b	2d074 <__flatcc_fb_build_schema@@Base+0x119c>
   2d06c:	movw	r2, #61027	; 0xee63
   2d070:	movt	r2, #4
   2d074:	mov	r0, r4
   2d078:	mov	r1, sl
   2d07c:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d080:	b	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2d084:	movw	r2, #60908	; 0xedec
   2d088:	movt	r2, #4
   2d08c:	mov	r0, r4
   2d090:	mov	r1, sl
   2d094:	mov	r3, r6
   2d098:	bl	2e590 <__flatcc_fb_build_schema@@Base+0x26b8>
   2d09c:	b	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2d0a0:	movw	r2, #60924	; 0xedfc
   2d0a4:	movt	r2, #4
   2d0a8:	mov	r0, r4
   2d0ac:	mov	r1, sl
   2d0b0:	mov	r3, r6
   2d0b4:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2d0b8:	b	2d0c0 <__flatcc_fb_build_schema@@Base+0x11e8>
   2d0bc:	mov	r7, r0
   2d0c0:	mov	r0, r7
   2d0c4:	sub	sp, fp, #28
   2d0c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d0cc:	movw	r0, #52861	; 0xce7d
   2d0d0:	movt	r0, #3
   2d0d4:	movw	r1, #58427	; 0xe43b
   2d0d8:	movt	r1, #4
   2d0dc:	movw	r3, #60729	; 0xed39
   2d0e0:	movt	r3, #4
   2d0e4:	movw	r2, #502	; 0x1f6
   2d0e8:	bl	14a80 <__assert_fail@plt>
   2d0ec:	movw	r0, #60785	; 0xed71
   2d0f0:	movt	r0, #4
   2d0f4:	movw	r1, #58427	; 0xe43b
   2d0f8:	movt	r1, #4
   2d0fc:	movw	r3, #60729	; 0xed39
   2d100:	movt	r3, #4
   2d104:	mov	r2, #504	; 0x1f8
   2d108:	bl	14a80 <__assert_fail@plt>
   2d10c:	movw	r0, #60824	; 0xed98
   2d110:	movt	r0, #4
   2d114:	movw	r1, #58427	; 0xe43b
   2d118:	movt	r1, #4
   2d11c:	movw	r3, #60729	; 0xed39
   2d120:	movt	r3, #4
   2d124:	mov	r2, #508	; 0x1fc
   2d128:	bl	14a80 <__assert_fail@plt>
   2d12c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d130:	add	fp, sp, #28
   2d134:	sub	sp, sp, #196	; 0xc4
   2d138:	mov	r8, r0
   2d13c:	ldrh	r0, [r1, #8]
   2d140:	cmp	r0, #0
   2d144:	bne	2dd60 <__flatcc_fb_build_schema@@Base+0x1e88>
   2d148:	mov	sl, r1
   2d14c:	ldrh	r0, [r1, #48]	; 0x30
   2d150:	cmp	r0, #0
   2d154:	bne	2dd80 <__flatcc_fb_build_schema@@Base+0x1ea8>
   2d158:	ldr	r1, [sl, #28]
   2d15c:	add	r3, sp, #48	; 0x30
   2d160:	mov	r0, r8
   2d164:	mov	r2, #8
   2d168:	bl	2e340 <__flatcc_fb_build_schema@@Base+0x2468>
   2d16c:	strh	r0, [sl, #92]	; 0x5c
   2d170:	ldr	r7, [sl, #20]
   2d174:	cmp	r7, #0
   2d178:	beq	2d1d4 <__flatcc_fb_build_schema@@Base+0x12fc>
   2d17c:	add	r0, r8, #216	; 0xd8
   2d180:	str	r0, [sp, #12]
   2d184:	add	r5, sl, #56	; 0x38
   2d188:	movw	r4, #61323	; 0xef8b
   2d18c:	movt	r4, #4
   2d190:	mov	r0, #0
   2d194:	str	r0, [sp, #36]	; 0x24
   2d198:	mov	r0, #0
   2d19c:	str	r0, [sp, #8]
   2d1a0:	mov	r0, #0
   2d1a4:	str	r0, [sp, #20]
   2d1a8:	mov	r0, #0
   2d1ac:	str	r0, [sp, #40]	; 0x28
   2d1b0:	mov	r0, #0
   2d1b4:	str	r0, [sp, #44]	; 0x2c
   2d1b8:	mov	r0, #0
   2d1bc:	str	r0, [sp, #24]
   2d1c0:	mov	r6, #0
   2d1c4:	mov	r9, #0
   2d1c8:	str	sl, [sp, #32]
   2d1cc:	str	r5, [sp, #16]
   2d1d0:	b	2d3a0 <__flatcc_fb_build_schema@@Base+0x14c8>
   2d1d4:	mov	r0, #0
   2d1d8:	str	r0, [sp, #36]	; 0x24
   2d1dc:	mov	r2, #0
   2d1e0:	mov	r0, #0
   2d1e4:	str	r0, [sp, #20]
   2d1e8:	mov	r0, #0
   2d1ec:	str	r0, [sp, #40]	; 0x28
   2d1f0:	mov	r0, #0
   2d1f4:	str	r0, [sp, #24]
   2d1f8:	mov	r6, #0
   2d1fc:	mov	r9, #0
   2d200:	b	2dbf4 <__flatcc_fb_build_schema@@Base+0x1d1c>
   2d204:	ldr	r2, [r5, #40]	; 0x28
   2d208:	mov	r0, r8
   2d20c:	mov	r1, r7
   2d210:	mov	r3, r9
   2d214:	bl	2eb14 <__flatcc_fb_coerce_scalar_type@@Base>
   2d218:	cmp	r0, #0
   2d21c:	bne	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2d220:	ldr	r0, [r8, #212]	; 0xd4
   2d224:	cmp	r0, #0
   2d228:	beq	2d244 <__flatcc_fb_build_schema@@Base+0x136c>
   2d22c:	ldr	r0, [r7, #16]
   2d230:	add	r0, r0, #72	; 0x48
   2d234:	mov	r1, r9
   2d238:	bl	2e7c4 <__flatcc_fb_build_schema@@Base+0x28ec>
   2d23c:	cmp	r0, #0
   2d240:	beq	2d33c <__flatcc_fb_build_schema@@Base+0x1464>
   2d244:	ldr	r2, [sp, #36]	; 0x24
   2d248:	ldr	r3, [sp, #4]
   2d24c:	b	2d898 <__flatcc_fb_build_schema@@Base+0x19c0>
   2d250:	str	r3, [sp, #4]
   2d254:	ldr	r1, [r6, #4]
   2d258:	cmp	r0, #4
   2d25c:	ldr	r9, [sp, #28]
   2d260:	mov	r0, r8
   2d264:	bne	2d288 <__flatcc_fb_build_schema@@Base+0x13b0>
   2d268:	movw	r2, #62535	; 0xf447
   2d26c:	movt	r2, #4
   2d270:	b	2d384 <__flatcc_fb_build_schema@@Base+0x14ac>
   2d274:	mov	r0, r8
   2d278:	mov	r1, r7
   2d27c:	movw	r2, #62505	; 0xf429
   2d280:	movt	r2, #4
   2d284:	b	2d8f8 <__flatcc_fb_build_schema@@Base+0x1a20>
   2d288:	movw	r2, #62567	; 0xf467
   2d28c:	movt	r2, #4
   2d290:	b	2d384 <__flatcc_fb_build_schema@@Base+0x14ac>
   2d294:	mov	r1, #1
   2d298:	strb	r1, [r2, r0]
   2d29c:	cmp	r5, #0
   2d2a0:	bne	2d2c8 <__flatcc_fb_build_schema@@Base+0x13f0>
   2d2a4:	b	2d90c <__flatcc_fb_build_schema@@Base+0x1a34>
   2d2a8:	ldr	r1, [r6, #4]
   2d2ac:	mov	r0, r8
   2d2b0:	movw	r2, #62649	; 0xf4b9
   2d2b4:	movt	r2, #4
   2d2b8:	bl	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2d2bc:	ldr	r3, [sp, #4]
   2d2c0:	cmp	r5, #0
   2d2c4:	beq	2d90c <__flatcc_fb_build_schema@@Base+0x1a34>
   2d2c8:	ldrh	r0, [r5, #8]
   2d2cc:	cmp	r0, #4
   2d2d0:	bne	2d90c <__flatcc_fb_build_schema@@Base+0x1a34>
   2d2d4:	str	r3, [sp, #4]
   2d2d8:	ldrh	r0, [r7, #24]
   2d2dc:	ldrd	r2, [r9]
   2d2e0:	rsbs	r1, r2, #1
   2d2e4:	rscs	r1, r3, #0
   2d2e8:	ldr	r9, [sp, #28]
   2d2ec:	bcc	2d308 <__flatcc_fb_build_schema@@Base+0x1430>
   2d2f0:	cmp	r0, #11
   2d2f4:	movw	r2, #62777	; 0xf539
   2d2f8:	movt	r2, #4
   2d2fc:	movw	r0, #62697	; 0xf4e9
   2d300:	movt	r0, #4
   2d304:	b	2d378 <__flatcc_fb_build_schema@@Base+0x14a0>
   2d308:	sub	r1, r2, #1
   2d30c:	ldr	r2, [sp, #36]	; 0x24
   2d310:	ldrb	r2, [r2, r1]
   2d314:	cmp	r2, #0
   2d318:	beq	2d354 <__flatcc_fb_build_schema@@Base+0x147c>
   2d31c:	cmp	r2, #2
   2d320:	bne	2d364 <__flatcc_fb_build_schema@@Base+0x148c>
   2d324:	cmp	r0, #11
   2d328:	movw	r2, #62947	; 0xf5e3
   2d32c:	movt	r2, #4
   2d330:	movw	r0, #62850	; 0xf582
   2d334:	movt	r0, #4
   2d338:	b	2d378 <__flatcc_fb_build_schema@@Base+0x14a0>
   2d33c:	mov	r0, r8
   2d340:	mov	r1, r7
   2d344:	movw	r2, #62102	; 0xf296
   2d348:	movt	r2, #4
   2d34c:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d350:	b	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2d354:	ldr	r0, [sp, #36]	; 0x24
   2d358:	mov	r2, #2
   2d35c:	strb	r2, [r0, r1]
   2d360:	b	2d390 <__flatcc_fb_build_schema@@Base+0x14b8>
   2d364:	cmp	r0, #11
   2d368:	movw	r2, #63122	; 0xf692
   2d36c:	movt	r2, #4
   2d370:	movw	r0, #63037	; 0xf63d
   2d374:	movt	r0, #4
   2d378:	moveq	r2, r0
   2d37c:	ldr	r1, [r6, #4]
   2d380:	mov	r0, r8
   2d384:	bl	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2d388:	mov	r0, #1
   2d38c:	str	r0, [sp, #44]	; 0x2c
   2d390:	mov	r6, sl
   2d394:	ldr	r5, [sp, #16]
   2d398:	ldr	r3, [sp, #4]
   2d39c:	b	2d918 <__flatcc_fb_build_schema@@Base+0x1a40>
   2d3a0:	mov	r0, r5
   2d3a4:	mov	r1, r7
   2d3a8:	bl	2c320 <__flatcc_fb_build_schema@@Base+0x448>
   2d3ac:	cmp	r0, #0
   2d3b0:	beq	2d3cc <__flatcc_fb_build_schema@@Base+0x14f4>
   2d3b4:	mov	r3, r0
   2d3b8:	mov	r0, r8
   2d3bc:	mov	r1, r7
   2d3c0:	mov	r2, r4
   2d3c4:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2d3c8:	b	2dbd4 <__flatcc_fb_build_schema@@Base+0x1cfc>
   2d3cc:	ldrh	r0, [r7, #8]
   2d3d0:	cmp	r0, #5
   2d3d4:	bne	2dcd0 <__flatcc_fb_build_schema@@Base+0x1df8>
   2d3d8:	ldrh	r0, [r7, #24]
   2d3dc:	sub	r1, r0, #7
   2d3e0:	cmp	r1, #2
   2d3e4:	bcs	2d3f8 <__flatcc_fb_build_schema@@Base+0x1520>
   2d3e8:	ldr	r0, [r7, #16]
   2d3ec:	bl	2e30c <__flatcc_fb_build_schema@@Base+0x2434>
   2d3f0:	str	r0, [r7, #16]
   2d3f4:	b	2d400 <__flatcc_fb_build_schema@@Base+0x1528>
   2d3f8:	cmp	r0, #1
   2d3fc:	beq	2dbd4 <__flatcc_fb_build_schema@@Base+0x1cfc>
   2d400:	ldr	r1, [r7, #64]	; 0x40
   2d404:	mov	r0, r8
   2d408:	movw	r2, #4038	; 0xfc6
   2d40c:	add	r3, sp, #48	; 0x30
   2d410:	bl	2e340 <__flatcc_fb_build_schema@@Base+0x2468>
   2d414:	strh	r0, [r7, #72]	; 0x48
   2d418:	ldr	r3, [sp, #72]	; 0x48
   2d41c:	cmp	r3, #0
   2d420:	beq	2d434 <__flatcc_fb_build_schema@@Base+0x155c>
   2d424:	ldr	r1, [sl, #12]
   2d428:	mov	r0, r8
   2d42c:	mov	r2, r7
   2d430:	bl	2e608 <__flatcc_fb_build_schema@@Base+0x2730>
   2d434:	ldrb	r0, [r7, #73]	; 0x49
   2d438:	tst	r0, #1
   2d43c:	beq	2d460 <__flatcc_fb_build_schema@@Base+0x1588>
   2d440:	ldrh	r0, [r7, #24]
   2d444:	cmp	r0, #8
   2d448:	bne	2d460 <__flatcc_fb_build_schema@@Base+0x1588>
   2d44c:	mov	r0, r8
   2d450:	mov	r1, r7
   2d454:	movw	r2, #61394	; 0xefd2
   2d458:	movt	r2, #4
   2d45c:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d460:	ldrb	r0, [r7, #73]	; 0x49
   2d464:	tst	r0, #4
   2d468:	beq	2d494 <__flatcc_fb_build_schema@@Base+0x15bc>
   2d46c:	ldrh	r0, [r7, #24]
   2d470:	cmp	r0, #7
   2d474:	ldreq	r0, [r7, #16]
   2d478:	cmpeq	r0, #4
   2d47c:	beq	2d494 <__flatcc_fb_build_schema@@Base+0x15bc>
   2d480:	mov	r0, r8
   2d484:	mov	r1, r7
   2d488:	movw	r2, #61450	; 0xf00a
   2d48c:	movt	r2, #4
   2d490:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d494:	ldrb	r0, [r7, #73]	; 0x49
   2d498:	tst	r0, #8
   2d49c:	beq	2d4c8 <__flatcc_fb_build_schema@@Base+0x15f0>
   2d4a0:	ldrh	r0, [r7, #24]
   2d4a4:	cmp	r0, #7
   2d4a8:	ldreq	r0, [r7, #16]
   2d4ac:	cmpeq	r0, #4
   2d4b0:	beq	2d4c8 <__flatcc_fb_build_schema@@Base+0x15f0>
   2d4b4:	mov	r0, r8
   2d4b8:	mov	r1, r7
   2d4bc:	movw	r2, #61510	; 0xf046
   2d4c0:	movt	r2, #4
   2d4c4:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d4c8:	ldrh	r0, [r7, #72]	; 0x48
   2d4cc:	and	r0, r0, #3072	; 0xc00
   2d4d0:	cmp	r0, #3072	; 0xc00
   2d4d4:	bne	2d4ec <__flatcc_fb_build_schema@@Base+0x1614>
   2d4d8:	mov	r0, r8
   2d4dc:	mov	r1, r7
   2d4e0:	movw	r2, #61573	; 0xf085
   2d4e4:	movt	r2, #4
   2d4e8:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d4ec:	mov	sl, r6
   2d4f0:	orrs	r0, r6, r9
   2d4f4:	ldr	r6, [sp, #52]	; 0x34
   2d4f8:	bne	2d524 <__flatcc_fb_build_schema@@Base+0x164c>
   2d4fc:	cmp	r6, #0
   2d500:	beq	2d524 <__flatcc_fb_build_schema@@Base+0x164c>
   2d504:	ldr	r0, [sp, #12]
   2d508:	ldr	r2, [r0]
   2d50c:	ldr	r0, [r8, #112]	; 0x70
   2d510:	str	r0, [sp, #36]	; 0x24
   2d514:	mov	r1, #0
   2d518:	bl	149d8 <memset@plt>
   2d51c:	mov	r0, #1
   2d520:	str	r0, [sp, #24]
   2d524:	ldr	r0, [sp, #44]	; 0x2c
   2d528:	cmp	r0, #0
   2d52c:	bne	2d598 <__flatcc_fb_build_schema@@Base+0x16c0>
   2d530:	ldr	r0, [sp, #12]
   2d534:	ldrd	r0, [r0]
   2d538:	subs	r0, sl, r0
   2d53c:	sbcs	r0, r9, r1
   2d540:	bcs	2d574 <__flatcc_fb_build_schema@@Base+0x169c>
   2d544:	mov	r0, #0
   2d548:	str	r0, [sp, #44]	; 0x2c
   2d54c:	ldr	r0, [sp, #24]
   2d550:	cmp	r0, #0
   2d554:	bne	2d590 <__flatcc_fb_build_schema@@Base+0x16b8>
   2d558:	mov	r2, #0
   2d55c:	uxth	r0, sl
   2d560:	mov	r1, #0
   2d564:	str	r1, [sp, #44]	; 0x2c
   2d568:	str	r0, [r7, #96]	; 0x60
   2d56c:	str	r2, [r7, #100]	; 0x64
   2d570:	b	2d590 <__flatcc_fb_build_schema@@Base+0x16b8>
   2d574:	mov	r0, r8
   2d578:	mov	r1, r7
   2d57c:	movw	r2, #61628	; 0xf0bc
   2d580:	movt	r2, #4
   2d584:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d588:	mov	r0, #1
   2d58c:	str	r0, [sp, #44]	; 0x2c
   2d590:	adds	sl, sl, #1
   2d594:	adc	r9, r9, #0
   2d598:	ldrh	r0, [r7, #24]
   2d59c:	sub	r0, r0, #7
   2d5a0:	cmp	r0, #5
   2d5a4:	bhi	2d7ac <__flatcc_fb_build_schema@@Base+0x18d4>
   2d5a8:	add	r1, pc, #0
   2d5ac:	ldr	pc, [r1, r0, lsl #2]
   2d5b0:	andeq	sp, r2, r8, asr #11
   2d5b4:	strdeq	sp, [r2], -ip
   2d5b8:			; <UNDEFINED> instruction: 0x0002d6bc
   2d5bc:	ldrdeq	sp, [r2], -ip
   2d5c0:	andeq	sp, r2, r8, lsl #12
   2d5c4:	andeq	sp, r2, r8, asr #14
   2d5c8:	str	r9, [sp, #28]
   2d5cc:	ldr	r0, [r7, #16]
   2d5d0:	bl	2e330 <__flatcc_fb_build_schema@@Base+0x2458>
   2d5d4:	mov	r5, #0
   2d5d8:	str	r0, [r7, #88]	; 0x58
   2d5dc:	str	r5, [r7, #92]	; 0x5c
   2d5e0:	strh	r0, [r7, #74]	; 0x4a
   2d5e4:	ldrh	r0, [r7, #56]	; 0x38
   2d5e8:	cmp	r0, #0
   2d5ec:	beq	2d808 <__flatcc_fb_build_schema@@Base+0x1930>
   2d5f0:	mov	r0, r8
   2d5f4:	mov	r1, r7
   2d5f8:	movw	r2, #61710	; 0xf10e
   2d5fc:	movt	r2, #4
   2d600:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d604:	b	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2d608:	str	r9, [sp, #28]
   2d60c:	ldr	r2, [r7, #16]
   2d610:	ldr	r0, [sp, #32]
   2d614:	ldr	r1, [r0, #12]
   2d618:	mov	r0, r8
   2d61c:	bl	2e214 <__flatcc_fb_build_schema@@Base+0x233c>
   2d620:	cmp	r0, #0
   2d624:	beq	2d7cc <__flatcc_fb_build_schema@@Base+0x18f4>
   2d628:	mov	r5, r0
   2d62c:	ldrh	r0, [r0, #8]
   2d630:	cmp	r0, #4
   2d634:	bhi	2da18 <__flatcc_fb_build_schema@@Base+0x1b40>
   2d638:	cmp	r0, #2
   2d63c:	beq	2da18 <__flatcc_fb_build_schema@@Base+0x1b40>
   2d640:	ldrh	r0, [r7, #56]	; 0x38
   2d644:	cmp	r0, #0
   2d648:	bne	2db18 <__flatcc_fb_build_schema@@Base+0x1c40>
   2d64c:	str	r5, [r7, #16]
   2d650:	mov	r0, #15
   2d654:	strh	r0, [r7, #24]
   2d658:	ldrd	r0, [r5, #112]	; 0x70
   2d65c:	strd	r0, [r7, #88]	; 0x58
   2d660:	ldrh	r0, [r5, #104]	; 0x68
   2d664:	strh	r0, [r7, #74]	; 0x4a
   2d668:	mov	r3, #0
   2d66c:	ldr	r0, [sp, #44]	; 0x2c
   2d670:	cmp	r0, #0
   2d674:	bne	2d894 <__flatcc_fb_build_schema@@Base+0x19bc>
   2d678:	ldrh	r0, [r5, #8]
   2d67c:	cmp	r0, #4
   2d680:	ldr	r2, [sp, #36]	; 0x24
   2d684:	bne	2d898 <__flatcc_fb_build_schema@@Base+0x19c0>
   2d688:	ldr	r0, [sp, #24]
   2d68c:	cmp	r0, #0
   2d690:	uxtheq	r0, sl
   2d694:	moveq	r1, #0
   2d698:	strdeq	r0, [r7, #96]	; 0x60
   2d69c:	adds	sl, sl, #1
   2d6a0:	ldr	r0, [sp, #28]
   2d6a4:	adc	r0, r0, #0
   2d6a8:	str	r0, [sp, #28]
   2d6ac:	mov	r3, #0
   2d6b0:	cmp	r6, #0
   2d6b4:	bne	2d8ac <__flatcc_fb_build_schema@@Base+0x19d4>
   2d6b8:	b	2d8d4 <__flatcc_fb_build_schema@@Base+0x19fc>
   2d6bc:	ldrh	r0, [r7, #56]	; 0x38
   2d6c0:	cmp	r0, #0
   2d6c4:	beq	2d7e8 <__flatcc_fb_build_schema@@Base+0x1910>
   2d6c8:	mov	r0, r8
   2d6cc:	mov	r1, r7
   2d6d0:	movw	r2, #61787	; 0xf15b
   2d6d4:	movt	r2, #4
   2d6d8:	b	2d7bc <__flatcc_fb_build_schema@@Base+0x18e4>
   2d6dc:	ldrh	r0, [r7, #56]	; 0x38
   2d6e0:	cmp	r0, #0
   2d6e4:	beq	2d7f8 <__flatcc_fb_build_schema@@Base+0x1920>
   2d6e8:	mov	r0, r8
   2d6ec:	mov	r1, r7
   2d6f0:	movw	r2, #61752	; 0xf138
   2d6f4:	movt	r2, #4
   2d6f8:	b	2d7bc <__flatcc_fb_build_schema@@Base+0x18e4>
   2d6fc:	str	r9, [sp, #28]
   2d700:	add	r5, r7, #48	; 0x30
   2d704:	ldrh	r0, [r7, #56]	; 0x38
   2d708:	cmp	r0, #13
   2d70c:	bne	2d840 <__flatcc_fb_build_schema@@Base+0x1968>
   2d710:	ldr	r3, [r5]
   2d714:	ldr	r0, [sp, #32]
   2d718:	ldr	r1, [r0, #12]
   2d71c:	str	r5, [sp]
   2d720:	mov	r0, r8
   2d724:	mov	r2, #0
   2d728:	bl	2e6d4 <__flatcc_fb_build_schema@@Base+0x27fc>
   2d72c:	cmp	r0, #0
   2d730:	beq	2d83c <__flatcc_fb_build_schema@@Base+0x1964>
   2d734:	ldr	r1, [r7, #48]	; 0x30
   2d738:	mov	r0, r8
   2d73c:	movw	r2, #61660	; 0xf0dc
   2d740:	movt	r2, #4
   2d744:	b	2d7dc <__flatcc_fb_build_schema@@Base+0x1904>
   2d748:	str	r9, [sp, #28]
   2d74c:	ldr	r2, [r7, #16]
   2d750:	ldr	r0, [sp, #32]
   2d754:	ldr	r1, [r0, #12]
   2d758:	mov	r0, r8
   2d75c:	bl	2e214 <__flatcc_fb_build_schema@@Base+0x233c>
   2d760:	cmp	r0, #0
   2d764:	beq	2d810 <__flatcc_fb_build_schema@@Base+0x1938>
   2d768:	mov	r5, r0
   2d76c:	ldrh	r0, [r0, #8]
   2d770:	cmp	r0, #4
   2d774:	bhi	2dba4 <__flatcc_fb_build_schema@@Base+0x1ccc>
   2d778:	mov	r3, #0
   2d77c:	add	r1, pc, #0
   2d780:	ldr	pc, [r1, r0, lsl #2]
   2d784:	andeq	sp, r2, r8, asr sl
   2d788:	andeq	sp, r2, r8, asr sl
   2d78c:	muleq	r2, r8, r7
   2d790:	andeq	sp, r2, r4, lsr sl
   2d794:	andeq	sp, r2, r8, asr sl
   2d798:	mov	r0, r8
   2d79c:	mov	r1, r7
   2d7a0:	movw	r2, #61928	; 0xf1e8
   2d7a4:	movt	r2, #4
   2d7a8:	b	2dbb4 <__flatcc_fb_build_schema@@Base+0x1cdc>
   2d7ac:	mov	r0, r8
   2d7b0:	mov	r1, r7
   2d7b4:	movw	r2, #62346	; 0xf38a
   2d7b8:	movt	r2, #4
   2d7bc:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d7c0:	mov	r0, #1
   2d7c4:	strh	r0, [r7, #24]
   2d7c8:	b	2dbc8 <__flatcc_fb_build_schema@@Base+0x1cf0>
   2d7cc:	ldr	r1, [r7, #16]
   2d7d0:	mov	r0, r8
   2d7d4:	movw	r2, #62219	; 0xf30b
   2d7d8:	movt	r2, #4
   2d7dc:	mov	r3, r7
   2d7e0:	bl	28254 <error_ref_sym@@Base>
   2d7e4:	b	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2d7e8:	str	r9, [sp, #28]
   2d7ec:	mov	r5, #0
   2d7f0:	mov	r3, #0
   2d7f4:	b	2d894 <__flatcc_fb_build_schema@@Base+0x19bc>
   2d7f8:	str	r9, [sp, #28]
   2d7fc:	ldr	r3, [r8, #164]	; 0xa4
   2d800:	mov	r5, #0
   2d804:	b	2d894 <__flatcc_fb_build_schema@@Base+0x19bc>
   2d808:	mov	r3, #0
   2d80c:	b	2d894 <__flatcc_fb_build_schema@@Base+0x19bc>
   2d810:	ldr	r1, [r7, #16]
   2d814:	mov	r0, r8
   2d818:	movw	r2, #61829	; 0xf185
   2d81c:	movt	r2, #4
   2d820:	mov	r3, r7
   2d824:	bl	28254 <error_ref_sym@@Base>
   2d828:	mov	r1, #1
   2d82c:	mov	r0, #1
   2d830:	str	r0, [sp, #44]	; 0x2c
   2d834:	strh	r1, [r7, #24]
   2d838:	b	2dbc4 <__flatcc_fb_build_schema@@Base+0x1cec>
   2d83c:	ldrh	r0, [r7, #56]	; 0x38
   2d840:	cmp	r0, #0
   2d844:	bne	2d85c <__flatcc_fb_build_schema@@Base+0x1984>
   2d848:	mov	r0, #5
   2d84c:	strh	r0, [r7, #56]	; 0x38
   2d850:	mov	r0, #0
   2d854:	str	r0, [r5]
   2d858:	str	r0, [r5, #4]
   2d85c:	ldr	r2, [r7, #16]
   2d860:	mov	r0, r8
   2d864:	mov	r1, r7
   2d868:	mov	r3, r5
   2d86c:	bl	2eb14 <__flatcc_fb_coerce_scalar_type@@Base>
   2d870:	cmp	r0, #0
   2d874:	bne	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2d878:	ldr	r0, [r7, #16]
   2d87c:	bl	2e330 <__flatcc_fb_build_schema@@Base+0x2458>
   2d880:	mov	r5, #0
   2d884:	str	r0, [r7, #88]	; 0x58
   2d888:	str	r5, [r7, #92]	; 0x5c
   2d88c:	strh	r0, [r7, #74]	; 0x4a
   2d890:	mov	r3, #1
   2d894:	ldr	r2, [sp, #36]	; 0x24
   2d898:	ldr	r0, [sp, #44]	; 0x2c
   2d89c:	cmp	r0, #0
   2d8a0:	bne	2d90c <__flatcc_fb_build_schema@@Base+0x1a34>
   2d8a4:	cmp	r6, #0
   2d8a8:	beq	2d8d4 <__flatcc_fb_build_schema@@Base+0x19fc>
   2d8ac:	ldr	r0, [sp, #24]
   2d8b0:	cmp	r0, #0
   2d8b4:	bne	2d8d4 <__flatcc_fb_build_schema@@Base+0x19fc>
   2d8b8:	ldr	r1, [r6, #4]
   2d8bc:	mov	r0, r8
   2d8c0:	movw	r2, #62386	; 0xf3b2
   2d8c4:	movt	r2, #4
   2d8c8:	mov	r5, r3
   2d8cc:	bl	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2d8d0:	b	2d900 <__flatcc_fb_build_schema@@Base+0x1a28>
   2d8d4:	cmp	r6, #0
   2d8d8:	bne	2d954 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2d8dc:	ldr	r0, [sp, #24]
   2d8e0:	cmp	r0, #0
   2d8e4:	beq	2d954 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2d8e8:	mov	r0, r8
   2d8ec:	mov	r1, r7
   2d8f0:	movw	r2, #62447	; 0xf3ef
   2d8f4:	movt	r2, #4
   2d8f8:	mov	r5, r3
   2d8fc:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d900:	mov	r3, r5
   2d904:	mov	r0, #1
   2d908:	str	r0, [sp, #44]	; 0x2c
   2d90c:	ldr	r9, [sp, #28]
   2d910:	mov	r6, sl
   2d914:	ldr	r5, [sp, #16]
   2d918:	ldrb	r0, [r7, #72]	; 0x48
   2d91c:	tst	r0, #128	; 0x80
   2d920:	ldr	sl, [sp, #32]
   2d924:	beq	2dbd4 <__flatcc_fb_build_schema@@Base+0x1cfc>
   2d928:	ldr	r0, [sp, #8]
   2d92c:	add	r0, r0, #1
   2d930:	str	r0, [sp, #8]
   2d934:	cmp	r3, #0
   2d938:	bne	2dbd4 <__flatcc_fb_build_schema@@Base+0x1cfc>
   2d93c:	mov	r0, r8
   2d940:	mov	r1, r7
   2d944:	movw	r2, #63200	; 0xf6e0
   2d948:	movt	r2, #4
   2d94c:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2d950:	b	2dbd4 <__flatcc_fb_build_schema@@Base+0x1cfc>
   2d954:	cmp	r6, #0
   2d958:	beq	2d9c0 <__flatcc_fb_build_schema@@Base+0x1ae8>
   2d95c:	ldrh	r0, [r6, #16]
   2d960:	cmp	r0, #5
   2d964:	bne	2d250 <__flatcc_fb_build_schema@@Base+0x1378>
   2d968:	ldrd	r0, [r6, #8]
   2d96c:	ldr	r2, [sp, #12]
   2d970:	ldm	r2, {r2, r9}
   2d974:	subs	r2, r0, r2
   2d978:	sbcs	r1, r1, r9
   2d97c:	bcs	2d274 <__flatcc_fb_build_schema@@Base+0x139c>
   2d980:	uxth	ip, r0
   2d984:	mov	r1, #0
   2d988:	str	ip, [r7, #96]	; 0x60
   2d98c:	str	r1, [r7, #100]	; 0x64
   2d990:	ldr	r2, [sp, #20]
   2d994:	subs	r1, r2, ip
   2d998:	ldr	r0, [sp, #40]	; 0x28
   2d99c:	sbcs	r1, r0, #0
   2d9a0:	mov	r1, #0
   2d9a4:	movwcc	r1, #1
   2d9a8:	cmp	r1, #0
   2d9ac:	movne	r2, ip
   2d9b0:	str	r2, [sp, #20]
   2d9b4:	movwne	r0, #0
   2d9b8:	str	r0, [sp, #40]	; 0x28
   2d9bc:	ldr	r2, [sp, #36]	; 0x24
   2d9c0:	mov	r0, #0
   2d9c4:	str	r0, [sp, #44]	; 0x2c
   2d9c8:	ldr	r0, [sp, #24]
   2d9cc:	cmp	r0, #0
   2d9d0:	beq	2d90c <__flatcc_fb_build_schema@@Base+0x1a34>
   2d9d4:	mov	r9, r7
   2d9d8:	ldr	r0, [r9, #96]!	; 0x60
   2d9dc:	ldrb	r1, [r2, r0]
   2d9e0:	cmp	r1, #0
   2d9e4:	beq	2d294 <__flatcc_fb_build_schema@@Base+0x13bc>
   2d9e8:	str	r3, [sp, #4]
   2d9ec:	cmp	r1, #2
   2d9f0:	bne	2d2a8 <__flatcc_fb_build_schema@@Base+0x13d0>
   2d9f4:	ldr	r1, [r6, #4]
   2d9f8:	mov	r0, r8
   2d9fc:	movw	r2, #62595	; 0xf483
   2da00:	movt	r2, #4
   2da04:	bl	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2da08:	mov	r0, #1
   2da0c:	str	r0, [sp, #44]	; 0x2c
   2da10:	ldr	r9, [sp, #28]
   2da14:	b	2d390 <__flatcc_fb_build_schema@@Base+0x14b8>
   2da18:	ldr	r3, [r7, #16]
   2da1c:	mov	r0, r8
   2da20:	mov	r1, r7
   2da24:	movw	r2, #62271	; 0xf33f
   2da28:	movt	r2, #4
   2da2c:	bl	2e590 <__flatcc_fb_build_schema@@Base+0x26b8>
   2da30:	b	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2da34:	ldrb	r0, [r7, #73]	; 0x49
   2da38:	tst	r0, #1
   2da3c:	beq	2da54 <__flatcc_fb_build_schema@@Base+0x1b7c>
   2da40:	mov	r0, r8
   2da44:	mov	r1, r7
   2da48:	movw	r2, #61874	; 0xf1b2
   2da4c:	movt	r2, #4
   2da50:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2da54:	ldr	r3, [r8, #148]	; 0x94
   2da58:	str	r5, [r7, #16]
   2da5c:	mov	r0, #14
   2da60:	strh	r0, [r7, #24]
   2da64:	ldrd	r0, [r5, #112]	; 0x70
   2da68:	strd	r0, [r7, #88]	; 0x58
   2da6c:	ldrh	r0, [r5, #104]	; 0x68
   2da70:	strh	r0, [r7, #74]	; 0x4a
   2da74:	ldrh	r0, [r5, #8]
   2da78:	ldr	r1, [sp, #44]	; 0x2c
   2da7c:	cmp	r1, #0
   2da80:	ldr	r2, [sp, #36]	; 0x24
   2da84:	cmpeq	r0, #4
   2da88:	bne	2dabc <__flatcc_fb_build_schema@@Base+0x1be4>
   2da8c:	ldr	r1, [sp, #24]
   2da90:	cmp	r1, #0
   2da94:	bne	2daac <__flatcc_fb_build_schema@@Base+0x1bd4>
   2da98:	uxth	r2, sl
   2da9c:	mov	r1, #0
   2daa0:	str	r2, [r7, #96]	; 0x60
   2daa4:	str	r1, [r7, #100]	; 0x64
   2daa8:	ldr	r2, [sp, #36]	; 0x24
   2daac:	adds	sl, sl, #1
   2dab0:	ldr	r1, [sp, #28]
   2dab4:	adc	r1, r1, #0
   2dab8:	str	r1, [sp, #28]
   2dabc:	add	r9, r7, #48	; 0x30
   2dac0:	ldrh	r1, [r7, #56]	; 0x38
   2dac4:	cmp	r1, #0
   2dac8:	beq	2db30 <__flatcc_fb_build_schema@@Base+0x1c58>
   2dacc:	cmp	r0, #3
   2dad0:	bne	2db18 <__flatcc_fb_build_schema@@Base+0x1c40>
   2dad4:	str	r3, [sp, #4]
   2dad8:	cmp	r1, #13
   2dadc:	bne	2d204 <__flatcc_fb_build_schema@@Base+0x132c>
   2dae0:	ldr	r3, [r9]
   2dae4:	ldr	r0, [sp, #32]
   2dae8:	ldr	r1, [r0, #12]
   2daec:	str	r9, [sp]
   2daf0:	mov	r0, r8
   2daf4:	mov	r2, r5
   2daf8:	bl	2e6d4 <__flatcc_fb_build_schema@@Base+0x27fc>
   2dafc:	cmp	r0, #0
   2db00:	beq	2d244 <__flatcc_fb_build_schema@@Base+0x136c>
   2db04:	ldr	r1, [r7, #48]	; 0x30
   2db08:	mov	r0, r8
   2db0c:	movw	r2, #62054	; 0xf266
   2db10:	movt	r2, #4
   2db14:	b	2d7dc <__flatcc_fb_build_schema@@Base+0x1904>
   2db18:	mov	r0, r8
   2db1c:	mov	r1, r7
   2db20:	movw	r2, #62010	; 0xf23a
   2db24:	movt	r2, #4
   2db28:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2db2c:	b	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2db30:	cmp	r0, #3
   2db34:	bne	2d898 <__flatcc_fb_build_schema@@Base+0x19c0>
   2db38:	str	r3, [sp, #4]
   2db3c:	mov	r0, #5
   2db40:	strh	r0, [r7, #56]	; 0x38
   2db44:	mov	r0, #0
   2db48:	str	r0, [r9]
   2db4c:	str	r0, [r9, #4]
   2db50:	ldr	r2, [r5, #40]	; 0x28
   2db54:	mov	r0, r8
   2db58:	mov	r1, r5
   2db5c:	mov	r3, r9
   2db60:	bl	2eb14 <__flatcc_fb_coerce_scalar_type@@Base>
   2db64:	cmp	r0, #0
   2db68:	bne	2dbbc <__flatcc_fb_build_schema@@Base+0x1ce4>
   2db6c:	ldr	r0, [r8, #212]	; 0xd4
   2db70:	cmp	r0, #0
   2db74:	beq	2d244 <__flatcc_fb_build_schema@@Base+0x136c>
   2db78:	ldr	r0, [r7, #16]
   2db7c:	add	r0, r0, #72	; 0x48
   2db80:	mov	r1, r9
   2db84:	bl	2e7c4 <__flatcc_fb_build_schema@@Base+0x28ec>
   2db88:	cmp	r0, #0
   2db8c:	bne	2d244 <__flatcc_fb_build_schema@@Base+0x136c>
   2db90:	mov	r0, r8
   2db94:	mov	r1, r7
   2db98:	movw	r2, #62150	; 0xf2c6
   2db9c:	movt	r2, #4
   2dba0:	b	2dbb4 <__flatcc_fb_build_schema@@Base+0x1cdc>
   2dba4:	mov	r0, r8
   2dba8:	mov	r1, r7
   2dbac:	movw	r2, #61972	; 0xf214
   2dbb0:	movt	r2, #4
   2dbb4:	mov	r3, r5
   2dbb8:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2dbbc:	mov	r0, #1
   2dbc0:	strh	r0, [r7, #24]
   2dbc4:	ldr	r9, [sp, #28]
   2dbc8:	mov	r6, sl
   2dbcc:	ldr	sl, [sp, #32]
   2dbd0:	ldr	r5, [sp, #16]
   2dbd4:	ldr	r7, [r7]
   2dbd8:	cmp	r7, #0
   2dbdc:	bne	2d3a0 <__flatcc_fb_build_schema@@Base+0x14c8>
   2dbe0:	mov	r0, #0
   2dbe4:	ldr	r1, [sp, #44]	; 0x2c
   2dbe8:	cmp	r1, #0
   2dbec:	ldr	r2, [sp, #8]
   2dbf0:	bne	2dc08 <__flatcc_fb_build_schema@@Base+0x1d30>
   2dbf4:	str	r6, [sl, #96]	; 0x60
   2dbf8:	str	r9, [sl, #100]	; 0x64
   2dbfc:	mov	r0, #1
   2dc00:	mov	r1, #0
   2dc04:	str	r1, [sp, #44]	; 0x2c
   2dc08:	ldr	r1, [sp, #20]
   2dc0c:	subs	r1, r1, r6
   2dc10:	ldr	r1, [sp, #40]	; 0x28
   2dc14:	sbcs	r1, r1, r9
   2dc18:	bcc	2dd08 <__flatcc_fb_build_schema@@Base+0x1e30>
   2dc1c:	orrs	r1, r6, r9
   2dc20:	beq	2dd08 <__flatcc_fb_build_schema@@Base+0x1e30>
   2dc24:	ldr	r1, [sp, #24]
   2dc28:	cmp	r1, #0
   2dc2c:	cmpne	r0, #0
   2dc30:	beq	2dd08 <__flatcc_fb_build_schema@@Base+0x1e30>
   2dc34:	ldr	r0, [sp, #20]
   2dc38:	ldr	r1, [sp, #40]	; 0x28
   2dc3c:	orrs	r0, r0, r1
   2dc40:	mov	r0, #1
   2dc44:	str	r0, [sp, #44]	; 0x2c
   2dc48:	beq	2dd08 <__flatcc_fb_build_schema@@Base+0x1e30>
   2dc4c:	str	r2, [sp, #8]
   2dc50:	mov	r6, #0
   2dc54:	mov	r4, #10
   2dc58:	add	r7, sp, #96	; 0x60
   2dc5c:	movw	r9, #63271	; 0xf727
   2dc60:	movt	r9, #4
   2dc64:	mov	r5, #0
   2dc68:	ldr	r1, [sp, #36]	; 0x24
   2dc6c:	ldr	r2, [sp, #20]
   2dc70:	ldrb	r0, [r1, r6]
   2dc74:	cmp	r0, #0
   2dc78:	bne	2dcb4 <__flatcc_fb_build_schema@@Base+0x1ddc>
   2dc7c:	cmp	r4, #0
   2dc80:	beq	2dcf0 <__flatcc_fb_build_schema@@Base+0x1e18>
   2dc84:	mov	r0, r7
   2dc88:	mov	r1, r9
   2dc8c:	mov	r2, r6
   2dc90:	mov	r3, r5
   2dc94:	bl	14a2c <sprintf@plt>
   2dc98:	mov	r0, r8
   2dc9c:	mov	r1, sl
   2dca0:	mov	r2, r7
   2dca4:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2dca8:	ldr	r2, [sp, #20]
   2dcac:	ldr	r1, [sp, #36]	; 0x24
   2dcb0:	sub	r4, r4, #1
   2dcb4:	adds	r6, r6, #1
   2dcb8:	adc	r5, r5, #0
   2dcbc:	subs	r0, r6, r2
   2dcc0:	ldr	r0, [sp, #40]	; 0x28
   2dcc4:	sbcs	r0, r5, r0
   2dcc8:	bcc	2dc70 <__flatcc_fb_build_schema@@Base+0x1d98>
   2dccc:	b	2dd04 <__flatcc_fb_build_schema@@Base+0x1e2c>
   2dcd0:	movw	r2, #61357	; 0xefad
   2dcd4:	movt	r2, #4
   2dcd8:	mov	r0, r8
   2dcdc:	mov	r1, r7
   2dce0:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2dce4:	mvn	r0, #0
   2dce8:	sub	sp, fp, #28
   2dcec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dcf0:	movw	r2, #63249	; 0xf711
   2dcf4:	movt	r2, #4
   2dcf8:	mov	r0, r8
   2dcfc:	mov	r1, sl
   2dd00:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2dd04:	ldr	r2, [sp, #8]
   2dd08:	mov	r0, #0
   2dd0c:	cmp	r2, #0
   2dd10:	beq	2dd4c <__flatcc_fb_build_schema@@Base+0x1e74>
   2dd14:	ldrh	r1, [sl, #10]
   2dd18:	orr	r1, r1, #8
   2dd1c:	strh	r1, [sl, #10]
   2dd20:	cmp	r2, #2
   2dd24:	blt	2dd4c <__flatcc_fb_build_schema@@Base+0x1e74>
   2dd28:	ldr	r1, [r8, #156]	; 0x9c
   2dd2c:	cmp	r1, #0
   2dd30:	bne	2dd4c <__flatcc_fb_build_schema@@Base+0x1e74>
   2dd34:	movw	r2, #60669	; 0xecfd
   2dd38:	movt	r2, #4
   2dd3c:	mov	r0, r8
   2dd40:	mov	r1, sl
   2dd44:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2dd48:	mvn	r0, #0
   2dd4c:	ldr	r1, [sp, #44]	; 0x2c
   2dd50:	cmp	r1, #0
   2dd54:	mvnne	r0, #0
   2dd58:	sub	sp, fp, #28
   2dd5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dd60:	movw	r0, #51128	; 0xc7b8
   2dd64:	movt	r0, #3
   2dd68:	movw	r1, #58427	; 0xe43b
   2dd6c:	movt	r1, #4
   2dd70:	movw	r3, #61253	; 0xef45
   2dd74:	movt	r3, #4
   2dd78:	movw	r2, #769	; 0x301
   2dd7c:	bl	14a80 <__assert_fail@plt>
   2dd80:	movw	r0, #61308	; 0xef7c
   2dd84:	movt	r0, #4
   2dd88:	movw	r1, #58427	; 0xe43b
   2dd8c:	movt	r1, #4
   2dd90:	movw	r3, #61253	; 0xef45
   2dd94:	movt	r3, #4
   2dd98:	movw	r2, #770	; 0x302
   2dd9c:	bl	14a80 <__assert_fail@plt>
   2dda0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dda4:	add	fp, sp, #28
   2dda8:	sub	sp, sp, #52	; 0x34
   2ddac:	mov	r4, r0
   2ddb0:	ldrh	r0, [r1, #8]
   2ddb4:	cmp	r0, #2
   2ddb8:	bne	2dfb8 <__flatcc_fb_build_schema@@Base+0x20e0>
   2ddbc:	mov	r5, r1
   2ddc0:	ldrh	r0, [r1, #48]	; 0x30
   2ddc4:	cmp	r0, #0
   2ddc8:	bne	2dfd8 <__flatcc_fb_build_schema@@Base+0x2100>
   2ddcc:	ldr	r0, [r5, #28]
   2ddd0:	cmp	r0, #0
   2ddd4:	beq	2ddec <__flatcc_fb_build_schema@@Base+0x1f14>
   2ddd8:	movw	r2, #63748	; 0xf904
   2dddc:	movt	r2, #4
   2dde0:	mov	r0, r4
   2dde4:	mov	r1, r5
   2dde8:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2ddec:	ldr	r6, [r5, #20]
   2ddf0:	cmp	r6, #0
   2ddf4:	beq	2df8c <__flatcc_fb_build_schema@@Base+0x20b4>
   2ddf8:	add	r7, r5, #56	; 0x38
   2ddfc:	mov	sl, #1
   2de00:	movw	r8, #63816	; 0xf948
   2de04:	movt	r8, #4
   2de08:	movw	r9, #63784	; 0xf928
   2de0c:	movt	r9, #4
   2de10:	b	2df58 <__flatcc_fb_build_schema@@Base+0x2080>
   2de14:	ldrh	r0, [r6, #8]
   2de18:	cmp	r0, #5
   2de1c:	bne	2df98 <__flatcc_fb_build_schema@@Base+0x20c0>
   2de20:	ldrh	r0, [r6, #56]	; 0x38
   2de24:	cmp	r0, #0
   2de28:	beq	2de3c <__flatcc_fb_build_schema@@Base+0x1f64>
   2de2c:	mov	r0, r4
   2de30:	mov	r1, r6
   2de34:	mov	r2, r8
   2de38:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2de3c:	ldrh	r0, [r6, #24]
   2de40:	cmp	r0, #1
   2de44:	beq	2df80 <__flatcc_fb_build_schema@@Base+0x20a8>
   2de48:	cmp	r0, #12
   2de4c:	beq	2de64 <__flatcc_fb_build_schema@@Base+0x1f8c>
   2de50:	mov	r0, r4
   2de54:	mov	r1, r6
   2de58:	movw	r2, #63880	; 0xf988
   2de5c:	movt	r2, #4
   2de60:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2de64:	ldr	r2, [r6, #32]
   2de68:	ldr	r1, [r5, #12]
   2de6c:	mov	r0, r4
   2de70:	bl	2e214 <__flatcc_fb_build_schema@@Base+0x233c>
   2de74:	cmp	r0, #0
   2de78:	beq	2dea8 <__flatcc_fb_build_schema@@Base+0x1fd0>
   2de7c:	mov	r3, r0
   2de80:	ldrh	r0, [r0, #8]
   2de84:	cmp	r0, #0
   2de88:	beq	2dec8 <__flatcc_fb_build_schema@@Base+0x1ff0>
   2de8c:	mov	r0, r4
   2de90:	mov	r1, r6
   2de94:	movw	r2, #63991	; 0xf9f7
   2de98:	movt	r2, #4
   2de9c:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2dea0:	strh	sl, [r6, #24]
   2dea4:	b	2df80 <__flatcc_fb_build_schema@@Base+0x20a8>
   2dea8:	ldr	r1, [r6, #32]
   2deac:	mov	r0, r4
   2deb0:	movw	r2, #63941	; 0xf9c5
   2deb4:	movt	r2, #4
   2deb8:	mov	r3, r6
   2debc:	bl	28254 <error_ref_sym@@Base>
   2dec0:	strh	sl, [r6, #24]
   2dec4:	b	2df80 <__flatcc_fb_build_schema@@Base+0x20a8>
   2dec8:	str	r3, [r6, #32]
   2decc:	mov	r0, #14
   2ded0:	strh	r0, [r6, #40]	; 0x28
   2ded4:	ldr	r2, [r6, #16]
   2ded8:	ldr	r1, [r5, #12]
   2dedc:	mov	r0, r4
   2dee0:	bl	2e214 <__flatcc_fb_build_schema@@Base+0x233c>
   2dee4:	cmp	r0, #0
   2dee8:	beq	2df10 <__flatcc_fb_build_schema@@Base+0x2038>
   2deec:	mov	r3, r0
   2def0:	ldrh	r0, [r0, #8]
   2def4:	cmp	r0, #0
   2def8:	beq	2df24 <__flatcc_fb_build_schema@@Base+0x204c>
   2defc:	mov	r0, r4
   2df00:	mov	r1, r6
   2df04:	movw	r2, #64096	; 0xfa60
   2df08:	movt	r2, #4
   2df0c:	b	2de9c <__flatcc_fb_build_schema@@Base+0x1fc4>
   2df10:	ldr	r1, [r6, #16]
   2df14:	mov	r0, r4
   2df18:	movw	r2, #64045	; 0xfa2d
   2df1c:	movt	r2, #4
   2df20:	b	2deb8 <__flatcc_fb_build_schema@@Base+0x1fe0>
   2df24:	mov	r0, #0
   2df28:	str	r0, [r6, #88]	; 0x58
   2df2c:	str	r0, [r6, #92]	; 0x5c
   2df30:	str	r3, [r6, #16]
   2df34:	mov	r0, #14
   2df38:	strh	r0, [r6, #24]
   2df3c:	ldr	r1, [r6, #64]	; 0x40
   2df40:	mov	r0, r4
   2df44:	mov	r2, #4
   2df48:	add	r3, sp, #4
   2df4c:	bl	2e340 <__flatcc_fb_build_schema@@Base+0x2468>
   2df50:	strh	r0, [r6, #72]	; 0x48
   2df54:	b	2df80 <__flatcc_fb_build_schema@@Base+0x20a8>
   2df58:	mov	r0, r7
   2df5c:	mov	r1, r6
   2df60:	bl	2c320 <__flatcc_fb_build_schema@@Base+0x448>
   2df64:	cmp	r0, #0
   2df68:	beq	2de14 <__flatcc_fb_build_schema@@Base+0x1f3c>
   2df6c:	mov	r3, r0
   2df70:	mov	r0, r4
   2df74:	mov	r1, r6
   2df78:	mov	r2, r9
   2df7c:	bl	2c328 <__flatcc_fb_build_schema@@Base+0x450>
   2df80:	ldr	r6, [r6]
   2df84:	cmp	r6, #0
   2df88:	bne	2df58 <__flatcc_fb_build_schema@@Base+0x2080>
   2df8c:	mov	r0, #0
   2df90:	sub	sp, fp, #28
   2df94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2df98:	movw	r2, #61357	; 0xefad
   2df9c:	movt	r2, #4
   2dfa0:	mov	r0, r4
   2dfa4:	mov	r1, r6
   2dfa8:	bl	2cdcc <__flatcc_fb_build_schema@@Base+0xef4>
   2dfac:	mvn	r0, #0
   2dfb0:	sub	sp, fp, #28
   2dfb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dfb8:	movw	r0, #63650	; 0xf8a2
   2dfbc:	movt	r0, #4
   2dfc0:	movw	r1, #58427	; 0xe43b
   2dfc4:	movt	r1, #4
   2dfc8:	movw	r3, #63687	; 0xf8c7
   2dfcc:	movt	r3, #4
   2dfd0:	movw	r2, #1128	; 0x468
   2dfd4:	bl	14a80 <__assert_fail@plt>
   2dfd8:	movw	r0, #61308	; 0xef7c
   2dfdc:	movt	r0, #4
   2dfe0:	movw	r1, #58427	; 0xe43b
   2dfe4:	movt	r1, #4
   2dfe8:	movw	r3, #63687	; 0xf8c7
   2dfec:	movt	r3, #4
   2dff0:	movw	r2, #1129	; 0x469
   2dff4:	bl	14a80 <__assert_fail@plt>
   2dff8:	ldr	r1, [r0]
   2dffc:	cmp	r1, #0
   2e000:	moveq	r2, #0
   2e004:	streq	r2, [r0]
   2e008:	bxeq	lr
   2e00c:	mov	r3, #0
   2e010:	mov	r2, r1
   2e014:	ldr	r1, [r1, #120]	; 0x78
   2e018:	str	r3, [r2, #120]	; 0x78
   2e01c:	cmp	r1, #0
   2e020:	mov	r3, r2
   2e024:	bne	2e010 <__flatcc_fb_build_schema@@Base+0x2138>
   2e028:	str	r2, [r0]
   2e02c:	bx	lr
   2e030:	sub	sp, sp, #4
   2e034:	mov	r1, #0
   2e038:	str	r1, [sp]
   2e03c:	mov	r2, sp
   2e040:	cmp	r0, #0
   2e044:	beq	2e05c <__flatcc_fb_build_schema@@Base+0x2184>
   2e048:	str	r0, [r2]
   2e04c:	mov	r2, r0
   2e050:	ldr	r0, [r2], #108	; 0x6c
   2e054:	cmp	r0, #0
   2e058:	bne	2e048 <__flatcc_fb_build_schema@@Base+0x2170>
   2e05c:	str	r1, [r2]
   2e060:	pop	{r0}		; (ldr r0, [sp], #4)
   2e064:	bx	lr
   2e068:	push	{r4, r5, r6, r7, fp, lr}
   2e06c:	add	fp, sp, #16
   2e070:	sub	sp, sp, #80	; 0x50
   2e074:	vmov.i32	q8, #0	; 0x00000000
   2e078:	mov	r7, #32
   2e07c:	add	r2, sp, #40	; 0x28
   2e080:	mov	r3, r2
   2e084:	vst1.64	{d16-d17}, [r3], r7
   2e088:	mov	r6, #0
   2e08c:	str	r6, [r3]
   2e090:	add	r3, r2, #16
   2e094:	vst1.64	{d16-d17}, [r3]
   2e098:	mov	r4, sp
   2e09c:	add	r5, r4, #16
   2e0a0:	vst1.64	{d16-d17}, [r5]
   2e0a4:	mov	r3, r4
   2e0a8:	vst1.64	{d16-d17}, [r3], r7
   2e0ac:	str	r6, [r3]
   2e0b0:	cmp	r1, #0
   2e0b4:	beq	2e19c <__flatcc_fb_build_schema@@Base+0x22c4>
   2e0b8:	movw	ip, #65535	; 0xffff
   2e0bc:	mov	lr, #1
   2e0c0:	movw	r3, #34432	; 0x8680
   2e0c4:	mov	r5, r1
   2e0c8:	ldrh	r6, [r5, #24]
   2e0cc:	cmp	r6, #15
   2e0d0:	bhi	2e170 <__flatcc_fb_build_schema@@Base+0x2298>
   2e0d4:	tst	r3, lr, lsl r6
   2e0d8:	beq	2e130 <__flatcc_fb_build_schema@@Base+0x2258>
   2e0dc:	ldr	r6, [r0, #192]	; 0xc0
   2e0e0:	tst	r6, ip
   2e0e4:	beq	2e17c <__flatcc_fb_build_schema@@Base+0x22a4>
   2e0e8:	ubfx	r6, r6, #1, #15
   2e0ec:	clz	r6, r6
   2e0f0:	rsb	r6, r6, #32
   2e0f4:	uxth	r7, r6
   2e0f8:	cmp	r7, #7
   2e0fc:	movcs	r6, #7
   2e100:	uxth	r6, r6
   2e104:	ldr	r7, [r2, r6, lsl #2]
   2e108:	cmp	r7, #0
   2e10c:	ldrne	r7, [r4, r6, lsl #2]
   2e110:	addeq	r7, r2, r6, lsl #2
   2e114:	str	r5, [r7]
   2e118:	add	r7, r5, #108	; 0x6c
   2e11c:	str	r7, [r4, r6, lsl #2]
   2e120:	ldr	r5, [r5]
   2e124:	cmp	r5, #0
   2e128:	bne	2e0c8 <__flatcc_fb_build_schema@@Base+0x21f0>
   2e12c:	b	2e19c <__flatcc_fb_build_schema@@Base+0x22c4>
   2e130:	cmp	r6, #14
   2e134:	bne	2e168 <__flatcc_fb_build_schema@@Base+0x2290>
   2e138:	ldr	r6, [r5, #16]
   2e13c:	ldrh	r7, [r6, #8]
   2e140:	cmp	r7, #1
   2e144:	beq	2e158 <__flatcc_fb_build_schema@@Base+0x2280>
   2e148:	cmp	r7, #4
   2e14c:	beq	2e0dc <__flatcc_fb_build_schema@@Base+0x2204>
   2e150:	cmp	r7, #3
   2e154:	bne	2e0dc <__flatcc_fb_build_schema@@Base+0x2204>
   2e158:	ldrh	r6, [r6, #104]	; 0x68
   2e15c:	tst	r6, ip
   2e160:	bne	2e0e8 <__flatcc_fb_build_schema@@Base+0x2210>
   2e164:	b	2e17c <__flatcc_fb_build_schema@@Base+0x22a4>
   2e168:	cmp	r6, #1
   2e16c:	beq	2e1f8 <__flatcc_fb_build_schema@@Base+0x2320>
   2e170:	ldrh	r6, [r5, #74]	; 0x4a
   2e174:	tst	r6, ip
   2e178:	bne	2e0e8 <__flatcc_fb_build_schema@@Base+0x2210>
   2e17c:	movw	r0, #64151	; 0xfa97
   2e180:	movt	r0, #4
   2e184:	movw	r1, #58427	; 0xe43b
   2e188:	movt	r1, #4
   2e18c:	movw	r3, #64157	; 0xfa9d
   2e190:	movt	r3, #4
   2e194:	movw	r2, #1521	; 0x5f1
   2e198:	bl	14a80 <__assert_fail@plt>
   2e19c:	add	r0, r2, #32
   2e1a0:	str	r0, [sp, #32]
   2e1a4:	mov	r0, #8
   2e1a8:	uxth	r1, r0
   2e1ac:	mov	r0, r1
   2e1b0:	cmp	r0, #0
   2e1b4:	beq	2e1d0 <__flatcc_fb_build_schema@@Base+0x22f8>
   2e1b8:	sub	r0, r0, #1
   2e1bc:	uxth	r3, r0
   2e1c0:	ldr	r3, [r2, r3, lsl #2]
   2e1c4:	cmp	r3, #0
   2e1c8:	beq	2e1b0 <__flatcc_fb_build_schema@@Base+0x22d8>
   2e1cc:	b	2e1d4 <__flatcc_fb_build_schema@@Base+0x22fc>
   2e1d0:	mov	r0, #0
   2e1d4:	ldr	r1, [r4, r1, lsl #2]
   2e1d8:	uxth	r3, r0
   2e1dc:	ldr	r7, [r2, r3, lsl #2]
   2e1e0:	str	r7, [r1]
   2e1e4:	cmp	r3, #0
   2e1e8:	bne	2e1a8 <__flatcc_fb_build_schema@@Base+0x22d0>
   2e1ec:	ldr	r0, [sp, #72]	; 0x48
   2e1f0:	sub	sp, fp, #16
   2e1f4:	pop	{r4, r5, r6, r7, fp, pc}
   2e1f8:	mov	r0, r1
   2e1fc:	bl	2e030 <__flatcc_fb_build_schema@@Base+0x2158>
   2e200:	sub	sp, fp, #16
   2e204:	pop	{r4, r5, r6, r7, fp, pc}
   2e208:	mov	r2, r1
   2e20c:	mov	r1, #0
   2e210:	b	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2e214:	mov	r3, #0
   2e218:	b	2e9e0 <__flatcc_fb_build_schema@@Base+0x2b08>
   2e21c:	mov	r3, #0
   2e220:	b	28254 <error_ref_sym@@Base>
   2e224:	cmp	r2, #0
   2e228:	bxeq	lr
   2e22c:	movw	ip, #403	; 0x193
   2e230:	movt	ip, #256	; 0x100
   2e234:	ldrb	r3, [r1], #1
   2e238:	eor	r0, r0, r3
   2e23c:	mul	r0, r0, ip
   2e240:	subs	r2, r2, #1
   2e244:	bne	2e234 <__flatcc_fb_build_schema@@Base+0x235c>
   2e248:	bx	lr
   2e24c:	push	{fp, lr}
   2e250:	mov	fp, sp
   2e254:	sub	sp, sp, #8
   2e258:	mov	ip, #0
   2e25c:	str	ip, [sp]
   2e260:	str	ip, [sp, #4]
   2e264:	bl	280c4 <__flatcc_error_report@@Base>
   2e268:	mov	sp, fp
   2e26c:	pop	{fp, pc}
   2e270:	push	{r4, r5, r6, sl, fp, lr}
   2e274:	add	fp, sp, #16
   2e278:	mov	r4, r0
   2e27c:	ldr	r1, [r0, #44]	; 0x2c
   2e280:	ldr	r0, [r0, #52]	; 0x34
   2e284:	add	r2, r0, #32
   2e288:	cmp	r2, r1
   2e28c:	bls	2e2c4 <__flatcc_fb_build_schema@@Base+0x23ec>
   2e290:	mov	r6, #65536	; 0x10000
   2e294:	mov	r0, #65536	; 0x10000
   2e298:	mov	r1, #1
   2e29c:	bl	148d0 <calloc@plt>
   2e2a0:	mov	r5, r0
   2e2a4:	bl	2e2d4 <__flatcc_fb_build_schema@@Base+0x23fc>
   2e2a8:	ldr	r0, [r4, #48]	; 0x30
   2e2ac:	mov	r1, r5
   2e2b0:	str	r0, [r1], r6
   2e2b4:	add	r0, r5, #16
   2e2b8:	str	r1, [r4, #44]	; 0x2c
   2e2bc:	str	r5, [r4, #48]	; 0x30
   2e2c0:	str	r0, [r4, #52]	; 0x34
   2e2c4:	ldr	r1, [r4, #52]	; 0x34
   2e2c8:	add	r1, r1, #32
   2e2cc:	str	r1, [r4, #52]	; 0x34
   2e2d0:	pop	{r4, r5, r6, sl, fp, pc}
   2e2d4:	cmp	r0, #0
   2e2d8:	bxne	lr
   2e2dc:	push	{fp, lr}
   2e2e0:	mov	fp, sp
   2e2e4:	movw	r0, #8368	; 0x20b0
   2e2e8:	movt	r0, #6
   2e2ec:	ldr	r3, [r0]
   2e2f0:	movw	r0, #25039	; 0x61cf
   2e2f4:	movt	r0, #3
   2e2f8:	mov	r1, #34	; 0x22
   2e2fc:	mov	r2, #1
   2e300:	bl	14954 <fwrite@plt>
   2e304:	mov	r0, #1
   2e308:	bl	1499c <exit@plt>
   2e30c:	ldr	r0, [r0, #16]
   2e310:	movw	r1, #999	; 0x3e7
   2e314:	add	r0, r0, r1
   2e318:	cmp	r0, #27
   2e31c:	movhi	r0, #0
   2e320:	movwls	r1, #64320	; 0xfb40
   2e324:	movtls	r1, #4
   2e328:	ldrls	r0, [r1, r0, lsl #2]
   2e32c:	bx	lr
   2e330:	movw	r1, #64272	; 0xfb10
   2e334:	movt	r1, #4
   2e338:	ldr	r0, [r1, r0, lsl #2]
   2e33c:	bx	lr
   2e340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e344:	add	fp, sp, #28
   2e348:	sub	sp, sp, #4
   2e34c:	mov	r5, r1
   2e350:	mov	r4, r0
   2e354:	vmov.i32	q8, #0	; 0x00000000
   2e358:	mov	r0, #32
   2e35c:	mov	r1, r3
   2e360:	vst1.32	{d16-d17}, [r1], r0
   2e364:	vst1.32	{d16-d17}, [r1]
   2e368:	add	r0, r3, #16
   2e36c:	vst1.32	{d16-d17}, [r0]
   2e370:	cmp	r5, #0
   2e374:	beq	2e4e4 <__flatcc_fb_build_schema@@Base+0x260c>
   2e378:	mov	r6, r3
   2e37c:	mov	r7, r2
   2e380:	mov	r9, #0
   2e384:	mvn	sl, #98	; 0x62
   2e388:	mov	r8, #1
   2e38c:	b	2e434 <__flatcc_fb_build_schema@@Base+0x255c>
   2e390:	str	r5, [r6, r0, lsl #2]
   2e394:	movw	r1, #3500	; 0xdac
   2e398:	tst	r8, r1, lsr r0
   2e39c:	ldrhne	r1, [r5, #16]
   2e3a0:	cmpne	r1, #0
   2e3a4:	bne	2e420 <__flatcc_fb_build_schema@@Base+0x2548>
   2e3a8:	sub	r0, r0, #1
   2e3ac:	cmp	r0, #8
   2e3b0:	bhi	2e4b0 <__flatcc_fb_build_schema@@Base+0x25d8>
   2e3b4:	add	r1, pc, #0
   2e3b8:	ldr	pc, [r1, r0, lsl #2]
   2e3bc:	andeq	lr, r2, r0, ror #7
   2e3c0:			; <UNDEFINED> instruction: 0x0002e4b0
   2e3c4:			; <UNDEFINED> instruction: 0x0002e4b0
   2e3c8:	andeq	lr, r2, r0, ror #7
   2e3cc:			; <UNDEFINED> instruction: 0x0002e4b0
   2e3d0:	andeq	lr, r2, r0, lsl #8
   2e3d4:			; <UNDEFINED> instruction: 0x0002e4b0
   2e3d8:			; <UNDEFINED> instruction: 0x0002e4b0
   2e3dc:	andeq	lr, r2, r0, lsl #8
   2e3e0:	ldrh	r0, [r5, #16]
   2e3e4:	cmp	r0, #5
   2e3e8:	beq	2e4b0 <__flatcc_fb_build_schema@@Base+0x25d8>
   2e3ec:	ldr	r1, [r5, #4]
   2e3f0:	mov	r0, r4
   2e3f4:	movw	r2, #60090	; 0xeaba
   2e3f8:	movt	r2, #4
   2e3fc:	b	2e4ac <__flatcc_fb_build_schema@@Base+0x25d4>
   2e400:	ldrh	r0, [r5, #16]
   2e404:	cmp	r0, #2
   2e408:	beq	2e4b0 <__flatcc_fb_build_schema@@Base+0x25d8>
   2e40c:	ldr	r1, [r5, #4]
   2e410:	mov	r0, r4
   2e414:	movw	r2, #60057	; 0xea99
   2e418:	movt	r2, #4
   2e41c:	b	2e4ac <__flatcc_fb_build_schema@@Base+0x25d4>
   2e420:	ldr	r1, [r5, #4]
   2e424:	mov	r0, r4
   2e428:	movw	r2, #60017	; 0xea71
   2e42c:	movt	r2, #4
   2e430:	b	2e4ac <__flatcc_fb_build_schema@@Base+0x25d4>
   2e434:	ldr	r1, [r5, #4]
   2e438:	ldr	r0, [r4, #412]	; 0x19c
   2e43c:	add	r0, r0, #16
   2e440:	bl	2e510 <__flatcc_fb_build_schema@@Base+0x2638>
   2e444:	cmp	r0, #0
   2e448:	beq	2e488 <__flatcc_fb_build_schema@@Base+0x25b0>
   2e44c:	ldr	r0, [r0, #24]
   2e450:	cmp	r0, #0
   2e454:	beq	2e4b0 <__flatcc_fb_build_schema@@Base+0x25d8>
   2e458:	tst	r7, r8, lsl r0
   2e45c:	beq	2e49c <__flatcc_fb_build_schema@@Base+0x25c4>
   2e460:	lsl	r1, r8, r0
   2e464:	ldr	r2, [r6, r0, lsl #2]
   2e468:	orr	r9, r9, r1
   2e46c:	cmp	r2, #0
   2e470:	beq	2e390 <__flatcc_fb_build_schema@@Base+0x24b8>
   2e474:	ldr	r1, [r5, #4]
   2e478:	mov	r0, r4
   2e47c:	movw	r2, #59979	; 0xea4b
   2e480:	movt	r2, #4
   2e484:	b	2e4ac <__flatcc_fb_build_schema@@Base+0x25d4>
   2e488:	ldr	r1, [r5, #4]
   2e48c:	mov	r0, r4
   2e490:	movw	r2, #59903	; 0xe9ff
   2e494:	movt	r2, #4
   2e498:	b	2e4ac <__flatcc_fb_build_schema@@Base+0x25d4>
   2e49c:	ldr	r1, [r5, #4]
   2e4a0:	mov	r0, r4
   2e4a4:	movw	r2, #59934	; 0xea1e
   2e4a8:	movt	r2, #4
   2e4ac:	bl	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2e4b0:	ldr	r5, [r5]
   2e4b4:	cmp	sl, #0
   2e4b8:	addne	sl, sl, #1
   2e4bc:	cmpne	r5, #0
   2e4c0:	bne	2e434 <__flatcc_fb_build_schema@@Base+0x255c>
   2e4c4:	cmp	r5, #0
   2e4c8:	beq	2e4e8 <__flatcc_fb_build_schema@@Base+0x2610>
   2e4cc:	ldr	r1, [r5, #4]
   2e4d0:	movw	r2, #60134	; 0xeae6
   2e4d4:	movt	r2, #4
   2e4d8:	mov	r0, r4
   2e4dc:	bl	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2e4e0:	b	2e4e8 <__flatcc_fb_build_schema@@Base+0x2610>
   2e4e4:	mov	r9, #0
   2e4e8:	uxth	r0, r9
   2e4ec:	sub	sp, fp, #28
   2e4f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e4f4:	push	{fp, lr}
   2e4f8:	mov	fp, sp
   2e4fc:	mov	r2, #1
   2e500:	bl	34008 <fb_value_set_insert_item@@Base>
   2e504:	cmp	r0, #0
   2e508:	movwne	r0, #1
   2e50c:	pop	{fp, pc}
   2e510:	ldr	r3, [r1]
   2e514:	ldr	r2, [r1, #4]
   2e518:	mov	r1, r3
   2e51c:	b	33a58 <fb_name_table_find@@Base>
   2e520:	mov	r3, #0
   2e524:	b	2e24c <__flatcc_fb_build_schema@@Base+0x2374>
   2e528:	push	{r4, sl, fp, lr}
   2e52c:	add	fp, sp, #8
   2e530:	mov	ip, r0
   2e534:	subs	r2, r0, #1
   2e538:	sbc	r3, r1, #0
   2e53c:	mov	r0, #0
   2e540:	rsbs	r2, r2, #255	; 0xff
   2e544:	rscs	r2, r3, #0
   2e548:	bcc	2e58c <__flatcc_fb_build_schema@@Base+0x26b4>
   2e54c:	orrs	r2, ip, r1
   2e550:	beq	2e58c <__flatcc_fb_build_schema@@Base+0x26b4>
   2e554:	mov	lr, #0
   2e558:	mov	r0, #1
   2e55c:	mov	r2, #1
   2e560:	eor	r3, r2, ip
   2e564:	eor	r4, lr, r1
   2e568:	orrs	r3, r3, r4
   2e56c:	popeq	{r4, sl, fp, pc}
   2e570:	lsl	r3, lr, #1
   2e574:	orr	lr, r3, r2, lsr #31
   2e578:	lsl	r2, r2, #1
   2e57c:	subs	r3, ip, r2
   2e580:	sbcs	r3, r1, lr
   2e584:	bcs	2e560 <__flatcc_fb_build_schema@@Base+0x2688>
   2e588:	mov	r0, #0
   2e58c:	pop	{r4, sl, fp, pc}
   2e590:	ldr	r1, [r1, #4]
   2e594:	b	2e24c <__flatcc_fb_build_schema@@Base+0x2374>
   2e598:	push	{r4, r5, r6, r7, fp, lr}
   2e59c:	add	fp, sp, #16
   2e5a0:	mov	r4, r3
   2e5a4:	mov	r5, r2
   2e5a8:	mov	r6, r1
   2e5ac:	mov	r7, r0
   2e5b0:	mov	r0, r2
   2e5b4:	mov	r1, r3
   2e5b8:	bl	2e528 <__flatcc_fb_build_schema@@Base+0x2650>
   2e5bc:	cmp	r0, #0
   2e5c0:	beq	2e5e8 <__flatcc_fb_build_schema@@Base+0x2710>
   2e5c4:	adds	r0, r7, r5
   2e5c8:	adc	r1, r6, r4
   2e5cc:	subs	r0, r0, #1
   2e5d0:	sbc	r1, r1, #0
   2e5d4:	rsbs	r2, r5, #0
   2e5d8:	rsc	r3, r4, #0
   2e5dc:	and	r1, r1, r3
   2e5e0:	and	r0, r0, r2
   2e5e4:	pop	{r4, r5, r6, r7, fp, pc}
   2e5e8:	movw	r0, #61193	; 0xef09
   2e5ec:	movt	r0, #4
   2e5f0:	movw	r1, #58427	; 0xe43b
   2e5f4:	movt	r1, #4
   2e5f8:	movw	r3, #61215	; 0xef1f
   2e5fc:	movt	r3, #4
   2e600:	mov	r2, #108	; 0x6c
   2e604:	bl	14a80 <__assert_fail@plt>
   2e608:	push	{r4, r5, r6, sl, fp, lr}
   2e60c:	add	fp, sp, #16
   2e610:	mov	r5, r3
   2e614:	mov	r4, r0
   2e618:	ldrh	r0, [r2, #24]
   2e61c:	cmp	r0, #7
   2e620:	bne	2e67c <__flatcc_fb_build_schema@@Base+0x27a4>
   2e624:	mov	r6, r2
   2e628:	ldr	r0, [r2, #16]
   2e62c:	cmp	r0, #4
   2e630:	bne	2e67c <__flatcc_fb_build_schema@@Base+0x27a4>
   2e634:	ldrh	r0, [r5, #16]
   2e638:	cmp	r0, #2
   2e63c:	popne	{r4, r5, r6, sl, fp, pc}
   2e640:	ldrd	r2, [r5, #8]
   2e644:	mov	r0, r4
   2e648:	bl	2e7dc <__flatcc_fb_build_schema@@Base+0x2904>
   2e64c:	cmp	r0, #0
   2e650:	beq	2e694 <__flatcc_fb_build_schema@@Base+0x27bc>
   2e654:	ldrh	r1, [r0, #8]
   2e658:	cmp	r1, #0
   2e65c:	beq	2e674 <__flatcc_fb_build_schema@@Base+0x279c>
   2e660:	ldr	r2, [r4, #176]	; 0xb0
   2e664:	cmp	r2, #0
   2e668:	beq	2e6a4 <__flatcc_fb_build_schema@@Base+0x27cc>
   2e66c:	cmp	r1, #1
   2e670:	bne	2e6b8 <__flatcc_fb_build_schema@@Base+0x27e0>
   2e674:	str	r0, [r6, #104]	; 0x68
   2e678:	pop	{r4, r5, r6, sl, fp, pc}
   2e67c:	ldr	r1, [r5, #4]
   2e680:	movw	r2, #63321	; 0xf759
   2e684:	movt	r2, #4
   2e688:	mov	r0, r4
   2e68c:	pop	{r4, r5, r6, sl, fp, lr}
   2e690:	b	2e520 <__flatcc_fb_build_schema@@Base+0x2648>
   2e694:	ldmib	r5, {r1, r2, r3}
   2e698:	mov	r0, r4
   2e69c:	pop	{r4, r5, r6, sl, fp, lr}
   2e6a0:	b	2e8c0 <__flatcc_fb_build_schema@@Base+0x29e8>
   2e6a4:	ldr	r3, [r0, #4]
   2e6a8:	ldr	r1, [r5, #4]
   2e6ac:	movw	r2, #63409	; 0xf7b1
   2e6b0:	movt	r2, #4
   2e6b4:	b	2e6c8 <__flatcc_fb_build_schema@@Base+0x27f0>
   2e6b8:	ldr	r3, [r0, #4]
   2e6bc:	ldr	r1, [r5, #4]
   2e6c0:	movw	r2, #63452	; 0xf7dc
   2e6c4:	movt	r2, #4
   2e6c8:	mov	r0, r4
   2e6cc:	pop	{r4, r5, r6, sl, fp, lr}
   2e6d0:	b	2e24c <__flatcc_fb_build_schema@@Base+0x2374>
   2e6d4:	push	{r4, r5, fp, lr}
   2e6d8:	add	fp, sp, #8
   2e6dc:	sub	sp, sp, #8
   2e6e0:	mov	r4, r2
   2e6e4:	mov	r2, #0
   2e6e8:	str	r2, [sp, #4]
   2e6ec:	cmp	r3, #0
   2e6f0:	beq	2e784 <__flatcc_fb_build_schema@@Base+0x28ac>
   2e6f4:	mov	r5, r3
   2e6f8:	cmp	r4, #0
   2e6fc:	ldrhne	r2, [r4, #8]
   2e700:	cmpne	r2, #3
   2e704:	bne	2e7a4 <__flatcc_fb_build_schema@@Base+0x28cc>
   2e708:	add	r3, sp, #4
   2e70c:	mov	r2, r5
   2e710:	bl	2e9e0 <__flatcc_fb_build_schema@@Base+0x2b08>
   2e714:	cmp	r0, #0
   2e718:	beq	2e730 <__flatcc_fb_build_schema@@Base+0x2858>
   2e71c:	ldrh	r1, [r0, #8]
   2e720:	cmp	r1, #3
   2e724:	bne	2e730 <__flatcc_fb_build_schema@@Base+0x2858>
   2e728:	mov	r4, r0
   2e72c:	b	2e740 <__flatcc_fb_build_schema@@Base+0x2868>
   2e730:	ldr	r0, [r5]
   2e734:	mvn	r5, #0
   2e738:	cmp	r0, #0
   2e73c:	bne	2e778 <__flatcc_fb_build_schema@@Base+0x28a0>
   2e740:	mvn	r5, #0
   2e744:	cmp	r4, #0
   2e748:	beq	2e778 <__flatcc_fb_build_schema@@Base+0x28a0>
   2e74c:	ldr	r0, [sp, #4]
   2e750:	ldr	r1, [r0, #4]
   2e754:	add	r0, r4, #56	; 0x38
   2e758:	bl	2eb04 <__flatcc_fb_build_schema@@Base+0x2c2c>
   2e75c:	cmp	r0, #0
   2e760:	beq	2e778 <__flatcc_fb_build_schema@@Base+0x28a0>
   2e764:	ldr	r1, [fp, #8]
   2e768:	add	r0, r0, #48	; 0x30
   2e76c:	vld1.64	{d16-d17}, [r0]
   2e770:	vst1.64	{d16-d17}, [r1]
   2e774:	mov	r5, #0
   2e778:	mov	r0, r5
   2e77c:	sub	sp, fp, #8
   2e780:	pop	{r4, r5, fp, pc}
   2e784:	movw	r0, #63507	; 0xf813
   2e788:	movt	r0, #4
   2e78c:	movw	r1, #58427	; 0xe43b
   2e790:	movt	r1, #4
   2e794:	movw	r3, #63511	; 0xf817
   2e798:	movt	r3, #4
   2e79c:	movw	r2, #347	; 0x15b
   2e7a0:	bl	14a80 <__assert_fail@plt>
   2e7a4:	movw	r0, #63609	; 0xf879
   2e7a8:	movt	r0, #4
   2e7ac:	movw	r1, #58427	; 0xe43b
   2e7b0:	movt	r1, #4
   2e7b4:	movw	r3, #63511	; 0xf817
   2e7b8:	movt	r3, #4
   2e7bc:	mov	r2, #348	; 0x15c
   2e7c0:	bl	14a80 <__assert_fail@plt>
   2e7c4:	push	{fp, lr}
   2e7c8:	mov	fp, sp
   2e7cc:	bl	340b8 <fb_value_set_find_item@@Base>
   2e7d0:	cmp	r0, #0
   2e7d4:	movwne	r0, #1
   2e7d8:	pop	{fp, pc}
   2e7dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e7e0:	add	fp, sp, #24
   2e7e4:	mov	r5, r1
   2e7e8:	mov	r9, r0
   2e7ec:	sub	r0, r3, #1
   2e7f0:	add	r4, r0, #1
   2e7f4:	cmp	r4, #1
   2e7f8:	blt	2e820 <__flatcc_fb_build_schema@@Base+0x2948>
   2e7fc:	ldrb	r1, [r2, r0]
   2e800:	sub	r0, r0, #1
   2e804:	cmp	r1, #46	; 0x2e
   2e808:	bne	2e7f0 <__flatcc_fb_build_schema@@Base+0x2918>
   2e80c:	add	r1, r2, r0
   2e810:	add	r6, r1, #2
   2e814:	add	r4, r0, #1
   2e818:	sub	r3, r3, #1
   2e81c:	b	2e824 <__flatcc_fb_build_schema@@Base+0x294c>
   2e820:	mov	r6, r2
   2e824:	sub	r7, r3, r4
   2e828:	add	r8, r9, #352	; 0x160
   2e82c:	cmp	r5, #0
   2e830:	beq	2e888 <__flatcc_fb_build_schema@@Base+0x29b0>
   2e834:	cmp	r4, #0
   2e838:	bne	2e888 <__flatcc_fb_build_schema@@Base+0x29b0>
   2e83c:	add	r0, r5, #4
   2e840:	mov	r1, r6
   2e844:	mov	r2, r7
   2e848:	bl	26a0c <fb_symbol_table_find@@Base>
   2e84c:	cmp	r0, #0
   2e850:	beq	2e86c <__flatcc_fb_build_schema@@Base+0x2994>
   2e854:	mov	r4, r0
   2e858:	mov	r0, r8
   2e85c:	mov	r1, r4
   2e860:	bl	2e8e4 <__flatcc_fb_build_schema@@Base+0x2a0c>
   2e864:	cmp	r0, #0
   2e868:	bne	2e8b8 <__flatcc_fb_build_schema@@Base+0x29e0>
   2e86c:	mov	r0, r9
   2e870:	mov	r1, r5
   2e874:	bl	2e918 <__flatcc_fb_build_schema@@Base+0x2a40>
   2e878:	mov	r5, r0
   2e87c:	cmp	r0, #0
   2e880:	bne	2e83c <__flatcc_fb_build_schema@@Base+0x2964>
   2e884:	b	2e8b4 <__flatcc_fb_build_schema@@Base+0x29dc>
   2e888:	mov	r0, r8
   2e88c:	mov	r1, r2
   2e890:	mov	r2, r4
   2e894:	bl	2e99c <__flatcc_fb_build_schema@@Base+0x2ac4>
   2e898:	cmp	r0, #0
   2e89c:	beq	2e8b4 <__flatcc_fb_build_schema@@Base+0x29dc>
   2e8a0:	add	r0, r0, #4
   2e8a4:	mov	r1, r6
   2e8a8:	mov	r2, r7
   2e8ac:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e8b0:	b	26a0c <fb_symbol_table_find@@Base>
   2e8b4:	mov	r4, #0
   2e8b8:	mov	r0, r4
   2e8bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e8c0:	push	{fp, lr}
   2e8c4:	mov	fp, sp
   2e8c8:	push	{r2, r3}
   2e8cc:	movw	r2, #63382	; 0xf796
   2e8d0:	movt	r2, #4
   2e8d4:	mov	r3, #0
   2e8d8:	bl	280c4 <__flatcc_error_report@@Base>
   2e8dc:	mov	sp, fp
   2e8e0:	pop	{fp, pc}
   2e8e4:	push	{r4, sl, fp, lr}
   2e8e8:	add	fp, sp, #8
   2e8ec:	mov	r4, r1
   2e8f0:	ldrh	r1, [r1, #8]
   2e8f4:	cmp	r1, #4
   2e8f8:	movhi	r0, #0
   2e8fc:	pophi	{r4, sl, fp, pc}
   2e900:	ldr	r1, [r4, #16]
   2e904:	add	r0, r0, #172	; 0xac
   2e908:	bl	2c288 <__flatcc_fb_build_schema@@Base+0x3b0>
   2e90c:	cmp	r0, #0
   2e910:	movne	r0, r4
   2e914:	pop	{r4, sl, fp, pc}
   2e918:	push	{r4, r5, r6, sl, fp, lr}
   2e91c:	add	fp, sp, #16
   2e920:	mov	r4, r1
   2e924:	mov	r1, #0
   2e928:	cmp	r4, #0
   2e92c:	ldrne	r2, [r4]
   2e930:	cmpne	r2, #0
   2e934:	bne	2e940 <__flatcc_fb_build_schema@@Base+0x2a68>
   2e938:	mov	r0, r1
   2e93c:	pop	{r4, r5, r6, sl, fp, pc}
   2e940:	mov	r5, #0
   2e944:	add	r5, r5, #1
   2e948:	ldr	r2, [r2]
   2e94c:	cmp	r2, #0
   2e950:	bne	2e944 <__flatcc_fb_build_schema@@Base+0x2a6c>
   2e954:	add	r6, r0, #352	; 0x160
   2e958:	cmp	r5, #2
   2e95c:	blt	2e988 <__flatcc_fb_build_schema@@Base+0x2ab0>
   2e960:	sub	r5, r5, #1
   2e964:	ldr	r1, [r4]
   2e968:	mov	r0, r6
   2e96c:	mov	r2, r5
   2e970:	bl	2e9c0 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2e974:	cmp	r0, #0
   2e978:	beq	2e958 <__flatcc_fb_build_schema@@Base+0x2a80>
   2e97c:	mov	r1, r0
   2e980:	mov	r0, r1
   2e984:	pop	{r4, r5, r6, sl, fp, pc}
   2e988:	mov	r0, r6
   2e98c:	mov	r1, #0
   2e990:	mov	r2, #0
   2e994:	pop	{r4, r5, r6, sl, fp, lr}
   2e998:	b	2e9c0 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2e99c:	cmp	r0, #0
   2e9a0:	ldrne	r0, [r0, #60]	; 0x3c
   2e9a4:	cmpne	r0, #0
   2e9a8:	bne	2e9b4 <__flatcc_fb_build_schema@@Base+0x2adc>
   2e9ac:	mov	r0, #0
   2e9b0:	bx	lr
   2e9b4:	cmp	r2, #0
   2e9b8:	moveq	r1, r2
   2e9bc:	b	27020 <fb_scope_table_find@@Base>
   2e9c0:	cmp	r0, #0
   2e9c4:	ldrne	r0, [r0, #60]	; 0x3c
   2e9c8:	cmpne	r0, #0
   2e9cc:	bne	2e9d8 <__flatcc_fb_build_schema@@Base+0x2b00>
   2e9d0:	mov	r0, #0
   2e9d4:	bx	lr
   2e9d8:	rsb	r2, r2, #0
   2e9dc:	b	27020 <fb_scope_table_find@@Base>
   2e9e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e9e4:	add	fp, sp, #24
   2e9e8:	mov	r5, r1
   2e9ec:	mov	r8, r0
   2e9f0:	cmp	r2, #0
   2e9f4:	beq	2ea20 <__flatcc_fb_build_schema@@Base+0x2b48>
   2e9f8:	mov	r0, #0
   2e9fc:	mov	r1, r2
   2ea00:	mov	r4, #0
   2ea04:	mov	r7, r4
   2ea08:	mov	r4, r1
   2ea0c:	add	r0, r0, #1
   2ea10:	ldr	r1, [r1]
   2ea14:	cmp	r1, #0
   2ea18:	bne	2ea04 <__flatcc_fb_build_schema@@Base+0x2b2c>
   2ea1c:	b	2ea2c <__flatcc_fb_build_schema@@Base+0x2b54>
   2ea20:	mov	r7, #0
   2ea24:	mov	r4, #0
   2ea28:	mov	r0, #0
   2ea2c:	cmp	r3, #0
   2ea30:	strne	r4, [r3]
   2ea34:	subne	r0, r0, #1
   2ea38:	moveq	r7, r4
   2ea3c:	cmp	r7, #0
   2ea40:	beq	2eaf8 <__flatcc_fb_build_schema@@Base+0x2c20>
   2ea44:	cmp	r5, #0
   2ea48:	beq	2eaa0 <__flatcc_fb_build_schema@@Base+0x2bc8>
   2ea4c:	cmp	r0, #1
   2ea50:	bne	2eaa0 <__flatcc_fb_build_schema@@Base+0x2bc8>
   2ea54:	add	r4, r8, #352	; 0x160
   2ea58:	ldr	r1, [r7, #4]
   2ea5c:	add	r0, r5, #4
   2ea60:	bl	2eb04 <__flatcc_fb_build_schema@@Base+0x2c2c>
   2ea64:	cmp	r0, #0
   2ea68:	beq	2ea84 <__flatcc_fb_build_schema@@Base+0x2bac>
   2ea6c:	mov	r6, r0
   2ea70:	mov	r0, r4
   2ea74:	mov	r1, r6
   2ea78:	bl	2e8e4 <__flatcc_fb_build_schema@@Base+0x2a0c>
   2ea7c:	cmp	r0, #0
   2ea80:	bne	2eaf0 <__flatcc_fb_build_schema@@Base+0x2c18>
   2ea84:	mov	r0, r8
   2ea88:	mov	r1, r5
   2ea8c:	bl	2e918 <__flatcc_fb_build_schema@@Base+0x2a40>
   2ea90:	mov	r5, r0
   2ea94:	cmp	r0, #0
   2ea98:	bne	2ea58 <__flatcc_fb_build_schema@@Base+0x2b80>
   2ea9c:	b	2eaf8 <__flatcc_fb_build_schema@@Base+0x2c20>
   2eaa0:	subs	r3, r0, #1
   2eaa4:	moveq	r2, r3
   2eaa8:	add	r5, r8, #352	; 0x160
   2eaac:	mov	r0, r5
   2eab0:	mov	r1, r2
   2eab4:	mov	r2, r3
   2eab8:	bl	2e9c0 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2eabc:	cmp	r0, #0
   2eac0:	beq	2eaf8 <__flatcc_fb_build_schema@@Base+0x2c20>
   2eac4:	ldr	r1, [r7, #4]
   2eac8:	add	r0, r0, #4
   2eacc:	bl	2eb04 <__flatcc_fb_build_schema@@Base+0x2c2c>
   2ead0:	cmp	r0, #0
   2ead4:	beq	2eaf8 <__flatcc_fb_build_schema@@Base+0x2c20>
   2ead8:	mov	r6, r0
   2eadc:	mov	r0, r5
   2eae0:	mov	r1, r6
   2eae4:	bl	2e8e4 <__flatcc_fb_build_schema@@Base+0x2a0c>
   2eae8:	cmp	r0, #0
   2eaec:	moveq	r6, #0
   2eaf0:	mov	r0, r6
   2eaf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eaf8:	mov	r6, #0
   2eafc:	mov	r0, r6
   2eb00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eb04:	ldr	r3, [r1]
   2eb08:	ldr	r2, [r1, #4]
   2eb0c:	mov	r1, r3
   2eb10:	b	26a0c <fb_symbol_table_find@@Base>

0002eb14 <__flatcc_fb_coerce_scalar_type@@Base>:
   2eb14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eb18:	add	fp, sp, #28
   2eb1c:	sub	sp, sp, #12
   2eb20:	mov	r9, r0
   2eb24:	mov	r5, r3
   2eb28:	ldrh	r0, [r5, #8]!
   2eb2c:	mov	r4, #0
   2eb30:	cmp	r0, #2
   2eb34:	bcc	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2eb38:	mov	r7, r3
   2eb3c:	mov	sl, r1
   2eb40:	cmp	r0, #4
   2eb44:	bne	2eb6c <__flatcc_fb_coerce_scalar_type@@Base+0x58>
   2eb48:	ldrd	r0, [r7]
   2eb4c:	mvn	r3, #127	; 0x7f
   2eb50:	add	r3, r3, #127	; 0x7f
   2eb54:	mvn	r6, #0
   2eb58:	subs	r0, r3, r0
   2eb5c:	sbcs	r0, r6, r1
   2eb60:	movlt	r0, #5
   2eb64:	strhlt	r0, [r5]
   2eb68:	b	2eba8 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2eb6c:	cmp	r2, #5
   2eb70:	beq	2eba8 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2eb74:	cmp	r0, #6
   2eb78:	bne	2eba8 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2eb7c:	ldr	r0, [r9, #144]	; 0x90
   2eb80:	cmp	r0, #0
   2eb84:	beq	2eba8 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2eb88:	mov	r0, #0
   2eb8c:	str	r0, [r7, #4]
   2eb90:	mov	r0, #5
   2eb94:	strh	r0, [r7, #8]
   2eb98:	ldrb	r0, [r7]
   2eb9c:	str	r0, [r7]
   2eba0:	cmp	r0, #2
   2eba4:	bcs	2ef98 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   2eba8:	sub	r0, r2, #1
   2ebac:	cmp	r0, #10
   2ebb0:	bhi	2edf8 <__flatcc_fb_coerce_scalar_type@@Base+0x2e4>
   2ebb4:	add	r1, pc, #0
   2ebb8:	ldr	pc, [r1, r0, lsl #2]
   2ebbc:	andeq	lr, r2, r8, ror #23
   2ebc0:	andeq	lr, r2, r0, lsl #26
   2ebc4:	andeq	lr, r2, r8, ror ip
   2ebc8:	andeq	lr, r2, r0, lsr #25
   2ebcc:	andeq	lr, r2, r0, lsl #24
   2ebd0:	andeq	lr, r2, r4, lsr #26
   2ebd4:	andeq	lr, r2, r0, asr sp
   2ebd8:	andeq	lr, r2, r8, asr #25
   2ebdc:	andeq	lr, r2, r8, lsl #27
   2ebe0:	andeq	lr, r2, ip, lsr ip
   2ebe4:	andeq	lr, r2, r0, asr #27
   2ebe8:	ldrh	r0, [r5]
   2ebec:	cmp	r0, #5
   2ebf0:	beq	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ebf4:	movw	r2, #64630	; 0xfc76
   2ebf8:	movt	r2, #4
   2ebfc:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ec00:	ldrh	r0, [r5]
   2ec04:	cmp	r0, #6
   2ec08:	beq	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ec0c:	cmp	r0, #5
   2ec10:	bne	2ee28 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2ec14:	ldr	r0, [r9, #144]	; 0x90
   2ec18:	cmp	r0, #0
   2ec1c:	beq	2ee28 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2ec20:	ldrd	r0, [r7]
   2ec24:	subs	r0, r0, #2
   2ec28:	sbcs	r0, r1, #0
   2ec2c:	bcc	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ec30:	movw	r2, #65320	; 0xff28
   2ec34:	movt	r2, #4
   2ec38:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ec3c:	ldrh	r0, [r5]
   2ec40:	cmp	r0, #3
   2ec44:	beq	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ec48:	cmp	r0, #5
   2ec4c:	beq	2eec4 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   2ec50:	cmp	r0, #4
   2ec54:	bne	2ef10 <__flatcc_fb_coerce_scalar_type@@Base+0x3fc>
   2ec58:	ldm	r7, {r6, r8}
   2ec5c:	mov	r0, r6
   2ec60:	mov	r1, r8
   2ec64:	bl	345a8 <fb_value_set_visit@@Base+0x410>
   2ec68:	str	r0, [sp, #8]
   2ec6c:	str	r1, [sp, #4]
   2ec70:	bl	348d0 <fb_value_set_visit@@Base+0x738>
   2ec74:	b	2eee0 <__flatcc_fb_coerce_scalar_type@@Base+0x3cc>
   2ec78:	ldrh	r0, [r5]
   2ec7c:	cmp	r0, #5
   2ec80:	bne	2ee04 <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   2ec84:	ldrd	r0, [r7]
   2ec88:	subs	r0, r0, #65536	; 0x10000
   2ec8c:	sbcs	r0, r1, #0
   2ec90:	bcc	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ec94:	movw	r2, #64825	; 0xfd39
   2ec98:	movt	r2, #4
   2ec9c:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2eca0:	ldrh	r0, [r5]
   2eca4:	cmp	r0, #5
   2eca8:	bne	2ee10 <__flatcc_fb_coerce_scalar_type@@Base+0x2fc>
   2ecac:	ldrd	r0, [r7]
   2ecb0:	subs	r0, r0, #256	; 0x100
   2ecb4:	sbcs	r0, r1, #0
   2ecb8:	bcc	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ecbc:	movw	r2, #64912	; 0xfd90
   2ecc0:	movt	r2, #4
   2ecc4:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ecc8:	ldrh	r0, [r5]
   2eccc:	cmp	r0, #5
   2ecd0:	beq	2ee34 <__flatcc_fb_coerce_scalar_type@@Base+0x320>
   2ecd4:	cmp	r0, #4
   2ecd8:	bne	2ee94 <__flatcc_fb_coerce_scalar_type@@Base+0x380>
   2ecdc:	ldrd	r0, [r7]
   2ece0:	mvn	r2, #0
   2ece4:	mvn	r3, #32768	; 0x8000
   2ece8:	subs	r0, r3, r0
   2ecec:	sbcs	r0, r2, r1
   2ecf0:	blt	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ecf4:	movw	r2, #65114	; 0xfe5a
   2ecf8:	movt	r2, #4
   2ecfc:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ed00:	ldrh	r0, [r5]
   2ed04:	cmp	r0, #5
   2ed08:	bne	2ee1c <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   2ed0c:	ldr	r0, [r7, #4]
   2ed10:	cmp	r0, #0
   2ed14:	beq	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ed18:	movw	r2, #64738	; 0xfce2
   2ed1c:	movt	r2, #4
   2ed20:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ed24:	ldrh	r0, [r5]
   2ed28:	cmp	r0, #4
   2ed2c:	beq	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ed30:	cmp	r0, #5
   2ed34:	bne	2eea0 <__flatcc_fb_coerce_scalar_type@@Base+0x38c>
   2ed38:	ldr	r0, [r7, #4]
   2ed3c:	cmn	r0, #1
   2ed40:	bgt	2ee88 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2ed44:	movw	r2, #64941	; 0xfdad
   2ed48:	movt	r2, #4
   2ed4c:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ed50:	ldrh	r0, [r5]
   2ed54:	cmp	r0, #5
   2ed58:	beq	2ee50 <__flatcc_fb_coerce_scalar_type@@Base+0x33c>
   2ed5c:	cmp	r0, #4
   2ed60:	bne	2eeac <__flatcc_fb_coerce_scalar_type@@Base+0x398>
   2ed64:	ldrd	r0, [r7]
   2ed68:	mvn	r2, #0
   2ed6c:	mvn	r3, #-2147483648	; 0x80000000
   2ed70:	subs	r0, r3, r0
   2ed74:	sbcs	r0, r2, r1
   2ed78:	blt	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ed7c:	movw	r2, #65014	; 0xfdf6
   2ed80:	movt	r2, #4
   2ed84:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ed88:	ldrh	r0, [r5]
   2ed8c:	cmp	r0, #5
   2ed90:	beq	2ee6c <__flatcc_fb_coerce_scalar_type@@Base+0x358>
   2ed94:	cmp	r0, #4
   2ed98:	bne	2eeb8 <__flatcc_fb_coerce_scalar_type@@Base+0x3a4>
   2ed9c:	ldrd	r0, [r7]
   2eda0:	mvn	r2, #0
   2eda4:	mvn	r3, #128	; 0x80
   2eda8:	subs	r0, r3, r0
   2edac:	sbcs	r0, r2, r1
   2edb0:	blt	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2edb4:	movw	r2, #65220	; 0xfec4
   2edb8:	movt	r2, #4
   2edbc:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2edc0:	ldrh	r0, [r5]
   2edc4:	cmp	r0, #3
   2edc8:	beq	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2edcc:	cmp	r0, #5
   2edd0:	beq	2ef1c <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   2edd4:	cmp	r0, #4
   2edd8:	bne	2ef6c <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   2eddc:	ldm	r7, {r6, r8}
   2ede0:	mov	r0, r6
   2ede4:	mov	r1, r8
   2ede8:	bl	347dc <fb_value_set_visit@@Base+0x644>
   2edec:	str	r0, [sp, #8]
   2edf0:	bl	348a4 <fb_value_set_visit@@Base+0x70c>
   2edf4:	b	2ef34 <__flatcc_fb_coerce_scalar_type@@Base+0x420>
   2edf8:	movw	r2, #108	; 0x6c
   2edfc:	movt	r2, #5
   2ee00:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee04:	movw	r2, #64767	; 0xfcff
   2ee08:	movt	r2, #4
   2ee0c:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee10:	movw	r2, #64856	; 0xfd58
   2ee14:	movt	r2, #4
   2ee18:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee1c:	movw	r2, #64682	; 0xfcaa
   2ee20:	movt	r2, #4
   2ee24:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee28:	movw	r2, #65382	; 0xff66
   2ee2c:	movt	r2, #4
   2ee30:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee34:	ldrd	r0, [r7]
   2ee38:	subs	r0, r0, #32768	; 0x8000
   2ee3c:	sbcs	r0, r1, #0
   2ee40:	blt	2ee88 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2ee44:	movw	r2, #65144	; 0xfe78
   2ee48:	movt	r2, #4
   2ee4c:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee50:	ldrd	r0, [r7]
   2ee54:	subs	r0, r0, #-2147483648	; 0x80000000
   2ee58:	sbcs	r0, r1, #0
   2ee5c:	blt	2ee88 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2ee60:	movw	r2, #65042	; 0xfe12
   2ee64:	movt	r2, #4
   2ee68:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee6c:	ldrd	r0, [r7]
   2ee70:	subs	r0, r0, #128	; 0x80
   2ee74:	sbcs	r0, r1, #0
   2ee78:	blt	2ee88 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2ee7c:	movw	r2, #65248	; 0xfee0
   2ee80:	movt	r2, #4
   2ee84:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee88:	mov	r0, #4
   2ee8c:	strh	r0, [r5]
   2ee90:	b	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ee94:	movw	r2, #65173	; 0xfe95
   2ee98:	movt	r2, #4
   2ee9c:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2eea0:	movw	r2, #64972	; 0xfdcc
   2eea4:	movt	r2, #4
   2eea8:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2eeac:	movw	r2, #65069	; 0xfe2d
   2eeb0:	movt	r2, #4
   2eeb4:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2eeb8:	movw	r2, #65275	; 0xfefb
   2eebc:	movt	r2, #4
   2eec0:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2eec4:	ldm	r7, {r6, r8}
   2eec8:	mov	r0, r6
   2eecc:	mov	r1, r8
   2eed0:	bl	34594 <fb_value_set_visit@@Base+0x3fc>
   2eed4:	str	r0, [sp, #8]
   2eed8:	str	r1, [sp, #4]
   2eedc:	bl	34940 <fb_value_set_visit@@Base+0x7a8>
   2eee0:	eor	r1, r8, r1
   2eee4:	eor	r0, r6, r0
   2eee8:	orrs	r0, r0, r1
   2eeec:	bne	2ef04 <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
   2eef0:	ldr	r0, [sp, #8]
   2eef4:	ldr	r1, [sp, #4]
   2eef8:	vmov	d16, r0, r1
   2eefc:	mov	r0, #3
   2ef00:	b	2ef54 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   2ef04:	movw	r2, #65436	; 0xff9c
   2ef08:	movt	r2, #4
   2ef0c:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef10:	movw	r2, #65484	; 0xffcc
   2ef14:	movt	r2, #4
   2ef18:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef1c:	ldm	r7, {r6, r8}
   2ef20:	mov	r0, r6
   2ef24:	mov	r1, r8
   2ef28:	bl	347cc <fb_value_set_visit@@Base+0x634>
   2ef2c:	str	r0, [sp, #8]
   2ef30:	bl	34900 <fb_value_set_visit@@Base+0x768>
   2ef34:	eor	r1, r8, r1
   2ef38:	eor	r0, r6, r0
   2ef3c:	orrs	r0, r0, r1
   2ef40:	bne	2ef60 <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   2ef44:	ldr	r0, [sp, #8]
   2ef48:	vmov	s0, r0
   2ef4c:	mov	r0, #3
   2ef50:	vcvt.f64.f32	d16, s0
   2ef54:	strh	r0, [r7, #8]
   2ef58:	vstr	d16, [r7]
   2ef5c:	b	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ef60:	movw	r2, #5
   2ef64:	movt	r2, #5
   2ef68:	b	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef6c:	movw	r2, #52	; 0x34
   2ef70:	movt	r2, #5
   2ef74:	mov	r0, r9
   2ef78:	mov	r1, sl
   2ef7c:	bl	2efb8 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   2ef80:	mov	r0, #1
   2ef84:	strh	r0, [r5]
   2ef88:	mvn	r4, #0
   2ef8c:	mov	r0, r4
   2ef90:	sub	sp, fp, #28
   2ef94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ef98:	movw	r0, #64432	; 0xfbb0
   2ef9c:	movt	r0, #4
   2efa0:	movw	r1, #64463	; 0xfbcf
   2efa4:	movt	r1, #4
   2efa8:	movw	r3, #64533	; 0xfc15
   2efac:	movt	r3, #4
   2efb0:	mov	r2, #52	; 0x34
   2efb4:	bl	14a80 <__assert_fail@plt>
   2efb8:	ldr	r1, [r1, #4]
   2efbc:	b	2efc0 <__flatcc_fb_coerce_scalar_type@@Base+0x4ac>
   2efc0:	b	2efc4 <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   2efc4:	push	{fp, lr}
   2efc8:	mov	fp, sp
   2efcc:	sub	sp, sp, #8
   2efd0:	mov	r3, #0
   2efd4:	str	r3, [sp]
   2efd8:	str	r3, [sp, #4]
   2efdc:	mov	r3, #0
   2efe0:	bl	280c4 <__flatcc_error_report@@Base>
   2efe4:	mov	sp, fp
   2efe8:	pop	{fp, pc}

0002efec <flatcc_builder_default_alloc@@Base>:
   2efec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eff0:	add	fp, sp, #24
   2eff4:	mov	r4, r1
   2eff8:	cmp	r2, #0
   2effc:	beq	2f044 <flatcc_builder_default_alloc@@Base+0x58>
   2f000:	mov	r8, r3
   2f004:	ldr	r0, [fp, #8]
   2f008:	sub	r1, r0, #1
   2f00c:	cmp	r1, #6
   2f010:	bhi	2f070 <flatcc_builder_default_alloc@@Base+0x84>
   2f014:	mov	r0, #256	; 0x100
   2f018:	add	r3, pc, #0
   2f01c:	ldr	pc, [r3, r1, lsl #2]
   2f020:	andeq	pc, r2, r4, lsl #1
   2f024:	andeq	pc, r2, r0, ror r0	; <UNPREDICTABLE>
   2f028:	andeq	pc, r2, r0, ror r0	; <UNPREDICTABLE>
   2f02c:	andeq	pc, r2, ip, lsr r0	; <UNPREDICTABLE>
   2f030:	andeq	pc, r2, r8, ror r0	; <UNPREDICTABLE>
   2f034:	andeq	pc, r2, r0, ror r0	; <UNPREDICTABLE>
   2f038:	andeq	pc, r2, r0, lsl #1
   2f03c:	mov	r0, #288	; 0x120
   2f040:	b	2f084 <flatcc_builder_default_alloc@@Base+0x98>
   2f044:	ldr	r0, [r4]
   2f048:	cmp	r0, #0
   2f04c:	moveq	r6, #0
   2f050:	moveq	r0, r6
   2f054:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f058:	bl	14900 <free@plt>
   2f05c:	mov	r6, #0
   2f060:	str	r6, [r4]
   2f064:	str	r6, [r4, #4]
   2f068:	mov	r0, r6
   2f06c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f070:	mov	r0, #32
   2f074:	b	2f084 <flatcc_builder_default_alloc@@Base+0x98>
   2f078:	mov	r0, r2
   2f07c:	b	2f084 <flatcc_builder_default_alloc@@Base+0x98>
   2f080:	mov	r0, #64	; 0x40
   2f084:	mov	r7, r0
   2f088:	lsl	r0, r0, #1
   2f08c:	cmp	r7, r2
   2f090:	bcc	2f084 <flatcc_builder_default_alloc@@Base+0x98>
   2f094:	ldr	r0, [r4, #4]
   2f098:	mov	r6, #0
   2f09c:	cmp	r0, r2
   2f0a0:	lsrcs	r0, r0, #1
   2f0a4:	cmpcs	r0, r7
   2f0a8:	bcs	2f0e0 <flatcc_builder_default_alloc@@Base+0xf4>
   2f0ac:	ldr	r0, [r4]
   2f0b0:	mov	r1, r7
   2f0b4:	bl	14948 <realloc@plt>
   2f0b8:	cmp	r0, #0
   2f0bc:	mvneq	r6, #0
   2f0c0:	moveq	r0, r6
   2f0c4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f0c8:	mov	r5, r0
   2f0cc:	cmp	r8, #0
   2f0d0:	ldrne	r1, [r4, #4]
   2f0d4:	cmpne	r7, r1
   2f0d8:	bhi	2f0e8 <flatcc_builder_default_alloc@@Base+0xfc>
   2f0dc:	stm	r4, {r5, r7}
   2f0e0:	mov	r0, r6
   2f0e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f0e8:	add	r0, r5, r1
   2f0ec:	sub	r2, r7, r1
   2f0f0:	mov	r1, #0
   2f0f4:	bl	149d8 <memset@plt>
   2f0f8:	b	2f0dc <flatcc_builder_default_alloc@@Base+0xf0>

0002f0fc <flatcc_builder_flush_vtable_cache@@Base>:
   2f0fc:	push	{r4, r5, fp, lr}
   2f100:	add	fp, sp, #8
   2f104:	mov	r4, r0
   2f108:	ldr	r0, [r0, #116]	; 0x74
   2f10c:	cmp	r0, #0
   2f110:	popeq	{r4, r5, fp, pc}
   2f114:	ldr	r0, [r4, #92]	; 0x5c
   2f118:	ldr	r2, [r4, #96]	; 0x60
   2f11c:	mov	r5, #0
   2f120:	mov	r1, #0
   2f124:	bl	149d8 <memset@plt>
   2f128:	mov	r0, #16
   2f12c:	str	r5, [r4, #120]	; 0x78
   2f130:	str	r0, [r4, #124]	; 0x7c
   2f134:	pop	{r4, r5, fp, pc}

0002f138 <flatcc_builder_custom_init@@Base>:
   2f138:	push	{r4, r5, r6, r7, fp, lr}
   2f13c:	add	fp, sp, #16
   2f140:	mov	r5, r3
   2f144:	mov	r6, r2
   2f148:	mov	r7, r1
   2f14c:	mov	r4, r0
   2f150:	mov	r1, #0
   2f154:	mov	r2, #232	; 0xe8
   2f158:	bl	149d8 <memset@plt>
   2f15c:	ldr	r0, [fp, #8]
   2f160:	cmp	r7, #0
   2f164:	bne	2f17c <flatcc_builder_custom_init@@Base+0x44>
   2f168:	mov	r1, #1
   2f16c:	str	r1, [r4, #184]	; 0xb8
   2f170:	add	r6, r4, #188	; 0xbc
   2f174:	movw	r7, #9488	; 0x2510
   2f178:	movt	r7, #3
   2f17c:	movw	r1, #61420	; 0xefec
   2f180:	movt	r1, #2
   2f184:	cmp	r5, #0
   2f188:	movne	r1, r5
   2f18c:	str	r6, [r4, #36]	; 0x24
   2f190:	str	r0, [r4, #40]	; 0x28
   2f194:	str	r7, [r4, #44]	; 0x2c
   2f198:	str	r1, [r4, #48]	; 0x30
   2f19c:	mov	r0, #0
   2f1a0:	pop	{r4, r5, r6, r7, fp, pc}

0002f1a4 <flatcc_builder_init@@Base>:
   2f1a4:	push	{fp, lr}
   2f1a8:	mov	fp, sp
   2f1ac:	sub	sp, sp, #8
   2f1b0:	mov	r1, #0
   2f1b4:	str	r1, [sp]
   2f1b8:	mov	r1, #0
   2f1bc:	mov	r2, #0
   2f1c0:	mov	r3, #0
   2f1c4:	bl	2f138 <flatcc_builder_custom_init@@Base>
   2f1c8:	mov	r0, #0
   2f1cc:	mov	sp, fp
   2f1d0:	pop	{fp, pc}

0002f1d4 <flatcc_builder_custom_reset@@Base>:
   2f1d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f1d8:	add	fp, sp, #24
   2f1dc:	sub	sp, sp, #8
   2f1e0:	mov	r9, r2
   2f1e4:	mov	r8, r1
   2f1e8:	mov	r4, r0
   2f1ec:	add	r7, r0, #52	; 0x34
   2f1f0:	mov	r5, #0
   2f1f4:	ldr	r0, [r7]
   2f1f8:	cmp	r0, #0
   2f1fc:	beq	2f240 <flatcc_builder_custom_reset@@Base+0x6c>
   2f200:	cmp	r9, #0
   2f204:	cmpne	r5, #5
   2f208:	beq	2f230 <flatcc_builder_custom_reset@@Base+0x5c>
   2f20c:	ldr	r0, [r4, #40]	; 0x28
   2f210:	ldr	r6, [r4, #48]	; 0x30
   2f214:	str	r5, [sp]
   2f218:	mov	r1, r7
   2f21c:	mov	r2, #1
   2f220:	mov	r3, #1
   2f224:	blx	r6
   2f228:	cmp	r0, #0
   2f22c:	bne	2f2e0 <flatcc_builder_custom_reset@@Base+0x10c>
   2f230:	ldm	r7, {r0, r2}
   2f234:	mov	r1, #0
   2f238:	bl	149d8 <memset@plt>
   2f23c:	b	2f24c <flatcc_builder_custom_reset@@Base+0x78>
   2f240:	ldr	r0, [r7, #4]
   2f244:	cmp	r0, #0
   2f248:	bne	2f2f0 <flatcc_builder_custom_reset@@Base+0x11c>
   2f24c:	add	r7, r7, #8
   2f250:	add	r5, r5, #1
   2f254:	cmp	r5, #8
   2f258:	bcc	2f1f4 <flatcc_builder_custom_reset@@Base+0x20>
   2f25c:	mov	r0, #0
   2f260:	str	r0, [r4, #120]	; 0x78
   2f264:	ldr	r1, [r4, #124]	; 0x7c
   2f268:	cmp	r1, #0
   2f26c:	movne	r1, #16
   2f270:	strne	r1, [r4, #124]	; 0x7c
   2f274:	vmov.i32	q8, #0	; 0x00000000
   2f278:	strh	r0, [r4, #128]	; 0x80
   2f27c:	str	r0, [r4, #136]	; 0x88
   2f280:	str	r0, [r4, #140]	; 0x8c
   2f284:	str	r0, [r4, #32]
   2f288:	add	r1, r4, #148	; 0x94
   2f28c:	vst1.32	{d16-d17}, [r1]
   2f290:	ldr	r1, [r4, #52]	; 0x34
   2f294:	ldr	r2, [r4, #60]	; 0x3c
   2f298:	ldr	r3, [r4, #76]	; 0x4c
   2f29c:	str	r2, [r4, #16]
   2f2a0:	str	r0, [r4, #20]
   2f2a4:	str	r0, [r4, #24]
   2f2a8:	str	r3, [r4]
   2f2ac:	str	r1, [r4, #4]
   2f2b0:	cmp	r8, #0
   2f2b4:	movne	r0, #0
   2f2b8:	strne	r0, [r4, #172]	; 0xac
   2f2bc:	strne	r0, [r4, #176]	; 0xb0
   2f2c0:	strne	r0, [r4, #180]	; 0xb4
   2f2c4:	ldr	r0, [r4, #184]	; 0xb8
   2f2c8:	mov	r5, #0
   2f2cc:	cmp	r0, #0
   2f2d0:	beq	2f2e4 <flatcc_builder_custom_reset@@Base+0x110>
   2f2d4:	add	r0, r4, #188	; 0xbc
   2f2d8:	bl	323f0 <flatcc_emitter_reset@@Base>
   2f2dc:	b	2f2e4 <flatcc_builder_custom_reset@@Base+0x110>
   2f2e0:	mvn	r5, #0
   2f2e4:	mov	r0, r5
   2f2e8:	sub	sp, fp, #24
   2f2ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f2f0:	movw	r0, #641	; 0x281
   2f2f4:	movt	r0, #5
   2f2f8:	movw	r1, #659	; 0x293
   2f2fc:	movt	r1, #5
   2f300:	movw	r3, #729	; 0x2d9
   2f304:	movt	r3, #5
   2f308:	movw	r2, #434	; 0x1b2
   2f30c:	bl	14a80 <__assert_fail@plt>

0002f310 <flatcc_builder_reset@@Base>:
   2f310:	mov	r1, #0
   2f314:	mov	r2, #0
   2f318:	b	2f1d4 <flatcc_builder_custom_reset@@Base>

0002f31c <flatcc_builder_clear@@Base>:
   2f31c:	push	{r4, r5, r6, r7, fp, lr}
   2f320:	add	fp, sp, #16
   2f324:	sub	sp, sp, #8
   2f328:	mov	r7, r0
   2f32c:	add	r5, r0, #52	; 0x34
   2f330:	mov	r6, #0
   2f334:	ldr	r0, [r7, #40]	; 0x28
   2f338:	ldr	r4, [r7, #48]	; 0x30
   2f33c:	str	r6, [sp]
   2f340:	mov	r1, r5
   2f344:	mov	r2, #0
   2f348:	mov	r3, #0
   2f34c:	blx	r4
   2f350:	add	r5, r5, #8
   2f354:	add	r6, r6, #1
   2f358:	cmp	r6, #8
   2f35c:	bne	2f334 <flatcc_builder_clear@@Base+0x18>
   2f360:	ldr	r0, [r7, #184]	; 0xb8
   2f364:	cmp	r0, #0
   2f368:	beq	2f374 <flatcc_builder_clear@@Base+0x58>
   2f36c:	add	r0, r7, #188	; 0xbc
   2f370:	bl	324ac <flatcc_emitter_clear@@Base>
   2f374:	mov	r0, r7
   2f378:	mov	r1, #0
   2f37c:	mov	r2, #232	; 0xe8
   2f380:	sub	sp, fp, #16
   2f384:	pop	{r4, r5, r6, r7, fp, lr}
   2f388:	b	149d8 <memset@plt>

0002f38c <flatcc_builder_enter_user_frame_ptr@@Base>:
   2f38c:	push	{r4, r5, r6, r7, fp, lr}
   2f390:	add	fp, sp, #16
   2f394:	sub	sp, sp, #8
   2f398:	mov	r4, r0
   2f39c:	ldr	r2, [r0, #228]	; 0xe4
   2f3a0:	mov	r7, #0
   2f3a4:	str	r7, [sp]
   2f3a8:	add	r0, r1, #7
   2f3ac:	bic	r5, r0, #3
   2f3b0:	mov	r0, r4
   2f3b4:	mov	r1, #7
   2f3b8:	mov	r3, r5
   2f3bc:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2f3c0:	cmp	r0, #0
   2f3c4:	beq	2f3f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   2f3c8:	mov	r6, r0
   2f3cc:	mov	r1, #0
   2f3d0:	mov	r2, r5
   2f3d4:	bl	149d8 <memset@plt>
   2f3d8:	ldr	r0, [r4, #224]	; 0xe0
   2f3dc:	str	r0, [r6], #4
   2f3e0:	ldr	r0, [r4, #228]	; 0xe4
   2f3e4:	add	r1, r0, #4
   2f3e8:	add	r0, r0, r5
   2f3ec:	str	r1, [r4, #224]	; 0xe0
   2f3f0:	str	r0, [r4, #228]	; 0xe4
   2f3f4:	mov	r7, r6
   2f3f8:	mov	r0, r7
   2f3fc:	sub	sp, fp, #16
   2f400:	pop	{r4, r5, r6, r7, fp, pc}
   2f404:	push	{r4, r5, fp, lr}
   2f408:	add	fp, sp, #8
   2f40c:	sub	sp, sp, #8
   2f410:	mov	r4, r2
   2f414:	add	r2, r3, r2
   2f418:	add	r3, r0, r1, lsl #3
   2f41c:	add	r5, r3, #52	; 0x34
   2f420:	ldr	r3, [r3, #56]	; 0x38
   2f424:	cmp	r2, r3
   2f428:	bls	2f450 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2f42c:	ldr	r3, [fp, #8]
   2f430:	ldr	ip, [r0, #40]	; 0x28
   2f434:	ldr	lr, [r0, #48]	; 0x30
   2f438:	str	r1, [sp]
   2f43c:	mov	r0, ip
   2f440:	mov	r1, r5
   2f444:	blx	lr
   2f448:	cmp	r0, #0
   2f44c:	bne	2f460 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2f450:	ldr	r0, [r5]
   2f454:	add	r0, r0, r4
   2f458:	sub	sp, fp, #8
   2f45c:	pop	{r4, r5, fp, pc}
   2f460:	movw	r0, #29885	; 0x74bd
   2f464:	movt	r0, #4
   2f468:	movw	r1, #659	; 0x293
   2f46c:	movt	r1, #5
   2f470:	movw	r3, #4723	; 0x1273
   2f474:	movt	r3, #5
   2f478:	mov	r2, #308	; 0x134
   2f47c:	bl	14a80 <__assert_fail@plt>

0002f480 <flatcc_builder_enter_user_frame@@Base>:
   2f480:	push	{r4, r5, r6, r7, fp, lr}
   2f484:	add	fp, sp, #16
   2f488:	sub	sp, sp, #8
   2f48c:	mov	r4, r0
   2f490:	ldr	r2, [r0, #228]	; 0xe4
   2f494:	mov	r6, #0
   2f498:	str	r6, [sp]
   2f49c:	add	r0, r1, #7
   2f4a0:	bic	r5, r0, #3
   2f4a4:	mov	r0, r4
   2f4a8:	mov	r1, #7
   2f4ac:	mov	r3, r5
   2f4b0:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2f4b4:	cmp	r0, #0
   2f4b8:	beq	2f4e8 <flatcc_builder_enter_user_frame@@Base+0x68>
   2f4bc:	mov	r7, r0
   2f4c0:	mov	r1, #0
   2f4c4:	mov	r2, r5
   2f4c8:	bl	149d8 <memset@plt>
   2f4cc:	ldr	r0, [r4, #224]	; 0xe0
   2f4d0:	str	r0, [r7]
   2f4d4:	ldr	r0, [r4, #228]	; 0xe4
   2f4d8:	add	r6, r0, #4
   2f4dc:	add	r0, r0, r5
   2f4e0:	str	r6, [r4, #224]	; 0xe0
   2f4e4:	str	r0, [r4, #228]	; 0xe4
   2f4e8:	mov	r0, r6
   2f4ec:	sub	sp, fp, #16
   2f4f0:	pop	{r4, r5, r6, r7, fp, pc}

0002f4f4 <flatcc_builder_exit_user_frame@@Base>:
   2f4f4:	ldr	r1, [r0, #224]	; 0xe0
   2f4f8:	cmp	r1, #0
   2f4fc:	subne	r2, r1, #4
   2f500:	strne	r2, [r0, #228]	; 0xe4
   2f504:	ldrne	r2, [r0, #108]	; 0x6c
   2f508:	addne	r1, r2, r1
   2f50c:	ldrne	r1, [r1, #-4]
   2f510:	strne	r1, [r0, #224]	; 0xe0
   2f514:	movne	r0, r1
   2f518:	bxne	lr
   2f51c:	push	{fp, lr}
   2f520:	mov	fp, sp
   2f524:	movw	r0, #791	; 0x317
   2f528:	movt	r0, #5
   2f52c:	movw	r1, #659	; 0x293
   2f530:	movt	r1, #5
   2f534:	movw	r3, #816	; 0x330
   2f538:	movt	r3, #5
   2f53c:	movw	r2, #542	; 0x21e
   2f540:	bl	14a80 <__assert_fail@plt>

0002f544 <flatcc_builder_exit_user_frame_at@@Base>:
   2f544:	ldr	r2, [r0, #224]	; 0xe0
   2f548:	cmp	r2, r1
   2f54c:	bcc	2f558 <flatcc_builder_exit_user_frame_at@@Base+0x14>
   2f550:	str	r1, [r0, #224]	; 0xe0
   2f554:	b	2f4f4 <flatcc_builder_exit_user_frame@@Base>
   2f558:	push	{fp, lr}
   2f55c:	mov	fp, sp
   2f560:	movw	r0, #874	; 0x36a
   2f564:	movt	r0, #5
   2f568:	movw	r1, #659	; 0x293
   2f56c:	movt	r1, #5
   2f570:	movw	r3, #905	; 0x389
   2f574:	movt	r3, #5
   2f578:	movw	r2, #551	; 0x227
   2f57c:	bl	14a80 <__assert_fail@plt>

0002f580 <flatcc_builder_get_current_user_frame@@Base>:
   2f580:	ldr	r0, [r0, #224]	; 0xe0
   2f584:	bx	lr

0002f588 <flatcc_builder_get_user_frame_ptr@@Base>:
   2f588:	ldr	r0, [r0, #108]	; 0x6c
   2f58c:	add	r0, r0, r1
   2f590:	bx	lr

0002f594 <flatcc_builder_embed_buffer@@Base>:
   2f594:	push	{r4, r5, r6, r7, fp, lr}
   2f598:	add	fp, sp, #16
   2f59c:	sub	sp, sp, #80	; 0x50
   2f5a0:	mov	r5, r3
   2f5a4:	mov	r6, r2
   2f5a8:	mov	r2, r1
   2f5ac:	mov	r4, r0
   2f5b0:	ldr	r0, [fp, #8]
   2f5b4:	strh	r0, [fp, #-18]	; 0xffffffee
   2f5b8:	ldr	r3, [r4, #152]	; 0x98
   2f5bc:	cmp	r3, #0
   2f5c0:	movwne	r3, #1
   2f5c4:	sub	r1, fp, #18
   2f5c8:	mov	r0, r4
   2f5cc:	bl	2f6a0 <flatcc_builder_embed_buffer@@Base+0x10c>
   2f5d0:	ldr	r0, [fp, #12]
   2f5d4:	and	r0, r0, #2
   2f5d8:	add	r1, r5, r0, lsl #1
   2f5dc:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2f5e0:	mov	r0, r4
   2f5e4:	bl	2f75c <flatcc_builder_embed_buffer@@Base+0x1c8>
   2f5e8:	mov	r7, r0
   2f5ec:	add	r0, r0, r5
   2f5f0:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2f5f4:	mov	r1, #0
   2f5f8:	str	r1, [sp]
   2f5fc:	str	r0, [fp, #-24]	; 0xffffffe8
   2f600:	str	r1, [sp, #4]
   2f604:	ldr	r0, [r4, #152]	; 0x98
   2f608:	cmp	r0, #0
   2f60c:	beq	2f62c <flatcc_builder_embed_buffer@@Base+0x98>
   2f610:	sub	r0, fp, #24
   2f614:	str	r0, [sp, #8]
   2f618:	mov	r0, #4
   2f61c:	str	r0, [sp]
   2f620:	str	r0, [sp, #12]
   2f624:	mov	r0, #1
   2f628:	str	r0, [sp, #4]
   2f62c:	cmp	r5, #0
   2f630:	beq	2f658 <flatcc_builder_embed_buffer@@Base+0xc4>
   2f634:	ldm	sp, {r0, r1}
   2f638:	add	r0, r0, r5
   2f63c:	str	r0, [sp]
   2f640:	mov	r0, sp
   2f644:	add	r0, r0, r1, lsl #3
   2f648:	str	r6, [r0, #8]
   2f64c:	str	r5, [r0, #12]
   2f650:	add	r0, r1, #1
   2f654:	str	r0, [sp, #4]
   2f658:	cmp	r7, #0
   2f65c:	beq	2f68c <flatcc_builder_embed_buffer@@Base+0xf8>
   2f660:	ldm	sp, {r0, r1}
   2f664:	add	r0, r0, r7
   2f668:	str	r0, [sp]
   2f66c:	mov	r0, sp
   2f670:	add	r0, r0, r1, lsl #3
   2f674:	movw	r2, #129	; 0x81
   2f678:	movt	r2, #5
   2f67c:	str	r2, [r0, #8]
   2f680:	str	r7, [r0, #12]
   2f684:	add	r0, r1, #1
   2f688:	str	r0, [sp, #4]
   2f68c:	mov	r1, sp
   2f690:	mov	r0, r4
   2f694:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   2f698:	sub	sp, fp, #16
   2f69c:	pop	{r4, r5, r6, r7, fp, pc}
   2f6a0:	push	{r4, r5, r6, r7, fp, lr}
   2f6a4:	add	fp, sp, #16
   2f6a8:	sub	sp, sp, #72	; 0x48
   2f6ac:	mov	r6, r3
   2f6b0:	mov	r5, r2
   2f6b4:	mov	r7, r1
   2f6b8:	mov	r4, r0
   2f6bc:	cmp	r2, #0
   2f6c0:	bne	2f6d0 <flatcc_builder_embed_buffer@@Base+0x13c>
   2f6c4:	ldrh	r5, [r4, #132]	; 0x84
   2f6c8:	cmp	r5, #0
   2f6cc:	movweq	r5, #1
   2f6d0:	mov	r0, r7
   2f6d4:	mov	r1, #4
   2f6d8:	bl	30548 <flatcc_builder_start_vector@@Base+0x80>
   2f6dc:	mov	r0, r7
   2f6e0:	mov	r1, r5
   2f6e4:	bl	30548 <flatcc_builder_start_vector@@Base+0x80>
   2f6e8:	cmp	r6, #0
   2f6ec:	bne	2f734 <flatcc_builder_embed_buffer@@Base+0x1a0>
   2f6f0:	mov	r0, r4
   2f6f4:	mov	r1, r5
   2f6f8:	bl	32244 <flatcc_builder_get_emit_context@@Base+0x8>
   2f6fc:	cmp	r0, #0
   2f700:	beq	2f734 <flatcc_builder_embed_buffer@@Base+0x1a0>
   2f704:	movw	r1, #129	; 0x81
   2f708:	movt	r1, #5
   2f70c:	str	r1, [sp, #8]
   2f710:	str	r0, [sp]
   2f714:	str	r0, [sp, #12]
   2f718:	mov	r0, #1
   2f71c:	str	r0, [sp, #4]
   2f720:	mov	r1, sp
   2f724:	mov	r0, r4
   2f728:	bl	308d4 <flatcc_builder_create_vtable@@Base+0x80>
   2f72c:	cmp	r0, #0
   2f730:	beq	2f73c <flatcc_builder_embed_buffer@@Base+0x1a8>
   2f734:	sub	sp, fp, #16
   2f738:	pop	{r4, r5, r6, r7, fp, pc}
   2f73c:	movw	r0, #29885	; 0x74bd
   2f740:	movt	r0, #4
   2f744:	movw	r1, #659	; 0x293
   2f748:	movt	r1, #5
   2f74c:	movw	r3, #4790	; 0x12b6
   2f750:	movt	r3, #5
   2f754:	movw	r2, #702	; 0x2be
   2f758:	bl	14a80 <__assert_fail@plt>
   2f75c:	ldr	r0, [r0, #136]	; 0x88
   2f760:	sub	r0, r0, r1
   2f764:	sub	r1, r2, #1
   2f768:	and	r0, r0, r1
   2f76c:	bx	lr
   2f770:	bx	lr
   2f774:	push	{r4, r5, fp, lr}
   2f778:	add	fp, sp, #8
   2f77c:	sub	sp, sp, #8
   2f780:	ldr	r3, [r1]
   2f784:	cmp	r3, #0
   2f788:	ble	2f7e8 <flatcc_builder_embed_buffer@@Base+0x254>
   2f78c:	mov	r4, r0
   2f790:	ldr	r0, [r0, #136]	; 0x88
   2f794:	sub	r5, r0, r3
   2f798:	ldr	r2, [r1, #4]
   2f79c:	ldr	r0, [r4, #36]	; 0x24
   2f7a0:	ldr	ip, [r4, #44]	; 0x2c
   2f7a4:	str	r3, [sp]
   2f7a8:	add	r1, r1, #8
   2f7ac:	mov	r3, r5
   2f7b0:	blx	ip
   2f7b4:	cmp	r0, #0
   2f7b8:	streq	r5, [r4, #136]	; 0x88
   2f7bc:	moveq	r0, r5
   2f7c0:	subeq	sp, fp, #8
   2f7c4:	popeq	{r4, r5, fp, pc}
   2f7c8:	movw	r0, #29885	; 0x74bd
   2f7cc:	movt	r0, #4
   2f7d0:	movw	r1, #659	; 0x293
   2f7d4:	movt	r1, #5
   2f7d8:	movw	r3, #4856	; 0x12f8
   2f7dc:	movt	r3, #5
   2f7e0:	movw	r2, #651	; 0x28b
   2f7e4:	bl	14a80 <__assert_fail@plt>
   2f7e8:	movw	r0, #29885	; 0x74bd
   2f7ec:	movt	r0, #4
   2f7f0:	movw	r1, #659	; 0x293
   2f7f4:	movt	r1, #5
   2f7f8:	movw	r3, #4856	; 0x12f8
   2f7fc:	movt	r3, #5
   2f800:	movw	r2, #647	; 0x287
   2f804:	bl	14a80 <__assert_fail@plt>

0002f808 <flatcc_builder_create_buffer@@Base>:
   2f808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f80c:	add	fp, sp, #28
   2f810:	sub	sp, sp, #92	; 0x5c
   2f814:	mov	r6, r3
   2f818:	mov	r7, r1
   2f81c:	mov	r4, r0
   2f820:	ldr	r0, [fp, #8]
   2f824:	strh	r0, [fp, #-30]	; 0xffffffe2
   2f828:	mov	r0, #0
   2f82c:	str	r0, [sp, #4]
   2f830:	ldr	sl, [fp, #12]
   2f834:	and	r9, sl, #1
   2f838:	sub	r1, fp, #30
   2f83c:	mov	r0, r4
   2f840:	mov	r3, r9
   2f844:	bl	2f6a0 <flatcc_builder_embed_buffer@@Base+0x10c>
   2f848:	ldrh	r5, [fp, #-30]	; 0xffffffe2
   2f84c:	mov	r0, r4
   2f850:	mov	r1, r5
   2f854:	bl	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>
   2f858:	cmp	r7, #0
   2f85c:	str	r6, [sp]
   2f860:	beq	2f87c <flatcc_builder_create_buffer@@Base+0x74>
   2f864:	ldr	r7, [r7]
   2f868:	mov	r0, r7
   2f86c:	bl	2f9e8 <flatcc_builder_create_buffer@@Base+0x1e0>
   2f870:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2f874:	str	r7, [sp, #4]
   2f878:	b	2f880 <flatcc_builder_create_buffer@@Base+0x78>
   2f87c:	ldr	r7, [sp, #4]
   2f880:	mov	r8, #4
   2f884:	and	r0, r8, sl, lsl #1
   2f888:	cmp	r7, #0
   2f88c:	mov	r6, r7
   2f890:	movwne	r6, #1
   2f894:	add	r0, r0, r6, lsl #2
   2f898:	add	r1, r0, #4
   2f89c:	mov	r0, r4
   2f8a0:	mov	r2, r5
   2f8a4:	bl	2f75c <flatcc_builder_embed_buffer@@Base+0x1c8>
   2f8a8:	mov	r1, #0
   2f8ac:	str	r1, [sp, #8]
   2f8b0:	str	r1, [sp, #12]
   2f8b4:	ands	ip, sl, #3
   2f8b8:	beq	2f8d4 <flatcc_builder_create_buffer@@Base+0xcc>
   2f8bc:	sub	r1, fp, #40	; 0x28
   2f8c0:	str	r1, [sp, #16]
   2f8c4:	str	r8, [sp, #8]
   2f8c8:	str	r8, [sp, #20]
   2f8cc:	mov	r1, #1
   2f8d0:	str	r1, [sp, #12]
   2f8d4:	ldr	r1, [sp, #8]
   2f8d8:	ldr	r3, [sp, #12]
   2f8dc:	add	r5, r1, #4
   2f8e0:	str	r5, [sp, #8]
   2f8e4:	add	lr, sp, #8
   2f8e8:	add	r1, lr, r3, lsl #3
   2f8ec:	sub	r2, fp, #36	; 0x24
   2f8f0:	str	r2, [r1, #8]
   2f8f4:	str	r8, [r1, #12]
   2f8f8:	add	r1, r3, #1
   2f8fc:	str	r1, [sp, #12]
   2f900:	cmp	r7, #0
   2f904:	beq	2f92c <flatcc_builder_create_buffer@@Base+0x124>
   2f908:	lsl	r2, r6, #2
   2f90c:	add	r5, r5, r2
   2f910:	str	r5, [sp, #8]
   2f914:	add	r1, lr, r1, lsl #3
   2f918:	add	r5, sp, #4
   2f91c:	str	r5, [r1, #8]
   2f920:	str	r2, [r1, #12]
   2f924:	add	r1, r3, #2
   2f928:	str	r1, [sp, #12]
   2f92c:	cmp	r0, #0
   2f930:	beq	2f960 <flatcc_builder_create_buffer@@Base+0x158>
   2f934:	ldr	r1, [sp, #8]
   2f938:	ldr	r2, [sp, #12]
   2f93c:	add	r1, r1, r0
   2f940:	str	r1, [sp, #8]
   2f944:	add	r1, lr, r2, lsl #3
   2f948:	movw	r3, #129	; 0x81
   2f94c:	movt	r3, #5
   2f950:	str	r3, [r1, #8]
   2f954:	str	r0, [r1, #12]
   2f958:	add	r0, r2, #1
   2f95c:	str	r0, [sp, #12]
   2f960:	ldr	r0, [r4, #136]	; 0x88
   2f964:	ldr	r1, [sp, #8]
   2f968:	sub	r5, r0, r1
   2f96c:	cmp	ip, #0
   2f970:	addne	r5, r5, #4
   2f974:	mov	r0, #144	; 0x90
   2f978:	cmp	r9, #0
   2f97c:	movweq	r0, #140	; 0x8c
   2f980:	ldr	r0, [r4, r0]
   2f984:	sub	r0, r0, r5
   2f988:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2f98c:	str	r0, [fp, #-40]	; 0xffffffd8
   2f990:	ldr	r0, [sp]
   2f994:	sub	r0, r0, r5
   2f998:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2f99c:	str	r0, [fp, #-36]	; 0xffffffdc
   2f9a0:	add	r1, sp, #8
   2f9a4:	mov	r0, r4
   2f9a8:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   2f9ac:	cmp	r0, #0
   2f9b0:	subne	sp, fp, #28
   2f9b4:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f9b8:	movw	r0, #29885	; 0x74bd
   2f9bc:	movt	r0, #4
   2f9c0:	movw	r1, #659	; 0x293
   2f9c4:	movt	r1, #5
   2f9c8:	movw	r3, #974	; 0x3ce
   2f9cc:	movt	r3, #5
   2f9d0:	mov	r2, #772	; 0x304
   2f9d4:	bl	14a80 <__assert_fail@plt>
   2f9d8:	ldrh	r2, [r0, #128]	; 0x80
   2f9dc:	cmp	r2, r1
   2f9e0:	strhcc	r1, [r0, #128]	; 0x80
   2f9e4:	bx	lr
   2f9e8:	bx	lr

0002f9ec <flatcc_builder_create_struct@@Base>:
   2f9ec:	push	{r4, r5, r6, r7, fp, lr}
   2f9f0:	add	fp, sp, #16
   2f9f4:	sub	sp, sp, #72	; 0x48
   2f9f8:	cmp	r3, #0
   2f9fc:	beq	2fa94 <flatcc_builder_create_struct@@Base+0xa8>
   2fa00:	mov	r7, r3
   2fa04:	mov	r5, r2
   2fa08:	mov	r6, r1
   2fa0c:	mov	r4, r0
   2fa10:	mov	r1, r3
   2fa14:	bl	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>
   2fa18:	mov	r0, r4
   2fa1c:	mov	r1, r5
   2fa20:	mov	r2, r7
   2fa24:	bl	2f75c <flatcc_builder_embed_buffer@@Base+0x1c8>
   2fa28:	mov	r1, #0
   2fa2c:	str	r1, [sp]
   2fa30:	str	r1, [sp, #4]
   2fa34:	cmp	r5, #0
   2fa38:	strne	r6, [sp, #8]
   2fa3c:	strne	r5, [sp]
   2fa40:	strne	r5, [sp, #12]
   2fa44:	movne	r1, #1
   2fa48:	strne	r1, [sp, #4]
   2fa4c:	cmp	r0, #0
   2fa50:	beq	2fa80 <flatcc_builder_create_struct@@Base+0x94>
   2fa54:	ldm	sp, {r1, r2}
   2fa58:	add	r1, r1, r0
   2fa5c:	str	r1, [sp]
   2fa60:	mov	r1, sp
   2fa64:	add	r1, r1, r2, lsl #3
   2fa68:	movw	r3, #129	; 0x81
   2fa6c:	movt	r3, #5
   2fa70:	str	r3, [r1, #8]
   2fa74:	str	r0, [r1, #12]
   2fa78:	add	r0, r2, #1
   2fa7c:	str	r0, [sp, #4]
   2fa80:	mov	r1, sp
   2fa84:	mov	r0, r4
   2fa88:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   2fa8c:	sub	sp, fp, #16
   2fa90:	pop	{r4, r5, r6, r7, fp, pc}
   2fa94:	movw	r0, #1105	; 0x451
   2fa98:	movt	r0, #5
   2fa9c:	movw	r1, #659	; 0x293
   2faa0:	movt	r1, #5
   2faa4:	movw	r3, #1116	; 0x45c
   2faa8:	movt	r3, #5
   2faac:	movw	r2, #783	; 0x30f
   2fab0:	bl	14a80 <__assert_fail@plt>

0002fab4 <flatcc_builder_start_buffer@@Base>:
   2fab4:	push	{r4, r5, r6, r7, fp, lr}
   2fab8:	add	fp, sp, #16
   2fabc:	mov	r6, r3
   2fac0:	mov	r7, r2
   2fac4:	mov	r5, r1
   2fac8:	mov	r4, r0
   2facc:	ldrh	r1, [r0, #128]	; 0x80
   2fad0:	bl	2fb70 <flatcc_builder_start_buffer@@Base+0xbc>
   2fad4:	mov	r1, r0
   2fad8:	mvn	r0, #0
   2fadc:	cmp	r1, #0
   2fae0:	popne	{r4, r5, r6, r7, fp, pc}
   2fae4:	mov	r0, #1
   2fae8:	strh	r0, [r4, #128]	; 0x80
   2faec:	ldrh	r1, [r4, #132]	; 0x84
   2faf0:	ldr	r2, [r4, #32]
   2faf4:	strh	r1, [r2, #34]	; 0x22
   2faf8:	strh	r7, [r4, #132]	; 0x84
   2fafc:	ldrh	r1, [r4, #164]	; 0xa4
   2fb00:	ldr	r2, [r4, #32]
   2fb04:	strh	r1, [r2, #32]
   2fb08:	strh	r6, [r4, #164]	; 0xa4
   2fb0c:	ldr	r1, [r4, #32]
   2fb10:	ldr	r2, [r4, #144]	; 0x90
   2fb14:	str	r2, [r1, #20]
   2fb18:	ldr	r1, [r4, #32]
   2fb1c:	ldr	r2, [r4, #152]	; 0x98
   2fb20:	str	r2, [r1, #28]
   2fb24:	ldr	r1, [r4, #32]
   2fb28:	ldr	r2, [r4, #136]	; 0x88
   2fb2c:	ldr	r3, [r4, #148]	; 0x94
   2fb30:	ldr	r7, [r4, #168]	; 0xa8
   2fb34:	add	r6, r3, #1
   2fb38:	str	r2, [r4, #144]	; 0x90
   2fb3c:	str	r6, [r4, #148]	; 0x94
   2fb40:	str	r3, [r4, #152]	; 0x98
   2fb44:	str	r7, [r1, #16]
   2fb48:	movw	r1, #129	; 0x81
   2fb4c:	movt	r1, #5
   2fb50:	cmp	r5, #0
   2fb54:	movne	r1, r5
   2fb58:	ldr	r1, [r1]
   2fb5c:	str	r1, [r4, #168]	; 0xa8
   2fb60:	ldr	r1, [r4, #32]
   2fb64:	strh	r0, [r1, #14]
   2fb68:	mov	r0, #0
   2fb6c:	pop	{r4, r5, r6, r7, fp, pc}
   2fb70:	push	{r4, r5, r6, sl, fp, lr}
   2fb74:	add	fp, sp, #16
   2fb78:	sub	sp, sp, #8
   2fb7c:	mov	r5, r1
   2fb80:	mov	r4, r0
   2fb84:	ldr	r1, [r0, #156]	; 0x9c
   2fb88:	ldr	r2, [r0, #160]	; 0xa0
   2fb8c:	add	r0, r1, #1
   2fb90:	str	r0, [r4, #156]	; 0x9c
   2fb94:	cmp	r1, r2
   2fb98:	bge	2fbac <flatcc_builder_start_buffer@@Base+0xf8>
   2fb9c:	ldr	r0, [r4, #32]
   2fba0:	add	r0, r0, #36	; 0x24
   2fba4:	str	r0, [r4, #32]
   2fba8:	b	2fc20 <flatcc_builder_start_buffer@@Base+0x16c>
   2fbac:	ldr	r2, [r4, #176]	; 0xb0
   2fbb0:	mvn	r6, #0
   2fbb4:	cmp	r2, #1
   2fbb8:	cmpge	r1, r2
   2fbbc:	bge	2fc5c <flatcc_builder_start_buffer@@Base+0x1a8>
   2fbc0:	mov	r1, #0
   2fbc4:	str	r1, [sp]
   2fbc8:	add	r0, r0, r0, lsl #3
   2fbcc:	mvn	r1, #35	; 0x23
   2fbd0:	add	r2, r1, r0, lsl #2
   2fbd4:	mov	r0, r4
   2fbd8:	mov	r1, #4
   2fbdc:	mov	r3, #36	; 0x24
   2fbe0:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fbe4:	str	r0, [r4, #32]
   2fbe8:	cmp	r0, #0
   2fbec:	beq	2fc5c <flatcc_builder_start_buffer@@Base+0x1a8>
   2fbf0:	ldr	r0, [r4, #88]	; 0x58
   2fbf4:	ldr	r1, [r4, #176]	; 0xb0
   2fbf8:	movw	r2, #36409	; 0x8e39
   2fbfc:	movt	r2, #14563	; 0x38e3
   2fc00:	umull	r0, r2, r0, r2
   2fc04:	lsr	r0, r2, #3
   2fc08:	cmp	r1, r2, lsr #3
   2fc0c:	mov	r2, r0
   2fc10:	movlt	r2, r1
   2fc14:	cmp	r1, #0
   2fc18:	movle	r2, r0
   2fc1c:	str	r2, [r4, #160]	; 0xa0
   2fc20:	ldr	r0, [r4, #20]
   2fc24:	ldr	r1, [r4, #32]
   2fc28:	str	r0, [r1, #8]
   2fc2c:	ldrh	r2, [r4, #130]	; 0x82
   2fc30:	strh	r2, [r1, #12]
   2fc34:	strh	r5, [r4, #130]	; 0x82
   2fc38:	ldr	r2, [r4, #28]
   2fc3c:	mvn	r3, #3
   2fc40:	stm	r1, {r2, r3}
   2fc44:	mov	r6, #0
   2fc48:	str	r6, [r4, #20]
   2fc4c:	add	r0, r0, r2
   2fc50:	add	r0, r0, #7
   2fc54:	bic	r0, r0, #7
   2fc58:	str	r0, [r4, #28]
   2fc5c:	mov	r0, r6
   2fc60:	sub	sp, fp, #16
   2fc64:	pop	{r4, r5, r6, sl, fp, pc}

0002fc68 <flatcc_builder_end_buffer@@Base>:
   2fc68:	push	{r4, r5, r6, r7, fp, lr}
   2fc6c:	add	fp, sp, #16
   2fc70:	sub	sp, sp, #8
   2fc74:	mov	r4, r0
   2fc78:	ldr	r0, [r0, #32]
   2fc7c:	ldrh	r0, [r0, #14]
   2fc80:	cmp	r0, #1
   2fc84:	bne	2fd10 <flatcc_builder_end_buffer@@Base+0xa8>
   2fc88:	mov	r5, r1
   2fc8c:	ldr	r6, [r4, #152]	; 0x98
   2fc90:	ldrh	r7, [r4, #164]	; 0xa4
   2fc94:	ldrh	r1, [r4, #132]	; 0x84
   2fc98:	mov	r0, r4
   2fc9c:	bl	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>
   2fca0:	and	r0, r7, #2
   2fca4:	cmp	r6, #0
   2fca8:	orrne	r0, r0, #1
   2fcac:	ldrh	r2, [r4, #132]	; 0x84
   2fcb0:	ldrh	r1, [r4, #128]	; 0x80
   2fcb4:	str	r1, [sp]
   2fcb8:	str	r0, [sp, #4]
   2fcbc:	add	r1, r4, #168	; 0xa8
   2fcc0:	mov	r0, r4
   2fcc4:	mov	r3, r5
   2fcc8:	bl	2f808 <flatcc_builder_create_buffer@@Base>
   2fccc:	mov	r5, r0
   2fcd0:	cmp	r0, #0
   2fcd4:	beq	2fd04 <flatcc_builder_end_buffer@@Base+0x9c>
   2fcd8:	ldr	r0, [r4, #32]
   2fcdc:	ldr	r1, [r0, #20]
   2fce0:	str	r1, [r4, #144]	; 0x90
   2fce4:	ldr	r1, [r0, #28]
   2fce8:	str	r1, [r4, #152]	; 0x98
   2fcec:	ldr	r1, [r0, #16]
   2fcf0:	str	r1, [r4, #168]	; 0xa8
   2fcf4:	ldrh	r0, [r0, #32]
   2fcf8:	strh	r0, [r4, #164]	; 0xa4
   2fcfc:	mov	r0, r4
   2fd00:	bl	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   2fd04:	mov	r0, r5
   2fd08:	sub	sp, fp, #16
   2fd0c:	pop	{r4, r5, r6, r7, fp, pc}
   2fd10:	movw	r0, #1218	; 0x4c2
   2fd14:	movt	r0, #5
   2fd18:	movw	r1, #659	; 0x293
   2fd1c:	movt	r1, #5
   2fd20:	movw	r3, #1262	; 0x4ee
   2fd24:	movt	r3, #5
   2fd28:	movw	r2, #838	; 0x346
   2fd2c:	bl	14a80 <__assert_fail@plt>
   2fd30:	push	{r4, sl, fp, lr}
   2fd34:	add	fp, sp, #8
   2fd38:	mov	r4, r0
   2fd3c:	ldr	r0, [r0, #16]
   2fd40:	ldr	r2, [r4, #20]
   2fd44:	mov	r1, #0
   2fd48:	bl	149d8 <memset@plt>
   2fd4c:	ldr	r0, [r4, #32]
   2fd50:	ldr	r1, [r0, #8]
   2fd54:	str	r1, [r4, #20]
   2fd58:	ldr	r1, [r0]
   2fd5c:	str	r1, [r4, #28]
   2fd60:	ldr	r1, [r0, #4]
   2fd64:	mov	r0, r4
   2fd68:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   2fd6c:	ldrh	r1, [r4, #130]	; 0x82
   2fd70:	mov	r0, r4
   2fd74:	bl	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>
   2fd78:	ldr	r0, [r4, #32]
   2fd7c:	ldr	r1, [r4, #156]	; 0x9c
   2fd80:	ldrh	r2, [r0, #12]
   2fd84:	sub	r0, r0, #36	; 0x24
   2fd88:	str	r0, [r4, #32]
   2fd8c:	sub	r0, r1, #1
   2fd90:	str	r0, [r4, #156]	; 0x9c
   2fd94:	strh	r2, [r4, #130]	; 0x82
   2fd98:	pop	{r4, sl, fp, pc}

0002fd9c <flatcc_builder_start_struct@@Base>:
   2fd9c:	push	{r4, r5, fp, lr}
   2fda0:	add	fp, sp, #8
   2fda4:	mov	r4, r1
   2fda8:	mov	r5, r0
   2fdac:	mov	r1, r2
   2fdb0:	bl	2fb70 <flatcc_builder_start_buffer@@Base+0xbc>
   2fdb4:	cmp	r0, #0
   2fdb8:	movne	r0, #0
   2fdbc:	popne	{r4, r5, fp, pc}
   2fdc0:	ldr	r0, [r5, #32]
   2fdc4:	mov	r1, #2
   2fdc8:	strh	r1, [r0, #14]
   2fdcc:	mov	r0, r5
   2fdd0:	mvn	r1, #3
   2fdd4:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   2fdd8:	mov	r0, r5
   2fddc:	mov	r1, r4
   2fde0:	pop	{r4, r5, fp, lr}
   2fde4:	b	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   2fde8:	push	{fp, lr}
   2fdec:	mov	fp, sp
   2fdf0:	ldr	r2, [r0, #28]
   2fdf4:	ldr	ip, [r0, #32]
   2fdf8:	ldr	r3, [r0, #60]	; 0x3c
   2fdfc:	ldr	lr, [r0, #64]	; 0x40
   2fe00:	add	r3, r3, r2
   2fe04:	str	r3, [r0, #16]
   2fe08:	sub	r2, lr, r2
   2fe0c:	cmp	r2, r1
   2fe10:	movhi	r2, r1
   2fe14:	str	r2, [r0, #24]
   2fe18:	str	r1, [ip, #4]
   2fe1c:	pop	{fp, pc}
   2fe20:	push	{r4, r5, fp, lr}
   2fe24:	add	fp, sp, #8
   2fe28:	mov	r4, r0
   2fe2c:	ldr	r5, [r0, #20]
   2fe30:	ldr	r2, [r0, #24]
   2fe34:	add	r0, r5, r1
   2fe38:	str	r0, [r4, #20]
   2fe3c:	cmp	r0, r2
   2fe40:	bcc	2fe64 <flatcc_builder_start_struct@@Base+0xc8>
   2fe44:	add	r1, r0, #1
   2fe48:	mov	r0, r4
   2fe4c:	mvn	r2, #3
   2fe50:	bl	32254 <flatcc_builder_get_emit_context@@Base+0x18>
   2fe54:	mov	r1, r0
   2fe58:	mov	r0, #0
   2fe5c:	cmp	r1, #0
   2fe60:	popne	{r4, r5, fp, pc}
   2fe64:	ldr	r0, [r4, #16]
   2fe68:	add	r0, r0, r5
   2fe6c:	pop	{r4, r5, fp, pc}

0002fe70 <flatcc_builder_struct_edit@@Base>:
   2fe70:	ldr	r0, [r0, #16]
   2fe74:	bx	lr

0002fe78 <flatcc_builder_end_struct@@Base>:
   2fe78:	push	{r4, r5, fp, lr}
   2fe7c:	add	fp, sp, #8
   2fe80:	mov	r4, r0
   2fe84:	ldr	r0, [r0, #32]
   2fe88:	ldrh	r0, [r0, #14]
   2fe8c:	cmp	r0, #2
   2fe90:	bne	2fec0 <flatcc_builder_end_struct@@Base+0x48>
   2fe94:	ldrh	r3, [r4, #130]	; 0x82
   2fe98:	ldr	r1, [r4, #16]
   2fe9c:	ldr	r2, [r4, #20]
   2fea0:	mov	r0, r4
   2fea4:	bl	2f9ec <flatcc_builder_create_struct@@Base>
   2fea8:	mov	r5, r0
   2feac:	cmp	r0, #0
   2feb0:	movne	r0, r4
   2feb4:	blne	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   2feb8:	mov	r0, r5
   2febc:	pop	{r4, r5, fp, pc}
   2fec0:	movw	r0, #1351	; 0x547
   2fec4:	movt	r0, #5
   2fec8:	movw	r1, #659	; 0x293
   2fecc:	movt	r1, #5
   2fed0:	movw	r3, #1395	; 0x573
   2fed4:	movt	r3, #5
   2fed8:	mov	r2, #872	; 0x368
   2fedc:	bl	14a80 <__assert_fail@plt>

0002fee0 <flatcc_builder_extend_vector@@Base>:
   2fee0:	push	{r4, r5, fp, lr}
   2fee4:	add	fp, sp, #8
   2fee8:	mov	r5, r1
   2feec:	mov	r4, r0
   2fef0:	ldr	r0, [r0, #32]
   2fef4:	ldr	r2, [r0, #24]
   2fef8:	mov	r0, r4
   2fefc:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   2ff00:	cmp	r0, #0
   2ff04:	movne	r0, #0
   2ff08:	popne	{r4, r5, fp, pc}
   2ff0c:	ldr	r0, [r4, #32]
   2ff10:	ldr	r0, [r0, #16]
   2ff14:	mul	r1, r0, r5
   2ff18:	mov	r0, r4
   2ff1c:	pop	{r4, r5, fp, lr}
   2ff20:	b	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   2ff24:	ldr	r0, [r0, #32]
   2ff28:	ldr	r3, [r0, #20]
   2ff2c:	adds	r1, r3, r1
   2ff30:	bcs	2ff44 <flatcc_builder_extend_vector@@Base+0x64>
   2ff34:	cmp	r1, r2
   2ff38:	strls	r1, [r0, #20]
   2ff3c:	movls	r0, #0
   2ff40:	bxls	lr
   2ff44:	push	{fp, lr}
   2ff48:	mov	fp, sp
   2ff4c:	movw	r0, #4930	; 0x1342
   2ff50:	movt	r0, #5
   2ff54:	movw	r1, #659	; 0x293
   2ff58:	movt	r1, #5
   2ff5c:	movw	r3, #4957	; 0x135d
   2ff60:	movt	r3, #5
   2ff64:	mov	r2, #892	; 0x37c
   2ff68:	bl	14a80 <__assert_fail@plt>

0002ff6c <flatcc_builder_vector_push@@Base>:
   2ff6c:	push	{fp, lr}
   2ff70:	mov	fp, sp
   2ff74:	ldr	r2, [r0, #32]
   2ff78:	ldrh	r3, [r2, #14]
   2ff7c:	cmp	r3, #4
   2ff80:	bne	2ffac <flatcc_builder_vector_push@@Base+0x40>
   2ff84:	ldr	ip, [r2, #20]
   2ff88:	ldr	r3, [r2, #24]
   2ff8c:	cmp	ip, r3
   2ff90:	bhi	2ffcc <flatcc_builder_vector_push@@Base+0x60>
   2ff94:	add	r3, ip, #1
   2ff98:	str	r3, [r2, #20]
   2ff9c:	ldr	r2, [r0, #32]
   2ffa0:	ldr	r2, [r2, #16]
   2ffa4:	pop	{fp, lr}
   2ffa8:	b	2ffec <flatcc_builder_vector_push@@Base+0x80>
   2ffac:	movw	r0, #1462	; 0x5b6
   2ffb0:	movt	r0, #5
   2ffb4:	movw	r1, #659	; 0x293
   2ffb8:	movt	r1, #5
   2ffbc:	movw	r3, #1506	; 0x5e2
   2ffc0:	movt	r3, #5
   2ffc4:	movw	r2, #907	; 0x38b
   2ffc8:	bl	14a80 <__assert_fail@plt>
   2ffcc:	movw	r0, #1573	; 0x625
   2ffd0:	movt	r0, #5
   2ffd4:	movw	r1, #659	; 0x293
   2ffd8:	movt	r1, #5
   2ffdc:	movw	r3, #1506	; 0x5e2
   2ffe0:	movt	r3, #5
   2ffe4:	mov	r2, #908	; 0x38c
   2ffe8:	bl	14a80 <__assert_fail@plt>
   2ffec:	push	{r4, r5, r6, sl, fp, lr}
   2fff0:	add	fp, sp, #16
   2fff4:	mov	r4, r2
   2fff8:	mov	r5, r1
   2fffc:	mov	r1, r2
   30000:	bl	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   30004:	mov	r6, r0
   30008:	cmp	r0, #0
   3000c:	beq	30020 <flatcc_builder_vector_push@@Base+0xb4>
   30010:	mov	r0, r6
   30014:	mov	r1, r5
   30018:	mov	r2, r4
   3001c:	bl	1490c <memcpy@plt>
   30020:	mov	r0, r6
   30024:	pop	{r4, r5, r6, sl, fp, pc}

00030028 <flatcc_builder_append_vector@@Base>:
   30028:	push	{r4, r5, r6, sl, fp, lr}
   3002c:	add	fp, sp, #16
   30030:	mov	r4, r1
   30034:	mov	r6, r0
   30038:	ldr	r0, [r0, #32]
   3003c:	ldrh	r1, [r0, #14]
   30040:	cmp	r1, #4
   30044:	bne	30084 <flatcc_builder_append_vector@@Base+0x5c>
   30048:	mov	r5, r2
   3004c:	ldr	r2, [r0, #24]
   30050:	mov	r0, r6
   30054:	mov	r1, r5
   30058:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   3005c:	cmp	r0, #0
   30060:	movne	r0, #0
   30064:	popne	{r4, r5, r6, sl, fp, pc}
   30068:	ldr	r0, [r6, #32]
   3006c:	ldr	r0, [r0, #16]
   30070:	mul	r2, r0, r5
   30074:	mov	r0, r6
   30078:	mov	r1, r4
   3007c:	pop	{r4, r5, r6, sl, fp, lr}
   30080:	b	2ffec <flatcc_builder_vector_push@@Base+0x80>
   30084:	movw	r0, #1462	; 0x5b6
   30088:	movt	r0, #5
   3008c:	movw	r1, #659	; 0x293
   30090:	movt	r1, #5
   30094:	movw	r3, #1634	; 0x662
   30098:	movt	r3, #5
   3009c:	movw	r2, #915	; 0x393
   300a0:	bl	14a80 <__assert_fail@plt>

000300a4 <flatcc_builder_extend_offset_vector@@Base>:
   300a4:	push	{r4, r5, fp, lr}
   300a8:	add	fp, sp, #8
   300ac:	mov	r5, r1
   300b0:	mov	r4, r0
   300b4:	mvn	r2, #-1073741824	; 0xc0000000
   300b8:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   300bc:	mov	r1, r0
   300c0:	mov	r0, #0
   300c4:	cmp	r1, #0
   300c8:	popne	{r4, r5, fp, pc}
   300cc:	lsl	r1, r5, #2
   300d0:	mov	r0, r4
   300d4:	bl	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   300d8:	pop	{r4, r5, fp, pc}

000300dc <flatcc_builder_offset_vector_push@@Base>:
   300dc:	push	{r4, r5, fp, lr}
   300e0:	add	fp, sp, #8
   300e4:	mov	r4, r1
   300e8:	ldr	r1, [r0, #32]
   300ec:	ldrh	r2, [r1, #14]
   300f0:	cmp	r2, #5
   300f4:	bne	3012c <flatcc_builder_offset_vector_push@@Base+0x50>
   300f8:	ldr	r2, [r1, #20]
   300fc:	mov	r5, #0
   30100:	cmn	r2, #-1073741823	; 0xc0000001
   30104:	beq	30124 <flatcc_builder_offset_vector_push@@Base+0x48>
   30108:	add	r2, r2, #1
   3010c:	str	r2, [r1, #20]
   30110:	mov	r1, #4
   30114:	bl	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   30118:	cmp	r0, #0
   3011c:	strne	r4, [r0]
   30120:	movne	r5, r0
   30124:	mov	r0, r5
   30128:	pop	{r4, r5, fp, pc}
   3012c:	movw	r0, #1711	; 0x6af
   30130:	movt	r0, #5
   30134:	movw	r1, #659	; 0x293
   30138:	movt	r1, #5
   3013c:	movw	r3, #1762	; 0x6e2
   30140:	movt	r3, #5
   30144:	movw	r2, #934	; 0x3a6
   30148:	bl	14a80 <__assert_fail@plt>

0003014c <flatcc_builder_append_offset_vector@@Base>:
   3014c:	push	{r4, r5, r6, sl, fp, lr}
   30150:	add	fp, sp, #16
   30154:	mov	r6, r0
   30158:	ldr	r0, [r0, #32]
   3015c:	ldrh	r0, [r0, #14]
   30160:	cmp	r0, #5
   30164:	bne	301a4 <flatcc_builder_append_offset_vector@@Base+0x58>
   30168:	mov	r5, r2
   3016c:	mov	r4, r1
   30170:	mov	r0, r6
   30174:	mov	r1, r2
   30178:	mvn	r2, #-1073741824	; 0xc0000000
   3017c:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   30180:	mov	r1, r0
   30184:	mov	r0, #0
   30188:	cmp	r1, #0
   3018c:	popne	{r4, r5, r6, sl, fp, pc}
   30190:	lsl	r2, r5, #2
   30194:	mov	r0, r6
   30198:	mov	r1, r4
   3019c:	bl	2ffec <flatcc_builder_vector_push@@Base+0x80>
   301a0:	pop	{r4, r5, r6, sl, fp, pc}
   301a4:	movw	r0, #1711	; 0x6af
   301a8:	movt	r0, #5
   301ac:	movw	r1, #659	; 0x293
   301b0:	movt	r1, #5
   301b4:	movw	r3, #1860	; 0x744
   301b8:	movt	r3, #5
   301bc:	mov	r2, #948	; 0x3b4
   301c0:	bl	14a80 <__assert_fail@plt>

000301c4 <flatcc_builder_extend_string@@Base>:
   301c4:	push	{r4, r5, fp, lr}
   301c8:	add	fp, sp, #8
   301cc:	mov	r5, r0
   301d0:	ldr	r0, [r0, #32]
   301d4:	ldrh	r0, [r0, #14]
   301d8:	cmp	r0, #6
   301dc:	bne	3020c <flatcc_builder_extend_string@@Base+0x48>
   301e0:	mov	r4, r1
   301e4:	mov	r0, r5
   301e8:	mvn	r2, #0
   301ec:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   301f0:	cmp	r0, #0
   301f4:	movne	r0, #0
   301f8:	popne	{r4, r5, fp, pc}
   301fc:	mov	r0, r5
   30200:	mov	r1, r4
   30204:	pop	{r4, r5, fp, lr}
   30208:	b	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   3020c:	movw	r0, #1976	; 0x7b8
   30210:	movt	r0, #5
   30214:	movw	r1, #659	; 0x293
   30218:	movt	r1, #5
   3021c:	movw	r3, #2020	; 0x7e4
   30220:	movt	r3, #5
   30224:	movw	r2, #957	; 0x3bd
   30228:	bl	14a80 <__assert_fail@plt>

0003022c <flatcc_builder_append_string@@Base>:
   3022c:	push	{r4, r5, r6, sl, fp, lr}
   30230:	add	fp, sp, #16
   30234:	mov	r6, r0
   30238:	ldr	r0, [r0, #32]
   3023c:	ldrh	r0, [r0, #14]
   30240:	cmp	r0, #6
   30244:	bne	30280 <flatcc_builder_append_string@@Base+0x54>
   30248:	mov	r4, r2
   3024c:	mov	r5, r1
   30250:	mov	r0, r6
   30254:	mov	r1, r2
   30258:	mvn	r2, #0
   3025c:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   30260:	cmp	r0, #0
   30264:	movne	r0, #0
   30268:	popne	{r4, r5, r6, sl, fp, pc}
   3026c:	mov	r0, r6
   30270:	mov	r1, r5
   30274:	mov	r2, r4
   30278:	pop	{r4, r5, r6, sl, fp, lr}
   3027c:	b	2ffec <flatcc_builder_vector_push@@Base+0x80>
   30280:	movw	r0, #1976	; 0x7b8
   30284:	movt	r0, #5
   30288:	movw	r1, #659	; 0x293
   3028c:	movt	r1, #5
   30290:	movw	r3, #2083	; 0x823
   30294:	movt	r3, #5
   30298:	movw	r2, #966	; 0x3c6
   3029c:	bl	14a80 <__assert_fail@plt>

000302a0 <flatcc_builder_append_string_str@@Base>:
   302a0:	push	{r4, r5, fp, lr}
   302a4:	add	fp, sp, #8
   302a8:	mov	r4, r1
   302ac:	mov	r5, r0
   302b0:	mov	r0, r1
   302b4:	bl	149a8 <strlen@plt>
   302b8:	mov	r2, r0
   302bc:	mov	r0, r5
   302c0:	mov	r1, r4
   302c4:	pop	{r4, r5, fp, lr}
   302c8:	b	3022c <flatcc_builder_append_string@@Base>

000302cc <flatcc_builder_append_string_strn@@Base>:
   302cc:	push	{r4, r5, fp, lr}
   302d0:	add	fp, sp, #8
   302d4:	mov	r4, r1
   302d8:	mov	r5, r0
   302dc:	mov	r0, r1
   302e0:	mov	r1, r2
   302e4:	bl	302fc <flatcc_builder_append_string_strn@@Base+0x30>
   302e8:	mov	r2, r0
   302ec:	mov	r0, r5
   302f0:	mov	r1, r4
   302f4:	pop	{r4, r5, fp, lr}
   302f8:	b	3022c <flatcc_builder_append_string@@Base>
   302fc:	push	{r4, r5, fp, lr}
   30300:	add	fp, sp, #8
   30304:	mov	r4, r1
   30308:	mov	r5, r0
   3030c:	mov	r1, #0
   30310:	mov	r2, r4
   30314:	bl	149fc <memchr@plt>
   30318:	cmp	r0, #0
   3031c:	subne	r4, r0, r5
   30320:	mov	r0, r4
   30324:	pop	{r4, r5, fp, pc}

00030328 <flatcc_builder_truncate_vector@@Base>:
   30328:	push	{fp, lr}
   3032c:	mov	fp, sp
   30330:	ldr	r2, [r0, #32]
   30334:	ldrh	r3, [r2, #14]
   30338:	cmp	r3, #4
   3033c:	bne	3036c <flatcc_builder_truncate_vector@@Base+0x44>
   30340:	ldr	r3, [r2, #20]
   30344:	cmp	r3, r1
   30348:	bcc	3038c <flatcc_builder_truncate_vector@@Base+0x64>
   3034c:	sub	r3, r3, r1
   30350:	str	r3, [r2, #20]
   30354:	ldr	r2, [r0, #32]
   30358:	ldr	r2, [r2, #16]
   3035c:	mul	r1, r2, r1
   30360:	bl	303ac <flatcc_builder_truncate_vector@@Base+0x84>
   30364:	mov	r0, #0
   30368:	pop	{fp, pc}
   3036c:	movw	r0, #1462	; 0x5b6
   30370:	movt	r0, #5
   30374:	movw	r1, #659	; 0x293
   30378:	movt	r1, #5
   3037c:	movw	r3, #2160	; 0x870
   30380:	movt	r3, #5
   30384:	movw	r2, #985	; 0x3d9
   30388:	bl	14a80 <__assert_fail@plt>
   3038c:	movw	r0, #2223	; 0x8af
   30390:	movt	r0, #5
   30394:	movw	r1, #659	; 0x293
   30398:	movt	r1, #5
   3039c:	movw	r3, #2160	; 0x870
   303a0:	movt	r3, #5
   303a4:	movw	r2, #986	; 0x3da
   303a8:	bl	14a80 <__assert_fail@plt>
   303ac:	mov	r2, r1
   303b0:	ldr	r1, [r0, #16]
   303b4:	ldr	r3, [r0, #20]
   303b8:	sub	r3, r3, r2
   303bc:	str	r3, [r0, #20]
   303c0:	add	r0, r1, r3
   303c4:	mov	r1, #0
   303c8:	b	149d8 <memset@plt>

000303cc <flatcc_builder_truncate_offset_vector@@Base>:
   303cc:	push	{fp, lr}
   303d0:	mov	fp, sp
   303d4:	ldr	r2, [r0, #32]
   303d8:	ldrh	r3, [r2, #14]
   303dc:	cmp	r3, #5
   303e0:	bne	30410 <flatcc_builder_truncate_offset_vector@@Base+0x44>
   303e4:	ldr	r3, [r2, #20]
   303e8:	cmp	r3, r1
   303ec:	bcc	30430 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   303f0:	sub	r3, r3, r1
   303f4:	str	r3, [r2, #20]
   303f8:	ldr	r2, [r0, #32]
   303fc:	ldr	r2, [r2, #16]
   30400:	mul	r1, r2, r1
   30404:	bl	303ac <flatcc_builder_truncate_vector@@Base+0x84>
   30408:	mov	r0, #0
   3040c:	pop	{fp, pc}
   30410:	movw	r0, #1711	; 0x6af
   30414:	movt	r0, #5
   30418:	movw	r1, #659	; 0x293
   3041c:	movt	r1, #5
   30420:	movw	r3, #2259	; 0x8d3
   30424:	movt	r3, #5
   30428:	movw	r2, #994	; 0x3e2
   3042c:	bl	14a80 <__assert_fail@plt>
   30430:	movw	r0, #2329	; 0x919
   30434:	movt	r0, #5
   30438:	movw	r1, #659	; 0x293
   3043c:	movt	r1, #5
   30440:	movw	r3, #2259	; 0x8d3
   30444:	movt	r3, #5
   30448:	movw	r2, #995	; 0x3e3
   3044c:	bl	14a80 <__assert_fail@plt>

00030450 <flatcc_builder_truncate_string@@Base>:
   30450:	push	{fp, lr}
   30454:	mov	fp, sp
   30458:	ldr	r2, [r0, #32]
   3045c:	ldrh	r3, [r2, #14]
   30460:	cmp	r3, #6
   30464:	bne	30488 <flatcc_builder_truncate_string@@Base+0x38>
   30468:	ldr	r3, [r2, #20]
   3046c:	cmp	r3, r1
   30470:	bcc	304a8 <flatcc_builder_truncate_string@@Base+0x58>
   30474:	sub	r3, r3, r1
   30478:	str	r3, [r2, #20]
   3047c:	bl	303ac <flatcc_builder_truncate_vector@@Base+0x84>
   30480:	mov	r0, #0
   30484:	pop	{fp, pc}
   30488:	movw	r0, #1976	; 0x7b8
   3048c:	movt	r0, #5
   30490:	movw	r1, #659	; 0x293
   30494:	movt	r1, #5
   30498:	movw	r3, #2388	; 0x954
   3049c:	movt	r3, #5
   304a0:	movw	r2, #1003	; 0x3eb
   304a4:	bl	14a80 <__assert_fail@plt>
   304a8:	movw	r0, #2451	; 0x993
   304ac:	movt	r0, #5
   304b0:	movw	r1, #659	; 0x293
   304b4:	movt	r1, #5
   304b8:	movw	r3, #2388	; 0x954
   304bc:	movt	r3, #5
   304c0:	mov	r2, #1004	; 0x3ec
   304c4:	bl	14a80 <__assert_fail@plt>

000304c8 <flatcc_builder_start_vector@@Base>:
   304c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   304cc:	add	fp, sp, #24
   304d0:	sub	sp, sp, #8
   304d4:	mov	r5, r3
   304d8:	mov	r6, r1
   304dc:	mov	r4, r0
   304e0:	strh	r2, [sp, #6]
   304e4:	add	r0, sp, #6
   304e8:	mov	r8, #4
   304ec:	mov	r1, #4
   304f0:	bl	30548 <flatcc_builder_start_vector@@Base+0x80>
   304f4:	ldrh	r1, [sp, #6]
   304f8:	mov	r0, r4
   304fc:	bl	2fb70 <flatcc_builder_start_buffer@@Base+0xbc>
   30500:	mvn	r7, #0
   30504:	cmp	r0, #0
   30508:	bne	3053c <flatcc_builder_start_vector@@Base+0x74>
   3050c:	ldr	r0, [r4, #32]
   30510:	str	r6, [r0, #16]
   30514:	ldr	r0, [r4, #32]
   30518:	mov	r7, #0
   3051c:	str	r7, [r0, #20]
   30520:	ldr	r0, [r4, #32]
   30524:	str	r5, [r0, #24]
   30528:	ldr	r0, [r4, #32]
   3052c:	strh	r8, [r0, #14]
   30530:	mov	r0, r4
   30534:	mvn	r1, #3
   30538:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   3053c:	mov	r0, r7
   30540:	sub	sp, fp, #24
   30544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30548:	ldrh	r2, [r0]
   3054c:	cmp	r2, r1
   30550:	strhcc	r1, [r0]
   30554:	bx	lr

00030558 <flatcc_builder_start_offset_vector@@Base>:
   30558:	push	{r4, r5, r6, sl, fp, lr}
   3055c:	add	fp, sp, #16
   30560:	mov	r4, r0
   30564:	mov	r6, #4
   30568:	mov	r1, #4
   3056c:	bl	2fb70 <flatcc_builder_start_buffer@@Base+0xbc>
   30570:	mvn	r5, #0
   30574:	cmp	r0, #0
   30578:	beq	30584 <flatcc_builder_start_offset_vector@@Base+0x2c>
   3057c:	mov	r0, r5
   30580:	pop	{r4, r5, r6, sl, fp, pc}
   30584:	ldr	r0, [r4, #32]
   30588:	str	r6, [r0, #16]
   3058c:	ldr	r0, [r4, #32]
   30590:	mov	r5, #0
   30594:	str	r5, [r0, #20]
   30598:	ldr	r0, [r4, #32]
   3059c:	mov	r1, #5
   305a0:	strh	r1, [r0, #14]
   305a4:	mov	r0, r4
   305a8:	mvn	r1, #3
   305ac:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   305b0:	mov	r0, r5
   305b4:	pop	{r4, r5, r6, sl, fp, pc}

000305b8 <flatcc_builder_create_offset_vector@@Base>:
   305b8:	push	{r4, r5, r6, sl, fp, lr}
   305bc:	add	fp, sp, #16
   305c0:	mov	r6, r2
   305c4:	mov	r5, r1
   305c8:	mov	r4, r0
   305cc:	bl	30558 <flatcc_builder_start_offset_vector@@Base>
   305d0:	cmp	r0, #0
   305d4:	beq	305e0 <flatcc_builder_create_offset_vector@@Base+0x28>
   305d8:	mov	r0, #0
   305dc:	pop	{r4, r5, r6, sl, fp, pc}
   305e0:	mov	r0, r4
   305e4:	mov	r1, r6
   305e8:	bl	300a4 <flatcc_builder_extend_offset_vector@@Base>
   305ec:	cmp	r0, #0
   305f0:	beq	305d8 <flatcc_builder_create_offset_vector@@Base+0x20>
   305f4:	lsl	r2, r6, #2
   305f8:	mov	r1, r5
   305fc:	bl	1490c <memcpy@plt>
   30600:	mov	r0, r4
   30604:	pop	{r4, r5, r6, sl, fp, lr}
   30608:	b	3060c <flatcc_builder_end_offset_vector@@Base>

0003060c <flatcc_builder_end_offset_vector@@Base>:
   3060c:	push	{r4, r5, fp, lr}
   30610:	add	fp, sp, #8
   30614:	mov	r4, r0
   30618:	ldr	r0, [r0, #32]
   3061c:	ldrh	r1, [r0, #14]
   30620:	cmp	r1, #5
   30624:	bne	30650 <flatcc_builder_end_offset_vector@@Base+0x44>
   30628:	ldr	r2, [r0, #20]
   3062c:	ldr	r1, [r4, #16]
   30630:	mov	r0, r4
   30634:	bl	311ac <flatcc_builder_create_offset_vector_direct@@Base>
   30638:	mov	r5, r0
   3063c:	cmp	r0, #0
   30640:	movne	r0, r4
   30644:	blne	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   30648:	mov	r0, r5
   3064c:	pop	{r4, r5, fp, pc}
   30650:	movw	r0, #1711	; 0x6af
   30654:	movt	r0, #5
   30658:	movw	r1, #659	; 0x293
   3065c:	movt	r1, #5
   30660:	movw	r3, #3294	; 0xcde
   30664:	movt	r3, #5
   30668:	movw	r2, #1480	; 0x5c8
   3066c:	bl	14a80 <__assert_fail@plt>

00030670 <flatcc_builder_start_string@@Base>:
   30670:	push	{r4, r5, r6, sl, fp, lr}
   30674:	add	fp, sp, #16
   30678:	mov	r4, r0
   3067c:	mov	r6, #1
   30680:	mov	r1, #1
   30684:	bl	2fb70 <flatcc_builder_start_buffer@@Base+0xbc>
   30688:	mvn	r5, #0
   3068c:	cmp	r0, #0
   30690:	beq	3069c <flatcc_builder_start_string@@Base+0x2c>
   30694:	mov	r0, r5
   30698:	pop	{r4, r5, r6, sl, fp, pc}
   3069c:	ldr	r0, [r4, #32]
   306a0:	str	r6, [r0, #16]
   306a4:	ldr	r0, [r4, #32]
   306a8:	mov	r5, #0
   306ac:	str	r5, [r0, #20]
   306b0:	ldr	r0, [r4, #32]
   306b4:	mov	r1, #6
   306b8:	strh	r1, [r0, #14]
   306bc:	mov	r0, r4
   306c0:	mvn	r1, #3
   306c4:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   306c8:	mov	r0, r5
   306cc:	pop	{r4, r5, r6, sl, fp, pc}

000306d0 <flatcc_builder_reserve_table@@Base>:
   306d0:	cmn	r1, #1
   306d4:	ble	306dc <flatcc_builder_reserve_table@@Base+0xc>
   306d8:	b	30704 <flatcc_builder_reserve_table@@Base+0x34>
   306dc:	push	{fp, lr}
   306e0:	mov	fp, sp
   306e4:	movw	r0, #2550	; 0x9f6
   306e8:	movt	r0, #5
   306ec:	movw	r1, #659	; 0x293
   306f0:	movt	r1, #5
   306f4:	movw	r3, #2485	; 0x9b5
   306f8:	movt	r3, #5
   306fc:	movw	r2, #1065	; 0x429
   30700:	bl	14a80 <__assert_fail@plt>
   30704:	push	{r4, r5, r6, sl, fp, lr}
   30708:	add	fp, sp, #16
   3070c:	sub	sp, sp, #8
   30710:	mov	r6, r1
   30714:	mov	r4, r0
   30718:	ldr	r0, [r0, #32]
   3071c:	ldrh	r1, [r0, #28]
   30720:	ldr	r0, [r0, #16]
   30724:	mov	r2, #1
   30728:	str	r2, [sp]
   3072c:	mov	r2, #4
   30730:	add	r3, r2, r6, lsl #1
   30734:	add	r2, r0, r1, lsl #1
   30738:	mov	r5, #0
   3073c:	mov	r0, r4
   30740:	mov	r1, #0
   30744:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   30748:	str	r0, [r4, #4]
   3074c:	cmp	r0, #0
   30750:	beq	3078c <flatcc_builder_reserve_table@@Base+0xbc>
   30754:	lsl	r1, r6, #1
   30758:	add	r0, r0, #4
   3075c:	str	r0, [r4, #4]
   30760:	ldr	r0, [r4, #32]
   30764:	ldr	r2, [r0, #20]
   30768:	str	r5, [sp]
   3076c:	orr	r3, r1, #1
   30770:	mov	r0, r4
   30774:	mov	r1, #3
   30778:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   3077c:	str	r0, [r4]
   30780:	cmp	r0, #0
   30784:	mvneq	r5, #0
   30788:	b	30790 <flatcc_builder_reserve_table@@Base+0xc0>
   3078c:	mvn	r5, #0
   30790:	mov	r0, r5
   30794:	sub	sp, fp, #16
   30798:	pop	{r4, r5, r6, sl, fp, pc}

0003079c <flatcc_builder_start_table@@Base>:
   3079c:	push	{r4, r5, r6, sl, fp, lr}
   307a0:	add	fp, sp, #16
   307a4:	mov	r6, r1
   307a8:	mov	r4, r0
   307ac:	mov	r1, #4
   307b0:	bl	2fb70 <flatcc_builder_start_buffer@@Base+0xbc>
   307b4:	mvn	r5, #0
   307b8:	cmp	r0, #0
   307bc:	bne	30834 <flatcc_builder_start_table@@Base+0x98>
   307c0:	ldr	r0, [r4, #4]
   307c4:	ldr	r1, [r4, #32]
   307c8:	ldr	r2, [r4, #52]	; 0x34
   307cc:	sub	r0, r0, r2
   307d0:	str	r0, [r1, #16]
   307d4:	ldr	r0, [r4]
   307d8:	ldr	r1, [r4, #32]
   307dc:	ldr	r2, [r4, #76]	; 0x4c
   307e0:	sub	r0, r0, r2
   307e4:	str	r0, [r1, #20]
   307e8:	ldr	r0, [r4, #12]
   307ec:	ldr	r1, [r4, #32]
   307f0:	str	r0, [r1, #24]
   307f4:	ldr	r0, [r4, #32]
   307f8:	ldrh	r1, [r4, #8]
   307fc:	strh	r1, [r0, #28]
   30800:	mov	r0, #0
   30804:	strh	r0, [r4, #8]
   30808:	movw	r0, #15186	; 0x3b52
   3080c:	movt	r0, #12137	; 0x2f69
   30810:	str	r0, [r4, #12]
   30814:	ldr	r0, [r4, #32]
   30818:	mov	r1, #3
   3081c:	strh	r1, [r0, #14]
   30820:	mov	r0, r4
   30824:	mov	r1, r6
   30828:	bl	30704 <flatcc_builder_reserve_table@@Base+0x34>
   3082c:	cmp	r0, #0
   30830:	beq	3083c <flatcc_builder_start_table@@Base+0xa0>
   30834:	mov	r0, r5
   30838:	pop	{r4, r5, r6, sl, fp, pc}
   3083c:	mov	r0, r4
   30840:	movw	r1, #65532	; 0xfffc
   30844:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   30848:	mov	r5, #0
   3084c:	mov	r0, r5
   30850:	pop	{r4, r5, r6, sl, fp, pc}

00030854 <flatcc_builder_create_vtable@@Base>:
   30854:	push	{fp, lr}
   30858:	mov	fp, sp
   3085c:	sub	sp, sp, #72	; 0x48
   30860:	mov	r3, #0
   30864:	str	r3, [sp, #4]
   30868:	str	r3, [sp]
   3086c:	cmp	r2, #0
   30870:	strne	r1, [sp, #8]
   30874:	strne	r2, [sp]
   30878:	strne	r2, [sp, #12]
   3087c:	movne	r1, #1
   30880:	strne	r1, [sp, #4]
   30884:	ldr	r1, [r0, #152]	; 0x98
   30888:	cmp	r1, #0
   3088c:	bne	3089c <flatcc_builder_create_vtable@@Base+0x48>
   30890:	ldr	r1, [r0, #180]	; 0xb4
   30894:	cmp	r1, #0
   30898:	beq	308b8 <flatcc_builder_create_vtable@@Base+0x64>
   3089c:	mov	r1, sp
   308a0:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   308a4:	cmp	r0, #0
   308a8:	beq	308c8 <flatcc_builder_create_vtable@@Base+0x74>
   308ac:	add	r0, r0, #1
   308b0:	mov	sp, fp
   308b4:	pop	{fp, pc}
   308b8:	mov	r1, sp
   308bc:	bl	308d4 <flatcc_builder_create_vtable@@Base+0x80>
   308c0:	cmp	r0, #0
   308c4:	bne	308b0 <flatcc_builder_create_vtable@@Base+0x5c>
   308c8:	mov	r0, #0
   308cc:	mov	sp, fp
   308d0:	pop	{fp, pc}
   308d4:	push	{r4, sl, fp, lr}
   308d8:	add	fp, sp, #8
   308dc:	sub	sp, sp, #8
   308e0:	ldr	r4, [r0, #140]	; 0x8c
   308e4:	ldr	r3, [r1]
   308e8:	add	r2, r3, r4
   308ec:	str	r2, [r0, #140]	; 0x8c
   308f0:	cmn	r3, #1
   308f4:	ble	30948 <flatcc_builder_create_vtable@@Base+0xf4>
   308f8:	ldr	r2, [r1, #4]
   308fc:	ldr	ip, [r0, #36]	; 0x24
   30900:	ldr	lr, [r0, #44]	; 0x2c
   30904:	str	r3, [sp]
   30908:	add	r1, r1, #8
   3090c:	mov	r0, ip
   30910:	mov	r3, r4
   30914:	blx	lr
   30918:	cmp	r0, #0
   3091c:	addeq	r0, r4, #1
   30920:	subeq	sp, fp, #8
   30924:	popeq	{r4, sl, fp, pc}
   30928:	movw	r0, #29885	; 0x74bd
   3092c:	movt	r0, #4
   30930:	movw	r1, #659	; 0x293
   30934:	movt	r1, #5
   30938:	movw	r3, #5044	; 0x13b4
   3093c:	movt	r3, #5
   30940:	movw	r2, #677	; 0x2a5
   30944:	bl	14a80 <__assert_fail@plt>
   30948:	movw	r0, #29885	; 0x74bd
   3094c:	movt	r0, #4
   30950:	movw	r1, #659	; 0x293
   30954:	movt	r1, #5
   30958:	movw	r3, #5044	; 0x13b4
   3095c:	movt	r3, #5
   30960:	movw	r2, #673	; 0x2a1
   30964:	bl	14a80 <__assert_fail@plt>

00030968 <flatcc_builder_create_cached_vtable@@Base>:
   30968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3096c:	add	fp, sp, #28
   30970:	sub	sp, sp, #20
   30974:	mov	r4, r2
   30978:	mov	r9, r1
   3097c:	mov	sl, r0
   30980:	mov	r1, r3
   30984:	bl	30b5c <flatcc_builder_create_cached_vtable@@Base+0x1f4>
   30988:	cmp	r0, #0
   3098c:	beq	30ab0 <flatcc_builder_create_cached_vtable@@Base+0x148>
   30990:	mov	r7, r0
   30994:	ldr	r6, [r0]
   30998:	mov	r5, #0
   3099c:	cmp	r6, #0
   309a0:	mov	r8, #0
   309a4:	beq	30a3c <flatcc_builder_create_cached_vtable@@Base+0xd4>
   309a8:	ldr	r5, [sl, #68]	; 0x44
   309ac:	str	sl, [sp, #16]
   309b0:	ldr	sl, [sl, #100]	; 0x64
   309b4:	mov	r0, #0
   309b8:	str	r7, [sp, #8]
   309bc:	str	r0, [sp, #12]
   309c0:	add	r8, sl, r6
   309c4:	ldr	r0, [r8, #8]
   309c8:	mov	r1, r5
   309cc:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   309d0:	cmp	r0, r4
   309d4:	bne	309ec <flatcc_builder_create_cached_vtable@@Base+0x84>
   309d8:	mov	r0, r9
   309dc:	mov	r2, r4
   309e0:	bl	14924 <memcmp@plt>
   309e4:	cmp	r0, #0
   309e8:	beq	30a00 <flatcc_builder_create_cached_vtable@@Base+0x98>
   309ec:	ldr	r6, [r8, #12]!
   309f0:	cmp	r6, #0
   309f4:	mov	r7, r8
   309f8:	bne	309c0 <flatcc_builder_create_cached_vtable@@Base+0x58>
   309fc:	b	30a2c <flatcc_builder_create_cached_vtable@@Base+0xc4>
   30a00:	ldr	r0, [sp, #16]
   30a04:	ldr	r0, [r0, #152]	; 0x98
   30a08:	ldr	r1, [r8, #4]
   30a0c:	cmp	r1, r0
   30a10:	beq	30b38 <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   30a14:	mov	r7, r8
   30a18:	ldr	r6, [r7, #12]!
   30a1c:	cmp	r6, #0
   30a20:	mov	r0, r8
   30a24:	bne	309bc <flatcc_builder_create_cached_vtable@@Base+0x54>
   30a28:	b	30a30 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   30a2c:	ldr	r8, [sp, #12]
   30a30:	ldr	sl, [sp, #16]
   30a34:	mov	r5, #0
   30a38:	ldr	r7, [sp, #8]
   30a3c:	ldr	r2, [sl, #124]	; 0x7c
   30a40:	str	r5, [sp]
   30a44:	mov	r0, sl
   30a48:	mov	r1, #6
   30a4c:	mov	r3, #16
   30a50:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   30a54:	cmp	r0, #0
   30a58:	beq	30b24 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30a5c:	mov	r6, r0
   30a60:	ldr	r0, [sl, #124]	; 0x7c
   30a64:	ldr	r1, [sl, #152]	; 0x98
   30a68:	add	r2, r0, #16
   30a6c:	str	r2, [sl, #124]	; 0x7c
   30a70:	str	r1, [r6, #4]
   30a74:	ldr	r1, [r7]
   30a78:	str	r1, [r6, #12]
   30a7c:	str	r0, [r7]
   30a80:	mov	r0, sl
   30a84:	mov	r1, r9
   30a88:	mov	r2, r4
   30a8c:	bl	30854 <flatcc_builder_create_vtable@@Base>
   30a90:	str	r0, [r6]
   30a94:	cmp	r0, #0
   30a98:	beq	30b24 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30a9c:	cmp	r8, #0
   30aa0:	beq	30ab8 <flatcc_builder_create_cached_vtable@@Base+0x150>
   30aa4:	ldr	r0, [r8, #8]
   30aa8:	str	r0, [r6, #8]
   30aac:	b	30b20 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   30ab0:	mov	r5, #0
   30ab4:	b	30b24 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30ab8:	ldr	r0, [sl, #172]	; 0xac
   30abc:	cmp	r0, #0
   30ac0:	beq	30ae0 <flatcc_builder_create_cached_vtable@@Base+0x178>
   30ac4:	ldr	r1, [sl, #120]	; 0x78
   30ac8:	add	r1, r1, r4
   30acc:	cmp	r0, r1
   30ad0:	bcs	30ae0 <flatcc_builder_create_cached_vtable@@Base+0x178>
   30ad4:	mov	r0, sl
   30ad8:	bl	2f0fc <flatcc_builder_flush_vtable_cache@@Base>
   30adc:	b	30b20 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   30ae0:	ldr	r2, [sl, #120]	; 0x78
   30ae4:	mov	r0, #0
   30ae8:	str	r0, [sp]
   30aec:	mov	r0, sl
   30af0:	mov	r1, #2
   30af4:	mov	r3, r4
   30af8:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   30afc:	cmp	r0, #0
   30b00:	beq	30b30 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
   30b04:	ldr	r1, [sl, #120]	; 0x78
   30b08:	str	r1, [r6, #8]
   30b0c:	add	r1, r1, r4
   30b10:	str	r1, [sl, #120]	; 0x78
   30b14:	mov	r1, r9
   30b18:	mov	r2, r4
   30b1c:	bl	1490c <memcpy@plt>
   30b20:	ldr	r5, [r6]
   30b24:	mov	r0, r5
   30b28:	sub	sp, fp, #28
   30b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30b30:	mvn	r5, #0
   30b34:	b	30b24 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30b38:	ldr	r1, [sp, #8]
   30b3c:	cmp	r7, r1
   30b40:	ldrne	r0, [r8, #12]
   30b44:	strne	r0, [r7]
   30b48:	ldrne	r0, [r1]
   30b4c:	strne	r0, [r8, #12]
   30b50:	strne	r6, [r1]
   30b54:	ldr	r5, [r8]
   30b58:	b	30b24 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30b5c:	push	{r4, r5, fp, lr}
   30b60:	add	fp, sp, #8
   30b64:	mov	r4, r1
   30b68:	mov	r5, r0
   30b6c:	ldr	r0, [r0, #116]	; 0x74
   30b70:	cmp	r0, #0
   30b74:	bne	30b90 <flatcc_builder_create_cached_vtable@@Base+0x228>
   30b78:	mov	r0, r5
   30b7c:	bl	322bc <flatcc_builder_get_emit_context@@Base+0x80>
   30b80:	mov	r1, r0
   30b84:	mov	r0, #0
   30b88:	cmp	r1, #0
   30b8c:	popne	{r4, r5, fp, pc}
   30b90:	ldr	r0, [r5, #92]	; 0x5c
   30b94:	ldr	r1, [r5, #116]	; 0x74
   30b98:	rsb	r1, r1, #32
   30b9c:	lsr	r1, r4, r1
   30ba0:	add	r0, r0, r1, lsl #2
   30ba4:	pop	{r4, r5, fp, pc}

00030ba8 <flatcc_builder_create_table@@Base>:
   30ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30bac:	add	fp, sp, #28
   30bb0:	sub	sp, sp, #84	; 0x54
   30bb4:	strh	r3, [fp, #-30]	; 0xffffffe2
   30bb8:	ldr	r4, [fp, #12]
   30bbc:	cmn	r4, #1
   30bc0:	ble	30cf0 <flatcc_builder_create_table@@Base+0x148>
   30bc4:	ldr	r8, [fp, #16]
   30bc8:	tst	r8, #1
   30bcc:	beq	30d10 <flatcc_builder_create_table@@Base+0x168>
   30bd0:	mov	sl, r2
   30bd4:	mov	r6, r1
   30bd8:	mov	r5, r0
   30bdc:	sub	r0, fp, #30
   30be0:	mov	r1, #4
   30be4:	bl	30548 <flatcc_builder_start_vector@@Base+0x80>
   30be8:	ldrh	r7, [fp, #-30]	; 0xffffffe2
   30bec:	mov	r0, r5
   30bf0:	mov	r1, r7
   30bf4:	bl	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>
   30bf8:	mov	r0, r5
   30bfc:	mov	r1, sl
   30c00:	mov	r2, r7
   30c04:	bl	2f75c <flatcc_builder_embed_buffer@@Base+0x1c8>
   30c08:	mov	r9, r0
   30c0c:	mvn	r0, #3
   30c10:	sub	r0, r0, sl
   30c14:	sub	r0, r0, r9
   30c18:	str	r5, [sp]
   30c1c:	ldr	r1, [r5, #136]	; 0x88
   30c20:	add	r5, r0, r1
   30c24:	rsb	r0, r8, #1
   30c28:	add	r0, r0, r5
   30c2c:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30c30:	str	r0, [fp, #-36]	; 0xffffffdc
   30c34:	cmp	r4, #1
   30c38:	blt	30c68 <flatcc_builder_create_table@@Base+0xc0>
   30c3c:	mvn	r0, #3
   30c40:	ldr	r7, [fp, #8]
   30c44:	sub	r5, r0, r5
   30c48:	ldrh	r8, [r7], #2
   30c4c:	ldr	r0, [r8, r6]
   30c50:	add	r0, r5, r0
   30c54:	sub	r0, r0, r8
   30c58:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30c5c:	str	r0, [r8, r6]
   30c60:	subs	r4, r4, #1
   30c64:	bne	30c48 <flatcc_builder_create_table@@Base+0xa0>
   30c68:	sub	r0, fp, #36	; 0x24
   30c6c:	str	r0, [sp, #12]
   30c70:	mov	r0, #4
   30c74:	str	r0, [sp, #4]
   30c78:	str	r0, [sp, #16]
   30c7c:	mov	r0, #1
   30c80:	str	r0, [sp, #8]
   30c84:	cmp	sl, #0
   30c88:	beq	30ca4 <flatcc_builder_create_table@@Base+0xfc>
   30c8c:	str	r6, [sp, #20]
   30c90:	str	sl, [sp, #24]
   30c94:	mov	r0, #2
   30c98:	str	r0, [sp, #8]
   30c9c:	add	r0, sl, #4
   30ca0:	str	r0, [sp, #4]
   30ca4:	cmp	r9, #0
   30ca8:	ldr	r0, [sp]
   30cac:	beq	30ce0 <flatcc_builder_create_table@@Base+0x138>
   30cb0:	ldr	r2, [sp, #4]
   30cb4:	ldr	r1, [sp, #8]
   30cb8:	add	r2, r2, r9
   30cbc:	str	r2, [sp, #4]
   30cc0:	add	r2, sp, #4
   30cc4:	add	r3, r2, r1, lsl #3
   30cc8:	movw	r2, #129	; 0x81
   30ccc:	movt	r2, #5
   30cd0:	str	r2, [r3, #8]
   30cd4:	str	r9, [r3, #12]
   30cd8:	add	r1, r1, #1
   30cdc:	str	r1, [sp, #8]
   30ce0:	add	r1, sp, #4
   30ce4:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   30ce8:	sub	sp, fp, #28
   30cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30cf0:	movw	r0, #2543	; 0x9ef
   30cf4:	movt	r0, #5
   30cf8:	movw	r1, #659	; 0x293
   30cfc:	movt	r1, #5
   30d00:	movw	r3, #2561	; 0xa01
   30d04:	movt	r3, #5
   30d08:	movw	r2, #1237	; 0x4d5
   30d0c:	bl	14a80 <__assert_fail@plt>
   30d10:	movw	r0, #2717	; 0xa9d
   30d14:	movt	r0, #5
   30d18:	movw	r1, #659	; 0x293
   30d1c:	movt	r1, #5
   30d20:	movw	r3, #2561	; 0xa01
   30d24:	movt	r3, #5
   30d28:	movw	r2, #1243	; 0x4db
   30d2c:	bl	14a80 <__assert_fail@plt>

00030d30 <flatcc_builder_check_required_field@@Base>:
   30d30:	ldr	r2, [r0, #32]
   30d34:	ldrh	r2, [r2, #14]
   30d38:	cmp	r2, #3
   30d3c:	bne	30d6c <flatcc_builder_check_required_field@@Base+0x3c>
   30d40:	ldrh	r3, [r0, #8]
   30d44:	mov	r2, #0
   30d48:	cmp	r3, r1
   30d4c:	bls	30d64 <flatcc_builder_check_required_field@@Base+0x34>
   30d50:	ldr	r0, [r0, #4]
   30d54:	add	r0, r0, r1, lsl #1
   30d58:	ldrh	r2, [r0]
   30d5c:	cmp	r2, #0
   30d60:	movwne	r2, #1
   30d64:	mov	r0, r2
   30d68:	bx	lr
   30d6c:	push	{fp, lr}
   30d70:	mov	fp, sp
   30d74:	movw	r0, #2728	; 0xaa8
   30d78:	movt	r0, #5
   30d7c:	movw	r1, #659	; 0x293
   30d80:	movt	r1, #5
   30d84:	movw	r3, #2771	; 0xad3
   30d88:	movt	r3, #5
   30d8c:	movw	r2, #1272	; 0x4f8
   30d90:	bl	14a80 <__assert_fail@plt>

00030d94 <flatcc_builder_check_union_field@@Base>:
   30d94:	mov	r2, r0
   30d98:	ldr	r0, [r0, #32]
   30d9c:	ldrh	r0, [r0, #14]
   30da0:	cmp	r0, #3
   30da4:	bne	30e04 <flatcc_builder_check_union_field@@Base+0x70>
   30da8:	mov	r0, #0
   30dac:	cmp	r1, #0
   30db0:	ldrhne	r3, [r2, #8]
   30db4:	cmpne	r3, r1
   30db8:	bhi	30dc0 <flatcc_builder_check_union_field@@Base+0x2c>
   30dbc:	bx	lr
   30dc0:	ldr	r0, [r2, #4]
   30dc4:	add	r0, r0, r1, lsl #1
   30dc8:	ldrh	r1, [r0, #-2]
   30dcc:	cmp	r1, #0
   30dd0:	beq	30df4 <flatcc_builder_check_union_field@@Base+0x60>
   30dd4:	ldr	r2, [r2, #16]
   30dd8:	ldrb	r1, [r2, r1]
   30ddc:	ldrh	r0, [r0]
   30de0:	cmp	r1, #0
   30de4:	beq	30df8 <flatcc_builder_check_union_field@@Base+0x64>
   30de8:	cmp	r0, #0
   30dec:	movwne	r0, #1
   30df0:	bx	lr
   30df4:	ldrh	r0, [r0]
   30df8:	clz	r0, r0
   30dfc:	lsr	r0, r0, #5
   30e00:	bx	lr
   30e04:	push	{fp, lr}
   30e08:	mov	fp, sp
   30e0c:	movw	r0, #2728	; 0xaa8
   30e10:	movt	r0, #5
   30e14:	movw	r1, #659	; 0x293
   30e18:	movt	r1, #5
   30e1c:	movw	r3, #2854	; 0xb26
   30e20:	movt	r3, #5
   30e24:	movw	r2, #1279	; 0x4ff
   30e28:	bl	14a80 <__assert_fail@plt>

00030e2c <flatcc_builder_check_required@@Base>:
   30e2c:	push	{fp, lr}
   30e30:	mov	fp, sp
   30e34:	mov	r3, r0
   30e38:	ldr	r0, [r0, #32]
   30e3c:	ldrh	r0, [r0, #14]
   30e40:	cmp	r0, #3
   30e44:	bne	30e9c <flatcc_builder_check_required@@Base+0x70>
   30e48:	ldrh	ip, [r3, #8]
   30e4c:	mov	r0, #0
   30e50:	cmp	ip, r2
   30e54:	movge	r0, #1
   30e58:	cmpge	r2, #1
   30e5c:	bge	30e64 <flatcc_builder_check_required@@Base+0x38>
   30e60:	pop	{fp, pc}
   30e64:	ldr	ip, [r3, #4]
   30e68:	mov	lr, #0
   30e6c:	b	30e80 <flatcc_builder_check_required@@Base+0x54>
   30e70:	add	lr, lr, #1
   30e74:	add	r1, r1, #2
   30e78:	cmp	lr, r2
   30e7c:	popge	{fp, pc}
   30e80:	ldrh	r3, [r1]
   30e84:	add	r3, ip, r3, lsl #1
   30e88:	ldrh	r3, [r3]
   30e8c:	cmp	r3, #0
   30e90:	bne	30e70 <flatcc_builder_check_required@@Base+0x44>
   30e94:	mov	r0, #0
   30e98:	pop	{fp, pc}
   30e9c:	movw	r0, #2728	; 0xaa8
   30ea0:	movt	r0, #5
   30ea4:	movw	r1, #659	; 0x293
   30ea8:	movt	r1, #5
   30eac:	movw	r3, #2934	; 0xb76
   30eb0:	movt	r3, #5
   30eb4:	movw	r2, #1297	; 0x511
   30eb8:	bl	14a80 <__assert_fail@plt>

00030ebc <flatcc_builder_end_table@@Base>:
   30ebc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30ec0:	add	fp, sp, #24
   30ec4:	sub	sp, sp, #16
   30ec8:	mov	r4, r0
   30ecc:	ldr	r0, [r0, #32]
   30ed0:	ldrh	r0, [r0, #14]
   30ed4:	cmp	r0, #3
   30ed8:	bne	30fe8 <flatcc_builder_end_table@@Base+0x12c>
   30edc:	ldrh	r0, [r4, #8]
   30ee0:	mov	r1, #4
   30ee4:	add	r0, r1, r0, lsl #1
   30ee8:	ldr	r6, [r4, #4]
   30eec:	strh	r0, [r6, #-4]!
   30ef0:	ldrh	r1, [r4, #20]
   30ef4:	add	r1, r1, #4
   30ef8:	strh	r1, [r6, #2]
   30efc:	uxth	r5, r0
   30f00:	ldr	r0, [r4, #12]
   30f04:	eor	r0, r0, r5
   30f08:	movw	r2, #31153	; 0x79b1
   30f0c:	movt	r2, #40503	; 0x9e37
   30f10:	mul	r0, r0, r2
   30f14:	uxth	r1, r1
   30f18:	eor	r0, r0, r1
   30f1c:	mul	r3, r0, r2
   30f20:	str	r3, [r4, #12]
   30f24:	mov	r0, r4
   30f28:	mov	r1, r6
   30f2c:	mov	r2, r5
   30f30:	bl	30968 <flatcc_builder_create_cached_vtable@@Base>
   30f34:	cmp	r0, #0
   30f38:	beq	30fd8 <flatcc_builder_end_table@@Base+0x11c>
   30f3c:	mov	r7, r0
   30f40:	mov	r8, #0
   30f44:	mov	r0, r6
   30f48:	mov	r1, #0
   30f4c:	mov	r2, r5
   30f50:	bl	149d8 <memset@plt>
   30f54:	ldrh	r3, [r4, #130]	; 0x82
   30f58:	ldr	r0, [r4, #76]	; 0x4c
   30f5c:	ldr	r6, [r4]
   30f60:	ldr	r1, [r4, #16]
   30f64:	ldr	r2, [r4, #20]
   30f68:	ldr	r5, [r4, #32]
   30f6c:	ldr	r5, [r5, #20]
   30f70:	add	r0, r0, r5
   30f74:	sub	r6, r6, r0
   30f78:	asr	r6, r6, #1
   30f7c:	stm	sp, {r0, r6, r7}
   30f80:	mov	r0, r4
   30f84:	bl	30ba8 <flatcc_builder_create_table@@Base>
   30f88:	cmp	r0, #0
   30f8c:	beq	30fdc <flatcc_builder_end_table@@Base+0x120>
   30f90:	mov	r5, r0
   30f94:	ldr	r0, [r4, #32]
   30f98:	ldr	r1, [r4, #52]	; 0x34
   30f9c:	ldr	r2, [r4, #76]	; 0x4c
   30fa0:	ldr	r3, [r0, #24]
   30fa4:	str	r3, [r4, #12]
   30fa8:	ldrh	r3, [r0, #28]
   30fac:	strh	r3, [r4, #8]
   30fb0:	ldr	r3, [r0, #16]
   30fb4:	add	r1, r1, r3
   30fb8:	str	r1, [r4, #4]
   30fbc:	ldr	r0, [r0, #20]
   30fc0:	add	r0, r2, r0
   30fc4:	str	r0, [r4]
   30fc8:	mov	r0, r4
   30fcc:	bl	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   30fd0:	mov	r8, r5
   30fd4:	b	30fdc <flatcc_builder_end_table@@Base+0x120>
   30fd8:	mov	r8, #0
   30fdc:	mov	r0, r8
   30fe0:	sub	sp, fp, #24
   30fe4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30fe8:	movw	r0, #2728	; 0xaa8
   30fec:	movt	r0, #5
   30ff0:	movw	r1, #659	; 0x293
   30ff4:	movt	r1, #5
   30ff8:	movw	r3, #3024	; 0xbd0
   30ffc:	movt	r3, #5
   31000:	movw	r2, #1317	; 0x525
   31004:	bl	14a80 <__assert_fail@plt>

00031008 <flatcc_builder_create_vector@@Base>:
   31008:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3100c:	add	fp, sp, #24
   31010:	sub	sp, sp, #80	; 0x50
   31014:	mov	r4, r0
   31018:	ldr	r0, [fp, #8]
   3101c:	strh	r0, [fp, #-26]	; 0xffffffe6
   31020:	ldr	r0, [fp, #12]
   31024:	cmp	r2, r0
   31028:	bhi	310f8 <flatcc_builder_create_vector@@Base+0xf0>
   3102c:	mov	r6, r3
   31030:	mov	r7, r2
   31034:	mov	r8, r1
   31038:	sub	r0, fp, #26
   3103c:	mov	r9, #4
   31040:	mov	r1, #4
   31044:	bl	30548 <flatcc_builder_start_vector@@Base+0x80>
   31048:	ldrh	r5, [fp, #-26]	; 0xffffffe6
   3104c:	mov	r0, r4
   31050:	mov	r1, r5
   31054:	bl	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>
   31058:	mov	r0, r7
   3105c:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   31060:	str	r7, [fp, #-32]	; 0xffffffe0
   31064:	mul	r6, r6, r7
   31068:	mov	r0, r4
   3106c:	mov	r1, r6
   31070:	mov	r2, r5
   31074:	bl	2f75c <flatcc_builder_embed_buffer@@Base+0x1c8>
   31078:	str	r9, [sp]
   3107c:	sub	r1, fp, #32
   31080:	str	r1, [sp, #8]
   31084:	str	r9, [sp, #12]
   31088:	mov	r1, #1
   3108c:	str	r1, [sp, #4]
   31090:	cmp	r6, #0
   31094:	beq	310b0 <flatcc_builder_create_vector@@Base+0xa8>
   31098:	str	r8, [sp, #16]
   3109c:	str	r6, [sp, #20]
   310a0:	mov	r1, #2
   310a4:	str	r1, [sp, #4]
   310a8:	add	r1, r6, #4
   310ac:	str	r1, [sp]
   310b0:	cmp	r0, #0
   310b4:	beq	310e4 <flatcc_builder_create_vector@@Base+0xdc>
   310b8:	ldm	sp, {r1, r2}
   310bc:	add	r1, r1, r0
   310c0:	str	r1, [sp]
   310c4:	mov	r1, sp
   310c8:	add	r1, r1, r2, lsl #3
   310cc:	movw	r3, #129	; 0x81
   310d0:	movt	r3, #5
   310d4:	str	r3, [r1, #8]
   310d8:	str	r0, [r1, #12]
   310dc:	add	r0, r2, #1
   310e0:	str	r0, [sp, #4]
   310e4:	mov	r1, sp
   310e8:	mov	r0, r4
   310ec:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   310f0:	sub	sp, fp, #24
   310f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   310f8:	movw	r0, #3090	; 0xc12
   310fc:	movt	r0, #5
   31100:	movw	r1, #659	; 0x293
   31104:	movt	r1, #5
   31108:	movw	r3, #3109	; 0xc25
   3110c:	movt	r3, #5
   31110:	movw	r2, #1365	; 0x555
   31114:	bl	14a80 <__assert_fail@plt>

00031118 <flatcc_builder_end_vector@@Base>:
   31118:	push	{r4, r5, fp, lr}
   3111c:	add	fp, sp, #8
   31120:	sub	sp, sp, #8
   31124:	mov	r4, r0
   31128:	ldr	r0, [r0, #32]
   3112c:	ldrh	r1, [r0, #14]
   31130:	cmp	r1, #4
   31134:	bne	31178 <flatcc_builder_end_vector@@Base+0x60>
   31138:	ldr	r1, [r4, #16]
   3113c:	ldrh	r5, [r4, #130]	; 0x82
   31140:	ldr	r3, [r0, #16]
   31144:	ldr	r2, [r0, #20]
   31148:	ldr	r0, [r0, #24]
   3114c:	str	r5, [sp]
   31150:	str	r0, [sp, #4]
   31154:	mov	r0, r4
   31158:	bl	31008 <flatcc_builder_create_vector@@Base>
   3115c:	mov	r5, r0
   31160:	cmp	r0, #0
   31164:	movne	r0, r4
   31168:	blne	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   3116c:	mov	r0, r5
   31170:	sub	sp, fp, #8
   31174:	pop	{r4, r5, fp, pc}
   31178:	movw	r0, #1462	; 0x5b6
   3117c:	movt	r0, #5
   31180:	movw	r1, #659	; 0x293
   31184:	movt	r1, #5
   31188:	movw	r3, #3227	; 0xc9b
   3118c:	movt	r3, #5
   31190:	movw	r2, #1400	; 0x578
   31194:	bl	14a80 <__assert_fail@plt>

00031198 <flatcc_builder_vector_count@@Base>:
   31198:	ldr	r0, [r0, #32]
   3119c:	ldr	r0, [r0, #20]
   311a0:	bx	lr

000311a4 <flatcc_builder_vector_edit@@Base>:
   311a4:	ldr	r0, [r0, #16]
   311a8:	bx	lr

000311ac <flatcc_builder_create_offset_vector_direct@@Base>:
   311ac:	mov	r3, #0
   311b0:	b	311b4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   311b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   311b8:	add	fp, sp, #24
   311bc:	sub	sp, sp, #80	; 0x50
   311c0:	mov	r8, r0
   311c4:	mov	r0, #0
   311c8:	cmn	r2, #-1073741823	; 0xc0000001
   311cc:	bhi	312fc <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   311d0:	mov	r5, r3
   311d4:	mov	r9, r2
   311d8:	mov	r7, r1
   311dc:	mov	r6, #4
   311e0:	mov	r0, r8
   311e4:	mov	r1, #4
   311e8:	bl	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>
   311ec:	mov	r0, r9
   311f0:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   311f4:	str	r9, [fp, #-28]	; 0xffffffe4
   311f8:	lsl	r4, r9, #2
   311fc:	mov	r0, r8
   31200:	mov	r1, r4
   31204:	mov	r2, #4
   31208:	bl	2f75c <flatcc_builder_embed_buffer@@Base+0x1c8>
   3120c:	str	r6, [sp, #4]
   31210:	sub	r1, fp, #28
   31214:	str	r1, [sp, #12]
   31218:	str	r6, [sp, #16]
   3121c:	mov	r1, #1
   31220:	str	r1, [sp, #8]
   31224:	mov	r1, #0
   31228:	cmp	r1, r9, lsl #2
   3122c:	beq	31248 <flatcc_builder_create_offset_vector_direct@@Base+0x9c>
   31230:	str	r7, [sp, #20]
   31234:	str	r4, [sp, #24]
   31238:	mov	r1, #2
   3123c:	str	r1, [sp, #8]
   31240:	add	r1, r4, #4
   31244:	str	r1, [sp, #4]
   31248:	cmp	r0, #0
   3124c:	beq	3127c <flatcc_builder_create_offset_vector_direct@@Base+0xd0>
   31250:	ldmib	sp, {r1, r2}
   31254:	add	r1, r1, r0
   31258:	str	r1, [sp, #4]
   3125c:	add	r1, sp, #4
   31260:	add	r1, r1, r2, lsl #3
   31264:	movw	r3, #129	; 0x81
   31268:	movt	r3, #5
   3126c:	str	r3, [r1, #8]
   31270:	str	r0, [r1, #12]
   31274:	add	r0, r2, #1
   31278:	str	r0, [sp, #8]
   3127c:	cmp	r9, #0
   31280:	beq	312f0 <flatcc_builder_create_offset_vector_direct@@Base+0x144>
   31284:	ldr	r0, [r8, #136]	; 0x88
   31288:	mvn	r1, #3
   3128c:	sub	r0, r1, r0
   31290:	ldr	r1, [sp, #4]
   31294:	add	r4, r0, r1
   31298:	mov	r6, #0
   3129c:	ldr	r0, [r7, r6, lsl #2]
   312a0:	cmp	r0, #0
   312a4:	beq	312cc <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   312a8:	add	r0, r4, r0
   312ac:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   312b0:	str	r0, [r7, r6, lsl #2]
   312b4:	cmp	r5, #0
   312b8:	beq	312e0 <flatcc_builder_create_offset_vector_direct@@Base+0x134>
   312bc:	ldrb	r0, [r5, r6]
   312c0:	cmp	r0, #0
   312c4:	bne	312e0 <flatcc_builder_create_offset_vector_direct@@Base+0x134>
   312c8:	b	31304 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   312cc:	cmp	r5, #0
   312d0:	beq	31324 <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   312d4:	ldrb	r0, [r5, r6]
   312d8:	cmp	r0, #0
   312dc:	bne	31344 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   312e0:	sub	r4, r4, #4
   312e4:	add	r6, r6, #1
   312e8:	cmp	r6, r9
   312ec:	bcc	3129c <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   312f0:	add	r1, sp, #4
   312f4:	mov	r0, r8
   312f8:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   312fc:	sub	sp, fp, #24
   31300:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31304:	movw	r0, #5165	; 0x142d
   31308:	movt	r0, #5
   3130c:	movw	r1, #659	; 0x293
   31310:	movt	r1, #5
   31314:	movw	r3, #5179	; 0x143b
   31318:	movt	r3, #5
   3131c:	movw	r2, #1457	; 0x5b1
   31320:	bl	14a80 <__assert_fail@plt>
   31324:	movw	r0, #29885	; 0x74bd
   31328:	movt	r0, #4
   3132c:	movw	r1, #659	; 0x293
   31330:	movt	r1, #5
   31334:	movw	r3, #5179	; 0x143b
   31338:	movt	r3, #5
   3133c:	movw	r2, #1463	; 0x5b7
   31340:	bl	14a80 <__assert_fail@plt>
   31344:	movw	r0, #5310	; 0x14be
   31348:	movt	r0, #5
   3134c:	movw	r1, #659	; 0x293
   31350:	movt	r1, #5
   31354:	movw	r3, #5179	; 0x143b
   31358:	movt	r3, #5
   3135c:	movw	r2, #1461	; 0x5b5
   31360:	bl	14a80 <__assert_fail@plt>

00031364 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   31364:	push	{r4, r5, fp, lr}
   31368:	add	fp, sp, #8
   3136c:	mov	r3, r1
   31370:	mov	r4, r0
   31374:	ldr	r0, [r0, #32]
   31378:	ldrh	r1, [r0, #14]
   3137c:	cmp	r1, #5
   31380:	bne	313ac <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   31384:	ldr	r2, [r0, #20]
   31388:	ldr	r1, [r4, #16]
   3138c:	mov	r0, r4
   31390:	bl	311b4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31394:	mov	r5, r0
   31398:	cmp	r0, #0
   3139c:	movne	r0, r4
   313a0:	blne	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   313a4:	mov	r0, r5
   313a8:	pop	{r4, r5, fp, pc}
   313ac:	movw	r0, #1711	; 0x6af
   313b0:	movt	r0, #5
   313b4:	movw	r1, #659	; 0x293
   313b8:	movt	r1, #5
   313bc:	movw	r3, #3368	; 0xd28
   313c0:	movt	r3, #5
   313c4:	movw	r2, #1493	; 0x5d5
   313c8:	bl	14a80 <__assert_fail@plt>

000313cc <flatcc_builder_offset_vector_edit@@Base>:
   313cc:	ldr	r0, [r0, #16]
   313d0:	bx	lr

000313d4 <flatcc_builder_offset_vector_count@@Base>:
   313d4:	ldr	r0, [r0, #32]
   313d8:	ldr	r0, [r0, #20]
   313dc:	bx	lr

000313e0 <flatcc_builder_table_add_union@@Base>:
   313e0:	push	{r4, r5, r6, r7, fp, lr}
   313e4:	add	fp, sp, #16
   313e8:	mov	r5, r0
   313ec:	ldr	r0, [r0, #32]
   313f0:	ldrh	r0, [r0, #14]
   313f4:	cmp	r0, #3
   313f8:	bne	3146c <flatcc_builder_table_add_union@@Base+0x8c>
   313fc:	mov	r7, r3
   31400:	mov	r6, r1
   31404:	uxtb	r4, r2
   31408:	cmp	r3, #0
   3140c:	beq	31418 <flatcc_builder_table_add_union@@Base+0x38>
   31410:	cmp	r4, #0
   31414:	beq	3148c <flatcc_builder_table_add_union@@Base+0xac>
   31418:	cmp	r7, #0
   3141c:	beq	31438 <flatcc_builder_table_add_union@@Base+0x58>
   31420:	mov	r0, r5
   31424:	mov	r1, r6
   31428:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   3142c:	cmp	r0, #0
   31430:	beq	314cc <flatcc_builder_table_add_union@@Base+0xec>
   31434:	str	r7, [r0]
   31438:	sub	r1, r6, #1
   3143c:	mov	r0, r5
   31440:	mov	r2, #1
   31444:	mov	r3, #1
   31448:	bl	315b0 <flatcc_builder_table_add@@Base>
   3144c:	cmp	r0, #0
   31450:	beq	314ac <flatcc_builder_table_add_union@@Base+0xcc>
   31454:	mov	r5, r0
   31458:	mov	r0, r4
   3145c:	bl	31690 <flatcc_builder_table_add@@Base+0xe0>
   31460:	strb	r4, [r5]
   31464:	mov	r0, #0
   31468:	pop	{r4, r5, r6, r7, fp, pc}
   3146c:	movw	r0, #2728	; 0xaa8
   31470:	movt	r0, #5
   31474:	movw	r1, #659	; 0x293
   31478:	movt	r1, #5
   3147c:	movw	r3, #3482	; 0xd9a
   31480:	movt	r3, #5
   31484:	movw	r2, #1518	; 0x5ee
   31488:	bl	14a80 <__assert_fail@plt>
   3148c:	movw	r0, #3570	; 0xdf2
   31490:	movt	r0, #5
   31494:	movw	r1, #659	; 0x293
   31498:	movt	r1, #5
   3149c:	movw	r3, #3482	; 0xd9a
   314a0:	movt	r3, #5
   314a4:	movw	r2, #1519	; 0x5ef
   314a8:	bl	14a80 <__assert_fail@plt>
   314ac:	movw	r0, #3614	; 0xe1e
   314b0:	movt	r0, #5
   314b4:	movw	r1, #659	; 0x293
   314b8:	movt	r1, #5
   314bc:	movw	r3, #3482	; 0xd9a
   314c0:	movt	r3, #5
   314c4:	movw	r2, #1526	; 0x5f6
   314c8:	bl	14a80 <__assert_fail@plt>
   314cc:	movw	r0, #3604	; 0xe14
   314d0:	movt	r0, #5
   314d4:	movw	r1, #659	; 0x293
   314d8:	movt	r1, #5
   314dc:	movw	r3, #3482	; 0xd9a
   314e0:	movt	r3, #5
   314e4:	movw	r2, #1522	; 0x5f2
   314e8:	bl	14a80 <__assert_fail@plt>

000314ec <flatcc_builder_table_add_offset@@Base>:
   314ec:	push	{fp, lr}
   314f0:	mov	fp, sp
   314f4:	ldr	r2, [r0, #32]
   314f8:	ldrh	r2, [r2, #14]
   314fc:	cmp	r2, #3
   31500:	bne	31550 <flatcc_builder_table_add_offset@@Base+0x64>
   31504:	movw	r2, #32765	; 0x7ffd
   31508:	cmp	r1, r2
   3150c:	bcs	31570 <flatcc_builder_table_add_offset@@Base+0x84>
   31510:	ldr	r2, [r0, #4]
   31514:	add	r2, r2, r1, lsl #1
   31518:	ldrh	r2, [r2]
   3151c:	cmp	r2, #0
   31520:	bne	31590 <flatcc_builder_table_add_offset@@Base+0xa4>
   31524:	ldr	r2, [r0, #12]
   31528:	eor	r2, r2, r1
   3152c:	movw	r3, #31153	; 0x79b1
   31530:	movt	r3, #40503	; 0x9e37
   31534:	mul	r2, r2, r3
   31538:	eor	r2, r2, #4
   3153c:	mul	r2, r2, r3
   31540:	str	r2, [r0, #12]
   31544:	uxth	r1, r1
   31548:	pop	{fp, lr}
   3154c:	b	31ebc <flatcc_builder_table_add_copy@@Base+0x40>
   31550:	movw	r0, #2728	; 0xaa8
   31554:	movt	r0, #5
   31558:	movw	r1, #659	; 0x293
   3155c:	movt	r1, #5
   31560:	movw	r3, #4508	; 0x119c
   31564:	movt	r3, #5
   31568:	movw	r2, #1811	; 0x713
   3156c:	bl	14a80 <__assert_fail@plt>
   31570:	movw	r0, #4380	; 0x111c
   31574:	movt	r0, #5
   31578:	movw	r1, #659	; 0x293
   3157c:	movt	r1, #5
   31580:	movw	r3, #4508	; 0x119c
   31584:	movt	r3, #5
   31588:	movw	r2, #1812	; 0x714
   3158c:	bl	14a80 <__assert_fail@plt>
   31590:	movw	r0, #29885	; 0x74bd
   31594:	movt	r0, #4
   31598:	movw	r1, #659	; 0x293
   3159c:	movt	r1, #5
   315a0:	movw	r3, #4508	; 0x119c
   315a4:	movt	r3, #5
   315a8:	movw	r2, #1819	; 0x71b
   315ac:	bl	14a80 <__assert_fail@plt>

000315b0 <flatcc_builder_table_add@@Base>:
   315b0:	push	{fp, lr}
   315b4:	mov	fp, sp
   315b8:	mov	ip, r3
   315bc:	ldr	r3, [r0, #32]
   315c0:	ldrh	r3, [r3, #14]
   315c4:	cmp	r3, #3
   315c8:	bne	31630 <flatcc_builder_table_add@@Base+0x80>
   315cc:	movw	r3, #32765	; 0x7ffd
   315d0:	cmp	r1, r3
   315d4:	bcs	31650 <flatcc_builder_table_add@@Base+0xa0>
   315d8:	mov	lr, r2
   315dc:	ldrh	r3, [r0, #130]	; 0x82
   315e0:	cmp	r3, ip
   315e4:	strhcc	ip, [r0, #130]	; 0x82
   315e8:	ldr	r3, [r0, #4]
   315ec:	add	r3, r3, r1, lsl #1
   315f0:	ldrh	r3, [r3]
   315f4:	cmp	r3, #0
   315f8:	bne	31670 <flatcc_builder_table_add@@Base+0xc0>
   315fc:	ldr	r3, [r0, #12]
   31600:	eor	r3, r3, r1
   31604:	movw	r2, #31153	; 0x79b1
   31608:	movt	r2, #40503	; 0x9e37
   3160c:	mul	r3, r3, r2
   31610:	eor	r3, r3, lr
   31614:	mul	r2, r3, r2
   31618:	str	r2, [r0, #12]
   3161c:	uxth	r3, r1
   31620:	mov	r1, lr
   31624:	mov	r2, ip
   31628:	pop	{fp, lr}
   3162c:	b	31db0 <flatcc_builder_string_len@@Base+0xc>
   31630:	movw	r0, #2728	; 0xaa8
   31634:	movt	r0, #5
   31638:	movw	r1, #659	; 0x293
   3163c:	movt	r1, #5
   31640:	movw	r3, #4306	; 0x10d2
   31644:	movt	r3, #5
   31648:	movw	r2, #1773	; 0x6ed
   3164c:	bl	14a80 <__assert_fail@plt>
   31650:	movw	r0, #4380	; 0x111c
   31654:	movt	r0, #5
   31658:	movw	r1, #659	; 0x293
   3165c:	movt	r1, #5
   31660:	movw	r3, #4306	; 0x10d2
   31664:	movt	r3, #5
   31668:	movw	r2, #1774	; 0x6ee
   3166c:	bl	14a80 <__assert_fail@plt>
   31670:	movw	r0, #29885	; 0x74bd
   31674:	movt	r0, #4
   31678:	movw	r1, #659	; 0x293
   3167c:	movt	r1, #5
   31680:	movw	r3, #4306	; 0x10d2
   31684:	movt	r3, #5
   31688:	movw	r2, #1784	; 0x6f8
   3168c:	bl	14a80 <__assert_fail@plt>
   31690:	bx	lr

00031694 <flatcc_builder_table_add_union_vector@@Base>:
   31694:	push	{r4, r5, r6, r7, fp, lr}
   31698:	add	fp, sp, #16
   3169c:	mov	r6, r0
   316a0:	ldr	r0, [r0, #32]
   316a4:	ldrh	r0, [r0, #14]
   316a8:	cmp	r0, #3
   316ac:	bne	31714 <flatcc_builder_table_add_union_vector@@Base+0x80>
   316b0:	mov	r4, r3
   316b4:	mov	r7, r2
   316b8:	mov	r5, r1
   316bc:	clz	r0, r3
   316c0:	lsr	r0, r0, #5
   316c4:	clz	r1, r2
   316c8:	lsr	r1, r1, #5
   316cc:	cmp	r1, r0
   316d0:	bne	31734 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   316d4:	cmp	r7, #0
   316d8:	beq	3170c <flatcc_builder_table_add_union_vector@@Base+0x78>
   316dc:	sub	r1, r5, #1
   316e0:	mov	r0, r6
   316e4:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   316e8:	cmp	r0, #0
   316ec:	beq	31754 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   316f0:	str	r7, [r0]
   316f4:	mov	r0, r6
   316f8:	mov	r1, r5
   316fc:	bl	314ec <flatcc_builder_table_add_offset@@Base>
   31700:	cmp	r0, #0
   31704:	beq	31774 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   31708:	str	r4, [r0]
   3170c:	mov	r0, #0
   31710:	pop	{r4, r5, r6, r7, fp, pc}
   31714:	movw	r0, #2728	; 0xaa8
   31718:	movt	r0, #5
   3171c:	movw	r1, #659	; 0x293
   31720:	movt	r1, #5
   31724:	movw	r3, #3626	; 0xe2a
   31728:	movt	r3, #5
   3172c:	mov	r2, #1536	; 0x600
   31730:	bl	14a80 <__assert_fail@plt>
   31734:	movw	r0, #3725	; 0xe8d
   31738:	movt	r0, #5
   3173c:	movw	r1, #659	; 0x293
   31740:	movt	r1, #5
   31744:	movw	r3, #3626	; 0xe2a
   31748:	movt	r3, #5
   3174c:	movw	r2, #1537	; 0x601
   31750:	bl	14a80 <__assert_fail@plt>
   31754:	movw	r0, #3604	; 0xe14
   31758:	movt	r0, #5
   3175c:	movw	r1, #659	; 0x293
   31760:	movt	r1, #5
   31764:	movw	r3, #3626	; 0xe2a
   31768:	movt	r3, #5
   3176c:	movw	r2, #1540	; 0x604
   31770:	bl	14a80 <__assert_fail@plt>
   31774:	movw	r0, #3604	; 0xe14
   31778:	movt	r0, #5
   3177c:	movw	r1, #659	; 0x293
   31780:	movt	r1, #5
   31784:	movw	r3, #3626	; 0xe2a
   31788:	movt	r3, #5
   3178c:	movw	r2, #1544	; 0x608
   31790:	bl	14a80 <__assert_fail@plt>

00031794 <flatcc_builder_create_union_vector@@Base>:
   31794:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31798:	add	fp, sp, #24
   3179c:	sub	sp, sp, #16
   317a0:	mov	r6, r3
   317a4:	mov	r7, r2
   317a8:	mov	r4, r1
   317ac:	mov	r5, r0
   317b0:	mov	r0, #0
   317b4:	str	r0, [r5]
   317b8:	str	r0, [r5, #4]
   317bc:	mov	r0, r1
   317c0:	bl	30558 <flatcc_builder_start_offset_vector@@Base>
   317c4:	cmp	r0, #0
   317c8:	beq	317d4 <flatcc_builder_create_union_vector@@Base+0x40>
   317cc:	sub	sp, fp, #24
   317d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   317d4:	mov	r0, r4
   317d8:	mov	r1, r6
   317dc:	bl	300a4 <flatcc_builder_extend_offset_vector@@Base>
   317e0:	cmp	r0, #0
   317e4:	beq	317cc <flatcc_builder_create_union_vector@@Base+0x38>
   317e8:	mov	r0, r4
   317ec:	mov	r1, r6
   317f0:	bl	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   317f4:	cmp	r0, #0
   317f8:	beq	317cc <flatcc_builder_create_union_vector@@Base+0x38>
   317fc:	mov	r8, r0
   31800:	mov	r0, r4
   31804:	bl	313cc <flatcc_builder_offset_vector_edit@@Base>
   31808:	mov	ip, r0
   3180c:	cmp	r6, #0
   31810:	beq	31840 <flatcc_builder_create_union_vector@@Base+0xac>
   31814:	add	r0, r7, #4
   31818:	mov	r1, r6
   3181c:	mov	r2, ip
   31820:	mov	r7, r8
   31824:	ldrb	r3, [r0, #-4]
   31828:	strb	r3, [r7], #1
   3182c:	ldr	r3, [r0]
   31830:	str	r3, [r2], #4
   31834:	add	r0, r0, #8
   31838:	subs	r1, r1, #1
   3183c:	bne	31824 <flatcc_builder_create_union_vector@@Base+0x90>
   31840:	str	r6, [sp]
   31844:	add	r0, sp, #8
   31848:	mov	r1, r4
   3184c:	mov	r2, r8
   31850:	mov	r3, ip
   31854:	bl	31874 <flatcc_builder_create_union_vector_direct@@Base>
   31858:	ldr	r0, [sp, #8]
   3185c:	ldr	r1, [sp, #12]
   31860:	stm	r5, {r0, r1}
   31864:	mov	r0, r4
   31868:	bl	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   3186c:	sub	sp, fp, #24
   31870:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031874 <flatcc_builder_create_union_vector_direct@@Base>:
   31874:	push	{r4, r5, r6, r7, fp, lr}
   31878:	add	fp, sp, #16
   3187c:	sub	sp, sp, #8
   31880:	mov	r5, r2
   31884:	mov	r6, r1
   31888:	mov	r4, r0
   3188c:	mov	r0, #0
   31890:	str	r0, [r4]
   31894:	str	r0, [r4, #4]
   31898:	ldr	r7, [fp, #8]
   3189c:	mov	r0, r1
   318a0:	mov	r1, r3
   318a4:	mov	r2, r7
   318a8:	mov	r3, r5
   318ac:	bl	311b4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   318b0:	str	r0, [r4, #4]
   318b4:	cmp	r0, #0
   318b8:	beq	318e4 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   318bc:	mvn	r0, #0
   318c0:	mov	r1, #1
   318c4:	str	r1, [sp]
   318c8:	str	r0, [sp, #4]
   318cc:	mov	r0, r6
   318d0:	mov	r1, r5
   318d4:	mov	r2, r7
   318d8:	mov	r3, #1
   318dc:	bl	31008 <flatcc_builder_create_vector@@Base>
   318e0:	str	r0, [r4]
   318e4:	sub	sp, fp, #16
   318e8:	pop	{r4, r5, r6, r7, fp, pc}

000318ec <flatcc_builder_start_union_vector@@Base>:
   318ec:	push	{r4, r5, fp, lr}
   318f0:	add	fp, sp, #8
   318f4:	mov	r4, r0
   318f8:	mov	r1, #4
   318fc:	bl	2fb70 <flatcc_builder_start_buffer@@Base+0xbc>
   31900:	mvn	r5, #0
   31904:	cmp	r0, #0
   31908:	beq	31914 <flatcc_builder_start_union_vector@@Base+0x28>
   3190c:	mov	r0, r5
   31910:	pop	{r4, r5, fp, pc}
   31914:	ldr	r0, [r4, #32]
   31918:	mov	r1, #8
   3191c:	str	r1, [r0, #16]
   31920:	ldr	r0, [r4, #32]
   31924:	mov	r5, #0
   31928:	str	r5, [r0, #20]
   3192c:	ldr	r0, [r4, #32]
   31930:	mov	r1, #7
   31934:	strh	r1, [r0, #14]
   31938:	mov	r0, r4
   3193c:	mvn	r1, #3
   31940:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   31944:	mov	r0, r5
   31948:	pop	{r4, r5, fp, pc}

0003194c <flatcc_builder_end_union_vector@@Base>:
   3194c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31950:	add	fp, sp, #24
   31954:	sub	sp, sp, #16
   31958:	mov	r9, r0
   3195c:	mov	r0, #0
   31960:	str	r0, [r9]
   31964:	str	r0, [r9, #4]
   31968:	ldr	r0, [r1, #32]
   3196c:	ldrh	r0, [r0, #14]
   31970:	cmp	r0, #7
   31974:	bne	31a14 <flatcc_builder_end_union_vector@@Base+0xc8>
   31978:	mov	r4, r1
   3197c:	mov	r0, r1
   31980:	bl	31a34 <flatcc_builder_union_vector_count@@Base>
   31984:	mov	r6, r0
   31988:	add	r1, r0, r0, lsl #2
   3198c:	mov	r0, r4
   31990:	bl	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   31994:	cmp	r0, #0
   31998:	beq	31a0c <flatcc_builder_end_union_vector@@Base+0xc0>
   3199c:	mov	r7, r0
   319a0:	add	r8, r0, r6, lsl #2
   319a4:	mov	r0, r4
   319a8:	bl	31a40 <flatcc_builder_union_vector_edit@@Base>
   319ac:	cmp	r6, #0
   319b0:	beq	319e0 <flatcc_builder_end_union_vector@@Base+0x94>
   319b4:	add	r0, r0, #4
   319b8:	mov	r1, r6
   319bc:	mov	r2, r7
   319c0:	mov	r3, r8
   319c4:	ldrb	r5, [r0, #-4]
   319c8:	strb	r5, [r3], #1
   319cc:	ldr	r5, [r0]
   319d0:	str	r5, [r2], #4
   319d4:	add	r0, r0, #8
   319d8:	subs	r1, r1, #1
   319dc:	bne	319c4 <flatcc_builder_end_union_vector@@Base+0x78>
   319e0:	str	r6, [sp]
   319e4:	add	r0, sp, #8
   319e8:	mov	r1, r4
   319ec:	mov	r2, r8
   319f0:	mov	r3, r7
   319f4:	bl	31874 <flatcc_builder_create_union_vector_direct@@Base>
   319f8:	ldr	r0, [sp, #8]
   319fc:	ldr	r1, [sp, #12]
   31a00:	stm	r9, {r0, r1}
   31a04:	mov	r0, r4
   31a08:	bl	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   31a0c:	sub	sp, fp, #24
   31a10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31a14:	movw	r0, #3765	; 0xeb5
   31a18:	movt	r0, #5
   31a1c:	movw	r1, #659	; 0x293
   31a20:	movt	r1, #5
   31a24:	movw	r3, #3815	; 0xee7
   31a28:	movt	r3, #5
   31a2c:	movw	r2, #1617	; 0x651
   31a30:	bl	14a80 <__assert_fail@plt>

00031a34 <flatcc_builder_union_vector_count@@Base>:
   31a34:	ldr	r0, [r0, #32]
   31a38:	ldr	r0, [r0, #20]
   31a3c:	bx	lr

00031a40 <flatcc_builder_union_vector_edit@@Base>:
   31a40:	ldr	r0, [r0, #16]
   31a44:	bx	lr

00031a48 <flatcc_builder_extend_union_vector@@Base>:
   31a48:	push	{r4, r5, fp, lr}
   31a4c:	add	fp, sp, #8
   31a50:	mov	r5, r1
   31a54:	mov	r4, r0
   31a58:	mvn	r2, #-536870912	; 0xe0000000
   31a5c:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   31a60:	mov	r1, r0
   31a64:	mov	r0, #0
   31a68:	cmp	r1, #0
   31a6c:	popne	{r4, r5, fp, pc}
   31a70:	lsl	r1, r5, #3
   31a74:	mov	r0, r4
   31a78:	bl	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   31a7c:	pop	{r4, r5, fp, pc}

00031a80 <flatcc_builder_truncate_union_vector@@Base>:
   31a80:	push	{fp, lr}
   31a84:	mov	fp, sp
   31a88:	ldr	r2, [r0, #32]
   31a8c:	ldrh	r3, [r2, #14]
   31a90:	cmp	r3, #7
   31a94:	bne	31ac4 <flatcc_builder_truncate_union_vector@@Base+0x44>
   31a98:	ldr	r3, [r2, #20]
   31a9c:	cmp	r3, r1
   31aa0:	bcc	31ae4 <flatcc_builder_truncate_union_vector@@Base+0x64>
   31aa4:	sub	r3, r3, r1
   31aa8:	str	r3, [r2, #20]
   31aac:	ldr	r2, [r0, #32]
   31ab0:	ldr	r2, [r2, #16]
   31ab4:	mul	r1, r2, r1
   31ab8:	bl	303ac <flatcc_builder_truncate_vector@@Base+0x84>
   31abc:	mov	r0, #0
   31ac0:	pop	{fp, pc}
   31ac4:	movw	r0, #3765	; 0xeb5
   31ac8:	movt	r0, #5
   31acc:	movw	r1, #659	; 0x293
   31ad0:	movt	r1, #5
   31ad4:	movw	r3, #3898	; 0xf3a
   31ad8:	movt	r3, #5
   31adc:	movw	r2, #1665	; 0x681
   31ae0:	bl	14a80 <__assert_fail@plt>
   31ae4:	movw	r0, #2329	; 0x919
   31ae8:	movt	r0, #5
   31aec:	movw	r1, #659	; 0x293
   31af0:	movt	r1, #5
   31af4:	movw	r3, #3898	; 0xf3a
   31af8:	movt	r3, #5
   31afc:	movw	r2, #1666	; 0x682
   31b00:	bl	14a80 <__assert_fail@plt>

00031b04 <flatcc_builder_union_vector_push@@Base>:
   31b04:	push	{r4, r5, r6, sl, fp, lr}
   31b08:	add	fp, sp, #16
   31b0c:	mov	r4, r2
   31b10:	mov	r5, r1
   31b14:	ldr	r1, [r0, #32]
   31b18:	ldrh	r2, [r1, #14]
   31b1c:	cmp	r2, #7
   31b20:	bne	31b5c <flatcc_builder_union_vector_push@@Base+0x58>
   31b24:	ldr	r2, [r1, #20]
   31b28:	mov	r6, #0
   31b2c:	cmn	r2, #-536870911	; 0xe0000001
   31b30:	beq	31b54 <flatcc_builder_union_vector_push@@Base+0x50>
   31b34:	add	r2, r2, #1
   31b38:	str	r2, [r1, #20]
   31b3c:	mov	r1, #8
   31b40:	bl	2fe20 <flatcc_builder_start_struct@@Base+0x84>
   31b44:	cmp	r0, #0
   31b48:	strne	r5, [r0]
   31b4c:	strne	r4, [r0, #4]
   31b50:	movne	r6, r0
   31b54:	mov	r0, r6
   31b58:	pop	{r4, r5, r6, sl, fp, pc}
   31b5c:	movw	r0, #3765	; 0xeb5
   31b60:	movt	r0, #5
   31b64:	movw	r1, #659	; 0x293
   31b68:	movt	r1, #5
   31b6c:	movw	r3, #3967	; 0xf7f
   31b70:	movt	r3, #5
   31b74:	movw	r2, #1677	; 0x68d
   31b78:	bl	14a80 <__assert_fail@plt>

00031b7c <flatcc_builder_append_union_vector@@Base>:
   31b7c:	push	{r4, r5, r6, sl, fp, lr}
   31b80:	add	fp, sp, #16
   31b84:	mov	r6, r0
   31b88:	ldr	r0, [r0, #32]
   31b8c:	ldrh	r0, [r0, #14]
   31b90:	cmp	r0, #7
   31b94:	bne	31bd4 <flatcc_builder_append_union_vector@@Base+0x58>
   31b98:	mov	r5, r2
   31b9c:	mov	r4, r1
   31ba0:	mov	r0, r6
   31ba4:	mov	r1, r2
   31ba8:	mvn	r2, #-536870912	; 0xe0000000
   31bac:	bl	2ff24 <flatcc_builder_extend_vector@@Base+0x44>
   31bb0:	mov	r1, r0
   31bb4:	mov	r0, #0
   31bb8:	cmp	r1, #0
   31bbc:	popne	{r4, r5, r6, sl, fp, pc}
   31bc0:	lsl	r2, r5, #3
   31bc4:	mov	r0, r6
   31bc8:	mov	r1, r4
   31bcc:	bl	2ffec <flatcc_builder_vector_push@@Base+0x80>
   31bd0:	pop	{r4, r5, r6, sl, fp, pc}
   31bd4:	movw	r0, #3765	; 0xeb5
   31bd8:	movt	r0, #5
   31bdc:	movw	r1, #659	; 0x293
   31be0:	movt	r1, #5
   31be4:	movw	r3, #4076	; 0xfec
   31be8:	movt	r3, #5
   31bec:	movw	r2, #1692	; 0x69c
   31bf0:	bl	14a80 <__assert_fail@plt>

00031bf4 <flatcc_builder_create_string@@Base>:
   31bf4:	push	{r4, r5, r6, r7, fp, lr}
   31bf8:	add	fp, sp, #16
   31bfc:	sub	sp, sp, #80	; 0x50
   31c00:	mov	r5, r2
   31c04:	mov	r6, r1
   31c08:	mov	r4, r0
   31c0c:	mov	r0, r2
   31c10:	bl	2f770 <flatcc_builder_embed_buffer@@Base+0x1dc>
   31c14:	str	r5, [fp, #-20]	; 0xffffffec
   31c18:	add	r1, r5, #1
   31c1c:	mov	r7, #4
   31c20:	mov	r0, r4
   31c24:	mov	r2, #4
   31c28:	bl	2f75c <flatcc_builder_embed_buffer@@Base+0x1c8>
   31c2c:	str	r7, [sp, #4]
   31c30:	sub	r1, fp, #20
   31c34:	str	r1, [sp, #12]
   31c38:	str	r7, [sp, #16]
   31c3c:	mov	r1, #1
   31c40:	str	r1, [sp, #8]
   31c44:	add	r0, r0, #1
   31c48:	cmp	r5, #0
   31c4c:	beq	31c68 <flatcc_builder_create_string@@Base+0x74>
   31c50:	str	r6, [sp, #20]
   31c54:	str	r5, [sp, #24]
   31c58:	mov	r1, #2
   31c5c:	str	r1, [sp, #8]
   31c60:	add	r1, r5, #4
   31c64:	str	r1, [sp, #4]
   31c68:	cmp	r0, #0
   31c6c:	beq	31c9c <flatcc_builder_create_string@@Base+0xa8>
   31c70:	ldmib	sp, {r1, r2}
   31c74:	add	r1, r1, r0
   31c78:	str	r1, [sp, #4]
   31c7c:	add	r1, sp, #4
   31c80:	add	r1, r1, r2, lsl #3
   31c84:	movw	r3, #129	; 0x81
   31c88:	movt	r3, #5
   31c8c:	str	r3, [r1, #8]
   31c90:	str	r0, [r1, #12]
   31c94:	add	r0, r2, #1
   31c98:	str	r0, [sp, #8]
   31c9c:	add	r1, sp, #4
   31ca0:	mov	r0, r4
   31ca4:	bl	2f774 <flatcc_builder_embed_buffer@@Base+0x1e0>
   31ca8:	sub	sp, fp, #16
   31cac:	pop	{r4, r5, r6, r7, fp, pc}

00031cb0 <flatcc_builder_create_string_str@@Base>:
   31cb0:	push	{r4, r5, fp, lr}
   31cb4:	add	fp, sp, #8
   31cb8:	mov	r4, r1
   31cbc:	mov	r5, r0
   31cc0:	mov	r0, r1
   31cc4:	bl	149a8 <strlen@plt>
   31cc8:	mov	r2, r0
   31ccc:	mov	r0, r5
   31cd0:	mov	r1, r4
   31cd4:	pop	{r4, r5, fp, lr}
   31cd8:	b	31bf4 <flatcc_builder_create_string@@Base>

00031cdc <flatcc_builder_create_string_strn@@Base>:
   31cdc:	push	{r4, r5, fp, lr}
   31ce0:	add	fp, sp, #8
   31ce4:	mov	r4, r1
   31ce8:	mov	r5, r0
   31cec:	mov	r0, r1
   31cf0:	mov	r1, r2
   31cf4:	bl	302fc <flatcc_builder_append_string_strn@@Base+0x30>
   31cf8:	mov	r2, r0
   31cfc:	mov	r0, r5
   31d00:	mov	r1, r4
   31d04:	pop	{r4, r5, fp, lr}
   31d08:	b	31bf4 <flatcc_builder_create_string@@Base>

00031d0c <flatcc_builder_end_string@@Base>:
   31d0c:	push	{r4, r5, fp, lr}
   31d10:	add	fp, sp, #8
   31d14:	mov	r4, r0
   31d18:	ldr	r0, [r0, #32]
   31d1c:	ldrh	r1, [r0, #14]
   31d20:	cmp	r1, #6
   31d24:	bne	31d5c <flatcc_builder_end_string@@Base+0x50>
   31d28:	ldr	r2, [r4, #20]
   31d2c:	ldr	r0, [r0, #20]
   31d30:	cmp	r0, r2
   31d34:	bne	31d7c <flatcc_builder_end_string@@Base+0x70>
   31d38:	ldr	r1, [r4, #16]
   31d3c:	mov	r0, r4
   31d40:	bl	31bf4 <flatcc_builder_create_string@@Base>
   31d44:	mov	r5, r0
   31d48:	cmp	r0, #0
   31d4c:	movne	r0, r4
   31d50:	blne	2fd30 <flatcc_builder_end_buffer@@Base+0xc8>
   31d54:	mov	r0, r5
   31d58:	pop	{r4, r5, fp, pc}
   31d5c:	movw	r0, #1976	; 0x7b8
   31d60:	movt	r0, #5
   31d64:	movw	r1, #659	; 0x293
   31d68:	movt	r1, #5
   31d6c:	movw	r3, #4203	; 0x106b
   31d70:	movt	r3, #5
   31d74:	movw	r2, #1732	; 0x6c4
   31d78:	bl	14a80 <__assert_fail@plt>
   31d7c:	movw	r0, #4270	; 0x10ae
   31d80:	movt	r0, #5
   31d84:	movw	r1, #659	; 0x293
   31d88:	movt	r1, #5
   31d8c:	movw	r3, #4203	; 0x106b
   31d90:	movt	r3, #5
   31d94:	movw	r2, #1733	; 0x6c5
   31d98:	bl	14a80 <__assert_fail@plt>

00031d9c <flatcc_builder_string_edit@@Base>:
   31d9c:	ldr	r0, [r0, #16]
   31da0:	bx	lr

00031da4 <flatcc_builder_string_len@@Base>:
   31da4:	ldr	r0, [r0, #32]
   31da8:	ldr	r0, [r0, #20]
   31dac:	bx	lr
   31db0:	push	{r4, r5, r6, sl, fp, lr}
   31db4:	add	fp, sp, #16
   31db8:	mov	r5, r3
   31dbc:	mov	r4, r0
   31dc0:	ldr	r0, [r0, #20]
   31dc4:	ldr	r3, [r4, #24]
   31dc8:	add	r0, r2, r0
   31dcc:	sub	r0, r0, #1
   31dd0:	rsb	r2, r2, #0
   31dd4:	and	r6, r0, r2
   31dd8:	add	r0, r6, r1
   31ddc:	str	r0, [r4, #20]
   31de0:	cmp	r0, r3
   31de4:	bcc	31e08 <flatcc_builder_string_len@@Base+0x64>
   31de8:	add	r1, r0, #1
   31dec:	mov	r0, r4
   31df0:	movw	r2, #65532	; 0xfffc
   31df4:	bl	32254 <flatcc_builder_get_emit_context@@Base+0x18>
   31df8:	mov	r1, r0
   31dfc:	mov	r0, #0
   31e00:	cmp	r1, #0
   31e04:	popne	{r4, r5, r6, sl, fp, pc}
   31e08:	ldr	r0, [r4, #4]
   31e0c:	add	r0, r0, r5, lsl #1
   31e10:	add	r1, r6, #4
   31e14:	strh	r1, [r0]
   31e18:	ldrh	r0, [r4, #8]
   31e1c:	cmp	r0, r5
   31e20:	addls	r0, r5, #1
   31e24:	strhls	r0, [r4, #8]
   31e28:	ldr	r0, [r4, #16]
   31e2c:	add	r0, r0, r6
   31e30:	pop	{r4, r5, r6, sl, fp, pc}

00031e34 <flatcc_builder_table_edit@@Base>:
   31e34:	ldr	r2, [r0, #32]
   31e38:	ldrh	r2, [r2, #14]
   31e3c:	cmp	r2, #3
   31e40:	ldreq	r2, [r0, #16]
   31e44:	ldreq	r0, [r0, #20]
   31e48:	addeq	r0, r2, r0
   31e4c:	subeq	r0, r0, r1
   31e50:	bxeq	lr
   31e54:	push	{fp, lr}
   31e58:	mov	fp, sp
   31e5c:	movw	r0, #2728	; 0xaa8
   31e60:	movt	r0, #5
   31e64:	movw	r1, #659	; 0x293
   31e68:	movt	r1, #5
   31e6c:	movw	r3, #4448	; 0x1160
   31e70:	movt	r3, #5
   31e74:	movw	r2, #1794	; 0x702
   31e78:	bl	14a80 <__assert_fail@plt>

00031e7c <flatcc_builder_table_add_copy@@Base>:
   31e7c:	push	{r4, r5, r6, sl, fp, lr}
   31e80:	add	fp, sp, #16
   31e84:	mov	r4, r3
   31e88:	mov	r5, r2
   31e8c:	ldr	r3, [fp, #8]
   31e90:	mov	r2, r4
   31e94:	bl	315b0 <flatcc_builder_table_add@@Base>
   31e98:	mov	r6, r0
   31e9c:	cmp	r0, #0
   31ea0:	beq	31eb4 <flatcc_builder_table_add_copy@@Base+0x38>
   31ea4:	mov	r0, r6
   31ea8:	mov	r1, r5
   31eac:	mov	r2, r4
   31eb0:	bl	1490c <memcpy@plt>
   31eb4:	mov	r0, r6
   31eb8:	pop	{r4, r5, r6, sl, fp, pc}
   31ebc:	push	{r4, r5, r6, r7, fp, lr}
   31ec0:	add	fp, sp, #16
   31ec4:	mov	r5, r1
   31ec8:	mov	r4, r0
   31ecc:	ldr	r0, [r0, #20]
   31ed0:	ldr	r1, [r4, #24]
   31ed4:	add	r0, r0, #3
   31ed8:	bic	r7, r0, #3
   31edc:	add	r6, r7, #4
   31ee0:	str	r6, [r4, #20]
   31ee4:	cmp	r6, r1
   31ee8:	bls	31f0c <flatcc_builder_table_add_copy@@Base+0x90>
   31eec:	mov	r0, r4
   31ef0:	mov	r1, r6
   31ef4:	movw	r2, #65532	; 0xfffc
   31ef8:	bl	32254 <flatcc_builder_get_emit_context@@Base+0x18>
   31efc:	mov	r1, r0
   31f00:	mov	r0, #0
   31f04:	cmp	r1, #0
   31f08:	popne	{r4, r5, r6, r7, fp, pc}
   31f0c:	ldr	r0, [r4, #4]
   31f10:	add	r0, r0, r5, lsl #1
   31f14:	strh	r6, [r0]
   31f18:	ldrh	r0, [r4, #8]
   31f1c:	cmp	r0, r5
   31f20:	addls	r0, r5, #1
   31f24:	strhls	r0, [r4, #8]
   31f28:	ldr	r0, [r4]
   31f2c:	add	r1, r0, #2
   31f30:	str	r1, [r4]
   31f34:	strh	r7, [r0]
   31f38:	ldr	r0, [r4, #16]
   31f3c:	add	r0, r0, r7
   31f40:	pop	{r4, r5, r6, r7, fp, pc}

00031f44 <flatcc_builder_push_buffer_alignment@@Base>:
   31f44:	ldrh	r1, [r0, #128]	; 0x80
   31f48:	mov	r2, #4
   31f4c:	strh	r2, [r0, #128]	; 0x80
   31f50:	mov	r0, r1
   31f54:	bx	lr

00031f58 <flatcc_builder_pop_buffer_alignment@@Base>:
   31f58:	b	2f9d8 <flatcc_builder_create_buffer@@Base+0x1d0>

00031f5c <flatcc_builder_get_buffer_alignment@@Base>:
   31f5c:	ldrh	r0, [r0, #128]	; 0x80
   31f60:	bx	lr

00031f64 <flatcc_builder_set_vtable_clustering@@Base>:
   31f64:	clz	r1, r1
   31f68:	lsr	r1, r1, #5
   31f6c:	str	r1, [r0, #180]	; 0xb4
   31f70:	bx	lr

00031f74 <flatcc_builder_set_block_align@@Base>:
   31f74:	strh	r1, [r0, #132]	; 0x84
   31f78:	bx	lr

00031f7c <flatcc_builder_get_level@@Base>:
   31f7c:	ldr	r0, [r0, #156]	; 0x9c
   31f80:	bx	lr

00031f84 <flatcc_builder_set_max_level@@Base>:
   31f84:	str	r1, [r0, #176]	; 0xb0
   31f88:	ldr	r2, [r0, #160]	; 0xa0
   31f8c:	cmp	r2, r1
   31f90:	strlt	r1, [r0, #160]	; 0xa0
   31f94:	bx	lr

00031f98 <flatcc_builder_get_buffer_size@@Base>:
   31f98:	ldr	r1, [r0, #136]	; 0x88
   31f9c:	ldr	r0, [r0, #140]	; 0x8c
   31fa0:	sub	r0, r0, r1
   31fa4:	bx	lr

00031fa8 <flatcc_builder_get_buffer_start@@Base>:
   31fa8:	ldr	r0, [r0, #136]	; 0x88
   31fac:	bx	lr

00031fb0 <flatcc_builder_get_buffer_end@@Base>:
   31fb0:	ldr	r0, [r0, #140]	; 0x8c
   31fb4:	bx	lr

00031fb8 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31fb8:	str	r1, [r0, #172]	; 0xac
   31fbc:	bx	lr

00031fc0 <flatcc_builder_set_identifier@@Base>:
   31fc0:	movw	r2, #129	; 0x81
   31fc4:	movt	r2, #5
   31fc8:	cmp	r1, #0
   31fcc:	movne	r2, r1
   31fd0:	ldr	r1, [r2]
   31fd4:	str	r1, [r0, #168]	; 0xa8
   31fd8:	bx	lr

00031fdc <flatcc_builder_get_type@@Base>:
   31fdc:	ldr	r0, [r0, #32]
   31fe0:	cmp	r0, #0
   31fe4:	ldrhne	r0, [r0, #14]
   31fe8:	moveq	r0, #0
   31fec:	bx	lr

00031ff0 <flatcc_builder_get_type_at@@Base>:
   31ff0:	mov	r2, r0
   31ff4:	mov	r0, #0
   31ff8:	cmp	r1, #1
   31ffc:	ldrge	r3, [r2, #156]	; 0x9c
   32000:	cmpge	r3, r1
   32004:	bge	3200c <flatcc_builder_get_type_at@@Base+0x1c>
   32008:	bx	lr
   3200c:	sub	r0, r1, r3
   32010:	add	r0, r0, r0, lsl #3
   32014:	ldr	r1, [r2, #32]
   32018:	add	r0, r1, r0, lsl #2
   3201c:	ldrh	r0, [r0, #14]
   32020:	bx	lr

00032024 <flatcc_builder_get_direct_buffer@@Base>:
   32024:	ldr	r2, [r0, #184]	; 0xb8
   32028:	cmp	r2, #0
   3202c:	beq	32038 <flatcc_builder_get_direct_buffer@@Base+0x14>
   32030:	add	r0, r0, #188	; 0xbc
   32034:	b	3204c <flatcc_builder_get_direct_buffer@@Base+0x28>
   32038:	cmp	r1, #0
   3203c:	movne	r0, #0
   32040:	strne	r0, [r1]
   32044:	mov	r0, #0
   32048:	bx	lr
   3204c:	ldm	r0, {r2, r3}
   32050:	cmp	r2, r3
   32054:	beq	32068 <flatcc_builder_get_direct_buffer@@Base+0x44>
   32058:	mov	r0, #0
   3205c:	cmp	r1, #0
   32060:	strne	r0, [r1]
   32064:	bx	lr
   32068:	cmp	r1, #0
   3206c:	ldrne	r2, [r0, #24]
   32070:	strne	r2, [r1]
   32074:	ldr	r0, [r0, #8]
   32078:	bx	lr

0003207c <flatcc_builder_copy_buffer@@Base>:
   3207c:	push	{fp, lr}
   32080:	mov	fp, sp
   32084:	ldr	r3, [r0, #184]	; 0xb8
   32088:	cmp	r3, #0
   3208c:	beq	320c0 <flatcc_builder_copy_buffer@@Base+0x44>
   32090:	add	r0, r0, #188	; 0xbc
   32094:	bl	32798 <flatcc_emitter_copy_buffer@@Base>
   32098:	cmp	r0, #0
   3209c:	popne	{fp, pc}
   320a0:	movw	r0, #1255	; 0x4e7
   320a4:	movt	r0, #5
   320a8:	movw	r1, #659	; 0x293
   320ac:	movt	r1, #5
   320b0:	movw	r3, #4587	; 0x11eb
   320b4:	movt	r3, #5
   320b8:	movw	r2, #1926	; 0x786
   320bc:	bl	14a80 <__assert_fail@plt>
   320c0:	mov	r0, #0
   320c4:	pop	{fp, pc}

000320c8 <flatcc_builder_finalize_buffer@@Base>:
   320c8:	push	{r4, r5, r6, sl, fp, lr}
   320cc:	add	fp, sp, #16
   320d0:	mov	r6, r1
   320d4:	mov	r4, r0
   320d8:	bl	31f98 <flatcc_builder_get_buffer_size@@Base>
   320dc:	mov	r5, r0
   320e0:	cmp	r6, #0
   320e4:	strne	r5, [r6]
   320e8:	mov	r0, r5
   320ec:	bl	1496c <malloc@plt>
   320f0:	cmp	r0, #0
   320f4:	beq	32138 <flatcc_builder_finalize_buffer@@Base+0x70>
   320f8:	mov	r6, r0
   320fc:	mov	r0, r4
   32100:	mov	r1, r6
   32104:	mov	r2, r5
   32108:	bl	3207c <flatcc_builder_copy_buffer@@Base>
   3210c:	cmp	r0, #0
   32110:	movne	r0, r6
   32114:	popne	{r4, r5, r6, sl, fp, pc}
   32118:	movw	r0, #29885	; 0x74bd
   3211c:	movt	r0, #4
   32120:	movw	r1, #659	; 0x293
   32124:	movt	r1, #5
   32128:	movw	r3, #4656	; 0x1230
   3212c:	movt	r3, #5
   32130:	movw	r2, #1948	; 0x79c
   32134:	bl	14a80 <__assert_fail@plt>
   32138:	movw	r0, #29885	; 0x74bd
   3213c:	movt	r0, #4
   32140:	movw	r1, #659	; 0x293
   32144:	movt	r1, #5
   32148:	movw	r3, #4656	; 0x1230
   3214c:	movt	r3, #5
   32150:	movw	r2, #1944	; 0x798
   32154:	bl	14a80 <__assert_fail@plt>

00032158 <flatcc_builder_finalize_aligned_buffer@@Base>:
   32158:	push	{r4, r5, r6, r7, fp, lr}
   3215c:	add	fp, sp, #16
   32160:	mov	r4, r1
   32164:	mov	r5, r0
   32168:	bl	31f98 <flatcc_builder_get_buffer_size@@Base>
   3216c:	mov	r6, r0
   32170:	cmp	r4, #0
   32174:	strne	r6, [r4]
   32178:	mov	r0, r5
   3217c:	bl	31f5c <flatcc_builder_get_buffer_alignment@@Base>
   32180:	add	r1, r6, r0
   32184:	sub	r1, r1, #1
   32188:	rsb	r2, r0, #0
   3218c:	and	r7, r1, r2
   32190:	mov	r1, r7
   32194:	bl	321e0 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>
   32198:	cmp	r0, #0
   3219c:	beq	321cc <flatcc_builder_finalize_aligned_buffer@@Base+0x74>
   321a0:	mov	r6, r0
   321a4:	mov	r0, r5
   321a8:	mov	r1, r6
   321ac:	mov	r2, r7
   321b0:	bl	3207c <flatcc_builder_copy_buffer@@Base>
   321b4:	cmp	r0, #0
   321b8:	beq	321c4 <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
   321bc:	mov	r0, r6
   321c0:	pop	{r4, r5, r6, r7, fp, pc}
   321c4:	mov	r0, r6
   321c8:	bl	14900 <free@plt>
   321cc:	mov	r6, #0
   321d0:	cmp	r4, #0
   321d4:	strne	r6, [r4]
   321d8:	mov	r0, r6
   321dc:	pop	{r4, r5, r6, r7, fp, pc}
   321e0:	push	{fp, lr}
   321e4:	mov	fp, sp
   321e8:	sub	sp, sp, #8
   321ec:	mov	r2, r1
   321f0:	mov	r1, r0
   321f4:	mov	r0, #0
   321f8:	str	r0, [sp, #4]
   321fc:	cmp	r1, #4
   32200:	movls	r1, #4
   32204:	add	r0, sp, #4
   32208:	bl	149cc <posix_memalign@plt>
   3220c:	cmp	r0, #0
   32210:	ldrne	r0, [sp, #4]
   32214:	cmpne	r0, #0
   32218:	beq	32228 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   3221c:	bl	14900 <free@plt>
   32220:	mov	r0, #0
   32224:	str	r0, [sp, #4]
   32228:	ldr	r0, [sp, #4]
   3222c:	mov	sp, fp
   32230:	pop	{fp, pc}

00032234 <flatcc_builder_aligned_alloc@@Base>:
   32234:	b	321e0 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>

00032238 <flatcc_builder_aligned_free@@Base>:
   32238:	b	14900 <free@plt>

0003223c <flatcc_builder_get_emit_context@@Base>:
   3223c:	ldr	r0, [r0, #36]	; 0x24
   32240:	bx	lr
   32244:	ldr	r0, [r0, #140]	; 0x8c
   32248:	sub	r1, r1, #1
   3224c:	and	r0, r0, r1
   32250:	bx	lr
   32254:	push	{r4, r5, r6, sl, fp, lr}
   32258:	add	fp, sp, #16
   3225c:	sub	sp, sp, #8
   32260:	mov	r6, r2
   32264:	mov	r5, r0
   32268:	ldr	r2, [r0, #28]
   3226c:	ldr	r0, [r0, #40]	; 0x28
   32270:	ldr	r4, [r5, #48]	; 0x30
   32274:	mov	r3, #1
   32278:	str	r3, [sp]
   3227c:	add	r2, r2, r1
   32280:	add	r1, r5, #60	; 0x3c
   32284:	mov	r3, #1
   32288:	blx	r4
   3228c:	mov	r1, r0
   32290:	mvn	r0, #0
   32294:	cmp	r1, #0
   32298:	beq	322a4 <flatcc_builder_get_emit_context@@Base+0x68>
   3229c:	sub	sp, fp, #16
   322a0:	pop	{r4, r5, r6, sl, fp, pc}
   322a4:	mov	r0, r5
   322a8:	mov	r1, r6
   322ac:	bl	2fde8 <flatcc_builder_start_struct@@Base+0x4c>
   322b0:	mov	r0, #0
   322b4:	sub	sp, fp, #16
   322b8:	pop	{r4, r5, r6, sl, fp, pc}
   322bc:	push	{r4, r5, r6, sl, fp, lr}
   322c0:	add	fp, sp, #16
   322c4:	sub	sp, sp, #8
   322c8:	ldr	r2, [r0, #124]	; 0x7c
   322cc:	cmp	r2, #0
   322d0:	bne	32370 <flatcc_builder_get_emit_context@@Base+0x134>
   322d4:	mov	r4, r0
   322d8:	mov	r0, #0
   322dc:	str	r0, [sp]
   322e0:	mov	r6, #16
   322e4:	mov	r0, r4
   322e8:	mov	r1, #6
   322ec:	mov	r3, #16
   322f0:	bl	2f404 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   322f4:	mvn	r5, #0
   322f8:	cmp	r0, #0
   322fc:	beq	32364 <flatcc_builder_get_emit_context@@Base+0x128>
   32300:	add	r1, r4, #92	; 0x5c
   32304:	str	r6, [r4, #124]	; 0x7c
   32308:	ldr	r0, [r4, #40]	; 0x28
   3230c:	ldr	ip, [r4, #48]	; 0x30
   32310:	mov	r2, #5
   32314:	str	r2, [sp]
   32318:	mov	r6, #256	; 0x100
   3231c:	mov	r2, #256	; 0x100
   32320:	mov	r3, #1
   32324:	blx	ip
   32328:	cmp	r0, #0
   3232c:	bne	32364 <flatcc_builder_get_emit_context@@Base+0x128>
   32330:	ldr	r0, [r4, #96]	; 0x60
   32334:	mov	r1, r6
   32338:	lsl	r6, r6, #1
   3233c:	cmp	r0, r1, lsl #1
   32340:	bcs	32334 <flatcc_builder_get_emit_context@@Base+0xf8>
   32344:	lsr	r1, r1, #2
   32348:	mvn	r0, #0
   3234c:	mov	r2, #1
   32350:	add	r0, r0, #1
   32354:	cmp	r1, r2, lsl r0
   32358:	bhi	32350 <flatcc_builder_get_emit_context@@Base+0x114>
   3235c:	str	r0, [r4, #116]	; 0x74
   32360:	mov	r5, #0
   32364:	mov	r0, r5
   32368:	sub	sp, fp, #16
   3236c:	pop	{r4, r5, r6, sl, fp, pc}
   32370:	movw	r0, #5117	; 0x13fd
   32374:	movt	r0, #5
   32378:	movw	r1, #659	; 0x293
   3237c:	movt	r1, #5
   32380:	movw	r3, #5132	; 0x140c
   32384:	movt	r3, #5
   32388:	movw	r2, #342	; 0x156
   3238c:	bl	14a80 <__assert_fail@plt>

00032390 <flatcc_emitter_recycle_page@@Base>:
   32390:	ldr	ip, [r0]
   32394:	mvn	r2, #0
   32398:	cmp	ip, r1
   3239c:	ldrne	r3, [r0, #4]
   323a0:	cmpne	r3, r1
   323a4:	bne	323b0 <flatcc_emitter_recycle_page@@Base+0x20>
   323a8:	mov	r0, r2
   323ac:	bx	lr
   323b0:	ldr	r2, [r1, #2944]	; 0xb80
   323b4:	ldr	r3, [r1, #2948]	; 0xb84
   323b8:	str	r3, [r2, #2948]	; 0xb84
   323bc:	ldr	r2, [r1, #2944]	; 0xb80
   323c0:	ldr	r3, [r1, #2948]	; 0xb84
   323c4:	str	r2, [r3, #2944]	; 0xb80
   323c8:	ldr	r2, [ip, #2948]	; 0xb84
   323cc:	str	r2, [r1, #2948]	; 0xb84
   323d0:	ldr	r0, [r0]
   323d4:	str	r0, [r1, #2944]	; 0xb80
   323d8:	str	r1, [r2, #2944]	; 0xb80
   323dc:	ldr	r0, [r1, #2944]	; 0xb80
   323e0:	str	r1, [r0, #2948]	; 0xb84
   323e4:	mov	r2, #0
   323e8:	mov	r0, r2
   323ec:	bx	lr

000323f0 <flatcc_emitter_reset@@Base>:
   323f0:	push	{r4, sl, fp, lr}
   323f4:	add	fp, sp, #8
   323f8:	mov	r4, r0
   323fc:	ldr	r0, [r0]
   32400:	cmp	r0, #0
   32404:	beq	324a8 <flatcc_emitter_reset@@Base+0xb8>
   32408:	mov	r1, #1472	; 0x5c0
   3240c:	add	r2, r0, #1472	; 0x5c0
   32410:	stmib	r4, {r0, r2}
   32414:	str	r1, [r4, #12]
   32418:	str	r2, [r4, #16]
   3241c:	str	r1, [r4, #20]
   32420:	movw	r1, #64064	; 0xfa40
   32424:	movt	r1, #65535	; 0xffff
   32428:	str	r1, [r0, #2952]	; 0xb88
   3242c:	ldr	r0, [r4, #32]
   32430:	cmp	r0, #0
   32434:	ldreq	r0, [r4, #24]
   32438:	streq	r0, [r4, #32]
   3243c:	add	r2, r4, #24
   32440:	ldm	r2, {r0, r1, r2}
   32444:	mov	r3, #0
   32448:	str	r3, [r4, #24]
   3244c:	add	r2, r2, r2, lsl #1
   32450:	lsr	r2, r2, #2
   32454:	add	r0, r2, r0, lsr #2
   32458:	str	r0, [r4, #32]
   3245c:	cmp	r1, r0, lsl #1
   32460:	bls	324a8 <flatcc_emitter_reset@@Base+0xb8>
   32464:	ldr	r2, [r4]
   32468:	ldr	r1, [r4, #4]
   3246c:	ldr	r0, [r1, #2944]	; 0xb80
   32470:	cmp	r0, r2
   32474:	popeq	{r4, sl, fp, pc}
   32478:	ldr	r2, [r0, #2944]	; 0xb80
   3247c:	str	r2, [r1, #2944]	; 0xb80
   32480:	ldr	r1, [r0, #2944]	; 0xb80
   32484:	ldr	r2, [r4, #4]
   32488:	str	r2, [r1, #2948]	; 0xb84
   3248c:	bl	14900 <free@plt>
   32490:	ldr	r0, [r4, #28]
   32494:	ldr	r1, [r4, #32]
   32498:	sub	r0, r0, #2944	; 0xb80
   3249c:	str	r0, [r4, #28]
   324a0:	cmp	r0, r1, lsl #1
   324a4:	bhi	32464 <flatcc_emitter_reset@@Base+0x74>
   324a8:	pop	{r4, sl, fp, pc}

000324ac <flatcc_emitter_clear@@Base>:
   324ac:	push	{r4, r5, r6, sl, fp, lr}
   324b0:	add	fp, sp, #16
   324b4:	ldr	r5, [r0]
   324b8:	cmp	r5, #0
   324bc:	popeq	{r4, r5, r6, sl, fp, pc}
   324c0:	mov	r4, r0
   324c4:	ldr	r0, [r5, #2948]	; 0xb84
   324c8:	mov	r6, #0
   324cc:	str	r6, [r0, #2944]	; 0xb80
   324d0:	b	324e0 <flatcc_emitter_clear@@Base+0x34>
   324d4:	mov	r5, r0
   324d8:	ldr	r0, [r0, #2948]	; 0xb84
   324dc:	bl	14900 <free@plt>
   324e0:	ldr	r0, [r5, #2944]	; 0xb80
   324e4:	cmp	r0, #0
   324e8:	bne	324d4 <flatcc_emitter_clear@@Base+0x28>
   324ec:	mov	r0, r5
   324f0:	bl	14900 <free@plt>
   324f4:	vmov.i32	q8, #0	; 0x00000000
   324f8:	add	r0, r4, #16
   324fc:	vst1.32	{d16-d17}, [r0]
   32500:	mov	r0, #32
   32504:	vst1.32	{d16-d17}, [r4], r0
   32508:	str	r6, [r4]
   3250c:	pop	{r4, r5, r6, sl, fp, pc}

00032510 <flatcc_emitter@@Base>:
   32510:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32514:	add	fp, sp, #24
   32518:	mov	r4, r2
   3251c:	mov	r5, r1
   32520:	mov	r6, r0
   32524:	ldr	r1, [r0, #24]
   32528:	ldr	r0, [fp, #8]
   3252c:	add	r1, r1, r0
   32530:	str	r1, [r6, #24]
   32534:	mov	r1, r6
   32538:	cmn	r3, #1
   3253c:	ble	3257c <flatcc_emitter@@Base+0x6c>
   32540:	ldr	r2, [r1, #20]!
   32544:	cmp	r2, r0
   32548:	bcs	325c4 <flatcc_emitter@@Base+0xb4>
   3254c:	mov	r8, #0
   32550:	cmp	r4, #0
   32554:	beq	32614 <flatcc_emitter@@Base+0x104>
   32558:	ldm	r5, {r1, r2}
   3255c:	mov	r0, r6
   32560:	bl	326e0 <flatcc_emitter@@Base+0x1d0>
   32564:	cmp	r0, #0
   32568:	bne	325b8 <flatcc_emitter@@Base+0xa8>
   3256c:	subs	r4, r4, #1
   32570:	add	r5, r5, #8
   32574:	bne	32558 <flatcc_emitter@@Base+0x48>
   32578:	b	32614 <flatcc_emitter@@Base+0x104>
   3257c:	ldr	r2, [r1, #12]!
   32580:	cmp	r2, r0
   32584:	bcs	325d4 <flatcc_emitter@@Base+0xc4>
   32588:	add	r0, r5, r4, lsl #3
   3258c:	sub	r5, r0, #4
   32590:	rsb	r4, r4, #1
   32594:	cmp	r4, #1
   32598:	beq	3261c <flatcc_emitter@@Base+0x10c>
   3259c:	ldmda	r5, {r1, r2}
   325a0:	mov	r0, r6
   325a4:	bl	32628 <flatcc_emitter@@Base+0x118>
   325a8:	sub	r5, r5, #8
   325ac:	add	r4, r4, #1
   325b0:	cmp	r0, #0
   325b4:	beq	32594 <flatcc_emitter@@Base+0x84>
   325b8:	mvn	r8, #0
   325bc:	mov	r0, r8
   325c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   325c4:	ldr	r7, [r6, #16]
   325c8:	add	r3, r7, r0
   325cc:	str	r3, [r6, #16]
   325d0:	b	325e0 <flatcc_emitter@@Base+0xd0>
   325d4:	ldr	r3, [r6, #8]
   325d8:	sub	r7, r3, r0
   325dc:	str	r7, [r6, #8]
   325e0:	sub	r0, r2, r0
   325e4:	str	r0, [r1]
   325e8:	mov	r8, #0
   325ec:	cmp	r4, #0
   325f0:	beq	32614 <flatcc_emitter@@Base+0x104>
   325f4:	ldm	r5, {r1, r2}
   325f8:	mov	r0, r7
   325fc:	bl	1490c <memcpy@plt>
   32600:	ldr	r0, [r5, #4]
   32604:	add	r7, r7, r0
   32608:	add	r5, r5, #8
   3260c:	subs	r4, r4, #1
   32610:	bne	325f4 <flatcc_emitter@@Base+0xe4>
   32614:	mov	r0, r8
   32618:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3261c:	mov	r8, #0
   32620:	mov	r0, r8
   32624:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32628:	push	{r4, r5, r6, r7, fp, lr}
   3262c:	add	fp, sp, #16
   32630:	cmp	r2, #0
   32634:	moveq	r0, #0
   32638:	popeq	{r4, r5, r6, r7, fp, pc}
   3263c:	mov	r4, r2
   32640:	mov	r5, r0
   32644:	clz	r0, r2
   32648:	lsr	r7, r0, #5
   3264c:	add	r6, r1, r2
   32650:	b	3268c <flatcc_emitter@@Base+0x17c>
   32654:	sub	r0, r0, r7
   32658:	str	r0, [r5, #12]
   3265c:	ldr	r0, [r5, #8]
   32660:	sub	r0, r0, r7
   32664:	str	r0, [r5, #8]
   32668:	sub	r6, r6, r7
   3266c:	mov	r1, r6
   32670:	mov	r2, r7
   32674:	bl	1490c <memcpy@plt>
   32678:	subs	r4, r4, r7
   3267c:	clz	r0, r4
   32680:	lsr	r7, r0, #5
   32684:	moveq	r0, #0
   32688:	popeq	{r4, r5, r6, r7, fp, pc}
   3268c:	ldr	r0, [r5, #12]
   32690:	cmp	r4, r0
   32694:	bls	326c4 <flatcc_emitter@@Base+0x1b4>
   32698:	cmp	r0, #0
   3269c:	bne	326cc <flatcc_emitter@@Base+0x1bc>
   326a0:	mov	r0, r5
   326a4:	bl	32854 <flatcc_emitter_copy_buffer@@Base+0xbc>
   326a8:	cmp	r0, #0
   326ac:	mov	r1, r0
   326b0:	movwne	r1, #1
   326b4:	orr	r1, r1, r7
   326b8:	tst	r1, #1
   326bc:	beq	3268c <flatcc_emitter@@Base+0x17c>
   326c0:	b	326d4 <flatcc_emitter@@Base+0x1c4>
   326c4:	mov	r7, r4
   326c8:	b	32654 <flatcc_emitter@@Base+0x144>
   326cc:	mov	r7, r0
   326d0:	b	32654 <flatcc_emitter@@Base+0x144>
   326d4:	cmp	r0, #0
   326d8:	mvnne	r0, #0
   326dc:	pop	{r4, r5, r6, r7, fp, pc}
   326e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   326e4:	add	fp, sp, #24
   326e8:	cmp	r2, #0
   326ec:	moveq	r0, #0
   326f0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   326f4:	mov	r4, r2
   326f8:	mov	r8, r1
   326fc:	mov	r6, r0
   32700:	clz	r0, r2
   32704:	lsr	r5, r0, #5
   32708:	b	3274c <flatcc_emitter@@Base+0x23c>
   3270c:	ldr	r0, [r6, #16]
   32710:	mov	r1, r8
   32714:	mov	r2, r7
   32718:	bl	1490c <memcpy@plt>
   3271c:	ldr	r0, [r6, #16]
   32720:	ldr	r1, [r6, #20]
   32724:	add	r0, r0, r7
   32728:	sub	r1, r1, r7
   3272c:	str	r0, [r6, #16]
   32730:	str	r1, [r6, #20]
   32734:	add	r8, r8, r7
   32738:	subs	r4, r4, r7
   3273c:	clz	r0, r4
   32740:	lsr	r5, r0, #5
   32744:	moveq	r0, #0
   32748:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3274c:	ldr	r7, [r6, #20]
   32750:	cmp	r4, r7
   32754:	bls	32784 <flatcc_emitter@@Base+0x274>
   32758:	cmp	r7, #0
   3275c:	bne	3270c <flatcc_emitter@@Base+0x1fc>
   32760:	mov	r0, r6
   32764:	bl	32940 <flatcc_emitter_copy_buffer@@Base+0x1a8>
   32768:	cmp	r0, #0
   3276c:	mov	r1, r0
   32770:	movwne	r1, #1
   32774:	orr	r1, r1, r5
   32778:	tst	r1, #1
   3277c:	beq	3274c <flatcc_emitter@@Base+0x23c>
   32780:	b	3278c <flatcc_emitter@@Base+0x27c>
   32784:	mov	r7, r4
   32788:	b	3270c <flatcc_emitter@@Base+0x1fc>
   3278c:	cmp	r0, #0
   32790:	mvnne	r0, #0
   32794:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00032798 <flatcc_emitter_copy_buffer@@Base>:
   32798:	push	{r4, r5, r6, sl, fp, lr}
   3279c:	add	fp, sp, #16
   327a0:	mov	r3, r2
   327a4:	ldr	r2, [r0, #24]
   327a8:	mov	r5, #0
   327ac:	cmp	r2, r3
   327b0:	bhi	32838 <flatcc_emitter_copy_buffer@@Base+0xa0>
   327b4:	mov	r4, r0
   327b8:	ldr	r0, [r0]
   327bc:	cmp	r0, #0
   327c0:	beq	32838 <flatcc_emitter_copy_buffer@@Base+0xa0>
   327c4:	mov	r6, r1
   327c8:	ldr	r1, [r4, #4]
   327cc:	cmp	r0, r1
   327d0:	beq	32840 <flatcc_emitter_copy_buffer@@Base+0xa8>
   327d4:	ldr	r1, [r4, #8]
   327d8:	ldr	r0, [r4, #12]
   327dc:	rsb	r5, r0, #2944	; 0xb80
   327e0:	mov	r0, r6
   327e4:	mov	r2, r5
   327e8:	bl	1490c <memcpy@plt>
   327ec:	add	r5, r6, r5
   327f0:	ldm	r4, {r0, r1}
   327f4:	ldr	r6, [r0, #2944]	; 0xb80
   327f8:	cmp	r6, r1
   327fc:	beq	32824 <flatcc_emitter_copy_buffer@@Base+0x8c>
   32800:	mov	r0, r5
   32804:	mov	r1, r6
   32808:	mov	r2, #2944	; 0xb80
   3280c:	bl	1490c <memcpy@plt>
   32810:	add	r5, r5, #2944	; 0xb80
   32814:	ldr	r6, [r6, #2944]	; 0xb80
   32818:	ldr	r0, [r4, #4]
   3281c:	cmp	r6, r0
   32820:	bne	32800 <flatcc_emitter_copy_buffer@@Base+0x68>
   32824:	ldr	r0, [r4, #20]
   32828:	rsb	r2, r0, #2944	; 0xb80
   3282c:	mov	r0, r5
   32830:	mov	r1, r6
   32834:	bl	1490c <memcpy@plt>
   32838:	mov	r0, r5
   3283c:	pop	{r4, r5, r6, sl, fp, pc}
   32840:	ldr	r1, [r4, #8]
   32844:	mov	r0, r6
   32848:	bl	1490c <memcpy@plt>
   3284c:	mov	r0, r6
   32850:	pop	{r4, r5, r6, sl, fp, pc}
   32854:	push	{r4, r5, fp, lr}
   32858:	add	fp, sp, #8
   3285c:	mov	r4, r0
   32860:	ldr	r5, [r0]
   32864:	cmp	r5, #0
   32868:	beq	32890 <flatcc_emitter_copy_buffer@@Base+0xf8>
   3286c:	ldr	r0, [r5, #2948]	; 0xb84
   32870:	ldr	r1, [r4, #4]
   32874:	cmp	r0, r1
   32878:	beq	32890 <flatcc_emitter_copy_buffer@@Base+0xf8>
   3287c:	ldr	r1, [r5, #2952]	; 0xb88
   32880:	sub	r1, r1, #2944	; 0xb80
   32884:	str	r1, [r0, #2952]	; 0xb88
   32888:	ldr	r0, [r5, #2948]	; 0xb84
   3288c:	b	328d0 <flatcc_emitter_copy_buffer@@Base+0x138>
   32890:	movw	r0, #2956	; 0xb8c
   32894:	bl	1496c <malloc@plt>
   32898:	cmp	r0, #0
   3289c:	mvneq	r0, #0
   328a0:	popeq	{r4, r5, fp, pc}
   328a4:	ldr	r1, [r4, #28]
   328a8:	add	r1, r1, #2944	; 0xb80
   328ac:	str	r1, [r4, #28]
   328b0:	cmp	r5, #0
   328b4:	beq	32900 <flatcc_emitter_copy_buffer@@Base+0x168>
   328b8:	ldm	r4, {r1, r2}
   328bc:	str	r1, [r0, #2944]	; 0xb80
   328c0:	str	r2, [r0, #2948]	; 0xb84
   328c4:	str	r0, [r1, #2948]	; 0xb84
   328c8:	ldr	r1, [r4, #4]
   328cc:	str	r0, [r1, #2944]	; 0xb80
   328d0:	str	r0, [r4]
   328d4:	mov	r0, #2944	; 0xb80
   328d8:	ldr	r1, [r4]
   328dc:	add	r2, r1, #2944	; 0xb80
   328e0:	str	r2, [r4, #8]
   328e4:	str	r0, [r4, #12]
   328e8:	ldr	r0, [r1, #2944]	; 0xb80
   328ec:	ldr	r0, [r0, #2952]	; 0xb88
   328f0:	sub	r0, r0, #2944	; 0xb80
   328f4:	str	r0, [r1, #2952]	; 0xb88
   328f8:	mov	r0, #0
   328fc:	pop	{r4, r5, fp, pc}
   32900:	str	r0, [r4, #4]
   32904:	str	r0, [r4]
   32908:	mov	r1, #1472	; 0x5c0
   3290c:	str	r1, [r4, #12]
   32910:	str	r1, [r4, #20]
   32914:	ldr	r1, [r4]
   32918:	add	r1, r1, #1472	; 0x5c0
   3291c:	str	r1, [r4, #8]
   32920:	str	r1, [r4, #16]
   32924:	movw	r1, #64064	; 0xfa40
   32928:	movt	r1, #65535	; 0xffff
   3292c:	str	r0, [r0, #2944]	; 0xb80
   32930:	str	r0, [r0, #2948]	; 0xb84
   32934:	str	r1, [r0, #2952]	; 0xb88
   32938:	mov	r0, #0
   3293c:	pop	{r4, r5, fp, pc}
   32940:	push	{r4, r5, fp, lr}
   32944:	add	fp, sp, #8
   32948:	mov	r4, r0
   3294c:	ldr	r5, [r0, #4]
   32950:	cmp	r5, #0
   32954:	beq	32968 <flatcc_emitter_copy_buffer@@Base+0x1d0>
   32958:	ldr	r0, [r5, #2944]	; 0xb80
   3295c:	ldr	r1, [r4]
   32960:	cmp	r0, r1
   32964:	bne	329a4 <flatcc_emitter_copy_buffer@@Base+0x20c>
   32968:	movw	r0, #2956	; 0xb8c
   3296c:	bl	1496c <malloc@plt>
   32970:	cmp	r0, #0
   32974:	mvneq	r0, #0
   32978:	popeq	{r4, r5, fp, pc}
   3297c:	ldr	r1, [r4, #28]
   32980:	add	r1, r1, #2944	; 0xb80
   32984:	str	r1, [r4, #28]
   32988:	cmp	r5, #0
   3298c:	beq	329d0 <flatcc_emitter_copy_buffer@@Base+0x238>
   32990:	ldr	r1, [r4]
   32994:	str	r1, [r0, #2944]	; 0xb80
   32998:	str	r5, [r0, #2948]	; 0xb84
   3299c:	str	r0, [r1, #2948]	; 0xb84
   329a0:	str	r0, [r5, #2944]	; 0xb80
   329a4:	str	r0, [r4, #4]
   329a8:	mov	r0, #2944	; 0xb80
   329ac:	ldr	r1, [r4, #4]
   329b0:	str	r1, [r4, #16]
   329b4:	str	r0, [r4, #20]
   329b8:	ldr	r0, [r1, #2948]	; 0xb84
   329bc:	ldr	r0, [r0, #2952]	; 0xb88
   329c0:	add	r0, r0, #2944	; 0xb80
   329c4:	str	r0, [r1, #2952]	; 0xb88
   329c8:	mov	r0, #0
   329cc:	pop	{r4, r5, fp, pc}
   329d0:	str	r0, [r4, #4]
   329d4:	str	r0, [r4]
   329d8:	mov	r1, #1472	; 0x5c0
   329dc:	str	r1, [r4, #12]
   329e0:	str	r1, [r4, #20]
   329e4:	ldr	r1, [r4]
   329e8:	add	r1, r1, #1472	; 0x5c0
   329ec:	str	r1, [r4, #8]
   329f0:	str	r1, [r4, #16]
   329f4:	movw	r1, #64064	; 0xfa40
   329f8:	movt	r1, #65535	; 0xffff
   329fc:	str	r0, [r0, #2944]	; 0xb80
   32a00:	str	r0, [r0, #2948]	; 0xb84
   32a04:	str	r1, [r0, #2952]	; 0xb88
   32a08:	mov	r0, #0
   32a0c:	pop	{r4, r5, fp, pc}

00032a10 <cmetrohash64_1@@Base>:
   32a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32a14:	add	fp, sp, #28
   32a18:	sub	sp, sp, #52	; 0x34
   32a1c:	mov	r4, r0
   32a20:	ldr	r0, [fp, #8]
   32a24:	movw	r5, #37345	; 0x91e1
   32a28:	movt	r5, #51258	; 0xc83a
   32a2c:	mov	r1, r2
   32a30:	mov	r7, r3
   32a34:	umlal	r1, r7, r0, r5
   32a38:	movw	r0, #23867	; 0x5d3b
   32a3c:	movt	r0, #24802	; 0x60e2
   32a40:	movw	r6, #24283	; 0x5edb
   32a44:	movt	r6, #44806	; 0xaf06
   32a48:	adds	r9, r1, r6
   32a4c:	adc	r6, r7, r0
   32a50:	add	sl, r4, r2
   32a54:	movw	r7, #49211	; 0xc03b
   32a58:	movt	r7, #31710	; 0x7bde
   32a5c:	movw	r8, #56283	; 0xdbdb
   32a60:	movt	r8, #34376	; 0x8648
   32a64:	subs	r0, r2, #32
   32a68:	sbcs	r0, r3, #0
   32a6c:	bcc	32d30 <cmetrohash64_1@@Base+0x320>
   32a70:	str	sl, [sp, #12]
   32a74:	sub	r0, sl, #32
   32a78:	str	r0, [sp, #24]
   32a7c:	mov	r5, r6
   32a80:	mov	r3, r9
   32a84:	mov	r7, r6
   32a88:	mov	r6, r9
   32a8c:	str	r5, [fp, #-36]	; 0xffffffdc
   32a90:	str	r9, [fp, #-32]	; 0xffffffe0
   32a94:	mov	r8, r5
   32a98:	str	r9, [sp, #20]
   32a9c:	str	r5, [sp, #8]
   32aa0:	str	r3, [sp, #40]	; 0x28
   32aa4:	str	r7, [sp, #36]	; 0x24
   32aa8:	mov	r0, r4
   32aac:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   32ab0:	movw	r2, #37345	; 0x91e1
   32ab4:	movt	r2, #51258	; 0xc83a
   32ab8:	mov	r3, r2
   32abc:	umull	r0, r2, r0, r2
   32ac0:	mla	r1, r1, r3, r2
   32ac4:	adds	r0, r0, r9
   32ac8:	adc	r1, r1, r5
   32acc:	mov	r2, #29
   32ad0:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32ad4:	mov	r5, r6
   32ad8:	adds	r6, r0, r6
   32adc:	ldr	r7, [fp, #-36]	; 0xffffffdc
   32ae0:	adc	r0, r1, r7
   32ae4:	str	r0, [sp, #32]
   32ae8:	add	r0, r4, #8
   32aec:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   32af0:	movw	r2, #56283	; 0xdbdb
   32af4:	movt	r2, #34376	; 0x8648
   32af8:	mov	r3, r2
   32afc:	umull	r0, r2, r0, r2
   32b00:	mla	r1, r1, r3, r2
   32b04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32b08:	adds	r0, r0, r2
   32b0c:	adc	r1, r1, r8
   32b10:	mov	r2, #29
   32b14:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32b18:	str	r0, [fp, #-32]	; 0xffffffe0
   32b1c:	mov	sl, r1
   32b20:	add	r0, r4, #16
   32b24:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   32b28:	movw	r2, #49211	; 0xc03b
   32b2c:	movt	r2, #31710	; 0x7bde
   32b30:	mov	r3, r2
   32b34:	umull	r0, r2, r0, r2
   32b38:	mla	r1, r1, r3, r2
   32b3c:	adds	r0, r0, r5
   32b40:	adc	r1, r1, r7
   32b44:	mov	r2, #29
   32b48:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32b4c:	mov	r9, r6
   32b50:	adds	r0, r0, r6
   32b54:	str	r0, [sp, #28]
   32b58:	ldr	r0, [sp, #32]
   32b5c:	mov	r5, r0
   32b60:	adc	r0, r1, r0
   32b64:	str	r0, [fp, #-36]	; 0xffffffdc
   32b68:	ldr	r8, [sp, #40]	; 0x28
   32b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b70:	adds	r7, r0, r8
   32b74:	ldr	r6, [sp, #36]	; 0x24
   32b78:	adc	sl, sl, r6
   32b7c:	add	r0, r4, #24
   32b80:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   32b84:	movw	r2, #28837	; 0x70a5
   32b88:	movt	r2, #12120	; 0x2f58
   32b8c:	mov	r3, r2
   32b90:	umull	r0, r2, r0, r2
   32b94:	mla	r1, r1, r3, r2
   32b98:	adds	r0, r0, r8
   32b9c:	adc	r1, r1, r6
   32ba0:	mov	r2, #29
   32ba4:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32ba8:	str	r7, [fp, #-32]	; 0xffffffe0
   32bac:	adds	r3, r0, r7
   32bb0:	mov	r8, sl
   32bb4:	adc	r7, r1, sl
   32bb8:	ldr	r6, [sp, #28]
   32bbc:	add	r4, r4, #32
   32bc0:	ldr	r0, [sp, #24]
   32bc4:	cmp	r4, r0
   32bc8:	bls	32aa0 <cmetrohash64_1@@Base+0x90>
   32bcc:	str	r9, [sp, #16]
   32bd0:	adds	r0, r3, r9
   32bd4:	mov	sl, r5
   32bd8:	adc	r1, r7, r5
   32bdc:	movw	r2, #37345	; 0x91e1
   32be0:	movt	r2, #51258	; 0xc83a
   32be4:	mov	r5, r2
   32be8:	umull	r0, r2, r0, r2
   32bec:	mla	r1, r1, r5, r2
   32bf0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32bf4:	adds	r0, r0, r2
   32bf8:	mov	r9, r2
   32bfc:	adc	r1, r1, r8
   32c00:	mov	r5, r8
   32c04:	str	r8, [sp, #4]
   32c08:	mov	r2, #33	; 0x21
   32c0c:	str	r3, [sp, #40]	; 0x28
   32c10:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32c14:	movw	r2, #56283	; 0xdbdb
   32c18:	movt	r2, #34376	; 0x8648
   32c1c:	mov	r3, r2
   32c20:	umull	r0, r2, r0, r2
   32c24:	mla	r1, r1, r3, r2
   32c28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32c2c:	eor	r2, r1, r2
   32c30:	eor	r8, r0, r6
   32c34:	adds	r0, r8, r9
   32c38:	adc	r1, r2, r5
   32c3c:	mov	r9, r2
   32c40:	umull	r0, r2, r0, r3
   32c44:	mla	r1, r1, r3, r2
   32c48:	ldr	r6, [sp, #16]
   32c4c:	adds	r0, r0, r6
   32c50:	adc	r1, r1, sl
   32c54:	mov	r2, #33	; 0x21
   32c58:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32c5c:	movw	r5, #37345	; 0x91e1
   32c60:	movt	r5, #51258	; 0xc83a
   32c64:	umull	r0, r2, r0, r5
   32c68:	mla	r1, r1, r5, r2
   32c6c:	eor	r7, r1, r7
   32c70:	adds	r1, r8, r6
   32c74:	adc	r2, r9, sl
   32c78:	umull	r1, r3, r1, r5
   32c7c:	mla	r2, r2, r5, r3
   32c80:	ldr	r3, [sp, #40]	; 0x28
   32c84:	eor	r6, r0, r3
   32c88:	adds	r0, r1, r6
   32c8c:	adc	r1, r2, r7
   32c90:	mov	r2, #33	; 0x21
   32c94:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32c98:	str	r0, [fp, #-36]	; 0xffffffdc
   32c9c:	str	r1, [sp, #40]	; 0x28
   32ca0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   32ca4:	adds	r0, r6, r5
   32ca8:	ldr	r6, [sp, #4]
   32cac:	adc	r1, r7, r6
   32cb0:	movw	r7, #56283	; 0xdbdb
   32cb4:	movt	r7, #34376	; 0x8648
   32cb8:	umull	r0, r2, r0, r7
   32cbc:	mla	r1, r1, r7, r2
   32cc0:	adds	r0, r0, r8
   32cc4:	adc	r1, r1, r9
   32cc8:	mov	r2, #33	; 0x21
   32ccc:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32cd0:	movw	ip, #37345	; 0x91e1
   32cd4:	movt	ip, #51258	; 0xc83a
   32cd8:	umull	lr, r2, r0, ip
   32cdc:	mla	r1, r1, ip, r2
   32ce0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32ce4:	umull	r2, r3, r2, r7
   32ce8:	mov	r8, r7
   32cec:	ldr	r0, [sp, #40]	; 0x28
   32cf0:	mla	r3, r0, r7, r3
   32cf4:	eor	r6, r6, sl
   32cf8:	eor	r3, r6, r3
   32cfc:	eor	r1, r3, r1
   32d00:	ldr	r3, [sp, #16]
   32d04:	eor	r3, r5, r3
   32d08:	eor	r2, r3, r2
   32d0c:	eor	r0, r2, lr
   32d10:	ldr	r9, [sp, #20]
   32d14:	adds	r9, r0, r9
   32d18:	ldr	r6, [sp, #8]
   32d1c:	adc	r6, r1, r6
   32d20:	mov	r5, ip
   32d24:	ldr	sl, [sp, #12]
   32d28:	movw	r7, #49211	; 0xc03b
   32d2c:	movt	r7, #31710	; 0x7bde
   32d30:	sub	r0, sl, r4
   32d34:	cmp	r0, #16
   32d38:	blt	32e50 <cmetrohash64_1@@Base+0x440>
   32d3c:	mov	r0, r4
   32d40:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   32d44:	umull	r0, r2, r0, r5
   32d48:	mla	r1, r1, r5, r2
   32d4c:	adds	r0, r0, r9
   32d50:	adc	r1, r1, r6
   32d54:	mov	r2, #33	; 0x21
   32d58:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32d5c:	str	r4, [fp, #-32]	; 0xffffffe0
   32d60:	str	r0, [fp, #-36]	; 0xffffffdc
   32d64:	str	r1, [sp, #40]	; 0x28
   32d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32d6c:	add	r0, r0, #8
   32d70:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   32d74:	umull	r0, r2, r0, r8
   32d78:	mla	r1, r1, r8, r2
   32d7c:	adds	r0, r0, r9
   32d80:	adc	r1, r1, r6
   32d84:	mov	r2, #33	; 0x21
   32d88:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32d8c:	str	r9, [sp, #20]
   32d90:	mov	r5, r0
   32d94:	str	r1, [sp, #36]	; 0x24
   32d98:	umull	r4, r0, r0, r7
   32d9c:	str	r4, [sp, #32]
   32da0:	mla	r9, r1, r7, r0
   32da4:	movw	r1, #18043	; 0x467b
   32da8:	movt	r1, #12846	; 0x322e
   32dac:	ldr	r7, [fp, #-36]	; 0xffffffdc
   32db0:	umull	r0, r2, r7, r1
   32db4:	movw	r3, #42186	; 0xa4ca
   32db8:	movt	r3, #26887	; 0x6907
   32dbc:	mla	r2, r7, r3, r2
   32dc0:	ldr	r7, [sp, #40]	; 0x28
   32dc4:	mla	r1, r7, r1, r2
   32dc8:	mov	r2, #35	; 0x23
   32dcc:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32dd0:	adds	r0, r0, r4
   32dd4:	adc	r1, r1, r9
   32dd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32ddc:	umull	r2, r3, r2, r8
   32de0:	mla	r3, r7, r8, r3
   32de4:	mov	r7, sl
   32de8:	eor	sl, r1, r3
   32dec:	eor	r4, r0, r2
   32df0:	movw	r1, #46599	; 0xb607
   32df4:	movt	r1, #13299	; 0x33f3
   32df8:	umull	r0, r2, r5, r1
   32dfc:	movw	r3, #45150	; 0xb05e
   32e00:	movt	r3, #5864	; 0x16e8
   32e04:	mla	r2, r5, r3, r2
   32e08:	ldr	r5, [sp, #20]
   32e0c:	ldr	r3, [sp, #36]	; 0x24
   32e10:	mla	r1, r3, r1, r2
   32e14:	mov	r2, #35	; 0x23
   32e18:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32e1c:	adds	r0, r4, r0
   32e20:	ldr	r4, [fp, #-32]	; 0xffffffe0
   32e24:	adc	r1, sl, r1
   32e28:	mov	sl, r7
   32e2c:	eor	r1, r1, r9
   32e30:	ldr	r2, [sp, #32]
   32e34:	eor	r0, r0, r2
   32e38:	adds	r5, r0, r5
   32e3c:	adc	r6, r1, r6
   32e40:	add	r4, r4, #16
   32e44:	movw	r7, #28837	; 0x70a5
   32e48:	movt	r7, #12120	; 0x2f58
   32e4c:	b	32e5c <cmetrohash64_1@@Base+0x44c>
   32e50:	movw	r7, #28837	; 0x70a5
   32e54:	movt	r7, #12120	; 0x2f58
   32e58:	mov	r5, r9
   32e5c:	sub	r0, sl, r4
   32e60:	cmp	r0, #8
   32e64:	blt	32ea4 <cmetrohash64_1@@Base+0x494>
   32e68:	mov	r0, r4
   32e6c:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   32e70:	umull	r0, r2, r0, r7
   32e74:	mla	r1, r1, r7, r2
   32e78:	adds	r5, r0, r5
   32e7c:	adc	r6, r1, r6
   32e80:	mov	r0, r5
   32e84:	mov	r1, r6
   32e88:	mov	r2, #33	; 0x21
   32e8c:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32e90:	umull	r0, r2, r0, r8
   32e94:	mla	r1, r1, r8, r2
   32e98:	eor	r6, r6, r1
   32e9c:	eor	r5, r5, r0
   32ea0:	add	r4, r4, #8
   32ea4:	sub	r0, sl, r4
   32ea8:	cmp	r0, #4
   32eac:	blt	32eec <cmetrohash64_1@@Base+0x4dc>
   32eb0:	mov	r0, r4
   32eb4:	bl	3303c <cmetrohash64_1@@Base+0x62c>
   32eb8:	umull	r0, r2, r0, r7
   32ebc:	mla	r1, r1, r7, r2
   32ec0:	adds	r5, r0, r5
   32ec4:	adc	r6, r1, r6
   32ec8:	mov	r0, r5
   32ecc:	mov	r1, r6
   32ed0:	mov	r2, #15
   32ed4:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32ed8:	umull	r0, r2, r0, r8
   32edc:	mla	r1, r1, r8, r2
   32ee0:	eor	r6, r6, r1
   32ee4:	eor	r5, r5, r0
   32ee8:	add	r4, r4, #4
   32eec:	sub	r0, sl, r4
   32ef0:	cmp	r0, #2
   32ef4:	blt	32f34 <cmetrohash64_1@@Base+0x524>
   32ef8:	mov	r0, r4
   32efc:	bl	33048 <cmetrohash64_1@@Base+0x638>
   32f00:	umull	r0, r2, r0, r7
   32f04:	mla	r1, r1, r7, r2
   32f08:	adds	r5, r0, r5
   32f0c:	adc	r6, r1, r6
   32f10:	mov	r0, r5
   32f14:	mov	r1, r6
   32f18:	mov	r2, #13
   32f1c:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32f20:	umull	r0, r2, r0, r8
   32f24:	mla	r1, r1, r8, r2
   32f28:	eor	r6, r6, r1
   32f2c:	eor	r5, r5, r0
   32f30:	add	r4, r4, #2
   32f34:	ldr	r9, [fp, #12]
   32f38:	sub	r0, sl, r4
   32f3c:	cmp	r0, #1
   32f40:	blt	32f7c <cmetrohash64_1@@Base+0x56c>
   32f44:	mov	r0, r4
   32f48:	bl	3305c <cmetrohash64_1@@Base+0x64c>
   32f4c:	umull	r0, r2, r0, r7
   32f50:	mla	r1, r1, r7, r2
   32f54:	adds	r4, r0, r5
   32f58:	adc	r5, r1, r6
   32f5c:	mov	r0, r4
   32f60:	mov	r1, r5
   32f64:	mov	r2, #25
   32f68:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32f6c:	umull	r0, r2, r0, r8
   32f70:	mla	r1, r1, r8, r2
   32f74:	eor	r6, r5, r1
   32f78:	eor	r5, r4, r0
   32f7c:	mov	r0, r5
   32f80:	mov	r1, r6
   32f84:	mov	r2, #33	; 0x21
   32f88:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32f8c:	eor	r1, r1, r6
   32f90:	eor	r0, r0, r5
   32f94:	movw	r2, #37345	; 0x91e1
   32f98:	movt	r2, #51258	; 0xc83a
   32f9c:	umull	r4, r0, r0, r2
   32fa0:	mla	r5, r1, r2, r0
   32fa4:	mov	r0, r4
   32fa8:	mov	r1, r5
   32fac:	mov	r2, #33	; 0x21
   32fb0:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   32fb4:	eor	r1, r5, r1
   32fb8:	str	r1, [r9, #4]
   32fbc:	eor	r0, r4, r0
   32fc0:	str	r0, [r9]
   32fc4:	sub	sp, fp, #28
   32fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32fcc:	ldr	r2, [r0]
   32fd0:	ldr	r1, [r0, #4]
   32fd4:	mov	r0, r2
   32fd8:	bx	lr
   32fdc:	push	{r4, r5, fp, lr}
   32fe0:	add	fp, sp, #8
   32fe4:	lsr	ip, r0, r2
   32fe8:	rsb	r3, r2, #32
   32fec:	orr	ip, ip, r1, lsl r3
   32ff0:	sub	lr, r2, #32
   32ff4:	cmp	lr, #0
   32ff8:	lsrge	ip, r1, lr
   32ffc:	rsb	r4, r2, #64	; 0x40
   33000:	lsl	r5, r0, r4
   33004:	cmp	r3, #0
   33008:	movwge	r5, #0
   3300c:	orr	ip, r5, ip
   33010:	rsb	r5, r4, #32
   33014:	lsr	r5, r0, r5
   33018:	orr	r4, r5, r1, lsl r4
   3301c:	cmp	r3, #0
   33020:	lslge	r4, r0, r3
   33024:	lsr	r0, r1, r2
   33028:	cmp	lr, #0
   3302c:	movwge	r0, #0
   33030:	orr	r1, r4, r0
   33034:	mov	r0, ip
   33038:	pop	{r4, r5, fp, pc}
   3303c:	ldr	r0, [r0]
   33040:	mov	r1, #0
   33044:	bx	lr
   33048:	ldrb	r1, [r0]
   3304c:	ldrb	r0, [r0, #1]
   33050:	orr	r0, r1, r0, lsl #8
   33054:	mov	r1, #0
   33058:	bx	lr
   3305c:	ldrb	r0, [r0]
   33060:	mov	r1, #0
   33064:	bx	lr

00033068 <cmetrohash64_2@@Base>:
   33068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3306c:	add	fp, sp, #28
   33070:	sub	sp, sp, #44	; 0x2c
   33074:	mov	r4, r0
   33078:	ldr	r0, [fp, #8]
   3307c:	movw	r6, #6389	; 0x18f5
   33080:	movt	r6, #54992	; 0xd6d0
   33084:	mov	r1, r2
   33088:	mov	r7, r3
   3308c:	umlal	r1, r7, r0, r6
   33090:	movw	r0, #13310	; 0x33fe
   33094:	movt	r0, #21180	; 0x52bc
   33098:	movw	r6, #52149	; 0xcbb5
   3309c:	movt	r6, #56292	; 0xdbe4
   330a0:	adds	r5, r1, r6
   330a4:	adc	sl, r7, r0
   330a8:	add	r6, r4, r2
   330ac:	movw	r8, #23337	; 0x5b29
   330b0:	movt	r8, #12476	; 0x30bc
   330b4:	movw	r7, #12225	; 0x2fc1
   330b8:	movt	r7, #25241	; 0x6299
   330bc:	movw	r1, #827	; 0x33b
   330c0:	movt	r1, #41642	; 0xa2aa
   330c4:	subs	r0, r2, #32
   330c8:	sbcs	r0, r3, #0
   330cc:	str	r6, [sp, #12]
   330d0:	bcc	33390 <cmetrohash64_2@@Base+0x328>
   330d4:	sub	r0, r6, #32
   330d8:	str	r0, [sp, #24]
   330dc:	mov	r2, r5
   330e0:	mov	r3, sl
   330e4:	mov	r0, sl
   330e8:	mov	r6, r5
   330ec:	mov	r8, sl
   330f0:	mov	sl, r5
   330f4:	mov	r7, r0
   330f8:	str	r5, [sp, #16]
   330fc:	str	r5, [sp, #36]	; 0x24
   33100:	str	r0, [sp, #20]
   33104:	str	r0, [fp, #-32]	; 0xffffffe0
   33108:	str	r3, [sp, #32]
   3310c:	mov	r0, r4
   33110:	mov	r9, r2
   33114:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   33118:	movw	r2, #6389	; 0x18f5
   3311c:	movt	r2, #54992	; 0xd6d0
   33120:	mov	r3, r2
   33124:	umull	r0, r2, r0, r2
   33128:	mla	r1, r1, r3, r2
   3312c:	ldr	r2, [sp, #36]	; 0x24
   33130:	adds	r0, r0, r2
   33134:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33138:	adc	r1, r1, r2
   3313c:	mov	r2, #29
   33140:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33144:	mov	r5, r6
   33148:	adds	r6, r0, r6
   3314c:	adc	r0, r1, r8
   33150:	str	r0, [fp, #-32]	; 0xffffffe0
   33154:	add	r0, r4, #8
   33158:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   3315c:	movw	r2, #827	; 0x33b
   33160:	movt	r2, #41642	; 0xa2aa
   33164:	mov	r3, r2
   33168:	umull	r0, r2, r0, r2
   3316c:	mla	r1, r1, r3, r2
   33170:	adds	r0, r0, sl
   33174:	adc	r1, r1, r7
   33178:	mov	r2, #29
   3317c:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33180:	mov	r7, r0
   33184:	str	r1, [sp, #28]
   33188:	add	r0, r4, #16
   3318c:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   33190:	movw	r2, #12225	; 0x2fc1
   33194:	movt	r2, #25241	; 0x6299
   33198:	mov	r3, r2
   3319c:	umull	r0, r2, r0, r2
   331a0:	mla	r1, r1, r3, r2
   331a4:	adds	r0, r0, r5
   331a8:	adc	r1, r1, r8
   331ac:	mov	r2, #29
   331b0:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   331b4:	str	r6, [sp, #36]	; 0x24
   331b8:	adds	r6, r0, r6
   331bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   331c0:	adc	r8, r1, r0
   331c4:	adds	sl, r7, r9
   331c8:	ldr	r7, [sp, #32]
   331cc:	ldr	r0, [sp, #28]
   331d0:	adc	r5, r0, r7
   331d4:	add	r0, r4, #24
   331d8:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   331dc:	movw	r2, #23337	; 0x5b29
   331e0:	movt	r2, #12476	; 0x30bc
   331e4:	mov	r3, r2
   331e8:	umull	r0, r2, r0, r2
   331ec:	mla	r1, r1, r3, r2
   331f0:	adds	r0, r0, r9
   331f4:	adc	r1, r1, r7
   331f8:	mov	r7, sl
   331fc:	mov	r2, #29
   33200:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33204:	adds	r2, r0, sl
   33208:	mov	r7, r5
   3320c:	adc	r3, r1, r5
   33210:	add	r4, r4, #32
   33214:	ldr	r0, [sp, #24]
   33218:	cmp	r4, r0
   3321c:	bls	33108 <cmetrohash64_2@@Base+0xa0>
   33220:	ldr	r0, [sp, #36]	; 0x24
   33224:	adds	r0, r2, r0
   33228:	ldr	r9, [fp, #-32]	; 0xffffffe0
   3322c:	adc	r1, r3, r9
   33230:	str	r2, [sp, #28]
   33234:	movw	r2, #6389	; 0x18f5
   33238:	movt	r2, #54992	; 0xd6d0
   3323c:	mov	r5, r2
   33240:	umull	r0, r2, r0, r2
   33244:	mla	r1, r1, r5, r2
   33248:	adds	r0, r0, sl
   3324c:	str	sl, [sp, #4]
   33250:	adc	r1, r1, r7
   33254:	mov	r5, r7
   33258:	str	r7, [sp, #8]
   3325c:	mov	r2, #30
   33260:	str	r3, [sp, #32]
   33264:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33268:	movw	r2, #827	; 0x33b
   3326c:	movt	r2, #41642	; 0xa2aa
   33270:	mov	r3, r2
   33274:	umull	r0, r2, r0, r2
   33278:	mla	r1, r1, r3, r2
   3327c:	eor	r8, r1, r8
   33280:	eor	r1, r0, r6
   33284:	adds	r0, r1, sl
   33288:	mov	r7, r1
   3328c:	str	r1, [sp, #24]
   33290:	adc	r1, r8, r5
   33294:	umull	r0, r2, r0, r3
   33298:	mla	r1, r1, r3, r2
   3329c:	ldr	r6, [sp, #36]	; 0x24
   332a0:	adds	r0, r0, r6
   332a4:	adc	r1, r1, r9
   332a8:	mov	r2, #30
   332ac:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   332b0:	movw	r5, #6389	; 0x18f5
   332b4:	movt	r5, #54992	; 0xd6d0
   332b8:	umull	r0, r2, r0, r5
   332bc:	mla	r1, r1, r5, r2
   332c0:	ldr	r2, [sp, #32]
   332c4:	eor	sl, r1, r2
   332c8:	adds	r1, r7, r6
   332cc:	adc	r2, r8, r9
   332d0:	umull	r1, r3, r1, r5
   332d4:	mla	r2, r2, r5, r3
   332d8:	ldr	r3, [sp, #28]
   332dc:	eor	r6, r0, r3
   332e0:	adds	r0, r1, r6
   332e4:	adc	r1, r2, sl
   332e8:	mov	r2, #30
   332ec:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   332f0:	str	r0, [sp, #32]
   332f4:	str	r1, [sp, #28]
   332f8:	ldr	r9, [sp, #4]
   332fc:	adds	r0, r6, r9
   33300:	ldr	r7, [sp, #8]
   33304:	adc	r1, sl, r7
   33308:	movw	r6, #827	; 0x33b
   3330c:	movt	r6, #41642	; 0xa2aa
   33310:	umull	r0, r2, r0, r6
   33314:	mla	r1, r1, r6, r2
   33318:	ldr	r2, [sp, #24]
   3331c:	adds	r0, r0, r2
   33320:	adc	r1, r1, r8
   33324:	mov	r2, #30
   33328:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   3332c:	umull	r0, r2, r0, r5
   33330:	mla	r1, r1, r5, r2
   33334:	ldr	r2, [sp, #32]
   33338:	umull	r2, r3, r2, r6
   3333c:	ldr	r5, [sp, #28]
   33340:	mla	r3, r5, r6, r3
   33344:	mov	ip, r6
   33348:	ldr	r6, [fp, #-32]	; 0xffffffe0
   3334c:	eor	r6, r7, r6
   33350:	eor	r3, r6, r3
   33354:	eor	r1, r3, r1
   33358:	ldr	r3, [sp, #36]	; 0x24
   3335c:	eor	r3, r9, r3
   33360:	eor	r2, r3, r2
   33364:	eor	r0, r2, r0
   33368:	ldr	r5, [sp, #16]
   3336c:	adds	r5, r0, r5
   33370:	ldr	sl, [sp, #20]
   33374:	adc	sl, r1, sl
   33378:	mov	r1, ip
   3337c:	movw	r8, #23337	; 0x5b29
   33380:	movt	r8, #12476	; 0x30bc
   33384:	ldr	r6, [sp, #12]
   33388:	movw	r7, #12225	; 0x2fc1
   3338c:	movt	r7, #25241	; 0x6299
   33390:	sub	r0, r6, r4
   33394:	cmp	r0, #16
   33398:	blt	334d4 <cmetrohash64_2@@Base+0x46c>
   3339c:	mov	r0, r4
   333a0:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   333a4:	umull	r0, r2, r0, r7
   333a8:	mla	r1, r1, r7, r2
   333ac:	adds	r0, r0, r5
   333b0:	adc	r1, r1, sl
   333b4:	mov	r2, #29
   333b8:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   333bc:	str	r4, [fp, #-32]	; 0xffffffe0
   333c0:	mov	r9, r0
   333c4:	mov	r4, r1
   333c8:	movw	r0, #5693	; 0x163d
   333cc:	movt	r0, #42015	; 0xa41f
   333d0:	umull	r1, r0, r9, r0
   333d4:	str	r1, [sp, #36]	; 0x24
   333d8:	movw	r1, #4606	; 0x11fe
   333dc:	movt	r1, #10469	; 0x28e5
   333e0:	str	sl, [sp, #20]
   333e4:	str	r5, [sp, #16]
   333e8:	mla	r0, r9, r1, r0
   333ec:	str	r0, [sp, #32]
   333f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   333f4:	add	r0, r0, #8
   333f8:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   333fc:	umull	r0, r2, r0, r7
   33400:	mla	r1, r1, r7, r2
   33404:	ldr	r2, [sp, #16]
   33408:	adds	r0, r0, r2
   3340c:	ldr	r2, [sp, #20]
   33410:	adc	r1, r1, r2
   33414:	mov	r2, #29
   33418:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   3341c:	mov	r5, r0
   33420:	mov	r6, r1
   33424:	mov	sl, r4
   33428:	movw	r0, #5693	; 0x163d
   3342c:	movt	r0, #42015	; 0xa41f
   33430:	ldr	r1, [sp, #32]
   33434:	mla	r1, r4, r0, r1
   33438:	umull	r4, r0, r5, r8
   3343c:	str	r4, [sp, #32]
   33440:	mov	r7, r8
   33444:	mla	r8, r6, r8, r0
   33448:	ldr	r0, [sp, #36]	; 0x24
   3344c:	mov	r2, #34	; 0x22
   33450:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33454:	adds	r0, r0, r4
   33458:	adc	r1, r1, r8
   3345c:	umull	r2, r3, r9, r7
   33460:	ldr	r4, [fp, #-32]	; 0xffffffe0
   33464:	mov	r9, r7
   33468:	mla	r3, sl, r7, r3
   3346c:	eor	sl, r1, r3
   33470:	eor	r7, r0, r2
   33474:	movw	r1, #11409	; 0x2c91
   33478:	movt	r1, #25774	; 0x64ae
   3347c:	umull	r0, r2, r5, r1
   33480:	movw	r3, #11461	; 0x2cc5
   33484:	movt	r3, #2375	; 0x947
   33488:	mla	r2, r5, r3, r2
   3348c:	mla	r1, r6, r1, r2
   33490:	mov	r2, #34	; 0x22
   33494:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33498:	adds	r0, r7, r0
   3349c:	adc	r1, sl, r1
   334a0:	eor	r1, r1, r8
   334a4:	ldr	r5, [sp, #16]
   334a8:	ldr	sl, [sp, #20]
   334ac:	ldr	r6, [sp, #12]
   334b0:	ldr	r2, [sp, #32]
   334b4:	eor	r0, r0, r2
   334b8:	movw	r7, #827	; 0x33b
   334bc:	movt	r7, #41642	; 0xa2aa
   334c0:	mov	r8, r7
   334c4:	adds	r5, r0, r5
   334c8:	adc	sl, r1, sl
   334cc:	add	r4, r4, #16
   334d0:	b	334dc <cmetrohash64_2@@Base+0x474>
   334d4:	mov	r9, r8
   334d8:	mov	r8, r1
   334dc:	sub	r0, r6, r4
   334e0:	cmp	r0, #8
   334e4:	blt	33524 <cmetrohash64_2@@Base+0x4bc>
   334e8:	mov	r0, r4
   334ec:	bl	32fcc <cmetrohash64_1@@Base+0x5bc>
   334f0:	umull	r0, r2, r0, r9
   334f4:	mla	r1, r1, r9, r2
   334f8:	adds	r7, r0, r5
   334fc:	adc	r5, r1, sl
   33500:	mov	r0, r7
   33504:	mov	r1, r5
   33508:	mov	r2, #36	; 0x24
   3350c:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33510:	umull	r0, r2, r0, r8
   33514:	mla	r1, r1, r8, r2
   33518:	eor	sl, r5, r1
   3351c:	eor	r5, r7, r0
   33520:	add	r4, r4, #8
   33524:	sub	r0, r6, r4
   33528:	cmp	r0, #4
   3352c:	blt	3356c <cmetrohash64_2@@Base+0x504>
   33530:	mov	r0, r4
   33534:	bl	3303c <cmetrohash64_1@@Base+0x62c>
   33538:	umull	r0, r2, r0, r9
   3353c:	mla	r1, r1, r9, r2
   33540:	adds	r7, r0, r5
   33544:	adc	r5, r1, sl
   33548:	mov	r0, r7
   3354c:	mov	r1, r5
   33550:	mov	r2, #15
   33554:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33558:	umull	r0, r2, r0, r8
   3355c:	mla	r1, r1, r8, r2
   33560:	eor	sl, r5, r1
   33564:	eor	r5, r7, r0
   33568:	add	r4, r4, #4
   3356c:	sub	r0, r6, r4
   33570:	cmp	r0, #2
   33574:	blt	335b4 <cmetrohash64_2@@Base+0x54c>
   33578:	mov	r0, r4
   3357c:	bl	33048 <cmetrohash64_1@@Base+0x638>
   33580:	umull	r0, r2, r0, r9
   33584:	mla	r1, r1, r9, r2
   33588:	adds	r7, r0, r5
   3358c:	adc	r5, r1, sl
   33590:	mov	r0, r7
   33594:	mov	r1, r5
   33598:	mov	r2, #15
   3359c:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   335a0:	umull	r0, r2, r0, r8
   335a4:	mla	r1, r1, r8, r2
   335a8:	eor	sl, r5, r1
   335ac:	eor	r5, r7, r0
   335b0:	add	r4, r4, #2
   335b4:	ldr	r7, [fp, #12]
   335b8:	sub	r0, r6, r4
   335bc:	cmp	r0, #1
   335c0:	blt	335fc <cmetrohash64_2@@Base+0x594>
   335c4:	mov	r0, r4
   335c8:	bl	3305c <cmetrohash64_1@@Base+0x64c>
   335cc:	umull	r0, r2, r0, r9
   335d0:	mla	r1, r1, r9, r2
   335d4:	adds	r4, r0, r5
   335d8:	adc	r5, r1, sl
   335dc:	mov	r0, r4
   335e0:	mov	r1, r5
   335e4:	mov	r2, #23
   335e8:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   335ec:	umull	r0, r2, r0, r8
   335f0:	mla	r1, r1, r8, r2
   335f4:	eor	sl, r5, r1
   335f8:	eor	r5, r4, r0
   335fc:	mov	r0, r5
   33600:	mov	r1, sl
   33604:	mov	r2, #28
   33608:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   3360c:	eor	r1, r1, sl
   33610:	eor	r0, r0, r5
   33614:	movw	r2, #6389	; 0x18f5
   33618:	movt	r2, #54992	; 0xd6d0
   3361c:	umull	r4, r0, r0, r2
   33620:	mla	r5, r1, r2, r0
   33624:	mov	r0, r4
   33628:	mov	r1, r5
   3362c:	mov	r2, #29
   33630:	bl	32fdc <cmetrohash64_1@@Base+0x5cc>
   33634:	eor	r1, r5, r1
   33638:	str	r1, [r7, #4]
   3363c:	eor	r0, r4, r0
   33640:	str	r0, [r7]
   33644:	sub	sp, fp, #28
   33648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003364c <fb_name_table_clear@@Base>:
   3364c:	b	33650 <fb_name_table_clear@@Base+0x4>
   33650:	push	{r4, sl, fp, lr}
   33654:	add	fp, sp, #8
   33658:	mov	r4, r0
   3365c:	ldr	r0, [r0]
   33660:	cmp	r0, #0
   33664:	beq	3366c <fb_name_table_clear@@Base+0x20>
   33668:	bl	14900 <free@plt>
   3366c:	vmov.i32	q8, #0	; 0x00000000
   33670:	vst1.32	{d16-d17}, [r4]
   33674:	pop	{r4, sl, fp, pc}

00033678 <fb_name_table_destroy@@Base>:
   33678:	push	{r4, sl, fp, lr}
   3367c:	add	fp, sp, #8
   33680:	mov	r4, r0
   33684:	cmp	r1, #0
   33688:	movne	r0, r4
   3368c:	blne	3369c <fb_name_table_destroy@@Base+0x24>
   33690:	mov	r0, r4
   33694:	pop	{r4, sl, fp, lr}
   33698:	b	33650 <fb_name_table_clear@@Base+0x4>
   3369c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   336a0:	add	fp, sp, #24
   336a4:	mov	r6, r0
   336a8:	ldr	r0, [r0, #12]
   336ac:	cmp	r0, #0
   336b0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   336b4:	mov	r8, r2
   336b8:	mov	r5, r1
   336bc:	ldr	r7, [r6]
   336c0:	mov	r4, #0
   336c4:	ldr	r1, [r7, r4, lsl #2]
   336c8:	orr	r0, r1, #2
   336cc:	cmp	r0, #2
   336d0:	beq	336dc <fb_name_table_destroy@@Base+0x64>
   336d4:	mov	r0, r8
   336d8:	blx	r5
   336dc:	ldr	r0, [r6, #12]
   336e0:	add	r4, r4, #1
   336e4:	cmp	r4, r0
   336e8:	bcc	336c4 <fb_name_table_destroy@@Base+0x4c>
   336ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000336f0 <fb_name_table_init@@Base>:
   336f0:	b	336f4 <fb_name_table_init@@Base+0x4>
   336f4:	push	{r4, r5, fp, lr}
   336f8:	add	fp, sp, #8
   336fc:	mov	r4, r0
   33700:	mov	r2, #4
   33704:	mov	r0, #179	; 0xb3
   33708:	mov	r5, r2
   3370c:	mul	r3, r2, r0
   33710:	lsl	r2, r2, #1
   33714:	cmp	r1, r3, lsr #8
   33718:	bhi	33708 <fb_name_table_init@@Base+0x18>
   3371c:	mov	r0, r5
   33720:	mov	r1, #4
   33724:	bl	148d0 <calloc@plt>
   33728:	str	r0, [r4]
   3372c:	cmp	r0, #0
   33730:	movne	r0, #0
   33734:	strne	r0, [r4, #4]
   33738:	strne	r0, [r4, #8]
   3373c:	strne	r5, [r4, #12]
   33740:	popne	{r4, r5, fp, pc}
   33744:	mvn	r0, #0
   33748:	pop	{r4, r5, fp, pc}

0003374c <fb_name_table_resize@@Base>:
   3374c:	b	33750 <fb_name_table_resize@@Base+0x4>
   33750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33754:	add	fp, sp, #28
   33758:	sub	sp, sp, #28
   3375c:	mov	r4, r0
   33760:	ldr	sl, [r0]
   33764:	ldr	r0, [r0, #8]
   33768:	cmp	r0, r1
   3376c:	movhi	r1, r0
   33770:	add	r0, sp, #8
   33774:	bl	336f4 <fb_name_table_init@@Base+0x4>
   33778:	mov	r1, r0
   3377c:	mvn	r0, #0
   33780:	cmp	r1, #0
   33784:	beq	33790 <fb_name_table_resize@@Base+0x44>
   33788:	sub	sp, fp, #28
   3378c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33790:	ldr	r0, [r4, #12]
   33794:	cmp	r0, #0
   33798:	beq	337f4 <fb_name_table_resize@@Base+0xa8>
   3379c:	mov	r6, #0
   337a0:	mov	r8, #3
   337a4:	add	r9, sp, #8
   337a8:	ldr	r7, [sl, r6, lsl #2]
   337ac:	orr	r0, r7, #2
   337b0:	cmp	r0, #2
   337b4:	beq	337e4 <fb_name_table_resize@@Base+0x98>
   337b8:	mov	r0, r7
   337bc:	bl	33a48 <fb_name_table_insert_item@@Base+0x4c>
   337c0:	mov	r5, r0
   337c4:	mov	r0, r7
   337c8:	bl	33a50 <fb_name_table_insert_item@@Base+0x54>
   337cc:	mov	r2, r0
   337d0:	str	r8, [sp]
   337d4:	mov	r0, r9
   337d8:	mov	r1, r5
   337dc:	mov	r3, r7
   337e0:	bl	33818 <fb_name_table_insert@@Base+0x4>
   337e4:	ldr	r0, [r4, #12]
   337e8:	add	r6, r6, #1
   337ec:	cmp	r6, r0
   337f0:	bcc	337a8 <fb_name_table_resize@@Base+0x5c>
   337f4:	mov	r0, r4
   337f8:	bl	33650 <fb_name_table_clear@@Base+0x4>
   337fc:	add	r0, sp, #8
   33800:	vld1.64	{d16-d17}, [r0]
   33804:	vst1.32	{d16-d17}, [r4]
   33808:	mov	r0, #0
   3380c:	sub	sp, fp, #28
   33810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033814 <fb_name_table_insert@@Base>:
   33814:	b	33818 <fb_name_table_insert@@Base+0x4>
   33818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3381c:	add	fp, sp, #28
   33820:	sub	sp, sp, #12
   33824:	str	r2, [sp, #8]
   33828:	cmp	r3, #2
   3382c:	beq	33974 <fb_name_table_insert@@Base+0x160>
   33830:	mov	r9, r3
   33834:	cmp	r3, #1
   33838:	beq	33994 <fb_name_table_insert@@Base+0x180>
   3383c:	cmp	r9, #0
   33840:	beq	339b4 <fb_name_table_insert@@Base+0x1a0>
   33844:	mov	r7, r1
   33848:	mov	r5, r0
   3384c:	ldr	r0, [r0, #8]
   33850:	ldr	r1, [r5, #12]
   33854:	mov	r2, #179	; 0xb3
   33858:	mul	r1, r1, r2
   3385c:	cmp	r0, r1, lsr #8
   33860:	bcc	33878 <fb_name_table_insert@@Base+0x64>
   33864:	lsl	r1, r0, #1
   33868:	mov	r0, r5
   3386c:	bl	33750 <fb_name_table_resize@@Base+0x4>
   33870:	cmp	r0, #0
   33874:	bne	339d4 <fb_name_table_insert@@Base+0x1c0>
   33878:	ldr	sl, [fp, #8]
   3387c:	ldr	r8, [r5]
   33880:	ldr	r4, [r5, #12]
   33884:	mov	r0, r7
   33888:	ldr	r1, [sp, #8]
   3388c:	bl	33bf8 <fb_name_table_visit@@Base+0x4>
   33890:	sub	r6, r4, #1
   33894:	and	r1, r0, r6
   33898:	orr	r2, sl, #1
   3389c:	cmp	r2, #3
   338a0:	bne	338d8 <fb_name_table_insert@@Base+0xc4>
   338a4:	ldr	r2, [r5, #8]
   338a8:	add	r2, r2, #1
   338ac:	str	r2, [r5, #8]
   338b0:	b	338b8 <fb_name_table_insert@@Base+0xa4>
   338b4:	and	r1, r0, r6
   338b8:	add	r0, r0, #1
   338bc:	mov	r5, r8
   338c0:	ldr	r1, [r5, r1, lsl #2]!
   338c4:	orr	r1, r1, #2
   338c8:	cmp	r1, #2
   338cc:	bne	338b4 <fb_name_table_insert@@Base+0xa0>
   338d0:	mov	r4, #0
   338d4:	b	33950 <fb_name_table_insert@@Base+0x13c>
   338d8:	stm	sp, {r5, r9}
   338dc:	add	sl, r0, #1
   338e0:	mov	r9, #0
   338e4:	b	338f0 <fb_name_table_insert@@Base+0xdc>
   338e8:	and	r1, sl, r6
   338ec:	add	sl, sl, #1
   338f0:	mov	r5, r8
   338f4:	ldr	r4, [r5, r1, lsl #2]!
   338f8:	cmp	r4, #2
   338fc:	beq	33924 <fb_name_table_insert@@Base+0x110>
   33900:	cmp	r4, #0
   33904:	beq	33930 <fb_name_table_insert@@Base+0x11c>
   33908:	mov	r0, r7
   3390c:	ldr	r1, [sp, #8]
   33910:	mov	r2, r4
   33914:	bl	33c30 <fb_name_table_visit@@Base+0x3c>
   33918:	cmp	r0, #0
   3391c:	beq	338e8 <fb_name_table_insert@@Base+0xd4>
   33920:	b	33960 <fb_name_table_insert@@Base+0x14c>
   33924:	cmp	r9, #0
   33928:	moveq	r9, r5
   3392c:	b	338e8 <fb_name_table_insert@@Base+0xd4>
   33930:	ldr	r1, [sp]
   33934:	ldr	r0, [r1, #8]
   33938:	add	r0, r0, #1
   3393c:	str	r0, [r1, #8]
   33940:	cmp	r9, #0
   33944:	movne	r5, r9
   33948:	mov	r4, #0
   3394c:	ldr	r9, [sp, #4]
   33950:	str	r9, [r5]
   33954:	mov	r0, r4
   33958:	sub	sp, fp, #28
   3395c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33960:	ldr	r0, [fp, #8]
   33964:	cmp	r0, #0
   33968:	ldr	r9, [sp, #4]
   3396c:	streq	r9, [r5]
   33970:	b	33954 <fb_name_table_insert@@Base+0x140>
   33974:	movw	r0, #54861	; 0xd64d
   33978:	movt	r0, #4
   3397c:	movw	r1, #54707	; 0xd5b3
   33980:	movt	r1, #4
   33984:	movw	r3, #54787	; 0xd603
   33988:	movt	r3, #4
   3398c:	mov	r2, #115	; 0x73
   33990:	bl	14a80 <__assert_fail@plt>
   33994:	movw	r0, #54884	; 0xd664
   33998:	movt	r0, #4
   3399c:	movw	r1, #54707	; 0xd5b3
   339a0:	movt	r1, #4
   339a4:	movw	r3, #54787	; 0xd603
   339a8:	movt	r3, #4
   339ac:	mov	r2, #116	; 0x74
   339b0:	bl	14a80 <__assert_fail@plt>
   339b4:	movw	r0, #54684	; 0xd59c
   339b8:	movt	r0, #4
   339bc:	movw	r1, #54707	; 0xd5b3
   339c0:	movt	r1, #4
   339c4:	movw	r3, #54787	; 0xd603
   339c8:	movt	r3, #4
   339cc:	mov	r2, #114	; 0x72
   339d0:	bl	14a80 <__assert_fail@plt>
   339d4:	movw	r0, #8368	; 0x20b0
   339d8:	movt	r0, #6
   339dc:	ldr	r0, [r0]
   339e0:	movw	r1, #54905	; 0xd679
   339e4:	movt	r1, #4
   339e8:	movw	r2, #54928	; 0xd690
   339ec:	movt	r2, #4
   339f0:	bl	149c0 <fprintf@plt>
   339f4:	mov	r0, #1
   339f8:	bl	1499c <exit@plt>

000339fc <fb_name_table_insert_item@@Base>:
   339fc:	push	{r4, r5, r6, r7, fp, lr}
   33a00:	add	fp, sp, #16
   33a04:	sub	sp, sp, #8
   33a08:	mov	r4, r2
   33a0c:	mov	r5, r1
   33a10:	mov	r6, r0
   33a14:	mov	r0, r1
   33a18:	bl	33a48 <fb_name_table_insert_item@@Base+0x4c>
   33a1c:	mov	r7, r0
   33a20:	mov	r0, r5
   33a24:	bl	33a50 <fb_name_table_insert_item@@Base+0x54>
   33a28:	mov	r2, r0
   33a2c:	str	r4, [sp]
   33a30:	mov	r0, r6
   33a34:	mov	r1, r7
   33a38:	mov	r3, r5
   33a3c:	bl	33818 <fb_name_table_insert@@Base+0x4>
   33a40:	sub	sp, fp, #16
   33a44:	pop	{r4, r5, r6, r7, fp, pc}
   33a48:	ldr	r0, [r0, #8]
   33a4c:	bx	lr
   33a50:	ldr	r0, [r0, #12]
   33a54:	bx	lr

00033a58 <fb_name_table_find@@Base>:
   33a58:	b	33a5c <fb_name_table_find@@Base+0x4>
   33a5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33a60:	add	fp, sp, #24
   33a64:	ldr	r4, [r0]
   33a68:	cmp	r4, #0
   33a6c:	beq	33ad0 <fb_name_table_find@@Base+0x78>
   33a70:	mov	r8, r2
   33a74:	mov	r9, r1
   33a78:	ldr	r5, [r0, #12]
   33a7c:	mov	r0, r1
   33a80:	mov	r1, r2
   33a84:	bl	33bf8 <fb_name_table_visit@@Base+0x4>
   33a88:	mov	r6, r0
   33a8c:	sub	r5, r5, #1
   33a90:	b	33a98 <fb_name_table_find@@Base+0x40>
   33a94:	add	r6, r6, #1
   33a98:	and	r0, r6, r5
   33a9c:	ldr	r7, [r4, r0, lsl #2]
   33aa0:	cmp	r7, #2
   33aa4:	beq	33a94 <fb_name_table_find@@Base+0x3c>
   33aa8:	cmp	r7, #0
   33aac:	beq	33ad0 <fb_name_table_find@@Base+0x78>
   33ab0:	mov	r0, r9
   33ab4:	mov	r1, r8
   33ab8:	mov	r2, r7
   33abc:	bl	33c30 <fb_name_table_visit@@Base+0x3c>
   33ac0:	cmp	r0, #0
   33ac4:	beq	33a94 <fb_name_table_find@@Base+0x3c>
   33ac8:	mov	r0, r7
   33acc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33ad0:	mov	r7, #0
   33ad4:	mov	r0, r7
   33ad8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033adc <fb_name_table_find_item@@Base>:
   33adc:	push	{r4, r5, r6, sl, fp, lr}
   33ae0:	add	fp, sp, #16
   33ae4:	mov	r4, r1
   33ae8:	mov	r5, r0
   33aec:	mov	r0, r1
   33af0:	bl	33a48 <fb_name_table_insert_item@@Base+0x4c>
   33af4:	mov	r6, r0
   33af8:	mov	r0, r4
   33afc:	bl	33a50 <fb_name_table_insert_item@@Base+0x54>
   33b00:	mov	r2, r0
   33b04:	mov	r0, r5
   33b08:	mov	r1, r6
   33b0c:	pop	{r4, r5, r6, sl, fp, lr}
   33b10:	b	33a5c <fb_name_table_find@@Base+0x4>

00033b14 <fb_name_table_remove@@Base>:
   33b14:	b	33b18 <fb_name_table_remove@@Base+0x4>
   33b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33b1c:	add	fp, sp, #28
   33b20:	sub	sp, sp, #4
   33b24:	ldr	r5, [r0]
   33b28:	mov	r7, #0
   33b2c:	cmp	r5, #0
   33b30:	beq	33bb0 <fb_name_table_remove@@Base+0x9c>
   33b34:	mov	r9, r2
   33b38:	mov	sl, r1
   33b3c:	str	r0, [sp]
   33b40:	ldr	r6, [r0, #12]
   33b44:	mov	r0, r1
   33b48:	mov	r1, r2
   33b4c:	bl	33bf8 <fb_name_table_visit@@Base+0x4>
   33b50:	mov	r4, r0
   33b54:	sub	r6, r6, #1
   33b58:	b	33b60 <fb_name_table_remove@@Base+0x4c>
   33b5c:	add	r4, r4, #1
   33b60:	and	r8, r4, r6
   33b64:	ldr	r7, [r5, r8, lsl #2]
   33b68:	cmp	r7, #2
   33b6c:	beq	33b5c <fb_name_table_remove@@Base+0x48>
   33b70:	cmp	r7, #0
   33b74:	beq	33bac <fb_name_table_remove@@Base+0x98>
   33b78:	mov	r0, sl
   33b7c:	mov	r1, r9
   33b80:	mov	r2, r7
   33b84:	bl	33c30 <fb_name_table_visit@@Base+0x3c>
   33b88:	cmp	r0, #0
   33b8c:	beq	33b5c <fb_name_table_remove@@Base+0x48>
   33b90:	mov	r0, #2
   33b94:	str	r0, [r5, r8, lsl #2]
   33b98:	ldr	r1, [sp]
   33b9c:	ldr	r0, [r1, #8]
   33ba0:	sub	r0, r0, #1
   33ba4:	str	r0, [r1, #8]
   33ba8:	b	33bb0 <fb_name_table_remove@@Base+0x9c>
   33bac:	mov	r7, #0
   33bb0:	mov	r0, r7
   33bb4:	sub	sp, fp, #28
   33bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033bbc <fb_name_table_remove_item@@Base>:
   33bbc:	push	{r4, r5, r6, sl, fp, lr}
   33bc0:	add	fp, sp, #16
   33bc4:	mov	r4, r1
   33bc8:	mov	r5, r0
   33bcc:	mov	r0, r1
   33bd0:	bl	33a48 <fb_name_table_insert_item@@Base+0x4c>
   33bd4:	mov	r6, r0
   33bd8:	mov	r0, r4
   33bdc:	bl	33a50 <fb_name_table_insert_item@@Base+0x54>
   33be0:	mov	r2, r0
   33be4:	mov	r0, r5
   33be8:	mov	r1, r6
   33bec:	pop	{r4, r5, r6, sl, fp, lr}
   33bf0:	b	33b18 <fb_name_table_remove@@Base+0x4>

00033bf4 <fb_name_table_visit@@Base>:
   33bf4:	b	3369c <fb_name_table_destroy@@Base+0x24>
   33bf8:	push	{fp, lr}
   33bfc:	mov	fp, sp
   33c00:	sub	sp, sp, #16
   33c04:	add	r2, sp, #8
   33c08:	movw	r3, #15186	; 0x3b52
   33c0c:	movt	r3, #12137	; 0x2f69
   33c10:	str	r3, [sp]
   33c14:	str	r2, [sp, #4]
   33c18:	mov	r2, r1
   33c1c:	mov	r3, #0
   33c20:	bl	32a10 <cmetrohash64_1@@Base>
   33c24:	ldr	r0, [sp, #8]
   33c28:	mov	sp, fp
   33c2c:	pop	{fp, pc}
   33c30:	mov	ip, r1
   33c34:	ldr	r3, [r2, #12]
   33c38:	mov	r1, #0
   33c3c:	cmp	r3, ip
   33c40:	bne	33c64 <fb_name_table_visit@@Base+0x70>
   33c44:	push	{fp, lr}
   33c48:	mov	fp, sp
   33c4c:	ldr	r1, [r2, #8]
   33c50:	mov	r2, ip
   33c54:	bl	14924 <memcmp@plt>
   33c58:	clz	r0, r0
   33c5c:	lsr	r1, r0, #5
   33c60:	pop	{fp, lr}
   33c64:	mov	r0, r1
   33c68:	bx	lr

00033c6c <fb_value_set_clear@@Base>:
   33c6c:	b	33c70 <fb_value_set_clear@@Base+0x4>
   33c70:	push	{r4, sl, fp, lr}
   33c74:	add	fp, sp, #8
   33c78:	mov	r4, r0
   33c7c:	ldr	r0, [r0]
   33c80:	cmp	r0, #0
   33c84:	beq	33c8c <fb_value_set_clear@@Base+0x20>
   33c88:	bl	14900 <free@plt>
   33c8c:	vmov.i32	q8, #0	; 0x00000000
   33c90:	vst1.32	{d16-d17}, [r4]
   33c94:	pop	{r4, sl, fp, pc}

00033c98 <fb_value_set_destroy@@Base>:
   33c98:	push	{r4, sl, fp, lr}
   33c9c:	add	fp, sp, #8
   33ca0:	mov	r4, r0
   33ca4:	cmp	r1, #0
   33ca8:	movne	r0, r4
   33cac:	blne	33cbc <fb_value_set_destroy@@Base+0x24>
   33cb0:	mov	r0, r4
   33cb4:	pop	{r4, sl, fp, lr}
   33cb8:	b	33c70 <fb_value_set_clear@@Base+0x4>
   33cbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33cc0:	add	fp, sp, #24
   33cc4:	mov	r6, r0
   33cc8:	ldr	r0, [r0, #12]
   33ccc:	cmp	r0, #0
   33cd0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   33cd4:	mov	r8, r2
   33cd8:	mov	r5, r1
   33cdc:	ldr	r7, [r6]
   33ce0:	mov	r4, #0
   33ce4:	ldr	r1, [r7, r4, lsl #2]
   33ce8:	orr	r0, r1, #2
   33cec:	cmp	r0, #2
   33cf0:	beq	33cfc <fb_value_set_destroy@@Base+0x64>
   33cf4:	mov	r0, r8
   33cf8:	blx	r5
   33cfc:	ldr	r0, [r6, #12]
   33d00:	add	r4, r4, #1
   33d04:	cmp	r4, r0
   33d08:	bcc	33ce4 <fb_value_set_destroy@@Base+0x4c>
   33d0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033d10 <fb_value_set_init@@Base>:
   33d10:	b	33d14 <fb_value_set_init@@Base+0x4>
   33d14:	push	{r4, r5, fp, lr}
   33d18:	add	fp, sp, #8
   33d1c:	mov	r4, r0
   33d20:	mov	r2, #4
   33d24:	mov	r0, #179	; 0xb3
   33d28:	mov	r5, r2
   33d2c:	mul	r3, r2, r0
   33d30:	lsl	r2, r2, #1
   33d34:	cmp	r1, r3, lsr #8
   33d38:	bhi	33d28 <fb_value_set_init@@Base+0x18>
   33d3c:	mov	r0, r5
   33d40:	mov	r1, #4
   33d44:	bl	148d0 <calloc@plt>
   33d48:	str	r0, [r4]
   33d4c:	cmp	r0, #0
   33d50:	movne	r0, #0
   33d54:	strne	r0, [r4, #4]
   33d58:	strne	r0, [r4, #8]
   33d5c:	strne	r5, [r4, #12]
   33d60:	popne	{r4, r5, fp, pc}
   33d64:	mvn	r0, #0
   33d68:	pop	{r4, r5, fp, pc}

00033d6c <fb_value_set_resize@@Base>:
   33d6c:	b	33d70 <fb_value_set_resize@@Base+0x4>
   33d70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33d74:	add	fp, sp, #24
   33d78:	sub	sp, sp, #16
   33d7c:	mov	r4, r0
   33d80:	ldr	r5, [r0]
   33d84:	ldr	r0, [r0, #8]
   33d88:	cmp	r0, r1
   33d8c:	movhi	r1, r0
   33d90:	mov	r8, sp
   33d94:	mov	r0, r8
   33d98:	bl	33d14 <fb_value_set_init@@Base+0x4>
   33d9c:	mov	r1, r0
   33da0:	mvn	r0, #0
   33da4:	cmp	r1, #0
   33da8:	beq	33db4 <fb_value_set_resize@@Base+0x48>
   33dac:	sub	sp, fp, #24
   33db0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33db4:	ldr	r0, [r4, #12]
   33db8:	cmp	r0, #0
   33dbc:	beq	33e04 <fb_value_set_resize@@Base+0x98>
   33dc0:	mov	r6, #0
   33dc4:	mov	r9, sp
   33dc8:	ldr	r7, [r5, r6, lsl #2]
   33dcc:	orr	r0, r7, #2
   33dd0:	cmp	r0, #2
   33dd4:	beq	33df4 <fb_value_set_resize@@Base+0x88>
   33dd8:	mov	r0, r7
   33ddc:	bl	3403c <fb_value_set_insert_item@@Base+0x34>
   33de0:	mov	r1, r0
   33de4:	mov	r0, r9
   33de8:	mov	r2, r7
   33dec:	mov	r3, #3
   33df0:	bl	33e2c <fb_value_set_insert@@Base+0xc>
   33df4:	ldr	r0, [r4, #12]
   33df8:	add	r6, r6, #1
   33dfc:	cmp	r6, r0
   33e00:	bcc	33dc8 <fb_value_set_resize@@Base+0x5c>
   33e04:	mov	r0, r4
   33e08:	bl	33c70 <fb_value_set_clear@@Base+0x4>
   33e0c:	vld1.64	{d16-d17}, [r8]
   33e10:	vst1.32	{d16-d17}, [r4]
   33e14:	mov	r0, #0
   33e18:	sub	sp, fp, #24
   33e1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033e20 <fb_value_set_insert@@Base>:
   33e20:	mov	r2, r3
   33e24:	ldr	r3, [sp]
   33e28:	b	33e2c <fb_value_set_insert@@Base+0xc>
   33e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e30:	add	fp, sp, #28
   33e34:	sub	sp, sp, #12
   33e38:	cmp	r2, #2
   33e3c:	beq	33f80 <fb_value_set_insert@@Base+0x160>
   33e40:	mov	r9, r2
   33e44:	cmp	r2, #1
   33e48:	beq	33fa0 <fb_value_set_insert@@Base+0x180>
   33e4c:	cmp	r9, #0
   33e50:	beq	33fc0 <fb_value_set_insert@@Base+0x1a0>
   33e54:	mov	r6, r3
   33e58:	mov	r7, r1
   33e5c:	mov	r4, r0
   33e60:	ldr	r0, [r0, #8]
   33e64:	ldr	r1, [r4, #12]
   33e68:	mov	r2, #179	; 0xb3
   33e6c:	mul	r1, r1, r2
   33e70:	cmp	r0, r1, lsr #8
   33e74:	bcc	33e8c <fb_value_set_insert@@Base+0x6c>
   33e78:	lsl	r1, r0, #1
   33e7c:	mov	r0, r4
   33e80:	bl	33d70 <fb_value_set_resize@@Base+0x4>
   33e84:	cmp	r0, #0
   33e88:	bne	33fe0 <fb_value_set_insert@@Base+0x1c0>
   33e8c:	ldr	r8, [r4]
   33e90:	ldr	r0, [r4, #12]
   33e94:	sub	r5, r0, #1
   33e98:	mov	r0, r7
   33e9c:	bl	3419c <fb_value_set_visit@@Base+0x4>
   33ea0:	and	r1, r0, r5
   33ea4:	orr	r2, r6, #1
   33ea8:	cmp	r2, #3
   33eac:	bne	33ee4 <fb_value_set_insert@@Base+0xc4>
   33eb0:	ldr	r2, [r4, #8]
   33eb4:	add	r2, r2, #1
   33eb8:	str	r2, [r4, #8]
   33ebc:	b	33ec4 <fb_value_set_insert@@Base+0xa4>
   33ec0:	and	r1, r0, r5
   33ec4:	add	r0, r0, #1
   33ec8:	mov	r4, r8
   33ecc:	ldr	r1, [r4, r1, lsl #2]!
   33ed0:	orr	r1, r1, #2
   33ed4:	cmp	r1, #2
   33ed8:	bne	33ec0 <fb_value_set_insert@@Base+0xa0>
   33edc:	mov	r6, #0
   33ee0:	b	33f5c <fb_value_set_insert@@Base+0x13c>
   33ee4:	str	r6, [sp]
   33ee8:	stmib	sp, {r4, r9}
   33eec:	add	sl, r0, #1
   33ef0:	mov	r9, #0
   33ef4:	b	33f00 <fb_value_set_insert@@Base+0xe0>
   33ef8:	and	r1, sl, r5
   33efc:	add	sl, sl, #1
   33f00:	mov	r4, r8
   33f04:	ldr	r6, [r4, r1, lsl #2]!
   33f08:	cmp	r6, #2
   33f0c:	beq	33f30 <fb_value_set_insert@@Base+0x110>
   33f10:	cmp	r6, #0
   33f14:	beq	33f3c <fb_value_set_insert@@Base+0x11c>
   33f18:	mov	r0, r7
   33f1c:	mov	r1, r6
   33f20:	bl	341d0 <fb_value_set_visit@@Base+0x38>
   33f24:	cmp	r0, #0
   33f28:	beq	33ef8 <fb_value_set_insert@@Base+0xd8>
   33f2c:	b	33f6c <fb_value_set_insert@@Base+0x14c>
   33f30:	cmp	r9, #0
   33f34:	moveq	r9, r4
   33f38:	b	33ef8 <fb_value_set_insert@@Base+0xd8>
   33f3c:	ldr	r1, [sp, #4]
   33f40:	ldr	r0, [r1, #8]
   33f44:	add	r0, r0, #1
   33f48:	str	r0, [r1, #8]
   33f4c:	cmp	r9, #0
   33f50:	movne	r4, r9
   33f54:	mov	r6, #0
   33f58:	ldr	r9, [sp, #8]
   33f5c:	str	r9, [r4]
   33f60:	mov	r0, r6
   33f64:	sub	sp, fp, #28
   33f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33f6c:	ldr	r0, [sp]
   33f70:	cmp	r0, #0
   33f74:	ldr	r9, [sp, #8]
   33f78:	streq	r9, [r4]
   33f7c:	b	33f60 <fb_value_set_insert@@Base+0x140>
   33f80:	movw	r0, #54861	; 0xd64d
   33f84:	movt	r0, #4
   33f88:	movw	r1, #54707	; 0xd5b3
   33f8c:	movt	r1, #4
   33f90:	movw	r3, #54787	; 0xd603
   33f94:	movt	r3, #4
   33f98:	mov	r2, #115	; 0x73
   33f9c:	bl	14a80 <__assert_fail@plt>
   33fa0:	movw	r0, #54884	; 0xd664
   33fa4:	movt	r0, #4
   33fa8:	movw	r1, #54707	; 0xd5b3
   33fac:	movt	r1, #4
   33fb0:	movw	r3, #54787	; 0xd603
   33fb4:	movt	r3, #4
   33fb8:	mov	r2, #116	; 0x74
   33fbc:	bl	14a80 <__assert_fail@plt>
   33fc0:	movw	r0, #54684	; 0xd59c
   33fc4:	movt	r0, #4
   33fc8:	movw	r1, #54707	; 0xd5b3
   33fcc:	movt	r1, #4
   33fd0:	movw	r3, #54787	; 0xd603
   33fd4:	movt	r3, #4
   33fd8:	mov	r2, #114	; 0x72
   33fdc:	bl	14a80 <__assert_fail@plt>
   33fe0:	movw	r0, #8368	; 0x20b0
   33fe4:	movt	r0, #6
   33fe8:	ldr	r0, [r0]
   33fec:	movw	r1, #54905	; 0xd679
   33ff0:	movt	r1, #4
   33ff4:	movw	r2, #54928	; 0xd690
   33ff8:	movt	r2, #4
   33ffc:	bl	149c0 <fprintf@plt>
   34000:	mov	r0, #1
   34004:	bl	1499c <exit@plt>

00034008 <fb_value_set_insert_item@@Base>:
   34008:	push	{r4, r5, r6, sl, fp, lr}
   3400c:	add	fp, sp, #16
   34010:	mov	r4, r2
   34014:	mov	r5, r1
   34018:	mov	r6, r0
   3401c:	mov	r0, r1
   34020:	bl	3403c <fb_value_set_insert_item@@Base+0x34>
   34024:	mov	r1, r0
   34028:	mov	r0, r6
   3402c:	mov	r2, r5
   34030:	mov	r3, r4
   34034:	pop	{r4, r5, r6, sl, fp, lr}
   34038:	b	33e2c <fb_value_set_insert@@Base+0xc>
   3403c:	bx	lr

00034040 <fb_value_set_find@@Base>:
   34040:	b	34044 <fb_value_set_find@@Base+0x4>
   34044:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   34048:	add	fp, sp, #24
   3404c:	ldr	r7, [r0]
   34050:	cmp	r7, #0
   34054:	beq	340ac <fb_value_set_find@@Base+0x6c>
   34058:	mov	r8, r1
   3405c:	ldr	r0, [r0, #12]
   34060:	sub	r4, r0, #1
   34064:	mov	r0, r1
   34068:	bl	3419c <fb_value_set_visit@@Base+0x4>
   3406c:	mov	r5, r0
   34070:	b	34078 <fb_value_set_find@@Base+0x38>
   34074:	add	r5, r5, #1
   34078:	and	r0, r5, r4
   3407c:	ldr	r6, [r7, r0, lsl #2]
   34080:	cmp	r6, #2
   34084:	beq	34074 <fb_value_set_find@@Base+0x34>
   34088:	cmp	r6, #0
   3408c:	beq	340ac <fb_value_set_find@@Base+0x6c>
   34090:	mov	r0, r8
   34094:	mov	r1, r6
   34098:	bl	341d0 <fb_value_set_visit@@Base+0x38>
   3409c:	cmp	r0, #0
   340a0:	beq	34074 <fb_value_set_find@@Base+0x34>
   340a4:	mov	r0, r6
   340a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   340ac:	mov	r6, #0
   340b0:	mov	r0, r6
   340b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000340b8 <fb_value_set_find_item@@Base>:
   340b8:	push	{r4, sl, fp, lr}
   340bc:	add	fp, sp, #8
   340c0:	mov	r4, r0
   340c4:	mov	r0, r1
   340c8:	bl	3403c <fb_value_set_insert_item@@Base+0x34>
   340cc:	mov	r1, r0
   340d0:	mov	r0, r4
   340d4:	pop	{r4, sl, fp, lr}
   340d8:	b	34044 <fb_value_set_find@@Base+0x4>

000340dc <fb_value_set_remove@@Base>:
   340dc:	b	340e0 <fb_value_set_remove@@Base+0x4>
   340e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   340e4:	add	fp, sp, #28
   340e8:	sub	sp, sp, #4
   340ec:	ldr	sl, [r0]
   340f0:	mov	r6, #0
   340f4:	cmp	sl, #0
   340f8:	beq	34168 <fb_value_set_remove@@Base+0x8c>
   340fc:	mov	r9, r1
   34100:	mov	r8, r0
   34104:	ldr	r0, [r0, #12]
   34108:	sub	r5, r0, #1
   3410c:	mov	r0, r1
   34110:	bl	3419c <fb_value_set_visit@@Base+0x4>
   34114:	mov	r7, r0
   34118:	b	34120 <fb_value_set_remove@@Base+0x44>
   3411c:	add	r7, r7, #1
   34120:	and	r4, r7, r5
   34124:	ldr	r6, [sl, r4, lsl #2]
   34128:	cmp	r6, #2
   3412c:	beq	3411c <fb_value_set_remove@@Base+0x40>
   34130:	cmp	r6, #0
   34134:	beq	34164 <fb_value_set_remove@@Base+0x88>
   34138:	mov	r0, r9
   3413c:	mov	r1, r6
   34140:	bl	341d0 <fb_value_set_visit@@Base+0x38>
   34144:	cmp	r0, #0
   34148:	beq	3411c <fb_value_set_remove@@Base+0x40>
   3414c:	mov	r0, #2
   34150:	str	r0, [sl, r4, lsl #2]
   34154:	ldr	r0, [r8, #8]
   34158:	sub	r0, r0, #1
   3415c:	str	r0, [r8, #8]
   34160:	b	34168 <fb_value_set_remove@@Base+0x8c>
   34164:	mov	r6, #0
   34168:	mov	r0, r6
   3416c:	sub	sp, fp, #28
   34170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034174 <fb_value_set_remove_item@@Base>:
   34174:	push	{r4, sl, fp, lr}
   34178:	add	fp, sp, #8
   3417c:	mov	r4, r0
   34180:	mov	r0, r1
   34184:	bl	3403c <fb_value_set_insert_item@@Base+0x34>
   34188:	mov	r1, r0
   3418c:	mov	r0, r4
   34190:	pop	{r4, sl, fp, lr}
   34194:	b	340e0 <fb_value_set_remove@@Base+0x4>

00034198 <fb_value_set_visit@@Base>:
   34198:	b	33cbc <fb_value_set_destroy@@Base+0x24>
   3419c:	ldrh	r1, [r0, #8]
   341a0:	cmp	r1, #6
   341a4:	beq	341c4 <fb_value_set_visit@@Base+0x2c>
   341a8:	cmp	r1, #5
   341ac:	cmpne	r1, #4
   341b0:	movne	r0, #0
   341b4:	bxne	lr
   341b8:	ldr	r0, [r0]
   341bc:	eor	r0, r0, r1
   341c0:	b	3422c <fb_value_set_visit@@Base+0x94>
   341c4:	ldrb	r0, [r0]
   341c8:	eor	r0, r0, r1
   341cc:	b	3422c <fb_value_set_visit@@Base+0x94>
   341d0:	mov	ip, r0
   341d4:	ldrh	r3, [r0, #8]
   341d8:	ldrh	r2, [r1, #8]
   341dc:	mov	r0, #0
   341e0:	cmp	r3, r2
   341e4:	bxne	lr
   341e8:	cmp	r3, #6
   341ec:	beq	34214 <fb_value_set_visit@@Base+0x7c>
   341f0:	cmp	r3, #5
   341f4:	cmpne	r3, #4
   341f8:	bne	34228 <fb_value_set_visit@@Base+0x90>
   341fc:	ldrd	r0, [r1]
   34200:	ldrd	r2, [ip]
   34204:	eor	r1, r3, r1
   34208:	eor	r0, r2, r0
   3420c:	orr	r0, r0, r1
   34210:	b	34220 <fb_value_set_visit@@Base+0x88>
   34214:	ldrb	r0, [r1]
   34218:	ldrb	r1, [ip]
   3421c:	sub	r0, r1, r0
   34220:	clz	r0, r0
   34224:	lsr	r0, r0, #5
   34228:	bx	lr
   3422c:	movw	r1, #15186	; 0x3b52
   34230:	movt	r1, #12137	; 0x2f69
   34234:	eor	r0, r0, r1
   34238:	movw	r1, #31153	; 0x79b1
   3423c:	movt	r1, #40503	; 0x9e37
   34240:	mul	r0, r0, r1
   34244:	bx	lr
   34248:	eor	r1, r1, #-2147483648	; 0x80000000
   3424c:	b	34254 <fb_value_set_visit@@Base+0xbc>
   34250:	eor	r3, r3, #-2147483648	; 0x80000000
   34254:	push	{r4, r5, lr}
   34258:	lsl	r4, r1, #1
   3425c:	lsl	r5, r3, #1
   34260:	teq	r4, r5
   34264:	teqeq	r0, r2
   34268:	orrsne	ip, r4, r0
   3426c:	orrsne	ip, r5, r2
   34270:	mvnsne	ip, r4, asr #21
   34274:	mvnsne	ip, r5, asr #21
   34278:	beq	34464 <fb_value_set_visit@@Base+0x2cc>
   3427c:	lsr	r4, r4, #21
   34280:	rsbs	r5, r4, r5, lsr #21
   34284:	rsblt	r5, r5, #0
   34288:	ble	342a8 <fb_value_set_visit@@Base+0x110>
   3428c:	add	r4, r4, r5
   34290:	eor	r2, r0, r2
   34294:	eor	r3, r1, r3
   34298:	eor	r0, r2, r0
   3429c:	eor	r1, r3, r1
   342a0:	eor	r2, r0, r2
   342a4:	eor	r3, r1, r3
   342a8:	cmp	r5, #54	; 0x36
   342ac:	pophi	{r4, r5, pc}
   342b0:	tst	r1, #-2147483648	; 0x80000000
   342b4:	lsl	r1, r1, #12
   342b8:	mov	ip, #1048576	; 0x100000
   342bc:	orr	r1, ip, r1, lsr #12
   342c0:	beq	342cc <fb_value_set_visit@@Base+0x134>
   342c4:	rsbs	r0, r0, #0
   342c8:	rsc	r1, r1, #0
   342cc:	tst	r3, #-2147483648	; 0x80000000
   342d0:	lsl	r3, r3, #12
   342d4:	orr	r3, ip, r3, lsr #12
   342d8:	beq	342e4 <fb_value_set_visit@@Base+0x14c>
   342dc:	rsbs	r2, r2, #0
   342e0:	rsc	r3, r3, #0
   342e4:	teq	r4, r5
   342e8:	beq	3444c <fb_value_set_visit@@Base+0x2b4>
   342ec:	sub	r4, r4, #1
   342f0:	rsbs	lr, r5, #32
   342f4:	blt	34310 <fb_value_set_visit@@Base+0x178>
   342f8:	lsl	ip, r2, lr
   342fc:	adds	r0, r0, r2, lsr r5
   34300:	adc	r1, r1, #0
   34304:	adds	r0, r0, r3, lsl lr
   34308:	adcs	r1, r1, r3, asr r5
   3430c:	b	3432c <fb_value_set_visit@@Base+0x194>
   34310:	sub	r5, r5, #32
   34314:	add	lr, lr, #32
   34318:	cmp	r2, #1
   3431c:	lsl	ip, r3, lr
   34320:	orrcs	ip, ip, #2
   34324:	adds	r0, r0, r3, asr r5
   34328:	adcs	r1, r1, r3, asr #31
   3432c:	and	r5, r1, #-2147483648	; 0x80000000
   34330:	bpl	34340 <fb_value_set_visit@@Base+0x1a8>
   34334:	rsbs	ip, ip, #0
   34338:	rscs	r0, r0, #0
   3433c:	rsc	r1, r1, #0
   34340:	cmp	r1, #1048576	; 0x100000
   34344:	bcc	34384 <fb_value_set_visit@@Base+0x1ec>
   34348:	cmp	r1, #2097152	; 0x200000
   3434c:	bcc	3436c <fb_value_set_visit@@Base+0x1d4>
   34350:	lsrs	r1, r1, #1
   34354:	rrxs	r0, r0
   34358:	rrx	ip, ip
   3435c:	add	r4, r4, #1
   34360:	lsl	r2, r4, #21
   34364:	cmn	r2, #4194304	; 0x400000
   34368:	bcs	344c4 <fb_value_set_visit@@Base+0x32c>
   3436c:	cmp	ip, #-2147483648	; 0x80000000
   34370:	lsrseq	ip, r0, #1
   34374:	adcs	r0, r0, #0
   34378:	adc	r1, r1, r4, lsl #20
   3437c:	orr	r1, r1, r5
   34380:	pop	{r4, r5, pc}
   34384:	lsls	ip, ip, #1
   34388:	adcs	r0, r0, r0
   3438c:	adc	r1, r1, r1
   34390:	tst	r1, #1048576	; 0x100000
   34394:	sub	r4, r4, #1
   34398:	bne	3436c <fb_value_set_visit@@Base+0x1d4>
   3439c:	teq	r1, #0
   343a0:	moveq	r1, r0
   343a4:	moveq	r0, #0
   343a8:	clz	r3, r1
   343ac:	addeq	r3, r3, #32
   343b0:	sub	r3, r3, #11
   343b4:	subs	r2, r3, #32
   343b8:	bge	343dc <fb_value_set_visit@@Base+0x244>
   343bc:	adds	r2, r2, #12
   343c0:	ble	343d8 <fb_value_set_visit@@Base+0x240>
   343c4:	add	ip, r2, #20
   343c8:	rsb	r2, r2, #12
   343cc:	lsl	r0, r1, ip
   343d0:	lsr	r1, r1, r2
   343d4:	b	343ec <fb_value_set_visit@@Base+0x254>
   343d8:	add	r2, r2, #20
   343dc:	rsble	ip, r2, #32
   343e0:	lsl	r1, r1, r2
   343e4:	orrle	r1, r1, r0, lsr ip
   343e8:	lslle	r0, r0, r2
   343ec:	subs	r4, r4, r3
   343f0:	addge	r1, r1, r4, lsl #20
   343f4:	orrge	r1, r1, r5
   343f8:	popge	{r4, r5, pc}
   343fc:	mvn	r4, r4
   34400:	subs	r4, r4, #31
   34404:	bge	34440 <fb_value_set_visit@@Base+0x2a8>
   34408:	adds	r4, r4, #12
   3440c:	bgt	34428 <fb_value_set_visit@@Base+0x290>
   34410:	add	r4, r4, #20
   34414:	rsb	r2, r4, #32
   34418:	lsr	r0, r0, r4
   3441c:	orr	r0, r0, r1, lsl r2
   34420:	orr	r1, r5, r1, lsr r4
   34424:	pop	{r4, r5, pc}
   34428:	rsb	r4, r4, #12
   3442c:	rsb	r2, r4, #32
   34430:	lsr	r0, r0, r2
   34434:	orr	r0, r0, r1, lsl r4
   34438:	mov	r1, r5
   3443c:	pop	{r4, r5, pc}
   34440:	lsr	r0, r1, r4
   34444:	mov	r1, r5
   34448:	pop	{r4, r5, pc}
   3444c:	teq	r4, #0
   34450:	eor	r3, r3, #1048576	; 0x100000
   34454:	eoreq	r1, r1, #1048576	; 0x100000
   34458:	addeq	r4, r4, #1
   3445c:	subne	r5, r5, #1
   34460:	b	342ec <fb_value_set_visit@@Base+0x154>
   34464:	mvns	ip, r4, asr #21
   34468:	mvnsne	ip, r5, asr #21
   3446c:	beq	344d4 <fb_value_set_visit@@Base+0x33c>
   34470:	teq	r4, r5
   34474:	teqeq	r0, r2
   34478:	beq	3448c <fb_value_set_visit@@Base+0x2f4>
   3447c:	orrs	ip, r4, r0
   34480:	moveq	r1, r3
   34484:	moveq	r0, r2
   34488:	pop	{r4, r5, pc}
   3448c:	teq	r1, r3
   34490:	movne	r1, #0
   34494:	movne	r0, #0
   34498:	popne	{r4, r5, pc}
   3449c:	lsrs	ip, r4, #21
   344a0:	bne	344b4 <fb_value_set_visit@@Base+0x31c>
   344a4:	lsls	r0, r0, #1
   344a8:	adcs	r1, r1, r1
   344ac:	orrcs	r1, r1, #-2147483648	; 0x80000000
   344b0:	pop	{r4, r5, pc}
   344b4:	adds	r4, r4, #4194304	; 0x400000
   344b8:	addcc	r1, r1, #1048576	; 0x100000
   344bc:	popcc	{r4, r5, pc}
   344c0:	and	r5, r1, #-2147483648	; 0x80000000
   344c4:	orr	r1, r5, #2130706432	; 0x7f000000
   344c8:	orr	r1, r1, #15728640	; 0xf00000
   344cc:	mov	r0, #0
   344d0:	pop	{r4, r5, pc}
   344d4:	mvns	ip, r4, asr #21
   344d8:	movne	r1, r3
   344dc:	movne	r0, r2
   344e0:	mvnseq	ip, r5, asr #21
   344e4:	movne	r3, r1
   344e8:	movne	r2, r0
   344ec:	orrs	r4, r0, r1, lsl #12
   344f0:	orrseq	r5, r2, r3, lsl #12
   344f4:	teqeq	r1, r3
   344f8:	orrne	r1, r1, #524288	; 0x80000
   344fc:	pop	{r4, r5, pc}
   34500:	teq	r0, #0
   34504:	moveq	r1, #0
   34508:	bxeq	lr
   3450c:	push	{r4, r5, lr}
   34510:	mov	r4, #1024	; 0x400
   34514:	add	r4, r4, #50	; 0x32
   34518:	mov	r5, #0
   3451c:	mov	r1, #0
   34520:	b	3439c <fb_value_set_visit@@Base+0x204>
   34524:	teq	r0, #0
   34528:	moveq	r1, #0
   3452c:	bxeq	lr
   34530:	push	{r4, r5, lr}
   34534:	mov	r4, #1024	; 0x400
   34538:	add	r4, r4, #50	; 0x32
   3453c:	ands	r5, r0, #-2147483648	; 0x80000000
   34540:	rsbmi	r0, r0, #0
   34544:	mov	r1, #0
   34548:	b	3439c <fb_value_set_visit@@Base+0x204>
   3454c:	lsls	r2, r0, #1
   34550:	asr	r1, r2, #3
   34554:	rrx	r1, r1
   34558:	lsl	r0, r2, #28
   3455c:	andsne	r3, r2, #-16777216	; 0xff000000
   34560:	teqne	r3, #-16777216	; 0xff000000
   34564:	eorne	r1, r1, #939524096	; 0x38000000
   34568:	bxne	lr
   3456c:	bics	r2, r2, #-16777216	; 0xff000000
   34570:	bxeq	lr
   34574:	teq	r3, #-16777216	; 0xff000000
   34578:	orreq	r1, r1, #524288	; 0x80000
   3457c:	bxeq	lr
   34580:	push	{r4, r5, lr}
   34584:	mov	r4, #896	; 0x380
   34588:	and	r5, r1, #-2147483648	; 0x80000000
   3458c:	bic	r1, r1, #-2147483648	; 0x80000000
   34590:	b	3439c <fb_value_set_visit@@Base+0x204>
   34594:	orrs	r2, r0, r1
   34598:	bxeq	lr
   3459c:	push	{r4, r5, lr}
   345a0:	mov	r5, #0
   345a4:	b	345c4 <fb_value_set_visit@@Base+0x42c>
   345a8:	orrs	r2, r0, r1
   345ac:	bxeq	lr
   345b0:	push	{r4, r5, lr}
   345b4:	ands	r5, r1, #-2147483648	; 0x80000000
   345b8:	bpl	345c4 <fb_value_set_visit@@Base+0x42c>
   345bc:	rsbs	r0, r0, #0
   345c0:	rsc	r1, r1, #0
   345c4:	mov	r4, #1024	; 0x400
   345c8:	add	r4, r4, #50	; 0x32
   345cc:	lsrs	ip, r1, #22
   345d0:	beq	34340 <fb_value_set_visit@@Base+0x1a8>
   345d4:	mov	r2, #3
   345d8:	lsrs	ip, ip, #3
   345dc:	addne	r2, r2, #3
   345e0:	lsrs	ip, ip, #3
   345e4:	addne	r2, r2, #3
   345e8:	add	r2, r2, ip, lsr #3
   345ec:	rsb	r3, r2, #32
   345f0:	lsl	ip, r0, r3
   345f4:	lsr	r0, r0, r2
   345f8:	orr	r0, r0, r1, lsl r3
   345fc:	lsr	r1, r1, r2
   34600:	add	r4, r4, r2
   34604:	b	34340 <fb_value_set_visit@@Base+0x1a8>
   34608:	eor	r0, r0, #-2147483648	; 0x80000000
   3460c:	b	34614 <fb_value_set_visit@@Base+0x47c>
   34610:	eor	r1, r1, #-2147483648	; 0x80000000
   34614:	lsls	r2, r0, #1
   34618:	lslsne	r3, r1, #1
   3461c:	teqne	r2, r3
   34620:	mvnsne	ip, r2, asr #24
   34624:	mvnsne	ip, r3, asr #24
   34628:	beq	34720 <fb_value_set_visit@@Base+0x588>
   3462c:	lsr	r2, r2, #24
   34630:	rsbs	r3, r2, r3, lsr #24
   34634:	addgt	r2, r2, r3
   34638:	eorgt	r1, r0, r1
   3463c:	eorgt	r0, r1, r0
   34640:	eorgt	r1, r0, r1
   34644:	rsblt	r3, r3, #0
   34648:	cmp	r3, #25
   3464c:	bxhi	lr
   34650:	tst	r0, #-2147483648	; 0x80000000
   34654:	orr	r0, r0, #8388608	; 0x800000
   34658:	bic	r0, r0, #-16777216	; 0xff000000
   3465c:	rsbne	r0, r0, #0
   34660:	tst	r1, #-2147483648	; 0x80000000
   34664:	orr	r1, r1, #8388608	; 0x800000
   34668:	bic	r1, r1, #-16777216	; 0xff000000
   3466c:	rsbne	r1, r1, #0
   34670:	teq	r2, r3
   34674:	beq	34708 <fb_value_set_visit@@Base+0x570>
   34678:	sub	r2, r2, #1
   3467c:	adds	r0, r0, r1, asr r3
   34680:	rsb	r3, r3, #32
   34684:	lsl	r1, r1, r3
   34688:	and	r3, r0, #-2147483648	; 0x80000000
   3468c:	bpl	34698 <fb_value_set_visit@@Base+0x500>
   34690:	rsbs	r1, r1, #0
   34694:	rsc	r0, r0, #0
   34698:	cmp	r0, #8388608	; 0x800000
   3469c:	bcc	346d0 <fb_value_set_visit@@Base+0x538>
   346a0:	cmp	r0, #16777216	; 0x1000000
   346a4:	bcc	346bc <fb_value_set_visit@@Base+0x524>
   346a8:	lsrs	r0, r0, #1
   346ac:	rrx	r1, r1
   346b0:	add	r2, r2, #1
   346b4:	cmp	r2, #254	; 0xfe
   346b8:	bcs	34774 <fb_value_set_visit@@Base+0x5dc>
   346bc:	cmp	r1, #-2147483648	; 0x80000000
   346c0:	adc	r0, r0, r2, lsl #23
   346c4:	biceq	r0, r0, #1
   346c8:	orr	r0, r0, r3
   346cc:	bx	lr
   346d0:	lsls	r1, r1, #1
   346d4:	adc	r0, r0, r0
   346d8:	tst	r0, #8388608	; 0x800000
   346dc:	sub	r2, r2, #1
   346e0:	bne	346bc <fb_value_set_visit@@Base+0x524>
   346e4:	clz	ip, r0
   346e8:	sub	ip, ip, #8
   346ec:	subs	r2, r2, ip
   346f0:	lsl	r0, r0, ip
   346f4:	addge	r0, r0, r2, lsl #23
   346f8:	rsblt	r2, r2, #0
   346fc:	orrge	r0, r0, r3
   34700:	orrlt	r0, r3, r0, lsr r2
   34704:	bx	lr
   34708:	teq	r2, #0
   3470c:	eor	r1, r1, #8388608	; 0x800000
   34710:	eoreq	r0, r0, #8388608	; 0x800000
   34714:	addeq	r2, r2, #1
   34718:	subne	r3, r3, #1
   3471c:	b	34678 <fb_value_set_visit@@Base+0x4e0>
   34720:	lsl	r3, r1, #1
   34724:	mvns	ip, r2, asr #24
   34728:	mvnsne	ip, r3, asr #24
   3472c:	beq	34780 <fb_value_set_visit@@Base+0x5e8>
   34730:	teq	r2, r3
   34734:	beq	34744 <fb_value_set_visit@@Base+0x5ac>
   34738:	teq	r2, #0
   3473c:	moveq	r0, r1
   34740:	bx	lr
   34744:	teq	r0, r1
   34748:	movne	r0, #0
   3474c:	bxne	lr
   34750:	tst	r2, #-16777216	; 0xff000000
   34754:	bne	34764 <fb_value_set_visit@@Base+0x5cc>
   34758:	lsls	r0, r0, #1
   3475c:	orrcs	r0, r0, #-2147483648	; 0x80000000
   34760:	bx	lr
   34764:	adds	r2, r2, #33554432	; 0x2000000
   34768:	addcc	r0, r0, #8388608	; 0x800000
   3476c:	bxcc	lr
   34770:	and	r3, r0, #-2147483648	; 0x80000000
   34774:	orr	r0, r3, #2130706432	; 0x7f000000
   34778:	orr	r0, r0, #8388608	; 0x800000
   3477c:	bx	lr
   34780:	mvns	r2, r2, asr #24
   34784:	movne	r0, r1
   34788:	mvnseq	r3, r3, asr #24
   3478c:	movne	r1, r0
   34790:	lsls	r2, r0, #9
   34794:	lslseq	r3, r1, #9
   34798:	teqeq	r0, r1
   3479c:	orrne	r0, r0, #4194304	; 0x400000
   347a0:	bx	lr
   347a4:	mov	r3, #0
   347a8:	b	347b4 <fb_value_set_visit@@Base+0x61c>
   347ac:	ands	r3, r0, #-2147483648	; 0x80000000
   347b0:	rsbmi	r0, r0, #0
   347b4:	movs	ip, r0
   347b8:	bxeq	lr
   347bc:	orr	r3, r3, #1258291200	; 0x4b000000
   347c0:	mov	r1, r0
   347c4:	mov	r0, #0
   347c8:	b	3480c <fb_value_set_visit@@Base+0x674>
   347cc:	orrs	r2, r0, r1
   347d0:	bxeq	lr
   347d4:	mov	r3, #0
   347d8:	b	347f4 <fb_value_set_visit@@Base+0x65c>
   347dc:	orrs	r2, r0, r1
   347e0:	bxeq	lr
   347e4:	ands	r3, r1, #-2147483648	; 0x80000000
   347e8:	bpl	347f4 <fb_value_set_visit@@Base+0x65c>
   347ec:	rsbs	r0, r0, #0
   347f0:	rsc	r1, r1, #0
   347f4:	movs	ip, r1
   347f8:	moveq	ip, r0
   347fc:	moveq	r1, r0
   34800:	moveq	r0, #0
   34804:	orr	r3, r3, #1526726656	; 0x5b000000
   34808:	subeq	r3, r3, #268435456	; 0x10000000
   3480c:	sub	r3, r3, #8388608	; 0x800000
   34810:	clz	r2, ip
   34814:	subs	r2, r2, #8
   34818:	sub	r3, r3, r2, lsl #23
   3481c:	blt	3483c <fb_value_set_visit@@Base+0x6a4>
   34820:	add	r3, r3, r1, lsl r2
   34824:	lsl	ip, r0, r2
   34828:	rsb	r2, r2, #32
   3482c:	cmp	ip, #-2147483648	; 0x80000000
   34830:	adc	r0, r3, r0, lsr r2
   34834:	biceq	r0, r0, #1
   34838:	bx	lr
   3483c:	add	r2, r2, #32
   34840:	lsl	ip, r1, r2
   34844:	rsb	r2, r2, #32
   34848:	orrs	r0, r0, ip, lsl #1
   3484c:	adc	r0, r3, r1, lsr r2
   34850:	biceq	r0, r0, ip, lsr #31
   34854:	bx	lr
   34858:	cmp	r3, #0
   3485c:	cmpeq	r2, #0
   34860:	bne	34878 <fb_value_set_visit@@Base+0x6e0>
   34864:	cmp	r1, #0
   34868:	cmpeq	r0, #0
   3486c:	mvnne	r1, #0
   34870:	mvnne	r0, #0
   34874:	b	34894 <fb_value_set_visit@@Base+0x6fc>
   34878:	sub	sp, sp, #8
   3487c:	push	{sp, lr}
   34880:	bl	34980 <fb_value_set_visit@@Base+0x7e8>
   34884:	ldr	lr, [sp, #4]
   34888:	add	sp, sp, #8
   3488c:	pop	{r2, r3}
   34890:	bx	lr
   34894:	push	{r1, lr}
   34898:	mov	r0, #8
   3489c:	bl	148dc <raise@plt>
   348a0:	pop	{r1, pc}
   348a4:	vmov	s15, r0
   348a8:	vcmpe.f32	s15, #0.0
   348ac:	vmrs	APSR_nzcv, fpscr
   348b0:	bmi	348b8 <fb_value_set_visit@@Base+0x720>
   348b4:	b	34900 <fb_value_set_visit@@Base+0x768>
   348b8:	push	{r4, lr}
   348bc:	eor	r0, r0, #-2147483648	; 0x80000000
   348c0:	bl	34900 <fb_value_set_visit@@Base+0x768>
   348c4:	rsbs	r0, r0, #0
   348c8:	rsc	r1, r1, #0
   348cc:	pop	{r4, pc}
   348d0:	vmov	d7, r0, r1
   348d4:	vcmpe.f64	d7, #0.0
   348d8:	vmrs	APSR_nzcv, fpscr
   348dc:	bmi	348e4 <fb_value_set_visit@@Base+0x74c>
   348e0:	b	34940 <fb_value_set_visit@@Base+0x7a8>
   348e4:	push	{r4, lr}
   348e8:	eor	r1, r1, #-2147483648	; 0x80000000
   348ec:	bl	34940 <fb_value_set_visit@@Base+0x7a8>
   348f0:	rsbs	r0, r0, #0
   348f4:	rsc	r1, r1, #0
   348f8:	pop	{r4, pc}
   348fc:	andeq	r0, r0, r0
   34900:	vmov	s15, r0
   34904:	vldr	d5, [pc, #36]	; 34930 <fb_value_set_visit@@Base+0x798>
   34908:	vcvt.f64.f32	d6, s15
   3490c:	vldr	d7, [pc, #36]	; 34938 <fb_value_set_visit@@Base+0x7a0>
   34910:	vmul.f64	d7, d6, d7
   34914:	vcvt.u32.f64	s14, d7
   34918:	vcvt.f64.u32	d4, s14
   3491c:	vmov	r1, s14
   34920:	vmls.f64	d6, d4, d5
   34924:	vcvt.u32.f64	s15, d6
   34928:	vmov	r0, s15
   3492c:	bx	lr
   34930:	andeq	r0, r0, r0
   34934:	mvnsmi	r0, r0
   34938:	andeq	r0, r0, r0
   3493c:	ldclcc	0, cr0, [r0]
   34940:	vmov	d6, r0, r1
   34944:	vldr	d7, [pc, #36]	; 34970 <fb_value_set_visit@@Base+0x7d8>
   34948:	vldr	d5, [pc, #40]	; 34978 <fb_value_set_visit@@Base+0x7e0>
   3494c:	vmul.f64	d7, d6, d7
   34950:	vcvt.u32.f64	s14, d7
   34954:	vcvt.f64.u32	d4, s14
   34958:	vmov	r1, s14
   3495c:	vmls.f64	d6, d4, d5
   34960:	vcvt.u32.f64	s15, d6
   34964:	vmov	r0, s15
   34968:	bx	lr
   3496c:	nop			; (mov r0, r0)
   34970:	andeq	r0, r0, r0
   34974:	ldclcc	0, cr0, [r0]
   34978:	andeq	r0, r0, r0
   3497c:	mvnsmi	r0, r0
   34980:	cmp	r1, r3
   34984:	cmpeq	r0, r2
   34988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3498c:	mov	r4, r0
   34990:	movcc	r0, #0
   34994:	mov	r5, r1
   34998:	ldr	lr, [sp, #36]	; 0x24
   3499c:	movcc	r1, r0
   349a0:	bcc	34a9c <fb_value_set_visit@@Base+0x904>
   349a4:	cmp	r3, #0
   349a8:	clzeq	ip, r2
   349ac:	clzne	ip, r3
   349b0:	addeq	ip, ip, #32
   349b4:	cmp	r5, #0
   349b8:	clzeq	r1, r4
   349bc:	addeq	r1, r1, #32
   349c0:	clzne	r1, r5
   349c4:	sub	ip, ip, r1
   349c8:	sub	sl, ip, #32
   349cc:	lsl	r9, r3, ip
   349d0:	rsb	fp, ip, #32
   349d4:	orr	r9, r9, r2, lsl sl
   349d8:	orr	r9, r9, r2, lsr fp
   349dc:	lsl	r8, r2, ip
   349e0:	cmp	r5, r9
   349e4:	cmpeq	r4, r8
   349e8:	movcc	r0, #0
   349ec:	movcc	r1, r0
   349f0:	bcc	34a0c <fb_value_set_visit@@Base+0x874>
   349f4:	mov	r0, #1
   349f8:	subs	r4, r4, r8
   349fc:	lsl	r1, r0, sl
   34a00:	orr	r1, r1, r0, lsr fp
   34a04:	lsl	r0, r0, ip
   34a08:	sbc	r5, r5, r9
   34a0c:	cmp	ip, #0
   34a10:	beq	34a9c <fb_value_set_visit@@Base+0x904>
   34a14:	lsr	r6, r8, #1
   34a18:	orr	r6, r6, r9, lsl #31
   34a1c:	lsr	r7, r9, #1
   34a20:	mov	r2, ip
   34a24:	b	34a48 <fb_value_set_visit@@Base+0x8b0>
   34a28:	subs	r3, r4, r6
   34a2c:	sbc	r8, r5, r7
   34a30:	adds	r3, r3, r3
   34a34:	adc	r8, r8, r8
   34a38:	adds	r4, r3, #1
   34a3c:	adc	r5, r8, #0
   34a40:	subs	r2, r2, #1
   34a44:	beq	34a64 <fb_value_set_visit@@Base+0x8cc>
   34a48:	cmp	r5, r7
   34a4c:	cmpeq	r4, r6
   34a50:	bcs	34a28 <fb_value_set_visit@@Base+0x890>
   34a54:	adds	r4, r4, r4
   34a58:	adc	r5, r5, r5
   34a5c:	subs	r2, r2, #1
   34a60:	bne	34a48 <fb_value_set_visit@@Base+0x8b0>
   34a64:	lsr	r3, r4, ip
   34a68:	orr	r3, r3, r5, lsl fp
   34a6c:	lsr	r2, r5, ip
   34a70:	orr	r3, r3, r5, lsr sl
   34a74:	adds	r0, r0, r4
   34a78:	mov	r4, r3
   34a7c:	lsl	r3, r2, ip
   34a80:	orr	r3, r3, r4, lsl sl
   34a84:	lsl	ip, r4, ip
   34a88:	orr	r3, r3, r4, lsr fp
   34a8c:	adc	r1, r1, r5
   34a90:	subs	r0, r0, ip
   34a94:	mov	r5, r2
   34a98:	sbc	r1, r1, r3
   34a9c:	cmp	lr, #0
   34aa0:	strdne	r4, [lr]
   34aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034aa8 <__libc_csu_init@@Base>:
   34aa8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34aac:	mov	r7, r0
   34ab0:	ldr	r6, [pc, #72]	; 34b00 <__libc_csu_init@@Base+0x58>
   34ab4:	ldr	r5, [pc, #72]	; 34b04 <__libc_csu_init@@Base+0x5c>
   34ab8:	add	r6, pc, r6
   34abc:	add	r5, pc, r5
   34ac0:	sub	r6, r6, r5
   34ac4:	mov	r8, r1
   34ac8:	mov	r9, r2
   34acc:	bl	148b0 <calloc@plt-0x20>
   34ad0:	asrs	r6, r6, #2
   34ad4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34ad8:	mov	r4, #0
   34adc:	add	r4, r4, #1
   34ae0:	ldr	r3, [r5], #4
   34ae4:	mov	r2, r9
   34ae8:	mov	r1, r8
   34aec:	mov	r0, r7
   34af0:	blx	r3
   34af4:	cmp	r6, r4
   34af8:	bne	34adc <__libc_csu_init@@Base+0x34>
   34afc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34b00:	andeq	sp, r2, ip, asr #8
   34b04:	andeq	sp, r2, r4, asr #8

00034b08 <__libc_csu_fini@@Base>:
   34b08:	bx	lr

Disassembly of section .fini:

00034b0c <.fini>:
   34b0c:	push	{r3, lr}
   34b10:	pop	{r3, pc}
