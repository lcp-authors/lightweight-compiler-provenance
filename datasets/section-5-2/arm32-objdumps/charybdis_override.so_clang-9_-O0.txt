
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000718 <_init>:
 718:	push	{r3, lr}
 71c:	bl	804 <call_weak_fn>
 720:	pop	{r3, pc}

Disassembly of section .plt:

00000724 <.plt>:
 724:	push	{lr}		; (str lr, [sp, #-4]!)
 728:	ldr	lr, [pc, #4]	; 734 <.plt+0x10>
 72c:	add	lr, pc, lr
 730:	ldr	pc, [lr, #8]!
 734:	.word	0x000118cc

00000738 <calloc@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2252]!	; 0x8cc

00000744 <rb_current_time@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2244]!	; 0x8c4

00000750 <rb_event_add@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2236]!	; 0x8bc

0000075c <__cxa_finalize@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2228]!	; 0x8b4

00000768 <rb_event_delete@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2220]!	; 0x8ac

00000774 <free@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2212]!	; 0x8a4

00000780 <rb_outofmemory@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2204]!	; 0x89c

0000078c <user_mode@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2196]!	; 0x894

00000798 <sendto_realops_snomask@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2188]!	; 0x88c

000007a4 <find_umode_slot@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2180]!	; 0x884

000007b0 <get_oper_name@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2172]!	; 0x87c

000007bc <__gmon_start__@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2164]!	; 0x874

000007c8 <get_channel_access@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2156]!	; 0x86c

000007d4 <sendto_one_notice@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2148]!	; 0x864

000007e0 <privilegeset_in_set@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2140]!	; 0x85c

000007ec <__assert_fail@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2132]!	; 0x854

000007f8 <construct_umodebuf@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2124]!	; 0x84c

Disassembly of section .text:

00000804 <call_weak_fn>:
     804:	ldr	r3, [pc, #20]	; 820 <call_weak_fn+0x1c>
     808:	ldr	r2, [pc, #20]	; 824 <call_weak_fn+0x20>
     80c:	add	r3, pc, r3
     810:	ldr	r2, [r3, r2]
     814:	cmp	r2, #0
     818:	bxeq	lr
     81c:	b	7bc <__gmon_start__@plt>
     820:	.word	0x000117ec
     824:	.word	0x00000064

00000828 <deregister_tm_clones>:
     828:	ldr	r0, [pc, #44]	; 85c <deregister_tm_clones+0x34>
     82c:	ldr	r3, [pc, #44]	; 860 <deregister_tm_clones+0x38>
     830:	add	r0, pc, r0
     834:	add	r3, pc, r3
     838:	cmp	r3, r0
     83c:	ldr	r3, [pc, #32]	; 864 <deregister_tm_clones+0x3c>
     840:	add	r3, pc, r3
     844:	bxeq	lr
     848:	ldr	r2, [pc, #24]	; 868 <deregister_tm_clones+0x40>
     84c:	ldr	r3, [r3, r2]
     850:	cmp	r3, #0
     854:	bxeq	lr
     858:	bx	r3
     85c:	.word	0x000118b8
     860:	.word	0x000118b4
     864:	.word	0x000117b8
     868:	.word	0x00000058

0000086c <register_tm_clones>:
     86c:	ldr	r0, [pc, #56]	; 8ac <register_tm_clones+0x40>
     870:	ldr	r3, [pc, #56]	; 8b0 <register_tm_clones+0x44>
     874:	add	r0, pc, r0
     878:	add	r3, pc, r3
     87c:	sub	r1, r3, r0
     880:	ldr	r3, [pc, #44]	; 8b4 <register_tm_clones+0x48>
     884:	asr	r1, r1, #2
     888:	add	r3, pc, r3
     88c:	add	r1, r1, r1, lsr #31
     890:	asrs	r1, r1, #1
     894:	bxeq	lr
     898:	ldr	r2, [pc, #24]	; 8b8 <register_tm_clones+0x4c>
     89c:	ldr	r3, [r3, r2]
     8a0:	cmp	r3, #0
     8a4:	bxeq	lr
     8a8:	bx	r3
     8ac:	.word	0x00011874
     8b0:	.word	0x00011870
     8b4:	.word	0x00011770
     8b8:	.word	0x0000006c

000008bc <__do_global_dtors_aux>:
     8bc:	ldr	r3, [pc, #76]	; 910 <__do_global_dtors_aux+0x54>
     8c0:	ldr	r2, [pc, #76]	; 914 <__do_global_dtors_aux+0x58>
     8c4:	add	r3, pc, r3
     8c8:	add	r2, pc, r2
     8cc:	ldrb	r3, [r3]
     8d0:	cmp	r3, #0
     8d4:	bxne	lr
     8d8:	ldr	r3, [pc, #56]	; 918 <__do_global_dtors_aux+0x5c>
     8dc:	push	{r4, lr}
     8e0:	ldr	r3, [r2, r3]
     8e4:	cmp	r3, #0
     8e8:	beq	8f8 <__do_global_dtors_aux+0x3c>
     8ec:	ldr	r3, [pc, #40]	; 91c <__do_global_dtors_aux+0x60>
     8f0:	ldr	r0, [pc, r3]
     8f4:	bl	75c <__cxa_finalize@plt>
     8f8:	bl	828 <deregister_tm_clones>
     8fc:	ldr	r3, [pc, #28]	; 920 <__do_global_dtors_aux+0x64>
     900:	mov	r2, #1
     904:	add	r3, pc, r3
     908:	strb	r2, [r3]
     90c:	pop	{r4, pc}
     910:	.word	0x00011824
     914:	.word	0x00011730
     918:	.word	0x00000050
     91c:	.word	0x00011778
     920:	.word	0x000117e4

00000924 <frame_dummy>:
     924:	b	86c <register_tm_clones>

00000928 <check_umode_change>:
     928:	push	{fp, lr}
     92c:	mov	fp, sp
     930:	sub	sp, sp, #40	; 0x28
     934:	str	r0, [fp, #-4]
     938:	ldr	r0, [fp, #-4]
     93c:	str	r0, [fp, #-8]
     940:	mov	r0, #0
     944:	strb	r0, [fp, #-9]
     948:	ldr	r0, [fp, #-8]
     94c:	ldr	r0, [r0]
     950:	str	r0, [fp, #-16]
     954:	ldr	r0, [fp, #-16]
     958:	ldrb	r0, [r0, #65]	; 0x41
     95c:	tst	r0, #32
     960:	beq	978 <check_umode_change+0x50>
     964:	b	968 <check_umode_change+0x40>
     968:	ldr	r0, [fp, #-16]
     96c:	ldrh	r0, [r0, #80]	; 0x50
     970:	cmp	r0, #64	; 0x40
     974:	beq	97c <check_umode_change+0x54>
     978:	b	bbc <check_umode_change+0x294>
     97c:	ldr	r0, [fp, #-8]
     980:	ldr	r0, [r0, #4]
     984:	and	r0, r0, #4096	; 0x1000
     988:	cmp	r0, #0
     98c:	beq	9c8 <check_umode_change+0xa0>
     990:	ldr	r0, [fp, #-16]
     994:	ldr	r0, [r0, #56]	; 0x38
     998:	and	r0, r0, #4096	; 0x1000
     99c:	cmp	r0, #0
     9a0:	bne	9c8 <check_umode_change+0xa0>
     9a4:	ldr	r0, [pc, #536]	; bc4 <check_umode_change+0x29c>
     9a8:	ldr	r0, [pc, r0]
     9ac:	ldr	r0, [r0, #448]	; 0x1c0
     9b0:	mvn	r1, #0
     9b4:	eor	r0, r0, r1
     9b8:	ldr	r1, [fp, #-16]
     9bc:	ldr	r2, [r1, #56]	; 0x38
     9c0:	and	r0, r2, r0
     9c4:	str	r0, [r1, #56]	; 0x38
     9c8:	ldr	r0, [pc, #504]	; bc8 <check_umode_change+0x2a0>
     9cc:	ldr	r0, [pc, r0]
     9d0:	ldr	r1, [fp, #-8]
     9d4:	ldr	r1, [r1, #4]
     9d8:	ldr	r2, [fp, #-16]
     9dc:	ldr	r2, [r2, #56]	; 0x38
     9e0:	eor	r1, r1, r2
     9e4:	ldr	r2, [r0, #448]	; 0x1c0
     9e8:	and	r1, r1, r2
     9ec:	cmp	r1, #0
     9f0:	movw	r1, #0
     9f4:	movne	r1, #1
     9f8:	and	r1, r1, #1
     9fc:	strb	r1, [fp, #-9]
     a00:	ldr	r1, [fp, #-16]
     a04:	ldr	r1, [r1, #56]	; 0x38
     a08:	ldr	r0, [r0, #448]	; 0x1c0
     a0c:	and	r0, r1, r0
     a10:	cmp	r0, #0
     a14:	beq	ab8 <check_umode_change+0x190>
     a18:	ldr	r0, [fp, #-16]
     a1c:	ldr	r0, [r0, #24]
     a20:	movw	r1, #0
     a24:	cmp	r0, r1
     a28:	beq	a64 <check_umode_change+0x13c>
     a2c:	ldr	r0, [fp, #-16]
     a30:	ldr	r0, [r0, #24]
     a34:	ldr	r0, [r0, #36]	; 0x24
     a38:	movw	r1, #0
     a3c:	cmp	r0, r1
     a40:	beq	a64 <check_umode_change+0x13c>
     a44:	ldr	r0, [pc, #396]	; bd8 <check_umode_change+0x2b0>
     a48:	add	r1, pc, r0
     a4c:	ldr	r0, [fp, #-16]
     a50:	ldr	r0, [r0, #24]
     a54:	ldr	r0, [r0, #36]	; 0x24
     a58:	bl	7e0 <privilegeset_in_set@plt>
     a5c:	cmp	r0, #0
     a60:	bne	a9c <check_umode_change+0x174>
     a64:	ldr	r0, [pc, #372]	; be0 <check_umode_change+0x2b8>
     a68:	add	r1, pc, r0
     a6c:	ldr	r0, [fp, #-16]
     a70:	bl	7d4 <sendto_one_notice@plt>
     a74:	ldr	r0, [pc, #352]	; bdc <check_umode_change+0x2b4>
     a78:	ldr	r0, [pc, r0]
     a7c:	ldr	r0, [r0, #448]	; 0x1c0
     a80:	mvn	r1, #0
     a84:	eor	r0, r0, r1
     a88:	ldr	r1, [fp, #-16]
     a8c:	ldr	r2, [r1, #56]	; 0x38
     a90:	and	r0, r2, r0
     a94:	str	r0, [r1, #56]	; 0x38
     a98:	b	bbc <check_umode_change+0x294>
     a9c:	ldrb	r0, [fp, #-9]
     aa0:	tst	r0, #1
     aa4:	beq	ab4 <check_umode_change+0x18c>
     aa8:	ldr	r0, [fp, #-16]
     aac:	movw	r1, #0
     ab0:	bl	12b0 <update_session_deadline>
     ab4:	b	bbc <check_umode_change+0x294>
     ab8:	ldrb	r0, [fp, #-9]
     abc:	tst	r0, #1
     ac0:	beq	bb8 <check_umode_change+0x290>
     ac4:	ldr	r0, [pc, #256]	; bcc <check_umode_change+0x2a4>
     ac8:	ldr	r0, [pc, r0]
     acc:	ldr	r1, [fp, #-16]
     ad0:	ldr	r1, [r1, #56]	; 0x38
     ad4:	ldr	r0, [r0, #448]	; 0x1c0
     ad8:	and	r0, r1, r0
     adc:	cmp	r0, #0
     ae0:	bne	bb8 <check_umode_change+0x290>
     ae4:	ldr	r0, [pc, #228]	; bd0 <check_umode_change+0x2a8>
     ae8:	ldr	r0, [pc, r0]
     aec:	ldr	r0, [r0]
     af0:	str	r0, [sp, #20]
     af4:	ldr	r0, [sp, #20]
     af8:	movw	r1, #0
     afc:	cmp	r0, r1
     b00:	beq	b14 <check_umode_change+0x1ec>
     b04:	ldr	r0, [sp, #20]
     b08:	ldr	r0, [r0, #8]
     b0c:	str	r0, [sp, #8]
     b10:	b	b20 <check_umode_change+0x1f8>
     b14:	movw	r0, #0
     b18:	str	r0, [sp, #8]
     b1c:	b	b20 <check_umode_change+0x1f8>
     b20:	ldr	r0, [sp, #8]
     b24:	str	r0, [sp, #16]
     b28:	ldr	r0, [sp, #20]
     b2c:	movw	r1, #0
     b30:	cmp	r0, r1
     b34:	beq	bb4 <check_umode_change+0x28c>
     b38:	ldr	r0, [sp, #20]
     b3c:	ldr	r0, [r0]
     b40:	str	r0, [sp, #12]
     b44:	ldr	r0, [sp, #12]
     b48:	ldr	r0, [r0, #12]
     b4c:	ldr	r1, [fp, #-16]
     b50:	cmp	r0, r1
     b54:	beq	b5c <check_umode_change+0x234>
     b58:	b	b74 <check_umode_change+0x24c>
     b5c:	ldr	r0, [pc, #112]	; bd4 <check_umode_change+0x2ac>
     b60:	ldr	r1, [pc, r0]
     b64:	ldr	r0, [sp, #20]
     b68:	bl	13ac <rb_dlinkDelete>
     b6c:	ldr	r0, [sp, #12]
     b70:	bl	14e8 <rb_free>
     b74:	ldr	r0, [sp, #16]
     b78:	str	r0, [sp, #20]
     b7c:	ldr	r0, [sp, #20]
     b80:	movw	r1, #0
     b84:	cmp	r0, r1
     b88:	beq	b9c <check_umode_change+0x274>
     b8c:	ldr	r0, [sp, #20]
     b90:	ldr	r0, [r0, #8]
     b94:	str	r0, [sp, #4]
     b98:	b	ba8 <check_umode_change+0x280>
     b9c:	movw	r0, #0
     ba0:	str	r0, [sp, #4]
     ba4:	b	ba8 <check_umode_change+0x280>
     ba8:	ldr	r0, [sp, #4]
     bac:	str	r0, [sp, #16]
     bb0:	b	b28 <check_umode_change+0x200>
     bb4:	b	bb8 <check_umode_change+0x290>
     bb8:	b	bbc <check_umode_change+0x294>
     bbc:	mov	sp, fp
     bc0:	pop	{fp, pc}
     bc4:	.word	0x000116b0
     bc8:	.word	0x0001168c
     bcc:	.word	0x00011590
     bd0:	.word	0x00011564
     bd4:	.word	0x000114ec
     bd8:	.word	0x00000e48
     bdc:	.word	0x000115e0
     be0:	.word	0x00000e36

00000be4 <hack_channel_access>:
     be4:	push	{r4, sl, fp, lr}
     be8:	add	fp, sp, #8
     bec:	sub	sp, sp, #32
     bf0:	str	r0, [fp, #-12]
     bf4:	ldr	r0, [fp, #-12]
     bf8:	str	r0, [fp, #-16]
     bfc:	ldr	r0, [fp, #-16]
     c00:	ldr	r0, [r0, #20]
     c04:	cmp	r0, #0
     c08:	bne	c10 <hack_channel_access+0x2c>
     c0c:	b	cd8 <hack_channel_access+0xf4>
     c10:	ldr	r0, [fp, #-16]
     c14:	ldr	r0, [r0, #16]
     c18:	cmp	r0, #2
     c1c:	bne	c24 <hack_channel_access+0x40>
     c20:	b	cd8 <hack_channel_access+0xf4>
     c24:	ldr	r0, [pc, #180]	; ce0 <hack_channel_access+0xfc>
     c28:	ldr	r0, [pc, r0]
     c2c:	ldr	r1, [fp, #-16]
     c30:	ldr	r1, [r1]
     c34:	ldr	r1, [r1, #56]	; 0x38
     c38:	ldr	r0, [r0, #448]	; 0x1c0
     c3c:	and	r0, r1, r0
     c40:	cmp	r0, #0
     c44:	beq	cd8 <hack_channel_access+0xf4>
     c48:	ldr	r0, [fp, #-16]
     c4c:	ldr	r0, [r0]
     c50:	movw	r1, #0
     c54:	bl	12b0 <update_session_deadline>
     c58:	ldr	r0, [fp, #-16]
     c5c:	movw	r1, #4
     c60:	str	r1, [r0, #16]
     c64:	ldr	r0, [fp, #-16]
     c68:	ldr	r0, [r0, #24]
     c6c:	movw	r1, #0
     c70:	cmp	r0, r1
     c74:	beq	cd4 <hack_channel_access+0xf0>
     c78:	ldr	r0, [fp, #-16]
     c7c:	ldr	r0, [r0]
     c80:	bl	7b0 <get_oper_name@plt>
     c84:	ldr	r1, [pc, #88]	; ce4 <hack_channel_access+0x100>
     c88:	add	r2, pc, r1
     c8c:	ldr	r1, [fp, #-16]
     c90:	ldr	r1, [r1, #4]
     c94:	ldr	r1, [r1, #236]	; 0xec
     c98:	ldr	r3, [fp, #-16]
     c9c:	ldr	r3, [r3, #24]
     ca0:	movw	ip, #256	; 0x100
     ca4:	str	r0, [sp, #20]
     ca8:	mov	r0, ip
     cac:	str	r1, [sp, #16]
     cb0:	mov	r1, ip
     cb4:	ldr	ip, [sp, #20]
     cb8:	str	r3, [sp, #12]
     cbc:	mov	r3, ip
     cc0:	ldr	lr, [sp, #16]
     cc4:	str	lr, [sp]
     cc8:	ldr	r4, [sp, #12]
     ccc:	str	r4, [sp, #4]
     cd0:	bl	798 <sendto_realops_snomask@plt>
     cd4:	b	cd8 <hack_channel_access+0xf4>
     cd8:	sub	sp, fp, #8
     cdc:	pop	{r4, sl, fp, pc}
     ce0:	.word	0x00011430
     ce4:	.word	0x00000cf4

00000ce8 <hack_can_join>:
     ce8:	push	{fp, lr}
     cec:	mov	fp, sp
     cf0:	sub	sp, sp, #24
     cf4:	str	r0, [fp, #-4]
     cf8:	ldr	r0, [fp, #-4]
     cfc:	str	r0, [fp, #-8]
     d00:	ldr	r0, [fp, #-8]
     d04:	ldr	r0, [r0, #8]
     d08:	cmp	r0, #0
     d0c:	bne	d14 <hack_can_join+0x2c>
     d10:	b	d98 <hack_can_join+0xb0>
     d14:	ldr	r0, [pc, #132]	; da0 <hack_can_join+0xb8>
     d18:	ldr	r0, [pc, r0]
     d1c:	ldr	r1, [fp, #-8]
     d20:	ldr	r1, [r1]
     d24:	ldr	r1, [r1, #56]	; 0x38
     d28:	ldr	r0, [r0, #448]	; 0x1c0
     d2c:	and	r0, r1, r0
     d30:	cmp	r0, #0
     d34:	beq	d98 <hack_can_join+0xb0>
     d38:	ldr	r0, [fp, #-8]
     d3c:	ldr	r0, [r0]
     d40:	movw	r1, #0
     d44:	bl	12b0 <update_session_deadline>
     d48:	ldr	r0, [fp, #-8]
     d4c:	movw	r1, #0
     d50:	str	r1, [r0, #8]
     d54:	ldr	r0, [fp, #-8]
     d58:	ldr	r0, [r0]
     d5c:	bl	7b0 <get_oper_name@plt>
     d60:	ldr	r1, [pc, #60]	; da4 <hack_can_join+0xbc>
     d64:	add	r2, pc, r1
     d68:	ldr	r1, [fp, #-8]
     d6c:	ldr	r1, [r1, #4]
     d70:	ldr	r1, [r1, #236]	; 0xec
     d74:	movw	r3, #256	; 0x100
     d78:	str	r0, [sp, #12]
     d7c:	mov	r0, r3
     d80:	str	r1, [sp, #8]
     d84:	mov	r1, r3
     d88:	ldr	r3, [sp, #12]
     d8c:	ldr	ip, [sp, #8]
     d90:	str	ip, [sp]
     d94:	bl	798 <sendto_realops_snomask@plt>
     d98:	mov	sp, fp
     d9c:	pop	{fp, pc}
     da0:	.word	0x00011340
     da4:	.word	0x00000c4a

00000da8 <hack_can_kick>:
     da8:	push	{r4, sl, fp, lr}
     dac:	add	fp, sp, #8
     db0:	sub	sp, sp, #32
     db4:	str	r0, [fp, #-12]
     db8:	ldr	r0, [fp, #-12]
     dbc:	str	r0, [fp, #-16]
     dc0:	ldr	r0, [fp, #-16]
     dc4:	ldr	r0, [r0]
     dc8:	ldr	r1, [fp, #-16]
     dcc:	ldr	r1, [r1, #4]
     dd0:	ldr	r2, [fp, #-16]
     dd4:	ldr	r2, [r2, #8]
     dd8:	ldr	r3, [fp, #-16]
     ddc:	ldr	r3, [r3, #20]
     de0:	movw	ip, #0
     de4:	str	ip, [sp]
     de8:	bl	7c8 <get_channel_access@plt>
     dec:	str	r0, [sp, #20]
     df0:	ldr	r0, [sp, #20]
     df4:	cmp	r0, #4
     df8:	beq	e00 <hack_can_kick+0x58>
     dfc:	b	e94 <hack_can_kick+0xec>
     e00:	ldr	r0, [pc, #148]	; e9c <hack_can_kick+0xf4>
     e04:	ldr	r0, [pc, r0]
     e08:	ldr	r1, [fp, #-16]
     e0c:	ldr	r1, [r1]
     e10:	ldr	r1, [r1, #56]	; 0x38
     e14:	ldr	r0, [r0, #448]	; 0x1c0
     e18:	and	r0, r1, r0
     e1c:	cmp	r0, #0
     e20:	beq	e94 <hack_can_kick+0xec>
     e24:	ldr	r0, [fp, #-16]
     e28:	ldr	r0, [r0]
     e2c:	movw	r1, #0
     e30:	bl	12b0 <update_session_deadline>
     e34:	ldr	r0, [fp, #-16]
     e38:	ldr	r0, [r0]
     e3c:	bl	7b0 <get_oper_name@plt>
     e40:	ldr	r1, [pc, #88]	; ea0 <hack_can_kick+0xf8>
     e44:	add	r2, pc, r1
     e48:	ldr	r1, [fp, #-16]
     e4c:	ldr	r1, [r1, #4]
     e50:	ldr	r1, [r1, #236]	; 0xec
     e54:	ldr	r3, [fp, #-16]
     e58:	ldr	r3, [r3, #12]
     e5c:	add	r3, r3, #88	; 0x58
     e60:	movw	ip, #256	; 0x100
     e64:	str	r0, [sp, #16]
     e68:	mov	r0, ip
     e6c:	str	r1, [sp, #12]
     e70:	mov	r1, ip
     e74:	ldr	ip, [sp, #16]
     e78:	str	r3, [sp, #8]
     e7c:	mov	r3, ip
     e80:	ldr	lr, [sp, #12]
     e84:	str	lr, [sp]
     e88:	ldr	r4, [sp, #8]
     e8c:	str	r4, [sp, #4]
     e90:	bl	798 <sendto_realops_snomask@plt>
     e94:	sub	sp, fp, #8
     e98:	pop	{r4, sl, fp, pc}
     e9c:	.word	0x00011254
     ea0:	.word	0x00000b97

00000ea4 <hack_can_send>:
     ea4:	push	{fp, lr}
     ea8:	mov	fp, sp
     eac:	sub	sp, sp, #24
     eb0:	str	r0, [fp, #-4]
     eb4:	ldr	r0, [fp, #-4]
     eb8:	str	r0, [fp, #-8]
     ebc:	ldr	r0, [fp, #-8]
     ec0:	ldr	r0, [r0, #20]
     ec4:	cmp	r0, #0
     ec8:	bne	ed0 <hack_can_send+0x2c>
     ecc:	b	fa8 <hack_can_send+0x104>
     ed0:	ldr	r0, [fp, #-8]
     ed4:	ldr	r0, [r0, #16]
     ed8:	cmp	r0, #1
     edc:	beq	ef0 <hack_can_send+0x4c>
     ee0:	ldr	r0, [fp, #-8]
     ee4:	ldr	r0, [r0, #16]
     ee8:	cmp	r0, #2
     eec:	bne	ef4 <hack_can_send+0x50>
     ef0:	b	fa8 <hack_can_send+0x104>
     ef4:	ldr	r0, [pc, #180]	; fb0 <hack_can_send+0x10c>
     ef8:	ldr	r0, [pc, r0]
     efc:	ldr	r1, [fp, #-8]
     f00:	ldr	r1, [r1]
     f04:	ldr	r1, [r1, #56]	; 0x38
     f08:	ldr	r0, [r0, #448]	; 0x1c0
     f0c:	and	r0, r1, r0
     f10:	cmp	r0, #0
     f14:	beq	fa8 <hack_can_send+0x104>
     f18:	ldr	r0, [fp, #-8]
     f1c:	mov	r1, #1
     f20:	str	r1, [r0, #16]
     f24:	ldr	r0, [fp, #-8]
     f28:	ldr	r0, [r0]
     f2c:	ldrb	r0, [r0, #65]	; 0x41
     f30:	tst	r0, #32
     f34:	beq	fa4 <hack_can_send+0x100>
     f38:	b	f3c <hack_can_send+0x98>
     f3c:	ldr	r0, [fp, #-8]
     f40:	ldr	r0, [r0]
     f44:	ldrh	r0, [r0, #80]	; 0x50
     f48:	cmp	r0, #64	; 0x40
     f4c:	bne	fa4 <hack_can_send+0x100>
     f50:	ldr	r0, [fp, #-8]
     f54:	ldr	r0, [r0]
     f58:	movw	r1, #0
     f5c:	bl	12b0 <update_session_deadline>
     f60:	ldr	r0, [fp, #-8]
     f64:	ldr	r0, [r0]
     f68:	bl	7b0 <get_oper_name@plt>
     f6c:	ldr	r1, [pc, #64]	; fb4 <hack_can_send+0x110>
     f70:	add	r2, pc, r1
     f74:	ldr	r1, [fp, #-8]
     f78:	ldr	r1, [r1, #4]
     f7c:	ldr	r1, [r1, #236]	; 0xec
     f80:	movw	r3, #256	; 0x100
     f84:	str	r0, [sp, #12]
     f88:	mov	r0, r3
     f8c:	str	r1, [sp, #8]
     f90:	mov	r1, r3
     f94:	ldr	r3, [sp, #12]
     f98:	ldr	ip, [sp, #8]
     f9c:	str	ip, [sp]
     fa0:	bl	798 <sendto_realops_snomask@plt>
     fa4:	b	fa8 <hack_can_send+0x104>
     fa8:	mov	sp, fp
     fac:	pop	{fp, pc}
     fb0:	.word	0x00011160
     fb4:	.word	0x00000a95

00000fb8 <handle_client_exit>:
     fb8:	push	{fp, lr}
     fbc:	mov	fp, sp
     fc0:	sub	sp, sp, #32
     fc4:	ldr	r1, [pc, #232]	; 10b4 <handle_client_exit+0xfc>
     fc8:	ldr	r1, [pc, r1]
     fcc:	str	r0, [fp, #-4]
     fd0:	ldr	r0, [fp, #-4]
     fd4:	str	r0, [fp, #-8]
     fd8:	ldr	r0, [fp, #-8]
     fdc:	ldr	r0, [r0, #4]
     fe0:	str	r0, [sp, #12]
     fe4:	ldr	r0, [r1]
     fe8:	str	r0, [fp, #-12]
     fec:	ldr	r0, [fp, #-12]
     ff0:	movw	r1, #0
     ff4:	cmp	r0, r1
     ff8:	beq	100c <handle_client_exit+0x54>
     ffc:	ldr	r0, [fp, #-12]
    1000:	ldr	r0, [r0, #8]
    1004:	str	r0, [sp, #4]
    1008:	b	1018 <handle_client_exit+0x60>
    100c:	movw	r0, #0
    1010:	str	r0, [sp, #4]
    1014:	b	1018 <handle_client_exit+0x60>
    1018:	ldr	r0, [sp, #4]
    101c:	str	r0, [sp, #16]
    1020:	ldr	r0, [fp, #-12]
    1024:	movw	r1, #0
    1028:	cmp	r0, r1
    102c:	beq	10ac <handle_client_exit+0xf4>
    1030:	ldr	r0, [fp, #-12]
    1034:	ldr	r0, [r0]
    1038:	str	r0, [sp, #8]
    103c:	ldr	r0, [sp, #8]
    1040:	ldr	r0, [r0, #12]
    1044:	ldr	r1, [sp, #12]
    1048:	cmp	r0, r1
    104c:	beq	1054 <handle_client_exit+0x9c>
    1050:	b	106c <handle_client_exit+0xb4>
    1054:	ldr	r0, [pc, #92]	; 10b8 <handle_client_exit+0x100>
    1058:	ldr	r1, [pc, r0]
    105c:	ldr	r0, [fp, #-12]
    1060:	bl	13ac <rb_dlinkDelete>
    1064:	ldr	r0, [sp, #8]
    1068:	bl	14e8 <rb_free>
    106c:	ldr	r0, [sp, #16]
    1070:	str	r0, [fp, #-12]
    1074:	ldr	r0, [fp, #-12]
    1078:	movw	r1, #0
    107c:	cmp	r0, r1
    1080:	beq	1094 <handle_client_exit+0xdc>
    1084:	ldr	r0, [fp, #-12]
    1088:	ldr	r0, [r0, #8]
    108c:	str	r0, [sp]
    1090:	b	10a0 <handle_client_exit+0xe8>
    1094:	movw	r0, #0
    1098:	str	r0, [sp]
    109c:	b	10a0 <handle_client_exit+0xe8>
    10a0:	ldr	r0, [sp]
    10a4:	str	r0, [sp, #16]
    10a8:	b	1020 <handle_client_exit+0x68>
    10ac:	mov	sp, fp
    10b0:	pop	{fp, pc}
    10b4:	.word	0x00011084
    10b8:	.word	0x00010ff4

000010bc <_modinit>:
    10bc:	push	{fp, lr}
    10c0:	mov	fp, sp
    10c4:	sub	sp, sp, #8
    10c8:	bl	7a4 <find_umode_slot@plt>
    10cc:	ldr	r1, [pc, #208]	; 11a4 <_modinit+0xe8>
    10d0:	ldr	r1, [pc, r1]
    10d4:	str	r0, [r1, #448]	; 0x1c0
    10d8:	bl	7f8 <construct_umodebuf@plt>
    10dc:	ldr	r0, [pc, #188]	; 11a0 <_modinit+0xe4>
    10e0:	ldr	r0, [pc, r0]
    10e4:	ldr	r0, [r0]
    10e8:	str	r0, [sp, #4]
    10ec:	ldr	r0, [sp, #4]
    10f0:	movw	r1, #0
    10f4:	cmp	r0, r1
    10f8:	beq	116c <_modinit+0xb0>
    10fc:	ldr	r0, [sp, #4]
    1100:	ldr	r0, [r0]
    1104:	str	r0, [sp]
    1108:	ldr	r0, [sp]
    110c:	ldrh	r0, [r0, #80]	; 0x50
    1110:	cmp	r0, #64	; 0x40
    1114:	bne	1158 <_modinit+0x9c>
    1118:	ldr	r0, [sp]
    111c:	ldr	r0, [r0, #24]
    1120:	movw	r1, #0
    1124:	cmp	r0, r1
    1128:	beq	1158 <_modinit+0x9c>
    112c:	ldr	r0, [pc, #128]	; 11b4 <_modinit+0xf8>
    1130:	ldr	r0, [pc, r0]
    1134:	ldr	r1, [sp]
    1138:	ldr	r1, [r1, #56]	; 0x38
    113c:	ldr	r0, [r0, #448]	; 0x1c0
    1140:	and	r0, r1, r0
    1144:	cmp	r0, #0
    1148:	beq	1158 <_modinit+0x9c>
    114c:	ldr	r0, [sp]
    1150:	movw	r1, #0
    1154:	bl	12b0 <update_session_deadline>
    1158:	b	115c <_modinit+0xa0>
    115c:	ldr	r0, [sp, #4]
    1160:	ldr	r0, [r0, #8]
    1164:	str	r0, [sp, #4]
    1168:	b	10ec <_modinit+0x30>
    116c:	ldr	r0, [pc, #56]	; 11ac <_modinit+0xf0>
    1170:	add	r0, pc, r0
    1174:	ldr	r1, [pc, #52]	; 11b0 <_modinit+0xf4>
    1178:	add	r1, pc, r1
    117c:	movw	r2, #0
    1180:	movw	r3, #60	; 0x3c
    1184:	bl	750 <rb_event_add@plt>
    1188:	ldr	r1, [pc, #24]	; 11a8 <_modinit+0xec>
    118c:	ldr	r1, [pc, r1]
    1190:	str	r0, [r1]
    1194:	movw	r0, #0
    1198:	mov	sp, fp
    119c:	pop	{fp, pc}
    11a0:	.word	0x00010f80
    11a4:	.word	0x00010f88
    11a8:	.word	0x00010ec8
    11ac:	.word	0x000008c7
    11b0:	.word	0x00000574
    11b4:	.word	0x00010f28

000011b8 <_moddeinit>:
    11b8:	push	{fp, lr}
    11bc:	mov	fp, sp
    11c0:	sub	sp, sp, #16
    11c4:	ldr	r0, [pc, #216]	; 12a4 <_moddeinit+0xec>
    11c8:	ldr	r0, [pc, r0]
    11cc:	movw	r1, #0
    11d0:	str	r1, [r0, #448]	; 0x1c0
    11d4:	bl	7f8 <construct_umodebuf@plt>
    11d8:	ldr	r0, [pc, #192]	; 12a0 <_moddeinit+0xe8>
    11dc:	ldr	r0, [pc, r0]
    11e0:	ldr	r0, [r0]
    11e4:	str	r0, [fp, #-4]
    11e8:	ldr	r0, [fp, #-4]
    11ec:	movw	r1, #0
    11f0:	cmp	r0, r1
    11f4:	beq	1208 <_moddeinit+0x50>
    11f8:	ldr	r0, [fp, #-4]
    11fc:	ldr	r0, [r0, #8]
    1200:	str	r0, [sp, #4]
    1204:	b	1214 <_moddeinit+0x5c>
    1208:	movw	r0, #0
    120c:	str	r0, [sp, #4]
    1210:	b	1214 <_moddeinit+0x5c>
    1214:	ldr	r0, [sp, #4]
    1218:	str	r0, [sp, #8]
    121c:	ldr	r0, [fp, #-4]
    1220:	movw	r1, #0
    1224:	cmp	r0, r1
    1228:	beq	1288 <_moddeinit+0xd0>
    122c:	ldr	r0, [pc, #120]	; 12ac <_moddeinit+0xf4>
    1230:	ldr	r1, [pc, r0]
    1234:	ldr	r0, [fp, #-4]
    1238:	bl	13ac <rb_dlinkDelete>
    123c:	ldr	r0, [fp, #-4]
    1240:	ldr	r0, [r0]
    1244:	bl	14e8 <rb_free>
    1248:	ldr	r0, [sp, #8]
    124c:	str	r0, [fp, #-4]
    1250:	ldr	r0, [fp, #-4]
    1254:	movw	r1, #0
    1258:	cmp	r0, r1
    125c:	beq	1270 <_moddeinit+0xb8>
    1260:	ldr	r0, [fp, #-4]
    1264:	ldr	r0, [r0, #8]
    1268:	str	r0, [sp]
    126c:	b	127c <_moddeinit+0xc4>
    1270:	movw	r0, #0
    1274:	str	r0, [sp]
    1278:	b	127c <_moddeinit+0xc4>
    127c:	ldr	r0, [sp]
    1280:	str	r0, [sp, #8]
    1284:	b	121c <_moddeinit+0x64>
    1288:	ldr	r0, [pc, #24]	; 12a8 <_moddeinit+0xf0>
    128c:	ldr	r0, [pc, r0]
    1290:	ldr	r0, [r0]
    1294:	bl	768 <rb_event_delete@plt>
    1298:	mov	sp, fp
    129c:	pop	{fp, pc}
    12a0:	.word	0x00010e70
    12a4:	.word	0x00010e90
    12a8:	.word	0x00010dc8
    12ac:	.word	0x00010e1c

000012b0 <update_session_deadline>:
    12b0:	push	{fp, lr}
    12b4:	mov	fp, sp
    12b8:	sub	sp, sp, #16
    12bc:	str	r0, [fp, #-4]
    12c0:	str	r1, [sp, #8]
    12c4:	ldr	r0, [sp, #8]
    12c8:	movw	r1, #0
    12cc:	cmp	r0, r1
    12d0:	bne	1338 <update_session_deadline+0x88>
    12d4:	ldr	r0, [pc, #196]	; 13a0 <update_session_deadline+0xf0>
    12d8:	ldr	r0, [pc, r0]
    12dc:	ldr	r0, [r0]
    12e0:	str	r0, [sp, #4]
    12e4:	ldr	r0, [sp, #4]
    12e8:	movw	r1, #0
    12ec:	cmp	r0, r1
    12f0:	beq	1334 <update_session_deadline+0x84>
    12f4:	ldr	r0, [sp, #4]
    12f8:	ldr	r0, [r0]
    12fc:	str	r0, [sp]
    1300:	ldr	r0, [sp]
    1304:	ldr	r0, [r0, #12]
    1308:	ldr	r1, [fp, #-4]
    130c:	cmp	r0, r1
    1310:	bne	1320 <update_session_deadline+0x70>
    1314:	ldr	r0, [sp]
    1318:	str	r0, [sp, #8]
    131c:	b	1334 <update_session_deadline+0x84>
    1320:	b	1324 <update_session_deadline+0x74>
    1324:	ldr	r0, [sp, #4]
    1328:	ldr	r0, [r0, #8]
    132c:	str	r0, [sp, #4]
    1330:	b	12e4 <update_session_deadline+0x34>
    1334:	b	1338 <update_session_deadline+0x88>
    1338:	ldr	r0, [sp, #8]
    133c:	movw	r1, #0
    1340:	cmp	r0, r1
    1344:	bne	1360 <update_session_deadline+0xb0>
    1348:	movw	r0, #20
    134c:	bl	1530 <rb_malloc>
    1350:	str	r0, [sp, #8]
    1354:	ldr	r0, [fp, #-4]
    1358:	ldr	r1, [sp, #8]
    135c:	str	r0, [r1, #12]
    1360:	bl	744 <rb_current_time@plt>
    1364:	ldr	r1, [pc, #60]	; 13a8 <update_session_deadline+0xf8>
    1368:	ldr	r1, [pc, r1]
    136c:	movw	r2, #1800	; 0x708
    1370:	add	r0, r0, r2
    1374:	ldr	r2, [sp, #8]
    1378:	str	r0, [r2, #16]
    137c:	ldr	r0, [sp, #8]
    1380:	bl	13ac <rb_dlinkDelete>
    1384:	ldr	r0, [pc, #24]	; 13a4 <update_session_deadline+0xf4>
    1388:	ldr	r2, [pc, r0]
    138c:	ldr	r0, [sp, #8]
    1390:	ldr	r1, [sp, #8]
    1394:	bl	1588 <rb_dlinkAdd>
    1398:	mov	sp, fp
    139c:	pop	{fp, pc}
    13a0:	.word	0x00010d74
    13a4:	.word	0x00010cc4
    13a8:	.word	0x00010ce4

000013ac <rb_dlinkDelete>:
    13ac:	push	{fp, lr}
    13b0:	mov	fp, sp
    13b4:	sub	sp, sp, #8
    13b8:	str	r0, [sp, #4]
    13bc:	str	r1, [sp]
    13c0:	ldr	r0, [sp, #4]
    13c4:	movw	r1, #0
    13c8:	cmp	r0, r1
    13cc:	beq	13d4 <rb_dlinkDelete+0x28>
    13d0:	b	13f4 <rb_dlinkDelete+0x48>
    13d4:	ldr	r0, [pc, #244]	; 14d0 <rb_dlinkDelete+0x124>
    13d8:	add	r0, pc, r0
    13dc:	ldr	r1, [pc, #240]	; 14d4 <rb_dlinkDelete+0x128>
    13e0:	add	r1, pc, r1
    13e4:	ldr	r2, [pc, #236]	; 14d8 <rb_dlinkDelete+0x12c>
    13e8:	add	r3, pc, r2
    13ec:	movw	r2, #235	; 0xeb
    13f0:	bl	7ec <__assert_fail@plt>
    13f4:	ldr	r0, [sp]
    13f8:	movw	r1, #0
    13fc:	cmp	r0, r1
    1400:	beq	1408 <rb_dlinkDelete+0x5c>
    1404:	b	1428 <rb_dlinkDelete+0x7c>
    1408:	ldr	r0, [pc, #204]	; 14dc <rb_dlinkDelete+0x130>
    140c:	add	r0, pc, r0
    1410:	ldr	r1, [pc, #200]	; 14e0 <rb_dlinkDelete+0x134>
    1414:	add	r1, pc, r1
    1418:	ldr	r2, [pc, #196]	; 14e4 <rb_dlinkDelete+0x138>
    141c:	add	r3, pc, r2
    1420:	movw	r2, #236	; 0xec
    1424:	bl	7ec <__assert_fail@plt>
    1428:	ldr	r0, [sp, #4]
    142c:	ldr	r0, [r0, #8]
    1430:	movw	r1, #0
    1434:	cmp	r0, r1
    1438:	beq	1454 <rb_dlinkDelete+0xa8>
    143c:	ldr	r0, [sp, #4]
    1440:	ldr	r0, [r0, #4]
    1444:	ldr	r1, [sp, #4]
    1448:	ldr	r1, [r1, #8]
    144c:	str	r0, [r1, #4]
    1450:	b	1464 <rb_dlinkDelete+0xb8>
    1454:	ldr	r0, [sp, #4]
    1458:	ldr	r0, [r0, #4]
    145c:	ldr	r1, [sp]
    1460:	str	r0, [r1, #4]
    1464:	ldr	r0, [sp, #4]
    1468:	ldr	r0, [r0, #4]
    146c:	movw	r1, #0
    1470:	cmp	r0, r1
    1474:	beq	1490 <rb_dlinkDelete+0xe4>
    1478:	ldr	r0, [sp, #4]
    147c:	ldr	r0, [r0, #8]
    1480:	ldr	r1, [sp, #4]
    1484:	ldr	r1, [r1, #4]
    1488:	str	r0, [r1, #8]
    148c:	b	14a0 <rb_dlinkDelete+0xf4>
    1490:	ldr	r0, [sp, #4]
    1494:	ldr	r0, [r0, #8]
    1498:	ldr	r1, [sp]
    149c:	str	r0, [r1]
    14a0:	ldr	r0, [sp, #4]
    14a4:	movw	r1, #0
    14a8:	str	r1, [r0, #4]
    14ac:	ldr	r0, [sp, #4]
    14b0:	str	r1, [r0, #8]
    14b4:	ldr	r0, [sp]
    14b8:	ldr	r1, [r0, #8]
    14bc:	mvn	r2, #0
    14c0:	add	r1, r1, r2
    14c4:	str	r1, [r0, #8]
    14c8:	mov	sp, fp
    14cc:	pop	{fp, pc}
    14d0:	.word	0x00000557
    14d4:	.word	0x000004f8
    14d8:	.word	0x0000055e
    14dc:	.word	0x0000052d
    14e0:	.word	0x000004c4
    14e4:	.word	0x0000052a

000014e8 <rb_free>:
    14e8:	push	{fp, lr}
    14ec:	mov	fp, sp
    14f0:	sub	sp, sp, #8
    14f4:	str	r0, [sp, #4]
    14f8:	ldr	r0, [sp, #4]
    14fc:	movw	r1, #0
    1500:	cmp	r0, r1
    1504:	movw	r0, #0
    1508:	movne	r0, #1
    150c:	mvn	r1, #0
    1510:	eor	r0, r0, r1
    1514:	eor	r0, r0, r1
    1518:	tst	r0, #1
    151c:	beq	1528 <rb_free+0x40>
    1520:	ldr	r0, [sp, #4]
    1524:	bl	774 <free@plt>
    1528:	mov	sp, fp
    152c:	pop	{fp, pc}

00001530 <rb_malloc>:
    1530:	push	{fp, lr}
    1534:	mov	fp, sp
    1538:	sub	sp, sp, #8
    153c:	str	r0, [sp, #4]
    1540:	ldr	r1, [sp, #4]
    1544:	movw	r0, #1
    1548:	bl	738 <calloc@plt>
    154c:	str	r0, [sp]
    1550:	ldr	r0, [sp]
    1554:	movw	r1, #0
    1558:	cmp	r0, r1
    155c:	movw	r0, #0
    1560:	moveq	r0, #1
    1564:	mvn	r1, #0
    1568:	eor	r0, r0, r1
    156c:	eor	r0, r0, r1
    1570:	tst	r0, #1
    1574:	beq	157c <rb_malloc+0x4c>
    1578:	bl	780 <rb_outofmemory@plt>
    157c:	ldr	r0, [sp]
    1580:	mov	sp, fp
    1584:	pop	{fp, pc}

00001588 <rb_dlinkAdd>:
    1588:	push	{fp, lr}
    158c:	mov	fp, sp
    1590:	sub	sp, sp, #16
    1594:	str	r0, [fp, #-4]
    1598:	str	r1, [sp, #8]
    159c:	str	r2, [sp, #4]
    15a0:	ldr	r0, [fp, #-4]
    15a4:	movw	r1, #0
    15a8:	cmp	r0, r1
    15ac:	beq	15b4 <rb_dlinkAdd+0x2c>
    15b0:	b	15d4 <rb_dlinkAdd+0x4c>
    15b4:	ldr	r0, [pc, #276]	; 16d0 <rb_dlinkAdd+0x148>
    15b8:	add	r0, pc, r0
    15bc:	ldr	r1, [pc, #272]	; 16d4 <rb_dlinkAdd+0x14c>
    15c0:	add	r1, pc, r1
    15c4:	ldr	r2, [pc, #268]	; 16d8 <rb_dlinkAdd+0x150>
    15c8:	add	r3, pc, r2
    15cc:	movw	r2, #143	; 0x8f
    15d0:	bl	7ec <__assert_fail@plt>
    15d4:	ldr	r0, [sp, #8]
    15d8:	movw	r1, #0
    15dc:	cmp	r0, r1
    15e0:	beq	15e8 <rb_dlinkAdd+0x60>
    15e4:	b	1608 <rb_dlinkAdd+0x80>
    15e8:	ldr	r0, [pc, #236]	; 16dc <rb_dlinkAdd+0x154>
    15ec:	add	r0, pc, r0
    15f0:	ldr	r1, [pc, #232]	; 16e0 <rb_dlinkAdd+0x158>
    15f4:	add	r1, pc, r1
    15f8:	ldr	r2, [pc, #228]	; 16e4 <rb_dlinkAdd+0x15c>
    15fc:	add	r3, pc, r2
    1600:	movw	r2, #144	; 0x90
    1604:	bl	7ec <__assert_fail@plt>
    1608:	ldr	r0, [sp, #4]
    160c:	movw	r1, #0
    1610:	cmp	r0, r1
    1614:	beq	161c <rb_dlinkAdd+0x94>
    1618:	b	163c <rb_dlinkAdd+0xb4>
    161c:	ldr	r0, [pc, #196]	; 16e8 <rb_dlinkAdd+0x160>
    1620:	add	r0, pc, r0
    1624:	ldr	r1, [pc, #192]	; 16ec <rb_dlinkAdd+0x164>
    1628:	add	r1, pc, r1
    162c:	ldr	r2, [pc, #188]	; 16f0 <rb_dlinkAdd+0x168>
    1630:	add	r3, pc, r2
    1634:	movw	r2, #145	; 0x91
    1638:	bl	7ec <__assert_fail@plt>
    163c:	ldr	r0, [fp, #-4]
    1640:	ldr	r1, [sp, #8]
    1644:	str	r0, [r1]
    1648:	ldr	r0, [sp, #8]
    164c:	movw	r1, #0
    1650:	str	r1, [r0, #4]
    1654:	ldr	r0, [sp, #4]
    1658:	ldr	r0, [r0]
    165c:	ldr	r2, [sp, #8]
    1660:	str	r0, [r2, #8]
    1664:	ldr	r0, [sp, #4]
    1668:	ldr	r0, [r0]
    166c:	cmp	r0, r1
    1670:	beq	1688 <rb_dlinkAdd+0x100>
    1674:	ldr	r0, [sp, #8]
    1678:	ldr	r1, [sp, #4]
    167c:	ldr	r1, [r1]
    1680:	str	r0, [r1, #4]
    1684:	b	16ac <rb_dlinkAdd+0x124>
    1688:	ldr	r0, [sp, #4]
    168c:	ldr	r0, [r0, #4]
    1690:	movw	r1, #0
    1694:	cmp	r0, r1
    1698:	bne	16a8 <rb_dlinkAdd+0x120>
    169c:	ldr	r0, [sp, #8]
    16a0:	ldr	r1, [sp, #4]
    16a4:	str	r0, [r1, #4]
    16a8:	b	16ac <rb_dlinkAdd+0x124>
    16ac:	ldr	r0, [sp, #8]
    16b0:	ldr	r1, [sp, #4]
    16b4:	str	r0, [r1]
    16b8:	ldr	r0, [sp, #4]
    16bc:	ldr	r1, [r0, #8]
    16c0:	add	r1, r1, #1
    16c4:	str	r1, [r0, #8]
    16c8:	mov	sp, fp
    16cc:	pop	{fp, pc}
    16d0:	.word	0x00000313
    16d4:	.word	0x00000318
    16d8:	.word	0x0000032c
    16dc:	.word	0x00000343
    16e0:	.word	0x000002e4
    16e4:	.word	0x000002f8
    16e8:	.word	0x00000319
    16ec:	.word	0x000002b0
    16f0:	.word	0x000002c4

000016f4 <expire_override_deadlines>:
    16f4:	push	{fp, lr}
    16f8:	mov	fp, sp
    16fc:	sub	sp, sp, #48	; 0x30
    1700:	ldr	r1, [pc, #312]	; 1840 <expire_override_deadlines+0x14c>
    1704:	ldr	r1, [pc, r1]
    1708:	str	r0, [fp, #-4]
    170c:	ldr	r0, [r1]
    1710:	str	r0, [fp, #-8]
    1714:	ldr	r0, [fp, #-8]
    1718:	movw	r1, #0
    171c:	cmp	r0, r1
    1720:	beq	1734 <expire_override_deadlines+0x40>
    1724:	ldr	r0, [fp, #-8]
    1728:	ldr	r0, [r0, #8]
    172c:	str	r0, [sp, #12]
    1730:	b	1740 <expire_override_deadlines+0x4c>
    1734:	movw	r0, #0
    1738:	str	r0, [sp, #12]
    173c:	b	1740 <expire_override_deadlines+0x4c>
    1740:	ldr	r0, [sp, #12]
    1744:	str	r0, [fp, #-12]
    1748:	ldr	r0, [fp, #-8]
    174c:	movw	r1, #0
    1750:	cmp	r0, r1
    1754:	beq	1838 <expire_override_deadlines+0x144>
    1758:	ldr	r0, [fp, #-8]
    175c:	ldr	r0, [r0]
    1760:	str	r0, [fp, #-16]
    1764:	ldr	r0, [fp, #-16]
    1768:	ldr	r0, [r0, #16]
    176c:	str	r0, [sp, #8]
    1770:	bl	744 <rb_current_time@plt>
    1774:	ldr	r1, [sp, #8]
    1778:	cmp	r1, r0
    177c:	ble	1784 <expire_override_deadlines+0x90>
    1780:	b	1838 <expire_override_deadlines+0x144>
    1784:	ldr	r0, [fp, #-16]
    1788:	ldr	r0, [r0, #16]
    178c:	str	r0, [sp, #4]
    1790:	bl	744 <rb_current_time@plt>
    1794:	ldr	r1, [sp, #4]
    1798:	cmp	r1, r0
    179c:	bge	17f0 <expire_override_deadlines+0xfc>
    17a0:	add	r3, sp, #16
    17a4:	ldr	r0, [pc, #152]	; 1844 <expire_override_deadlines+0x150>
    17a8:	add	r0, pc, r0
    17ac:	ldr	r1, [fp, #-16]
    17b0:	ldr	r1, [r1, #12]
    17b4:	add	r1, r1, #88	; 0x58
    17b8:	str	r1, [sp, #16]
    17bc:	ldr	r1, [fp, #-16]
    17c0:	ldr	r1, [r1, #12]
    17c4:	add	r1, r1, #88	; 0x58
    17c8:	str	r1, [sp, #20]
    17cc:	str	r0, [sp, #24]
    17d0:	movw	r0, #0
    17d4:	str	r0, [sp, #28]
    17d8:	ldr	r0, [fp, #-16]
    17dc:	ldr	r0, [r0, #12]
    17e0:	ldr	r1, [fp, #-16]
    17e4:	ldr	r1, [r1, #12]
    17e8:	movw	r2, #3
    17ec:	bl	78c <user_mode@plt>
    17f0:	b	17f4 <expire_override_deadlines+0x100>
    17f4:	b	17f8 <expire_override_deadlines+0x104>
    17f8:	ldr	r0, [fp, #-12]
    17fc:	str	r0, [fp, #-8]
    1800:	ldr	r0, [fp, #-8]
    1804:	movw	r1, #0
    1808:	cmp	r0, r1
    180c:	beq	1820 <expire_override_deadlines+0x12c>
    1810:	ldr	r0, [fp, #-8]
    1814:	ldr	r0, [r0, #8]
    1818:	str	r0, [sp]
    181c:	b	182c <expire_override_deadlines+0x138>
    1820:	movw	r0, #0
    1824:	str	r0, [sp]
    1828:	b	182c <expire_override_deadlines+0x138>
    182c:	ldr	r0, [sp]
    1830:	str	r0, [fp, #-12]
    1834:	b	1748 <expire_override_deadlines+0x54>
    1838:	mov	sp, fp
    183c:	pop	{fp, pc}
    1840:	.word	0x00010948
    1844:	.word	0x000002a9

Disassembly of section .fini:

00001848 <_fini>:
    1848:	push	{r3, lr}
    184c:	pop	{r3, pc}
