
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011a74 <.init>:
   11a74:	push	{r3, lr}
   11a78:	bl	11c38 <_start@@Base+0x3c>
   11a7c:	pop	{r3, pc}

Disassembly of section .plt:

00011a80 <raise@plt-0x14>:
   11a80:	push	{lr}		; (str lr, [sp, #-4]!)
   11a84:	ldr	lr, [pc, #4]	; 11a90 <raise@plt-0x4>
   11a88:	add	lr, pc, lr
   11a8c:	ldr	pc, [lr, #8]!
   11a90:	andeq	r3, r1, r0, ror r5

00011a94 <raise@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #77824	; 0x13000
   11a9c:	ldr	pc, [ip, #1392]!	; 0x570

00011aa0 <strcmp@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #77824	; 0x13000
   11aa8:	ldr	pc, [ip, #1384]!	; 0x568

00011aac <printf@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #77824	; 0x13000
   11ab4:	ldr	pc, [ip, #1376]!	; 0x560

00011ab8 <free@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #77824	; 0x13000
   11ac0:	ldr	pc, [ip, #1368]!	; 0x558

00011ac4 <realloc@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #77824	; 0x13000
   11acc:	ldr	pc, [ip, #1360]!	; 0x550

00011ad0 <strcpy@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #77824	; 0x13000
   11ad8:	ldr	pc, [ip, #1352]!	; 0x548

00011adc <malloc@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #77824	; 0x13000
   11ae4:	ldr	pc, [ip, #1344]!	; 0x540

00011ae8 <__libc_start_main@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #77824	; 0x13000
   11af0:	ldr	pc, [ip, #1336]!	; 0x538

00011af4 <__gmon_start__@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #77824	; 0x13000
   11afc:	ldr	pc, [ip, #1328]!	; 0x530

00011b00 <strlen@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #77824	; 0x13000
   11b08:	ldr	pc, [ip, #1320]!	; 0x528

00011b0c <snprintf@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #77824	; 0x13000
   11b14:	ldr	pc, [ip, #1312]!	; 0x520

00011b18 <__isoc99_sscanf@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #77824	; 0x13000
   11b20:	ldr	pc, [ip, #1304]!	; 0x518

00011b24 <abort@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #77824	; 0x13000
   11b2c:	ldr	pc, [ip, #1296]!	; 0x510

Disassembly of section .text:

00011b30 <main@@Base>:
   11b30:	push	{r4, r5, r6, lr}
   11b34:	sub	sp, sp, #56	; 0x38
   11b38:	mov	r0, sp
   11b3c:	bl	11d24 <table_init@@Base>
   11b40:	mov	r2, #0
   11b44:	ldr	r1, [pc, #160]	; 11bec <main@@Base+0xbc>
   11b48:	mov	r0, sp
   11b4c:	bl	126a4 <table_add_column@@Base>
   11b50:	mov	r2, #21
   11b54:	ldr	r1, [pc, #148]	; 11bf0 <main@@Base+0xc0>
   11b58:	mov	r6, r0
   11b5c:	mov	r0, sp
   11b60:	bl	126a4 <table_add_column@@Base>
   11b64:	mov	r5, r0
   11b68:	mov	r0, sp
   11b6c:	bl	12638 <table_get_column_length@@Base>
   11b70:	cmp	r0, #2
   11b74:	moveq	r4, #0
   11b78:	beq	11b88 <main@@Base+0x58>
   11b7c:	ldr	r0, [pc, #112]	; 11bf4 <main@@Base+0xc4>
   11b80:	bl	11aac <printf@plt>
   11b84:	mvn	r4, #0
   11b88:	mov	r1, r6
   11b8c:	mov	r0, sp
   11b90:	bl	1290c <table_get_column_name@@Base>
   11b94:	ldr	r1, [pc, #80]	; 11bec <main@@Base+0xbc>
   11b98:	bl	11aa0 <strcmp@plt>
   11b9c:	cmp	r0, #0
   11ba0:	beq	11bb0 <main@@Base+0x80>
   11ba4:	ldr	r0, [pc, #76]	; 11bf8 <main@@Base+0xc8>
   11ba8:	bl	11aac <printf@plt>
   11bac:	mvn	r4, #0
   11bb0:	mov	r1, r5
   11bb4:	mov	r0, sp
   11bb8:	bl	1290c <table_get_column_name@@Base>
   11bbc:	ldr	r1, [pc, #44]	; 11bf0 <main@@Base+0xc0>
   11bc0:	bl	11aa0 <strcmp@plt>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11bd8 <main@@Base+0xa8>
   11bcc:	ldr	r0, [pc, #36]	; 11bf8 <main@@Base+0xc8>
   11bd0:	bl	11aac <printf@plt>
   11bd4:	mvn	r4, #0
   11bd8:	mov	r0, sp
   11bdc:	bl	11d84 <table_destroy@@Base>
   11be0:	mov	r0, r4
   11be4:	add	sp, sp, #56	; 0x38
   11be8:	pop	{r4, r5, r6, pc}
   11bec:	andeq	r4, r1, r4, ror r2
   11bf0:			; <UNDEFINED> instruction: 0x000142b6
   11bf4:	andeq	r4, r1, r7, ror r2
   11bf8:	muleq	r1, ip, r2

00011bfc <_start@@Base>:
   11bfc:	mov	fp, #0
   11c00:	mov	lr, #0
   11c04:	pop	{r1}		; (ldr r1, [sp], #4)
   11c08:	mov	r2, sp
   11c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   11c10:	push	{r0}		; (str r0, [sp, #-4]!)
   11c14:	ldr	ip, [pc, #16]	; 11c2c <_start@@Base+0x30>
   11c18:	push	{ip}		; (str ip, [sp, #-4]!)
   11c1c:	ldr	r0, [pc, #12]	; 11c30 <_start@@Base+0x34>
   11c20:	ldr	r3, [pc, #12]	; 11c34 <_start@@Base+0x38>
   11c24:	bl	11ae8 <__libc_start_main@plt>
   11c28:	bl	11b24 <abort@plt>
   11c2c:	andeq	r4, r1, r4, ror #4
   11c30:	andeq	r1, r1, r0, lsr fp
   11c34:	andeq	r4, r1, r4, lsl #4
   11c38:	ldr	r3, [pc, #20]	; 11c54 <_start@@Base+0x58>
   11c3c:	ldr	r2, [pc, #20]	; 11c58 <_start@@Base+0x5c>
   11c40:	add	r3, pc, r3
   11c44:	ldr	r2, [r3, r2]
   11c48:	cmp	r2, #0
   11c4c:	bxeq	lr
   11c50:	b	11af4 <__gmon_start__@plt>
   11c54:			; <UNDEFINED> instruction: 0x000133b8
   11c58:	andeq	r0, r0, r0, asr #32
   11c5c:	ldr	r3, [pc, #28]	; 11c80 <_start@@Base+0x84>
   11c60:	ldr	r0, [pc, #28]	; 11c84 <_start@@Base+0x88>
   11c64:	sub	r3, r3, r0
   11c68:	cmp	r3, #6
   11c6c:	bxls	lr
   11c70:	ldr	r3, [pc, #16]	; 11c88 <_start@@Base+0x8c>
   11c74:	cmp	r3, #0
   11c78:	bxeq	lr
   11c7c:	bx	r3
   11c80:	andeq	r5, r2, pc, asr #32
   11c84:	andeq	r5, r2, ip, asr #32
   11c88:	andeq	r0, r0, r0
   11c8c:	ldr	r1, [pc, #36]	; 11cb8 <_start@@Base+0xbc>
   11c90:	ldr	r0, [pc, #36]	; 11cbc <_start@@Base+0xc0>
   11c94:	sub	r1, r1, r0
   11c98:	asr	r1, r1, #2
   11c9c:	add	r1, r1, r1, lsr #31
   11ca0:	asrs	r1, r1, #1
   11ca4:	bxeq	lr
   11ca8:	ldr	r3, [pc, #16]	; 11cc0 <_start@@Base+0xc4>
   11cac:	cmp	r3, #0
   11cb0:	bxeq	lr
   11cb4:	bx	r3
   11cb8:	andeq	r5, r2, ip, asr #32
   11cbc:	andeq	r5, r2, ip, asr #32
   11cc0:	andeq	r0, r0, r0
   11cc4:	push	{r4, lr}
   11cc8:	ldr	r4, [pc, #24]	; 11ce8 <_start@@Base+0xec>
   11ccc:	ldrb	r3, [r4]
   11cd0:	cmp	r3, #0
   11cd4:	popne	{r4, pc}
   11cd8:	bl	11c5c <_start@@Base+0x60>
   11cdc:	mov	r3, #1
   11ce0:	strb	r3, [r4]
   11ce4:	pop	{r4, pc}
   11ce8:	andeq	r5, r2, ip, asr #32
   11cec:	ldr	r0, [pc, #40]	; 11d1c <_start@@Base+0x120>
   11cf0:	ldr	r3, [r0]
   11cf4:	cmp	r3, #0
   11cf8:	bne	11d00 <_start@@Base+0x104>
   11cfc:	b	11c8c <_start@@Base+0x90>
   11d00:	ldr	r3, [pc, #24]	; 11d20 <_start@@Base+0x124>
   11d04:	cmp	r3, #0
   11d08:	beq	11cfc <_start@@Base+0x100>
   11d0c:	push	{r4, lr}
   11d10:	blx	r3
   11d14:	pop	{r4, lr}
   11d18:	b	11c8c <_start@@Base+0x90>
   11d1c:	andeq	r4, r2, r4, lsl pc
   11d20:	andeq	r0, r0, r0

00011d24 <table_init@@Base>:
   11d24:	mov	r3, #0
   11d28:	mov	r2, #10
   11d2c:	mov	r1, #20
   11d30:	str	r3, [r0]
   11d34:	str	r3, [r0, #4]
   11d38:	str	r3, [r0, #12]
   11d3c:	str	r2, [r0, #8]
   11d40:	str	r3, [r0, #16]
   11d44:	str	r3, [r0, #20]
   11d48:	str	r3, [r0, #28]
   11d4c:	str	r1, [r0, #24]
   11d50:	str	r3, [r0, #36]	; 0x24
   11d54:	str	r3, [r0, #40]	; 0x28
   11d58:	str	r3, [r0, #44]	; 0x2c
   11d5c:	str	r3, [r0, #32]
   11d60:	str	r3, [r0, #52]	; 0x34
   11d64:	str	r2, [r0, #48]	; 0x30
   11d68:	bx	lr

00011d6c <table_new@@Base>:
   11d6c:	push	{r4, lr}
   11d70:	mov	r0, #56	; 0x38
   11d74:	bl	11adc <malloc@plt>
   11d78:	mov	r4, r0
   11d7c:	bl	11d24 <table_init@@Base>
   11d80:	pop	{r4, pc}

00011d84 <table_destroy@@Base>:
   11d84:	push	{r4, r5, r6, lr}
   11d88:	subs	r4, r0, #0
   11d8c:	popeq	{r4, r5, r6, pc}
   11d90:	mvn	r2, #0
   11d94:	mov	r3, #64	; 0x40
   11d98:	mov	r1, r2
   11d9c:	bl	12560 <table_notify@@Base>
   11da0:	mov	r0, r4
   11da4:	bl	12f10 <table_get_row_length@@Base>
   11da8:	mov	r5, #0
   11dac:	mov	r6, r0
   11db0:	cmp	r6, r5
   11db4:	bgt	11e24 <table_destroy@@Base+0xa0>
   11db8:	ldr	r0, [r4, #16]
   11dbc:	cmp	r0, #0
   11dc0:	beq	11dc8 <table_destroy@@Base+0x44>
   11dc4:	bl	11ab8 <free@plt>
   11dc8:	mov	r0, r4
   11dcc:	bl	12638 <table_get_column_length@@Base>
   11dd0:	mov	r5, #0
   11dd4:	mov	r6, r0
   11dd8:	cmp	r6, r5
   11ddc:	bgt	11e38 <table_destroy@@Base+0xb4>
   11de0:	ldr	r0, [r4]
   11de4:	cmp	r0, #0
   11de8:	beq	11df0 <table_destroy@@Base+0x6c>
   11dec:	bl	11ab8 <free@plt>
   11df0:	ldr	r0, [r4, #36]	; 0x24
   11df4:	cmp	r0, #0
   11df8:	beq	11e00 <table_destroy@@Base+0x7c>
   11dfc:	bl	11ab8 <free@plt>
   11e00:	ldr	r0, [r4, #40]	; 0x28
   11e04:	cmp	r0, #0
   11e08:	beq	11e10 <table_destroy@@Base+0x8c>
   11e0c:	bl	11ab8 <free@plt>
   11e10:	ldr	r0, [r4, #44]	; 0x2c
   11e14:	cmp	r0, #0
   11e18:	popeq	{r4, r5, r6, pc}
   11e1c:	pop	{r4, r5, r6, lr}
   11e20:	b	11ab8 <free@plt>
   11e24:	mov	r1, r5
   11e28:	mov	r0, r4
   11e2c:	bl	12ec0 <table_row_destroy@@Base>
   11e30:	add	r5, r5, #1
   11e34:	b	11db0 <table_destroy@@Base+0x2c>
   11e38:	mov	r1, r5
   11e3c:	mov	r0, r4
   11e40:	bl	1261c <table_column_destroy@@Base>
   11e44:	add	r5, r5, #1
   11e48:	b	11dd8 <table_destroy@@Base+0x54>

00011e4c <table_delete@@Base>:
   11e4c:	push	{r4, lr}
   11e50:	mov	r4, r0
   11e54:	bl	11d84 <table_destroy@@Base>
   11e58:	mov	r0, r4
   11e5c:	pop	{r4, lr}
   11e60:	b	11ab8 <free@plt>

00011e64 <table_dupe@@Base>:
   11e64:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e68:	sub	sp, sp, #20
   11e6c:	mov	r6, r0
   11e70:	bl	12f10 <table_get_row_length@@Base>
   11e74:	mov	r4, #0
   11e78:	mov	r9, r0
   11e7c:	mov	r0, r6
   11e80:	bl	12638 <table_get_column_length@@Base>
   11e84:	mov	r8, r0
   11e88:	bl	11d6c <table_new@@Base>
   11e8c:	mov	r7, r0
   11e90:	cmp	r4, r8
   11e94:	blt	11eb0 <table_dupe@@Base+0x4c>
   11e98:	mov	r5, #0
   11e9c:	cmp	r5, r9
   11ea0:	mov	r0, r7
   11ea4:	blt	11ee4 <table_dupe@@Base+0x80>
   11ea8:	add	sp, sp, #20
   11eac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11eb0:	mov	r1, r4
   11eb4:	mov	r0, r6
   11eb8:	bl	1290c <table_get_column_name@@Base>
   11ebc:	mov	r1, r4
   11ec0:	add	r4, r4, #1
   11ec4:	mov	r5, r0
   11ec8:	mov	r0, r6
   11ecc:	bl	12690 <table_get_column_data_type@@Base>
   11ed0:	mov	r1, r5
   11ed4:	mov	r2, r0
   11ed8:	mov	r0, r7
   11edc:	bl	126a4 <table_add_column@@Base>
   11ee0:	b	11e90 <table_dupe@@Base+0x2c>
   11ee4:	bl	12f18 <table_add_row@@Base>
   11ee8:	mov	r4, #0
   11eec:	cmp	r4, r8
   11ef0:	addge	r5, r5, #1
   11ef4:	bge	11e9c <table_dupe@@Base+0x38>
   11ef8:	mov	r1, r4
   11efc:	mov	r0, r6
   11f00:	bl	12690 <table_get_column_data_type@@Base>
   11f04:	cmp	r0, #23
   11f08:	ldrls	pc, [pc, r0, lsl #2]
   11f0c:	b	11f94 <table_dupe@@Base+0x130>
   11f10:	andeq	r1, r1, r0, ror pc
   11f14:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11f18:	andeq	r1, r1, r4, asr #31
   11f1c:	andeq	r1, r1, ip, ror #31
   11f20:	andeq	r2, r1, r4, lsl r0
   11f24:	andeq	r2, r1, ip, lsr r0
   11f28:	andeq	r2, r1, r4, rrx
   11f2c:	andeq	r2, r1, ip, lsl #1
   11f30:	strheq	r2, [r1], -r4
   11f34:	ldrdeq	r2, [r1], -ip
   11f38:	andeq	r2, r1, r4, lsl #2
   11f3c:	andeq	r2, r1, ip, lsr #2
   11f40:	andeq	r2, r1, r4, asr r1
   11f44:	andeq	r2, r1, ip, ror r1
   11f48:	andeq	r2, r1, r4, lsr #3
   11f4c:	andeq	r2, r1, ip, asr #3
   11f50:	andeq	r2, r1, ip, lsl r2
   11f54:	andeq	r2, r1, r0, asr #4
   11f58:	andeq	r2, r1, r4, ror #4
   11f5c:			; <UNDEFINED> instruction: 0x000122b0
   11f60:	ldrdeq	r2, [r1], -r8
   11f64:	strdeq	r2, [r1], -r4
   11f68:	andeq	r2, r1, r8, lsl #5
   11f6c:	andeq	r2, r1, r0, lsl #6
   11f70:	mov	r2, r4
   11f74:	mov	r1, r5
   11f78:	mov	r0, r6
   11f7c:	bl	12dc8 <table_get_int@@Base>
   11f80:	mov	r2, r4
   11f84:	mov	r1, r5
   11f88:	mov	r3, r0
   11f8c:	mov	r0, r7
   11f90:	bl	133d4 <table_set_int@@Base>
   11f94:	add	r4, r4, #1
   11f98:	b	11eec <table_dupe@@Base+0x88>
   11f9c:	mov	r2, r4
   11fa0:	mov	r1, r5
   11fa4:	mov	r0, r6
   11fa8:	bl	12ddc <table_get_uint@@Base>
   11fac:	mov	r2, r4
   11fb0:	mov	r1, r5
   11fb4:	mov	r3, r0
   11fb8:	mov	r0, r7
   11fbc:	bl	133f8 <table_set_uint@@Base>
   11fc0:	b	11f94 <table_dupe@@Base+0x130>
   11fc4:	mov	r2, r4
   11fc8:	mov	r1, r5
   11fcc:	mov	r0, r6
   11fd0:	bl	12da8 <table_get_int8@@Base>
   11fd4:	mov	r2, r4
   11fd8:	mov	r1, r5
   11fdc:	mov	r3, r0
   11fe0:	mov	r0, r7
   11fe4:	bl	1341c <table_set_int8@@Base>
   11fe8:	b	11f94 <table_dupe@@Base+0x130>
   11fec:	mov	r2, r4
   11ff0:	mov	r1, r5
   11ff4:	mov	r0, r6
   11ff8:	bl	12e94 <table_get_uint8@@Base>
   11ffc:	mov	r2, r4
   12000:	mov	r1, r5
   12004:	mov	r3, r0
   12008:	mov	r0, r7
   1200c:	bl	13440 <table_set_uint8@@Base>
   12010:	b	11f94 <table_dupe@@Base+0x130>
   12014:	mov	r2, r4
   12018:	mov	r1, r5
   1201c:	mov	r0, r6
   12020:	bl	12df0 <table_get_int16@@Base>
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r3, r0
   12030:	mov	r0, r7
   12034:	bl	13464 <table_set_int16@@Base>
   12038:	b	11f94 <table_dupe@@Base+0x130>
   1203c:	mov	r2, r4
   12040:	mov	r1, r5
   12044:	mov	r0, r6
   12048:	bl	12e04 <table_get_uint16@@Base>
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r3, r0
   12058:	mov	r0, r7
   1205c:	bl	13488 <table_set_uint16@@Base>
   12060:	b	11f94 <table_dupe@@Base+0x130>
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	mov	r0, r6
   12070:	bl	12db8 <table_get_int32@@Base>
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	mov	r3, r0
   12080:	mov	r0, r7
   12084:	bl	134ac <table_set_int32@@Base>
   12088:	b	11f94 <table_dupe@@Base+0x130>
   1208c:	mov	r2, r4
   12090:	mov	r1, r5
   12094:	mov	r0, r6
   12098:	bl	12dcc <table_get_uint32@@Base>
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	mov	r3, r0
   120a8:	mov	r0, r7
   120ac:	bl	134d0 <table_set_uint32@@Base>
   120b0:	b	11f94 <table_dupe@@Base+0x130>
   120b4:	mov	r2, r4
   120b8:	mov	r1, r5
   120bc:	mov	r0, r6
   120c0:	bl	12e38 <table_get_int64@@Base>
   120c4:	mov	r2, r4
   120c8:	strd	r0, [sp]
   120cc:	mov	r1, r5
   120d0:	mov	r0, r7
   120d4:	bl	134f4 <table_set_int64@@Base>
   120d8:	b	11f94 <table_dupe@@Base+0x130>
   120dc:	mov	r2, r4
   120e0:	mov	r1, r5
   120e4:	mov	r0, r6
   120e8:	bl	12e4c <table_get_uint64@@Base>
   120ec:	mov	r2, r4
   120f0:	strd	r0, [sp]
   120f4:	mov	r1, r5
   120f8:	mov	r0, r7
   120fc:	bl	13510 <table_set_uint64@@Base>
   12100:	b	11f94 <table_dupe@@Base+0x130>
   12104:	mov	r2, r4
   12108:	mov	r1, r5
   1210c:	mov	r0, r6
   12110:	bl	12de0 <table_get_short@@Base>
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r3, r0
   12120:	mov	r0, r7
   12124:	bl	1352c <table_set_short@@Base>
   12128:	b	11f94 <table_dupe@@Base+0x130>
   1212c:	mov	r2, r4
   12130:	mov	r1, r5
   12134:	mov	r0, r6
   12138:	bl	12df4 <table_get_ushort@@Base>
   1213c:	mov	r2, r4
   12140:	mov	r1, r5
   12144:	mov	r3, r0
   12148:	mov	r0, r7
   1214c:	bl	13550 <table_set_ushort@@Base>
   12150:	b	11f94 <table_dupe@@Base+0x130>
   12154:	mov	r2, r4
   12158:	mov	r1, r5
   1215c:	mov	r0, r6
   12160:	bl	12e08 <table_get_long@@Base>
   12164:	mov	r2, r4
   12168:	mov	r1, r5
   1216c:	mov	r3, r0
   12170:	mov	r0, r7
   12174:	bl	13574 <table_set_long@@Base>
   12178:	b	11f94 <table_dupe@@Base+0x130>
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	mov	r0, r6
   12188:	bl	12e18 <table_get_ulong@@Base>
   1218c:	mov	r2, r4
   12190:	mov	r1, r5
   12194:	mov	r3, r0
   12198:	mov	r0, r7
   1219c:	bl	13598 <table_set_ulong@@Base>
   121a0:	b	11f94 <table_dupe@@Base+0x130>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	mov	r0, r6
   121b0:	bl	12e28 <table_get_llong@@Base>
   121b4:	mov	r2, r4
   121b8:	strd	r0, [sp]
   121bc:	mov	r1, r5
   121c0:	mov	r0, r7
   121c4:	bl	135bc <table_set_llong@@Base>
   121c8:	b	11f94 <table_dupe@@Base+0x130>
   121cc:	mov	r2, r4
   121d0:	mov	r1, r5
   121d4:	mov	r0, r6
   121d8:	bl	12e3c <table_get_ullong@@Base>
   121dc:	mov	r2, r4
   121e0:	strd	r0, [sp]
   121e4:	mov	r1, r5
   121e8:	mov	r0, r7
   121ec:	bl	135d8 <table_set_ullong@@Base>
   121f0:	b	11f94 <table_dupe@@Base+0x130>
   121f4:	mov	r2, r4
   121f8:	mov	r1, r5
   121fc:	mov	r0, r6
   12200:	bl	12e98 <table_get_string@@Base>
   12204:	mov	r2, r4
   12208:	mov	r1, r5
   1220c:	mov	r3, r0
   12210:	mov	r0, r7
   12214:	bl	13654 <table_set_string@@Base>
   12218:	b	11f94 <table_dupe@@Base+0x130>
   1221c:	mov	r2, r4
   12220:	mov	r1, r5
   12224:	mov	r0, r6
   12228:	bl	12e50 <table_get_float@@Base>
   1222c:	mov	r2, r4
   12230:	mov	r1, r5
   12234:	mov	r0, r7
   12238:	bl	135f4 <table_set_float@@Base>
   1223c:	b	11f94 <table_dupe@@Base+0x130>
   12240:	mov	r2, r4
   12244:	mov	r1, r5
   12248:	mov	r0, r6
   1224c:	bl	12e60 <table_get_double@@Base>
   12250:	mov	r2, r4
   12254:	mov	r1, r5
   12258:	mov	r0, r7
   1225c:	bl	13614 <table_set_double@@Base>
   12260:	b	11f94 <table_dupe@@Base+0x130>
   12264:	mov	r2, r4
   12268:	mov	r1, r5
   1226c:	mov	r0, r6
   12270:	bl	12e70 <table_get_ldouble@@Base>
   12274:	mov	r2, r4
   12278:	mov	r1, r5
   1227c:	mov	r0, r7
   12280:	bl	13634 <table_set_ldouble@@Base>
   12284:	b	11f94 <table_dupe@@Base+0x130>
   12288:	mov	r2, r4
   1228c:	mov	r1, r5
   12290:	mov	r0, r6
   12294:	bl	12d98 <table_get_bool@@Base>
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r3, r0
   122a4:	mov	r0, r7
   122a8:	bl	133b0 <table_set_bool@@Base>
   122ac:	b	11f94 <table_dupe@@Base+0x130>
   122b0:	mov	r2, r4
   122b4:	mov	r1, r5
   122b8:	mov	r0, r6
   122bc:	bl	12e90 <table_get_char@@Base>
   122c0:	mov	r2, r4
   122c4:	mov	r1, r5
   122c8:	mov	r3, r0
   122cc:	mov	r0, r7
   122d0:	bl	1366c <table_set_char@@Base>
   122d4:	b	11f94 <table_dupe@@Base+0x130>
   122d8:	mov	r2, r4
   122dc:	mov	r1, r5
   122e0:	mov	r0, r6
   122e4:	bl	12e80 <table_get_uchar@@Base>
   122e8:	mov	r2, r4
   122ec:	mov	r1, r5
   122f0:	mov	r3, r0
   122f4:	mov	r0, r7
   122f8:	bl	13690 <table_set_uchar@@Base>
   122fc:	b	11f94 <table_dupe@@Base+0x130>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r6
   1230c:	bl	12e9c <table_get_ptr@@Base>
   12310:	add	r3, sp, #12
   12314:	mov	r2, r4
   12318:	mov	r1, r5
   1231c:	str	r0, [sp, #12]
   12320:	mov	r0, r7
   12324:	bl	136b4 <table_set_ptr@@Base>
   12328:	b	11f94 <table_dupe@@Base+0x130>

0001232c <table_get_major_version@@Base>:
   1232c:	mov	r0, #0
   12330:	bx	lr

00012334 <table_get_minor_version@@Base>:
   12334:	mov	r0, #0
   12338:	bx	lr

0001233c <table_get_patch_version@@Base>:
   1233c:	mov	r0, #0
   12340:	bx	lr

00012344 <table_get_version@@Base>:
   12344:	ldr	r0, [pc]	; 1234c <table_get_version@@Base+0x8>
   12348:	bx	lr
   1234c:	andeq	r4, r1, ip, asr #6

00012350 <table_get_callback_length@@Base>:
   12350:	ldr	r0, [r0, #32]
   12354:	bx	lr

00012358 <table_register_callback@@Base>:
   12358:	push	{r4, r5, r6, r7, r8, lr}
   1235c:	mov	r4, r0
   12360:	ldr	r0, [r0, #32]
   12364:	mov	ip, #0
   12368:	cmp	ip, r0
   1236c:	blt	12400 <table_register_callback@@Base+0xa8>
   12370:	ldr	r5, [r4, #48]	; 0x30
   12374:	mov	r8, r1
   12378:	mov	r1, r5
   1237c:	mov	r6, r3
   12380:	mov	r7, r2
   12384:	bl	141d4 <table_cell_nullify@@Base+0x218>
   12388:	cmp	r1, #0
   1238c:	bne	123d4 <table_register_callback@@Base+0x7c>
   12390:	ldr	r1, [r4, #52]	; 0x34
   12394:	ldr	r0, [r4, #36]	; 0x24
   12398:	add	r1, r5, r1
   1239c:	str	r1, [r4, #52]	; 0x34
   123a0:	lsl	r1, r1, #2
   123a4:	bl	11ac4 <realloc@plt>
   123a8:	ldr	r1, [r4, #52]	; 0x34
   123ac:	lsl	r1, r1, #2
   123b0:	str	r0, [r4, #36]	; 0x24
   123b4:	ldr	r0, [r4, #40]	; 0x28
   123b8:	bl	11ac4 <realloc@plt>
   123bc:	ldr	r1, [r4, #52]	; 0x34
   123c0:	lsl	r1, r1, #2
   123c4:	str	r0, [r4, #40]	; 0x28
   123c8:	ldr	r0, [r4, #44]	; 0x2c
   123cc:	bl	11ac4 <realloc@plt>
   123d0:	str	r0, [r4, #44]	; 0x2c
   123d4:	ldr	r3, [r4, #32]
   123d8:	ldr	r2, [r4, #36]	; 0x24
   123dc:	str	r8, [r2, r3, lsl #2]
   123e0:	ldr	r2, [r4, #40]	; 0x28
   123e4:	str	r7, [r2, r3, lsl #2]
   123e8:	ldr	r2, [r4, #44]	; 0x2c
   123ec:	str	r6, [r2, r3, lsl #2]
   123f0:	ldr	r3, [r4, #32]
   123f4:	add	r3, r3, #1
   123f8:	str	r3, [r4, #32]
   123fc:	pop	{r4, r5, r6, r7, r8, pc}
   12400:	ldr	r5, [r4, #36]	; 0x24
   12404:	lsl	lr, ip, #2
   12408:	ldr	r5, [r5, ip, lsl #2]
   1240c:	cmp	r1, r5
   12410:	bne	12424 <table_register_callback@@Base+0xcc>
   12414:	ldr	r5, [r4, #40]	; 0x28
   12418:	ldr	r5, [r5, ip, lsl #2]
   1241c:	cmp	r2, r5
   12420:	beq	1242c <table_register_callback@@Base+0xd4>
   12424:	add	ip, ip, #1
   12428:	b	12368 <table_register_callback@@Base+0x10>
   1242c:	cmp	ip, #0
   12430:	ble	12370 <table_register_callback@@Base+0x18>
   12434:	ldr	r1, [r4, #44]	; 0x2c
   12438:	ldr	r2, [r1, lr]
   1243c:	orr	r3, r2, r3
   12440:	str	r3, [r1, lr]
   12444:	pop	{r4, r5, r6, r7, r8, pc}

00012448 <table_unregister_callback@@Base>:
   12448:	push	{r4, r5, r6, lr}
   1244c:	mov	r4, r0
   12450:	ldr	r0, [r0, #32]
   12454:	mov	r3, #0
   12458:	cmp	r3, r0
   1245c:	blt	12464 <table_unregister_callback@@Base+0x1c>
   12460:	pop	{r4, r5, r6, pc}
   12464:	ldr	lr, [r4, #36]	; 0x24
   12468:	lsl	ip, r3, #2
   1246c:	ldr	lr, [lr, r3, lsl #2]
   12470:	cmp	r1, lr
   12474:	bne	12488 <table_unregister_callback@@Base+0x40>
   12478:	ldr	lr, [r4, #40]	; 0x28
   1247c:	ldr	lr, [lr, r3, lsl #2]
   12480:	cmp	r2, lr
   12484:	beq	124bc <table_unregister_callback@@Base+0x74>
   12488:	add	r3, r3, #1
   1248c:	b	12458 <table_unregister_callback@@Base+0x10>
   12490:	ldr	r1, [r4, #36]	; 0x24
   12494:	add	r3, r3, #1
   12498:	ldr	r0, [r1, r2]
   1249c:	str	r0, [r1, ip]
   124a0:	ldr	r1, [r4, #40]	; 0x28
   124a4:	ldr	r0, [r1, r2]
   124a8:	str	r0, [r1, ip]
   124ac:	ldr	r1, [r4, #44]	; 0x2c
   124b0:	ldr	r0, [r1, r2]
   124b4:	str	r0, [r1, ip]
   124b8:	mov	ip, r2
   124bc:	ldr	r0, [r4, #32]
   124c0:	add	r2, ip, #4
   124c4:	sub	r0, r0, #1
   124c8:	cmp	r3, r0
   124cc:	blt	12490 <table_unregister_callback@@Base+0x48>
   124d0:	ldr	r6, [r4, #48]	; 0x30
   124d4:	str	r0, [r4, #32]
   124d8:	mov	r1, r6
   124dc:	bl	141d4 <table_cell_nullify@@Base+0x218>
   124e0:	cmp	r1, #0
   124e4:	popne	{r4, r5, r6, pc}
   124e8:	ldr	r5, [r4, #52]	; 0x34
   124ec:	sub	r5, r5, r6
   124f0:	cmp	r5, #0
   124f4:	str	r5, [r4, #52]	; 0x34
   124f8:	beq	12538 <table_unregister_callback@@Base+0xf0>
   124fc:	lsl	r1, r5, #2
   12500:	ldr	r0, [r4, #36]	; 0x24
   12504:	bl	11ac4 <realloc@plt>
   12508:	ldr	r1, [r4, #52]	; 0x34
   1250c:	lsl	r1, r1, #2
   12510:	str	r0, [r4, #36]	; 0x24
   12514:	ldr	r0, [r4, #40]	; 0x28
   12518:	bl	11ac4 <realloc@plt>
   1251c:	ldr	r1, [r4, #52]	; 0x34
   12520:	lsl	r1, r1, #2
   12524:	str	r0, [r4, #40]	; 0x28
   12528:	ldr	r0, [r4, #44]	; 0x2c
   1252c:	bl	11ac4 <realloc@plt>
   12530:	str	r0, [r4, #44]	; 0x2c
   12534:	pop	{r4, r5, r6, pc}
   12538:	ldr	r0, [r4, #36]	; 0x24
   1253c:	bl	11ab8 <free@plt>
   12540:	ldr	r0, [r4, #40]	; 0x28
   12544:	bl	11ab8 <free@plt>
   12548:	ldr	r0, [r4, #44]	; 0x2c
   1254c:	bl	11ab8 <free@plt>
   12550:	str	r5, [r4, #36]	; 0x24
   12554:	str	r5, [r4, #40]	; 0x28
   12558:	str	r5, [r4, #44]	; 0x2c
   1255c:	pop	{r4, r5, r6, pc}

00012560 <table_notify@@Base>:
   12560:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12564:	mov	r5, r0
   12568:	mov	r7, r1
   1256c:	mov	r8, r2
   12570:	mov	r6, r3
   12574:	mov	r4, #0
   12578:	ldr	r3, [r5, #32]
   1257c:	cmp	r4, r3
   12580:	blt	1258c <table_notify@@Base+0x2c>
   12584:	add	sp, sp, #12
   12588:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1258c:	ldr	r3, [r5, #44]	; 0x2c
   12590:	ldr	r3, [r3, r4, lsl #2]
   12594:	tst	r6, r3
   12598:	beq	125c4 <table_notify@@Base+0x64>
   1259c:	ldr	r2, [r5, #40]	; 0x28
   125a0:	ldr	r3, [r5, #36]	; 0x24
   125a4:	mov	r1, r7
   125a8:	ldr	r2, [r2, r4, lsl #2]
   125ac:	mov	r0, r5
   125b0:	str	r2, [sp]
   125b4:	mov	r2, r8
   125b8:	ldr	r9, [r3, r4, lsl #2]
   125bc:	mov	r3, r6
   125c0:	blx	r9
   125c4:	add	r4, r4, #1
   125c8:	b	12578 <table_notify@@Base+0x18>

000125cc <table_column_init@@Base>:
   125cc:	push	{r4, r5, r6, r7, r8, lr}
   125d0:	mov	r4, #12
   125d4:	ldr	r7, [r0]
   125d8:	mov	r0, r2
   125dc:	mul	r4, r4, r1
   125e0:	mov	r6, r2
   125e4:	mov	r8, r3
   125e8:	bl	11b00 <strlen@plt>
   125ec:	add	r5, r7, r4
   125f0:	add	r0, r0, #1
   125f4:	bl	11adc <malloc@plt>
   125f8:	cmp	r0, #0
   125fc:	str	r0, [r7, r4]
   12600:	beq	1260c <table_column_init@@Base+0x40>
   12604:	mov	r1, r6
   12608:	bl	11ad0 <strcpy@plt>
   1260c:	ldr	r3, [sp, #24]
   12610:	str	r8, [r5, #4]
   12614:	str	r3, [r5, #8]
   12618:	pop	{r4, r5, r6, r7, r8, pc}

0001261c <table_column_destroy@@Base>:
   1261c:	mov	r3, #12
   12620:	ldr	r2, [r0]
   12624:	mul	r1, r3, r1
   12628:	ldr	r0, [r2, r1]
   1262c:	cmp	r0, #0
   12630:	bxeq	lr
   12634:	b	11ab8 <free@plt>

00012638 <table_get_column_length@@Base>:
   12638:	ldr	r0, [r0, #4]
   1263c:	bx	lr

00012640 <table_get_column@@Base>:
   12640:	push	{r4, r5, r6, r7, r8, lr}
   12644:	mov	r5, r0
   12648:	ldr	r6, [r0, #4]
   1264c:	mov	r7, r1
   12650:	mov	r4, #0
   12654:	mov	r8, #12
   12658:	cmp	r4, r6
   1265c:	blt	1266c <table_get_column@@Base+0x2c>
   12660:	mvneq	r4, #0
   12664:	mov	r0, r4
   12668:	pop	{r4, r5, r6, r7, r8, pc}
   1266c:	mul	r3, r8, r4
   12670:	ldr	r2, [r5]
   12674:	mov	r1, r7
   12678:	ldr	r0, [r2, r3]
   1267c:	bl	11aa0 <strcmp@plt>
   12680:	cmp	r0, #0
   12684:	beq	12664 <table_get_column@@Base+0x24>
   12688:	add	r4, r4, #1
   1268c:	b	12658 <table_get_column@@Base+0x18>

00012690 <table_get_column_data_type@@Base>:
   12690:	ldr	r2, [r0]
   12694:	mov	r3, #12
   12698:	mla	r1, r3, r1, r2
   1269c:	ldr	r0, [r1, #4]
   126a0:	bx	lr

000126a4 <table_add_column@@Base>:
   126a4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   126a8:	mov	r4, r0
   126ac:	ldr	r6, [r0, #8]
   126b0:	mov	r8, r1
   126b4:	ldr	r0, [r0, #4]
   126b8:	mov	r1, r6
   126bc:	mov	r7, r2
   126c0:	bl	141d4 <table_cell_nullify@@Base+0x218>
   126c4:	subs	r5, r1, #0
   126c8:	beq	12730 <table_add_column@@Base+0x8c>
   126cc:	mov	r0, r4
   126d0:	bl	12f10 <table_get_row_length@@Base>
   126d4:	ldr	r6, [r4, #4]
   126d8:	mov	r5, #0
   126dc:	mov	r9, r0
   126e0:	mov	r0, r7
   126e4:	bl	12d70 <table_get_default_compare_function_for_data_type@@Base>
   126e8:	mov	r3, r7
   126ec:	mov	r2, r8
   126f0:	mov	r1, r6
   126f4:	str	r0, [sp]
   126f8:	mov	r0, r4
   126fc:	bl	125cc <table_column_init@@Base>
   12700:	cmp	r9, r5
   12704:	bgt	12790 <table_add_column@@Base+0xec>
   12708:	mov	r0, r4
   1270c:	mov	r3, #8
   12710:	ldr	r2, [r4, #4]
   12714:	mvn	r1, #0
   12718:	bl	12560 <table_notify@@Base>
   1271c:	ldr	r0, [r4, #4]
   12720:	add	r3, r0, #1
   12724:	str	r3, [r4, #4]
   12728:	add	sp, sp, #12
   1272c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12730:	ldr	r1, [r4, #12]
   12734:	ldr	r0, [r4]
   12738:	add	r6, r6, r1
   1273c:	mov	r1, #12
   12740:	str	r6, [r4, #12]
   12744:	mul	r1, r1, r6
   12748:	bl	11ac4 <realloc@plt>
   1274c:	str	r0, [r4]
   12750:	mov	r0, r4
   12754:	bl	12f10 <table_get_row_length@@Base>
   12758:	mov	r9, r0
   1275c:	cmp	r9, r5
   12760:	ble	126cc <table_add_column@@Base+0x28>
   12764:	mov	r1, r5
   12768:	mov	r0, r4
   1276c:	bl	130b4 <table_get_row_ptr@@Base>
   12770:	ldr	r1, [r4, #12]
   12774:	add	r5, r5, #1
   12778:	lsl	r1, r1, #2
   1277c:	mov	r6, r0
   12780:	ldr	r0, [r0]
   12784:	bl	11ac4 <realloc@plt>
   12788:	str	r0, [r6]
   1278c:	b	1275c <table_add_column@@Base+0xb8>
   12790:	mov	r1, r5
   12794:	mov	r2, r6
   12798:	mov	r0, r4
   1279c:	bl	13f64 <table_cell_init@@Base>
   127a0:	add	r5, r5, #1
   127a4:	b	12700 <table_add_column@@Base+0x5c>

000127a8 <table_remove_column@@Base>:
   127a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127ac:	mov	r5, r1
   127b0:	mov	r4, r0
   127b4:	bl	1261c <table_column_destroy@@Base>
   127b8:	mov	r3, #12
   127bc:	ldr	r7, [r4, #4]
   127c0:	mul	r3, r3, r5
   127c4:	mov	r1, r5
   127c8:	sub	r7, r7, #1
   127cc:	cmp	r1, r7
   127d0:	add	lr, r3, #12
   127d4:	blt	12864 <table_remove_column@@Base+0xbc>
   127d8:	mov	r0, r4
   127dc:	bl	12f10 <table_get_row_length@@Base>
   127e0:	lsl	r9, r5, #2
   127e4:	mov	r6, #0
   127e8:	mov	r8, r0
   127ec:	cmp	r8, r6
   127f0:	bgt	12894 <table_remove_column@@Base+0xec>
   127f4:	ldr	r0, [r4, #4]
   127f8:	ldr	r7, [r4, #8]
   127fc:	sub	r0, r0, #1
   12800:	str	r0, [r4, #4]
   12804:	mov	r1, r7
   12808:	bl	141d4 <table_cell_nullify@@Base+0x218>
   1280c:	subs	r6, r1, #0
   12810:	bne	12848 <table_remove_column@@Base+0xa0>
   12814:	ldr	r1, [r4, #12]
   12818:	mov	r3, #12
   1281c:	sub	r1, r1, r7
   12820:	str	r1, [r4, #12]
   12824:	ldr	r0, [r4]
   12828:	mul	r1, r3, r1
   1282c:	bl	11ac4 <realloc@plt>
   12830:	str	r0, [r4]
   12834:	mov	r0, r4
   12838:	bl	12f10 <table_get_row_length@@Base>
   1283c:	mov	r8, r0
   12840:	cmp	r8, r6
   12844:	bgt	128e0 <table_remove_column@@Base+0x138>
   12848:	mov	r0, r4
   1284c:	mov	r3, #16
   12850:	mov	r2, r5
   12854:	mvn	r1, #0
   12858:	bl	12560 <table_notify@@Base>
   1285c:	mov	r0, #0
   12860:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12864:	ldr	ip, [r4]
   12868:	add	r1, r1, #1
   1286c:	add	r0, ip, lr
   12870:	add	r6, ip, r3
   12874:	ldr	r2, [r0]
   12878:	str	r2, [ip, r3]
   1287c:	ldr	r2, [r0, #4]
   12880:	mov	r3, lr
   12884:	str	r2, [r6, #4]
   12888:	ldr	r2, [r0, #8]
   1288c:	str	r2, [r6, #8]
   12890:	b	127cc <table_remove_column@@Base+0x24>
   12894:	mov	r2, r5
   12898:	mov	r1, r6
   1289c:	mov	r0, r4
   128a0:	bl	13f78 <table_cell_destroy@@Base>
   128a4:	mov	r1, r6
   128a8:	mov	r0, r4
   128ac:	bl	130b4 <table_get_row_ptr@@Base>
   128b0:	mov	r2, r9
   128b4:	mov	r3, r5
   128b8:	cmp	r7, r3
   128bc:	add	r1, r2, #4
   128c0:	addle	r6, r6, #1
   128c4:	ble	127ec <table_remove_column@@Base+0x44>
   128c8:	ldr	ip, [r0]
   128cc:	add	r3, r3, #1
   128d0:	ldr	lr, [ip, r1]
   128d4:	str	lr, [ip, r2]
   128d8:	mov	r2, r1
   128dc:	b	128b8 <table_remove_column@@Base+0x110>
   128e0:	mov	r1, r6
   128e4:	mov	r0, r4
   128e8:	bl	130b4 <table_get_row_ptr@@Base>
   128ec:	ldr	r1, [r4, #12]
   128f0:	add	r6, r6, #1
   128f4:	lsl	r1, r1, #2
   128f8:	mov	r7, r0
   128fc:	ldr	r0, [r0]
   12900:	bl	11ac4 <realloc@plt>
   12904:	str	r0, [r7]
   12908:	b	12840 <table_remove_column@@Base+0x98>

0001290c <table_get_column_name@@Base>:
   1290c:	mov	r3, #12
   12910:	ldr	r2, [r0]
   12914:	mul	r1, r3, r1
   12918:	ldr	r0, [r2, r1]
   1291c:	bx	lr

00012920 <table_get_col_ptr@@Base>:
   12920:	ldr	r3, [r0]
   12924:	mov	r0, #12
   12928:	mla	r0, r0, r1, r3
   1292c:	bx	lr

00012930 <table_get_column_compare_function@@Base>:
   12930:	ldr	r2, [r0]
   12934:	mov	r3, #12
   12938:	mla	r1, r3, r1, r2
   1293c:	ldr	r0, [r1, #8]
   12940:	bx	lr

00012944 <table_set_column_compare_function@@Base>:
   12944:	ldr	r0, [r0]
   12948:	mov	r3, #12
   1294c:	mla	r1, r3, r1, r0
   12950:	str	r2, [r1, #8]
   12954:	bx	lr

00012958 <table_compare_bool@@Base>:
   12958:	cmp	r0, #0
   1295c:	bne	1296c <table_compare_bool@@Base+0x14>
   12960:	adds	r0, r1, #0
   12964:	mvnne	r0, #0
   12968:	bx	lr
   1296c:	cmp	r1, #0
   12970:	beq	12990 <table_compare_bool@@Base+0x38>
   12974:	ldrb	r2, [r0]
   12978:	ldrb	r3, [r1]
   1297c:	cmp	r2, r3
   12980:	bgt	12990 <table_compare_bool@@Base+0x38>
   12984:	mvnlt	r0, #0
   12988:	movge	r0, #0
   1298c:	bx	lr
   12990:	mov	r0, #1
   12994:	bx	lr

00012998 <table_compare_int8@@Base>:
   12998:	cmp	r0, #0
   1299c:	bne	129ac <table_compare_int8@@Base+0x14>
   129a0:	adds	r0, r1, #0
   129a4:	mvnne	r0, #0
   129a8:	bx	lr
   129ac:	cmp	r1, #0
   129b0:	beq	129d0 <table_compare_int8@@Base+0x38>
   129b4:	ldrsb	r2, [r0]
   129b8:	ldrsb	r3, [r1]
   129bc:	cmp	r2, r3
   129c0:	bgt	129d0 <table_compare_int8@@Base+0x38>
   129c4:	mvnlt	r0, #0
   129c8:	movge	r0, #0
   129cc:	bx	lr
   129d0:	mov	r0, #1
   129d4:	bx	lr

000129d8 <table_compare_int32@@Base>:
   129d8:	cmp	r0, #0
   129dc:	bne	129ec <table_compare_int32@@Base+0x14>
   129e0:	adds	r0, r1, #0
   129e4:	mvnne	r0, #0
   129e8:	bx	lr
   129ec:	cmp	r1, #0
   129f0:	beq	12a10 <table_compare_int32@@Base+0x38>
   129f4:	ldr	r2, [r0]
   129f8:	ldr	r3, [r1]
   129fc:	cmp	r2, r3
   12a00:	bgt	12a10 <table_compare_int32@@Base+0x38>
   12a04:	mvnlt	r0, #0
   12a08:	movge	r0, #0
   12a0c:	bx	lr
   12a10:	mov	r0, #1
   12a14:	bx	lr

00012a18 <table_compare_int@@Base>:
   12a18:	b	129d8 <table_compare_int32@@Base>

00012a1c <table_compare_uint32@@Base>:
   12a1c:	cmp	r0, #0
   12a20:	bne	12a30 <table_compare_uint32@@Base+0x14>
   12a24:	adds	r0, r1, #0
   12a28:	mvnne	r0, #0
   12a2c:	bx	lr
   12a30:	cmp	r1, #0
   12a34:	beq	12a54 <table_compare_uint32@@Base+0x38>
   12a38:	ldr	r2, [r0]
   12a3c:	ldr	r3, [r1]
   12a40:	cmp	r2, r3
   12a44:	bhi	12a54 <table_compare_uint32@@Base+0x38>
   12a48:	mvncc	r0, #0
   12a4c:	movcs	r0, #0
   12a50:	bx	lr
   12a54:	mov	r0, #1
   12a58:	bx	lr

00012a5c <table_compare_uint@@Base>:
   12a5c:	b	12a1c <table_compare_uint32@@Base>

00012a60 <table_compare_uint64@@Base>:
   12a60:	cmp	r0, #0
   12a64:	bne	12a74 <table_compare_uint64@@Base+0x14>
   12a68:	adds	r0, r1, #0
   12a6c:	mvnne	r0, #0
   12a70:	bx	lr
   12a74:	cmp	r1, #0
   12a78:	beq	12aa0 <table_compare_uint64@@Base+0x40>
   12a7c:	ldrd	r2, [r1]
   12a80:	push	{r4, r5, lr}
   12a84:	ldrd	r4, [r0]
   12a88:	cmp	r5, r3
   12a8c:	cmpeq	r4, r2
   12a90:	bhi	12aa8 <table_compare_uint64@@Base+0x48>
   12a94:	mvncc	r0, #0
   12a98:	movcs	r0, #0
   12a9c:	pop	{r4, r5, pc}
   12aa0:	mov	r0, #1
   12aa4:	bx	lr
   12aa8:	mov	r0, #1
   12aac:	pop	{r4, r5, pc}

00012ab0 <table_compare_short@@Base>:
   12ab0:	cmp	r0, #0
   12ab4:	bne	12ac4 <table_compare_short@@Base+0x14>
   12ab8:	adds	r0, r1, #0
   12abc:	mvnne	r0, #0
   12ac0:	bx	lr
   12ac4:	cmp	r1, #0
   12ac8:	beq	12ae8 <table_compare_short@@Base+0x38>
   12acc:	ldrsh	r2, [r0]
   12ad0:	ldrsh	r3, [r1]
   12ad4:	cmp	r2, r3
   12ad8:	bgt	12ae8 <table_compare_short@@Base+0x38>
   12adc:	mvnlt	r0, #0
   12ae0:	movge	r0, #0
   12ae4:	bx	lr
   12ae8:	mov	r0, #1
   12aec:	bx	lr

00012af0 <table_compare_int16@@Base>:
   12af0:	b	12ab0 <table_compare_short@@Base>

00012af4 <table_compare_ushort@@Base>:
   12af4:	cmp	r0, #0
   12af8:	bne	12b08 <table_compare_ushort@@Base+0x14>
   12afc:	adds	r0, r1, #0
   12b00:	mvnne	r0, #0
   12b04:	bx	lr
   12b08:	cmp	r1, #0
   12b0c:	beq	12b2c <table_compare_ushort@@Base+0x38>
   12b10:	ldrh	r2, [r0]
   12b14:	ldrh	r3, [r1]
   12b18:	cmp	r2, r3
   12b1c:	bhi	12b2c <table_compare_ushort@@Base+0x38>
   12b20:	mvncc	r0, #0
   12b24:	movcs	r0, #0
   12b28:	bx	lr
   12b2c:	mov	r0, #1
   12b30:	bx	lr

00012b34 <table_compare_uint16@@Base>:
   12b34:	b	12af4 <table_compare_ushort@@Base>

00012b38 <table_compare_long@@Base>:
   12b38:	cmp	r0, #0
   12b3c:	bne	12b4c <table_compare_long@@Base+0x14>
   12b40:	adds	r0, r1, #0
   12b44:	mvnne	r0, #0
   12b48:	bx	lr
   12b4c:	cmp	r1, #0
   12b50:	beq	12b70 <table_compare_long@@Base+0x38>
   12b54:	ldr	r2, [r0]
   12b58:	ldr	r3, [r1]
   12b5c:	cmp	r2, r3
   12b60:	bgt	12b70 <table_compare_long@@Base+0x38>
   12b64:	mvnlt	r0, #0
   12b68:	movge	r0, #0
   12b6c:	bx	lr
   12b70:	mov	r0, #1
   12b74:	bx	lr

00012b78 <table_compare_llong@@Base>:
   12b78:	cmp	r0, #0
   12b7c:	bne	12b8c <table_compare_llong@@Base+0x14>
   12b80:	adds	r0, r1, #0
   12b84:	mvnne	r0, #0
   12b88:	bx	lr
   12b8c:	cmp	r1, #0
   12b90:	beq	12bc0 <table_compare_llong@@Base+0x48>
   12b94:	ldrd	r2, [r1]
   12b98:	push	{r4, r5, lr}
   12b9c:	ldrd	r4, [r0]
   12ba0:	cmp	r2, r4
   12ba4:	sbcs	r1, r3, r5
   12ba8:	blt	12bc8 <table_compare_llong@@Base+0x50>
   12bac:	cmp	r4, r2
   12bb0:	sbcs	r3, r5, r3
   12bb4:	mvnlt	r0, #0
   12bb8:	movge	r0, #0
   12bbc:	pop	{r4, r5, pc}
   12bc0:	mov	r0, #1
   12bc4:	bx	lr
   12bc8:	mov	r0, #1
   12bcc:	pop	{r4, r5, pc}

00012bd0 <table_compare_int64@@Base>:
   12bd0:	b	12b78 <table_compare_llong@@Base>

00012bd4 <table_compare_ullong@@Base>:
   12bd4:	cmp	r0, #0
   12bd8:	bne	12be8 <table_compare_ullong@@Base+0x14>
   12bdc:	adds	r0, r1, #0
   12be0:	mvnne	r0, #0
   12be4:	bx	lr
   12be8:	cmp	r1, #0
   12bec:	beq	12c0c <table_compare_ullong@@Base+0x38>
   12bf0:	ldr	r2, [r0]
   12bf4:	ldr	r3, [r1]
   12bf8:	cmp	r2, r3
   12bfc:	bhi	12c0c <table_compare_ullong@@Base+0x38>
   12c00:	mvncc	r0, #0
   12c04:	movcs	r0, #0
   12c08:	bx	lr
   12c0c:	mov	r0, #1
   12c10:	bx	lr

00012c14 <table_compare_ulong@@Base>:
   12c14:	b	12bd4 <table_compare_ullong@@Base>

00012c18 <table_compare_float@@Base>:
   12c18:	cmp	r0, #0
   12c1c:	bne	12c2c <table_compare_float@@Base+0x14>
   12c20:	adds	r0, r1, #0
   12c24:	mvnne	r0, #0
   12c28:	bx	lr
   12c2c:	cmp	r1, #0
   12c30:	beq	12c54 <table_compare_float@@Base+0x3c>
   12c34:	vldr	s14, [r0]
   12c38:	vldr	s15, [r1]
   12c3c:	vcmpe.f32	s14, s15
   12c40:	vmrs	APSR_nzcv, fpscr
   12c44:	bgt	12c54 <table_compare_float@@Base+0x3c>
   12c48:	mvnmi	r0, #0
   12c4c:	movpl	r0, #0
   12c50:	bx	lr
   12c54:	mov	r0, #1
   12c58:	bx	lr

00012c5c <table_compare_double@@Base>:
   12c5c:	cmp	r0, #0
   12c60:	bne	12c70 <table_compare_double@@Base+0x14>
   12c64:	adds	r0, r1, #0
   12c68:	mvnne	r0, #0
   12c6c:	bx	lr
   12c70:	cmp	r1, #0
   12c74:	beq	12c98 <table_compare_double@@Base+0x3c>
   12c78:	vldr	d6, [r0]
   12c7c:	vldr	d7, [r1]
   12c80:	vcmpe.f64	d6, d7
   12c84:	vmrs	APSR_nzcv, fpscr
   12c88:	bgt	12c98 <table_compare_double@@Base+0x3c>
   12c8c:	mvnmi	r0, #0
   12c90:	movpl	r0, #0
   12c94:	bx	lr
   12c98:	mov	r0, #1
   12c9c:	bx	lr

00012ca0 <table_compare_ldouble@@Base>:
   12ca0:	cmp	r0, #0
   12ca4:	bne	12cb4 <table_compare_ldouble@@Base+0x14>
   12ca8:	adds	r0, r1, #0
   12cac:	mvnne	r0, #0
   12cb0:	bx	lr
   12cb4:	cmp	r1, #0
   12cb8:	beq	12cdc <table_compare_ldouble@@Base+0x3c>
   12cbc:	vldr	d6, [r0]
   12cc0:	vldr	d7, [r1]
   12cc4:	vcmpe.f64	d6, d7
   12cc8:	vmrs	APSR_nzcv, fpscr
   12ccc:	bgt	12cdc <table_compare_ldouble@@Base+0x3c>
   12cd0:	mvnmi	r0, #0
   12cd4:	movpl	r0, #0
   12cd8:	bx	lr
   12cdc:	mov	r0, #1
   12ce0:	bx	lr

00012ce4 <table_compare_uchar@@Base>:
   12ce4:	cmp	r0, #0
   12ce8:	bne	12cf8 <table_compare_uchar@@Base+0x14>
   12cec:	adds	r0, r1, #0
   12cf0:	mvnne	r0, #0
   12cf4:	bx	lr
   12cf8:	cmp	r1, #0
   12cfc:	beq	12d1c <table_compare_uchar@@Base+0x38>
   12d00:	ldrb	r2, [r0]
   12d04:	ldrb	r3, [r1]
   12d08:	cmp	r2, r3
   12d0c:	bhi	12d1c <table_compare_uchar@@Base+0x38>
   12d10:	mvncc	r0, #0
   12d14:	movcs	r0, #0
   12d18:	bx	lr
   12d1c:	mov	r0, #1
   12d20:	bx	lr

00012d24 <table_compare_char@@Base>:
   12d24:	b	12ce4 <table_compare_uchar@@Base>

00012d28 <table_compare_uint8@@Base>:
   12d28:	b	12ce4 <table_compare_uchar@@Base>

00012d2c <table_compare_ptr@@Base>:
   12d2c:	cmp	r0, r1
   12d30:	bhi	12d40 <table_compare_ptr@@Base+0x14>
   12d34:	mvncc	r0, #0
   12d38:	movcs	r0, #0
   12d3c:	bx	lr
   12d40:	mov	r0, #1
   12d44:	bx	lr

00012d48 <table_compare_string@@Base>:
   12d48:	cmp	r0, #0
   12d4c:	bne	12d5c <table_compare_string@@Base+0x14>
   12d50:	adds	r0, r1, #0
   12d54:	mvnne	r0, #0
   12d58:	bx	lr
   12d5c:	cmp	r1, #0
   12d60:	beq	12d68 <table_compare_string@@Base+0x20>
   12d64:	b	11aa0 <strcmp@plt>
   12d68:	mov	r0, #1
   12d6c:	bx	lr

00012d70 <table_get_default_compare_function_for_data_type@@Base>:
   12d70:	cmp	r0, #23
   12d74:	ldrls	r3, [pc, #8]	; 12d84 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12d78:	ldrls	r0, [r3, r0, lsl #2]
   12d7c:	movhi	r0, #0
   12d80:	bx	lr
   12d84:			; <UNDEFINED> instruction: 0x000142bc

00012d88 <table_get@@Base>:
   12d88:	push	{r4, lr}
   12d8c:	bl	13f4c <table_get_cell_ptr@@Base>
   12d90:	ldr	r0, [r0]
   12d94:	pop	{r4, pc}

00012d98 <table_get_bool@@Base>:
   12d98:	push	{r4, lr}
   12d9c:	bl	12d88 <table_get@@Base>
   12da0:	ldrb	r0, [r0]
   12da4:	pop	{r4, pc}

00012da8 <table_get_int8@@Base>:
   12da8:	push	{r4, lr}
   12dac:	bl	12d88 <table_get@@Base>
   12db0:	ldrsb	r0, [r0]
   12db4:	pop	{r4, pc}

00012db8 <table_get_int32@@Base>:
   12db8:	push	{r4, lr}
   12dbc:	bl	12d88 <table_get@@Base>
   12dc0:	ldr	r0, [r0]
   12dc4:	pop	{r4, pc}

00012dc8 <table_get_int@@Base>:
   12dc8:	b	12db8 <table_get_int32@@Base>

00012dcc <table_get_uint32@@Base>:
   12dcc:	push	{r4, lr}
   12dd0:	bl	12d88 <table_get@@Base>
   12dd4:	ldr	r0, [r0]
   12dd8:	pop	{r4, pc}

00012ddc <table_get_uint@@Base>:
   12ddc:	b	12dcc <table_get_uint32@@Base>

00012de0 <table_get_short@@Base>:
   12de0:	push	{r4, lr}
   12de4:	bl	12d88 <table_get@@Base>
   12de8:	ldrsh	r0, [r0]
   12dec:	pop	{r4, pc}

00012df0 <table_get_int16@@Base>:
   12df0:	b	12de0 <table_get_short@@Base>

00012df4 <table_get_ushort@@Base>:
   12df4:	push	{r4, lr}
   12df8:	bl	12d88 <table_get@@Base>
   12dfc:	ldrh	r0, [r0]
   12e00:	pop	{r4, pc}

00012e04 <table_get_uint16@@Base>:
   12e04:	b	12df4 <table_get_ushort@@Base>

00012e08 <table_get_long@@Base>:
   12e08:	push	{r4, lr}
   12e0c:	bl	12d88 <table_get@@Base>
   12e10:	ldr	r0, [r0]
   12e14:	pop	{r4, pc}

00012e18 <table_get_ulong@@Base>:
   12e18:	push	{r4, lr}
   12e1c:	bl	12d88 <table_get@@Base>
   12e20:	ldr	r0, [r0]
   12e24:	pop	{r4, pc}

00012e28 <table_get_llong@@Base>:
   12e28:	push	{r4, lr}
   12e2c:	bl	12d88 <table_get@@Base>
   12e30:	ldrd	r0, [r0]
   12e34:	pop	{r4, pc}

00012e38 <table_get_int64@@Base>:
   12e38:	b	12e28 <table_get_llong@@Base>

00012e3c <table_get_ullong@@Base>:
   12e3c:	push	{r4, lr}
   12e40:	bl	12d88 <table_get@@Base>
   12e44:	ldrd	r0, [r0]
   12e48:	pop	{r4, pc}

00012e4c <table_get_uint64@@Base>:
   12e4c:	b	12e3c <table_get_ullong@@Base>

00012e50 <table_get_float@@Base>:
   12e50:	push	{r4, lr}
   12e54:	bl	12d88 <table_get@@Base>
   12e58:	vldr	s0, [r0]
   12e5c:	pop	{r4, pc}

00012e60 <table_get_double@@Base>:
   12e60:	push	{r4, lr}
   12e64:	bl	12d88 <table_get@@Base>
   12e68:	vldr	d0, [r0]
   12e6c:	pop	{r4, pc}

00012e70 <table_get_ldouble@@Base>:
   12e70:	push	{r4, lr}
   12e74:	bl	12d88 <table_get@@Base>
   12e78:	vldr	d0, [r0]
   12e7c:	pop	{r4, pc}

00012e80 <table_get_uchar@@Base>:
   12e80:	push	{r4, lr}
   12e84:	bl	12d88 <table_get@@Base>
   12e88:	ldrb	r0, [r0]
   12e8c:	pop	{r4, pc}

00012e90 <table_get_char@@Base>:
   12e90:	b	12e80 <table_get_uchar@@Base>

00012e94 <table_get_uint8@@Base>:
   12e94:	b	12e80 <table_get_uchar@@Base>

00012e98 <table_get_string@@Base>:
   12e98:	b	12d88 <table_get@@Base>

00012e9c <table_get_ptr@@Base>:
   12e9c:	b	12d88 <table_get@@Base>

00012ea0 <table_row_init@@Base>:
   12ea0:	push	{r4, r5, r6, lr}
   12ea4:	mov	r5, r1
   12ea8:	ldr	r4, [r0, #16]
   12eac:	ldr	r0, [r0, #12]
   12eb0:	lsl	r0, r0, #2
   12eb4:	bl	11adc <malloc@plt>
   12eb8:	str	r0, [r4, r5, lsl #2]
   12ebc:	pop	{r4, r5, r6, pc}

00012ec0 <table_row_destroy@@Base>:
   12ec0:	push	{r4, r5, r6, r7, r8, lr}
   12ec4:	mov	r6, r0
   12ec8:	mov	r5, r1
   12ecc:	bl	12638 <table_get_column_length@@Base>
   12ed0:	ldr	r7, [r6, #16]
   12ed4:	mov	r4, #0
   12ed8:	mov	r8, r0
   12edc:	cmp	r4, r8
   12ee0:	blt	12ef8 <table_row_destroy@@Base+0x38>
   12ee4:	ldr	r0, [r7, r5, lsl #2]
   12ee8:	cmp	r0, #0
   12eec:	popeq	{r4, r5, r6, r7, r8, pc}
   12ef0:	pop	{r4, r5, r6, r7, r8, lr}
   12ef4:	b	11ab8 <free@plt>
   12ef8:	mov	r2, r4
   12efc:	mov	r1, r5
   12f00:	mov	r0, r6
   12f04:	bl	13f78 <table_cell_destroy@@Base>
   12f08:	add	r4, r4, #1
   12f0c:	b	12edc <table_row_destroy@@Base+0x1c>

00012f10 <table_get_row_length@@Base>:
   12f10:	ldr	r0, [r0, #20]
   12f14:	bx	lr

00012f18 <table_add_row@@Base>:
   12f18:	push	{r4, r5, r6, r7, r8, lr}
   12f1c:	mov	r4, r0
   12f20:	ldr	r5, [r0, #24]
   12f24:	ldr	r0, [r0, #20]
   12f28:	mov	r1, r5
   12f2c:	bl	141d4 <table_cell_nullify@@Base+0x218>
   12f30:	cmp	r1, #0
   12f34:	bne	12f54 <table_add_row@@Base+0x3c>
   12f38:	ldr	r1, [r4, #28]
   12f3c:	ldr	r0, [r4, #16]
   12f40:	add	r1, r5, r1
   12f44:	str	r1, [r4, #28]
   12f48:	lsl	r1, r1, #2
   12f4c:	bl	11ac4 <realloc@plt>
   12f50:	str	r0, [r4, #16]
   12f54:	mov	r0, r4
   12f58:	ldr	r6, [r4, #20]
   12f5c:	bl	12638 <table_get_column_length@@Base>
   12f60:	mov	r1, r6
   12f64:	mov	r5, #0
   12f68:	mov	r7, r0
   12f6c:	mov	r0, r4
   12f70:	bl	12ea0 <table_row_init@@Base>
   12f74:	cmp	r7, r5
   12f78:	bgt	12fa0 <table_add_row@@Base+0x88>
   12f7c:	mov	r0, r4
   12f80:	mov	r3, #2
   12f84:	mvn	r2, #0
   12f88:	ldr	r1, [r4, #20]
   12f8c:	bl	12560 <table_notify@@Base>
   12f90:	ldr	r0, [r4, #20]
   12f94:	add	r3, r0, #1
   12f98:	str	r3, [r4, #20]
   12f9c:	pop	{r4, r5, r6, r7, r8, pc}
   12fa0:	mov	r2, r5
   12fa4:	mov	r1, r6
   12fa8:	mov	r0, r4
   12fac:	bl	13f64 <table_cell_init@@Base>
   12fb0:	add	r5, r5, #1
   12fb4:	b	12f74 <table_add_row@@Base+0x5c>

00012fb8 <table_remove_row@@Base>:
   12fb8:	push	{r4, r5, r6, r7, r8, lr}
   12fbc:	mov	r4, r0
   12fc0:	mov	r5, r1
   12fc4:	ldr	r7, [r0, #20]
   12fc8:	bl	12638 <table_get_column_length@@Base>
   12fcc:	mov	r6, #0
   12fd0:	mov	r8, r0
   12fd4:	cmp	r8, r6
   12fd8:	bgt	13060 <table_remove_row@@Base+0xa8>
   12fdc:	ldr	r3, [r4, #16]
   12fe0:	lsl	r6, r5, #2
   12fe4:	ldr	r0, [r3, r5, lsl #2]
   12fe8:	cmp	r0, #0
   12fec:	beq	12ff4 <table_remove_row@@Base+0x3c>
   12ff0:	bl	11ab8 <free@plt>
   12ff4:	mov	r3, r5
   12ff8:	sub	r7, r7, #1
   12ffc:	cmp	r3, r7
   13000:	add	r2, r6, #4
   13004:	blt	1309c <table_remove_row@@Base+0xe4>
   13008:	ldr	r0, [r4, #20]
   1300c:	ldr	r6, [r4, #24]
   13010:	sub	r0, r0, #1
   13014:	str	r0, [r4, #20]
   13018:	mov	r1, r6
   1301c:	bl	141d4 <table_cell_nullify@@Base+0x218>
   13020:	cmp	r1, #0
   13024:	bne	13044 <table_remove_row@@Base+0x8c>
   13028:	ldr	r1, [r4, #28]
   1302c:	ldr	r0, [r4, #16]
   13030:	sub	r1, r1, r6
   13034:	str	r1, [r4, #28]
   13038:	lsl	r1, r1, #2
   1303c:	bl	11ac4 <realloc@plt>
   13040:	str	r0, [r4, #16]
   13044:	mov	r0, r4
   13048:	mov	r3, #4
   1304c:	mvn	r2, #0
   13050:	mov	r1, r5
   13054:	bl	12560 <table_notify@@Base>
   13058:	mov	r0, #0
   1305c:	pop	{r4, r5, r6, r7, r8, pc}
   13060:	mov	r1, r6
   13064:	mov	r0, r4
   13068:	bl	12690 <table_get_column_data_type@@Base>
   1306c:	cmp	r0, #23
   13070:	beq	13094 <table_remove_row@@Base+0xdc>
   13074:	mov	r2, r6
   13078:	mov	r1, r5
   1307c:	mov	r0, r4
   13080:	bl	13f4c <table_get_cell_ptr@@Base>
   13084:	ldr	r0, [r0]
   13088:	cmp	r0, #0
   1308c:	beq	13094 <table_remove_row@@Base+0xdc>
   13090:	bl	11ab8 <free@plt>
   13094:	add	r6, r6, #1
   13098:	b	12fd4 <table_remove_row@@Base+0x1c>
   1309c:	ldr	r1, [r4, #16]
   130a0:	add	r3, r3, #1
   130a4:	ldr	r0, [r1, r2]
   130a8:	str	r0, [r1, r6]
   130ac:	mov	r6, r2
   130b0:	b	12ffc <table_remove_row@@Base+0x44>

000130b4 <table_get_row_ptr@@Base>:
   130b4:	ldr	r0, [r0, #16]
   130b8:	add	r0, r0, r1, lsl #2
   130bc:	bx	lr

000130c0 <table_set_row_ptr@@Base>:
   130c0:	ldr	r3, [r0, #16]
   130c4:	ldr	r2, [r2]
   130c8:	str	r2, [r3, r1, lsl #2]
   130cc:	bx	lr

000130d0 <table_set@@Base>:
   130d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   130d4:	mov	r6, r0
   130d8:	mov	r8, r1
   130dc:	mov	r7, r2
   130e0:	ldr	r9, [sp, #32]
   130e4:	mov	r5, r3
   130e8:	bl	13f4c <table_get_cell_ptr@@Base>
   130ec:	mov	r1, r7
   130f0:	mov	r4, r0
   130f4:	mov	r0, r6
   130f8:	bl	12920 <table_get_col_ptr@@Base>
   130fc:	cmp	r9, #23
   13100:	ldrls	pc, [pc, r9, lsl #2]
   13104:	b	131dc <table_set@@Base+0x10c>
   13108:	andeq	r3, r1, r4, lsr #3
   1310c:	andeq	r3, r1, r4, ror #3
   13110:	strdeq	r3, [r1], -r0
   13114:	strdeq	r3, [r1], -ip
   13118:	andeq	r3, r1, r8, lsl #4
   1311c:	andeq	r3, r1, ip, asr r2
   13120:	andeq	r3, r1, r8, ror #4
   13124:	andeq	r3, r1, r4, ror r2
   13128:	andeq	r3, r1, r0, lsl #5
   1312c:	andeq	r3, r1, r0, asr #5
   13130:	andeq	r3, r1, r0, ror #5
   13134:	andeq	r3, r1, ip, ror #5
   13138:	strdeq	r3, [r1], -r8
   1313c:	andeq	r3, r1, r4, lsl #6
   13140:	andeq	r3, r1, r0, lsl r3
   13144:	andeq	r3, r1, ip, lsl r3
   13148:	andeq	r3, r1, r8, lsr #6
   1314c:	andeq	r3, r1, r4, lsr r3
   13150:	andeq	r3, r1, r0, asr #6
   13154:	andeq	r3, r1, r4, lsl #7
   13158:	muleq	r1, r0, r3
   1315c:	andeq	r3, r1, ip, asr #6
   13160:	andeq	r3, r1, r8, ror #2
   13164:	muleq	r1, ip, r3
   13168:	ldr	r3, [r0, #4]
   1316c:	cmp	r3, #22
   13170:	bne	131dc <table_set@@Base+0x10c>
   13174:	ldr	r3, [r4]
   13178:	cmp	r3, #0
   1317c:	bne	1318c <table_set@@Base+0xbc>
   13180:	mov	r0, #1
   13184:	bl	11adc <malloc@plt>
   13188:	str	r0, [r4]
   1318c:	ldr	r3, [r4]
   13190:	cmp	r3, #0
   13194:	ldrbne	r2, [r5]
   13198:	strbne	r2, [r3]
   1319c:	bne	13240 <table_set@@Base+0x170>
   131a0:	b	131dc <table_set@@Base+0x10c>
   131a4:	ldr	r3, [r0, #4]
   131a8:	cmp	r3, #0
   131ac:	bne	131dc <table_set@@Base+0x10c>
   131b0:	ldr	r3, [r4]
   131b4:	cmp	r3, #0
   131b8:	bne	131c8 <table_set@@Base+0xf8>
   131bc:	mov	r0, #4
   131c0:	bl	11adc <malloc@plt>
   131c4:	str	r0, [r4]
   131c8:	ldr	r3, [r4]
   131cc:	cmp	r3, #0
   131d0:	ldrne	r2, [r5]
   131d4:	strne	r2, [r3]
   131d8:	bne	13240 <table_set@@Base+0x170>
   131dc:	mvn	r0, #0
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131e4:	ldr	r3, [r0, #4]
   131e8:	cmp	r3, #1
   131ec:	b	131ac <table_set@@Base+0xdc>
   131f0:	ldr	r3, [r0, #4]
   131f4:	cmp	r3, #2
   131f8:	b	13170 <table_set@@Base+0xa0>
   131fc:	ldr	r3, [r0, #4]
   13200:	cmp	r3, #3
   13204:	b	13170 <table_set@@Base+0xa0>
   13208:	ldr	r3, [r0, #4]
   1320c:	cmp	r3, #4
   13210:	bne	131dc <table_set@@Base+0x10c>
   13214:	ldr	r3, [r4]
   13218:	cmp	r3, #0
   1321c:	bne	1322c <table_set@@Base+0x15c>
   13220:	mov	r0, #2
   13224:	bl	11adc <malloc@plt>
   13228:	str	r0, [r4]
   1322c:	ldr	r3, [r4]
   13230:	cmp	r3, #0
   13234:	beq	131dc <table_set@@Base+0x10c>
   13238:	ldrh	r2, [r5]
   1323c:	strh	r2, [r3]
   13240:	mov	r0, r6
   13244:	mov	r3, #1
   13248:	mov	r2, r7
   1324c:	mov	r1, r8
   13250:	bl	12560 <table_notify@@Base>
   13254:	mov	r0, #0
   13258:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1325c:	ldr	r3, [r0, #4]
   13260:	cmp	r3, #5
   13264:	b	13210 <table_set@@Base+0x140>
   13268:	ldr	r3, [r0, #4]
   1326c:	cmp	r3, #6
   13270:	b	131ac <table_set@@Base+0xdc>
   13274:	ldr	r3, [r0, #4]
   13278:	cmp	r3, #7
   1327c:	b	131ac <table_set@@Base+0xdc>
   13280:	ldr	r0, [r0, #4]
   13284:	cmp	r0, #8
   13288:	bne	131dc <table_set@@Base+0x10c>
   1328c:	ldr	r3, [r4]
   13290:	cmp	r3, #0
   13294:	bne	132a0 <table_set@@Base+0x1d0>
   13298:	bl	11adc <malloc@plt>
   1329c:	str	r0, [r4]
   132a0:	ldr	r3, [r4]
   132a4:	cmp	r3, #0
   132a8:	beq	131dc <table_set@@Base+0x10c>
   132ac:	ldr	r2, [r5]
   132b0:	str	r2, [r3]
   132b4:	ldr	r2, [r5, #4]
   132b8:	str	r2, [r3, #4]
   132bc:	b	13240 <table_set@@Base+0x170>
   132c0:	ldr	r3, [r0, #4]
   132c4:	cmp	r3, #9
   132c8:	bne	131dc <table_set@@Base+0x10c>
   132cc:	ldr	r3, [r4]
   132d0:	cmp	r3, #0
   132d4:	bne	132a0 <table_set@@Base+0x1d0>
   132d8:	mov	r0, #8
   132dc:	b	13298 <table_set@@Base+0x1c8>
   132e0:	ldr	r3, [r0, #4]
   132e4:	cmp	r3, #10
   132e8:	b	13210 <table_set@@Base+0x140>
   132ec:	ldr	r3, [r0, #4]
   132f0:	cmp	r3, #11
   132f4:	b	13210 <table_set@@Base+0x140>
   132f8:	ldr	r3, [r0, #4]
   132fc:	cmp	r3, #12
   13300:	b	131ac <table_set@@Base+0xdc>
   13304:	ldr	r3, [r0, #4]
   13308:	cmp	r3, #13
   1330c:	b	131ac <table_set@@Base+0xdc>
   13310:	ldr	r3, [r0, #4]
   13314:	cmp	r3, #14
   13318:	b	132c8 <table_set@@Base+0x1f8>
   1331c:	ldr	r3, [r0, #4]
   13320:	cmp	r3, #15
   13324:	b	132c8 <table_set@@Base+0x1f8>
   13328:	ldr	r3, [r0, #4]
   1332c:	cmp	r3, #16
   13330:	b	131ac <table_set@@Base+0xdc>
   13334:	ldr	r3, [r0, #4]
   13338:	cmp	r3, #17
   1333c:	b	132c8 <table_set@@Base+0x1f8>
   13340:	ldr	r3, [r0, #4]
   13344:	cmp	r3, #18
   13348:	b	132c8 <table_set@@Base+0x1f8>
   1334c:	ldr	r3, [r0, #4]
   13350:	cmp	r3, #21
   13354:	bne	131dc <table_set@@Base+0x10c>
   13358:	mov	r0, r5
   1335c:	bl	11b00 <strlen@plt>
   13360:	add	r1, r0, #1
   13364:	ldr	r0, [r4]
   13368:	bl	11ac4 <realloc@plt>
   1336c:	cmp	r0, #0
   13370:	str	r0, [r4]
   13374:	beq	131dc <table_set@@Base+0x10c>
   13378:	mov	r1, r5
   1337c:	bl	11ad0 <strcpy@plt>
   13380:	b	13240 <table_set@@Base+0x170>
   13384:	ldr	r3, [r0, #4]
   13388:	cmp	r3, #19
   1338c:	b	13170 <table_set@@Base+0xa0>
   13390:	ldr	r3, [r0, #4]
   13394:	cmp	r3, #20
   13398:	b	13170 <table_set@@Base+0xa0>
   1339c:	ldr	r3, [r0, #4]
   133a0:	cmp	r3, #23
   133a4:	streq	r5, [r4]
   133a8:	beq	13240 <table_set@@Base+0x170>
   133ac:	b	131dc <table_set@@Base+0x10c>

000133b0 <table_set_bool@@Base>:
   133b0:	push	{r0, r1, r2, r3, r4, lr}
   133b4:	add	ip, sp, #16
   133b8:	strb	r3, [ip, #-1]!
   133bc:	mov	r3, #22
   133c0:	str	r3, [sp]
   133c4:	mov	r3, ip
   133c8:	bl	130d0 <table_set@@Base>
   133cc:	add	sp, sp, #20
   133d0:	pop	{pc}		; (ldr pc, [sp], #4)

000133d4 <table_set_int@@Base>:
   133d4:	push	{r0, r1, r2, r3, r4, lr}
   133d8:	add	ip, sp, #16
   133dc:	str	r3, [ip, #-4]!
   133e0:	mov	r3, #0
   133e4:	str	r3, [sp]
   133e8:	mov	r3, ip
   133ec:	bl	130d0 <table_set@@Base>
   133f0:	add	sp, sp, #20
   133f4:	pop	{pc}		; (ldr pc, [sp], #4)

000133f8 <table_set_uint@@Base>:
   133f8:	push	{r0, r1, r2, r3, r4, lr}
   133fc:	add	ip, sp, #16
   13400:	str	r3, [ip, #-4]!
   13404:	mov	r3, #1
   13408:	str	r3, [sp]
   1340c:	mov	r3, ip
   13410:	bl	130d0 <table_set@@Base>
   13414:	add	sp, sp, #20
   13418:	pop	{pc}		; (ldr pc, [sp], #4)

0001341c <table_set_int8@@Base>:
   1341c:	push	{r0, r1, r2, r3, r4, lr}
   13420:	add	ip, sp, #16
   13424:	strb	r3, [ip, #-1]!
   13428:	mov	r3, #2
   1342c:	str	r3, [sp]
   13430:	mov	r3, ip
   13434:	bl	130d0 <table_set@@Base>
   13438:	add	sp, sp, #20
   1343c:	pop	{pc}		; (ldr pc, [sp], #4)

00013440 <table_set_uint8@@Base>:
   13440:	push	{r0, r1, r2, r3, r4, lr}
   13444:	add	ip, sp, #16
   13448:	strb	r3, [ip, #-1]!
   1344c:	mov	r3, #3
   13450:	str	r3, [sp]
   13454:	mov	r3, ip
   13458:	bl	130d0 <table_set@@Base>
   1345c:	add	sp, sp, #20
   13460:	pop	{pc}		; (ldr pc, [sp], #4)

00013464 <table_set_int16@@Base>:
   13464:	push	{r0, r1, r2, r3, r4, lr}
   13468:	add	ip, sp, #16
   1346c:	strh	r3, [ip, #-2]!
   13470:	mov	r3, #4
   13474:	str	r3, [sp]
   13478:	mov	r3, ip
   1347c:	bl	130d0 <table_set@@Base>
   13480:	add	sp, sp, #20
   13484:	pop	{pc}		; (ldr pc, [sp], #4)

00013488 <table_set_uint16@@Base>:
   13488:	push	{r0, r1, r2, r3, r4, lr}
   1348c:	add	ip, sp, #16
   13490:	strh	r3, [ip, #-2]!
   13494:	mov	r3, #5
   13498:	str	r3, [sp]
   1349c:	mov	r3, ip
   134a0:	bl	130d0 <table_set@@Base>
   134a4:	add	sp, sp, #20
   134a8:	pop	{pc}		; (ldr pc, [sp], #4)

000134ac <table_set_int32@@Base>:
   134ac:	push	{r0, r1, r2, r3, r4, lr}
   134b0:	add	ip, sp, #16
   134b4:	str	r3, [ip, #-4]!
   134b8:	mov	r3, #6
   134bc:	str	r3, [sp]
   134c0:	mov	r3, ip
   134c4:	bl	130d0 <table_set@@Base>
   134c8:	add	sp, sp, #20
   134cc:	pop	{pc}		; (ldr pc, [sp], #4)

000134d0 <table_set_uint32@@Base>:
   134d0:	push	{r0, r1, r2, r3, r4, lr}
   134d4:	add	ip, sp, #16
   134d8:	str	r3, [ip, #-4]!
   134dc:	mov	r3, #7
   134e0:	str	r3, [sp]
   134e4:	mov	r3, ip
   134e8:	bl	130d0 <table_set@@Base>
   134ec:	add	sp, sp, #20
   134f0:	pop	{pc}		; (ldr pc, [sp], #4)

000134f4 <table_set_int64@@Base>:
   134f4:	mov	r3, #8
   134f8:	push	{r0, r1, r2, lr}
   134fc:	str	r3, [sp]
   13500:	add	r3, sp, #16
   13504:	bl	130d0 <table_set@@Base>
   13508:	add	sp, sp, #12
   1350c:	pop	{pc}		; (ldr pc, [sp], #4)

00013510 <table_set_uint64@@Base>:
   13510:	mov	r3, #9
   13514:	push	{r0, r1, r2, lr}
   13518:	str	r3, [sp]
   1351c:	add	r3, sp, #16
   13520:	bl	130d0 <table_set@@Base>
   13524:	add	sp, sp, #12
   13528:	pop	{pc}		; (ldr pc, [sp], #4)

0001352c <table_set_short@@Base>:
   1352c:	push	{r0, r1, r2, r3, r4, lr}
   13530:	add	ip, sp, #16
   13534:	strh	r3, [ip, #-2]!
   13538:	mov	r3, #10
   1353c:	str	r3, [sp]
   13540:	mov	r3, ip
   13544:	bl	130d0 <table_set@@Base>
   13548:	add	sp, sp, #20
   1354c:	pop	{pc}		; (ldr pc, [sp], #4)

00013550 <table_set_ushort@@Base>:
   13550:	push	{r0, r1, r2, r3, r4, lr}
   13554:	add	ip, sp, #16
   13558:	strh	r3, [ip, #-2]!
   1355c:	mov	r3, #11
   13560:	str	r3, [sp]
   13564:	mov	r3, ip
   13568:	bl	130d0 <table_set@@Base>
   1356c:	add	sp, sp, #20
   13570:	pop	{pc}		; (ldr pc, [sp], #4)

00013574 <table_set_long@@Base>:
   13574:	push	{r0, r1, r2, r3, r4, lr}
   13578:	add	ip, sp, #16
   1357c:	str	r3, [ip, #-4]!
   13580:	mov	r3, #12
   13584:	str	r3, [sp]
   13588:	mov	r3, ip
   1358c:	bl	130d0 <table_set@@Base>
   13590:	add	sp, sp, #20
   13594:	pop	{pc}		; (ldr pc, [sp], #4)

00013598 <table_set_ulong@@Base>:
   13598:	push	{r0, r1, r2, r3, r4, lr}
   1359c:	add	ip, sp, #16
   135a0:	str	r3, [ip, #-4]!
   135a4:	mov	r3, #13
   135a8:	str	r3, [sp]
   135ac:	mov	r3, ip
   135b0:	bl	130d0 <table_set@@Base>
   135b4:	add	sp, sp, #20
   135b8:	pop	{pc}		; (ldr pc, [sp], #4)

000135bc <table_set_llong@@Base>:
   135bc:	mov	r3, #14
   135c0:	push	{r0, r1, r2, lr}
   135c4:	str	r3, [sp]
   135c8:	add	r3, sp, #16
   135cc:	bl	130d0 <table_set@@Base>
   135d0:	add	sp, sp, #12
   135d4:	pop	{pc}		; (ldr pc, [sp], #4)

000135d8 <table_set_ullong@@Base>:
   135d8:	mov	r3, #15
   135dc:	push	{r0, r1, r2, lr}
   135e0:	str	r3, [sp]
   135e4:	add	r3, sp, #16
   135e8:	bl	130d0 <table_set@@Base>
   135ec:	add	sp, sp, #12
   135f0:	pop	{pc}		; (ldr pc, [sp], #4)

000135f4 <table_set_float@@Base>:
   135f4:	push	{r0, r1, r2, r3, r4, lr}
   135f8:	add	r3, sp, #16
   135fc:	mov	ip, #16
   13600:	vstmdb	r3!, {s0}
   13604:	str	ip, [sp]
   13608:	bl	130d0 <table_set@@Base>
   1360c:	add	sp, sp, #20
   13610:	pop	{pc}		; (ldr pc, [sp], #4)

00013614 <table_set_double@@Base>:
   13614:	push	{r0, r1, r2, r3, r4, lr}
   13618:	add	r3, sp, #16
   1361c:	mov	ip, #17
   13620:	vstmdb	r3!, {d0}
   13624:	str	ip, [sp]
   13628:	bl	130d0 <table_set@@Base>
   1362c:	add	sp, sp, #20
   13630:	pop	{pc}		; (ldr pc, [sp], #4)

00013634 <table_set_ldouble@@Base>:
   13634:	push	{r0, r1, r2, r3, r4, lr}
   13638:	add	r3, sp, #16
   1363c:	mov	ip, #18
   13640:	vstmdb	r3!, {d0}
   13644:	str	ip, [sp]
   13648:	bl	130d0 <table_set@@Base>
   1364c:	add	sp, sp, #20
   13650:	pop	{pc}		; (ldr pc, [sp], #4)

00013654 <table_set_string@@Base>:
   13654:	mov	ip, #21
   13658:	push	{r0, r1, r2, lr}
   1365c:	str	ip, [sp]
   13660:	bl	130d0 <table_set@@Base>
   13664:	add	sp, sp, #12
   13668:	pop	{pc}		; (ldr pc, [sp], #4)

0001366c <table_set_char@@Base>:
   1366c:	push	{r0, r1, r2, r3, r4, lr}
   13670:	add	ip, sp, #16
   13674:	strb	r3, [ip, #-1]!
   13678:	mov	r3, #19
   1367c:	str	r3, [sp]
   13680:	mov	r3, ip
   13684:	bl	130d0 <table_set@@Base>
   13688:	add	sp, sp, #20
   1368c:	pop	{pc}		; (ldr pc, [sp], #4)

00013690 <table_set_uchar@@Base>:
   13690:	push	{r0, r1, r2, r3, r4, lr}
   13694:	add	ip, sp, #16
   13698:	strb	r3, [ip, #-1]!
   1369c:	mov	r3, #20
   136a0:	str	r3, [sp]
   136a4:	mov	r3, ip
   136a8:	bl	130d0 <table_set@@Base>
   136ac:	add	sp, sp, #20
   136b0:	pop	{pc}		; (ldr pc, [sp], #4)

000136b4 <table_set_ptr@@Base>:
   136b4:	mov	ip, #23
   136b8:	push	{r0, r1, r2, lr}
   136bc:	str	ip, [sp]
   136c0:	bl	130d0 <table_set@@Base>
   136c4:	add	sp, sp, #12
   136c8:	pop	{pc}		; (ldr pc, [sp], #4)

000136cc <table_cell_to_buffer@@Base>:
   136cc:	push	{r4, r5, r6, r7, lr}
   136d0:	sub	sp, sp, #20
   136d4:	mov	r7, r1
   136d8:	mov	r1, r2
   136dc:	str	r2, [sp, #12]
   136e0:	mov	r6, r0
   136e4:	mov	r4, r3
   136e8:	ldr	r5, [sp, #40]	; 0x28
   136ec:	bl	12690 <table_get_column_data_type@@Base>
   136f0:	ldr	r2, [sp, #12]
   136f4:	cmp	r0, #23
   136f8:	ldrls	pc, [pc, r0, lsl #2]
   136fc:	b	1381c <table_cell_to_buffer@@Base+0x150>
   13700:	andeq	r3, r1, r0, ror #14
   13704:	andeq	r3, r1, r8, ror r7
   13708:	muleq	r1, ip, r7
   1370c:	andeq	r3, r1, ip, lsr #15
   13710:			; <UNDEFINED> instruction: 0x000137bc
   13714:	andeq	r3, r1, ip, asr #15
   13718:	ldrdeq	r3, [r1], -ip
   1371c:	andeq	r3, r1, ip, ror #15
   13720:	strdeq	r3, [r1], -ip
   13724:	andeq	r3, r1, r8, lsr #16
   13728:	andeq	r3, r1, r0, asr #16
   1372c:	andeq	r3, r1, r8, asr r8
   13730:	andeq	r3, r1, r0, ror r8
   13734:	andeq	r3, r1, r8, lsl #17
   13738:	andeq	r3, r1, r0, lsr #17
   1373c:			; <UNDEFINED> instruction: 0x000138b0
   13740:	ldrdeq	r3, [r1], -r8
   13744:	andeq	r3, r1, r0, lsl #18
   13748:	andeq	r3, r1, r8, lsl r9
   1374c:	andeq	r3, r1, r0, asr #18
   13750:	andeq	r3, r1, r8, asr r9
   13754:	andeq	r3, r1, r0, asr #17
   13758:	andeq	r3, r1, r0, lsr r9
   1375c:	andeq	r3, r1, r8, ror #18
   13760:	mov	r1, r7
   13764:	mov	r0, r6
   13768:	bl	12dc8 <table_get_int@@Base>
   1376c:	mov	r3, r0
   13770:	ldr	r2, [pc, #520]	; 13980 <table_cell_to_buffer@@Base+0x2b4>
   13774:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   13778:	mov	r1, r7
   1377c:	mov	r0, r6
   13780:	bl	12ddc <table_get_uint@@Base>
   13784:	ldr	r2, [pc, #504]	; 13984 <table_cell_to_buffer@@Base+0x2b8>
   13788:	mov	r3, r0
   1378c:	mov	r1, r5
   13790:	mov	r0, r4
   13794:	bl	11b0c <snprintf@plt>
   13798:	b	1381c <table_cell_to_buffer@@Base+0x150>
   1379c:	mov	r1, r7
   137a0:	mov	r0, r6
   137a4:	bl	12da8 <table_get_int8@@Base>
   137a8:	b	1376c <table_cell_to_buffer@@Base+0xa0>
   137ac:	mov	r1, r7
   137b0:	mov	r0, r6
   137b4:	bl	12e94 <table_get_uint8@@Base>
   137b8:	b	13784 <table_cell_to_buffer@@Base+0xb8>
   137bc:	mov	r1, r7
   137c0:	mov	r0, r6
   137c4:	bl	12df0 <table_get_int16@@Base>
   137c8:	b	1376c <table_cell_to_buffer@@Base+0xa0>
   137cc:	mov	r1, r7
   137d0:	mov	r0, r6
   137d4:	bl	12e04 <table_get_uint16@@Base>
   137d8:	b	13784 <table_cell_to_buffer@@Base+0xb8>
   137dc:	mov	r1, r7
   137e0:	mov	r0, r6
   137e4:	bl	12db8 <table_get_int32@@Base>
   137e8:	b	1376c <table_cell_to_buffer@@Base+0xa0>
   137ec:	mov	r1, r7
   137f0:	mov	r0, r6
   137f4:	bl	12dcc <table_get_uint32@@Base>
   137f8:	b	13784 <table_cell_to_buffer@@Base+0xb8>
   137fc:	mov	r1, r7
   13800:	mov	r0, r6
   13804:	bl	12e38 <table_get_int64@@Base>
   13808:	ldr	r2, [pc, #376]	; 13988 <table_cell_to_buffer@@Base+0x2bc>
   1380c:	strd	r0, [sp]
   13810:	mov	r1, r5
   13814:	mov	r0, r4
   13818:	bl	11b0c <snprintf@plt>
   1381c:	mov	r0, #0
   13820:	add	sp, sp, #20
   13824:	pop	{r4, r5, r6, r7, pc}
   13828:	mov	r1, r7
   1382c:	mov	r0, r6
   13830:	bl	12e4c <table_get_uint64@@Base>
   13834:	strd	r0, [sp]
   13838:	ldr	r2, [pc, #332]	; 1398c <table_cell_to_buffer@@Base+0x2c0>
   1383c:	b	13810 <table_cell_to_buffer@@Base+0x144>
   13840:	mov	r1, r7
   13844:	mov	r0, r6
   13848:	bl	12de0 <table_get_short@@Base>
   1384c:	ldr	r2, [pc, #316]	; 13990 <table_cell_to_buffer@@Base+0x2c4>
   13850:	mov	r3, r0
   13854:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   13858:	mov	r1, r7
   1385c:	mov	r0, r6
   13860:	bl	12df4 <table_get_ushort@@Base>
   13864:	ldr	r2, [pc, #296]	; 13994 <table_cell_to_buffer@@Base+0x2c8>
   13868:	mov	r3, r0
   1386c:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   13870:	mov	r1, r7
   13874:	mov	r0, r6
   13878:	bl	12e08 <table_get_long@@Base>
   1387c:	ldr	r2, [pc, #276]	; 13998 <table_cell_to_buffer@@Base+0x2cc>
   13880:	mov	r3, r0
   13884:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   13888:	mov	r1, r7
   1388c:	mov	r0, r6
   13890:	bl	12e18 <table_get_ulong@@Base>
   13894:	ldr	r2, [pc, #256]	; 1399c <table_cell_to_buffer@@Base+0x2d0>
   13898:	mov	r3, r0
   1389c:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   138a0:	mov	r1, r7
   138a4:	mov	r0, r6
   138a8:	bl	12e28 <table_get_llong@@Base>
   138ac:	b	13808 <table_cell_to_buffer@@Base+0x13c>
   138b0:	mov	r1, r7
   138b4:	mov	r0, r6
   138b8:	bl	12e3c <table_get_ullong@@Base>
   138bc:	b	13834 <table_cell_to_buffer@@Base+0x168>
   138c0:	mov	r1, r7
   138c4:	mov	r0, r6
   138c8:	bl	12e98 <table_get_string@@Base>
   138cc:	ldr	r2, [pc, #204]	; 139a0 <table_cell_to_buffer@@Base+0x2d4>
   138d0:	mov	r3, r0
   138d4:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   138d8:	mov	r1, r7
   138dc:	mov	r0, r6
   138e0:	bl	12e50 <table_get_float@@Base>
   138e4:	ldr	r2, [pc, #184]	; 139a4 <table_cell_to_buffer@@Base+0x2d8>
   138e8:	vcvt.f64.f32	d0, s0
   138ec:	vstr	d0, [sp]
   138f0:	mov	r1, r5
   138f4:	mov	r0, r4
   138f8:	bl	11b0c <snprintf@plt>
   138fc:	b	1381c <table_cell_to_buffer@@Base+0x150>
   13900:	mov	r1, r7
   13904:	mov	r0, r6
   13908:	bl	12e60 <table_get_double@@Base>
   1390c:	ldr	r2, [pc, #148]	; 139a8 <table_cell_to_buffer@@Base+0x2dc>
   13910:	vstr	d0, [sp]
   13914:	b	138f0 <table_cell_to_buffer@@Base+0x224>
   13918:	mov	r1, r7
   1391c:	mov	r0, r6
   13920:	bl	12e70 <table_get_ldouble@@Base>
   13924:	ldr	r2, [pc, #128]	; 139ac <table_cell_to_buffer@@Base+0x2e0>
   13928:	vstr	d0, [sp]
   1392c:	b	138f0 <table_cell_to_buffer@@Base+0x224>
   13930:	mov	r1, r7
   13934:	mov	r0, r6
   13938:	bl	12d98 <table_get_bool@@Base>
   1393c:	b	1376c <table_cell_to_buffer@@Base+0xa0>
   13940:	mov	r1, r7
   13944:	mov	r0, r6
   13948:	bl	12e90 <table_get_char@@Base>
   1394c:	mov	r3, r0
   13950:	ldr	r2, [pc, #88]	; 139b0 <table_cell_to_buffer@@Base+0x2e4>
   13954:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   13958:	mov	r1, r7
   1395c:	mov	r0, r6
   13960:	bl	12e80 <table_get_uchar@@Base>
   13964:	b	1394c <table_cell_to_buffer@@Base+0x280>
   13968:	mov	r1, r7
   1396c:	mov	r0, r6
   13970:	bl	12e9c <table_get_ptr@@Base>
   13974:	ldr	r2, [pc, #56]	; 139b4 <table_cell_to_buffer@@Base+0x2e8>
   13978:	mov	r3, r0
   1397c:	b	1378c <table_cell_to_buffer@@Base+0xc0>
   13980:	andeq	r4, r1, ip, lsl r3
   13984:	andeq	r4, r1, pc, lsl r3
   13988:	andeq	r4, r1, r2, lsr #6
   1398c:	andeq	r4, r1, r7, lsr #6
   13990:	andeq	r4, r1, ip, lsr #6
   13994:	andeq	r4, r1, r0, lsr r3
   13998:	andeq	r4, r1, r4, lsr r3
   1399c:	andeq	r4, r1, r8, lsr r3
   139a0:	andeq	r4, r1, ip, lsr r3
   139a4:	andeq	r4, r1, pc, lsr r3
   139a8:	andeq	r4, r1, r2, asr #6
   139ac:	andeq	r4, r1, r6, asr #6
   139b0:	andeq	r4, r1, sl, asr #6
   139b4:	andeq	r4, r1, sp, asr #6

000139b8 <table_cell_from_buffer@@Base>:
   139b8:	push	{r4, r5, r6, r7, lr}
   139bc:	mov	r7, r1
   139c0:	sub	sp, sp, #268	; 0x10c
   139c4:	mov	r1, r2
   139c8:	mov	r6, r0
   139cc:	mov	r5, r2
   139d0:	mov	r4, r3
   139d4:	bl	12690 <table_get_column_data_type@@Base>
   139d8:	cmp	r0, #23
   139dc:	ldrls	pc, [pc, r0, lsl #2]
   139e0:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   139e4:	andeq	r3, r1, r4, asr #20
   139e8:	andeq	r3, r1, r8, ror sl
   139ec:	andeq	r3, r1, r8, lsr #21
   139f0:	ldrdeq	r3, [r1], -r8
   139f4:	andeq	r3, r1, r8, lsl #22
   139f8:	andeq	r3, r1, r8, lsr fp
   139fc:	andeq	r3, r1, r8, ror #22
   13a00:	muleq	r1, r8, fp
   13a04:	andeq	r3, r1, r8, asr #23
   13a08:	strdeq	r3, [r1], -ip
   13a0c:	andeq	r3, r1, r0, lsr ip
   13a10:	andeq	r3, r1, r0, ror #24
   13a14:	muleq	r1, r0, ip
   13a18:	andeq	r3, r1, r0, asr #25
   13a1c:	strdeq	r3, [r1], -r0
   13a20:	andeq	r3, r1, r4, lsr #26
   13a24:	andeq	r3, r1, r8, lsl #27
   13a28:			; <UNDEFINED> instruction: 0x00013db8
   13a2c:	andeq	r3, r1, r8, ror #27
   13a30:	andeq	r3, r1, r4, ror lr
   13a34:	andeq	r3, r1, r4, lsr #29
   13a38:	andeq	r3, r1, r8, asr sp
   13a3c:	andeq	r3, r1, r8, lsl lr
   13a40:	ldrdeq	r3, [r1], -r4
   13a44:	add	r2, sp, #8
   13a48:	ldr	r1, [pc, #1212]	; 13f0c <table_cell_from_buffer@@Base+0x554>
   13a4c:	mov	r0, r4
   13a50:	bl	11b18 <__isoc99_sscanf@plt>
   13a54:	cmp	r0, #1
   13a58:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13a5c:	ldr	r3, [sp, #8]
   13a60:	mov	r2, r5
   13a64:	mov	r1, r7
   13a68:	mov	r0, r6
   13a6c:	bl	133d4 <table_set_int@@Base>
   13a70:	mov	r4, #0
   13a74:	b	13e68 <table_cell_from_buffer@@Base+0x4b0>
   13a78:	add	r2, sp, #8
   13a7c:	ldr	r1, [pc, #1164]	; 13f10 <table_cell_from_buffer@@Base+0x558>
   13a80:	mov	r0, r4
   13a84:	bl	11b18 <__isoc99_sscanf@plt>
   13a88:	cmp	r0, #1
   13a8c:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13a90:	ldr	r3, [sp, #8]
   13a94:	mov	r2, r5
   13a98:	mov	r1, r7
   13a9c:	mov	r0, r6
   13aa0:	bl	133f8 <table_set_uint@@Base>
   13aa4:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13aa8:	add	r2, sp, #8
   13aac:	ldr	r1, [pc, #1120]	; 13f14 <table_cell_from_buffer@@Base+0x55c>
   13ab0:	mov	r0, r4
   13ab4:	bl	11b18 <__isoc99_sscanf@plt>
   13ab8:	cmp	r0, #1
   13abc:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13ac0:	ldrsb	r3, [sp, #8]
   13ac4:	mov	r2, r5
   13ac8:	mov	r1, r7
   13acc:	mov	r0, r6
   13ad0:	bl	1341c <table_set_int8@@Base>
   13ad4:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13ad8:	add	r2, sp, #8
   13adc:	ldr	r1, [pc, #1076]	; 13f18 <table_cell_from_buffer@@Base+0x560>
   13ae0:	mov	r0, r4
   13ae4:	bl	11b18 <__isoc99_sscanf@plt>
   13ae8:	cmp	r0, #1
   13aec:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13af0:	ldrb	r3, [sp, #8]
   13af4:	mov	r2, r5
   13af8:	mov	r1, r7
   13afc:	mov	r0, r6
   13b00:	bl	13440 <table_set_uint8@@Base>
   13b04:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13b08:	add	r2, sp, #8
   13b0c:	ldr	r1, [pc, #1032]	; 13f1c <table_cell_from_buffer@@Base+0x564>
   13b10:	mov	r0, r4
   13b14:	bl	11b18 <__isoc99_sscanf@plt>
   13b18:	cmp	r0, #1
   13b1c:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13b20:	ldrsh	r3, [sp, #8]
   13b24:	mov	r2, r5
   13b28:	mov	r1, r7
   13b2c:	mov	r0, r6
   13b30:	bl	13464 <table_set_int16@@Base>
   13b34:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13b38:	add	r2, sp, #8
   13b3c:	ldr	r1, [pc, #988]	; 13f20 <table_cell_from_buffer@@Base+0x568>
   13b40:	mov	r0, r4
   13b44:	bl	11b18 <__isoc99_sscanf@plt>
   13b48:	cmp	r0, #1
   13b4c:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13b50:	ldrh	r3, [sp, #8]
   13b54:	mov	r2, r5
   13b58:	mov	r1, r7
   13b5c:	mov	r0, r6
   13b60:	bl	13488 <table_set_uint16@@Base>
   13b64:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13b68:	add	r2, sp, #8
   13b6c:	ldr	r1, [pc, #920]	; 13f0c <table_cell_from_buffer@@Base+0x554>
   13b70:	mov	r0, r4
   13b74:	bl	11b18 <__isoc99_sscanf@plt>
   13b78:	cmp	r0, #1
   13b7c:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13b80:	ldr	r3, [sp, #8]
   13b84:	mov	r2, r5
   13b88:	mov	r1, r7
   13b8c:	mov	r0, r6
   13b90:	bl	134ac <table_set_int32@@Base>
   13b94:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13b98:	add	r2, sp, #8
   13b9c:	ldr	r1, [pc, #876]	; 13f10 <table_cell_from_buffer@@Base+0x558>
   13ba0:	mov	r0, r4
   13ba4:	bl	11b18 <__isoc99_sscanf@plt>
   13ba8:	cmp	r0, #1
   13bac:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13bb0:	ldr	r3, [sp, #8]
   13bb4:	mov	r2, r5
   13bb8:	mov	r1, r7
   13bbc:	mov	r0, r6
   13bc0:	bl	134d0 <table_set_uint32@@Base>
   13bc4:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13bc8:	add	r2, sp, #8
   13bcc:	ldr	r1, [pc, #848]	; 13f24 <table_cell_from_buffer@@Base+0x56c>
   13bd0:	mov	r0, r4
   13bd4:	bl	11b18 <__isoc99_sscanf@plt>
   13bd8:	cmp	r0, #1
   13bdc:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13be0:	ldrd	r2, [sp, #8]
   13be4:	mov	r1, r7
   13be8:	mov	r0, r6
   13bec:	strd	r2, [sp]
   13bf0:	mov	r2, r5
   13bf4:	bl	134f4 <table_set_int64@@Base>
   13bf8:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13bfc:	add	r2, sp, #8
   13c00:	ldr	r1, [pc, #800]	; 13f28 <table_cell_from_buffer@@Base+0x570>
   13c04:	mov	r0, r4
   13c08:	bl	11b18 <__isoc99_sscanf@plt>
   13c0c:	cmp	r0, #1
   13c10:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13c14:	ldrd	r2, [sp, #8]
   13c18:	mov	r1, r7
   13c1c:	mov	r0, r6
   13c20:	strd	r2, [sp]
   13c24:	mov	r2, r5
   13c28:	bl	13510 <table_set_uint64@@Base>
   13c2c:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13c30:	add	r2, sp, #8
   13c34:	ldr	r1, [pc, #736]	; 13f1c <table_cell_from_buffer@@Base+0x564>
   13c38:	mov	r0, r4
   13c3c:	bl	11b18 <__isoc99_sscanf@plt>
   13c40:	cmp	r0, #1
   13c44:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13c48:	ldrsh	r3, [sp, #8]
   13c4c:	mov	r2, r5
   13c50:	mov	r1, r7
   13c54:	mov	r0, r6
   13c58:	bl	1352c <table_set_short@@Base>
   13c5c:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13c60:	add	r2, sp, #8
   13c64:	ldr	r1, [pc, #692]	; 13f20 <table_cell_from_buffer@@Base+0x568>
   13c68:	mov	r0, r4
   13c6c:	bl	11b18 <__isoc99_sscanf@plt>
   13c70:	cmp	r0, #1
   13c74:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13c78:	ldrh	r3, [sp, #8]
   13c7c:	mov	r2, r5
   13c80:	mov	r1, r7
   13c84:	mov	r0, r6
   13c88:	bl	13550 <table_set_ushort@@Base>
   13c8c:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13c90:	add	r2, sp, #8
   13c94:	ldr	r1, [pc, #656]	; 13f2c <table_cell_from_buffer@@Base+0x574>
   13c98:	mov	r0, r4
   13c9c:	bl	11b18 <__isoc99_sscanf@plt>
   13ca0:	cmp	r0, #1
   13ca4:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13ca8:	ldr	r3, [sp, #8]
   13cac:	mov	r2, r5
   13cb0:	mov	r1, r7
   13cb4:	mov	r0, r6
   13cb8:	bl	13574 <table_set_long@@Base>
   13cbc:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13cc0:	add	r2, sp, #8
   13cc4:	ldr	r1, [pc, #612]	; 13f30 <table_cell_from_buffer@@Base+0x578>
   13cc8:	mov	r0, r4
   13ccc:	bl	11b18 <__isoc99_sscanf@plt>
   13cd0:	cmp	r0, #1
   13cd4:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13cd8:	ldr	r3, [sp, #8]
   13cdc:	mov	r2, r5
   13ce0:	mov	r1, r7
   13ce4:	mov	r0, r6
   13ce8:	bl	13598 <table_set_ulong@@Base>
   13cec:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13cf0:	add	r2, sp, #8
   13cf4:	ldr	r1, [pc, #552]	; 13f24 <table_cell_from_buffer@@Base+0x56c>
   13cf8:	mov	r0, r4
   13cfc:	bl	11b18 <__isoc99_sscanf@plt>
   13d00:	cmp	r0, #1
   13d04:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13d08:	ldrd	r2, [sp, #8]
   13d0c:	mov	r1, r7
   13d10:	mov	r0, r6
   13d14:	strd	r2, [sp]
   13d18:	mov	r2, r5
   13d1c:	bl	135bc <table_set_llong@@Base>
   13d20:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13d24:	add	r2, sp, #8
   13d28:	ldr	r1, [pc, #504]	; 13f28 <table_cell_from_buffer@@Base+0x570>
   13d2c:	mov	r0, r4
   13d30:	bl	11b18 <__isoc99_sscanf@plt>
   13d34:	cmp	r0, #1
   13d38:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13d3c:	ldrd	r2, [sp, #8]
   13d40:	mov	r1, r7
   13d44:	mov	r0, r6
   13d48:	strd	r2, [sp]
   13d4c:	mov	r2, r5
   13d50:	bl	135d8 <table_set_ullong@@Base>
   13d54:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13d58:	add	r2, sp, #8
   13d5c:	ldr	r1, [pc, #464]	; 13f34 <table_cell_from_buffer@@Base+0x57c>
   13d60:	mov	r0, r4
   13d64:	bl	11b18 <__isoc99_sscanf@plt>
   13d68:	cmp	r0, #1
   13d6c:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13d70:	add	r3, sp, #8
   13d74:	mov	r2, r5
   13d78:	mov	r1, r7
   13d7c:	mov	r0, r6
   13d80:	bl	13654 <table_set_string@@Base>
   13d84:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13d88:	add	r2, sp, #8
   13d8c:	ldr	r1, [pc, #420]	; 13f38 <table_cell_from_buffer@@Base+0x580>
   13d90:	mov	r0, r4
   13d94:	bl	11b18 <__isoc99_sscanf@plt>
   13d98:	cmp	r0, #1
   13d9c:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13da0:	vldr	s0, [sp, #8]
   13da4:	mov	r2, r5
   13da8:	mov	r1, r7
   13dac:	mov	r0, r6
   13db0:	bl	135f4 <table_set_float@@Base>
   13db4:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13db8:	add	r2, sp, #8
   13dbc:	ldr	r1, [pc, #376]	; 13f3c <table_cell_from_buffer@@Base+0x584>
   13dc0:	mov	r0, r4
   13dc4:	bl	11b18 <__isoc99_sscanf@plt>
   13dc8:	cmp	r0, #1
   13dcc:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13dd0:	vldr	d0, [sp, #8]
   13dd4:	mov	r2, r5
   13dd8:	mov	r1, r7
   13ddc:	mov	r0, r6
   13de0:	bl	13614 <table_set_double@@Base>
   13de4:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13de8:	add	r2, sp, #8
   13dec:	ldr	r1, [pc, #332]	; 13f40 <table_cell_from_buffer@@Base+0x588>
   13df0:	mov	r0, r4
   13df4:	bl	11b18 <__isoc99_sscanf@plt>
   13df8:	cmp	r0, #1
   13dfc:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13e00:	vldr	d0, [sp, #8]
   13e04:	mov	r2, r5
   13e08:	mov	r1, r7
   13e0c:	mov	r0, r6
   13e10:	bl	13634 <table_set_ldouble@@Base>
   13e14:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13e18:	add	r2, sp, #8
   13e1c:	ldr	r1, [pc, #232]	; 13f0c <table_cell_from_buffer@@Base+0x554>
   13e20:	mov	r0, r4
   13e24:	bl	11b18 <__isoc99_sscanf@plt>
   13e28:	cmp	r0, #1
   13e2c:	mov	r3, r0
   13e30:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13e34:	ldr	r4, [sp, #8]
   13e38:	cmp	r4, #0
   13e3c:	beq	13e54 <table_cell_from_buffer@@Base+0x49c>
   13e40:	mov	r2, r5
   13e44:	mov	r1, r7
   13e48:	mov	r0, r6
   13e4c:	bl	133b0 <table_set_bool@@Base>
   13e50:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13e54:	mov	r3, r4
   13e58:	mov	r2, r5
   13e5c:	mov	r1, r7
   13e60:	mov	r0, r6
   13e64:	bl	133b0 <table_set_bool@@Base>
   13e68:	mov	r0, r4
   13e6c:	add	sp, sp, #268	; 0x10c
   13e70:	pop	{r4, r5, r6, r7, pc}
   13e74:	add	r2, sp, #8
   13e78:	ldr	r1, [pc, #196]	; 13f44 <table_cell_from_buffer@@Base+0x58c>
   13e7c:	mov	r0, r4
   13e80:	bl	11b18 <__isoc99_sscanf@plt>
   13e84:	cmp	r0, #1
   13e88:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13e8c:	ldrb	r3, [sp, #8]
   13e90:	mov	r2, r5
   13e94:	mov	r1, r7
   13e98:	mov	r0, r6
   13e9c:	bl	1366c <table_set_char@@Base>
   13ea0:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13ea4:	add	r2, sp, #8
   13ea8:	ldr	r1, [pc, #148]	; 13f44 <table_cell_from_buffer@@Base+0x58c>
   13eac:	mov	r0, r4
   13eb0:	bl	11b18 <__isoc99_sscanf@plt>
   13eb4:	cmp	r0, #1
   13eb8:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13ebc:	ldrb	r3, [sp, #8]
   13ec0:	mov	r2, r5
   13ec4:	mov	r1, r7
   13ec8:	mov	r0, r6
   13ecc:	bl	13690 <table_set_uchar@@Base>
   13ed0:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13ed4:	add	r2, sp, #8
   13ed8:	ldr	r1, [pc, #104]	; 13f48 <table_cell_from_buffer@@Base+0x590>
   13edc:	mov	r0, r4
   13ee0:	bl	11b18 <__isoc99_sscanf@plt>
   13ee4:	cmp	r0, #1
   13ee8:	bne	13f04 <table_cell_from_buffer@@Base+0x54c>
   13eec:	ldr	r3, [sp, #8]
   13ef0:	mov	r2, r5
   13ef4:	mov	r1, r7
   13ef8:	mov	r0, r6
   13efc:	bl	136b4 <table_set_ptr@@Base>
   13f00:	b	13a70 <table_cell_from_buffer@@Base+0xb8>
   13f04:	mvn	r4, #0
   13f08:	b	13e68 <table_cell_from_buffer@@Base+0x4b0>
   13f0c:	andeq	r4, r1, ip, lsl r3
   13f10:	andeq	r4, r1, pc, lsl r3
   13f14:	andeq	r4, r1, r0, asr r3
   13f18:	andeq	r4, r1, r5, asr r3
   13f1c:	andeq	r4, r1, ip, lsr #6
   13f20:	andeq	r4, r1, r0, lsr r3
   13f24:	andeq	r4, r1, r2, lsr #6
   13f28:	andeq	r4, r1, r7, lsr #6
   13f2c:	andeq	r4, r1, r4, lsr r3
   13f30:	andeq	r4, r1, r8, lsr r3
   13f34:	andeq	r4, r1, ip, lsr r3
   13f38:	andeq	r4, r1, pc, lsr r3
   13f3c:	andeq	r4, r1, r2, asr #6
   13f40:	andeq	r4, r1, r6, asr #6
   13f44:	andeq	r4, r1, sl, asr #6
   13f48:	andeq	r4, r1, sp, asr #6

00013f4c <table_get_cell_ptr@@Base>:
   13f4c:	push	{r4, lr}
   13f50:	mov	r4, r2
   13f54:	bl	130b4 <table_get_row_ptr@@Base>
   13f58:	ldr	r0, [r0]
   13f5c:	add	r0, r0, r4, lsl #2
   13f60:	pop	{r4, pc}

00013f64 <table_cell_init@@Base>:
   13f64:	push	{r4, lr}
   13f68:	bl	13f4c <table_get_cell_ptr@@Base>
   13f6c:	mov	r3, #0
   13f70:	str	r3, [r0]
   13f74:	pop	{r4, pc}

00013f78 <table_cell_destroy@@Base>:
   13f78:	push	{r4, r5, r6, lr}
   13f7c:	mov	r6, r1
   13f80:	mov	r1, r2
   13f84:	mov	r5, r0
   13f88:	mov	r4, r2
   13f8c:	bl	12690 <table_get_column_data_type@@Base>
   13f90:	cmp	r0, #23
   13f94:	popeq	{r4, r5, r6, pc}
   13f98:	mov	r2, r4
   13f9c:	mov	r1, r6
   13fa0:	mov	r0, r5
   13fa4:	bl	13f4c <table_get_cell_ptr@@Base>
   13fa8:	ldr	r0, [r0]
   13fac:	cmp	r0, #0
   13fb0:	popeq	{r4, r5, r6, pc}
   13fb4:	pop	{r4, r5, r6, lr}
   13fb8:	b	11ab8 <free@plt>

00013fbc <table_cell_nullify@@Base>:
   13fbc:	push	{r4, lr}
   13fc0:	bl	13f4c <table_get_cell_ptr@@Base>
   13fc4:	mov	r4, r0
   13fc8:	ldr	r0, [r0]
   13fcc:	cmp	r0, #0
   13fd0:	beq	13fe0 <table_cell_nullify@@Base+0x24>
   13fd4:	bl	11ab8 <free@plt>
   13fd8:	mov	r3, #0
   13fdc:	str	r3, [r4]
   13fe0:	mov	r0, #0
   13fe4:	pop	{r4, pc}
   13fe8:	subs	r2, r1, #1
   13fec:	bxeq	lr
   13ff0:	bcc	141c8 <table_cell_nullify@@Base+0x20c>
   13ff4:	cmp	r0, r1
   13ff8:	bls	141ac <table_cell_nullify@@Base+0x1f0>
   13ffc:	tst	r1, r2
   14000:	beq	141b8 <table_cell_nullify@@Base+0x1fc>
   14004:	clz	r3, r0
   14008:	clz	r2, r1
   1400c:	sub	r3, r2, r3
   14010:	rsbs	r3, r3, #31
   14014:	addne	r3, r3, r3, lsl #1
   14018:	mov	r2, #0
   1401c:	addne	pc, pc, r3, lsl #2
   14020:	nop			; (mov r0, r0)
   14024:	cmp	r0, r1, lsl #31
   14028:	adc	r2, r2, r2
   1402c:	subcs	r0, r0, r1, lsl #31
   14030:	cmp	r0, r1, lsl #30
   14034:	adc	r2, r2, r2
   14038:	subcs	r0, r0, r1, lsl #30
   1403c:	cmp	r0, r1, lsl #29
   14040:	adc	r2, r2, r2
   14044:	subcs	r0, r0, r1, lsl #29
   14048:	cmp	r0, r1, lsl #28
   1404c:	adc	r2, r2, r2
   14050:	subcs	r0, r0, r1, lsl #28
   14054:	cmp	r0, r1, lsl #27
   14058:	adc	r2, r2, r2
   1405c:	subcs	r0, r0, r1, lsl #27
   14060:	cmp	r0, r1, lsl #26
   14064:	adc	r2, r2, r2
   14068:	subcs	r0, r0, r1, lsl #26
   1406c:	cmp	r0, r1, lsl #25
   14070:	adc	r2, r2, r2
   14074:	subcs	r0, r0, r1, lsl #25
   14078:	cmp	r0, r1, lsl #24
   1407c:	adc	r2, r2, r2
   14080:	subcs	r0, r0, r1, lsl #24
   14084:	cmp	r0, r1, lsl #23
   14088:	adc	r2, r2, r2
   1408c:	subcs	r0, r0, r1, lsl #23
   14090:	cmp	r0, r1, lsl #22
   14094:	adc	r2, r2, r2
   14098:	subcs	r0, r0, r1, lsl #22
   1409c:	cmp	r0, r1, lsl #21
   140a0:	adc	r2, r2, r2
   140a4:	subcs	r0, r0, r1, lsl #21
   140a8:	cmp	r0, r1, lsl #20
   140ac:	adc	r2, r2, r2
   140b0:	subcs	r0, r0, r1, lsl #20
   140b4:	cmp	r0, r1, lsl #19
   140b8:	adc	r2, r2, r2
   140bc:	subcs	r0, r0, r1, lsl #19
   140c0:	cmp	r0, r1, lsl #18
   140c4:	adc	r2, r2, r2
   140c8:	subcs	r0, r0, r1, lsl #18
   140cc:	cmp	r0, r1, lsl #17
   140d0:	adc	r2, r2, r2
   140d4:	subcs	r0, r0, r1, lsl #17
   140d8:	cmp	r0, r1, lsl #16
   140dc:	adc	r2, r2, r2
   140e0:	subcs	r0, r0, r1, lsl #16
   140e4:	cmp	r0, r1, lsl #15
   140e8:	adc	r2, r2, r2
   140ec:	subcs	r0, r0, r1, lsl #15
   140f0:	cmp	r0, r1, lsl #14
   140f4:	adc	r2, r2, r2
   140f8:	subcs	r0, r0, r1, lsl #14
   140fc:	cmp	r0, r1, lsl #13
   14100:	adc	r2, r2, r2
   14104:	subcs	r0, r0, r1, lsl #13
   14108:	cmp	r0, r1, lsl #12
   1410c:	adc	r2, r2, r2
   14110:	subcs	r0, r0, r1, lsl #12
   14114:	cmp	r0, r1, lsl #11
   14118:	adc	r2, r2, r2
   1411c:	subcs	r0, r0, r1, lsl #11
   14120:	cmp	r0, r1, lsl #10
   14124:	adc	r2, r2, r2
   14128:	subcs	r0, r0, r1, lsl #10
   1412c:	cmp	r0, r1, lsl #9
   14130:	adc	r2, r2, r2
   14134:	subcs	r0, r0, r1, lsl #9
   14138:	cmp	r0, r1, lsl #8
   1413c:	adc	r2, r2, r2
   14140:	subcs	r0, r0, r1, lsl #8
   14144:	cmp	r0, r1, lsl #7
   14148:	adc	r2, r2, r2
   1414c:	subcs	r0, r0, r1, lsl #7
   14150:	cmp	r0, r1, lsl #6
   14154:	adc	r2, r2, r2
   14158:	subcs	r0, r0, r1, lsl #6
   1415c:	cmp	r0, r1, lsl #5
   14160:	adc	r2, r2, r2
   14164:	subcs	r0, r0, r1, lsl #5
   14168:	cmp	r0, r1, lsl #4
   1416c:	adc	r2, r2, r2
   14170:	subcs	r0, r0, r1, lsl #4
   14174:	cmp	r0, r1, lsl #3
   14178:	adc	r2, r2, r2
   1417c:	subcs	r0, r0, r1, lsl #3
   14180:	cmp	r0, r1, lsl #2
   14184:	adc	r2, r2, r2
   14188:	subcs	r0, r0, r1, lsl #2
   1418c:	cmp	r0, r1, lsl #1
   14190:	adc	r2, r2, r2
   14194:	subcs	r0, r0, r1, lsl #1
   14198:	cmp	r0, r1
   1419c:	adc	r2, r2, r2
   141a0:	subcs	r0, r0, r1
   141a4:	mov	r0, r2
   141a8:	bx	lr
   141ac:	moveq	r0, #1
   141b0:	movne	r0, #0
   141b4:	bx	lr
   141b8:	clz	r2, r1
   141bc:	rsb	r2, r2, #31
   141c0:	lsr	r0, r0, r2
   141c4:	bx	lr
   141c8:	cmp	r0, #0
   141cc:	mvnne	r0, #0
   141d0:	b	141f4 <table_cell_nullify@@Base+0x238>
   141d4:	cmp	r1, #0
   141d8:	beq	141c8 <table_cell_nullify@@Base+0x20c>
   141dc:	push	{r0, r1, lr}
   141e0:	bl	13fe8 <table_cell_nullify@@Base+0x2c>
   141e4:	pop	{r1, r2, lr}
   141e8:	mul	r3, r2, r0
   141ec:	sub	r1, r1, r3
   141f0:	bx	lr
   141f4:	push	{r1, lr}
   141f8:	mov	r0, #8
   141fc:	bl	11a94 <raise@plt>
   14200:	pop	{r1, pc}

00014204 <__libc_csu_init@@Base>:
   14204:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14208:	mov	r7, r0
   1420c:	ldr	r6, [pc, #72]	; 1425c <__libc_csu_init@@Base+0x58>
   14210:	ldr	r5, [pc, #72]	; 14260 <__libc_csu_init@@Base+0x5c>
   14214:	add	r6, pc, r6
   14218:	add	r5, pc, r5
   1421c:	sub	r6, r6, r5
   14220:	mov	r8, r1
   14224:	mov	r9, r2
   14228:	bl	11a74 <raise@plt-0x20>
   1422c:	asrs	r6, r6, #2
   14230:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14234:	mov	r4, #0
   14238:	add	r4, r4, #1
   1423c:	ldr	r3, [r5], #4
   14240:	mov	r2, r9
   14244:	mov	r1, r8
   14248:	mov	r0, r7
   1424c:	blx	r3
   14250:	cmp	r6, r4
   14254:	bne	14238 <__libc_csu_init@@Base+0x34>
   14258:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1425c:	strdeq	r0, [r1], -r4
   14260:	andeq	r0, r1, ip, ror #25

00014264 <__libc_csu_fini@@Base>:
   14264:	bx	lr

Disassembly of section .fini:

00014268 <.fini>:
   14268:	push	{r3, lr}
   1426c:	pop	{r3, pc}
