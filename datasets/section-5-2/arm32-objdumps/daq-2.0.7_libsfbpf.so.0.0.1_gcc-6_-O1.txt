
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000d18 <_init>:
 d18:	push	{r3, lr}
 d1c:	bl	f30 <call_weak_fn>
 d20:	pop	{r3, pc}

Disassembly of section .plt:

00000d24 <.plt>:
 d24:	push	{lr}		; (str lr, [sp, #-4]!)
 d28:	ldr	lr, [pc, #4]	; d34 <.plt+0x10>
 d2c:	add	lr, pc, lr
 d30:	ldr	pc, [lr, #8]!
 d34:	.word	0x000302cc

00000d38 <calloc@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #48, 20	; 0x30000
 d40:	ldr	pc, [ip, #716]!	; 0x2cc

00000d44 <raise@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #48, 20	; 0x30000
 d4c:	ldr	pc, [ip, #708]!	; 0x2c4

00000d50 <strcmp@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #48, 20	; 0x30000
 d58:	ldr	pc, [ip, #700]!	; 0x2bc

00000d5c <__cxa_finalize@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #48, 20	; 0x30000
 d64:	ldr	pc, [ip, #692]!	; 0x2b4

00000d68 <printf@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #48, 20	; 0x30000
 d70:	ldr	pc, [ip, #684]!	; 0x2ac

00000d74 <fopen@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #48, 20	; 0x30000
 d7c:	ldr	pc, [ip, #676]!	; 0x2a4

00000d80 <getprotobyname@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #48, 20	; 0x30000
 d88:	ldr	pc, [ip, #668]!	; 0x29c

00000d8c <longjmp@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #48, 20	; 0x30000
 d94:	ldr	pc, [ip, #660]!	; 0x294

00000d98 <_setjmp@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #48, 20	; 0x30000
 da0:	ldr	pc, [ip, #652]!	; 0x28c

00000da4 <free@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #48, 20	; 0x30000
 dac:	ldr	pc, [ip, #644]!	; 0x284

00000db0 <getnetbyname@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #48, 20	; 0x30000
 db8:	ldr	pc, [ip, #636]!	; 0x27c

00000dbc <ferror@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #48, 20	; 0x30000
 dc4:	ldr	pc, [ip, #628]!	; 0x274

00000dc8 <memcpy@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #48, 20	; 0x30000
 dd0:	ldr	pc, [ip, #620]!	; 0x26c

00000dd4 <strdup@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #48, 20	; 0x30000
 ddc:	ldr	pc, [ip, #612]!	; 0x264

00000de0 <rewind@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #48, 20	; 0x30000
 de8:	ldr	pc, [ip, #604]!	; 0x25c

00000dec <realloc@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #48, 20	; 0x30000
 df4:	ldr	pc, [ip, #596]!	; 0x254

00000df8 <fwrite@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #48, 20	; 0x30000
 e00:	ldr	pc, [ip, #588]!	; 0x24c

00000e04 <fread@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #48, 20	; 0x30000
 e0c:	ldr	pc, [ip, #580]!	; 0x244

00000e10 <puts@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #48, 20	; 0x30000
 e18:	ldr	pc, [ip, #572]!	; 0x23c

00000e1c <malloc@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #48, 20	; 0x30000
 e24:	ldr	pc, [ip, #564]!	; 0x234

00000e28 <__gmon_start__@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #48, 20	; 0x30000
 e30:	ldr	pc, [ip, #556]!	; 0x22c

00000e34 <__ctype_b_loc@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #48, 20	; 0x30000
 e3c:	ldr	pc, [ip, #548]!	; 0x224

00000e40 <exit@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #48, 20	; 0x30000
 e48:	ldr	pc, [ip, #540]!	; 0x21c

00000e4c <strlen@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #48, 20	; 0x30000
 e54:	ldr	pc, [ip, #532]!	; 0x214

00000e58 <strchr@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #48, 20	; 0x30000
 e60:	ldr	pc, [ip, #524]!	; 0x20c

00000e64 <fprintf@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #48, 20	; 0x30000
 e6c:	ldr	pc, [ip, #516]!	; 0x204

00000e70 <__errno_location@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #48, 20	; 0x30000
 e78:	ldr	pc, [ip, #508]!	; 0x1fc

00000e7c <getservbyname@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #48, 20	; 0x30000
 e84:	ldr	pc, [ip, #500]!	; 0x1f4

00000e88 <memset@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #48, 20	; 0x30000
 e90:	ldr	pc, [ip, #492]!	; 0x1ec

00000e94 <putchar@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #48, 20	; 0x30000
 e9c:	ldr	pc, [ip, #484]!	; 0x1e4

00000ea0 <strncpy@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #48, 20	; 0x30000
 ea8:	ldr	pc, [ip, #476]!	; 0x1dc

00000eac <fileno@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #48, 20	; 0x30000
 eb4:	ldr	pc, [ip, #468]!	; 0x1d4

00000eb8 <sscanf@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #48, 20	; 0x30000
 ec0:	ldr	pc, [ip, #460]!	; 0x1cc

00000ec4 <clearerr@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #48, 20	; 0x30000
 ecc:	ldr	pc, [ip, #452]!	; 0x1c4

00000ed0 <vsnprintf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #48, 20	; 0x30000
 ed8:	ldr	pc, [ip, #444]!	; 0x1bc

00000edc <freeaddrinfo@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #48, 20	; 0x30000
 ee4:	ldr	pc, [ip, #436]!	; 0x1b4

00000ee8 <getaddrinfo@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #48, 20	; 0x30000
 ef0:	ldr	pc, [ip, #428]!	; 0x1ac

00000ef4 <ffs@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #48, 20	; 0x30000
 efc:	ldr	pc, [ip, #420]!	; 0x1a4

00000f00 <gethostbyname@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #48, 20	; 0x30000
 f08:	ldr	pc, [ip, #412]!	; 0x19c

00000f0c <isatty@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #48, 20	; 0x30000
 f14:	ldr	pc, [ip, #404]!	; 0x194

00000f18 <abort@plt>:
 f18:	add	ip, pc, #0, 12
 f1c:	add	ip, ip, #48, 20	; 0x30000
 f20:	ldr	pc, [ip, #396]!	; 0x18c

00000f24 <getc@plt>:
 f24:	add	ip, pc, #0, 12
 f28:	add	ip, ip, #48, 20	; 0x30000
 f2c:	ldr	pc, [ip, #388]!	; 0x184

Disassembly of section .text:

00000f30 <call_weak_fn>:
     f30:	ldr	r3, [pc, #20]	; f4c <call_weak_fn+0x1c>
     f34:	ldr	r2, [pc, #20]	; f50 <call_weak_fn+0x20>
     f38:	add	r3, pc, r3
     f3c:	ldr	r2, [r3, r2]
     f40:	cmp	r2, #0
     f44:	bxeq	lr
     f48:	b	e28 <__gmon_start__@plt>
     f4c:	.word	0x000300c0
     f50:	.word	0x000000e0

00000f54 <deregister_tm_clones>:
     f54:	ldr	r3, [pc, #52]	; f90 <deregister_tm_clones+0x3c>
     f58:	ldr	r0, [pc, #52]	; f94 <deregister_tm_clones+0x40>
     f5c:	add	r3, pc, r3
     f60:	add	r0, pc, r0
     f64:	add	r3, r3, #3
     f68:	sub	r3, r3, r0
     f6c:	cmp	r3, #6
     f70:	ldr	r3, [pc, #32]	; f98 <deregister_tm_clones+0x44>
     f74:	add	r3, pc, r3
     f78:	bxls	lr
     f7c:	ldr	r2, [pc, #24]	; f9c <deregister_tm_clones+0x48>
     f80:	ldr	r3, [r3, r2]
     f84:	cmp	r3, #0
     f88:	bxeq	lr
     f8c:	bx	r3
     f90:	.word	0x00030400
     f94:	.word	0x000303fc
     f98:	.word	0x00030084
     f9c:	.word	0x000000c0

00000fa0 <register_tm_clones>:
     fa0:	ldr	r1, [pc, #56]	; fe0 <register_tm_clones+0x40>
     fa4:	ldr	r0, [pc, #56]	; fe4 <register_tm_clones+0x44>
     fa8:	add	r1, pc, r1
     fac:	add	r0, pc, r0
     fb0:	sub	r1, r1, r0
     fb4:	ldr	r3, [pc, #44]	; fe8 <register_tm_clones+0x48>
     fb8:	asr	r1, r1, #2
     fbc:	add	r3, pc, r3
     fc0:	add	r1, r1, r1, lsr #31
     fc4:	asrs	r1, r1, #1
     fc8:	bxeq	lr
     fcc:	ldr	r2, [pc, #24]	; fec <register_tm_clones+0x4c>
     fd0:	ldr	r3, [r3, r2]
     fd4:	cmp	r3, #0
     fd8:	bxeq	lr
     fdc:	bx	r3
     fe0:	.word	0x000303b4
     fe4:	.word	0x000303b0
     fe8:	.word	0x0003003c
     fec:	.word	0x00000100

00000ff0 <__do_global_dtors_aux>:
     ff0:	ldr	r3, [pc, #76]	; 1044 <__do_global_dtors_aux+0x54>
     ff4:	ldr	r2, [pc, #76]	; 1048 <__do_global_dtors_aux+0x58>
     ff8:	add	r3, pc, r3
     ffc:	add	r2, pc, r2
    1000:	ldrb	r3, [r3]
    1004:	cmp	r3, #0
    1008:	bxne	lr
    100c:	ldr	r3, [pc, #56]	; 104c <__do_global_dtors_aux+0x5c>
    1010:	push	{r4, lr}
    1014:	ldr	r3, [r2, r3]
    1018:	cmp	r3, #0
    101c:	beq	102c <__do_global_dtors_aux+0x3c>
    1020:	ldr	r3, [pc, #40]	; 1050 <__do_global_dtors_aux+0x60>
    1024:	ldr	r0, [pc, r3]
    1028:	bl	d5c <__cxa_finalize@plt>
    102c:	bl	f54 <deregister_tm_clones>
    1030:	ldr	r3, [pc, #28]	; 1054 <__do_global_dtors_aux+0x64>
    1034:	mov	r2, #1
    1038:	add	r3, pc, r3
    103c:	strb	r2, [r3]
    1040:	pop	{r4, pc}
    1044:	.word	0x00030368
    1048:	.word	0x0002fffc
    104c:	.word	0x000000bc
    1050:	.word	0x000300e0
    1054:	.word	0x00030328

00001058 <frame_dummy>:
    1058:	ldr	r0, [pc, #56]	; 1098 <frame_dummy+0x40>
    105c:	ldr	r3, [pc, #56]	; 109c <frame_dummy+0x44>
    1060:	add	r0, pc, r0
    1064:	ldr	r2, [r0]
    1068:	add	r3, pc, r3
    106c:	cmp	r2, #0
    1070:	bne	1078 <frame_dummy+0x20>
    1074:	b	fa0 <register_tm_clones>
    1078:	ldr	r2, [pc, #32]	; 10a0 <frame_dummy+0x48>
    107c:	ldr	r3, [r3, r2]
    1080:	cmp	r3, #0
    1084:	beq	1074 <frame_dummy+0x1c>
    1088:	push	{r4, lr}
    108c:	blx	r3
    1090:	pop	{r4, lr}
    1094:	b	fa0 <register_tm_clones>
    1098:	.word	0x0002fcfc
    109c:	.word	0x0002ff90
    10a0:	.word	0x000000f8

000010a4 <sfbpf_filter>:
    10a4:	cmp	r0, #0
    10a8:	bne	10b4 <sfbpf_filter+0x10>
    10ac:	mvn	r0, #0
    10b0:	bx	lr
    10b4:	push	{r4, r5, r6, r7, r8, lr}
    10b8:	sub	sp, sp, #64	; 0x40
    10bc:	mov	r4, r3
    10c0:	mov	r7, r2
    10c4:	mov	r5, r1
    10c8:	sub	ip, r0, #8
    10cc:	mov	r8, #0
    10d0:	mov	r0, r8
    10d4:	add	r6, ip, #8
    10d8:	ldrh	r3, [ip, #8]
    10dc:	cmp	r3, #177	; 0xb1
    10e0:	addls	pc, pc, r3, lsl #2
    10e4:	b	13c8 <sfbpf_filter+0x324>
    10e8:	b	14fc <sfbpf_filter+0x458>
    10ec:	b	1508 <sfbpf_filter+0x464>
    10f0:	b	1544 <sfbpf_filter+0x4a0>
    10f4:	b	155c <sfbpf_filter+0x4b8>
    10f8:	b	16bc <sfbpf_filter+0x618>
    10fc:	b	1574 <sfbpf_filter+0x4d0>
    1100:	b	13cc <sfbpf_filter+0x328>
    1104:	b	1748 <sfbpf_filter+0x6a4>
    1108:	b	13c8 <sfbpf_filter+0x324>
    110c:	b	13c8 <sfbpf_filter+0x324>
    1110:	b	13c8 <sfbpf_filter+0x324>
    1114:	b	13c8 <sfbpf_filter+0x324>
    1118:	b	1650 <sfbpf_filter+0x5ac>
    111c:	b	13c8 <sfbpf_filter+0x324>
    1120:	b	13c8 <sfbpf_filter+0x324>
    1124:	b	13c8 <sfbpf_filter+0x324>
    1128:	b	13c8 <sfbpf_filter+0x324>
    112c:	b	13c8 <sfbpf_filter+0x324>
    1130:	b	13c8 <sfbpf_filter+0x324>
    1134:	b	13c8 <sfbpf_filter+0x324>
    1138:	b	16cc <sfbpf_filter+0x628>
    113c:	b	15b8 <sfbpf_filter+0x514>
    1140:	b	13d0 <sfbpf_filter+0x32c>
    1144:	b	13c8 <sfbpf_filter+0x324>
    1148:	b	13c8 <sfbpf_filter+0x324>
    114c:	b	13c8 <sfbpf_filter+0x324>
    1150:	b	13c8 <sfbpf_filter+0x324>
    1154:	b	13c8 <sfbpf_filter+0x324>
    1158:	b	165c <sfbpf_filter+0x5b8>
    115c:	b	1620 <sfbpf_filter+0x57c>
    1160:	b	13c8 <sfbpf_filter+0x324>
    1164:	b	13c8 <sfbpf_filter+0x324>
    1168:	b	13d8 <sfbpf_filter+0x334>
    116c:	b	13c8 <sfbpf_filter+0x324>
    1170:	b	13c8 <sfbpf_filter+0x324>
    1174:	b	13c8 <sfbpf_filter+0x324>
    1178:	b	16dc <sfbpf_filter+0x638>
    117c:	b	1580 <sfbpf_filter+0x4dc>
    1180:	b	13c8 <sfbpf_filter+0x324>
    1184:	b	13c8 <sfbpf_filter+0x324>
    1188:	b	1414 <sfbpf_filter+0x370>
    118c:	b	13c8 <sfbpf_filter+0x324>
    1190:	b	13c8 <sfbpf_filter+0x324>
    1194:	b	13c8 <sfbpf_filter+0x324>
    1198:	b	1668 <sfbpf_filter+0x5c4>
    119c:	b	15f0 <sfbpf_filter+0x54c>
    11a0:	b	13c8 <sfbpf_filter+0x324>
    11a4:	b	13c8 <sfbpf_filter+0x324>
    11a8:	b	143c <sfbpf_filter+0x398>
    11ac:	b	13c8 <sfbpf_filter+0x324>
    11b0:	b	13c8 <sfbpf_filter+0x324>
    11b4:	b	13c8 <sfbpf_filter+0x324>
    11b8:	b	16ec <sfbpf_filter+0x648>
    11bc:	b	159c <sfbpf_filter+0x4f8>
    11c0:	b	13c8 <sfbpf_filter+0x324>
    11c4:	b	13c8 <sfbpf_filter+0x324>
    11c8:	b	13c8 <sfbpf_filter+0x324>
    11cc:	b	13c8 <sfbpf_filter+0x324>
    11d0:	b	13c8 <sfbpf_filter+0x324>
    11d4:	b	13c8 <sfbpf_filter+0x324>
    11d8:	b	1674 <sfbpf_filter+0x5d0>
    11dc:	b	1608 <sfbpf_filter+0x564>
    11e0:	b	13c8 <sfbpf_filter+0x324>
    11e4:	b	13c8 <sfbpf_filter+0x324>
    11e8:	b	1454 <sfbpf_filter+0x3b0>
    11ec:	b	13c8 <sfbpf_filter+0x324>
    11f0:	b	13c8 <sfbpf_filter+0x324>
    11f4:	b	13c8 <sfbpf_filter+0x324>
    11f8:	b	170c <sfbpf_filter+0x668>
    11fc:	b	15d4 <sfbpf_filter+0x530>
    1200:	b	13c8 <sfbpf_filter+0x324>
    1204:	b	13c8 <sfbpf_filter+0x324>
    1208:	b	1494 <sfbpf_filter+0x3f0>
    120c:	b	13c8 <sfbpf_filter+0x324>
    1210:	b	13c8 <sfbpf_filter+0x324>
    1214:	b	13c8 <sfbpf_filter+0x324>
    1218:	b	1698 <sfbpf_filter+0x5f4>
    121c:	b	1638 <sfbpf_filter+0x594>
    1220:	b	13c8 <sfbpf_filter+0x324>
    1224:	b	13c8 <sfbpf_filter+0x324>
    1228:	b	14c0 <sfbpf_filter+0x41c>
    122c:	b	13c8 <sfbpf_filter+0x324>
    1230:	b	13c8 <sfbpf_filter+0x324>
    1234:	b	13c8 <sfbpf_filter+0x324>
    1238:	b	16fc <sfbpf_filter+0x658>
    123c:	b	13c8 <sfbpf_filter+0x324>
    1240:	b	13c8 <sfbpf_filter+0x324>
    1244:	b	13c8 <sfbpf_filter+0x324>
    1248:	b	13c8 <sfbpf_filter+0x324>
    124c:	b	13c8 <sfbpf_filter+0x324>
    1250:	b	13c8 <sfbpf_filter+0x324>
    1254:	b	13c8 <sfbpf_filter+0x324>
    1258:	b	168c <sfbpf_filter+0x5e8>
    125c:	b	13c8 <sfbpf_filter+0x324>
    1260:	b	13c8 <sfbpf_filter+0x324>
    1264:	b	13c8 <sfbpf_filter+0x324>
    1268:	b	1514 <sfbpf_filter+0x470>
    126c:	b	152c <sfbpf_filter+0x488>
    1270:	b	13c8 <sfbpf_filter+0x324>
    1274:	b	13c8 <sfbpf_filter+0x324>
    1278:	b	171c <sfbpf_filter+0x678>
    127c:	b	13c8 <sfbpf_filter+0x324>
    1280:	b	13c8 <sfbpf_filter+0x324>
    1284:	b	13c8 <sfbpf_filter+0x324>
    1288:	b	13c8 <sfbpf_filter+0x324>
    128c:	b	13c8 <sfbpf_filter+0x324>
    1290:	b	13c8 <sfbpf_filter+0x324>
    1294:	b	13c8 <sfbpf_filter+0x324>
    1298:	b	16a4 <sfbpf_filter+0x600>
    129c:	b	13c8 <sfbpf_filter+0x324>
    12a0:	b	13c8 <sfbpf_filter+0x324>
    12a4:	b	13c8 <sfbpf_filter+0x324>
    12a8:	b	13c8 <sfbpf_filter+0x324>
    12ac:	b	13c8 <sfbpf_filter+0x324>
    12b0:	b	13c8 <sfbpf_filter+0x324>
    12b4:	b	13c8 <sfbpf_filter+0x324>
    12b8:	b	172c <sfbpf_filter+0x688>
    12bc:	b	13c8 <sfbpf_filter+0x324>
    12c0:	b	13c8 <sfbpf_filter+0x324>
    12c4:	b	13c8 <sfbpf_filter+0x324>
    12c8:	b	13c8 <sfbpf_filter+0x324>
    12cc:	b	13c8 <sfbpf_filter+0x324>
    12d0:	b	13c8 <sfbpf_filter+0x324>
    12d4:	b	13c8 <sfbpf_filter+0x324>
    12d8:	b	16b0 <sfbpf_filter+0x60c>
    12dc:	b	13c8 <sfbpf_filter+0x324>
    12e0:	b	13c8 <sfbpf_filter+0x324>
    12e4:	b	13c8 <sfbpf_filter+0x324>
    12e8:	b	13b0 <sfbpf_filter+0x30c>
    12ec:	b	13bc <sfbpf_filter+0x318>
    12f0:	b	13c8 <sfbpf_filter+0x324>
    12f4:	b	13c8 <sfbpf_filter+0x324>
    12f8:	b	173c <sfbpf_filter+0x698>
    12fc:	b	13c8 <sfbpf_filter+0x324>
    1300:	b	13c8 <sfbpf_filter+0x324>
    1304:	b	1754 <sfbpf_filter+0x6b0>
    1308:	b	13c8 <sfbpf_filter+0x324>
    130c:	b	13c8 <sfbpf_filter+0x324>
    1310:	b	13c8 <sfbpf_filter+0x324>
    1314:	b	13c8 <sfbpf_filter+0x324>
    1318:	b	13c8 <sfbpf_filter+0x324>
    131c:	b	13c8 <sfbpf_filter+0x324>
    1320:	b	13c8 <sfbpf_filter+0x324>
    1324:	b	13c8 <sfbpf_filter+0x324>
    1328:	b	13c8 <sfbpf_filter+0x324>
    132c:	b	13c8 <sfbpf_filter+0x324>
    1330:	b	13c8 <sfbpf_filter+0x324>
    1334:	b	13c8 <sfbpf_filter+0x324>
    1338:	b	13c8 <sfbpf_filter+0x324>
    133c:	b	13c8 <sfbpf_filter+0x324>
    1340:	b	13c8 <sfbpf_filter+0x324>
    1344:	b	13c8 <sfbpf_filter+0x324>
    1348:	b	13c8 <sfbpf_filter+0x324>
    134c:	b	13c8 <sfbpf_filter+0x324>
    1350:	b	13c8 <sfbpf_filter+0x324>
    1354:	b	13c8 <sfbpf_filter+0x324>
    1358:	b	13c8 <sfbpf_filter+0x324>
    135c:	b	13c8 <sfbpf_filter+0x324>
    1360:	b	13c8 <sfbpf_filter+0x324>
    1364:	b	13c8 <sfbpf_filter+0x324>
    1368:	b	13c8 <sfbpf_filter+0x324>
    136c:	b	13c8 <sfbpf_filter+0x324>
    1370:	b	13c8 <sfbpf_filter+0x324>
    1374:	b	13c8 <sfbpf_filter+0x324>
    1378:	b	13c8 <sfbpf_filter+0x324>
    137c:	b	13c8 <sfbpf_filter+0x324>
    1380:	b	13c8 <sfbpf_filter+0x324>
    1384:	b	13c8 <sfbpf_filter+0x324>
    1388:	b	13c8 <sfbpf_filter+0x324>
    138c:	b	13c8 <sfbpf_filter+0x324>
    1390:	b	13c8 <sfbpf_filter+0x324>
    1394:	b	13c8 <sfbpf_filter+0x324>
    1398:	b	13c8 <sfbpf_filter+0x324>
    139c:	b	13c8 <sfbpf_filter+0x324>
    13a0:	b	13c8 <sfbpf_filter+0x324>
    13a4:	b	13c8 <sfbpf_filter+0x324>
    13a8:	b	13c8 <sfbpf_filter+0x324>
    13ac:	b	14dc <sfbpf_filter+0x438>
    13b0:	mov	r0, r7
    13b4:	mov	ip, r6
    13b8:	b	10d4 <sfbpf_filter+0x30>
    13bc:	mov	r8, r7
    13c0:	mov	ip, r6
    13c4:	b	10d4 <sfbpf_filter+0x30>
    13c8:	bl	f18 <abort@plt>
    13cc:	ldr	r0, [ip, #12]
    13d0:	add	sp, sp, #64	; 0x40
    13d4:	pop	{r4, r5, r6, r7, r8, pc}
    13d8:	ldr	r3, [ip, #12]
    13dc:	add	r2, r3, #4
    13e0:	cmp	r4, r2
    13e4:	bcc	1760 <sfbpf_filter+0x6bc>
    13e8:	add	r2, r5, r3
    13ec:	ldrb	r3, [r5, r3]
    13f0:	ldrb	r0, [r2, #1]
    13f4:	lsl	r0, r0, #16
    13f8:	orr	r0, r0, r3, lsl #24
    13fc:	ldrb	r3, [r2, #3]
    1400:	orr	r0, r0, r3
    1404:	ldrb	r3, [r2, #2]
    1408:	orr	r0, r0, r3, lsl #8
    140c:	mov	ip, r6
    1410:	b	10d4 <sfbpf_filter+0x30>
    1414:	ldr	r3, [ip, #12]
    1418:	add	r2, r3, #2
    141c:	cmp	r2, r4
    1420:	bhi	1768 <sfbpf_filter+0x6c4>
    1424:	add	r2, r5, r3
    1428:	ldrb	r3, [r5, r3]
    142c:	ldrb	r0, [r2, #1]
    1430:	orr	r0, r0, r3, lsl #8
    1434:	mov	ip, r6
    1438:	b	10d4 <sfbpf_filter+0x30>
    143c:	ldr	r3, [ip, #12]
    1440:	cmp	r4, r3
    1444:	bls	1770 <sfbpf_filter+0x6cc>
    1448:	ldrb	r0, [r5, r3]
    144c:	mov	ip, r6
    1450:	b	10d4 <sfbpf_filter+0x30>
    1454:	ldr	r3, [ip, #12]
    1458:	add	r3, r8, r3
    145c:	add	r2, r3, #4
    1460:	cmp	r4, r2
    1464:	bcc	1778 <sfbpf_filter+0x6d4>
    1468:	add	r2, r5, r3
    146c:	ldrb	r3, [r5, r3]
    1470:	ldrb	r0, [r2, #1]
    1474:	lsl	r0, r0, #16
    1478:	orr	r0, r0, r3, lsl #24
    147c:	ldrb	r3, [r2, #3]
    1480:	orr	r0, r0, r3
    1484:	ldrb	r3, [r2, #2]
    1488:	orr	r0, r0, r3, lsl #8
    148c:	mov	ip, r6
    1490:	b	10d4 <sfbpf_filter+0x30>
    1494:	ldr	r3, [ip, #12]
    1498:	add	r3, r8, r3
    149c:	add	r2, r3, #2
    14a0:	cmp	r4, r2
    14a4:	bcc	1780 <sfbpf_filter+0x6dc>
    14a8:	add	r2, r5, r3
    14ac:	ldrb	r3, [r5, r3]
    14b0:	ldrb	r0, [r2, #1]
    14b4:	orr	r0, r0, r3, lsl #8
    14b8:	mov	ip, r6
    14bc:	b	10d4 <sfbpf_filter+0x30>
    14c0:	ldr	r3, [ip, #12]
    14c4:	add	r3, r8, r3
    14c8:	cmp	r4, r3
    14cc:	bls	1788 <sfbpf_filter+0x6e4>
    14d0:	ldrb	r0, [r5, r3]
    14d4:	mov	ip, r6
    14d8:	b	10d4 <sfbpf_filter+0x30>
    14dc:	ldr	r3, [ip, #12]
    14e0:	cmp	r4, r3
    14e4:	bls	1790 <sfbpf_filter+0x6ec>
    14e8:	ldrb	r8, [r5, r3]
    14ec:	lsl	r8, r8, #2
    14f0:	and	r8, r8, #60	; 0x3c
    14f4:	mov	ip, r6
    14f8:	b	10d4 <sfbpf_filter+0x30>
    14fc:	ldr	r0, [ip, #12]
    1500:	mov	ip, r6
    1504:	b	10d4 <sfbpf_filter+0x30>
    1508:	ldr	r8, [ip, #12]
    150c:	mov	ip, r6
    1510:	b	10d4 <sfbpf_filter+0x30>
    1514:	ldr	r3, [ip, #12]
    1518:	add	r2, sp, #64	; 0x40
    151c:	add	r3, r2, r3, lsl #2
    1520:	ldr	r0, [r3, #-64]	; 0xffffffc0
    1524:	mov	ip, r6
    1528:	b	10d4 <sfbpf_filter+0x30>
    152c:	ldr	r3, [ip, #12]
    1530:	add	r2, sp, #64	; 0x40
    1534:	add	r3, r2, r3, lsl #2
    1538:	ldr	r8, [r3, #-64]	; 0xffffffc0
    153c:	mov	ip, r6
    1540:	b	10d4 <sfbpf_filter+0x30>
    1544:	ldr	r3, [ip, #12]
    1548:	add	r2, sp, #64	; 0x40
    154c:	add	r3, r2, r3, lsl #2
    1550:	str	r0, [r3, #-64]	; 0xffffffc0
    1554:	mov	ip, r6
    1558:	b	10d4 <sfbpf_filter+0x30>
    155c:	ldr	r3, [ip, #12]
    1560:	add	r2, sp, #64	; 0x40
    1564:	add	r3, r2, r3, lsl #2
    1568:	str	r8, [r3, #-64]	; 0xffffffc0
    156c:	mov	ip, r6
    1570:	b	10d4 <sfbpf_filter+0x30>
    1574:	ldr	ip, [ip, #12]
    1578:	add	ip, r6, ip, lsl #3
    157c:	b	10d4 <sfbpf_filter+0x30>
    1580:	ldr	r3, [ip, #12]
    1584:	cmp	r0, r3
    1588:	ldrbhi	ip, [ip, #10]
    158c:	ldrbls	ip, [ip, #11]
    1590:	lsl	ip, ip, #3
    1594:	add	ip, r6, ip
    1598:	b	10d4 <sfbpf_filter+0x30>
    159c:	ldr	r3, [ip, #12]
    15a0:	cmp	r0, r3
    15a4:	ldrbcs	ip, [ip, #10]
    15a8:	ldrbcc	ip, [ip, #11]
    15ac:	lsl	ip, ip, #3
    15b0:	add	ip, r6, ip
    15b4:	b	10d4 <sfbpf_filter+0x30>
    15b8:	ldr	r3, [ip, #12]
    15bc:	cmp	r0, r3
    15c0:	ldrbeq	ip, [ip, #10]
    15c4:	ldrbne	ip, [ip, #11]
    15c8:	lsl	ip, ip, #3
    15cc:	add	ip, r6, ip
    15d0:	b	10d4 <sfbpf_filter+0x30>
    15d4:	ldr	r3, [ip, #12]
    15d8:	tst	r0, r3
    15dc:	ldrbne	ip, [ip, #10]
    15e0:	ldrbeq	ip, [ip, #11]
    15e4:	lsl	ip, ip, #3
    15e8:	add	ip, r6, ip
    15ec:	b	10d4 <sfbpf_filter+0x30>
    15f0:	cmp	r0, r8
    15f4:	ldrbhi	ip, [ip, #10]
    15f8:	ldrbls	ip, [ip, #11]
    15fc:	lsl	ip, ip, #3
    1600:	add	ip, r6, ip
    1604:	b	10d4 <sfbpf_filter+0x30>
    1608:	cmp	r0, r8
    160c:	ldrbcs	ip, [ip, #10]
    1610:	ldrbcc	ip, [ip, #11]
    1614:	lsl	ip, ip, #3
    1618:	add	ip, r6, ip
    161c:	b	10d4 <sfbpf_filter+0x30>
    1620:	cmp	r0, r8
    1624:	ldrbeq	ip, [ip, #10]
    1628:	ldrbne	ip, [ip, #11]
    162c:	lsl	ip, ip, #3
    1630:	add	ip, r6, ip
    1634:	b	10d4 <sfbpf_filter+0x30>
    1638:	tst	r0, r8
    163c:	ldrbne	ip, [ip, #10]
    1640:	ldrbeq	ip, [ip, #11]
    1644:	lsl	ip, ip, #3
    1648:	add	ip, r6, ip
    164c:	b	10d4 <sfbpf_filter+0x30>
    1650:	add	r0, r0, r8
    1654:	mov	ip, r6
    1658:	b	10d4 <sfbpf_filter+0x30>
    165c:	sub	r0, r0, r8
    1660:	mov	ip, r6
    1664:	b	10d4 <sfbpf_filter+0x30>
    1668:	mul	r0, r8, r0
    166c:	mov	ip, r6
    1670:	b	10d4 <sfbpf_filter+0x30>
    1674:	cmp	r8, #0
    1678:	beq	1798 <sfbpf_filter+0x6f4>
    167c:	mov	r1, r8
    1680:	bl	12e70 <__udivsi3>
    1684:	mov	ip, r6
    1688:	b	10d4 <sfbpf_filter+0x30>
    168c:	and	r0, r0, r8
    1690:	mov	ip, r6
    1694:	b	10d4 <sfbpf_filter+0x30>
    1698:	orr	r0, r0, r8
    169c:	mov	ip, r6
    16a0:	b	10d4 <sfbpf_filter+0x30>
    16a4:	lsl	r0, r0, r8
    16a8:	mov	ip, r6
    16ac:	b	10d4 <sfbpf_filter+0x30>
    16b0:	lsr	r0, r0, r8
    16b4:	mov	ip, r6
    16b8:	b	10d4 <sfbpf_filter+0x30>
    16bc:	ldr	r3, [ip, #12]
    16c0:	add	r0, r0, r3
    16c4:	mov	ip, r6
    16c8:	b	10d4 <sfbpf_filter+0x30>
    16cc:	ldr	r3, [ip, #12]
    16d0:	sub	r0, r0, r3
    16d4:	mov	ip, r6
    16d8:	b	10d4 <sfbpf_filter+0x30>
    16dc:	ldr	r3, [ip, #12]
    16e0:	mul	r0, r3, r0
    16e4:	mov	ip, r6
    16e8:	b	10d4 <sfbpf_filter+0x30>
    16ec:	ldr	r1, [ip, #12]
    16f0:	bl	12e70 <__udivsi3>
    16f4:	mov	ip, r6
    16f8:	b	10d4 <sfbpf_filter+0x30>
    16fc:	ldr	r3, [ip, #12]
    1700:	and	r0, r0, r3
    1704:	mov	ip, r6
    1708:	b	10d4 <sfbpf_filter+0x30>
    170c:	ldr	r3, [ip, #12]
    1710:	orr	r0, r0, r3
    1714:	mov	ip, r6
    1718:	b	10d4 <sfbpf_filter+0x30>
    171c:	ldr	r3, [ip, #12]
    1720:	lsl	r0, r0, r3
    1724:	mov	ip, r6
    1728:	b	10d4 <sfbpf_filter+0x30>
    172c:	ldr	r3, [ip, #12]
    1730:	lsr	r0, r0, r3
    1734:	mov	ip, r6
    1738:	b	10d4 <sfbpf_filter+0x30>
    173c:	rsb	r0, r0, #0
    1740:	mov	ip, r6
    1744:	b	10d4 <sfbpf_filter+0x30>
    1748:	mov	r8, r0
    174c:	mov	ip, r6
    1750:	b	10d4 <sfbpf_filter+0x30>
    1754:	mov	r0, r8
    1758:	mov	ip, r6
    175c:	b	10d4 <sfbpf_filter+0x30>
    1760:	mov	r0, #0
    1764:	b	13d0 <sfbpf_filter+0x32c>
    1768:	mov	r0, #0
    176c:	b	13d0 <sfbpf_filter+0x32c>
    1770:	mov	r0, #0
    1774:	b	13d0 <sfbpf_filter+0x32c>
    1778:	mov	r0, #0
    177c:	b	13d0 <sfbpf_filter+0x32c>
    1780:	mov	r0, #0
    1784:	b	13d0 <sfbpf_filter+0x32c>
    1788:	mov	r0, #0
    178c:	b	13d0 <sfbpf_filter+0x32c>
    1790:	mov	r0, #0
    1794:	b	13d0 <sfbpf_filter+0x32c>
    1798:	mov	r0, #0
    179c:	b	13d0 <sfbpf_filter+0x32c>

000017a0 <sfbpf_validate>:
    17a0:	cmp	r1, #0
    17a4:	ble	1984 <sfbpf_validate+0x1e4>
    17a8:	push	{r4, r5, r6, lr}
    17ac:	mov	r6, r1
    17b0:	beq	1968 <sfbpf_validate+0x1c8>
    17b4:	mov	r2, r0
    17b8:	add	r5, r1, #1
    17bc:	mov	lr, #1
    17c0:	b	1834 <sfbpf_validate+0x94>
    17c4:	and	r3, r3, #224	; 0xe0
    17c8:	cmp	r3, #64	; 0x40
    17cc:	beq	1824 <sfbpf_validate+0x84>
    17d0:	bls	1800 <sfbpf_validate+0x60>
    17d4:	cmp	r3, #128	; 0x80
    17d8:	beq	1824 <sfbpf_validate+0x84>
    17dc:	cmp	r3, #160	; 0xa0
    17e0:	beq	1824 <sfbpf_validate+0x84>
    17e4:	cmp	r3, #96	; 0x60
    17e8:	bne	1810 <sfbpf_validate+0x70>
    17ec:	ldr	r3, [r2, #4]
    17f0:	cmp	r3, #15
    17f4:	bls	1824 <sfbpf_validate+0x84>
    17f8:	mov	r0, #0
    17fc:	pop	{r4, r5, r6, pc}
    1800:	cmp	r3, #0
    1804:	beq	1824 <sfbpf_validate+0x84>
    1808:	cmp	r3, #32
    180c:	beq	1824 <sfbpf_validate+0x84>
    1810:	mov	r0, #0
    1814:	pop	{r4, r5, r6, pc}
    1818:	ldr	r3, [r2, #4]
    181c:	cmp	r3, #15
    1820:	bhi	1994 <sfbpf_validate+0x1f4>
    1824:	add	lr, lr, #1
    1828:	add	r2, r2, #8
    182c:	cmp	lr, r5
    1830:	beq	1968 <sfbpf_validate+0x1c8>
    1834:	mov	r4, r2
    1838:	ldrh	r3, [r2]
    183c:	and	ip, r3, #7
    1840:	cmp	ip, #7
    1844:	addls	pc, pc, ip, lsl #2
    1848:	b	198c <sfbpf_validate+0x1ec>
    184c:	b	17c4 <sfbpf_validate+0x24>
    1850:	b	17c4 <sfbpf_validate+0x24>
    1854:	b	1818 <sfbpf_validate+0x78>
    1858:	b	1818 <sfbpf_validate+0x78>
    185c:	b	186c <sfbpf_validate+0xcc>
    1860:	b	18f0 <sfbpf_validate+0x150>
    1864:	b	1824 <sfbpf_validate+0x84>
    1868:	b	1824 <sfbpf_validate+0x84>
    186c:	and	ip, r3, #240	; 0xf0
    1870:	cmp	ip, #64	; 0x40
    1874:	beq	1824 <sfbpf_validate+0x84>
    1878:	bhi	18c4 <sfbpf_validate+0x124>
    187c:	cmp	ip, #16
    1880:	beq	1824 <sfbpf_validate+0x84>
    1884:	bls	18b4 <sfbpf_validate+0x114>
    1888:	cmp	ip, #32
    188c:	beq	1824 <sfbpf_validate+0x84>
    1890:	cmp	ip, #48	; 0x30
    1894:	bne	18bc <sfbpf_validate+0x11c>
    1898:	tst	r3, #24
    189c:	bne	1824 <sfbpf_validate+0x84>
    18a0:	ldr	r3, [r2, #4]
    18a4:	cmp	r3, #0
    18a8:	bne	1824 <sfbpf_validate+0x84>
    18ac:	mov	r0, #0
    18b0:	pop	{r4, r5, r6, pc}
    18b4:	cmp	ip, #0
    18b8:	beq	1824 <sfbpf_validate+0x84>
    18bc:	mov	r0, #0
    18c0:	pop	{r4, r5, r6, pc}
    18c4:	cmp	ip, #96	; 0x60
    18c8:	beq	1824 <sfbpf_validate+0x84>
    18cc:	bls	18e4 <sfbpf_validate+0x144>
    18d0:	cmp	ip, #112	; 0x70
    18d4:	beq	1824 <sfbpf_validate+0x84>
    18d8:	cmp	ip, #128	; 0x80
    18dc:	bne	18bc <sfbpf_validate+0x11c>
    18e0:	b	1824 <sfbpf_validate+0x84>
    18e4:	cmp	ip, #80	; 0x50
    18e8:	bne	18bc <sfbpf_validate+0x11c>
    18ec:	b	1824 <sfbpf_validate+0x84>
    18f0:	and	r3, r3, #240	; 0xf0
    18f4:	cmp	r3, #32
    18f8:	beq	1928 <sfbpf_validate+0x188>
    18fc:	bhi	1950 <sfbpf_validate+0x1b0>
    1900:	cmp	r3, #0
    1904:	bne	1920 <sfbpf_validate+0x180>
    1908:	ldr	r3, [r2, #4]
    190c:	add	r3, lr, r3
    1910:	cmp	r3, r6
    1914:	bcc	1824 <sfbpf_validate+0x84>
    1918:	mov	r0, #0
    191c:	pop	{r4, r5, r6, pc}
    1920:	cmp	r3, #16
    1924:	bne	1960 <sfbpf_validate+0x1c0>
    1928:	ldrb	r3, [r4, #2]
    192c:	add	r3, r3, lr
    1930:	cmp	r3, r6
    1934:	bcs	199c <sfbpf_validate+0x1fc>
    1938:	ldrb	r3, [r4, #3]
    193c:	add	r3, r3, lr
    1940:	cmp	r3, r6
    1944:	bcc	1824 <sfbpf_validate+0x84>
    1948:	mov	r0, #0
    194c:	pop	{r4, r5, r6, pc}
    1950:	cmp	r3, #48	; 0x30
    1954:	beq	1928 <sfbpf_validate+0x188>
    1958:	cmp	r3, #64	; 0x40
    195c:	beq	1928 <sfbpf_validate+0x188>
    1960:	mov	r0, #0
    1964:	pop	{r4, r5, r6, pc}
    1968:	add	r1, r0, r1, lsl #3
    196c:	ldrh	r0, [r1, #-8]
    1970:	and	r0, r0, #7
    1974:	cmp	r0, #6
    1978:	movne	r0, #0
    197c:	moveq	r0, #1
    1980:	pop	{r4, r5, r6, pc}
    1984:	mov	r0, #0
    1988:	bx	lr
    198c:	mov	r0, #0
    1990:	pop	{r4, r5, r6, pc}
    1994:	mov	r0, #0
    1998:	pop	{r4, r5, r6, pc}
    199c:	mov	r0, #0
    19a0:	pop	{r4, r5, r6, pc}

000019a4 <get_code_name>:
    19a4:	mov	r3, r0
    19a8:	ldr	r0, [r0, #4]
    19ac:	cmp	r0, #0
    19b0:	bxeq	lr
    19b4:	ldr	r2, [r3]
    19b8:	cmp	r1, r2
    19bc:	bxeq	lr
    19c0:	ldr	r0, [r3, #12]
    19c4:	cmp	r0, #0
    19c8:	beq	19dc <get_code_name+0x38>
    19cc:	ldr	r2, [r3, #8]!
    19d0:	cmp	r2, r1
    19d4:	bne	19c0 <get_code_name+0x1c>
    19d8:	bx	lr
    19dc:	bx	lr

000019e0 <sfbpf_print>:
    19e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    19e4:	sub	sp, sp, #20
    19e8:	mov	r6, r0
    19ec:	mov	r9, r1
    19f0:	ldr	r0, [pc, #1700]	; 209c <sfbpf_print+0x6bc>
    19f4:	add	r0, pc, r0
    19f8:	bl	e10 <puts@plt>
    19fc:	ldr	r3, [r6]
    1a00:	cmp	r3, #0
    1a04:	beq	2094 <sfbpf_print+0x6b4>
    1a08:	mov	r7, #1
    1a0c:	mov	r4, #0
    1a10:	ldr	r3, [pc, #1672]	; 20a0 <sfbpf_print+0x6c0>
    1a14:	add	r3, pc, r3
    1a18:	add	r3, r3, #344	; 0x158
    1a1c:	str	r3, [sp]
    1a20:	ldr	r3, [pc, #1660]	; 20a4 <sfbpf_print+0x6c4>
    1a24:	add	r3, pc, r3
    1a28:	add	r3, r3, #312	; 0x138
    1a2c:	str	r3, [sp, #4]
    1a30:	ldr	fp, [pc, #1648]	; 20a8 <sfbpf_print+0x6c8>
    1a34:	add	fp, pc, fp
    1a38:	add	r3, fp, #264	; 0x108
    1a3c:	str	r3, [sp, #8]
    1a40:	b	1aa8 <sfbpf_print+0xc8>
    1a44:	ldr	sl, [pc, #1632]	; 20ac <sfbpf_print+0x6cc>
    1a48:	add	sl, pc, sl
    1a4c:	and	r1, r8, #24
    1a50:	add	r0, sl, #72	; 0x48
    1a54:	bl	19a4 <get_code_name>
    1a58:	str	r0, [sp, #12]
    1a5c:	and	r1, r8, #224	; 0xe0
    1a60:	add	r0, sl, #104	; 0x68
    1a64:	bl	19a4 <get_code_name>
    1a68:	mov	r2, r0
    1a6c:	ldr	r1, [sp, #12]
    1a70:	ldr	r0, [pc, #1592]	; 20b0 <sfbpf_print+0x6d0>
    1a74:	add	r0, pc, r0
    1a78:	bl	d68 <printf@plt>
    1a7c:	ldr	r3, [r5, #4]
    1a80:	ldrb	r2, [r5, #3]
    1a84:	ldrb	r1, [r5, #2]
    1a88:	ldr	r0, [pc, #1572]	; 20b4 <sfbpf_print+0x6d4>
    1a8c:	add	r0, pc, r0
    1a90:	bl	d68 <printf@plt>
    1a94:	add	r4, r4, #1
    1a98:	add	r7, r7, #1
    1a9c:	ldr	r3, [r6]
    1aa0:	cmp	r3, r4
    1aa4:	bls	2094 <sfbpf_print+0x6b4>
    1aa8:	lsl	r8, r4, #3
    1aac:	ldr	sl, [r6, #4]
    1ab0:	add	r5, sl, r8
    1ab4:	mov	r1, r4
    1ab8:	ldr	r0, [pc, #1528]	; 20b8 <sfbpf_print+0x6d8>
    1abc:	add	r0, pc, r0
    1ac0:	bl	d68 <printf@plt>
    1ac4:	cmp	r9, #0
    1ac8:	beq	1bd4 <sfbpf_print+0x1f4>
    1acc:	ldrh	r1, [sl, r8]
    1ad0:	and	r1, r1, #7
    1ad4:	ldr	r0, [pc, #1504]	; 20bc <sfbpf_print+0x6dc>
    1ad8:	add	r0, pc, r0
    1adc:	bl	19a4 <get_code_name>
    1ae0:	mov	r1, r0
    1ae4:	ldr	r0, [pc, #1492]	; 20c0 <sfbpf_print+0x6e0>
    1ae8:	add	r0, pc, r0
    1aec:	bl	d68 <printf@plt>
    1af0:	ldrh	r8, [sl, r8]
    1af4:	and	r3, r8, #7
    1af8:	cmp	r3, #7
    1afc:	addls	pc, pc, r3, lsl #2
    1b00:	b	1a7c <sfbpf_print+0x9c>
    1b04:	b	1a44 <sfbpf_print+0x64>
    1b08:	b	1a44 <sfbpf_print+0x64>
    1b0c:	b	1a7c <sfbpf_print+0x9c>
    1b10:	b	1a7c <sfbpf_print+0x9c>
    1b14:	b	1b24 <sfbpf_print+0x144>
    1b18:	b	1b60 <sfbpf_print+0x180>
    1b1c:	b	1b94 <sfbpf_print+0x1b4>
    1b20:	b	1bb4 <sfbpf_print+0x1d4>
    1b24:	ldr	sl, [pc, #1432]	; 20c4 <sfbpf_print+0x6e4>
    1b28:	add	sl, pc, sl
    1b2c:	and	r1, r8, #240	; 0xf0
    1b30:	add	r0, sl, #160	; 0xa0
    1b34:	bl	19a4 <get_code_name>
    1b38:	str	r0, [sp, #12]
    1b3c:	and	r1, r8, #8
    1b40:	add	r0, sl, #240	; 0xf0
    1b44:	bl	19a4 <get_code_name>
    1b48:	mov	r2, r0
    1b4c:	ldr	r1, [sp, #12]
    1b50:	ldr	r0, [pc, #1392]	; 20c8 <sfbpf_print+0x6e8>
    1b54:	add	r0, pc, r0
    1b58:	bl	d68 <printf@plt>
    1b5c:	b	1a7c <sfbpf_print+0x9c>
    1b60:	and	r1, r8, #240	; 0xf0
    1b64:	ldr	r0, [sp, #8]
    1b68:	bl	19a4 <get_code_name>
    1b6c:	mov	sl, r0
    1b70:	and	r1, r8, #8
    1b74:	add	r0, fp, #240	; 0xf0
    1b78:	bl	19a4 <get_code_name>
    1b7c:	mov	r2, r0
    1b80:	mov	r1, sl
    1b84:	ldr	r0, [pc, #1344]	; 20cc <sfbpf_print+0x6ec>
    1b88:	add	r0, pc, r0
    1b8c:	bl	d68 <printf@plt>
    1b90:	b	1a7c <sfbpf_print+0x9c>
    1b94:	and	r1, r8, #24
    1b98:	ldr	r0, [sp, #4]
    1b9c:	bl	19a4 <get_code_name>
    1ba0:	mov	r1, r0
    1ba4:	ldr	r0, [pc, #1316]	; 20d0 <sfbpf_print+0x6f0>
    1ba8:	add	r0, pc, r0
    1bac:	bl	d68 <printf@plt>
    1bb0:	b	1a7c <sfbpf_print+0x9c>
    1bb4:	and	r1, r8, #248	; 0xf8
    1bb8:	ldr	r0, [sp]
    1bbc:	bl	19a4 <get_code_name>
    1bc0:	mov	r1, r0
    1bc4:	ldr	r0, [pc, #1288]	; 20d4 <sfbpf_print+0x6f4>
    1bc8:	add	r0, pc, r0
    1bcc:	bl	d68 <printf@plt>
    1bd0:	b	1a7c <sfbpf_print+0x9c>
    1bd4:	ldrh	r3, [sl, r8]
    1bd8:	and	r2, r3, #7
    1bdc:	cmp	r2, #7
    1be0:	addls	pc, pc, r2, lsl #2
    1be4:	b	1a94 <sfbpf_print+0xb4>
    1be8:	b	1c08 <sfbpf_print+0x228>
    1bec:	b	1d10 <sfbpf_print+0x330>
    1bf0:	b	1d9c <sfbpf_print+0x3bc>
    1bf4:	b	1db0 <sfbpf_print+0x3d0>
    1bf8:	b	1dc4 <sfbpf_print+0x3e4>
    1bfc:	b	1ee4 <sfbpf_print+0x504>
    1c00:	b	1fc8 <sfbpf_print+0x5e8>
    1c04:	b	203c <sfbpf_print+0x65c>
    1c08:	ldr	r0, [pc, #1224]	; 20d8 <sfbpf_print+0x6f8>
    1c0c:	add	r0, pc, r0
    1c10:	bl	d68 <printf@plt>
    1c14:	ldrh	r2, [sl, r8]
    1c18:	and	r3, r2, #224	; 0xe0
    1c1c:	cmp	r3, #64	; 0x40
    1c20:	beq	1c9c <sfbpf_print+0x2bc>
    1c24:	bhi	1c60 <sfbpf_print+0x280>
    1c28:	cmp	r3, #0
    1c2c:	beq	1cd8 <sfbpf_print+0x2f8>
    1c30:	cmp	r3, #32
    1c34:	bne	1d00 <sfbpf_print+0x320>
    1c38:	ldr	r1, [r5, #4]
    1c3c:	ands	r2, r2, #24
    1c40:	moveq	r2, #4
    1c44:	bne	1c80 <sfbpf_print+0x2a0>
    1c48:	ldr	r0, [pc, #1164]	; 20dc <sfbpf_print+0x6fc>
    1c4c:	add	r0, pc, r0
    1c50:	bl	d68 <printf@plt>
    1c54:	mov	r0, #10
    1c58:	bl	e94 <putchar@plt>
    1c5c:	b	1a94 <sfbpf_print+0xb4>
    1c60:	cmp	r3, #96	; 0x60
    1c64:	beq	1cec <sfbpf_print+0x30c>
    1c68:	cmp	r3, #128	; 0x80
    1c6c:	bne	1d00 <sfbpf_print+0x320>
    1c70:	ldr	r0, [pc, #1128]	; 20e0 <sfbpf_print+0x700>
    1c74:	add	r0, pc, r0
    1c78:	bl	d68 <printf@plt>
    1c7c:	b	1c54 <sfbpf_print+0x274>
    1c80:	cmp	r2, #8
    1c84:	moveq	r2, #2
    1c88:	beq	1c48 <sfbpf_print+0x268>
    1c8c:	cmp	r2, #16
    1c90:	movne	r2, #0
    1c94:	moveq	r2, #1
    1c98:	b	1c48 <sfbpf_print+0x268>
    1c9c:	ldr	r1, [r5, #4]
    1ca0:	ands	r2, r2, #24
    1ca4:	moveq	r2, #4
    1ca8:	bne	1cbc <sfbpf_print+0x2dc>
    1cac:	ldr	r0, [pc, #1072]	; 20e4 <sfbpf_print+0x704>
    1cb0:	add	r0, pc, r0
    1cb4:	bl	d68 <printf@plt>
    1cb8:	b	1c54 <sfbpf_print+0x274>
    1cbc:	cmp	r2, #8
    1cc0:	moveq	r2, #2
    1cc4:	beq	1cac <sfbpf_print+0x2cc>
    1cc8:	cmp	r2, #16
    1ccc:	movne	r2, #0
    1cd0:	moveq	r2, #1
    1cd4:	b	1cac <sfbpf_print+0x2cc>
    1cd8:	ldr	r1, [r5, #4]
    1cdc:	ldr	r0, [pc, #1028]	; 20e8 <sfbpf_print+0x708>
    1ce0:	add	r0, pc, r0
    1ce4:	bl	d68 <printf@plt>
    1ce8:	b	1c54 <sfbpf_print+0x274>
    1cec:	ldr	r1, [r5, #4]
    1cf0:	ldr	r0, [pc, #1012]	; 20ec <sfbpf_print+0x70c>
    1cf4:	add	r0, pc, r0
    1cf8:	bl	d68 <printf@plt>
    1cfc:	b	1c54 <sfbpf_print+0x274>
    1d00:	ldr	r0, [pc, #1000]	; 20f0 <sfbpf_print+0x710>
    1d04:	add	r0, pc, r0
    1d08:	bl	d68 <printf@plt>
    1d0c:	b	1c54 <sfbpf_print+0x274>
    1d10:	ldr	r0, [pc, #988]	; 20f4 <sfbpf_print+0x714>
    1d14:	add	r0, pc, r0
    1d18:	bl	d68 <printf@plt>
    1d1c:	ldrh	r3, [sl, r8]
    1d20:	and	r3, r3, #224	; 0xe0
    1d24:	cmp	r3, #96	; 0x60
    1d28:	beq	1d88 <sfbpf_print+0x3a8>
    1d2c:	bls	1d54 <sfbpf_print+0x374>
    1d30:	cmp	r3, #128	; 0x80
    1d34:	beq	1d70 <sfbpf_print+0x390>
    1d38:	cmp	r3, #160	; 0xa0
    1d3c:	bne	1d7c <sfbpf_print+0x39c>
    1d40:	ldr	r1, [r5, #4]
    1d44:	ldr	r0, [pc, #940]	; 20f8 <sfbpf_print+0x718>
    1d48:	add	r0, pc, r0
    1d4c:	bl	d68 <printf@plt>
    1d50:	b	1d7c <sfbpf_print+0x39c>
    1d54:	cmp	r3, #0
    1d58:	bne	1d7c <sfbpf_print+0x39c>
    1d5c:	ldr	r1, [r5, #4]
    1d60:	ldr	r0, [pc, #916]	; 20fc <sfbpf_print+0x71c>
    1d64:	add	r0, pc, r0
    1d68:	bl	d68 <printf@plt>
    1d6c:	b	1d7c <sfbpf_print+0x39c>
    1d70:	ldr	r0, [pc, #904]	; 2100 <sfbpf_print+0x720>
    1d74:	add	r0, pc, r0
    1d78:	bl	d68 <printf@plt>
    1d7c:	mov	r0, #10
    1d80:	bl	e94 <putchar@plt>
    1d84:	b	1a94 <sfbpf_print+0xb4>
    1d88:	ldr	r1, [r5, #4]
    1d8c:	ldr	r0, [pc, #880]	; 2104 <sfbpf_print+0x724>
    1d90:	add	r0, pc, r0
    1d94:	bl	d68 <printf@plt>
    1d98:	b	1d7c <sfbpf_print+0x39c>
    1d9c:	ldr	r1, [r5, #4]
    1da0:	ldr	r0, [pc, #864]	; 2108 <sfbpf_print+0x728>
    1da4:	add	r0, pc, r0
    1da8:	bl	d68 <printf@plt>
    1dac:	b	1a94 <sfbpf_print+0xb4>
    1db0:	ldr	r1, [r5, #4]
    1db4:	ldr	r0, [pc, #848]	; 210c <sfbpf_print+0x72c>
    1db8:	add	r0, pc, r0
    1dbc:	bl	d68 <printf@plt>
    1dc0:	b	1a94 <sfbpf_print+0xb4>
    1dc4:	and	r3, r3, #240	; 0xf0
    1dc8:	cmp	r3, #64	; 0x40
    1dcc:	beq	1e98 <sfbpf_print+0x4b8>
    1dd0:	bhi	1e20 <sfbpf_print+0x440>
    1dd4:	cmp	r3, #16
    1dd8:	beq	1e60 <sfbpf_print+0x480>
    1ddc:	bls	1e04 <sfbpf_print+0x424>
    1de0:	ldr	r1, [pc, #808]	; 2110 <sfbpf_print+0x730>
    1de4:	add	r1, pc, r1
    1de8:	cmp	r3, #32
    1dec:	beq	1e68 <sfbpf_print+0x488>
    1df0:	ldr	r1, [pc, #796]	; 2114 <sfbpf_print+0x734>
    1df4:	add	r1, pc, r1
    1df8:	cmp	r3, #48	; 0x30
    1dfc:	beq	1e68 <sfbpf_print+0x488>
    1e00:	b	1e14 <sfbpf_print+0x434>
    1e04:	ldr	r1, [pc, #780]	; 2118 <sfbpf_print+0x738>
    1e08:	add	r1, pc, r1
    1e0c:	cmp	r3, #0
    1e10:	beq	1e68 <sfbpf_print+0x488>
    1e14:	ldr	r1, [pc, #768]	; 211c <sfbpf_print+0x73c>
    1e18:	add	r1, pc, r1
    1e1c:	b	1e68 <sfbpf_print+0x488>
    1e20:	cmp	r3, #96	; 0x60
    1e24:	beq	1ea4 <sfbpf_print+0x4c4>
    1e28:	bls	1e4c <sfbpf_print+0x46c>
    1e2c:	cmp	r3, #112	; 0x70
    1e30:	beq	1eb0 <sfbpf_print+0x4d0>
    1e34:	cmp	r3, #128	; 0x80
    1e38:	bne	1e14 <sfbpf_print+0x434>
    1e3c:	ldr	r0, [pc, #732]	; 2120 <sfbpf_print+0x740>
    1e40:	add	r0, pc, r0
    1e44:	bl	e10 <puts@plt>
    1e48:	b	1a94 <sfbpf_print+0xb4>
    1e4c:	ldr	r1, [pc, #720]	; 2124 <sfbpf_print+0x744>
    1e50:	add	r1, pc, r1
    1e54:	cmp	r3, #80	; 0x50
    1e58:	beq	1e68 <sfbpf_print+0x488>
    1e5c:	b	1e14 <sfbpf_print+0x434>
    1e60:	ldr	r1, [pc, #704]	; 2128 <sfbpf_print+0x748>
    1e64:	add	r1, pc, r1
    1e68:	ldr	r0, [pc, #700]	; 212c <sfbpf_print+0x74c>
    1e6c:	add	r0, pc, r0
    1e70:	bl	d68 <printf@plt>
    1e74:	ldrh	r3, [sl, r8]
    1e78:	ands	r3, r3, #8
    1e7c:	beq	1ebc <sfbpf_print+0x4dc>
    1e80:	cmp	r3, #8
    1e84:	beq	1ed8 <sfbpf_print+0x4f8>
    1e88:	ldr	r0, [pc, #672]	; 2130 <sfbpf_print+0x750>
    1e8c:	add	r0, pc, r0
    1e90:	bl	d68 <printf@plt>
    1e94:	b	1ecc <sfbpf_print+0x4ec>
    1e98:	ldr	r1, [pc, #660]	; 2134 <sfbpf_print+0x754>
    1e9c:	add	r1, pc, r1
    1ea0:	b	1e68 <sfbpf_print+0x488>
    1ea4:	ldr	r1, [pc, #652]	; 2138 <sfbpf_print+0x758>
    1ea8:	add	r1, pc, r1
    1eac:	b	1e68 <sfbpf_print+0x488>
    1eb0:	ldr	r1, [pc, #644]	; 213c <sfbpf_print+0x75c>
    1eb4:	add	r1, pc, r1
    1eb8:	b	1e68 <sfbpf_print+0x488>
    1ebc:	ldr	r1, [r5, #4]
    1ec0:	ldr	r0, [pc, #632]	; 2140 <sfbpf_print+0x760>
    1ec4:	add	r0, pc, r0
    1ec8:	bl	d68 <printf@plt>
    1ecc:	mov	r0, #10
    1ed0:	bl	e94 <putchar@plt>
    1ed4:	b	1a94 <sfbpf_print+0xb4>
    1ed8:	mov	r0, #88	; 0x58
    1edc:	bl	e94 <putchar@plt>
    1ee0:	b	1ecc <sfbpf_print+0x4ec>
    1ee4:	and	r3, r3, #240	; 0xf0
    1ee8:	cmp	r3, #32
    1eec:	beq	1f68 <sfbpf_print+0x588>
    1ef0:	bhi	1f3c <sfbpf_print+0x55c>
    1ef4:	cmp	r3, #0
    1ef8:	beq	1f74 <sfbpf_print+0x594>
    1efc:	ldr	r1, [pc, #576]	; 2144 <sfbpf_print+0x764>
    1f00:	add	r1, pc, r1
    1f04:	cmp	r3, #16
    1f08:	bne	1f5c <sfbpf_print+0x57c>
    1f0c:	ldr	r0, [pc, #564]	; 2148 <sfbpf_print+0x768>
    1f10:	add	r0, pc, r0
    1f14:	bl	d68 <printf@plt>
    1f18:	ldrh	r3, [sl, r8]
    1f1c:	ands	r3, r3, #8
    1f20:	beq	1f8c <sfbpf_print+0x5ac>
    1f24:	cmp	r3, #8
    1f28:	beq	1fbc <sfbpf_print+0x5dc>
    1f2c:	ldr	r0, [pc, #536]	; 214c <sfbpf_print+0x76c>
    1f30:	add	r0, pc, r0
    1f34:	bl	d68 <printf@plt>
    1f38:	b	1f9c <sfbpf_print+0x5bc>
    1f3c:	ldr	r1, [pc, #524]	; 2150 <sfbpf_print+0x770>
    1f40:	add	r1, pc, r1
    1f44:	cmp	r3, #48	; 0x30
    1f48:	beq	1f0c <sfbpf_print+0x52c>
    1f4c:	ldr	r1, [pc, #512]	; 2154 <sfbpf_print+0x774>
    1f50:	add	r1, pc, r1
    1f54:	cmp	r3, #64	; 0x40
    1f58:	beq	1f0c <sfbpf_print+0x52c>
    1f5c:	ldr	r1, [pc, #500]	; 2158 <sfbpf_print+0x778>
    1f60:	add	r1, pc, r1
    1f64:	b	1f0c <sfbpf_print+0x52c>
    1f68:	ldr	r1, [pc, #492]	; 215c <sfbpf_print+0x77c>
    1f6c:	add	r1, pc, r1
    1f70:	b	1f0c <sfbpf_print+0x52c>
    1f74:	ldr	r1, [r5, #4]
    1f78:	add	r1, r7, r1
    1f7c:	ldr	r0, [pc, #476]	; 2160 <sfbpf_print+0x780>
    1f80:	add	r0, pc, r0
    1f84:	bl	d68 <printf@plt>
    1f88:	b	1a94 <sfbpf_print+0xb4>
    1f8c:	ldr	r1, [r5, #4]
    1f90:	ldr	r0, [pc, #460]	; 2164 <sfbpf_print+0x784>
    1f94:	add	r0, pc, r0
    1f98:	bl	d68 <printf@plt>
    1f9c:	ldrb	r2, [r5, #3]
    1fa0:	ldrb	r1, [r5, #2]
    1fa4:	add	r2, r2, r7
    1fa8:	add	r1, r1, r7
    1fac:	ldr	r0, [pc, #436]	; 2168 <sfbpf_print+0x788>
    1fb0:	add	r0, pc, r0
    1fb4:	bl	d68 <printf@plt>
    1fb8:	b	1a94 <sfbpf_print+0xb4>
    1fbc:	mov	r0, #88	; 0x58
    1fc0:	bl	e94 <putchar@plt>
    1fc4:	b	1f9c <sfbpf_print+0x5bc>
    1fc8:	ldr	r0, [pc, #412]	; 216c <sfbpf_print+0x78c>
    1fcc:	add	r0, pc, r0
    1fd0:	bl	d68 <printf@plt>
    1fd4:	ldrh	r3, [sl, r8]
    1fd8:	and	r3, r3, #24
    1fdc:	cmp	r3, #8
    1fe0:	beq	2024 <sfbpf_print+0x644>
    1fe4:	cmp	r3, #16
    1fe8:	beq	2030 <sfbpf_print+0x650>
    1fec:	cmp	r3, #0
    1ff0:	beq	2004 <sfbpf_print+0x624>
    1ff4:	ldr	r0, [pc, #372]	; 2170 <sfbpf_print+0x790>
    1ff8:	add	r0, pc, r0
    1ffc:	bl	d68 <printf@plt>
    2000:	b	2014 <sfbpf_print+0x634>
    2004:	ldr	r1, [r5, #4]
    2008:	ldr	r0, [pc, #356]	; 2174 <sfbpf_print+0x794>
    200c:	add	r0, pc, r0
    2010:	bl	d68 <printf@plt>
    2014:	ldr	r0, [pc, #348]	; 2178 <sfbpf_print+0x798>
    2018:	add	r0, pc, r0
    201c:	bl	e10 <puts@plt>
    2020:	b	1a94 <sfbpf_print+0xb4>
    2024:	mov	r0, #88	; 0x58
    2028:	bl	e94 <putchar@plt>
    202c:	b	2014 <sfbpf_print+0x634>
    2030:	mov	r0, #65	; 0x41
    2034:	bl	e94 <putchar@plt>
    2038:	b	2014 <sfbpf_print+0x634>
    203c:	ldr	r0, [pc, #312]	; 217c <sfbpf_print+0x79c>
    2040:	add	r0, pc, r0
    2044:	bl	d68 <printf@plt>
    2048:	ldrh	r3, [sl, r8]
    204c:	ands	r3, r3, #248	; 0xf8
    2050:	beq	206c <sfbpf_print+0x68c>
    2054:	cmp	r3, #128	; 0x80
    2058:	beq	2084 <sfbpf_print+0x6a4>
    205c:	ldr	r0, [pc, #284]	; 2180 <sfbpf_print+0x7a0>
    2060:	add	r0, pc, r0
    2064:	bl	d68 <printf@plt>
    2068:	b	2078 <sfbpf_print+0x698>
    206c:	ldr	r0, [pc, #272]	; 2184 <sfbpf_print+0x7a4>
    2070:	add	r0, pc, r0
    2074:	bl	d68 <printf@plt>
    2078:	mov	r0, #10
    207c:	bl	e94 <putchar@plt>
    2080:	b	1a94 <sfbpf_print+0xb4>
    2084:	ldr	r0, [pc, #252]	; 2188 <sfbpf_print+0x7a8>
    2088:	add	r0, pc, r0
    208c:	bl	d68 <printf@plt>
    2090:	b	2078 <sfbpf_print+0x698>
    2094:	add	sp, sp, #20
    2098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    209c:	.word	0x000116c8
    20a0:	.word	0x0002f6f4
    20a4:	.word	0x0002f6e4
    20a8:	.word	0x0002f6d4
    20ac:	.word	0x0002f6c0
    20b0:	.word	0x00011660
    20b4:	.word	0x00011680
    20b8:	.word	0x00011610
    20bc:	.word	0x0002f630
    20c0:	.word	0x000116e4
    20c4:	.word	0x0002f5e0
    20c8:	.word	0x00011594
    20cc:	.word	0x00011560
    20d0:	.word	0x00011550
    20d4:	.word	0x0001153c
    20d8:	.word	0x00011518
    20dc:	.word	0x000114e4
    20e0:	.word	0x000114d4
    20e4:	.word	0x0001148c
    20e8:	.word	0x0001146c
    20ec:	.word	0x0001145c
    20f0:	.word	0x000113a8
    20f4:	.word	0x00011444
    20f8:	.word	0x0001141c
    20fc:	.word	0x000113e8
    2100:	.word	0x000113d4
    2104:	.word	0x000113c0
    2108:	.word	0x000113d0
    210c:	.word	0x000113d0
    2110:	.word	0x000112b0
    2114:	.word	0x000112a4
    2118:	.word	0x00011284
    211c:	.word	0x00011294
    2120:	.word	0x0001135c
    2124:	.word	0x00011250
    2128:	.word	0x0001122c
    212c:	.word	0x00011338
    2130:	.word	0x00011220
    2134:	.word	0x00011200
    2138:	.word	0x000111fc
    213c:	.word	0x000111f4
    2140:	.word	0x00011288
    2144:	.word	0x000111b0
    2148:	.word	0x000112b4
    214c:	.word	0x0001117c
    2150:	.word	0x00011178
    2154:	.word	0x00011150
    2158:	.word	0x0001114c
    215c:	.word	0x00011148
    2160:	.word	0x00011238
    2164:	.word	0x000111b8
    2168:	.word	0x00011220
    216c:	.word	0x00011214
    2170:	.word	0x000110b4
    2174:	.word	0x00011140
    2178:	.word	0x000111d8
    217c:	.word	0x000111b8
    2180:	.word	0x0001104c
    2184:	.word	0x00011190
    2188:	.word	0x00011180

0000218c <backpatch>:
    218c:	cmp	r0, #0
    2190:	bxeq	lr
    2194:	ldr	r3, [r0, #44]	; 0x2c
    2198:	cmp	r3, #0
    219c:	ldreq	r3, [r0, #60]	; 0x3c
    21a0:	streq	r1, [r0, #60]	; 0x3c
    21a4:	ldrne	r3, [r0, #84]	; 0x54
    21a8:	strne	r1, [r0, #84]	; 0x54
    21ac:	mov	r0, r3
    21b0:	cmp	r3, #0
    21b4:	bne	2194 <backpatch+0x8>
    21b8:	bx	lr

000021bc <ethertype_to_ppptype>:
    21bc:	cmp	r0, #1536	; 0x600
    21c0:	beq	2240 <ethertype_to_ppptype+0x84>
    21c4:	ble	21f8 <ethertype_to_ppptype+0x3c>
    21c8:	ldr	r3, [pc, #136]	; 2258 <ethertype_to_ppptype+0x9c>
    21cc:	cmp	r0, r3
    21d0:	beq	2230 <ethertype_to_ppptype+0x74>
    21d4:	ble	2218 <ethertype_to_ppptype+0x5c>
    21d8:	ldr	r3, [pc, #124]	; 225c <ethertype_to_ppptype+0xa0>
    21dc:	cmp	r0, r3
    21e0:	beq	2238 <ethertype_to_ppptype+0x7c>
    21e4:	ldr	r3, [pc, #116]	; 2260 <ethertype_to_ppptype+0xa4>
    21e8:	cmp	r0, r3
    21ec:	bne	222c <ethertype_to_ppptype+0x70>
    21f0:	mov	r0, #87	; 0x57
    21f4:	bx	lr
    21f8:	cmp	r0, #224	; 0xe0
    21fc:	beq	2250 <ethertype_to_ppptype+0x94>
    2200:	cmp	r0, #254	; 0xfe
    2204:	beq	2248 <ethertype_to_ppptype+0x8c>
    2208:	cmp	r0, #66	; 0x42
    220c:	bxne	lr
    2210:	mov	r0, #49	; 0x31
    2214:	bx	lr
    2218:	cmp	r0, #2048	; 0x800
    221c:	bne	2228 <ethertype_to_ppptype+0x6c>
    2220:	mov	r0, #33	; 0x21
    2224:	bx	lr
    2228:	bx	lr
    222c:	bx	lr
    2230:	mov	r0, #39	; 0x27
    2234:	bx	lr
    2238:	mov	r0, #41	; 0x29
    223c:	bx	lr
    2240:	mov	r0, #37	; 0x25
    2244:	bx	lr
    2248:	mov	r0, #35	; 0x23
    224c:	bx	lr
    2250:	mov	r0, #43	; 0x2b
    2254:	bx	lr
    2258:	.word	0x00006003
    225c:	.word	0x0000809b
    2260:	.word	0x000086dd

00002264 <freechunks>:
    2264:	push	{r4, r5, r6, lr}
    2268:	ldr	r5, [pc, #64]	; 22b0 <freechunks+0x4c>
    226c:	add	r5, pc, r5
    2270:	mov	r4, r5
    2274:	mov	r3, #0
    2278:	str	r3, [r4], #4
    227c:	add	r5, r5, #132	; 0x84
    2280:	mov	r6, r3
    2284:	b	2294 <freechunks+0x30>
    2288:	add	r4, r4, #8
    228c:	cmp	r4, r5
    2290:	beq	22ac <freechunks+0x48>
    2294:	ldr	r0, [r4, #4]
    2298:	cmp	r0, #0
    229c:	beq	2288 <freechunks+0x24>
    22a0:	bl	da4 <free@plt>
    22a4:	str	r6, [r4, #4]
    22a8:	b	2288 <freechunks+0x24>
    22ac:	pop	{r4, r5, r6, pc}
    22b0:	.word	0x0002f0fc

000022b4 <sf_bpf_error>:
    22b4:	push	{r0, r1, r2, r3}
    22b8:	push	{lr}		; (str lr, [sp, #-4]!)
    22bc:	sub	sp, sp, #12
    22c0:	add	r3, sp, #20
    22c4:	str	r3, [sp, #4]
    22c8:	ldr	r4, [pc, #28]	; 22ec <sf_bpf_error+0x38>
    22cc:	add	r4, pc, r4
    22d0:	ldr	r2, [sp, #16]
    22d4:	mov	r1, #256	; 0x100
    22d8:	add	r0, r4, #132	; 0x84
    22dc:	bl	ed0 <vsnprintf@plt>
    22e0:	mov	r1, #1
    22e4:	add	r0, r4, #392	; 0x188
    22e8:	bl	d8c <longjmp@plt>
    22ec:	.word	0x0002f09c

000022f0 <newchunk>:
    22f0:	push	{r4, r5, r6, r7, r8, lr}
    22f4:	add	r0, r0, #3
    22f8:	bic	r5, r0, #3
    22fc:	ldr	r3, [pc, #180]	; 23b8 <newchunk+0xc8>
    2300:	add	r3, pc, r3
    2304:	mov	r4, r3
    2308:	ldr	r2, [r4], #4
    230c:	lsl	r1, r2, #3
    2310:	add	r4, r4, r1
    2314:	add	r3, r3, r1
    2318:	ldr	r3, [r3, #4]
    231c:	cmp	r5, r3
    2320:	bls	23b0 <newchunk+0xc0>
    2324:	add	r7, r4, #8
    2328:	add	r2, r2, #1
    232c:	ldr	r3, [pc, #136]	; 23bc <newchunk+0xcc>
    2330:	add	r3, pc, r3
    2334:	str	r2, [r3]
    2338:	cmp	r2, #15
    233c:	bgt	238c <newchunk+0x9c>
    2340:	mov	r6, #1024	; 0x400
    2344:	lsl	r6, r6, r2
    2348:	mov	r0, r6
    234c:	bl	e1c <malloc@plt>
    2350:	str	r0, [r4, #12]
    2354:	cmp	r0, #0
    2358:	beq	2398 <newchunk+0xa8>
    235c:	mov	r2, r6
    2360:	mov	r1, #0
    2364:	bl	e88 <memset@plt>
    2368:	str	r6, [r4, #8]
    236c:	cmp	r5, r6
    2370:	bhi	23a4 <newchunk+0xb4>
    2374:	ldr	r0, [r7]
    2378:	sub	r5, r0, r5
    237c:	str	r5, [r7]
    2380:	ldr	r0, [r7, #4]
    2384:	add	r0, r0, r5
    2388:	pop	{r4, r5, r6, r7, r8, pc}
    238c:	ldr	r0, [pc, #44]	; 23c0 <newchunk+0xd0>
    2390:	add	r0, pc, r0
    2394:	bl	22b4 <sf_bpf_error>
    2398:	ldr	r0, [pc, #36]	; 23c4 <newchunk+0xd4>
    239c:	add	r0, pc, r0
    23a0:	bl	22b4 <sf_bpf_error>
    23a4:	ldr	r0, [pc, #28]	; 23c8 <newchunk+0xd8>
    23a8:	add	r0, pc, r0
    23ac:	bl	22b4 <sf_bpf_error>
    23b0:	mov	r7, r4
    23b4:	b	2374 <newchunk+0x84>
    23b8:	.word	0x0002f068
    23bc:	.word	0x0002f038
    23c0:	.word	0x00010f44
    23c4:	.word	0x00010f38
    23c8:	.word	0x00010f2c

000023cc <gen_uncond>:
    23cc:	push	{r4, r5, r6, lr}
    23d0:	mov	r4, r0
    23d4:	mov	r0, #20
    23d8:	bl	22f0 <newchunk>
    23dc:	mov	r5, r0
    23e0:	mov	r3, #0
    23e4:	str	r3, [r0]
    23e8:	clz	r0, r4
    23ec:	lsr	r0, r0, #5
    23f0:	str	r0, [r5, #12]
    23f4:	mov	r0, #208	; 0xd0
    23f8:	bl	22f0 <newchunk>
    23fc:	mov	r3, r0
    2400:	mov	r2, #21
    2404:	str	r2, [r0, #8]
    2408:	str	r0, [r3, #96]	; 0x60
    240c:	str	r5, [r0, #4]
    2410:	pop	{r4, r5, r6, pc}

00002414 <xfer_to_x>:
    2414:	push	{r4, lr}
    2418:	mov	r4, r0
    241c:	mov	r0, #20
    2420:	bl	22f0 <newchunk>
    2424:	mov	r2, #97	; 0x61
    2428:	str	r2, [r0]
    242c:	ldr	r2, [r4, #8]
    2430:	str	r2, [r0, #12]
    2434:	pop	{r4, pc}

00002438 <xfer_to_a>:
    2438:	push	{r4, lr}
    243c:	mov	r4, r0
    2440:	mov	r0, #20
    2444:	bl	22f0 <newchunk>
    2448:	mov	r2, #96	; 0x60
    244c:	str	r2, [r0]
    2450:	ldr	r2, [r4, #8]
    2454:	str	r2, [r0, #12]
    2458:	pop	{r4, pc}

0000245c <alloc_reg>:
    245c:	push	{r4, lr}
    2460:	ldr	r3, [pc, #200]	; 2530 <alloc_reg+0xd4>
    2464:	add	r3, pc, r3
    2468:	ldr	r0, [r3, #784]	; 0x310
    246c:	add	r3, r3, r0, lsl #2
    2470:	ldr	r3, [r3, #788]	; 0x314
    2474:	cmp	r3, #0
    2478:	beq	2508 <alloc_reg+0xac>
    247c:	add	r0, r0, #1
    2480:	asr	r3, r0, #31
    2484:	lsr	r3, r3, #28
    2488:	add	r0, r0, r3
    248c:	and	r0, r0, #15
    2490:	sub	r0, r0, r3
    2494:	ldr	r3, [pc, #152]	; 2534 <alloc_reg+0xd8>
    2498:	add	r3, pc, r3
    249c:	str	r0, [r3, #784]	; 0x310
    24a0:	mov	r2, #15
    24a4:	mov	ip, #0
    24a8:	ldr	r1, [pc, #136]	; 2538 <alloc_reg+0xdc>
    24ac:	add	r1, pc, r1
    24b0:	mov	lr, #1
    24b4:	add	r3, r1, r0, lsl #2
    24b8:	ldr	r3, [r3, #788]	; 0x314
    24bc:	cmp	r3, #0
    24c0:	beq	2500 <alloc_reg+0xa4>
    24c4:	add	r0, r0, #1
    24c8:	asr	r3, r0, #31
    24cc:	lsr	r3, r3, #28
    24d0:	add	r0, r0, r3
    24d4:	and	r0, r0, #15
    24d8:	sub	r0, r0, r3
    24dc:	mov	ip, lr
    24e0:	subs	r2, r2, #1
    24e4:	bne	24b4 <alloc_reg+0x58>
    24e8:	ldr	r3, [pc, #76]	; 253c <alloc_reg+0xe0>
    24ec:	add	r3, pc, r3
    24f0:	str	r0, [r3, #784]	; 0x310
    24f4:	ldr	r0, [pc, #68]	; 2540 <alloc_reg+0xe4>
    24f8:	add	r0, pc, r0
    24fc:	bl	22b4 <sf_bpf_error>
    2500:	cmp	ip, #0
    2504:	bne	2520 <alloc_reg+0xc4>
    2508:	ldr	r3, [pc, #52]	; 2544 <alloc_reg+0xe8>
    250c:	add	r3, pc, r3
    2510:	add	r3, r3, r0, lsl #2
    2514:	mov	r2, #1
    2518:	str	r2, [r3, #788]	; 0x314
    251c:	pop	{r4, pc}
    2520:	ldr	r3, [pc, #32]	; 2548 <alloc_reg+0xec>
    2524:	add	r3, pc, r3
    2528:	str	r0, [r3, #784]	; 0x310
    252c:	b	2508 <alloc_reg+0xac>
    2530:	.word	0x0002ef04
    2534:	.word	0x0002eed0
    2538:	.word	0x0002eebc
    253c:	.word	0x0002ee7c
    2540:	.word	0x00010dec
    2544:	.word	0x0002ee5c
    2548:	.word	0x0002ee44

0000254c <gen_llprefixlen>:
    254c:	push	{r4, lr}
    2550:	ldr	r3, [pc, #352]	; 26b8 <gen_llprefixlen+0x16c>
    2554:	add	r3, pc, r3
    2558:	ldr	r3, [r3, #852]	; 0x354
    255c:	cmp	r3, #127	; 0x7f
    2560:	beq	2650 <gen_llprefixlen+0x104>
    2564:	ble	25b0 <gen_llprefixlen+0x64>
    2568:	cmp	r3, #163	; 0xa3
    256c:	beq	2604 <gen_llprefixlen+0xb8>
    2570:	cmp	r3, #192	; 0xc0
    2574:	bne	26b0 <gen_llprefixlen+0x164>
    2578:	ldr	r3, [pc, #316]	; 26bc <gen_llprefixlen+0x170>
    257c:	add	r3, pc, r3
    2580:	ldr	r3, [r3, #856]	; 0x358
    2584:	cmn	r3, #1
    2588:	beq	269c <gen_llprefixlen+0x150>
    258c:	mov	r0, #20
    2590:	bl	22f0 <newchunk>
    2594:	mov	r3, #97	; 0x61
    2598:	str	r3, [r0]
    259c:	ldr	r3, [pc, #284]	; 26c0 <gen_llprefixlen+0x174>
    25a0:	add	r3, pc, r3
    25a4:	ldr	r3, [r3, #856]	; 0x358
    25a8:	str	r3, [r0, #12]
    25ac:	pop	{r4, pc}
    25b0:	cmp	r3, #119	; 0x77
    25b4:	bne	26b0 <gen_llprefixlen+0x164>
    25b8:	ldr	r3, [pc, #260]	; 26c4 <gen_llprefixlen+0x178>
    25bc:	add	r3, pc, r3
    25c0:	ldr	r3, [r3, #856]	; 0x358
    25c4:	cmn	r3, #1
    25c8:	beq	25f0 <gen_llprefixlen+0xa4>
    25cc:	mov	r0, #20
    25d0:	bl	22f0 <newchunk>
    25d4:	mov	r3, #97	; 0x61
    25d8:	str	r3, [r0]
    25dc:	ldr	r3, [pc, #228]	; 26c8 <gen_llprefixlen+0x17c>
    25e0:	add	r3, pc, r3
    25e4:	ldr	r3, [r3, #856]	; 0x358
    25e8:	str	r3, [r0, #12]
    25ec:	pop	{r4, pc}
    25f0:	bl	245c <alloc_reg>
    25f4:	ldr	r3, [pc, #208]	; 26cc <gen_llprefixlen+0x180>
    25f8:	add	r3, pc, r3
    25fc:	str	r0, [r3, #856]	; 0x358
    2600:	b	25cc <gen_llprefixlen+0x80>
    2604:	ldr	r3, [pc, #196]	; 26d0 <gen_llprefixlen+0x184>
    2608:	add	r3, pc, r3
    260c:	ldr	r3, [r3, #856]	; 0x358
    2610:	cmn	r3, #1
    2614:	beq	263c <gen_llprefixlen+0xf0>
    2618:	mov	r0, #20
    261c:	bl	22f0 <newchunk>
    2620:	mov	r3, #97	; 0x61
    2624:	str	r3, [r0]
    2628:	ldr	r3, [pc, #164]	; 26d4 <gen_llprefixlen+0x188>
    262c:	add	r3, pc, r3
    2630:	ldr	r3, [r3, #856]	; 0x358
    2634:	str	r3, [r0, #12]
    2638:	pop	{r4, pc}
    263c:	bl	245c <alloc_reg>
    2640:	ldr	r3, [pc, #144]	; 26d8 <gen_llprefixlen+0x18c>
    2644:	add	r3, pc, r3
    2648:	str	r0, [r3, #856]	; 0x358
    264c:	b	2618 <gen_llprefixlen+0xcc>
    2650:	ldr	r3, [pc, #132]	; 26dc <gen_llprefixlen+0x190>
    2654:	add	r3, pc, r3
    2658:	ldr	r3, [r3, #856]	; 0x358
    265c:	cmn	r3, #1
    2660:	beq	2688 <gen_llprefixlen+0x13c>
    2664:	mov	r0, #20
    2668:	bl	22f0 <newchunk>
    266c:	mov	r3, #97	; 0x61
    2670:	str	r3, [r0]
    2674:	ldr	r3, [pc, #100]	; 26e0 <gen_llprefixlen+0x194>
    2678:	add	r3, pc, r3
    267c:	ldr	r3, [r3, #856]	; 0x358
    2680:	str	r3, [r0, #12]
    2684:	pop	{r4, pc}
    2688:	bl	245c <alloc_reg>
    268c:	ldr	r3, [pc, #80]	; 26e4 <gen_llprefixlen+0x198>
    2690:	add	r3, pc, r3
    2694:	str	r0, [r3, #856]	; 0x358
    2698:	b	2664 <gen_llprefixlen+0x118>
    269c:	bl	245c <alloc_reg>
    26a0:	ldr	r3, [pc, #64]	; 26e8 <gen_llprefixlen+0x19c>
    26a4:	add	r3, pc, r3
    26a8:	str	r0, [r3, #856]	; 0x358
    26ac:	b	258c <gen_llprefixlen+0x40>
    26b0:	mov	r0, #0
    26b4:	pop	{r4, pc}
    26b8:	.word	0x0002ee14
    26bc:	.word	0x0002edec
    26c0:	.word	0x0002edc8
    26c4:	.word	0x0002edac
    26c8:	.word	0x0002ed88
    26cc:	.word	0x0002ed70
    26d0:	.word	0x0002ed60
    26d4:	.word	0x0002ed3c
    26d8:	.word	0x0002ed24
    26dc:	.word	0x0002ed14
    26e0:	.word	0x0002ecf0
    26e4:	.word	0x0002ecd8
    26e8:	.word	0x0002ecc4

000026ec <gen_off_macpl>:
    26ec:	ldr	r3, [pc, #100]	; 2758 <gen_off_macpl+0x6c>
    26f0:	add	r3, pc, r3
    26f4:	ldr	r3, [r3, #860]	; 0x35c
    26f8:	cmp	r3, #0
    26fc:	beq	2750 <gen_off_macpl+0x64>
    2700:	push	{r4, lr}
    2704:	ldr	r3, [pc, #80]	; 275c <gen_off_macpl+0x70>
    2708:	add	r3, pc, r3
    270c:	ldr	r3, [r3, #864]	; 0x360
    2710:	cmn	r3, #1
    2714:	beq	273c <gen_off_macpl+0x50>
    2718:	mov	r0, #20
    271c:	bl	22f0 <newchunk>
    2720:	mov	r3, #97	; 0x61
    2724:	str	r3, [r0]
    2728:	ldr	r3, [pc, #48]	; 2760 <gen_off_macpl+0x74>
    272c:	add	r3, pc, r3
    2730:	ldr	r3, [r3, #864]	; 0x360
    2734:	str	r3, [r0, #12]
    2738:	pop	{r4, pc}
    273c:	bl	245c <alloc_reg>
    2740:	ldr	r3, [pc, #28]	; 2764 <gen_off_macpl+0x78>
    2744:	add	r3, pc, r3
    2748:	str	r0, [r3, #864]	; 0x360
    274c:	b	2718 <gen_off_macpl+0x2c>
    2750:	mov	r0, #0
    2754:	bx	lr
    2758:	.word	0x0002ec78
    275c:	.word	0x0002ec60
    2760:	.word	0x0002ec3c
    2764:	.word	0x0002ec24

00002768 <lookup_proto>:
    2768:	push	{r4, lr}
    276c:	mov	r4, r0
    2770:	cmp	r1, #24
    2774:	addls	pc, pc, r1, lsl #2
    2778:	b	2894 <lookup_proto+0x12c>
    277c:	b	27e0 <lookup_proto+0x78>
    2780:	b	27fc <lookup_proto+0x94>
    2784:	b	27e0 <lookup_proto+0x78>
    2788:	b	2894 <lookup_proto+0x12c>
    278c:	b	2894 <lookup_proto+0x12c>
    2790:	b	2894 <lookup_proto+0x12c>
    2794:	b	2894 <lookup_proto+0x12c>
    2798:	b	2894 <lookup_proto+0x12c>
    279c:	b	2894 <lookup_proto+0x12c>
    27a0:	b	2894 <lookup_proto+0x12c>
    27a4:	b	2894 <lookup_proto+0x12c>
    27a8:	b	2894 <lookup_proto+0x12c>
    27ac:	b	2894 <lookup_proto+0x12c>
    27b0:	b	2894 <lookup_proto+0x12c>
    27b4:	b	2894 <lookup_proto+0x12c>
    27b8:	b	2894 <lookup_proto+0x12c>
    27bc:	b	2894 <lookup_proto+0x12c>
    27c0:	b	27e0 <lookup_proto+0x78>
    27c4:	b	2894 <lookup_proto+0x12c>
    27c8:	b	2894 <lookup_proto+0x12c>
    27cc:	b	2894 <lookup_proto+0x12c>
    27d0:	b	2894 <lookup_proto+0x12c>
    27d4:	b	2894 <lookup_proto+0x12c>
    27d8:	b	2894 <lookup_proto+0x12c>
    27dc:	b	2828 <lookup_proto+0xc0>
    27e0:	bl	be6c <pcap_nametoproto>
    27e4:	cmn	r0, #1
    27e8:	popne	{r4, pc}
    27ec:	mov	r1, r4
    27f0:	ldr	r0, [pc, #164]	; 289c <lookup_proto+0x134>
    27f4:	add	r0, pc, r0
    27f8:	bl	22b4 <sf_bpf_error>
    27fc:	bl	be84 <pcap_nametoeproto>
    2800:	cmn	r0, #1
    2804:	popne	{r4, pc}
    2808:	mov	r0, r4
    280c:	bl	bee8 <pcap_nametollc>
    2810:	cmn	r0, #1
    2814:	popne	{r4, pc}
    2818:	mov	r1, r4
    281c:	ldr	r0, [pc, #124]	; 28a0 <lookup_proto+0x138>
    2820:	add	r0, pc, r0
    2824:	bl	22b4 <sf_bpf_error>
    2828:	ldr	r1, [pc, #116]	; 28a4 <lookup_proto+0x13c>
    282c:	add	r1, pc, r1
    2830:	bl	d50 <strcmp@plt>
    2834:	cmp	r0, #0
    2838:	bne	2844 <lookup_proto+0xdc>
    283c:	mov	r0, #130	; 0x82
    2840:	pop	{r4, pc}
    2844:	ldr	r1, [pc, #92]	; 28a8 <lookup_proto+0x140>
    2848:	add	r1, pc, r1
    284c:	mov	r0, r4
    2850:	bl	d50 <strcmp@plt>
    2854:	cmp	r0, #0
    2858:	bne	2864 <lookup_proto+0xfc>
    285c:	mov	r0, #131	; 0x83
    2860:	pop	{r4, pc}
    2864:	ldr	r1, [pc, #64]	; 28ac <lookup_proto+0x144>
    2868:	add	r1, pc, r1
    286c:	mov	r0, r4
    2870:	bl	d50 <strcmp@plt>
    2874:	cmp	r0, #0
    2878:	bne	2884 <lookup_proto+0x11c>
    287c:	mov	r0, #129	; 0x81
    2880:	pop	{r4, pc}
    2884:	mov	r1, r4
    2888:	ldr	r0, [pc, #32]	; 28b0 <lookup_proto+0x148>
    288c:	add	r0, pc, r0
    2890:	bl	22b4 <sf_bpf_error>
    2894:	mvn	r0, #0
    2898:	pop	{r4, pc}
    289c:	.word	0x00010b24
    28a0:	.word	0x00010b10
    28a4:	.word	0x00010b20
    28a8:	.word	0x00010b0c
    28ac:	.word	0x00010af4
    28b0:	.word	0x00010ad8

000028b4 <sf_sdup>:
    28b4:	push	{r4, r5, r6, r7, r8, lr}
    28b8:	mov	r7, r0
    28bc:	bl	e4c <strlen@plt>
    28c0:	mov	r6, r0
    28c4:	add	r4, r0, #1
    28c8:	mov	r0, r4
    28cc:	bl	22f0 <newchunk>
    28d0:	mov	r5, r0
    28d4:	mov	r2, r4
    28d8:	mov	r1, r7
    28dc:	bl	ea0 <strncpy@plt>
    28e0:	cmp	r4, #0
    28e4:	movgt	r3, #0
    28e8:	strbgt	r3, [r5, r6]
    28ec:	mov	r0, r5
    28f0:	pop	{r4, r5, r6, r7, r8, pc}

000028f4 <sfbpf_compile>:
    28f4:	push	{r4, r5, r6, lr}
    28f8:	sub	sp, sp, #24
    28fc:	str	r0, [sp, #4]
    2900:	str	r1, [sp, #8]
    2904:	str	r2, [sp, #12]
    2908:	ldr	r2, [pc, #3876]	; 3834 <sfbpf_compile+0xf40>
    290c:	add	r2, pc, r2
    2910:	str	r2, [sp]
    2914:	str	r3, [sp, #20]
    2918:	ldr	r3, [pc, #3864]	; 3838 <sfbpf_compile+0xf44>
    291c:	ldr	r3, [r2, r3]
    2920:	mov	r1, #0
    2924:	str	r1, [r3]
    2928:	ldr	r3, [pc, #3852]	; 383c <sfbpf_compile+0xf48>
    292c:	ldr	r3, [r2, r3]
    2930:	str	r1, [r3]
    2934:	ldr	r4, [pc, #3844]	; 3840 <sfbpf_compile+0xf4c>
    2938:	add	r4, pc, r4
    293c:	str	r1, [r4, #868]	; 0x364
    2940:	str	r1, [r4, #784]	; 0x310
    2944:	mov	r2, #64	; 0x40
    2948:	add	r0, r4, #788	; 0x314
    294c:	bl	e88 <memset@plt>
    2950:	add	r0, r4, #392	; 0x188
    2954:	bl	d98 <_setjmp@plt>
    2958:	cmp	r0, #0
    295c:	beq	29a0 <sfbpf_compile+0xac>
    2960:	ldr	r3, [pc, #3804]	; 3844 <sfbpf_compile+0xf50>
    2964:	add	r3, pc, r3
    2968:	ldr	r0, [r3, #872]	; 0x368
    296c:	cmp	r0, #0
    2970:	beq	2988 <sfbpf_compile+0x94>
    2974:	bl	edc <freeaddrinfo@plt>
    2978:	mov	r2, #0
    297c:	ldr	r3, [pc, #3780]	; 3848 <sfbpf_compile+0xf54>
    2980:	add	r3, pc, r3
    2984:	str	r2, [r3, #872]	; 0x368
    2988:	bl	12e30 <sf_lex_cleanup>
    298c:	bl	2264 <freechunks>
    2990:	mvn	r4, #0
    2994:	mov	r0, r4
    2998:	add	sp, sp, #24
    299c:	pop	{r4, r5, r6, pc}
    29a0:	ldr	r3, [pc, #3748]	; 384c <sfbpf_compile+0xf58>
    29a4:	add	r3, pc, r3
    29a8:	ldr	r2, [sp, #44]	; 0x2c
    29ac:	str	r2, [r3, #876]	; 0x36c
    29b0:	ldr	r2, [sp, #4]
    29b4:	str	r2, [r3, #880]	; 0x370
    29b8:	cmp	r2, #0
    29bc:	beq	2de8 <sfbpf_compile+0x4f4>
    29c0:	ldr	r3, [sp, #20]
    29c4:	cmp	r3, #0
    29c8:	beq	2e1c <sfbpf_compile+0x528>
    29cc:	ldr	r0, [sp, #20]
    29d0:	bl	12e14 <sf_lex_init>
    29d4:	ldr	r3, [pc, #3700]	; 3850 <sfbpf_compile+0xf5c>
    29d8:	add	r3, pc, r3
    29dc:	ldr	ip, [sp, #8]
    29e0:	str	ip, [r3, #852]	; 0x354
    29e4:	mov	r1, #0
    29e8:	str	r1, [r3, #884]	; 0x374
    29ec:	str	r1, [r3, #888]	; 0x378
    29f0:	str	r1, [r3, #892]	; 0x37c
    29f4:	mvn	r2, #0
    29f8:	str	r2, [r3, #896]	; 0x380
    29fc:	str	r2, [r3, #900]	; 0x384
    2a00:	str	r2, [r3, #904]	; 0x388
    2a04:	str	r2, [r3, #908]	; 0x38c
    2a08:	str	r1, [r3, #912]	; 0x390
    2a0c:	str	r2, [r3, #916]	; 0x394
    2a10:	str	r2, [r3, #920]	; 0x398
    2a14:	str	r2, [r3, #924]	; 0x39c
    2a18:	str	r2, [r3, #928]	; 0x3a0
    2a1c:	str	r2, [r3, #932]	; 0x3a4
    2a20:	str	r1, [r3, #936]	; 0x3a8
    2a24:	str	r1, [r3, #940]	; 0x3ac
    2a28:	str	r1, [r3, #860]	; 0x35c
    2a2c:	ldr	r0, [pc, #3616]	; 3854 <sfbpf_compile+0xf60>
    2a30:	add	r0, pc, r0
    2a34:	str	r2, [r0]
    2a38:	str	r1, [r0, #4]
    2a3c:	str	r2, [r3, #856]	; 0x358
    2a40:	str	r2, [r3, #864]	; 0x360
    2a44:	cmp	ip, #229	; 0xe5
    2a48:	addls	pc, pc, ip, lsl #2
    2a4c:	b	37ac <sfbpf_compile+0xeb8>
    2a50:	b	2f74 <sfbpf_compile+0x680>
    2a54:	b	2ef8 <sfbpf_compile+0x604>
    2a58:	b	37ac <sfbpf_compile+0xeb8>
    2a5c:	b	37ac <sfbpf_compile+0xeb8>
    2a60:	b	37ac <sfbpf_compile+0xeb8>
    2a64:	b	37ac <sfbpf_compile+0xeb8>
    2a68:	b	305c <sfbpf_compile+0x768>
    2a6c:	b	2e28 <sfbpf_compile+0x534>
    2a70:	b	2f24 <sfbpf_compile+0x630>
    2a74:	b	2fbc <sfbpf_compile+0x6c8>
    2a78:	b	3034 <sfbpf_compile+0x740>
    2a7c:	b	30dc <sfbpf_compile+0x7e8>
    2a80:	b	3150 <sfbpf_compile+0x85c>
    2a84:	b	37ac <sfbpf_compile+0xeb8>
    2a88:	b	37ac <sfbpf_compile+0xeb8>
    2a8c:	b	2f4c <sfbpf_compile+0x658>
    2a90:	b	300c <sfbpf_compile+0x718>
    2a94:	b	37ac <sfbpf_compile+0xeb8>
    2a98:	b	37ac <sfbpf_compile+0xeb8>
    2a9c:	b	30dc <sfbpf_compile+0x7e8>
    2aa0:	b	37ac <sfbpf_compile+0xeb8>
    2aa4:	b	37ac <sfbpf_compile+0xeb8>
    2aa8:	b	37ac <sfbpf_compile+0xeb8>
    2aac:	b	37ac <sfbpf_compile+0xeb8>
    2ab0:	b	37ac <sfbpf_compile+0xeb8>
    2ab4:	b	37ac <sfbpf_compile+0xeb8>
    2ab8:	b	37ac <sfbpf_compile+0xeb8>
    2abc:	b	37ac <sfbpf_compile+0xeb8>
    2ac0:	b	37ac <sfbpf_compile+0xeb8>
    2ac4:	b	37ac <sfbpf_compile+0xeb8>
    2ac8:	b	37ac <sfbpf_compile+0xeb8>
    2acc:	b	37ac <sfbpf_compile+0xeb8>
    2ad0:	b	37ac <sfbpf_compile+0xeb8>
    2ad4:	b	37ac <sfbpf_compile+0xeb8>
    2ad8:	b	37ac <sfbpf_compile+0xeb8>
    2adc:	b	37ac <sfbpf_compile+0xeb8>
    2ae0:	b	37ac <sfbpf_compile+0xeb8>
    2ae4:	b	37ac <sfbpf_compile+0xeb8>
    2ae8:	b	37ac <sfbpf_compile+0xeb8>
    2aec:	b	37ac <sfbpf_compile+0xeb8>
    2af0:	b	37ac <sfbpf_compile+0xeb8>
    2af4:	b	37ac <sfbpf_compile+0xeb8>
    2af8:	b	37ac <sfbpf_compile+0xeb8>
    2afc:	b	37ac <sfbpf_compile+0xeb8>
    2b00:	b	37ac <sfbpf_compile+0xeb8>
    2b04:	b	37ac <sfbpf_compile+0xeb8>
    2b08:	b	37ac <sfbpf_compile+0xeb8>
    2b0c:	b	37ac <sfbpf_compile+0xeb8>
    2b10:	b	37ac <sfbpf_compile+0xeb8>
    2b14:	b	37ac <sfbpf_compile+0xeb8>
    2b18:	b	2fbc <sfbpf_compile+0x6c8>
    2b1c:	b	2fe4 <sfbpf_compile+0x6f0>
    2b20:	b	37ac <sfbpf_compile+0xeb8>
    2b24:	b	37ac <sfbpf_compile+0xeb8>
    2b28:	b	37ac <sfbpf_compile+0xeb8>
    2b2c:	b	37ac <sfbpf_compile+0xeb8>
    2b30:	b	37ac <sfbpf_compile+0xeb8>
    2b34:	b	37ac <sfbpf_compile+0xeb8>
    2b38:	b	37ac <sfbpf_compile+0xeb8>
    2b3c:	b	37ac <sfbpf_compile+0xeb8>
    2b40:	b	37ac <sfbpf_compile+0xeb8>
    2b44:	b	37ac <sfbpf_compile+0xeb8>
    2b48:	b	37ac <sfbpf_compile+0xeb8>
    2b4c:	b	37ac <sfbpf_compile+0xeb8>
    2b50:	b	37ac <sfbpf_compile+0xeb8>
    2b54:	b	37ac <sfbpf_compile+0xeb8>
    2b58:	b	37ac <sfbpf_compile+0xeb8>
    2b5c:	b	37ac <sfbpf_compile+0xeb8>
    2b60:	b	37ac <sfbpf_compile+0xeb8>
    2b64:	b	37ac <sfbpf_compile+0xeb8>
    2b68:	b	37ac <sfbpf_compile+0xeb8>
    2b6c:	b	37ac <sfbpf_compile+0xeb8>
    2b70:	b	37ac <sfbpf_compile+0xeb8>
    2b74:	b	37ac <sfbpf_compile+0xeb8>
    2b78:	b	37ac <sfbpf_compile+0xeb8>
    2b7c:	b	37ac <sfbpf_compile+0xeb8>
    2b80:	b	37ac <sfbpf_compile+0xeb8>
    2b84:	b	37ac <sfbpf_compile+0xeb8>
    2b88:	b	37ac <sfbpf_compile+0xeb8>
    2b8c:	b	37ac <sfbpf_compile+0xeb8>
    2b90:	b	37ac <sfbpf_compile+0xeb8>
    2b94:	b	37ac <sfbpf_compile+0xeb8>
    2b98:	b	37ac <sfbpf_compile+0xeb8>
    2b9c:	b	37ac <sfbpf_compile+0xeb8>
    2ba0:	b	37ac <sfbpf_compile+0xeb8>
    2ba4:	b	37ac <sfbpf_compile+0xeb8>
    2ba8:	b	37ac <sfbpf_compile+0xeb8>
    2bac:	b	37ac <sfbpf_compile+0xeb8>
    2bb0:	b	37ac <sfbpf_compile+0xeb8>
    2bb4:	b	37ac <sfbpf_compile+0xeb8>
    2bb8:	b	37ac <sfbpf_compile+0xeb8>
    2bbc:	b	37ac <sfbpf_compile+0xeb8>
    2bc0:	b	37ac <sfbpf_compile+0xeb8>
    2bc4:	b	37ac <sfbpf_compile+0xeb8>
    2bc8:	b	37ac <sfbpf_compile+0xeb8>
    2bcc:	b	37ac <sfbpf_compile+0xeb8>
    2bd0:	b	37ac <sfbpf_compile+0xeb8>
    2bd4:	b	37ac <sfbpf_compile+0xeb8>
    2bd8:	b	37ac <sfbpf_compile+0xeb8>
    2bdc:	b	328c <sfbpf_compile+0x998>
    2be0:	b	37ac <sfbpf_compile+0xeb8>
    2be4:	b	37ac <sfbpf_compile+0xeb8>
    2be8:	b	37ac <sfbpf_compile+0xeb8>
    2bec:	b	37ac <sfbpf_compile+0xeb8>
    2bf0:	b	2fbc <sfbpf_compile+0x6c8>
    2bf4:	b	3084 <sfbpf_compile+0x790>
    2bf8:	b	37ac <sfbpf_compile+0xeb8>
    2bfc:	b	31e0 <sfbpf_compile+0x8ec>
    2c00:	b	2f74 <sfbpf_compile+0x680>
    2c04:	b	2f98 <sfbpf_compile+0x6a4>
    2c08:	b	37ac <sfbpf_compile+0xeb8>
    2c0c:	b	37ac <sfbpf_compile+0xeb8>
    2c10:	b	37ac <sfbpf_compile+0xeb8>
    2c14:	b	3170 <sfbpf_compile+0x87c>
    2c18:	b	3198 <sfbpf_compile+0x8a4>
    2c1c:	b	37ac <sfbpf_compile+0xeb8>
    2c20:	b	37ac <sfbpf_compile+0xeb8>
    2c24:	b	37ac <sfbpf_compile+0xeb8>
    2c28:	b	37ac <sfbpf_compile+0xeb8>
    2c2c:	b	3084 <sfbpf_compile+0x790>
    2c30:	b	37ac <sfbpf_compile+0xeb8>
    2c34:	b	37ac <sfbpf_compile+0xeb8>
    2c38:	b	31b8 <sfbpf_compile+0x8c4>
    2c3c:	b	3100 <sfbpf_compile+0x80c>
    2c40:	b	37ac <sfbpf_compile+0xeb8>
    2c44:	b	37ac <sfbpf_compile+0xeb8>
    2c48:	b	37ac <sfbpf_compile+0xeb8>
    2c4c:	b	3084 <sfbpf_compile+0x790>
    2c50:	b	37ac <sfbpf_compile+0xeb8>
    2c54:	b	2ed0 <sfbpf_compile+0x5dc>
    2c58:	b	32b4 <sfbpf_compile+0x9c0>
    2c5c:	b	32b4 <sfbpf_compile+0x9c0>
    2c60:	b	33b0 <sfbpf_compile+0xabc>
    2c64:	b	3384 <sfbpf_compile+0xa90>
    2c68:	b	32b4 <sfbpf_compile+0x9c0>
    2c6c:	b	3304 <sfbpf_compile+0xa10>
    2c70:	b	33fc <sfbpf_compile+0xb08>
    2c74:	b	32dc <sfbpf_compile+0x9e8>
    2c78:	b	3224 <sfbpf_compile+0x930>
    2c7c:	b	34d0 <sfbpf_compile+0xbdc>
    2c80:	b	348c <sfbpf_compile+0xb98>
    2c84:	b	37ac <sfbpf_compile+0xeb8>
    2c88:	b	37ac <sfbpf_compile+0xeb8>
    2c8c:	b	326c <sfbpf_compile+0x978>
    2c90:	b	324c <sfbpf_compile+0x958>
    2c94:	b	37ac <sfbpf_compile+0xeb8>
    2c98:	b	37ac <sfbpf_compile+0xeb8>
    2c9c:	b	37ac <sfbpf_compile+0xeb8>
    2ca0:	b	37ac <sfbpf_compile+0xeb8>
    2ca4:	b	37ac <sfbpf_compile+0xeb8>
    2ca8:	b	37ac <sfbpf_compile+0xeb8>
    2cac:	b	37ac <sfbpf_compile+0xeb8>
    2cb0:	b	37ac <sfbpf_compile+0xeb8>
    2cb4:	b	37ac <sfbpf_compile+0xeb8>
    2cb8:	b	37ac <sfbpf_compile+0xeb8>
    2cbc:	b	37ac <sfbpf_compile+0xeb8>
    2cc0:	b	37ac <sfbpf_compile+0xeb8>
    2cc4:	b	37ac <sfbpf_compile+0xeb8>
    2cc8:	b	37ac <sfbpf_compile+0xeb8>
    2ccc:	b	37ac <sfbpf_compile+0xeb8>
    2cd0:	b	37ac <sfbpf_compile+0xeb8>
    2cd4:	b	37ac <sfbpf_compile+0xeb8>
    2cd8:	b	37ac <sfbpf_compile+0xeb8>
    2cdc:	b	3084 <sfbpf_compile+0x790>
    2ce0:	b	33d4 <sfbpf_compile+0xae0>
    2ce4:	b	37ac <sfbpf_compile+0xeb8>
    2ce8:	b	2fbc <sfbpf_compile+0x6c8>
    2cec:	b	332c <sfbpf_compile+0xa38>
    2cf0:	b	3358 <sfbpf_compile+0xa64>
    2cf4:	b	37ac <sfbpf_compile+0xeb8>
    2cf8:	b	37ac <sfbpf_compile+0xeb8>
    2cfc:	b	37ac <sfbpf_compile+0xeb8>
    2d00:	b	37ac <sfbpf_compile+0xeb8>
    2d04:	b	37ac <sfbpf_compile+0xeb8>
    2d08:	b	37ac <sfbpf_compile+0xeb8>
    2d0c:	b	37ac <sfbpf_compile+0xeb8>
    2d10:	b	37ac <sfbpf_compile+0xeb8>
    2d14:	b	3558 <sfbpf_compile+0xc64>
    2d18:	b	332c <sfbpf_compile+0xa38>
    2d1c:	b	32b4 <sfbpf_compile+0x9c0>
    2d20:	b	32b4 <sfbpf_compile+0x9c0>
    2d24:	b	32b4 <sfbpf_compile+0x9c0>
    2d28:	b	3200 <sfbpf_compile+0x90c>
    2d2c:	b	3420 <sfbpf_compile+0xb2c>
    2d30:	b	37ac <sfbpf_compile+0xeb8>
    2d34:	b	37ac <sfbpf_compile+0xeb8>
    2d38:	b	3578 <sfbpf_compile+0xc84>
    2d3c:	b	3598 <sfbpf_compile+0xca4>
    2d40:	b	37ac <sfbpf_compile+0xeb8>
    2d44:	b	35b8 <sfbpf_compile+0xcc4>
    2d48:	b	35d8 <sfbpf_compile+0xce4>
    2d4c:	b	35f8 <sfbpf_compile+0xd04>
    2d50:	b	30b0 <sfbpf_compile+0x7bc>
    2d54:	b	3618 <sfbpf_compile+0xd24>
    2d58:	b	3468 <sfbpf_compile+0xb74>
    2d5c:	b	3638 <sfbpf_compile+0xd44>
    2d60:	b	3658 <sfbpf_compile+0xd64>
    2d64:	b	3514 <sfbpf_compile+0xc20>
    2d68:	b	3678 <sfbpf_compile+0xd84>
    2d6c:	b	3698 <sfbpf_compile+0xda4>
    2d70:	b	3444 <sfbpf_compile+0xb50>
    2d74:	b	36b8 <sfbpf_compile+0xdc4>
    2d78:	b	36d8 <sfbpf_compile+0xde4>
    2d7c:	b	37ac <sfbpf_compile+0xeb8>
    2d80:	b	37ac <sfbpf_compile+0xeb8>
    2d84:	b	37ac <sfbpf_compile+0xeb8>
    2d88:	b	37ac <sfbpf_compile+0xeb8>
    2d8c:	b	37ac <sfbpf_compile+0xeb8>
    2d90:	b	37ac <sfbpf_compile+0xeb8>
    2d94:	b	37ac <sfbpf_compile+0xeb8>
    2d98:	b	37ac <sfbpf_compile+0xeb8>
    2d9c:	b	37ac <sfbpf_compile+0xeb8>
    2da0:	b	37ac <sfbpf_compile+0xeb8>
    2da4:	b	37ac <sfbpf_compile+0xeb8>
    2da8:	b	37ac <sfbpf_compile+0xeb8>
    2dac:	b	3700 <sfbpf_compile+0xe0c>
    2db0:	b	37ac <sfbpf_compile+0xeb8>
    2db4:	b	37ac <sfbpf_compile+0xeb8>
    2db8:	b	37ac <sfbpf_compile+0xeb8>
    2dbc:	b	3720 <sfbpf_compile+0xe2c>
    2dc0:	b	3740 <sfbpf_compile+0xe4c>
    2dc4:	b	37ac <sfbpf_compile+0xeb8>
    2dc8:	b	37ac <sfbpf_compile+0xeb8>
    2dcc:	b	37ac <sfbpf_compile+0xeb8>
    2dd0:	b	37ac <sfbpf_compile+0xeb8>
    2dd4:	b	37ac <sfbpf_compile+0xeb8>
    2dd8:	b	3780 <sfbpf_compile+0xe8c>
    2ddc:	b	3760 <sfbpf_compile+0xe6c>
    2de0:	b	3150 <sfbpf_compile+0x85c>
    2de4:	b	3150 <sfbpf_compile+0x85c>
    2de8:	ldr	ip, [pc, #2664]	; 3858 <sfbpf_compile+0xf64>
    2dec:	add	ip, pc, ip
    2df0:	add	ip, ip, #132	; 0x84
    2df4:	ldr	lr, [pc, #2656]	; 385c <sfbpf_compile+0xf68>
    2df8:	add	lr, pc, lr
    2dfc:	ldm	lr!, {r0, r1, r2, r3}
    2e00:	stmia	ip!, {r0, r1, r2, r3}
    2e04:	ldm	lr!, {r0, r1, r2, r3}
    2e08:	stmia	ip!, {r0, r1, r2, r3}
    2e0c:	ldr	r3, [lr]
    2e10:	strb	r3, [ip]
    2e14:	mvn	r4, #0
    2e18:	b	2994 <sfbpf_compile+0xa0>
    2e1c:	ldr	r0, [pc, #2620]	; 3860 <sfbpf_compile+0xf6c>
    2e20:	add	r0, pc, r0
    2e24:	b	29d0 <sfbpf_compile+0xdc>
    2e28:	ldr	r3, [pc, #2612]	; 3864 <sfbpf_compile+0xf70>
    2e2c:	add	r3, pc, r3
    2e30:	mov	r2, #2
    2e34:	str	r2, [r3, #944]	; 0x3b0
    2e38:	mov	r2, #6
    2e3c:	str	r2, [r3, #940]	; 0x3ac
    2e40:	mov	r2, #0
    2e44:	str	r2, [r3, #948]	; 0x3b4
    2e48:	str	r2, [r3, #952]	; 0x3b8
    2e4c:	bl	f5f8 <sfbpf_parse>
    2e50:	ldr	r3, [pc, #2532]	; 383c <sfbpf_compile+0xf48>
    2e54:	ldr	r2, [sp]
    2e58:	ldr	r3, [r2, r3]
    2e5c:	ldr	r4, [r3]
    2e60:	cmp	r4, #0
    2e64:	bne	37bc <sfbpf_compile+0xec8>
    2e68:	ldr	r3, [pc, #2552]	; 3868 <sfbpf_compile+0xf74>
    2e6c:	add	r3, pc, r3
    2e70:	ldr	r3, [r3, #868]	; 0x364
    2e74:	cmp	r3, #0
    2e78:	beq	37c8 <sfbpf_compile+0xed4>
    2e7c:	ldr	r3, [sp, #40]	; 0x28
    2e80:	cmp	r3, #0
    2e84:	beq	2ea0 <sfbpf_compile+0x5ac>
    2e88:	ldr	r3, [pc, #2472]	; 3838 <sfbpf_compile+0xf44>
    2e8c:	ldr	r2, [sp]
    2e90:	ldr	r3, [r2, r3]
    2e94:	ldr	r3, [r3]
    2e98:	cmp	r3, #0
    2e9c:	beq	37f4 <sfbpf_compile+0xf00>
    2ea0:	add	r1, sp, #16
    2ea4:	ldr	r3, [pc, #2496]	; 386c <sfbpf_compile+0xf78>
    2ea8:	add	r3, pc, r3
    2eac:	ldr	r0, [r3, #868]	; 0x364
    2eb0:	bl	f24c <sf_icode_to_fcode>
    2eb4:	ldr	r2, [sp, #12]
    2eb8:	str	r0, [r2, #4]
    2ebc:	ldr	r3, [sp, #16]
    2ec0:	str	r3, [r2]
    2ec4:	bl	12e30 <sf_lex_cleanup>
    2ec8:	bl	2264 <freechunks>
    2ecc:	b	2994 <sfbpf_compile+0xa0>
    2ed0:	ldr	r3, [pc, #2456]	; 3870 <sfbpf_compile+0xf7c>
    2ed4:	add	r3, pc, r3
    2ed8:	mov	r2, #4
    2edc:	str	r2, [r3, #944]	; 0x3b0
    2ee0:	mov	r2, #8
    2ee4:	str	r2, [r3, #940]	; 0x3ac
    2ee8:	mov	r2, #0
    2eec:	str	r2, [r3, #948]	; 0x3b4
    2ef0:	str	r2, [r3, #952]	; 0x3b8
    2ef4:	b	2e4c <sfbpf_compile+0x558>
    2ef8:	ldr	r3, [pc, #2420]	; 3874 <sfbpf_compile+0xf80>
    2efc:	add	r3, pc, r3
    2f00:	mov	r2, #12
    2f04:	str	r2, [r3, #944]	; 0x3b0
    2f08:	mov	r2, #14
    2f0c:	str	r2, [r3, #940]	; 0x3ac
    2f10:	mov	r2, #0
    2f14:	str	r2, [r3, #948]	; 0x3b4
    2f18:	mov	r2, #3
    2f1c:	str	r2, [r3, #952]	; 0x3b8
    2f20:	b	2e4c <sfbpf_compile+0x558>
    2f24:	ldr	r3, [pc, #2380]	; 3878 <sfbpf_compile+0xf84>
    2f28:	add	r3, pc, r3
    2f2c:	mvn	r2, #0
    2f30:	str	r2, [r3, #944]	; 0x3b0
    2f34:	mov	r2, #16
    2f38:	str	r2, [r3, #940]	; 0x3ac
    2f3c:	mov	r2, #0
    2f40:	str	r2, [r3, #948]	; 0x3b4
    2f44:	str	r2, [r3, #952]	; 0x3b8
    2f48:	b	2e4c <sfbpf_compile+0x558>
    2f4c:	ldr	r3, [pc, #2344]	; 387c <sfbpf_compile+0xf88>
    2f50:	add	r3, pc, r3
    2f54:	mvn	r2, #0
    2f58:	str	r2, [r3, #944]	; 0x3b0
    2f5c:	mov	r2, #24
    2f60:	str	r2, [r3, #940]	; 0x3ac
    2f64:	mov	r2, #0
    2f68:	str	r2, [r3, #948]	; 0x3b4
    2f6c:	str	r2, [r3, #952]	; 0x3b8
    2f70:	b	2e4c <sfbpf_compile+0x558>
    2f74:	ldr	r3, [pc, #2308]	; 3880 <sfbpf_compile+0xf8c>
    2f78:	add	r3, pc, r3
    2f7c:	mov	r2, #0
    2f80:	str	r2, [r3, #944]	; 0x3b0
    2f84:	mov	r1, #4
    2f88:	str	r1, [r3, #940]	; 0x3ac
    2f8c:	str	r2, [r3, #948]	; 0x3b4
    2f90:	str	r2, [r3, #952]	; 0x3b8
    2f94:	b	2e4c <sfbpf_compile+0x558>
    2f98:	ldr	r3, [pc, #2276]	; 3884 <sfbpf_compile+0xf90>
    2f9c:	add	r3, pc, r3
    2fa0:	mov	r2, #0
    2fa4:	str	r2, [r3, #944]	; 0x3b0
    2fa8:	mov	r1, #12
    2fac:	str	r1, [r3, #940]	; 0x3ac
    2fb0:	str	r2, [r3, #948]	; 0x3b4
    2fb4:	str	r2, [r3, #952]	; 0x3b8
    2fb8:	b	2e4c <sfbpf_compile+0x558>
    2fbc:	ldr	r3, [pc, #2244]	; 3888 <sfbpf_compile+0xf94>
    2fc0:	add	r3, pc, r3
    2fc4:	mov	r2, #2
    2fc8:	str	r2, [r3, #944]	; 0x3b0
    2fcc:	mov	r2, #4
    2fd0:	str	r2, [r3, #940]	; 0x3ac
    2fd4:	mov	r2, #0
    2fd8:	str	r2, [r3, #948]	; 0x3b4
    2fdc:	str	r2, [r3, #952]	; 0x3b8
    2fe0:	b	2e4c <sfbpf_compile+0x558>
    2fe4:	ldr	r3, [pc, #2208]	; 388c <sfbpf_compile+0xf98>
    2fe8:	add	r3, pc, r3
    2fec:	mov	r2, #6
    2ff0:	str	r2, [r3, #944]	; 0x3b0
    2ff4:	mov	r2, #8
    2ff8:	str	r2, [r3, #940]	; 0x3ac
    2ffc:	mov	r2, #0
    3000:	str	r2, [r3, #948]	; 0x3b4
    3004:	str	r2, [r3, #952]	; 0x3b8
    3008:	b	2e4c <sfbpf_compile+0x558>
    300c:	ldr	r3, [pc, #2172]	; 3890 <sfbpf_compile+0xf9c>
    3010:	add	r3, pc, r3
    3014:	mov	r2, #5
    3018:	str	r2, [r3, #944]	; 0x3b0
    301c:	mov	r2, #24
    3020:	str	r2, [r3, #940]	; 0x3ac
    3024:	mov	r2, #0
    3028:	str	r2, [r3, #948]	; 0x3b4
    302c:	str	r2, [r3, #952]	; 0x3b8
    3030:	b	2e4c <sfbpf_compile+0x558>
    3034:	ldr	r3, [pc, #2136]	; 3894 <sfbpf_compile+0xfa0>
    3038:	add	r3, pc, r3
    303c:	mov	r2, #13
    3040:	str	r2, [r3, #944]	; 0x3b0
    3044:	str	r2, [r3, #940]	; 0x3ac
    3048:	mov	r2, #8
    304c:	str	r2, [r3, #948]	; 0x3b4
    3050:	mov	r2, #3
    3054:	str	r2, [r3, #952]	; 0x3b8
    3058:	b	2e4c <sfbpf_compile+0x558>
    305c:	ldr	r3, [pc, #2100]	; 3898 <sfbpf_compile+0xfa4>
    3060:	add	r3, pc, r3
    3064:	mov	r2, #14
    3068:	str	r2, [r3, #944]	; 0x3b0
    306c:	str	r2, [r3, #940]	; 0x3ac
    3070:	mov	r2, #8
    3074:	str	r2, [r3, #948]	; 0x3b4
    3078:	mov	r2, #3
    307c:	str	r2, [r3, #952]	; 0x3b8
    3080:	b	2e4c <sfbpf_compile+0x558>
    3084:	ldr	r3, [pc, #2064]	; 389c <sfbpf_compile+0xfa8>
    3088:	add	r3, pc, r3
    308c:	mov	r2, #24
    3090:	str	r2, [r3, #944]	; 0x3b0
    3094:	mov	r2, #1
    3098:	str	r2, [r3, #860]	; 0x35c
    309c:	mov	r2, #8
    30a0:	str	r2, [r3, #948]	; 0x3b4
    30a4:	mov	r2, #3
    30a8:	str	r2, [r3, #952]	; 0x3b8
    30ac:	b	2e4c <sfbpf_compile+0x558>
    30b0:	ldr	r3, [pc, #2024]	; 38a0 <sfbpf_compile+0xfac>
    30b4:	add	r3, pc, r3
    30b8:	mov	r2, #24
    30bc:	str	r2, [r3, #944]	; 0x3b0
    30c0:	mov	r2, #1
    30c4:	str	r2, [r3, #860]	; 0x35c
    30c8:	mov	r2, #8
    30cc:	str	r2, [r3, #948]	; 0x3b4
    30d0:	mov	r2, #3
    30d4:	str	r2, [r3, #952]	; 0x3b8
    30d8:	b	2e4c <sfbpf_compile+0x558>
    30dc:	ldr	r3, [pc, #1984]	; 38a4 <sfbpf_compile+0xfb0>
    30e0:	add	r3, pc, r3
    30e4:	mov	r2, #0
    30e8:	str	r2, [r3, #944]	; 0x3b0
    30ec:	mov	r2, #8
    30f0:	str	r2, [r3, #948]	; 0x3b4
    30f4:	mov	r2, #3
    30f8:	str	r2, [r3, #952]	; 0x3b8
    30fc:	b	2e4c <sfbpf_compile+0x558>
    3100:	ldr	r3, [pc, #1952]	; 38a8 <sfbpf_compile+0xfb4>
    3104:	add	r3, pc, r3
    3108:	mov	r2, #1
    310c:	str	r2, [r3, #888]	; 0x378
    3110:	str	r2, [r3, #896]	; 0x380
    3114:	mov	r2, #2
    3118:	str	r2, [r3, #900]	; 0x384
    311c:	mov	r2, #0
    3120:	str	r2, [r3, #904]	; 0x388
    3124:	mvn	r2, #0
    3128:	str	r2, [r3, #884]	; 0x374
    312c:	mov	r2, #4
    3130:	str	r2, [r3, #908]	; 0x38c
    3134:	str	r2, [r3, #944]	; 0x3b0
    3138:	str	r2, [r3, #940]	; 0x3ac
    313c:	mov	r2, #8
    3140:	str	r2, [r3, #948]	; 0x3b4
    3144:	mov	r2, #3
    3148:	str	r2, [r3, #952]	; 0x3b8
    314c:	b	2e4c <sfbpf_compile+0x558>
    3150:	ldr	r3, [pc, #1876]	; 38ac <sfbpf_compile+0xfb8>
    3154:	add	r3, pc, r3
    3158:	mvn	r2, #0
    315c:	str	r2, [r3, #944]	; 0x3b0
    3160:	mov	r2, #0
    3164:	str	r2, [r3, #948]	; 0x3b4
    3168:	str	r2, [r3, #952]	; 0x3b8
    316c:	b	2e4c <sfbpf_compile+0x558>
    3170:	ldr	r3, [pc, #1848]	; 38b0 <sfbpf_compile+0xfbc>
    3174:	add	r3, pc, r3
    3178:	mov	r2, #14
    317c:	str	r2, [r3, #944]	; 0x3b0
    3180:	mov	r2, #16
    3184:	str	r2, [r3, #940]	; 0x3ac
    3188:	mov	r2, #0
    318c:	str	r2, [r3, #948]	; 0x3b4
    3190:	str	r2, [r3, #952]	; 0x3b8
    3194:	b	2e4c <sfbpf_compile+0x558>
    3198:	ldr	r3, [pc, #1812]	; 38b4 <sfbpf_compile+0xfc0>
    319c:	add	r3, pc, r3
    31a0:	mvn	r2, #0
    31a4:	str	r2, [r3, #944]	; 0x3b0
    31a8:	mov	r2, #0
    31ac:	str	r2, [r3, #948]	; 0x3b4
    31b0:	str	r2, [r3, #952]	; 0x3b8
    31b4:	b	2e4c <sfbpf_compile+0x558>
    31b8:	ldr	r3, [pc, #1784]	; 38b8 <sfbpf_compile+0xfc4>
    31bc:	add	r3, pc, r3
    31c0:	mov	r2, #16
    31c4:	str	r2, [r3, #944]	; 0x3b0
    31c8:	str	r2, [r3, #940]	; 0x3ac
    31cc:	mov	r2, #8
    31d0:	str	r2, [r3, #948]	; 0x3b4
    31d4:	mov	r2, #3
    31d8:	str	r2, [r3, #952]	; 0x3b8
    31dc:	b	2e4c <sfbpf_compile+0x558>
    31e0:	ldr	r3, [pc, #1748]	; 38bc <sfbpf_compile+0xfc8>
    31e4:	add	r3, pc, r3
    31e8:	mvn	r2, #0
    31ec:	str	r2, [r3, #944]	; 0x3b0
    31f0:	mov	r2, #0
    31f4:	str	r2, [r3, #948]	; 0x3b4
    31f8:	str	r2, [r3, #952]	; 0x3b8
    31fc:	b	2e4c <sfbpf_compile+0x558>
    3200:	ldr	r3, [pc, #1720]	; 38c0 <sfbpf_compile+0xfcc>
    3204:	add	r3, pc, r3
    3208:	mvn	r2, #0
    320c:	str	r2, [r3, #944]	; 0x3b0
    3210:	mov	r2, #4
    3214:	str	r2, [r3, #948]	; 0x3b4
    3218:	mov	r2, #0
    321c:	str	r2, [r3, #952]	; 0x3b8
    3220:	b	2e4c <sfbpf_compile+0x558>
    3224:	ldr	r3, [pc, #1688]	; 38c4 <sfbpf_compile+0xfd0>
    3228:	add	r3, pc, r3
    322c:	mov	r2, #16
    3230:	str	r2, [r3, #944]	; 0x3b0
    3234:	mov	r2, #18
    3238:	str	r2, [r3, #940]	; 0x3ac
    323c:	mov	r2, #0
    3240:	str	r2, [r3, #948]	; 0x3b4
    3244:	str	r2, [r3, #952]	; 0x3b8
    3248:	b	2e4c <sfbpf_compile+0x558>
    324c:	ldr	r3, [pc, #1652]	; 38c8 <sfbpf_compile+0xfd4>
    3250:	add	r3, pc, r3
    3254:	mvn	r2, #0
    3258:	str	r2, [r3, #944]	; 0x3b0
    325c:	str	r2, [r3, #940]	; 0x3ac
    3260:	str	r2, [r3, #948]	; 0x3b4
    3264:	str	r2, [r3, #952]	; 0x3b8
    3268:	b	2e4c <sfbpf_compile+0x558>
    326c:	ldr	r3, [pc, #1624]	; 38cc <sfbpf_compile+0xfd8>
    3270:	add	r3, pc, r3
    3274:	mvn	r2, #0
    3278:	str	r2, [r3, #944]	; 0x3b0
    327c:	str	r2, [r3, #940]	; 0x3ac
    3280:	str	r2, [r3, #948]	; 0x3b4
    3284:	str	r2, [r3, #952]	; 0x3b8
    3288:	b	2e4c <sfbpf_compile+0x558>
    328c:	ldr	r3, [pc, #1596]	; 38d0 <sfbpf_compile+0xfdc>
    3290:	add	r3, pc, r3
    3294:	mov	r2, #6
    3298:	str	r2, [r3, #944]	; 0x3b0
    329c:	mov	r2, #44	; 0x2c
    32a0:	str	r2, [r3, #940]	; 0x3ac
    32a4:	mov	r2, #0
    32a8:	str	r2, [r3, #948]	; 0x3b4
    32ac:	str	r2, [r3, #952]	; 0x3b8
    32b0:	b	2e4c <sfbpf_compile+0x558>
    32b4:	ldr	r3, [pc, #1560]	; 38d4 <sfbpf_compile+0xfe0>
    32b8:	add	r3, pc, r3
    32bc:	mov	r2, #4
    32c0:	str	r2, [r3, #944]	; 0x3b0
    32c4:	str	r2, [r3, #940]	; 0x3ac
    32c8:	mov	r2, #0
    32cc:	str	r2, [r3, #948]	; 0x3b4
    32d0:	mvn	r2, #0
    32d4:	str	r2, [r3, #952]	; 0x3b8
    32d8:	b	2e4c <sfbpf_compile+0x558>
    32dc:	ldr	r3, [pc, #1524]	; 38d8 <sfbpf_compile+0xfe4>
    32e0:	add	r3, pc, r3
    32e4:	mov	r2, #4
    32e8:	str	r2, [r3, #944]	; 0x3b0
    32ec:	str	r2, [r3, #940]	; 0x3ac
    32f0:	mov	r2, #0
    32f4:	str	r2, [r3, #948]	; 0x3b4
    32f8:	mov	r2, #10
    32fc:	str	r2, [r3, #952]	; 0x3b8
    3300:	b	2e4c <sfbpf_compile+0x558>
    3304:	ldr	r3, [pc, #1488]	; 38dc <sfbpf_compile+0xfe8>
    3308:	add	r3, pc, r3
    330c:	mov	r2, #8
    3310:	str	r2, [r3, #944]	; 0x3b0
    3314:	str	r2, [r3, #940]	; 0x3ac
    3318:	mov	r2, #0
    331c:	str	r2, [r3, #948]	; 0x3b4
    3320:	mov	r2, #10
    3324:	str	r2, [r3, #952]	; 0x3b8
    3328:	b	2e4c <sfbpf_compile+0x558>
    332c:	ldr	r3, [pc, #1452]	; 38e0 <sfbpf_compile+0xfec>
    3330:	add	r3, pc, r3
    3334:	mov	r2, #14
    3338:	str	r2, [r3, #940]	; 0x3ac
    333c:	mov	r2, #16
    3340:	str	r2, [r3, #944]	; 0x3b0
    3344:	mov	r2, #18
    3348:	str	r2, [r3, #948]	; 0x3b4
    334c:	mov	r2, #21
    3350:	str	r2, [r3, #952]	; 0x3b8
    3354:	b	2e4c <sfbpf_compile+0x558>
    3358:	ldr	r3, [pc, #1412]	; 38e4 <sfbpf_compile+0xff0>
    335c:	add	r3, pc, r3
    3360:	mov	r2, #4
    3364:	str	r2, [r3, #944]	; 0x3b0
    3368:	mov	r2, #6
    336c:	str	r2, [r3, #940]	; 0x3ac
    3370:	mov	r2, #0
    3374:	str	r2, [r3, #948]	; 0x3b4
    3378:	mvn	r2, #0
    337c:	str	r2, [r3, #952]	; 0x3b8
    3380:	b	2e4c <sfbpf_compile+0x558>
    3384:	ldr	r3, [pc, #1372]	; 38e8 <sfbpf_compile+0xff4>
    3388:	add	r3, pc, r3
    338c:	mov	r2, #6
    3390:	str	r2, [r3, #944]	; 0x3b0
    3394:	mov	r2, #12
    3398:	str	r2, [r3, #940]	; 0x3ac
    339c:	mov	r2, #0
    33a0:	str	r2, [r3, #948]	; 0x3b4
    33a4:	mvn	r2, #0
    33a8:	str	r2, [r3, #952]	; 0x3b8
    33ac:	b	2e4c <sfbpf_compile+0x558>
    33b0:	ldr	r3, [pc, #1332]	; 38ec <sfbpf_compile+0xff8>
    33b4:	add	r3, pc, r3
    33b8:	mov	r2, #6
    33bc:	str	r2, [r3, #944]	; 0x3b0
    33c0:	mvn	r2, #0
    33c4:	str	r2, [r3, #940]	; 0x3ac
    33c8:	str	r2, [r3, #948]	; 0x3b4
    33cc:	str	r2, [r3, #952]	; 0x3b8
    33d0:	b	2e4c <sfbpf_compile+0x558>
    33d4:	ldr	r3, [pc, #1300]	; 38f0 <sfbpf_compile+0xffc>
    33d8:	add	r3, pc, r3
    33dc:	mov	r2, #12
    33e0:	str	r2, [r3, #944]	; 0x3b0
    33e4:	str	r2, [r3, #940]	; 0x3ac
    33e8:	mov	r2, #0
    33ec:	str	r2, [r3, #948]	; 0x3b4
    33f0:	mvn	r2, #0
    33f4:	str	r2, [r3, #952]	; 0x3b8
    33f8:	b	2e4c <sfbpf_compile+0x558>
    33fc:	ldr	r3, [pc, #1264]	; 38f4 <sfbpf_compile+0x1000>
    3400:	add	r3, pc, r3
    3404:	mov	r2, #12
    3408:	str	r2, [r3, #944]	; 0x3b0
    340c:	mvn	r2, #0
    3410:	str	r2, [r3, #940]	; 0x3ac
    3414:	str	r2, [r3, #948]	; 0x3b4
    3418:	str	r2, [r3, #952]	; 0x3b8
    341c:	b	2e4c <sfbpf_compile+0x558>
    3420:	ldr	r3, [pc, #1232]	; 38f8 <sfbpf_compile+0x1004>
    3424:	add	r3, pc, r3
    3428:	mov	r2, #18
    342c:	str	r2, [r3, #944]	; 0x3b0
    3430:	mvn	r2, #0
    3434:	str	r2, [r3, #940]	; 0x3ac
    3438:	str	r2, [r3, #948]	; 0x3b4
    343c:	str	r2, [r3, #952]	; 0x3b8
    3440:	b	2e4c <sfbpf_compile+0x558>
    3444:	ldr	r3, [pc, #1200]	; 38fc <sfbpf_compile+0x1008>
    3448:	add	r3, pc, r3
    344c:	mov	r2, #18
    3450:	str	r2, [r3, #944]	; 0x3b0
    3454:	mvn	r2, #0
    3458:	str	r2, [r3, #940]	; 0x3ac
    345c:	str	r2, [r3, #948]	; 0x3b4
    3460:	str	r2, [r3, #952]	; 0x3b8
    3464:	b	2e4c <sfbpf_compile+0x558>
    3468:	ldr	r3, [pc, #1168]	; 3900 <sfbpf_compile+0x100c>
    346c:	add	r3, pc, r3
    3470:	mov	r2, #8
    3474:	str	r2, [r3, #944]	; 0x3b0
    3478:	mvn	r2, #0
    347c:	str	r2, [r3, #940]	; 0x3ac
    3480:	str	r2, [r3, #948]	; 0x3b4
    3484:	str	r2, [r3, #952]	; 0x3b8
    3488:	b	2e4c <sfbpf_compile+0x558>
    348c:	ldr	r3, [pc, #1136]	; 3904 <sfbpf_compile+0x1010>
    3490:	add	r3, pc, r3
    3494:	mov	r2, #2
    3498:	str	r2, [r3, #916]	; 0x394
    349c:	mov	r2, #3
    34a0:	str	r2, [r3, #920]	; 0x398
    34a4:	mov	r2, #4
    34a8:	str	r2, [r3, #924]	; 0x39c
    34ac:	str	r2, [r3, #928]	; 0x3a0
    34b0:	mov	r2, #7
    34b4:	str	r2, [r3, #932]	; 0x3a4
    34b8:	mvn	r2, #0
    34bc:	str	r2, [r3, #944]	; 0x3b0
    34c0:	str	r2, [r3, #940]	; 0x3ac
    34c4:	str	r2, [r3, #948]	; 0x3b4
    34c8:	str	r2, [r3, #952]	; 0x3b8
    34cc:	b	2e4c <sfbpf_compile+0x558>
    34d0:	ldr	r3, [pc, #1072]	; 3908 <sfbpf_compile+0x1014>
    34d4:	add	r3, pc, r3
    34d8:	mov	r2, #6
    34dc:	str	r2, [r3, #916]	; 0x394
    34e0:	mov	r2, #7
    34e4:	str	r2, [r3, #920]	; 0x398
    34e8:	mov	r2, #8
    34ec:	str	r2, [r3, #924]	; 0x39c
    34f0:	str	r2, [r3, #928]	; 0x3a0
    34f4:	mov	r2, #11
    34f8:	str	r2, [r3, #932]	; 0x3a4
    34fc:	mvn	r2, #0
    3500:	str	r2, [r3, #944]	; 0x3b0
    3504:	str	r2, [r3, #940]	; 0x3ac
    3508:	str	r2, [r3, #948]	; 0x3b4
    350c:	str	r2, [r3, #952]	; 0x3b8
    3510:	b	2e4c <sfbpf_compile+0x558>
    3514:	ldr	r3, [pc, #1008]	; 390c <sfbpf_compile+0x1018>
    3518:	add	r3, pc, r3
    351c:	mov	r2, #22
    3520:	str	r2, [r3, #916]	; 0x394
    3524:	mov	r2, #23
    3528:	str	r2, [r3, #920]	; 0x398
    352c:	mov	r2, #24
    3530:	str	r2, [r3, #924]	; 0x39c
    3534:	str	r2, [r3, #928]	; 0x3a0
    3538:	mov	r2, #27
    353c:	str	r2, [r3, #932]	; 0x3a4
    3540:	mvn	r2, #0
    3544:	str	r2, [r3, #944]	; 0x3b0
    3548:	str	r2, [r3, #940]	; 0x3ac
    354c:	str	r2, [r3, #948]	; 0x3b4
    3550:	str	r2, [r3, #952]	; 0x3b8
    3554:	b	2e4c <sfbpf_compile+0x558>
    3558:	ldr	r3, [pc, #944]	; 3910 <sfbpf_compile+0x101c>
    355c:	add	r3, pc, r3
    3560:	mvn	r2, #0
    3564:	str	r2, [r3, #944]	; 0x3b0
    3568:	str	r2, [r3, #940]	; 0x3ac
    356c:	str	r2, [r3, #948]	; 0x3b4
    3570:	str	r2, [r3, #952]	; 0x3b8
    3574:	b	2e4c <sfbpf_compile+0x558>
    3578:	ldr	r3, [pc, #916]	; 3914 <sfbpf_compile+0x1020>
    357c:	add	r3, pc, r3
    3580:	mvn	r2, #0
    3584:	str	r2, [r3, #944]	; 0x3b0
    3588:	str	r2, [r3, #940]	; 0x3ac
    358c:	str	r2, [r3, #948]	; 0x3b4
    3590:	str	r2, [r3, #952]	; 0x3b8
    3594:	b	2e4c <sfbpf_compile+0x558>
    3598:	ldr	r3, [pc, #888]	; 3918 <sfbpf_compile+0x1024>
    359c:	add	r3, pc, r3
    35a0:	mvn	r2, #0
    35a4:	str	r2, [r3, #944]	; 0x3b0
    35a8:	str	r2, [r3, #940]	; 0x3ac
    35ac:	str	r2, [r3, #948]	; 0x3b4
    35b0:	str	r2, [r3, #952]	; 0x3b8
    35b4:	b	2e4c <sfbpf_compile+0x558>
    35b8:	ldr	r3, [pc, #860]	; 391c <sfbpf_compile+0x1028>
    35bc:	add	r3, pc, r3
    35c0:	mvn	r2, #0
    35c4:	str	r2, [r3, #944]	; 0x3b0
    35c8:	str	r2, [r3, #940]	; 0x3ac
    35cc:	str	r2, [r3, #948]	; 0x3b4
    35d0:	str	r2, [r3, #952]	; 0x3b8
    35d4:	b	2e4c <sfbpf_compile+0x558>
    35d8:	ldr	r3, [pc, #832]	; 3920 <sfbpf_compile+0x102c>
    35dc:	add	r3, pc, r3
    35e0:	mvn	r2, #0
    35e4:	str	r2, [r3, #944]	; 0x3b0
    35e8:	str	r2, [r3, #940]	; 0x3ac
    35ec:	str	r2, [r3, #948]	; 0x3b4
    35f0:	str	r2, [r3, #952]	; 0x3b8
    35f4:	b	2e4c <sfbpf_compile+0x558>
    35f8:	ldr	r3, [pc, #804]	; 3924 <sfbpf_compile+0x1030>
    35fc:	add	r3, pc, r3
    3600:	mvn	r2, #0
    3604:	str	r2, [r3, #944]	; 0x3b0
    3608:	str	r2, [r3, #940]	; 0x3ac
    360c:	str	r2, [r3, #948]	; 0x3b4
    3610:	str	r2, [r3, #952]	; 0x3b8
    3614:	b	2e4c <sfbpf_compile+0x558>
    3618:	ldr	r3, [pc, #776]	; 3928 <sfbpf_compile+0x1034>
    361c:	add	r3, pc, r3
    3620:	mvn	r2, #0
    3624:	str	r2, [r3, #944]	; 0x3b0
    3628:	str	r2, [r3, #940]	; 0x3ac
    362c:	str	r2, [r3, #948]	; 0x3b4
    3630:	str	r2, [r3, #952]	; 0x3b8
    3634:	b	2e4c <sfbpf_compile+0x558>
    3638:	ldr	r3, [pc, #748]	; 392c <sfbpf_compile+0x1038>
    363c:	add	r3, pc, r3
    3640:	mvn	r2, #0
    3644:	str	r2, [r3, #944]	; 0x3b0
    3648:	str	r2, [r3, #940]	; 0x3ac
    364c:	str	r2, [r3, #948]	; 0x3b4
    3650:	str	r2, [r3, #952]	; 0x3b8
    3654:	b	2e4c <sfbpf_compile+0x558>
    3658:	ldr	r3, [pc, #720]	; 3930 <sfbpf_compile+0x103c>
    365c:	add	r3, pc, r3
    3660:	mvn	r2, #0
    3664:	str	r2, [r3, #944]	; 0x3b0
    3668:	str	r2, [r3, #940]	; 0x3ac
    366c:	str	r2, [r3, #948]	; 0x3b4
    3670:	str	r2, [r3, #952]	; 0x3b8
    3674:	b	2e4c <sfbpf_compile+0x558>
    3678:	ldr	r3, [pc, #692]	; 3934 <sfbpf_compile+0x1040>
    367c:	add	r3, pc, r3
    3680:	mvn	r2, #0
    3684:	str	r2, [r3, #944]	; 0x3b0
    3688:	str	r2, [r3, #940]	; 0x3ac
    368c:	str	r2, [r3, #948]	; 0x3b4
    3690:	str	r2, [r3, #952]	; 0x3b8
    3694:	b	2e4c <sfbpf_compile+0x558>
    3698:	ldr	r3, [pc, #664]	; 3938 <sfbpf_compile+0x1044>
    369c:	add	r3, pc, r3
    36a0:	mvn	r2, #0
    36a4:	str	r2, [r3, #944]	; 0x3b0
    36a8:	str	r2, [r3, #940]	; 0x3ac
    36ac:	str	r2, [r3, #948]	; 0x3b4
    36b0:	str	r2, [r3, #952]	; 0x3b8
    36b4:	b	2e4c <sfbpf_compile+0x558>
    36b8:	ldr	r3, [pc, #636]	; 393c <sfbpf_compile+0x1048>
    36bc:	add	r3, pc, r3
    36c0:	mvn	r2, #0
    36c4:	str	r2, [r3, #944]	; 0x3b0
    36c8:	str	r2, [r3, #940]	; 0x3ac
    36cc:	str	r2, [r3, #948]	; 0x3b4
    36d0:	str	r2, [r3, #952]	; 0x3b8
    36d4:	b	2e4c <sfbpf_compile+0x558>
    36d8:	ldr	r3, [pc, #608]	; 3940 <sfbpf_compile+0x104c>
    36dc:	add	r3, pc, r3
    36e0:	mvn	r2, #0
    36e4:	str	r2, [r3, #944]	; 0x3b0
    36e8:	str	r2, [r3, #940]	; 0x3ac
    36ec:	str	r2, [r3, #948]	; 0x3b4
    36f0:	str	r2, [r3, #952]	; 0x3b8
    36f4:	mov	r2, #1
    36f8:	str	r2, [r3, #884]	; 0x374
    36fc:	b	2e4c <sfbpf_compile+0x558>
    3700:	ldr	r3, [pc, #572]	; 3944 <sfbpf_compile+0x1050>
    3704:	add	r3, pc, r3
    3708:	mvn	r2, #0
    370c:	str	r2, [r3, #944]	; 0x3b0
    3710:	str	r2, [r3, #940]	; 0x3ac
    3714:	str	r2, [r3, #948]	; 0x3b4
    3718:	str	r2, [r3, #952]	; 0x3b8
    371c:	b	2e4c <sfbpf_compile+0x558>
    3720:	ldr	r3, [pc, #544]	; 3948 <sfbpf_compile+0x1054>
    3724:	add	r3, pc, r3
    3728:	mvn	r2, #0
    372c:	str	r2, [r3, #944]	; 0x3b0
    3730:	str	r2, [r3, #940]	; 0x3ac
    3734:	str	r2, [r3, #948]	; 0x3b4
    3738:	str	r2, [r3, #952]	; 0x3b8
    373c:	b	2e4c <sfbpf_compile+0x558>
    3740:	ldr	r3, [pc, #516]	; 394c <sfbpf_compile+0x1058>
    3744:	add	r3, pc, r3
    3748:	mvn	r2, #0
    374c:	str	r2, [r3, #944]	; 0x3b0
    3750:	str	r2, [r3, #940]	; 0x3ac
    3754:	str	r2, [r3, #948]	; 0x3b4
    3758:	str	r2, [r3, #952]	; 0x3b8
    375c:	b	2e4c <sfbpf_compile+0x558>
    3760:	ldr	r3, [pc, #488]	; 3950 <sfbpf_compile+0x105c>
    3764:	add	r3, pc, r3
    3768:	mvn	r2, #0
    376c:	str	r2, [r3, #944]	; 0x3b0
    3770:	str	r2, [r3, #940]	; 0x3ac
    3774:	str	r2, [r3, #948]	; 0x3b4
    3778:	str	r2, [r3, #952]	; 0x3b8
    377c:	b	2e4c <sfbpf_compile+0x558>
    3780:	ldr	r3, [pc, #460]	; 3954 <sfbpf_compile+0x1060>
    3784:	add	r3, pc, r3
    3788:	mov	r2, #1
    378c:	str	r2, [r3, #944]	; 0x3b0
    3790:	mov	r2, #24
    3794:	str	r2, [r3, #940]	; 0x3ac
    3798:	mov	r2, #0
    379c:	str	r2, [r3, #948]	; 0x3b4
    37a0:	mvn	r2, #0
    37a4:	str	r2, [r3, #952]	; 0x3b8
    37a8:	b	2e4c <sfbpf_compile+0x558>
    37ac:	ldr	r1, [sp, #8]
    37b0:	ldr	r0, [pc, #416]	; 3958 <sfbpf_compile+0x1064>
    37b4:	add	r0, pc, r0
    37b8:	bl	22b4 <sf_bpf_error>
    37bc:	ldr	r0, [pc, #408]	; 395c <sfbpf_compile+0x1068>
    37c0:	add	r0, pc, r0
    37c4:	bl	22b4 <sf_bpf_error>
    37c8:	ldr	r5, [pc, #400]	; 3960 <sfbpf_compile+0x106c>
    37cc:	add	r5, pc, r5
    37d0:	ldr	r6, [r5, #880]	; 0x370
    37d4:	mov	r0, #208	; 0xd0
    37d8:	bl	22f0 <newchunk>
    37dc:	mov	r3, #6
    37e0:	str	r3, [r0, #8]
    37e4:	str	r0, [r0, #96]	; 0x60
    37e8:	str	r6, [r0, #20]
    37ec:	str	r0, [r5, #868]	; 0x364
    37f0:	b	2e7c <sfbpf_compile+0x588>
    37f4:	ldr	r5, [pc, #360]	; 3964 <sfbpf_compile+0x1070>
    37f8:	add	r5, pc, r5
    37fc:	add	r0, r5, #868	; 0x364
    3800:	bl	eb18 <sf_bpf_optimize>
    3804:	ldr	r3, [r5, #868]	; 0x364
    3808:	cmp	r3, #0
    380c:	beq	3828 <sfbpf_compile+0xf34>
    3810:	ldr	r2, [r3, #8]
    3814:	cmp	r2, #6
    3818:	bne	2ea0 <sfbpf_compile+0x5ac>
    381c:	ldr	r3, [r3, #20]
    3820:	cmp	r3, #0
    3824:	bne	2ea0 <sfbpf_compile+0x5ac>
    3828:	ldr	r0, [pc, #312]	; 3968 <sfbpf_compile+0x1074>
    382c:	add	r0, pc, r0
    3830:	bl	22b4 <sf_bpf_error>
    3834:	.word	0x0002e6ec
    3838:	.word	0x00000104
    383c:	.word	0x000000d8
    3840:	.word	0x0002ea30
    3844:	.word	0x0002ea04
    3848:	.word	0x0002e9e8
    384c:	.word	0x0002e9c4
    3850:	.word	0x0002e990
    3854:	.word	0x0002e848
    3858:	.word	0x0002e57c
    385c:	.word	0x00010584
    3860:	.word	0x00010394
    3864:	.word	0x0002e53c
    3868:	.word	0x0002e4fc
    386c:	.word	0x0002e4c0
    3870:	.word	0x0002e494
    3874:	.word	0x0002e46c
    3878:	.word	0x0002e440
    387c:	.word	0x0002e418
    3880:	.word	0x0002e3f0
    3884:	.word	0x0002e3cc
    3888:	.word	0x0002e3a8
    388c:	.word	0x0002e380
    3890:	.word	0x0002e358
    3894:	.word	0x0002e330
    3898:	.word	0x0002e308
    389c:	.word	0x0002e2e0
    38a0:	.word	0x0002e2b4
    38a4:	.word	0x0002e288
    38a8:	.word	0x0002e264
    38ac:	.word	0x0002e214
    38b0:	.word	0x0002e1f4
    38b4:	.word	0x0002e1cc
    38b8:	.word	0x0002e1ac
    38bc:	.word	0x0002e184
    38c0:	.word	0x0002e164
    38c4:	.word	0x0002e140
    38c8:	.word	0x0002e118
    38cc:	.word	0x0002e0f8
    38d0:	.word	0x0002e0d8
    38d4:	.word	0x0002e0b0
    38d8:	.word	0x0002e088
    38dc:	.word	0x0002e060
    38e0:	.word	0x0002e038
    38e4:	.word	0x0002e00c
    38e8:	.word	0x0002dfe0
    38ec:	.word	0x0002dfb4
    38f0:	.word	0x0002df90
    38f4:	.word	0x0002df68
    38f8:	.word	0x0002df44
    38fc:	.word	0x0002df20
    3900:	.word	0x0002defc
    3904:	.word	0x0002ded8
    3908:	.word	0x0002de94
    390c:	.word	0x0002de50
    3910:	.word	0x0002de0c
    3914:	.word	0x0002ddec
    3918:	.word	0x0002ddcc
    391c:	.word	0x0002ddac
    3920:	.word	0x0002dd8c
    3924:	.word	0x0002dd6c
    3928:	.word	0x0002dd4c
    392c:	.word	0x0002dd2c
    3930:	.word	0x0002dd0c
    3934:	.word	0x0002dcec
    3938:	.word	0x0002dccc
    393c:	.word	0x0002dcac
    3940:	.word	0x0002dc8c
    3944:	.word	0x0002dc64
    3948:	.word	0x0002dc44
    394c:	.word	0x0002dc24
    3950:	.word	0x0002dc04
    3954:	.word	0x0002dbe4
    3958:	.word	0x0000fbec
    395c:	.word	0x0000fbfc
    3960:	.word	0x0002db9c
    3964:	.word	0x0002db70
    3968:	.word	0x0000fbb4

0000396c <sfbpf_freecode>:
    396c:	mov	r3, #0
    3970:	str	r3, [r0]
    3974:	ldr	r3, [r0, #4]
    3978:	cmp	r3, #0
    397c:	bxeq	lr
    3980:	push	{r4, lr}
    3984:	mov	r4, r0
    3988:	mov	r0, r3
    398c:	bl	da4 <free@plt>
    3990:	mov	r3, #0
    3994:	str	r3, [r4, #4]
    3998:	pop	{r4, pc}

0000399c <sf_gen_and>:
    399c:	push	{r4, r5, lr}
    39a0:	sub	sp, sp, #12
    39a4:	mov	r5, r0
    39a8:	mov	r4, r1
    39ac:	ldr	r1, [r1, #96]	; 0x60
    39b0:	bl	218c <backpatch>
    39b4:	ldr	r3, [r5, #44]	; 0x2c
    39b8:	clz	r3, r3
    39bc:	lsr	r3, r3, #5
    39c0:	str	r3, [r5, #44]	; 0x2c
    39c4:	ldr	r3, [r4, #44]	; 0x2c
    39c8:	clz	r3, r3
    39cc:	lsr	r3, r3, #5
    39d0:	str	r3, [r4, #44]	; 0x2c
    39d4:	add	r2, sp, #8
    39d8:	str	r4, [r2, #-4]!
    39dc:	b	39f0 <sf_gen_and+0x54>
    39e0:	ldr	r2, [r3, #44]	; 0x2c
    39e4:	cmp	r2, #0
    39e8:	addeq	r2, r3, #60	; 0x3c
    39ec:	addne	r2, r3, #84	; 0x54
    39f0:	ldr	r3, [r2]
    39f4:	cmp	r3, #0
    39f8:	bne	39e0 <sf_gen_and+0x44>
    39fc:	str	r5, [r2]
    3a00:	ldr	r3, [r4, #44]	; 0x2c
    3a04:	clz	r3, r3
    3a08:	lsr	r3, r3, #5
    3a0c:	str	r3, [r4, #44]	; 0x2c
    3a10:	ldr	r3, [r5, #96]	; 0x60
    3a14:	str	r3, [r4, #96]	; 0x60
    3a18:	add	sp, sp, #12
    3a1c:	pop	{r4, r5, pc}

00003a20 <sf_gen_or>:
    3a20:	push	{r4, r5, lr}
    3a24:	sub	sp, sp, #12
    3a28:	mov	r4, r0
    3a2c:	mov	r5, r1
    3a30:	ldr	r3, [r0, #44]	; 0x2c
    3a34:	clz	r3, r3
    3a38:	lsr	r3, r3, #5
    3a3c:	str	r3, [r0, #44]	; 0x2c
    3a40:	ldr	r1, [r1, #96]	; 0x60
    3a44:	bl	218c <backpatch>
    3a48:	ldr	r3, [r4, #44]	; 0x2c
    3a4c:	clz	r3, r3
    3a50:	lsr	r3, r3, #5
    3a54:	str	r3, [r4, #44]	; 0x2c
    3a58:	add	r2, sp, #8
    3a5c:	str	r5, [r2, #-4]!
    3a60:	b	3a74 <sf_gen_or+0x54>
    3a64:	ldr	r2, [r3, #44]	; 0x2c
    3a68:	cmp	r2, #0
    3a6c:	addeq	r2, r3, #60	; 0x3c
    3a70:	addne	r2, r3, #84	; 0x54
    3a74:	ldr	r3, [r2]
    3a78:	cmp	r3, #0
    3a7c:	bne	3a64 <sf_gen_or+0x44>
    3a80:	str	r4, [r2]
    3a84:	ldr	r3, [r4, #96]	; 0x60
    3a88:	str	r3, [r5, #96]	; 0x60
    3a8c:	add	sp, sp, #12
    3a90:	pop	{r4, r5, pc}

00003a94 <sf_gen_not>:
    3a94:	ldr	r3, [r0, #44]	; 0x2c
    3a98:	clz	r3, r3
    3a9c:	lsr	r3, r3, #5
    3aa0:	str	r3, [r0, #44]	; 0x2c
    3aa4:	bx	lr

00003aa8 <sf_append>:
    3aa8:	b	3ab0 <sf_append+0x8>
    3aac:	mov	r0, r3
    3ab0:	ldr	r3, [r0, #16]
    3ab4:	cmp	r3, #0
    3ab8:	bne	3aac <sf_append+0x4>
    3abc:	str	r1, [r0, #16]
    3ac0:	bx	lr

00003ac4 <sf_finish_parse>:
    3ac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3ac8:	sub	sp, sp, #12
    3acc:	mov	r5, r0
    3ad0:	ldr	r7, [pc, #2228]	; 438c <sf_finish_parse+0x8c8>
    3ad4:	add	r7, pc, r7
    3ad8:	ldr	fp, [r0, #96]	; 0x60
    3adc:	ldr	r3, [pc, #2220]	; 4390 <sf_finish_parse+0x8cc>
    3ae0:	add	r3, pc, r3
    3ae4:	ldr	r6, [r3, #852]	; 0x354
    3ae8:	cmp	r6, #127	; 0x7f
    3aec:	beq	4050 <sf_finish_parse+0x58c>
    3af0:	ble	3bf4 <sf_finish_parse+0x130>
    3af4:	cmp	r6, #163	; 0xa3
    3af8:	beq	3fe0 <sf_finish_parse+0x51c>
    3afc:	cmp	r6, #192	; 0xc0
    3b00:	bne	4140 <sf_finish_parse+0x67c>
    3b04:	ldr	r3, [pc, #2184]	; 4394 <sf_finish_parse+0x8d0>
    3b08:	add	r3, pc, r3
    3b0c:	ldr	r9, [r3, #856]	; 0x358
    3b10:	cmn	r9, #1
    3b14:	beq	4384 <sf_finish_parse+0x8c0>
    3b18:	mov	r0, #20
    3b1c:	bl	22f0 <newchunk>
    3b20:	mov	r4, r0
    3b24:	mov	sl, #48	; 0x30
    3b28:	str	sl, [r0]
    3b2c:	mov	r3, #3
    3b30:	str	r3, [r0, #12]
    3b34:	mov	r0, #20
    3b38:	bl	22f0 <newchunk>
    3b3c:	mov	r8, r0
    3b40:	mov	r3, #100	; 0x64
    3b44:	str	r3, [r0]
    3b48:	mov	r1, r0
    3b4c:	mov	r0, r4
    3b50:	bl	3aa8 <sf_append>
    3b54:	mov	r3, #8
    3b58:	str	r3, [r8, #12]
    3b5c:	mov	r0, #20
    3b60:	bl	22f0 <newchunk>
    3b64:	mov	r1, r0
    3b68:	mov	r8, #7
    3b6c:	str	r8, [r0]
    3b70:	mov	r0, r4
    3b74:	bl	3aa8 <sf_append>
    3b78:	mov	r0, #20
    3b7c:	bl	22f0 <newchunk>
    3b80:	str	sl, [r0]
    3b84:	str	r0, [sp, #4]
    3b88:	mov	r1, r0
    3b8c:	mov	r0, r4
    3b90:	bl	3aa8 <sf_append>
    3b94:	mov	sl, #2
    3b98:	ldr	r3, [sp, #4]
    3b9c:	str	sl, [r3, #12]
    3ba0:	mov	r0, #20
    3ba4:	bl	22f0 <newchunk>
    3ba8:	mov	r1, r0
    3bac:	mov	r3, #76	; 0x4c
    3bb0:	str	r3, [r0]
    3bb4:	mov	r0, r4
    3bb8:	bl	3aa8 <sf_append>
    3bbc:	mov	r0, #20
    3bc0:	bl	22f0 <newchunk>
    3bc4:	mov	r1, r0
    3bc8:	str	sl, [r0]
    3bcc:	str	r9, [r0, #12]
    3bd0:	mov	r0, r4
    3bd4:	bl	3aa8 <sf_append>
    3bd8:	mov	r0, #20
    3bdc:	bl	22f0 <newchunk>
    3be0:	mov	r1, r0
    3be4:	str	r8, [r0]
    3be8:	mov	r0, r4
    3bec:	bl	3aa8 <sf_append>
    3bf0:	b	3d50 <sf_finish_parse+0x28c>
    3bf4:	cmp	r6, #119	; 0x77
    3bf8:	bne	4140 <sf_finish_parse+0x67c>
    3bfc:	ldr	r3, [pc, #1940]	; 4398 <sf_finish_parse+0x8d4>
    3c00:	ldr	r3, [r7, r3]
    3c04:	mov	r2, #1
    3c08:	str	r2, [r3]
    3c0c:	ldr	r3, [pc, #1928]	; 439c <sf_finish_parse+0x8d8>
    3c10:	add	r3, pc, r3
    3c14:	ldr	r3, [r3, #856]	; 0x358
    3c18:	str	r3, [sp, #4]
    3c1c:	cmn	r3, #1
    3c20:	beq	436c <sf_finish_parse+0x8a8>
    3c24:	mov	r0, #20
    3c28:	bl	22f0 <newchunk>
    3c2c:	mov	r4, r0
    3c30:	mov	sl, #32
    3c34:	str	sl, [r0]
    3c38:	mov	r2, #0
    3c3c:	str	r2, [r0, #12]
    3c40:	mov	r0, #20
    3c44:	bl	22f0 <newchunk>
    3c48:	mov	r1, r0
    3c4c:	mov	r3, #84	; 0x54
    3c50:	str	r3, [r0]
    3c54:	ldr	r3, [pc, #1860]	; 43a0 <sf_finish_parse+0x8dc>
    3c58:	str	r3, [r0, #12]
    3c5c:	mov	r0, r4
    3c60:	bl	3aa8 <sf_append>
    3c64:	mov	r0, #20
    3c68:	bl	22f0 <newchunk>
    3c6c:	mov	r8, r0
    3c70:	mov	r3, #21
    3c74:	str	r3, [r0]
    3c78:	ldr	r3, [pc, #1828]	; 43a4 <sf_finish_parse+0x8e0>
    3c7c:	str	r3, [r0, #12]
    3c80:	mov	r1, r0
    3c84:	mov	r0, r4
    3c88:	bl	3aa8 <sf_append>
    3c8c:	mov	r0, #20
    3c90:	bl	22f0 <newchunk>
    3c94:	mov	r9, r0
    3c98:	str	sl, [r0]
    3c9c:	mov	r3, #4
    3ca0:	str	r3, [r0, #12]
    3ca4:	mov	r1, r0
    3ca8:	mov	r0, r4
    3cac:	bl	3aa8 <sf_append>
    3cb0:	str	r9, [r8, #4]
    3cb4:	mov	r0, #20
    3cb8:	bl	22f0 <newchunk>
    3cbc:	mov	r9, r0
    3cc0:	mov	r3, #5
    3cc4:	str	r3, [r0]
    3cc8:	mov	r3, #1
    3ccc:	str	r3, [r0, #12]
    3cd0:	mov	r1, r0
    3cd4:	mov	r0, r4
    3cd8:	bl	3aa8 <sf_append>
    3cdc:	mov	r0, #20
    3ce0:	bl	22f0 <newchunk>
    3ce4:	mov	sl, r0
    3ce8:	mov	r2, #0
    3cec:	str	r2, [r0]
    3cf0:	mov	r3, #144	; 0x90
    3cf4:	str	r3, [r0, #12]
    3cf8:	mov	r1, r0
    3cfc:	mov	r0, r4
    3d00:	bl	3aa8 <sf_append>
    3d04:	str	sl, [r8, #8]
    3d08:	mov	r0, #20
    3d0c:	bl	22f0 <newchunk>
    3d10:	mov	r8, r0
    3d14:	mov	r3, #2
    3d18:	str	r3, [r0]
    3d1c:	ldr	r3, [sp, #4]
    3d20:	str	r3, [r0, #12]
    3d24:	mov	r1, r0
    3d28:	mov	r0, r4
    3d2c:	bl	3aa8 <sf_append>
    3d30:	str	r8, [r9, #8]
    3d34:	mov	r0, #20
    3d38:	bl	22f0 <newchunk>
    3d3c:	mov	r1, r0
    3d40:	mov	r3, #7
    3d44:	str	r3, [r0]
    3d48:	mov	r0, r4
    3d4c:	bl	3aa8 <sf_append>
    3d50:	ldr	r3, [pc, #1616]	; 43a8 <sf_finish_parse+0x8e4>
    3d54:	add	r3, pc, r3
    3d58:	ldr	sl, [r3, #864]	; 0x360
    3d5c:	cmn	sl, #1
    3d60:	beq	3f00 <sf_finish_parse+0x43c>
    3d64:	ldr	r9, [fp, #4]
    3d68:	ldr	r3, [pc, #1576]	; 4398 <sf_finish_parse+0x8d4>
    3d6c:	ldr	r3, [r7, r3]
    3d70:	mov	r2, #1
    3d74:	str	r2, [r3]
    3d78:	cmp	r4, #0
    3d7c:	beq	417c <sf_finish_parse+0x6b8>
    3d80:	mov	r0, #20
    3d84:	bl	22f0 <newchunk>
    3d88:	mov	r1, r0
    3d8c:	mov	r3, #135	; 0x87
    3d90:	str	r3, [r0]
    3d94:	mov	r0, r4
    3d98:	bl	3aa8 <sf_append>
    3d9c:	mov	r0, #20
    3da0:	bl	22f0 <newchunk>
    3da4:	mov	r1, r0
    3da8:	mov	r3, #4
    3dac:	str	r3, [r0]
    3db0:	mov	r3, #24
    3db4:	str	r3, [r0, #12]
    3db8:	mov	r0, r4
    3dbc:	bl	3aa8 <sf_append>
    3dc0:	mov	r0, #20
    3dc4:	bl	22f0 <newchunk>
    3dc8:	mov	r1, r0
    3dcc:	mov	r3, #2
    3dd0:	str	r3, [r0]
    3dd4:	str	sl, [r0, #12]
    3dd8:	mov	r0, r4
    3ddc:	bl	3aa8 <sf_append>
    3de0:	mov	r0, #20
    3de4:	bl	22f0 <newchunk>
    3de8:	mov	r1, r0
    3dec:	mov	r3, #80	; 0x50
    3df0:	str	r3, [r0]
    3df4:	mov	r3, #0
    3df8:	str	r3, [r0, #12]
    3dfc:	mov	r0, r4
    3e00:	bl	3aa8 <sf_append>
    3e04:	mov	r0, #20
    3e08:	bl	22f0 <newchunk>
    3e0c:	mov	r8, r0
    3e10:	mov	r3, #69	; 0x45
    3e14:	str	r3, [r0]
    3e18:	mov	r3, #8
    3e1c:	str	r3, [r0, #12]
    3e20:	mov	r1, r0
    3e24:	mov	r0, r4
    3e28:	bl	3aa8 <sf_append>
    3e2c:	mov	r0, #20
    3e30:	bl	22f0 <newchunk>
    3e34:	mov	r7, r0
    3e38:	mov	r3, #69	; 0x45
    3e3c:	str	r3, [r0]
    3e40:	str	r0, [r8, #4]
    3e44:	mov	r3, #4
    3e48:	str	r3, [r0, #12]
    3e4c:	mov	r1, r0
    3e50:	mov	r0, r4
    3e54:	bl	3aa8 <sf_append>
    3e58:	str	r9, [r8, #8]
    3e5c:	str	r9, [r7, #4]
    3e60:	mov	r0, #20
    3e64:	bl	22f0 <newchunk>
    3e68:	mov	r8, r0
    3e6c:	mov	r3, #69	; 0x45
    3e70:	str	r3, [r0]
    3e74:	str	r0, [r7, #8]
    3e78:	mov	r3, #128	; 0x80
    3e7c:	str	r3, [r0, #12]
    3e80:	mov	r1, r0
    3e84:	mov	r0, r4
    3e88:	bl	3aa8 <sf_append>
    3e8c:	mov	r0, #20
    3e90:	bl	22f0 <newchunk>
    3e94:	mov	r1, r0
    3e98:	mov	r3, #96	; 0x60
    3e9c:	str	r3, [r0]
    3ea0:	str	r0, [r8, #4]
    3ea4:	str	sl, [r0, #12]
    3ea8:	mov	r0, r4
    3eac:	bl	3aa8 <sf_append>
    3eb0:	mov	r0, #20
    3eb4:	bl	22f0 <newchunk>
    3eb8:	mov	r1, r0
    3ebc:	mov	r3, #4
    3ec0:	str	r3, [r0]
    3ec4:	mov	r3, #2
    3ec8:	str	r3, [r0, #12]
    3ecc:	mov	r0, r4
    3ed0:	bl	3aa8 <sf_append>
    3ed4:	mov	r0, #20
    3ed8:	bl	22f0 <newchunk>
    3edc:	mov	r1, r0
    3ee0:	mov	r3, #2
    3ee4:	str	r3, [r0]
    3ee8:	str	sl, [r0, #12]
    3eec:	mov	r0, r4
    3ef0:	bl	3aa8 <sf_append>
    3ef4:	cmp	r6, #127	; 0x7f
    3ef8:	strne	r9, [r8, #8]
    3efc:	beq	41a4 <sf_finish_parse+0x6e0>
    3f00:	cmp	r4, #0
    3f04:	beq	3f18 <sf_finish_parse+0x454>
    3f08:	ldr	r1, [fp, #4]
    3f0c:	mov	r0, r4
    3f10:	bl	3aa8 <sf_append>
    3f14:	str	r4, [fp, #4]
    3f18:	cmp	r6, #192	; 0xc0
    3f1c:	bne	3f6c <sf_finish_parse+0x4a8>
    3f20:	mov	r0, #20
    3f24:	bl	22f0 <newchunk>
    3f28:	mov	r4, r0
    3f2c:	mov	r3, #32
    3f30:	str	r3, [r0]
    3f34:	mov	r3, #4
    3f38:	str	r3, [r0, #12]
    3f3c:	mov	r0, #208	; 0xd0
    3f40:	bl	22f0 <newchunk>
    3f44:	mov	r3, #21
    3f48:	str	r3, [r0, #8]
    3f4c:	str	r0, [r0, #96]	; 0x60
    3f50:	str	r4, [r0, #4]
    3f54:	mov	r3, #1761607680	; 0x69000000
    3f58:	str	r3, [r0, #20]
    3f5c:	cmp	r0, #0
    3f60:	beq	3f6c <sf_finish_parse+0x4a8>
    3f64:	mov	r1, r5
    3f68:	bl	399c <sf_gen_and>
    3f6c:	ldr	r4, [pc, #1080]	; 43ac <sf_finish_parse+0x8e8>
    3f70:	add	r4, pc, r4
    3f74:	ldr	r7, [r4, #880]	; 0x370
    3f78:	mov	r0, #208	; 0xd0
    3f7c:	bl	22f0 <newchunk>
    3f80:	mov	r1, r0
    3f84:	mov	r6, #6
    3f88:	str	r6, [r0, #8]
    3f8c:	str	r0, [r1, #96]	; 0x60
    3f90:	str	r7, [r0, #20]
    3f94:	mov	r0, r5
    3f98:	bl	218c <backpatch>
    3f9c:	ldr	r3, [r5, #44]	; 0x2c
    3fa0:	clz	r3, r3
    3fa4:	lsr	r3, r3, #5
    3fa8:	str	r3, [r5, #44]	; 0x2c
    3fac:	mov	r0, #208	; 0xd0
    3fb0:	bl	22f0 <newchunk>
    3fb4:	mov	r1, r0
    3fb8:	str	r6, [r0, #8]
    3fbc:	str	r0, [r1, #96]	; 0x60
    3fc0:	mov	r3, #0
    3fc4:	str	r3, [r0, #20]
    3fc8:	mov	r0, r5
    3fcc:	bl	218c <backpatch>
    3fd0:	ldr	r3, [r5, #96]	; 0x60
    3fd4:	str	r3, [r4, #868]	; 0x364
    3fd8:	add	sp, sp, #12
    3fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3fe0:	ldr	r3, [pc, #968]	; 43b0 <sf_finish_parse+0x8ec>
    3fe4:	add	r3, pc, r3
    3fe8:	ldr	r8, [r3, #856]	; 0x358
    3fec:	cmn	r8, #1
    3ff0:	beq	4374 <sf_finish_parse+0x8b0>
    3ff4:	mov	r0, #20
    3ff8:	bl	22f0 <newchunk>
    3ffc:	mov	r4, r0
    4000:	mov	r3, #32
    4004:	str	r3, [r0]
    4008:	mov	r3, #4
    400c:	str	r3, [r0, #12]
    4010:	mov	r0, #20
    4014:	bl	22f0 <newchunk>
    4018:	mov	r1, r0
    401c:	mov	r3, #2
    4020:	str	r3, [r0]
    4024:	str	r8, [r0, #12]
    4028:	mov	r0, r4
    402c:	bl	3aa8 <sf_append>
    4030:	mov	r0, #20
    4034:	bl	22f0 <newchunk>
    4038:	mov	r1, r0
    403c:	mov	r3, #7
    4040:	str	r3, [r0]
    4044:	mov	r0, r4
    4048:	bl	3aa8 <sf_append>
    404c:	b	3d50 <sf_finish_parse+0x28c>
    4050:	ldr	r3, [pc, #860]	; 43b4 <sf_finish_parse+0x8f0>
    4054:	add	r3, pc, r3
    4058:	ldr	r9, [r3, #856]	; 0x358
    405c:	cmn	r9, #1
    4060:	beq	437c <sf_finish_parse+0x8b8>
    4064:	mov	r0, #20
    4068:	bl	22f0 <newchunk>
    406c:	mov	r4, r0
    4070:	mov	sl, #48	; 0x30
    4074:	str	sl, [r0]
    4078:	mov	r3, #3
    407c:	str	r3, [r0, #12]
    4080:	mov	r0, #20
    4084:	bl	22f0 <newchunk>
    4088:	mov	r8, r0
    408c:	mov	r3, #100	; 0x64
    4090:	str	r3, [r0]
    4094:	mov	r1, r0
    4098:	mov	r0, r4
    409c:	bl	3aa8 <sf_append>
    40a0:	mov	r3, #8
    40a4:	str	r3, [r8, #12]
    40a8:	mov	r0, #20
    40ac:	bl	22f0 <newchunk>
    40b0:	mov	r1, r0
    40b4:	mov	r8, #7
    40b8:	str	r8, [r0]
    40bc:	mov	r0, r4
    40c0:	bl	3aa8 <sf_append>
    40c4:	mov	r0, #20
    40c8:	bl	22f0 <newchunk>
    40cc:	str	sl, [r0]
    40d0:	str	r0, [sp, #4]
    40d4:	mov	r1, r0
    40d8:	mov	r0, r4
    40dc:	bl	3aa8 <sf_append>
    40e0:	mov	sl, #2
    40e4:	ldr	r3, [sp, #4]
    40e8:	str	sl, [r3, #12]
    40ec:	mov	r0, #20
    40f0:	bl	22f0 <newchunk>
    40f4:	mov	r1, r0
    40f8:	mov	r3, #76	; 0x4c
    40fc:	str	r3, [r0]
    4100:	mov	r0, r4
    4104:	bl	3aa8 <sf_append>
    4108:	mov	r0, #20
    410c:	bl	22f0 <newchunk>
    4110:	mov	r1, r0
    4114:	str	sl, [r0]
    4118:	str	r9, [r0, #12]
    411c:	mov	r0, r4
    4120:	bl	3aa8 <sf_append>
    4124:	mov	r0, #20
    4128:	bl	22f0 <newchunk>
    412c:	mov	r1, r0
    4130:	str	r8, [r0]
    4134:	mov	r0, r4
    4138:	bl	3aa8 <sf_append>
    413c:	b	3d50 <sf_finish_parse+0x28c>
    4140:	cmp	r6, #127	; 0x7f
    4144:	beq	4174 <sf_finish_parse+0x6b0>
    4148:	bgt	4164 <sf_finish_parse+0x6a0>
    414c:	cmp	r6, #105	; 0x69
    4150:	beq	4174 <sf_finish_parse+0x6b0>
    4154:	cmp	r6, #119	; 0x77
    4158:	beq	4174 <sf_finish_parse+0x6b0>
    415c:	mov	r4, #0
    4160:	b	3f00 <sf_finish_parse+0x43c>
    4164:	cmp	r6, #163	; 0xa3
    4168:	beq	4174 <sf_finish_parse+0x6b0>
    416c:	cmp	r6, #192	; 0xc0
    4170:	bne	415c <sf_finish_parse+0x698>
    4174:	mov	r4, #0
    4178:	b	3d50 <sf_finish_parse+0x28c>
    417c:	mov	r0, #20
    4180:	bl	22f0 <newchunk>
    4184:	mov	r4, r0
    4188:	mov	r3, #1
    418c:	str	r3, [r0]
    4190:	ldr	r3, [pc, #544]	; 43b8 <sf_finish_parse+0x8f4>
    4194:	add	r3, pc, r3
    4198:	ldr	r3, [r3, #936]	; 0x3a8
    419c:	str	r3, [r0, #12]
    41a0:	b	3d80 <sf_finish_parse+0x2bc>
    41a4:	mov	r0, #20
    41a8:	bl	22f0 <newchunk>
    41ac:	mov	r1, r0
    41b0:	mov	r3, #32
    41b4:	str	r3, [r0]
    41b8:	str	r0, [r8, #8]
    41bc:	mov	r3, #4
    41c0:	str	r3, [r0, #12]
    41c4:	mov	r0, r4
    41c8:	bl	3aa8 <sf_append>
    41cc:	mov	r0, #20
    41d0:	bl	22f0 <newchunk>
    41d4:	mov	r8, r0
    41d8:	mov	r3, #69	; 0x45
    41dc:	str	r3, [r0]
    41e0:	mov	r3, #33554432	; 0x2000000
    41e4:	str	r3, [r0, #12]
    41e8:	mov	r1, r0
    41ec:	mov	r0, r4
    41f0:	bl	3aa8 <sf_append>
    41f4:	str	r9, [r8, #8]
    41f8:	mov	r0, #20
    41fc:	bl	22f0 <newchunk>
    4200:	mov	r7, r0
    4204:	mov	r3, #69	; 0x45
    4208:	str	r3, [r0]
    420c:	str	r0, [r8, #4]
    4210:	mov	r3, #16777216	; 0x1000000
    4214:	str	r3, [r0, #12]
    4218:	mov	r1, r0
    421c:	mov	r0, r4
    4220:	bl	3aa8 <sf_append>
    4224:	mov	r0, #20
    4228:	bl	22f0 <newchunk>
    422c:	mov	r1, r0
    4230:	mov	r8, #48	; 0x30
    4234:	str	r8, [r0]
    4238:	str	r0, [r7, #4]
    423c:	mov	r3, #16
    4240:	str	r3, [r0, #12]
    4244:	mov	r0, r4
    4248:	bl	3aa8 <sf_append>
    424c:	mov	r0, #20
    4250:	bl	22f0 <newchunk>
    4254:	mov	r2, #69	; 0x45
    4258:	str	r2, [r0]
    425c:	mov	r2, #32
    4260:	str	r2, [r0, #12]
    4264:	str	r0, [sp, #4]
    4268:	mov	r1, r0
    426c:	mov	r0, r4
    4270:	bl	3aa8 <sf_append>
    4274:	mov	r0, #20
    4278:	bl	22f0 <newchunk>
    427c:	mov	r1, r0
    4280:	str	r8, [r0]
    4284:	str	r0, [r7, #8]
    4288:	mov	r3, #8
    428c:	str	r3, [r0, #12]
    4290:	mov	r0, r4
    4294:	bl	3aa8 <sf_append>
    4298:	mov	r0, #20
    429c:	bl	22f0 <newchunk>
    42a0:	mov	r7, r0
    42a4:	mov	r2, #69	; 0x45
    42a8:	str	r2, [r0]
    42ac:	mov	r2, #32
    42b0:	str	r2, [r0, #12]
    42b4:	mov	r1, r0
    42b8:	mov	r0, r4
    42bc:	bl	3aa8 <sf_append>
    42c0:	mov	r0, #20
    42c4:	bl	22f0 <newchunk>
    42c8:	mov	r8, r0
    42cc:	mov	r3, #96	; 0x60
    42d0:	str	r3, [r0]
    42d4:	str	sl, [r0, #12]
    42d8:	mov	r1, r0
    42dc:	mov	r0, r4
    42e0:	bl	3aa8 <sf_append>
    42e4:	mov	r0, #20
    42e8:	bl	22f0 <newchunk>
    42ec:	mov	r1, r0
    42f0:	mov	r2, #4
    42f4:	str	r2, [r0]
    42f8:	mov	r3, #3
    42fc:	str	r3, [r0, #12]
    4300:	mov	r0, r4
    4304:	bl	3aa8 <sf_append>
    4308:	mov	r0, #20
    430c:	bl	22f0 <newchunk>
    4310:	mov	r1, r0
    4314:	mov	r3, #84	; 0x54
    4318:	str	r3, [r0]
    431c:	mvn	r3, #3
    4320:	str	r3, [r0, #12]
    4324:	mov	r0, r4
    4328:	bl	3aa8 <sf_append>
    432c:	mov	r0, #20
    4330:	bl	22f0 <newchunk>
    4334:	mov	r1, r0
    4338:	mov	r3, #2
    433c:	str	r3, [r0]
    4340:	str	sl, [r0, #12]
    4344:	mov	r0, r4
    4348:	bl	3aa8 <sf_append>
    434c:	ldr	r3, [sp, #4]
    4350:	str	r8, [r3, #4]
    4354:	str	r9, [r3, #8]
    4358:	str	r8, [r7, #4]
    435c:	str	r9, [r7, #8]
    4360:	cmp	r4, #0
    4364:	bne	3f08 <sf_finish_parse+0x444>
    4368:	b	3f6c <sf_finish_parse+0x4a8>
    436c:	mov	r4, #0
    4370:	b	3d50 <sf_finish_parse+0x28c>
    4374:	mov	r4, #0
    4378:	b	3d50 <sf_finish_parse+0x28c>
    437c:	mov	r4, #0
    4380:	b	3d50 <sf_finish_parse+0x28c>
    4384:	mov	r4, #0
    4388:	b	3d50 <sf_finish_parse+0x28c>
    438c:	.word	0x0002d524
    4390:	.word	0x0002d888
    4394:	.word	0x0002d860
    4398:	.word	0x00000104
    439c:	.word	0x0002d758
    43a0:	.word	0xfffff000
    43a4:	.word	0x80211000
    43a8:	.word	0x0002d614
    43ac:	.word	0x0002d3f8
    43b0:	.word	0x0002d384
    43b4:	.word	0x0002d314
    43b8:	.word	0x0002d1d4

000043bc <gen_load_llrel>:
    43bc:	push	{r4, r5, r6, lr}
    43c0:	mov	r6, r0
    43c4:	mov	r4, r1
    43c8:	bl	254c <gen_llprefixlen>
    43cc:	subs	r5, r0, #0
    43d0:	beq	43fc <gen_load_llrel+0x40>
    43d4:	mov	r0, #20
    43d8:	bl	22f0 <newchunk>
    43dc:	mov	r1, r0
    43e0:	orr	r4, r4, #64	; 0x40
    43e4:	str	r4, [r0]
    43e8:	str	r6, [r0, #12]
    43ec:	mov	r0, r5
    43f0:	bl	3aa8 <sf_append>
    43f4:	mov	r0, r5
    43f8:	pop	{r4, r5, r6, pc}
    43fc:	mov	r0, #20
    4400:	bl	22f0 <newchunk>
    4404:	mov	r5, r0
    4408:	orr	r4, r4, #32
    440c:	str	r4, [r0]
    4410:	ldr	r3, [pc, #16]	; 4428 <gen_load_llrel+0x6c>
    4414:	add	r3, pc, r3
    4418:	ldr	r3, [r3, #936]	; 0x3a8
    441c:	add	r6, r3, r6
    4420:	str	r6, [r0, #12]
    4424:	b	43f4 <gen_load_llrel+0x38>
    4428:	.word	0x0002cf54

0000442c <gen_mac_multicast>:
    442c:	push	{r4, lr}
    4430:	mov	r1, #16
    4434:	bl	43bc <gen_load_llrel>
    4438:	mov	r4, r0
    443c:	mov	r0, #208	; 0xd0
    4440:	bl	22f0 <newchunk>
    4444:	mov	r3, r0
    4448:	mov	r2, #69	; 0x45
    444c:	str	r2, [r0, #8]
    4450:	str	r0, [r3, #96]	; 0x60
    4454:	mov	r2, #1
    4458:	str	r2, [r0, #20]
    445c:	str	r4, [r0, #4]
    4460:	pop	{r4, pc}

00004464 <gen_loadx_iphdrlen>:
    4464:	push	{r4, lr}
    4468:	bl	26ec <gen_off_macpl>
    446c:	subs	r4, r0, #0
    4470:	beq	4528 <gen_loadx_iphdrlen+0xc4>
    4474:	mov	r0, #20
    4478:	bl	22f0 <newchunk>
    447c:	mov	r1, r0
    4480:	mov	r3, #80	; 0x50
    4484:	str	r3, [r0]
    4488:	ldr	r3, [pc, #200]	; 4558 <gen_loadx_iphdrlen+0xf4>
    448c:	add	r3, pc, r3
    4490:	ldr	r3, [r3, #948]	; 0x3b4
    4494:	str	r3, [r0, #12]
    4498:	mov	r0, r4
    449c:	bl	3aa8 <sf_append>
    44a0:	mov	r0, #20
    44a4:	bl	22f0 <newchunk>
    44a8:	mov	r1, r0
    44ac:	mov	r3, #84	; 0x54
    44b0:	str	r3, [r0]
    44b4:	mov	r3, #15
    44b8:	str	r3, [r0, #12]
    44bc:	mov	r0, r4
    44c0:	bl	3aa8 <sf_append>
    44c4:	mov	r0, #20
    44c8:	bl	22f0 <newchunk>
    44cc:	mov	r1, r0
    44d0:	mov	r3, #100	; 0x64
    44d4:	str	r3, [r0]
    44d8:	mov	r3, #2
    44dc:	str	r3, [r0, #12]
    44e0:	mov	r0, r4
    44e4:	bl	3aa8 <sf_append>
    44e8:	mov	r0, #20
    44ec:	bl	22f0 <newchunk>
    44f0:	mov	r1, r0
    44f4:	mov	r3, #12
    44f8:	str	r3, [r0]
    44fc:	mov	r0, r4
    4500:	bl	3aa8 <sf_append>
    4504:	mov	r0, #20
    4508:	bl	22f0 <newchunk>
    450c:	mov	r1, r0
    4510:	mov	r3, #7
    4514:	str	r3, [r0]
    4518:	mov	r0, r4
    451c:	bl	3aa8 <sf_append>
    4520:	mov	r0, r4
    4524:	pop	{r4, pc}
    4528:	mov	r0, #20
    452c:	bl	22f0 <newchunk>
    4530:	mov	r4, r0
    4534:	mov	r3, #177	; 0xb1
    4538:	str	r3, [r0]
    453c:	ldr	r2, [pc, #24]	; 455c <gen_loadx_iphdrlen+0xf8>
    4540:	add	r2, pc, r2
    4544:	ldr	r3, [r2, #940]	; 0x3ac
    4548:	ldr	r2, [r2, #948]	; 0x3b4
    454c:	add	r3, r3, r2
    4550:	str	r3, [r0, #12]
    4554:	b	4520 <gen_loadx_iphdrlen+0xbc>
    4558:	.word	0x0002cedc
    455c:	.word	0x0002ce28

00004560 <gen_load_macplrel>:
    4560:	push	{r4, r5, r6, lr}
    4564:	mov	r6, r0
    4568:	mov	r4, r1
    456c:	bl	26ec <gen_off_macpl>
    4570:	subs	r5, r0, #0
    4574:	beq	45a0 <gen_load_macplrel+0x40>
    4578:	mov	r0, #20
    457c:	bl	22f0 <newchunk>
    4580:	mov	r1, r0
    4584:	orr	r4, r4, #64	; 0x40
    4588:	str	r4, [r0]
    458c:	str	r6, [r0, #12]
    4590:	mov	r0, r5
    4594:	bl	3aa8 <sf_append>
    4598:	mov	r0, r5
    459c:	pop	{r4, r5, r6, pc}
    45a0:	mov	r0, #20
    45a4:	bl	22f0 <newchunk>
    45a8:	mov	r5, r0
    45ac:	orr	r4, r4, #32
    45b0:	str	r4, [r0]
    45b4:	ldr	r3, [pc, #16]	; 45cc <gen_load_macplrel+0x6c>
    45b8:	add	r3, pc, r3
    45bc:	ldr	r3, [r3, #940]	; 0x3ac
    45c0:	add	r6, r3, r6
    45c4:	str	r6, [r0, #12]
    45c8:	b	4598 <gen_load_macplrel+0x38>
    45cc:	.word	0x0002cdb0

000045d0 <gen_ipfrag>:
    45d0:	push	{r4, lr}
    45d4:	ldr	r3, [pc, #76]	; 4628 <gen_ipfrag+0x58>
    45d8:	add	r3, pc, r3
    45dc:	ldr	r0, [r3, #948]	; 0x3b4
    45e0:	mov	r1, #8
    45e4:	add	r0, r0, #6
    45e8:	bl	4560 <gen_load_macplrel>
    45ec:	mov	r4, r0
    45f0:	mov	r0, #208	; 0xd0
    45f4:	bl	22f0 <newchunk>
    45f8:	mov	r3, r0
    45fc:	mov	r2, #69	; 0x45
    4600:	str	r2, [r0, #8]
    4604:	str	r0, [r3, #96]	; 0x60
    4608:	ldr	r2, [pc, #28]	; 462c <gen_ipfrag+0x5c>
    460c:	str	r2, [r0, #20]
    4610:	str	r4, [r0, #4]
    4614:	ldr	r2, [r0, #44]	; 0x2c
    4618:	clz	r2, r2
    461c:	lsr	r2, r2, #5
    4620:	str	r2, [r0, #44]	; 0x2c
    4624:	pop	{r4, pc}
    4628:	.word	0x0002cd90
    462c:	.word	0x00001fff

00004630 <gen_ncmp>:
    4630:	push	{r4, r5, r6, r7, r8, lr}
    4634:	mov	r8, r1
    4638:	mov	r6, r2
    463c:	mov	r7, r3
    4640:	ldr	r4, [sp, #24]
    4644:	cmp	r0, #6
    4648:	addls	pc, pc, r0, lsl #2
    464c:	b	47c4 <gen_ncmp+0x194>
    4650:	b	466c <gen_ncmp+0x3c>
    4654:	b	46f4 <gen_ncmp+0xc4>
    4658:	b	4708 <gen_ncmp+0xd8>
    465c:	b	471c <gen_ncmp+0xec>
    4660:	b	473c <gen_ncmp+0x10c>
    4664:	b	475c <gen_ncmp+0x12c>
    4668:	b	47a0 <gen_ncmp+0x170>
    466c:	mov	r0, #20
    4670:	bl	22f0 <newchunk>
    4674:	mov	r5, r0
    4678:	orr	r6, r6, #32
    467c:	str	r6, [r0]
    4680:	str	r8, [r0, #12]
    4684:	cmn	r7, #1
    4688:	beq	46ac <gen_ncmp+0x7c>
    468c:	mov	r0, #20
    4690:	bl	22f0 <newchunk>
    4694:	mov	r1, r0
    4698:	mov	r3, #84	; 0x54
    469c:	str	r3, [r0]
    46a0:	str	r7, [r0, #12]
    46a4:	mov	r0, r5
    46a8:	bl	3aa8 <sf_append>
    46ac:	mov	r0, #208	; 0xd0
    46b0:	bl	22f0 <newchunk>
    46b4:	orr	r3, r4, #5
    46b8:	str	r3, [r0, #8]
    46bc:	str	r0, [r0, #96]	; 0x60
    46c0:	str	r5, [r0, #4]
    46c4:	ldr	r3, [sp, #32]
    46c8:	str	r3, [r0, #20]
    46cc:	ldr	r3, [sp, #28]
    46d0:	cmp	r3, #0
    46d4:	popeq	{r4, r5, r6, r7, r8, pc}
    46d8:	bic	r4, r4, #16
    46dc:	cmp	r4, #32
    46e0:	ldreq	r3, [r0, #44]	; 0x2c
    46e4:	clzeq	r3, r3
    46e8:	lsreq	r3, r3, #5
    46ec:	streq	r3, [r0, #44]	; 0x2c
    46f0:	pop	{r4, r5, r6, r7, r8, pc}
    46f4:	mov	r1, r2
    46f8:	mov	r0, r8
    46fc:	bl	43bc <gen_load_llrel>
    4700:	mov	r5, r0
    4704:	b	4684 <gen_ncmp+0x54>
    4708:	mov	r1, r2
    470c:	mov	r0, r8
    4710:	bl	4560 <gen_load_macplrel>
    4714:	mov	r5, r0
    4718:	b	4684 <gen_ncmp+0x54>
    471c:	ldr	r3, [pc, #164]	; 47c8 <gen_ncmp+0x198>
    4720:	add	r3, pc, r3
    4724:	ldr	r0, [r3, #948]	; 0x3b4
    4728:	mov	r1, r2
    472c:	add	r0, r8, r0
    4730:	bl	4560 <gen_load_macplrel>
    4734:	mov	r5, r0
    4738:	b	4684 <gen_ncmp+0x54>
    473c:	ldr	r3, [pc, #136]	; 47cc <gen_ncmp+0x19c>
    4740:	add	r3, pc, r3
    4744:	ldr	r0, [r3, #952]	; 0x3b8
    4748:	mov	r1, r2
    474c:	add	r0, r8, r0
    4750:	bl	4560 <gen_load_macplrel>
    4754:	mov	r5, r0
    4758:	b	4684 <gen_ncmp+0x54>
    475c:	bl	4464 <gen_loadx_iphdrlen>
    4760:	mov	r5, r0
    4764:	mov	r0, #20
    4768:	bl	22f0 <newchunk>
    476c:	mov	r1, r0
    4770:	orr	r6, r6, #64	; 0x40
    4774:	str	r6, [r0]
    4778:	ldr	r2, [pc, #80]	; 47d0 <gen_ncmp+0x1a0>
    477c:	add	r2, pc, r2
    4780:	ldr	r3, [r2, #940]	; 0x3ac
    4784:	ldr	r2, [r2, #948]	; 0x3b4
    4788:	add	r3, r3, r2
    478c:	add	r8, r3, r8
    4790:	str	r8, [r0, #12]
    4794:	mov	r0, r5
    4798:	bl	3aa8 <sf_append>
    479c:	b	4684 <gen_ncmp+0x54>
    47a0:	ldr	r3, [pc, #44]	; 47d4 <gen_ncmp+0x1a4>
    47a4:	add	r3, pc, r3
    47a8:	ldr	r0, [r3, #948]	; 0x3b4
    47ac:	add	r0, r0, #40	; 0x28
    47b0:	mov	r1, r2
    47b4:	add	r0, r0, r8
    47b8:	bl	4560 <gen_load_macplrel>
    47bc:	mov	r5, r0
    47c0:	b	4684 <gen_ncmp+0x54>
    47c4:	bl	f18 <abort@plt>
    47c8:	.word	0x0002cc48
    47cc:	.word	0x0002cc28
    47d0:	.word	0x0002cbec
    47d4:	.word	0x0002cbc4

000047d8 <gen_cmp>:
    47d8:	push	{lr}		; (str lr, [sp, #-4]!)
    47dc:	sub	sp, sp, #20
    47e0:	str	r3, [sp, #8]
    47e4:	mov	r3, #0
    47e8:	str	r3, [sp, #4]
    47ec:	mov	r3, #16
    47f0:	str	r3, [sp]
    47f4:	mvn	r3, #0
    47f8:	bl	4630 <gen_ncmp>
    47fc:	add	sp, sp, #20
    4800:	pop	{pc}		; (ldr pc, [sp], #4)

00004804 <gen_bcmp>:
    4804:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4808:	mov	r8, r0
    480c:	mov	r9, r1
    4810:	mov	sl, r2
    4814:	mov	fp, r3
    4818:	cmp	r2, #3
    481c:	bls	48ac <gen_bcmp+0xa8>
    4820:	add	r4, r3, r2
    4824:	mov	r3, r2
    4828:	mov	r7, #0
    482c:	b	4844 <gen_bcmp+0x40>
    4830:	sub	r4, r4, #4
    4834:	mov	r3, r6
    4838:	mov	r7, r5
    483c:	cmp	r6, #3
    4840:	bls	4894 <gen_bcmp+0x90>
    4844:	sub	r6, r3, #4
    4848:	ldrb	r2, [r4, #-4]
    484c:	ldrb	r3, [r4, #-3]
    4850:	lsl	r3, r3, #16
    4854:	orr	r3, r3, r2, lsl #24
    4858:	ldrb	r2, [r4, #-1]
    485c:	orr	r3, r3, r2
    4860:	ldrb	r2, [r4, #-2]
    4864:	orr	r3, r3, r2, lsl #8
    4868:	mov	r2, #0
    486c:	add	r1, r6, r9
    4870:	mov	r0, r8
    4874:	bl	47d8 <gen_cmp>
    4878:	mov	r5, r0
    487c:	cmp	r7, #0
    4880:	beq	4830 <gen_bcmp+0x2c>
    4884:	mov	r1, r0
    4888:	mov	r0, r7
    488c:	bl	399c <sf_gen_and>
    4890:	b	4830 <gen_bcmp+0x2c>
    4894:	and	sl, sl, #3
    4898:	cmp	sl, #1
    489c:	bls	4918 <gen_bcmp+0x114>
    48a0:	add	r4, fp, sl
    48a4:	mov	r3, sl
    48a8:	b	48c8 <gen_bcmp+0xc4>
    48ac:	mov	r5, #0
    48b0:	b	4898 <gen_bcmp+0x94>
    48b4:	sub	r4, r4, #2
    48b8:	mov	r3, r6
    48bc:	mov	r5, r7
    48c0:	cmp	r6, #1
    48c4:	bls	4904 <gen_bcmp+0x100>
    48c8:	sub	r6, r3, #2
    48cc:	ldrb	r2, [r4, #-2]
    48d0:	ldrb	r3, [r4, #-1]
    48d4:	orr	r3, r3, r2, lsl #8
    48d8:	mov	r2, #8
    48dc:	add	r1, r9, r6
    48e0:	mov	r0, r8
    48e4:	bl	47d8 <gen_cmp>
    48e8:	mov	r7, r0
    48ec:	cmp	r5, #0
    48f0:	beq	48b4 <gen_bcmp+0xb0>
    48f4:	mov	r1, r0
    48f8:	mov	r0, r5
    48fc:	bl	399c <sf_gen_and>
    4900:	b	48b4 <gen_bcmp+0xb0>
    4904:	and	sl, sl, #1
    4908:	cmp	sl, #0
    490c:	bne	4920 <gen_bcmp+0x11c>
    4910:	mov	r0, r7
    4914:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4918:	mov	r7, r5
    491c:	b	4908 <gen_bcmp+0x104>
    4920:	ldrb	r3, [fp]
    4924:	mov	r2, #16
    4928:	mov	r1, r9
    492c:	mov	r0, r8
    4930:	bl	47d8 <gen_cmp>
    4934:	mov	r4, r0
    4938:	cmp	r7, #0
    493c:	moveq	r7, r0
    4940:	beq	4910 <gen_bcmp+0x10c>
    4944:	mov	r1, r0
    4948:	mov	r0, r7
    494c:	bl	399c <sf_gen_and>
    4950:	mov	r7, r4
    4954:	b	4910 <gen_bcmp+0x10c>

00004958 <gen_snap>:
    4958:	push	{lr}		; (str lr, [sp, #-4]!)
    495c:	sub	sp, sp, #12
    4960:	mvn	r3, #85	; 0x55
    4964:	strb	r3, [sp]
    4968:	strb	r3, [sp, #1]
    496c:	mov	r3, #3
    4970:	strb	r3, [sp, #2]
    4974:	lsr	r3, r0, #16
    4978:	strb	r3, [sp, #3]
    497c:	lsr	r3, r0, #8
    4980:	strb	r3, [sp, #4]
    4984:	strb	r0, [sp, #5]
    4988:	lsr	r3, r1, #8
    498c:	strb	r3, [sp, #6]
    4990:	strb	r1, [sp, #7]
    4994:	mov	r3, sp
    4998:	mov	r2, #8
    499c:	mov	r1, #0
    49a0:	mov	r0, #2
    49a4:	bl	4804 <gen_bcmp>
    49a8:	add	sp, sp, #12
    49ac:	pop	{pc}		; (ldr pc, [sp], #4)

000049b0 <gen_fhostop>:
    49b0:	push	{r4, r5, r6, lr}
    49b4:	mov	r4, r0
    49b8:	cmp	r1, #4
    49bc:	addls	pc, pc, r1, lsl #2
    49c0:	b	4a6c <gen_fhostop+0xbc>
    49c4:	b	4a40 <gen_fhostop+0x90>
    49c8:	b	49d8 <gen_fhostop+0x28>
    49cc:	b	49f8 <gen_fhostop+0x48>
    49d0:	b	4a40 <gen_fhostop+0x90>
    49d4:	b	4a14 <gen_fhostop+0x64>
    49d8:	mov	r3, r0
    49dc:	mov	r2, #6
    49e0:	mov	r1, #7
    49e4:	mov	r0, #1
    49e8:	bl	4804 <gen_bcmp>
    49ec:	mov	r4, r0
    49f0:	mov	r0, r4
    49f4:	pop	{r4, r5, r6, pc}
    49f8:	mov	r3, r0
    49fc:	mov	r2, #6
    4a00:	mov	r1, #1
    4a04:	mov	r0, r1
    4a08:	bl	4804 <gen_bcmp>
    4a0c:	mov	r4, r0
    4a10:	b	49f0 <gen_fhostop+0x40>
    4a14:	mov	r1, #1
    4a18:	bl	49b0 <gen_fhostop>
    4a1c:	mov	r5, r0
    4a20:	mov	r1, #2
    4a24:	mov	r0, r4
    4a28:	bl	49b0 <gen_fhostop>
    4a2c:	mov	r4, r0
    4a30:	mov	r1, r0
    4a34:	mov	r0, r5
    4a38:	bl	399c <sf_gen_and>
    4a3c:	b	49f0 <gen_fhostop+0x40>
    4a40:	mov	r1, #1
    4a44:	bl	49b0 <gen_fhostop>
    4a48:	mov	r5, r0
    4a4c:	mov	r1, #2
    4a50:	mov	r0, r4
    4a54:	bl	49b0 <gen_fhostop>
    4a58:	mov	r4, r0
    4a5c:	mov	r1, r0
    4a60:	mov	r0, r5
    4a64:	bl	3a20 <sf_gen_or>
    4a68:	b	49f0 <gen_fhostop+0x40>
    4a6c:	bl	f18 <abort@plt>

00004a70 <gen_thostop>:
    4a70:	push	{r4, r5, r6, lr}
    4a74:	mov	r4, r0
    4a78:	cmp	r1, #4
    4a7c:	addls	pc, pc, r1, lsl #2
    4a80:	b	4b2c <gen_thostop+0xbc>
    4a84:	b	4b00 <gen_thostop+0x90>
    4a88:	b	4a98 <gen_thostop+0x28>
    4a8c:	b	4ab8 <gen_thostop+0x48>
    4a90:	b	4b00 <gen_thostop+0x90>
    4a94:	b	4ad4 <gen_thostop+0x64>
    4a98:	mov	r3, r0
    4a9c:	mov	r2, #6
    4aa0:	mov	r1, #8
    4aa4:	mov	r0, #1
    4aa8:	bl	4804 <gen_bcmp>
    4aac:	mov	r4, r0
    4ab0:	mov	r0, r4
    4ab4:	pop	{r4, r5, r6, pc}
    4ab8:	mov	r3, r0
    4abc:	mov	r2, #6
    4ac0:	mov	r1, #2
    4ac4:	mov	r0, #1
    4ac8:	bl	4804 <gen_bcmp>
    4acc:	mov	r4, r0
    4ad0:	b	4ab0 <gen_thostop+0x40>
    4ad4:	mov	r1, #1
    4ad8:	bl	4a70 <gen_thostop>
    4adc:	mov	r5, r0
    4ae0:	mov	r1, #2
    4ae4:	mov	r0, r4
    4ae8:	bl	4a70 <gen_thostop>
    4aec:	mov	r4, r0
    4af0:	mov	r1, r0
    4af4:	mov	r0, r5
    4af8:	bl	399c <sf_gen_and>
    4afc:	b	4ab0 <gen_thostop+0x40>
    4b00:	mov	r1, #1
    4b04:	bl	4a70 <gen_thostop>
    4b08:	mov	r5, r0
    4b0c:	mov	r1, #2
    4b10:	mov	r0, r4
    4b14:	bl	4a70 <gen_thostop>
    4b18:	mov	r4, r0
    4b1c:	mov	r1, r0
    4b20:	mov	r0, r5
    4b24:	bl	3a20 <sf_gen_or>
    4b28:	b	4ab0 <gen_thostop+0x40>
    4b2c:	bl	f18 <abort@plt>

00004b30 <gen_ipfchostop>:
    4b30:	push	{r4, r5, r6, lr}
    4b34:	mov	r4, r0
    4b38:	cmp	r1, #4
    4b3c:	addls	pc, pc, r1, lsl #2
    4b40:	b	4bec <gen_ipfchostop+0xbc>
    4b44:	b	4bc0 <gen_ipfchostop+0x90>
    4b48:	b	4b58 <gen_ipfchostop+0x28>
    4b4c:	b	4b78 <gen_ipfchostop+0x48>
    4b50:	b	4bc0 <gen_ipfchostop+0x90>
    4b54:	b	4b94 <gen_ipfchostop+0x64>
    4b58:	mov	r3, r0
    4b5c:	mov	r2, #6
    4b60:	mov	r1, #10
    4b64:	mov	r0, #1
    4b68:	bl	4804 <gen_bcmp>
    4b6c:	mov	r4, r0
    4b70:	mov	r0, r4
    4b74:	pop	{r4, r5, r6, pc}
    4b78:	mov	r3, r0
    4b7c:	mov	r2, #6
    4b80:	mov	r1, #2
    4b84:	mov	r0, #1
    4b88:	bl	4804 <gen_bcmp>
    4b8c:	mov	r4, r0
    4b90:	b	4b70 <gen_ipfchostop+0x40>
    4b94:	mov	r1, #1
    4b98:	bl	4b30 <gen_ipfchostop>
    4b9c:	mov	r5, r0
    4ba0:	mov	r1, #2
    4ba4:	mov	r0, r4
    4ba8:	bl	4b30 <gen_ipfchostop>
    4bac:	mov	r4, r0
    4bb0:	mov	r1, r0
    4bb4:	mov	r0, r5
    4bb8:	bl	399c <sf_gen_and>
    4bbc:	b	4b70 <gen_ipfchostop+0x40>
    4bc0:	mov	r1, #1
    4bc4:	bl	4b30 <gen_ipfchostop>
    4bc8:	mov	r5, r0
    4bcc:	mov	r1, #2
    4bd0:	mov	r0, r4
    4bd4:	bl	4b30 <gen_ipfchostop>
    4bd8:	mov	r4, r0
    4bdc:	mov	r1, r0
    4be0:	mov	r0, r5
    4be4:	bl	3a20 <sf_gen_or>
    4be8:	b	4b70 <gen_ipfchostop+0x40>
    4bec:	bl	f18 <abort@plt>

00004bf0 <gen_ehostop>:
    4bf0:	push	{r4, r5, r6, lr}
    4bf4:	mov	r4, r0
    4bf8:	cmp	r1, #4
    4bfc:	addls	pc, pc, r1, lsl #2
    4c00:	b	4cc0 <gen_ehostop+0xd0>
    4c04:	b	4c94 <gen_ehostop+0xa4>
    4c08:	b	4c18 <gen_ehostop+0x28>
    4c0c:	b	4c44 <gen_ehostop+0x54>
    4c10:	b	4c94 <gen_ehostop+0xa4>
    4c14:	b	4c68 <gen_ehostop+0x78>
    4c18:	ldr	r3, [pc, #164]	; 4cc4 <gen_ehostop+0xd4>
    4c1c:	add	r3, pc, r3
    4c20:	ldr	r1, [r3, #884]	; 0x374
    4c24:	mov	r3, r0
    4c28:	mov	r2, #6
    4c2c:	add	r1, r1, r2
    4c30:	mov	r0, #1
    4c34:	bl	4804 <gen_bcmp>
    4c38:	mov	r4, r0
    4c3c:	mov	r0, r4
    4c40:	pop	{r4, r5, r6, pc}
    4c44:	mov	r3, r0
    4c48:	mov	r2, #6
    4c4c:	ldr	r1, [pc, #116]	; 4cc8 <gen_ehostop+0xd8>
    4c50:	add	r1, pc, r1
    4c54:	ldr	r1, [r1, #884]	; 0x374
    4c58:	mov	r0, #1
    4c5c:	bl	4804 <gen_bcmp>
    4c60:	mov	r4, r0
    4c64:	b	4c3c <gen_ehostop+0x4c>
    4c68:	mov	r1, #1
    4c6c:	bl	4bf0 <gen_ehostop>
    4c70:	mov	r5, r0
    4c74:	mov	r1, #2
    4c78:	mov	r0, r4
    4c7c:	bl	4bf0 <gen_ehostop>
    4c80:	mov	r4, r0
    4c84:	mov	r1, r0
    4c88:	mov	r0, r5
    4c8c:	bl	399c <sf_gen_and>
    4c90:	b	4c3c <gen_ehostop+0x4c>
    4c94:	mov	r1, #1
    4c98:	bl	4bf0 <gen_ehostop>
    4c9c:	mov	r5, r0
    4ca0:	mov	r1, #2
    4ca4:	mov	r0, r4
    4ca8:	bl	4bf0 <gen_ehostop>
    4cac:	mov	r4, r0
    4cb0:	mov	r1, r0
    4cb4:	mov	r0, r5
    4cb8:	bl	3a20 <sf_gen_or>
    4cbc:	b	4c3c <gen_ehostop+0x4c>
    4cc0:	bl	f18 <abort@plt>
    4cc4:	.word	0x0002c74c
    4cc8:	.word	0x0002c718

00004ccc <gen_ahostop>:
    4ccc:	push	{r4, r5, r6, lr}
    4cd0:	mov	r4, r0
    4cd4:	cmp	r1, #4
    4cd8:	addls	pc, pc, r1, lsl #2
    4cdc:	b	4d88 <gen_ahostop+0xbc>
    4ce0:	b	4d5c <gen_ahostop+0x90>
    4ce4:	b	4cf4 <gen_ahostop+0x28>
    4ce8:	b	4d14 <gen_ahostop+0x48>
    4cec:	b	4d5c <gen_ahostop+0x90>
    4cf0:	b	4d30 <gen_ahostop+0x64>
    4cf4:	mov	r3, r0
    4cf8:	mov	r2, #1
    4cfc:	mov	r1, #0
    4d00:	mov	r0, r2
    4d04:	bl	4804 <gen_bcmp>
    4d08:	mov	r4, r0
    4d0c:	mov	r0, r4
    4d10:	pop	{r4, r5, r6, pc}
    4d14:	mov	r3, r0
    4d18:	mov	r2, #1
    4d1c:	mov	r1, r2
    4d20:	mov	r0, r2
    4d24:	bl	4804 <gen_bcmp>
    4d28:	mov	r4, r0
    4d2c:	b	4d0c <gen_ahostop+0x40>
    4d30:	mov	r1, #1
    4d34:	bl	4ccc <gen_ahostop>
    4d38:	mov	r5, r0
    4d3c:	mov	r1, #2
    4d40:	mov	r0, r4
    4d44:	bl	4ccc <gen_ahostop>
    4d48:	mov	r4, r0
    4d4c:	mov	r1, r0
    4d50:	mov	r0, r5
    4d54:	bl	399c <sf_gen_and>
    4d58:	b	4d0c <gen_ahostop+0x40>
    4d5c:	mov	r1, #1
    4d60:	bl	4ccc <gen_ahostop>
    4d64:	mov	r5, r0
    4d68:	mov	r1, #2
    4d6c:	mov	r0, r4
    4d70:	bl	4ccc <gen_ahostop>
    4d74:	mov	r4, r0
    4d78:	mov	r1, r0
    4d7c:	mov	r0, r5
    4d80:	bl	3a20 <sf_gen_or>
    4d84:	b	4d0c <gen_ahostop+0x40>
    4d88:	bl	f18 <abort@plt>

00004d8c <gen_llc_linktype>:
    4d8c:	push	{r4, lr}
    4d90:	cmp	r0, #240	; 0xf0
    4d94:	beq	4de8 <gen_llc_linktype+0x5c>
    4d98:	bgt	4dc4 <gen_llc_linktype+0x38>
    4d9c:	cmp	r0, #6
    4da0:	beq	4de8 <gen_llc_linktype+0x5c>
    4da4:	cmp	r0, #224	; 0xe0
    4da8:	bne	4e00 <gen_llc_linktype+0x74>
    4dac:	mov	r3, #224	; 0xe0
    4db0:	mov	r2, #16
    4db4:	mov	r1, #0
    4db8:	mov	r0, #2
    4dbc:	bl	47d8 <gen_cmp>
    4dc0:	pop	{r4, pc}
    4dc4:	cmp	r0, #254	; 0xfe
    4dc8:	beq	4de8 <gen_llc_linktype+0x5c>
    4dcc:	ldr	r3, [pc, #84]	; 4e28 <gen_llc_linktype+0x9c>
    4dd0:	cmp	r0, r3
    4dd4:	bne	4e00 <gen_llc_linktype+0x74>
    4dd8:	ldr	r1, [pc, #72]	; 4e28 <gen_llc_linktype+0x9c>
    4ddc:	ldr	r0, [pc, #72]	; 4e2c <gen_llc_linktype+0xa0>
    4de0:	bl	4958 <gen_snap>
    4de4:	pop	{r4, pc}
    4de8:	orr	r3, r0, r0, lsl #8
    4dec:	mov	r2, #8
    4df0:	mov	r1, #0
    4df4:	mov	r0, #2
    4df8:	bl	47d8 <gen_cmp>
    4dfc:	pop	{r4, pc}
    4e00:	ldr	r3, [pc, #40]	; 4e30 <gen_llc_linktype+0xa4>
    4e04:	cmp	r0, r3
    4e08:	mov	r3, r0
    4e0c:	movle	r2, #16
    4e10:	movle	r1, #0
    4e14:	movgt	r2, #8
    4e18:	movgt	r1, #6
    4e1c:	mov	r0, #2
    4e20:	bl	47d8 <gen_cmp>
    4e24:	pop	{r4, pc}
    4e28:	.word	0x0000809b
    4e2c:	.word	0x00080007
    4e30:	.word	0x000005dc

00004e34 <gen_portatom>:
    4e34:	push	{r4, lr}
    4e38:	mov	r3, r1
    4e3c:	mov	r2, #8
    4e40:	mov	r1, r0
    4e44:	mov	r0, #5
    4e48:	bl	47d8 <gen_cmp>
    4e4c:	pop	{r4, pc}

00004e50 <gen_portatom6>:
    4e50:	push	{r4, lr}
    4e54:	mov	r3, r1
    4e58:	mov	r2, #8
    4e5c:	mov	r1, r0
    4e60:	mov	r0, #6
    4e64:	bl	47d8 <gen_cmp>
    4e68:	pop	{r4, pc}

00004e6c <sf_gen_portop6>:
    4e6c:	push	{r4, r5, r6, r7, r8, lr}
    4e70:	mov	r5, r0
    4e74:	mov	r4, r2
    4e78:	mov	r3, r1
    4e7c:	mov	r2, #16
    4e80:	mov	r1, #6
    4e84:	mov	r0, #3
    4e88:	bl	47d8 <gen_cmp>
    4e8c:	mov	r6, r0
    4e90:	cmp	r4, #4
    4e94:	addls	pc, pc, r4, lsl #2
    4e98:	b	4f48 <sf_gen_portop6+0xdc>
    4e9c:	b	4ee8 <sf_gen_portop6+0x7c>
    4ea0:	b	4eb0 <sf_gen_portop6+0x44>
    4ea4:	b	4ed4 <sf_gen_portop6+0x68>
    4ea8:	b	4ee8 <sf_gen_portop6+0x7c>
    4eac:	b	4f18 <sf_gen_portop6+0xac>
    4eb0:	mov	r1, r5
    4eb4:	mov	r0, #0
    4eb8:	bl	4e50 <gen_portatom6>
    4ebc:	mov	r4, r0
    4ec0:	mov	r1, r4
    4ec4:	mov	r0, r6
    4ec8:	bl	399c <sf_gen_and>
    4ecc:	mov	r0, r4
    4ed0:	pop	{r4, r5, r6, r7, r8, pc}
    4ed4:	mov	r1, r5
    4ed8:	mov	r0, #2
    4edc:	bl	4e50 <gen_portatom6>
    4ee0:	mov	r4, r0
    4ee4:	b	4ec0 <sf_gen_portop6+0x54>
    4ee8:	mov	r1, r5
    4eec:	mov	r0, #0
    4ef0:	bl	4e50 <gen_portatom6>
    4ef4:	mov	r7, r0
    4ef8:	mov	r1, r5
    4efc:	mov	r0, #2
    4f00:	bl	4e50 <gen_portatom6>
    4f04:	mov	r4, r0
    4f08:	mov	r1, r0
    4f0c:	mov	r0, r7
    4f10:	bl	3a20 <sf_gen_or>
    4f14:	b	4ec0 <sf_gen_portop6+0x54>
    4f18:	mov	r1, r5
    4f1c:	mov	r0, #0
    4f20:	bl	4e50 <gen_portatom6>
    4f24:	mov	r7, r0
    4f28:	mov	r1, r5
    4f2c:	mov	r0, #2
    4f30:	bl	4e50 <gen_portatom6>
    4f34:	mov	r4, r0
    4f38:	mov	r1, r0
    4f3c:	mov	r0, r7
    4f40:	bl	399c <sf_gen_and>
    4f44:	b	4ec0 <sf_gen_portop6+0x54>
    4f48:	bl	f18 <abort@plt>

00004f4c <sf_gen_portop>:
    4f4c:	push	{r4, r5, r6, r7, r8, lr}
    4f50:	mov	r6, r0
    4f54:	mov	r4, r2
    4f58:	mov	r3, r1
    4f5c:	mov	r2, #16
    4f60:	mov	r1, #9
    4f64:	mov	r0, #3
    4f68:	bl	47d8 <gen_cmp>
    4f6c:	mov	r7, r0
    4f70:	bl	45d0 <gen_ipfrag>
    4f74:	mov	r5, r0
    4f78:	mov	r1, r0
    4f7c:	mov	r0, r7
    4f80:	bl	399c <sf_gen_and>
    4f84:	cmp	r4, #4
    4f88:	addls	pc, pc, r4, lsl #2
    4f8c:	b	503c <sf_gen_portop+0xf0>
    4f90:	b	4fdc <sf_gen_portop+0x90>
    4f94:	b	4fa4 <sf_gen_portop+0x58>
    4f98:	b	4fc8 <sf_gen_portop+0x7c>
    4f9c:	b	4fdc <sf_gen_portop+0x90>
    4fa0:	b	500c <sf_gen_portop+0xc0>
    4fa4:	mov	r1, r6
    4fa8:	mov	r0, #0
    4fac:	bl	4e34 <gen_portatom>
    4fb0:	mov	r4, r0
    4fb4:	mov	r1, r4
    4fb8:	mov	r0, r5
    4fbc:	bl	399c <sf_gen_and>
    4fc0:	mov	r0, r4
    4fc4:	pop	{r4, r5, r6, r7, r8, pc}
    4fc8:	mov	r1, r6
    4fcc:	mov	r0, #2
    4fd0:	bl	4e34 <gen_portatom>
    4fd4:	mov	r4, r0
    4fd8:	b	4fb4 <sf_gen_portop+0x68>
    4fdc:	mov	r1, r6
    4fe0:	mov	r0, #0
    4fe4:	bl	4e34 <gen_portatom>
    4fe8:	mov	r7, r0
    4fec:	mov	r1, r6
    4ff0:	mov	r0, #2
    4ff4:	bl	4e34 <gen_portatom>
    4ff8:	mov	r4, r0
    4ffc:	mov	r1, r0
    5000:	mov	r0, r7
    5004:	bl	3a20 <sf_gen_or>
    5008:	b	4fb4 <sf_gen_portop+0x68>
    500c:	mov	r1, r6
    5010:	mov	r0, #0
    5014:	bl	4e34 <gen_portatom>
    5018:	mov	r7, r0
    501c:	mov	r1, r6
    5020:	mov	r0, #2
    5024:	bl	4e34 <gen_portatom>
    5028:	mov	r4, r0
    502c:	mov	r1, r0
    5030:	mov	r0, r7
    5034:	bl	399c <sf_gen_and>
    5038:	b	4fb4 <sf_gen_portop+0x68>
    503c:	bl	f18 <abort@plt>

00005040 <gen_cmp_gt>:
    5040:	push	{lr}		; (str lr, [sp, #-4]!)
    5044:	sub	sp, sp, #20
    5048:	str	r3, [sp, #8]
    504c:	mov	r3, #0
    5050:	str	r3, [sp, #4]
    5054:	mov	r3, #32
    5058:	str	r3, [sp]
    505c:	mvn	r3, #0
    5060:	bl	4630 <gen_ncmp>
    5064:	add	sp, sp, #20
    5068:	pop	{pc}		; (ldr pc, [sp], #4)

0000506c <gen_ether_linktype>:
    506c:	push	{r4, r5, r6, r7, r8, lr}
    5070:	mov	r4, r0
    5074:	cmp	r0, #240	; 0xf0
    5078:	beq	518c <gen_ether_linktype+0x120>
    507c:	bgt	513c <gen_ether_linktype+0xd0>
    5080:	cmp	r0, #6
    5084:	beq	518c <gen_ether_linktype+0x120>
    5088:	cmp	r0, #224	; 0xe0
    508c:	bne	515c <gen_ether_linktype+0xf0>
    5090:	mov	r3, #224	; 0xe0
    5094:	mov	r2, #16
    5098:	mov	r1, #0
    509c:	mov	r0, #2
    50a0:	bl	47d8 <gen_cmp>
    50a4:	mov	r4, r0
    50a8:	ldr	r3, [pc, #532]	; 52c4 <gen_ether_linktype+0x258>
    50ac:	mov	r2, #8
    50b0:	mov	r1, #0
    50b4:	mov	r0, #2
    50b8:	bl	47d8 <gen_cmp>
    50bc:	mov	r5, r0
    50c0:	mov	r1, r0
    50c4:	mov	r0, r4
    50c8:	bl	3a20 <sf_gen_or>
    50cc:	ldr	r6, [pc, #500]	; 52c8 <gen_ether_linktype+0x25c>
    50d0:	mov	r1, r6
    50d4:	mov	r0, #0
    50d8:	bl	4958 <gen_snap>
    50dc:	mov	r1, r5
    50e0:	bl	3a20 <sf_gen_or>
    50e4:	ldr	r3, [pc, #480]	; 52cc <gen_ether_linktype+0x260>
    50e8:	add	r3, pc, r3
    50ec:	ldr	r4, [r3, #944]	; 0x3b0
    50f0:	ldr	r3, [pc, #472]	; 52d0 <gen_ether_linktype+0x264>
    50f4:	mov	r2, #8
    50f8:	mov	r1, r4
    50fc:	mov	r0, #1
    5100:	bl	5040 <gen_cmp_gt>
    5104:	ldr	r3, [r0, #44]	; 0x2c
    5108:	clz	r3, r3
    510c:	lsr	r3, r3, #5
    5110:	str	r3, [r0, #44]	; 0x2c
    5114:	mov	r1, r5
    5118:	bl	399c <sf_gen_and>
    511c:	mov	r3, r6
    5120:	mov	r2, #8
    5124:	mov	r1, r4
    5128:	mov	r0, #1
    512c:	bl	47d8 <gen_cmp>
    5130:	mov	r1, r5
    5134:	bl	3a20 <sf_gen_or>
    5138:	b	51e0 <gen_ether_linktype+0x174>
    513c:	ldr	r3, [pc, #400]	; 52d4 <gen_ether_linktype+0x268>
    5140:	cmp	r0, r3
    5144:	beq	51e8 <gen_ether_linktype+0x17c>
    5148:	add	r3, r3, #88	; 0x58
    514c:	cmp	r0, r3
    5150:	beq	51e8 <gen_ether_linktype+0x17c>
    5154:	cmp	r0, #254	; 0xfe
    5158:	beq	518c <gen_ether_linktype+0x120>
    515c:	ldr	r3, [pc, #364]	; 52d0 <gen_ether_linktype+0x264>
    5160:	cmp	r4, r3
    5164:	ble	5268 <gen_ether_linktype+0x1fc>
    5168:	mov	r3, r4
    516c:	mov	r2, #8
    5170:	ldr	r1, [pc, #352]	; 52d8 <gen_ether_linktype+0x26c>
    5174:	add	r1, pc, r1
    5178:	ldr	r1, [r1, #944]	; 0x3b0
    517c:	mov	r0, #1
    5180:	bl	47d8 <gen_cmp>
    5184:	mov	r5, r0
    5188:	b	51e0 <gen_ether_linktype+0x174>
    518c:	ldr	r3, [pc, #316]	; 52d0 <gen_ether_linktype+0x264>
    5190:	mov	r2, #8
    5194:	ldr	r1, [pc, #320]	; 52dc <gen_ether_linktype+0x270>
    5198:	add	r1, pc, r1
    519c:	ldr	r1, [r1, #944]	; 0x3b0
    51a0:	mov	r0, #1
    51a4:	bl	5040 <gen_cmp_gt>
    51a8:	mov	r6, r0
    51ac:	ldr	r3, [r0, #44]	; 0x2c
    51b0:	clz	r3, r3
    51b4:	lsr	r3, r3, #5
    51b8:	str	r3, [r0, #44]	; 0x2c
    51bc:	orr	r3, r4, r4, lsl #8
    51c0:	mov	r2, #8
    51c4:	mov	r1, #0
    51c8:	mov	r0, #2
    51cc:	bl	47d8 <gen_cmp>
    51d0:	mov	r5, r0
    51d4:	mov	r1, r0
    51d8:	mov	r0, r6
    51dc:	bl	399c <sf_gen_and>
    51e0:	mov	r0, r5
    51e4:	pop	{r4, r5, r6, r7, r8, pc}
    51e8:	ldr	r3, [pc, #240]	; 52e0 <gen_ether_linktype+0x274>
    51ec:	add	r3, pc, r3
    51f0:	ldr	r7, [r3, #944]	; 0x3b0
    51f4:	ldr	r3, [pc, #212]	; 52d0 <gen_ether_linktype+0x264>
    51f8:	mov	r2, #8
    51fc:	mov	r1, r7
    5200:	mov	r0, #1
    5204:	bl	5040 <gen_cmp_gt>
    5208:	mov	r6, r0
    520c:	ldr	r3, [r0, #44]	; 0x2c
    5210:	clz	r3, r3
    5214:	lsr	r3, r3, #5
    5218:	str	r3, [r0, #44]	; 0x2c
    521c:	ldr	r3, [pc, #176]	; 52d4 <gen_ether_linktype+0x268>
    5220:	cmp	r4, r3
    5224:	moveq	r1, r3
    5228:	ldreq	r0, [pc, #180]	; 52e4 <gen_ether_linktype+0x278>
    522c:	ldrne	r1, [pc, #180]	; 52e8 <gen_ether_linktype+0x27c>
    5230:	movne	r0, #0
    5234:	bl	4958 <gen_snap>
    5238:	mov	r5, r0
    523c:	mov	r1, r0
    5240:	mov	r0, r6
    5244:	bl	399c <sf_gen_and>
    5248:	mov	r3, r4
    524c:	mov	r2, #8
    5250:	mov	r1, r7
    5254:	mov	r0, #1
    5258:	bl	47d8 <gen_cmp>
    525c:	mov	r1, r5
    5260:	bl	3a20 <sf_gen_or>
    5264:	b	51e0 <gen_ether_linktype+0x174>
    5268:	ldr	r3, [pc, #124]	; 52ec <gen_ether_linktype+0x280>
    526c:	add	r3, pc, r3
    5270:	ldr	r5, [r3, #944]	; 0x3b0
    5274:	ldr	r3, [pc, #84]	; 52d0 <gen_ether_linktype+0x264>
    5278:	mov	r2, #8
    527c:	mov	r1, r5
    5280:	mov	r0, #1
    5284:	bl	5040 <gen_cmp_gt>
    5288:	mov	r6, r0
    528c:	ldr	r3, [r0, #44]	; 0x2c
    5290:	clz	r3, r3
    5294:	lsr	r3, r3, #5
    5298:	str	r3, [r0, #44]	; 0x2c
    529c:	mov	r3, r4
    52a0:	mov	r2, #16
    52a4:	add	r1, r5, #2
    52a8:	mov	r0, #1
    52ac:	bl	47d8 <gen_cmp>
    52b0:	mov	r5, r0
    52b4:	mov	r1, r0
    52b8:	mov	r0, r6
    52bc:	bl	399c <sf_gen_and>
    52c0:	b	51e0 <gen_ether_linktype+0x174>
    52c4:	.word	0x0000ffff
    52c8:	.word	0x00008137
    52cc:	.word	0x0002c280
    52d0:	.word	0x000005dc
    52d4:	.word	0x0000809b
    52d8:	.word	0x0002c1f4
    52dc:	.word	0x0002c1d0
    52e0:	.word	0x0002c17c
    52e4:	.word	0x00080007
    52e8:	.word	0x000080f3
    52ec:	.word	0x0002c0fc

000052f0 <gen_mcmp>:
    52f0:	push	{lr}		; (str lr, [sp, #-4]!)
    52f4:	sub	sp, sp, #20
    52f8:	str	r3, [sp, #8]
    52fc:	mov	r3, #0
    5300:	str	r3, [sp, #4]
    5304:	mov	r3, #16
    5308:	str	r3, [sp]
    530c:	ldr	r3, [sp, #24]
    5310:	bl	4630 <gen_ncmp>
    5314:	add	sp, sp, #20
    5318:	pop	{pc}		; (ldr pc, [sp], #4)

0000531c <gen_wlanhostop>:
    531c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5320:	sub	sp, sp, #8
    5324:	mov	r5, r0
    5328:	cmp	r1, #8
    532c:	addls	pc, pc, r1, lsl #2
    5330:	b	5948 <gen_wlanhostop+0x62c>
    5334:	b	591c <gen_wlanhostop+0x600>
    5338:	b	5358 <gen_wlanhostop+0x3c>
    533c:	b	55b8 <gen_wlanhostop+0x29c>
    5340:	b	591c <gen_wlanhostop+0x600>
    5344:	b	58f0 <gen_wlanhostop+0x5d4>
    5348:	b	576c <gen_wlanhostop+0x450>
    534c:	b	5788 <gen_wlanhostop+0x46c>
    5350:	b	5854 <gen_wlanhostop+0x538>
    5354:	b	58ac <gen_wlanhostop+0x590>
    5358:	mov	r1, #16
    535c:	mov	r0, #1
    5360:	bl	43bc <gen_load_llrel>
    5364:	mov	r4, r0
    5368:	mov	r0, #208	; 0xd0
    536c:	bl	22f0 <newchunk>
    5370:	mov	r7, r0
    5374:	mov	r8, #69	; 0x45
    5378:	str	r8, [r0, #8]
    537c:	str	r0, [r7, #96]	; 0x60
    5380:	mov	r6, #1
    5384:	str	r6, [r0, #20]
    5388:	str	r4, [r0, #4]
    538c:	mov	r3, r5
    5390:	mov	r2, #6
    5394:	mov	r1, #24
    5398:	mov	r0, r6
    539c:	bl	4804 <gen_bcmp>
    53a0:	mov	r4, r0
    53a4:	mov	r1, r0
    53a8:	mov	r0, r7
    53ac:	bl	399c <sf_gen_and>
    53b0:	mov	r1, #16
    53b4:	mov	r0, r6
    53b8:	bl	43bc <gen_load_llrel>
    53bc:	mov	r9, r0
    53c0:	mov	r0, #208	; 0xd0
    53c4:	bl	22f0 <newchunk>
    53c8:	mov	r7, r0
    53cc:	str	r8, [r0, #8]
    53d0:	str	r0, [r7, #96]	; 0x60
    53d4:	str	r6, [r0, #20]
    53d8:	str	r9, [r0, #4]
    53dc:	ldr	r3, [r0, #44]	; 0x2c
    53e0:	clz	r3, r3
    53e4:	lsr	r3, r3, #5
    53e8:	str	r3, [r0, #44]	; 0x2c
    53ec:	mov	r3, r5
    53f0:	mov	r2, #6
    53f4:	mov	r1, #16
    53f8:	mov	r0, r6
    53fc:	bl	4804 <gen_bcmp>
    5400:	mov	r9, r0
    5404:	mov	r1, r0
    5408:	mov	r0, r7
    540c:	bl	399c <sf_gen_and>
    5410:	mov	r1, r4
    5414:	mov	r0, r9
    5418:	bl	3a20 <sf_gen_or>
    541c:	mov	r1, #16
    5420:	mov	r0, r6
    5424:	bl	43bc <gen_load_llrel>
    5428:	mov	r7, r0
    542c:	mov	r0, #208	; 0xd0
    5430:	bl	22f0 <newchunk>
    5434:	mov	r3, r0
    5438:	str	r8, [r0, #8]
    543c:	str	r0, [r3, #96]	; 0x60
    5440:	mov	r9, #2
    5444:	str	r9, [r0, #20]
    5448:	str	r7, [r0, #4]
    544c:	mov	r1, r4
    5450:	bl	399c <sf_gen_and>
    5454:	mov	r1, #16
    5458:	mov	r0, r6
    545c:	bl	43bc <gen_load_llrel>
    5460:	mov	sl, r0
    5464:	mov	r0, #208	; 0xd0
    5468:	bl	22f0 <newchunk>
    546c:	mov	r7, r0
    5470:	str	r8, [r0, #8]
    5474:	str	r0, [r7, #96]	; 0x60
    5478:	str	r9, [r0, #20]
    547c:	str	sl, [r0, #4]
    5480:	ldr	r3, [r0, #44]	; 0x2c
    5484:	clz	r3, r3
    5488:	lsr	r3, r3, #5
    548c:	str	r3, [r0, #44]	; 0x2c
    5490:	mov	r3, r5
    5494:	mov	r2, #6
    5498:	mov	r1, #10
    549c:	mov	r0, r6
    54a0:	bl	4804 <gen_bcmp>
    54a4:	mov	r9, r0
    54a8:	mov	r1, r0
    54ac:	mov	r0, r7
    54b0:	bl	399c <sf_gen_and>
    54b4:	mov	r1, r4
    54b8:	mov	r0, r9
    54bc:	bl	3a20 <sf_gen_or>
    54c0:	mov	r1, #16
    54c4:	mov	r0, #0
    54c8:	bl	43bc <gen_load_llrel>
    54cc:	mov	r7, r0
    54d0:	mov	r0, #208	; 0xd0
    54d4:	bl	22f0 <newchunk>
    54d8:	mov	r3, r0
    54dc:	str	r8, [r0, #8]
    54e0:	str	r0, [r3, #96]	; 0x60
    54e4:	mov	r9, #8
    54e8:	str	r9, [r0, #20]
    54ec:	str	r7, [r0, #4]
    54f0:	mov	r1, r4
    54f4:	bl	399c <sf_gen_and>
    54f8:	mov	r1, #16
    54fc:	mov	r0, #0
    5500:	bl	43bc <gen_load_llrel>
    5504:	mov	sl, r0
    5508:	mov	r0, #208	; 0xd0
    550c:	bl	22f0 <newchunk>
    5510:	mov	r7, r0
    5514:	str	r8, [r0, #8]
    5518:	str	r0, [r7, #96]	; 0x60
    551c:	str	r9, [r0, #20]
    5520:	str	sl, [r0, #4]
    5524:	ldr	r3, [r0, #44]	; 0x2c
    5528:	clz	r3, r3
    552c:	lsr	r3, r3, #5
    5530:	str	r3, [r0, #44]	; 0x2c
    5534:	mov	r3, r5
    5538:	mov	r2, #6
    553c:	mov	r1, #10
    5540:	mov	r0, r6
    5544:	bl	4804 <gen_bcmp>
    5548:	mov	r5, r0
    554c:	mov	r1, r0
    5550:	mov	r0, r7
    5554:	bl	399c <sf_gen_and>
    5558:	mov	r1, r4
    555c:	mov	r0, r5
    5560:	bl	3a20 <sf_gen_or>
    5564:	mov	r1, #16
    5568:	mov	r0, #0
    556c:	bl	43bc <gen_load_llrel>
    5570:	mov	r5, r0
    5574:	mov	r0, #208	; 0xd0
    5578:	bl	22f0 <newchunk>
    557c:	mov	r3, r0
    5580:	str	r8, [r0, #8]
    5584:	str	r0, [r3, #96]	; 0x60
    5588:	mov	r2, #4
    558c:	str	r2, [r0, #20]
    5590:	str	r5, [r0, #4]
    5594:	ldr	r2, [r0, #44]	; 0x2c
    5598:	clz	r2, r2
    559c:	lsr	r2, r2, #5
    55a0:	str	r2, [r0, #44]	; 0x2c
    55a4:	mov	r1, r4
    55a8:	bl	399c <sf_gen_and>
    55ac:	mov	r0, r4
    55b0:	add	sp, sp, #8
    55b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    55b8:	mov	r1, #16
    55bc:	mov	r0, #1
    55c0:	bl	43bc <gen_load_llrel>
    55c4:	mov	r4, r0
    55c8:	mov	r0, #208	; 0xd0
    55cc:	bl	22f0 <newchunk>
    55d0:	mov	r6, r0
    55d4:	mov	r8, #69	; 0x45
    55d8:	str	r8, [r0, #8]
    55dc:	str	r0, [r6, #96]	; 0x60
    55e0:	mov	r7, #1
    55e4:	str	r7, [r0, #20]
    55e8:	str	r4, [r0, #4]
    55ec:	mov	r3, r5
    55f0:	mov	r2, #6
    55f4:	mov	r1, #16
    55f8:	mov	r0, r7
    55fc:	bl	4804 <gen_bcmp>
    5600:	mov	r4, r0
    5604:	mov	r1, r0
    5608:	mov	r0, r6
    560c:	bl	399c <sf_gen_and>
    5610:	mov	r1, #16
    5614:	mov	r0, r7
    5618:	bl	43bc <gen_load_llrel>
    561c:	mov	r9, r0
    5620:	mov	r0, #208	; 0xd0
    5624:	bl	22f0 <newchunk>
    5628:	mov	r6, r0
    562c:	str	r8, [r0, #8]
    5630:	str	r0, [r6, #96]	; 0x60
    5634:	str	r7, [r0, #20]
    5638:	str	r9, [r0, #4]
    563c:	ldr	r3, [r0, #44]	; 0x2c
    5640:	clz	r3, r3
    5644:	lsr	r3, r3, #5
    5648:	str	r3, [r0, #44]	; 0x2c
    564c:	mov	r3, r5
    5650:	mov	r2, #6
    5654:	mov	r1, #4
    5658:	mov	r0, r7
    565c:	bl	4804 <gen_bcmp>
    5660:	mov	r9, r0
    5664:	mov	r1, r0
    5668:	mov	r0, r6
    566c:	bl	399c <sf_gen_and>
    5670:	mov	r1, r4
    5674:	mov	r0, r9
    5678:	bl	3a20 <sf_gen_or>
    567c:	mov	r1, #16
    5680:	mov	r0, #0
    5684:	bl	43bc <gen_load_llrel>
    5688:	mov	r6, r0
    568c:	mov	r0, #208	; 0xd0
    5690:	bl	22f0 <newchunk>
    5694:	mov	r3, r0
    5698:	str	r8, [r0, #8]
    569c:	str	r0, [r3, #96]	; 0x60
    56a0:	mov	r9, #8
    56a4:	str	r9, [r0, #20]
    56a8:	str	r6, [r0, #4]
    56ac:	mov	r1, r4
    56b0:	bl	399c <sf_gen_and>
    56b4:	mov	r1, #16
    56b8:	mov	r0, #0
    56bc:	bl	43bc <gen_load_llrel>
    56c0:	mov	sl, r0
    56c4:	mov	r0, #208	; 0xd0
    56c8:	bl	22f0 <newchunk>
    56cc:	mov	r6, r0
    56d0:	str	r8, [r0, #8]
    56d4:	str	r0, [r6, #96]	; 0x60
    56d8:	str	r9, [r0, #20]
    56dc:	str	sl, [r0, #4]
    56e0:	ldr	r3, [r0, #44]	; 0x2c
    56e4:	clz	r3, r3
    56e8:	lsr	r3, r3, #5
    56ec:	str	r3, [r0, #44]	; 0x2c
    56f0:	mov	r3, r5
    56f4:	mov	r2, #6
    56f8:	mov	r1, #4
    56fc:	mov	r0, r7
    5700:	bl	4804 <gen_bcmp>
    5704:	mov	r5, r0
    5708:	mov	r1, r0
    570c:	mov	r0, r6
    5710:	bl	399c <sf_gen_and>
    5714:	mov	r1, r4
    5718:	mov	r0, r5
    571c:	bl	3a20 <sf_gen_or>
    5720:	mov	r1, #16
    5724:	mov	r0, #0
    5728:	bl	43bc <gen_load_llrel>
    572c:	mov	r5, r0
    5730:	mov	r0, #208	; 0xd0
    5734:	bl	22f0 <newchunk>
    5738:	mov	r3, r0
    573c:	str	r8, [r0, #8]
    5740:	str	r0, [r3, #96]	; 0x60
    5744:	mov	r2, #4
    5748:	str	r2, [r0, #20]
    574c:	str	r5, [r0, #4]
    5750:	ldr	r2, [r0, #44]	; 0x2c
    5754:	clz	r2, r2
    5758:	lsr	r2, r2, #5
    575c:	str	r2, [r0, #44]	; 0x2c
    5760:	mov	r1, r4
    5764:	bl	399c <sf_gen_and>
    5768:	b	55ac <gen_wlanhostop+0x290>
    576c:	mov	r3, r0
    5770:	mov	r2, #6
    5774:	mov	r1, #4
    5778:	mov	r0, #1
    577c:	bl	4804 <gen_bcmp>
    5780:	mov	r4, r0
    5784:	b	55ac <gen_wlanhostop+0x290>
    5788:	mov	r3, #12
    578c:	str	r3, [sp]
    5790:	mov	r3, #4
    5794:	mov	r2, #16
    5798:	mov	r1, #0
    579c:	mov	r0, #1
    57a0:	bl	52f0 <gen_mcmp>
    57a4:	mov	r4, r0
    57a8:	ldr	r3, [r0, #44]	; 0x2c
    57ac:	clz	r3, r3
    57b0:	lsr	r3, r3, #5
    57b4:	str	r3, [r0, #44]	; 0x2c
    57b8:	mov	r6, #240	; 0xf0
    57bc:	str	r6, [sp]
    57c0:	mov	r3, #192	; 0xc0
    57c4:	mov	r2, #16
    57c8:	mov	r1, #0
    57cc:	mov	r0, #1
    57d0:	bl	52f0 <gen_mcmp>
    57d4:	mov	r7, r0
    57d8:	ldr	r3, [r0, #44]	; 0x2c
    57dc:	clz	r3, r3
    57e0:	lsr	r3, r3, #5
    57e4:	str	r3, [r0, #44]	; 0x2c
    57e8:	str	r6, [sp]
    57ec:	mov	r3, #208	; 0xd0
    57f0:	mov	r2, #16
    57f4:	mov	r1, #0
    57f8:	mov	r0, #1
    57fc:	bl	52f0 <gen_mcmp>
    5800:	mov	r6, r0
    5804:	ldr	r3, [r0, #44]	; 0x2c
    5808:	clz	r3, r3
    580c:	lsr	r3, r3, #5
    5810:	str	r3, [r0, #44]	; 0x2c
    5814:	mov	r1, r0
    5818:	mov	r0, r7
    581c:	bl	399c <sf_gen_and>
    5820:	mov	r1, r6
    5824:	mov	r0, r4
    5828:	bl	3a20 <sf_gen_or>
    582c:	mov	r3, r5
    5830:	mov	r2, #6
    5834:	mov	r1, #10
    5838:	mov	r0, #1
    583c:	bl	4804 <gen_bcmp>
    5840:	mov	r4, r0
    5844:	mov	r1, r0
    5848:	mov	r0, r6
    584c:	bl	399c <sf_gen_and>
    5850:	b	55ac <gen_wlanhostop+0x290>
    5854:	mov	r3, #12
    5858:	str	r3, [sp]
    585c:	mov	r3, #4
    5860:	mov	r2, #16
    5864:	mov	r1, #0
    5868:	mov	r0, #1
    586c:	bl	52f0 <gen_mcmp>
    5870:	mov	r6, r0
    5874:	ldr	r3, [r0, #44]	; 0x2c
    5878:	clz	r3, r3
    587c:	lsr	r3, r3, #5
    5880:	str	r3, [r0, #44]	; 0x2c
    5884:	mov	r3, r5
    5888:	mov	r2, #6
    588c:	mov	r1, #16
    5890:	mov	r0, #1
    5894:	bl	4804 <gen_bcmp>
    5898:	mov	r4, r0
    589c:	mov	r1, r0
    58a0:	mov	r0, r6
    58a4:	bl	399c <sf_gen_and>
    58a8:	b	55ac <gen_wlanhostop+0x290>
    58ac:	mov	r3, #3
    58b0:	str	r3, [sp]
    58b4:	mov	r2, #16
    58b8:	mov	r1, #1
    58bc:	mov	r0, r1
    58c0:	bl	52f0 <gen_mcmp>
    58c4:	mov	r6, r0
    58c8:	mov	r3, r5
    58cc:	mov	r2, #6
    58d0:	mov	r1, #24
    58d4:	mov	r0, #1
    58d8:	bl	4804 <gen_bcmp>
    58dc:	mov	r4, r0
    58e0:	mov	r1, r0
    58e4:	mov	r0, r6
    58e8:	bl	399c <sf_gen_and>
    58ec:	b	55ac <gen_wlanhostop+0x290>
    58f0:	mov	r1, #1
    58f4:	bl	531c <gen_wlanhostop>
    58f8:	mov	r6, r0
    58fc:	mov	r1, #2
    5900:	mov	r0, r5
    5904:	bl	531c <gen_wlanhostop>
    5908:	mov	r4, r0
    590c:	mov	r1, r0
    5910:	mov	r0, r6
    5914:	bl	399c <sf_gen_and>
    5918:	b	55ac <gen_wlanhostop+0x290>
    591c:	mov	r1, #1
    5920:	bl	531c <gen_wlanhostop>
    5924:	mov	r6, r0
    5928:	mov	r1, #2
    592c:	mov	r0, r5
    5930:	bl	531c <gen_wlanhostop>
    5934:	mov	r4, r0
    5938:	mov	r1, r0
    593c:	mov	r0, r6
    5940:	bl	3a20 <sf_gen_or>
    5944:	b	55ac <gen_wlanhostop+0x290>
    5948:	bl	f18 <abort@plt>

0000594c <sf_gen_ecode>:
    594c:	push	{r4, r5, r6, lr}
    5950:	sub	sp, sp, #8
    5954:	lsr	r3, r1, #16
    5958:	str	r1, [sp, #4]
    595c:	uxtb	r1, r1
    5960:	cmp	r1, #1
    5964:	bhi	5aa8 <sf_gen_ecode+0x15c>
    5968:	mov	r5, r0
    596c:	uxtb	r4, r3
    5970:	ldrb	r3, [sp, #5]
    5974:	cmp	r3, #1
    5978:	bne	5aa8 <sf_gen_ecode+0x15c>
    597c:	ldr	r3, [pc, #304]	; 5ab4 <sf_gen_ecode+0x168>
    5980:	add	r3, pc, r3
    5984:	ldr	r3, [r3, #852]	; 0x354
    5988:	cmp	r3, #119	; 0x77
    598c:	beq	5a74 <sf_gen_ecode+0x128>
    5990:	bgt	59ec <sf_gen_ecode+0xa0>
    5994:	cmp	r3, #6
    5998:	beq	5a88 <sf_gen_ecode+0x13c>
    599c:	ble	59b8 <sf_gen_ecode+0x6c>
    59a0:	cmp	r3, #10
    59a4:	bne	59d8 <sf_gen_ecode+0x8c>
    59a8:	mov	r1, r4
    59ac:	bl	49b0 <gen_fhostop>
    59b0:	mov	r4, r0
    59b4:	b	59cc <sf_gen_ecode+0x80>
    59b8:	cmp	r3, #1
    59bc:	bne	59e0 <sf_gen_ecode+0x94>
    59c0:	mov	r1, r4
    59c4:	bl	4bf0 <gen_ehostop>
    59c8:	mov	r4, r0
    59cc:	mov	r0, r4
    59d0:	add	sp, sp, #8
    59d4:	pop	{r4, r5, r6, pc}
    59d8:	cmp	r3, #105	; 0x69
    59dc:	beq	5a74 <sf_gen_ecode+0x128>
    59e0:	ldr	r0, [pc, #208]	; 5ab8 <sf_gen_ecode+0x16c>
    59e4:	add	r0, pc, r0
    59e8:	bl	22b4 <sf_bpf_error>
    59ec:	cmp	r3, #127	; 0x7f
    59f0:	beq	5a74 <sf_gen_ecode+0x128>
    59f4:	bgt	5a64 <sf_gen_ecode+0x118>
    59f8:	cmp	r3, #122	; 0x7a
    59fc:	beq	5a98 <sf_gen_ecode+0x14c>
    5a00:	cmp	r3, #123	; 0x7b
    5a04:	bne	59e0 <sf_gen_ecode+0x94>
    5a08:	ldr	r3, [pc, #172]	; 5abc <sf_gen_ecode+0x170>
    5a0c:	add	r3, pc, r3
    5a10:	ldr	r3, [r3, #892]	; 0x37c
    5a14:	cmp	r3, #0
    5a18:	beq	5aa8 <sf_gen_ecode+0x15c>
    5a1c:	mov	r3, #65280	; 0xff00
    5a20:	mov	r2, #8
    5a24:	mov	r1, #4
    5a28:	mov	r0, #1
    5a2c:	bl	47d8 <gen_cmp>
    5a30:	mov	r6, r0
    5a34:	ldr	r3, [r0, #44]	; 0x2c
    5a38:	clz	r3, r3
    5a3c:	lsr	r3, r3, #5
    5a40:	str	r3, [r0, #44]	; 0x2c
    5a44:	mov	r1, r4
    5a48:	mov	r0, r5
    5a4c:	bl	4bf0 <gen_ehostop>
    5a50:	mov	r4, r0
    5a54:	mov	r1, r0
    5a58:	mov	r0, r6
    5a5c:	bl	399c <sf_gen_and>
    5a60:	b	59cc <sf_gen_ecode+0x80>
    5a64:	cmp	r3, #163	; 0xa3
    5a68:	beq	5a74 <sf_gen_ecode+0x128>
    5a6c:	cmp	r3, #192	; 0xc0
    5a70:	bne	59e0 <sf_gen_ecode+0x94>
    5a74:	mov	r1, r4
    5a78:	mov	r0, r5
    5a7c:	bl	531c <gen_wlanhostop>
    5a80:	mov	r4, r0
    5a84:	b	59cc <sf_gen_ecode+0x80>
    5a88:	mov	r1, r4
    5a8c:	bl	4a70 <gen_thostop>
    5a90:	mov	r4, r0
    5a94:	b	59cc <sf_gen_ecode+0x80>
    5a98:	mov	r1, r4
    5a9c:	bl	4b30 <gen_ipfchostop>
    5aa0:	mov	r4, r0
    5aa4:	b	59cc <sf_gen_ecode+0x80>
    5aa8:	ldr	r0, [pc, #16]	; 5ac0 <sf_gen_ecode+0x174>
    5aac:	add	r0, pc, r0
    5ab0:	bl	22b4 <sf_bpf_error>
    5ab4:	.word	0x0002b9e8
    5ab8:	.word	0x0000da1c
    5abc:	.word	0x0002b95c
    5ac0:	.word	0x0000d9b0

00005ac4 <gen_portrangeatom>:
    5ac4:	push	{r4, r5, r6, lr}
    5ac8:	sub	sp, sp, #16
    5acc:	mov	r5, r0
    5ad0:	cmp	r1, r2
    5ad4:	movge	r3, r1
    5ad8:	movlt	r3, r2
    5adc:	movge	r1, r2
    5ae0:	mov	r4, r3
    5ae4:	str	r1, [sp, #8]
    5ae8:	mov	r3, #0
    5aec:	str	r3, [sp, #4]
    5af0:	mov	r3, #48	; 0x30
    5af4:	str	r3, [sp]
    5af8:	mvn	r3, #0
    5afc:	mov	r2, #8
    5b00:	mov	r1, r0
    5b04:	mov	r0, #5
    5b08:	bl	4630 <gen_ncmp>
    5b0c:	mov	r6, r0
    5b10:	str	r4, [sp, #8]
    5b14:	mov	r3, #1
    5b18:	str	r3, [sp, #4]
    5b1c:	mov	r3, #32
    5b20:	str	r3, [sp]
    5b24:	mvn	r3, #0
    5b28:	mov	r2, #8
    5b2c:	mov	r1, r5
    5b30:	mov	r0, #5
    5b34:	bl	4630 <gen_ncmp>
    5b38:	mov	r4, r0
    5b3c:	mov	r1, r0
    5b40:	mov	r0, r6
    5b44:	bl	399c <sf_gen_and>
    5b48:	mov	r0, r4
    5b4c:	add	sp, sp, #16
    5b50:	pop	{r4, r5, r6, pc}

00005b54 <sf_gen_portrangeop>:
    5b54:	push	{r4, r5, r6, r7, r8, lr}
    5b58:	mov	r6, r0
    5b5c:	mov	r7, r1
    5b60:	mov	r4, r3
    5b64:	mov	r3, r2
    5b68:	mov	r2, #16
    5b6c:	mov	r1, #9
    5b70:	mov	r0, #3
    5b74:	bl	47d8 <gen_cmp>
    5b78:	mov	r8, r0
    5b7c:	bl	45d0 <gen_ipfrag>
    5b80:	mov	r5, r0
    5b84:	mov	r1, r0
    5b88:	mov	r0, r8
    5b8c:	bl	399c <sf_gen_and>
    5b90:	cmp	r4, #4
    5b94:	addls	pc, pc, r4, lsl #2
    5b98:	b	5c60 <sf_gen_portrangeop+0x10c>
    5b9c:	b	5bf0 <sf_gen_portrangeop+0x9c>
    5ba0:	b	5bb0 <sf_gen_portrangeop+0x5c>
    5ba4:	b	5bd8 <sf_gen_portrangeop+0x84>
    5ba8:	b	5bf0 <sf_gen_portrangeop+0x9c>
    5bac:	b	5c28 <sf_gen_portrangeop+0xd4>
    5bb0:	mov	r2, r7
    5bb4:	mov	r1, r6
    5bb8:	mov	r0, #0
    5bbc:	bl	5ac4 <gen_portrangeatom>
    5bc0:	mov	r4, r0
    5bc4:	mov	r1, r4
    5bc8:	mov	r0, r5
    5bcc:	bl	399c <sf_gen_and>
    5bd0:	mov	r0, r4
    5bd4:	pop	{r4, r5, r6, r7, r8, pc}
    5bd8:	mov	r2, r7
    5bdc:	mov	r1, r6
    5be0:	mov	r0, #2
    5be4:	bl	5ac4 <gen_portrangeatom>
    5be8:	mov	r4, r0
    5bec:	b	5bc4 <sf_gen_portrangeop+0x70>
    5bf0:	mov	r2, r7
    5bf4:	mov	r1, r6
    5bf8:	mov	r0, #0
    5bfc:	bl	5ac4 <gen_portrangeatom>
    5c00:	mov	r8, r0
    5c04:	mov	r2, r7
    5c08:	mov	r1, r6
    5c0c:	mov	r0, #2
    5c10:	bl	5ac4 <gen_portrangeatom>
    5c14:	mov	r4, r0
    5c18:	mov	r1, r0
    5c1c:	mov	r0, r8
    5c20:	bl	3a20 <sf_gen_or>
    5c24:	b	5bc4 <sf_gen_portrangeop+0x70>
    5c28:	mov	r2, r7
    5c2c:	mov	r1, r6
    5c30:	mov	r0, #0
    5c34:	bl	5ac4 <gen_portrangeatom>
    5c38:	mov	r8, r0
    5c3c:	mov	r2, r7
    5c40:	mov	r1, r6
    5c44:	mov	r0, #2
    5c48:	bl	5ac4 <gen_portrangeatom>
    5c4c:	mov	r4, r0
    5c50:	mov	r1, r0
    5c54:	mov	r0, r8
    5c58:	bl	399c <sf_gen_and>
    5c5c:	b	5bc4 <sf_gen_portrangeop+0x70>
    5c60:	bl	f18 <abort@plt>

00005c64 <gen_portrangeatom6>:
    5c64:	push	{r4, r5, r6, lr}
    5c68:	sub	sp, sp, #16
    5c6c:	mov	r5, r0
    5c70:	cmp	r1, r2
    5c74:	movge	r3, r1
    5c78:	movlt	r3, r2
    5c7c:	movge	r1, r2
    5c80:	mov	r4, r3
    5c84:	str	r1, [sp, #8]
    5c88:	mov	r3, #0
    5c8c:	str	r3, [sp, #4]
    5c90:	mov	r3, #48	; 0x30
    5c94:	str	r3, [sp]
    5c98:	mvn	r3, #0
    5c9c:	mov	r2, #8
    5ca0:	mov	r1, r0
    5ca4:	mov	r0, #6
    5ca8:	bl	4630 <gen_ncmp>
    5cac:	mov	r6, r0
    5cb0:	str	r4, [sp, #8]
    5cb4:	mov	r3, #1
    5cb8:	str	r3, [sp, #4]
    5cbc:	mov	r3, #32
    5cc0:	str	r3, [sp]
    5cc4:	mvn	r3, #0
    5cc8:	mov	r2, #8
    5ccc:	mov	r1, r5
    5cd0:	mov	r0, #6
    5cd4:	bl	4630 <gen_ncmp>
    5cd8:	mov	r4, r0
    5cdc:	mov	r1, r0
    5ce0:	mov	r0, r6
    5ce4:	bl	399c <sf_gen_and>
    5ce8:	mov	r0, r4
    5cec:	add	sp, sp, #16
    5cf0:	pop	{r4, r5, r6, pc}

00005cf4 <sf_gen_portrangeop6>:
    5cf4:	push	{r4, r5, r6, r7, r8, lr}
    5cf8:	mov	r5, r0
    5cfc:	mov	r6, r1
    5d00:	mov	r4, r3
    5d04:	mov	r3, r2
    5d08:	mov	r2, #16
    5d0c:	mov	r1, #6
    5d10:	mov	r0, #3
    5d14:	bl	47d8 <gen_cmp>
    5d18:	mov	r7, r0
    5d1c:	cmp	r4, #4
    5d20:	addls	pc, pc, r4, lsl #2
    5d24:	b	5dec <sf_gen_portrangeop6+0xf8>
    5d28:	b	5d7c <sf_gen_portrangeop6+0x88>
    5d2c:	b	5d3c <sf_gen_portrangeop6+0x48>
    5d30:	b	5d64 <sf_gen_portrangeop6+0x70>
    5d34:	b	5d7c <sf_gen_portrangeop6+0x88>
    5d38:	b	5db4 <sf_gen_portrangeop6+0xc0>
    5d3c:	mov	r2, r6
    5d40:	mov	r1, r5
    5d44:	mov	r0, #0
    5d48:	bl	5c64 <gen_portrangeatom6>
    5d4c:	mov	r4, r0
    5d50:	mov	r1, r4
    5d54:	mov	r0, r7
    5d58:	bl	399c <sf_gen_and>
    5d5c:	mov	r0, r4
    5d60:	pop	{r4, r5, r6, r7, r8, pc}
    5d64:	mov	r2, r6
    5d68:	mov	r1, r5
    5d6c:	mov	r0, #2
    5d70:	bl	5c64 <gen_portrangeatom6>
    5d74:	mov	r4, r0
    5d78:	b	5d50 <sf_gen_portrangeop6+0x5c>
    5d7c:	mov	r2, r6
    5d80:	mov	r1, r5
    5d84:	mov	r0, #0
    5d88:	bl	5c64 <gen_portrangeatom6>
    5d8c:	mov	r8, r0
    5d90:	mov	r2, r6
    5d94:	mov	r1, r5
    5d98:	mov	r0, #2
    5d9c:	bl	5c64 <gen_portrangeatom6>
    5da0:	mov	r4, r0
    5da4:	mov	r1, r0
    5da8:	mov	r0, r8
    5dac:	bl	3a20 <sf_gen_or>
    5db0:	b	5d50 <sf_gen_portrangeop6+0x5c>
    5db4:	mov	r2, r6
    5db8:	mov	r1, r5
    5dbc:	mov	r0, #0
    5dc0:	bl	5c64 <gen_portrangeatom6>
    5dc4:	mov	r8, r0
    5dc8:	mov	r2, r6
    5dcc:	mov	r1, r5
    5dd0:	mov	r0, #2
    5dd4:	bl	5c64 <gen_portrangeatom6>
    5dd8:	mov	r4, r0
    5ddc:	mov	r1, r0
    5de0:	mov	r0, r8
    5de4:	bl	399c <sf_gen_and>
    5de8:	b	5d50 <sf_gen_portrangeop6+0x5c>
    5dec:	bl	f18 <abort@plt>

00005df0 <sf_gen_relation>:
    5df0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5df4:	mov	r7, r0
    5df8:	mov	r6, r1
    5dfc:	mov	r5, r2
    5e00:	mov	sl, r3
    5e04:	mov	r0, r2
    5e08:	bl	2414 <xfer_to_x>
    5e0c:	mov	r8, r0
    5e10:	mov	r0, r6
    5e14:	bl	2438 <xfer_to_a>
    5e18:	mov	r9, r0
    5e1c:	cmp	r7, #16
    5e20:	beq	5ed8 <sf_gen_relation+0xe8>
    5e24:	mov	r0, #208	; 0xd0
    5e28:	bl	22f0 <newchunk>
    5e2c:	mov	r4, r0
    5e30:	orr	r7, r7, #13
    5e34:	str	r7, [r0, #8]
    5e38:	str	r0, [r4, #96]	; 0x60
    5e3c:	cmp	sl, #0
    5e40:	ldrne	r3, [r4, #44]	; 0x2c
    5e44:	clzne	r3, r3
    5e48:	lsrne	r3, r3, #5
    5e4c:	strne	r3, [r4, #44]	; 0x2c
    5e50:	mov	r1, r9
    5e54:	mov	r0, r8
    5e58:	bl	3aa8 <sf_append>
    5e5c:	mov	r1, r8
    5e60:	ldr	r0, [r5, #4]
    5e64:	bl	3aa8 <sf_append>
    5e68:	ldr	r1, [r5, #4]
    5e6c:	ldr	r0, [r6, #4]
    5e70:	bl	3aa8 <sf_append>
    5e74:	ldr	r3, [r6, #4]
    5e78:	str	r3, [r4, #4]
    5e7c:	ldr	r2, [r6, #8]
    5e80:	ldr	r3, [pc, #156]	; 5f24 <sf_gen_relation+0x134>
    5e84:	add	r3, pc, r3
    5e88:	add	r2, r3, r2, lsl #2
    5e8c:	mov	r1, #0
    5e90:	str	r1, [r2, #788]	; 0x314
    5e94:	ldr	r2, [r5, #8]
    5e98:	add	r3, r3, r2, lsl #2
    5e9c:	str	r1, [r3, #788]	; 0x314
    5ea0:	ldr	r0, [r6]
    5ea4:	cmp	r0, r1
    5ea8:	beq	5f14 <sf_gen_relation+0x124>
    5eac:	ldr	r5, [r5]
    5eb0:	cmp	r5, r1
    5eb4:	moveq	r5, r0
    5eb8:	beq	5ec4 <sf_gen_relation+0xd4>
    5ebc:	mov	r1, r5
    5ec0:	bl	399c <sf_gen_and>
    5ec4:	mov	r1, r4
    5ec8:	mov	r0, r5
    5ecc:	bl	399c <sf_gen_and>
    5ed0:	mov	r0, r4
    5ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5ed8:	mov	r0, #20
    5edc:	bl	22f0 <newchunk>
    5ee0:	mov	r7, r0
    5ee4:	mov	r3, #28
    5ee8:	str	r3, [r0]
    5eec:	mov	r0, #208	; 0xd0
    5ef0:	bl	22f0 <newchunk>
    5ef4:	mov	r4, r0
    5ef8:	mov	r3, #21
    5efc:	str	r3, [r0, #8]
    5f00:	str	r0, [r4, #96]	; 0x60
    5f04:	mov	r1, r7
    5f08:	mov	r0, r9
    5f0c:	bl	3aa8 <sf_append>
    5f10:	b	5e3c <sf_gen_relation+0x4c>
    5f14:	ldr	r5, [r5]
    5f18:	cmp	r5, #0
    5f1c:	beq	5ed0 <sf_gen_relation+0xe0>
    5f20:	b	5ec4 <sf_gen_relation+0xd4>
    5f24:	.word	0x0002b4e4

00005f28 <sf_gen_loadlen>:
    5f28:	push	{r4, r5, r6, lr}
    5f2c:	bl	245c <alloc_reg>
    5f30:	mov	r6, r0
    5f34:	mov	r0, #12
    5f38:	bl	22f0 <newchunk>
    5f3c:	mov	r4, r0
    5f40:	mov	r0, #20
    5f44:	bl	22f0 <newchunk>
    5f48:	mov	r5, r0
    5f4c:	mov	r3, #128	; 0x80
    5f50:	str	r3, [r0]
    5f54:	mov	r0, #20
    5f58:	bl	22f0 <newchunk>
    5f5c:	mov	r3, #2
    5f60:	str	r3, [r0]
    5f64:	str	r0, [r5, #16]
    5f68:	str	r6, [r0, #12]
    5f6c:	str	r5, [r4, #4]
    5f70:	str	r6, [r4, #8]
    5f74:	mov	r0, r4
    5f78:	pop	{r4, r5, r6, pc}

00005f7c <sf_gen_loadi>:
    5f7c:	push	{r4, r5, r6, r7, r8, lr}
    5f80:	mov	r7, r0
    5f84:	mov	r0, #12
    5f88:	bl	22f0 <newchunk>
    5f8c:	mov	r5, r0
    5f90:	bl	245c <alloc_reg>
    5f94:	mov	r6, r0
    5f98:	mov	r0, #20
    5f9c:	bl	22f0 <newchunk>
    5fa0:	mov	r4, r0
    5fa4:	mov	r3, #0
    5fa8:	str	r3, [r0]
    5fac:	str	r7, [r0, #12]
    5fb0:	mov	r0, #20
    5fb4:	bl	22f0 <newchunk>
    5fb8:	mov	r3, #2
    5fbc:	str	r3, [r0]
    5fc0:	str	r0, [r4, #16]
    5fc4:	str	r6, [r0, #12]
    5fc8:	str	r4, [r5, #4]
    5fcc:	str	r6, [r5, #8]
    5fd0:	mov	r0, r5
    5fd4:	pop	{r4, r5, r6, r7, r8, pc}

00005fd8 <sf_gen_neg>:
    5fd8:	push	{r4, lr}
    5fdc:	mov	r4, r0
    5fe0:	bl	2438 <xfer_to_a>
    5fe4:	mov	r1, r0
    5fe8:	ldr	r0, [r4, #4]
    5fec:	bl	3aa8 <sf_append>
    5ff0:	mov	r0, #20
    5ff4:	bl	22f0 <newchunk>
    5ff8:	mov	r1, r0
    5ffc:	mov	r3, #132	; 0x84
    6000:	str	r3, [r0]
    6004:	mov	r3, #0
    6008:	str	r3, [r0, #12]
    600c:	ldr	r0, [r4, #4]
    6010:	bl	3aa8 <sf_append>
    6014:	mov	r0, #20
    6018:	bl	22f0 <newchunk>
    601c:	mov	r1, r0
    6020:	mov	r3, #2
    6024:	str	r3, [r0]
    6028:	ldr	r3, [r4, #8]
    602c:	str	r3, [r0, #12]
    6030:	ldr	r0, [r4, #4]
    6034:	bl	3aa8 <sf_append>
    6038:	mov	r0, r4
    603c:	pop	{r4, pc}

00006040 <sf_gen_arth>:
    6040:	push	{r4, r5, r6, r7, r8, lr}
    6044:	mov	r6, r0
    6048:	mov	r4, r1
    604c:	mov	r5, r2
    6050:	mov	r0, r2
    6054:	bl	2414 <xfer_to_x>
    6058:	mov	r7, r0
    605c:	mov	r0, r4
    6060:	bl	2438 <xfer_to_a>
    6064:	mov	r8, r0
    6068:	mov	r0, #20
    606c:	bl	22f0 <newchunk>
    6070:	mov	r1, r0
    6074:	orr	r6, r6, #12
    6078:	str	r6, [r0]
    607c:	mov	r0, r8
    6080:	bl	3aa8 <sf_append>
    6084:	mov	r1, r8
    6088:	mov	r0, r7
    608c:	bl	3aa8 <sf_append>
    6090:	mov	r1, r7
    6094:	ldr	r0, [r5, #4]
    6098:	bl	3aa8 <sf_append>
    609c:	ldr	r1, [r5, #4]
    60a0:	ldr	r0, [r4, #4]
    60a4:	bl	3aa8 <sf_append>
    60a8:	ldr	r2, [r4, #8]
    60ac:	ldr	r3, [pc, #76]	; 6100 <sf_gen_arth+0xc0>
    60b0:	add	r3, pc, r3
    60b4:	add	r2, r3, r2, lsl #2
    60b8:	mov	r1, #0
    60bc:	str	r1, [r2, #788]	; 0x314
    60c0:	ldr	r2, [r5, #8]
    60c4:	add	r3, r3, r2, lsl #2
    60c8:	str	r1, [r3, #788]	; 0x314
    60cc:	mov	r0, #20
    60d0:	bl	22f0 <newchunk>
    60d4:	mov	r5, r0
    60d8:	mov	r3, #2
    60dc:	str	r3, [r0]
    60e0:	bl	245c <alloc_reg>
    60e4:	str	r0, [r5, #12]
    60e8:	str	r0, [r4, #8]
    60ec:	mov	r1, r5
    60f0:	ldr	r0, [r4, #4]
    60f4:	bl	3aa8 <sf_append>
    60f8:	mov	r0, r4
    60fc:	pop	{r4, r5, r6, r7, r8, pc}
    6100:	.word	0x0002b2b8

00006104 <sf_gen_greater>:
    6104:	push	{r4, r5, r6, lr}
    6108:	mov	r5, r0
    610c:	mov	r0, #20
    6110:	bl	22f0 <newchunk>
    6114:	mov	r4, r0
    6118:	mov	r3, #128	; 0x80
    611c:	str	r3, [r0]
    6120:	mov	r0, #208	; 0xd0
    6124:	bl	22f0 <newchunk>
    6128:	mov	r3, r0
    612c:	mov	r2, #53	; 0x35
    6130:	str	r2, [r0, #8]
    6134:	str	r0, [r3, #96]	; 0x60
    6138:	str	r4, [r0, #4]
    613c:	str	r5, [r0, #20]
    6140:	pop	{r4, r5, r6, pc}

00006144 <sf_gen_less>:
    6144:	push	{r4, r5, r6, lr}
    6148:	mov	r5, r0
    614c:	mov	r0, #20
    6150:	bl	22f0 <newchunk>
    6154:	mov	r4, r0
    6158:	mov	r3, #128	; 0x80
    615c:	str	r3, [r0]
    6160:	mov	r0, #208	; 0xd0
    6164:	bl	22f0 <newchunk>
    6168:	mov	r3, r0
    616c:	mov	r2, #37	; 0x25
    6170:	str	r2, [r0, #8]
    6174:	str	r0, [r3, #96]	; 0x60
    6178:	str	r4, [r0, #4]
    617c:	str	r5, [r0, #20]
    6180:	ldr	r2, [r0, #44]	; 0x2c
    6184:	clz	r2, r2
    6188:	lsr	r2, r2, #5
    618c:	str	r2, [r0, #44]	; 0x2c
    6190:	pop	{r4, r5, r6, pc}

00006194 <sf_gen_byteop>:
    6194:	push	{r4, r5, lr}
    6198:	sub	sp, sp, #20
    619c:	mov	r4, r2
    61a0:	cmp	r0, #61	; 0x3d
    61a4:	beq	623c <sf_gen_byteop+0xa8>
    61a8:	bgt	61e0 <sf_gen_byteop+0x4c>
    61ac:	cmp	r0, #38	; 0x26
    61b0:	beq	6264 <sf_gen_byteop+0xd0>
    61b4:	cmp	r0, #60	; 0x3c
    61b8:	bne	6238 <sf_gen_byteop+0xa4>
    61bc:	str	r2, [sp, #8]
    61c0:	mov	r0, #1
    61c4:	str	r0, [sp, #4]
    61c8:	mov	r3, #48	; 0x30
    61cc:	str	r3, [sp]
    61d0:	mvn	r3, #0
    61d4:	mov	r2, #16
    61d8:	bl	4630 <gen_ncmp>
    61dc:	b	6230 <sf_gen_byteop+0x9c>
    61e0:	cmp	r0, #62	; 0x3e
    61e4:	beq	6250 <sf_gen_byteop+0xbc>
    61e8:	cmp	r0, #124	; 0x7c
    61ec:	bne	6238 <sf_gen_byteop+0xa4>
    61f0:	mov	r0, #20
    61f4:	bl	22f0 <newchunk>
    61f8:	mov	r5, r0
    61fc:	mov	r3, #68	; 0x44
    6200:	str	r3, [r0]
    6204:	str	r4, [r5, #12]
    6208:	mov	r0, #208	; 0xd0
    620c:	bl	22f0 <newchunk>
    6210:	mov	r3, #21
    6214:	str	r3, [r0, #8]
    6218:	str	r0, [r0, #96]	; 0x60
    621c:	str	r5, [r0, #4]
    6220:	ldr	r3, [r0, #44]	; 0x2c
    6224:	clz	r3, r3
    6228:	lsr	r3, r3, #5
    622c:	str	r3, [r0, #44]	; 0x2c
    6230:	add	sp, sp, #20
    6234:	pop	{r4, r5, pc}
    6238:	bl	f18 <abort@plt>
    623c:	mov	r3, r2
    6240:	mov	r2, #16
    6244:	mov	r0, #1
    6248:	bl	47d8 <gen_cmp>
    624c:	b	6230 <sf_gen_byteop+0x9c>
    6250:	mov	r3, r2
    6254:	mov	r2, #16
    6258:	mov	r0, #1
    625c:	bl	5040 <gen_cmp_gt>
    6260:	b	6230 <sf_gen_byteop+0x9c>
    6264:	mov	r0, #20
    6268:	bl	22f0 <newchunk>
    626c:	mov	r5, r0
    6270:	mov	r3, #84	; 0x54
    6274:	str	r3, [r0]
    6278:	b	6204 <sf_gen_byteop+0x70>

0000627c <sf_gen_pf_ifname>:
    627c:	push	{r4, lr}
    6280:	ldr	r0, [pc, #4]	; 628c <sf_gen_pf_ifname+0x10>
    6284:	add	r0, pc, r0
    6288:	bl	22b4 <sf_bpf_error>
    628c:	.word	0x0000d208

00006290 <sf_gen_pf_ruleset>:
    6290:	push	{r4, lr}
    6294:	ldr	r0, [pc, #4]	; 62a0 <sf_gen_pf_ruleset+0x10>
    6298:	add	r0, pc, r0
    629c:	bl	22b4 <sf_bpf_error>
    62a0:	.word	0x0000d21c

000062a4 <sf_gen_pf_rnr>:
    62a4:	push	{r4, lr}
    62a8:	ldr	r0, [pc, #4]	; 62b4 <sf_gen_pf_rnr+0x10>
    62ac:	add	r0, pc, r0
    62b0:	bl	22b4 <sf_bpf_error>
    62b4:	.word	0x0000d208

000062b8 <sf_gen_pf_srnr>:
    62b8:	push	{r4, lr}
    62bc:	ldr	r0, [pc, #4]	; 62c8 <sf_gen_pf_srnr+0x10>
    62c0:	add	r0, pc, r0
    62c4:	bl	22b4 <sf_bpf_error>
    62c8:	.word	0x0000d1f4

000062cc <sf_gen_pf_reason>:
    62cc:	push	{r4, lr}
    62d0:	ldr	r0, [pc, #4]	; 62dc <sf_gen_pf_reason+0x10>
    62d4:	add	r0, pc, r0
    62d8:	bl	22b4 <sf_bpf_error>
    62dc:	.word	0x0000d1e0

000062e0 <sf_gen_pf_action>:
    62e0:	push	{r4, lr}
    62e4:	ldr	r0, [pc, #4]	; 62f0 <sf_gen_pf_action+0x10>
    62e8:	add	r0, pc, r0
    62ec:	bl	22b4 <sf_bpf_error>
    62f0:	.word	0x0000d1cc

000062f4 <sf_gen_p80211_type>:
    62f4:	push	{lr}		; (str lr, [sp, #-4]!)
    62f8:	sub	sp, sp, #12
    62fc:	ldr	r2, [pc, #84]	; 6358 <sf_gen_p80211_type+0x64>
    6300:	add	r2, pc, r2
    6304:	ldr	r2, [r2, #852]	; 0x354
    6308:	cmp	r2, #119	; 0x77
    630c:	beq	6338 <sf_gen_p80211_type+0x44>
    6310:	ble	6330 <sf_gen_p80211_type+0x3c>
    6314:	cmp	r2, #127	; 0x7f
    6318:	beq	6338 <sf_gen_p80211_type+0x44>
    631c:	cmp	r2, #163	; 0xa3
    6320:	beq	6338 <sf_gen_p80211_type+0x44>
    6324:	ldr	r0, [pc, #48]	; 635c <sf_gen_p80211_type+0x68>
    6328:	add	r0, pc, r0
    632c:	bl	22b4 <sf_bpf_error>
    6330:	cmp	r2, #105	; 0x69
    6334:	bne	6324 <sf_gen_p80211_type+0x30>
    6338:	str	r1, [sp]
    633c:	mov	r3, r0
    6340:	mov	r2, #16
    6344:	mov	r1, #0
    6348:	mov	r0, #1
    634c:	bl	52f0 <gen_mcmp>
    6350:	add	sp, sp, #12
    6354:	pop	{pc}		; (ldr pc, [sp], #4)
    6358:	.word	0x0002b068
    635c:	.word	0x0000d1c4

00006360 <sf_gen_p80211_fcdir>:
    6360:	push	{lr}		; (str lr, [sp, #-4]!)
    6364:	sub	sp, sp, #12
    6368:	ldr	r2, [pc, #88]	; 63c8 <sf_gen_p80211_fcdir+0x68>
    636c:	add	r2, pc, r2
    6370:	ldr	r2, [r2, #852]	; 0x354
    6374:	cmp	r2, #119	; 0x77
    6378:	beq	63a4 <sf_gen_p80211_fcdir+0x44>
    637c:	ble	639c <sf_gen_p80211_fcdir+0x3c>
    6380:	cmp	r2, #127	; 0x7f
    6384:	beq	63a4 <sf_gen_p80211_fcdir+0x44>
    6388:	cmp	r2, #163	; 0xa3
    638c:	beq	63a4 <sf_gen_p80211_fcdir+0x44>
    6390:	ldr	r0, [pc, #52]	; 63cc <sf_gen_p80211_fcdir+0x6c>
    6394:	add	r0, pc, r0
    6398:	bl	22b4 <sf_bpf_error>
    639c:	cmp	r2, #105	; 0x69
    63a0:	bne	6390 <sf_gen_p80211_fcdir+0x30>
    63a4:	mov	r3, #3
    63a8:	str	r3, [sp]
    63ac:	mov	r3, r0
    63b0:	mov	r2, #16
    63b4:	mov	r1, #1
    63b8:	mov	r0, r1
    63bc:	bl	52f0 <gen_mcmp>
    63c0:	add	sp, sp, #12
    63c4:	pop	{pc}		; (ldr pc, [sp], #4)
    63c8:	.word	0x0002affc
    63cc:	.word	0x0000d18c

000063d0 <sf_gen_acode>:
    63d0:	push	{lr}		; (str lr, [sp, #-4]!)
    63d4:	sub	sp, sp, #12
    63d8:	str	r1, [sp, #4]
    63dc:	ldr	r3, [pc, #84]	; 6438 <sf_gen_acode+0x68>
    63e0:	add	r3, pc, r3
    63e4:	ldr	r3, [r3, #852]	; 0x354
    63e8:	cmp	r3, #7
    63ec:	beq	63f8 <sf_gen_acode+0x28>
    63f0:	cmp	r3, #129	; 0x81
    63f4:	bne	642c <sf_gen_acode+0x5c>
    63f8:	ldrb	r3, [sp, #4]
    63fc:	cmp	r3, #1
    6400:	bhi	6420 <sf_gen_acode+0x50>
    6404:	ldrb	r3, [sp, #5]
    6408:	cmp	r3, #1
    640c:	bne	6420 <sf_gen_acode+0x50>
    6410:	ldrb	r1, [sp, #6]
    6414:	bl	4ccc <gen_ahostop>
    6418:	add	sp, sp, #12
    641c:	pop	{pc}		; (ldr pc, [sp], #4)
    6420:	ldr	r0, [pc, #20]	; 643c <sf_gen_acode+0x6c>
    6424:	add	r0, pc, r0
    6428:	bl	22b4 <sf_bpf_error>
    642c:	ldr	r0, [pc, #12]	; 6440 <sf_gen_acode+0x70>
    6430:	add	r0, pc, r0
    6434:	bl	22b4 <sf_bpf_error>
    6438:	.word	0x0002af88
    643c:	.word	0x0000d130
    6440:	.word	0x0000d150

00006444 <sf_gen_vlan>:
    6444:	push	{r4, r5, r6, lr}
    6448:	sub	sp, sp, #8
    644c:	ldr	r3, [pc, #208]	; 6524 <sf_gen_vlan+0xe0>
    6450:	add	r3, pc, r3
    6454:	ldr	r3, [r3, #4]
    6458:	cmp	r3, #0
    645c:	bne	650c <sf_gen_vlan+0xc8>
    6460:	mov	r6, r0
    6464:	ldr	r3, [pc, #188]	; 6528 <sf_gen_vlan+0xe4>
    6468:	add	r3, pc, r3
    646c:	ldr	r1, [r3, #948]	; 0x3b4
    6470:	ldr	r2, [pc, #180]	; 652c <sf_gen_vlan+0xe8>
    6474:	add	r2, pc, r2
    6478:	str	r1, [r2]
    647c:	ldr	r1, [r3, #852]	; 0x354
    6480:	cmp	r1, #1
    6484:	bne	6518 <sf_gen_vlan+0xd4>
    6488:	ldr	r3, [pc, #160]	; 6530 <sf_gen_vlan+0xec>
    648c:	add	r3, pc, r3
    6490:	ldr	r4, [r3, #944]	; 0x3b0
    6494:	mov	r3, #33024	; 0x8100
    6498:	mov	r2, #8
    649c:	mov	r1, r4
    64a0:	mov	r0, #1
    64a4:	bl	47d8 <gen_cmp>
    64a8:	mov	r5, r0
    64ac:	cmp	r6, #0
    64b0:	blt	64e4 <sf_gen_vlan+0xa0>
    64b4:	ldr	r3, [pc, #120]	; 6534 <sf_gen_vlan+0xf0>
    64b8:	str	r3, [sp]
    64bc:	mov	r3, r6
    64c0:	mov	r2, #8
    64c4:	mov	r1, #0
    64c8:	mov	r0, #2
    64cc:	bl	52f0 <gen_mcmp>
    64d0:	mov	r6, r0
    64d4:	mov	r1, r0
    64d8:	mov	r0, r5
    64dc:	bl	399c <sf_gen_and>
    64e0:	mov	r5, r6
    64e4:	ldr	r3, [pc, #76]	; 6538 <sf_gen_vlan+0xf4>
    64e8:	add	r3, pc, r3
    64ec:	ldr	r2, [r3, #940]	; 0x3ac
    64f0:	add	r2, r2, #4
    64f4:	str	r2, [r3, #940]	; 0x3ac
    64f8:	add	r4, r4, #4
    64fc:	str	r4, [r3, #944]	; 0x3b0
    6500:	mov	r0, r5
    6504:	add	sp, sp, #8
    6508:	pop	{r4, r5, r6, pc}
    650c:	ldr	r0, [pc, #40]	; 653c <sf_gen_vlan+0xf8>
    6510:	add	r0, pc, r0
    6514:	bl	22b4 <sf_bpf_error>
    6518:	ldr	r0, [pc, #32]	; 6540 <sf_gen_vlan+0xfc>
    651c:	add	r0, pc, r0
    6520:	bl	22b4 <sf_bpf_error>
    6524:	.word	0x0002ae28
    6528:	.word	0x0002af00
    652c:	.word	0x0002ae04
    6530:	.word	0x0002aedc
    6534:	.word	0x00000fff
    6538:	.word	0x0002ae80
    653c:	.word	0x0000d090
    6540:	.word	0x0000d0a0

00006544 <sf_gen_atmfield_code>:
    6544:	push	{lr}		; (str lr, [sp, #-4]!)
    6548:	sub	sp, sp, #20
    654c:	sub	r0, r0, #51	; 0x33
    6550:	cmp	r0, #4
    6554:	addls	pc, pc, r0, lsl #2
    6558:	b	6700 <sf_gen_atmfield_code+0x1bc>
    655c:	b	6570 <sf_gen_atmfield_code+0x2c>
    6560:	b	65d0 <sf_gen_atmfield_code+0x8c>
    6564:	b	662c <sf_gen_atmfield_code+0xe8>
    6568:	b	6668 <sf_gen_atmfield_code+0x124>
    656c:	b	66a4 <sf_gen_atmfield_code+0x160>
    6570:	ldr	r0, [pc, #396]	; 6704 <sf_gen_atmfield_code+0x1c0>
    6574:	add	r0, pc, r0
    6578:	ldr	r0, [r0, #888]	; 0x378
    657c:	cmp	r0, #0
    6580:	beq	65c0 <sf_gen_atmfield_code+0x7c>
    6584:	ldr	r0, [pc, #380]	; 6708 <sf_gen_atmfield_code+0x1c4>
    6588:	add	r0, pc, r0
    658c:	ldr	r0, [r0, #896]	; 0x380
    6590:	cmn	r0, #1
    6594:	beq	65cc <sf_gen_atmfield_code+0x88>
    6598:	str	r1, [sp, #8]
    659c:	str	r3, [sp, #4]
    65a0:	str	r2, [sp]
    65a4:	mvn	r3, #0
    65a8:	mov	r2, #16
    65ac:	mov	r1, r0
    65b0:	mov	r0, #1
    65b4:	bl	4630 <gen_ncmp>
    65b8:	add	sp, sp, #20
    65bc:	pop	{pc}		; (ldr pc, [sp], #4)
    65c0:	ldr	r0, [pc, #324]	; 670c <sf_gen_atmfield_code+0x1c8>
    65c4:	add	r0, pc, r0
    65c8:	bl	22b4 <sf_bpf_error>
    65cc:	bl	f18 <abort@plt>
    65d0:	ldr	r0, [pc, #312]	; 6710 <sf_gen_atmfield_code+0x1cc>
    65d4:	add	r0, pc, r0
    65d8:	ldr	r0, [r0, #888]	; 0x378
    65dc:	cmp	r0, #0
    65e0:	beq	661c <sf_gen_atmfield_code+0xd8>
    65e4:	ldr	r0, [pc, #296]	; 6714 <sf_gen_atmfield_code+0x1d0>
    65e8:	add	r0, pc, r0
    65ec:	ldr	r0, [r0, #900]	; 0x384
    65f0:	cmn	r0, #1
    65f4:	beq	6628 <sf_gen_atmfield_code+0xe4>
    65f8:	str	r1, [sp, #8]
    65fc:	str	r3, [sp, #4]
    6600:	str	r2, [sp]
    6604:	mvn	r3, #0
    6608:	mov	r2, #8
    660c:	mov	r1, r0
    6610:	mov	r0, #1
    6614:	bl	4630 <gen_ncmp>
    6618:	b	65b8 <sf_gen_atmfield_code+0x74>
    661c:	ldr	r0, [pc, #244]	; 6718 <sf_gen_atmfield_code+0x1d4>
    6620:	add	r0, pc, r0
    6624:	bl	22b4 <sf_bpf_error>
    6628:	bl	f18 <abort@plt>
    662c:	ldr	r0, [pc, #232]	; 671c <sf_gen_atmfield_code+0x1d8>
    6630:	add	r0, pc, r0
    6634:	ldr	r0, [r0, #904]	; 0x388
    6638:	cmn	r0, #1
    663c:	beq	6664 <sf_gen_atmfield_code+0x120>
    6640:	str	r1, [sp, #8]
    6644:	str	r3, [sp, #4]
    6648:	str	r2, [sp]
    664c:	mov	r3, #15
    6650:	mov	r2, #16
    6654:	mov	r1, r0
    6658:	mov	r0, #1
    665c:	bl	4630 <gen_ncmp>
    6660:	b	65b8 <sf_gen_atmfield_code+0x74>
    6664:	bl	f18 <abort@plt>
    6668:	ldr	r0, [pc, #176]	; 6720 <sf_gen_atmfield_code+0x1dc>
    666c:	add	r0, pc, r0
    6670:	ldr	r0, [r0, #908]	; 0x38c
    6674:	cmn	r0, #1
    6678:	beq	66a0 <sf_gen_atmfield_code+0x15c>
    667c:	str	r1, [sp, #8]
    6680:	str	r3, [sp, #4]
    6684:	str	r2, [sp]
    6688:	mvn	r3, #0
    668c:	mov	r2, #16
    6690:	add	r1, r0, #5
    6694:	mov	r0, #1
    6698:	bl	4630 <gen_ncmp>
    669c:	b	65b8 <sf_gen_atmfield_code+0x74>
    66a0:	bl	f18 <abort@plt>
    66a4:	ldr	r0, [pc, #120]	; 6724 <sf_gen_atmfield_code+0x1e0>
    66a8:	add	r0, pc, r0
    66ac:	ldr	r0, [r0, #888]	; 0x378
    66b0:	cmp	r0, #0
    66b4:	beq	66f0 <sf_gen_atmfield_code+0x1ac>
    66b8:	ldr	r0, [pc, #104]	; 6728 <sf_gen_atmfield_code+0x1e4>
    66bc:	add	r0, pc, r0
    66c0:	ldr	r0, [r0, #904]	; 0x388
    66c4:	cmn	r0, #1
    66c8:	beq	66fc <sf_gen_atmfield_code+0x1b8>
    66cc:	str	r1, [sp, #8]
    66d0:	str	r3, [sp, #4]
    66d4:	str	r2, [sp]
    66d8:	mvn	r3, #0
    66dc:	mov	r2, #16
    66e0:	mov	r1, r0
    66e4:	mov	r0, #1
    66e8:	bl	4630 <gen_ncmp>
    66ec:	b	65b8 <sf_gen_atmfield_code+0x74>
    66f0:	ldr	r0, [pc, #52]	; 672c <sf_gen_atmfield_code+0x1e8>
    66f4:	add	r0, pc, r0
    66f8:	bl	22b4 <sf_bpf_error>
    66fc:	bl	f18 <abort@plt>
    6700:	bl	f18 <abort@plt>
    6704:	.word	0x0002adf4
    6708:	.word	0x0002ade0
    670c:	.word	0x0000d020
    6710:	.word	0x0002ad94
    6714:	.word	0x0002ad80
    6718:	.word	0x0000cfe4
    671c:	.word	0x0002ad38
    6720:	.word	0x0002acfc
    6724:	.word	0x0002acc0
    6728:	.word	0x0002acac
    672c:	.word	0x0000cf30

00006730 <gen_linktype>:
    6730:	push	{r4, r5, r6, r7, lr}
    6734:	sub	sp, sp, #12
    6738:	mov	r4, r0
    673c:	ldr	r3, [pc, #3508]	; 74f8 <gen_linktype+0xdc8>
    6740:	add	r3, pc, r3
    6744:	ldr	r3, [r3, #4]
    6748:	cmp	r3, #0
    674c:	beq	6824 <gen_linktype+0xf4>
    6750:	cmp	r0, #87	; 0x57
    6754:	beq	6770 <gen_linktype+0x40>
    6758:	ble	67bc <gen_linktype+0x8c>
    675c:	cmp	r0, #2048	; 0x800
    6760:	beq	67d0 <gen_linktype+0xa0>
    6764:	ldr	r3, [pc, #3472]	; 74fc <gen_linktype+0xdcc>
    6768:	cmp	r0, r3
    676c:	bne	67c4 <gen_linktype+0x94>
    6770:	mov	r3, #1
    6774:	str	r3, [sp]
    6778:	mov	r2, #16
    677c:	mvn	r1, #1
    6780:	mov	r0, #3
    6784:	bl	52f0 <gen_mcmp>
    6788:	mov	r4, r0
    678c:	mov	r3, #240	; 0xf0
    6790:	str	r3, [sp]
    6794:	mov	r3, #96	; 0x60
    6798:	mov	r2, #16
    679c:	mov	r1, #0
    67a0:	mov	r0, #3
    67a4:	bl	52f0 <gen_mcmp>
    67a8:	mov	r5, r0
    67ac:	mov	r1, r0
    67b0:	mov	r0, r4
    67b4:	bl	399c <sf_gen_and>
    67b8:	b	6818 <gen_linktype+0xe8>
    67bc:	cmp	r0, #33	; 0x21
    67c0:	beq	67d0 <gen_linktype+0xa0>
    67c4:	ldr	r0, [pc, #3380]	; 7500 <gen_linktype+0xdd0>
    67c8:	add	r0, pc, r0
    67cc:	bl	22b4 <sf_bpf_error>
    67d0:	mov	r3, #1
    67d4:	str	r3, [sp]
    67d8:	mov	r2, #16
    67dc:	mvn	r1, #1
    67e0:	mov	r0, #3
    67e4:	bl	52f0 <gen_mcmp>
    67e8:	mov	r4, r0
    67ec:	mov	r3, #240	; 0xf0
    67f0:	str	r3, [sp]
    67f4:	mov	r3, #64	; 0x40
    67f8:	mov	r2, #16
    67fc:	mov	r1, #0
    6800:	mov	r0, #3
    6804:	bl	52f0 <gen_mcmp>
    6808:	mov	r5, r0
    680c:	mov	r1, r0
    6810:	mov	r0, r4
    6814:	bl	399c <sf_gen_and>
    6818:	mov	r0, r5
    681c:	add	sp, sp, #12
    6820:	pop	{r4, r5, r6, r7, pc}
    6824:	ldr	r3, [pc, #3288]	; 7504 <gen_linktype+0xdd4>
    6828:	add	r3, pc, r3
    682c:	ldr	r3, [r3, #912]	; 0x390
    6830:	cmp	r3, #0
    6834:	bne	6be8 <gen_linktype+0x4b8>
    6838:	ldr	r3, [pc, #3272]	; 7508 <gen_linktype+0xdd8>
    683c:	add	r3, pc, r3
    6840:	ldr	r2, [r3, #852]	; 0x354
    6844:	cmp	r2, #229	; 0xe5
    6848:	addls	pc, pc, r2, lsl #2
    684c:	b	74c8 <gen_linktype+0xd98>
    6850:	b	7100 <gen_linktype+0x9d0>
    6854:	b	6c10 <gen_linktype+0x4e0>
    6858:	b	74c8 <gen_linktype+0xd98>
    685c:	b	74c8 <gen_linktype+0xd98>
    6860:	b	74c8 <gen_linktype+0xd98>
    6864:	b	74c8 <gen_linktype+0xd98>
    6868:	b	6cec <gen_linktype+0x5bc>
    686c:	b	7150 <gen_linktype+0xa20>
    6870:	b	6f98 <gen_linktype+0x868>
    6874:	b	7038 <gen_linktype+0x908>
    6878:	b	6ce0 <gen_linktype+0x5b0>
    687c:	b	6cf8 <gen_linktype+0x5c8>
    6880:	b	6f98 <gen_linktype+0x868>
    6884:	b	74c8 <gen_linktype+0xd98>
    6888:	b	74c8 <gen_linktype+0xd98>
    688c:	b	6f98 <gen_linktype+0x868>
    6890:	b	7060 <gen_linktype+0x930>
    6894:	b	74c8 <gen_linktype+0xd98>
    6898:	b	74c8 <gen_linktype+0xd98>
    689c:	b	6cf8 <gen_linktype+0x5c8>
    68a0:	b	74c8 <gen_linktype+0xd98>
    68a4:	b	74c8 <gen_linktype+0xd98>
    68a8:	b	74c8 <gen_linktype+0xd98>
    68ac:	b	74c8 <gen_linktype+0xd98>
    68b0:	b	74c8 <gen_linktype+0xd98>
    68b4:	b	74c8 <gen_linktype+0xd98>
    68b8:	b	74c8 <gen_linktype+0xd98>
    68bc:	b	74c8 <gen_linktype+0xd98>
    68c0:	b	74c8 <gen_linktype+0xd98>
    68c4:	b	74c8 <gen_linktype+0xd98>
    68c8:	b	74c8 <gen_linktype+0xd98>
    68cc:	b	74c8 <gen_linktype+0xd98>
    68d0:	b	74c8 <gen_linktype+0xd98>
    68d4:	b	74c8 <gen_linktype+0xd98>
    68d8:	b	74c8 <gen_linktype+0xd98>
    68dc:	b	74c8 <gen_linktype+0xd98>
    68e0:	b	74c8 <gen_linktype+0xd98>
    68e4:	b	74c8 <gen_linktype+0xd98>
    68e8:	b	74c8 <gen_linktype+0xd98>
    68ec:	b	74c8 <gen_linktype+0xd98>
    68f0:	b	74c8 <gen_linktype+0xd98>
    68f4:	b	74c8 <gen_linktype+0xd98>
    68f8:	b	74c8 <gen_linktype+0xd98>
    68fc:	b	74c8 <gen_linktype+0xd98>
    6900:	b	74c8 <gen_linktype+0xd98>
    6904:	b	74c8 <gen_linktype+0xd98>
    6908:	b	74c8 <gen_linktype+0xd98>
    690c:	b	74c8 <gen_linktype+0xd98>
    6910:	b	74c8 <gen_linktype+0xd98>
    6914:	b	74c8 <gen_linktype+0xd98>
    6918:	b	7038 <gen_linktype+0x908>
    691c:	b	7038 <gen_linktype+0x908>
    6920:	b	74c8 <gen_linktype+0xd98>
    6924:	b	74c8 <gen_linktype+0xd98>
    6928:	b	74c8 <gen_linktype+0xd98>
    692c:	b	74c8 <gen_linktype+0xd98>
    6930:	b	74c8 <gen_linktype+0xd98>
    6934:	b	74c8 <gen_linktype+0xd98>
    6938:	b	74c8 <gen_linktype+0xd98>
    693c:	b	74c8 <gen_linktype+0xd98>
    6940:	b	74c8 <gen_linktype+0xd98>
    6944:	b	74c8 <gen_linktype+0xd98>
    6948:	b	74c8 <gen_linktype+0xd98>
    694c:	b	74c8 <gen_linktype+0xd98>
    6950:	b	74c8 <gen_linktype+0xd98>
    6954:	b	74c8 <gen_linktype+0xd98>
    6958:	b	74c8 <gen_linktype+0xd98>
    695c:	b	74c8 <gen_linktype+0xd98>
    6960:	b	74c8 <gen_linktype+0xd98>
    6964:	b	74c8 <gen_linktype+0xd98>
    6968:	b	74c8 <gen_linktype+0xd98>
    696c:	b	74c8 <gen_linktype+0xd98>
    6970:	b	74c8 <gen_linktype+0xd98>
    6974:	b	74c8 <gen_linktype+0xd98>
    6978:	b	74c8 <gen_linktype+0xd98>
    697c:	b	74c8 <gen_linktype+0xd98>
    6980:	b	74c8 <gen_linktype+0xd98>
    6984:	b	74c8 <gen_linktype+0xd98>
    6988:	b	74c8 <gen_linktype+0xd98>
    698c:	b	74c8 <gen_linktype+0xd98>
    6990:	b	74c8 <gen_linktype+0xd98>
    6994:	b	74c8 <gen_linktype+0xd98>
    6998:	b	74c8 <gen_linktype+0xd98>
    699c:	b	74c8 <gen_linktype+0xd98>
    69a0:	b	74c8 <gen_linktype+0xd98>
    69a4:	b	74c8 <gen_linktype+0xd98>
    69a8:	b	74c8 <gen_linktype+0xd98>
    69ac:	b	74c8 <gen_linktype+0xd98>
    69b0:	b	74c8 <gen_linktype+0xd98>
    69b4:	b	74c8 <gen_linktype+0xd98>
    69b8:	b	74c8 <gen_linktype+0xd98>
    69bc:	b	74c8 <gen_linktype+0xd98>
    69c0:	b	74c8 <gen_linktype+0xd98>
    69c4:	b	74c8 <gen_linktype+0xd98>
    69c8:	b	74c8 <gen_linktype+0xd98>
    69cc:	b	74c8 <gen_linktype+0xd98>
    69d0:	b	74c8 <gen_linktype+0xd98>
    69d4:	b	74c8 <gen_linktype+0xd98>
    69d8:	b	74c8 <gen_linktype+0xd98>
    69dc:	b	74c8 <gen_linktype+0xd98>
    69e0:	b	74c8 <gen_linktype+0xd98>
    69e4:	b	74c8 <gen_linktype+0xd98>
    69e8:	b	74c8 <gen_linktype+0xd98>
    69ec:	b	74c8 <gen_linktype+0xd98>
    69f0:	b	6c1c <gen_linktype+0x4ec>
    69f4:	b	6c48 <gen_linktype+0x518>
    69f8:	b	74c8 <gen_linktype+0xd98>
    69fc:	b	72bc <gen_linktype+0xb8c>
    6a00:	b	7100 <gen_linktype+0x9d0>
    6a04:	b	7100 <gen_linktype+0x9d0>
    6a08:	b	74c8 <gen_linktype+0xd98>
    6a0c:	b	74c8 <gen_linktype+0xd98>
    6a10:	b	74c8 <gen_linktype+0xd98>
    6a14:	b	6d90 <gen_linktype+0x660>
    6a18:	b	72a0 <gen_linktype+0xb70>
    6a1c:	b	74c8 <gen_linktype+0xd98>
    6a20:	b	74c8 <gen_linktype+0xd98>
    6a24:	b	74c8 <gen_linktype+0xd98>
    6a28:	b	74c8 <gen_linktype+0xd98>
    6a2c:	b	6c48 <gen_linktype+0x518>
    6a30:	b	74c8 <gen_linktype+0xd98>
    6a34:	b	74c8 <gen_linktype+0xd98>
    6a38:	b	6cf8 <gen_linktype+0x5c8>
    6a3c:	b	6d04 <gen_linktype+0x5d4>
    6a40:	b	74c8 <gen_linktype+0xd98>
    6a44:	b	74c8 <gen_linktype+0xd98>
    6a48:	b	74c8 <gen_linktype+0xd98>
    6a4c:	b	6c48 <gen_linktype+0x518>
    6a50:	b	74c8 <gen_linktype+0xd98>
    6a54:	b	7150 <gen_linktype+0xa20>
    6a58:	b	7390 <gen_linktype+0xc60>
    6a5c:	b	7390 <gen_linktype+0xc60>
    6a60:	b	7390 <gen_linktype+0xc60>
    6a64:	b	7390 <gen_linktype+0xc60>
    6a68:	b	7390 <gen_linktype+0xc60>
    6a6c:	b	7390 <gen_linktype+0xc60>
    6a70:	b	7390 <gen_linktype+0xc60>
    6a74:	b	7390 <gen_linktype+0xc60>
    6a78:	b	74c8 <gen_linktype+0xd98>
    6a7c:	b	7438 <gen_linktype+0xd08>
    6a80:	b	7438 <gen_linktype+0xd08>
    6a84:	b	74c8 <gen_linktype+0xd98>
    6a88:	b	74c8 <gen_linktype+0xd98>
    6a8c:	b	742c <gen_linktype+0xcfc>
    6a90:	b	7420 <gen_linktype+0xcf0>
    6a94:	b	74c8 <gen_linktype+0xd98>
    6a98:	b	74c8 <gen_linktype+0xd98>
    6a9c:	b	74c8 <gen_linktype+0xd98>
    6aa0:	b	74c8 <gen_linktype+0xd98>
    6aa4:	b	74c8 <gen_linktype+0xd98>
    6aa8:	b	74c8 <gen_linktype+0xd98>
    6aac:	b	74c8 <gen_linktype+0xd98>
    6ab0:	b	74c8 <gen_linktype+0xd98>
    6ab4:	b	74c8 <gen_linktype+0xd98>
    6ab8:	b	74c8 <gen_linktype+0xd98>
    6abc:	b	74c8 <gen_linktype+0xd98>
    6ac0:	b	74c8 <gen_linktype+0xd98>
    6ac4:	b	74c8 <gen_linktype+0xd98>
    6ac8:	b	74c8 <gen_linktype+0xd98>
    6acc:	b	74c8 <gen_linktype+0xd98>
    6ad0:	b	74c8 <gen_linktype+0xd98>
    6ad4:	b	74c8 <gen_linktype+0xd98>
    6ad8:	b	74c8 <gen_linktype+0xd98>
    6adc:	b	6c48 <gen_linktype+0x518>
    6ae0:	b	7390 <gen_linktype+0xc60>
    6ae4:	b	74c8 <gen_linktype+0xd98>
    6ae8:	b	7038 <gen_linktype+0x908>
    6aec:	b	7390 <gen_linktype+0xc60>
    6af0:	b	7390 <gen_linktype+0xc60>
    6af4:	b	74c8 <gen_linktype+0xd98>
    6af8:	b	74c8 <gen_linktype+0xd98>
    6afc:	b	74c8 <gen_linktype+0xd98>
    6b00:	b	74c8 <gen_linktype+0xd98>
    6b04:	b	74c8 <gen_linktype+0xd98>
    6b08:	b	74c8 <gen_linktype+0xd98>
    6b0c:	b	74c8 <gen_linktype+0xd98>
    6b10:	b	74c8 <gen_linktype+0xd98>
    6b14:	b	7450 <gen_linktype+0xd20>
    6b18:	b	7390 <gen_linktype+0xc60>
    6b1c:	b	7390 <gen_linktype+0xc60>
    6b20:	b	7390 <gen_linktype+0xc60>
    6b24:	b	7390 <gen_linktype+0xc60>
    6b28:	b	7384 <gen_linktype+0xc54>
    6b2c:	b	7390 <gen_linktype+0xc60>
    6b30:	b	74c8 <gen_linktype+0xd98>
    6b34:	b	74c8 <gen_linktype+0xd98>
    6b38:	b	745c <gen_linktype+0xd2c>
    6b3c:	b	7468 <gen_linktype+0xd38>
    6b40:	b	74c8 <gen_linktype+0xd98>
    6b44:	b	745c <gen_linktype+0xd2c>
    6b48:	b	7474 <gen_linktype+0xd44>
    6b4c:	b	7480 <gen_linktype+0xd50>
    6b50:	b	6c48 <gen_linktype+0x518>
    6b54:	b	748c <gen_linktype+0xd5c>
    6b58:	b	7390 <gen_linktype+0xc60>
    6b5c:	b	7480 <gen_linktype+0xd50>
    6b60:	b	7498 <gen_linktype+0xd68>
    6b64:	b	7444 <gen_linktype+0xd14>
    6b68:	b	74a4 <gen_linktype+0xd74>
    6b6c:	b	74b0 <gen_linktype+0xd80>
    6b70:	b	7390 <gen_linktype+0xc60>
    6b74:	b	7468 <gen_linktype+0xd38>
    6b78:	b	74bc <gen_linktype+0xd8c>
    6b7c:	b	74c8 <gen_linktype+0xd98>
    6b80:	b	74c8 <gen_linktype+0xd98>
    6b84:	b	74c8 <gen_linktype+0xd98>
    6b88:	b	74c8 <gen_linktype+0xd98>
    6b8c:	b	74c8 <gen_linktype+0xd98>
    6b90:	b	74c8 <gen_linktype+0xd98>
    6b94:	b	74c8 <gen_linktype+0xd98>
    6b98:	b	74c8 <gen_linktype+0xd98>
    6b9c:	b	74c8 <gen_linktype+0xd98>
    6ba0:	b	74c8 <gen_linktype+0xd98>
    6ba4:	b	74c8 <gen_linktype+0xd98>
    6ba8:	b	74c8 <gen_linktype+0xd98>
    6bac:	b	7480 <gen_linktype+0xd50>
    6bb0:	b	74c8 <gen_linktype+0xd98>
    6bb4:	b	74c8 <gen_linktype+0xd98>
    6bb8:	b	74c8 <gen_linktype+0xd98>
    6bbc:	b	74c8 <gen_linktype+0xd98>
    6bc0:	b	745c <gen_linktype+0xd2c>
    6bc4:	b	74c8 <gen_linktype+0xd98>
    6bc8:	b	74c8 <gen_linktype+0xd98>
    6bcc:	b	74c8 <gen_linktype+0xd98>
    6bd0:	b	74c8 <gen_linktype+0xd98>
    6bd4:	b	74c8 <gen_linktype+0xd98>
    6bd8:	b	73b4 <gen_linktype+0xc84>
    6bdc:	b	7474 <gen_linktype+0xd44>
    6be0:	b	7004 <gen_linktype+0x8d4>
    6be4:	b	701c <gen_linktype+0x8ec>
    6be8:	bl	21bc <ethertype_to_ppptype>
    6bec:	mov	r3, r0
    6bf0:	mov	r2, #8
    6bf4:	ldr	r1, [pc, #2320]	; 750c <gen_linktype+0xddc>
    6bf8:	add	r1, pc, r1
    6bfc:	ldr	r1, [r1, #944]	; 0x3b0
    6c00:	mov	r0, #2
    6c04:	bl	47d8 <gen_cmp>
    6c08:	mov	r5, r0
    6c0c:	b	6818 <gen_linktype+0xe8>
    6c10:	bl	506c <gen_ether_linktype>
    6c14:	mov	r5, r0
    6c18:	b	6818 <gen_linktype+0xe8>
    6c1c:	ldr	r3, [pc, #2284]	; 7510 <gen_linktype+0xde0>
    6c20:	cmp	r0, #254	; 0xfe
    6c24:	movne	r3, r0
    6c28:	mov	r2, #8
    6c2c:	ldr	r1, [pc, #2272]	; 7514 <gen_linktype+0xde4>
    6c30:	add	r1, pc, r1
    6c34:	ldr	r1, [r1, #944]	; 0x3b0
    6c38:	mov	r0, #1
    6c3c:	bl	47d8 <gen_cmp>
    6c40:	mov	r5, r0
    6c44:	b	6818 <gen_linktype+0xe8>
    6c48:	mov	r1, #16
    6c4c:	mov	r0, #0
    6c50:	bl	43bc <gen_load_llrel>
    6c54:	mov	r7, r0
    6c58:	mov	r0, #208	; 0xd0
    6c5c:	bl	22f0 <newchunk>
    6c60:	mov	r6, r0
    6c64:	mov	r5, #69	; 0x45
    6c68:	str	r5, [r0, #8]
    6c6c:	str	r0, [r6, #96]	; 0x60
    6c70:	mov	r3, #8
    6c74:	str	r3, [r0, #20]
    6c78:	str	r7, [r0, #4]
    6c7c:	mov	r1, #16
    6c80:	mov	r0, #0
    6c84:	bl	43bc <gen_load_llrel>
    6c88:	mov	r7, r0
    6c8c:	mov	r0, #208	; 0xd0
    6c90:	bl	22f0 <newchunk>
    6c94:	mov	r3, r0
    6c98:	str	r5, [r0, #8]
    6c9c:	str	r0, [r3, #96]	; 0x60
    6ca0:	mov	r2, #4
    6ca4:	str	r2, [r0, #20]
    6ca8:	str	r7, [r0, #4]
    6cac:	ldr	r2, [r0, #44]	; 0x2c
    6cb0:	clz	r2, r2
    6cb4:	lsr	r2, r2, #5
    6cb8:	str	r2, [r0, #44]	; 0x2c
    6cbc:	mov	r1, r6
    6cc0:	bl	399c <sf_gen_and>
    6cc4:	mov	r0, r4
    6cc8:	bl	4d8c <gen_llc_linktype>
    6ccc:	mov	r5, r0
    6cd0:	mov	r1, r0
    6cd4:	mov	r0, r6
    6cd8:	bl	399c <sf_gen_and>
    6cdc:	b	6818 <gen_linktype+0xe8>
    6ce0:	bl	4d8c <gen_llc_linktype>
    6ce4:	mov	r5, r0
    6ce8:	b	6818 <gen_linktype+0xe8>
    6cec:	bl	4d8c <gen_llc_linktype>
    6cf0:	mov	r5, r0
    6cf4:	b	6818 <gen_linktype+0xe8>
    6cf8:	bl	4d8c <gen_llc_linktype>
    6cfc:	mov	r5, r0
    6d00:	b	6818 <gen_linktype+0xe8>
    6d04:	ldr	r3, [pc, #2060]	; 7518 <gen_linktype+0xde8>
    6d08:	add	r3, pc, r3
    6d0c:	ldr	r3, [r3, #892]	; 0x37c
    6d10:	cmp	r3, #0
    6d14:	beq	6d5c <gen_linktype+0x62c>
    6d18:	mov	r3, #65280	; 0xff00
    6d1c:	mov	r2, #8
    6d20:	mov	r1, #4
    6d24:	mov	r0, #1
    6d28:	bl	47d8 <gen_cmp>
    6d2c:	mov	r6, r0
    6d30:	ldr	r3, [r0, #44]	; 0x2c
    6d34:	clz	r3, r3
    6d38:	lsr	r3, r3, #5
    6d3c:	str	r3, [r0, #44]	; 0x2c
    6d40:	mov	r0, r4
    6d44:	bl	506c <gen_ether_linktype>
    6d48:	mov	r5, r0
    6d4c:	mov	r1, r0
    6d50:	mov	r0, r6
    6d54:	bl	399c <sf_gen_and>
    6d58:	b	6818 <gen_linktype+0xe8>
    6d5c:	mov	r3, #0
    6d60:	mov	r2, #16
    6d64:	mov	r1, #2
    6d68:	mov	r0, #53	; 0x35
    6d6c:	bl	6544 <sf_gen_atmfield_code>
    6d70:	mov	r6, r0
    6d74:	mov	r0, r4
    6d78:	bl	4d8c <gen_llc_linktype>
    6d7c:	mov	r5, r0
    6d80:	mov	r1, r0
    6d84:	mov	r0, r6
    6d88:	bl	399c <sf_gen_and>
    6d8c:	b	6818 <gen_linktype+0xe8>
    6d90:	cmp	r0, #240	; 0xf0
    6d94:	beq	6e98 <gen_linktype+0x768>
    6d98:	bgt	6e48 <gen_linktype+0x718>
    6d9c:	cmp	r0, #6
    6da0:	beq	6e98 <gen_linktype+0x768>
    6da4:	cmp	r0, #224	; 0xe0
    6da8:	bne	6e68 <gen_linktype+0x738>
    6dac:	mov	r3, #224	; 0xe0
    6db0:	mov	r2, #16
    6db4:	mov	r1, #0
    6db8:	mov	r0, #2
    6dbc:	bl	47d8 <gen_cmp>
    6dc0:	mov	r4, r0
    6dc4:	ldr	r6, [pc, #1872]	; 751c <gen_linktype+0xdec>
    6dc8:	mov	r1, r6
    6dcc:	mov	r0, #0
    6dd0:	bl	4958 <gen_snap>
    6dd4:	mov	r5, r0
    6dd8:	mov	r1, r0
    6ddc:	mov	r0, r4
    6de0:	bl	3a20 <sf_gen_or>
    6de4:	ldr	r3, [pc, #1844]	; 7520 <gen_linktype+0xdf0>
    6de8:	add	r3, pc, r3
    6dec:	ldr	r4, [r3, #944]	; 0x3b0
    6df0:	mov	r3, #4
    6df4:	mov	r2, #8
    6df8:	mov	r1, r4
    6dfc:	mov	r0, #1
    6e00:	bl	47d8 <gen_cmp>
    6e04:	mov	r1, r5
    6e08:	bl	399c <sf_gen_and>
    6e0c:	mov	r3, #1
    6e10:	mov	r2, #8
    6e14:	mov	r1, r4
    6e18:	mov	r0, r3
    6e1c:	bl	47d8 <gen_cmp>
    6e20:	mov	r1, r5
    6e24:	bl	3a20 <sf_gen_or>
    6e28:	mov	r3, r6
    6e2c:	mov	r2, #8
    6e30:	mov	r1, r4
    6e34:	mov	r0, #1
    6e38:	bl	47d8 <gen_cmp>
    6e3c:	mov	r1, r5
    6e40:	bl	3a20 <sf_gen_or>
    6e44:	b	6818 <gen_linktype+0xe8>
    6e48:	ldr	r3, [pc, #1748]	; 7524 <gen_linktype+0xdf4>
    6e4c:	cmp	r0, r3
    6e50:	beq	6ee0 <gen_linktype+0x7b0>
    6e54:	add	r3, r3, #88	; 0x58
    6e58:	cmp	r0, r3
    6e5c:	beq	6ee0 <gen_linktype+0x7b0>
    6e60:	cmp	r0, #254	; 0xfe
    6e64:	beq	6e98 <gen_linktype+0x768>
    6e68:	ldr	r3, [pc, #1720]	; 7528 <gen_linktype+0xdf8>
    6e6c:	cmp	r4, r3
    6e70:	ble	6f50 <gen_linktype+0x820>
    6e74:	mov	r3, r4
    6e78:	mov	r2, #8
    6e7c:	ldr	r1, [pc, #1704]	; 752c <gen_linktype+0xdfc>
    6e80:	add	r1, pc, r1
    6e84:	ldr	r1, [r1, #944]	; 0x3b0
    6e88:	mov	r0, #1
    6e8c:	bl	47d8 <gen_cmp>
    6e90:	mov	r5, r0
    6e94:	b	6818 <gen_linktype+0xe8>
    6e98:	mov	r3, #4
    6e9c:	mov	r2, #8
    6ea0:	ldr	r1, [pc, #1672]	; 7530 <gen_linktype+0xe00>
    6ea4:	add	r1, pc, r1
    6ea8:	ldr	r1, [r1, #944]	; 0x3b0
    6eac:	mov	r0, #1
    6eb0:	bl	47d8 <gen_cmp>
    6eb4:	mov	r6, r0
    6eb8:	orr	r3, r4, r4, lsl #8
    6ebc:	mov	r2, #8
    6ec0:	mov	r1, #0
    6ec4:	mov	r0, #2
    6ec8:	bl	47d8 <gen_cmp>
    6ecc:	mov	r5, r0
    6ed0:	mov	r1, r0
    6ed4:	mov	r0, r6
    6ed8:	bl	399c <sf_gen_and>
    6edc:	b	6818 <gen_linktype+0xe8>
    6ee0:	ldr	r3, [pc, #1612]	; 7534 <gen_linktype+0xe04>
    6ee4:	add	r3, pc, r3
    6ee8:	ldr	r6, [r3, #944]	; 0x3b0
    6eec:	mov	r3, #4
    6ef0:	mov	r2, #8
    6ef4:	mov	r1, r6
    6ef8:	mov	r0, #1
    6efc:	bl	47d8 <gen_cmp>
    6f00:	mov	r7, r0
    6f04:	ldr	r3, [pc, #1560]	; 7524 <gen_linktype+0xdf4>
    6f08:	cmp	r4, r3
    6f0c:	moveq	r1, r3
    6f10:	ldreq	r0, [pc, #1568]	; 7538 <gen_linktype+0xe08>
    6f14:	ldrne	r1, [pc, #1568]	; 753c <gen_linktype+0xe0c>
    6f18:	movne	r0, #0
    6f1c:	bl	4958 <gen_snap>
    6f20:	mov	r5, r0
    6f24:	mov	r1, r0
    6f28:	mov	r0, r7
    6f2c:	bl	399c <sf_gen_and>
    6f30:	mov	r3, r4
    6f34:	mov	r2, #8
    6f38:	mov	r1, r6
    6f3c:	mov	r0, #1
    6f40:	bl	47d8 <gen_cmp>
    6f44:	mov	r1, r5
    6f48:	bl	3a20 <sf_gen_or>
    6f4c:	b	6818 <gen_linktype+0xe8>
    6f50:	ldr	r5, [pc, #1512]	; 7540 <gen_linktype+0xe10>
    6f54:	add	r5, pc, r5
    6f58:	mov	r3, #4
    6f5c:	mov	r2, #8
    6f60:	ldr	r1, [r5, #944]	; 0x3b0
    6f64:	mov	r0, #1
    6f68:	bl	47d8 <gen_cmp>
    6f6c:	mov	r6, r0
    6f70:	mov	r3, r4
    6f74:	mov	r2, #16
    6f78:	ldr	r1, [r5, #940]	; 0x3ac
    6f7c:	mov	r0, #1
    6f80:	bl	47d8 <gen_cmp>
    6f84:	mov	r5, r0
    6f88:	mov	r1, r0
    6f8c:	mov	r0, r6
    6f90:	bl	399c <sf_gen_and>
    6f94:	b	6818 <gen_linktype+0xe8>
    6f98:	cmp	r0, #2048	; 0x800
    6f9c:	beq	6fbc <gen_linktype+0x88c>
    6fa0:	ldr	r3, [pc, #1364]	; 74fc <gen_linktype+0xdcc>
    6fa4:	cmp	r0, r3
    6fa8:	beq	6fe0 <gen_linktype+0x8b0>
    6fac:	mov	r0, #0
    6fb0:	bl	23cc <gen_uncond>
    6fb4:	mov	r5, r0
    6fb8:	b	6818 <gen_linktype+0xe8>
    6fbc:	mov	r3, #240	; 0xf0
    6fc0:	str	r3, [sp]
    6fc4:	mov	r3, #64	; 0x40
    6fc8:	mov	r2, #16
    6fcc:	mov	r1, #0
    6fd0:	mov	r0, #1
    6fd4:	bl	52f0 <gen_mcmp>
    6fd8:	mov	r5, r0
    6fdc:	b	6818 <gen_linktype+0xe8>
    6fe0:	mov	r3, #240	; 0xf0
    6fe4:	str	r3, [sp]
    6fe8:	mov	r3, #96	; 0x60
    6fec:	mov	r2, #16
    6ff0:	mov	r1, #0
    6ff4:	mov	r0, #1
    6ff8:	bl	52f0 <gen_mcmp>
    6ffc:	mov	r5, r0
    7000:	b	6818 <gen_linktype+0xe8>
    7004:	cmp	r0, #2048	; 0x800
    7008:	moveq	r0, #1
    700c:	movne	r0, #0
    7010:	bl	23cc <gen_uncond>
    7014:	mov	r5, r0
    7018:	b	6818 <gen_linktype+0xe8>
    701c:	ldr	r3, [pc, #1240]	; 74fc <gen_linktype+0xdcc>
    7020:	cmp	r0, r3
    7024:	moveq	r0, #1
    7028:	movne	r0, #0
    702c:	bl	23cc <gen_uncond>
    7030:	mov	r5, r0
    7034:	b	6818 <gen_linktype+0xe8>
    7038:	bl	21bc <ethertype_to_ppptype>
    703c:	mov	r3, r0
    7040:	mov	r2, #8
    7044:	ldr	r1, [pc, #1272]	; 7544 <gen_linktype+0xe14>
    7048:	add	r1, pc, r1
    704c:	ldr	r1, [r1, #944]	; 0x3b0
    7050:	mov	r0, #1
    7054:	bl	47d8 <gen_cmp>
    7058:	mov	r5, r0
    705c:	b	6818 <gen_linktype+0xe8>
    7060:	cmp	r0, #2048	; 0x800
    7064:	bne	70d8 <gen_linktype+0x9a8>
    7068:	ldr	r3, [pc, #1240]	; 7548 <gen_linktype+0xe18>
    706c:	add	r3, pc, r3
    7070:	ldr	r4, [r3, #944]	; 0x3b0
    7074:	mov	r3, #33	; 0x21
    7078:	mov	r2, #8
    707c:	mov	r1, r4
    7080:	mov	r0, #1
    7084:	bl	47d8 <gen_cmp>
    7088:	mov	r5, r0
    708c:	mov	r3, #45	; 0x2d
    7090:	mov	r2, #8
    7094:	mov	r1, r4
    7098:	mov	r0, #1
    709c:	bl	47d8 <gen_cmp>
    70a0:	mov	r6, r0
    70a4:	mov	r1, r0
    70a8:	mov	r0, r5
    70ac:	bl	3a20 <sf_gen_or>
    70b0:	mov	r3, #47	; 0x2f
    70b4:	mov	r2, #8
    70b8:	mov	r1, r4
    70bc:	mov	r0, #1
    70c0:	bl	47d8 <gen_cmp>
    70c4:	mov	r5, r0
    70c8:	mov	r1, r0
    70cc:	mov	r0, r6
    70d0:	bl	3a20 <sf_gen_or>
    70d4:	b	6818 <gen_linktype+0xe8>
    70d8:	bl	21bc <ethertype_to_ppptype>
    70dc:	mov	r3, r0
    70e0:	mov	r2, #8
    70e4:	ldr	r1, [pc, #1120]	; 754c <gen_linktype+0xe1c>
    70e8:	add	r1, pc, r1
    70ec:	ldr	r1, [r1, #944]	; 0x3b0
    70f0:	mov	r0, #1
    70f4:	bl	47d8 <gen_cmp>
    70f8:	mov	r5, r0
    70fc:	b	6818 <gen_linktype+0xe8>
    7100:	cmp	r0, #2048	; 0x800
    7104:	beq	7128 <gen_linktype+0x9f8>
    7108:	ldr	r3, [pc, #1004]	; 74fc <gen_linktype+0xdcc>
    710c:	cmp	r0, r3
    7110:	moveq	r3, #10
    7114:	beq	712c <gen_linktype+0x9fc>
    7118:	mov	r0, #0
    711c:	bl	23cc <gen_uncond>
    7120:	mov	r5, r0
    7124:	b	6818 <gen_linktype+0xe8>
    7128:	mov	r3, #2
    712c:	cmp	r2, #109	; 0x6d
    7130:	cmpne	r2, #0
    7134:	reveq	r3, r3
    7138:	mov	r2, #0
    713c:	mov	r1, r2
    7140:	mov	r0, #1
    7144:	bl	47d8 <gen_cmp>
    7148:	mov	r5, r0
    714c:	b	6818 <gen_linktype+0xe8>
    7150:	ldr	r3, [pc, #1016]	; 7550 <gen_linktype+0xe20>
    7154:	cmp	r0, r3
    7158:	beq	7258 <gen_linktype+0xb28>
    715c:	bgt	71c0 <gen_linktype+0xa90>
    7160:	cmp	r0, #2048	; 0x800
    7164:	beq	720c <gen_linktype+0xadc>
    7168:	ldr	r3, [pc, #996]	; 7554 <gen_linktype+0xe24>
    716c:	cmp	r0, r3
    7170:	bne	71fc <gen_linktype+0xacc>
    7174:	ldr	r3, [pc, #988]	; 7558 <gen_linktype+0xe28>
    7178:	add	r3, pc, r3
    717c:	ldr	r4, [r3, #944]	; 0x3b0
    7180:	mov	r3, #213	; 0xd5
    7184:	mov	r2, #16
    7188:	mov	r1, r4
    718c:	mov	r0, #1
    7190:	bl	47d8 <gen_cmp>
    7194:	mov	r6, r0
    7198:	mov	r3, #241	; 0xf1
    719c:	mov	r2, #16
    71a0:	mov	r1, r4
    71a4:	mov	r0, #1
    71a8:	bl	47d8 <gen_cmp>
    71ac:	mov	r5, r0
    71b0:	mov	r1, r0
    71b4:	mov	r0, r6
    71b8:	bl	3a20 <sf_gen_or>
    71bc:	b	6818 <gen_linktype+0xe8>
    71c0:	ldr	r3, [pc, #860]	; 7524 <gen_linktype+0xdf4>
    71c4:	cmp	r0, r3
    71c8:	beq	727c <gen_linktype+0xb4c>
    71cc:	ldr	r3, [pc, #808]	; 74fc <gen_linktype+0xdcc>
    71d0:	cmp	r0, r3
    71d4:	bne	71fc <gen_linktype+0xacc>
    71d8:	mov	r3, #196	; 0xc4
    71dc:	mov	r2, #16
    71e0:	ldr	r1, [pc, #884]	; 755c <gen_linktype+0xe2c>
    71e4:	add	r1, pc, r1
    71e8:	ldr	r1, [r1, #944]	; 0x3b0
    71ec:	mov	r0, #1
    71f0:	bl	47d8 <gen_cmp>
    71f4:	mov	r5, r0
    71f8:	b	6818 <gen_linktype+0xe8>
    71fc:	mov	r0, #0
    7200:	bl	23cc <gen_uncond>
    7204:	mov	r5, r0
    7208:	b	6818 <gen_linktype+0xe8>
    720c:	ldr	r3, [pc, #844]	; 7560 <gen_linktype+0xe30>
    7210:	add	r3, pc, r3
    7214:	ldr	r4, [r3, #944]	; 0x3b0
    7218:	mov	r3, #212	; 0xd4
    721c:	mov	r2, #16
    7220:	mov	r1, r4
    7224:	mov	r0, #1
    7228:	bl	47d8 <gen_cmp>
    722c:	mov	r6, r0
    7230:	mov	r3, #240	; 0xf0
    7234:	mov	r2, #16
    7238:	mov	r1, r4
    723c:	mov	r0, #1
    7240:	bl	47d8 <gen_cmp>
    7244:	mov	r5, r0
    7248:	mov	r1, r0
    724c:	mov	r0, r6
    7250:	bl	3a20 <sf_gen_or>
    7254:	b	6818 <gen_linktype+0xe8>
    7258:	mov	r3, #214	; 0xd6
    725c:	mov	r2, #16
    7260:	ldr	r1, [pc, #764]	; 7564 <gen_linktype+0xe34>
    7264:	add	r1, pc, r1
    7268:	ldr	r1, [r1, #944]	; 0x3b0
    726c:	mov	r0, #1
    7270:	bl	47d8 <gen_cmp>
    7274:	mov	r5, r0
    7278:	b	6818 <gen_linktype+0xe8>
    727c:	mov	r3, #221	; 0xdd
    7280:	mov	r2, #16
    7284:	ldr	r1, [pc, #732]	; 7568 <gen_linktype+0xe38>
    7288:	add	r1, pc, r1
    728c:	ldr	r1, [r1, #944]	; 0x3b0
    7290:	mov	r0, #1
    7294:	bl	47d8 <gen_cmp>
    7298:	mov	r5, r0
    729c:	b	6818 <gen_linktype+0xe8>
    72a0:	ldr	r3, [pc, #636]	; 7524 <gen_linktype+0xdf4>
    72a4:	cmp	r0, r3
    72a8:	moveq	r0, #1
    72ac:	movne	r0, #0
    72b0:	bl	23cc <gen_uncond>
    72b4:	mov	r5, r0
    72b8:	b	6818 <gen_linktype+0xe8>
    72bc:	cmp	r0, #2048	; 0x800
    72c0:	beq	72e8 <gen_linktype+0xbb8>
    72c4:	ldr	r3, [pc, #560]	; 74fc <gen_linktype+0xdcc>
    72c8:	cmp	r0, r3
    72cc:	beq	7304 <gen_linktype+0xbd4>
    72d0:	cmp	r0, #254	; 0xfe
    72d4:	beq	7320 <gen_linktype+0xbf0>
    72d8:	mov	r0, #0
    72dc:	bl	23cc <gen_uncond>
    72e0:	mov	r5, r0
    72e4:	b	6818 <gen_linktype+0xe8>
    72e8:	mov	r3, #972	; 0x3cc
    72ec:	mov	r2, #8
    72f0:	mov	r1, #2
    72f4:	mov	r0, #1
    72f8:	bl	47d8 <gen_cmp>
    72fc:	mov	r5, r0
    7300:	b	6818 <gen_linktype+0xe8>
    7304:	ldr	r3, [pc, #608]	; 756c <gen_linktype+0xe3c>
    7308:	mov	r2, #8
    730c:	mov	r1, #2
    7310:	mov	r0, #1
    7314:	bl	47d8 <gen_cmp>
    7318:	mov	r5, r0
    731c:	b	6818 <gen_linktype+0xe8>
    7320:	ldr	r3, [pc, #584]	; 7570 <gen_linktype+0xe40>
    7324:	mov	r2, #8
    7328:	mov	r1, #2
    732c:	mov	r0, #1
    7330:	bl	47d8 <gen_cmp>
    7334:	mov	r4, r0
    7338:	ldr	r3, [pc, #564]	; 7574 <gen_linktype+0xe44>
    733c:	mov	r2, #8
    7340:	mov	r1, #2
    7344:	mov	r0, #1
    7348:	bl	47d8 <gen_cmp>
    734c:	mov	r6, r0
    7350:	ldr	r3, [pc, #544]	; 7578 <gen_linktype+0xe48>
    7354:	mov	r2, #8
    7358:	mov	r1, #2
    735c:	mov	r0, #1
    7360:	bl	47d8 <gen_cmp>
    7364:	mov	r5, r0
    7368:	mov	r1, r0
    736c:	mov	r0, r6
    7370:	bl	3a20 <sf_gen_or>
    7374:	mov	r1, r5
    7378:	mov	r0, r4
    737c:	bl	3a20 <sf_gen_or>
    7380:	b	6818 <gen_linktype+0xe8>
    7384:	ldr	r0, [pc, #496]	; 757c <gen_linktype+0xe4c>
    7388:	add	r0, pc, r0
    738c:	bl	22b4 <sf_bpf_error>
    7390:	mvn	r3, #255	; 0xff
    7394:	str	r3, [sp]
    7398:	ldr	r3, [pc, #480]	; 7580 <gen_linktype+0xe50>
    739c:	mov	r2, #0
    73a0:	mov	r1, r2
    73a4:	mov	r0, #1
    73a8:	bl	52f0 <gen_mcmp>
    73ac:	mov	r5, r0
    73b0:	b	6818 <gen_linktype+0xe8>
    73b4:	cmp	r0, #2048	; 0x800
    73b8:	beq	73d8 <gen_linktype+0xca8>
    73bc:	ldr	r3, [pc, #312]	; 74fc <gen_linktype+0xdcc>
    73c0:	cmp	r0, r3
    73c4:	beq	73fc <gen_linktype+0xccc>
    73c8:	mov	r0, #0
    73cc:	bl	23cc <gen_uncond>
    73d0:	mov	r5, r0
    73d4:	b	6818 <gen_linktype+0xe8>
    73d8:	mov	r3, #2
    73dc:	mov	r2, #16
    73e0:	ldr	r1, [pc, #412]	; 7584 <gen_linktype+0xe54>
    73e4:	add	r1, pc, r1
    73e8:	ldr	r1, [r1, #944]	; 0x3b0
    73ec:	mov	r0, #1
    73f0:	bl	47d8 <gen_cmp>
    73f4:	mov	r5, r0
    73f8:	b	6818 <gen_linktype+0xe8>
    73fc:	mov	r3, #26
    7400:	mov	r2, #16
    7404:	ldr	r1, [pc, #380]	; 7588 <gen_linktype+0xe58>
    7408:	add	r1, pc, r1
    740c:	ldr	r1, [r1, #944]	; 0x3b0
    7410:	mov	r0, #1
    7414:	bl	47d8 <gen_cmp>
    7418:	mov	r5, r0
    741c:	b	6818 <gen_linktype+0xe8>
    7420:	ldr	r0, [pc, #356]	; 758c <gen_linktype+0xe5c>
    7424:	add	r0, pc, r0
    7428:	bl	22b4 <sf_bpf_error>
    742c:	ldr	r0, [pc, #348]	; 7590 <gen_linktype+0xe60>
    7430:	add	r0, pc, r0
    7434:	bl	22b4 <sf_bpf_error>
    7438:	ldr	r0, [pc, #340]	; 7594 <gen_linktype+0xe64>
    743c:	add	r0, pc, r0
    7440:	bl	22b4 <sf_bpf_error>
    7444:	ldr	r0, [pc, #332]	; 7598 <gen_linktype+0xe68>
    7448:	add	r0, pc, r0
    744c:	bl	22b4 <sf_bpf_error>
    7450:	ldr	r0, [pc, #324]	; 759c <gen_linktype+0xe6c>
    7454:	add	r0, pc, r0
    7458:	bl	22b4 <sf_bpf_error>
    745c:	ldr	r0, [pc, #316]	; 75a0 <gen_linktype+0xe70>
    7460:	add	r0, pc, r0
    7464:	bl	22b4 <sf_bpf_error>
    7468:	ldr	r0, [pc, #308]	; 75a4 <gen_linktype+0xe74>
    746c:	add	r0, pc, r0
    7470:	bl	22b4 <sf_bpf_error>
    7474:	ldr	r0, [pc, #300]	; 75a8 <gen_linktype+0xe78>
    7478:	add	r0, pc, r0
    747c:	bl	22b4 <sf_bpf_error>
    7480:	ldr	r0, [pc, #292]	; 75ac <gen_linktype+0xe7c>
    7484:	add	r0, pc, r0
    7488:	bl	22b4 <sf_bpf_error>
    748c:	ldr	r0, [pc, #284]	; 75b0 <gen_linktype+0xe80>
    7490:	add	r0, pc, r0
    7494:	bl	22b4 <sf_bpf_error>
    7498:	ldr	r0, [pc, #276]	; 75b4 <gen_linktype+0xe84>
    749c:	add	r0, pc, r0
    74a0:	bl	22b4 <sf_bpf_error>
    74a4:	ldr	r0, [pc, #268]	; 75b8 <gen_linktype+0xe88>
    74a8:	add	r0, pc, r0
    74ac:	bl	22b4 <sf_bpf_error>
    74b0:	ldr	r0, [pc, #260]	; 75bc <gen_linktype+0xe8c>
    74b4:	add	r0, pc, r0
    74b8:	bl	22b4 <sf_bpf_error>
    74bc:	ldr	r0, [pc, #252]	; 75c0 <gen_linktype+0xe90>
    74c0:	add	r0, pc, r0
    74c4:	bl	22b4 <sf_bpf_error>
    74c8:	ldr	r3, [pc, #244]	; 75c4 <gen_linktype+0xe94>
    74cc:	add	r3, pc, r3
    74d0:	ldr	r1, [r3, #944]	; 0x3b0
    74d4:	cmn	r1, #1
    74d8:	beq	74f4 <gen_linktype+0xdc4>
    74dc:	mov	r3, r0
    74e0:	mov	r2, #8
    74e4:	mov	r0, #1
    74e8:	bl	47d8 <gen_cmp>
    74ec:	mov	r5, r0
    74f0:	b	6818 <gen_linktype+0xe8>
    74f4:	bl	f18 <abort@plt>
    74f8:	.word	0x0002ab38
    74fc:	.word	0x000086dd
    7500:	.word	0x0000ce80
    7504:	.word	0x0002ab40
    7508:	.word	0x0002ab2c
    750c:	.word	0x0002a770
    7510:	.word	0x0000fefe
    7514:	.word	0x0002a738
    7518:	.word	0x0002a660
    751c:	.word	0x00008137
    7520:	.word	0x0002a580
    7524:	.word	0x0000809b
    7528:	.word	0x000005dc
    752c:	.word	0x0002a4e8
    7530:	.word	0x0002a4c4
    7534:	.word	0x0002a484
    7538:	.word	0x00080007
    753c:	.word	0x000080f3
    7540:	.word	0x0002a414
    7544:	.word	0x0002a320
    7548:	.word	0x0002a2fc
    754c:	.word	0x0002a280
    7550:	.word	0x00008035
    7554:	.word	0x00000806
    7558:	.word	0x0002a1f0
    755c:	.word	0x0002a184
    7560:	.word	0x0002a158
    7564:	.word	0x0002a104
    7568:	.word	0x0002a0e0
    756c:	.word	0x0000038e
    7570:	.word	0x00000381
    7574:	.word	0x00000382
    7578:	.word	0x00000383
    757c:	.word	0x0000c2e0
    7580:	.word	0x4d474300
    7584:	.word	0x00029f84
    7588:	.word	0x00029f60
    758c:	.word	0x0000c288
    7590:	.word	0x0000c2ac
    7594:	.word	0x0000c2d4
    7598:	.word	0x0000c2f8
    759c:	.word	0x0000c31c
    75a0:	.word	0x0000c340
    75a4:	.word	0x0000c364
    75a8:	.word	0x0000c38c
    75ac:	.word	0x0000c3b0
    75b0:	.word	0x0000c3dc
    75b4:	.word	0x0000c408
    75b8:	.word	0x0000c42c
    75bc:	.word	0x0000c450
    75c0:	.word	0x0000c474
    75c4:	.word	0x00029e9c

000075c8 <gen_proto>:
    75c8:	push	{r4, r5, r6, lr}
    75cc:	cmp	r2, #0
    75d0:	bne	7688 <gen_proto+0xc0>
    75d4:	mov	r4, r0
    75d8:	cmp	r1, #40	; 0x28
    75dc:	addls	pc, pc, r1, lsl #2
    75e0:	b	7930 <gen_proto+0x368>
    75e4:	b	7694 <gen_proto+0xcc>
    75e8:	b	783c <gen_proto+0x274>
    75ec:	b	76cc <gen_proto+0x104>
    75f0:	b	77dc <gen_proto+0x214>
    75f4:	b	77e8 <gen_proto+0x220>
    75f8:	b	7860 <gen_proto+0x298>
    75fc:	b	7854 <gen_proto+0x28c>
    7600:	b	7848 <gen_proto+0x280>
    7604:	b	786c <gen_proto+0x2a4>
    7608:	b	7878 <gen_proto+0x2b0>
    760c:	b	7884 <gen_proto+0x2bc>
    7610:	b	77f4 <gen_proto+0x22c>
    7614:	b	7800 <gen_proto+0x238>
    7618:	b	7818 <gen_proto+0x250>
    761c:	b	780c <gen_proto+0x244>
    7620:	b	7824 <gen_proto+0x25c>
    7624:	b	7830 <gen_proto+0x268>
    7628:	b	78a8 <gen_proto+0x2e0>
    762c:	b	78dc <gen_proto+0x314>
    7630:	b	78e8 <gen_proto+0x320>
    7634:	b	78f4 <gen_proto+0x32c>
    7638:	b	7890 <gen_proto+0x2c8>
    763c:	b	789c <gen_proto+0x2d4>
    7640:	b	7930 <gen_proto+0x368>
    7644:	b	7700 <gen_proto+0x138>
    7648:	b	7930 <gen_proto+0x368>
    764c:	b	77a0 <gen_proto+0x1d8>
    7650:	b	7930 <gen_proto+0x368>
    7654:	b	7900 <gen_proto+0x338>
    7658:	b	790c <gen_proto+0x344>
    765c:	b	7918 <gen_proto+0x350>
    7660:	b	7930 <gen_proto+0x368>
    7664:	b	7930 <gen_proto+0x368>
    7668:	b	7930 <gen_proto+0x368>
    766c:	b	7930 <gen_proto+0x368>
    7670:	b	7930 <gen_proto+0x368>
    7674:	b	7930 <gen_proto+0x368>
    7678:	b	7930 <gen_proto+0x368>
    767c:	b	7930 <gen_proto+0x368>
    7680:	b	7930 <gen_proto+0x368>
    7684:	b	7924 <gen_proto+0x35c>
    7688:	ldr	r0, [pc, #676]	; 7934 <gen_proto+0x36c>
    768c:	add	r0, pc, r0
    7690:	bl	22b4 <sf_bpf_error>
    7694:	mov	r2, #0
    7698:	mov	r1, #2
    769c:	bl	75c8 <gen_proto>
    76a0:	mov	r5, r0
    76a4:	mov	r2, #0
    76a8:	mov	r1, #17
    76ac:	mov	r0, r4
    76b0:	bl	75c8 <gen_proto>
    76b4:	mov	r4, r0
    76b8:	mov	r1, r0
    76bc:	mov	r0, r5
    76c0:	bl	3a20 <sf_gen_or>
    76c4:	mov	r0, r4
    76c8:	pop	{r4, r5, r6, pc}
    76cc:	mov	r0, #2048	; 0x800
    76d0:	bl	6730 <gen_linktype>
    76d4:	mov	r5, r0
    76d8:	mov	r3, r4
    76dc:	mov	r2, #16
    76e0:	mov	r1, #9
    76e4:	mov	r0, #3
    76e8:	bl	47d8 <gen_cmp>
    76ec:	mov	r4, r0
    76f0:	mov	r1, r0
    76f4:	mov	r0, r5
    76f8:	bl	399c <sf_gen_and>
    76fc:	b	76c4 <gen_proto+0xfc>
    7700:	ldr	r3, [pc, #560]	; 7938 <gen_proto+0x370>
    7704:	add	r3, pc, r3
    7708:	ldr	r3, [r3, #852]	; 0x354
    770c:	cmp	r3, #104	; 0x68
    7710:	beq	7738 <gen_proto+0x170>
    7714:	cmp	r3, #107	; 0x6b
    7718:	bne	776c <gen_proto+0x1a4>
    771c:	orr	r3, r0, #768	; 0x300
    7720:	mov	r2, #8
    7724:	mov	r1, #2
    7728:	mov	r0, #1
    772c:	bl	47d8 <gen_cmp>
    7730:	mov	r4, r0
    7734:	b	76c4 <gen_proto+0xfc>
    7738:	ldr	r0, [pc, #508]	; 793c <gen_proto+0x374>
    773c:	bl	6730 <gen_linktype>
    7740:	mov	r5, r0
    7744:	mov	r3, r4
    7748:	mov	r2, #16
    774c:	mov	r1, #1
    7750:	mov	r0, #4
    7754:	bl	47d8 <gen_cmp>
    7758:	mov	r4, r0
    775c:	mov	r1, r0
    7760:	mov	r0, r5
    7764:	bl	399c <sf_gen_and>
    7768:	b	76c4 <gen_proto+0xfc>
    776c:	mov	r0, #254	; 0xfe
    7770:	bl	6730 <gen_linktype>
    7774:	mov	r5, r0
    7778:	mov	r3, r4
    777c:	mov	r2, #16
    7780:	mov	r1, #0
    7784:	mov	r0, #4
    7788:	bl	47d8 <gen_cmp>
    778c:	mov	r4, r0
    7790:	mov	r1, r0
    7794:	mov	r0, r5
    7798:	bl	399c <sf_gen_and>
    779c:	b	76c4 <gen_proto+0xfc>
    77a0:	mov	r2, #0
    77a4:	mov	r1, #24
    77a8:	mov	r0, #131	; 0x83
    77ac:	bl	75c8 <gen_proto>
    77b0:	mov	r5, r0
    77b4:	mov	r3, r4
    77b8:	mov	r2, #16
    77bc:	mov	r1, #4
    77c0:	mov	r0, r1
    77c4:	bl	47d8 <gen_cmp>
    77c8:	mov	r4, r0
    77cc:	mov	r1, r0
    77d0:	mov	r0, r5
    77d4:	bl	399c <sf_gen_and>
    77d8:	b	76c4 <gen_proto+0xfc>
    77dc:	ldr	r0, [pc, #348]	; 7940 <gen_proto+0x378>
    77e0:	add	r0, pc, r0
    77e4:	bl	22b4 <sf_bpf_error>
    77e8:	ldr	r0, [pc, #340]	; 7944 <gen_proto+0x37c>
    77ec:	add	r0, pc, r0
    77f0:	bl	22b4 <sf_bpf_error>
    77f4:	ldr	r0, [pc, #332]	; 7948 <gen_proto+0x380>
    77f8:	add	r0, pc, r0
    77fc:	bl	22b4 <sf_bpf_error>
    7800:	ldr	r0, [pc, #324]	; 794c <gen_proto+0x384>
    7804:	add	r0, pc, r0
    7808:	bl	22b4 <sf_bpf_error>
    780c:	ldr	r0, [pc, #316]	; 7950 <gen_proto+0x388>
    7810:	add	r0, pc, r0
    7814:	bl	22b4 <sf_bpf_error>
    7818:	ldr	r0, [pc, #308]	; 7954 <gen_proto+0x38c>
    781c:	add	r0, pc, r0
    7820:	bl	22b4 <sf_bpf_error>
    7824:	ldr	r0, [pc, #300]	; 7958 <gen_proto+0x390>
    7828:	add	r0, pc, r0
    782c:	bl	22b4 <sf_bpf_error>
    7830:	ldr	r0, [pc, #292]	; 795c <gen_proto+0x394>
    7834:	add	r0, pc, r0
    7838:	bl	22b4 <sf_bpf_error>
    783c:	bl	6730 <gen_linktype>
    7840:	mov	r4, r0
    7844:	b	76c4 <gen_proto+0xfc>
    7848:	ldr	r0, [pc, #272]	; 7960 <gen_proto+0x398>
    784c:	add	r0, pc, r0
    7850:	bl	22b4 <sf_bpf_error>
    7854:	ldr	r0, [pc, #264]	; 7964 <gen_proto+0x39c>
    7858:	add	r0, pc, r0
    785c:	bl	22b4 <sf_bpf_error>
    7860:	ldr	r0, [pc, #256]	; 7968 <gen_proto+0x3a0>
    7864:	add	r0, pc, r0
    7868:	bl	22b4 <sf_bpf_error>
    786c:	ldr	r0, [pc, #248]	; 796c <gen_proto+0x3a4>
    7870:	add	r0, pc, r0
    7874:	bl	22b4 <sf_bpf_error>
    7878:	ldr	r0, [pc, #240]	; 7970 <gen_proto+0x3a8>
    787c:	add	r0, pc, r0
    7880:	bl	22b4 <sf_bpf_error>
    7884:	ldr	r0, [pc, #232]	; 7974 <gen_proto+0x3ac>
    7888:	add	r0, pc, r0
    788c:	bl	22b4 <sf_bpf_error>
    7890:	ldr	r0, [pc, #224]	; 7978 <gen_proto+0x3b0>
    7894:	add	r0, pc, r0
    7898:	bl	22b4 <sf_bpf_error>
    789c:	ldr	r0, [pc, #216]	; 797c <gen_proto+0x3b4>
    78a0:	add	r0, pc, r0
    78a4:	bl	22b4 <sf_bpf_error>
    78a8:	ldr	r0, [pc, #208]	; 7980 <gen_proto+0x3b8>
    78ac:	bl	6730 <gen_linktype>
    78b0:	mov	r5, r0
    78b4:	mov	r3, r4
    78b8:	mov	r2, #16
    78bc:	mov	r1, #6
    78c0:	mov	r0, #3
    78c4:	bl	47d8 <gen_cmp>
    78c8:	mov	r4, r0
    78cc:	mov	r1, r0
    78d0:	mov	r0, r5
    78d4:	bl	399c <sf_gen_and>
    78d8:	b	76c4 <gen_proto+0xfc>
    78dc:	ldr	r0, [pc, #160]	; 7984 <gen_proto+0x3bc>
    78e0:	add	r0, pc, r0
    78e4:	bl	22b4 <sf_bpf_error>
    78e8:	ldr	r0, [pc, #152]	; 7988 <gen_proto+0x3c0>
    78ec:	add	r0, pc, r0
    78f0:	bl	22b4 <sf_bpf_error>
    78f4:	ldr	r0, [pc, #144]	; 798c <gen_proto+0x3c4>
    78f8:	add	r0, pc, r0
    78fc:	bl	22b4 <sf_bpf_error>
    7900:	ldr	r0, [pc, #136]	; 7990 <gen_proto+0x3c8>
    7904:	add	r0, pc, r0
    7908:	bl	22b4 <sf_bpf_error>
    790c:	ldr	r0, [pc, #128]	; 7994 <gen_proto+0x3cc>
    7910:	add	r0, pc, r0
    7914:	bl	22b4 <sf_bpf_error>
    7918:	ldr	r0, [pc, #120]	; 7998 <gen_proto+0x3d0>
    791c:	add	r0, pc, r0
    7920:	bl	22b4 <sf_bpf_error>
    7924:	ldr	r0, [pc, #112]	; 799c <gen_proto+0x3d4>
    7928:	add	r0, pc, r0
    792c:	bl	22b4 <sf_bpf_error>
    7930:	bl	f18 <abort@plt>
    7934:	.word	0x0000c2d8
    7938:	.word	0x00029c64
    793c:	.word	0x0000fefe
    7940:	.word	0x0000c1a4
    7944:	.word	0x0000c1c4
    7948:	.word	0x0000c1e4
    794c:	.word	0x0000c200
    7950:	.word	0x0000c21c
    7954:	.word	0x0000c23c
    7958:	.word	0x0000c25c
    795c:	.word	0x0000c27c
    7960:	.word	0x0000c290
    7964:	.word	0x0000c29c
    7968:	.word	0x0000c2a8
    796c:	.word	0x0000c2b4
    7970:	.word	0x0000c2c0
    7974:	.word	0x0000c2cc
    7978:	.word	0x0000c2d8
    797c:	.word	0x0000c2e4
    7980:	.word	0x000086dd
    7984:	.word	0x0000c2bc
    7988:	.word	0x0000c2c8
    798c:	.word	0x0000c2bc
    7990:	.word	0x0000c2c4
    7994:	.word	0x0000c2d0
    7998:	.word	0x0000c2dc
    799c:	.word	0x0000c2ec

000079a0 <sf_gen_proto_abbrev>:
    79a0:	push	{r4, r5, r6, lr}
    79a4:	sub	r0, r0, #1
    79a8:	cmp	r0, #39	; 0x27
    79ac:	addls	pc, pc, r0, lsl #2
    79b0:	b	7fa0 <sf_gen_proto_abbrev+0x600>
    79b4:	b	7ba8 <sf_gen_proto_abbrev+0x208>
    79b8:	b	7b78 <sf_gen_proto_abbrev+0x1d8>
    79bc:	b	7b88 <sf_gen_proto_abbrev+0x1e8>
    79c0:	b	7b98 <sf_gen_proto_abbrev+0x1f8>
    79c4:	b	7a54 <sf_gen_proto_abbrev+0xb4>
    79c8:	b	7a88 <sf_gen_proto_abbrev+0xe8>
    79cc:	b	7ab8 <sf_gen_proto_abbrev+0x118>
    79d0:	b	7ae8 <sf_gen_proto_abbrev+0x148>
    79d4:	b	7b00 <sf_gen_proto_abbrev+0x160>
    79d8:	b	7b18 <sf_gen_proto_abbrev+0x178>
    79dc:	b	7bb4 <sf_gen_proto_abbrev+0x214>
    79e0:	b	7bd4 <sf_gen_proto_abbrev+0x234>
    79e4:	b	7bf4 <sf_gen_proto_abbrev+0x254>
    79e8:	b	7be4 <sf_gen_proto_abbrev+0x244>
    79ec:	b	7c14 <sf_gen_proto_abbrev+0x274>
    79f0:	b	7c04 <sf_gen_proto_abbrev+0x264>
    79f4:	b	7c24 <sf_gen_proto_abbrev+0x284>
    79f8:	b	7c34 <sf_gen_proto_abbrev+0x294>
    79fc:	b	7c4c <sf_gen_proto_abbrev+0x2ac>
    7a00:	b	7c7c <sf_gen_proto_abbrev+0x2dc>
    7a04:	b	7b30 <sf_gen_proto_abbrev+0x190>
    7a08:	b	7b60 <sf_gen_proto_abbrev+0x1c0>
    7a0c:	b	7bc4 <sf_gen_proto_abbrev+0x224>
    7a10:	b	7cac <sf_gen_proto_abbrev+0x30c>
    7a14:	b	7cbc <sf_gen_proto_abbrev+0x31c>
    7a18:	b	7cd4 <sf_gen_proto_abbrev+0x334>
    7a1c:	b	7f4c <sf_gen_proto_abbrev+0x5ac>
    7a20:	b	7f64 <sf_gen_proto_abbrev+0x5c4>
    7a24:	b	7f74 <sf_gen_proto_abbrev+0x5d4>
    7a28:	b	7f84 <sf_gen_proto_abbrev+0x5e4>
    7a2c:	b	7cec <sf_gen_proto_abbrev+0x34c>
    7a30:	b	7d6c <sf_gen_proto_abbrev+0x3cc>
    7a34:	b	7dec <sf_gen_proto_abbrev+0x44c>
    7a38:	b	7fa0 <sf_gen_proto_abbrev+0x600>
    7a3c:	b	7fa0 <sf_gen_proto_abbrev+0x600>
    7a40:	b	7e74 <sf_gen_proto_abbrev+0x4d4>
    7a44:	b	7edc <sf_gen_proto_abbrev+0x53c>
    7a48:	b	7f14 <sf_gen_proto_abbrev+0x574>
    7a4c:	b	7e3c <sf_gen_proto_abbrev+0x49c>
    7a50:	b	7f94 <sf_gen_proto_abbrev+0x5f4>
    7a54:	mov	r2, #0
    7a58:	mov	r1, #2
    7a5c:	mov	r0, #132	; 0x84
    7a60:	bl	75c8 <gen_proto>
    7a64:	mov	r4, r0
    7a68:	mov	r2, #0
    7a6c:	mov	r1, #17
    7a70:	mov	r0, #132	; 0x84
    7a74:	bl	75c8 <gen_proto>
    7a78:	mov	r1, r4
    7a7c:	bl	3a20 <sf_gen_or>
    7a80:	mov	r0, r4
    7a84:	pop	{r4, r5, r6, pc}
    7a88:	mov	r2, #0
    7a8c:	mov	r1, #2
    7a90:	mov	r0, #6
    7a94:	bl	75c8 <gen_proto>
    7a98:	mov	r4, r0
    7a9c:	mov	r2, #0
    7aa0:	mov	r1, #17
    7aa4:	mov	r0, #6
    7aa8:	bl	75c8 <gen_proto>
    7aac:	mov	r1, r4
    7ab0:	bl	3a20 <sf_gen_or>
    7ab4:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7ab8:	mov	r2, #0
    7abc:	mov	r1, #2
    7ac0:	mov	r0, #17
    7ac4:	bl	75c8 <gen_proto>
    7ac8:	mov	r4, r0
    7acc:	mov	r2, #0
    7ad0:	mov	r1, #17
    7ad4:	mov	r0, r1
    7ad8:	bl	75c8 <gen_proto>
    7adc:	mov	r1, r4
    7ae0:	bl	3a20 <sf_gen_or>
    7ae4:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7ae8:	mov	r2, #0
    7aec:	mov	r1, #2
    7af0:	mov	r0, #1
    7af4:	bl	75c8 <gen_proto>
    7af8:	mov	r4, r0
    7afc:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7b00:	mov	r2, #0
    7b04:	mov	r1, #2
    7b08:	mov	r0, r1
    7b0c:	bl	75c8 <gen_proto>
    7b10:	mov	r4, r0
    7b14:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7b18:	mov	r2, #0
    7b1c:	mov	r1, #2
    7b20:	mov	r0, #9
    7b24:	bl	75c8 <gen_proto>
    7b28:	mov	r4, r0
    7b2c:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7b30:	mov	r2, #0
    7b34:	mov	r1, #2
    7b38:	mov	r0, #103	; 0x67
    7b3c:	bl	75c8 <gen_proto>
    7b40:	mov	r4, r0
    7b44:	mov	r2, #0
    7b48:	mov	r1, #17
    7b4c:	mov	r0, #103	; 0x67
    7b50:	bl	75c8 <gen_proto>
    7b54:	mov	r1, r4
    7b58:	bl	3a20 <sf_gen_or>
    7b5c:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7b60:	mov	r2, #0
    7b64:	mov	r1, #2
    7b68:	mov	r0, #112	; 0x70
    7b6c:	bl	75c8 <gen_proto>
    7b70:	mov	r4, r0
    7b74:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7b78:	mov	r0, #2048	; 0x800
    7b7c:	bl	6730 <gen_linktype>
    7b80:	mov	r4, r0
    7b84:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7b88:	ldr	r0, [pc, #1044]	; 7fa4 <sf_gen_proto_abbrev+0x604>
    7b8c:	bl	6730 <gen_linktype>
    7b90:	mov	r4, r0
    7b94:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7b98:	ldr	r0, [pc, #1032]	; 7fa8 <sf_gen_proto_abbrev+0x608>
    7b9c:	bl	6730 <gen_linktype>
    7ba0:	mov	r4, r0
    7ba4:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7ba8:	ldr	r0, [pc, #1020]	; 7fac <sf_gen_proto_abbrev+0x60c>
    7bac:	add	r0, pc, r0
    7bb0:	bl	22b4 <sf_bpf_error>
    7bb4:	ldr	r0, [pc, #1012]	; 7fb0 <sf_gen_proto_abbrev+0x610>
    7bb8:	bl	6730 <gen_linktype>
    7bbc:	mov	r4, r0
    7bc0:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7bc4:	ldr	r0, [pc, #1000]	; 7fb4 <sf_gen_proto_abbrev+0x614>
    7bc8:	bl	6730 <gen_linktype>
    7bcc:	mov	r4, r0
    7bd0:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7bd4:	ldr	r0, [pc, #988]	; 7fb8 <sf_gen_proto_abbrev+0x618>
    7bd8:	bl	6730 <gen_linktype>
    7bdc:	mov	r4, r0
    7be0:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7be4:	ldr	r0, [pc, #976]	; 7fbc <sf_gen_proto_abbrev+0x61c>
    7be8:	bl	6730 <gen_linktype>
    7bec:	mov	r4, r0
    7bf0:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7bf4:	ldr	r0, [pc, #964]	; 7fc0 <sf_gen_proto_abbrev+0x620>
    7bf8:	bl	6730 <gen_linktype>
    7bfc:	mov	r4, r0
    7c00:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7c04:	ldr	r0, [pc, #952]	; 7fc4 <sf_gen_proto_abbrev+0x624>
    7c08:	bl	6730 <gen_linktype>
    7c0c:	mov	r4, r0
    7c10:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7c14:	ldr	r0, [pc, #940]	; 7fc8 <sf_gen_proto_abbrev+0x628>
    7c18:	bl	6730 <gen_linktype>
    7c1c:	mov	r4, r0
    7c20:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7c24:	ldr	r0, [pc, #928]	; 7fcc <sf_gen_proto_abbrev+0x62c>
    7c28:	bl	6730 <gen_linktype>
    7c2c:	mov	r4, r0
    7c30:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7c34:	mov	r2, #0
    7c38:	mov	r1, #17
    7c3c:	mov	r0, #58	; 0x3a
    7c40:	bl	75c8 <gen_proto>
    7c44:	mov	r4, r0
    7c48:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7c4c:	mov	r2, #0
    7c50:	mov	r1, #2
    7c54:	mov	r0, #51	; 0x33
    7c58:	bl	75c8 <gen_proto>
    7c5c:	mov	r4, r0
    7c60:	mov	r2, #0
    7c64:	mov	r1, #17
    7c68:	mov	r0, #51	; 0x33
    7c6c:	bl	75c8 <gen_proto>
    7c70:	mov	r1, r4
    7c74:	bl	3a20 <sf_gen_or>
    7c78:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7c7c:	mov	r2, #0
    7c80:	mov	r1, #2
    7c84:	mov	r0, #50	; 0x32
    7c88:	bl	75c8 <gen_proto>
    7c8c:	mov	r4, r0
    7c90:	mov	r2, #0
    7c94:	mov	r1, #17
    7c98:	mov	r0, #50	; 0x32
    7c9c:	bl	75c8 <gen_proto>
    7ca0:	mov	r1, r4
    7ca4:	bl	3a20 <sf_gen_or>
    7ca8:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7cac:	mov	r0, #254	; 0xfe
    7cb0:	bl	6730 <gen_linktype>
    7cb4:	mov	r4, r0
    7cb8:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7cbc:	mov	r2, #0
    7cc0:	mov	r1, #24
    7cc4:	mov	r0, #130	; 0x82
    7cc8:	bl	75c8 <gen_proto>
    7ccc:	mov	r4, r0
    7cd0:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7cd4:	mov	r2, #0
    7cd8:	mov	r1, #24
    7cdc:	mov	r0, #131	; 0x83
    7ce0:	bl	75c8 <gen_proto>
    7ce4:	mov	r4, r0
    7ce8:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7cec:	mov	r2, #0
    7cf0:	mov	r1, #26
    7cf4:	mov	r0, #15
    7cf8:	bl	75c8 <gen_proto>
    7cfc:	mov	r5, r0
    7d00:	mov	r2, #0
    7d04:	mov	r1, #26
    7d08:	mov	r0, #17
    7d0c:	bl	75c8 <gen_proto>
    7d10:	mov	r4, r0
    7d14:	mov	r1, r0
    7d18:	mov	r0, r5
    7d1c:	bl	3a20 <sf_gen_or>
    7d20:	mov	r2, #0
    7d24:	mov	r1, #26
    7d28:	mov	r0, #18
    7d2c:	bl	75c8 <gen_proto>
    7d30:	mov	r1, r4
    7d34:	bl	3a20 <sf_gen_or>
    7d38:	mov	r2, #0
    7d3c:	mov	r1, #26
    7d40:	mov	r0, #24
    7d44:	bl	75c8 <gen_proto>
    7d48:	mov	r1, r4
    7d4c:	bl	3a20 <sf_gen_or>
    7d50:	mov	r2, #0
    7d54:	mov	r1, #26
    7d58:	mov	r0, r1
    7d5c:	bl	75c8 <gen_proto>
    7d60:	mov	r1, r4
    7d64:	bl	3a20 <sf_gen_or>
    7d68:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7d6c:	mov	r2, #0
    7d70:	mov	r1, #26
    7d74:	mov	r0, #16
    7d78:	bl	75c8 <gen_proto>
    7d7c:	mov	r5, r0
    7d80:	mov	r2, #0
    7d84:	mov	r1, #26
    7d88:	mov	r0, #17
    7d8c:	bl	75c8 <gen_proto>
    7d90:	mov	r4, r0
    7d94:	mov	r1, r0
    7d98:	mov	r0, r5
    7d9c:	bl	3a20 <sf_gen_or>
    7da0:	mov	r2, #0
    7da4:	mov	r1, #26
    7da8:	mov	r0, #20
    7dac:	bl	75c8 <gen_proto>
    7db0:	mov	r1, r4
    7db4:	bl	3a20 <sf_gen_or>
    7db8:	mov	r2, #0
    7dbc:	mov	r1, #26
    7dc0:	mov	r0, #25
    7dc4:	bl	75c8 <gen_proto>
    7dc8:	mov	r1, r4
    7dcc:	bl	3a20 <sf_gen_or>
    7dd0:	mov	r2, #0
    7dd4:	mov	r1, #26
    7dd8:	mov	r0, #27
    7ddc:	bl	75c8 <gen_proto>
    7de0:	mov	r1, r4
    7de4:	bl	3a20 <sf_gen_or>
    7de8:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7dec:	mov	r2, #0
    7df0:	mov	r1, #26
    7df4:	mov	r0, #15
    7df8:	bl	75c8 <gen_proto>
    7dfc:	mov	r5, r0
    7e00:	mov	r2, #0
    7e04:	mov	r1, #26
    7e08:	mov	r0, #16
    7e0c:	bl	75c8 <gen_proto>
    7e10:	mov	r4, r0
    7e14:	mov	r1, r0
    7e18:	mov	r0, r5
    7e1c:	bl	3a20 <sf_gen_or>
    7e20:	mov	r2, #0
    7e24:	mov	r1, #26
    7e28:	mov	r0, #17
    7e2c:	bl	75c8 <gen_proto>
    7e30:	mov	r1, r4
    7e34:	bl	3a20 <sf_gen_or>
    7e38:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7e3c:	mov	r2, #0
    7e40:	mov	r1, #26
    7e44:	mov	r0, #18
    7e48:	bl	75c8 <gen_proto>
    7e4c:	mov	r5, r0
    7e50:	mov	r2, #0
    7e54:	mov	r1, #26
    7e58:	mov	r0, #20
    7e5c:	bl	75c8 <gen_proto>
    7e60:	mov	r4, r0
    7e64:	mov	r1, r0
    7e68:	mov	r0, r5
    7e6c:	bl	3a20 <sf_gen_or>
    7e70:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7e74:	mov	r2, #0
    7e78:	mov	r1, #26
    7e7c:	mov	r0, #24
    7e80:	bl	75c8 <gen_proto>
    7e84:	mov	r5, r0
    7e88:	mov	r2, #0
    7e8c:	mov	r1, #26
    7e90:	mov	r0, #25
    7e94:	bl	75c8 <gen_proto>
    7e98:	mov	r4, r0
    7e9c:	mov	r1, r0
    7ea0:	mov	r0, r5
    7ea4:	bl	3a20 <sf_gen_or>
    7ea8:	mov	r2, #0
    7eac:	mov	r1, #26
    7eb0:	mov	r0, r1
    7eb4:	bl	75c8 <gen_proto>
    7eb8:	mov	r1, r4
    7ebc:	bl	3a20 <sf_gen_or>
    7ec0:	mov	r2, #0
    7ec4:	mov	r1, #26
    7ec8:	mov	r0, #27
    7ecc:	bl	75c8 <gen_proto>
    7ed0:	mov	r1, r4
    7ed4:	bl	3a20 <sf_gen_or>
    7ed8:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7edc:	mov	r2, #0
    7ee0:	mov	r1, #26
    7ee4:	mov	r0, #24
    7ee8:	bl	75c8 <gen_proto>
    7eec:	mov	r5, r0
    7ef0:	mov	r2, #0
    7ef4:	mov	r1, #26
    7ef8:	mov	r0, #25
    7efc:	bl	75c8 <gen_proto>
    7f00:	mov	r4, r0
    7f04:	mov	r1, r0
    7f08:	mov	r0, r5
    7f0c:	bl	3a20 <sf_gen_or>
    7f10:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7f14:	mov	r2, #0
    7f18:	mov	r1, #26
    7f1c:	mov	r0, r1
    7f20:	bl	75c8 <gen_proto>
    7f24:	mov	r5, r0
    7f28:	mov	r2, #0
    7f2c:	mov	r1, #26
    7f30:	mov	r0, #27
    7f34:	bl	75c8 <gen_proto>
    7f38:	mov	r4, r0
    7f3c:	mov	r1, r0
    7f40:	mov	r0, r5
    7f44:	bl	3a20 <sf_gen_or>
    7f48:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7f4c:	mov	r2, #0
    7f50:	mov	r1, #24
    7f54:	mov	r0, #129	; 0x81
    7f58:	bl	75c8 <gen_proto>
    7f5c:	mov	r4, r0
    7f60:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7f64:	mov	r0, #66	; 0x42
    7f68:	bl	6730 <gen_linktype>
    7f6c:	mov	r4, r0
    7f70:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7f74:	mov	r0, #224	; 0xe0
    7f78:	bl	6730 <gen_linktype>
    7f7c:	mov	r4, r0
    7f80:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7f84:	mov	r0, #240	; 0xf0
    7f88:	bl	6730 <gen_linktype>
    7f8c:	mov	r4, r0
    7f90:	b	7a80 <sf_gen_proto_abbrev+0xe0>
    7f94:	ldr	r0, [pc, #52]	; 7fd0 <sf_gen_proto_abbrev+0x630>
    7f98:	add	r0, pc, r0
    7f9c:	bl	22b4 <sf_bpf_error>
    7fa0:	bl	f18 <abort@plt>
    7fa4:	.word	0x00000806
    7fa8:	.word	0x00008035
    7fac:	.word	0x0000c080
    7fb0:	.word	0x0000809b
    7fb4:	.word	0x000080f3
    7fb8:	.word	0x00006003
    7fbc:	.word	0x00006007
    7fc0:	.word	0x00006004
    7fc4:	.word	0x00006001
    7fc8:	.word	0x00006002
    7fcc:	.word	0x000086dd
    7fd0:	.word	0x0000bcb8

00007fd4 <sf_gen_load>:
    7fd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7fd8:	mov	r7, r0
    7fdc:	mov	r4, r1
    7fe0:	mov	r5, r2
    7fe4:	bl	245c <alloc_reg>
    7fe8:	mov	r6, r0
    7fec:	ldr	r2, [r4, #8]
    7ff0:	ldr	r3, [pc, #1004]	; 83e4 <sf_gen_load+0x410>
    7ff4:	add	r3, pc, r3
    7ff8:	add	r3, r3, r2, lsl #2
    7ffc:	mov	r2, #0
    8000:	str	r2, [r3, #788]	; 0x314
    8004:	cmp	r5, #2
    8008:	beq	8028 <sf_gen_load+0x54>
    800c:	cmp	r5, #4
    8010:	beq	80dc <sf_gen_load+0x108>
    8014:	cmp	r5, #1
    8018:	beq	80e4 <sf_gen_load+0x110>
    801c:	ldr	r0, [pc, #964]	; 83e8 <sf_gen_load+0x414>
    8020:	add	r0, pc, r0
    8024:	bl	22b4 <sf_bpf_error>
    8028:	mov	r5, #8
    802c:	sub	r3, r7, #1
    8030:	cmp	r3, #39	; 0x27
    8034:	addls	pc, pc, r3, lsl #2
    8038:	b	80ec <sf_gen_load+0x118>
    803c:	b	8180 <sf_gen_load+0x1ac>
    8040:	b	8224 <sf_gen_load+0x250>
    8044:	b	8224 <sf_gen_load+0x250>
    8048:	b	8224 <sf_gen_load+0x250>
    804c:	b	82f4 <sf_gen_load+0x320>
    8050:	b	82f4 <sf_gen_load+0x320>
    8054:	b	82f4 <sf_gen_load+0x320>
    8058:	b	82f4 <sf_gen_load+0x320>
    805c:	b	82f4 <sf_gen_load+0x320>
    8060:	b	82f4 <sf_gen_load+0x320>
    8064:	b	8224 <sf_gen_load+0x250>
    8068:	b	8224 <sf_gen_load+0x250>
    806c:	b	8224 <sf_gen_load+0x250>
    8070:	b	8224 <sf_gen_load+0x250>
    8074:	b	8224 <sf_gen_load+0x250>
    8078:	b	8224 <sf_gen_load+0x250>
    807c:	b	8224 <sf_gen_load+0x250>
    8080:	b	83d8 <sf_gen_load+0x404>
    8084:	b	80ec <sf_gen_load+0x118>
    8088:	b	80ec <sf_gen_load+0x118>
    808c:	b	82f4 <sf_gen_load+0x320>
    8090:	b	82f4 <sf_gen_load+0x320>
    8094:	b	80ec <sf_gen_load+0x118>
    8098:	b	80ec <sf_gen_load+0x118>
    809c:	b	80ec <sf_gen_load+0x118>
    80a0:	b	80ec <sf_gen_load+0x118>
    80a4:	b	80ec <sf_gen_load+0x118>
    80a8:	b	80ec <sf_gen_load+0x118>
    80ac:	b	80ec <sf_gen_load+0x118>
    80b0:	b	80ec <sf_gen_load+0x118>
    80b4:	b	80ec <sf_gen_load+0x118>
    80b8:	b	80ec <sf_gen_load+0x118>
    80bc:	b	80ec <sf_gen_load+0x118>
    80c0:	b	80ec <sf_gen_load+0x118>
    80c4:	b	80ec <sf_gen_load+0x118>
    80c8:	b	80ec <sf_gen_load+0x118>
    80cc:	b	80ec <sf_gen_load+0x118>
    80d0:	b	80ec <sf_gen_load+0x118>
    80d4:	b	80ec <sf_gen_load+0x118>
    80d8:	b	80f8 <sf_gen_load+0x124>
    80dc:	mov	r5, #0
    80e0:	b	802c <sf_gen_load+0x58>
    80e4:	mov	r5, #16
    80e8:	b	802c <sf_gen_load+0x58>
    80ec:	ldr	r0, [pc, #760]	; 83ec <sf_gen_load+0x418>
    80f0:	add	r0, pc, r0
    80f4:	bl	22b4 <sf_bpf_error>
    80f8:	ldr	r3, [pc, #752]	; 83f0 <sf_gen_load+0x41c>
    80fc:	add	r3, pc, r3
    8100:	ldr	r3, [r3, #852]	; 0x354
    8104:	bic	r2, r3, #8
    8108:	cmp	r2, #119	; 0x77
    810c:	cmpne	r3, #163	; 0xa3
    8110:	bne	8174 <sf_gen_load+0x1a0>
    8114:	mov	r0, r4
    8118:	bl	2414 <xfer_to_x>
    811c:	mov	r7, r0
    8120:	mov	r0, #20
    8124:	bl	22f0 <newchunk>
    8128:	mov	r1, r0
    812c:	orr	r5, r5, #64	; 0x40
    8130:	str	r5, [r0]
    8134:	mov	r0, r7
    8138:	bl	3aa8 <sf_append>
    813c:	mov	r1, r7
    8140:	ldr	r0, [r4, #4]
    8144:	bl	3aa8 <sf_append>
    8148:	str	r6, [r4, #8]
    814c:	mov	r0, #20
    8150:	bl	22f0 <newchunk>
    8154:	mov	r1, r0
    8158:	mov	r3, #2
    815c:	str	r3, [r0]
    8160:	str	r6, [r0, #12]
    8164:	ldr	r0, [r4, #4]
    8168:	bl	3aa8 <sf_append>
    816c:	mov	r0, r4
    8170:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8174:	ldr	r0, [pc, #632]	; 83f4 <sf_gen_load+0x420>
    8178:	add	r0, pc, r0
    817c:	bl	22b4 <sf_bpf_error>
    8180:	bl	254c <gen_llprefixlen>
    8184:	subs	r7, r0, #0
    8188:	beq	8214 <sf_gen_load+0x240>
    818c:	mov	r0, r4
    8190:	bl	2438 <xfer_to_a>
    8194:	mov	r1, r0
    8198:	mov	r0, r7
    819c:	bl	3aa8 <sf_append>
    81a0:	mov	r0, #20
    81a4:	bl	22f0 <newchunk>
    81a8:	mov	r1, r0
    81ac:	mov	r3, #12
    81b0:	str	r3, [r0]
    81b4:	mov	r0, r7
    81b8:	bl	3aa8 <sf_append>
    81bc:	mov	r0, #20
    81c0:	bl	22f0 <newchunk>
    81c4:	mov	r1, r0
    81c8:	mov	r3, #7
    81cc:	str	r3, [r0]
    81d0:	mov	r0, r7
    81d4:	bl	3aa8 <sf_append>
    81d8:	mov	r0, #20
    81dc:	bl	22f0 <newchunk>
    81e0:	mov	r1, r0
    81e4:	orr	r5, r5, #64	; 0x40
    81e8:	str	r5, [r0]
    81ec:	ldr	r3, [pc, #516]	; 83f8 <sf_gen_load+0x424>
    81f0:	add	r3, pc, r3
    81f4:	ldr	r3, [r3, #936]	; 0x3a8
    81f8:	str	r3, [r0, #12]
    81fc:	mov	r0, r7
    8200:	bl	3aa8 <sf_append>
    8204:	mov	r1, r7
    8208:	ldr	r0, [r4, #4]
    820c:	bl	3aa8 <sf_append>
    8210:	b	8148 <sf_gen_load+0x174>
    8214:	mov	r0, r4
    8218:	bl	2414 <xfer_to_x>
    821c:	mov	r7, r0
    8220:	b	81d8 <sf_gen_load+0x204>
    8224:	bl	26ec <gen_off_macpl>
    8228:	subs	r8, r0, #0
    822c:	beq	82e4 <sf_gen_load+0x310>
    8230:	mov	r0, r4
    8234:	bl	2438 <xfer_to_a>
    8238:	mov	r1, r0
    823c:	mov	r0, r8
    8240:	bl	3aa8 <sf_append>
    8244:	mov	r0, #20
    8248:	bl	22f0 <newchunk>
    824c:	mov	r1, r0
    8250:	mov	r3, #12
    8254:	str	r3, [r0]
    8258:	mov	r0, r8
    825c:	bl	3aa8 <sf_append>
    8260:	mov	r0, #20
    8264:	bl	22f0 <newchunk>
    8268:	mov	r1, r0
    826c:	mov	r3, #7
    8270:	str	r3, [r0]
    8274:	mov	r0, r8
    8278:	bl	3aa8 <sf_append>
    827c:	mov	r0, #20
    8280:	bl	22f0 <newchunk>
    8284:	mov	r1, r0
    8288:	orr	r5, r5, #64	; 0x40
    828c:	str	r5, [r0]
    8290:	ldr	r2, [pc, #356]	; 83fc <sf_gen_load+0x428>
    8294:	add	r2, pc, r2
    8298:	ldr	r3, [r2, #940]	; 0x3ac
    829c:	ldr	r2, [r2, #948]	; 0x3b4
    82a0:	add	r3, r3, r2
    82a4:	str	r3, [r0, #12]
    82a8:	mov	r0, r8
    82ac:	bl	3aa8 <sf_append>
    82b0:	mov	r1, r8
    82b4:	ldr	r0, [r4, #4]
    82b8:	bl	3aa8 <sf_append>
    82bc:	mov	r0, r7
    82c0:	bl	79a0 <sf_gen_proto_abbrev>
    82c4:	mov	r5, r0
    82c8:	ldr	r0, [r4]
    82cc:	cmp	r0, #0
    82d0:	beq	82dc <sf_gen_load+0x308>
    82d4:	mov	r1, r5
    82d8:	bl	399c <sf_gen_and>
    82dc:	str	r5, [r4]
    82e0:	b	8148 <sf_gen_load+0x174>
    82e4:	mov	r0, r4
    82e8:	bl	2414 <xfer_to_x>
    82ec:	mov	r8, r0
    82f0:	b	827c <sf_gen_load+0x2a8>
    82f4:	bl	4464 <gen_loadx_iphdrlen>
    82f8:	mov	r8, r0
    82fc:	mov	r0, r4
    8300:	bl	2438 <xfer_to_a>
    8304:	mov	r1, r0
    8308:	mov	r0, r8
    830c:	bl	3aa8 <sf_append>
    8310:	mov	r0, #20
    8314:	bl	22f0 <newchunk>
    8318:	mov	r1, r0
    831c:	mov	r3, #12
    8320:	str	r3, [r0]
    8324:	mov	r0, r8
    8328:	bl	3aa8 <sf_append>
    832c:	mov	r0, #20
    8330:	bl	22f0 <newchunk>
    8334:	mov	r1, r0
    8338:	mov	r3, #7
    833c:	str	r3, [r0]
    8340:	mov	r0, r8
    8344:	bl	3aa8 <sf_append>
    8348:	mov	r0, #20
    834c:	bl	22f0 <newchunk>
    8350:	mov	r9, r0
    8354:	orr	r5, r5, #64	; 0x40
    8358:	str	r5, [r0]
    835c:	mov	r1, r0
    8360:	mov	r0, r8
    8364:	bl	3aa8 <sf_append>
    8368:	ldr	r2, [pc, #144]	; 8400 <sf_gen_load+0x42c>
    836c:	add	r2, pc, r2
    8370:	ldr	r3, [r2, #940]	; 0x3ac
    8374:	ldr	r2, [r2, #948]	; 0x3b4
    8378:	add	r3, r3, r2
    837c:	str	r3, [r9, #12]
    8380:	mov	r1, r8
    8384:	ldr	r0, [r4, #4]
    8388:	bl	3aa8 <sf_append>
    838c:	mov	r0, r7
    8390:	bl	79a0 <sf_gen_proto_abbrev>
    8394:	mov	r7, r0
    8398:	bl	45d0 <gen_ipfrag>
    839c:	mov	r5, r0
    83a0:	mov	r1, r0
    83a4:	mov	r0, r7
    83a8:	bl	399c <sf_gen_and>
    83ac:	ldr	r0, [r4]
    83b0:	cmp	r0, #0
    83b4:	beq	83c0 <sf_gen_load+0x3ec>
    83b8:	mov	r1, r5
    83bc:	bl	399c <sf_gen_and>
    83c0:	mov	r0, #2
    83c4:	bl	79a0 <sf_gen_proto_abbrev>
    83c8:	mov	r1, r5
    83cc:	bl	399c <sf_gen_and>
    83d0:	str	r5, [r4]
    83d4:	b	8148 <sf_gen_load+0x174>
    83d8:	ldr	r0, [pc, #36]	; 8404 <sf_gen_load+0x430>
    83dc:	add	r0, pc, r0
    83e0:	bl	22b4 <sf_bpf_error>
    83e4:	.word	0x00029374
    83e8:	.word	0x0000bc58
    83ec:	.word	0x0000bba8
    83f0:	.word	0x0002926c
    83f4:	.word	0x0000bb3c
    83f8:	.word	0x00029178
    83fc:	.word	0x000290d4
    8400:	.word	0x00028ffc
    8404:	.word	0x0000b904

00008408 <sf_gen_inbound>:
    8408:	push	{r4, r5, lr}
    840c:	sub	sp, sp, #12
    8410:	mov	r4, r0
    8414:	ldr	r3, [pc, #356]	; 8580 <sf_gen_inbound+0x178>
    8418:	add	r3, pc, r3
    841c:	ldr	r1, [r3, #852]	; 0x354
    8420:	cmp	r1, #168	; 0xa8
    8424:	bgt	84b4 <sf_gen_inbound+0xac>
    8428:	cmp	r1, #167	; 0xa7
    842c:	bge	8508 <sf_gen_inbound+0x100>
    8430:	cmp	r1, #137	; 0x89
    8434:	bgt	8478 <sf_gen_inbound+0x70>
    8438:	cmp	r1, #130	; 0x82
    843c:	bge	8508 <sf_gen_inbound+0x100>
    8440:	cmp	r1, #8
    8444:	beq	8540 <sf_gen_inbound+0x138>
    8448:	cmp	r1, #113	; 0x71
    844c:	bne	8534 <sf_gen_inbound+0x12c>
    8450:	cmp	r0, #0
    8454:	movne	r3, #4
    8458:	movne	r2, #8
    845c:	movne	r1, #0
    8460:	moveq	r3, #0
    8464:	moveq	r2, #8
    8468:	moveq	r1, r3
    846c:	mov	r0, #1
    8470:	bl	47d8 <gen_cmp>
    8474:	b	8578 <sf_gen_inbound+0x170>
    8478:	cmp	r1, #164	; 0xa4
    847c:	beq	8508 <sf_gen_inbound+0x100>
    8480:	cmp	r1, #166	; 0xa6
    8484:	bne	8534 <sf_gen_inbound+0x12c>
    8488:	cmp	r0, #0
    848c:	movne	r3, #1
    8490:	movne	r2, #16
    8494:	movne	r1, #0
    8498:	movne	r0, r3
    849c:	moveq	r3, #0
    84a0:	moveq	r2, #16
    84a4:	moveq	r1, r3
    84a8:	moveq	r0, #1
    84ac:	bl	47d8 <gen_cmp>
    84b0:	b	8578 <sf_gen_inbound+0x170>
    84b4:	cmp	r1, #183	; 0xb7
    84b8:	beq	8508 <sf_gen_inbound+0x100>
    84bc:	ble	84fc <sf_gen_inbound+0xf4>
    84c0:	cmp	r1, #200	; 0xc8
    84c4:	beq	8508 <sf_gen_inbound+0x100>
    84c8:	cmp	r1, #226	; 0xe2
    84cc:	bne	852c <sf_gen_inbound+0x124>
    84d0:	cmp	r0, #0
    84d4:	movne	r3, #1
    84d8:	movne	r2, #8
    84dc:	movne	r1, #2
    84e0:	movne	r0, r3
    84e4:	moveq	r3, #2
    84e8:	moveq	r2, #8
    84ec:	moveq	r1, r3
    84f0:	moveq	r0, #1
    84f4:	bl	47d8 <gen_cmp>
    84f8:	b	8578 <sf_gen_inbound+0x170>
    84fc:	sub	r3, r1, #178	; 0xb2
    8500:	cmp	r3, #3
    8504:	bhi	8534 <sf_gen_inbound+0x12c>
    8508:	cmp	r4, #0
    850c:	mov	r0, #1
    8510:	str	r0, [sp]
    8514:	movne	r3, #0
    8518:	moveq	r3, r0
    851c:	mov	r2, #16
    8520:	mov	r1, #3
    8524:	bl	52f0 <gen_mcmp>
    8528:	b	8578 <sf_gen_inbound+0x170>
    852c:	cmp	r1, #194	; 0xc2
    8530:	beq	8508 <sf_gen_inbound+0x100>
    8534:	ldr	r0, [pc, #72]	; 8584 <sf_gen_inbound+0x17c>
    8538:	add	r0, pc, r0
    853c:	bl	22b4 <sf_bpf_error>
    8540:	mov	r0, #0
    8544:	bl	5f7c <sf_gen_loadi>
    8548:	mov	r2, #1
    854c:	mov	r1, r0
    8550:	mov	r0, r2
    8554:	bl	7fd4 <sf_gen_load>
    8558:	mov	r5, r0
    855c:	mov	r0, #0
    8560:	bl	5f7c <sf_gen_loadi>
    8564:	mov	r3, r4
    8568:	mov	r2, r0
    856c:	mov	r1, r5
    8570:	mov	r0, #16
    8574:	bl	5df0 <sf_gen_relation>
    8578:	add	sp, sp, #12
    857c:	pop	{r4, r5, pc}
    8580:	.word	0x00028f50
    8584:	.word	0x0000b7e0

00008588 <gen_hostop>:
    8588:	push	{r4, r5, r6, r7, lr}
    858c:	sub	sp, sp, #12
    8590:	mov	r4, r0
    8594:	mov	r5, r1
    8598:	mov	r6, r3
    859c:	cmp	r2, #4
    85a0:	addls	pc, pc, r2, lsl #2
    85a4:	b	86b4 <gen_hostop+0x12c>
    85a8:	b	865c <gen_hostop+0xd4>
    85ac:	b	85c4 <gen_hostop+0x3c>
    85b0:	b	85bc <gen_hostop+0x34>
    85b4:	b	865c <gen_hostop+0xd4>
    85b8:	b	8604 <gen_hostop+0x7c>
    85bc:	ldr	r3, [sp, #36]	; 0x24
    85c0:	str	r3, [sp, #32]
    85c4:	mov	r0, r6
    85c8:	bl	6730 <gen_linktype>
    85cc:	mov	r6, r0
    85d0:	str	r5, [sp]
    85d4:	mov	r3, r4
    85d8:	mov	r2, #0
    85dc:	ldr	r1, [sp, #32]
    85e0:	mov	r0, #3
    85e4:	bl	52f0 <gen_mcmp>
    85e8:	mov	r4, r0
    85ec:	mov	r1, r0
    85f0:	mov	r0, r6
    85f4:	bl	399c <sf_gen_and>
    85f8:	mov	r0, r4
    85fc:	add	sp, sp, #12
    8600:	pop	{r4, r5, r6, r7, pc}
    8604:	ldr	r3, [sp, #36]	; 0x24
    8608:	str	r3, [sp, #4]
    860c:	ldr	r3, [sp, #32]
    8610:	str	r3, [sp]
    8614:	mov	r3, r6
    8618:	mov	r2, #1
    861c:	bl	8588 <gen_hostop>
    8620:	mov	r7, r0
    8624:	ldr	r3, [sp, #36]	; 0x24
    8628:	str	r3, [sp, #4]
    862c:	ldr	r3, [sp, #32]
    8630:	str	r3, [sp]
    8634:	mov	r3, r6
    8638:	mov	r2, #2
    863c:	mov	r1, r5
    8640:	mov	r0, r4
    8644:	bl	8588 <gen_hostop>
    8648:	mov	r4, r0
    864c:	mov	r1, r0
    8650:	mov	r0, r7
    8654:	bl	399c <sf_gen_and>
    8658:	b	85f8 <gen_hostop+0x70>
    865c:	ldr	r3, [sp, #36]	; 0x24
    8660:	str	r3, [sp, #4]
    8664:	ldr	r3, [sp, #32]
    8668:	str	r3, [sp]
    866c:	mov	r3, r6
    8670:	mov	r2, #1
    8674:	bl	8588 <gen_hostop>
    8678:	mov	r7, r0
    867c:	ldr	r3, [sp, #36]	; 0x24
    8680:	str	r3, [sp, #4]
    8684:	ldr	r3, [sp, #32]
    8688:	str	r3, [sp]
    868c:	mov	r3, r6
    8690:	mov	r2, #2
    8694:	mov	r1, r5
    8698:	mov	r0, r4
    869c:	bl	8588 <gen_hostop>
    86a0:	mov	r4, r0
    86a4:	mov	r1, r0
    86a8:	mov	r0, r7
    86ac:	bl	3a20 <sf_gen_or>
    86b0:	b	85f8 <gen_hostop+0x70>
    86b4:	bl	f18 <abort@plt>

000086b8 <gen_dnhostop>:
    86b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    86bc:	sub	sp, sp, #12
    86c0:	mov	r4, r0
    86c4:	cmp	r1, #24
    86c8:	addls	pc, pc, r1, lsl #2
    86cc:	b	87a4 <gen_dnhostop+0xec>
    86d0:	b	876c <gen_dnhostop+0xb4>
    86d4:	b	8734 <gen_dnhostop+0x7c>
    86d8:	b	87a8 <gen_dnhostop+0xf0>
    86dc:	b	876c <gen_dnhostop+0xb4>
    86e0:	b	8740 <gen_dnhostop+0x88>
    86e4:	b	87a4 <gen_dnhostop+0xec>
    86e8:	b	87a4 <gen_dnhostop+0xec>
    86ec:	b	87a4 <gen_dnhostop+0xec>
    86f0:	b	87a4 <gen_dnhostop+0xec>
    86f4:	b	87a4 <gen_dnhostop+0xec>
    86f8:	b	87a4 <gen_dnhostop+0xec>
    86fc:	b	87a4 <gen_dnhostop+0xec>
    8700:	b	87a4 <gen_dnhostop+0xec>
    8704:	b	87a4 <gen_dnhostop+0xec>
    8708:	b	87a4 <gen_dnhostop+0xec>
    870c:	b	87a4 <gen_dnhostop+0xec>
    8710:	b	87a4 <gen_dnhostop+0xec>
    8714:	b	87a4 <gen_dnhostop+0xec>
    8718:	b	87a4 <gen_dnhostop+0xec>
    871c:	b	87a4 <gen_dnhostop+0xec>
    8720:	b	87a4 <gen_dnhostop+0xec>
    8724:	b	87a4 <gen_dnhostop+0xec>
    8728:	b	87a4 <gen_dnhostop+0xec>
    872c:	b	87a4 <gen_dnhostop+0xec>
    8730:	b	8798 <gen_dnhostop+0xe0>
    8734:	mov	r5, #3
    8738:	mov	r6, #15
    873c:	b	87b0 <gen_dnhostop+0xf8>
    8740:	mov	r1, #1
    8744:	bl	86b8 <gen_dnhostop>
    8748:	mov	r5, r0
    874c:	mov	r1, #2
    8750:	mov	r0, r4
    8754:	bl	86b8 <gen_dnhostop>
    8758:	mov	sl, r0
    875c:	mov	r1, r0
    8760:	mov	r0, r5
    8764:	bl	399c <sf_gen_and>
    8768:	b	88fc <gen_dnhostop+0x244>
    876c:	mov	r1, #1
    8770:	bl	86b8 <gen_dnhostop>
    8774:	mov	r5, r0
    8778:	mov	r1, #2
    877c:	mov	r0, r4
    8780:	bl	86b8 <gen_dnhostop>
    8784:	mov	sl, r0
    8788:	mov	r1, r0
    878c:	mov	r0, r5
    8790:	bl	3a20 <sf_gen_or>
    8794:	b	88fc <gen_dnhostop+0x244>
    8798:	ldr	r0, [pc, #360]	; 8908 <gen_dnhostop+0x250>
    879c:	add	r0, pc, r0
    87a0:	bl	22b4 <sf_bpf_error>
    87a4:	bl	f18 <abort@plt>
    87a8:	mov	r5, #1
    87ac:	mov	r6, #7
    87b0:	ldr	r0, [pc, #340]	; 890c <gen_dnhostop+0x254>
    87b4:	bl	6730 <gen_linktype>
    87b8:	mov	r8, r0
    87bc:	ldr	r7, [pc, #332]	; 8910 <gen_dnhostop+0x258>
    87c0:	str	r7, [sp]
    87c4:	ldr	r3, [pc, #328]	; 8914 <gen_dnhostop+0x25c>
    87c8:	mov	r2, #8
    87cc:	mov	r1, #2
    87d0:	mov	r0, #3
    87d4:	bl	52f0 <gen_mcmp>
    87d8:	mov	r9, r0
    87dc:	rev16	r4, r4
    87e0:	uxth	r4, r4
    87e4:	mov	r3, r4
    87e8:	mov	r2, #8
    87ec:	add	r1, r6, #3
    87f0:	mov	r0, #3
    87f4:	bl	47d8 <gen_cmp>
    87f8:	mov	sl, r0
    87fc:	mov	r1, r0
    8800:	mov	r0, r9
    8804:	bl	399c <sf_gen_and>
    8808:	mov	r9, #7
    880c:	str	r9, [sp]
    8810:	mov	r3, #6
    8814:	mov	r2, #16
    8818:	mov	r1, #2
    881c:	mov	r0, #3
    8820:	bl	52f0 <gen_mcmp>
    8824:	mov	fp, r0
    8828:	mov	r3, r4
    882c:	mov	r2, #8
    8830:	add	r1, r6, #2
    8834:	mov	r0, #3
    8838:	bl	47d8 <gen_cmp>
    883c:	mov	r6, r0
    8840:	mov	r1, r0
    8844:	mov	r0, fp
    8848:	bl	399c <sf_gen_and>
    884c:	mov	r1, sl
    8850:	mov	r0, r6
    8854:	bl	3a20 <sf_gen_or>
    8858:	str	r7, [sp]
    885c:	ldr	r3, [pc, #180]	; 8918 <gen_dnhostop+0x260>
    8860:	mov	r2, #8
    8864:	mov	r1, #2
    8868:	mov	r0, #3
    886c:	bl	52f0 <gen_mcmp>
    8870:	mov	r7, r0
    8874:	mov	r3, r4
    8878:	mov	r2, #8
    887c:	add	r1, r5, #3
    8880:	mov	r0, #3
    8884:	bl	47d8 <gen_cmp>
    8888:	mov	r6, r0
    888c:	mov	r1, r0
    8890:	mov	r0, r7
    8894:	bl	399c <sf_gen_and>
    8898:	mov	r1, sl
    889c:	mov	r0, r6
    88a0:	bl	3a20 <sf_gen_or>
    88a4:	str	r9, [sp]
    88a8:	mov	r3, #2
    88ac:	mov	r2, #16
    88b0:	mov	r1, r3
    88b4:	mov	r0, #3
    88b8:	bl	52f0 <gen_mcmp>
    88bc:	mov	r6, r0
    88c0:	mov	r3, r4
    88c4:	mov	r2, #8
    88c8:	add	r1, r5, #2
    88cc:	mov	r0, #3
    88d0:	bl	47d8 <gen_cmp>
    88d4:	mov	r4, r0
    88d8:	mov	r1, r0
    88dc:	mov	r0, r6
    88e0:	bl	399c <sf_gen_and>
    88e4:	mov	r1, sl
    88e8:	mov	r0, r4
    88ec:	bl	3a20 <sf_gen_or>
    88f0:	mov	r1, sl
    88f4:	mov	r0, r8
    88f8:	bl	399c <sf_gen_and>
    88fc:	mov	r0, sl
    8900:	add	sp, sp, #12
    8904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8908:	.word	0x0000b5ac
    890c:	.word	0x00006003
    8910:	.word	0x0000ff07
    8914:	.word	0x00008106
    8918:	.word	0x00008102

0000891c <gen_host>:
    891c:	push	{r4, r5, r6, r7, r8, r9, lr}
    8920:	sub	sp, sp, #12
    8924:	mov	r5, r0
    8928:	mov	r7, r1
    892c:	mov	r6, r3
    8930:	ldr	r4, [sp, #40]	; 0x28
    8934:	cmp	r4, #2
    8938:	beq	89f4 <gen_host+0xd8>
    893c:	ldr	r1, [pc, #796]	; 8c60 <gen_host+0x344>
    8940:	add	r1, pc, r1
    8944:	cmp	r2, #40	; 0x28
    8948:	addls	pc, pc, r2, lsl #2
    894c:	b	8c5c <gen_host+0x340>
    8950:	b	8a00 <gen_host+0xe4>
    8954:	b	8c5c <gen_host+0x340>
    8958:	b	8a84 <gen_host+0x168>
    895c:	b	8ae4 <gen_host+0x1c8>
    8960:	b	8ab8 <gen_host+0x19c>
    8964:	b	8b1c <gen_host+0x200>
    8968:	b	8b10 <gen_host+0x1f4>
    896c:	b	8b28 <gen_host+0x20c>
    8970:	b	8b34 <gen_host+0x218>
    8974:	b	8b40 <gen_host+0x224>
    8978:	b	8b4c <gen_host+0x230>
    897c:	b	8b70 <gen_host+0x254>
    8980:	b	8b88 <gen_host+0x26c>
    8984:	b	8ba8 <gen_host+0x28c>
    8988:	b	8b9c <gen_host+0x280>
    898c:	b	8bc0 <gen_host+0x2a4>
    8990:	b	8bb4 <gen_host+0x298>
    8994:	b	8bcc <gen_host+0x2b0>
    8998:	b	8bd8 <gen_host+0x2bc>
    899c:	b	8be4 <gen_host+0x2c8>
    89a0:	b	8bf0 <gen_host+0x2d4>
    89a4:	b	8b58 <gen_host+0x23c>
    89a8:	b	8b64 <gen_host+0x248>
    89ac:	b	8b7c <gen_host+0x260>
    89b0:	b	8bfc <gen_host+0x2e0>
    89b4:	b	8c08 <gen_host+0x2ec>
    89b8:	b	8c14 <gen_host+0x2f8>
    89bc:	b	8c20 <gen_host+0x304>
    89c0:	b	8c2c <gen_host+0x310>
    89c4:	b	8c38 <gen_host+0x31c>
    89c8:	b	8c44 <gen_host+0x328>
    89cc:	b	8c5c <gen_host+0x340>
    89d0:	b	8c5c <gen_host+0x340>
    89d4:	b	8c5c <gen_host+0x340>
    89d8:	b	8c5c <gen_host+0x340>
    89dc:	b	8c5c <gen_host+0x340>
    89e0:	b	8c5c <gen_host+0x340>
    89e4:	b	8c5c <gen_host+0x340>
    89e8:	b	8c5c <gen_host+0x340>
    89ec:	b	8c5c <gen_host+0x340>
    89f0:	b	8c50 <gen_host+0x334>
    89f4:	ldr	r1, [pc, #616]	; 8c64 <gen_host+0x348>
    89f8:	add	r1, pc, r1
    89fc:	b	8944 <gen_host+0x28>
    8a00:	str	r4, [sp]
    8a04:	mov	r3, r6
    8a08:	mov	r2, #2
    8a0c:	mov	r1, r7
    8a10:	mov	r0, r5
    8a14:	bl	891c <gen_host>
    8a18:	mov	r8, r0
    8a1c:	ldr	r3, [pc, #580]	; 8c68 <gen_host+0x34c>
    8a20:	add	r3, pc, r3
    8a24:	ldr	r3, [r3, #4]
    8a28:	cmp	r3, #0
    8a2c:	bne	8aac <gen_host+0x190>
    8a30:	str	r4, [sp]
    8a34:	mov	r3, r6
    8a38:	mov	r2, #3
    8a3c:	mov	r1, r7
    8a40:	mov	r0, r5
    8a44:	bl	891c <gen_host>
    8a48:	mov	r9, r0
    8a4c:	mov	r1, r0
    8a50:	mov	r0, r8
    8a54:	bl	3a20 <sf_gen_or>
    8a58:	str	r4, [sp]
    8a5c:	mov	r3, r6
    8a60:	mov	r2, #4
    8a64:	mov	r1, r7
    8a68:	mov	r0, r5
    8a6c:	bl	891c <gen_host>
    8a70:	mov	r8, r0
    8a74:	mov	r1, r0
    8a78:	mov	r0, r9
    8a7c:	bl	3a20 <sf_gen_or>
    8a80:	b	8aac <gen_host+0x190>
    8a84:	mov	r3, #16
    8a88:	str	r3, [sp, #4]
    8a8c:	mov	r3, #12
    8a90:	str	r3, [sp]
    8a94:	mov	r3, #2048	; 0x800
    8a98:	mov	r2, r6
    8a9c:	mov	r1, r7
    8aa0:	mov	r0, r5
    8aa4:	bl	8588 <gen_hostop>
    8aa8:	mov	r8, r0
    8aac:	mov	r0, r8
    8ab0:	add	sp, sp, #12
    8ab4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    8ab8:	mov	r3, #24
    8abc:	str	r3, [sp, #4]
    8ac0:	mov	r3, #14
    8ac4:	str	r3, [sp]
    8ac8:	ldr	r3, [pc, #412]	; 8c6c <gen_host+0x350>
    8acc:	mov	r2, r6
    8ad0:	mov	r1, r7
    8ad4:	mov	r0, r5
    8ad8:	bl	8588 <gen_hostop>
    8adc:	mov	r8, r0
    8ae0:	b	8aac <gen_host+0x190>
    8ae4:	mov	r3, #24
    8ae8:	str	r3, [sp, #4]
    8aec:	mov	r3, #14
    8af0:	str	r3, [sp]
    8af4:	ldr	r3, [pc, #372]	; 8c70 <gen_host+0x354>
    8af8:	mov	r2, r6
    8afc:	mov	r1, r7
    8b00:	mov	r0, r5
    8b04:	bl	8588 <gen_hostop>
    8b08:	mov	r8, r0
    8b0c:	b	8aac <gen_host+0x190>
    8b10:	ldr	r0, [pc, #348]	; 8c74 <gen_host+0x358>
    8b14:	add	r0, pc, r0
    8b18:	bl	22b4 <sf_bpf_error>
    8b1c:	ldr	r0, [pc, #340]	; 8c78 <gen_host+0x35c>
    8b20:	add	r0, pc, r0
    8b24:	bl	22b4 <sf_bpf_error>
    8b28:	ldr	r0, [pc, #332]	; 8c7c <gen_host+0x360>
    8b2c:	add	r0, pc, r0
    8b30:	bl	22b4 <sf_bpf_error>
    8b34:	ldr	r0, [pc, #324]	; 8c80 <gen_host+0x364>
    8b38:	add	r0, pc, r0
    8b3c:	bl	22b4 <sf_bpf_error>
    8b40:	ldr	r0, [pc, #316]	; 8c84 <gen_host+0x368>
    8b44:	add	r0, pc, r0
    8b48:	bl	22b4 <sf_bpf_error>
    8b4c:	ldr	r0, [pc, #308]	; 8c88 <gen_host+0x36c>
    8b50:	add	r0, pc, r0
    8b54:	bl	22b4 <sf_bpf_error>
    8b58:	ldr	r0, [pc, #300]	; 8c8c <gen_host+0x370>
    8b5c:	add	r0, pc, r0
    8b60:	bl	22b4 <sf_bpf_error>
    8b64:	ldr	r0, [pc, #292]	; 8c90 <gen_host+0x374>
    8b68:	add	r0, pc, r0
    8b6c:	bl	22b4 <sf_bpf_error>
    8b70:	ldr	r0, [pc, #284]	; 8c94 <gen_host+0x378>
    8b74:	add	r0, pc, r0
    8b78:	bl	22b4 <sf_bpf_error>
    8b7c:	ldr	r0, [pc, #276]	; 8c98 <gen_host+0x37c>
    8b80:	add	r0, pc, r0
    8b84:	bl	22b4 <sf_bpf_error>
    8b88:	mov	r1, r6
    8b8c:	mov	r0, r5
    8b90:	bl	86b8 <gen_dnhostop>
    8b94:	mov	r8, r0
    8b98:	b	8aac <gen_host+0x190>
    8b9c:	ldr	r0, [pc, #248]	; 8c9c <gen_host+0x380>
    8ba0:	add	r0, pc, r0
    8ba4:	bl	22b4 <sf_bpf_error>
    8ba8:	ldr	r0, [pc, #240]	; 8ca0 <gen_host+0x384>
    8bac:	add	r0, pc, r0
    8bb0:	bl	22b4 <sf_bpf_error>
    8bb4:	ldr	r0, [pc, #232]	; 8ca4 <gen_host+0x388>
    8bb8:	add	r0, pc, r0
    8bbc:	bl	22b4 <sf_bpf_error>
    8bc0:	ldr	r0, [pc, #224]	; 8ca8 <gen_host+0x38c>
    8bc4:	add	r0, pc, r0
    8bc8:	bl	22b4 <sf_bpf_error>
    8bcc:	ldr	r0, [pc, #216]	; 8cac <gen_host+0x390>
    8bd0:	add	r0, pc, r0
    8bd4:	bl	22b4 <sf_bpf_error>
    8bd8:	ldr	r0, [pc, #208]	; 8cb0 <gen_host+0x394>
    8bdc:	add	r0, pc, r0
    8be0:	bl	22b4 <sf_bpf_error>
    8be4:	ldr	r0, [pc, #200]	; 8cb4 <gen_host+0x398>
    8be8:	add	r0, pc, r0
    8bec:	bl	22b4 <sf_bpf_error>
    8bf0:	ldr	r0, [pc, #192]	; 8cb8 <gen_host+0x39c>
    8bf4:	add	r0, pc, r0
    8bf8:	bl	22b4 <sf_bpf_error>
    8bfc:	ldr	r0, [pc, #184]	; 8cbc <gen_host+0x3a0>
    8c00:	add	r0, pc, r0
    8c04:	bl	22b4 <sf_bpf_error>
    8c08:	ldr	r0, [pc, #176]	; 8cc0 <gen_host+0x3a4>
    8c0c:	add	r0, pc, r0
    8c10:	bl	22b4 <sf_bpf_error>
    8c14:	ldr	r0, [pc, #168]	; 8cc4 <gen_host+0x3a8>
    8c18:	add	r0, pc, r0
    8c1c:	bl	22b4 <sf_bpf_error>
    8c20:	ldr	r0, [pc, #160]	; 8cc8 <gen_host+0x3ac>
    8c24:	add	r0, pc, r0
    8c28:	bl	22b4 <sf_bpf_error>
    8c2c:	ldr	r0, [pc, #152]	; 8ccc <gen_host+0x3b0>
    8c30:	add	r0, pc, r0
    8c34:	bl	22b4 <sf_bpf_error>
    8c38:	ldr	r0, [pc, #144]	; 8cd0 <gen_host+0x3b4>
    8c3c:	add	r0, pc, r0
    8c40:	bl	22b4 <sf_bpf_error>
    8c44:	ldr	r0, [pc, #136]	; 8cd4 <gen_host+0x3b8>
    8c48:	add	r0, pc, r0
    8c4c:	bl	22b4 <sf_bpf_error>
    8c50:	ldr	r0, [pc, #128]	; 8cd8 <gen_host+0x3bc>
    8c54:	add	r0, pc, r0
    8c58:	bl	22b4 <sf_bpf_error>
    8c5c:	bl	f18 <abort@plt>
    8c60:	.word	0x0000d554
    8c64:	.word	0x0000b374
    8c68:	.word	0x00028858
    8c6c:	.word	0x00008035
    8c70:	.word	0x00000806
    8c74:	.word	0x0000b25c
    8c78:	.word	0x0000b270
    8c7c:	.word	0x0000b284
    8c80:	.word	0x0000b298
    8c84:	.word	0x0000b2ac
    8c88:	.word	0x0000b2c0
    8c8c:	.word	0x0000b2d4
    8c90:	.word	0x0000b2e8
    8c94:	.word	0x0000b2fc
    8c98:	.word	0x0000b318
    8c9c:	.word	0x0000b31c
    8ca0:	.word	0x0000b334
    8ca4:	.word	0x0000b34c
    8ca8:	.word	0x0000b368
    8cac:	.word	0x0000b384
    8cb0:	.word	0x0000b39c
    8cb4:	.word	0x0000b3b0
    8cb8:	.word	0x0000b3c0
    8cbc:	.word	0x0000b148
    8cc0:	.word	0x0000b3c8
    8cc4:	.word	0x0000b3dc
    8cc8:	.word	0x0000b3f0
    8ccc:	.word	0x0000b404
    8cd0:	.word	0x0000b418
    8cd4:	.word	0x0000b430
    8cd8:	.word	0x0000b448

00008cdc <sf_gen_mcode>:
    8cdc:	push	{r4, r5, r6, r7, lr}
    8ce0:	sub	sp, sp, #28
    8ce4:	mov	r6, r0
    8ce8:	mov	r4, r1
    8cec:	mov	r7, r2
    8cf0:	str	r3, [sp, #12]
    8cf4:	uxtb	r5, r3
    8cf8:	add	r1, sp, #20
    8cfc:	bl	bf50 <__pcap_atoin>
    8d00:	rsb	r0, r0, #32
    8d04:	ldr	r3, [sp, #20]
    8d08:	lsl	r0, r3, r0
    8d0c:	str	r0, [sp, #20]
    8d10:	cmp	r4, #0
    8d14:	beq	8d80 <sf_gen_mcode+0xa4>
    8d18:	add	r1, sp, #16
    8d1c:	mov	r0, r4
    8d20:	bl	bf50 <__pcap_atoin>
    8d24:	rsb	r0, r0, #32
    8d28:	ldr	r3, [sp, #16]
    8d2c:	lsl	r0, r3, r0
    8d30:	str	r0, [sp, #16]
    8d34:	ldr	r3, [sp, #20]
    8d38:	bics	r3, r3, r0
    8d3c:	bne	8d6c <sf_gen_mcode+0x90>
    8d40:	cmp	r5, #2
    8d44:	bne	8dcc <sf_gen_mcode+0xf0>
    8d48:	ldrb	r3, [sp, #14]
    8d4c:	ldrb	r2, [sp, #13]
    8d50:	mov	r1, #2
    8d54:	str	r1, [sp]
    8d58:	ldr	r1, [sp, #16]
    8d5c:	ldr	r0, [sp, #20]
    8d60:	bl	891c <gen_host>
    8d64:	add	sp, sp, #28
    8d68:	pop	{r4, r5, r6, r7, pc}
    8d6c:	mov	r2, r4
    8d70:	mov	r1, r6
    8d74:	ldr	r0, [pc, #92]	; 8dd8 <sf_gen_mcode+0xfc>
    8d78:	add	r0, pc, r0
    8d7c:	bl	22b4 <sf_bpf_error>
    8d80:	cmp	r7, #32
    8d84:	bgt	8dc0 <sf_gen_mcode+0xe4>
    8d88:	cmp	r7, #0
    8d8c:	moveq	r3, #0
    8d90:	rsbne	r2, r7, #32
    8d94:	mvnne	r3, #0
    8d98:	lslne	r3, r3, r2
    8d9c:	str	r3, [sp, #16]
    8da0:	ldr	r3, [sp, #16]
    8da4:	bics	r3, r0, r3
    8da8:	beq	8d40 <sf_gen_mcode+0x64>
    8dac:	mov	r2, r7
    8db0:	mov	r1, r6
    8db4:	ldr	r0, [pc, #32]	; 8ddc <sf_gen_mcode+0x100>
    8db8:	add	r0, pc, r0
    8dbc:	bl	22b4 <sf_bpf_error>
    8dc0:	ldr	r0, [pc, #24]	; 8de0 <sf_gen_mcode+0x104>
    8dc4:	add	r0, pc, r0
    8dc8:	bl	22b4 <sf_bpf_error>
    8dcc:	ldr	r0, [pc, #16]	; 8de4 <sf_gen_mcode+0x108>
    8dd0:	add	r0, pc, r0
    8dd4:	bl	22b4 <sf_bpf_error>
    8dd8:	.word	0x0000b344
    8ddc:	.word	0x0000b348
    8de0:	.word	0x0000b320
    8de4:	.word	0x0000b350

00008de8 <gen_hostop6>:
    8de8:	push	{r4, r5, r6, r7, r8, r9, lr}
    8dec:	sub	sp, sp, #12
    8df0:	mov	r7, r0
    8df4:	mov	r6, r1
    8df8:	mov	r8, r3
    8dfc:	ldr	r5, [sp, #40]	; 0x28
    8e00:	cmp	r2, #4
    8e04:	addls	pc, pc, r2, lsl #2
    8e08:	b	8f8c <gen_hostop6+0x1a4>
    8e0c:	b	8f3c <gen_hostop6+0x154>
    8e10:	b	8e24 <gen_hostop6+0x3c>
    8e14:	b	8e20 <gen_hostop6+0x38>
    8e18:	b	8f3c <gen_hostop6+0x154>
    8e1c:	b	8eec <gen_hostop6+0x104>
    8e20:	ldr	r5, [sp, #44]	; 0x2c
    8e24:	ldr	r3, [r7, #12]
    8e28:	ldr	r2, [r6, #12]
    8e2c:	rev	r2, r2
    8e30:	str	r2, [sp]
    8e34:	rev	r3, r3
    8e38:	mov	r2, #0
    8e3c:	add	r1, r5, #12
    8e40:	mov	r0, #3
    8e44:	bl	52f0 <gen_mcmp>
    8e48:	mov	r4, r0
    8e4c:	ldr	r3, [r7, #8]
    8e50:	ldr	r2, [r6, #8]
    8e54:	rev	r2, r2
    8e58:	str	r2, [sp]
    8e5c:	rev	r3, r3
    8e60:	mov	r2, #0
    8e64:	add	r1, r5, #8
    8e68:	mov	r0, #3
    8e6c:	bl	52f0 <gen_mcmp>
    8e70:	mov	r1, r4
    8e74:	bl	399c <sf_gen_and>
    8e78:	ldr	r3, [r7, #4]
    8e7c:	ldr	r2, [r6, #4]
    8e80:	rev	r2, r2
    8e84:	str	r2, [sp]
    8e88:	rev	r3, r3
    8e8c:	mov	r2, #0
    8e90:	add	r1, r5, #4
    8e94:	mov	r0, #3
    8e98:	bl	52f0 <gen_mcmp>
    8e9c:	mov	r1, r4
    8ea0:	bl	399c <sf_gen_and>
    8ea4:	ldr	r3, [r7]
    8ea8:	ldr	r2, [r6]
    8eac:	rev	r2, r2
    8eb0:	str	r2, [sp]
    8eb4:	rev	r3, r3
    8eb8:	mov	r2, #0
    8ebc:	mov	r1, r5
    8ec0:	mov	r0, #3
    8ec4:	bl	52f0 <gen_mcmp>
    8ec8:	mov	r1, r4
    8ecc:	bl	399c <sf_gen_and>
    8ed0:	mov	r0, r8
    8ed4:	bl	6730 <gen_linktype>
    8ed8:	mov	r1, r4
    8edc:	bl	399c <sf_gen_and>
    8ee0:	mov	r0, r4
    8ee4:	add	sp, sp, #12
    8ee8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    8eec:	ldr	r3, [sp, #44]	; 0x2c
    8ef0:	str	r3, [sp, #4]
    8ef4:	str	r5, [sp]
    8ef8:	mov	r3, r8
    8efc:	mov	r2, #1
    8f00:	bl	8de8 <gen_hostop6>
    8f04:	mov	r9, r0
    8f08:	ldr	r3, [sp, #44]	; 0x2c
    8f0c:	str	r3, [sp, #4]
    8f10:	str	r5, [sp]
    8f14:	mov	r3, r8
    8f18:	mov	r2, #2
    8f1c:	mov	r1, r6
    8f20:	mov	r0, r7
    8f24:	bl	8de8 <gen_hostop6>
    8f28:	mov	r4, r0
    8f2c:	mov	r1, r0
    8f30:	mov	r0, r9
    8f34:	bl	399c <sf_gen_and>
    8f38:	b	8ee0 <gen_hostop6+0xf8>
    8f3c:	ldr	r3, [sp, #44]	; 0x2c
    8f40:	str	r3, [sp, #4]
    8f44:	str	r5, [sp]
    8f48:	mov	r3, r8
    8f4c:	mov	r2, #1
    8f50:	bl	8de8 <gen_hostop6>
    8f54:	mov	r9, r0
    8f58:	ldr	r3, [sp, #44]	; 0x2c
    8f5c:	str	r3, [sp, #4]
    8f60:	str	r5, [sp]
    8f64:	mov	r3, r8
    8f68:	mov	r2, #2
    8f6c:	mov	r1, r6
    8f70:	mov	r0, r7
    8f74:	bl	8de8 <gen_hostop6>
    8f78:	mov	r4, r0
    8f7c:	mov	r1, r0
    8f80:	mov	r0, r9
    8f84:	bl	3a20 <sf_gen_or>
    8f88:	b	8ee0 <gen_hostop6+0xf8>
    8f8c:	bl	f18 <abort@plt>

00008f90 <gen_host6>:
    8f90:	push	{lr}		; (str lr, [sp, #-4]!)
    8f94:	sub	sp, sp, #12
    8f98:	mov	lr, r3
    8f9c:	ldr	r3, [sp, #16]
    8fa0:	cmp	r3, #2
    8fa4:	beq	9060 <gen_host6+0xd0>
    8fa8:	ldr	ip, [pc, #680]	; 9258 <gen_host6+0x2c8>
    8fac:	add	ip, pc, ip
    8fb0:	cmp	r2, #40	; 0x28
    8fb4:	addls	pc, pc, r2, lsl #2
    8fb8:	b	9254 <gen_host6+0x2c4>
    8fbc:	b	906c <gen_host6+0xdc>
    8fc0:	b	9254 <gen_host6+0x2c4>
    8fc4:	b	9084 <gen_host6+0xf4>
    8fc8:	b	90a4 <gen_host6+0x114>
    8fcc:	b	9094 <gen_host6+0x104>
    8fd0:	b	90b4 <gen_host6+0x124>
    8fd4:	b	90c4 <gen_host6+0x134>
    8fd8:	b	90d4 <gen_host6+0x144>
    8fdc:	b	90e4 <gen_host6+0x154>
    8fe0:	b	90f4 <gen_host6+0x164>
    8fe4:	b	9104 <gen_host6+0x174>
    8fe8:	b	9134 <gen_host6+0x1a4>
    8fec:	b	914c <gen_host6+0x1bc>
    8ff0:	b	9168 <gen_host6+0x1d8>
    8ff4:	b	915c <gen_host6+0x1cc>
    8ff8:	b	9180 <gen_host6+0x1f0>
    8ffc:	b	9174 <gen_host6+0x1e4>
    9000:	b	918c <gen_host6+0x1fc>
    9004:	b	91ac <gen_host6+0x21c>
    9008:	b	91bc <gen_host6+0x22c>
    900c:	b	91cc <gen_host6+0x23c>
    9010:	b	9114 <gen_host6+0x184>
    9014:	b	9124 <gen_host6+0x194>
    9018:	b	9140 <gen_host6+0x1b0>
    901c:	b	91dc <gen_host6+0x24c>
    9020:	b	91e8 <gen_host6+0x258>
    9024:	b	91f8 <gen_host6+0x268>
    9028:	b	9208 <gen_host6+0x278>
    902c:	b	9218 <gen_host6+0x288>
    9030:	b	9228 <gen_host6+0x298>
    9034:	b	9234 <gen_host6+0x2a4>
    9038:	b	9254 <gen_host6+0x2c4>
    903c:	b	9254 <gen_host6+0x2c4>
    9040:	b	9254 <gen_host6+0x2c4>
    9044:	b	9254 <gen_host6+0x2c4>
    9048:	b	9254 <gen_host6+0x2c4>
    904c:	b	9254 <gen_host6+0x2c4>
    9050:	b	9254 <gen_host6+0x2c4>
    9054:	b	9254 <gen_host6+0x2c4>
    9058:	b	9254 <gen_host6+0x2c4>
    905c:	b	9244 <gen_host6+0x2b4>
    9060:	ldr	ip, [pc, #500]	; 925c <gen_host6+0x2cc>
    9064:	add	ip, pc, ip
    9068:	b	8fb0 <gen_host6+0x20>
    906c:	str	r3, [sp]
    9070:	mov	r3, lr
    9074:	mov	r2, #17
    9078:	bl	8f90 <gen_host6>
    907c:	add	sp, sp, #12
    9080:	pop	{pc}		; (ldr pc, [sp], #4)
    9084:	mov	r1, ip
    9088:	ldr	r0, [pc, #464]	; 9260 <gen_host6+0x2d0>
    908c:	add	r0, pc, r0
    9090:	bl	22b4 <sf_bpf_error>
    9094:	mov	r1, ip
    9098:	ldr	r0, [pc, #452]	; 9264 <gen_host6+0x2d4>
    909c:	add	r0, pc, r0
    90a0:	bl	22b4 <sf_bpf_error>
    90a4:	mov	r1, ip
    90a8:	ldr	r0, [pc, #440]	; 9268 <gen_host6+0x2d8>
    90ac:	add	r0, pc, r0
    90b0:	bl	22b4 <sf_bpf_error>
    90b4:	mov	r1, ip
    90b8:	ldr	r0, [pc, #428]	; 926c <gen_host6+0x2dc>
    90bc:	add	r0, pc, r0
    90c0:	bl	22b4 <sf_bpf_error>
    90c4:	mov	r1, ip
    90c8:	ldr	r0, [pc, #416]	; 9270 <gen_host6+0x2e0>
    90cc:	add	r0, pc, r0
    90d0:	bl	22b4 <sf_bpf_error>
    90d4:	mov	r1, ip
    90d8:	ldr	r0, [pc, #404]	; 9274 <gen_host6+0x2e4>
    90dc:	add	r0, pc, r0
    90e0:	bl	22b4 <sf_bpf_error>
    90e4:	mov	r1, ip
    90e8:	ldr	r0, [pc, #392]	; 9278 <gen_host6+0x2e8>
    90ec:	add	r0, pc, r0
    90f0:	bl	22b4 <sf_bpf_error>
    90f4:	mov	r1, ip
    90f8:	ldr	r0, [pc, #380]	; 927c <gen_host6+0x2ec>
    90fc:	add	r0, pc, r0
    9100:	bl	22b4 <sf_bpf_error>
    9104:	mov	r1, ip
    9108:	ldr	r0, [pc, #368]	; 9280 <gen_host6+0x2f0>
    910c:	add	r0, pc, r0
    9110:	bl	22b4 <sf_bpf_error>
    9114:	mov	r1, ip
    9118:	ldr	r0, [pc, #356]	; 9284 <gen_host6+0x2f4>
    911c:	add	r0, pc, r0
    9120:	bl	22b4 <sf_bpf_error>
    9124:	mov	r1, ip
    9128:	ldr	r0, [pc, #344]	; 9288 <gen_host6+0x2f8>
    912c:	add	r0, pc, r0
    9130:	bl	22b4 <sf_bpf_error>
    9134:	ldr	r0, [pc, #336]	; 928c <gen_host6+0x2fc>
    9138:	add	r0, pc, r0
    913c:	bl	22b4 <sf_bpf_error>
    9140:	ldr	r0, [pc, #328]	; 9290 <gen_host6+0x300>
    9144:	add	r0, pc, r0
    9148:	bl	22b4 <sf_bpf_error>
    914c:	mov	r1, ip
    9150:	ldr	r0, [pc, #316]	; 9294 <gen_host6+0x304>
    9154:	add	r0, pc, r0
    9158:	bl	22b4 <sf_bpf_error>
    915c:	ldr	r0, [pc, #308]	; 9298 <gen_host6+0x308>
    9160:	add	r0, pc, r0
    9164:	bl	22b4 <sf_bpf_error>
    9168:	ldr	r0, [pc, #300]	; 929c <gen_host6+0x30c>
    916c:	add	r0, pc, r0
    9170:	bl	22b4 <sf_bpf_error>
    9174:	ldr	r0, [pc, #292]	; 92a0 <gen_host6+0x310>
    9178:	add	r0, pc, r0
    917c:	bl	22b4 <sf_bpf_error>
    9180:	ldr	r0, [pc, #284]	; 92a4 <gen_host6+0x314>
    9184:	add	r0, pc, r0
    9188:	bl	22b4 <sf_bpf_error>
    918c:	mov	r3, #24
    9190:	str	r3, [sp, #4]
    9194:	mov	r3, #8
    9198:	str	r3, [sp]
    919c:	ldr	r3, [pc, #260]	; 92a8 <gen_host6+0x318>
    91a0:	mov	r2, lr
    91a4:	bl	8de8 <gen_hostop6>
    91a8:	b	907c <gen_host6+0xec>
    91ac:	mov	r1, ip
    91b0:	ldr	r0, [pc, #244]	; 92ac <gen_host6+0x31c>
    91b4:	add	r0, pc, r0
    91b8:	bl	22b4 <sf_bpf_error>
    91bc:	mov	r1, ip
    91c0:	ldr	r0, [pc, #232]	; 92b0 <gen_host6+0x320>
    91c4:	add	r0, pc, r0
    91c8:	bl	22b4 <sf_bpf_error>
    91cc:	mov	r1, ip
    91d0:	ldr	r0, [pc, #220]	; 92b4 <gen_host6+0x324>
    91d4:	add	r0, pc, r0
    91d8:	bl	22b4 <sf_bpf_error>
    91dc:	ldr	r0, [pc, #212]	; 92b8 <gen_host6+0x328>
    91e0:	add	r0, pc, r0
    91e4:	bl	22b4 <sf_bpf_error>
    91e8:	mov	r1, ip
    91ec:	ldr	r0, [pc, #200]	; 92bc <gen_host6+0x32c>
    91f0:	add	r0, pc, r0
    91f4:	bl	22b4 <sf_bpf_error>
    91f8:	mov	r1, ip
    91fc:	ldr	r0, [pc, #188]	; 92c0 <gen_host6+0x330>
    9200:	add	r0, pc, r0
    9204:	bl	22b4 <sf_bpf_error>
    9208:	mov	r1, ip
    920c:	ldr	r0, [pc, #176]	; 92c4 <gen_host6+0x334>
    9210:	add	r0, pc, r0
    9214:	bl	22b4 <sf_bpf_error>
    9218:	mov	r1, ip
    921c:	ldr	r0, [pc, #164]	; 92c8 <gen_host6+0x338>
    9220:	add	r0, pc, r0
    9224:	bl	22b4 <sf_bpf_error>
    9228:	ldr	r0, [pc, #156]	; 92cc <gen_host6+0x33c>
    922c:	add	r0, pc, r0
    9230:	bl	22b4 <sf_bpf_error>
    9234:	mov	r1, ip
    9238:	ldr	r0, [pc, #144]	; 92d0 <gen_host6+0x340>
    923c:	add	r0, pc, r0
    9240:	bl	22b4 <sf_bpf_error>
    9244:	mov	r1, ip
    9248:	ldr	r0, [pc, #132]	; 92d4 <gen_host6+0x344>
    924c:	add	r0, pc, r0
    9250:	bl	22b4 <sf_bpf_error>
    9254:	bl	f18 <abort@plt>
    9258:	.word	0x0000cee8
    925c:	.word	0x0000ad08
    9260:	.word	0x0000b0b4
    9264:	.word	0x0000b0c4
    9268:	.word	0x0000b0d8
    926c:	.word	0x0000acd4
    9270:	.word	0x0000aca4
    9274:	.word	0x0000acd4
    9278:	.word	0x0000ace4
    927c:	.word	0x0000acf4
    9280:	.word	0x0000ad04
    9284:	.word	0x0000ad14
    9288:	.word	0x0000ad24
    928c:	.word	0x0000ad38
    9290:	.word	0x0000ad54
    9294:	.word	0x0000b054
    9298:	.word	0x0000ad5c
    929c:	.word	0x0000ad74
    92a0:	.word	0x0000ad8c
    92a4:	.word	0x0000ada8
    92a8:	.word	0x000086dd
    92ac:	.word	0x0000adc4
    92b0:	.word	0x0000add4
    92b4:	.word	0x0000ade0
    92b8:	.word	0x0000ab68
    92bc:	.word	0x0000ade4
    92c0:	.word	0x0000adf4
    92c4:	.word	0x0000ae04
    92c8:	.word	0x0000ae14
    92cc:	.word	0x0000ae28
    92d0:	.word	0x0000ae3c
    92d4:	.word	0x0000ae50

000092d8 <sf_gen_mcode6>:
    92d8:	push	{r4, r5, r6, r7, r8, r9, lr}
    92dc:	sub	sp, sp, #36	; 0x24
    92e0:	str	r3, [sp, #12]
    92e4:	cmp	r1, #0
    92e8:	bne	93ec <sf_gen_mcode6+0x114>
    92ec:	mov	r9, r0
    92f0:	mov	r5, r2
    92f4:	uxtb	r8, r3
    92f8:	bl	bc10 <pcap_nametoaddrinfo>
    92fc:	subs	r7, r0, #0
    9300:	beq	93f8 <sf_gen_mcode6+0x120>
    9304:	ldr	r3, [pc, #388]	; 9490 <sf_gen_mcode6+0x1b8>
    9308:	add	r3, pc, r3
    930c:	str	r7, [r3, #872]	; 0x368
    9310:	ldr	r3, [r7, #28]
    9314:	cmp	r3, #0
    9318:	bne	9408 <sf_gen_mcode6+0x130>
    931c:	ldr	r6, [r7, #20]
    9320:	cmp	r5, #128	; 0x80
    9324:	bhi	9418 <sf_gen_mcode6+0x140>
    9328:	mov	r3, #0
    932c:	str	r3, [sp, #16]
    9330:	add	r0, sp, #16
    9334:	str	r3, [r0, #4]
    9338:	str	r3, [r0, #8]
    933c:	str	r3, [r0, #12]
    9340:	add	r4, r5, #7
    9344:	cmp	r5, r3
    9348:	movge	r4, r5
    934c:	asr	r4, r4, #3
    9350:	mov	r2, r4
    9354:	mov	r1, #255	; 0xff
    9358:	bl	e88 <memset@plt>
    935c:	tst	r5, #7
    9360:	beq	9390 <sf_gen_mcode6+0xb8>
    9364:	add	r3, sp, #32
    9368:	add	r4, r3, r4
    936c:	asr	r3, r5, #31
    9370:	lsr	r2, r3, #29
    9374:	add	r3, r5, r2
    9378:	and	r3, r3, #7
    937c:	sub	r3, r3, r2
    9380:	rsb	r3, r3, #8
    9384:	mov	r2, #255	; 0xff
    9388:	lsl	r3, r2, r3
    938c:	strb	r3, [r4, #-16]
    9390:	ldr	r3, [r6, #8]
    9394:	ldr	r2, [sp, #16]
    9398:	bics	r3, r3, r2
    939c:	bne	9428 <sf_gen_mcode6+0x150>
    93a0:	ldr	r3, [r6, #12]
    93a4:	ldr	r2, [sp, #20]
    93a8:	bics	r3, r3, r2
    93ac:	bne	9428 <sf_gen_mcode6+0x150>
    93b0:	ldr	r3, [r6, #16]
    93b4:	ldr	r2, [sp, #24]
    93b8:	bics	r3, r3, r2
    93bc:	bne	9428 <sf_gen_mcode6+0x150>
    93c0:	ldr	r3, [r6, #20]
    93c4:	ldr	r2, [sp, #28]
    93c8:	bics	r3, r3, r2
    93cc:	bne	9428 <sf_gen_mcode6+0x150>
    93d0:	cmp	r8, #1
    93d4:	bls	943c <sf_gen_mcode6+0x164>
    93d8:	cmp	r8, #2
    93dc:	beq	9444 <sf_gen_mcode6+0x16c>
    93e0:	ldr	r0, [pc, #172]	; 9494 <sf_gen_mcode6+0x1bc>
    93e4:	add	r0, pc, r0
    93e8:	bl	22b4 <sf_bpf_error>
    93ec:	ldr	r0, [pc, #164]	; 9498 <sf_gen_mcode6+0x1c0>
    93f0:	add	r0, pc, r0
    93f4:	bl	22b4 <sf_bpf_error>
    93f8:	mov	r1, r9
    93fc:	ldr	r0, [pc, #152]	; 949c <sf_gen_mcode6+0x1c4>
    9400:	add	r0, pc, r0
    9404:	bl	22b4 <sf_bpf_error>
    9408:	mov	r1, r9
    940c:	ldr	r0, [pc, #140]	; 94a0 <sf_gen_mcode6+0x1c8>
    9410:	add	r0, pc, r0
    9414:	bl	22b4 <sf_bpf_error>
    9418:	mov	r1, #128	; 0x80
    941c:	ldr	r0, [pc, #128]	; 94a4 <sf_gen_mcode6+0x1cc>
    9420:	add	r0, pc, r0
    9424:	bl	22b4 <sf_bpf_error>
    9428:	mov	r2, r5
    942c:	mov	r1, r9
    9430:	ldr	r0, [pc, #112]	; 94a8 <sf_gen_mcode6+0x1d0>
    9434:	add	r0, pc, r0
    9438:	bl	22b4 <sf_bpf_error>
    943c:	cmp	r5, #128	; 0x80
    9440:	bne	9484 <sf_gen_mcode6+0x1ac>
    9444:	ldrb	r3, [sp, #14]
    9448:	ldrb	r2, [sp, #13]
    944c:	str	r8, [sp]
    9450:	add	r1, sp, #16
    9454:	add	r0, r6, #8
    9458:	bl	8f90 <gen_host6>
    945c:	mov	r4, r0
    9460:	mov	r2, #0
    9464:	ldr	r3, [pc, #64]	; 94ac <sf_gen_mcode6+0x1d4>
    9468:	add	r3, pc, r3
    946c:	str	r2, [r3, #872]	; 0x368
    9470:	mov	r0, r7
    9474:	bl	edc <freeaddrinfo@plt>
    9478:	mov	r0, r4
    947c:	add	sp, sp, #36	; 0x24
    9480:	pop	{r4, r5, r6, r7, r8, r9, pc}
    9484:	ldr	r0, [pc, #36]	; 94b0 <sf_gen_mcode6+0x1d8>
    9488:	add	r0, pc, r0
    948c:	bl	22b4 <sf_bpf_error>
    9490:	.word	0x00028060
    9494:	.word	0x0000ae54
    9498:	.word	0x0000addc
    949c:	.word	0x0000ade4
    94a0:	.word	0x0000adec
    94a4:	.word	0x0000adfc
    94a8:	.word	0x0000accc
    94ac:	.word	0x00027f00
    94b0:	.word	0x0000ac98

000094b4 <gen_port>:
    94b4:	push	{r4, r5, r6, r7, r8, lr}
    94b8:	mov	r5, r0
    94bc:	mov	r4, r1
    94c0:	mov	r6, r2
    94c4:	mov	r0, #2048	; 0x800
    94c8:	bl	6730 <gen_linktype>
    94cc:	mov	r7, r0
    94d0:	cmp	r4, #6
    94d4:	beq	9548 <gen_port+0x94>
    94d8:	bgt	9534 <gen_port+0x80>
    94dc:	cmn	r4, #1
    94e0:	bne	9544 <gen_port+0x90>
    94e4:	mov	r2, r6
    94e8:	mov	r1, #6
    94ec:	mov	r0, r5
    94f0:	bl	4f4c <sf_gen_portop>
    94f4:	mov	r8, r0
    94f8:	mov	r2, r6
    94fc:	mov	r1, #17
    9500:	mov	r0, r5
    9504:	bl	4f4c <sf_gen_portop>
    9508:	mov	r4, r0
    950c:	mov	r1, r0
    9510:	mov	r0, r8
    9514:	bl	3a20 <sf_gen_or>
    9518:	mov	r2, r6
    951c:	mov	r1, #132	; 0x84
    9520:	mov	r0, r5
    9524:	bl	4f4c <sf_gen_portop>
    9528:	mov	r1, r4
    952c:	bl	3a20 <sf_gen_or>
    9530:	b	955c <gen_port+0xa8>
    9534:	cmp	r4, #17
    9538:	beq	9548 <gen_port+0x94>
    953c:	cmp	r4, #132	; 0x84
    9540:	beq	9548 <gen_port+0x94>
    9544:	bl	f18 <abort@plt>
    9548:	mov	r2, r6
    954c:	mov	r1, r4
    9550:	mov	r0, r5
    9554:	bl	4f4c <sf_gen_portop>
    9558:	mov	r4, r0
    955c:	mov	r1, r4
    9560:	mov	r0, r7
    9564:	bl	399c <sf_gen_and>
    9568:	mov	r0, r4
    956c:	pop	{r4, r5, r6, r7, r8, pc}

00009570 <gen_port6>:
    9570:	push	{r4, r5, r6, r7, r8, lr}
    9574:	mov	r5, r0
    9578:	mov	r4, r1
    957c:	mov	r6, r2
    9580:	ldr	r0, [pc, #164]	; 962c <gen_port6+0xbc>
    9584:	bl	6730 <gen_linktype>
    9588:	mov	r7, r0
    958c:	cmp	r4, #6
    9590:	beq	9604 <gen_port6+0x94>
    9594:	bgt	95f0 <gen_port6+0x80>
    9598:	cmn	r4, #1
    959c:	bne	9600 <gen_port6+0x90>
    95a0:	mov	r2, r6
    95a4:	mov	r1, #6
    95a8:	mov	r0, r5
    95ac:	bl	4e6c <sf_gen_portop6>
    95b0:	mov	r8, r0
    95b4:	mov	r2, r6
    95b8:	mov	r1, #17
    95bc:	mov	r0, r5
    95c0:	bl	4e6c <sf_gen_portop6>
    95c4:	mov	r4, r0
    95c8:	mov	r1, r0
    95cc:	mov	r0, r8
    95d0:	bl	3a20 <sf_gen_or>
    95d4:	mov	r2, r6
    95d8:	mov	r1, #132	; 0x84
    95dc:	mov	r0, r5
    95e0:	bl	4e6c <sf_gen_portop6>
    95e4:	mov	r1, r4
    95e8:	bl	3a20 <sf_gen_or>
    95ec:	b	9618 <gen_port6+0xa8>
    95f0:	cmp	r4, #17
    95f4:	beq	9604 <gen_port6+0x94>
    95f8:	cmp	r4, #132	; 0x84
    95fc:	beq	9604 <gen_port6+0x94>
    9600:	bl	f18 <abort@plt>
    9604:	mov	r2, r6
    9608:	mov	r1, r4
    960c:	mov	r0, r5
    9610:	bl	4e6c <sf_gen_portop6>
    9614:	mov	r4, r0
    9618:	mov	r1, r4
    961c:	mov	r0, r7
    9620:	bl	399c <sf_gen_and>
    9624:	mov	r0, r4
    9628:	pop	{r4, r5, r6, r7, r8, pc}
    962c:	.word	0x000086dd

00009630 <gen_portrange>:
    9630:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9634:	mov	r5, r0
    9638:	mov	r6, r1
    963c:	mov	r4, r2
    9640:	mov	r7, r3
    9644:	mov	r0, #2048	; 0x800
    9648:	bl	6730 <gen_linktype>
    964c:	mov	r8, r0
    9650:	cmp	r4, #6
    9654:	beq	96d4 <gen_portrange+0xa4>
    9658:	bgt	96c0 <gen_portrange+0x90>
    965c:	cmn	r4, #1
    9660:	bne	96d0 <gen_portrange+0xa0>
    9664:	mov	r3, r7
    9668:	mov	r2, #6
    966c:	mov	r1, r6
    9670:	mov	r0, r5
    9674:	bl	5b54 <sf_gen_portrangeop>
    9678:	mov	r9, r0
    967c:	mov	r3, r7
    9680:	mov	r2, #17
    9684:	mov	r1, r6
    9688:	mov	r0, r5
    968c:	bl	5b54 <sf_gen_portrangeop>
    9690:	mov	r4, r0
    9694:	mov	r1, r0
    9698:	mov	r0, r9
    969c:	bl	3a20 <sf_gen_or>
    96a0:	mov	r3, r7
    96a4:	mov	r2, #132	; 0x84
    96a8:	mov	r1, r6
    96ac:	mov	r0, r5
    96b0:	bl	5b54 <sf_gen_portrangeop>
    96b4:	mov	r1, r4
    96b8:	bl	3a20 <sf_gen_or>
    96bc:	b	96ec <gen_portrange+0xbc>
    96c0:	cmp	r4, #17
    96c4:	beq	96d4 <gen_portrange+0xa4>
    96c8:	cmp	r4, #132	; 0x84
    96cc:	beq	96d4 <gen_portrange+0xa4>
    96d0:	bl	f18 <abort@plt>
    96d4:	mov	r3, r7
    96d8:	mov	r2, r4
    96dc:	mov	r1, r6
    96e0:	mov	r0, r5
    96e4:	bl	5b54 <sf_gen_portrangeop>
    96e8:	mov	r4, r0
    96ec:	mov	r1, r4
    96f0:	mov	r0, r8
    96f4:	bl	399c <sf_gen_and>
    96f8:	mov	r0, r4
    96fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00009700 <gen_portrange6>:
    9700:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9704:	mov	r5, r0
    9708:	mov	r6, r1
    970c:	mov	r4, r2
    9710:	mov	r7, r3
    9714:	ldr	r0, [pc, #180]	; 97d0 <gen_portrange6+0xd0>
    9718:	bl	6730 <gen_linktype>
    971c:	mov	r8, r0
    9720:	cmp	r4, #6
    9724:	beq	97a4 <gen_portrange6+0xa4>
    9728:	bgt	9790 <gen_portrange6+0x90>
    972c:	cmn	r4, #1
    9730:	bne	97a0 <gen_portrange6+0xa0>
    9734:	mov	r3, r7
    9738:	mov	r2, #6
    973c:	mov	r1, r6
    9740:	mov	r0, r5
    9744:	bl	5cf4 <sf_gen_portrangeop6>
    9748:	mov	r9, r0
    974c:	mov	r3, r7
    9750:	mov	r2, #17
    9754:	mov	r1, r6
    9758:	mov	r0, r5
    975c:	bl	5cf4 <sf_gen_portrangeop6>
    9760:	mov	r4, r0
    9764:	mov	r1, r0
    9768:	mov	r0, r9
    976c:	bl	3a20 <sf_gen_or>
    9770:	mov	r3, r7
    9774:	mov	r2, #132	; 0x84
    9778:	mov	r1, r6
    977c:	mov	r0, r5
    9780:	bl	5cf4 <sf_gen_portrangeop6>
    9784:	mov	r1, r4
    9788:	bl	3a20 <sf_gen_or>
    978c:	b	97bc <gen_portrange6+0xbc>
    9790:	cmp	r4, #17
    9794:	beq	97a4 <gen_portrange6+0xa4>
    9798:	cmp	r4, #132	; 0x84
    979c:	beq	97a4 <gen_portrange6+0xa4>
    97a0:	bl	f18 <abort@plt>
    97a4:	mov	r3, r7
    97a8:	mov	r2, r4
    97ac:	mov	r1, r6
    97b0:	mov	r0, r5
    97b4:	bl	5cf4 <sf_gen_portrangeop6>
    97b8:	mov	r4, r0
    97bc:	mov	r1, r4
    97c0:	mov	r0, r8
    97c4:	bl	399c <sf_gen_and>
    97c8:	mov	r0, r4
    97cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    97d0:	.word	0x000086dd

000097d4 <gen_protochain>:
    97d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    97d8:	sub	sp, sp, #420	; 0x1a4
    97dc:	mov	r4, r0
    97e0:	str	r0, [sp]
    97e4:	mov	r6, r1
    97e8:	mov	r8, r2
    97ec:	ldr	r7, [pc, #1772]	; 9ee0 <gen_protochain+0x70c>
    97f0:	add	r7, pc, r7
    97f4:	bl	245c <alloc_reg>
    97f8:	mov	r5, r0
    97fc:	mov	r2, #400	; 0x190
    9800:	mov	r1, #0
    9804:	add	r0, sp, #16
    9808:	bl	e88 <memset@plt>
    980c:	cmp	r6, #2
    9810:	beq	9870 <gen_protochain+0x9c>
    9814:	cmp	r6, #17
    9818:	beq	9870 <gen_protochain+0x9c>
    981c:	cmp	r6, #0
    9820:	beq	9830 <gen_protochain+0x5c>
    9824:	ldr	r0, [pc, #1720]	; 9ee4 <gen_protochain+0x710>
    9828:	add	r0, pc, r0
    982c:	bl	22b4 <sf_bpf_error>
    9830:	mov	r2, r8
    9834:	mov	r1, #2
    9838:	mov	r0, r4
    983c:	bl	97d4 <gen_protochain>
    9840:	mov	r5, r0
    9844:	mov	r2, r8
    9848:	mov	r1, #17
    984c:	mov	r0, r4
    9850:	bl	97d4 <gen_protochain>
    9854:	mov	r6, r0
    9858:	mov	r1, r0
    985c:	mov	r0, r5
    9860:	bl	3a20 <sf_gen_or>
    9864:	mov	r0, r6
    9868:	add	sp, sp, #420	; 0x1a4
    986c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9870:	ldr	r3, [pc, #1648]	; 9ee8 <gen_protochain+0x714>
    9874:	add	r3, pc, r3
    9878:	ldr	r3, [r3, #852]	; 0x354
    987c:	cmp	r3, #127	; 0x7f
    9880:	beq	98e8 <gen_protochain+0x114>
    9884:	bgt	98d8 <gen_protochain+0x104>
    9888:	cmp	r3, #105	; 0x69
    988c:	beq	98e8 <gen_protochain+0x114>
    9890:	cmp	r3, #119	; 0x77
    9894:	beq	98e8 <gen_protochain+0x114>
    9898:	ldr	r3, [pc, #1612]	; 9eec <gen_protochain+0x718>
    989c:	ldr	r3, [r7, r3]
    98a0:	mov	r2, #1
    98a4:	str	r2, [r3]
    98a8:	mov	r0, #20
    98ac:	bl	22f0 <newchunk>
    98b0:	mov	r3, #0
    98b4:	str	r3, [r0]
    98b8:	str	r0, [sp, #16]
    98bc:	cmp	r6, #2
    98c0:	beq	98f4 <gen_protochain+0x120>
    98c4:	cmp	r6, #17
    98c8:	beq	9c24 <gen_protochain+0x450>
    98cc:	ldr	r0, [pc, #1564]	; 9ef0 <gen_protochain+0x71c>
    98d0:	add	r0, pc, r0
    98d4:	bl	22b4 <sf_bpf_error>
    98d8:	cmp	r3, #163	; 0xa3
    98dc:	beq	98e8 <gen_protochain+0x114>
    98e0:	cmp	r3, #192	; 0xc0
    98e4:	bne	9898 <gen_protochain+0xc4>
    98e8:	ldr	r0, [pc, #1540]	; 9ef4 <gen_protochain+0x720>
    98ec:	add	r0, pc, r0
    98f0:	bl	22b4 <sf_bpf_error>
    98f4:	mov	r0, #2048	; 0x800
    98f8:	bl	6730 <gen_linktype>
    98fc:	str	r0, [sp, #4]
    9900:	mov	r0, #20
    9904:	bl	22f0 <newchunk>
    9908:	mov	r3, #48	; 0x30
    990c:	str	r3, [r0]
    9910:	str	r0, [sp, #20]
    9914:	ldr	r3, [pc, #1500]	; 9ef8 <gen_protochain+0x724>
    9918:	add	r3, pc, r3
    991c:	ldr	r6, [r3, #940]	; 0x3ac
    9920:	ldr	r3, [r3, #948]	; 0x3b4
    9924:	add	r6, r6, r3
    9928:	add	r3, r6, #9
    992c:	str	r3, [r0, #12]
    9930:	mov	r0, #20
    9934:	bl	22f0 <newchunk>
    9938:	mov	r3, #177	; 0xb1
    993c:	str	r3, [r0]
    9940:	str	r0, [sp, #24]
    9944:	str	r6, [r0, #12]
    9948:	mov	r0, #20
    994c:	bl	22f0 <newchunk>
    9950:	mov	r8, r0
    9954:	mov	r9, #21
    9958:	str	r9, [r0]
    995c:	str	r0, [sp, #28]
    9960:	ldr	r3, [sp]
    9964:	str	r3, [r0, #12]
    9968:	mov	r6, #0
    996c:	str	r6, [r0, #4]
    9970:	str	r6, [r0, #8]
    9974:	mov	r0, #20
    9978:	bl	22f0 <newchunk>
    997c:	mov	r7, r0
    9980:	str	r9, [r0]
    9984:	str	r0, [sp, #32]
    9988:	str	r6, [r0, #4]
    998c:	str	r6, [r0, #8]
    9990:	mov	r3, #59	; 0x3b
    9994:	str	r3, [r0, #12]
    9998:	str	r0, [r8, #8]
    999c:	mov	r0, #20
    99a0:	bl	22f0 <newchunk>
    99a4:	mov	r3, #4
    99a8:	str	r3, [r0]
    99ac:	str	r0, [sp, #36]	; 0x24
    99b0:	str	r6, [r0, #12]
    99b4:	str	r0, [r7, #8]
    99b8:	mov	r0, #20
    99bc:	bl	22f0 <newchunk>
    99c0:	mov	r8, r0
    99c4:	str	r9, [r0]
    99c8:	str	r0, [sp, #40]	; 0x28
    99cc:	str	r6, [r0, #4]
    99d0:	str	r6, [r0, #8]
    99d4:	mov	r3, #51	; 0x33
    99d8:	str	r3, [r0, #12]
    99dc:	mov	r6, #6
    99e0:	mov	r0, #20
    99e4:	bl	22f0 <newchunk>
    99e8:	mov	r7, #135	; 0x87
    99ec:	str	r7, [r0]
    99f0:	add	r3, sp, #416	; 0x1a0
    99f4:	add	r3, r3, r6, lsl #2
    99f8:	str	r0, [r3, #-396]	; 0xfffffe74
    99fc:	str	r0, [r8, #4]
    9a00:	mov	r0, #20
    9a04:	bl	22f0 <newchunk>
    9a08:	mov	sl, #80	; 0x50
    9a0c:	str	sl, [r0]
    9a10:	add	r3, sp, #416	; 0x1a0
    9a14:	add	r3, r3, r6, lsl #2
    9a18:	str	r0, [r3, #-392]	; 0xfffffe78
    9a1c:	ldr	r3, [pc, #1240]	; 9efc <gen_protochain+0x728>
    9a20:	add	r3, pc, r3
    9a24:	ldr	r8, [r3, #940]	; 0x3ac
    9a28:	ldr	r3, [r3, #948]	; 0x3b4
    9a2c:	add	r8, r8, r3
    9a30:	str	r8, [r0, #12]
    9a34:	mov	r0, #20
    9a38:	bl	22f0 <newchunk>
    9a3c:	mov	fp, r0
    9a40:	mov	r9, #2
    9a44:	str	r9, [r0]
    9a48:	add	r3, sp, #416	; 0x1a0
    9a4c:	add	r3, r3, r6, lsl r9
    9a50:	str	r0, [r3, #-388]	; 0xfffffe7c
    9a54:	str	r5, [r0, #12]
    9a58:	mov	r0, #20
    9a5c:	bl	22f0 <newchunk>
    9a60:	str	r7, [r0]
    9a64:	add	r3, sp, #416	; 0x1a0
    9a68:	add	r3, r3, r6, lsl r9
    9a6c:	str	r0, [r3, #-384]	; 0xfffffe80
    9a70:	str	r0, [fp, #4]
    9a74:	mov	r0, #20
    9a78:	bl	22f0 <newchunk>
    9a7c:	mov	r7, #4
    9a80:	str	r7, [r0]
    9a84:	add	r3, sp, #416	; 0x1a0
    9a88:	add	r3, r3, r6, lsl r9
    9a8c:	str	r0, [r3, #-380]	; 0xfffffe84
    9a90:	mov	r3, #1
    9a94:	str	r3, [r0, #12]
    9a98:	mov	r0, #20
    9a9c:	bl	22f0 <newchunk>
    9aa0:	mov	fp, #7
    9aa4:	str	fp, [r0]
    9aa8:	add	r3, sp, #416	; 0x1a0
    9aac:	add	r3, r3, r6, lsl r9
    9ab0:	str	r0, [r3, #-376]	; 0xfffffe88
    9ab4:	mov	r0, #20
    9ab8:	bl	22f0 <newchunk>
    9abc:	str	sl, [r0]
    9ac0:	add	r3, sp, #416	; 0x1a0
    9ac4:	add	r3, r3, r6, lsl r9
    9ac8:	str	r0, [r3, #-372]	; 0xfffffe8c
    9acc:	str	r8, [r0, #12]
    9ad0:	mov	r0, #20
    9ad4:	bl	22f0 <newchunk>
    9ad8:	str	r7, [r0]
    9adc:	add	r3, sp, #416	; 0x1a0
    9ae0:	add	r3, r3, r6, lsl r9
    9ae4:	str	r0, [r3, #-368]	; 0xfffffe90
    9ae8:	str	r9, [r0, #12]
    9aec:	mov	r0, #20
    9af0:	bl	22f0 <newchunk>
    9af4:	mov	r3, #36	; 0x24
    9af8:	str	r3, [r0]
    9afc:	add	r3, sp, #416	; 0x1a0
    9b00:	add	r3, r3, r6, lsl r9
    9b04:	str	r0, [r3, #-364]	; 0xfffffe94
    9b08:	str	r7, [r0, #12]
    9b0c:	mov	r0, #20
    9b10:	bl	22f0 <newchunk>
    9b14:	str	fp, [r0]
    9b18:	add	r3, sp, #416	; 0x1a0
    9b1c:	add	r3, r3, r6, lsl r9
    9b20:	str	r0, [r3, #-360]	; 0xfffffe98
    9b24:	mov	r0, #20
    9b28:	bl	22f0 <newchunk>
    9b2c:	mov	r3, #96	; 0x60
    9b30:	str	r3, [r0]
    9b34:	add	r3, sp, #416	; 0x1a0
    9b38:	add	r3, r3, r6, lsl r9
    9b3c:	str	r0, [r3, #-356]	; 0xfffffe9c
    9b40:	str	r5, [r0, #12]
    9b44:	add	r8, r6, #12
    9b48:	mov	r0, #20
    9b4c:	bl	22f0 <newchunk>
    9b50:	mov	r3, #5
    9b54:	str	r3, [r0]
    9b58:	add	r2, sp, #416	; 0x1a0
    9b5c:	add	r2, r2, r8, lsl r9
    9b60:	str	r0, [r2, #-400]	; 0xfffffe70
    9b64:	sub	r3, r9, r8
    9b68:	str	r3, [r0, #12]
    9b6c:	add	r8, r6, #13
    9b70:	mov	r0, #20
    9b74:	bl	22f0 <newchunk>
    9b78:	str	r7, [r0]
    9b7c:	add	r2, sp, #416	; 0x1a0
    9b80:	add	r2, r2, r8, lsl r9
    9b84:	str	r0, [r2, #-400]	; 0xfffffe70
    9b88:	mov	r2, #0
    9b8c:	str	r2, [r0, #12]
    9b90:	ldr	r2, [sp, #32]
    9b94:	str	r0, [r2, #4]
    9b98:	add	r2, sp, #416	; 0x1a0
    9b9c:	add	r2, r2, r6, lsl r9
    9ba0:	ldr	r2, [r2, #-400]	; 0xfffffe70
    9ba4:	str	r0, [r2, #8]
    9ba8:	ldr	r2, [sp, #28]
    9bac:	str	r0, [r2, #4]
    9bb0:	cmp	r8, #0
    9bb4:	ble	9bd4 <gen_protochain+0x400>
    9bb8:	add	r3, sp, #16
    9bbc:	add	ip, r3, r8, lsl r9
    9bc0:	ldr	r2, [r3]
    9bc4:	ldr	r1, [r3, #4]!
    9bc8:	str	r1, [r2, #16]
    9bcc:	cmp	r3, ip
    9bd0:	bne	9bc0 <gen_protochain+0x3ec>
    9bd4:	mov	r7, #0
    9bd8:	str	r7, [r0, #16]
    9bdc:	mov	r0, #208	; 0xd0
    9be0:	bl	22f0 <newchunk>
    9be4:	mov	r6, r0
    9be8:	mov	r3, #21
    9bec:	str	r3, [r0, #8]
    9bf0:	str	r0, [r6, #96]	; 0x60
    9bf4:	ldr	r3, [sp, #20]
    9bf8:	str	r3, [r0, #4]
    9bfc:	ldr	r3, [sp]
    9c00:	str	r3, [r0, #20]
    9c04:	ldr	r3, [pc, #756]	; 9f00 <gen_protochain+0x72c>
    9c08:	add	r3, pc, r3
    9c0c:	add	r5, r3, r5, lsl #2
    9c10:	str	r7, [r5, #788]	; 0x314
    9c14:	mov	r1, r0
    9c18:	ldr	r0, [sp, #4]
    9c1c:	bl	399c <sf_gen_and>
    9c20:	b	9864 <gen_protochain+0x90>
    9c24:	ldr	r0, [pc, #728]	; 9f04 <gen_protochain+0x730>
    9c28:	bl	6730 <gen_linktype>
    9c2c:	str	r0, [sp, #4]
    9c30:	mov	r0, #20
    9c34:	bl	22f0 <newchunk>
    9c38:	mov	r3, #48	; 0x30
    9c3c:	str	r3, [r0]
    9c40:	str	r0, [sp, #20]
    9c44:	ldr	r3, [pc, #700]	; 9f08 <gen_protochain+0x734>
    9c48:	add	r3, pc, r3
    9c4c:	ldr	r2, [r3, #940]	; 0x3ac
    9c50:	ldr	r3, [r3, #948]	; 0x3b4
    9c54:	add	r3, r2, r3
    9c58:	str	r3, [sp, #8]
    9c5c:	add	r3, r3, #6
    9c60:	str	r3, [r0, #12]
    9c64:	mov	r0, #20
    9c68:	bl	22f0 <newchunk>
    9c6c:	mov	r1, #1
    9c70:	str	r1, [r0]
    9c74:	str	r0, [sp, #24]
    9c78:	mov	r3, #40	; 0x28
    9c7c:	str	r3, [r0, #12]
    9c80:	mov	r0, #20
    9c84:	bl	22f0 <newchunk>
    9c88:	mov	r8, r0
    9c8c:	mov	r4, #21
    9c90:	str	r4, [r0]
    9c94:	str	r0, [sp, #28]
    9c98:	ldr	r1, [sp]
    9c9c:	str	r1, [r0, #12]
    9ca0:	mov	r6, #0
    9ca4:	str	r6, [r0, #4]
    9ca8:	str	r6, [r0, #8]
    9cac:	mov	r0, #20
    9cb0:	bl	22f0 <newchunk>
    9cb4:	mov	r7, r0
    9cb8:	str	r4, [r0]
    9cbc:	str	r0, [sp, #32]
    9cc0:	str	r6, [r0, #4]
    9cc4:	str	r6, [r0, #8]
    9cc8:	mov	r3, #59	; 0x3b
    9ccc:	str	r3, [r0, #12]
    9cd0:	str	r0, [r8, #8]
    9cd4:	mov	r0, #20
    9cd8:	bl	22f0 <newchunk>
    9cdc:	mov	sl, r0
    9ce0:	str	r4, [r0]
    9ce4:	str	r0, [sp, #36]	; 0x24
    9ce8:	str	r6, [r0, #4]
    9cec:	str	r6, [r0, #8]
    9cf0:	str	r6, [r0, #12]
    9cf4:	str	r0, [r7, #8]
    9cf8:	mov	r0, #20
    9cfc:	bl	22f0 <newchunk>
    9d00:	mov	r9, r0
    9d04:	str	r4, [r0]
    9d08:	str	r0, [sp, #40]	; 0x28
    9d0c:	str	r0, [sl, #8]
    9d10:	str	r6, [r0, #4]
    9d14:	str	r6, [r0, #8]
    9d18:	mov	r3, #60	; 0x3c
    9d1c:	str	r3, [r0, #12]
    9d20:	mov	r0, #20
    9d24:	bl	22f0 <newchunk>
    9d28:	mov	r8, r0
    9d2c:	str	r4, [r0]
    9d30:	str	r0, [sp, #44]	; 0x2c
    9d34:	str	r0, [r9, #8]
    9d38:	str	r6, [r0, #4]
    9d3c:	str	r6, [r0, #8]
    9d40:	mov	r3, #43	; 0x2b
    9d44:	str	r3, [r0, #12]
    9d48:	mov	r0, #20
    9d4c:	bl	22f0 <newchunk>
    9d50:	mov	r7, r0
    9d54:	str	r4, [r0]
    9d58:	str	r0, [sp, #48]	; 0x30
    9d5c:	str	r0, [r8, #8]
    9d60:	str	r6, [r0, #4]
    9d64:	str	r6, [r0, #8]
    9d68:	mov	r3, #44	; 0x2c
    9d6c:	str	r3, [r0, #12]
    9d70:	mov	r0, #20
    9d74:	bl	22f0 <newchunk>
    9d78:	mov	fp, #135	; 0x87
    9d7c:	str	fp, [r0]
    9d80:	str	r0, [sp, #12]
    9d84:	str	r0, [sp, #52]	; 0x34
    9d88:	mov	r0, #20
    9d8c:	bl	22f0 <newchunk>
    9d90:	mov	r1, #80	; 0x50
    9d94:	str	r1, [r0]
    9d98:	str	r0, [sp, #56]	; 0x38
    9d9c:	ldr	r2, [sp, #8]
    9da0:	str	r2, [r0, #12]
    9da4:	mov	r0, #20
    9da8:	bl	22f0 <newchunk>
    9dac:	mov	r3, #2
    9db0:	str	r3, [r0]
    9db4:	str	r0, [sp, #60]	; 0x3c
    9db8:	str	r5, [r0, #12]
    9dbc:	mov	r0, #20
    9dc0:	bl	22f0 <newchunk>
    9dc4:	str	fp, [r0]
    9dc8:	str	r0, [sp, #64]	; 0x40
    9dcc:	mov	r0, #20
    9dd0:	bl	22f0 <newchunk>
    9dd4:	mov	r1, #4
    9dd8:	str	r1, [r0]
    9ddc:	str	r0, [sp, #68]	; 0x44
    9de0:	mov	r1, #1
    9de4:	str	r1, [r0, #12]
    9de8:	mov	r0, #20
    9dec:	bl	22f0 <newchunk>
    9df0:	mov	fp, #7
    9df4:	str	fp, [r0]
    9df8:	str	r0, [sp, #72]	; 0x48
    9dfc:	mov	r0, #20
    9e00:	bl	22f0 <newchunk>
    9e04:	mov	r1, #80	; 0x50
    9e08:	str	r1, [r0]
    9e0c:	str	r0, [sp, #76]	; 0x4c
    9e10:	ldr	r2, [sp, #8]
    9e14:	str	r2, [r0, #12]
    9e18:	mov	r0, #20
    9e1c:	bl	22f0 <newchunk>
    9e20:	mov	r2, #4
    9e24:	str	r2, [r0]
    9e28:	str	r0, [sp, #80]	; 0x50
    9e2c:	mov	r2, #1
    9e30:	str	r2, [r0, #12]
    9e34:	mov	r0, #20
    9e38:	bl	22f0 <newchunk>
    9e3c:	mov	r3, #36	; 0x24
    9e40:	str	r3, [r0]
    9e44:	str	r0, [sp, #84]	; 0x54
    9e48:	mov	r3, #8
    9e4c:	str	r3, [r0, #12]
    9e50:	mov	r0, #20
    9e54:	bl	22f0 <newchunk>
    9e58:	str	fp, [r0]
    9e5c:	str	r0, [sp, #88]	; 0x58
    9e60:	mov	r0, #20
    9e64:	bl	22f0 <newchunk>
    9e68:	mov	fp, r0
    9e6c:	mov	r3, #96	; 0x60
    9e70:	str	r3, [r0]
    9e74:	str	r0, [sp, #92]	; 0x5c
    9e78:	str	r5, [r0, #12]
    9e7c:	mov	r0, #20
    9e80:	bl	22f0 <newchunk>
    9e84:	mov	r3, #5
    9e88:	str	r3, [r0]
    9e8c:	str	r0, [sp, #96]	; 0x60
    9e90:	mvn	r3, #17
    9e94:	str	r3, [r0, #12]
    9e98:	str	r0, [fp, #8]
    9e9c:	ldr	r3, [sp, #12]
    9ea0:	str	r3, [sl, #4]
    9ea4:	str	r3, [r9, #4]
    9ea8:	str	r3, [r8, #4]
    9eac:	str	r3, [r7, #4]
    9eb0:	mov	r0, #20
    9eb4:	bl	22f0 <newchunk>
    9eb8:	mov	r8, r0
    9ebc:	str	r4, [r0]
    9ec0:	str	r0, [sp, #100]	; 0x64
    9ec4:	str	r6, [r0, #4]
    9ec8:	str	r6, [r0, #8]
    9ecc:	mov	r3, #51	; 0x33
    9ed0:	str	r3, [r0, #12]
    9ed4:	str	r0, [r7, #8]
    9ed8:	mov	r6, r4
    9edc:	b	99e0 <gen_protochain+0x20c>
    9ee0:	.word	0x00027808
    9ee4:	.word	0x0000aa38
    9ee8:	.word	0x00027af4
    9eec:	.word	0x00000104
    9ef0:	.word	0x0000a9e0
    9ef4:	.word	0x0000a99c
    9ef8:	.word	0x00027a50
    9efc:	.word	0x00027948
    9f00:	.word	0x00027760
    9f04:	.word	0x000086dd
    9f08:	.word	0x00027720

00009f0c <sf_gen_scode>:
    9f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f10:	sub	sp, sp, #60	; 0x3c
    9f14:	str	r1, [sp, #20]
    9f18:	uxtb	r6, r1
    9f1c:	cmp	r6, #4
    9f20:	beq	a564 <sf_gen_scode+0x658>
    9f24:	mov	r8, r0
    9f28:	lsr	r4, r1, #8
    9f2c:	lsr	r5, r1, #16
    9f30:	uxtb	r4, r4
    9f34:	uxtb	r5, r5
    9f38:	bls	9f64 <sf_gen_scode+0x58>
    9f3c:	cmp	r6, #6
    9f40:	beq	a5a8 <sf_gen_scode+0x69c>
    9f44:	bcc	a570 <sf_gen_scode+0x664>
    9f48:	cmp	r6, #7
    9f4c:	beq	a470 <sf_gen_scode+0x564>
    9f50:	cmp	r6, #255	; 0xff
    9f54:	bne	a5e0 <sf_gen_scode+0x6d4>
    9f58:	ldr	r0, [pc, #1888]	; a6c0 <sf_gen_scode+0x7b4>
    9f5c:	add	r0, pc, r0
    9f60:	bl	22b4 <sf_bpf_error>
    9f64:	cmp	r6, #2
    9f68:	beq	9ff4 <sf_gen_scode+0xe8>
    9f6c:	bhi	a380 <sf_gen_scode+0x474>
    9f70:	cmp	r4, #1
    9f74:	beq	a058 <sf_gen_scode+0x14c>
    9f78:	mov	sl, r6
    9f7c:	cmp	r4, #12
    9f80:	beq	a26c <sf_gen_scode+0x360>
    9f84:	mvn	r2, #0
    9f88:	str	r2, [sp, #40]	; 0x28
    9f8c:	str	r2, [sp, #44]	; 0x2c
    9f90:	str	r2, [sp, #48]	; 0x30
    9f94:	str	r2, [sp, #52]	; 0x34
    9f98:	bl	bc10 <pcap_nametoaddrinfo>
    9f9c:	subs	r3, r0, #0
    9fa0:	str	r3, [sp, #12]
    9fa4:	beq	a28c <sf_gen_scode+0x380>
    9fa8:	ldr	r3, [pc, #1812]	; a6c4 <sf_gen_scode+0x7b8>
    9fac:	add	r3, pc, r3
    9fb0:	ldr	r2, [sp, #12]
    9fb4:	str	r2, [r3, #872]	; 0x368
    9fb8:	ldr	r9, [r3, #944]	; 0x3b0
    9fbc:	cmp	r4, #0
    9fc0:	cmneq	r9, #1
    9fc4:	moveq	r9, #1
    9fc8:	movne	r9, #0
    9fcc:	movne	fp, r4
    9fd0:	moveq	fp, #17
    9fd4:	cmp	r9, #0
    9fd8:	moveq	r9, r4
    9fdc:	movne	r9, #2
    9fe0:	mov	r6, r2
    9fe4:	mov	r7, #0
    9fe8:	add	r3, sp, #40	; 0x28
    9fec:	str	r3, [sp, #16]
    9ff0:	b	a2ec <sf_gen_scode+0x3e0>
    9ff4:	bl	bc68 <pcap_nametonetaddr>
    9ff8:	cmp	r0, #0
    9ffc:	beq	a048 <sf_gen_scode+0x13c>
    a000:	tst	r0, #-16777216	; 0xff000000
    a004:	mvnne	r1, #0
    a008:	bne	a024 <sf_gen_scode+0x118>
    a00c:	mvn	r1, #0
    a010:	lsl	r1, r1, #8
    a014:	lsls	r0, r0, #8
    a018:	beq	a024 <sf_gen_scode+0x118>
    a01c:	tst	r0, #-16777216	; 0xff000000
    a020:	beq	a010 <sf_gen_scode+0x104>
    a024:	mov	r3, #2
    a028:	str	r3, [sp]
    a02c:	mov	r3, r5
    a030:	mov	r2, r4
    a034:	bl	891c <gen_host>
    a038:	mov	r7, r0
    a03c:	mov	r0, r7
    a040:	add	sp, sp, #60	; 0x3c
    a044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a048:	mov	r1, r8
    a04c:	ldr	r0, [pc, #1652]	; a6c8 <sf_gen_scode+0x7bc>
    a050:	add	r0, pc, r0
    a054:	bl	22b4 <sf_bpf_error>
    a058:	ldr	r3, [pc, #1644]	; a6cc <sf_gen_scode+0x7c0>
    a05c:	add	r3, pc, r3
    a060:	ldr	r3, [r3, #852]	; 0x354
    a064:	cmp	r3, #119	; 0x77
    a068:	beq	a190 <sf_gen_scode+0x284>
    a06c:	bgt	a0f0 <sf_gen_scode+0x1e4>
    a070:	cmp	r3, #6
    a074:	beq	a1dc <sf_gen_scode+0x2d0>
    a078:	ble	a0ac <sf_gen_scode+0x1a0>
    a07c:	cmp	r3, #10
    a080:	bne	a0dc <sf_gen_scode+0x1d0>
    a084:	bl	c0f8 <pcap_ether_hostton>
    a088:	subs	r4, r0, #0
    a08c:	beq	a1cc <sf_gen_scode+0x2c0>
    a090:	mov	r1, r5
    a094:	mov	r0, r4
    a098:	bl	49b0 <gen_fhostop>
    a09c:	mov	r7, r0
    a0a0:	mov	r0, r4
    a0a4:	bl	da4 <free@plt>
    a0a8:	b	a03c <sf_gen_scode+0x130>
    a0ac:	cmp	r3, #1
    a0b0:	bne	a0e4 <sf_gen_scode+0x1d8>
    a0b4:	bl	c0f8 <pcap_ether_hostton>
    a0b8:	subs	r4, r0, #0
    a0bc:	beq	a1bc <sf_gen_scode+0x2b0>
    a0c0:	mov	r1, r5
    a0c4:	mov	r0, r4
    a0c8:	bl	4bf0 <gen_ehostop>
    a0cc:	mov	r7, r0
    a0d0:	mov	r0, r4
    a0d4:	bl	da4 <free@plt>
    a0d8:	b	a03c <sf_gen_scode+0x130>
    a0dc:	cmp	r3, #105	; 0x69
    a0e0:	beq	a190 <sf_gen_scode+0x284>
    a0e4:	ldr	r0, [pc, #1508]	; a6d0 <sf_gen_scode+0x7c4>
    a0e8:	add	r0, pc, r0
    a0ec:	bl	22b4 <sf_bpf_error>
    a0f0:	cmp	r3, #127	; 0x7f
    a0f4:	beq	a190 <sf_gen_scode+0x284>
    a0f8:	bgt	a180 <sf_gen_scode+0x274>
    a0fc:	cmp	r3, #122	; 0x7a
    a100:	beq	a224 <sf_gen_scode+0x318>
    a104:	cmp	r3, #123	; 0x7b
    a108:	bne	a0e4 <sf_gen_scode+0x1d8>
    a10c:	ldr	r3, [pc, #1472]	; a6d4 <sf_gen_scode+0x7c8>
    a110:	add	r3, pc, r3
    a114:	ldr	r3, [r3, #892]	; 0x37c
    a118:	cmp	r3, #0
    a11c:	beq	a0e4 <sf_gen_scode+0x1d8>
    a120:	mov	r3, #65280	; 0xff00
    a124:	mov	r2, #8
    a128:	mov	r1, #4
    a12c:	mov	r0, #1
    a130:	bl	47d8 <gen_cmp>
    a134:	mov	r4, r0
    a138:	ldr	r3, [r0, #44]	; 0x2c
    a13c:	clz	r3, r3
    a140:	lsr	r3, r3, #5
    a144:	str	r3, [r0, #44]	; 0x2c
    a148:	mov	r0, r8
    a14c:	bl	c0f8 <pcap_ether_hostton>
    a150:	subs	r6, r0, #0
    a154:	beq	a25c <sf_gen_scode+0x350>
    a158:	mov	r1, r5
    a15c:	mov	r0, r6
    a160:	bl	4bf0 <gen_ehostop>
    a164:	mov	r7, r0
    a168:	mov	r1, r0
    a16c:	mov	r0, r4
    a170:	bl	399c <sf_gen_and>
    a174:	mov	r0, r6
    a178:	bl	da4 <free@plt>
    a17c:	b	a03c <sf_gen_scode+0x130>
    a180:	cmp	r3, #163	; 0xa3
    a184:	beq	a190 <sf_gen_scode+0x284>
    a188:	cmp	r3, #192	; 0xc0
    a18c:	bne	a0e4 <sf_gen_scode+0x1d8>
    a190:	mov	r0, r8
    a194:	bl	c0f8 <pcap_ether_hostton>
    a198:	subs	r4, r0, #0
    a19c:	beq	a214 <sf_gen_scode+0x308>
    a1a0:	mov	r1, r5
    a1a4:	mov	r0, r4
    a1a8:	bl	531c <gen_wlanhostop>
    a1ac:	mov	r7, r0
    a1b0:	mov	r0, r4
    a1b4:	bl	da4 <free@plt>
    a1b8:	b	a03c <sf_gen_scode+0x130>
    a1bc:	mov	r1, r8
    a1c0:	ldr	r0, [pc, #1296]	; a6d8 <sf_gen_scode+0x7cc>
    a1c4:	add	r0, pc, r0
    a1c8:	bl	22b4 <sf_bpf_error>
    a1cc:	mov	r1, r8
    a1d0:	ldr	r0, [pc, #1284]	; a6dc <sf_gen_scode+0x7d0>
    a1d4:	add	r0, pc, r0
    a1d8:	bl	22b4 <sf_bpf_error>
    a1dc:	bl	c0f8 <pcap_ether_hostton>
    a1e0:	subs	r4, r0, #0
    a1e4:	beq	a204 <sf_gen_scode+0x2f8>
    a1e8:	mov	r1, r5
    a1ec:	mov	r0, r4
    a1f0:	bl	4a70 <gen_thostop>
    a1f4:	mov	r7, r0
    a1f8:	mov	r0, r4
    a1fc:	bl	da4 <free@plt>
    a200:	b	a03c <sf_gen_scode+0x130>
    a204:	mov	r1, r8
    a208:	ldr	r0, [pc, #1232]	; a6e0 <sf_gen_scode+0x7d4>
    a20c:	add	r0, pc, r0
    a210:	bl	22b4 <sf_bpf_error>
    a214:	mov	r1, r8
    a218:	ldr	r0, [pc, #1220]	; a6e4 <sf_gen_scode+0x7d8>
    a21c:	add	r0, pc, r0
    a220:	bl	22b4 <sf_bpf_error>
    a224:	bl	c0f8 <pcap_ether_hostton>
    a228:	subs	r4, r0, #0
    a22c:	beq	a24c <sf_gen_scode+0x340>
    a230:	mov	r1, r5
    a234:	mov	r0, r4
    a238:	bl	4b30 <gen_ipfchostop>
    a23c:	mov	r7, r0
    a240:	mov	r0, r4
    a244:	bl	da4 <free@plt>
    a248:	b	a03c <sf_gen_scode+0x130>
    a24c:	mov	r1, r8
    a250:	ldr	r0, [pc, #1168]	; a6e8 <sf_gen_scode+0x7dc>
    a254:	add	r0, pc, r0
    a258:	bl	22b4 <sf_bpf_error>
    a25c:	mov	r1, r8
    a260:	ldr	r0, [pc, #1156]	; a6ec <sf_gen_scode+0x7e0>
    a264:	add	r0, pc, r0
    a268:	bl	22b4 <sf_bpf_error>
    a26c:	bl	c1e0 <__pcap_nametodnaddr>
    a270:	str	r6, [sp]
    a274:	mov	r3, r5
    a278:	mov	r2, #12
    a27c:	mov	r1, #0
    a280:	bl	891c <gen_host>
    a284:	mov	r7, r0
    a288:	b	a03c <sf_gen_scode+0x130>
    a28c:	mov	r1, r8
    a290:	ldr	r0, [pc, #1112]	; a6f0 <sf_gen_scode+0x7e4>
    a294:	add	r0, pc, r0
    a298:	bl	22b4 <sf_bpf_error>
    a29c:	cmp	r9, #17
    a2a0:	beq	a2e0 <sf_gen_scode+0x3d4>
    a2a4:	ldr	r3, [r6, #20]
    a2a8:	ldr	r0, [r3, #4]
    a2ac:	str	sl, [sp]
    a2b0:	mov	r3, r5
    a2b4:	mov	r2, r9
    a2b8:	mvn	r1, #0
    a2bc:	rev	r0, r0
    a2c0:	bl	891c <gen_host>
    a2c4:	str	r0, [sp, #8]
    a2c8:	cmp	r7, #0
    a2cc:	beq	a32c <sf_gen_scode+0x420>
    a2d0:	ldr	r1, [sp, #8]
    a2d4:	mov	r0, r7
    a2d8:	bl	3a20 <sf_gen_or>
    a2dc:	ldr	r7, [sp, #8]
    a2e0:	ldr	r6, [r6, #28]
    a2e4:	cmp	r6, #0
    a2e8:	beq	a334 <sf_gen_scode+0x428>
    a2ec:	ldr	r3, [r6, #4]
    a2f0:	cmp	r3, #2
    a2f4:	beq	a29c <sf_gen_scode+0x390>
    a2f8:	cmp	r3, #10
    a2fc:	bne	a2e0 <sf_gen_scode+0x3d4>
    a300:	cmp	fp, #2
    a304:	beq	a2e0 <sf_gen_scode+0x3d4>
    a308:	ldr	r0, [r6, #20]
    a30c:	str	sl, [sp]
    a310:	mov	r3, r5
    a314:	mov	r2, fp
    a318:	ldr	r1, [sp, #16]
    a31c:	add	r0, r0, #8
    a320:	bl	8f90 <gen_host6>
    a324:	str	r0, [sp, #8]
    a328:	b	a2c8 <sf_gen_scode+0x3bc>
    a32c:	ldr	r7, [sp, #8]
    a330:	b	a2e0 <sf_gen_scode+0x3d4>
    a334:	mov	r2, #0
    a338:	ldr	r3, [pc, #948]	; a6f4 <sf_gen_scode+0x7e8>
    a33c:	add	r3, pc, r3
    a340:	str	r2, [r3, #872]	; 0x368
    a344:	ldr	r0, [sp, #12]
    a348:	bl	edc <freeaddrinfo@plt>
    a34c:	cmp	r7, #0
    a350:	bne	a03c <sf_gen_scode+0x130>
    a354:	cmp	r4, #0
    a358:	beq	a374 <sf_gen_scode+0x468>
    a35c:	ldr	r2, [pc, #916]	; a6f8 <sf_gen_scode+0x7ec>
    a360:	add	r2, pc, r2
    a364:	mov	r1, r8
    a368:	ldr	r0, [pc, #908]	; a6fc <sf_gen_scode+0x7f0>
    a36c:	add	r0, pc, r0
    a370:	bl	22b4 <sf_bpf_error>
    a374:	ldr	r2, [pc, #900]	; a700 <sf_gen_scode+0x7f4>
    a378:	add	r2, pc, r2
    a37c:	b	a364 <sf_gen_scode+0x458>
    a380:	cmp	r4, #0
    a384:	beq	a5e4 <sf_gen_scode+0x6d8>
    a388:	sub	r3, r4, #5
    a38c:	uxtb	r3, r3
    a390:	cmp	r3, #2
    a394:	bhi	a3e8 <sf_gen_scode+0x4dc>
    a398:	add	r2, sp, #32
    a39c:	add	r1, sp, #36	; 0x24
    a3a0:	bl	bc80 <pcap_nametoport>
    a3a4:	cmp	r0, #0
    a3a8:	beq	a3f4 <sf_gen_scode+0x4e8>
    a3ac:	cmp	r4, #7
    a3b0:	beq	a404 <sf_gen_scode+0x4f8>
    a3b4:	cmp	r4, #6
    a3b8:	bne	a5f8 <sf_gen_scode+0x6ec>
    a3bc:	ldr	r3, [sp, #32]
    a3c0:	cmp	r3, #17
    a3c4:	beq	a440 <sf_gen_scode+0x534>
    a3c8:	cmp	r3, #132	; 0x84
    a3cc:	movne	r3, #6
    a3d0:	strne	r3, [sp, #32]
    a3d4:	bne	a61c <sf_gen_scode+0x710>
    a3d8:	mov	r1, r8
    a3dc:	ldr	r0, [pc, #800]	; a704 <sf_gen_scode+0x7f8>
    a3e0:	add	r0, pc, r0
    a3e4:	bl	22b4 <sf_bpf_error>
    a3e8:	ldr	r0, [pc, #792]	; a708 <sf_gen_scode+0x7fc>
    a3ec:	add	r0, pc, r0
    a3f0:	bl	22b4 <sf_bpf_error>
    a3f4:	mov	r1, r8
    a3f8:	ldr	r0, [pc, #780]	; a70c <sf_gen_scode+0x800>
    a3fc:	add	r0, pc, r0
    a400:	bl	22b4 <sf_bpf_error>
    a404:	ldr	r3, [sp, #32]
    a408:	cmp	r3, #6
    a40c:	beq	a430 <sf_gen_scode+0x524>
    a410:	cmp	r3, #132	; 0x84
    a414:	movne	r3, #17
    a418:	strne	r3, [sp, #32]
    a41c:	bne	a61c <sf_gen_scode+0x710>
    a420:	mov	r1, r8
    a424:	ldr	r0, [pc, #740]	; a710 <sf_gen_scode+0x804>
    a428:	add	r0, pc, r0
    a42c:	bl	22b4 <sf_bpf_error>
    a430:	mov	r1, r8
    a434:	ldr	r0, [pc, #728]	; a714 <sf_gen_scode+0x808>
    a438:	add	r0, pc, r0
    a43c:	bl	22b4 <sf_bpf_error>
    a440:	mov	r1, r8
    a444:	ldr	r0, [pc, #716]	; a718 <sf_gen_scode+0x80c>
    a448:	add	r0, pc, r0
    a44c:	bl	22b4 <sf_bpf_error>
    a450:	mov	r1, r8
    a454:	ldr	r0, [pc, #704]	; a71c <sf_gen_scode+0x810>
    a458:	add	r0, pc, r0
    a45c:	bl	22b4 <sf_bpf_error>
    a460:	mov	r1, r8
    a464:	ldr	r0, [pc, #692]	; a720 <sf_gen_scode+0x814>
    a468:	add	r0, pc, r0
    a46c:	bl	22b4 <sf_bpf_error>
    a470:	cmp	r4, #0
    a474:	beq	a64c <sf_gen_scode+0x740>
    a478:	sub	r3, r4, #5
    a47c:	uxtb	r3, r3
    a480:	cmp	r3, #2
    a484:	bhi	a4dc <sf_gen_scode+0x5d0>
    a488:	add	r3, sp, #32
    a48c:	add	r2, sp, #24
    a490:	add	r1, sp, #28
    a494:	bl	bd60 <pcap_nametoportrange>
    a498:	cmp	r0, #0
    a49c:	beq	a4e8 <sf_gen_scode+0x5dc>
    a4a0:	cmp	r4, #7
    a4a4:	beq	a4f8 <sf_gen_scode+0x5ec>
    a4a8:	cmp	r4, #6
    a4ac:	bne	a664 <sf_gen_scode+0x758>
    a4b0:	ldr	r3, [sp, #32]
    a4b4:	cmp	r3, #17
    a4b8:	beq	a534 <sf_gen_scode+0x628>
    a4bc:	cmp	r3, #132	; 0x84
    a4c0:	movne	r3, #6
    a4c4:	strne	r3, [sp, #32]
    a4c8:	bne	a688 <sf_gen_scode+0x77c>
    a4cc:	mov	r1, r8
    a4d0:	ldr	r0, [pc, #588]	; a724 <sf_gen_scode+0x818>
    a4d4:	add	r0, pc, r0
    a4d8:	bl	22b4 <sf_bpf_error>
    a4dc:	ldr	r0, [pc, #580]	; a728 <sf_gen_scode+0x81c>
    a4e0:	add	r0, pc, r0
    a4e4:	bl	22b4 <sf_bpf_error>
    a4e8:	mov	r1, r8
    a4ec:	ldr	r0, [pc, #568]	; a72c <sf_gen_scode+0x820>
    a4f0:	add	r0, pc, r0
    a4f4:	bl	22b4 <sf_bpf_error>
    a4f8:	ldr	r3, [sp, #32]
    a4fc:	cmp	r3, #6
    a500:	beq	a524 <sf_gen_scode+0x618>
    a504:	cmp	r3, #132	; 0x84
    a508:	movne	r3, #17
    a50c:	strne	r3, [sp, #32]
    a510:	bne	a688 <sf_gen_scode+0x77c>
    a514:	mov	r1, r8
    a518:	ldr	r0, [pc, #528]	; a730 <sf_gen_scode+0x824>
    a51c:	add	r0, pc, r0
    a520:	bl	22b4 <sf_bpf_error>
    a524:	mov	r1, r8
    a528:	ldr	r0, [pc, #516]	; a734 <sf_gen_scode+0x828>
    a52c:	add	r0, pc, r0
    a530:	bl	22b4 <sf_bpf_error>
    a534:	mov	r1, r8
    a538:	ldr	r0, [pc, #504]	; a738 <sf_gen_scode+0x82c>
    a53c:	add	r0, pc, r0
    a540:	bl	22b4 <sf_bpf_error>
    a544:	mov	r1, r8
    a548:	ldr	r0, [pc, #492]	; a73c <sf_gen_scode+0x830>
    a54c:	add	r0, pc, r0
    a550:	bl	22b4 <sf_bpf_error>
    a554:	mov	r1, r8
    a558:	ldr	r0, [pc, #480]	; a740 <sf_gen_scode+0x834>
    a55c:	add	r0, pc, r0
    a560:	bl	22b4 <sf_bpf_error>
    a564:	ldr	r0, [pc, #472]	; a744 <sf_gen_scode+0x838>
    a568:	add	r0, pc, r0
    a56c:	bl	22b4 <sf_bpf_error>
    a570:	mov	r1, r4
    a574:	bl	2768 <lookup_proto>
    a578:	str	r0, [sp, #32]
    a57c:	cmp	r0, #0
    a580:	blt	a598 <sf_gen_scode+0x68c>
    a584:	mov	r2, r5
    a588:	mov	r1, r4
    a58c:	bl	75c8 <gen_proto>
    a590:	mov	r7, r0
    a594:	b	a03c <sf_gen_scode+0x130>
    a598:	mov	r1, r8
    a59c:	ldr	r0, [pc, #420]	; a748 <sf_gen_scode+0x83c>
    a5a0:	add	r0, pc, r0
    a5a4:	bl	22b4 <sf_bpf_error>
    a5a8:	mov	r1, r4
    a5ac:	bl	2768 <lookup_proto>
    a5b0:	str	r0, [sp, #32]
    a5b4:	cmp	r0, #0
    a5b8:	blt	a5d0 <sf_gen_scode+0x6c4>
    a5bc:	mov	r2, r5
    a5c0:	mov	r1, r4
    a5c4:	bl	97d4 <gen_protochain>
    a5c8:	mov	r7, r0
    a5cc:	b	a03c <sf_gen_scode+0x130>
    a5d0:	mov	r1, r8
    a5d4:	ldr	r0, [pc, #368]	; a74c <sf_gen_scode+0x840>
    a5d8:	add	r0, pc, r0
    a5dc:	bl	22b4 <sf_bpf_error>
    a5e0:	bl	f18 <abort@plt>
    a5e4:	add	r2, sp, #32
    a5e8:	add	r1, sp, #36	; 0x24
    a5ec:	bl	bc80 <pcap_nametoport>
    a5f0:	cmp	r0, #0
    a5f4:	beq	a3f4 <sf_gen_scode+0x4e8>
    a5f8:	cmp	r4, #5
    a5fc:	bne	a61c <sf_gen_scode+0x710>
    a600:	ldr	r3, [sp, #32]
    a604:	cmp	r3, #17
    a608:	beq	a450 <sf_gen_scode+0x544>
    a60c:	cmp	r3, #6
    a610:	movne	r3, #132	; 0x84
    a614:	strne	r3, [sp, #32]
    a618:	beq	a460 <sf_gen_scode+0x554>
    a61c:	mov	r2, r5
    a620:	ldr	r1, [sp, #32]
    a624:	ldr	r0, [sp, #36]	; 0x24
    a628:	bl	94b4 <gen_port>
    a62c:	mov	r7, r0
    a630:	mov	r2, r5
    a634:	ldr	r1, [sp, #32]
    a638:	ldr	r0, [sp, #36]	; 0x24
    a63c:	bl	9570 <gen_port6>
    a640:	mov	r1, r7
    a644:	bl	3a20 <sf_gen_or>
    a648:	b	a03c <sf_gen_scode+0x130>
    a64c:	add	r3, sp, #32
    a650:	add	r2, sp, #24
    a654:	add	r1, sp, #28
    a658:	bl	bd60 <pcap_nametoportrange>
    a65c:	cmp	r0, #0
    a660:	beq	a4e8 <sf_gen_scode+0x5dc>
    a664:	cmp	r4, #5
    a668:	bne	a688 <sf_gen_scode+0x77c>
    a66c:	ldr	r3, [sp, #32]
    a670:	cmp	r3, #17
    a674:	beq	a544 <sf_gen_scode+0x638>
    a678:	cmp	r3, #6
    a67c:	movne	r3, #132	; 0x84
    a680:	strne	r3, [sp, #32]
    a684:	beq	a554 <sf_gen_scode+0x648>
    a688:	mov	r3, r5
    a68c:	ldr	r2, [sp, #32]
    a690:	ldr	r1, [sp, #24]
    a694:	ldr	r0, [sp, #28]
    a698:	bl	9630 <gen_portrange>
    a69c:	mov	r7, r0
    a6a0:	mov	r3, r5
    a6a4:	ldr	r2, [sp, #32]
    a6a8:	ldr	r1, [sp, #24]
    a6ac:	ldr	r0, [sp, #28]
    a6b0:	bl	9700 <gen_portrange6>
    a6b4:	mov	r1, r7
    a6b8:	bl	3a20 <sf_gen_or>
    a6bc:	b	a03c <sf_gen_scode+0x130>
    a6c0:	.word	0x00009460
    a6c4:	.word	0x000273bc
    a6c8:	.word	0x0000a2a4
    a6cc:	.word	0x0002730c
    a6d0:	.word	0x0000a2b0
    a6d4:	.word	0x00027258
    a6d8:	.word	0x0000a148
    a6dc:	.word	0x0000a150
    a6e0:	.word	0x0000a130
    a6e4:	.word	0x0000a140
    a6e8:	.word	0x0000a124
    a6ec:	.word	0x0000a0a8
    a6f0:	.word	0x0000a160
    a6f4:	.word	0x0002702c
    a6f8:	.word	0x00009f74
    a6fc:	.word	0x0000a09c
    a700:	.word	0x00008e3c
    a704:	.word	0x0000a080
    a708:	.word	0x0000a030
    a70c:	.word	0x0000a03c
    a710:	.word	0x0000a038
    a714:	.word	0x0000a014
    a718:	.word	0x0000a02c
    a71c:	.word	0x0000a01c
    a720:	.word	0x00009fe4
    a724:	.word	0x0000a010
    a728:	.word	0x00009fa8
    a72c:	.word	0x00009fbc
    a730:	.word	0x00009fc8
    a734:	.word	0x00009f9c
    a738:	.word	0x00009fc4
    a73c:	.word	0x00009fb4
    a740:	.word	0x00009f6c
    a744:	.word	0x00009fb4
    a748:	.word	0x00009fac
    a74c:	.word	0x00009f74

0000a750 <sf_gen_ncode>:
    a750:	push	{r4, r5, r6, r7, r8, lr}
    a754:	sub	sp, sp, #16
    a758:	str	r1, [sp, #12]
    a75c:	lsr	r4, r2, #8
    a760:	lsr	r3, r2, #16
    a764:	str	r2, [sp, #8]
    a768:	uxtb	r5, r2
    a76c:	uxtb	r4, r4
    a770:	mov	r8, r4
    a774:	uxtb	r6, r3
    a778:	subs	r7, r0, #0
    a77c:	beq	a82c <sf_gen_ncode+0xdc>
    a780:	cmp	r4, #12
    a784:	beq	a7c8 <sf_gen_ncode+0x78>
    a788:	add	r1, sp, #12
    a78c:	mov	r0, r7
    a790:	bl	bf50 <__pcap_atoin>
    a794:	cmp	r5, #4
    a798:	beq	a9dc <sf_gen_ncode+0x28c>
    a79c:	bls	a834 <sf_gen_ncode+0xe4>
    a7a0:	cmp	r5, #6
    a7a4:	beq	aa00 <sf_gen_ncode+0x2b0>
    a7a8:	bcc	a9e8 <sf_gen_ncode+0x298>
    a7ac:	cmp	r5, #7
    a7b0:	beq	a964 <sf_gen_ncode+0x214>
    a7b4:	cmp	r5, #255	; 0xff
    a7b8:	bne	a7fc <sf_gen_ncode+0xac>
    a7bc:	ldr	r0, [pc, #596]	; aa18 <sf_gen_ncode+0x2c8>
    a7c0:	add	r0, pc, r0
    a7c4:	bl	22b4 <sf_bpf_error>
    a7c8:	add	r1, sp, #12
    a7cc:	mov	r0, r7
    a7d0:	bl	bfc4 <__pcap_atodn>
    a7d4:	cmp	r5, #4
    a7d8:	beq	a9dc <sf_gen_ncode+0x28c>
    a7dc:	bls	a800 <sf_gen_ncode+0xb0>
    a7e0:	cmp	r5, #6
    a7e4:	beq	aa00 <sf_gen_ncode+0x2b0>
    a7e8:	bcc	a9e8 <sf_gen_ncode+0x298>
    a7ec:	cmp	r5, #7
    a7f0:	beq	a964 <sf_gen_ncode+0x214>
    a7f4:	cmp	r5, #255	; 0xff
    a7f8:	beq	a7bc <sf_gen_ncode+0x6c>
    a7fc:	bl	f18 <abort@plt>
    a800:	cmp	r5, #2
    a804:	bhi	a83c <sf_gen_ncode+0xec>
    a808:	mov	r3, r5
    a80c:	str	r3, [sp]
    a810:	mov	r3, r6
    a814:	mov	r2, #12
    a818:	mov	r1, #0
    a81c:	ldr	r0, [sp, #12]
    a820:	bl	891c <gen_host>
    a824:	mov	r4, r0
    a828:	b	a88c <sf_gen_ncode+0x13c>
    a82c:	mov	r0, #32
    a830:	b	a794 <sf_gen_ncode+0x44>
    a834:	cmp	r5, #2
    a838:	bls	a898 <sf_gen_ncode+0x148>
    a83c:	cmp	r4, #7
    a840:	beq	a954 <sf_gen_ncode+0x204>
    a844:	cmp	r4, #6
    a848:	beq	a860 <sf_gen_ncode+0x110>
    a84c:	cmp	r4, #5
    a850:	beq	a95c <sf_gen_ncode+0x20c>
    a854:	cmp	r4, #0
    a858:	mvneq	r8, #0
    a85c:	bne	a948 <sf_gen_ncode+0x1f8>
    a860:	mov	r2, r6
    a864:	mov	r1, r8
    a868:	ldr	r0, [sp, #12]
    a86c:	bl	94b4 <gen_port>
    a870:	mov	r4, r0
    a874:	mov	r2, r6
    a878:	mov	r1, r8
    a87c:	ldr	r0, [sp, #12]
    a880:	bl	9570 <gen_port6>
    a884:	mov	r1, r4
    a888:	bl	3a20 <sf_gen_or>
    a88c:	mov	r0, r4
    a890:	add	sp, sp, #16
    a894:	pop	{r4, r5, r6, r7, r8, pc}
    a898:	mov	r3, r5
    a89c:	cmp	r4, #12
    a8a0:	beq	a80c <sf_gen_ncode+0xbc>
    a8a4:	cmp	r4, #1
    a8a8:	beq	a8ec <sf_gen_ncode+0x19c>
    a8ac:	cmp	r5, #2
    a8b0:	cmpeq	r7, #0
    a8b4:	beq	a8f8 <sf_gen_ncode+0x1a8>
    a8b8:	rsb	r0, r0, #32
    a8bc:	ldr	r3, [sp, #12]
    a8c0:	lsl	r3, r3, r0
    a8c4:	str	r3, [sp, #12]
    a8c8:	mvn	r1, #0
    a8cc:	lsl	r1, r1, r0
    a8d0:	str	r5, [sp]
    a8d4:	mov	r3, r6
    a8d8:	mov	r2, r4
    a8dc:	ldr	r0, [sp, #12]
    a8e0:	bl	891c <gen_host>
    a8e4:	mov	r4, r0
    a8e8:	b	a88c <sf_gen_ncode+0x13c>
    a8ec:	ldr	r0, [pc, #296]	; aa1c <sf_gen_ncode+0x2cc>
    a8f0:	add	r0, pc, r0
    a8f4:	bl	22b4 <sf_bpf_error>
    a8f8:	ldr	r3, [sp, #12]
    a8fc:	cmp	r3, #0
    a900:	beq	a938 <sf_gen_ncode+0x1e8>
    a904:	tst	r3, #-16777216	; 0xff000000
    a908:	bne	a940 <sf_gen_ncode+0x1f0>
    a90c:	mvn	r1, #0
    a910:	lsl	r1, r1, #8
    a914:	lsls	r3, r3, #8
    a918:	beq	a92c <sf_gen_ncode+0x1dc>
    a91c:	tst	r3, #-16777216	; 0xff000000
    a920:	beq	a910 <sf_gen_ncode+0x1c0>
    a924:	str	r3, [sp, #12]
    a928:	b	a8d0 <sf_gen_ncode+0x180>
    a92c:	mov	r3, #0
    a930:	str	r3, [sp, #12]
    a934:	b	a8d0 <sf_gen_ncode+0x180>
    a938:	mvn	r1, #0
    a93c:	b	a8d0 <sf_gen_ncode+0x180>
    a940:	mvn	r1, #0
    a944:	b	a8d0 <sf_gen_ncode+0x180>
    a948:	ldr	r0, [pc, #208]	; aa20 <sf_gen_ncode+0x2d0>
    a94c:	add	r0, pc, r0
    a950:	bl	22b4 <sf_bpf_error>
    a954:	mov	r8, #17
    a958:	b	a860 <sf_gen_ncode+0x110>
    a95c:	mov	r8, #132	; 0x84
    a960:	b	a860 <sf_gen_ncode+0x110>
    a964:	cmp	r4, #7
    a968:	beq	a9cc <sf_gen_ncode+0x27c>
    a96c:	cmp	r4, #6
    a970:	beq	a988 <sf_gen_ncode+0x238>
    a974:	cmp	r4, #5
    a978:	beq	a9d4 <sf_gen_ncode+0x284>
    a97c:	cmp	r4, #0
    a980:	mvneq	r8, #0
    a984:	bne	a9c0 <sf_gen_ncode+0x270>
    a988:	mov	r3, r6
    a98c:	mov	r2, r8
    a990:	ldr	r1, [sp, #12]
    a994:	mov	r0, r1
    a998:	bl	9630 <gen_portrange>
    a99c:	mov	r4, r0
    a9a0:	mov	r3, r6
    a9a4:	mov	r2, r8
    a9a8:	ldr	r1, [sp, #12]
    a9ac:	mov	r0, r1
    a9b0:	bl	9700 <gen_portrange6>
    a9b4:	mov	r1, r4
    a9b8:	bl	3a20 <sf_gen_or>
    a9bc:	b	a88c <sf_gen_ncode+0x13c>
    a9c0:	ldr	r0, [pc, #92]	; aa24 <sf_gen_ncode+0x2d4>
    a9c4:	add	r0, pc, r0
    a9c8:	bl	22b4 <sf_bpf_error>
    a9cc:	mov	r8, #17
    a9d0:	b	a988 <sf_gen_ncode+0x238>
    a9d4:	mov	r8, #132	; 0x84
    a9d8:	b	a988 <sf_gen_ncode+0x238>
    a9dc:	ldr	r0, [pc, #68]	; aa28 <sf_gen_ncode+0x2d8>
    a9e0:	add	r0, pc, r0
    a9e4:	bl	22b4 <sf_bpf_error>
    a9e8:	mov	r2, r6
    a9ec:	mov	r1, r4
    a9f0:	ldr	r0, [sp, #12]
    a9f4:	bl	75c8 <gen_proto>
    a9f8:	mov	r4, r0
    a9fc:	b	a88c <sf_gen_ncode+0x13c>
    aa00:	mov	r2, r6
    aa04:	mov	r1, r4
    aa08:	ldr	r0, [sp, #12]
    aa0c:	bl	97d4 <gen_protochain>
    aa10:	mov	r4, r0
    aa14:	b	a88c <sf_gen_ncode+0x13c>
    aa18:	.word	0x00008bfc
    aa1c:	.word	0x00009c74
    aa20:	.word	0x00009ad0
    aa24:	.word	0x00009ac4
    aa28:	.word	0x00009ba0

0000aa2c <sf_gen_broadcast>:
    aa2c:	push	{r4, r5, r6, lr}
    aa30:	sub	sp, sp, #8
    aa34:	cmp	r0, #0
    aa38:	blt	ac68 <sf_gen_broadcast+0x23c>
    aa3c:	cmp	r0, #1
    aa40:	ble	aacc <sf_gen_broadcast+0xa0>
    aa44:	cmp	r0, #2
    aa48:	bne	ac68 <sf_gen_broadcast+0x23c>
    aa4c:	ldr	r3, [pc, #544]	; ac74 <sf_gen_broadcast+0x248>
    aa50:	add	r3, pc, r3
    aa54:	ldr	r4, [r3, #876]	; 0x36c
    aa58:	cmn	r4, #1
    aa5c:	beq	ac5c <sf_gen_broadcast+0x230>
    aa60:	mov	r0, #2048	; 0x800
    aa64:	bl	6730 <gen_linktype>
    aa68:	mov	r5, r0
    aa6c:	mvn	r4, r4
    aa70:	str	r4, [sp]
    aa74:	mov	r3, #0
    aa78:	mov	r2, r3
    aa7c:	mov	r1, #16
    aa80:	mov	r0, #3
    aa84:	bl	52f0 <gen_mcmp>
    aa88:	mov	r6, r0
    aa8c:	str	r4, [sp]
    aa90:	mov	r3, r4
    aa94:	mov	r2, #0
    aa98:	mov	r1, #16
    aa9c:	mov	r0, #3
    aaa0:	bl	52f0 <gen_mcmp>
    aaa4:	mov	r4, r0
    aaa8:	mov	r1, r0
    aaac:	mov	r0, r6
    aab0:	bl	3a20 <sf_gen_or>
    aab4:	mov	r1, r4
    aab8:	mov	r0, r5
    aabc:	bl	399c <sf_gen_and>
    aac0:	mov	r0, r4
    aac4:	add	sp, sp, #8
    aac8:	pop	{r4, r5, r6, pc}
    aacc:	ldr	r3, [pc, #420]	; ac78 <sf_gen_broadcast+0x24c>
    aad0:	add	r3, pc, r3
    aad4:	ldr	r3, [r3, #852]	; 0x354
    aad8:	cmp	r3, #119	; 0x77
    aadc:	beq	ac24 <sf_gen_broadcast+0x1f8>
    aae0:	bgt	ab54 <sf_gen_broadcast+0x128>
    aae4:	cmp	r3, #7
    aae8:	beq	abec <sf_gen_broadcast+0x1c0>
    aaec:	bgt	ab1c <sf_gen_broadcast+0xf0>
    aaf0:	cmp	r3, #1
    aaf4:	beq	ac08 <sf_gen_broadcast+0x1dc>
    aaf8:	cmp	r3, #6
    aafc:	bne	ab48 <sf_gen_broadcast+0x11c>
    ab00:	mov	r1, #2
    ab04:	ldr	r0, [pc, #368]	; ac7c <sf_gen_broadcast+0x250>
    ab08:	add	r0, pc, r0
    ab0c:	add	r0, r0, #8
    ab10:	bl	4a70 <gen_thostop>
    ab14:	mov	r4, r0
    ab18:	b	aac0 <sf_gen_broadcast+0x94>
    ab1c:	cmp	r3, #10
    ab20:	bne	ab40 <sf_gen_broadcast+0x114>
    ab24:	mov	r1, #2
    ab28:	ldr	r0, [pc, #336]	; ac80 <sf_gen_broadcast+0x254>
    ab2c:	add	r0, pc, r0
    ab30:	add	r0, r0, #8
    ab34:	bl	49b0 <gen_fhostop>
    ab38:	mov	r4, r0
    ab3c:	b	aac0 <sf_gen_broadcast+0x94>
    ab40:	cmp	r3, #105	; 0x69
    ab44:	beq	ac24 <sf_gen_broadcast+0x1f8>
    ab48:	ldr	r0, [pc, #308]	; ac84 <sf_gen_broadcast+0x258>
    ab4c:	add	r0, pc, r0
    ab50:	bl	22b4 <sf_bpf_error>
    ab54:	cmp	r3, #127	; 0x7f
    ab58:	beq	ac24 <sf_gen_broadcast+0x1f8>
    ab5c:	bgt	abd4 <sf_gen_broadcast+0x1a8>
    ab60:	cmp	r3, #122	; 0x7a
    ab64:	beq	ac40 <sf_gen_broadcast+0x214>
    ab68:	cmp	r3, #123	; 0x7b
    ab6c:	bne	ab48 <sf_gen_broadcast+0x11c>
    ab70:	ldr	r3, [pc, #272]	; ac88 <sf_gen_broadcast+0x25c>
    ab74:	add	r3, pc, r3
    ab78:	ldr	r3, [r3, #892]	; 0x37c
    ab7c:	cmp	r3, #0
    ab80:	beq	ac68 <sf_gen_broadcast+0x23c>
    ab84:	mov	r3, #65280	; 0xff00
    ab88:	mov	r2, #8
    ab8c:	mov	r1, #4
    ab90:	mov	r0, #1
    ab94:	bl	47d8 <gen_cmp>
    ab98:	mov	r5, r0
    ab9c:	ldr	r3, [r0, #44]	; 0x2c
    aba0:	clz	r3, r3
    aba4:	lsr	r3, r3, #5
    aba8:	str	r3, [r0, #44]	; 0x2c
    abac:	mov	r1, #2
    abb0:	ldr	r0, [pc, #212]	; ac8c <sf_gen_broadcast+0x260>
    abb4:	add	r0, pc, r0
    abb8:	add	r0, r0, #8
    abbc:	bl	4bf0 <gen_ehostop>
    abc0:	mov	r4, r0
    abc4:	mov	r1, r0
    abc8:	mov	r0, r5
    abcc:	bl	399c <sf_gen_and>
    abd0:	b	aac0 <sf_gen_broadcast+0x94>
    abd4:	cmp	r3, #163	; 0xa3
    abd8:	beq	ac24 <sf_gen_broadcast+0x1f8>
    abdc:	cmp	r3, #192	; 0xc0
    abe0:	beq	ac24 <sf_gen_broadcast+0x1f8>
    abe4:	cmp	r3, #129	; 0x81
    abe8:	bne	ab48 <sf_gen_broadcast+0x11c>
    abec:	mov	r1, #2
    abf0:	ldr	r0, [pc, #152]	; ac90 <sf_gen_broadcast+0x264>
    abf4:	add	r0, pc, r0
    abf8:	add	r0, r0, #956	; 0x3bc
    abfc:	bl	4ccc <gen_ahostop>
    ac00:	mov	r4, r0
    ac04:	b	aac0 <sf_gen_broadcast+0x94>
    ac08:	mov	r1, #2
    ac0c:	ldr	r0, [pc, #128]	; ac94 <sf_gen_broadcast+0x268>
    ac10:	add	r0, pc, r0
    ac14:	add	r0, r0, #8
    ac18:	bl	4bf0 <gen_ehostop>
    ac1c:	mov	r4, r0
    ac20:	b	aac0 <sf_gen_broadcast+0x94>
    ac24:	mov	r1, #2
    ac28:	ldr	r0, [pc, #104]	; ac98 <sf_gen_broadcast+0x26c>
    ac2c:	add	r0, pc, r0
    ac30:	add	r0, r0, #8
    ac34:	bl	531c <gen_wlanhostop>
    ac38:	mov	r4, r0
    ac3c:	b	aac0 <sf_gen_broadcast+0x94>
    ac40:	mov	r1, #2
    ac44:	ldr	r0, [pc, #80]	; ac9c <sf_gen_broadcast+0x270>
    ac48:	add	r0, pc, r0
    ac4c:	add	r0, r0, #8
    ac50:	bl	4b30 <gen_ipfchostop>
    ac54:	mov	r4, r0
    ac58:	b	aac0 <sf_gen_broadcast+0x94>
    ac5c:	ldr	r0, [pc, #60]	; aca0 <sf_gen_broadcast+0x274>
    ac60:	add	r0, pc, r0
    ac64:	bl	22b4 <sf_bpf_error>
    ac68:	ldr	r0, [pc, #52]	; aca4 <sf_gen_broadcast+0x278>
    ac6c:	add	r0, pc, r0
    ac70:	bl	22b4 <sf_bpf_error>
    ac74:	.word	0x00026918
    ac78:	.word	0x00026898
    ac7c:	.word	0x00026770
    ac80:	.word	0x0002674c
    ac84:	.word	0x00009a50
    ac88:	.word	0x000267f4
    ac8c:	.word	0x000266c4
    ac90:	.word	0x00026774
    ac94:	.word	0x00026668
    ac98:	.word	0x0002664c
    ac9c:	.word	0x00026630
    aca0:	.word	0x00009954
    aca4:	.word	0x0000997c

0000aca8 <sf_gen_multicast>:
    aca8:	push	{r4, r5, r6, r7, r8, lr}
    acac:	sub	sp, sp, #16
    acb0:	cmp	r0, #17
    acb4:	addls	pc, pc, r0, lsl #2
    acb8:	b	ad68 <sf_gen_multicast+0xc0>
    acbc:	b	ad04 <sf_gen_multicast+0x5c>
    acc0:	b	ad04 <sf_gen_multicast+0x5c>
    acc4:	b	afd4 <sf_gen_multicast+0x32c>
    acc8:	b	ad68 <sf_gen_multicast+0xc0>
    accc:	b	ad68 <sf_gen_multicast+0xc0>
    acd0:	b	ad68 <sf_gen_multicast+0xc0>
    acd4:	b	ad68 <sf_gen_multicast+0xc0>
    acd8:	b	ad68 <sf_gen_multicast+0xc0>
    acdc:	b	ad68 <sf_gen_multicast+0xc0>
    ace0:	b	ad68 <sf_gen_multicast+0xc0>
    ace4:	b	ad68 <sf_gen_multicast+0xc0>
    ace8:	b	ad68 <sf_gen_multicast+0xc0>
    acec:	b	ad68 <sf_gen_multicast+0xc0>
    acf0:	b	ad68 <sf_gen_multicast+0xc0>
    acf4:	b	ad68 <sf_gen_multicast+0xc0>
    acf8:	b	ad68 <sf_gen_multicast+0xc0>
    acfc:	b	ad68 <sf_gen_multicast+0xc0>
    ad00:	b	b028 <sf_gen_multicast+0x380>
    ad04:	ldr	r3, [pc, #848]	; b05c <sf_gen_multicast+0x3b4>
    ad08:	add	r3, pc, r3
    ad0c:	ldr	r3, [r3, #852]	; 0x354
    ad10:	cmp	r3, #119	; 0x77
    ad14:	beq	ae34 <sf_gen_multicast+0x18c>
    ad18:	bgt	ad74 <sf_gen_multicast+0xcc>
    ad1c:	cmp	r3, #7
    ad20:	beq	ae08 <sf_gen_multicast+0x160>
    ad24:	bgt	ad48 <sf_gen_multicast+0xa0>
    ad28:	cmp	r3, #1
    ad2c:	beq	ae24 <sf_gen_multicast+0x17c>
    ad30:	cmp	r3, #6
    ad34:	bne	ad68 <sf_gen_multicast+0xc0>
    ad38:	mov	r0, #2
    ad3c:	bl	442c <gen_mac_multicast>
    ad40:	mov	r4, r0
    ad44:	b	b01c <sf_gen_multicast+0x374>
    ad48:	cmp	r3, #10
    ad4c:	bne	ad60 <sf_gen_multicast+0xb8>
    ad50:	mov	r0, #1
    ad54:	bl	442c <gen_mac_multicast>
    ad58:	mov	r4, r0
    ad5c:	b	b01c <sf_gen_multicast+0x374>
    ad60:	cmp	r3, #105	; 0x69
    ad64:	beq	ae34 <sf_gen_multicast+0x18c>
    ad68:	ldr	r0, [pc, #752]	; b060 <sf_gen_multicast+0x3b8>
    ad6c:	add	r0, pc, r0
    ad70:	bl	22b4 <sf_bpf_error>
    ad74:	cmp	r3, #127	; 0x7f
    ad78:	beq	ae34 <sf_gen_multicast+0x18c>
    ad7c:	bgt	adf0 <sf_gen_multicast+0x148>
    ad80:	cmp	r3, #122	; 0x7a
    ad84:	beq	afc4 <sf_gen_multicast+0x31c>
    ad88:	cmp	r3, #123	; 0x7b
    ad8c:	bne	ad68 <sf_gen_multicast+0xc0>
    ad90:	ldr	r3, [pc, #716]	; b064 <sf_gen_multicast+0x3bc>
    ad94:	add	r3, pc, r3
    ad98:	ldr	r3, [r3, #892]	; 0x37c
    ad9c:	cmp	r3, #0
    ada0:	beq	ad68 <sf_gen_multicast+0xc0>
    ada4:	mov	r3, #65280	; 0xff00
    ada8:	mov	r2, #8
    adac:	mov	r1, #4
    adb0:	mov	r0, #1
    adb4:	bl	47d8 <gen_cmp>
    adb8:	mov	r5, r0
    adbc:	ldr	r3, [r0, #44]	; 0x2c
    adc0:	clz	r3, r3
    adc4:	lsr	r3, r3, #5
    adc8:	str	r3, [r0, #44]	; 0x2c
    adcc:	ldr	r3, [pc, #660]	; b068 <sf_gen_multicast+0x3c0>
    add0:	add	r3, pc, r3
    add4:	ldr	r0, [r3, #884]	; 0x374
    add8:	bl	442c <gen_mac_multicast>
    addc:	mov	r4, r0
    ade0:	mov	r1, r0
    ade4:	mov	r0, r5
    ade8:	bl	399c <sf_gen_and>
    adec:	b	b01c <sf_gen_multicast+0x374>
    adf0:	cmp	r3, #163	; 0xa3
    adf4:	beq	ae34 <sf_gen_multicast+0x18c>
    adf8:	cmp	r3, #192	; 0xc0
    adfc:	beq	ae34 <sf_gen_multicast+0x18c>
    ae00:	cmp	r3, #129	; 0x81
    ae04:	bne	ad68 <sf_gen_multicast+0xc0>
    ae08:	mov	r1, #2
    ae0c:	ldr	r0, [pc, #600]	; b06c <sf_gen_multicast+0x3c4>
    ae10:	add	r0, pc, r0
    ae14:	add	r0, r0, #956	; 0x3bc
    ae18:	bl	4ccc <gen_ahostop>
    ae1c:	mov	r4, r0
    ae20:	b	b01c <sf_gen_multicast+0x374>
    ae24:	mov	r0, #0
    ae28:	bl	442c <gen_mac_multicast>
    ae2c:	mov	r4, r0
    ae30:	b	b01c <sf_gen_multicast+0x374>
    ae34:	mov	r1, #16
    ae38:	mov	r0, #1
    ae3c:	bl	43bc <gen_load_llrel>
    ae40:	mov	r4, r0
    ae44:	mov	r0, #208	; 0xd0
    ae48:	bl	22f0 <newchunk>
    ae4c:	mov	r5, r0
    ae50:	mov	r6, #69	; 0x45
    ae54:	str	r6, [r0, #8]
    ae58:	str	r0, [r5, #96]	; 0x60
    ae5c:	mov	r7, #1
    ae60:	str	r7, [r0, #20]
    ae64:	str	r4, [r0, #4]
    ae68:	mov	r0, #16
    ae6c:	bl	442c <gen_mac_multicast>
    ae70:	mov	r4, r0
    ae74:	mov	r1, r0
    ae78:	mov	r0, r5
    ae7c:	bl	399c <sf_gen_and>
    ae80:	mov	r1, #16
    ae84:	mov	r0, r7
    ae88:	bl	43bc <gen_load_llrel>
    ae8c:	mov	r8, r0
    ae90:	mov	r0, #208	; 0xd0
    ae94:	bl	22f0 <newchunk>
    ae98:	mov	r5, r0
    ae9c:	str	r6, [r0, #8]
    aea0:	str	r0, [r5, #96]	; 0x60
    aea4:	str	r7, [r0, #20]
    aea8:	str	r8, [r0, #4]
    aeac:	ldr	r3, [r0, #44]	; 0x2c
    aeb0:	clz	r3, r3
    aeb4:	lsr	r3, r3, #5
    aeb8:	str	r3, [r0, #44]	; 0x2c
    aebc:	mov	r0, #4
    aec0:	bl	442c <gen_mac_multicast>
    aec4:	mov	r7, r0
    aec8:	mov	r1, r0
    aecc:	mov	r0, r5
    aed0:	bl	399c <sf_gen_and>
    aed4:	mov	r1, r4
    aed8:	mov	r0, r7
    aedc:	bl	3a20 <sf_gen_or>
    aee0:	mov	r1, #16
    aee4:	mov	r0, #0
    aee8:	bl	43bc <gen_load_llrel>
    aeec:	mov	r5, r0
    aef0:	mov	r0, #208	; 0xd0
    aef4:	bl	22f0 <newchunk>
    aef8:	mov	r3, r0
    aefc:	str	r6, [r0, #8]
    af00:	str	r0, [r3, #96]	; 0x60
    af04:	mov	r7, #8
    af08:	str	r7, [r0, #20]
    af0c:	str	r5, [r0, #4]
    af10:	mov	r1, r4
    af14:	bl	399c <sf_gen_and>
    af18:	mov	r1, #16
    af1c:	mov	r0, #0
    af20:	bl	43bc <gen_load_llrel>
    af24:	mov	r8, r0
    af28:	mov	r0, #208	; 0xd0
    af2c:	bl	22f0 <newchunk>
    af30:	mov	r5, r0
    af34:	str	r6, [r0, #8]
    af38:	str	r0, [r5, #96]	; 0x60
    af3c:	str	r7, [r0, #20]
    af40:	str	r8, [r0, #4]
    af44:	ldr	r3, [r0, #44]	; 0x2c
    af48:	clz	r3, r3
    af4c:	lsr	r3, r3, #5
    af50:	str	r3, [r0, #44]	; 0x2c
    af54:	mov	r0, #4
    af58:	bl	442c <gen_mac_multicast>
    af5c:	mov	r7, r0
    af60:	mov	r1, r0
    af64:	mov	r0, r5
    af68:	bl	399c <sf_gen_and>
    af6c:	mov	r1, r4
    af70:	mov	r0, r7
    af74:	bl	3a20 <sf_gen_or>
    af78:	mov	r1, #16
    af7c:	mov	r0, #0
    af80:	bl	43bc <gen_load_llrel>
    af84:	mov	r5, r0
    af88:	mov	r0, #208	; 0xd0
    af8c:	bl	22f0 <newchunk>
    af90:	mov	r3, r0
    af94:	str	r6, [r0, #8]
    af98:	str	r0, [r3, #96]	; 0x60
    af9c:	mov	r2, #4
    afa0:	str	r2, [r0, #20]
    afa4:	str	r5, [r0, #4]
    afa8:	ldr	r2, [r0, #44]	; 0x2c
    afac:	clz	r2, r2
    afb0:	lsr	r2, r2, #5
    afb4:	str	r2, [r0, #44]	; 0x2c
    afb8:	mov	r1, r4
    afbc:	bl	399c <sf_gen_and>
    afc0:	b	b01c <sf_gen_multicast+0x374>
    afc4:	mov	r0, #2
    afc8:	bl	442c <gen_mac_multicast>
    afcc:	mov	r4, r0
    afd0:	b	b01c <sf_gen_multicast+0x374>
    afd4:	mov	r0, #2048	; 0x800
    afd8:	bl	6730 <gen_linktype>
    afdc:	mov	r5, r0
    afe0:	mov	r3, #224	; 0xe0
    afe4:	str	r3, [sp, #8]
    afe8:	mov	r3, #0
    afec:	str	r3, [sp, #4]
    aff0:	mov	r3, #48	; 0x30
    aff4:	str	r3, [sp]
    aff8:	mvn	r3, #0
    affc:	mov	r2, #16
    b000:	mov	r1, r2
    b004:	mov	r0, #3
    b008:	bl	4630 <gen_ncmp>
    b00c:	mov	r4, r0
    b010:	mov	r1, r0
    b014:	mov	r0, r5
    b018:	bl	399c <sf_gen_and>
    b01c:	mov	r0, r4
    b020:	add	sp, sp, #16
    b024:	pop	{r4, r5, r6, r7, r8, pc}
    b028:	ldr	r0, [pc, #64]	; b070 <sf_gen_multicast+0x3c8>
    b02c:	bl	6730 <gen_linktype>
    b030:	mov	r5, r0
    b034:	mov	r3, #255	; 0xff
    b038:	mov	r2, #16
    b03c:	mov	r1, #24
    b040:	mov	r0, #3
    b044:	bl	47d8 <gen_cmp>
    b048:	mov	r4, r0
    b04c:	mov	r1, r0
    b050:	mov	r0, r5
    b054:	bl	399c <sf_gen_and>
    b058:	b	b01c <sf_gen_multicast+0x374>
    b05c:	.word	0x00026660
    b060:	.word	0x000098ac
    b064:	.word	0x000265d4
    b068:	.word	0x00026598
    b06c:	.word	0x00026558
    b070:	.word	0x000086dd

0000b074 <sf_gen_mpls>:
    b074:	push	{r4, r5, r6, r7, lr}
    b078:	sub	sp, sp, #12
    b07c:	mov	r7, r0
    b080:	ldr	r3, [pc, #252]	; b184 <sf_gen_mpls+0x110>
    b084:	add	r3, pc, r3
    b088:	ldr	r4, [r3, #948]	; 0x3b4
    b08c:	ldr	r3, [pc, #244]	; b188 <sf_gen_mpls+0x114>
    b090:	add	r3, pc, r3
    b094:	str	r4, [r3]
    b098:	ldr	r5, [r3, #4]
    b09c:	cmp	r5, #0
    b0a0:	bne	b0d4 <sf_gen_mpls+0x60>
    b0a4:	ldr	r3, [pc, #224]	; b18c <sf_gen_mpls+0x118>
    b0a8:	add	r3, pc, r3
    b0ac:	ldr	r1, [r3, #852]	; 0x354
    b0b0:	cmp	r1, #9
    b0b4:	beq	b174 <sf_gen_mpls+0x100>
    b0b8:	cmp	r1, #104	; 0x68
    b0bc:	beq	b164 <sf_gen_mpls+0xf0>
    b0c0:	cmp	r1, #1
    b0c4:	beq	b164 <sf_gen_mpls+0xf0>
    b0c8:	ldr	r0, [pc, #192]	; b190 <sf_gen_mpls+0x11c>
    b0cc:	add	r0, pc, r0
    b0d0:	bl	22b4 <sf_bpf_error>
    b0d4:	mov	r3, #1
    b0d8:	str	r3, [sp]
    b0dc:	mov	r3, #0
    b0e0:	mov	r2, #16
    b0e4:	sub	r1, r4, #2
    b0e8:	mov	r0, #2
    b0ec:	bl	52f0 <gen_mcmp>
    b0f0:	mov	r6, r0
    b0f4:	cmp	r7, #0
    b0f8:	blt	b12c <sf_gen_mpls+0xb8>
    b0fc:	ldr	r3, [pc, #144]	; b194 <sf_gen_mpls+0x120>
    b100:	str	r3, [sp]
    b104:	lsl	r3, r7, #12
    b108:	mov	r2, #0
    b10c:	mov	r1, r4
    b110:	mov	r0, #2
    b114:	bl	52f0 <gen_mcmp>
    b118:	mov	r7, r0
    b11c:	mov	r1, r0
    b120:	mov	r0, r6
    b124:	bl	399c <sf_gen_and>
    b128:	mov	r6, r7
    b12c:	ldr	r3, [pc, #100]	; b198 <sf_gen_mpls+0x124>
    b130:	add	r3, pc, r3
    b134:	ldr	r2, [r3, #952]	; 0x3b8
    b138:	add	r2, r2, #4
    b13c:	str	r2, [r3, #952]	; 0x3b8
    b140:	add	r4, r4, #4
    b144:	str	r4, [r3, #948]	; 0x3b4
    b148:	add	r5, r5, #1
    b14c:	ldr	r3, [pc, #72]	; b19c <sf_gen_mpls+0x128>
    b150:	add	r3, pc, r3
    b154:	str	r5, [r3, #4]
    b158:	mov	r0, r6
    b15c:	add	sp, sp, #12
    b160:	pop	{r4, r5, r6, r7, pc}
    b164:	ldr	r0, [pc, #52]	; b1a0 <sf_gen_mpls+0x12c>
    b168:	bl	6730 <gen_linktype>
    b16c:	mov	r6, r0
    b170:	b	b0f4 <sf_gen_mpls+0x80>
    b174:	ldr	r0, [pc, #40]	; b1a4 <sf_gen_mpls+0x130>
    b178:	bl	6730 <gen_linktype>
    b17c:	mov	r6, r0
    b180:	b	b0f4 <sf_gen_mpls+0x80>
    b184:	.word	0x000262e4
    b188:	.word	0x000261e8
    b18c:	.word	0x000262c0
    b190:	.word	0x000095bc
    b194:	.word	0xfffff000
    b198:	.word	0x00026238
    b19c:	.word	0x00026128
    b1a0:	.word	0x00008847
    b1a4:	.word	0x00000281

0000b1a8 <sf_gen_pppoed>:
    b1a8:	push	{r4, lr}
    b1ac:	ldr	r0, [pc, #4]	; b1b8 <sf_gen_pppoed+0x10>
    b1b0:	bl	6730 <gen_linktype>
    b1b4:	pop	{r4, pc}
    b1b8:	.word	0x00008863

0000b1bc <sf_gen_pppoes>:
    b1bc:	push	{r4, lr}
    b1c0:	ldr	r0, [pc, #56]	; b200 <sf_gen_pppoes+0x44>
    b1c4:	bl	6730 <gen_linktype>
    b1c8:	ldr	r3, [pc, #52]	; b204 <sf_gen_pppoes+0x48>
    b1cc:	add	r3, pc, r3
    b1d0:	ldr	r2, [r3, #948]	; 0x3b4
    b1d4:	ldr	r1, [pc, #44]	; b208 <sf_gen_pppoes+0x4c>
    b1d8:	add	r1, pc, r1
    b1dc:	str	r2, [r1]
    b1e0:	mov	r1, #1
    b1e4:	str	r1, [r3, #912]	; 0x390
    b1e8:	add	r2, r2, #6
    b1ec:	str	r2, [r3, #944]	; 0x3b0
    b1f0:	mov	r2, #8
    b1f4:	str	r2, [r3, #948]	; 0x3b4
    b1f8:	str	r2, [r3, #952]	; 0x3b8
    b1fc:	pop	{r4, pc}
    b200:	.word	0x00008864
    b204:	.word	0x0002619c
    b208:	.word	0x000260a0

0000b20c <sf_gen_atmtype_abbrev>:
    b20c:	push	{r4, r5, r6, lr}
    b210:	sub	r0, r0, #22
    b214:	cmp	r0, #9
    b218:	addls	pc, pc, r0, lsl #2
    b21c:	b	b550 <sf_gen_atmtype_abbrev+0x344>
    b220:	b	b248 <sf_gen_atmtype_abbrev+0x3c>
    b224:	b	b2ac <sf_gen_atmtype_abbrev+0xa0>
    b228:	b	b30c <sf_gen_atmtype_abbrev+0x100>
    b22c:	b	b36c <sf_gen_atmtype_abbrev+0x160>
    b230:	b	b3cc <sf_gen_atmtype_abbrev+0x1c0>
    b234:	b	b42c <sf_gen_atmtype_abbrev+0x220>
    b238:	b	b550 <sf_gen_atmtype_abbrev+0x344>
    b23c:	b	b550 <sf_gen_atmtype_abbrev+0x344>
    b240:	b	b48c <sf_gen_atmtype_abbrev+0x280>
    b244:	b	b504 <sf_gen_atmtype_abbrev+0x2f8>
    b248:	ldr	r3, [pc, #772]	; b554 <sf_gen_atmtype_abbrev+0x348>
    b24c:	add	r3, pc, r3
    b250:	ldr	r3, [r3, #888]	; 0x378
    b254:	cmp	r3, #0
    b258:	beq	b2a0 <sf_gen_atmtype_abbrev+0x94>
    b25c:	mov	r3, #0
    b260:	mov	r2, #16
    b264:	mov	r1, r3
    b268:	mov	r0, #51	; 0x33
    b26c:	bl	6544 <sf_gen_atmfield_code>
    b270:	mov	r5, r0
    b274:	mov	r3, #0
    b278:	mov	r2, #16
    b27c:	mov	r1, #1
    b280:	mov	r0, #52	; 0x34
    b284:	bl	6544 <sf_gen_atmfield_code>
    b288:	mov	r4, r0
    b28c:	mov	r1, r0
    b290:	mov	r0, r5
    b294:	bl	399c <sf_gen_and>
    b298:	mov	r0, r4
    b29c:	pop	{r4, r5, r6, pc}
    b2a0:	ldr	r0, [pc, #688]	; b558 <sf_gen_atmtype_abbrev+0x34c>
    b2a4:	add	r0, pc, r0
    b2a8:	bl	22b4 <sf_bpf_error>
    b2ac:	ldr	r3, [pc, #680]	; b55c <sf_gen_atmtype_abbrev+0x350>
    b2b0:	add	r3, pc, r3
    b2b4:	ldr	r3, [r3, #888]	; 0x378
    b2b8:	cmp	r3, #0
    b2bc:	beq	b300 <sf_gen_atmtype_abbrev+0xf4>
    b2c0:	mov	r3, #0
    b2c4:	mov	r2, #16
    b2c8:	mov	r1, r3
    b2cc:	mov	r0, #51	; 0x33
    b2d0:	bl	6544 <sf_gen_atmfield_code>
    b2d4:	mov	r5, r0
    b2d8:	mov	r3, #0
    b2dc:	mov	r2, #16
    b2e0:	mov	r1, #2
    b2e4:	mov	r0, #52	; 0x34
    b2e8:	bl	6544 <sf_gen_atmfield_code>
    b2ec:	mov	r4, r0
    b2f0:	mov	r1, r0
    b2f4:	mov	r0, r5
    b2f8:	bl	399c <sf_gen_and>
    b2fc:	b	b298 <sf_gen_atmtype_abbrev+0x8c>
    b300:	ldr	r0, [pc, #600]	; b560 <sf_gen_atmtype_abbrev+0x354>
    b304:	add	r0, pc, r0
    b308:	bl	22b4 <sf_bpf_error>
    b30c:	ldr	r3, [pc, #592]	; b564 <sf_gen_atmtype_abbrev+0x358>
    b310:	add	r3, pc, r3
    b314:	ldr	r3, [r3, #888]	; 0x378
    b318:	cmp	r3, #0
    b31c:	beq	b360 <sf_gen_atmtype_abbrev+0x154>
    b320:	mov	r3, #0
    b324:	mov	r2, #16
    b328:	mov	r1, r3
    b32c:	mov	r0, #51	; 0x33
    b330:	bl	6544 <sf_gen_atmfield_code>
    b334:	mov	r5, r0
    b338:	mov	r3, #0
    b33c:	mov	r2, #16
    b340:	mov	r1, #3
    b344:	mov	r0, #52	; 0x34
    b348:	bl	6544 <sf_gen_atmfield_code>
    b34c:	mov	r4, r0
    b350:	mov	r1, r0
    b354:	mov	r0, r5
    b358:	bl	399c <sf_gen_and>
    b35c:	b	b298 <sf_gen_atmtype_abbrev+0x8c>
    b360:	ldr	r0, [pc, #512]	; b568 <sf_gen_atmtype_abbrev+0x35c>
    b364:	add	r0, pc, r0
    b368:	bl	22b4 <sf_bpf_error>
    b36c:	ldr	r3, [pc, #504]	; b56c <sf_gen_atmtype_abbrev+0x360>
    b370:	add	r3, pc, r3
    b374:	ldr	r3, [r3, #888]	; 0x378
    b378:	cmp	r3, #0
    b37c:	beq	b3c0 <sf_gen_atmtype_abbrev+0x1b4>
    b380:	mov	r3, #0
    b384:	mov	r2, #16
    b388:	mov	r1, r3
    b38c:	mov	r0, #51	; 0x33
    b390:	bl	6544 <sf_gen_atmfield_code>
    b394:	mov	r5, r0
    b398:	mov	r3, #0
    b39c:	mov	r2, #16
    b3a0:	mov	r1, #4
    b3a4:	mov	r0, #52	; 0x34
    b3a8:	bl	6544 <sf_gen_atmfield_code>
    b3ac:	mov	r4, r0
    b3b0:	mov	r1, r0
    b3b4:	mov	r0, r5
    b3b8:	bl	399c <sf_gen_and>
    b3bc:	b	b298 <sf_gen_atmtype_abbrev+0x8c>
    b3c0:	ldr	r0, [pc, #424]	; b570 <sf_gen_atmtype_abbrev+0x364>
    b3c4:	add	r0, pc, r0
    b3c8:	bl	22b4 <sf_bpf_error>
    b3cc:	ldr	r3, [pc, #416]	; b574 <sf_gen_atmtype_abbrev+0x368>
    b3d0:	add	r3, pc, r3
    b3d4:	ldr	r3, [r3, #888]	; 0x378
    b3d8:	cmp	r3, #0
    b3dc:	beq	b420 <sf_gen_atmtype_abbrev+0x214>
    b3e0:	mov	r3, #0
    b3e4:	mov	r2, #16
    b3e8:	mov	r1, r3
    b3ec:	mov	r0, #51	; 0x33
    b3f0:	bl	6544 <sf_gen_atmfield_code>
    b3f4:	mov	r5, r0
    b3f8:	mov	r3, #0
    b3fc:	mov	r2, #16
    b400:	mov	r1, #5
    b404:	mov	r0, #52	; 0x34
    b408:	bl	6544 <sf_gen_atmfield_code>
    b40c:	mov	r4, r0
    b410:	mov	r1, r0
    b414:	mov	r0, r5
    b418:	bl	399c <sf_gen_and>
    b41c:	b	b298 <sf_gen_atmtype_abbrev+0x8c>
    b420:	ldr	r0, [pc, #336]	; b578 <sf_gen_atmtype_abbrev+0x36c>
    b424:	add	r0, pc, r0
    b428:	bl	22b4 <sf_bpf_error>
    b42c:	ldr	r3, [pc, #328]	; b57c <sf_gen_atmtype_abbrev+0x370>
    b430:	add	r3, pc, r3
    b434:	ldr	r3, [r3, #888]	; 0x378
    b438:	cmp	r3, #0
    b43c:	beq	b480 <sf_gen_atmtype_abbrev+0x274>
    b440:	mov	r3, #0
    b444:	mov	r2, #16
    b448:	mov	r1, r3
    b44c:	mov	r0, #51	; 0x33
    b450:	bl	6544 <sf_gen_atmfield_code>
    b454:	mov	r5, r0
    b458:	mov	r3, #0
    b45c:	mov	r2, #16
    b460:	mov	r1, r2
    b464:	mov	r0, #52	; 0x34
    b468:	bl	6544 <sf_gen_atmfield_code>
    b46c:	mov	r4, r0
    b470:	mov	r1, r0
    b474:	mov	r0, r5
    b478:	bl	399c <sf_gen_and>
    b47c:	b	b298 <sf_gen_atmtype_abbrev+0x8c>
    b480:	ldr	r0, [pc, #248]	; b580 <sf_gen_atmtype_abbrev+0x374>
    b484:	add	r0, pc, r0
    b488:	bl	22b4 <sf_bpf_error>
    b48c:	ldr	r3, [pc, #240]	; b584 <sf_gen_atmtype_abbrev+0x378>
    b490:	add	r3, pc, r3
    b494:	ldr	r3, [r3, #888]	; 0x378
    b498:	cmp	r3, #0
    b49c:	beq	b4f8 <sf_gen_atmtype_abbrev+0x2ec>
    b4a0:	mov	r3, #0
    b4a4:	mov	r2, #16
    b4a8:	mov	r1, #1
    b4ac:	mov	r0, #53	; 0x35
    b4b0:	bl	6544 <sf_gen_atmfield_code>
    b4b4:	mov	r4, r0
    b4b8:	ldr	r3, [pc, #200]	; b588 <sf_gen_atmtype_abbrev+0x37c>
    b4bc:	add	r3, pc, r3
    b4c0:	mov	r2, #1
    b4c4:	str	r2, [r3, #892]	; 0x37c
    b4c8:	ldr	r2, [r3, #908]	; 0x38c
    b4cc:	add	r1, r2, #2
    b4d0:	str	r1, [r3, #884]	; 0x374
    b4d4:	add	r1, r2, #14
    b4d8:	str	r1, [r3, #944]	; 0x3b0
    b4dc:	add	r2, r2, #16
    b4e0:	str	r2, [r3, #940]	; 0x3ac
    b4e4:	mov	r2, #0
    b4e8:	str	r2, [r3, #948]	; 0x3b4
    b4ec:	mov	r2, #3
    b4f0:	str	r2, [r3, #952]	; 0x3b8
    b4f4:	b	b298 <sf_gen_atmtype_abbrev+0x8c>
    b4f8:	ldr	r0, [pc, #140]	; b58c <sf_gen_atmtype_abbrev+0x380>
    b4fc:	add	r0, pc, r0
    b500:	bl	22b4 <sf_bpf_error>
    b504:	ldr	r3, [pc, #132]	; b590 <sf_gen_atmtype_abbrev+0x384>
    b508:	add	r3, pc, r3
    b50c:	ldr	r3, [r3, #888]	; 0x378
    b510:	cmp	r3, #0
    b514:	beq	b544 <sf_gen_atmtype_abbrev+0x338>
    b518:	mov	r3, #0
    b51c:	mov	r2, #16
    b520:	mov	r1, #2
    b524:	mov	r0, #53	; 0x35
    b528:	bl	6544 <sf_gen_atmfield_code>
    b52c:	mov	r4, r0
    b530:	mov	r2, #0
    b534:	ldr	r3, [pc, #88]	; b594 <sf_gen_atmtype_abbrev+0x388>
    b538:	add	r3, pc, r3
    b53c:	str	r2, [r3, #892]	; 0x37c
    b540:	b	b298 <sf_gen_atmtype_abbrev+0x8c>
    b544:	ldr	r0, [pc, #76]	; b598 <sf_gen_atmtype_abbrev+0x38c>
    b548:	add	r0, pc, r0
    b54c:	bl	22b4 <sf_bpf_error>
    b550:	bl	f18 <abort@plt>
    b554:	.word	0x0002611c
    b558:	.word	0x0000940c
    b55c:	.word	0x000260b8
    b560:	.word	0x000093d0
    b564:	.word	0x00026058
    b568:	.word	0x00009390
    b56c:	.word	0x00025ff8
    b570:	.word	0x00009354
    b574:	.word	0x00025f98
    b578:	.word	0x00009318
    b57c:	.word	0x00025f38
    b580:	.word	0x000092d8
    b584:	.word	0x00025ed8
    b588:	.word	0x00025eac
    b58c:	.word	0x00009284
    b590:	.word	0x00025e60
    b594:	.word	0x00025e30
    b598:	.word	0x0000925c

0000b59c <sf_gen_mtp2type_abbrev>:
    b59c:	push	{r4, r5, r6, lr}
    b5a0:	sub	sp, sp, #16
    b5a4:	cmp	r0, #23
    b5a8:	beq	b620 <sf_gen_mtp2type_abbrev+0x84>
    b5ac:	cmp	r0, #24
    b5b0:	beq	b6b0 <sf_gen_mtp2type_abbrev+0x114>
    b5b4:	cmp	r0, #22
    b5b8:	beq	b5c0 <sf_gen_mtp2type_abbrev+0x24>
    b5bc:	bl	f18 <abort@plt>
    b5c0:	ldr	r3, [pc, #328]	; b710 <sf_gen_mtp2type_abbrev+0x174>
    b5c4:	add	r3, pc, r3
    b5c8:	ldr	r3, [r3, #852]	; 0x354
    b5cc:	sub	r2, r3, #139	; 0x8b
    b5d0:	cmp	r3, #197	; 0xc5
    b5d4:	cmpne	r2, #1
    b5d8:	bhi	b614 <sf_gen_mtp2type_abbrev+0x78>
    b5dc:	ldr	r3, [pc, #304]	; b714 <sf_gen_mtp2type_abbrev+0x178>
    b5e0:	add	r3, pc, r3
    b5e4:	ldr	r1, [r3, #916]	; 0x394
    b5e8:	mov	r0, #0
    b5ec:	str	r0, [sp, #8]
    b5f0:	str	r0, [sp, #4]
    b5f4:	mov	r2, #16
    b5f8:	str	r2, [sp]
    b5fc:	mov	r3, #63	; 0x3f
    b600:	bl	4630 <gen_ncmp>
    b604:	mov	r4, r0
    b608:	mov	r0, r4
    b60c:	add	sp, sp, #16
    b610:	pop	{r4, r5, r6, pc}
    b614:	ldr	r0, [pc, #252]	; b718 <sf_gen_mtp2type_abbrev+0x17c>
    b618:	add	r0, pc, r0
    b61c:	bl	22b4 <sf_bpf_error>
    b620:	ldr	r3, [pc, #244]	; b71c <sf_gen_mtp2type_abbrev+0x180>
    b624:	add	r3, pc, r3
    b628:	ldr	r3, [r3, #852]	; 0x354
    b62c:	sub	r2, r3, #139	; 0x8b
    b630:	cmp	r3, #197	; 0xc5
    b634:	cmpne	r2, #1
    b638:	bhi	b6a4 <sf_gen_mtp2type_abbrev+0x108>
    b63c:	ldr	r3, [pc, #220]	; b720 <sf_gen_mtp2type_abbrev+0x184>
    b640:	add	r3, pc, r3
    b644:	ldr	r5, [r3, #916]	; 0x394
    b648:	mov	r3, #2
    b64c:	str	r3, [sp, #8]
    b650:	mov	r3, #1
    b654:	str	r3, [sp, #4]
    b658:	mov	r6, #32
    b65c:	str	r6, [sp]
    b660:	mov	r3, #63	; 0x3f
    b664:	mov	r2, #16
    b668:	mov	r1, r5
    b66c:	mov	r0, #0
    b670:	bl	4630 <gen_ncmp>
    b674:	mov	r4, r0
    b678:	mov	r0, #0
    b67c:	str	r0, [sp, #8]
    b680:	str	r0, [sp, #4]
    b684:	str	r6, [sp]
    b688:	mov	r3, #63	; 0x3f
    b68c:	mov	r2, #16
    b690:	mov	r1, r5
    b694:	bl	4630 <gen_ncmp>
    b698:	mov	r1, r4
    b69c:	bl	399c <sf_gen_and>
    b6a0:	b	b608 <sf_gen_mtp2type_abbrev+0x6c>
    b6a4:	ldr	r0, [pc, #120]	; b724 <sf_gen_mtp2type_abbrev+0x188>
    b6a8:	add	r0, pc, r0
    b6ac:	bl	22b4 <sf_bpf_error>
    b6b0:	ldr	r3, [pc, #112]	; b728 <sf_gen_mtp2type_abbrev+0x18c>
    b6b4:	add	r3, pc, r3
    b6b8:	ldr	r3, [r3, #852]	; 0x354
    b6bc:	sub	r2, r3, #139	; 0x8b
    b6c0:	cmp	r3, #197	; 0xc5
    b6c4:	cmpne	r2, #1
    b6c8:	bhi	b704 <sf_gen_mtp2type_abbrev+0x168>
    b6cc:	ldr	r3, [pc, #88]	; b72c <sf_gen_mtp2type_abbrev+0x190>
    b6d0:	add	r3, pc, r3
    b6d4:	ldr	r1, [r3, #916]	; 0x394
    b6d8:	mov	r3, #2
    b6dc:	str	r3, [sp, #8]
    b6e0:	mov	r0, #0
    b6e4:	str	r0, [sp, #4]
    b6e8:	mov	r3, #32
    b6ec:	str	r3, [sp]
    b6f0:	mov	r3, #63	; 0x3f
    b6f4:	mov	r2, #16
    b6f8:	bl	4630 <gen_ncmp>
    b6fc:	mov	r4, r0
    b700:	b	b608 <sf_gen_mtp2type_abbrev+0x6c>
    b704:	ldr	r0, [pc, #36]	; b730 <sf_gen_mtp2type_abbrev+0x194>
    b708:	add	r0, pc, r0
    b70c:	bl	22b4 <sf_bpf_error>
    b710:	.word	0x00025da4
    b714:	.word	0x00025d88
    b718:	.word	0x000091ac
    b71c:	.word	0x00025d44
    b720:	.word	0x00025d28
    b724:	.word	0x0000913c
    b728:	.word	0x00025cb4
    b72c:	.word	0x00025c98
    b730:	.word	0x000090fc

0000b734 <sf_gen_mtp3field_code>:
    b734:	push	{r4, lr}
    b738:	sub	sp, sp, #16
    b73c:	sub	r0, r0, #1
    b740:	cmp	r0, #3
    b744:	addls	pc, pc, r0, lsl #2
    b748:	b	b8ec <sf_gen_mtp3field_code+0x1b8>
    b74c:	b	b75c <sf_gen_mtp3field_code+0x28>
    b750:	b	b7b8 <sf_gen_mtp3field_code+0x84>
    b754:	b	b82c <sf_gen_mtp3field_code+0xf8>
    b758:	b	b890 <sf_gen_mtp3field_code+0x15c>
    b75c:	ldr	r0, [pc, #396]	; b8f0 <sf_gen_mtp3field_code+0x1bc>
    b760:	add	r0, pc, r0
    b764:	ldr	r0, [r0, #920]	; 0x398
    b768:	cmn	r0, #1
    b76c:	beq	b7a0 <sf_gen_mtp3field_code+0x6c>
    b770:	cmp	r1, #255	; 0xff
    b774:	bhi	b7ac <sf_gen_mtp3field_code+0x78>
    b778:	str	r1, [sp, #8]
    b77c:	str	r3, [sp, #4]
    b780:	str	r2, [sp]
    b784:	mvn	r3, #0
    b788:	mov	r2, #16
    b78c:	mov	r1, r0
    b790:	mov	r0, #0
    b794:	bl	4630 <gen_ncmp>
    b798:	add	sp, sp, #16
    b79c:	pop	{r4, pc}
    b7a0:	ldr	r0, [pc, #332]	; b8f4 <sf_gen_mtp3field_code+0x1c0>
    b7a4:	add	r0, pc, r0
    b7a8:	bl	22b4 <sf_bpf_error>
    b7ac:	ldr	r0, [pc, #324]	; b8f8 <sf_gen_mtp3field_code+0x1c4>
    b7b0:	add	r0, pc, r0
    b7b4:	bl	22b4 <sf_bpf_error>
    b7b8:	ldr	r0, [pc, #316]	; b8fc <sf_gen_mtp3field_code+0x1c8>
    b7bc:	add	r0, pc, r0
    b7c0:	ldr	lr, [r0, #924]	; 0x39c
    b7c4:	cmn	lr, #1
    b7c8:	beq	b814 <sf_gen_mtp3field_code+0xe0>
    b7cc:	cmp	r1, #16384	; 0x4000
    b7d0:	bcs	b820 <sf_gen_mtp3field_code+0xec>
    b7d4:	lsl	r0, r1, #22
    b7d8:	and	r0, r0, #12582912	; 0xc00000
    b7dc:	lsl	r4, r1, #18
    b7e0:	lsl	ip, r1, #6
    b7e4:	and	ip, ip, #65280	; 0xff00
    b7e8:	orr	ip, ip, r4, lsr #28
    b7ec:	add	r0, r0, ip
    b7f0:	str	r0, [sp, #8]
    b7f4:	str	r3, [sp, #4]
    b7f8:	str	r2, [sp]
    b7fc:	ldr	r3, [pc, #252]	; b900 <sf_gen_mtp3field_code+0x1cc>
    b800:	mov	r2, #0
    b804:	mov	r1, lr
    b808:	mov	r0, r2
    b80c:	bl	4630 <gen_ncmp>
    b810:	b	b798 <sf_gen_mtp3field_code+0x64>
    b814:	ldr	r0, [pc, #232]	; b904 <sf_gen_mtp3field_code+0x1d0>
    b818:	add	r0, pc, r0
    b81c:	bl	22b4 <sf_bpf_error>
    b820:	ldr	r0, [pc, #224]	; b908 <sf_gen_mtp3field_code+0x1d4>
    b824:	add	r0, pc, r0
    b828:	bl	22b4 <sf_bpf_error>
    b82c:	ldr	r0, [pc, #216]	; b90c <sf_gen_mtp3field_code+0x1d8>
    b830:	add	r0, pc, r0
    b834:	ldr	ip, [r0, #928]	; 0x3a0
    b838:	cmn	ip, #1
    b83c:	beq	b878 <sf_gen_mtp3field_code+0x144>
    b840:	cmp	r1, #16384	; 0x4000
    b844:	bcs	b884 <sf_gen_mtp3field_code+0x150>
    b848:	lsl	r0, r1, #8
    b84c:	and	r0, r0, #4128768	; 0x3f0000
    b850:	add	r0, r0, r1, lsl #24
    b854:	str	r0, [sp, #8]
    b858:	str	r3, [sp, #4]
    b85c:	str	r2, [sp]
    b860:	ldr	r3, [pc, #168]	; b910 <sf_gen_mtp3field_code+0x1dc>
    b864:	mov	r2, #0
    b868:	mov	r1, ip
    b86c:	mov	r0, r2
    b870:	bl	4630 <gen_ncmp>
    b874:	b	b798 <sf_gen_mtp3field_code+0x64>
    b878:	ldr	r0, [pc, #148]	; b914 <sf_gen_mtp3field_code+0x1e0>
    b87c:	add	r0, pc, r0
    b880:	bl	22b4 <sf_bpf_error>
    b884:	ldr	r0, [pc, #140]	; b918 <sf_gen_mtp3field_code+0x1e4>
    b888:	add	r0, pc, r0
    b88c:	bl	22b4 <sf_bpf_error>
    b890:	ldr	r0, [pc, #132]	; b91c <sf_gen_mtp3field_code+0x1e8>
    b894:	add	r0, pc, r0
    b898:	ldr	ip, [r0, #932]	; 0x3a4
    b89c:	cmn	ip, #1
    b8a0:	beq	b8d4 <sf_gen_mtp3field_code+0x1a0>
    b8a4:	cmp	r1, #15
    b8a8:	bhi	b8e0 <sf_gen_mtp3field_code+0x1ac>
    b8ac:	lsl	r0, r1, #4
    b8b0:	str	r0, [sp, #8]
    b8b4:	str	r3, [sp, #4]
    b8b8:	str	r2, [sp]
    b8bc:	mov	r3, #240	; 0xf0
    b8c0:	mov	r2, #16
    b8c4:	mov	r1, ip
    b8c8:	mov	r0, #0
    b8cc:	bl	4630 <gen_ncmp>
    b8d0:	b	b798 <sf_gen_mtp3field_code+0x64>
    b8d4:	ldr	r0, [pc, #68]	; b920 <sf_gen_mtp3field_code+0x1ec>
    b8d8:	add	r0, pc, r0
    b8dc:	bl	22b4 <sf_bpf_error>
    b8e0:	ldr	r0, [pc, #60]	; b924 <sf_gen_mtp3field_code+0x1f0>
    b8e4:	add	r0, pc, r0
    b8e8:	bl	22b4 <sf_bpf_error>
    b8ec:	bl	f18 <abort@plt>
    b8f0:	.word	0x00025c08
    b8f4:	.word	0x00009080
    b8f8:	.word	0x00009090
    b8fc:	.word	0x00025bac
    b900:	.word	0x00c0ff0f
    b904:	.word	0x00009050
    b908:	.word	0x00009060
    b90c:	.word	0x00025b38
    b910:	.word	0xff3f0000
    b914:	.word	0x00009030
    b918:	.word	0x00009040
    b91c:	.word	0x00025ad4
    b920:	.word	0x00009018
    b924:	.word	0x00009028

0000b928 <sf_gen_atmmulti_abbrev>:
    b928:	push	{r4, r5, r6, lr}
    b92c:	cmp	r0, #29
    b930:	beq	ba3c <sf_gen_atmmulti_abbrev+0x114>
    b934:	ble	ba00 <sf_gen_atmmulti_abbrev+0xd8>
    b938:	cmp	r0, #70	; 0x46
    b93c:	beq	bab8 <sf_gen_atmmulti_abbrev+0x190>
    b940:	cmp	r0, #71	; 0x47
    b944:	bne	bba4 <sf_gen_atmmulti_abbrev+0x27c>
    b948:	ldr	r3, [pc, #600]	; bba8 <sf_gen_atmmulti_abbrev+0x280>
    b94c:	add	r3, pc, r3
    b950:	ldr	r3, [r3, #888]	; 0x378
    b954:	cmp	r3, #0
    b958:	beq	bb98 <sf_gen_atmmulti_abbrev+0x270>
    b95c:	mov	r3, #0
    b960:	mov	r2, #16
    b964:	mov	r1, #5
    b968:	mov	r0, #54	; 0x36
    b96c:	bl	6544 <sf_gen_atmfield_code>
    b970:	mov	r5, r0
    b974:	mov	r3, #0
    b978:	mov	r2, #16
    b97c:	mov	r1, #2
    b980:	mov	r0, #54	; 0x36
    b984:	bl	6544 <sf_gen_atmfield_code>
    b988:	mov	r4, r0
    b98c:	mov	r1, r0
    b990:	mov	r0, r5
    b994:	bl	3a20 <sf_gen_or>
    b998:	mov	r3, #0
    b99c:	mov	r2, #16
    b9a0:	mov	r1, #7
    b9a4:	mov	r0, #54	; 0x36
    b9a8:	bl	6544 <sf_gen_atmfield_code>
    b9ac:	mov	r1, r4
    b9b0:	bl	3a20 <sf_gen_or>
    b9b4:	mov	r3, #0
    b9b8:	mov	r2, #16
    b9bc:	mov	r1, #77	; 0x4d
    b9c0:	mov	r0, #54	; 0x36
    b9c4:	bl	6544 <sf_gen_atmfield_code>
    b9c8:	mov	r1, r4
    b9cc:	bl	3a20 <sf_gen_or>
    b9d0:	mov	r3, #0
    b9d4:	mov	r2, #16
    b9d8:	mov	r1, #90	; 0x5a
    b9dc:	mov	r0, #54	; 0x36
    b9e0:	bl	6544 <sf_gen_atmfield_code>
    b9e4:	mov	r1, r4
    b9e8:	bl	3a20 <sf_gen_or>
    b9ec:	mov	r0, #22
    b9f0:	bl	b20c <sf_gen_atmtype_abbrev>
    b9f4:	mov	r1, r4
    b9f8:	bl	399c <sf_gen_and>
    b9fc:	b	ba28 <sf_gen_atmmulti_abbrev+0x100>
    ba00:	cmp	r0, #28
    ba04:	bne	bba4 <sf_gen_atmmulti_abbrev+0x27c>
    ba08:	ldr	r3, [pc, #412]	; bbac <sf_gen_atmmulti_abbrev+0x284>
    ba0c:	add	r3, pc, r3
    ba10:	ldr	r3, [r3, #888]	; 0x378
    ba14:	cmp	r3, #0
    ba18:	beq	ba30 <sf_gen_atmmulti_abbrev+0x108>
    ba1c:	mov	r0, #29
    ba20:	bl	b928 <sf_gen_atmmulti_abbrev>
    ba24:	mov	r4, r0
    ba28:	mov	r0, r4
    ba2c:	pop	{r4, r5, r6, pc}
    ba30:	ldr	r0, [pc, #376]	; bbb0 <sf_gen_atmmulti_abbrev+0x288>
    ba34:	add	r0, pc, r0
    ba38:	bl	22b4 <sf_bpf_error>
    ba3c:	ldr	r3, [pc, #368]	; bbb4 <sf_gen_atmmulti_abbrev+0x28c>
    ba40:	add	r3, pc, r3
    ba44:	ldr	r3, [r3, #888]	; 0x378
    ba48:	cmp	r3, #0
    ba4c:	beq	baac <sf_gen_atmmulti_abbrev+0x184>
    ba50:	mov	r3, #0
    ba54:	mov	r2, #16
    ba58:	mov	r1, #3
    ba5c:	mov	r0, #52	; 0x34
    ba60:	bl	6544 <sf_gen_atmfield_code>
    ba64:	mov	r5, r0
    ba68:	mov	r3, #0
    ba6c:	mov	r2, #16
    ba70:	mov	r1, #4
    ba74:	mov	r0, #52	; 0x34
    ba78:	bl	6544 <sf_gen_atmfield_code>
    ba7c:	mov	r4, r0
    ba80:	mov	r1, r0
    ba84:	mov	r0, r5
    ba88:	bl	3a20 <sf_gen_or>
    ba8c:	mov	r3, #0
    ba90:	mov	r2, #16
    ba94:	mov	r1, r3
    ba98:	mov	r0, #51	; 0x33
    ba9c:	bl	6544 <sf_gen_atmfield_code>
    baa0:	mov	r1, r4
    baa4:	bl	399c <sf_gen_and>
    baa8:	b	ba28 <sf_gen_atmmulti_abbrev+0x100>
    baac:	ldr	r0, [pc, #260]	; bbb8 <sf_gen_atmmulti_abbrev+0x290>
    bab0:	add	r0, pc, r0
    bab4:	bl	22b4 <sf_bpf_error>
    bab8:	ldr	r3, [pc, #252]	; bbbc <sf_gen_atmmulti_abbrev+0x294>
    babc:	add	r3, pc, r3
    bac0:	ldr	r3, [r3, #888]	; 0x378
    bac4:	cmp	r3, #0
    bac8:	beq	bb8c <sf_gen_atmmulti_abbrev+0x264>
    bacc:	mov	r3, #0
    bad0:	mov	r2, #16
    bad4:	mov	r1, #5
    bad8:	mov	r0, #54	; 0x36
    badc:	bl	6544 <sf_gen_atmfield_code>
    bae0:	mov	r5, r0
    bae4:	mov	r3, #0
    bae8:	mov	r2, #16
    baec:	mov	r1, #2
    baf0:	mov	r0, #54	; 0x36
    baf4:	bl	6544 <sf_gen_atmfield_code>
    baf8:	mov	r4, r0
    bafc:	mov	r1, r0
    bb00:	mov	r0, r5
    bb04:	bl	3a20 <sf_gen_or>
    bb08:	mov	r3, #0
    bb0c:	mov	r2, #16
    bb10:	mov	r1, #7
    bb14:	mov	r0, #54	; 0x36
    bb18:	bl	6544 <sf_gen_atmfield_code>
    bb1c:	mov	r1, r4
    bb20:	bl	3a20 <sf_gen_or>
    bb24:	mov	r3, #0
    bb28:	mov	r2, #16
    bb2c:	mov	r1, #15
    bb30:	mov	r0, #54	; 0x36
    bb34:	bl	6544 <sf_gen_atmfield_code>
    bb38:	mov	r1, r4
    bb3c:	bl	3a20 <sf_gen_or>
    bb40:	mov	r3, #0
    bb44:	mov	r2, #16
    bb48:	mov	r1, #77	; 0x4d
    bb4c:	mov	r0, #54	; 0x36
    bb50:	bl	6544 <sf_gen_atmfield_code>
    bb54:	mov	r1, r4
    bb58:	bl	3a20 <sf_gen_or>
    bb5c:	mov	r3, #0
    bb60:	mov	r2, #16
    bb64:	mov	r1, #90	; 0x5a
    bb68:	mov	r0, #54	; 0x36
    bb6c:	bl	6544 <sf_gen_atmfield_code>
    bb70:	mov	r1, r4
    bb74:	bl	3a20 <sf_gen_or>
    bb78:	mov	r0, #26
    bb7c:	bl	b20c <sf_gen_atmtype_abbrev>
    bb80:	mov	r1, r4
    bb84:	bl	399c <sf_gen_and>
    bb88:	b	ba28 <sf_gen_atmmulti_abbrev+0x100>
    bb8c:	ldr	r0, [pc, #44]	; bbc0 <sf_gen_atmmulti_abbrev+0x298>
    bb90:	add	r0, pc, r0
    bb94:	bl	22b4 <sf_bpf_error>
    bb98:	ldr	r0, [pc, #36]	; bbc4 <sf_gen_atmmulti_abbrev+0x29c>
    bb9c:	add	r0, pc, r0
    bba0:	bl	22b4 <sf_bpf_error>
    bba4:	bl	f18 <abort@plt>
    bba8:	.word	0x00025a1c
    bbac:	.word	0x0002595c
    bbb0:	.word	0x00008f00
    bbb4:	.word	0x00025928
    bbb8:	.word	0x00008ea4
    bbbc:	.word	0x000258ac
    bbc0:	.word	0x00008de8
    bbc4:	.word	0x00008e04

0000bbc8 <pcap_nametoaddr>:
    bbc8:	push	{r4, lr}
    bbcc:	bl	f00 <gethostbyname@plt>
    bbd0:	cmp	r0, #0
    bbd4:	beq	bc08 <pcap_nametoaddr+0x40>
    bbd8:	ldr	r1, [r0, #16]
    bbdc:	ldr	r3, [r1]
    bbe0:	cmp	r3, #0
    bbe4:	beq	bc00 <pcap_nametoaddr+0x38>
    bbe8:	ldr	r2, [r3]
    bbec:	rev	r2, r2
    bbf0:	str	r2, [r3]
    bbf4:	ldr	r3, [r1, #4]!
    bbf8:	cmp	r3, #0
    bbfc:	bne	bbe8 <pcap_nametoaddr+0x20>
    bc00:	ldr	r0, [r0, #16]
    bc04:	pop	{r4, pc}
    bc08:	mov	r0, #0
    bc0c:	pop	{r4, pc}

0000bc10 <pcap_nametoaddrinfo>:
    bc10:	push	{r4, r5, lr}
    bc14:	sub	sp, sp, #44	; 0x2c
    bc18:	mov	r5, r0
    bc1c:	mov	r2, #32
    bc20:	mov	r1, #0
    bc24:	add	r4, sp, #8
    bc28:	mov	r0, r4
    bc2c:	bl	e88 <memset@plt>
    bc30:	mov	r3, #1
    bc34:	str	r3, [sp, #16]
    bc38:	mov	r3, #6
    bc3c:	str	r3, [sp, #20]
    bc40:	add	r3, sp, #4
    bc44:	mov	r2, r4
    bc48:	mov	r1, #0
    bc4c:	mov	r0, r5
    bc50:	bl	ee8 <getaddrinfo@plt>
    bc54:	cmp	r0, #0
    bc58:	ldreq	r0, [sp, #4]
    bc5c:	movne	r0, #0
    bc60:	add	sp, sp, #44	; 0x2c
    bc64:	pop	{r4, r5, pc}

0000bc68 <pcap_nametonetaddr>:
    bc68:	push	{r4, lr}
    bc6c:	bl	db0 <getnetbyname@plt>
    bc70:	cmp	r0, #0
    bc74:	ldrne	r0, [r0, #12]
    bc78:	moveq	r0, #0
    bc7c:	pop	{r4, pc}

0000bc80 <pcap_nametoport>:
    bc80:	push	{r4, r5, r6, r7, r8, lr}
    bc84:	mov	r7, r0
    bc88:	mov	r5, r1
    bc8c:	mov	r6, r2
    bc90:	ldr	r1, [pc, #188]	; bd54 <pcap_nametoport+0xd4>
    bc94:	add	r1, pc, r1
    bc98:	bl	e7c <getservbyname@plt>
    bc9c:	cmp	r0, #0
    bca0:	beq	bd14 <pcap_nametoport+0x94>
    bca4:	ldr	r4, [r0, #8]
    bca8:	rev16	r4, r4
    bcac:	uxth	r4, r4
    bcb0:	ldr	r1, [pc, #160]	; bd58 <pcap_nametoport+0xd8>
    bcb4:	add	r1, pc, r1
    bcb8:	mov	r0, r7
    bcbc:	bl	e7c <getservbyname@plt>
    bcc0:	cmp	r0, #0
    bcc4:	beq	bd00 <pcap_nametoport+0x80>
    bcc8:	ldr	r3, [r0, #8]
    bccc:	rev16	r3, r3
    bcd0:	uxth	r3, r3
    bcd4:	str	r4, [r5]
    bcd8:	cmp	r4, r3
    bcdc:	beq	bcf0 <pcap_nametoport+0x70>
    bce0:	mov	r3, #6
    bce4:	str	r3, [r6]
    bce8:	mov	r0, #1
    bcec:	pop	{r4, r5, r6, r7, r8, pc}
    bcf0:	mvn	r3, #0
    bcf4:	str	r3, [r6]
    bcf8:	mov	r0, #1
    bcfc:	pop	{r4, r5, r6, r7, r8, pc}
    bd00:	str	r4, [r5]
    bd04:	mov	r3, #6
    bd08:	str	r3, [r6]
    bd0c:	mov	r0, #1
    bd10:	pop	{r4, r5, r6, r7, r8, pc}
    bd14:	ldr	r1, [pc, #64]	; bd5c <pcap_nametoport+0xdc>
    bd18:	add	r1, pc, r1
    bd1c:	mov	r0, r7
    bd20:	bl	e7c <getservbyname@plt>
    bd24:	cmp	r0, #0
    bd28:	beq	bd4c <pcap_nametoport+0xcc>
    bd2c:	ldr	r3, [r0, #8]
    bd30:	rev16	r3, r3
    bd34:	uxth	r3, r3
    bd38:	str	r3, [r5]
    bd3c:	mov	r3, #17
    bd40:	str	r3, [r6]
    bd44:	mov	r0, #1
    bd48:	pop	{r4, r5, r6, r7, r8, pc}
    bd4c:	mov	r0, #0
    bd50:	pop	{r4, r5, r6, r7, r8, pc}
    bd54:	.word	0x00008d34
    bd58:	.word	0x00008d18
    bd5c:	.word	0x00008cb4

0000bd60 <pcap_nametoportrange>:
    bd60:	push	{r4, r5, r6, r7, r8, r9, lr}
    bd64:	sub	sp, sp, #12
    bd68:	mov	r7, r0
    bd6c:	mov	r5, r1
    bd70:	mov	r6, r2
    bd74:	mov	r4, r3
    bd78:	mov	r3, sp
    bd7c:	add	r2, sp, #4
    bd80:	ldr	r1, [pc, #224]	; be68 <pcap_nametoportrange+0x108>
    bd84:	add	r1, pc, r1
    bd88:	bl	eb8 <sscanf@plt>
    bd8c:	cmp	r0, #2
    bd90:	beq	be38 <pcap_nametoportrange+0xd8>
    bd94:	mov	r0, r7
    bd98:	bl	dd4 <strdup@plt>
    bd9c:	subs	r7, r0, #0
    bda0:	beq	be60 <pcap_nametoportrange+0x100>
    bda4:	mov	r1, #45	; 0x2d
    bda8:	mov	r0, r7
    bdac:	bl	e58 <strchr@plt>
    bdb0:	subs	r8, r0, #0
    bdb4:	beq	be10 <pcap_nametoportrange+0xb0>
    bdb8:	mov	r3, #0
    bdbc:	strb	r3, [r8]
    bdc0:	mov	r2, r4
    bdc4:	mov	r1, r5
    bdc8:	mov	r0, r7
    bdcc:	bl	bc80 <pcap_nametoport>
    bdd0:	subs	r5, r0, #0
    bdd4:	beq	be20 <pcap_nametoportrange+0xc0>
    bdd8:	ldr	r9, [r4]
    bddc:	mov	r2, r4
    bde0:	mov	r1, r6
    bde4:	add	r0, r8, #1
    bde8:	bl	bc80 <pcap_nametoport>
    bdec:	subs	r5, r0, #0
    bdf0:	beq	be2c <pcap_nametoportrange+0xcc>
    bdf4:	ldr	r3, [r4]
    bdf8:	cmp	r9, r3
    bdfc:	moveq	r5, #1
    be00:	mvnne	r3, #0
    be04:	strne	r3, [r4]
    be08:	movne	r5, #1
    be0c:	b	be54 <pcap_nametoportrange+0xf4>
    be10:	mov	r0, r7
    be14:	bl	da4 <free@plt>
    be18:	mov	r5, #0
    be1c:	b	be54 <pcap_nametoportrange+0xf4>
    be20:	mov	r0, r7
    be24:	bl	da4 <free@plt>
    be28:	b	be54 <pcap_nametoportrange+0xf4>
    be2c:	mov	r0, r7
    be30:	bl	da4 <free@plt>
    be34:	b	be54 <pcap_nametoportrange+0xf4>
    be38:	ldr	r3, [sp, #4]
    be3c:	str	r3, [r5]
    be40:	ldr	r3, [sp]
    be44:	str	r3, [r6]
    be48:	mvn	r3, #0
    be4c:	str	r3, [r4]
    be50:	mov	r5, #1
    be54:	mov	r0, r5
    be58:	add	sp, sp, #12
    be5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    be60:	mov	r5, #0
    be64:	b	be54 <pcap_nametoportrange+0xf4>
    be68:	.word	0x00008c4c

0000be6c <pcap_nametoproto>:
    be6c:	push	{r4, lr}
    be70:	bl	d80 <getprotobyname@plt>
    be74:	cmp	r0, #0
    be78:	ldrne	r0, [r0, #8]
    be7c:	mvneq	r0, #0
    be80:	pop	{r4, pc}

0000be84 <pcap_nametoeproto>:
    be84:	push	{r4, r5, r6, lr}
    be88:	mov	r5, r0
    be8c:	ldr	r3, [pc, #76]	; bee0 <pcap_nametoeproto+0x5c>
    be90:	add	r3, pc, r3
    be94:	ldr	r0, [r3]
    be98:	cmp	r0, #0
    be9c:	beq	bed8 <pcap_nametoeproto+0x54>
    bea0:	ldr	r4, [pc, #60]	; bee4 <pcap_nametoeproto+0x60>
    bea4:	add	r4, pc, r4
    bea8:	mov	r6, r4
    beac:	mov	r1, r5
    beb0:	bl	d50 <strcmp@plt>
    beb4:	cmp	r0, #0
    beb8:	beq	bed0 <pcap_nametoeproto+0x4c>
    bebc:	ldr	r0, [r4, #8]!
    bec0:	cmp	r0, #0
    bec4:	bne	bea8 <pcap_nametoeproto+0x24>
    bec8:	mvn	r0, #0
    becc:	pop	{r4, r5, r6, pc}
    bed0:	ldrh	r0, [r4, #4]
    bed4:	pop	{r4, r5, r6, pc}
    bed8:	mvn	r0, #0
    bedc:	pop	{r4, r5, r6, pc}
    bee0:	.word	0x000253f8
    bee4:	.word	0x000253e4

0000bee8 <pcap_nametollc>:
    bee8:	push	{r4, r5, r6, lr}
    beec:	mov	r5, r0
    bef0:	ldr	r3, [pc, #80]	; bf48 <pcap_nametollc+0x60>
    bef4:	add	r3, pc, r3
    bef8:	ldr	r0, [r3, #168]	; 0xa8
    befc:	cmp	r0, #0
    bf00:	beq	bf40 <pcap_nametollc+0x58>
    bf04:	ldr	r4, [pc, #64]	; bf4c <pcap_nametollc+0x64>
    bf08:	add	r4, pc, r4
    bf0c:	add	r4, r4, #168	; 0xa8
    bf10:	mov	r6, r4
    bf14:	mov	r1, r5
    bf18:	bl	d50 <strcmp@plt>
    bf1c:	cmp	r0, #0
    bf20:	beq	bf38 <pcap_nametollc+0x50>
    bf24:	ldr	r0, [r4, #8]!
    bf28:	cmp	r0, #0
    bf2c:	bne	bf10 <pcap_nametollc+0x28>
    bf30:	mvn	r0, #0
    bf34:	pop	{r4, r5, r6, pc}
    bf38:	ldrh	r0, [r4, #4]
    bf3c:	pop	{r4, r5, r6, pc}
    bf40:	mvn	r0, #0
    bf44:	pop	{r4, r5, r6, pc}
    bf48:	.word	0x00025394
    bf4c:	.word	0x00025380

0000bf50 <__pcap_atoin>:
    bf50:	push	{r4, lr}
    bf54:	mov	ip, r0
    bf58:	mov	r0, #0
    bf5c:	str	r0, [r1]
    bf60:	mov	r4, r0
    bf64:	ldrb	r3, [ip]
    bf68:	cmp	r3, #0
    bf6c:	cmpne	r3, #46	; 0x2e
    bf70:	beq	bfbc <__pcap_atoin+0x6c>
    bf74:	mov	r2, r4
    bf78:	add	r2, r2, r2, lsl #2
    bf7c:	add	r3, r3, r2, lsl #1
    bf80:	sub	r2, r3, #48	; 0x30
    bf84:	ldrb	r3, [ip, #1]!
    bf88:	cmp	r3, #0
    bf8c:	cmpne	r3, #46	; 0x2e
    bf90:	bne	bf78 <__pcap_atoin+0x28>
    bf94:	ldr	lr, [r1]
    bf98:	uxtb	r3, r2
    bf9c:	orr	r2, r3, lr, lsl #8
    bfa0:	str	r2, [r1]
    bfa4:	add	r0, r0, #8
    bfa8:	ldrb	r3, [ip]
    bfac:	cmp	r3, #0
    bfb0:	popeq	{r4, pc}
    bfb4:	add	ip, ip, #1
    bfb8:	b	bf64 <__pcap_atoin+0x14>
    bfbc:	mov	r2, r4
    bfc0:	b	bf94 <__pcap_atoin+0x44>

0000bfc4 <__pcap_atodn>:
    bfc4:	push	{r4, r5, lr}
    bfc8:	sub	sp, sp, #12
    bfcc:	mov	r5, r0
    bfd0:	mov	r4, r1
    bfd4:	add	r3, sp, #4
    bfd8:	mov	r2, sp
    bfdc:	ldr	r1, [pc, #68]	; c028 <__pcap_atodn+0x64>
    bfe0:	add	r1, pc, r1
    bfe4:	bl	eb8 <sscanf@plt>
    bfe8:	cmp	r0, #2
    bfec:	bne	c018 <__pcap_atodn+0x54>
    bff0:	ldr	r3, [sp]
    bff4:	lsl	r3, r3, #10
    bff8:	uxth	r3, r3
    bffc:	ldr	r2, [sp, #4]
    c000:	lsl	r2, r2, #22
    c004:	orr	r3, r3, r2, lsr #22
    c008:	str	r3, [r4]
    c00c:	mov	r0, #32
    c010:	add	sp, sp, #12
    c014:	pop	{r4, r5, pc}
    c018:	mov	r1, r5
    c01c:	ldr	r0, [pc, #8]	; c02c <__pcap_atodn+0x68>
    c020:	add	r0, pc, r0
    c024:	bl	22b4 <sf_bpf_error>
    c028:	.word	0x000089f8
    c02c:	.word	0x000089c0

0000c030 <pcap_ether_aton>:
    c030:	push	{r4, r5, r6, lr}
    c034:	mov	r4, r0
    c038:	mov	r0, #6
    c03c:	bl	e1c <malloc@plt>
    c040:	subs	r6, r0, #0
    c044:	beq	c0f0 <pcap_ether_aton+0xc0>
    c048:	ldrb	r5, [r4]
    c04c:	cmp	r5, #0
    c050:	beq	c0f0 <pcap_ether_aton+0xc0>
    c054:	bl	e34 <__ctype_b_loc@plt>
    c058:	ldr	ip, [r0]
    c05c:	mov	r0, r6
    c060:	b	c078 <pcap_ether_aton+0x48>
    c064:	orr	r2, r2, r3
    c068:	strb	r2, [r0], #1
    c06c:	ldrb	r5, [r4]
    c070:	cmp	r5, #0
    c074:	beq	c0f0 <pcap_ether_aton+0xc0>
    c078:	sub	r3, r5, #45	; 0x2d
    c07c:	uxtb	r3, r3
    c080:	cmp	r5, #58	; 0x3a
    c084:	cmpne	r3, #1
    c088:	addls	r4, r4, #1
    c08c:	ldrb	r3, [r4]
    c090:	lsl	r2, r3, #1
    c094:	ldrh	r2, [ip, r2]
    c098:	tst	r2, #2048	; 0x800
    c09c:	subne	r3, r3, #48	; 0x30
    c0a0:	bne	c0b0 <pcap_ether_aton+0x80>
    c0a4:	tst	r2, #512	; 0x200
    c0a8:	subne	r3, r3, #87	; 0x57
    c0ac:	subeq	r3, r3, #55	; 0x37
    c0b0:	mov	r2, r3
    c0b4:	ldrb	lr, [r4, #1]
    c0b8:	lsl	r1, lr, #1
    c0bc:	ldrh	r1, [ip, r1]
    c0c0:	tst	r1, #4096	; 0x1000
    c0c4:	addeq	r4, r4, #1
    c0c8:	beq	c068 <pcap_ether_aton+0x38>
    c0cc:	lsl	r3, r3, #4
    c0d0:	add	r4, r4, #2
    c0d4:	tst	r1, #2048	; 0x800
    c0d8:	subne	r2, lr, #48	; 0x30
    c0dc:	bne	c064 <pcap_ether_aton+0x34>
    c0e0:	tst	r1, #512	; 0x200
    c0e4:	subne	r2, lr, #87	; 0x57
    c0e8:	subeq	r2, lr, #55	; 0x37
    c0ec:	b	c064 <pcap_ether_aton+0x34>
    c0f0:	mov	r0, r6
    c0f4:	pop	{r4, r5, r6, pc}

0000c0f8 <pcap_ether_hostton>:
    c0f8:	push	{r4, r5, r6, lr}
    c0fc:	mov	r6, r0
    c100:	ldr	r3, [pc, #192]	; c1c8 <pcap_ether_hostton+0xd0>
    c104:	add	r3, pc, r3
    c108:	ldr	r3, [r3]
    c10c:	cmp	r3, #0
    c110:	beq	c178 <pcap_ether_hostton+0x80>
    c114:	ldr	r3, [pc, #176]	; c1cc <pcap_ether_hostton+0xd4>
    c118:	add	r3, pc, r3
    c11c:	ldr	r0, [r3, #4]
    c120:	cmp	r0, #0
    c124:	beq	c1c0 <pcap_ether_hostton+0xc8>
    c128:	bl	de0 <rewind@plt>
    c12c:	ldr	r5, [pc, #156]	; c1d0 <pcap_ether_hostton+0xd8>
    c130:	add	r5, pc, r5
    c134:	ldr	r0, [r5, #4]
    c138:	bl	f33c <pcap_next_etherent>
    c13c:	subs	r4, r0, #0
    c140:	beq	c1b4 <pcap_ether_hostton+0xbc>
    c144:	mov	r1, r6
    c148:	add	r0, r4, #6
    c14c:	bl	d50 <strcmp@plt>
    c150:	cmp	r0, #0
    c154:	bne	c134 <pcap_ether_hostton+0x3c>
    c158:	mov	r0, #6
    c15c:	bl	e1c <malloc@plt>
    c160:	subs	r3, r0, #0
    c164:	ldrne	r0, [r4]
    c168:	strne	r0, [r3]
    c16c:	ldrhne	r2, [r4, #4]
    c170:	strhne	r2, [r3, #4]
    c174:	b	c1b8 <pcap_ether_hostton+0xc0>
    c178:	ldr	r1, [pc, #84]	; c1d4 <pcap_ether_hostton+0xdc>
    c17c:	add	r1, pc, r1
    c180:	ldr	r0, [pc, #80]	; c1d8 <pcap_ether_hostton+0xe0>
    c184:	add	r0, pc, r0
    c188:	bl	d74 <fopen@plt>
    c18c:	ldr	r3, [pc, #72]	; c1dc <pcap_ether_hostton+0xe4>
    c190:	add	r3, pc, r3
    c194:	str	r0, [r3, #4]
    c198:	ldr	r2, [r3]
    c19c:	add	r2, r2, #1
    c1a0:	str	r2, [r3]
    c1a4:	cmp	r0, #0
    c1a8:	bne	c12c <pcap_ether_hostton+0x34>
    c1ac:	mov	r3, #0
    c1b0:	b	c1b8 <pcap_ether_hostton+0xc0>
    c1b4:	mov	r3, #0
    c1b8:	mov	r0, r3
    c1bc:	pop	{r4, r5, r6, pc}
    c1c0:	mov	r3, #0
    c1c4:	b	c1b8 <pcap_ether_hostton+0xc0>
    c1c8:	.word	0x00025624
    c1cc:	.word	0x00025610
    c1d0:	.word	0x000255f8
    c1d4:	.word	0x00008884
    c1d8:	.word	0x00008880
    c1dc:	.word	0x00025598

0000c1e0 <__pcap_nametodnaddr>:
    c1e0:	push	{r4, lr}
    c1e4:	mov	r1, r0
    c1e8:	ldr	r0, [pc, #4]	; c1f4 <__pcap_nametodnaddr+0x14>
    c1ec:	add	r0, pc, r0
    c1f0:	bl	22b4 <sf_bpf_error>
    c1f4:	.word	0x00008824

0000c1f8 <find_levels_r>:
    c1f8:	push	{r4, r5, r6, lr}
    c1fc:	ldr	r5, [pc, #128]	; c284 <find_levels_r+0x8c>
    c200:	add	r5, pc, r5
    c204:	ldr	r3, [pc, #124]	; c288 <find_levels_r+0x90>
    c208:	add	r3, pc, r3
    c20c:	ldr	r3, [r3]
    c210:	ldr	r2, [r0, #24]
    c214:	cmp	r2, r3
    c218:	popeq	{r4, r5, r6, pc}
    c21c:	mov	r4, r0
    c220:	str	r3, [r0, #24]
    c224:	mov	r3, #0
    c228:	str	r3, [r0, #100]	; 0x64
    c22c:	ldr	r0, [r0, #60]	; 0x3c
    c230:	cmp	r0, r3
    c234:	moveq	r3, #0
    c238:	beq	c264 <find_levels_r+0x6c>
    c23c:	bl	c1f8 <find_levels_r>
    c240:	ldr	r0, [r4, #84]	; 0x54
    c244:	bl	c1f8 <find_levels_r>
    c248:	ldr	r3, [r4, #84]	; 0x54
    c24c:	ldr	r2, [r4, #60]	; 0x3c
    c250:	ldr	r3, [r3, #36]	; 0x24
    c254:	ldr	r2, [r2, #36]	; 0x24
    c258:	cmp	r3, r2
    c25c:	movlt	r3, r2
    c260:	add	r3, r3, #1
    c264:	str	r3, [r4, #36]	; 0x24
    c268:	ldr	r2, [pc, #28]	; c28c <find_levels_r+0x94>
    c26c:	ldr	r2, [r5, r2]
    c270:	ldr	r2, [r2]
    c274:	ldr	r1, [r2, r3, lsl #2]
    c278:	str	r1, [r4, #100]	; 0x64
    c27c:	str	r4, [r2, r3, lsl #2]
    c280:	pop	{r4, r5, r6, pc}
    c284:	.word	0x00024df8
    c288:	.word	0x00025528
    c28c:	.word	0x000000c8

0000c290 <propedom>:
    c290:	push	{r4, lr}
    c294:	ldr	r3, [r0]
    c298:	lsr	ip, r3, #5
    c29c:	ldr	r1, [r0, #8]
    c2a0:	and	r3, r3, #31
    c2a4:	ldr	r2, [r1, ip, lsl #2]
    c2a8:	mov	lr, #1
    c2ac:	orr	r3, r2, lr, lsl r3
    c2b0:	str	r3, [r1, ip, lsl #2]
    c2b4:	ldr	r3, [r0, #12]
    c2b8:	cmp	r3, #0
    c2bc:	popeq	{r4, pc}
    c2c0:	ldr	r1, [r3, #56]	; 0x38
    c2c4:	ldr	lr, [r0, #8]
    c2c8:	ldr	r3, [pc, #88]	; c328 <propedom+0x98>
    c2cc:	add	r3, pc, r3
    c2d0:	ldr	r2, [r3, #4]
    c2d4:	subs	r2, r2, #1
    c2d8:	popmi	{r4, pc}
    c2dc:	mov	ip, r2
    c2e0:	ldr	r3, [r1], #4
    c2e4:	ldr	r4, [lr], #4
    c2e8:	and	r3, r3, r4
    c2ec:	str	r3, [r1, #-4]
    c2f0:	sub	ip, ip, #1
    c2f4:	cmn	ip, #1
    c2f8:	bne	c2e0 <propedom+0x50>
    c2fc:	ldr	r3, [r0, #12]
    c300:	ldr	r1, [r3, #80]	; 0x50
    c304:	ldr	r0, [r0, #8]
    c308:	ldr	r3, [r1], #4
    c30c:	ldr	ip, [r0], #4
    c310:	and	r3, r3, ip
    c314:	str	r3, [r1, #-4]
    c318:	sub	r2, r2, #1
    c31c:	cmn	r2, #1
    c320:	bne	c308 <propedom+0x78>
    c324:	pop	{r4, pc}
    c328:	.word	0x00025464

0000c32c <atomdef>:
    c32c:	ldr	r3, [r0]
    c330:	cmn	r3, #1
    c334:	beq	c398 <atomdef+0x6c>
    c338:	and	r2, r3, #7
    c33c:	cmp	r2, #7
    c340:	addls	pc, pc, r2, lsl #2
    c344:	b	c38c <atomdef+0x60>
    c348:	b	c394 <atomdef+0x68>
    c34c:	b	c368 <atomdef+0x3c>
    c350:	b	c370 <atomdef+0x44>
    c354:	b	c370 <atomdef+0x44>
    c358:	b	c394 <atomdef+0x68>
    c35c:	b	c38c <atomdef+0x60>
    c360:	b	c38c <atomdef+0x60>
    c364:	b	c378 <atomdef+0x4c>
    c368:	mov	r3, #17
    c36c:	b	c398 <atomdef+0x6c>
    c370:	ldr	r3, [r0, #12]
    c374:	b	c398 <atomdef+0x6c>
    c378:	and	r3, r3, #248	; 0xf8
    c37c:	cmp	r3, #0
    c380:	moveq	r3, #17
    c384:	movne	r3, #16
    c388:	b	c398 <atomdef+0x6c>
    c38c:	mvn	r3, #0
    c390:	b	c398 <atomdef+0x6c>
    c394:	mov	r3, #16
    c398:	mov	r0, r3
    c39c:	bx	lr

0000c3a0 <F>:
    c3a0:	push	{r4, r5, lr}
    c3a4:	mov	lr, r0
    c3a8:	ldr	r5, [pc, #248]	; c4a8 <F+0x108>
    c3ac:	add	r5, pc, r5
    c3b0:	eor	r3, r0, r2, lsl #8
    c3b4:	eor	r3, r3, r1, lsl #4
    c3b8:	ldr	r4, [pc, #236]	; c4ac <F+0x10c>
    c3bc:	umull	r0, r4, r4, r3
    c3c0:	lsr	r4, r4, #7
    c3c4:	mov	r0, #213	; 0xd5
    c3c8:	mul	r4, r0, r4
    c3cc:	sub	r4, r3, r4
    c3d0:	ldr	r3, [pc, #216]	; c4b0 <F+0x110>
    c3d4:	add	r3, pc, r3
    c3d8:	add	r3, r3, r4, lsl #2
    c3dc:	ldr	r3, [r3, #8]
    c3e0:	cmp	r3, #0
    c3e4:	bne	c45c <F+0xbc>
    c3e8:	ldr	r3, [pc, #196]	; c4b4 <F+0x114>
    c3ec:	add	r3, pc, r3
    c3f0:	ldr	r0, [r3, #860]	; 0x35c
    c3f4:	add	r0, r0, #1
    c3f8:	str	r0, [r3, #860]	; 0x35c
    c3fc:	tst	lr, #224	; 0xe0
    c400:	bne	c410 <F+0x70>
    c404:	and	r3, lr, #7
    c408:	cmp	r3, #1
    c40c:	bls	c488 <F+0xe8>
    c410:	ldr	r3, [pc, #160]	; c4b8 <F+0x118>
    c414:	ldr	ip, [r5, r3]
    c418:	ldr	r3, [ip]
    c41c:	add	r5, r3, #20
    c420:	str	r5, [ip]
    c424:	str	r0, [r3, #12]
    c428:	str	lr, [r3]
    c42c:	str	r1, [r3, #4]
    c430:	str	r2, [r3, #8]
    c434:	ldr	r2, [pc, #128]	; c4bc <F+0x11c>
    c438:	add	r2, pc, r2
    c43c:	add	r4, r2, r4, lsl #2
    c440:	ldr	r2, [r4, #8]
    c444:	str	r2, [r3, #16]
    c448:	str	r3, [r4, #8]
    c44c:	pop	{r4, r5, pc}
    c450:	ldr	r3, [r3, #16]
    c454:	cmp	r3, #0
    c458:	beq	c3e8 <F+0x48>
    c45c:	ldr	ip, [r3]
    c460:	cmp	lr, ip
    c464:	bne	c450 <F+0xb0>
    c468:	ldr	r0, [r3, #4]
    c46c:	cmp	r1, r0
    c470:	bne	c450 <F+0xb0>
    c474:	ldr	r0, [r3, #8]
    c478:	cmp	r2, r0
    c47c:	bne	c450 <F+0xb0>
    c480:	ldr	r0, [r3, #12]
    c484:	pop	{r4, r5, pc}
    c488:	ldr	r3, [pc, #48]	; c4c0 <F+0x120>
    c48c:	ldr	r3, [r5, r3]
    c490:	ldr	r3, [r3]
    c494:	add	ip, r3, r0, lsl #3
    c498:	str	r1, [ip, #4]
    c49c:	mov	ip, #1
    c4a0:	str	ip, [r3, r0, lsl #3]
    c4a4:	b	c410 <F+0x70>
    c4a8:	.word	0x00024c4c
    c4ac:	.word	0x99d722db
    c4b0:	.word	0x0002535c
    c4b4:	.word	0x00025344
    c4b8:	.word	0x000000f0
    c4bc:	.word	0x000252f8
    c4c0:	.word	0x00000108

0000c4c4 <use_conflict>:
    c4c4:	ldr	r2, [r1, #128]	; 0x80
    c4c8:	cmp	r2, #0
    c4cc:	beq	c524 <use_conflict+0x60>
    c4d0:	push	{r4, lr}
    c4d4:	add	r0, r0, #136	; 0x88
    c4d8:	add	r1, r1, #136	; 0x88
    c4dc:	mov	r3, #0
    c4e0:	mov	ip, #1
    c4e4:	b	c4fc <use_conflict+0x38>
    c4e8:	add	r3, r3, #1
    c4ec:	add	r0, r0, #4
    c4f0:	add	r1, r1, #4
    c4f4:	cmp	r3, #18
    c4f8:	beq	c51c <use_conflict+0x58>
    c4fc:	ands	lr, r2, ip, lsl r3
    c500:	beq	c4e8 <use_conflict+0x24>
    c504:	ldr	r4, [r0]
    c508:	ldr	lr, [r1]
    c50c:	cmp	r4, lr
    c510:	beq	c4e8 <use_conflict+0x24>
    c514:	mov	r0, #1
    c518:	pop	{r4, pc}
    c51c:	mov	r0, #0
    c520:	pop	{r4, pc}
    c524:	mov	r0, #0
    c528:	bx	lr

0000c52c <find_inedges>:
    c52c:	push	{lr}		; (str lr, [sp, #-4]!)
    c530:	ldr	lr, [pc, #160]	; c5d8 <find_inedges+0xac>
    c534:	add	lr, pc, lr
    c538:	ldr	r3, [pc, #156]	; c5dc <find_inedges+0xb0>
    c53c:	add	r3, pc, r3
    c540:	ldr	r1, [r3, #864]	; 0x360
    c544:	cmp	r1, #0
    c548:	ble	c570 <find_inedges+0x44>
    c54c:	ldr	r3, [pc, #140]	; c5e0 <find_inedges+0xb4>
    c550:	ldr	r3, [lr, r3]
    c554:	ldr	r3, [r3]
    c558:	add	r1, r3, r1, lsl #2
    c55c:	mov	ip, #0
    c560:	ldr	r2, [r3], #4
    c564:	str	ip, [r2, #112]	; 0x70
    c568:	cmp	r3, r1
    c56c:	bne	c560 <find_inedges+0x34>
    c570:	ldr	r0, [r0, #36]	; 0x24
    c574:	cmp	r0, #0
    c578:	pople	{pc}		; (ldrle pc, [sp], #4)
    c57c:	ldr	r3, [pc, #96]	; c5e4 <find_inedges+0xb8>
    c580:	ldr	r3, [lr, r3]
    c584:	ldr	ip, [r3]
    c588:	add	r0, ip, r0, lsl #2
    c58c:	ldr	r3, [r0], #-4
    c590:	cmp	r3, #0
    c594:	beq	c5cc <find_inedges+0xa0>
    c598:	ldr	r2, [r3, #60]	; 0x3c
    c59c:	ldr	r1, [r2, #112]	; 0x70
    c5a0:	str	r1, [r3, #68]	; 0x44
    c5a4:	add	r1, r3, #48	; 0x30
    c5a8:	str	r1, [r2, #112]	; 0x70
    c5ac:	ldr	r2, [r3, #84]	; 0x54
    c5b0:	ldr	r1, [r2, #112]	; 0x70
    c5b4:	str	r1, [r3, #92]	; 0x5c
    c5b8:	add	r1, r3, #72	; 0x48
    c5bc:	str	r1, [r2, #112]	; 0x70
    c5c0:	ldr	r3, [r3, #100]	; 0x64
    c5c4:	cmp	r3, #0
    c5c8:	bne	c598 <find_inedges+0x6c>
    c5cc:	cmp	r0, ip
    c5d0:	bne	c58c <find_inedges+0x60>
    c5d4:	pop	{pc}		; (ldr pc, [sp], #4)
    c5d8:	.word	0x00024ac4
    c5dc:	.word	0x000251f4
    c5e0:	.word	0x000000d0
    c5e4:	.word	0x000000c8

0000c5e8 <make_marks>:
    c5e8:	ldr	r3, [pc, #64]	; c630 <make_marks+0x48>
    c5ec:	add	r3, pc, r3
    c5f0:	ldr	r3, [r3]
    c5f4:	ldr	r2, [r0, #24]
    c5f8:	cmp	r2, r3
    c5fc:	bxeq	lr
    c600:	str	r3, [r0, #24]
    c604:	ldr	r3, [r0, #8]
    c608:	and	r3, r3, #7
    c60c:	cmp	r3, #6
    c610:	bxeq	lr
    c614:	push	{r4, lr}
    c618:	mov	r4, r0
    c61c:	ldr	r0, [r0, #60]	; 0x3c
    c620:	bl	c5e8 <make_marks>
    c624:	ldr	r0, [r4, #84]	; 0x54
    c628:	bl	c5e8 <make_marks>
    c62c:	pop	{r4, pc}
    c630:	.word	0x00025144

0000c634 <slength>:
    c634:	subs	r3, r0, #0
    c638:	beq	c65c <slength+0x28>
    c63c:	mov	r0, #0
    c640:	ldr	r2, [r3]
    c644:	cmn	r2, #1
    c648:	addne	r0, r0, #1
    c64c:	ldr	r3, [r3, #16]
    c650:	cmp	r3, #0
    c654:	bne	c640 <slength+0xc>
    c658:	bx	lr
    c65c:	mov	r0, #0
    c660:	bx	lr

0000c664 <count_blocks>:
    c664:	push	{r4, r5, r6, lr}
    c668:	subs	r4, r0, #0
    c66c:	beq	c6ac <count_blocks+0x48>
    c670:	ldr	r3, [pc, #68]	; c6bc <count_blocks+0x58>
    c674:	add	r3, pc, r3
    c678:	ldr	r3, [r3]
    c67c:	ldr	r2, [r4, #24]
    c680:	cmp	r2, r3
    c684:	beq	c6b4 <count_blocks+0x50>
    c688:	str	r3, [r4, #24]
    c68c:	ldr	r0, [r4, #60]	; 0x3c
    c690:	bl	c664 <count_blocks>
    c694:	mov	r5, r0
    c698:	ldr	r0, [r4, #84]	; 0x54
    c69c:	bl	c664 <count_blocks>
    c6a0:	add	r0, r5, r0
    c6a4:	add	r0, r0, #1
    c6a8:	pop	{r4, r5, r6, pc}
    c6ac:	mov	r0, #0
    c6b0:	pop	{r4, r5, r6, pc}
    c6b4:	mov	r0, #0
    c6b8:	pop	{r4, r5, r6, pc}
    c6bc:	.word	0x000250bc

0000c6c0 <number_blks_r>:
    c6c0:	push	{r4, lr}
    c6c4:	ldr	r3, [pc, #96]	; c72c <number_blks_r+0x6c>
    c6c8:	add	r3, pc, r3
    c6cc:	subs	r4, r0, #0
    c6d0:	popeq	{r4, pc}
    c6d4:	ldr	r2, [pc, #84]	; c730 <number_blks_r+0x70>
    c6d8:	add	r2, pc, r2
    c6dc:	ldr	r2, [r2]
    c6e0:	ldr	r1, [r4, #24]
    c6e4:	cmp	r1, r2
    c6e8:	popeq	{r4, pc}
    c6ec:	str	r2, [r4, #24]
    c6f0:	ldr	r1, [pc, #60]	; c734 <number_blks_r+0x74>
    c6f4:	add	r1, pc, r1
    c6f8:	ldr	r2, [r1, #864]	; 0x360
    c6fc:	add	r0, r2, #1
    c700:	str	r0, [r1, #864]	; 0x360
    c704:	str	r2, [r4]
    c708:	ldr	r1, [pc, #40]	; c738 <number_blks_r+0x78>
    c70c:	ldr	r3, [r3, r1]
    c710:	ldr	r3, [r3]
    c714:	str	r4, [r3, r2, lsl #2]
    c718:	ldr	r0, [r4, #60]	; 0x3c
    c71c:	bl	c6c0 <number_blks_r>
    c720:	ldr	r0, [r4, #84]	; 0x54
    c724:	bl	c6c0 <number_blks_r>
    c728:	pop	{r4, pc}
    c72c:	.word	0x00024930
    c730:	.word	0x00025058
    c734:	.word	0x0002503c
    c738:	.word	0x000000d0

0000c73c <count_stmts>:
    c73c:	push	{r4, r5, r6, lr}
    c740:	subs	r5, r0, #0
    c744:	beq	c7a0 <count_stmts+0x64>
    c748:	ldr	r3, [pc, #96]	; c7b0 <count_stmts+0x74>
    c74c:	add	r3, pc, r3
    c750:	ldr	r3, [r3]
    c754:	ldr	r2, [r5, #24]
    c758:	cmp	r2, r3
    c75c:	beq	c7a8 <count_stmts+0x6c>
    c760:	str	r3, [r5, #24]
    c764:	ldr	r0, [r5, #60]	; 0x3c
    c768:	bl	c73c <count_stmts>
    c76c:	mov	r4, r0
    c770:	ldr	r0, [r5, #84]	; 0x54
    c774:	bl	c73c <count_stmts>
    c778:	add	r4, r4, r0
    c77c:	ldr	r0, [r5, #4]
    c780:	bl	c634 <slength>
    c784:	add	r0, r4, r0
    c788:	add	r0, r0, #1
    c78c:	ldr	r4, [r5, #28]
    c790:	add	r0, r0, r4
    c794:	ldr	r3, [r5, #32]
    c798:	add	r0, r0, r3
    c79c:	pop	{r4, r5, r6, pc}
    c7a0:	mov	r0, #0
    c7a4:	pop	{r4, r5, r6, pc}
    c7a8:	mov	r0, #0
    c7ac:	pop	{r4, r5, r6, pc}
    c7b0:	.word	0x00024fe4

0000c7b4 <atomuse>:
    c7b4:	ldr	r3, [r0]
    c7b8:	cmn	r3, #1
    c7bc:	beq	c868 <atomuse+0xb4>
    c7c0:	and	r2, r3, #7
    c7c4:	cmp	r2, #7
    c7c8:	addls	pc, pc, r2, lsl #2
    c7cc:	b	c85c <atomuse+0xa8>
    c7d0:	b	c814 <atomuse+0x60>
    c7d4:	b	c814 <atomuse+0x60>
    c7d8:	b	c864 <atomuse+0xb0>
    c7dc:	b	c7f0 <atomuse+0x3c>
    c7e0:	b	c834 <atomuse+0x80>
    c7e4:	b	c834 <atomuse+0x80>
    c7e8:	b	c7f8 <atomuse+0x44>
    c7ec:	b	c848 <atomuse+0x94>
    c7f0:	mov	r3, #17
    c7f4:	b	c868 <atomuse+0xb4>
    c7f8:	and	r3, r3, #24
    c7fc:	cmp	r3, #16
    c800:	beq	c868 <atomuse+0xb4>
    c804:	cmp	r3, #8
    c808:	moveq	r3, #17
    c80c:	mvnne	r3, #0
    c810:	b	c868 <atomuse+0xb4>
    c814:	and	r3, r3, #224	; 0xe0
    c818:	cmp	r3, #64	; 0x40
    c81c:	moveq	r3, #17
    c820:	beq	c868 <atomuse+0xb4>
    c824:	cmp	r3, #96	; 0x60
    c828:	bne	c870 <atomuse+0xbc>
    c82c:	ldr	r3, [r0, #12]
    c830:	b	c868 <atomuse+0xb4>
    c834:	and	r3, r3, #8
    c838:	cmp	r3, #0
    c83c:	movne	r3, #18
    c840:	moveq	r3, #16
    c844:	b	c868 <atomuse+0xb4>
    c848:	and	r3, r3, #248	; 0xf8
    c84c:	cmp	r3, #128	; 0x80
    c850:	moveq	r3, #17
    c854:	movne	r3, #16
    c858:	b	c868 <atomuse+0xb4>
    c85c:	push	{r4, lr}
    c860:	bl	f18 <abort@plt>
    c864:	mov	r3, #16
    c868:	mov	r0, r3
    c86c:	bx	lr
    c870:	mvn	r3, #0
    c874:	b	c868 <atomuse+0xb4>

0000c878 <deadstmt>:
    c878:	push	{r4, r5, r6, lr}
    c87c:	mov	r5, r0
    c880:	mov	r4, r1
    c884:	bl	c7b4 <atomuse>
    c888:	cmp	r0, #0
    c88c:	blt	c8a4 <deadstmt+0x2c>
    c890:	cmp	r0, #18
    c894:	mov	r3, #0
    c898:	streq	r3, [r4, #68]	; 0x44
    c89c:	streq	r3, [r4, #64]	; 0x40
    c8a0:	strne	r3, [r4, r0, lsl #2]
    c8a4:	mov	r0, r5
    c8a8:	bl	c32c <atomdef>
    c8ac:	cmp	r0, #0
    c8b0:	poplt	{r4, r5, r6, pc}
    c8b4:	ldr	r3, [r4, r0, lsl #2]
    c8b8:	cmp	r3, #0
    c8bc:	beq	c8d8 <deadstmt+0x60>
    c8c0:	mov	r1, #0
    c8c4:	ldr	r2, [pc, #20]	; c8e0 <deadstmt+0x68>
    c8c8:	add	r2, pc, r2
    c8cc:	str	r1, [r2, #868]	; 0x364
    c8d0:	mvn	r2, #0
    c8d4:	str	r2, [r3]
    c8d8:	str	r5, [r4, r0, lsl #2]
    c8dc:	pop	{r4, r5, r6, pc}
    c8e0:	.word	0x00024e68

0000c8e4 <fold_op>:
    c8e4:	push	{r4, lr}
    c8e8:	mov	r4, r0
    c8ec:	ldr	r3, [pc, #236]	; c9e0 <fold_op+0xfc>
    c8f0:	add	r3, pc, r3
    c8f4:	ldr	r0, [pc, #232]	; c9e4 <fold_op+0x100>
    c8f8:	ldr	r3, [r3, r0]
    c8fc:	ldr	r3, [r3]
    c900:	add	r1, r3, r1, lsl #3
    c904:	ldr	r0, [r1, #4]
    c908:	add	r2, r3, r2, lsl #3
    c90c:	ldr	r1, [r2, #4]
    c910:	ldr	r3, [r4]
    c914:	and	r3, r3, #240	; 0xf0
    c918:	cmp	r3, #64	; 0x40
    c91c:	beq	c9c8 <fold_op+0xe4>
    c920:	bgt	c978 <fold_op+0x94>
    c924:	cmp	r3, #16
    c928:	beq	c9ac <fold_op+0xc8>
    c92c:	ble	c950 <fold_op+0x6c>
    c930:	cmp	r3, #32
    c934:	beq	c9b4 <fold_op+0xd0>
    c938:	cmp	r3, #48	; 0x30
    c93c:	bne	c9a8 <fold_op+0xc4>
    c940:	cmp	r1, #0
    c944:	beq	c9bc <fold_op+0xd8>
    c948:	bl	12e70 <__udivsi3>
    c94c:	b	c95c <fold_op+0x78>
    c950:	cmp	r3, #0
    c954:	addeq	r0, r0, r1
    c958:	bne	c9a8 <fold_op+0xc4>
    c95c:	str	r0, [r4, #12]
    c960:	mov	r3, #0
    c964:	str	r3, [r4]
    c968:	ldr	r2, [pc, #120]	; c9e8 <fold_op+0x104>
    c96c:	add	r2, pc, r2
    c970:	str	r3, [r2, #868]	; 0x364
    c974:	pop	{r4, pc}
    c978:	cmp	r3, #96	; 0x60
    c97c:	beq	c9d0 <fold_op+0xec>
    c980:	ble	c99c <fold_op+0xb8>
    c984:	cmp	r3, #112	; 0x70
    c988:	beq	c9d8 <fold_op+0xf4>
    c98c:	cmp	r3, #128	; 0x80
    c990:	rsbeq	r0, r0, #0
    c994:	beq	c95c <fold_op+0x78>
    c998:	b	c9a8 <fold_op+0xc4>
    c99c:	cmp	r3, #80	; 0x50
    c9a0:	andeq	r0, r0, r1
    c9a4:	beq	c95c <fold_op+0x78>
    c9a8:	bl	f18 <abort@plt>
    c9ac:	sub	r0, r0, r1
    c9b0:	b	c95c <fold_op+0x78>
    c9b4:	mul	r0, r1, r0
    c9b8:	b	c95c <fold_op+0x78>
    c9bc:	ldr	r0, [pc, #40]	; c9ec <fold_op+0x108>
    c9c0:	add	r0, pc, r0
    c9c4:	bl	22b4 <sf_bpf_error>
    c9c8:	orr	r0, r0, r1
    c9cc:	b	c95c <fold_op+0x78>
    c9d0:	lsl	r0, r0, r1
    c9d4:	b	c95c <fold_op+0x78>
    c9d8:	lsr	r0, r0, r1
    c9dc:	b	c95c <fold_op+0x78>
    c9e0:	.word	0x00024708
    c9e4:	.word	0x00000108
    c9e8:	.word	0x00024dc4
    c9ec:	.word	0x00008134

0000c9f0 <opt_j>:
    c9f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c9f4:	sub	sp, sp, #28
    c9f8:	ldr	r5, [pc, #432]	; cbb0 <opt_j+0x1c0>
    c9fc:	add	r5, pc, r5
    ca00:	ldr	r3, [r0, #12]
    ca04:	ldr	r4, [r3, #60]	; 0x3c
    ca08:	cmp	r4, #0
    ca0c:	beq	cba8 <opt_j+0x1b8>
    ca10:	mov	r9, r0
    ca14:	ldr	r3, [r3, #84]	; 0x54
    ca18:	cmp	r4, r3
    ca1c:	beq	ca50 <opt_j+0x60>
    ca20:	ldr	r3, [pc, #396]	; cbb4 <opt_j+0x1c4>
    ca24:	add	r3, pc, r3
    ca28:	ldr	r3, [r3, #4]
    ca2c:	str	r3, [sp, #16]
    ca30:	ldr	r3, [pc, #384]	; cbb8 <opt_j+0x1c8>
    ca34:	ldr	r3, [r5, r3]
    ca38:	ldr	fp, [r3]
    ca3c:	mov	sl, #1
    ca40:	ldr	r3, [pc, #372]	; cbbc <opt_j+0x1cc>
    ca44:	add	r3, pc, r3
    ca48:	str	r3, [sp, #20]
    ca4c:	b	cb34 <opt_j+0x144>
    ca50:	mov	r1, r4
    ca54:	ldr	r0, [r0, #16]
    ca58:	bl	c4c4 <use_conflict>
    ca5c:	cmp	r0, #0
    ca60:	bne	ca20 <opt_j+0x30>
    ca64:	mov	r2, #0
    ca68:	ldr	r3, [pc, #336]	; cbc0 <opt_j+0x1d0>
    ca6c:	add	r3, pc, r3
    ca70:	str	r2, [r3, #868]	; 0x364
    ca74:	str	r4, [r9, #12]
    ca78:	b	ca20 <opt_j+0x30>
    ca7c:	cmp	r1, #0
    ca80:	ldrne	r6, [r5, #60]	; 0x3c
    ca84:	ldreq	r6, [r5, #84]	; 0x54
    ca88:	cmp	r6, #0
    ca8c:	beq	caa4 <opt_j+0xb4>
    ca90:	mov	r1, r6
    ca94:	ldr	r0, [r9, #16]
    ca98:	bl	c4c4 <use_conflict>
    ca9c:	cmp	r0, #0
    caa0:	beq	cb18 <opt_j+0x128>
    caa4:	cmp	r4, #0
    caa8:	beq	cb58 <opt_j+0x168>
    caac:	mov	r0, r4
    cab0:	bl	ef4 <ffs@plt>
    cab4:	sub	r0, r0, #1
    cab8:	bic	r4, r4, sl, lsl r0
    cabc:	add	r0, r0, r8
    cac0:	ldr	r2, [fp, r0, lsl #2]
    cac4:	ldr	r3, [r2, #4]
    cac8:	cmp	r3, #0
    cacc:	rsblt	r3, r3, #0
    cad0:	movlt	r1, #0
    cad4:	movge	r1, sl
    cad8:	cmp	r7, r3
    cadc:	bne	caa4 <opt_j+0xb4>
    cae0:	ldr	r3, [r2, #16]
    cae4:	ldr	r0, [r5, #200]	; 0xc8
    cae8:	ldr	r2, [r3, #200]	; 0xc8
    caec:	cmp	r0, r2
    caf0:	bne	caa4 <opt_j+0xb4>
    caf4:	ldr	r2, [r5, #132]	; 0x84
    caf8:	ldr	r3, [r3, #132]	; 0x84
    cafc:	cmp	r2, r3
    cb00:	beq	ca7c <opt_j+0x8c>
    cb04:	ldr	r3, [sp, #4]
    cb08:	tst	r3, r1
    cb0c:	beq	caa4 <opt_j+0xb4>
    cb10:	ldr	r6, [r5, #84]	; 0x54
    cb14:	b	ca88 <opt_j+0x98>
    cb18:	ldr	r3, [sp, #20]
    cb1c:	mov	r2, #0
    cb20:	str	r2, [r3, #868]	; 0x364
    cb24:	str	r6, [r9, #12]
    cb28:	ldr	r3, [r6, #60]	; 0x3c
    cb2c:	cmp	r3, r2
    cb30:	beq	cba8 <opt_j+0x1b8>
    cb34:	ldr	r3, [sp, #16]
    cb38:	cmp	r3, #0
    cb3c:	ble	cba8 <opt_j+0x1b8>
    cb40:	ldr	r3, [r9, #8]
    cb44:	sub	r3, r3, #4
    cb48:	str	r3, [sp, #12]
    cb4c:	mov	r3, #0
    cb50:	str	r3, [sp, #8]
    cb54:	b	cb70 <opt_j+0x180>
    cb58:	ldr	r3, [sp, #8]
    cb5c:	add	r3, r3, #1
    cb60:	str	r3, [sp, #8]
    cb64:	ldr	r2, [sp, #16]
    cb68:	cmp	r3, r2
    cb6c:	beq	cba8 <opt_j+0x1b8>
    cb70:	ldr	r3, [sp, #12]
    cb74:	ldr	r4, [r3, #4]!
    cb78:	str	r3, [sp, #12]
    cb7c:	cmp	r4, #0
    cb80:	beq	cb58 <opt_j+0x168>
    cb84:	ldr	r3, [sp, #8]
    cb88:	lsl	r8, r3, #5
    cb8c:	ldr	r5, [r9, #12]
    cb90:	ldr	r7, [r5, #8]
    cb94:	cmp	r7, #21
    cb98:	movne	r3, #0
    cb9c:	moveq	r3, #1
    cba0:	str	r3, [sp, #4]
    cba4:	b	caac <opt_j+0xbc>
    cba8:	add	sp, sp, #28
    cbac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cbb0:	.word	0x000245fc
    cbb4:	.word	0x00024d0c
    cbb8:	.word	0x000000e8
    cbbc:	.word	0x00024cec
    cbc0:	.word	0x00024cc4

0000cbc4 <opt_loop>:
    cbc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cbc8:	sub	sp, sp, #164	; 0xa4
    cbcc:	str	r0, [sp, #12]
    cbd0:	str	r1, [sp, #32]
    cbd4:	ldr	fp, [pc, #4044]	; dba8 <opt_loop+0xfe4>
    cbd8:	add	fp, pc, fp
    cbdc:	ldr	r3, [pc, #4040]	; dbac <opt_loop+0xfe8>
    cbe0:	add	r3, pc, r3
    cbe4:	str	r3, [sp, #44]	; 0x2c
    cbe8:	mov	sl, #1
    cbec:	str	sl, [sp, #4]
    cbf0:	ldr	r3, [pc, #4024]	; dbb0 <opt_loop+0xfec>
    cbf4:	ldr	r3, [fp, r3]
    cbf8:	str	r3, [sp, #48]	; 0x30
    cbfc:	ldr	r3, [pc, #4016]	; dbb4 <opt_loop+0xff0>
    cc00:	add	r3, pc, r3
    cc04:	str	r3, [sp, #76]	; 0x4c
    cc08:	ldr	r3, [pc, #4008]	; dbb8 <opt_loop+0xff4>
    cc0c:	add	r3, pc, r3
    cc10:	str	r3, [sp, #80]	; 0x50
    cc14:	add	r3, r3, #8
    cc18:	str	r3, [sp, #84]	; 0x54
    cc1c:	ldr	r4, [sp, #44]	; 0x2c
    cc20:	ldr	r2, [sp, #4]
    cc24:	str	r2, [r4, #868]	; 0x364
    cc28:	ldr	r8, [r4, #864]	; 0x360
    cc2c:	lsl	r2, r8, #2
    cc30:	mov	r1, #0
    cc34:	ldr	r3, [sp, #48]	; 0x30
    cc38:	ldr	r0, [r3]
    cc3c:	bl	e88 <memset@plt>
    cc40:	ldr	r3, [r4]
    cc44:	add	r3, r3, #1
    cc48:	str	r3, [r4]
    cc4c:	ldr	r0, [sp, #12]
    cc50:	bl	c1f8 <find_levels_r>
    cc54:	ldr	r2, [r4, #872]	; 0x368
    cc58:	ldr	r4, [r4, #876]	; 0x36c
    cc5c:	mul	r8, r8, r4
    cc60:	subs	r3, r8, #1
    cc64:	bmi	cc7c <opt_loop+0xb8>
    cc68:	mvn	r1, #0
    cc6c:	str	r1, [r2], #4
    cc70:	sub	r3, r3, #1
    cc74:	cmn	r3, #1
    cc78:	bne	cc6c <opt_loop+0xa8>
    cc7c:	subs	r4, r4, #1
    cc80:	bmi	ccac <opt_loop+0xe8>
    cc84:	lsl	r2, r4, #2
    cc88:	mov	r3, r4
    cc8c:	mov	r0, #0
    cc90:	ldr	ip, [sp, #12]
    cc94:	ldr	r1, [ip, #104]	; 0x68
    cc98:	str	r0, [r1, r2]
    cc9c:	sub	r3, r3, #1
    cca0:	sub	r2, r2, #4
    cca4:	cmn	r3, #1
    cca8:	bne	cc94 <opt_loop+0xd0>
    ccac:	ldr	r3, [sp, #12]
    ccb0:	ldr	ip, [r3, #36]	; 0x24
    ccb4:	cmp	ip, #0
    ccb8:	blt	cd84 <opt_loop+0x1c0>
    ccbc:	lsl	lr, ip, #2
    ccc0:	ldr	r3, [pc, #3816]	; dbb0 <opt_loop+0xfec>
    ccc4:	ldr	r5, [fp, r3]
    ccc8:	b	cd70 <opt_loop+0x1ac>
    cccc:	ldr	r1, [r1, #100]	; 0x64
    ccd0:	cmp	r1, #0
    ccd4:	beq	cd60 <opt_loop+0x19c>
    ccd8:	ldr	r3, [r1]
    ccdc:	lsr	r6, r3, #5
    cce0:	ldr	r0, [r1, #104]	; 0x68
    cce4:	and	r3, r3, #31
    cce8:	ldr	r2, [r0, r6, lsl #2]
    ccec:	orr	r3, r2, sl, lsl r3
    ccf0:	str	r3, [r0, r6, lsl #2]
    ccf4:	ldr	r3, [r1, #60]	; 0x3c
    ccf8:	cmp	r3, #0
    ccfc:	beq	cccc <opt_loop+0x108>
    cd00:	ldr	r0, [r3, #104]	; 0x68
    cd04:	ldr	r7, [r1, #104]	; 0x68
    cd08:	cmp	r4, #0
    cd0c:	blt	cccc <opt_loop+0x108>
    cd10:	mov	r6, r4
    cd14:	ldr	r3, [r0], #4
    cd18:	ldr	r2, [r7], #4
    cd1c:	and	r3, r3, r2
    cd20:	str	r3, [r0, #-4]
    cd24:	sub	r6, r6, #1
    cd28:	cmn	r6, #1
    cd2c:	bne	cd14 <opt_loop+0x150>
    cd30:	ldr	r3, [r1, #84]	; 0x54
    cd34:	ldr	r6, [r3, #104]	; 0x68
    cd38:	ldr	r7, [r1, #104]	; 0x68
    cd3c:	mov	r0, r4
    cd40:	ldr	r3, [r6], #4
    cd44:	ldr	r2, [r7], #4
    cd48:	and	r3, r3, r2
    cd4c:	str	r3, [r6, #-4]
    cd50:	sub	r0, r0, #1
    cd54:	cmn	r0, #1
    cd58:	bne	cd40 <opt_loop+0x17c>
    cd5c:	b	cccc <opt_loop+0x108>
    cd60:	sub	ip, ip, #1
    cd64:	sub	lr, lr, #4
    cd68:	cmn	ip, #1
    cd6c:	beq	cd84 <opt_loop+0x1c0>
    cd70:	ldr	r3, [r5]
    cd74:	ldr	r1, [r3, lr]
    cd78:	cmp	r1, #0
    cd7c:	bne	ccd8 <opt_loop+0x114>
    cd80:	b	cd60 <opt_loop+0x19c>
    cd84:	lsl	r2, r8, #2
    cd88:	mov	r1, #0
    cd8c:	ldr	r3, [sp, #76]	; 0x4c
    cd90:	ldr	r0, [r3, #880]	; 0x370
    cd94:	bl	e88 <memset@plt>
    cd98:	ldr	r3, [sp, #12]
    cd9c:	ldr	r3, [r3, #36]	; 0x24
    cda0:	mov	r5, r3
    cda4:	str	r3, [sp, #8]
    cda8:	cmp	r3, #0
    cdac:	blt	cff8 <opt_loop+0x434>
    cdb0:	lsl	ip, r3, #2
    cdb4:	ldr	r3, [pc, #3572]	; dbb0 <opt_loop+0xfec>
    cdb8:	ldr	lr, [fp, r3]
    cdbc:	b	ce64 <opt_loop+0x2a0>
    cdc0:	ldr	r0, [r0, #100]	; 0x64
    cdc4:	cmp	r0, #0
    cdc8:	beq	ce54 <opt_loop+0x290>
    cdcc:	ldr	r3, [r0]
    cdd0:	lsr	r6, r3, #5
    cdd4:	ldr	r1, [r0, #108]	; 0x6c
    cdd8:	and	r3, r3, #31
    cddc:	ldr	r2, [r1, r6, lsl #2]
    cde0:	orr	r3, r2, sl, lsl r3
    cde4:	str	r3, [r1, r6, lsl #2]
    cde8:	ldr	r3, [r0, #60]	; 0x3c
    cdec:	cmp	r3, #0
    cdf0:	beq	cdc0 <opt_loop+0x1fc>
    cdf4:	ldr	r1, [r3, #108]	; 0x6c
    cdf8:	ldr	r7, [r0, #108]	; 0x6c
    cdfc:	cmp	r4, #0
    ce00:	blt	cdc0 <opt_loop+0x1fc>
    ce04:	mov	r6, r4
    ce08:	ldr	r3, [r1], #4
    ce0c:	ldr	r2, [r7], #4
    ce10:	orr	r3, r3, r2
    ce14:	str	r3, [r1, #-4]
    ce18:	sub	r6, r6, #1
    ce1c:	cmn	r6, #1
    ce20:	bne	ce08 <opt_loop+0x244>
    ce24:	ldr	r3, [r0, #84]	; 0x54
    ce28:	ldr	r6, [r3, #108]	; 0x6c
    ce2c:	ldr	r7, [r0, #108]	; 0x6c
    ce30:	mov	r1, r4
    ce34:	ldr	r3, [r6], #4
    ce38:	ldr	r2, [r7], #4
    ce3c:	orr	r3, r3, r2
    ce40:	str	r3, [r6, #-4]
    ce44:	sub	r1, r1, #1
    ce48:	cmn	r1, #1
    ce4c:	bne	ce34 <opt_loop+0x270>
    ce50:	b	cdc0 <opt_loop+0x1fc>
    ce54:	sub	r5, r5, #1
    ce58:	sub	ip, ip, #4
    ce5c:	cmn	r5, #1
    ce60:	beq	ce78 <opt_loop+0x2b4>
    ce64:	ldr	r3, [lr]
    ce68:	ldr	r0, [r3, ip]
    ce6c:	cmp	r0, #0
    ce70:	bne	cdcc <opt_loop+0x208>
    ce74:	b	ce54 <opt_loop+0x290>
    ce78:	ldr	r3, [sp, #12]
    ce7c:	ldr	r3, [r3, #36]	; 0x24
    ce80:	mov	r2, r3
    ce84:	str	r3, [sp, #8]
    ce88:	cmp	r3, #0
    ce8c:	blt	cff8 <opt_loop+0x434>
    ce90:	ldr	r3, [pc, #3352]	; dbb0 <opt_loop+0xfec>
    ce94:	ldr	r3, [fp, r3]
    ce98:	ldr	r3, [r3]
    ce9c:	add	r3, r3, r2, lsl #2
    cea0:	str	r3, [sp]
    cea4:	str	fp, [sp, #16]
    cea8:	mov	fp, r2
    ceac:	b	cfdc <opt_loop+0x418>
    ceb0:	tst	r5, #131072	; 0x20000
    ceb4:	orreq	r6, r6, #131072	; 0x20000
    ceb8:	tst	r5, #65536	; 0x10000
    cebc:	orreq	r6, r6, #65536	; 0x10000
    cec0:	mov	r0, r8
    cec4:	bl	c32c <atomdef>
    cec8:	cmp	r0, #0
    cecc:	blt	cee0 <opt_loop+0x31c>
    ced0:	lsl	r0, sl, r0
    ced4:	tst	r0, r6
    ced8:	orreq	r7, r7, r0
    cedc:	orr	r5, r5, r0
    cee0:	ldr	r4, [r4, #16]
    cee4:	cmp	r4, #0
    cee8:	beq	cf3c <opt_loop+0x378>
    ceec:	ldr	r3, [r4]
    cef0:	cmn	r3, #1
    cef4:	beq	cee0 <opt_loop+0x31c>
    cef8:	mov	r8, r4
    cefc:	mov	r0, r4
    cf00:	bl	c7b4 <atomuse>
    cf04:	cmp	r0, #0
    cf08:	blt	cec0 <opt_loop+0x2fc>
    cf0c:	cmp	r0, #18
    cf10:	beq	ceb0 <opt_loop+0x2ec>
    cf14:	cmp	r0, #17
    cf18:	bgt	cf2c <opt_loop+0x368>
    cf1c:	lsl	r0, sl, r0
    cf20:	tst	r0, r5
    cf24:	orreq	r6, r6, r0
    cf28:	b	cec0 <opt_loop+0x2fc>
    cf2c:	bl	f18 <abort@plt>
    cf30:	mov	r7, #0
    cf34:	mov	r6, r7
    cf38:	mov	r5, r7
    cf3c:	ldr	r3, [r9, #8]
    cf40:	and	r3, r3, #7
    cf44:	cmp	r3, #5
    cf48:	beq	cf88 <opt_loop+0x3c4>
    cf4c:	str	r5, [r9, #116]	; 0x74
    cf50:	str	r7, [r9, #120]	; 0x78
    cf54:	str	r6, [r9, #124]	; 0x7c
    cf58:	mov	r3, #0
    cf5c:	str	r3, [r9, #128]	; 0x80
    cf60:	ldr	r9, [r9, #100]	; 0x64
    cf64:	cmp	r9, r3
    cf68:	beq	cfd0 <opt_loop+0x40c>
    cf6c:	ldr	r4, [r9, #4]
    cf70:	cmp	r4, #0
    cf74:	beq	cf30 <opt_loop+0x36c>
    cf78:	mov	r7, #0
    cf7c:	mov	r6, r7
    cf80:	mov	r5, r7
    cf84:	b	ceec <opt_loop+0x328>
    cf88:	add	r0, r9, #8
    cf8c:	bl	c7b4 <atomuse>
    cf90:	cmp	r0, #0
    cf94:	blt	cf4c <opt_loop+0x388>
    cf98:	cmp	r0, #18
    cf9c:	beq	cfb8 <opt_loop+0x3f4>
    cfa0:	cmp	r0, #17
    cfa4:	bgt	cfcc <opt_loop+0x408>
    cfa8:	lsl	r0, sl, r0
    cfac:	tst	r0, r5
    cfb0:	orreq	r6, r6, r0
    cfb4:	b	cf4c <opt_loop+0x388>
    cfb8:	tst	r5, #131072	; 0x20000
    cfbc:	orreq	r6, r6, #131072	; 0x20000
    cfc0:	tst	r5, #65536	; 0x10000
    cfc4:	orreq	r6, r6, #65536	; 0x10000
    cfc8:	b	cf4c <opt_loop+0x388>
    cfcc:	bl	f18 <abort@plt>
    cfd0:	sub	fp, fp, #1
    cfd4:	cmn	fp, #1
    cfd8:	beq	cff4 <opt_loop+0x430>
    cfdc:	ldr	r3, [sp]
    cfe0:	ldr	r9, [r3], #-4
    cfe4:	str	r3, [sp]
    cfe8:	cmp	r9, #0
    cfec:	bne	cf6c <opt_loop+0x3a8>
    cff0:	b	cfd0 <opt_loop+0x40c>
    cff4:	ldr	fp, [sp, #16]
    cff8:	ldr	lr, [sp, #8]
    cffc:	cmp	lr, #0
    d000:	ble	d06c <opt_loop+0x4a8>
    d004:	ldr	r3, [pc, #2980]	; dbb0 <opt_loop+0xfec>
    d008:	ldr	r3, [fp, r3]
    d00c:	ldr	r0, [r3]
    d010:	mov	r1, #1
    d014:	ldr	ip, [r0, #4]!
    d018:	cmp	ip, #0
    d01c:	beq	d060 <opt_loop+0x49c>
    d020:	ldr	r3, [ip, #60]	; 0x3c
    d024:	ldr	r2, [ip, #84]	; 0x54
    d028:	ldr	r3, [r3, #124]	; 0x7c
    d02c:	ldr	r2, [r2, #124]	; 0x7c
    d030:	orr	r3, r3, r2
    d034:	ldr	r2, [ip, #128]	; 0x80
    d038:	orr	r3, r3, r2
    d03c:	str	r3, [ip, #128]	; 0x80
    d040:	ldr	r2, [ip, #120]	; 0x78
    d044:	bic	r3, r3, r2
    d048:	ldr	r2, [ip, #124]	; 0x7c
    d04c:	orr	r3, r2, r3
    d050:	str	r3, [ip, #124]	; 0x7c
    d054:	ldr	ip, [ip, #100]	; 0x64
    d058:	cmp	ip, #0
    d05c:	bne	d020 <opt_loop+0x45c>
    d060:	add	r1, r1, #1
    d064:	cmp	r1, lr
    d068:	ble	d014 <opt_loop+0x450>
    d06c:	ldr	r3, [pc, #2888]	; dbbc <opt_loop+0xff8>
    d070:	add	r3, pc, r3
    d074:	ldr	r2, [r3, #884]	; 0x374
    d078:	ldr	r4, [r3, #4]
    d07c:	ldr	r3, [r3, #888]	; 0x378
    d080:	mul	r3, r3, r4
    d084:	cmp	r3, #1
    d088:	bmi	d0a0 <opt_loop+0x4dc>
    d08c:	add	r3, r2, r3, lsl #2
    d090:	mvn	r1, #0
    d094:	str	r1, [r3, #-4]!
    d098:	cmp	r2, r3
    d09c:	bne	d094 <opt_loop+0x4d0>
    d0a0:	lsl	r4, r4, #2
    d0a4:	mov	r2, r4
    d0a8:	mov	r1, #0
    d0ac:	ldr	r5, [sp, #12]
    d0b0:	ldr	r0, [r5, #56]	; 0x38
    d0b4:	bl	e88 <memset@plt>
    d0b8:	mov	r2, r4
    d0bc:	mov	r1, #0
    d0c0:	ldr	r0, [r5, #80]	; 0x50
    d0c4:	bl	e88 <memset@plt>
    d0c8:	ldr	r5, [r5, #36]	; 0x24
    d0cc:	cmp	r5, #0
    d0d0:	blt	d11c <opt_loop+0x558>
    d0d4:	lsl	r6, r5, #2
    d0d8:	ldr	r3, [pc, #2768]	; dbb0 <opt_loop+0xfec>
    d0dc:	ldr	r7, [fp, r3]
    d0e0:	ldr	r3, [r7]
    d0e4:	ldr	r4, [r3, r6]
    d0e8:	cmp	r4, #0
    d0ec:	beq	d10c <opt_loop+0x548>
    d0f0:	add	r0, r4, #48	; 0x30
    d0f4:	bl	c290 <propedom>
    d0f8:	add	r0, r4, #72	; 0x48
    d0fc:	bl	c290 <propedom>
    d100:	ldr	r4, [r4, #100]	; 0x64
    d104:	cmp	r4, #0
    d108:	bne	d0f0 <opt_loop+0x52c>
    d10c:	sub	r5, r5, #1
    d110:	sub	r6, r6, #4
    d114:	cmn	r5, #1
    d118:	bne	d0e0 <opt_loop+0x51c>
    d11c:	mov	r4, #0
    d120:	ldr	r1, [sp, #80]	; 0x50
    d124:	str	r4, [r1, #860]	; 0x35c
    d128:	ldr	r3, [pc, #2704]	; dbc0 <opt_loop+0xffc>
    d12c:	ldr	r3, [fp, r3]
    d130:	ldr	r2, [pc, #2700]	; dbc4 <opt_loop+0x1000>
    d134:	ldr	r2, [fp, r2]
    d138:	ldr	r2, [r2]
    d13c:	str	r2, [r3]
    d140:	ldr	r2, [r1, #892]	; 0x37c
    d144:	ldr	r3, [pc, #2736]	; dbfc <opt_loop+0x1038>
    d148:	ldr	r3, [fp, r3]
    d14c:	lsl	r2, r2, #3
    d150:	mov	r1, r4
    d154:	ldr	r0, [r3]
    d158:	bl	e88 <memset@plt>
    d15c:	mov	r2, #852	; 0x354
    d160:	mov	r1, r4
    d164:	ldr	r0, [sp, #84]	; 0x54
    d168:	bl	e88 <memset@plt>
    d16c:	ldr	r0, [sp, #12]
    d170:	ldr	r3, [r0, #36]	; 0x24
    d174:	mov	r4, r3
    d178:	str	r3, [sp, #24]
    d17c:	bl	c52c <find_inedges>
    d180:	cmp	r4, #0
    d184:	blt	e748 <opt_loop+0x1b84>
    d188:	lsl	r2, r4, #2
    d18c:	str	r2, [sp, #28]
    d190:	str	r4, [sp, #36]	; 0x24
    d194:	ldr	r3, [pc, #2580]	; dbb0 <opt_loop+0xfec>
    d198:	ldr	r3, [fp, r3]
    d19c:	str	r3, [sp, #52]	; 0x34
    d1a0:	ldr	r3, [pc, #2592]	; dbc8 <opt_loop+0x1004>
    d1a4:	add	r3, pc, r3
    d1a8:	str	r3, [sp, #60]	; 0x3c
    d1ac:	ldr	r3, [pc, #2584]	; dbcc <opt_loop+0x1008>
    d1b0:	add	r3, pc, r3
    d1b4:	str	r3, [sp, #64]	; 0x40
    d1b8:	ldr	r3, [pc, #2576]	; dbd0 <opt_loop+0x100c>
    d1bc:	add	r3, pc, r3
    d1c0:	str	r3, [sp, #68]	; 0x44
    d1c4:	ldr	r3, [pc, #2568]	; dbd4 <opt_loop+0x1010>
    d1c8:	add	r3, pc, r3
    d1cc:	str	r3, [sp, #72]	; 0x48
    d1d0:	ldr	r3, [pc, #2560]	; dbd8 <opt_loop+0x1014>
    d1d4:	add	r3, pc, r3
    d1d8:	str	r3, [sp, #20]
    d1dc:	mov	r9, fp
    d1e0:	ldr	fp, [sp, #32]
    d1e4:	b	e220 <opt_loop+0x165c>
    d1e8:	mov	r2, #72	; 0x48
    d1ec:	mov	r1, #0
    d1f0:	add	r0, r7, #136	; 0x88
    d1f4:	bl	e88 <memset@plt>
    d1f8:	ldr	r3, [r7, #200]	; 0xc8
    d1fc:	str	r3, [sp, #8]
    d200:	ldr	r3, [r7, #204]	; 0xcc
    d204:	str	r3, [sp, #16]
    d208:	ldr	r4, [r7, #4]
    d20c:	cmp	r4, #0
    d210:	beq	e704 <opt_loop+0x1b40>
    d214:	add	r8, r7, #136	; 0x88
    d218:	mov	r6, #0
    d21c:	b	d80c <opt_loop+0xc48>
    d220:	mov	r2, r6
    d224:	ldr	r1, [r4, #12]
    d228:	mov	r0, r5
    d22c:	bl	c3a0 <F>
    d230:	cmp	fp, #0
    d234:	beq	d24c <opt_loop+0x688>
    d238:	ldr	r3, [r7, #200]	; 0xc8
    d23c:	cmp	r0, r3
    d240:	mvneq	r3, #0
    d244:	streq	r3, [r4]
    d248:	beq	d800 <opt_loop+0xc3c>
    d24c:	str	r0, [r7, #200]	; 0xc8
    d250:	b	d800 <opt_loop+0xc3c>
    d254:	ldr	r2, [r7, #204]	; 0xcc
    d258:	cmp	fp, #0
    d25c:	beq	e764 <opt_loop+0x1ba0>
    d260:	lsl	r1, r2, #3
    d264:	ldr	r3, [pc, #2448]	; dbfc <opt_loop+0x1038>
    d268:	ldr	r3, [r9, r3]
    d26c:	ldr	r3, [r3]
    d270:	ldr	r3, [r3, r2, lsl #3]
    d274:	cmp	r3, #0
    d278:	bne	d2a4 <opt_loop+0x6e0>
    d27c:	ldr	r1, [r4, #12]
    d280:	mov	r0, r5
    d284:	bl	c3a0 <F>
    d288:	ldr	r3, [r7, #200]	; 0xc8
    d28c:	cmp	r3, r0
    d290:	mvneq	r3, #0
    d294:	streq	r3, [r4]
    d298:	beq	d800 <opt_loop+0xc3c>
    d29c:	str	r0, [r7, #200]	; 0xc8
    d2a0:	b	d800 <opt_loop+0xc3c>
    d2a4:	and	r0, r5, #24
    d2a8:	orr	r0, r0, #32
    d2ac:	str	r0, [r4]
    d2b0:	ldr	r3, [pc, #2372]	; dbfc <opt_loop+0x1038>
    d2b4:	ldr	r3, [r9, r3]
    d2b8:	ldr	r3, [r3]
    d2bc:	add	r3, r3, r1
    d2c0:	ldr	r1, [r3, #4]
    d2c4:	ldr	r3, [r4, #12]
    d2c8:	add	r1, r1, r3
    d2cc:	str	r1, [r4, #12]
    d2d0:	mov	r2, r6
    d2d4:	bl	c3a0 <F>
    d2d8:	ldr	r3, [sp, #60]	; 0x3c
    d2dc:	str	r6, [r3, #868]	; 0x364
    d2e0:	b	d288 <opt_loop+0x6c4>
    d2e4:	mov	r2, r6
    d2e8:	mov	r1, r6
    d2ec:	mov	r0, #128	; 0x80
    d2f0:	bl	c3a0 <F>
    d2f4:	cmp	fp, #0
    d2f8:	beq	d310 <opt_loop+0x74c>
    d2fc:	ldr	r3, [r7, #200]	; 0xc8
    d300:	cmp	r0, r3
    d304:	mvneq	r3, #0
    d308:	streq	r3, [r4]
    d30c:	beq	d800 <opt_loop+0xc3c>
    d310:	str	r0, [r7, #200]	; 0xc8
    d314:	b	d800 <opt_loop+0xc3c>
    d318:	mov	r2, r6
    d31c:	ldr	r1, [r4, #12]
    d320:	mov	r0, r6
    d324:	bl	c3a0 <F>
    d328:	cmp	fp, #0
    d32c:	beq	d344 <opt_loop+0x780>
    d330:	ldr	r3, [r7, #200]	; 0xc8
    d334:	cmp	r0, r3
    d338:	mvneq	r3, #0
    d33c:	streq	r3, [r4]
    d340:	beq	d800 <opt_loop+0xc3c>
    d344:	str	r0, [r7, #200]	; 0xc8
    d348:	b	d800 <opt_loop+0xc3c>
    d34c:	mov	r2, r6
    d350:	ldr	r1, [r4, #12]
    d354:	mov	r0, r6
    d358:	bl	c3a0 <F>
    d35c:	cmp	fp, #0
    d360:	beq	d378 <opt_loop+0x7b4>
    d364:	ldr	r3, [r7, #204]	; 0xcc
    d368:	cmp	r0, r3
    d36c:	mvneq	r3, #0
    d370:	streq	r3, [r4]
    d374:	beq	d800 <opt_loop+0xc3c>
    d378:	str	r0, [r7, #204]	; 0xcc
    d37c:	b	d800 <opt_loop+0xc3c>
    d380:	mov	r2, r6
    d384:	ldr	r1, [r4, #12]
    d388:	mov	r0, #177	; 0xb1
    d38c:	bl	c3a0 <F>
    d390:	cmp	fp, #0
    d394:	beq	d3ac <opt_loop+0x7e8>
    d398:	ldr	r3, [r7, #204]	; 0xcc
    d39c:	cmp	r0, r3
    d3a0:	mvneq	r3, #0
    d3a4:	streq	r3, [r4]
    d3a8:	beq	d800 <opt_loop+0xc3c>
    d3ac:	str	r0, [r7, #204]	; 0xcc
    d3b0:	b	d800 <opt_loop+0xc3c>
    d3b4:	cmp	fp, #0
    d3b8:	beq	d3d8 <opt_loop+0x814>
    d3bc:	ldr	r2, [r7, #200]	; 0xc8
    d3c0:	ldr	r3, [pc, #2100]	; dbfc <opt_loop+0x1038>
    d3c4:	ldr	r3, [r9, r3]
    d3c8:	ldr	r3, [r3]
    d3cc:	ldr	r3, [r3, r2, lsl #3]
    d3d0:	cmp	r3, #0
    d3d4:	bne	d3f0 <opt_loop+0x82c>
    d3d8:	mov	r2, r6
    d3dc:	ldr	r1, [r7, #200]	; 0xc8
    d3e0:	mov	r0, #132	; 0x84
    d3e4:	bl	c3a0 <F>
    d3e8:	str	r0, [r7, #200]	; 0xc8
    d3ec:	b	d800 <opt_loop+0xc3c>
    d3f0:	str	r6, [r4]
    d3f4:	ldr	r2, [r7, #200]	; 0xc8
    d3f8:	ldr	r3, [pc, #2044]	; dbfc <opt_loop+0x1038>
    d3fc:	ldr	r3, [r9, r3]
    d400:	ldr	r3, [r3]
    d404:	add	r3, r3, r2, lsl #3
    d408:	ldr	r1, [r3, #4]
    d40c:	rsb	r1, r1, #0
    d410:	str	r1, [r4, #12]
    d414:	mov	r2, r6
    d418:	mov	r0, r6
    d41c:	bl	c3a0 <F>
    d420:	str	r0, [r7, #200]	; 0xc8
    d424:	b	d800 <opt_loop+0xc3c>
    d428:	cmp	fp, #0
    d42c:	beq	d48c <opt_loop+0x8c8>
    d430:	ldr	r1, [r4, #12]
    d434:	cmp	r1, #0
    d438:	bne	d468 <opt_loop+0x8a4>
    d43c:	and	r3, r5, #224	; 0xe0
    d440:	and	r2, r5, #176	; 0xb0
    d444:	cmp	r2, #0
    d448:	cmpne	r3, #96	; 0x60
    d44c:	mvneq	r3, #0
    d450:	streq	r3, [r4]
    d454:	beq	d800 <opt_loop+0xc3c>
    d458:	and	r3, r5, #240	; 0xf0
    d45c:	cmp	r3, #80	; 0x50
    d460:	cmpne	r3, #32
    d464:	beq	d4bc <opt_loop+0x8f8>
    d468:	ldr	r3, [r7, #200]	; 0xc8
    d46c:	mov	r2, r3
    d470:	str	r3, [sp, #40]	; 0x28
    d474:	ldr	r3, [pc, #1920]	; dbfc <opt_loop+0x1038>
    d478:	ldr	r3, [r9, r3]
    d47c:	ldr	r3, [r3]
    d480:	ldr	r3, [r3, r2, lsl #3]
    d484:	cmp	r3, #0
    d488:	bne	d4d8 <opt_loop+0x914>
    d48c:	ldr	r3, [r7, #200]	; 0xc8
    d490:	str	r3, [sp]
    d494:	mov	r2, r6
    d498:	ldr	r1, [r4, #12]
    d49c:	mov	r0, r6
    d4a0:	bl	c3a0 <F>
    d4a4:	mov	r2, r0
    d4a8:	ldr	r1, [sp]
    d4ac:	mov	r0, r5
    d4b0:	bl	c3a0 <F>
    d4b4:	str	r0, [r7, #200]	; 0xc8
    d4b8:	b	d800 <opt_loop+0xc3c>
    d4bc:	str	r6, [r4]
    d4c0:	mov	r2, r6
    d4c4:	mov	r1, r6
    d4c8:	mov	r0, r6
    d4cc:	bl	c3a0 <F>
    d4d0:	str	r0, [r7, #200]	; 0xc8
    d4d4:	b	d800 <opt_loop+0xc3c>
    d4d8:	mov	r2, r6
    d4dc:	mov	r0, r6
    d4e0:	bl	c3a0 <F>
    d4e4:	mov	r2, r0
    d4e8:	ldr	r1, [sp, #40]	; 0x28
    d4ec:	ldr	r0, [sp]
    d4f0:	bl	c8e4 <fold_op>
    d4f4:	mov	r2, r6
    d4f8:	ldr	r1, [r4, #12]
    d4fc:	mov	r0, r6
    d500:	bl	c3a0 <F>
    d504:	str	r0, [r7, #200]	; 0xc8
    d508:	b	d800 <opt_loop+0xc3c>
    d50c:	cmp	fp, #0
    d510:	beq	d634 <opt_loop+0xa70>
    d514:	and	r0, r5, #240	; 0xf0
    d518:	ldr	r3, [pc, #1756]	; dbfc <opt_loop+0x1038>
    d51c:	ldr	r3, [r9, r3]
    d520:	ldr	r3, [r3]
    d524:	ldr	r2, [r7, #204]	; 0xcc
    d528:	ldr	r1, [r3, r2, lsl #3]
    d52c:	cmp	r1, #0
    d530:	beq	d5bc <opt_loop+0x9f8>
    d534:	ldr	r1, [r7, #200]	; 0xc8
    d538:	ldr	r3, [r3, r1, lsl #3]
    d53c:	cmp	r3, #0
    d540:	beq	d564 <opt_loop+0x9a0>
    d544:	ldr	r0, [sp]
    d548:	bl	c8e4 <fold_op>
    d54c:	mov	r2, r6
    d550:	ldr	r1, [r4, #12]
    d554:	mov	r0, r6
    d558:	bl	c3a0 <F>
    d55c:	str	r0, [r7, #200]	; 0xc8
    d560:	b	d800 <opt_loop+0xc3c>
    d564:	orr	r5, r0, #4
    d568:	str	r5, [r4]
    d56c:	ldr	r2, [r7, #204]	; 0xcc
    d570:	ldr	r3, [pc, #1668]	; dbfc <opt_loop+0x1038>
    d574:	ldr	r3, [r9, r3]
    d578:	ldr	r3, [r3]
    d57c:	add	r3, r3, r2, lsl #3
    d580:	ldr	r1, [r3, #4]
    d584:	str	r1, [r4, #12]
    d588:	ldr	r3, [sp, #64]	; 0x40
    d58c:	str	r6, [r3, #868]	; 0x364
    d590:	ldr	r3, [r7, #200]	; 0xc8
    d594:	str	r3, [sp]
    d598:	mov	r2, r6
    d59c:	mov	r0, r6
    d5a0:	bl	c3a0 <F>
    d5a4:	mov	r2, r0
    d5a8:	ldr	r1, [sp]
    d5ac:	mov	r0, r5
    d5b0:	bl	c3a0 <F>
    d5b4:	str	r0, [r7, #200]	; 0xc8
    d5b8:	b	d800 <opt_loop+0xc3c>
    d5bc:	ldr	r2, [r7, #200]	; 0xc8
    d5c0:	add	r1, r3, r2, lsl #3
    d5c4:	ldr	r3, [r3, r2, lsl #3]
    d5c8:	cmp	r3, #0
    d5cc:	beq	d634 <opt_loop+0xa70>
    d5d0:	ldr	r3, [r1, #4]
    d5d4:	cmp	r3, #0
    d5d8:	bne	d634 <opt_loop+0xa70>
    d5dc:	tst	r5, #176	; 0xb0
    d5e0:	bne	d608 <opt_loop+0xa44>
    d5e4:	mov	r3, #135	; 0x87
    d5e8:	str	r3, [r4]
    d5ec:	ldr	r3, [r7, #204]	; 0xcc
    d5f0:	ldr	r2, [r7, #200]	; 0xc8
    d5f4:	cmp	r3, r2
    d5f8:	mvneq	r3, #0
    d5fc:	streq	r3, [r4]
    d600:	strne	r3, [r7, #200]	; 0xc8
    d604:	b	d800 <opt_loop+0xc3c>
    d608:	and	r3, r5, #224	; 0xe0
    d60c:	cmp	r3, #32
    d610:	beq	d64c <opt_loop+0xa88>
    d614:	and	r3, r5, #208	; 0xd0
    d618:	cmp	r0, #96	; 0x60
    d61c:	cmpne	r3, #80	; 0x50
    d620:	beq	d64c <opt_loop+0xa88>
    d624:	cmp	r0, #128	; 0x80
    d628:	mvneq	r3, #0
    d62c:	streq	r3, [r4]
    d630:	beq	d800 <opt_loop+0xc3c>
    d634:	ldr	r2, [r7, #204]	; 0xcc
    d638:	ldr	r1, [r7, #200]	; 0xc8
    d63c:	mov	r0, r5
    d640:	bl	c3a0 <F>
    d644:	str	r0, [r7, #200]	; 0xc8
    d648:	b	d800 <opt_loop+0xc3c>
    d64c:	str	r6, [r4]
    d650:	str	r6, [r4, #12]
    d654:	mov	r2, r6
    d658:	mov	r1, r6
    d65c:	mov	r0, r6
    d660:	bl	c3a0 <F>
    d664:	ldr	r3, [r7, #200]	; 0xc8
    d668:	cmp	r0, r3
    d66c:	mvneq	r3, #0
    d670:	streq	r3, [r4]
    d674:	strne	r0, [r7, #200]	; 0xc8
    d678:	b	d800 <opt_loop+0xc3c>
    d67c:	ldr	r3, [r7, #204]	; 0xcc
    d680:	cmp	fp, #0
    d684:	beq	d69c <opt_loop+0xad8>
    d688:	ldr	r2, [r7, #200]	; 0xc8
    d68c:	cmp	r3, r2
    d690:	mvneq	r3, #0
    d694:	streq	r3, [r4]
    d698:	beq	d800 <opt_loop+0xc3c>
    d69c:	str	r3, [r7, #200]	; 0xc8
    d6a0:	b	d800 <opt_loop+0xc3c>
    d6a4:	ldr	r3, [r4, #12]
    d6a8:	ldr	r3, [r8, r3, lsl #2]
    d6ac:	cmp	fp, #0
    d6b0:	beq	d700 <opt_loop+0xb3c>
    d6b4:	lsl	r1, r3, #3
    d6b8:	ldr	r2, [pc, #1340]	; dbfc <opt_loop+0x1038>
    d6bc:	ldr	r2, [r9, r2]
    d6c0:	ldr	r2, [r2]
    d6c4:	ldr	r2, [r2, r3, lsl #3]
    d6c8:	cmp	r2, #0
    d6cc:	beq	d6f4 <opt_loop+0xb30>
    d6d0:	str	r6, [r4]
    d6d4:	ldr	r2, [pc, #1312]	; dbfc <opt_loop+0x1038>
    d6d8:	ldr	r2, [r9, r2]
    d6dc:	ldr	r2, [r2]
    d6e0:	add	r2, r2, r1
    d6e4:	ldr	r2, [r2, #4]
    d6e8:	str	r2, [r4, #12]
    d6ec:	ldr	r2, [sp, #68]	; 0x44
    d6f0:	str	r6, [r2, #868]	; 0x364
    d6f4:	ldr	r2, [r7, #200]	; 0xc8
    d6f8:	cmp	r3, r2
    d6fc:	beq	d708 <opt_loop+0xb44>
    d700:	str	r3, [r7, #200]	; 0xc8
    d704:	b	d800 <opt_loop+0xc3c>
    d708:	mvn	r3, #0
    d70c:	str	r3, [r4]
    d710:	b	d800 <opt_loop+0xc3c>
    d714:	ldr	r3, [r7, #200]	; 0xc8
    d718:	cmp	fp, #0
    d71c:	beq	d734 <opt_loop+0xb70>
    d720:	ldr	r2, [r7, #204]	; 0xcc
    d724:	cmp	r3, r2
    d728:	mvneq	r3, #0
    d72c:	streq	r3, [r4]
    d730:	beq	d800 <opt_loop+0xc3c>
    d734:	str	r3, [r7, #204]	; 0xcc
    d738:	b	d800 <opt_loop+0xc3c>
    d73c:	ldr	r3, [r4, #12]
    d740:	ldr	r3, [r8, r3, lsl #2]
    d744:	cmp	fp, #0
    d748:	beq	d798 <opt_loop+0xbd4>
    d74c:	lsl	r1, r3, #3
    d750:	ldr	r2, [pc, #1188]	; dbfc <opt_loop+0x1038>
    d754:	ldr	r2, [r9, r2]
    d758:	ldr	r2, [r2]
    d75c:	ldr	r2, [r2, r3, lsl #3]
    d760:	cmp	r2, #0
    d764:	beq	d78c <opt_loop+0xbc8>
    d768:	str	sl, [r4]
    d76c:	ldr	r2, [pc, #1160]	; dbfc <opt_loop+0x1038>
    d770:	ldr	r2, [r9, r2]
    d774:	ldr	r2, [r2]
    d778:	add	r2, r2, r1
    d77c:	ldr	r2, [r2, #4]
    d780:	str	r2, [r4, #12]
    d784:	ldr	r2, [sp, #72]	; 0x48
    d788:	str	r6, [r2, #868]	; 0x364
    d78c:	ldr	r2, [r7, #204]	; 0xcc
    d790:	cmp	r3, r2
    d794:	beq	d7a0 <opt_loop+0xbdc>
    d798:	str	r3, [r7, #204]	; 0xcc
    d79c:	b	d800 <opt_loop+0xc3c>
    d7a0:	mvn	r3, #0
    d7a4:	str	r3, [r4]
    d7a8:	b	d800 <opt_loop+0xc3c>
    d7ac:	ldr	r3, [r4, #12]
    d7b0:	ldr	r2, [r7, #200]	; 0xc8
    d7b4:	cmp	fp, #0
    d7b8:	beq	d7d0 <opt_loop+0xc0c>
    d7bc:	ldr	r1, [r8, r3, lsl #2]
    d7c0:	cmp	r2, r1
    d7c4:	mvneq	r3, #0
    d7c8:	streq	r3, [r4]
    d7cc:	beq	d800 <opt_loop+0xc3c>
    d7d0:	str	r2, [r8, r3, lsl #2]
    d7d4:	b	d800 <opt_loop+0xc3c>
    d7d8:	ldr	r3, [r4, #12]
    d7dc:	ldr	r2, [r7, #204]	; 0xcc
    d7e0:	cmp	fp, #0
    d7e4:	beq	d7fc <opt_loop+0xc38>
    d7e8:	ldr	r1, [r8, r3, lsl #2]
    d7ec:	cmp	r2, r1
    d7f0:	mvneq	r3, #0
    d7f4:	streq	r3, [r4]
    d7f8:	beq	d800 <opt_loop+0xc3c>
    d7fc:	str	r2, [r8, r3, lsl #2]
    d800:	ldr	r4, [r4, #16]
    d804:	cmp	r4, #0
    d808:	beq	dae8 <opt_loop+0xf24>
    d80c:	str	r4, [sp]
    d810:	ldr	r5, [r4]
    d814:	cmp	r5, #177	; 0xb1
    d818:	addls	pc, pc, r5, lsl #2
    d81c:	b	d800 <opt_loop+0xc3c>
    d820:	b	d318 <opt_loop+0x754>
    d824:	b	d34c <opt_loop+0x788>
    d828:	b	d7ac <opt_loop+0xbe8>
    d82c:	b	d7d8 <opt_loop+0xc14>
    d830:	b	d428 <opt_loop+0x864>
    d834:	b	d800 <opt_loop+0xc3c>
    d838:	b	d800 <opt_loop+0xc3c>
    d83c:	b	d714 <opt_loop+0xb50>
    d840:	b	d800 <opt_loop+0xc3c>
    d844:	b	d800 <opt_loop+0xc3c>
    d848:	b	d800 <opt_loop+0xc3c>
    d84c:	b	d800 <opt_loop+0xc3c>
    d850:	b	d50c <opt_loop+0x948>
    d854:	b	d800 <opt_loop+0xc3c>
    d858:	b	d800 <opt_loop+0xc3c>
    d85c:	b	d800 <opt_loop+0xc3c>
    d860:	b	d800 <opt_loop+0xc3c>
    d864:	b	d800 <opt_loop+0xc3c>
    d868:	b	d800 <opt_loop+0xc3c>
    d86c:	b	d800 <opt_loop+0xc3c>
    d870:	b	d428 <opt_loop+0x864>
    d874:	b	d800 <opt_loop+0xc3c>
    d878:	b	d800 <opt_loop+0xc3c>
    d87c:	b	d800 <opt_loop+0xc3c>
    d880:	b	d800 <opt_loop+0xc3c>
    d884:	b	d800 <opt_loop+0xc3c>
    d888:	b	d800 <opt_loop+0xc3c>
    d88c:	b	d800 <opt_loop+0xc3c>
    d890:	b	d50c <opt_loop+0x948>
    d894:	b	d800 <opt_loop+0xc3c>
    d898:	b	d800 <opt_loop+0xc3c>
    d89c:	b	d800 <opt_loop+0xc3c>
    d8a0:	b	d220 <opt_loop+0x65c>
    d8a4:	b	d800 <opt_loop+0xc3c>
    d8a8:	b	d800 <opt_loop+0xc3c>
    d8ac:	b	d800 <opt_loop+0xc3c>
    d8b0:	b	d428 <opt_loop+0x864>
    d8b4:	b	d800 <opt_loop+0xc3c>
    d8b8:	b	d800 <opt_loop+0xc3c>
    d8bc:	b	d800 <opt_loop+0xc3c>
    d8c0:	b	d220 <opt_loop+0x65c>
    d8c4:	b	d800 <opt_loop+0xc3c>
    d8c8:	b	d800 <opt_loop+0xc3c>
    d8cc:	b	d800 <opt_loop+0xc3c>
    d8d0:	b	d50c <opt_loop+0x948>
    d8d4:	b	d800 <opt_loop+0xc3c>
    d8d8:	b	d800 <opt_loop+0xc3c>
    d8dc:	b	d800 <opt_loop+0xc3c>
    d8e0:	b	d220 <opt_loop+0x65c>
    d8e4:	b	d800 <opt_loop+0xc3c>
    d8e8:	b	d800 <opt_loop+0xc3c>
    d8ec:	b	d800 <opt_loop+0xc3c>
    d8f0:	b	d428 <opt_loop+0x864>
    d8f4:	b	d800 <opt_loop+0xc3c>
    d8f8:	b	d800 <opt_loop+0xc3c>
    d8fc:	b	d800 <opt_loop+0xc3c>
    d900:	b	d800 <opt_loop+0xc3c>
    d904:	b	d800 <opt_loop+0xc3c>
    d908:	b	d800 <opt_loop+0xc3c>
    d90c:	b	d800 <opt_loop+0xc3c>
    d910:	b	d50c <opt_loop+0x948>
    d914:	b	d800 <opt_loop+0xc3c>
    d918:	b	d800 <opt_loop+0xc3c>
    d91c:	b	d800 <opt_loop+0xc3c>
    d920:	b	d254 <opt_loop+0x690>
    d924:	b	d800 <opt_loop+0xc3c>
    d928:	b	d800 <opt_loop+0xc3c>
    d92c:	b	d800 <opt_loop+0xc3c>
    d930:	b	d428 <opt_loop+0x864>
    d934:	b	d800 <opt_loop+0xc3c>
    d938:	b	d800 <opt_loop+0xc3c>
    d93c:	b	d800 <opt_loop+0xc3c>
    d940:	b	d254 <opt_loop+0x690>
    d944:	b	d800 <opt_loop+0xc3c>
    d948:	b	d800 <opt_loop+0xc3c>
    d94c:	b	d800 <opt_loop+0xc3c>
    d950:	b	d50c <opt_loop+0x948>
    d954:	b	d800 <opt_loop+0xc3c>
    d958:	b	d800 <opt_loop+0xc3c>
    d95c:	b	d800 <opt_loop+0xc3c>
    d960:	b	d254 <opt_loop+0x690>
    d964:	b	d800 <opt_loop+0xc3c>
    d968:	b	d800 <opt_loop+0xc3c>
    d96c:	b	d800 <opt_loop+0xc3c>
    d970:	b	d428 <opt_loop+0x864>
    d974:	b	d800 <opt_loop+0xc3c>
    d978:	b	d800 <opt_loop+0xc3c>
    d97c:	b	d800 <opt_loop+0xc3c>
    d980:	b	d800 <opt_loop+0xc3c>
    d984:	b	d800 <opt_loop+0xc3c>
    d988:	b	d800 <opt_loop+0xc3c>
    d98c:	b	d800 <opt_loop+0xc3c>
    d990:	b	d50c <opt_loop+0x948>
    d994:	b	d800 <opt_loop+0xc3c>
    d998:	b	d800 <opt_loop+0xc3c>
    d99c:	b	d800 <opt_loop+0xc3c>
    d9a0:	b	d6a4 <opt_loop+0xae0>
    d9a4:	b	d73c <opt_loop+0xb78>
    d9a8:	b	d800 <opt_loop+0xc3c>
    d9ac:	b	d800 <opt_loop+0xc3c>
    d9b0:	b	d428 <opt_loop+0x864>
    d9b4:	b	d800 <opt_loop+0xc3c>
    d9b8:	b	d800 <opt_loop+0xc3c>
    d9bc:	b	d800 <opt_loop+0xc3c>
    d9c0:	b	d800 <opt_loop+0xc3c>
    d9c4:	b	d800 <opt_loop+0xc3c>
    d9c8:	b	d800 <opt_loop+0xc3c>
    d9cc:	b	d800 <opt_loop+0xc3c>
    d9d0:	b	d50c <opt_loop+0x948>
    d9d4:	b	d800 <opt_loop+0xc3c>
    d9d8:	b	d800 <opt_loop+0xc3c>
    d9dc:	b	d800 <opt_loop+0xc3c>
    d9e0:	b	d800 <opt_loop+0xc3c>
    d9e4:	b	d800 <opt_loop+0xc3c>
    d9e8:	b	d800 <opt_loop+0xc3c>
    d9ec:	b	d800 <opt_loop+0xc3c>
    d9f0:	b	d428 <opt_loop+0x864>
    d9f4:	b	d800 <opt_loop+0xc3c>
    d9f8:	b	d800 <opt_loop+0xc3c>
    d9fc:	b	d800 <opt_loop+0xc3c>
    da00:	b	d800 <opt_loop+0xc3c>
    da04:	b	d800 <opt_loop+0xc3c>
    da08:	b	d800 <opt_loop+0xc3c>
    da0c:	b	d800 <opt_loop+0xc3c>
    da10:	b	d50c <opt_loop+0x948>
    da14:	b	d800 <opt_loop+0xc3c>
    da18:	b	d800 <opt_loop+0xc3c>
    da1c:	b	d800 <opt_loop+0xc3c>
    da20:	b	d2e4 <opt_loop+0x720>
    da24:	b	d800 <opt_loop+0xc3c>
    da28:	b	d800 <opt_loop+0xc3c>
    da2c:	b	d800 <opt_loop+0xc3c>
    da30:	b	d3b4 <opt_loop+0x7f0>
    da34:	b	d800 <opt_loop+0xc3c>
    da38:	b	d800 <opt_loop+0xc3c>
    da3c:	b	d67c <opt_loop+0xab8>
    da40:	b	d800 <opt_loop+0xc3c>
    da44:	b	d800 <opt_loop+0xc3c>
    da48:	b	d800 <opt_loop+0xc3c>
    da4c:	b	d800 <opt_loop+0xc3c>
    da50:	b	d800 <opt_loop+0xc3c>
    da54:	b	d800 <opt_loop+0xc3c>
    da58:	b	d800 <opt_loop+0xc3c>
    da5c:	b	d800 <opt_loop+0xc3c>
    da60:	b	d800 <opt_loop+0xc3c>
    da64:	b	d800 <opt_loop+0xc3c>
    da68:	b	d800 <opt_loop+0xc3c>
    da6c:	b	d800 <opt_loop+0xc3c>
    da70:	b	d800 <opt_loop+0xc3c>
    da74:	b	d800 <opt_loop+0xc3c>
    da78:	b	d800 <opt_loop+0xc3c>
    da7c:	b	d800 <opt_loop+0xc3c>
    da80:	b	d800 <opt_loop+0xc3c>
    da84:	b	d800 <opt_loop+0xc3c>
    da88:	b	d800 <opt_loop+0xc3c>
    da8c:	b	d800 <opt_loop+0xc3c>
    da90:	b	d800 <opt_loop+0xc3c>
    da94:	b	d800 <opt_loop+0xc3c>
    da98:	b	d800 <opt_loop+0xc3c>
    da9c:	b	d800 <opt_loop+0xc3c>
    daa0:	b	d800 <opt_loop+0xc3c>
    daa4:	b	d800 <opt_loop+0xc3c>
    daa8:	b	d800 <opt_loop+0xc3c>
    daac:	b	d800 <opt_loop+0xc3c>
    dab0:	b	d800 <opt_loop+0xc3c>
    dab4:	b	d800 <opt_loop+0xc3c>
    dab8:	b	d800 <opt_loop+0xc3c>
    dabc:	b	d800 <opt_loop+0xc3c>
    dac0:	b	d800 <opt_loop+0xc3c>
    dac4:	b	d800 <opt_loop+0xc3c>
    dac8:	b	d800 <opt_loop+0xc3c>
    dacc:	b	d800 <opt_loop+0xc3c>
    dad0:	b	d800 <opt_loop+0xc3c>
    dad4:	b	d800 <opt_loop+0xc3c>
    dad8:	b	d800 <opt_loop+0xc3c>
    dadc:	b	d800 <opt_loop+0xc3c>
    dae0:	b	d800 <opt_loop+0xc3c>
    dae4:	b	d380 <opt_loop+0x7bc>
    dae8:	cmp	fp, #0
    daec:	beq	db50 <opt_loop+0xf8c>
    daf0:	ldr	r1, [r7, #128]	; 0x80
    daf4:	ldr	r2, [sp, #8]
    daf8:	clz	r3, r1
    dafc:	lsr	r3, r3, #5
    db00:	cmp	r2, #0
    db04:	moveq	r3, #0
    db08:	cmp	r3, #0
    db0c:	beq	db40 <opt_loop+0xf7c>
    db10:	ldr	r3, [r7, #200]	; 0xc8
    db14:	ldr	r1, [sp, #16]
    db18:	cmp	r3, r2
    db1c:	movne	r2, #0
    db20:	moveq	r2, #1
    db24:	cmp	r1, #0
    db28:	moveq	r2, #0
    db2c:	cmp	r2, #0
    db30:	beq	db40 <opt_loop+0xf7c>
    db34:	ldr	r3, [r7, #204]	; 0xcc
    db38:	cmp	r1, r3
    db3c:	beq	db78 <opt_loop+0xfb4>
    db40:	ldr	r3, [r7, #8]
    db44:	and	r3, r3, #7
    db48:	cmp	r3, #6
    db4c:	beq	db78 <opt_loop+0xfb4>
    db50:	ldr	r2, [r7, #4]
    db54:	cmp	r2, #0
    db58:	beq	e084 <opt_loop+0x14c0>
    db5c:	ldr	r3, [pc, #120]	; dbdc <opt_loop+0x1018>
    db60:	add	r3, pc, r3
    db64:	ldr	r4, [r3, #868]	; 0x364
    db68:	mov	ip, #0
    db6c:	mvn	r8, #0
    db70:	mov	r6, #135	; 0x87
    db74:	b	dcec <opt_loop+0x1128>
    db78:	ldr	r3, [r7, #4]
    db7c:	cmp	r3, #0
    db80:	beq	e154 <opt_loop+0x1590>
    db84:	mov	r3, #0
    db88:	str	r3, [r7, #4]
    db8c:	ldr	r2, [pc, #76]	; dbe0 <opt_loop+0x101c>
    db90:	add	r2, pc, r2
    db94:	str	r3, [r2, #868]	; 0x364
    db98:	b	e154 <opt_loop+0x1590>
    db9c:	ldr	ip, [sp, #4]
    dba0:	mov	r4, #0
    dba4:	b	dce4 <opt_loop+0x1120>
    dba8:	.word	0x00024420
    dbac:	.word	0x00024b50
    dbb0:	.word	0x000000c8
    dbb4:	.word	0x00024b30
    dbb8:	.word	0x00024b24
    dbbc:	.word	0x000246c0
    dbc0:	.word	0x000000f0
    dbc4:	.word	0x000000fc
    dbc8:	.word	0x0002458c
    dbcc:	.word	0x00024580
    dbd0:	.word	0x00024574
    dbd4:	.word	0x00024568
    dbd8:	.word	0x0002455c
    dbdc:	.word	0x00023bd0
    dbe0:	.word	0x00023ba0
    dbe4:	.word	0x00023a64
    dbe8:	.word	0x00023874
    dbec:	.word	0x000237f8
    dbf0:	.word	0x000237c8
    dbf4:	.word	0x0002379c
    dbf8:	.word	0x00023764
    dbfc:	.word	0x00000108
    dc00:	.word	0x000236c0
    dc04:	.word	0x000234f4
    dc08:	.word	0x00023478
    dc0c:	.word	0x000000c8
    dc10:	.word	0x00023058
    dc14:	.word	0x0002303c
    dc18:	.word	0x00023018
    dc1c:	.word	0x00022ffc
    dc20:	cmp	ip, #0
    dc24:	bne	dcc8 <opt_loop+0x1104>
    dc28:	ldr	r3, [r7, #8]
    dc2c:	cmp	r3, #21
    dc30:	beq	dec8 <opt_loop+0x1304>
    dc34:	ldr	r2, [r7, #8]
    dc38:	cmp	r2, #69	; 0x45
    dc3c:	beq	dfe8 <opt_loop+0x1424>
    dc40:	ldr	r3, [pc, #-76]	; dbfc <opt_loop+0x1038>
    dc44:	ldr	r3, [r9, r3]
    dc48:	ldr	r3, [r3]
    dc4c:	ldr	r1, [r7, #204]	; 0xcc
    dc50:	add	r0, r3, r1, lsl #3
    dc54:	ldr	r1, [r3, r1, lsl #3]
    dc58:	cmp	r1, #0
    dc5c:	beq	dc78 <opt_loop+0x10b4>
    dc60:	tst	r2, #8
    dc64:	beq	e018 <opt_loop+0x1454>
    dc68:	ldr	r1, [r0, #4]
    dc6c:	bic	r2, r2, #8
    dc70:	str	r2, [r7, #8]
    dc74:	str	r1, [r7, #20]
    dc78:	ldr	r2, [r7, #200]	; 0xc8
    dc7c:	add	r1, r3, r2, lsl #3
    dc80:	ldr	r3, [r3, r2, lsl #3]
    dc84:	cmp	r3, #0
    dc88:	beq	e084 <opt_loop+0x14c0>
    dc8c:	ldr	r3, [r7, #8]
    dc90:	tst	r3, #8
    dc94:	bne	e084 <opt_loop+0x14c0>
    dc98:	ldr	r2, [r1, #4]
    dc9c:	and	r3, r3, #240	; 0xf0
    dca0:	cmp	r3, #32
    dca4:	beq	e0ec <opt_loop+0x1528>
    dca8:	ble	e044 <opt_loop+0x1480>
    dcac:	cmp	r3, #48	; 0x30
    dcb0:	beq	e100 <opt_loop+0x153c>
    dcb4:	cmp	r3, #64	; 0x40
    dcb8:	bne	e114 <opt_loop+0x1550>
    dcbc:	ldr	r3, [r7, #20]
    dcc0:	and	r3, r3, r2
    dcc4:	b	e05c <opt_loop+0x1498>
    dcc8:	ldr	r3, [pc, #-236]	; dbe4 <opt_loop+0x1020>
    dccc:	add	r3, pc, r3
    dcd0:	str	r4, [r3, #868]	; 0x364
    dcd4:	b	dc28 <opt_loop+0x1064>
    dcd8:	ldr	r1, [r2]
    dcdc:	cmp	r1, #97	; 0x61
    dce0:	beq	de34 <opt_loop+0x1270>
    dce4:	cmp	r2, #0
    dce8:	beq	e710 <opt_loop+0x1b4c>
    dcec:	ldr	r3, [r2]
    dcf0:	cmn	r3, #1
    dcf4:	bne	e724 <opt_loop+0x1b60>
    dcf8:	mov	r3, r2
    dcfc:	ldr	r3, [r3, #16]
    dd00:	cmp	r3, #0
    dd04:	beq	dc20 <opt_loop+0x105c>
    dd08:	ldr	r1, [r3]
    dd0c:	cmn	r1, #1
    dd10:	beq	dcfc <opt_loop+0x1138>
    dd14:	ldr	r1, [r3, #16]
    dd18:	cmp	r1, #0
    dd1c:	beq	e72c <opt_loop+0x1b68>
    dd20:	ldr	r0, [r1]
    dd24:	cmn	r0, #1
    dd28:	bne	e740 <opt_loop+0x1b7c>
    dd2c:	ldr	r1, [r1, #16]
    dd30:	cmp	r1, #0
    dd34:	beq	deb4 <opt_loop+0x12f0>
    dd38:	ldr	r0, [r1]
    dd3c:	cmn	r0, #1
    dd40:	beq	dd2c <opt_loop+0x1168>
    dd44:	mov	r2, r1
    dd48:	ldr	r1, [r3]
    dd4c:	cmp	r1, #2
    dd50:	beq	dcd8 <opt_loop+0x1114>
    dd54:	cmp	r1, #0
    dd58:	bne	dce4 <opt_loop+0x1120>
    dd5c:	ldr	r1, [r2]
    dd60:	cmp	r1, #7
    dd64:	beq	de58 <opt_loop+0x1294>
    dd68:	ldr	r1, [r7, #128]	; 0x80
    dd6c:	tst	r1, #131072	; 0x20000
    dd70:	bne	dce4 <opt_loop+0x1120>
    dd74:	ldr	r1, [r2]
    dd78:	cmp	r1, #177	; 0xb1
    dd7c:	movne	r1, r2
    dd80:	beq	de80 <opt_loop+0x12bc>
    dd84:	ldr	r0, [r1]
    dd88:	cmp	r0, #12
    dd8c:	bne	dce4 <opt_loop+0x1120>
    dd90:	ldr	r0, [r1, #16]
    dd94:	cmp	r0, #0
    dd98:	beq	dce4 <opt_loop+0x1120>
    dd9c:	ldr	lr, [r0]
    dda0:	cmn	lr, #1
    dda4:	bne	ddc0 <opt_loop+0x11fc>
    dda8:	ldr	r0, [r0, #16]
    ddac:	cmp	r0, #0
    ddb0:	beq	dce4 <opt_loop+0x1120>
    ddb4:	ldr	lr, [r0]
    ddb8:	cmn	lr, #1
    ddbc:	beq	dda8 <opt_loop+0x11e4>
    ddc0:	ldr	lr, [r0]
    ddc4:	cmp	lr, #7
    ddc8:	bne	dce4 <opt_loop+0x1120>
    ddcc:	ldr	lr, [r0, #16]
    ddd0:	cmp	lr, #0
    ddd4:	beq	dce4 <opt_loop+0x1120>
    ddd8:	ldr	r5, [lr]
    dddc:	cmn	r5, #1
    dde0:	bne	ddfc <opt_loop+0x1238>
    dde4:	ldr	lr, [lr, #16]
    dde8:	cmp	lr, #0
    ddec:	beq	dce4 <opt_loop+0x1120>
    ddf0:	ldr	r5, [lr]
    ddf4:	cmn	r5, #1
    ddf8:	beq	dde4 <opt_loop+0x1220>
    ddfc:	ldr	r5, [lr]
    de00:	and	r5, r5, #231	; 0xe7
    de04:	cmp	r5, #64	; 0x40
    de08:	bne	dce4 <opt_loop+0x1120>
    de0c:	ldr	ip, [lr, #12]
    de10:	ldr	r4, [r3, #12]
    de14:	add	ip, ip, r4
    de18:	str	ip, [lr, #12]
    de1c:	str	r8, [r3]
    de20:	str	r8, [r1]
    de24:	str	r8, [r0]
    de28:	ldr	ip, [sp, #4]
    de2c:	mov	r4, #0
    de30:	b	dce4 <opt_loop+0x1120>
    de34:	ldr	r0, [r3, #12]
    de38:	ldr	r1, [r2, #12]
    de3c:	cmp	r0, r1
    de40:	bne	dce4 <opt_loop+0x1120>
    de44:	mov	r1, #7
    de48:	str	r1, [r2]
    de4c:	ldr	r1, [r3]
    de50:	cmp	r1, #0
    de54:	bne	de74 <opt_loop+0x12b0>
    de58:	str	sl, [r3]
    de5c:	str	r6, [r2]
    de60:	ldr	r4, [r3]
    de64:	cmp	r4, #0
    de68:	bne	db9c <opt_loop+0xfd8>
    de6c:	ldr	ip, [sp, #4]
    de70:	b	dd68 <opt_loop+0x11a4>
    de74:	ldr	ip, [sp, #4]
    de78:	mov	r4, #0
    de7c:	b	dce4 <opt_loop+0x1120>
    de80:	ldr	r1, [r2, #16]
    de84:	cmp	r1, #0
    de88:	beq	dce4 <opt_loop+0x1120>
    de8c:	ldr	r0, [r1]
    de90:	cmn	r0, #1
    de94:	bne	dd84 <opt_loop+0x11c0>
    de98:	ldr	r1, [r1, #16]
    de9c:	cmp	r1, #0
    dea0:	beq	dce4 <opt_loop+0x1120>
    dea4:	ldr	r0, [r1]
    dea8:	cmn	r0, #1
    deac:	beq	de98 <opt_loop+0x12d4>
    deb0:	b	dd84 <opt_loop+0x11c0>
    deb4:	cmp	ip, #0
    deb8:	ldrne	r3, [pc, #-728]	; dbe8 <opt_loop+0x1024>
    debc:	addne	r3, pc, r3
    dec0:	strne	r4, [r3, #868]	; 0x364
    dec4:	b	dc28 <opt_loop+0x1064>
    dec8:	ldr	r3, [r7, #128]	; 0x80
    decc:	tst	r3, #65536	; 0x10000
    ded0:	bne	def0 <opt_loop+0x132c>
    ded4:	ldr	r3, [r2]
    ded8:	cmp	r3, #28
    dedc:	beq	def8 <opt_loop+0x1334>
    dee0:	cmp	r3, #20
    dee4:	beq	df74 <opt_loop+0x13b0>
    dee8:	cmp	r3, #84	; 0x54
    deec:	beq	dfa0 <opt_loop+0x13dc>
    def0:	ldr	r2, [r7, #8]
    def4:	b	dc40 <opt_loop+0x107c>
    def8:	ldr	r3, [pc, #-772]	; dbfc <opt_loop+0x1038>
    defc:	ldr	r3, [r9, r3]
    df00:	ldr	r1, [r7, #204]	; 0xcc
    df04:	ldr	r3, [r3]
    df08:	add	r0, r3, r1, lsl #3
    df0c:	ldr	r3, [r3, r1, lsl #3]
    df10:	cmp	r3, #0
    df14:	beq	df44 <opt_loop+0x1380>
    df18:	ldr	r3, [r7, #20]
    df1c:	ldr	r1, [r0, #4]
    df20:	add	r3, r3, r1
    df24:	str	r3, [r7, #20]
    df28:	mvn	r3, #0
    df2c:	str	r3, [r2]
    df30:	mov	r2, #0
    df34:	ldr	r3, [pc, #-848]	; dbec <opt_loop+0x1028>
    df38:	add	r3, pc, r3
    df3c:	str	r2, [r3, #868]	; 0x364
    df40:	b	dc34 <opt_loop+0x1070>
    df44:	ldr	r3, [r7, #20]
    df48:	cmp	r3, #0
    df4c:	bne	def0 <opt_loop+0x132c>
    df50:	mvn	r3, #0
    df54:	str	r3, [r2]
    df58:	mov	r3, #29
    df5c:	str	r3, [r7, #8]
    df60:	mov	r2, #0
    df64:	ldr	r3, [pc, #-892]	; dbf0 <opt_loop+0x102c>
    df68:	add	r3, pc, r3
    df6c:	str	r2, [r3, #868]	; 0x364
    df70:	b	def0 <opt_loop+0x132c>
    df74:	mvn	r3, #0
    df78:	str	r3, [r2]
    df7c:	ldr	r3, [r7, #20]
    df80:	ldr	r2, [r2, #12]
    df84:	add	r3, r3, r2
    df88:	str	r3, [r7, #20]
    df8c:	mov	r2, #0
    df90:	ldr	r3, [pc, #-932]	; dbf4 <opt_loop+0x1030>
    df94:	add	r3, pc, r3
    df98:	str	r2, [r3, #868]	; 0x364
    df9c:	b	dc34 <opt_loop+0x1070>
    dfa0:	ldr	r3, [r7, #20]
    dfa4:	cmp	r3, #0
    dfa8:	bne	def0 <opt_loop+0x132c>
    dfac:	ldr	r3, [r2, #12]
    dfb0:	str	r3, [r7, #20]
    dfb4:	mov	r3, #69	; 0x45
    dfb8:	str	r3, [r7, #8]
    dfbc:	mvn	r3, #0
    dfc0:	str	r3, [r2]
    dfc4:	mov	r2, #0
    dfc8:	ldr	r3, [pc, #-984]	; dbf8 <opt_loop+0x1034>
    dfcc:	add	r3, pc, r3
    dfd0:	str	r2, [r3, #868]	; 0x364
    dfd4:	ldr	r3, [r7, #60]	; 0x3c
    dfd8:	ldr	r2, [r7, #84]	; 0x54
    dfdc:	str	r2, [r7, #60]	; 0x3c
    dfe0:	str	r3, [r7, #84]	; 0x54
    dfe4:	b	dc34 <opt_loop+0x1070>
    dfe8:	ldr	r3, [r7, #20]
    dfec:	cmp	r3, #0
    dff0:	bne	e034 <opt_loop+0x1470>
    dff4:	ldr	r3, [r7, #84]	; 0x54
    dff8:	str	r3, [r7, #60]	; 0x3c
    dffc:	ldr	r3, [pc, #-1032]	; dbfc <opt_loop+0x1038>
    e000:	ldr	r3, [r9, r3]
    e004:	ldr	r3, [r3]
    e008:	ldr	r2, [r7, #204]	; 0xcc
    e00c:	ldr	r2, [r3, r2, lsl #3]
    e010:	cmp	r2, #0
    e014:	beq	dc78 <opt_loop+0x10b4>
    e018:	ldr	r2, [r7, #200]	; 0xc8
    e01c:	add	r1, r3, r2, lsl #3
    e020:	ldr	r3, [r3, r2, lsl #3]
    e024:	cmp	r3, #0
    e028:	beq	e084 <opt_loop+0x14c0>
    e02c:	ldr	r3, [r7, #8]
    e030:	b	dc98 <opt_loop+0x10d4>
    e034:	cmn	r3, #1
    e038:	ldreq	r3, [r7, #60]	; 0x3c
    e03c:	streq	r3, [r7, #84]	; 0x54
    e040:	b	dffc <opt_loop+0x1438>
    e044:	cmp	r3, #16
    e048:	bne	e114 <opt_loop+0x1550>
    e04c:	ldr	r3, [r7, #20]
    e050:	cmp	r3, r2
    e054:	movne	r3, #0
    e058:	moveq	r3, #1
    e05c:	ldr	r2, [r7, #84]	; 0x54
    e060:	ldr	r1, [r7, #60]	; 0x3c
    e064:	cmp	r2, r1
    e068:	movne	ip, #0
    e06c:	ldrne	r0, [pc, #-1140]	; dc00 <opt_loop+0x103c>
    e070:	addne	r0, pc, r0
    e074:	strne	ip, [r0, #868]	; 0x364
    e078:	cmp	r3, #0
    e07c:	strne	r1, [r7, #84]	; 0x54
    e080:	streq	r2, [r7, #60]	; 0x3c
    e084:	mov	r2, #72	; 0x48
    e088:	mov	r1, #0
    e08c:	add	r0, sp, #88	; 0x58
    e090:	bl	e88 <memset@plt>
    e094:	ldr	r4, [r7, #4]
    e098:	cmp	r4, #0
    e09c:	beq	e0bc <opt_loop+0x14f8>
    e0a0:	add	r5, sp, #88	; 0x58
    e0a4:	mov	r1, r5
    e0a8:	mov	r0, r4
    e0ac:	bl	c878 <deadstmt>
    e0b0:	ldr	r4, [r4, #16]
    e0b4:	cmp	r4, #0
    e0b8:	bne	e0a4 <opt_loop+0x14e0>
    e0bc:	add	r1, sp, #88	; 0x58
    e0c0:	add	r0, r7, #8
    e0c4:	bl	c878 <deadstmt>
    e0c8:	ldr	r3, [sp, #20]
    e0cc:	ldr	r4, [r3, #868]	; 0x364
    e0d0:	add	r3, sp, #84	; 0x54
    e0d4:	add	ip, sp, #156	; 0x9c
    e0d8:	mov	lr, #0
    e0dc:	mov	r2, lr
    e0e0:	mvn	r6, #0
    e0e4:	mov	r5, lr
    e0e8:	b	e124 <opt_loop+0x1560>
    e0ec:	ldr	r3, [r7, #20]
    e0f0:	cmp	r3, r2
    e0f4:	movcs	r3, #0
    e0f8:	movcc	r3, #1
    e0fc:	b	e05c <opt_loop+0x1498>
    e100:	ldr	r3, [r7, #20]
    e104:	cmp	r3, r2
    e108:	movhi	r3, #0
    e10c:	movls	r3, #1
    e110:	b	e05c <opt_loop+0x1498>
    e114:	bl	f18 <abort@plt>
    e118:	add	r2, r2, #1
    e11c:	cmp	ip, r3
    e120:	beq	e148 <opt_loop+0x1584>
    e124:	ldr	r1, [r3, #4]!
    e128:	cmp	r1, #0
    e12c:	beq	e118 <opt_loop+0x1554>
    e130:	ldr	r0, [r7, #128]	; 0x80
    e134:	ands	r0, r0, sl, lsl r2
    e138:	streq	r6, [r1]
    e13c:	ldreq	lr, [sp, #4]
    e140:	moveq	r4, r5
    e144:	b	e118 <opt_loop+0x1554>
    e148:	cmp	lr, #0
    e14c:	ldrne	r3, [sp, #56]	; 0x38
    e150:	strne	r4, [r3, #868]	; 0x364
    e154:	ldr	r3, [r7, #8]
    e158:	tst	r3, #8
    e15c:	beq	e1e8 <opt_loop+0x1624>
    e160:	ldr	r3, [r7, #204]	; 0xcc
    e164:	str	r3, [r7, #132]	; 0x84
    e168:	ldr	r3, [r7, #8]
    e16c:	str	r3, [r7, #52]	; 0x34
    e170:	rsb	r3, r3, #0
    e174:	str	r3, [r7, #76]	; 0x4c
    e178:	ldr	r7, [r7, #100]	; 0x64
    e17c:	cmp	r7, #0
    e180:	beq	e200 <opt_loop+0x163c>
    e184:	ldr	r4, [r7, #112]	; 0x70
    e188:	cmp	r4, #0
    e18c:	beq	d1e8 <opt_loop+0x624>
    e190:	ldr	r1, [r4, #16]
    e194:	mov	r2, #72	; 0x48
    e198:	add	r1, r1, #136	; 0x88
    e19c:	add	r0, r7, #136	; 0x88
    e1a0:	bl	dc8 <memcpy@plt>
    e1a4:	mov	ip, #0
    e1a8:	ldr	r4, [r4, #20]
    e1ac:	cmp	r4, #0
    e1b0:	beq	d1f8 <opt_loop+0x634>
    e1b4:	add	r1, r7, #136	; 0x88
    e1b8:	mov	r3, #0
    e1bc:	ldr	lr, [r4, #16]
    e1c0:	add	r2, r3, #34	; 0x22
    e1c4:	ldr	r0, [r1]
    e1c8:	ldr	r2, [lr, r2, lsl #2]
    e1cc:	cmp	r0, r2
    e1d0:	strne	ip, [r1]
    e1d4:	add	r3, r3, #1
    e1d8:	add	r1, r1, #4
    e1dc:	cmp	r3, #18
    e1e0:	bne	e1bc <opt_loop+0x15f8>
    e1e4:	b	e1a8 <opt_loop+0x15e4>
    e1e8:	mov	r2, #0
    e1ec:	ldr	r1, [r7, #20]
    e1f0:	mov	r0, r2
    e1f4:	bl	c3a0 <F>
    e1f8:	str	r0, [r7, #132]	; 0x84
    e1fc:	b	e168 <opt_loop+0x15a4>
    e200:	ldr	r3, [sp, #36]	; 0x24
    e204:	sub	r3, r3, #1
    e208:	str	r3, [sp, #36]	; 0x24
    e20c:	ldr	r2, [sp, #28]
    e210:	sub	r2, r2, #4
    e214:	str	r2, [sp, #28]
    e218:	cmn	r3, #1
    e21c:	beq	e248 <opt_loop+0x1684>
    e220:	ldr	r3, [sp, #52]	; 0x34
    e224:	ldr	r3, [r3]
    e228:	ldr	r2, [sp, #28]
    e22c:	ldr	r7, [r3, r2]
    e230:	cmp	r7, #0
    e234:	beq	e200 <opt_loop+0x163c>
    e238:	ldr	r3, [pc, #-1596]	; dc04 <opt_loop+0x1040>
    e23c:	add	r3, pc, r3
    e240:	str	r3, [sp, #56]	; 0x38
    e244:	b	e184 <opt_loop+0x15c0>
    e248:	mov	fp, r9
    e24c:	ldr	r3, [sp, #32]
    e250:	cmp	r3, #0
    e254:	bne	e6d4 <opt_loop+0x1b10>
    e258:	ldr	r3, [sp, #24]
    e25c:	cmp	r3, #0
    e260:	ble	e758 <opt_loop+0x1b94>
    e264:	mov	r5, #1
    e268:	ldr	r3, [pc, #-1636]	; dc0c <opt_loop+0x1048>
    e26c:	ldr	r6, [fp, r3]
    e270:	ldr	r3, [r6]
    e274:	ldr	r4, [r3, r5, lsl #2]
    e278:	cmp	r4, #0
    e27c:	beq	e29c <opt_loop+0x16d8>
    e280:	add	r0, r4, #48	; 0x30
    e284:	bl	c9f0 <opt_j>
    e288:	add	r0, r4, #72	; 0x48
    e28c:	bl	c9f0 <opt_j>
    e290:	ldr	r4, [r4, #100]	; 0x64
    e294:	cmp	r4, #0
    e298:	bne	e280 <opt_loop+0x16bc>
    e29c:	add	r5, r5, #1
    e2a0:	ldr	r3, [sp, #24]
    e2a4:	cmp	r3, r5
    e2a8:	bge	e270 <opt_loop+0x16ac>
    e2ac:	ldr	r0, [sp, #12]
    e2b0:	bl	c52c <find_inedges>
    e2b4:	ldr	r3, [pc, #-1716]	; dc08 <opt_loop+0x1044>
    e2b8:	add	r3, pc, r3
    e2bc:	ldr	r3, [r3, #868]	; 0x364
    e2c0:	str	r3, [sp]
    e2c4:	ldr	r3, [sp, #24]
    e2c8:	add	r3, r3, #1
    e2cc:	str	r3, [sp, #24]
    e2d0:	mov	r3, #0
    e2d4:	str	r3, [sp, #8]
    e2d8:	mov	r3, #1
    e2dc:	str	r3, [sp, #16]
    e2e0:	ldr	r3, [pc, #-1756]	; dc0c <opt_loop+0x1048>
    e2e4:	ldr	r3, [fp, r3]
    e2e8:	str	r3, [sp, #28]
    e2ec:	mov	r9, #0
    e2f0:	b	e6ac <opt_loop+0x1ae8>
    e2f4:	ldr	r3, [r1, #60]	; 0x3c
    e2f8:	cmp	r3, ip
    e2fc:	addeq	r1, r1, #60	; 0x3c
    e300:	addne	r1, r1, #84	; 0x54
    e304:	ldr	r3, [r1]
    e308:	cmp	r3, #0
    e30c:	beq	e55c <opt_loop+0x1998>
    e310:	ldr	lr, [r3, #60]	; 0x3c
    e314:	ldr	r0, [ip, #60]	; 0x3c
    e318:	cmp	lr, r0
    e31c:	bne	e55c <opt_loop+0x1998>
    e320:	ldr	r0, [ip]
    e324:	lsr	r7, r0, #5
    e328:	lsl	r4, r7, #2
    e32c:	and	r0, r0, #31
    e330:	lsl	r0, sl, r0
    e334:	ldr	r6, [r3, #104]	; 0x68
    e338:	ldr	r6, [r6, r7, lsl #2]
    e33c:	tst	r0, r6
    e340:	beq	e55c <opt_loop+0x1998>
    e344:	ldr	r8, [sp, #4]
    e348:	ldr	r6, [r3, #200]	; 0xc8
    e34c:	cmp	r2, r6
    e350:	bne	e388 <opt_loop+0x17c4>
    e354:	add	r1, r3, #84	; 0x54
    e358:	ldr	r3, [r3, #84]	; 0x54
    e35c:	cmp	r3, #0
    e360:	beq	e55c <opt_loop+0x1998>
    e364:	ldr	r6, [r3, #60]	; 0x3c
    e368:	cmp	r6, lr
    e36c:	bne	e55c <opt_loop+0x1998>
    e370:	mov	r8, r9
    e374:	ldr	r6, [r3, #104]	; 0x68
    e378:	ldr	r6, [r6, r4]
    e37c:	tst	r0, r6
    e380:	bne	e348 <opt_loop+0x1784>
    e384:	b	e55c <opt_loop+0x1998>
    e388:	str	r4, [sp, #20]
    e38c:	ldr	r6, [r3, #84]	; 0x54
    e390:	cmp	r6, #0
    e394:	beq	e55c <opt_loop+0x1998>
    e398:	ldr	r4, [r6, #60]	; 0x3c
    e39c:	cmp	r4, lr
    e3a0:	bne	e55c <opt_loop+0x1998>
    e3a4:	ldr	r4, [r6, #104]	; 0x68
    e3a8:	ldr	r7, [r4, r7, lsl #2]
    e3ac:	tst	r0, r7
    e3b0:	beq	e55c <opt_loop+0x1998>
    e3b4:	ldr	r7, [r6, #200]	; 0xc8
    e3b8:	cmp	r2, r7
    e3bc:	ldrne	r4, [sp, #20]
    e3c0:	beq	e460 <opt_loop+0x189c>
    e3c4:	ldr	r7, [r6, #84]	; 0x54
    e3c8:	cmp	r7, #0
    e3cc:	beq	e55c <opt_loop+0x1998>
    e3d0:	ldr	r3, [r7, #60]	; 0x3c
    e3d4:	cmp	r3, lr
    e3d8:	bne	e55c <opt_loop+0x1998>
    e3dc:	ldr	r3, [r7, #104]	; 0x68
    e3e0:	ldr	r3, [r3, r4]
    e3e4:	tst	r0, r3
    e3e8:	beq	e55c <opt_loop+0x1998>
    e3ec:	ldr	r3, [r7, #200]	; 0xc8
    e3f0:	cmp	r2, r3
    e3f4:	movne	r6, r7
    e3f8:	bne	e3c4 <opt_loop+0x1800>
    e3fc:	add	r3, r6, #84	; 0x54
    e400:	ldr	r2, [r7, #84]	; 0x54
    e404:	str	r2, [r3]
    e408:	ldr	r3, [r1]
    e40c:	str	r3, [r7, #84]	; 0x54
    e410:	cmp	r8, #0
    e414:	beq	e46c <opt_loop+0x18a8>
    e418:	ldr	r3, [ip, #112]	; 0x70
    e41c:	cmp	r3, #0
    e420:	beq	e674 <opt_loop+0x1ab0>
    e424:	ldr	r2, [r3, #16]
    e428:	ldr	r1, [r2, #60]	; 0x3c
    e42c:	cmp	r1, ip
    e430:	streq	r7, [r2, #60]	; 0x3c
    e434:	strne	r7, [r2, #84]	; 0x54
    e438:	ldr	r3, [r3, #20]
    e43c:	cmp	r3, #0
    e440:	bne	e424 <opt_loop+0x1860>
    e444:	ldr	r5, [ip, #112]	; 0x70
    e448:	cmp	r5, #0
    e44c:	beq	e684 <opt_loop+0x1ac0>
    e450:	ldr	r3, [sp, #4]
    e454:	str	r3, [sp, #8]
    e458:	str	r9, [sp]
    e45c:	b	e55c <opt_loop+0x1998>
    e460:	add	r3, r3, #84	; 0x54
    e464:	mov	r7, r6
    e468:	b	e400 <opt_loop+0x183c>
    e46c:	str	r7, [r1]
    e470:	b	e444 <opt_loop+0x1880>
    e474:	ldr	r3, [r0, #60]	; 0x3c
    e478:	cmp	r3, ip
    e47c:	addeq	r0, r0, #60	; 0x3c
    e480:	addne	r0, r0, #84	; 0x54
    e484:	ldr	r3, [r0]
    e488:	cmp	r3, #0
    e48c:	beq	e504 <opt_loop+0x1940>
    e490:	ldr	r4, [r3, #84]	; 0x54
    e494:	ldr	r2, [ip, #84]	; 0x54
    e498:	cmp	r4, r2
    e49c:	bne	e504 <opt_loop+0x1940>
    e4a0:	ldr	r2, [ip]
    e4a4:	lsr	r7, r2, #5
    e4a8:	lsl	r5, r7, #2
    e4ac:	and	r2, r2, #31
    e4b0:	lsl	lr, sl, r2
    e4b4:	ldr	r2, [r3, #104]	; 0x68
    e4b8:	ldr	r2, [r2, r7, lsl #2]
    e4bc:	tst	lr, r2
    e4c0:	beq	e504 <opt_loop+0x1940>
    e4c4:	ldr	r6, [sp, #4]
    e4c8:	ldr	r2, [r3, #200]	; 0xc8
    e4cc:	cmp	r1, r2
    e4d0:	bne	e5a0 <opt_loop+0x19dc>
    e4d4:	add	r0, r3, #60	; 0x3c
    e4d8:	ldr	r3, [r3, #60]	; 0x3c
    e4dc:	cmp	r3, #0
    e4e0:	beq	e504 <opt_loop+0x1940>
    e4e4:	ldr	r2, [r3, #84]	; 0x54
    e4e8:	cmp	r2, r4
    e4ec:	bne	e504 <opt_loop+0x1940>
    e4f0:	mov	r6, r9
    e4f4:	ldr	r2, [r3, #104]	; 0x68
    e4f8:	ldr	r2, [r2, r5]
    e4fc:	tst	lr, r2
    e500:	bne	e4c8 <opt_loop+0x1904>
    e504:	ldr	ip, [ip, #100]	; 0x64
    e508:	cmp	ip, #0
    e50c:	beq	e694 <opt_loop+0x1ad0>
    e510:	ldr	r5, [ip, #112]	; 0x70
    e514:	cmp	r5, #0
    e518:	beq	e504 <opt_loop+0x1940>
    e51c:	ldr	r1, [r5, #16]
    e520:	ldr	r2, [r1, #200]	; 0xc8
    e524:	ldr	r3, [r5, #20]
    e528:	cmp	r3, #0
    e52c:	beq	e2f4 <opt_loop+0x1730>
    e530:	ldr	r0, [r3, #16]
    e534:	ldr	r0, [r0, #200]	; 0xc8
    e538:	cmp	r2, r0
    e53c:	bne	e55c <opt_loop+0x1998>
    e540:	ldr	r3, [r3, #20]
    e544:	cmp	r3, #0
    e548:	beq	e2f4 <opt_loop+0x1730>
    e54c:	ldr	r0, [r3, #16]
    e550:	ldr	r0, [r0, #200]	; 0xc8
    e554:	cmp	r2, r0
    e558:	beq	e540 <opt_loop+0x197c>
    e55c:	ldr	r0, [r5, #16]
    e560:	ldr	r1, [r0, #200]	; 0xc8
    e564:	ldr	r3, [r5, #20]
    e568:	cmp	r3, #0
    e56c:	beq	e474 <opt_loop+0x18b0>
    e570:	ldr	r2, [r3, #16]
    e574:	ldr	r2, [r2, #200]	; 0xc8
    e578:	cmp	r1, r2
    e57c:	bne	e504 <opt_loop+0x1940>
    e580:	ldr	r3, [r3, #20]
    e584:	cmp	r3, #0
    e588:	beq	e474 <opt_loop+0x18b0>
    e58c:	ldr	r2, [r3, #16]
    e590:	ldr	r2, [r2, #200]	; 0xc8
    e594:	cmp	r1, r2
    e598:	beq	e580 <opt_loop+0x19bc>
    e59c:	b	e504 <opt_loop+0x1940>
    e5a0:	ldr	r2, [r3, #60]	; 0x3c
    e5a4:	cmp	r2, #0
    e5a8:	beq	e504 <opt_loop+0x1940>
    e5ac:	ldr	r8, [r2, #84]	; 0x54
    e5b0:	cmp	r8, r4
    e5b4:	bne	e504 <opt_loop+0x1940>
    e5b8:	ldr	r8, [r2, #104]	; 0x68
    e5bc:	ldr	r7, [r8, r7, lsl #2]
    e5c0:	tst	lr, r7
    e5c4:	beq	e504 <opt_loop+0x1940>
    e5c8:	ldr	r7, [r2, #200]	; 0xc8
    e5cc:	cmp	r1, r7
    e5d0:	beq	e668 <opt_loop+0x1aa4>
    e5d4:	ldr	r7, [r2, #60]	; 0x3c
    e5d8:	cmp	r7, #0
    e5dc:	beq	e504 <opt_loop+0x1940>
    e5e0:	ldr	r3, [r7, #84]	; 0x54
    e5e4:	cmp	r3, r4
    e5e8:	bne	e504 <opt_loop+0x1940>
    e5ec:	ldr	r3, [r7, #104]	; 0x68
    e5f0:	ldr	r3, [r3, r5]
    e5f4:	tst	lr, r3
    e5f8:	beq	e504 <opt_loop+0x1940>
    e5fc:	ldr	r3, [r7, #200]	; 0xc8
    e600:	cmp	r1, r3
    e604:	movne	r2, r7
    e608:	bne	e5d4 <opt_loop+0x1a10>
    e60c:	add	r3, r2, #60	; 0x3c
    e610:	ldr	r2, [r7, #60]	; 0x3c
    e614:	str	r2, [r3]
    e618:	ldr	r3, [r0]
    e61c:	str	r3, [r7, #60]	; 0x3c
    e620:	cmp	r6, #0
    e624:	streq	r7, [r0]
    e628:	beq	e658 <opt_loop+0x1a94>
    e62c:	ldr	r3, [ip, #112]	; 0x70
    e630:	cmp	r3, #0
    e634:	beq	e658 <opt_loop+0x1a94>
    e638:	ldr	r2, [r3, #16]
    e63c:	ldr	r1, [r2, #60]	; 0x3c
    e640:	cmp	r1, ip
    e644:	streq	r7, [r2, #60]	; 0x3c
    e648:	strne	r7, [r2, #84]	; 0x54
    e64c:	ldr	r3, [r3, #20]
    e650:	cmp	r3, #0
    e654:	bne	e638 <opt_loop+0x1a74>
    e658:	ldr	r3, [sp, #4]
    e65c:	str	r3, [sp, #8]
    e660:	str	r9, [sp]
    e664:	b	e504 <opt_loop+0x1940>
    e668:	add	r3, r3, #60	; 0x3c
    e66c:	mov	r7, r2
    e670:	b	e610 <opt_loop+0x1a4c>
    e674:	ldr	r3, [sp, #4]
    e678:	str	r3, [sp, #8]
    e67c:	str	r9, [sp]
    e680:	b	e504 <opt_loop+0x1940>
    e684:	ldr	r3, [sp, #4]
    e688:	str	r3, [sp, #8]
    e68c:	str	r9, [sp]
    e690:	b	e504 <opt_loop+0x1940>
    e694:	ldr	r3, [sp, #16]
    e698:	add	r3, r3, #1
    e69c:	str	r3, [sp, #16]
    e6a0:	ldr	r2, [sp, #24]
    e6a4:	cmp	r3, r2
    e6a8:	beq	e6c8 <opt_loop+0x1b04>
    e6ac:	ldr	r3, [sp, #28]
    e6b0:	ldr	r3, [r3]
    e6b4:	ldr	r2, [sp, #16]
    e6b8:	ldr	ip, [r3, r2, lsl #2]
    e6bc:	cmp	ip, #0
    e6c0:	bne	e510 <opt_loop+0x194c>
    e6c4:	b	e694 <opt_loop+0x1ad0>
    e6c8:	ldr	r3, [sp, #8]
    e6cc:	cmp	r3, #0
    e6d0:	bne	e6f0 <opt_loop+0x1b2c>
    e6d4:	ldr	r3, [pc, #-2764]	; dc10 <opt_loop+0x104c>
    e6d8:	add	r3, pc, r3
    e6dc:	ldr	r3, [r3, #868]	; 0x364
    e6e0:	cmp	r3, #0
    e6e4:	beq	cc1c <opt_loop+0x58>
    e6e8:	add	sp, sp, #164	; 0xa4
    e6ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e6f0:	ldr	r3, [pc, #-2788]	; dc14 <opt_loop+0x1050>
    e6f4:	add	r3, pc, r3
    e6f8:	ldr	r2, [sp]
    e6fc:	str	r2, [r3, #868]	; 0x364
    e700:	b	e6d4 <opt_loop+0x1b10>
    e704:	cmp	fp, #0
    e708:	bne	daf0 <opt_loop+0xf2c>
    e70c:	b	e084 <opt_loop+0x14c0>
    e710:	cmp	ip, #0
    e714:	ldrne	r3, [pc, #-2820]	; dc18 <opt_loop+0x1054>
    e718:	addne	r3, pc, r3
    e71c:	strne	r4, [r3, #868]	; 0x364
    e720:	b	dc28 <opt_loop+0x1064>
    e724:	mov	r3, r2
    e728:	b	dd14 <opt_loop+0x1150>
    e72c:	cmp	ip, #0
    e730:	ldrne	r3, [pc, #-2844]	; dc1c <opt_loop+0x1058>
    e734:	addne	r3, pc, r3
    e738:	strne	r4, [r3, #868]	; 0x364
    e73c:	b	dc28 <opt_loop+0x1064>
    e740:	mov	r2, r1
    e744:	b	dd48 <opt_loop+0x1184>
    e748:	ldr	r3, [sp, #32]
    e74c:	cmp	r3, #0
    e750:	beq	e258 <opt_loop+0x1694>
    e754:	b	e6e8 <opt_loop+0x1b24>
    e758:	ldr	r0, [sp, #12]
    e75c:	bl	c52c <find_inedges>
    e760:	b	e6d4 <opt_loop+0x1b10>
    e764:	ldr	r1, [r4, #12]
    e768:	mov	r0, r5
    e76c:	bl	c3a0 <F>
    e770:	b	d29c <opt_loop+0x6d8>

0000e774 <convert_code_r>:
    e774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e778:	sub	sp, sp, #12
    e77c:	subs	r7, r0, #0
    e780:	beq	ead4 <convert_code_r+0x360>
    e784:	ldr	r3, [pc, #864]	; eaec <convert_code_r+0x378>
    e788:	add	r3, pc, r3
    e78c:	ldr	r3, [r3]
    e790:	ldr	r2, [r7, #24]
    e794:	cmp	r2, r3
    e798:	beq	eadc <convert_code_r+0x368>
    e79c:	str	r3, [r7, #24]
    e7a0:	ldr	r0, [r7, #84]	; 0x54
    e7a4:	bl	e774 <convert_code_r>
    e7a8:	cmp	r0, #0
    e7ac:	bne	e7b8 <convert_code_r+0x44>
    e7b0:	add	sp, sp, #12
    e7b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e7b8:	ldr	r0, [r7, #60]	; 0x3c
    e7bc:	bl	e774 <convert_code_r>
    e7c0:	cmp	r0, #0
    e7c4:	beq	e7b0 <convert_code_r+0x3c>
    e7c8:	ldr	r4, [r7, #4]
    e7cc:	mov	r0, r4
    e7d0:	bl	c634 <slength>
    e7d4:	mov	r6, r0
    e7d8:	ldr	r2, [pc, #784]	; eaf0 <convert_code_r+0x37c>
    e7dc:	add	r2, pc, r2
    e7e0:	add	r3, r0, #1
    e7e4:	ldr	r1, [r7, #28]
    e7e8:	add	r3, r3, r1
    e7ec:	ldr	r5, [r7, #32]
    e7f0:	add	r3, r3, r5
    e7f4:	ldr	r5, [r2, #896]	; 0x380
    e7f8:	sub	r5, r5, r3, lsl #3
    e7fc:	str	r5, [r2, #896]	; 0x380
    e800:	ldr	r3, [r2, #900]	; 0x384
    e804:	sub	r3, r5, r3
    e808:	asr	r3, r3, #3
    e80c:	str	r3, [r7, #40]	; 0x28
    e810:	cmp	r0, #0
    e814:	bne	e828 <convert_code_r+0xb4>
    e818:	cmp	r4, #0
    e81c:	movne	r0, #0
    e820:	bne	e874 <convert_code_r+0x100>
    e824:	b	e9fc <convert_code_r+0x288>
    e828:	mov	r8, r0
    e82c:	mov	r1, #4
    e830:	bl	d38 <calloc@plt>
    e834:	cmp	r0, #0
    e838:	beq	e884 <convert_code_r+0x110>
    e83c:	cmp	r6, #0
    e840:	cmpne	r4, #0
    e844:	beq	e86c <convert_code_r+0xf8>
    e848:	sub	r1, r0, #4
    e84c:	mov	r3, r4
    e850:	mov	r2, #0
    e854:	str	r3, [r1, #4]!
    e858:	ldr	r3, [r3, #16]
    e85c:	add	r2, r2, #1
    e860:	cmp	r3, #0
    e864:	cmpne	r8, r2
    e868:	bhi	e854 <convert_code_r+0xe0>
    e86c:	cmp	r4, #0
    e870:	beq	e9f8 <convert_code_r+0x284>
    e874:	mov	r2, #0
    e878:	sub	fp, r6, #2
    e87c:	mov	r8, #1
    e880:	b	e954 <convert_code_r+0x1e0>
    e884:	ldr	r0, [pc, #616]	; eaf4 <convert_code_r+0x380>
    e888:	add	r0, pc, r0
    e88c:	bl	22b4 <sf_bpf_error>
    e890:	ldr	r1, [pc, #608]	; eaf8 <convert_code_r+0x384>
    e894:	add	r1, pc, r1
    e898:	ldr	r0, [pc, #604]	; eafc <convert_code_r+0x388>
    e89c:	add	r0, pc, r0
    e8a0:	bl	22b4 <sf_bpf_error>
    e8a4:	cmp	sl, #0
    e8a8:	strbeq	r3, [r5, #2]
    e8ac:	moveq	sl, r8
    e8b0:	beq	e908 <convert_code_r+0x194>
    e8b4:	mov	r2, ip
    e8b8:	ldr	r1, [pc, #576]	; eb00 <convert_code_r+0x38c>
    e8bc:	add	r1, pc, r1
    e8c0:	ldr	r0, [pc, #572]	; eb04 <convert_code_r+0x390>
    e8c4:	add	r0, pc, r0
    e8c8:	bl	22b4 <sf_bpf_error>
    e8cc:	mov	r2, ip
    e8d0:	ldr	r1, [pc, #560]	; eb08 <convert_code_r+0x394>
    e8d4:	add	r1, pc, r1
    e8d8:	ldr	r0, [pc, #556]	; eb0c <convert_code_r+0x398>
    e8dc:	add	r0, pc, r0
    e8e0:	bl	22b4 <sf_bpf_error>
    e8e4:	add	r1, r1, #1
    e8e8:	add	r3, r3, #1
    e8ec:	uxtb	r3, r3
    e8f0:	cmp	r6, r1
    e8f4:	beq	e928 <convert_code_r+0x1b4>
    e8f8:	ldr	r2, [lr, #4]!
    e8fc:	ldr	r0, [r4, #4]
    e900:	cmp	r2, r0
    e904:	beq	e8a4 <convert_code_r+0x130>
    e908:	ldr	r0, [r4, #8]
    e90c:	cmp	r2, r0
    e910:	bne	e8e4 <convert_code_r+0x170>
    e914:	cmp	r9, #0
    e918:	bne	e8cc <convert_code_r+0x158>
    e91c:	strb	r3, [r5, #3]
    e920:	mov	r9, r8
    e924:	b	e8e4 <convert_code_r+0x170>
    e928:	mov	r2, ip
    e92c:	ldr	r0, [sp, #4]
    e930:	eor	sl, sl, #1
    e934:	eor	r9, r9, #1
    e938:	orrs	r3, sl, r9
    e93c:	bne	e9dc <convert_code_r+0x268>
    e940:	add	r5, r5, #8
    e944:	add	r2, r2, #1
    e948:	ldr	r4, [r4, #16]
    e94c:	cmp	r4, #0
    e950:	beq	e9f0 <convert_code_r+0x27c>
    e954:	ldr	r3, [r4]
    e958:	cmn	r3, #1
    e95c:	beq	e948 <convert_code_r+0x1d4>
    e960:	strh	r3, [r5]
    e964:	ldr	r3, [r4, #12]
    e968:	str	r3, [r5, #4]
    e96c:	ldr	r3, [r4]
    e970:	and	r1, r3, #7
    e974:	cmp	r3, #5
    e978:	movne	r3, #0
    e97c:	moveq	r3, #1
    e980:	cmp	r1, #5
    e984:	orrne	r3, r3, #1
    e988:	cmp	r3, #0
    e98c:	bne	e940 <convert_code_r+0x1cc>
    e990:	cmp	fp, r2
    e994:	beq	e940 <convert_code_r+0x1cc>
    e998:	ldr	r3, [r4, #4]
    e99c:	cmp	r3, #0
    e9a0:	beq	e890 <convert_code_r+0x11c>
    e9a4:	ldr	r3, [r4, #8]
    e9a8:	cmp	r3, #0
    e9ac:	beq	e890 <convert_code_r+0x11c>
    e9b0:	cmp	r6, #0
    e9b4:	ble	e9dc <convert_code_r+0x268>
    e9b8:	sub	lr, r0, #4
    e9bc:	mvn	r3, r2
    e9c0:	uxtb	r3, r3
    e9c4:	mov	r9, #0
    e9c8:	mov	sl, r9
    e9cc:	mov	r1, r9
    e9d0:	mov	ip, r2
    e9d4:	str	r0, [sp, #4]
    e9d8:	b	e8f8 <convert_code_r+0x184>
    e9dc:	ldr	r1, [pc, #300]	; eb10 <convert_code_r+0x39c>
    e9e0:	add	r1, pc, r1
    e9e4:	ldr	r0, [pc, #296]	; eb14 <convert_code_r+0x3a0>
    e9e8:	add	r0, pc, r0
    e9ec:	bl	22b4 <sf_bpf_error>
    e9f0:	cmp	r0, #0
    e9f4:	beq	e9fc <convert_code_r+0x288>
    e9f8:	bl	da4 <free@plt>
    e9fc:	ldr	r3, [r7, #8]
    ea00:	strh	r3, [r5]
    ea04:	ldr	r3, [r7, #20]
    ea08:	str	r3, [r5, #4]
    ea0c:	ldr	r1, [r7, #60]	; 0x3c
    ea10:	cmp	r1, #0
    ea14:	beq	eae4 <convert_code_r+0x370>
    ea18:	ldr	r3, [r7, #40]	; 0x28
    ea1c:	add	r2, r6, r3
    ea20:	ldr	r3, [r1, #40]	; 0x28
    ea24:	sub	r3, r3, r2
    ea28:	sub	r3, r3, #1
    ea2c:	cmp	r3, #255	; 0xff
    ea30:	bls	ea68 <convert_code_r+0x2f4>
    ea34:	ldr	r0, [r7, #28]
    ea38:	cmp	r0, #0
    ea3c:	moveq	r3, #1
    ea40:	streq	r3, [r7, #28]
    ea44:	beq	e7b0 <convert_code_r+0x3c>
    ea48:	mov	r2, #0
    ea4c:	strb	r2, [r5, #2]
    ea50:	mov	r2, #5
    ea54:	strh	r2, [r5, #8]
    ea58:	sub	r3, r3, #1
    ea5c:	str	r3, [r5, #12]
    ea60:	mov	r2, #1
    ea64:	b	ea70 <convert_code_r+0x2fc>
    ea68:	strb	r3, [r5, #2]
    ea6c:	mov	r2, #0
    ea70:	ldr	r1, [r7, #84]	; 0x54
    ea74:	ldr	r3, [r7, #40]	; 0x28
    ea78:	add	r6, r6, r3
    ea7c:	ldr	r3, [r1, #40]	; 0x28
    ea80:	sub	r3, r3, r6
    ea84:	sub	r3, r3, #1
    ea88:	cmp	r3, #255	; 0xff
    ea8c:	strbls	r3, [r5, #3]
    ea90:	movls	r0, #1
    ea94:	bls	e7b0 <convert_code_r+0x3c>
    ea98:	ldr	r0, [r7, #32]
    ea9c:	cmp	r0, #0
    eaa0:	moveq	r3, #1
    eaa4:	streq	r3, [r7, #32]
    eaa8:	beq	e7b0 <convert_code_r+0x3c>
    eaac:	strb	r2, [r5, #3]
    eab0:	add	r2, r2, #1
    eab4:	lsl	r1, r2, #3
    eab8:	add	r0, r5, r1
    eabc:	mov	ip, #5
    eac0:	strh	ip, [r5, r1]
    eac4:	sub	r3, r3, r2
    eac8:	str	r3, [r0, #4]
    eacc:	mov	r0, #1
    ead0:	b	e7b0 <convert_code_r+0x3c>
    ead4:	mov	r0, #1
    ead8:	b	e7b0 <convert_code_r+0x3c>
    eadc:	mov	r0, #1
    eae0:	b	e7b0 <convert_code_r+0x3c>
    eae4:	mov	r0, #1
    eae8:	b	e7b0 <convert_code_r+0x3c>
    eaec:	.word	0x00022fa8
    eaf0:	.word	0x00022f54
    eaf4:	.word	0x00006280
    eaf8:	.word	0x00006284
    eafc:	.word	0x00006290
    eb00:	.word	0x0000629c
    eb04:	.word	0x00006268
    eb08:	.word	0x00006284
    eb0c:	.word	0x00006250
    eb10:	.word	0x0000618c
    eb14:	.word	0x00006144

0000eb18 <sf_bpf_optimize>:
    eb18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eb1c:	sub	sp, sp, #28
    eb20:	str	r0, [sp, #20]
    eb24:	ldr	fp, [pc, #1740]	; f1f8 <sf_bpf_optimize+0x6e0>
    eb28:	add	fp, pc, fp
    eb2c:	ldr	r3, [r0]
    eb30:	mov	r0, r3
    eb34:	str	r3, [sp, #4]
    eb38:	ldr	r3, [pc, #1724]	; f1fc <sf_bpf_optimize+0x6e4>
    eb3c:	add	r3, pc, r3
    eb40:	ldr	r5, [r3]
    eb44:	add	r2, r5, #1
    eb48:	str	r2, [r3]
    eb4c:	bl	c664 <count_blocks>
    eb50:	mov	r4, r0
    eb54:	mov	r1, #4
    eb58:	bl	d38 <calloc@plt>
    eb5c:	ldr	r3, [pc, #1692]	; f200 <sf_bpf_optimize+0x6e8>
    eb60:	ldr	r3, [fp, r3]
    eb64:	str	r0, [r3]
    eb68:	cmp	r0, #0
    eb6c:	beq	ede4 <sf_bpf_optimize+0x2cc>
    eb70:	ldr	r6, [pc, #1676]	; f204 <sf_bpf_optimize+0x6ec>
    eb74:	add	r6, pc, r6
    eb78:	add	r5, r5, #2
    eb7c:	str	r5, [r6]
    eb80:	mov	r3, #0
    eb84:	str	r3, [r6, #864]	; 0x360
    eb88:	ldr	r0, [sp, #4]
    eb8c:	bl	c6c0 <number_blks_r>
    eb90:	ldr	r5, [r6, #864]	; 0x360
    eb94:	lsl	r9, r5, #1
    eb98:	str	r9, [r6, #888]	; 0x378
    eb9c:	mov	r1, #4
    eba0:	mov	r0, r9
    eba4:	bl	d38 <calloc@plt>
    eba8:	ldr	r3, [pc, #1624]	; f208 <sf_bpf_optimize+0x6f0>
    ebac:	ldr	r3, [fp, r3]
    ebb0:	str	r0, [r3]
    ebb4:	cmp	r0, #0
    ebb8:	beq	edf0 <sf_bpf_optimize+0x2d8>
    ebbc:	mov	r6, r5
    ebc0:	mov	r1, #4
    ebc4:	mov	r0, r5
    ebc8:	bl	d38 <calloc@plt>
    ebcc:	ldr	r3, [pc, #1592]	; f20c <sf_bpf_optimize+0x6f4>
    ebd0:	ldr	r3, [fp, r3]
    ebd4:	str	r0, [r3]
    ebd8:	cmp	r0, #0
    ebdc:	beq	edfc <sf_bpf_optimize+0x2e4>
    ebe0:	lsr	r7, r9, #5
    ebe4:	add	r7, r7, #1
    ebe8:	ldr	r3, [pc, #1568]	; f210 <sf_bpf_optimize+0x6f8>
    ebec:	add	r3, pc, r3
    ebf0:	str	r7, [r3, #4]
    ebf4:	lsr	r8, r5, #5
    ebf8:	add	r8, r8, #1
    ebfc:	str	r8, [r3, #876]	; 0x36c
    ec00:	lsl	r0, r5, #3
    ec04:	mul	r3, r7, r9
    ec08:	lsl	r3, r3, #2
    ec0c:	mla	r0, r8, r0, r3
    ec10:	bl	e1c <malloc@plt>
    ec14:	ldr	r3, [pc, #1528]	; f214 <sf_bpf_optimize+0x6fc>
    ec18:	ldr	r3, [fp, r3]
    ec1c:	str	r0, [r3]
    ec20:	cmp	r0, #0
    ec24:	beq	ee08 <sf_bpf_optimize+0x2f0>
    ec28:	ldr	r3, [pc, #1512]	; f218 <sf_bpf_optimize+0x700>
    ec2c:	add	r3, pc, r3
    ec30:	str	r0, [r3, #872]	; 0x368
    ec34:	cmp	r4, #0
    ec38:	ble	f17c <sf_bpf_optimize+0x664>
    ec3c:	ldr	r3, [pc, #1468]	; f200 <sf_bpf_optimize+0x6e8>
    ec40:	ldr	r3, [fp, r3]
    ec44:	ldr	r3, [r3]
    ec48:	lsl	r8, r8, #2
    ec4c:	mov	ip, r3
    ec50:	add	lr, r3, r4, lsl #2
    ec54:	mov	r2, r0
    ec58:	ldr	r1, [r3], #4
    ec5c:	str	r2, [r1, #104]	; 0x68
    ec60:	add	r2, r2, r8
    ec64:	cmp	r3, lr
    ec68:	bne	ec58 <sf_bpf_optimize+0x140>
    ec6c:	mul	r1, r8, r4
    ec70:	add	lr, r0, r1
    ec74:	ldr	r2, [pc, #1440]	; f21c <sf_bpf_optimize+0x704>
    ec78:	add	r2, pc, r2
    ec7c:	str	lr, [r2, #880]	; 0x370
    ec80:	mov	r2, lr
    ec84:	ldr	r0, [ip], #4
    ec88:	str	r2, [r0, #108]	; 0x6c
    ec8c:	add	r2, r2, r8
    ec90:	cmp	ip, r3
    ec94:	bne	ec84 <sf_bpf_optimize+0x16c>
    ec98:	add	r1, lr, r1
    ec9c:	ldr	r3, [pc, #1404]	; f220 <sf_bpf_optimize+0x708>
    eca0:	add	r3, pc, r3
    eca4:	str	r1, [r3, #884]	; 0x374
    eca8:	lsl	r9, r7, #2
    ecac:	lsl	ip, r5, #2
    ecb0:	lsl	r7, r7, #3
    ecb4:	mov	r2, #0
    ecb8:	ldr	r3, [pc, #1344]	; f200 <sf_bpf_optimize+0x6e8>
    ecbc:	ldr	r8, [fp, r3]
    ecc0:	ldr	r3, [pc, #1344]	; f208 <sf_bpf_optimize+0x6f0>
    ecc4:	ldr	lr, [fp, r3]
    ecc8:	ldr	r3, [r8]
    eccc:	ldr	r3, [r3, r2, lsl #2]
    ecd0:	str	r1, [r3, #56]	; 0x38
    ecd4:	add	r0, r1, r9
    ecd8:	str	r0, [r3, #80]	; 0x50
    ecdc:	add	r1, r1, r7
    ece0:	mov	r0, r3
    ece4:	str	r2, [r0, #48]!	; 0x30
    ece8:	ldr	sl, [lr]
    ecec:	str	r0, [sl, r2, lsl #2]
    ecf0:	add	sl, r6, r2
    ecf4:	mov	r0, r3
    ecf8:	str	sl, [r0, #72]!	; 0x48
    ecfc:	ldr	sl, [lr]
    ed00:	str	r0, [sl, ip]
    ed04:	str	r3, [r3, #64]	; 0x40
    ed08:	str	r3, [r3, #88]	; 0x58
    ed0c:	add	r2, r2, #1
    ed10:	add	ip, ip, #4
    ed14:	cmp	r4, r2
    ed18:	bgt	ecc8 <sf_bpf_optimize+0x1b0>
    ed1c:	ldr	r3, [pc, #1244]	; f200 <sf_bpf_optimize+0x6e8>
    ed20:	ldr	r3, [fp, r3]
    ed24:	ldr	r8, [r3]
    ed28:	sub	r8, r8, #4
    ed2c:	mov	r7, #0
    ed30:	mov	r6, r7
    ed34:	ldr	r3, [r8, #4]!
    ed38:	ldr	r0, [r3, #4]
    ed3c:	bl	c634 <slength>
    ed40:	add	r0, r0, #1
    ed44:	add	r7, r7, r0
    ed48:	add	r6, r6, #1
    ed4c:	cmp	r4, r6
    ed50:	bgt	ed34 <sf_bpf_optimize+0x21c>
    ed54:	add	r7, r7, r7, lsl #1
    ed58:	ldr	r3, [pc, #1220]	; f224 <sf_bpf_optimize+0x70c>
    ed5c:	add	r3, pc, r3
    ed60:	str	r7, [r3, #892]	; 0x37c
    ed64:	mov	r1, #8
    ed68:	mov	r0, r7
    ed6c:	bl	d38 <calloc@plt>
    ed70:	mov	r4, r0
    ed74:	ldr	r3, [pc, #1196]	; f228 <sf_bpf_optimize+0x710>
    ed78:	ldr	r3, [fp, r3]
    ed7c:	str	r0, [r3]
    ed80:	mov	r1, #20
    ed84:	mov	r0, r7
    ed88:	bl	d38 <calloc@plt>
    ed8c:	ldr	r3, [pc, #1176]	; f22c <sf_bpf_optimize+0x714>
    ed90:	ldr	r3, [fp, r3]
    ed94:	str	r0, [r3]
    ed98:	cmp	r4, #0
    ed9c:	cmpne	r0, #0
    eda0:	beq	ee14 <sf_bpf_optimize+0x2fc>
    eda4:	mov	r1, #0
    eda8:	ldr	r4, [sp, #4]
    edac:	mov	r0, r4
    edb0:	bl	cbc4 <opt_loop>
    edb4:	mov	r1, #1
    edb8:	mov	r0, r4
    edbc:	bl	cbc4 <opt_loop>
    edc0:	lsl	r3, r5, #2
    edc4:	str	r3, [sp]
    edc8:	sub	r3, r3, #4
    edcc:	str	r3, [sp, #12]
    edd0:	mov	r6, #0
    edd4:	ldr	sl, [pc, #1108]	; f230 <sf_bpf_optimize+0x718>
    edd8:	add	sl, pc, sl
    eddc:	mov	r9, sl
    ede0:	b	f00c <sf_bpf_optimize+0x4f4>
    ede4:	ldr	r0, [pc, #1096]	; f234 <sf_bpf_optimize+0x71c>
    ede8:	add	r0, pc, r0
    edec:	bl	22b4 <sf_bpf_error>
    edf0:	ldr	r0, [pc, #1088]	; f238 <sf_bpf_optimize+0x720>
    edf4:	add	r0, pc, r0
    edf8:	bl	22b4 <sf_bpf_error>
    edfc:	ldr	r0, [pc, #1080]	; f23c <sf_bpf_optimize+0x724>
    ee00:	add	r0, pc, r0
    ee04:	bl	22b4 <sf_bpf_error>
    ee08:	ldr	r0, [pc, #1072]	; f240 <sf_bpf_optimize+0x728>
    ee0c:	add	r0, pc, r0
    ee10:	bl	22b4 <sf_bpf_error>
    ee14:	ldr	r0, [pc, #1064]	; f244 <sf_bpf_optimize+0x72c>
    ee18:	add	r0, pc, r0
    ee1c:	bl	22b4 <sf_bpf_error>
    ee20:	str	r1, [sp, #8]
    ee24:	cmp	r7, #0
    ee28:	beq	eec0 <sf_bpf_optimize+0x3a8>
    ee2c:	ldr	r1, [r7]
    ee30:	cmn	r1, #1
    ee34:	ldreq	r1, [sp, #8]
    ee38:	bne	ee58 <sf_bpf_optimize+0x340>
    ee3c:	ldr	r7, [r7, #16]
    ee40:	cmp	r7, #0
    ee44:	beq	eecc <sf_bpf_optimize+0x3b4>
    ee48:	ldr	r3, [r7]
    ee4c:	cmn	r3, #1
    ee50:	beq	ee3c <sf_bpf_optimize+0x324>
    ee54:	str	r1, [sp, #8]
    ee58:	cmp	ip, #0
    ee5c:	beq	f1c0 <sf_bpf_optimize+0x6a8>
    ee60:	ldr	r1, [ip]
    ee64:	ldr	r3, [r7]
    ee68:	cmp	r1, r3
    ee6c:	bne	ef54 <sf_bpf_optimize+0x43c>
    ee70:	ldr	r3, [ip, #12]
    ee74:	ldr	r1, [r7, #12]
    ee78:	cmp	r3, r1
    ee7c:	bne	ef5c <sf_bpf_optimize+0x444>
    ee80:	ldr	ip, [ip, #16]
    ee84:	ldr	r7, [r7, #16]
    ee88:	cmp	ip, #0
    ee8c:	beq	f194 <sf_bpf_optimize+0x67c>
    ee90:	ldr	r1, [ip]
    ee94:	cmn	r1, #1
    ee98:	bne	ee24 <sf_bpf_optimize+0x30c>
    ee9c:	ldr	r1, [sp, #8]
    eea0:	ldr	ip, [ip, #16]
    eea4:	cmp	ip, #0
    eea8:	beq	ee20 <sf_bpf_optimize+0x308>
    eeac:	ldr	r3, [ip]
    eeb0:	cmn	r3, #1
    eeb4:	beq	eea0 <sf_bpf_optimize+0x388>
    eeb8:	str	r1, [sp, #8]
    eebc:	b	ee24 <sf_bpf_optimize+0x30c>
    eec0:	ldr	r1, [sp, #8]
    eec4:	ldr	r3, [sp, #16]
    eec8:	b	eed0 <sf_bpf_optimize+0x3b8>
    eecc:	ldr	r3, [sp, #16]
    eed0:	cmp	ip, #0
    eed4:	beq	ef48 <sf_bpf_optimize+0x430>
    eed8:	add	r3, r3, #1
    eedc:	cmp	r3, r5
    eee0:	beq	ef64 <sf_bpf_optimize+0x44c>
    eee4:	ldr	r1, [r2], #4
    eee8:	ldr	ip, [r1, #24]
    eeec:	cmp	ip, r4
    eef0:	bne	eed8 <sf_bpf_optimize+0x3c0>
    eef4:	ldr	r7, [r0, #8]
    eef8:	ldr	ip, [r1, #8]
    eefc:	cmp	r7, ip
    ef00:	bne	eed8 <sf_bpf_optimize+0x3c0>
    ef04:	ldr	r7, [r0, #20]
    ef08:	ldr	ip, [r1, #20]
    ef0c:	cmp	r7, ip
    ef10:	bne	eed8 <sf_bpf_optimize+0x3c0>
    ef14:	ldr	r7, [r0, #60]	; 0x3c
    ef18:	ldr	ip, [r1, #60]	; 0x3c
    ef1c:	cmp	r7, ip
    ef20:	bne	eed8 <sf_bpf_optimize+0x3c0>
    ef24:	ldr	r7, [r0, #84]	; 0x54
    ef28:	ldr	ip, [r1, #84]	; 0x54
    ef2c:	cmp	r7, ip
    ef30:	bne	eed8 <sf_bpf_optimize+0x3c0>
    ef34:	ldr	ip, [r0, #4]
    ef38:	ldr	r7, [r1, #4]
    ef3c:	str	r1, [sp, #8]
    ef40:	str	r3, [sp, #16]
    ef44:	b	ee88 <sf_bpf_optimize+0x370>
    ef48:	mov	ip, sl
    ef4c:	mov	sl, r8
    ef50:	b	f1d8 <sf_bpf_optimize+0x6c0>
    ef54:	ldr	r3, [sp, #16]
    ef58:	b	eed8 <sf_bpf_optimize+0x3c0>
    ef5c:	ldr	r3, [sp, #16]
    ef60:	b	eed8 <sf_bpf_optimize+0x3c0>
    ef64:	mov	ip, sl
    ef68:	mov	sl, r8
    ef6c:	mov	r2, lr
    ef70:	mov	r3, ip
    ef74:	subs	ip, r3, #1
    ef78:	bmi	efa8 <sf_bpf_optimize+0x490>
    ef7c:	sub	lr, r2, #4
    ef80:	ldr	r0, [r2, #-4]
    ef84:	ldr	r1, [r0, #24]
    ef88:	cmp	r1, r4
    ef8c:	bne	ef6c <sf_bpf_optimize+0x454>
    ef90:	add	r1, ip, #1
    ef94:	cmp	r5, r1
    ef98:	ble	ef6c <sf_bpf_optimize+0x454>
    ef9c:	mov	r8, sl
    efa0:	mov	sl, ip
    efa4:	b	eee4 <sf_bpf_optimize+0x3cc>
    efa8:	cmp	r5, #0
    efac:	ble	f068 <sf_bpf_optimize+0x550>
    efb0:	mov	r2, sl
    efb4:	ldr	r3, [sp]
    efb8:	add	ip, sl, r3
    efbc:	mov	r0, #1
    efc0:	b	efcc <sf_bpf_optimize+0x4b4>
    efc4:	cmp	r2, ip
    efc8:	beq	f004 <sf_bpf_optimize+0x4ec>
    efcc:	ldr	r3, [r2], #4
    efd0:	ldr	r1, [r3, #60]	; 0x3c
    efd4:	cmp	r1, #0
    efd8:	beq	efc4 <sf_bpf_optimize+0x4ac>
    efdc:	ldr	r1, [r1, #100]	; 0x64
    efe0:	cmp	r1, #0
    efe4:	strne	r1, [r3, #60]	; 0x3c
    efe8:	movne	r0, r6
    efec:	ldr	r1, [r3, #84]	; 0x54
    eff0:	ldr	r1, [r1, #100]	; 0x64
    eff4:	cmp	r1, #0
    eff8:	strne	r1, [r3, #84]	; 0x54
    effc:	movne	r0, r6
    f000:	b	efc4 <sf_bpf_optimize+0x4ac>
    f004:	cmp	r0, #0
    f008:	bne	f068 <sf_bpf_optimize+0x550>
    f00c:	cmp	r5, #0
    f010:	ble	f038 <sf_bpf_optimize+0x520>
    f014:	ldr	r3, [pc, #484]	; f200 <sf_bpf_optimize+0x6e8>
    f018:	ldr	r3, [fp, r3]
    f01c:	ldr	r3, [r3]
    f020:	ldr	r2, [sp]
    f024:	add	r1, r3, r2
    f028:	ldr	r2, [r3], #4
    f02c:	str	r6, [r2, #100]	; 0x64
    f030:	cmp	r3, r1
    f034:	bne	f028 <sf_bpf_optimize+0x510>
    f038:	ldr	r4, [r9]
    f03c:	add	r4, r4, #1
    f040:	str	r4, [r9]
    f044:	ldr	r0, [sp, #4]
    f048:	bl	c5e8 <make_marks>
    f04c:	sub	r3, r5, #1
    f050:	ldr	r2, [pc, #424]	; f200 <sf_bpf_optimize+0x6e8>
    f054:	ldr	r2, [fp, r2]
    f058:	ldr	sl, [r2]
    f05c:	ldr	r2, [sp, #12]
    f060:	add	r2, sl, r2
    f064:	b	ef74 <sf_bpf_optimize+0x45c>
    f068:	ldr	r1, [sp, #20]
    f06c:	ldr	r3, [r1]
    f070:	ldr	r4, [r3, #4]
    f074:	mov	r2, #0
    f078:	str	r2, [r3, #4]
    f07c:	ldr	r2, [r1]
    f080:	ldr	r3, [r2, #8]
    f084:	and	r3, r3, #7
    f088:	cmp	r3, #5
    f08c:	bne	f174 <sf_bpf_optimize+0x65c>
    f090:	ldr	r3, [r2, #60]	; 0x3c
    f094:	ldr	r1, [r2, #84]	; 0x54
    f098:	cmp	r3, r1
    f09c:	ldreq	r0, [sp, #20]
    f0a0:	beq	f0b0 <sf_bpf_optimize+0x598>
    f0a4:	mov	r3, r2
    f0a8:	b	f0d4 <sf_bpf_optimize+0x5bc>
    f0ac:	mov	r3, r2
    f0b0:	str	r3, [r0]
    f0b4:	ldr	r2, [r3, #8]
    f0b8:	and	r2, r2, #7
    f0bc:	cmp	r2, #5
    f0c0:	bne	f0d4 <sf_bpf_optimize+0x5bc>
    f0c4:	ldr	r2, [r3, #60]	; 0x3c
    f0c8:	ldr	r1, [r3, #84]	; 0x54
    f0cc:	cmp	r2, r1
    f0d0:	beq	f0ac <sf_bpf_optimize+0x594>
    f0d4:	ldr	r1, [r3, #4]
    f0d8:	cmp	r1, #0
    f0dc:	beq	f0e8 <sf_bpf_optimize+0x5d0>
    f0e0:	mov	r0, r4
    f0e4:	bl	3aa8 <sf_append>
    f0e8:	ldr	r2, [sp, #20]
    f0ec:	ldr	r3, [r2]
    f0f0:	str	r4, [r3, #4]
    f0f4:	ldr	r2, [r2]
    f0f8:	ldr	r3, [r2, #8]
    f0fc:	and	r3, r3, #7
    f100:	cmp	r3, #6
    f104:	moveq	r3, #0
    f108:	streq	r3, [r2, #4]
    f10c:	ldr	r3, [pc, #280]	; f22c <sf_bpf_optimize+0x714>
    f110:	ldr	r3, [fp, r3]
    f114:	ldr	r0, [r3]
    f118:	bl	da4 <free@plt>
    f11c:	ldr	r3, [pc, #260]	; f228 <sf_bpf_optimize+0x710>
    f120:	ldr	r3, [fp, r3]
    f124:	ldr	r0, [r3]
    f128:	bl	da4 <free@plt>
    f12c:	ldr	r3, [pc, #212]	; f208 <sf_bpf_optimize+0x6f0>
    f130:	ldr	r3, [fp, r3]
    f134:	ldr	r0, [r3]
    f138:	bl	da4 <free@plt>
    f13c:	ldr	r3, [pc, #208]	; f214 <sf_bpf_optimize+0x6fc>
    f140:	ldr	r3, [fp, r3]
    f144:	ldr	r0, [r3]
    f148:	bl	da4 <free@plt>
    f14c:	ldr	r3, [pc, #184]	; f20c <sf_bpf_optimize+0x6f4>
    f150:	ldr	r3, [fp, r3]
    f154:	ldr	r0, [r3]
    f158:	bl	da4 <free@plt>
    f15c:	ldr	r3, [pc, #156]	; f200 <sf_bpf_optimize+0x6e8>
    f160:	ldr	r3, [fp, r3]
    f164:	ldr	r0, [r3]
    f168:	bl	da4 <free@plt>
    f16c:	add	sp, sp, #28
    f170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f174:	mov	r3, r2
    f178:	b	f0d4 <sf_bpf_optimize+0x5bc>
    f17c:	ldr	r3, [pc, #196]	; f248 <sf_bpf_optimize+0x730>
    f180:	add	r3, pc, r3
    f184:	str	r0, [r3, #880]	; 0x370
    f188:	str	r0, [r3, #884]	; 0x374
    f18c:	mov	r7, #0
    f190:	b	ed54 <sf_bpf_optimize+0x23c>
    f194:	cmp	r7, #0
    f198:	beq	f1b0 <sf_bpf_optimize+0x698>
    f19c:	ldr	r3, [r7]
    f1a0:	cmn	r3, #1
    f1a4:	bne	f1ec <sf_bpf_optimize+0x6d4>
    f1a8:	ldr	r1, [sp, #8]
    f1ac:	b	ee3c <sf_bpf_optimize+0x324>
    f1b0:	mov	ip, sl
    f1b4:	mov	sl, r8
    f1b8:	ldr	r1, [sp, #8]
    f1bc:	b	f1d8 <sf_bpf_optimize+0x6c0>
    f1c0:	ldr	r1, [sp, #8]
    f1c4:	ldr	r3, [sp, #16]
    f1c8:	cmp	r7, #0
    f1cc:	bne	eed8 <sf_bpf_optimize+0x3c0>
    f1d0:	mov	ip, sl
    f1d4:	mov	sl, r8
    f1d8:	ldr	r3, [r1, #100]	; 0x64
    f1dc:	cmp	r3, #0
    f1e0:	moveq	r3, r1
    f1e4:	str	r3, [r0, #100]	; 0x64
    f1e8:	b	ef6c <sf_bpf_optimize+0x454>
    f1ec:	ldr	r1, [sp, #8]
    f1f0:	ldr	r3, [sp, #16]
    f1f4:	b	f1c8 <sf_bpf_optimize+0x6b0>
    f1f8:	.word	0x000224d0
    f1fc:	.word	0x00022bf4
    f200:	.word	0x000000d0
    f204:	.word	0x00022bbc
    f208:	.word	0x000000e8
    f20c:	.word	0x000000c8
    f210:	.word	0x00022b44
    f214:	.word	0x000000b8
    f218:	.word	0x00022b04
    f21c:	.word	0x00022ab8
    f220:	.word	0x00022a90
    f224:	.word	0x000229d4
    f228:	.word	0x00000108
    f22c:	.word	0x000000fc
    f230:	.word	0x00022958
    f234:	.word	0x00005d9c
    f238:	.word	0x00005d90
    f23c:	.word	0x00005d84
    f240:	.word	0x00005d78
    f244:	.word	0x00005d6c
    f248:	.word	0x000225b0

0000f24c <sf_icode_to_fcode>:
    f24c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f250:	mov	r8, r0
    f254:	mov	r9, r1
    f258:	ldr	r7, [pc, #140]	; f2ec <sf_icode_to_fcode+0xa0>
    f25c:	add	r7, pc, r7
    f260:	mov	sl, #0
    f264:	ldr	r6, [pc, #132]	; f2f0 <sf_icode_to_fcode+0xa4>
    f268:	add	r6, pc, r6
    f26c:	ldr	r5, [r7]
    f270:	add	r3, r5, #1
    f274:	str	r3, [r7]
    f278:	mov	r0, r8
    f27c:	bl	c73c <count_stmts>
    f280:	str	r0, [r9]
    f284:	lsl	r4, r0, #3
    f288:	mov	r0, r4
    f28c:	bl	e1c <malloc@plt>
    f290:	subs	fp, r0, #0
    f294:	beq	f2d8 <sf_icode_to_fcode+0x8c>
    f298:	mov	r2, r4
    f29c:	mov	r1, sl
    f2a0:	mov	r0, fp
    f2a4:	bl	e88 <memset@plt>
    f2a8:	str	fp, [r6, #900]	; 0x384
    f2ac:	add	r4, fp, r4
    f2b0:	str	r4, [r6, #896]	; 0x380
    f2b4:	add	r5, r5, #2
    f2b8:	str	r5, [r6]
    f2bc:	mov	r0, r8
    f2c0:	bl	e774 <convert_code_r>
    f2c4:	cmp	r0, #0
    f2c8:	bne	f2e4 <sf_icode_to_fcode+0x98>
    f2cc:	mov	r0, fp
    f2d0:	bl	da4 <free@plt>
    f2d4:	b	f26c <sf_icode_to_fcode+0x20>
    f2d8:	ldr	r0, [pc, #20]	; f2f4 <sf_icode_to_fcode+0xa8>
    f2dc:	add	r0, pc, r0
    f2e0:	bl	22b4 <sf_bpf_error>
    f2e4:	mov	r0, fp
    f2e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f2ec:	.word	0x000224d4
    f2f0:	.word	0x000224c8
    f2f4:	.word	0x000058a8

0000f2f8 <sfbpf_strcasecmp>:
    f2f8:	push	{lr}		; (str lr, [sp, #-4]!)
    f2fc:	sub	r0, r0, #1
    f300:	ldr	ip, [pc, #48]	; f338 <sfbpf_strcasecmp+0x40>
    f304:	add	ip, pc, ip
    f308:	ldrb	r3, [r0, #1]!
    f30c:	ldrb	r2, [ip, r3]
    f310:	ldrb	lr, [r1], #1
    f314:	ldrb	lr, [ip, lr]
    f318:	cmp	r2, lr
    f31c:	bne	f330 <sfbpf_strcasecmp+0x38>
    f320:	cmp	r3, #0
    f324:	bne	f308 <sfbpf_strcasecmp+0x10>
    f328:	mov	r0, #0
    f32c:	pop	{pc}		; (ldr pc, [sp], #4)
    f330:	sub	r0, r2, lr
    f334:	pop	{pc}		; (ldr pc, [sp], #4)
    f338:	.word	0x00005888

0000f33c <pcap_next_etherent>:
    f33c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    f340:	mov	r6, r0
    f344:	mov	r2, #128	; 0x80
    f348:	mov	r1, #0
    f34c:	ldr	r0, [pc, #564]	; f588 <pcap_next_etherent+0x24c>
    f350:	add	r0, pc, r0
    f354:	bl	e88 <memset@plt>
    f358:	ldr	r8, [pc, #556]	; f58c <pcap_next_etherent+0x250>
    f35c:	add	r8, pc, r8
    f360:	add	r7, r8, #5
    f364:	b	f440 <pcap_next_etherent+0x104>
    f368:	sub	r9, r8, #1
    f36c:	b	f3b0 <pcap_next_etherent+0x74>
    f370:	mov	r0, r6
    f374:	bl	f24 <getc@plt>
    f378:	mov	r4, r0
    f37c:	ldr	r2, [r5]
    f380:	lsl	r3, r0, #1
    f384:	ldrh	r3, [r2, r3]
    f388:	tst	r3, #4096	; 0x1000
    f38c:	bne	f3d8 <pcap_next_etherent+0x9c>
    f390:	strb	sl, [r9, #1]!
    f394:	cmp	r4, #58	; 0x3a
    f398:	bne	f408 <pcap_next_etherent+0xcc>
    f39c:	mov	r0, r6
    f3a0:	bl	f24 <getc@plt>
    f3a4:	mov	r4, r0
    f3a8:	cmp	r9, r7
    f3ac:	beq	f408 <pcap_next_etherent+0xcc>
    f3b0:	ldr	r2, [r5]
    f3b4:	lsl	r3, r4, #1
    f3b8:	ldrh	r3, [r2, r3]
    f3bc:	tst	r3, #2048	; 0x800
    f3c0:	subne	sl, r4, #48	; 0x30
    f3c4:	bne	f370 <pcap_next_etherent+0x34>
    f3c8:	tst	r3, #512	; 0x200
    f3cc:	subne	sl, r4, #87	; 0x57
    f3d0:	subeq	sl, r4, #55	; 0x37
    f3d4:	b	f370 <pcap_next_etherent+0x34>
    f3d8:	lsl	sl, sl, #4
    f3dc:	tst	r3, #2048	; 0x800
    f3e0:	subne	r4, r0, #48	; 0x30
    f3e4:	bne	f3f4 <pcap_next_etherent+0xb8>
    f3e8:	tst	r3, #512	; 0x200
    f3ec:	subne	r4, r4, #87	; 0x57
    f3f0:	subeq	r4, r4, #55	; 0x37
    f3f4:	orr	sl, sl, r4
    f3f8:	mov	r0, r6
    f3fc:	bl	f24 <getc@plt>
    f400:	mov	r4, r0
    f404:	b	f390 <pcap_next_etherent+0x54>
    f408:	cmn	r4, #1
    f40c:	beq	f574 <pcap_next_etherent+0x238>
    f410:	ldr	r3, [r5]
    f414:	lsl	r4, r4, #1
    f418:	ldrh	r3, [r3, r4]
    f41c:	tst	r3, #8192	; 0x2000
    f420:	bne	f498 <pcap_next_etherent+0x15c>
    f424:	mov	r0, r6
    f428:	bl	f24 <getc@plt>
    f42c:	cmp	r0, #10
    f430:	cmnne	r0, #1
    f434:	bne	f424 <pcap_next_etherent+0xe8>
    f438:	cmn	r0, #1
    f43c:	beq	f56c <pcap_next_etherent+0x230>
    f440:	mov	r0, r6
    f444:	bl	f24 <getc@plt>
    f448:	mov	r4, r0
    f44c:	bl	e34 <__ctype_b_loc@plt>
    f450:	mov	r5, r0
    f454:	ldr	r2, [r0]
    f458:	lsl	r3, r4, #1
    f45c:	ldrh	r3, [r2, r3]
    f460:	subs	r2, r4, #10
    f464:	movne	r2, #1
    f468:	ands	r2, r2, r3, lsr #13
    f46c:	bne	f440 <pcap_next_etherent+0x104>
    f470:	cmp	r4, #10
    f474:	beq	f440 <pcap_next_etherent+0x104>
    f478:	tst	r3, #4096	; 0x1000
    f47c:	bne	f368 <pcap_next_etherent+0x2c>
    f480:	mov	r0, r6
    f484:	bl	f24 <getc@plt>
    f488:	cmp	r0, #10
    f48c:	cmnne	r0, #1
    f490:	bne	f480 <pcap_next_etherent+0x144>
    f494:	b	f438 <pcap_next_etherent+0xfc>
    f498:	mov	r0, r6
    f49c:	bl	f24 <getc@plt>
    f4a0:	ldr	r2, [r5]
    f4a4:	lsl	r3, r0, #1
    f4a8:	ldrh	r2, [r2, r3]
    f4ac:	subs	r3, r0, #10
    f4b0:	movne	r3, #1
    f4b4:	ands	r3, r3, r2, lsr #13
    f4b8:	bne	f498 <pcap_next_etherent+0x15c>
    f4bc:	cmp	r0, #10
    f4c0:	beq	f440 <pcap_next_etherent+0x104>
    f4c4:	cmp	r0, #35	; 0x23
    f4c8:	beq	f554 <pcap_next_etherent+0x218>
    f4cc:	ldr	r4, [pc, #188]	; f590 <pcap_next_etherent+0x254>
    f4d0:	add	r4, pc, r4
    f4d4:	add	r4, r4, #6
    f4d8:	ldr	r7, [pc, #180]	; f594 <pcap_next_etherent+0x258>
    f4dc:	add	r7, pc, r7
    f4e0:	add	r7, r7, #127	; 0x7f
    f4e4:	strb	r0, [r4], #1
    f4e8:	mov	r0, r6
    f4ec:	bl	f24 <getc@plt>
    f4f0:	ldr	r2, [r5]
    f4f4:	lsl	r3, r0, #1
    f4f8:	ldrh	r3, [r2, r3]
    f4fc:	eor	r3, r3, #8192	; 0x2000
    f500:	adds	r2, r0, #1
    f504:	movne	r2, #1
    f508:	ands	r3, r2, r3, lsr #13
    f50c:	beq	f524 <pcap_next_etherent+0x1e8>
    f510:	cmp	r4, r7
    f514:	bne	f4e4 <pcap_next_etherent+0x1a8>
    f518:	ldr	r4, [pc, #120]	; f598 <pcap_next_etherent+0x25c>
    f51c:	add	r4, pc, r4
    f520:	add	r4, r4, #127	; 0x7f
    f524:	mov	r3, #0
    f528:	strb	r3, [r4]
    f52c:	cmp	r0, #10
    f530:	beq	f57c <pcap_next_etherent+0x240>
    f534:	mov	r0, r6
    f538:	bl	f24 <getc@plt>
    f53c:	cmp	r0, #10
    f540:	cmnne	r0, #1
    f544:	bne	f534 <pcap_next_etherent+0x1f8>
    f548:	ldr	r0, [pc, #76]	; f59c <pcap_next_etherent+0x260>
    f54c:	add	r0, pc, r0
    f550:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f554:	mov	r0, r6
    f558:	bl	f24 <getc@plt>
    f55c:	cmp	r0, #10
    f560:	cmnne	r0, #1
    f564:	bne	f554 <pcap_next_etherent+0x218>
    f568:	b	f438 <pcap_next_etherent+0xfc>
    f56c:	mov	r0, #0
    f570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f574:	mov	r0, #0
    f578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f57c:	ldr	r0, [pc, #28]	; f5a0 <pcap_next_etherent+0x264>
    f580:	add	r0, pc, r0
    f584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f588:	.word	0x00022768
    f58c:	.word	0x0002275c
    f590:	.word	0x000225e8
    f594:	.word	0x000225dc
    f598:	.word	0x0002259c
    f59c:	.word	0x0002256c
    f5a0:	.word	0x00022538

0000f5a4 <str2tok>:
    f5a4:	push	{r4, r5, r6, lr}
    f5a8:	mov	r5, r0
    f5ac:	ldr	r0, [r1, #4]
    f5b0:	cmp	r0, #0
    f5b4:	beq	f5f0 <str2tok+0x4c>
    f5b8:	mov	r4, r1
    f5bc:	mov	r6, r4
    f5c0:	mov	r1, r5
    f5c4:	bl	f2f8 <sfbpf_strcasecmp>
    f5c8:	cmp	r0, #0
    f5cc:	beq	f5e8 <str2tok+0x44>
    f5d0:	add	r4, r4, #8
    f5d4:	ldr	r0, [r4, #4]
    f5d8:	cmp	r0, #0
    f5dc:	bne	f5bc <str2tok+0x18>
    f5e0:	mvn	r0, #0
    f5e4:	pop	{r4, r5, r6, pc}
    f5e8:	ldr	r0, [r4]
    f5ec:	pop	{r4, r5, r6, pc}
    f5f0:	mvn	r0, #0
    f5f4:	pop	{r4, r5, r6, pc}

0000f5f8 <sfbpf_parse>:
    f5f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f5fc:	sub	sp, sp, #3648	; 0xe40
    f600:	sub	sp, sp, #4
    f604:	ldr	r9, [pc, #4080]	; 105fc <sfbpf_parse+0x1004>
    f608:	add	r9, pc, r9
    f60c:	ldr	r3, [pc, #4076]	; 10600 <sfbpf_parse+0x1008>
    f610:	ldr	r3, [r9, r3]
    f614:	mov	r4, #0
    f618:	str	r4, [r3]
    f61c:	ldr	r3, [pc, #4064]	; 10604 <sfbpf_parse+0x100c>
    f620:	ldr	r3, [r9, r3]
    f624:	mvn	r2, #1
    f628:	str	r2, [r3]
    f62c:	add	r3, sp, #3248	; 0xcb0
    f630:	strh	r4, [r3]
    f634:	mov	r7, r4
    f638:	mov	fp, #200	; 0xc8
    f63c:	add	sl, sp, #48	; 0x30
    f640:	str	sl, [sp, #8]
    f644:	mov	r5, r3
    f648:	str	r3, [sp]
    f64c:	ldr	r3, [pc, #4020]	; 10608 <sfbpf_parse+0x1010>
    f650:	add	r3, pc, r3
    f654:	str	r3, [sp, #12]
    f658:	ldr	r3, [pc, #4012]	; 1060c <sfbpf_parse+0x1014>
    f65c:	add	r3, pc, r3
    f660:	sub	r3, r3, #3888	; 0xf30
    f664:	sub	r3, r3, #12
    f668:	str	r3, [sp, #16]
    f66c:	ldr	r3, [pc, #3996]	; 10610 <sfbpf_parse+0x1018>
    f670:	add	r3, pc, r3
    f674:	sub	r3, r3, #3808	; 0xee0
    f678:	str	r3, [sp, #20]
    f67c:	b	f868 <sfbpf_parse+0x270>
    f680:	bl	1139c <sfbpf_lex>
    f684:	ldr	r3, [pc, #3960]	; 10604 <sfbpf_parse+0x100c>
    f688:	ldr	r3, [r9, r3]
    f68c:	str	r0, [r3]
    f690:	b	f890 <sfbpf_parse+0x298>
    f694:	ldr	r3, [pc, #3944]	; 10604 <sfbpf_parse+0x100c>
    f698:	ldr	r2, [r9, r3]
    f69c:	mov	r3, #0
    f6a0:	str	r3, [r2]
    f6a4:	b	f8c0 <sfbpf_parse+0x2c8>
    f6a8:	lsl	r4, r4, #1
    f6ac:	ldr	r3, [pc, #3936]	; 10614 <sfbpf_parse+0x101c>
    f6b0:	add	r3, pc, r3
    f6b4:	add	r3, r3, #2256	; 0x8d0
    f6b8:	ldrsh	r7, [r3, r4]
    f6bc:	cmp	r7, #0
    f6c0:	rsble	r6, r7, #0
    f6c4:	ble	f904 <sfbpf_parse+0x30c>
    f6c8:	ldr	r3, [pc, #3892]	; 10604 <sfbpf_parse+0x100c>
    f6cc:	ldr	r3, [r9, r3]
    f6d0:	mvn	r2, #1
    f6d4:	str	r2, [r3]
    f6d8:	add	sl, sl, #16
    f6dc:	ldr	r3, [pc, #3892]	; 10618 <sfbpf_parse+0x1020>
    f6e0:	ldr	r3, [r9, r3]
    f6e4:	ldm	r3, {r0, r1, r2, r3}
    f6e8:	stm	sl, {r0, r1, r2, r3}
    f6ec:	mov	r4, r5
    f6f0:	b	f780 <sfbpf_parse+0x188>
    f6f4:	mov	r3, #51	; 0x33
    f6f8:	str	r3, [sp, #4]
    f6fc:	sub	sl, sl, r4, lsl #4
    f700:	sub	r4, r5, r4, lsl #1
    f704:	add	sl, sl, #16
    f708:	ldr	r3, [sp, #4]
    f70c:	str	r3, [sp, #36]	; 0x24
    f710:	str	r7, [sp, #40]	; 0x28
    f714:	str	r8, [sp, #44]	; 0x2c
    f718:	add	r3, sp, #32
    f71c:	ldm	r3, {r0, r1, r2, r3}
    f720:	stm	sl, {r0, r1, r2, r3}
    f724:	ldr	r7, [pc, #3824]	; 1061c <sfbpf_parse+0x1024>
    f728:	add	r7, pc, r7
    f72c:	add	r7, r7, r6
    f730:	ldrb	r3, [r7, #4080]	; 0xff0
    f734:	sub	r3, r3, #126	; 0x7e
    f738:	ldrsh	r1, [r4]
    f73c:	lsl	r2, r3, #1
    f740:	ldr	r0, [sp, #16]
    f744:	ldrsh	r2, [r0, r2]
    f748:	add	r2, r2, r1
    f74c:	ldr	r0, [pc, #3788]	; 10620 <sfbpf_parse+0x1028>
    f750:	cmp	r2, r0
    f754:	bhi	f774 <sfbpf_parse+0x17c>
    f758:	lsl	r0, r2, #1
    f75c:	ldr	ip, [pc, #3776]	; 10624 <sfbpf_parse+0x102c>
    f760:	add	ip, pc, ip
    f764:	add	ip, ip, #916	; 0x394
    f768:	ldrsh	r0, [ip, r0]
    f76c:	cmp	r0, r1
    f770:	beq	10ca0 <sfbpf_parse+0x16a8>
    f774:	lsl	r3, r3, #1
    f778:	ldr	r2, [sp, #20]
    f77c:	ldrsh	r7, [r2, r3]
    f780:	add	r5, r4, #2
    f784:	strh	r7, [r4, #2]
    f788:	sub	r3, fp, #-2147483647	; 0x80000001
    f78c:	lsl	r3, r3, #1
    f790:	ldr	r4, [sp]
    f794:	add	r2, r4, r3
    f798:	cmp	r5, r2
    f79c:	bcc	f860 <sfbpf_parse+0x268>
    f7a0:	sub	sl, r5, r4
    f7a4:	asr	sl, sl, #1
    f7a8:	add	sl, sl, #1
    f7ac:	ldr	r2, [pc, #3700]	; 10628 <sfbpf_parse+0x1030>
    f7b0:	cmp	fp, r2
    f7b4:	bhi	10cf4 <sfbpf_parse+0x16fc>
    f7b8:	add	r3, r3, #2
    f7bc:	ldr	fp, [pc, #3688]	; 1062c <sfbpf_parse+0x1034>
    f7c0:	cmp	r3, fp
    f7c4:	movcc	fp, r3
    f7c8:	add	r0, fp, fp, lsl #3
    f7cc:	lsl	r0, r0, #1
    f7d0:	add	r0, r0, #15
    f7d4:	bl	e1c <malloc@plt>
    f7d8:	subs	r8, r0, #0
    f7dc:	beq	10cf4 <sfbpf_parse+0x16fc>
    f7e0:	str	r8, [sp, #4]
    f7e4:	lsl	r5, sl, #1
    f7e8:	mov	r2, r5
    f7ec:	str	r4, [sp]
    f7f0:	mov	r1, r4
    f7f4:	mov	r0, r8
    f7f8:	bl	dc8 <memcpy@plt>
    f7fc:	lsl	r6, fp, #1
    f800:	add	r4, r6, #15
    f804:	bic	r4, r4, #15
    f808:	add	r4, r8, r4
    f80c:	lsl	sl, sl, #4
    f810:	mov	r2, sl
    f814:	ldr	r1, [sp, #8]
    f818:	mov	r0, r4
    f81c:	bl	dc8 <memcpy@plt>
    f820:	add	r3, sp, #3248	; 0xcb0
    f824:	ldr	r2, [sp]
    f828:	cmp	r2, r3
    f82c:	beq	f838 <sfbpf_parse+0x240>
    f830:	mov	r0, r2
    f834:	bl	da4 <free@plt>
    f838:	sub	r5, r5, #2
    f83c:	add	r5, r8, r5
    f840:	sub	sl, sl, #16
    f844:	add	sl, r4, sl
    f848:	sub	r6, r6, #2
    f84c:	add	r6, r8, r6
    f850:	cmp	r5, r6
    f854:	bcs	10d1c <sfbpf_parse+0x1724>
    f858:	str	r4, [sp, #8]
    f85c:	str	r8, [sp]
    f860:	cmp	r7, #3
    f864:	beq	10d2c <sfbpf_parse+0x1734>
    f868:	lsl	r3, r7, #1
    f86c:	ldr	r2, [sp, #12]
    f870:	ldrsh	r4, [r2, r3]
    f874:	cmn	r4, #198	; 0xc6
    f878:	beq	f8ec <sfbpf_parse+0x2f4>
    f87c:	ldr	r3, [pc, #3456]	; 10604 <sfbpf_parse+0x100c>
    f880:	ldr	r3, [r9, r3]
    f884:	ldr	r3, [r3]
    f888:	cmn	r3, #2
    f88c:	beq	f680 <sfbpf_parse+0x88>
    f890:	ldr	r3, [pc, #3436]	; 10604 <sfbpf_parse+0x100c>
    f894:	ldr	r3, [r9, r3]
    f898:	ldr	r3, [r3]
    f89c:	cmp	r3, #0
    f8a0:	ble	f694 <sfbpf_parse+0x9c>
    f8a4:	ldr	r2, [pc, #3460]	; 10630 <sfbpf_parse+0x1038>
    f8a8:	cmp	r3, r2
    f8ac:	movhi	r3, #2
    f8b0:	ldrls	r2, [pc, #3452]	; 10634 <sfbpf_parse+0x103c>
    f8b4:	addls	r2, pc, r2
    f8b8:	addls	r3, r2, r3
    f8bc:	ldrbls	r3, [r3, #548]	; 0x224
    f8c0:	add	r4, r3, r4
    f8c4:	ldr	r2, [pc, #3412]	; 10620 <sfbpf_parse+0x1028>
    f8c8:	cmp	r4, r2
    f8cc:	bhi	f8ec <sfbpf_parse+0x2f4>
    f8d0:	lsl	r2, r4, #1
    f8d4:	ldr	r1, [pc, #3420]	; 10638 <sfbpf_parse+0x1040>
    f8d8:	add	r1, pc, r1
    f8dc:	add	r1, r1, #916	; 0x394
    f8e0:	ldrsh	r2, [r1, r2]
    f8e4:	cmp	r3, r2
    f8e8:	beq	f6a8 <sfbpf_parse+0xb0>
    f8ec:	ldr	r3, [pc, #3400]	; 1063c <sfbpf_parse+0x1044>
    f8f0:	add	r3, pc, r3
    f8f4:	add	r7, r3, r7
    f8f8:	ldrb	r6, [r7, #3596]	; 0xe0c
    f8fc:	cmp	r6, #0
    f900:	beq	10cb8 <sfbpf_parse+0x16c0>
    f904:	ldr	r3, [pc, #3380]	; 10640 <sfbpf_parse+0x1048>
    f908:	add	r3, pc, r3
    f90c:	add	r3, r3, r6
    f910:	ldrb	r4, [r3, #3872]	; 0xf20
    f914:	rsb	r3, r4, #1
    f918:	add	r3, sl, r3, lsl #4
    f91c:	ldm	r3, {r0, r1, r2, r3}
    f920:	add	ip, sp, #32
    f924:	stm	ip, {r0, r1, r2, r3}
    f928:	str	r1, [sp, #4]
    f92c:	mov	r7, r2
    f930:	mov	r8, r3
    f934:	sub	r3, r6, #2
    f938:	cmp	r3, #200	; 0xc8
    f93c:	addls	pc, pc, r3, lsl #2
    f940:	b	f6fc <sfbpf_parse+0x104>
    f944:	b	fc90 <sfbpf_parse+0x698>
    f948:	b	f6fc <sfbpf_parse+0x104>
    f94c:	b	fc9c <sfbpf_parse+0x6a4>
    f950:	b	f6fc <sfbpf_parse+0x104>
    f954:	b	fcb0 <sfbpf_parse+0x6b8>
    f958:	b	fcd8 <sfbpf_parse+0x6e0>
    f95c:	b	fd00 <sfbpf_parse+0x708>
    f960:	b	fd28 <sfbpf_parse+0x730>
    f964:	b	fd50 <sfbpf_parse+0x758>
    f968:	b	fd6c <sfbpf_parse+0x774>
    f96c:	b	f6fc <sfbpf_parse+0x104>
    f970:	b	fd88 <sfbpf_parse+0x790>
    f974:	b	fda4 <sfbpf_parse+0x7ac>
    f978:	b	fdc0 <sfbpf_parse+0x7c8>
    f97c:	b	fdd8 <sfbpf_parse+0x7e0>
    f980:	b	fdf8 <sfbpf_parse+0x800>
    f984:	b	fe18 <sfbpf_parse+0x820>
    f988:	b	fe8c <sfbpf_parse+0x894>
    f98c:	b	feac <sfbpf_parse+0x8b4>
    f990:	b	fecc <sfbpf_parse+0x8d4>
    f994:	b	fef4 <sfbpf_parse+0x8fc>
    f998:	b	ff1c <sfbpf_parse+0x924>
    f99c:	b	ff40 <sfbpf_parse+0x948>
    f9a0:	b	ff5c <sfbpf_parse+0x964>
    f9a4:	b	f6fc <sfbpf_parse+0x104>
    f9a8:	b	ff78 <sfbpf_parse+0x980>
    f9ac:	b	ffa0 <sfbpf_parse+0x9a8>
    f9b0:	b	ffc8 <sfbpf_parse+0x9d0>
    f9b4:	b	f6fc <sfbpf_parse+0x104>
    f9b8:	b	f6fc <sfbpf_parse+0x104>
    f9bc:	b	ffe4 <sfbpf_parse+0x9ec>
    f9c0:	b	10008 <sfbpf_parse+0xa10>
    f9c4:	b	10024 <sfbpf_parse+0xa2c>
    f9c8:	b	10040 <sfbpf_parse+0xa48>
    f9cc:	b	1005c <sfbpf_parse+0xa64>
    f9d0:	b	10078 <sfbpf_parse+0xa80>
    f9d4:	b	10094 <sfbpf_parse+0xa9c>
    f9d8:	b	100b0 <sfbpf_parse+0xab8>
    f9dc:	b	100cc <sfbpf_parse+0xad4>
    f9e0:	b	100dc <sfbpf_parse+0xae4>
    f9e4:	b	100fc <sfbpf_parse+0xb04>
    f9e8:	b	10128 <sfbpf_parse+0xb30>
    f9ec:	b	10154 <sfbpf_parse+0xb5c>
    f9f0:	b	1016c <sfbpf_parse+0xb74>
    f9f4:	b	1018c <sfbpf_parse+0xb94>
    f9f8:	b	101ac <sfbpf_parse+0xbb4>
    f9fc:	b	101c4 <sfbpf_parse+0xbcc>
    fa00:	b	101e4 <sfbpf_parse+0xbec>
    fa04:	b	f6fc <sfbpf_parse+0x104>
    fa08:	b	101fc <sfbpf_parse+0xc04>
    fa0c:	b	10208 <sfbpf_parse+0xc10>
    fa10:	b	10214 <sfbpf_parse+0xc1c>
    fa14:	b	10220 <sfbpf_parse+0xc28>
    fa18:	b	1022c <sfbpf_parse+0xc34>
    fa1c:	b	10238 <sfbpf_parse+0xc40>
    fa20:	b	10244 <sfbpf_parse+0xc4c>
    fa24:	b	10250 <sfbpf_parse+0xc58>
    fa28:	b	1025c <sfbpf_parse+0xc64>
    fa2c:	b	10268 <sfbpf_parse+0xc70>
    fa30:	b	10274 <sfbpf_parse+0xc7c>
    fa34:	b	10280 <sfbpf_parse+0xc88>
    fa38:	b	1028c <sfbpf_parse+0xc94>
    fa3c:	b	10298 <sfbpf_parse+0xca0>
    fa40:	b	102a4 <sfbpf_parse+0xcac>
    fa44:	b	102b0 <sfbpf_parse+0xcb8>
    fa48:	b	102bc <sfbpf_parse+0xcc4>
    fa4c:	b	102c8 <sfbpf_parse+0xcd0>
    fa50:	b	102d4 <sfbpf_parse+0xcdc>
    fa54:	b	102e0 <sfbpf_parse+0xce8>
    fa58:	b	102ec <sfbpf_parse+0xcf4>
    fa5c:	b	102f8 <sfbpf_parse+0xd00>
    fa60:	b	10304 <sfbpf_parse+0xd0c>
    fa64:	b	10310 <sfbpf_parse+0xd18>
    fa68:	b	1031c <sfbpf_parse+0xd24>
    fa6c:	b	10328 <sfbpf_parse+0xd30>
    fa70:	b	10334 <sfbpf_parse+0xd3c>
    fa74:	b	10340 <sfbpf_parse+0xd48>
    fa78:	b	1034c <sfbpf_parse+0xd54>
    fa7c:	b	10358 <sfbpf_parse+0xd60>
    fa80:	b	10364 <sfbpf_parse+0xd6c>
    fa84:	b	10370 <sfbpf_parse+0xd78>
    fa88:	b	1037c <sfbpf_parse+0xd84>
    fa8c:	b	10388 <sfbpf_parse+0xd90>
    fa90:	b	10394 <sfbpf_parse+0xd9c>
    fa94:	b	103a0 <sfbpf_parse+0xda8>
    fa98:	b	103ac <sfbpf_parse+0xdb4>
    fa9c:	b	103b8 <sfbpf_parse+0xdc0>
    faa0:	b	103c4 <sfbpf_parse+0xdcc>
    faa4:	b	103d0 <sfbpf_parse+0xdd8>
    faa8:	b	103dc <sfbpf_parse+0xde4>
    faac:	b	103e8 <sfbpf_parse+0xdf0>
    fab0:	b	103f4 <sfbpf_parse+0xdfc>
    fab4:	b	10400 <sfbpf_parse+0xe08>
    fab8:	b	1040c <sfbpf_parse+0xe14>
    fabc:	b	10418 <sfbpf_parse+0xe20>
    fac0:	b	10424 <sfbpf_parse+0xe2c>
    fac4:	b	10430 <sfbpf_parse+0xe38>
    fac8:	b	1043c <sfbpf_parse+0xe44>
    facc:	b	10448 <sfbpf_parse+0xe50>
    fad0:	b	10454 <sfbpf_parse+0xe5c>
    fad4:	b	10460 <sfbpf_parse+0xe68>
    fad8:	b	1046c <sfbpf_parse+0xe74>
    fadc:	b	10478 <sfbpf_parse+0xe80>
    fae0:	b	10484 <sfbpf_parse+0xe8c>
    fae4:	b	10494 <sfbpf_parse+0xe9c>
    fae8:	b	104a4 <sfbpf_parse+0xeac>
    faec:	b	104b4 <sfbpf_parse+0xebc>
    faf0:	b	104c4 <sfbpf_parse+0xecc>
    faf4:	b	104dc <sfbpf_parse+0xee4>
    faf8:	b	104ec <sfbpf_parse+0xef4>
    fafc:	b	104fc <sfbpf_parse+0xf04>
    fb00:	b	1050c <sfbpf_parse+0xf14>
    fb04:	b	1051c <sfbpf_parse+0xf24>
    fb08:	b	1052c <sfbpf_parse+0xf34>
    fb0c:	b	1053c <sfbpf_parse+0xf44>
    fb10:	b	10548 <sfbpf_parse+0xf50>
    fb14:	b	10554 <sfbpf_parse+0xf5c>
    fb18:	b	10560 <sfbpf_parse+0xf68>
    fb1c:	b	1056c <sfbpf_parse+0xf74>
    fb20:	b	1057c <sfbpf_parse+0xf84>
    fb24:	b	1058c <sfbpf_parse+0xf94>
    fb28:	b	1059c <sfbpf_parse+0xfa4>
    fb2c:	b	105ac <sfbpf_parse+0xfb4>
    fb30:	b	105bc <sfbpf_parse+0xfc4>
    fb34:	b	105cc <sfbpf_parse+0xfd4>
    fb38:	b	105e8 <sfbpf_parse+0xff0>
    fb3c:	b	106e8 <sfbpf_parse+0x10f0>
    fb40:	b	106fc <sfbpf_parse+0x1104>
    fb44:	b	f6fc <sfbpf_parse+0x104>
    fb48:	b	1070c <sfbpf_parse+0x1114>
    fb4c:	b	f6fc <sfbpf_parse+0x104>
    fb50:	b	fc68 <sfbpf_parse+0x670>
    fb54:	b	1078c <sfbpf_parse+0x1194>
    fb58:	b	f6fc <sfbpf_parse+0x104>
    fb5c:	b	10804 <sfbpf_parse+0x120c>
    fb60:	b	10898 <sfbpf_parse+0x12a0>
    fb64:	b	108a4 <sfbpf_parse+0x12ac>
    fb68:	b	108b0 <sfbpf_parse+0x12b8>
    fb6c:	b	108bc <sfbpf_parse+0x12c4>
    fb70:	b	108c8 <sfbpf_parse+0x12d0>
    fb74:	b	108d4 <sfbpf_parse+0x12dc>
    fb78:	b	108e0 <sfbpf_parse+0x12e8>
    fb7c:	b	108ec <sfbpf_parse+0x12f4>
    fb80:	b	108f8 <sfbpf_parse+0x1300>
    fb84:	b	10904 <sfbpf_parse+0x130c>
    fb88:	b	f6fc <sfbpf_parse+0x104>
    fb8c:	b	10914 <sfbpf_parse+0x131c>
    fb90:	b	1092c <sfbpf_parse+0x1334>
    fb94:	b	10944 <sfbpf_parse+0x134c>
    fb98:	b	1095c <sfbpf_parse+0x1364>
    fb9c:	b	10974 <sfbpf_parse+0x137c>
    fba0:	b	1098c <sfbpf_parse+0x1394>
    fba4:	b	109a4 <sfbpf_parse+0x13ac>
    fba8:	b	109bc <sfbpf_parse+0x13c4>
    fbac:	b	109d4 <sfbpf_parse+0x13dc>
    fbb0:	b	109ec <sfbpf_parse+0x13f4>
    fbb4:	b	10a04 <sfbpf_parse+0x140c>
    fbb8:	b	10a14 <sfbpf_parse+0x141c>
    fbbc:	b	10a20 <sfbpf_parse+0x1428>
    fbc0:	b	10a2c <sfbpf_parse+0x1434>
    fbc4:	b	10a38 <sfbpf_parse+0x1440>
    fbc8:	b	10a44 <sfbpf_parse+0x144c>
    fbcc:	b	10a50 <sfbpf_parse+0x1458>
    fbd0:	b	10a5c <sfbpf_parse+0x1464>
    fbd4:	b	f6fc <sfbpf_parse+0x104>
    fbd8:	b	10a68 <sfbpf_parse+0x1470>
    fbdc:	b	10a74 <sfbpf_parse+0x147c>
    fbe0:	b	10a80 <sfbpf_parse+0x1488>
    fbe4:	b	10a8c <sfbpf_parse+0x1494>
    fbe8:	b	10a98 <sfbpf_parse+0x14a0>
    fbec:	b	10aa4 <sfbpf_parse+0x14ac>
    fbf0:	b	10ab0 <sfbpf_parse+0x14b8>
    fbf4:	b	10abc <sfbpf_parse+0x14c4>
    fbf8:	b	10ac8 <sfbpf_parse+0x14d0>
    fbfc:	b	10ad4 <sfbpf_parse+0x14dc>
    fc00:	b	10ae0 <sfbpf_parse+0x14e8>
    fc04:	b	10aec <sfbpf_parse+0x14f4>
    fc08:	b	10af8 <sfbpf_parse+0x1500>
    fc0c:	b	f6f4 <sfbpf_parse+0xfc>
    fc10:	b	10b04 <sfbpf_parse+0x150c>
    fc14:	b	f6fc <sfbpf_parse+0x104>
    fc18:	b	10b10 <sfbpf_parse+0x1518>
    fc1c:	b	10b2c <sfbpf_parse+0x1534>
    fc20:	b	10b48 <sfbpf_parse+0x1550>
    fc24:	b	10b60 <sfbpf_parse+0x1568>
    fc28:	b	f6fc <sfbpf_parse+0x104>
    fc2c:	b	10b90 <sfbpf_parse+0x1598>
    fc30:	b	10bb8 <sfbpf_parse+0x15c0>
    fc34:	b	10bc4 <sfbpf_parse+0x15cc>
    fc38:	b	10bd0 <sfbpf_parse+0x15d8>
    fc3c:	b	10bdc <sfbpf_parse+0x15e4>
    fc40:	b	10be4 <sfbpf_parse+0x15ec>
    fc44:	b	10bec <sfbpf_parse+0x15f4>
    fc48:	b	10bf4 <sfbpf_parse+0x15fc>
    fc4c:	b	f6fc <sfbpf_parse+0x104>
    fc50:	b	10bfc <sfbpf_parse+0x1604>
    fc54:	b	10c18 <sfbpf_parse+0x1620>
    fc58:	b	10c34 <sfbpf_parse+0x163c>
    fc5c:	b	10c4c <sfbpf_parse+0x1654>
    fc60:	b	f6fc <sfbpf_parse+0x104>
    fc64:	b	10c78 <sfbpf_parse+0x1680>
    fc68:	ldr	r3, [sl, #-32]	; 0xffffffe0
    fc6c:	cmp	r3, #0
    fc70:	beq	10770 <sfbpf_parse+0x1178>
    fc74:	cmp	r3, #4
    fc78:	beq	10738 <sfbpf_parse+0x1140>
    fc7c:	cmp	r3, #8
    fc80:	beq	10764 <sfbpf_parse+0x116c>
    fc84:	ldr	r0, [pc, #2488]	; 10644 <sfbpf_parse+0x104c>
    fc88:	add	r0, pc, r0
    fc8c:	bl	22b4 <sf_bpf_error>
    fc90:	ldr	r0, [sl, #12]
    fc94:	bl	3ac4 <sf_finish_parse>
    fc98:	b	f6fc <sfbpf_parse+0x104>
    fc9c:	ldr	r3, [pc, #2468]	; 10648 <sfbpf_parse+0x1050>
    fca0:	add	r3, pc, r3
    fca4:	ldr	r3, [r3, #4076]	; 0xfec
    fca8:	str	r3, [sp, #32]
    fcac:	b	f6fc <sfbpf_parse+0x104>
    fcb0:	ldr	r8, [sl, #12]
    fcb4:	mov	r1, r8
    fcb8:	ldr	r0, [sl, #-20]	; 0xffffffec
    fcbc:	bl	399c <sf_gen_and>
    fcc0:	ldm	sl, {r0, r1, r2, r3}
    fcc4:	add	ip, sp, #32
    fcc8:	stm	ip, {r0, r1, r2, r3}
    fccc:	str	r1, [sp, #4]
    fcd0:	mov	r7, r2
    fcd4:	b	f6fc <sfbpf_parse+0x104>
    fcd8:	ldr	r8, [sl, #12]
    fcdc:	mov	r1, r8
    fce0:	ldr	r0, [sl, #-20]	; 0xffffffec
    fce4:	bl	399c <sf_gen_and>
    fce8:	ldm	sl, {r0, r1, r2, r3}
    fcec:	add	ip, sp, #32
    fcf0:	stm	ip, {r0, r1, r2, r3}
    fcf4:	str	r1, [sp, #4]
    fcf8:	mov	r7, r2
    fcfc:	b	f6fc <sfbpf_parse+0x104>
    fd00:	ldr	r8, [sl, #12]
    fd04:	mov	r1, r8
    fd08:	ldr	r0, [sl, #-20]	; 0xffffffec
    fd0c:	bl	3a20 <sf_gen_or>
    fd10:	ldm	sl, {r0, r1, r2, r3}
    fd14:	add	ip, sp, #32
    fd18:	stm	ip, {r0, r1, r2, r3}
    fd1c:	str	r1, [sp, #4]
    fd20:	mov	r7, r2
    fd24:	b	f6fc <sfbpf_parse+0x104>
    fd28:	ldr	r8, [sl, #12]
    fd2c:	mov	r1, r8
    fd30:	ldr	r0, [sl, #-20]	; 0xffffffec
    fd34:	bl	3a20 <sf_gen_or>
    fd38:	ldm	sl, {r0, r1, r2, r3}
    fd3c:	add	ip, sp, #32
    fd40:	stm	ip, {r0, r1, r2, r3}
    fd44:	str	r1, [sp, #4]
    fd48:	mov	r7, r2
    fd4c:	b	f6fc <sfbpf_parse+0x104>
    fd50:	ldmdb	sl, {r0, r1, r2, r3}
    fd54:	add	ip, sp, #32
    fd58:	stm	ip, {r0, r1, r2, r3}
    fd5c:	str	r1, [sp, #4]
    fd60:	mov	r7, r2
    fd64:	ldr	r8, [sl, #-4]
    fd68:	b	f6fc <sfbpf_parse+0x104>
    fd6c:	ldmdb	sl, {r0, r1, r2, r3}
    fd70:	add	ip, sp, #32
    fd74:	stm	ip, {r0, r1, r2, r3}
    fd78:	str	r1, [sp, #4]
    fd7c:	mov	r7, r2
    fd80:	ldr	r8, [sl, #-4]
    fd84:	b	f6fc <sfbpf_parse+0x104>
    fd88:	ldr	r2, [sl, #-16]
    fd8c:	str	r2, [sp, #32]
    fd90:	ldr	r1, [sl]
    fd94:	mov	r0, #0
    fd98:	bl	a750 <sf_gen_ncode>
    fd9c:	mov	r8, r0
    fda0:	b	f6fc <sfbpf_parse+0x104>
    fda4:	ldmdb	sl, {r0, r1, r2, r3}
    fda8:	add	ip, sp, #32
    fdac:	stm	ip, {r0, r1, r2, r3}
    fdb0:	str	r1, [sp, #4]
    fdb4:	mov	r7, r2
    fdb8:	ldr	r8, [sl, #-4]
    fdbc:	b	f6fc <sfbpf_parse+0x104>
    fdc0:	ldr	r1, [sl, #-16]
    fdc4:	str	r1, [sp, #32]
    fdc8:	ldr	r0, [sl]
    fdcc:	bl	9f0c <sf_gen_scode>
    fdd0:	mov	r8, r0
    fdd4:	b	f6fc <sfbpf_parse+0x104>
    fdd8:	ldr	r3, [sl, #-48]	; 0xffffffd0
    fddc:	str	r3, [sp, #32]
    fde0:	ldr	r2, [sl]
    fde4:	mov	r1, #0
    fde8:	ldr	r0, [sl, #-32]	; 0xffffffe0
    fdec:	bl	8cdc <sf_gen_mcode>
    fdf0:	mov	r8, r0
    fdf4:	b	f6fc <sfbpf_parse+0x104>
    fdf8:	ldr	r3, [sl, #-48]	; 0xffffffd0
    fdfc:	str	r3, [sp, #32]
    fe00:	mov	r2, #0
    fe04:	ldr	r1, [sl]
    fe08:	ldr	r0, [sl, #-32]	; 0xffffffe0
    fe0c:	bl	8cdc <sf_gen_mcode>
    fe10:	mov	r8, r0
    fe14:	b	f6fc <sfbpf_parse+0x104>
    fe18:	ldr	r3, [sl, #-16]
    fe1c:	str	r3, [sp, #32]
    fe20:	uxtb	r3, r3
    fe24:	cmp	r3, #3
    fe28:	beq	fe5c <sfbpf_parse+0x864>
    fe2c:	cmp	r3, #7
    fe30:	beq	fe68 <sfbpf_parse+0x870>
    fe34:	cmp	r3, #5
    fe38:	beq	fe74 <sfbpf_parse+0x87c>
    fe3c:	cmp	r3, #6
    fe40:	beq	fe80 <sfbpf_parse+0x888>
    fe44:	ldr	r2, [sp, #32]
    fe48:	mov	r1, #0
    fe4c:	ldr	r0, [sl]
    fe50:	bl	a750 <sf_gen_ncode>
    fe54:	mov	r8, r0
    fe58:	b	f6fc <sfbpf_parse+0x104>
    fe5c:	ldr	r0, [pc, #2024]	; 1064c <sfbpf_parse+0x1054>
    fe60:	add	r0, pc, r0
    fe64:	bl	22b4 <sf_bpf_error>
    fe68:	ldr	r0, [pc, #2016]	; 10650 <sfbpf_parse+0x1058>
    fe6c:	add	r0, pc, r0
    fe70:	bl	22b4 <sf_bpf_error>
    fe74:	ldr	r0, [pc, #2008]	; 10654 <sfbpf_parse+0x105c>
    fe78:	add	r0, pc, r0
    fe7c:	bl	22b4 <sf_bpf_error>
    fe80:	ldr	r0, [pc, #2000]	; 10658 <sfbpf_parse+0x1060>
    fe84:	add	r0, pc, r0
    fe88:	bl	22b4 <sf_bpf_error>
    fe8c:	ldr	r3, [sl, #-48]	; 0xffffffd0
    fe90:	str	r3, [sp, #32]
    fe94:	ldr	r2, [sl]
    fe98:	mov	r1, #0
    fe9c:	ldr	r0, [sl, #-32]	; 0xffffffe0
    fea0:	bl	92d8 <sf_gen_mcode6>
    fea4:	mov	r8, r0
    fea8:	b	f6fc <sfbpf_parse+0x104>
    feac:	ldr	r3, [sl, #-16]
    feb0:	str	r3, [sp, #32]
    feb4:	mov	r2, #128	; 0x80
    feb8:	mov	r1, #0
    febc:	ldr	r0, [sl]
    fec0:	bl	92d8 <sf_gen_mcode6>
    fec4:	mov	r8, r0
    fec8:	b	f6fc <sfbpf_parse+0x104>
    fecc:	ldr	r3, [sl]
    fed0:	ldr	r1, [sl, #-16]
    fed4:	str	r1, [sp, #32]
    fed8:	str	r3, [sp, #24]
    fedc:	mov	r0, r3
    fee0:	bl	594c <sf_gen_ecode>
    fee4:	mov	r8, r0
    fee8:	ldr	r0, [sp, #24]
    feec:	bl	da4 <free@plt>
    fef0:	b	f6fc <sfbpf_parse+0x104>
    fef4:	ldr	r3, [sl]
    fef8:	ldr	r1, [sl, #-16]
    fefc:	str	r1, [sp, #32]
    ff00:	str	r3, [sp, #24]
    ff04:	mov	r0, r3
    ff08:	bl	63d0 <sf_gen_acode>
    ff0c:	mov	r8, r0
    ff10:	ldr	r0, [sp, #24]
    ff14:	bl	da4 <free@plt>
    ff18:	b	f6fc <sfbpf_parse+0x104>
    ff1c:	ldr	r8, [sl, #12]
    ff20:	mov	r0, r8
    ff24:	bl	3a94 <sf_gen_not>
    ff28:	ldm	sl, {r0, r1, r2, r3}
    ff2c:	add	ip, sp, #32
    ff30:	stm	ip, {r0, r1, r2, r3}
    ff34:	str	r1, [sp, #4]
    ff38:	mov	r7, r2
    ff3c:	b	f6fc <sfbpf_parse+0x104>
    ff40:	ldmdb	sl, {r0, r1, r2, r3}
    ff44:	add	ip, sp, #32
    ff48:	stm	ip, {r0, r1, r2, r3}
    ff4c:	str	r1, [sp, #4]
    ff50:	mov	r7, r2
    ff54:	ldr	r8, [sl, #-4]
    ff58:	b	f6fc <sfbpf_parse+0x104>
    ff5c:	ldmdb	sl, {r0, r1, r2, r3}
    ff60:	add	ip, sp, #32
    ff64:	stm	ip, {r0, r1, r2, r3}
    ff68:	str	r1, [sp, #4]
    ff6c:	mov	r7, r2
    ff70:	ldr	r8, [sl, #-4]
    ff74:	b	f6fc <sfbpf_parse+0x104>
    ff78:	ldr	r8, [sl, #12]
    ff7c:	mov	r1, r8
    ff80:	ldr	r0, [sl, #-20]	; 0xffffffec
    ff84:	bl	399c <sf_gen_and>
    ff88:	ldm	sl, {r0, r1, r2, r3}
    ff8c:	add	ip, sp, #32
    ff90:	stm	ip, {r0, r1, r2, r3}
    ff94:	str	r1, [sp, #4]
    ff98:	mov	r7, r2
    ff9c:	b	f6fc <sfbpf_parse+0x104>
    ffa0:	ldr	r8, [sl, #12]
    ffa4:	mov	r1, r8
    ffa8:	ldr	r0, [sl, #-20]	; 0xffffffec
    ffac:	bl	3a20 <sf_gen_or>
    ffb0:	ldm	sl, {r0, r1, r2, r3}
    ffb4:	add	ip, sp, #32
    ffb8:	stm	ip, {r0, r1, r2, r3}
    ffbc:	str	r1, [sp, #4]
    ffc0:	mov	r7, r2
    ffc4:	b	f6fc <sfbpf_parse+0x104>
    ffc8:	ldr	r2, [sl, #-16]
    ffcc:	str	r2, [sp, #32]
    ffd0:	ldr	r1, [sl]
    ffd4:	mov	r0, #0
    ffd8:	bl	a750 <sf_gen_ncode>
    ffdc:	mov	r8, r0
    ffe0:	b	f6fc <sfbpf_parse+0x104>
    ffe4:	ldr	r8, [sl, #12]
    ffe8:	mov	r0, r8
    ffec:	bl	3a94 <sf_gen_not>
    fff0:	ldm	sl, {r0, r1, r2, r3}
    fff4:	add	ip, sp, #32
    fff8:	stm	ip, {r0, r1, r2, r3}
    fffc:	str	r1, [sp, #4]
   10000:	mov	r7, r2
   10004:	b	f6fc <sfbpf_parse+0x104>
   10008:	ldr	r3, [sl, #-32]	; 0xffffffe0
   1000c:	strb	r3, [sp, #33]	; 0x21
   10010:	ldr	r3, [sl, #-16]
   10014:	strb	r3, [sp, #34]	; 0x22
   10018:	ldr	r3, [sl]
   1001c:	strb	r3, [sp, #32]
   10020:	b	f6fc <sfbpf_parse+0x104>
   10024:	ldr	r3, [sl, #-16]
   10028:	strb	r3, [sp, #33]	; 0x21
   1002c:	ldr	r3, [sl]
   10030:	strb	r3, [sp, #34]	; 0x22
   10034:	mov	r3, #0
   10038:	strb	r3, [sp, #32]
   1003c:	b	f6fc <sfbpf_parse+0x104>
   10040:	ldr	r3, [sl, #-16]
   10044:	strb	r3, [sp, #33]	; 0x21
   10048:	mov	r3, #0
   1004c:	strb	r3, [sp, #34]	; 0x22
   10050:	ldr	r3, [sl]
   10054:	strb	r3, [sp, #32]
   10058:	b	f6fc <sfbpf_parse+0x104>
   1005c:	ldr	r3, [sl, #-16]
   10060:	strb	r3, [sp, #33]	; 0x21
   10064:	mov	r3, #0
   10068:	strb	r3, [sp, #34]	; 0x22
   1006c:	mov	r3, #5
   10070:	strb	r3, [sp, #32]
   10074:	b	f6fc <sfbpf_parse+0x104>
   10078:	ldr	r3, [sl, #-16]
   1007c:	strb	r3, [sp, #33]	; 0x21
   10080:	mov	r3, #0
   10084:	strb	r3, [sp, #34]	; 0x22
   10088:	mov	r3, #6
   1008c:	strb	r3, [sp, #32]
   10090:	b	f6fc <sfbpf_parse+0x104>
   10094:	ldr	r3, [sl, #-16]
   10098:	strb	r3, [sp, #33]	; 0x21
   1009c:	mov	r3, #0
   100a0:	strb	r3, [sp, #34]	; 0x22
   100a4:	ldr	r3, [sl]
   100a8:	strb	r3, [sp, #32]
   100ac:	b	f6fc <sfbpf_parse+0x104>
   100b0:	ldm	sl, {r0, r1, r2, r3}
   100b4:	add	ip, sp, #32
   100b8:	stm	ip, {r0, r1, r2, r3}
   100bc:	str	r1, [sp, #4]
   100c0:	mov	r7, r2
   100c4:	mov	r8, r3
   100c8:	b	f6fc <sfbpf_parse+0x104>
   100cc:	ldr	r8, [sl, #-4]
   100d0:	ldr	r3, [sl, #-32]	; 0xffffffe0
   100d4:	str	r3, [sp, #32]
   100d8:	b	f6fc <sfbpf_parse+0x104>
   100dc:	ldr	r0, [sl]
   100e0:	bl	79a0 <sf_gen_proto_abbrev>
   100e4:	mov	r8, r0
   100e8:	ldr	r3, [pc, #1388]	; 1065c <sfbpf_parse+0x1064>
   100ec:	add	r3, pc, r3
   100f0:	ldr	r3, [r3, #4076]	; 0xfec
   100f4:	str	r3, [sp, #32]
   100f8:	b	f6fc <sfbpf_parse+0x104>
   100fc:	mov	r3, #0
   10100:	ldr	r2, [sl]
   10104:	ldr	r1, [sl, #-32]	; 0xffffffe0
   10108:	ldr	r0, [sl, #-16]
   1010c:	bl	5df0 <sf_gen_relation>
   10110:	mov	r8, r0
   10114:	ldr	r3, [pc, #1348]	; 10660 <sfbpf_parse+0x1068>
   10118:	add	r3, pc, r3
   1011c:	ldr	r3, [r3, #4076]	; 0xfec
   10120:	str	r3, [sp, #32]
   10124:	b	f6fc <sfbpf_parse+0x104>
   10128:	mov	r3, #1
   1012c:	ldr	r2, [sl]
   10130:	ldr	r1, [sl, #-32]	; 0xffffffe0
   10134:	ldr	r0, [sl, #-16]
   10138:	bl	5df0 <sf_gen_relation>
   1013c:	mov	r8, r0
   10140:	ldr	r3, [pc, #1308]	; 10664 <sfbpf_parse+0x106c>
   10144:	add	r3, pc, r3
   10148:	ldr	r3, [r3, #4076]	; 0xfec
   1014c:	str	r3, [sp, #32]
   10150:	b	f6fc <sfbpf_parse+0x104>
   10154:	ldr	r8, [sl]
   10158:	ldr	r3, [pc, #1288]	; 10668 <sfbpf_parse+0x1070>
   1015c:	add	r3, pc, r3
   10160:	ldr	r3, [r3, #4076]	; 0xfec
   10164:	str	r3, [sp, #32]
   10168:	b	f6fc <sfbpf_parse+0x104>
   1016c:	ldr	r0, [sl]
   10170:	bl	b20c <sf_gen_atmtype_abbrev>
   10174:	mov	r8, r0
   10178:	ldr	r3, [pc, #1260]	; 1066c <sfbpf_parse+0x1074>
   1017c:	add	r3, pc, r3
   10180:	ldr	r3, [r3, #4076]	; 0xfec
   10184:	str	r3, [sp, #32]
   10188:	b	f6fc <sfbpf_parse+0x104>
   1018c:	ldr	r0, [sl]
   10190:	bl	b928 <sf_gen_atmmulti_abbrev>
   10194:	mov	r8, r0
   10198:	ldr	r3, [pc, #1232]	; 10670 <sfbpf_parse+0x1078>
   1019c:	add	r3, pc, r3
   101a0:	ldr	r3, [r3, #4076]	; 0xfec
   101a4:	str	r3, [sp, #32]
   101a8:	b	f6fc <sfbpf_parse+0x104>
   101ac:	ldr	r8, [sl, #12]
   101b0:	ldr	r3, [pc, #1212]	; 10674 <sfbpf_parse+0x107c>
   101b4:	add	r3, pc, r3
   101b8:	ldr	r3, [r3, #4076]	; 0xfec
   101bc:	str	r3, [sp, #32]
   101c0:	b	f6fc <sfbpf_parse+0x104>
   101c4:	ldr	r0, [sl]
   101c8:	bl	b59c <sf_gen_mtp2type_abbrev>
   101cc:	mov	r8, r0
   101d0:	ldr	r3, [pc, #1184]	; 10678 <sfbpf_parse+0x1080>
   101d4:	add	r3, pc, r3
   101d8:	ldr	r3, [r3, #4076]	; 0xfec
   101dc:	str	r3, [sp, #32]
   101e0:	b	f6fc <sfbpf_parse+0x104>
   101e4:	ldr	r8, [sl, #12]
   101e8:	ldr	r3, [pc, #1164]	; 1067c <sfbpf_parse+0x1084>
   101ec:	add	r3, pc, r3
   101f0:	ldr	r3, [r3, #4076]	; 0xfec
   101f4:	str	r3, [sp, #32]
   101f8:	b	f6fc <sfbpf_parse+0x104>
   101fc:	mov	r3, #0
   10200:	str	r3, [sp, #32]
   10204:	b	f6fc <sfbpf_parse+0x104>
   10208:	mov	r3, #1
   1020c:	str	r3, [sp, #32]
   10210:	b	f6fc <sfbpf_parse+0x104>
   10214:	mov	r3, #2
   10218:	str	r3, [sp, #32]
   1021c:	b	f6fc <sfbpf_parse+0x104>
   10220:	mov	r3, #3
   10224:	str	r3, [sp, #32]
   10228:	b	f6fc <sfbpf_parse+0x104>
   1022c:	mov	r3, #3
   10230:	str	r3, [sp, #32]
   10234:	b	f6fc <sfbpf_parse+0x104>
   10238:	mov	r3, #4
   1023c:	str	r3, [sp, #32]
   10240:	b	f6fc <sfbpf_parse+0x104>
   10244:	mov	r3, #4
   10248:	str	r3, [sp, #32]
   1024c:	b	f6fc <sfbpf_parse+0x104>
   10250:	mov	r3, #5
   10254:	str	r3, [sp, #32]
   10258:	b	f6fc <sfbpf_parse+0x104>
   1025c:	mov	r3, #6
   10260:	str	r3, [sp, #32]
   10264:	b	f6fc <sfbpf_parse+0x104>
   10268:	mov	r3, #7
   1026c:	str	r3, [sp, #32]
   10270:	b	f6fc <sfbpf_parse+0x104>
   10274:	mov	r3, #8
   10278:	str	r3, [sp, #32]
   1027c:	b	f6fc <sfbpf_parse+0x104>
   10280:	mov	r3, #1
   10284:	str	r3, [sp, #32]
   10288:	b	f6fc <sfbpf_parse+0x104>
   1028c:	mov	r3, #2
   10290:	str	r3, [sp, #32]
   10294:	b	f6fc <sfbpf_parse+0x104>
   10298:	mov	r3, #3
   1029c:	str	r3, [sp, #32]
   102a0:	b	f6fc <sfbpf_parse+0x104>
   102a4:	mov	r3, #7
   102a8:	str	r3, [sp, #32]
   102ac:	b	f6fc <sfbpf_parse+0x104>
   102b0:	mov	r3, #4
   102b4:	str	r3, [sp, #32]
   102b8:	b	f6fc <sfbpf_parse+0x104>
   102bc:	mov	r3, #1
   102c0:	str	r3, [sp, #32]
   102c4:	b	f6fc <sfbpf_parse+0x104>
   102c8:	mov	r3, #2
   102cc:	str	r3, [sp, #32]
   102d0:	b	f6fc <sfbpf_parse+0x104>
   102d4:	mov	r3, #3
   102d8:	str	r3, [sp, #32]
   102dc:	b	f6fc <sfbpf_parse+0x104>
   102e0:	mov	r3, #4
   102e4:	str	r3, [sp, #32]
   102e8:	b	f6fc <sfbpf_parse+0x104>
   102ec:	mov	r3, #5
   102f0:	str	r3, [sp, #32]
   102f4:	b	f6fc <sfbpf_parse+0x104>
   102f8:	mov	r3, #6
   102fc:	str	r3, [sp, #32]
   10300:	b	f6fc <sfbpf_parse+0x104>
   10304:	mov	r3, #7
   10308:	str	r3, [sp, #32]
   1030c:	b	f6fc <sfbpf_parse+0x104>
   10310:	mov	r3, #8
   10314:	str	r3, [sp, #32]
   10318:	b	f6fc <sfbpf_parse+0x104>
   1031c:	mov	r3, #9
   10320:	str	r3, [sp, #32]
   10324:	b	f6fc <sfbpf_parse+0x104>
   10328:	mov	r3, #10
   1032c:	str	r3, [sp, #32]
   10330:	b	f6fc <sfbpf_parse+0x104>
   10334:	mov	r3, #21
   10338:	str	r3, [sp, #32]
   1033c:	b	f6fc <sfbpf_parse+0x104>
   10340:	mov	r3, #22
   10344:	str	r3, [sp, #32]
   10348:	b	f6fc <sfbpf_parse+0x104>
   1034c:	mov	r3, #11
   10350:	str	r3, [sp, #32]
   10354:	b	f6fc <sfbpf_parse+0x104>
   10358:	mov	r3, #23
   1035c:	str	r3, [sp, #32]
   10360:	b	f6fc <sfbpf_parse+0x104>
   10364:	mov	r3, #12
   10368:	str	r3, [sp, #32]
   1036c:	b	f6fc <sfbpf_parse+0x104>
   10370:	mov	r3, #13
   10374:	str	r3, [sp, #32]
   10378:	b	f6fc <sfbpf_parse+0x104>
   1037c:	mov	r3, #14
   10380:	str	r3, [sp, #32]
   10384:	b	f6fc <sfbpf_parse+0x104>
   10388:	mov	r3, #16
   1038c:	str	r3, [sp, #32]
   10390:	b	f6fc <sfbpf_parse+0x104>
   10394:	mov	r3, #15
   10398:	str	r3, [sp, #32]
   1039c:	b	f6fc <sfbpf_parse+0x104>
   103a0:	mov	r3, #17
   103a4:	str	r3, [sp, #32]
   103a8:	b	f6fc <sfbpf_parse+0x104>
   103ac:	mov	r3, #18
   103b0:	str	r3, [sp, #32]
   103b4:	b	f6fc <sfbpf_parse+0x104>
   103b8:	mov	r3, #19
   103bc:	str	r3, [sp, #32]
   103c0:	b	f6fc <sfbpf_parse+0x104>
   103c4:	mov	r3, #20
   103c8:	str	r3, [sp, #32]
   103cc:	b	f6fc <sfbpf_parse+0x104>
   103d0:	mov	r3, #24
   103d4:	str	r3, [sp, #32]
   103d8:	b	f6fc <sfbpf_parse+0x104>
   103dc:	mov	r3, #25
   103e0:	str	r3, [sp, #32]
   103e4:	b	f6fc <sfbpf_parse+0x104>
   103e8:	mov	r3, #26
   103ec:	str	r3, [sp, #32]
   103f0:	b	f6fc <sfbpf_parse+0x104>
   103f4:	mov	r3, #31
   103f8:	str	r3, [sp, #32]
   103fc:	b	f6fc <sfbpf_parse+0x104>
   10400:	mov	r3, #32
   10404:	str	r3, [sp, #32]
   10408:	b	f6fc <sfbpf_parse+0x104>
   1040c:	mov	r3, #33	; 0x21
   10410:	str	r3, [sp, #32]
   10414:	b	f6fc <sfbpf_parse+0x104>
   10418:	mov	r3, #39	; 0x27
   1041c:	str	r3, [sp, #32]
   10420:	b	f6fc <sfbpf_parse+0x104>
   10424:	mov	r3, #36	; 0x24
   10428:	str	r3, [sp, #32]
   1042c:	b	f6fc <sfbpf_parse+0x104>
   10430:	mov	r3, #38	; 0x26
   10434:	str	r3, [sp, #32]
   10438:	b	f6fc <sfbpf_parse+0x104>
   1043c:	mov	r3, #37	; 0x25
   10440:	str	r3, [sp, #32]
   10444:	b	f6fc <sfbpf_parse+0x104>
   10448:	mov	r3, #27
   1044c:	str	r3, [sp, #32]
   10450:	b	f6fc <sfbpf_parse+0x104>
   10454:	mov	r3, #28
   10458:	str	r3, [sp, #32]
   1045c:	b	f6fc <sfbpf_parse+0x104>
   10460:	mov	r3, #29
   10464:	str	r3, [sp, #32]
   10468:	b	f6fc <sfbpf_parse+0x104>
   1046c:	mov	r3, #30
   10470:	str	r3, [sp, #32]
   10474:	b	f6fc <sfbpf_parse+0x104>
   10478:	mov	r3, #40	; 0x28
   1047c:	str	r3, [sp, #32]
   10480:	b	f6fc <sfbpf_parse+0x104>
   10484:	ldr	r0, [sl, #-16]
   10488:	bl	aa2c <sf_gen_broadcast>
   1048c:	str	r0, [sp, #32]
   10490:	b	f6fc <sfbpf_parse+0x104>
   10494:	ldr	r0, [sl, #-16]
   10498:	bl	aca8 <sf_gen_multicast>
   1049c:	str	r0, [sp, #32]
   104a0:	b	f6fc <sfbpf_parse+0x104>
   104a4:	ldr	r0, [sl]
   104a8:	bl	6144 <sf_gen_less>
   104ac:	str	r0, [sp, #32]
   104b0:	b	f6fc <sfbpf_parse+0x104>
   104b4:	ldr	r0, [sl]
   104b8:	bl	6104 <sf_gen_greater>
   104bc:	str	r0, [sp, #32]
   104c0:	b	f6fc <sfbpf_parse+0x104>
   104c4:	ldr	r2, [sl]
   104c8:	ldr	r1, [sl, #-32]	; 0xffffffe0
   104cc:	ldr	r0, [sl, #-16]
   104d0:	bl	6194 <sf_gen_byteop>
   104d4:	str	r0, [sp, #32]
   104d8:	b	f6fc <sfbpf_parse+0x104>
   104dc:	mov	r0, #0
   104e0:	bl	8408 <sf_gen_inbound>
   104e4:	str	r0, [sp, #32]
   104e8:	b	f6fc <sfbpf_parse+0x104>
   104ec:	mov	r0, #1
   104f0:	bl	8408 <sf_gen_inbound>
   104f4:	str	r0, [sp, #32]
   104f8:	b	f6fc <sfbpf_parse+0x104>
   104fc:	ldr	r0, [sl]
   10500:	bl	6444 <sf_gen_vlan>
   10504:	str	r0, [sp, #32]
   10508:	b	f6fc <sfbpf_parse+0x104>
   1050c:	mvn	r0, #0
   10510:	bl	6444 <sf_gen_vlan>
   10514:	str	r0, [sp, #32]
   10518:	b	f6fc <sfbpf_parse+0x104>
   1051c:	ldr	r0, [sl]
   10520:	bl	b074 <sf_gen_mpls>
   10524:	str	r0, [sp, #32]
   10528:	b	f6fc <sfbpf_parse+0x104>
   1052c:	mvn	r0, #0
   10530:	bl	b074 <sf_gen_mpls>
   10534:	str	r0, [sp, #32]
   10538:	b	f6fc <sfbpf_parse+0x104>
   1053c:	bl	b1a8 <sf_gen_pppoed>
   10540:	str	r0, [sp, #32]
   10544:	b	f6fc <sfbpf_parse+0x104>
   10548:	bl	b1bc <sf_gen_pppoes>
   1054c:	str	r0, [sp, #32]
   10550:	b	f6fc <sfbpf_parse+0x104>
   10554:	ldr	r3, [sl]
   10558:	str	r3, [sp, #32]
   1055c:	b	f6fc <sfbpf_parse+0x104>
   10560:	ldr	r3, [sl]
   10564:	str	r3, [sp, #32]
   10568:	b	f6fc <sfbpf_parse+0x104>
   1056c:	ldr	r0, [sl]
   10570:	bl	627c <sf_gen_pf_ifname>
   10574:	str	r0, [sp, #32]
   10578:	b	f6fc <sfbpf_parse+0x104>
   1057c:	ldr	r0, [sl]
   10580:	bl	6290 <sf_gen_pf_ruleset>
   10584:	str	r0, [sp, #32]
   10588:	b	f6fc <sfbpf_parse+0x104>
   1058c:	ldr	r0, [sl]
   10590:	bl	62a4 <sf_gen_pf_rnr>
   10594:	str	r0, [sp, #32]
   10598:	b	f6fc <sfbpf_parse+0x104>
   1059c:	ldr	r0, [sl]
   105a0:	bl	62b8 <sf_gen_pf_srnr>
   105a4:	str	r0, [sp, #32]
   105a8:	b	f6fc <sfbpf_parse+0x104>
   105ac:	ldr	r0, [sl]
   105b0:	bl	62cc <sf_gen_pf_reason>
   105b4:	str	r0, [sp, #32]
   105b8:	b	f6fc <sfbpf_parse+0x104>
   105bc:	ldr	r0, [sl]
   105c0:	bl	62e0 <sf_gen_pf_action>
   105c4:	str	r0, [sp, #32]
   105c8:	b	f6fc <sfbpf_parse+0x104>
   105cc:	ldr	r0, [sl, #-32]	; 0xffffffe0
   105d0:	ldr	r3, [sl]
   105d4:	mov	r1, #252	; 0xfc
   105d8:	orr	r0, r0, r3
   105dc:	bl	62f4 <sf_gen_p80211_type>
   105e0:	str	r0, [sp, #32]
   105e4:	b	f6fc <sfbpf_parse+0x104>
   105e8:	mov	r1, #12
   105ec:	ldr	r0, [sl]
   105f0:	bl	62f4 <sf_gen_p80211_type>
   105f4:	str	r0, [sp, #32]
   105f8:	b	f6fc <sfbpf_parse+0x104>
   105fc:	.word	0x000219f0
   10600:	.word	0x000000cc
   10604:	.word	0x000000b4
   10608:	.word	0x0000563c
   1060c:	.word	0x00007628
   10610:	.word	0x00007614
   10614:	.word	0x000055dc
   10618:	.word	0x000000f4
   1061c:	.word	0x00005564
   10620:	.word	0x0000029d
   10624:	.word	0x0000552c
   10628:	.word	0x0000270f
   1062c:	.word	0x00002710
   10630:	.word	0x0000016d
   10634:	.word	0x000053d8
   10638:	.word	0x000053b4
   1063c:	.word	0x0000539c
   10640:	.word	0x00005384
   10644:	.word	0x00006230
   10648:	.word	0x00004fec
   1064c:	.word	0x00005fa0
   10650:	.word	0x00005fb8
   10654:	.word	0x00005fd4
   10658:	.word	0x00005fec
   1065c:	.word	0x00004ba0
   10660:	.word	0x00004b74
   10664:	.word	0x00004b48
   10668:	.word	0x00004b30
   1066c:	.word	0x00004b10
   10670:	.word	0x00004af0
   10674:	.word	0x00004ad8
   10678:	.word	0x00004ab8
   1067c:	.word	0x00004aa0
   10680:	.word	0x00020650
   10684:	.word	0x0000576c
   10688:	.word	0x00020624
   1068c:	.word	0x00005770
   10690:	.word	0x000205f8
   10694:	.word	0x000205ec
   10698:	.word	0x00005718
   1069c:	.word	0x000205d0
   106a0:	.word	0x00020574
   106a4:	.word	0x000056d8
   106a8:	.word	0x000056c0
   106ac:	.word	0x000056a8
   106b0:	.word	0x00005690
   106b4:	.word	0x00005678
   106b8:	.word	0x00002c0c
   106bc:	.word	0x00002c00
   106c0:	.word	0x0000413c
   106c4:	.word	0x00004050
   106c8:	.word	0x00003fe4
   106cc:	.word	0x000000cc
   106d0:	.word	0x00020e68
   106d4:	.word	0x00005240
   106d8:	.word	0x000032a8
   106dc:	.word	0x00020e40
   106e0:	.word	0x00005228
   106e4:	.word	0x00003280
   106e8:	mov	r1, #252	; 0xfc
   106ec:	ldr	r0, [sl]
   106f0:	bl	62f4 <sf_gen_p80211_type>
   106f4:	str	r0, [sp, #32]
   106f8:	b	f6fc <sfbpf_parse+0x104>
   106fc:	ldr	r0, [sl]
   10700:	bl	6360 <sf_gen_p80211_fcdir>
   10704:	str	r0, [sp, #32]
   10708:	b	f6fc <sfbpf_parse+0x104>
   1070c:	ldr	r1, [pc, #-148]	; 10680 <sfbpf_parse+0x1088>
   10710:	add	r1, pc, r1
   10714:	add	r1, r1, #352	; 0x160
   10718:	ldr	r0, [sl]
   1071c:	bl	f5a4 <str2tok>
   10720:	str	r0, [sp, #32]
   10724:	cmn	r0, #1
   10728:	bne	f6fc <sfbpf_parse+0x104>
   1072c:	ldr	r0, [pc, #-176]	; 10684 <sfbpf_parse+0x108c>
   10730:	add	r0, pc, r0
   10734:	bl	22b4 <sf_bpf_error>
   10738:	ldr	r1, [pc, #-184]	; 10688 <sfbpf_parse+0x1090>
   1073c:	add	r1, pc, r1
   10740:	add	r1, r1, #128	; 0x80
   10744:	ldr	r0, [sl]
   10748:	bl	f5a4 <str2tok>
   1074c:	str	r0, [sp, #32]
   10750:	cmn	r0, #1
   10754:	bne	f6fc <sfbpf_parse+0x104>
   10758:	ldr	r0, [pc, #-212]	; 1068c <sfbpf_parse+0x1094>
   1075c:	add	r0, pc, r0
   10760:	bl	22b4 <sf_bpf_error>
   10764:	ldr	r1, [pc, #-220]	; 10690 <sfbpf_parse+0x1098>
   10768:	add	r1, pc, r1
   1076c:	b	10744 <sfbpf_parse+0x114c>
   10770:	ldr	r1, [pc, #-228]	; 10694 <sfbpf_parse+0x109c>
   10774:	add	r1, pc, r1
   10778:	add	r1, r1, #184	; 0xb8
   1077c:	b	10744 <sfbpf_parse+0x114c>
   10780:	ldr	r0, [pc, #-240]	; 10698 <sfbpf_parse+0x10a0>
   10784:	add	r0, pc, r0
   10788:	bl	22b4 <sf_bpf_error>
   1078c:	ldr	r1, [pc, #-248]	; 1069c <sfbpf_parse+0x10a4>
   10790:	add	r1, pc, r1
   10794:	add	r3, r1, #400	; 0x190
   10798:	add	r1, r1, #184	; 0xb8
   1079c:	mov	r2, #0
   107a0:	str	r7, [sp, #24]
   107a4:	str	r6, [sp, #28]
   107a8:	mov	r6, r3
   107ac:	mov	r7, r2
   107b0:	b	107c8 <sfbpf_parse+0x11d0>
   107b4:	add	r7, r7, #1
   107b8:	add	r6, r6, #8
   107bc:	ldr	r1, [r6, #4]
   107c0:	cmp	r1, #0
   107c4:	beq	10780 <sfbpf_parse+0x1188>
   107c8:	ldr	r0, [sl]
   107cc:	bl	f5a4 <str2tok>
   107d0:	str	r0, [sp, #32]
   107d4:	cmn	r0, #1
   107d8:	beq	107b4 <sfbpf_parse+0x11bc>
   107dc:	ldr	r6, [sp, #28]
   107e0:	mov	r2, r7
   107e4:	ldr	r7, [sp, #24]
   107e8:	ldr	r3, [pc, #-336]	; 106a0 <sfbpf_parse+0x10a8>
   107ec:	add	r3, pc, r3
   107f0:	add	r3, r3, r2, lsl #3
   107f4:	ldr	r3, [r3, #400]	; 0x190
   107f8:	orr	r0, r3, r0
   107fc:	str	r0, [sp, #32]
   10800:	b	f6fc <sfbpf_parse+0x104>
   10804:	ldr	r3, [sl]
   10808:	str	r3, [sp, #24]
   1080c:	ldr	r1, [pc, #-368]	; 106a4 <sfbpf_parse+0x10ac>
   10810:	add	r1, pc, r1
   10814:	mov	r0, r3
   10818:	bl	f2f8 <sfbpf_strcasecmp>
   1081c:	cmp	r0, #0
   10820:	moveq	r3, #0
   10824:	streq	r3, [sp, #32]
   10828:	beq	f6fc <sfbpf_parse+0x104>
   1082c:	ldr	r1, [pc, #-396]	; 106a8 <sfbpf_parse+0x10b0>
   10830:	add	r1, pc, r1
   10834:	ldr	r0, [sp, #24]
   10838:	bl	f2f8 <sfbpf_strcasecmp>
   1083c:	cmp	r0, #0
   10840:	moveq	r3, #1
   10844:	streq	r3, [sp, #32]
   10848:	beq	f6fc <sfbpf_parse+0x104>
   1084c:	ldr	r1, [pc, #-424]	; 106ac <sfbpf_parse+0x10b4>
   10850:	add	r1, pc, r1
   10854:	ldr	r0, [sp, #24]
   10858:	bl	f2f8 <sfbpf_strcasecmp>
   1085c:	cmp	r0, #0
   10860:	moveq	r3, #2
   10864:	streq	r3, [sp, #32]
   10868:	beq	f6fc <sfbpf_parse+0x104>
   1086c:	ldr	r1, [pc, #-452]	; 106b0 <sfbpf_parse+0x10b8>
   10870:	add	r1, pc, r1
   10874:	ldr	r0, [sp, #24]
   10878:	bl	f2f8 <sfbpf_strcasecmp>
   1087c:	cmp	r0, #0
   10880:	moveq	r3, #3
   10884:	streq	r3, [sp, #32]
   10888:	beq	f6fc <sfbpf_parse+0x104>
   1088c:	ldr	r0, [pc, #-480]	; 106b4 <sfbpf_parse+0x10bc>
   10890:	add	r0, pc, r0
   10894:	bl	22b4 <sf_bpf_error>
   10898:	ldr	r3, [sl]
   1089c:	str	r3, [sp, #32]
   108a0:	b	f6fc <sfbpf_parse+0x104>
   108a4:	ldr	r0, [pc, #-500]	; 106b8 <sfbpf_parse+0x10c0>
   108a8:	add	r0, pc, r0
   108ac:	bl	22b4 <sf_bpf_error>
   108b0:	ldr	r0, [pc, #-508]	; 106bc <sfbpf_parse+0x10c4>
   108b4:	add	r0, pc, r0
   108b8:	bl	22b4 <sf_bpf_error>
   108bc:	mov	r3, #32
   108c0:	str	r3, [sp, #32]
   108c4:	b	f6fc <sfbpf_parse+0x104>
   108c8:	mov	r3, #48	; 0x30
   108cc:	str	r3, [sp, #32]
   108d0:	b	f6fc <sfbpf_parse+0x104>
   108d4:	mov	r3, #16
   108d8:	str	r3, [sp, #32]
   108dc:	b	f6fc <sfbpf_parse+0x104>
   108e0:	mov	r3, #32
   108e4:	str	r3, [sp, #32]
   108e8:	b	f6fc <sfbpf_parse+0x104>
   108ec:	mov	r3, #48	; 0x30
   108f0:	str	r3, [sp, #32]
   108f4:	b	f6fc <sfbpf_parse+0x104>
   108f8:	mov	r3, #16
   108fc:	str	r3, [sp, #32]
   10900:	b	f6fc <sfbpf_parse+0x104>
   10904:	ldr	r0, [sl]
   10908:	bl	5f7c <sf_gen_loadi>
   1090c:	str	r0, [sp, #32]
   10910:	b	f6fc <sfbpf_parse+0x104>
   10914:	mov	r2, #1
   10918:	ldr	r1, [sl, #-16]
   1091c:	ldr	r0, [sl, #-48]	; 0xffffffd0
   10920:	bl	7fd4 <sf_gen_load>
   10924:	str	r0, [sp, #32]
   10928:	b	f6fc <sfbpf_parse+0x104>
   1092c:	ldr	r2, [sl, #-16]
   10930:	ldr	r1, [sl, #-48]	; 0xffffffd0
   10934:	ldr	r0, [sl, #-80]	; 0xffffffb0
   10938:	bl	7fd4 <sf_gen_load>
   1093c:	str	r0, [sp, #32]
   10940:	b	f6fc <sfbpf_parse+0x104>
   10944:	ldr	r2, [sl]
   10948:	ldr	r1, [sl, #-32]	; 0xffffffe0
   1094c:	mov	r0, #0
   10950:	bl	6040 <sf_gen_arth>
   10954:	str	r0, [sp, #32]
   10958:	b	f6fc <sfbpf_parse+0x104>
   1095c:	ldr	r2, [sl]
   10960:	ldr	r1, [sl, #-32]	; 0xffffffe0
   10964:	mov	r0, #16
   10968:	bl	6040 <sf_gen_arth>
   1096c:	str	r0, [sp, #32]
   10970:	b	f6fc <sfbpf_parse+0x104>
   10974:	ldr	r2, [sl]
   10978:	ldr	r1, [sl, #-32]	; 0xffffffe0
   1097c:	mov	r0, #32
   10980:	bl	6040 <sf_gen_arth>
   10984:	str	r0, [sp, #32]
   10988:	b	f6fc <sfbpf_parse+0x104>
   1098c:	ldr	r2, [sl]
   10990:	ldr	r1, [sl, #-32]	; 0xffffffe0
   10994:	mov	r0, #48	; 0x30
   10998:	bl	6040 <sf_gen_arth>
   1099c:	str	r0, [sp, #32]
   109a0:	b	f6fc <sfbpf_parse+0x104>
   109a4:	ldr	r2, [sl]
   109a8:	ldr	r1, [sl, #-32]	; 0xffffffe0
   109ac:	mov	r0, #80	; 0x50
   109b0:	bl	6040 <sf_gen_arth>
   109b4:	str	r0, [sp, #32]
   109b8:	b	f6fc <sfbpf_parse+0x104>
   109bc:	ldr	r2, [sl]
   109c0:	ldr	r1, [sl, #-32]	; 0xffffffe0
   109c4:	mov	r0, #64	; 0x40
   109c8:	bl	6040 <sf_gen_arth>
   109cc:	str	r0, [sp, #32]
   109d0:	b	f6fc <sfbpf_parse+0x104>
   109d4:	ldr	r2, [sl]
   109d8:	ldr	r1, [sl, #-32]	; 0xffffffe0
   109dc:	mov	r0, #96	; 0x60
   109e0:	bl	6040 <sf_gen_arth>
   109e4:	str	r0, [sp, #32]
   109e8:	b	f6fc <sfbpf_parse+0x104>
   109ec:	ldr	r2, [sl]
   109f0:	ldr	r1, [sl, #-32]	; 0xffffffe0
   109f4:	mov	r0, #112	; 0x70
   109f8:	bl	6040 <sf_gen_arth>
   109fc:	str	r0, [sp, #32]
   10a00:	b	f6fc <sfbpf_parse+0x104>
   10a04:	ldr	r0, [sl]
   10a08:	bl	5fd8 <sf_gen_neg>
   10a0c:	str	r0, [sp, #32]
   10a10:	b	f6fc <sfbpf_parse+0x104>
   10a14:	ldr	r3, [sl, #-16]
   10a18:	str	r3, [sp, #32]
   10a1c:	b	f6fc <sfbpf_parse+0x104>
   10a20:	bl	5f28 <sf_gen_loadlen>
   10a24:	str	r0, [sp, #32]
   10a28:	b	f6fc <sfbpf_parse+0x104>
   10a2c:	mov	r3, #38	; 0x26
   10a30:	str	r3, [sp, #32]
   10a34:	b	f6fc <sfbpf_parse+0x104>
   10a38:	mov	r3, #124	; 0x7c
   10a3c:	str	r3, [sp, #32]
   10a40:	b	f6fc <sfbpf_parse+0x104>
   10a44:	mov	r3, #60	; 0x3c
   10a48:	str	r3, [sp, #32]
   10a4c:	b	f6fc <sfbpf_parse+0x104>
   10a50:	mov	r3, #62	; 0x3e
   10a54:	str	r3, [sp, #32]
   10a58:	b	f6fc <sfbpf_parse+0x104>
   10a5c:	mov	r3, #61	; 0x3d
   10a60:	str	r3, [sp, #32]
   10a64:	b	f6fc <sfbpf_parse+0x104>
   10a68:	ldr	r3, [sl, #-16]
   10a6c:	str	r3, [sp, #32]
   10a70:	b	f6fc <sfbpf_parse+0x104>
   10a74:	mov	r3, #30
   10a78:	str	r3, [sp, #32]
   10a7c:	b	f6fc <sfbpf_parse+0x104>
   10a80:	mov	r3, #31
   10a84:	str	r3, [sp, #32]
   10a88:	b	f6fc <sfbpf_parse+0x104>
   10a8c:	mov	r3, #22
   10a90:	str	r3, [sp, #32]
   10a94:	b	f6fc <sfbpf_parse+0x104>
   10a98:	mov	r3, #23
   10a9c:	str	r3, [sp, #32]
   10aa0:	b	f6fc <sfbpf_parse+0x104>
   10aa4:	mov	r3, #25
   10aa8:	str	r3, [sp, #32]
   10aac:	b	f6fc <sfbpf_parse+0x104>
   10ab0:	mov	r3, #24
   10ab4:	str	r3, [sp, #32]
   10ab8:	b	f6fc <sfbpf_parse+0x104>
   10abc:	mov	r3, #26
   10ac0:	str	r3, [sp, #32]
   10ac4:	b	f6fc <sfbpf_parse+0x104>
   10ac8:	mov	r3, #27
   10acc:	str	r3, [sp, #32]
   10ad0:	b	f6fc <sfbpf_parse+0x104>
   10ad4:	mov	r3, #28
   10ad8:	str	r3, [sp, #32]
   10adc:	b	f6fc <sfbpf_parse+0x104>
   10ae0:	mov	r3, #29
   10ae4:	str	r3, [sp, #32]
   10ae8:	b	f6fc <sfbpf_parse+0x104>
   10aec:	mov	r3, #70	; 0x46
   10af0:	str	r3, [sp, #32]
   10af4:	b	f6fc <sfbpf_parse+0x104>
   10af8:	mov	r3, #71	; 0x47
   10afc:	str	r3, [sp, #32]
   10b00:	b	f6fc <sfbpf_parse+0x104>
   10b04:	mov	r3, #52	; 0x34
   10b08:	str	r3, [sp, #4]
   10b0c:	b	f6fc <sfbpf_parse+0x104>
   10b10:	mov	r3, #0
   10b14:	ldr	r2, [sl, #-16]
   10b18:	ldr	r1, [sl]
   10b1c:	ldr	r0, [sl, #-28]	; 0xffffffe4
   10b20:	bl	6544 <sf_gen_atmfield_code>
   10b24:	mov	r8, r0
   10b28:	b	f6fc <sfbpf_parse+0x104>
   10b2c:	mov	r3, #1
   10b30:	ldr	r2, [sl, #-16]
   10b34:	ldr	r1, [sl]
   10b38:	ldr	r0, [sl, #-28]	; 0xffffffe4
   10b3c:	bl	6544 <sf_gen_atmfield_code>
   10b40:	mov	r8, r0
   10b44:	b	f6fc <sfbpf_parse+0x104>
   10b48:	ldr	r8, [sl, #-4]
   10b4c:	ldr	r3, [pc, #-1172]	; 106c0 <sfbpf_parse+0x10c8>
   10b50:	add	r3, pc, r3
   10b54:	ldr	r3, [r3, #4076]	; 0xfec
   10b58:	str	r3, [sp, #32]
   10b5c:	b	f6fc <sfbpf_parse+0x104>
   10b60:	ldr	r3, [sl, #-12]
   10b64:	str	r3, [sp, #4]
   10b68:	sub	r3, r3, #51	; 0x33
   10b6c:	cmp	r3, #1
   10b70:	bhi	f6fc <sfbpf_parse+0x104>
   10b74:	mov	r3, #0
   10b78:	mov	r2, #16
   10b7c:	ldr	r1, [sl]
   10b80:	ldr	r0, [sp, #4]
   10b84:	bl	6544 <sf_gen_atmfield_code>
   10b88:	mov	r8, r0
   10b8c:	b	f6fc <sfbpf_parse+0x104>
   10b90:	ldr	r8, [sl, #12]
   10b94:	mov	r1, r8
   10b98:	ldr	r0, [sl, #-20]	; 0xffffffec
   10b9c:	bl	3a20 <sf_gen_or>
   10ba0:	ldm	sl, {r0, r1, r2, r3}
   10ba4:	add	ip, sp, #32
   10ba8:	stm	ip, {r0, r1, r2, r3}
   10bac:	str	r1, [sp, #4]
   10bb0:	mov	r7, r2
   10bb4:	b	f6fc <sfbpf_parse+0x104>
   10bb8:	mov	r3, #22
   10bbc:	str	r3, [sp, #32]
   10bc0:	b	f6fc <sfbpf_parse+0x104>
   10bc4:	mov	r3, #23
   10bc8:	str	r3, [sp, #32]
   10bcc:	b	f6fc <sfbpf_parse+0x104>
   10bd0:	mov	r3, #24
   10bd4:	str	r3, [sp, #32]
   10bd8:	b	f6fc <sfbpf_parse+0x104>
   10bdc:	mov	r7, #1
   10be0:	b	f6fc <sfbpf_parse+0x104>
   10be4:	mov	r7, #2
   10be8:	b	f6fc <sfbpf_parse+0x104>
   10bec:	mov	r7, #3
   10bf0:	b	f6fc <sfbpf_parse+0x104>
   10bf4:	mov	r7, #4
   10bf8:	b	f6fc <sfbpf_parse+0x104>
   10bfc:	mov	r3, #0
   10c00:	ldr	r2, [sl, #-16]
   10c04:	ldr	r1, [sl]
   10c08:	ldr	r0, [sl, #-24]	; 0xffffffe8
   10c0c:	bl	b734 <sf_gen_mtp3field_code>
   10c10:	mov	r8, r0
   10c14:	b	f6fc <sfbpf_parse+0x104>
   10c18:	mov	r3, #1
   10c1c:	ldr	r2, [sl, #-16]
   10c20:	ldr	r1, [sl]
   10c24:	ldr	r0, [sl, #-24]	; 0xffffffe8
   10c28:	bl	b734 <sf_gen_mtp3field_code>
   10c2c:	mov	r8, r0
   10c30:	b	f6fc <sfbpf_parse+0x104>
   10c34:	ldr	r8, [sl, #-4]
   10c38:	ldr	r3, [pc, #-1404]	; 106c4 <sfbpf_parse+0x10cc>
   10c3c:	add	r3, pc, r3
   10c40:	ldr	r3, [r3, #4076]	; 0xfec
   10c44:	str	r3, [sp, #32]
   10c48:	b	f6fc <sfbpf_parse+0x104>
   10c4c:	ldr	r7, [sl, #-8]
   10c50:	sub	r3, r7, #1
   10c54:	cmp	r3, #3
   10c58:	bhi	f6fc <sfbpf_parse+0x104>
   10c5c:	mov	r3, #0
   10c60:	mov	r2, #16
   10c64:	ldr	r1, [sl]
   10c68:	mov	r0, r7
   10c6c:	bl	b734 <sf_gen_mtp3field_code>
   10c70:	mov	r8, r0
   10c74:	b	f6fc <sfbpf_parse+0x104>
   10c78:	ldr	r8, [sl, #12]
   10c7c:	mov	r1, r8
   10c80:	ldr	r0, [sl, #-20]	; 0xffffffec
   10c84:	bl	3a20 <sf_gen_or>
   10c88:	ldm	sl, {r0, r1, r2, r3}
   10c8c:	add	ip, sp, #32
   10c90:	stm	ip, {r0, r1, r2, r3}
   10c94:	str	r1, [sp, #4]
   10c98:	mov	r7, r2
   10c9c:	b	f6fc <sfbpf_parse+0x104>
   10ca0:	lsl	r2, r2, #1
   10ca4:	ldr	r3, [pc, #-1508]	; 106c8 <sfbpf_parse+0x10d0>
   10ca8:	add	r3, pc, r3
   10cac:	add	r3, r3, #2256	; 0x8d0
   10cb0:	ldrsh	r7, [r3, r2]
   10cb4:	b	f780 <sfbpf_parse+0x188>
   10cb8:	ldr	r3, [pc, #-1524]	; 106cc <sfbpf_parse+0x10d4>
   10cbc:	ldr	r2, [r9, r3]
   10cc0:	ldr	r3, [r2]
   10cc4:	add	r3, r3, #1
   10cc8:	str	r3, [r2]
   10ccc:	ldr	r2, [pc, #-1540]	; 106d0 <sfbpf_parse+0x10d8>
   10cd0:	add	r2, pc, r2
   10cd4:	ldr	r3, [r2]
   10cd8:	add	r3, r3, #1
   10cdc:	str	r3, [r2]
   10ce0:	ldr	r1, [pc, #-1556]	; 106d4 <sfbpf_parse+0x10dc>
   10ce4:	add	r1, pc, r1
   10ce8:	ldr	r0, [pc, #-1560]	; 106d8 <sfbpf_parse+0x10e0>
   10cec:	add	r0, pc, r0
   10cf0:	bl	22b4 <sf_bpf_error>
   10cf4:	ldr	r2, [pc, #-1568]	; 106dc <sfbpf_parse+0x10e4>
   10cf8:	add	r2, pc, r2
   10cfc:	ldr	r3, [r2]
   10d00:	add	r3, r3, #1
   10d04:	str	r3, [r2]
   10d08:	ldr	r1, [pc, #-1584]	; 106e0 <sfbpf_parse+0x10e8>
   10d0c:	add	r1, pc, r1
   10d10:	ldr	r0, [pc, #-1588]	; 106e4 <sfbpf_parse+0x10ec>
   10d14:	add	r0, pc, r0
   10d18:	bl	22b4 <sf_bpf_error>
   10d1c:	ldr	r3, [sp, #4]
   10d20:	str	r3, [sp]
   10d24:	mov	r4, #1
   10d28:	b	10d30 <sfbpf_parse+0x1738>
   10d2c:	mov	r4, #0
   10d30:	ldr	r3, [sp]
   10d34:	cmp	r3, r5
   10d38:	beq	10d48 <sfbpf_parse+0x1750>
   10d3c:	sub	r5, r5, #2
   10d40:	cmp	r3, r5
   10d44:	bne	10d3c <sfbpf_parse+0x1744>
   10d48:	add	r3, sp, #3248	; 0xcb0
   10d4c:	ldr	r2, [sp]
   10d50:	cmp	r2, r3
   10d54:	beq	10d60 <sfbpf_parse+0x1768>
   10d58:	mov	r0, r2
   10d5c:	bl	da4 <free@plt>
   10d60:	mov	r0, r4
   10d64:	add	sp, sp, #3648	; 0xe40
   10d68:	add	sp, sp, #4
   10d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010d70 <yy_get_previous_state>:
   10d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d74:	sub	sp, sp, #28
   10d78:	ldr	r2, [pc, #324]	; 10ec4 <yy_get_previous_state+0x154>
   10d7c:	add	r2, pc, r2
   10d80:	ldr	r3, [pc, #320]	; 10ec8 <yy_get_previous_state+0x158>
   10d84:	add	r3, pc, r3
   10d88:	ldr	r0, [r3]
   10d8c:	ldr	r7, [r3, #4]
   10d90:	ldr	r5, [r3, #8]
   10d94:	ldr	r4, [r3, #12]
   10d98:	ldr	r3, [pc, #300]	; 10ecc <yy_get_previous_state+0x15c>
   10d9c:	ldr	r3, [r2, r3]
   10da0:	ldr	r1, [r3]
   10da4:	mov	r2, #0
   10da8:	str	r2, [sp, #4]
   10dac:	ldr	r3, [pc, #284]	; 10ed0 <yy_get_previous_state+0x160>
   10db0:	add	r3, pc, r3
   10db4:	add	r3, r3, #256	; 0x100
   10db8:	str	r3, [sp, #8]
   10dbc:	ldr	r6, [pc, #272]	; 10ed4 <yy_get_previous_state+0x164>
   10dc0:	add	r6, pc, r6
   10dc4:	add	r3, r6, #2560	; 0xa00
   10dc8:	add	r3, r3, #12
   10dcc:	str	r3, [sp, #12]
   10dd0:	ldr	r3, [pc, #256]	; 10ed8 <yy_get_previous_state+0x168>
   10dd4:	add	r3, pc, r3
   10dd8:	add	r3, r3, #3120	; 0xc30
   10ddc:	add	r3, r3, #4
   10de0:	str	r3, [sp, #16]
   10de4:	ldr	r3, [pc, #240]	; 10edc <yy_get_previous_state+0x16c>
   10de8:	add	r3, pc, r3
   10dec:	add	r3, r3, #1104	; 0x450
   10df0:	add	r9, r3, #12
   10df4:	mov	lr, r1
   10df8:	cmp	r1, r7
   10dfc:	bcc	10e2c <yy_get_previous_state+0xbc>
   10e00:	ldr	r3, [sp, #4]
   10e04:	cmp	r3, #0
   10e08:	ldrne	r3, [pc, #208]	; 10ee0 <yy_get_previous_state+0x170>
   10e0c:	addne	r3, pc, r3
   10e10:	strne	r5, [r3, #8]
   10e14:	cmp	r2, #0
   10e18:	ldrne	r3, [pc, #196]	; 10ee4 <yy_get_previous_state+0x174>
   10e1c:	addne	r3, pc, r3
   10e20:	strne	r4, [r3, #12]
   10e24:	add	sp, sp, #28
   10e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e2c:	ldrb	r3, [r1], #1
   10e30:	cmp	r3, #0
   10e34:	moveq	ip, #1
   10e38:	ldrne	ip, [pc, #168]	; 10ee8 <yy_get_previous_state+0x178>
   10e3c:	addne	ip, pc, ip
   10e40:	ldrbne	ip, [ip, r3]
   10e44:	lsl	r3, r0, #1
   10e48:	ldr	r8, [sp, #8]
   10e4c:	ldrsh	r3, [r8, r3]
   10e50:	cmp	r3, #0
   10e54:	movne	r4, lr
   10e58:	movne	r5, r0
   10e5c:	movne	r2, #1
   10e60:	strne	r2, [sp, #4]
   10e64:	sub	sl, r6, #1216	; 0x4c0
   10e68:	ldr	r8, [pc, #124]	; 10eec <yy_get_previous_state+0x17c>
   10e6c:	add	r8, pc, r8
   10e70:	str	r2, [sp, #20]
   10e74:	mov	lr, ip
   10e78:	lsl	r3, r0, #1
   10e7c:	ldrsh	r3, [sl, r3]
   10e80:	add	r3, r3, ip
   10e84:	lsl	fp, r3, #1
   10e88:	ldr	r2, [sp, #12]
   10e8c:	ldrsh	fp, [r2, fp]
   10e90:	cmp	r0, fp
   10e94:	ldreq	r2, [sp, #20]
   10e98:	lsleq	r3, r3, #1
   10e9c:	ldrsheq	r0, [r9, r3]
   10ea0:	beq	10df4 <yy_get_previous_state+0x84>
   10ea4:	lsl	r0, r0, #1
   10ea8:	ldr	r3, [sp, #16]
   10eac:	ldrsh	r0, [r3, r0]
   10eb0:	ldr	r3, [pc, #56]	; 10ef0 <yy_get_previous_state+0x180>
   10eb4:	cmp	r0, r3
   10eb8:	addgt	lr, r8, lr
   10ebc:	ldrbgt	ip, [lr, #-1272]	; 0xfffffb08
   10ec0:	b	10e74 <yy_get_previous_state+0x104>
   10ec4:	.word	0x0002027c
   10ec8:	.word	0x00020db8
   10ecc:	.word	0x000000dc
   10ed0:	.word	0x00005344
   10ed4:	.word	0x0000732c
   10ed8:	.word	0x00005320
   10edc:	.word	0x0000b2f4
   10ee0:	.word	0x00020d30
   10ee4:	.word	0x00020d20
   10ee8:	.word	0x000052b8
   10eec:	.word	0x00007280
   10ef0:	.word	0x00000599

00010ef4 <sfbpf__load_buffer_state>:
   10ef4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ef8:	ldr	ip, [pc, #72]	; 10f48 <sfbpf__load_buffer_state+0x54>
   10efc:	add	ip, pc, ip
   10f00:	ldr	r3, [pc, #68]	; 10f4c <sfbpf__load_buffer_state+0x58>
   10f04:	add	r3, pc, r3
   10f08:	ldr	r0, [r3, #20]
   10f0c:	ldr	r1, [r3, #16]
   10f10:	ldr	r2, [r1, r0, lsl #2]
   10f14:	ldr	lr, [r2, #16]
   10f18:	str	lr, [r3, #24]
   10f1c:	ldr	r2, [r2, #8]
   10f20:	str	r2, [r3, #4]
   10f24:	ldr	lr, [pc, #36]	; 10f50 <sfbpf__load_buffer_state+0x5c>
   10f28:	ldr	ip, [ip, lr]
   10f2c:	str	r2, [ip]
   10f30:	ldr	r1, [r1, r0, lsl #2]
   10f34:	ldr	r1, [r1]
   10f38:	str	r1, [r3, #28]
   10f3c:	ldrb	r2, [r2]
   10f40:	strb	r2, [r3, #32]
   10f44:	pop	{pc}		; (ldr pc, [sp], #4)
   10f48:	.word	0x000200fc
   10f4c:	.word	0x00020c38
   10f50:	.word	0x000000dc

00010f54 <yy_fatal_error>:
   10f54:	push	{r4, lr}
   10f58:	ldr	r3, [pc, #36]	; 10f84 <yy_fatal_error+0x30>
   10f5c:	add	r3, pc, r3
   10f60:	ldr	r2, [pc, #32]	; 10f88 <yy_fatal_error+0x34>
   10f64:	ldr	r3, [r3, r2]
   10f68:	mov	r2, r0
   10f6c:	ldr	r1, [pc, #24]	; 10f8c <yy_fatal_error+0x38>
   10f70:	add	r1, pc, r1
   10f74:	ldr	r0, [r3]
   10f78:	bl	e64 <fprintf@plt>
   10f7c:	mov	r0, #2
   10f80:	bl	e40 <exit@plt>
   10f84:	.word	0x0002009c
   10f88:	.word	0x000000d4
   10f8c:	.word	0x0000f008

00010f90 <sfbpf_ensure_buffer_stack>:
   10f90:	push	{r4, r5, r6, lr}
   10f94:	ldr	r3, [pc, #196]	; 11060 <sfbpf_ensure_buffer_stack+0xd0>
   10f98:	add	r3, pc, r3
   10f9c:	ldr	r0, [r3, #16]
   10fa0:	cmp	r0, #0
   10fa4:	beq	1100c <sfbpf_ensure_buffer_stack+0x7c>
   10fa8:	ldr	r2, [pc, #180]	; 11064 <sfbpf_ensure_buffer_stack+0xd4>
   10fac:	add	r2, pc, r2
   10fb0:	ldr	r3, [r2, #36]	; 0x24
   10fb4:	sub	r1, r3, #1
   10fb8:	ldr	r2, [r2, #20]
   10fbc:	cmp	r1, r2
   10fc0:	pophi	{r4, r5, r6, pc}
   10fc4:	add	r4, r3, #8
   10fc8:	lsl	r5, r4, #2
   10fcc:	mov	r1, r5
   10fd0:	bl	dec <realloc@plt>
   10fd4:	ldr	r3, [pc, #140]	; 11068 <sfbpf_ensure_buffer_stack+0xd8>
   10fd8:	add	r3, pc, r3
   10fdc:	str	r0, [r3, #16]
   10fe0:	cmp	r0, #0
   10fe4:	beq	11054 <sfbpf_ensure_buffer_stack+0xc4>
   10fe8:	sub	r5, r5, #32
   10fec:	mov	r2, #32
   10ff0:	mov	r1, #0
   10ff4:	add	r0, r0, r5
   10ff8:	bl	e88 <memset@plt>
   10ffc:	ldr	r3, [pc, #104]	; 1106c <sfbpf_ensure_buffer_stack+0xdc>
   11000:	add	r3, pc, r3
   11004:	str	r4, [r3, #36]	; 0x24
   11008:	pop	{r4, r5, r6, pc}
   1100c:	mov	r0, #4
   11010:	bl	e1c <malloc@plt>
   11014:	ldr	r3, [pc, #84]	; 11070 <sfbpf_ensure_buffer_stack+0xe0>
   11018:	add	r3, pc, r3
   1101c:	str	r0, [r3, #16]
   11020:	cmp	r0, #0
   11024:	beq	11048 <sfbpf_ensure_buffer_stack+0xb8>
   11028:	mov	r2, #0
   1102c:	str	r2, [r0]
   11030:	ldr	r3, [pc, #60]	; 11074 <sfbpf_ensure_buffer_stack+0xe4>
   11034:	add	r3, pc, r3
   11038:	mov	r1, #1
   1103c:	str	r1, [r3, #36]	; 0x24
   11040:	str	r2, [r3, #20]
   11044:	pop	{r4, r5, r6, pc}
   11048:	ldr	r0, [pc, #40]	; 11078 <sfbpf_ensure_buffer_stack+0xe8>
   1104c:	add	r0, pc, r0
   11050:	bl	10f54 <yy_fatal_error>
   11054:	ldr	r0, [pc, #32]	; 1107c <sfbpf_ensure_buffer_stack+0xec>
   11058:	add	r0, pc, r0
   1105c:	bl	10f54 <yy_fatal_error>
   11060:	.word	0x00020ba4
   11064:	.word	0x00020b90
   11068:	.word	0x00020b64
   1106c:	.word	0x00020b3c
   11070:	.word	0x00020b24
   11074:	.word	0x00020b08
   11078:	.word	0x0000ef30
   1107c:	.word	0x0000ef24

00011080 <sfbpf__switch_to_buffer>:
   11080:	push	{r4, lr}
   11084:	mov	r4, r0
   11088:	bl	10f90 <sfbpf_ensure_buffer_stack>
   1108c:	ldr	r3, [pc, #120]	; 1110c <sfbpf__switch_to_buffer+0x8c>
   11090:	add	r3, pc, r3
   11094:	ldr	r3, [r3, #16]
   11098:	cmp	r3, #0
   1109c:	beq	11100 <sfbpf__switch_to_buffer+0x80>
   110a0:	ldr	r2, [pc, #104]	; 11110 <sfbpf__switch_to_buffer+0x90>
   110a4:	add	r2, pc, r2
   110a8:	ldr	r2, [r2, #20]
   110ac:	ldr	r1, [r3, r2, lsl #2]
   110b0:	cmp	r1, r4
   110b4:	popeq	{r4, pc}
   110b8:	cmp	r1, #0
   110bc:	beq	110e8 <sfbpf__switch_to_buffer+0x68>
   110c0:	ldr	r1, [pc, #76]	; 11114 <sfbpf__switch_to_buffer+0x94>
   110c4:	add	r1, pc, r1
   110c8:	ldr	r0, [r1, #4]
   110cc:	ldrb	ip, [r1, #32]
   110d0:	strb	ip, [r0]
   110d4:	ldr	ip, [r3, r2, lsl #2]
   110d8:	str	r0, [ip, #8]
   110dc:	ldr	r2, [r3, r2, lsl #2]
   110e0:	ldr	r1, [r1, #24]
   110e4:	str	r1, [r2, #16]
   110e8:	ldr	r2, [pc, #40]	; 11118 <sfbpf__switch_to_buffer+0x98>
   110ec:	add	r2, pc, r2
   110f0:	ldr	r2, [r2, #20]
   110f4:	str	r4, [r3, r2, lsl #2]
   110f8:	bl	10ef4 <sfbpf__load_buffer_state>
   110fc:	pop	{r4, pc}
   11100:	cmp	r4, #0
   11104:	bne	110e8 <sfbpf__switch_to_buffer+0x68>
   11108:	pop	{r4, pc}
   1110c:	.word	0x00020aac
   11110:	.word	0x00020a98
   11114:	.word	0x00020a78
   11118:	.word	0x00020a50

0001111c <sfbpf__delete_buffer>:
   1111c:	push	{r4, lr}
   11120:	subs	r4, r0, #0
   11124:	popeq	{r4, pc}
   11128:	ldr	r3, [pc, #76]	; 1117c <sfbpf__delete_buffer+0x60>
   1112c:	add	r3, pc, r3
   11130:	ldr	r3, [r3, #16]
   11134:	cmp	r3, #0
   11138:	beq	11158 <sfbpf__delete_buffer+0x3c>
   1113c:	ldr	r2, [pc, #60]	; 11180 <sfbpf__delete_buffer+0x64>
   11140:	add	r2, pc, r2
   11144:	ldr	r2, [r2, #20]
   11148:	ldr	r1, [r3, r2, lsl #2]
   1114c:	cmp	r4, r1
   11150:	moveq	r1, #0
   11154:	streq	r1, [r3, r2, lsl #2]
   11158:	ldr	r3, [r4, #20]
   1115c:	cmp	r3, #0
   11160:	bne	11170 <sfbpf__delete_buffer+0x54>
   11164:	mov	r0, r4
   11168:	bl	da4 <free@plt>
   1116c:	pop	{r4, pc}
   11170:	ldr	r0, [r4, #4]
   11174:	bl	da4 <free@plt>
   11178:	b	11164 <sfbpf__delete_buffer+0x48>
   1117c:	.word	0x00020a10
   11180:	.word	0x000209fc

00011184 <sfbpf__flush_buffer>:
   11184:	cmp	r0, #0
   11188:	bxeq	lr
   1118c:	mov	r3, #0
   11190:	str	r3, [r0, #16]
   11194:	ldr	r2, [r0, #4]
   11198:	strb	r3, [r2]
   1119c:	ldr	r2, [r0, #4]
   111a0:	strb	r3, [r2, #1]
   111a4:	ldr	r2, [r0, #4]
   111a8:	str	r2, [r0, #8]
   111ac:	mov	r2, #1
   111b0:	str	r2, [r0, #28]
   111b4:	str	r3, [r0, #44]	; 0x2c
   111b8:	ldr	r3, [pc, #48]	; 111f0 <sfbpf__flush_buffer+0x6c>
   111bc:	add	r3, pc, r3
   111c0:	ldr	r3, [r3, #16]
   111c4:	cmp	r3, #0
   111c8:	bxeq	lr
   111cc:	ldr	r2, [pc, #32]	; 111f4 <sfbpf__flush_buffer+0x70>
   111d0:	add	r2, pc, r2
   111d4:	ldr	r2, [r2, #20]
   111d8:	ldr	r3, [r3, r2, lsl #2]
   111dc:	cmp	r0, r3
   111e0:	bxne	lr
   111e4:	push	{r4, lr}
   111e8:	bl	10ef4 <sfbpf__load_buffer_state>
   111ec:	pop	{r4, pc}
   111f0:	.word	0x00020980
   111f4:	.word	0x0002096c

000111f8 <sfbpf__init_buffer>:
   111f8:	push	{r4, r5, r6, r7, r8, lr}
   111fc:	mov	r4, r0
   11200:	mov	r5, r1
   11204:	bl	e70 <__errno_location@plt>
   11208:	mov	r6, r0
   1120c:	ldr	r7, [r0]
   11210:	mov	r0, r4
   11214:	bl	11184 <sfbpf__flush_buffer>
   11218:	str	r5, [r4]
   1121c:	mov	r3, #1
   11220:	str	r3, [r4, #40]	; 0x28
   11224:	ldr	r3, [pc, #96]	; 1128c <sfbpf__init_buffer+0x94>
   11228:	add	r3, pc, r3
   1122c:	ldr	r3, [r3, #16]
   11230:	cmp	r3, #0
   11234:	moveq	r3, #0
   11238:	ldrne	r2, [pc, #80]	; 11290 <sfbpf__init_buffer+0x98>
   1123c:	addne	r2, pc, r2
   11240:	ldrne	r2, [r2, #20]
   11244:	ldrne	r3, [r3, r2, lsl #2]
   11248:	cmp	r3, r4
   1124c:	movne	r3, #1
   11250:	strne	r3, [r4, #32]
   11254:	movne	r3, #0
   11258:	strne	r3, [r4, #36]	; 0x24
   1125c:	cmp	r5, #0
   11260:	moveq	r0, #0
   11264:	beq	11280 <sfbpf__init_buffer+0x88>
   11268:	mov	r0, r5
   1126c:	bl	eac <fileno@plt>
   11270:	bl	f0c <isatty@plt>
   11274:	cmp	r0, #0
   11278:	movle	r0, #0
   1127c:	movgt	r0, #1
   11280:	str	r0, [r4, #24]
   11284:	str	r7, [r6]
   11288:	pop	{r4, r5, r6, r7, r8, pc}
   1128c:	.word	0x00020914
   11290:	.word	0x00020900

00011294 <sfbpf__create_buffer>:
   11294:	push	{r4, r5, r6, lr}
   11298:	mov	r6, r0
   1129c:	mov	r5, r1
   112a0:	mov	r0, #48	; 0x30
   112a4:	bl	e1c <malloc@plt>
   112a8:	subs	r4, r0, #0
   112ac:	beq	112e4 <sfbpf__create_buffer+0x50>
   112b0:	str	r5, [r4, #12]
   112b4:	add	r0, r5, #2
   112b8:	bl	e1c <malloc@plt>
   112bc:	str	r0, [r4, #4]
   112c0:	cmp	r0, #0
   112c4:	beq	112f0 <sfbpf__create_buffer+0x5c>
   112c8:	mov	r3, #1
   112cc:	str	r3, [r4, #20]
   112d0:	mov	r1, r6
   112d4:	mov	r0, r4
   112d8:	bl	111f8 <sfbpf__init_buffer>
   112dc:	mov	r0, r4
   112e0:	pop	{r4, r5, r6, pc}
   112e4:	ldr	r0, [pc, #16]	; 112fc <sfbpf__create_buffer+0x68>
   112e8:	add	r0, pc, r0
   112ec:	bl	10f54 <yy_fatal_error>
   112f0:	ldr	r0, [pc, #8]	; 11300 <sfbpf__create_buffer+0x6c>
   112f4:	add	r0, pc, r0
   112f8:	bl	10f54 <yy_fatal_error>
   112fc:	.word	0x0000ecc8
   11300:	.word	0x0000ecbc

00011304 <sfbpf_restart>:
   11304:	push	{r4, r5, r6, lr}
   11308:	mov	r5, r0
   1130c:	ldr	r3, [pc, #120]	; 1138c <sfbpf_restart+0x88>
   11310:	add	r3, pc, r3
   11314:	ldr	r4, [r3, #16]
   11318:	cmp	r4, #0
   1131c:	beq	11358 <sfbpf_restart+0x54>
   11320:	ldr	r3, [pc, #104]	; 11390 <sfbpf_restart+0x8c>
   11324:	add	r3, pc, r3
   11328:	ldr	r3, [r3, #20]
   1132c:	ldr	r3, [r4, r3, lsl #2]
   11330:	cmp	r3, #0
   11334:	beq	11358 <sfbpf_restart+0x54>
   11338:	ldr	r3, [pc, #84]	; 11394 <sfbpf_restart+0x90>
   1133c:	add	r3, pc, r3
   11340:	ldr	r3, [r3, #20]
   11344:	ldr	r0, [r4, r3, lsl #2]
   11348:	mov	r1, r5
   1134c:	bl	111f8 <sfbpf__init_buffer>
   11350:	bl	10ef4 <sfbpf__load_buffer_state>
   11354:	pop	{r4, r5, r6, pc}
   11358:	bl	10f90 <sfbpf_ensure_buffer_stack>
   1135c:	ldr	r3, [pc, #52]	; 11398 <sfbpf_restart+0x94>
   11360:	add	r3, pc, r3
   11364:	ldr	r4, [r3, #16]
   11368:	ldr	r6, [r3, #20]
   1136c:	mov	r1, #16384	; 0x4000
   11370:	ldr	r0, [r3, #28]
   11374:	bl	11294 <sfbpf__create_buffer>
   11378:	str	r0, [r4, r6, lsl #2]
   1137c:	cmp	r4, #0
   11380:	moveq	r0, #0
   11384:	bne	11338 <sfbpf_restart+0x34>
   11388:	b	11348 <sfbpf_restart+0x44>
   1138c:	.word	0x0002082c
   11390:	.word	0x00020818
   11394:	.word	0x00020800
   11398:	.word	0x000207dc

0001139c <sfbpf_lex>:
   1139c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a0:	sub	sp, sp, #124	; 0x7c
   113a4:	ldr	r8, [pc, #3832]	; 122a4 <sfbpf_lex+0xf08>
   113a8:	add	r8, pc, r8
   113ac:	ldr	r3, [pc, #3828]	; 122a8 <sfbpf_lex+0xf0c>
   113b0:	add	r3, pc, r3
   113b4:	ldr	r3, [r3, #40]	; 0x28
   113b8:	cmp	r3, #0
   113bc:	bne	1143c <sfbpf_lex+0xa0>
   113c0:	ldr	r3, [pc, #3812]	; 122ac <sfbpf_lex+0xf10>
   113c4:	add	r3, pc, r3
   113c8:	mov	r2, #1
   113cc:	str	r2, [r3, #40]	; 0x28
   113d0:	ldr	r3, [r3]
   113d4:	cmp	r3, #0
   113d8:	ldreq	r3, [pc, #3792]	; 122b0 <sfbpf_lex+0xf14>
   113dc:	addeq	r3, pc, r3
   113e0:	streq	r2, [r3]
   113e4:	ldr	r3, [pc, #3784]	; 122b4 <sfbpf_lex+0xf18>
   113e8:	add	r3, pc, r3
   113ec:	ldr	r3, [r3, #28]
   113f0:	cmp	r3, #0
   113f4:	beq	114ec <sfbpf_lex+0x150>
   113f8:	ldr	r3, [pc, #3768]	; 122b8 <sfbpf_lex+0xf1c>
   113fc:	add	r3, pc, r3
   11400:	ldr	r3, [r3, #44]	; 0x2c
   11404:	cmp	r3, #0
   11408:	beq	11508 <sfbpf_lex+0x16c>
   1140c:	ldr	r3, [pc, #3752]	; 122bc <sfbpf_lex+0xf20>
   11410:	add	r3, pc, r3
   11414:	ldr	r3, [r3, #16]
   11418:	cmp	r3, #0
   1141c:	beq	11524 <sfbpf_lex+0x188>
   11420:	ldr	r2, [pc, #3736]	; 122c0 <sfbpf_lex+0xf24>
   11424:	add	r2, pc, r2
   11428:	ldr	r2, [r2, #20]
   1142c:	ldr	r3, [r3, r2, lsl #2]
   11430:	cmp	r3, #0
   11434:	beq	11524 <sfbpf_lex+0x188>
   11438:	bl	10ef4 <sfbpf__load_buffer_state>
   1143c:	ldr	r3, [pc, #3712]	; 122c4 <sfbpf_lex+0xf28>
   11440:	add	r3, pc, r3
   11444:	str	r3, [sp]
   11448:	add	r3, r3, #2560	; 0xa00
   1144c:	add	r9, r3, #12
   11450:	ldr	r3, [pc, #3696]	; 122c8 <sfbpf_lex+0xf2c>
   11454:	add	r3, pc, r3
   11458:	add	r3, r3, #3120	; 0xc30
   1145c:	add	sl, r3, #4
   11460:	ldr	r3, [pc, #3684]	; 122cc <sfbpf_lex+0xf30>
   11464:	add	r3, pc, r3
   11468:	add	r3, r3, #1104	; 0x450
   1146c:	add	r3, r3, #12
   11470:	str	r3, [sp, #4]
   11474:	str	r8, [sp, #28]
   11478:	mov	r8, r9
   1147c:	ldr	r3, [pc, #3660]	; 122d0 <sfbpf_lex+0xf34>
   11480:	add	r3, pc, r3
   11484:	ldr	r4, [r3, #4]
   11488:	ldrb	r2, [r3, #32]
   1148c:	strb	r2, [r4]
   11490:	ldr	r0, [r3]
   11494:	str	r4, [sp, #24]
   11498:	mov	fp, r8
   1149c:	mov	r9, sl
   114a0:	ldr	r3, [pc, #3628]	; 122d4 <sfbpf_lex+0xf38>
   114a4:	add	r3, pc, r3
   114a8:	ldr	r2, [r3, #8]
   114ac:	str	r2, [sp, #20]
   114b0:	ldr	r3, [r3, #12]
   114b4:	str	r3, [sp, #12]
   114b8:	mov	r3, #0
   114bc:	str	r3, [sp, #16]
   114c0:	str	r3, [sp, #8]
   114c4:	ldr	r8, [pc, #3596]	; 122d8 <sfbpf_lex+0xf3c>
   114c8:	add	r8, pc, r8
   114cc:	add	sl, r8, #256	; 0x100
   114d0:	ldr	r5, [pc, #4044]	; 124a4 <sfbpf_lex+0x1108>
   114d4:	ldr	r6, [pc, #3584]	; 122dc <sfbpf_lex+0xf40>
   114d8:	add	r6, pc, r6
   114dc:	ldr	r7, [pc, #3580]	; 122e0 <sfbpf_lex+0xf44>
   114e0:	add	r7, pc, r7
   114e4:	sub	r7, r7, #1216	; 0x4c0
   114e8:	b	115ac <sfbpf_lex+0x210>
   114ec:	ldr	r3, [pc, #3568]	; 122e4 <sfbpf_lex+0xf48>
   114f0:	ldr	r3, [r8, r3]
   114f4:	ldr	r2, [r3]
   114f8:	ldr	r3, [pc, #3560]	; 122e8 <sfbpf_lex+0xf4c>
   114fc:	add	r3, pc, r3
   11500:	str	r2, [r3, #28]
   11504:	b	113f8 <sfbpf_lex+0x5c>
   11508:	ldr	r3, [pc, #3548]	; 122ec <sfbpf_lex+0xf50>
   1150c:	ldr	r3, [r8, r3]
   11510:	ldr	r2, [r3]
   11514:	ldr	r3, [pc, #3540]	; 122f0 <sfbpf_lex+0xf54>
   11518:	add	r3, pc, r3
   1151c:	str	r2, [r3, #44]	; 0x2c
   11520:	b	1140c <sfbpf_lex+0x70>
   11524:	bl	10f90 <sfbpf_ensure_buffer_stack>
   11528:	ldr	r3, [pc, #3524]	; 122f4 <sfbpf_lex+0xf58>
   1152c:	add	r3, pc, r3
   11530:	ldr	r5, [r3, #20]
   11534:	ldr	r4, [r3, #16]
   11538:	mov	r1, #16384	; 0x4000
   1153c:	ldr	r0, [r3, #28]
   11540:	bl	11294 <sfbpf__create_buffer>
   11544:	str	r0, [r4, r5, lsl #2]
   11548:	b	11438 <sfbpf_lex+0x9c>
   1154c:	ldr	r8, [sp, #8]
   11550:	ldr	sl, [sp, #12]
   11554:	b	1147c <sfbpf_lex+0xe0>
   11558:	lsl	r0, r0, #1
   1155c:	ldrsh	r0, [r9, r0]
   11560:	cmp	r0, r5
   11564:	addgt	r1, r6, r1
   11568:	ldrbgt	r2, [r1, #-1272]	; 0xfffffb08
   1156c:	mov	r1, r2
   11570:	lsl	r3, r0, #1
   11574:	ldrsh	r3, [lr, r3]
   11578:	add	r3, r3, r2
   1157c:	lsl	ip, r3, #1
   11580:	ldrsh	ip, [fp, ip]
   11584:	cmp	r0, ip
   11588:	bne	11558 <sfbpf_lex+0x1bc>
   1158c:	lsl	r3, r3, #1
   11590:	ldr	r2, [sp, #4]
   11594:	ldrsh	r0, [r2, r3]
   11598:	lsl	r3, r0, #1
   1159c:	ldrsh	r3, [r7, r3]
   115a0:	ldr	r1, [pc, #3408]	; 122f8 <sfbpf_lex+0xf5c>
   115a4:	cmp	r3, r1
   115a8:	beq	115e8 <sfbpf_lex+0x24c>
   115ac:	mov	r3, r4
   115b0:	add	r4, r4, #1
   115b4:	ldrb	r2, [r3]
   115b8:	ldrb	r2, [r8, r2]
   115bc:	lsl	r1, r0, #1
   115c0:	ldrsh	r1, [sl, r1]
   115c4:	cmp	r1, #0
   115c8:	strne	r0, [sp, #20]
   115cc:	strne	r3, [sp, #12]
   115d0:	movne	r3, #1
   115d4:	strne	r3, [sp, #16]
   115d8:	strne	r3, [sp, #8]
   115dc:	ldr	r3, [sp]
   115e0:	sub	lr, r3, #1216	; 0x4c0
   115e4:	b	1156c <sfbpf_lex+0x1d0>
   115e8:	mov	r1, r4
   115ec:	ldr	r3, [sp, #8]
   115f0:	cmp	r3, #0
   115f4:	bne	11968 <sfbpf_lex+0x5cc>
   115f8:	ldr	r3, [sp, #16]
   115fc:	cmp	r3, #0
   11600:	ldrne	r3, [pc, #3316]	; 122fc <sfbpf_lex+0xf60>
   11604:	addne	r3, pc, r3
   11608:	ldrne	r2, [sp, #20]
   1160c:	strne	r2, [r3, #8]
   11610:	ldr	r7, [pc, #3304]	; 12300 <sfbpf_lex+0xf64>
   11614:	add	r7, pc, r7
   11618:	add	r3, r7, #2560	; 0xa00
   1161c:	add	r3, r3, #12
   11620:	str	r3, [sp, #48]	; 0x30
   11624:	ldr	r3, [pc, #3288]	; 12304 <sfbpf_lex+0xf68>
   11628:	add	r3, pc, r3
   1162c:	add	r3, r3, #1104	; 0x450
   11630:	add	r3, r3, #12
   11634:	str	r3, [sp, #52]	; 0x34
   11638:	ldr	sl, [sp, #28]
   1163c:	str	fp, [sp, #8]
   11640:	mov	fp, r1
   11644:	str	r7, [sp, #56]	; 0x38
   11648:	str	r9, [sp, #12]
   1164c:	lsl	r0, r0, #1
   11650:	ldr	r3, [pc, #3248]	; 12308 <sfbpf_lex+0xf6c>
   11654:	add	r3, pc, r3
   11658:	add	r3, r3, #256	; 0x100
   1165c:	ldrsh	r3, [r3, r0]
   11660:	cmp	r3, #0
   11664:	bne	1168c <sfbpf_lex+0x2f0>
   11668:	ldr	r3, [pc, #3228]	; 1230c <sfbpf_lex+0xf70>
   1166c:	add	r3, pc, r3
   11670:	ldr	fp, [r3, #12]
   11674:	ldr	r3, [r3, #8]
   11678:	lsl	r3, r3, #1
   1167c:	ldr	r2, [pc, #3212]	; 12310 <sfbpf_lex+0xf74>
   11680:	add	r2, pc, r2
   11684:	add	r2, r2, #256	; 0x100
   11688:	ldrsh	r3, [r2, r3]
   1168c:	ldr	r2, [pc, #3700]	; 12508 <sfbpf_lex+0x116c>
   11690:	ldr	r2, [sl, r2]
   11694:	ldr	r1, [sp, #24]
   11698:	str	r1, [r2]
   1169c:	str	fp, [sp, #16]
   116a0:	ldr	r2, [pc, #3180]	; 12314 <sfbpf_lex+0xf78>
   116a4:	ldr	r2, [sl, r2]
   116a8:	sub	r1, fp, r1
   116ac:	str	r1, [r2]
   116b0:	ldr	r2, [pc, #3168]	; 12318 <sfbpf_lex+0xf7c>
   116b4:	add	r2, pc, r2
   116b8:	ldrb	r1, [fp]
   116bc:	strb	r1, [r2, #32]
   116c0:	mov	r1, #0
   116c4:	strb	r1, [fp]
   116c8:	str	fp, [r2, #4]
   116cc:	ldr	r2, [pc, #3144]	; 1231c <sfbpf_lex+0xf80>
   116d0:	add	r2, pc, r2
   116d4:	str	r2, [sp, #20]
   116d8:	ldr	r2, [pc, #3136]	; 12320 <sfbpf_lex+0xf84>
   116dc:	add	r2, pc, r2
   116e0:	str	r2, [sp, #32]
   116e4:	ldr	r2, [pc, #3128]	; 12324 <sfbpf_lex+0xf88>
   116e8:	add	r2, pc, r2
   116ec:	str	r2, [sp, #36]	; 0x24
   116f0:	ldr	r2, [pc, #3120]	; 12328 <sfbpf_lex+0xf8c>
   116f4:	add	r2, pc, r2
   116f8:	str	r2, [sp, #40]	; 0x28
   116fc:	ldr	r2, [pc, #3112]	; 1232c <sfbpf_lex+0xf90>
   11700:	add	r2, pc, r2
   11704:	str	r2, [sp, #44]	; 0x2c
   11708:	ldr	r9, [pc, #3104]	; 12330 <sfbpf_lex+0xf94>
   1170c:	add	r9, pc, r9
   11710:	cmp	r3, #146	; 0x92
   11714:	addls	pc, pc, r3, lsl #2
   11718:	b	12a74 <sfbpf_lex+0x16d8>
   1171c:	b	11988 <sfbpf_lex+0x5ec>
   11720:	b	12a80 <sfbpf_lex+0x16e4>
   11724:	b	1197c <sfbpf_lex+0x5e0>
   11728:	b	12a88 <sfbpf_lex+0x16ec>
   1172c:	b	12a88 <sfbpf_lex+0x16ec>
   11730:	b	119a4 <sfbpf_lex+0x608>
   11734:	b	119ac <sfbpf_lex+0x610>
   11738:	b	119b4 <sfbpf_lex+0x618>
   1173c:	b	119bc <sfbpf_lex+0x620>
   11740:	b	119c4 <sfbpf_lex+0x628>
   11744:	b	119cc <sfbpf_lex+0x630>
   11748:	b	119d4 <sfbpf_lex+0x638>
   1174c:	b	119dc <sfbpf_lex+0x640>
   11750:	b	119e4 <sfbpf_lex+0x648>
   11754:	b	119ec <sfbpf_lex+0x650>
   11758:	b	119f4 <sfbpf_lex+0x658>
   1175c:	b	119fc <sfbpf_lex+0x660>
   11760:	b	11a04 <sfbpf_lex+0x668>
   11764:	b	11a0c <sfbpf_lex+0x670>
   11768:	b	11a14 <sfbpf_lex+0x678>
   1176c:	b	11a1c <sfbpf_lex+0x680>
   11770:	b	11a24 <sfbpf_lex+0x688>
   11774:	b	11a2c <sfbpf_lex+0x690>
   11778:	b	11a34 <sfbpf_lex+0x698>
   1177c:	b	11a3c <sfbpf_lex+0x6a0>
   11780:	b	11a44 <sfbpf_lex+0x6a8>
   11784:	b	11a4c <sfbpf_lex+0x6b0>
   11788:	b	11a54 <sfbpf_lex+0x6b8>
   1178c:	b	11a5c <sfbpf_lex+0x6c0>
   11790:	b	11a64 <sfbpf_lex+0x6c8>
   11794:	b	11a6c <sfbpf_lex+0x6d0>
   11798:	b	11a74 <sfbpf_lex+0x6d8>
   1179c:	b	11a7c <sfbpf_lex+0x6e0>
   117a0:	b	11a84 <sfbpf_lex+0x6e8>
   117a4:	b	11a8c <sfbpf_lex+0x6f0>
   117a8:	b	11a94 <sfbpf_lex+0x6f8>
   117ac:	b	11a9c <sfbpf_lex+0x700>
   117b0:	b	11aa4 <sfbpf_lex+0x708>
   117b4:	b	11aac <sfbpf_lex+0x710>
   117b8:	b	11ab4 <sfbpf_lex+0x718>
   117bc:	b	11abc <sfbpf_lex+0x720>
   117c0:	b	11ac4 <sfbpf_lex+0x728>
   117c4:	b	11acc <sfbpf_lex+0x730>
   117c8:	b	11ad4 <sfbpf_lex+0x738>
   117cc:	b	11adc <sfbpf_lex+0x740>
   117d0:	b	11ae4 <sfbpf_lex+0x748>
   117d4:	b	11aec <sfbpf_lex+0x750>
   117d8:	b	11af4 <sfbpf_lex+0x758>
   117dc:	b	11afc <sfbpf_lex+0x760>
   117e0:	b	11b04 <sfbpf_lex+0x768>
   117e4:	b	11b0c <sfbpf_lex+0x770>
   117e8:	b	11b14 <sfbpf_lex+0x778>
   117ec:	b	11b1c <sfbpf_lex+0x780>
   117f0:	b	11b24 <sfbpf_lex+0x788>
   117f4:	b	11b2c <sfbpf_lex+0x790>
   117f8:	b	11b34 <sfbpf_lex+0x798>
   117fc:	b	11b3c <sfbpf_lex+0x7a0>
   11800:	b	11b44 <sfbpf_lex+0x7a8>
   11804:	b	11b4c <sfbpf_lex+0x7b0>
   11808:	b	11b54 <sfbpf_lex+0x7b8>
   1180c:	b	11b5c <sfbpf_lex+0x7c0>
   11810:	b	11b64 <sfbpf_lex+0x7c8>
   11814:	b	11b6c <sfbpf_lex+0x7d0>
   11818:	b	11b74 <sfbpf_lex+0x7d8>
   1181c:	b	11b7c <sfbpf_lex+0x7e0>
   11820:	b	11b84 <sfbpf_lex+0x7e8>
   11824:	b	11b8c <sfbpf_lex+0x7f0>
   11828:	b	11b94 <sfbpf_lex+0x7f8>
   1182c:	b	11b9c <sfbpf_lex+0x800>
   11830:	b	11ba4 <sfbpf_lex+0x808>
   11834:	b	11bac <sfbpf_lex+0x810>
   11838:	b	11bb4 <sfbpf_lex+0x818>
   1183c:	b	11bbc <sfbpf_lex+0x820>
   11840:	b	11bc4 <sfbpf_lex+0x828>
   11844:	b	11bcc <sfbpf_lex+0x830>
   11848:	b	11bd4 <sfbpf_lex+0x838>
   1184c:	b	11bdc <sfbpf_lex+0x840>
   11850:	b	11be4 <sfbpf_lex+0x848>
   11854:	b	11bec <sfbpf_lex+0x850>
   11858:	b	11bf4 <sfbpf_lex+0x858>
   1185c:	b	11bfc <sfbpf_lex+0x860>
   11860:	b	11c04 <sfbpf_lex+0x868>
   11864:	b	11c0c <sfbpf_lex+0x870>
   11868:	b	11c14 <sfbpf_lex+0x878>
   1186c:	b	11c1c <sfbpf_lex+0x880>
   11870:	b	11c24 <sfbpf_lex+0x888>
   11874:	b	11c2c <sfbpf_lex+0x890>
   11878:	b	11c34 <sfbpf_lex+0x898>
   1187c:	b	11c3c <sfbpf_lex+0x8a0>
   11880:	b	11c44 <sfbpf_lex+0x8a8>
   11884:	b	11c4c <sfbpf_lex+0x8b0>
   11888:	b	11c54 <sfbpf_lex+0x8b8>
   1188c:	b	11c5c <sfbpf_lex+0x8c0>
   11890:	b	11c64 <sfbpf_lex+0x8c8>
   11894:	b	11c6c <sfbpf_lex+0x8d0>
   11898:	b	11c74 <sfbpf_lex+0x8d8>
   1189c:	b	11c7c <sfbpf_lex+0x8e0>
   118a0:	b	11c84 <sfbpf_lex+0x8e8>
   118a4:	b	11c8c <sfbpf_lex+0x8f0>
   118a8:	b	11c94 <sfbpf_lex+0x8f8>
   118ac:	b	11c9c <sfbpf_lex+0x900>
   118b0:	b	11ca4 <sfbpf_lex+0x908>
   118b4:	b	1154c <sfbpf_lex+0x1b0>
   118b8:	b	11cac <sfbpf_lex+0x910>
   118bc:	b	11cc0 <sfbpf_lex+0x924>
   118c0:	b	11cc8 <sfbpf_lex+0x92c>
   118c4:	b	11cd0 <sfbpf_lex+0x934>
   118c8:	b	11cd8 <sfbpf_lex+0x93c>
   118cc:	b	11ce0 <sfbpf_lex+0x944>
   118d0:	b	11ce8 <sfbpf_lex+0x94c>
   118d4:	b	11cf0 <sfbpf_lex+0x954>
   118d8:	b	11d18 <sfbpf_lex+0x97c>
   118dc:	b	11d3c <sfbpf_lex+0x9a0>
   118e0:	b	11dec <sfbpf_lex+0xa50>
   118e4:	b	11e10 <sfbpf_lex+0xa74>
   118e8:	b	11e9c <sfbpf_lex+0xb00>
   118ec:	b	11eb4 <sfbpf_lex+0xb18>
   118f0:	b	11ecc <sfbpf_lex+0xb30>
   118f4:	b	11ee4 <sfbpf_lex+0xb48>
   118f8:	b	11efc <sfbpf_lex+0xb60>
   118fc:	b	11f14 <sfbpf_lex+0xb78>
   11900:	b	11f2c <sfbpf_lex+0xb90>
   11904:	b	11f44 <sfbpf_lex+0xba8>
   11908:	b	11f5c <sfbpf_lex+0xbc0>
   1190c:	b	11f74 <sfbpf_lex+0xbd8>
   11910:	b	11f8c <sfbpf_lex+0xbf0>
   11914:	b	11fa4 <sfbpf_lex+0xc08>
   11918:	b	11fbc <sfbpf_lex+0xc20>
   1191c:	b	11fd4 <sfbpf_lex+0xc38>
   11920:	b	11fec <sfbpf_lex+0xc50>
   11924:	b	12004 <sfbpf_lex+0xc68>
   11928:	b	1201c <sfbpf_lex+0xc80>
   1192c:	b	12034 <sfbpf_lex+0xc98>
   11930:	b	1204c <sfbpf_lex+0xcb0>
   11934:	b	12064 <sfbpf_lex+0xcc8>
   11938:	b	1207c <sfbpf_lex+0xce0>
   1193c:	b	12094 <sfbpf_lex+0xcf8>
   11940:	b	120ac <sfbpf_lex+0xd10>
   11944:	b	120c4 <sfbpf_lex+0xd28>
   11948:	b	120dc <sfbpf_lex+0xd40>
   1194c:	b	120f4 <sfbpf_lex+0xd58>
   11950:	b	12118 <sfbpf_lex+0xd7c>
   11954:	b	12140 <sfbpf_lex+0xda4>
   11958:	b	12158 <sfbpf_lex+0xdbc>
   1195c:	b	12174 <sfbpf_lex+0xdd8>
   11960:	b	121b8 <sfbpf_lex+0xe1c>
   11964:	b	121b0 <sfbpf_lex+0xe14>
   11968:	ldr	r3, [pc, #2500]	; 12334 <sfbpf_lex+0xf98>
   1196c:	add	r3, pc, r3
   11970:	ldr	r2, [sp, #12]
   11974:	str	r2, [r3, #12]
   11978:	b	115f8 <sfbpf_lex+0x25c>
   1197c:	ldr	r0, [pc, #2484]	; 12338 <sfbpf_lex+0xf9c>
   11980:	add	sp, sp, #124	; 0x7c
   11984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11988:	ldr	r3, [pc, #2476]	; 1233c <sfbpf_lex+0xfa0>
   1198c:	add	r3, pc, r3
   11990:	ldrb	r2, [r3, #32]
   11994:	strb	r2, [fp]
   11998:	ldr	fp, [r3, #12]
   1199c:	ldr	r0, [r3, #8]
   119a0:	b	1164c <sfbpf_lex+0x2b0>
   119a4:	ldr	r0, [pc, #2452]	; 12340 <sfbpf_lex+0xfa4>
   119a8:	b	11980 <sfbpf_lex+0x5e4>
   119ac:	mov	r0, #272	; 0x110
   119b0:	b	11980 <sfbpf_lex+0x5e4>
   119b4:	ldr	r0, [pc, #2440]	; 12344 <sfbpf_lex+0xfa8>
   119b8:	b	11980 <sfbpf_lex+0x5e4>
   119bc:	ldr	r0, [pc, #2436]	; 12348 <sfbpf_lex+0xfac>
   119c0:	b	11980 <sfbpf_lex+0x5e4>
   119c4:	ldr	r0, [pc, #2432]	; 1234c <sfbpf_lex+0xfb0>
   119c8:	b	11980 <sfbpf_lex+0x5e4>
   119cc:	mov	r0, #276	; 0x114
   119d0:	b	11980 <sfbpf_lex+0x5e4>
   119d4:	ldr	r0, [pc, #2420]	; 12350 <sfbpf_lex+0xfb4>
   119d8:	b	11980 <sfbpf_lex+0x5e4>
   119dc:	ldr	r0, [pc, #2416]	; 12354 <sfbpf_lex+0xfb8>
   119e0:	b	11980 <sfbpf_lex+0x5e4>
   119e4:	ldr	r0, [pc, #2412]	; 12358 <sfbpf_lex+0xfbc>
   119e8:	b	11980 <sfbpf_lex+0x5e4>
   119ec:	mov	r0, #280	; 0x118
   119f0:	b	11980 <sfbpf_lex+0x5e4>
   119f4:	ldr	r0, [pc, #2400]	; 1235c <sfbpf_lex+0xfc0>
   119f8:	b	11980 <sfbpf_lex+0x5e4>
   119fc:	ldr	r0, [pc, #2396]	; 12360 <sfbpf_lex+0xfc4>
   11a00:	b	11980 <sfbpf_lex+0x5e4>
   11a04:	ldr	r0, [pc, #2392]	; 12364 <sfbpf_lex+0xfc8>
   11a08:	b	11980 <sfbpf_lex+0x5e4>
   11a0c:	mov	r0, #320	; 0x140
   11a10:	b	11980 <sfbpf_lex+0x5e4>
   11a14:	ldr	r0, [pc, #2380]	; 12368 <sfbpf_lex+0xfcc>
   11a18:	b	11980 <sfbpf_lex+0x5e4>
   11a1c:	ldr	r0, [pc, #2376]	; 1236c <sfbpf_lex+0xfd0>
   11a20:	b	11980 <sfbpf_lex+0x5e4>
   11a24:	ldr	r0, [pc, #2372]	; 12370 <sfbpf_lex+0xfd4>
   11a28:	b	11980 <sfbpf_lex+0x5e4>
   11a2c:	ldr	r0, [pc, #2368]	; 12374 <sfbpf_lex+0xfd8>
   11a30:	b	11980 <sfbpf_lex+0x5e4>
   11a34:	mov	r0, #284	; 0x11c
   11a38:	b	11980 <sfbpf_lex+0x5e4>
   11a3c:	ldr	r0, [pc, #2356]	; 12378 <sfbpf_lex+0xfdc>
   11a40:	b	11980 <sfbpf_lex+0x5e4>
   11a44:	ldr	r0, [pc, #2352]	; 1237c <sfbpf_lex+0xfe0>
   11a48:	b	11980 <sfbpf_lex+0x5e4>
   11a4c:	ldr	r0, [pc, #2348]	; 12380 <sfbpf_lex+0xfe4>
   11a50:	b	11980 <sfbpf_lex+0x5e4>
   11a54:	mov	r0, #288	; 0x120
   11a58:	b	11980 <sfbpf_lex+0x5e4>
   11a5c:	ldr	r0, [pc, #2336]	; 12384 <sfbpf_lex+0xfe8>
   11a60:	b	11980 <sfbpf_lex+0x5e4>
   11a64:	mov	r0, #328	; 0x148
   11a68:	b	11980 <sfbpf_lex+0x5e4>
   11a6c:	mov	r0, #328	; 0x148
   11a70:	b	11980 <sfbpf_lex+0x5e4>
   11a74:	ldr	r0, [pc, #2316]	; 12388 <sfbpf_lex+0xfec>
   11a78:	b	11980 <sfbpf_lex+0x5e4>
   11a7c:	ldr	r0, [pc, #2308]	; 12388 <sfbpf_lex+0xfec>
   11a80:	b	11980 <sfbpf_lex+0x5e4>
   11a84:	ldr	r0, [pc, #2304]	; 1238c <sfbpf_lex+0xff0>
   11a88:	b	11980 <sfbpf_lex+0x5e4>
   11a8c:	mov	r0, #332	; 0x14c
   11a90:	b	11980 <sfbpf_lex+0x5e4>
   11a94:	ldr	r0, [pc, #2292]	; 12390 <sfbpf_lex+0xff4>
   11a98:	b	11980 <sfbpf_lex+0x5e4>
   11a9c:	ldr	r0, [pc, #2288]	; 12394 <sfbpf_lex+0xff8>
   11aa0:	b	11980 <sfbpf_lex+0x5e4>
   11aa4:	ldr	r0, [pc, #2284]	; 12398 <sfbpf_lex+0xffc>
   11aa8:	b	11980 <sfbpf_lex+0x5e4>
   11aac:	mov	r0, #336	; 0x150
   11ab0:	b	11980 <sfbpf_lex+0x5e4>
   11ab4:	ldr	r0, [pc, #2272]	; 1239c <sfbpf_lex+0x1000>
   11ab8:	b	11980 <sfbpf_lex+0x5e4>
   11abc:	ldr	r0, [pc, #2268]	; 123a0 <sfbpf_lex+0x1004>
   11ac0:	b	11980 <sfbpf_lex+0x5e4>
   11ac4:	ldr	r0, [pc, #2264]	; 123a4 <sfbpf_lex+0x1008>
   11ac8:	b	11980 <sfbpf_lex+0x5e4>
   11acc:	ldr	r0, [pc, #2260]	; 123a8 <sfbpf_lex+0x100c>
   11ad0:	b	11980 <sfbpf_lex+0x5e4>
   11ad4:	mov	r0, #340	; 0x154
   11ad8:	b	11980 <sfbpf_lex+0x5e4>
   11adc:	mov	r0, #260	; 0x104
   11ae0:	b	11980 <sfbpf_lex+0x5e4>
   11ae4:	ldr	r0, [pc, #2240]	; 123ac <sfbpf_lex+0x1010>
   11ae8:	b	11980 <sfbpf_lex+0x5e4>
   11aec:	ldr	r0, [pc, #2236]	; 123b0 <sfbpf_lex+0x1014>
   11af0:	b	11980 <sfbpf_lex+0x5e4>
   11af4:	mov	r0, #264	; 0x108
   11af8:	b	11980 <sfbpf_lex+0x5e4>
   11afc:	ldr	r0, [pc, #2224]	; 123b4 <sfbpf_lex+0x1018>
   11b00:	b	11980 <sfbpf_lex+0x5e4>
   11b04:	mov	r0, #268	; 0x10c
   11b08:	b	11980 <sfbpf_lex+0x5e4>
   11b0c:	ldr	r0, [pc, #2212]	; 123b8 <sfbpf_lex+0x101c>
   11b10:	b	11980 <sfbpf_lex+0x5e4>
   11b14:	ldr	r0, [pc, #2208]	; 123bc <sfbpf_lex+0x1020>
   11b18:	b	11980 <sfbpf_lex+0x5e4>
   11b1c:	mov	r0, #300	; 0x12c
   11b20:	b	11980 <sfbpf_lex+0x5e4>
   11b24:	ldr	r0, [pc, #2196]	; 123c0 <sfbpf_lex+0x1024>
   11b28:	b	11980 <sfbpf_lex+0x5e4>
   11b2c:	ldr	r0, [pc, #2192]	; 123c4 <sfbpf_lex+0x1028>
   11b30:	b	11980 <sfbpf_lex+0x5e4>
   11b34:	ldr	r0, [pc, #2188]	; 123c8 <sfbpf_lex+0x102c>
   11b38:	b	11980 <sfbpf_lex+0x5e4>
   11b3c:	mov	r0, #304	; 0x130
   11b40:	b	11980 <sfbpf_lex+0x5e4>
   11b44:	ldr	r0, [pc, #2176]	; 123cc <sfbpf_lex+0x1030>
   11b48:	b	11980 <sfbpf_lex+0x5e4>
   11b4c:	ldr	r0, [pc, #2172]	; 123d0 <sfbpf_lex+0x1034>
   11b50:	b	11980 <sfbpf_lex+0x5e4>
   11b54:	ldr	r0, [pc, #2168]	; 123d4 <sfbpf_lex+0x1038>
   11b58:	b	11980 <sfbpf_lex+0x5e4>
   11b5c:	ldr	r0, [pc, #2164]	; 123d8 <sfbpf_lex+0x103c>
   11b60:	b	11980 <sfbpf_lex+0x5e4>
   11b64:	ldr	r0, [pc, #2160]	; 123dc <sfbpf_lex+0x1040>
   11b68:	b	11980 <sfbpf_lex+0x5e4>
   11b6c:	ldr	r0, [pc, #2156]	; 123e0 <sfbpf_lex+0x1044>
   11b70:	b	11980 <sfbpf_lex+0x5e4>
   11b74:	ldr	r0, [pc, #2152]	; 123e4 <sfbpf_lex+0x1048>
   11b78:	b	11980 <sfbpf_lex+0x5e4>
   11b7c:	mov	r0, #364	; 0x16c
   11b80:	b	11980 <sfbpf_lex+0x5e4>
   11b84:	ldr	r0, [pc, #2140]	; 123e8 <sfbpf_lex+0x104c>
   11b88:	b	11980 <sfbpf_lex+0x5e4>
   11b8c:	mov	r0, #33	; 0x21
   11b90:	b	11980 <sfbpf_lex+0x5e4>
   11b94:	ldr	r0, [pc, #2128]	; 123ec <sfbpf_lex+0x1050>
   11b98:	b	11980 <sfbpf_lex+0x5e4>
   11b9c:	mov	r0, #292	; 0x124
   11ba0:	b	11980 <sfbpf_lex+0x5e4>
   11ba4:	ldr	r0, [pc, #2116]	; 123f0 <sfbpf_lex+0x1054>
   11ba8:	b	11980 <sfbpf_lex+0x5e4>
   11bac:	ldr	r0, [pc, #2112]	; 123f4 <sfbpf_lex+0x1058>
   11bb0:	b	11980 <sfbpf_lex+0x5e4>
   11bb4:	mov	r0, #324	; 0x144
   11bb8:	b	11980 <sfbpf_lex+0x5e4>
   11bbc:	ldr	r0, [pc, #2100]	; 123f8 <sfbpf_lex+0x105c>
   11bc0:	b	11980 <sfbpf_lex+0x5e4>
   11bc4:	ldr	r0, [pc, #2096]	; 123fc <sfbpf_lex+0x1060>
   11bc8:	b	11980 <sfbpf_lex+0x5e4>
   11bcc:	ldr	r0, [pc, #2092]	; 12400 <sfbpf_lex+0x1064>
   11bd0:	b	11980 <sfbpf_lex+0x5e4>
   11bd4:	ldr	r0, [pc, #2088]	; 12404 <sfbpf_lex+0x1068>
   11bd8:	b	11980 <sfbpf_lex+0x5e4>
   11bdc:	ldr	r0, [pc, #2084]	; 12408 <sfbpf_lex+0x106c>
   11be0:	b	11980 <sfbpf_lex+0x5e4>
   11be4:	mov	r0, #344	; 0x158
   11be8:	b	11980 <sfbpf_lex+0x5e4>
   11bec:	ldr	r0, [pc, #2072]	; 1240c <sfbpf_lex+0x1070>
   11bf0:	b	11980 <sfbpf_lex+0x5e4>
   11bf4:	ldr	r0, [pc, #2068]	; 12410 <sfbpf_lex+0x1074>
   11bf8:	b	11980 <sfbpf_lex+0x5e4>
   11bfc:	ldr	r0, [pc, #2064]	; 12414 <sfbpf_lex+0x1078>
   11c00:	b	11980 <sfbpf_lex+0x5e4>
   11c04:	mov	r0, #348	; 0x15c
   11c08:	b	11980 <sfbpf_lex+0x5e4>
   11c0c:	ldr	r0, [pc, #2052]	; 12418 <sfbpf_lex+0x107c>
   11c10:	b	11980 <sfbpf_lex+0x5e4>
   11c14:	ldr	r0, [pc, #2048]	; 1241c <sfbpf_lex+0x1080>
   11c18:	b	11980 <sfbpf_lex+0x5e4>
   11c1c:	ldr	r0, [pc, #2044]	; 12420 <sfbpf_lex+0x1084>
   11c20:	b	11980 <sfbpf_lex+0x5e4>
   11c24:	ldr	r0, [pc, #2040]	; 12424 <sfbpf_lex+0x1088>
   11c28:	b	11980 <sfbpf_lex+0x5e4>
   11c2c:	ldr	r0, [pc, #2036]	; 12428 <sfbpf_lex+0x108c>
   11c30:	b	11980 <sfbpf_lex+0x5e4>
   11c34:	mov	r0, #352	; 0x160
   11c38:	b	11980 <sfbpf_lex+0x5e4>
   11c3c:	ldr	r0, [pc, #2024]	; 1242c <sfbpf_lex+0x1090>
   11c40:	b	11980 <sfbpf_lex+0x5e4>
   11c44:	ldr	r0, [pc, #2020]	; 12430 <sfbpf_lex+0x1094>
   11c48:	b	11980 <sfbpf_lex+0x5e4>
   11c4c:	mov	r0, #296	; 0x128
   11c50:	b	11980 <sfbpf_lex+0x5e4>
   11c54:	ldr	r0, [pc, #2008]	; 12434 <sfbpf_lex+0x1098>
   11c58:	b	11980 <sfbpf_lex+0x5e4>
   11c5c:	ldr	r0, [pc, #2004]	; 12438 <sfbpf_lex+0x109c>
   11c60:	b	11980 <sfbpf_lex+0x5e4>
   11c64:	ldr	r0, [pc, #2000]	; 1243c <sfbpf_lex+0x10a0>
   11c68:	b	11980 <sfbpf_lex+0x5e4>
   11c6c:	mov	r0, #356	; 0x164
   11c70:	b	11980 <sfbpf_lex+0x5e4>
   11c74:	ldr	r0, [pc, #1988]	; 12440 <sfbpf_lex+0x10a4>
   11c78:	b	11980 <sfbpf_lex+0x5e4>
   11c7c:	ldr	r0, [pc, #1980]	; 12440 <sfbpf_lex+0x10a4>
   11c80:	b	11980 <sfbpf_lex+0x5e4>
   11c84:	ldr	r0, [pc, #1976]	; 12444 <sfbpf_lex+0x10a8>
   11c88:	b	11980 <sfbpf_lex+0x5e4>
   11c8c:	ldr	r0, [pc, #1972]	; 12448 <sfbpf_lex+0x10ac>
   11c90:	b	11980 <sfbpf_lex+0x5e4>
   11c94:	mov	r0, #360	; 0x168
   11c98:	b	11980 <sfbpf_lex+0x5e4>
   11c9c:	ldr	r0, [pc, #1960]	; 1244c <sfbpf_lex+0x10b0>
   11ca0:	b	11980 <sfbpf_lex+0x5e4>
   11ca4:	ldr	r0, [pc, #1956]	; 12450 <sfbpf_lex+0x10b4>
   11ca8:	b	11980 <sfbpf_lex+0x5e4>
   11cac:	ldr	r3, [pc, #2132]	; 12508 <sfbpf_lex+0x116c>
   11cb0:	ldr	r3, [sl, r3]
   11cb4:	ldr	r3, [r3]
   11cb8:	ldrb	r0, [r3]
   11cbc:	b	11980 <sfbpf_lex+0x5e4>
   11cc0:	mov	r0, #308	; 0x134
   11cc4:	b	11980 <sfbpf_lex+0x5e4>
   11cc8:	ldr	r0, [pc, #1924]	; 12454 <sfbpf_lex+0x10b8>
   11ccc:	b	11980 <sfbpf_lex+0x5e4>
   11cd0:	ldr	r0, [pc, #1920]	; 12458 <sfbpf_lex+0x10bc>
   11cd4:	b	11980 <sfbpf_lex+0x5e4>
   11cd8:	mov	r0, #61	; 0x3d
   11cdc:	b	11980 <sfbpf_lex+0x5e4>
   11ce0:	mov	r0, #316	; 0x13c
   11ce4:	b	11980 <sfbpf_lex+0x5e4>
   11ce8:	ldr	r0, [pc, #1900]	; 1245c <sfbpf_lex+0x10c0>
   11cec:	b	11980 <sfbpf_lex+0x5e4>
   11cf0:	ldr	r3, [pc, #2064]	; 12508 <sfbpf_lex+0x116c>
   11cf4:	ldr	r3, [sl, r3]
   11cf8:	ldr	r0, [r3]
   11cfc:	add	r0, r0, #1
   11d00:	bl	c030 <pcap_ether_aton>
   11d04:	ldr	r3, [pc, #1876]	; 12460 <sfbpf_lex+0x10c4>
   11d08:	ldr	r3, [sl, r3]
   11d0c:	str	r0, [r3]
   11d10:	ldr	r0, [pc, #1868]	; 12464 <sfbpf_lex+0x10c8>
   11d14:	b	11980 <sfbpf_lex+0x5e4>
   11d18:	ldr	r3, [pc, #2024]	; 12508 <sfbpf_lex+0x116c>
   11d1c:	ldr	r3, [sl, r3]
   11d20:	ldr	r0, [r3]
   11d24:	bl	c030 <pcap_ether_aton>
   11d28:	ldr	r3, [pc, #1840]	; 12460 <sfbpf_lex+0x10c4>
   11d2c:	ldr	r3, [sl, r3]
   11d30:	str	r0, [r3]
   11d34:	mov	r0, #312	; 0x138
   11d38:	b	11980 <sfbpf_lex+0x5e4>
   11d3c:	mov	r8, sl
   11d40:	ldr	r3, [pc, #1984]	; 12508 <sfbpf_lex+0x116c>
   11d44:	ldr	r3, [sl, r3]
   11d48:	ldr	r4, [r3]
   11d4c:	ldrb	r3, [r4]
   11d50:	cmp	r3, #48	; 0x30
   11d54:	movne	r5, #10
   11d58:	beq	11d78 <sfbpf_lex+0x9dc>
   11d5c:	ldrb	r6, [r4]
   11d60:	cmp	r6, #0
   11d64:	beq	11dd4 <sfbpf_lex+0xa38>
   11d68:	bl	e34 <__ctype_b_loc@plt>
   11d6c:	ldr	r0, [r0]
   11d70:	mov	r3, #0
   11d74:	b	11da8 <sfbpf_lex+0xa0c>
   11d78:	ldrb	r3, [r4, #1]
   11d7c:	and	r3, r3, #223	; 0xdf
   11d80:	cmp	r3, #88	; 0x58
   11d84:	addeq	r4, r4, #2
   11d88:	moveq	r5, #16
   11d8c:	addne	r4, r4, #1
   11d90:	movne	r5, #8
   11d94:	b	11d5c <sfbpf_lex+0x9c0>
   11d98:	add	r3, r3, r2
   11d9c:	ldrb	r6, [r4, #1]!
   11da0:	cmp	r6, #0
   11da4:	beq	11dd8 <sfbpf_lex+0xa3c>
   11da8:	mul	r3, r5, r3
   11dac:	mov	r2, r6
   11db0:	lsl	r1, r6, #1
   11db4:	ldrh	r1, [r0, r1]
   11db8:	tst	r1, #2048	; 0x800
   11dbc:	subne	r2, r6, #48	; 0x30
   11dc0:	bne	11d98 <sfbpf_lex+0x9fc>
   11dc4:	tst	r1, #512	; 0x200
   11dc8:	subne	r2, r2, #87	; 0x57
   11dcc:	subeq	r2, r2, #55	; 0x37
   11dd0:	b	11d98 <sfbpf_lex+0x9fc>
   11dd4:	mov	r3, #0
   11dd8:	ldr	r2, [pc, #1664]	; 12460 <sfbpf_lex+0x10c4>
   11ddc:	ldr	r2, [r8, r2]
   11de0:	str	r3, [r2]
   11de4:	ldr	r0, [pc, #1660]	; 12468 <sfbpf_lex+0x10cc>
   11de8:	b	11980 <sfbpf_lex+0x5e4>
   11dec:	ldr	r3, [pc, #1812]	; 12508 <sfbpf_lex+0x116c>
   11df0:	ldr	r3, [sl, r3]
   11df4:	ldr	r0, [r3]
   11df8:	bl	28b4 <sf_sdup>
   11dfc:	ldr	r3, [pc, #1628]	; 12460 <sfbpf_lex+0x10c4>
   11e00:	ldr	r3, [sl, r3]
   11e04:	str	r0, [r3]
   11e08:	ldr	r0, [pc, #1628]	; 1246c <sfbpf_lex+0x10d0>
   11e0c:	b	11980 <sfbpf_lex+0x5e4>
   11e10:	mov	r2, #32
   11e14:	mov	r1, #0
   11e18:	add	r4, sp, #88	; 0x58
   11e1c:	mov	r0, r4
   11e20:	bl	e88 <memset@plt>
   11e24:	mov	r3, #10
   11e28:	str	r3, [sp, #92]	; 0x5c
   11e2c:	mov	r3, #4
   11e30:	str	r3, [sp, #88]	; 0x58
   11e34:	ldr	r3, [pc, #1740]	; 12508 <sfbpf_lex+0x116c>
   11e38:	ldr	r0, [sl, r3]
   11e3c:	add	r3, sp, #84	; 0x54
   11e40:	mov	r2, r4
   11e44:	mov	r1, #0
   11e48:	ldr	r0, [r0]
   11e4c:	bl	ee8 <getaddrinfo@plt>
   11e50:	cmp	r0, #0
   11e54:	bne	11e84 <sfbpf_lex+0xae8>
   11e58:	ldr	r0, [sp, #84]	; 0x54
   11e5c:	bl	edc <freeaddrinfo@plt>
   11e60:	ldr	r3, [pc, #1696]	; 12508 <sfbpf_lex+0x116c>
   11e64:	ldr	r3, [sl, r3]
   11e68:	ldr	r0, [r3]
   11e6c:	bl	28b4 <sf_sdup>
   11e70:	ldr	r3, [pc, #1512]	; 12460 <sfbpf_lex+0x10c4>
   11e74:	ldr	r3, [sl, r3]
   11e78:	str	r0, [r3]
   11e7c:	ldr	r0, [pc, #1516]	; 12470 <sfbpf_lex+0x10d4>
   11e80:	b	11980 <sfbpf_lex+0x5e4>
   11e84:	ldr	r3, [pc, #1660]	; 12508 <sfbpf_lex+0x116c>
   11e88:	ldr	r3, [sl, r3]
   11e8c:	ldr	r1, [r3]
   11e90:	ldr	r0, [pc, #1500]	; 12474 <sfbpf_lex+0x10d8>
   11e94:	add	r0, pc, r0
   11e98:	bl	22b4 <sf_bpf_error>
   11e9c:	ldr	r3, [pc, #1636]	; 12508 <sfbpf_lex+0x116c>
   11ea0:	ldr	r3, [sl, r3]
   11ea4:	ldr	r1, [r3]
   11ea8:	ldr	r0, [pc, #1480]	; 12478 <sfbpf_lex+0x10dc>
   11eac:	add	r0, pc, r0
   11eb0:	bl	22b4 <sf_bpf_error>
   11eb4:	ldr	r3, [pc, #1444]	; 12460 <sfbpf_lex+0x10c4>
   11eb8:	ldr	r3, [sl, r3]
   11ebc:	mov	r2, #0
   11ec0:	str	r2, [r3]
   11ec4:	ldr	r0, [pc, #1436]	; 12468 <sfbpf_lex+0x10cc>
   11ec8:	b	11980 <sfbpf_lex+0x5e4>
   11ecc:	ldr	r3, [pc, #1420]	; 12460 <sfbpf_lex+0x10c4>
   11ed0:	ldr	r3, [sl, r3]
   11ed4:	mov	r2, #1
   11ed8:	str	r2, [r3]
   11edc:	ldr	r0, [pc, #1412]	; 12468 <sfbpf_lex+0x10cc>
   11ee0:	b	11980 <sfbpf_lex+0x5e4>
   11ee4:	ldr	r3, [pc, #1396]	; 12460 <sfbpf_lex+0x10c4>
   11ee8:	ldr	r3, [sl, r3]
   11eec:	mov	r2, #0
   11ef0:	str	r2, [r3]
   11ef4:	ldr	r0, [pc, #1388]	; 12468 <sfbpf_lex+0x10cc>
   11ef8:	b	11980 <sfbpf_lex+0x5e4>
   11efc:	ldr	r3, [pc, #1372]	; 12460 <sfbpf_lex+0x10c4>
   11f00:	ldr	r3, [sl, r3]
   11f04:	mov	r2, #3
   11f08:	str	r2, [r3]
   11f0c:	ldr	r0, [pc, #1364]	; 12468 <sfbpf_lex+0x10cc>
   11f10:	b	11980 <sfbpf_lex+0x5e4>
   11f14:	ldr	r3, [pc, #1348]	; 12460 <sfbpf_lex+0x10c4>
   11f18:	ldr	r3, [sl, r3]
   11f1c:	mov	r2, #4
   11f20:	str	r2, [r3]
   11f24:	ldr	r0, [pc, #1340]	; 12468 <sfbpf_lex+0x10cc>
   11f28:	b	11980 <sfbpf_lex+0x5e4>
   11f2c:	ldr	r3, [pc, #1324]	; 12460 <sfbpf_lex+0x10c4>
   11f30:	ldr	r3, [sl, r3]
   11f34:	mov	r2, #5
   11f38:	str	r2, [r3]
   11f3c:	ldr	r0, [pc, #1316]	; 12468 <sfbpf_lex+0x10cc>
   11f40:	b	11980 <sfbpf_lex+0x5e4>
   11f44:	ldr	r3, [pc, #1300]	; 12460 <sfbpf_lex+0x10c4>
   11f48:	ldr	r3, [sl, r3]
   11f4c:	mov	r2, #8
   11f50:	str	r2, [r3]
   11f54:	ldr	r0, [pc, #1292]	; 12468 <sfbpf_lex+0x10cc>
   11f58:	b	11980 <sfbpf_lex+0x5e4>
   11f5c:	ldr	r3, [pc, #1276]	; 12460 <sfbpf_lex+0x10c4>
   11f60:	ldr	r3, [sl, r3]
   11f64:	mov	r2, #9
   11f68:	str	r2, [r3]
   11f6c:	ldr	r0, [pc, #1268]	; 12468 <sfbpf_lex+0x10cc>
   11f70:	b	11980 <sfbpf_lex+0x5e4>
   11f74:	ldr	r3, [pc, #1252]	; 12460 <sfbpf_lex+0x10c4>
   11f78:	ldr	r3, [sl, r3]
   11f7c:	mov	r2, #10
   11f80:	str	r2, [r3]
   11f84:	ldr	r0, [pc, #1244]	; 12468 <sfbpf_lex+0x10cc>
   11f88:	b	11980 <sfbpf_lex+0x5e4>
   11f8c:	ldr	r3, [pc, #1228]	; 12460 <sfbpf_lex+0x10c4>
   11f90:	ldr	r3, [sl, r3]
   11f94:	mov	r2, #11
   11f98:	str	r2, [r3]
   11f9c:	ldr	r0, [pc, #1220]	; 12468 <sfbpf_lex+0x10cc>
   11fa0:	b	11980 <sfbpf_lex+0x5e4>
   11fa4:	ldr	r3, [pc, #1204]	; 12460 <sfbpf_lex+0x10c4>
   11fa8:	ldr	r3, [sl, r3]
   11fac:	mov	r2, #12
   11fb0:	str	r2, [r3]
   11fb4:	ldr	r0, [pc, #1196]	; 12468 <sfbpf_lex+0x10cc>
   11fb8:	b	11980 <sfbpf_lex+0x5e4>
   11fbc:	ldr	r3, [pc, #1180]	; 12460 <sfbpf_lex+0x10c4>
   11fc0:	ldr	r3, [sl, r3]
   11fc4:	mov	r2, #13
   11fc8:	str	r2, [r3]
   11fcc:	ldr	r0, [pc, #1172]	; 12468 <sfbpf_lex+0x10cc>
   11fd0:	b	11980 <sfbpf_lex+0x5e4>
   11fd4:	ldr	r3, [pc, #1156]	; 12460 <sfbpf_lex+0x10c4>
   11fd8:	ldr	r3, [sl, r3]
   11fdc:	mov	r2, #14
   11fe0:	str	r2, [r3]
   11fe4:	ldr	r0, [pc, #1148]	; 12468 <sfbpf_lex+0x10cc>
   11fe8:	b	11980 <sfbpf_lex+0x5e4>
   11fec:	ldr	r3, [pc, #1132]	; 12460 <sfbpf_lex+0x10c4>
   11ff0:	ldr	r3, [sl, r3]
   11ff4:	mov	r2, #15
   11ff8:	str	r2, [r3]
   11ffc:	ldr	r0, [pc, #1124]	; 12468 <sfbpf_lex+0x10cc>
   12000:	b	11980 <sfbpf_lex+0x5e4>
   12004:	ldr	r3, [pc, #1108]	; 12460 <sfbpf_lex+0x10c4>
   12008:	ldr	r3, [sl, r3]
   1200c:	mov	r2, #16
   12010:	str	r2, [r3]
   12014:	ldr	r0, [pc, #1100]	; 12468 <sfbpf_lex+0x10cc>
   12018:	b	11980 <sfbpf_lex+0x5e4>
   1201c:	ldr	r3, [pc, #1084]	; 12460 <sfbpf_lex+0x10c4>
   12020:	ldr	r3, [sl, r3]
   12024:	mov	r2, #17
   12028:	str	r2, [r3]
   1202c:	ldr	r0, [pc, #1076]	; 12468 <sfbpf_lex+0x10cc>
   12030:	b	11980 <sfbpf_lex+0x5e4>
   12034:	ldr	r3, [pc, #1060]	; 12460 <sfbpf_lex+0x10c4>
   12038:	ldr	r3, [sl, r3]
   1203c:	mov	r2, #18
   12040:	str	r2, [r3]
   12044:	ldr	r0, [pc, #1052]	; 12468 <sfbpf_lex+0x10cc>
   12048:	b	11980 <sfbpf_lex+0x5e4>
   1204c:	ldr	r3, [pc, #1036]	; 12460 <sfbpf_lex+0x10c4>
   12050:	ldr	r3, [sl, r3]
   12054:	mov	r2, #13
   12058:	str	r2, [r3]
   1205c:	ldr	r0, [pc, #1028]	; 12468 <sfbpf_lex+0x10cc>
   12060:	b	11980 <sfbpf_lex+0x5e4>
   12064:	ldr	r3, [pc, #1012]	; 12460 <sfbpf_lex+0x10c4>
   12068:	ldr	r3, [sl, r3]
   1206c:	mov	r2, #1
   12070:	str	r2, [r3]
   12074:	ldr	r0, [pc, #1004]	; 12468 <sfbpf_lex+0x10cc>
   12078:	b	11980 <sfbpf_lex+0x5e4>
   1207c:	ldr	r3, [pc, #988]	; 12460 <sfbpf_lex+0x10c4>
   12080:	ldr	r3, [sl, r3]
   12084:	mov	r2, #2
   12088:	str	r2, [r3]
   1208c:	ldr	r0, [pc, #980]	; 12468 <sfbpf_lex+0x10cc>
   12090:	b	11980 <sfbpf_lex+0x5e4>
   12094:	ldr	r3, [pc, #964]	; 12460 <sfbpf_lex+0x10c4>
   12098:	ldr	r3, [sl, r3]
   1209c:	mov	r2, #4
   120a0:	str	r2, [r3]
   120a4:	ldr	r0, [pc, #956]	; 12468 <sfbpf_lex+0x10cc>
   120a8:	b	11980 <sfbpf_lex+0x5e4>
   120ac:	ldr	r3, [pc, #940]	; 12460 <sfbpf_lex+0x10c4>
   120b0:	ldr	r3, [sl, r3]
   120b4:	mov	r2, #8
   120b8:	str	r2, [r3]
   120bc:	ldr	r0, [pc, #932]	; 12468 <sfbpf_lex+0x10cc>
   120c0:	b	11980 <sfbpf_lex+0x5e4>
   120c4:	ldr	r3, [pc, #916]	; 12460 <sfbpf_lex+0x10c4>
   120c8:	ldr	r3, [sl, r3]
   120cc:	mov	r2, #16
   120d0:	str	r2, [r3]
   120d4:	ldr	r0, [pc, #908]	; 12468 <sfbpf_lex+0x10cc>
   120d8:	b	11980 <sfbpf_lex+0x5e4>
   120dc:	ldr	r3, [pc, #892]	; 12460 <sfbpf_lex+0x10c4>
   120e0:	ldr	r3, [sl, r3]
   120e4:	mov	r2, #32
   120e8:	str	r2, [r3]
   120ec:	ldr	r0, [pc, #884]	; 12468 <sfbpf_lex+0x10cc>
   120f0:	b	11980 <sfbpf_lex+0x5e4>
   120f4:	ldr	r3, [pc, #1036]	; 12508 <sfbpf_lex+0x116c>
   120f8:	ldr	r3, [sl, r3]
   120fc:	ldr	r0, [r3]
   12100:	bl	28b4 <sf_sdup>
   12104:	ldr	r3, [pc, #852]	; 12460 <sfbpf_lex+0x10c4>
   12108:	ldr	r3, [sl, r3]
   1210c:	str	r0, [r3]
   12110:	ldr	r0, [pc, #868]	; 1247c <sfbpf_lex+0x10e0>
   12114:	b	11980 <sfbpf_lex+0x5e4>
   12118:	ldr	r3, [pc, #1000]	; 12508 <sfbpf_lex+0x116c>
   1211c:	ldr	r3, [sl, r3]
   12120:	ldr	r0, [r3]
   12124:	add	r0, r0, #1
   12128:	bl	28b4 <sf_sdup>
   1212c:	ldr	r3, [pc, #812]	; 12460 <sfbpf_lex+0x10c4>
   12130:	ldr	r3, [sl, r3]
   12134:	str	r0, [r3]
   12138:	ldr	r0, [pc, #828]	; 1247c <sfbpf_lex+0x10e0>
   1213c:	b	11980 <sfbpf_lex+0x5e4>
   12140:	ldr	r3, [pc, #960]	; 12508 <sfbpf_lex+0x116c>
   12144:	ldr	r3, [sl, r3]
   12148:	ldr	r1, [r3]
   1214c:	ldr	r0, [pc, #812]	; 12480 <sfbpf_lex+0x10e4>
   12150:	add	r0, pc, r0
   12154:	bl	22b4 <sf_bpf_error>
   12158:	ldr	r3, [pc, #936]	; 12508 <sfbpf_lex+0x116c>
   1215c:	ldr	r3, [sl, r3]
   12160:	ldr	r3, [r3]
   12164:	ldrb	r1, [r3]
   12168:	ldr	r0, [pc, #788]	; 12484 <sfbpf_lex+0x10e8>
   1216c:	add	r0, pc, r0
   12170:	bl	22b4 <sf_bpf_error>
   12174:	ldr	r8, [sp, #8]
   12178:	ldr	sl, [sp, #12]
   1217c:	ldr	r3, [pc, #400]	; 12314 <sfbpf_lex+0xf78>
   12180:	ldr	r2, [sp, #28]
   12184:	ldr	r1, [r2, r3]
   12188:	ldr	r3, [pc, #888]	; 12508 <sfbpf_lex+0x116c>
   1218c:	ldr	r0, [r2, r3]
   12190:	ldr	r3, [pc, #752]	; 12488 <sfbpf_lex+0x10ec>
   12194:	add	r3, pc, r3
   12198:	ldr	r3, [r3, #44]	; 0x2c
   1219c:	mov	r2, #1
   121a0:	ldr	r1, [r1]
   121a4:	ldr	r0, [r0]
   121a8:	bl	df8 <fwrite@plt>
   121ac:	b	1147c <sfbpf_lex+0xe0>
   121b0:	mov	r0, #0
   121b4:	b	11980 <sfbpf_lex+0x5e4>
   121b8:	ldr	r3, [pc, #840]	; 12508 <sfbpf_lex+0x116c>
   121bc:	ldr	r3, [sl, r3]
   121c0:	ldr	r3, [r3]
   121c4:	ldr	r2, [sp, #16]
   121c8:	sub	r3, r2, r3
   121cc:	sub	r3, r3, #1
   121d0:	str	r3, [sp, #64]	; 0x40
   121d4:	ldr	r2, [sp, #20]
   121d8:	ldrb	r3, [r2, #32]
   121dc:	strb	r3, [fp]
   121e0:	ldr	r8, [r2, #20]
   121e4:	ldr	r7, [r2, #16]
   121e8:	add	r3, r7, r8, lsl #2
   121ec:	str	r3, [sp, #60]	; 0x3c
   121f0:	ldr	r3, [r7, r8, lsl #2]
   121f4:	ldr	r2, [r3, #44]	; 0x2c
   121f8:	cmp	r2, #0
   121fc:	bne	12220 <sfbpf_lex+0xe84>
   12200:	ldr	r2, [r3, #16]
   12204:	ldr	r1, [sp, #32]
   12208:	str	r2, [r1, #24]
   1220c:	ldr	r2, [r1, #28]
   12210:	str	r2, [r3]
   12214:	ldr	r3, [r7, r8, lsl #2]
   12218:	mov	r2, #1
   1221c:	str	r2, [r3, #44]	; 0x2c
   12220:	ldr	ip, [r7, r8, lsl #2]
   12224:	ldr	r2, [ip, #4]
   12228:	ldr	r3, [sp, #36]	; 0x24
   1222c:	ldr	r0, [r3, #24]
   12230:	ldr	r1, [r3, #4]
   12234:	add	r3, r2, r0
   12238:	cmp	r1, r3
   1223c:	bls	1250c <sfbpf_lex+0x1170>
   12240:	ldr	r3, [pc, #704]	; 12508 <sfbpf_lex+0x116c>
   12244:	ldr	r3, [sl, r3]
   12248:	ldr	r3, [r3]
   1224c:	add	r0, r0, #1
   12250:	add	r0, r2, r0
   12254:	cmp	r1, r0
   12258:	bhi	12620 <sfbpf_lex+0x1284>
   1225c:	ldr	r0, [ip, #40]	; 0x28
   12260:	cmp	r0, #0
   12264:	bne	1262c <sfbpf_lex+0x1290>
   12268:	sub	r3, r1, r3
   1226c:	cmp	r3, #1
   12270:	bne	12a38 <sfbpf_lex+0x169c>
   12274:	ldr	r3, [pc, #528]	; 1248c <sfbpf_lex+0x10f0>
   12278:	add	r3, pc, r3
   1227c:	ldr	r2, [pc, #644]	; 12508 <sfbpf_lex+0x116c>
   12280:	ldr	r2, [sl, r2]
   12284:	ldr	r2, [r2]
   12288:	str	r2, [r3, #4]
   1228c:	ldr	r3, [r3]
   12290:	sub	r3, r3, #1
   12294:	add	r3, r3, r3, lsr #31
   12298:	asr	r3, r3, #1
   1229c:	add	r3, r3, #146	; 0x92
   122a0:	b	11710 <sfbpf_lex+0x374>
   122a4:	.word	0x0001fc50
   122a8:	.word	0x0002078c
   122ac:	.word	0x00020778
   122b0:	.word	0x00020760
   122b4:	.word	0x00020754
   122b8:	.word	0x00020740
   122bc:	.word	0x0002072c
   122c0:	.word	0x00020718
   122c4:	.word	0x00006cac
   122c8:	.word	0x00004ca0
   122cc:	.word	0x0000ac78
   122d0:	.word	0x000206bc
   122d4:	.word	0x00020698
   122d8:	.word	0x00004c2c
   122dc:	.word	0x00006c14
   122e0:	.word	0x00006c0c
   122e4:	.word	0x000000e4
   122e8:	.word	0x00020640
   122ec:	.word	0x000000ec
   122f0:	.word	0x00020624
   122f4:	.word	0x00020610
   122f8:	.word	0x00001ce9
   122fc:	.word	0x00020538
   12300:	.word	0x00006ad8
   12304:	.word	0x0000aab4
   12308:	.word	0x00004aa0
   1230c:	.word	0x000204d0
   12310:	.word	0x00004a74
   12314:	.word	0x000000c4
   12318:	.word	0x00020488
   1231c:	.word	0x0002046c
   12320:	.word	0x00020460
   12324:	.word	0x00020454
   12328:	.word	0x00020448
   1232c:	.word	0x0002043c
   12330:	.word	0x00020430
   12334:	.word	0x000201d0
   12338:	.word	0x00000103
   1233c:	.word	0x000201b0
   12340:	.word	0x0000010f
   12344:	.word	0x00000111
   12348:	.word	0x00000112
   1234c:	.word	0x00000113
   12350:	.word	0x00000115
   12354:	.word	0x00000116
   12358:	.word	0x00000117
   1235c:	.word	0x00000119
   12360:	.word	0x00000163
   12364:	.word	0x0000013f
   12368:	.word	0x00000141
   1236c:	.word	0x00000142
   12370:	.word	0x0000011a
   12374:	.word	0x0000011b
   12378:	.word	0x0000011d
   1237c:	.word	0x0000011e
   12380:	.word	0x0000011f
   12384:	.word	0x00000147
   12388:	.word	0x0000014a
   1238c:	.word	0x0000014b
   12390:	.word	0x0000014d
   12394:	.word	0x0000014e
   12398:	.word	0x0000014f
   1239c:	.word	0x00000151
   123a0:	.word	0x00000149
   123a4:	.word	0x00000152
   123a8:	.word	0x00000153
   123ac:	.word	0x00000106
   123b0:	.word	0x00000107
   123b4:	.word	0x00000109
   123b8:	.word	0x0000010d
   123bc:	.word	0x00000105
   123c0:	.word	0x0000012d
   123c4:	.word	0x0000012e
   123c8:	.word	0x0000012f
   123cc:	.word	0x00000131
   123d0:	.word	0x00000132
   123d4:	.word	0x0000010a
   123d8:	.word	0x0000010b
   123dc:	.word	0x0000010e
   123e0:	.word	0x00000121
   123e4:	.word	0x00000122
   123e8:	.word	0x0000016b
   123ec:	.word	0x0000013e
   123f0:	.word	0x00000125
   123f4:	.word	0x00000143
   123f8:	.word	0x00000145
   123fc:	.word	0x00000146
   12400:	.word	0x00000155
   12404:	.word	0x00000156
   12408:	.word	0x00000157
   1240c:	.word	0x0000015d
   12410:	.word	0x0000015e
   12414:	.word	0x0000015b
   12418:	.word	0x00000159
   1241c:	.word	0x0000015a
   12420:	.word	0x00000161
   12424:	.word	0x00000162
   12428:	.word	0x0000015f
   1242c:	.word	0x00000126
   12430:	.word	0x00000127
   12434:	.word	0x00000129
   12438:	.word	0x0000012a
   1243c:	.word	0x0000012b
   12440:	.word	0x00000165
   12444:	.word	0x00000166
   12448:	.word	0x00000167
   1244c:	.word	0x00000169
   12450:	.word	0x0000016a
   12454:	.word	0x00000135
   12458:	.word	0x00000136
   1245c:	.word	0x0000013d
   12460:	.word	0x000000f4
   12464:	.word	0x0000013b
   12468:	.word	0x00000123
   1246c:	.word	0x00000139
   12470:	.word	0x0000013a
   12474:	.word	0x0000e148
   12478:	.word	0x0000e148
   1247c:	.word	0x00000137
   12480:	.word	0x0000dec0
   12484:	.word	0x0000deb8
   12488:	.word	0x0001f9a8
   1248c:	.word	0x0001f8c4
   12490:	.word	0x0001f618
   12494:	.word	0x00003bbc
   12498:	.word	0x0001f5f0
   1249c:	.word	0x00003b6c
   124a0:	.word	0x00005b54
   124a4:	.word	0x00000599
   124a8:	.word	0x0001f52c
   124ac:	.word	0x0000da14
   124b0:	.word	0x0001f4cc
   124b4:	.word	0x0001f4b4
   124b8:	.word	0x0001f484
   124bc:	.word	0x0001f478
   124c0:	.word	0x0000d904
   124c4:	.word	0x0001f39c
   124c8:	.word	0x0001f394
   124cc:	.word	0x0001f340
   124d0:	.word	0x0001f318
   124d4:	.word	0x0001f30c
   124d8:	.word	0x0000d818
   124dc:	.word	0x0001f284
   124e0:	.word	0x0000d7cc
   124e4:	.word	0x0001f250
   124e8:	.word	0x0001f248
   124ec:	.word	0x0001f240
   124f0:	.word	0x0000d72c
   124f4:	.word	0x0001f12c
   124f8:	.word	0x0001f100
   124fc:	.word	0x0000d674
   12500:	.word	0x00000102
   12504:	.word	0x00000133
   12508:	.word	0x000000dc
   1250c:	ldr	r3, [pc, #-12]	; 12508 <sfbpf_lex+0x116c>
   12510:	ldr	r3, [sl, r3]
   12514:	ldr	r3, [r3]
   12518:	ldr	r2, [sp, #64]	; 0x40
   1251c:	add	fp, r3, r2
   12520:	ldr	r3, [pc, #-152]	; 12490 <sfbpf_lex+0x10f4>
   12524:	add	r3, pc, r3
   12528:	str	fp, [r3, #4]
   1252c:	bl	10d70 <yy_get_previous_state>
   12530:	lsl	r2, r0, #1
   12534:	ldr	r3, [pc, #-168]	; 12494 <sfbpf_lex+0x10f8>
   12538:	add	r3, pc, r3
   1253c:	add	r3, r3, #256	; 0x100
   12540:	ldrsh	r3, [r3, r2]
   12544:	cmp	r3, #0
   12548:	ldrne	r3, [pc, #-184]	; 12498 <sfbpf_lex+0x10fc>
   1254c:	addne	r3, pc, r3
   12550:	strne	r0, [r3, #8]
   12554:	strne	fp, [r3, #12]
   12558:	ldr	r3, [sp, #56]	; 0x38
   1255c:	sub	r3, r3, #1216	; 0x4c0
   12560:	lsl	r2, r0, #1
   12564:	ldrsh	r3, [r3, r2]
   12568:	add	r3, r3, #1
   1256c:	lsl	r2, r3, #1
   12570:	ldr	r1, [sp, #48]	; 0x30
   12574:	ldrsh	r2, [r1, r2]
   12578:	cmp	r0, r2
   1257c:	beq	125cc <sfbpf_lex+0x1230>
   12580:	mov	r1, r0
   12584:	ldr	ip, [pc, #-240]	; 1249c <sfbpf_lex+0x1100>
   12588:	add	ip, pc, ip
   1258c:	add	ip, ip, #3120	; 0xc30
   12590:	add	ip, ip, #4
   12594:	ldr	r3, [pc, #-252]	; 124a0 <sfbpf_lex+0x1104>
   12598:	add	r3, pc, r3
   1259c:	sub	lr, r3, #1216	; 0x4c0
   125a0:	add	r3, r3, #2560	; 0xa00
   125a4:	add	r2, r3, #12
   125a8:	lsl	r1, r1, #1
   125ac:	ldrsh	r1, [ip, r1]
   125b0:	lsl	r3, r1, #1
   125b4:	ldrsh	r3, [lr, r3]
   125b8:	add	r3, r3, #1
   125bc:	lsl	r4, r3, #1
   125c0:	ldrsh	r4, [r2, r4]
   125c4:	cmp	r1, r4
   125c8:	bne	125a8 <sfbpf_lex+0x120c>
   125cc:	lsl	r3, r3, #1
   125d0:	ldr	r2, [sp, #52]	; 0x34
   125d4:	ldrsh	r3, [r2, r3]
   125d8:	ldr	r2, [pc, #-316]	; 124a4 <sfbpf_lex+0x1108>
   125dc:	cmp	r3, r2
   125e0:	beq	12a90 <sfbpf_lex+0x16f4>
   125e4:	ldr	r2, [pc, #-228]	; 12508 <sfbpf_lex+0x116c>
   125e8:	ldr	r2, [sl, r2]
   125ec:	ldr	r2, [r2]
   125f0:	str	r2, [sp, #24]
   125f4:	cmp	r3, #0
   125f8:	beq	1164c <sfbpf_lex+0x2b0>
   125fc:	mov	r2, fp
   12600:	ldr	fp, [sp, #8]
   12604:	ldr	r9, [sp, #12]
   12608:	add	r4, r2, #1
   1260c:	ldr	r2, [pc, #-364]	; 124a8 <sfbpf_lex+0x110c>
   12610:	add	r2, pc, r2
   12614:	str	r4, [r2, #4]
   12618:	mov	r0, r3
   1261c:	b	114a0 <sfbpf_lex+0x104>
   12620:	ldr	r0, [pc, #-380]	; 124ac <sfbpf_lex+0x1110>
   12624:	add	r0, pc, r0
   12628:	bl	10f54 <yy_fatal_error>
   1262c:	sub	r1, r1, r3
   12630:	str	r1, [sp, #68]	; 0x44
   12634:	sub	r4, r1, #1
   12638:	cmp	r4, #0
   1263c:	ble	12658 <sfbpf_lex+0x12bc>
   12640:	sub	r2, r2, #1
   12644:	add	r1, r3, r4
   12648:	ldrb	r0, [r3], #1
   1264c:	strb	r0, [r2, #1]!
   12650:	cmp	r3, r1
   12654:	bne	12648 <sfbpf_lex+0x12ac>
   12658:	ldr	r3, [r7, r8, lsl #2]
   1265c:	ldr	r2, [r3, #44]	; 0x2c
   12660:	cmp	r2, #2
   12664:	bne	126a0 <sfbpf_lex+0x1304>
   12668:	mov	r2, #0
   1266c:	ldr	r1, [pc, #-452]	; 124b0 <sfbpf_lex+0x1114>
   12670:	add	r1, pc, r1
   12674:	str	r2, [r1, #24]
   12678:	str	r2, [r3, #16]
   1267c:	cmp	r4, #0
   12680:	bne	12978 <sfbpf_lex+0x15dc>
   12684:	ldr	r3, [pc, #-472]	; 124b4 <sfbpf_lex+0x1118>
   12688:	add	r3, pc, r3
   1268c:	ldr	r0, [r3, #28]
   12690:	bl	11304 <sfbpf_restart>
   12694:	mov	r3, #1
   12698:	str	r3, [sp, #60]	; 0x3c
   1269c:	b	12858 <sfbpf_lex+0x14bc>
   126a0:	ldr	r5, [r3, #12]
   126a4:	sub	r5, r5, r4
   126a8:	sub	r5, r5, #1
   126ac:	cmp	r5, #0
   126b0:	bgt	12774 <sfbpf_lex+0x13d8>
   126b4:	ldr	r3, [pc, #-516]	; 124b8 <sfbpf_lex+0x111c>
   126b8:	add	r3, pc, r3
   126bc:	str	r3, [sp, #72]	; 0x48
   126c0:	ldr	r3, [pc, #-524]	; 124bc <sfbpf_lex+0x1120>
   126c4:	add	r3, pc, r3
   126c8:	str	r3, [sp, #76]	; 0x4c
   126cc:	b	12710 <sfbpf_lex+0x1374>
   126d0:	ldr	r1, [r6, #12]
   126d4:	add	r1, r1, #2
   126d8:	bl	dec <realloc@plt>
   126dc:	str	r0, [r6, #4]
   126e0:	cmp	r0, #0
   126e4:	beq	12768 <sfbpf_lex+0x13cc>
   126e8:	add	r0, r0, r5
   126ec:	ldr	r3, [sp, #76]	; 0x4c
   126f0:	str	r0, [r3, #4]
   126f4:	ldr	r3, [sp, #60]	; 0x3c
   126f8:	ldr	r3, [r3]
   126fc:	ldr	r5, [r3, #12]
   12700:	sub	r5, r5, r4
   12704:	sub	r5, r5, #1
   12708:	cmp	r5, #0
   1270c:	bgt	12774 <sfbpf_lex+0x13d8>
   12710:	ldr	r3, [sp, #60]	; 0x3c
   12714:	ldr	r6, [r3]
   12718:	ldr	r0, [r6, #4]
   1271c:	ldr	r3, [sp, #72]	; 0x48
   12720:	ldr	r5, [r3, #4]
   12724:	sub	r5, r5, r0
   12728:	ldr	r3, [r6, #20]
   1272c:	cmp	r3, #0
   12730:	beq	12760 <sfbpf_lex+0x13c4>
   12734:	ldr	r3, [r6, #12]
   12738:	lsl	r2, r3, #1
   1273c:	cmp	r2, #0
   12740:	strgt	r2, [r6, #12]
   12744:	bgt	126d0 <sfbpf_lex+0x1334>
   12748:	add	r2, r3, #7
   1274c:	cmp	r3, #0
   12750:	movge	r2, r3
   12754:	add	r3, r3, r2, asr #3
   12758:	str	r3, [r6, #12]
   1275c:	b	126d0 <sfbpf_lex+0x1334>
   12760:	mov	r3, #0
   12764:	str	r3, [r6, #4]
   12768:	ldr	r0, [pc, #-688]	; 124c0 <sfbpf_lex+0x1124>
   1276c:	add	r0, pc, r0
   12770:	bl	10f54 <yy_fatal_error>
   12774:	cmp	r5, #8192	; 0x2000
   12778:	movge	r5, #8192	; 0x2000
   1277c:	ldr	r3, [r7, r8, lsl #2]
   12780:	ldr	r3, [r3, #24]
   12784:	cmp	r3, #0
   12788:	beq	128d8 <sfbpf_lex+0x153c>
   1278c:	cmp	r5, #0
   12790:	movle	r6, #0
   12794:	ble	12820 <sfbpf_lex+0x1484>
   12798:	mov	r6, #0
   1279c:	ldr	r8, [pc, #-736]	; 124c4 <sfbpf_lex+0x1128>
   127a0:	add	r8, pc, r8
   127a4:	ldr	r7, [pc, #-740]	; 124c8 <sfbpf_lex+0x112c>
   127a8:	add	r7, pc, r7
   127ac:	b	127dc <sfbpf_lex+0x1440>
   127b0:	ldr	r2, [r7, #20]
   127b4:	ldr	r3, [r7, #16]
   127b8:	ldr	r3, [r3, r2, lsl #2]
   127bc:	ldr	r3, [r3, #4]
   127c0:	add	r3, r3, r6
   127c4:	ldr	r2, [sp, #68]	; 0x44
   127c8:	add	r3, r3, r2
   127cc:	strb	r0, [r3, #-1]
   127d0:	add	r6, r6, #1
   127d4:	cmp	r5, r6
   127d8:	beq	127f0 <sfbpf_lex+0x1454>
   127dc:	ldr	r0, [r8, #28]
   127e0:	bl	f24 <getc@plt>
   127e4:	cmp	r0, #10
   127e8:	cmnne	r0, #1
   127ec:	bne	127b0 <sfbpf_lex+0x1414>
   127f0:	cmp	r0, #10
   127f4:	bne	128ac <sfbpf_lex+0x1510>
   127f8:	ldr	r3, [pc, #-820]	; 124cc <sfbpf_lex+0x1130>
   127fc:	add	r3, pc, r3
   12800:	ldr	r2, [r3, #20]
   12804:	ldr	r3, [r3, #16]
   12808:	ldr	r3, [r3, r2, lsl #2]
   1280c:	ldr	r3, [r3, #4]
   12810:	add	r3, r3, r6
   12814:	mov	r2, #10
   12818:	strb	r2, [r3, r4]
   1281c:	add	r6, r6, #1
   12820:	ldr	r3, [pc, #-856]	; 124d0 <sfbpf_lex+0x1134>
   12824:	add	r3, pc, r3
   12828:	str	r6, [r3, #24]
   1282c:	ldr	r3, [pc, #-864]	; 124d4 <sfbpf_lex+0x1138>
   12830:	add	r3, pc, r3
   12834:	ldr	r1, [r3, #20]
   12838:	ldr	r2, [r3, #16]
   1283c:	ldr	r2, [r2, r1, lsl #2]
   12840:	ldr	r3, [r3, #24]
   12844:	str	r3, [r2, #16]
   12848:	cmp	r3, #0
   1284c:	movne	r3, #0
   12850:	strne	r3, [sp, #60]	; 0x3c
   12854:	beq	1267c <sfbpf_lex+0x12e0>
   12858:	ldr	r3, [sp, #40]	; 0x28
   1285c:	ldr	r5, [r3, #24]
   12860:	add	r4, r4, r5
   12864:	ldr	r7, [r3, #20]
   12868:	ldr	r6, [r3, #16]
   1286c:	ldr	r8, [r6, r7, lsl #2]
   12870:	ldr	r3, [r8, #12]
   12874:	cmp	r4, r3
   12878:	ble	1299c <sfbpf_lex+0x1600>
   1287c:	add	r5, r4, r5, asr #1
   12880:	mov	r1, r5
   12884:	ldr	r0, [r8, #4]
   12888:	bl	dec <realloc@plt>
   1288c:	str	r0, [r8, #4]
   12890:	ldr	r3, [r6, r7, lsl #2]
   12894:	ldr	r2, [r3, #4]
   12898:	cmp	r2, #0
   1289c:	bne	12994 <sfbpf_lex+0x15f8>
   128a0:	ldr	r0, [pc, #-976]	; 124d8 <sfbpf_lex+0x113c>
   128a4:	add	r0, pc, r0
   128a8:	bl	10f54 <yy_fatal_error>
   128ac:	cmn	r0, #1
   128b0:	bne	12820 <sfbpf_lex+0x1484>
   128b4:	ldr	r3, [pc, #-992]	; 124dc <sfbpf_lex+0x1140>
   128b8:	add	r3, pc, r3
   128bc:	ldr	r0, [r3, #28]
   128c0:	bl	dbc <ferror@plt>
   128c4:	cmp	r0, #0
   128c8:	beq	12820 <sfbpf_lex+0x1484>
   128cc:	ldr	r0, [pc, #-1012]	; 124e0 <sfbpf_lex+0x1144>
   128d0:	add	r0, pc, r0
   128d4:	bl	10f54 <yy_fatal_error>
   128d8:	bl	e70 <__errno_location@plt>
   128dc:	mov	r7, r0
   128e0:	mov	r3, #0
   128e4:	str	r3, [r0]
   128e8:	ldr	r6, [pc, #-1036]	; 124e4 <sfbpf_lex+0x1148>
   128ec:	add	r6, pc, r6
   128f0:	ldr	r8, [pc, #-1040]	; 124e8 <sfbpf_lex+0x114c>
   128f4:	add	r8, pc, r8
   128f8:	ldr	r3, [pc, #-1044]	; 124ec <sfbpf_lex+0x1150>
   128fc:	add	r3, pc, r3
   12900:	str	r3, [sp, #60]	; 0x3c
   12904:	b	12928 <sfbpf_lex+0x158c>
   12908:	ldr	r3, [r7]
   1290c:	cmp	r3, #4
   12910:	bne	1296c <sfbpf_lex+0x15d0>
   12914:	mov	r3, #0
   12918:	str	r3, [r7]
   1291c:	ldr	r3, [sp, #60]	; 0x3c
   12920:	ldr	r0, [r3, #28]
   12924:	bl	ec4 <clearerr@plt>
   12928:	ldr	r2, [r6, #20]
   1292c:	ldr	r3, [r6, #16]
   12930:	ldr	r3, [r3, r2, lsl #2]
   12934:	ldr	r0, [r3, #4]
   12938:	ldr	r3, [r6, #28]
   1293c:	mov	r2, r5
   12940:	mov	r1, #1
   12944:	add	r0, r0, r4
   12948:	bl	e04 <fread@plt>
   1294c:	str	r0, [r6, #24]
   12950:	cmp	r0, #0
   12954:	bne	1282c <sfbpf_lex+0x1490>
   12958:	ldr	r0, [r8, #28]
   1295c:	bl	dbc <ferror@plt>
   12960:	cmp	r0, #0
   12964:	bne	12908 <sfbpf_lex+0x156c>
   12968:	b	1282c <sfbpf_lex+0x1490>
   1296c:	ldr	r0, [pc, #-1156]	; 124f0 <sfbpf_lex+0x1154>
   12970:	add	r0, pc, r0
   12974:	bl	10f54 <yy_fatal_error>
   12978:	ldr	r2, [r9, #20]
   1297c:	ldr	r3, [r9, #16]
   12980:	ldr	r2, [r3, r2, lsl #2]
   12984:	mov	r3, #2
   12988:	str	r3, [r2, #44]	; 0x2c
   1298c:	str	r3, [sp, #60]	; 0x3c
   12990:	b	12858 <sfbpf_lex+0x14bc>
   12994:	sub	r5, r5, #2
   12998:	str	r5, [r3, #12]
   1299c:	ldr	r3, [sp, #44]	; 0x2c
   129a0:	str	r4, [r3, #24]
   129a4:	ldr	r3, [r6, r7, lsl #2]
   129a8:	ldr	r3, [r3, #4]
   129ac:	mov	r2, #0
   129b0:	strb	r2, [r3, r4]
   129b4:	ldr	r3, [r6, r7, lsl #2]
   129b8:	ldr	r3, [r3, #4]
   129bc:	add	r4, r3, r4
   129c0:	strb	r2, [r4, #1]
   129c4:	ldr	r3, [r6, r7, lsl #2]
   129c8:	ldr	r3, [r3, #4]
   129cc:	ldr	r2, [pc, #-1228]	; 12508 <sfbpf_lex+0x116c>
   129d0:	ldr	r2, [sl, r2]
   129d4:	str	r3, [r2]
   129d8:	ldr	r2, [sp, #60]	; 0x3c
   129dc:	cmp	r2, #1
   129e0:	beq	12274 <sfbpf_lex+0xed8>
   129e4:	cmp	r2, #2
   129e8:	beq	12a38 <sfbpf_lex+0x169c>
   129ec:	ldr	fp, [sp, #8]
   129f0:	ldr	r9, [sp, #12]
   129f4:	cmp	r2, #0
   129f8:	movne	r8, fp
   129fc:	movne	sl, r9
   12a00:	bne	1147c <sfbpf_lex+0xe0>
   12a04:	ldr	r2, [sp, #64]	; 0x40
   12a08:	add	r4, r3, r2
   12a0c:	ldr	r3, [pc, #-1312]	; 124f4 <sfbpf_lex+0x1158>
   12a10:	add	r3, pc, r3
   12a14:	str	r4, [r3, #4]
   12a18:	bl	10d70 <yy_get_previous_state>
   12a1c:	mov	r3, r0
   12a20:	ldr	r2, [pc, #-1312]	; 12508 <sfbpf_lex+0x116c>
   12a24:	ldr	r1, [sp, #28]
   12a28:	ldr	r2, [r1, r2]
   12a2c:	ldr	r2, [r2]
   12a30:	str	r2, [sp, #24]
   12a34:	b	12618 <sfbpf_lex+0x127c>
   12a38:	ldr	r3, [pc, #-1352]	; 124f8 <sfbpf_lex+0x115c>
   12a3c:	add	r3, pc, r3
   12a40:	ldr	r1, [r3, #20]
   12a44:	ldr	r2, [r3, #16]
   12a48:	ldr	r2, [r2, r1, lsl #2]
   12a4c:	ldr	r1, [r2, #4]
   12a50:	ldr	r2, [r3, #24]
   12a54:	add	fp, r1, r2
   12a58:	str	fp, [r3, #4]
   12a5c:	bl	10d70 <yy_get_previous_state>
   12a60:	ldr	r3, [pc, #-1376]	; 12508 <sfbpf_lex+0x116c>
   12a64:	ldr	r3, [sl, r3]
   12a68:	ldr	r3, [r3]
   12a6c:	str	r3, [sp, #24]
   12a70:	b	1164c <sfbpf_lex+0x2b0>
   12a74:	ldr	r0, [pc, #-1408]	; 124fc <sfbpf_lex+0x1160>
   12a78:	add	r0, pc, r0
   12a7c:	bl	10f54 <yy_fatal_error>
   12a80:	ldr	r0, [pc, #-1416]	; 12500 <sfbpf_lex+0x1164>
   12a84:	b	11980 <sfbpf_lex+0x5e4>
   12a88:	ldr	r0, [pc, #-1420]	; 12504 <sfbpf_lex+0x1168>
   12a8c:	b	11980 <sfbpf_lex+0x5e4>
   12a90:	ldr	r3, [pc, #-1424]	; 12508 <sfbpf_lex+0x116c>
   12a94:	ldr	r3, [sl, r3]
   12a98:	ldr	r3, [r3]
   12a9c:	str	r3, [sp, #24]
   12aa0:	b	1164c <sfbpf_lex+0x2b0>

00012aa4 <sfbpf_push_buffer_state>:
   12aa4:	push	{r4, lr}
   12aa8:	subs	r4, r0, #0
   12aac:	popeq	{r4, pc}
   12ab0:	bl	10f90 <sfbpf_ensure_buffer_stack>
   12ab4:	ldr	r3, [pc, #124]	; 12b38 <sfbpf_push_buffer_state+0x94>
   12ab8:	add	r3, pc, r3
   12abc:	ldr	r2, [r3, #16]
   12ac0:	cmp	r2, #0
   12ac4:	beq	12b20 <sfbpf_push_buffer_state+0x7c>
   12ac8:	ldr	r3, [pc, #108]	; 12b3c <sfbpf_push_buffer_state+0x98>
   12acc:	add	r3, pc, r3
   12ad0:	ldr	r3, [r3, #20]
   12ad4:	ldr	r1, [r2, r3, lsl #2]
   12ad8:	cmp	r1, #0
   12adc:	beq	12b20 <sfbpf_push_buffer_state+0x7c>
   12ae0:	ldr	r1, [pc, #88]	; 12b40 <sfbpf_push_buffer_state+0x9c>
   12ae4:	add	r1, pc, r1
   12ae8:	ldr	r0, [r1, #4]
   12aec:	ldrb	ip, [r1, #32]
   12af0:	strb	ip, [r0]
   12af4:	ldr	ip, [r2, r3, lsl #2]
   12af8:	str	r0, [ip, #8]
   12afc:	ldr	r0, [r2, r3, lsl #2]
   12b00:	ldr	r1, [r1, #24]
   12b04:	str	r1, [r0, #16]
   12b08:	ldr	r1, [r2, r3, lsl #2]
   12b0c:	cmp	r1, #0
   12b10:	addne	r3, r3, #1
   12b14:	ldrne	r1, [pc, #40]	; 12b44 <sfbpf_push_buffer_state+0xa0>
   12b18:	addne	r1, pc, r1
   12b1c:	strne	r3, [r1, #20]
   12b20:	ldr	r3, [pc, #32]	; 12b48 <sfbpf_push_buffer_state+0xa4>
   12b24:	add	r3, pc, r3
   12b28:	ldr	r3, [r3, #20]
   12b2c:	str	r4, [r2, r3, lsl #2]
   12b30:	bl	10ef4 <sfbpf__load_buffer_state>
   12b34:	pop	{r4, pc}
   12b38:	.word	0x0001f084
   12b3c:	.word	0x0001f070
   12b40:	.word	0x0001f058
   12b44:	.word	0x0001f024
   12b48:	.word	0x0001f018

00012b4c <sfbpf_pop_buffer_state>:
   12b4c:	push	{r4, r5, r6, lr}
   12b50:	ldr	r3, [pc, #100]	; 12bbc <sfbpf_pop_buffer_state+0x70>
   12b54:	add	r3, pc, r3
   12b58:	ldr	r4, [r3, #16]
   12b5c:	cmp	r4, #0
   12b60:	popeq	{r4, r5, r6, pc}
   12b64:	ldr	r3, [pc, #84]	; 12bc0 <sfbpf_pop_buffer_state+0x74>
   12b68:	add	r3, pc, r3
   12b6c:	ldr	r5, [r3, #20]
   12b70:	ldr	r0, [r4, r5, lsl #2]
   12b74:	cmp	r0, #0
   12b78:	popeq	{r4, r5, r6, pc}
   12b7c:	bl	1111c <sfbpf__delete_buffer>
   12b80:	mov	r3, #0
   12b84:	str	r3, [r4, r5, lsl #2]
   12b88:	cmp	r5, r3
   12b8c:	subne	r5, r5, #1
   12b90:	ldrne	r3, [pc, #44]	; 12bc4 <sfbpf_pop_buffer_state+0x78>
   12b94:	addne	r3, pc, r3
   12b98:	strne	r5, [r3, #20]
   12b9c:	ldr	r3, [pc, #36]	; 12bc8 <sfbpf_pop_buffer_state+0x7c>
   12ba0:	add	r3, pc, r3
   12ba4:	ldr	r3, [r3, #20]
   12ba8:	ldr	r3, [r4, r3, lsl #2]
   12bac:	cmp	r3, #0
   12bb0:	popeq	{r4, r5, r6, pc}
   12bb4:	bl	10ef4 <sfbpf__load_buffer_state>
   12bb8:	pop	{r4, r5, r6, pc}
   12bbc:	.word	0x0001efe8
   12bc0:	.word	0x0001efd4
   12bc4:	.word	0x0001efa8
   12bc8:	.word	0x0001ef9c

00012bcc <sfbpf__scan_buffer>:
   12bcc:	cmp	r1, #1
   12bd0:	bls	12c58 <sfbpf__scan_buffer+0x8c>
   12bd4:	push	{r4, r5, r6, lr}
   12bd8:	sub	r6, r1, #2
   12bdc:	ldrb	r3, [r0, r6]
   12be0:	cmp	r3, #0
   12be4:	bne	12c60 <sfbpf__scan_buffer+0x94>
   12be8:	add	r1, r0, r1
   12bec:	ldrb	r3, [r1, #-1]
   12bf0:	cmp	r3, #0
   12bf4:	bne	12c68 <sfbpf__scan_buffer+0x9c>
   12bf8:	mov	r5, r0
   12bfc:	mov	r0, #48	; 0x30
   12c00:	bl	e1c <malloc@plt>
   12c04:	subs	r4, r0, #0
   12c08:	beq	12c4c <sfbpf__scan_buffer+0x80>
   12c0c:	str	r6, [r4, #12]
   12c10:	str	r5, [r4, #4]
   12c14:	str	r5, [r4, #8]
   12c18:	mov	r3, #0
   12c1c:	str	r3, [r4, #20]
   12c20:	str	r3, [r4]
   12c24:	str	r6, [r4, #16]
   12c28:	str	r3, [r4, #24]
   12c2c:	mov	r2, #1
   12c30:	str	r2, [r4, #28]
   12c34:	str	r3, [r4, #40]	; 0x28
   12c38:	str	r3, [r4, #44]	; 0x2c
   12c3c:	mov	r0, r4
   12c40:	bl	11080 <sfbpf__switch_to_buffer>
   12c44:	mov	r0, r4
   12c48:	pop	{r4, r5, r6, pc}
   12c4c:	ldr	r0, [pc, #28]	; 12c70 <sfbpf__scan_buffer+0xa4>
   12c50:	add	r0, pc, r0
   12c54:	bl	10f54 <yy_fatal_error>
   12c58:	mov	r0, #0
   12c5c:	bx	lr
   12c60:	mov	r0, #0
   12c64:	pop	{r4, r5, r6, pc}
   12c68:	mov	r0, #0
   12c6c:	pop	{r4, r5, r6, pc}
   12c70:	.word	0x0000d4d0

00012c74 <sfbpf__scan_bytes>:
   12c74:	push	{r4, r5, r6, lr}
   12c78:	mov	r4, r0
   12c7c:	mov	r5, r1
   12c80:	add	r6, r1, #2
   12c84:	mov	r0, r6
   12c88:	bl	e1c <malloc@plt>
   12c8c:	cmp	r0, #0
   12c90:	beq	12ce4 <sfbpf__scan_bytes+0x70>
   12c94:	cmp	r5, #0
   12c98:	movgt	r3, r4
   12c9c:	subgt	r2, r0, #1
   12ca0:	addgt	ip, r4, r5
   12ca4:	ble	12cb8 <sfbpf__scan_bytes+0x44>
   12ca8:	ldrb	r1, [r3], #1
   12cac:	strb	r1, [r2, #1]!
   12cb0:	cmp	r3, ip
   12cb4:	bne	12ca8 <sfbpf__scan_bytes+0x34>
   12cb8:	add	r2, r0, r5
   12cbc:	mov	r3, #0
   12cc0:	strb	r3, [r2, #1]
   12cc4:	strb	r3, [r0, r5]
   12cc8:	mov	r1, r6
   12ccc:	bl	12bcc <sfbpf__scan_buffer>
   12cd0:	cmp	r0, #0
   12cd4:	beq	12cf0 <sfbpf__scan_bytes+0x7c>
   12cd8:	mov	r3, #1
   12cdc:	str	r3, [r0, #20]
   12ce0:	pop	{r4, r5, r6, pc}
   12ce4:	ldr	r0, [pc, #16]	; 12cfc <sfbpf__scan_bytes+0x88>
   12ce8:	add	r0, pc, r0
   12cec:	bl	10f54 <yy_fatal_error>
   12cf0:	ldr	r0, [pc, #8]	; 12d00 <sfbpf__scan_bytes+0x8c>
   12cf4:	add	r0, pc, r0
   12cf8:	bl	10f54 <yy_fatal_error>
   12cfc:	.word	0x0000d464
   12d00:	.word	0x0000d484

00012d04 <sfbpf__scan_string>:
   12d04:	push	{r4, lr}
   12d08:	mov	r4, r0
   12d0c:	bl	e4c <strlen@plt>
   12d10:	mov	r1, r0
   12d14:	mov	r0, r4
   12d18:	bl	12c74 <sfbpf__scan_bytes>
   12d1c:	pop	{r4, pc}

00012d20 <sfbpf_get_debug>:
   12d20:	ldr	r3, [pc, #8]	; 12d30 <sfbpf_get_debug+0x10>
   12d24:	add	r3, pc, r3
   12d28:	ldr	r0, [r3, #48]	; 0x30
   12d2c:	bx	lr
   12d30:	.word	0x0001ee18

00012d34 <sfbpf_set_debug>:
   12d34:	ldr	r3, [pc, #8]	; 12d44 <sfbpf_set_debug+0x10>
   12d38:	add	r3, pc, r3
   12d3c:	str	r0, [r3, #48]	; 0x30
   12d40:	bx	lr
   12d44:	.word	0x0001ee04

00012d48 <sfbpf_lex_destroy>:
   12d48:	push	{r4, r5, r6, r7, r8, lr}
   12d4c:	ldr	r3, [pc, #140]	; 12de0 <sfbpf_lex_destroy+0x98>
   12d50:	add	r3, pc, r3
   12d54:	ldr	r4, [r3, #16]
   12d58:	cmp	r4, #0
   12d5c:	beq	12da8 <sfbpf_lex_destroy+0x60>
   12d60:	ldr	r3, [pc, #124]	; 12de4 <sfbpf_lex_destroy+0x9c>
   12d64:	add	r3, pc, r3
   12d68:	ldr	r3, [r3, #20]
   12d6c:	add	r5, r4, r3, lsl #2
   12d70:	ldr	r0, [r4, r3, lsl #2]
   12d74:	cmp	r0, #0
   12d78:	beq	12da8 <sfbpf_lex_destroy+0x60>
   12d7c:	mov	r7, #0
   12d80:	ldr	r6, [pc, #96]	; 12de8 <sfbpf_lex_destroy+0xa0>
   12d84:	add	r6, pc, r6
   12d88:	bl	1111c <sfbpf__delete_buffer>
   12d8c:	str	r7, [r5]
   12d90:	bl	12b4c <sfbpf_pop_buffer_state>
   12d94:	ldr	r3, [r6, #20]
   12d98:	add	r5, r4, r3, lsl #2
   12d9c:	ldr	r0, [r4, r3, lsl #2]
   12da0:	cmp	r0, #0
   12da4:	bne	12d88 <sfbpf_lex_destroy+0x40>
   12da8:	mov	r0, r4
   12dac:	bl	da4 <free@plt>
   12db0:	ldr	r3, [pc, #52]	; 12dec <sfbpf_lex_destroy+0xa4>
   12db4:	add	r3, pc, r3
   12db8:	mov	r0, #0
   12dbc:	str	r0, [r3, #16]
   12dc0:	str	r0, [r3, #20]
   12dc4:	str	r0, [r3, #36]	; 0x24
   12dc8:	str	r0, [r3, #4]
   12dcc:	str	r0, [r3, #40]	; 0x28
   12dd0:	str	r0, [r3]
   12dd4:	str	r0, [r3, #28]
   12dd8:	str	r0, [r3, #44]	; 0x2c
   12ddc:	pop	{r4, r5, r6, r7, r8, pc}
   12de0:	.word	0x0001edec
   12de4:	.word	0x0001edd8
   12de8:	.word	0x0001edb8
   12dec:	.word	0x0001ed88

00012df0 <sfbpf_alloc>:
   12df0:	push	{r4, lr}
   12df4:	bl	e1c <malloc@plt>
   12df8:	pop	{r4, pc}

00012dfc <sfbpf_realloc>:
   12dfc:	push	{r4, lr}
   12e00:	bl	dec <realloc@plt>
   12e04:	pop	{r4, pc}

00012e08 <sfbpf_free>:
   12e08:	push	{r4, lr}
   12e0c:	bl	da4 <free@plt>
   12e10:	pop	{r4, pc}

00012e14 <sf_lex_init>:
   12e14:	push	{r4, lr}
   12e18:	bl	12d04 <sfbpf__scan_string>
   12e1c:	ldr	r3, [pc, #8]	; 12e2c <sf_lex_init+0x18>
   12e20:	add	r3, pc, r3
   12e24:	str	r0, [r3, #52]	; 0x34
   12e28:	pop	{r4, pc}
   12e2c:	.word	0x0001ed1c

00012e30 <sf_lex_cleanup>:
   12e30:	push	{r4, lr}
   12e34:	ldr	r3, [pc, #36]	; 12e60 <sf_lex_cleanup+0x30>
   12e38:	add	r3, pc, r3
   12e3c:	ldr	r0, [r3, #52]	; 0x34
   12e40:	cmp	r0, #0
   12e44:	beq	12e4c <sf_lex_cleanup+0x1c>
   12e48:	bl	1111c <sfbpf__delete_buffer>
   12e4c:	mov	r2, #0
   12e50:	ldr	r3, [pc, #12]	; 12e64 <sf_lex_cleanup+0x34>
   12e54:	add	r3, pc, r3
   12e58:	str	r2, [r3, #52]	; 0x34
   12e5c:	pop	{r4, pc}
   12e60:	.word	0x0001ed04
   12e64:	.word	0x0001ece8

00012e68 <sfbpf_wrap>:
   12e68:	mov	r0, #1
   12e6c:	bx	lr

00012e70 <__udivsi3>:
   12e70:	subs	r2, r1, #1
   12e74:	bxeq	lr
   12e78:	bcc	13050 <__udivsi3+0x1e0>
   12e7c:	cmp	r0, r1
   12e80:	bls	13034 <__udivsi3+0x1c4>
   12e84:	tst	r1, r2
   12e88:	beq	13040 <__udivsi3+0x1d0>
   12e8c:	clz	r3, r0
   12e90:	clz	r2, r1
   12e94:	sub	r3, r2, r3
   12e98:	rsbs	r3, r3, #31
   12e9c:	addne	r3, r3, r3, lsl #1
   12ea0:	mov	r2, #0
   12ea4:	addne	pc, pc, r3, lsl #2
   12ea8:	nop			; (mov r0, r0)
   12eac:	cmp	r0, r1, lsl #31
   12eb0:	adc	r2, r2, r2
   12eb4:	subcs	r0, r0, r1, lsl #31
   12eb8:	cmp	r0, r1, lsl #30
   12ebc:	adc	r2, r2, r2
   12ec0:	subcs	r0, r0, r1, lsl #30
   12ec4:	cmp	r0, r1, lsl #29
   12ec8:	adc	r2, r2, r2
   12ecc:	subcs	r0, r0, r1, lsl #29
   12ed0:	cmp	r0, r1, lsl #28
   12ed4:	adc	r2, r2, r2
   12ed8:	subcs	r0, r0, r1, lsl #28
   12edc:	cmp	r0, r1, lsl #27
   12ee0:	adc	r2, r2, r2
   12ee4:	subcs	r0, r0, r1, lsl #27
   12ee8:	cmp	r0, r1, lsl #26
   12eec:	adc	r2, r2, r2
   12ef0:	subcs	r0, r0, r1, lsl #26
   12ef4:	cmp	r0, r1, lsl #25
   12ef8:	adc	r2, r2, r2
   12efc:	subcs	r0, r0, r1, lsl #25
   12f00:	cmp	r0, r1, lsl #24
   12f04:	adc	r2, r2, r2
   12f08:	subcs	r0, r0, r1, lsl #24
   12f0c:	cmp	r0, r1, lsl #23
   12f10:	adc	r2, r2, r2
   12f14:	subcs	r0, r0, r1, lsl #23
   12f18:	cmp	r0, r1, lsl #22
   12f1c:	adc	r2, r2, r2
   12f20:	subcs	r0, r0, r1, lsl #22
   12f24:	cmp	r0, r1, lsl #21
   12f28:	adc	r2, r2, r2
   12f2c:	subcs	r0, r0, r1, lsl #21
   12f30:	cmp	r0, r1, lsl #20
   12f34:	adc	r2, r2, r2
   12f38:	subcs	r0, r0, r1, lsl #20
   12f3c:	cmp	r0, r1, lsl #19
   12f40:	adc	r2, r2, r2
   12f44:	subcs	r0, r0, r1, lsl #19
   12f48:	cmp	r0, r1, lsl #18
   12f4c:	adc	r2, r2, r2
   12f50:	subcs	r0, r0, r1, lsl #18
   12f54:	cmp	r0, r1, lsl #17
   12f58:	adc	r2, r2, r2
   12f5c:	subcs	r0, r0, r1, lsl #17
   12f60:	cmp	r0, r1, lsl #16
   12f64:	adc	r2, r2, r2
   12f68:	subcs	r0, r0, r1, lsl #16
   12f6c:	cmp	r0, r1, lsl #15
   12f70:	adc	r2, r2, r2
   12f74:	subcs	r0, r0, r1, lsl #15
   12f78:	cmp	r0, r1, lsl #14
   12f7c:	adc	r2, r2, r2
   12f80:	subcs	r0, r0, r1, lsl #14
   12f84:	cmp	r0, r1, lsl #13
   12f88:	adc	r2, r2, r2
   12f8c:	subcs	r0, r0, r1, lsl #13
   12f90:	cmp	r0, r1, lsl #12
   12f94:	adc	r2, r2, r2
   12f98:	subcs	r0, r0, r1, lsl #12
   12f9c:	cmp	r0, r1, lsl #11
   12fa0:	adc	r2, r2, r2
   12fa4:	subcs	r0, r0, r1, lsl #11
   12fa8:	cmp	r0, r1, lsl #10
   12fac:	adc	r2, r2, r2
   12fb0:	subcs	r0, r0, r1, lsl #10
   12fb4:	cmp	r0, r1, lsl #9
   12fb8:	adc	r2, r2, r2
   12fbc:	subcs	r0, r0, r1, lsl #9
   12fc0:	cmp	r0, r1, lsl #8
   12fc4:	adc	r2, r2, r2
   12fc8:	subcs	r0, r0, r1, lsl #8
   12fcc:	cmp	r0, r1, lsl #7
   12fd0:	adc	r2, r2, r2
   12fd4:	subcs	r0, r0, r1, lsl #7
   12fd8:	cmp	r0, r1, lsl #6
   12fdc:	adc	r2, r2, r2
   12fe0:	subcs	r0, r0, r1, lsl #6
   12fe4:	cmp	r0, r1, lsl #5
   12fe8:	adc	r2, r2, r2
   12fec:	subcs	r0, r0, r1, lsl #5
   12ff0:	cmp	r0, r1, lsl #4
   12ff4:	adc	r2, r2, r2
   12ff8:	subcs	r0, r0, r1, lsl #4
   12ffc:	cmp	r0, r1, lsl #3
   13000:	adc	r2, r2, r2
   13004:	subcs	r0, r0, r1, lsl #3
   13008:	cmp	r0, r1, lsl #2
   1300c:	adc	r2, r2, r2
   13010:	subcs	r0, r0, r1, lsl #2
   13014:	cmp	r0, r1, lsl #1
   13018:	adc	r2, r2, r2
   1301c:	subcs	r0, r0, r1, lsl #1
   13020:	cmp	r0, r1
   13024:	adc	r2, r2, r2
   13028:	subcs	r0, r0, r1
   1302c:	mov	r0, r2
   13030:	bx	lr
   13034:	moveq	r0, #1
   13038:	movne	r0, #0
   1303c:	bx	lr
   13040:	clz	r2, r1
   13044:	rsb	r2, r2, #31
   13048:	lsr	r0, r0, r2
   1304c:	bx	lr
   13050:	cmp	r0, #0
   13054:	mvnne	r0, #0
   13058:	b	1307c <__aeabi_idiv0>

0001305c <__aeabi_uidivmod>:
   1305c:	cmp	r1, #0
   13060:	beq	13050 <__udivsi3+0x1e0>
   13064:	push	{r0, r1, lr}
   13068:	bl	12e70 <__udivsi3>
   1306c:	pop	{r1, r2, lr}
   13070:	mul	r3, r2, r0
   13074:	sub	r1, r1, r3
   13078:	bx	lr

0001307c <__aeabi_idiv0>:
   1307c:	push	{r1, lr}
   13080:	mov	r0, #8
   13084:	bl	d44 <raise@plt>
   13088:	pop	{r1, pc}

Disassembly of section .fini:

0001308c <_fini>:
   1308c:	push	{r3, lr}
   13090:	pop	{r3, pc}
