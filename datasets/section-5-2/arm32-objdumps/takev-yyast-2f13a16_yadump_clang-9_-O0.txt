
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

000104d8 <.init>:
   104d8:	push	{r3, lr}
   104dc:	bl	105dc <close@plt+0x48>
   104e0:	pop	{r3, pc}

Disassembly of section .plt:

000104e4 <free@plt-0x14>:
   104e4:	push	{lr}		; (str lr, [sp, #-4]!)
   104e8:	ldr	lr, [pc, #4]	; 104f4 <free@plt-0x4>
   104ec:	add	lr, pc, lr
   104f0:	ldr	pc, [lr, #8]!
   104f4:	andeq	r1, r1, ip, lsl #22

000104f8 <free@plt>:
   104f8:	add	ip, pc, #0, 12
   104fc:	add	ip, ip, #69632	; 0x11000
   10500:	ldr	pc, [ip, #2828]!	; 0xb0c

00010504 <strndup@plt>:
   10504:	add	ip, pc, #0, 12
   10508:	add	ip, ip, #69632	; 0x11000
   1050c:	ldr	pc, [ip, #2820]!	; 0xb04

00010510 <perror@plt>:
   10510:	add	ip, pc, #0, 12
   10514:	add	ip, ip, #69632	; 0x11000
   10518:	ldr	pc, [ip, #2812]!	; 0xafc

0001051c <__libc_start_main@plt>:
   1051c:	add	ip, pc, #0, 12
   10520:	add	ip, ip, #69632	; 0x11000
   10524:	ldr	pc, [ip, #2804]!	; 0xaf4

00010528 <__fxstat@plt>:
   10528:	add	ip, pc, #0, 12
   1052c:	add	ip, ip, #69632	; 0x11000
   10530:	ldr	pc, [ip, #2796]!	; 0xaec

00010534 <__gmon_start__@plt>:
   10534:	add	ip, pc, #0, 12
   10538:	add	ip, ip, #69632	; 0x11000
   1053c:	ldr	pc, [ip, #2788]!	; 0xae4

00010540 <open@plt>:
   10540:	add	ip, pc, #0, 12
   10544:	add	ip, ip, #69632	; 0x11000
   10548:	ldr	pc, [ip, #2780]!	; 0xadc

0001054c <ntohl@plt>:
   1054c:	add	ip, pc, #0, 12
   10550:	add	ip, ip, #69632	; 0x11000
   10554:	ldr	pc, [ip, #2772]!	; 0xad4

00010558 <exit@plt>:
   10558:	add	ip, pc, #0, 12
   1055c:	add	ip, ip, #69632	; 0x11000
   10560:	ldr	pc, [ip, #2764]!	; 0xacc

00010564 <mmap@plt>:
   10564:	add	ip, pc, #0, 12
   10568:	add	ip, ip, #69632	; 0x11000
   1056c:	ldr	pc, [ip, #2756]!	; 0xac4

00010570 <fprintf@plt>:
   10570:	add	ip, pc, #0, 12
   10574:	add	ip, ip, #69632	; 0x11000
   10578:	ldr	pc, [ip, #2748]!	; 0xabc

0001057c <munmap@plt>:
   1057c:	add	ip, pc, #0, 12
   10580:	add	ip, ip, #69632	; 0x11000
   10584:	ldr	pc, [ip, #2740]!	; 0xab4

00010588 <abort@plt>:
   10588:	add	ip, pc, #0, 12
   1058c:	add	ip, ip, #69632	; 0x11000
   10590:	ldr	pc, [ip, #2732]!	; 0xaac

00010594 <close@plt>:
   10594:	add	ip, pc, #0, 12
   10598:	add	ip, ip, #69632	; 0x11000
   1059c:	ldr	pc, [ip, #2724]!	; 0xaa4

Disassembly of section .text:

000105a0 <.text>:
   105a0:	mov	fp, #0
   105a4:	mov	lr, #0
   105a8:	pop	{r1}		; (ldr r1, [sp], #4)
   105ac:	mov	r2, sp
   105b0:	push	{r2}		; (str r2, [sp, #-4]!)
   105b4:	push	{r0}		; (str r0, [sp, #-4]!)
   105b8:	ldr	ip, [pc, #16]	; 105d0 <close@plt+0x3c>
   105bc:	push	{ip}		; (str ip, [sp, #-4]!)
   105c0:	ldr	r0, [pc, #12]	; 105d4 <close@plt+0x40>
   105c4:	ldr	r3, [pc, #12]	; 105d8 <close@plt+0x44>
   105c8:	bl	1051c <__libc_start_main@plt>
   105cc:	bl	10588 <abort@plt>
   105d0:	andeq	r0, r1, r0, lsr pc
   105d4:	andeq	r0, r1, r0, asr #26
   105d8:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   105dc:	ldr	r3, [pc, #20]	; 105f8 <close@plt+0x64>
   105e0:	ldr	r2, [pc, #20]	; 105fc <close@plt+0x68>
   105e4:	add	r3, pc, r3
   105e8:	ldr	r2, [r3, r2]
   105ec:	cmp	r2, #0
   105f0:	bxeq	lr
   105f4:	b	10534 <__gmon_start__@plt>
   105f8:	andeq	r1, r1, r4, lsl sl
   105fc:	andeq	r0, r0, r8, asr #32
   10600:	ldr	r0, [pc, #24]	; 10620 <close@plt+0x8c>
   10604:	ldr	r3, [pc, #24]	; 10624 <close@plt+0x90>
   10608:	cmp	r3, r0
   1060c:	bxeq	lr
   10610:	ldr	r3, [pc, #16]	; 10628 <close@plt+0x94>
   10614:	cmp	r3, #0
   10618:	bxeq	lr
   1061c:	bx	r3
   10620:	andeq	r2, r2, r8, asr r0
   10624:	andeq	r2, r2, r8, asr r0
   10628:	andeq	r0, r0, r0
   1062c:	ldr	r0, [pc, #36]	; 10658 <close@plt+0xc4>
   10630:	ldr	r1, [pc, #36]	; 1065c <close@plt+0xc8>
   10634:	sub	r1, r1, r0
   10638:	asr	r1, r1, #2
   1063c:	add	r1, r1, r1, lsr #31
   10640:	asrs	r1, r1, #1
   10644:	bxeq	lr
   10648:	ldr	r3, [pc, #16]	; 10660 <close@plt+0xcc>
   1064c:	cmp	r3, #0
   10650:	bxeq	lr
   10654:	bx	r3
   10658:	andeq	r2, r2, r8, asr r0
   1065c:	andeq	r2, r2, r8, asr r0
   10660:	andeq	r0, r0, r0
   10664:	push	{r4, lr}
   10668:	ldr	r4, [pc, #24]	; 10688 <close@plt+0xf4>
   1066c:	ldrb	r3, [r4]
   10670:	cmp	r3, #0
   10674:	popne	{r4, pc}
   10678:	bl	10600 <close@plt+0x6c>
   1067c:	mov	r3, #1
   10680:	strb	r3, [r4]
   10684:	pop	{r4, pc}
   10688:	andeq	r2, r2, r8, asr r0
   1068c:	b	1062c <close@plt+0x98>
   10690:	push	{fp, lr}
   10694:	mov	fp, sp
   10698:	sub	sp, sp, #8
   1069c:	str	r0, [sp, #4]
   106a0:	movw	r0, #0
   106a4:	str	r0, [sp]
   106a8:	ldr	r0, [sp]
   106ac:	ldr	r1, [sp, #4]
   106b0:	cmp	r0, r1
   106b4:	bcs	106e0 <close@plt+0x14c>
   106b8:	ldr	r0, [pc, #40]	; 106e8 <close@plt+0x154>
   106bc:	add	r1, pc, r0
   106c0:	ldr	r0, [pc, #36]	; 106ec <close@plt+0x158>
   106c4:	ldr	r0, [pc, r0]
   106c8:	ldr	r0, [r0]
   106cc:	bl	10570 <fprintf@plt>
   106d0:	ldr	r0, [sp]
   106d4:	add	r0, r0, #1
   106d8:	str	r0, [sp]
   106dc:	b	106a8 <close@plt+0x114>
   106e0:	mov	sp, fp
   106e4:	pop	{fp, pc}
   106e8:	andeq	r0, r0, r8, lsl r9
   106ec:	andeq	r1, r1, r0, lsl #19
   106f0:	push	{r4, r5, r6, r7, fp, lr}
   106f4:	add	fp, sp, #16
   106f8:	sub	sp, sp, #40	; 0x28
   106fc:	ldr	r2, [pc, #128]	; 10784 <close@plt+0x1f0>
   10700:	add	r2, pc, r2
   10704:	str	r0, [fp, #-24]	; 0xffffffe8
   10708:	str	r1, [fp, #-20]	; 0xffffffec
   1070c:	ldr	r0, [pc, #116]	; 10788 <close@plt+0x1f4>
   10710:	ldr	r0, [pc, r0]
   10714:	ldr	r0, [r0]
   10718:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1071c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10720:	lsr	ip, r3, #24
   10724:	ubfx	lr, r3, #16, #8
   10728:	ubfx	r4, r3, #8, #8
   1072c:	uxtb	r3, r3
   10730:	lsr	r5, r1, #24
   10734:	ubfx	r6, r1, #16, #8
   10738:	ubfx	r7, r1, #8, #8
   1073c:	and	r1, r1, #255	; 0xff
   10740:	and	r1, r1, #255	; 0xff
   10744:	str	r1, [sp, #28]
   10748:	mov	r1, r2
   1074c:	mov	r2, ip
   10750:	str	r3, [sp, #24]
   10754:	mov	r3, lr
   10758:	str	r4, [sp]
   1075c:	ldr	ip, [sp, #24]
   10760:	str	ip, [sp, #4]
   10764:	str	r5, [sp, #8]
   10768:	str	r6, [sp, #12]
   1076c:	str	r7, [sp, #16]
   10770:	ldr	lr, [sp, #28]
   10774:	str	lr, [sp, #20]
   10778:	bl	10570 <fprintf@plt>
   1077c:	sub	sp, fp, #16
   10780:	pop	{r4, r5, r6, r7, fp, pc}
   10784:	andeq	r0, r0, r8, asr #16
   10788:	andeq	r1, r1, r4, lsr r9
   1078c:	push	{r4, sl, fp, lr}
   10790:	add	fp, sp, #8
   10794:	sub	sp, sp, #136	; 0x88
   10798:	str	r0, [fp, #-12]
   1079c:	str	r1, [fp, #-16]
   107a0:	str	r2, [fp, #-20]	; 0xffffffec
   107a4:	ldr	r0, [fp, #-16]
   107a8:	cmp	r0, #32
   107ac:	bcs	107d8 <close@plt+0x244>
   107b0:	ldr	r0, [pc, #1292]	; 10cc4 <close@plt+0x730>
   107b4:	add	r1, pc, r0
   107b8:	ldr	r0, [pc, #1288]	; 10cc8 <close@plt+0x734>
   107bc:	ldr	r0, [pc, r0]
   107c0:	ldr	r0, [r0]
   107c4:	bl	10570 <fprintf@plt>
   107c8:	movw	r1, #1
   107cc:	str	r0, [sp, #72]	; 0x48
   107d0:	mov	r0, r1
   107d4:	bl	10558 <exit@plt>
   107d8:	ldr	r0, [fp, #-12]
   107dc:	str	r0, [fp, #-24]	; 0xffffffe8
   107e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   107e4:	ldr	r1, [r0]
   107e8:	ldr	r0, [r0, #4]
   107ec:	str	r0, [sp, #68]	; 0x44
   107f0:	mov	r0, r1
   107f4:	ldr	r1, [sp, #68]	; 0x44
   107f8:	bl	10cf0 <close@plt+0x75c>
   107fc:	str	r1, [fp, #-28]	; 0xffffffe4
   10800:	str	r0, [fp, #-32]	; 0xffffffe0
   10804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10808:	ldrb	r0, [r0, #31]
   1080c:	strb	r0, [fp, #-33]	; 0xffffffdf
   10810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10814:	ldr	r0, [r0, #16]
   10818:	bl	1054c <ntohl@plt>
   1081c:	str	r0, [fp, #-48]	; 0xffffffd0
   10820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10824:	ldr	r0, [r0, #20]
   10828:	bl	1054c <ntohl@plt>
   1082c:	str	r0, [fp, #-44]	; 0xffffffd4
   10830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10834:	ldr	r0, [r0, #24]
   10838:	bl	1054c <ntohl@plt>
   1083c:	str	r0, [fp, #-40]	; 0xffffffd8
   10840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10844:	ldr	r1, [r0, #8]
   10848:	ldr	r0, [r0, #12]
   1084c:	str	r0, [sp, #64]	; 0x40
   10850:	mov	r0, r1
   10854:	ldr	r1, [sp, #64]	; 0x40
   10858:	bl	10cf0 <close@plt+0x75c>
   1085c:	sub	r0, r0, #32
   10860:	str	r0, [fp, #-52]	; 0xffffffcc
   10864:	movw	r0, #0
   10868:	str	r0, [fp, #-56]	; 0xffffffc8
   1086c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10870:	ldr	r2, [fp, #-16]
   10874:	cmp	r0, r2
   10878:	bls	108d4 <close@plt+0x340>
   1087c:	ldr	r0, [pc, #1084]	; 10cc0 <close@plt+0x72c>
   10880:	add	r0, pc, r0
   10884:	ldr	r1, [pc, #1088]	; 10ccc <close@plt+0x738>
   10888:	ldr	r1, [pc, r1]
   1088c:	ldr	r1, [r1]
   10890:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10894:	mov	r3, #0
   10898:	ldr	ip, [fp, #-16]
   1089c:	mov	lr, r3
   108a0:	mov	r4, sp
   108a4:	str	lr, [r4, #4]
   108a8:	str	ip, [r4]
   108ac:	ldr	ip, [pc, #1052]	; 10cd0 <close@plt+0x73c>
   108b0:	add	ip, pc, ip
   108b4:	str	r0, [sp, #60]	; 0x3c
   108b8:	mov	r0, r1
   108bc:	mov	r1, ip
   108c0:	bl	10570 <fprintf@plt>
   108c4:	movw	r1, #1
   108c8:	str	r0, [sp, #56]	; 0x38
   108cc:	mov	r0, r1
   108d0:	bl	10558 <exit@plt>
   108d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   108d8:	cmn	r0, #1
   108dc:	beq	1090c <close@plt+0x378>
   108e0:	ldr	r0, [pc, #904]	; 10c70 <close@plt+0x6dc>
   108e4:	add	r1, pc, r0
   108e8:	ldr	r0, [pc, #900]	; 10c74 <close@plt+0x6e0>
   108ec:	ldr	r0, [pc, r0]
   108f0:	ldr	r0, [r0]
   108f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   108f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   108fc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   10900:	str	ip, [sp]
   10904:	bl	10570 <fprintf@plt>
   10908:	b	10924 <close@plt+0x390>
   1090c:	ldr	r0, [pc, #852]	; 10c68 <close@plt+0x6d4>
   10910:	add	r1, pc, r0
   10914:	ldr	r0, [pc, #848]	; 10c6c <close@plt+0x6d8>
   10918:	ldr	r0, [pc, r0]
   1091c:	ldr	r0, [r0]
   10920:	bl	10570 <fprintf@plt>
   10924:	ldr	r0, [pc, #936]	; 10cd4 <close@plt+0x740>
   10928:	ldr	r0, [pc, r0]
   1092c:	ldr	r1, [r0]
   10930:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10934:	ldr	r3, [pc, #924]	; 10cd8 <close@plt+0x744>
   10938:	add	r3, pc, r3
   1093c:	mov	ip, #0
   10940:	str	r0, [sp, #52]	; 0x34
   10944:	mov	r0, r1
   10948:	mov	r1, r3
   1094c:	mov	r3, ip
   10950:	bl	10570 <fprintf@plt>
   10954:	ldr	r1, [fp, #-20]	; 0xffffffec
   10958:	str	r0, [sp, #48]	; 0x30
   1095c:	mov	r0, r1
   10960:	bl	10690 <close@plt+0xfc>
   10964:	ldr	r0, [sp, #52]	; 0x34
   10968:	ldr	r0, [r0]
   1096c:	ldr	r1, [pc, #872]	; 10cdc <close@plt+0x748>
   10970:	add	r1, pc, r1
   10974:	bl	10570 <fprintf@plt>
   10978:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1097c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10980:	str	r0, [sp, #44]	; 0x2c
   10984:	mov	r0, r1
   10988:	mov	r1, r2
   1098c:	bl	106f0 <close@plt+0x15c>
   10990:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   10994:	mov	r1, r0
   10998:	cmp	r0, #6
   1099c:	str	r1, [sp, #40]	; 0x28
   109a0:	bhi	10c24 <close@plt+0x690>
   109a4:	add	r0, pc, #8
   109a8:	ldr	r1, [sp, #40]	; 0x28
   109ac:	ldr	r2, [r0, r1, lsl #2]
   109b0:	add	pc, r0, r2
   109b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   109b8:	andeq	r0, r0, r0, ror r2
   109bc:	andeq	r0, r0, ip, lsl #4
   109c0:	andeq	r0, r0, ip, lsr #3
   109c4:	andeq	r0, r0, ip, lsl r0
   109c8:	andeq	r0, r0, r0, lsr #1
   109cc:	andeq	r0, r0, r4, lsr #2
   109d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   109d4:	cmp	r0, #8
   109d8:	bne	10a34 <close@plt+0x4a0>
   109dc:	ldr	r0, [pc, #720]	; 10cb4 <close@plt+0x720>
   109e0:	add	r0, pc, r0
   109e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   109e8:	vldr	d16, [r1, #32]
   109ec:	vstr	d16, [fp, #-64]	; 0xffffffc0
   109f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   109f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   109f8:	str	r0, [sp, #36]	; 0x24
   109fc:	mov	r0, r1
   10a00:	mov	r1, r2
   10a04:	bl	10cf0 <close@plt+0x75c>
   10a08:	str	r1, [fp, #-60]	; 0xffffffc4
   10a0c:	str	r0, [fp, #-64]	; 0xffffffc0
   10a10:	ldr	r0, [pc, #712]	; 10ce0 <close@plt+0x74c>
   10a14:	ldr	r0, [pc, r0]
   10a18:	ldr	r0, [r0]
   10a1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10a20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10a24:	ldr	r1, [pc, #696]	; 10ce4 <close@plt+0x750>
   10a28:	add	r1, pc, r1
   10a2c:	bl	10570 <fprintf@plt>
   10a30:	b	10a50 <close@plt+0x4bc>
   10a34:	ldr	r0, [pc, #624]	; 10cac <close@plt+0x718>
   10a38:	add	r1, pc, r0
   10a3c:	ldr	r0, [pc, #620]	; 10cb0 <close@plt+0x71c>
   10a40:	ldr	r0, [pc, r0]
   10a44:	ldr	r0, [r0]
   10a48:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10a4c:	bl	10570 <fprintf@plt>
   10a50:	b	10c3c <close@plt+0x6a8>
   10a54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10a58:	cmp	r0, #8
   10a5c:	bne	10ab8 <close@plt+0x524>
   10a60:	ldr	r0, [pc, #576]	; 10ca8 <close@plt+0x714>
   10a64:	add	r0, pc, r0
   10a68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10a6c:	vldr	d16, [r1, #32]
   10a70:	vstr	d16, [fp, #-64]	; 0xffffffc0
   10a74:	ldr	r1, [fp, #-64]	; 0xffffffc0
   10a78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   10a7c:	str	r0, [sp, #32]
   10a80:	mov	r0, r1
   10a84:	mov	r1, r2
   10a88:	bl	10cf0 <close@plt+0x75c>
   10a8c:	str	r1, [fp, #-60]	; 0xffffffc4
   10a90:	str	r0, [fp, #-64]	; 0xffffffc0
   10a94:	ldr	r0, [pc, #588]	; 10ce8 <close@plt+0x754>
   10a98:	ldr	r0, [pc, r0]
   10a9c:	ldr	r0, [r0]
   10aa0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10aa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10aa8:	ldr	r1, [pc, #572]	; 10cec <close@plt+0x758>
   10aac:	add	r1, pc, r1
   10ab0:	bl	10570 <fprintf@plt>
   10ab4:	b	10ad4 <close@plt+0x540>
   10ab8:	ldr	r0, [pc, #480]	; 10ca0 <close@plt+0x70c>
   10abc:	add	r1, pc, r0
   10ac0:	ldr	r0, [pc, #476]	; 10ca4 <close@plt+0x710>
   10ac4:	ldr	r0, [pc, r0]
   10ac8:	ldr	r0, [r0]
   10acc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10ad0:	bl	10570 <fprintf@plt>
   10ad4:	b	10c3c <close@plt+0x6a8>
   10ad8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10adc:	cmp	r0, #8
   10ae0:	bne	10b40 <close@plt+0x5ac>
   10ae4:	ldr	r0, [pc, #428]	; 10c98 <close@plt+0x704>
   10ae8:	add	r1, pc, r0
   10aec:	ldr	r0, [pc, #424]	; 10c9c <close@plt+0x708>
   10af0:	ldr	r0, [pc, r0]
   10af4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10af8:	vldr	d16, [r2, #32]
   10afc:	vstr	d16, [fp, #-64]	; 0xffffffc0
   10b00:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10b04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10b08:	str	r0, [sp, #28]
   10b0c:	mov	r0, r2
   10b10:	str	r1, [sp, #24]
   10b14:	mov	r1, r3
   10b18:	bl	10cf0 <close@plt+0x75c>
   10b1c:	str	r1, [fp, #-60]	; 0xffffffc4
   10b20:	str	r0, [fp, #-64]	; 0xffffffc0
   10b24:	ldr	r0, [sp, #28]
   10b28:	ldr	r0, [r0]
   10b2c:	vldr	d16, [fp, #-64]	; 0xffffffc0
   10b30:	ldr	r1, [sp, #24]
   10b34:	vmov	r2, r3, d16
   10b38:	bl	10570 <fprintf@plt>
   10b3c:	b	10b5c <close@plt+0x5c8>
   10b40:	ldr	r0, [pc, #328]	; 10c90 <close@plt+0x6fc>
   10b44:	add	r1, pc, r0
   10b48:	ldr	r0, [pc, #324]	; 10c94 <close@plt+0x700>
   10b4c:	ldr	r0, [pc, r0]
   10b50:	ldr	r0, [r0]
   10b54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10b58:	bl	10570 <fprintf@plt>
   10b5c:	b	10c3c <close@plt+0x6a8>
   10b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b64:	add	r0, r0, #32
   10b68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10b6c:	bl	10504 <strndup@plt>
   10b70:	ldr	r1, [pc, #272]	; 10c88 <close@plt+0x6f4>
   10b74:	add	r1, pc, r1
   10b78:	ldr	r2, [pc, #268]	; 10c8c <close@plt+0x6f8>
   10b7c:	ldr	r2, [pc, r2]
   10b80:	str	r0, [fp, #-68]	; 0xffffffbc
   10b84:	ldr	r0, [r2]
   10b88:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10b8c:	bl	10570 <fprintf@plt>
   10b90:	ldr	r1, [fp, #-68]	; 0xffffffbc
   10b94:	str	r0, [sp, #20]
   10b98:	mov	r0, r1
   10b9c:	bl	104f8 <free@plt>
   10ba0:	b	10c3c <close@plt+0x6a8>
   10ba4:	ldr	r0, [pc, #212]	; 10c80 <close@plt+0x6ec>
   10ba8:	add	r1, pc, r0
   10bac:	ldr	r0, [pc, #208]	; 10c84 <close@plt+0x6f0>
   10bb0:	ldr	r0, [pc, r0]
   10bb4:	ldr	r0, [r0]
   10bb8:	bl	10570 <fprintf@plt>
   10bbc:	b	10c3c <close@plt+0x6a8>
   10bc0:	ldr	r0, [pc, #176]	; 10c78 <close@plt+0x6e4>
   10bc4:	add	r1, pc, r0
   10bc8:	ldr	r0, [pc, #172]	; 10c7c <close@plt+0x6e8>
   10bcc:	ldr	r0, [pc, r0]
   10bd0:	ldr	r0, [r0]
   10bd4:	bl	10570 <fprintf@plt>
   10bd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10bdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10be0:	cmp	r0, r1
   10be4:	bcs	10c20 <close@plt+0x68c>
   10be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10bec:	add	r0, r0, #32
   10bf0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10bf4:	add	r0, r0, r1
   10bf8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10bfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   10c00:	sub	r1, r1, r2
   10c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   10c08:	add	r2, r2, #1
   10c0c:	bl	1078c <close@plt+0x1f8>
   10c10:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10c14:	add	r0, r1, r0
   10c18:	str	r0, [fp, #-56]	; 0xffffffc8
   10c1c:	b	10bd8 <close@plt+0x644>
   10c20:	b	10c3c <close@plt+0x6a8>
   10c24:	ldr	r0, [pc, #140]	; 10cb8 <close@plt+0x724>
   10c28:	add	r1, pc, r0
   10c2c:	ldr	r0, [pc, #136]	; 10cbc <close@plt+0x728>
   10c30:	ldr	r0, [pc, r0]
   10c34:	ldr	r0, [r0]
   10c38:	bl	10570 <fprintf@plt>
   10c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c40:	ldr	r1, [r0, #8]
   10c44:	ldr	r0, [r0, #12]
   10c48:	str	r0, [sp, #16]
   10c4c:	mov	r0, r1
   10c50:	ldr	r1, [sp, #16]
   10c54:	bl	10cf0 <close@plt+0x75c>
   10c58:	str	r1, [sp, #12]
   10c5c:	bl	10d20 <close@plt+0x78c>
   10c60:	sub	sp, fp, #8
   10c64:	pop	{r4, sl, fp, pc}
   10c68:			; <UNDEFINED> instruction: 0x000006bb
   10c6c:	andeq	r1, r1, ip, lsr #14
   10c70:	ldrdeq	r0, [r0], -r8
   10c74:	andeq	r1, r1, r8, asr r7
   10c78:	andeq	r0, r0, ip, asr #8
   10c7c:	andeq	r1, r1, r8, ror r4
   10c80:	andeq	r0, r0, sl, ror #8
   10c84:	muleq	r1, r4, r4
   10c88:	muleq	r0, r7, r4
   10c8c:	andeq	r1, r1, r8, asr #9
   10c90:	andeq	r0, r0, r0, asr #9
   10c94:	strdeq	r1, [r1], -r8
   10c98:	andeq	r0, r0, r6, lsl r5
   10c9c:	andeq	r1, r1, r4, asr r5
   10ca0:	andeq	r0, r0, fp, lsr r5
   10ca4:	andeq	r1, r1, r0, lsl #11
   10ca8:	andeq	r0, r0, fp, lsl #11
   10cac:			; <UNDEFINED> instruction: 0x000005b0
   10cb0:	andeq	r1, r1, r4, lsl #12
   10cb4:	andeq	r0, r0, r0, lsl #12
   10cb8:	strdeq	r0, [r0], -r1
   10cbc:	andeq	r1, r1, ip, lsl #8
   10cc0:	andeq	r0, r0, r3, lsl #14
   10cc4:	andeq	r0, r0, r7, lsr #15
   10cc8:	andeq	r1, r1, r8, lsl #17
   10ccc:			; <UNDEFINED> instruction: 0x000117bc
   10cd0:	ldrdeq	r0, [r0], -r3
   10cd4:	andeq	r1, r1, ip, lsl r7
   10cd8:	muleq	r0, pc, r6	; <UNPREDICTABLE>
   10cdc:	andeq	r0, r0, r5, ror #12
   10ce0:	andeq	r1, r1, r0, lsr r6
   10ce4:			; <UNDEFINED> instruction: 0x000005b8
   10ce8:	andeq	r1, r1, ip, lsr #11
   10cec:	andeq	r0, r0, r3, asr #10
   10cf0:	sub	sp, sp, #16
   10cf4:	str	r0, [sp, #8]
   10cf8:	str	r1, [sp, #12]
   10cfc:	ldr	r0, [sp, #8]
   10d00:	ldr	r1, [sp, #12]
   10d04:	rev	r1, r1
   10d08:	rev	r0, r0
   10d0c:	str	r0, [sp, #4]
   10d10:	mov	r0, r1
   10d14:	ldr	r1, [sp, #4]
   10d18:	add	sp, sp, #16
   10d1c:	bx	lr
   10d20:	sub	sp, sp, #4
   10d24:	str	r0, [sp]
   10d28:	ldr	r0, [sp]
   10d2c:	add	r0, r0, #7
   10d30:	mvn	r1, #7
   10d34:	and	r0, r0, r1
   10d38:	add	sp, sp, #4
   10d3c:	bx	lr
   10d40:	push	{fp, lr}
   10d44:	mov	fp, sp
   10d48:	sub	sp, sp, #136	; 0x88
   10d4c:	str	r0, [fp, #-4]
   10d50:	str	r1, [fp, #-8]
   10d54:	ldr	r0, [fp, #-4]
   10d58:	cmp	r0, #2
   10d5c:	beq	10d88 <close@plt+0x7f4>
   10d60:	ldr	r0, [pc, #352]	; 10ec8 <close@plt+0x934>
   10d64:	add	r1, pc, r0
   10d68:	ldr	r0, [pc, #348]	; 10ecc <close@plt+0x938>
   10d6c:	ldr	r0, [pc, r0]
   10d70:	ldr	r0, [r0]
   10d74:	bl	10570 <fprintf@plt>
   10d78:	movw	r1, #1
   10d7c:	str	r0, [sp, #20]
   10d80:	mov	r0, r1
   10d84:	bl	10558 <exit@plt>
   10d88:	ldr	r0, [fp, #-8]
   10d8c:	ldr	r0, [r0, #4]
   10d90:	movw	r1, #0
   10d94:	bl	10540 <open@plt>
   10d98:	str	r0, [fp, #-12]
   10d9c:	cmn	r0, #1
   10da0:	bne	10db8 <close@plt+0x824>
   10da4:	ldr	r0, [pc, #280]	; 10ec4 <close@plt+0x930>
   10da8:	add	r0, pc, r0
   10dac:	bl	10510 <perror@plt>
   10db0:	movw	r0, #1
   10db4:	bl	10558 <exit@plt>
   10db8:	ldr	r0, [fp, #-12]
   10dbc:	add	r1, sp, #32
   10dc0:	bl	10f34 <close@plt+0x9a0>
   10dc4:	cmn	r0, #1
   10dc8:	bne	10de0 <close@plt+0x84c>
   10dcc:	ldr	r0, [pc, #236]	; 10ec0 <close@plt+0x92c>
   10dd0:	add	r0, pc, r0
   10dd4:	bl	10510 <perror@plt>
   10dd8:	movw	r0, #1
   10ddc:	bl	10558 <exit@plt>
   10de0:	ldr	r0, [sp, #76]	; 0x4c
   10de4:	str	r0, [sp, #24]
   10de8:	ldr	r1, [sp, #24]
   10dec:	ldr	r0, [fp, #-12]
   10df0:	movw	r2, #0
   10df4:	str	r0, [sp, #16]
   10df8:	mov	r0, r2
   10dfc:	movw	r3, #1
   10e00:	str	r2, [sp, #12]
   10e04:	mov	r2, r3
   10e08:	ldr	ip, [sp, #16]
   10e0c:	str	ip, [sp]
   10e10:	ldr	lr, [sp, #12]
   10e14:	str	lr, [sp, #4]
   10e18:	bl	10564 <mmap@plt>
   10e1c:	str	r0, [sp, #28]
   10e20:	mvn	r1, #0
   10e24:	cmp	r0, r1
   10e28:	bne	10e40 <close@plt+0x8ac>
   10e2c:	ldr	r0, [pc, #136]	; 10ebc <close@plt+0x928>
   10e30:	add	r0, pc, r0
   10e34:	bl	10510 <perror@plt>
   10e38:	movw	r0, #1
   10e3c:	bl	10558 <exit@plt>
   10e40:	ldr	r0, [sp, #28]
   10e44:	ldr	r1, [sp, #24]
   10e48:	movw	r2, #0
   10e4c:	bl	1078c <close@plt+0x1f8>
   10e50:	ldr	r1, [sp, #28]
   10e54:	ldr	r2, [sp, #24]
   10e58:	str	r0, [sp, #8]
   10e5c:	mov	r0, r1
   10e60:	mov	r1, r2
   10e64:	bl	1057c <munmap@plt>
   10e68:	cmn	r0, #1
   10e6c:	bne	10e84 <close@plt+0x8f0>
   10e70:	ldr	r0, [pc, #64]	; 10eb8 <close@plt+0x924>
   10e74:	add	r0, pc, r0
   10e78:	bl	10510 <perror@plt>
   10e7c:	movw	r0, #1
   10e80:	bl	10558 <exit@plt>
   10e84:	ldr	r0, [fp, #-12]
   10e88:	bl	10594 <close@plt>
   10e8c:	cmn	r0, #1
   10e90:	bne	10ea8 <close@plt+0x914>
   10e94:	ldr	r0, [pc, #24]	; 10eb4 <close@plt+0x920>
   10e98:	add	r0, pc, r0
   10e9c:	bl	10510 <perror@plt>
   10ea0:	movw	r0, #1
   10ea4:	bl	10558 <exit@plt>
   10ea8:	movw	r0, #0
   10eac:	mov	sp, fp
   10eb0:	pop	{fp, pc}
   10eb4:	andeq	r0, r0, r3, lsr #4
   10eb8:	andeq	r0, r0, r1, lsr #4
   10ebc:	andeq	r0, r0, r3, asr #4
   10ec0:	andeq	r0, r0, sl, lsl #5
   10ec4:	muleq	r0, sp, r2
   10ec8:	andeq	r0, r0, r1, asr #5
   10ecc:	ldrdeq	r1, [r1], -r0
   10ed0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ed4:	mov	r7, r0
   10ed8:	ldr	r6, [pc, #72]	; 10f28 <close@plt+0x994>
   10edc:	ldr	r5, [pc, #72]	; 10f2c <close@plt+0x998>
   10ee0:	add	r6, pc, r6
   10ee4:	add	r5, pc, r5
   10ee8:	sub	r6, r6, r5
   10eec:	mov	r8, r1
   10ef0:	mov	r9, r2
   10ef4:	bl	104d8 <free@plt-0x20>
   10ef8:	asrs	r6, r6, #2
   10efc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f00:	mov	r4, #0
   10f04:	add	r4, r4, #1
   10f08:	ldr	r3, [r5], #4
   10f0c:	mov	r2, r9
   10f10:	mov	r1, r8
   10f14:	mov	r0, r7
   10f18:	blx	r3
   10f1c:	cmp	r6, r4
   10f20:	bne	10f04 <close@plt+0x970>
   10f24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f28:	andeq	r1, r1, r4, lsr #32
   10f2c:	andeq	r1, r1, ip, lsl r0
   10f30:	bx	lr
   10f34:	mov	r2, r1
   10f38:	mov	r1, r0
   10f3c:	mov	r0, #3
   10f40:	b	10528 <__fxstat@plt>

Disassembly of section .fini:

00010f44 <.fini>:
   10f44:	push	{r3, lr}
   10f48:	pop	{r3, pc}
