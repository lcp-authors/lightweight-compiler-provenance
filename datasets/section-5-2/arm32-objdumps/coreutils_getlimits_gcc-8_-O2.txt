
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010b9c <.init>:
   10b9c:	push	{r3, lr}
   10ba0:	bl	11804 <__snprintf_chk@plt+0xa14>
   10ba4:	pop	{r3, pc}

Disassembly of section .plt:

00010ba8 <calloc@plt-0x14>:
   10ba8:	push	{lr}		; (str lr, [sp, #-4]!)
   10bac:	ldr	lr, [pc, #4]	; 10bb8 <calloc@plt-0x4>
   10bb0:	add	lr, pc, lr
   10bb4:	ldr	pc, [lr, #8]!
   10bb8:	andeq	r6, r1, r8, asr #8

00010bbc <calloc@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #90112	; 0x16000
   10bc4:	ldr	pc, [ip, #1096]!	; 0x448

00010bc8 <fputs_unlocked@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #90112	; 0x16000
   10bd0:	ldr	pc, [ip, #1088]!	; 0x440

00010bd4 <strcmp@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #90112	; 0x16000
   10bdc:	ldr	pc, [ip, #1080]!	; 0x438

00010be0 <fflush@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #90112	; 0x16000
   10be8:	ldr	pc, [ip, #1072]!	; 0x430

00010bec <free@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #90112	; 0x16000
   10bf4:	ldr	pc, [ip, #1064]!	; 0x428

00010bf8 <_exit@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #90112	; 0x16000
   10c00:	ldr	pc, [ip, #1056]!	; 0x420

00010c04 <memcpy@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #90112	; 0x16000
   10c0c:	ldr	pc, [ip, #1048]!	; 0x418

00010c10 <mbsinit@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #90112	; 0x16000
   10c18:	ldr	pc, [ip, #1040]!	; 0x410

00010c1c <strtold@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #90112	; 0x16000
   10c24:	ldr	pc, [ip, #1032]!	; 0x408

00010c28 <memcmp@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #90112	; 0x16000
   10c30:	ldr	pc, [ip, #1024]!	; 0x400

00010c34 <fputc_unlocked@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #90112	; 0x16000
   10c3c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c40 <dcgettext@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #90112	; 0x16000
   10c48:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c4c <realloc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #90112	; 0x16000
   10c54:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c58 <textdomain@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #90112	; 0x16000
   10c60:	ldr	pc, [ip, #992]!	; 0x3e0

00010c64 <iswprint@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #90112	; 0x16000
   10c6c:	ldr	pc, [ip, #984]!	; 0x3d8

00010c70 <fwrite@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #90112	; 0x16000
   10c78:	ldr	pc, [ip, #976]!	; 0x3d0

00010c7c <lseek64@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #90112	; 0x16000
   10c84:	ldr	pc, [ip, #968]!	; 0x3c8

00010c88 <__ctype_get_mb_cur_max@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #90112	; 0x16000
   10c90:	ldr	pc, [ip, #960]!	; 0x3c0

00010c94 <__fpending@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #90112	; 0x16000
   10c9c:	ldr	pc, [ip, #952]!	; 0x3b8

00010ca0 <mbrtowc@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #90112	; 0x16000
   10ca8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cac <error@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #90112	; 0x16000
   10cb4:	ldr	pc, [ip, #936]!	; 0x3a8

00010cb8 <strtof@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #90112	; 0x16000
   10cc0:	ldr	pc, [ip, #928]!	; 0x3a0

00010cc4 <puts@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #90112	; 0x16000
   10ccc:	ldr	pc, [ip, #920]!	; 0x398

00010cd0 <malloc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #90112	; 0x16000
   10cd8:	ldr	pc, [ip, #912]!	; 0x390

00010cdc <__libc_start_main@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #90112	; 0x16000
   10ce4:	ldr	pc, [ip, #904]!	; 0x388

00010ce8 <__freading@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #896]!	; 0x380

00010cf4 <__gmon_start__@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #888]!	; 0x378

00010d00 <getopt_long@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #880]!	; 0x370

00010d0c <__ctype_b_loc@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #872]!	; 0x368

00010d18 <exit@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #864]!	; 0x360

00010d24 <strlen@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #856]!	; 0x358

00010d30 <__errno_location@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #848]!	; 0x350

00010d3c <__sprintf_chk@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #840]!	; 0x348

00010d48 <__cxa_atexit@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #832]!	; 0x340

00010d54 <memset@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #824]!	; 0x338

00010d60 <__printf_chk@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #816]!	; 0x330

00010d6c <strtod@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #808]!	; 0x328

00010d78 <fileno@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #800]!	; 0x320

00010d84 <__fprintf_chk@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #792]!	; 0x318

00010d90 <fclose@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #784]!	; 0x310

00010d9c <fseeko64@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #776]!	; 0x308

00010da8 <setlocale@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #768]!	; 0x300

00010db4 <strrchr@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #760]!	; 0x2f8

00010dc0 <nl_langinfo@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #752]!	; 0x2f0

00010dcc <bindtextdomain@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #744]!	; 0x2e8

00010dd8 <strncmp@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #736]!	; 0x2e0

00010de4 <abort@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #728]!	; 0x2d8

00010df0 <__snprintf_chk@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #720]!	; 0x2d0

Disassembly of section .text:

00010e00 <.text>:
   10e00:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10e04:	movw	r5, #22600	; 0x5848
   10e08:	movt	r5, #1
   10e0c:	strd	r6, [sp, #8]
   10e10:	mov	r6, #255	; 0xff
   10e14:	mov	r7, #0
   10e18:	strd	r8, [sp, #16]
   10e1c:	mov	r9, r0
   10e20:	mov	r8, r1
   10e24:	str	sl, [sp, #24]
   10e28:	mov	sl, #0
   10e2c:	movw	r4, #22824	; 0x5928
   10e30:	movt	r4, #1
   10e34:	str	lr, [sp, #28]
   10e38:	vpush	{d8-d9}
   10e3c:	sub	sp, sp, #88	; 0x58
   10e40:	ldr	r0, [r1]
   10e44:	bl	12314 <__snprintf_chk@plt+0x1524>
   10e48:	movw	r1, #22424	; 0x5798
   10e4c:	movt	r1, #1
   10e50:	vldr	d9, [pc, #1008]	; 11248 <__snprintf_chk@plt+0x458>
   10e54:	mov	r0, #6
   10e58:	bl	10da8 <setlocale@plt>
   10e5c:	mov	r0, r5
   10e60:	movw	r1, #22768	; 0x58f0
   10e64:	movt	r1, #1
   10e68:	vldr	d8, [pc, #992]	; 11250 <__snprintf_chk@plt+0x460>
   10e6c:	bl	10dcc <bindtextdomain@plt>
   10e70:	mov	r0, r5
   10e74:	movw	r5, #22896	; 0x5970
   10e78:	movt	r5, #1
   10e7c:	bl	10c58 <textdomain@plt>
   10e80:	movw	r0, #7332	; 0x1ca4
   10e84:	movt	r0, #1
   10e88:	bl	156b4 <__snprintf_chk@plt+0x48c4>
   10e8c:	movw	r1, #22792	; 0x5908
   10e90:	movt	r1, #1
   10e94:	movw	r3, #6508	; 0x196c
   10e98:	movt	r3, #1
   10e9c:	movw	r2, #22808	; 0x5918
   10ea0:	movt	r2, #1
   10ea4:	str	sl, [sp, #12]
   10ea8:	mov	r0, r9
   10eac:	mov	r9, #0
   10eb0:	strd	r2, [sp]
   10eb4:	movw	r3, #22596	; 0x5844
   10eb8:	movt	r3, #1
   10ebc:	movw	r2, #22288	; 0x5710
   10ec0:	movt	r2, #1
   10ec4:	str	r1, [sp, #8]
   10ec8:	mov	r1, r8
   10ecc:	mov	r8, #127	; 0x7f
   10ed0:	bl	12158 <__snprintf_chk@plt+0x1368>
   10ed4:	mov	r3, r4
   10ed8:	add	r0, sp, #25
   10edc:	strd	r6, [sp]
   10ee0:	mov	r2, #21
   10ee4:	mov	r1, #1
   10ee8:	bl	10d3c <__sprintf_chk@plt>
   10eec:	add	r2, sp, #25
   10ef0:	movw	r1, #22832	; 0x5930
   10ef4:	movt	r1, #1
   10ef8:	mov	r0, #1
   10efc:	bl	10d60 <__printf_chk@plt>
   10f00:	add	r0, sp, #24
   10f04:	bl	118b8 <__snprintf_chk@plt+0xac8>
   10f08:	mov	r2, r0
   10f0c:	movw	r1, #22848	; 0x5940
   10f10:	movt	r1, #1
   10f14:	mov	r0, #1
   10f18:	bl	10d60 <__printf_chk@plt>
   10f1c:	mov	r3, r4
   10f20:	add	r0, sp, #25
   10f24:	strd	r8, [sp]
   10f28:	mov	r2, #21
   10f2c:	mov	r1, #1
   10f30:	bl	10d3c <__sprintf_chk@plt>
   10f34:	add	r2, sp, #25
   10f38:	movw	r1, #22864	; 0x5950
   10f3c:	movt	r1, #1
   10f40:	mov	r0, #1
   10f44:	bl	10d60 <__printf_chk@plt>
   10f48:	add	r0, sp, #24
   10f4c:	mvn	r8, #127	; 0x7f
   10f50:	bl	118b8 <__snprintf_chk@plt+0xac8>
   10f54:	mvn	r9, #0
   10f58:	mov	r2, r0
   10f5c:	movw	r1, #22880	; 0x5960
   10f60:	movt	r1, #1
   10f64:	mov	r0, #1
   10f68:	bl	10d60 <__printf_chk@plt>
   10f6c:	mov	r3, r5
   10f70:	add	r0, sp, #25
   10f74:	strd	r8, [sp]
   10f78:	mov	r2, #21
   10f7c:	mov	r1, #1
   10f80:	bl	10d3c <__sprintf_chk@plt>
   10f84:	add	r2, sp, #25
   10f88:	movw	r1, #22904	; 0x5978
   10f8c:	movt	r1, #1
   10f90:	mov	r0, #1
   10f94:	bl	10d60 <__printf_chk@plt>
   10f98:	add	r0, sp, #24
   10f9c:	mov	r8, #-2147483648	; 0x80000000
   10fa0:	bl	118b8 <__snprintf_chk@plt+0xac8>
   10fa4:	mov	r2, r0
   10fa8:	movw	r1, #22920	; 0x5988
   10fac:	movt	r1, #1
   10fb0:	mov	r0, #1
   10fb4:	bl	10d60 <__printf_chk@plt>
   10fb8:	mov	r3, r4
   10fbc:	add	r0, sp, #25
   10fc0:	strd	r6, [sp]
   10fc4:	mov	r2, #21
   10fc8:	mov	r1, #1
   10fcc:	bl	10d3c <__sprintf_chk@plt>
   10fd0:	add	r2, sp, #25
   10fd4:	movw	r1, #22936	; 0x5998
   10fd8:	movt	r1, #1
   10fdc:	mov	r0, #1
   10fe0:	bl	10d60 <__printf_chk@plt>
   10fe4:	add	r0, sp, #24
   10fe8:	movw	r6, #32767	; 0x7fff
   10fec:	bl	118b8 <__snprintf_chk@plt+0xac8>
   10ff0:	mov	r7, #0
   10ff4:	mov	r2, r0
   10ff8:	movw	r1, #22952	; 0x59a8
   10ffc:	movt	r1, #1
   11000:	mov	r0, #1
   11004:	mvn	r9, #0
   11008:	bl	10d60 <__printf_chk@plt>
   1100c:	mov	r3, r4
   11010:	add	r0, sp, #25
   11014:	strd	r6, [sp]
   11018:	mov	r2, #21
   1101c:	mov	r1, #1
   11020:	bl	10d3c <__sprintf_chk@plt>
   11024:	add	r2, sp, #25
   11028:	movw	r1, #22968	; 0x59b8
   1102c:	movt	r1, #1
   11030:	mov	r0, #1
   11034:	bl	10d60 <__printf_chk@plt>
   11038:	add	r0, sp, #24
   1103c:	mvn	r7, #0
   11040:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11044:	mov	r6, #32768	; 0x8000
   11048:	movt	r6, #65535	; 0xffff
   1104c:	mov	r2, r0
   11050:	movw	r1, #22984	; 0x59c8
   11054:	movt	r1, #1
   11058:	mov	r0, #1
   1105c:	bl	10d60 <__printf_chk@plt>
   11060:	mov	r3, r5
   11064:	add	r0, sp, #25
   11068:	strd	r6, [sp]
   1106c:	mov	r2, #21
   11070:	mov	r1, #1
   11074:	bl	10d3c <__sprintf_chk@plt>
   11078:	add	r2, sp, #25
   1107c:	movw	r1, #23000	; 0x59d8
   11080:	movt	r1, #1
   11084:	mov	r0, #1
   11088:	bl	10d60 <__printf_chk@plt>
   1108c:	add	r0, sp, #24
   11090:	mvn	r6, #-2147483648	; 0x80000000
   11094:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11098:	mov	r7, #0
   1109c:	mov	r2, r0
   110a0:	movw	r1, #23016	; 0x59e8
   110a4:	movt	r1, #1
   110a8:	mov	r0, #1
   110ac:	bl	10d60 <__printf_chk@plt>
   110b0:	mov	r3, r4
   110b4:	add	r0, sp, #25
   110b8:	strd	r6, [sp]
   110bc:	mov	r2, #21
   110c0:	mov	r1, #1
   110c4:	bl	10d3c <__sprintf_chk@plt>
   110c8:	add	r2, sp, #25
   110cc:	movw	r1, #23032	; 0x59f8
   110d0:	movt	r1, #1
   110d4:	mov	r0, #1
   110d8:	bl	10d60 <__printf_chk@plt>
   110dc:	add	r0, sp, #24
   110e0:	mvn	r6, #0
   110e4:	bl	118b8 <__snprintf_chk@plt+0xac8>
   110e8:	mov	r2, r0
   110ec:	movw	r1, #23044	; 0x5a04
   110f0:	movt	r1, #1
   110f4:	mov	r0, #1
   110f8:	bl	10d60 <__printf_chk@plt>
   110fc:	mov	r3, r5
   11100:	add	r0, sp, #25
   11104:	strd	r8, [sp]
   11108:	mov	r2, #21
   1110c:	mov	r1, #1
   11110:	bl	10d3c <__sprintf_chk@plt>
   11114:	add	r2, sp, #25
   11118:	movw	r1, #23060	; 0x5a14
   1111c:	movt	r1, #1
   11120:	mov	r0, #1
   11124:	bl	10d60 <__printf_chk@plt>
   11128:	add	r0, sp, #24
   1112c:	mov	r7, #0
   11130:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11134:	mov	r2, r0
   11138:	movw	r1, #23072	; 0x5a20
   1113c:	movt	r1, #1
   11140:	mov	r0, #1
   11144:	bl	10d60 <__printf_chk@plt>
   11148:	mov	r3, r4
   1114c:	add	r0, sp, #25
   11150:	strd	r6, [sp]
   11154:	mov	r2, #21
   11158:	mov	r1, #1
   1115c:	bl	10d3c <__sprintf_chk@plt>
   11160:	add	r2, sp, #25
   11164:	movw	r1, #23088	; 0x5a30
   11168:	movt	r1, #1
   1116c:	mov	r0, #1
   11170:	bl	10d60 <__printf_chk@plt>
   11174:	add	r0, sp, #24
   11178:	mvn	r6, #-2147483648	; 0x80000000
   1117c:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11180:	mov	r7, #0
   11184:	mov	r2, r0
   11188:	movw	r1, #23104	; 0x5a40
   1118c:	movt	r1, #1
   11190:	mov	r0, #1
   11194:	bl	10d60 <__printf_chk@plt>
   11198:	mov	r3, r4
   1119c:	add	r0, sp, #25
   111a0:	strd	r6, [sp]
   111a4:	mov	r2, #21
   111a8:	mov	r1, #1
   111ac:	strd	r6, [sp, #16]
   111b0:	bl	10d3c <__sprintf_chk@plt>
   111b4:	add	r2, sp, #25
   111b8:	movw	r1, #23120	; 0x5a50
   111bc:	movt	r1, #1
   111c0:	mov	r0, #1
   111c4:	bl	10d60 <__printf_chk@plt>
   111c8:	add	r0, sp, #24
   111cc:	mvn	r6, #0
   111d0:	bl	118b8 <__snprintf_chk@plt+0xac8>
   111d4:	mov	r2, r0
   111d8:	movw	r1, #23136	; 0x5a60
   111dc:	movt	r1, #1
   111e0:	mov	r0, #1
   111e4:	bl	10d60 <__printf_chk@plt>
   111e8:	mov	r3, r5
   111ec:	add	r0, sp, #25
   111f0:	strd	r8, [sp]
   111f4:	mov	r2, #21
   111f8:	mov	r1, #1
   111fc:	bl	10d3c <__sprintf_chk@plt>
   11200:	add	r2, sp, #25
   11204:	movw	r1, #23152	; 0x5a70
   11208:	movt	r1, #1
   1120c:	mov	r0, #1
   11210:	bl	10d60 <__printf_chk@plt>
   11214:	add	r0, sp, #24
   11218:	mov	r7, #0
   1121c:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11220:	mov	r2, r0
   11224:	movw	r1, #23168	; 0x5a80
   11228:	movt	r1, #1
   1122c:	mov	r0, #1
   11230:	bl	10d60 <__printf_chk@plt>
   11234:	mov	r3, r4
   11238:	add	r0, sp, #25
   1123c:	strd	r6, [sp]
   11240:	mov	r2, #21
   11244:	b	11258 <__snprintf_chk@plt+0x468>
   11248:	andeq	r0, r0, r0
   1124c:	andseq	r0, r0, r0
   11250:			; <UNDEFINED> instruction: 0xffffffff
   11254:	svcvc	0x00efffff
   11258:	mov	r1, #1
   1125c:	bl	10d3c <__sprintf_chk@plt>
   11260:	add	r2, sp, #25
   11264:	movw	r1, #23184	; 0x5a90
   11268:	movt	r1, #1
   1126c:	mov	r0, #1
   11270:	bl	10d60 <__printf_chk@plt>
   11274:	add	r0, sp, #24
   11278:	bl	118b8 <__snprintf_chk@plt+0xac8>
   1127c:	mov	r2, r0
   11280:	movw	r1, #23200	; 0x5aa0
   11284:	movt	r1, #1
   11288:	mov	r0, #1
   1128c:	bl	10d60 <__printf_chk@plt>
   11290:	mov	r3, r4
   11294:	add	r0, sp, #25
   11298:	strd	r6, [sp]
   1129c:	mov	r2, #21
   112a0:	mov	r1, #1
   112a4:	bl	10d3c <__sprintf_chk@plt>
   112a8:	add	r2, sp, #25
   112ac:	movw	r1, #23216	; 0x5ab0
   112b0:	movt	r1, #1
   112b4:	mov	r0, #1
   112b8:	bl	10d60 <__printf_chk@plt>
   112bc:	add	r0, sp, #24
   112c0:	bl	118b8 <__snprintf_chk@plt+0xac8>
   112c4:	mov	r2, r0
   112c8:	movw	r1, #23232	; 0x5ac0
   112cc:	movt	r1, #1
   112d0:	mov	r0, #1
   112d4:	bl	10d60 <__printf_chk@plt>
   112d8:	ldrd	r6, [sp, #16]
   112dc:	mov	r3, r4
   112e0:	add	r0, sp, #25
   112e4:	mov	r2, #21
   112e8:	mov	r1, #1
   112ec:	strd	r6, [sp]
   112f0:	bl	10d3c <__sprintf_chk@plt>
   112f4:	add	r2, sp, #25
   112f8:	movw	r1, #23248	; 0x5ad0
   112fc:	movt	r1, #1
   11300:	mov	r0, #1
   11304:	bl	10d60 <__printf_chk@plt>
   11308:	add	r0, sp, #24
   1130c:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11310:	mov	r2, r0
   11314:	movw	r1, #23264	; 0x5ae0
   11318:	movt	r1, #1
   1131c:	mov	r0, #1
   11320:	bl	10d60 <__printf_chk@plt>
   11324:	mov	r3, r5
   11328:	add	r0, sp, #25
   1132c:	strd	r8, [sp]
   11330:	mov	r2, #21
   11334:	mov	r1, #1
   11338:	bl	10d3c <__sprintf_chk@plt>
   1133c:	add	r2, sp, #25
   11340:	movw	r1, #23280	; 0x5af0
   11344:	movt	r1, #1
   11348:	mov	r0, #1
   1134c:	bl	10d60 <__printf_chk@plt>
   11350:	add	r0, sp, #24
   11354:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11358:	mov	r2, r0
   1135c:	movw	r1, #23296	; 0x5b00
   11360:	movt	r1, #1
   11364:	mov	r0, #1
   11368:	bl	10d60 <__printf_chk@plt>
   1136c:	mov	r3, r4
   11370:	add	r0, sp, #25
   11374:	strd	r6, [sp]
   11378:	mov	r2, #21
   1137c:	mov	r1, #1
   11380:	strd	r6, [sp, #16]
   11384:	bl	10d3c <__sprintf_chk@plt>
   11388:	add	r2, sp, #25
   1138c:	movw	r1, #23312	; 0x5b10
   11390:	movt	r1, #1
   11394:	mov	r0, #1
   11398:	bl	10d60 <__printf_chk@plt>
   1139c:	add	r0, sp, #24
   113a0:	mvn	r6, #0
   113a4:	bl	118b8 <__snprintf_chk@plt+0xac8>
   113a8:	mov	r2, r0
   113ac:	movw	r1, #23328	; 0x5b20
   113b0:	movt	r1, #1
   113b4:	mov	r0, #1
   113b8:	bl	10d60 <__printf_chk@plt>
   113bc:	mov	r3, r5
   113c0:	add	r0, sp, #25
   113c4:	strd	r8, [sp]
   113c8:	mov	r2, #21
   113cc:	mov	r1, #1
   113d0:	bl	10d3c <__sprintf_chk@plt>
   113d4:	add	r2, sp, #25
   113d8:	movw	r1, #23348	; 0x5b34
   113dc:	movt	r1, #1
   113e0:	mov	r0, #1
   113e4:	bl	10d60 <__printf_chk@plt>
   113e8:	add	r0, sp, #24
   113ec:	mov	r7, #0
   113f0:	bl	118b8 <__snprintf_chk@plt+0xac8>
   113f4:	mov	r2, r0
   113f8:	movw	r1, #23364	; 0x5b44
   113fc:	movt	r1, #1
   11400:	mov	r0, #1
   11404:	bl	10d60 <__printf_chk@plt>
   11408:	mov	r3, r4
   1140c:	add	r0, sp, #25
   11410:	strd	r6, [sp]
   11414:	mov	r2, #21
   11418:	mov	r1, #1
   1141c:	bl	10d3c <__sprintf_chk@plt>
   11420:	add	r2, sp, #25
   11424:	movw	r1, #23384	; 0x5b58
   11428:	movt	r1, #1
   1142c:	mov	r0, #1
   11430:	bl	10d60 <__printf_chk@plt>
   11434:	add	r0, sp, #24
   11438:	bl	118b8 <__snprintf_chk@plt+0xac8>
   1143c:	mov	r2, r0
   11440:	movw	r1, #23400	; 0x5b68
   11444:	movt	r1, #1
   11448:	mov	r0, #1
   1144c:	bl	10d60 <__printf_chk@plt>
   11450:	mov	r3, r4
   11454:	add	r0, sp, #25
   11458:	strd	r6, [sp]
   1145c:	mov	r2, #21
   11460:	mov	r1, #1
   11464:	bl	10d3c <__sprintf_chk@plt>
   11468:	add	r2, sp, #25
   1146c:	movw	r1, #23416	; 0x5b78
   11470:	movt	r1, #1
   11474:	mov	r0, #1
   11478:	bl	10d60 <__printf_chk@plt>
   1147c:	add	r0, sp, #24
   11480:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11484:	mov	r2, r0
   11488:	movw	r1, #23432	; 0x5b88
   1148c:	movt	r1, #1
   11490:	mov	r0, #1
   11494:	bl	10d60 <__printf_chk@plt>
   11498:	ldrd	r6, [sp, #16]
   1149c:	mov	r3, r4
   114a0:	add	r0, sp, #25
   114a4:	mov	r2, #21
   114a8:	mov	r1, #1
   114ac:	strd	r6, [sp]
   114b0:	mov	r6, #0
   114b4:	mov	r7, #-2147483648	; 0x80000000
   114b8:	bl	10d3c <__sprintf_chk@plt>
   114bc:	add	r2, sp, #25
   114c0:	movw	r1, #23448	; 0x5b98
   114c4:	movt	r1, #1
   114c8:	mov	r0, #1
   114cc:	bl	10d60 <__printf_chk@plt>
   114d0:	add	r0, sp, #24
   114d4:	bl	118b8 <__snprintf_chk@plt+0xac8>
   114d8:	mov	r2, r0
   114dc:	movw	r1, #23464	; 0x5ba8
   114e0:	movt	r1, #1
   114e4:	mov	r0, #1
   114e8:	bl	10d60 <__printf_chk@plt>
   114ec:	mov	r3, r5
   114f0:	add	r0, sp, #25
   114f4:	strd	r8, [sp]
   114f8:	mov	r2, #21
   114fc:	mov	r1, #1
   11500:	bl	10d3c <__sprintf_chk@plt>
   11504:	add	r2, sp, #25
   11508:	movw	r1, #23480	; 0x5bb8
   1150c:	movt	r1, #1
   11510:	mov	r0, #1
   11514:	bl	10d60 <__printf_chk@plt>
   11518:	add	r0, sp, #24
   1151c:	mvn	r8, #0
   11520:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11524:	mvn	r9, #-2147483648	; 0x80000000
   11528:	mov	r2, r0
   1152c:	movw	r1, #23496	; 0x5bc8
   11530:	movt	r1, #1
   11534:	mov	r0, #1
   11538:	bl	10d60 <__printf_chk@plt>
   1153c:	mov	r3, r4
   11540:	add	r0, sp, #25
   11544:	strd	r8, [sp]
   11548:	mov	r2, #21
   1154c:	mov	r1, #1
   11550:	bl	10d3c <__sprintf_chk@plt>
   11554:	add	r2, sp, #25
   11558:	movw	r1, #23512	; 0x5bd8
   1155c:	movt	r1, #1
   11560:	mov	r0, #1
   11564:	bl	10d60 <__printf_chk@plt>
   11568:	add	r0, sp, #24
   1156c:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11570:	mov	r2, r0
   11574:	movw	r1, #23528	; 0x5be8
   11578:	movt	r1, #1
   1157c:	mov	r0, #1
   11580:	bl	10d60 <__printf_chk@plt>
   11584:	mov	r3, r5
   11588:	add	r0, sp, #25
   1158c:	strd	r6, [sp]
   11590:	mov	r2, #21
   11594:	mov	r1, #1
   11598:	bl	10d3c <__sprintf_chk@plt>
   1159c:	add	r2, sp, #25
   115a0:	movw	r1, #23544	; 0x5bf8
   115a4:	movt	r1, #1
   115a8:	mov	r0, #1
   115ac:	bl	10d60 <__printf_chk@plt>
   115b0:	add	r0, sp, #24
   115b4:	bl	118b8 <__snprintf_chk@plt+0xac8>
   115b8:	mov	r2, r0
   115bc:	movw	r1, #23560	; 0x5c08
   115c0:	movt	r1, #1
   115c4:	mov	r0, #1
   115c8:	bl	10d60 <__printf_chk@plt>
   115cc:	mov	r3, r4
   115d0:	add	r0, sp, #25
   115d4:	strd	r8, [sp]
   115d8:	mov	r2, #21
   115dc:	mov	r1, #1
   115e0:	bl	10d3c <__sprintf_chk@plt>
   115e4:	add	r2, sp, #25
   115e8:	movw	r1, #23576	; 0x5c18
   115ec:	movt	r1, #1
   115f0:	mov	r0, #1
   115f4:	bl	10d60 <__printf_chk@plt>
   115f8:	add	r0, sp, #24
   115fc:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11600:	mov	r2, r0
   11604:	movw	r1, #23592	; 0x5c28
   11608:	movt	r1, #1
   1160c:	mov	r0, #1
   11610:	bl	10d60 <__printf_chk@plt>
   11614:	mov	r3, r5
   11618:	add	r0, sp, #25
   1161c:	strd	r6, [sp]
   11620:	mov	r2, #21
   11624:	mov	r1, #1
   11628:	bl	10d3c <__sprintf_chk@plt>
   1162c:	add	r2, sp, #25
   11630:	movw	r1, #23612	; 0x5c3c
   11634:	movt	r1, #1
   11638:	mov	r0, #1
   1163c:	bl	10d60 <__printf_chk@plt>
   11640:	add	r0, sp, #24
   11644:	mvn	r6, #0
   11648:	bl	118b8 <__snprintf_chk@plt+0xac8>
   1164c:	mvn	r7, #0
   11650:	mov	r2, r0
   11654:	movw	r1, #23628	; 0x5c4c
   11658:	movt	r1, #1
   1165c:	mov	r0, #1
   11660:	bl	10d60 <__printf_chk@plt>
   11664:	mov	r3, r4
   11668:	add	r0, sp, #25
   1166c:	strd	r6, [sp]
   11670:	mov	r2, #21
   11674:	mov	r1, #1
   11678:	bl	10d3c <__sprintf_chk@plt>
   1167c:	add	r2, sp, #25
   11680:	movw	r1, #23648	; 0x5c60
   11684:	movt	r1, #1
   11688:	mov	r0, #1
   1168c:	bl	10d60 <__printf_chk@plt>
   11690:	add	r0, sp, #24
   11694:	bl	118b8 <__snprintf_chk@plt+0xac8>
   11698:	mov	r2, r0
   1169c:	movw	r1, #23664	; 0x5c70
   116a0:	movt	r1, #1
   116a4:	mov	r0, #1
   116a8:	bl	10d60 <__printf_chk@plt>
   116ac:	movw	r1, #23684	; 0x5c84
   116b0:	movt	r1, #1
   116b4:	mov	r0, #1
   116b8:	bl	10d60 <__printf_chk@plt>
   116bc:	vldr	s0, [pc, #252]	; 117c0 <__snprintf_chk@plt+0x9d0>
   116c0:	bl	11940 <__snprintf_chk@plt+0xb50>
   116c4:	movw	r1, #23696	; 0x5c90
   116c8:	movt	r1, #1
   116cc:	mov	r0, #1
   116d0:	bl	10d60 <__printf_chk@plt>
   116d4:	vldr	s0, [pc, #232]	; 117c4 <__snprintf_chk@plt+0x9d4>
   116d8:	bl	11940 <__snprintf_chk@plt+0xb50>
   116dc:	movw	r1, #23708	; 0x5c9c
   116e0:	movt	r1, #1
   116e4:	mov	r0, #1
   116e8:	bl	10d60 <__printf_chk@plt>
   116ec:	mov	r3, sl
   116f0:	vmov.f64	d0, d9
   116f4:	mov	r2, #1
   116f8:	mov	r1, #40	; 0x28
   116fc:	add	r0, sp, #48	; 0x30
   11700:	bl	11d90 <__snprintf_chk@plt+0xfa0>
   11704:	add	r0, sp, #48	; 0x30
   11708:	bl	10cc4 <puts@plt>
   1170c:	movw	r1, #23720	; 0x5ca8
   11710:	movt	r1, #1
   11714:	mov	r0, #1
   11718:	bl	10d60 <__printf_chk@plt>
   1171c:	mov	r3, sl
   11720:	vmov.f64	d0, d8
   11724:	mov	r2, #1
   11728:	mov	r1, #40	; 0x28
   1172c:	add	r0, sp, #48	; 0x30
   11730:	bl	11d90 <__snprintf_chk@plt+0xfa0>
   11734:	add	r0, sp, #48	; 0x30
   11738:	bl	10cc4 <puts@plt>
   1173c:	movw	r1, #23732	; 0x5cb4
   11740:	movt	r1, #1
   11744:	mov	r0, #1
   11748:	bl	10d60 <__printf_chk@plt>
   1174c:	vmov.f64	d0, d9
   11750:	mov	r3, sl
   11754:	mov	r2, #1
   11758:	mov	r1, #40	; 0x28
   1175c:	add	r0, sp, #48	; 0x30
   11760:	bl	12010 <__snprintf_chk@plt+0x1220>
   11764:	add	r0, sp, #48	; 0x30
   11768:	bl	10cc4 <puts@plt>
   1176c:	movw	r1, #23744	; 0x5cc0
   11770:	movt	r1, #1
   11774:	mov	r0, #1
   11778:	bl	10d60 <__printf_chk@plt>
   1177c:	vmov.f64	d0, d8
   11780:	mov	r3, sl
   11784:	mov	r2, #1
   11788:	mov	r1, #40	; 0x28
   1178c:	add	r0, sp, #48	; 0x30
   11790:	bl	12010 <__snprintf_chk@plt+0x1220>
   11794:	add	r0, sp, #48	; 0x30
   11798:	bl	10cc4 <puts@plt>
   1179c:	mov	r0, sl
   117a0:	add	sp, sp, #88	; 0x58
   117a4:	vpop	{d8-d9}
   117a8:	ldrd	r4, [sp]
   117ac:	ldrd	r6, [sp, #8]
   117b0:	ldrd	r8, [sp, #16]
   117b4:	ldr	sl, [sp, #24]
   117b8:	add	sp, sp, #28
   117bc:	pop	{pc}		; (ldr pc, [sp], #4)
   117c0:	addeq	r0, r0, r0
   117c4:	svcvc	0x007fffff
   117c8:	mov	fp, #0
   117cc:	mov	lr, #0
   117d0:	pop	{r1}		; (ldr r1, [sp], #4)
   117d4:	mov	r2, sp
   117d8:	push	{r2}		; (str r2, [sp, #-4]!)
   117dc:	push	{r0}		; (str r0, [sp, #-4]!)
   117e0:	ldr	ip, [pc, #16]	; 117f8 <__snprintf_chk@plt+0xa08>
   117e4:	push	{ip}		; (str ip, [sp, #-4]!)
   117e8:	ldr	r0, [pc, #12]	; 117fc <__snprintf_chk@plt+0xa0c>
   117ec:	ldr	r3, [pc, #12]	; 11800 <__snprintf_chk@plt+0xa10>
   117f0:	bl	10cdc <__libc_start_main@plt>
   117f4:	bl	10de4 <abort@plt>
   117f8:			; <UNDEFINED> instruction: 0x000156b0
   117fc:	andeq	r0, r1, r0, lsl #28
   11800:	andeq	r5, r1, r0, asr r6
   11804:	ldr	r3, [pc, #20]	; 11820 <__snprintf_chk@plt+0xa30>
   11808:	ldr	r2, [pc, #20]	; 11824 <__snprintf_chk@plt+0xa34>
   1180c:	add	r3, pc, r3
   11810:	ldr	r2, [r3, r2]
   11814:	cmp	r2, #0
   11818:	bxeq	lr
   1181c:	b	10cf4 <__gmon_start__@plt>
   11820:	andeq	r5, r1, ip, ror #15
   11824:	andeq	r0, r0, ip, asr #1
   11828:	ldr	r0, [pc, #24]	; 11848 <__snprintf_chk@plt+0xa58>
   1182c:	ldr	r3, [pc, #24]	; 1184c <__snprintf_chk@plt+0xa5c>
   11830:	cmp	r3, r0
   11834:	bxeq	lr
   11838:	ldr	r3, [pc, #16]	; 11850 <__snprintf_chk@plt+0xa60>
   1183c:	cmp	r3, #0
   11840:	bxeq	lr
   11844:	bx	r3
   11848:	andeq	r7, r2, ip, lsl r1
   1184c:	andeq	r7, r2, ip, lsl r1
   11850:	andeq	r0, r0, r0
   11854:	ldr	r0, [pc, #36]	; 11880 <__snprintf_chk@plt+0xa90>
   11858:	ldr	r1, [pc, #36]	; 11884 <__snprintf_chk@plt+0xa94>
   1185c:	sub	r1, r1, r0
   11860:	asr	r1, r1, #2
   11864:	add	r1, r1, r1, lsr #31
   11868:	asrs	r1, r1, #1
   1186c:	bxeq	lr
   11870:	ldr	r3, [pc, #16]	; 11888 <__snprintf_chk@plt+0xa98>
   11874:	cmp	r3, #0
   11878:	bxeq	lr
   1187c:	bx	r3
   11880:	andeq	r7, r2, ip, lsl r1
   11884:	andeq	r7, r2, ip, lsl r1
   11888:	andeq	r0, r0, r0
   1188c:	push	{r4, lr}
   11890:	ldr	r4, [pc, #24]	; 118b0 <__snprintf_chk@plt+0xac0>
   11894:	ldrb	r3, [r4]
   11898:	cmp	r3, #0
   1189c:	popne	{r4, pc}
   118a0:	bl	11828 <__snprintf_chk@plt+0xa38>
   118a4:	mov	r3, #1
   118a8:	strb	r3, [r4]
   118ac:	pop	{r4, pc}
   118b0:	andeq	r7, r2, ip, lsr r1
   118b4:	b	11854 <__snprintf_chk@plt+0xa64>
   118b8:	strd	r4, [sp, #-16]!
   118bc:	str	r6, [sp, #8]
   118c0:	str	lr, [sp, #12]
   118c4:	ldrb	r5, [r0, #1]
   118c8:	sub	r4, r5, #45	; 0x2d
   118cc:	clz	r4, r4
   118d0:	lsr	r4, r4, #5
   118d4:	add	r4, r4, #1
   118d8:	add	r4, r0, r4
   118dc:	mov	r0, r4
   118e0:	bl	10d24 <strlen@plt>
   118e4:	mov	r1, #48	; 0x30
   118e8:	add	r0, r4, r0
   118ec:	sub	r3, r0, #1
   118f0:	strb	r1, [r4, #-1]
   118f4:	ldrb	r2, [r0, #-1]
   118f8:	cmp	r2, #57	; 0x39
   118fc:	bne	11910 <__snprintf_chk@plt+0xb20>
   11900:	strb	r1, [r3]
   11904:	ldrb	r2, [r3, #-1]!
   11908:	cmp	r2, #57	; 0x39
   1190c:	beq	11900 <__snprintf_chk@plt+0xb10>
   11910:	cmp	r4, r3
   11914:	add	r2, r2, #1
   11918:	movcc	r0, r4
   1191c:	movcs	r0, r3
   11920:	cmp	r5, #45	; 0x2d
   11924:	strb	r2, [r3]
   11928:	strbeq	r5, [r0, #-1]
   1192c:	subeq	r0, r0, #1
   11930:	ldrd	r4, [sp]
   11934:	ldr	r6, [sp, #8]
   11938:	add	sp, sp, #12
   1193c:	pop	{pc}		; (ldr pc, [sp], #4)
   11940:	push	{lr}		; (str lr, [sp, #-4]!)
   11944:	sub	sp, sp, #36	; 0x24
   11948:	mov	r3, #0
   1194c:	mov	r2, #1
   11950:	mov	r1, #31
   11954:	mov	r0, sp
   11958:	bl	11ed0 <__snprintf_chk@plt+0x10e0>
   1195c:	mov	r0, sp
   11960:	bl	10cc4 <puts@plt>
   11964:	add	sp, sp, #36	; 0x24
   11968:	pop	{pc}		; (ldr pc, [sp], #4)
   1196c:	subs	r6, r0, #0
   11970:	str	r7, [sp, #-8]!
   11974:	str	lr, [sp, #4]
   11978:	sub	sp, sp, #56	; 0x38
   1197c:	beq	119c4 <__snprintf_chk@plt+0xbd4>
   11980:	movw	r3, #28976	; 0x7130
   11984:	movt	r3, #2
   11988:	ldr	r4, [r3]
   1198c:	mov	r2, #5
   11990:	movw	r1, #22300	; 0x571c
   11994:	movt	r1, #1
   11998:	mov	r0, #0
   1199c:	bl	10c40 <dcgettext@plt>
   119a0:	movw	r3, #29000	; 0x7148
   119a4:	movt	r3, #2
   119a8:	mov	r2, r0
   119ac:	mov	r1, #1
   119b0:	ldr	r3, [r3]
   119b4:	mov	r0, r4
   119b8:	bl	10d84 <__fprintf_chk@plt>
   119bc:	mov	r0, r6
   119c0:	bl	10d18 <exit@plt>
   119c4:	mov	r2, #5
   119c8:	movw	r1, #22340	; 0x5744
   119cc:	movt	r1, #1
   119d0:	movw	r7, #28980	; 0x7134
   119d4:	movt	r7, #2
   119d8:	bl	10c40 <dcgettext@plt>
   119dc:	movw	r3, #29000	; 0x7148
   119e0:	movt	r3, #2
   119e4:	mov	r1, r0
   119e8:	mov	r0, #1
   119ec:	ldr	r2, [r3]
   119f0:	bl	10d60 <__printf_chk@plt>
   119f4:	mov	r2, #5
   119f8:	movw	r1, #22352	; 0x5750
   119fc:	movt	r1, #1
   11a00:	mov	r0, r6
   11a04:	bl	10c40 <dcgettext@plt>
   11a08:	ldr	r1, [r7]
   11a0c:	bl	10bc8 <fputs_unlocked@plt>
   11a10:	mov	r2, #5
   11a14:	movw	r1, #22428	; 0x579c
   11a18:	movt	r1, #1
   11a1c:	mov	r0, r6
   11a20:	bl	10c40 <dcgettext@plt>
   11a24:	ldr	r1, [r7]
   11a28:	bl	10bc8 <fputs_unlocked@plt>
   11a2c:	mov	r2, #5
   11a30:	movw	r1, #22476	; 0x57cc
   11a34:	movt	r1, #1
   11a38:	mov	r0, r6
   11a3c:	bl	10c40 <dcgettext@plt>
   11a40:	ldr	r1, [r7]
   11a44:	bl	10bc8 <fputs_unlocked@plt>
   11a48:	movw	lr, #22232	; 0x56d8
   11a4c:	movt	lr, #1
   11a50:	ldr	ip, [lr]
   11a54:	ldr	r4, [lr, #4]
   11a58:	ldrd	r8, [lr, #8]
   11a5c:	subs	r1, ip, #0
   11a60:	str	ip, [sp]
   11a64:	ldrd	r2, [lr, #16]
   11a68:	str	r4, [sp, #4]
   11a6c:	ldrd	r4, [lr, #24]
   11a70:	strd	r8, [sp, #8]
   11a74:	ldrd	r8, [lr, #32]
   11a78:	strd	r2, [sp, #16]
   11a7c:	ldrd	r2, [lr, #40]	; 0x28
   11a80:	strd	r4, [sp, #24]
   11a84:	ldrd	r4, [lr, #48]	; 0x30
   11a88:	strd	r8, [sp, #32]
   11a8c:	strd	r2, [sp, #40]	; 0x28
   11a90:	strd	r4, [sp, #48]	; 0x30
   11a94:	movwne	r5, #22288	; 0x5710
   11a98:	mov	r4, sp
   11a9c:	movtne	r5, #1
   11aa0:	bne	11b98 <__snprintf_chk@plt+0xda8>
   11aa4:	ldr	r4, [r4, #4]
   11aa8:	movw	r1, #22532	; 0x5804
   11aac:	movt	r1, #1
   11ab0:	mov	r2, #5
   11ab4:	cmp	r4, #0
   11ab8:	beq	11bac <__snprintf_chk@plt+0xdbc>
   11abc:	mov	r0, #0
   11ac0:	bl	10c40 <dcgettext@plt>
   11ac4:	mov	r1, r0
   11ac8:	movw	r3, #22556	; 0x581c
   11acc:	movt	r3, #1
   11ad0:	movw	r2, #22596	; 0x5844
   11ad4:	movt	r2, #1
   11ad8:	mov	r0, #1
   11adc:	bl	10d60 <__printf_chk@plt>
   11ae0:	mov	r1, #0
   11ae4:	mov	r0, #5
   11ae8:	bl	10da8 <setlocale@plt>
   11aec:	cmp	r0, #0
   11af0:	movweq	r5, #22288	; 0x5710
   11af4:	movteq	r5, #1
   11af8:	beq	11b1c <__snprintf_chk@plt+0xd2c>
   11afc:	movw	r1, #22612	; 0x5854
   11b00:	movt	r1, #1
   11b04:	mov	r2, #3
   11b08:	movw	r5, #22288	; 0x5710
   11b0c:	movt	r5, #1
   11b10:	bl	10dd8 <strncmp@plt>
   11b14:	cmp	r0, #0
   11b18:	bne	11c64 <__snprintf_chk@plt+0xe74>
   11b1c:	mov	r2, #5
   11b20:	movw	r1, #22688	; 0x58a0
   11b24:	movt	r1, #1
   11b28:	mov	r0, #0
   11b2c:	bl	10c40 <dcgettext@plt>
   11b30:	mov	r1, r0
   11b34:	movw	r3, #22288	; 0x5710
   11b38:	movt	r3, #1
   11b3c:	movw	r2, #22556	; 0x581c
   11b40:	movt	r2, #1
   11b44:	mov	r0, #1
   11b48:	bl	10d60 <__printf_chk@plt>
   11b4c:	mov	r2, #5
   11b50:	movw	r1, #22716	; 0x58bc
   11b54:	movt	r1, #1
   11b58:	mov	r0, #0
   11b5c:	bl	10c40 <dcgettext@plt>
   11b60:	movw	r2, #23764	; 0x5cd4
   11b64:	movt	r2, #1
   11b68:	cmp	r4, r5
   11b6c:	movw	r3, #22424	; 0x5798
   11b70:	movt	r3, #1
   11b74:	mov	r1, r0
   11b78:	moveq	r3, r2
   11b7c:	mov	r2, r4
   11b80:	mov	r0, #1
   11b84:	bl	10d60 <__printf_chk@plt>
   11b88:	b	119bc <__snprintf_chk@plt+0xbcc>
   11b8c:	ldr	r1, [r4, #8]!
   11b90:	cmp	r1, #0
   11b94:	beq	11aa4 <__snprintf_chk@plt+0xcb4>
   11b98:	mov	r0, r5
   11b9c:	bl	10bd4 <strcmp@plt>
   11ba0:	cmp	r0, #0
   11ba4:	bne	11b8c <__snprintf_chk@plt+0xd9c>
   11ba8:	b	11aa4 <__snprintf_chk@plt+0xcb4>
   11bac:	mov	r0, r4
   11bb0:	bl	10c40 <dcgettext@plt>
   11bb4:	mov	r1, r0
   11bb8:	movw	r3, #22556	; 0x581c
   11bbc:	movt	r3, #1
   11bc0:	movw	r2, #22596	; 0x5844
   11bc4:	movt	r2, #1
   11bc8:	mov	r0, #1
   11bcc:	bl	10d60 <__printf_chk@plt>
   11bd0:	mov	r1, r4
   11bd4:	mov	r0, #5
   11bd8:	bl	10da8 <setlocale@plt>
   11bdc:	cmp	r0, #0
   11be0:	beq	11bfc <__snprintf_chk@plt+0xe0c>
   11be4:	movw	r1, #22612	; 0x5854
   11be8:	movt	r1, #1
   11bec:	mov	r2, #3
   11bf0:	bl	10dd8 <strncmp@plt>
   11bf4:	cmp	r0, #0
   11bf8:	bne	11c58 <__snprintf_chk@plt+0xe68>
   11bfc:	mov	r2, #5
   11c00:	movw	r1, #22688	; 0x58a0
   11c04:	movt	r1, #1
   11c08:	mov	r0, #0
   11c0c:	bl	10c40 <dcgettext@plt>
   11c10:	mov	r1, r0
   11c14:	movw	r3, #22288	; 0x5710
   11c18:	movt	r3, #1
   11c1c:	movw	r2, #22556	; 0x581c
   11c20:	movt	r2, #1
   11c24:	mov	r0, #1
   11c28:	bl	10d60 <__printf_chk@plt>
   11c2c:	movw	r1, #22716	; 0x58bc
   11c30:	movt	r1, #1
   11c34:	mov	r2, #5
   11c38:	mov	r0, #0
   11c3c:	bl	10c40 <dcgettext@plt>
   11c40:	movw	r4, #22288	; 0x5710
   11c44:	movt	r4, #1
   11c48:	movw	r3, #23764	; 0x5cd4
   11c4c:	movt	r3, #1
   11c50:	mov	r1, r0
   11c54:	b	11b7c <__snprintf_chk@plt+0xd8c>
   11c58:	movw	r5, #22288	; 0x5710
   11c5c:	movt	r5, #1
   11c60:	mov	r4, r5
   11c64:	mov	r2, #5
   11c68:	movw	r1, #22616	; 0x5858
   11c6c:	movt	r1, #1
   11c70:	mov	r0, #0
   11c74:	bl	10c40 <dcgettext@plt>
   11c78:	ldr	r1, [r7]
   11c7c:	bl	10bc8 <fputs_unlocked@plt>
   11c80:	b	11b1c <__snprintf_chk@plt+0xd2c>
   11c84:	movw	r3, #28992	; 0x7140
   11c88:	movt	r3, #2
   11c8c:	str	r0, [r3]
   11c90:	bx	lr
   11c94:	movw	r3, #28992	; 0x7140
   11c98:	movt	r3, #2
   11c9c:	strb	r0, [r3, #4]
   11ca0:	bx	lr
   11ca4:	movw	r3, #28980	; 0x7134
   11ca8:	movt	r3, #2
   11cac:	strd	r4, [sp, #-16]!
   11cb0:	ldr	r0, [r3]
   11cb4:	str	r6, [sp, #8]
   11cb8:	str	lr, [sp, #12]
   11cbc:	sub	sp, sp, #8
   11cc0:	bl	15174 <__snprintf_chk@plt+0x4384>
   11cc4:	cmp	r0, #0
   11cc8:	beq	11cf4 <__snprintf_chk@plt+0xf04>
   11ccc:	movw	r4, #28992	; 0x7140
   11cd0:	movt	r4, #2
   11cd4:	ldrb	r6, [r4, #4]
   11cd8:	bl	10d30 <__errno_location@plt>
   11cdc:	mov	r5, r0
   11ce0:	cmp	r6, #0
   11ce4:	beq	11d20 <__snprintf_chk@plt+0xf30>
   11ce8:	ldr	r3, [r0]
   11cec:	cmp	r3, #32
   11cf0:	bne	11d20 <__snprintf_chk@plt+0xf30>
   11cf4:	movw	r3, #28976	; 0x7130
   11cf8:	movt	r3, #2
   11cfc:	ldr	r0, [r3]
   11d00:	bl	15174 <__snprintf_chk@plt+0x4384>
   11d04:	cmp	r0, #0
   11d08:	bne	11d68 <__snprintf_chk@plt+0xf78>
   11d0c:	add	sp, sp, #8
   11d10:	ldrd	r4, [sp]
   11d14:	ldr	r6, [sp, #8]
   11d18:	add	sp, sp, #12
   11d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d20:	movw	r1, #23864	; 0x5d38
   11d24:	movt	r1, #1
   11d28:	mov	r2, #5
   11d2c:	mov	r0, #0
   11d30:	bl	10c40 <dcgettext@plt>
   11d34:	mov	r6, r0
   11d38:	ldr	r0, [r4]
   11d3c:	cmp	r0, #0
   11d40:	beq	11d78 <__snprintf_chk@plt+0xf88>
   11d44:	ldr	r4, [r5]
   11d48:	bl	14418 <__snprintf_chk@plt+0x3628>
   11d4c:	mov	r3, r0
   11d50:	movw	r2, #23876	; 0x5d44
   11d54:	movt	r2, #1
   11d58:	mov	r0, #0
   11d5c:	str	r6, [sp]
   11d60:	mov	r1, r4
   11d64:	bl	10cac <error@plt>
   11d68:	movw	r3, #28888	; 0x70d8
   11d6c:	movt	r3, #2
   11d70:	ldr	r0, [r3]
   11d74:	bl	10bf8 <_exit@plt>
   11d78:	mov	r3, r6
   11d7c:	movw	r2, #23880	; 0x5d48
   11d80:	movt	r2, #1
   11d84:	ldr	r1, [r5]
   11d88:	bl	10cac <error@plt>
   11d8c:	b	11d68 <__snprintf_chk@plt+0xf78>
   11d90:	vcmpe.f64	d0, #0.0
   11d94:	vldr	d7, [pc, #300]	; 11ec8 <__snprintf_chk@plt+0x10d8>
   11d98:	movw	ip, #11557	; 0x2d25
   11d9c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11da0:	mov	r4, #32
   11da4:	strd	r6, [sp, #8]
   11da8:	mov	r6, r1
   11dac:	and	r1, r2, #1
   11db0:	strd	r8, [sp, #16]
   11db4:	mov	r9, r3
   11db8:	mov	r7, r0
   11dbc:	str	lr, [sp, #24]
   11dc0:	ubfx	r0, r2, #1, #1
   11dc4:	vpush	{d8}
   11dc8:	sub	sp, sp, #44	; 0x2c
   11dcc:	vmov.f64	d8, d0
   11dd0:	add	r3, sp, #29
   11dd4:	add	r8, sp, #28
   11dd8:	vmrs	APSR_nzcv, fpscr
   11ddc:	strh	ip, [sp, #28]
   11de0:	mov	ip, #43	; 0x2b
   11de4:	strb	ip, [r3, r1]
   11de8:	add	r3, r3, r1
   11dec:	ubfx	r1, r2, #2, #1
   11df0:	add	ip, r3, r0
   11df4:	vnegmi.f64	d6, d0
   11df8:	vmovpl.f64	d6, d0
   11dfc:	tst	r2, #16
   11e00:	movne	lr, #71	; 0x47
   11e04:	moveq	lr, #103	; 0x67
   11e08:	strb	r4, [r3, r0]
   11e0c:	mov	r3, #48	; 0x30
   11e10:	ubfx	r2, r2, #3, #1
   11e14:	add	r0, ip, r1
   11e18:	vcmpe.f64	d6, d7
   11e1c:	strb	r3, [ip, r1]
   11e20:	mov	r1, #42	; 0x2a
   11e24:	add	r3, r0, r2
   11e28:	strb	r1, [r0, r2]
   11e2c:	mov	r0, #46	; 0x2e
   11e30:	mov	r2, #0
   11e34:	strb	r0, [r3, #1]
   11e38:	strb	r1, [r3, #2]
   11e3c:	strb	lr, [r3, #3]
   11e40:	vmrs	APSR_nzcv, fpscr
   11e44:	strb	r2, [r3, #4]
   11e48:	movmi	r4, #1
   11e4c:	movpl	r4, #15
   11e50:	mov	r1, r6
   11e54:	mvn	r3, #0
   11e58:	strd	r8, [sp]
   11e5c:	mov	r2, #1
   11e60:	mov	r0, r7
   11e64:	str	r4, [sp, #8]
   11e68:	vstr	d8, [sp, #16]
   11e6c:	bl	10df0 <__snprintf_chk@plt>
   11e70:	cmp	r4, #16
   11e74:	mov	r5, r0
   11e78:	movle	r1, #0
   11e7c:	movgt	r1, #1
   11e80:	orrs	r1, r1, r0, lsr #31
   11e84:	add	r4, r4, #1
   11e88:	bne	11ea8 <__snprintf_chk@plt+0x10b8>
   11e8c:	cmp	r0, r6
   11e90:	bcs	11e50 <__snprintf_chk@plt+0x1060>
   11e94:	mov	r0, r7
   11e98:	bl	10d6c <strtod@plt>
   11e9c:	vcmp.f64	d0, d8
   11ea0:	vmrs	APSR_nzcv, fpscr
   11ea4:	bne	11e50 <__snprintf_chk@plt+0x1060>
   11ea8:	mov	r0, r5
   11eac:	add	sp, sp, #44	; 0x2c
   11eb0:	vpop	{d8}
   11eb4:	ldrd	r4, [sp]
   11eb8:	ldrd	r6, [sp, #8]
   11ebc:	ldrd	r8, [sp, #16]
   11ec0:	add	sp, sp, #24
   11ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ec8:	andeq	r0, r0, r0
   11ecc:	andseq	r0, r0, r0
   11ed0:	vcmpe.f32	s0, #0.0
   11ed4:	vldr	s15, [pc, #304]	; 1200c <__snprintf_chk@plt+0x121c>
   11ed8:	movw	ip, #11557	; 0x2d25
   11edc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11ee0:	mov	r4, #32
   11ee4:	strd	r6, [sp, #8]
   11ee8:	mov	r6, r1
   11eec:	and	r1, r2, #1
   11ef0:	strd	r8, [sp, #16]
   11ef4:	mov	r9, r3
   11ef8:	mov	r7, r0
   11efc:	str	lr, [sp, #24]
   11f00:	ubfx	r0, r2, #1, #1
   11f04:	vpush	{d8-d9}
   11f08:	sub	sp, sp, #44	; 0x2c
   11f0c:	vcvt.f64.f32	d8, s0
   11f10:	add	r3, sp, #29
   11f14:	vmov.f32	s18, s0
   11f18:	add	r8, sp, #28
   11f1c:	vmrs	APSR_nzcv, fpscr
   11f20:	strh	ip, [sp, #28]
   11f24:	mov	ip, #43	; 0x2b
   11f28:	strb	ip, [r3, r1]
   11f2c:	add	r3, r3, r1
   11f30:	ubfx	r1, r2, #2, #1
   11f34:	add	ip, r3, r0
   11f38:	vnegmi.f32	s14, s0
   11f3c:	vmovpl.f32	s14, s0
   11f40:	tst	r2, #16
   11f44:	movne	lr, #71	; 0x47
   11f48:	moveq	lr, #103	; 0x67
   11f4c:	strb	r4, [r3, r0]
   11f50:	mov	r3, #48	; 0x30
   11f54:	ubfx	r2, r2, #3, #1
   11f58:	add	r0, ip, r1
   11f5c:	vcmpe.f32	s14, s15
   11f60:	strb	r3, [ip, r1]
   11f64:	mov	r1, #42	; 0x2a
   11f68:	add	r3, r0, r2
   11f6c:	strb	r1, [r0, r2]
   11f70:	mov	r0, #46	; 0x2e
   11f74:	mov	r2, #0
   11f78:	strb	r0, [r3, #1]
   11f7c:	strb	r1, [r3, #2]
   11f80:	strb	lr, [r3, #3]
   11f84:	vmrs	APSR_nzcv, fpscr
   11f88:	strb	r2, [r3, #4]
   11f8c:	movmi	r4, #1
   11f90:	movpl	r4, #6
   11f94:	mov	r1, r6
   11f98:	mvn	r3, #0
   11f9c:	strd	r8, [sp]
   11fa0:	mov	r2, #1
   11fa4:	mov	r0, r7
   11fa8:	str	r4, [sp, #8]
   11fac:	vstr	d8, [sp, #16]
   11fb0:	bl	10df0 <__snprintf_chk@plt>
   11fb4:	cmp	r4, #8
   11fb8:	mov	r5, r0
   11fbc:	movle	r1, #0
   11fc0:	movgt	r1, #1
   11fc4:	orrs	r1, r1, r0, lsr #31
   11fc8:	add	r4, r4, #1
   11fcc:	bne	11fec <__snprintf_chk@plt+0x11fc>
   11fd0:	cmp	r0, r6
   11fd4:	bcs	11f94 <__snprintf_chk@plt+0x11a4>
   11fd8:	mov	r0, r7
   11fdc:	bl	10cb8 <strtof@plt>
   11fe0:	vcmp.f32	s0, s18
   11fe4:	vmrs	APSR_nzcv, fpscr
   11fe8:	bne	11f94 <__snprintf_chk@plt+0x11a4>
   11fec:	mov	r0, r5
   11ff0:	add	sp, sp, #44	; 0x2c
   11ff4:	vpop	{d8-d9}
   11ff8:	ldrd	r4, [sp]
   11ffc:	ldrd	r6, [sp, #8]
   12000:	ldrd	r8, [sp, #16]
   12004:	add	sp, sp, #24
   12008:	pop	{pc}		; (ldr pc, [sp], #4)
   1200c:	addeq	r0, r0, r0
   12010:	vcmpe.f64	d0, #0.0
   12014:	vldr	d7, [pc, #308]	; 12150 <__snprintf_chk@plt+0x1360>
   12018:	movw	ip, #11557	; 0x2d25
   1201c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12020:	mov	r4, #32
   12024:	strd	r6, [sp, #8]
   12028:	mov	r6, r1
   1202c:	and	r1, r2, #1
   12030:	strd	r8, [sp, #16]
   12034:	mov	r9, r3
   12038:	mov	r7, r0
   1203c:	str	lr, [sp, #24]
   12040:	ubfx	r0, r2, #1, #1
   12044:	vpush	{d8}
   12048:	sub	sp, sp, #44	; 0x2c
   1204c:	vmov.f64	d8, d0
   12050:	add	r3, sp, #29
   12054:	add	r8, sp, #28
   12058:	vmrs	APSR_nzcv, fpscr
   1205c:	strh	ip, [sp, #28]
   12060:	mov	ip, #43	; 0x2b
   12064:	strb	ip, [r3, r1]
   12068:	add	r3, r3, r1
   1206c:	ubfx	r1, r2, #2, #1
   12070:	add	ip, r3, r0
   12074:	vnegmi.f64	d6, d0
   12078:	vmovpl.f64	d6, d0
   1207c:	tst	r2, #16
   12080:	movne	lr, #71	; 0x47
   12084:	moveq	lr, #103	; 0x67
   12088:	strb	r4, [r3, r0]
   1208c:	mov	r3, #48	; 0x30
   12090:	ubfx	r2, r2, #3, #1
   12094:	add	r0, ip, r1
   12098:	vcmpe.f64	d6, d7
   1209c:	strb	r3, [ip, r1]
   120a0:	mov	r1, #42	; 0x2a
   120a4:	add	r3, r0, r2
   120a8:	mov	ip, #46	; 0x2e
   120ac:	strb	r1, [r0, r2]
   120b0:	mov	r0, #76	; 0x4c
   120b4:	mov	r2, #0
   120b8:	strb	ip, [r3, #1]
   120bc:	strb	r1, [r3, #2]
   120c0:	strb	r0, [r3, #3]
   120c4:	strb	lr, [r3, #4]
   120c8:	vmrs	APSR_nzcv, fpscr
   120cc:	strb	r2, [r3, #5]
   120d0:	movmi	r4, #1
   120d4:	movpl	r4, #15
   120d8:	mov	r1, r6
   120dc:	mvn	r3, #0
   120e0:	strd	r8, [sp]
   120e4:	mov	r2, #1
   120e8:	mov	r0, r7
   120ec:	str	r4, [sp, #8]
   120f0:	vstr	d8, [sp, #16]
   120f4:	bl	10df0 <__snprintf_chk@plt>
   120f8:	cmp	r4, #16
   120fc:	mov	r5, r0
   12100:	movle	r1, #0
   12104:	movgt	r1, #1
   12108:	orrs	r1, r1, r0, lsr #31
   1210c:	add	r4, r4, #1
   12110:	bne	12130 <__snprintf_chk@plt+0x1340>
   12114:	cmp	r0, r6
   12118:	bcs	120d8 <__snprintf_chk@plt+0x12e8>
   1211c:	mov	r0, r7
   12120:	bl	10c1c <strtold@plt>
   12124:	vcmp.f64	d0, d8
   12128:	vmrs	APSR_nzcv, fpscr
   1212c:	bne	120d8 <__snprintf_chk@plt+0x12e8>
   12130:	mov	r0, r5
   12134:	add	sp, sp, #44	; 0x2c
   12138:	vpop	{d8}
   1213c:	ldrd	r4, [sp]
   12140:	ldrd	r6, [sp, #8]
   12144:	ldrd	r8, [sp, #16]
   12148:	add	sp, sp, #24
   1214c:	pop	{pc}		; (ldr pc, [sp], #4)
   12150:	andeq	r0, r0, r0
   12154:	andseq	r0, r0, r0
   12158:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1215c:	movw	r4, #28984	; 0x7138
   12160:	movt	r4, #2
   12164:	mov	r5, #0
   12168:	cmp	r0, #2
   1216c:	strd	r6, [sp, #8]
   12170:	str	r8, [sp, #16]
   12174:	str	lr, [sp, #20]
   12178:	sub	sp, sp, #16
   1217c:	ldr	r6, [r4]
   12180:	str	r5, [r4]
   12184:	beq	121b4 <__snprintf_chk@plt+0x13c4>
   12188:	mov	r2, #0
   1218c:	movw	r3, #28968	; 0x7128
   12190:	movt	r3, #2
   12194:	str	r6, [r4]
   12198:	str	r2, [r3]
   1219c:	add	sp, sp, #16
   121a0:	ldrd	r4, [sp]
   121a4:	ldrd	r6, [sp, #8]
   121a8:	ldr	r8, [sp, #16]
   121ac:	add	sp, sp, #20
   121b0:	pop	{pc}		; (ldr pc, [sp], #4)
   121b4:	mov	r8, r3
   121b8:	mov	r7, r2
   121bc:	str	r5, [sp]
   121c0:	movw	r3, #23884	; 0x5d4c
   121c4:	movt	r3, #1
   121c8:	movw	r2, #23932	; 0x5d7c
   121cc:	movt	r2, #1
   121d0:	bl	10d00 <getopt_long@plt>
   121d4:	cmn	r0, #1
   121d8:	beq	12188 <__snprintf_chk@plt+0x1398>
   121dc:	cmp	r0, #104	; 0x68
   121e0:	beq	1221c <__snprintf_chk@plt+0x142c>
   121e4:	cmp	r0, #118	; 0x76
   121e8:	bne	12188 <__snprintf_chk@plt+0x1398>
   121ec:	add	ip, sp, #48	; 0x30
   121f0:	movw	r0, #28980	; 0x7134
   121f4:	movt	r0, #2
   121f8:	mov	r2, r8
   121fc:	ldr	r3, [sp, #40]	; 0x28
   12200:	mov	r1, r7
   12204:	str	ip, [sp]
   12208:	ldr	r0, [r0]
   1220c:	str	ip, [sp, #12]
   12210:	bl	14a48 <__snprintf_chk@plt+0x3c58>
   12214:	mov	r0, r5
   12218:	bl	10d18 <exit@plt>
   1221c:	mov	r0, r5
   12220:	ldr	r3, [sp, #44]	; 0x2c
   12224:	blx	r3
   12228:	b	12188 <__snprintf_chk@plt+0x1398>
   1222c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12230:	mov	r5, #0
   12234:	movw	r4, #28984	; 0x7138
   12238:	movt	r4, #2
   1223c:	strd	r6, [sp, #8]
   12240:	movw	ip, #22424	; 0x5798
   12244:	movt	ip, #1
   12248:	strd	r8, [sp, #16]
   1224c:	mov	r9, #1
   12250:	str	lr, [sp, #24]
   12254:	sub	sp, sp, #20
   12258:	mov	r8, r3
   1225c:	ldrb	lr, [sp, #52]	; 0x34
   12260:	mov	r7, r2
   12264:	movw	r3, #23884	; 0x5d4c
   12268:	movt	r3, #1
   1226c:	movw	r2, #23932	; 0x5d7c
   12270:	movt	r2, #1
   12274:	str	r5, [sp]
   12278:	ldr	r6, [r4]
   1227c:	str	r9, [r4]
   12280:	cmp	lr, r5
   12284:	movne	r2, ip
   12288:	bl	10d00 <getopt_long@plt>
   1228c:	cmn	r0, #1
   12290:	beq	122b8 <__snprintf_chk@plt+0x14c8>
   12294:	cmp	r0, #104	; 0x68
   12298:	beq	12304 <__snprintf_chk@plt+0x1514>
   1229c:	cmp	r0, #118	; 0x76
   122a0:	beq	122d4 <__snprintf_chk@plt+0x14e4>
   122a4:	movw	r3, #28888	; 0x70d8
   122a8:	movt	r3, #2
   122ac:	ldr	r0, [r3]
   122b0:	ldr	r3, [sp, #56]	; 0x38
   122b4:	blx	r3
   122b8:	str	r6, [r4]
   122bc:	add	sp, sp, #20
   122c0:	ldrd	r4, [sp]
   122c4:	ldrd	r6, [sp, #8]
   122c8:	ldrd	r8, [sp, #16]
   122cc:	add	sp, sp, #24
   122d0:	pop	{pc}		; (ldr pc, [sp], #4)
   122d4:	add	ip, sp, #60	; 0x3c
   122d8:	movw	r0, #28980	; 0x7134
   122dc:	movt	r0, #2
   122e0:	mov	r2, r8
   122e4:	ldr	r3, [sp, #48]	; 0x30
   122e8:	mov	r1, r7
   122ec:	str	ip, [sp]
   122f0:	ldr	r0, [r0]
   122f4:	str	ip, [sp, #12]
   122f8:	bl	14a48 <__snprintf_chk@plt+0x3c58>
   122fc:	mov	r0, r5
   12300:	bl	10d18 <exit@plt>
   12304:	mov	r0, r5
   12308:	ldr	r3, [sp, #56]	; 0x38
   1230c:	blx	r3
   12310:	b	122b8 <__snprintf_chk@plt+0x14c8>
   12314:	strd	r4, [sp, #-16]!
   12318:	subs	r4, r0, #0
   1231c:	str	r6, [sp, #8]
   12320:	str	lr, [sp, #12]
   12324:	beq	123bc <__snprintf_chk@plt+0x15cc>
   12328:	mov	r1, #47	; 0x2f
   1232c:	bl	10db4 <strrchr@plt>
   12330:	subs	r5, r0, #0
   12334:	beq	12394 <__snprintf_chk@plt+0x15a4>
   12338:	add	r6, r5, #1
   1233c:	sub	r3, r6, r4
   12340:	cmp	r3, #6
   12344:	ble	12394 <__snprintf_chk@plt+0x15a4>
   12348:	movw	r1, #24008	; 0x5dc8
   1234c:	movt	r1, #1
   12350:	mov	r2, #7
   12354:	sub	r0, r5, #6
   12358:	bl	10dd8 <strncmp@plt>
   1235c:	cmp	r0, #0
   12360:	bne	12394 <__snprintf_chk@plt+0x15a4>
   12364:	movw	r1, #24016	; 0x5dd0
   12368:	movt	r1, #1
   1236c:	mov	r2, #3
   12370:	mov	r0, r6
   12374:	bl	10dd8 <strncmp@plt>
   12378:	cmp	r0, #0
   1237c:	movne	r4, r6
   12380:	bne	12394 <__snprintf_chk@plt+0x15a4>
   12384:	add	r4, r5, #4
   12388:	movw	r3, #28960	; 0x7120
   1238c:	movt	r3, #2
   12390:	str	r4, [r3]
   12394:	movw	r2, #29000	; 0x7148
   12398:	movt	r2, #2
   1239c:	ldr	r6, [sp, #8]
   123a0:	movw	r3, #28964	; 0x7124
   123a4:	movt	r3, #2
   123a8:	str	r4, [r2]
   123ac:	str	r4, [r3]
   123b0:	ldrd	r4, [sp]
   123b4:	add	sp, sp, #12
   123b8:	pop	{pc}		; (ldr pc, [sp], #4)
   123bc:	movw	r3, #28976	; 0x7130
   123c0:	movt	r3, #2
   123c4:	movw	r0, #23952	; 0x5d90
   123c8:	movt	r0, #1
   123cc:	ldr	r3, [r3]
   123d0:	mov	r2, #55	; 0x37
   123d4:	mov	r1, #1
   123d8:	bl	10c70 <fwrite@plt>
   123dc:	bl	10de4 <abort@plt>
   123e0:	strd	r4, [sp, #-16]!
   123e4:	mov	r4, #0
   123e8:	mov	r5, #0
   123ec:	cmp	r1, #10
   123f0:	str	r6, [sp, #8]
   123f4:	strd	r4, [r0]
   123f8:	strd	r4, [r0, #8]
   123fc:	str	lr, [sp, #12]
   12400:	strd	r4, [r0, #16]
   12404:	strd	r4, [r0, #24]
   12408:	strd	r4, [r0, #32]
   1240c:	strd	r4, [r0, #40]	; 0x28
   12410:	beq	12428 <__snprintf_chk@plt+0x1638>
   12414:	ldrd	r4, [sp]
   12418:	str	r1, [r0]
   1241c:	ldr	r6, [sp, #8]
   12420:	add	sp, sp, #12
   12424:	pop	{pc}		; (ldr pc, [sp], #4)
   12428:	bl	10de4 <abort@plt>
   1242c:	mov	r2, #5
   12430:	strd	r4, [sp, #-16]!
   12434:	mov	r5, r0
   12438:	str	r6, [sp, #8]
   1243c:	mov	r6, r1
   12440:	mov	r1, r0
   12444:	mov	r0, #0
   12448:	str	lr, [sp, #12]
   1244c:	bl	10c40 <dcgettext@plt>
   12450:	cmp	r5, r0
   12454:	mov	r4, r0
   12458:	beq	12470 <__snprintf_chk@plt+0x1680>
   1245c:	mov	r0, r4
   12460:	ldrd	r4, [sp]
   12464:	ldr	r6, [sp, #8]
   12468:	add	sp, sp, #12
   1246c:	pop	{pc}		; (ldr pc, [sp], #4)
   12470:	bl	15440 <__snprintf_chk@plt+0x4650>
   12474:	ldrb	r3, [r0]
   12478:	bic	r3, r3, #32
   1247c:	cmp	r3, #85	; 0x55
   12480:	bne	124e8 <__snprintf_chk@plt+0x16f8>
   12484:	ldrb	r3, [r0, #1]
   12488:	bic	r3, r3, #32
   1248c:	cmp	r3, #84	; 0x54
   12490:	bne	12568 <__snprintf_chk@plt+0x1778>
   12494:	ldrb	r3, [r0, #2]
   12498:	bic	r3, r3, #32
   1249c:	cmp	r3, #70	; 0x46
   124a0:	bne	12568 <__snprintf_chk@plt+0x1778>
   124a4:	ldrb	r3, [r0, #3]
   124a8:	cmp	r3, #45	; 0x2d
   124ac:	bne	12568 <__snprintf_chk@plt+0x1778>
   124b0:	ldrb	r3, [r0, #4]
   124b4:	cmp	r3, #56	; 0x38
   124b8:	bne	12568 <__snprintf_chk@plt+0x1778>
   124bc:	ldrb	r3, [r0, #5]
   124c0:	cmp	r3, #0
   124c4:	bne	12568 <__snprintf_chk@plt+0x1778>
   124c8:	ldrb	r2, [r4]
   124cc:	movw	r3, #24108	; 0x5e2c
   124d0:	movt	r3, #1
   124d4:	movw	r4, #24120	; 0x5e38
   124d8:	movt	r4, #1
   124dc:	cmp	r2, #96	; 0x60
   124e0:	movne	r4, r3
   124e4:	b	1245c <__snprintf_chk@plt+0x166c>
   124e8:	cmp	r3, #71	; 0x47
   124ec:	bne	12568 <__snprintf_chk@plt+0x1778>
   124f0:	ldrb	r3, [r0, #1]
   124f4:	bic	r3, r3, #32
   124f8:	cmp	r3, #66	; 0x42
   124fc:	bne	12568 <__snprintf_chk@plt+0x1778>
   12500:	ldrb	r3, [r0, #2]
   12504:	cmp	r3, #49	; 0x31
   12508:	bne	12568 <__snprintf_chk@plt+0x1778>
   1250c:	ldrb	r3, [r0, #3]
   12510:	cmp	r3, #56	; 0x38
   12514:	bne	12568 <__snprintf_chk@plt+0x1778>
   12518:	ldrb	r3, [r0, #4]
   1251c:	cmp	r3, #48	; 0x30
   12520:	bne	12568 <__snprintf_chk@plt+0x1778>
   12524:	ldrb	r3, [r0, #5]
   12528:	cmp	r3, #51	; 0x33
   1252c:	bne	12568 <__snprintf_chk@plt+0x1778>
   12530:	ldrb	r3, [r0, #6]
   12534:	cmp	r3, #48	; 0x30
   12538:	bne	12568 <__snprintf_chk@plt+0x1778>
   1253c:	ldrb	r3, [r0, #7]
   12540:	cmp	r3, #0
   12544:	bne	12568 <__snprintf_chk@plt+0x1778>
   12548:	ldrb	r2, [r4]
   1254c:	movw	r3, #24112	; 0x5e30
   12550:	movt	r3, #1
   12554:	movw	r4, #24116	; 0x5e34
   12558:	movt	r4, #1
   1255c:	cmp	r2, #96	; 0x60
   12560:	movne	r4, r3
   12564:	b	1245c <__snprintf_chk@plt+0x166c>
   12568:	movw	r3, #24124	; 0x5e3c
   1256c:	movt	r3, #1
   12570:	cmp	r6, #9
   12574:	movw	r4, #24104	; 0x5e28
   12578:	movt	r4, #1
   1257c:	movne	r4, r3
   12580:	b	1245c <__snprintf_chk@plt+0x166c>
   12584:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12588:	strd	r6, [sp, #8]
   1258c:	strd	r8, [sp, #16]
   12590:	strd	sl, [sp, #24]
   12594:	mov	fp, r0
   12598:	mov	sl, r1
   1259c:	str	lr, [sp, #32]
   125a0:	sub	sp, sp, #116	; 0x74
   125a4:	ldr	r8, [sp, #152]	; 0x98
   125a8:	str	r3, [sp, #28]
   125ac:	ldr	r3, [sp, #156]	; 0x9c
   125b0:	str	r2, [sp, #32]
   125b4:	and	r4, r3, #2
   125b8:	ubfx	r3, r3, #1, #1
   125bc:	str	r3, [sp, #44]	; 0x2c
   125c0:	bl	10c88 <__ctype_get_mb_cur_max@plt>
   125c4:	str	r0, [sp, #64]	; 0x40
   125c8:	cmp	r8, #10
   125cc:	ldrls	pc, [pc, r8, lsl #2]
   125d0:	b	13d40 <__snprintf_chk@plt+0x2f50>
   125d4:	ldrdeq	r2, [r1], -r8
   125d8:	andeq	r2, r1, r4, ror sl
   125dc:	andeq	r3, r1, r0, asr r0
   125e0:	muleq	r1, r4, sl
   125e4:	andeq	r2, r1, ip, lsr r9
   125e8:	andeq	r2, r1, r8, lsl #19
   125ec:	andeq	r2, r1, r8, lsl #20
   125f0:	andeq	r2, r1, r4, asr #20
   125f4:	andeq	r2, r1, r0, lsl #12
   125f8:	andeq	r2, r1, r0, lsl #12
   125fc:	andeq	r2, r1, r0, lsl #12
   12600:	cmp	r8, #10
   12604:	beq	12630 <__snprintf_chk@plt+0x1840>
   12608:	mov	r1, r8
   1260c:	movw	r0, #24128	; 0x5e40
   12610:	movt	r0, #1
   12614:	bl	1242c <__snprintf_chk@plt+0x163c>
   12618:	mov	r1, r8
   1261c:	str	r0, [sp, #164]	; 0xa4
   12620:	movw	r0, #24124	; 0x5e3c
   12624:	movt	r0, #1
   12628:	bl	1242c <__snprintf_chk@plt+0x163c>
   1262c:	str	r0, [sp, #168]	; 0xa8
   12630:	cmp	r4, #0
   12634:	movne	r4, #0
   12638:	beq	13a1c <__snprintf_chk@plt+0x2c2c>
   1263c:	mov	r3, #1
   12640:	mov	r5, #0
   12644:	ldr	r0, [sp, #168]	; 0xa8
   12648:	str	r3, [sp, #36]	; 0x24
   1264c:	str	r3, [sp, #40]	; 0x28
   12650:	str	r5, [sp, #68]	; 0x44
   12654:	bl	10d24 <strlen@plt>
   12658:	ldr	r3, [sp, #168]	; 0xa8
   1265c:	str	r5, [sp, #48]	; 0x30
   12660:	str	r0, [sp, #56]	; 0x38
   12664:	str	r3, [sp, #60]	; 0x3c
   12668:	str	r5, [sp, #72]	; 0x48
   1266c:	str	r8, [sp, #152]	; 0x98
   12670:	mov	r8, fp
   12674:	mov	r9, #0
   12678:	ldr	fp, [sp, #152]	; 0x98
   1267c:	ldr	r3, [sp, #28]
   12680:	cmn	r3, #1
   12684:	beq	12be4 <__snprintf_chk@plt+0x1df4>
   12688:	ldr	r3, [sp, #28]
   1268c:	subs	r6, r3, r9
   12690:	movne	r6, #1
   12694:	cmp	r6, #0
   12698:	beq	12bfc <__snprintf_chk@plt+0x1e0c>
   1269c:	ldr	r0, [sp, #32]
   126a0:	ldr	r7, [sp, #40]	; 0x28
   126a4:	add	r3, r0, r9
   126a8:	cmp	fp, #2
   126ac:	moveq	r7, #0
   126b0:	andne	r7, r7, #1
   126b4:	str	r3, [sp, #52]	; 0x34
   126b8:	cmp	r7, #0
   126bc:	beq	13098 <__snprintf_chk@plt+0x22a8>
   126c0:	ldr	r2, [sp, #56]	; 0x38
   126c4:	cmp	r2, #0
   126c8:	beq	13334 <__snprintf_chk@plt+0x2544>
   126cc:	ldr	r1, [sp, #28]
   126d0:	cmp	r2, #1
   126d4:	mov	r3, r2
   126d8:	movls	r3, #0
   126dc:	movhi	r3, #1
   126e0:	add	r5, r9, r2
   126e4:	cmn	r1, #1
   126e8:	movne	r3, #0
   126ec:	cmp	r3, #0
   126f0:	beq	126fc <__snprintf_chk@plt+0x190c>
   126f4:	bl	10d24 <strlen@plt>
   126f8:	str	r0, [sp, #28]
   126fc:	ldr	r3, [sp, #28]
   12700:	cmp	r5, r3
   12704:	bhi	13334 <__snprintf_chk@plt+0x2544>
   12708:	ldr	r0, [sp, #52]	; 0x34
   1270c:	ldr	r2, [sp, #56]	; 0x38
   12710:	ldr	r1, [sp, #60]	; 0x3c
   12714:	bl	10c28 <memcmp@plt>
   12718:	cmp	r0, #0
   1271c:	bne	13334 <__snprintf_chk@plt+0x2544>
   12720:	ldr	r3, [sp, #44]	; 0x2c
   12724:	cmp	r3, #0
   12728:	bne	13c64 <__snprintf_chk@plt+0x2e74>
   1272c:	ldr	r3, [sp, #52]	; 0x34
   12730:	ldrb	r5, [r3]
   12734:	cmp	r5, #126	; 0x7e
   12738:	ldrls	pc, [pc, r5, lsl #2]
   1273c:	b	12ff4 <__snprintf_chk@plt+0x2204>
   12740:	strdeq	r2, [r1], -r8
   12744:	strdeq	r2, [r1], -r4
   12748:	strdeq	r2, [r1], -r4
   1274c:	strdeq	r2, [r1], -r4
   12750:	strdeq	r2, [r1], -r4
   12754:	strdeq	r2, [r1], -r4
   12758:	strdeq	r2, [r1], -r4
   1275c:	andeq	r2, r1, ip, asr #29
   12760:	andeq	r2, r1, r4, asr #29
   12764:	andeq	r2, r1, ip, lsl #28
   12768:			; <UNDEFINED> instruction: 0x00012eb8
   1276c:	andeq	r2, r1, r4, lsl #28
   12770:	muleq	r1, r4, lr
   12774:	andeq	r2, r1, r0, ror #29
   12778:	strdeq	r2, [r1], -r4
   1277c:	strdeq	r2, [r1], -r4
   12780:	strdeq	r2, [r1], -r4
   12784:	strdeq	r2, [r1], -r4
   12788:	strdeq	r2, [r1], -r4
   1278c:	strdeq	r2, [r1], -r4
   12790:	strdeq	r2, [r1], -r4
   12794:	strdeq	r2, [r1], -r4
   12798:	strdeq	r2, [r1], -r4
   1279c:	strdeq	r2, [r1], -r4
   127a0:	strdeq	r2, [r1], -r4
   127a4:	strdeq	r2, [r1], -r4
   127a8:	strdeq	r2, [r1], -r4
   127ac:	strdeq	r2, [r1], -r4
   127b0:	strdeq	r2, [r1], -r4
   127b4:	strdeq	r2, [r1], -r4
   127b8:	strdeq	r2, [r1], -r4
   127bc:	strdeq	r2, [r1], -r4
   127c0:	ldrdeq	r2, [r1], -r0
   127c4:	ldrdeq	r2, [r1], -r8
   127c8:	ldrdeq	r2, [r1], -r8
   127cc:			; <UNDEFINED> instruction: 0x00012fb4
   127d0:	ldrdeq	r2, [r1], -r8
   127d4:	andeq	r2, r1, r8, ror #31
   127d8:	ldrdeq	r2, [r1], -r8
   127dc:	andeq	r2, r1, r4, lsr sp
   127e0:	ldrdeq	r2, [r1], -r8
   127e4:	ldrdeq	r2, [r1], -r8
   127e8:	ldrdeq	r2, [r1], -r8
   127ec:	andeq	r2, r1, r8, ror #31
   127f0:	andeq	r2, r1, r8, ror #31
   127f4:	andeq	r2, r1, r8, ror #31
   127f8:	andeq	r2, r1, r8, ror #31
   127fc:	andeq	r2, r1, r8, ror #31
   12800:	andeq	r2, r1, r8, ror #31
   12804:	andeq	r2, r1, r8, ror #31
   12808:	andeq	r2, r1, r8, ror #31
   1280c:	andeq	r2, r1, r8, ror #31
   12810:	andeq	r2, r1, r8, ror #31
   12814:	andeq	r2, r1, r8, ror #31
   12818:	andeq	r2, r1, r8, ror #31
   1281c:	andeq	r2, r1, r8, ror #31
   12820:	andeq	r2, r1, r8, ror #31
   12824:	andeq	r2, r1, r8, ror #31
   12828:	andeq	r2, r1, r8, ror #31
   1282c:	ldrdeq	r2, [r1], -r8
   12830:	ldrdeq	r2, [r1], -r8
   12834:	ldrdeq	r2, [r1], -r8
   12838:	ldrdeq	r2, [r1], -r8
   1283c:	andeq	r2, r1, r8, lsl #26
   12840:	strdeq	r2, [r1], -r4
   12844:	andeq	r2, r1, r8, ror #31
   12848:	andeq	r2, r1, r8, ror #31
   1284c:	andeq	r2, r1, r8, ror #31
   12850:	andeq	r2, r1, r8, ror #31
   12854:	andeq	r2, r1, r8, ror #31
   12858:	andeq	r2, r1, r8, ror #31
   1285c:	andeq	r2, r1, r8, ror #31
   12860:	andeq	r2, r1, r8, ror #31
   12864:	andeq	r2, r1, r8, ror #31
   12868:	andeq	r2, r1, r8, ror #31
   1286c:	andeq	r2, r1, r8, ror #31
   12870:	andeq	r2, r1, r8, ror #31
   12874:	andeq	r2, r1, r8, ror #31
   12878:	andeq	r2, r1, r8, ror #31
   1287c:	andeq	r2, r1, r8, ror #31
   12880:	andeq	r2, r1, r8, ror #31
   12884:	andeq	r2, r1, r8, ror #31
   12888:	andeq	r2, r1, r8, ror #31
   1288c:	andeq	r2, r1, r8, ror #31
   12890:	andeq	r2, r1, r8, ror #31
   12894:	andeq	r2, r1, r8, ror #31
   12898:	andeq	r2, r1, r8, ror #31
   1289c:	andeq	r2, r1, r8, ror #31
   128a0:	andeq	r2, r1, r8, ror #31
   128a4:	andeq	r2, r1, r8, ror #31
   128a8:	andeq	r2, r1, r8, ror #31
   128ac:	ldrdeq	r2, [r1], -r8
   128b0:			; <UNDEFINED> instruction: 0x00012cb0
   128b4:	andeq	r2, r1, r8, ror #31
   128b8:	ldrdeq	r2, [r1], -r8
   128bc:	andeq	r2, r1, r8, ror #31
   128c0:	ldrdeq	r2, [r1], -r8
   128c4:	andeq	r2, r1, r8, ror #31
   128c8:	andeq	r2, r1, r8, ror #31
   128cc:	andeq	r2, r1, r8, ror #31
   128d0:	andeq	r2, r1, r8, ror #31
   128d4:	andeq	r2, r1, r8, ror #31
   128d8:	andeq	r2, r1, r8, ror #31
   128dc:	andeq	r2, r1, r8, ror #31
   128e0:	andeq	r2, r1, r8, ror #31
   128e4:	andeq	r2, r1, r8, ror #31
   128e8:	andeq	r2, r1, r8, ror #31
   128ec:	andeq	r2, r1, r8, ror #31
   128f0:	andeq	r2, r1, r8, ror #31
   128f4:	andeq	r2, r1, r8, ror #31
   128f8:	andeq	r2, r1, r8, ror #31
   128fc:	andeq	r2, r1, r8, ror #31
   12900:	andeq	r2, r1, r8, ror #31
   12904:	andeq	r2, r1, r8, ror #31
   12908:	andeq	r2, r1, r8, ror #31
   1290c:	andeq	r2, r1, r8, ror #31
   12910:	andeq	r2, r1, r8, ror #31
   12914:	andeq	r2, r1, r8, ror #31
   12918:	andeq	r2, r1, r8, ror #31
   1291c:	andeq	r2, r1, r8, ror #31
   12920:	andeq	r2, r1, r8, ror #31
   12924:	andeq	r2, r1, r8, ror #31
   12928:	andeq	r2, r1, r8, ror #31
   1292c:	ldrdeq	r2, [r1], -r4
   12930:	ldrdeq	r2, [r1], -r8
   12934:	ldrdeq	r2, [r1], -r4
   12938:			; <UNDEFINED> instruction: 0x00012fb4
   1293c:	cmp	r4, #0
   12940:	moveq	r3, #1
   12944:	streq	r3, [sp, #40]	; 0x28
   12948:	beq	1305c <__snprintf_chk@plt+0x226c>
   1294c:	mov	r3, #0
   12950:	mov	r2, #1
   12954:	mov	r4, r3
   12958:	str	r2, [sp, #36]	; 0x24
   1295c:	str	r2, [sp, #44]	; 0x2c
   12960:	str	r2, [sp, #56]	; 0x38
   12964:	str	r3, [sp, #68]	; 0x44
   12968:	movw	r3, #24124	; 0x5e3c
   1296c:	movt	r3, #1
   12970:	str	r4, [sp, #40]	; 0x28
   12974:	mov	r8, #2
   12978:	str	r4, [sp, #48]	; 0x30
   1297c:	str	r3, [sp, #60]	; 0x3c
   12980:	str	r4, [sp, #72]	; 0x48
   12984:	b	1266c <__snprintf_chk@plt+0x187c>
   12988:	cmp	r4, #0
   1298c:	bne	13bd8 <__snprintf_chk@plt+0x2de8>
   12990:	cmp	sl, #0
   12994:	beq	13998 <__snprintf_chk@plt+0x2ba8>
   12998:	mov	r3, #34	; 0x22
   1299c:	mov	r1, r4
   129a0:	mov	r2, #1
   129a4:	strb	r3, [fp]
   129a8:	movw	r3, #24104	; 0x5e28
   129ac:	movt	r3, #1
   129b0:	mov	r4, r2
   129b4:	str	r2, [sp, #36]	; 0x24
   129b8:	str	r2, [sp, #40]	; 0x28
   129bc:	str	r1, [sp, #44]	; 0x2c
   129c0:	str	r1, [sp, #48]	; 0x30
   129c4:	str	r2, [sp, #56]	; 0x38
   129c8:	str	r3, [sp, #60]	; 0x3c
   129cc:	str	r1, [sp, #68]	; 0x44
   129d0:	str	r1, [sp, #72]	; 0x48
   129d4:	b	1266c <__snprintf_chk@plt+0x187c>
   129d8:	mov	r3, #0
   129dc:	mov	r4, r8
   129e0:	str	r3, [sp, #40]	; 0x28
   129e4:	str	r3, [sp, #44]	; 0x2c
   129e8:	str	r3, [sp, #48]	; 0x30
   129ec:	str	r8, [sp, #56]	; 0x38
   129f0:	str	r3, [sp, #60]	; 0x3c
   129f4:	str	r3, [sp, #68]	; 0x44
   129f8:	mov	r3, #1
   129fc:	str	r3, [sp, #36]	; 0x24
   12a00:	str	r8, [sp, #72]	; 0x48
   12a04:	b	1266c <__snprintf_chk@plt+0x187c>
   12a08:	mov	r3, #1
   12a0c:	mov	r2, #0
   12a10:	mov	r4, r2
   12a14:	mov	r8, #5
   12a18:	str	r3, [sp, #36]	; 0x24
   12a1c:	str	r3, [sp, #40]	; 0x28
   12a20:	str	r3, [sp, #44]	; 0x2c
   12a24:	str	r2, [sp, #48]	; 0x30
   12a28:	str	r3, [sp, #56]	; 0x38
   12a2c:	movw	r3, #24104	; 0x5e28
   12a30:	movt	r3, #1
   12a34:	str	r3, [sp, #60]	; 0x3c
   12a38:	str	r2, [sp, #68]	; 0x44
   12a3c:	str	r2, [sp, #72]	; 0x48
   12a40:	b	1266c <__snprintf_chk@plt+0x187c>
   12a44:	mov	r3, #0
   12a48:	mov	r2, #1
   12a4c:	mov	r4, r3
   12a50:	str	r2, [sp, #36]	; 0x24
   12a54:	str	r2, [sp, #40]	; 0x28
   12a58:	str	r3, [sp, #44]	; 0x2c
   12a5c:	str	r3, [sp, #48]	; 0x30
   12a60:	str	r3, [sp, #56]	; 0x38
   12a64:	str	r3, [sp, #60]	; 0x3c
   12a68:	str	r3, [sp, #68]	; 0x44
   12a6c:	str	r3, [sp, #72]	; 0x48
   12a70:	b	1266c <__snprintf_chk@plt+0x187c>
   12a74:	mov	r2, #1
   12a78:	mov	r3, #0
   12a7c:	mov	r4, r3
   12a80:	str	r2, [sp, #36]	; 0x24
   12a84:	str	r2, [sp, #44]	; 0x2c
   12a88:	str	r8, [sp, #56]	; 0x38
   12a8c:	str	r3, [sp, #68]	; 0x44
   12a90:	b	12968 <__snprintf_chk@plt+0x1b78>
   12a94:	mov	r3, #1
   12a98:	mov	r2, #0
   12a9c:	mov	r4, r2
   12aa0:	mov	r8, #2
   12aa4:	str	r3, [sp, #36]	; 0x24
   12aa8:	str	r3, [sp, #40]	; 0x28
   12aac:	str	r3, [sp, #44]	; 0x2c
   12ab0:	str	r2, [sp, #48]	; 0x30
   12ab4:	str	r3, [sp, #56]	; 0x38
   12ab8:	movw	r3, #24124	; 0x5e3c
   12abc:	movt	r3, #1
   12ac0:	str	r3, [sp, #60]	; 0x3c
   12ac4:	str	r2, [sp, #68]	; 0x44
   12ac8:	str	r2, [sp, #72]	; 0x48
   12acc:	b	1266c <__snprintf_chk@plt+0x187c>
   12ad0:	mov	r7, #0
   12ad4:	ldr	r3, [sp, #28]
   12ad8:	cmn	r3, #1
   12adc:	beq	135b4 <__snprintf_chk@plt+0x27c4>
   12ae0:	ldr	r3, [sp, #28]
   12ae4:	subs	r2, r3, #1
   12ae8:	movne	r2, #1
   12aec:	sub	r3, fp, #2
   12af0:	cmp	r2, #0
   12af4:	clz	r3, r3
   12af8:	lsr	r3, r3, #5
   12afc:	bne	12b08 <__snprintf_chk@plt+0x1d18>
   12b00:	cmp	r9, #0
   12b04:	beq	13314 <__snprintf_chk@plt+0x2524>
   12b08:	mov	r6, #0
   12b0c:	ldr	r2, [sp, #40]	; 0x28
   12b10:	eor	r2, r2, #1
   12b14:	orrs	r3, r3, r2
   12b18:	bne	12cf0 <__snprintf_chk@plt+0x1f00>
   12b1c:	ldr	r2, [sp, #160]	; 0xa0
   12b20:	cmp	r2, #0
   12b24:	beq	12b44 <__snprintf_chk@plt+0x1d54>
   12b28:	ldr	r0, [sp, #160]	; 0xa0
   12b2c:	ubfx	r1, r5, #5, #8
   12b30:	and	r2, r5, #31
   12b34:	ldr	r1, [r0, r1, lsl #2]
   12b38:	lsr	r2, r1, r2
   12b3c:	tst	r2, #1
   12b40:	bne	12b4c <__snprintf_chk@plt+0x1d5c>
   12b44:	cmp	r7, #0
   12b48:	beq	12dbc <__snprintf_chk@plt+0x1fcc>
   12b4c:	ldr	r2, [sp, #44]	; 0x2c
   12b50:	sub	r3, fp, #2
   12b54:	clz	r3, r3
   12b58:	lsr	r3, r3, #5
   12b5c:	cmp	r2, #0
   12b60:	bne	13908 <__snprintf_chk@plt+0x2b18>
   12b64:	ldr	r2, [sp, #48]	; 0x30
   12b68:	eor	r2, r2, #1
   12b6c:	ands	r3, r3, r2
   12b70:	beq	12ba8 <__snprintf_chk@plt+0x1db8>
   12b74:	cmp	sl, r4
   12b78:	str	r3, [sp, #48]	; 0x30
   12b7c:	movhi	r2, #39	; 0x27
   12b80:	strbhi	r2, [r8, r4]
   12b84:	add	r2, r4, #1
   12b88:	cmp	sl, r2
   12b8c:	movhi	r1, #36	; 0x24
   12b90:	strbhi	r1, [r8, r2]
   12b94:	add	r2, r4, #2
   12b98:	add	r4, r4, #3
   12b9c:	cmp	sl, r2
   12ba0:	movhi	r1, #39	; 0x27
   12ba4:	strbhi	r1, [r8, r2]
   12ba8:	cmp	r4, sl
   12bac:	add	r9, r9, #1
   12bb0:	movcc	r3, #92	; 0x5c
   12bb4:	strbcc	r3, [r8, r4]
   12bb8:	add	r4, r4, #1
   12bbc:	cmp	r4, sl
   12bc0:	ldr	r3, [sp, #36]	; 0x24
   12bc4:	strbcc	r5, [r8, r4]
   12bc8:	cmp	r6, #0
   12bcc:	add	r4, r4, #1
   12bd0:	moveq	r3, #0
   12bd4:	str	r3, [sp, #36]	; 0x24
   12bd8:	ldr	r3, [sp, #28]
   12bdc:	cmn	r3, #1
   12be0:	bne	12688 <__snprintf_chk@plt+0x1898>
   12be4:	ldr	r3, [sp, #32]
   12be8:	ldrb	r6, [r3, r9]
   12bec:	adds	r6, r6, #0
   12bf0:	movne	r6, #1
   12bf4:	cmp	r6, #0
   12bf8:	bne	1269c <__snprintf_chk@plt+0x18ac>
   12bfc:	str	fp, [sp, #152]	; 0x98
   12c00:	mov	fp, r8
   12c04:	cmp	r4, #0
   12c08:	ldr	r1, [sp, #44]	; 0x2c
   12c0c:	movne	r3, #0
   12c10:	ldr	r8, [sp, #152]	; 0x98
   12c14:	sub	r2, r8, #2
   12c18:	clz	r2, r2
   12c1c:	lsr	r2, r2, #5
   12c20:	andeq	r3, r2, r1
   12c24:	cmp	r3, #0
   12c28:	bne	13ce4 <__snprintf_chk@plt+0x2ef4>
   12c2c:	eor	r3, r1, #1
   12c30:	ands	r2, r2, r3
   12c34:	beq	13c10 <__snprintf_chk@plt+0x2e20>
   12c38:	ldr	r3, [sp, #68]	; 0x44
   12c3c:	cmp	r3, #0
   12c40:	beq	13c14 <__snprintf_chk@plt+0x2e24>
   12c44:	ldr	r3, [sp, #36]	; 0x24
   12c48:	cmp	r3, #0
   12c4c:	bne	13ca0 <__snprintf_chk@plt+0x2eb0>
   12c50:	ldr	r3, [sp, #72]	; 0x48
   12c54:	adds	r3, r3, #0
   12c58:	movne	r3, #1
   12c5c:	cmp	sl, #0
   12c60:	movne	r3, #0
   12c64:	cmp	r3, #0
   12c68:	ldreq	r2, [sp, #68]	; 0x44
   12c6c:	beq	13c14 <__snprintf_chk@plt+0x2e24>
   12c70:	ldr	r2, [sp, #72]	; 0x48
   12c74:	str	r3, [sp, #68]	; 0x44
   12c78:	movw	r3, #24124	; 0x5e3c
   12c7c:	movt	r3, #1
   12c80:	mov	r1, #39	; 0x27
   12c84:	mov	r4, #1
   12c88:	ldr	sl, [sp, #72]	; 0x48
   12c8c:	mov	r8, #2
   12c90:	str	r3, [sp, #60]	; 0x3c
   12c94:	mov	r3, #0
   12c98:	strb	r1, [fp]
   12c9c:	str	r3, [sp, #44]	; 0x2c
   12ca0:	str	r4, [sp, #56]	; 0x38
   12ca4:	str	r2, [sp, #72]	; 0x48
   12ca8:	b	1266c <__snprintf_chk@plt+0x187c>
   12cac:	mov	r7, #0
   12cb0:	cmp	fp, #2
   12cb4:	beq	13594 <__snprintf_chk@plt+0x27a4>
   12cb8:	ldr	r2, [sp, #40]	; 0x28
   12cbc:	ldr	r3, [sp, #56]	; 0x38
   12cc0:	ldr	r1, [sp, #44]	; 0x2c
   12cc4:	cmp	r3, #0
   12cc8:	moveq	r3, #0
   12ccc:	andne	r3, r2, r1
   12cd0:	cmp	r3, #0
   12cd4:	moveq	r5, #92	; 0x5c
   12cd8:	moveq	r3, r5
   12cdc:	bne	135a0 <__snprintf_chk@plt+0x27b0>
   12ce0:	ldr	r2, [sp, #40]	; 0x28
   12ce4:	cmp	r2, #0
   12ce8:	bne	139dc <__snprintf_chk@plt+0x2bec>
   12cec:	mov	r6, #0
   12cf0:	ldr	r3, [sp, #44]	; 0x2c
   12cf4:	cmp	r3, #0
   12cf8:	beq	1358c <__snprintf_chk@plt+0x279c>
   12cfc:	mov	r3, #0
   12d00:	b	12b1c <__snprintf_chk@plt+0x1d2c>
   12d04:	mov	r7, #0
   12d08:	cmp	fp, #2
   12d0c:	beq	13604 <__snprintf_chk@plt+0x2814>
   12d10:	cmp	fp, #5
   12d14:	beq	135c8 <__snprintf_chk@plt+0x27d8>
   12d18:	sub	r3, fp, #2
   12d1c:	mov	r6, #0
   12d20:	clz	r3, r3
   12d24:	mov	r5, #63	; 0x3f
   12d28:	lsr	r3, r3, #5
   12d2c:	b	12b0c <__snprintf_chk@plt+0x1d1c>
   12d30:	mov	r7, #0
   12d34:	cmp	fp, #2
   12d38:	movne	r3, #0
   12d3c:	movne	r5, #39	; 0x27
   12d40:	strne	r6, [sp, #68]	; 0x44
   12d44:	bne	12b0c <__snprintf_chk@plt+0x1d1c>
   12d48:	ldr	r3, [sp, #44]	; 0x2c
   12d4c:	cmp	r3, #0
   12d50:	bne	13a0c <__snprintf_chk@plt+0x2c1c>
   12d54:	ldr	r3, [sp, #72]	; 0x48
   12d58:	cmp	sl, #0
   12d5c:	clz	r3, r3
   12d60:	lsr	r3, r3, #5
   12d64:	moveq	r3, #0
   12d68:	cmp	r3, #0
   12d6c:	bne	13938 <__snprintf_chk@plt+0x2b48>
   12d70:	cmp	sl, r4
   12d74:	movhi	r3, #39	; 0x27
   12d78:	strbhi	r3, [r8, r4]
   12d7c:	add	r3, r4, #1
   12d80:	cmp	sl, r3
   12d84:	movhi	r2, #92	; 0x5c
   12d88:	strbhi	r2, [r8, r3]
   12d8c:	add	r3, r4, #2
   12d90:	cmp	sl, r3
   12d94:	bls	12da0 <__snprintf_chk@plt+0x1fb0>
   12d98:	mov	r2, #39	; 0x27
   12d9c:	strb	r2, [r8, r3]
   12da0:	mov	r3, #0
   12da4:	cmp	r7, #0
   12da8:	add	r4, r4, #3
   12dac:	mov	r5, #39	; 0x27
   12db0:	str	r3, [sp, #48]	; 0x30
   12db4:	str	r6, [sp, #68]	; 0x44
   12db8:	bne	12b4c <__snprintf_chk@plt+0x1d5c>
   12dbc:	ldr	r2, [sp, #48]	; 0x30
   12dc0:	eor	r3, r3, #1
   12dc4:	add	r9, r9, #1
   12dc8:	and	r3, r3, r2
   12dcc:	uxtb	r3, r3
   12dd0:	cmp	r3, #0
   12dd4:	beq	12bbc <__snprintf_chk@plt+0x1dcc>
   12dd8:	cmp	sl, r4
   12ddc:	movhi	r3, #39	; 0x27
   12de0:	strbhi	r3, [r8, r4]
   12de4:	add	r3, r4, #1
   12de8:	add	r4, r4, #2
   12dec:	cmp	sl, r3
   12df0:	movhi	r2, #39	; 0x27
   12df4:	strbhi	r2, [r8, r3]
   12df8:	mov	r3, #0
   12dfc:	str	r3, [sp, #48]	; 0x30
   12e00:	b	12bbc <__snprintf_chk@plt+0x1dcc>
   12e04:	mov	r3, #118	; 0x76
   12e08:	b	12ce0 <__snprintf_chk@plt+0x1ef0>
   12e0c:	mov	r3, #116	; 0x74
   12e10:	ldr	r2, [sp, #44]	; 0x2c
   12e14:	cmp	fp, #2
   12e18:	movne	r2, #0
   12e1c:	andeq	r2, r2, #1
   12e20:	cmp	r2, #0
   12e24:	beq	12ce0 <__snprintf_chk@plt+0x1ef0>
   12e28:	mov	fp, r8
   12e2c:	mov	r8, #2
   12e30:	ldr	r3, [sp, #40]	; 0x28
   12e34:	cmp	r3, #0
   12e38:	movne	r8, #4
   12e3c:	mov	lr, #0
   12e40:	mov	r0, fp
   12e44:	ldr	r2, [sp, #32]
   12e48:	ldr	r3, [sp, #156]	; 0x9c
   12e4c:	ldr	r1, [sp, #164]	; 0xa4
   12e50:	bic	ip, r3, #2
   12e54:	ldr	r3, [sp, #28]
   12e58:	stm	sp, {r8, ip, lr}
   12e5c:	ldr	ip, [sp, #168]	; 0xa8
   12e60:	str	r1, [sp, #12]
   12e64:	mov	r1, sl
   12e68:	str	ip, [sp, #16]
   12e6c:	bl	12584 <__snprintf_chk@plt+0x1794>
   12e70:	mov	r4, r0
   12e74:	mov	r0, r4
   12e78:	add	sp, sp, #116	; 0x74
   12e7c:	ldrd	r4, [sp]
   12e80:	ldrd	r6, [sp, #8]
   12e84:	ldrd	r8, [sp, #16]
   12e88:	ldrd	sl, [sp, #24]
   12e8c:	add	sp, sp, #32
   12e90:	pop	{pc}		; (ldr pc, [sp], #4)
   12e94:	mov	r5, #102	; 0x66
   12e98:	ldr	r2, [sp, #44]	; 0x2c
   12e9c:	sub	r3, fp, #2
   12ea0:	clz	r3, r3
   12ea4:	lsr	r3, r3, #5
   12ea8:	cmp	r2, #0
   12eac:	bne	13908 <__snprintf_chk@plt+0x2b18>
   12eb0:	mov	r6, r2
   12eb4:	b	12ba8 <__snprintf_chk@plt+0x1db8>
   12eb8:	mov	r5, #110	; 0x6e
   12ebc:	mov	r6, #0
   12ec0:	b	12b4c <__snprintf_chk@plt+0x1d5c>
   12ec4:	mov	r5, #98	; 0x62
   12ec8:	b	12e98 <__snprintf_chk@plt+0x20a8>
   12ecc:	mov	r5, #97	; 0x61
   12ed0:	b	12e98 <__snprintf_chk@plt+0x20a8>
   12ed4:	mov	r7, #0
   12ed8:	mov	r6, #0
   12edc:	b	12cfc <__snprintf_chk@plt+0x1f0c>
   12ee0:	mov	r5, #114	; 0x72
   12ee4:	b	12ebc <__snprintf_chk@plt+0x20cc>
   12ee8:	ldr	r3, [sp, #44]	; 0x2c
   12eec:	cmp	r3, #0
   12ef0:	bne	13c80 <__snprintf_chk@plt+0x2e90>
   12ef4:	mov	r7, r3
   12ef8:	ldr	r3, [sp, #48]	; 0x30
   12efc:	sub	r2, fp, #2
   12f00:	clz	r2, r2
   12f04:	lsr	r2, r2, #5
   12f08:	eor	r3, r3, #1
   12f0c:	ands	r3, r2, r3
   12f10:	beq	13924 <__snprintf_chk@plt+0x2b34>
   12f14:	cmp	sl, r4
   12f18:	movhi	r1, #39	; 0x27
   12f1c:	strbhi	r1, [r8, r4]
   12f20:	add	r1, r4, #1
   12f24:	cmp	sl, r1
   12f28:	movhi	r0, #36	; 0x24
   12f2c:	strbhi	r0, [r8, r1]
   12f30:	add	r1, r4, #2
   12f34:	cmp	sl, r1
   12f38:	movhi	r0, #39	; 0x27
   12f3c:	strbhi	r0, [r8, r1]
   12f40:	add	r1, r4, #3
   12f44:	cmp	sl, r1
   12f48:	bls	1397c <__snprintf_chk@plt+0x2b8c>
   12f4c:	mov	r4, r1
   12f50:	mov	r1, #92	; 0x5c
   12f54:	mov	r0, r4
   12f58:	str	r3, [sp, #48]	; 0x30
   12f5c:	strb	r1, [r8, r4]
   12f60:	cmp	fp, #2
   12f64:	add	r4, r4, #1
   12f68:	beq	139cc <__snprintf_chk@plt+0x2bdc>
   12f6c:	ldr	r1, [sp, #28]
   12f70:	add	r3, r9, #1
   12f74:	cmp	r3, r1
   12f78:	bcs	12f90 <__snprintf_chk@plt+0x21a0>
   12f7c:	ldr	r1, [sp, #32]
   12f80:	ldrb	r3, [r1, r3]
   12f84:	sub	r3, r3, #48	; 0x30
   12f88:	cmp	r3, #9
   12f8c:	bls	139e4 <__snprintf_chk@plt+0x2bf4>
   12f90:	mov	r5, #48	; 0x30
   12f94:	ldr	r3, [sp, #40]	; 0x28
   12f98:	eor	r3, r3, #1
   12f9c:	orrs	r2, r2, r3
   12fa0:	mov	r3, r6
   12fa4:	moveq	r6, r2
   12fa8:	beq	12b1c <__snprintf_chk@plt+0x1d2c>
   12fac:	mov	r6, #0
   12fb0:	b	12b44 <__snprintf_chk@plt+0x1d54>
   12fb4:	cmp	r9, #0
   12fb8:	mov	r2, r7
   12fbc:	bne	1355c <__snprintf_chk@plt+0x276c>
   12fc0:	mov	r6, r7
   12fc4:	mov	r3, r9
   12fc8:	mov	r7, r2
   12fcc:	b	12b0c <__snprintf_chk@plt+0x1d1c>
   12fd0:	mov	r2, r7
   12fd4:	mov	r6, r7
   12fd8:	mov	r3, #0
   12fdc:	mov	r7, r2
   12fe0:	mov	r5, #32
   12fe4:	b	12b0c <__snprintf_chk@plt+0x1d1c>
   12fe8:	mov	r6, r7
   12fec:	b	12cfc <__snprintf_chk@plt+0x1f0c>
   12ff0:	mov	r7, #0
   12ff4:	ldr	r3, [sp, #64]	; 0x40
   12ff8:	cmp	r3, #1
   12ffc:	bne	1361c <__snprintf_chk@plt+0x282c>
   13000:	bl	10d0c <__ctype_b_loc@plt>
   13004:	ldr	r2, [r0]
   13008:	sxth	r3, r5
   1300c:	lsl	r3, r3, #1
   13010:	ldr	r1, [sp, #64]	; 0x40
   13014:	ldrh	r3, [r2, r3]
   13018:	mov	ip, r1
   1301c:	and	r3, r3, #16384	; 0x4000
   13020:	cmp	r3, #0
   13024:	ldr	r3, [sp, #40]	; 0x28
   13028:	movne	r6, #1
   1302c:	moveq	r6, #0
   13030:	movne	r2, #0
   13034:	andeq	r2, r3, #1
   13038:	cmp	r2, #0
   1303c:	bne	13964 <__snprintf_chk@plt+0x2b74>
   13040:	sub	r3, fp, #2
   13044:	clz	r3, r3
   13048:	lsr	r3, r3, #5
   1304c:	b	12b0c <__snprintf_chk@plt+0x1d1c>
   13050:	cmp	r4, #0
   13054:	bne	13cf4 <__snprintf_chk@plt+0x2f04>
   13058:	str	r4, [sp, #40]	; 0x28
   1305c:	cmp	sl, #0
   13060:	bne	13d24 <__snprintf_chk@plt+0x2f34>
   13064:	mov	r3, #1
   13068:	movw	r2, #24124	; 0x5e3c
   1306c:	movt	r2, #1
   13070:	mov	r4, r3
   13074:	mov	r8, #2
   13078:	str	r3, [sp, #36]	; 0x24
   1307c:	str	sl, [sp, #44]	; 0x2c
   13080:	str	sl, [sp, #48]	; 0x30
   13084:	str	r3, [sp, #56]	; 0x38
   13088:	str	r2, [sp, #60]	; 0x3c
   1308c:	str	sl, [sp, #68]	; 0x44
   13090:	str	sl, [sp, #72]	; 0x48
   13094:	b	1266c <__snprintf_chk@plt+0x187c>
   13098:	ldr	r3, [sp, #32]
   1309c:	ldrb	r5, [r3, r9]
   130a0:	cmp	r5, #126	; 0x7e
   130a4:	ldrls	pc, [pc, r5, lsl #2]
   130a8:	b	12ff4 <__snprintf_chk@plt+0x2204>
   130ac:	ldrdeq	r3, [r1], -r0
   130b0:	strdeq	r2, [r1], -r4
   130b4:	strdeq	r2, [r1], -r4
   130b8:	strdeq	r2, [r1], -r4
   130bc:	strdeq	r2, [r1], -r4
   130c0:	strdeq	r2, [r1], -r4
   130c4:	strdeq	r2, [r1], -r4
   130c8:	andeq	r3, r1, r8, asr #5
   130cc:	andeq	r3, r1, r0, asr #5
   130d0:	andeq	r2, r1, ip, lsl #28
   130d4:			; <UNDEFINED> instruction: 0x000132b8
   130d8:	andeq	r2, r1, r4, lsl #28
   130dc:			; <UNDEFINED> instruction: 0x000132b0
   130e0:	andeq	r3, r1, r8, lsr #5
   130e4:	strdeq	r2, [r1], -r4
   130e8:	strdeq	r2, [r1], -r4
   130ec:	strdeq	r2, [r1], -r4
   130f0:	strdeq	r2, [r1], -r4
   130f4:	strdeq	r2, [r1], -r4
   130f8:	strdeq	r2, [r1], -r4
   130fc:	strdeq	r2, [r1], -r4
   13100:	strdeq	r2, [r1], -r4
   13104:	strdeq	r2, [r1], -r4
   13108:	strdeq	r2, [r1], -r4
   1310c:	strdeq	r2, [r1], -r4
   13110:	strdeq	r2, [r1], -r4
   13114:	strdeq	r2, [r1], -r4
   13118:	strdeq	r2, [r1], -r4
   1311c:	strdeq	r2, [r1], -r4
   13120:	strdeq	r2, [r1], -r4
   13124:	strdeq	r2, [r1], -r4
   13128:	strdeq	r2, [r1], -r4
   1312c:	andeq	r3, r1, r4, lsr #6
   13130:	andeq	r3, r1, r4, lsl #6
   13134:	andeq	r3, r1, r4, lsl #6
   13138:	strdeq	r3, [r1], -r4
   1313c:	andeq	r3, r1, r4, lsl #6
   13140:	andeq	r3, r1, r0, asr #32
   13144:	andeq	r3, r1, r4, lsl #6
   13148:	andeq	r2, r1, r4, lsr sp
   1314c:	andeq	r3, r1, r4, lsl #6
   13150:	andeq	r3, r1, r4, lsl #6
   13154:	andeq	r3, r1, r4, lsl #6
   13158:	andeq	r3, r1, r0, asr #32
   1315c:	andeq	r3, r1, r0, asr #32
   13160:	andeq	r3, r1, r0, asr #32
   13164:	andeq	r3, r1, r0, asr #32
   13168:	andeq	r3, r1, r0, asr #32
   1316c:	andeq	r3, r1, r0, asr #32
   13170:	andeq	r3, r1, r0, asr #32
   13174:	andeq	r3, r1, r0, asr #32
   13178:	andeq	r3, r1, r0, asr #32
   1317c:	andeq	r3, r1, r0, asr #32
   13180:	andeq	r3, r1, r0, asr #32
   13184:	andeq	r3, r1, r0, asr #32
   13188:	andeq	r3, r1, r0, asr #32
   1318c:	andeq	r3, r1, r0, asr #32
   13190:	andeq	r3, r1, r0, asr #32
   13194:	andeq	r3, r1, r0, asr #32
   13198:	andeq	r3, r1, r4, lsl #6
   1319c:	andeq	r3, r1, r4, lsl #6
   131a0:	andeq	r3, r1, r4, lsl #6
   131a4:	andeq	r3, r1, r4, lsl #6
   131a8:	andeq	r2, r1, r8, lsl #26
   131ac:	strdeq	r2, [r1], -r4
   131b0:	andeq	r3, r1, r0, asr #32
   131b4:	andeq	r3, r1, r0, asr #32
   131b8:	andeq	r3, r1, r0, asr #32
   131bc:	andeq	r3, r1, r0, asr #32
   131c0:	andeq	r3, r1, r0, asr #32
   131c4:	andeq	r3, r1, r0, asr #32
   131c8:	andeq	r3, r1, r0, asr #32
   131cc:	andeq	r3, r1, r0, asr #32
   131d0:	andeq	r3, r1, r0, asr #32
   131d4:	andeq	r3, r1, r0, asr #32
   131d8:	andeq	r3, r1, r0, asr #32
   131dc:	andeq	r3, r1, r0, asr #32
   131e0:	andeq	r3, r1, r0, asr #32
   131e4:	andeq	r3, r1, r0, asr #32
   131e8:	andeq	r3, r1, r0, asr #32
   131ec:	andeq	r3, r1, r0, asr #32
   131f0:	andeq	r3, r1, r0, asr #32
   131f4:	andeq	r3, r1, r0, asr #32
   131f8:	andeq	r3, r1, r0, asr #32
   131fc:	andeq	r3, r1, r0, asr #32
   13200:	andeq	r3, r1, r0, asr #32
   13204:	andeq	r3, r1, r0, asr #32
   13208:	andeq	r3, r1, r0, asr #32
   1320c:	andeq	r3, r1, r0, asr #32
   13210:	andeq	r3, r1, r0, asr #32
   13214:	andeq	r3, r1, r0, asr #32
   13218:	andeq	r3, r1, r4, lsl #6
   1321c:			; <UNDEFINED> instruction: 0x00012cb0
   13220:	andeq	r3, r1, r0, asr #32
   13224:	andeq	r3, r1, r4, lsl #6
   13228:	andeq	r3, r1, r0, asr #32
   1322c:	andeq	r3, r1, r4, lsl #6
   13230:	andeq	r3, r1, r0, asr #32
   13234:	andeq	r3, r1, r0, asr #32
   13238:	andeq	r3, r1, r0, asr #32
   1323c:	andeq	r3, r1, r0, asr #32
   13240:	andeq	r3, r1, r0, asr #32
   13244:	andeq	r3, r1, r0, asr #32
   13248:	andeq	r3, r1, r0, asr #32
   1324c:	andeq	r3, r1, r0, asr #32
   13250:	andeq	r3, r1, r0, asr #32
   13254:	andeq	r3, r1, r0, asr #32
   13258:	andeq	r3, r1, r0, asr #32
   1325c:	andeq	r3, r1, r0, asr #32
   13260:	andeq	r3, r1, r0, asr #32
   13264:	andeq	r3, r1, r0, asr #32
   13268:	andeq	r3, r1, r0, asr #32
   1326c:	andeq	r3, r1, r0, asr #32
   13270:	andeq	r3, r1, r0, asr #32
   13274:	andeq	r3, r1, r0, asr #32
   13278:	andeq	r3, r1, r0, asr #32
   1327c:	andeq	r3, r1, r0, asr #32
   13280:	andeq	r3, r1, r0, asr #32
   13284:	andeq	r3, r1, r0, asr #32
   13288:	andeq	r3, r1, r0, asr #32
   1328c:	andeq	r3, r1, r0, asr #32
   13290:	andeq	r3, r1, r0, asr #32
   13294:	andeq	r3, r1, r0, asr #32
   13298:	ldrdeq	r2, [r1], -r4
   1329c:	andeq	r3, r1, r4, lsl #6
   132a0:	ldrdeq	r2, [r1], -r4
   132a4:	strdeq	r3, [r1], -r4
   132a8:	mov	r3, #114	; 0x72
   132ac:	b	12e10 <__snprintf_chk@plt+0x2020>
   132b0:	mov	r3, #102	; 0x66
   132b4:	b	12ce0 <__snprintf_chk@plt+0x1ef0>
   132b8:	mov	r3, #110	; 0x6e
   132bc:	b	12e10 <__snprintf_chk@plt+0x2020>
   132c0:	mov	r3, #98	; 0x62
   132c4:	b	12ce0 <__snprintf_chk@plt+0x1ef0>
   132c8:	mov	r3, #97	; 0x61
   132cc:	b	12ce0 <__snprintf_chk@plt+0x1ef0>
   132d0:	ldr	r3, [sp, #40]	; 0x28
   132d4:	cmp	r3, #0
   132d8:	bne	12ee8 <__snprintf_chk@plt+0x20f8>
   132dc:	ldr	r3, [sp, #156]	; 0x9c
   132e0:	tst	r3, #1
   132e4:	addne	r9, r9, #1
   132e8:	bne	1267c <__snprintf_chk@plt+0x188c>
   132ec:	ldr	r7, [sp, #40]	; 0x28
   132f0:	b	12cec <__snprintf_chk@plt+0x1efc>
   132f4:	sub	r3, fp, #2
   132f8:	clz	r3, r3
   132fc:	lsr	r3, r3, #5
   13300:	b	12b00 <__snprintf_chk@plt+0x1d10>
   13304:	sub	r3, fp, #2
   13308:	mov	r6, #0
   1330c:	clz	r3, r3
   13310:	lsr	r3, r3, #5
   13314:	ldr	r2, [sp, #44]	; 0x2c
   13318:	tst	r2, r3
   1331c:	beq	12b0c <__snprintf_chk@plt+0x1d1c>
   13320:	b	12e28 <__snprintf_chk@plt+0x2038>
   13324:	sub	r3, fp, #2
   13328:	clz	r3, r3
   1332c:	lsr	r3, r3, #5
   13330:	b	13314 <__snprintf_chk@plt+0x2524>
   13334:	ldr	r3, [sp, #52]	; 0x34
   13338:	ldrb	r5, [r3]
   1333c:	cmp	r5, #126	; 0x7e
   13340:	ldrls	pc, [pc, r5, lsl #2]
   13344:	b	12ff0 <__snprintf_chk@plt+0x2200>
   13348:	andeq	r2, r1, r8, ror #29
   1334c:	strdeq	r2, [r1], -r0
   13350:	strdeq	r2, [r1], -r0
   13354:	strdeq	r2, [r1], -r0
   13358:	strdeq	r2, [r1], -r0
   1335c:	strdeq	r2, [r1], -r0
   13360:	strdeq	r2, [r1], -r0
   13364:	andeq	r2, r1, ip, asr #29
   13368:	andeq	r2, r1, r4, asr #29
   1336c:	andeq	r3, r1, r0, lsl #11
   13370:			; <UNDEFINED> instruction: 0x00012eb8
   13374:	andeq	r3, r1, r4, ror r5
   13378:	muleq	r1, r4, lr
   1337c:	andeq	r2, r1, r0, ror #29
   13380:	strdeq	r2, [r1], -r0
   13384:	strdeq	r2, [r1], -r0
   13388:	strdeq	r2, [r1], -r0
   1338c:	strdeq	r2, [r1], -r0
   13390:	strdeq	r2, [r1], -r0
   13394:	strdeq	r2, [r1], -r0
   13398:	strdeq	r2, [r1], -r0
   1339c:	strdeq	r2, [r1], -r0
   133a0:	strdeq	r2, [r1], -r0
   133a4:	strdeq	r2, [r1], -r0
   133a8:	strdeq	r2, [r1], -r0
   133ac:	strdeq	r2, [r1], -r0
   133b0:	strdeq	r2, [r1], -r0
   133b4:	strdeq	r2, [r1], -r0
   133b8:	strdeq	r2, [r1], -r0
   133bc:	strdeq	r2, [r1], -r0
   133c0:	strdeq	r2, [r1], -r0
   133c4:	strdeq	r2, [r1], -r0
   133c8:	andeq	r3, r1, ip, ror #10
   133cc:	ldrdeq	r2, [r1], -r4
   133d0:	ldrdeq	r2, [r1], -r4
   133d4:	andeq	r3, r1, r0, asr r5
   133d8:	ldrdeq	r2, [r1], -r4
   133dc:	andeq	r3, r1, r4, asr #10
   133e0:	ldrdeq	r2, [r1], -r4
   133e4:	andeq	r2, r1, r0, lsr sp
   133e8:	ldrdeq	r2, [r1], -r4
   133ec:	ldrdeq	r2, [r1], -r4
   133f0:	ldrdeq	r2, [r1], -r4
   133f4:	andeq	r3, r1, r4, asr #10
   133f8:	andeq	r3, r1, r4, asr #10
   133fc:	andeq	r3, r1, r4, asr #10
   13400:	andeq	r3, r1, r4, asr #10
   13404:	andeq	r3, r1, r4, asr #10
   13408:	andeq	r3, r1, r4, asr #10
   1340c:	andeq	r3, r1, r4, asr #10
   13410:	andeq	r3, r1, r4, asr #10
   13414:	andeq	r3, r1, r4, asr #10
   13418:	andeq	r3, r1, r4, asr #10
   1341c:	andeq	r3, r1, r4, asr #10
   13420:	andeq	r3, r1, r4, asr #10
   13424:	andeq	r3, r1, r4, asr #10
   13428:	andeq	r3, r1, r4, asr #10
   1342c:	andeq	r3, r1, r4, asr #10
   13430:	andeq	r3, r1, r4, asr #10
   13434:	ldrdeq	r2, [r1], -r4
   13438:	ldrdeq	r2, [r1], -r4
   1343c:	ldrdeq	r2, [r1], -r4
   13440:	ldrdeq	r2, [r1], -r4
   13444:	andeq	r2, r1, r4, lsl #26
   13448:	strdeq	r2, [r1], -r0
   1344c:	andeq	r3, r1, r4, asr #10
   13450:	andeq	r3, r1, r4, asr #10
   13454:	andeq	r3, r1, r4, asr #10
   13458:	andeq	r3, r1, r4, asr #10
   1345c:	andeq	r3, r1, r4, asr #10
   13460:	andeq	r3, r1, r4, asr #10
   13464:	andeq	r3, r1, r4, asr #10
   13468:	andeq	r3, r1, r4, asr #10
   1346c:	andeq	r3, r1, r4, asr #10
   13470:	andeq	r3, r1, r4, asr #10
   13474:	andeq	r3, r1, r4, asr #10
   13478:	andeq	r3, r1, r4, asr #10
   1347c:	andeq	r3, r1, r4, asr #10
   13480:	andeq	r3, r1, r4, asr #10
   13484:	andeq	r3, r1, r4, asr #10
   13488:	andeq	r3, r1, r4, asr #10
   1348c:	andeq	r3, r1, r4, asr #10
   13490:	andeq	r3, r1, r4, asr #10
   13494:	andeq	r3, r1, r4, asr #10
   13498:	andeq	r3, r1, r4, asr #10
   1349c:	andeq	r3, r1, r4, asr #10
   134a0:	andeq	r3, r1, r4, asr #10
   134a4:	andeq	r3, r1, r4, asr #10
   134a8:	andeq	r3, r1, r4, asr #10
   134ac:	andeq	r3, r1, r4, asr #10
   134b0:	andeq	r3, r1, r4, asr #10
   134b4:	ldrdeq	r2, [r1], -r4
   134b8:	andeq	r2, r1, ip, lsr #25
   134bc:	andeq	r3, r1, r4, asr #10
   134c0:	ldrdeq	r2, [r1], -r4
   134c4:	andeq	r3, r1, r4, asr #10
   134c8:	ldrdeq	r2, [r1], -r4
   134cc:	andeq	r3, r1, r4, asr #10
   134d0:	andeq	r3, r1, r4, asr #10
   134d4:	andeq	r3, r1, r4, asr #10
   134d8:	andeq	r3, r1, r4, asr #10
   134dc:	andeq	r3, r1, r4, asr #10
   134e0:	andeq	r3, r1, r4, asr #10
   134e4:	andeq	r3, r1, r4, asr #10
   134e8:	andeq	r3, r1, r4, asr #10
   134ec:	andeq	r3, r1, r4, asr #10
   134f0:	andeq	r3, r1, r4, asr #10
   134f4:	andeq	r3, r1, r4, asr #10
   134f8:	andeq	r3, r1, r4, asr #10
   134fc:	andeq	r3, r1, r4, asr #10
   13500:	andeq	r3, r1, r4, asr #10
   13504:	andeq	r3, r1, r4, asr #10
   13508:	andeq	r3, r1, r4, asr #10
   1350c:	andeq	r3, r1, r4, asr #10
   13510:	andeq	r3, r1, r4, asr #10
   13514:	andeq	r3, r1, r4, asr #10
   13518:	andeq	r3, r1, r4, asr #10
   1351c:	andeq	r3, r1, r4, asr #10
   13520:	andeq	r3, r1, r4, asr #10
   13524:	andeq	r3, r1, r4, asr #10
   13528:	andeq	r3, r1, r4, asr #10
   1352c:	andeq	r3, r1, r4, asr #10
   13530:	andeq	r3, r1, r4, asr #10
   13534:	ldrdeq	r2, [r1], -r0
   13538:	ldrdeq	r2, [r1], -r4
   1353c:	ldrdeq	r2, [r1], -r0
   13540:	andeq	r3, r1, r0, asr r5
   13544:	mov	r6, r7
   13548:	mov	r7, #0
   1354c:	b	12cfc <__snprintf_chk@plt+0x1f0c>
   13550:	cmp	r9, #0
   13554:	mov	r2, #0
   13558:	beq	12fc0 <__snprintf_chk@plt+0x21d0>
   1355c:	mov	r6, #0
   13560:	mov	r7, r2
   13564:	mov	r3, r6
   13568:	b	12b1c <__snprintf_chk@plt+0x1d2c>
   1356c:	mov	r2, #0
   13570:	b	12fd4 <__snprintf_chk@plt+0x21e4>
   13574:	mov	r7, #0
   13578:	mov	r3, #118	; 0x76
   1357c:	b	12ce0 <__snprintf_chk@plt+0x1ef0>
   13580:	mov	r7, #0
   13584:	mov	r3, #116	; 0x74
   13588:	b	12e10 <__snprintf_chk@plt+0x2020>
   1358c:	ldr	r3, [sp, #44]	; 0x2c
   13590:	b	12b44 <__snprintf_chk@plt+0x1d54>
   13594:	ldr	r3, [sp, #44]	; 0x2c
   13598:	cmp	r3, #0
   1359c:	bne	13a0c <__snprintf_chk@plt+0x2c1c>
   135a0:	add	r9, r9, #1
   135a4:	mov	r6, #0
   135a8:	ldr	r3, [sp, #48]	; 0x30
   135ac:	mov	r5, #92	; 0x5c
   135b0:	b	12dd0 <__snprintf_chk@plt+0x1fe0>
   135b4:	ldr	r3, [sp, #32]
   135b8:	ldrb	r2, [r3, #1]
   135bc:	adds	r2, r2, #0
   135c0:	movne	r2, #1
   135c4:	b	12aec <__snprintf_chk@plt+0x1cfc>
   135c8:	ldr	r3, [sp, #156]	; 0x9c
   135cc:	ands	r3, r3, #4
   135d0:	beq	135f8 <__snprintf_chk@plt+0x2808>
   135d4:	ldr	r2, [sp, #28]
   135d8:	add	r3, r9, #2
   135dc:	cmp	r3, r2
   135e0:	bcs	135f4 <__snprintf_chk@plt+0x2804>
   135e4:	ldr	r2, [sp, #52]	; 0x34
   135e8:	ldrb	r5, [r2, #1]
   135ec:	cmp	r5, #63	; 0x3f
   135f0:	beq	13a70 <__snprintf_chk@plt+0x2c80>
   135f4:	mov	r3, #0
   135f8:	mov	r5, #63	; 0x3f
   135fc:	mov	r6, r3
   13600:	b	12b0c <__snprintf_chk@plt+0x1d1c>
   13604:	ldr	r3, [sp, #44]	; 0x2c
   13608:	cmp	r3, #0
   1360c:	bne	13a0c <__snprintf_chk@plt+0x2c1c>
   13610:	mov	r6, r3
   13614:	mov	r5, #63	; 0x3f
   13618:	b	12b44 <__snprintf_chk@plt+0x1d54>
   1361c:	ldr	r1, [sp, #28]
   13620:	mov	r2, #0
   13624:	mov	r3, #0
   13628:	strd	r2, [sp, #104]	; 0x68
   1362c:	cmn	r1, #1
   13630:	bne	13640 <__snprintf_chk@plt+0x2850>
   13634:	ldr	r0, [sp, #32]
   13638:	bl	10d24 <strlen@plt>
   1363c:	str	r0, [sp, #28]
   13640:	str	r8, [sp, #76]	; 0x4c
   13644:	mov	r3, #0
   13648:	str	sl, [sp, #80]	; 0x50
   1364c:	ldr	sl, [sp, #32]
   13650:	str	r5, [sp, #84]	; 0x54
   13654:	mov	r5, r3
   13658:	ldr	r8, [sp, #44]	; 0x2c
   1365c:	str	r7, [sp, #88]	; 0x58
   13660:	str	r4, [sp, #92]	; 0x5c
   13664:	ldr	r2, [sp, #28]
   13668:	add	r4, r9, r5
   1366c:	add	r3, sp, #104	; 0x68
   13670:	add	r7, sl, r4
   13674:	add	r0, sp, #100	; 0x64
   13678:	mov	r1, r7
   1367c:	sub	r2, r2, r4
   13680:	bl	1548c <__snprintf_chk@plt+0x469c>
   13684:	subs	r1, r0, #0
   13688:	beq	136d4 <__snprintf_chk@plt+0x28e4>
   1368c:	cmn	r1, #1
   13690:	beq	13a4c <__snprintf_chk@plt+0x2c5c>
   13694:	cmn	r1, #2
   13698:	beq	13b6c <__snprintf_chk@plt+0x2d7c>
   1369c:	cmp	fp, #2
   136a0:	movne	r3, #0
   136a4:	andeq	r3, r8, #1
   136a8:	cmp	r3, #0
   136ac:	bne	13838 <__snprintf_chk@plt+0x2a48>
   136b0:	ldr	r0, [sp, #100]	; 0x64
   136b4:	add	r5, r5, r1
   136b8:	bl	10c64 <iswprint@plt>
   136bc:	cmp	r0, #0
   136c0:	add	r0, sp, #104	; 0x68
   136c4:	moveq	r6, #0
   136c8:	bl	10c10 <mbsinit@plt>
   136cc:	cmp	r0, #0
   136d0:	beq	13664 <__snprintf_chk@plt+0x2874>
   136d4:	ldr	r3, [sp, #40]	; 0x28
   136d8:	mov	ip, r5
   136dc:	eor	r2, r6, #1
   136e0:	ldr	r8, [sp, #76]	; 0x4c
   136e4:	ldr	sl, [sp, #80]	; 0x50
   136e8:	and	r2, r2, r3
   136ec:	ldr	r5, [sp, #84]	; 0x54
   136f0:	ldr	r7, [sp, #88]	; 0x58
   136f4:	ldr	r4, [sp, #92]	; 0x5c
   136f8:	cmp	ip, #1
   136fc:	bls	13038 <__snprintf_chk@plt+0x2248>
   13700:	add	r1, ip, r9
   13704:	mov	r0, #39	; 0x27
   13708:	ldr	lr, [sp, #52]	; 0x34
   1370c:	mov	ip, #0
   13710:	str	r6, [sp, #52]	; 0x34
   13714:	ldr	r6, [sp, #48]	; 0x30
   13718:	b	137d4 <__snprintf_chk@plt+0x29e4>
   1371c:	ldr	ip, [sp, #44]	; 0x2c
   13720:	sub	r3, fp, #2
   13724:	clz	r3, r3
   13728:	lsr	r3, r3, #5
   1372c:	cmp	ip, #0
   13730:	bne	13944 <__snprintf_chk@plt+0x2b54>
   13734:	eor	ip, r6, #1
   13738:	ands	r3, r3, ip
   1373c:	beq	1376c <__snprintf_chk@plt+0x297c>
   13740:	cmp	sl, r4
   13744:	add	ip, r4, #1
   13748:	strbhi	r0, [r8, r4]
   1374c:	cmp	sl, ip
   13750:	movhi	r6, #36	; 0x24
   13754:	strbhi	r6, [r8, ip]
   13758:	add	ip, r4, #2
   1375c:	mov	r6, r3
   13760:	cmp	sl, ip
   13764:	add	r4, r4, #3
   13768:	strbhi	r0, [r8, ip]
   1376c:	cmp	sl, r4
   13770:	movhi	r3, #92	; 0x5c
   13774:	strbhi	r3, [r8, r4]
   13778:	add	r3, r4, #1
   1377c:	cmp	sl, r3
   13780:	bls	13790 <__snprintf_chk@plt+0x29a0>
   13784:	lsr	ip, r5, #6
   13788:	add	ip, ip, #48	; 0x30
   1378c:	strb	ip, [r8, r3]
   13790:	add	r3, r4, #2
   13794:	cmp	sl, r3
   13798:	bls	137a8 <__snprintf_chk@plt+0x29b8>
   1379c:	ubfx	ip, r5, #3, #3
   137a0:	add	ip, ip, #48	; 0x30
   137a4:	strb	ip, [r8, r3]
   137a8:	add	r9, r9, #1
   137ac:	and	r5, r5, #7
   137b0:	cmp	r9, r1
   137b4:	add	r5, r5, #48	; 0x30
   137b8:	add	r4, r4, #3
   137bc:	bcs	13970 <__snprintf_chk@plt+0x2b80>
   137c0:	mov	ip, r2
   137c4:	cmp	sl, r4
   137c8:	strbhi	r5, [r8, r4]
   137cc:	add	r4, r4, #1
   137d0:	ldrb	r5, [lr, #1]!
   137d4:	cmp	r2, #0
   137d8:	bne	1371c <__snprintf_chk@plt+0x292c>
   137dc:	eor	r3, ip, #1
   137e0:	cmp	r7, #0
   137e4:	and	r3, r3, r6
   137e8:	uxtb	r3, r3
   137ec:	beq	13800 <__snprintf_chk@plt+0x2a10>
   137f0:	cmp	sl, r4
   137f4:	movhi	r7, #92	; 0x5c
   137f8:	strbhi	r7, [r8, r4]
   137fc:	add	r4, r4, #1
   13800:	add	r9, r9, #1
   13804:	cmp	r9, r1
   13808:	bcs	13958 <__snprintf_chk@plt+0x2b68>
   1380c:	cmp	r3, #0
   13810:	beq	13990 <__snprintf_chk@plt+0x2ba0>
   13814:	cmp	sl, r4
   13818:	add	r3, r4, #1
   1381c:	mov	r7, #0
   13820:	strbhi	r0, [r8, r4]
   13824:	cmp	sl, r3
   13828:	add	r4, r4, #2
   1382c:	mov	r6, r7
   13830:	strbhi	r0, [r8, r3]
   13834:	b	137c4 <__snprintf_chk@plt+0x29d4>
   13838:	cmp	r1, #1
   1383c:	beq	136b0 <__snprintf_chk@plt+0x28c0>
   13840:	add	r2, r4, #1
   13844:	add	r3, sl, r1
   13848:	add	r2, sl, r2
   1384c:	add	r4, r3, r4
   13850:	ldrb	r3, [r2], #1
   13854:	sub	r3, r3, #91	; 0x5b
   13858:	cmp	r3, #33	; 0x21
   1385c:	ldrls	pc, [pc, r3, lsl #2]
   13860:	b	138ec <__snprintf_chk@plt+0x2afc>
   13864:	strdeq	r3, [r1], -r8
   13868:	strdeq	r3, [r1], -r8
   1386c:	andeq	r3, r1, ip, ror #17
   13870:	strdeq	r3, [r1], -r8
   13874:	andeq	r3, r1, ip, ror #17
   13878:	strdeq	r3, [r1], -r8
   1387c:	andeq	r3, r1, ip, ror #17
   13880:	andeq	r3, r1, ip, ror #17
   13884:	andeq	r3, r1, ip, ror #17
   13888:	andeq	r3, r1, ip, ror #17
   1388c:	andeq	r3, r1, ip, ror #17
   13890:	andeq	r3, r1, ip, ror #17
   13894:	andeq	r3, r1, ip, ror #17
   13898:	andeq	r3, r1, ip, ror #17
   1389c:	andeq	r3, r1, ip, ror #17
   138a0:	andeq	r3, r1, ip, ror #17
   138a4:	andeq	r3, r1, ip, ror #17
   138a8:	andeq	r3, r1, ip, ror #17
   138ac:	andeq	r3, r1, ip, ror #17
   138b0:	andeq	r3, r1, ip, ror #17
   138b4:	andeq	r3, r1, ip, ror #17
   138b8:	andeq	r3, r1, ip, ror #17
   138bc:	andeq	r3, r1, ip, ror #17
   138c0:	andeq	r3, r1, ip, ror #17
   138c4:	andeq	r3, r1, ip, ror #17
   138c8:	andeq	r3, r1, ip, ror #17
   138cc:	andeq	r3, r1, ip, ror #17
   138d0:	andeq	r3, r1, ip, ror #17
   138d4:	andeq	r3, r1, ip, ror #17
   138d8:	andeq	r3, r1, ip, ror #17
   138dc:	andeq	r3, r1, ip, ror #17
   138e0:	andeq	r3, r1, ip, ror #17
   138e4:	andeq	r3, r1, ip, ror #17
   138e8:	strdeq	r3, [r1], -r8
   138ec:	cmp	r4, r2
   138f0:	bne	13850 <__snprintf_chk@plt+0x2a60>
   138f4:	b	136b0 <__snprintf_chk@plt+0x28c0>
   138f8:	mov	r8, #2
   138fc:	ldr	fp, [sp, #76]	; 0x4c
   13900:	ldr	sl, [sp, #80]	; 0x50
   13904:	b	12e30 <__snprintf_chk@plt+0x2040>
   13908:	ldr	r2, [sp, #40]	; 0x28
   1390c:	str	fp, [sp, #152]	; 0x98
   13910:	mov	fp, r8
   13914:	ldr	r8, [sp, #152]	; 0x98
   13918:	and	r2, r2, r3
   1391c:	str	r2, [sp, #40]	; 0x28
   13920:	b	12e30 <__snprintf_chk@plt+0x2040>
   13924:	cmp	sl, r4
   13928:	movls	r0, r4
   1392c:	bls	12f60 <__snprintf_chk@plt+0x2170>
   13930:	ldr	r3, [sp, #48]	; 0x30
   13934:	b	12f50 <__snprintf_chk@plt+0x2160>
   13938:	str	sl, [sp, #72]	; 0x48
   1393c:	ldr	sl, [sp, #44]	; 0x2c
   13940:	b	12da0 <__snprintf_chk@plt+0x1fb0>
   13944:	str	r3, [sp, #40]	; 0x28
   13948:	str	fp, [sp, #152]	; 0x98
   1394c:	mov	fp, r8
   13950:	ldr	r8, [sp, #152]	; 0x98
   13954:	b	12e30 <__snprintf_chk@plt+0x2040>
   13958:	str	r6, [sp, #48]	; 0x30
   1395c:	ldr	r6, [sp, #52]	; 0x34
   13960:	b	12dd0 <__snprintf_chk@plt+0x1fe0>
   13964:	mov	r6, #0
   13968:	ldr	r2, [sp, #40]	; 0x28
   1396c:	b	13700 <__snprintf_chk@plt+0x2910>
   13970:	str	r6, [sp, #48]	; 0x30
   13974:	ldr	r6, [sp, #52]	; 0x34
   13978:	b	12bbc <__snprintf_chk@plt+0x1dcc>
   1397c:	add	r4, r4, #4
   13980:	mov	r6, #0
   13984:	str	r3, [sp, #48]	; 0x30
   13988:	mov	r5, #48	; 0x30
   1398c:	b	12b44 <__snprintf_chk@plt+0x1d54>
   13990:	mov	r7, r3
   13994:	b	137c4 <__snprintf_chk@plt+0x29d4>
   13998:	mov	r3, #1
   1399c:	movw	r2, #24104	; 0x5e28
   139a0:	movt	r2, #1
   139a4:	mov	r4, r3
   139a8:	str	r3, [sp, #36]	; 0x24
   139ac:	str	r3, [sp, #40]	; 0x28
   139b0:	str	sl, [sp, #44]	; 0x2c
   139b4:	str	sl, [sp, #48]	; 0x30
   139b8:	str	r3, [sp, #56]	; 0x38
   139bc:	str	r2, [sp, #60]	; 0x3c
   139c0:	str	sl, [sp, #68]	; 0x44
   139c4:	str	sl, [sp, #72]	; 0x48
   139c8:	b	1266c <__snprintf_chk@plt+0x187c>
   139cc:	mov	r3, r6
   139d0:	mov	r5, #48	; 0x30
   139d4:	mov	r6, #0
   139d8:	b	12b44 <__snprintf_chk@plt+0x1d54>
   139dc:	mov	r5, r3
   139e0:	b	12ebc <__snprintf_chk@plt+0x20cc>
   139e4:	cmp	sl, r4
   139e8:	mov	r5, #48	; 0x30
   139ec:	movhi	r3, #48	; 0x30
   139f0:	strbhi	r3, [r8, r4]
   139f4:	add	r3, r0, #2
   139f8:	add	r4, r0, #3
   139fc:	cmp	sl, r3
   13a00:	movhi	r1, #48	; 0x30
   13a04:	strbhi	r1, [r8, r3]
   13a08:	b	12f94 <__snprintf_chk@plt+0x21a4>
   13a0c:	str	fp, [sp, #152]	; 0x98
   13a10:	mov	fp, r8
   13a14:	ldr	r8, [sp, #152]	; 0x98
   13a18:	b	12e30 <__snprintf_chk@plt+0x2040>
   13a1c:	ldr	r3, [sp, #164]	; 0xa4
   13a20:	ldrb	r3, [r3]
   13a24:	cmp	r3, #0
   13a28:	beq	1263c <__snprintf_chk@plt+0x184c>
   13a2c:	ldr	r2, [sp, #164]	; 0xa4
   13a30:	cmp	sl, r4
   13a34:	strbhi	r3, [fp, r4]
   13a38:	add	r4, r4, #1
   13a3c:	ldrb	r3, [r2, #1]!
   13a40:	cmp	r3, #0
   13a44:	bne	13a30 <__snprintf_chk@plt+0x2c40>
   13a48:	b	1263c <__snprintf_chk@plt+0x184c>
   13a4c:	mov	ip, r5
   13a50:	mov	r6, #0
   13a54:	ldr	r2, [sp, #40]	; 0x28
   13a58:	ldr	r8, [sp, #76]	; 0x4c
   13a5c:	ldr	sl, [sp, #80]	; 0x50
   13a60:	ldr	r5, [sp, #84]	; 0x54
   13a64:	ldr	r7, [sp, #88]	; 0x58
   13a68:	ldr	r4, [sp, #92]	; 0x5c
   13a6c:	b	136f8 <__snprintf_chk@plt+0x2908>
   13a70:	ldr	r2, [sp, #32]
   13a74:	ldrb	r1, [r2, r3]
   13a78:	sub	r2, r1, #33	; 0x21
   13a7c:	cmp	r2, #29
   13a80:	ldrls	pc, [pc, r2, lsl #2]
   13a84:	b	13b60 <__snprintf_chk@plt+0x2d70>
   13a88:	andeq	r3, r1, r0, lsl #22
   13a8c:	andeq	r3, r1, r0, ror #22
   13a90:	andeq	r3, r1, r0, ror #22
   13a94:	andeq	r3, r1, r0, ror #22
   13a98:	andeq	r3, r1, r0, ror #22
   13a9c:	andeq	r3, r1, r0, ror #22
   13aa0:	andeq	r3, r1, r0, lsl #22
   13aa4:	andeq	r3, r1, r0, lsl #22
   13aa8:	andeq	r3, r1, r0, lsl #22
   13aac:	andeq	r3, r1, r0, ror #22
   13ab0:	andeq	r3, r1, r0, ror #22
   13ab4:	andeq	r3, r1, r0, ror #22
   13ab8:	andeq	r3, r1, r0, lsl #22
   13abc:	andeq	r3, r1, r0, ror #22
   13ac0:	andeq	r3, r1, r0, lsl #22
   13ac4:	andeq	r3, r1, r0, ror #22
   13ac8:	andeq	r3, r1, r0, ror #22
   13acc:	andeq	r3, r1, r0, ror #22
   13ad0:	andeq	r3, r1, r0, ror #22
   13ad4:	andeq	r3, r1, r0, ror #22
   13ad8:	andeq	r3, r1, r0, ror #22
   13adc:	andeq	r3, r1, r0, ror #22
   13ae0:	andeq	r3, r1, r0, ror #22
   13ae4:	andeq	r3, r1, r0, ror #22
   13ae8:	andeq	r3, r1, r0, ror #22
   13aec:	andeq	r3, r1, r0, ror #22
   13af0:	andeq	r3, r1, r0, ror #22
   13af4:	andeq	r3, r1, r0, lsl #22
   13af8:	andeq	r3, r1, r0, lsl #22
   13afc:	andeq	r3, r1, r0, lsl #22
   13b00:	ldr	r2, [sp, #44]	; 0x2c
   13b04:	cmp	r2, #0
   13b08:	bne	13c64 <__snprintf_chk@plt+0x2e74>
   13b0c:	cmp	sl, r4
   13b10:	mov	r5, r1
   13b14:	movhi	r2, #63	; 0x3f
   13b18:	mov	r9, r3
   13b1c:	strbhi	r2, [r8, r4]
   13b20:	add	r2, r4, #1
   13b24:	cmp	sl, r2
   13b28:	movhi	r0, #34	; 0x22
   13b2c:	strbhi	r0, [r8, r2]
   13b30:	add	r2, r4, #2
   13b34:	cmp	sl, r2
   13b38:	movhi	r0, #34	; 0x22
   13b3c:	strbhi	r0, [r8, r2]
   13b40:	add	r2, r4, #3
   13b44:	add	r4, r4, #4
   13b48:	cmp	sl, r2
   13b4c:	movhi	r0, #63	; 0x3f
   13b50:	strbhi	r0, [r8, r2]
   13b54:	mov	r2, #0
   13b58:	mov	r6, r2
   13b5c:	b	12f94 <__snprintf_chk@plt+0x21a4>
   13b60:	mov	r3, #0
   13b64:	mov	r6, r3
   13b68:	b	12b0c <__snprintf_chk@plt+0x1d1c>
   13b6c:	ldr	r0, [sp, #28]
   13b70:	mov	r1, r4
   13b74:	mov	r2, r7
   13b78:	mov	r3, r5
   13b7c:	mov	ip, r5
   13b80:	ldr	r8, [sp, #76]	; 0x4c
   13b84:	ldr	sl, [sp, #80]	; 0x50
   13b88:	cmp	r1, r0
   13b8c:	ldr	r5, [sp, #84]	; 0x54
   13b90:	ldr	r7, [sp, #88]	; 0x58
   13b94:	ldr	r4, [sp, #92]	; 0x5c
   13b98:	bcs	13bcc <__snprintf_chk@plt+0x2ddc>
   13b9c:	ldrb	r6, [r2]
   13ba0:	cmp	r6, #0
   13ba4:	bne	13bb8 <__snprintf_chk@plt+0x2dc8>
   13ba8:	b	13cec <__snprintf_chk@plt+0x2efc>
   13bac:	ldrb	r6, [r2, #1]!
   13bb0:	cmp	r6, #0
   13bb4:	beq	13c74 <__snprintf_chk@plt+0x2e84>
   13bb8:	add	r3, r3, #1
   13bbc:	add	r1, r9, r3
   13bc0:	cmp	r1, r0
   13bc4:	bcc	13bac <__snprintf_chk@plt+0x2dbc>
   13bc8:	mov	ip, r3
   13bcc:	mov	r6, #0
   13bd0:	ldr	r2, [sp, #40]	; 0x28
   13bd4:	b	136f8 <__snprintf_chk@plt+0x2908>
   13bd8:	mov	r3, #1
   13bdc:	mov	r2, #0
   13be0:	mov	r4, r2
   13be4:	str	r3, [sp, #36]	; 0x24
   13be8:	str	r3, [sp, #40]	; 0x28
   13bec:	str	r3, [sp, #44]	; 0x2c
   13bf0:	str	r2, [sp, #48]	; 0x30
   13bf4:	str	r3, [sp, #56]	; 0x38
   13bf8:	movw	r3, #24104	; 0x5e28
   13bfc:	movt	r3, #1
   13c00:	str	r3, [sp, #60]	; 0x3c
   13c04:	str	r2, [sp, #68]	; 0x44
   13c08:	str	r2, [sp, #72]	; 0x48
   13c0c:	b	1266c <__snprintf_chk@plt+0x187c>
   13c10:	mov	r2, r3
   13c14:	ldr	r3, [sp, #60]	; 0x3c
   13c18:	cmp	r3, #0
   13c1c:	moveq	r2, #0
   13c20:	andne	r2, r2, #1
   13c24:	cmp	r2, #0
   13c28:	beq	13c54 <__snprintf_chk@plt+0x2e64>
   13c2c:	mov	r2, r3
   13c30:	ldrb	r3, [r3]
   13c34:	cmp	r3, #0
   13c38:	beq	13c54 <__snprintf_chk@plt+0x2e64>
   13c3c:	cmp	sl, r4
   13c40:	strbhi	r3, [fp, r4]
   13c44:	add	r4, r4, #1
   13c48:	ldrb	r3, [r2, #1]!
   13c4c:	cmp	r3, #0
   13c50:	bne	13c3c <__snprintf_chk@plt+0x2e4c>
   13c54:	cmp	sl, r4
   13c58:	movhi	r3, #0
   13c5c:	strbhi	r3, [fp, r4]
   13c60:	b	12e74 <__snprintf_chk@plt+0x2084>
   13c64:	str	fp, [sp, #152]	; 0x98
   13c68:	mov	fp, r8
   13c6c:	ldr	r8, [sp, #152]	; 0x98
   13c70:	b	12e3c <__snprintf_chk@plt+0x204c>
   13c74:	mov	ip, r3
   13c78:	ldr	r2, [sp, #40]	; 0x28
   13c7c:	b	136f8 <__snprintf_chk@plt+0x2908>
   13c80:	str	fp, [sp, #152]	; 0x98
   13c84:	mov	fp, r8
   13c88:	ldr	r8, [sp, #152]	; 0x98
   13c8c:	sub	r3, r8, #2
   13c90:	clz	r3, r3
   13c94:	lsr	r3, r3, #5
   13c98:	str	r3, [sp, #40]	; 0x28
   13c9c:	b	12e30 <__snprintf_chk@plt+0x2040>
   13ca0:	mov	ip, #5
   13ca4:	ldr	r3, [sp, #28]
   13ca8:	str	ip, [sp]
   13cac:	ldr	r2, [sp, #156]	; 0x9c
   13cb0:	ldr	ip, [sp, #164]	; 0xa4
   13cb4:	ldr	r0, [sp, #160]	; 0xa0
   13cb8:	str	r2, [sp, #4]
   13cbc:	ldr	r2, [sp, #32]
   13cc0:	ldr	r1, [sp, #72]	; 0x48
   13cc4:	str	ip, [sp, #12]
   13cc8:	ldr	ip, [sp, #168]	; 0xa8
   13ccc:	str	r0, [sp, #8]
   13cd0:	mov	r0, fp
   13cd4:	str	ip, [sp, #16]
   13cd8:	bl	12584 <__snprintf_chk@plt+0x1794>
   13cdc:	mov	r4, r0
   13ce0:	b	12e74 <__snprintf_chk@plt+0x2084>
   13ce4:	mov	r8, #2
   13ce8:	b	12e30 <__snprintf_chk@plt+0x2040>
   13cec:	ldr	r2, [sp, #40]	; 0x28
   13cf0:	b	136f8 <__snprintf_chk@plt+0x2908>
   13cf4:	mov	r3, #0
   13cf8:	mov	r2, #1
   13cfc:	mov	r4, r3
   13d00:	strd	r2, [sp, #36]	; 0x24
   13d04:	strd	r2, [sp, #44]	; 0x2c
   13d08:	str	r2, [sp, #56]	; 0x38
   13d0c:	str	r3, [sp, #68]	; 0x44
   13d10:	str	r3, [sp, #72]	; 0x48
   13d14:	movw	r3, #24124	; 0x5e3c
   13d18:	movt	r3, #1
   13d1c:	str	r3, [sp, #60]	; 0x3c
   13d20:	b	1266c <__snprintf_chk@plt+0x187c>
   13d24:	mov	r3, #0
   13d28:	mov	r1, #1
   13d2c:	mov	r2, r3
   13d30:	str	r1, [sp, #36]	; 0x24
   13d34:	str	r3, [sp, #48]	; 0x30
   13d38:	str	sl, [sp, #72]	; 0x48
   13d3c:	b	12c74 <__snprintf_chk@plt+0x1e84>
   13d40:	bl	10de4 <abort@plt>
   13d44:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13d48:	mov	r4, r0
   13d4c:	mov	r5, r3
   13d50:	strd	r6, [sp, #8]
   13d54:	movw	r7, #28892	; 0x70dc
   13d58:	movt	r7, #2
   13d5c:	strd	r8, [sp, #16]
   13d60:	strd	sl, [sp, #24]
   13d64:	mov	sl, r1
   13d68:	mov	fp, r2
   13d6c:	str	lr, [sp, #32]
   13d70:	sub	sp, sp, #60	; 0x3c
   13d74:	bl	10d30 <__errno_location@plt>
   13d78:	mov	r8, r0
   13d7c:	cmn	r4, #-2147483647	; 0x80000001
   13d80:	ldr	r6, [r7]
   13d84:	movne	r0, #0
   13d88:	moveq	r0, #1
   13d8c:	ldr	r3, [r8]
   13d90:	orrs	r0, r0, r4, lsr #31
   13d94:	str	r3, [sp, #28]
   13d98:	bne	13f28 <__snprintf_chk@plt+0x3138>
   13d9c:	ldr	r3, [r7, #4]
   13da0:	cmp	r3, r4
   13da4:	bgt	13e04 <__snprintf_chk@plt+0x3014>
   13da8:	add	r1, r7, #8
   13dac:	sub	r2, r4, r3
   13db0:	str	r3, [sp, #52]	; 0x34
   13db4:	cmp	r6, r1
   13db8:	add	r2, r2, #1
   13dbc:	beq	13f00 <__snprintf_chk@plt+0x3110>
   13dc0:	mov	r1, #8
   13dc4:	mov	r0, r6
   13dc8:	mvn	r3, #-2147483648	; 0x80000000
   13dcc:	str	r1, [sp]
   13dd0:	add	r1, sp, #52	; 0x34
   13dd4:	bl	14da8 <__snprintf_chk@plt+0x3fb8>
   13dd8:	mov	r6, r0
   13ddc:	str	r0, [r7]
   13de0:	ldr	r0, [r7, #4]
   13de4:	mov	r1, #0
   13de8:	ldr	r2, [sp, #52]	; 0x34
   13dec:	sub	r2, r2, r0
   13df0:	add	r0, r6, r0, lsl #3
   13df4:	lsl	r2, r2, #3
   13df8:	bl	10d54 <memset@plt>
   13dfc:	ldr	r3, [sp, #52]	; 0x34
   13e00:	str	r3, [r7, #4]
   13e04:	ldr	r1, [r5, #4]
   13e08:	add	r0, r6, r4, lsl #3
   13e0c:	add	ip, r5, #8
   13e10:	mov	r3, fp
   13e14:	mov	r2, sl
   13e18:	ldr	r7, [r0, #4]
   13e1c:	str	r0, [sp, #36]	; 0x24
   13e20:	str	ip, [sp, #40]	; 0x28
   13e24:	orr	r0, r1, #1
   13e28:	ldr	r9, [r6, r4, lsl #3]
   13e2c:	str	ip, [sp, #8]
   13e30:	ldr	lr, [r5, #44]	; 0x2c
   13e34:	str	r0, [sp, #4]
   13e38:	ldr	ip, [r5]
   13e3c:	mov	r1, r9
   13e40:	str	ip, [sp, #32]
   13e44:	ldr	ip, [r5, #40]	; 0x28
   13e48:	str	ip, [sp, #12]
   13e4c:	ldr	ip, [sp, #32]
   13e50:	str	lr, [sp, #16]
   13e54:	str	r0, [sp, #44]	; 0x2c
   13e58:	mov	r0, r7
   13e5c:	str	ip, [sp]
   13e60:	bl	12584 <__snprintf_chk@plt+0x1794>
   13e64:	cmp	r9, r0
   13e68:	bhi	13ed8 <__snprintf_chk@plt+0x30e8>
   13e6c:	add	r9, r0, #1
   13e70:	movw	r3, #29004	; 0x714c
   13e74:	movt	r3, #2
   13e78:	cmp	r7, r3
   13e7c:	str	r9, [r6, r4, lsl #3]
   13e80:	beq	13e8c <__snprintf_chk@plt+0x309c>
   13e84:	mov	r0, r7
   13e88:	bl	15310 <__snprintf_chk@plt+0x4520>
   13e8c:	mov	r0, r9
   13e90:	bl	14bf8 <__snprintf_chk@plt+0x3e08>
   13e94:	ldr	ip, [r5]
   13e98:	mov	r3, fp
   13e9c:	mov	r2, sl
   13ea0:	mov	r1, r9
   13ea4:	mov	r7, r0
   13ea8:	ldr	lr, [sp, #36]	; 0x24
   13eac:	ldr	r4, [r5, #40]	; 0x28
   13eb0:	str	r0, [lr, #4]
   13eb4:	ldr	lr, [r5, #44]	; 0x2c
   13eb8:	str	ip, [sp]
   13ebc:	ldr	ip, [sp, #44]	; 0x2c
   13ec0:	str	ip, [sp, #4]
   13ec4:	ldr	ip, [sp, #40]	; 0x28
   13ec8:	str	r4, [sp, #12]
   13ecc:	str	lr, [sp, #16]
   13ed0:	str	ip, [sp, #8]
   13ed4:	bl	12584 <__snprintf_chk@plt+0x1794>
   13ed8:	ldr	r3, [sp, #28]
   13edc:	mov	r0, r7
   13ee0:	str	r3, [r8]
   13ee4:	add	sp, sp, #60	; 0x3c
   13ee8:	ldrd	r4, [sp]
   13eec:	ldrd	r6, [sp, #8]
   13ef0:	ldrd	r8, [sp, #16]
   13ef4:	ldrd	sl, [sp, #24]
   13ef8:	add	sp, sp, #32
   13efc:	pop	{pc}		; (ldr pc, [sp], #4)
   13f00:	mov	r1, #8
   13f04:	mvn	r3, #-2147483648	; 0x80000000
   13f08:	str	r1, [sp]
   13f0c:	add	r1, sp, #52	; 0x34
   13f10:	bl	14da8 <__snprintf_chk@plt+0x3fb8>
   13f14:	ldrd	r2, [r7, #8]
   13f18:	mov	r6, r0
   13f1c:	str	r0, [r7]
   13f20:	strd	r2, [r0]
   13f24:	b	13de0 <__snprintf_chk@plt+0x2ff0>
   13f28:	bl	10de4 <abort@plt>
   13f2c:	strd	r4, [sp, #-16]!
   13f30:	mov	r5, r0
   13f34:	str	r6, [sp, #8]
   13f38:	str	lr, [sp, #12]
   13f3c:	bl	10d30 <__errno_location@plt>
   13f40:	mov	r4, r0
   13f44:	cmp	r5, #0
   13f48:	ldr	r0, [pc, #32]	; 13f70 <__snprintf_chk@plt+0x3180>
   13f4c:	mov	r1, #48	; 0x30
   13f50:	movne	r0, r5
   13f54:	ldr	r6, [r4]
   13f58:	bl	14f20 <__snprintf_chk@plt+0x4130>
   13f5c:	str	r6, [r4]
   13f60:	ldrd	r4, [sp]
   13f64:	ldr	r6, [sp, #8]
   13f68:	add	sp, sp, #12
   13f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f70:	andeq	r7, r2, ip, asr #4
   13f74:	ldr	r3, [pc, #12]	; 13f88 <__snprintf_chk@plt+0x3198>
   13f78:	cmp	r0, #0
   13f7c:	moveq	r0, r3
   13f80:	ldr	r0, [r0]
   13f84:	bx	lr
   13f88:	andeq	r7, r2, ip, asr #4
   13f8c:	ldr	r3, [pc, #12]	; 13fa0 <__snprintf_chk@plt+0x31b0>
   13f90:	cmp	r0, #0
   13f94:	moveq	r0, r3
   13f98:	str	r1, [r0]
   13f9c:	bx	lr
   13fa0:	andeq	r7, r2, ip, asr #4
   13fa4:	ldr	r3, [pc, #52]	; 13fe0 <__snprintf_chk@plt+0x31f0>
   13fa8:	cmp	r0, #0
   13fac:	push	{lr}		; (str lr, [sp, #-4]!)
   13fb0:	lsr	lr, r1, #5
   13fb4:	and	r1, r1, #31
   13fb8:	moveq	r0, r3
   13fbc:	add	r3, r0, #8
   13fc0:	ldr	ip, [r3, lr, lsl #2]
   13fc4:	lsr	r0, ip, r1
   13fc8:	eor	r2, r2, r0
   13fcc:	and	r0, r0, #1
   13fd0:	and	r2, r2, #1
   13fd4:	eor	r1, ip, r2, lsl r1
   13fd8:	str	r1, [r3, lr, lsl #2]
   13fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   13fe0:	andeq	r7, r2, ip, asr #4
   13fe4:	ldr	r3, [pc, #16]	; 13ffc <__snprintf_chk@plt+0x320c>
   13fe8:	cmp	r0, #0
   13fec:	movne	r3, r0
   13ff0:	ldr	r0, [r3, #4]
   13ff4:	str	r1, [r3, #4]
   13ff8:	bx	lr
   13ffc:	andeq	r7, r2, ip, asr #4
   14000:	ldr	r3, [pc, #48]	; 14038 <__snprintf_chk@plt+0x3248>
   14004:	cmp	r0, #0
   14008:	mov	ip, #10
   1400c:	moveq	r0, r3
   14010:	cmp	r2, #0
   14014:	cmpne	r1, #0
   14018:	str	ip, [r0]
   1401c:	beq	1402c <__snprintf_chk@plt+0x323c>
   14020:	str	r1, [r0, #40]	; 0x28
   14024:	str	r2, [r0, #44]	; 0x2c
   14028:	bx	lr
   1402c:	str	r4, [sp, #-8]!
   14030:	str	lr, [sp, #4]
   14034:	bl	10de4 <abort@plt>
   14038:	andeq	r7, r2, ip, asr #4
   1403c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14040:	strd	r6, [sp, #8]
   14044:	mov	r7, r0
   14048:	mov	r6, r1
   1404c:	strd	r8, [sp, #16]
   14050:	mov	r8, r2
   14054:	mov	r9, r3
   14058:	str	lr, [sp, #24]
   1405c:	sub	sp, sp, #28
   14060:	ldr	r4, [sp, #56]	; 0x38
   14064:	ldr	ip, [pc, #104]	; 140d4 <__snprintf_chk@plt+0x32e4>
   14068:	cmp	r4, #0
   1406c:	moveq	r4, ip
   14070:	bl	10d30 <__errno_location@plt>
   14074:	ldr	ip, [r4, #44]	; 0x2c
   14078:	mov	r5, r0
   1407c:	mov	r1, r6
   14080:	add	lr, r4, #8
   14084:	mov	r3, r9
   14088:	ldr	r6, [r5]
   1408c:	mov	r2, r8
   14090:	mov	r0, r7
   14094:	str	ip, [sp, #16]
   14098:	ldr	ip, [r4, #40]	; 0x28
   1409c:	str	lr, [sp, #8]
   140a0:	str	ip, [sp, #12]
   140a4:	ldr	ip, [r4, #4]
   140a8:	str	ip, [sp, #4]
   140ac:	ldr	ip, [r4]
   140b0:	str	ip, [sp]
   140b4:	bl	12584 <__snprintf_chk@plt+0x1794>
   140b8:	str	r6, [r5]
   140bc:	add	sp, sp, #28
   140c0:	ldrd	r4, [sp]
   140c4:	ldrd	r6, [sp, #8]
   140c8:	ldrd	r8, [sp, #16]
   140cc:	add	sp, sp, #24
   140d0:	pop	{pc}		; (ldr pc, [sp], #4)
   140d4:	andeq	r7, r2, ip, asr #4
   140d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   140dc:	cmp	r3, #0
   140e0:	ldr	r4, [pc, #220]	; 141c4 <__snprintf_chk@plt+0x33d4>
   140e4:	movne	r4, r3
   140e8:	strd	r6, [sp, #8]
   140ec:	mov	r6, r2
   140f0:	strd	r8, [sp, #16]
   140f4:	mov	r9, r0
   140f8:	strd	sl, [sp, #24]
   140fc:	mov	sl, r1
   14100:	str	lr, [sp, #32]
   14104:	sub	sp, sp, #44	; 0x2c
   14108:	bl	10d30 <__errno_location@plt>
   1410c:	ldr	r5, [r4, #4]
   14110:	mov	r7, r0
   14114:	mov	r1, #0
   14118:	add	r8, r4, #8
   1411c:	mov	r3, sl
   14120:	ldr	ip, [r4, #44]	; 0x2c
   14124:	mov	r2, r9
   14128:	mov	r0, r1
   1412c:	ldr	lr, [r7]
   14130:	cmp	r6, r1
   14134:	orreq	r5, r5, #1
   14138:	str	ip, [sp, #16]
   1413c:	ldr	ip, [r4, #40]	; 0x28
   14140:	stmib	sp, {r5, r8, ip}
   14144:	ldr	ip, [r4]
   14148:	str	lr, [sp, #28]
   1414c:	str	ip, [sp]
   14150:	bl	12584 <__snprintf_chk@plt+0x1794>
   14154:	add	r1, r0, #1
   14158:	mov	fp, r0
   1415c:	mov	r0, r1
   14160:	str	r1, [sp, #36]	; 0x24
   14164:	bl	14bf8 <__snprintf_chk@plt+0x3e08>
   14168:	ldr	ip, [r4, #44]	; 0x2c
   1416c:	mov	r3, sl
   14170:	mov	r2, r9
   14174:	ldr	r1, [sp, #36]	; 0x24
   14178:	str	ip, [sp, #16]
   1417c:	ldr	ip, [r4, #40]	; 0x28
   14180:	str	r0, [sp, #32]
   14184:	stmib	sp, {r5, r8, ip}
   14188:	ldr	ip, [r4]
   1418c:	str	ip, [sp]
   14190:	bl	12584 <__snprintf_chk@plt+0x1794>
   14194:	ldr	lr, [sp, #28]
   14198:	cmp	r6, #0
   1419c:	ldr	r0, [sp, #32]
   141a0:	str	lr, [r7]
   141a4:	strne	fp, [r6]
   141a8:	add	sp, sp, #44	; 0x2c
   141ac:	ldrd	r4, [sp]
   141b0:	ldrd	r6, [sp, #8]
   141b4:	ldrd	r8, [sp, #16]
   141b8:	ldrd	sl, [sp, #24]
   141bc:	add	sp, sp, #32
   141c0:	pop	{pc}		; (ldr pc, [sp], #4)
   141c4:	andeq	r7, r2, ip, asr #4
   141c8:	mov	r3, r2
   141cc:	mov	r2, #0
   141d0:	b	140d8 <__snprintf_chk@plt+0x32e8>
   141d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   141d8:	movw	r5, #28892	; 0x70dc
   141dc:	movt	r5, #2
   141e0:	ldr	r3, [r5, #4]
   141e4:	strd	r6, [sp, #8]
   141e8:	str	r8, [sp, #16]
   141ec:	str	lr, [sp, #20]
   141f0:	ldr	r7, [r5]
   141f4:	cmp	r3, #1
   141f8:	ble	1421c <__snprintf_chk@plt+0x342c>
   141fc:	mov	r4, #1
   14200:	add	r6, r7, #4
   14204:	ldr	r0, [r6, r4, lsl #3]
   14208:	add	r4, r4, #1
   1420c:	bl	15310 <__snprintf_chk@plt+0x4520>
   14210:	ldr	r3, [r5, #4]
   14214:	cmp	r3, r4
   14218:	bgt	14204 <__snprintf_chk@plt+0x3414>
   1421c:	ldr	r0, [r7, #4]
   14220:	movw	r4, #29004	; 0x714c
   14224:	movt	r4, #2
   14228:	cmp	r0, r4
   1422c:	beq	14240 <__snprintf_chk@plt+0x3450>
   14230:	bl	15310 <__snprintf_chk@plt+0x4520>
   14234:	mov	r3, #256	; 0x100
   14238:	str	r3, [r5, #8]
   1423c:	str	r4, [r5, #12]
   14240:	ldr	r4, [pc, #44]	; 14274 <__snprintf_chk@plt+0x3484>
   14244:	cmp	r7, r4
   14248:	beq	14258 <__snprintf_chk@plt+0x3468>
   1424c:	mov	r0, r7
   14250:	bl	15310 <__snprintf_chk@plt+0x4520>
   14254:	str	r4, [r5]
   14258:	mov	r3, #1
   1425c:	ldrd	r6, [sp, #8]
   14260:	str	r3, [r5, #4]
   14264:	ldrd	r4, [sp]
   14268:	ldr	r8, [sp, #16]
   1426c:	add	sp, sp, #20
   14270:	pop	{pc}		; (ldr pc, [sp], #4)
   14274:	andeq	r7, r2, r4, ror #1
   14278:	ldr	r3, [pc, #4]	; 14284 <__snprintf_chk@plt+0x3494>
   1427c:	mvn	r2, #0
   14280:	b	13d44 <__snprintf_chk@plt+0x2f54>
   14284:	andeq	r7, r2, ip, asr #4
   14288:	ldr	r3, [pc]	; 14290 <__snprintf_chk@plt+0x34a0>
   1428c:	b	13d44 <__snprintf_chk@plt+0x2f54>
   14290:	andeq	r7, r2, ip, asr #4
   14294:	mov	r1, r0
   14298:	ldr	r3, [pc, #8]	; 142a8 <__snprintf_chk@plt+0x34b8>
   1429c:	mvn	r2, #0
   142a0:	mov	r0, #0
   142a4:	b	13d44 <__snprintf_chk@plt+0x2f54>
   142a8:	andeq	r7, r2, ip, asr #4
   142ac:	mov	r2, r1
   142b0:	ldr	r3, [pc, #8]	; 142c0 <__snprintf_chk@plt+0x34d0>
   142b4:	mov	r1, r0
   142b8:	mov	r0, #0
   142bc:	b	13d44 <__snprintf_chk@plt+0x2f54>
   142c0:	andeq	r7, r2, ip, asr #4
   142c4:	strd	r4, [sp, #-12]!
   142c8:	mov	r5, r2
   142cc:	mov	r4, r0
   142d0:	str	lr, [sp, #8]
   142d4:	sub	sp, sp, #52	; 0x34
   142d8:	mov	r0, sp
   142dc:	bl	123e0 <__snprintf_chk@plt+0x15f0>
   142e0:	mov	r3, sp
   142e4:	mov	r1, r5
   142e8:	mov	r0, r4
   142ec:	mvn	r2, #0
   142f0:	bl	13d44 <__snprintf_chk@plt+0x2f54>
   142f4:	add	sp, sp, #52	; 0x34
   142f8:	ldrd	r4, [sp]
   142fc:	add	sp, sp, #8
   14300:	pop	{pc}		; (ldr pc, [sp], #4)
   14304:	strd	r4, [sp, #-16]!
   14308:	mov	r5, r2
   1430c:	mov	r4, r0
   14310:	str	r6, [sp, #8]
   14314:	mov	r6, r3
   14318:	str	lr, [sp, #12]
   1431c:	sub	sp, sp, #48	; 0x30
   14320:	mov	r0, sp
   14324:	bl	123e0 <__snprintf_chk@plt+0x15f0>
   14328:	mov	r3, sp
   1432c:	mov	r2, r6
   14330:	mov	r1, r5
   14334:	mov	r0, r4
   14338:	bl	13d44 <__snprintf_chk@plt+0x2f54>
   1433c:	add	sp, sp, #48	; 0x30
   14340:	ldrd	r4, [sp]
   14344:	ldr	r6, [sp, #8]
   14348:	add	sp, sp, #12
   1434c:	pop	{pc}		; (ldr pc, [sp], #4)
   14350:	mov	r2, r1
   14354:	mov	r1, r0
   14358:	mov	r0, #0
   1435c:	b	142c4 <__snprintf_chk@plt+0x34d4>
   14360:	mov	r3, r2
   14364:	mov	r2, r1
   14368:	mov	r1, r0
   1436c:	mov	r0, #0
   14370:	b	14304 <__snprintf_chk@plt+0x3514>
   14374:	ldr	ip, [pc, #140]	; 14408 <__snprintf_chk@plt+0x3618>
   14378:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1437c:	ldrd	r4, [ip]
   14380:	strd	r6, [sp, #8]
   14384:	ldrd	r6, [ip, #8]
   14388:	strd	r8, [sp, #16]
   1438c:	lsr	r9, r2, #5
   14390:	str	lr, [sp, #24]
   14394:	sub	sp, sp, #52	; 0x34
   14398:	and	lr, r2, #31
   1439c:	add	r8, sp, #8
   143a0:	mov	r2, r1
   143a4:	strd	r4, [sp]
   143a8:	mov	r1, r0
   143ac:	mov	r3, sp
   143b0:	strd	r6, [sp, #8]
   143b4:	mov	r0, #0
   143b8:	ldrd	r4, [ip, #16]
   143bc:	ldrd	r6, [ip, #24]
   143c0:	strd	r4, [sp, #16]
   143c4:	ldrd	r4, [ip, #32]
   143c8:	strd	r6, [sp, #24]
   143cc:	ldrd	r6, [ip, #40]	; 0x28
   143d0:	strd	r4, [sp, #32]
   143d4:	strd	r6, [sp, #40]	; 0x28
   143d8:	ldr	ip, [r8, r9, lsl #2]
   143dc:	mvn	r4, ip, lsr lr
   143e0:	and	r4, r4, #1
   143e4:	eor	lr, ip, r4, lsl lr
   143e8:	str	lr, [r8, r9, lsl #2]
   143ec:	bl	13d44 <__snprintf_chk@plt+0x2f54>
   143f0:	add	sp, sp, #52	; 0x34
   143f4:	ldrd	r4, [sp]
   143f8:	ldrd	r6, [sp, #8]
   143fc:	ldrd	r8, [sp, #16]
   14400:	add	sp, sp, #24
   14404:	pop	{pc}		; (ldr pc, [sp], #4)
   14408:	andeq	r7, r2, ip, asr #4
   1440c:	mov	r2, r1
   14410:	mvn	r1, #0
   14414:	b	14374 <__snprintf_chk@plt+0x3584>
   14418:	mov	r2, #58	; 0x3a
   1441c:	mvn	r1, #0
   14420:	b	14374 <__snprintf_chk@plt+0x3584>
   14424:	mov	r2, #58	; 0x3a
   14428:	b	14374 <__snprintf_chk@plt+0x3584>
   1442c:	strd	r4, [sp, #-20]!	; 0xffffffec
   14430:	strd	r6, [sp, #8]
   14434:	mov	r6, r0
   14438:	mov	r7, r2
   1443c:	str	lr, [sp, #16]
   14440:	sub	sp, sp, #100	; 0x64
   14444:	mov	r0, sp
   14448:	bl	123e0 <__snprintf_chk@plt+0x15f0>
   1444c:	ldrd	r4, [sp, #8]
   14450:	mov	r1, r7
   14454:	mov	r0, r6
   14458:	add	r3, sp, #48	; 0x30
   1445c:	mvn	r2, #0
   14460:	ldrd	r6, [sp]
   14464:	strd	r4, [sp, #56]	; 0x38
   14468:	ldrd	r4, [sp, #16]
   1446c:	strd	r6, [sp, #48]	; 0x30
   14470:	ldrd	r6, [sp, #32]
   14474:	ldr	lr, [sp, #60]	; 0x3c
   14478:	strd	r4, [sp, #64]	; 0x40
   1447c:	ldrd	r4, [sp, #24]
   14480:	mvn	ip, lr
   14484:	and	ip, ip, #67108864	; 0x4000000
   14488:	strd	r4, [sp, #72]	; 0x48
   1448c:	eor	ip, ip, lr
   14490:	ldrd	r4, [sp, #40]	; 0x28
   14494:	str	ip, [sp, #60]	; 0x3c
   14498:	strd	r6, [sp, #80]	; 0x50
   1449c:	strd	r4, [sp, #88]	; 0x58
   144a0:	bl	13d44 <__snprintf_chk@plt+0x2f54>
   144a4:	add	sp, sp, #100	; 0x64
   144a8:	ldrd	r4, [sp]
   144ac:	ldrd	r6, [sp, #8]
   144b0:	add	sp, sp, #16
   144b4:	pop	{pc}		; (ldr pc, [sp], #4)
   144b8:	ldr	ip, [pc, #156]	; 1455c <__snprintf_chk@plt+0x376c>
   144bc:	cmp	r2, #0
   144c0:	cmpne	r1, #0
   144c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   144c8:	strd	r6, [sp, #8]
   144cc:	mov	r6, r2
   144d0:	str	r8, [sp, #16]
   144d4:	mov	r8, r3
   144d8:	strd	sl, [sp, #20]
   144dc:	ldrd	r4, [ip]
   144e0:	str	lr, [sp, #28]
   144e4:	sub	sp, sp, #48	; 0x30
   144e8:	mov	lr, #10
   144ec:	ldrd	r2, [ip, #8]
   144f0:	ldrd	sl, [ip, #16]
   144f4:	strd	r4, [sp]
   144f8:	ldrd	r4, [ip, #32]
   144fc:	str	lr, [sp]
   14500:	strd	r2, [sp, #8]
   14504:	strd	sl, [sp, #16]
   14508:	ldrd	r2, [ip, #24]
   1450c:	ldrd	sl, [ip, #40]	; 0x28
   14510:	strd	r2, [sp, #24]
   14514:	strd	r4, [sp, #32]
   14518:	strd	sl, [sp, #40]	; 0x28
   1451c:	beq	14558 <__snprintf_chk@plt+0x3768>
   14520:	ldr	r2, [sp, #80]	; 0x50
   14524:	mov	r7, r1
   14528:	mov	r3, sp
   1452c:	mov	r1, r8
   14530:	str	r7, [sp, #40]	; 0x28
   14534:	str	r6, [sp, #44]	; 0x2c
   14538:	bl	13d44 <__snprintf_chk@plt+0x2f54>
   1453c:	add	sp, sp, #48	; 0x30
   14540:	ldrd	r4, [sp]
   14544:	ldrd	r6, [sp, #8]
   14548:	ldr	r8, [sp, #16]
   1454c:	ldrd	sl, [sp, #20]
   14550:	add	sp, sp, #28
   14554:	pop	{pc}		; (ldr pc, [sp], #4)
   14558:	bl	10de4 <abort@plt>
   1455c:	andeq	r7, r2, ip, asr #4
   14560:	mvn	ip, #0
   14564:	push	{lr}		; (str lr, [sp, #-4]!)
   14568:	sub	sp, sp, #12
   1456c:	str	ip, [sp]
   14570:	bl	144b8 <__snprintf_chk@plt+0x36c8>
   14574:	add	sp, sp, #12
   14578:	pop	{pc}		; (ldr pc, [sp], #4)
   1457c:	mvn	ip, #0
   14580:	push	{lr}		; (str lr, [sp, #-4]!)
   14584:	sub	sp, sp, #12
   14588:	mov	r3, r2
   1458c:	mov	r2, r1
   14590:	mov	r1, r0
   14594:	mov	r0, #0
   14598:	str	ip, [sp]
   1459c:	bl	144b8 <__snprintf_chk@plt+0x36c8>
   145a0:	add	sp, sp, #12
   145a4:	pop	{pc}		; (ldr pc, [sp], #4)
   145a8:	push	{lr}		; (str lr, [sp, #-4]!)
   145ac:	sub	sp, sp, #12
   145b0:	str	r3, [sp]
   145b4:	mov	r3, r2
   145b8:	mov	r2, r1
   145bc:	mov	r1, r0
   145c0:	mov	r0, #0
   145c4:	bl	144b8 <__snprintf_chk@plt+0x36c8>
   145c8:	add	sp, sp, #12
   145cc:	pop	{pc}		; (ldr pc, [sp], #4)
   145d0:	ldr	r3, [pc]	; 145d8 <__snprintf_chk@plt+0x37e8>
   145d4:	b	13d44 <__snprintf_chk@plt+0x2f54>
   145d8:	andeq	r7, r2, ip, ror #1
   145dc:	mov	r2, r1
   145e0:	ldr	r3, [pc, #8]	; 145f0 <__snprintf_chk@plt+0x3800>
   145e4:	mov	r1, r0
   145e8:	mov	r0, #0
   145ec:	b	13d44 <__snprintf_chk@plt+0x2f54>
   145f0:	andeq	r7, r2, ip, ror #1
   145f4:	ldr	r3, [pc, #4]	; 14600 <__snprintf_chk@plt+0x3810>
   145f8:	mvn	r2, #0
   145fc:	b	13d44 <__snprintf_chk@plt+0x2f54>
   14600:	andeq	r7, r2, ip, ror #1
   14604:	mov	r1, r0
   14608:	ldr	r3, [pc, #8]	; 14618 <__snprintf_chk@plt+0x3828>
   1460c:	mvn	r2, #0
   14610:	mov	r0, #0
   14614:	b	13d44 <__snprintf_chk@plt+0x2f54>
   14618:	andeq	r7, r2, ip, ror #1
   1461c:	cmp	r1, #0
   14620:	strd	r4, [sp, #-16]!
   14624:	mov	ip, r3
   14628:	str	r6, [sp, #8]
   1462c:	mov	r4, r0
   14630:	str	lr, [sp, #12]
   14634:	sub	sp, sp, #32
   14638:	ldr	r5, [sp, #48]	; 0x30
   1463c:	ldr	r6, [sp, #52]	; 0x34
   14640:	beq	14784 <__snprintf_chk@plt+0x3994>
   14644:	mov	r3, r1
   14648:	mov	r1, #1
   1464c:	stm	sp, {r2, ip}
   14650:	movw	r2, #24236	; 0x5eac
   14654:	movt	r2, #1
   14658:	bl	10d84 <__fprintf_chk@plt>
   1465c:	mov	r2, #5
   14660:	movw	r1, #24256	; 0x5ec0
   14664:	movt	r1, #1
   14668:	mov	r0, #0
   1466c:	bl	10c40 <dcgettext@plt>
   14670:	movw	ip, #2022	; 0x7e6
   14674:	mov	r3, r0
   14678:	mov	r1, #1
   1467c:	movw	r2, #24984	; 0x6198
   14680:	movt	r2, #1
   14684:	mov	r0, r4
   14688:	str	ip, [sp]
   1468c:	bl	10d84 <__fprintf_chk@plt>
   14690:	mov	r1, r4
   14694:	mov	r0, #10
   14698:	bl	10c34 <fputc_unlocked@plt>
   1469c:	mov	r2, #5
   146a0:	movw	r1, #24260	; 0x5ec4
   146a4:	movt	r1, #1
   146a8:	mov	r0, #0
   146ac:	bl	10c40 <dcgettext@plt>
   146b0:	mov	r2, r0
   146b4:	mov	r1, #1
   146b8:	movw	r3, #24432	; 0x5f70
   146bc:	movt	r3, #1
   146c0:	mov	r0, r4
   146c4:	bl	10d84 <__fprintf_chk@plt>
   146c8:	mov	r1, r4
   146cc:	mov	r0, #10
   146d0:	bl	10c34 <fputc_unlocked@plt>
   146d4:	cmp	r6, #9
   146d8:	ldrls	pc, [pc, r6, lsl #2]
   146dc:	b	149f0 <__snprintf_chk@plt+0x3c00>
   146e0:	andeq	r4, r1, r0, ror r7
   146e4:	andeq	r4, r1, r0, lsr #15
   146e8:	ldrdeq	r4, [r1], -ip
   146ec:	andeq	r4, r1, ip, lsl r8
   146f0:	andeq	r4, r1, r4, ror #16
   146f4:	muleq	r1, ip, r8
   146f8:	andeq	r4, r1, r4, ror #17
   146fc:	andeq	r4, r1, r8, lsr r9
   14700:	muleq	r1, r0, r9
   14704:	andeq	r4, r1, r8, lsl #14
   14708:	movw	r1, #24736	; 0x60a0
   1470c:	movt	r1, #1
   14710:	mov	r2, #5
   14714:	mov	r0, #0
   14718:	bl	10c40 <dcgettext@plt>
   1471c:	ldr	lr, [r5, #4]
   14720:	mov	r2, r0
   14724:	mov	r1, #1
   14728:	mov	r0, r4
   1472c:	ldr	r3, [r5, #8]
   14730:	ldr	ip, [r5, #32]
   14734:	str	lr, [sp]
   14738:	ldr	lr, [r5, #12]
   1473c:	str	ip, [sp, #28]
   14740:	ldr	ip, [r5, #28]
   14744:	str	r3, [sp, #4]
   14748:	ldr	r3, [r5, #16]
   1474c:	str	lr, [sp, #8]
   14750:	ldr	lr, [r5, #20]
   14754:	str	ip, [sp, #24]
   14758:	ldr	ip, [r5, #24]
   1475c:	str	r3, [sp, #12]
   14760:	ldr	r3, [r5]
   14764:	str	lr, [sp, #16]
   14768:	str	ip, [sp, #20]
   1476c:	bl	10d84 <__fprintf_chk@plt>
   14770:	add	sp, sp, #32
   14774:	ldrd	r4, [sp]
   14778:	ldr	r6, [sp, #8]
   1477c:	add	sp, sp, #12
   14780:	pop	{pc}		; (ldr pc, [sp], #4)
   14784:	mov	r3, r2
   14788:	mov	r1, #1
   1478c:	str	ip, [sp]
   14790:	movw	r2, #24248	; 0x5eb8
   14794:	movt	r2, #1
   14798:	bl	10d84 <__fprintf_chk@plt>
   1479c:	b	1465c <__snprintf_chk@plt+0x386c>
   147a0:	mov	r2, #5
   147a4:	movw	r1, #24468	; 0x5f94
   147a8:	movt	r1, #1
   147ac:	mov	r0, #0
   147b0:	bl	10c40 <dcgettext@plt>
   147b4:	ldr	r3, [r5]
   147b8:	mov	r2, r0
   147bc:	mov	r1, #1
   147c0:	mov	r0, r4
   147c4:	add	sp, sp, #32
   147c8:	ldrd	r4, [sp]
   147cc:	ldr	r6, [sp, #8]
   147d0:	ldr	lr, [sp, #12]
   147d4:	add	sp, sp, #16
   147d8:	b	10d84 <__fprintf_chk@plt>
   147dc:	mov	r2, #5
   147e0:	movw	r1, #24484	; 0x5fa4
   147e4:	movt	r1, #1
   147e8:	mov	r0, #0
   147ec:	bl	10c40 <dcgettext@plt>
   147f0:	ldm	r5, {r3, ip}
   147f4:	mov	r2, r0
   147f8:	mov	r1, #1
   147fc:	mov	r0, r4
   14800:	str	ip, [sp, #48]	; 0x30
   14804:	add	sp, sp, #32
   14808:	ldrd	r4, [sp]
   1480c:	ldr	r6, [sp, #8]
   14810:	ldr	lr, [sp, #12]
   14814:	add	sp, sp, #16
   14818:	b	10d84 <__fprintf_chk@plt>
   1481c:	mov	r2, #5
   14820:	movw	r1, #24508	; 0x5fbc
   14824:	movt	r1, #1
   14828:	mov	r0, #0
   1482c:	bl	10c40 <dcgettext@plt>
   14830:	ldm	r5, {r3, lr}
   14834:	mov	r2, r0
   14838:	mov	r1, #1
   1483c:	mov	r0, r4
   14840:	ldr	ip, [r5, #8]
   14844:	str	lr, [sp, #48]	; 0x30
   14848:	str	ip, [sp, #52]	; 0x34
   1484c:	add	sp, sp, #32
   14850:	ldrd	r4, [sp]
   14854:	ldr	r6, [sp, #8]
   14858:	ldr	lr, [sp, #12]
   1485c:	add	sp, sp, #16
   14860:	b	10d84 <__fprintf_chk@plt>
   14864:	mov	r2, #5
   14868:	movw	r1, #24536	; 0x5fd8
   1486c:	movt	r1, #1
   14870:	mov	r0, #0
   14874:	bl	10c40 <dcgettext@plt>
   14878:	ldmib	r5, {r3, ip, lr}
   1487c:	mov	r2, r0
   14880:	mov	r1, #1
   14884:	mov	r0, r4
   14888:	str	r3, [sp]
   1488c:	ldr	r3, [r5]
   14890:	stmib	sp, {ip, lr}
   14894:	bl	10d84 <__fprintf_chk@plt>
   14898:	b	14770 <__snprintf_chk@plt+0x3980>
   1489c:	mov	r2, #5
   148a0:	movw	r1, #24568	; 0x5ff8
   148a4:	movt	r1, #1
   148a8:	mov	r0, #0
   148ac:	bl	10c40 <dcgettext@plt>
   148b0:	ldmib	r5, {ip, lr}
   148b4:	mov	r2, r0
   148b8:	mov	r1, #1
   148bc:	mov	r0, r4
   148c0:	ldr	r3, [r5, #16]
   148c4:	str	ip, [sp]
   148c8:	ldr	ip, [r5, #12]
   148cc:	str	r3, [sp, #12]
   148d0:	ldr	r3, [r5]
   148d4:	str	lr, [sp, #4]
   148d8:	str	ip, [sp, #8]
   148dc:	bl	10d84 <__fprintf_chk@plt>
   148e0:	b	14770 <__snprintf_chk@plt+0x3980>
   148e4:	mov	r2, #5
   148e8:	movw	r1, #24604	; 0x601c
   148ec:	movt	r1, #1
   148f0:	mov	r0, #0
   148f4:	bl	10c40 <dcgettext@plt>
   148f8:	ldr	lr, [r5, #4]
   148fc:	mov	r2, r0
   14900:	mov	r1, #1
   14904:	mov	r0, r4
   14908:	ldr	r3, [r5, #8]
   1490c:	ldr	ip, [r5, #20]
   14910:	str	lr, [sp]
   14914:	ldr	lr, [r5, #12]
   14918:	str	ip, [sp, #16]
   1491c:	ldr	ip, [r5, #16]
   14920:	str	r3, [sp, #4]
   14924:	ldr	r3, [r5]
   14928:	str	lr, [sp, #8]
   1492c:	str	ip, [sp, #12]
   14930:	bl	10d84 <__fprintf_chk@plt>
   14934:	b	14770 <__snprintf_chk@plt+0x3980>
   14938:	mov	r2, #5
   1493c:	movw	r1, #24644	; 0x6044
   14940:	movt	r1, #1
   14944:	mov	r0, #0
   14948:	bl	10c40 <dcgettext@plt>
   1494c:	ldmib	r5, {r3, ip}
   14950:	mov	r2, r0
   14954:	mov	r1, #1
   14958:	mov	r0, r4
   1495c:	ldr	lr, [r5, #24]
   14960:	str	r3, [sp]
   14964:	ldr	r3, [r5, #12]
   14968:	str	lr, [sp, #20]
   1496c:	ldr	lr, [r5, #20]
   14970:	str	ip, [sp, #4]
   14974:	ldr	ip, [r5, #16]
   14978:	str	r3, [sp, #8]
   1497c:	ldr	r3, [r5]
   14980:	str	ip, [sp, #12]
   14984:	str	lr, [sp, #16]
   14988:	bl	10d84 <__fprintf_chk@plt>
   1498c:	b	14770 <__snprintf_chk@plt+0x3980>
   14990:	mov	r2, #5
   14994:	movw	r1, #24688	; 0x6070
   14998:	movt	r1, #1
   1499c:	mov	r0, #0
   149a0:	bl	10c40 <dcgettext@plt>
   149a4:	ldmib	r5, {ip, lr}
   149a8:	mov	r2, r0
   149ac:	mov	r1, #1
   149b0:	mov	r0, r4
   149b4:	ldr	r3, [r5, #28]
   149b8:	str	ip, [sp]
   149bc:	ldr	ip, [r5, #12]
   149c0:	str	r3, [sp, #24]
   149c4:	ldr	r3, [r5, #24]
   149c8:	str	lr, [sp, #4]
   149cc:	ldr	lr, [r5, #16]
   149d0:	str	ip, [sp, #8]
   149d4:	ldr	ip, [r5, #20]
   149d8:	str	r3, [sp, #20]
   149dc:	ldr	r3, [r5]
   149e0:	str	lr, [sp, #12]
   149e4:	str	ip, [sp, #16]
   149e8:	bl	10d84 <__fprintf_chk@plt>
   149ec:	b	14770 <__snprintf_chk@plt+0x3980>
   149f0:	movw	r1, #24788	; 0x60d4
   149f4:	movt	r1, #1
   149f8:	b	14710 <__snprintf_chk@plt+0x3920>
   149fc:	strd	r4, [sp, #-12]!
   14a00:	str	lr, [sp, #8]
   14a04:	sub	sp, sp, #12
   14a08:	ldr	r5, [sp, #24]
   14a0c:	ldr	ip, [r5]
   14a10:	cmp	ip, #0
   14a14:	beq	14a30 <__snprintf_chk@plt+0x3c40>
   14a18:	mov	lr, r5
   14a1c:	mov	ip, #0
   14a20:	ldr	r4, [lr, #4]!
   14a24:	add	ip, ip, #1
   14a28:	cmp	r4, #0
   14a2c:	bne	14a20 <__snprintf_chk@plt+0x3c30>
   14a30:	stm	sp, {r5, ip}
   14a34:	bl	1461c <__snprintf_chk@plt+0x382c>
   14a38:	add	sp, sp, #12
   14a3c:	ldrd	r4, [sp]
   14a40:	add	sp, sp, #8
   14a44:	pop	{pc}		; (ldr pc, [sp], #4)
   14a48:	strd	r4, [sp, #-16]!
   14a4c:	mov	ip, #0
   14a50:	str	r6, [sp, #8]
   14a54:	str	lr, [sp, #12]
   14a58:	sub	sp, sp, #48	; 0x30
   14a5c:	ldr	r5, [sp, #64]	; 0x40
   14a60:	add	r6, sp, #8
   14a64:	mov	r4, r6
   14a68:	ldr	lr, [r5], #4
   14a6c:	cmp	lr, #0
   14a70:	str	lr, [r4], #4
   14a74:	beq	14a84 <__snprintf_chk@plt+0x3c94>
   14a78:	add	ip, ip, #1
   14a7c:	cmp	ip, #10
   14a80:	bne	14a68 <__snprintf_chk@plt+0x3c78>
   14a84:	stm	sp, {r6, ip}
   14a88:	bl	1461c <__snprintf_chk@plt+0x382c>
   14a8c:	add	sp, sp, #48	; 0x30
   14a90:	ldrd	r4, [sp]
   14a94:	ldr	r6, [sp, #8]
   14a98:	add	sp, sp, #12
   14a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   14aa0:	push	{r3}		; (str r3, [sp, #-4]!)
   14aa4:	mov	ip, #0
   14aa8:	strd	r4, [sp, #-12]!
   14aac:	str	lr, [sp, #8]
   14ab0:	sub	sp, sp, #56	; 0x38
   14ab4:	add	r3, sp, #72	; 0x48
   14ab8:	add	r5, sp, #16
   14abc:	mov	r4, r3
   14ac0:	mov	lr, r5
   14ac4:	str	r3, [sp, #12]
   14ac8:	ldr	r3, [r4], #4
   14acc:	cmp	r3, #0
   14ad0:	str	r3, [lr], #4
   14ad4:	beq	14ae4 <__snprintf_chk@plt+0x3cf4>
   14ad8:	add	ip, ip, #1
   14adc:	cmp	ip, #10
   14ae0:	bne	14ac8 <__snprintf_chk@plt+0x3cd8>
   14ae4:	ldr	r3, [sp, #68]	; 0x44
   14ae8:	stm	sp, {r5, ip}
   14aec:	bl	1461c <__snprintf_chk@plt+0x382c>
   14af0:	add	sp, sp, #56	; 0x38
   14af4:	ldrd	r4, [sp]
   14af8:	ldr	lr, [sp, #8]
   14afc:	add	sp, sp, #12
   14b00:	add	sp, sp, #4
   14b04:	bx	lr
   14b08:	movw	r3, #28980	; 0x7134
   14b0c:	movt	r3, #2
   14b10:	str	r4, [sp, #-8]!
   14b14:	mov	r0, #10
   14b18:	ldr	r1, [r3]
   14b1c:	str	lr, [sp, #4]
   14b20:	bl	10c34 <fputc_unlocked@plt>
   14b24:	mov	r2, #5
   14b28:	movw	r1, #24848	; 0x6110
   14b2c:	movt	r1, #1
   14b30:	mov	r0, #0
   14b34:	bl	10c40 <dcgettext@plt>
   14b38:	mov	r1, r0
   14b3c:	movw	r2, #24868	; 0x6124
   14b40:	movt	r2, #1
   14b44:	mov	r0, #1
   14b48:	bl	10d60 <__printf_chk@plt>
   14b4c:	mov	r2, #5
   14b50:	movw	r1, #24892	; 0x613c
   14b54:	movt	r1, #1
   14b58:	mov	r0, #0
   14b5c:	bl	10c40 <dcgettext@plt>
   14b60:	mov	r1, r0
   14b64:	movw	r3, #22556	; 0x581c
   14b68:	movt	r3, #1
   14b6c:	movw	r2, #22596	; 0x5844
   14b70:	movt	r2, #1
   14b74:	mov	r0, #1
   14b78:	bl	10d60 <__printf_chk@plt>
   14b7c:	mov	r2, #5
   14b80:	movw	r1, #24912	; 0x6150
   14b84:	movt	r1, #1
   14b88:	mov	r0, #0
   14b8c:	bl	10c40 <dcgettext@plt>
   14b90:	mov	r1, r0
   14b94:	movw	r2, #24952	; 0x6178
   14b98:	movt	r2, #1
   14b9c:	mov	r0, #1
   14ba0:	ldr	r4, [sp]
   14ba4:	ldr	lr, [sp, #4]
   14ba8:	add	sp, sp, #8
   14bac:	b	10d60 <__printf_chk@plt>
   14bb0:	str	r4, [sp, #-8]!
   14bb4:	str	lr, [sp, #4]
   14bb8:	bl	150e0 <__snprintf_chk@plt+0x42f0>
   14bbc:	cmp	r0, #0
   14bc0:	beq	14bd0 <__snprintf_chk@plt+0x3de0>
   14bc4:	ldr	r4, [sp]
   14bc8:	add	sp, sp, #4
   14bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14bd0:	bl	15028 <__snprintf_chk@plt+0x4238>
   14bd4:	str	r4, [sp, #-8]!
   14bd8:	str	lr, [sp, #4]
   14bdc:	bl	150e0 <__snprintf_chk@plt+0x42f0>
   14be0:	cmp	r0, #0
   14be4:	beq	14bf4 <__snprintf_chk@plt+0x3e04>
   14be8:	ldr	r4, [sp]
   14bec:	add	sp, sp, #4
   14bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bf4:	bl	15028 <__snprintf_chk@plt+0x4238>
   14bf8:	str	r4, [sp, #-8]!
   14bfc:	str	lr, [sp, #4]
   14c00:	bl	150e0 <__snprintf_chk@plt+0x42f0>
   14c04:	cmp	r0, #0
   14c08:	beq	14c18 <__snprintf_chk@plt+0x3e28>
   14c0c:	ldr	r4, [sp]
   14c10:	add	sp, sp, #4
   14c14:	pop	{pc}		; (ldr pc, [sp], #4)
   14c18:	bl	15028 <__snprintf_chk@plt+0x4238>
   14c1c:	strd	r4, [sp, #-16]!
   14c20:	mov	r5, r0
   14c24:	mov	r4, r1
   14c28:	str	r6, [sp, #8]
   14c2c:	str	lr, [sp, #12]
   14c30:	bl	1511c <__snprintf_chk@plt+0x432c>
   14c34:	cmp	r0, #0
   14c38:	beq	14c4c <__snprintf_chk@plt+0x3e5c>
   14c3c:	ldrd	r4, [sp]
   14c40:	ldr	r6, [sp, #8]
   14c44:	add	sp, sp, #12
   14c48:	pop	{pc}		; (ldr pc, [sp], #4)
   14c4c:	adds	r4, r4, #0
   14c50:	movne	r4, #1
   14c54:	cmp	r5, #0
   14c58:	moveq	r4, #1
   14c5c:	cmp	r4, #0
   14c60:	beq	14c3c <__snprintf_chk@plt+0x3e4c>
   14c64:	bl	15028 <__snprintf_chk@plt+0x4238>
   14c68:	cmp	r1, #0
   14c6c:	orreq	r1, r1, #1
   14c70:	str	r4, [sp, #-8]!
   14c74:	str	lr, [sp, #4]
   14c78:	bl	1511c <__snprintf_chk@plt+0x432c>
   14c7c:	cmp	r0, #0
   14c80:	beq	14c90 <__snprintf_chk@plt+0x3ea0>
   14c84:	ldr	r4, [sp]
   14c88:	add	sp, sp, #4
   14c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c90:	bl	15028 <__snprintf_chk@plt+0x4238>
   14c94:	strd	r4, [sp, #-16]!
   14c98:	mov	r4, r0
   14c9c:	mov	r5, r2
   14ca0:	str	r6, [sp, #8]
   14ca4:	mov	r6, r1
   14ca8:	str	lr, [sp, #12]
   14cac:	bl	154fc <__snprintf_chk@plt+0x470c>
   14cb0:	cmp	r0, #0
   14cb4:	beq	14cc8 <__snprintf_chk@plt+0x3ed8>
   14cb8:	ldrd	r4, [sp]
   14cbc:	ldr	r6, [sp, #8]
   14cc0:	add	sp, sp, #12
   14cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc8:	cmp	r4, #0
   14ccc:	beq	14cdc <__snprintf_chk@plt+0x3eec>
   14cd0:	cmp	r6, #0
   14cd4:	cmpne	r5, #0
   14cd8:	beq	14cb8 <__snprintf_chk@plt+0x3ec8>
   14cdc:	bl	15028 <__snprintf_chk@plt+0x4238>
   14ce0:	b	14c94 <__snprintf_chk@plt+0x3ea4>
   14ce4:	cmp	r2, #0
   14ce8:	cmpne	r1, #0
   14cec:	str	r4, [sp, #-8]!
   14cf0:	moveq	r2, #1
   14cf4:	str	lr, [sp, #4]
   14cf8:	moveq	r1, r2
   14cfc:	bl	154fc <__snprintf_chk@plt+0x470c>
   14d00:	cmp	r0, #0
   14d04:	beq	14d14 <__snprintf_chk@plt+0x3f24>
   14d08:	ldr	r4, [sp]
   14d0c:	add	sp, sp, #4
   14d10:	pop	{pc}		; (ldr pc, [sp], #4)
   14d14:	bl	15028 <__snprintf_chk@plt+0x4238>
   14d18:	mov	r2, r1
   14d1c:	mov	r1, r0
   14d20:	mov	r0, #0
   14d24:	b	14c94 <__snprintf_chk@plt+0x3ea4>
   14d28:	mov	r2, r1
   14d2c:	mov	r1, r0
   14d30:	mov	r0, #0
   14d34:	b	14ce4 <__snprintf_chk@plt+0x3ef4>
   14d38:	cmp	r0, #0
   14d3c:	strd	r4, [sp, #-16]!
   14d40:	mov	r5, r1
   14d44:	ldr	r4, [r1]
   14d48:	str	r6, [sp, #8]
   14d4c:	str	lr, [sp, #12]
   14d50:	beq	14d80 <__snprintf_chk@plt+0x3f90>
   14d54:	lsr	r3, r4, #1
   14d58:	add	r3, r3, #1
   14d5c:	adds	r4, r4, r3
   14d60:	bcs	14d9c <__snprintf_chk@plt+0x3fac>
   14d64:	mov	r1, r4
   14d68:	bl	14c94 <__snprintf_chk@plt+0x3ea4>
   14d6c:	ldr	r6, [sp, #8]
   14d70:	str	r4, [r5]
   14d74:	ldrd	r4, [sp]
   14d78:	add	sp, sp, #12
   14d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d80:	cmp	r4, #0
   14d84:	bne	14d64 <__snprintf_chk@plt+0x3f74>
   14d88:	mov	r4, #64	; 0x40
   14d8c:	udiv	r4, r4, r2
   14d90:	cmp	r2, #64	; 0x40
   14d94:	addhi	r4, r4, #1
   14d98:	b	14d64 <__snprintf_chk@plt+0x3f74>
   14d9c:	bl	15028 <__snprintf_chk@plt+0x4238>
   14da0:	mov	r2, #1
   14da4:	b	14d38 <__snprintf_chk@plt+0x3f48>
   14da8:	ldr	ip, [r1]
   14dac:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14db0:	mov	r5, r1
   14db4:	strd	r6, [sp, #8]
   14db8:	str	lr, [sp, #28]
   14dbc:	strd	r8, [sp, #16]
   14dc0:	asr	lr, ip, #1
   14dc4:	ldr	r8, [sp, #32]
   14dc8:	str	sl, [sp, #24]
   14dcc:	adds	r4, ip, lr
   14dd0:	mvn	lr, r3
   14dd4:	lsr	lr, lr, #31
   14dd8:	mvnvs	r4, #-2147483648	; 0x80000000
   14ddc:	cmp	r3, r4
   14de0:	movge	r1, #0
   14de4:	andlt	r1, lr, #1
   14de8:	cmp	r1, #0
   14dec:	movne	r4, r3
   14df0:	smull	r6, r7, r4, r8
   14df4:	cmp	r7, r6, asr #31
   14df8:	bne	14e80 <__snprintf_chk@plt+0x4090>
   14dfc:	cmp	r6, #63	; 0x3f
   14e00:	mov	r1, r6
   14e04:	ble	14e68 <__snprintf_chk@plt+0x4078>
   14e08:	cmp	r0, #0
   14e0c:	sub	r6, r4, ip
   14e10:	streq	r0, [r5]
   14e14:	cmp	r6, r2
   14e18:	bge	14e48 <__snprintf_chk@plt+0x4058>
   14e1c:	adds	r4, ip, r2
   14e20:	bvs	14e7c <__snprintf_chk@plt+0x408c>
   14e24:	cmp	r4, r3
   14e28:	movle	r3, #0
   14e2c:	andgt	r3, lr, #1
   14e30:	cmp	r3, #0
   14e34:	bne	14e7c <__snprintf_chk@plt+0x408c>
   14e38:	smull	r8, r9, r4, r8
   14e3c:	cmp	r9, r8, asr #31
   14e40:	mov	r1, r8
   14e44:	bne	14e7c <__snprintf_chk@plt+0x408c>
   14e48:	bl	14c1c <__snprintf_chk@plt+0x3e2c>
   14e4c:	ldrd	r6, [sp, #8]
   14e50:	ldrd	r8, [sp, #16]
   14e54:	ldr	sl, [sp, #24]
   14e58:	str	r4, [r5]
   14e5c:	ldrd	r4, [sp]
   14e60:	add	sp, sp, #28
   14e64:	pop	{pc}		; (ldr pc, [sp], #4)
   14e68:	mov	r6, #64	; 0x40
   14e6c:	sdiv	r4, r6, r8
   14e70:	mls	r1, r8, r4, r6
   14e74:	sub	r1, r6, r1
   14e78:	b	14e08 <__snprintf_chk@plt+0x4018>
   14e7c:	bl	15028 <__snprintf_chk@plt+0x4238>
   14e80:	mvn	r6, #-2147483648	; 0x80000000
   14e84:	b	14e6c <__snprintf_chk@plt+0x407c>
   14e88:	mov	r1, #1
   14e8c:	str	r4, [sp, #-8]!
   14e90:	str	lr, [sp, #4]
   14e94:	bl	1506c <__snprintf_chk@plt+0x427c>
   14e98:	cmp	r0, #0
   14e9c:	beq	14eac <__snprintf_chk@plt+0x40bc>
   14ea0:	ldr	r4, [sp]
   14ea4:	add	sp, sp, #4
   14ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   14eac:	bl	15028 <__snprintf_chk@plt+0x4238>
   14eb0:	mov	r1, #1
   14eb4:	str	r4, [sp, #-8]!
   14eb8:	str	lr, [sp, #4]
   14ebc:	bl	1506c <__snprintf_chk@plt+0x427c>
   14ec0:	cmp	r0, #0
   14ec4:	beq	14ed4 <__snprintf_chk@plt+0x40e4>
   14ec8:	ldr	r4, [sp]
   14ecc:	add	sp, sp, #4
   14ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ed4:	bl	15028 <__snprintf_chk@plt+0x4238>
   14ed8:	str	r4, [sp, #-8]!
   14edc:	str	lr, [sp, #4]
   14ee0:	bl	1506c <__snprintf_chk@plt+0x427c>
   14ee4:	cmp	r0, #0
   14ee8:	beq	14ef8 <__snprintf_chk@plt+0x4108>
   14eec:	ldr	r4, [sp]
   14ef0:	add	sp, sp, #4
   14ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ef8:	bl	15028 <__snprintf_chk@plt+0x4238>
   14efc:	str	r4, [sp, #-8]!
   14f00:	str	lr, [sp, #4]
   14f04:	bl	1506c <__snprintf_chk@plt+0x427c>
   14f08:	cmp	r0, #0
   14f0c:	beq	14f1c <__snprintf_chk@plt+0x412c>
   14f10:	ldr	r4, [sp]
   14f14:	add	sp, sp, #4
   14f18:	pop	{pc}		; (ldr pc, [sp], #4)
   14f1c:	bl	15028 <__snprintf_chk@plt+0x4238>
   14f20:	strd	r4, [sp, #-16]!
   14f24:	mov	r4, r1
   14f28:	str	r6, [sp, #8]
   14f2c:	mov	r6, r0
   14f30:	mov	r0, r1
   14f34:	str	lr, [sp, #12]
   14f38:	bl	150e0 <__snprintf_chk@plt+0x42f0>
   14f3c:	subs	r5, r0, #0
   14f40:	beq	14f64 <__snprintf_chk@plt+0x4174>
   14f44:	mov	r2, r4
   14f48:	mov	r1, r6
   14f4c:	bl	10c04 <memcpy@plt>
   14f50:	mov	r0, r5
   14f54:	ldrd	r4, [sp]
   14f58:	ldr	r6, [sp, #8]
   14f5c:	add	sp, sp, #12
   14f60:	pop	{pc}		; (ldr pc, [sp], #4)
   14f64:	bl	15028 <__snprintf_chk@plt+0x4238>
   14f68:	strd	r4, [sp, #-16]!
   14f6c:	mov	r4, r1
   14f70:	str	r6, [sp, #8]
   14f74:	mov	r6, r0
   14f78:	mov	r0, r1
   14f7c:	str	lr, [sp, #12]
   14f80:	bl	150e0 <__snprintf_chk@plt+0x42f0>
   14f84:	subs	r5, r0, #0
   14f88:	beq	14fac <__snprintf_chk@plt+0x41bc>
   14f8c:	mov	r2, r4
   14f90:	mov	r1, r6
   14f94:	bl	10c04 <memcpy@plt>
   14f98:	mov	r0, r5
   14f9c:	ldrd	r4, [sp]
   14fa0:	ldr	r6, [sp, #8]
   14fa4:	add	sp, sp, #12
   14fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   14fac:	bl	15028 <__snprintf_chk@plt+0x4238>
   14fb0:	strd	r4, [sp, #-16]!
   14fb4:	mov	r4, r1
   14fb8:	str	r6, [sp, #8]
   14fbc:	mov	r6, r0
   14fc0:	add	r0, r1, #1
   14fc4:	str	lr, [sp, #12]
   14fc8:	bl	150e0 <__snprintf_chk@plt+0x42f0>
   14fcc:	subs	r5, r0, #0
   14fd0:	beq	14ffc <__snprintf_chk@plt+0x420c>
   14fd4:	mov	r3, #0
   14fd8:	mov	r1, r6
   14fdc:	mov	r2, r4
   14fe0:	strb	r3, [r5, r4]
   14fe4:	bl	10c04 <memcpy@plt>
   14fe8:	mov	r0, r5
   14fec:	ldrd	r4, [sp]
   14ff0:	ldr	r6, [sp, #8]
   14ff4:	add	sp, sp, #12
   14ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ffc:	bl	15028 <__snprintf_chk@plt+0x4238>
   15000:	str	r4, [sp, #-8]!
   15004:	mov	r4, r0
   15008:	str	lr, [sp, #4]
   1500c:	bl	10d24 <strlen@plt>
   15010:	add	r1, r0, #1
   15014:	mov	r0, r4
   15018:	ldr	r4, [sp]
   1501c:	ldr	lr, [sp, #4]
   15020:	add	sp, sp, #8
   15024:	b	14f20 <__snprintf_chk@plt+0x4130>
   15028:	movw	r3, #28888	; 0x70d8
   1502c:	movt	r3, #2
   15030:	str	r4, [sp, #-8]!
   15034:	ldr	r4, [r3]
   15038:	mov	r2, #5
   1503c:	movw	r1, #25032	; 0x61c8
   15040:	movt	r1, #1
   15044:	mov	r0, #0
   15048:	str	lr, [sp, #4]
   1504c:	bl	10c40 <dcgettext@plt>
   15050:	mov	r3, r0
   15054:	movw	r2, #23880	; 0x5d48
   15058:	movt	r2, #1
   1505c:	mov	r1, #0
   15060:	mov	r0, r4
   15064:	bl	10cac <error@plt>
   15068:	bl	10de4 <abort@plt>
   1506c:	cmp	r1, #0
   15070:	cmpne	r0, #0
   15074:	beq	150c0 <__snprintf_chk@plt+0x42d0>
   15078:	strd	r4, [sp, #-16]!
   1507c:	umull	r4, r5, r0, r1
   15080:	str	r6, [sp, #8]
   15084:	str	lr, [sp, #12]
   15088:	adds	r3, r5, #0
   1508c:	movne	r3, #1
   15090:	cmp	r4, #0
   15094:	blt	150a0 <__snprintf_chk@plt+0x42b0>
   15098:	cmp	r3, #0
   1509c:	beq	150cc <__snprintf_chk@plt+0x42dc>
   150a0:	bl	10d30 <__errno_location@plt>
   150a4:	mov	r3, #12
   150a8:	ldrd	r4, [sp]
   150ac:	ldr	r6, [sp, #8]
   150b0:	add	sp, sp, #12
   150b4:	str	r3, [r0]
   150b8:	mov	r0, #0
   150bc:	pop	{pc}		; (ldr pc, [sp], #4)
   150c0:	mov	r1, #1
   150c4:	mov	r0, r1
   150c8:	b	10bbc <calloc@plt>
   150cc:	ldrd	r4, [sp]
   150d0:	ldr	r6, [sp, #8]
   150d4:	ldr	lr, [sp, #12]
   150d8:	add	sp, sp, #16
   150dc:	b	10bbc <calloc@plt>
   150e0:	cmp	r0, #0
   150e4:	beq	150f0 <__snprintf_chk@plt+0x4300>
   150e8:	blt	150f8 <__snprintf_chk@plt+0x4308>
   150ec:	b	10cd0 <malloc@plt>
   150f0:	mov	r0, #1
   150f4:	b	10cd0 <malloc@plt>
   150f8:	str	r4, [sp, #-8]!
   150fc:	str	lr, [sp, #4]
   15100:	bl	10d30 <__errno_location@plt>
   15104:	mov	r3, #12
   15108:	ldr	r4, [sp]
   1510c:	add	sp, sp, #4
   15110:	str	r3, [r0]
   15114:	mov	r0, #0
   15118:	pop	{pc}		; (ldr pc, [sp], #4)
   1511c:	cmp	r0, #0
   15120:	beq	15148 <__snprintf_chk@plt+0x4358>
   15124:	cmp	r1, #0
   15128:	str	r4, [sp, #-8]!
   1512c:	str	lr, [sp, #4]
   15130:	beq	15150 <__snprintf_chk@plt+0x4360>
   15134:	blt	15164 <__snprintf_chk@plt+0x4374>
   15138:	ldr	r4, [sp]
   1513c:	ldr	lr, [sp, #4]
   15140:	add	sp, sp, #8
   15144:	b	10c4c <realloc@plt>
   15148:	mov	r0, r1
   1514c:	b	150e0 <__snprintf_chk@plt+0x42f0>
   15150:	bl	15310 <__snprintf_chk@plt+0x4520>
   15154:	ldr	r4, [sp]
   15158:	add	sp, sp, #4
   1515c:	mov	r0, #0
   15160:	pop	{pc}		; (ldr pc, [sp], #4)
   15164:	bl	10d30 <__errno_location@plt>
   15168:	mov	r3, #12
   1516c:	str	r3, [r0]
   15170:	b	15154 <__snprintf_chk@plt+0x4364>
   15174:	strd	r4, [sp, #-16]!
   15178:	mov	r4, r0
   1517c:	str	r6, [sp, #8]
   15180:	str	lr, [sp, #12]
   15184:	bl	10c94 <__fpending@plt>
   15188:	ldr	r5, [r4]
   1518c:	mov	r6, r0
   15190:	mov	r0, r4
   15194:	bl	151fc <__snprintf_chk@plt+0x440c>
   15198:	mov	r4, r0
   1519c:	and	r5, r5, #32
   151a0:	cmp	r5, #0
   151a4:	bne	151dc <__snprintf_chk@plt+0x43ec>
   151a8:	cmp	r0, #0
   151ac:	beq	151c8 <__snprintf_chk@plt+0x43d8>
   151b0:	cmp	r6, #0
   151b4:	bne	151f4 <__snprintf_chk@plt+0x4404>
   151b8:	bl	10d30 <__errno_location@plt>
   151bc:	ldr	r4, [r0]
   151c0:	subs	r4, r4, #9
   151c4:	mvnne	r4, #0
   151c8:	mov	r0, r4
   151cc:	ldrd	r4, [sp]
   151d0:	ldr	r6, [sp, #8]
   151d4:	add	sp, sp, #12
   151d8:	pop	{pc}		; (ldr pc, [sp], #4)
   151dc:	cmp	r0, #0
   151e0:	bne	151f4 <__snprintf_chk@plt+0x4404>
   151e4:	bl	10d30 <__errno_location@plt>
   151e8:	str	r4, [r0]
   151ec:	mvn	r4, #0
   151f0:	b	151c8 <__snprintf_chk@plt+0x43d8>
   151f4:	mvn	r4, #0
   151f8:	b	151c8 <__snprintf_chk@plt+0x43d8>
   151fc:	strd	r4, [sp, #-12]!
   15200:	mov	r4, r0
   15204:	str	lr, [sp, #8]
   15208:	sub	sp, sp, #12
   1520c:	bl	10d78 <fileno@plt>
   15210:	cmp	r0, #0
   15214:	mov	r0, r4
   15218:	blt	1529c <__snprintf_chk@plt+0x44ac>
   1521c:	bl	10ce8 <__freading@plt>
   15220:	cmp	r0, #0
   15224:	bne	15268 <__snprintf_chk@plt+0x4478>
   15228:	mov	r0, r4
   1522c:	bl	152b0 <__snprintf_chk@plt+0x44c0>
   15230:	cmp	r0, #0
   15234:	beq	15298 <__snprintf_chk@plt+0x44a8>
   15238:	bl	10d30 <__errno_location@plt>
   1523c:	mov	r5, r0
   15240:	mov	r0, r4
   15244:	ldr	r4, [r5]
   15248:	bl	10d90 <fclose@plt>
   1524c:	cmp	r4, #0
   15250:	mvnne	r0, #0
   15254:	strne	r4, [r5]
   15258:	add	sp, sp, #12
   1525c:	ldrd	r4, [sp]
   15260:	add	sp, sp, #8
   15264:	pop	{pc}		; (ldr pc, [sp], #4)
   15268:	mov	r0, r4
   1526c:	bl	10d78 <fileno@plt>
   15270:	mov	r1, #1
   15274:	mov	r2, #0
   15278:	mov	r3, #0
   1527c:	str	r1, [sp]
   15280:	bl	10c7c <lseek64@plt>
   15284:	mvn	r3, #0
   15288:	mvn	r2, #0
   1528c:	cmp	r1, r3
   15290:	cmpeq	r0, r2
   15294:	bne	15228 <__snprintf_chk@plt+0x4438>
   15298:	mov	r0, r4
   1529c:	add	sp, sp, #12
   152a0:	ldrd	r4, [sp]
   152a4:	ldr	lr, [sp, #8]
   152a8:	add	sp, sp, #12
   152ac:	b	10d90 <fclose@plt>
   152b0:	str	r4, [sp, #-8]!
   152b4:	subs	r4, r0, #0
   152b8:	str	lr, [sp, #4]
   152bc:	sub	sp, sp, #8
   152c0:	beq	152dc <__snprintf_chk@plt+0x44ec>
   152c4:	bl	10ce8 <__freading@plt>
   152c8:	cmp	r0, #0
   152cc:	beq	152dc <__snprintf_chk@plt+0x44ec>
   152d0:	ldr	r3, [r4]
   152d4:	tst	r3, #256	; 0x100
   152d8:	bne	152f4 <__snprintf_chk@plt+0x4504>
   152dc:	mov	r0, r4
   152e0:	add	sp, sp, #8
   152e4:	ldr	r4, [sp]
   152e8:	ldr	lr, [sp, #4]
   152ec:	add	sp, sp, #8
   152f0:	b	10be0 <fflush@plt>
   152f4:	mov	r1, #1
   152f8:	mov	r2, #0
   152fc:	mov	r3, #0
   15300:	mov	r0, r4
   15304:	str	r1, [sp]
   15308:	bl	15370 <__snprintf_chk@plt+0x4580>
   1530c:	b	152dc <__snprintf_chk@plt+0x44ec>
   15310:	strd	r4, [sp, #-12]!
   15314:	mov	r5, r0
   15318:	str	lr, [sp, #8]
   1531c:	sub	sp, sp, #12
   15320:	bl	10d30 <__errno_location@plt>
   15324:	mov	r4, r0
   15328:	mov	r2, #0
   1532c:	ldr	r3, [r4]
   15330:	mov	r0, r5
   15334:	str	r2, [r4]
   15338:	str	r3, [sp]
   1533c:	str	r3, [sp, #4]
   15340:	bl	10bec <free@plt>
   15344:	ldr	r3, [r4]
   15348:	add	r2, sp, #8
   1534c:	clz	r3, r3
   15350:	lsr	r3, r3, #5
   15354:	add	r3, r2, r3, lsl #2
   15358:	ldr	r3, [r3, #-8]
   1535c:	str	r3, [r4]
   15360:	add	sp, sp, #12
   15364:	ldrd	r4, [sp]
   15368:	add	sp, sp, #8
   1536c:	pop	{pc}		; (ldr pc, [sp], #4)
   15370:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15374:	mov	r4, r0
   15378:	ldr	ip, [r0, #4]
   1537c:	strd	r6, [sp, #8]
   15380:	str	lr, [sp, #20]
   15384:	ldr	lr, [r0, #8]
   15388:	str	r8, [sp, #16]
   1538c:	sub	sp, sp, #8
   15390:	ldr	r5, [sp, #32]
   15394:	cmp	lr, ip
   15398:	beq	153c0 <__snprintf_chk@plt+0x45d0>
   1539c:	mov	r0, r4
   153a0:	str	r5, [sp, #32]
   153a4:	add	sp, sp, #8
   153a8:	ldrd	r4, [sp]
   153ac:	ldrd	r6, [sp, #8]
   153b0:	ldr	r8, [sp, #16]
   153b4:	ldr	lr, [sp, #20]
   153b8:	add	sp, sp, #24
   153bc:	b	10d9c <fseeko64@plt>
   153c0:	ldr	ip, [r0, #16]
   153c4:	ldr	lr, [r0, #20]
   153c8:	cmp	lr, ip
   153cc:	bne	1539c <__snprintf_chk@plt+0x45ac>
   153d0:	ldr	r8, [r0, #36]	; 0x24
   153d4:	cmp	r8, #0
   153d8:	bne	1539c <__snprintf_chk@plt+0x45ac>
   153dc:	mov	r6, r2
   153e0:	mov	r7, r3
   153e4:	bl	10d78 <fileno@plt>
   153e8:	mov	r2, r6
   153ec:	mov	r3, r7
   153f0:	str	r5, [sp]
   153f4:	bl	10c7c <lseek64@plt>
   153f8:	mvn	r3, #0
   153fc:	mvn	r2, #0
   15400:	cmp	r1, r3
   15404:	cmpeq	r0, r2
   15408:	beq	15438 <__snprintf_chk@plt+0x4648>
   1540c:	ldr	r3, [r4]
   15410:	strd	r0, [r4, #80]	; 0x50
   15414:	bic	r3, r3, #16
   15418:	str	r3, [r4]
   1541c:	mov	r0, r8
   15420:	add	sp, sp, #8
   15424:	ldrd	r4, [sp]
   15428:	ldrd	r6, [sp, #8]
   1542c:	ldr	r8, [sp, #16]
   15430:	add	sp, sp, #20
   15434:	pop	{pc}		; (ldr pc, [sp], #4)
   15438:	mvn	r8, #0
   1543c:	b	1541c <__snprintf_chk@plt+0x462c>
   15440:	mov	r0, #14
   15444:	str	r4, [sp, #-8]!
   15448:	str	lr, [sp, #4]
   1544c:	bl	10dc0 <nl_langinfo@plt>
   15450:	cmp	r0, #0
   15454:	beq	15478 <__snprintf_chk@plt+0x4688>
   15458:	ldrb	r2, [r0]
   1545c:	movw	r3, #25052	; 0x61dc
   15460:	movt	r3, #1
   15464:	ldr	r4, [sp]
   15468:	add	sp, sp, #4
   1546c:	cmp	r2, #0
   15470:	moveq	r0, r3
   15474:	pop	{pc}		; (ldr pc, [sp], #4)
   15478:	ldr	r4, [sp]
   1547c:	add	sp, sp, #4
   15480:	movw	r0, #25052	; 0x61dc
   15484:	movt	r0, #1
   15488:	pop	{pc}		; (ldr pc, [sp], #4)
   1548c:	strd	r4, [sp, #-20]!	; 0xffffffec
   15490:	mov	r5, r2
   15494:	strd	r6, [sp, #8]
   15498:	subs	r6, r0, #0
   1549c:	mov	r7, r1
   154a0:	str	lr, [sp, #16]
   154a4:	sub	sp, sp, #12
   154a8:	addeq	r6, sp, #4
   154ac:	mov	r0, r6
   154b0:	bl	10ca0 <mbrtowc@plt>
   154b4:	cmp	r5, #0
   154b8:	cmnne	r0, #3
   154bc:	mov	r4, r0
   154c0:	bhi	154dc <__snprintf_chk@plt+0x46ec>
   154c4:	mov	r0, r4
   154c8:	add	sp, sp, #12
   154cc:	ldrd	r4, [sp]
   154d0:	ldrd	r6, [sp, #8]
   154d4:	add	sp, sp, #16
   154d8:	pop	{pc}		; (ldr pc, [sp], #4)
   154dc:	mov	r0, #0
   154e0:	bl	15534 <__snprintf_chk@plt+0x4744>
   154e4:	cmp	r0, #0
   154e8:	bne	154c4 <__snprintf_chk@plt+0x46d4>
   154ec:	ldrb	r3, [r7]
   154f0:	mov	r4, #1
   154f4:	str	r3, [r6]
   154f8:	b	154c4 <__snprintf_chk@plt+0x46d4>
   154fc:	umull	r2, r3, r1, r2
   15500:	cmp	r3, #0
   15504:	bne	15510 <__snprintf_chk@plt+0x4720>
   15508:	mov	r1, r2
   1550c:	b	1511c <__snprintf_chk@plt+0x432c>
   15510:	str	r4, [sp, #-8]!
   15514:	str	lr, [sp, #4]
   15518:	bl	10d30 <__errno_location@plt>
   1551c:	mov	r3, #12
   15520:	ldr	r4, [sp]
   15524:	add	sp, sp, #4
   15528:	str	r3, [r0]
   1552c:	mov	r0, #0
   15530:	pop	{pc}		; (ldr pc, [sp], #4)
   15534:	push	{lr}		; (str lr, [sp, #-4]!)
   15538:	sub	sp, sp, #268	; 0x10c
   1553c:	movw	r2, #257	; 0x101
   15540:	add	r1, sp, #4
   15544:	bl	1558c <__snprintf_chk@plt+0x479c>
   15548:	cmp	r0, #0
   1554c:	movne	r0, #0
   15550:	bne	15584 <__snprintf_chk@plt+0x4794>
   15554:	movw	r1, #25060	; 0x61e4
   15558:	movt	r1, #1
   1555c:	add	r0, sp, #4
   15560:	bl	10bd4 <strcmp@plt>
   15564:	cmp	r0, #0
   15568:	beq	15584 <__snprintf_chk@plt+0x4794>
   1556c:	add	r0, sp, #4
   15570:	movw	r1, #25064	; 0x61e8
   15574:	movt	r1, #1
   15578:	bl	10bd4 <strcmp@plt>
   1557c:	adds	r0, r0, #0
   15580:	movne	r0, #1
   15584:	add	sp, sp, #268	; 0x10c
   15588:	pop	{pc}		; (ldr pc, [sp], #4)
   1558c:	strd	r4, [sp, #-16]!
   15590:	mov	r5, r1
   15594:	mov	r1, #0
   15598:	mov	r4, r2
   1559c:	str	r6, [sp, #8]
   155a0:	str	lr, [sp, #12]
   155a4:	bl	10da8 <setlocale@plt>
   155a8:	subs	r6, r0, #0
   155ac:	beq	1562c <__snprintf_chk@plt+0x483c>
   155b0:	bl	10d24 <strlen@plt>
   155b4:	cmp	r4, r0
   155b8:	bhi	155d8 <__snprintf_chk@plt+0x47e8>
   155bc:	cmp	r4, #0
   155c0:	moveq	r0, #34	; 0x22
   155c4:	bne	155fc <__snprintf_chk@plt+0x480c>
   155c8:	ldrd	r4, [sp]
   155cc:	ldr	r6, [sp, #8]
   155d0:	add	sp, sp, #12
   155d4:	pop	{pc}		; (ldr pc, [sp], #4)
   155d8:	add	r2, r0, #1
   155dc:	mov	r1, r6
   155e0:	mov	r0, r5
   155e4:	bl	10c04 <memcpy@plt>
   155e8:	ldrd	r4, [sp]
   155ec:	mov	r0, #0
   155f0:	ldr	r6, [sp, #8]
   155f4:	add	sp, sp, #12
   155f8:	pop	{pc}		; (ldr pc, [sp], #4)
   155fc:	sub	r4, r4, #1
   15600:	mov	r1, r6
   15604:	mov	r2, r4
   15608:	mov	r0, r5
   1560c:	bl	10c04 <memcpy@plt>
   15610:	mov	r3, #0
   15614:	mov	r0, #34	; 0x22
   15618:	strb	r3, [r5, r4]
   1561c:	ldrd	r4, [sp]
   15620:	ldr	r6, [sp, #8]
   15624:	add	sp, sp, #12
   15628:	pop	{pc}		; (ldr pc, [sp], #4)
   1562c:	cmp	r4, #0
   15630:	mov	r0, #22
   15634:	strbne	r6, [r5]
   15638:	ldrd	r4, [sp]
   1563c:	ldr	r6, [sp, #8]
   15640:	add	sp, sp, #12
   15644:	pop	{pc}		; (ldr pc, [sp], #4)
   15648:	mov	r1, #0
   1564c:	b	10da8 <setlocale@plt>
   15650:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15654:	mov	r7, r0
   15658:	ldr	r6, [pc, #72]	; 156a8 <__snprintf_chk@plt+0x48b8>
   1565c:	ldr	r5, [pc, #72]	; 156ac <__snprintf_chk@plt+0x48bc>
   15660:	add	r6, pc, r6
   15664:	add	r5, pc, r5
   15668:	sub	r6, r6, r5
   1566c:	mov	r8, r1
   15670:	mov	r9, r2
   15674:	bl	10b9c <calloc@plt-0x20>
   15678:	asrs	r6, r6, #2
   1567c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15680:	mov	r4, #0
   15684:	add	r4, r4, #1
   15688:	ldr	r3, [r5], #4
   1568c:	mov	r2, r9
   15690:	mov	r1, r8
   15694:	mov	r0, r7
   15698:	blx	r3
   1569c:	cmp	r6, r4
   156a0:	bne	15684 <__snprintf_chk@plt+0x4894>
   156a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156a8:	andeq	r1, r1, ip, lsr #17
   156ac:	andeq	r1, r1, r4, lsr #17
   156b0:	bx	lr
   156b4:	ldr	r3, [pc, #12]	; 156c8 <__snprintf_chk@plt+0x48d8>
   156b8:	mov	r1, #0
   156bc:	add	r3, pc, r3
   156c0:	ldr	r2, [r3]
   156c4:	b	10d48 <__cxa_atexit@plt>
   156c8:	andeq	r1, r1, r0, lsl sl

Disassembly of section .fini:

000156cc <.fini>:
   156cc:	push	{r3, lr}
   156d0:	pop	{r3, pc}
