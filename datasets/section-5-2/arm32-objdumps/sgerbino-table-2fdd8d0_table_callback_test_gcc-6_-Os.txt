
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011a94 <.init>:
   11a94:	push	{r3, lr}
   11a98:	bl	11cd4 <_start@@Base+0x3c>
   11a9c:	pop	{r3, pc}

Disassembly of section .plt:

00011aa0 <raise@plt-0x14>:
   11aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   11aa4:	ldr	lr, [pc, #4]	; 11ab0 <raise@plt-0x4>
   11aa8:	add	lr, pc, lr
   11aac:	ldr	pc, [lr, #8]!
   11ab0:	andeq	r3, r1, r0, asr r5

00011ab4 <raise@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1360]!	; 0x550

00011ac0 <strcmp@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #1352]!	; 0x548

00011acc <printf@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #1344]!	; 0x540

00011ad8 <free@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #77824	; 0x13000
   11ae0:	ldr	pc, [ip, #1336]!	; 0x538

00011ae4 <realloc@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #77824	; 0x13000
   11aec:	ldr	pc, [ip, #1328]!	; 0x530

00011af0 <strcpy@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #77824	; 0x13000
   11af8:	ldr	pc, [ip, #1320]!	; 0x528

00011afc <puts@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #77824	; 0x13000
   11b04:	ldr	pc, [ip, #1312]!	; 0x520

00011b08 <malloc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #77824	; 0x13000
   11b10:	ldr	pc, [ip, #1304]!	; 0x518

00011b14 <__libc_start_main@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #77824	; 0x13000
   11b1c:	ldr	pc, [ip, #1296]!	; 0x510

00011b20 <__gmon_start__@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #77824	; 0x13000
   11b28:	ldr	pc, [ip, #1288]!	; 0x508

00011b2c <strlen@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #77824	; 0x13000
   11b34:	ldr	pc, [ip, #1280]!	; 0x500

00011b38 <snprintf@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #77824	; 0x13000
   11b40:	ldr	pc, [ip, #1272]!	; 0x4f8

00011b44 <__isoc99_sscanf@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #77824	; 0x13000
   11b4c:	ldr	pc, [ip, #1264]!	; 0x4f0

00011b50 <abort@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #77824	; 0x13000
   11b58:	ldr	pc, [ip, #1256]!	; 0x4e8

Disassembly of section .text:

00011b5c <main@@Base>:
   11b5c:	push	{r4, r5, r6, lr}
   11b60:	sub	sp, sp, #64	; 0x40
   11b64:	add	r0, sp, #8
   11b68:	mov	r4, #0
   11b6c:	str	r4, [sp, #4]
   11b70:	bl	11dd4 <table_init@@Base>
   11b74:	mvn	r3, #0
   11b78:	add	r2, sp, #4
   11b7c:	ldr	r1, [pc, #244]	; 11c78 <main@@Base+0x11c>
   11b80:	add	r0, sp, #8
   11b84:	bl	12408 <table_register_callback@@Base>
   11b88:	add	r0, sp, #8
   11b8c:	bl	12fc8 <table_add_row@@Base>
   11b90:	ldr	r3, [sp, #4]
   11b94:	tst	r3, #2
   11b98:	mov	r6, r0
   11b9c:	bne	11bac <main@@Base+0x50>
   11ba0:	ldr	r0, [pc, #212]	; 11c7c <main@@Base+0x120>
   11ba4:	bl	11afc <puts@plt>
   11ba8:	mvn	r4, #0
   11bac:	mov	r2, #0
   11bb0:	ldr	r1, [pc, #200]	; 11c80 <main@@Base+0x124>
   11bb4:	add	r0, sp, #8
   11bb8:	bl	12754 <table_add_column@@Base>
   11bbc:	ldr	r3, [sp, #4]
   11bc0:	tst	r3, #8
   11bc4:	mov	r5, r0
   11bc8:	bne	11bd8 <main@@Base+0x7c>
   11bcc:	ldr	r0, [pc, #176]	; 11c84 <main@@Base+0x128>
   11bd0:	bl	11afc <puts@plt>
   11bd4:	mvn	r4, #0
   11bd8:	mov	r3, #42	; 0x2a
   11bdc:	mov	r2, r5
   11be0:	mov	r1, r6
   11be4:	add	r0, sp, #8
   11be8:	bl	13484 <table_set_int@@Base>
   11bec:	ldr	r3, [sp, #4]
   11bf0:	tst	r3, #1
   11bf4:	bne	11c04 <main@@Base+0xa8>
   11bf8:	ldr	r0, [pc, #136]	; 11c88 <main@@Base+0x12c>
   11bfc:	bl	11acc <printf@plt>
   11c00:	mvn	r4, #0
   11c04:	mov	r1, r6
   11c08:	add	r0, sp, #8
   11c0c:	bl	13068 <table_remove_row@@Base>
   11c10:	ldr	r3, [sp, #4]
   11c14:	tst	r3, #4
   11c18:	bne	11c28 <main@@Base+0xcc>
   11c1c:	ldr	r0, [pc, #104]	; 11c8c <main@@Base+0x130>
   11c20:	bl	11acc <printf@plt>
   11c24:	mvn	r4, #0
   11c28:	mov	r1, r5
   11c2c:	add	r0, sp, #8
   11c30:	bl	12858 <table_remove_column@@Base>
   11c34:	ldr	r3, [sp, #4]
   11c38:	tst	r3, #16
   11c3c:	bne	11c4c <main@@Base+0xf0>
   11c40:	ldr	r0, [pc, #72]	; 11c90 <main@@Base+0x134>
   11c44:	bl	11acc <printf@plt>
   11c48:	mvn	r4, #0
   11c4c:	add	r0, sp, #8
   11c50:	bl	11e34 <table_destroy@@Base>
   11c54:	ldr	r3, [sp, #4]
   11c58:	tst	r3, #64	; 0x40
   11c5c:	bne	11c6c <main@@Base+0x110>
   11c60:	ldr	r0, [pc, #44]	; 11c94 <main@@Base+0x138>
   11c64:	bl	11acc <printf@plt>
   11c68:	mvn	r4, #0
   11c6c:	mov	r0, r4
   11c70:	add	sp, sp, #64	; 0x40
   11c74:	pop	{r4, r5, r6, pc}
   11c78:	andeq	r1, r1, r0, asr #27
   11c7c:	andeq	r4, r1, r4, lsr #6
   11c80:	andeq	r4, r1, ip, asr #6
   11c84:	andeq	r4, r1, pc, asr #6
   11c88:	andeq	r4, r1, sl, ror r3
   11c8c:	andeq	r4, r1, r6, lsr #7
   11c90:	ldrdeq	r4, [r1], -r0
   11c94:	strdeq	r4, [r1], -sp

00011c98 <_start@@Base>:
   11c98:	mov	fp, #0
   11c9c:	mov	lr, #0
   11ca0:	pop	{r1}		; (ldr r1, [sp], #4)
   11ca4:	mov	r2, sp
   11ca8:	push	{r2}		; (str r2, [sp, #-4]!)
   11cac:	push	{r0}		; (str r0, [sp, #-4]!)
   11cb0:	ldr	ip, [pc, #16]	; 11cc8 <_start@@Base+0x30>
   11cb4:	push	{ip}		; (str ip, [sp, #-4]!)
   11cb8:	ldr	r0, [pc, #12]	; 11ccc <_start@@Base+0x34>
   11cbc:	ldr	r3, [pc, #12]	; 11cd0 <_start@@Base+0x38>
   11cc0:	bl	11b14 <__libc_start_main@plt>
   11cc4:	bl	11b50 <abort@plt>
   11cc8:	andeq	r4, r1, r4, lsl r3
   11ccc:	andeq	r1, r1, ip, asr fp
   11cd0:			; <UNDEFINED> instruction: 0x000142b4
   11cd4:	ldr	r3, [pc, #20]	; 11cf0 <_start@@Base+0x58>
   11cd8:	ldr	r2, [pc, #20]	; 11cf4 <_start@@Base+0x5c>
   11cdc:	add	r3, pc, r3
   11ce0:	ldr	r2, [r3, r2]
   11ce4:	cmp	r2, #0
   11ce8:	bxeq	lr
   11cec:	b	11b20 <__gmon_start__@plt>
   11cf0:	andeq	r3, r1, ip, lsl r3
   11cf4:	andeq	r0, r0, r4, asr #32
   11cf8:	ldr	r3, [pc, #28]	; 11d1c <_start@@Base+0x84>
   11cfc:	ldr	r0, [pc, #28]	; 11d20 <_start@@Base+0x88>
   11d00:	sub	r3, r3, r0
   11d04:	cmp	r3, #6
   11d08:	bxls	lr
   11d0c:	ldr	r3, [pc, #16]	; 11d24 <_start@@Base+0x8c>
   11d10:	cmp	r3, #0
   11d14:	bxeq	lr
   11d18:	bx	r3
   11d1c:	andeq	r5, r2, r3, asr r0
   11d20:	andeq	r5, r2, r0, asr r0
   11d24:	andeq	r0, r0, r0
   11d28:	ldr	r1, [pc, #36]	; 11d54 <_start@@Base+0xbc>
   11d2c:	ldr	r0, [pc, #36]	; 11d58 <_start@@Base+0xc0>
   11d30:	sub	r1, r1, r0
   11d34:	asr	r1, r1, #2
   11d38:	add	r1, r1, r1, lsr #31
   11d3c:	asrs	r1, r1, #1
   11d40:	bxeq	lr
   11d44:	ldr	r3, [pc, #16]	; 11d5c <_start@@Base+0xc4>
   11d48:	cmp	r3, #0
   11d4c:	bxeq	lr
   11d50:	bx	r3
   11d54:	andeq	r5, r2, r0, asr r0
   11d58:	andeq	r5, r2, r0, asr r0
   11d5c:	andeq	r0, r0, r0
   11d60:	push	{r4, lr}
   11d64:	ldr	r4, [pc, #24]	; 11d84 <_start@@Base+0xec>
   11d68:	ldrb	r3, [r4]
   11d6c:	cmp	r3, #0
   11d70:	popne	{r4, pc}
   11d74:	bl	11cf8 <_start@@Base+0x60>
   11d78:	mov	r3, #1
   11d7c:	strb	r3, [r4]
   11d80:	pop	{r4, pc}
   11d84:	andeq	r5, r2, r0, asr r0
   11d88:	ldr	r0, [pc, #40]	; 11db8 <_start@@Base+0x120>
   11d8c:	ldr	r3, [r0]
   11d90:	cmp	r3, #0
   11d94:	bne	11d9c <_start@@Base+0x104>
   11d98:	b	11d28 <_start@@Base+0x90>
   11d9c:	ldr	r3, [pc, #24]	; 11dbc <_start@@Base+0x124>
   11da0:	cmp	r3, #0
   11da4:	beq	11d98 <_start@@Base+0x100>
   11da8:	push	{r4, lr}
   11dac:	blx	r3
   11db0:	pop	{r4, lr}
   11db4:	b	11d28 <_start@@Base+0x90>
   11db8:	andeq	r4, r2, r4, lsl pc
   11dbc:	andeq	r0, r0, r0
   11dc0:	ldr	r1, [sp]
   11dc4:	ldr	r2, [r1]
   11dc8:	orr	r3, r2, r3
   11dcc:	str	r3, [r1]
   11dd0:	bx	lr

00011dd4 <table_init@@Base>:
   11dd4:	mov	r3, #0
   11dd8:	mov	r2, #10
   11ddc:	mov	r1, #20
   11de0:	str	r3, [r0]
   11de4:	str	r3, [r0, #4]
   11de8:	str	r3, [r0, #12]
   11dec:	str	r2, [r0, #8]
   11df0:	str	r3, [r0, #16]
   11df4:	str	r3, [r0, #20]
   11df8:	str	r3, [r0, #28]
   11dfc:	str	r1, [r0, #24]
   11e00:	str	r3, [r0, #36]	; 0x24
   11e04:	str	r3, [r0, #40]	; 0x28
   11e08:	str	r3, [r0, #44]	; 0x2c
   11e0c:	str	r3, [r0, #32]
   11e10:	str	r3, [r0, #52]	; 0x34
   11e14:	str	r2, [r0, #48]	; 0x30
   11e18:	bx	lr

00011e1c <table_new@@Base>:
   11e1c:	push	{r4, lr}
   11e20:	mov	r0, #56	; 0x38
   11e24:	bl	11b08 <malloc@plt>
   11e28:	mov	r4, r0
   11e2c:	bl	11dd4 <table_init@@Base>
   11e30:	pop	{r4, pc}

00011e34 <table_destroy@@Base>:
   11e34:	push	{r4, r5, r6, lr}
   11e38:	subs	r4, r0, #0
   11e3c:	popeq	{r4, r5, r6, pc}
   11e40:	mvn	r2, #0
   11e44:	mov	r3, #64	; 0x40
   11e48:	mov	r1, r2
   11e4c:	bl	12610 <table_notify@@Base>
   11e50:	mov	r0, r4
   11e54:	bl	12fc0 <table_get_row_length@@Base>
   11e58:	mov	r5, #0
   11e5c:	mov	r6, r0
   11e60:	cmp	r6, r5
   11e64:	bgt	11ed4 <table_destroy@@Base+0xa0>
   11e68:	ldr	r0, [r4, #16]
   11e6c:	cmp	r0, #0
   11e70:	beq	11e78 <table_destroy@@Base+0x44>
   11e74:	bl	11ad8 <free@plt>
   11e78:	mov	r0, r4
   11e7c:	bl	126e8 <table_get_column_length@@Base>
   11e80:	mov	r5, #0
   11e84:	mov	r6, r0
   11e88:	cmp	r6, r5
   11e8c:	bgt	11ee8 <table_destroy@@Base+0xb4>
   11e90:	ldr	r0, [r4]
   11e94:	cmp	r0, #0
   11e98:	beq	11ea0 <table_destroy@@Base+0x6c>
   11e9c:	bl	11ad8 <free@plt>
   11ea0:	ldr	r0, [r4, #36]	; 0x24
   11ea4:	cmp	r0, #0
   11ea8:	beq	11eb0 <table_destroy@@Base+0x7c>
   11eac:	bl	11ad8 <free@plt>
   11eb0:	ldr	r0, [r4, #40]	; 0x28
   11eb4:	cmp	r0, #0
   11eb8:	beq	11ec0 <table_destroy@@Base+0x8c>
   11ebc:	bl	11ad8 <free@plt>
   11ec0:	ldr	r0, [r4, #44]	; 0x2c
   11ec4:	cmp	r0, #0
   11ec8:	popeq	{r4, r5, r6, pc}
   11ecc:	pop	{r4, r5, r6, lr}
   11ed0:	b	11ad8 <free@plt>
   11ed4:	mov	r1, r5
   11ed8:	mov	r0, r4
   11edc:	bl	12f70 <table_row_destroy@@Base>
   11ee0:	add	r5, r5, #1
   11ee4:	b	11e60 <table_destroy@@Base+0x2c>
   11ee8:	mov	r1, r5
   11eec:	mov	r0, r4
   11ef0:	bl	126cc <table_column_destroy@@Base>
   11ef4:	add	r5, r5, #1
   11ef8:	b	11e88 <table_destroy@@Base+0x54>

00011efc <table_delete@@Base>:
   11efc:	push	{r4, lr}
   11f00:	mov	r4, r0
   11f04:	bl	11e34 <table_destroy@@Base>
   11f08:	mov	r0, r4
   11f0c:	pop	{r4, lr}
   11f10:	b	11ad8 <free@plt>

00011f14 <table_dupe@@Base>:
   11f14:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f18:	sub	sp, sp, #20
   11f1c:	mov	r6, r0
   11f20:	bl	12fc0 <table_get_row_length@@Base>
   11f24:	mov	r4, #0
   11f28:	mov	r9, r0
   11f2c:	mov	r0, r6
   11f30:	bl	126e8 <table_get_column_length@@Base>
   11f34:	mov	r8, r0
   11f38:	bl	11e1c <table_new@@Base>
   11f3c:	mov	r7, r0
   11f40:	cmp	r4, r8
   11f44:	blt	11f60 <table_dupe@@Base+0x4c>
   11f48:	mov	r5, #0
   11f4c:	cmp	r5, r9
   11f50:	mov	r0, r7
   11f54:	blt	11f94 <table_dupe@@Base+0x80>
   11f58:	add	sp, sp, #20
   11f5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f60:	mov	r1, r4
   11f64:	mov	r0, r6
   11f68:	bl	129bc <table_get_column_name@@Base>
   11f6c:	mov	r1, r4
   11f70:	add	r4, r4, #1
   11f74:	mov	r5, r0
   11f78:	mov	r0, r6
   11f7c:	bl	12740 <table_get_column_data_type@@Base>
   11f80:	mov	r1, r5
   11f84:	mov	r2, r0
   11f88:	mov	r0, r7
   11f8c:	bl	12754 <table_add_column@@Base>
   11f90:	b	11f40 <table_dupe@@Base+0x2c>
   11f94:	bl	12fc8 <table_add_row@@Base>
   11f98:	mov	r4, #0
   11f9c:	cmp	r4, r8
   11fa0:	addge	r5, r5, #1
   11fa4:	bge	11f4c <table_dupe@@Base+0x38>
   11fa8:	mov	r1, r4
   11fac:	mov	r0, r6
   11fb0:	bl	12740 <table_get_column_data_type@@Base>
   11fb4:	cmp	r0, #23
   11fb8:	ldrls	pc, [pc, r0, lsl #2]
   11fbc:	b	12044 <table_dupe@@Base+0x130>
   11fc0:	andeq	r2, r1, r0, lsr #32
   11fc4:	andeq	r2, r1, ip, asr #32
   11fc8:	andeq	r2, r1, r4, ror r0
   11fcc:	muleq	r1, ip, r0
   11fd0:	andeq	r2, r1, r4, asr #1
   11fd4:	andeq	r2, r1, ip, ror #1
   11fd8:	andeq	r2, r1, r4, lsl r1
   11fdc:	andeq	r2, r1, ip, lsr r1
   11fe0:	andeq	r2, r1, r4, ror #2
   11fe4:	andeq	r2, r1, ip, lsl #3
   11fe8:			; <UNDEFINED> instruction: 0x000121b4
   11fec:	ldrdeq	r2, [r1], -ip
   11ff0:	andeq	r2, r1, r4, lsl #4
   11ff4:	andeq	r2, r1, ip, lsr #4
   11ff8:	andeq	r2, r1, r4, asr r2
   11ffc:	andeq	r2, r1, ip, ror r2
   12000:	andeq	r2, r1, ip, asr #5
   12004:	strdeq	r2, [r1], -r0
   12008:	andeq	r2, r1, r4, lsl r3
   1200c:	andeq	r2, r1, r0, ror #6
   12010:	andeq	r2, r1, r8, lsl #7
   12014:	andeq	r2, r1, r4, lsr #5
   12018:	andeq	r2, r1, r8, lsr r3
   1201c:			; <UNDEFINED> instruction: 0x000123b0
   12020:	mov	r2, r4
   12024:	mov	r1, r5
   12028:	mov	r0, r6
   1202c:	bl	12e78 <table_get_int@@Base>
   12030:	mov	r2, r4
   12034:	mov	r1, r5
   12038:	mov	r3, r0
   1203c:	mov	r0, r7
   12040:	bl	13484 <table_set_int@@Base>
   12044:	add	r4, r4, #1
   12048:	b	11f9c <table_dupe@@Base+0x88>
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r0, r6
   12058:	bl	12e8c <table_get_uint@@Base>
   1205c:	mov	r2, r4
   12060:	mov	r1, r5
   12064:	mov	r3, r0
   12068:	mov	r0, r7
   1206c:	bl	134a8 <table_set_uint@@Base>
   12070:	b	12044 <table_dupe@@Base+0x130>
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	mov	r0, r6
   12080:	bl	12e58 <table_get_int8@@Base>
   12084:	mov	r2, r4
   12088:	mov	r1, r5
   1208c:	mov	r3, r0
   12090:	mov	r0, r7
   12094:	bl	134cc <table_set_int8@@Base>
   12098:	b	12044 <table_dupe@@Base+0x130>
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	mov	r0, r6
   120a8:	bl	12f44 <table_get_uint8@@Base>
   120ac:	mov	r2, r4
   120b0:	mov	r1, r5
   120b4:	mov	r3, r0
   120b8:	mov	r0, r7
   120bc:	bl	134f0 <table_set_uint8@@Base>
   120c0:	b	12044 <table_dupe@@Base+0x130>
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	mov	r0, r6
   120d0:	bl	12ea0 <table_get_int16@@Base>
   120d4:	mov	r2, r4
   120d8:	mov	r1, r5
   120dc:	mov	r3, r0
   120e0:	mov	r0, r7
   120e4:	bl	13514 <table_set_int16@@Base>
   120e8:	b	12044 <table_dupe@@Base+0x130>
   120ec:	mov	r2, r4
   120f0:	mov	r1, r5
   120f4:	mov	r0, r6
   120f8:	bl	12eb4 <table_get_uint16@@Base>
   120fc:	mov	r2, r4
   12100:	mov	r1, r5
   12104:	mov	r3, r0
   12108:	mov	r0, r7
   1210c:	bl	13538 <table_set_uint16@@Base>
   12110:	b	12044 <table_dupe@@Base+0x130>
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r0, r6
   12120:	bl	12e68 <table_get_int32@@Base>
   12124:	mov	r2, r4
   12128:	mov	r1, r5
   1212c:	mov	r3, r0
   12130:	mov	r0, r7
   12134:	bl	1355c <table_set_int32@@Base>
   12138:	b	12044 <table_dupe@@Base+0x130>
   1213c:	mov	r2, r4
   12140:	mov	r1, r5
   12144:	mov	r0, r6
   12148:	bl	12e7c <table_get_uint32@@Base>
   1214c:	mov	r2, r4
   12150:	mov	r1, r5
   12154:	mov	r3, r0
   12158:	mov	r0, r7
   1215c:	bl	13580 <table_set_uint32@@Base>
   12160:	b	12044 <table_dupe@@Base+0x130>
   12164:	mov	r2, r4
   12168:	mov	r1, r5
   1216c:	mov	r0, r6
   12170:	bl	12ee8 <table_get_int64@@Base>
   12174:	mov	r2, r4
   12178:	strd	r0, [sp]
   1217c:	mov	r1, r5
   12180:	mov	r0, r7
   12184:	bl	135a4 <table_set_int64@@Base>
   12188:	b	12044 <table_dupe@@Base+0x130>
   1218c:	mov	r2, r4
   12190:	mov	r1, r5
   12194:	mov	r0, r6
   12198:	bl	12efc <table_get_uint64@@Base>
   1219c:	mov	r2, r4
   121a0:	strd	r0, [sp]
   121a4:	mov	r1, r5
   121a8:	mov	r0, r7
   121ac:	bl	135c0 <table_set_uint64@@Base>
   121b0:	b	12044 <table_dupe@@Base+0x130>
   121b4:	mov	r2, r4
   121b8:	mov	r1, r5
   121bc:	mov	r0, r6
   121c0:	bl	12e90 <table_get_short@@Base>
   121c4:	mov	r2, r4
   121c8:	mov	r1, r5
   121cc:	mov	r3, r0
   121d0:	mov	r0, r7
   121d4:	bl	135dc <table_set_short@@Base>
   121d8:	b	12044 <table_dupe@@Base+0x130>
   121dc:	mov	r2, r4
   121e0:	mov	r1, r5
   121e4:	mov	r0, r6
   121e8:	bl	12ea4 <table_get_ushort@@Base>
   121ec:	mov	r2, r4
   121f0:	mov	r1, r5
   121f4:	mov	r3, r0
   121f8:	mov	r0, r7
   121fc:	bl	13600 <table_set_ushort@@Base>
   12200:	b	12044 <table_dupe@@Base+0x130>
   12204:	mov	r2, r4
   12208:	mov	r1, r5
   1220c:	mov	r0, r6
   12210:	bl	12eb8 <table_get_long@@Base>
   12214:	mov	r2, r4
   12218:	mov	r1, r5
   1221c:	mov	r3, r0
   12220:	mov	r0, r7
   12224:	bl	13624 <table_set_long@@Base>
   12228:	b	12044 <table_dupe@@Base+0x130>
   1222c:	mov	r2, r4
   12230:	mov	r1, r5
   12234:	mov	r0, r6
   12238:	bl	12ec8 <table_get_ulong@@Base>
   1223c:	mov	r2, r4
   12240:	mov	r1, r5
   12244:	mov	r3, r0
   12248:	mov	r0, r7
   1224c:	bl	13648 <table_set_ulong@@Base>
   12250:	b	12044 <table_dupe@@Base+0x130>
   12254:	mov	r2, r4
   12258:	mov	r1, r5
   1225c:	mov	r0, r6
   12260:	bl	12ed8 <table_get_llong@@Base>
   12264:	mov	r2, r4
   12268:	strd	r0, [sp]
   1226c:	mov	r1, r5
   12270:	mov	r0, r7
   12274:	bl	1366c <table_set_llong@@Base>
   12278:	b	12044 <table_dupe@@Base+0x130>
   1227c:	mov	r2, r4
   12280:	mov	r1, r5
   12284:	mov	r0, r6
   12288:	bl	12eec <table_get_ullong@@Base>
   1228c:	mov	r2, r4
   12290:	strd	r0, [sp]
   12294:	mov	r1, r5
   12298:	mov	r0, r7
   1229c:	bl	13688 <table_set_ullong@@Base>
   122a0:	b	12044 <table_dupe@@Base+0x130>
   122a4:	mov	r2, r4
   122a8:	mov	r1, r5
   122ac:	mov	r0, r6
   122b0:	bl	12f48 <table_get_string@@Base>
   122b4:	mov	r2, r4
   122b8:	mov	r1, r5
   122bc:	mov	r3, r0
   122c0:	mov	r0, r7
   122c4:	bl	13704 <table_set_string@@Base>
   122c8:	b	12044 <table_dupe@@Base+0x130>
   122cc:	mov	r2, r4
   122d0:	mov	r1, r5
   122d4:	mov	r0, r6
   122d8:	bl	12f00 <table_get_float@@Base>
   122dc:	mov	r2, r4
   122e0:	mov	r1, r5
   122e4:	mov	r0, r7
   122e8:	bl	136a4 <table_set_float@@Base>
   122ec:	b	12044 <table_dupe@@Base+0x130>
   122f0:	mov	r2, r4
   122f4:	mov	r1, r5
   122f8:	mov	r0, r6
   122fc:	bl	12f10 <table_get_double@@Base>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r7
   1230c:	bl	136c4 <table_set_double@@Base>
   12310:	b	12044 <table_dupe@@Base+0x130>
   12314:	mov	r2, r4
   12318:	mov	r1, r5
   1231c:	mov	r0, r6
   12320:	bl	12f20 <table_get_ldouble@@Base>
   12324:	mov	r2, r4
   12328:	mov	r1, r5
   1232c:	mov	r0, r7
   12330:	bl	136e4 <table_set_ldouble@@Base>
   12334:	b	12044 <table_dupe@@Base+0x130>
   12338:	mov	r2, r4
   1233c:	mov	r1, r5
   12340:	mov	r0, r6
   12344:	bl	12e48 <table_get_bool@@Base>
   12348:	mov	r2, r4
   1234c:	mov	r1, r5
   12350:	mov	r3, r0
   12354:	mov	r0, r7
   12358:	bl	13460 <table_set_bool@@Base>
   1235c:	b	12044 <table_dupe@@Base+0x130>
   12360:	mov	r2, r4
   12364:	mov	r1, r5
   12368:	mov	r0, r6
   1236c:	bl	12f40 <table_get_char@@Base>
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	mov	r3, r0
   1237c:	mov	r0, r7
   12380:	bl	1371c <table_set_char@@Base>
   12384:	b	12044 <table_dupe@@Base+0x130>
   12388:	mov	r2, r4
   1238c:	mov	r1, r5
   12390:	mov	r0, r6
   12394:	bl	12f30 <table_get_uchar@@Base>
   12398:	mov	r2, r4
   1239c:	mov	r1, r5
   123a0:	mov	r3, r0
   123a4:	mov	r0, r7
   123a8:	bl	13740 <table_set_uchar@@Base>
   123ac:	b	12044 <table_dupe@@Base+0x130>
   123b0:	mov	r2, r4
   123b4:	mov	r1, r5
   123b8:	mov	r0, r6
   123bc:	bl	12f4c <table_get_ptr@@Base>
   123c0:	add	r3, sp, #12
   123c4:	mov	r2, r4
   123c8:	mov	r1, r5
   123cc:	str	r0, [sp, #12]
   123d0:	mov	r0, r7
   123d4:	bl	13764 <table_set_ptr@@Base>
   123d8:	b	12044 <table_dupe@@Base+0x130>

000123dc <table_get_major_version@@Base>:
   123dc:	mov	r0, #0
   123e0:	bx	lr

000123e4 <table_get_minor_version@@Base>:
   123e4:	mov	r0, #0
   123e8:	bx	lr

000123ec <table_get_patch_version@@Base>:
   123ec:	mov	r0, #0
   123f0:	bx	lr

000123f4 <table_get_version@@Base>:
   123f4:	ldr	r0, [pc]	; 123fc <table_get_version@@Base+0x8>
   123f8:	bx	lr
   123fc:			; <UNDEFINED> instruction: 0x000144b8

00012400 <table_get_callback_length@@Base>:
   12400:	ldr	r0, [r0, #32]
   12404:	bx	lr

00012408 <table_register_callback@@Base>:
   12408:	push	{r4, r5, r6, r7, r8, lr}
   1240c:	mov	r4, r0
   12410:	ldr	r0, [r0, #32]
   12414:	mov	ip, #0
   12418:	cmp	ip, r0
   1241c:	blt	124b0 <table_register_callback@@Base+0xa8>
   12420:	ldr	r5, [r4, #48]	; 0x30
   12424:	mov	r8, r1
   12428:	mov	r1, r5
   1242c:	mov	r6, r3
   12430:	mov	r7, r2
   12434:	bl	14284 <table_cell_nullify@@Base+0x218>
   12438:	cmp	r1, #0
   1243c:	bne	12484 <table_register_callback@@Base+0x7c>
   12440:	ldr	r1, [r4, #52]	; 0x34
   12444:	ldr	r0, [r4, #36]	; 0x24
   12448:	add	r1, r5, r1
   1244c:	str	r1, [r4, #52]	; 0x34
   12450:	lsl	r1, r1, #2
   12454:	bl	11ae4 <realloc@plt>
   12458:	ldr	r1, [r4, #52]	; 0x34
   1245c:	lsl	r1, r1, #2
   12460:	str	r0, [r4, #36]	; 0x24
   12464:	ldr	r0, [r4, #40]	; 0x28
   12468:	bl	11ae4 <realloc@plt>
   1246c:	ldr	r1, [r4, #52]	; 0x34
   12470:	lsl	r1, r1, #2
   12474:	str	r0, [r4, #40]	; 0x28
   12478:	ldr	r0, [r4, #44]	; 0x2c
   1247c:	bl	11ae4 <realloc@plt>
   12480:	str	r0, [r4, #44]	; 0x2c
   12484:	ldr	r3, [r4, #32]
   12488:	ldr	r2, [r4, #36]	; 0x24
   1248c:	str	r8, [r2, r3, lsl #2]
   12490:	ldr	r2, [r4, #40]	; 0x28
   12494:	str	r7, [r2, r3, lsl #2]
   12498:	ldr	r2, [r4, #44]	; 0x2c
   1249c:	str	r6, [r2, r3, lsl #2]
   124a0:	ldr	r3, [r4, #32]
   124a4:	add	r3, r3, #1
   124a8:	str	r3, [r4, #32]
   124ac:	pop	{r4, r5, r6, r7, r8, pc}
   124b0:	ldr	r5, [r4, #36]	; 0x24
   124b4:	lsl	lr, ip, #2
   124b8:	ldr	r5, [r5, ip, lsl #2]
   124bc:	cmp	r1, r5
   124c0:	bne	124d4 <table_register_callback@@Base+0xcc>
   124c4:	ldr	r5, [r4, #40]	; 0x28
   124c8:	ldr	r5, [r5, ip, lsl #2]
   124cc:	cmp	r2, r5
   124d0:	beq	124dc <table_register_callback@@Base+0xd4>
   124d4:	add	ip, ip, #1
   124d8:	b	12418 <table_register_callback@@Base+0x10>
   124dc:	cmp	ip, #0
   124e0:	ble	12420 <table_register_callback@@Base+0x18>
   124e4:	ldr	r1, [r4, #44]	; 0x2c
   124e8:	ldr	r2, [r1, lr]
   124ec:	orr	r3, r2, r3
   124f0:	str	r3, [r1, lr]
   124f4:	pop	{r4, r5, r6, r7, r8, pc}

000124f8 <table_unregister_callback@@Base>:
   124f8:	push	{r4, r5, r6, lr}
   124fc:	mov	r4, r0
   12500:	ldr	r0, [r0, #32]
   12504:	mov	r3, #0
   12508:	cmp	r3, r0
   1250c:	blt	12514 <table_unregister_callback@@Base+0x1c>
   12510:	pop	{r4, r5, r6, pc}
   12514:	ldr	lr, [r4, #36]	; 0x24
   12518:	lsl	ip, r3, #2
   1251c:	ldr	lr, [lr, r3, lsl #2]
   12520:	cmp	r1, lr
   12524:	bne	12538 <table_unregister_callback@@Base+0x40>
   12528:	ldr	lr, [r4, #40]	; 0x28
   1252c:	ldr	lr, [lr, r3, lsl #2]
   12530:	cmp	r2, lr
   12534:	beq	1256c <table_unregister_callback@@Base+0x74>
   12538:	add	r3, r3, #1
   1253c:	b	12508 <table_unregister_callback@@Base+0x10>
   12540:	ldr	r1, [r4, #36]	; 0x24
   12544:	add	r3, r3, #1
   12548:	ldr	r0, [r1, r2]
   1254c:	str	r0, [r1, ip]
   12550:	ldr	r1, [r4, #40]	; 0x28
   12554:	ldr	r0, [r1, r2]
   12558:	str	r0, [r1, ip]
   1255c:	ldr	r1, [r4, #44]	; 0x2c
   12560:	ldr	r0, [r1, r2]
   12564:	str	r0, [r1, ip]
   12568:	mov	ip, r2
   1256c:	ldr	r0, [r4, #32]
   12570:	add	r2, ip, #4
   12574:	sub	r0, r0, #1
   12578:	cmp	r3, r0
   1257c:	blt	12540 <table_unregister_callback@@Base+0x48>
   12580:	ldr	r6, [r4, #48]	; 0x30
   12584:	str	r0, [r4, #32]
   12588:	mov	r1, r6
   1258c:	bl	14284 <table_cell_nullify@@Base+0x218>
   12590:	cmp	r1, #0
   12594:	popne	{r4, r5, r6, pc}
   12598:	ldr	r5, [r4, #52]	; 0x34
   1259c:	sub	r5, r5, r6
   125a0:	cmp	r5, #0
   125a4:	str	r5, [r4, #52]	; 0x34
   125a8:	beq	125e8 <table_unregister_callback@@Base+0xf0>
   125ac:	lsl	r1, r5, #2
   125b0:	ldr	r0, [r4, #36]	; 0x24
   125b4:	bl	11ae4 <realloc@plt>
   125b8:	ldr	r1, [r4, #52]	; 0x34
   125bc:	lsl	r1, r1, #2
   125c0:	str	r0, [r4, #36]	; 0x24
   125c4:	ldr	r0, [r4, #40]	; 0x28
   125c8:	bl	11ae4 <realloc@plt>
   125cc:	ldr	r1, [r4, #52]	; 0x34
   125d0:	lsl	r1, r1, #2
   125d4:	str	r0, [r4, #40]	; 0x28
   125d8:	ldr	r0, [r4, #44]	; 0x2c
   125dc:	bl	11ae4 <realloc@plt>
   125e0:	str	r0, [r4, #44]	; 0x2c
   125e4:	pop	{r4, r5, r6, pc}
   125e8:	ldr	r0, [r4, #36]	; 0x24
   125ec:	bl	11ad8 <free@plt>
   125f0:	ldr	r0, [r4, #40]	; 0x28
   125f4:	bl	11ad8 <free@plt>
   125f8:	ldr	r0, [r4, #44]	; 0x2c
   125fc:	bl	11ad8 <free@plt>
   12600:	str	r5, [r4, #36]	; 0x24
   12604:	str	r5, [r4, #40]	; 0x28
   12608:	str	r5, [r4, #44]	; 0x2c
   1260c:	pop	{r4, r5, r6, pc}

00012610 <table_notify@@Base>:
   12610:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12614:	mov	r5, r0
   12618:	mov	r7, r1
   1261c:	mov	r8, r2
   12620:	mov	r6, r3
   12624:	mov	r4, #0
   12628:	ldr	r3, [r5, #32]
   1262c:	cmp	r4, r3
   12630:	blt	1263c <table_notify@@Base+0x2c>
   12634:	add	sp, sp, #12
   12638:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1263c:	ldr	r3, [r5, #44]	; 0x2c
   12640:	ldr	r3, [r3, r4, lsl #2]
   12644:	tst	r6, r3
   12648:	beq	12674 <table_notify@@Base+0x64>
   1264c:	ldr	r2, [r5, #40]	; 0x28
   12650:	ldr	r3, [r5, #36]	; 0x24
   12654:	mov	r1, r7
   12658:	ldr	r2, [r2, r4, lsl #2]
   1265c:	mov	r0, r5
   12660:	str	r2, [sp]
   12664:	mov	r2, r8
   12668:	ldr	r9, [r3, r4, lsl #2]
   1266c:	mov	r3, r6
   12670:	blx	r9
   12674:	add	r4, r4, #1
   12678:	b	12628 <table_notify@@Base+0x18>

0001267c <table_column_init@@Base>:
   1267c:	push	{r4, r5, r6, r7, r8, lr}
   12680:	mov	r4, #12
   12684:	ldr	r7, [r0]
   12688:	mov	r0, r2
   1268c:	mul	r4, r4, r1
   12690:	mov	r6, r2
   12694:	mov	r8, r3
   12698:	bl	11b2c <strlen@plt>
   1269c:	add	r5, r7, r4
   126a0:	add	r0, r0, #1
   126a4:	bl	11b08 <malloc@plt>
   126a8:	cmp	r0, #0
   126ac:	str	r0, [r7, r4]
   126b0:	beq	126bc <table_column_init@@Base+0x40>
   126b4:	mov	r1, r6
   126b8:	bl	11af0 <strcpy@plt>
   126bc:	ldr	r3, [sp, #24]
   126c0:	str	r8, [r5, #4]
   126c4:	str	r3, [r5, #8]
   126c8:	pop	{r4, r5, r6, r7, r8, pc}

000126cc <table_column_destroy@@Base>:
   126cc:	mov	r3, #12
   126d0:	ldr	r2, [r0]
   126d4:	mul	r1, r3, r1
   126d8:	ldr	r0, [r2, r1]
   126dc:	cmp	r0, #0
   126e0:	bxeq	lr
   126e4:	b	11ad8 <free@plt>

000126e8 <table_get_column_length@@Base>:
   126e8:	ldr	r0, [r0, #4]
   126ec:	bx	lr

000126f0 <table_get_column@@Base>:
   126f0:	push	{r4, r5, r6, r7, r8, lr}
   126f4:	mov	r5, r0
   126f8:	ldr	r6, [r0, #4]
   126fc:	mov	r7, r1
   12700:	mov	r4, #0
   12704:	mov	r8, #12
   12708:	cmp	r4, r6
   1270c:	blt	1271c <table_get_column@@Base+0x2c>
   12710:	mvneq	r4, #0
   12714:	mov	r0, r4
   12718:	pop	{r4, r5, r6, r7, r8, pc}
   1271c:	mul	r3, r8, r4
   12720:	ldr	r2, [r5]
   12724:	mov	r1, r7
   12728:	ldr	r0, [r2, r3]
   1272c:	bl	11ac0 <strcmp@plt>
   12730:	cmp	r0, #0
   12734:	beq	12714 <table_get_column@@Base+0x24>
   12738:	add	r4, r4, #1
   1273c:	b	12708 <table_get_column@@Base+0x18>

00012740 <table_get_column_data_type@@Base>:
   12740:	ldr	r2, [r0]
   12744:	mov	r3, #12
   12748:	mla	r1, r3, r1, r2
   1274c:	ldr	r0, [r1, #4]
   12750:	bx	lr

00012754 <table_add_column@@Base>:
   12754:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12758:	mov	r4, r0
   1275c:	ldr	r6, [r0, #8]
   12760:	mov	r8, r1
   12764:	ldr	r0, [r0, #4]
   12768:	mov	r1, r6
   1276c:	mov	r7, r2
   12770:	bl	14284 <table_cell_nullify@@Base+0x218>
   12774:	subs	r5, r1, #0
   12778:	beq	127e0 <table_add_column@@Base+0x8c>
   1277c:	mov	r0, r4
   12780:	bl	12fc0 <table_get_row_length@@Base>
   12784:	ldr	r6, [r4, #4]
   12788:	mov	r5, #0
   1278c:	mov	r9, r0
   12790:	mov	r0, r7
   12794:	bl	12e20 <table_get_default_compare_function_for_data_type@@Base>
   12798:	mov	r3, r7
   1279c:	mov	r2, r8
   127a0:	mov	r1, r6
   127a4:	str	r0, [sp]
   127a8:	mov	r0, r4
   127ac:	bl	1267c <table_column_init@@Base>
   127b0:	cmp	r9, r5
   127b4:	bgt	12840 <table_add_column@@Base+0xec>
   127b8:	mov	r0, r4
   127bc:	mov	r3, #8
   127c0:	ldr	r2, [r4, #4]
   127c4:	mvn	r1, #0
   127c8:	bl	12610 <table_notify@@Base>
   127cc:	ldr	r0, [r4, #4]
   127d0:	add	r3, r0, #1
   127d4:	str	r3, [r4, #4]
   127d8:	add	sp, sp, #12
   127dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   127e0:	ldr	r1, [r4, #12]
   127e4:	ldr	r0, [r4]
   127e8:	add	r6, r6, r1
   127ec:	mov	r1, #12
   127f0:	str	r6, [r4, #12]
   127f4:	mul	r1, r1, r6
   127f8:	bl	11ae4 <realloc@plt>
   127fc:	str	r0, [r4]
   12800:	mov	r0, r4
   12804:	bl	12fc0 <table_get_row_length@@Base>
   12808:	mov	r9, r0
   1280c:	cmp	r9, r5
   12810:	ble	1277c <table_add_column@@Base+0x28>
   12814:	mov	r1, r5
   12818:	mov	r0, r4
   1281c:	bl	13164 <table_get_row_ptr@@Base>
   12820:	ldr	r1, [r4, #12]
   12824:	add	r5, r5, #1
   12828:	lsl	r1, r1, #2
   1282c:	mov	r6, r0
   12830:	ldr	r0, [r0]
   12834:	bl	11ae4 <realloc@plt>
   12838:	str	r0, [r6]
   1283c:	b	1280c <table_add_column@@Base+0xb8>
   12840:	mov	r1, r5
   12844:	mov	r2, r6
   12848:	mov	r0, r4
   1284c:	bl	14014 <table_cell_init@@Base>
   12850:	add	r5, r5, #1
   12854:	b	127b0 <table_add_column@@Base+0x5c>

00012858 <table_remove_column@@Base>:
   12858:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1285c:	mov	r5, r1
   12860:	mov	r4, r0
   12864:	bl	126cc <table_column_destroy@@Base>
   12868:	mov	r3, #12
   1286c:	ldr	r7, [r4, #4]
   12870:	mul	r3, r3, r5
   12874:	mov	r1, r5
   12878:	sub	r7, r7, #1
   1287c:	cmp	r1, r7
   12880:	add	lr, r3, #12
   12884:	blt	12914 <table_remove_column@@Base+0xbc>
   12888:	mov	r0, r4
   1288c:	bl	12fc0 <table_get_row_length@@Base>
   12890:	lsl	r9, r5, #2
   12894:	mov	r6, #0
   12898:	mov	r8, r0
   1289c:	cmp	r8, r6
   128a0:	bgt	12944 <table_remove_column@@Base+0xec>
   128a4:	ldr	r0, [r4, #4]
   128a8:	ldr	r7, [r4, #8]
   128ac:	sub	r0, r0, #1
   128b0:	str	r0, [r4, #4]
   128b4:	mov	r1, r7
   128b8:	bl	14284 <table_cell_nullify@@Base+0x218>
   128bc:	subs	r6, r1, #0
   128c0:	bne	128f8 <table_remove_column@@Base+0xa0>
   128c4:	ldr	r1, [r4, #12]
   128c8:	mov	r3, #12
   128cc:	sub	r1, r1, r7
   128d0:	str	r1, [r4, #12]
   128d4:	ldr	r0, [r4]
   128d8:	mul	r1, r3, r1
   128dc:	bl	11ae4 <realloc@plt>
   128e0:	str	r0, [r4]
   128e4:	mov	r0, r4
   128e8:	bl	12fc0 <table_get_row_length@@Base>
   128ec:	mov	r8, r0
   128f0:	cmp	r8, r6
   128f4:	bgt	12990 <table_remove_column@@Base+0x138>
   128f8:	mov	r0, r4
   128fc:	mov	r3, #16
   12900:	mov	r2, r5
   12904:	mvn	r1, #0
   12908:	bl	12610 <table_notify@@Base>
   1290c:	mov	r0, #0
   12910:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12914:	ldr	ip, [r4]
   12918:	add	r1, r1, #1
   1291c:	add	r0, ip, lr
   12920:	add	r6, ip, r3
   12924:	ldr	r2, [r0]
   12928:	str	r2, [ip, r3]
   1292c:	ldr	r2, [r0, #4]
   12930:	mov	r3, lr
   12934:	str	r2, [r6, #4]
   12938:	ldr	r2, [r0, #8]
   1293c:	str	r2, [r6, #8]
   12940:	b	1287c <table_remove_column@@Base+0x24>
   12944:	mov	r2, r5
   12948:	mov	r1, r6
   1294c:	mov	r0, r4
   12950:	bl	14028 <table_cell_destroy@@Base>
   12954:	mov	r1, r6
   12958:	mov	r0, r4
   1295c:	bl	13164 <table_get_row_ptr@@Base>
   12960:	mov	r2, r9
   12964:	mov	r3, r5
   12968:	cmp	r7, r3
   1296c:	add	r1, r2, #4
   12970:	addle	r6, r6, #1
   12974:	ble	1289c <table_remove_column@@Base+0x44>
   12978:	ldr	ip, [r0]
   1297c:	add	r3, r3, #1
   12980:	ldr	lr, [ip, r1]
   12984:	str	lr, [ip, r2]
   12988:	mov	r2, r1
   1298c:	b	12968 <table_remove_column@@Base+0x110>
   12990:	mov	r1, r6
   12994:	mov	r0, r4
   12998:	bl	13164 <table_get_row_ptr@@Base>
   1299c:	ldr	r1, [r4, #12]
   129a0:	add	r6, r6, #1
   129a4:	lsl	r1, r1, #2
   129a8:	mov	r7, r0
   129ac:	ldr	r0, [r0]
   129b0:	bl	11ae4 <realloc@plt>
   129b4:	str	r0, [r7]
   129b8:	b	128f0 <table_remove_column@@Base+0x98>

000129bc <table_get_column_name@@Base>:
   129bc:	mov	r3, #12
   129c0:	ldr	r2, [r0]
   129c4:	mul	r1, r3, r1
   129c8:	ldr	r0, [r2, r1]
   129cc:	bx	lr

000129d0 <table_get_col_ptr@@Base>:
   129d0:	ldr	r3, [r0]
   129d4:	mov	r0, #12
   129d8:	mla	r0, r0, r1, r3
   129dc:	bx	lr

000129e0 <table_get_column_compare_function@@Base>:
   129e0:	ldr	r2, [r0]
   129e4:	mov	r3, #12
   129e8:	mla	r1, r3, r1, r2
   129ec:	ldr	r0, [r1, #8]
   129f0:	bx	lr

000129f4 <table_set_column_compare_function@@Base>:
   129f4:	ldr	r0, [r0]
   129f8:	mov	r3, #12
   129fc:	mla	r1, r3, r1, r0
   12a00:	str	r2, [r1, #8]
   12a04:	bx	lr

00012a08 <table_compare_bool@@Base>:
   12a08:	cmp	r0, #0
   12a0c:	bne	12a1c <table_compare_bool@@Base+0x14>
   12a10:	adds	r0, r1, #0
   12a14:	mvnne	r0, #0
   12a18:	bx	lr
   12a1c:	cmp	r1, #0
   12a20:	beq	12a40 <table_compare_bool@@Base+0x38>
   12a24:	ldrb	r2, [r0]
   12a28:	ldrb	r3, [r1]
   12a2c:	cmp	r2, r3
   12a30:	bgt	12a40 <table_compare_bool@@Base+0x38>
   12a34:	mvnlt	r0, #0
   12a38:	movge	r0, #0
   12a3c:	bx	lr
   12a40:	mov	r0, #1
   12a44:	bx	lr

00012a48 <table_compare_int8@@Base>:
   12a48:	cmp	r0, #0
   12a4c:	bne	12a5c <table_compare_int8@@Base+0x14>
   12a50:	adds	r0, r1, #0
   12a54:	mvnne	r0, #0
   12a58:	bx	lr
   12a5c:	cmp	r1, #0
   12a60:	beq	12a80 <table_compare_int8@@Base+0x38>
   12a64:	ldrsb	r2, [r0]
   12a68:	ldrsb	r3, [r1]
   12a6c:	cmp	r2, r3
   12a70:	bgt	12a80 <table_compare_int8@@Base+0x38>
   12a74:	mvnlt	r0, #0
   12a78:	movge	r0, #0
   12a7c:	bx	lr
   12a80:	mov	r0, #1
   12a84:	bx	lr

00012a88 <table_compare_int32@@Base>:
   12a88:	cmp	r0, #0
   12a8c:	bne	12a9c <table_compare_int32@@Base+0x14>
   12a90:	adds	r0, r1, #0
   12a94:	mvnne	r0, #0
   12a98:	bx	lr
   12a9c:	cmp	r1, #0
   12aa0:	beq	12ac0 <table_compare_int32@@Base+0x38>
   12aa4:	ldr	r2, [r0]
   12aa8:	ldr	r3, [r1]
   12aac:	cmp	r2, r3
   12ab0:	bgt	12ac0 <table_compare_int32@@Base+0x38>
   12ab4:	mvnlt	r0, #0
   12ab8:	movge	r0, #0
   12abc:	bx	lr
   12ac0:	mov	r0, #1
   12ac4:	bx	lr

00012ac8 <table_compare_int@@Base>:
   12ac8:	b	12a88 <table_compare_int32@@Base>

00012acc <table_compare_uint32@@Base>:
   12acc:	cmp	r0, #0
   12ad0:	bne	12ae0 <table_compare_uint32@@Base+0x14>
   12ad4:	adds	r0, r1, #0
   12ad8:	mvnne	r0, #0
   12adc:	bx	lr
   12ae0:	cmp	r1, #0
   12ae4:	beq	12b04 <table_compare_uint32@@Base+0x38>
   12ae8:	ldr	r2, [r0]
   12aec:	ldr	r3, [r1]
   12af0:	cmp	r2, r3
   12af4:	bhi	12b04 <table_compare_uint32@@Base+0x38>
   12af8:	mvncc	r0, #0
   12afc:	movcs	r0, #0
   12b00:	bx	lr
   12b04:	mov	r0, #1
   12b08:	bx	lr

00012b0c <table_compare_uint@@Base>:
   12b0c:	b	12acc <table_compare_uint32@@Base>

00012b10 <table_compare_uint64@@Base>:
   12b10:	cmp	r0, #0
   12b14:	bne	12b24 <table_compare_uint64@@Base+0x14>
   12b18:	adds	r0, r1, #0
   12b1c:	mvnne	r0, #0
   12b20:	bx	lr
   12b24:	cmp	r1, #0
   12b28:	beq	12b50 <table_compare_uint64@@Base+0x40>
   12b2c:	ldrd	r2, [r1]
   12b30:	push	{r4, r5, lr}
   12b34:	ldrd	r4, [r0]
   12b38:	cmp	r5, r3
   12b3c:	cmpeq	r4, r2
   12b40:	bhi	12b58 <table_compare_uint64@@Base+0x48>
   12b44:	mvncc	r0, #0
   12b48:	movcs	r0, #0
   12b4c:	pop	{r4, r5, pc}
   12b50:	mov	r0, #1
   12b54:	bx	lr
   12b58:	mov	r0, #1
   12b5c:	pop	{r4, r5, pc}

00012b60 <table_compare_short@@Base>:
   12b60:	cmp	r0, #0
   12b64:	bne	12b74 <table_compare_short@@Base+0x14>
   12b68:	adds	r0, r1, #0
   12b6c:	mvnne	r0, #0
   12b70:	bx	lr
   12b74:	cmp	r1, #0
   12b78:	beq	12b98 <table_compare_short@@Base+0x38>
   12b7c:	ldrsh	r2, [r0]
   12b80:	ldrsh	r3, [r1]
   12b84:	cmp	r2, r3
   12b88:	bgt	12b98 <table_compare_short@@Base+0x38>
   12b8c:	mvnlt	r0, #0
   12b90:	movge	r0, #0
   12b94:	bx	lr
   12b98:	mov	r0, #1
   12b9c:	bx	lr

00012ba0 <table_compare_int16@@Base>:
   12ba0:	b	12b60 <table_compare_short@@Base>

00012ba4 <table_compare_ushort@@Base>:
   12ba4:	cmp	r0, #0
   12ba8:	bne	12bb8 <table_compare_ushort@@Base+0x14>
   12bac:	adds	r0, r1, #0
   12bb0:	mvnne	r0, #0
   12bb4:	bx	lr
   12bb8:	cmp	r1, #0
   12bbc:	beq	12bdc <table_compare_ushort@@Base+0x38>
   12bc0:	ldrh	r2, [r0]
   12bc4:	ldrh	r3, [r1]
   12bc8:	cmp	r2, r3
   12bcc:	bhi	12bdc <table_compare_ushort@@Base+0x38>
   12bd0:	mvncc	r0, #0
   12bd4:	movcs	r0, #0
   12bd8:	bx	lr
   12bdc:	mov	r0, #1
   12be0:	bx	lr

00012be4 <table_compare_uint16@@Base>:
   12be4:	b	12ba4 <table_compare_ushort@@Base>

00012be8 <table_compare_long@@Base>:
   12be8:	cmp	r0, #0
   12bec:	bne	12bfc <table_compare_long@@Base+0x14>
   12bf0:	adds	r0, r1, #0
   12bf4:	mvnne	r0, #0
   12bf8:	bx	lr
   12bfc:	cmp	r1, #0
   12c00:	beq	12c20 <table_compare_long@@Base+0x38>
   12c04:	ldr	r2, [r0]
   12c08:	ldr	r3, [r1]
   12c0c:	cmp	r2, r3
   12c10:	bgt	12c20 <table_compare_long@@Base+0x38>
   12c14:	mvnlt	r0, #0
   12c18:	movge	r0, #0
   12c1c:	bx	lr
   12c20:	mov	r0, #1
   12c24:	bx	lr

00012c28 <table_compare_llong@@Base>:
   12c28:	cmp	r0, #0
   12c2c:	bne	12c3c <table_compare_llong@@Base+0x14>
   12c30:	adds	r0, r1, #0
   12c34:	mvnne	r0, #0
   12c38:	bx	lr
   12c3c:	cmp	r1, #0
   12c40:	beq	12c70 <table_compare_llong@@Base+0x48>
   12c44:	ldrd	r2, [r1]
   12c48:	push	{r4, r5, lr}
   12c4c:	ldrd	r4, [r0]
   12c50:	cmp	r2, r4
   12c54:	sbcs	r1, r3, r5
   12c58:	blt	12c78 <table_compare_llong@@Base+0x50>
   12c5c:	cmp	r4, r2
   12c60:	sbcs	r3, r5, r3
   12c64:	mvnlt	r0, #0
   12c68:	movge	r0, #0
   12c6c:	pop	{r4, r5, pc}
   12c70:	mov	r0, #1
   12c74:	bx	lr
   12c78:	mov	r0, #1
   12c7c:	pop	{r4, r5, pc}

00012c80 <table_compare_int64@@Base>:
   12c80:	b	12c28 <table_compare_llong@@Base>

00012c84 <table_compare_ullong@@Base>:
   12c84:	cmp	r0, #0
   12c88:	bne	12c98 <table_compare_ullong@@Base+0x14>
   12c8c:	adds	r0, r1, #0
   12c90:	mvnne	r0, #0
   12c94:	bx	lr
   12c98:	cmp	r1, #0
   12c9c:	beq	12cbc <table_compare_ullong@@Base+0x38>
   12ca0:	ldr	r2, [r0]
   12ca4:	ldr	r3, [r1]
   12ca8:	cmp	r2, r3
   12cac:	bhi	12cbc <table_compare_ullong@@Base+0x38>
   12cb0:	mvncc	r0, #0
   12cb4:	movcs	r0, #0
   12cb8:	bx	lr
   12cbc:	mov	r0, #1
   12cc0:	bx	lr

00012cc4 <table_compare_ulong@@Base>:
   12cc4:	b	12c84 <table_compare_ullong@@Base>

00012cc8 <table_compare_float@@Base>:
   12cc8:	cmp	r0, #0
   12ccc:	bne	12cdc <table_compare_float@@Base+0x14>
   12cd0:	adds	r0, r1, #0
   12cd4:	mvnne	r0, #0
   12cd8:	bx	lr
   12cdc:	cmp	r1, #0
   12ce0:	beq	12d04 <table_compare_float@@Base+0x3c>
   12ce4:	vldr	s14, [r0]
   12ce8:	vldr	s15, [r1]
   12cec:	vcmpe.f32	s14, s15
   12cf0:	vmrs	APSR_nzcv, fpscr
   12cf4:	bgt	12d04 <table_compare_float@@Base+0x3c>
   12cf8:	mvnmi	r0, #0
   12cfc:	movpl	r0, #0
   12d00:	bx	lr
   12d04:	mov	r0, #1
   12d08:	bx	lr

00012d0c <table_compare_double@@Base>:
   12d0c:	cmp	r0, #0
   12d10:	bne	12d20 <table_compare_double@@Base+0x14>
   12d14:	adds	r0, r1, #0
   12d18:	mvnne	r0, #0
   12d1c:	bx	lr
   12d20:	cmp	r1, #0
   12d24:	beq	12d48 <table_compare_double@@Base+0x3c>
   12d28:	vldr	d6, [r0]
   12d2c:	vldr	d7, [r1]
   12d30:	vcmpe.f64	d6, d7
   12d34:	vmrs	APSR_nzcv, fpscr
   12d38:	bgt	12d48 <table_compare_double@@Base+0x3c>
   12d3c:	mvnmi	r0, #0
   12d40:	movpl	r0, #0
   12d44:	bx	lr
   12d48:	mov	r0, #1
   12d4c:	bx	lr

00012d50 <table_compare_ldouble@@Base>:
   12d50:	cmp	r0, #0
   12d54:	bne	12d64 <table_compare_ldouble@@Base+0x14>
   12d58:	adds	r0, r1, #0
   12d5c:	mvnne	r0, #0
   12d60:	bx	lr
   12d64:	cmp	r1, #0
   12d68:	beq	12d8c <table_compare_ldouble@@Base+0x3c>
   12d6c:	vldr	d6, [r0]
   12d70:	vldr	d7, [r1]
   12d74:	vcmpe.f64	d6, d7
   12d78:	vmrs	APSR_nzcv, fpscr
   12d7c:	bgt	12d8c <table_compare_ldouble@@Base+0x3c>
   12d80:	mvnmi	r0, #0
   12d84:	movpl	r0, #0
   12d88:	bx	lr
   12d8c:	mov	r0, #1
   12d90:	bx	lr

00012d94 <table_compare_uchar@@Base>:
   12d94:	cmp	r0, #0
   12d98:	bne	12da8 <table_compare_uchar@@Base+0x14>
   12d9c:	adds	r0, r1, #0
   12da0:	mvnne	r0, #0
   12da4:	bx	lr
   12da8:	cmp	r1, #0
   12dac:	beq	12dcc <table_compare_uchar@@Base+0x38>
   12db0:	ldrb	r2, [r0]
   12db4:	ldrb	r3, [r1]
   12db8:	cmp	r2, r3
   12dbc:	bhi	12dcc <table_compare_uchar@@Base+0x38>
   12dc0:	mvncc	r0, #0
   12dc4:	movcs	r0, #0
   12dc8:	bx	lr
   12dcc:	mov	r0, #1
   12dd0:	bx	lr

00012dd4 <table_compare_char@@Base>:
   12dd4:	b	12d94 <table_compare_uchar@@Base>

00012dd8 <table_compare_uint8@@Base>:
   12dd8:	b	12d94 <table_compare_uchar@@Base>

00012ddc <table_compare_ptr@@Base>:
   12ddc:	cmp	r0, r1
   12de0:	bhi	12df0 <table_compare_ptr@@Base+0x14>
   12de4:	mvncc	r0, #0
   12de8:	movcs	r0, #0
   12dec:	bx	lr
   12df0:	mov	r0, #1
   12df4:	bx	lr

00012df8 <table_compare_string@@Base>:
   12df8:	cmp	r0, #0
   12dfc:	bne	12e0c <table_compare_string@@Base+0x14>
   12e00:	adds	r0, r1, #0
   12e04:	mvnne	r0, #0
   12e08:	bx	lr
   12e0c:	cmp	r1, #0
   12e10:	beq	12e18 <table_compare_string@@Base+0x20>
   12e14:	b	11ac0 <strcmp@plt>
   12e18:	mov	r0, #1
   12e1c:	bx	lr

00012e20 <table_get_default_compare_function_for_data_type@@Base>:
   12e20:	cmp	r0, #23
   12e24:	ldrls	r3, [pc, #8]	; 12e34 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12e28:	ldrls	r0, [r3, r0, lsl #2]
   12e2c:	movhi	r0, #0
   12e30:	bx	lr
   12e34:	andeq	r4, r1, r8, lsr #8

00012e38 <table_get@@Base>:
   12e38:	push	{r4, lr}
   12e3c:	bl	13ffc <table_get_cell_ptr@@Base>
   12e40:	ldr	r0, [r0]
   12e44:	pop	{r4, pc}

00012e48 <table_get_bool@@Base>:
   12e48:	push	{r4, lr}
   12e4c:	bl	12e38 <table_get@@Base>
   12e50:	ldrb	r0, [r0]
   12e54:	pop	{r4, pc}

00012e58 <table_get_int8@@Base>:
   12e58:	push	{r4, lr}
   12e5c:	bl	12e38 <table_get@@Base>
   12e60:	ldrsb	r0, [r0]
   12e64:	pop	{r4, pc}

00012e68 <table_get_int32@@Base>:
   12e68:	push	{r4, lr}
   12e6c:	bl	12e38 <table_get@@Base>
   12e70:	ldr	r0, [r0]
   12e74:	pop	{r4, pc}

00012e78 <table_get_int@@Base>:
   12e78:	b	12e68 <table_get_int32@@Base>

00012e7c <table_get_uint32@@Base>:
   12e7c:	push	{r4, lr}
   12e80:	bl	12e38 <table_get@@Base>
   12e84:	ldr	r0, [r0]
   12e88:	pop	{r4, pc}

00012e8c <table_get_uint@@Base>:
   12e8c:	b	12e7c <table_get_uint32@@Base>

00012e90 <table_get_short@@Base>:
   12e90:	push	{r4, lr}
   12e94:	bl	12e38 <table_get@@Base>
   12e98:	ldrsh	r0, [r0]
   12e9c:	pop	{r4, pc}

00012ea0 <table_get_int16@@Base>:
   12ea0:	b	12e90 <table_get_short@@Base>

00012ea4 <table_get_ushort@@Base>:
   12ea4:	push	{r4, lr}
   12ea8:	bl	12e38 <table_get@@Base>
   12eac:	ldrh	r0, [r0]
   12eb0:	pop	{r4, pc}

00012eb4 <table_get_uint16@@Base>:
   12eb4:	b	12ea4 <table_get_ushort@@Base>

00012eb8 <table_get_long@@Base>:
   12eb8:	push	{r4, lr}
   12ebc:	bl	12e38 <table_get@@Base>
   12ec0:	ldr	r0, [r0]
   12ec4:	pop	{r4, pc}

00012ec8 <table_get_ulong@@Base>:
   12ec8:	push	{r4, lr}
   12ecc:	bl	12e38 <table_get@@Base>
   12ed0:	ldr	r0, [r0]
   12ed4:	pop	{r4, pc}

00012ed8 <table_get_llong@@Base>:
   12ed8:	push	{r4, lr}
   12edc:	bl	12e38 <table_get@@Base>
   12ee0:	ldrd	r0, [r0]
   12ee4:	pop	{r4, pc}

00012ee8 <table_get_int64@@Base>:
   12ee8:	b	12ed8 <table_get_llong@@Base>

00012eec <table_get_ullong@@Base>:
   12eec:	push	{r4, lr}
   12ef0:	bl	12e38 <table_get@@Base>
   12ef4:	ldrd	r0, [r0]
   12ef8:	pop	{r4, pc}

00012efc <table_get_uint64@@Base>:
   12efc:	b	12eec <table_get_ullong@@Base>

00012f00 <table_get_float@@Base>:
   12f00:	push	{r4, lr}
   12f04:	bl	12e38 <table_get@@Base>
   12f08:	vldr	s0, [r0]
   12f0c:	pop	{r4, pc}

00012f10 <table_get_double@@Base>:
   12f10:	push	{r4, lr}
   12f14:	bl	12e38 <table_get@@Base>
   12f18:	vldr	d0, [r0]
   12f1c:	pop	{r4, pc}

00012f20 <table_get_ldouble@@Base>:
   12f20:	push	{r4, lr}
   12f24:	bl	12e38 <table_get@@Base>
   12f28:	vldr	d0, [r0]
   12f2c:	pop	{r4, pc}

00012f30 <table_get_uchar@@Base>:
   12f30:	push	{r4, lr}
   12f34:	bl	12e38 <table_get@@Base>
   12f38:	ldrb	r0, [r0]
   12f3c:	pop	{r4, pc}

00012f40 <table_get_char@@Base>:
   12f40:	b	12f30 <table_get_uchar@@Base>

00012f44 <table_get_uint8@@Base>:
   12f44:	b	12f30 <table_get_uchar@@Base>

00012f48 <table_get_string@@Base>:
   12f48:	b	12e38 <table_get@@Base>

00012f4c <table_get_ptr@@Base>:
   12f4c:	b	12e38 <table_get@@Base>

00012f50 <table_row_init@@Base>:
   12f50:	push	{r4, r5, r6, lr}
   12f54:	mov	r5, r1
   12f58:	ldr	r4, [r0, #16]
   12f5c:	ldr	r0, [r0, #12]
   12f60:	lsl	r0, r0, #2
   12f64:	bl	11b08 <malloc@plt>
   12f68:	str	r0, [r4, r5, lsl #2]
   12f6c:	pop	{r4, r5, r6, pc}

00012f70 <table_row_destroy@@Base>:
   12f70:	push	{r4, r5, r6, r7, r8, lr}
   12f74:	mov	r6, r0
   12f78:	mov	r5, r1
   12f7c:	bl	126e8 <table_get_column_length@@Base>
   12f80:	ldr	r7, [r6, #16]
   12f84:	mov	r4, #0
   12f88:	mov	r8, r0
   12f8c:	cmp	r4, r8
   12f90:	blt	12fa8 <table_row_destroy@@Base+0x38>
   12f94:	ldr	r0, [r7, r5, lsl #2]
   12f98:	cmp	r0, #0
   12f9c:	popeq	{r4, r5, r6, r7, r8, pc}
   12fa0:	pop	{r4, r5, r6, r7, r8, lr}
   12fa4:	b	11ad8 <free@plt>
   12fa8:	mov	r2, r4
   12fac:	mov	r1, r5
   12fb0:	mov	r0, r6
   12fb4:	bl	14028 <table_cell_destroy@@Base>
   12fb8:	add	r4, r4, #1
   12fbc:	b	12f8c <table_row_destroy@@Base+0x1c>

00012fc0 <table_get_row_length@@Base>:
   12fc0:	ldr	r0, [r0, #20]
   12fc4:	bx	lr

00012fc8 <table_add_row@@Base>:
   12fc8:	push	{r4, r5, r6, r7, r8, lr}
   12fcc:	mov	r4, r0
   12fd0:	ldr	r5, [r0, #24]
   12fd4:	ldr	r0, [r0, #20]
   12fd8:	mov	r1, r5
   12fdc:	bl	14284 <table_cell_nullify@@Base+0x218>
   12fe0:	cmp	r1, #0
   12fe4:	bne	13004 <table_add_row@@Base+0x3c>
   12fe8:	ldr	r1, [r4, #28]
   12fec:	ldr	r0, [r4, #16]
   12ff0:	add	r1, r5, r1
   12ff4:	str	r1, [r4, #28]
   12ff8:	lsl	r1, r1, #2
   12ffc:	bl	11ae4 <realloc@plt>
   13000:	str	r0, [r4, #16]
   13004:	mov	r0, r4
   13008:	ldr	r6, [r4, #20]
   1300c:	bl	126e8 <table_get_column_length@@Base>
   13010:	mov	r1, r6
   13014:	mov	r5, #0
   13018:	mov	r7, r0
   1301c:	mov	r0, r4
   13020:	bl	12f50 <table_row_init@@Base>
   13024:	cmp	r7, r5
   13028:	bgt	13050 <table_add_row@@Base+0x88>
   1302c:	mov	r0, r4
   13030:	mov	r3, #2
   13034:	mvn	r2, #0
   13038:	ldr	r1, [r4, #20]
   1303c:	bl	12610 <table_notify@@Base>
   13040:	ldr	r0, [r4, #20]
   13044:	add	r3, r0, #1
   13048:	str	r3, [r4, #20]
   1304c:	pop	{r4, r5, r6, r7, r8, pc}
   13050:	mov	r2, r5
   13054:	mov	r1, r6
   13058:	mov	r0, r4
   1305c:	bl	14014 <table_cell_init@@Base>
   13060:	add	r5, r5, #1
   13064:	b	13024 <table_add_row@@Base+0x5c>

00013068 <table_remove_row@@Base>:
   13068:	push	{r4, r5, r6, r7, r8, lr}
   1306c:	mov	r4, r0
   13070:	mov	r5, r1
   13074:	ldr	r7, [r0, #20]
   13078:	bl	126e8 <table_get_column_length@@Base>
   1307c:	mov	r6, #0
   13080:	mov	r8, r0
   13084:	cmp	r8, r6
   13088:	bgt	13110 <table_remove_row@@Base+0xa8>
   1308c:	ldr	r3, [r4, #16]
   13090:	lsl	r6, r5, #2
   13094:	ldr	r0, [r3, r5, lsl #2]
   13098:	cmp	r0, #0
   1309c:	beq	130a4 <table_remove_row@@Base+0x3c>
   130a0:	bl	11ad8 <free@plt>
   130a4:	mov	r3, r5
   130a8:	sub	r7, r7, #1
   130ac:	cmp	r3, r7
   130b0:	add	r2, r6, #4
   130b4:	blt	1314c <table_remove_row@@Base+0xe4>
   130b8:	ldr	r0, [r4, #20]
   130bc:	ldr	r6, [r4, #24]
   130c0:	sub	r0, r0, #1
   130c4:	str	r0, [r4, #20]
   130c8:	mov	r1, r6
   130cc:	bl	14284 <table_cell_nullify@@Base+0x218>
   130d0:	cmp	r1, #0
   130d4:	bne	130f4 <table_remove_row@@Base+0x8c>
   130d8:	ldr	r1, [r4, #28]
   130dc:	ldr	r0, [r4, #16]
   130e0:	sub	r1, r1, r6
   130e4:	str	r1, [r4, #28]
   130e8:	lsl	r1, r1, #2
   130ec:	bl	11ae4 <realloc@plt>
   130f0:	str	r0, [r4, #16]
   130f4:	mov	r0, r4
   130f8:	mov	r3, #4
   130fc:	mvn	r2, #0
   13100:	mov	r1, r5
   13104:	bl	12610 <table_notify@@Base>
   13108:	mov	r0, #0
   1310c:	pop	{r4, r5, r6, r7, r8, pc}
   13110:	mov	r1, r6
   13114:	mov	r0, r4
   13118:	bl	12740 <table_get_column_data_type@@Base>
   1311c:	cmp	r0, #23
   13120:	beq	13144 <table_remove_row@@Base+0xdc>
   13124:	mov	r2, r6
   13128:	mov	r1, r5
   1312c:	mov	r0, r4
   13130:	bl	13ffc <table_get_cell_ptr@@Base>
   13134:	ldr	r0, [r0]
   13138:	cmp	r0, #0
   1313c:	beq	13144 <table_remove_row@@Base+0xdc>
   13140:	bl	11ad8 <free@plt>
   13144:	add	r6, r6, #1
   13148:	b	13084 <table_remove_row@@Base+0x1c>
   1314c:	ldr	r1, [r4, #16]
   13150:	add	r3, r3, #1
   13154:	ldr	r0, [r1, r2]
   13158:	str	r0, [r1, r6]
   1315c:	mov	r6, r2
   13160:	b	130ac <table_remove_row@@Base+0x44>

00013164 <table_get_row_ptr@@Base>:
   13164:	ldr	r0, [r0, #16]
   13168:	add	r0, r0, r1, lsl #2
   1316c:	bx	lr

00013170 <table_set_row_ptr@@Base>:
   13170:	ldr	r3, [r0, #16]
   13174:	ldr	r2, [r2]
   13178:	str	r2, [r3, r1, lsl #2]
   1317c:	bx	lr

00013180 <table_set@@Base>:
   13180:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13184:	mov	r6, r0
   13188:	mov	r8, r1
   1318c:	mov	r7, r2
   13190:	ldr	r9, [sp, #32]
   13194:	mov	r5, r3
   13198:	bl	13ffc <table_get_cell_ptr@@Base>
   1319c:	mov	r1, r7
   131a0:	mov	r4, r0
   131a4:	mov	r0, r6
   131a8:	bl	129d0 <table_get_col_ptr@@Base>
   131ac:	cmp	r9, #23
   131b0:	ldrls	pc, [pc, r9, lsl #2]
   131b4:	b	1328c <table_set@@Base+0x10c>
   131b8:	andeq	r3, r1, r4, asr r2
   131bc:	muleq	r1, r4, r2
   131c0:	andeq	r3, r1, r0, lsr #5
   131c4:	andeq	r3, r1, ip, lsr #5
   131c8:			; <UNDEFINED> instruction: 0x000132b8
   131cc:	andeq	r3, r1, ip, lsl #6
   131d0:	andeq	r3, r1, r8, lsl r3
   131d4:	andeq	r3, r1, r4, lsr #6
   131d8:	andeq	r3, r1, r0, lsr r3
   131dc:	andeq	r3, r1, r0, ror r3
   131e0:	muleq	r1, r0, r3
   131e4:	muleq	r1, ip, r3
   131e8:	andeq	r3, r1, r8, lsr #7
   131ec:			; <UNDEFINED> instruction: 0x000133b4
   131f0:	andeq	r3, r1, r0, asr #7
   131f4:	andeq	r3, r1, ip, asr #7
   131f8:	ldrdeq	r3, [r1], -r8
   131fc:	andeq	r3, r1, r4, ror #7
   13200:	strdeq	r3, [r1], -r0
   13204:	andeq	r3, r1, r4, lsr r4
   13208:	andeq	r3, r1, r0, asr #8
   1320c:	strdeq	r3, [r1], -ip
   13210:	andeq	r3, r1, r8, lsl r2
   13214:	andeq	r3, r1, ip, asr #8
   13218:	ldr	r3, [r0, #4]
   1321c:	cmp	r3, #22
   13220:	bne	1328c <table_set@@Base+0x10c>
   13224:	ldr	r3, [r4]
   13228:	cmp	r3, #0
   1322c:	bne	1323c <table_set@@Base+0xbc>
   13230:	mov	r0, #1
   13234:	bl	11b08 <malloc@plt>
   13238:	str	r0, [r4]
   1323c:	ldr	r3, [r4]
   13240:	cmp	r3, #0
   13244:	ldrbne	r2, [r5]
   13248:	strbne	r2, [r3]
   1324c:	bne	132f0 <table_set@@Base+0x170>
   13250:	b	1328c <table_set@@Base+0x10c>
   13254:	ldr	r3, [r0, #4]
   13258:	cmp	r3, #0
   1325c:	bne	1328c <table_set@@Base+0x10c>
   13260:	ldr	r3, [r4]
   13264:	cmp	r3, #0
   13268:	bne	13278 <table_set@@Base+0xf8>
   1326c:	mov	r0, #4
   13270:	bl	11b08 <malloc@plt>
   13274:	str	r0, [r4]
   13278:	ldr	r3, [r4]
   1327c:	cmp	r3, #0
   13280:	ldrne	r2, [r5]
   13284:	strne	r2, [r3]
   13288:	bne	132f0 <table_set@@Base+0x170>
   1328c:	mvn	r0, #0
   13290:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13294:	ldr	r3, [r0, #4]
   13298:	cmp	r3, #1
   1329c:	b	1325c <table_set@@Base+0xdc>
   132a0:	ldr	r3, [r0, #4]
   132a4:	cmp	r3, #2
   132a8:	b	13220 <table_set@@Base+0xa0>
   132ac:	ldr	r3, [r0, #4]
   132b0:	cmp	r3, #3
   132b4:	b	13220 <table_set@@Base+0xa0>
   132b8:	ldr	r3, [r0, #4]
   132bc:	cmp	r3, #4
   132c0:	bne	1328c <table_set@@Base+0x10c>
   132c4:	ldr	r3, [r4]
   132c8:	cmp	r3, #0
   132cc:	bne	132dc <table_set@@Base+0x15c>
   132d0:	mov	r0, #2
   132d4:	bl	11b08 <malloc@plt>
   132d8:	str	r0, [r4]
   132dc:	ldr	r3, [r4]
   132e0:	cmp	r3, #0
   132e4:	beq	1328c <table_set@@Base+0x10c>
   132e8:	ldrh	r2, [r5]
   132ec:	strh	r2, [r3]
   132f0:	mov	r0, r6
   132f4:	mov	r3, #1
   132f8:	mov	r2, r7
   132fc:	mov	r1, r8
   13300:	bl	12610 <table_notify@@Base>
   13304:	mov	r0, #0
   13308:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1330c:	ldr	r3, [r0, #4]
   13310:	cmp	r3, #5
   13314:	b	132c0 <table_set@@Base+0x140>
   13318:	ldr	r3, [r0, #4]
   1331c:	cmp	r3, #6
   13320:	b	1325c <table_set@@Base+0xdc>
   13324:	ldr	r3, [r0, #4]
   13328:	cmp	r3, #7
   1332c:	b	1325c <table_set@@Base+0xdc>
   13330:	ldr	r0, [r0, #4]
   13334:	cmp	r0, #8
   13338:	bne	1328c <table_set@@Base+0x10c>
   1333c:	ldr	r3, [r4]
   13340:	cmp	r3, #0
   13344:	bne	13350 <table_set@@Base+0x1d0>
   13348:	bl	11b08 <malloc@plt>
   1334c:	str	r0, [r4]
   13350:	ldr	r3, [r4]
   13354:	cmp	r3, #0
   13358:	beq	1328c <table_set@@Base+0x10c>
   1335c:	ldr	r2, [r5]
   13360:	str	r2, [r3]
   13364:	ldr	r2, [r5, #4]
   13368:	str	r2, [r3, #4]
   1336c:	b	132f0 <table_set@@Base+0x170>
   13370:	ldr	r3, [r0, #4]
   13374:	cmp	r3, #9
   13378:	bne	1328c <table_set@@Base+0x10c>
   1337c:	ldr	r3, [r4]
   13380:	cmp	r3, #0
   13384:	bne	13350 <table_set@@Base+0x1d0>
   13388:	mov	r0, #8
   1338c:	b	13348 <table_set@@Base+0x1c8>
   13390:	ldr	r3, [r0, #4]
   13394:	cmp	r3, #10
   13398:	b	132c0 <table_set@@Base+0x140>
   1339c:	ldr	r3, [r0, #4]
   133a0:	cmp	r3, #11
   133a4:	b	132c0 <table_set@@Base+0x140>
   133a8:	ldr	r3, [r0, #4]
   133ac:	cmp	r3, #12
   133b0:	b	1325c <table_set@@Base+0xdc>
   133b4:	ldr	r3, [r0, #4]
   133b8:	cmp	r3, #13
   133bc:	b	1325c <table_set@@Base+0xdc>
   133c0:	ldr	r3, [r0, #4]
   133c4:	cmp	r3, #14
   133c8:	b	13378 <table_set@@Base+0x1f8>
   133cc:	ldr	r3, [r0, #4]
   133d0:	cmp	r3, #15
   133d4:	b	13378 <table_set@@Base+0x1f8>
   133d8:	ldr	r3, [r0, #4]
   133dc:	cmp	r3, #16
   133e0:	b	1325c <table_set@@Base+0xdc>
   133e4:	ldr	r3, [r0, #4]
   133e8:	cmp	r3, #17
   133ec:	b	13378 <table_set@@Base+0x1f8>
   133f0:	ldr	r3, [r0, #4]
   133f4:	cmp	r3, #18
   133f8:	b	13378 <table_set@@Base+0x1f8>
   133fc:	ldr	r3, [r0, #4]
   13400:	cmp	r3, #21
   13404:	bne	1328c <table_set@@Base+0x10c>
   13408:	mov	r0, r5
   1340c:	bl	11b2c <strlen@plt>
   13410:	add	r1, r0, #1
   13414:	ldr	r0, [r4]
   13418:	bl	11ae4 <realloc@plt>
   1341c:	cmp	r0, #0
   13420:	str	r0, [r4]
   13424:	beq	1328c <table_set@@Base+0x10c>
   13428:	mov	r1, r5
   1342c:	bl	11af0 <strcpy@plt>
   13430:	b	132f0 <table_set@@Base+0x170>
   13434:	ldr	r3, [r0, #4]
   13438:	cmp	r3, #19
   1343c:	b	13220 <table_set@@Base+0xa0>
   13440:	ldr	r3, [r0, #4]
   13444:	cmp	r3, #20
   13448:	b	13220 <table_set@@Base+0xa0>
   1344c:	ldr	r3, [r0, #4]
   13450:	cmp	r3, #23
   13454:	streq	r5, [r4]
   13458:	beq	132f0 <table_set@@Base+0x170>
   1345c:	b	1328c <table_set@@Base+0x10c>

00013460 <table_set_bool@@Base>:
   13460:	push	{r0, r1, r2, r3, r4, lr}
   13464:	add	ip, sp, #16
   13468:	strb	r3, [ip, #-1]!
   1346c:	mov	r3, #22
   13470:	str	r3, [sp]
   13474:	mov	r3, ip
   13478:	bl	13180 <table_set@@Base>
   1347c:	add	sp, sp, #20
   13480:	pop	{pc}		; (ldr pc, [sp], #4)

00013484 <table_set_int@@Base>:
   13484:	push	{r0, r1, r2, r3, r4, lr}
   13488:	add	ip, sp, #16
   1348c:	str	r3, [ip, #-4]!
   13490:	mov	r3, #0
   13494:	str	r3, [sp]
   13498:	mov	r3, ip
   1349c:	bl	13180 <table_set@@Base>
   134a0:	add	sp, sp, #20
   134a4:	pop	{pc}		; (ldr pc, [sp], #4)

000134a8 <table_set_uint@@Base>:
   134a8:	push	{r0, r1, r2, r3, r4, lr}
   134ac:	add	ip, sp, #16
   134b0:	str	r3, [ip, #-4]!
   134b4:	mov	r3, #1
   134b8:	str	r3, [sp]
   134bc:	mov	r3, ip
   134c0:	bl	13180 <table_set@@Base>
   134c4:	add	sp, sp, #20
   134c8:	pop	{pc}		; (ldr pc, [sp], #4)

000134cc <table_set_int8@@Base>:
   134cc:	push	{r0, r1, r2, r3, r4, lr}
   134d0:	add	ip, sp, #16
   134d4:	strb	r3, [ip, #-1]!
   134d8:	mov	r3, #2
   134dc:	str	r3, [sp]
   134e0:	mov	r3, ip
   134e4:	bl	13180 <table_set@@Base>
   134e8:	add	sp, sp, #20
   134ec:	pop	{pc}		; (ldr pc, [sp], #4)

000134f0 <table_set_uint8@@Base>:
   134f0:	push	{r0, r1, r2, r3, r4, lr}
   134f4:	add	ip, sp, #16
   134f8:	strb	r3, [ip, #-1]!
   134fc:	mov	r3, #3
   13500:	str	r3, [sp]
   13504:	mov	r3, ip
   13508:	bl	13180 <table_set@@Base>
   1350c:	add	sp, sp, #20
   13510:	pop	{pc}		; (ldr pc, [sp], #4)

00013514 <table_set_int16@@Base>:
   13514:	push	{r0, r1, r2, r3, r4, lr}
   13518:	add	ip, sp, #16
   1351c:	strh	r3, [ip, #-2]!
   13520:	mov	r3, #4
   13524:	str	r3, [sp]
   13528:	mov	r3, ip
   1352c:	bl	13180 <table_set@@Base>
   13530:	add	sp, sp, #20
   13534:	pop	{pc}		; (ldr pc, [sp], #4)

00013538 <table_set_uint16@@Base>:
   13538:	push	{r0, r1, r2, r3, r4, lr}
   1353c:	add	ip, sp, #16
   13540:	strh	r3, [ip, #-2]!
   13544:	mov	r3, #5
   13548:	str	r3, [sp]
   1354c:	mov	r3, ip
   13550:	bl	13180 <table_set@@Base>
   13554:	add	sp, sp, #20
   13558:	pop	{pc}		; (ldr pc, [sp], #4)

0001355c <table_set_int32@@Base>:
   1355c:	push	{r0, r1, r2, r3, r4, lr}
   13560:	add	ip, sp, #16
   13564:	str	r3, [ip, #-4]!
   13568:	mov	r3, #6
   1356c:	str	r3, [sp]
   13570:	mov	r3, ip
   13574:	bl	13180 <table_set@@Base>
   13578:	add	sp, sp, #20
   1357c:	pop	{pc}		; (ldr pc, [sp], #4)

00013580 <table_set_uint32@@Base>:
   13580:	push	{r0, r1, r2, r3, r4, lr}
   13584:	add	ip, sp, #16
   13588:	str	r3, [ip, #-4]!
   1358c:	mov	r3, #7
   13590:	str	r3, [sp]
   13594:	mov	r3, ip
   13598:	bl	13180 <table_set@@Base>
   1359c:	add	sp, sp, #20
   135a0:	pop	{pc}		; (ldr pc, [sp], #4)

000135a4 <table_set_int64@@Base>:
   135a4:	mov	r3, #8
   135a8:	push	{r0, r1, r2, lr}
   135ac:	str	r3, [sp]
   135b0:	add	r3, sp, #16
   135b4:	bl	13180 <table_set@@Base>
   135b8:	add	sp, sp, #12
   135bc:	pop	{pc}		; (ldr pc, [sp], #4)

000135c0 <table_set_uint64@@Base>:
   135c0:	mov	r3, #9
   135c4:	push	{r0, r1, r2, lr}
   135c8:	str	r3, [sp]
   135cc:	add	r3, sp, #16
   135d0:	bl	13180 <table_set@@Base>
   135d4:	add	sp, sp, #12
   135d8:	pop	{pc}		; (ldr pc, [sp], #4)

000135dc <table_set_short@@Base>:
   135dc:	push	{r0, r1, r2, r3, r4, lr}
   135e0:	add	ip, sp, #16
   135e4:	strh	r3, [ip, #-2]!
   135e8:	mov	r3, #10
   135ec:	str	r3, [sp]
   135f0:	mov	r3, ip
   135f4:	bl	13180 <table_set@@Base>
   135f8:	add	sp, sp, #20
   135fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013600 <table_set_ushort@@Base>:
   13600:	push	{r0, r1, r2, r3, r4, lr}
   13604:	add	ip, sp, #16
   13608:	strh	r3, [ip, #-2]!
   1360c:	mov	r3, #11
   13610:	str	r3, [sp]
   13614:	mov	r3, ip
   13618:	bl	13180 <table_set@@Base>
   1361c:	add	sp, sp, #20
   13620:	pop	{pc}		; (ldr pc, [sp], #4)

00013624 <table_set_long@@Base>:
   13624:	push	{r0, r1, r2, r3, r4, lr}
   13628:	add	ip, sp, #16
   1362c:	str	r3, [ip, #-4]!
   13630:	mov	r3, #12
   13634:	str	r3, [sp]
   13638:	mov	r3, ip
   1363c:	bl	13180 <table_set@@Base>
   13640:	add	sp, sp, #20
   13644:	pop	{pc}		; (ldr pc, [sp], #4)

00013648 <table_set_ulong@@Base>:
   13648:	push	{r0, r1, r2, r3, r4, lr}
   1364c:	add	ip, sp, #16
   13650:	str	r3, [ip, #-4]!
   13654:	mov	r3, #13
   13658:	str	r3, [sp]
   1365c:	mov	r3, ip
   13660:	bl	13180 <table_set@@Base>
   13664:	add	sp, sp, #20
   13668:	pop	{pc}		; (ldr pc, [sp], #4)

0001366c <table_set_llong@@Base>:
   1366c:	mov	r3, #14
   13670:	push	{r0, r1, r2, lr}
   13674:	str	r3, [sp]
   13678:	add	r3, sp, #16
   1367c:	bl	13180 <table_set@@Base>
   13680:	add	sp, sp, #12
   13684:	pop	{pc}		; (ldr pc, [sp], #4)

00013688 <table_set_ullong@@Base>:
   13688:	mov	r3, #15
   1368c:	push	{r0, r1, r2, lr}
   13690:	str	r3, [sp]
   13694:	add	r3, sp, #16
   13698:	bl	13180 <table_set@@Base>
   1369c:	add	sp, sp, #12
   136a0:	pop	{pc}		; (ldr pc, [sp], #4)

000136a4 <table_set_float@@Base>:
   136a4:	push	{r0, r1, r2, r3, r4, lr}
   136a8:	add	r3, sp, #16
   136ac:	mov	ip, #16
   136b0:	vstmdb	r3!, {s0}
   136b4:	str	ip, [sp]
   136b8:	bl	13180 <table_set@@Base>
   136bc:	add	sp, sp, #20
   136c0:	pop	{pc}		; (ldr pc, [sp], #4)

000136c4 <table_set_double@@Base>:
   136c4:	push	{r0, r1, r2, r3, r4, lr}
   136c8:	add	r3, sp, #16
   136cc:	mov	ip, #17
   136d0:	vstmdb	r3!, {d0}
   136d4:	str	ip, [sp]
   136d8:	bl	13180 <table_set@@Base>
   136dc:	add	sp, sp, #20
   136e0:	pop	{pc}		; (ldr pc, [sp], #4)

000136e4 <table_set_ldouble@@Base>:
   136e4:	push	{r0, r1, r2, r3, r4, lr}
   136e8:	add	r3, sp, #16
   136ec:	mov	ip, #18
   136f0:	vstmdb	r3!, {d0}
   136f4:	str	ip, [sp]
   136f8:	bl	13180 <table_set@@Base>
   136fc:	add	sp, sp, #20
   13700:	pop	{pc}		; (ldr pc, [sp], #4)

00013704 <table_set_string@@Base>:
   13704:	mov	ip, #21
   13708:	push	{r0, r1, r2, lr}
   1370c:	str	ip, [sp]
   13710:	bl	13180 <table_set@@Base>
   13714:	add	sp, sp, #12
   13718:	pop	{pc}		; (ldr pc, [sp], #4)

0001371c <table_set_char@@Base>:
   1371c:	push	{r0, r1, r2, r3, r4, lr}
   13720:	add	ip, sp, #16
   13724:	strb	r3, [ip, #-1]!
   13728:	mov	r3, #19
   1372c:	str	r3, [sp]
   13730:	mov	r3, ip
   13734:	bl	13180 <table_set@@Base>
   13738:	add	sp, sp, #20
   1373c:	pop	{pc}		; (ldr pc, [sp], #4)

00013740 <table_set_uchar@@Base>:
   13740:	push	{r0, r1, r2, r3, r4, lr}
   13744:	add	ip, sp, #16
   13748:	strb	r3, [ip, #-1]!
   1374c:	mov	r3, #20
   13750:	str	r3, [sp]
   13754:	mov	r3, ip
   13758:	bl	13180 <table_set@@Base>
   1375c:	add	sp, sp, #20
   13760:	pop	{pc}		; (ldr pc, [sp], #4)

00013764 <table_set_ptr@@Base>:
   13764:	mov	ip, #23
   13768:	push	{r0, r1, r2, lr}
   1376c:	str	ip, [sp]
   13770:	bl	13180 <table_set@@Base>
   13774:	add	sp, sp, #12
   13778:	pop	{pc}		; (ldr pc, [sp], #4)

0001377c <table_cell_to_buffer@@Base>:
   1377c:	push	{r4, r5, r6, r7, lr}
   13780:	sub	sp, sp, #20
   13784:	mov	r7, r1
   13788:	mov	r1, r2
   1378c:	str	r2, [sp, #12]
   13790:	mov	r6, r0
   13794:	mov	r4, r3
   13798:	ldr	r5, [sp, #40]	; 0x28
   1379c:	bl	12740 <table_get_column_data_type@@Base>
   137a0:	ldr	r2, [sp, #12]
   137a4:	cmp	r0, #23
   137a8:	ldrls	pc, [pc, r0, lsl #2]
   137ac:	b	138cc <table_cell_to_buffer@@Base+0x150>
   137b0:	andeq	r3, r1, r0, lsl r8
   137b4:	andeq	r3, r1, r8, lsr #16
   137b8:	andeq	r3, r1, ip, asr #16
   137bc:	andeq	r3, r1, ip, asr r8
   137c0:	andeq	r3, r1, ip, ror #16
   137c4:	andeq	r3, r1, ip, ror r8
   137c8:	andeq	r3, r1, ip, lsl #17
   137cc:	muleq	r1, ip, r8
   137d0:	andeq	r3, r1, ip, lsr #17
   137d4:	ldrdeq	r3, [r1], -r8
   137d8:	strdeq	r3, [r1], -r0
   137dc:	andeq	r3, r1, r8, lsl #18
   137e0:	andeq	r3, r1, r0, lsr #18
   137e4:	andeq	r3, r1, r8, lsr r9
   137e8:	andeq	r3, r1, r0, asr r9
   137ec:	andeq	r3, r1, r0, ror #18
   137f0:	andeq	r3, r1, r8, lsl #19
   137f4:			; <UNDEFINED> instruction: 0x000139b0
   137f8:	andeq	r3, r1, r8, asr #19
   137fc:	strdeq	r3, [r1], -r0
   13800:	andeq	r3, r1, r8, lsl #20
   13804:	andeq	r3, r1, r0, ror r9
   13808:	andeq	r3, r1, r0, ror #19
   1380c:	andeq	r3, r1, r8, lsl sl
   13810:	mov	r1, r7
   13814:	mov	r0, r6
   13818:	bl	12e78 <table_get_int@@Base>
   1381c:	mov	r3, r0
   13820:	ldr	r2, [pc, #520]	; 13a30 <table_cell_to_buffer@@Base+0x2b4>
   13824:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13828:	mov	r1, r7
   1382c:	mov	r0, r6
   13830:	bl	12e8c <table_get_uint@@Base>
   13834:	ldr	r2, [pc, #504]	; 13a34 <table_cell_to_buffer@@Base+0x2b8>
   13838:	mov	r3, r0
   1383c:	mov	r1, r5
   13840:	mov	r0, r4
   13844:	bl	11b38 <snprintf@plt>
   13848:	b	138cc <table_cell_to_buffer@@Base+0x150>
   1384c:	mov	r1, r7
   13850:	mov	r0, r6
   13854:	bl	12e58 <table_get_int8@@Base>
   13858:	b	1381c <table_cell_to_buffer@@Base+0xa0>
   1385c:	mov	r1, r7
   13860:	mov	r0, r6
   13864:	bl	12f44 <table_get_uint8@@Base>
   13868:	b	13834 <table_cell_to_buffer@@Base+0xb8>
   1386c:	mov	r1, r7
   13870:	mov	r0, r6
   13874:	bl	12ea0 <table_get_int16@@Base>
   13878:	b	1381c <table_cell_to_buffer@@Base+0xa0>
   1387c:	mov	r1, r7
   13880:	mov	r0, r6
   13884:	bl	12eb4 <table_get_uint16@@Base>
   13888:	b	13834 <table_cell_to_buffer@@Base+0xb8>
   1388c:	mov	r1, r7
   13890:	mov	r0, r6
   13894:	bl	12e68 <table_get_int32@@Base>
   13898:	b	1381c <table_cell_to_buffer@@Base+0xa0>
   1389c:	mov	r1, r7
   138a0:	mov	r0, r6
   138a4:	bl	12e7c <table_get_uint32@@Base>
   138a8:	b	13834 <table_cell_to_buffer@@Base+0xb8>
   138ac:	mov	r1, r7
   138b0:	mov	r0, r6
   138b4:	bl	12ee8 <table_get_int64@@Base>
   138b8:	ldr	r2, [pc, #376]	; 13a38 <table_cell_to_buffer@@Base+0x2bc>
   138bc:	strd	r0, [sp]
   138c0:	mov	r1, r5
   138c4:	mov	r0, r4
   138c8:	bl	11b38 <snprintf@plt>
   138cc:	mov	r0, #0
   138d0:	add	sp, sp, #20
   138d4:	pop	{r4, r5, r6, r7, pc}
   138d8:	mov	r1, r7
   138dc:	mov	r0, r6
   138e0:	bl	12efc <table_get_uint64@@Base>
   138e4:	strd	r0, [sp]
   138e8:	ldr	r2, [pc, #332]	; 13a3c <table_cell_to_buffer@@Base+0x2c0>
   138ec:	b	138c0 <table_cell_to_buffer@@Base+0x144>
   138f0:	mov	r1, r7
   138f4:	mov	r0, r6
   138f8:	bl	12e90 <table_get_short@@Base>
   138fc:	ldr	r2, [pc, #316]	; 13a40 <table_cell_to_buffer@@Base+0x2c4>
   13900:	mov	r3, r0
   13904:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13908:	mov	r1, r7
   1390c:	mov	r0, r6
   13910:	bl	12ea4 <table_get_ushort@@Base>
   13914:	ldr	r2, [pc, #296]	; 13a44 <table_cell_to_buffer@@Base+0x2c8>
   13918:	mov	r3, r0
   1391c:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13920:	mov	r1, r7
   13924:	mov	r0, r6
   13928:	bl	12eb8 <table_get_long@@Base>
   1392c:	ldr	r2, [pc, #276]	; 13a48 <table_cell_to_buffer@@Base+0x2cc>
   13930:	mov	r3, r0
   13934:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13938:	mov	r1, r7
   1393c:	mov	r0, r6
   13940:	bl	12ec8 <table_get_ulong@@Base>
   13944:	ldr	r2, [pc, #256]	; 13a4c <table_cell_to_buffer@@Base+0x2d0>
   13948:	mov	r3, r0
   1394c:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13950:	mov	r1, r7
   13954:	mov	r0, r6
   13958:	bl	12ed8 <table_get_llong@@Base>
   1395c:	b	138b8 <table_cell_to_buffer@@Base+0x13c>
   13960:	mov	r1, r7
   13964:	mov	r0, r6
   13968:	bl	12eec <table_get_ullong@@Base>
   1396c:	b	138e4 <table_cell_to_buffer@@Base+0x168>
   13970:	mov	r1, r7
   13974:	mov	r0, r6
   13978:	bl	12f48 <table_get_string@@Base>
   1397c:	ldr	r2, [pc, #204]	; 13a50 <table_cell_to_buffer@@Base+0x2d4>
   13980:	mov	r3, r0
   13984:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13988:	mov	r1, r7
   1398c:	mov	r0, r6
   13990:	bl	12f00 <table_get_float@@Base>
   13994:	ldr	r2, [pc, #184]	; 13a54 <table_cell_to_buffer@@Base+0x2d8>
   13998:	vcvt.f64.f32	d0, s0
   1399c:	vstr	d0, [sp]
   139a0:	mov	r1, r5
   139a4:	mov	r0, r4
   139a8:	bl	11b38 <snprintf@plt>
   139ac:	b	138cc <table_cell_to_buffer@@Base+0x150>
   139b0:	mov	r1, r7
   139b4:	mov	r0, r6
   139b8:	bl	12f10 <table_get_double@@Base>
   139bc:	ldr	r2, [pc, #148]	; 13a58 <table_cell_to_buffer@@Base+0x2dc>
   139c0:	vstr	d0, [sp]
   139c4:	b	139a0 <table_cell_to_buffer@@Base+0x224>
   139c8:	mov	r1, r7
   139cc:	mov	r0, r6
   139d0:	bl	12f20 <table_get_ldouble@@Base>
   139d4:	ldr	r2, [pc, #128]	; 13a5c <table_cell_to_buffer@@Base+0x2e0>
   139d8:	vstr	d0, [sp]
   139dc:	b	139a0 <table_cell_to_buffer@@Base+0x224>
   139e0:	mov	r1, r7
   139e4:	mov	r0, r6
   139e8:	bl	12e48 <table_get_bool@@Base>
   139ec:	b	1381c <table_cell_to_buffer@@Base+0xa0>
   139f0:	mov	r1, r7
   139f4:	mov	r0, r6
   139f8:	bl	12f40 <table_get_char@@Base>
   139fc:	mov	r3, r0
   13a00:	ldr	r2, [pc, #88]	; 13a60 <table_cell_to_buffer@@Base+0x2e4>
   13a04:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13a08:	mov	r1, r7
   13a0c:	mov	r0, r6
   13a10:	bl	12f30 <table_get_uchar@@Base>
   13a14:	b	139fc <table_cell_to_buffer@@Base+0x280>
   13a18:	mov	r1, r7
   13a1c:	mov	r0, r6
   13a20:	bl	12f4c <table_get_ptr@@Base>
   13a24:	ldr	r2, [pc, #56]	; 13a64 <table_cell_to_buffer@@Base+0x2e8>
   13a28:	mov	r3, r0
   13a2c:	b	1383c <table_cell_to_buffer@@Base+0xc0>
   13a30:	andeq	r4, r1, r8, lsl #9
   13a34:	andeq	r4, r1, fp, lsl #9
   13a38:	andeq	r4, r1, lr, lsl #9
   13a3c:	muleq	r1, r3, r4
   13a40:	muleq	r1, r8, r4
   13a44:	muleq	r1, ip, r4
   13a48:	andeq	r4, r1, r0, lsr #9
   13a4c:	andeq	r4, r1, r4, lsr #9
   13a50:	andeq	r4, r1, r8, lsr #9
   13a54:	andeq	r4, r1, fp, lsr #9
   13a58:	andeq	r4, r1, lr, lsr #9
   13a5c:			; <UNDEFINED> instruction: 0x000144b2
   13a60:			; <UNDEFINED> instruction: 0x000144b6
   13a64:			; <UNDEFINED> instruction: 0x000144b9

00013a68 <table_cell_from_buffer@@Base>:
   13a68:	push	{r4, r5, r6, r7, lr}
   13a6c:	mov	r7, r1
   13a70:	sub	sp, sp, #268	; 0x10c
   13a74:	mov	r1, r2
   13a78:	mov	r6, r0
   13a7c:	mov	r5, r2
   13a80:	mov	r4, r3
   13a84:	bl	12740 <table_get_column_data_type@@Base>
   13a88:	cmp	r0, #23
   13a8c:	ldrls	pc, [pc, r0, lsl #2]
   13a90:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13a94:	strdeq	r3, [r1], -r4
   13a98:	andeq	r3, r1, r8, lsr #22
   13a9c:	andeq	r3, r1, r8, asr fp
   13aa0:	andeq	r3, r1, r8, lsl #23
   13aa4:			; <UNDEFINED> instruction: 0x00013bb8
   13aa8:	andeq	r3, r1, r8, ror #23
   13aac:	andeq	r3, r1, r8, lsl ip
   13ab0:	andeq	r3, r1, r8, asr #24
   13ab4:	andeq	r3, r1, r8, ror ip
   13ab8:	andeq	r3, r1, ip, lsr #25
   13abc:	andeq	r3, r1, r0, ror #25
   13ac0:	andeq	r3, r1, r0, lsl sp
   13ac4:	andeq	r3, r1, r0, asr #26
   13ac8:	andeq	r3, r1, r0, ror sp
   13acc:	andeq	r3, r1, r0, lsr #27
   13ad0:	ldrdeq	r3, [r1], -r4
   13ad4:	andeq	r3, r1, r8, lsr lr
   13ad8:	andeq	r3, r1, r8, ror #28
   13adc:	muleq	r1, r8, lr
   13ae0:	andeq	r3, r1, r4, lsr #30
   13ae4:	andeq	r3, r1, r4, asr pc
   13ae8:	andeq	r3, r1, r8, lsl #28
   13aec:	andeq	r3, r1, r8, asr #29
   13af0:	andeq	r3, r1, r4, lsl #31
   13af4:	add	r2, sp, #8
   13af8:	ldr	r1, [pc, #1212]	; 13fbc <table_cell_from_buffer@@Base+0x554>
   13afc:	mov	r0, r4
   13b00:	bl	11b44 <__isoc99_sscanf@plt>
   13b04:	cmp	r0, #1
   13b08:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13b0c:	ldr	r3, [sp, #8]
   13b10:	mov	r2, r5
   13b14:	mov	r1, r7
   13b18:	mov	r0, r6
   13b1c:	bl	13484 <table_set_int@@Base>
   13b20:	mov	r4, #0
   13b24:	b	13f18 <table_cell_from_buffer@@Base+0x4b0>
   13b28:	add	r2, sp, #8
   13b2c:	ldr	r1, [pc, #1164]	; 13fc0 <table_cell_from_buffer@@Base+0x558>
   13b30:	mov	r0, r4
   13b34:	bl	11b44 <__isoc99_sscanf@plt>
   13b38:	cmp	r0, #1
   13b3c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13b40:	ldr	r3, [sp, #8]
   13b44:	mov	r2, r5
   13b48:	mov	r1, r7
   13b4c:	mov	r0, r6
   13b50:	bl	134a8 <table_set_uint@@Base>
   13b54:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13b58:	add	r2, sp, #8
   13b5c:	ldr	r1, [pc, #1120]	; 13fc4 <table_cell_from_buffer@@Base+0x55c>
   13b60:	mov	r0, r4
   13b64:	bl	11b44 <__isoc99_sscanf@plt>
   13b68:	cmp	r0, #1
   13b6c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13b70:	ldrsb	r3, [sp, #8]
   13b74:	mov	r2, r5
   13b78:	mov	r1, r7
   13b7c:	mov	r0, r6
   13b80:	bl	134cc <table_set_int8@@Base>
   13b84:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13b88:	add	r2, sp, #8
   13b8c:	ldr	r1, [pc, #1076]	; 13fc8 <table_cell_from_buffer@@Base+0x560>
   13b90:	mov	r0, r4
   13b94:	bl	11b44 <__isoc99_sscanf@plt>
   13b98:	cmp	r0, #1
   13b9c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13ba0:	ldrb	r3, [sp, #8]
   13ba4:	mov	r2, r5
   13ba8:	mov	r1, r7
   13bac:	mov	r0, r6
   13bb0:	bl	134f0 <table_set_uint8@@Base>
   13bb4:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13bb8:	add	r2, sp, #8
   13bbc:	ldr	r1, [pc, #1032]	; 13fcc <table_cell_from_buffer@@Base+0x564>
   13bc0:	mov	r0, r4
   13bc4:	bl	11b44 <__isoc99_sscanf@plt>
   13bc8:	cmp	r0, #1
   13bcc:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13bd0:	ldrsh	r3, [sp, #8]
   13bd4:	mov	r2, r5
   13bd8:	mov	r1, r7
   13bdc:	mov	r0, r6
   13be0:	bl	13514 <table_set_int16@@Base>
   13be4:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13be8:	add	r2, sp, #8
   13bec:	ldr	r1, [pc, #988]	; 13fd0 <table_cell_from_buffer@@Base+0x568>
   13bf0:	mov	r0, r4
   13bf4:	bl	11b44 <__isoc99_sscanf@plt>
   13bf8:	cmp	r0, #1
   13bfc:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13c00:	ldrh	r3, [sp, #8]
   13c04:	mov	r2, r5
   13c08:	mov	r1, r7
   13c0c:	mov	r0, r6
   13c10:	bl	13538 <table_set_uint16@@Base>
   13c14:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13c18:	add	r2, sp, #8
   13c1c:	ldr	r1, [pc, #920]	; 13fbc <table_cell_from_buffer@@Base+0x554>
   13c20:	mov	r0, r4
   13c24:	bl	11b44 <__isoc99_sscanf@plt>
   13c28:	cmp	r0, #1
   13c2c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13c30:	ldr	r3, [sp, #8]
   13c34:	mov	r2, r5
   13c38:	mov	r1, r7
   13c3c:	mov	r0, r6
   13c40:	bl	1355c <table_set_int32@@Base>
   13c44:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13c48:	add	r2, sp, #8
   13c4c:	ldr	r1, [pc, #876]	; 13fc0 <table_cell_from_buffer@@Base+0x558>
   13c50:	mov	r0, r4
   13c54:	bl	11b44 <__isoc99_sscanf@plt>
   13c58:	cmp	r0, #1
   13c5c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13c60:	ldr	r3, [sp, #8]
   13c64:	mov	r2, r5
   13c68:	mov	r1, r7
   13c6c:	mov	r0, r6
   13c70:	bl	13580 <table_set_uint32@@Base>
   13c74:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13c78:	add	r2, sp, #8
   13c7c:	ldr	r1, [pc, #848]	; 13fd4 <table_cell_from_buffer@@Base+0x56c>
   13c80:	mov	r0, r4
   13c84:	bl	11b44 <__isoc99_sscanf@plt>
   13c88:	cmp	r0, #1
   13c8c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13c90:	ldrd	r2, [sp, #8]
   13c94:	mov	r1, r7
   13c98:	mov	r0, r6
   13c9c:	strd	r2, [sp]
   13ca0:	mov	r2, r5
   13ca4:	bl	135a4 <table_set_int64@@Base>
   13ca8:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13cac:	add	r2, sp, #8
   13cb0:	ldr	r1, [pc, #800]	; 13fd8 <table_cell_from_buffer@@Base+0x570>
   13cb4:	mov	r0, r4
   13cb8:	bl	11b44 <__isoc99_sscanf@plt>
   13cbc:	cmp	r0, #1
   13cc0:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13cc4:	ldrd	r2, [sp, #8]
   13cc8:	mov	r1, r7
   13ccc:	mov	r0, r6
   13cd0:	strd	r2, [sp]
   13cd4:	mov	r2, r5
   13cd8:	bl	135c0 <table_set_uint64@@Base>
   13cdc:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13ce0:	add	r2, sp, #8
   13ce4:	ldr	r1, [pc, #736]	; 13fcc <table_cell_from_buffer@@Base+0x564>
   13ce8:	mov	r0, r4
   13cec:	bl	11b44 <__isoc99_sscanf@plt>
   13cf0:	cmp	r0, #1
   13cf4:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13cf8:	ldrsh	r3, [sp, #8]
   13cfc:	mov	r2, r5
   13d00:	mov	r1, r7
   13d04:	mov	r0, r6
   13d08:	bl	135dc <table_set_short@@Base>
   13d0c:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13d10:	add	r2, sp, #8
   13d14:	ldr	r1, [pc, #692]	; 13fd0 <table_cell_from_buffer@@Base+0x568>
   13d18:	mov	r0, r4
   13d1c:	bl	11b44 <__isoc99_sscanf@plt>
   13d20:	cmp	r0, #1
   13d24:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13d28:	ldrh	r3, [sp, #8]
   13d2c:	mov	r2, r5
   13d30:	mov	r1, r7
   13d34:	mov	r0, r6
   13d38:	bl	13600 <table_set_ushort@@Base>
   13d3c:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13d40:	add	r2, sp, #8
   13d44:	ldr	r1, [pc, #656]	; 13fdc <table_cell_from_buffer@@Base+0x574>
   13d48:	mov	r0, r4
   13d4c:	bl	11b44 <__isoc99_sscanf@plt>
   13d50:	cmp	r0, #1
   13d54:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13d58:	ldr	r3, [sp, #8]
   13d5c:	mov	r2, r5
   13d60:	mov	r1, r7
   13d64:	mov	r0, r6
   13d68:	bl	13624 <table_set_long@@Base>
   13d6c:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13d70:	add	r2, sp, #8
   13d74:	ldr	r1, [pc, #612]	; 13fe0 <table_cell_from_buffer@@Base+0x578>
   13d78:	mov	r0, r4
   13d7c:	bl	11b44 <__isoc99_sscanf@plt>
   13d80:	cmp	r0, #1
   13d84:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13d88:	ldr	r3, [sp, #8]
   13d8c:	mov	r2, r5
   13d90:	mov	r1, r7
   13d94:	mov	r0, r6
   13d98:	bl	13648 <table_set_ulong@@Base>
   13d9c:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13da0:	add	r2, sp, #8
   13da4:	ldr	r1, [pc, #552]	; 13fd4 <table_cell_from_buffer@@Base+0x56c>
   13da8:	mov	r0, r4
   13dac:	bl	11b44 <__isoc99_sscanf@plt>
   13db0:	cmp	r0, #1
   13db4:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13db8:	ldrd	r2, [sp, #8]
   13dbc:	mov	r1, r7
   13dc0:	mov	r0, r6
   13dc4:	strd	r2, [sp]
   13dc8:	mov	r2, r5
   13dcc:	bl	1366c <table_set_llong@@Base>
   13dd0:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13dd4:	add	r2, sp, #8
   13dd8:	ldr	r1, [pc, #504]	; 13fd8 <table_cell_from_buffer@@Base+0x570>
   13ddc:	mov	r0, r4
   13de0:	bl	11b44 <__isoc99_sscanf@plt>
   13de4:	cmp	r0, #1
   13de8:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13dec:	ldrd	r2, [sp, #8]
   13df0:	mov	r1, r7
   13df4:	mov	r0, r6
   13df8:	strd	r2, [sp]
   13dfc:	mov	r2, r5
   13e00:	bl	13688 <table_set_ullong@@Base>
   13e04:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13e08:	add	r2, sp, #8
   13e0c:	ldr	r1, [pc, #464]	; 13fe4 <table_cell_from_buffer@@Base+0x57c>
   13e10:	mov	r0, r4
   13e14:	bl	11b44 <__isoc99_sscanf@plt>
   13e18:	cmp	r0, #1
   13e1c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13e20:	add	r3, sp, #8
   13e24:	mov	r2, r5
   13e28:	mov	r1, r7
   13e2c:	mov	r0, r6
   13e30:	bl	13704 <table_set_string@@Base>
   13e34:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13e38:	add	r2, sp, #8
   13e3c:	ldr	r1, [pc, #420]	; 13fe8 <table_cell_from_buffer@@Base+0x580>
   13e40:	mov	r0, r4
   13e44:	bl	11b44 <__isoc99_sscanf@plt>
   13e48:	cmp	r0, #1
   13e4c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13e50:	vldr	s0, [sp, #8]
   13e54:	mov	r2, r5
   13e58:	mov	r1, r7
   13e5c:	mov	r0, r6
   13e60:	bl	136a4 <table_set_float@@Base>
   13e64:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13e68:	add	r2, sp, #8
   13e6c:	ldr	r1, [pc, #376]	; 13fec <table_cell_from_buffer@@Base+0x584>
   13e70:	mov	r0, r4
   13e74:	bl	11b44 <__isoc99_sscanf@plt>
   13e78:	cmp	r0, #1
   13e7c:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13e80:	vldr	d0, [sp, #8]
   13e84:	mov	r2, r5
   13e88:	mov	r1, r7
   13e8c:	mov	r0, r6
   13e90:	bl	136c4 <table_set_double@@Base>
   13e94:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13e98:	add	r2, sp, #8
   13e9c:	ldr	r1, [pc, #332]	; 13ff0 <table_cell_from_buffer@@Base+0x588>
   13ea0:	mov	r0, r4
   13ea4:	bl	11b44 <__isoc99_sscanf@plt>
   13ea8:	cmp	r0, #1
   13eac:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13eb0:	vldr	d0, [sp, #8]
   13eb4:	mov	r2, r5
   13eb8:	mov	r1, r7
   13ebc:	mov	r0, r6
   13ec0:	bl	136e4 <table_set_ldouble@@Base>
   13ec4:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13ec8:	add	r2, sp, #8
   13ecc:	ldr	r1, [pc, #232]	; 13fbc <table_cell_from_buffer@@Base+0x554>
   13ed0:	mov	r0, r4
   13ed4:	bl	11b44 <__isoc99_sscanf@plt>
   13ed8:	cmp	r0, #1
   13edc:	mov	r3, r0
   13ee0:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13ee4:	ldr	r4, [sp, #8]
   13ee8:	cmp	r4, #0
   13eec:	beq	13f04 <table_cell_from_buffer@@Base+0x49c>
   13ef0:	mov	r2, r5
   13ef4:	mov	r1, r7
   13ef8:	mov	r0, r6
   13efc:	bl	13460 <table_set_bool@@Base>
   13f00:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13f04:	mov	r3, r4
   13f08:	mov	r2, r5
   13f0c:	mov	r1, r7
   13f10:	mov	r0, r6
   13f14:	bl	13460 <table_set_bool@@Base>
   13f18:	mov	r0, r4
   13f1c:	add	sp, sp, #268	; 0x10c
   13f20:	pop	{r4, r5, r6, r7, pc}
   13f24:	add	r2, sp, #8
   13f28:	ldr	r1, [pc, #196]	; 13ff4 <table_cell_from_buffer@@Base+0x58c>
   13f2c:	mov	r0, r4
   13f30:	bl	11b44 <__isoc99_sscanf@plt>
   13f34:	cmp	r0, #1
   13f38:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13f3c:	ldrb	r3, [sp, #8]
   13f40:	mov	r2, r5
   13f44:	mov	r1, r7
   13f48:	mov	r0, r6
   13f4c:	bl	1371c <table_set_char@@Base>
   13f50:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13f54:	add	r2, sp, #8
   13f58:	ldr	r1, [pc, #148]	; 13ff4 <table_cell_from_buffer@@Base+0x58c>
   13f5c:	mov	r0, r4
   13f60:	bl	11b44 <__isoc99_sscanf@plt>
   13f64:	cmp	r0, #1
   13f68:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13f6c:	ldrb	r3, [sp, #8]
   13f70:	mov	r2, r5
   13f74:	mov	r1, r7
   13f78:	mov	r0, r6
   13f7c:	bl	13740 <table_set_uchar@@Base>
   13f80:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13f84:	add	r2, sp, #8
   13f88:	ldr	r1, [pc, #104]	; 13ff8 <table_cell_from_buffer@@Base+0x590>
   13f8c:	mov	r0, r4
   13f90:	bl	11b44 <__isoc99_sscanf@plt>
   13f94:	cmp	r0, #1
   13f98:	bne	13fb4 <table_cell_from_buffer@@Base+0x54c>
   13f9c:	ldr	r3, [sp, #8]
   13fa0:	mov	r2, r5
   13fa4:	mov	r1, r7
   13fa8:	mov	r0, r6
   13fac:	bl	13764 <table_set_ptr@@Base>
   13fb0:	b	13b20 <table_cell_from_buffer@@Base+0xb8>
   13fb4:	mvn	r4, #0
   13fb8:	b	13f18 <table_cell_from_buffer@@Base+0x4b0>
   13fbc:	andeq	r4, r1, r8, lsl #9
   13fc0:	andeq	r4, r1, fp, lsl #9
   13fc4:			; <UNDEFINED> instruction: 0x000144bc
   13fc8:	andeq	r4, r1, r1, asr #9
   13fcc:	muleq	r1, r8, r4
   13fd0:	muleq	r1, ip, r4
   13fd4:	andeq	r4, r1, lr, lsl #9
   13fd8:	muleq	r1, r3, r4
   13fdc:	andeq	r4, r1, r0, lsr #9
   13fe0:	andeq	r4, r1, r4, lsr #9
   13fe4:	andeq	r4, r1, r8, lsr #9
   13fe8:	andeq	r4, r1, fp, lsr #9
   13fec:	andeq	r4, r1, lr, lsr #9
   13ff0:			; <UNDEFINED> instruction: 0x000144b2
   13ff4:			; <UNDEFINED> instruction: 0x000144b6
   13ff8:			; <UNDEFINED> instruction: 0x000144b9

00013ffc <table_get_cell_ptr@@Base>:
   13ffc:	push	{r4, lr}
   14000:	mov	r4, r2
   14004:	bl	13164 <table_get_row_ptr@@Base>
   14008:	ldr	r0, [r0]
   1400c:	add	r0, r0, r4, lsl #2
   14010:	pop	{r4, pc}

00014014 <table_cell_init@@Base>:
   14014:	push	{r4, lr}
   14018:	bl	13ffc <table_get_cell_ptr@@Base>
   1401c:	mov	r3, #0
   14020:	str	r3, [r0]
   14024:	pop	{r4, pc}

00014028 <table_cell_destroy@@Base>:
   14028:	push	{r4, r5, r6, lr}
   1402c:	mov	r6, r1
   14030:	mov	r1, r2
   14034:	mov	r5, r0
   14038:	mov	r4, r2
   1403c:	bl	12740 <table_get_column_data_type@@Base>
   14040:	cmp	r0, #23
   14044:	popeq	{r4, r5, r6, pc}
   14048:	mov	r2, r4
   1404c:	mov	r1, r6
   14050:	mov	r0, r5
   14054:	bl	13ffc <table_get_cell_ptr@@Base>
   14058:	ldr	r0, [r0]
   1405c:	cmp	r0, #0
   14060:	popeq	{r4, r5, r6, pc}
   14064:	pop	{r4, r5, r6, lr}
   14068:	b	11ad8 <free@plt>

0001406c <table_cell_nullify@@Base>:
   1406c:	push	{r4, lr}
   14070:	bl	13ffc <table_get_cell_ptr@@Base>
   14074:	mov	r4, r0
   14078:	ldr	r0, [r0]
   1407c:	cmp	r0, #0
   14080:	beq	14090 <table_cell_nullify@@Base+0x24>
   14084:	bl	11ad8 <free@plt>
   14088:	mov	r3, #0
   1408c:	str	r3, [r4]
   14090:	mov	r0, #0
   14094:	pop	{r4, pc}
   14098:	subs	r2, r1, #1
   1409c:	bxeq	lr
   140a0:	bcc	14278 <table_cell_nullify@@Base+0x20c>
   140a4:	cmp	r0, r1
   140a8:	bls	1425c <table_cell_nullify@@Base+0x1f0>
   140ac:	tst	r1, r2
   140b0:	beq	14268 <table_cell_nullify@@Base+0x1fc>
   140b4:	clz	r3, r0
   140b8:	clz	r2, r1
   140bc:	sub	r3, r2, r3
   140c0:	rsbs	r3, r3, #31
   140c4:	addne	r3, r3, r3, lsl #1
   140c8:	mov	r2, #0
   140cc:	addne	pc, pc, r3, lsl #2
   140d0:	nop			; (mov r0, r0)
   140d4:	cmp	r0, r1, lsl #31
   140d8:	adc	r2, r2, r2
   140dc:	subcs	r0, r0, r1, lsl #31
   140e0:	cmp	r0, r1, lsl #30
   140e4:	adc	r2, r2, r2
   140e8:	subcs	r0, r0, r1, lsl #30
   140ec:	cmp	r0, r1, lsl #29
   140f0:	adc	r2, r2, r2
   140f4:	subcs	r0, r0, r1, lsl #29
   140f8:	cmp	r0, r1, lsl #28
   140fc:	adc	r2, r2, r2
   14100:	subcs	r0, r0, r1, lsl #28
   14104:	cmp	r0, r1, lsl #27
   14108:	adc	r2, r2, r2
   1410c:	subcs	r0, r0, r1, lsl #27
   14110:	cmp	r0, r1, lsl #26
   14114:	adc	r2, r2, r2
   14118:	subcs	r0, r0, r1, lsl #26
   1411c:	cmp	r0, r1, lsl #25
   14120:	adc	r2, r2, r2
   14124:	subcs	r0, r0, r1, lsl #25
   14128:	cmp	r0, r1, lsl #24
   1412c:	adc	r2, r2, r2
   14130:	subcs	r0, r0, r1, lsl #24
   14134:	cmp	r0, r1, lsl #23
   14138:	adc	r2, r2, r2
   1413c:	subcs	r0, r0, r1, lsl #23
   14140:	cmp	r0, r1, lsl #22
   14144:	adc	r2, r2, r2
   14148:	subcs	r0, r0, r1, lsl #22
   1414c:	cmp	r0, r1, lsl #21
   14150:	adc	r2, r2, r2
   14154:	subcs	r0, r0, r1, lsl #21
   14158:	cmp	r0, r1, lsl #20
   1415c:	adc	r2, r2, r2
   14160:	subcs	r0, r0, r1, lsl #20
   14164:	cmp	r0, r1, lsl #19
   14168:	adc	r2, r2, r2
   1416c:	subcs	r0, r0, r1, lsl #19
   14170:	cmp	r0, r1, lsl #18
   14174:	adc	r2, r2, r2
   14178:	subcs	r0, r0, r1, lsl #18
   1417c:	cmp	r0, r1, lsl #17
   14180:	adc	r2, r2, r2
   14184:	subcs	r0, r0, r1, lsl #17
   14188:	cmp	r0, r1, lsl #16
   1418c:	adc	r2, r2, r2
   14190:	subcs	r0, r0, r1, lsl #16
   14194:	cmp	r0, r1, lsl #15
   14198:	adc	r2, r2, r2
   1419c:	subcs	r0, r0, r1, lsl #15
   141a0:	cmp	r0, r1, lsl #14
   141a4:	adc	r2, r2, r2
   141a8:	subcs	r0, r0, r1, lsl #14
   141ac:	cmp	r0, r1, lsl #13
   141b0:	adc	r2, r2, r2
   141b4:	subcs	r0, r0, r1, lsl #13
   141b8:	cmp	r0, r1, lsl #12
   141bc:	adc	r2, r2, r2
   141c0:	subcs	r0, r0, r1, lsl #12
   141c4:	cmp	r0, r1, lsl #11
   141c8:	adc	r2, r2, r2
   141cc:	subcs	r0, r0, r1, lsl #11
   141d0:	cmp	r0, r1, lsl #10
   141d4:	adc	r2, r2, r2
   141d8:	subcs	r0, r0, r1, lsl #10
   141dc:	cmp	r0, r1, lsl #9
   141e0:	adc	r2, r2, r2
   141e4:	subcs	r0, r0, r1, lsl #9
   141e8:	cmp	r0, r1, lsl #8
   141ec:	adc	r2, r2, r2
   141f0:	subcs	r0, r0, r1, lsl #8
   141f4:	cmp	r0, r1, lsl #7
   141f8:	adc	r2, r2, r2
   141fc:	subcs	r0, r0, r1, lsl #7
   14200:	cmp	r0, r1, lsl #6
   14204:	adc	r2, r2, r2
   14208:	subcs	r0, r0, r1, lsl #6
   1420c:	cmp	r0, r1, lsl #5
   14210:	adc	r2, r2, r2
   14214:	subcs	r0, r0, r1, lsl #5
   14218:	cmp	r0, r1, lsl #4
   1421c:	adc	r2, r2, r2
   14220:	subcs	r0, r0, r1, lsl #4
   14224:	cmp	r0, r1, lsl #3
   14228:	adc	r2, r2, r2
   1422c:	subcs	r0, r0, r1, lsl #3
   14230:	cmp	r0, r1, lsl #2
   14234:	adc	r2, r2, r2
   14238:	subcs	r0, r0, r1, lsl #2
   1423c:	cmp	r0, r1, lsl #1
   14240:	adc	r2, r2, r2
   14244:	subcs	r0, r0, r1, lsl #1
   14248:	cmp	r0, r1
   1424c:	adc	r2, r2, r2
   14250:	subcs	r0, r0, r1
   14254:	mov	r0, r2
   14258:	bx	lr
   1425c:	moveq	r0, #1
   14260:	movne	r0, #0
   14264:	bx	lr
   14268:	clz	r2, r1
   1426c:	rsb	r2, r2, #31
   14270:	lsr	r0, r0, r2
   14274:	bx	lr
   14278:	cmp	r0, #0
   1427c:	mvnne	r0, #0
   14280:	b	142a4 <table_cell_nullify@@Base+0x238>
   14284:	cmp	r1, #0
   14288:	beq	14278 <table_cell_nullify@@Base+0x20c>
   1428c:	push	{r0, r1, lr}
   14290:	bl	14098 <table_cell_nullify@@Base+0x2c>
   14294:	pop	{r1, r2, lr}
   14298:	mul	r3, r2, r0
   1429c:	sub	r1, r1, r3
   142a0:	bx	lr
   142a4:	push	{r1, lr}
   142a8:	mov	r0, #8
   142ac:	bl	11ab4 <raise@plt>
   142b0:	pop	{r1, pc}

000142b4 <__libc_csu_init@@Base>:
   142b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142b8:	mov	r7, r0
   142bc:	ldr	r6, [pc, #72]	; 1430c <__libc_csu_init@@Base+0x58>
   142c0:	ldr	r5, [pc, #72]	; 14310 <__libc_csu_init@@Base+0x5c>
   142c4:	add	r6, pc, r6
   142c8:	add	r5, pc, r5
   142cc:	sub	r6, r6, r5
   142d0:	mov	r8, r1
   142d4:	mov	r9, r2
   142d8:	bl	11a94 <raise@plt-0x20>
   142dc:	asrs	r6, r6, #2
   142e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   142e4:	mov	r4, #0
   142e8:	add	r4, r4, #1
   142ec:	ldr	r3, [r5], #4
   142f0:	mov	r2, r9
   142f4:	mov	r1, r8
   142f8:	mov	r0, r7
   142fc:	blx	r3
   14300:	cmp	r6, r4
   14304:	bne	142e8 <__libc_csu_init@@Base+0x34>
   14308:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1430c:	andeq	r0, r1, r4, asr #24
   14310:	andeq	r0, r1, ip, lsr ip

00014314 <__libc_csu_fini@@Base>:
   14314:	bx	lr

Disassembly of section .fini:

00014318 <.fini>:
   14318:	push	{r3, lr}
   1431c:	pop	{r3, pc}
