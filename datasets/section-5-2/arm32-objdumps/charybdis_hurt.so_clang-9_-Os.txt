
../repos/charybdis/extensions/.libs/hurt.so:     file format elf32-littlearm


Disassembly of section .init:

00000a58 <_init>:
 a58:	push	{r3, lr}
 a5c:	bl	bf8 <call_weak_fn>
 a60:	pop	{r3, pc}

Disassembly of section .plt:

00000a64 <.plt>:
 a64:	push	{lr}		; (str lr, [sp, #-4]!)
 a68:	ldr	lr, [pc, #4]	; a74 <.plt+0x10>
 a6c:	add	lr, pc, lr
 a70:	ldr	pc, [lr, #8]!
 a74:	.word	0x0001258c

00000a78 <calloc@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1420]!	; 0x58c

00000a84 <get_client_name@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1412]!	; 0x584

00000a90 <rb_current_time@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1404]!	; 0x57c

00000a9c <rb_event_add@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1396]!	; 0x574

00000aa8 <__cxa_finalize@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1388]!	; 0x56c

00000ab4 <sendto_one@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1380]!	; 0x564

00000ac0 <rb_event_delete@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1372]!	; 0x55c

00000acc <free@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1364]!	; 0x554

00000ad8 <rb_strcasecmp@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1356]!	; 0x54c

00000ae4 <rb_outofmemory@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1348]!	; 0x544

00000af0 <sendto_realops_snomask@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1340]!	; 0x53c

00000afc <get_oper_name@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #73728	; 0x12000
 b04:	ldr	pc, [ip, #1332]!	; 0x534

00000b08 <rb_free_rb_dlink_node@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #73728	; 0x12000
 b10:	ldr	pc, [ip, #1324]!	; 0x52c

00000b14 <strcpy@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #73728	; 0x12000
 b1c:	ldr	pc, [ip, #1316]!	; 0x524

00000b20 <sendto_server@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #73728	; 0x12000
 b28:	ldr	pc, [ip, #1308]!	; 0x51c

00000b2c <malloc@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #73728	; 0x12000
 b34:	ldr	pc, [ip, #1300]!	; 0x514

00000b38 <__gmon_start__@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1292]!	; 0x50c

00000b44 <rb_make_rb_dlink_node@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1284]!	; 0x504

00000b50 <sendto_one_numeric@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1276]!	; 0x4fc

00000b5c <strlen@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1268]!	; 0x4f4

00000b68 <strchr@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1260]!	; 0x4ec

00000b74 <clean_nick@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1252]!	; 0x4e4

00000b80 <match@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1244]!	; 0x4dc

00000b8c <find_person@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1236]!	; 0x4d4

00000b98 <valid_temp_time@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1228]!	; 0x4cc

00000ba4 <sendto_one_notice@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1220]!	; 0x4c4

00000bb0 <atoi@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1212]!	; 0x4bc

00000bbc <find_named_person@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #1204]!	; 0x4b4

00000bc8 <exit_client@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #1196]!	; 0x4ac

00000bd4 <privilegeset_in_set@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1188]!	; 0x4a4

00000be0 <strncmp@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1180]!	; 0x49c

00000bec <__assert_fail@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1172]!	; 0x494

Disassembly of section .text:

00000bf8 <call_weak_fn>:
     bf8:	ldr	r3, [pc, #20]	; c14 <call_weak_fn+0x1c>
     bfc:	ldr	r2, [pc, #20]	; c18 <call_weak_fn+0x20>
     c00:	add	r3, pc, r3
     c04:	ldr	r2, [r3, r2]
     c08:	cmp	r2, #0
     c0c:	bxeq	lr
     c10:	b	b38 <__gmon_start__@plt>
     c14:	.word	0x000123f8
     c18:	.word	0x000000a4

00000c1c <deregister_tm_clones>:
     c1c:	ldr	r0, [pc, #44]	; c50 <deregister_tm_clones+0x34>
     c20:	ldr	r3, [pc, #44]	; c54 <deregister_tm_clones+0x38>
     c24:	add	r0, pc, r0
     c28:	add	r3, pc, r3
     c2c:	cmp	r3, r0
     c30:	ldr	r3, [pc, #32]	; c58 <deregister_tm_clones+0x3c>
     c34:	add	r3, pc, r3
     c38:	bxeq	lr
     c3c:	ldr	r2, [pc, #24]	; c5c <deregister_tm_clones+0x40>
     c40:	ldr	r3, [r3, r2]
     c44:	cmp	r3, #0
     c48:	bxeq	lr
     c4c:	bx	r3
     c50:	.word	0x00012598
     c54:	.word	0x00012594
     c58:	.word	0x000123c4
     c5c:	.word	0x00000094

00000c60 <register_tm_clones>:
     c60:	ldr	r0, [pc, #56]	; ca0 <register_tm_clones+0x40>
     c64:	ldr	r3, [pc, #56]	; ca4 <register_tm_clones+0x44>
     c68:	add	r0, pc, r0
     c6c:	add	r3, pc, r3
     c70:	sub	r1, r3, r0
     c74:	ldr	r3, [pc, #44]	; ca8 <register_tm_clones+0x48>
     c78:	asr	r1, r1, #2
     c7c:	add	r3, pc, r3
     c80:	add	r1, r1, r1, lsr #31
     c84:	asrs	r1, r1, #1
     c88:	bxeq	lr
     c8c:	ldr	r2, [pc, #24]	; cac <register_tm_clones+0x4c>
     c90:	ldr	r3, [r3, r2]
     c94:	cmp	r3, #0
     c98:	bxeq	lr
     c9c:	bx	r3
     ca0:	.word	0x00012554
     ca4:	.word	0x00012550
     ca8:	.word	0x0001237c
     cac:	.word	0x000000a8

00000cb0 <__do_global_dtors_aux>:
     cb0:	ldr	r3, [pc, #76]	; d04 <__do_global_dtors_aux+0x54>
     cb4:	ldr	r2, [pc, #76]	; d08 <__do_global_dtors_aux+0x58>
     cb8:	add	r3, pc, r3
     cbc:	add	r2, pc, r2
     cc0:	ldrb	r3, [r3]
     cc4:	cmp	r3, #0
     cc8:	bxne	lr
     ccc:	ldr	r3, [pc, #56]	; d0c <__do_global_dtors_aux+0x5c>
     cd0:	push	{r4, lr}
     cd4:	ldr	r3, [r2, r3]
     cd8:	cmp	r3, #0
     cdc:	beq	cec <__do_global_dtors_aux+0x3c>
     ce0:	ldr	r3, [pc, #40]	; d10 <__do_global_dtors_aux+0x60>
     ce4:	ldr	r0, [pc, r3]
     ce8:	bl	aa8 <__cxa_finalize@plt>
     cec:	bl	c1c <deregister_tm_clones>
     cf0:	ldr	r3, [pc, #28]	; d14 <__do_global_dtors_aux+0x64>
     cf4:	mov	r2, #1
     cf8:	add	r3, pc, r3
     cfc:	strb	r2, [r3]
     d00:	pop	{r4, pc}
     d04:	.word	0x00012504
     d08:	.word	0x0001233c
     d0c:	.word	0x0000008c
     d10:	.word	0x000123c8
     d14:	.word	0x000124c4

00000d18 <frame_dummy>:
     d18:	b	c60 <register_tm_clones>

00000d1c <me_hurt>:
     d1c:	push	{r4, r5, r6, sl, fp, lr}
     d20:	add	fp, sp, #16
     d24:	sub	sp, sp, #16
     d28:	cmp	r3, #4
     d2c:	blt	d74 <me_hurt+0x58>
     d30:	ldrh	r0, [r2, #80]	; 0x50
     d34:	mov	r5, r2
     d38:	cmp	r0, #64	; 0x40
     d3c:	bne	d74 <me_hurt+0x58>
     d40:	ldr	r0, [r5, #24]
     d44:	cmp	r0, #0
     d48:	beq	d74 <me_hurt+0x58>
     d4c:	ldr	r6, [fp, #8]
     d50:	ldr	r0, [r6, #4]
     d54:	bl	bb0 <atoi@plt>
     d58:	cmp	r0, #1
     d5c:	blt	d74 <me_hurt+0x58>
     d60:	mov	r4, r0
     d64:	ldr	r0, [r6, #8]
     d68:	bl	1bf8 <hurt_find>
     d6c:	cmp	r0, #0
     d70:	beq	d7c <me_hurt+0x60>
     d74:	sub	sp, fp, #16
     d78:	pop	{r4, r5, r6, sl, fp, pc}
     d7c:	ldr	r0, [r6, #12]
     d80:	cmp	r0, #0
     d84:	beq	d74 <me_hurt+0x58>
     d88:	ldrb	r0, [r0]
     d8c:	cmp	r0, #0
     d90:	beq	d74 <me_hurt+0x58>
     d94:	mov	r0, r5
     d98:	bl	afc <get_oper_name@plt>
     d9c:	movw	r2, #34953	; 0x8889
     da0:	mov	r3, r0
     da4:	ldr	r0, [r6, #8]
     da8:	ldr	r1, [r6, #12]
     dac:	movt	r2, #34952	; 0x8888
     db0:	umull	r2, r5, r4, r2
     db4:	lsr	r2, r5, #5
     db8:	stm	sp, {r0, r2}
     dbc:	str	r1, [sp, #8]
     dc0:	mov	r0, #256	; 0x100
     dc4:	mov	r1, #0
     dc8:	ldr	r2, [pc, #192]	; e90 <me_hurt+0x174>
     dcc:	add	r2, pc, r2
     dd0:	bl	af0 <sendto_realops_snomask@plt>
     dd4:	ldr	r1, [r6, #8]
     dd8:	ldr	r2, [r6, #12]
     ddc:	mov	r0, r4
     de0:	bl	1c48 <hurt_new>
     de4:	mov	r4, r0
     de8:	bl	b44 <rb_make_rb_dlink_node@plt>
     dec:	cmp	r4, #0
     df0:	beq	e50 <me_hurt+0x134>
     df4:	cmp	r0, #0
     df8:	beq	e70 <me_hurt+0x154>
     dfc:	mov	r1, #0
     e00:	str	r1, [r0, #4]
     e04:	str	r4, [r0]
     e08:	ldr	r1, [pc, #132]	; e94 <me_hurt+0x178>
     e0c:	ldr	r1, [pc, r1]
     e10:	ldr	r2, [r1]
     e14:	cmp	r2, #0
     e18:	str	r2, [r0, #8]
     e1c:	beq	e2c <me_hurt+0x110>
     e20:	add	r2, r2, #4
     e24:	str	r0, [r2]
     e28:	b	e3c <me_hurt+0x120>
     e2c:	mov	r2, r1
     e30:	ldr	r3, [r2, #4]!
     e34:	cmp	r3, #0
     e38:	streq	r0, [r2]
     e3c:	str	r0, [r1]
     e40:	ldr	r0, [r1, #8]
     e44:	add	r0, r0, #1
     e48:	str	r0, [r1, #8]
     e4c:	b	d74 <me_hurt+0x58>
     e50:	ldr	r0, [pc, #64]	; e98 <me_hurt+0x17c>
     e54:	ldr	r1, [pc, #64]	; e9c <me_hurt+0x180>
     e58:	ldr	r3, [pc, #64]	; ea0 <me_hurt+0x184>
     e5c:	mov	r2, #143	; 0x8f
     e60:	add	r0, pc, r0
     e64:	add	r1, pc, r1
     e68:	add	r3, pc, r3
     e6c:	bl	bec <__assert_fail@plt>
     e70:	ldr	r0, [pc, #44]	; ea4 <me_hurt+0x188>
     e74:	ldr	r1, [pc, #44]	; ea8 <me_hurt+0x18c>
     e78:	ldr	r3, [pc, #44]	; eac <me_hurt+0x190>
     e7c:	mov	r2, #144	; 0x90
     e80:	add	r0, pc, r0
     e84:	add	r1, pc, r1
     e88:	add	r3, pc, r3
     e8c:	bl	bec <__assert_fail@plt>
     e90:	.word	0x0000132c
     e94:	.word	0x0001227c
     e98:	.word	0x00001191
     e9c:	.word	0x00001140
     ea0:	.word	0x000012c7
     ea4:	.word	0x000011a9
     ea8:	.word	0x00001120
     eac:	.word	0x000012a7

00000eb0 <mo_hurt>:
     eb0:	push	{r4, r5, r6, r7, fp, lr}
     eb4:	add	fp, sp, #16
     eb8:	sub	sp, sp, #24
     ebc:	ldr	r0, [r2, #24]
     ec0:	mov	r4, r2
     ec4:	cmp	r0, #0
     ec8:	beq	f04 <mo_hurt+0x54>
     ecc:	ldr	r0, [r0, #36]	; 0x24
     ed0:	cmp	r0, #0
     ed4:	beq	f04 <mo_hurt+0x54>
     ed8:	ldr	r6, [fp, #8]
     edc:	ldr	r1, [pc, #720]	; 11b4 <mo_hurt+0x304>
     ee0:	mov	r5, r3
     ee4:	add	r1, pc, r1
     ee8:	bl	bd4 <privilegeset_in_set@plt>
     eec:	cmp	r0, #0
     ef0:	beq	f04 <mo_hurt+0x54>
     ef4:	cmp	r5, #3
     ef8:	bne	f38 <mo_hurt+0x88>
     efc:	ldmib	r6, {r5, r6}
     f00:	b	f60 <mo_hurt+0xb0>
     f04:	ldr	r0, [pc, #712]	; 11d4 <mo_hurt+0x324>
     f08:	add	r3, r4, #88	; 0x58
     f0c:	add	r0, pc, r0
     f10:	str	r0, [sp]
     f14:	ldr	r0, [pc, #700]	; 11d8 <mo_hurt+0x328>
     f18:	ldr	r0, [pc, r0]
     f1c:	ldr	r1, [pc, #696]	; 11dc <mo_hurt+0x32c>
     f20:	add	r2, r0, #88	; 0x58
     f24:	add	r1, pc, r1
     f28:	mov	r0, r4
     f2c:	bl	ab4 <sendto_one@plt>
     f30:	sub	sp, fp, #16
     f34:	pop	{r4, r5, r6, r7, fp, pc}
     f38:	ldmib	r6, {r0, r5, r6}
     f3c:	cmp	r0, #0
     f40:	beq	f60 <mo_hurt+0xb0>
     f44:	bl	b98 <valid_temp_time@plt>
     f48:	mov	r7, r0
     f4c:	cmp	r0, #0
     f50:	bgt	f64 <mo_hurt+0xb4>
     f54:	ldr	r1, [pc, #608]	; 11bc <mo_hurt+0x30c>
     f58:	add	r1, pc, r1
     f5c:	b	1008 <mo_hurt+0x158>
     f60:	movw	r7, #10080	; 0x2760
     f64:	cmp	r6, #0
     f68:	beq	1000 <mo_hurt+0x150>
     f6c:	ldrb	r0, [r6]
     f70:	cmp	r0, #0
     f74:	beq	1000 <mo_hurt+0x150>
     f78:	mov	r0, r5
     f7c:	mov	r1, #46	; 0x2e
     f80:	bl	b68 <strchr@plt>
     f84:	cmp	r0, #0
     f88:	bne	fa0 <mo_hurt+0xf0>
     f8c:	mov	r0, r5
     f90:	mov	r1, #58	; 0x3a
     f94:	bl	b68 <strchr@plt>
     f98:	cmp	r0, #0
     f9c:	beq	1018 <mo_hurt+0x168>
     fa0:	ldr	r1, [pc, #536]	; 11c0 <mo_hurt+0x310>
     fa4:	mov	r0, r5
     fa8:	mov	r2, #2
     fac:	add	r1, pc, r1
     fb0:	bl	be0 <strncmp@plt>
     fb4:	cmp	r0, #0
     fb8:	mov	r1, #33	; 0x21
     fbc:	addeq	r5, r5, #2
     fc0:	mov	r0, r5
     fc4:	bl	b68 <strchr@plt>
     fc8:	cmp	r0, #0
     fcc:	bne	fe4 <mo_hurt+0x134>
     fd0:	mov	r0, r5
     fd4:	mov	r1, #64	; 0x40
     fd8:	bl	b68 <strchr@plt>
     fdc:	cmp	r0, #0
     fe0:	beq	102c <mo_hurt+0x17c>
     fe4:	ldr	r1, [pc, #504]	; 11e4 <mo_hurt+0x334>
     fe8:	mov	r0, r4
     fec:	mov	r2, r5
     ff0:	add	r1, pc, r1
     ff4:	sub	sp, fp, #16
     ff8:	pop	{r4, r5, r6, r7, fp, lr}
     ffc:	b	ba4 <sendto_one_notice@plt>
    1000:	ldr	r1, [pc, #432]	; 11b8 <mo_hurt+0x308>
    1004:	add	r1, pc, r1
    1008:	mov	r0, r4
    100c:	sub	sp, fp, #16
    1010:	pop	{r4, r5, r6, r7, fp, lr}
    1014:	b	ba4 <sendto_one_notice@plt>
    1018:	mov	r0, r5
    101c:	bl	bbc <find_named_person@plt>
    1020:	cmp	r0, #0
    1024:	beq	10e8 <mo_hurt+0x238>
    1028:	add	r5, r0, #227	; 0xe3
    102c:	mov	r0, r5
    1030:	bl	1bf8 <hurt_find>
    1034:	cmp	r0, #0
    1038:	beq	1058 <mo_hurt+0x1a8>
    103c:	ldr	r1, [pc, #420]	; 11e8 <mo_hurt+0x338>
    1040:	mov	r0, r4
    1044:	mov	r2, r5
    1048:	add	r1, pc, r1
    104c:	sub	sp, fp, #16
    1050:	pop	{r4, r5, r6, r7, fp, lr}
    1054:	b	ab4 <sendto_one@plt>
    1058:	mov	r0, r4
    105c:	bl	afc <get_oper_name@plt>
    1060:	mov	r3, r0
    1064:	movw	r0, #34953	; 0x8889
    1068:	str	r5, [sp]
    106c:	movt	r0, #34952	; 0x8888
    1070:	umull	r0, r1, r7, r0
    1074:	lsr	r0, r1, #5
    1078:	mov	r1, #0
    107c:	stmib	sp, {r0, r6}
    1080:	mov	r0, #256	; 0x100
    1084:	ldr	r2, [pc, #312]	; 11c4 <mo_hurt+0x314>
    1088:	add	r2, pc, r2
    108c:	bl	af0 <sendto_realops_snomask@plt>
    1090:	mov	r0, r7
    1094:	mov	r1, r5
    1098:	mov	r2, r6
    109c:	bl	1c48 <hurt_new>
    10a0:	mov	r5, r0
    10a4:	bl	b44 <rb_make_rb_dlink_node@plt>
    10a8:	cmp	r5, #0
    10ac:	beq	1174 <mo_hurt+0x2c4>
    10b0:	cmp	r0, #0
    10b4:	beq	1194 <mo_hurt+0x2e4>
    10b8:	mov	r1, #0
    10bc:	str	r1, [r0, #4]
    10c0:	str	r5, [r0]
    10c4:	ldr	r1, [pc, #252]	; 11c8 <mo_hurt+0x318>
    10c8:	ldr	r1, [pc, r1]
    10cc:	ldr	r2, [r1]
    10d0:	cmp	r2, #0
    10d4:	str	r2, [r0, #8]
    10d8:	beq	1108 <mo_hurt+0x258>
    10dc:	add	r2, r2, #4
    10e0:	str	r0, [r2]
    10e4:	b	1118 <mo_hurt+0x268>
    10e8:	ldr	r2, [pc, #240]	; 11e0 <mo_hurt+0x330>
    10ec:	mov	r0, r4
    10f0:	movw	r1, #401	; 0x191
    10f4:	mov	r3, r5
    10f8:	add	r2, pc, r2
    10fc:	sub	sp, fp, #16
    1100:	pop	{r4, r5, r6, r7, fp, lr}
    1104:	b	b50 <sendto_one_numeric@plt>
    1108:	mov	r2, r1
    110c:	ldr	r3, [r2, #4]!
    1110:	cmp	r3, #0
    1114:	streq	r0, [r2]
    1118:	str	r0, [r1]
    111c:	ldr	r6, [r5, #16]
    1120:	ldr	r0, [r1, #8]
    1124:	add	r0, r0, #1
    1128:	str	r0, [r1, #8]
    112c:	bl	a90 <rb_current_time@plt>
    1130:	ldr	r1, [r5]
    1134:	ldr	r2, [r5, #12]
    1138:	ldr	r7, [pc, #140]	; 11cc <mo_hurt+0x31c>
    113c:	add	r3, r4, #88	; 0x58
    1140:	sub	r0, r6, r0
    1144:	str	r3, [sp, #4]
    1148:	add	r3, sp, #8
    114c:	add	r7, pc, r7
    1150:	str	r7, [sp]
    1154:	stm	r3, {r0, r1, r2}
    1158:	mov	r1, #0
    115c:	mov	r2, #0
    1160:	mov	r3, #0
    1164:	ldr	r0, [pc, #100]	; 11d0 <mo_hurt+0x320>
    1168:	ldr	r0, [pc, r0]
    116c:	bl	b20 <sendto_server@plt>
    1170:	b	f30 <mo_hurt+0x80>
    1174:	ldr	r0, [pc, #112]	; 11ec <mo_hurt+0x33c>
    1178:	ldr	r1, [pc, #112]	; 11f0 <mo_hurt+0x340>
    117c:	ldr	r3, [pc, #112]	; 11f4 <mo_hurt+0x344>
    1180:	mov	r2, #143	; 0x8f
    1184:	add	r0, pc, r0
    1188:	add	r1, pc, r1
    118c:	add	r3, pc, r3
    1190:	bl	bec <__assert_fail@plt>
    1194:	ldr	r0, [pc, #92]	; 11f8 <mo_hurt+0x348>
    1198:	ldr	r1, [pc, #92]	; 11fc <mo_hurt+0x34c>
    119c:	ldr	r3, [pc, #92]	; 1200 <mo_hurt+0x350>
    11a0:	mov	r2, #144	; 0x90
    11a4:	add	r0, pc, r0
    11a8:	add	r1, pc, r1
    11ac:	add	r3, pc, r3
    11b0:	bl	bec <__assert_fail@plt>
    11b4:	.word	0x0000114f
    11b8:	.word	0x00001084
    11bc:	.word	0x0000110d
    11c0:	.word	0x0000111e
    11c4:	.word	0x00001070
    11c8:	.word	0x00011fc0
    11cc:	.word	0x0000101e
    11d0:	.word	0x00011f3c
    11d4:	.word	0x0000112c
    11d8:	.word	0x0001218c
    11dc:	.word	0x0000111a
    11e0:	.word	0x00000fb9
    11e4:	.word	0x000010dd
    11e8:	.word	0x0000109d
    11ec:	.word	0x00000e6d
    11f0:	.word	0x00000e1c
    11f4:	.word	0x00000fa3
    11f8:	.word	0x00000e85
    11fc:	.word	0x00000dfc
    1200:	.word	0x00000f83

00001204 <me_heal>:
    1204:	push	{r4, r5, r6, sl, fp, lr}
    1208:	add	fp, sp, #16
    120c:	sub	sp, sp, #8
    1210:	cmp	r3, #2
    1214:	bge	1220 <me_heal+0x1c>
    1218:	sub	sp, fp, #16
    121c:	pop	{r4, r5, r6, sl, fp, pc}
    1220:	ldr	r6, [fp, #8]
    1224:	mov	r1, #0
    1228:	mov	r4, r2
    122c:	ldr	r0, [r6, #4]
    1230:	bl	b74 <clean_nick@plt>
    1234:	ldr	r5, [r6, #4]
    1238:	cmp	r0, #0
    123c:	beq	1270 <me_heal+0x6c>
    1240:	mov	r0, r5
    1244:	bl	b8c <find_person@plt>
    1248:	cmp	r0, #0
    124c:	beq	1218 <me_heal+0x14>
    1250:	mov	r1, r0
    1254:	ldrb	r0, [r0, #65]	; 0x41
    1258:	tst	r0, #32
    125c:	beq	1218 <me_heal+0x14>
    1260:	mov	r0, r4
    1264:	sub	sp, fp, #16
    1268:	pop	{r4, r5, r6, sl, fp, lr}
    126c:	b	1cd4 <heal_nick>
    1270:	mov	r0, r5
    1274:	mov	r1, #46	; 0x2e
    1278:	bl	b68 <strchr@plt>
    127c:	cmp	r0, #0
    1280:	beq	1218 <me_heal+0x14>
    1284:	mov	r0, r5
    1288:	bl	1e28 <hurt_find_exact>
    128c:	cmp	r0, #0
    1290:	beq	1218 <me_heal+0x14>
    1294:	ldr	r0, [r6, #4]
    1298:	bl	1e78 <hurt_remove>
    129c:	mov	r0, r4
    12a0:	bl	afc <get_oper_name@plt>
    12a4:	mov	r3, r0
    12a8:	ldr	r0, [r6, #4]
    12ac:	mov	r1, #0
    12b0:	str	r0, [sp]
    12b4:	mov	r0, #256	; 0x100
    12b8:	ldr	r2, [pc, #8]	; 12c8 <me_heal+0xc4>
    12bc:	add	r2, pc, r2
    12c0:	bl	af0 <sendto_realops_snomask@plt>
    12c4:	b	1218 <me_heal+0x14>
    12c8:	.word	0x00000f03

000012cc <mo_heal>:
    12cc:	push	{r4, r5, r6, sl, fp, lr}
    12d0:	add	fp, sp, #16
    12d4:	sub	sp, sp, #16
    12d8:	ldr	r0, [r2, #24]
    12dc:	mov	r4, r2
    12e0:	cmp	r0, #0
    12e4:	beq	1380 <mo_heal+0xb4>
    12e8:	ldr	r0, [r0, #36]	; 0x24
    12ec:	cmp	r0, #0
    12f0:	beq	1380 <mo_heal+0xb4>
    12f4:	ldr	r6, [fp, #8]
    12f8:	ldr	r1, [pc, #464]	; 14d0 <mo_heal+0x204>
    12fc:	add	r1, pc, r1
    1300:	bl	bd4 <privilegeset_in_set@plt>
    1304:	cmp	r0, #0
    1308:	beq	1380 <mo_heal+0xb4>
    130c:	ldr	r0, [r6, #4]
    1310:	mov	r1, #0
    1314:	bl	b74 <clean_nick@plt>
    1318:	ldr	r5, [r6, #4]
    131c:	cmp	r0, #0
    1320:	beq	13b4 <mo_heal+0xe8>
    1324:	mov	r0, r5
    1328:	bl	bbc <find_named_person@plt>
    132c:	cmp	r0, #0
    1330:	beq	1440 <mo_heal+0x174>
    1334:	mov	r2, r0
    1338:	ldrb	r0, [r0, #65]	; 0x41
    133c:	tst	r0, #32
    1340:	bne	1460 <mo_heal+0x194>
    1344:	ldr	r0, [r2, #36]	; 0x24
    1348:	ldrh	r1, [r0, #80]	; 0x50
    134c:	cmp	r1, #32
    1350:	bne	1490 <mo_heal+0x1c4>
    1354:	ldrb	r0, [r0, #396]	; 0x18c
    1358:	cmp	r0, #0
    135c:	beq	1490 <mo_heal+0x1c4>
    1360:	mov	r0, r2
    1364:	ldrb	r1, [r0, #396]!	; 0x18c
    1368:	cmp	r1, #0
    136c:	ldrb	r1, [r4, #396]!	; 0x18c
    1370:	subeq	r0, r0, #308	; 0x134
    1374:	cmp	r1, #0
    1378:	subeq	r4, r4, #308	; 0x134
    137c:	b	1498 <mo_heal+0x1cc>
    1380:	ldr	r0, [pc, #332]	; 14d4 <mo_heal+0x208>
    1384:	add	r3, r4, #88	; 0x58
    1388:	add	r0, pc, r0
    138c:	str	r0, [sp]
    1390:	ldr	r0, [pc, #320]	; 14d8 <mo_heal+0x20c>
    1394:	ldr	r0, [pc, r0]
    1398:	ldr	r1, [pc, #316]	; 14dc <mo_heal+0x210>
    139c:	add	r2, r0, #88	; 0x58
    13a0:	add	r1, pc, r1
    13a4:	mov	r0, r4
    13a8:	bl	ab4 <sendto_one@plt>
    13ac:	sub	sp, fp, #16
    13b0:	pop	{r4, r5, r6, sl, fp, pc}
    13b4:	mov	r0, r5
    13b8:	mov	r1, #46	; 0x2e
    13bc:	bl	b68 <strchr@plt>
    13c0:	cmp	r0, #0
    13c4:	beq	1474 <mo_heal+0x1a8>
    13c8:	mov	r0, r5
    13cc:	bl	1e28 <hurt_find_exact>
    13d0:	ldr	r2, [r6, #4]
    13d4:	cmp	r0, #0
    13d8:	beq	14b8 <mo_heal+0x1ec>
    13dc:	mov	r0, r2
    13e0:	bl	1e78 <hurt_remove>
    13e4:	mov	r0, r4
    13e8:	bl	afc <get_oper_name@plt>
    13ec:	mov	r3, r0
    13f0:	ldr	r0, [r6, #4]
    13f4:	mov	r1, #0
    13f8:	str	r0, [sp]
    13fc:	mov	r0, #256	; 0x100
    1400:	ldr	r2, [pc, #220]	; 14e4 <mo_heal+0x218>
    1404:	add	r2, pc, r2
    1408:	bl	af0 <sendto_realops_snomask@plt>
    140c:	ldr	r0, [r6, #4]
    1410:	ldr	r2, [pc, #208]	; 14e8 <mo_heal+0x21c>
    1414:	add	r1, r4, #88	; 0x58
    1418:	mov	r3, #0
    141c:	str	r1, [sp, #4]
    1420:	mov	r1, #0
    1424:	add	r2, pc, r2
    1428:	str	r0, [sp, #8]
    142c:	mov	r0, #0
    1430:	str	r2, [sp]
    1434:	mov	r2, #0
    1438:	bl	b20 <sendto_server@plt>
    143c:	b	13ac <mo_heal+0xe0>
    1440:	ldr	r3, [r6, #4]
    1444:	ldr	r2, [pc, #164]	; 14f0 <mo_heal+0x224>
    1448:	mov	r0, r4
    144c:	movw	r1, #401	; 0x191
    1450:	add	r2, pc, r2
    1454:	sub	sp, fp, #16
    1458:	pop	{r4, r5, r6, sl, fp, lr}
    145c:	b	b50 <sendto_one_numeric@plt>
    1460:	mov	r0, r4
    1464:	mov	r1, r2
    1468:	sub	sp, fp, #16
    146c:	pop	{r4, r5, r6, sl, fp, lr}
    1470:	b	1cd4 <heal_nick>
    1474:	ldr	r1, [pc, #112]	; 14ec <mo_heal+0x220>
    1478:	mov	r0, r4
    147c:	mov	r2, r5
    1480:	add	r1, pc, r1
    1484:	sub	sp, fp, #16
    1488:	pop	{r4, r5, r6, sl, fp, lr}
    148c:	b	ab4 <sendto_one@plt>
    1490:	add	r0, r2, #88	; 0x58
    1494:	add	r4, r4, #88	; 0x58
    1498:	ldr	r1, [r2, #32]
    149c:	str	r0, [sp]
    14a0:	mov	r0, r2
    14a4:	mov	r2, r4
    14a8:	add	r3, r1, #88	; 0x58
    14ac:	ldr	r1, [pc, #44]	; 14e0 <mo_heal+0x214>
    14b0:	add	r1, pc, r1
    14b4:	b	13a8 <mo_heal+0xdc>
    14b8:	ldr	r1, [pc, #52]	; 14f4 <mo_heal+0x228>
    14bc:	mov	r0, r4
    14c0:	add	r1, pc, r1
    14c4:	sub	sp, fp, #16
    14c8:	pop	{r4, r5, r6, sl, fp, lr}
    14cc:	b	ba4 <sendto_one_notice@plt>
    14d0:	.word	0x00000e8a
    14d4:	.word	0x00000e03
    14d8:	.word	0x00011d10
    14dc:	.word	0x00000c9e
    14e0:	.word	0x00000ce3
    14e4:	.word	0x00000dbb
    14e8:	.word	0x00000db1
    14ec:	.word	0x00000d69
    14f0:	.word	0x00000c61
    14f4:	.word	0x00000ce8

000014f8 <client_exit_hook>:
    14f8:	push	{fp, lr}
    14fc:	mov	fp, sp
    1500:	ldr	r3, [r0, #4]
    1504:	cmp	r3, #0
    1508:	beq	1584 <client_exit_hook+0x8c>
    150c:	ldr	ip, [pc, #144]	; 15a4 <client_exit_hook+0xac>
    1510:	ldr	ip, [pc, ip]
    1514:	ldr	r2, [ip, #8]
    1518:	cmp	r2, #0
    151c:	beq	154c <client_exit_hook+0x54>
    1520:	ldr	r1, [r2]
    1524:	mov	r0, r2
    1528:	ldr	r2, [r2, #8]
    152c:	cmp	r1, r3
    1530:	bne	1518 <client_exit_hook+0x20>
    1534:	ldr	r3, [r0, #4]
    1538:	cmp	r2, #0
    153c:	beq	1550 <client_exit_hook+0x58>
    1540:	str	r3, [r2, #4]
    1544:	ldr	r3, [r0, #4]
    1548:	b	1554 <client_exit_hook+0x5c>
    154c:	pop	{fp, pc}
    1550:	str	r3, [ip, #12]
    1554:	cmp	r3, #0
    1558:	add	r1, r3, #8
    155c:	addeq	r1, ip, #8
    1560:	str	r2, [r1]
    1564:	mov	r1, #0
    1568:	str	r1, [r0, #4]
    156c:	str	r1, [r0, #8]
    1570:	ldr	r1, [ip, #16]
    1574:	sub	r1, r1, #1
    1578:	str	r1, [ip, #16]
    157c:	pop	{fp, lr}
    1580:	b	b08 <rb_free_rb_dlink_node@plt>
    1584:	ldr	r0, [pc, #28]	; 15a8 <client_exit_hook+0xb0>
    1588:	ldr	r1, [pc, #28]	; 15ac <client_exit_hook+0xb4>
    158c:	ldr	r3, [pc, #28]	; 15b0 <client_exit_hook+0xb8>
    1590:	mov	r2, #288	; 0x120
    1594:	add	r0, pc, r0
    1598:	add	r1, pc, r1
    159c:	add	r3, pc, r3
    15a0:	bl	bec <__assert_fail@plt>
    15a4:	.word	0x00011b84
    15a8:	.word	0x00000a5d
    15ac:	.word	0x00000a0c
    15b0:	.word	0x00000a24

000015b4 <new_local_user_hook>:
    15b4:	push	{r4, r5, fp, lr}
    15b8:	add	fp, sp, #8
    15bc:	mov	r5, r0
    15c0:	mov	r4, r0
    15c4:	movw	r1, #16418	; 0x4022
    15c8:	ldr	r0, [r5, #64]!	; 0x40
    15cc:	tst	r0, r1
    15d0:	tsteq	r0, #4194304	; 0x400000
    15d4:	beq	15dc <new_local_user_hook+0x28>
    15d8:	pop	{r4, r5, fp, pc}
    15dc:	ldr	r0, [r4, #24]
    15e0:	ldrb	r0, [r0, #40]	; 0x28
    15e4:	cmp	r0, #0
    15e8:	bne	15d8 <new_local_user_hook+0x24>
    15ec:	movw	r0, #291	; 0x123
    15f0:	add	r0, r4, r0
    15f4:	bl	1bf8 <hurt_find>
    15f8:	cmp	r0, #0
    15fc:	bne	1610 <new_local_user_hook+0x5c>
    1600:	add	r0, r4, #227	; 0xe3
    1604:	bl	1bf8 <hurt_find>
    1608:	cmp	r0, #0
    160c:	popeq	{r4, r5, fp, pc}
    1610:	bl	a90 <rb_current_time@plt>
    1614:	ldr	r1, [r4, #432]	; 0x1b0
    1618:	add	r0, r0, #600	; 0x258
    161c:	str	r0, [r1, #416]	; 0x1a0
    1620:	ldr	r0, [r5]
    1624:	orr	r0, r0, #65536	; 0x10000
    1628:	str	r0, [r5]
    162c:	bl	b44 <rb_make_rb_dlink_node@plt>
    1630:	cmp	r0, #0
    1634:	beq	169c <new_local_user_hook+0xe8>
    1638:	mov	r1, #0
    163c:	str	r1, [r0, #4]
    1640:	str	r4, [r0]
    1644:	ldr	r1, [pc, #112]	; 16bc <new_local_user_hook+0x108>
    1648:	ldr	r1, [pc, r1]
    164c:	ldr	r2, [r1, #8]
    1650:	cmp	r2, #0
    1654:	str	r2, [r0, #8]
    1658:	beq	1668 <new_local_user_hook+0xb4>
    165c:	add	r2, r2, #4
    1660:	str	r0, [r2]
    1664:	b	1678 <new_local_user_hook+0xc4>
    1668:	mov	r2, r1
    166c:	ldr	r3, [r2, #12]!
    1670:	cmp	r3, #0
    1674:	streq	r0, [r2]
    1678:	str	r0, [r1, #8]
    167c:	ldr	r0, [r1, #16]
    1680:	add	r0, r0, #1
    1684:	str	r0, [r1, #16]
    1688:	mov	r0, r4
    168c:	ldr	r1, [pc, #44]	; 16c0 <new_local_user_hook+0x10c>
    1690:	add	r1, pc, r1
    1694:	pop	{r4, r5, fp, lr}
    1698:	b	ba4 <sendto_one_notice@plt>
    169c:	ldr	r0, [pc, #32]	; 16c4 <new_local_user_hook+0x110>
    16a0:	ldr	r1, [pc, #32]	; 16c8 <new_local_user_hook+0x114>
    16a4:	ldr	r3, [pc, #32]	; 16cc <new_local_user_hook+0x118>
    16a8:	mov	r2, #144	; 0x90
    16ac:	add	r0, pc, r0
    16b0:	add	r1, pc, r1
    16b4:	add	r3, pc, r3
    16b8:	bl	bec <__assert_fail@plt>
    16bc:	.word	0x00011a4c
    16c0:	.word	0x00000c00
    16c4:	.word	0x0000097d
    16c8:	.word	0x000008f4
    16cc:	.word	0x00000a7b

000016d0 <doing_stats_hook>:
    16d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    16d4:	add	fp, sp, #24
    16d8:	sub	sp, sp, #24
    16dc:	ldr	r1, [r0, #8]
    16e0:	cmp	r1, #115	; 0x73
    16e4:	bne	1884 <doing_stats_hook+0x1b4>
    16e8:	ldr	r8, [r0]
    16ec:	ldr	r5, [pc, #408]	; 188c <doing_stats_hook+0x1bc>
    16f0:	ldr	r5, [pc, r5]
    16f4:	ldr	r0, [r5, #164]	; 0xa4
    16f8:	cmp	r0, #2
    16fc:	bne	1754 <doing_stats_hook+0x84>
    1700:	ldr	r0, [r8, #24]
    1704:	cmp	r0, #0
    1708:	beq	172c <doing_stats_hook+0x5c>
    170c:	ldr	r0, [r0, #36]	; 0x24
    1710:	cmp	r0, #0
    1714:	beq	172c <doing_stats_hook+0x5c>
    1718:	ldr	r1, [pc, #368]	; 1890 <doing_stats_hook+0x1c0>
    171c:	add	r1, pc, r1
    1720:	bl	bd4 <privilegeset_in_set@plt>
    1724:	cmp	r0, #0
    1728:	bne	1750 <doing_stats_hook+0x80>
    172c:	ldrb	r0, [r8, #57]	; 0x39
    1730:	tst	r0, #16
    1734:	beq	1884 <doing_stats_hook+0x1b4>
    1738:	ldr	r0, [r8, #24]
    173c:	cmp	r0, #0
    1740:	beq	1884 <doing_stats_hook+0x1b4>
    1744:	ldr	r0, [r0, #36]	; 0x24
    1748:	cmp	r0, #0
    174c:	bne	1884 <doing_stats_hook+0x1b4>
    1750:	ldr	r0, [r5, #164]	; 0xa4
    1754:	cmp	r0, #1
    1758:	bne	1818 <doing_stats_hook+0x148>
    175c:	ldr	r0, [r8, #24]
    1760:	cmp	r0, #0
    1764:	beq	1788 <doing_stats_hook+0xb8>
    1768:	ldr	r0, [r0, #36]	; 0x24
    176c:	cmp	r0, #0
    1770:	beq	1788 <doing_stats_hook+0xb8>
    1774:	ldr	r1, [pc, #280]	; 1894 <doing_stats_hook+0x1c4>
    1778:	add	r1, pc, r1
    177c:	bl	bd4 <privilegeset_in_set@plt>
    1780:	cmp	r0, #0
    1784:	bne	1818 <doing_stats_hook+0x148>
    1788:	ldrb	r0, [r8, #57]	; 0x39
    178c:	tst	r0, #16
    1790:	beq	17ac <doing_stats_hook+0xdc>
    1794:	ldr	r0, [r8, #24]
    1798:	cmp	r0, #0
    179c:	beq	17ac <doing_stats_hook+0xdc>
    17a0:	ldr	r0, [r0, #36]	; 0x24
    17a4:	cmp	r0, #0
    17a8:	beq	1818 <doing_stats_hook+0x148>
    17ac:	movw	r0, #291	; 0x123
    17b0:	add	r0, r8, r0
    17b4:	bl	1bf8 <hurt_find>
    17b8:	cmp	r0, #0
    17bc:	bne	17d0 <doing_stats_hook+0x100>
    17c0:	add	r0, r8, #227	; 0xe3
    17c4:	bl	1bf8 <hurt_find>
    17c8:	cmp	r0, #0
    17cc:	beq	1884 <doing_stats_hook+0x1b4>
    17d0:	ldr	r1, [r0]
    17d4:	ldr	r0, [r0, #12]
    17d8:	ldr	r2, [pc, #184]	; 1898 <doing_stats_hook+0x1c8>
    17dc:	ldr	r3, [pc, #184]	; 189c <doing_stats_hook+0x1cc>
    17e0:	add	r2, pc, r2
    17e4:	add	r3, pc, r3
    17e8:	str	r1, [sp, #4]
    17ec:	str	r0, [sp, #8]
    17f0:	mov	r0, r8
    17f4:	mov	r1, #216	; 0xd8
    17f8:	str	r3, [sp]
    17fc:	str	r2, [sp, #12]
    1800:	str	r2, [sp, #16]
    1804:	mov	r3, #115	; 0x73
    1808:	ldr	r2, [pc, #144]	; 18a0 <doing_stats_hook+0x1d0>
    180c:	add	r2, pc, r2
    1810:	bl	b50 <sendto_one_numeric@plt>
    1814:	b	1884 <doing_stats_hook+0x1b4>
    1818:	ldr	r0, [pc, #132]	; 18a4 <doing_stats_hook+0x1d4>
    181c:	ldr	r0, [pc, r0]
    1820:	ldr	r6, [r0]
    1824:	cmp	r6, #0
    1828:	beq	1884 <doing_stats_hook+0x1b4>
    182c:	ldr	r7, [pc, #116]	; 18a8 <doing_stats_hook+0x1d8>
    1830:	ldr	r4, [pc, #116]	; 18ac <doing_stats_hook+0x1dc>
    1834:	ldr	r5, [pc, #116]	; 18b0 <doing_stats_hook+0x1e0>
    1838:	add	r7, pc, r7
    183c:	add	r4, pc, r4
    1840:	add	r5, pc, r5
    1844:	ldr	r0, [r6]
    1848:	mov	r2, r5
    184c:	mov	r3, #115	; 0x73
    1850:	ldr	r1, [r0]
    1854:	ldr	r0, [r0, #12]
    1858:	str	r4, [sp]
    185c:	str	r7, [sp, #12]
    1860:	str	r7, [sp, #16]
    1864:	str	r1, [sp, #4]
    1868:	str	r0, [sp, #8]
    186c:	mov	r0, r8
    1870:	mov	r1, #216	; 0xd8
    1874:	bl	b50 <sendto_one_numeric@plt>
    1878:	ldr	r6, [r6, #8]
    187c:	cmp	r6, #0
    1880:	bne	1844 <doing_stats_hook+0x174>
    1884:	sub	sp, fp, #24
    1888:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    188c:	.word	0x000119b8
    1890:	.word	0x00000bcc
    1894:	.word	0x00000b70
    1898:	.word	0x00000810
    189c:	.word	0x00000b24
    18a0:	.word	0x00000ae9
    18a4:	.word	0x0001186c
    18a8:	.word	0x000007b8
    18ac:	.word	0x00000acc
    18b0:	.word	0x00000ab5

000018b4 <modinit>:
    18b4:	push	{fp, lr}
    18b8:	mov	fp, sp
    18bc:	bl	a90 <rb_current_time@plt>
    18c0:	ldr	r1, [pc, #92]	; 1924 <modinit+0x70>
    18c4:	mov	r2, #0
    18c8:	mov	r3, #60	; 0x3c
    18cc:	ldr	r1, [pc, r1]
    18d0:	str	r0, [r1]
    18d4:	ldr	r0, [pc, #76]	; 1928 <modinit+0x74>
    18d8:	ldr	r1, [pc, #76]	; 192c <modinit+0x78>
    18dc:	add	r0, pc, r0
    18e0:	add	r1, pc, r1
    18e4:	bl	a9c <rb_event_add@plt>
    18e8:	ldr	r1, [pc, #64]	; 1930 <modinit+0x7c>
    18ec:	mov	r2, #0
    18f0:	mov	r3, #5
    18f4:	ldr	r1, [pc, r1]
    18f8:	str	r0, [r1]
    18fc:	ldr	r0, [pc, #48]	; 1934 <modinit+0x80>
    1900:	ldr	r1, [pc, #48]	; 1938 <modinit+0x84>
    1904:	add	r0, pc, r0
    1908:	add	r1, pc, r1
    190c:	bl	a9c <rb_event_add@plt>
    1910:	ldr	r1, [pc, #36]	; 193c <modinit+0x88>
    1914:	ldr	r1, [pc, r1]
    1918:	str	r0, [r1]
    191c:	mov	r0, #0
    1920:	pop	{fp, pc}
    1924:	.word	0x000117c8
    1928:	.word	0x000006b1
    192c:	.word	0x000000f8
    1930:	.word	0x0001179c
    1934:	.word	0x00000695
    1938:	.word	0x000001b8
    193c:	.word	0x00011784

00001940 <modfini>:
    1940:	push	{r4, r5, r6, sl, fp, lr}
    1944:	add	fp, sp, #16
    1948:	ldr	r0, [pc, #132]	; 19d4 <modfini+0x94>
    194c:	ldr	r0, [pc, r0]
    1950:	ldr	r0, [r0]
    1954:	bl	ac0 <rb_event_delete@plt>
    1958:	ldr	r0, [pc, #120]	; 19d8 <modfini+0x98>
    195c:	ldr	r0, [pc, r0]
    1960:	ldr	r0, [r0]
    1964:	bl	ac0 <rb_event_delete@plt>
    1968:	ldr	r4, [pc, #108]	; 19dc <modfini+0x9c>
    196c:	ldr	r4, [pc, r4]
    1970:	ldr	r0, [r4, #8]
    1974:	cmp	r0, #0
    1978:	beq	19d0 <modfini+0x90>
    197c:	mov	r5, #0
    1980:	ldmib	r0, {r1, r6}
    1984:	cmp	r6, #0
    1988:	beq	1998 <modfini+0x58>
    198c:	str	r1, [r6, #4]
    1990:	ldr	r1, [r0, #4]
    1994:	b	199c <modfini+0x5c>
    1998:	str	r1, [r4, #12]
    199c:	cmp	r1, #0
    19a0:	add	r2, r1, #8
    19a4:	addeq	r2, r4, #8
    19a8:	str	r6, [r2]
    19ac:	str	r5, [r0, #4]
    19b0:	str	r5, [r0, #8]
    19b4:	ldr	r1, [r4, #16]
    19b8:	sub	r1, r1, #1
    19bc:	str	r1, [r4, #16]
    19c0:	bl	b08 <rb_free_rb_dlink_node@plt>
    19c4:	cmp	r6, #0
    19c8:	mov	r0, r6
    19cc:	bne	1980 <modfini+0x40>
    19d0:	pop	{r4, r5, r6, sl, fp, pc}
    19d4:	.word	0x00011744
    19d8:	.word	0x0001173c
    19dc:	.word	0x00011728

000019e0 <hurt_expire_event>:
    19e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    19e4:	add	fp, sp, #24
    19e8:	ldr	r5, [pc, #200]	; 1ab8 <hurt_expire_event+0xd8>
    19ec:	ldr	r5, [pc, r5]
    19f0:	ldr	r6, [r5]
    19f4:	cmp	r6, #0
    19f8:	beq	1a94 <hurt_expire_event+0xb4>
    19fc:	mov	r8, #0
    1a00:	ldr	r4, [r6]
    1a04:	ldr	r6, [r6, #8]
    1a08:	ldr	r7, [r4, #16]
    1a0c:	bl	a90 <rb_current_time@plt>
    1a10:	cmp	r7, r0
    1a14:	bgt	1a8c <hurt_expire_event+0xac>
    1a18:	cmp	r4, #0
    1a1c:	beq	1a98 <hurt_expire_event+0xb8>
    1a20:	ldr	r1, [r5]
    1a24:	cmp	r1, #0
    1a28:	beq	1a84 <hurt_expire_event+0xa4>
    1a2c:	ldr	r2, [r1]
    1a30:	mov	r0, r1
    1a34:	ldr	r1, [r1, #8]
    1a38:	cmp	r2, r4
    1a3c:	bne	1a24 <hurt_expire_event+0x44>
    1a40:	ldr	r2, [r0, #4]
    1a44:	cmp	r1, #0
    1a48:	beq	1a58 <hurt_expire_event+0x78>
    1a4c:	str	r2, [r1, #4]
    1a50:	ldr	r2, [r0, #4]
    1a54:	b	1a5c <hurt_expire_event+0x7c>
    1a58:	str	r2, [r5, #4]
    1a5c:	cmp	r2, #0
    1a60:	mov	r3, r5
    1a64:	addne	r3, r2, #8
    1a68:	str	r1, [r3]
    1a6c:	str	r8, [r0, #4]
    1a70:	str	r8, [r0, #8]
    1a74:	ldr	r1, [r5, #8]
    1a78:	sub	r1, r1, #1
    1a7c:	str	r1, [r5, #8]
    1a80:	bl	b08 <rb_free_rb_dlink_node@plt>
    1a84:	mov	r0, r4
    1a88:	bl	1bb8 <hurt_destroy>
    1a8c:	cmp	r6, #0
    1a90:	bne	1a00 <hurt_expire_event+0x20>
    1a94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1a98:	ldr	r0, [pc, #28]	; 1abc <hurt_expire_event+0xdc>
    1a9c:	ldr	r1, [pc, #28]	; 1ac0 <hurt_expire_event+0xe0>
    1aa0:	ldr	r3, [pc, #28]	; 1ac4 <hurt_expire_event+0xe4>
    1aa4:	mov	r2, #288	; 0x120
    1aa8:	add	r0, pc, r0
    1aac:	add	r1, pc, r1
    1ab0:	add	r3, pc, r3
    1ab4:	bl	bec <__assert_fail@plt>
    1ab8:	.word	0x0001169c
    1abc:	.word	0x00000549
    1ac0:	.word	0x000004f8
    1ac4:	.word	0x00000510

00001ac8 <hurt_check_event>:
    1ac8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1acc:	add	fp, sp, #24
    1ad0:	ldr	r7, [pc, #212]	; 1bac <hurt_check_event+0xe4>
    1ad4:	ldr	r7, [pc, r7]
    1ad8:	ldr	r4, [r7, #8]
    1adc:	cmp	r4, #0
    1ae0:	beq	1ba8 <hurt_check_event+0xe0>
    1ae4:	ldr	r8, [pc, #196]	; 1bb0 <hurt_check_event+0xe8>
    1ae8:	mov	r5, #0
    1aec:	ldr	r8, [pc, r8]
    1af0:	ldr	r9, [pc, #188]	; 1bb4 <hurt_check_event+0xec>
    1af4:	add	r9, pc, r9
    1af8:	ldr	r6, [r4]
    1afc:	mov	r0, r4
    1b00:	ldr	r4, [r4, #8]
    1b04:	ldr	r1, [r6, #24]
    1b08:	ldrb	r1, [r1, #40]	; 0x28
    1b0c:	cmp	r1, #0
    1b10:	beq	1b30 <hurt_check_event+0x68>
    1b14:	ldr	r1, [r0, #8]
    1b18:	ldr	r2, [r0, #4]
    1b1c:	cmp	r1, #0
    1b20:	beq	1b5c <hurt_check_event+0x94>
    1b24:	str	r2, [r1, #4]
    1b28:	ldr	r2, [r0, #4]
    1b2c:	b	1b60 <hurt_check_event+0x98>
    1b30:	ldr	r1, [r6, #432]	; 0x1b0
    1b34:	ldrh	r0, [r7, #20]
    1b38:	ldr	r1, [r1, #116]	; 0x74
    1b3c:	cmp	r1, r0
    1b40:	bls	1ba0 <hurt_check_event+0xd8>
    1b44:	ldr	r3, [r7, #28]
    1b48:	mov	r0, #0
    1b4c:	mov	r1, r6
    1b50:	mov	r2, r8
    1b54:	bl	bc8 <exit_client@plt>
    1b58:	b	1ba0 <hurt_check_event+0xd8>
    1b5c:	str	r2, [r7, #12]
    1b60:	cmp	r2, #0
    1b64:	add	r3, r2, #8
    1b68:	addeq	r3, r7, #8
    1b6c:	str	r1, [r3]
    1b70:	str	r5, [r0, #4]
    1b74:	str	r5, [r0, #8]
    1b78:	ldr	r1, [r7, #16]
    1b7c:	sub	r1, r1, #1
    1b80:	str	r1, [r7, #16]
    1b84:	bl	b08 <rb_free_rb_dlink_node@plt>
    1b88:	mov	r0, r6
    1b8c:	mov	r1, r9
    1b90:	bl	ba4 <sendto_one_notice@plt>
    1b94:	bl	a90 <rb_current_time@plt>
    1b98:	ldr	r1, [r6, #432]	; 0x1b0
    1b9c:	str	r0, [r1, #416]	; 0x1a0
    1ba0:	cmp	r4, #0
    1ba4:	bne	1af8 <hurt_check_event+0x30>
    1ba8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1bac:	.word	0x000115c0
    1bb0:	.word	0x000115b8
    1bb4:	.word	0x0000050a

00001bb8 <hurt_destroy>:
    1bb8:	cmp	r0, #0
    1bbc:	bxeq	lr
    1bc0:	push	{r4, sl, fp, lr}
    1bc4:	add	fp, sp, #8
    1bc8:	mov	r4, r0
    1bcc:	ldr	r0, [r0]
    1bd0:	cmp	r0, #0
    1bd4:	beq	1bdc <hurt_destroy+0x24>
    1bd8:	bl	acc <free@plt>
    1bdc:	ldr	r0, [r4, #12]
    1be0:	cmp	r0, #0
    1be4:	beq	1bec <hurt_destroy+0x34>
    1be8:	bl	acc <free@plt>
    1bec:	mov	r0, r4
    1bf0:	pop	{r4, sl, fp, lr}
    1bf4:	b	acc <free@plt>

00001bf8 <hurt_find>:
    1bf8:	push	{r4, r5, r6, sl, fp, lr}
    1bfc:	add	fp, sp, #16
    1c00:	mov	r4, r0
    1c04:	ldr	r0, [pc, #56]	; 1c44 <hurt_find+0x4c>
    1c08:	ldr	r0, [pc, r0]
    1c0c:	ldr	r6, [r0]
    1c10:	cmp	r6, #0
    1c14:	beq	1c38 <hurt_find+0x40>
    1c18:	ldr	r5, [r6]
    1c1c:	mov	r1, r4
    1c20:	ldr	r0, [r5]
    1c24:	bl	b80 <match@plt>
    1c28:	cmp	r0, #0
    1c2c:	bne	1c3c <hurt_find+0x44>
    1c30:	ldr	r6, [r6, #8]
    1c34:	b	1c10 <hurt_find+0x18>
    1c38:	mov	r5, #0
    1c3c:	mov	r0, r5
    1c40:	pop	{r4, r5, r6, sl, fp, pc}
    1c44:	.word	0x00011480

00001c48 <hurt_new>:
    1c48:	push	{r4, r5, r6, r7, fp, lr}
    1c4c:	add	fp, sp, #16
    1c50:	mov	r7, r1
    1c54:	mov	r4, r0
    1c58:	mov	r0, #1
    1c5c:	mov	r1, #20
    1c60:	mov	r5, r2
    1c64:	bl	a78 <calloc@plt>
    1c68:	cmp	r0, #0
    1c6c:	beq	1cd0 <hurt_new+0x88>
    1c70:	mov	r6, r0
    1c74:	mov	r0, r7
    1c78:	bl	b5c <strlen@plt>
    1c7c:	add	r0, r0, #1
    1c80:	bl	b2c <malloc@plt>
    1c84:	cmp	r0, #0
    1c88:	beq	1cd0 <hurt_new+0x88>
    1c8c:	mov	r1, r7
    1c90:	bl	b14 <strcpy@plt>
    1c94:	str	r0, [r6]
    1c98:	mov	r0, r5
    1c9c:	bl	b5c <strlen@plt>
    1ca0:	add	r0, r0, #1
    1ca4:	bl	b2c <malloc@plt>
    1ca8:	cmp	r0, #0
    1cac:	beq	1cd0 <hurt_new+0x88>
    1cb0:	mov	r1, r5
    1cb4:	bl	b14 <strcpy@plt>
    1cb8:	str	r0, [r6, #12]
    1cbc:	bl	a90 <rb_current_time@plt>
    1cc0:	add	r0, r0, r4
    1cc4:	str	r0, [r6, #16]
    1cc8:	mov	r0, r6
    1ccc:	pop	{r4, r5, r6, r7, fp, pc}
    1cd0:	bl	ae4 <rb_outofmemory@plt>

00001cd4 <heal_nick>:
    1cd4:	push	{r4, r5, r6, sl, fp, lr}
    1cd8:	add	fp, sp, #16
    1cdc:	sub	sp, sp, #8
    1ce0:	cmp	r1, #0
    1ce4:	beq	1de8 <heal_nick+0x114>
    1ce8:	mov	r4, r1
    1cec:	ldr	r1, [pc, #276]	; 1e08 <heal_nick+0x134>
    1cf0:	mov	r5, r0
    1cf4:	ldr	r1, [pc, r1]
    1cf8:	ldr	r2, [r1, #8]
    1cfc:	cmp	r2, #0
    1d00:	beq	1d30 <heal_nick+0x5c>
    1d04:	ldr	r3, [r2]
    1d08:	mov	r0, r2
    1d0c:	ldr	r2, [r2, #8]
    1d10:	cmp	r3, r4
    1d14:	bne	1cfc <heal_nick+0x28>
    1d18:	ldr	r3, [r0, #4]
    1d1c:	cmp	r2, #0
    1d20:	beq	1d4c <heal_nick+0x78>
    1d24:	str	r3, [r2, #4]
    1d28:	ldr	r3, [r0, #4]
    1d2c:	b	1d50 <heal_nick+0x7c>
    1d30:	ldr	r1, [pc, #224]	; 1e18 <heal_nick+0x144>
    1d34:	add	r2, r4, #88	; 0x58
    1d38:	mov	r0, r5
    1d3c:	add	r1, pc, r1
    1d40:	sub	sp, fp, #16
    1d44:	pop	{r4, r5, r6, sl, fp, lr}
    1d48:	b	ba4 <sendto_one_notice@plt>
    1d4c:	str	r3, [r1, #12]
    1d50:	cmp	r3, #0
    1d54:	add	r6, r3, #8
    1d58:	addeq	r6, r1, #8
    1d5c:	str	r2, [r6]
    1d60:	mov	r2, #0
    1d64:	str	r2, [r0, #4]
    1d68:	str	r2, [r0, #8]
    1d6c:	ldr	r2, [r1, #16]
    1d70:	sub	r2, r2, #1
    1d74:	str	r2, [r1, #16]
    1d78:	bl	b08 <rb_free_rb_dlink_node@plt>
    1d7c:	mov	r0, r5
    1d80:	bl	afc <get_oper_name@plt>
    1d84:	mov	r6, r0
    1d88:	mov	r0, r4
    1d8c:	mov	r1, #0
    1d90:	bl	a84 <get_client_name@plt>
    1d94:	str	r0, [sp]
    1d98:	mov	r0, #256	; 0x100
    1d9c:	mov	r1, #0
    1da0:	mov	r3, r6
    1da4:	ldr	r2, [pc, #96]	; 1e0c <heal_nick+0x138>
    1da8:	add	r2, pc, r2
    1dac:	bl	af0 <sendto_realops_snomask@plt>
    1db0:	ldr	r1, [pc, #88]	; 1e10 <heal_nick+0x13c>
    1db4:	mov	r0, r4
    1db8:	add	r1, pc, r1
    1dbc:	bl	ba4 <sendto_one_notice@plt>
    1dc0:	ldr	r1, [pc, #76]	; 1e14 <heal_nick+0x140>
    1dc4:	add	r2, r4, #88	; 0x58
    1dc8:	mov	r0, r5
    1dcc:	add	r1, pc, r1
    1dd0:	bl	ba4 <sendto_one_notice@plt>
    1dd4:	bl	a90 <rb_current_time@plt>
    1dd8:	ldr	r1, [r4, #432]	; 0x1b0
    1ddc:	str	r0, [r1, #416]	; 0x1a0
    1de0:	sub	sp, fp, #16
    1de4:	pop	{r4, r5, r6, sl, fp, pc}
    1de8:	ldr	r0, [pc, #44]	; 1e1c <heal_nick+0x148>
    1dec:	ldr	r1, [pc, #44]	; 1e20 <heal_nick+0x14c>
    1df0:	ldr	r3, [pc, #44]	; 1e24 <heal_nick+0x150>
    1df4:	mov	r2, #288	; 0x120
    1df8:	add	r0, pc, r0
    1dfc:	add	r1, pc, r1
    1e00:	add	r3, pc, r3
    1e04:	bl	bec <__assert_fail@plt>
    1e08:	.word	0x000113a0
    1e0c:	.word	0x00000466
    1e10:	.word	0x00000469
    1e14:	.word	0x00000487
    1e18:	.word	0x00000543
    1e1c:	.word	0x000001f9
    1e20:	.word	0x000001a8
    1e24:	.word	0x000001c0

00001e28 <hurt_find_exact>:
    1e28:	push	{r4, r5, r6, sl, fp, lr}
    1e2c:	add	fp, sp, #16
    1e30:	mov	r4, r0
    1e34:	ldr	r0, [pc, #56]	; 1e74 <hurt_find_exact+0x4c>
    1e38:	ldr	r0, [pc, r0]
    1e3c:	ldr	r6, [r0]
    1e40:	cmp	r6, #0
    1e44:	beq	1e68 <hurt_find_exact+0x40>
    1e48:	ldr	r5, [r6]
    1e4c:	mov	r0, r4
    1e50:	ldr	r1, [r5]
    1e54:	bl	ad8 <rb_strcasecmp@plt>
    1e58:	cmp	r0, #0
    1e5c:	beq	1e6c <hurt_find_exact+0x44>
    1e60:	ldr	r6, [r6, #8]
    1e64:	b	1e40 <hurt_find_exact+0x18>
    1e68:	mov	r5, #0
    1e6c:	mov	r0, r5
    1e70:	pop	{r4, r5, r6, sl, fp, pc}
    1e74:	.word	0x00011250

00001e78 <hurt_remove>:
    1e78:	push	{r4, sl, fp, lr}
    1e7c:	add	fp, sp, #8
    1e80:	bl	1e28 <hurt_find_exact>
    1e84:	cmp	r0, #0
    1e88:	beq	1f0c <hurt_remove+0x94>
    1e8c:	ldr	ip, [pc, #152]	; 1f2c <hurt_remove+0xb4>
    1e90:	mov	r4, r0
    1e94:	ldr	ip, [pc, ip]
    1e98:	ldr	r2, [ip]
    1e9c:	cmp	r2, #0
    1ea0:	beq	1f00 <hurt_remove+0x88>
    1ea4:	ldr	r3, [r2]
    1ea8:	mov	r0, r2
    1eac:	ldr	r2, [r2, #8]
    1eb0:	cmp	r3, r4
    1eb4:	bne	1e9c <hurt_remove+0x24>
    1eb8:	ldr	r3, [r0, #4]
    1ebc:	cmp	r2, #0
    1ec0:	beq	1ed0 <hurt_remove+0x58>
    1ec4:	str	r3, [r2, #4]
    1ec8:	ldr	r3, [r0, #4]
    1ecc:	b	1ed4 <hurt_remove+0x5c>
    1ed0:	str	r3, [ip, #4]
    1ed4:	cmp	r3, #0
    1ed8:	mov	r1, ip
    1edc:	addne	r1, r3, #8
    1ee0:	str	r2, [r1]
    1ee4:	mov	r1, #0
    1ee8:	str	r1, [r0, #4]
    1eec:	str	r1, [r0, #8]
    1ef0:	ldr	r1, [ip, #8]
    1ef4:	sub	r1, r1, #1
    1ef8:	str	r1, [ip, #8]
    1efc:	bl	b08 <rb_free_rb_dlink_node@plt>
    1f00:	mov	r0, r4
    1f04:	pop	{r4, sl, fp, lr}
    1f08:	b	1bb8 <hurt_destroy>
    1f0c:	ldr	r0, [pc, #28]	; 1f30 <hurt_remove+0xb8>
    1f10:	ldr	r1, [pc, #28]	; 1f34 <hurt_remove+0xbc>
    1f14:	ldr	r3, [pc, #28]	; 1f38 <hurt_remove+0xc0>
    1f18:	mov	r2, #288	; 0x120
    1f1c:	add	r0, pc, r0
    1f20:	add	r1, pc, r1
    1f24:	add	r3, pc, r3
    1f28:	bl	bec <__assert_fail@plt>
    1f2c:	.word	0x000111f4
    1f30:	.word	0x000000d5
    1f34:	.word	0x00000084
    1f38:	.word	0x0000009c

Disassembly of section .fini:

00001f3c <_fini>:
    1f3c:	push	{r3, lr}
    1f40:	pop	{r3, pc}
