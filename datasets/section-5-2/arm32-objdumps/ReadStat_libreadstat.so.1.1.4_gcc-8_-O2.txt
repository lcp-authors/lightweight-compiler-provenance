
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00003d00 <_init>:
    3d00:	push	{r3, lr}
    3d04:	bl	4540 <call_weak_fn>
    3d08:	pop	{r3, pc}

Disassembly of section .plt:

00003d0c <.plt>:
    3d0c:	push	{lr}		; (str lr, [sp, #-4]!)
    3d10:	ldr	lr, [pc, #4]	; 3d1c <.plt+0x10>
    3d14:	add	lr, pc, lr
    3d18:	ldr	pc, [lr, #8]!
    3d1c:	.word	0x000412e4

00003d20 <sas_validate_name@plt>:
    3d20:	add	ip, pc, #0, 12
    3d24:	add	ip, ip, #266240	; 0x41000
    3d28:	ldr	pc, [ip, #740]!	; 0x2e4

00003d2c <calloc@plt>:
    3d2c:	add	ip, pc, #0, 12
    3d30:	add	ip, ip, #266240	; 0x41000
    3d34:	ldr	pc, [ip, #732]!	; 0x2dc

00003d38 <readstat_set_seek_handler@plt>:
    3d38:	add	ip, pc, #0, 12
    3d3c:	add	ip, ip, #266240	; 0x41000
    3d40:	ldr	pc, [ip, #724]!	; 0x2d4

00003d44 <readstat_set_open_handler@plt>:
    3d44:	add	ip, pc, #0, 12
    3d48:	add	ip, ip, #266240	; 0x41000
    3d4c:	ldr	pc, [ip, #716]!	; 0x2cc

00003d50 <byteswap8@plt>:
    3d50:	add	ip, pc, #0, 12
    3d54:	add	ip, ip, #266240	; 0x41000
    3d58:	ldr	pc, [ip, #708]!	; 0x2c4

00003d5c <raise@plt>:
    3d5c:	add	ip, pc, #0, 12
    3d60:	add	ip, ip, #266240	; 0x41000
    3d64:	ldr	pc, [ip, #700]!	; 0x2bc

00003d68 <byteswap4@plt>:
    3d68:	add	ip, pc, #0, 12
    3d6c:	add	ip, ip, #266240	; 0x41000
    3d70:	ldr	pc, [ip, #692]!	; 0x2b4

00003d74 <readstat_validate_metadata@plt>:
    3d74:	add	ip, pc, #0, 12
    3d78:	add	ip, ip, #266240	; 0x41000
    3d7c:	ldr	pc, [ip, #684]!	; 0x2ac

00003d80 <readstat_sort_label_set@plt>:
    3d80:	add	ip, pc, #0, 12
    3d84:	add	ip, ip, #266240	; 0x41000
    3d88:	ldr	pc, [ip, #676]!	; 0x2a4

00003d8c <por_ctx_free@plt>:
    3d8c:	add	ip, pc, #0, 12
    3d90:	add	ip, ip, #266240	; 0x41000
    3d94:	ldr	pc, [ip, #668]!	; 0x29c

00003d98 <memreverse@plt>:
    3d98:	add	ip, pc, #0, 12
    3d9c:	add	ip, ip, #266240	; 0x41000
    3da0:	ldr	pc, [ip, #660]!	; 0x294

00003da4 <iconv_close@plt>:
    3da4:	add	ip, pc, #0, 12
    3da8:	add	ip, ip, #266240	; 0x41000
    3dac:	ldr	pc, [ip, #652]!	; 0x28c

00003db0 <readstat_write_spaces@plt>:
    3db0:	add	ip, pc, #0, 12
    3db4:	add	ip, ip, #266240	; 0x41000
    3db8:	ldr	pc, [ip, #644]!	; 0x284

00003dbc <iconv@plt>:
    3dbc:	add	ip, pc, #0, 12
    3dc0:	add	ip, ip, #266240	; 0x41000
    3dc4:	ldr	pc, [ip, #636]!	; 0x27c

00003dc8 <sav_parse_timestamp@plt>:
    3dc8:	add	ip, pc, #0, 12
    3dcc:	add	ip, ip, #266240	; 0x41000
    3dd0:	ldr	pc, [ip, #628]!	; 0x274

00003dd4 <strcmp@plt>:
    3dd4:	add	ip, pc, #0, 12
    3dd8:	add	ip, ip, #266240	; 0x41000
    3ddc:	ldr	pc, [ip, #620]!	; 0x26c

00003de0 <__cxa_finalize@plt>:
    3de0:	add	ip, pc, #0, 12
    3de4:	add	ip, ip, #266240	; 0x41000
    3de8:	ldr	pc, [ip, #612]!	; 0x264

00003dec <ck_hash_table_wipe@plt>:
    3dec:	add	ip, pc, #0, 12
    3df0:	add	ip, ip, #266240	; 0x41000
    3df4:	ldr	pc, [ip, #604]!	; 0x25c

00003df8 <readstat_type_class@plt>:
    3df8:	add	ip, pc, #0, 12
    3dfc:	add	ip, ip, #266240	; 0x41000
    3e00:	ldr	pc, [ip, #596]!	; 0x254

00003e04 <strtol@plt>:
    3e04:	add	ip, pc, #0, 12
    3e08:	add	ip, ip, #266240	; 0x41000
    3e0c:	ldr	pc, [ip, #588]!	; 0x24c

00003e10 <read@plt>:
    3e10:	add	ip, pc, #0, 12
    3e14:	add	ip, ip, #266240	; 0x41000
    3e18:	ldr	pc, [ip, #580]!	; 0x244

00003e1c <readstat_error_message@plt>:
    3e1c:	add	ip, pc, #0, 12
    3e20:	add	ip, ip, #266240	; 0x41000
    3e24:	ldr	pc, [ip, #572]!	; 0x23c

00003e28 <mktime@plt>:
    3e28:	add	ip, pc, #0, 12
    3e2c:	add	ip, ip, #266240	; 0x41000
    3e30:	ldr	pc, [ip, #564]!	; 0x234

00003e34 <spss_alignment_from_readstat_alignment@plt>:
    3e34:	add	ip, pc, #0, 12
    3e38:	add	ip, ip, #266240	; 0x41000
    3e3c:	ldr	pc, [ip, #556]!	; 0x22c

00003e40 <readstat_copy@plt>:
    3e40:	add	ip, pc, #0, 12
    3e44:	add	ip, ip, #266240	; 0x41000
    3e48:	ldr	pc, [ip, #548]!	; 0x224

00003e4c <dta_ctx_free@plt>:
    3e4c:	add	ip, pc, #0, 12
    3e50:	add	ip, ip, #266240	; 0x41000
    3e54:	ldr	pc, [ip, #540]!	; 0x21c

00003e58 <deflateBound@plt>:
    3e58:	add	ip, pc, #0, 12
    3e5c:	add	ip, ip, #266240	; 0x41000
    3e60:	ldr	pc, [ip, #532]!	; 0x214

00003e64 <readstat_set_update_handler@plt>:
    3e64:	add	ip, pc, #0, 12
    3e68:	add	ip, ip, #266240	; 0x41000
    3e6c:	ldr	pc, [ip, #524]!	; 0x20c

00003e70 <memmove@plt>:
    3e70:	add	ip, pc, #0, 12
    3e74:	add	ip, ip, #266240	; 0x41000
    3e78:	ldr	pc, [ip, #516]!	; 0x204

00003e7c <byteswap2@plt>:
    3e7c:	add	ip, pc, #0, 12
    3e80:	add	ip, ip, #266240	; 0x41000
    3e84:	ldr	pc, [ip, #508]!	; 0x1fc

00003e88 <machine_is_little_endian@plt>:
    3e88:	add	ip, pc, #0, 12
    3e8c:	add	ip, ip, #266240	; 0x41000
    3e90:	ldr	pc, [ip, #500]!	; 0x1f4

00003e94 <free@plt>:
    3e94:	add	ip, pc, #0, 12
    3e98:	add	ip, ip, #266240	; 0x41000
    3e9c:	ldr	pc, [ip, #492]!	; 0x1ec

00003ea0 <readstat_value_is_system_missing@plt>:
    3ea0:	add	ip, pc, #0, 12
    3ea4:	add	ip, ip, #266240	; 0x41000
    3ea8:	ldr	pc, [ip, #484]!	; 0x1e4

00003eac <sav_parse_time@plt>:
    3eac:	add	ip, pc, #0, 12
    3eb0:	add	ip, ip, #266240	; 0x41000
    3eb4:	ldr	pc, [ip, #476]!	; 0x1dc

00003eb8 <readstat_variable_get_format@plt>:
    3eb8:	add	ip, pc, #0, 12
    3ebc:	add	ip, ip, #266240	; 0x41000
    3ec0:	ldr	pc, [ip, #468]!	; 0x1d4

00003ec4 <readstat_value_is_defined_missing@plt>:
    3ec4:	add	ip, pc, #0, 12
    3ec8:	add	ip, ip, #266240	; 0x41000
    3ecc:	ldr	pc, [ip, #460]!	; 0x1cc

00003ed0 <ones_to_twos_complement4@plt>:
    3ed0:	add	ip, pc, #0, 12
    3ed4:	add	ip, ip, #266240	; 0x41000
    3ed8:	ldr	pc, [ip, #452]!	; 0x1c4

00003edc <ones_to_twos_complement2@plt>:
    3edc:	add	ip, pc, #0, 12
    3ee0:	add	ip, ip, #266240	; 0x41000
    3ee4:	ldr	pc, [ip, #444]!	; 0x1bc

00003ee8 <sav_ctx_free@plt>:
    3ee8:	add	ip, pc, #0, 12
    3eec:	add	ip, ip, #266240	; 0x41000
    3ef0:	ldr	pc, [ip, #436]!	; 0x1b4

00003ef4 <memcpy@plt>:
    3ef4:	add	ip, pc, #0, 12
    3ef8:	add	ip, ip, #266240	; 0x41000
    3efc:	ldr	pc, [ip, #428]!	; 0x1ac

00003f00 <spss_parse_format@plt>:
    3f00:	add	ip, pc, #0, 12
    3f04:	add	ip, ip, #266240	; 0x41000
    3f08:	ldr	pc, [ip, #420]!	; 0x1a4

00003f0c <submit_columns@plt>:
    3f0c:	add	ip, pc, #0, 12
    3f10:	add	ip, ip, #266240	; 0x41000
    3f14:	ldr	pc, [ip, #412]!	; 0x19c

00003f18 <readstat_variable_get_missing_range_lo@plt>:
    3f18:	add	ip, pc, #0, 12
    3f1c:	add	ip, ip, #266240	; 0x41000
    3f20:	ldr	pc, [ip, #404]!	; 0x194

00003f24 <readstat_insert_string_ref@plt>:
    3f24:	add	ip, pc, #0, 12
    3f28:	add	ip, ip, #266240	; 0x41000
    3f2c:	ldr	pc, [ip, #396]!	; 0x18c

00003f30 <time@plt>:
    3f30:	add	ip, pc, #0, 12
    3f34:	add	ip, ip, #266240	; 0x41000
    3f38:	ldr	pc, [ip, #388]!	; 0x184

00003f3c <readstat_begin_writing_file@plt>:
    3f3c:	add	ip, pc, #0, 12
    3f40:	add	ip, ip, #266240	; 0x41000
    3f44:	ldr	pc, [ip, #380]!	; 0x17c

00003f48 <lseek@plt>:
    3f48:	add	ip, pc, #0, 12
    3f4c:	add	ip, ip, #266240	; 0x41000
    3f50:	ldr	pc, [ip, #372]!	; 0x174

00003f54 <unistd_io_init@plt>:
    3f54:	add	ip, pc, #0, 12
    3f58:	add	ip, ip, #266240	; 0x41000
    3f5c:	ldr	pc, [ip, #364]!	; 0x16c

00003f60 <pow@plt>:
    3f60:	add	ip, pc, #0, 12
    3f64:	add	ip, ip, #266240	; 0x41000
    3f68:	ldr	pc, [ip, #356]!	; 0x164

00003f6c <uncompress@plt>:
    3f6c:	add	ip, pc, #0, 12
    3f70:	add	ip, ip, #266240	; 0x41000
    3f74:	ldr	pc, [ip, #348]!	; 0x15c

00003f78 <memcmp@plt>:
    3f78:	add	ip, pc, #0, 12
    3f7c:	add	ip, ip, #266240	; 0x41000
    3f80:	ldr	pc, [ip, #340]!	; 0x154

00003f84 <readstat_string_value@plt>:
    3f84:	add	ip, pc, #0, 12
    3f88:	add	ip, ip, #266240	; 0x41000
    3f8c:	ldr	pc, [ip, #332]!	; 0x14c

00003f90 <readstat_schema_free@plt>:
    3f90:	add	ip, pc, #0, 12
    3f94:	add	ip, ip, #266240	; 0x41000
    3f98:	ldr	pc, [ip, #324]!	; 0x144

00003f9c <readstat_calloc@plt>:
    3f9c:	add	ip, pc, #0, 12
    3fa0:	add	ip, ip, #266240	; 0x41000
    3fa4:	ldr	pc, [ip, #316]!	; 0x13c

00003fa8 <ck_str_hash_lookup@plt>:
    3fa8:	add	ip, pc, #0, 12
    3fac:	add	ip, ip, #266240	; 0x41000
    3fb0:	ldr	pc, [ip, #308]!	; 0x134

00003fb4 <sav_compressed_row_bound@plt>:
    3fb4:	add	ip, pc, #0, 12
    3fb8:	add	ip, ip, #266240	; 0x41000
    3fbc:	ldr	pc, [ip, #300]!	; 0x12c

00003fc0 <ck_hash_table_grow@plt>:
    3fc0:	add	ip, pc, #0, 12
    3fc4:	add	ip, ip, #266240	; 0x41000
    3fc8:	ldr	pc, [ip, #292]!	; 0x124

00003fcc <realloc@plt>:
    3fcc:	add	ip, pc, #0, 12
    3fd0:	add	ip, ip, #266240	; 0x41000
    3fd4:	ldr	pc, [ip, #284]!	; 0x11c

00003fd8 <cnxptiee@plt>:
    3fd8:	add	ip, pc, #0, 12
    3fdc:	add	ip, ip, #266240	; 0x41000
    3fe0:	ldr	pc, [ip, #276]!	; 0x114

00003fe4 <read_version_and_timestamp@plt>:
    3fe4:	add	ip, pc, #0, 12
    3fe8:	add	ip, ip, #266240	; 0x41000
    3fec:	ldr	pc, [ip, #268]!	; 0x10c

00003ff0 <readstat_write_zeros@plt>:
    3ff0:	add	ip, pc, #0, 12
    3ff4:	add	ip, ip, #266240	; 0x41000
    3ff8:	ldr	pc, [ip, #260]!	; 0x104

00003ffc <strcasecmp@plt>:
    3ffc:	add	ip, pc, #0, 12
    4000:	add	ip, ip, #266240	; 0x41000
    4004:	ldr	pc, [ip, #252]!	; 0xfc

00004008 <readstat_copy_quoted@plt>:
    4008:	add	ip, pc, #0, 12
    400c:	add	ip, ip, #266240	; 0x41000
    4010:	ldr	pc, [ip, #244]!	; 0xf4

00004014 <deflate@plt>:
    4014:	add	ip, pc, #0, 12
    4018:	add	ip, ip, #266240	; 0x41000
    401c:	ldr	pc, [ip, #236]!	; 0xec

00004020 <submit_value_label@plt>:
    4020:	add	ip, pc, #0, 12
    4024:	add	ip, ip, #266240	; 0x41000
    4028:	ldr	pc, [ip, #228]!	; 0xe4

0000402c <sav_ctx_init@plt>:
    402c:	add	ip, pc, #0, 12
    4030:	add	ip, ip, #266240	; 0x41000
    4034:	ldr	pc, [ip, #220]!	; 0xdc

00004038 <ck_str_n_hash_lookup@plt>:
    4038:	add	ip, pc, #0, 12
    403c:	add	ip, ip, #266240	; 0x41000
    4040:	ldr	pc, [ip, #212]!	; 0xd4

00004044 <spss_measure_from_readstat_measure@plt>:
    4044:	add	ip, pc, #0, 12
    4048:	add	ip, ip, #266240	; 0x41000
    404c:	ldr	pc, [ip, #204]!	; 0xcc

00004050 <sas_rle_decompress@plt>:
    4050:	add	ip, pc, #0, 12
    4054:	add	ip, ip, #266240	; 0x41000
    4058:	ldr	pc, [ip, #196]!	; 0xc4

0000405c <sav_parse_date@plt>:
    405c:	add	ip, pc, #0, 12
    4060:	add	ip, ip, #266240	; 0x41000
    4064:	ldr	pc, [ip, #188]!	; 0xbc

00004068 <xport_namestr_bswap@plt>:
    4068:	add	ip, pc, #0, 12
    406c:	add	ip, ip, #266240	; 0x41000
    4070:	ldr	pc, [ip, #180]!	; 0xb4

00004074 <zsav_current_block@plt>:
    4074:	add	ip, pc, #0, 12
    4078:	add	ip, ip, #266240	; 0x41000
    407c:	ldr	pc, [ip, #172]!	; 0xac

00004080 <zsav_ctx_init@plt>:
    4080:	add	ip, pc, #0, 12
    4084:	add	ip, ip, #266240	; 0x41000
    4088:	ldr	pc, [ip, #164]!	; 0xa4

0000408c <sas_write_header@plt>:
    408c:	add	ip, pc, #0, 12
    4090:	add	ip, ip, #266240	; 0x41000
    4094:	ldr	pc, [ip, #156]!	; 0x9c

00004098 <strtof@plt>:
    4098:	add	ip, pc, #0, 12
    409c:	add	ip, ip, #266240	; 0x41000
    40a0:	ldr	pc, [ip, #148]!	; 0x94

000040a4 <readstat_schema_find_or_create_entry@plt>:
    40a4:	add	ip, pc, #0, 12
    40a8:	add	ip, ip, #266240	; 0x41000
    40ac:	ldr	pc, [ip, #140]!	; 0x8c

000040b0 <readstat_value_type_class@plt>:
    40b0:	add	ip, pc, #0, 12
    40b4:	add	ip, ip, #266240	; 0x41000
    40b8:	ldr	pc, [ip, #132]!	; 0x84

000040bc <readstat_set_io_ctx@plt>:
    40bc:	add	ip, pc, #0, 12
    40c0:	add	ip, ip, #266240	; 0x41000
    40c4:	ldr	pc, [ip, #124]!	; 0x7c

000040c8 <spss_format_for_variable@plt>:
    40c8:	add	ip, pc, #0, 12
    40cc:	add	ip, ip, #266240	; 0x41000
    40d0:	ldr	pc, [ip, #116]!	; 0x74

000040d4 <readstat_parser_free@plt>:
    40d4:	add	ip, pc, #0, 12
    40d8:	add	ip, ip, #266240	; 0x41000
    40dc:	ldr	pc, [ip, #108]!	; 0x6c

000040e0 <malloc@plt>:
    40e0:	add	ip, pc, #0, 12
    40e4:	add	ip, ip, #266240	; 0x41000
    40e8:	ldr	pc, [ip, #100]!	; 0x64

000040ec <zsav_add_block@plt>:
    40ec:	add	ip, pc, #0, 12
    40f0:	add	ip, ip, #266240	; 0x41000
    40f4:	ldr	pc, [ip, #92]!	; 0x5c

000040f8 <deflateInit_@plt>:
    40f8:	add	ip, pc, #0, 12
    40fc:	add	ip, ip, #266240	; 0x41000
    4100:	ldr	pc, [ip, #84]!	; 0x54

00004104 <iconv_open@plt>:
    4104:	add	ip, pc, #0, 12
    4108:	add	ip, ip, #266240	; 0x41000
    410c:	ldr	pc, [ip, #76]!	; 0x4c

00004110 <strerror@plt>:
    4110:	add	ip, pc, #0, 12
    4114:	add	ip, ip, #266240	; 0x41000
    4118:	ldr	pc, [ip, #68]!	; 0x44

0000411c <sas_validate_tag@plt>:
    411c:	add	ip, pc, #0, 12
    4120:	add	ip, ip, #266240	; 0x41000
    4124:	ldr	pc, [ip, #60]!	; 0x3c

00004128 <readstat_write_string@plt>:
    4128:	add	ip, pc, #0, 12
    412c:	add	ip, ip, #266240	; 0x41000
    4130:	ldr	pc, [ip, #52]!	; 0x34

00004134 <localtime@plt>:
    4134:	add	ip, pc, #0, 12
    4138:	add	ip, ip, #266240	; 0x41000
    413c:	ldr	pc, [ip, #44]!	; 0x2c

00004140 <__ctype_tolower_loc@plt>:
    4140:	add	ip, pc, #0, 12
    4144:	add	ip, ip, #266240	; 0x41000
    4148:	ldr	pc, [ip, #36]!	; 0x24

0000414c <modf@plt>:
    414c:	add	ip, pc, #0, 12
    4150:	add	ip, ip, #266240	; 0x41000
    4154:	ldr	pc, [ip, #28]!

00004158 <__ctype_toupper_loc@plt>:
    4158:	add	ip, pc, #0, 12
    415c:	add	ip, ip, #266240	; 0x41000
    4160:	ldr	pc, [ip, #20]!

00004164 <ck_hash_table_init@plt>:
    4164:	add	ip, pc, #0, 12
    4168:	add	ip, ip, #266240	; 0x41000
    416c:	ldr	pc, [ip, #12]!

00004170 <__gmon_start__@plt>:
    4170:	add	ip, pc, #0, 12
    4174:	add	ip, ip, #266240	; 0x41000
    4178:	ldr	pc, [ip, #4]!

0000417c <open@plt>:
    417c:	add	ip, pc, #0, 12
    4180:	add	ip, ip, #64, 20	; 0x40000
    4184:	ldr	pc, [ip, #4092]!	; 0xffc

00004188 <readstat_double_value@plt>:
    4188:	add	ip, pc, #0, 12
    418c:	add	ip, ip, #64, 20	; 0x40000
    4190:	ldr	pc, [ip, #4084]!	; 0xff4

00004194 <get_native@plt>:
    4194:	add	ip, pc, #0, 12
    4198:	add	ip, ip, #64, 20	; 0x40000
    419c:	ldr	pc, [ip, #4076]!	; 0xfec

000041a0 <dta_ctx_init@plt>:
    41a0:	add	ip, pc, #0, 12
    41a4:	add	ip, ip, #64, 20	; 0x40000
    41a8:	ldr	pc, [ip, #4068]!	; 0xfe4

000041ac <readstat_variable_get_type@plt>:
    41ac:	add	ip, pc, #0, 12
    41b0:	add	ip, ip, #64, 20	; 0x40000
    41b4:	ldr	pc, [ip, #4060]!	; 0xfdc

000041b8 <dta_type_info@plt>:
    41b8:	add	ip, pc, #0, 12
    41bc:	add	ip, ip, #64, 20	; 0x40000
    41c0:	ldr	pc, [ip, #4052]!	; 0xfd4

000041c4 <sav_parse_long_variable_names_record@plt>:
    41c4:	add	ip, pc, #0, 12
    41c8:	add	ip, ip, #64, 20	; 0x40000
    41cc:	ldr	pc, [ip, #4044]!	; 0xfcc

000041d0 <strlen@plt>:
    41d0:	add	ip, pc, #0, 12
    41d4:	add	ip, ip, #64, 20	; 0x40000
    41d8:	ldr	pc, [ip, #4036]!	; 0xfc4

000041dc <spss_varinfo_compare@plt>:
    41dc:	add	ip, pc, #0, 12
    41e0:	add	ip, ip, #64, 20	; 0x40000
    41e4:	ldr	pc, [ip, #4028]!	; 0xfbc

000041e8 <sav_decompress_row@plt>:
    41e8:	add	ip, pc, #0, 12
    41ec:	add	ip, ip, #64, 20	; 0x40000
    41f0:	ldr	pc, [ip, #4020]!	; 0xfb4

000041f4 <readstat_variable_get_display_width@plt>:
    41f4:	add	ip, pc, #0, 12
    41f8:	add	ip, ip, #64, 20	; 0x40000
    41fc:	ldr	pc, [ip, #4012]!	; 0xfac

00004200 <readstat_malloc@plt>:
    4200:	add	ip, pc, #0, 12
    4204:	add	ip, ip, #64, 20	; 0x40000
    4208:	ldr	pc, [ip, #4004]!	; 0xfa4

0000420c <readstat_convert@plt>:
    420c:	add	ip, pc, #0, 12
    4210:	add	ip, ip, #64, 20	; 0x40000
    4214:	ldr	pc, [ip, #3996]!	; 0xf9c

00004218 <ck_hash_table_free@plt>:
    4218:	add	ip, pc, #0, 12
    421c:	add	ip, ip, #64, 20	; 0x40000
    4220:	ldr	pc, [ip, #3988]!	; 0xf94

00004224 <readstat_por_parse_double@plt>:
    4224:	add	ip, pc, #0, 12
    4228:	add	ip, ip, #64, 20	; 0x40000
    422c:	ldr	pc, [ip, #3980]!	; 0xf8c

00004230 <por_utf8_encode@plt>:
    4230:	add	ip, pc, #0, 12
    4234:	add	ip, ip, #64, 20	; 0x40000
    4238:	ldr	pc, [ip, #3972]!	; 0xf84

0000423c <__errno_location@plt>:
    423c:	add	ip, pc, #0, 12
    4240:	add	ip, ip, #64, 20	; 0x40000
    4244:	ldr	pc, [ip, #3964]!	; 0xf7c

00004248 <spss_init_variable_for_info@plt>:
    4248:	add	ip, pc, #0, 12
    424c:	add	ip, ip, #64, 20	; 0x40000
    4250:	ldr	pc, [ip, #3956]!	; 0xf74

00004254 <snprintf@plt>:
    4254:	add	ip, pc, #0, 12
    4258:	add	ip, ip, #64, 20	; 0x40000
    425c:	ldr	pc, [ip, #3948]!	; 0xf6c

00004260 <__isoc99_sscanf@plt>:
    4260:	add	ip, pc, #0, 12
    4264:	add	ip, ip, #64, 20	; 0x40000
    4268:	ldr	pc, [ip, #3940]!	; 0xf64

0000426c <ck_str_n_hash_insert@plt>:
    426c:	add	ip, pc, #0, 12
    4270:	add	ip, ip, #64, 20	; 0x40000
    4274:	ldr	pc, [ip, #3932]!	; 0xf5c

00004278 <memset@plt>:
    4278:	add	ip, pc, #0, 12
    427c:	add	ip, ip, #64, 20	; 0x40000
    4280:	ldr	pc, [ip, #3924]!	; 0xf54

00004284 <spss_64bit_value@plt>:
    4284:	add	ip, pc, #0, 12
    4288:	add	ip, ip, #64, 20	; 0x40000
    428c:	ldr	pc, [ip, #3916]!	; 0xf4c

00004290 <strncpy@plt>:
    4290:	add	ip, pc, #0, 12
    4294:	add	ip, ip, #64, 20	; 0x40000
    4298:	ldr	pc, [ip, #3908]!	; 0xf44

0000429c <readstat_variable_get_storage_width@plt>:
    429c:	add	ip, pc, #0, 12
    42a0:	add	ip, ip, #64, 20	; 0x40000
    42a4:	ldr	pc, [ip, #3900]!	; 0xf3c

000042a8 <sav_parse_very_long_string_record@plt>:
    42a8:	add	ip, pc, #0, 12
    42ac:	add	ip, ip, #64, 20	; 0x40000
    42b0:	ldr	pc, [ip, #3892]!	; 0xf34

000042b4 <readstat_realloc@plt>:
    42b4:	add	ip, pc, #0, 12
    42b8:	add	ip, ip, #64, 20	; 0x40000
    42bc:	ldr	pc, [ip, #3884]!	; 0xf2c

000042c0 <dta_parse_timestamp@plt>:
    42c0:	add	ip, pc, #0, 12
    42c4:	add	ip, ip, #64, 20	; 0x40000
    42c8:	ldr	pc, [ip, #3876]!	; 0xf24

000042cc <strtod@plt>:
    42cc:	add	ip, pc, #0, 12
    42d0:	add	ip, ip, #64, 20	; 0x40000
    42d4:	ldr	pc, [ip, #3868]!	; 0xf1c

000042d8 <readstat_variable_get_missing_ranges_count@plt>:
    42d8:	add	ip, pc, #0, 12
    42dc:	add	ip, ip, #64, 20	; 0x40000
    42e0:	ldr	pc, [ip, #3860]!	; 0xf14

000042e4 <deflateEnd@plt>:
    42e4:	add	ip, pc, #0, 12
    42e8:	add	ip, ip, #64, 20	; 0x40000
    42ec:	ldr	pc, [ip, #3852]!	; 0xf0c

000042f0 <readstat_variable_get_measure@plt>:
    42f0:	add	ip, pc, #0, 12
    42f4:	add	ip, ip, #64, 20	; 0x40000
    42f8:	ldr	pc, [ip, #3844]!	; 0xf04

000042fc <readstat_variable_get_missing_range_hi@plt>:
    42fc:	add	ip, pc, #0, 12
    4300:	add	ip, ip, #64, 20	; 0x40000
    4304:	ldr	pc, [ip, #3836]!	; 0xefc

00004308 <readstat_set_read_handler@plt>:
    4308:	add	ip, pc, #0, 12
    430c:	add	ip, ip, #64, 20	; 0x40000
    4310:	ldr	pc, [ip, #3828]!	; 0xef4

00004314 <readstat_value_type@plt>:
    4314:	add	ip, pc, #0, 12
    4318:	add	ip, ip, #64, 20	; 0x40000
    431c:	ldr	pc, [ip, #3820]!	; 0xeec

00004320 <sas_header_info_init@plt>:
    4320:	add	ip, pc, #0, 12
    4324:	add	ip, ip, #64, 20	; 0x40000
    4328:	ldr	pc, [ip, #3812]!	; 0xee4

0000432c <readstat_string_ref_init@plt>:
    432c:	add	ip, pc, #0, 12
    4330:	add	ip, ip, #64, 20	; 0x40000
    4334:	ldr	pc, [ip, #3804]!	; 0xedc

00004338 <readstat_variable_get_name@plt>:
    4338:	add	ip, pc, #0, 12
    433c:	add	ip, ip, #64, 20	; 0x40000
    4340:	ldr	pc, [ip, #3796]!	; 0xed4

00004344 <ones_to_twos_complement1@plt>:
    4344:	add	ip, pc, #0, 12
    4348:	add	ip, ip, #64, 20	; 0x40000
    434c:	ldr	pc, [ip, #3788]!	; 0xecc

00004350 <readstat_get_variable@plt>:
    4350:	add	ip, pc, #0, 12
    4354:	add	ip, ip, #64, 20	; 0x40000
    4358:	ldr	pc, [ip, #3780]!	; 0xec4

0000435c <spss_alignment_to_readstat_alignment@plt>:
    435c:	add	ip, pc, #0, 12
    4360:	add	ip, ip, #64, 20	; 0x40000
    4364:	ldr	pc, [ip, #3772]!	; 0xebc

00004368 <por_utf8_decode@plt>:
    4368:	add	ip, pc, #0, 12
    436c:	add	ip, ip, #64, 20	; 0x40000
    4370:	ldr	pc, [ip, #3764]!	; 0xeb4

00004374 <sas_read_header@plt>:
    4374:	add	ip, pc, #0, 12
    4378:	add	ip, ip, #64, 20	; 0x40000
    437c:	ldr	pc, [ip, #3756]!	; 0xeac

00004380 <spss_measure_to_readstat_measure@plt>:
    4380:	add	ip, pc, #0, 12
    4384:	add	ip, ip, #64, 20	; 0x40000
    4388:	ldr	pc, [ip, #3748]!	; 0xea4

0000438c <sas_subheader_remainder@plt>:
    438c:	add	ip, pc, #0, 12
    4390:	add	ip, ip, #64, 20	; 0x40000
    4394:	ldr	pc, [ip, #3740]!	; 0xe9c

00004398 <sas_read8@plt>:
    4398:	add	ip, pc, #0, 12
    439c:	add	ip, ip, #64, 20	; 0x40000
    43a0:	ldr	pc, [ip, #3732]!	; 0xe94

000043a4 <sas_read2@plt>:
    43a4:	add	ip, pc, #0, 12
    43a8:	add	ip, ip, #64, 20	; 0x40000
    43ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000043b0 <readstat_copy_lower@plt>:
    43b0:	add	ip, pc, #0, 12
    43b4:	add	ip, ip, #64, 20	; 0x40000
    43b8:	ldr	pc, [ip, #3716]!	; 0xe84

000043bc <sprintf@plt>:
    43bc:	add	ip, pc, #0, 12
    43c0:	add	ip, ip, #64, 20	; 0x40000
    43c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000043c8 <sas_read4@plt>:
    43c8:	add	ip, pc, #0, 12
    43cc:	add	ip, ip, #64, 20	; 0x40000
    43d0:	ldr	pc, [ip, #3700]!	; 0xe74

000043d4 <readstat_variable_get_label@plt>:
    43d4:	add	ip, pc, #0, 12
    43d8:	add	ip, ip, #64, 20	; 0x40000
    43dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000043e0 <spss_format@plt>:
    43e0:	add	ip, pc, #0, 12
    43e4:	add	ip, ip, #64, 20	; 0x40000
    43e8:	ldr	pc, [ip, #3684]!	; 0xe64

000043ec <spss_varinfo_free@plt>:
    43ec:	add	ip, pc, #0, 12
    43f0:	add	ip, ip, #64, 20	; 0x40000
    43f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000043f8 <readstat_get_label_set@plt>:
    43f8:	add	ip, pc, #0, 12
    43fc:	add	ip, ip, #64, 20	; 0x40000
    4400:	ldr	pc, [ip, #3668]!	; 0xe54

00004404 <readstat_variable_get_alignment@plt>:
    4404:	add	ip, pc, #0, 12
    4408:	add	ip, ip, #64, 20	; 0x40000
    440c:	ldr	pc, [ip, #3660]!	; 0xe4c

00004410 <qsort@plt>:
    4410:	add	ip, pc, #0, 12
    4414:	add	ip, ip, #64, 20	; 0x40000
    4418:	ldr	pc, [ip, #3652]!	; 0xe44

0000441c <readstat_get_label_set_variable@plt>:
    441c:	add	ip, pc, #0, 12
    4420:	add	ip, ip, #64, 20	; 0x40000
    4424:	ldr	pc, [ip, #3644]!	; 0xe3c

00004428 <readstat_write_bytes@plt>:
    4428:	add	ip, pc, #0, 12
    442c:	add	ip, ip, #64, 20	; 0x40000
    4430:	ldr	pc, [ip, #3636]!	; 0xe34

00004434 <sav_compress_row@plt>:
    4434:	add	ip, pc, #0, 12
    4438:	add	ip, ip, #64, 20	; 0x40000
    443c:	ldr	pc, [ip, #3628]!	; 0xe2c

00004440 <readstat_set_close_handler@plt>:
    4440:	add	ip, pc, #0, 12
    4444:	add	ip, ip, #64, 20	; 0x40000
    4448:	ldr	pc, [ip, #3620]!	; 0xe24

0000444c <sas_fill_page@plt>:
    444c:	add	ip, pc, #0, 12
    4450:	add	ip, ip, #64, 20	; 0x40000
    4454:	ldr	pc, [ip, #3612]!	; 0xe1c

00004458 <sas_rle_compressed_len@plt>:
    4458:	add	ip, pc, #0, 12
    445c:	add	ip, ip, #64, 20	; 0x40000
    4460:	ldr	pc, [ip, #3604]!	; 0xe14

00004464 <por_ctx_init@plt>:
    4464:	add	ip, pc, #0, 12
    4468:	add	ip, ip, #64, 20	; 0x40000
    446c:	ldr	pc, [ip, #3596]!	; 0xe0c

00004470 <readstat_validate_variable@plt>:
    4470:	add	ip, pc, #0, 12
    4474:	add	ip, ip, #64, 20	; 0x40000
    4478:	ldr	pc, [ip, #3588]!	; 0xe04

0000447c <sas_assign_tag@plt>:
    447c:	add	ip, pc, #0, 12
    4480:	add	ip, ip, #64, 20	; 0x40000
    4484:	ldr	pc, [ip, #3580]!	; 0xdfc

00004488 <zsav_compress_row@plt>:
    4488:	add	ip, pc, #0, 12
    448c:	add	ip, ip, #64, 20	; 0x40000
    4490:	ldr	pc, [ip, #3572]!	; 0xdf4

00004494 <zsav_read_compressed_data@plt>:
    4494:	add	ip, pc, #0, 12
    4498:	add	ip, ip, #64, 20	; 0x40000
    449c:	ldr	pc, [ip, #3564]!	; 0xdec

000044a0 <readstat_get_value_label@plt>:
    44a0:	add	ip, pc, #0, 12
    44a4:	add	ip, ip, #64, 20	; 0x40000
    44a8:	ldr	pc, [ip, #3556]!	; 0xde4

000044ac <sas_rle_compress@plt>:
    44ac:	add	ip, pc, #0, 12
    44b0:	add	ip, ip, #64, 20	; 0x40000
    44b4:	ldr	pc, [ip, #3548]!	; 0xddc

000044b8 <readstat_write_line_padding@plt>:
    44b8:	add	ip, pc, #0, 12
    44bc:	add	ip, ip, #64, 20	; 0x40000
    44c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000044c4 <ck_str_hash_insert@plt>:
    44c4:	add	ip, pc, #0, 12
    44c8:	add	ip, ip, #64, 20	; 0x40000
    44cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000044d0 <strncmp@plt>:
    44d0:	add	ip, pc, #0, 12
    44d4:	add	ip, ip, #64, 20	; 0x40000
    44d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000044dc <byteswap_double@plt>:
    44dc:	add	ip, pc, #0, 12
    44e0:	add	ip, ip, #64, 20	; 0x40000
    44e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000044e8 <close@plt>:
    44e8:	add	ip, pc, #0, 12
    44ec:	add	ip, ip, #64, 20	; 0x40000
    44f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000044f4 <readstat_write_bytes_as_lines@plt>:
    44f4:	add	ip, pc, #0, 12
    44f8:	add	ip, ip, #64, 20	; 0x40000
    44fc:	ldr	pc, [ip, #3500]!	; 0xdac

00004500 <spss_missingness_for_info@plt>:
    4500:	add	ip, pc, #0, 12
    4504:	add	ip, ip, #64, 20	; 0x40000
    4508:	ldr	pc, [ip, #3492]!	; 0xda4

0000450c <handle_variables@plt>:
    450c:	add	ip, pc, #0, 12
    4510:	add	ip, ip, #64, 20	; 0x40000
    4514:	ldr	pc, [ip, #3484]!	; 0xd9c

00004518 <readstat_variable_get_type_class@plt>:
    4518:	add	ip, pc, #0, 12
    451c:	add	ip, ip, #64, 20	; 0x40000
    4520:	ldr	pc, [ip, #3476]!	; 0xd94

00004524 <readstat_write_space_padded_string@plt>:
    4524:	add	ip, pc, #0, 12
    4528:	add	ip, ip, #64, 20	; 0x40000
    452c:	ldr	pc, [ip, #3468]!	; 0xd8c

00004530 <dta_ctx_alloc@plt>:
    4530:	add	ip, pc, #0, 12
    4534:	add	ip, ip, #64, 20	; 0x40000
    4538:	ldr	pc, [ip, #3460]!	; 0xd84

Disassembly of section .text:

00004540 <call_weak_fn>:
    4540:	ldr	r3, [pc, #20]	; 455c <call_weak_fn+0x1c>
    4544:	ldr	r2, [pc, #20]	; 4560 <call_weak_fn+0x20>
    4548:	add	r3, pc, r3
    454c:	ldr	r2, [r3, r2]
    4550:	cmp	r2, #0
    4554:	bxeq	lr
    4558:	b	4170 <__gmon_start__@plt>
    455c:	.word	0x00040ab0
    4560:	.word	0x000002e4

00004564 <deregister_tm_clones>:
    4564:	ldr	r0, [pc, #44]	; 4598 <deregister_tm_clones+0x34>
    4568:	ldr	r3, [pc, #44]	; 459c <deregister_tm_clones+0x38>
    456c:	add	r0, pc, r0
    4570:	add	r3, pc, r3
    4574:	cmp	r3, r0
    4578:	ldr	r3, [pc, #32]	; 45a0 <deregister_tm_clones+0x3c>
    457c:	add	r3, pc, r3
    4580:	bxeq	lr
    4584:	ldr	r2, [pc, #24]	; 45a4 <deregister_tm_clones+0x40>
    4588:	ldr	r3, [r3, r2]
    458c:	cmp	r3, #0
    4590:	bxeq	lr
    4594:	bx	r3
    4598:	.word	0x000427a8
    459c:	.word	0x000427a4
    45a0:	.word	0x00040a7c
    45a4:	.word	0x000002cc

000045a8 <register_tm_clones>:
    45a8:	ldr	r0, [pc, #56]	; 45e8 <register_tm_clones+0x40>
    45ac:	ldr	r3, [pc, #56]	; 45ec <register_tm_clones+0x44>
    45b0:	add	r0, pc, r0
    45b4:	add	r3, pc, r3
    45b8:	sub	r1, r3, r0
    45bc:	ldr	r3, [pc, #44]	; 45f0 <register_tm_clones+0x48>
    45c0:	asr	r1, r1, #2
    45c4:	add	r3, pc, r3
    45c8:	add	r1, r1, r1, lsr #31
    45cc:	asrs	r1, r1, #1
    45d0:	bxeq	lr
    45d4:	ldr	r2, [pc, #24]	; 45f4 <register_tm_clones+0x4c>
    45d8:	ldr	r3, [r3, r2]
    45dc:	cmp	r3, #0
    45e0:	bxeq	lr
    45e4:	bx	r3
    45e8:	.word	0x00042764
    45ec:	.word	0x00042760
    45f0:	.word	0x00040a34
    45f4:	.word	0x0000030c

000045f8 <__do_global_dtors_aux>:
    45f8:	ldr	r3, [pc, #76]	; 464c <__do_global_dtors_aux+0x54>
    45fc:	ldr	r2, [pc, #76]	; 4650 <__do_global_dtors_aux+0x58>
    4600:	add	r3, pc, r3
    4604:	add	r2, pc, r2
    4608:	ldrb	r3, [r3]
    460c:	cmp	r3, #0
    4610:	bxne	lr
    4614:	ldr	r3, [pc, #56]	; 4654 <__do_global_dtors_aux+0x5c>
    4618:	push	{r4, lr}
    461c:	ldr	r3, [r2, r3]
    4620:	cmp	r3, #0
    4624:	beq	4634 <__do_global_dtors_aux+0x3c>
    4628:	ldr	r3, [pc, #40]	; 4658 <__do_global_dtors_aux+0x60>
    462c:	ldr	r0, [pc, r3]
    4630:	bl	3de0 <__cxa_finalize@plt>
    4634:	bl	4564 <deregister_tm_clones>
    4638:	ldr	r3, [pc, #28]	; 465c <__do_global_dtors_aux+0x64>
    463c:	mov	r2, #1
    4640:	add	r3, pc, r3
    4644:	strb	r2, [r3]
    4648:	pop	{r4, pc}
    464c:	.word	0x00042714
    4650:	.word	0x000409f4
    4654:	.word	0x000002c8
    4658:	.word	0x00040cdc
    465c:	.word	0x000426d4

00004660 <frame_dummy>:
    4660:	b	45a8 <register_tm_clones>
    4664:	andeq	r0, r0, r0

00004668 <ck_hash_str>:
    4668:	strd	r4, [sp, #-12]!
    466c:	mov	r1, #0
    4670:	str	lr, [sp, #8]
    4674:	mov	lr, r0
    4678:	movw	r0, #5381	; 0x1505
    467c:	ldrb	ip, [lr], #1
    4680:	cmp	ip, #0
    4684:	beq	46b0 <ck_hash_str+0x48>
    4688:	lsl	r4, r0, #5
    468c:	lsl	r5, r1, #5
    4690:	adds	r2, r4, ip
    4694:	ldrb	ip, [lr], #1
    4698:	orr	r5, r5, r0, lsr #27
    469c:	adc	r3, r5, #0
    46a0:	adds	r0, r0, r2
    46a4:	adc	r1, r1, r3
    46a8:	cmp	ip, #0
    46ac:	bne	4688 <ck_hash_str+0x20>
    46b0:	ldrd	r4, [sp]
    46b4:	add	sp, sp, #8
    46b8:	pop	{pc}		; (ldr pc, [sp], #4)

000046bc <ck_str_n_hash_lookup>:
    46bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    46c0:	ldrd	r4, [r2, #8]
    46c4:	strd	r6, [sp, #8]
    46c8:	strd	r8, [sp, #16]
    46cc:	strd	sl, [sp, #24]
    46d0:	str	lr, [sp, #32]
    46d4:	sub	sp, sp, #12
    46d8:	orrs	r3, r4, r5
    46dc:	beq	4824 <ck_str_n_hash_lookup+0x168>
    46e0:	sub	r3, r1, #1
    46e4:	cmp	r3, #126	; 0x7e
    46e8:	bhi	4824 <ck_str_n_hash_lookup+0x168>
    46ec:	mov	r7, r0
    46f0:	movw	r3, #5381	; 0x1505
    46f4:	ldrb	lr, [r7], #1
    46f8:	mov	ip, #0
    46fc:	cmp	lr, #0
    4700:	beq	472c <ck_str_n_hash_lookup+0x70>
    4704:	lsl	r8, r3, #5
    4708:	lsl	r9, ip, #5
    470c:	adds	r4, r8, lr
    4710:	ldrb	lr, [r7], #1
    4714:	orr	r9, r9, r3, lsr #27
    4718:	adc	r5, r9, #0
    471c:	adds	r3, r3, r4
    4720:	adc	ip, ip, r5
    4724:	cmp	lr, #0
    4728:	bne	4704 <ck_str_n_hash_lookup+0x48>
    472c:	ldrd	r8, [r2]
    4730:	mov	fp, r1
    4734:	mov	sl, r0
    4738:	mov	r1, ip
    473c:	mov	r0, r3
    4740:	mov	r6, r2
    4744:	mov	r3, r9
    4748:	mov	r2, r8
    474c:	bl	25240 <__aeabi_uldivmod>
    4750:	mov	r4, r2
    4754:	mov	r5, r3
    4758:	subs	r0, r4, #1
    475c:	mov	r2, r8
    4760:	sbc	r1, r5, #0
    4764:	mov	r3, r9
    4768:	bl	25240 <__aeabi_uldivmod>
    476c:	cmp	r5, r3
    4770:	strd	r2, [sp]
    4774:	cmpeq	r4, r2
    4778:	beq	4824 <ck_str_n_hash_lookup+0x168>
    477c:	ldr	r7, [r6, #16]
    4780:	add	r6, r4, r4, lsl #5
    4784:	lsl	r6, r6, #2
    4788:	ldrb	r0, [r7, r6]
    478c:	add	r6, r7, r6
    4790:	cmp	r0, #0
    4794:	beq	4808 <ck_str_n_hash_lookup+0x14c>
    4798:	add	fp, fp, #1
    479c:	mov	r3, sl
    47a0:	mov	sl, fp
    47a4:	mov	fp, r3
    47a8:	b	47e4 <ck_str_n_hash_lookup+0x128>
    47ac:	adds	r0, r4, #1
    47b0:	adc	r1, r5, #0
    47b4:	bl	25240 <__aeabi_uldivmod>
    47b8:	mov	r4, r2
    47bc:	mov	r5, r3
    47c0:	add	r6, r2, r2, lsl #5
    47c4:	ldrd	r2, [sp]
    47c8:	cmp	r3, r5
    47cc:	cmpeq	r2, r4
    47d0:	beq	4824 <ck_str_n_hash_lookup+0x168>
    47d4:	ldrb	r0, [r7, r6, lsl #2]
    47d8:	add	r6, r7, r6, lsl #2
    47dc:	cmp	r0, #0
    47e0:	beq	4808 <ck_str_n_hash_lookup+0x14c>
    47e4:	mov	r2, sl
    47e8:	mov	r1, fp
    47ec:	mov	r0, r6
    47f0:	bl	44d0 <strncmp@plt>
    47f4:	cmp	r0, #0
    47f8:	mov	r2, r8
    47fc:	mov	r3, r9
    4800:	bne	47ac <ck_str_n_hash_lookup+0xf0>
    4804:	ldr	r0, [r6, #128]	; 0x80
    4808:	add	sp, sp, #12
    480c:	ldrd	r4, [sp]
    4810:	ldrd	r6, [sp, #8]
    4814:	ldrd	r8, [sp, #16]
    4818:	ldrd	sl, [sp, #24]
    481c:	add	sp, sp, #32
    4820:	pop	{pc}		; (ldr pc, [sp], #4)
    4824:	mov	r0, #0
    4828:	b	4808 <ck_str_n_hash_lookup+0x14c>

0000482c <ck_float_hash_lookup>:
    482c:	vmov	ip, s0
    4830:	mov	r3, #0
    4834:	strd	r4, [sp, #-20]!	; 0xffffffec
    4838:	mov	r2, r0
    483c:	strd	r6, [sp, #8]
    4840:	mov	r1, #5
    4844:	str	lr, [sp, #16]
    4848:	sub	sp, sp, #12
    484c:	mov	r0, sp
    4850:	strb	r3, [sp, #5]
    4854:	ubfx	r5, ip, #8, #8
    4858:	and	r6, ip, #1
    485c:	ubfx	r4, ip, #24, #8
    4860:	ubfx	lr, ip, #16, #8
    4864:	and	r3, r5, #2
    4868:	orr	ip, ip, #1
    486c:	and	r7, r4, #8
    4870:	orr	r5, r5, #2
    4874:	orr	r3, r3, r7
    4878:	orr	r4, r4, #8
    487c:	strb	ip, [sp]
    4880:	orr	r3, r3, r6
    4884:	and	r6, lr, #4
    4888:	strb	r5, [sp, #1]
    488c:	orr	r3, r3, r6
    4890:	orr	lr, lr, #4
    4894:	mvn	r3, r3, lsl #28
    4898:	strb	lr, [sp, #2]
    489c:	mvn	r3, r3, lsr #28
    48a0:	strb	r4, [sp, #3]
    48a4:	strb	r3, [sp, #4]
    48a8:	bl	4038 <ck_str_n_hash_lookup@plt>
    48ac:	add	sp, sp, #12
    48b0:	ldrd	r4, [sp]
    48b4:	ldrd	r6, [sp, #8]
    48b8:	add	sp, sp, #16
    48bc:	pop	{pc}		; (ldr pc, [sp], #4)

000048c0 <ck_double_hash_lookup>:
    48c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    48c4:	mov	r3, #0
    48c8:	mvn	r5, #15
    48cc:	strd	r6, [sp, #8]
    48d0:	mov	r2, r0
    48d4:	mov	r1, #10
    48d8:	vmov	r6, r7, d0
    48dc:	strd	r8, [sp, #16]
    48e0:	str	sl, [sp, #24]
    48e4:	str	lr, [sp, #28]
    48e8:	sub	sp, sp, #16
    48ec:	add	r0, sp, #4
    48f0:	strb	r3, [sp, #14]
    48f4:	ubfx	lr, r6, #24, #8
    48f8:	mov	r3, r7
    48fc:	uxtb	sl, r6
    4900:	ubfx	r9, r3, #24, #8
    4904:	uxtb	r7, r7
    4908:	and	r4, lr, #8
    490c:	orr	lr, lr, #8
    4910:	ubfx	r8, r6, #8, #8
    4914:	ubfx	ip, r6, #16, #8
    4918:	strb	lr, [sp, #7]
    491c:	and	lr, sl, #1
    4920:	orr	sl, sl, #1
    4924:	orr	r4, lr, r4
    4928:	and	lr, r9, #8
    492c:	ubfx	r6, r3, #8, #8
    4930:	orr	r9, r9, #8
    4934:	strb	sl, [sp, #4]
    4938:	and	sl, r8, #2
    493c:	orr	r8, r8, #2
    4940:	ubfx	r3, r3, #16, #8
    4944:	orr	r4, r4, sl
    4948:	strb	r9, [sp, #11]
    494c:	and	r9, r7, #1
    4950:	orr	r7, r7, #1
    4954:	strb	r8, [sp, #5]
    4958:	and	r8, ip, #4
    495c:	orr	ip, ip, #4
    4960:	orr	lr, r9, lr
    4964:	orr	r4, r4, r8
    4968:	strb	ip, [sp, #6]
    496c:	and	ip, r3, #4
    4970:	orr	r4, r5, r4
    4974:	strb	r7, [sp, #8]
    4978:	and	r7, r6, #2
    497c:	orr	r3, r3, #4
    4980:	orr	lr, lr, r7
    4984:	orr	r6, r6, #2
    4988:	orr	ip, lr, ip
    498c:	orr	ip, r5, ip
    4990:	strb	r6, [sp, #9]
    4994:	strb	r3, [sp, #10]
    4998:	strb	r4, [sp, #12]
    499c:	strb	ip, [sp, #13]
    49a0:	bl	4038 <ck_str_n_hash_lookup@plt>
    49a4:	add	sp, sp, #16
    49a8:	ldrd	r4, [sp]
    49ac:	ldrd	r6, [sp, #8]
    49b0:	ldrd	r8, [sp, #16]
    49b4:	ldr	sl, [sp, #24]
    49b8:	add	sp, sp, #28
    49bc:	pop	{pc}		; (ldr pc, [sp], #4)

000049c0 <ck_str_hash_lookup>:
    49c0:	strd	r4, [sp, #-16]!
    49c4:	mov	r5, r1
    49c8:	mov	r4, r0
    49cc:	str	r6, [sp, #8]
    49d0:	str	lr, [sp, #12]
    49d4:	bl	41d0 <strlen@plt>
    49d8:	cmp	r0, #127	; 0x7f
    49dc:	mov	r2, r5
    49e0:	ldr	r6, [sp, #8]
    49e4:	movcc	r1, r0
    49e8:	movcs	r1, #127	; 0x7f
    49ec:	mov	r0, r4
    49f0:	ldrd	r4, [sp]
    49f4:	ldr	lr, [sp, #12]
    49f8:	add	sp, sp, #16
    49fc:	b	4038 <ck_str_n_hash_lookup@plt>

00004a00 <ck_hash_table_free>:
    4a00:	str	r4, [sp, #-8]!
    4a04:	mov	r4, r0
    4a08:	ldr	r0, [r0, #16]
    4a0c:	str	lr, [sp, #4]
    4a10:	bl	3e94 <free@plt>
    4a14:	mov	r0, r4
    4a18:	ldr	r4, [sp]
    4a1c:	ldr	lr, [sp, #4]
    4a20:	add	sp, sp, #8
    4a24:	b	3e94 <free@plt>

00004a28 <ck_hash_table_wipe>:
    4a28:	ldr	r2, [r0]
    4a2c:	mov	r1, #0
    4a30:	ldr	r0, [r0, #16]
    4a34:	add	r2, r2, r2, lsl #5
    4a38:	lsl	r2, r2, #2
    4a3c:	b	4278 <memset@plt>

00004a40 <ck_hash_table_init>:
    4a40:	strd	r4, [sp, #-16]!
    4a44:	mov	r5, r0
    4a48:	mov	r0, #24
    4a4c:	str	r6, [sp, #8]
    4a50:	str	lr, [sp, #12]
    4a54:	bl	40e0 <malloc@plt>
    4a58:	subs	r4, r0, #0
    4a5c:	beq	4aa0 <ck_hash_table_init+0x60>
    4a60:	add	r0, r5, r5, lsl #5
    4a64:	lsl	r5, r5, #1
    4a68:	lsl	r0, r0, #3
    4a6c:	bl	40e0 <malloc@plt>
    4a70:	cmp	r0, #0
    4a74:	mov	r3, r0
    4a78:	str	r0, [r4, #16]
    4a7c:	beq	4ab4 <ck_hash_table_init+0x74>
    4a80:	mov	r1, #0
    4a84:	mov	r2, #0
    4a88:	str	r5, [r4]
    4a8c:	mov	r3, #0
    4a90:	mov	r0, r4
    4a94:	str	r1, [r4, #4]
    4a98:	strd	r2, [r4, #8]
    4a9c:	bl	3dec <ck_hash_table_wipe@plt>
    4aa0:	mov	r0, r4
    4aa4:	ldrd	r4, [sp]
    4aa8:	ldr	r6, [sp, #8]
    4aac:	add	sp, sp, #12
    4ab0:	pop	{pc}		; (ldr pc, [sp], #4)
    4ab4:	mov	r0, r4
    4ab8:	mov	r4, r3
    4abc:	bl	3e94 <free@plt>
    4ac0:	b	4aa0 <ck_hash_table_init+0x60>

00004ac4 <ck_hash_table_grow>:
    4ac4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4ac8:	mov	r1, #132	; 0x84
    4acc:	strd	r6, [sp, #8]
    4ad0:	strd	r8, [sp, #16]
    4ad4:	ldrd	r8, [r0]
    4ad8:	str	sl, [sp, #24]
    4adc:	mov	sl, r0
    4ae0:	ldr	r7, [r0, #16]
    4ae4:	str	lr, [sp, #28]
    4ae8:	adds	r4, r8, r8
    4aec:	mov	r0, r4
    4af0:	adc	r5, r9, r9
    4af4:	bl	3d2c <calloc@plt>
    4af8:	cmp	r0, #0
    4afc:	str	r0, [sl, #16]
    4b00:	beq	4b68 <ck_hash_table_grow+0xa4>
    4b04:	mov	r2, #0
    4b08:	orrs	r3, r8, r9
    4b0c:	strd	r4, [sl]
    4b10:	mov	r3, r2
    4b14:	strd	r2, [sl, #8]
    4b18:	beq	4b70 <ck_hash_table_grow+0xac>
    4b1c:	mov	r4, r2
    4b20:	add	r6, r7, #128	; 0x80
    4b24:	mov	r5, r2
    4b28:	b	4b44 <ck_hash_table_grow+0x80>
    4b2c:	adds	r4, r4, #1
    4b30:	add	r6, r6, #132	; 0x84
    4b34:	adc	r5, r5, #0
    4b38:	cmp	r5, r9
    4b3c:	cmpeq	r4, r8
    4b40:	beq	4b70 <ck_hash_table_grow+0xac>
    4b44:	ldrb	r3, [r6, #-128]	; 0xffffff80
    4b48:	cmp	r3, #0
    4b4c:	beq	4b2c <ck_hash_table_grow+0x68>
    4b50:	mov	r0, r6
    4b54:	mov	r2, sl
    4b58:	ldr	r1, [r0], #-128	; 0xffffff80
    4b5c:	bl	44c4 <ck_str_hash_insert@plt>
    4b60:	cmp	r0, #0
    4b64:	bne	4b2c <ck_hash_table_grow+0x68>
    4b68:	mvn	r0, #0
    4b6c:	b	4b7c <ck_hash_table_grow+0xb8>
    4b70:	mov	r0, r7
    4b74:	bl	3e94 <free@plt>
    4b78:	mov	r0, #0
    4b7c:	ldrd	r4, [sp]
    4b80:	ldrd	r6, [sp, #8]
    4b84:	ldrd	r8, [sp, #16]
    4b88:	ldr	sl, [sp, #24]
    4b8c:	add	sp, sp, #28
    4b90:	pop	{pc}		; (ldr pc, [sp], #4)

00004b94 <ck_str_n_hash_insert>:
    4b94:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4b98:	ldrd	r4, [r3]
    4b9c:	strd	r6, [sp, #8]
    4ba0:	strd	r8, [sp, #16]
    4ba4:	strd	sl, [sp, #24]
    4ba8:	str	lr, [sp, #32]
    4bac:	vpush	{d8}
    4bb0:	sub	sp, sp, #28
    4bb4:	orrs	ip, r4, r5
    4bb8:	strd	r4, [sp]
    4bbc:	beq	4d60 <ck_str_n_hash_insert+0x1cc>
    4bc0:	sub	ip, r1, #1
    4bc4:	cmp	ip, #126	; 0x7e
    4bc8:	bhi	4d60 <ck_str_n_hash_insert+0x1cc>
    4bcc:	mov	sl, r0
    4bd0:	str	r1, [sp, #16]
    4bd4:	mov	r7, r3
    4bd8:	ldrd	r0, [r3, #8]
    4bdc:	str	r2, [sp, #20]
    4be0:	bl	250f8 <__aeabi_ul2d>
    4be4:	vmov	d8, r0, r1
    4be8:	ldrd	r0, [sp]
    4bec:	bl	250f8 <__aeabi_ul2d>
    4bf0:	vmov	d6, r0, r1
    4bf4:	vldr	d7, [pc, #444]	; 4db8 <ck_str_n_hash_insert+0x224>
    4bf8:	vmul.f64	d7, d6, d7
    4bfc:	vcmpe.f64	d8, d7
    4c00:	vmrs	APSR_nzcv, fpscr
    4c04:	bge	4d9c <ck_str_n_hash_insert+0x208>
    4c08:	mov	lr, sl
    4c0c:	movw	r0, #5381	; 0x1505
    4c10:	ldrb	ip, [lr], #1
    4c14:	mov	r1, #0
    4c18:	cmp	ip, #0
    4c1c:	beq	4c48 <ck_str_n_hash_insert+0xb4>
    4c20:	lsl	r4, r0, #5
    4c24:	lsl	r5, r1, #5
    4c28:	adds	r2, r4, ip
    4c2c:	ldrb	ip, [lr], #1
    4c30:	orr	r5, r5, r0, lsr #27
    4c34:	adc	r3, r5, #0
    4c38:	adds	r0, r0, r2
    4c3c:	adc	r1, r1, r3
    4c40:	cmp	ip, #0
    4c44:	bne	4c20 <ck_str_n_hash_insert+0x8c>
    4c48:	ldrd	r8, [sp]
    4c4c:	mov	r2, r8
    4c50:	mov	r3, r9
    4c54:	bl	25240 <__aeabi_uldivmod>
    4c58:	mov	r4, r2
    4c5c:	mov	r5, r3
    4c60:	orrs	r3, r4, r5
    4c64:	beq	4d84 <ck_str_n_hash_insert+0x1f0>
    4c68:	subs	r0, r4, #1
    4c6c:	mov	r2, r8
    4c70:	mov	r3, r9
    4c74:	sbc	r1, r5, #0
    4c78:	bl	25240 <__aeabi_uldivmod>
    4c7c:	strd	r2, [sp, #8]
    4c80:	ldrd	r2, [sp, #8]
    4c84:	cmp	r5, r3
    4c88:	cmpeq	r4, r2
    4c8c:	beq	4d60 <ck_str_n_hash_insert+0x1cc>
    4c90:	ldr	r8, [r7, #16]
    4c94:	add	r6, r4, r4, lsl #5
    4c98:	lsl	r6, r6, #2
    4c9c:	ldrb	r3, [r8, r6]
    4ca0:	add	r9, r8, r6
    4ca4:	cmp	r3, #0
    4ca8:	beq	4d0c <ck_str_n_hash_insert+0x178>
    4cac:	ldr	r3, [sp, #16]
    4cb0:	add	fp, r3, #1
    4cb4:	mov	r2, fp
    4cb8:	mov	r1, sl
    4cbc:	mov	r0, r9
    4cc0:	bl	44d0 <strncmp@plt>
    4cc4:	cmp	r0, #0
    4cc8:	ldrd	r2, [sp]
    4ccc:	beq	4d24 <ck_str_n_hash_insert+0x190>
    4cd0:	adds	r0, r4, #1
    4cd4:	adc	r1, r5, #0
    4cd8:	bl	25240 <__aeabi_uldivmod>
    4cdc:	mov	r4, r2
    4ce0:	mov	r5, r3
    4ce4:	add	r6, r2, r2, lsl #5
    4ce8:	ldrd	r2, [sp, #8]
    4cec:	cmp	r5, r3
    4cf0:	cmpeq	r4, r2
    4cf4:	beq	4d60 <ck_str_n_hash_insert+0x1cc>
    4cf8:	ldrb	r3, [r8, r6, lsl #2]
    4cfc:	lsl	r6, r6, #2
    4d00:	add	r9, r8, r6
    4d04:	cmp	r3, #0
    4d08:	bne	4cb4 <ck_str_n_hash_insert+0x120>
    4d0c:	ldr	r3, [r7, #8]
    4d10:	ldr	r2, [r7, #12]
    4d14:	adds	r3, r3, #1
    4d18:	adc	r2, r2, #0
    4d1c:	str	r3, [r7, #8]
    4d20:	str	r2, [r7, #12]
    4d24:	ldr	r4, [sp, #16]
    4d28:	mov	r1, sl
    4d2c:	mov	r0, r9
    4d30:	mov	r2, r4
    4d34:	bl	3ef4 <memcpy@plt>
    4d38:	ldr	r3, [r7, #16]
    4d3c:	mov	r2, #0
    4d40:	mov	r0, #1
    4d44:	add	r3, r3, r6
    4d48:	strb	r2, [r3, r4]
    4d4c:	ldr	r3, [r7, #16]
    4d50:	add	r6, r3, r6
    4d54:	ldr	r3, [sp, #20]
    4d58:	str	r3, [r6, #128]	; 0x80
    4d5c:	b	4d64 <ck_str_n_hash_insert+0x1d0>
    4d60:	mov	r0, #0
    4d64:	add	sp, sp, #28
    4d68:	vpop	{d8}
    4d6c:	ldrd	r4, [sp]
    4d70:	ldrd	r6, [sp, #8]
    4d74:	ldrd	r8, [sp, #16]
    4d78:	ldrd	sl, [sp, #24]
    4d7c:	add	sp, sp, #32
    4d80:	pop	{pc}		; (ldr pc, [sp], #4)
    4d84:	ldrd	r2, [sp]
    4d88:	subs	r1, r2, #1
    4d8c:	sbc	r3, r3, #0
    4d90:	str	r1, [sp, #8]
    4d94:	str	r3, [sp, #12]
    4d98:	b	4c80 <ck_str_n_hash_insert+0xec>
    4d9c:	mov	r0, r7
    4da0:	bl	3fc0 <ck_hash_table_grow@plt>
    4da4:	cmn	r0, #1
    4da8:	beq	4d60 <ck_str_n_hash_insert+0x1cc>
    4dac:	ldrd	r2, [r7]
    4db0:	strd	r2, [sp]
    4db4:	b	4c08 <ck_str_n_hash_insert+0x74>
    4db8:	.word	0x00000000
    4dbc:	.word	0x3fe80000

00004dc0 <ck_float_hash_insert>:
    4dc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4dc4:	mov	r2, r0
    4dc8:	mov	r0, #0
    4dcc:	strd	r6, [sp, #8]
    4dd0:	mov	r3, r1
    4dd4:	mov	r1, #5
    4dd8:	str	lr, [sp, #20]
    4ddc:	vmov	lr, s0
    4de0:	str	r8, [sp, #16]
    4de4:	sub	sp, sp, #8
    4de8:	strb	r0, [sp, #5]
    4dec:	mov	r0, sp
    4df0:	ubfx	r6, lr, #8, #8
    4df4:	and	r7, lr, #1
    4df8:	ubfx	r5, lr, #24, #8
    4dfc:	ubfx	r4, lr, #16, #8
    4e00:	and	ip, r6, #2
    4e04:	orr	lr, lr, #1
    4e08:	and	r8, r5, #8
    4e0c:	orr	r6, r6, #2
    4e10:	orr	ip, ip, r8
    4e14:	orr	r5, r5, #8
    4e18:	strb	lr, [sp]
    4e1c:	orr	ip, ip, r7
    4e20:	and	r7, r4, #4
    4e24:	strb	r6, [sp, #1]
    4e28:	orr	ip, ip, r7
    4e2c:	orr	r4, r4, #4
    4e30:	mvn	ip, ip, lsl #28
    4e34:	strb	r4, [sp, #2]
    4e38:	mvn	ip, ip, lsr #28
    4e3c:	strb	r5, [sp, #3]
    4e40:	strb	ip, [sp, #4]
    4e44:	bl	426c <ck_str_n_hash_insert@plt>
    4e48:	add	sp, sp, #8
    4e4c:	ldrd	r4, [sp]
    4e50:	ldrd	r6, [sp, #8]
    4e54:	ldr	r8, [sp, #16]
    4e58:	add	sp, sp, #20
    4e5c:	pop	{pc}		; (ldr pc, [sp], #4)

00004e60 <ck_double_hash_insert>:
    4e60:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4e64:	mov	r3, r1
    4e68:	mov	r1, #0
    4e6c:	vmov	r4, r5, d0
    4e70:	mov	r2, r0
    4e74:	strd	r6, [sp, #8]
    4e78:	mvn	r6, #15
    4e7c:	str	lr, [sp, #32]
    4e80:	vmov	lr, s0
    4e84:	strd	r8, [sp, #16]
    4e88:	strd	sl, [sp, #24]
    4e8c:	sub	sp, sp, #20
    4e90:	add	r0, sp, #4
    4e94:	ubfx	r4, r4, #24, #8
    4e98:	mov	ip, r5
    4e9c:	uxtb	r8, r5
    4ea0:	ubfx	sl, ip, #24, #8
    4ea4:	strb	r1, [sp, #14]
    4ea8:	mov	r1, #10
    4eac:	and	r5, r4, #8
    4eb0:	orr	r4, r4, #8
    4eb4:	uxtb	r7, lr
    4eb8:	ubfx	r9, lr, #8, #8
    4ebc:	and	fp, r7, #1
    4ec0:	strb	r4, [sp, #7]
    4ec4:	and	r4, sl, #8
    4ec8:	orr	fp, fp, r5
    4ecc:	orr	r5, r7, #1
    4ed0:	ubfx	lr, lr, #16, #8
    4ed4:	orr	sl, sl, #8
    4ed8:	ubfx	r7, ip, #8, #8
    4edc:	strb	r5, [sp, #4]
    4ee0:	and	r5, r9, #2
    4ee4:	orr	r9, r9, #2
    4ee8:	ubfx	ip, ip, #16, #8
    4eec:	orr	r5, fp, r5
    4ef0:	strb	sl, [sp, #11]
    4ef4:	and	sl, r8, #1
    4ef8:	orr	r8, r8, #1
    4efc:	strb	r9, [sp, #5]
    4f00:	and	r9, lr, #4
    4f04:	orr	lr, lr, #4
    4f08:	orr	r4, sl, r4
    4f0c:	orr	r5, r5, r9
    4f10:	strb	lr, [sp, #6]
    4f14:	and	lr, ip, #4
    4f18:	orr	r5, r6, r5
    4f1c:	strb	r8, [sp, #8]
    4f20:	and	r8, r7, #2
    4f24:	orr	ip, ip, #4
    4f28:	orr	r4, r4, r8
    4f2c:	orr	r7, r7, #2
    4f30:	orr	lr, r4, lr
    4f34:	orr	lr, r6, lr
    4f38:	strb	r7, [sp, #9]
    4f3c:	strb	ip, [sp, #10]
    4f40:	strb	r5, [sp, #12]
    4f44:	strb	lr, [sp, #13]
    4f48:	bl	426c <ck_str_n_hash_insert@plt>
    4f4c:	add	sp, sp, #20
    4f50:	ldrd	r4, [sp]
    4f54:	ldrd	r6, [sp, #8]
    4f58:	ldrd	r8, [sp, #16]
    4f5c:	ldrd	sl, [sp, #24]
    4f60:	add	sp, sp, #32
    4f64:	pop	{pc}		; (ldr pc, [sp], #4)

00004f68 <ck_str_hash_insert>:
    4f68:	strd	r4, [sp, #-16]!
    4f6c:	mov	r5, r1
    4f70:	mov	r4, r0
    4f74:	str	r6, [sp, #8]
    4f78:	mov	r6, r2
    4f7c:	str	lr, [sp, #12]
    4f80:	bl	41d0 <strlen@plt>
    4f84:	cmp	r0, #127	; 0x7f
    4f88:	mov	r3, r6
    4f8c:	ldr	r6, [sp, #8]
    4f90:	mov	r2, r5
    4f94:	movcc	r1, r0
    4f98:	movcs	r1, #127	; 0x7f
    4f9c:	mov	r0, r4
    4fa0:	ldrd	r4, [sp]
    4fa4:	ldr	lr, [sp, #12]
    4fa8:	add	sp, sp, #16
    4fac:	b	426c <ck_str_n_hash_insert@plt>

00004fb0 <machine_is_little_endian>:
    4fb0:	mov	r0, #1
    4fb4:	bx	lr

00004fb8 <ones_to_twos_complement1>:
    4fb8:	bx	lr

00004fbc <ones_to_twos_complement2>:
    4fbc:	cmp	r0, #0
    4fc0:	addlt	r0, r0, #1
    4fc4:	sxthlt	r0, r0
    4fc8:	bx	lr

00004fcc <ones_to_twos_complement4>:
    4fcc:	cmp	r0, #0
    4fd0:	addlt	r0, r0, #1
    4fd4:	bx	lr

00004fd8 <twos_to_ones_complement1>:
    4fd8:	bx	lr

00004fdc <twos_to_ones_complement2>:
    4fdc:	cmp	r0, #0
    4fe0:	sublt	r0, r0, #1
    4fe4:	sxthlt	r0, r0
    4fe8:	bx	lr

00004fec <twos_to_ones_complement4>:
    4fec:	cmp	r0, #0
    4ff0:	sublt	r0, r0, #1
    4ff4:	bx	lr

00004ff8 <byteswap2>:
    4ff8:	rev16	r0, r0
    4ffc:	uxth	r0, r0
    5000:	bx	lr

00005004 <byteswap4>:
    5004:	rev	r0, r0
    5008:	bx	lr

0000500c <byteswap8>:
    500c:	rev	r3, r0
    5010:	rev	r0, r1
    5014:	mov	r1, r3
    5018:	bx	lr

0000501c <byteswap_float>:
    501c:	vmov	r0, s0
    5020:	str	r4, [sp, #-8]!
    5024:	str	lr, [sp, #4]
    5028:	bl	3d68 <byteswap4@plt>
    502c:	ldr	r4, [sp]
    5030:	add	sp, sp, #4
    5034:	vmov	s0, r0
    5038:	pop	{pc}		; (ldr pc, [sp], #4)

0000503c <byteswap_double>:
    503c:	vmov	r0, r1, d0
    5040:	str	r4, [sp, #-8]!
    5044:	str	lr, [sp, #4]
    5048:	bl	3d50 <byteswap8@plt>
    504c:	ldr	r4, [sp]
    5050:	add	sp, sp, #4
    5054:	vmov	d0, r0, r1
    5058:	pop	{pc}		; (ldr pc, [sp], #4)

0000505c <readstat_convert>:
    505c:	strd	r4, [sp, #-20]!	; 0xffffffec
    5060:	subs	ip, r3, #0
    5064:	strd	r6, [sp, #8]
    5068:	str	lr, [sp, #16]
    506c:	sub	sp, sp, #28
    5070:	ldr	r6, [sp, #48]	; 0x30
    5074:	str	r3, [sp, #8]
    5078:	str	r2, [sp, #12]
    507c:	beq	50b8 <readstat_convert+0x5c>
    5080:	sub	r4, ip, #1
    5084:	ldrb	r3, [r2, r4]
    5088:	add	r2, r2, r4
    508c:	cmp	r3, #32
    5090:	beq	50a8 <readstat_convert+0x4c>
    5094:	b	5188 <readstat_convert+0x12c>
    5098:	ldrb	ip, [r2, #-1]!
    509c:	cmp	ip, #32
    50a0:	bne	50bc <readstat_convert+0x60>
    50a4:	mov	r4, r3
    50a8:	cmp	r4, #0
    50ac:	sub	r3, r4, #1
    50b0:	str	r4, [sp, #8]
    50b4:	bne	5098 <readstat_convert+0x3c>
    50b8:	mov	r4, #0
    50bc:	cmp	r1, #0
    50c0:	beq	5154 <readstat_convert+0xf8>
    50c4:	cmp	r6, #0
    50c8:	mov	r5, r1
    50cc:	mov	r7, r0
    50d0:	beq	5130 <readstat_convert+0xd4>
    50d4:	add	r2, sp, #16
    50d8:	sub	ip, r1, #1
    50dc:	mov	r0, r6
    50e0:	add	r3, sp, #20
    50e4:	add	r1, sp, #12
    50e8:	str	r2, [sp]
    50ec:	add	r2, sp, #8
    50f0:	str	ip, [sp, #16]
    50f4:	str	r7, [sp, #20]
    50f8:	bl	3dbc <iconv@plt>
    50fc:	cmn	r0, #1
    5100:	beq	515c <readstat_convert+0x100>
    5104:	ldr	r3, [sp, #16]
    5108:	mov	r2, #0
    510c:	add	r1, r7, r5
    5110:	mov	r0, r2
    5114:	mvn	r3, r3
    5118:	strb	r2, [r1, r3]
    511c:	add	sp, sp, #28
    5120:	ldrd	r4, [sp]
    5124:	ldrd	r6, [sp, #8]
    5128:	add	sp, sp, #16
    512c:	pop	{pc}		; (ldr pc, [sp], #4)
    5130:	add	r3, r4, #1
    5134:	cmp	r3, r1
    5138:	bhi	5154 <readstat_convert+0xf8>
    513c:	mov	r2, r4
    5140:	ldr	r1, [sp, #12]
    5144:	bl	3ef4 <memcpy@plt>
    5148:	mov	r0, r6
    514c:	strb	r6, [r7, r4]
    5150:	b	511c <readstat_convert+0xc0>
    5154:	mov	r0, #19
    5158:	b	511c <readstat_convert+0xc0>
    515c:	bl	423c <__errno_location@plt>
    5160:	ldr	r3, [r0]
    5164:	cmp	r3, #7
    5168:	beq	5154 <readstat_convert+0xf8>
    516c:	cmp	r3, #84	; 0x54
    5170:	moveq	r0, #17
    5174:	beq	511c <readstat_convert+0xc0>
    5178:	cmp	r3, #22
    517c:	movne	r0, #16
    5180:	bne	511c <readstat_convert+0xc0>
    5184:	b	5104 <readstat_convert+0xa8>
    5188:	mov	r4, ip
    518c:	b	50bc <readstat_convert+0x60>

00005190 <readstat_error_message>:
    5190:	cmp	r0, #0
    5194:	beq	52d8 <readstat_error_message+0x148>
    5198:	cmp	r0, #1
    519c:	beq	52e8 <readstat_error_message+0x158>
    51a0:	cmp	r0, #2
    51a4:	beq	52f4 <readstat_error_message+0x164>
    51a8:	cmp	r0, #3
    51ac:	beq	52dc <readstat_error_message+0x14c>
    51b0:	cmp	r0, #4
    51b4:	beq	5300 <readstat_error_message+0x170>
    51b8:	cmp	r0, #5
    51bc:	beq	530c <readstat_error_message+0x17c>
    51c0:	cmp	r0, #6
    51c4:	beq	5318 <readstat_error_message+0x188>
    51c8:	cmp	r0, #7
    51cc:	beq	5324 <readstat_error_message+0x194>
    51d0:	cmp	r0, #8
    51d4:	beq	533c <readstat_error_message+0x1ac>
    51d8:	cmp	r0, #9
    51dc:	beq	5348 <readstat_error_message+0x1b8>
    51e0:	cmp	r0, #10
    51e4:	beq	5354 <readstat_error_message+0x1c4>
    51e8:	cmp	r0, #11
    51ec:	beq	5360 <readstat_error_message+0x1d0>
    51f0:	cmp	r0, #12
    51f4:	beq	5330 <readstat_error_message+0x1a0>
    51f8:	cmp	r0, #13
    51fc:	beq	536c <readstat_error_message+0x1dc>
    5200:	cmp	r0, #14
    5204:	beq	5378 <readstat_error_message+0x1e8>
    5208:	cmp	r0, #15
    520c:	beq	5384 <readstat_error_message+0x1f4>
    5210:	cmp	r0, #16
    5214:	beq	5390 <readstat_error_message+0x200>
    5218:	cmp	r0, #17
    521c:	beq	539c <readstat_error_message+0x20c>
    5220:	cmp	r0, #18
    5224:	beq	53a8 <readstat_error_message+0x218>
    5228:	cmp	r0, #19
    522c:	beq	53b4 <readstat_error_message+0x224>
    5230:	cmp	r0, #20
    5234:	beq	53c0 <readstat_error_message+0x230>
    5238:	cmp	r0, #21
    523c:	beq	53cc <readstat_error_message+0x23c>
    5240:	cmp	r0, #22
    5244:	beq	53d8 <readstat_error_message+0x248>
    5248:	cmp	r0, #23
    524c:	beq	53e4 <readstat_error_message+0x254>
    5250:	cmp	r0, #24
    5254:	beq	53f0 <readstat_error_message+0x260>
    5258:	cmp	r0, #25
    525c:	beq	53fc <readstat_error_message+0x26c>
    5260:	cmp	r0, #26
    5264:	beq	5408 <readstat_error_message+0x278>
    5268:	cmp	r0, #27
    526c:	beq	5414 <readstat_error_message+0x284>
    5270:	cmp	r0, #28
    5274:	beq	5420 <readstat_error_message+0x290>
    5278:	cmp	r0, #38	; 0x26
    527c:	beq	5438 <readstat_error_message+0x2a8>
    5280:	cmp	r0, #29
    5284:	beq	542c <readstat_error_message+0x29c>
    5288:	cmp	r0, #30
    528c:	beq	5450 <readstat_error_message+0x2c0>
    5290:	cmp	r0, #31
    5294:	beq	5444 <readstat_error_message+0x2b4>
    5298:	cmp	r0, #32
    529c:	beq	5474 <readstat_error_message+0x2e4>
    52a0:	cmp	r0, #33	; 0x21
    52a4:	beq	5468 <readstat_error_message+0x2d8>
    52a8:	cmp	r0, #34	; 0x22
    52ac:	beq	545c <readstat_error_message+0x2cc>
    52b0:	cmp	r0, #35	; 0x23
    52b4:	beq	54a4 <readstat_error_message+0x314>
    52b8:	cmp	r0, #36	; 0x24
    52bc:	beq	548c <readstat_error_message+0x2fc>
    52c0:	cmp	r0, #37	; 0x25
    52c4:	beq	5480 <readstat_error_message+0x2f0>
    52c8:	cmp	r0, #39	; 0x27
    52cc:	beq	5498 <readstat_error_message+0x308>
    52d0:	ldr	r0, [pc, #472]	; 54b0 <readstat_error_message+0x320>
    52d4:	add	r0, pc, r0
    52d8:	bx	lr
    52dc:	ldr	r0, [pc, #464]	; 54b4 <readstat_error_message+0x324>
    52e0:	add	r0, pc, r0
    52e4:	bx	lr
    52e8:	ldr	r0, [pc, #456]	; 54b8 <readstat_error_message+0x328>
    52ec:	add	r0, pc, r0
    52f0:	bx	lr
    52f4:	ldr	r0, [pc, #448]	; 54bc <readstat_error_message+0x32c>
    52f8:	add	r0, pc, r0
    52fc:	bx	lr
    5300:	ldr	r0, [pc, #440]	; 54c0 <readstat_error_message+0x330>
    5304:	add	r0, pc, r0
    5308:	bx	lr
    530c:	ldr	r0, [pc, #432]	; 54c4 <readstat_error_message+0x334>
    5310:	add	r0, pc, r0
    5314:	bx	lr
    5318:	ldr	r0, [pc, #424]	; 54c8 <readstat_error_message+0x338>
    531c:	add	r0, pc, r0
    5320:	bx	lr
    5324:	ldr	r0, [pc, #416]	; 54cc <readstat_error_message+0x33c>
    5328:	add	r0, pc, r0
    532c:	bx	lr
    5330:	ldr	r0, [pc, #408]	; 54d0 <readstat_error_message+0x340>
    5334:	add	r0, pc, r0
    5338:	bx	lr
    533c:	ldr	r0, [pc, #400]	; 54d4 <readstat_error_message+0x344>
    5340:	add	r0, pc, r0
    5344:	bx	lr
    5348:	ldr	r0, [pc, #392]	; 54d8 <readstat_error_message+0x348>
    534c:	add	r0, pc, r0
    5350:	bx	lr
    5354:	ldr	r0, [pc, #384]	; 54dc <readstat_error_message+0x34c>
    5358:	add	r0, pc, r0
    535c:	bx	lr
    5360:	ldr	r0, [pc, #376]	; 54e0 <readstat_error_message+0x350>
    5364:	add	r0, pc, r0
    5368:	bx	lr
    536c:	ldr	r0, [pc, #368]	; 54e4 <readstat_error_message+0x354>
    5370:	add	r0, pc, r0
    5374:	bx	lr
    5378:	ldr	r0, [pc, #360]	; 54e8 <readstat_error_message+0x358>
    537c:	add	r0, pc, r0
    5380:	bx	lr
    5384:	ldr	r0, [pc, #352]	; 54ec <readstat_error_message+0x35c>
    5388:	add	r0, pc, r0
    538c:	bx	lr
    5390:	ldr	r0, [pc, #344]	; 54f0 <readstat_error_message+0x360>
    5394:	add	r0, pc, r0
    5398:	bx	lr
    539c:	ldr	r0, [pc, #336]	; 54f4 <readstat_error_message+0x364>
    53a0:	add	r0, pc, r0
    53a4:	bx	lr
    53a8:	ldr	r0, [pc, #328]	; 54f8 <readstat_error_message+0x368>
    53ac:	add	r0, pc, r0
    53b0:	bx	lr
    53b4:	ldr	r0, [pc, #320]	; 54fc <readstat_error_message+0x36c>
    53b8:	add	r0, pc, r0
    53bc:	bx	lr
    53c0:	ldr	r0, [pc, #312]	; 5500 <readstat_error_message+0x370>
    53c4:	add	r0, pc, r0
    53c8:	bx	lr
    53cc:	ldr	r0, [pc, #304]	; 5504 <readstat_error_message+0x374>
    53d0:	add	r0, pc, r0
    53d4:	bx	lr
    53d8:	ldr	r0, [pc, #296]	; 5508 <readstat_error_message+0x378>
    53dc:	add	r0, pc, r0
    53e0:	bx	lr
    53e4:	ldr	r0, [pc, #288]	; 550c <readstat_error_message+0x37c>
    53e8:	add	r0, pc, r0
    53ec:	bx	lr
    53f0:	ldr	r0, [pc, #280]	; 5510 <readstat_error_message+0x380>
    53f4:	add	r0, pc, r0
    53f8:	bx	lr
    53fc:	ldr	r0, [pc, #272]	; 5514 <readstat_error_message+0x384>
    5400:	add	r0, pc, r0
    5404:	bx	lr
    5408:	ldr	r0, [pc, #264]	; 5518 <readstat_error_message+0x388>
    540c:	add	r0, pc, r0
    5410:	bx	lr
    5414:	ldr	r0, [pc, #256]	; 551c <readstat_error_message+0x38c>
    5418:	add	r0, pc, r0
    541c:	bx	lr
    5420:	ldr	r0, [pc, #248]	; 5520 <readstat_error_message+0x390>
    5424:	add	r0, pc, r0
    5428:	bx	lr
    542c:	ldr	r0, [pc, #240]	; 5524 <readstat_error_message+0x394>
    5430:	add	r0, pc, r0
    5434:	bx	lr
    5438:	ldr	r0, [pc, #232]	; 5528 <readstat_error_message+0x398>
    543c:	add	r0, pc, r0
    5440:	bx	lr
    5444:	ldr	r0, [pc, #224]	; 552c <readstat_error_message+0x39c>
    5448:	add	r0, pc, r0
    544c:	bx	lr
    5450:	ldr	r0, [pc, #216]	; 5530 <readstat_error_message+0x3a0>
    5454:	add	r0, pc, r0
    5458:	bx	lr
    545c:	ldr	r0, [pc, #208]	; 5534 <readstat_error_message+0x3a4>
    5460:	add	r0, pc, r0
    5464:	bx	lr
    5468:	ldr	r0, [pc, #200]	; 5538 <readstat_error_message+0x3a8>
    546c:	add	r0, pc, r0
    5470:	bx	lr
    5474:	ldr	r0, [pc, #192]	; 553c <readstat_error_message+0x3ac>
    5478:	add	r0, pc, r0
    547c:	bx	lr
    5480:	ldr	r0, [pc, #184]	; 5540 <readstat_error_message+0x3b0>
    5484:	add	r0, pc, r0
    5488:	bx	lr
    548c:	ldr	r0, [pc, #176]	; 5544 <readstat_error_message+0x3b4>
    5490:	add	r0, pc, r0
    5494:	bx	lr
    5498:	ldr	r0, [pc, #168]	; 5548 <readstat_error_message+0x3b8>
    549c:	add	r0, pc, r0
    54a0:	bx	lr
    54a4:	ldr	r0, [pc, #160]	; 554c <readstat_error_message+0x3bc>
    54a8:	add	r0, pc, r0
    54ac:	bx	lr
    54b0:	.word	0x00020174
    54b4:	.word	0x000201a8
    54b8:	.word	0x0002016c
    54bc:	.word	0x00020174
    54c0:	.word	0x000201a0
    54c4:	.word	0x000201d0
    54c8:	.word	0x000201f4
    54cc:	.word	0x00020210
    54d0:	.word	0x000202f8
    54d4:	.word	0x00020220
    54d8:	.word	0x00020248
    54dc:	.word	0x00020270
    54e0:	.word	0x00020294
    54e4:	.word	0x00020300
    54e8:	.word	0x0002030c
    54ec:	.word	0x0002036c
    54f0:	.word	0x0002037c
    54f4:	.word	0x000203a4
    54f8:	.word	0x000203e4
    54fc:	.word	0x00020428
    5500:	.word	0x0002046c
    5504:	.word	0x000204c4
    5508:	.word	0x00020514
    550c:	.word	0x00020564
    5510:	.word	0x000205a0
    5514:	.word	0x000205c8
    5518:	.word	0x000205f0
    551c:	.word	0x00020614
    5520:	.word	0x0002062c
    5524:	.word	0x00020674
    5528:	.word	0x00020644
    552c:	.word	0x000206c0
    5530:	.word	0x00020678
    5534:	.word	0x00020760
    5538:	.word	0x00020710
    553c:	.word	0x000206d0
    5540:	.word	0x000207a0
    5544:	.word	0x0001ff90
    5548:	.word	0x000207b8
    554c:	.word	0x0002074c

00005550 <unistd_open_handler>:
    5550:	str	r4, [sp, #-8]!
    5554:	mov	r4, r1
    5558:	mov	r1, #0
    555c:	str	lr, [sp, #4]
    5560:	bl	417c <open@plt>
    5564:	str	r0, [r4]
    5568:	ldr	r4, [sp]
    556c:	add	sp, sp, #4
    5570:	pop	{pc}		; (ldr pc, [sp], #4)

00005574 <unistd_close_handler>:
    5574:	ldr	r0, [r0]
    5578:	cmn	r0, #1
    557c:	bne	5588 <unistd_close_handler+0x14>
    5580:	mov	r0, #0
    5584:	bx	lr
    5588:	b	44e8 <close@plt>

0000558c <unistd_seek_handler>:
    558c:	cmp	r1, #2
    5590:	mov	ip, r1
    5594:	bhi	55b0 <unistd_seek_handler+0x24>
    5598:	ldr	r3, [pc, #24]	; 55b8 <unistd_seek_handler+0x2c>
    559c:	mov	r1, r0
    55a0:	ldr	r0, [r2]
    55a4:	add	r3, pc, r3
    55a8:	ldr	r2, [r3, ip, lsl #2]
    55ac:	b	3f48 <lseek@plt>
    55b0:	mvn	r0, #0
    55b4:	bx	lr
    55b8:	.word	0x000206d8

000055bc <unistd_read_handler>:
    55bc:	ldr	r3, [r2]
    55c0:	mov	r2, r1
    55c4:	mov	r1, r0
    55c8:	mov	r0, r3
    55cc:	b	3e10 <read@plt>

000055d0 <unistd_update_handler>:
    55d0:	strd	r4, [sp, #-16]!
    55d4:	subs	r5, r1, #0
    55d8:	str	r6, [sp, #8]
    55dc:	str	lr, [sp, #12]
    55e0:	sub	sp, sp, #8
    55e4:	str	r0, [sp, #4]
    55e8:	beq	5634 <unistd_update_handler+0x64>
    55ec:	mov	r6, r2
    55f0:	mov	r1, #0
    55f4:	ldr	r0, [r3]
    55f8:	mov	r2, #1
    55fc:	ldr	r4, [sp, #4]
    5600:	bl	3f48 <lseek@plt>
    5604:	cmn	r0, #1
    5608:	beq	564c <unistd_update_handler+0x7c>
    560c:	vmov	s15, r0
    5610:	mov	r0, r6
    5614:	vmov	s13, r4
    5618:	vcvt.f64.s32	d7, s15
    561c:	vcvt.f64.s32	d0, s13
    5620:	vdiv.f64	d0, d7, d0
    5624:	blx	r5
    5628:	cmp	r0, #0
    562c:	movne	r0, #4
    5630:	bne	5638 <unistd_update_handler+0x68>
    5634:	mov	r0, #0
    5638:	add	sp, sp, #8
    563c:	ldrd	r4, [sp]
    5640:	ldr	r6, [sp, #8]
    5644:	add	sp, sp, #12
    5648:	pop	{pc}		; (ldr pc, [sp], #4)
    564c:	mov	r0, #15
    5650:	b	5638 <unistd_update_handler+0x68>

00005654 <unistd_io_init>:
    5654:	strd	r4, [sp, #-16]!
    5658:	ldr	r4, [pc, #204]	; 572c <unistd_io_init+0xd8>
    565c:	str	r6, [sp, #8]
    5660:	mov	r6, r0
    5664:	ldr	r3, [pc, #196]	; 5730 <unistd_io_init+0xdc>
    5668:	str	lr, [sp, #12]
    566c:	add	r4, pc, r4
    5670:	ldr	r1, [r4, r3]
    5674:	bl	3d44 <readstat_set_open_handler@plt>
    5678:	subs	r5, r0, #0
    567c:	beq	5694 <unistd_io_init+0x40>
    5680:	mov	r0, r5
    5684:	ldrd	r4, [sp]
    5688:	ldr	r6, [sp, #8]
    568c:	add	sp, sp, #12
    5690:	pop	{pc}		; (ldr pc, [sp], #4)
    5694:	ldr	r3, [pc, #152]	; 5734 <unistd_io_init+0xe0>
    5698:	mov	r0, r6
    569c:	ldr	r1, [r4, r3]
    56a0:	bl	4440 <readstat_set_close_handler@plt>
    56a4:	subs	r5, r0, #0
    56a8:	bne	5680 <unistd_io_init+0x2c>
    56ac:	ldr	r3, [pc, #132]	; 5738 <unistd_io_init+0xe4>
    56b0:	mov	r0, r6
    56b4:	ldr	r1, [r4, r3]
    56b8:	bl	3d38 <readstat_set_seek_handler@plt>
    56bc:	subs	r5, r0, #0
    56c0:	bne	5680 <unistd_io_init+0x2c>
    56c4:	ldr	r3, [pc, #112]	; 573c <unistd_io_init+0xe8>
    56c8:	mov	r0, r6
    56cc:	ldr	r1, [r4, r3]
    56d0:	bl	4308 <readstat_set_read_handler@plt>
    56d4:	subs	r5, r0, #0
    56d8:	bne	5680 <unistd_io_init+0x2c>
    56dc:	ldr	r3, [pc, #92]	; 5740 <unistd_io_init+0xec>
    56e0:	mov	r0, r6
    56e4:	ldr	r1, [r4, r3]
    56e8:	bl	3e64 <readstat_set_update_handler@plt>
    56ec:	cmp	r0, #0
    56f0:	bne	5680 <unistd_io_init+0x2c>
    56f4:	mov	r1, #4
    56f8:	mov	r0, #1
    56fc:	bl	3d2c <calloc@plt>
    5700:	mov	r3, r0
    5704:	mvn	r2, #0
    5708:	mov	r1, r0
    570c:	mov	r0, r6
    5710:	str	r2, [r3]
    5714:	bl	40bc <readstat_set_io_ctx@plt>
    5718:	ldr	r3, [r6, #32]
    571c:	mov	r2, #1
    5720:	mov	r5, r0
    5724:	str	r2, [r3, #24]
    5728:	b	5680 <unistd_io_init+0x2c>
    572c:	.word	0x0003f98c
    5730:	.word	0x000002dc
    5734:	.word	0x00000308
    5738:	.word	0x00000304
    573c:	.word	0x000002c0
    5740:	.word	0x000002f8

00005744 <readstat_malloc>:
    5744:	movw	r3, #61439	; 0xefff
    5748:	movt	r3, #255	; 0xff
    574c:	sub	r2, r0, #1
    5750:	cmp	r2, r3
    5754:	bhi	575c <readstat_malloc+0x18>
    5758:	b	40e0 <malloc@plt>
    575c:	mov	r0, #0
    5760:	bx	lr

00005764 <readstat_calloc>:
    5764:	push	{lr}		; (str lr, [sp, #-4]!)
    5768:	mul	lr, r1, r0
    576c:	mov	ip, #61440	; 0xf000
    5770:	movt	ip, #255	; 0xff
    5774:	cmp	lr, ip
    5778:	bhi	57a0 <readstat_calloc+0x3c>
    577c:	sub	r2, r1, #1
    5780:	sub	r3, r0, #1
    5784:	movw	ip, #61439	; 0xefff
    5788:	movt	ip, #255	; 0xff
    578c:	cmp	r3, ip
    5790:	cmpls	r2, ip
    5794:	bhi	57a0 <readstat_calloc+0x3c>
    5798:	pop	{lr}		; (ldr lr, [sp], #4)
    579c:	b	3d2c <calloc@plt>
    57a0:	mov	r0, #0
    57a4:	pop	{pc}		; (ldr pc, [sp], #4)

000057a8 <readstat_realloc>:
    57a8:	movw	r3, #61439	; 0xefff
    57ac:	movt	r3, #255	; 0xff
    57b0:	sub	r2, r1, #1
    57b4:	cmp	r2, r3
    57b8:	bhi	57c0 <readstat_realloc+0x18>
    57bc:	b	3fcc <realloc@plt>
    57c0:	cmp	r0, #0
    57c4:	beq	57e4 <readstat_realloc+0x3c>
    57c8:	str	r4, [sp, #-8]!
    57cc:	str	lr, [sp, #4]
    57d0:	bl	3e94 <free@plt>
    57d4:	ldr	r4, [sp]
    57d8:	add	sp, sp, #4
    57dc:	mov	r0, #0
    57e0:	pop	{pc}		; (ldr pc, [sp], #4)
    57e4:	mov	r0, #0
    57e8:	bx	lr

000057ec <readstat_get_row_count>:
    57ec:	ldr	r0, [r0]
    57f0:	bx	lr

000057f4 <readstat_get_var_count>:
    57f4:	ldr	r0, [r0, #8]
    57f8:	bx	lr

000057fc <readstat_get_creation_time>:
    57fc:	ldr	r0, [r0, #16]
    5800:	bx	lr

00005804 <readstat_get_modified_time>:
    5804:	ldr	r0, [r0, #20]
    5808:	bx	lr

0000580c <readstat_get_file_format_version>:
    580c:	ldr	r0, [r0, #24]
    5810:	bx	lr

00005814 <readstat_get_file_format_is_64bit>:
    5814:	ldrb	r0, [r0, #52]	; 0x34
    5818:	and	r0, r0, #1
    581c:	bx	lr

00005820 <readstat_get_compression>:
    5820:	ldr	r0, [r0, #32]
    5824:	bx	lr

00005828 <readstat_get_endianness>:
    5828:	ldr	r0, [r0, #36]	; 0x24
    582c:	bx	lr

00005830 <readstat_get_file_label>:
    5830:	ldr	r0, [r0, #44]	; 0x2c
    5834:	bx	lr

00005838 <readstat_get_file_encoding>:
    5838:	ldr	r0, [r0, #48]	; 0x30
    583c:	bx	lr

00005840 <readstat_get_table_name>:
    5840:	ldr	r0, [r0, #40]	; 0x28
    5844:	bx	lr

00005848 <readstat_set_metadata_handler>:
    5848:	str	r1, [r0]
    584c:	mov	r0, #0
    5850:	bx	lr

00005854 <readstat_set_note_handler>:
    5854:	str	r1, [r0, #4]
    5858:	mov	r0, #0
    585c:	bx	lr

00005860 <readstat_set_variable_handler>:
    5860:	str	r1, [r0, #8]
    5864:	mov	r0, #0
    5868:	bx	lr

0000586c <readstat_set_value_handler>:
    586c:	str	r1, [r0, #16]
    5870:	mov	r0, #0
    5874:	bx	lr

00005878 <readstat_set_value_label_handler>:
    5878:	str	r1, [r0, #20]
    587c:	mov	r0, #0
    5880:	bx	lr

00005884 <readstat_set_error_handler>:
    5884:	str	r1, [r0, #24]
    5888:	mov	r0, #0
    588c:	bx	lr

00005890 <readstat_set_progress_handler>:
    5890:	str	r1, [r0, #28]
    5894:	mov	r0, #0
    5898:	bx	lr

0000589c <readstat_set_fweight_handler>:
    589c:	str	r1, [r0, #12]
    58a0:	mov	r0, #0
    58a4:	bx	lr

000058a8 <readstat_set_open_handler>:
    58a8:	ldr	r3, [r0, #32]
    58ac:	mov	r0, #0
    58b0:	str	r1, [r3]
    58b4:	bx	lr

000058b8 <readstat_set_close_handler>:
    58b8:	ldr	r3, [r0, #32]
    58bc:	mov	r0, #0
    58c0:	str	r1, [r3, #4]
    58c4:	bx	lr

000058c8 <readstat_set_seek_handler>:
    58c8:	ldr	r3, [r0, #32]
    58cc:	mov	r0, #0
    58d0:	str	r1, [r3, #8]
    58d4:	bx	lr

000058d8 <readstat_set_read_handler>:
    58d8:	ldr	r3, [r0, #32]
    58dc:	mov	r0, #0
    58e0:	str	r1, [r3, #12]
    58e4:	bx	lr

000058e8 <readstat_set_update_handler>:
    58e8:	ldr	r3, [r0, #32]
    58ec:	mov	r0, #0
    58f0:	str	r1, [r3, #16]
    58f4:	bx	lr

000058f8 <readstat_set_io_ctx>:
    58f8:	ldr	r3, [r0, #32]
    58fc:	strd	r4, [sp, #-16]!
    5900:	mov	r5, r1
    5904:	ldr	r2, [r3, #24]
    5908:	str	r6, [sp, #8]
    590c:	str	lr, [sp, #12]
    5910:	cmp	r2, #0
    5914:	bne	5938 <readstat_set_io_ctx+0x40>
    5918:	mov	r2, #0
    591c:	ldr	r6, [sp, #8]
    5920:	str	r5, [r3, #20]
    5924:	mov	r0, r2
    5928:	ldrd	r4, [sp]
    592c:	add	sp, sp, #12
    5930:	str	r2, [r3, #24]
    5934:	pop	{pc}		; (ldr pc, [sp], #4)
    5938:	mov	r4, r0
    593c:	ldr	r0, [r3, #20]
    5940:	bl	3e94 <free@plt>
    5944:	ldr	r3, [r4, #32]
    5948:	b	5918 <readstat_set_io_ctx+0x20>

0000594c <readstat_parser_free>:
    594c:	str	r4, [sp, #-8]!
    5950:	subs	r4, r0, #0
    5954:	str	lr, [sp, #4]
    5958:	beq	598c <readstat_parser_free+0x40>
    595c:	ldr	r3, [r4, #32]
    5960:	cmp	r3, #0
    5964:	beq	5978 <readstat_parser_free+0x2c>
    5968:	mov	r1, #0
    596c:	bl	40bc <readstat_set_io_ctx@plt>
    5970:	ldr	r0, [r4, #32]
    5974:	bl	3e94 <free@plt>
    5978:	mov	r0, r4
    597c:	ldr	r4, [sp]
    5980:	ldr	lr, [sp, #4]
    5984:	add	sp, sp, #8
    5988:	b	3e94 <free@plt>
    598c:	ldr	r4, [sp]
    5990:	add	sp, sp, #4
    5994:	pop	{pc}		; (ldr pc, [sp], #4)

00005998 <readstat_parser_init>:
    5998:	mov	r1, #52	; 0x34
    599c:	mov	r0, #1
    59a0:	str	r4, [sp, #-8]!
    59a4:	str	lr, [sp, #4]
    59a8:	bl	3d2c <calloc@plt>
    59ac:	mov	r4, r0
    59b0:	mov	r1, #28
    59b4:	mov	r0, #1
    59b8:	bl	3d2c <calloc@plt>
    59bc:	str	r0, [r4, #32]
    59c0:	mov	r0, r4
    59c4:	bl	3f54 <unistd_io_init@plt>
    59c8:	cmp	r0, #0
    59cc:	bne	59ec <readstat_parser_init+0x54>
    59d0:	ldr	r3, [pc, #36]	; 59fc <readstat_parser_init+0x64>
    59d4:	add	r3, pc, r3
    59d8:	str	r3, [r4, #40]	; 0x28
    59dc:	mov	r0, r4
    59e0:	ldr	r4, [sp]
    59e4:	add	sp, sp, #4
    59e8:	pop	{pc}		; (ldr pc, [sp], #4)
    59ec:	mov	r0, r4
    59f0:	mov	r4, #0
    59f4:	bl	40d4 <readstat_parser_free@plt>
    59f8:	b	59dc <readstat_parser_init+0x44>
    59fc:	.word	0x000202b4

00005a00 <readstat_set_file_character_encoding>:
    5a00:	str	r1, [r0, #36]	; 0x24
    5a04:	mov	r0, #0
    5a08:	bx	lr

00005a0c <readstat_set_handler_character_encoding>:
    5a0c:	str	r1, [r0, #40]	; 0x28
    5a10:	mov	r0, #0
    5a14:	bx	lr

00005a18 <readstat_set_row_limit>:
    5a18:	str	r1, [r0, #44]	; 0x2c
    5a1c:	mov	r0, #0
    5a20:	bx	lr

00005a24 <readstat_set_row_offset>:
    5a24:	str	r1, [r0, #48]	; 0x30
    5a28:	mov	r0, #0
    5a2c:	bx	lr

00005a30 <readstat_type_class>:
    5a30:	sub	r3, r0, #6
    5a34:	cmp	r0, #0
    5a38:	clz	r3, r3
    5a3c:	moveq	r0, #1
    5a40:	lsr	r3, r3, #5
    5a44:	movne	r0, r3
    5a48:	eor	r0, r0, #1
    5a4c:	bx	lr

00005a50 <readstat_value_type>:
    5a50:	sub	sp, sp, #16
    5a54:	add	ip, sp, #16
    5a58:	stmdb	ip, {r0, r1, r2, r3}
    5a5c:	ldr	r0, [sp, #8]
    5a60:	add	sp, sp, #16
    5a64:	bx	lr

00005a68 <readstat_value_type_class>:
    5a68:	sub	sp, sp, #16
    5a6c:	add	ip, sp, #16
    5a70:	stmdb	ip, {r0, r1, r2, r3}
    5a74:	ldr	r0, [sp, #8]
    5a78:	add	sp, sp, #16
    5a7c:	b	3df8 <readstat_type_class@plt>

00005a80 <readstat_value_tag>:
    5a80:	sub	sp, sp, #16
    5a84:	add	ip, sp, #16
    5a88:	stmdb	ip, {r0, r1, r2, r3}
    5a8c:	ldrb	r0, [sp, #12]
    5a90:	add	sp, sp, #16
    5a94:	bx	lr

00005a98 <readstat_value_is_system_missing>:
    5a98:	sub	sp, sp, #16
    5a9c:	add	ip, sp, #16
    5aa0:	stmdb	ip, {r0, r1, r2, r3}
    5aa4:	ldrb	r0, [sp, #13]
    5aa8:	and	r0, r0, #1
    5aac:	add	sp, sp, #16
    5ab0:	bx	lr

00005ab4 <readstat_value_is_tagged_missing>:
    5ab4:	sub	sp, sp, #16
    5ab8:	add	ip, sp, #16
    5abc:	stmdb	ip, {r0, r1, r2, r3}
    5ac0:	ldrb	r0, [sp, #13]
    5ac4:	ubfx	r0, r0, #1, #1
    5ac8:	add	sp, sp, #16
    5acc:	bx	lr

00005ad0 <readstat_int8_value>:
    5ad0:	str	r4, [sp, #-8]!
    5ad4:	str	lr, [sp, #4]
    5ad8:	sub	sp, sp, #24
    5adc:	add	ip, sp, #8
    5ae0:	stm	ip, {r0, r1, r2, r3}
    5ae4:	ldm	ip, {r0, r1, r2, r3}
    5ae8:	ldr	r4, [sp, #16]
    5aec:	bl	3ea0 <readstat_value_is_system_missing@plt>
    5af0:	cmp	r0, #0
    5af4:	movne	r0, #0
    5af8:	bne	5b24 <readstat_int8_value+0x54>
    5afc:	cmp	r4, #5
    5b00:	beq	5b68 <readstat_int8_value+0x98>
    5b04:	cmp	r4, #4
    5b08:	beq	5b48 <readstat_int8_value+0x78>
    5b0c:	cmp	r4, #3
    5b10:	beq	5b34 <readstat_int8_value+0x64>
    5b14:	cmp	r4, #2
    5b18:	beq	5b34 <readstat_int8_value+0x64>
    5b1c:	cmp	r4, #1
    5b20:	beq	5b34 <readstat_int8_value+0x64>
    5b24:	add	sp, sp, #24
    5b28:	ldr	r4, [sp]
    5b2c:	add	sp, sp, #4
    5b30:	pop	{pc}		; (ldr pc, [sp], #4)
    5b34:	ldrb	r0, [sp, #8]
    5b38:	add	sp, sp, #24
    5b3c:	ldr	r4, [sp]
    5b40:	add	sp, sp, #4
    5b44:	pop	{pc}		; (ldr pc, [sp], #4)
    5b48:	vldr	s15, [sp, #8]
    5b4c:	vcvt.u32.f32	s15, s15
    5b50:	vstr	s15, [sp, #4]
    5b54:	ldrb	r0, [sp, #4]
    5b58:	add	sp, sp, #24
    5b5c:	ldr	r4, [sp]
    5b60:	add	sp, sp, #4
    5b64:	pop	{pc}		; (ldr pc, [sp], #4)
    5b68:	vldr	d7, [sp, #8]
    5b6c:	vcvt.u32.f64	s15, d7
    5b70:	vstr	s15, [sp, #4]
    5b74:	ldrb	r0, [sp, #4]
    5b78:	add	sp, sp, #24
    5b7c:	ldr	r4, [sp]
    5b80:	add	sp, sp, #4
    5b84:	pop	{pc}		; (ldr pc, [sp], #4)

00005b88 <readstat_int16_value>:
    5b88:	str	r4, [sp, #-8]!
    5b8c:	str	lr, [sp, #4]
    5b90:	sub	sp, sp, #16
    5b94:	mov	ip, sp
    5b98:	stm	ip, {r0, r1, r2, r3}
    5b9c:	ldm	ip, {r0, r1, r2, r3}
    5ba0:	mov	r4, r2
    5ba4:	bl	3ea0 <readstat_value_is_system_missing@plt>
    5ba8:	cmp	r0, #0
    5bac:	movne	r0, #0
    5bb0:	bne	5bdc <readstat_int16_value+0x54>
    5bb4:	cmp	r4, #5
    5bb8:	beq	5c20 <readstat_int16_value+0x98>
    5bbc:	cmp	r4, #4
    5bc0:	beq	5bec <readstat_int16_value+0x64>
    5bc4:	cmp	r4, #3
    5bc8:	beq	5c0c <readstat_int16_value+0x84>
    5bcc:	cmp	r4, #2
    5bd0:	beq	5c0c <readstat_int16_value+0x84>
    5bd4:	cmp	r4, #1
    5bd8:	ldrsbeq	r0, [sp]
    5bdc:	add	sp, sp, #16
    5be0:	ldr	r4, [sp]
    5be4:	add	sp, sp, #4
    5be8:	pop	{pc}		; (ldr pc, [sp], #4)
    5bec:	vldr	s15, [sp]
    5bf0:	vcvt.s32.f32	s15, s15
    5bf4:	vmov	r3, s15
    5bf8:	sxth	r0, r3
    5bfc:	add	sp, sp, #16
    5c00:	ldr	r4, [sp]
    5c04:	add	sp, sp, #4
    5c08:	pop	{pc}		; (ldr pc, [sp], #4)
    5c0c:	ldrsh	r0, [sp]
    5c10:	add	sp, sp, #16
    5c14:	ldr	r4, [sp]
    5c18:	add	sp, sp, #4
    5c1c:	pop	{pc}		; (ldr pc, [sp], #4)
    5c20:	vldr	d7, [sp]
    5c24:	vcvt.s32.f64	s14, d7
    5c28:	vmov	r3, s14
    5c2c:	sxth	r0, r3
    5c30:	add	sp, sp, #16
    5c34:	ldr	r4, [sp]
    5c38:	add	sp, sp, #4
    5c3c:	pop	{pc}		; (ldr pc, [sp], #4)

00005c40 <readstat_int32_value>:
    5c40:	str	r4, [sp, #-8]!
    5c44:	str	lr, [sp, #4]
    5c48:	sub	sp, sp, #16
    5c4c:	mov	ip, sp
    5c50:	stm	ip, {r0, r1, r2, r3}
    5c54:	ldm	ip, {r0, r1, r2, r3}
    5c58:	mov	r4, r2
    5c5c:	bl	3ea0 <readstat_value_is_system_missing@plt>
    5c60:	cmp	r0, #0
    5c64:	movne	r0, #0
    5c68:	bne	5c94 <readstat_int32_value+0x54>
    5c6c:	cmp	r4, #5
    5c70:	beq	5cc0 <readstat_int32_value+0x80>
    5c74:	cmp	r4, #4
    5c78:	beq	5ca4 <readstat_int32_value+0x64>
    5c7c:	cmp	r4, #3
    5c80:	beq	5cdc <readstat_int32_value+0x9c>
    5c84:	cmp	r4, #2
    5c88:	beq	5ce4 <readstat_int32_value+0xa4>
    5c8c:	cmp	r4, #1
    5c90:	ldrsbeq	r0, [sp]
    5c94:	add	sp, sp, #16
    5c98:	ldr	r4, [sp]
    5c9c:	add	sp, sp, #4
    5ca0:	pop	{pc}		; (ldr pc, [sp], #4)
    5ca4:	vldr	s15, [sp]
    5ca8:	vcvt.s32.f32	s15, s15
    5cac:	vmov	r0, s15
    5cb0:	add	sp, sp, #16
    5cb4:	ldr	r4, [sp]
    5cb8:	add	sp, sp, #4
    5cbc:	pop	{pc}		; (ldr pc, [sp], #4)
    5cc0:	vldr	d7, [sp]
    5cc4:	vcvt.s32.f64	s15, d7
    5cc8:	vmov	r0, s15
    5ccc:	add	sp, sp, #16
    5cd0:	ldr	r4, [sp]
    5cd4:	add	sp, sp, #4
    5cd8:	pop	{pc}		; (ldr pc, [sp], #4)
    5cdc:	ldr	r0, [sp]
    5ce0:	b	5c94 <readstat_int32_value+0x54>
    5ce4:	ldrsh	r0, [sp]
    5ce8:	b	5c94 <readstat_int32_value+0x54>

00005cec <readstat_float_value>:
    5cec:	str	r4, [sp, #-8]!
    5cf0:	str	lr, [sp, #4]
    5cf4:	sub	sp, sp, #16
    5cf8:	mov	ip, sp
    5cfc:	stm	ip, {r0, r1, r2, r3}
    5d00:	ldm	ip, {r0, r1, r2, r3}
    5d04:	mov	r4, r2
    5d08:	bl	3ea0 <readstat_value_is_system_missing@plt>
    5d0c:	cmp	r0, #0
    5d10:	bne	5d50 <readstat_float_value+0x64>
    5d14:	cmp	r4, #5
    5d18:	beq	5d64 <readstat_float_value+0x78>
    5d1c:	cmp	r4, #4
    5d20:	beq	5d3c <readstat_float_value+0x50>
    5d24:	cmp	r4, #3
    5d28:	beq	5d7c <readstat_float_value+0x90>
    5d2c:	cmp	r4, #2
    5d30:	beq	5d88 <readstat_float_value+0x9c>
    5d34:	cmp	r4, #1
    5d38:	beq	5d98 <readstat_float_value+0xac>
    5d3c:	vldr	s0, [sp]
    5d40:	add	sp, sp, #16
    5d44:	ldr	r4, [sp]
    5d48:	add	sp, sp, #4
    5d4c:	pop	{pc}		; (ldr pc, [sp], #4)
    5d50:	vldr	s0, [pc, #80]	; 5da8 <readstat_float_value+0xbc>
    5d54:	add	sp, sp, #16
    5d58:	ldr	r4, [sp]
    5d5c:	add	sp, sp, #4
    5d60:	pop	{pc}		; (ldr pc, [sp], #4)
    5d64:	vldr	d0, [sp]
    5d68:	vcvt.f32.f64	s0, d0
    5d6c:	add	sp, sp, #16
    5d70:	ldr	r4, [sp]
    5d74:	add	sp, sp, #4
    5d78:	pop	{pc}		; (ldr pc, [sp], #4)
    5d7c:	vldr	s15, [sp]
    5d80:	vcvt.f32.s32	s0, s15
    5d84:	b	5d40 <readstat_float_value+0x54>
    5d88:	ldrsh	r3, [sp]
    5d8c:	vmov	s0, r3
    5d90:	vcvt.f32.s32	s0, s0
    5d94:	b	5d40 <readstat_float_value+0x54>
    5d98:	ldrsb	r3, [sp]
    5d9c:	vmov	s0, r3
    5da0:	vcvt.f32.s32	s0, s0
    5da4:	b	5d40 <readstat_float_value+0x54>
    5da8:	.word	0x7fc00000

00005dac <readstat_double_value>:
    5dac:	str	r4, [sp, #-8]!
    5db0:	str	lr, [sp, #4]
    5db4:	sub	sp, sp, #16
    5db8:	mov	ip, sp
    5dbc:	stm	ip, {r0, r1, r2, r3}
    5dc0:	ldm	ip, {r0, r1, r2, r3}
    5dc4:	mov	r4, r2
    5dc8:	bl	3ea0 <readstat_value_is_system_missing@plt>
    5dcc:	cmp	r0, #0
    5dd0:	bne	5dfc <readstat_double_value+0x50>
    5dd4:	cmp	r4, #5
    5dd8:	beq	5e38 <readstat_double_value+0x8c>
    5ddc:	cmp	r4, #4
    5de0:	beq	5e10 <readstat_double_value+0x64>
    5de4:	cmp	r4, #3
    5de8:	beq	5e4c <readstat_double_value+0xa0>
    5dec:	cmp	r4, #2
    5df0:	beq	5e58 <readstat_double_value+0xac>
    5df4:	cmp	r4, #1
    5df8:	beq	5e28 <readstat_double_value+0x7c>
    5dfc:	vldr	d0, [pc, #100]	; 5e68 <readstat_double_value+0xbc>
    5e00:	add	sp, sp, #16
    5e04:	ldr	r4, [sp]
    5e08:	add	sp, sp, #4
    5e0c:	pop	{pc}		; (ldr pc, [sp], #4)
    5e10:	vldr	s0, [sp]
    5e14:	vcvt.f64.f32	d0, s0
    5e18:	add	sp, sp, #16
    5e1c:	ldr	r4, [sp]
    5e20:	add	sp, sp, #4
    5e24:	pop	{pc}		; (ldr pc, [sp], #4)
    5e28:	ldrsb	r3, [sp]
    5e2c:	vmov	s0, r3
    5e30:	vcvt.f64.s32	d0, s0
    5e34:	b	5e00 <readstat_double_value+0x54>
    5e38:	vldr	d0, [sp]
    5e3c:	add	sp, sp, #16
    5e40:	ldr	r4, [sp]
    5e44:	add	sp, sp, #4
    5e48:	pop	{pc}		; (ldr pc, [sp], #4)
    5e4c:	vldr	s15, [sp]
    5e50:	vcvt.f64.s32	d0, s15
    5e54:	b	5e00 <readstat_double_value+0x54>
    5e58:	ldrsh	r3, [sp]
    5e5c:	vmov	s0, r3
    5e60:	vcvt.f64.s32	d0, s0
    5e64:	b	5e00 <readstat_double_value+0x54>
    5e68:	.word	0x00000000
    5e6c:	.word	0x7ff80000

00005e70 <readstat_string_value>:
    5e70:	push	{lr}		; (str lr, [sp, #-4]!)
    5e74:	sub	sp, sp, #20
    5e78:	mov	ip, sp
    5e7c:	stm	ip, {r0, r1, r2, r3}
    5e80:	ldm	ip, {r0, r1, r2, r3}
    5e84:	bl	4314 <readstat_value_type@plt>
    5e88:	cmp	r0, #0
    5e8c:	ldreq	r0, [sp]
    5e90:	movne	r0, #0
    5e94:	add	sp, sp, #20
    5e98:	pop	{pc}		; (ldr pc, [sp], #4)

00005e9c <readstat_value_is_defined_missing>:
    5e9c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5ea0:	strd	r6, [sp, #8]
    5ea4:	strd	r8, [sp, #16]
    5ea8:	str	sl, [sp, #24]
    5eac:	str	lr, [sp, #28]
    5eb0:	vpush	{d8-d9}
    5eb4:	sub	sp, sp, #80	; 0x50
    5eb8:	mov	r4, sp
    5ebc:	stm	r4, {r0, r1, r2, r3}
    5ec0:	ldm	r4, {r0, r1, r2, r3}
    5ec4:	bl	40b0 <readstat_value_type_class@plt>
    5ec8:	mov	r5, r0
    5ecc:	ldr	r0, [sp, #128]	; 0x80
    5ed0:	bl	4518 <readstat_variable_get_type_class@plt>
    5ed4:	cmp	r5, r0
    5ed8:	beq	5f00 <readstat_value_is_defined_missing+0x64>
    5edc:	mov	r0, #0
    5ee0:	add	sp, sp, #80	; 0x50
    5ee4:	vpop	{d8-d9}
    5ee8:	ldrd	r4, [sp]
    5eec:	ldrd	r6, [sp, #8]
    5ef0:	ldrd	r8, [sp, #16]
    5ef4:	ldr	sl, [sp, #24]
    5ef8:	add	sp, sp, #28
    5efc:	pop	{pc}		; (ldr pc, [sp], #4)
    5f00:	ldm	r4, {r0, r1, r2, r3}
    5f04:	bl	40b0 <readstat_value_type_class@plt>
    5f08:	subs	r5, r0, #0
    5f0c:	ldm	r4, {r0, r1, r2, r3}
    5f10:	beq	5fac <readstat_value_is_defined_missing+0x110>
    5f14:	bl	40b0 <readstat_value_type_class@plt>
    5f18:	cmp	r0, #1
    5f1c:	bne	5edc <readstat_value_is_defined_missing+0x40>
    5f20:	ldm	r4, {r0, r1, r2, r3}
    5f24:	bl	4188 <readstat_double_value@plt>
    5f28:	ldr	r0, [sp, #128]	; 0x80
    5f2c:	vmov.f64	d9, d0
    5f30:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
    5f34:	subs	r7, r0, #0
    5f38:	ble	5edc <readstat_value_is_defined_missing+0x40>
    5f3c:	mov	r6, #0
    5f40:	add	r5, sp, #64	; 0x40
    5f44:	add	r4, sp, #48	; 0x30
    5f48:	b	5f54 <readstat_value_is_defined_missing+0xb8>
    5f4c:	cmp	r7, r6
    5f50:	beq	5edc <readstat_value_is_defined_missing+0x40>
    5f54:	mov	r2, r6
    5f58:	mov	r0, r5
    5f5c:	ldr	r1, [sp, #128]	; 0x80
    5f60:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
    5f64:	ldm	r5, {r0, r1, r2, r3}
    5f68:	bl	4188 <readstat_double_value@plt>
    5f6c:	vmov.f64	d8, d0
    5f70:	mov	r2, r6
    5f74:	mov	r0, r4
    5f78:	ldr	r1, [sp, #128]	; 0x80
    5f7c:	add	r6, r6, #1
    5f80:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
    5f84:	ldm	r4, {r0, r1, r2, r3}
    5f88:	bl	4188 <readstat_double_value@plt>
    5f8c:	vcmpe.f64	d9, d8
    5f90:	vmrs	APSR_nzcv, fpscr
    5f94:	blt	5f4c <readstat_value_is_defined_missing+0xb0>
    5f98:	vcmpe.f64	d9, d0
    5f9c:	vmrs	APSR_nzcv, fpscr
    5fa0:	bhi	5f4c <readstat_value_is_defined_missing+0xb0>
    5fa4:	mov	r0, #1
    5fa8:	b	5ee0 <readstat_value_is_defined_missing+0x44>
    5fac:	bl	3f84 <readstat_string_value@plt>
    5fb0:	subs	r9, r0, #0
    5fb4:	beq	5edc <readstat_value_is_defined_missing+0x40>
    5fb8:	ldr	r0, [sp, #128]	; 0x80
    5fbc:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
    5fc0:	subs	sl, r0, #0
    5fc4:	ble	5edc <readstat_value_is_defined_missing+0x40>
    5fc8:	mov	r4, r5
    5fcc:	add	r6, sp, #32
    5fd0:	add	r5, sp, #16
    5fd4:	b	5fe0 <readstat_value_is_defined_missing+0x144>
    5fd8:	cmp	sl, r4
    5fdc:	beq	5edc <readstat_value_is_defined_missing+0x40>
    5fe0:	mov	r2, r4
    5fe4:	mov	r0, r6
    5fe8:	ldr	r1, [sp, #128]	; 0x80
    5fec:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
    5ff0:	ldm	r6, {r0, r1, r2, r3}
    5ff4:	bl	3f84 <readstat_string_value@plt>
    5ff8:	mov	r7, r0
    5ffc:	mov	r2, r4
    6000:	ldr	r1, [sp, #128]	; 0x80
    6004:	mov	r0, r5
    6008:	add	r4, r4, #1
    600c:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
    6010:	ldm	r5, {r0, r1, r2, r3}
    6014:	bl	3f84 <readstat_string_value@plt>
    6018:	cmp	r7, #0
    601c:	cmpne	r0, #0
    6020:	mov	r8, r0
    6024:	mov	r1, r7
    6028:	mov	r0, r9
    602c:	beq	5fd8 <readstat_value_is_defined_missing+0x13c>
    6030:	bl	3dd4 <strcmp@plt>
    6034:	cmp	r0, #0
    6038:	mov	r1, r8
    603c:	mov	r0, r9
    6040:	blt	5fd8 <readstat_value_is_defined_missing+0x13c>
    6044:	bl	3dd4 <strcmp@plt>
    6048:	cmp	r0, #0
    604c:	bgt	5fd8 <readstat_value_is_defined_missing+0x13c>
    6050:	b	5fa4 <readstat_value_is_defined_missing+0x108>

00006054 <readstat_value_is_missing>:
    6054:	push	{lr}		; (str lr, [sp, #-4]!)
    6058:	sub	sp, sp, #20
    605c:	mov	ip, sp
    6060:	ldr	lr, [sp, #24]
    6064:	stm	ip, {r0, r1, r2, r3}
    6068:	ldrb	r3, [sp, #13]
    606c:	tst	r3, #3
    6070:	bne	6098 <readstat_value_is_missing+0x44>
    6074:	cmp	lr, #0
    6078:	moveq	r0, lr
    607c:	bne	6088 <readstat_value_is_missing+0x34>
    6080:	add	sp, sp, #20
    6084:	pop	{pc}		; (ldr pc, [sp], #4)
    6088:	ldm	ip, {r0, r1, r2, r3}
    608c:	add	sp, sp, #20
    6090:	pop	{lr}		; (ldr lr, [sp], #4)
    6094:	b	3ec4 <readstat_value_is_defined_missing@plt>
    6098:	mov	r0, #1
    609c:	add	sp, sp, #20
    60a0:	pop	{pc}		; (ldr pc, [sp], #4)

000060a4 <readstat_variable_get_name>:
    60a4:	ldrb	r3, [r0, #8]
    60a8:	cmp	r3, #0
    60ac:	addne	r0, r0, #8
    60b0:	moveq	r0, r3
    60b4:	bx	lr

000060b8 <readstat_variable_get_label>:
    60b8:	ldrb	r3, [r0, #564]	; 0x234
    60bc:	cmp	r3, #0
    60c0:	addne	r0, r0, #564	; 0x234
    60c4:	moveq	r0, r3
    60c8:	bx	lr

000060cc <readstat_variable_get_format>:
    60cc:	ldrb	r3, [r0, #308]	; 0x134
    60d0:	cmp	r3, #0
    60d4:	addne	r0, r0, #308	; 0x134
    60d8:	moveq	r0, r3
    60dc:	bx	lr

000060e0 <readstat_variable_get_type>:
    60e0:	ldr	r0, [r0]
    60e4:	bx	lr

000060e8 <readstat_variable_get_type_class>:
    60e8:	ldr	r0, [r0]
    60ec:	b	3df8 <readstat_type_class@plt>

000060f0 <readstat_variable_get_index>:
    60f0:	ldr	r0, [r0, #4]
    60f4:	bx	lr

000060f8 <readstat_variable_get_index_after_skipping>:
    60f8:	ldr	r0, [r0, #2148]	; 0x864
    60fc:	bx	lr

00006100 <readstat_variable_get_storage_width>:
    6100:	ldr	r0, [r0, #1596]	; 0x63c
    6104:	bx	lr

00006108 <readstat_variable_get_measure>:
    6108:	ldr	r0, [r0, #2128]	; 0x850
    610c:	bx	lr

00006110 <readstat_variable_get_alignment>:
    6110:	ldr	r0, [r0, #2132]	; 0x854
    6114:	bx	lr

00006118 <readstat_variable_get_display_width>:
    6118:	ldr	r0, [r0, #2136]	; 0x858
    611c:	bx	lr

00006120 <readstat_variable_get_missing_ranges_count>:
    6120:	ldr	r0, [r0, #2120]	; 0x848
    6124:	bx	lr

00006128 <readstat_variable_get_missing_range_lo>:
    6128:	ldr	r3, [r1, #2120]	; 0x848
    612c:	strd	r4, [sp, #-8]!
    6130:	sub	sp, sp, #16
    6134:	cmp	r3, r2
    6138:	ble	614c <readstat_variable_get_missing_range_lo+0x24>
    613c:	lsl	r3, r2, #1
    6140:	add	r3, r3, #1
    6144:	cmp	r3, #31
    6148:	bls	618c <readstat_variable_get_missing_range_lo+0x64>
    614c:	mov	r2, #0
    6150:	mov	r1, #5
    6154:	mov	r3, #1
    6158:	mov	r4, #0
    615c:	str	r1, [sp, #8]
    6160:	mov	r5, #0
    6164:	movt	r5, #32760	; 0x7ff8
    6168:	str	r2, [sp, #12]
    616c:	strb	r3, [sp, #13]
    6170:	ldrd	r2, [sp, #8]
    6174:	strd	r4, [r0]
    6178:	strd	r2, [r0, #8]
    617c:	add	sp, sp, #16
    6180:	ldrd	r4, [sp]
    6184:	add	sp, sp, #8
    6188:	bx	lr
    618c:	add	r1, r1, r2, lsl #5
    6190:	movw	r3, #1608	; 0x648
    6194:	add	r2, r1, r3
    6198:	ldrd	r4, [r1, r3]
    619c:	ldrd	r2, [r2, #8]
    61a0:	strd	r4, [r0]
    61a4:	strd	r2, [r0, #8]
    61a8:	add	sp, sp, #16
    61ac:	ldrd	r4, [sp]
    61b0:	add	sp, sp, #8
    61b4:	bx	lr

000061b8 <readstat_variable_get_missing_range_hi>:
    61b8:	ldr	r3, [r1, #2120]	; 0x848
    61bc:	strd	r4, [sp, #-8]!
    61c0:	sub	sp, sp, #16
    61c4:	cmp	r3, r2
    61c8:	ble	61dc <readstat_variable_get_missing_range_hi+0x24>
    61cc:	lsl	r2, r2, #1
    61d0:	add	r2, r2, #1
    61d4:	cmp	r2, #31
    61d8:	bls	621c <readstat_variable_get_missing_range_hi+0x64>
    61dc:	mov	r2, #0
    61e0:	mov	r1, #5
    61e4:	mov	r3, #1
    61e8:	mov	r4, #0
    61ec:	str	r1, [sp, #8]
    61f0:	mov	r5, #0
    61f4:	movt	r5, #32760	; 0x7ff8
    61f8:	str	r2, [sp, #12]
    61fc:	strb	r3, [sp, #13]
    6200:	ldrd	r2, [sp, #8]
    6204:	strd	r4, [r0]
    6208:	strd	r2, [r0, #8]
    620c:	add	sp, sp, #16
    6210:	ldrd	r4, [sp]
    6214:	add	sp, sp, #8
    6218:	bx	lr
    621c:	add	r2, r1, r2, lsl #4
    6220:	movw	r3, #1608	; 0x648
    6224:	add	r1, r2, r3
    6228:	ldrd	r4, [r2, r3]
    622c:	ldrd	r2, [r1, #8]
    6230:	strd	r4, [r0]
    6234:	strd	r2, [r0, #8]
    6238:	add	sp, sp, #16
    623c:	ldrd	r4, [sp]
    6240:	add	sp, sp, #8
    6244:	bx	lr

00006248 <readstat_variable_add_missing_double_range>:
    6248:	mov	r3, #5
    624c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6250:	strd	r6, [sp, #8]
    6254:	mov	r6, #0
    6258:	strd	r8, [sp, #16]
    625c:	strd	sl, [sp, #24]
    6260:	str	lr, [sp, #32]
    6264:	sub	sp, sp, #68	; 0x44
    6268:	vstr	d0, [sp, #48]	; 0x30
    626c:	str	r3, [sp, #56]	; 0x38
    6270:	str	r6, [sp, #60]	; 0x3c
    6274:	ldrd	r4, [sp, #48]	; 0x30
    6278:	ldrd	r2, [sp, #56]	; 0x38
    627c:	strd	r4, [sp, #32]
    6280:	mov	r4, r0
    6284:	vstr	d1, [sp, #48]	; 0x30
    6288:	strd	r2, [sp, #40]	; 0x28
    628c:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
    6290:	lsl	r3, r0, #1
    6294:	cmp	r3, #31
    6298:	movhi	r0, #31
    629c:	bhi	62f0 <readstat_variable_add_missing_double_range+0xa8>
    62a0:	ldrd	sl, [sp, #32]
    62a4:	add	r2, r4, r0, lsl #5
    62a8:	movw	r1, #1608	; 0x648
    62ac:	add	r7, sp, #48	; 0x30
    62b0:	add	r8, sp, #32
    62b4:	ldr	ip, [r4, #2120]	; 0x848
    62b8:	add	r3, r3, #1
    62bc:	mov	r0, r6
    62c0:	add	r3, r4, r3, lsl #4
    62c4:	add	r5, r2, r1
    62c8:	ldrd	r6, [r7, #8]
    62cc:	strd	sl, [r2, r1]
    62d0:	add	lr, r3, r1
    62d4:	ldrd	r8, [r8, #8]
    62d8:	add	ip, ip, #1
    62dc:	ldrd	sl, [sp, #48]	; 0x30
    62e0:	strd	r8, [r5, #8]
    62e4:	strd	sl, [r3, r1]
    62e8:	strd	r6, [lr, #8]
    62ec:	str	ip, [r4, #2120]	; 0x848
    62f0:	add	sp, sp, #68	; 0x44
    62f4:	ldrd	r4, [sp]
    62f8:	ldrd	r6, [sp, #8]
    62fc:	ldrd	r8, [sp, #16]
    6300:	ldrd	sl, [sp, #24]
    6304:	add	sp, sp, #32
    6308:	pop	{pc}		; (ldr pc, [sp], #4)

0000630c <readstat_variable_add_missing_double_value>:
    630c:	mov	r3, #5
    6310:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6314:	strd	r6, [sp, #8]
    6318:	mov	r6, #0
    631c:	strd	r8, [sp, #16]
    6320:	strd	sl, [sp, #24]
    6324:	str	lr, [sp, #32]
    6328:	sub	sp, sp, #68	; 0x44
    632c:	vstr	d0, [sp, #48]	; 0x30
    6330:	str	r3, [sp, #56]	; 0x38
    6334:	str	r6, [sp, #60]	; 0x3c
    6338:	ldrd	r4, [sp, #48]	; 0x30
    633c:	ldrd	r2, [sp, #56]	; 0x38
    6340:	strd	r4, [sp, #32]
    6344:	mov	r4, r0
    6348:	strd	r2, [sp, #40]	; 0x28
    634c:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
    6350:	lsl	r3, r0, #1
    6354:	cmp	r3, #31
    6358:	movhi	r0, #31
    635c:	bhi	63b0 <readstat_variable_add_missing_double_value+0xa4>
    6360:	ldrd	sl, [sp, #32]
    6364:	add	r2, r4, r0, lsl #5
    6368:	movw	r1, #1608	; 0x648
    636c:	add	r7, sp, #48	; 0x30
    6370:	add	r8, sp, #32
    6374:	ldr	ip, [r4, #2120]	; 0x848
    6378:	add	r3, r3, #1
    637c:	mov	r0, r6
    6380:	add	r3, r4, r3, lsl #4
    6384:	add	r5, r2, r1
    6388:	ldrd	r6, [r7, #8]
    638c:	strd	sl, [r2, r1]
    6390:	add	lr, r3, r1
    6394:	ldrd	r8, [r8, #8]
    6398:	add	ip, ip, #1
    639c:	ldrd	sl, [sp, #48]	; 0x30
    63a0:	strd	r8, [r5, #8]
    63a4:	strd	sl, [r3, r1]
    63a8:	strd	r6, [lr, #8]
    63ac:	str	ip, [r4, #2120]	; 0x848
    63b0:	add	sp, sp, #68	; 0x44
    63b4:	ldrd	r4, [sp]
    63b8:	ldrd	r6, [sp, #8]
    63bc:	ldrd	r8, [sp, #16]
    63c0:	ldrd	sl, [sp, #24]
    63c4:	add	sp, sp, #32
    63c8:	pop	{pc}		; (ldr pc, [sp], #4)

000063cc <readstat_variable_add_missing_string_range>:
    63cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    63d0:	strd	r6, [sp, #8]
    63d4:	mov	r6, #0
    63d8:	mov	r7, r0
    63dc:	strd	r8, [sp, #16]
    63e0:	strd	sl, [sp, #24]
    63e4:	str	lr, [sp, #32]
    63e8:	sub	sp, sp, #68	; 0x44
    63ec:	add	r3, sp, #52	; 0x34
    63f0:	str	r1, [sp, #48]	; 0x30
    63f4:	str	r6, [sp, #52]	; 0x34
    63f8:	str	r6, [r3, #4]
    63fc:	str	r6, [r3, #8]
    6400:	ldrd	r4, [sp, #48]	; 0x30
    6404:	str	r2, [sp, #48]	; 0x30
    6408:	ldrd	r2, [sp, #56]	; 0x38
    640c:	strd	r4, [sp, #32]
    6410:	strd	r2, [sp, #40]	; 0x28
    6414:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
    6418:	lsl	r3, r0, #1
    641c:	cmp	r3, #31
    6420:	movhi	r0, #31
    6424:	bhi	6478 <readstat_variable_add_missing_string_range+0xac>
    6428:	add	r9, sp, #32
    642c:	ldrd	r4, [r9, #8]
    6430:	add	r2, r7, r0, lsl #5
    6434:	movw	r1, #1608	; 0x648
    6438:	mov	r0, r6
    643c:	ldrd	sl, [sp, #32]
    6440:	add	r6, r2, r1
    6444:	add	r8, sp, #48	; 0x30
    6448:	add	r3, r3, #1
    644c:	ldr	ip, [r7, #2120]	; 0x848
    6450:	add	r3, r7, r3, lsl #4
    6454:	add	lr, r3, r1
    6458:	strd	sl, [r2, r1]
    645c:	strd	r4, [r6, #8]
    6460:	ldrd	r4, [r8, #8]
    6464:	add	ip, ip, #1
    6468:	ldrd	sl, [sp, #48]	; 0x30
    646c:	strd	sl, [r3, r1]
    6470:	strd	r4, [lr, #8]
    6474:	str	ip, [r7, #2120]	; 0x848
    6478:	add	sp, sp, #68	; 0x44
    647c:	ldrd	r4, [sp]
    6480:	ldrd	r6, [sp, #8]
    6484:	ldrd	r8, [sp, #16]
    6488:	ldrd	sl, [sp, #24]
    648c:	add	sp, sp, #32
    6490:	pop	{pc}		; (ldr pc, [sp], #4)

00006494 <readstat_variable_add_missing_string_value>:
    6494:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6498:	strd	r6, [sp, #8]
    649c:	mov	r6, #0
    64a0:	mov	r7, r0
    64a4:	strd	r8, [sp, #16]
    64a8:	strd	sl, [sp, #24]
    64ac:	str	lr, [sp, #32]
    64b0:	sub	sp, sp, #68	; 0x44
    64b4:	str	r1, [sp, #48]	; 0x30
    64b8:	str	r6, [sp, #52]	; 0x34
    64bc:	str	r6, [sp, #56]	; 0x38
    64c0:	str	r6, [sp, #60]	; 0x3c
    64c4:	ldrd	r4, [sp, #48]	; 0x30
    64c8:	ldrd	r2, [sp, #56]	; 0x38
    64cc:	strd	r4, [sp, #32]
    64d0:	strd	r2, [sp, #40]	; 0x28
    64d4:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
    64d8:	lsl	r3, r0, #1
    64dc:	cmp	r3, #31
    64e0:	movhi	r0, #31
    64e4:	bhi	6538 <readstat_variable_add_missing_string_value+0xa4>
    64e8:	add	r9, sp, #32
    64ec:	ldrd	r4, [r9, #8]
    64f0:	add	r2, r7, r0, lsl #5
    64f4:	movw	r1, #1608	; 0x648
    64f8:	mov	r0, r6
    64fc:	ldrd	sl, [sp, #32]
    6500:	add	r6, r2, r1
    6504:	add	r8, sp, #48	; 0x30
    6508:	add	r3, r3, #1
    650c:	ldr	ip, [r7, #2120]	; 0x848
    6510:	add	r3, r7, r3, lsl #4
    6514:	add	lr, r3, r1
    6518:	strd	sl, [r2, r1]
    651c:	strd	r4, [r6, #8]
    6520:	ldrd	r4, [r8, #8]
    6524:	add	ip, ip, #1
    6528:	ldrd	sl, [sp, #48]	; 0x30
    652c:	strd	sl, [r3, r1]
    6530:	strd	r4, [lr, #8]
    6534:	str	ip, [r7, #2120]	; 0x848
    6538:	add	sp, sp, #68	; 0x44
    653c:	ldrd	r4, [sp]
    6540:	ldrd	r6, [sp, #8]
    6544:	ldrd	r8, [sp, #16]
    6548:	ldrd	sl, [sp, #24]
    654c:	add	sp, sp, #32
    6550:	pop	{pc}		; (ldr pc, [sp], #4)

00006554 <readstat_compare_string_refs>:
    6554:	push	{lr}		; (str lr, [sp, #-4]!)
    6558:	ldr	ip, [r1]
    655c:	ldr	lr, [r0]
    6560:	ldrd	r2, [ip]
    6564:	ldrd	r0, [lr]
    6568:	cmp	r1, r3
    656c:	cmpeq	r0, r2
    6570:	ldreq	r3, [ip, #8]
    6574:	subne	r0, r0, r2
    6578:	ldreq	r0, [lr, #8]
    657c:	subeq	r0, r0, r3
    6580:	pop	{pc}		; (ldr pc, [sp], #4)

00006584 <readstat_add_value_label>:
    6584:	strd	r4, [sp, #-16]!
    6588:	mov	r5, r0
    658c:	ldr	r3, [r0, #268]	; 0x10c
    6590:	str	r6, [sp, #8]
    6594:	mov	r6, r1
    6598:	ldr	r1, [r0, #264]	; 0x108
    659c:	str	lr, [sp, #12]
    65a0:	ldr	r0, [r0, #260]	; 0x104
    65a4:	cmp	r1, r3
    65a8:	beq	6618 <readstat_add_value_label+0x94>
    65ac:	add	r3, r1, #1
    65b0:	add	r4, r0, r1, lsl #5
    65b4:	mov	r2, #32
    65b8:	mov	r1, #0
    65bc:	mov	r0, r4
    65c0:	str	r3, [r5, #264]	; 0x108
    65c4:	bl	4278 <memset@plt>
    65c8:	cmp	r6, #0
    65cc:	beq	65dc <readstat_add_value_label+0x58>
    65d0:	ldrb	r3, [r6]
    65d4:	cmp	r3, #0
    65d8:	bne	65f0 <readstat_add_value_label+0x6c>
    65dc:	mov	r0, r4
    65e0:	ldrd	r4, [sp]
    65e4:	ldr	r6, [sp, #8]
    65e8:	add	sp, sp, #12
    65ec:	pop	{pc}		; (ldr pc, [sp], #4)
    65f0:	mov	r0, r6
    65f4:	bl	41d0 <strlen@plt>
    65f8:	str	r0, [r4, #28]
    65fc:	mov	r5, r0
    6600:	bl	40e0 <malloc@plt>
    6604:	mov	r2, r5
    6608:	mov	r1, r6
    660c:	str	r0, [r4, #24]
    6610:	bl	3ef4 <memcpy@plt>
    6614:	b	65dc <readstat_add_value_label+0x58>
    6618:	lsl	r3, r1, #1
    661c:	lsl	r1, r1, #6
    6620:	str	r3, [r5, #268]	; 0x10c
    6624:	bl	3fcc <realloc@plt>
    6628:	str	r0, [r5, #260]	; 0x104
    662c:	ldr	r1, [r5, #264]	; 0x108
    6630:	b	65ac <readstat_add_value_label+0x28>

00006634 <readstat_string_ref_init>:
    6634:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6638:	strd	r6, [sp, #8]
    663c:	mvn	r6, #0
    6640:	mvn	r7, #0
    6644:	str	r8, [sp, #16]
    6648:	mov	r8, r0
    664c:	str	lr, [sp, #20]
    6650:	bl	41d0 <strlen@plt>
    6654:	mov	r5, r0
    6658:	mov	r0, #1
    665c:	add	r1, r5, #25
    6660:	add	r5, r5, r0
    6664:	bl	3d2c <calloc@plt>
    6668:	mov	r4, r0
    666c:	mov	r1, r8
    6670:	mov	r2, r5
    6674:	add	r0, r0, #20
    6678:	strd	r6, [r4]
    667c:	strd	r6, [r4, #8]
    6680:	str	r5, [r4, #16]
    6684:	bl	3ef4 <memcpy@plt>
    6688:	mov	r0, r4
    668c:	ldrd	r4, [sp]
    6690:	ldrd	r6, [sp, #8]
    6694:	ldr	r8, [sp, #16]
    6698:	add	sp, sp, #20
    669c:	pop	{pc}		; (ldr pc, [sp], #4)

000066a0 <readstat_writer_init>:
    66a0:	mov	r1, #312	; 0x138
    66a4:	mov	r0, #1
    66a8:	strd	r4, [sp, #-16]!
    66ac:	str	r6, [sp, #8]
    66b0:	str	lr, [sp, #12]
    66b4:	bl	3d2c <calloc@plt>
    66b8:	mov	r4, r0
    66bc:	mov	r1, #4
    66c0:	mov	r0, #50	; 0x32
    66c4:	mov	r5, r0
    66c8:	bl	3d2c <calloc@plt>
    66cc:	mov	r1, #4
    66d0:	str	r0, [r4, #24]
    66d4:	mov	r0, r5
    66d8:	str	r5, [r4, #32]
    66dc:	bl	3d2c <calloc@plt>
    66e0:	mov	r1, #4
    66e4:	str	r0, [r4, #36]	; 0x24
    66e8:	mov	r0, r5
    66ec:	str	r5, [r4, #44]	; 0x2c
    66f0:	bl	3d2c <calloc@plt>
    66f4:	mov	r1, #4
    66f8:	str	r0, [r4, #48]	; 0x30
    66fc:	mov	r0, #100	; 0x64
    6700:	str	r5, [r4, #56]	; 0x38
    6704:	bl	3d2c <calloc@plt>
    6708:	mov	r3, #100	; 0x64
    670c:	str	r0, [r4, #60]	; 0x3c
    6710:	mov	r0, #0
    6714:	str	r3, [r4, #68]	; 0x44
    6718:	bl	3f30 <time@plt>
    671c:	ldr	r3, [pc, #36]	; 6748 <readstat_writer_init+0xa8>
    6720:	mov	r2, #1
    6724:	str	r2, [r4, #12]
    6728:	str	r0, [r4, #20]
    672c:	mov	r0, r4
    6730:	ldr	r6, [sp, #8]
    6734:	add	r3, pc, r3
    6738:	str	r3, [r4, #280]	; 0x118
    673c:	ldrd	r4, [sp]
    6740:	add	sp, sp, #12
    6744:	pop	{pc}		; (ldr pc, [sp], #4)
    6748:	.word	0x000000d0

0000674c <readstat_validate_variable>:
    674c:	ldr	r3, [r0, #308]	; 0x134
    6750:	cmp	r3, #0
    6754:	beq	6774 <readstat_validate_variable+0x28>
    6758:	ldr	r3, [r0, #232]	; 0xe8
    675c:	cmp	r3, #0
    6760:	beq	676c <readstat_validate_variable+0x20>
    6764:	mov	r0, r1
    6768:	bx	r3
    676c:	mov	r0, r3
    6770:	bx	lr
    6774:	mov	r0, #14
    6778:	bx	lr

0000677c <readstat_validate_metadata>:
    677c:	ldr	r2, [r0, #308]	; 0x134
    6780:	cmp	r2, #0
    6784:	beq	67a0 <readstat_validate_metadata+0x24>
    6788:	ldr	r3, [r0, #292]	; 0x124
    678c:	cmp	r3, #0
    6790:	beq	6798 <readstat_validate_metadata+0x1c>
    6794:	bx	r3
    6798:	mov	r0, r3
    679c:	bx	lr
    67a0:	mov	r0, #14
    67a4:	bx	lr

000067a8 <readstat_set_data_writer>:
    67a8:	str	r1, [r0]
    67ac:	mov	r0, #0
    67b0:	bx	lr

000067b4 <readstat_write_bytes>:
    67b4:	strd	r4, [sp, #-16]!
    67b8:	mov	r4, r0
    67bc:	mov	r5, r2
    67c0:	mov	r0, r1
    67c4:	mov	r1, r2
    67c8:	ldr	r3, [r4]
    67cc:	ldr	r2, [r4, #304]	; 0x130
    67d0:	str	r6, [sp, #8]
    67d4:	str	lr, [sp, #12]
    67d8:	blx	r3
    67dc:	cmp	r5, r0
    67e0:	movhi	r2, #13
    67e4:	bhi	67f8 <readstat_write_bytes+0x44>
    67e8:	ldr	r3, [r4, #4]
    67ec:	mov	r2, #0
    67f0:	add	r3, r3, r0
    67f4:	str	r3, [r4, #4]
    67f8:	ldrd	r4, [sp]
    67fc:	mov	r0, r2
    6800:	ldr	r6, [sp, #8]
    6804:	add	sp, sp, #12
    6808:	pop	{pc}		; (ldr pc, [sp], #4)

0000680c <readstat_write_row_default_callback>:
    680c:	b	4428 <readstat_write_bytes@plt>

00006810 <readstat_write_bytes_as_lines>:
    6810:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6814:	mov	r5, r0
    6818:	strd	r6, [sp, #8]
    681c:	mov	r6, r2
    6820:	mov	r7, r3
    6824:	strd	r8, [sp, #16]
    6828:	mov	r8, r1
    682c:	strd	sl, [sp, #24]
    6830:	str	lr, [sp, #32]
    6834:	sub	sp, sp, #4
    6838:	ldr	r0, [sp, #40]	; 0x28
    683c:	bl	41d0 <strlen@plt>
    6840:	cmp	r6, #0
    6844:	movne	r9, r0
    6848:	movne	r4, #0
    684c:	addne	sl, r9, r7
    6850:	bne	6884 <readstat_write_bytes_as_lines+0x74>
    6854:	b	6900 <readstat_write_bytes_as_lines+0xf0>
    6858:	bl	4428 <readstat_write_bytes@plt>
    685c:	cmp	r0, #0
    6860:	mov	r4, r6
    6864:	bne	68c4 <readstat_write_bytes_as_lines+0xb4>
    6868:	ldr	r2, [r5, #4]
    686c:	udiv	r3, r2, sl
    6870:	mls	r3, sl, r3, r2
    6874:	cmp	r3, r7
    6878:	beq	68e0 <readstat_write_bytes_as_lines+0xd0>
    687c:	cmp	r4, r6
    6880:	bcs	6900 <readstat_write_bytes_as_lines+0xf0>
    6884:	ldr	fp, [r5, #4]
    6888:	sub	ip, r6, r4
    688c:	add	lr, r8, r4
    6890:	mov	r0, r5
    6894:	mov	r2, ip
    6898:	mov	r1, lr
    689c:	udiv	r3, fp, sl
    68a0:	mls	r3, sl, r3, fp
    68a4:	sub	r3, r7, r3
    68a8:	cmp	r3, ip
    68ac:	add	r4, r4, r3
    68b0:	bhi	6858 <readstat_write_bytes_as_lines+0x48>
    68b4:	mov	r2, r3
    68b8:	bl	4428 <readstat_write_bytes@plt>
    68bc:	cmp	r0, #0
    68c0:	beq	6868 <readstat_write_bytes_as_lines+0x58>
    68c4:	add	sp, sp, #4
    68c8:	ldrd	r4, [sp]
    68cc:	ldrd	r6, [sp, #8]
    68d0:	ldrd	r8, [sp, #16]
    68d4:	ldrd	sl, [sp, #24]
    68d8:	add	sp, sp, #32
    68dc:	pop	{pc}		; (ldr pc, [sp], #4)
    68e0:	mov	r2, r9
    68e4:	mov	r0, r5
    68e8:	ldr	r1, [sp, #40]	; 0x28
    68ec:	bl	4428 <readstat_write_bytes@plt>
    68f0:	cmp	r0, #0
    68f4:	bne	68c4 <readstat_write_bytes_as_lines+0xb4>
    68f8:	cmp	r4, r6
    68fc:	bcc	6884 <readstat_write_bytes_as_lines+0x74>
    6900:	mov	r0, #0
    6904:	b	68c4 <readstat_write_bytes_as_lines+0xb4>

00006908 <readstat_write_line_padding>:
    6908:	strd	r4, [sp, #-32]!	; 0xffffffe0
    690c:	mov	r5, r0
    6910:	mov	r0, r3
    6914:	mov	r4, r2
    6918:	strd	r6, [sp, #8]
    691c:	mov	r6, r3
    6920:	mov	r7, r1
    6924:	strd	r8, [sp, #16]
    6928:	str	sl, [sp, #24]
    692c:	str	lr, [sp, #28]
    6930:	bl	41d0 <strlen@plt>
    6934:	ldr	r1, [r5, #4]
    6938:	add	r2, r0, r4
    693c:	udiv	r3, r1, r2
    6940:	mls	r3, r2, r3, r1
    6944:	cmp	r3, #0
    6948:	bne	6968 <readstat_write_line_padding+0x60>
    694c:	ldrd	r4, [sp]
    6950:	mov	r0, #0
    6954:	ldrd	r6, [sp, #8]
    6958:	ldrd	r8, [sp, #16]
    695c:	ldr	sl, [sp, #24]
    6960:	add	sp, sp, #28
    6964:	pop	{pc}		; (ldr pc, [sp], #4)
    6968:	sub	r4, r4, r3
    696c:	mov	r8, r0
    6970:	mov	r0, r4
    6974:	bl	40e0 <malloc@plt>
    6978:	mov	r9, r0
    697c:	mov	r2, r4
    6980:	mov	r1, r7
    6984:	bl	4278 <memset@plt>
    6988:	mov	r2, r4
    698c:	mov	r1, r9
    6990:	mov	r0, r5
    6994:	bl	4428 <readstat_write_bytes@plt>
    6998:	cmp	r0, #0
    699c:	bne	69b0 <readstat_write_line_padding+0xa8>
    69a0:	mov	r2, r8
    69a4:	mov	r1, r6
    69a8:	mov	r0, r5
    69ac:	bl	4428 <readstat_write_bytes@plt>
    69b0:	mov	r0, r9
    69b4:	bl	3e94 <free@plt>
    69b8:	b	694c <readstat_write_line_padding+0x44>

000069bc <readstat_write_string>:
    69bc:	strd	r4, [sp, #-16]!
    69c0:	mov	r5, r0
    69c4:	mov	r0, r1
    69c8:	mov	r4, r1
    69cc:	str	r6, [sp, #8]
    69d0:	str	lr, [sp, #12]
    69d4:	bl	41d0 <strlen@plt>
    69d8:	mov	r2, r0
    69dc:	mov	r1, r4
    69e0:	ldr	r6, [sp, #8]
    69e4:	mov	r0, r5
    69e8:	ldrd	r4, [sp]
    69ec:	ldr	lr, [sp, #12]
    69f0:	add	sp, sp, #16
    69f4:	b	4428 <readstat_write_bytes@plt>

000069f8 <readstat_write_zeros>:
    69f8:	strd	r4, [sp, #-16]!
    69fc:	subs	r4, r1, #0
    6a00:	str	fp, [sp, #8]
    6a04:	add	fp, sp, #12
    6a08:	str	lr, [sp, #12]
    6a0c:	beq	6a44 <readstat_write_zeros+0x4c>
    6a10:	add	r3, r4, #7
    6a14:	mov	r2, r4
    6a18:	bic	r3, r3, #7
    6a1c:	mov	r5, r0
    6a20:	sub	sp, sp, r3
    6a24:	mov	r1, #0
    6a28:	mov	r0, sp
    6a2c:	bl	4278 <memset@plt>
    6a30:	mov	r2, r4
    6a34:	mov	r1, sp
    6a38:	mov	r0, r5
    6a3c:	bl	4428 <readstat_write_bytes@plt>
    6a40:	mov	r4, r0
    6a44:	mov	r0, r4
    6a48:	sub	sp, fp, #12
    6a4c:	ldrd	r4, [sp]
    6a50:	ldr	fp, [sp, #8]
    6a54:	add	sp, sp, #12
    6a58:	pop	{pc}		; (ldr pc, [sp], #4)

00006a5c <readstat_write_spaces>:
    6a5c:	strd	r4, [sp, #-16]!
    6a60:	subs	r4, r1, #0
    6a64:	str	fp, [sp, #8]
    6a68:	add	fp, sp, #12
    6a6c:	str	lr, [sp, #12]
    6a70:	beq	6aa8 <readstat_write_spaces+0x4c>
    6a74:	add	r3, r4, #7
    6a78:	mov	r2, r4
    6a7c:	bic	r3, r3, #7
    6a80:	mov	r5, r0
    6a84:	sub	sp, sp, r3
    6a88:	mov	r1, #32
    6a8c:	mov	r0, sp
    6a90:	bl	4278 <memset@plt>
    6a94:	mov	r2, r4
    6a98:	mov	r1, sp
    6a9c:	mov	r0, r5
    6aa0:	bl	4428 <readstat_write_bytes@plt>
    6aa4:	mov	r4, r0
    6aa8:	mov	r0, r4
    6aac:	sub	sp, fp, #12
    6ab0:	ldrd	r4, [sp]
    6ab4:	ldr	fp, [sp, #8]
    6ab8:	add	sp, sp, #12
    6abc:	pop	{pc}		; (ldr pc, [sp], #4)

00006ac0 <readstat_write_space_padded_string>:
    6ac0:	strd	r4, [sp, #-16]!
    6ac4:	subs	r4, r1, #0
    6ac8:	str	r6, [sp, #8]
    6acc:	str	lr, [sp, #12]
    6ad0:	beq	6b40 <readstat_write_space_padded_string+0x80>
    6ad4:	ldrb	r1, [r4]
    6ad8:	cmp	r1, #0
    6adc:	beq	6b40 <readstat_write_space_padded_string+0x80>
    6ae0:	mov	r6, r0
    6ae4:	mov	r0, r4
    6ae8:	mov	r5, r2
    6aec:	bl	41d0 <strlen@plt>
    6af0:	cmp	r0, r5
    6af4:	mov	r1, r4
    6af8:	movcc	r4, r0
    6afc:	movcs	r4, r5
    6b00:	mov	r0, r6
    6b04:	mov	r2, r4
    6b08:	bl	4428 <readstat_write_bytes@plt>
    6b0c:	cmp	r0, #0
    6b10:	beq	6b24 <readstat_write_space_padded_string+0x64>
    6b14:	ldrd	r4, [sp]
    6b18:	ldr	r6, [sp, #8]
    6b1c:	add	sp, sp, #12
    6b20:	pop	{pc}		; (ldr pc, [sp], #4)
    6b24:	sub	r1, r5, r4
    6b28:	mov	r0, r6
    6b2c:	ldrd	r4, [sp]
    6b30:	ldr	r6, [sp, #8]
    6b34:	ldr	lr, [sp, #12]
    6b38:	add	sp, sp, #16
    6b3c:	b	3db0 <readstat_write_spaces@plt>
    6b40:	mov	r1, r2
    6b44:	b	6b2c <readstat_write_space_padded_string+0x6c>

00006b48 <readstat_add_label_set>:
    6b48:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6b4c:	mov	r5, r0
    6b50:	ldr	r3, [r0, #44]	; 0x2c
    6b54:	strd	r6, [sp, #8]
    6b58:	strd	r8, [sp, #16]
    6b5c:	mov	r8, r1
    6b60:	mov	r9, r2
    6b64:	ldr	r6, [r0, #40]	; 0x28
    6b68:	str	sl, [sp, #24]
    6b6c:	str	lr, [sp, #28]
    6b70:	ldr	r7, [r0, #36]	; 0x24
    6b74:	cmp	r6, r3
    6b78:	beq	6bfc <readstat_add_label_set+0xb4>
    6b7c:	mov	r1, #284	; 0x11c
    6b80:	mov	r0, #1
    6b84:	bl	3d2c <calloc@plt>
    6b88:	ldr	r2, [pc, #144]	; 6c20 <readstat_add_label_set+0xd8>
    6b8c:	add	r1, r6, #1
    6b90:	mov	r4, r0
    6b94:	mov	r3, r9
    6b98:	str	r1, [r5, #40]	; 0x28
    6b9c:	mov	r1, #256	; 0x100
    6ba0:	str	r0, [r7, r6, lsl #2]
    6ba4:	str	r8, [r0], #4
    6ba8:	add	r2, pc, r2
    6bac:	bl	4254 <snprintf@plt>
    6bb0:	mov	r1, #32
    6bb4:	mov	r0, #10
    6bb8:	bl	3d2c <calloc@plt>
    6bbc:	mov	r3, #10
    6bc0:	mov	r1, #4
    6bc4:	str	r0, [r4, #260]	; 0x104
    6bc8:	mov	r0, #2
    6bcc:	str	r3, [r4, #268]	; 0x10c
    6bd0:	bl	3d2c <calloc@plt>
    6bd4:	mov	r3, #2
    6bd8:	str	r0, [r4, #272]	; 0x110
    6bdc:	mov	r0, r4
    6be0:	ldrd	r6, [sp, #8]
    6be4:	str	r3, [r4, #280]	; 0x118
    6be8:	ldrd	r4, [sp]
    6bec:	ldrd	r8, [sp, #16]
    6bf0:	ldr	sl, [sp, #24]
    6bf4:	add	sp, sp, #28
    6bf8:	pop	{pc}		; (ldr pc, [sp], #4)
    6bfc:	lsl	r3, r6, #1
    6c00:	mov	r0, r7
    6c04:	lsl	r1, r6, #3
    6c08:	str	r3, [r5, #44]	; 0x2c
    6c0c:	bl	3fcc <realloc@plt>
    6c10:	mov	r7, r0
    6c14:	str	r0, [r5, #36]	; 0x24
    6c18:	ldr	r6, [r5, #40]	; 0x28
    6c1c:	b	6b7c <readstat_add_label_set+0x34>
    6c20:	.word	0x0001f0e8

00006c24 <readstat_get_label_set>:
    6c24:	ldr	r3, [r0, #40]	; 0x28
    6c28:	cmp	r3, r1
    6c2c:	ldrgt	r3, [r0, #36]	; 0x24
    6c30:	ldrgt	r0, [r3, r1, lsl #2]
    6c34:	movle	r0, #0
    6c38:	bx	lr

00006c3c <readstat_sort_label_set>:
    6c3c:	mov	ip, r0
    6c40:	mov	r3, r1
    6c44:	ldr	r0, [r0, #260]	; 0x104
    6c48:	mov	r2, #32
    6c4c:	ldr	r1, [ip, #264]	; 0x108
    6c50:	b	4410 <qsort@plt>

00006c54 <readstat_get_value_label>:
    6c54:	ldr	r3, [r0, #264]	; 0x108
    6c58:	cmp	r3, r1
    6c5c:	ldrgt	r0, [r0, #260]	; 0x104
    6c60:	addgt	r0, r0, r1, lsl #5
    6c64:	movle	r0, #0
    6c68:	bx	lr

00006c6c <readstat_writer_free>:
    6c6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6c70:	subs	r4, r0, #0
    6c74:	strd	r6, [sp, #8]
    6c78:	str	r8, [sp, #16]
    6c7c:	str	lr, [sp, #20]
    6c80:	beq	6e28 <readstat_writer_free+0x1bc>
    6c84:	ldr	r3, [r4, #288]	; 0x120
    6c88:	cmp	r3, #0
    6c8c:	beq	6ca0 <readstat_writer_free+0x34>
    6c90:	ldr	r0, [r4, #300]	; 0x12c
    6c94:	cmp	r0, #0
    6c98:	beq	6ca0 <readstat_writer_free+0x34>
    6c9c:	blx	r3
    6ca0:	ldr	r0, [r4, #24]
    6ca4:	cmp	r0, #0
    6ca8:	beq	6cdc <readstat_writer_free+0x70>
    6cac:	ldr	r3, [r4, #28]
    6cb0:	cmp	r3, #0
    6cb4:	ble	6cd8 <readstat_writer_free+0x6c>
    6cb8:	mov	r5, #0
    6cbc:	ldr	r0, [r0, r5, lsl #2]
    6cc0:	add	r5, r5, #1
    6cc4:	bl	3e94 <free@plt>
    6cc8:	ldr	r0, [r4, #24]
    6ccc:	ldr	r3, [r4, #28]
    6cd0:	cmp	r3, r5
    6cd4:	bgt	6cbc <readstat_writer_free+0x50>
    6cd8:	bl	3e94 <free@plt>
    6cdc:	ldr	r0, [r4, #36]	; 0x24
    6ce0:	cmp	r0, #0
    6ce4:	beq	6d84 <readstat_writer_free+0x118>
    6ce8:	ldr	r3, [r4, #40]	; 0x28
    6cec:	cmp	r3, #0
    6cf0:	ble	6d80 <readstat_writer_free+0x114>
    6cf4:	mov	r7, #0
    6cf8:	ldr	r5, [r0, r7, lsl #2]
    6cfc:	ldr	r3, [r5, #264]	; 0x108
    6d00:	cmp	r3, #0
    6d04:	movgt	r6, #0
    6d08:	ble	6d4c <readstat_writer_free+0xe0>
    6d0c:	mov	r1, r6
    6d10:	mov	r0, r5
    6d14:	bl	44a0 <readstat_get_value_label@plt>
    6d18:	ldr	r3, [r0, #24]
    6d1c:	mov	r8, r0
    6d20:	add	r6, r6, #1
    6d24:	subs	r0, r3, #0
    6d28:	beq	6d30 <readstat_writer_free+0xc4>
    6d2c:	bl	3e94 <free@plt>
    6d30:	ldr	r3, [r8, #16]
    6d34:	subs	r0, r3, #0
    6d38:	beq	6d40 <readstat_writer_free+0xd4>
    6d3c:	bl	3e94 <free@plt>
    6d40:	ldr	r3, [r5, #264]	; 0x108
    6d44:	cmp	r6, r3
    6d48:	blt	6d0c <readstat_writer_free+0xa0>
    6d4c:	ldr	r0, [r5, #260]	; 0x104
    6d50:	add	r7, r7, #1
    6d54:	bl	3e94 <free@plt>
    6d58:	ldr	r0, [r5, #272]	; 0x110
    6d5c:	bl	3e94 <free@plt>
    6d60:	mov	r0, r5
    6d64:	bl	3e94 <free@plt>
    6d68:	ldr	r3, [r4, #40]	; 0x28
    6d6c:	cmp	r3, r7
    6d70:	ble	6d7c <readstat_writer_free+0x110>
    6d74:	ldr	r0, [r4, #36]	; 0x24
    6d78:	b	6cf8 <readstat_writer_free+0x8c>
    6d7c:	ldr	r0, [r4, #36]	; 0x24
    6d80:	bl	3e94 <free@plt>
    6d84:	ldr	r0, [r4, #48]	; 0x30
    6d88:	cmp	r0, #0
    6d8c:	beq	6dc0 <readstat_writer_free+0x154>
    6d90:	ldr	r3, [r4, #52]	; 0x34
    6d94:	cmp	r3, #0
    6d98:	ble	6dbc <readstat_writer_free+0x150>
    6d9c:	mov	r5, #0
    6da0:	ldr	r0, [r0, r5, lsl #2]
    6da4:	add	r5, r5, #1
    6da8:	bl	3e94 <free@plt>
    6dac:	ldr	r0, [r4, #48]	; 0x30
    6db0:	ldr	r3, [r4, #52]	; 0x34
    6db4:	cmp	r3, r5
    6db8:	bgt	6da0 <readstat_writer_free+0x134>
    6dbc:	bl	3e94 <free@plt>
    6dc0:	ldr	r0, [r4, #60]	; 0x3c
    6dc4:	cmp	r0, #0
    6dc8:	beq	6dfc <readstat_writer_free+0x190>
    6dcc:	ldr	r3, [r4, #64]	; 0x40
    6dd0:	cmp	r3, #0
    6dd4:	ble	6df8 <readstat_writer_free+0x18c>
    6dd8:	mov	r5, #0
    6ddc:	ldr	r0, [r0, r5, lsl #2]
    6de0:	add	r5, r5, #1
    6de4:	bl	3e94 <free@plt>
    6de8:	ldr	r0, [r4, #60]	; 0x3c
    6dec:	ldr	r3, [r4, #64]	; 0x40
    6df0:	cmp	r3, r5
    6df4:	bgt	6ddc <readstat_writer_free+0x170>
    6df8:	bl	3e94 <free@plt>
    6dfc:	ldr	r0, [r4, #72]	; 0x48
    6e00:	cmp	r0, #0
    6e04:	beq	6e0c <readstat_writer_free+0x1a0>
    6e08:	bl	3e94 <free@plt>
    6e0c:	mov	r0, r4
    6e10:	ldrd	r4, [sp]
    6e14:	ldrd	r6, [sp, #8]
    6e18:	ldr	r8, [sp, #16]
    6e1c:	ldr	lr, [sp, #20]
    6e20:	add	sp, sp, #24
    6e24:	b	3e94 <free@plt>
    6e28:	ldrd	r4, [sp]
    6e2c:	ldrd	r6, [sp, #8]
    6e30:	ldr	r8, [sp, #16]
    6e34:	add	sp, sp, #20
    6e38:	pop	{pc}		; (ldr pc, [sp], #4)

00006e3c <readstat_get_label_set_variable>:
    6e3c:	ldr	r3, [r0, #276]	; 0x114
    6e40:	cmp	r3, r1
    6e44:	ldrgt	r3, [r0, #272]	; 0x110
    6e48:	ldrgt	r0, [r3, r1, lsl #2]
    6e4c:	movle	r0, #0
    6e50:	bx	lr

00006e54 <readstat_label_double_value>:
    6e54:	str	r4, [sp, #-8]!
    6e58:	str	lr, [sp, #4]
    6e5c:	vpush	{d8}
    6e60:	vmov.f64	d8, d0
    6e64:	bl	6584 <readstat_add_value_label>
    6e68:	vcvt.s32.f64	s15, d8
    6e6c:	vstr	d8, [r0]
    6e70:	vpop	{d8}
    6e74:	ldr	r4, [sp]
    6e78:	add	sp, sp, #4
    6e7c:	vstr	s15, [r0, #8]
    6e80:	pop	{pc}		; (ldr pc, [sp], #4)

00006e84 <readstat_label_int32_value>:
    6e84:	str	r4, [sp, #-8]!
    6e88:	mov	r4, r1
    6e8c:	mov	r1, r2
    6e90:	str	lr, [sp, #4]
    6e94:	bl	6584 <readstat_add_value_label>
    6e98:	vmov	s15, r4
    6e9c:	str	r4, [r0, #8]
    6ea0:	ldr	r4, [sp]
    6ea4:	add	sp, sp, #4
    6ea8:	vcvt.f64.s32	d7, s15
    6eac:	vstr	d7, [r0]
    6eb0:	pop	{pc}		; (ldr pc, [sp], #4)

00006eb4 <readstat_label_string_value>:
    6eb4:	strd	r4, [sp, #-16]!
    6eb8:	mov	r4, r1
    6ebc:	mov	r1, r2
    6ec0:	str	r6, [sp, #8]
    6ec4:	str	lr, [sp, #12]
    6ec8:	bl	6584 <readstat_add_value_label>
    6ecc:	cmp	r4, #0
    6ed0:	beq	6ee0 <readstat_label_string_value+0x2c>
    6ed4:	ldrb	r3, [r4]
    6ed8:	cmp	r3, #0
    6edc:	bne	6ef0 <readstat_label_string_value+0x3c>
    6ee0:	ldrd	r4, [sp]
    6ee4:	ldr	r6, [sp, #8]
    6ee8:	add	sp, sp, #12
    6eec:	pop	{pc}		; (ldr pc, [sp], #4)
    6ef0:	mov	r5, r0
    6ef4:	mov	r0, r4
    6ef8:	bl	41d0 <strlen@plt>
    6efc:	str	r0, [r5, #20]
    6f00:	mov	r6, r0
    6f04:	bl	40e0 <malloc@plt>
    6f08:	mov	r2, r6
    6f0c:	mov	r1, r4
    6f10:	ldr	r6, [sp, #8]
    6f14:	ldr	lr, [sp, #12]
    6f18:	str	r0, [r5, #16]
    6f1c:	ldrd	r4, [sp]
    6f20:	add	sp, sp, #16
    6f24:	b	3ef4 <memcpy@plt>

00006f28 <readstat_label_tagged_value>:
    6f28:	str	r4, [sp, #-8]!
    6f2c:	mov	r4, r1
    6f30:	mov	r1, r2
    6f34:	str	lr, [sp, #4]
    6f38:	bl	6584 <readstat_add_value_label>
    6f3c:	strb	r4, [r0, #12]
    6f40:	ldr	r4, [sp]
    6f44:	add	sp, sp, #4
    6f48:	pop	{pc}		; (ldr pc, [sp], #4)

00006f4c <readstat_add_variable>:
    6f4c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6f50:	ldr	r5, [r0, #28]
    6f54:	strd	r6, [sp, #8]
    6f58:	mov	r6, r0
    6f5c:	strd	r8, [sp, #16]
    6f60:	mov	r9, r3
    6f64:	mov	r8, r1
    6f68:	str	sl, [sp, #24]
    6f6c:	mov	sl, r2
    6f70:	ldr	r3, [r0, #32]
    6f74:	str	lr, [sp, #28]
    6f78:	ldr	r7, [r0, #24]
    6f7c:	cmp	r5, r3
    6f80:	beq	7004 <readstat_add_variable+0xb8>
    6f84:	movw	r1, #2152	; 0x868
    6f88:	mov	r0, #1
    6f8c:	bl	3d2c <calloc@plt>
    6f90:	add	r3, r5, #1
    6f94:	str	r5, [r0, #4]
    6f98:	mov	r4, r0
    6f9c:	str	r3, [r6, #28]
    6fa0:	str	r0, [r7, r5, lsl #2]
    6fa4:	str	sl, [r0]
    6fa8:	str	r9, [r0, #1600]	; 0x640
    6fac:	bl	4518 <readstat_variable_get_type_class@plt>
    6fb0:	cmp	r0, #0
    6fb4:	mov	r2, #0
    6fb8:	moveq	r3, #1
    6fbc:	movne	r3, #3
    6fc0:	cmp	r8, r2
    6fc4:	str	r2, [r4, #2128]	; 0x850
    6fc8:	str	r3, [r4, #2132]	; 0x854
    6fcc:	beq	6fe8 <readstat_add_variable+0x9c>
    6fd0:	ldr	r2, [pc, #80]	; 7028 <readstat_add_variable+0xdc>
    6fd4:	mov	r3, r8
    6fd8:	mov	r1, #300	; 0x12c
    6fdc:	add	r0, r4, #8
    6fe0:	add	r2, pc, r2
    6fe4:	bl	4254 <snprintf@plt>
    6fe8:	mov	r0, r4
    6fec:	ldrd	r4, [sp]
    6ff0:	ldrd	r6, [sp, #8]
    6ff4:	ldrd	r8, [sp, #16]
    6ff8:	ldr	sl, [sp, #24]
    6ffc:	add	sp, sp, #28
    7000:	pop	{pc}		; (ldr pc, [sp], #4)
    7004:	lsl	r3, r5, #1
    7008:	mov	r0, r7
    700c:	lsl	r1, r5, #3
    7010:	str	r3, [r6, #32]
    7014:	bl	3fcc <realloc@plt>
    7018:	mov	r7, r0
    701c:	str	r0, [r6, #24]
    7020:	ldr	r5, [r6, #28]
    7024:	b	6f84 <readstat_add_variable+0x38>
    7028:	.word	0x0001ecb0

0000702c <readstat_add_string_ref>:
    702c:	strd	r4, [sp, #-16]!
    7030:	mov	r4, r0
    7034:	mov	r0, r1
    7038:	str	r6, [sp, #8]
    703c:	str	lr, [sp, #12]
    7040:	bl	432c <readstat_string_ref_init@plt>
    7044:	ldr	r1, [r4, #64]	; 0x40
    7048:	mov	r5, r0
    704c:	ldr	r3, [r4, #68]	; 0x44
    7050:	cmp	r1, r3
    7054:	beq	707c <readstat_add_string_ref+0x50>
    7058:	ldr	r3, [r4, #60]	; 0x3c
    705c:	add	r2, r1, #1
    7060:	mov	r0, r5
    7064:	ldr	r6, [sp, #8]
    7068:	str	r2, [r4, #64]	; 0x40
    706c:	str	r5, [r3, r1, lsl #2]
    7070:	ldrd	r4, [sp]
    7074:	add	sp, sp, #12
    7078:	pop	{pc}		; (ldr pc, [sp], #4)
    707c:	lsl	r3, r1, #1
    7080:	ldr	r0, [r4, #60]	; 0x3c
    7084:	lsl	r1, r1, #3
    7088:	str	r3, [r4, #68]	; 0x44
    708c:	bl	3fcc <realloc@plt>
    7090:	mov	r3, r0
    7094:	str	r0, [r4, #60]	; 0x3c
    7098:	ldr	r1, [r4, #64]	; 0x40
    709c:	b	705c <readstat_add_string_ref+0x30>

000070a0 <readstat_add_note>:
    70a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    70a4:	mov	r4, r0
    70a8:	ldr	r5, [r0, #52]	; 0x34
    70ac:	ldr	r3, [r0, #56]	; 0x38
    70b0:	strd	r6, [sp, #8]
    70b4:	mov	r6, r1
    70b8:	str	r8, [sp, #16]
    70bc:	str	lr, [sp, #20]
    70c0:	ldr	r8, [r0, #48]	; 0x30
    70c4:	cmp	r5, r3
    70c8:	beq	710c <readstat_add_note+0x6c>
    70cc:	mov	r0, r6
    70d0:	bl	41d0 <strlen@plt>
    70d4:	add	r7, r0, #1
    70d8:	mov	r0, r7
    70dc:	bl	40e0 <malloc@plt>
    70e0:	mov	r2, r7
    70e4:	mov	r1, r6
    70e8:	bl	3ef4 <memcpy@plt>
    70ec:	add	r2, r5, #1
    70f0:	ldrd	r6, [sp, #8]
    70f4:	str	r2, [r4, #52]	; 0x34
    70f8:	str	r0, [r8, r5, lsl #2]
    70fc:	ldrd	r4, [sp]
    7100:	ldr	r8, [sp, #16]
    7104:	add	sp, sp, #20
    7108:	pop	{pc}		; (ldr pc, [sp], #4)
    710c:	lsl	r3, r5, #1
    7110:	mov	r0, r8
    7114:	lsl	r1, r5, #3
    7118:	str	r3, [r4, #56]	; 0x38
    711c:	bl	3fcc <realloc@plt>
    7120:	mov	r8, r0
    7124:	str	r0, [r4, #48]	; 0x30
    7128:	ldr	r5, [r4, #52]	; 0x34
    712c:	b	70cc <readstat_add_note+0x2c>

00007130 <readstat_variable_set_label>:
    7130:	subs	r3, r1, #0
    7134:	add	r0, r0, #564	; 0x234
    7138:	beq	714c <readstat_variable_set_label+0x1c>
    713c:	ldr	r2, [pc, #16]	; 7154 <readstat_variable_set_label+0x24>
    7140:	mov	r1, #1024	; 0x400
    7144:	add	r2, pc, r2
    7148:	b	4254 <snprintf@plt>
    714c:	mov	r2, #1024	; 0x400
    7150:	b	4278 <memset@plt>
    7154:	.word	0x0001eb4c

00007158 <readstat_variable_set_format>:
    7158:	subs	r3, r1, #0
    715c:	add	r0, r0, #308	; 0x134
    7160:	beq	7174 <readstat_variable_set_format+0x1c>
    7164:	ldr	r2, [pc, #16]	; 717c <readstat_variable_set_format+0x24>
    7168:	mov	r1, #256	; 0x100
    716c:	add	r2, pc, r2
    7170:	b	4254 <snprintf@plt>
    7174:	mov	r2, #256	; 0x100
    7178:	b	4278 <memset@plt>
    717c:	.word	0x0001eb24

00007180 <readstat_variable_set_measure>:
    7180:	str	r1, [r0, #2128]	; 0x850
    7184:	bx	lr

00007188 <readstat_variable_set_alignment>:
    7188:	str	r1, [r0, #2132]	; 0x854
    718c:	bx	lr

00007190 <readstat_variable_set_display_width>:
    7190:	str	r1, [r0, #2136]	; 0x858
    7194:	bx	lr

00007198 <readstat_variable_set_label_set>:
    7198:	cmp	r1, #0
    719c:	str	r1, [r0, #1588]	; 0x634
    71a0:	bxeq	lr
    71a4:	strd	r4, [sp, #-16]!
    71a8:	mov	r5, r0
    71ac:	add	r0, r1, #272	; 0x110
    71b0:	mov	r4, r1
    71b4:	ldm	r0, {r0, r1, r3}
    71b8:	str	r6, [sp, #8]
    71bc:	str	lr, [sp, #12]
    71c0:	cmp	r1, r3
    71c4:	beq	71e4 <readstat_variable_set_label_set+0x4c>
    71c8:	add	r3, r1, #1
    71cc:	ldr	r6, [sp, #8]
    71d0:	str	r3, [r4, #276]	; 0x114
    71d4:	str	r5, [r0, r1, lsl #2]
    71d8:	ldrd	r4, [sp]
    71dc:	add	sp, sp, #12
    71e0:	pop	{pc}		; (ldr pc, [sp], #4)
    71e4:	lsl	r3, r1, #1
    71e8:	lsl	r1, r1, #3
    71ec:	str	r3, [r4, #280]	; 0x118
    71f0:	bl	3fcc <realloc@plt>
    71f4:	str	r0, [r4, #272]	; 0x110
    71f8:	ldr	r1, [r4, #276]	; 0x114
    71fc:	b	71c8 <readstat_variable_set_label_set+0x30>

00007200 <readstat_get_variable>:
    7200:	ldr	r3, [r0, #28]
    7204:	cmp	r3, r1
    7208:	ldrgt	r3, [r0, #24]
    720c:	ldrgt	r0, [r3, r1, lsl #2]
    7210:	movle	r0, #0
    7214:	bx	lr

00007218 <readstat_begin_writing_data.part.1>:
    7218:	ldr	r3, [r0, #28]
    721c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7220:	mov	r4, r0
    7224:	strd	r6, [sp, #8]
    7228:	mov	r7, #0
    722c:	str	r8, [sp, #16]
    7230:	str	lr, [sp, #20]
    7234:	cmp	r3, #0
    7238:	ble	72dc <readstat_begin_writing_data.part.1+0xc4>
    723c:	mov	r6, r7
    7240:	mov	r1, r6
    7244:	mov	r0, r4
    7248:	bl	4350 <readstat_get_variable@plt>
    724c:	mov	r5, r0
    7250:	ldr	r0, [r0]
    7254:	add	r6, r6, #1
    7258:	ldr	r3, [r4, #228]	; 0xe4
    725c:	ldr	r1, [r5, #1600]	; 0x640
    7260:	blx	r3
    7264:	ldr	r3, [r4, #28]
    7268:	str	r7, [r5, #1592]	; 0x638
    726c:	add	r7, r7, r0
    7270:	str	r0, [r5, #1596]	; 0x63c
    7274:	cmp	r6, r3
    7278:	blt	7240 <readstat_begin_writing_data.part.1+0x28>
    727c:	ldr	r2, [r4, #232]	; 0xe8
    7280:	cmp	r2, #0
    7284:	beq	72dc <readstat_begin_writing_data.part.1+0xc4>
    7288:	cmp	r3, #0
    728c:	ble	72dc <readstat_begin_writing_data.part.1+0xc4>
    7290:	mov	r5, #0
    7294:	b	72a4 <readstat_begin_writing_data.part.1+0x8c>
    7298:	ldr	r3, [r4, #28]
    729c:	cmp	r5, r3
    72a0:	bge	72dc <readstat_begin_writing_data.part.1+0xc4>
    72a4:	mov	r1, r5
    72a8:	mov	r0, r4
    72ac:	bl	4350 <readstat_get_variable@plt>
    72b0:	mov	r1, r0
    72b4:	mov	r0, r4
    72b8:	bl	4470 <readstat_validate_variable@plt>
    72bc:	cmp	r0, #0
    72c0:	add	r5, r5, #1
    72c4:	beq	7298 <readstat_begin_writing_data.part.1+0x80>
    72c8:	ldrd	r4, [sp]
    72cc:	ldrd	r6, [sp, #8]
    72d0:	ldr	r8, [sp, #16]
    72d4:	add	sp, sp, #20
    72d8:	pop	{pc}		; (ldr pc, [sp], #4)
    72dc:	mov	r0, r7
    72e0:	str	r7, [r4, #76]	; 0x4c
    72e4:	bl	40e0 <malloc@plt>
    72e8:	ldr	r3, [r4, #276]	; 0x114
    72ec:	str	r0, [r4, #72]	; 0x48
    72f0:	cmp	r3, #0
    72f4:	beq	7314 <readstat_begin_writing_data.part.1+0xfc>
    72f8:	mov	r0, r4
    72fc:	ldrd	r4, [sp]
    7300:	ldrd	r6, [sp, #8]
    7304:	ldr	r8, [sp, #16]
    7308:	ldr	lr, [sp, #20]
    730c:	add	sp, sp, #24
    7310:	bx	r3
    7314:	mov	r0, r3
    7318:	b	72c8 <readstat_begin_writing_data.part.1+0xb0>

0000731c <readstat_get_string_ref>:
    731c:	ldr	r3, [r0, #64]	; 0x40
    7320:	cmp	r3, r1
    7324:	ldrgt	r3, [r0, #60]	; 0x3c
    7328:	ldrgt	r0, [r3, r1, lsl #2]
    732c:	movle	r0, #0
    7330:	bx	lr

00007334 <readstat_writer_set_file_label>:
    7334:	ldr	r2, [pc, #40]	; 7364 <readstat_writer_set_file_label+0x30>
    7338:	mov	r3, r1
    733c:	add	r0, r0, #88	; 0x58
    7340:	mov	r1, #100	; 0x64
    7344:	str	r4, [sp, #-8]!
    7348:	str	lr, [sp, #4]
    734c:	add	r2, pc, r2
    7350:	bl	4254 <snprintf@plt>
    7354:	ldr	r4, [sp]
    7358:	add	sp, sp, #4
    735c:	mov	r0, #0
    7360:	pop	{pc}		; (ldr pc, [sp], #4)
    7364:	.word	0x0001e944

00007368 <readstat_writer_set_file_timestamp>:
    7368:	str	r1, [r0, #20]
    736c:	mov	r0, #0
    7370:	bx	lr

00007374 <readstat_writer_set_table_name>:
    7374:	ldr	r2, [pc, #40]	; 73a4 <readstat_writer_set_table_name+0x30>
    7378:	mov	r3, r1
    737c:	add	r0, r0, #188	; 0xbc
    7380:	mov	r1, #33	; 0x21
    7384:	str	r4, [sp, #-8]!
    7388:	str	lr, [sp, #4]
    738c:	add	r2, pc, r2
    7390:	bl	4254 <snprintf@plt>
    7394:	ldr	r4, [sp]
    7398:	add	sp, sp, #4
    739c:	mov	r0, #0
    73a0:	pop	{pc}		; (ldr pc, [sp], #4)
    73a4:	.word	0x0001e904

000073a8 <readstat_writer_set_fweight_variable>:
    73a8:	strd	r4, [sp, #-16]!
    73ac:	mov	r5, r0
    73b0:	mov	r0, r1
    73b4:	mov	r4, r1
    73b8:	str	r6, [sp, #8]
    73bc:	str	lr, [sp, #12]
    73c0:	bl	4518 <readstat_variable_get_type_class@plt>
    73c4:	cmp	r0, #0
    73c8:	ldr	r6, [sp, #8]
    73cc:	movne	r0, #0
    73d0:	moveq	r0, #30
    73d4:	strne	r4, [r5, #224]	; 0xe0
    73d8:	ldrd	r4, [sp]
    73dc:	add	sp, sp, #12
    73e0:	pop	{pc}		; (ldr pc, [sp], #4)

000073e4 <readstat_writer_set_file_format_version>:
    73e4:	str	r1, [r0, #8]
    73e8:	mov	r0, #0
    73ec:	bx	lr

000073f0 <readstat_writer_set_file_format_is_64bit>:
    73f0:	str	r1, [r0, #12]
    73f4:	mov	r0, #0
    73f8:	bx	lr

000073fc <readstat_writer_set_compression>:
    73fc:	str	r1, [r0, #16]
    7400:	mov	r0, #0
    7404:	bx	lr

00007408 <readstat_writer_set_error_handler>:
    7408:	str	r1, [r0, #296]	; 0x128
    740c:	mov	r0, #0
    7410:	bx	lr

00007414 <readstat_begin_writing_file>:
    7414:	mov	ip, #1
    7418:	str	r2, [r0, #80]	; 0x50
    741c:	str	r1, [r0, #304]	; 0x130
    7420:	str	ip, [r0, #308]	; 0x134
    7424:	b	3d74 <readstat_validate_metadata@plt>

00007428 <readstat_begin_row>:
    7428:	ldr	r3, [r0, #308]	; 0x134
    742c:	strd	r4, [sp, #-16]!
    7430:	str	r6, [sp, #8]
    7434:	str	lr, [sp, #12]
    7438:	cmp	r3, #0
    743c:	moveq	r5, #14
    7440:	beq	7468 <readstat_begin_row+0x40>
    7444:	ldr	r3, [r0, #84]	; 0x54
    7448:	mov	r4, r0
    744c:	cmp	r3, #0
    7450:	movne	r5, #0
    7454:	beq	747c <readstat_begin_row+0x54>
    7458:	mov	r1, #0
    745c:	ldr	r0, [r4, #72]	; 0x48
    7460:	ldr	r2, [r4, #76]	; 0x4c
    7464:	bl	4278 <memset@plt>
    7468:	mov	r0, r5
    746c:	ldrd	r4, [sp]
    7470:	ldr	r6, [sp, #8]
    7474:	add	sp, sp, #12
    7478:	pop	{pc}		; (ldr pc, [sp], #4)
    747c:	bl	3d74 <readstat_validate_metadata@plt>
    7480:	subs	r5, r0, #0
    7484:	bne	7458 <readstat_begin_row+0x30>
    7488:	mov	r0, r4
    748c:	bl	7218 <readstat_begin_writing_data.part.1>
    7490:	mov	r5, r0
    7494:	b	7458 <readstat_begin_row+0x30>

00007498 <readstat_insert_int8_value>:
    7498:	ldr	ip, [r0, #308]	; 0x134
    749c:	cmp	ip, #0
    74a0:	beq	74d4 <readstat_insert_int8_value+0x3c>
    74a4:	ldr	ip, [r1]
    74a8:	cmp	ip, #1
    74ac:	bne	74cc <readstat_insert_int8_value+0x34>
    74b0:	push	{lr}		; (str lr, [sp, #-4]!)
    74b4:	ldr	lr, [r0, #72]	; 0x48
    74b8:	ldr	ip, [r1, #1592]	; 0x638
    74bc:	ldr	r3, [r0, #236]	; 0xec
    74c0:	add	r0, lr, ip
    74c4:	pop	{lr}		; (ldr lr, [sp], #4)
    74c8:	bx	r3
    74cc:	mov	r0, #12
    74d0:	bx	lr
    74d4:	mov	r0, #14
    74d8:	bx	lr

000074dc <readstat_insert_int16_value>:
    74dc:	ldr	ip, [r0, #308]	; 0x134
    74e0:	cmp	ip, #0
    74e4:	beq	7518 <readstat_insert_int16_value+0x3c>
    74e8:	ldr	ip, [r1]
    74ec:	cmp	ip, #2
    74f0:	bne	7510 <readstat_insert_int16_value+0x34>
    74f4:	push	{lr}		; (str lr, [sp, #-4]!)
    74f8:	ldr	lr, [r0, #72]	; 0x48
    74fc:	ldr	ip, [r1, #1592]	; 0x638
    7500:	ldr	r3, [r0, #240]	; 0xf0
    7504:	add	r0, lr, ip
    7508:	pop	{lr}		; (ldr lr, [sp], #4)
    750c:	bx	r3
    7510:	mov	r0, #12
    7514:	bx	lr
    7518:	mov	r0, #14
    751c:	bx	lr

00007520 <readstat_insert_int32_value>:
    7520:	ldr	ip, [r0, #308]	; 0x134
    7524:	cmp	ip, #0
    7528:	beq	755c <readstat_insert_int32_value+0x3c>
    752c:	ldr	ip, [r1]
    7530:	cmp	ip, #3
    7534:	bne	7554 <readstat_insert_int32_value+0x34>
    7538:	push	{lr}		; (str lr, [sp, #-4]!)
    753c:	ldr	lr, [r0, #72]	; 0x48
    7540:	ldr	ip, [r1, #1592]	; 0x638
    7544:	ldr	r3, [r0, #244]	; 0xf4
    7548:	add	r0, lr, ip
    754c:	pop	{lr}		; (ldr lr, [sp], #4)
    7550:	bx	r3
    7554:	mov	r0, #12
    7558:	bx	lr
    755c:	mov	r0, #14
    7560:	bx	lr

00007564 <readstat_insert_float_value>:
    7564:	ldr	r2, [r0, #308]	; 0x134
    7568:	cmp	r2, #0
    756c:	beq	7598 <readstat_insert_float_value+0x34>
    7570:	ldr	r2, [r1]
    7574:	cmp	r2, #4
    7578:	bne	7590 <readstat_insert_float_value+0x2c>
    757c:	ldr	ip, [r0, #72]	; 0x48
    7580:	ldr	r2, [r1, #1592]	; 0x638
    7584:	ldr	r3, [r0, #248]	; 0xf8
    7588:	add	r0, ip, r2
    758c:	bx	r3
    7590:	mov	r0, #12
    7594:	bx	lr
    7598:	mov	r0, #14
    759c:	bx	lr

000075a0 <readstat_insert_double_value>:
    75a0:	ldr	r2, [r0, #308]	; 0x134
    75a4:	cmp	r2, #0
    75a8:	beq	75d4 <readstat_insert_double_value+0x34>
    75ac:	ldr	r2, [r1]
    75b0:	cmp	r2, #5
    75b4:	bne	75cc <readstat_insert_double_value+0x2c>
    75b8:	ldr	ip, [r0, #72]	; 0x48
    75bc:	ldr	r2, [r1, #1592]	; 0x638
    75c0:	ldr	r3, [r0, #252]	; 0xfc
    75c4:	add	r0, ip, r2
    75c8:	bx	r3
    75cc:	mov	r0, #12
    75d0:	bx	lr
    75d4:	mov	r0, #14
    75d8:	bx	lr

000075dc <readstat_insert_string_value>:
    75dc:	ldr	ip, [r0, #308]	; 0x134
    75e0:	cmp	ip, #0
    75e4:	beq	7610 <readstat_insert_string_value+0x34>
    75e8:	ldr	ip, [r1]
    75ec:	cmp	ip, #0
    75f0:	bne	7618 <readstat_insert_string_value+0x3c>
    75f4:	push	{lr}		; (str lr, [sp, #-4]!)
    75f8:	ldr	lr, [r0, #72]	; 0x48
    75fc:	ldr	ip, [r1, #1592]	; 0x638
    7600:	ldr	r3, [r0, #256]	; 0x100
    7604:	add	r0, lr, ip
    7608:	pop	{lr}		; (ldr lr, [sp], #4)
    760c:	bx	r3
    7610:	mov	r0, #14
    7614:	bx	lr
    7618:	mov	r0, #12
    761c:	bx	lr

00007620 <readstat_insert_string_ref>:
    7620:	mov	r3, r1
    7624:	ldr	r1, [r0, #308]	; 0x134
    7628:	cmp	r1, #0
    762c:	beq	76a4 <readstat_insert_string_ref+0x84>
    7630:	ldr	r1, [r3]
    7634:	cmp	r1, #6
    7638:	bne	769c <readstat_insert_string_ref+0x7c>
    763c:	strd	r4, [sp, #-20]!	; 0xffffffec
    7640:	strd	r6, [sp, #8]
    7644:	str	lr, [sp, #16]
    7648:	ldr	lr, [r0, #260]	; 0x104
    764c:	cmp	lr, #0
    7650:	beq	76ac <readstat_insert_string_ref+0x8c>
    7654:	cmp	r2, #0
    7658:	beq	7674 <readstat_insert_string_ref+0x54>
    765c:	ldrd	r6, [r2, #8]
    7660:	mvn	r5, #0
    7664:	mvn	r4, #0
    7668:	cmp	r7, r5
    766c:	cmpeq	r6, r4
    7670:	beq	76c0 <readstat_insert_string_ref+0xa0>
    7674:	mov	r1, r3
    7678:	ldr	r0, [r0, #72]	; 0x48
    767c:	ldr	r3, [r3, #1592]	; 0x638
    7680:	ldrd	r4, [sp]
    7684:	ldrd	r6, [sp, #8]
    7688:	add	r0, r0, r3
    768c:	mov	r3, lr
    7690:	ldr	lr, [sp, #16]
    7694:	add	sp, sp, #20
    7698:	bx	r3
    769c:	mov	r0, #12
    76a0:	bx	lr
    76a4:	mov	r0, #14
    76a8:	bx	lr
    76ac:	ldrd	r4, [sp]
    76b0:	mov	r0, #33	; 0x21
    76b4:	ldrd	r6, [sp, #8]
    76b8:	add	sp, sp, #16
    76bc:	pop	{pc}		; (ldr pc, [sp], #4)
    76c0:	ldrd	r4, [r2]
    76c4:	cmp	r5, r7
    76c8:	cmpeq	r4, r6
    76cc:	bne	7674 <readstat_insert_string_ref+0x54>
    76d0:	ldr	r4, [r3, #4]
    76d4:	ldr	r6, [r0, #84]	; 0x54
    76d8:	asr	r5, r4, #31
    76dc:	asr	r7, r6, #31
    76e0:	strd	r4, [r2]
    76e4:	strd	r6, [r2, #8]
    76e8:	b	7674 <readstat_insert_string_ref+0x54>

000076ec <readstat_insert_missing_value>:
    76ec:	ldr	ip, [r0, #308]	; 0x134
    76f0:	mov	r3, r0
    76f4:	cmp	ip, #0
    76f8:	beq	7738 <readstat_insert_missing_value+0x4c>
    76fc:	ldr	ip, [r1]
    7700:	cmp	ip, #0
    7704:	beq	7724 <readstat_insert_missing_value+0x38>
    7708:	cmp	ip, #6
    770c:	beq	7740 <readstat_insert_missing_value+0x54>
    7710:	ldr	r0, [r0, #72]	; 0x48
    7714:	ldr	r2, [r1, #1592]	; 0x638
    7718:	ldr	r3, [r3, #268]	; 0x10c
    771c:	add	r0, r0, r2
    7720:	bx	r3
    7724:	ldr	r0, [r0, #72]	; 0x48
    7728:	ldr	r2, [r1, #1592]	; 0x638
    772c:	ldr	r3, [r3, #264]	; 0x108
    7730:	add	r0, r0, r2
    7734:	bx	r3
    7738:	mov	r0, #14
    773c:	bx	lr
    7740:	mov	r2, #0
    7744:	b	3f24 <readstat_insert_string_ref@plt>

00007748 <readstat_insert_tagged_missing_value>:
    7748:	ldr	r3, [r0, #308]	; 0x134
    774c:	cmp	r3, #0
    7750:	beq	7788 <readstat_insert_tagged_missing_value+0x40>
    7754:	str	r4, [sp, #-8]!
    7758:	ldr	r3, [r0, #272]	; 0x110
    775c:	ldr	ip, [r0, #72]	; 0x48
    7760:	str	lr, [sp, #4]
    7764:	ldr	lr, [r1, #1592]	; 0x638
    7768:	cmp	r3, #0
    776c:	add	ip, ip, lr
    7770:	beq	7790 <readstat_insert_tagged_missing_value+0x48>
    7774:	mov	r0, ip
    7778:	ldr	r4, [sp]
    777c:	ldr	lr, [sp, #4]
    7780:	add	sp, sp, #8
    7784:	bx	r3
    7788:	mov	r0, #14
    778c:	bx	lr
    7790:	mov	r3, r0
    7794:	mov	r0, ip
    7798:	ldr	r3, [r3, #268]	; 0x10c
    779c:	blx	r3
    77a0:	ldr	r4, [sp]
    77a4:	add	sp, sp, #4
    77a8:	mov	r0, #23
    77ac:	pop	{pc}		; (ldr pc, [sp], #4)

000077b0 <readstat_end_row>:
    77b0:	ldr	r3, [r0, #308]	; 0x134
    77b4:	cmp	r3, #0
    77b8:	beq	77f8 <readstat_end_row+0x48>
    77bc:	str	r4, [sp, #-8]!
    77c0:	mov	r4, r0
    77c4:	ldr	r1, [r0, #72]	; 0x48
    77c8:	ldr	r2, [r0, #76]	; 0x4c
    77cc:	ldr	r3, [r0, #280]	; 0x118
    77d0:	str	lr, [sp, #4]
    77d4:	blx	r3
    77d8:	cmp	r0, #0
    77dc:	bne	77ec <readstat_end_row+0x3c>
    77e0:	ldr	r3, [r4, #84]	; 0x54
    77e4:	add	r3, r3, #1
    77e8:	str	r3, [r4, #84]	; 0x54
    77ec:	ldr	r4, [sp]
    77f0:	add	sp, sp, #4
    77f4:	pop	{pc}		; (ldr pc, [sp], #4)
    77f8:	mov	r0, #14
    77fc:	bx	lr

00007800 <readstat_end_writing>:
    7800:	ldr	r3, [r0, #308]	; 0x134
    7804:	cmp	r3, #0
    7808:	beq	78f8 <readstat_end_writing+0xf8>
    780c:	ldrd	r2, [r0, #80]	; 0x50
    7810:	strd	r4, [sp, #-32]!	; 0xffffffe0
    7814:	strd	r6, [sp, #8]
    7818:	strd	r8, [sp, #16]
    781c:	mov	r8, r0
    7820:	str	sl, [sp, #24]
    7824:	cmp	r3, r2
    7828:	str	lr, [sp, #28]
    782c:	bne	78dc <readstat_end_writing+0xdc>
    7830:	cmp	r3, #0
    7834:	beq	7900 <readstat_end_writing+0x100>
    7838:	ldr	r1, [r8, #64]	; 0x40
    783c:	cmp	r1, #1
    7840:	ble	78b0 <readstat_end_writing+0xb0>
    7844:	ldr	r0, [r8, #60]	; 0x3c
    7848:	mov	r2, #1
    784c:	mov	r3, r0
    7850:	b	7868 <readstat_end_writing+0x68>
    7854:	cmp	ip, #0
    7858:	add	r2, r2, #1
    785c:	bgt	78a0 <readstat_end_writing+0xa0>
    7860:	cmp	r1, r2
    7864:	beq	78b0 <readstat_end_writing+0xb0>
    7868:	ldr	r9, [r3]
    786c:	ldr	lr, [r3, #4]!
    7870:	ldrd	r6, [r9]
    7874:	ldrd	r4, [lr]
    7878:	cmp	r7, r5
    787c:	sub	ip, r6, r4
    7880:	cmpeq	r6, r4
    7884:	bne	7854 <readstat_end_writing+0x54>
    7888:	ldr	ip, [r9, #8]
    788c:	add	r2, r2, #1
    7890:	ldr	lr, [lr, #8]
    7894:	sub	ip, ip, lr
    7898:	cmp	ip, #0
    789c:	ble	7860 <readstat_end_writing+0x60>
    78a0:	ldr	r3, [pc, #128]	; 7928 <readstat_end_writing+0x128>
    78a4:	mov	r2, #4
    78a8:	add	r3, pc, r3
    78ac:	bl	4410 <qsort@plt>
    78b0:	ldr	r3, [r8, #284]	; 0x11c
    78b4:	cmp	r3, #0
    78b8:	beq	7920 <readstat_end_writing+0x120>
    78bc:	mov	r0, r8
    78c0:	ldrd	r4, [sp]
    78c4:	ldrd	r6, [sp, #8]
    78c8:	ldrd	r8, [sp, #16]
    78cc:	ldr	sl, [sp, #24]
    78d0:	ldr	lr, [sp, #28]
    78d4:	add	sp, sp, #32
    78d8:	bx	r3
    78dc:	mov	r0, #9
    78e0:	ldrd	r4, [sp]
    78e4:	ldrd	r6, [sp, #8]
    78e8:	ldrd	r8, [sp, #16]
    78ec:	ldr	sl, [sp, #24]
    78f0:	add	sp, sp, #28
    78f4:	pop	{pc}		; (ldr pc, [sp], #4)
    78f8:	mov	r0, #14
    78fc:	bx	lr
    7900:	bl	3d74 <readstat_validate_metadata@plt>
    7904:	cmp	r0, #0
    7908:	bne	78e0 <readstat_end_writing+0xe0>
    790c:	mov	r0, r8
    7910:	bl	7218 <readstat_begin_writing_data.part.1>
    7914:	cmp	r0, #0
    7918:	beq	7838 <readstat_end_writing+0x38>
    791c:	b	78e0 <readstat_end_writing+0xe0>
    7920:	mov	r0, r3
    7924:	b	78e0 <readstat_end_writing+0xe0>
    7928:	.word	0xffffeca4

0000792c <memreverse>:
    792c:	strd	r4, [sp, #-16]!
    7930:	mov	r5, r0
    7934:	mov	r4, r1
    7938:	str	r6, [sp, #8]
    793c:	str	lr, [sp, #12]
    7940:	bl	3e88 <machine_is_little_endian@plt>
    7944:	cmp	r0, #0
    7948:	beq	7988 <memreverse+0x5c>
    794c:	add	lr, r4, r4, lsr #31
    7950:	cmp	r4, #1
    7954:	asr	lr, lr, #1
    7958:	ble	7988 <memreverse+0x5c>
    795c:	add	r1, r5, r4
    7960:	sub	r3, r5, #1
    7964:	ldrb	r0, [r3, #1]
    7968:	add	r2, r3, #2
    796c:	add	r3, r3, #1
    7970:	sub	r2, r2, r5
    7974:	ldrb	ip, [r1, #-1]!
    7978:	cmp	lr, r2
    797c:	strb	ip, [r3]
    7980:	strb	r0, [r1]
    7984:	bgt	7964 <memreverse+0x38>
    7988:	ldrd	r4, [sp]
    798c:	ldr	r6, [sp, #8]
    7990:	add	sp, sp, #12
    7994:	pop	{pc}		; (ldr pc, [sp], #4)

00007998 <get_native>:
    7998:	ldr	r2, [pc, #156]	; 7a3c <get_native+0xa4>
    799c:	add	r2, pc, r2
    79a0:	mov	r3, r2
    79a4:	ldr	r1, [r2, #8]
    79a8:	ldr	r0, [r3], #8
    79ac:	cmp	r0, r1
    79b0:	beq	79f4 <get_native+0x5c>
    79b4:	ldr	r3, [pc, #132]	; 7a40 <get_native+0xa8>
    79b8:	add	r3, pc, r3
    79bc:	ldr	r1, [r3]
    79c0:	add	r0, r3, #16
    79c4:	ldr	r2, [r3, #16]
    79c8:	cmp	r1, r2
    79cc:	beq	7a0c <get_native+0x74>
    79d0:	ldr	r2, [pc, #108]	; 7a44 <get_native+0xac>
    79d4:	add	r2, pc, r2
    79d8:	mov	r3, r2
    79dc:	ldr	r1, [r2, #24]
    79e0:	ldr	r0, [r3], #24
    79e4:	cmp	r0, r1
    79e8:	beq	7a24 <get_native+0x8c>
    79ec:	mvn	r0, #0
    79f0:	bx	lr
    79f4:	ldr	r2, [r2, #4]
    79f8:	ldr	r3, [r3, #4]
    79fc:	cmp	r2, r3
    7a00:	bne	79b4 <get_native+0x1c>
    7a04:	mov	r0, #1
    7a08:	bx	lr
    7a0c:	ldr	r2, [r3, #4]
    7a10:	ldr	r3, [r0, #4]
    7a14:	cmp	r2, r3
    7a18:	bne	79d0 <get_native+0x38>
    7a1c:	mov	r0, #2
    7a20:	bx	lr
    7a24:	ldr	r2, [r2, #4]
    7a28:	ldr	r3, [r3, #4]
    7a2c:	cmp	r2, r3
    7a30:	bne	79ec <get_native+0x54>
    7a34:	mov	r0, #3
    7a38:	bx	lr
    7a3c:	.word	0x0003d974
    7a40:	.word	0x0003d958
    7a44:	.word	0x0003d93c

00007a48 <cnxptiee>:
    7a48:	strd	r4, [sp, #-20]!	; 0xffffffec
    7a4c:	subs	r4, r1, #0
    7a50:	mov	r5, r0
    7a54:	strd	r6, [sp, #8]
    7a58:	mov	r7, r2
    7a5c:	mov	r6, r3
    7a60:	str	lr, [sp, #16]
    7a64:	sub	sp, sp, #36	; 0x24
    7a68:	beq	7b28 <cnxptiee+0xe0>
    7a6c:	cmp	r4, #0
    7a70:	ble	7b04 <cnxptiee+0xbc>
    7a74:	cmp	r4, #2
    7a78:	ble	7ab0 <cnxptiee+0x68>
    7a7c:	cmp	r4, #3
    7a80:	bne	7b04 <cnxptiee+0xbc>
    7a84:	cmp	r6, #3
    7a88:	beq	7b34 <cnxptiee+0xec>
    7a8c:	add	r0, sp, #16
    7a90:	add	r2, r5, #8
    7a94:	mov	r3, r0
    7a98:	ldrb	r1, [r2, #-1]!
    7a9c:	cmp	r5, r2
    7aa0:	strb	r1, [r3], #1
    7aa4:	bne	7a98 <cnxptiee+0x50>
    7aa8:	mov	r5, r0
    7aac:	mov	r4, #2
    7ab0:	cmp	r6, #0
    7ab4:	beq	7b1c <cnxptiee+0xd4>
    7ab8:	sub	r3, r6, #1
    7abc:	cmp	r3, #2
    7ac0:	bhi	7e14 <cnxptiee+0x3cc>
    7ac4:	cmp	r4, r6
    7ac8:	beq	7b34 <cnxptiee+0xec>
    7acc:	cmp	r4, #1
    7ad0:	beq	7c64 <cnxptiee+0x21c>
    7ad4:	cmp	r4, #2
    7ad8:	bne	7af4 <cnxptiee+0xac>
    7adc:	cmp	r6, #1
    7ae0:	beq	7b4c <cnxptiee+0x104>
    7ae4:	ldr	r2, [r5]
    7ae8:	ldr	r3, [r5, #4]
    7aec:	str	r2, [r7]
    7af0:	str	r3, [r7, #4]
    7af4:	cmp	r6, #3
    7af8:	beq	7c34 <cnxptiee+0x1ec>
    7afc:	mov	r0, #0
    7b00:	b	7b08 <cnxptiee+0xc0>
    7b04:	mvn	r0, #0
    7b08:	add	sp, sp, #36	; 0x24
    7b0c:	ldrd	r4, [sp]
    7b10:	ldrd	r6, [sp, #8]
    7b14:	add	sp, sp, #16
    7b18:	pop	{pc}		; (ldr pc, [sp], #4)
    7b1c:	bl	4194 <get_native@plt>
    7b20:	mov	r6, r0
    7b24:	b	7ab8 <cnxptiee+0x70>
    7b28:	bl	4194 <get_native@plt>
    7b2c:	mov	r4, r0
    7b30:	b	7a6c <cnxptiee+0x24>
    7b34:	ldr	r2, [r5]
    7b38:	mov	r0, #0
    7b3c:	ldr	r3, [r5, #4]
    7b40:	str	r2, [r7]
    7b44:	str	r3, [r7, #4]
    7b48:	b	7b08 <cnxptiee+0xc0>
    7b4c:	ldr	r3, [r5, #4]
    7b50:	mov	r6, #0
    7b54:	mov	r1, #4
    7b58:	add	r0, sp, #8
    7b5c:	ldr	r2, [r5]
    7b60:	mov	r4, r3
    7b64:	str	r2, [sp, #8]
    7b68:	str	r6, [sp, #12]
    7b6c:	strd	r2, [sp, #24]
    7b70:	bl	3d98 <memreverse@plt>
    7b74:	mov	r1, #4
    7b78:	add	r0, sp, #12
    7b7c:	str	r4, [sp, #12]
    7b80:	bl	3d98 <memreverse@plt>
    7b84:	ldrb	r3, [sp, #24]
    7b88:	str	r6, [r7]
    7b8c:	ldrb	r2, [sp, #25]
    7b90:	str	r6, [r7, #4]
    7b94:	and	r3, r3, r2
    7b98:	cmp	r3, #255	; 0xff
    7b9c:	beq	7e1c <cnxptiee+0x3d4>
    7ba0:	ldr	r2, [sp, #8]
    7ba4:	ldr	r0, [sp, #12]
    7ba8:	ubfx	r1, r2, #0, #20
    7bac:	orrs	r3, r2, r0
    7bb0:	str	r1, [sp]
    7bb4:	str	r0, [sp, #4]
    7bb8:	beq	7de8 <cnxptiee+0x3a0>
    7bbc:	ubfx	r3, r2, #20, #11
    7bc0:	orr	ip, r1, #1048576	; 0x100000
    7bc4:	sub	r3, r3, #1020	; 0x3fc
    7bc8:	sub	r3, r3, #3
    7bcc:	ands	lr, r3, #3
    7bd0:	beq	7bf0 <cnxptiee+0x1a8>
    7bd4:	lsr	r4, r0, #24
    7bd8:	rsb	r5, lr, #8
    7bdc:	lsl	r1, ip, lr
    7be0:	and	r4, r4, #224	; 0xe0
    7be4:	lsl	r0, r0, lr
    7be8:	orr	ip, r1, r4, lsr r5
    7bec:	str	r0, [sp, #4]
    7bf0:	lsr	r2, r2, #24
    7bf4:	cmn	r3, #260	; 0x104
    7bf8:	asr	r1, r3, #2
    7bfc:	and	r0, r2, #128	; 0x80
    7c00:	add	r1, r1, #65	; 0x41
    7c04:	orr	r1, r1, r0
    7c08:	orr	r1, ip, r1, lsl #24
    7c0c:	str	r1, [sp]
    7c10:	blt	7dc0 <cnxptiee+0x378>
    7c14:	cmp	r3, #248	; 0xf8
    7c18:	ble	7de8 <cnxptiee+0x3a0>
    7c1c:	mvn	r3, #0
    7c20:	orr	r2, r2, #127	; 0x7f
    7c24:	strb	r2, [r7]
    7c28:	str	r3, [r7, #1]
    7c2c:	str	r3, [r7, #4]
    7c30:	b	7afc <cnxptiee+0xb4>
    7c34:	ldr	ip, [r7]
    7c38:	add	r2, sp, #24
    7c3c:	sub	r3, r7, #1
    7c40:	add	r0, r7, #7
    7c44:	ldr	r1, [r7, #4]
    7c48:	str	ip, [sp, #16]
    7c4c:	str	r1, [sp, #20]
    7c50:	ldrb	r1, [r2, #-1]!
    7c54:	strb	r1, [r3, #1]!
    7c58:	cmp	r0, r3
    7c5c:	bne	7c50 <cnxptiee+0x208>
    7c60:	b	7afc <cnxptiee+0xb4>
    7c64:	ldr	r2, [r5]
    7c68:	mov	r3, #0
    7c6c:	ldr	r1, [r5, #4]
    7c70:	str	r3, [r7]
    7c74:	str	r3, [r7, #4]
    7c78:	ands	r5, r2, #255	; 0xff
    7c7c:	str	r3, [sp, #8]
    7c80:	str	r3, [sp, #12]
    7c84:	str	r2, [sp, #24]
    7c88:	str	r1, [sp, #28]
    7c8c:	beq	7ca8 <cnxptiee+0x260>
    7c90:	mov	r2, #7
    7c94:	mov	r1, r7
    7c98:	add	r0, sp, #25
    7c9c:	bl	3f78 <memcmp@plt>
    7ca0:	cmp	r0, #0
    7ca4:	beq	7dd0 <cnxptiee+0x388>
    7ca8:	ldr	r3, [sp, #24]
    7cac:	mov	r1, #4
    7cb0:	add	r0, sp, #8
    7cb4:	str	r3, [sp, #8]
    7cb8:	bl	3d98 <memreverse@plt>
    7cbc:	ldr	r3, [sp, #28]
    7cc0:	mov	r1, #4
    7cc4:	add	r0, sp, #12
    7cc8:	str	r3, [sp, #12]
    7ccc:	bl	3d98 <memreverse@plt>
    7cd0:	ldr	r2, [sp, #8]
    7cd4:	ldr	r1, [sp, #12]
    7cd8:	bic	r3, r2, #-2147483648	; 0x80000000
    7cdc:	cmn	r3, #-2147483647	; 0x80000001
    7ce0:	beq	7d88 <cnxptiee+0x340>
    7ce4:	bic	r3, r2, #-16777216	; 0xff000000
    7ce8:	orrs	r0, r2, r1
    7cec:	str	r3, [sp]
    7cf0:	str	r1, [sp, #4]
    7cf4:	beq	7af4 <cnxptiee+0xac>
    7cf8:	and	r0, r2, #-2147483648	; 0x80000000
    7cfc:	tst	r2, #8388608	; 0x800000
    7d00:	bne	7d20 <cnxptiee+0x2d8>
    7d04:	tst	r2, #4194304	; 0x400000
    7d08:	bne	7db4 <cnxptiee+0x36c>
    7d0c:	ands	ip, r2, #2097152	; 0x200000
    7d10:	movne	ip, #31
    7d14:	bne	7d28 <cnxptiee+0x2e0>
    7d18:	mov	r4, ip
    7d1c:	b	7d3c <cnxptiee+0x2f4>
    7d20:	mov	ip, #29
    7d24:	mov	r4, #3
    7d28:	lsr	r1, r1, r4
    7d2c:	and	r2, r2, #7
    7d30:	lsr	r3, r3, r4
    7d34:	orr	r2, r1, r2, lsl ip
    7d38:	str	r2, [sp, #4]
    7d3c:	and	r5, r5, #127	; 0x7f
    7d40:	bic	r3, r3, #1048576	; 0x100000
    7d44:	add	r4, r4, r5, lsl #2
    7d48:	orr	r3, r3, r0
    7d4c:	add	r4, r4, #760	; 0x2f8
    7d50:	add	r4, r4, #3
    7d54:	orr	r3, r3, r4, lsl #20
    7d58:	str	r3, [sp]
    7d5c:	mov	r1, #4
    7d60:	mov	r0, sp
    7d64:	bl	3d98 <memreverse@plt>
    7d68:	ldr	r3, [sp]
    7d6c:	mov	r1, #4
    7d70:	add	r0, sp, r1
    7d74:	str	r3, [r7]
    7d78:	bl	3d98 <memreverse@plt>
    7d7c:	ldr	r3, [sp, #4]
    7d80:	str	r3, [r7, #4]
    7d84:	b	7af4 <cnxptiee+0xac>
    7d88:	cmn	r1, #1
    7d8c:	and	r0, r2, #-2147483648	; 0x80000000
    7d90:	bicne	r3, r2, #-16777216	; 0xff000000
    7d94:	strne	r1, [sp, #4]
    7d98:	bne	7cfc <cnxptiee+0x2b4>
    7d9c:	orr	r3, r0, #2130706432	; 0x7f000000
    7da0:	mov	r2, #0
    7da4:	orr	r3, r3, #15728640	; 0xf00000
    7da8:	str	r3, [sp]
    7dac:	str	r2, [sp, #4]
    7db0:	b	7d5c <cnxptiee+0x314>
    7db4:	mov	ip, #30
    7db8:	mov	r4, #2
    7dbc:	b	7d28 <cnxptiee+0x2e0>
    7dc0:	mov	r3, #0
    7dc4:	str	r3, [r7]
    7dc8:	str	r3, [r7, #4]
    7dcc:	b	7afc <cnxptiee+0xb4>
    7dd0:	mvn	r3, #0
    7dd4:	mvn	r5, r5
    7dd8:	strb	r3, [r7]
    7ddc:	strb	r3, [r7, #1]
    7de0:	strb	r5, [r7, #2]
    7de4:	b	7af4 <cnxptiee+0xac>
    7de8:	mov	r1, #4
    7dec:	mov	r0, sp
    7df0:	bl	3d98 <memreverse@plt>
    7df4:	ldr	r3, [sp]
    7df8:	mov	r1, #4
    7dfc:	add	r0, sp, r1
    7e00:	str	r3, [r7]
    7e04:	bl	3d98 <memreverse@plt>
    7e08:	ldr	r3, [sp, #4]
    7e0c:	str	r3, [r7, #4]
    7e10:	b	7afc <cnxptiee+0xb4>
    7e14:	mvn	r0, #1
    7e18:	b	7b08 <cnxptiee+0xc0>
    7e1c:	ldrb	r3, [sp, #26]
    7e20:	mvn	r3, r3
    7e24:	uxtb	r3, r3
    7e28:	cmp	r3, #210	; 0xd2
    7e2c:	moveq	r3, #109	; 0x6d
    7e30:	strb	r3, [r7]
    7e34:	b	7afc <cnxptiee+0xb4>

00007e38 <sas_read8>:
    7e38:	ldr	r2, [r0]
    7e3c:	sub	sp, sp, #8
    7e40:	cmp	r1, #0
    7e44:	ldr	r3, [r0, #4]
    7e48:	strd	r2, [sp]
    7e4c:	ldrd	r0, [sp]
    7e50:	bne	7e5c <sas_read8+0x24>
    7e54:	add	sp, sp, #8
    7e58:	bx	lr
    7e5c:	add	sp, sp, #8
    7e60:	b	3d50 <byteswap8@plt>

00007e64 <sas_read4>:
    7e64:	cmp	r1, #0
    7e68:	ldr	r0, [r0]
    7e6c:	bne	7e74 <sas_read4+0x10>
    7e70:	bx	lr
    7e74:	b	3d68 <byteswap4@plt>

00007e78 <sas_read2>:
    7e78:	cmp	r1, #0
    7e7c:	ldrh	r0, [r0]
    7e80:	bne	7e88 <sas_read2+0x10>
    7e84:	bx	lr
    7e88:	b	3e7c <byteswap2@plt>

00007e8c <sas_subheader_remainder>:
    7e8c:	add	r1, r1, #2
    7e90:	sub	r0, r0, r1, lsl #1
    7e94:	bx	lr

00007e98 <sas_read_header>:
    7e98:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7e9c:	mov	r4, r0
    7ea0:	mov	r5, r1
    7ea4:	strd	r6, [sp, #8]
    7ea8:	mov	r6, #1
    7eac:	mov	r7, r3
    7eb0:	strd	r8, [sp, #16]
    7eb4:	strd	sl, [sp, #24]
    7eb8:	mov	sl, #60	; 0x3c
    7ebc:	str	lr, [sp, #32]
    7ec0:	sub	sp, sp, #1408	; 0x580
    7ec4:	mov	lr, #0
    7ec8:	sub	sp, sp, #12
    7ecc:	ldr	r8, [pc, #1620]	; 8528 <sas_read_header+0x690>
    7ed0:	add	ip, sp, #64	; 0x40
    7ed4:	add	r9, sp, #228	; 0xe4
    7ed8:	mov	r0, ip
    7edc:	str	lr, [sp, #64]	; 0x40
    7ee0:	str	lr, [sp, #68]	; 0x44
    7ee4:	str	lr, [sp, #72]	; 0x48
    7ee8:	str	r6, [sp, #76]	; 0x4c
    7eec:	mov	r6, r2
    7ef0:	add	r8, pc, r8
    7ef4:	str	lr, [sp, #80]	; 0x50
    7ef8:	str	sl, [sp, #84]	; 0x54
    7efc:	str	lr, [sp, #88]	; 0x58
    7f00:	str	lr, [sp, #92]	; 0x5c
    7f04:	str	lr, [sp, #96]	; 0x60
    7f08:	str	lr, [sp, #100]	; 0x64
    7f0c:	str	lr, [sp, #104]	; 0x68
    7f10:	bl	3e28 <mktime@plt>
    7f14:	mov	sl, r0
    7f18:	mov	r1, #164	; 0xa4
    7f1c:	ldr	r3, [r4, #12]
    7f20:	mov	r0, r9
    7f24:	ldr	r2, [r4, #20]
    7f28:	blx	r3
    7f2c:	cmp	r0, #163	; 0xa3
    7f30:	bls	81dc <sas_read_header+0x344>
    7f34:	ldr	r3, [pc, #1520]	; 852c <sas_read_header+0x694>
    7f38:	mov	r2, #32
    7f3c:	mov	r0, r9
    7f40:	ldr	r1, [r8, r3]
    7f44:	bl	3f78 <memcmp@plt>
    7f48:	cmp	r0, #0
    7f4c:	beq	7f6c <sas_read_header+0xd4>
    7f50:	ldr	r3, [pc, #1496]	; 8530 <sas_read_header+0x698>
    7f54:	mov	r0, r9
    7f58:	mov	r2, #32
    7f5c:	ldr	r1, [r8, r3]
    7f60:	bl	3f78 <memcmp@plt>
    7f64:	cmp	r0, #0
    7f68:	bne	7fa0 <sas_read_header+0x108>
    7f6c:	ldrb	r3, [sp, #263]	; 0x107
    7f70:	ldrb	r8, [sp, #265]	; 0x109
    7f74:	cmp	r3, #51	; 0x33
    7f78:	moveq	r3, #4
    7f7c:	streq	r3, [r5, #24]
    7f80:	ldrb	r3, [sp, #260]	; 0x104
    7f84:	cmp	r3, #51	; 0x33
    7f88:	moveq	r3, #1
    7f8c:	streq	r3, [r5, #4]
    7f90:	cmp	r8, #0
    7f94:	beq	7fc4 <sas_read_header+0x12c>
    7f98:	cmp	r8, #1
    7f9c:	beq	81e4 <sas_read_header+0x34c>
    7fa0:	mov	r0, #5
    7fa4:	add	sp, sp, #1408	; 0x580
    7fa8:	add	sp, sp, #12
    7fac:	ldrd	r4, [sp]
    7fb0:	ldrd	r6, [sp, #8]
    7fb4:	ldrd	r8, [sp, #16]
    7fb8:	ldrd	sl, [sp, #24]
    7fbc:	add	sp, sp, #32
    7fc0:	pop	{pc}		; (ldr pc, [sp], #4)
    7fc4:	bl	3e88 <machine_is_little_endian@plt>
    7fc8:	mov	r9, r0
    7fcc:	str	r8, [r5]
    7fd0:	ldr	r1, [pc, #1372]	; 8534 <sas_read_header+0x69c>
    7fd4:	ldrb	r3, [sp, #298]	; 0x12a
    7fd8:	add	r1, pc, r1
    7fdc:	ldr	r2, [r1]
    7fe0:	cmp	r2, r3
    7fe4:	beq	8478 <sas_read_header+0x5e0>
    7fe8:	mov	r2, #1
    7fec:	b	7ffc <sas_read_header+0x164>
    7ff0:	add	r2, r2, #1
    7ff4:	cmp	r2, #62	; 0x3e
    7ff8:	beq	83fc <sas_read_header+0x564>
    7ffc:	ldr	r0, [r1, #36]	; 0x24
    8000:	add	r1, r1, #36	; 0x24
    8004:	cmp	r0, r3
    8008:	bne	7ff0 <sas_read_header+0x158>
    800c:	add	r3, r2, r2, lsl #3
    8010:	lsl	r3, r3, #2
    8014:	add	r3, r3, #4
    8018:	ldr	r2, [pc, #1304]	; 8538 <sas_read_header+0x6a0>
    801c:	add	r2, pc, r2
    8020:	add	r3, r2, r3
    8024:	str	r3, [r5, #144]	; 0x90
    8028:	ldr	lr, [sp, #320]	; 0x140
    802c:	mov	r1, #1
    8030:	ldr	ip, [sp, #324]	; 0x144
    8034:	ldr	r0, [sp, #328]	; 0x148
    8038:	str	lr, [r5, #80]	; 0x50
    803c:	ldr	lr, [sp, #332]	; 0x14c
    8040:	str	ip, [r5, #84]	; 0x54
    8044:	ldr	ip, [sp, #336]	; 0x150
    8048:	str	r0, [r5, #88]	; 0x58
    804c:	ldr	r0, [sp, #340]	; 0x154
    8050:	str	lr, [r5, #92]	; 0x5c
    8054:	ldr	lr, [sp, #344]	; 0x158
    8058:	str	ip, [r5, #96]	; 0x60
    805c:	ldr	ip, [sp, #348]	; 0x15c
    8060:	str	r0, [r5, #100]	; 0x64
    8064:	ldr	r0, [sp, #352]	; 0x160
    8068:	str	lr, [r5, #104]	; 0x68
    806c:	ldr	lr, [sp, #356]	; 0x164
    8070:	str	ip, [r5, #108]	; 0x6c
    8074:	ldr	ip, [sp, #360]	; 0x168
    8078:	str	r0, [r5, #112]	; 0x70
    807c:	ldr	r0, [sp, #364]	; 0x16c
    8080:	str	lr, [r5, #116]	; 0x74
    8084:	ldr	lr, [sp, #368]	; 0x170
    8088:	str	ip, [r5, #120]	; 0x78
    808c:	ldr	ip, [sp, #372]	; 0x174
    8090:	str	r0, [r5, #124]	; 0x7c
    8094:	ldr	r0, [sp, #376]	; 0x178
    8098:	str	lr, [r5, #128]	; 0x80
    809c:	ldr	r2, [sp, #380]	; 0x17c
    80a0:	str	ip, [r5, #132]	; 0x84
    80a4:	str	r0, [r5, #136]	; 0x88
    80a8:	str	r2, [r5, #140]	; 0x8c
    80ac:	ldr	r3, [r4, #8]
    80b0:	ldr	r2, [r4, #20]
    80b4:	ldr	r0, [r5, #24]
    80b8:	blx	r3
    80bc:	cmn	r0, #1
    80c0:	beq	83f4 <sas_read_header+0x55c>
    80c4:	add	r8, sp, #56	; 0x38
    80c8:	mov	r1, #8
    80cc:	ldr	r3, [r4, #12]
    80d0:	sub	r0, r8, #8
    80d4:	ldr	r2, [r4, #20]
    80d8:	blx	r3
    80dc:	cmp	r0, #7
    80e0:	bls	81dc <sas_read_header+0x344>
    80e4:	cmp	r9, #0
    80e8:	bne	8440 <sas_read_header+0x5a8>
    80ec:	mov	r1, #8
    80f0:	mov	r0, r8
    80f4:	ldr	r3, [r4, #12]
    80f8:	ldr	r2, [r4, #20]
    80fc:	blx	r3
    8100:	cmp	r0, #7
    8104:	bls	81dc <sas_read_header+0x344>
    8108:	vldr	d0, [r8]
    810c:	vmov	s15, sl
    8110:	vldr	d6, [r8, #-8]
    8114:	vcvt.f64.s32	d7, s15
    8118:	vadd.f64	d6, d7, d6
    811c:	vcmp.f64	d6, d6
    8120:	vmrs	APSR_nzcv, fpscr
    8124:	bvs	84a8 <sas_read_header+0x610>
    8128:	vldr	d5, [pc, #1000]	; 8518 <sas_read_header+0x680>
    812c:	vcmpe.f64	d6, d5
    8130:	vmrs	APSR_nzcv, fpscr
    8134:	mvngt	r3, #-2147483648	; 0x80000000
    8138:	bgt	8154 <sas_read_header+0x2bc>
    813c:	vldr	d5, [pc, #988]	; 8520 <sas_read_header+0x688>
    8140:	vcmpe.f64	d6, d5
    8144:	vmrs	APSR_nzcv, fpscr
    8148:	bmi	8508 <sas_read_header+0x670>
    814c:	vcvt.s32.f64	s13, d6
    8150:	vmov	r3, s13
    8154:	vadd.f64	d0, d7, d0
    8158:	str	r3, [r5, #72]	; 0x48
    815c:	vcmp.f64	d0, d0
    8160:	vmrs	APSR_nzcv, fpscr
    8164:	bvs	84b0 <sas_read_header+0x618>
    8168:	vldr	d7, [pc, #936]	; 8518 <sas_read_header+0x680>
    816c:	vcmpe.f64	d0, d7
    8170:	vmrs	APSR_nzcv, fpscr
    8174:	mvngt	r3, #-2147483648	; 0x80000000
    8178:	bgt	8194 <sas_read_header+0x2fc>
    817c:	vldr	d7, [pc, #924]	; 8520 <sas_read_header+0x688>
    8180:	vcmpe.f64	d0, d7
    8184:	vmrs	APSR_nzcv, fpscr
    8188:	bmi	8510 <sas_read_header+0x678>
    818c:	vcvt.s32.f64	s15, d0
    8190:	vmov	r3, s15
    8194:	mov	r1, #1
    8198:	ldr	r2, [r4, #20]
    819c:	mov	r0, #16
    81a0:	str	r3, [r5, #76]	; 0x4c
    81a4:	ldr	r3, [r4, #8]
    81a8:	blx	r3
    81ac:	cmn	r0, #1
    81b0:	beq	83f4 <sas_read_header+0x55c>
    81b4:	add	r3, sp, #40	; 0x28
    81b8:	mov	r1, #4
    81bc:	ldr	r2, [r4, #20]
    81c0:	mov	sl, r3
    81c4:	sub	r0, r3, #12
    81c8:	ldr	r3, [r4, #12]
    81cc:	str	sl, [sp, #20]
    81d0:	blx	r3
    81d4:	cmp	r0, #3
    81d8:	bhi	81f8 <sas_read_header+0x360>
    81dc:	mov	r0, #2
    81e0:	b	7fa4 <sas_read_header+0x10c>
    81e4:	bl	3e88 <machine_is_little_endian@plt>
    81e8:	clz	r9, r0
    81ec:	str	r8, [r5]
    81f0:	lsr	r9, r9, #5
    81f4:	b	7fd0 <sas_read_header+0x138>
    81f8:	mov	r1, #4
    81fc:	sub	r0, sl, #8
    8200:	ldr	r3, [r4, #12]
    8204:	ldr	r2, [r4, #20]
    8208:	blx	r3
    820c:	cmp	r0, #3
    8210:	bls	81dc <sas_read_header+0x344>
    8214:	cmp	r9, #0
    8218:	ldr	r3, [sp, #28]
    821c:	bne	8480 <sas_read_header+0x5e8>
    8220:	ldr	r0, [sp, #32]
    8224:	mov	r1, #0
    8228:	str	r3, [r5, #64]	; 0x40
    822c:	str	r1, [r5, #68]	; 0x44
    8230:	subs	r3, r3, #1024	; 0x400
    8234:	sub	ip, r0, #1024	; 0x400
    8238:	str	r0, [r5, #32]
    823c:	sbc	r1, r1, #0
    8240:	mov	r2, #64512	; 0xfc00
    8244:	movt	r2, #15
    8248:	str	r3, [sp, #8]
    824c:	mov	r3, #0
    8250:	str	r1, [sp, #12]
    8254:	ldrd	r0, [sp, #8]
    8258:	cmp	r1, r3
    825c:	cmpeq	r0, r2
    8260:	mov	r2, #64512	; 0xfc00
    8264:	movt	r2, #255	; 0xff
    8268:	movhi	r3, #1
    826c:	movls	r3, #0
    8270:	cmp	ip, r2
    8274:	movls	r0, r3
    8278:	orrhi	r0, r3, #1
    827c:	mov	r3, #0
    8280:	cmp	r0, r3
    8284:	str	r3, [r5, #36]	; 0x24
    8288:	bne	7fa0 <sas_read_header+0x108>
    828c:	ldr	r1, [r5, #4]
    8290:	ldr	r3, [r4, #12]
    8294:	ldr	r2, [r4, #20]
    8298:	cmp	r1, #0
    829c:	beq	84b8 <sas_read_header+0x620>
    82a0:	mov	r0, #40	; 0x28
    82a4:	mov	r1, #0
    82a8:	mov	sl, #24
    82ac:	mov	fp, #0
    82b0:	add	ip, sp, #392	; 0x188
    82b4:	strd	r0, [r5, #40]	; 0x28
    82b8:	mov	r1, #8
    82bc:	mov	r0, ip
    82c0:	strd	sl, [r5, #48]	; 0x30
    82c4:	str	ip, [sp, #8]
    82c8:	blx	r3
    82cc:	cmp	r0, #7
    82d0:	bls	81dc <sas_read_header+0x344>
    82d4:	ldr	r3, [sp, #8]
    82d8:	cmp	r9, #0
    82dc:	ldrd	r0, [r3]
    82e0:	bne	858c <sas_read_header+0x6f4>
    82e4:	mov	r2, r0
    82e8:	mov	r3, r1
    82ec:	strd	r2, [r5, #56]	; 0x38
    82f0:	mov	r0, #16777216	; 0x1000000
    82f4:	mov	r1, #0
    82f8:	cmp	r0, r2
    82fc:	sbcs	r3, r1, r3
    8300:	blt	7fa0 <sas_read_header+0x108>
    8304:	mov	r1, #1
    8308:	mov	r0, #8
    830c:	ldr	r3, [r4, #8]
    8310:	ldr	r2, [r4, #20]
    8314:	blx	r3
    8318:	cmn	r0, #1
    831c:	beq	8554 <sas_read_header+0x6bc>
    8320:	add	r9, sp, #108	; 0x6c
    8324:	mov	r1, #120	; 0x78
    8328:	ldr	r3, [r4, #12]
    832c:	mov	r0, r9
    8330:	ldr	r2, [r4, #20]
    8334:	blx	r3
    8338:	cmp	r0, #119	; 0x77
    833c:	bls	81dc <sas_read_header+0x344>
    8340:	ldr	r1, [pc, #500]	; 853c <sas_read_header+0x6a4>
    8344:	sub	r8, r8, #12
    8348:	mov	r0, r9
    834c:	ldr	r3, [sp, #20]
    8350:	str	r8, [sp]
    8354:	add	r1, pc, r1
    8358:	sub	r2, r3, #4
    835c:	bl	4260 <__isoc99_sscanf@plt>
    8360:	cmp	r0, #3
    8364:	bne	7fa0 <sas_read_header+0x108>
    8368:	ldr	r2, [sp, #36]	; 0x24
    836c:	mov	r1, #0
    8370:	ldr	r0, [sp, #40]	; 0x28
    8374:	ldr	ip, [sp, #44]	; 0x2c
    8378:	sub	r3, r2, #8
    837c:	ldr	r8, [r4, #8]
    8380:	str	r2, [r5, #12]
    8384:	str	r0, [r5, #16]
    8388:	orr	r0, r0, ip
    838c:	ldr	r2, [r4, #20]
    8390:	cmp	r3, #1
    8394:	cmpls	r0, r1
    8398:	str	ip, [r5, #20]
    839c:	moveq	r3, #1
    83a0:	movne	r3, #0
    83a4:	ldr	r0, [r5, #64]	; 0x40
    83a8:	eor	r3, r3, #1
    83ac:	str	r3, [r5, #8]
    83b0:	blx	r8
    83b4:	cmn	r0, #1
    83b8:	movne	r0, #0
    83bc:	bne	7fa4 <sas_read_header+0x10c>
    83c0:	cmp	r6, #0
    83c4:	beq	83f4 <sas_read_header+0x55c>
    83c8:	ldr	r2, [pc, #368]	; 8540 <sas_read_header+0x6a8>
    83cc:	mov	r1, #1024	; 0x400
    83d0:	ldr	r8, [sp, #8]
    83d4:	ldrd	r4, [r5, #64]	; 0x40
    83d8:	add	r2, pc, r2
    83dc:	mov	r0, r8
    83e0:	strd	r4, [sp]
    83e4:	bl	4254 <snprintf@plt>
    83e8:	mov	r1, r7
    83ec:	mov	r0, r8
    83f0:	blx	r6
    83f4:	mov	r0, #15
    83f8:	b	7fa4 <sas_read_header+0x10c>
    83fc:	ldr	r2, [r5, #144]	; 0x90
    8400:	cmp	r2, #0
    8404:	bne	8028 <sas_read_header+0x190>
    8408:	cmp	r6, #0
    840c:	moveq	r0, #7
    8410:	beq	7fa4 <sas_read_header+0x10c>
    8414:	ldr	r2, [pc, #296]	; 8544 <sas_read_header+0x6ac>
    8418:	add	r4, sp, #392	; 0x188
    841c:	mov	r1, #1024	; 0x400
    8420:	mov	r0, r4
    8424:	add	r2, pc, r2
    8428:	bl	4254 <snprintf@plt>
    842c:	mov	r0, r4
    8430:	mov	r1, r7
    8434:	blx	r6
    8438:	mov	r0, #7
    843c:	b	7fa4 <sas_read_header+0x10c>
    8440:	vldr	d0, [r8, #-8]
    8444:	bl	44dc <byteswap_double@plt>
    8448:	mov	r1, #8
    844c:	mov	r0, r8
    8450:	vstr	d0, [r8, #-8]
    8454:	ldr	r3, [r4, #12]
    8458:	ldr	r2, [r4, #20]
    845c:	blx	r3
    8460:	cmp	r0, #7
    8464:	bls	81dc <sas_read_header+0x344>
    8468:	vldr	d0, [r8]
    846c:	bl	44dc <byteswap_double@plt>
    8470:	vstr	d0, [r8]
    8474:	b	810c <sas_read_header+0x274>
    8478:	mov	r3, #4
    847c:	b	8018 <sas_read_header+0x180>
    8480:	mov	r0, r3
    8484:	bl	3d68 <byteswap4@plt>
    8488:	mov	r3, #0
    848c:	str	r0, [r5, #64]	; 0x40
    8490:	ldr	r0, [sp, #32]
    8494:	str	r3, [r5, #68]	; 0x44
    8498:	bl	3d68 <byteswap4@plt>
    849c:	ldr	r3, [r5, #64]	; 0x40
    84a0:	ldr	r1, [r5, #68]	; 0x44
    84a4:	b	8230 <sas_read_header+0x398>
    84a8:	mov	r3, #0
    84ac:	b	8154 <sas_read_header+0x2bc>
    84b0:	mov	r3, #0
    84b4:	b	8194 <sas_read_header+0x2fc>
    84b8:	mov	r0, #24
    84bc:	mov	r1, #0
    84c0:	mov	sl, #12
    84c4:	mov	fp, #0
    84c8:	add	ip, sp, #392	; 0x188
    84cc:	strd	r0, [r5, #40]	; 0x28
    84d0:	mov	r1, #4
    84d4:	mov	r0, ip
    84d8:	strd	sl, [r5, #48]	; 0x30
    84dc:	str	ip, [sp, #8]
    84e0:	blx	r3
    84e4:	cmp	r0, #3
    84e8:	bls	81dc <sas_read_header+0x344>
    84ec:	cmp	r9, #0
    84f0:	ldr	r0, [sp, #392]	; 0x188
    84f4:	bne	854c <sas_read_header+0x6b4>
    84f8:	mov	r2, r0
    84fc:	mov	r3, #0
    8500:	strd	r2, [r5, #56]	; 0x38
    8504:	b	82f0 <sas_read_header+0x458>
    8508:	mov	r3, #-2147483648	; 0x80000000
    850c:	b	8154 <sas_read_header+0x2bc>
    8510:	mov	r3, #-2147483648	; 0x80000000
    8514:	b	8194 <sas_read_header+0x2fc>
    8518:	.word	0xffc00000
    851c:	.word	0x41dfffff
    8520:	.word	0x00000000
    8524:	.word	0xc1e00000
    8528:	.word	0x0003d108
    852c:	.word	0x000002f0
    8530:	.word	0x000002c4
    8534:	.word	0x0003d358
    8538:	.word	0x0003d314
    853c:	.word	0x0001d99c
    8540:	.word	0x0001d928
    8544:	.word	0x0001d880
    8548:	.word	0x0001d75c
    854c:	bl	3d68 <byteswap4@plt>
    8550:	b	84f8 <sas_read_header+0x660>
    8554:	cmp	r6, #0
    8558:	beq	83f4 <sas_read_header+0x55c>
    855c:	ldr	r2, [pc, #-28]	; 8548 <sas_read_header+0x6b0>
    8560:	mov	r3, #8
    8564:	mov	r1, #1024	; 0x400
    8568:	ldr	r4, [sp, #8]
    856c:	add	r2, pc, r2
    8570:	mov	r0, r4
    8574:	bl	4254 <snprintf@plt>
    8578:	mov	r0, r4
    857c:	mov	r1, r7
    8580:	blx	r6
    8584:	mov	r0, #15
    8588:	b	7fa4 <sas_read_header+0x10c>
    858c:	bl	3d50 <byteswap8@plt>
    8590:	b	82e4 <sas_read_header+0x44c>

00008594 <sas_write_header>:
    8594:	sub	sp, sp, #8
    8598:	mov	ip, #0
    859c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    85a0:	mov	r4, r0
    85a4:	mov	r5, r1
    85a8:	strd	r6, [sp, #8]
    85ac:	strd	r8, [sp, #16]
    85b0:	mov	r8, #1
    85b4:	str	lr, [sp, #24]
    85b8:	sub	sp, sp, #212	; 0xd4
    85bc:	mov	lr, #60	; 0x3c
    85c0:	add	r6, sp, #240	; 0xf0
    85c4:	add	r7, sp, #332	; 0x14c
    85c8:	str	ip, [sp, #44]	; 0x2c
    85cc:	stm	r6, {r2, r3}
    85d0:	add	r3, sp, #44	; 0x2c
    85d4:	mov	r0, r3
    85d8:	str	ip, [sp, #48]	; 0x30
    85dc:	str	ip, [sp, #52]	; 0x34
    85e0:	str	r8, [sp, #56]	; 0x38
    85e4:	add	r8, r4, #88	; 0x58
    85e8:	str	ip, [sp, #60]	; 0x3c
    85ec:	str	lr, [sp, #64]	; 0x40
    85f0:	str	ip, [sp, #68]	; 0x44
    85f4:	str	ip, [sp, #72]	; 0x48
    85f8:	str	ip, [sp, #76]	; 0x4c
    85fc:	str	ip, [sp, #80]	; 0x50
    8600:	str	ip, [sp, #84]	; 0x54
    8604:	bl	3e28 <mktime@plt>
    8608:	mov	r9, r0
    860c:	mov	r2, #64	; 0x40
    8610:	mov	r1, #32
    8614:	mov	r0, r7
    8618:	bl	4278 <memset@plt>
    861c:	mov	r0, r8
    8620:	bl	41d0 <strlen@plt>
    8624:	cmp	r0, #64	; 0x40
    8628:	bhi	8864 <sas_write_header+0x2d0>
    862c:	cmp	r0, #0
    8630:	beq	8680 <sas_write_header+0xec>
    8634:	mov	r2, r0
    8638:	mov	r1, r8
    863c:	mov	r0, r7
    8640:	bl	3ef4 <memcpy@plt>
    8644:	mov	r1, r6
    8648:	mov	r2, #164	; 0xa4
    864c:	mov	r0, r4
    8650:	bl	4428 <readstat_write_bytes@plt>
    8654:	subs	r6, r0, #0
    8658:	beq	86a4 <sas_write_header+0x110>
    865c:	mov	r0, r6
    8660:	add	sp, sp, #212	; 0xd4
    8664:	ldrd	r4, [sp]
    8668:	ldrd	r6, [sp, #8]
    866c:	ldrd	r8, [sp, #16]
    8670:	ldr	lr, [sp, #24]
    8674:	add	sp, sp, #28
    8678:	add	sp, sp, #8
    867c:	bx	lr
    8680:	ldr	r3, [pc, #512]	; 8888 <sas_write_header+0x2f4>
    8684:	add	r3, pc, r3
    8688:	ldrh	r2, [r3, #4]
    868c:	ldr	r1, [r3]
    8690:	ldrb	r3, [r3, #6]
    8694:	str	r1, [r7]
    8698:	strh	r2, [r7, #4]
    869c:	strb	r3, [r7, #6]
    86a0:	b	8644 <sas_write_header+0xb0>
    86a4:	mov	r0, r4
    86a8:	ldr	r1, [r5, #24]
    86ac:	bl	3ff0 <readstat_write_zeros@plt>
    86b0:	subs	r6, r0, #0
    86b4:	bne	865c <sas_write_header+0xc8>
    86b8:	ldr	r3, [r5, #72]	; 0x48
    86bc:	mov	r2, #8
    86c0:	add	r1, sp, #16
    86c4:	mov	r0, r4
    86c8:	sub	r3, r3, r9
    86cc:	vmov	s15, r3
    86d0:	vcvt.f64.s32	d7, s15
    86d4:	vstr	d7, [sp, #16]
    86d8:	bl	4428 <readstat_write_bytes@plt>
    86dc:	subs	r6, r0, #0
    86e0:	bne	865c <sas_write_header+0xc8>
    86e4:	ldr	r3, [r5, #76]	; 0x4c
    86e8:	mov	r2, #8
    86ec:	add	r1, sp, #24
    86f0:	mov	r0, r4
    86f4:	sub	r9, r3, r9
    86f8:	vmov	s15, r9
    86fc:	vcvt.f64.s32	d7, s15
    8700:	vstr	d7, [sp, #24]
    8704:	bl	4428 <readstat_write_bytes@plt>
    8708:	subs	r6, r0, #0
    870c:	bne	865c <sas_write_header+0xc8>
    8710:	mov	r1, #16
    8714:	mov	r0, r4
    8718:	bl	3ff0 <readstat_write_zeros@plt>
    871c:	subs	r6, r0, #0
    8720:	bne	865c <sas_write_header+0xc8>
    8724:	ldr	ip, [r5, #32]
    8728:	mov	r2, #4
    872c:	add	r1, sp, #8
    8730:	mov	r0, r4
    8734:	ldr	r3, [r5, #64]	; 0x40
    8738:	str	r3, [sp, #8]
    873c:	str	ip, [sp, #12]
    8740:	bl	4428 <readstat_write_bytes@plt>
    8744:	subs	r6, r0, #0
    8748:	bne	865c <sas_write_header+0xc8>
    874c:	mov	r2, #4
    8750:	add	r1, sp, #12
    8754:	mov	r0, r4
    8758:	bl	4428 <readstat_write_bytes@plt>
    875c:	subs	r6, r0, #0
    8760:	bne	865c <sas_write_header+0xc8>
    8764:	ldr	r3, [r5, #4]
    8768:	add	r8, sp, #88	; 0x58
    876c:	ldr	r1, [r5, #56]	; 0x38
    8770:	ldr	ip, [r5, #60]	; 0x3c
    8774:	cmp	r3, #0
    8778:	beq	886c <sas_write_header+0x2d8>
    877c:	mov	r2, #8
    8780:	mov	r0, r4
    8784:	str	r1, [sp, #88]	; 0x58
    8788:	mov	r1, r8
    878c:	str	ip, [sp, #92]	; 0x5c
    8790:	bl	4428 <readstat_write_bytes@plt>
    8794:	mov	r6, r0
    8798:	cmp	r6, #0
    879c:	bne	865c <sas_write_header+0xc8>
    87a0:	mov	r1, #8
    87a4:	mov	r0, r4
    87a8:	bl	3ff0 <readstat_write_zeros@plt>
    87ac:	subs	r6, r0, #0
    87b0:	bne	865c <sas_write_header+0xc8>
    87b4:	mov	r1, r6
    87b8:	mov	r2, #120	; 0x78
    87bc:	mov	r0, r8
    87c0:	bl	4278 <memset@plt>
    87c4:	ldr	r3, [r4, #8]
    87c8:	mov	r1, #101	; 0x65
    87cc:	movw	r2, #52429	; 0xcccd
    87d0:	movt	r2, #52428	; 0xcccc
    87d4:	add	r0, sp, #32
    87d8:	str	r1, [sp]
    87dc:	ldr	ip, [pc, #168]	; 888c <sas_write_header+0x2f8>
    87e0:	str	r6, [r0, #4]
    87e4:	umull	r1, r2, r2, r3
    87e8:	strb	r6, [r0, #8]
    87ec:	mov	r1, #9
    87f0:	str	r6, [sp, #32]
    87f4:	str	r6, [sp, #106]	; 0x6a
    87f8:	lsr	r2, r2, #3
    87fc:	add	ip, pc, ip
    8800:	strh	r6, [sp, #110]	; 0x6e
    8804:	ldrh	lr, [ip, #8]
    8808:	add	r2, r2, r2, lsl #2
    880c:	ldrd	r6, [ip]
    8810:	sub	r3, r3, r2, lsl #1
    8814:	ldr	r2, [pc, #116]	; 8890 <sas_write_header+0x2fc>
    8818:	strd	r6, [sp, #96]	; 0x60
    881c:	strh	lr, [sp, #104]	; 0x68
    8820:	add	r2, pc, r2
    8824:	bl	4254 <snprintf@plt>
    8828:	ldrd	r6, [sp, #32]
    882c:	mov	r1, r8
    8830:	mov	r2, #120	; 0x78
    8834:	mov	r0, r4
    8838:	strd	r6, [sp, #88]	; 0x58
    883c:	bl	4428 <readstat_write_bytes@plt>
    8840:	subs	r6, r0, #0
    8844:	bne	865c <sas_write_header+0xc8>
    8848:	ldr	r3, [r4, #4]
    884c:	mov	r0, r4
    8850:	ldr	r1, [r5, #64]	; 0x40
    8854:	sub	r1, r1, r3
    8858:	bl	3ff0 <readstat_write_zeros@plt>
    885c:	mov	r6, r0
    8860:	b	865c <sas_write_header+0xc8>
    8864:	mov	r0, #64	; 0x40
    8868:	b	8634 <sas_write_header+0xa0>
    886c:	mov	r2, #4
    8870:	mov	r0, r4
    8874:	str	r1, [sp, #88]	; 0x58
    8878:	mov	r1, r8
    887c:	bl	4428 <readstat_write_bytes@plt>
    8880:	mov	r6, r0
    8884:	b	8798 <sas_write_header+0x204>
    8888:	.word	0x0001d6a8
    888c:	.word	0x0001d498
    8890:	.word	0x0001d514

00008894 <sas_header_info_init>:
    8894:	strd	r4, [sp, #-24]!	; 0xffffffe8
    8898:	mov	r5, r0
    889c:	mov	r4, r1
    88a0:	mov	r0, #1
    88a4:	mov	r1, #152	; 0x98
    88a8:	strd	r6, [sp, #8]
    88ac:	str	r8, [sp, #16]
    88b0:	str	lr, [sp, #20]
    88b4:	bl	3d2c <calloc@plt>
    88b8:	ldr	r3, [r5, #20]
    88bc:	cmp	r4, #0
    88c0:	mov	r5, #0
    88c4:	mov	r4, #4096	; 0x1000
    88c8:	movne	r2, #1
    88cc:	moveq	r2, #0
    88d0:	str	r2, [r0, #4]
    88d4:	strd	r4, [r0, #32]
    88d8:	str	r3, [r0, #72]	; 0x48
    88dc:	str	r3, [r0, #76]	; 0x4c
    88e0:	beq	891c <sas_header_info_init+0x88>
    88e4:	mov	r2, #8192	; 0x2000
    88e8:	mov	r3, #0
    88ec:	mov	r6, #40	; 0x28
    88f0:	mov	r7, #0
    88f4:	mov	r4, #24
    88f8:	mov	r5, #0
    88fc:	strd	r6, [r0, #40]	; 0x28
    8900:	strd	r4, [r0, #48]	; 0x30
    8904:	strd	r2, [r0, #64]	; 0x40
    8908:	ldrd	r4, [sp]
    890c:	ldrd	r6, [sp, #8]
    8910:	ldr	r8, [sp, #16]
    8914:	add	sp, sp, #20
    8918:	pop	{pc}		; (ldr pc, [sp], #4)
    891c:	mov	r2, #1024	; 0x400
    8920:	mov	r3, #0
    8924:	mov	r6, #24
    8928:	mov	r7, #0
    892c:	mov	r4, #12
    8930:	mov	r5, #0
    8934:	strd	r6, [r0, #40]	; 0x28
    8938:	strd	r4, [r0, #48]	; 0x30
    893c:	strd	r2, [r0, #64]	; 0x40
    8940:	b	8908 <sas_header_info_init+0x74>

00008944 <sas_fill_page>:
    8944:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8948:	mov	r4, r0
    894c:	ldr	r0, [r0, #4]
    8950:	ldr	r5, [r1, #32]
    8954:	ldr	r3, [r1, #36]	; 0x24
    8958:	strd	r6, [sp, #8]
    895c:	ldrd	r6, [r1, #64]	; 0x40
    8960:	strd	r8, [sp, #16]
    8964:	mov	r2, r5
    8968:	str	sl, [sp, #24]
    896c:	str	lr, [sp, #28]
    8970:	subs	r8, r0, r6
    8974:	rsc	r9, r7, #0
    8978:	mov	r0, r8
    897c:	mov	r1, r9
    8980:	bl	2516c <__aeabi_ldivmod>
    8984:	orrs	r1, r2, r3
    8988:	bne	89a8 <sas_fill_page+0x64>
    898c:	ldrd	r4, [sp]
    8990:	mov	r0, #0
    8994:	ldrd	r6, [sp, #8]
    8998:	ldrd	r8, [sp, #16]
    899c:	ldr	sl, [sp, #24]
    89a0:	add	sp, sp, #28
    89a4:	pop	{pc}		; (ldr pc, [sp], #4)
    89a8:	sub	r1, r5, r2
    89ac:	mov	r0, r4
    89b0:	ldrd	r4, [sp]
    89b4:	ldrd	r6, [sp, #8]
    89b8:	ldrd	r8, [sp, #16]
    89bc:	ldr	sl, [sp, #24]
    89c0:	ldr	lr, [sp, #28]
    89c4:	add	sp, sp, #32
    89c8:	b	3ff0 <readstat_write_zeros@plt>

000089cc <sas_validate_name>:
    89cc:	strd	r4, [sp, #-16]!
    89d0:	str	r6, [sp, #8]
    89d4:	str	lr, [sp, #12]
    89d8:	ldrb	lr, [r0]
    89dc:	cmp	lr, #0
    89e0:	beq	8b00 <sas_validate_name+0x134>
    89e4:	mov	ip, r0
    89e8:	mov	r2, lr
    89ec:	bic	r3, r2, #32
    89f0:	cmp	r2, #95	; 0x5f
    89f4:	sub	r3, r3, #65	; 0x41
    89f8:	beq	8a10 <sas_validate_name+0x44>
    89fc:	cmp	r3, #25
    8a00:	sub	r2, r2, #48	; 0x30
    8a04:	bls	8a10 <sas_validate_name+0x44>
    8a08:	cmp	r2, #9
    8a0c:	bhi	8aec <sas_validate_name+0x120>
    8a10:	ldrb	r2, [ip, #1]!
    8a14:	cmp	r2, #0
    8a18:	bne	89ec <sas_validate_name+0x20>
    8a1c:	cmp	lr, #95	; 0x5f
    8a20:	beq	8a38 <sas_validate_name+0x6c>
    8a24:	bic	lr, lr, #32
    8a28:	sub	lr, lr, #65	; 0x41
    8a2c:	cmp	lr, #25
    8a30:	movhi	r0, #25
    8a34:	bhi	8adc <sas_validate_name+0x110>
    8a38:	mov	r5, r1
    8a3c:	ldr	r1, [pc, #196]	; 8b08 <sas_validate_name+0x13c>
    8a40:	mov	r4, r0
    8a44:	add	r1, pc, r1
    8a48:	bl	3dd4 <strcmp@plt>
    8a4c:	cmp	r0, #0
    8a50:	beq	8ad8 <sas_validate_name+0x10c>
    8a54:	ldr	r1, [pc, #176]	; 8b0c <sas_validate_name+0x140>
    8a58:	mov	r0, r4
    8a5c:	add	r1, pc, r1
    8a60:	bl	3dd4 <strcmp@plt>
    8a64:	cmp	r0, #0
    8a68:	beq	8ad8 <sas_validate_name+0x10c>
    8a6c:	ldr	r1, [pc, #156]	; 8b10 <sas_validate_name+0x144>
    8a70:	mov	r0, r4
    8a74:	add	r1, pc, r1
    8a78:	bl	3dd4 <strcmp@plt>
    8a7c:	cmp	r0, #0
    8a80:	beq	8ad8 <sas_validate_name+0x10c>
    8a84:	ldr	r1, [pc, #136]	; 8b14 <sas_validate_name+0x148>
    8a88:	mov	r0, r4
    8a8c:	add	r1, pc, r1
    8a90:	bl	3dd4 <strcmp@plt>
    8a94:	cmp	r0, #0
    8a98:	beq	8ad8 <sas_validate_name+0x10c>
    8a9c:	ldr	r1, [pc, #116]	; 8b18 <sas_validate_name+0x14c>
    8aa0:	mov	r0, r4
    8aa4:	add	r1, pc, r1
    8aa8:	bl	3dd4 <strcmp@plt>
    8aac:	cmp	r0, #0
    8ab0:	beq	8ad8 <sas_validate_name+0x10c>
    8ab4:	mov	r0, r4
    8ab8:	bl	41d0 <strlen@plt>
    8abc:	cmp	r5, r0
    8ac0:	ldrd	r4, [sp]
    8ac4:	movcc	r0, #28
    8ac8:	movcs	r0, #0
    8acc:	ldr	r6, [sp, #8]
    8ad0:	add	sp, sp, #12
    8ad4:	pop	{pc}		; (ldr pc, [sp], #4)
    8ad8:	mov	r0, #27
    8adc:	ldrd	r4, [sp]
    8ae0:	ldr	r6, [sp, #8]
    8ae4:	add	sp, sp, #12
    8ae8:	pop	{pc}		; (ldr pc, [sp], #4)
    8aec:	ldrd	r4, [sp]
    8af0:	mov	r0, #26
    8af4:	ldr	r6, [sp, #8]
    8af8:	add	sp, sp, #12
    8afc:	pop	{pc}		; (ldr pc, [sp], #4)
    8b00:	mov	r0, #38	; 0x26
    8b04:	b	8adc <sas_validate_name+0x110>
    8b08:	.word	0x0001d2fc
    8b0c:	.word	0x0001d2e8
    8b10:	.word	0x0001d2d8
    8b14:	.word	0x0001d2cc
    8b18:	.word	0x0001d2c0

00008b1c <sas_validate_variable>:
    8b1c:	str	r4, [sp, #-8]!
    8b20:	str	lr, [sp, #4]
    8b24:	bl	4338 <readstat_variable_get_name@plt>
    8b28:	mov	r1, #32
    8b2c:	ldr	r4, [sp]
    8b30:	ldr	lr, [sp, #4]
    8b34:	add	sp, sp, #8
    8b38:	b	3d20 <sas_validate_name@plt>

00008b3c <sas_validate_tag>:
    8b3c:	sub	r3, r0, #65	; 0x41
    8b40:	cmp	r0, #95	; 0x5f
    8b44:	cmpne	r3, #25
    8b48:	movhi	r0, #21
    8b4c:	movls	r0, #0
    8b50:	bx	lr

00008b54 <sas_assign_tag>:
    8b54:	strd	r4, [sp, #-16]!
    8b58:	subs	r4, r1, #0
    8b5c:	mov	r5, r0
    8b60:	moveq	r4, #95	; 0x5f
    8b64:	str	r6, [sp, #8]
    8b68:	str	lr, [sp, #12]
    8b6c:	beq	8b80 <sas_assign_tag+0x2c>
    8b70:	sub	r3, r4, #2
    8b74:	cmp	r3, #25
    8b78:	addls	r4, r4, #63	; 0x3f
    8b7c:	uxtbls	r4, r4
    8b80:	mov	r0, r4
    8b84:	bl	411c <sas_validate_tag@plt>
    8b88:	cmp	r0, #0
    8b8c:	bne	8bb0 <sas_assign_tag+0x5c>
    8b90:	ldrb	r3, [r5, #13]
    8b94:	strb	r4, [r5, #12]
    8b98:	ldr	r6, [sp, #8]
    8b9c:	orr	r3, r3, #2
    8ba0:	strb	r3, [r5, #13]
    8ba4:	ldrd	r4, [sp]
    8ba8:	add	sp, sp, #12
    8bac:	pop	{pc}		; (ldr pc, [sp], #4)
    8bb0:	ldrh	r3, [r5, #12]
    8bb4:	and	r3, r3, #65024	; 0xfe00
    8bb8:	orr	r3, r3, #256	; 0x100
    8bbc:	strh	r3, [r5, #12]
    8bc0:	ldrd	r4, [sp]
    8bc4:	ldr	r6, [sp, #8]
    8bc8:	add	sp, sp, #12
    8bcc:	pop	{pc}		; (ldr pc, [sp], #4)

00008bd0 <compare_block_pointers>:
    8bd0:	ldr	r0, [r0]
    8bd4:	ldr	r3, [r1]
    8bd8:	sub	r0, r0, r3
    8bdc:	bx	lr

00008be0 <sas7bcat_augment_index>:
    8be0:	ldr	r3, [r2, #32]
    8be4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8be8:	strd	r6, [sp, #8]
    8bec:	add	r6, r0, r1
    8bf0:	strd	r8, [sp, #16]
    8bf4:	str	sl, [sp, #24]
    8bf8:	add	r3, r0, r3
    8bfc:	str	lr, [sp, #28]
    8c00:	cmp	r6, r3
    8c04:	movcs	r5, r2
    8c08:	movcs	r4, r0
    8c0c:	bcc	8c28 <sas7bcat_augment_index+0x48>
    8c10:	ldrb	r3, [r4]
    8c14:	cmp	r3, #88	; 0x58
    8c18:	beq	8c44 <sas7bcat_augment_index+0x64>
    8c1c:	ldrb	r3, [r4, #8]!
    8c20:	cmp	r3, #88	; 0x58
    8c24:	beq	8ca4 <sas7bcat_augment_index+0xc4>
    8c28:	mov	r0, #0
    8c2c:	ldrd	r4, [sp]
    8c30:	ldrd	r6, [sp, #8]
    8c34:	ldrd	r8, [sp, #16]
    8c38:	ldr	sl, [sp, #24]
    8c3c:	add	sp, sp, #28
    8c40:	pop	{pc}		; (ldr pc, [sp], #4)
    8c44:	ldrb	r3, [r4, #1]
    8c48:	add	r2, r4, #1
    8c4c:	cmp	r3, #76	; 0x4c
    8c50:	bne	8c1c <sas7bcat_augment_index+0x3c>
    8c54:	ldrb	r3, [r2, #1]!
    8c58:	cmp	r3, #83	; 0x53
    8c5c:	bne	8c1c <sas7bcat_augment_index+0x3c>
    8c60:	ldrb	r3, [r2, #1]
    8c64:	cmp	r3, #82	; 0x52
    8c68:	bne	8c1c <sas7bcat_augment_index+0x3c>
    8c6c:	ldr	r3, [r5, #48]	; 0x30
    8c70:	ldrb	r3, [r4, r3]
    8c74:	cmp	r3, #79	; 0x4f
    8c78:	beq	8cd0 <sas7bcat_augment_index+0xf0>
    8c7c:	ldr	r1, [r5, #84]	; 0x54
    8c80:	ldr	r3, [r5, #88]	; 0x58
    8c84:	cmp	r3, r1
    8c88:	beq	8d2c <sas7bcat_augment_index+0x14c>
    8c8c:	ldr	r3, [r5, #32]
    8c90:	add	r4, r4, r3
    8c94:	add	r3, r4, r3
    8c98:	cmp	r6, r3
    8c9c:	bcs	8c10 <sas7bcat_augment_index+0x30>
    8ca0:	b	8c28 <sas7bcat_augment_index+0x48>
    8ca4:	ldrb	r3, [r4, #1]
    8ca8:	add	r2, r4, #1
    8cac:	cmp	r3, #76	; 0x4c
    8cb0:	bne	8c28 <sas7bcat_augment_index+0x48>
    8cb4:	ldrb	r3, [r2, #1]!
    8cb8:	cmp	r3, #83	; 0x53
    8cbc:	bne	8c28 <sas7bcat_augment_index+0x48>
    8cc0:	ldrb	r3, [r2, #1]
    8cc4:	cmp	r3, #82	; 0x52
    8cc8:	bne	8c28 <sas7bcat_augment_index+0x48>
    8ccc:	b	8c6c <sas7bcat_augment_index+0x8c>
    8cd0:	ldr	r3, [r5, #16]
    8cd4:	add	r8, r4, #8
    8cd8:	ldr	r1, [r5, #24]
    8cdc:	cmp	r3, #0
    8ce0:	beq	8d54 <sas7bcat_augment_index+0x174>
    8ce4:	mov	r0, r8
    8ce8:	bl	43c8 <sas_read4@plt>
    8cec:	mov	r7, r0
    8cf0:	add	r0, r4, #16
    8cf4:	ldr	r1, [r5, #24]
    8cf8:	bl	43c8 <sas_read4@plt>
    8cfc:	ldr	ip, [r5, #80]	; 0x50
    8d00:	mov	r8, #0
    8d04:	adds	r2, r8, r0
    8d08:	ldr	r1, [r5, #84]	; 0x54
    8d0c:	adc	r3, r7, #0
    8d10:	lsl	r0, r1, #3
    8d14:	add	r1, r1, #1
    8d18:	str	r1, [r5, #84]	; 0x54
    8d1c:	strd	r2, [ip, r0]
    8d20:	ldr	r3, [r5, #88]	; 0x58
    8d24:	cmp	r3, r1
    8d28:	bne	8c8c <sas7bcat_augment_index+0xac>
    8d2c:	lsl	r3, r1, #1
    8d30:	ldr	r0, [r5, #80]	; 0x50
    8d34:	lsl	r1, r1, #4
    8d38:	str	r3, [r5, #88]	; 0x58
    8d3c:	bl	42b4 <readstat_realloc@plt>
    8d40:	cmp	r0, #0
    8d44:	str	r0, [r5, #80]	; 0x50
    8d48:	bne	8c8c <sas7bcat_augment_index+0xac>
    8d4c:	mov	r0, #3
    8d50:	b	8c2c <sas7bcat_augment_index+0x4c>
    8d54:	add	r0, r4, #4
    8d58:	bl	43a4 <sas_read2@plt>
    8d5c:	mov	r7, r0
    8d60:	mov	r0, r8
    8d64:	ldr	r1, [r5, #24]
    8d68:	bl	43a4 <sas_read2@plt>
    8d6c:	b	8cfc <sas7bcat_augment_index+0x11c>

00008d70 <readstat_parse_sas7bcat>:
    8d70:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8d74:	mov	r4, r0
    8d78:	mov	r0, #1
    8d7c:	strd	r6, [sp, #8]
    8d80:	mov	r6, r1
    8d84:	mov	r1, #104	; 0x68
    8d88:	strd	r8, [sp, #16]
    8d8c:	mov	r5, r2
    8d90:	strd	sl, [sp, #24]
    8d94:	str	lr, [sp, #32]
    8d98:	vpush	{d8}
    8d9c:	add	fp, sp, #40	; 0x28
    8da0:	sub	sp, sp, #444	; 0x1bc
    8da4:	ldr	r7, [r4, #32]
    8da8:	bl	3d2c <calloc@plt>
    8dac:	mov	r8, r0
    8db0:	mov	r1, #152	; 0x98
    8db4:	mov	r0, #1
    8db8:	bl	3d2c <calloc@plt>
    8dbc:	mov	r3, #200	; 0xc8
    8dc0:	mov	sl, r0
    8dc4:	mov	r0, #1600	; 0x640
    8dc8:	str	r3, [r8, #88]	; 0x58
    8dcc:	bl	40e0 <malloc@plt>
    8dd0:	ldr	r2, [r4]
    8dd4:	ldr	r1, [r4, #20]
    8dd8:	ldr	r3, [r4, #36]	; 0x24
    8ddc:	str	r2, [r8]
    8de0:	ldr	r2, [r4, #40]	; 0x28
    8de4:	stmib	r8, {r1, r5, r7}
    8de8:	str	r0, [r8, #80]	; 0x50
    8dec:	mov	r0, r6
    8df0:	str	r3, [r8, #92]	; 0x5c
    8df4:	ldr	r3, [r7]
    8df8:	ldr	r1, [r7, #20]
    8dfc:	str	r2, [r8, #96]	; 0x60
    8e00:	blx	r3
    8e04:	cmn	r0, #1
    8e08:	beq	919c <readstat_parse_sas7bcat+0x42c>
    8e0c:	mov	r3, r5
    8e10:	mov	r1, sl
    8e14:	ldr	r2, [r4, #24]
    8e18:	mov	r0, r7
    8e1c:	bl	4374 <sas_read_header@plt>
    8e20:	subs	r3, r0, #0
    8e24:	str	r3, [fp, #-400]	; 0xfffffe70
    8e28:	beq	8e94 <readstat_parse_sas7bcat+0x124>
    8e2c:	ldr	r3, [r7, #4]
    8e30:	ldr	r0, [r7, #20]
    8e34:	blx	r3
    8e38:	ldr	r0, [r8, #100]	; 0x64
    8e3c:	cmp	r0, #0
    8e40:	beq	8e48 <readstat_parse_sas7bcat+0xd8>
    8e44:	bl	3da4 <iconv_close@plt>
    8e48:	ldr	r0, [r8, #80]	; 0x50
    8e4c:	cmp	r0, #0
    8e50:	beq	8e58 <readstat_parse_sas7bcat+0xe8>
    8e54:	bl	3e94 <free@plt>
    8e58:	mov	r0, r8
    8e5c:	bl	3e94 <free@plt>
    8e60:	cmp	sl, #0
    8e64:	beq	8e70 <readstat_parse_sas7bcat+0x100>
    8e68:	mov	r0, sl
    8e6c:	bl	3e94 <free@plt>
    8e70:	ldr	r0, [fp, #-400]	; 0xfffffe70
    8e74:	sub	sp, fp, #40	; 0x28
    8e78:	vpop	{d8}
    8e7c:	ldrd	r4, [sp]
    8e80:	ldrd	r6, [sp, #8]
    8e84:	ldrd	r8, [sp, #16]
    8e88:	ldrd	sl, [sp, #24]
    8e8c:	add	sp, sp, #32
    8e90:	pop	{pc}		; (ldr pc, [sp], #4)
    8e94:	ldr	r2, [sl, #4]
    8e98:	ldr	r3, [sl, #24]
    8e9c:	strd	r2, [r8, #16]
    8ea0:	bl	3e88 <machine_is_little_endian@plt>
    8ea4:	ldr	r1, [sl]
    8ea8:	sub	lr, fp, #396	; 0x18c
    8eac:	ldrd	r2, [sl, #32]
    8eb0:	ldr	r6, [r8, #92]	; 0x5c
    8eb4:	eor	r0, r0, r1
    8eb8:	ldrd	r4, [sl, #56]	; 0x38
    8ebc:	str	r0, [r8, #24]
    8ec0:	ldrd	r0, [sl, #64]	; 0x40
    8ec4:	cmp	r6, #0
    8ec8:	ldreq	r6, [sl, #144]	; 0x90
    8ecc:	strd	r4, [r8, #56]	; 0x38
    8ed0:	strd	r2, [r8, #64]	; 0x40
    8ed4:	ldr	r2, [r8, #20]
    8ed8:	strd	r0, [r8, #72]	; 0x48
    8edc:	ldr	r1, [r8, #16]
    8ee0:	streq	r6, [r8, #92]	; 0x5c
    8ee4:	add	r4, r2, #212	; 0xd4
    8ee8:	add	r0, r2, #428	; 0x1ac
    8eec:	asr	r3, r4, #31
    8ef0:	add	ip, r2, #50	; 0x32
    8ef4:	mov	r2, r4
    8ef8:	lsl	r0, r0, #1
    8efc:	cmp	r1, #0
    8f00:	mov	r4, ip
    8f04:	asr	r5, ip, #31
    8f08:	strd	r2, [lr]
    8f0c:	mov	r2, r0
    8f10:	asr	r3, r0, #31
    8f14:	ldrd	r0, [lr]
    8f18:	strd	r0, [r8, #32]
    8f1c:	mov	r0, ip
    8f20:	mov	r1, r5
    8f24:	strd	r2, [r8, #40]	; 0x28
    8f28:	strd	r0, [r8, #48]	; 0x30
    8f2c:	bne	91a8 <readstat_parse_sas7bcat+0x438>
    8f30:	cmp	r6, #0
    8f34:	beq	8f70 <readstat_parse_sas7bcat+0x200>
    8f38:	ldr	r4, [r8, #96]	; 0x60
    8f3c:	cmp	r4, #0
    8f40:	beq	8f70 <readstat_parse_sas7bcat+0x200>
    8f44:	mov	r1, r4
    8f48:	mov	r0, r6
    8f4c:	bl	3dd4 <strcmp@plt>
    8f50:	cmp	r0, #0
    8f54:	beq	8f70 <readstat_parse_sas7bcat+0x200>
    8f58:	mov	r1, r6
    8f5c:	mov	r0, r4
    8f60:	bl	4104 <iconv_open@plt>
    8f64:	cmn	r0, #1
    8f68:	beq	91e8 <readstat_parse_sas7bcat+0x478>
    8f6c:	str	r0, [r8, #100]	; 0x64
    8f70:	ldr	r3, [r8]
    8f74:	cmp	r3, #0
    8f78:	beq	902c <readstat_parse_sas7bcat+0x2bc>
    8f7c:	sub	r5, fp, #372	; 0x174
    8f80:	mov	r2, #56	; 0x38
    8f84:	mov	r1, #0
    8f88:	mov	r0, r5
    8f8c:	bl	4278 <memset@plt>
    8f90:	ldr	ip, [r8, #16]
    8f94:	mov	r2, sl
    8f98:	mov	r1, #0
    8f9c:	sub	r3, fp, #364	; 0x16c
    8fa0:	sub	r4, fp, #304	; 0x130
    8fa4:	ldr	lr, [r2], #80	; 0x50
    8fa8:	ldr	r0, [sl, #12]
    8fac:	bfi	r1, ip, #0, #1
    8fb0:	ldr	ip, [sl, #72]	; 0x48
    8fb4:	cmp	lr, #0
    8fb8:	movne	lr, #1
    8fbc:	moveq	lr, #2
    8fc0:	ldr	r6, [sl, #76]	; 0x4c
    8fc4:	str	ip, [fp, #-356]	; 0xfffffe9c
    8fc8:	str	lr, [fp, #-336]	; 0xfffffeb0
    8fcc:	ldr	lr, [r8, #92]	; 0x5c
    8fd0:	str	r6, [fp, #-352]	; 0xfffffea0
    8fd4:	ldr	ip, [r8, #100]	; 0x64
    8fd8:	strb	r1, [fp, #-320]	; 0xfffffec0
    8fdc:	asr	r1, r0, #31
    8fe0:	str	lr, [fp, #-324]	; 0xfffffebc
    8fe4:	strd	r0, [r3, #16]
    8fe8:	mov	r3, #64	; 0x40
    8fec:	mov	r0, r4
    8ff0:	movw	r1, #257	; 0x101
    8ff4:	str	ip, [sp]
    8ff8:	bl	420c <readstat_convert@plt>
    8ffc:	subs	r3, r0, #0
    9000:	str	r3, [fp, #-400]	; 0xfffffe70
    9004:	bne	8e2c <readstat_parse_sas7bcat+0xbc>
    9008:	mov	r0, r5
    900c:	str	r4, [fp, #-328]	; 0xfffffeb8
    9010:	ldr	r3, [r8]
    9014:	ldr	r1, [r8, #8]
    9018:	blx	r3
    901c:	cmp	r0, #0
    9020:	movne	r3, #4
    9024:	strne	r3, [fp, #-400]	; 0xfffffe70
    9028:	bne	8e2c <readstat_parse_sas7bcat+0xbc>
    902c:	ldr	r0, [r8, #64]	; 0x40
    9030:	bl	4200 <readstat_malloc@plt>
    9034:	subs	r4, r0, #0
    9038:	str	r4, [fp, #-428]	; 0xfffffe54
    903c:	beq	9200 <readstat_parse_sas7bcat+0x490>
    9040:	ldr	r0, [r8, #64]	; 0x40
    9044:	mov	r1, #0
    9048:	ldr	ip, [r8, #72]	; 0x48
    904c:	ldr	r3, [r7, #8]
    9050:	ldr	r2, [r7, #20]
    9054:	add	r0, ip, r0
    9058:	blx	r3
    905c:	cmn	r0, #1
    9060:	beq	91f4 <readstat_parse_sas7bcat+0x484>
    9064:	mov	r0, r4
    9068:	ldr	r3, [r7, #12]
    906c:	ldr	r2, [r7, #20]
    9070:	ldr	r1, [r8, #64]	; 0x40
    9074:	blx	r3
    9078:	ldrd	r4, [r8, #64]	; 0x40
    907c:	asr	r1, r0, #31
    9080:	cmp	r0, r4
    9084:	sbcs	r3, r1, r5
    9088:	blt	91dc <readstat_parse_sas7bcat+0x46c>
    908c:	ldr	r3, [fp, #-428]	; 0xfffffe54
    9090:	mov	r2, r8
    9094:	ldr	r0, [r8, #40]	; 0x28
    9098:	sub	r1, r4, r0
    909c:	add	r0, r3, r0
    90a0:	bl	8be0 <sas7bcat_augment_index>
    90a4:	subs	r3, r0, #0
    90a8:	str	r3, [fp, #-400]	; 0xfffffe70
    90ac:	bne	9184 <readstat_parse_sas7bcat+0x414>
    90b0:	ldrd	r2, [r8, #56]	; 0x38
    90b4:	cmp	r2, #4
    90b8:	sbcs	r3, r3, #0
    90bc:	blt	920c <readstat_parse_sas7bcat+0x49c>
    90c0:	ldr	r9, [fp, #-428]	; 0xfffffe54
    90c4:	mov	r4, #3
    90c8:	mov	r5, #0
    90cc:	add	r6, r9, #16
    90d0:	b	90ec <readstat_parse_sas7bcat+0x37c>
    90d4:	ldrd	r2, [r8, #56]	; 0x38
    90d8:	adds	r4, r4, #1
    90dc:	adc	r5, r5, #0
    90e0:	cmp	r4, r2
    90e4:	sbcs	r3, r5, r3
    90e8:	bge	920c <readstat_parse_sas7bcat+0x49c>
    90ec:	ldr	ip, [r8, #64]	; 0x40
    90f0:	mov	r1, #0
    90f4:	ldr	r0, [r8, #72]	; 0x48
    90f8:	ldr	r3, [r7, #8]
    90fc:	ldr	r2, [r7, #20]
    9100:	mla	r0, ip, r4, r0
    9104:	blx	r3
    9108:	cmn	r0, #1
    910c:	mov	r0, r9
    9110:	beq	91f4 <readstat_parse_sas7bcat+0x484>
    9114:	ldr	r3, [r7, #12]
    9118:	ldr	r2, [r7, #20]
    911c:	ldr	r1, [r8, #64]	; 0x40
    9120:	blx	r3
    9124:	ldrd	r2, [r8, #64]	; 0x40
    9128:	asr	r1, r0, #31
    912c:	cmp	r0, r2
    9130:	sbcs	r1, r1, r3
    9134:	blt	91dc <readstat_parse_sas7bcat+0x46c>
    9138:	ldrb	r1, [r6]
    913c:	cmp	r1, #88	; 0x58
    9140:	bne	90d4 <readstat_parse_sas7bcat+0x364>
    9144:	ldrb	r1, [r9, #17]
    9148:	cmp	r1, #76	; 0x4c
    914c:	bne	90d4 <readstat_parse_sas7bcat+0x364>
    9150:	ldrb	r1, [r9, #18]
    9154:	cmp	r1, #83	; 0x53
    9158:	bne	90d4 <readstat_parse_sas7bcat+0x364>
    915c:	ldrb	r1, [r9, #19]
    9160:	cmp	r1, #82	; 0x52
    9164:	bne	90d4 <readstat_parse_sas7bcat+0x364>
    9168:	sub	r1, r2, #16
    916c:	mov	r0, r6
    9170:	mov	r2, r8
    9174:	bl	8be0 <sas7bcat_augment_index>
    9178:	cmp	r0, #0
    917c:	beq	90d4 <readstat_parse_sas7bcat+0x364>
    9180:	str	r0, [fp, #-400]	; 0xfffffe70
    9184:	ldr	r3, [r7, #4]
    9188:	ldr	r0, [r7, #20]
    918c:	blx	r3
    9190:	ldr	r0, [fp, #-428]	; 0xfffffe54
    9194:	bl	3e94 <free@plt>
    9198:	b	8e38 <readstat_parse_sas7bcat+0xc8>
    919c:	mov	r3, #1
    91a0:	str	r3, [fp, #-400]	; 0xfffffe70
    91a4:	b	8e2c <readstat_parse_sas7bcat+0xbc>
    91a8:	adds	r0, r2, #144	; 0x90
    91ac:	adc	r1, r3, #0
    91b0:	ldr	r3, [fp, #-396]	; 0xfffffe74
    91b4:	strd	r0, [r8, #40]	; 0x28
    91b8:	adds	ip, r3, #72	; 0x48
    91bc:	ldr	r3, [fp, #-392]	; 0xfffffe78
    91c0:	str	ip, [r8, #32]
    91c4:	adc	lr, r3, #0
    91c8:	adds	r2, r4, #24
    91cc:	adc	r3, r5, #0
    91d0:	str	lr, [r8, #36]	; 0x24
    91d4:	strd	r2, [r8, #48]	; 0x30
    91d8:	b	8f30 <readstat_parse_sas7bcat+0x1c0>
    91dc:	mov	r3, #2
    91e0:	str	r3, [fp, #-400]	; 0xfffffe70
    91e4:	b	9184 <readstat_parse_sas7bcat+0x414>
    91e8:	mov	r3, #7
    91ec:	str	r3, [fp, #-400]	; 0xfffffe70
    91f0:	b	8e2c <readstat_parse_sas7bcat+0xbc>
    91f4:	mov	r3, #15
    91f8:	str	r3, [fp, #-400]	; 0xfffffe70
    91fc:	b	9184 <readstat_parse_sas7bcat+0x414>
    9200:	mov	r3, #3
    9204:	str	r3, [fp, #-400]	; 0xfffffe70
    9208:	b	8e2c <readstat_parse_sas7bcat+0xbc>
    920c:	ldr	ip, [r8, #84]	; 0x54
    9210:	cmp	ip, #0
    9214:	beq	9184 <readstat_parse_sas7bcat+0x414>
    9218:	cmp	ip, #1
    921c:	ldr	lr, [r8, #80]	; 0x50
    9220:	ble	9b70 <readstat_parse_sas7bcat+0xe00>
    9224:	ldrd	r0, [lr]
    9228:	ldrd	r2, [lr, #8]
    922c:	cmp	r1, r3
    9230:	cmpeq	r0, r2
    9234:	addls	r5, lr, #8
    9238:	movls	r4, #1
    923c:	bls	9258 <readstat_parse_sas7bcat+0x4e8>
    9240:	b	9b40 <readstat_parse_sas7bcat+0xdd0>
    9244:	ldrd	r0, [r3]
    9248:	ldrd	r2, [r3, #8]
    924c:	cmp	r3, r1
    9250:	cmpeq	r2, r0
    9254:	bcc	9b40 <readstat_parse_sas7bcat+0xdd0>
    9258:	add	r4, r4, #1
    925c:	mov	r3, r5
    9260:	cmp	ip, r4
    9264:	add	r5, r5, #8
    9268:	bne	9244 <readstat_parse_sas7bcat+0x4d4>
    926c:	mov	r5, #1
    9270:	mov	r6, lr
    9274:	mov	r4, r5
    9278:	mov	r1, r6
    927c:	ldrd	r2, [r6, #8]!
    9280:	lsl	r9, r5, #3
    9284:	ldrd	r0, [r1]
    9288:	cmp	r3, r1
    928c:	cmpeq	r2, r0
    9290:	beq	92a0 <readstat_parse_sas7bcat+0x530>
    9294:	cmp	r5, r4
    9298:	add	r5, r5, #1
    929c:	strdne	r2, [lr, r9]
    92a0:	add	r4, r4, #1
    92a4:	cmp	r4, ip
    92a8:	bne	9278 <readstat_parse_sas7bcat+0x508>
    92ac:	str	r5, [r8, #84]	; 0x54
    92b0:	vldr	d8, [pc, #984]	; 9690 <readstat_parse_sas7bcat+0x920>
    92b4:	mov	r2, #0
    92b8:	mov	r3, #0
    92bc:	sub	r1, fp, #420	; 0x1a4
    92c0:	str	r3, [fp, #-468]	; 0xfffffe2c
    92c4:	strd	r2, [r1]
    92c8:	mov	r1, #0
    92cc:	str	r2, [fp, #-464]	; 0xfffffe30
    92d0:	str	sl, [fp, #-452]	; 0xfffffe3c
    92d4:	str	r7, [fp, #-448]	; 0xfffffe40
    92d8:	str	r1, [fp, #-404]	; 0xfffffe6c
    92dc:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    92e0:	ldr	r4, [r8, #12]
    92e4:	ldr	r2, [r8, #80]	; 0x50
    92e8:	lsl	r3, r3, #3
    92ec:	ldr	r0, [r8, #16]
    92f0:	add	r1, r2, r3
    92f4:	ldrh	r3, [r2, r3]
    92f8:	ldr	r7, [r1, #4]
    92fc:	cmp	r0, #0
    9300:	moveq	r5, #16
    9304:	movne	r5, #32
    9308:	str	r3, [fp, #-436]	; 0xfffffe4c
    930c:	cmp	r3, #0
    9310:	cmpne	r7, #0
    9314:	ble	946c <readstat_parse_sas7bcat+0x6fc>
    9318:	ldrd	r2, [r8, #56]	; 0x38
    931c:	asr	r1, r7, #31
    9320:	cmp	r2, r7
    9324:	sbcs	r3, r3, r1
    9328:	blt	946c <readstat_parse_sas7bcat+0x6fc>
    932c:	mov	r1, #0
    9330:	sub	r6, fp, #304	; 0x130
    9334:	str	r7, [fp, #-432]	; 0xfffffe50
    9338:	mov	r2, #0
    933c:	mov	r3, #0
    9340:	str	r5, [fp, #-412]	; 0xfffffe64
    9344:	str	r1, [fp, #-396]	; 0xfffffe74
    9348:	sub	r1, fp, #300	; 0x12c
    934c:	mov	sl, r7
    9350:	mov	r5, r6
    9354:	mov	r7, r3
    9358:	ldr	r9, [fp, #-436]	; 0xfffffe4c
    935c:	mov	r6, r2
    9360:	str	r1, [fp, #-424]	; 0xfffffe58
    9364:	b	93d4 <readstat_parse_sas7bcat+0x664>
    9368:	bl	43c8 <sas_read4@plt>
    936c:	mov	sl, r0
    9370:	sub	r0, fp, #296	; 0x128
    9374:	ldr	r1, [r8, #24]
    9378:	bl	43a4 <sas_read2@plt>
    937c:	mov	r9, r0
    9380:	sub	r0, fp, #292	; 0x124
    9384:	ldr	r1, [r8, #24]
    9388:	sub	r0, r0, #2
    938c:	bl	43a4 <sas_read2@plt>
    9390:	mov	r3, r0
    9394:	ldr	r2, [fp, #-396]	; 0xfffffe74
    9398:	cmp	sl, #0
    939c:	cmpgt	r9, #0
    93a0:	asr	r1, sl, #31
    93a4:	add	r3, r2, r3
    93a8:	str	r3, [fp, #-396]	; 0xfffffe74
    93ac:	ble	94d4 <readstat_parse_sas7bcat+0x764>
    93b0:	ldrd	r2, [r8, #56]	; 0x38
    93b4:	cmp	r2, sl
    93b8:	sbcs	r1, r3, r1
    93bc:	blt	94d4 <readstat_parse_sas7bcat+0x764>
    93c0:	adds	r6, r6, #1
    93c4:	adc	r7, r7, #0
    93c8:	cmp	r6, r2
    93cc:	sbcs	r3, r7, r3
    93d0:	bge	94d4 <readstat_parse_sas7bcat+0x764>
    93d4:	ldr	r0, [r8, #64]	; 0x40
    93d8:	sub	sl, sl, #1
    93dc:	mov	r1, #0
    93e0:	ldr	r3, [r8, #72]	; 0x48
    93e4:	ldr	r2, [r4, #20]
    93e8:	add	r9, r9, r3
    93ec:	ldr	r3, [r4, #8]
    93f0:	mla	r0, r0, sl, r9
    93f4:	blx	r3
    93f8:	ldr	r9, [fp, #-412]	; 0xfffffe64
    93fc:	cmn	r0, #1
    9400:	mov	r0, r5
    9404:	mov	r1, r9
    9408:	beq	9a10 <readstat_parse_sas7bcat+0xca0>
    940c:	ldr	r3, [r4, #12]
    9410:	ldr	r2, [r4, #20]
    9414:	blx	r3
    9418:	cmp	r9, r0
    941c:	mov	r0, r5
    9420:	bgt	9a24 <readstat_parse_sas7bcat+0xcb4>
    9424:	ldr	r3, [r8, #16]
    9428:	ldr	r1, [r8, #24]
    942c:	cmp	r3, #0
    9430:	bne	9368 <readstat_parse_sas7bcat+0x5f8>
    9434:	bl	43c8 <sas_read4@plt>
    9438:	mov	sl, r0
    943c:	ldr	r0, [fp, #-424]	; 0xfffffe58
    9440:	ldr	r1, [r8, #24]
    9444:	bl	43a4 <sas_read2@plt>
    9448:	mov	r9, r0
    944c:	sub	r0, fp, #296	; 0x128
    9450:	ldr	r1, [r8, #24]
    9454:	sub	r0, r0, #2
    9458:	bl	43a4 <sas_read2@plt>
    945c:	mov	r3, r0
    9460:	b	9394 <readstat_parse_sas7bcat+0x624>
    9464:	ldr	r0, [fp, #-412]	; 0xfffffe64
    9468:	bl	3e94 <free@plt>
    946c:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    9470:	sub	r1, fp, #420	; 0x1a4
    9474:	ldr	r2, [r8, #84]	; 0x54
    9478:	adds	r3, r3, #1
    947c:	str	r3, [fp, #-420]	; 0xfffffe5c
    9480:	ldr	r3, [fp, #-416]	; 0xfffffe60
    9484:	adc	r3, r3, #0
    9488:	str	r3, [fp, #-416]	; 0xfffffe60
    948c:	asr	r3, r2, #31
    9490:	ldrd	r0, [r1]
    9494:	cmp	r0, r2
    9498:	sbcs	r3, r1, r3
    949c:	blt	92dc <readstat_parse_sas7bcat+0x56c>
    94a0:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    94a4:	ldr	r7, [fp, #-448]	; 0xfffffe40
    94a8:	ldr	r3, [r7, #4]
    94ac:	ldr	r0, [r7, #20]
    94b0:	blx	r3
    94b4:	ldr	r0, [fp, #-428]	; 0xfffffe54
    94b8:	bl	3e94 <free@plt>
    94bc:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    94c0:	cmp	r3, #0
    94c4:	beq	8e38 <readstat_parse_sas7bcat+0xc8>
    94c8:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    94cc:	bl	3e94 <free@plt>
    94d0:	b	8e38 <readstat_parse_sas7bcat+0xc8>
    94d4:	mov	r6, r5
    94d8:	ldr	r7, [fp, #-432]	; 0xfffffe50
    94dc:	ldr	r3, [fp, #-396]	; 0xfffffe74
    94e0:	cmp	r3, #0
    94e4:	beq	946c <readstat_parse_sas7bcat+0x6fc>
    94e8:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    94ec:	ldr	r1, [fp, #-396]	; 0xfffffe74
    94f0:	bl	42b4 <readstat_realloc@plt>
    94f4:	subs	r3, r0, #0
    94f8:	str	r3, [fp, #-404]	; 0xfffffe6c
    94fc:	beq	9b7c <readstat_parse_sas7bcat+0xe0c>
    9500:	sub	r2, fp, #412	; 0x19c
    9504:	mov	r0, #0
    9508:	str	r6, [fp, #-424]	; 0xfffffe58
    950c:	ldr	r3, [r8, #16]
    9510:	mov	r1, #0
    9514:	mov	r5, #0
    9518:	mov	sl, r7
    951c:	strd	r0, [r2]
    9520:	sub	r2, fp, #300	; 0x12c
    9524:	ldr	r4, [r8, #12]
    9528:	str	r2, [fp, #-440]	; 0xfffffe48
    952c:	sub	r2, fp, #296	; 0x128
    9530:	cmp	r3, r5
    9534:	sub	r2, r2, #2
    9538:	moveq	r9, #16
    953c:	movne	r9, #32
    9540:	str	r2, [fp, #-444]	; 0xfffffe44
    9544:	str	r9, [fp, #-432]	; 0xfffffe50
    9548:	ldr	r9, [fp, #-436]	; 0xfffffe4c
    954c:	b	95d4 <readstat_parse_sas7bcat+0x864>
    9550:	ldr	r0, [fp, #-424]	; 0xfffffe58
    9554:	bl	43c8 <sas_read4@plt>
    9558:	mov	sl, r0
    955c:	sub	r0, fp, #296	; 0x128
    9560:	ldr	r1, [r8, #24]
    9564:	bl	43a4 <sas_read2@plt>
    9568:	mov	r9, r0
    956c:	sub	r0, fp, #292	; 0x124
    9570:	ldr	r1, [r8, #24]
    9574:	sub	r0, r0, #2
    9578:	bl	43a4 <sas_read2@plt>
    957c:	mov	r6, r0
    9580:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9584:	mov	r1, r6
    9588:	add	r0, r3, r5
    958c:	ldr	r3, [fp, #-396]	; 0xfffffe74
    9590:	add	r5, r6, r5
    9594:	cmp	r3, r5
    9598:	bcc	9afc <readstat_parse_sas7bcat+0xd8c>
    959c:	ldr	r7, [r4, #12]
    95a0:	ldr	r2, [r4, #20]
    95a4:	blx	r7
    95a8:	cmp	r6, r0
    95ac:	bgt	9a64 <readstat_parse_sas7bcat+0xcf4>
    95b0:	ldr	r3, [fp, #-412]	; 0xfffffe64
    95b4:	adds	r3, r3, #1
    95b8:	str	r3, [fp, #-412]	; 0xfffffe64
    95bc:	ldr	r3, [fp, #-408]	; 0xfffffe68
    95c0:	adc	r3, r3, #0
    95c4:	cmp	sl, #0
    95c8:	cmpgt	r9, #0
    95cc:	str	r3, [fp, #-408]	; 0xfffffe68
    95d0:	ble	969c <readstat_parse_sas7bcat+0x92c>
    95d4:	ldrd	r6, [r8, #56]	; 0x38
    95d8:	asr	r3, sl, #31
    95dc:	sub	ip, sl, #1
    95e0:	mov	r1, #0
    95e4:	cmp	r6, sl
    95e8:	sbcs	r3, r7, r3
    95ec:	blt	969c <readstat_parse_sas7bcat+0x92c>
    95f0:	sub	r3, fp, #412	; 0x19c
    95f4:	ldrd	r2, [r3]
    95f8:	cmp	r2, r6
    95fc:	sbcs	r3, r3, r7
    9600:	bge	969c <readstat_parse_sas7bcat+0x92c>
    9604:	ldr	r0, [r8, #64]	; 0x40
    9608:	ldr	r3, [r8, #72]	; 0x48
    960c:	ldr	r2, [r4, #20]
    9610:	add	r9, r9, r3
    9614:	ldr	r3, [r4, #8]
    9618:	mla	r0, r0, ip, r9
    961c:	blx	r3
    9620:	ldr	r6, [fp, #-432]	; 0xfffffe50
    9624:	cmn	r0, #1
    9628:	ldr	r7, [fp, #-424]	; 0xfffffe58
    962c:	mov	r1, r6
    9630:	mov	r0, r7
    9634:	beq	9ae8 <readstat_parse_sas7bcat+0xd78>
    9638:	ldr	r3, [r4, #12]
    963c:	ldr	r2, [r4, #20]
    9640:	blx	r3
    9644:	cmp	r6, r0
    9648:	mov	r0, r7
    964c:	bgt	9a64 <readstat_parse_sas7bcat+0xcf4>
    9650:	ldr	r3, [r8, #16]
    9654:	ldr	r1, [r8, #24]
    9658:	cmp	r3, #0
    965c:	bne	9550 <readstat_parse_sas7bcat+0x7e0>
    9660:	bl	43c8 <sas_read4@plt>
    9664:	mov	sl, r0
    9668:	ldr	r0, [fp, #-440]	; 0xfffffe48
    966c:	ldr	r1, [r8, #24]
    9670:	bl	43a4 <sas_read2@plt>
    9674:	mov	r9, r0
    9678:	ldr	r0, [fp, #-444]	; 0xfffffe44
    967c:	ldr	r1, [r8, #24]
    9680:	bl	43a4 <sas_read2@plt>
    9684:	mov	r6, r0
    9688:	b	9580 <readstat_parse_sas7bcat+0x810>
    968c:	nop	{0}
    9690:	.word	0x00000000
    9694:	.word	0x7ff80000
    9698:	.word	0xfffff078
    969c:	ldr	r6, [fp, #-424]	; 0xfffffe58
    96a0:	ldr	r3, [fp, #-396]	; 0xfffffe74
    96a4:	cmp	r3, #105	; 0x69
    96a8:	ble	946c <readstat_parse_sas7bcat+0x6fc>
    96ac:	ldr	r7, [fp, #-404]	; 0xfffffe6c
    96b0:	ldr	r3, [r8, #16]
    96b4:	ldr	r1, [r8, #24]
    96b8:	ldrb	r9, [r7, #2]
    96bc:	cmp	r3, #0
    96c0:	asr	r9, r9, #1
    96c4:	and	r4, r9, #4
    96c8:	add	r0, r4, #42	; 0x2a
    96cc:	add	r5, r7, r0
    96d0:	beq	9a38 <readstat_parse_sas7bcat+0xcc8>
    96d4:	mov	r0, r5
    96d8:	mov	r9, #138	; 0x8a
    96dc:	bl	43c8 <sas_read4@plt>
    96e0:	str	r0, [fp, #-424]	; 0xfffffe58
    96e4:	add	r0, r4, #50	; 0x32
    96e8:	add	r0, r7, r0
    96ec:	ldr	r1, [r8, #24]
    96f0:	bl	43c8 <sas_read4@plt>
    96f4:	mov	r7, r0
    96f8:	ldr	r2, [fp, #-404]	; 0xfffffe6c
    96fc:	mov	r3, #8
    9700:	mov	r1, #129	; 0x81
    9704:	mov	r0, r6
    9708:	ldr	ip, [r8, #100]	; 0x64
    970c:	add	r2, r2, r3
    9710:	str	ip, [sp]
    9714:	bl	420c <readstat_convert@plt>
    9718:	cmp	r0, #0
    971c:	bne	9a8c <readstat_parse_sas7bcat+0xd1c>
    9720:	ldr	r1, [fp, #-404]	; 0xfffffe6c
    9724:	cmp	r4, #0
    9728:	addne	r4, r4, #16
    972c:	add	r2, r4, r9
    9730:	ldrsb	r3, [r1, #2]
    9734:	cmp	r3, #0
    9738:	blt	9a9c <readstat_parse_sas7bcat+0xd2c>
    973c:	ldr	r3, [fp, #-396]	; 0xfffffe74
    9740:	cmp	r3, r2
    9744:	bcc	946c <readstat_parse_sas7bcat+0x6fc>
    9748:	sub	r9, r3, r9
    974c:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9750:	mov	r1, #4
    9754:	mov	r0, r7
    9758:	sub	r9, r9, r4
    975c:	add	r5, r3, r2
    9760:	bl	3f9c <readstat_calloc@plt>
    9764:	mov	r4, r0
    9768:	str	r0, [fp, #-412]	; 0xfffffe64
    976c:	bl	3e88 <machine_is_little_endian@plt>
    9770:	ldrb	r3, [fp, #-304]	; 0xfffffed0
    9774:	cmp	r4, #0
    9778:	str	r0, [fp, #-440]	; 0xfffffe48
    977c:	str	r3, [fp, #-432]	; 0xfffffe50
    9780:	beq	9b90 <readstat_parse_sas7bcat+0xe20>
    9784:	ldr	r3, [fp, #-424]	; 0xfffffe58
    9788:	cmp	r3, #0
    978c:	ble	9be0 <readstat_parse_sas7bcat+0xe70>
    9790:	cmp	r9, #2
    9794:	bls	9ba0 <readstat_parse_sas7bcat+0xe30>
    9798:	mov	r4, r5
    979c:	mov	sl, #0
    97a0:	str	r6, [fp, #-396]	; 0xfffffe74
    97a4:	mov	r6, r3
    97a8:	b	97bc <readstat_parse_sas7bcat+0xa4c>
    97ac:	add	r1, r4, #3
    97b0:	sub	r1, r1, r5
    97b4:	cmp	r9, r1
    97b8:	bcc	9b10 <readstat_parse_sas7bcat+0xda0>
    97bc:	cmp	r7, sl
    97c0:	add	sl, sl, #1
    97c4:	ble	9804 <readstat_parse_sas7bcat+0xa94>
    97c8:	ldr	r0, [r8, #20]
    97cc:	add	r1, r0, #14
    97d0:	add	r0, r0, #10
    97d4:	add	r1, r4, r1
    97d8:	add	r0, r4, r0
    97dc:	sub	r1, r1, r5
    97e0:	cmp	r9, r1
    97e4:	bcc	9b10 <readstat_parse_sas7bcat+0xda0>
    97e8:	ldr	r1, [r8, #24]
    97ec:	bl	43c8 <sas_read4@plt>
    97f0:	cmp	r7, r0
    97f4:	sub	r1, r4, r5
    97f8:	bls	9b10 <readstat_parse_sas7bcat+0xda0>
    97fc:	ldr	r3, [fp, #-412]	; 0xfffffe64
    9800:	str	r1, [r3, r0, lsl #2]
    9804:	ldrb	r1, [r4, #2]
    9808:	cmp	r6, sl
    980c:	add	r1, r1, #6
    9810:	add	r4, r4, r1
    9814:	bne	97ac <readstat_parse_sas7bcat+0xa3c>
    9818:	ldr	r6, [fp, #-396]	; 0xfffffe74
    981c:	ldr	r3, [fp, #-424]	; 0xfffffe58
    9820:	cmp	r7, r3
    9824:	movlt	r3, r7
    9828:	cmp	r3, #0
    982c:	str	r3, [fp, #-436]	; 0xfffffe4c
    9830:	ble	9464 <readstat_parse_sas7bcat+0x6f4>
    9834:	ldr	r3, [fp, #-412]	; 0xfffffe64
    9838:	ldr	r2, [r3]
    983c:	add	r3, r2, #30
    9840:	add	r2, r5, r2
    9844:	cmp	r9, r3
    9848:	bcc	9ba0 <readstat_parse_sas7bcat+0xe30>
    984c:	add	r7, r4, #10
    9850:	sub	r3, r7, r5
    9854:	cmp	r9, r3
    9858:	bcc	9ba0 <readstat_parse_sas7bcat+0xe30>
    985c:	sub	r3, fp, #388	; 0x184
    9860:	mov	sl, #0
    9864:	str	r6, [fp, #-444]	; 0xfffffe44
    9868:	mov	r6, r3
    986c:	str	r5, [fp, #-424]	; 0xfffffe58
    9870:	str	r4, [fp, #-396]	; 0xfffffe74
    9874:	b	99b8 <readstat_parse_sas7bcat+0xc48>
    9878:	mov	r3, #5
    987c:	add	r0, r2, #22
    9880:	ldr	r1, [fp, #-440]	; 0xfffffe48
    9884:	movw	r5, #65535	; 0xffff
    9888:	mvn	r4, #0
    988c:	str	r3, [fp, #-380]	; 0xfffffe84
    9890:	bl	4398 <sas_read8@plt>
    9894:	orr	r3, r1, #65280	; 0xff00
    9898:	str	r0, [fp, #-460]	; 0xfffffe34
    989c:	str	r3, [fp, #-456]	; 0xfffffe38
    98a0:	sub	r3, fp, #460	; 0x1cc
    98a4:	ldrd	r2, [r3]
    98a8:	cmp	r3, r5
    98ac:	cmpeq	r2, r4
    98b0:	vmovne	d7, r0, r1
    98b4:	vnegne.f64	d7, d7
    98b8:	beq	9b2c <readstat_parse_sas7bcat+0xdbc>
    98bc:	vstr	d7, [fp, #-388]	; 0xfffffe7c
    98c0:	ldr	r4, [fp, #-396]	; 0xfffffe74
    98c4:	ldr	r1, [r8, #24]
    98c8:	add	r0, r4, #8
    98cc:	bl	43a4 <sas_read2@plt>
    98d0:	ldr	r2, [fp, #-424]	; 0xfffffe58
    98d4:	add	r3, r0, #10
    98d8:	mov	r5, r0
    98dc:	add	r3, r4, r3
    98e0:	sub	r3, r3, r2
    98e4:	cmp	r9, r3
    98e8:	bcc	9b10 <readstat_parse_sas7bcat+0xda0>
    98ec:	ldr	r3, [r8, #4]
    98f0:	cmp	r3, #0
    98f4:	beq	9968 <readstat_parse_sas7bcat+0xbf8>
    98f8:	lsl	r1, r0, #2
    98fc:	mov	r3, r0
    9900:	ldr	r0, [r8, #100]	; 0x64
    9904:	mov	r4, sp
    9908:	mov	r2, r7
    990c:	add	ip, r1, #8
    9910:	add	r1, r1, #1
    9914:	bic	ip, ip, #7
    9918:	sub	sp, sp, ip
    991c:	mov	r7, sp
    9920:	str	r0, [r7], #16
    9924:	mov	r0, r7
    9928:	bl	420c <readstat_convert@plt>
    992c:	cmp	r0, #0
    9930:	bne	9bbc <readstat_parse_sas7bcat+0xe4c>
    9934:	ldr	r3, [r8, #8]
    9938:	ldr	r0, [fp, #-444]	; 0xfffffe44
    993c:	str	r7, [sp, #8]
    9940:	str	r3, [sp, #12]
    9944:	sub	r3, fp, #380	; 0x17c
    9948:	ldrd	r2, [r3]
    994c:	strd	r2, [sp]
    9950:	ldm	r6, {r2, r3}
    9954:	ldr	r1, [r8, #4]
    9958:	blx	r1
    995c:	cmp	r0, #0
    9960:	bne	9bd0 <readstat_parse_sas7bcat+0xe60>
    9964:	mov	sp, r4
    9968:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    996c:	add	sl, sl, #1
    9970:	add	r5, r5, #11
    9974:	cmp	sl, r3
    9978:	ldr	r3, [fp, #-396]	; 0xfffffe74
    997c:	add	r3, r3, r5
    9980:	str	r3, [fp, #-396]	; 0xfffffe74
    9984:	beq	9464 <readstat_parse_sas7bcat+0x6f4>
    9988:	ldr	r1, [fp, #-424]	; 0xfffffe58
    998c:	ldr	r3, [fp, #-412]	; 0xfffffe64
    9990:	ldr	r2, [r3, sl, lsl #2]
    9994:	add	r3, r2, #30
    9998:	add	r2, r1, r2
    999c:	cmp	r9, r3
    99a0:	bcc	9b10 <readstat_parse_sas7bcat+0xda0>
    99a4:	ldr	r3, [fp, #-396]	; 0xfffffe74
    99a8:	add	r7, r3, #10
    99ac:	sub	r3, r7, r1
    99b0:	cmp	r9, r3
    99b4:	bcc	9b10 <readstat_parse_sas7bcat+0xda0>
    99b8:	ldr	r1, [fp, #-468]	; 0xfffffe2c
    99bc:	ldr	r3, [fp, #-432]	; 0xfffffe50
    99c0:	str	r1, [r6, #12]
    99c4:	cmp	r3, #36	; 0x24
    99c8:	ldr	r3, [fp, #-464]	; 0xfffffe30
    99cc:	str	r3, [r6]
    99d0:	stmib	r6, {r1, r3}
    99d4:	bne	9878 <readstat_parse_sas7bcat+0xb08>
    99d8:	ldrb	lr, [r2, #2]
    99dc:	sub	r5, fp, #372	; 0x174
    99e0:	mov	r3, #16
    99e4:	mov	r0, r5
    99e8:	mov	r1, #65	; 0x41
    99ec:	ldr	ip, [r8, #100]	; 0x64
    99f0:	sub	lr, lr, #10
    99f4:	add	r2, r2, lr
    99f8:	str	ip, [sp]
    99fc:	bl	420c <readstat_convert@plt>
    9a00:	cmp	r0, #0
    9a04:	bne	9be8 <readstat_parse_sas7bcat+0xe78>
    9a08:	str	r5, [fp, #-388]	; 0xfffffe7c
    9a0c:	b	98c0 <readstat_parse_sas7bcat+0xb50>
    9a10:	mov	r3, #15
    9a14:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9a18:	str	r3, [fp, #-400]	; 0xfffffe70
    9a1c:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9a20:	b	94a8 <readstat_parse_sas7bcat+0x738>
    9a24:	mov	r3, #2
    9a28:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9a2c:	str	r3, [fp, #-400]	; 0xfffffe70
    9a30:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9a34:	b	94a8 <readstat_parse_sas7bcat+0x738>
    9a38:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9a3c:	add	r0, r4, #38	; 0x26
    9a40:	mov	r9, #106	; 0x6a
    9a44:	add	r0, r3, r0
    9a48:	bl	43c8 <sas_read4@plt>
    9a4c:	str	r0, [fp, #-424]	; 0xfffffe58
    9a50:	mov	r0, r5
    9a54:	ldr	r1, [r8, #24]
    9a58:	bl	43c8 <sas_read4@plt>
    9a5c:	mov	r7, r0
    9a60:	b	96f8 <readstat_parse_sas7bcat+0x988>
    9a64:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9a68:	mov	r3, #2
    9a6c:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9a70:	str	r3, [fp, #-400]	; 0xfffffe70
    9a74:	ldr	r3, [r7, #4]
    9a78:	ldr	r0, [r7, #20]
    9a7c:	blx	r3
    9a80:	ldr	r0, [fp, #-428]	; 0xfffffe54
    9a84:	bl	3e94 <free@plt>
    9a88:	b	94c8 <readstat_parse_sas7bcat+0x758>
    9a8c:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9a90:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9a94:	str	r0, [fp, #-400]	; 0xfffffe70
    9a98:	b	9a74 <readstat_parse_sas7bcat+0xd04>
    9a9c:	ldr	r3, [r8, #16]
    9aa0:	cmp	r3, #0
    9aa4:	bne	973c <readstat_parse_sas7bcat+0x9cc>
    9aa8:	ldr	r0, [fp, #-396]	; 0xfffffe74
    9aac:	add	r3, r2, #32
    9ab0:	cmp	r0, r3
    9ab4:	bcc	946c <readstat_parse_sas7bcat+0x6fc>
    9ab8:	ldr	ip, [r8, #100]	; 0x64
    9abc:	add	r2, r1, r2
    9ac0:	mov	r3, #32
    9ac4:	mov	r1, #129	; 0x81
    9ac8:	mov	r0, r6
    9acc:	str	ip, [sp]
    9ad0:	bl	420c <readstat_convert@plt>
    9ad4:	cmp	r0, #0
    9ad8:	bne	9a8c <readstat_parse_sas7bcat+0xd1c>
    9adc:	add	r4, r4, #32
    9ae0:	add	r2, r4, r9
    9ae4:	b	973c <readstat_parse_sas7bcat+0x9cc>
    9ae8:	mov	r3, #15
    9aec:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9af0:	str	r3, [fp, #-400]	; 0xfffffe70
    9af4:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9af8:	b	9a74 <readstat_parse_sas7bcat+0xd04>
    9afc:	mov	r3, #5
    9b00:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9b04:	str	r3, [fp, #-400]	; 0xfffffe70
    9b08:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9b0c:	b	9a74 <readstat_parse_sas7bcat+0xd04>
    9b10:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9b14:	mov	r3, #5
    9b18:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9b1c:	str	r3, [fp, #-400]	; 0xfffffe70
    9b20:	ldr	r0, [fp, #-412]	; 0xfffffe64
    9b24:	bl	3e94 <free@plt>
    9b28:	b	9a74 <readstat_parse_sas7bcat+0xd04>
    9b2c:	ubfx	r1, r1, #8, #8
    9b30:	mov	r0, r6
    9b34:	bl	447c <sas_assign_tag@plt>
    9b38:	vmov.f64	d7, d8
    9b3c:	b	98bc <readstat_parse_sas7bcat+0xb4c>
    9b40:	ldr	r3, [pc, #-1200]	; 9698 <readstat_parse_sas7bcat+0x928>
    9b44:	mov	r1, ip
    9b48:	mov	r0, lr
    9b4c:	mov	r2, #8
    9b50:	add	r3, pc, r3
    9b54:	bl	4410 <qsort@plt>
    9b58:	ldr	lr, [r8, #80]	; 0x50
    9b5c:	ldr	ip, [r8, #84]	; 0x54
    9b60:	cmp	ip, #0
    9b64:	beq	9184 <readstat_parse_sas7bcat+0x414>
    9b68:	cmp	ip, #1
    9b6c:	bgt	926c <readstat_parse_sas7bcat+0x4fc>
    9b70:	mov	r3, #1
    9b74:	str	r3, [r8, #84]	; 0x54
    9b78:	b	92b0 <readstat_parse_sas7bcat+0x540>
    9b7c:	mov	r3, #3
    9b80:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9b84:	str	r3, [fp, #-400]	; 0xfffffe70
    9b88:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9b8c:	b	9184 <readstat_parse_sas7bcat+0x414>
    9b90:	mov	r0, #3
    9b94:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9b98:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9b9c:	b	9a94 <readstat_parse_sas7bcat+0xd24>
    9ba0:	mov	r3, #5
    9ba4:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9ba8:	ldr	r0, [fp, #-412]	; 0xfffffe64
    9bac:	str	r3, [fp, #-400]	; 0xfffffe70
    9bb0:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9bb4:	bl	3e94 <free@plt>
    9bb8:	b	9a74 <readstat_parse_sas7bcat+0xd04>
    9bbc:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9bc0:	mov	r3, r0
    9bc4:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9bc8:	mov	sp, r4
    9bcc:	b	9b1c <readstat_parse_sas7bcat+0xdac>
    9bd0:	mov	r3, #4
    9bd4:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9bd8:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9bdc:	b	9bc8 <readstat_parse_sas7bcat+0xe58>
    9be0:	mov	r4, r5
    9be4:	b	981c <readstat_parse_sas7bcat+0xaac>
    9be8:	mov	r3, r0
    9bec:	ldr	sl, [fp, #-452]	; 0xfffffe3c
    9bf0:	ldr	r7, [fp, #-448]	; 0xfffffe40
    9bf4:	b	9b1c <readstat_parse_sas7bcat+0xdac>

00009bf8 <sas7bcat_begin_data>:
    9bf8:	ldr	r3, [pc, #1584]	; a230 <sas7bcat_begin_data+0x638>
    9bfc:	mov	r1, #0
    9c00:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9c04:	strd	r6, [sp, #8]
    9c08:	strd	r8, [sp, #16]
    9c0c:	strd	sl, [sp, #24]
    9c10:	mov	sl, r0
    9c14:	add	r3, pc, r3
    9c18:	str	lr, [sp, #32]
    9c1c:	sub	sp, sp, #372	; 0x174
    9c20:	mov	r5, r3
    9c24:	str	r3, [sp, #188]	; 0xbc
    9c28:	bl	4320 <sas_header_info_init@plt>
    9c2c:	ldr	r4, [sl, #40]	; 0x28
    9c30:	mov	r6, r0
    9c34:	str	r0, [sp, #176]	; 0xb0
    9c38:	lsl	r0, r4, #3
    9c3c:	bl	40e0 <malloc@plt>
    9c40:	str	r0, [sp, #180]	; 0xb4
    9c44:	ldr	r0, [r6, #32]
    9c48:	bl	40e0 <malloc@plt>
    9c4c:	cmp	r4, #0
    9c50:	str	r0, [sp, #184]	; 0xb8
    9c54:	ble	a21c <sas7bcat_begin_data+0x624>
    9c58:	ldr	r3, [sp, #180]	; 0xb4
    9c5c:	movw	r9, #8224	; 0x2020
    9c60:	movt	r9, #8224	; 0x2020
    9c64:	add	r2, sp, #204	; 0xcc
    9c68:	str	r9, [sp, #160]	; 0xa0
    9c6c:	str	sl, [sp, #168]	; 0xa8
    9c70:	str	r2, [sp, #164]	; 0xa4
    9c74:	sub	r3, r3, #4
    9c78:	str	r3, [sp, #172]	; 0xac
    9c7c:	mov	r3, #0
    9c80:	mov	sl, r3
    9c84:	ldr	r3, [sp, #168]	; 0xa8
    9c88:	ldr	r3, [r3, #36]	; 0x24
    9c8c:	ldr	r6, [r3, sl, lsl #2]
    9c90:	add	r5, r6, #4
    9c94:	mov	r0, r5
    9c98:	bl	41d0 <strlen@plt>
    9c9c:	cmp	r0, #8
    9ca0:	mov	r4, r0
    9ca4:	movls	r8, #106	; 0x6a
    9ca8:	bls	9cb8 <sas7bcat_begin_data+0xc0>
    9cac:	cmp	r0, #32
    9cb0:	mov	r8, #138	; 0x8a
    9cb4:	movcs	r4, #32
    9cb8:	mov	r1, r5
    9cbc:	mov	r2, r4
    9cc0:	ldr	r0, [sp, #164]	; 0xa4
    9cc4:	bl	3ef4 <memcpy@plt>
    9cc8:	ldr	fp, [r6, #264]	; 0x108
    9ccc:	cmp	fp, #0
    9cd0:	ble	9d08 <sas7bcat_begin_data+0x110>
    9cd4:	ldr	r9, [sp, #160]	; 0xa0
    9cd8:	mov	r5, #0
    9cdc:	mov	r1, r5
    9ce0:	mov	r0, r6
    9ce4:	bl	44a0 <readstat_get_value_label@plt>
    9ce8:	ldr	r3, [r0, #28]
    9cec:	add	r5, r5, #1
    9cf0:	ldr	fp, [r6, #264]	; 0x108
    9cf4:	add	r3, r3, #41	; 0x29
    9cf8:	add	r8, r8, r3
    9cfc:	cmp	r5, fp
    9d00:	blt	9cdc <sas7bcat_begin_data+0xe4>
    9d04:	str	r9, [sp, #160]	; 0xa0
    9d08:	add	r1, r8, #8
    9d0c:	mov	r0, #1
    9d10:	bl	3d2c <calloc@plt>
    9d14:	cmp	r4, #8
    9d18:	mov	r7, r0
    9d1c:	str	r8, [r0]
    9d20:	str	fp, [r0, #42]	; 0x2a
    9d24:	str	fp, [r0, #46]	; 0x2e
    9d28:	bls	9fe4 <sas7bcat_begin_data+0x3ec>
    9d2c:	ldr	r5, [sp, #164]	; 0xa4
    9d30:	mvn	r1, #127	; 0x7f
    9d34:	strb	r1, [r7, #6]
    9d38:	ldrd	r2, [r5]
    9d3c:	mov	r8, r2
    9d40:	mov	r9, r3
    9d44:	mov	r2, #32
    9d48:	add	r3, r0, #110	; 0x6e
    9d4c:	mov	r1, r2
    9d50:	mov	r0, r3
    9d54:	strd	r8, [r7, #12]
    9d58:	bl	4278 <memset@plt>
    9d5c:	mov	r2, r4
    9d60:	mov	r1, r5
    9d64:	mov	r4, #142	; 0x8e
    9d68:	mov	r5, #138	; 0x8a
    9d6c:	bl	3ef4 <memcpy@plt>
    9d70:	ldr	r3, [r6, #264]	; 0x108
    9d74:	rsb	fp, fp, fp, lsl #4
    9d78:	add	r4, r7, r4
    9d7c:	add	fp, r5, fp, lsl #1
    9d80:	add	r5, fp, #4
    9d84:	cmp	r3, #0
    9d88:	add	r5, r7, r5
    9d8c:	ble	9e58 <sas7bcat_begin_data+0x260>
    9d90:	mov	r8, #0
    9d94:	ldr	r9, [sp, #160]	; 0xa0
    9d98:	b	9df8 <sas7bcat_begin_data+0x200>
    9d9c:	ldr	r2, [fp, #20]
    9da0:	str	r9, [r4, #14]
    9da4:	str	r9, [r4, #18]
    9da8:	str	r9, [r4, #22]
    9dac:	str	r9, [r4, #26]
    9db0:	cmp	r2, #16
    9db4:	ldr	r1, [fp, #16]
    9db8:	movcs	r2, #16
    9dbc:	bl	3ef4 <memcpy@plt>
    9dc0:	ldr	r3, [fp, #28]
    9dc4:	add	r0, r5, #10
    9dc8:	add	r8, r8, #1
    9dcc:	add	r4, r4, #30
    9dd0:	strh	r3, [r5, #8]
    9dd4:	sxth	r2, r3
    9dd8:	ldr	r1, [fp, #24]
    9ddc:	bl	3ef4 <memcpy@plt>
    9de0:	ldr	r3, [fp, #28]
    9de4:	ldr	r2, [r6, #264]	; 0x108
    9de8:	add	r3, r3, #11
    9dec:	add	r5, r5, r3
    9df0:	cmp	r8, r2
    9df4:	bge	9e54 <sas7bcat_begin_data+0x25c>
    9df8:	mov	r1, r8
    9dfc:	mov	r0, r6
    9e00:	bl	44a0 <readstat_get_value_label@plt>
    9e04:	mov	r3, #24
    9e08:	mov	fp, r0
    9e0c:	strb	r3, [r4, #2]
    9e10:	add	r3, r4, #14
    9e14:	str	r8, [r4, #10]
    9e18:	mov	r0, r3
    9e1c:	ldr	r2, [r6]
    9e20:	cmp	r2, #0
    9e24:	beq	9d9c <sas7bcat_begin_data+0x1a4>
    9e28:	vldr	d7, [fp]
    9e2c:	vneg.f64	d7, d7
    9e30:	vmov	r2, r3, d7
    9e34:	strd	r2, [sp, #192]	; 0xc0
    9e38:	bl	3e88 <machine_is_little_endian@plt>
    9e3c:	cmp	r0, #0
    9e40:	bne	9fd4 <sas7bcat_begin_data+0x3dc>
    9e44:	ldrd	r2, [sp, #192]	; 0xc0
    9e48:	str	r2, [r4, #22]
    9e4c:	str	r3, [r4, #26]
    9e50:	b	9dc0 <sas7bcat_begin_data+0x1c8>
    9e54:	str	r9, [sp, #160]	; 0xa0
    9e58:	ldr	r3, [sp, #168]	; 0xa8
    9e5c:	add	sl, sl, #1
    9e60:	ldr	r2, [sp, #172]	; 0xac
    9e64:	ldr	r3, [r3, #40]	; 0x28
    9e68:	str	r7, [r2, #4]!
    9e6c:	str	r2, [sp, #172]	; 0xac
    9e70:	cmp	r3, sl
    9e74:	bgt	9c84 <sas7bcat_begin_data+0x8c>
    9e78:	ldr	sl, [sp, #168]	; 0xa8
    9e7c:	mov	r4, #4
    9e80:	mov	r5, #0
    9e84:	ldr	r6, [sp, #176]	; 0xb0
    9e88:	mov	r1, #0
    9e8c:	mov	r2, #124	; 0x7c
    9e90:	add	r0, sp, #236	; 0xec
    9e94:	strd	r4, [r6, #56]	; 0x38
    9e98:	bl	4278 <memset@plt>
    9e9c:	ldr	r3, [r6, #4]
    9ea0:	mov	r2, #34	; 0x22
    9ea4:	strb	r2, [sp, #239]	; 0xef
    9ea8:	cmp	r3, #0
    9eac:	moveq	r3, r2
    9eb0:	movne	r3, #51	; 0x33
    9eb4:	strb	r3, [sp, #236]	; 0xec
    9eb8:	bl	3e88 <machine_is_little_endian@plt>
    9ebc:	ldr	r2, [pc, #880]	; a234 <sas7bcat_begin_data+0x63c>
    9ec0:	adds	r0, r0, #0
    9ec4:	mov	r1, #49	; 0x31
    9ec8:	movne	r0, #1
    9ecc:	mov	ip, #20
    9ed0:	ldr	r3, [pc, #864]	; a238 <sas7bcat_begin_data+0x640>
    9ed4:	strb	r0, [sp, #241]	; 0xf1
    9ed8:	strb	r1, [sp, #243]	; 0xf3
    9edc:	add	r2, pc, r2
    9ee0:	strb	ip, [sp, #274]	; 0x112
    9ee4:	add	ip, sp, #288	; 0x120
    9ee8:	ldrd	r0, [r2]
    9eec:	ldrd	r4, [r2, #12]
    9ef0:	mov	r2, #156	; 0x9c
    9ef4:	strd	r0, [ip]
    9ef8:	add	r0, sp, #360	; 0x168
    9efc:	add	r1, sp, #212	; 0xd4
    9f00:	ldr	ip, [sp, #188]	; 0xbc
    9f04:	strd	r4, [r0]
    9f08:	mov	r0, sp
    9f0c:	ldr	r5, [sp, #164]	; 0xa4
    9f10:	ldr	r3, [ip, r3]
    9f14:	ldr	ip, [r3]
    9f18:	ldr	r4, [r3, #4]
    9f1c:	ldr	lr, [r3, #8]
    9f20:	str	ip, [sp, #204]	; 0xcc
    9f24:	ldr	ip, [r3, #12]
    9f28:	stmib	r5, {r4, lr}
    9f2c:	ldr	r4, [r3, #16]
    9f30:	str	ip, [r5, #12]
    9f34:	ldr	lr, [r3, #20]
    9f38:	ldr	ip, [r3, #24]
    9f3c:	str	r4, [r5, #16]
    9f40:	ldr	r3, [r3, #28]
    9f44:	str	lr, [r5, #20]
    9f48:	str	ip, [r5, #24]
    9f4c:	str	r3, [r5, #28]
    9f50:	bl	3ef4 <memcpy@plt>
    9f54:	mov	r1, r6
    9f58:	mov	r0, sl
    9f5c:	ldm	r5, {r2, r3}
    9f60:	bl	408c <sas_write_header@plt>
    9f64:	subs	r4, r0, #0
    9f68:	beq	a00c <sas7bcat_begin_data+0x414>
    9f6c:	ldr	r3, [sl, #40]	; 0x28
    9f70:	cmp	r3, #0
    9f74:	ble	9f9c <sas7bcat_begin_data+0x3a4>
    9f78:	ldr	r3, [sp, #180]	; 0xb4
    9f7c:	mov	r5, #0
    9f80:	sub	r6, r3, #4
    9f84:	ldr	r0, [r6, #4]!
    9f88:	add	r5, r5, #1
    9f8c:	bl	3e94 <free@plt>
    9f90:	ldr	r3, [sl, #40]	; 0x28
    9f94:	cmp	r3, r5
    9f98:	bgt	9f84 <sas7bcat_begin_data+0x38c>
    9f9c:	ldr	r0, [sp, #180]	; 0xb4
    9fa0:	bl	3e94 <free@plt>
    9fa4:	ldr	r0, [sp, #176]	; 0xb0
    9fa8:	bl	3e94 <free@plt>
    9fac:	ldr	r0, [sp, #184]	; 0xb8
    9fb0:	bl	3e94 <free@plt>
    9fb4:	mov	r0, r4
    9fb8:	add	sp, sp, #372	; 0x174
    9fbc:	ldrd	r4, [sp]
    9fc0:	ldrd	r6, [sp, #8]
    9fc4:	ldrd	r8, [sp, #16]
    9fc8:	ldrd	sl, [sp, #24]
    9fcc:	add	sp, sp, #32
    9fd0:	pop	{pc}		; (ldr pc, [sp], #4)
    9fd4:	ldrd	r0, [sp, #192]	; 0xc0
    9fd8:	bl	3d50 <byteswap8@plt>
    9fdc:	strd	r0, [sp, #192]	; 0xc0
    9fe0:	b	9e44 <sas7bcat_begin_data+0x24c>
    9fe4:	mov	r2, r4
    9fe8:	add	r5, pc, #568	; 0x238
    9fec:	ldrd	r4, [r5]
    9ff0:	add	r0, r0, #12
    9ff4:	ldr	r1, [sp, #164]	; 0xa4
    9ff8:	strd	r4, [r7, #12]
    9ffc:	mov	r4, #110	; 0x6e
    a000:	mov	r5, #106	; 0x6a
    a004:	bl	3ef4 <memcpy@plt>
    a008:	b	9d70 <sas7bcat_begin_data+0x178>
    a00c:	ldr	r5, [sp, #176]	; 0xb0
    a010:	mov	r0, sl
    a014:	ldr	r1, [r5, #32]
    a018:	bl	3ff0 <readstat_write_zeros@plt>
    a01c:	subs	r4, r0, #0
    a020:	bne	9f6c <sas7bcat_begin_data+0x374>
    a024:	ldr	r6, [sp, #184]	; 0xb8
    a028:	mov	r1, r4
    a02c:	ldr	r2, [r5, #32]
    a030:	mov	r0, r6
    a034:	bl	4278 <memset@plt>
    a038:	ldr	r2, [sl, #40]	; 0x28
    a03c:	add	r3, r6, #856	; 0x358
    a040:	cmp	r2, #0
    a044:	ble	a0d8 <sas7bcat_begin_data+0x4e0>
    a048:	ldr	lr, [sp, #176]	; 0xb0
    a04c:	ldr	r8, [sp, #184]	; 0xb8
    a050:	ldr	r2, [lr, #32]
    a054:	add	r1, r8, #1056	; 0x420
    a058:	add	r1, r1, #12
    a05c:	add	r0, r8, r2
    a060:	cmp	r0, r1
    a064:	bcc	a0e0 <sas7bcat_begin_data+0x4e8>
    a068:	ldr	r2, [sp, #180]	; 0xb4
    a06c:	movw	r5, #19544	; 0x4c58
    a070:	movt	r5, #21075	; 0x5253
    a074:	mov	r1, #16
    a078:	mov	r7, #4
    a07c:	mov	r6, #79	; 0x4f
    a080:	sub	r0, r2, #4
    a084:	b	a098 <sas7bcat_begin_data+0x4a0>
    a088:	ldr	r2, [lr, #32]
    a08c:	add	r9, r8, r2
    a090:	cmp	r9, ip
    a094:	bcc	a0e0 <sas7bcat_begin_data+0x4e8>
    a098:	uxth	r2, r1
    a09c:	add	r1, r3, #212	; 0xd4
    a0a0:	str	r5, [r3]
    a0a4:	add	ip, r3, #424	; 0x1a8
    a0a8:	strh	r7, [r3, #4]
    a0ac:	add	r4, r4, #1
    a0b0:	strh	r2, [r3, #8]
    a0b4:	strb	r6, [r3, #50]	; 0x32
    a0b8:	mov	r3, r1
    a0bc:	ldr	r1, [r0, #4]!
    a0c0:	ldr	r9, [sl, #40]	; 0x28
    a0c4:	ldr	r1, [r1]
    a0c8:	cmp	r9, r4
    a0cc:	add	r2, r2, r1
    a0d0:	sxth	r1, r2
    a0d4:	bgt	a088 <sas7bcat_begin_data+0x490>
    a0d8:	ldr	r3, [sp, #176]	; 0xb0
    a0dc:	ldr	r2, [r3, #32]
    a0e0:	mov	r0, sl
    a0e4:	ldr	r5, [sp, #184]	; 0xb8
    a0e8:	mov	r1, r5
    a0ec:	bl	4428 <readstat_write_bytes@plt>
    a0f0:	subs	r4, r0, #0
    a0f4:	bne	9f6c <sas7bcat_begin_data+0x374>
    a0f8:	ldr	r6, [sp, #176]	; 0xb0
    a0fc:	mov	r0, sl
    a100:	ldr	r1, [r6, #32]
    a104:	bl	3ff0 <readstat_write_zeros@plt>
    a108:	subs	r4, r0, #0
    a10c:	bne	9f6c <sas7bcat_begin_data+0x374>
    a110:	mov	r1, r4
    a114:	mov	r0, r5
    a118:	ldr	r2, [r6, #32]
    a11c:	bl	4278 <memset@plt>
    a120:	ldr	r3, [sl, #40]	; 0x28
    a124:	cmp	r3, #0
    a128:	ble	a1fc <sas7bcat_begin_data+0x604>
    a12c:	ldr	r3, [sp, #176]	; 0xb0
    a130:	ldr	r6, [sp, #180]	; 0xb4
    a134:	ldrd	r8, [r3, #32]
    a138:	mov	r3, #0
    a13c:	ldr	r5, [r6]
    a140:	ldr	ip, [r5]
    a144:	add	r2, ip, #32
    a148:	cmp	r8, r2
    a14c:	sbcs	r3, r9, r3
    a150:	blt	a204 <sas7bcat_begin_data+0x60c>
    a154:	mov	r3, #16
    a158:	ldr	r7, [sp, #164]	; 0xa4
    a15c:	mov	r2, r3
    a160:	ldr	fp, [sp, #184]	; 0xb8
    a164:	b	a190 <sas7bcat_begin_data+0x598>
    a168:	ldr	r5, [r6, #4]!
    a16c:	ldr	r1, [sp, #176]	; 0xb0
    a170:	ldr	ip, [r5]
    a174:	ldrd	r8, [r1, #32]
    a178:	mov	r1, #0
    a17c:	add	r0, ip, #16
    a180:	add	r0, r0, r3
    a184:	cmp	r8, r0
    a188:	sbcs	r1, r9, r1
    a18c:	blt	a204 <sas7bcat_begin_data+0x60c>
    a190:	mov	r0, #0
    a194:	mov	r1, #0
    a198:	add	r3, r3, #16
    a19c:	add	lr, fp, r2
    a1a0:	uxth	r8, r3
    a1a4:	strd	r0, [r7]
    a1a8:	add	r4, r4, #1
    a1ac:	strd	r0, [r7, #8]
    a1b0:	mov	r1, r5
    a1b4:	strh	ip, [sp, #210]	; 0xd2
    a1b8:	ldr	r3, [r7]
    a1bc:	ldmib	r7, {r0, ip}
    a1c0:	str	r3, [fp, r2]
    a1c4:	ldr	r3, [r7, #12]
    a1c8:	str	r0, [lr, #4]
    a1cc:	sxtah	r0, fp, r8
    a1d0:	str	ip, [lr, #8]
    a1d4:	str	r3, [lr, #12]
    a1d8:	ldr	r2, [r1], #4
    a1dc:	bl	3ef4 <memcpy@plt>
    a1e0:	ldr	r3, [r5]
    a1e4:	ldr	r2, [sl, #40]	; 0x28
    a1e8:	add	r3, r8, r3
    a1ec:	sxth	r3, r3
    a1f0:	cmp	r2, r4
    a1f4:	mov	r2, r3
    a1f8:	bgt	a168 <sas7bcat_begin_data+0x570>
    a1fc:	ldr	r3, [sp, #176]	; 0xb0
    a200:	ldrd	r8, [r3, #32]
    a204:	mov	r2, r8
    a208:	mov	r0, sl
    a20c:	ldr	r1, [sp, #184]	; 0xb8
    a210:	bl	4428 <readstat_write_bytes@plt>
    a214:	mov	r4, r0
    a218:	b	9f6c <sas7bcat_begin_data+0x374>
    a21c:	add	r3, sp, #204	; 0xcc
    a220:	str	r3, [sp, #164]	; 0xa4
    a224:	b	9e7c <sas7bcat_begin_data+0x284>
    a228:	.word	0x20202020
    a22c:	.word	0x20202020
    a230:	.word	0x0003b3e4
    a234:	.word	0x0001be98
    a238:	.word	0x000002c4

0000a23c <readstat_begin_writing_sas7bcat>:
    a23c:	ldr	r2, [r0, #8]
    a240:	ldr	ip, [pc, #24]	; a260 <readstat_begin_writing_sas7bcat+0x24>
    a244:	cmp	r2, #0
    a248:	moveq	r2, #9
    a24c:	add	ip, pc, ip
    a250:	streq	r2, [r0, #8]
    a254:	mov	r2, #0
    a258:	str	ip, [r0, #276]	; 0x114
    a25c:	b	3f3c <readstat_begin_writing_file@plt>
    a260:	.word	0xfffff9a4
    a264:	.word	0x00000000

0000a268 <sas7bdat_validate_subheader_pointer>:
    a268:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a26c:	ldrd	r4, [r0]
    a270:	strd	r6, [sp, #8]
    a274:	strd	sl, [sp, #24]
    a278:	mov	fp, #0
    a27c:	mov	sl, r1
    a280:	strd	r8, [sp, #16]
    a284:	str	lr, [sp, #32]
    a288:	sub	sp, sp, #36	; 0x24
    a28c:	cmp	r5, fp
    a290:	cmpeq	r4, r1
    a294:	bhi	a354 <sas7bdat_validate_subheader_pointer+0xec>
    a298:	ldrd	r6, [r0, #8]
    a29c:	cmp	fp, r7
    a2a0:	cmpeq	r1, r6
    a2a4:	bcc	a354 <sas7bdat_validate_subheader_pointer+0xec>
    a2a8:	adds	r8, r4, r6
    a2ac:	adc	r9, r5, r7
    a2b0:	cmp	fp, r9
    a2b4:	cmpeq	r1, r8
    a2b8:	bcc	a354 <sas7bdat_validate_subheader_pointer+0xec>
    a2bc:	mov	r1, r3
    a2c0:	ldr	lr, [r3, #128]	; 0x80
    a2c4:	uxth	r8, r2
    a2c8:	mov	r9, #0
    a2cc:	ldr	r3, [r3, #144]	; 0x90
    a2d0:	strd	r8, [sp, #8]
    a2d4:	ldr	ip, [r1, #148]	; 0x94
    a2d8:	str	r3, [sp, #20]
    a2dc:	ldr	r2, [sp, #20]
    a2e0:	ldr	r3, [r1, #132]	; 0x84
    a2e4:	umull	r8, r9, r2, r8
    a2e8:	ldr	r2, [sp, #8]
    a2ec:	mla	r9, ip, r2, r9
    a2f0:	adds	r2, r8, lr
    a2f4:	adc	r3, r9, r3
    a2f8:	strd	r2, [sp]
    a2fc:	ldrd	r2, [sp]
    a300:	cmp	r5, r3
    a304:	cmpeq	r4, r2
    a308:	bcc	a354 <sas7bdat_validate_subheader_pointer+0xec>
    a30c:	ldrb	r3, [r0, #16]
    a310:	cmp	r3, #0
    a314:	movne	r0, #0
    a318:	bne	a358 <sas7bdat_validate_subheader_pointer+0xf0>
    a31c:	ldrd	r2, [r1, #136]	; 0x88
    a320:	cmp	r7, r3
    a324:	cmpeq	r6, r2
    a328:	bcc	a354 <sas7bdat_validate_subheader_pointer+0xec>
    a32c:	adds	r1, r4, r2
    a330:	adc	r3, r5, r3
    a334:	str	r1, [sp, #24]
    a338:	str	r3, [sp, #28]
    a33c:	ldrd	r2, [sp, #24]
    a340:	cmp	fp, r3
    a344:	cmpeq	sl, r2
    a348:	movcs	r0, #0
    a34c:	movcc	r0, #5
    a350:	b	a358 <sas7bdat_validate_subheader_pointer+0xf0>
    a354:	mov	r0, #5
    a358:	add	sp, sp, #36	; 0x24
    a35c:	ldrd	r4, [sp]
    a360:	ldrd	r6, [sp, #8]
    a364:	ldrd	r8, [sp, #16]
    a368:	ldrd	sl, [sp, #24]
    a36c:	add	sp, sp, #32
    a370:	pop	{pc}		; (ldr pc, [sp], #4)

0000a374 <sas7bdat_copy_text_ref>:
    a374:	strd	r4, [sp, #-12]!
    a378:	str	lr, [sp, #8]
    a37c:	sub	sp, sp, #12
    a380:	ldr	ip, [sp, #24]
    a384:	add	lr, sp, #8
    a388:	stmdb	lr, {r2, r3}
    a38c:	ldrh	lr, [sp]
    a390:	ldr	r3, [ip, #152]	; 0x98
    a394:	cmp	lr, r3
    a398:	bge	a3f4 <sas7bdat_copy_text_ref+0x80>
    a39c:	ldrh	r3, [sp, #4]
    a3a0:	cmp	r3, #0
    a3a4:	moveq	r4, r0
    a3a8:	moveq	r0, r3
    a3ac:	strbeq	r3, [r4]
    a3b0:	beq	a3f8 <sas7bdat_copy_text_ref+0x84>
    a3b4:	ldr	r4, [ip, #156]	; 0x9c
    a3b8:	ldrh	r2, [sp, #2]
    a3bc:	ldr	r4, [r4, lr, lsl #2]
    a3c0:	add	r5, r2, r3
    a3c4:	cmp	r5, r4
    a3c8:	bhi	a3f4 <sas7bdat_copy_text_ref+0x80>
    a3cc:	ldr	r5, [ip, #160]	; 0xa0
    a3d0:	ldr	r4, [ip, #208]	; 0xd0
    a3d4:	ldr	ip, [r5, lr, lsl #2]
    a3d8:	str	r4, [sp, #24]
    a3dc:	add	r2, ip, r2
    a3e0:	add	sp, sp, #12
    a3e4:	ldrd	r4, [sp]
    a3e8:	ldr	lr, [sp, #8]
    a3ec:	add	sp, sp, #12
    a3f0:	b	420c <readstat_convert@plt>
    a3f4:	mov	r0, #5
    a3f8:	add	sp, sp, #12
    a3fc:	ldrd	r4, [sp]
    a400:	add	sp, sp, #8
    a404:	pop	{pc}		; (ldr pc, [sp], #4)

0000a408 <sas7bdat_parse_column_text_subheader>:
    a408:	strd	r4, [sp, #-24]!	; 0xffffffe8
    a40c:	mov	r5, r1
    a410:	mov	r4, r2
    a414:	ldr	r1, [r2, #60]	; 0x3c
    a418:	strd	r6, [sp, #8]
    a41c:	str	r8, [sp, #16]
    a420:	ldr	r8, [r2, #136]	; 0x88
    a424:	str	lr, [sp, #20]
    a428:	add	r7, r0, r8
    a42c:	mov	r0, r7
    a430:	bl	43a4 <sas_read2@plt>
    a434:	mov	r6, r0
    a438:	mov	r1, r8
    a43c:	mov	r0, r5
    a440:	bl	438c <sas_subheader_remainder@plt>
    a444:	cmp	r6, r0
    a448:	movne	r0, #5
    a44c:	beq	a464 <sas7bdat_parse_column_text_subheader+0x5c>
    a450:	ldrd	r4, [sp]
    a454:	ldrd	r6, [sp, #8]
    a458:	ldr	r8, [sp, #16]
    a45c:	add	sp, sp, #20
    a460:	pop	{pc}		; (ldr pc, [sp], #4)
    a464:	ldr	r3, [r4, #152]	; 0x98
    a468:	ldr	r0, [r4, #160]	; 0xa0
    a46c:	add	r3, r3, #1
    a470:	lsl	r1, r3, #2
    a474:	str	r3, [r4, #152]	; 0x98
    a478:	bl	42b4 <readstat_realloc@plt>
    a47c:	ldr	r1, [r4, #152]	; 0x98
    a480:	str	r0, [r4, #160]	; 0xa0
    a484:	ldr	r0, [r4, #156]	; 0x9c
    a488:	lsl	r1, r1, #2
    a48c:	bl	42b4 <readstat_realloc@plt>
    a490:	ldr	r6, [r4, #160]	; 0xa0
    a494:	clz	r3, r0
    a498:	lsr	r3, r3, #5
    a49c:	str	r0, [r4, #156]	; 0x9c
    a4a0:	cmp	r6, #0
    a4a4:	movne	r6, r3
    a4a8:	moveq	r6, #1
    a4ac:	cmp	r6, #0
    a4b0:	bne	a530 <sas7bdat_parse_column_text_subheader+0x128>
    a4b4:	sub	r5, r5, r8
    a4b8:	mov	r0, r5
    a4bc:	bl	4200 <readstat_malloc@plt>
    a4c0:	subs	r8, r0, #0
    a4c4:	beq	a530 <sas7bdat_parse_column_text_subheader+0x128>
    a4c8:	mov	r1, r7
    a4cc:	mov	r2, r5
    a4d0:	bl	3ef4 <memcpy@plt>
    a4d4:	ldr	r3, [r4, #152]	; 0x98
    a4d8:	cmp	r5, #20
    a4dc:	ldr	r1, [r4, #156]	; 0x9c
    a4e0:	ldr	r2, [r4, #160]	; 0xa0
    a4e4:	sub	r3, r3, #-1073741823	; 0xc0000001
    a4e8:	str	r5, [r1, r3, lsl #2]
    a4ec:	ldr	r3, [r4, #152]	; 0x98
    a4f0:	sub	r3, r3, #-1073741823	; 0xc0000001
    a4f4:	str	r8, [r2, r3, lsl #2]
    a4f8:	bls	a528 <sas7bdat_parse_column_text_subheader+0x120>
    a4fc:	ldr	r1, [pc, #52]	; a538 <sas7bdat_parse_column_text_subheader+0x130>
    a500:	add	r0, r8, #12
    a504:	mov	r2, #8
    a508:	add	r1, pc, r1
    a50c:	bl	44d0 <strncmp@plt>
    a510:	cmp	r0, #0
    a514:	bne	a528 <sas7bdat_parse_column_text_subheader+0x120>
    a518:	ldrb	r3, [r4, #2529]	; 0x9e1
    a51c:	orr	r3, r3, #1
    a520:	strb	r3, [r4, #2529]	; 0x9e1
    a524:	b	a450 <sas7bdat_parse_column_text_subheader+0x48>
    a528:	mov	r0, r6
    a52c:	b	a450 <sas7bdat_parse_column_text_subheader+0x48>
    a530:	mov	r0, #3
    a534:	b	a450 <sas7bdat_parse_column_text_subheader+0x48>
    a538:	.word	0x0001b884

0000a53c <sas7bdat_parse_text_ref.isra.1>:
    a53c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    a540:	mov	r4, r0
    a544:	mov	r0, r1
    a548:	strd	r6, [sp, #8]
    a54c:	mov	r6, r1
    a550:	mov	r5, r2
    a554:	ldr	r1, [r2]
    a558:	str	r8, [sp, #16]
    a55c:	str	lr, [sp, #20]
    a560:	bl	43a4 <sas_read2@plt>
    a564:	mov	r8, r0
    a568:	add	r0, r6, #2
    a56c:	ldr	r1, [r5]
    a570:	bl	43a4 <sas_read2@plt>
    a574:	mov	r7, r0
    a578:	add	r0, r6, #4
    a57c:	ldr	r1, [r5]
    a580:	bl	43a4 <sas_read2@plt>
    a584:	strh	r8, [r4]
    a588:	strh	r7, [r4, #2]
    a58c:	strh	r0, [r4, #4]
    a590:	mov	r0, r4
    a594:	ldrd	r4, [sp]
    a598:	ldrd	r6, [sp, #8]
    a59c:	ldr	r8, [sp, #16]
    a5a0:	add	sp, sp, #20
    a5a4:	pop	{pc}		; (ldr pc, [sp], #4)

0000a5a8 <sas7bdat_parse_subheader_pointer.isra.2>:
    a5a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    a5ac:	mov	r4, r2
    a5b0:	mov	r5, r0
    a5b4:	strd	r6, [sp, #8]
    a5b8:	subs	r7, r3, #0
    a5bc:	str	r8, [sp, #16]
    a5c0:	str	lr, [sp, #20]
    a5c4:	ldr	r6, [sp, #24]
    a5c8:	beq	a620 <sas7bdat_parse_subheader_pointer.isra.2+0x78>
    a5cc:	cmp	r1, #17
    a5d0:	bls	a618 <sas7bdat_parse_subheader_pointer.isra.2+0x70>
    a5d4:	ldr	r1, [r6]
    a5d8:	bl	4398 <sas_read8@plt>
    a5dc:	strd	r0, [r4]
    a5e0:	add	r0, r5, #8
    a5e4:	ldr	r1, [r6]
    a5e8:	bl	4398 <sas_read8@plt>
    a5ec:	strd	r0, [r4, #8]
    a5f0:	mov	r0, #0
    a5f4:	ldrb	r3, [r5, #16]
    a5f8:	strb	r3, [r4, #16]
    a5fc:	ldrb	r3, [r5, #17]
    a600:	strb	r3, [r4, #17]
    a604:	ldrd	r4, [sp]
    a608:	ldrd	r6, [sp, #8]
    a60c:	ldr	r8, [sp, #16]
    a610:	add	sp, sp, #20
    a614:	pop	{pc}		; (ldr pc, [sp], #4)
    a618:	mov	r0, #5
    a61c:	b	a604 <sas7bdat_parse_subheader_pointer.isra.2+0x5c>
    a620:	cmp	r1, #9
    a624:	bls	a618 <sas7bdat_parse_subheader_pointer.isra.2+0x70>
    a628:	ldr	r1, [r6]
    a62c:	bl	43c8 <sas_read4@plt>
    a630:	ldr	r1, [r6]
    a634:	stm	r4, {r0, r7}
    a638:	add	r0, r5, #4
    a63c:	bl	43c8 <sas_read4@plt>
    a640:	str	r0, [r4, #8]
    a644:	mov	r0, r7
    a648:	str	r7, [r4, #12]
    a64c:	ldrb	r3, [r5, #8]
    a650:	strb	r3, [r4, #16]
    a654:	ldrb	r3, [r5, #9]
    a658:	strb	r3, [r4, #17]
    a65c:	b	a604 <sas7bdat_parse_subheader_pointer.isra.2+0x5c>

0000a660 <sas7bdat_realloc_col_info.isra.4>:
    a660:	strd	r4, [sp, #-16]!
    a664:	ldr	r5, [r0]
    a668:	str	r6, [sp, #8]
    a66c:	str	lr, [sp, #12]
    a670:	cmp	r5, r2
    a674:	movcs	r0, #0
    a678:	bcc	a68c <sas7bdat_realloc_col_info.isra.4+0x2c>
    a67c:	ldrd	r4, [sp]
    a680:	ldr	r6, [sp, #8]
    a684:	add	sp, sp, #12
    a688:	pop	{pc}		; (ldr pc, [sp], #4)
    a68c:	mov	r6, r1
    a690:	add	r1, r2, r2, lsl #2
    a694:	str	r2, [r0]
    a698:	ldr	r0, [r6]
    a69c:	mov	r4, r2
    a6a0:	lsl	r1, r1, #3
    a6a4:	bl	42b4 <readstat_realloc@plt>
    a6a8:	cmp	r0, #0
    a6ac:	str	r0, [r6]
    a6b0:	moveq	r0, #3
    a6b4:	beq	a67c <sas7bdat_realloc_col_info.isra.4+0x1c>
    a6b8:	sub	r2, r4, r5
    a6bc:	add	r5, r5, r5, lsl #2
    a6c0:	mov	r1, #0
    a6c4:	add	r2, r2, r2, lsl #2
    a6c8:	add	r0, r0, r5, lsl #3
    a6cc:	lsl	r2, r2, #3
    a6d0:	bl	4278 <memset@plt>
    a6d4:	ldrd	r4, [sp]
    a6d8:	mov	r0, #0
    a6dc:	ldr	r6, [sp, #8]
    a6e0:	add	sp, sp, #12
    a6e4:	pop	{pc}		; (ldr pc, [sp], #4)

0000a6e8 <sas7bdat_parse_single_row.part.6>:
    a6e8:	ldr	r3, [r1, #16]
    a6ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a6f0:	mov	r4, r1
    a6f4:	strd	r6, [sp, #8]
    a6f8:	strd	r8, [sp, #16]
    a6fc:	strd	sl, [sp, #24]
    a700:	cmp	r3, #0
    a704:	str	lr, [sp, #32]
    a708:	vpush	{d8-d9}
    a70c:	sub	sp, sp, #60	; 0x3c
    a710:	beq	a850 <sas7bdat_parse_single_row.part.6+0x168>
    a714:	ldr	r3, [r1, #176]	; 0xb0
    a718:	mov	fp, r0
    a71c:	ldr	r0, [r1, #180]	; 0xb4
    a720:	lsl	r3, r3, #2
    a724:	add	r3, r3, #1
    a728:	mov	r1, r3
    a72c:	str	r3, [r4, #184]	; 0xb8
    a730:	bl	42b4 <readstat_realloc@plt>
    a734:	cmp	r0, #0
    a738:	str	r0, [r4, #180]	; 0xb4
    a73c:	beq	a9c8 <sas7bdat_parse_single_row.part.6+0x2e0>
    a740:	ldr	r2, [r4, #80]	; 0x50
    a744:	cmp	r2, #0
    a748:	beq	a850 <sas7bdat_parse_single_row.part.6+0x168>
    a74c:	mov	sl, #0
    a750:	vldr	d8, [pc, #672]	; a9f8 <sas7bdat_parse_single_row.part.6+0x310>
    a754:	mov	r9, sl
    a758:	vldr	d9, [pc, #672]	; aa00 <sas7bdat_parse_single_row.part.6+0x318>
    a75c:	b	a7a8 <sas7bdat_parse_single_row.part.6+0xc0>
    a760:	cmp	r3, #5
    a764:	beq	a894 <sas7bdat_parse_single_row.part.6+0x1ac>
    a768:	ldm	r7, {r2, r3}
    a76c:	mov	r1, r5
    a770:	ldrd	r6, [sp, #48]	; 0x30
    a774:	ldr	r0, [r4, #52]	; 0x34
    a778:	strd	r6, [sp]
    a77c:	ldr	r5, [r4, #16]
    a780:	str	r0, [sp, #8]
    a784:	ldr	r0, [r4, #76]	; 0x4c
    a788:	blx	r5
    a78c:	cmp	r0, #0
    a790:	bne	a888 <sas7bdat_parse_single_row.part.6+0x1a0>
    a794:	ldr	r2, [r4, #80]	; 0x50
    a798:	add	r9, r9, #1
    a79c:	add	sl, sl, #40	; 0x28
    a7a0:	cmp	r2, r9
    a7a4:	bls	a850 <sas7bdat_parse_single_row.part.6+0x168>
    a7a8:	ldr	r3, [r4, #196]	; 0xc4
    a7ac:	ldr	r5, [r3, r9, lsl #2]
    a7b0:	ldr	lr, [r5, #2144]	; 0x860
    a7b4:	cmp	lr, #0
    a7b8:	bne	a798 <sas7bdat_parse_single_row.part.6+0xb0>
    a7bc:	ldr	r0, [r4, #68]	; 0x44
    a7c0:	mov	r1, #0
    a7c4:	ldr	r8, [r4, #192]	; 0xc0
    a7c8:	add	r8, r8, sl
    a7cc:	ldrd	r2, [r8, #24]
    a7d0:	cmp	r3, r1
    a7d4:	cmpeq	r2, r0
    a7d8:	bhi	a9bc <sas7bdat_parse_single_row.part.6+0x2d4>
    a7dc:	ldr	ip, [r8, #32]
    a7e0:	strd	r2, [sp, #16]
    a7e4:	adds	r6, r2, ip
    a7e8:	adc	r7, r3, #0
    a7ec:	cmp	r1, r7
    a7f0:	cmpeq	r0, r6
    a7f4:	bcc	a9bc <sas7bdat_parse_single_row.part.6+0x2d4>
    a7f8:	ldr	r3, [r8, #36]	; 0x24
    a7fc:	mov	r0, #0
    a800:	mov	r1, #0
    a804:	add	r7, sp, #40	; 0x28
    a808:	ldr	r2, [sp, #16]
    a80c:	strd	r0, [sp, #40]	; 0x28
    a810:	strd	r0, [r7, #8]
    a814:	cmp	r3, #0
    a818:	str	r3, [sp, #48]	; 0x30
    a81c:	add	r6, fp, r2
    a820:	bne	a760 <sas7bdat_parse_single_row.part.6+0x78>
    a824:	mov	r3, ip
    a828:	mov	r2, r6
    a82c:	ldrd	r0, [r4, #180]	; 0xb4
    a830:	ldr	lr, [r4, #208]	; 0xd0
    a834:	str	lr, [sp]
    a838:	bl	420c <readstat_convert@plt>
    a83c:	cmp	r0, #0
    a840:	bne	a95c <sas7bdat_parse_single_row.part.6+0x274>
    a844:	ldr	r3, [r4, #180]	; 0xb4
    a848:	str	r3, [sp, #40]	; 0x28
    a84c:	b	a768 <sas7bdat_parse_single_row.part.6+0x80>
    a850:	ldr	r3, [r4, #76]	; 0x4c
    a854:	mov	r2, #0
    a858:	mov	r7, r2
    a85c:	add	r3, r3, #1
    a860:	str	r3, [r4, #76]	; 0x4c
    a864:	mov	r0, r7
    a868:	add	sp, sp, #60	; 0x3c
    a86c:	vpop	{d8-d9}
    a870:	ldrd	r4, [sp]
    a874:	ldrd	r6, [sp, #8]
    a878:	ldrd	r8, [sp, #16]
    a87c:	ldrd	sl, [sp, #24]
    a880:	add	sp, sp, #32
    a884:	pop	{pc}		; (ldr pc, [sp], #4)
    a888:	mov	r3, #4
    a88c:	mov	r7, r3
    a890:	b	a864 <sas7bdat_parse_single_row.part.6+0x17c>
    a894:	ldr	r3, [r4, #40]	; 0x28
    a898:	vstr	d8, [sp, #32]
    a89c:	cmp	r3, #0
    a8a0:	bne	a928 <sas7bdat_parse_single_row.part.6+0x240>
    a8a4:	cmp	ip, #0
    a8a8:	beq	a9d4 <sas7bdat_parse_single_row.part.6+0x2ec>
    a8ac:	sub	r8, ip, #1
    a8b0:	mov	lr, r3
    a8b4:	add	r8, r6, r8
    a8b8:	sub	r2, r6, #1
    a8bc:	ldrb	r0, [r2, #1]!
    a8c0:	lsl	r3, r3, #8
    a8c4:	orr	r3, r3, lr, lsr #24
    a8c8:	cmp	r8, r2
    a8cc:	orr	lr, r0, lr, lsl #8
    a8d0:	bne	a8bc <sas7bdat_parse_single_row.part.6+0x1d4>
    a8d4:	lsl	ip, ip, #3
    a8d8:	rsb	ip, ip, #0
    a8dc:	add	r2, ip, #64	; 0x40
    a8e0:	add	ip, ip, #32
    a8e4:	lsl	r3, r3, r2
    a8e8:	str	r3, [sp, #28]
    a8ec:	rsb	r3, r2, #32
    a8f0:	ldr	r1, [sp, #28]
    a8f4:	orr	r1, r1, lr, lsl ip
    a8f8:	orr	r3, r1, lr, lsr r3
    a8fc:	str	r3, [sp, #28]
    a900:	lsl	r3, lr, r2
    a904:	str	r3, [sp, #24]
    a908:	ldrd	r2, [sp, #24]
    a90c:	vmov	d7, r2, r3
    a910:	strd	r2, [sp, #32]
    a914:	vcmp.f64	d7, d7
    a918:	vmrs	APSR_nzcv, fpscr
    a91c:	bvs	a9dc <sas7bdat_parse_single_row.part.6+0x2f4>
    a920:	vstr	d7, [sp, #40]	; 0x28
    a924:	b	a768 <sas7bdat_parse_single_row.part.6+0x80>
    a928:	cmp	ip, #0
    a92c:	beq	a9d4 <sas7bdat_parse_single_row.part.6+0x2ec>
    a930:	add	r1, r6, ip
    a934:	mov	r3, lr
    a938:	mov	r2, r9
    a93c:	ldrb	r8, [r1, #-1]!
    a940:	lsl	r3, r3, #8
    a944:	orr	r3, r3, lr, lsr #24
    a948:	cmp	r6, r1
    a94c:	orr	lr, r8, lr, lsl #8
    a950:	bne	a93c <sas7bdat_parse_single_row.part.6+0x254>
    a954:	mov	r9, r2
    a958:	b	a8d4 <sas7bdat_parse_single_row.part.6+0x1ec>
    a95c:	ldr	r3, [r4, #24]
    a960:	mov	r7, r0
    a964:	cmp	r3, #0
    a968:	beq	a864 <sas7bdat_parse_single_row.part.6+0x17c>
    a96c:	str	r6, [sp, #8]
    a970:	add	r5, r4, #480	; 0x1e0
    a974:	mov	r1, #2048	; 0x800
    a978:	ldr	r2, [r8, #32]
    a97c:	add	r5, r5, #1
    a980:	mov	r0, r5
    a984:	ldr	r3, [r4, #76]	; 0x4c
    a988:	str	r2, [sp, #4]
    a98c:	ldr	ip, [r8, #20]
    a990:	add	r3, r3, #1
    a994:	ldr	r2, [pc, #108]	; aa08 <sas7bdat_parse_single_row.part.6+0x320>
    a998:	add	ip, ip, #1
    a99c:	add	r2, pc, r2
    a9a0:	str	ip, [sp]
    a9a4:	bl	4254 <snprintf@plt>
    a9a8:	mov	r0, r5
    a9ac:	ldr	r3, [r4, #24]
    a9b0:	ldr	r1, [r4, #52]	; 0x34
    a9b4:	blx	r3
    a9b8:	b	a864 <sas7bdat_parse_single_row.part.6+0x17c>
    a9bc:	mov	r3, #5
    a9c0:	mov	r7, r3
    a9c4:	b	a864 <sas7bdat_parse_single_row.part.6+0x17c>
    a9c8:	mov	r3, #3
    a9cc:	mov	r7, r3
    a9d0:	b	a864 <sas7bdat_parse_single_row.part.6+0x17c>
    a9d4:	vmov.f64	d7, d9
    a9d8:	b	a920 <sas7bdat_parse_single_row.part.6+0x238>
    a9dc:	ldr	r3, [sp, #28]
    a9e0:	mov	r0, r7
    a9e4:	vstr	d8, [sp, #40]	; 0x28
    a9e8:	mvn	r1, r3, lsr #8
    a9ec:	uxtb	r1, r1
    a9f0:	bl	447c <sas_assign_tag@plt>
    a9f4:	b	a768 <sas7bdat_parse_single_row.part.6+0x80>
    a9f8:	.word	0x00000000
    a9fc:	.word	0x7ff80000
	...
    aa08:	.word	0x0001b3fc

0000aa0c <sas7bdat_submit_columns_if_needed.part.7>:
    aa0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    aa10:	mov	r4, r0
    aa14:	ldr	r5, [r0]
    aa18:	ldr	r0, [r0, #80]	; 0x50
    aa1c:	strd	r6, [sp, #8]
    aa20:	strd	r8, [sp, #16]
    aa24:	cmp	r5, #0
    aa28:	strd	sl, [sp, #24]
    aa2c:	str	lr, [sp, #32]
    aa30:	sub	sp, sp, #92	; 0x5c
    aa34:	beq	aae8 <sas7bdat_submit_columns_if_needed.part.7+0xdc>
    aa38:	ldr	r8, [r4, #40]	; 0x28
    aa3c:	mov	r7, #0
    aa40:	mov	r6, #0
    aa44:	mov	r2, #0
    aa48:	ldr	lr, [r4, #44]	; 0x2c
    aa4c:	strd	r6, [sp, #80]	; 0x50
    aa50:	ldrb	ip, [sp, #84]	; 0x54
    aa54:	cmp	r8, r2
    aa58:	str	r2, [sp, #36]	; 0x24
    aa5c:	str	r0, [sp, #40]	; 0x28
    aa60:	add	r0, r4, #224	; 0xe0
    aa64:	str	r2, [sp, #44]	; 0x2c
    aa68:	ldr	r2, [r4, #220]	; 0xdc
    aa6c:	bfi	ip, lr, #0, #1
    aa70:	strd	r6, [sp, #64]	; 0x40
    aa74:	strd	r6, [sp, #72]	; 0x48
    aa78:	movne	r7, #1
    aa7c:	moveq	r7, #2
    aa80:	cmp	r1, #0
    aa84:	ldr	r6, [r4, #84]	; 0x54
    aa88:	str	r0, [sp, #76]	; 0x4c
    aa8c:	asr	r3, r2, #31
    aa90:	ldr	lr, [r4, #200]	; 0xc8
    aa94:	ldr	r0, [r4, #212]	; 0xd4
    aa98:	str	r6, [sp, #32]
    aa9c:	ldr	r1, [r4, #216]	; 0xd8
    aaa0:	strb	ip, [sp, #84]	; 0x54
    aaa4:	str	r0, [sp, #48]	; 0x30
    aaa8:	str	r7, [sp, #68]	; 0x44
    aaac:	str	r1, [sp, #52]	; 0x34
    aab0:	strd	r2, [sp, #56]	; 0x38
    aab4:	str	lr, [sp, #80]	; 0x50
    aab8:	beq	aad0 <sas7bdat_submit_columns_if_needed.part.7+0xc4>
    aabc:	ldrb	r3, [r4, #2529]	; 0x9e1
    aac0:	tst	r3, #1
    aac4:	movne	r3, #2
    aac8:	moveq	r3, #1
    aacc:	str	r3, [sp, #64]	; 0x40
    aad0:	add	r0, sp, #32
    aad4:	ldr	r1, [r4, #52]	; 0x34
    aad8:	blx	r5
    aadc:	cmp	r0, #0
    aae0:	bne	ac58 <sas7bdat_submit_columns_if_needed.part.7+0x24c>
    aae4:	ldr	r0, [r4, #80]	; 0x50
    aae8:	cmp	r0, #0
    aaec:	bne	ab20 <sas7bdat_submit_columns_if_needed.part.7+0x114>
    aaf0:	mov	r3, #1
    aaf4:	mov	r2, #0
    aaf8:	str	r2, [sp, #16]
    aafc:	str	r3, [r4, #64]	; 0x40
    ab00:	ldr	r0, [sp, #16]
    ab04:	add	sp, sp, #92	; 0x5c
    ab08:	ldrd	r4, [sp]
    ab0c:	ldrd	r6, [sp, #8]
    ab10:	ldrd	r8, [sp, #16]
    ab14:	ldrd	sl, [sp, #24]
    ab18:	add	sp, sp, #32
    ab1c:	pop	{pc}		; (ldr pc, [sp], #4)
    ab20:	mov	r1, #4
    ab24:	bl	3f9c <readstat_calloc@plt>
    ab28:	cmp	r0, #0
    ab2c:	mov	r9, r0
    ab30:	str	r0, [r4, #196]	; 0xc4
    ab34:	beq	ad78 <sas7bdat_submit_columns_if_needed.part.7+0x36c>
    ab38:	ldr	r3, [r4, #80]	; 0x50
    ab3c:	cmp	r3, #0
    ab40:	beq	aaf0 <sas7bdat_submit_columns_if_needed.part.7+0xe4>
    ab44:	ldr	r3, [pc, #580]	; ad90 <sas7bdat_submit_columns_if_needed.part.7+0x384>
    ab48:	mov	r8, #0
    ab4c:	mov	fp, r8
    ab50:	mov	r7, r8
    ab54:	str	r8, [sp, #16]
    ab58:	add	r3, pc, r3
    ab5c:	str	r3, [sp, #28]
    ab60:	add	r3, r4, #480	; 0x1e0
    ab64:	add	r3, r3, #1
    ab68:	str	r3, [sp, #24]
    ab6c:	lsl	sl, r7, #2
    ab70:	movw	r1, #2152	; 0x868
    ab74:	mov	r0, #1
    ab78:	add	r3, r9, sl
    ab7c:	str	r3, [sp, #20]
    ab80:	bl	3f9c <readstat_calloc@plt>
    ab84:	ldr	r3, [r4, #192]	; 0xc0
    ab88:	mov	r5, r0
    ab8c:	add	r3, r3, r8
    ab90:	ldr	r1, [r3, #32]
    ab94:	ldr	r2, [r3, #36]	; 0x24
    ab98:	str	r7, [r0, #4]
    ab9c:	str	r1, [r0, #1596]	; 0x63c
    aba0:	str	fp, [r0, #2148]	; 0x864
    aba4:	ldr	r6, [r3, #36]	; 0x24
    aba8:	str	r2, [r0]
    abac:	ldr	r2, [r3, #32]
    abb0:	cmp	r6, #5
    abb4:	beq	ad30 <sas7bdat_submit_columns_if_needed.part.7+0x324>
    abb8:	cmp	r6, #0
    abbc:	bne	abd0 <sas7bdat_submit_columns_if_needed.part.7+0x1c4>
    abc0:	sub	r2, r2, #1
    abc4:	movw	r1, #32766	; 0x7ffe
    abc8:	cmp	r2, r1
    abcc:	bhi	ad54 <sas7bdat_submit_columns_if_needed.part.7+0x348>
    abd0:	add	r9, r5, #8
    abd4:	mov	r1, #300	; 0x12c
    abd8:	str	r4, [sp]
    abdc:	mov	r0, r9
    abe0:	ldm	r3, {r2, r3}
    abe4:	bl	a374 <sas7bdat_copy_text_ref>
    abe8:	subs	r6, r0, #0
    abec:	beq	ac64 <sas7bdat_submit_columns_if_needed.part.7+0x258>
    abf0:	mov	r0, r5
    abf4:	bl	3e94 <free@plt>
    abf8:	cmp	r6, #17
    abfc:	bne	ad84 <sas7bdat_submit_columns_if_needed.part.7+0x378>
    ac00:	ldr	r3, [r4, #24]
    ac04:	cmp	r3, #0
    ac08:	moveq	r5, r3
    ac0c:	streq	r6, [sp, #16]
    ac10:	beq	acc0 <sas7bdat_submit_columns_if_needed.part.7+0x2b4>
    ac14:	str	r9, [sp]
    ac18:	add	ip, r5, #564	; 0x234
    ac1c:	add	r5, r5, #308	; 0x134
    ac20:	ldr	r9, [sp, #24]
    ac24:	mov	r3, r7
    ac28:	mov	r1, #2048	; 0x800
    ac2c:	stmib	sp, {r5, ip}
    ac30:	mov	r5, #0
    ac34:	ldr	r2, [sp, #28]
    ac38:	str	r6, [sp, #16]
    ac3c:	mov	r0, r9
    ac40:	bl	4254 <snprintf@plt>
    ac44:	mov	r0, r9
    ac48:	ldr	r3, [r4, #24]
    ac4c:	ldr	r1, [r4, #52]	; 0x34
    ac50:	blx	r3
    ac54:	b	acc0 <sas7bdat_submit_columns_if_needed.part.7+0x2b4>
    ac58:	mov	r3, #4
    ac5c:	str	r3, [sp, #16]
    ac60:	b	ab00 <sas7bdat_submit_columns_if_needed.part.7+0xf4>
    ac64:	ldr	r2, [r4, #192]	; 0xc0
    ac68:	lsr	r6, r6, #16
    ac6c:	mov	r1, #256	; 0x100
    ac70:	str	r4, [sp]
    ac74:	add	r0, r5, #308	; 0x134
    ac78:	lsl	r6, r6, #16
    ac7c:	add	r2, r2, r8
    ac80:	ldrh	r3, [r2, #10]
    ac84:	ldr	r2, [r2, #6]
    ac88:	orr	r3, r6, r3
    ac8c:	bl	a374 <sas7bdat_copy_text_ref>
    ac90:	subs	r6, r0, #0
    ac94:	bne	abf0 <sas7bdat_submit_columns_if_needed.part.7+0x1e4>
    ac98:	ldr	r3, [r4, #192]	; 0xc0
    ac9c:	mov	r1, #1024	; 0x400
    aca0:	add	r0, r5, #564	; 0x234
    aca4:	str	r4, [sp]
    aca8:	add	r3, r3, r8
    acac:	add	r3, r3, #12
    acb0:	ldm	r3, {r2, r3}
    acb4:	bl	a374 <sas7bdat_copy_text_ref>
    acb8:	subs	r6, r0, #0
    acbc:	bne	abf0 <sas7bdat_submit_columns_if_needed.part.7+0x1e4>
    acc0:	ldr	r2, [sp, #20]
    acc4:	ldr	r3, [r4, #196]	; 0xc4
    acc8:	str	r5, [r2]
    accc:	ldr	r1, [r3, sl]
    acd0:	cmp	r1, #0
    acd4:	beq	ad68 <sas7bdat_submit_columns_if_needed.part.7+0x35c>
    acd8:	ldr	r5, [r4, #8]
    acdc:	cmp	r5, #0
    ace0:	beq	ad4c <sas7bdat_submit_columns_if_needed.part.7+0x340>
    ace4:	add	r2, r1, #308	; 0x134
    ace8:	mov	r0, r7
    acec:	ldr	r3, [r4, #52]	; 0x34
    acf0:	blx	r5
    acf4:	cmp	r0, #1
    acf8:	beq	ac58 <sas7bdat_submit_columns_if_needed.part.7+0x24c>
    acfc:	cmp	r0, #2
    ad00:	bne	ad4c <sas7bdat_submit_columns_if_needed.part.7+0x340>
    ad04:	ldr	r3, [r4, #196]	; 0xc4
    ad08:	mov	r2, #1
    ad0c:	ldr	r3, [r3, sl]
    ad10:	str	r2, [r3, #2144]	; 0x860
    ad14:	ldr	r3, [r4, #80]	; 0x50
    ad18:	add	r7, r7, #1
    ad1c:	add	r8, r8, #40	; 0x28
    ad20:	cmp	r3, r7
    ad24:	bls	ad68 <sas7bdat_submit_columns_if_needed.part.7+0x35c>
    ad28:	ldr	r9, [r4, #196]	; 0xc4
    ad2c:	b	ab6c <sas7bdat_submit_columns_if_needed.part.7+0x160>
    ad30:	sub	r2, r2, #3
    ad34:	cmp	r2, #5
    ad38:	bls	abd0 <sas7bdat_submit_columns_if_needed.part.7+0x1c4>
    ad3c:	bl	3e94 <free@plt>
    ad40:	mov	r5, #0
    ad44:	str	r6, [sp, #16]
    ad48:	b	acc0 <sas7bdat_submit_columns_if_needed.part.7+0x2b4>
    ad4c:	add	fp, fp, #1
    ad50:	b	ad14 <sas7bdat_submit_columns_if_needed.part.7+0x308>
    ad54:	bl	3e94 <free@plt>
    ad58:	mov	r3, #5
    ad5c:	mov	r5, r6
    ad60:	str	r3, [sp, #16]
    ad64:	b	acc0 <sas7bdat_submit_columns_if_needed.part.7+0x2b4>
    ad68:	ldr	r3, [sp, #16]
    ad6c:	cmp	r3, #0
    ad70:	beq	aaf0 <sas7bdat_submit_columns_if_needed.part.7+0xe4>
    ad74:	b	ab00 <sas7bdat_submit_columns_if_needed.part.7+0xf4>
    ad78:	mov	r3, #3
    ad7c:	str	r3, [sp, #16]
    ad80:	b	ab00 <sas7bdat_submit_columns_if_needed.part.7+0xf4>
    ad84:	mov	r5, #0
    ad88:	str	r6, [sp, #16]
    ad8c:	b	acc0 <sas7bdat_submit_columns_if_needed.part.7+0x2b4>
    ad90:	.word	0x0001b290

0000ad94 <sas7bdat_parse_page_pass1>:
    ad94:	strd	r4, [sp, #-36]!	; 0xffffffdc
    ad98:	mov	r4, r0
    ad9c:	mov	r5, r1
    ada0:	strd	r6, [sp, #8]
    ada4:	mov	r6, r2
    ada8:	strd	r8, [sp, #16]
    adac:	strd	sl, [sp, #24]
    adb0:	str	lr, [sp, #32]
    adb4:	sub	sp, sp, #76	; 0x4c
    adb8:	str	r1, [sp, #24]
    adbc:	str	r0, [sp, #28]
    adc0:	ldr	r1, [r2, #60]	; 0x3c
    adc4:	ldr	r0, [r2, #128]	; 0x80
    adc8:	sub	r0, r0, #4
    adcc:	add	r0, r4, r0
    add0:	bl	43a4 <sas_read2@plt>
    add4:	mov	r9, r0
    add8:	ldrd	sl, [r6, #128]	; 0x80
    addc:	mov	r1, #0
    ade0:	mov	r0, r5
    ade4:	ldr	r3, [r6, #144]	; 0x90
    ade8:	add	r5, r4, sl
    adec:	mul	ip, r3, r9
    adf0:	str	r3, [sp, #20]
    adf4:	adds	r2, sl, ip
    adf8:	adc	r3, fp, ip, asr #31
    adfc:	cmp	r3, r1
    ae00:	cmpeq	r2, r0
    ae04:	bhi	afa8 <sas7bdat_parse_page_pass1+0x214>
    ae08:	cmp	r9, #0
    ae0c:	beq	afa0 <sas7bdat_parse_page_pass1+0x20c>
    ae10:	ldrd	r2, [sp, #24]
    ae14:	mov	r7, #0
    ae18:	add	r4, sp, #48	; 0x30
    ae1c:	mov	sl, #0
    ae20:	mov	fp, #0
    ae24:	add	r3, r3, r2
    ae28:	str	r3, [sp, #12]
    ae2c:	add	r3, r6, #60	; 0x3c
    ae30:	str	r3, [sp, #8]
    ae34:	b	ae54 <sas7bdat_parse_page_pass1+0xc0>
    ae38:	cmp	r8, #4
    ae3c:	bne	afb0 <sas7bdat_parse_page_pass1+0x21c>
    ae40:	ldr	r3, [sp, #20]
    ae44:	add	r7, r7, #1
    ae48:	cmp	r9, r7
    ae4c:	add	r5, r5, r3
    ae50:	beq	afa0 <sas7bdat_parse_page_pass1+0x20c>
    ae54:	ldr	r3, [sp, #12]
    ae58:	mov	r2, r4
    ae5c:	mov	r0, r5
    ae60:	sub	r1, r3, r5
    ae64:	ldr	r3, [sp, #8]
    ae68:	str	r3, [sp]
    ae6c:	strd	sl, [r4]
    ae70:	ldr	ip, [r6, #136]	; 0x88
    ae74:	strd	sl, [r4, #8]
    ae78:	strd	sl, [r4, #16]
    ae7c:	ldr	r3, [r6, #44]	; 0x2c
    ae80:	str	ip, [sp, #16]
    ae84:	bl	a5a8 <sas7bdat_parse_subheader_pointer.isra.2>
    ae88:	cmp	r0, #0
    ae8c:	bne	af60 <sas7bdat_parse_page_pass1+0x1cc>
    ae90:	ldrd	r2, [sp, #56]	; 0x38
    ae94:	orrs	r3, r2, r3
    ae98:	beq	ae40 <sas7bdat_parse_page_pass1+0xac>
    ae9c:	ldrb	r8, [sp, #64]	; 0x40
    aea0:	cmp	r8, #1
    aea4:	beq	ae40 <sas7bdat_parse_page_pass1+0xac>
    aea8:	mov	r3, r6
    aeac:	mov	r2, r9
    aeb0:	ldr	r1, [sp, #24]
    aeb4:	mov	r0, r4
    aeb8:	bl	a268 <sas7bdat_validate_subheader_pointer>
    aebc:	cmp	r0, #0
    aec0:	bne	af60 <sas7bdat_parse_page_pass1+0x1cc>
    aec4:	cmp	r8, #0
    aec8:	bne	ae38 <sas7bdat_parse_page_pass1+0xa4>
    aecc:	ldr	r3, [sp, #28]
    aed0:	ldr	r0, [sp, #48]	; 0x30
    aed4:	ldr	r1, [r6, #60]	; 0x3c
    aed8:	add	r0, r3, r0
    aedc:	bl	43c8 <sas_read4@plt>
    aee0:	ldr	r3, [r6, #40]	; 0x28
    aee4:	cmp	r3, #0
    aee8:	bne	aefc <sas7bdat_parse_page_pass1+0x168>
    aeec:	ldr	r3, [sp, #16]
    aef0:	cmp	r3, #8
    aef4:	cmneq	r0, #1
    aef8:	beq	af7c <sas7bdat_parse_page_pass1+0x1e8>
    aefc:	cmn	r0, #3
    af00:	bne	ae40 <sas7bdat_parse_page_pass1+0xac>
    af04:	ldr	r3, [r6, #136]	; 0x88
    af08:	mov	r1, #0
    af0c:	ldr	r2, [r6, #140]	; 0x8c
    af10:	str	r1, [sp, #44]	; 0x2c
    af14:	ldr	lr, [sp, #48]	; 0x30
    af18:	adds	r3, r3, #2
    af1c:	ldr	ip, [sp, #56]	; 0x38
    af20:	str	r3, [sp, #32]
    af24:	adc	r3, r2, r1
    af28:	str	r3, [sp, #36]	; 0x24
    af2c:	ldrd	r2, [sp, #32]
    af30:	str	ip, [sp, #40]	; 0x28
    af34:	ldrd	r0, [sp, #40]	; 0x28
    af38:	cmp	r3, r1
    af3c:	ldr	r3, [sp, #28]
    af40:	cmpeq	r2, r0
    af44:	add	r0, r3, lr
    af48:	bhi	afa8 <sas7bdat_parse_page_pass1+0x214>
    af4c:	mov	r1, ip
    af50:	mov	r2, r6
    af54:	bl	a408 <sas7bdat_parse_column_text_subheader>
    af58:	cmp	r0, #0
    af5c:	beq	ae40 <sas7bdat_parse_page_pass1+0xac>
    af60:	add	sp, sp, #76	; 0x4c
    af64:	ldrd	r4, [sp]
    af68:	ldrd	r6, [sp, #8]
    af6c:	ldrd	r8, [sp, #16]
    af70:	ldrd	sl, [sp, #24]
    af74:	add	sp, sp, #32
    af78:	pop	{pc}		; (ldr pc, [sp], #4)
    af7c:	ldr	r3, [sp, #28]
    af80:	ldr	r0, [sp, #48]	; 0x30
    af84:	ldr	r1, [r6, #60]	; 0x3c
    af88:	add	r0, r0, #4
    af8c:	add	r0, r3, r0
    af90:	bl	43c8 <sas_read4@plt>
    af94:	cmn	r0, #3
    af98:	bne	ae40 <sas7bdat_parse_page_pass1+0xac>
    af9c:	b	af04 <sas7bdat_parse_page_pass1+0x170>
    afa0:	mov	r0, #0
    afa4:	b	af60 <sas7bdat_parse_page_pass1+0x1cc>
    afa8:	mov	r0, #5
    afac:	b	af60 <sas7bdat_parse_page_pass1+0x1cc>
    afb0:	mov	r0, #6
    afb4:	b	af60 <sas7bdat_parse_page_pass1+0x1cc>

0000afb8 <readstat_parse_sas7bdat>:
    afb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    afbc:	mov	r4, r0
    afc0:	mov	r5, r1
    afc4:	strd	r6, [sp, #8]
    afc8:	movw	r1, #2536	; 0x9e8
    afcc:	mov	r0, #1
    afd0:	strd	r8, [sp, #16]
    afd4:	mov	r6, r2
    afd8:	strd	sl, [sp, #24]
    afdc:	str	lr, [sp, #32]
    afe0:	sub	sp, sp, #220	; 0xdc
    afe4:	ldr	fp, [r4, #32]
    afe8:	str	r2, [sp, #56]	; 0x38
    afec:	bl	3d2c <calloc@plt>
    aff0:	mov	sl, r0
    aff4:	mov	r1, #152	; 0x98
    aff8:	mov	r0, #1
    affc:	bl	3d2c <calloc@plt>
    b000:	ldrd	r2, [r4]
    b004:	mov	r8, r0
    b008:	ldrd	r0, [r4, #8]
    b00c:	ldr	lr, [r4, #36]	; 0x24
    b010:	strd	r2, [sl]
    b014:	ldrd	r2, [r4, #16]
    b018:	strd	r0, [sl, #8]
    b01c:	ldrd	r0, [r4, #24]
    b020:	ldr	ip, [r4, #48]	; 0x30
    b024:	strd	r2, [sl, #16]
    b028:	str	lr, [sl, #200]	; 0xc8
    b02c:	ldr	lr, [r4, #40]	; 0x28
    b030:	strd	r0, [sl, #24]
    b034:	mov	r0, r5
    b038:	ldr	r3, [r4, #44]	; 0x2c
    b03c:	cmp	ip, #0
    b040:	str	r6, [sl, #52]	; 0x34
    b044:	strgt	ip, [sl, #88]	; 0x58
    b048:	str	fp, [sl, #56]	; 0x38
    b04c:	ldr	r1, [fp, #20]
    b050:	str	r3, [sl, #84]	; 0x54
    b054:	str	lr, [sl, #204]	; 0xcc
    b058:	ldr	r3, [fp]
    b05c:	blx	r3
    b060:	cmn	r0, #1
    b064:	beq	b484 <readstat_parse_sas7bdat+0x4cc>
    b068:	mov	r1, #2
    b06c:	mov	r0, #0
    b070:	ldr	r3, [fp, #8]
    b074:	ldr	r2, [fp, #20]
    b078:	blx	r3
    b07c:	asr	r1, r0, #31
    b080:	mvn	r3, #0
    b084:	mvn	r2, #0
    b088:	cmp	r1, r3
    b08c:	cmpeq	r0, r2
    b090:	strd	r0, [sl, #32]
    b094:	beq	b590 <readstat_parse_sas7bdat+0x5d8>
    b098:	mov	r1, #0
    b09c:	ldr	r3, [fp, #8]
    b0a0:	mov	r0, r1
    b0a4:	ldr	r2, [fp, #20]
    b0a8:	blx	r3
    b0ac:	cmn	r0, #1
    b0b0:	beq	b4fc <readstat_parse_sas7bdat+0x544>
    b0b4:	mov	r1, r8
    b0b8:	mov	r0, fp
    b0bc:	ldr	r2, [sl, #24]
    b0c0:	ldr	r3, [sp, #56]	; 0x38
    b0c4:	bl	4374 <sas_read_header@plt>
    b0c8:	subs	r9, r0, #0
    b0cc:	beq	b20c <readstat_parse_sas7bdat+0x254>
    b0d0:	sub	r3, r9, #1
    b0d4:	cmp	r9, #15
    b0d8:	cmpne	r3, #1
    b0dc:	movls	r5, #1
    b0e0:	movhi	r5, #0
    b0e4:	ldr	r3, [fp, #4]
    b0e8:	ldr	r0, [fp, #20]
    b0ec:	blx	r3
    b0f0:	cmp	r5, #0
    b0f4:	bne	b494 <readstat_parse_sas7bdat+0x4dc>
    b0f8:	ldr	r0, [sl, #160]	; 0xa0
    b0fc:	cmp	r0, #0
    b100:	beq	b13c <readstat_parse_sas7bdat+0x184>
    b104:	ldr	r3, [sl, #152]	; 0x98
    b108:	cmp	r3, #0
    b10c:	ble	b130 <readstat_parse_sas7bdat+0x178>
    b110:	mov	r4, #0
    b114:	ldr	r0, [r0, r4, lsl #2]
    b118:	add	r4, r4, #1
    b11c:	bl	3e94 <free@plt>
    b120:	ldr	r3, [sl, #152]	; 0x98
    b124:	ldr	r0, [sl, #160]	; 0xa0
    b128:	cmp	r4, r3
    b12c:	blt	b114 <readstat_parse_sas7bdat+0x15c>
    b130:	bl	3e94 <free@plt>
    b134:	ldr	r0, [sl, #156]	; 0x9c
    b138:	bl	3e94 <free@plt>
    b13c:	ldr	r3, [sl, #196]	; 0xc4
    b140:	cmp	r3, #0
    b144:	beq	b184 <readstat_parse_sas7bdat+0x1cc>
    b148:	ldr	r2, [sl, #80]	; 0x50
    b14c:	cmp	r2, #0
    b150:	beq	b17c <readstat_parse_sas7bdat+0x1c4>
    b154:	mov	r4, #0
    b158:	ldr	r1, [r3, r4, lsl #2]
    b15c:	add	r4, r4, #1
    b160:	subs	r0, r1, #0
    b164:	beq	b174 <readstat_parse_sas7bdat+0x1bc>
    b168:	bl	3e94 <free@plt>
    b16c:	ldr	r2, [sl, #80]	; 0x50
    b170:	ldr	r3, [sl, #196]	; 0xc4
    b174:	cmp	r2, r4
    b178:	bhi	b158 <readstat_parse_sas7bdat+0x1a0>
    b17c:	mov	r0, r3
    b180:	bl	3e94 <free@plt>
    b184:	ldr	r0, [sl, #192]	; 0xc0
    b188:	cmp	r0, #0
    b18c:	beq	b194 <readstat_parse_sas7bdat+0x1dc>
    b190:	bl	3e94 <free@plt>
    b194:	ldr	r0, [sl, #180]	; 0xb4
    b198:	cmp	r0, #0
    b19c:	beq	b1a4 <readstat_parse_sas7bdat+0x1ec>
    b1a0:	bl	3e94 <free@plt>
    b1a4:	ldr	r0, [sl, #120]	; 0x78
    b1a8:	cmp	r0, #0
    b1ac:	beq	b1b4 <readstat_parse_sas7bdat+0x1fc>
    b1b0:	bl	3e94 <free@plt>
    b1b4:	ldr	r0, [sl, #124]	; 0x7c
    b1b8:	cmp	r0, #0
    b1bc:	beq	b1c4 <readstat_parse_sas7bdat+0x20c>
    b1c0:	bl	3e94 <free@plt>
    b1c4:	ldr	r0, [sl, #208]	; 0xd0
    b1c8:	cmp	r0, #0
    b1cc:	beq	b1d4 <readstat_parse_sas7bdat+0x21c>
    b1d0:	bl	3da4 <iconv_close@plt>
    b1d4:	mov	r0, sl
    b1d8:	bl	3e94 <free@plt>
    b1dc:	cmp	r8, #0
    b1e0:	beq	b1ec <readstat_parse_sas7bdat+0x234>
    b1e4:	mov	r0, r8
    b1e8:	bl	3e94 <free@plt>
    b1ec:	mov	r0, r9
    b1f0:	add	sp, sp, #220	; 0xdc
    b1f4:	ldrd	r4, [sp]
    b1f8:	ldrd	r6, [sp, #8]
    b1fc:	ldrd	r8, [sp, #16]
    b200:	ldrd	sl, [sp, #24]
    b204:	add	sp, sp, #32
    b208:	pop	{pc}		; (ldr pc, [sp], #4)
    b20c:	ldm	r8, {r1, r2, r3}
    b210:	str	r1, [sl, #40]	; 0x28
    b214:	strd	r2, [sl, #44]	; 0x2c
    b218:	bl	3e88 <machine_is_little_endian@plt>
    b21c:	ldr	r3, [r8]
    b220:	ldr	r2, [sl, #44]	; 0x2c
    b224:	ldr	ip, [r8, #32]
    b228:	eor	r0, r0, r3
    b22c:	ldr	lr, [r8, #36]	; 0x24
    b230:	cmp	r2, #0
    b234:	str	r0, [sl, #60]	; 0x3c
    b238:	ldrd	r0, [r8, #40]	; 0x28
    b23c:	str	ip, [sl, #112]	; 0x70
    b240:	ldrd	r2, [r8, #64]	; 0x40
    b244:	ldrd	r4, [r8, #48]	; 0x30
    b248:	strd	r2, [sl, #96]	; 0x60
    b24c:	ldrd	r2, [r8, #56]	; 0x38
    b250:	strd	r0, [sl, #128]	; 0x80
    b254:	ldr	r0, [sl, #200]	; 0xc8
    b258:	ldr	r1, [r8, #12]
    b25c:	strd	r2, [sl, #104]	; 0x68
    b260:	moveq	r2, #4
    b264:	movne	r2, #8
    b268:	mov	r3, #0
    b26c:	str	lr, [sl, #116]	; 0x74
    b270:	cmp	r0, #0
    b274:	mov	r0, ip
    b278:	strd	r2, [sl, #136]	; 0x88
    b27c:	ldrd	r2, [r8, #72]	; 0x48
    b280:	strd	r4, [sl, #144]	; 0x90
    b284:	strd	r2, [sl, #212]	; 0xd4
    b288:	ldreq	r3, [r8, #144]	; 0x90
    b28c:	str	r1, [sl, #220]	; 0xdc
    b290:	streq	r3, [sl, #200]	; 0xc8
    b294:	bl	4200 <readstat_malloc@plt>
    b298:	cmp	r0, #0
    b29c:	str	r0, [sl, #120]	; 0x78
    b2a0:	beq	b648 <readstat_parse_sas7bdat+0x690>
    b2a4:	ldr	r4, [sl, #200]	; 0xc8
    b2a8:	cmp	r4, #0
    b2ac:	beq	b2d0 <readstat_parse_sas7bdat+0x318>
    b2b0:	ldr	r5, [sl, #204]	; 0xcc
    b2b4:	cmp	r5, #0
    b2b8:	beq	b2d0 <readstat_parse_sas7bdat+0x318>
    b2bc:	mov	r1, r5
    b2c0:	mov	r0, r4
    b2c4:	bl	3dd4 <strcmp@plt>
    b2c8:	cmp	r0, #0
    b2cc:	bne	b610 <readstat_parse_sas7bdat+0x658>
    b2d0:	ldr	r0, [sl, #208]	; 0xd0
    b2d4:	mov	r3, #64	; 0x40
    b2d8:	add	r2, r8, #80	; 0x50
    b2dc:	str	r0, [sp]
    b2e0:	movw	r1, #257	; 0x101
    b2e4:	add	r0, sl, #224	; 0xe0
    b2e8:	bl	420c <readstat_convert@plt>
    b2ec:	subs	r9, r0, #0
    b2f0:	bne	b0d0 <readstat_parse_sas7bdat+0x118>
    b2f4:	ldr	r6, [sl, #56]	; 0x38
    b2f8:	ldrd	r2, [sl, #104]	; 0x68
    b2fc:	strd	r2, [sp, #32]
    b300:	orrs	r3, r2, r3
    b304:	beq	c674 <readstat_parse_sas7bdat+0x16bc>
    b308:	mov	r4, #0
    b30c:	mov	r5, #0
    b310:	str	r8, [sp, #40]	; 0x28
    b314:	mov	r9, fp
    b318:	b	b3cc <readstat_parse_sas7bdat+0x414>
    b31c:	ldr	r7, [sl, #44]	; 0x2c
    b320:	ldr	r3, [r6, #12]
    b324:	ldr	r2, [r6, #20]
    b328:	cmp	r7, #0
    b32c:	movne	fp, #34	; 0x22
    b330:	movne	r7, #16
    b334:	ldr	r8, [sl, #112]	; 0x70
    b338:	mov	r1, fp
    b33c:	ldr	r0, [sl, #120]	; 0x78
    b340:	blx	r3
    b344:	cmp	r0, fp
    b348:	add	r2, r7, #16
    b34c:	bcc	b62c <readstat_parse_sas7bdat+0x674>
    b350:	ldr	r1, [sl, #60]	; 0x3c
    b354:	sub	r7, r8, fp
    b358:	ldr	r0, [sl, #120]	; 0x78
    b35c:	add	r0, r0, r2
    b360:	bl	43a4 <sas_read2@plt>
    b364:	and	r3, r0, #3840	; 0xf00
    b368:	mov	r1, r7
    b36c:	cmp	r3, #256	; 0x100
    b370:	beq	b65c <readstat_parse_sas7bdat+0x6a4>
    b374:	ands	r8, r0, #36864	; 0x9000
    b378:	bne	b3b0 <readstat_parse_sas7bdat+0x3f8>
    b37c:	ldr	r0, [sl, #120]	; 0x78
    b380:	ldr	r3, [r6, #12]
    b384:	ldr	r2, [r6, #20]
    b388:	add	r0, r0, fp
    b38c:	blx	r3
    b390:	cmp	r7, r0
    b394:	mov	r2, sl
    b398:	bhi	b62c <readstat_parse_sas7bdat+0x674>
    b39c:	ldr	r1, [sl, #112]	; 0x70
    b3a0:	ldr	r0, [sl, #120]	; 0x78
    b3a4:	bl	ad94 <sas7bdat_parse_page_pass1>
    b3a8:	cmp	r0, #0
    b3ac:	bne	c158 <readstat_parse_sas7bdat+0x11a0>
    b3b0:	ldrd	r2, [sl, #104]	; 0x68
    b3b4:	adds	r4, r4, #1
    b3b8:	adc	r5, r5, #0
    b3bc:	strd	r4, [sp, #32]
    b3c0:	cmp	r3, r5
    b3c4:	cmpeq	r2, r4
    b3c8:	bls	bf64 <readstat_parse_sas7bdat+0xfac>
    b3cc:	ldr	r2, [sl, #96]	; 0x60
    b3d0:	mov	r1, #0
    b3d4:	mov	fp, #18
    b3d8:	ldr	r0, [sl, #112]	; 0x70
    b3dc:	ldr	r3, [r6, #8]
    b3e0:	mla	r0, r0, r4, r2
    b3e4:	ldr	r2, [r6, #20]
    b3e8:	blx	r3
    b3ec:	cmn	r0, #1
    b3f0:	strd	r4, [sp, #32]
    b3f4:	bne	b31c <readstat_parse_sas7bdat+0x364>
    b3f8:	ldr	r3, [sl, #24]
    b3fc:	mov	fp, r9
    b400:	ldr	r8, [sp, #40]	; 0x28
    b404:	cmp	r3, #0
    b408:	beq	b588 <readstat_parse_sas7bdat+0x5d0>
    b40c:	ldr	ip, [sl, #112]	; 0x70
    b410:	add	r6, sl, #480	; 0x1e0
    b414:	mov	r1, #2048	; 0x800
    b418:	strd	r4, [sp, #16]
    b41c:	add	r6, r6, #1
    b420:	mov	r9, #15
    b424:	ldr	r3, [sl, #96]	; 0x60
    b428:	mov	r0, r6
    b42c:	ldr	r2, [sl, #116]	; 0x74
    b430:	mul	lr, ip, r5
    b434:	str	ip, [sp, #24]
    b438:	str	r2, [sp, #28]
    b43c:	mla	r2, r2, r4, lr
    b440:	umull	r4, r5, ip, r4
    b444:	ldr	ip, [sl, #100]	; 0x64
    b448:	str	r3, [sp, #8]
    b44c:	add	r5, r2, r5
    b450:	adds	r3, r4, r3
    b454:	adc	r2, r5, ip
    b458:	str	r3, [sp]
    b45c:	str	r2, [sp, #4]
    b460:	ldr	r2, [pc, #3888]	; c398 <readstat_parse_sas7bdat+0x13e0>
    b464:	str	ip, [sp, #12]
    b468:	add	r2, pc, r2
    b46c:	bl	4254 <snprintf@plt>
    b470:	mov	r0, r6
    b474:	ldr	r3, [sl, #24]
    b478:	ldr	r1, [sl, #52]	; 0x34
    b47c:	blx	r3
    b480:	b	b488 <readstat_parse_sas7bdat+0x4d0>
    b484:	mov	r9, #1
    b488:	ldr	r3, [fp, #4]
    b48c:	ldr	r0, [fp, #20]
    b490:	blx	r3
    b494:	ldr	r3, [sl, #24]
    b498:	cmp	r3, #0
    b49c:	beq	b0f8 <readstat_parse_sas7bdat+0x140>
    b4a0:	mov	r0, r9
    b4a4:	add	r4, sl, #480	; 0x1e0
    b4a8:	bl	3e1c <readstat_error_message@plt>
    b4ac:	mov	r6, r0
    b4b0:	add	r4, r4, #1
    b4b4:	bl	423c <__errno_location@plt>
    b4b8:	mov	r5, r0
    b4bc:	ldr	r0, [r0]
    b4c0:	bl	4110 <strerror@plt>
    b4c4:	ldr	r2, [pc, #3792]	; c39c <readstat_parse_sas7bdat+0x13e4>
    b4c8:	mov	r3, r6
    b4cc:	mov	r1, #2048	; 0x800
    b4d0:	ldr	ip, [r5]
    b4d4:	str	r9, [sp]
    b4d8:	add	r2, pc, r2
    b4dc:	stmib	sp, {r0, ip}
    b4e0:	mov	r0, r4
    b4e4:	bl	4254 <snprintf@plt>
    b4e8:	mov	r0, r4
    b4ec:	ldr	r3, [sl, #24]
    b4f0:	ldr	r1, [sp, #56]	; 0x38
    b4f4:	blx	r3
    b4f8:	b	b0f8 <readstat_parse_sas7bdat+0x140>
    b4fc:	ldr	r4, [sl, #24]
    b500:	cmp	r4, #0
    b504:	beq	b588 <readstat_parse_sas7bdat+0x5d0>
    b508:	ldr	r2, [pc, #3728]	; c3a0 <readstat_parse_sas7bdat+0x13e8>
    b50c:	add	r3, sl, #480	; 0x1e0
    b510:	mov	r9, #15
    b514:	add	r3, r3, #1
    b518:	mov	r0, r3
    b51c:	add	r2, pc, r2
    b520:	ldrh	r1, [r2, #44]	; 0x2c
    b524:	ldm	r2, {ip, lr}
    b528:	str	ip, [sl, #481]	; 0x1e1
    b52c:	ldr	ip, [r2, #8]
    b530:	strh	r1, [r3, #44]	; 0x2c
    b534:	ldr	r1, [r2, #12]
    b538:	str	lr, [r3, #4]
    b53c:	ldr	lr, [r2, #16]
    b540:	str	ip, [r3, #8]
    b544:	ldr	ip, [r2, #20]
    b548:	str	r1, [r3, #12]
    b54c:	ldr	r1, [r2, #24]
    b550:	str	lr, [r3, #16]
    b554:	ldr	lr, [r2, #28]
    b558:	str	ip, [r3, #20]
    b55c:	ldr	ip, [r2, #32]
    b560:	str	r1, [r3, #24]
    b564:	ldr	r1, [r2, #36]	; 0x24
    b568:	str	lr, [r3, #28]
    b56c:	ldr	r2, [r2, #40]	; 0x28
    b570:	str	ip, [r3, #32]
    b574:	str	r1, [r3, #36]	; 0x24
    b578:	str	r2, [r3, #40]	; 0x28
    b57c:	ldr	r1, [sl, #52]	; 0x34
    b580:	blx	r4
    b584:	b	b488 <readstat_parse_sas7bdat+0x4d0>
    b588:	mov	r9, #15
    b58c:	b	b488 <readstat_parse_sas7bdat+0x4d0>
    b590:	ldr	r4, [sl, #24]
    b594:	cmp	r4, #0
    b598:	beq	b588 <readstat_parse_sas7bdat+0x5d0>
    b59c:	ldr	r2, [pc, #3584]	; c3a4 <readstat_parse_sas7bdat+0x13ec>
    b5a0:	add	r3, sl, #480	; 0x1e0
    b5a4:	mov	r9, #15
    b5a8:	add	r3, r3, #1
    b5ac:	mov	r0, r3
    b5b0:	add	r2, pc, r2
    b5b4:	ldr	lr, [r2]
    b5b8:	ldr	ip, [r2, #4]
    b5bc:	ldr	r1, [r2, #8]
    b5c0:	str	lr, [sl, #481]	; 0x1e1
    b5c4:	ldr	lr, [r2, #12]
    b5c8:	str	ip, [r3, #4]
    b5cc:	ldr	ip, [r2, #16]
    b5d0:	str	r1, [r3, #8]
    b5d4:	ldr	r1, [r2, #20]
    b5d8:	str	lr, [r3, #12]
    b5dc:	ldr	lr, [r2, #24]
    b5e0:	str	ip, [r3, #16]
    b5e4:	ldr	ip, [r2, #28]
    b5e8:	str	r1, [r3, #20]
    b5ec:	ldr	r1, [r2, #32]
    b5f0:	str	lr, [r3, #24]
    b5f4:	ldr	r2, [r2, #36]	; 0x24
    b5f8:	str	ip, [r3, #28]
    b5fc:	str	r1, [r3, #32]
    b600:	str	r2, [r3, #36]	; 0x24
    b604:	ldr	r1, [sl, #52]	; 0x34
    b608:	blx	r4
    b60c:	b	b488 <readstat_parse_sas7bdat+0x4d0>
    b610:	mov	r1, r4
    b614:	mov	r0, r5
    b618:	bl	4104 <iconv_open@plt>
    b61c:	cmn	r0, #1
    b620:	beq	c510 <readstat_parse_sas7bdat+0x1558>
    b624:	str	r0, [sl, #208]	; 0xd0
    b628:	b	b2d4 <readstat_parse_sas7bdat+0x31c>
    b62c:	ldr	r8, [sp, #40]	; 0x28
    b630:	mov	fp, r9
    b634:	mov	r9, #2
    b638:	ldr	r3, [fp, #4]
    b63c:	ldr	r0, [fp, #20]
    b640:	blx	r3
    b644:	b	b494 <readstat_parse_sas7bdat+0x4dc>
    b648:	mov	r9, #3
    b64c:	ldr	r3, [fp, #4]
    b650:	ldr	r0, [fp, #20]
    b654:	blx	r3
    b658:	b	b0f8 <readstat_parse_sas7bdat+0x140>
    b65c:	ldr	r8, [sp, #40]	; 0x28
    b660:	mov	fp, r9
    b664:	ldrd	r2, [sl, #104]	; 0x68
    b668:	subs	r1, r2, #1
    b66c:	sbc	r3, r3, #0
    b670:	ldr	r6, [sl, #56]	; 0x38
    b674:	str	r1, [sp, #48]	; 0x30
    b678:	str	r3, [sp, #52]	; 0x34
    b67c:	ldrd	r2, [sp, #48]	; 0x30
    b680:	cmp	r3, r5
    b684:	cmpeq	r2, r4
    b688:	bls	b790 <readstat_parse_sas7bdat+0x7d8>
    b68c:	str	r8, [sp, #60]	; 0x3c
    b690:	mov	r2, #0
    b694:	mov	r3, #0
    b698:	ldrd	r8, [sp, #48]	; 0x30
    b69c:	strd	r2, [sp, #40]	; 0x28
    b6a0:	ldr	r0, [sl, #96]	; 0x60
    b6a4:	mov	r1, #0
    b6a8:	ldr	ip, [sl, #112]	; 0x70
    b6ac:	ldr	r3, [r6, #8]
    b6b0:	ldr	r2, [r6, #20]
    b6b4:	mla	r0, ip, r8, r0
    b6b8:	blx	r3
    b6bc:	cmn	r0, #1
    b6c0:	beq	c570 <readstat_parse_sas7bdat+0x15b8>
    b6c4:	ldr	r4, [sl, #44]	; 0x2c
    b6c8:	ldr	r3, [r6, #12]
    b6cc:	ldr	r2, [r6, #20]
    b6d0:	cmp	r4, #0
    b6d4:	movne	r5, #34	; 0x22
    b6d8:	moveq	r5, #18
    b6dc:	ldr	r7, [sl, #112]	; 0x70
    b6e0:	mov	r1, r5
    b6e4:	movne	r4, #16
    b6e8:	ldr	r0, [sl, #120]	; 0x78
    b6ec:	blx	r3
    b6f0:	cmp	r0, r5
    b6f4:	bcc	c508 <readstat_parse_sas7bdat+0x1550>
    b6f8:	add	r4, r4, #16
    b6fc:	ldr	r1, [sl, #60]	; 0x3c
    b700:	ldr	r0, [sl, #120]	; 0x78
    b704:	add	r0, r0, r4
    b708:	bl	43a4 <sas_read2@plt>
    b70c:	and	r3, r0, #3840	; 0xf00
    b710:	cmp	r3, #256	; 0x100
    b714:	beq	bd90 <readstat_parse_sas7bdat+0xdd8>
    b718:	ands	r4, r0, #36864	; 0x9000
    b71c:	bne	b774 <readstat_parse_sas7bdat+0x7bc>
    b720:	ldr	r0, [sl, #120]	; 0x78
    b724:	sub	r7, r7, r5
    b728:	mov	r1, r7
    b72c:	ldr	r3, [r6, #12]
    b730:	ldr	r2, [r6, #20]
    b734:	add	r0, r0, r5
    b738:	blx	r3
    b73c:	cmp	r7, r0
    b740:	bhi	c508 <readstat_parse_sas7bdat+0x1550>
    b744:	mov	r2, sl
    b748:	ldr	r1, [sl, #112]	; 0x70
    b74c:	ldr	r0, [sl, #120]	; 0x78
    b750:	bl	ad94 <sas7bdat_parse_page_pass1>
    b754:	cmp	r0, #0
    b758:	bne	c888 <readstat_parse_sas7bdat+0x18d0>
    b75c:	ldr	r3, [sp, #40]	; 0x28
    b760:	adds	r3, r3, #1
    b764:	str	r3, [sp, #40]	; 0x28
    b768:	ldr	r3, [sp, #44]	; 0x2c
    b76c:	adc	r3, r3, #0
    b770:	str	r3, [sp, #44]	; 0x2c
    b774:	ldrd	r2, [sp, #32]
    b778:	subs	r8, r8, #1
    b77c:	sbc	r9, r9, #0
    b780:	cmp	r9, r3
    b784:	cmpeq	r8, r2
    b788:	bhi	b6a0 <readstat_parse_sas7bdat+0x6e8>
    b78c:	ldr	r8, [sp, #60]	; 0x3c
    b790:	mov	r1, #0
    b794:	ldr	r3, [fp, #8]
    b798:	ldr	r2, [fp, #20]
    b79c:	ldr	r0, [sl, #96]	; 0x60
    b7a0:	blx	r3
    b7a4:	cmn	r0, #1
    b7a8:	beq	c20c <readstat_parse_sas7bdat+0x1254>
    b7ac:	ldr	r1, [sl, #56]	; 0x38
    b7b0:	ldrd	r2, [sl, #104]	; 0x68
    b7b4:	str	r1, [sp, #88]	; 0x58
    b7b8:	orrs	r3, r2, r3
    b7bc:	beq	bf78 <readstat_parse_sas7bdat+0xfc0>
    b7c0:	mov	r3, r1
    b7c4:	mov	r0, #0
    b7c8:	str	fp, [sp, #104]	; 0x68
    b7cc:	mov	r1, #0
    b7d0:	strd	r0, [sp, #40]	; 0x28
    b7d4:	str	r8, [sp, #108]	; 0x6c
    b7d8:	b	b81c <readstat_parse_sas7bdat+0x864>
    b7dc:	ldr	r3, [sl, #76]	; 0x4c
    b7e0:	ldr	r2, [sl, #84]	; 0x54
    b7e4:	cmp	r2, r3
    b7e8:	beq	bf70 <readstat_parse_sas7bdat+0xfb8>
    b7ec:	ldr	r1, [sp, #40]	; 0x28
    b7f0:	ldrd	r2, [sl, #104]	; 0x68
    b7f4:	adds	r1, r1, #1
    b7f8:	str	r1, [sp, #40]	; 0x28
    b7fc:	ldr	r1, [sp, #44]	; 0x2c
    b800:	adc	r1, r1, #0
    b804:	str	r1, [sp, #44]	; 0x2c
    b808:	ldrd	r0, [sp, #40]	; 0x28
    b80c:	cmp	r3, r1
    b810:	cmpeq	r2, r0
    b814:	bls	bf70 <readstat_parse_sas7bdat+0xfb8>
    b818:	ldr	r3, [sl, #56]	; 0x38
    b81c:	ldr	r4, [r3, #16]
    b820:	ldr	r3, [r3, #20]
    b824:	ldr	r1, [sl, #28]
    b828:	ldr	r0, [sl, #32]
    b82c:	ldr	r2, [sl, #52]	; 0x34
    b830:	blx	r4
    b834:	subs	r3, r0, #0
    b838:	str	r3, [sp, #76]	; 0x4c
    b83c:	bne	c30c <readstat_parse_sas7bdat+0x1354>
    b840:	ldr	r2, [sp, #88]	; 0x58
    b844:	ldr	r1, [sl, #112]	; 0x70
    b848:	ldr	r0, [sl, #120]	; 0x78
    b84c:	ldr	r3, [r2, #12]
    b850:	ldr	r2, [r2, #20]
    b854:	blx	r3
    b858:	ldrd	r2, [sl, #112]	; 0x70
    b85c:	asr	r1, r0, #31
    b860:	cmp	r1, r3
    b864:	strd	r2, [sp, #80]	; 0x50
    b868:	cmpeq	r0, r2
    b86c:	bcc	c330 <readstat_parse_sas7bdat+0x1378>
    b870:	ldr	r1, [sl, #60]	; 0x3c
    b874:	str	r2, [sp, #72]	; 0x48
    b878:	ldr	r0, [sl, #128]	; 0x80
    b87c:	ldr	r3, [sl, #120]	; 0x78
    b880:	sub	r0, r0, #8
    b884:	add	r0, r3, r0
    b888:	str	r3, [sp, #68]	; 0x44
    b88c:	bl	43a4 <sas_read2@plt>
    b890:	and	r3, r0, #3840	; 0xf00
    b894:	cmp	r3, #256	; 0x100
    b898:	str	r3, [sp, #92]	; 0x5c
    b89c:	beq	bdb8 <readstat_parse_sas7bdat+0xe00>
    b8a0:	tst	r0, #36864	; 0x9000
    b8a4:	bne	b7dc <readstat_parse_sas7bdat+0x824>
    b8a8:	ldr	r4, [sp, #68]	; 0x44
    b8ac:	ldr	r3, [sp, #80]	; 0x50
    b8b0:	ldr	r0, [sl, #128]	; 0x80
    b8b4:	ldr	r1, [sl, #60]	; 0x3c
    b8b8:	str	r3, [sp, #96]	; 0x60
    b8bc:	ldr	r3, [sp, #76]	; 0x4c
    b8c0:	sub	r0, r0, #4
    b8c4:	add	r0, r4, r0
    b8c8:	str	r3, [sp, #100]	; 0x64
    b8cc:	bl	43a4 <sas_read2@plt>
    b8d0:	ldrd	r6, [sl, #128]	; 0x80
    b8d4:	str	r0, [sp, #32]
    b8d8:	ldr	r3, [sl, #144]	; 0x90
    b8dc:	add	r9, r4, r6
    b8e0:	mul	r1, r3, r0
    b8e4:	str	r3, [sp, #64]	; 0x40
    b8e8:	adds	r2, r6, r1
    b8ec:	adc	r3, r7, r1, asr #31
    b8f0:	ldrd	r0, [sp, #96]	; 0x60
    b8f4:	cmp	r3, r1
    b8f8:	cmpeq	r2, r0
    b8fc:	bhi	c128 <readstat_parse_sas7bdat+0x1170>
    b900:	ldr	r3, [sp, #32]
    b904:	cmp	r3, #0
    b908:	beq	bfc0 <readstat_parse_sas7bdat+0x1008>
    b90c:	ldr	r3, [sp, #68]	; 0x44
    b910:	add	r4, sp, #192	; 0xc0
    b914:	ldr	fp, [sp, #76]	; 0x4c
    b918:	ldr	r2, [sp, #80]	; 0x50
    b91c:	add	r3, r3, r2
    b920:	str	r3, [sp, #60]	; 0x3c
    b924:	add	r3, sl, #60	; 0x3c
    b928:	str	r3, [sp, #48]	; 0x30
    b92c:	b	b9d8 <readstat_parse_sas7bdat+0xa20>
    b930:	cmp	r8, #4
    b934:	bne	c560 <readstat_parse_sas7bdat+0x15a8>
    b938:	ldr	r3, [sl, #64]	; 0x40
    b93c:	cmp	r3, #0
    b940:	beq	bd74 <readstat_parse_sas7bdat+0xdbc>
    b944:	ldrb	r5, [sl, #2529]	; 0x9e1
    b948:	ldr	r3, [sp, #68]	; 0x44
    b94c:	ldr	r8, [sp, #192]	; 0xc0
    b950:	ands	r5, r5, #1
    b954:	add	r8, r3, r8
    b958:	bne	bc14 <readstat_parse_sas7bdat+0xc5c>
    b95c:	ldr	r3, [sl, #76]	; 0x4c
    b960:	ldr	r2, [sl, #84]	; 0x54
    b964:	cmp	r2, r3
    b968:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    b96c:	mov	r3, r6
    b970:	mov	r2, r8
    b974:	ldr	r1, [sl, #68]	; 0x44
    b978:	ldr	r0, [sl, #124]	; 0x7c
    b97c:	bl	4050 <sas_rle_decompress@plt>
    b980:	ldr	r3, [sl, #68]	; 0x44
    b984:	cmp	r3, r0
    b988:	bne	bf04 <readstat_parse_sas7bdat+0xf4c>
    b98c:	ldr	r2, [sl, #76]	; 0x4c
    b990:	ldr	r3, [sl, #84]	; 0x54
    b994:	cmp	r2, r3
    b998:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    b99c:	ldr	r3, [sl, #88]	; 0x58
    b9a0:	cmp	r3, #0
    b9a4:	bne	c108 <readstat_parse_sas7bdat+0x1150>
    b9a8:	mov	r1, sl
    b9ac:	ldr	r0, [sl, #124]	; 0x7c
    b9b0:	bl	a6e8 <sas7bdat_parse_single_row.part.6>
    b9b4:	mov	r5, r0
    b9b8:	cmp	r5, #0
    b9bc:	bne	bedc <readstat_parse_sas7bdat+0xf24>
    b9c0:	ldr	r3, [sp, #64]	; 0x40
    b9c4:	add	fp, fp, #1
    b9c8:	add	r9, r9, r3
    b9cc:	ldr	r3, [sp, #32]
    b9d0:	cmp	r3, fp
    b9d4:	beq	bfc0 <readstat_parse_sas7bdat+0x1008>
    b9d8:	ldr	r3, [sp, #48]	; 0x30
    b9dc:	mov	r6, #0
    b9e0:	mov	r7, #0
    b9e4:	mov	r2, r4
    b9e8:	mov	r0, r9
    b9ec:	str	r3, [sp]
    b9f0:	ldr	r3, [sp, #60]	; 0x3c
    b9f4:	strd	r6, [r4]
    b9f8:	strd	r6, [r4, #8]
    b9fc:	strd	r6, [r4, #16]
    ba00:	sub	r1, r3, r9
    ba04:	ldr	r3, [sl, #44]	; 0x2c
    ba08:	bl	a5a8 <sas7bdat_parse_subheader_pointer.isra.2>
    ba0c:	subs	r5, r0, #0
    ba10:	bne	bedc <readstat_parse_sas7bdat+0xf24>
    ba14:	ldrd	r6, [sp, #200]	; 0xc8
    ba18:	orrs	r3, r6, r7
    ba1c:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    ba20:	ldrb	r8, [sp, #208]	; 0xd0
    ba24:	cmp	r8, #1
    ba28:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    ba2c:	mov	r3, sl
    ba30:	mov	r0, r4
    ba34:	ldr	r2, [sp, #32]
    ba38:	ldr	r1, [sp, #72]	; 0x48
    ba3c:	bl	a268 <sas7bdat_validate_subheader_pointer>
    ba40:	subs	r5, r0, #0
    ba44:	bne	bedc <readstat_parse_sas7bdat+0xf24>
    ba48:	cmp	r8, #0
    ba4c:	bne	b930 <readstat_parse_sas7bdat+0x978>
    ba50:	ldr	r3, [sp, #68]	; 0x44
    ba54:	ldr	r0, [sp, #192]	; 0xc0
    ba58:	ldr	r1, [sl, #60]	; 0x3c
    ba5c:	add	r0, r3, r0
    ba60:	bl	43c8 <sas_read4@plt>
    ba64:	ldr	r3, [sl, #40]	; 0x28
    ba68:	cmp	r3, #0
    ba6c:	cmneq	r0, #1
    ba70:	beq	c0a0 <readstat_parse_sas7bdat+0x10e8>
    ba74:	ldrb	r3, [sp, #209]	; 0xd1
    ba78:	cmp	r3, #0
    ba7c:	beq	ba9c <readstat_parse_sas7bdat+0xae4>
    ba80:	movw	r2, #63479	; 0xf7f7
    ba84:	movt	r2, #63479	; 0xf7f7
    ba88:	movw	r3, #63222	; 0xf6f6
    ba8c:	movt	r3, #63222	; 0xf6f6
    ba90:	cmp	r0, r3
    ba94:	cmpne	r0, r2
    ba98:	bne	bff8 <readstat_parse_sas7bdat+0x1040>
    ba9c:	cmn	r0, #3
    baa0:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    baa4:	ldr	r3, [sl, #136]	; 0x88
    baa8:	ldr	r1, [sl, #140]	; 0x8c
    baac:	ldr	ip, [sp, #192]	; 0xc0
    bab0:	mov	r2, r3
    bab4:	mov	r3, #0
    bab8:	ldr	lr, [sp, #200]	; 0xc8
    babc:	str	r3, [sp, #132]	; 0x84
    bac0:	adds	r3, r2, #2
    bac4:	str	r3, [sp, #136]	; 0x88
    bac8:	adc	r3, r1, #0
    bacc:	str	r2, [sp, #120]	; 0x78
    bad0:	str	lr, [sp, #128]	; 0x80
    bad4:	ldrd	r6, [sp, #128]	; 0x80
    bad8:	str	r3, [sp, #140]	; 0x8c
    badc:	ldrd	r2, [sp, #136]	; 0x88
    bae0:	str	lr, [sp, #112]	; 0x70
    bae4:	cmp	r7, r3
    bae8:	ldr	r3, [sp, #68]	; 0x44
    baec:	cmpeq	r6, r2
    baf0:	add	r8, r3, ip
    baf4:	bcc	bb54 <readstat_parse_sas7bdat+0xb9c>
    baf8:	movw	r1, #63479	; 0xf7f7
    bafc:	movt	r1, #63479	; 0xf7f7
    bb00:	cmp	r0, r1
    bb04:	beq	c254 <readstat_parse_sas7bdat+0x129c>
    bb08:	movw	r2, #63222	; 0xf6f6
    bb0c:	movt	r2, #63222	; 0xf6f6
    bb10:	cmp	r0, r2
    bb14:	beq	c33c <readstat_parse_sas7bdat+0x1384>
    bb18:	cmn	r0, #1024	; 0x400
    bb1c:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    bb20:	cmn	r0, #1
    bb24:	beq	ca84 <readstat_parse_sas7bdat+0x1acc>
    bb28:	cmn	r0, #4
    bb2c:	beq	c6b0 <readstat_parse_sas7bdat+0x16f8>
    bb30:	movw	r3, #64510	; 0xfbfe
    bb34:	movt	r3, #65535	; 0xffff
    bb38:	cmp	r0, r3
    bb3c:	beq	c920 <readstat_parse_sas7bdat+0x1968>
    bb40:	cmn	r0, #2
    bb44:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    bb48:	bic	r0, r0, #7
    bb4c:	cmn	r0, #8
    bb50:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    bb54:	ldr	r3, [sl, #24]
    bb58:	mov	r2, #5
    bb5c:	ldr	fp, [sp, #104]	; 0x68
    bb60:	ldr	r8, [sp, #108]	; 0x6c
    bb64:	cmp	r3, #0
    bb68:	beq	ca68 <readstat_parse_sas7bdat+0x1ab0>
    bb6c:	sub	r3, r2, #1
    bb70:	add	r4, sl, #480	; 0x1e0
    bb74:	cmp	r2, #15
    bb78:	cmpne	r3, #1
    bb7c:	add	r4, r4, #1
    bb80:	movls	r5, #1
    bb84:	movhi	r5, #0
    bb88:	mov	r9, r2
    bb8c:	ldr	r2, [sp, #88]	; 0x58
    bb90:	mov	r1, #1
    bb94:	mov	r0, #0
    bb98:	ldr	r3, [r2, #8]
    bb9c:	ldr	r2, [r2, #20]
    bba0:	blx	r3
    bba4:	ldr	r3, [sl, #112]	; 0x70
    bba8:	subs	r2, r0, #1
    bbac:	asr	r7, r0, #31
    bbb0:	mov	r6, r0
    bbb4:	mov	r1, #2048	; 0x800
    bbb8:	str	r2, [sp, #32]
    bbbc:	sbc	ip, r7, #0
    bbc0:	mov	r0, r4
    bbc4:	str	r3, [sp, #48]	; 0x30
    bbc8:	ldrd	r2, [sp, #40]	; 0x28
    bbcc:	strd	r2, [sp]
    bbd0:	ldr	r2, [sp, #32]
    bbd4:	ldr	r3, [sp, #48]	; 0x30
    bbd8:	ldr	lr, [sl, #116]	; 0x74
    bbdc:	str	r2, [sp, #16]
    bbe0:	ldr	r2, [pc, #1984]	; c3a8 <readstat_parse_sas7bdat+0x13f0>
    bbe4:	subs	r3, r6, r3
    bbe8:	sbc	lr, r7, lr
    bbec:	str	r3, [sp, #8]
    bbf0:	str	ip, [sp, #20]
    bbf4:	add	r2, pc, r2
    bbf8:	str	lr, [sp, #12]
    bbfc:	bl	4254 <snprintf@plt>
    bc00:	mov	r0, r4
    bc04:	ldr	r3, [sl, #24]
    bc08:	ldr	r1, [sl, #52]	; 0x34
    bc0c:	blx	r3
    bc10:	b	b0e4 <readstat_parse_sas7bdat+0x12c>
    bc14:	ldr	r0, [sl, #68]	; 0x44
    bc18:	add	r6, r8, r6
    bc1c:	bl	40e0 <malloc@plt>
    bc20:	str	r0, [sp, #112]	; 0x70
    bc24:	str	r4, [sp, #124]	; 0x7c
    bc28:	mov	r4, r0
    bc2c:	str	r9, [sp, #120]	; 0x78
    bc30:	add	r5, r8, #2
    bc34:	cmp	r5, r6
    bc38:	bhi	c820 <readstat_parse_sas7bdat+0x1868>
    bc3c:	ldrb	r3, [r8]
    bc40:	mov	r7, #15
    bc44:	ldrb	r8, [r8, #1]
    bc48:	add	r8, r8, r3, lsl #8
    bc4c:	uxth	r8, r8
    bc50:	asr	r3, r8, r7
    bc54:	tst	r3, #1
    bc58:	bne	bc9c <readstat_parse_sas7bdat+0xce4>
    bc5c:	add	r2, r5, #1
    bc60:	cmp	r2, r6
    bc64:	bhi	bc94 <readstat_parse_sas7bdat+0xcdc>
    bc68:	ldr	r3, [sl, #68]	; 0x44
    bc6c:	add	r1, r0, #1
    bc70:	add	r3, r4, r3
    bc74:	cmp	r1, r3
    bc78:	bhi	bda0 <readstat_parse_sas7bdat+0xde8>
    bc7c:	ldrb	r3, [r5]
    bc80:	mov	r5, r2
    bc84:	strb	r3, [r0]
    bc88:	mov	r0, r1
    bc8c:	subs	r7, r7, #1
    bc90:	bcs	bc50 <readstat_parse_sas7bdat+0xc98>
    bc94:	mov	r8, r5
    bc98:	b	bc30 <readstat_parse_sas7bdat+0xc78>
    bc9c:	add	lr, r5, #2
    bca0:	cmp	r6, lr
    bca4:	bcc	c4dc <readstat_parse_sas7bdat+0x1524>
    bca8:	ldrb	r3, [r5]
    bcac:	mov	ip, lr
    bcb0:	ldrb	r1, [r5, #1]
    bcb4:	cmp	r3, #15
    bcb8:	addls	r2, r3, #3
    bcbc:	bls	bd50 <readstat_parse_sas7bdat+0xd98>
    bcc0:	lsr	r2, r3, #4
    bcc4:	cmp	r2, #1
    bcc8:	beq	bd30 <readstat_parse_sas7bdat+0xd78>
    bccc:	cmp	r2, #2
    bcd0:	beq	c074 <readstat_parse_sas7bdat+0x10bc>
    bcd4:	and	r3, r3, #15
    bcd8:	mov	ip, #16
    bcdc:	add	r3, r3, #3
    bce0:	mov	r5, lr
    bce4:	smlabb	r1, ip, r1, r3
    bce8:	cmp	r2, r1
    bcec:	sub	r3, r0, r4
    bcf0:	movls	ip, #0
    bcf4:	movhi	ip, #1
    bcf8:	cmp	r3, r1
    bcfc:	movcs	r3, ip
    bd00:	orrcc	r3, ip, #1
    bd04:	cmp	r3, #0
    bd08:	bne	c4dc <readstat_parse_sas7bdat+0x1524>
    bd0c:	ldr	r3, [sl, #68]	; 0x44
    bd10:	add	r9, r0, r2
    bd14:	add	r3, r4, r3
    bd18:	cmp	r9, r3
    bd1c:	bhi	bda0 <readstat_parse_sas7bdat+0xde8>
    bd20:	sub	r1, r0, r1
    bd24:	bl	3ef4 <memcpy@plt>
    bd28:	mov	r0, r9
    bd2c:	b	bc8c <readstat_parse_sas7bdat+0xcd4>
    bd30:	add	ip, r5, #3
    bd34:	cmp	ip, r6
    bd38:	bhi	c4dc <readstat_parse_sas7bdat+0x1524>
    bd3c:	and	r3, r3, #15
    bd40:	mov	r2, #16
    bd44:	add	r3, r3, #19
    bd48:	smlabb	r2, r2, r1, r3
    bd4c:	ldrb	r1, [r5, #2]
    bd50:	add	r9, r0, r2
    bd54:	ldr	r3, [sl, #68]	; 0x44
    bd58:	add	r3, r4, r3
    bd5c:	cmp	r9, r3
    bd60:	bhi	bda0 <readstat_parse_sas7bdat+0xde8>
    bd64:	mov	r5, ip
    bd68:	bl	4278 <memset@plt>
    bd6c:	mov	r0, r9
    bd70:	b	bc8c <readstat_parse_sas7bdat+0xcd4>
    bd74:	mov	r1, #1
    bd78:	mov	r0, sl
    bd7c:	bl	aa0c <sas7bdat_submit_columns_if_needed.part.7>
    bd80:	subs	r5, r0, #0
    bd84:	bne	bedc <readstat_parse_sas7bdat+0xf24>
    bd88:	ldrd	r6, [sp, #200]	; 0xc8
    bd8c:	b	b944 <readstat_parse_sas7bdat+0x98c>
    bd90:	ldrd	r2, [sp, #40]	; 0x28
    bd94:	orrs	r3, r2, r3
    bd98:	bne	b78c <readstat_parse_sas7bdat+0x7d4>
    bd9c:	b	b774 <readstat_parse_sas7bdat+0x7bc>
    bda0:	ldr	r9, [sp, #120]	; 0x78
    bda4:	mov	r5, #10
    bda8:	ldr	r4, [sp, #124]	; 0x7c
    bdac:	ldr	r0, [sp, #112]	; 0x70
    bdb0:	bl	3e94 <free@plt>
    bdb4:	b	b9b8 <readstat_parse_sas7bdat+0xa00>
    bdb8:	ldr	r4, [sp, #68]	; 0x44
    bdbc:	ldr	r0, [sl, #128]	; 0x80
    bdc0:	ldr	r1, [sl, #60]	; 0x3c
    bdc4:	sub	r0, r0, #6
    bdc8:	add	r0, r4, r0
    bdcc:	bl	43a4 <sas_read2@plt>
    bdd0:	ldr	r3, [sl, #128]	; 0x80
    bdd4:	str	r0, [sl, #72]	; 0x48
    bdd8:	adds	r9, r4, r3
    bddc:	beq	b7dc <readstat_parse_sas7bdat+0x824>
    bde0:	ldr	r1, [sl, #64]	; 0x40
    bde4:	cmp	r1, #0
    bde8:	beq	becc <readstat_parse_sas7bdat+0xf14>
    bdec:	ldr	r3, [sl, #16]
    bdf0:	ldr	ip, [sl, #76]	; 0x4c
    bdf4:	ldr	lr, [sl, #84]	; 0x54
    bdf8:	cmp	r3, #0
    bdfc:	mov	r3, ip
    be00:	mov	r2, lr
    be04:	beq	b7e4 <readstat_parse_sas7bdat+0x82c>
    be08:	ldr	r1, [sp, #68]	; 0x44
    be0c:	ldr	r5, [sl, #72]	; 0x48
    be10:	ldr	r0, [sp, #80]	; 0x50
    be14:	cmp	r5, #0
    be18:	add	r4, r1, r0
    be1c:	sub	r4, r4, r9
    be20:	beq	b7e4 <readstat_parse_sas7bdat+0x82c>
    be24:	cmp	lr, ip
    be28:	bls	b7e4 <readstat_parse_sas7bdat+0x82c>
    be2c:	ldr	r7, [sl, #68]	; 0x44
    be30:	cmp	r4, r7
    be34:	bcc	bea4 <readstat_parse_sas7bdat+0xeec>
    be38:	ldr	r8, [sp, #76]	; 0x4c
    be3c:	mov	r6, #0
    be40:	add	r0, r9, r8
    be44:	mov	r1, sl
    be48:	ldr	r3, [sl, #88]	; 0x58
    be4c:	cmp	r3, #0
    be50:	subne	r3, r3, #1
    be54:	strne	r3, [sl, #88]	; 0x58
    be58:	bne	be78 <readstat_parse_sas7bdat+0xec0>
    be5c:	bl	a6e8 <sas7bdat_parse_single_row.part.6>
    be60:	cmp	r0, #0
    be64:	bne	c640 <readstat_parse_sas7bdat+0x1688>
    be68:	ldr	r7, [sl, #68]	; 0x44
    be6c:	ldr	r5, [sl, #72]	; 0x48
    be70:	ldr	ip, [sl, #76]	; 0x4c
    be74:	ldr	lr, [sl, #84]	; 0x54
    be78:	add	r6, r6, #1
    be7c:	add	r8, r8, r7
    be80:	cmp	r5, r6
    be84:	add	r1, r7, r8
    be88:	mov	r3, ip
    be8c:	mov	r2, lr
    be90:	bls	b7e4 <readstat_parse_sas7bdat+0x82c>
    be94:	cmp	lr, ip
    be98:	bls	b7e4 <readstat_parse_sas7bdat+0x82c>
    be9c:	cmp	r4, r1
    bea0:	bcs	be40 <readstat_parse_sas7bdat+0xe88>
    bea4:	ldr	r3, [sl, #24]
    bea8:	ldr	fp, [sp, #104]	; 0x68
    beac:	ldr	r8, [sp, #108]	; 0x6c
    beb0:	cmp	r3, #0
    beb4:	beq	c114 <readstat_parse_sas7bdat+0x115c>
    beb8:	add	r4, sl, #480	; 0x1e0
    bebc:	mov	r5, #0
    bec0:	add	r4, r4, #1
    bec4:	mov	r9, #10
    bec8:	b	bb8c <readstat_parse_sas7bdat+0xbd4>
    becc:	mov	r0, sl
    bed0:	bl	aa0c <sas7bdat_submit_columns_if_needed.part.7>
    bed4:	subs	r5, r0, #0
    bed8:	beq	bdec <readstat_parse_sas7bdat+0xe34>
    bedc:	ldr	fp, [sp, #104]	; 0x68
    bee0:	mov	r2, r5
    bee4:	ldr	r8, [sp, #108]	; 0x6c
    bee8:	ldr	r3, [sl, #24]
    beec:	cmp	r3, #0
    bef0:	beq	ca68 <readstat_parse_sas7bdat+0x1ab0>
    bef4:	cmp	r2, #4
    bef8:	bne	bb6c <readstat_parse_sas7bdat+0xbb4>
    befc:	mov	r9, #4
    bf00:	b	b64c <readstat_parse_sas7bdat+0x694>
    bf04:	ldr	r2, [sl, #24]
    bf08:	ldr	fp, [sp, #104]	; 0x68
    bf0c:	ldr	r8, [sp, #108]	; 0x6c
    bf10:	cmp	r2, #0
    bf14:	beq	c114 <readstat_parse_sas7bdat+0x115c>
    bf18:	ldr	r2, [pc, #1164]	; c3ac <readstat_parse_sas7bdat+0x13f4>
    bf1c:	add	r4, sl, #480	; 0x1e0
    bf20:	mov	r1, #2048	; 0x800
    bf24:	add	r4, r4, #1
    bf28:	stm	sp, {r0, r3}
    bf2c:	mov	r0, r4
    bf30:	ldr	r3, [sl, #76]	; 0x4c
    bf34:	add	r2, pc, r2
    bf38:	bl	4254 <snprintf@plt>
    bf3c:	mov	r0, r4
    bf40:	ldr	r3, [sl, #24]
    bf44:	ldr	r1, [sl, #52]	; 0x34
    bf48:	blx	r3
    bf4c:	ldr	r3, [sl, #24]
    bf50:	cmp	r3, #0
    bf54:	movne	r9, #10
    bf58:	bne	bb8c <readstat_parse_sas7bdat+0xbd4>
    bf5c:	mov	r9, #10
    bf60:	b	b64c <readstat_parse_sas7bdat+0x694>
    bf64:	mov	fp, r9
    bf68:	ldr	r8, [sp, #40]	; 0x28
    bf6c:	b	b668 <readstat_parse_sas7bdat+0x6b0>
    bf70:	ldr	fp, [sp, #104]	; 0x68
    bf74:	ldr	r8, [sp, #108]	; 0x6c
    bf78:	ldr	r1, [sl, #64]	; 0x40
    bf7c:	cmp	r1, #0
    bf80:	beq	c2f8 <readstat_parse_sas7bdat+0x1340>
    bf84:	ldr	r3, [sl, #16]
    bf88:	cmp	r3, #0
    bf8c:	beq	bfa0 <readstat_parse_sas7bdat+0xfe8>
    bf90:	ldr	r0, [sl, #76]	; 0x4c
    bf94:	ldr	r3, [sl, #84]	; 0x54
    bf98:	cmp	r0, r3
    bf9c:	bne	c518 <readstat_parse_sas7bdat+0x1560>
    bfa0:	ldr	r1, [sl, #28]
    bfa4:	ldrd	r2, [sl, #52]	; 0x34
    bfa8:	ldr	r0, [sl, #32]
    bfac:	ldr	r4, [r3, #16]
    bfb0:	ldr	r3, [r3, #20]
    bfb4:	blx	r4
    bfb8:	mov	r9, r0
    bfbc:	b	b0d0 <readstat_parse_sas7bdat+0x118>
    bfc0:	ldr	r3, [sp, #92]	; 0x5c
    bfc4:	cmp	r3, #512	; 0x200
    bfc8:	bne	b7dc <readstat_parse_sas7bdat+0x824>
    bfcc:	ldr	r3, [sp, #68]	; 0x44
    bfd0:	sub	r3, r9, r3
    bfd4:	rsbs	r2, r3, #0
    bfd8:	and	r3, r3, #7
    bfdc:	and	r2, r2, #7
    bfe0:	rsbpl	r3, r2, #0
    bfe4:	cmp	r3, #4
    bfe8:	beq	c684 <readstat_parse_sas7bdat+0x16cc>
    bfec:	cmp	r9, #0
    bff0:	bne	bde0 <readstat_parse_sas7bdat+0xe28>
    bff4:	b	b7dc <readstat_parse_sas7bdat+0x824>
    bff8:	add	r3, r0, #1024	; 0x400
    bffc:	add	r3, r3, #2
    c000:	bics	r3, r3, #2
    c004:	beq	ba9c <readstat_parse_sas7bdat+0xae4>
    c008:	bic	r3, r0, #7
    c00c:	cmn	r3, #8
    c010:	beq	ba9c <readstat_parse_sas7bdat+0xae4>
    c014:	ldrd	r2, [sp, #200]	; 0xc8
    c018:	mov	r1, #0
    c01c:	ldr	r0, [sl, #68]	; 0x44
    c020:	cmp	r3, r1
    c024:	cmpeq	r2, r0
    c028:	bne	ca58 <readstat_parse_sas7bdat+0x1aa0>
    c02c:	ldr	r3, [sl, #64]	; 0x40
    c030:	cmp	r3, #0
    c034:	beq	c650 <readstat_parse_sas7bdat+0x1698>
    c038:	ldr	r2, [sl, #76]	; 0x4c
    c03c:	ldr	r3, [sl, #84]	; 0x54
    c040:	cmp	r2, r3
    c044:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    c048:	ldr	r3, [sl, #88]	; 0x58
    c04c:	cmp	r3, #0
    c050:	bne	c108 <readstat_parse_sas7bdat+0x1150>
    c054:	ldr	r3, [sp, #68]	; 0x44
    c058:	mov	r1, sl
    c05c:	ldr	r0, [sp, #192]	; 0xc0
    c060:	add	r0, r3, r0
    c064:	bl	a6e8 <sas7bdat_parse_single_row.part.6>
    c068:	subs	r5, r0, #0
    c06c:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    c070:	b	bedc <readstat_parse_sas7bdat+0xf24>
    c074:	add	ip, r5, #3
    c078:	cmp	ip, r6
    c07c:	bhi	c4dc <readstat_parse_sas7bdat+0x1524>
    c080:	ldrb	r2, [r5, #2]
    c084:	and	r3, r3, #15
    c088:	mov	r5, ip
    c08c:	add	r3, r3, #3
    c090:	mov	ip, #16
    c094:	smlabb	r1, ip, r1, r3
    c098:	add	r2, r2, #16
    c09c:	b	bce8 <readstat_parse_sas7bdat+0xd30>
    c0a0:	ldr	r2, [sl, #44]	; 0x2c
    c0a4:	cmp	r2, #0
    c0a8:	bne	c4ec <readstat_parse_sas7bdat+0x1534>
    c0ac:	ldrb	r3, [sp, #209]	; 0xd1
    c0b0:	ldr	r0, [sp, #200]	; 0xc8
    c0b4:	ldr	r1, [sl, #140]	; 0x8c
    c0b8:	cmp	r3, #0
    c0bc:	ldr	r3, [sl, #136]	; 0x88
    c0c0:	str	r0, [sp, #112]	; 0x70
    c0c4:	str	r3, [sp, #120]	; 0x78
    c0c8:	beq	c3c4 <readstat_parse_sas7bdat+0x140c>
    c0cc:	adds	r3, r3, #2
    c0d0:	str	r0, [sp, #144]	; 0x90
    c0d4:	ldr	ip, [sp, #192]	; 0xc0
    c0d8:	strd	r2, [sp, #148]	; 0x94
    c0dc:	adc	r3, r1, #0
    c0e0:	str	r3, [sp, #156]	; 0x9c
    c0e4:	ldrd	r2, [sp, #144]	; 0x90
    c0e8:	ldrd	r0, [sp, #152]	; 0x98
    c0ec:	cmp	r3, r1
    c0f0:	ldr	r3, [sp, #68]	; 0x44
    c0f4:	cmpeq	r2, r0
    c0f8:	add	r8, r3, ip
    c0fc:	bcc	bb54 <readstat_parse_sas7bdat+0xb9c>
    c100:	mvn	r0, #0
    c104:	b	bb08 <readstat_parse_sas7bdat+0xb50>
    c108:	sub	r3, r3, #1
    c10c:	str	r3, [sl, #88]	; 0x58
    c110:	b	b9c0 <readstat_parse_sas7bdat+0xa08>
    c114:	ldr	r3, [fp, #4]
    c118:	mov	r9, #10
    c11c:	ldr	r0, [fp, #20]
    c120:	blx	r3
    c124:	b	b0f8 <readstat_parse_sas7bdat+0x140>
    c128:	ldr	r3, [sl, #24]
    c12c:	ldr	r9, [sp, #76]	; 0x4c
    c130:	ldr	fp, [sp, #104]	; 0x68
    c134:	cmp	r3, #0
    c138:	moveq	r9, #5
    c13c:	ldr	r8, [sp, #108]	; 0x6c
    c140:	beq	b64c <readstat_parse_sas7bdat+0x694>
    c144:	add	r4, sl, #480	; 0x1e0
    c148:	mov	r5, r9
    c14c:	add	r4, r4, #1
    c150:	mov	r9, #5
    c154:	b	bb8c <readstat_parse_sas7bdat+0xbd4>
    c158:	ldr	r3, [sl, #24]
    c15c:	mov	fp, r9
    c160:	mov	r7, r8
    c164:	mov	r9, r0
    c168:	ldr	r8, [sp, #40]	; 0x28
    c16c:	cmp	r3, #0
    c170:	beq	b0d0 <readstat_parse_sas7bdat+0x118>
    c174:	cmp	r0, #4
    c178:	beq	befc <readstat_parse_sas7bdat+0xf44>
    c17c:	mov	r1, #1
    c180:	add	r2, sl, #480	; 0x1e0
    c184:	ldr	r3, [r6, #8]
    c188:	add	ip, r2, r1
    c18c:	mov	r0, r7
    c190:	ldr	r2, [r6, #20]
    c194:	str	ip, [sp, #32]
    c198:	blx	r3
    c19c:	ldr	r3, [sl, #112]	; 0x70
    c1a0:	subs	r2, r0, #1
    c1a4:	asr	r7, r0, #31
    c1a8:	strd	r4, [sp]
    c1ac:	mov	r1, #2048	; 0x800
    c1b0:	ldr	ip, [sl, #116]	; 0x74
    c1b4:	sbc	lr, r7, #0
    c1b8:	str	r2, [sp, #16]
    c1bc:	ldr	r2, [pc, #492]	; c3b0 <readstat_parse_sas7bdat+0x13f8>
    c1c0:	subs	r3, r0, r3
    c1c4:	ldr	r4, [sp, #32]
    c1c8:	sbc	ip, r7, ip
    c1cc:	str	r3, [sp, #8]
    c1d0:	str	lr, [sp, #20]
    c1d4:	add	r2, pc, r2
    c1d8:	str	ip, [sp, #12]
    c1dc:	mov	r0, r4
    c1e0:	bl	4254 <snprintf@plt>
    c1e4:	mov	r0, r4
    c1e8:	ldr	r3, [sl, #24]
    c1ec:	ldr	r1, [sl, #52]	; 0x34
    c1f0:	blx	r3
    c1f4:	sub	r3, r9, #1
    c1f8:	cmp	r9, #15
    c1fc:	cmpne	r3, #1
    c200:	movls	r5, #1
    c204:	movhi	r5, #0
    c208:	b	b0e4 <readstat_parse_sas7bdat+0x12c>
    c20c:	ldr	r3, [sl, #24]
    c210:	cmp	r3, #0
    c214:	beq	b588 <readstat_parse_sas7bdat+0x5d0>
    c218:	ldr	r2, [pc, #404]	; c3b4 <readstat_parse_sas7bdat+0x13fc>
    c21c:	add	r6, sl, #480	; 0x1e0
    c220:	mov	r1, #2048	; 0x800
    c224:	add	r6, r6, #1
    c228:	mov	r9, #15
    c22c:	ldrd	r4, [sl, #96]	; 0x60
    c230:	mov	r0, r6
    c234:	add	r2, pc, r2
    c238:	strd	r4, [sp]
    c23c:	bl	4254 <snprintf@plt>
    c240:	mov	r0, r6
    c244:	ldr	r3, [sl, #24]
    c248:	ldr	r1, [sl, #52]	; 0x34
    c24c:	blx	r3
    c250:	b	b488 <readstat_parse_sas7bdat+0x4d0>
    c254:	ldr	r3, [sl, #44]	; 0x2c
    c258:	cmp	r3, #0
    c25c:	beq	c5fc <readstat_parse_sas7bdat+0x1644>
    c260:	cmp	lr, #127	; 0x7f
    c264:	bls	bb54 <readstat_parse_sas7bdat+0xb9c>
    c268:	add	r0, r8, #40	; 0x28
    c26c:	ldr	r1, [sl, #60]	; 0x3c
    c270:	bl	4398 <sas_read8@plt>
    c274:	mov	r7, r0
    c278:	add	r0, r8, #48	; 0x30
    c27c:	ldr	r1, [sl, #60]	; 0x3c
    c280:	bl	4398 <sas_read8@plt>
    c284:	strd	r0, [sp, #112]	; 0x70
    c288:	add	r0, r8, #120	; 0x78
    c28c:	ldr	r1, [sl, #60]	; 0x3c
    c290:	bl	4398 <sas_read8@plt>
    c294:	mov	r6, r0
    c298:	mov	r1, r7
    c29c:	str	r7, [sl, #68]	; 0x44
    c2a0:	ldr	r0, [sl, #124]	; 0x7c
    c2a4:	bl	42b4 <readstat_realloc@plt>
    c2a8:	cmp	r0, #0
    c2ac:	str	r0, [sl, #124]	; 0x7c
    c2b0:	beq	ca1c <readstat_parse_sas7bdat+0x1a64>
    c2b4:	str	r6, [sl, #72]	; 0x48
    c2b8:	mov	r3, #0
    c2bc:	ldrd	r6, [sp, #112]	; 0x70
    c2c0:	ldr	r2, [sl, #88]	; 0x58
    c2c4:	cmp	r3, r7
    c2c8:	cmpeq	r2, r6
    c2cc:	bcs	c668 <readstat_parse_sas7bdat+0x16b0>
    c2d0:	ldr	r1, [sl, #84]	; 0x54
    c2d4:	subs	r0, r6, r2
    c2d8:	sbc	r3, r7, r3
    c2dc:	str	r0, [sp, #176]	; 0xb0
    c2e0:	str	r3, [sp, #180]	; 0xb4
    c2e4:	cmp	r1, #0
    c2e8:	bne	c9e0 <readstat_parse_sas7bdat+0x1a28>
    c2ec:	ldr	r5, [sp, #176]	; 0xb0
    c2f0:	str	r5, [sl, #84]	; 0x54
    c2f4:	b	b9c0 <readstat_parse_sas7bdat+0xa08>
    c2f8:	mov	r0, sl
    c2fc:	bl	aa0c <sas7bdat_submit_columns_if_needed.part.7>
    c300:	subs	r9, r0, #0
    c304:	beq	bf84 <readstat_parse_sas7bdat+0xfcc>
    c308:	b	b0d0 <readstat_parse_sas7bdat+0x118>
    c30c:	mov	r9, r3
    c310:	sub	r3, r3, #1
    c314:	ldr	fp, [sp, #104]	; 0x68
    c318:	cmp	r9, #15
    c31c:	cmpne	r3, #1
    c320:	movls	r5, #1
    c324:	movhi	r5, #0
    c328:	ldr	r8, [sp, #108]	; 0x6c
    c32c:	b	b0e4 <readstat_parse_sas7bdat+0x12c>
    c330:	ldr	fp, [sp, #104]	; 0x68
    c334:	ldr	r8, [sp, #108]	; 0x6c
    c338:	b	b634 <readstat_parse_sas7bdat+0x67c>
    c33c:	ldr	r3, [sl, #80]	; 0x50
    c340:	cmp	r3, #0
    c344:	bne	bb54 <readstat_parse_sas7bdat+0xb9c>
    c348:	ldr	r3, [sl, #64]	; 0x40
    c34c:	cmp	r3, #0
    c350:	bne	bb54 <readstat_parse_sas7bdat+0xb9c>
    c354:	ldr	r3, [sl, #44]	; 0x2c
    c358:	cmp	r3, #0
    c35c:	beq	c86c <readstat_parse_sas7bdat+0x18b4>
    c360:	ldr	r3, [sp, #112]	; 0x70
    c364:	cmp	r3, #15
    c368:	bls	bb54 <readstat_parse_sas7bdat+0xb9c>
    c36c:	add	r0, r8, #8
    c370:	ldr	r1, [sl, #60]	; 0x3c
    c374:	bl	4398 <sas_read8@plt>
    c378:	mov	r2, r0
    c37c:	add	r1, sl, #192	; 0xc0
    c380:	str	r0, [sl, #80]	; 0x50
    c384:	add	r0, sl, #188	; 0xbc
    c388:	bl	a660 <sas7bdat_realloc_col_info.isra.4>
    c38c:	subs	r5, r0, #0
    c390:	beq	b9c0 <readstat_parse_sas7bdat+0xa08>
    c394:	b	bedc <readstat_parse_sas7bdat+0xf24>
    c398:	.word	0x0001aa28
    c39c:	.word	0x0001aa9c
    c3a0:	.word	0x0001a944
    c3a4:	.word	0x0001a888
    c3a8:	.word	0x0001a2dc
    c3ac:	.word	0x00019fd0
    c3b0:	.word	0x00019cfc
    c3b4:	.word	0x00019acc
    c3b8:	.word	0x00019a00
    c3bc:	.word	0x000198b4
    c3c0:	.word	0x000195c4
    c3c4:	adds	r3, r3, #2
    c3c8:	ldr	ip, [sp, #192]	; 0xc0
    c3cc:	str	r3, [sp, #160]	; 0xa0
    c3d0:	adc	r3, r1, #0
    c3d4:	str	r0, [sp, #168]	; 0xa8
    c3d8:	str	r3, [sp, #164]	; 0xa4
    c3dc:	str	r2, [sp, #172]	; 0xac
    c3e0:	ldr	r3, [sp, #68]	; 0x44
    c3e4:	ldrd	r0, [sp, #160]	; 0xa0
    c3e8:	ldrd	r6, [sp, #168]	; 0xa8
    c3ec:	add	r8, r3, ip
    c3f0:	cmp	r1, r7
    c3f4:	cmpeq	r0, r6
    c3f8:	bhi	bb54 <readstat_parse_sas7bdat+0xb9c>
    c3fc:	ldr	r3, [sp, #120]	; 0x78
    c400:	cmp	r2, #0
    c404:	ldr	r2, [sp, #112]	; 0x70
    c408:	ldr	r1, [sl, #60]	; 0x3c
    c40c:	add	r0, r8, r3
    c410:	mov	r6, r3
    c414:	subne	r7, r2, #28
    c418:	subeq	r7, r2, #20
    c41c:	bl	43a4 <sas_read2@plt>
    c420:	mov	r5, r0
    c424:	mov	r1, r6
    c428:	ldr	r0, [sp, #112]	; 0x70
    c42c:	bl	438c <sas_subheader_remainder@plt>
    c430:	cmp	r5, r0
    c434:	lsr	r7, r7, #3
    c438:	bne	bb54 <readstat_parse_sas7bdat+0xb9c>
    c43c:	ldr	r3, [sl, #164]	; 0xa4
    c440:	add	r1, sl, #192	; 0xc0
    c444:	add	r0, sl, #188	; 0xbc
    c448:	add	r3, r7, r3
    c44c:	mov	r2, r3
    c450:	str	r3, [sl, #164]	; 0xa4
    c454:	bl	a660 <sas7bdat_realloc_col_info.isra.4>
    c458:	subs	r5, r0, #0
    c45c:	bne	bedc <readstat_parse_sas7bdat+0xf24>
    c460:	ldr	r3, [sl, #164]	; 0xa4
    c464:	sub	r7, r3, r7
    c468:	cmp	r3, r7
    c46c:	ble	b9c0 <readstat_parse_sas7bdat+0xa08>
    c470:	str	r9, [sp, #112]	; 0x70
    c474:	mov	r9, sl
    c478:	add	r3, r6, #8
    c47c:	ldr	sl, [sp, #48]	; 0x30
    c480:	add	r6, sp, #184	; 0xb8
    c484:	add	r8, r8, r3
    c488:	str	r4, [sp, #120]	; 0x78
    c48c:	mov	r1, r8
    c490:	mov	r2, sl
    c494:	ldr	r5, [r9, #192]	; 0xc0
    c498:	mov	r0, r6
    c49c:	add	r4, r7, r7, lsl #2
    c4a0:	add	r7, r7, #1
    c4a4:	bl	a53c <sas7bdat_parse_text_ref.isra.1>
    c4a8:	ldr	r1, [r6]
    c4ac:	add	r8, r8, #8
    c4b0:	ldr	r0, [r9, #164]	; 0xa4
    c4b4:	add	r2, r5, r4, lsl #3
    c4b8:	str	r1, [r5, r4, lsl #3]
    c4bc:	ldrh	r1, [r6, #4]
    c4c0:	cmp	r7, r0
    c4c4:	strh	r1, [r2, #4]
    c4c8:	blt	c48c <readstat_parse_sas7bdat+0x14d4>
    c4cc:	mov	sl, r9
    c4d0:	ldr	r9, [sp, #112]	; 0x70
    c4d4:	ldr	r4, [sp, #120]	; 0x78
    c4d8:	b	b9c0 <readstat_parse_sas7bdat+0xa08>
    c4dc:	mov	r5, #5
    c4e0:	ldr	r9, [sp, #120]	; 0x78
    c4e4:	ldr	r4, [sp, #124]	; 0x7c
    c4e8:	b	bdac <readstat_parse_sas7bdat+0xdf4>
    c4ec:	ldr	r3, [sp, #68]	; 0x44
    c4f0:	ldr	r0, [sp, #192]	; 0xc0
    c4f4:	ldr	r1, [sl, #60]	; 0x3c
    c4f8:	add	r0, r0, #4
    c4fc:	add	r0, r3, r0
    c500:	bl	43c8 <sas_read4@plt>
    c504:	b	ba74 <readstat_parse_sas7bdat+0xabc>
    c508:	ldr	r8, [sp, #60]	; 0x3c
    c50c:	b	b634 <readstat_parse_sas7bdat+0x67c>
    c510:	mov	r9, #7
    c514:	b	b64c <readstat_parse_sas7bdat+0x694>
    c518:	ldr	r2, [sl, #24]
    c51c:	cmp	r2, #0
    c520:	moveq	r9, #9
    c524:	beq	b64c <readstat_parse_sas7bdat+0x694>
    c528:	ldr	r2, [pc, #-376]	; c3b8 <readstat_parse_sas7bdat+0x1400>
    c52c:	add	r4, sl, #480	; 0x1e0
    c530:	mov	r1, #2048	; 0x800
    c534:	add	r4, r4, #1
    c538:	str	r0, [sp]
    c53c:	mov	r9, #9
    c540:	mov	r0, r4
    c544:	add	r2, pc, r2
    c548:	bl	4254 <snprintf@plt>
    c54c:	mov	r0, r4
    c550:	ldr	r3, [sl, #24]
    c554:	ldr	r1, [sl, #52]	; 0x34
    c558:	blx	r3
    c55c:	b	b64c <readstat_parse_sas7bdat+0x694>
    c560:	mov	r2, #6
    c564:	ldr	fp, [sp, #104]	; 0x68
    c568:	ldr	r8, [sp, #108]	; 0x6c
    c56c:	b	bee8 <readstat_parse_sas7bdat+0xf30>
    c570:	ldr	r3, [sl, #24]
    c574:	mov	r6, r8
    c578:	mov	r7, r9
    c57c:	ldr	r8, [sp, #60]	; 0x3c
    c580:	cmp	r3, #0
    c584:	beq	b588 <readstat_parse_sas7bdat+0x5d0>
    c588:	ldr	r2, [sl, #112]	; 0x70
    c58c:	add	r4, sl, #480	; 0x1e0
    c590:	mov	r1, #2048	; 0x800
    c594:	strd	r6, [sp, #16]
    c598:	add	r4, r4, #1
    c59c:	mov	r9, #15
    c5a0:	ldr	ip, [sl, #96]	; 0x60
    c5a4:	mov	r0, r4
    c5a8:	ldr	r3, [sl, #116]	; 0x74
    c5ac:	mul	lr, r2, r7
    c5b0:	mla	lr, r3, r6, lr
    c5b4:	strd	r2, [sp, #24]
    c5b8:	umull	r2, r3, r2, r6
    c5bc:	ldr	r5, [sl, #100]	; 0x64
    c5c0:	str	ip, [sp, #8]
    c5c4:	adds	ip, r2, ip
    c5c8:	ldr	r2, [pc, #-532]	; c3bc <readstat_parse_sas7bdat+0x1404>
    c5cc:	add	r3, lr, r3
    c5d0:	adc	r3, r3, r5
    c5d4:	str	ip, [sp]
    c5d8:	str	r3, [sp, #4]
    c5dc:	add	r2, pc, r2
    c5e0:	str	r5, [sp, #12]
    c5e4:	bl	4254 <snprintf@plt>
    c5e8:	mov	r0, r4
    c5ec:	ldr	r3, [sl, #24]
    c5f0:	ldr	r1, [sl, #52]	; 0x34
    c5f4:	blx	r3
    c5f8:	b	b488 <readstat_parse_sas7bdat+0x4d0>
    c5fc:	cmp	lr, #63	; 0x3f
    c600:	bls	bb54 <readstat_parse_sas7bdat+0xb9c>
    c604:	add	r0, r8, #20
    c608:	ldr	r1, [sl, #60]	; 0x3c
    c60c:	bl	43c8 <sas_read4@plt>
    c610:	mov	r7, r0
    c614:	add	r0, r8, #24
    c618:	ldr	r1, [sl, #60]	; 0x3c
    c61c:	bl	43c8 <sas_read4@plt>
    c620:	mov	r2, r0
    c624:	mov	r3, #0
    c628:	ldr	r1, [sl, #60]	; 0x3c
    c62c:	add	r0, r8, #60	; 0x3c
    c630:	strd	r2, [sp, #112]	; 0x70
    c634:	bl	43c8 <sas_read4@plt>
    c638:	mov	r6, r0
    c63c:	b	c298 <readstat_parse_sas7bdat+0x12e0>
    c640:	mov	r2, r0
    c644:	ldr	fp, [sp, #104]	; 0x68
    c648:	ldr	r8, [sp, #108]	; 0x6c
    c64c:	b	bee8 <readstat_parse_sas7bdat+0xf30>
    c650:	mov	r1, #1
    c654:	mov	r0, sl
    c658:	bl	aa0c <sas7bdat_submit_columns_if_needed.part.7>
    c65c:	subs	r5, r0, #0
    c660:	beq	c038 <readstat_parse_sas7bdat+0x1080>
    c664:	b	bedc <readstat_parse_sas7bdat+0xf24>
    c668:	ldr	r3, [sp, #112]	; 0x70
    c66c:	str	r3, [sl, #88]	; 0x58
    c670:	b	c2f0 <readstat_parse_sas7bdat+0x1338>
    c674:	mvn	r2, #0
    c678:	mvn	r3, #0
    c67c:	strd	r2, [sp, #48]	; 0x30
    c680:	b	b68c <readstat_parse_sas7bdat+0x6d4>
    c684:	ldr	r2, [r9]
    c688:	movw	r3, #8224	; 0x2020
    c68c:	movt	r3, #8224	; 0x2020
    c690:	cmp	r2, r3
    c694:	cmpne	r2, #0
    c698:	beq	c6a8 <readstat_parse_sas7bdat+0x16f0>
    c69c:	ldr	r3, [sl, #48]	; 0x30
    c6a0:	cmp	r3, #0
    c6a4:	beq	bde0 <readstat_parse_sas7bdat+0xe28>
    c6a8:	add	r9, r9, #4
    c6ac:	b	bfec <readstat_parse_sas7bdat+0x1034>
    c6b0:	ldr	r2, [sl, #44]	; 0x2c
    c6b4:	ldr	r3, [sp, #112]	; 0x70
    c6b8:	cmp	r2, #0
    c6bc:	subne	r3, r3, #28
    c6c0:	lsrne	r7, r3, #4
    c6c4:	bne	c6d4 <readstat_parse_sas7bdat+0x171c>
    c6c8:	sub	r7, r3, #20
    c6cc:	mov	r3, #12
    c6d0:	udiv	r7, r7, r3
    c6d4:	ldr	r6, [sp, #120]	; 0x78
    c6d8:	ldr	r1, [sl, #60]	; 0x3c
    c6dc:	add	r0, r8, r6
    c6e0:	bl	43a4 <sas_read2@plt>
    c6e4:	mov	r5, r0
    c6e8:	mov	r1, r6
    c6ec:	ldr	r0, [sp, #112]	; 0x70
    c6f0:	str	r6, [sp, #120]	; 0x78
    c6f4:	bl	438c <sas_subheader_remainder@plt>
    c6f8:	cmp	r5, r0
    c6fc:	bne	bb54 <readstat_parse_sas7bdat+0xb9c>
    c700:	ldr	r3, [sl, #168]	; 0xa8
    c704:	add	r1, sl, #192	; 0xc0
    c708:	add	r0, sl, #188	; 0xbc
    c70c:	add	r3, r7, r3
    c710:	mov	r2, r3
    c714:	str	r3, [sl, #168]	; 0xa8
    c718:	bl	a660 <sas7bdat_realloc_col_info.isra.4>
    c71c:	subs	r5, r0, #0
    c720:	bne	bedc <readstat_parse_sas7bdat+0xf24>
    c724:	ldr	r2, [sl, #168]	; 0xa8
    c728:	sub	r6, r2, r7
    c72c:	cmp	r2, r6
    c730:	ble	b9c0 <readstat_parse_sas7bdat+0xa08>
    c734:	ldr	r3, [sp, #120]	; 0x78
    c738:	mov	r2, #40	; 0x28
    c73c:	str	r5, [sp, #112]	; 0x70
    c740:	mul	r7, r2, r6
    c744:	str	r9, [sp, #120]	; 0x78
    c748:	str	r4, [sp, #124]	; 0x7c
    c74c:	add	r3, r3, #8
    c750:	add	r8, r8, r3
    c754:	b	c7f4 <readstat_parse_sas7bdat+0x183c>
    c758:	ldr	r5, [sl, #192]	; 0xc0
    c75c:	bl	4398 <sas_read8@plt>
    c760:	ldr	r3, [sl, #192]	; 0xc0
    c764:	add	r5, r5, r7
    c768:	add	r9, r3, r7
    c76c:	strd	r0, [r5, #24]
    c770:	ldr	r2, [sl, #44]	; 0x2c
    c774:	ldr	r1, [sl, #60]	; 0x3c
    c778:	cmp	r2, #0
    c77c:	moveq	r5, #4
    c780:	movne	r5, #8
    c784:	add	r0, r8, r5
    c788:	moveq	r4, #10
    c78c:	movne	r4, #14
    c790:	bl	43c8 <sas_read4@plt>
    c794:	ldr	r1, [sl, #192]	; 0xc0
    c798:	str	r0, [r9, #32]
    c79c:	ldr	r0, [sl, #176]	; 0xb0
    c7a0:	add	r3, r1, r7
    c7a4:	ldr	r1, [r3, #32]
    c7a8:	cmp	r1, r0
    c7ac:	strhi	r1, [sl, #176]	; 0xb0
    c7b0:	ldrb	r2, [r8, r4]
    c7b4:	cmp	r2, #1
    c7b8:	moveq	r2, #5
    c7bc:	streq	r2, [r3, #36]	; 0x24
    c7c0:	beq	c7d4 <readstat_parse_sas7bdat+0x181c>
    c7c4:	cmp	r2, #2
    c7c8:	bne	bb54 <readstat_parse_sas7bdat+0xb9c>
    c7cc:	ldr	r2, [sp, #112]	; 0x70
    c7d0:	str	r2, [r3, #36]	; 0x24
    c7d4:	ldr	r2, [sl, #168]	; 0xa8
    c7d8:	add	r5, r5, #8
    c7dc:	add	r7, r7, #40	; 0x28
    c7e0:	str	r6, [r3, #20]
    c7e4:	add	r6, r6, #1
    c7e8:	add	r8, r8, r5
    c7ec:	cmp	r6, r2
    c7f0:	bge	ca40 <readstat_parse_sas7bdat+0x1a88>
    c7f4:	ldr	r5, [sl, #44]	; 0x2c
    c7f8:	mov	r0, r8
    c7fc:	ldr	r1, [sl, #60]	; 0x3c
    c800:	cmp	r5, #0
    c804:	bne	c758 <readstat_parse_sas7bdat+0x17a0>
    c808:	bl	43c8 <sas_read4@plt>
    c80c:	ldr	r3, [sl, #192]	; 0xc0
    c810:	add	r9, r3, r7
    c814:	str	r0, [r9, #24]
    c818:	str	r5, [r9, #28]
    c81c:	b	c770 <readstat_parse_sas7bdat+0x17b8>
    c820:	ldr	r2, [sp, #112]	; 0x70
    c824:	ldr	r3, [sl, #68]	; 0x44
    c828:	ldr	r9, [sp, #120]	; 0x78
    c82c:	sub	r0, r0, r2
    c830:	ldr	r4, [sp, #124]	; 0x7c
    c834:	cmp	r0, r3
    c838:	bne	c9fc <readstat_parse_sas7bdat+0x1a44>
    c83c:	ldr	r2, [sl, #76]	; 0x4c
    c840:	ldr	r3, [sl, #84]	; 0x54
    c844:	cmp	r2, r3
    c848:	beq	ca4c <readstat_parse_sas7bdat+0x1a94>
    c84c:	ldr	r3, [sl, #88]	; 0x58
    c850:	cmp	r3, #0
    c854:	bne	ca2c <readstat_parse_sas7bdat+0x1a74>
    c858:	mov	r1, sl
    c85c:	ldr	r0, [sp, #112]	; 0x70
    c860:	bl	a6e8 <sas7bdat_parse_single_row.part.6>
    c864:	mov	r5, r0
    c868:	b	bdac <readstat_parse_sas7bdat+0xdf4>
    c86c:	ldr	r3, [sp, #112]	; 0x70
    c870:	cmp	r3, #7
    c874:	bls	bb54 <readstat_parse_sas7bdat+0xb9c>
    c878:	add	r0, r8, #4
    c87c:	ldr	r1, [sl, #60]	; 0x3c
    c880:	bl	43c8 <sas_read4@plt>
    c884:	b	c378 <readstat_parse_sas7bdat+0x13c0>
    c888:	ldr	r3, [sl, #24]
    c88c:	strd	r8, [sp, #48]	; 0x30
    c890:	mov	r9, r0
    c894:	ldr	r8, [sp, #60]	; 0x3c
    c898:	cmp	r3, #0
    c89c:	beq	b0d0 <readstat_parse_sas7bdat+0x118>
    c8a0:	cmp	r0, #4
    c8a4:	beq	befc <readstat_parse_sas7bdat+0xf44>
    c8a8:	mov	r1, #1
    c8ac:	mov	r0, r4
    c8b0:	ldr	r3, [r6, #8]
    c8b4:	add	r7, sl, #480	; 0x1e0
    c8b8:	ldr	r2, [r6, #20]
    c8bc:	add	r7, r7, r1
    c8c0:	blx	r3
    c8c4:	ldr	r3, [sl, #112]	; 0x70
    c8c8:	asr	r5, r0, #31
    c8cc:	subs	r6, r0, #1
    c8d0:	mov	r4, r0
    c8d4:	mov	r1, #2048	; 0x800
    c8d8:	sbc	lr, r5, #0
    c8dc:	mov	r0, r7
    c8e0:	str	r3, [sp, #32]
    c8e4:	ldrd	r2, [sp, #48]	; 0x30
    c8e8:	strd	r2, [sp]
    c8ec:	ldr	r3, [sp, #32]
    c8f0:	ldr	ip, [sl, #116]	; 0x74
    c8f4:	str	r6, [sp, #16]
    c8f8:	ldr	r2, [pc, #-1344]	; c3c0 <readstat_parse_sas7bdat+0x1408>
    c8fc:	subs	r3, r4, r3
    c900:	sbc	ip, r5, ip
    c904:	str	r3, [sp, #8]
    c908:	str	lr, [sp, #20]
    c90c:	add	r2, pc, r2
    c910:	str	ip, [sp, #12]
    c914:	bl	4254 <snprintf@plt>
    c918:	mov	r0, r7
    c91c:	b	c1e8 <readstat_parse_sas7bdat+0x1230>
    c920:	ldr	r3, [sl, #44]	; 0x2c
    c924:	ldr	r2, [sp, #112]	; 0x70
    c928:	cmp	r3, #0
    c92c:	movne	r3, #58	; 0x3a
    c930:	moveq	r3, #46	; 0x2e
    c934:	cmp	r3, r2
    c938:	bhi	bb54 <readstat_parse_sas7bdat+0xb9c>
    c93c:	ldr	r3, [sl, #172]	; 0xac
    c940:	add	r1, sl, #192	; 0xc0
    c944:	add	r0, sl, #188	; 0xbc
    c948:	add	r3, r3, #1
    c94c:	mov	r2, r3
    c950:	str	r3, [sl, #172]	; 0xac
    c954:	bl	a660 <sas7bdat_realloc_col_info.isra.4>
    c958:	subs	r5, r0, #0
    c95c:	bne	bedc <readstat_parse_sas7bdat+0xf24>
    c960:	ldr	r3, [sl, #44]	; 0x2c
    c964:	add	r6, sp, #184	; 0xb8
    c968:	mov	r0, r6
    c96c:	ldr	ip, [sl, #172]	; 0xac
    c970:	ldr	r5, [sl, #192]	; 0xc0
    c974:	cmp	r3, #0
    c978:	mov	r3, #40	; 0x28
    c97c:	addne	r1, r8, #46	; 0x2e
    c980:	addeq	r1, r8, #34	; 0x22
    c984:	ldr	r2, [sp, #48]	; 0x30
    c988:	mla	r5, r3, ip, r5
    c98c:	bl	a53c <sas7bdat_parse_text_ref.isra.1>
    c990:	ldr	r3, [r6]
    c994:	mov	lr, #40	; 0x28
    c998:	mov	r0, r6
    c99c:	ldr	r2, [sl, #44]	; 0x2c
    c9a0:	str	r3, [r5, #-34]	; 0xffffffde
    c9a4:	ldrh	r3, [r6, #4]
    c9a8:	cmp	r2, #0
    c9ac:	addne	r1, r8, #52	; 0x34
    c9b0:	addeq	r1, r8, #40	; 0x28
    c9b4:	ldr	r2, [sp, #48]	; 0x30
    c9b8:	strh	r3, [r5, #-30]	; 0xffffffe2
    c9bc:	ldr	r3, [sl, #172]	; 0xac
    c9c0:	ldr	r5, [sl, #192]	; 0xc0
    c9c4:	mla	r5, lr, r3, r5
    c9c8:	bl	a53c <sas7bdat_parse_text_ref.isra.1>
    c9cc:	ldr	r3, [r6]
    c9d0:	str	r3, [r5, #-28]	; 0xffffffe4
    c9d4:	ldrh	r3, [r6, #4]
    c9d8:	strh	r3, [r5, #-24]	; 0xffffffe8
    c9dc:	b	b9c0 <readstat_parse_sas7bdat+0xa08>
    c9e0:	mov	r2, r1
    c9e4:	ldrd	r0, [sp, #176]	; 0xb0
    c9e8:	mov	r3, #0
    c9ec:	cmp	r1, r3
    c9f0:	cmpeq	r0, r2
    c9f4:	bcs	b9c0 <readstat_parse_sas7bdat+0xa08>
    c9f8:	b	c2ec <readstat_parse_sas7bdat+0x1334>
    c9fc:	mov	r0, r2
    ca00:	ldr	fp, [sp, #104]	; 0x68
    ca04:	ldr	r8, [sp, #108]	; 0x6c
    ca08:	bl	3e94 <free@plt>
    ca0c:	ldr	r3, [sl, #24]
    ca10:	cmp	r3, #0
    ca14:	bne	beb8 <readstat_parse_sas7bdat+0xf00>
    ca18:	b	bf5c <readstat_parse_sas7bdat+0xfa4>
    ca1c:	mov	r2, #3
    ca20:	ldr	fp, [sp, #104]	; 0x68
    ca24:	ldr	r8, [sp, #108]	; 0x6c
    ca28:	b	bee8 <readstat_parse_sas7bdat+0xf30>
    ca2c:	sub	r3, r3, #1
    ca30:	ldr	r0, [sp, #112]	; 0x70
    ca34:	str	r3, [sl, #88]	; 0x58
    ca38:	bl	3e94 <free@plt>
    ca3c:	b	b9c0 <readstat_parse_sas7bdat+0xa08>
    ca40:	ldr	r9, [sp, #120]	; 0x78
    ca44:	ldr	r4, [sp, #124]	; 0x7c
    ca48:	b	b9c0 <readstat_parse_sas7bdat+0xa08>
    ca4c:	ldr	r0, [sp, #112]	; 0x70
    ca50:	bl	3e94 <free@plt>
    ca54:	b	b9c0 <readstat_parse_sas7bdat+0xa08>
    ca58:	mov	r2, #10
    ca5c:	ldr	fp, [sp, #104]	; 0x68
    ca60:	ldr	r8, [sp, #108]	; 0x6c
    ca64:	b	bee8 <readstat_parse_sas7bdat+0xf30>
    ca68:	sub	r3, r2, #1
    ca6c:	mov	r9, r2
    ca70:	cmp	r2, #15
    ca74:	cmpne	r3, #1
    ca78:	movls	r5, #1
    ca7c:	movhi	r5, #0
    ca80:	b	b0e4 <readstat_parse_sas7bdat+0x12c>
    ca84:	ldr	r2, [sl, #44]	; 0x2c
    ca88:	b	c3fc <readstat_parse_sas7bdat+0x1444>

0000ca8c <sas7bdat_variable_width>:
    ca8c:	cmp	r0, #0
    ca90:	moveq	r0, r1
    ca94:	movne	r0, #8
    ca98:	bx	lr

0000ca9c <sas7bdat_metadata_ok>:
    ca9c:	ldr	r3, [r0, #16]
    caa0:	cmp	r3, #2
    caa4:	movcs	r0, #6
    caa8:	movcc	r0, #0
    caac:	bx	lr

0000cab0 <sas7bdat_row_length>:
    cab0:	ldr	r3, [r0, #28]
    cab4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    cab8:	strd	r6, [sp, #8]
    cabc:	str	r8, [sp, #16]
    cac0:	str	lr, [sp, #20]
    cac4:	cmp	r3, #0
    cac8:	ble	cb2c <sas7bdat_row_length+0x7c>
    cacc:	mov	r6, #0
    cad0:	mov	r5, r0
    cad4:	mov	r4, r6
    cad8:	mov	r1, r4
    cadc:	mov	r0, r5
    cae0:	bl	4350 <readstat_get_variable@plt>
    cae4:	mov	r8, r0
    cae8:	add	r4, r4, #1
    caec:	bl	41ac <readstat_variable_get_type@plt>
    caf0:	mov	r7, r0
    caf4:	mov	r0, r8
    caf8:	bl	429c <readstat_variable_get_storage_width@plt>
    cafc:	ldr	r3, [r5, #28]
    cb00:	cmp	r7, #0
    cb04:	movne	r0, #8
    cb08:	add	r6, r6, r0
    cb0c:	cmp	r3, r4
    cb10:	bgt	cad8 <sas7bdat_row_length+0x28>
    cb14:	mov	r0, r6
    cb18:	ldrd	r4, [sp]
    cb1c:	ldrd	r6, [sp, #8]
    cb20:	ldr	r8, [sp, #16]
    cb24:	add	sp, sp, #20
    cb28:	pop	{pc}		; (ldr pc, [sp], #4)
    cb2c:	mov	r6, #0
    cb30:	b	cb14 <sas7bdat_row_length+0x64>

0000cb34 <sas7bdat_write_missing_string>:
    cb34:	str	r4, [sp, #-8]!
    cb38:	mov	r4, r0
    cb3c:	mov	r0, r1
    cb40:	str	lr, [sp, #4]
    cb44:	bl	429c <readstat_variable_get_storage_width@plt>
    cb48:	mov	r2, r0
    cb4c:	mov	r1, #0
    cb50:	mov	r0, r4
    cb54:	bl	4278 <memset@plt>
    cb58:	ldr	r4, [sp]
    cb5c:	add	sp, sp, #4
    cb60:	mov	r0, #0
    cb64:	pop	{pc}		; (ldr pc, [sp], #4)

0000cb68 <sas7bdat_write_double>:
    cb68:	sub	sp, sp, #8
    cb6c:	mov	r3, r0
    cb70:	mov	r0, #0
    cb74:	vstr	d0, [sp]
    cb78:	ldm	sp, {r1, r2}
    cb7c:	str	r1, [r3]
    cb80:	str	r2, [r3, #4]
    cb84:	add	sp, sp, #8
    cb88:	bx	lr

0000cb8c <sas7bdat_write_missing_numeric>:
    cb8c:	mvn	r1, #46	; 0x2e
    cb90:	mov	r3, #0
    cb94:	movt	r3, #32760	; 0x7ff8
    cb98:	sub	sp, sp, #8
    cb9c:	bfi	r3, r1, #8, #8
    cba0:	mov	r2, #0
    cba4:	mov	r1, r0
    cba8:	mov	r0, #0
    cbac:	strd	r2, [sp]
    cbb0:	ldrd	r2, [sp]
    cbb4:	str	r2, [r1]
    cbb8:	str	r3, [r1, #4]
    cbbc:	add	sp, sp, #8
    cbc0:	bx	lr

0000cbc4 <sas7bdat_write_float>:
    cbc4:	vcvt.f64.f32	d0, s0
    cbc8:	sub	sp, sp, #8
    cbcc:	mov	r3, r0
    cbd0:	mov	r0, #0
    cbd4:	vstr	d0, [sp]
    cbd8:	ldm	sp, {r1, r2}
    cbdc:	str	r1, [r3]
    cbe0:	str	r2, [r3, #4]
    cbe4:	add	sp, sp, #8
    cbe8:	bx	lr

0000cbec <sas7bdat_write_int32>:
    cbec:	vmov	s15, r2
    cbf0:	sub	sp, sp, #8
    cbf4:	mov	r3, r0
    cbf8:	mov	r0, #0
    cbfc:	vcvt.f64.s32	d7, s15
    cc00:	vstr	d7, [sp]
    cc04:	ldm	sp, {r1, r2}
    cc08:	str	r1, [r3]
    cc0c:	str	r2, [r3, #4]
    cc10:	add	sp, sp, #8
    cc14:	bx	lr

0000cc18 <sas7bdat_write_int16>:
    cc18:	vmov	s15, r2
    cc1c:	sub	sp, sp, #8
    cc20:	mov	r3, r0
    cc24:	mov	r0, #0
    cc28:	vcvt.f64.s32	d7, s15
    cc2c:	vstr	d7, [sp]
    cc30:	ldm	sp, {r1, r2}
    cc34:	str	r1, [r3]
    cc38:	str	r2, [r3, #4]
    cc3c:	add	sp, sp, #8
    cc40:	bx	lr

0000cc44 <sas7bdat_write_int8>:
    cc44:	vmov	s15, r2
    cc48:	sub	sp, sp, #8
    cc4c:	mov	r3, r0
    cc50:	mov	r0, #0
    cc54:	vcvt.f64.s32	d7, s15
    cc58:	vstr	d7, [sp]
    cc5c:	ldm	sp, {r1, r2}
    cc60:	str	r1, [r3]
    cc64:	str	r2, [r3, #4]
    cc68:	add	sp, sp, #8
    cc6c:	bx	lr

0000cc70 <sas7bdat_subheader_init>:
    cc70:	strd	r4, [sp, #-16]!
    cc74:	mov	r5, r1
    cc78:	mov	r1, #20
    cc7c:	str	r6, [sp, #8]
    cc80:	mov	r6, r0
    cc84:	mov	r0, #1
    cc88:	str	lr, [sp, #12]
    cc8c:	bl	3d2c <calloc@plt>
    cc90:	mov	r4, r0
    cc94:	mov	r1, r5
    cc98:	mov	r0, #1
    cc9c:	str	r6, [r4]
    cca0:	str	r5, [r4, #8]
    cca4:	bl	3d2c <calloc@plt>
    cca8:	str	r0, [r4, #4]
    ccac:	mov	r0, r4
    ccb0:	ldrd	r4, [sp]
    ccb4:	ldr	r6, [sp, #8]
    ccb8:	add	sp, sp, #12
    ccbc:	pop	{pc}		; (ldr pc, [sp], #4)

0000ccc0 <sas7bdat_subheader_free>:
    ccc0:	str	r4, [sp, #-8]!
    ccc4:	subs	r4, r0, #0
    ccc8:	str	lr, [sp, #4]
    cccc:	beq	ccf4 <sas7bdat_subheader_free+0x34>
    ccd0:	ldr	r0, [r4, #4]
    ccd4:	cmp	r0, #0
    ccd8:	beq	cce0 <sas7bdat_subheader_free+0x20>
    ccdc:	bl	3e94 <free@plt>
    cce0:	mov	r0, r4
    cce4:	ldr	r4, [sp]
    cce8:	ldr	lr, [sp, #4]
    ccec:	add	sp, sp, #8
    ccf0:	b	3e94 <free@plt>
    ccf4:	ldr	r4, [sp]
    ccf8:	add	sp, sp, #4
    ccfc:	pop	{pc}		; (ldr pc, [sp], #4)

0000cd00 <sas7bdat_subheader_array_free>:
    cd00:	ldrd	r2, [r0]
    cd04:	strd	r4, [sp, #-16]!
    cd08:	str	r6, [sp, #8]
    cd0c:	mov	r6, r0
    cd10:	str	lr, [sp, #12]
    cd14:	cmp	r2, #1
    cd18:	sbcs	r3, r3, #0
    cd1c:	blt	cd4c <sas7bdat_subheader_array_free+0x4c>
    cd20:	mov	r4, #0
    cd24:	mov	r5, #0
    cd28:	ldr	r3, [r6, #16]
    cd2c:	ldr	r0, [r3, r4, lsl #2]
    cd30:	bl	ccc0 <sas7bdat_subheader_free>
    cd34:	ldrd	r2, [r6]
    cd38:	adds	r4, r4, #1
    cd3c:	adc	r5, r5, #0
    cd40:	cmp	r4, r2
    cd44:	sbcs	r3, r5, r3
    cd48:	blt	cd28 <sas7bdat_subheader_array_free+0x28>
    cd4c:	ldr	r0, [r6, #16]
    cd50:	bl	3e94 <free@plt>
    cd54:	mov	r0, r6
    cd58:	ldrd	r4, [sp]
    cd5c:	ldr	r6, [sp, #8]
    cd60:	ldr	lr, [sp, #12]
    cd64:	add	sp, sp, #16
    cd68:	b	3e94 <free@plt>

0000cd6c <sas7bdat_write_string>:
    cd6c:	strd	r4, [sp, #-16]!
    cd70:	mov	r4, r2
    cd74:	str	r6, [sp, #8]
    cd78:	mov	r6, r0
    cd7c:	mov	r0, r1
    cd80:	str	lr, [sp, #12]
    cd84:	bl	429c <readstat_variable_get_storage_width@plt>
    cd88:	cmp	r4, #0
    cd8c:	mov	r5, r0
    cd90:	beq	cda0 <sas7bdat_write_string+0x34>
    cd94:	ldrb	r3, [r4]
    cd98:	cmp	r3, #0
    cd9c:	bne	cdc4 <sas7bdat_write_string+0x58>
    cda0:	mov	r2, r5
    cda4:	mov	r0, r6
    cda8:	mov	r1, #0
    cdac:	bl	4278 <memset@plt>
    cdb0:	mov	r0, #0
    cdb4:	ldrd	r4, [sp]
    cdb8:	ldr	r6, [sp, #8]
    cdbc:	add	sp, sp, #12
    cdc0:	pop	{pc}		; (ldr pc, [sp], #4)
    cdc4:	mov	r0, r4
    cdc8:	bl	41d0 <strlen@plt>
    cdcc:	cmp	r5, r0
    cdd0:	movcc	r0, #22
    cdd4:	bcc	cdb4 <sas7bdat_write_string+0x48>
    cdd8:	mov	r2, r5
    cddc:	mov	r1, r4
    cde0:	mov	r0, r6
    cde4:	bl	4290 <strncpy@plt>
    cde8:	ldrd	r4, [sp]
    cdec:	mov	r0, #0
    cdf0:	ldr	r6, [sp, #8]
    cdf4:	add	sp, sp, #12
    cdf8:	pop	{pc}		; (ldr pc, [sp], #4)

0000cdfc <sas7bdat_write_missing_tagged>:
    cdfc:	strd	r4, [sp, #-12]!
    ce00:	mov	r5, r0
    ce04:	mov	r0, r2
    ce08:	str	lr, [sp, #8]
    ce0c:	sub	sp, sp, #12
    ce10:	mov	r4, r2
    ce14:	bl	411c <sas_validate_tag@plt>
    ce18:	cmp	r0, #0
    ce1c:	beq	ce30 <sas7bdat_write_missing_tagged+0x34>
    ce20:	add	sp, sp, #12
    ce24:	ldrd	r4, [sp]
    ce28:	add	sp, sp, #8
    ce2c:	pop	{pc}		; (ldr pc, [sp], #4)
    ce30:	mvn	r4, r4
    ce34:	mov	r3, #0
    ce38:	movt	r3, #32760	; 0x7ff8
    ce3c:	mov	r2, #0
    ce40:	bfi	r3, r4, #8, #8
    ce44:	strd	r2, [sp]
    ce48:	ldrd	r2, [sp]
    ce4c:	str	r2, [r5]
    ce50:	str	r3, [r5, #4]
    ce54:	add	sp, sp, #12
    ce58:	ldrd	r4, [sp]
    ce5c:	add	sp, sp, #8
    ce60:	pop	{pc}		; (ldr pc, [sp], #4)

0000ce64 <sas7bdat_write_row>:
    ce64:	strd	r4, [sp, #-32]!	; 0xffffffe0
    ce68:	ldr	r5, [r0, #16]
    ce6c:	strd	r6, [sp, #8]
    ce70:	mov	r7, r2
    ce74:	strd	r8, [sp, #16]
    ce78:	mov	r9, r1
    ce7c:	str	fp, [sp, #24]
    ce80:	add	fp, sp, #28
    ce84:	str	lr, [sp, #28]
    ce88:	cmp	r5, #0
    ce8c:	ldr	r8, [r0, #300]	; 0x12c
    ce90:	beq	cebc <sas7bdat_write_row+0x58>
    ce94:	cmp	r5, #1
    ce98:	movne	r0, #0
    ce9c:	beq	cf94 <sas7bdat_write_row+0x130>
    cea0:	sub	sp, fp, #28
    cea4:	ldrd	r4, [sp]
    cea8:	ldrd	r6, [sp, #8]
    ceac:	ldrd	r8, [sp, #16]
    ceb0:	ldr	fp, [sp, #24]
    ceb4:	add	sp, sp, #28
    ceb8:	pop	{pc}		; (ldr pc, [sp], #4)
    cebc:	ldr	r6, [r8]
    cec0:	mov	r4, r0
    cec4:	bl	cab0 <sas7bdat_row_length>
    cec8:	mov	r2, r0
    cecc:	mov	r3, r5
    ced0:	ldr	ip, [r6, #32]
    ced4:	ldr	lr, [r6, #36]	; 0x24
    ced8:	ldrd	r0, [r6, #40]	; 0x28
    cedc:	subs	r0, ip, r0
    cee0:	sbc	r1, lr, r1
    cee4:	bl	2516c <__aeabi_ldivmod>
    cee8:	ldr	r2, [r4, #84]	; 0x54
    ceec:	mov	r5, r0
    cef0:	sdiv	r3, r2, r0
    cef4:	mls	r3, r0, r3, r2
    cef8:	cmp	r3, #0
    cefc:	bne	cf80 <sas7bdat_write_row+0x11c>
    cf00:	mov	r0, r4
    cf04:	ldr	r1, [r8]
    cf08:	mov	r8, sp
    cf0c:	bl	444c <sas_fill_page@plt>
    cf10:	cmp	r0, #0
    cf14:	bne	d008 <sas7bdat_write_row+0x1a4>
    cf18:	ldr	r2, [r6, #40]	; 0x28
    cf1c:	mov	r1, r0
    cf20:	ldr	r3, [r4, #80]	; 0x50
    cf24:	ldr	ip, [r4, #84]	; 0x54
    cf28:	add	r0, r2, #7
    cf2c:	bic	r0, r0, #7
    cf30:	sub	sp, sp, r0
    cf34:	mov	r0, sp
    cf38:	sub	r3, r3, ip
    cf3c:	cmp	r3, r5
    cf40:	movlt	r5, r3
    cf44:	bl	4278 <memset@plt>
    cf48:	ldr	r3, [r6, #40]	; 0x28
    cf4c:	mov	r2, #256	; 0x100
    cf50:	mov	r1, sp
    cf54:	mov	r0, r4
    cf58:	add	r3, sp, r3
    cf5c:	strh	r5, [r3, #-6]
    cf60:	ldr	r3, [r6, #40]	; 0x28
    cf64:	add	r3, sp, r3
    cf68:	strh	r2, [r3, #-8]
    cf6c:	ldr	r2, [r6, #40]	; 0x28
    cf70:	bl	4428 <readstat_write_bytes@plt>
    cf74:	cmp	r0, #0
    cf78:	bne	d008 <sas7bdat_write_row+0x1a4>
    cf7c:	mov	sp, r8
    cf80:	mov	r2, r7
    cf84:	mov	r1, r9
    cf88:	mov	r0, r4
    cf8c:	bl	4428 <readstat_write_bytes@plt>
    cf90:	b	cea0 <sas7bdat_write_row+0x3c>
    cf94:	mov	r1, r2
    cf98:	mov	r0, r9
    cf9c:	bl	4458 <sas_rle_compressed_len@plt>
    cfa0:	cmp	r7, r0
    cfa4:	mov	r6, r0
    cfa8:	bls	d010 <sas7bdat_write_row+0x1ac>
    cfac:	mov	r1, r0
    cfb0:	mov	r0, #0
    cfb4:	bl	cc70 <sas7bdat_subheader_init>
    cfb8:	mov	r4, r0
    cfbc:	mov	r3, r7
    cfc0:	ldrd	r0, [r0, #4]
    cfc4:	mov	r2, r9
    cfc8:	str	r5, [r4, #12]
    cfcc:	str	r5, [r4, #16]
    cfd0:	bl	44ac <sas_rle_compress@plt>
    cfd4:	cmp	r6, r0
    cfd8:	bne	d038 <sas7bdat_write_row+0x1d4>
    cfdc:	ldr	r2, [r8, #4]
    cfe0:	mov	r0, #0
    cfe4:	ldr	r3, [r2]
    cfe8:	ldr	r1, [r2, #4]
    cfec:	ldr	ip, [r2, #16]
    cff0:	adds	lr, r3, #1
    cff4:	adc	r1, r1, r0
    cff8:	str	lr, [r2]
    cffc:	str	r1, [r2, #4]
    d000:	str	r4, [ip, r3, lsl #2]
    d004:	b	cea0 <sas7bdat_write_row+0x3c>
    d008:	mov	sp, r8
    d00c:	b	cea0 <sas7bdat_write_row+0x3c>
    d010:	mov	r1, r7
    d014:	mov	r0, #0
    d018:	bl	cc70 <sas7bdat_subheader_init>
    d01c:	mov	r4, r0
    d020:	mov	r2, r7
    d024:	ldr	r0, [r0, #4]
    d028:	mov	r1, r9
    d02c:	str	r5, [r4, #12]
    d030:	bl	3ef4 <memcpy@plt>
    d034:	b	cfdc <sas7bdat_write_row+0x178>
    d038:	mov	r0, r4
    d03c:	bl	ccc0 <sas7bdat_subheader_free>
    d040:	mov	r0, #10
    d044:	b	cea0 <sas7bdat_write_row+0x3c>

0000d048 <sas7bdat_make_text_ref.isra.12>:
    d048:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d04c:	strd	r6, [sp, #8]
    d050:	mov	r7, r0
    d054:	mov	r0, r3
    d058:	strd	r8, [sp, #16]
    d05c:	mov	r8, r1
    d060:	strd	sl, [sp, #24]
    d064:	mov	fp, r2
    d068:	mov	sl, r3
    d06c:	str	lr, [sp, #32]
    d070:	sub	sp, sp, #20
    d074:	bl	41d0 <strlen@plt>
    d078:	ldr	r3, [r8]
    d07c:	add	r6, r0, #3
    d080:	mov	r9, r0
    d084:	bic	r6, r6, #3
    d088:	ldr	r0, [fp]
    d08c:	ldr	r1, [r8, #4]
    d090:	sub	r2, r3, #-1073741823	; 0xc0000001
    d094:	ldr	r4, [r0, r2, lsl #2]
    d098:	ldmib	r4, {r2, r5}
    d09c:	add	ip, r6, r5
    d0a0:	cmp	ip, r2
    d0a4:	bhi	d0fc <sas7bdat_make_text_ref.isra.12+0xb4>
    d0a8:	ldr	r0, [r4]
    d0ac:	ldr	r8, [r4, #16]
    d0b0:	mov	r2, r6
    d0b4:	mov	r1, sl
    d0b8:	add	r0, r0, r5
    d0bc:	add	r5, r5, #28
    d0c0:	bl	4290 <strncpy@plt>
    d0c4:	ldr	r3, [r4, #8]
    d0c8:	mov	r0, r7
    d0cc:	strh	r8, [r7]
    d0d0:	strh	r5, [r7, #2]
    d0d4:	strh	r9, [r7, #4]
    d0d8:	add	r6, r3, r6
    d0dc:	str	r6, [r4, #8]
    d0e0:	add	sp, sp, #20
    d0e4:	ldrd	r4, [sp]
    d0e8:	ldrd	r6, [sp, #8]
    d0ec:	ldrd	r8, [sp, #16]
    d0f0:	ldrd	sl, [sp, #24]
    d0f4:	add	sp, sp, #32
    d0f8:	pop	{pc}		; (ldr pc, [sp], #4)
    d0fc:	adds	r3, r3, #1
    d100:	adc	r2, r1, #0
    d104:	lsl	r1, r3, #2
    d108:	str	r3, [r8]
    d10c:	str	r2, [r8, #4]
    d110:	bl	3fcc <realloc@plt>
    d114:	ldm	r8, {r2, ip}
    d118:	mov	r3, r0
    d11c:	mov	r1, #24
    d120:	mov	r0, #1
    d124:	str	r3, [fp]
    d128:	ldr	fp, [r4, #4]
    d12c:	subs	r8, r2, #1
    d130:	strd	r2, [sp, #8]
    d134:	sbc	r3, ip, #0
    d138:	str	r3, [sp, #4]
    d13c:	bl	3d2c <calloc@plt>
    d140:	mov	r4, r0
    d144:	mov	r0, fp
    d148:	bl	40e0 <malloc@plt>
    d14c:	ldr	r3, [sp, #4]
    d150:	stm	r4, {r0, fp}
    d154:	ldr	r2, [sp, #8]
    d158:	str	r8, [r4, #16]
    d15c:	ldr	r5, [r4, #8]
    d160:	str	r3, [r4, #20]
    d164:	ldr	r3, [sp, #12]
    d168:	sub	r2, r2, #-1073741823	; 0xc0000001
    d16c:	str	r4, [r3, r2, lsl #2]
    d170:	b	d0b0 <sas7bdat_make_text_ref.isra.12+0x68>

0000d174 <sas7bdat_emit_header_and_meta_pages>:
    d174:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d178:	ldr	r5, [pc, #1288]	; d688 <sas7bdat_emit_header_and_meta_pages+0x514>
    d17c:	strd	r6, [sp, #8]
    d180:	mov	r6, r0
    d184:	strd	r8, [sp, #16]
    d188:	strd	sl, [sp, #24]
    d18c:	str	lr, [sp, #32]
    d190:	sub	sp, sp, #396	; 0x18c
    d194:	ldr	r7, [r0, #300]	; 0x12c
    d198:	add	r5, pc, r5
    d19c:	str	r0, [sp, #184]	; 0xb8
    d1a0:	bl	cab0 <sas7bdat_row_length>
    d1a4:	cmp	r0, #0
    d1a8:	beq	d640 <sas7bdat_emit_header_and_meta_pages+0x4cc>
    d1ac:	ldr	r8, [r6, #16]
    d1b0:	ldr	r4, [r7]
    d1b4:	cmp	r8, #0
    d1b8:	beq	d378 <sas7bdat_emit_header_and_meta_pages+0x204>
    d1bc:	ldr	r3, [sp, #184]	; 0xb8
    d1c0:	ldr	r3, [r3, #300]	; 0x12c
    d1c4:	ldr	r2, [r3]
    d1c8:	ldr	r1, [r3, #4]
    d1cc:	ldr	r6, [r2, #32]
    d1d0:	ldr	r3, [r1]
    d1d4:	ldr	r0, [r2, #40]	; 0x28
    d1d8:	ldr	lr, [r2, #48]	; 0x30
    d1dc:	subs	ip, r3, #1
    d1e0:	sub	r0, r6, r0
    d1e4:	bmi	d680 <sas7bdat_emit_header_and_meta_pages+0x50c>
    d1e8:	ldr	r2, [r1, #16]
    d1ec:	mov	r6, #1
    d1f0:	mov	r1, r0
    d1f4:	add	r3, r2, r3, lsl #2
    d1f8:	ldr	r2, [r3, #-4]!
    d1fc:	sub	ip, ip, #1
    d200:	ldr	r2, [r2, #8]
    d204:	add	r2, lr, r2
    d208:	cmp	r2, r1
    d20c:	movhi	r1, r0
    d210:	addhi	r6, r6, #1
    d214:	cmn	ip, #1
    d218:	sub	r1, r1, r2
    d21c:	bne	d1f8 <sas7bdat_emit_header_and_meta_pages+0x84>
    d220:	cmp	r8, #1
    d224:	beq	d26c <sas7bdat_emit_header_and_meta_pages+0xf8>
    d228:	ldr	r8, [sp, #184]	; 0xb8
    d22c:	mov	r0, r8
    d230:	bl	cab0 <sas7bdat_row_length>
    d234:	mov	r2, r0
    d238:	ldr	ip, [r4, #32]
    d23c:	mov	r3, #0
    d240:	ldr	lr, [r4, #36]	; 0x24
    d244:	ldrd	r0, [r4, #40]	; 0x28
    d248:	subs	r0, ip, r0
    d24c:	sbc	r1, lr, r1
    d250:	bl	2516c <__aeabi_ldivmod>
    d254:	ldr	r2, [r8, #80]	; 0x50
    d258:	sub	r3, r0, #1
    d25c:	ldr	r4, [r7]
    d260:	add	r3, r3, r2
    d264:	sdiv	r3, r3, r0
    d268:	add	r6, r6, r3
    d26c:	asr	r7, r6, #31
    d270:	mov	r1, #0
    d274:	mov	r2, #124	; 0x7c
    d278:	add	r0, sp, #256	; 0x100
    d27c:	strd	r6, [r4, #56]	; 0x38
    d280:	add	r7, sp, #224	; 0xe0
    d284:	bl	4278 <memset@plt>
    d288:	ldr	r3, [r4, #4]
    d28c:	mov	r2, #34	; 0x22
    d290:	strb	r2, [sp, #259]	; 0x103
    d294:	cmp	r3, #0
    d298:	moveq	r3, r2
    d29c:	movne	r3, #51	; 0x33
    d2a0:	strb	r3, [sp, #256]	; 0x100
    d2a4:	bl	3e88 <machine_is_little_endian@plt>
    d2a8:	ldr	r1, [pc, #988]	; d68c <sas7bdat_emit_header_and_meta_pages+0x518>
    d2ac:	mov	r3, #49	; 0x31
    d2b0:	adds	r0, r0, #0
    d2b4:	movne	r0, #1
    d2b8:	mov	lr, #20
    d2bc:	ldr	ip, [pc, #972]	; d690 <sas7bdat_emit_header_and_meta_pages+0x51c>
    d2c0:	strb	r3, [sp, #263]	; 0x107
    d2c4:	strb	r0, [sp, #261]	; 0x105
    d2c8:	add	r1, pc, r1
    d2cc:	strb	lr, [sp, #294]	; 0x126
    d2d0:	add	lr, sp, #308	; 0x134
    d2d4:	ldrd	r2, [r1]
    d2d8:	ldrd	r0, [r1, #12]
    d2dc:	strd	r2, [lr]
    d2e0:	add	r3, sp, #380	; 0x17c
    d2e4:	mov	r2, #156	; 0x9c
    d2e8:	strd	r0, [r3]
    d2ec:	add	r1, sp, #232	; 0xe8
    d2f0:	mov	r0, sp
    d2f4:	ldr	r3, [r5, ip]
    d2f8:	ldr	ip, [r3]
    d2fc:	ldr	r5, [r3, #4]
    d300:	ldr	lr, [r3, #8]
    d304:	str	ip, [sp, #224]	; 0xe0
    d308:	ldr	ip, [r3, #12]
    d30c:	stmib	r7, {r5, lr}
    d310:	ldr	lr, [r3, #20]
    d314:	str	ip, [r7, #12]
    d318:	ldr	r5, [r3, #16]
    d31c:	ldr	ip, [r3, #24]
    d320:	ldr	r3, [r3, #28]
    d324:	str	r5, [r7, #16]
    d328:	str	lr, [r7, #20]
    d32c:	str	ip, [r7, #24]
    d330:	str	r3, [r7, #28]
    d334:	bl	3ef4 <memcpy@plt>
    d338:	mov	r1, r4
    d33c:	ldr	r4, [sp, #184]	; 0xb8
    d340:	ldm	r7, {r2, r3}
    d344:	mov	r0, r4
    d348:	bl	408c <sas_write_header@plt>
    d34c:	subs	r3, r0, #0
    d350:	str	r3, [sp, #188]	; 0xbc
    d354:	beq	d3b4 <sas7bdat_emit_header_and_meta_pages+0x240>
    d358:	ldr	r0, [sp, #188]	; 0xbc
    d35c:	add	sp, sp, #396	; 0x18c
    d360:	ldrd	r4, [sp]
    d364:	ldrd	r6, [sp, #8]
    d368:	ldrd	r8, [sp, #16]
    d36c:	ldrd	sl, [sp, #24]
    d370:	add	sp, sp, #32
    d374:	pop	{pc}		; (ldr pc, [sp], #4)
    d378:	mov	r0, r6
    d37c:	bl	cab0 <sas7bdat_row_length>
    d380:	mov	r2, r0
    d384:	ldr	ip, [r4, #32]
    d388:	mov	r3, r8
    d38c:	ldr	lr, [r4, #36]	; 0x24
    d390:	ldrd	r0, [r4, #40]	; 0x28
    d394:	subs	r0, ip, r0
    d398:	sbc	r1, lr, r1
    d39c:	bl	2516c <__aeabi_ldivmod>
    d3a0:	cmp	r0, #0
    d3a4:	beq	d674 <sas7bdat_emit_header_and_meta_pages+0x500>
    d3a8:	ldr	r4, [r7]
    d3ac:	ldr	r8, [r6, #16]
    d3b0:	b	d1bc <sas7bdat_emit_header_and_meta_pages+0x48>
    d3b4:	ldr	r3, [r4, #300]	; 0x12c
    d3b8:	mov	r0, #0
    d3bc:	mov	r1, #0
    d3c0:	strd	r0, [sp, #160]	; 0xa0
    d3c4:	ldr	r9, [r3]
    d3c8:	ldr	r6, [r3, #4]
    d3cc:	ldr	r0, [r9, #32]
    d3d0:	bl	40e0 <malloc@plt>
    d3d4:	mov	r8, r0
    d3d8:	strd	sl, [sp, #168]	; 0xa8
    d3dc:	str	r7, [sp, #204]	; 0xcc
    d3e0:	ldrd	r2, [r6]
    d3e4:	ldrd	r0, [sp, #160]	; 0xa0
    d3e8:	cmp	r0, r2
    d3ec:	sbcs	r3, r1, r3
    d3f0:	bge	d634 <sas7bdat_emit_header_and_meta_pages+0x4c0>
    d3f4:	mov	r1, #0
    d3f8:	mov	r0, r8
    d3fc:	ldr	r2, [r9, #32]
    d400:	bl	4278 <memset@plt>
    d404:	mov	r1, #0
    d408:	ldr	r5, [r9, #32]
    d40c:	ldr	r3, [r9, #40]	; 0x28
    d410:	ldr	r7, [r9, #48]	; 0x30
    d414:	ldrd	sl, [sp, #160]	; 0xa0
    d418:	add	r4, r8, r3
    d41c:	sub	r3, r5, r3
    d420:	strh	r1, [r4, #-8]
    d424:	ldr	r1, [r6, #16]
    d428:	ldr	r1, [r1, sl, lsl #2]
    d42c:	ldr	r0, [r1, #8]
    d430:	add	r2, r7, r0
    d434:	cmp	r2, r3
    d438:	bhi	d660 <sas7bdat_emit_header_and_meta_pages+0x4ec>
    d43c:	ldrd	r2, [r6]
    d440:	cmp	sl, r2
    d444:	sbcs	r3, fp, r3
    d448:	bge	d64c <sas7bdat_emit_header_and_meta_pages+0x4d8>
    d44c:	adds	ip, sl, #1
    d450:	adc	r3, fp, #0
    d454:	str	ip, [sp, #168]	; 0xa8
    d458:	str	r3, [sp, #172]	; 0xac
    d45c:	sub	r3, r7, r8
    d460:	str	r6, [sp, #180]	; 0xb4
    d464:	str	r3, [sp, #196]	; 0xc4
    d468:	ldrd	sl, [sp, #168]	; 0xa8
    d46c:	str	r7, [sp, #168]	; 0xa8
    d470:	b	d504 <sas7bdat_emit_header_and_meta_pages+0x390>
    d474:	ldr	r3, [r1, #16]
    d478:	mov	r2, #1
    d47c:	strb	r2, [r4, #9]
    d480:	cmp	r3, #0
    d484:	movne	r3, #4
    d488:	strb	r3, [r4, #8]
    d48c:	ldmib	r1, {r1, r2}
    d490:	mov	r7, sl
    d494:	str	fp, [sp, #192]	; 0xc0
    d498:	ldr	r3, [sp, #196]	; 0xc4
    d49c:	sub	r5, r5, r2
    d4a0:	add	r0, r8, r5
    d4a4:	add	r3, r3, r4
    d4a8:	str	r3, [sp, #200]	; 0xc8
    d4ac:	bl	3ef4 <memcpy@plt>
    d4b0:	ldr	r3, [sp, #180]	; 0xb4
    d4b4:	ldrd	r0, [r3]
    d4b8:	ldr	r3, [sp, #160]	; 0xa0
    d4bc:	cmp	sl, r0
    d4c0:	sub	r2, sl, r3
    d4c4:	sbcs	r3, fp, r1
    d4c8:	uxth	r2, r2
    d4cc:	bge	d59c <sas7bdat_emit_header_and_meta_pages+0x428>
    d4d0:	ldr	ip, [sp, #168]	; 0xa8
    d4d4:	adds	sl, sl, #1
    d4d8:	adc	fp, fp, #0
    d4dc:	ldr	r3, [sp, #180]	; 0xb4
    d4e0:	add	r4, r4, ip
    d4e4:	ldr	r1, [r3, #16]
    d4e8:	ldr	r3, [sp, #200]	; 0xc8
    d4ec:	ldr	r1, [r1, r7, lsl #2]
    d4f0:	sub	r3, r5, r3
    d4f4:	ldr	r0, [r1, #8]
    d4f8:	add	ip, ip, r0
    d4fc:	cmp	ip, r3
    d500:	bhi	d59c <sas7bdat_emit_header_and_meta_pages+0x428>
    d504:	ldr	ip, [r9, #4]
    d508:	sub	r2, r5, r0
    d50c:	ldr	r3, [r1]
    d510:	cmp	ip, #0
    d514:	bne	d550 <sas7bdat_emit_header_and_meta_pages+0x3dc>
    d518:	str	r2, [r4]
    d51c:	str	r0, [r4, #4]
    d520:	ldr	r2, [r1, #12]
    d524:	cmp	r2, #0
    d528:	bne	d474 <sas7bdat_emit_header_and_meta_pages+0x300>
    d52c:	ldr	r2, [r1]
    d530:	add	r2, r2, #4
    d534:	cmp	r2, #3
    d538:	movhi	r2, #0
    d53c:	movls	r2, #1
    d540:	strb	r2, [r4, #9]
    d544:	ldr	r2, [r1, #4]
    d548:	str	r3, [r2]
    d54c:	b	d48c <sas7bdat_emit_header_and_meta_pages+0x318>
    d550:	mov	lr, #0
    d554:	str	r2, [r4]
    d558:	str	r2, [sp, #208]	; 0xd0
    d55c:	str	lr, [r4, #4]
    d560:	str	r0, [r4, #8]
    d564:	str	lr, [r4, #12]
    d568:	ldr	ip, [r1, #12]
    d56c:	str	lr, [sp, #212]	; 0xd4
    d570:	str	r0, [sp, #216]	; 0xd8
    d574:	str	lr, [sp, #220]	; 0xdc
    d578:	cmp	ip, lr
    d57c:	beq	d5e4 <sas7bdat_emit_header_and_meta_pages+0x470>
    d580:	ldr	r3, [r1, #16]
    d584:	mov	r2, #1
    d588:	strb	r2, [r4, #17]
    d58c:	cmp	r3, lr
    d590:	movne	r3, #4
    d594:	strb	r3, [r4, #16]
    d598:	b	d48c <sas7bdat_emit_header_and_meta_pages+0x318>
    d59c:	ldr	r6, [sp, #180]	; 0xb4
    d5a0:	strd	sl, [sp, #168]	; 0xa8
    d5a4:	ldr	r3, [r9, #4]
    d5a8:	mov	r1, r8
    d5ac:	ldr	r0, [sp, #184]	; 0xb8
    d5b0:	cmp	r3, #0
    d5b4:	strhne	r2, [r8, #34]	; 0x22
    d5b8:	strhne	r2, [r8, #36]	; 0x24
    d5bc:	strheq	r2, [r8, #18]
    d5c0:	strheq	r2, [r8, #20]
    d5c4:	ldr	r2, [r9, #32]
    d5c8:	bl	4428 <readstat_write_bytes@plt>
    d5cc:	cmp	r0, #0
    d5d0:	bne	d630 <sas7bdat_emit_header_and_meta_pages+0x4bc>
    d5d4:	ldr	r3, [sp, #192]	; 0xc0
    d5d8:	str	r7, [sp, #160]	; 0xa0
    d5dc:	str	r3, [sp, #164]	; 0xa4
    d5e0:	b	d3e0 <sas7bdat_emit_header_and_meta_pages+0x26c>
    d5e4:	ldr	r2, [r1]
    d5e8:	add	r2, r2, #4
    d5ec:	cmp	r2, #3
    d5f0:	movhi	r2, #0
    d5f4:	movls	r2, #1
    d5f8:	cmp	r3, #-16777216	; 0xff000000
    d5fc:	strb	r2, [r4, #17]
    d600:	bcc	d544 <sas7bdat_emit_header_and_meta_pages+0x3d0>
    d604:	asr	r7, r3, #31
    d608:	mov	r6, r3
    d60c:	mov	r2, r3
    d610:	ldr	r0, [r1, #4]
    d614:	mov	r3, r7
    d618:	strd	r2, [sp, #224]	; 0xe0
    d61c:	ldr	r3, [sp, #204]	; 0xcc
    d620:	str	r6, [r0]
    d624:	ldr	r3, [r3, #4]
    d628:	str	r3, [r0, #4]
    d62c:	b	d48c <sas7bdat_emit_header_and_meta_pages+0x318>
    d630:	str	r0, [sp, #188]	; 0xbc
    d634:	mov	r0, r8
    d638:	bl	3e94 <free@plt>
    d63c:	b	d358 <sas7bdat_emit_header_and_meta_pages+0x1e4>
    d640:	mov	r3, #36	; 0x24
    d644:	str	r3, [sp, #188]	; 0xbc
    d648:	b	d358 <sas7bdat_emit_header_and_meta_pages+0x1e4>
    d64c:	ldrd	r2, [sp, #160]	; 0xa0
    d650:	mov	r7, r2
    d654:	mov	r2, #0
    d658:	str	r3, [sp, #192]	; 0xc0
    d65c:	b	d5a4 <sas7bdat_emit_header_and_meta_pages+0x430>
    d660:	mov	r3, #35	; 0x23
    d664:	mov	r0, r8
    d668:	str	r3, [sp, #188]	; 0xbc
    d66c:	bl	3e94 <free@plt>
    d670:	b	d358 <sas7bdat_emit_header_and_meta_pages+0x1e4>
    d674:	mov	r3, #35	; 0x23
    d678:	str	r3, [sp, #188]	; 0xbc
    d67c:	b	d358 <sas7bdat_emit_header_and_meta_pages+0x1e4>
    d680:	mov	r6, #1
    d684:	b	d220 <sas7bdat_emit_header_and_meta_pages+0xac>
    d688:	.word	0x00037e60
    d68c:	.word	0x00018cd8
    d690:	.word	0x000002f0

0000d694 <sas7bdat_end_data>:
    d694:	ldr	r2, [r0, #16]
    d698:	cmp	r2, #1
    d69c:	beq	d6ac <sas7bdat_end_data+0x18>
    d6a0:	ldr	r3, [r0, #300]	; 0x12c
    d6a4:	ldr	r1, [r3]
    d6a8:	b	444c <sas_fill_page@plt>
    d6ac:	b	d174 <sas7bdat_emit_header_and_meta_pages>

0000d6b0 <sas7bdat_module_ctx_free>:
    d6b0:	str	r4, [sp, #-8]!
    d6b4:	mov	r4, r0
    d6b8:	ldr	r0, [r0]
    d6bc:	str	lr, [sp, #4]
    d6c0:	bl	3e94 <free@plt>
    d6c4:	ldr	r0, [r4, #4]
    d6c8:	bl	cd00 <sas7bdat_subheader_array_free>
    d6cc:	mov	r0, r4
    d6d0:	ldr	r4, [sp]
    d6d4:	ldr	lr, [sp, #4]
    d6d8:	add	sp, sp, #8
    d6dc:	b	3e94 <free@plt>

0000d6e0 <sas7bdat_begin_data>:
    d6e0:	mov	r1, #8
    d6e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d6e8:	mov	r4, r0
    d6ec:	mov	r0, #1
    d6f0:	strd	r6, [sp, #8]
    d6f4:	strd	r8, [sp, #16]
    d6f8:	strd	sl, [sp, #24]
    d6fc:	str	lr, [sp, #32]
    d700:	sub	sp, sp, #108	; 0x6c
    d704:	bl	3d2c <calloc@plt>
    d708:	str	r0, [sp, #20]
    d70c:	mov	r0, r4
    d710:	ldr	r1, [r4, #12]
    d714:	bl	4320 <sas_header_info_init@plt>
    d718:	mov	r5, r0
    d71c:	mov	r0, r4
    d720:	bl	cab0 <sas7bdat_row_length>
    d724:	ldr	lr, [r5, #4]
    d728:	ldr	sl, [r4, #28]
    d72c:	ldr	r6, [r4, #16]
    d730:	cmp	lr, #0
    d734:	ldrd	r8, [r5, #48]	; 0x30
    d738:	add	r2, sl, sl, lsl #1
    d73c:	lsl	ip, sl, #4
    d740:	ldr	r1, [r5, #32]
    d744:	lsl	r2, r2, #2
    d748:	lsl	r3, sl, #3
    d74c:	ldr	fp, [r5, #40]	; 0x28
    d750:	addeq	r2, r2, #20
    d754:	addne	r2, ip, #28
    d758:	strd	r8, [sp]
    d75c:	adds	r8, r8, r0
    d760:	adc	r9, r9, #0
    d764:	add	r7, r3, #20
    d768:	ldr	ip, [r5, #36]	; 0x24
    d76c:	add	r3, r3, #28
    d770:	strd	r8, [sp, #40]	; 0x28
    d774:	ldrd	r8, [sp]
    d778:	adds	r8, r8, r2
    d77c:	adc	r9, r9, #0
    d780:	strd	r8, [sp, #8]
    d784:	ldrd	r8, [sp]
    d788:	adds	r8, r8, r7
    d78c:	sub	r7, r1, fp
    d790:	adc	r9, r9, #0
    d794:	strd	r8, [sp, #24]
    d798:	ldrd	r8, [sp]
    d79c:	adds	r8, r8, r3
    d7a0:	adc	r9, r9, #0
    d7a4:	cmp	r6, #0
    d7a8:	strd	r8, [sp, #32]
    d7ac:	bne	daac <sas7bdat_begin_data+0x3cc>
    d7b0:	cmp	r0, r7
    d7b4:	bhi	da90 <sas7bdat_begin_data+0x3b0>
    d7b8:	mov	r2, r7
    d7bc:	mov	r3, #0
    d7c0:	cmp	lr, #0
    d7c4:	beq	da80 <sas7bdat_begin_data+0x3a0>
    d7c8:	ldrd	r8, [sp, #32]
    d7cc:	cmp	r2, r8
    d7d0:	sbcs	r8, r3, r9
    d7d4:	blt	da90 <sas7bdat_begin_data+0x3b0>
    d7d8:	ldrd	r8, [sp, #8]
    d7dc:	cmp	r2, r8
    d7e0:	sbcs	r3, r3, r9
    d7e4:	blt	da90 <sas7bdat_begin_data+0x3b0>
    d7e8:	ldr	r3, [sp, #20]
    d7ec:	mov	r1, #16
    d7f0:	mov	r0, #1
    d7f4:	str	r5, [r3]
    d7f8:	bl	3d2c <calloc@plt>
    d7fc:	mov	r6, r0
    d800:	mov	r2, #1
    d804:	mov	r3, #0
    d808:	mov	r0, #4
    d80c:	strd	r2, [r6]
    d810:	bl	40e0 <malloc@plt>
    d814:	ldr	r2, [sp]
    d818:	mov	r9, r0
    d81c:	mov	r1, #24
    d820:	mov	r0, #1
    d824:	ldr	r3, [r5, #4]
    d828:	str	r9, [r6, #8]
    d82c:	sub	r7, r7, r2
    d830:	sub	r7, r7, #28
    d834:	cmp	r3, #0
    d838:	movne	r8, #8
    d83c:	moveq	r8, #4
    d840:	sub	r7, r7, r8
    d844:	bl	3d2c <calloc@plt>
    d848:	mov	r8, r0
    d84c:	mov	r0, r7
    d850:	bl	40e0 <malloc@plt>
    d854:	mov	r2, #0
    d858:	mov	r3, #0
    d85c:	stm	r8, {r0, r7}
    d860:	mov	r1, #24
    d864:	mov	r0, #1
    d868:	str	r8, [r9]
    d86c:	strd	r2, [r8, #16]
    d870:	bl	3d2c <calloc@plt>
    d874:	mov	fp, r0
    d878:	add	r0, sl, #4
    d87c:	asr	r3, r0, #31
    d880:	mov	r2, r0
    d884:	mov	r1, #4
    d888:	strd	r2, [fp]
    d88c:	bl	3d2c <calloc@plt>
    d890:	ldr	r3, [r5, #4]
    d894:	str	r0, [fp, #16]
    d898:	ldr	r8, [r4, #28]
    d89c:	cmp	r3, #0
    d8a0:	lsl	r8, r8, #3
    d8a4:	beq	e008 <sas7bdat_begin_data+0x928>
    d8a8:	mov	r7, #16
    d8ac:	mov	r9, #8
    d8b0:	add	r8, r8, #28
    d8b4:	mov	r1, r9
    d8b8:	mov	r0, r8
    d8bc:	bl	438c <sas_subheader_remainder@plt>
    d8c0:	mov	sl, r0
    d8c4:	mov	r1, r8
    d8c8:	mvn	r0, #0
    d8cc:	bl	cc70 <sas7bdat_subheader_init>
    d8d0:	ldr	r3, [r0, #4]
    d8d4:	str	r0, [sp, #52]	; 0x34
    d8d8:	strh	sl, [r3, r9]
    d8dc:	ldr	r1, [r4, #28]
    d8e0:	ldr	r3, [r0, #4]
    d8e4:	cmp	r1, #0
    d8e8:	add	r7, r3, r7
    d8ec:	ble	d94c <sas7bdat_begin_data+0x26c>
    d8f0:	add	sl, r6, #8
    d8f4:	mov	r8, #0
    d8f8:	add	r9, sp, #96	; 0x60
    d8fc:	mov	r1, r8
    d900:	mov	r0, r4
    d904:	bl	4350 <readstat_get_variable@plt>
    d908:	bl	4338 <readstat_variable_get_name@plt>
    d90c:	mov	r3, r0
    d910:	mov	r1, r6
    d914:	mov	r2, sl
    d918:	mov	r0, r9
    d91c:	bl	d048 <sas7bdat_make_text_ref.isra.12>
    d920:	ldrh	r3, [sp, #96]	; 0x60
    d924:	add	r8, r8, #1
    d928:	add	r7, r7, #8
    d92c:	strh	r3, [r7, #-8]
    d930:	ldrh	r3, [sp, #98]	; 0x62
    d934:	strh	r3, [r7, #-6]
    d938:	ldrh	r3, [sp, #100]	; 0x64
    d93c:	strh	r3, [r7, #-4]
    d940:	ldr	r1, [r4, #28]
    d944:	cmp	r8, r1
    d948:	blt	d8fc <sas7bdat_begin_data+0x21c>
    d94c:	ldr	r3, [r5, #4]
    d950:	cmp	r3, #0
    d954:	bne	dae0 <sas7bdat_begin_data+0x400>
    d958:	add	r1, r1, r1, lsl #1
    d95c:	mov	r8, #12
    d960:	mov	r7, #4
    d964:	lsl	sl, r1, #2
    d968:	add	sl, sl, #20
    d96c:	mov	r1, r7
    d970:	mov	r0, sl
    d974:	bl	438c <sas_subheader_remainder@plt>
    d978:	mov	r9, r0
    d97c:	mov	r1, sl
    d980:	mvn	r0, #3
    d984:	bl	cc70 <sas7bdat_subheader_init>
    d988:	ldr	r1, [r0, #4]
    d98c:	mov	ip, r0
    d990:	mov	r2, #0
    d994:	mov	r3, #0
    d998:	str	ip, [sp, #48]	; 0x30
    d99c:	strh	r9, [r1, r7]
    d9a0:	ldr	r0, [r4, #28]
    d9a4:	ldr	r1, [ip, #4]
    d9a8:	strd	r2, [sp, #96]	; 0x60
    d9ac:	cmp	r0, #0
    d9b0:	movgt	sl, #0
    d9b4:	add	r8, r1, r8
    d9b8:	strgt	r6, [sp]
    d9bc:	strgt	fp, [sp, #8]
    d9c0:	bgt	da20 <sas7bdat_begin_data+0x340>
    d9c4:	b	dafc <sas7bdat_begin_data+0x41c>
    d9c8:	ldr	r3, [sp, #96]	; 0x60
    d9cc:	str	r3, [r7], #4
    d9d0:	mov	r1, #0
    d9d4:	mov	ip, #8
    d9d8:	cmp	fp, r1
    d9dc:	mov	r0, ip
    d9e0:	movne	r3, #1
    d9e4:	strbne	r3, [r7, #6]
    d9e8:	beq	dfa4 <sas7bdat_begin_data+0x8c4>
    d9ec:	str	r0, [r7]
    d9f0:	add	sl, sl, #1
    d9f4:	add	r8, r7, #8
    d9f8:	strh	r6, [r7, #4]
    d9fc:	ldr	r3, [sp, #96]	; 0x60
    da00:	ldr	r2, [sp, #100]	; 0x64
    da04:	ldr	r0, [r4, #28]
    da08:	adds	r3, r3, ip
    da0c:	adc	r2, r2, r1
    da10:	str	r3, [sp, #96]	; 0x60
    da14:	cmp	sl, r0
    da18:	str	r2, [sp, #100]	; 0x64
    da1c:	bge	daf4 <sas7bdat_begin_data+0x414>
    da20:	mov	r1, sl
    da24:	mov	r0, r4
    da28:	bl	4350 <readstat_get_variable@plt>
    da2c:	mov	r9, r0
    da30:	mov	r7, r8
    da34:	bl	4338 <readstat_variable_get_name@plt>
    da38:	mov	r6, r0
    da3c:	mov	r0, r9
    da40:	bl	41ac <readstat_variable_get_type@plt>
    da44:	mov	fp, r0
    da48:	mov	r0, r6
    da4c:	bl	41d0 <strlen@plt>
    da50:	ldr	r3, [r5, #4]
    da54:	cmp	r0, #8
    da58:	movls	r6, #4
    da5c:	movhi	r6, #2048	; 0x800
    da60:	cmp	r3, #0
    da64:	beq	d9c8 <sas7bdat_begin_data+0x2e8>
    da68:	ldr	r1, [sp, #96]	; 0x60
    da6c:	add	r7, r8, #8
    da70:	ldr	r3, [sp, #100]	; 0x64
    da74:	str	r1, [r8]
    da78:	str	r3, [r8, #4]
    da7c:	b	d9d0 <sas7bdat_begin_data+0x2f0>
    da80:	ldrd	r8, [sp, #24]
    da84:	cmp	r2, r8
    da88:	sbcs	r8, r3, r9
    da8c:	bge	d7d8 <sas7bdat_begin_data+0xf8>
    da90:	adds	r1, r1, r1
    da94:	adc	ip, ip, ip
    da98:	str	r1, [r5, #32]
    da9c:	str	ip, [r5, #36]	; 0x24
    daa0:	cmp	r6, #0
    daa4:	sub	r7, r1, fp
    daa8:	beq	d7b0 <sas7bdat_begin_data+0xd0>
    daac:	cmp	r6, #1
    dab0:	mov	r2, r7
    dab4:	mov	r3, #0
    dab8:	bne	d7c0 <sas7bdat_begin_data+0xe0>
    dabc:	ldrd	r8, [sp, #40]	; 0x28
    dac0:	cmp	r7, r8
    dac4:	sbcs	r8, r3, r9
    dac8:	bge	d7c0 <sas7bdat_begin_data+0xe0>
    dacc:	adds	r1, r1, r1
    dad0:	adc	ip, ip, ip
    dad4:	str	r1, [r5, #32]
    dad8:	str	ip, [r5, #36]	; 0x24
    dadc:	b	daa0 <sas7bdat_begin_data+0x3c0>
    dae0:	lsl	r1, r1, #4
    dae4:	mov	r8, #16
    dae8:	mov	r7, #8
    daec:	add	sl, r1, #28
    daf0:	b	d96c <sas7bdat_begin_data+0x28c>
    daf4:	ldr	r6, [sp]
    daf8:	ldr	fp, [sp, #8]
    dafc:	movw	r0, #63479	; 0xf7f7
    db00:	movt	r0, #63479	; 0xf7f7
    db04:	ldr	r3, [r5, #4]
    db08:	ldr	r8, [fp, #16]
    db0c:	cmp	r3, #0
    db10:	movne	r1, #808	; 0x328
    db14:	moveq	r1, #480	; 0x1e0
    db18:	bl	cc70 <sas7bdat_subheader_init>
    db1c:	ldr	r3, [r5, #4]
    db20:	mov	r7, r0
    db24:	cmp	r3, #0
    db28:	beq	dfc0 <sas7bdat_begin_data+0x8e0>
    db2c:	mov	r0, r4
    db30:	bl	cab0 <sas7bdat_row_length>
    db34:	ldr	r9, [r4, #28]
    db38:	mov	lr, #0
    db3c:	ldr	r2, [r4, #80]	; 0x50
    db40:	ldr	r1, [r7, #4]
    db44:	str	r0, [sp, #72]	; 0x48
    db48:	str	lr, [sp, #76]	; 0x4c
    db4c:	asr	r3, r2, #31
    db50:	strd	r2, [sp, #80]	; 0x50
    db54:	asr	r3, r9, #31
    db58:	mov	r2, r9
    db5c:	strd	r2, [sp, #88]	; 0x58
    db60:	ldrd	r2, [r5, #32]
    db64:	strd	r2, [sp, #96]	; 0x60
    db68:	mvn	r3, #0
    db6c:	str	r0, [r1, #40]	; 0x28
    db70:	str	lr, [r1, #44]	; 0x2c
    db74:	ldr	r2, [r7, #4]
    db78:	ldrd	r0, [sp, #80]	; 0x50
    db7c:	str	r0, [r2, #48]	; 0x30
    db80:	str	r1, [r2, #52]	; 0x34
    db84:	ldr	r2, [r7, #4]
    db88:	ldrd	r0, [sp, #88]	; 0x58
    db8c:	str	r0, [r2, #72]	; 0x48
    db90:	str	r1, [r2, #76]	; 0x4c
    db94:	ldr	r2, [r7, #4]
    db98:	ldrd	r0, [sp, #96]	; 0x60
    db9c:	str	r0, [r2, #104]	; 0x68
    dba0:	str	r1, [r2, #108]	; 0x6c
    dba4:	ldr	r1, [r7, #4]
    dba8:	str	r3, [r1, #128]	; 0x80
    dbac:	str	r3, [r1, #132]	; 0x84
    dbb0:	str	r3, [r1, #136]	; 0x88
    dbb4:	str	r3, [r1, #140]	; 0x8c
    dbb8:	ldr	r3, [r5, #4]
    dbbc:	movw	r0, #63222	; 0xf6f6
    dbc0:	movt	r0, #63222	; 0xf6f6
    dbc4:	ldr	sl, [fp, #16]
    dbc8:	str	r7, [r8]
    dbcc:	cmp	r3, #0
    dbd0:	movne	r1, #24
    dbd4:	moveq	r1, #12
    dbd8:	bl	cc70 <sas7bdat_subheader_init>
    dbdc:	ldr	r3, [r5, #4]
    dbe0:	cmp	r3, #0
    dbe4:	bne	e018 <sas7bdat_begin_data+0x938>
    dbe8:	ldr	r3, [r0, #4]
    dbec:	ldr	r2, [r4, #28]
    dbf0:	str	r2, [r3, #4]
    dbf4:	ldr	r7, [r4, #28]
    dbf8:	mov	r1, #4
    dbfc:	str	r0, [sl, #4]
    dc00:	mov	r0, r7
    dc04:	bl	3d2c <calloc@plt>
    dc08:	cmp	r7, #0
    dc0c:	str	r0, [sp, #8]
    dc10:	ble	dd50 <sas7bdat_begin_data+0x670>
    dc14:	ldr	r3, [sp, #8]
    dc18:	add	r2, sp, #96	; 0x60
    dc1c:	movw	sl, #64510	; 0xfbfe
    dc20:	movt	sl, #65535	; 0xffff
    dc24:	str	r2, [sp, #24]
    dc28:	add	r2, r6, #8
    dc2c:	strd	sl, [sp, #56]	; 0x38
    dc30:	sub	r3, r3, #4
    dc34:	str	r3, [sp]
    dc38:	mov	r3, #0
    dc3c:	mov	sl, r3
    dc40:	str	r2, [sp, #32]
    dc44:	mov	r1, sl
    dc48:	mov	r0, r4
    dc4c:	bl	4350 <readstat_get_variable@plt>
    dc50:	ldr	r3, [r5, #4]
    dc54:	mov	r8, r0
    dc58:	add	sl, sl, #1
    dc5c:	ldr	r0, [sp, #56]	; 0x38
    dc60:	cmp	r3, #0
    dc64:	movne	r1, #64	; 0x40
    dc68:	moveq	r1, #52	; 0x34
    dc6c:	bl	cc70 <sas7bdat_subheader_init>
    dc70:	mov	r7, r0
    dc74:	mov	r0, r8
    dc78:	bl	3eb8 <readstat_variable_get_format@plt>
    dc7c:	mov	fp, r0
    dc80:	mov	r0, r8
    dc84:	bl	43d4 <readstat_variable_get_label@plt>
    dc88:	ldr	ip, [r5, #4]
    dc8c:	mov	r3, fp
    dc90:	mov	r1, r6
    dc94:	str	r0, [sp, #40]	; 0x28
    dc98:	ldr	r0, [sp, #24]
    dc9c:	ldr	r2, [sp, #32]
    dca0:	cmp	ip, #0
    dca4:	moveq	r9, #34	; 0x22
    dca8:	movne	r9, #46	; 0x2e
    dcac:	moveq	r8, #40	; 0x28
    dcb0:	movne	r8, #52	; 0x34
    dcb4:	cmp	fp, #0
    dcb8:	beq	dcec <sas7bdat_begin_data+0x60c>
    dcbc:	bl	d048 <sas7bdat_make_text_ref.isra.12>
    dcc0:	ldrh	r2, [sp, #96]	; 0x60
    dcc4:	ldr	r3, [r7, #4]
    dcc8:	strh	r2, [r3, r9]
    dccc:	ldr	r3, [r7, #4]
    dcd0:	ldrh	r2, [sp, #98]	; 0x62
    dcd4:	add	r3, r3, r9
    dcd8:	strh	r2, [r3, #2]
    dcdc:	ldr	r3, [r7, #4]
    dce0:	ldrh	r2, [sp, #100]	; 0x64
    dce4:	add	r9, r3, r9
    dce8:	strh	r2, [r9, #4]
    dcec:	mov	r1, r6
    dcf0:	ldr	r0, [sp, #24]
    dcf4:	ldr	ip, [sp, #40]	; 0x28
    dcf8:	ldr	r2, [sp, #32]
    dcfc:	subs	r3, ip, #0
    dd00:	beq	dd34 <sas7bdat_begin_data+0x654>
    dd04:	bl	d048 <sas7bdat_make_text_ref.isra.12>
    dd08:	ldrh	r2, [sp, #96]	; 0x60
    dd0c:	ldr	r3, [r7, #4]
    dd10:	strh	r2, [r3, r8]
    dd14:	ldr	r3, [r7, #4]
    dd18:	ldrh	r2, [sp, #98]	; 0x62
    dd1c:	add	r3, r3, r8
    dd20:	strh	r2, [r3, #2]
    dd24:	ldr	r3, [r7, #4]
    dd28:	ldrh	r2, [sp, #100]	; 0x64
    dd2c:	add	r8, r3, r8
    dd30:	strh	r2, [r8, #4]
    dd34:	ldr	r3, [r4, #28]
    dd38:	ldr	r2, [sp]
    dd3c:	cmp	sl, r3
    dd40:	str	r7, [r2, #4]!
    dd44:	str	r2, [sp]
    dd48:	blt	dc44 <sas7bdat_begin_data+0x564>
    dd4c:	ldr	fp, [sp, #60]	; 0x3c
    dd50:	ldm	r6, {r1, ip}
    dd54:	ldr	r3, [fp]
    dd58:	ldr	r2, [fp, #4]
    dd5c:	ldr	r0, [fp, #16]
    dd60:	adds	r3, r3, r1
    dd64:	lsl	r1, r3, #2
    dd68:	str	r3, [fp]
    dd6c:	adc	r3, r2, ip
    dd70:	str	r3, [fp, #4]
    dd74:	bl	3fcc <realloc@plt>
    dd78:	ldrd	r2, [r6]
    dd7c:	str	r0, [fp, #16]
    dd80:	cmp	r2, #1
    dd84:	sbcs	r3, r3, #0
    dd88:	blt	e0a0 <sas7bdat_begin_data+0x9c0>
    dd8c:	mov	r2, #0
    dd90:	mov	r3, #0
    dd94:	movw	r9, #8224	; 0x2020
    dd98:	movt	r9, #8224	; 0x2020
    dd9c:	mov	r8, #0
    dda0:	strd	r2, [sp]
    dda4:	str	fp, [sp, #24]
    dda8:	mov	fp, r9
    ddac:	str	r5, [sp, #64]	; 0x40
    ddb0:	str	r4, [sp, #68]	; 0x44
    ddb4:	b	ddc0 <sas7bdat_begin_data+0x6e0>
    ddb8:	ldr	r3, [sp, #24]
    ddbc:	ldr	r0, [r3, #16]
    ddc0:	add	r3, r8, #8
    ddc4:	add	r3, r0, r3
    ddc8:	ldr	r2, [r6, #8]
    ddcc:	mvn	r0, #2
    ddd0:	str	r3, [sp, #40]	; 0x28
    ddd4:	ldr	r1, [sp]
    ddd8:	ldr	r3, [sp, #64]	; 0x40
    dddc:	ldr	r4, [r2, r8]
    dde0:	str	r1, [sp, #60]	; 0x3c
    dde4:	ldr	r3, [r3, #4]
    dde8:	cmp	r3, #0
    ddec:	movne	sl, #36	; 0x24
    ddf0:	moveq	sl, #32
    ddf4:	movne	r3, #20
    ddf8:	moveq	r3, #16
    ddfc:	movne	r9, #8
    de00:	moveq	r9, #4
    de04:	cmp	r4, #0
    de08:	str	r3, [sp, #56]	; 0x38
    de0c:	add	r3, r8, #12
    de10:	ldrne	r5, [r4, #8]
    de14:	moveq	r5, r4
    de18:	str	r3, [sp, #32]
    de1c:	add	r5, r5, sl
    de20:	mov	r1, r5
    de24:	bl	cc70 <sas7bdat_subheader_init>
    de28:	mov	r7, r0
    de2c:	mov	r1, r9
    de30:	mov	r0, r5
    de34:	add	r5, r8, #16
    de38:	bl	438c <sas_subheader_remainder@plt>
    de3c:	ldr	r2, [r7, #4]
    de40:	add	r8, r8, #4
    de44:	ldr	r3, [sp, #56]	; 0x38
    de48:	strh	r0, [r2, r9]
    de4c:	ldr	r2, [r7, #4]
    de50:	add	r1, r2, r3
    de54:	str	fp, [r2, r3]
    de58:	str	fp, [r1, #4]
    de5c:	ldr	r0, [r7, #4]
    de60:	ldr	r1, [r4]
    de64:	ldr	r2, [r4, #8]
    de68:	add	r0, r0, sl
    de6c:	bl	3ef4 <memcpy@plt>
    de70:	ldr	r1, [sp]
    de74:	ldrd	r2, [r6]
    de78:	adds	r1, r1, #1
    de7c:	str	r1, [sp]
    de80:	ldr	r1, [sp, #4]
    de84:	adc	r1, r1, #0
    de88:	str	r1, [sp, #4]
    de8c:	ldr	r1, [sp, #40]	; 0x28
    de90:	str	r7, [r1]
    de94:	ldrd	r0, [sp]
    de98:	cmp	r0, r2
    de9c:	sbcs	r1, r1, r3
    dea0:	blt	ddb8 <sas7bdat_begin_data+0x6d8>
    dea4:	cmp	r2, #1
    dea8:	mov	sl, r5
    deac:	ldr	fp, [sp, #24]
    deb0:	sbcs	r3, r3, #0
    deb4:	ldr	r3, [sp, #60]	; 0x3c
    deb8:	ldr	r4, [sp, #68]	; 0x44
    debc:	add	r5, r3, #5
    dec0:	blt	defc <sas7bdat_begin_data+0x81c>
    dec4:	mov	r8, #0
    dec8:	mov	r9, #0
    decc:	ldr	r3, [r6, #8]
    ded0:	ldr	r7, [r3, r8, lsl #2]
    ded4:	ldr	r0, [r7]
    ded8:	bl	3e94 <free@plt>
    dedc:	mov	r0, r7
    dee0:	bl	3e94 <free@plt>
    dee4:	ldrd	r2, [r6]
    dee8:	adds	r8, r8, #1
    deec:	adc	r9, r9, #0
    def0:	cmp	r8, r2
    def4:	sbcs	r3, r9, r3
    def8:	blt	decc <sas7bdat_begin_data+0x7ec>
    defc:	ldr	r0, [r6, #8]
    df00:	bl	3e94 <free@plt>
    df04:	mov	r0, r6
    df08:	bl	3e94 <free@plt>
    df0c:	ldr	r6, [fp, #16]
    df10:	ldr	r2, [sp, #32]
    df14:	ldr	r1, [sp, #52]	; 0x34
    df18:	ldr	r3, [r4, #28]
    df1c:	str	r1, [r6, r2]
    df20:	ldr	r1, [sp, #48]	; 0x30
    df24:	cmp	r3, #0
    df28:	str	r1, [r6, sl]
    df2c:	ble	df50 <sas7bdat_begin_data+0x870>
    df30:	ldr	r1, [sp, #8]
    df34:	add	r5, r6, r5, lsl #2
    df38:	add	r3, r1, r3, lsl #2
    df3c:	mov	r2, r1
    df40:	ldr	r1, [r2], #4
    df44:	cmp	r3, r2
    df48:	str	r1, [r5], #4
    df4c:	bne	df40 <sas7bdat_begin_data+0x860>
    df50:	ldr	r0, [sp, #8]
    df54:	bl	3e94 <free@plt>
    df58:	ldr	r5, [r4, #16]
    df5c:	ldrd	r8, [fp]
    df60:	cmp	r5, #1
    df64:	strd	r8, [fp, #8]
    df68:	beq	e078 <sas7bdat_begin_data+0x998>
    df6c:	ldr	r3, [sp, #20]
    df70:	cmp	r5, #0
    df74:	str	fp, [r3, #4]
    df78:	str	r3, [r4, #300]	; 0x12c
    df7c:	beq	e03c <sas7bdat_begin_data+0x95c>
    df80:	mov	r6, #0
    df84:	mov	r0, r6
    df88:	add	sp, sp, #108	; 0x6c
    df8c:	ldrd	r4, [sp]
    df90:	ldrd	r6, [sp, #8]
    df94:	ldrd	r8, [sp, #16]
    df98:	ldrd	sl, [sp, #24]
    df9c:	add	sp, sp, #32
    dfa0:	pop	{pc}		; (ldr pc, [sp], #4)
    dfa4:	mov	r3, #2
    dfa8:	mov	r0, r9
    dfac:	strb	r3, [r7, #6]
    dfb0:	bl	429c <readstat_variable_get_storage_width@plt>
    dfb4:	mov	ip, r0
    dfb8:	mov	r1, #0
    dfbc:	b	d9ec <sas7bdat_begin_data+0x30c>
    dfc0:	mov	r0, r4
    dfc4:	bl	cab0 <sas7bdat_row_length>
    dfc8:	ldr	lr, [r7, #4]
    dfcc:	mvn	r3, #0
    dfd0:	ldr	r1, [r4, #28]
    dfd4:	ldr	r2, [r5, #32]
    dfd8:	ldr	ip, [r4, #80]	; 0x50
    dfdc:	str	r0, [lr, #20]
    dfe0:	ldr	r0, [r7, #4]
    dfe4:	str	ip, [r0, #24]
    dfe8:	ldr	r0, [r7, #4]
    dfec:	str	r1, [r0, #36]	; 0x24
    dff0:	ldr	r1, [r7, #4]
    dff4:	str	r2, [r1, #52]	; 0x34
    dff8:	ldr	r2, [r7, #4]
    dffc:	str	r3, [r2, #64]	; 0x40
    e000:	str	r3, [r2, #68]	; 0x44
    e004:	b	dbb8 <sas7bdat_begin_data+0x4d8>
    e008:	mov	r7, #12
    e00c:	mov	r9, #4
    e010:	add	r8, r8, #20
    e014:	b	d8b4 <sas7bdat_begin_data+0x1d4>
    e018:	ldr	r2, [r4, #28]
    e01c:	ldr	r1, [r0, #4]
    e020:	asr	r9, r2, #31
    e024:	mov	r3, r9
    e028:	strd	r2, [sp, #96]	; 0x60
    e02c:	ldr	r3, [sp, #100]	; 0x64
    e030:	str	r2, [r1, #8]
    e034:	str	r3, [r1, #12]
    e038:	b	dbf4 <sas7bdat_begin_data+0x514>
    e03c:	mov	r0, r4
    e040:	bl	d174 <sas7bdat_emit_header_and_meta_pages>
    e044:	subs	r6, r0, #0
    e048:	beq	df80 <sas7bdat_begin_data+0x8a0>
    e04c:	ldr	r7, [r4, #300]	; 0x12c
    e050:	cmp	r7, #0
    e054:	beq	df84 <sas7bdat_begin_data+0x8a4>
    e058:	ldr	r0, [r7]
    e05c:	bl	3e94 <free@plt>
    e060:	ldr	r0, [r7, #4]
    e064:	bl	cd00 <sas7bdat_subheader_array_free>
    e068:	mov	r0, r7
    e06c:	bl	3e94 <free@plt>
    e070:	str	r5, [r4, #300]	; 0x12c
    e074:	b	df84 <sas7bdat_begin_data+0x8a4>
    e078:	ldr	r1, [r4, #80]	; 0x50
    e07c:	mov	r0, r6
    e080:	adds	r2, r8, r1
    e084:	adc	r3, r9, r1, asr #31
    e088:	lsl	r1, r2, #2
    e08c:	strd	r2, [fp, #8]
    e090:	bl	3fcc <realloc@plt>
    e094:	str	r0, [fp, #16]
    e098:	ldr	r5, [r4, #16]
    e09c:	b	df6c <sas7bdat_begin_data+0x88c>
    e0a0:	mov	r3, #12
    e0a4:	mov	r5, #4
    e0a8:	mov	sl, r3
    e0ac:	mov	r3, #8
    e0b0:	str	r3, [sp, #32]
    e0b4:	b	defc <sas7bdat_begin_data+0x81c>

0000e0b8 <readstat_begin_writing_sas7bdat>:
    e0b8:	mov	r3, r0
    e0bc:	strd	r4, [sp, #-12]!
    e0c0:	ldr	r4, [pc, #232]	; e1b0 <readstat_begin_writing_sas7bdat+0xf8>
    e0c4:	ldr	r0, [r0, #8]
    e0c8:	str	lr, [sp, #8]
    e0cc:	ldr	lr, [pc, #224]	; e1b4 <readstat_begin_writing_sas7bdat+0xfc>
    e0d0:	add	r4, pc, r4
    e0d4:	ldr	ip, [pc, #220]	; e1b8 <readstat_begin_writing_sas7bdat+0x100>
    e0d8:	str	r4, [r3, #292]	; 0x124
    e0dc:	cmp	r0, #0
    e0e0:	ldr	r4, [pc, #212]	; e1bc <readstat_begin_writing_sas7bdat+0x104>
    e0e4:	moveq	r0, #9
    e0e8:	add	lr, pc, lr
    e0ec:	ldr	r5, [pc, #204]	; e1c0 <readstat_begin_writing_sas7bdat+0x108>
    e0f0:	add	ip, pc, ip
    e0f4:	str	lr, [r3, #236]	; 0xec
    e0f8:	ldr	lr, [pc, #196]	; e1c4 <readstat_begin_writing_sas7bdat+0x10c>
    e0fc:	str	ip, [r3, #240]	; 0xf0
    e100:	add	r4, pc, r4
    e104:	ldr	ip, [pc, #188]	; e1c8 <readstat_begin_writing_sas7bdat+0x110>
    e108:	str	r4, [r3, #244]	; 0xf4
    e10c:	add	r5, pc, r5
    e110:	ldr	r4, [pc, #180]	; e1cc <readstat_begin_writing_sas7bdat+0x114>
    e114:	add	lr, pc, lr
    e118:	streq	r0, [r3, #8]
    e11c:	mov	r0, r3
    e120:	add	ip, pc, ip
    e124:	str	lr, [r3, #248]	; 0xf8
    e128:	ldr	lr, [pc, #160]	; e1d0 <readstat_begin_writing_sas7bdat+0x118>
    e12c:	str	ip, [r3, #252]	; 0xfc
    e130:	add	r4, pc, r4
    e134:	ldr	ip, [pc, #152]	; e1d4 <readstat_begin_writing_sas7bdat+0x11c>
    e138:	str	r4, [r3, #256]	; 0x100
    e13c:	ldr	r4, [pc, #148]	; e1d8 <readstat_begin_writing_sas7bdat+0x120>
    e140:	add	lr, pc, lr
    e144:	add	ip, pc, ip
    e148:	str	lr, [r3, #264]	; 0x108
    e14c:	ldr	lr, [pc, #136]	; e1dc <readstat_begin_writing_sas7bdat+0x124>
    e150:	str	ip, [r3, #268]	; 0x10c
    e154:	add	r4, pc, r4
    e158:	ldr	ip, [pc, #128]	; e1e0 <readstat_begin_writing_sas7bdat+0x128>
    e15c:	str	r4, [r3, #272]	; 0x110
    e160:	ldr	r4, [pc, #124]	; e1e4 <readstat_begin_writing_sas7bdat+0x12c>
    e164:	add	lr, pc, lr
    e168:	str	lr, [r3, #228]	; 0xe4
    e16c:	ldr	lr, [r5, ip]
    e170:	add	r4, pc, r4
    e174:	ldr	ip, [pc, #108]	; e1e8 <readstat_begin_writing_sas7bdat+0x130>
    e178:	str	lr, [r3, #232]	; 0xe8
    e17c:	ldr	lr, [pc, #104]	; e1ec <readstat_begin_writing_sas7bdat+0x134>
    e180:	add	ip, pc, ip
    e184:	str	r4, [r3, #284]	; 0x11c
    e188:	ldrd	r4, [sp]
    e18c:	str	ip, [r3, #276]	; 0x114
    e190:	ldr	ip, [pc, #88]	; e1f0 <readstat_begin_writing_sas7bdat+0x138>
    e194:	add	lr, pc, lr
    e198:	str	lr, [r3, #288]	; 0x120
    e19c:	ldr	lr, [sp, #8]
    e1a0:	add	sp, sp, #12
    e1a4:	add	ip, pc, ip
    e1a8:	str	ip, [r3, #280]	; 0x118
    e1ac:	b	3f3c <readstat_begin_writing_file@plt>
    e1b0:	.word	0xffffe9c4
    e1b4:	.word	0xffffeb54
    e1b8:	.word	0xffffeb20
    e1bc:	.word	0xffffeae4
    e1c0:	.word	0x00036eec
    e1c4:	.word	0xffffeaa8
    e1c8:	.word	0xffffea40
    e1cc:	.word	0xffffec34
    e1d0:	.word	0xffffe9ec
    e1d4:	.word	0xffffea40
    e1d8:	.word	0xffffeca0
    e1dc:	.word	0xffffe920
    e1e0:	.word	0x000002ec
    e1e4:	.word	0xfffff51c
    e1e8:	.word	0xfffff558
    e1ec:	.word	0xfffff514
    e1f0:	.word	0xffffecb8

0000e1f4 <sas_rle_insert_run>:
    e1f4:	cmp	r0, #0
    e1f8:	str	r4, [sp, #-8]!
    e1fc:	str	lr, [sp, #4]
    e200:	add	lr, r0, r1
    e204:	beq	e304 <sas_rle_insert_run+0x110>
    e208:	mov	ip, r0
    e20c:	sub	r0, r2, #32
    e210:	ands	r4, r0, #223	; 0xdf
    e214:	moveq	r0, #1
    e218:	movne	r0, #0
    e21c:	cmp	r2, #0
    e220:	moveq	r0, #1
    e224:	cmp	r0, #0
    e228:	beq	e2b8 <sas_rle_insert_run+0xc4>
    e22c:	cmp	r3, #17
    e230:	bls	e274 <sas_rle_insert_run+0x80>
    e234:	sub	r3, r3, #17
    e238:	cmp	r2, #64	; 0x40
    e23c:	uxtb	r2, r3
    e240:	ubfx	r3, r3, #8, #4
    e244:	addeq	r3, r3, #80	; 0x50
    e248:	strbeq	r3, [ip, r1]
    e24c:	beq	e260 <sas_rle_insert_run+0x6c>
    e250:	cmp	r4, #0
    e254:	addeq	r3, r3, #96	; 0x60
    e258:	addne	r3, r3, #112	; 0x70
    e25c:	strb	r3, [ip, r1]
    e260:	mov	r0, #2
    e264:	strb	r2, [lr, #1]
    e268:	ldr	r4, [sp]
    e26c:	add	sp, sp, #4
    e270:	pop	{pc}		; (ldr pc, [sp], #4)
    e274:	cmp	r3, #1
    e278:	movls	r0, #0
    e27c:	bls	e268 <sas_rle_insert_run+0x74>
    e280:	cmp	r2, #64	; 0x40
    e284:	uxtb	r3, r3
    e288:	subeq	r3, r3, #50	; 0x32
    e28c:	moveq	r0, #1
    e290:	strbeq	r3, [ip, r1]
    e294:	beq	e268 <sas_rle_insert_run+0x74>
    e298:	cmp	r4, #0
    e29c:	mov	r0, #1
    e2a0:	subeq	r3, r3, #34	; 0x22
    e2a4:	subne	r3, r3, #18
    e2a8:	strb	r3, [ip, r1]
    e2ac:	ldr	r4, [sp]
    e2b0:	add	sp, sp, #4
    e2b4:	pop	{pc}		; (ldr pc, [sp], #4)
    e2b8:	cmp	r3, #18
    e2bc:	bhi	e2dc <sas_rle_insert_run+0xe8>
    e2c0:	cmp	r3, #2
    e2c4:	bls	e268 <sas_rle_insert_run+0x74>
    e2c8:	sub	r3, r3, #67	; 0x43
    e2cc:	mov	r0, #2
    e2d0:	strb	r3, [ip, r1]
    e2d4:	strb	r2, [lr, #1]
    e2d8:	b	e268 <sas_rle_insert_run+0x74>
    e2dc:	sub	r3, r3, #18
    e2e0:	mov	r0, #3
    e2e4:	ubfx	r4, r3, #8, #4
    e2e8:	add	r4, r4, #64	; 0x40
    e2ec:	strb	r4, [ip, r1]
    e2f0:	strb	r3, [lr, #1]
    e2f4:	strb	r2, [lr, #2]
    e2f8:	ldr	r4, [sp]
    e2fc:	add	sp, sp, #4
    e300:	pop	{pc}		; (ldr pc, [sp], #4)
    e304:	and	r1, r2, #223	; 0xdf
    e308:	cmp	r1, #0
    e30c:	cmpne	r2, #64	; 0x40
    e310:	bne	e32c <sas_rle_insert_run+0x138>
    e314:	cmp	r3, #18
    e318:	ldr	r4, [sp]
    e31c:	add	sp, sp, #4
    e320:	movcc	r0, #1
    e324:	movcs	r0, #2
    e328:	pop	{pc}		; (ldr pc, [sp], #4)
    e32c:	cmp	r3, #19
    e330:	movcc	r0, #2
    e334:	movcs	r0, #3
    e338:	b	e268 <sas_rle_insert_run+0x74>

0000e33c <sas_rle_copy_run>:
    e33c:	cmp	r0, #0
    e340:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e344:	mov	r5, r3
    e348:	strd	r6, [sp, #8]
    e34c:	strd	r8, [sp, #16]
    e350:	add	r8, r0, r1
    e354:	str	sl, [sp, #24]
    e358:	str	lr, [sp, #28]
    e35c:	beq	e448 <sas_rle_copy_run+0x10c>
    e360:	movw	r3, #4158	; 0x103e
    e364:	mov	r6, r2
    e368:	cmp	r5, r3
    e36c:	movls	r2, r8
    e370:	bls	e3c0 <sas_rle_copy_run+0x84>
    e374:	add	r4, r8, #2
    e378:	mov	sl, #15
    e37c:	mvn	r9, #0
    e380:	movw	r7, #4159	; 0x103f
    e384:	movw	r2, #4159	; 0x103f
    e388:	mov	r1, r6
    e38c:	strb	sl, [r4, #-2]
    e390:	mov	r0, r4
    e394:	sub	r5, r5, #4096	; 0x1000
    e398:	strb	r9, [r4, #-1]
    e39c:	bl	3ef4 <memcpy@plt>
    e3a0:	sub	r5, r5, #63	; 0x3f
    e3a4:	movw	r3, #4158	; 0x103e
    e3a8:	add	r2, r4, r7
    e3ac:	cmp	r5, r3
    e3b0:	add	r4, r4, #4160	; 0x1040
    e3b4:	add	r6, r6, r7
    e3b8:	add	r4, r4, #1
    e3bc:	bhi	e384 <sas_rle_copy_run+0x48>
    e3c0:	cmp	r5, #64	; 0x40
    e3c4:	bls	e40c <sas_rle_copy_run+0xd0>
    e3c8:	sub	r1, r5, #64	; 0x40
    e3cc:	mov	r3, r2
    e3d0:	lsr	r0, r1, #8
    e3d4:	strb	r0, [r3], #2
    e3d8:	strb	r1, [r2, #1]
    e3dc:	mov	r2, r5
    e3e0:	mov	r1, r6
    e3e4:	mov	r0, r3
    e3e8:	bl	3ef4 <memcpy@plt>
    e3ec:	add	r5, r0, r5
    e3f0:	sub	r0, r5, r8
    e3f4:	ldrd	r4, [sp]
    e3f8:	ldrd	r6, [sp, #8]
    e3fc:	ldrd	r8, [sp, #16]
    e400:	ldr	sl, [sp, #24]
    e404:	add	sp, sp, #28
    e408:	pop	{pc}		; (ldr pc, [sp], #4)
    e40c:	cmp	r5, #48	; 0x30
    e410:	bhi	e438 <sas_rle_copy_run+0xfc>
    e414:	cmp	r5, #32
    e418:	bhi	e438 <sas_rle_copy_run+0xfc>
    e41c:	cmp	r5, #16
    e420:	bhi	e438 <sas_rle_copy_run+0xfc>
    e424:	cmp	r5, #0
    e428:	mov	r3, r2
    e42c:	addne	r2, r5, #127	; 0x7f
    e430:	strbne	r2, [r3], #1
    e434:	b	e3dc <sas_rle_copy_run+0xa0>
    e438:	mov	r3, r2
    e43c:	add	r2, r5, #127	; 0x7f
    e440:	strb	r2, [r3], #1
    e444:	b	e3dc <sas_rle_copy_run+0xa0>
    e448:	movw	r3, #4158	; 0x103e
    e44c:	cmp	r5, r3
    e450:	bls	e48c <sas_rle_copy_run+0x150>
    e454:	movw	r2, #4161	; 0x1041
    e458:	sub	r5, r5, #4096	; 0x1000
    e45c:	add	r0, r0, r2
    e460:	sub	r5, r5, #63	; 0x3f
    e464:	cmp	r5, r3
    e468:	bhi	e458 <sas_rle_copy_run+0x11c>
    e46c:	add	r0, r0, r5
    e470:	adds	r3, r5, #0
    e474:	movne	r3, #1
    e478:	cmp	r5, #64	; 0x40
    e47c:	movls	r5, r3
    e480:	addhi	r5, r3, #1
    e484:	add	r0, r5, r0
    e488:	b	e3f4 <sas_rle_copy_run+0xb8>
    e48c:	mov	r0, r5
    e490:	b	e470 <sas_rle_copy_run+0x134>

0000e494 <sas_rle_decompress>:
    e494:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e498:	mov	r4, r2
    e49c:	add	r5, r2, r3
    e4a0:	strd	r6, [sp, #8]
    e4a4:	mov	r6, r0
    e4a8:	mov	r0, #0
    e4ac:	ldr	r7, [pc, #480]	; e694 <sas_rle_decompress+0x200>
    e4b0:	strd	r8, [sp, #16]
    e4b4:	mov	r8, r1
    e4b8:	str	sl, [sp, #24]
    e4bc:	str	lr, [sp, #28]
    e4c0:	add	r7, pc, r7
    e4c4:	cmp	r4, r5
    e4c8:	bcs	e56c <sas_rle_decompress+0xd8>
    e4cc:	mov	r1, r4
    e4d0:	ldrb	r2, [r1], #1
    e4d4:	lsr	r3, r2, #4
    e4d8:	and	r2, r2, #15
    e4dc:	ldr	ip, [r7, r3, lsl #2]
    e4e0:	add	ip, r1, ip
    e4e4:	cmp	r5, ip
    e4e8:	bcc	e59c <sas_rle_decompress+0x108>
    e4ec:	cmp	r3, #15
    e4f0:	addls	pc, pc, r3, lsl #2
    e4f4:	b	e68c <sas_rle_decompress+0x1f8>
    e4f8:	b	e670 <sas_rle_decompress+0x1dc>
    e4fc:	b	e68c <sas_rle_decompress+0x1f8>
    e500:	b	e68c <sas_rle_decompress+0x1f8>
    e504:	b	e68c <sas_rle_decompress+0x1f8>
    e508:	b	e658 <sas_rle_decompress+0x1c4>
    e50c:	b	e640 <sas_rle_decompress+0x1ac>
    e510:	b	e628 <sas_rle_decompress+0x194>
    e514:	b	e610 <sas_rle_decompress+0x17c>
    e518:	b	e608 <sas_rle_decompress+0x174>
    e51c:	b	e600 <sas_rle_decompress+0x16c>
    e520:	b	e5f8 <sas_rle_decompress+0x164>
    e524:	b	e5c4 <sas_rle_decompress+0x130>
    e528:	b	e5b4 <sas_rle_decompress+0x120>
    e52c:	b	e5a4 <sas_rle_decompress+0x110>
    e530:	b	e584 <sas_rle_decompress+0xf0>
    e534:	b	e538 <sas_rle_decompress+0xa4>
    e538:	mov	r4, r1
    e53c:	add	r2, r2, #2
    e540:	mov	r1, #0
    e544:	add	r9, r0, r2
    e548:	cmp	r9, r8
    e54c:	bhi	e59c <sas_rle_decompress+0x108>
    e550:	cmp	r6, #0
    e554:	beq	e684 <sas_rle_decompress+0x1f0>
    e558:	add	r0, r6, r0
    e55c:	bl	4278 <memset@plt>
    e560:	cmp	r4, r5
    e564:	mov	r0, r9
    e568:	bcc	e4cc <sas_rle_decompress+0x38>
    e56c:	ldrd	r4, [sp]
    e570:	ldrd	r6, [sp, #8]
    e574:	ldrd	r8, [sp, #16]
    e578:	ldr	sl, [sp, #24]
    e57c:	add	sp, sp, #28
    e580:	pop	{pc}		; (ldr pc, [sp], #4)
    e584:	add	r2, r2, #2
    e588:	mov	r4, r1
    e58c:	add	r9, r0, r2
    e590:	mov	r1, #32
    e594:	cmp	r9, r8
    e598:	bls	e550 <sas_rle_decompress+0xbc>
    e59c:	mvn	r0, #0
    e5a0:	b	e56c <sas_rle_decompress+0xd8>
    e5a4:	mov	r4, r1
    e5a8:	add	r2, r2, #2
    e5ac:	mov	r1, #64	; 0x40
    e5b0:	b	e544 <sas_rle_decompress+0xb0>
    e5b4:	ldrb	r1, [r4, #1]
    e5b8:	add	r2, r2, #3
    e5bc:	add	r4, r4, #2
    e5c0:	b	e544 <sas_rle_decompress+0xb0>
    e5c4:	add	r2, r2, #49	; 0x31
    e5c8:	add	r9, r2, r0
    e5cc:	cmp	r9, r8
    e5d0:	bhi	e59c <sas_rle_decompress+0x108>
    e5d4:	add	r4, r1, r2
    e5d8:	cmp	r4, r5
    e5dc:	bhi	e59c <sas_rle_decompress+0x108>
    e5e0:	cmp	r6, #0
    e5e4:	beq	e684 <sas_rle_decompress+0x1f0>
    e5e8:	add	r0, r6, r0
    e5ec:	bl	3ef4 <memcpy@plt>
    e5f0:	mov	r0, r9
    e5f4:	b	e4c4 <sas_rle_decompress+0x30>
    e5f8:	add	r2, r2, #33	; 0x21
    e5fc:	b	e5c8 <sas_rle_decompress+0x134>
    e600:	add	r2, r2, #17
    e604:	b	e5c8 <sas_rle_decompress+0x134>
    e608:	add	r2, r2, #1
    e60c:	b	e5c8 <sas_rle_decompress+0x134>
    e610:	ldrb	r3, [r4, #1]
    e614:	mov	r1, #0
    e618:	add	r4, r4, #2
    e61c:	add	r3, r3, #17
    e620:	add	r2, r3, r2, lsl #8
    e624:	b	e544 <sas_rle_decompress+0xb0>
    e628:	ldrb	r3, [r4, #1]
    e62c:	mov	r1, #32
    e630:	add	r4, r4, #2
    e634:	add	r3, r3, #17
    e638:	add	r2, r3, r2, lsl #8
    e63c:	b	e544 <sas_rle_decompress+0xb0>
    e640:	ldrb	r3, [r4, #1]
    e644:	mov	r1, #64	; 0x40
    e648:	add	r4, r4, #2
    e64c:	add	r3, r3, #17
    e650:	add	r2, r3, r2, lsl #8
    e654:	b	e544 <sas_rle_decompress+0xb0>
    e658:	ldrb	r3, [r4, #1]
    e65c:	add	r4, r4, #3
    e660:	ldrb	r1, [r4, #-1]
    e664:	add	r3, r3, #18
    e668:	add	r2, r3, r2, lsl #8
    e66c:	b	e544 <sas_rle_decompress+0xb0>
    e670:	ldrb	r3, [r4, #1]
    e674:	add	r1, r4, #2
    e678:	add	r3, r3, #64	; 0x40
    e67c:	add	r2, r3, r2, lsl #8
    e680:	b	e5c8 <sas_rle_decompress+0x134>
    e684:	mov	r0, r9
    e688:	b	e4c4 <sas_rle_decompress+0x30>
    e68c:	mov	r4, r1
    e690:	b	e4c4 <sas_rle_decompress+0x30>
    e694:	.word	0x00017af8

0000e698 <sas_rle_decompressed_len>:
    e698:	mov	r3, r1
    e69c:	mov	r1, #0
    e6a0:	mov	r2, r0
    e6a4:	mov	r0, r1
    e6a8:	b	4050 <sas_rle_decompress@plt>

0000e6ac <sas_rle_compress>:
    e6ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e6b0:	strd	r6, [sp, #8]
    e6b4:	strd	r8, [sp, #16]
    e6b8:	add	r9, r2, r3
    e6bc:	cmp	r2, r9
    e6c0:	strd	sl, [sp, #24]
    e6c4:	str	lr, [sp, #32]
    e6c8:	sub	sp, sp, #12
    e6cc:	movcs	r8, #0
    e6d0:	movcs	r7, r8
    e6d4:	movcs	r3, r8
    e6d8:	str	r0, [sp, #4]
    e6dc:	bcs	e7fc <sas_rle_compress+0x150>
    e6e0:	mov	r4, r2
    e6e4:	mov	r8, #0
    e6e8:	ldrb	r5, [r4], #1
    e6ec:	mov	r3, r8
    e6f0:	mov	r7, #1
    e6f4:	movw	fp, #4111	; 0x100f
    e6f8:	b	e73c <sas_rle_compress+0x90>
    e6fc:	ldrb	r6, [r4], #1
    e700:	cmp	r7, fp
    e704:	cmpls	r6, r5
    e708:	addeq	r7, r7, #1
    e70c:	beq	e738 <sas_rle_compress+0x8c>
    e710:	cmp	r1, #0
    e714:	cmpne	r5, #64	; 0x40
    e718:	bne	e7ec <sas_rle_compress+0x140>
    e71c:	cmp	r7, #1
    e720:	movls	r1, #0
    e724:	movhi	r1, #1
    e728:	cmp	r1, #0
    e72c:	addeq	r3, r3, r7
    e730:	moveq	r7, #1
    e734:	bne	e7b4 <sas_rle_compress+0x108>
    e738:	mov	r5, r6
    e73c:	cmp	r4, r9
    e740:	and	r1, r5, #223	; 0xdf
    e744:	mov	sl, r4
    e748:	bne	e6fc <sas_rle_compress+0x50>
    e74c:	cmp	r1, #0
    e750:	cmpne	r5, #64	; 0x40
    e754:	bne	e814 <sas_rle_compress+0x168>
    e758:	cmp	r7, #1
    e75c:	movls	r1, #0
    e760:	movhi	r1, #1
    e764:	cmp	r1, #0
    e768:	beq	e7fc <sas_rle_compress+0x150>
    e76c:	ldr	r4, [sp, #4]
    e770:	mov	r1, r8
    e774:	mov	r0, r4
    e778:	bl	e33c <sas_rle_copy_run>
    e77c:	add	r8, r8, r0
    e780:	mov	r3, r7
    e784:	mov	r2, r5
    e788:	mov	r0, r4
    e78c:	mov	r1, r8
    e790:	bl	e1f4 <sas_rle_insert_run>
    e794:	add	r0, r8, r0
    e798:	add	sp, sp, #12
    e79c:	ldrd	r4, [sp]
    e7a0:	ldrd	r6, [sp, #8]
    e7a4:	ldrd	r8, [sp, #16]
    e7a8:	ldrd	sl, [sp, #24]
    e7ac:	add	sp, sp, #32
    e7b0:	pop	{pc}		; (ldr pc, [sp], #4)
    e7b4:	mov	r1, r8
    e7b8:	ldr	r0, [sp, #4]
    e7bc:	bl	e33c <sas_rle_copy_run>
    e7c0:	add	r8, r8, r0
    e7c4:	mov	r3, r7
    e7c8:	ldr	r0, [sp, #4]
    e7cc:	mov	r2, r5
    e7d0:	mov	r1, r8
    e7d4:	bl	e1f4 <sas_rle_insert_run>
    e7d8:	mov	r7, #1
    e7dc:	add	r8, r8, r0
    e7e0:	mov	r2, sl
    e7e4:	mov	r3, #0
    e7e8:	b	e738 <sas_rle_compress+0x8c>
    e7ec:	cmp	r7, #2
    e7f0:	movls	r1, #0
    e7f4:	movhi	r1, #1
    e7f8:	b	e728 <sas_rle_compress+0x7c>
    e7fc:	add	r3, r3, r7
    e800:	mov	r1, r8
    e804:	ldr	r0, [sp, #4]
    e808:	bl	e33c <sas_rle_copy_run>
    e80c:	add	r0, r0, r8
    e810:	b	e798 <sas_rle_compress+0xec>
    e814:	cmp	r7, #2
    e818:	movls	r1, #0
    e81c:	movhi	r1, #1
    e820:	b	e764 <sas_rle_compress+0xb8>

0000e824 <sas_rle_compressed_len>:
    e824:	mov	r3, r1
    e828:	mov	r1, #0
    e82c:	mov	r2, r0
    e830:	mov	r0, r1
    e834:	b	44ac <sas_rle_compress@plt>

0000e838 <xport_namestr_bswap>:
    e838:	str	r4, [sp, #-8]!
    e83c:	mov	r4, r0
    e840:	str	lr, [sp, #4]
    e844:	bl	3e88 <machine_is_little_endian@plt>
    e848:	cmp	r0, #0
    e84c:	beq	e8d4 <xport_namestr_bswap+0x9c>
    e850:	ldrh	r0, [r4]
    e854:	bl	3e7c <byteswap2@plt>
    e858:	strh	r0, [r4]
    e85c:	ldrh	r0, [r4, #2]
    e860:	bl	3e7c <byteswap2@plt>
    e864:	strh	r0, [r4, #2]
    e868:	ldrh	r0, [r4, #4]
    e86c:	bl	3e7c <byteswap2@plt>
    e870:	strh	r0, [r4, #4]
    e874:	ldrh	r0, [r4, #6]
    e878:	bl	3e7c <byteswap2@plt>
    e87c:	strh	r0, [r4, #6]
    e880:	ldrh	r0, [r4, #64]	; 0x40
    e884:	bl	3e7c <byteswap2@plt>
    e888:	strh	r0, [r4, #64]	; 0x40
    e88c:	ldrh	r0, [r4, #66]	; 0x42
    e890:	bl	3e7c <byteswap2@plt>
    e894:	strh	r0, [r4, #66]	; 0x42
    e898:	ldrh	r0, [r4, #68]	; 0x44
    e89c:	bl	3e7c <byteswap2@plt>
    e8a0:	strh	r0, [r4, #68]	; 0x44
    e8a4:	ldrh	r0, [r4, #80]	; 0x50
    e8a8:	bl	3e7c <byteswap2@plt>
    e8ac:	strh	r0, [r4, #80]	; 0x50
    e8b0:	ldrh	r0, [r4, #82]	; 0x52
    e8b4:	bl	3e7c <byteswap2@plt>
    e8b8:	strh	r0, [r4, #82]	; 0x52
    e8bc:	ldr	r0, [r4, #84]	; 0x54
    e8c0:	bl	3d68 <byteswap4@plt>
    e8c4:	str	r0, [r4, #84]	; 0x54
    e8c8:	ldrh	r0, [r4, #120]	; 0x78
    e8cc:	bl	3e7c <byteswap2@plt>
    e8d0:	strh	r0, [r4, #120]	; 0x78
    e8d4:	ldr	r4, [sp]
    e8d8:	add	sp, sp, #4
    e8dc:	pop	{pc}		; (ldr pc, [sp], #4)

0000e8e0 <xport_read_header_record>:
    e8e0:	ldr	r3, [r0, #52]	; 0x34
    e8e4:	strd	r4, [sp, #-16]!
    e8e8:	mov	r4, r1
    e8ec:	mov	r1, #80	; 0x50
    e8f0:	ldr	r2, [r3, #20]
    e8f4:	str	r6, [sp, #8]
    e8f8:	str	lr, [sp, #12]
    e8fc:	sub	sp, sp, #112	; 0x70
    e900:	add	r5, sp, #28
    e904:	ldr	r6, [r3, #12]
    e908:	mov	r0, r5
    e90c:	blx	r6
    e910:	cmp	r0, #79	; 0x4f
    e914:	movle	r0, #2
    e918:	ble	e994 <xport_read_header_record+0xb4>
    e91c:	ldr	r1, [pc, #132]	; e9a8 <xport_read_header_record+0xc8>
    e920:	mov	ip, #0
    e924:	mov	r0, r5
    e928:	add	r5, r4, #20
    e92c:	add	r2, r4, #32
    e930:	add	r3, r4, #28
    e934:	add	lr, r4, #24
    e938:	str	ip, [r4]
    e93c:	str	ip, [r4, #4]
    e940:	str	r5, [sp, #4]
    e944:	add	r5, r4, #16
    e948:	add	r1, pc, r1
    e94c:	str	ip, [r4, #8]
    e950:	str	r5, [sp]
    e954:	str	lr, [sp, #8]
    e958:	str	ip, [r4, #12]
    e95c:	str	r3, [sp, #12]
    e960:	add	r3, r4, #12
    e964:	str	ip, [r4, #16]
    e968:	str	r2, [sp, #16]
    e96c:	mov	r2, r4
    e970:	str	ip, [r4, #20]
    e974:	str	ip, [r4, #24]
    e978:	str	ip, [r4, #28]
    e97c:	str	ip, [r4, #32]
    e980:	strb	ip, [sp, #108]	; 0x6c
    e984:	bl	4260 <__isoc99_sscanf@plt>
    e988:	cmp	r0, #1
    e98c:	movgt	r0, #0
    e990:	movle	r0, #5
    e994:	add	sp, sp, #112	; 0x70
    e998:	ldrd	r4, [sp]
    e99c:	ldr	r6, [sp, #8]
    e9a0:	add	sp, sp, #12
    e9a4:	pop	{pc}		; (ldr pc, [sp], #4)
    e9a8:	.word	0x000176b0

0000e9ac <xport_expect_header_record>:
    e9ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
    e9b0:	strd	r6, [sp, #8]
    e9b4:	mov	r7, r1
    e9b8:	mov	r6, r0
    e9bc:	str	r8, [sp, #16]
    e9c0:	mov	r8, r2
    e9c4:	str	lr, [sp, #20]
    e9c8:	sub	sp, sp, #40	; 0x28
    e9cc:	add	r5, sp, #4
    e9d0:	mov	r1, r5
    e9d4:	bl	e8e0 <xport_read_header_record>
    e9d8:	subs	r4, r0, #0
    e9dc:	bne	ea0c <xport_expect_header_record+0x60>
    e9e0:	ldr	r3, [r6, #380]	; 0x17c
    e9e4:	cmp	r3, #5
    e9e8:	moveq	r1, r7
    e9ec:	beq	e9fc <xport_expect_header_record+0x50>
    e9f0:	cmp	r3, #8
    e9f4:	bne	ea0c <xport_expect_header_record+0x60>
    e9f8:	mov	r1, r8
    e9fc:	mov	r0, r5
    ea00:	bl	3dd4 <strcmp@plt>
    ea04:	cmp	r0, #0
    ea08:	movne	r4, #5
    ea0c:	mov	r0, r4
    ea10:	add	sp, sp, #40	; 0x28
    ea14:	ldrd	r4, [sp]
    ea18:	ldrd	r6, [sp, #8]
    ea1c:	ldr	r8, [sp, #16]
    ea20:	add	sp, sp, #20
    ea24:	pop	{pc}		; (ldr pc, [sp], #4)

0000ea28 <xport_skip_rest_of_record.isra.2>:
    ea28:	str	r4, [sp, #-8]!
    ea2c:	mov	r4, r0
    ea30:	mov	r1, #1
    ea34:	mov	r0, #0
    ea38:	ldr	r3, [r4, #8]
    ea3c:	ldr	r2, [r4, #20]
    ea40:	str	lr, [sp, #4]
    ea44:	blx	r3
    ea48:	cmn	r0, #1
    ea4c:	beq	ea9c <xport_skip_rest_of_record.isra.2+0x74>
    ea50:	movw	r2, #26215	; 0x6667
    ea54:	movt	r2, #26214	; 0x6666
    ea58:	asr	r3, r0, #31
    ea5c:	smull	r1, r2, r2, r0
    ea60:	rsb	r3, r3, r2, asr #5
    ea64:	add	r3, r3, r3, lsl #2
    ea68:	subs	r3, r0, r3, lsl #4
    ea6c:	bne	ea80 <xport_skip_rest_of_record.isra.2+0x58>
    ea70:	ldr	r4, [sp]
    ea74:	add	sp, sp, #4
    ea78:	mov	r0, #0
    ea7c:	pop	{pc}		; (ldr pc, [sp], #4)
    ea80:	rsb	r0, r3, #80	; 0x50
    ea84:	mov	r1, #1
    ea88:	ldr	r3, [r4, #8]
    ea8c:	ldr	r2, [r4, #20]
    ea90:	blx	r3
    ea94:	cmn	r0, #1
    ea98:	bne	ea70 <xport_skip_rest_of_record.isra.2+0x48>
    ea9c:	ldr	r4, [sp]
    eaa0:	add	sp, sp, #4
    eaa4:	mov	r0, #15
    eaa8:	pop	{pc}		; (ldr pc, [sp], #4)

0000eaac <xport_process_row.isra.3>:
    eaac:	ldr	r3, [r0, #64]	; 0x40
    eab0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    eab4:	mov	r5, r0
    eab8:	strd	r6, [sp, #8]
    eabc:	strd	r8, [sp, #16]
    eac0:	strd	sl, [sp, #24]
    eac4:	cmp	r3, #0
    eac8:	str	lr, [sp, #32]
    eacc:	vpush	{d8}
    ead0:	sub	sp, sp, #68	; 0x44
    ead4:	ble	ecc8 <xport_process_row.isra.3+0x21c>
    ead8:	mov	r7, #0
    eadc:	add	r3, sp, #40	; 0x28
    eae0:	vldr	d8, [pc, #608]	; ed48 <xport_process_row.isra.3+0x29c>
    eae4:	mov	fp, r1
    eae8:	add	r8, sp, #48	; 0x30
    eaec:	mov	r4, r7
    eaf0:	str	r7, [sp, #20]
    eaf4:	str	r3, [sp, #28]
    eaf8:	b	ebbc <xport_process_row.isra.3+0x110>
    eafc:	sub	r2, r3, #1
    eb00:	str	r3, [sp, #24]
    eb04:	mov	r0, #0
    eb08:	ldr	r3, [sp, #28]
    eb0c:	mov	r1, #0
    eb10:	add	ip, r7, #1
    eb14:	add	r9, fp, r7
    eb18:	strd	r0, [r3]
    eb1c:	add	r1, fp, ip
    eb20:	add	r0, sp, #41	; 0x29
    eb24:	bl	3f78 <memcmp@plt>
    eb28:	cmp	r0, #0
    eb2c:	ldr	r3, [sp, #24]
    eb30:	bne	ec60 <xport_process_row.isra.3+0x1b4>
    eb34:	ldrb	r0, [fp, r7]
    eb38:	cmp	r0, #46	; 0x2e
    eb3c:	vmoveq	r0, r1, d8
    eb40:	bne	ec50 <xport_process_row.isra.3+0x1a4>
    eb44:	ldrb	r2, [sp, #61]	; 0x3d
    eb48:	orr	r2, r2, #1
    eb4c:	strb	r2, [sp, #61]	; 0x3d
    eb50:	strd	r0, [sp, #48]	; 0x30
    eb54:	ldr	r9, [r5, #16]
    eb58:	add	r7, r7, r3
    eb5c:	cmp	r9, #0
    eb60:	beq	ebac <xport_process_row.isra.3+0x100>
    eb64:	ldr	r3, [r5, #376]	; 0x178
    eb68:	ldr	r3, [r3, sl]
    eb6c:	ldr	r3, [r3, #2144]	; 0x860
    eb70:	cmp	r3, #0
    eb74:	bne	ebac <xport_process_row.isra.3+0x100>
    eb78:	ldr	r3, [r5, #72]	; 0x48
    eb7c:	cmp	r3, #0
    eb80:	bne	ebac <xport_process_row.isra.3+0x100>
    eb84:	ldr	ip, [r5, #36]	; 0x24
    eb88:	mov	r1, r6
    eb8c:	ldrd	r2, [sp, #56]	; 0x38
    eb90:	ldr	r0, [r5, #80]	; 0x50
    eb94:	strd	r2, [sp]
    eb98:	ldm	r8, {r2, r3}
    eb9c:	str	ip, [sp, #8]
    eba0:	blx	r9
    eba4:	cmp	r0, #0
    eba8:	bne	ed34 <xport_process_row.isra.3+0x288>
    ebac:	ldr	r3, [r5, #64]	; 0x40
    ebb0:	add	r4, r4, #1
    ebb4:	cmp	r4, r3
    ebb8:	bge	ecd0 <xport_process_row.isra.3+0x224>
    ebbc:	ldr	r3, [r5, #376]	; 0x178
    ebc0:	mov	r0, #0
    ebc4:	mov	r1, #0
    ebc8:	lsl	sl, r4, #2
    ebcc:	strd	r0, [r8]
    ebd0:	strd	r0, [r8, #8]
    ebd4:	ldr	r6, [r3, r4, lsl #2]
    ebd8:	ldr	r2, [r6]
    ebdc:	ldr	r3, [r6, #1596]	; 0x63c
    ebe0:	cmp	r2, #0
    ebe4:	str	r2, [sp, #56]	; 0x38
    ebe8:	beq	ec04 <xport_process_row.isra.3+0x158>
    ebec:	sub	r2, r3, #3
    ebf0:	vstr	d8, [sp, #32]
    ebf4:	cmp	r2, #5
    ebf8:	bls	eafc <xport_process_row.isra.3+0x50>
    ebfc:	vmov	r0, r1, d8
    ec00:	b	eb50 <xport_process_row.isra.3+0xa4>
    ec04:	lsl	r1, r3, #2
    ec08:	ldr	r0, [sp, #20]
    ec0c:	add	r1, r1, #1
    ec10:	bl	42b4 <readstat_realloc@plt>
    ec14:	subs	r9, r0, #0
    ec18:	str	r9, [sp, #20]
    ec1c:	beq	ed24 <xport_process_row.isra.3+0x278>
    ec20:	ldr	r3, [r6, #1596]	; 0x63c
    ec24:	add	r2, fp, r7
    ec28:	ldr	ip, [r5, #48]	; 0x30
    ec2c:	lsl	r1, r3, #2
    ec30:	add	r1, r1, #1
    ec34:	str	ip, [sp]
    ec38:	bl	420c <readstat_convert@plt>
    ec3c:	cmp	r0, #0
    ec40:	bne	ed2c <xport_process_row.isra.3+0x280>
    ec44:	str	r9, [sp, #48]	; 0x30
    ec48:	ldr	r3, [r6, #1596]	; 0x63c
    ec4c:	b	eb54 <xport_process_row.isra.3+0xa8>
    ec50:	bl	411c <sas_validate_tag@plt>
    ec54:	cmp	r0, #0
    ec58:	beq	ec9c <xport_process_row.isra.3+0x1f0>
    ec5c:	ldr	r3, [r6, #1596]	; 0x63c
    ec60:	mov	r1, r9
    ec64:	mov	r2, r3
    ec68:	ldr	r9, [sp, #28]
    ec6c:	mov	r0, r9
    ec70:	bl	3ef4 <memcpy@plt>
    ec74:	mov	r3, #0
    ec78:	add	r2, sp, #32
    ec7c:	mov	r1, #1
    ec80:	mov	r0, r9
    ec84:	bl	3fd8 <cnxptiee@plt>
    ec88:	cmp	r0, #0
    ec8c:	bne	ed3c <xport_process_row.isra.3+0x290>
    ec90:	ldrd	r0, [sp, #32]
    ec94:	ldr	r3, [r6, #1596]	; 0x63c
    ec98:	b	eb50 <xport_process_row.isra.3+0xa4>
    ec9c:	ldrb	r1, [r9]
    eca0:	ldr	r3, [r6, #1596]	; 0x63c
    eca4:	cmp	r1, #46	; 0x2e
    eca8:	ldrdeq	r0, [sp, #32]
    ecac:	beq	eb44 <xport_process_row.isra.3+0x98>
    ecb0:	strb	r1, [sp, #60]	; 0x3c
    ecb4:	ldrb	r2, [sp, #61]	; 0x3d
    ecb8:	ldrd	r0, [sp, #32]
    ecbc:	orr	r2, r2, #2
    ecc0:	strb	r2, [sp, #61]	; 0x3d
    ecc4:	b	eb50 <xport_process_row.isra.3+0xa4>
    ecc8:	mov	r3, #0
    eccc:	str	r3, [sp, #20]
    ecd0:	ldr	r9, [r5, #72]	; 0x48
    ecd4:	cmp	r9, #0
    ecd8:	bne	ed14 <xport_process_row.isra.3+0x268>
    ecdc:	ldr	r3, [r5, #80]	; 0x50
    ece0:	add	r3, r3, #1
    ece4:	str	r3, [r5, #80]	; 0x50
    ece8:	ldr	r0, [sp, #20]
    ecec:	bl	3e94 <free@plt>
    ecf0:	mov	r0, r9
    ecf4:	add	sp, sp, #68	; 0x44
    ecf8:	vpop	{d8}
    ecfc:	ldrd	r4, [sp]
    ed00:	ldrd	r6, [sp, #8]
    ed04:	ldrd	r8, [sp, #16]
    ed08:	ldrd	sl, [sp, #24]
    ed0c:	add	sp, sp, #32
    ed10:	pop	{pc}		; (ldr pc, [sp], #4)
    ed14:	sub	r3, r9, #1
    ed18:	mov	r9, #0
    ed1c:	str	r3, [r5, #72]	; 0x48
    ed20:	b	ece8 <xport_process_row.isra.3+0x23c>
    ed24:	mov	r9, #3
    ed28:	b	ece8 <xport_process_row.isra.3+0x23c>
    ed2c:	mov	r9, r0
    ed30:	b	ece8 <xport_process_row.isra.3+0x23c>
    ed34:	mov	r9, #4
    ed38:	b	ece8 <xport_process_row.isra.3+0x23c>
    ed3c:	mov	r9, #16
    ed40:	b	ece8 <xport_process_row.isra.3+0x23c>
    ed44:	nop	{0}
    ed48:	.word	0x00000000
    ed4c:	.word	0x7ff80000

0000ed50 <xport_construct_format.constprop.4>:
    ed50:	lsl	ip, r2, #2
    ed54:	strd	r4, [sp, #-24]!	; 0xffffffe8
    ed58:	mov	r5, r0
    ed5c:	strd	r6, [sp, #8]
    ed60:	mov	r7, #0
    ed64:	mov	r6, r3
    ed68:	add	r0, ip, #8
    ed6c:	str	fp, [sp, #16]
    ed70:	add	fp, sp, #20
    ed74:	str	lr, [sp, #20]
    ed78:	sub	sp, sp, #8
    ed7c:	bic	r0, r0, #7
    ed80:	mov	lr, r2
    ed84:	mov	r2, r1
    ed88:	sub	sp, sp, r0
    ed8c:	mov	r3, lr
    ed90:	mov	r4, sp
    ed94:	add	r1, ip, #1
    ed98:	str	r7, [r4], #8
    ed9c:	mov	r0, r4
    eda0:	bl	420c <readstat_convert@plt>
    eda4:	subs	r7, r0, #0
    eda8:	bne	edec <xport_construct_format.constprop.4+0x9c>
    edac:	ldrb	r3, [sp, #8]
    edb0:	cmp	r3, #0
    edb4:	strbeq	r7, [r5]
    edb8:	beq	edec <xport_construct_format.constprop.4+0x9c>
    edbc:	ldr	r3, [fp, #4]
    edc0:	mov	r0, r5
    edc4:	cmp	r3, #0
    edc8:	mov	r3, r4
    edcc:	bne	ee1c <xport_construct_format.constprop.4+0xcc>
    edd0:	cmp	r6, #0
    edd4:	beq	ee08 <xport_construct_format.constprop.4+0xb8>
    edd8:	ldr	r2, [pc, #88]	; ee38 <xport_construct_format.constprop.4+0xe8>
    eddc:	mov	r1, #256	; 0x100
    ede0:	str	r6, [sp]
    ede4:	add	r2, pc, r2
    ede8:	bl	4254 <snprintf@plt>
    edec:	mov	r0, r7
    edf0:	sub	sp, fp, #20
    edf4:	ldrd	r4, [sp]
    edf8:	ldrd	r6, [sp, #8]
    edfc:	ldr	fp, [sp, #16]
    ee00:	add	sp, sp, #20
    ee04:	pop	{pc}		; (ldr pc, [sp], #4)
    ee08:	ldr	r2, [pc, #44]	; ee3c <xport_construct_format.constprop.4+0xec>
    ee0c:	mov	r1, #256	; 0x100
    ee10:	add	r2, pc, r2
    ee14:	bl	4254 <snprintf@plt>
    ee18:	b	edec <xport_construct_format.constprop.4+0x9c>
    ee1c:	ldr	r2, [pc, #28]	; ee40 <xport_construct_format.constprop.4+0xf0>
    ee20:	mov	r1, #256	; 0x100
    ee24:	ldr	ip, [fp, #4]
    ee28:	add	r2, pc, r2
    ee2c:	stm	sp, {r6, ip}
    ee30:	bl	4254 <snprintf@plt>
    ee34:	b	edec <xport_construct_format.constprop.4+0x9c>
    ee38:	.word	0x00017264
    ee3c:	.word	0x00016e80
    ee40:	.word	0x00017218

0000ee44 <readstat_parse_xport>:
    ee44:	strd	r4, [sp, #-36]!	; 0xffffffdc
    ee48:	strd	r6, [sp, #8]
    ee4c:	mov	r6, r0
    ee50:	mov	r0, #1
    ee54:	strd	r8, [sp, #16]
    ee58:	mov	r8, r1
    ee5c:	mov	r1, #384	; 0x180
    ee60:	strd	sl, [sp, #24]
    ee64:	add	fp, sp, #32
    ee68:	mov	r9, r2
    ee6c:	str	lr, [sp, #32]
    ee70:	sub	sp, sp, #252	; 0xfc
    ee74:	ldr	r7, [pc, #3392]	; fbbc <readstat_parse_xport+0xd78>
    ee78:	ldr	r5, [r6, #32]
    ee7c:	bl	3d2c <calloc@plt>
    ee80:	ldrd	r2, [r6, #8]
    ee84:	mov	r4, r0
    ee88:	add	r7, pc, r7
    ee8c:	ldrd	r0, [r6]
    ee90:	ldr	lr, [r6, #36]	; 0x24
    ee94:	str	r5, [r4, #52]	; 0x34
    ee98:	ldr	ip, [r6, #48]	; 0x30
    ee9c:	strd	r2, [r4, #8]
    eea0:	ldrd	r2, [r6, #16]
    eea4:	strd	r0, [r4]
    eea8:	mov	r0, r8
    eeac:	ldr	r1, [r6, #40]	; 0x28
    eeb0:	cmp	ip, #0
    eeb4:	str	r9, [r4, #36]	; 0x24
    eeb8:	str	lr, [r4, #40]	; 0x28
    eebc:	strd	r2, [fp, #-236]	; 0xffffff14
    eec0:	ldrd	r2, [r6, #24]
    eec4:	strgt	ip, [r4, #72]	; 0x48
    eec8:	strd	r2, [r4, #24]
    eecc:	str	r1, [r4, #44]	; 0x2c
    eed0:	ldrd	r2, [fp, #-236]	; 0xffffff14
    eed4:	ldr	r1, [r6, #44]	; 0x2c
    eed8:	strd	r2, [r4, #16]
    eedc:	ldr	r3, [r5]
    eee0:	str	r1, [r4, #68]	; 0x44
    eee4:	ldr	r1, [r5, #20]
    eee8:	blx	r3
    eeec:	cmn	r0, #1
    eef0:	moveq	sl, #1
    eef4:	beq	f0ac <readstat_parse_xport+0x268>
    eef8:	mov	r1, #2
    eefc:	mov	r0, #0
    ef00:	ldr	r3, [r5, #8]
    ef04:	ldr	r2, [r5, #20]
    ef08:	blx	r3
    ef0c:	cmn	r0, #1
    ef10:	str	r0, [r4, #32]
    ef14:	beq	f138 <readstat_parse_xport+0x2f4>
    ef18:	mov	r1, #0
    ef1c:	ldr	r3, [r5, #8]
    ef20:	mov	r0, r1
    ef24:	ldr	r2, [r5, #20]
    ef28:	blx	r3
    ef2c:	cmn	r0, #1
    ef30:	beq	f138 <readstat_parse_xport+0x2f4>
    ef34:	ldr	r6, [r4, #40]	; 0x28
    ef38:	cmp	r6, #0
    ef3c:	beq	ef60 <readstat_parse_xport+0x11c>
    ef40:	ldr	r8, [r4, #44]	; 0x2c
    ef44:	cmp	r8, #0
    ef48:	beq	ef60 <readstat_parse_xport+0x11c>
    ef4c:	mov	r1, r8
    ef50:	mov	r0, r6
    ef54:	bl	3dd4 <strcmp@plt>
    ef58:	cmp	r0, #0
    ef5c:	bne	f44c <readstat_parse_xport+0x608>
    ef60:	sub	r6, fp, #180	; 0xb4
    ef64:	mov	r0, r4
    ef68:	mov	r1, r6
    ef6c:	bl	e8e0 <xport_read_header_record>
    ef70:	subs	sl, r0, #0
    ef74:	bne	f0ac <readstat_parse_xport+0x268>
    ef78:	ldr	r1, [pc, #3136]	; fbc0 <readstat_parse_xport+0xd7c>
    ef7c:	mov	r0, r6
    ef80:	add	r1, pc, r1
    ef84:	bl	3dd4 <strcmp@plt>
    ef88:	cmp	r0, #0
    ef8c:	moveq	r3, #5
    ef90:	streq	r3, [r4, #380]	; 0x17c
    ef94:	bne	f140 <readstat_parse_xport+0x2fc>
    ef98:	ldr	r3, [r4, #52]	; 0x34
    ef9c:	mov	r1, #1
    efa0:	mov	r0, #80	; 0x50
    efa4:	ldr	r8, [r3, #8]
    efa8:	ldr	r2, [r3, #20]
    efac:	blx	r8
    efb0:	cmn	r0, #1
    efb4:	beq	f138 <readstat_parse_xport+0x2f4>
    efb8:	ldr	r3, [r4, #52]	; 0x34
    efbc:	mov	r8, #0
    efc0:	sub	r9, fp, #224	; 0xe0
    efc4:	mvn	r2, #0
    efc8:	mov	r1, #80	; 0x50
    efcc:	mov	r0, r6
    efd0:	ldr	sl, [r3, #12]
    efd4:	str	r8, [fp, #-224]	; 0xffffff20
    efd8:	str	r2, [fp, #-192]	; 0xffffff40
    efdc:	str	r8, [r9, #4]
    efe0:	str	r8, [r9, #8]
    efe4:	str	r8, [r9, #12]
    efe8:	str	r8, [r9, #16]
    efec:	str	r8, [r9, #20]
    eff0:	str	r8, [r9, #24]
    eff4:	str	r8, [r9, #28]
    eff8:	str	r8, [r9, #36]	; 0x24
    effc:	str	r8, [r9, #40]	; 0x28
    f000:	ldr	r2, [r3, #20]
    f004:	blx	sl
    f008:	cmp	r0, #79	; 0x4f
    f00c:	ble	f444 <readstat_parse_xport+0x600>
    f010:	ldr	r1, [pc, #2988]	; fbc4 <readstat_parse_xport+0xd80>
    f014:	sub	r3, fp, #216	; 0xd8
    f018:	sub	r0, fp, #204	; 0xcc
    f01c:	sub	ip, fp, #220	; 0xdc
    f020:	sub	sl, fp, #228	; 0xe4
    f024:	strb	r8, [fp, #-100]	; 0xffffff9c
    f028:	sub	r2, fp, #212	; 0xd4
    f02c:	stm	sp, {r0, r3, ip}
    f030:	mov	r3, sl
    f034:	mov	r0, r6
    f038:	add	r1, pc, r1
    f03c:	str	r9, [sp, #12]
    f040:	bl	4260 <__isoc99_sscanf@plt>
    f044:	ldr	r3, [pc, #2940]	; fbc8 <readstat_parse_xport+0xd84>
    f048:	ldr	r7, [r7, r3]
    f04c:	mov	r1, r7
    f050:	mov	r0, sl
    f054:	bl	3dd4 <strcmp@plt>
    f058:	cmp	r0, #0
    f05c:	add	r7, r7, #4
    f060:	beq	f468 <readstat_parse_xport+0x624>
    f064:	add	r8, r8, #1
    f068:	cmp	r8, #12
    f06c:	bne	f04c <readstat_parse_xport+0x208>
    f070:	ldr	r3, [fp, #-204]	; 0xffffff34
    f074:	mov	r0, r9
    f078:	cmp	r3, #59	; 0x3b
    f07c:	addle	r3, r3, #100	; 0x64
    f080:	strle	r3, [fp, #-204]	; 0xffffff34
    f084:	bl	3e28 <mktime@plt>
    f088:	ldr	r2, [pc, #2876]	; fbcc <readstat_parse_xport+0xd88>
    f08c:	str	r0, [r4, #56]	; 0x38
    f090:	mov	r0, r4
    f094:	ldr	r1, [pc, #2868]	; fbd0 <readstat_parse_xport+0xd8c>
    f098:	add	r2, pc, r2
    f09c:	add	r1, pc, r1
    f0a0:	bl	e9ac <xport_expect_header_record>
    f0a4:	subs	sl, r0, #0
    f0a8:	beq	f168 <readstat_parse_xport+0x324>
    f0ac:	ldr	r3, [r5, #4]
    f0b0:	ldr	r0, [r5, #20]
    f0b4:	blx	r3
    f0b8:	ldr	r3, [r4, #376]	; 0x178
    f0bc:	cmp	r3, #0
    f0c0:	beq	f100 <readstat_parse_xport+0x2bc>
    f0c4:	ldr	ip, [r4, #64]	; 0x40
    f0c8:	cmp	ip, #0
    f0cc:	ble	f0f8 <readstat_parse_xport+0x2b4>
    f0d0:	mov	r5, #0
    f0d4:	ldr	r2, [r3, r5, lsl #2]
    f0d8:	add	r5, r5, #1
    f0dc:	subs	r0, r2, #0
    f0e0:	beq	f0f0 <readstat_parse_xport+0x2ac>
    f0e4:	bl	3e94 <free@plt>
    f0e8:	ldr	ip, [r4, #64]	; 0x40
    f0ec:	ldr	r3, [r4, #376]	; 0x178
    f0f0:	cmp	r5, ip
    f0f4:	blt	f0d4 <readstat_parse_xport+0x290>
    f0f8:	mov	r0, r3
    f0fc:	bl	3e94 <free@plt>
    f100:	ldr	r0, [r4, #48]	; 0x30
    f104:	cmp	r0, #0
    f108:	beq	f110 <readstat_parse_xport+0x2cc>
    f10c:	bl	3da4 <iconv_close@plt>
    f110:	mov	r0, r4
    f114:	bl	3e94 <free@plt>
    f118:	mov	r0, sl
    f11c:	sub	sp, fp, #32
    f120:	ldrd	r4, [sp]
    f124:	ldrd	r6, [sp, #8]
    f128:	ldrd	r8, [sp, #16]
    f12c:	ldrd	sl, [sp, #24]
    f130:	add	sp, sp, #32
    f134:	pop	{pc}		; (ldr pc, [sp], #4)
    f138:	mov	sl, #15
    f13c:	b	f0ac <readstat_parse_xport+0x268>
    f140:	ldr	r1, [pc, #2700]	; fbd4 <readstat_parse_xport+0xd90>
    f144:	mov	r0, r6
    f148:	add	r1, pc, r1
    f14c:	bl	3dd4 <strcmp@plt>
    f150:	cmp	r0, #0
    f154:	movne	sl, #24
    f158:	bne	f0ac <readstat_parse_xport+0x268>
    f15c:	mov	r3, #8
    f160:	str	r3, [r4, #380]	; 0x17c
    f164:	b	ef98 <readstat_parse_xport+0x154>
    f168:	ldr	r2, [pc, #2664]	; fbd8 <readstat_parse_xport+0xd94>
    f16c:	mov	r0, r4
    f170:	ldr	r1, [pc, #2660]	; fbdc <readstat_parse_xport+0xd98>
    f174:	add	r2, pc, r2
    f178:	add	r1, pc, r1
    f17c:	bl	e9ac <xport_expect_header_record>
    f180:	subs	sl, r0, #0
    f184:	bne	f0ac <readstat_parse_xport+0x268>
    f188:	ldr	r3, [r4, #52]	; 0x34
    f18c:	mov	r1, #80	; 0x50
    f190:	mov	r0, r6
    f194:	ldr	r7, [r3, #12]
    f198:	ldr	r2, [r3, #20]
    f19c:	blx	r7
    f1a0:	cmp	r0, #79	; 0x4f
    f1a4:	ble	f444 <readstat_parse_xport+0x600>
    f1a8:	ldr	ip, [r4, #48]	; 0x30
    f1ac:	sub	r2, fp, #172	; 0xac
    f1b0:	add	r8, r4, #245	; 0xf5
    f1b4:	mov	r0, r8
    f1b8:	mov	r1, #129	; 0x81
    f1bc:	ldr	r3, [r4, #380]	; 0x17c
    f1c0:	str	r2, [fp, #-236]	; 0xffffff14
    f1c4:	strb	sl, [fp, #-100]	; 0xffffff9c
    f1c8:	str	ip, [sp]
    f1cc:	cmp	r3, #5
    f1d0:	moveq	r3, #8
    f1d4:	movne	r3, #32
    f1d8:	bl	420c <readstat_convert@plt>
    f1dc:	subs	sl, r0, #0
    f1e0:	bne	f0ac <readstat_parse_xport+0x268>
    f1e4:	ldr	r2, [r4, #52]	; 0x34
    f1e8:	mov	r1, #80	; 0x50
    f1ec:	mov	r0, r6
    f1f0:	ldr	r3, [r2, #12]
    f1f4:	ldr	r2, [r2, #20]
    f1f8:	blx	r3
    f1fc:	cmp	r0, #79	; 0x4f
    f200:	ble	f444 <readstat_parse_xport+0x600>
    f204:	ldr	ip, [r4, #48]	; 0x30
    f208:	add	r3, r4, #84	; 0x54
    f20c:	sub	r7, fp, #148	; 0x94
    f210:	mov	r0, r3
    f214:	mov	r2, r7
    f218:	mov	r1, #161	; 0xa1
    f21c:	str	r3, [fp, #-240]	; 0xffffff10
    f220:	mov	r3, #40	; 0x28
    f224:	strb	sl, [fp, #-100]	; 0xffffff9c
    f228:	str	ip, [sp]
    f22c:	bl	420c <readstat_convert@plt>
    f230:	subs	sl, r0, #0
    f234:	bne	f0ac <readstat_parse_xport+0x268>
    f238:	mov	r1, r9
    f23c:	mov	r0, r4
    f240:	bl	e8e0 <xport_read_header_record>
    f244:	subs	sl, r0, #0
    f248:	bne	f0ac <readstat_parse_xport+0x268>
    f24c:	ldr	r3, [r4, #380]	; 0x17c
    f250:	cmp	r3, #5
    f254:	beq	f478 <readstat_parse_xport+0x634>
    f258:	cmp	r3, #8
    f25c:	bne	f278 <readstat_parse_xport+0x434>
    f260:	ldr	r1, [pc, #2424]	; fbe0 <readstat_parse_xport+0xd9c>
    f264:	mov	r0, r9
    f268:	add	r1, pc, r1
    f26c:	bl	3dd4 <strcmp@plt>
    f270:	cmp	r0, #0
    f274:	bne	f490 <readstat_parse_xport+0x64c>
    f278:	ldr	r3, [fp, #-208]	; 0xffffff30
    f27c:	mov	r1, #4
    f280:	mov	r0, r3
    f284:	str	r3, [r4, #64]	; 0x40
    f288:	bl	3f9c <readstat_calloc@plt>
    f28c:	cmp	r0, #0
    f290:	str	r0, [r4, #376]	; 0x178
    f294:	beq	f690 <readstat_parse_xport+0x84c>
    f298:	ldr	r3, [r4]
    f29c:	ldr	r2, [r4, #64]	; 0x40
    f2a0:	cmp	r3, #0
    f2a4:	beq	f318 <readstat_parse_xport+0x4d4>
    f2a8:	asr	r1, r2, #31
    f2ac:	mov	r0, r2
    f2b0:	ldr	r2, [r4, #56]	; 0x38
    f2b4:	ldr	ip, [r4, #380]	; 0x17c
    f2b8:	strd	r0, [fp, #-172]	; 0xffffff54
    f2bc:	mvn	r0, #0
    f2c0:	mvn	r1, #0
    f2c4:	strd	r0, [fp, #-180]	; 0xffffff4c
    f2c8:	mov	r0, #0
    f2cc:	mov	r1, #0
    f2d0:	str	r8, [fp, #-140]	; 0xffffff74
    f2d4:	strd	r0, [fp, #-148]	; 0xffffff6c
    f2d8:	mov	r0, ip
    f2dc:	ldr	r1, [fp, #-240]	; 0xffffff10
    f2e0:	str	r1, [fp, #-136]	; 0xffffff78
    f2e4:	asr	r1, ip, #31
    f2e8:	strd	r0, [fp, #-156]	; 0xffffff64
    f2ec:	mov	r0, #0
    f2f0:	mov	r1, #0
    f2f4:	strd	r0, [r7, #16]
    f2f8:	mov	r0, r6
    f2fc:	str	r2, [fp, #-164]	; 0xffffff5c
    f300:	str	r2, [fp, #-160]	; 0xffffff60
    f304:	ldr	r1, [r4, #36]	; 0x24
    f308:	blx	r3
    f30c:	cmp	r0, #0
    f310:	bne	f688 <readstat_parse_xport+0x844>
    f314:	ldr	r2, [r4, #64]	; 0x40
    f318:	cmp	r2, #0
    f31c:	ble	f4b0 <readstat_parse_xport+0x66c>
    f320:	mov	sl, r9
    f324:	mov	r7, #0
    f328:	ldr	r9, [fp, #-236]	; 0xffffff14
    f32c:	b	f420 <readstat_parse_xport+0x5dc>
    f330:	bl	4068 <xport_namestr_bswap@plt>
    f334:	movw	r1, #2152	; 0x868
    f338:	mov	r0, #1
    f33c:	bl	3d2c <calloc@plt>
    f340:	mov	r8, r0
    f344:	ldrh	r0, [fp, #-180]	; 0xffffff4c
    f348:	mov	r3, #32
    f34c:	sub	r2, fp, #92	; 0x5c
    f350:	mov	r1, #300	; 0x12c
    f354:	ldrh	ip, [fp, #-112]	; 0xffffff90
    f358:	ldrh	lr, [fp, #-176]	; 0xffffff50
    f35c:	cmp	r0, #2
    f360:	moveq	r0, #0
    f364:	movne	r0, #5
    f368:	cmp	ip, #0
    f36c:	ldrh	ip, [fp, #-114]	; 0xffffff8e
    f370:	stm	r8, {r0, r7}
    f374:	ldrh	r0, [fp, #-116]	; 0xffffff8c
    f378:	str	lr, [r8, #1596]	; 0x63c
    f37c:	ldr	lr, [r4, #380]	; 0x17c
    f380:	str	ip, [r8, #2140]	; 0x85c
    f384:	ldr	ip, [r4, #48]	; 0x30
    f388:	str	r0, [r8, #2136]	; 0x858
    f38c:	movne	r0, #3
    f390:	moveq	r0, #1
    f394:	cmp	lr, #5
    f398:	add	lr, r8, #8
    f39c:	moveq	r3, #8
    f3a0:	moveq	r2, r9
    f3a4:	str	r0, [r8, #2132]	; 0x854
    f3a8:	mov	r0, lr
    f3ac:	str	ip, [sp]
    f3b0:	bl	420c <readstat_convert@plt>
    f3b4:	mov	ip, r0
    f3b8:	mov	r3, #40	; 0x28
    f3bc:	cmp	ip, #0
    f3c0:	sub	r2, fp, #164	; 0xa4
    f3c4:	mov	r1, #1024	; 0x400
    f3c8:	add	r0, r8, #564	; 0x234
    f3cc:	bne	f678 <readstat_parse_xport+0x834>
    f3d0:	ldr	ip, [r4, #48]	; 0x30
    f3d4:	str	ip, [sp]
    f3d8:	bl	420c <readstat_convert@plt>
    f3dc:	subs	r3, r0, #0
    f3e0:	mov	r2, #8
    f3e4:	sub	r1, fp, #124	; 0x7c
    f3e8:	add	r0, r8, #308	; 0x134
    f3ec:	bne	f680 <readstat_parse_xport+0x83c>
    f3f0:	ldr	r3, [r8, #2136]	; 0x858
    f3f4:	ldr	ip, [r8, #2140]	; 0x85c
    f3f8:	str	ip, [sp]
    f3fc:	bl	ed50 <xport_construct_format.constprop.4>
    f400:	cmp	r0, #0
    f404:	bne	f4a4 <readstat_parse_xport+0x660>
    f408:	ldr	r3, [r4, #64]	; 0x40
    f40c:	ldr	r2, [r4, #376]	; 0x178
    f410:	str	r8, [r2, r7, lsl #2]
    f414:	add	r7, r7, #1
    f418:	cmp	r7, r3
    f41c:	bge	f4ac <readstat_parse_xport+0x668>
    f420:	ldr	r3, [r4, #52]	; 0x34
    f424:	mov	r1, #140	; 0x8c
    f428:	mov	r0, r6
    f42c:	ldr	r8, [r3, #12]
    f430:	ldr	r2, [r3, #20]
    f434:	blx	r8
    f438:	cmp	r0, #139	; 0x8b
    f43c:	mov	r0, r6
    f440:	bhi	f330 <readstat_parse_xport+0x4ec>
    f444:	mov	sl, #2
    f448:	b	f0ac <readstat_parse_xport+0x268>
    f44c:	mov	r1, r6
    f450:	mov	r0, r8
    f454:	bl	4104 <iconv_open@plt>
    f458:	cmn	r0, #1
    f45c:	beq	f470 <readstat_parse_xport+0x62c>
    f460:	str	r0, [r4, #48]	; 0x30
    f464:	b	ef60 <readstat_parse_xport+0x11c>
    f468:	str	r8, [fp, #-208]	; 0xffffff30
    f46c:	b	f070 <readstat_parse_xport+0x22c>
    f470:	mov	sl, #7
    f474:	b	f0ac <readstat_parse_xport+0x268>
    f478:	ldr	r1, [pc, #1892]	; fbe4 <readstat_parse_xport+0xda0>
    f47c:	mov	r0, r9
    f480:	add	r1, pc, r1
    f484:	bl	3dd4 <strcmp@plt>
    f488:	cmp	r0, #0
    f48c:	beq	f278 <readstat_parse_xport+0x434>
    f490:	mov	sl, #5
    f494:	b	f0ac <readstat_parse_xport+0x268>
    f498:	ldr	r5, [fp, #-240]	; 0xffffff10
    f49c:	mov	r0, #5
    f4a0:	ldr	sp, [fp, #-236]	; 0xffffff14
    f4a4:	mov	sl, r0
    f4a8:	b	f0ac <readstat_parse_xport+0x268>
    f4ac:	mov	r9, sl
    f4b0:	ldr	r0, [r4, #52]	; 0x34
    f4b4:	bl	ea28 <xport_skip_rest_of_record.isra.2>
    f4b8:	subs	sl, r0, #0
    f4bc:	bne	f0ac <readstat_parse_xport+0x268>
    f4c0:	ldr	r3, [r4, #380]	; 0x17c
    f4c4:	cmp	r3, #5
    f4c8:	beq	f6f8 <readstat_parse_xport+0x8b4>
    f4cc:	mov	r1, r6
    f4d0:	mov	r0, r4
    f4d4:	bl	e8e0 <xport_read_header_record>
    f4d8:	cmp	r0, #0
    f4dc:	bne	f4a4 <readstat_parse_xport+0x660>
    f4e0:	ldr	r1, [pc, #1792]	; fbe8 <readstat_parse_xport+0xda4>
    f4e4:	mov	r0, r6
    f4e8:	add	r1, pc, r1
    f4ec:	bl	3dd4 <strcmp@plt>
    f4f0:	cmp	r0, #0
    f4f4:	beq	f530 <readstat_parse_xport+0x6ec>
    f4f8:	ldr	r1, [pc, #1772]	; fbec <readstat_parse_xport+0xda8>
    f4fc:	mov	r0, r6
    f500:	add	r1, pc, r1
    f504:	bl	3dd4 <strcmp@plt>
    f508:	subs	r3, r0, #0
    f50c:	str	r3, [fp, #-244]	; 0xffffff0c
    f510:	beq	f9b4 <readstat_parse_xport+0xb70>
    f514:	ldr	r1, [pc, #1748]	; fbf0 <readstat_parse_xport+0xdac>
    f518:	mov	r0, r6
    f51c:	add	r1, pc, r1
    f520:	bl	3dd4 <strcmp@plt>
    f524:	subs	r3, r0, #0
    f528:	str	r3, [fp, #-244]	; 0xffffff0c
    f52c:	beq	f794 <readstat_parse_xport+0x950>
    f530:	ldr	ip, [r4, #64]	; 0x40
    f534:	mov	r8, #0
    f538:	str	r8, [r4, #76]	; 0x4c
    f53c:	cmp	ip, r8
    f540:	ble	f0ac <readstat_parse_xport+0x268>
    f544:	mov	r6, r8
    f548:	b	f590 <readstat_parse_xport+0x74c>
    f54c:	ldr	r3, [r4, #36]	; 0x24
    f550:	blx	r9
    f554:	cmp	r0, #1
    f558:	beq	f688 <readstat_parse_xport+0x844>
    f55c:	cmp	r0, #2
    f560:	ldrne	ip, [r4, #64]	; 0x40
    f564:	bne	f5b4 <readstat_parse_xport+0x770>
    f568:	mov	r3, #1
    f56c:	ldr	ip, [r4, #64]	; 0x40
    f570:	str	r3, [r7, #2144]	; 0x860
    f574:	ldr	r0, [r4, #76]	; 0x4c
    f578:	add	r6, r6, #1
    f57c:	cmp	r6, ip
    f580:	ldr	r3, [r7, #1596]	; 0x63c
    f584:	add	r0, r0, r3
    f588:	str	r0, [r4, #76]	; 0x4c
    f58c:	bge	f5bc <readstat_parse_xport+0x778>
    f590:	ldr	r9, [r4, #8]
    f594:	mov	r0, r6
    f598:	ldr	r3, [r4, #376]	; 0x178
    f59c:	cmp	r9, #0
    f5a0:	ldr	r7, [r3, r6, lsl #2]
    f5a4:	add	r2, r7, #308	; 0x134
    f5a8:	mov	r1, r7
    f5ac:	str	r8, [r7, #2148]	; 0x864
    f5b0:	bne	f54c <readstat_parse_xport+0x708>
    f5b4:	add	r8, r8, #1
    f5b8:	b	f574 <readstat_parse_xport+0x730>
    f5bc:	cmp	r0, #0
    f5c0:	beq	f0ac <readstat_parse_xport+0x268>
    f5c4:	ldr	r3, [r4, #16]
    f5c8:	cmp	r3, #0
    f5cc:	beq	f0ac <readstat_parse_xport+0x268>
    f5d0:	bl	4200 <readstat_malloc@plt>
    f5d4:	mov	r8, r0
    f5d8:	ldr	r0, [r4, #76]	; 0x4c
    f5dc:	bl	4200 <readstat_malloc@plt>
    f5e0:	clz	r3, r0
    f5e4:	cmp	r8, #0
    f5e8:	lsr	r3, r3, #5
    f5ec:	moveq	r3, #1
    f5f0:	mov	r7, r0
    f5f4:	cmp	r3, #0
    f5f8:	bne	f71c <readstat_parse_xport+0x8d8>
    f5fc:	mov	r1, #32
    f600:	ldr	r2, [r4, #76]	; 0x4c
    f604:	mov	r6, r3
    f608:	bl	4278 <memset@plt>
    f60c:	ldr	r3, [r4, #52]	; 0x34
    f610:	mov	r0, r8
    f614:	ldr	r1, [r4, #76]	; 0x4c
    f618:	ldr	r9, [r3, #12]
    f61c:	ldr	r2, [r3, #20]
    f620:	blx	r9
    f624:	cmn	r0, #1
    f628:	beq	f78c <readstat_parse_xport+0x948>
    f62c:	ldr	r3, [r4, #76]	; 0x4c
    f630:	cmp	r3, r0
    f634:	bhi	f784 <readstat_parse_xport+0x940>
    f638:	cmp	r3, #0
    f63c:	beq	f670 <readstat_parse_xport+0x82c>
    f640:	ldrb	r2, [r8]
    f644:	cmp	r2, #32
    f648:	subeq	r2, r3, #1
    f64c:	moveq	r3, r8
    f650:	addeq	r2, r2, r8
    f654:	beq	f668 <readstat_parse_xport+0x824>
    f658:	b	f698 <readstat_parse_xport+0x854>
    f65c:	ldrb	r1, [r3, #1]!
    f660:	cmp	r1, #32
    f664:	bne	f698 <readstat_parse_xport+0x854>
    f668:	cmp	r3, r2
    f66c:	bne	f65c <readstat_parse_xport+0x818>
    f670:	add	r6, r6, #1
    f674:	b	f60c <readstat_parse_xport+0x7c8>
    f678:	mov	sl, ip
    f67c:	b	f0ac <readstat_parse_xport+0x268>
    f680:	mov	sl, r3
    f684:	b	f0ac <readstat_parse_xport+0x268>
    f688:	mov	sl, #4
    f68c:	b	f0ac <readstat_parse_xport+0x268>
    f690:	mov	sl, #3
    f694:	b	f0ac <readstat_parse_xport+0x268>
    f698:	cmp	r6, #0
    f69c:	bne	f6c4 <readstat_parse_xport+0x880>
    f6a0:	b	f72c <readstat_parse_xport+0x8e8>
    f6a4:	ldr	r3, [r4, #68]	; 0x44
    f6a8:	cmp	r3, #0
    f6ac:	ble	f6bc <readstat_parse_xport+0x878>
    f6b0:	ldr	r2, [r4, #80]	; 0x50
    f6b4:	cmp	r3, r2
    f6b8:	beq	f784 <readstat_parse_xport+0x940>
    f6bc:	subs	r6, r6, #1
    f6c0:	beq	f72c <readstat_parse_xport+0x8e8>
    f6c4:	mov	r1, r7
    f6c8:	mov	r0, r4
    f6cc:	bl	eaac <xport_process_row.isra.3>
    f6d0:	cmp	r0, #0
    f6d4:	beq	f6a4 <readstat_parse_xport+0x860>
    f6d8:	mov	sl, r0
    f6dc:	mov	r0, r8
    f6e0:	bl	3e94 <free@plt>
    f6e4:	cmp	r7, #0
    f6e8:	beq	f0ac <readstat_parse_xport+0x268>
    f6ec:	mov	r0, r7
    f6f0:	bl	3e94 <free@plt>
    f6f4:	b	f0ac <readstat_parse_xport+0x268>
    f6f8:	ldr	r2, [pc, #1268]	; fbf4 <readstat_parse_xport+0xdb0>
    f6fc:	mov	r0, r4
    f700:	ldr	r1, [pc, #1264]	; fbf8 <readstat_parse_xport+0xdb4>
    f704:	add	r2, pc, r2
    f708:	add	r1, pc, r1
    f70c:	bl	e9ac <xport_expect_header_record>
    f710:	cmp	r0, #0
    f714:	beq	f530 <readstat_parse_xport+0x6ec>
    f718:	b	f4a4 <readstat_parse_xport+0x660>
    f71c:	cmp	r8, #0
    f720:	mov	sl, #3
    f724:	beq	f6e4 <readstat_parse_xport+0x8a0>
    f728:	b	f6dc <readstat_parse_xport+0x898>
    f72c:	mov	r1, r8
    f730:	mov	r0, r4
    f734:	bl	eaac <xport_process_row.isra.3>
    f738:	cmp	r0, #0
    f73c:	bne	f6d8 <readstat_parse_xport+0x894>
    f740:	ldr	r1, [r4, #28]
    f744:	ldr	r3, [r4, #52]	; 0x34
    f748:	ldr	r0, [r4, #32]
    f74c:	ldr	r2, [r4, #36]	; 0x24
    f750:	ldr	r6, [r3, #16]
    f754:	ldr	r3, [r3, #20]
    f758:	blx	r6
    f75c:	cmp	r0, #0
    f760:	bne	f6d8 <readstat_parse_xport+0x894>
    f764:	ldr	r3, [r4, #68]	; 0x44
    f768:	cmp	r3, #0
    f76c:	ble	f77c <readstat_parse_xport+0x938>
    f770:	ldr	r2, [r4, #80]	; 0x50
    f774:	cmp	r3, r2
    f778:	beq	f784 <readstat_parse_xport+0x940>
    f77c:	mov	r6, r0
    f780:	b	f60c <readstat_parse_xport+0x7c8>
    f784:	mov	sl, #0
    f788:	b	f6dc <readstat_parse_xport+0x898>
    f78c:	mov	sl, #2
    f790:	b	f6dc <readstat_parse_xport+0x898>
    f794:	ldr	r3, [fp, #-168]	; 0xffffff58
    f798:	str	r3, [fp, #-256]	; 0xffffff00
    f79c:	str	sl, [fp, #-252]	; 0xffffff04
    f7a0:	str	r5, [fp, #-240]	; 0xffffff10
    f7a4:	b	f934 <readstat_parse_xport+0xaf0>
    f7a8:	ldrh	r5, [fp, #-224]	; 0xffffff20
    f7ac:	ldrh	r8, [fp, #-222]	; 0xffffff22
    f7b0:	ldrh	r6, [fp, #-220]	; 0xffffff24
    f7b4:	ldrh	sl, [fp, #-218]	; 0xffffff26
    f7b8:	ldrh	r7, [fp, #-216]	; 0xffffff28
    f7bc:	clz	r3, r5
    f7c0:	ldr	r2, [r4, #64]	; 0x40
    f7c4:	lsr	r3, r3, #5
    f7c8:	cmp	r2, r5
    f7cc:	orrlt	r3, r3, #1
    f7d0:	cmp	r3, #0
    f7d4:	bne	f498 <readstat_parse_xport+0x654>
    f7d8:	add	r2, r8, #8
    f7dc:	add	r3, r6, #8
    f7e0:	ldr	r1, [r4, #52]	; 0x34
    f7e4:	bic	r2, r2, #7
    f7e8:	bic	r3, r3, #7
    f7ec:	ldr	ip, [r4, #376]	; 0x178
    f7f0:	sub	sp, sp, r2
    f7f4:	add	r0, sl, #8
    f7f8:	add	lr, sp, #16
    f7fc:	bic	r0, r0, #7
    f800:	sub	sp, sp, r3
    f804:	add	r2, r7, #8
    f808:	add	r3, sp, #16
    f80c:	bic	r2, r2, #7
    f810:	str	lr, [fp, #-260]	; 0xfffffefc
    f814:	sub	sp, sp, r0
    f818:	sub	r5, r5, #-1073741823	; 0xc0000001
    f81c:	add	r0, sp, #16
    f820:	sub	sp, sp, r2
    f824:	ldr	r5, [ip, r5, lsl #2]
    f828:	add	ip, sp, #16
    f82c:	ldr	r2, [r1, #20]
    f830:	str	r0, [fp, #-264]	; 0xfffffef8
    f834:	mov	r0, lr
    f838:	str	r3, [fp, #-248]	; 0xffffff08
    f83c:	ldr	r3, [r1, #12]
    f840:	mov	r1, r8
    f844:	str	ip, [fp, #-268]	; 0xfffffef4
    f848:	blx	r3
    f84c:	cmp	r8, r0
    f850:	bne	fb78 <readstat_parse_xport+0xd34>
    f854:	ldr	r2, [r4, #52]	; 0x34
    f858:	mov	r1, r6
    f85c:	ldr	r0, [fp, #-248]	; 0xffffff08
    f860:	ldr	r3, [r2, #12]
    f864:	ldr	r2, [r2, #20]
    f868:	blx	r3
    f86c:	cmp	r6, r0
    f870:	bne	fb78 <readstat_parse_xport+0xd34>
    f874:	ldr	r2, [r4, #52]	; 0x34
    f878:	mov	r1, sl
    f87c:	ldr	r0, [fp, #-264]	; 0xfffffef8
    f880:	ldr	r3, [r2, #12]
    f884:	ldr	r2, [r2, #20]
    f888:	blx	r3
    f88c:	cmp	sl, r0
    f890:	bne	fb78 <readstat_parse_xport+0xd34>
    f894:	ldr	sl, [fp, #-268]	; 0xfffffef4
    f898:	mov	r1, r7
    f89c:	ldr	r2, [r4, #52]	; 0x34
    f8a0:	mov	r0, sl
    f8a4:	ldr	r3, [r2, #12]
    f8a8:	ldr	r2, [r2, #20]
    f8ac:	blx	r3
    f8b0:	cmp	r7, r0
    f8b4:	bne	fb78 <readstat_parse_xport+0xd34>
    f8b8:	ldr	ip, [r4, #48]	; 0x30
    f8bc:	mov	r3, r8
    f8c0:	mov	r1, #300	; 0x12c
    f8c4:	add	r0, r5, #8
    f8c8:	ldr	r2, [fp, #-260]	; 0xfffffefc
    f8cc:	str	ip, [sp]
    f8d0:	bl	420c <readstat_convert@plt>
    f8d4:	cmp	r0, #0
    f8d8:	bne	fb58 <readstat_parse_xport+0xd14>
    f8dc:	ldr	ip, [r4, #48]	; 0x30
    f8e0:	mov	r3, r7
    f8e4:	mov	r2, sl
    f8e8:	mov	r1, #1024	; 0x400
    f8ec:	add	r0, r5, #564	; 0x234
    f8f0:	str	ip, [sp]
    f8f4:	bl	420c <readstat_convert@plt>
    f8f8:	cmp	r0, #0
    f8fc:	bne	fb58 <readstat_parse_xport+0xd14>
    f900:	ldr	r3, [r5, #2140]	; 0x85c
    f904:	mov	r2, r6
    f908:	add	r0, r5, #308	; 0x134
    f90c:	ldr	r1, [fp, #-248]	; 0xffffff08
    f910:	str	r3, [sp]
    f914:	ldr	r3, [r5, #2136]	; 0x858
    f918:	bl	ed50 <xport_construct_format.constprop.4>
    f91c:	cmp	r0, #0
    f920:	bne	fb58 <readstat_parse_xport+0xd14>
    f924:	ldr	r3, [fp, #-244]	; 0xffffff0c
    f928:	add	r3, r3, #1
    f92c:	str	r3, [fp, #-244]	; 0xffffff0c
    f930:	ldr	sp, [fp, #-236]	; 0xffffff14
    f934:	ldr	r3, [fp, #-256]	; 0xffffff00
    f938:	ldr	r2, [fp, #-244]	; 0xffffff0c
    f93c:	cmp	r3, r2
    f940:	ldr	r2, [r4, #52]	; 0x34
    f944:	ble	fb88 <readstat_parse_xport+0xd44>
    f948:	mov	r1, #10
    f94c:	mov	r0, r9
    f950:	ldr	r3, [r2, #12]
    f954:	str	sp, [fp, #-236]	; 0xffffff14
    f958:	ldr	r2, [r2, #20]
    f95c:	blx	r3
    f960:	cmp	r0, #10
    f964:	bne	fb78 <readstat_parse_xport+0xd34>
    f968:	bl	3e88 <machine_is_little_endian@plt>
    f96c:	cmp	r0, #0
    f970:	beq	f7a8 <readstat_parse_xport+0x964>
    f974:	ldrh	r0, [fp, #-224]	; 0xffffff20
    f978:	bl	3e7c <byteswap2@plt>
    f97c:	mov	r5, r0
    f980:	ldrh	r0, [fp, #-222]	; 0xffffff22
    f984:	bl	3e7c <byteswap2@plt>
    f988:	mov	r8, r0
    f98c:	ldrh	r0, [fp, #-220]	; 0xffffff24
    f990:	bl	3e7c <byteswap2@plt>
    f994:	mov	r6, r0
    f998:	ldrh	r0, [fp, #-218]	; 0xffffff26
    f99c:	bl	3e7c <byteswap2@plt>
    f9a0:	mov	sl, r0
    f9a4:	ldrh	r0, [fp, #-216]	; 0xffffff28
    f9a8:	bl	3e7c <byteswap2@plt>
    f9ac:	mov	r7, r0
    f9b0:	b	f7bc <readstat_parse_xport+0x978>
    f9b4:	ldr	r3, [fp, #-168]	; 0xffffff58
    f9b8:	str	r3, [fp, #-252]	; 0xffffff04
    f9bc:	str	sl, [fp, #-248]	; 0xffffff08
    f9c0:	str	r5, [fp, #-240]	; 0xffffff10
    f9c4:	b	faa8 <readstat_parse_xport+0xc64>
    f9c8:	ldr	r2, [r4, #64]	; 0x40
    f9cc:	clz	r3, r7
    f9d0:	lsr	r3, r3, #5
    f9d4:	cmp	r2, r7
    f9d8:	orrlt	r3, r3, #1
    f9dc:	cmp	r3, #0
    f9e0:	bne	f498 <readstat_parse_xport+0x654>
    f9e4:	ldr	r2, [r4, #52]	; 0x34
    f9e8:	add	r1, r6, #8
    f9ec:	add	r3, r5, #8
    f9f0:	bic	r1, r1, #7
    f9f4:	bic	r3, r3, #7
    f9f8:	ldr	lr, [r4, #376]	; 0x178
    f9fc:	sub	sp, sp, r1
    fa00:	sub	ip, r7, #-1073741823	; 0xc0000001
    fa04:	add	sl, sp, #16
    fa08:	mov	r1, r6
    fa0c:	sub	sp, sp, r3
    fa10:	mov	r0, sl
    fa14:	ldr	r3, [r2, #12]
    fa18:	add	r8, sp, #16
    fa1c:	ldr	r2, [r2, #20]
    fa20:	ldr	r7, [lr, ip, lsl #2]
    fa24:	blx	r3
    fa28:	cmp	r6, r0
    fa2c:	bne	fb78 <readstat_parse_xport+0xd34>
    fa30:	ldr	r2, [r4, #52]	; 0x34
    fa34:	mov	r1, r5
    fa38:	mov	r0, r8
    fa3c:	ldr	r3, [r2, #12]
    fa40:	ldr	r2, [r2, #20]
    fa44:	blx	r3
    fa48:	cmp	r5, r0
    fa4c:	bne	fb78 <readstat_parse_xport+0xd34>
    fa50:	ldr	ip, [r4, #48]	; 0x30
    fa54:	mov	r3, r6
    fa58:	mov	r2, sl
    fa5c:	mov	r1, #300	; 0x12c
    fa60:	add	r0, r7, #8
    fa64:	str	ip, [sp]
    fa68:	bl	420c <readstat_convert@plt>
    fa6c:	cmp	r0, #0
    fa70:	bne	fb68 <readstat_parse_xport+0xd24>
    fa74:	ldr	ip, [r4, #48]	; 0x30
    fa78:	mov	r3, r5
    fa7c:	mov	r2, r8
    fa80:	add	r0, r7, #564	; 0x234
    fa84:	mov	r1, #1024	; 0x400
    fa88:	str	ip, [sp]
    fa8c:	bl	420c <readstat_convert@plt>
    fa90:	cmp	r0, #0
    fa94:	bne	fb68 <readstat_parse_xport+0xd24>
    fa98:	ldr	r3, [fp, #-244]	; 0xffffff0c
    fa9c:	add	r3, r3, #1
    faa0:	str	r3, [fp, #-244]	; 0xffffff0c
    faa4:	ldr	sp, [fp, #-236]	; 0xffffff14
    faa8:	ldr	r3, [fp, #-252]	; 0xffffff04
    faac:	ldr	r2, [fp, #-244]	; 0xffffff0c
    fab0:	cmp	r3, r2
    fab4:	ldr	r2, [r4, #52]	; 0x34
    fab8:	ble	fb1c <readstat_parse_xport+0xcd8>
    fabc:	mov	r1, #6
    fac0:	mov	r0, r9
    fac4:	ldr	r3, [r2, #12]
    fac8:	str	sp, [fp, #-236]	; 0xffffff14
    facc:	ldr	r2, [r2, #20]
    fad0:	blx	r3
    fad4:	cmp	r0, #6
    fad8:	bne	fb78 <readstat_parse_xport+0xd34>
    fadc:	bl	3e88 <machine_is_little_endian@plt>
    fae0:	cmp	r0, #0
    fae4:	ldrheq	r7, [fp, #-224]	; 0xffffff20
    fae8:	ldrheq	r6, [fp, #-222]	; 0xffffff22
    faec:	ldrheq	r5, [fp, #-220]	; 0xffffff24
    faf0:	beq	f9c8 <readstat_parse_xport+0xb84>
    faf4:	ldrh	r0, [fp, #-224]	; 0xffffff20
    faf8:	bl	3e7c <byteswap2@plt>
    fafc:	mov	r7, r0
    fb00:	ldrh	r0, [fp, #-222]	; 0xffffff22
    fb04:	bl	3e7c <byteswap2@plt>
    fb08:	mov	r6, r0
    fb0c:	ldrh	r0, [fp, #-220]	; 0xffffff24
    fb10:	bl	3e7c <byteswap2@plt>
    fb14:	mov	r5, r0
    fb18:	b	f9c8 <readstat_parse_xport+0xb84>
    fb1c:	mov	r0, r2
    fb20:	ldr	sl, [fp, #-248]	; 0xffffff08
    fb24:	ldr	r5, [fp, #-240]	; 0xffffff10
    fb28:	bl	ea28 <xport_skip_rest_of_record.isra.2>
    fb2c:	cmp	r0, #0
    fb30:	bne	f4a4 <readstat_parse_xport+0x660>
    fb34:	ldr	r2, [pc, #192]	; fbfc <readstat_parse_xport+0xdb8>
    fb38:	mov	r0, r4
    fb3c:	ldr	r1, [pc, #188]	; fc00 <readstat_parse_xport+0xdbc>
    fb40:	add	r2, pc, r2
    fb44:	add	r1, pc, r1
    fb48:	bl	e9ac <xport_expect_header_record>
    fb4c:	cmp	r0, #0
    fb50:	beq	f530 <readstat_parse_xport+0x6ec>
    fb54:	b	f4a4 <readstat_parse_xport+0x660>
    fb58:	ldr	sl, [fp, #-252]	; 0xffffff04
    fb5c:	ldr	r5, [fp, #-240]	; 0xffffff10
    fb60:	ldr	sp, [fp, #-236]	; 0xffffff14
    fb64:	b	fb4c <readstat_parse_xport+0xd08>
    fb68:	ldr	sl, [fp, #-248]	; 0xffffff08
    fb6c:	ldr	r5, [fp, #-240]	; 0xffffff10
    fb70:	ldr	sp, [fp, #-236]	; 0xffffff14
    fb74:	b	fb4c <readstat_parse_xport+0xd08>
    fb78:	mov	r0, #2
    fb7c:	ldr	r5, [fp, #-240]	; 0xffffff10
    fb80:	ldr	sp, [fp, #-236]	; 0xffffff14
    fb84:	b	f4a4 <readstat_parse_xport+0x660>
    fb88:	mov	r0, r2
    fb8c:	ldr	sl, [fp, #-252]	; 0xffffff04
    fb90:	ldr	r5, [fp, #-240]	; 0xffffff10
    fb94:	bl	ea28 <xport_skip_rest_of_record.isra.2>
    fb98:	cmp	r0, #0
    fb9c:	bne	f4a4 <readstat_parse_xport+0x660>
    fba0:	ldr	r2, [pc, #92]	; fc04 <readstat_parse_xport+0xdc0>
    fba4:	mov	r0, r4
    fba8:	ldr	r1, [pc, #88]	; fc08 <readstat_parse_xport+0xdc4>
    fbac:	add	r2, pc, r2
    fbb0:	add	r1, pc, r1
    fbb4:	bl	e9ac <xport_expect_header_record>
    fbb8:	b	fb4c <readstat_parse_xport+0xd08>
    fbbc:	.word	0x00036170
    fbc0:	.word	0x000170d0
    fbc4:	.word	0x00017028
    fbc8:	.word	0x000002d8
    fbcc:	.word	0x00016fe4
    fbd0:	.word	0x00016fe8
    fbd4:	.word	0x00016f10
    fbd8:	.word	0x00016f18
    fbdc:	.word	0x00016f1c
    fbe0:	.word	0x00016e3c
    fbe4:	.word	0x00016c1c
    fbe8:	.word	0x00016bc4
    fbec:	.word	0x00016bb8
    fbf0:	.word	0x00016ba4
    fbf4:	.word	0x000169a8
    fbf8:	.word	0x000169ac
    fbfc:	.word	0x0001656c
    fc00:	.word	0x00016570
    fc04:	.word	0x00016500
    fc08:	.word	0x00016504

0000fc0c <xport_write_missing_numeric>:
    fc0c:	mov	r3, #46	; 0x2e
    fc10:	strb	r3, [r0]
    fc14:	mov	r0, #0
    fc18:	bx	lr

0000fc1c <xport_write_row>:
    fc1c:	ldr	ip, [pc, #28]	; fc40 <xport_write_row+0x24>
    fc20:	mov	r3, #80	; 0x50
    fc24:	push	{lr}		; (str lr, [sp, #-4]!)
    fc28:	sub	sp, sp, #12
    fc2c:	add	ip, pc, ip
    fc30:	str	ip, [sp]
    fc34:	bl	44f4 <readstat_write_bytes_as_lines@plt>
    fc38:	add	sp, sp, #12
    fc3c:	pop	{pc}		; (ldr pc, [sp], #4)
    fc40:	.word	0x00016910

0000fc44 <xport_end_data>:
    fc44:	ldr	r3, [pc, #12]	; fc58 <xport_end_data+0x14>
    fc48:	mov	r2, #80	; 0x50
    fc4c:	mov	r1, #32
    fc50:	add	r3, pc, r3
    fc54:	b	44b8 <readstat_write_line_padding@plt>
    fc58:	.word	0x000168ec

0000fc5c <xport_write_missing_string>:
    fc5c:	str	r4, [sp, #-8]!
    fc60:	ldr	r2, [r1, #1596]	; 0x63c
    fc64:	mov	r1, #32
    fc68:	str	lr, [sp, #4]
    fc6c:	bl	4278 <memset@plt>
    fc70:	ldr	r4, [sp]
    fc74:	add	sp, sp, #4
    fc78:	mov	r0, #0
    fc7c:	pop	{pc}		; (ldr pc, [sp], #4)

0000fc80 <xport_write_missing_tagged>:
    fc80:	strd	r4, [sp, #-16]!
    fc84:	mov	r5, r0
    fc88:	mov	r0, r2
    fc8c:	mov	r4, r2
    fc90:	str	r6, [sp, #8]
    fc94:	str	lr, [sp, #12]
    fc98:	bl	411c <sas_validate_tag@plt>
    fc9c:	cmp	r0, #0
    fca0:	strbeq	r4, [r5]
    fca4:	ldrd	r4, [sp]
    fca8:	ldr	r6, [sp, #8]
    fcac:	add	sp, sp, #12
    fcb0:	pop	{pc}		; (ldr pc, [sp], #4)

0000fcb4 <xport_write_double>:
    fcb4:	strd	r4, [sp, #-20]!	; 0xffffffec
    fcb8:	mov	r3, #1
    fcbc:	strd	r6, [sp, #8]
    fcc0:	mov	r7, r0
    fcc4:	mov	r6, r1
    fcc8:	str	lr, [sp, #16]
    fccc:	sub	sp, sp, #20
    fcd0:	mov	r1, #0
    fcd4:	add	r5, sp, #8
    fcd8:	mov	r0, sp
    fcdc:	mov	r2, r5
    fce0:	vstr	d0, [sp]
    fce4:	bl	3fd8 <cnxptiee@plt>
    fce8:	subs	r4, r0, #0
    fcec:	movne	r0, #16
    fcf0:	bne	fd08 <xport_write_double+0x54>
    fcf4:	mov	r1, r5
    fcf8:	mov	r0, r7
    fcfc:	ldr	r2, [r6, #1596]	; 0x63c
    fd00:	bl	3ef4 <memcpy@plt>
    fd04:	mov	r0, r4
    fd08:	add	sp, sp, #20
    fd0c:	ldrd	r4, [sp]
    fd10:	ldrd	r6, [sp, #8]
    fd14:	add	sp, sp, #16
    fd18:	pop	{pc}		; (ldr pc, [sp], #4)

0000fd1c <xport_write_float>:
    fd1c:	vcvt.f64.f32	d0, s0
    fd20:	b	fcb4 <xport_write_double>

0000fd24 <xport_write_int32>:
    fd24:	vmov	s15, r2
    fd28:	vcvt.f64.s32	d0, s15
    fd2c:	b	fcb4 <xport_write_double>

0000fd30 <xport_write_int16>:
    fd30:	vmov	s15, r2
    fd34:	vcvt.f64.s32	d0, s15
    fd38:	b	fcb4 <xport_write_double>

0000fd3c <xport_write_int8>:
    fd3c:	vmov	s15, r2
    fd40:	vcvt.f64.s32	d0, s15
    fd44:	b	fcb4 <xport_write_double>

0000fd48 <xport_write_record>:
    fd48:	strd	r4, [sp, #-16]!
    fd4c:	mov	r5, r0
    fd50:	mov	r0, r1
    fd54:	str	r6, [sp, #8]
    fd58:	mov	r4, r1
    fd5c:	ldr	r6, [pc, #104]	; fdcc <xport_write_record+0x84>
    fd60:	str	lr, [sp, #12]
    fd64:	sub	sp, sp, #8
    fd68:	bl	41d0 <strlen@plt>
    fd6c:	mov	r2, r0
    fd70:	mov	r1, r4
    fd74:	mov	r0, r5
    fd78:	mov	r3, #80	; 0x50
    fd7c:	add	r6, pc, r6
    fd80:	str	r6, [sp]
    fd84:	bl	44f4 <readstat_write_bytes_as_lines@plt>
    fd88:	cmp	r0, #0
    fd8c:	beq	fda4 <xport_write_record+0x5c>
    fd90:	add	sp, sp, #8
    fd94:	ldrd	r4, [sp]
    fd98:	ldr	r6, [sp, #8]
    fd9c:	add	sp, sp, #12
    fda0:	pop	{pc}		; (ldr pc, [sp], #4)
    fda4:	mov	r3, r6
    fda8:	mov	r0, r5
    fdac:	mov	r2, #80	; 0x50
    fdb0:	mov	r1, #32
    fdb4:	add	sp, sp, #8
    fdb8:	ldrd	r4, [sp]
    fdbc:	ldr	r6, [sp, #8]
    fdc0:	ldr	lr, [sp, #12]
    fdc4:	add	sp, sp, #16
    fdc8:	b	44b8 <readstat_write_line_padding@plt>
    fdcc:	.word	0x000167c0

0000fdd0 <xport_write_header_record>:
    fdd0:	mov	ip, r1
    fdd4:	strd	r4, [sp, #-20]!	; 0xffffffec
    fdd8:	mov	r3, r1
    fddc:	strd	r6, [sp, #8]
    fde0:	mov	r5, r0
    fde4:	mov	r1, #81	; 0x51
    fde8:	str	lr, [sp, #16]
    fdec:	sub	sp, sp, #116	; 0x74
    fdf0:	ldr	lr, [ip, #12]
    fdf4:	add	r4, sp, #28
    fdf8:	mov	r0, r4
    fdfc:	ldr	r7, [ip, #16]
    fe00:	ldr	r6, [ip, #32]
    fe04:	ldr	r2, [pc, #72]	; fe54 <xport_write_header_record+0x84>
    fe08:	str	r6, [sp, #20]
    fe0c:	ldr	r6, [ip, #28]
    fe10:	str	lr, [sp]
    fe14:	add	r2, pc, r2
    fe18:	ldr	lr, [ip, #20]
    fe1c:	str	r7, [sp, #4]
    fe20:	ldr	ip, [ip, #24]
    fe24:	str	lr, [sp, #8]
    fe28:	str	r6, [sp, #16]
    fe2c:	str	ip, [sp, #12]
    fe30:	bl	4254 <snprintf@plt>
    fe34:	mov	r1, r4
    fe38:	mov	r0, r5
    fe3c:	bl	fd48 <xport_write_record>
    fe40:	add	sp, sp, #116	; 0x74
    fe44:	ldrd	r4, [sp]
    fe48:	ldrd	r6, [sp, #8]
    fe4c:	add	sp, sp, #16
    fe50:	pop	{pc}		; (ldr pc, [sp], #4)
    fe54:	.word	0x000162fc

0000fe58 <xport_write_variables>:
    fe58:	ldr	r3, [r0, #28]
    fe5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    fe60:	strd	r6, [sp, #8]
    fe64:	strd	r8, [sp, #16]
    fe68:	strd	sl, [sp, #24]
    fe6c:	cmp	r3, #0
    fe70:	str	lr, [sp, #32]
    fe74:	sub	sp, sp, #236	; 0xec
    fe78:	ble	10454 <xport_write_variables+0x5fc>
    fe7c:	ldr	r3, [pc, #1744]	; 10554 <xport_write_variables+0x6fc>
    fe80:	mov	r7, #0
    fe84:	mov	r9, r0
    fe88:	add	fp, sp, #92	; 0x5c
    fe8c:	add	r6, sp, #148	; 0x94
    fe90:	add	r5, sp, #108	; 0x6c
    fe94:	str	r7, [sp, #8]
    fe98:	str	r7, [sp, #20]
    fe9c:	str	r7, [sp, #36]	; 0x24
    fea0:	add	r3, pc, r3
    fea4:	str	r3, [sp, #24]
    fea8:	ldr	r3, [pc, #1704]	; 10558 <xport_write_variables+0x700>
    feac:	add	r3, pc, r3
    feb0:	str	r3, [sp, #32]
    feb4:	add	r3, sp, #164	; 0xa4
    feb8:	str	r3, [sp, #16]
    febc:	add	r3, sp, #100	; 0x64
    fec0:	str	r3, [sp, #28]
    fec4:	mov	r1, r7
    fec8:	mov	r0, r9
    fecc:	bl	4350 <readstat_get_variable@plt>
    fed0:	ldr	r3, [r0]
    fed4:	mov	r4, r0
    fed8:	ldr	r8, [r0, #1600]	; 0x640
    fedc:	cmp	r3, #0
    fee0:	beq	fef8 <xport_write_variables+0xa0>
    fee4:	sub	r3, r8, #1
    fee8:	cmp	r3, #6
    feec:	bhi	101e8 <xport_write_variables+0x390>
    fef0:	cmp	r8, #3
    fef4:	movcc	r8, #3
    fef8:	uxth	sl, r8
    fefc:	mov	r2, #140	; 0x8c
    ff00:	mov	r1, #0
    ff04:	mov	r0, fp
    ff08:	add	r7, r7, #1
    ff0c:	bl	4278 <memset@plt>
    ff10:	ldr	r1, [sp, #8]
    ff14:	mov	r0, r4
    ff18:	strh	sl, [sp, #96]	; 0x60
    ff1c:	ldr	r3, [sp, #24]
    ff20:	strh	r7, [sp, #98]	; 0x62
    ff24:	str	r1, [sp, #176]	; 0xb0
    ff28:	ldr	r1, [sp, #16]
    ff2c:	ldrd	r2, [r3]
    ff30:	strd	r2, [r1]
    ff34:	strd	r2, [r6]
    ff38:	bl	4518 <readstat_variable_get_type_class@plt>
    ff3c:	ldr	r3, [sp, #28]
    ff40:	cmp	r0, #0
    ff44:	add	r2, r4, #8
    ff48:	moveq	r1, #2
    ff4c:	movne	r1, #1
    ff50:	add	r0, r4, #16
    ff54:	strh	r1, [sp, #92]	; 0x5c
    ff58:	ldrb	r1, [r2], #1
    ff5c:	cmp	r1, #0
    ff60:	beq	101bc <xport_write_variables+0x364>
    ff64:	cmp	r0, r2
    ff68:	strb	r1, [r3], #1
    ff6c:	bne	ff58 <xport_write_variables+0x100>
    ff70:	add	r3, r4, #564	; 0x234
    ff74:	add	r2, r4, #560	; 0x230
    ff78:	add	r0, r4, #600	; 0x258
    ff7c:	add	r2, r2, #3
    ff80:	add	r0, r0, #3
    ff84:	str	r3, [sp, #12]
    ff88:	mov	r3, r5
    ff8c:	ldrb	r1, [r2, #1]!
    ff90:	cmp	r1, #0
    ff94:	beq	10084 <xport_write_variables+0x22c>
    ff98:	cmp	r2, r0
    ff9c:	strb	r1, [r3], #1
    ffa0:	bne	ff8c <xport_write_variables+0x134>
    ffa4:	ldrb	r2, [r4, #308]	; 0x134
    ffa8:	cmp	r2, #0
    ffac:	bne	100a8 <xport_write_variables+0x250>
    ffb0:	ldr	r3, [r4, #2132]	; 0x854
    ffb4:	ldr	sl, [r4, #2136]	; 0x858
    ffb8:	ldr	r1, [r9, #8]
    ffbc:	sub	r3, r3, #3
    ffc0:	clz	r3, r3
    ffc4:	cmp	sl, #0
    ffc8:	lsr	r3, r3, #5
    ffcc:	beq	101d8 <xport_write_variables+0x380>
    ffd0:	cmp	r1, #8
    ffd4:	strh	sl, [sp, #156]	; 0x9c
    ffd8:	strh	r3, [sp, #160]	; 0xa0
    ffdc:	beq	10270 <xport_write_variables+0x418>
    ffe0:	ldr	r4, [pc, #1396]	; 1055c <xport_write_variables+0x704>
    ffe4:	mov	r0, fp
    ffe8:	ldr	r3, [sp, #8]
    ffec:	add	r4, pc, r4
    fff0:	add	r3, r3, r8
    fff4:	str	r3, [sp, #8]
    fff8:	bl	4068 <xport_namestr_bswap@plt>
    fffc:	mov	r3, #80	; 0x50
   10000:	mov	r2, #140	; 0x8c
   10004:	str	r4, [sp]
   10008:	mov	r1, fp
   1000c:	mov	r0, r9
   10010:	bl	44f4 <readstat_write_bytes_as_lines@plt>
   10014:	cmp	r0, #0
   10018:	bne	10068 <xport_write_variables+0x210>
   1001c:	ldr	r3, [r9, #28]
   10020:	cmp	r3, r7
   10024:	bgt	fec4 <xport_write_variables+0x6c>
   10028:	mov	r3, r4
   1002c:	mov	r2, #80	; 0x50
   10030:	mov	r1, #32
   10034:	mov	r0, r9
   10038:	bl	44b8 <readstat_write_line_padding@plt>
   1003c:	cmp	r0, #0
   10040:	bne	10068 <xport_write_variables+0x210>
   10044:	ldr	r1, [r9, #8]
   10048:	ldr	r2, [sp, #20]
   1004c:	sub	r3, r1, #8
   10050:	clz	r3, r3
   10054:	lsr	r3, r3, #5
   10058:	cmp	r2, #0
   1005c:	moveq	r3, #0
   10060:	cmp	r3, #0
   10064:	bne	10278 <xport_write_variables+0x420>
   10068:	add	sp, sp, #236	; 0xec
   1006c:	ldrd	r4, [sp]
   10070:	ldrd	r6, [sp, #8]
   10074:	ldrd	r8, [sp, #16]
   10078:	ldrd	sl, [sp, #24]
   1007c:	add	sp, sp, #32
   10080:	pop	{pc}		; (ldr pc, [sp], #4)
   10084:	cmp	r3, r6
   10088:	bcs	ffa4 <xport_write_variables+0x14c>
   1008c:	mov	r2, #32
   10090:	strb	r2, [r3], #1
   10094:	cmp	r3, r6
   10098:	bne	10090 <xport_write_variables+0x238>
   1009c:	ldrb	r2, [r4, #308]	; 0x134
   100a0:	cmp	r2, #0
   100a4:	beq	ffb0 <xport_write_variables+0x158>
   100a8:	add	r1, sp, #40	; 0x28
   100ac:	mov	ip, #0
   100b0:	add	sl, sp, #56	; 0x38
   100b4:	add	r3, sp, #44	; 0x2c
   100b8:	mov	r2, sl
   100bc:	add	r0, r4, #308	; 0x134
   100c0:	str	r1, [sp]
   100c4:	ldr	r1, [sp, #32]
   100c8:	str	ip, [sp, #40]	; 0x28
   100cc:	str	ip, [sp, #44]	; 0x2c
   100d0:	bl	4260 <__isoc99_sscanf@plt>
   100d4:	mov	r1, sl
   100d8:	mov	r0, sl
   100dc:	mov	r3, r6
   100e0:	add	ip, sp, #156	; 0x9c
   100e4:	ldrb	r2, [r0], #1
   100e8:	cmp	r2, #0
   100ec:	beq	10230 <xport_write_variables+0x3d8>
   100f0:	strb	r2, [r3], #1
   100f4:	cmp	r3, ip
   100f8:	bne	100e4 <xport_write_variables+0x28c>
   100fc:	ldrh	ip, [sp, #44]	; 0x2c
   10100:	add	r0, sp, #172	; 0xac
   10104:	ldrh	lr, [sp, #40]	; 0x28
   10108:	ldr	r3, [sp, #16]
   1010c:	strh	ip, [sp, #156]	; 0x9c
   10110:	strh	lr, [sp, #158]	; 0x9e
   10114:	ldrb	r2, [r1], #1
   10118:	cmp	r2, #0
   1011c:	beq	10214 <xport_write_variables+0x3bc>
   10120:	strb	r2, [r3], #1
   10124:	cmp	r3, r0
   10128:	bne	10114 <xport_write_variables+0x2bc>
   1012c:	mov	r0, sl
   10130:	strh	ip, [sp, #172]	; 0xac
   10134:	strh	lr, [sp, #174]	; 0xae
   10138:	bl	41d0 <strlen@plt>
   1013c:	ldr	r3, [r4, #2132]	; 0x854
   10140:	cmp	r0, #8
   10144:	ldr	r2, [r9, #8]
   10148:	sub	r3, r3, #3
   1014c:	clz	r3, r3
   10150:	lsr	r3, r3, #5
   10154:	bls	1025c <xport_write_variables+0x404>
   10158:	strh	r3, [sp, #160]	; 0xa0
   1015c:	mov	r3, #1
   10160:	cmp	r2, #8
   10164:	str	r3, [sp, #36]	; 0x24
   10168:	bne	101ac <xport_write_variables+0x354>
   1016c:	mov	sl, r3
   10170:	add	r2, r4, #7
   10174:	add	r3, sp, #180	; 0xb4
   10178:	add	r4, r4, #39	; 0x27
   1017c:	ldrb	r1, [r2, #1]!
   10180:	cmp	r1, #0
   10184:	beq	101f4 <xport_write_variables+0x39c>
   10188:	cmp	r2, r4
   1018c:	strb	r1, [r3], #1
   10190:	bne	1017c <xport_write_variables+0x324>
   10194:	ldr	r0, [sp, #12]
   10198:	bl	41d0 <strlen@plt>
   1019c:	cmp	r0, #40	; 0x28
   101a0:	uxth	r0, r0
   101a4:	bls	1024c <xport_write_variables+0x3f4>
   101a8:	strh	r0, [sp, #212]	; 0xd4
   101ac:	ldr	r3, [sp, #20]
   101b0:	add	r3, r3, #1
   101b4:	str	r3, [sp, #20]
   101b8:	b	ffe0 <xport_write_variables+0x188>
   101bc:	cmp	r3, r5
   101c0:	bcs	ff70 <xport_write_variables+0x118>
   101c4:	mov	r2, #32
   101c8:	strb	r2, [r3], #1
   101cc:	cmp	r3, r5
   101d0:	bne	101c8 <xport_write_variables+0x370>
   101d4:	b	ff70 <xport_write_variables+0x118>
   101d8:	cmp	r1, #8
   101dc:	strh	r3, [sp, #160]	; 0xa0
   101e0:	bne	ffe0 <xport_write_variables+0x188>
   101e4:	b	10170 <xport_write_variables+0x318>
   101e8:	mov	sl, #8
   101ec:	mov	r8, sl
   101f0:	b	fefc <xport_write_variables+0xa4>
   101f4:	add	r2, sp, #212	; 0xd4
   101f8:	cmp	r3, r2
   101fc:	bcs	10194 <xport_write_variables+0x33c>
   10200:	mov	r1, #32
   10204:	strb	r1, [r3], #1
   10208:	cmp	r3, r2
   1020c:	bne	10204 <xport_write_variables+0x3ac>
   10210:	b	10194 <xport_write_variables+0x33c>
   10214:	cmp	r3, r0
   10218:	bcs	1012c <xport_write_variables+0x2d4>
   1021c:	mov	r2, #32
   10220:	strb	r2, [r3], #1
   10224:	cmp	r3, r0
   10228:	bne	10220 <xport_write_variables+0x3c8>
   1022c:	b	1012c <xport_write_variables+0x2d4>
   10230:	cmp	r3, ip
   10234:	bcs	100fc <xport_write_variables+0x2a4>
   10238:	mov	r2, #32
   1023c:	strb	r2, [r3], #1
   10240:	cmp	r3, ip
   10244:	bne	1023c <xport_write_variables+0x3e4>
   10248:	b	100fc <xport_write_variables+0x2a4>
   1024c:	cmp	sl, #0
   10250:	strh	r0, [sp, #212]	; 0xd4
   10254:	bne	101ac <xport_write_variables+0x354>
   10258:	b	ffe0 <xport_write_variables+0x188>
   1025c:	cmp	r2, #8
   10260:	strh	r3, [sp, #160]	; 0xa0
   10264:	bne	ffe0 <xport_write_variables+0x188>
   10268:	mov	sl, #0
   1026c:	b	10170 <xport_write_variables+0x318>
   10270:	mov	sl, r2
   10274:	b	10170 <xport_write_variables+0x318>
   10278:	ldr	r2, [sp, #36]	; 0x24
   1027c:	str	r0, [sp, #64]	; 0x40
   10280:	ldr	r3, [pc, #728]	; 10560 <xport_write_variables+0x708>
   10284:	strb	r0, [sp, #64]	; 0x40
   10288:	str	r0, [sp, #72]	; 0x48
   1028c:	cmp	r2, #0
   10290:	ldr	r2, [sp, #20]
   10294:	add	r3, pc, r3
   10298:	str	r2, [sp, #68]	; 0x44
   1029c:	ldrd	r2, [r3, #12]
   102a0:	str	r0, [sp, #76]	; 0x4c
   102a4:	str	r0, [sp, #80]	; 0x50
   102a8:	str	r0, [sp, #84]	; 0x54
   102ac:	str	r0, [sp, #88]	; 0x58
   102b0:	strd	r2, [sp, #56]	; 0x38
   102b4:	bne	1046c <xport_write_variables+0x614>
   102b8:	ldr	r2, [pc, #676]	; 10564 <xport_write_variables+0x70c>
   102bc:	add	r3, sp, #56	; 0x38
   102c0:	mov	r1, #81	; 0x51
   102c4:	ldr	r0, [sp, #20]
   102c8:	add	r2, pc, r2
   102cc:	str	r0, [sp]
   102d0:	mov	r0, fp
   102d4:	bl	4254 <snprintf@plt>
   102d8:	mov	r1, fp
   102dc:	mov	r0, r9
   102e0:	bl	fd48 <xport_write_record>
   102e4:	cmp	r0, #0
   102e8:	bne	10068 <xport_write_variables+0x210>
   102ec:	ldr	r3, [r9, #28]
   102f0:	cmp	r3, #0
   102f4:	ble	10530 <xport_write_variables+0x6d8>
   102f8:	ldr	r3, [pc, #616]	; 10568 <xport_write_variables+0x710>
   102fc:	mov	r4, r0
   10300:	add	r3, pc, r3
   10304:	str	r3, [sp, #12]
   10308:	add	r3, sp, #44	; 0x2c
   1030c:	str	r3, [sp, #8]
   10310:	b	1032c <xport_write_variables+0x4d4>
   10314:	cmp	r7, #40	; 0x28
   10318:	add	r4, r4, #1
   1031c:	bhi	10480 <xport_write_variables+0x628>
   10320:	ldr	r3, [r9, #28]
   10324:	cmp	r3, r4
   10328:	ble	10530 <xport_write_variables+0x6d8>
   1032c:	mov	r1, r4
   10330:	mov	r0, r9
   10334:	bl	4350 <readstat_get_variable@plt>
   10338:	add	r5, r0, #564	; 0x234
   1033c:	mov	sl, r0
   10340:	add	r6, r0, #8
   10344:	mov	r0, r5
   10348:	bl	41d0 <strlen@plt>
   1034c:	mov	r7, r0
   10350:	mov	r0, r6
   10354:	bl	41d0 <strlen@plt>
   10358:	mov	r2, #0
   1035c:	mov	r3, #0
   10360:	mov	r8, r0
   10364:	strd	r2, [fp]
   10368:	strd	r2, [fp, #8]
   1036c:	strd	r2, [fp, #16]
   10370:	ldrb	r2, [sl, #308]	; 0x134
   10374:	cmp	r2, #0
   10378:	beq	10314 <xport_write_variables+0x4bc>
   1037c:	mov	r1, #2
   10380:	add	r3, sp, #40	; 0x28
   10384:	mov	ip, #8
   10388:	add	r0, sl, #308	; 0x134
   1038c:	mov	r2, fp
   10390:	str	r3, [sp]
   10394:	str	r1, [sp, #40]	; 0x28
   10398:	ldr	r3, [sp, #8]
   1039c:	str	ip, [sp, #44]	; 0x2c
   103a0:	ldr	r1, [sp, #12]
   103a4:	bl	4260 <__isoc99_sscanf@plt>
   103a8:	cmp	r0, #0
   103ac:	ble	1054c <xport_write_variables+0x6f4>
   103b0:	mov	r0, fp
   103b4:	bl	41d0 <strlen@plt>
   103b8:	cmp	r0, #8
   103bc:	bls	10314 <xport_write_variables+0x4bc>
   103c0:	uxth	r0, r0
   103c4:	add	r4, r4, #1
   103c8:	strh	r4, [sp, #44]	; 0x2c
   103cc:	strh	r8, [sp, #46]	; 0x2e
   103d0:	strh	r0, [sp, #48]	; 0x30
   103d4:	strh	r0, [sp, #50]	; 0x32
   103d8:	strh	r7, [sp, #52]	; 0x34
   103dc:	bl	3e88 <machine_is_little_endian@plt>
   103e0:	cmp	r0, #0
   103e4:	bne	104f0 <xport_write_variables+0x698>
   103e8:	mov	r2, #10
   103ec:	mov	r0, r9
   103f0:	ldr	r1, [sp, #8]
   103f4:	bl	4428 <readstat_write_bytes@plt>
   103f8:	cmp	r0, #0
   103fc:	bne	10068 <xport_write_variables+0x210>
   10400:	mov	r1, r6
   10404:	mov	r0, r9
   10408:	bl	4128 <readstat_write_string@plt>
   1040c:	cmp	r0, #0
   10410:	bne	10068 <xport_write_variables+0x210>
   10414:	mov	r1, fp
   10418:	mov	r0, r9
   1041c:	bl	4128 <readstat_write_string@plt>
   10420:	cmp	r0, #0
   10424:	bne	10068 <xport_write_variables+0x210>
   10428:	mov	r1, fp
   1042c:	mov	r0, r9
   10430:	bl	4128 <readstat_write_string@plt>
   10434:	cmp	r0, #0
   10438:	bne	10068 <xport_write_variables+0x210>
   1043c:	mov	r1, r5
   10440:	mov	r0, r9
   10444:	bl	4128 <readstat_write_string@plt>
   10448:	cmp	r0, #0
   1044c:	beq	10320 <xport_write_variables+0x4c8>
   10450:	b	10068 <xport_write_variables+0x210>
   10454:	ldr	r3, [pc, #272]	; 1056c <xport_write_variables+0x714>
   10458:	mov	r2, #80	; 0x50
   1045c:	mov	r1, #32
   10460:	add	r3, pc, r3
   10464:	bl	44b8 <readstat_write_line_padding@plt>
   10468:	b	10068 <xport_write_variables+0x210>
   1046c:	ldr	r3, [pc, #252]	; 10570 <xport_write_variables+0x718>
   10470:	add	r3, pc, r3
   10474:	ldrd	r2, [r3]
   10478:	strd	r2, [sp, #56]	; 0x38
   1047c:	b	102b8 <xport_write_variables+0x460>
   10480:	strh	r4, [sp, #44]	; 0x2c
   10484:	strh	r8, [sp, #46]	; 0x2e
   10488:	strh	r7, [sp, #48]	; 0x30
   1048c:	bl	3e88 <machine_is_little_endian@plt>
   10490:	cmp	r0, #0
   10494:	bne	104c8 <xport_write_variables+0x670>
   10498:	mov	r2, #6
   1049c:	mov	r0, r9
   104a0:	ldr	r1, [sp, #8]
   104a4:	bl	4428 <readstat_write_bytes@plt>
   104a8:	cmp	r0, #0
   104ac:	bne	10068 <xport_write_variables+0x210>
   104b0:	mov	r1, r6
   104b4:	mov	r0, r9
   104b8:	bl	4128 <readstat_write_string@plt>
   104bc:	cmp	r0, #0
   104c0:	beq	1043c <xport_write_variables+0x5e4>
   104c4:	b	10068 <xport_write_variables+0x210>
   104c8:	ldrh	r0, [sp, #44]	; 0x2c
   104cc:	bl	3e7c <byteswap2@plt>
   104d0:	strh	r0, [sp, #44]	; 0x2c
   104d4:	ldrh	r0, [sp, #46]	; 0x2e
   104d8:	bl	3e7c <byteswap2@plt>
   104dc:	strh	r0, [sp, #46]	; 0x2e
   104e0:	ldrh	r0, [sp, #48]	; 0x30
   104e4:	bl	3e7c <byteswap2@plt>
   104e8:	strh	r0, [sp, #48]	; 0x30
   104ec:	b	10498 <xport_write_variables+0x640>
   104f0:	ldrh	r0, [sp, #44]	; 0x2c
   104f4:	bl	3e7c <byteswap2@plt>
   104f8:	strh	r0, [sp, #44]	; 0x2c
   104fc:	ldrh	r0, [sp, #46]	; 0x2e
   10500:	bl	3e7c <byteswap2@plt>
   10504:	strh	r0, [sp, #46]	; 0x2e
   10508:	ldrh	r0, [sp, #48]	; 0x30
   1050c:	bl	3e7c <byteswap2@plt>
   10510:	strh	r0, [sp, #48]	; 0x30
   10514:	ldrh	r0, [sp, #50]	; 0x32
   10518:	bl	3e7c <byteswap2@plt>
   1051c:	strh	r0, [sp, #50]	; 0x32
   10520:	ldrh	r0, [sp, #52]	; 0x34
   10524:	bl	3e7c <byteswap2@plt>
   10528:	strh	r0, [sp, #52]	; 0x34
   1052c:	b	103e8 <xport_write_variables+0x590>
   10530:	ldr	r3, [pc, #60]	; 10574 <xport_write_variables+0x71c>
   10534:	mov	r0, r9
   10538:	mov	r2, #80	; 0x50
   1053c:	mov	r1, #32
   10540:	add	r3, pc, r3
   10544:	bl	44b8 <readstat_write_line_padding@plt>
   10548:	b	10068 <xport_write_variables+0x210>
   1054c:	mov	r0, #11
   10550:	b	10068 <xport_write_variables+0x210>
   10554:	.word	0x00016228
   10558:	.word	0x00016194
   1055c:	.word	0x00016550
   10560:	.word	0x00015e34
   10564:	.word	0x00015e90
   10568:	.word	0x00015d40
   1056c:	.word	0x000160dc
   10570:	.word	0x00015c50
   10574:	.word	0x00015ffc

00010578 <xport_write_string>:
   10578:	strd	r4, [sp, #-16]!
   1057c:	mov	r5, r1
   10580:	mov	r4, r2
   10584:	mov	r1, #32
   10588:	ldr	r2, [r5, #1596]	; 0x63c
   1058c:	str	r6, [sp, #8]
   10590:	mov	r6, r0
   10594:	str	lr, [sp, #12]
   10598:	bl	4278 <memset@plt>
   1059c:	cmp	r4, #0
   105a0:	beq	105d8 <xport_write_string+0x60>
   105a4:	ldrb	r0, [r4]
   105a8:	cmp	r0, #0
   105ac:	beq	105dc <xport_write_string+0x64>
   105b0:	mov	r0, r4
   105b4:	bl	41d0 <strlen@plt>
   105b8:	ldr	r3, [r5, #1596]	; 0x63c
   105bc:	cmp	r0, r3
   105c0:	movhi	r0, #22
   105c4:	bhi	105dc <xport_write_string+0x64>
   105c8:	mov	r2, r0
   105cc:	mov	r1, r4
   105d0:	mov	r0, r6
   105d4:	bl	3ef4 <memcpy@plt>
   105d8:	mov	r0, #0
   105dc:	ldrd	r4, [sp]
   105e0:	ldr	r6, [sp, #8]
   105e4:	add	sp, sp, #12
   105e8:	pop	{pc}		; (ldr pc, [sp], #4)

000105ec <xport_metadata_ok>:
   105ec:	ldr	r3, [r0, #8]
   105f0:	cmp	r3, #5
   105f4:	cmpne	r3, #8
   105f8:	movne	r1, #1
   105fc:	moveq	r1, #0
   10600:	bne	10630 <xport_metadata_ok+0x44>
   10604:	ldrb	r2, [r0, #188]	; 0xbc
   10608:	cmp	r2, #0
   1060c:	beq	10628 <xport_metadata_ok+0x3c>
   10610:	cmp	r3, #8
   10614:	beq	10638 <xport_metadata_ok+0x4c>
   10618:	cmp	r3, #5
   1061c:	beq	10644 <xport_metadata_ok+0x58>
   10620:	mov	r0, r1
   10624:	bx	lr
   10628:	mov	r0, r2
   1062c:	bx	lr
   10630:	mov	r0, #24
   10634:	bx	lr
   10638:	add	r0, r0, #188	; 0xbc
   1063c:	mov	r1, #32
   10640:	b	3d20 <sas_validate_name@plt>
   10644:	add	r0, r0, #188	; 0xbc
   10648:	mov	r1, #8
   1064c:	b	3d20 <sas_validate_name@plt>

00010650 <xport_begin_data>:
   10650:	ldr	r3, [r0, #20]
   10654:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10658:	mov	r5, r0
   1065c:	strd	r6, [sp, #8]
   10660:	ldr	r7, [pc, #1240]	; 10b40 <xport_begin_data+0x4f0>
   10664:	strd	r8, [sp, #16]
   10668:	strd	sl, [sp, #24]
   1066c:	str	lr, [sp, #32]
   10670:	sub	sp, sp, #132	; 0x84
   10674:	add	r6, sp, #44	; 0x2c
   10678:	mov	r0, r6
   1067c:	str	r3, [sp, #44]	; 0x2c
   10680:	add	r7, pc, r7
   10684:	bl	4134 <localtime@plt>
   10688:	subs	lr, r0, #0
   1068c:	moveq	r0, #39	; 0x27
   10690:	beq	10784 <xport_begin_data+0x134>
   10694:	ldr	r3, [lr]
   10698:	movw	r2, #34079	; 0x851f
   1069c:	movt	r2, #20971	; 0x51eb
   106a0:	mov	r9, #100	; 0x64
   106a4:	add	r8, sp, #24
   106a8:	ldr	r4, [lr, #12]
   106ac:	mov	r1, #17
   106b0:	mov	r0, r8
   106b4:	umull	sl, ip, r2, r3
   106b8:	lsr	ip, ip, #5
   106bc:	mls	ip, r9, ip, r3
   106c0:	str	ip, [sp, #16]
   106c4:	umull	ip, r3, r2, r4
   106c8:	ldr	sl, [lr, #4]
   106cc:	lsr	r3, r3, #5
   106d0:	umull	fp, ip, r2, sl
   106d4:	mls	r3, r9, r3, r4
   106d8:	add	r4, sp, #52	; 0x34
   106dc:	lsr	ip, ip, #5
   106e0:	mls	ip, r9, ip, sl
   106e4:	str	ip, [sp, #12]
   106e8:	ldr	sl, [lr, #8]
   106ec:	umull	fp, ip, r2, sl
   106f0:	lsr	ip, ip, #5
   106f4:	mls	ip, r9, ip, sl
   106f8:	ldr	sl, [pc, #1092]	; 10b44 <xport_begin_data+0x4f4>
   106fc:	str	ip, [sp, #8]
   10700:	ldr	fp, [lr, #20]
   10704:	umull	r2, ip, r2, fp
   10708:	ldr	r2, [pc, #1080]	; 10b48 <xport_begin_data+0x4f8>
   1070c:	lsr	ip, ip, #5
   10710:	add	r2, pc, r2
   10714:	mls	ip, r9, ip, fp
   10718:	str	ip, [sp, #4]
   1071c:	ldr	ip, [r7, sl]
   10720:	ldr	lr, [lr, #16]
   10724:	add	ip, ip, lr, lsl #2
   10728:	str	ip, [sp]
   1072c:	bl	4254 <snprintf@plt>
   10730:	ldr	r3, [pc, #1044]	; 10b4c <xport_begin_data+0x4fc>
   10734:	mov	r1, #0
   10738:	ldr	r0, [r5, #8]
   1073c:	str	r1, [sp, #52]	; 0x34
   10740:	strb	r1, [sp, #52]	; 0x34
   10744:	add	r3, pc, r3
   10748:	str	r1, [r4, #4]
   1074c:	ldrd	r2, [r3, #24]
   10750:	cmp	r0, #8
   10754:	str	r1, [r4, #8]
   10758:	str	r1, [r4, #12]
   1075c:	str	r1, [r4, #16]
   10760:	strd	r2, [sp, #44]	; 0x2c
   10764:	str	r1, [r4, #20]
   10768:	str	r1, [r4, #24]
   1076c:	beq	10a54 <xport_begin_data+0x404>
   10770:	mov	r1, r6
   10774:	mov	r0, r5
   10778:	bl	fdd0 <xport_write_header_record>
   1077c:	cmp	r0, #0
   10780:	beq	107a0 <xport_begin_data+0x150>
   10784:	add	sp, sp, #132	; 0x84
   10788:	ldrd	r4, [sp]
   1078c:	ldrd	r6, [sp, #8]
   10790:	ldrd	r8, [sp, #16]
   10794:	ldrd	sl, [sp, #24]
   10798:	add	sp, sp, #32
   1079c:	pop	{pc}		; (ldr pc, [sp], #4)
   107a0:	ldr	ip, [pc, #936]	; 10b50 <xport_begin_data+0x500>
   107a4:	mov	r1, #81	; 0x51
   107a8:	mov	r0, r6
   107ac:	str	r8, [sp, #20]
   107b0:	ldr	r2, [pc, #924]	; 10b54 <xport_begin_data+0x504>
   107b4:	ldr	r3, [pc, #924]	; 10b58 <xport_begin_data+0x508>
   107b8:	add	ip, pc, ip
   107bc:	ldr	lr, [pc, #920]	; 10b5c <xport_begin_data+0x50c>
   107c0:	add	r2, pc, r2
   107c4:	str	ip, [sp, #16]
   107c8:	add	r3, pc, r3
   107cc:	ldr	ip, [pc, #908]	; 10b60 <xport_begin_data+0x510>
   107d0:	add	lr, pc, lr
   107d4:	str	r3, [sp]
   107d8:	str	r2, [sp, #8]
   107dc:	ldr	r2, [pc, #896]	; 10b64 <xport_begin_data+0x514>
   107e0:	str	lr, [sp, #12]
   107e4:	add	ip, pc, ip
   107e8:	str	ip, [sp, #4]
   107ec:	add	r2, pc, r2
   107f0:	bl	4254 <snprintf@plt>
   107f4:	mov	r1, r6
   107f8:	mov	r0, r5
   107fc:	bl	fd48 <xport_write_record>
   10800:	cmp	r0, #0
   10804:	bne	10784 <xport_begin_data+0x134>
   10808:	mov	r1, r8
   1080c:	mov	r0, r5
   10810:	bl	fd48 <xport_write_record>
   10814:	cmp	r0, #0
   10818:	bne	10784 <xport_begin_data+0x134>
   1081c:	ldr	r3, [pc, #836]	; 10b68 <xport_begin_data+0x518>
   10820:	mov	r2, #140	; 0x8c
   10824:	mov	r1, #160	; 0xa0
   10828:	ldr	ip, [r5, #8]
   1082c:	str	r2, [sp, #76]	; 0x4c
   10830:	add	r3, pc, r3
   10834:	add	r2, r3, #36	; 0x24
   10838:	ldr	r3, [r3, #36]	; 0x24
   1083c:	cmp	ip, #8
   10840:	ldrh	lr, [r2, #4]
   10844:	ldrb	ip, [r2, #6]
   10848:	mov	r2, #0
   1084c:	str	r3, [r6]
   10850:	mov	r3, #0
   10854:	strd	r2, [sp, #52]	; 0x34
   10858:	strh	lr, [r6, #4]
   1085c:	strb	ip, [r6, #6]
   10860:	strh	r0, [sp, #51]	; 0x33
   10864:	strd	r2, [r4, #8]
   10868:	strd	r2, [r4, #16]
   1086c:	str	r1, [sp, #68]	; 0x44
   10870:	beq	10a70 <xport_begin_data+0x420>
   10874:	mov	r1, r6
   10878:	mov	r0, r5
   1087c:	bl	fdd0 <xport_write_header_record>
   10880:	cmp	r0, #0
   10884:	bne	10784 <xport_begin_data+0x134>
   10888:	ldr	r3, [pc, #732]	; 10b6c <xport_begin_data+0x51c>
   1088c:	str	r0, [sp, #52]	; 0x34
   10890:	ldr	r1, [r5, #8]
   10894:	strb	r0, [sp, #52]	; 0x34
   10898:	str	r0, [r4, #4]
   1089c:	add	r3, pc, r3
   108a0:	str	r0, [r4, #8]
   108a4:	ldrd	r2, [r3, #48]	; 0x30
   108a8:	cmp	r1, #8
   108ac:	str	r0, [r4, #12]
   108b0:	str	r0, [r4, #16]
   108b4:	str	r0, [r4, #20]
   108b8:	strd	r2, [sp, #44]	; 0x2c
   108bc:	str	r0, [r4, #24]
   108c0:	beq	10a94 <xport_begin_data+0x444>
   108c4:	mov	r1, r6
   108c8:	mov	r0, r5
   108cc:	bl	fdd0 <xport_write_header_record>
   108d0:	cmp	r0, #0
   108d4:	bne	10784 <xport_begin_data+0x134>
   108d8:	ldr	r2, [r5, #8]
   108dc:	ldrb	r3, [r5, #188]	; 0xbc
   108e0:	cmp	r2, #8
   108e4:	beq	10aa8 <xport_begin_data+0x458>
   108e8:	cmp	r3, #0
   108ec:	addne	r3, r5, #188	; 0xbc
   108f0:	bne	108fc <xport_begin_data+0x2ac>
   108f4:	ldr	r3, [pc, #628]	; 10b70 <xport_begin_data+0x520>
   108f8:	add	r3, pc, r3
   108fc:	ldr	ip, [pc, #624]	; 10b74 <xport_begin_data+0x524>
   10900:	mov	r1, #81	; 0x51
   10904:	mov	r0, r6
   10908:	str	r3, [sp]
   1090c:	ldr	r2, [pc, #612]	; 10b78 <xport_begin_data+0x528>
   10910:	str	r8, [sp, #20]
   10914:	ldr	r3, [pc, #608]	; 10b7c <xport_begin_data+0x52c>
   10918:	add	ip, pc, ip
   1091c:	add	r2, pc, r2
   10920:	add	r3, pc, r3
   10924:	str	ip, [sp, #16]
   10928:	ldr	ip, [pc, #592]	; 10b80 <xport_begin_data+0x530>
   1092c:	str	r2, [sp, #8]
   10930:	ldr	r2, [pc, #588]	; 10b84 <xport_begin_data+0x534>
   10934:	str	r3, [sp, #12]
   10938:	ldr	r3, [pc, #584]	; 10b88 <xport_begin_data+0x538>
   1093c:	add	ip, pc, ip
   10940:	add	r2, pc, r2
   10944:	str	ip, [sp, #4]
   10948:	add	r3, pc, r3
   1094c:	bl	4254 <snprintf@plt>
   10950:	mov	r1, r6
   10954:	mov	r0, r5
   10958:	bl	fd48 <xport_write_record>
   1095c:	cmp	r0, #0
   10960:	bne	10784 <xport_begin_data+0x134>
   10964:	ldr	ip, [pc, #544]	; 10b8c <xport_begin_data+0x53c>
   10968:	add	r2, r5, #88	; 0x58
   1096c:	mov	r3, r8
   10970:	mov	r1, #81	; 0x51
   10974:	mov	r0, r6
   10978:	add	ip, pc, ip
   1097c:	str	ip, [sp]
   10980:	stmib	sp, {r2, ip}
   10984:	ldr	r2, [pc, #516]	; 10b90 <xport_begin_data+0x540>
   10988:	add	r2, pc, r2
   1098c:	bl	4254 <snprintf@plt>
   10990:	mov	r1, r6
   10994:	mov	r0, r5
   10998:	bl	fd48 <xport_write_record>
   1099c:	cmp	r0, #0
   109a0:	bne	10784 <xport_begin_data+0x134>
   109a4:	ldr	r3, [pc, #488]	; 10b94 <xport_begin_data+0x544>
   109a8:	str	r0, [sp, #52]	; 0x34
   109ac:	ldr	ip, [r5, #8]
   109b0:	strb	r0, [sp, #52]	; 0x34
   109b4:	ldr	r1, [r5, #28]
   109b8:	add	r3, pc, r3
   109bc:	str	r0, [r4, #4]
   109c0:	ldrd	r2, [r3, #60]	; 0x3c
   109c4:	cmp	ip, #8
   109c8:	str	r0, [r4, #12]
   109cc:	str	r0, [r4, #16]
   109d0:	str	r1, [sp, #60]	; 0x3c
   109d4:	str	r0, [r4, #20]
   109d8:	strd	r2, [sp, #44]	; 0x2c
   109dc:	str	r0, [r4, #24]
   109e0:	beq	10b10 <xport_begin_data+0x4c0>
   109e4:	mov	r1, r6
   109e8:	mov	r0, r5
   109ec:	bl	fdd0 <xport_write_header_record>
   109f0:	cmp	r0, #0
   109f4:	bne	10784 <xport_begin_data+0x134>
   109f8:	mov	r0, r5
   109fc:	bl	fe58 <xport_write_variables>
   10a00:	cmp	r0, #0
   10a04:	bne	10784 <xport_begin_data+0x134>
   10a08:	ldr	r2, [r5, #8]
   10a0c:	movw	r3, #16975	; 0x424f
   10a10:	movt	r3, #83	; 0x53
   10a14:	str	r3, [sp, #44]	; 0x2c
   10a18:	str	r0, [sp, #48]	; 0x30
   10a1c:	str	r0, [sp, #52]	; 0x34
   10a20:	cmp	r2, #8
   10a24:	strb	r0, [sp, #52]	; 0x34
   10a28:	str	r0, [r4, #4]
   10a2c:	str	r0, [r4, #8]
   10a30:	str	r0, [r4, #12]
   10a34:	str	r0, [r4, #16]
   10a38:	str	r0, [r4, #20]
   10a3c:	str	r0, [r4, #24]
   10a40:	beq	10b24 <xport_begin_data+0x4d4>
   10a44:	mov	r1, r6
   10a48:	mov	r0, r5
   10a4c:	bl	fdd0 <xport_write_header_record>
   10a50:	b	10784 <xport_begin_data+0x134>
   10a54:	ldr	r3, [pc, #316]	; 10b98 <xport_begin_data+0x548>
   10a58:	add	r3, pc, r3
   10a5c:	ldr	r2, [r3]
   10a60:	ldrh	r3, [r3, #4]
   10a64:	str	r2, [r6]
   10a68:	strh	r3, [r6, #4]
   10a6c:	b	10770 <xport_begin_data+0x120>
   10a70:	ldr	r3, [pc, #292]	; 10b9c <xport_begin_data+0x54c>
   10a74:	add	r3, pc, r3
   10a78:	ldrh	r2, [r3, #4]
   10a7c:	ldr	r1, [r3]
   10a80:	ldrb	r3, [r3, #6]
   10a84:	str	r1, [r6]
   10a88:	strh	r2, [r6, #4]
   10a8c:	strb	r3, [r6, #6]
   10a90:	b	10874 <xport_begin_data+0x224>
   10a94:	ldr	r3, [pc, #260]	; 10ba0 <xport_begin_data+0x550>
   10a98:	add	r3, pc, r3
   10a9c:	ldrd	r2, [r3]
   10aa0:	strd	r2, [r6]
   10aa4:	b	108c4 <xport_begin_data+0x274>
   10aa8:	cmp	r3, #0
   10aac:	addne	r3, r5, #188	; 0xbc
   10ab0:	bne	10abc <xport_begin_data+0x46c>
   10ab4:	ldr	r3, [pc, #232]	; 10ba4 <xport_begin_data+0x554>
   10ab8:	add	r3, pc, r3
   10abc:	ldr	ip, [pc, #228]	; 10ba8 <xport_begin_data+0x558>
   10ac0:	mov	r1, #81	; 0x51
   10ac4:	mov	r0, r6
   10ac8:	str	r8, [sp, #16]
   10acc:	ldr	r2, [pc, #216]	; 10bac <xport_begin_data+0x55c>
   10ad0:	add	ip, pc, ip
   10ad4:	stm	sp, {r3, ip}
   10ad8:	add	r2, pc, r2
   10adc:	ldr	r3, [pc, #204]	; 10bb0 <xport_begin_data+0x560>
   10ae0:	str	r2, [sp, #8]
   10ae4:	ldr	r2, [pc, #200]	; 10bb4 <xport_begin_data+0x564>
   10ae8:	add	r3, pc, r3
   10aec:	str	r3, [sp, #12]
   10af0:	add	r2, pc, r2
   10af4:	ldr	r3, [pc, #188]	; 10bb8 <xport_begin_data+0x568>
   10af8:	add	r3, pc, r3
   10afc:	bl	4254 <snprintf@plt>
   10b00:	mov	r1, r6
   10b04:	mov	r0, r5
   10b08:	bl	fd48 <xport_write_record>
   10b0c:	b	1095c <xport_begin_data+0x30c>
   10b10:	ldr	r3, [pc, #164]	; 10bbc <xport_begin_data+0x56c>
   10b14:	add	r3, pc, r3
   10b18:	ldrd	r2, [r3]
   10b1c:	strd	r2, [r6]
   10b20:	b	109e4 <xport_begin_data+0x394>
   10b24:	ldr	r3, [pc, #148]	; 10bc0 <xport_begin_data+0x570>
   10b28:	add	r3, pc, r3
   10b2c:	ldrh	r2, [r3, #4]
   10b30:	ldr	r3, [r3]
   10b34:	str	r3, [r6]
   10b38:	strh	r2, [r6, #4]
   10b3c:	b	10a44 <xport_begin_data+0x3f4>
   10b40:	.word	0x00034978
   10b44:	.word	0x000002d8
   10b48:	.word	0x00015a7c
   10b4c:	.word	0x00015984
   10b50:	.word	0x00015d84
   10b54:	.word	0x00015a28
   10b58:	.word	0x000159e4
   10b5c:	.word	0x00015a10
   10b60:	.word	0x00015a0c
   10b64:	.word	0x000159c4
   10b68:	.word	0x00015898
   10b6c:	.word	0x0001582c
   10b70:	.word	0x00015434
   10b74:	.word	0x00015c24
   10b78:	.word	0x000158cc
   10b7c:	.word	0x000158c0
   10b80:	.word	0x000158e4
   10b84:	.word	0x00015870
   10b88:	.word	0x00015864
   10b8c:	.word	0x00015bc4
   10b90:	.word	0x000158a0
   10b94:	.word	0x00015710
   10b98:	.word	0x00015600
   10b9c:	.word	0x00015608
   10ba0:	.word	0x000155f4
   10ba4:	.word	0x00015274
   10ba8:	.word	0x00015750
   10bac:	.word	0x00015710
   10bb0:	.word	0x000156f8
   10bb4:	.word	0x00015708
   10bb8:	.word	0x000156b4
   10bbc:	.word	0x00015590
   10bc0:	.word	0x00015584

00010bc4 <xport_variable_width>:
   10bc4:	cmp	r0, #0
   10bc8:	beq	10be8 <xport_variable_width+0x24>
   10bcc:	sub	r3, r1, #1
   10bd0:	cmp	r3, #6
   10bd4:	bhi	10bf0 <xport_variable_width+0x2c>
   10bd8:	cmp	r1, #3
   10bdc:	movcs	r0, r1
   10be0:	movcc	r0, #3
   10be4:	bx	lr
   10be8:	mov	r0, r1
   10bec:	bx	lr
   10bf0:	mov	r0, #8
   10bf4:	bx	lr

00010bf8 <readstat_begin_writing_xport>:
   10bf8:	mov	r3, r0
   10bfc:	strd	r4, [sp, #-12]!
   10c00:	ldr	r4, [pc, #220]	; 10ce4 <readstat_begin_writing_xport+0xec>
   10c04:	ldr	r0, [r0, #8]
   10c08:	str	lr, [sp, #8]
   10c0c:	ldr	lr, [pc, #212]	; 10ce8 <readstat_begin_writing_xport+0xf0>
   10c10:	add	r4, pc, r4
   10c14:	ldr	ip, [pc, #208]	; 10cec <readstat_begin_writing_xport+0xf4>
   10c18:	str	r4, [r3, #292]	; 0x124
   10c1c:	cmp	r0, #0
   10c20:	ldr	r4, [pc, #200]	; 10cf0 <readstat_begin_writing_xport+0xf8>
   10c24:	moveq	r0, #8
   10c28:	add	lr, pc, lr
   10c2c:	ldr	r5, [pc, #192]	; 10cf4 <readstat_begin_writing_xport+0xfc>
   10c30:	add	ip, pc, ip
   10c34:	str	lr, [r3, #236]	; 0xec
   10c38:	ldr	lr, [pc, #184]	; 10cf8 <readstat_begin_writing_xport+0x100>
   10c3c:	str	ip, [r3, #240]	; 0xf0
   10c40:	add	r4, pc, r4
   10c44:	ldr	ip, [pc, #176]	; 10cfc <readstat_begin_writing_xport+0x104>
   10c48:	str	r4, [r3, #244]	; 0xf4
   10c4c:	add	r5, pc, r5
   10c50:	ldr	r4, [pc, #168]	; 10d00 <readstat_begin_writing_xport+0x108>
   10c54:	add	lr, pc, lr
   10c58:	streq	r0, [r3, #8]
   10c5c:	mov	r0, r3
   10c60:	add	ip, pc, ip
   10c64:	str	lr, [r3, #248]	; 0xf8
   10c68:	ldr	lr, [pc, #148]	; 10d04 <readstat_begin_writing_xport+0x10c>
   10c6c:	str	ip, [r3, #252]	; 0xfc
   10c70:	add	r4, pc, r4
   10c74:	ldr	ip, [pc, #140]	; 10d08 <readstat_begin_writing_xport+0x110>
   10c78:	str	r4, [r3, #256]	; 0x100
   10c7c:	ldr	r4, [pc, #136]	; 10d0c <readstat_begin_writing_xport+0x114>
   10c80:	add	lr, pc, lr
   10c84:	add	ip, pc, ip
   10c88:	str	lr, [r3, #264]	; 0x108
   10c8c:	ldr	lr, [pc, #124]	; 10d10 <readstat_begin_writing_xport+0x118>
   10c90:	str	ip, [r3, #268]	; 0x10c
   10c94:	add	r4, pc, r4
   10c98:	ldr	ip, [pc, #116]	; 10d14 <readstat_begin_writing_xport+0x11c>
   10c9c:	str	r4, [r3, #272]	; 0x110
   10ca0:	ldr	r4, [pc, #112]	; 10d18 <readstat_begin_writing_xport+0x120>
   10ca4:	add	lr, pc, lr
   10ca8:	str	lr, [r3, #228]	; 0xe4
   10cac:	ldr	ip, [r5, ip]
   10cb0:	add	r4, pc, r4
   10cb4:	ldr	lr, [pc, #96]	; 10d1c <readstat_begin_writing_xport+0x124>
   10cb8:	str	ip, [r3, #232]	; 0xe8
   10cbc:	ldr	ip, [pc, #92]	; 10d20 <readstat_begin_writing_xport+0x128>
   10cc0:	add	lr, pc, lr
   10cc4:	str	r4, [r3, #276]	; 0x114
   10cc8:	ldrd	r4, [sp]
   10ccc:	str	lr, [r3, #284]	; 0x11c
   10cd0:	ldr	lr, [sp, #8]
   10cd4:	add	sp, sp, #12
   10cd8:	add	ip, pc, ip
   10cdc:	str	ip, [r3, #280]	; 0x118
   10ce0:	b	3f3c <readstat_begin_writing_file@plt>
   10ce4:	.word	0xfffff9d4
   10ce8:	.word	0xfffff10c
   10cec:	.word	0xfffff0f8
   10cf0:	.word	0xfffff0dc
   10cf4:	.word	0x000343ac
   10cf8:	.word	0xfffff0c0
   10cfc:	.word	0xfffff04c
   10d00:	.word	0xfffff900
   10d04:	.word	0xffffefd4
   10d08:	.word	0xffffef80
   10d0c:	.word	0xffffefe4
   10d10:	.word	0xffffff18
   10d14:	.word	0x000002ec
   10d18:	.word	0xfffff998
   10d1c:	.word	0xffffef7c
   10d20:	.word	0xffffef3c

00010d24 <por_ctx_init>:
   10d24:	mov	r1, #660	; 0x294
   10d28:	mov	r0, #1
   10d2c:	str	r4, [sp, #-8]!
   10d30:	str	lr, [sp, #4]
   10d34:	bl	3d2c <calloc@plt>
   10d38:	mov	r4, r0
   10d3c:	mov	r2, #32
   10d40:	mov	r3, #20
   10d44:	mov	r0, #1024	; 0x400
   10d48:	strb	r2, [r4, #48]	; 0x30
   10d4c:	str	r3, [r4, #608]	; 0x260
   10d50:	bl	4164 <ck_hash_table_init@plt>
   10d54:	str	r0, [r4, #656]	; 0x290
   10d58:	mov	r0, r4
   10d5c:	ldr	r4, [sp]
   10d60:	add	sp, sp, #4
   10d64:	pop	{pc}		; (ldr pc, [sp], #4)

00010d68 <por_ctx_free>:
   10d68:	strd	r4, [sp, #-16]!
   10d6c:	mov	r5, r0
   10d70:	ldr	r0, [r0, #616]	; 0x268
   10d74:	str	r6, [sp, #8]
   10d78:	str	lr, [sp, #12]
   10d7c:	cmp	r0, #0
   10d80:	beq	10d88 <por_ctx_free+0x20>
   10d84:	bl	3e94 <free@plt>
   10d88:	ldr	r1, [r5, #652]	; 0x28c
   10d8c:	cmp	r1, #0
   10d90:	beq	10dd8 <por_ctx_free+0x70>
   10d94:	ldr	r2, [r5, #632]	; 0x278
   10d98:	cmp	r2, #0
   10d9c:	ble	10dd0 <por_ctx_free+0x68>
   10da0:	mov	r4, #0
   10da4:	mov	r6, #280	; 0x118
   10da8:	mla	r3, r6, r4, r1
   10dac:	add	r4, r4, #1
   10db0:	ldr	r3, [r3, #264]	; 0x108
   10db4:	subs	r0, r3, #0
   10db8:	beq	10dc8 <por_ctx_free+0x60>
   10dbc:	bl	3e94 <free@plt>
   10dc0:	ldr	r2, [r5, #632]	; 0x278
   10dc4:	ldr	r1, [r5, #652]	; 0x28c
   10dc8:	cmp	r2, r4
   10dcc:	bgt	10da8 <por_ctx_free+0x40>
   10dd0:	mov	r0, r1
   10dd4:	bl	3e94 <free@plt>
   10dd8:	ldr	r1, [r5, #648]	; 0x288
   10ddc:	cmp	r1, #0
   10de0:	beq	10e20 <por_ctx_free+0xb8>
   10de4:	ldr	r2, [r5, #632]	; 0x278
   10de8:	cmp	r2, #0
   10dec:	ble	10e18 <por_ctx_free+0xb0>
   10df0:	mov	r4, #0
   10df4:	ldr	r3, [r1, r4, lsl #2]
   10df8:	add	r4, r4, #1
   10dfc:	subs	r0, r3, #0
   10e00:	beq	10e10 <por_ctx_free+0xa8>
   10e04:	bl	3e94 <free@plt>
   10e08:	ldr	r2, [r5, #632]	; 0x278
   10e0c:	ldr	r1, [r5, #648]	; 0x288
   10e10:	cmp	r2, r4
   10e14:	bgt	10df4 <por_ctx_free+0x8c>
   10e18:	mov	r0, r1
   10e1c:	bl	3e94 <free@plt>
   10e20:	ldr	r0, [r5, #656]	; 0x290
   10e24:	cmp	r0, #0
   10e28:	beq	10e30 <por_ctx_free+0xc8>
   10e2c:	bl	4218 <ck_hash_table_free@plt>
   10e30:	ldr	r0, [r5, #612]	; 0x264
   10e34:	cmp	r0, #0
   10e38:	beq	10e40 <por_ctx_free+0xd8>
   10e3c:	bl	3da4 <iconv_close@plt>
   10e40:	mov	r0, r5
   10e44:	ldrd	r4, [sp]
   10e48:	ldr	r6, [sp, #8]
   10e4c:	ldr	lr, [sp, #12]
   10e50:	add	sp, sp, #16
   10e54:	b	3e94 <free@plt>

00010e58 <por_utf8_encode>:
   10e58:	cmp	r1, #0
   10e5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10e60:	strd	r6, [sp, #8]
   10e64:	strd	r8, [sp, #16]
   10e68:	strd	sl, [sp, #24]
   10e6c:	str	lr, [sp, #32]
   10e70:	sub	sp, sp, #4
   10e74:	ldr	r9, [sp, #40]	; 0x28
   10e78:	beq	10f5c <por_utf8_encode+0x104>
   10e7c:	mov	r7, r3
   10e80:	add	r3, r0, r1
   10e84:	ldr	sl, [pc, #216]	; 10f64 <por_utf8_encode+0x10c>
   10e88:	mov	r8, r2
   10e8c:	sub	r5, r0, #1
   10e90:	sub	fp, r3, #1
   10e94:	mov	r4, #0
   10e98:	add	sl, pc, sl
   10e9c:	b	10ecc <por_utf8_encode+0x74>
   10ea0:	cmp	r2, #31
   10ea4:	bls	10f54 <por_utf8_encode+0xfc>
   10ea8:	cmp	r2, #127	; 0x7f
   10eac:	bhi	10f3c <por_utf8_encode+0xe4>
   10eb0:	add	r1, r4, #1
   10eb4:	cmp	r1, r7
   10eb8:	bhi	10f1c <por_utf8_encode+0xc4>
   10ebc:	cmp	r5, fp
   10ec0:	strb	r2, [r8, r4]
   10ec4:	mov	r4, r1
   10ec8:	beq	10f1c <por_utf8_encode+0xc4>
   10ecc:	ldrb	r2, [r5, #1]!
   10ed0:	lsl	r2, r2, #1
   10ed4:	ldrh	r2, [r9, r2]
   10ed8:	cmp	r2, #0
   10edc:	bne	10ea0 <por_utf8_encode+0x48>
   10ee0:	movw	r2, #65533	; 0xfffd
   10ee4:	add	r1, r4, #3
   10ee8:	cmp	r1, r7
   10eec:	bhi	10f1c <por_utf8_encode+0xc4>
   10ef0:	add	r6, r8, r4
   10ef4:	mov	r1, sl
   10ef8:	mov	r0, r6
   10efc:	bl	43bc <sprintf@plt>
   10f00:	cmp	r0, #0
   10f04:	moveq	r3, #32
   10f08:	addne	r4, r4, r0
   10f0c:	addeq	r4, r4, #1
   10f10:	strbeq	r3, [r6]
   10f14:	cmp	r5, fp
   10f18:	bne	10ecc <por_utf8_encode+0x74>
   10f1c:	mov	r0, r4
   10f20:	add	sp, sp, #4
   10f24:	ldrd	r4, [sp]
   10f28:	ldrd	r6, [sp, #8]
   10f2c:	ldrd	r8, [sp, #16]
   10f30:	ldrd	sl, [sp, #24]
   10f34:	add	sp, sp, #32
   10f38:	pop	{pc}		; (ldr pc, [sp], #4)
   10f3c:	cmp	r2, #2048	; 0x800
   10f40:	bcs	10ee4 <por_utf8_encode+0x8c>
   10f44:	add	r1, r4, #2
   10f48:	cmp	r1, r7
   10f4c:	bls	10ef0 <por_utf8_encode+0x98>
   10f50:	b	10f1c <por_utf8_encode+0xc4>
   10f54:	mvn	r4, #0
   10f58:	b	10f1c <por_utf8_encode+0xc4>
   10f5c:	mov	r4, r1
   10f60:	b	10f1c <por_utf8_encode+0xc4>
   10f64:	.word	0x000153b0

00010f68 <por_utf8_decode>:
   10f68:	mov	r1, #0
   10f6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10f70:	strd	r6, [sp, #8]
   10f74:	strd	r8, [sp, #16]
   10f78:	subs	r9, r3, #0
   10f7c:	strd	sl, [sp, #24]
   10f80:	str	lr, [sp, #32]
   10f84:	sub	sp, sp, #20
   10f88:	ldr	r8, [sp, #56]	; 0x38
   10f8c:	str	r1, [sp, #8]
   10f90:	str	r1, [sp, #12]
   10f94:	beq	11048 <por_utf8_decode+0xe0>
   10f98:	ldr	r3, [pc, #212]	; 11074 <por_utf8_decode+0x10c>
   10f9c:	mov	r5, r0
   10fa0:	mov	r6, r2
   10fa4:	mov	r4, #1
   10fa8:	add	fp, sp, #12
   10fac:	add	sl, sp, #8
   10fb0:	add	r3, pc, r3
   10fb4:	str	r3, [sp, #4]
   10fb8:	b	10fe4 <por_utf8_decode+0x7c>
   10fbc:	ldrb	r3, [r8, r3]
   10fc0:	add	r5, r5, #1
   10fc4:	cmp	r3, #0
   10fc8:	beq	1106c <por_utf8_decode+0x104>
   10fcc:	strb	r3, [r1, r4]
   10fd0:	add	r4, r4, #1
   10fd4:	mov	r3, #0
   10fd8:	cmp	r4, r9
   10fdc:	str	r3, [sp, #12]
   10fe0:	bhi	1104c <por_utf8_decode+0xe4>
   10fe4:	ldrb	r3, [r5]
   10fe8:	sub	r1, r6, #1
   10fec:	mov	r7, r4
   10ff0:	sub	r2, r3, #32
   10ff4:	cmp	r2, #94	; 0x5e
   10ff8:	bls	10fbc <por_utf8_decode+0x54>
   10ffc:	mov	r2, sl
   11000:	mov	r3, fp
   11004:	ldr	r1, [sp, #4]
   11008:	mov	r0, r5
   1100c:	bl	4260 <__isoc99_sscanf@plt>
   11010:	cmp	r0, #0
   11014:	sub	r2, r6, #1
   11018:	beq	1106c <por_utf8_decode+0x104>
   1101c:	ldr	r3, [sp, #8]
   11020:	ldr	r1, [sp, #60]	; 0x3c
   11024:	cmp	r3, r1
   11028:	bcs	1106c <por_utf8_decode+0x104>
   1102c:	ldrb	r3, [r8, r3]
   11030:	cmp	r3, #0
   11034:	beq	1106c <por_utf8_decode+0x104>
   11038:	ldr	r1, [sp, #12]
   1103c:	strb	r3, [r2, r4]
   11040:	add	r5, r5, r1
   11044:	b	10fd0 <por_utf8_decode+0x68>
   11048:	mov	r7, r9
   1104c:	mov	r0, r7
   11050:	add	sp, sp, #20
   11054:	ldrd	r4, [sp]
   11058:	ldrd	r6, [sp, #8]
   1105c:	ldrd	r8, [sp, #16]
   11060:	ldrd	sl, [sp, #24]
   11064:	add	sp, sp, #32
   11068:	pop	{pc}		; (ldr pc, [sp], #4)
   1106c:	mvn	r7, #0
   11070:	b	1104c <por_utf8_decode+0xe4>
   11074:	.word	0x0001529c

00011078 <readstat_por_parse_double>:
   11078:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1107c:	strd	r6, [sp, #8]
   11080:	mov	r6, r0
   11084:	strd	r8, [sp, #16]
   11088:	add	r8, r0, r1
   1108c:	strd	sl, [sp, #24]
   11090:	cmp	r0, r8
   11094:	str	lr, [sp, #32]
   11098:	vpush	{d8-d9}
   1109c:	sub	sp, sp, #1072	; 0x430
   110a0:	sub	sp, sp, #4
   110a4:	strd	r2, [sp, #36]	; 0x24
   110a8:	str	r1, [sp, #44]	; 0x2c
   110ac:	beq	113e0 <readstat_por_parse_double+0x368>
   110b0:	ldr	sl, [pc, #976]	; 11488 <readstat_por_parse_double+0x410>
   110b4:	mov	r0, #0
   110b8:	mov	r9, #4
   110bc:	mov	lr, r0
   110c0:	cmp	r9, #0
   110c4:	vldr	d7, [pc, #932]	; 11470 <readstat_por_parse_double+0x3f8>
   110c8:	mov	r5, r6
   110cc:	mov	r4, #1
   110d0:	str	r0, [sp, #20]
   110d4:	vldr	d6, [pc, #924]	; 11478 <readstat_por_parse_double+0x400>
   110d8:	add	sl, pc, sl
   110dc:	str	r0, [sp, #28]
   110e0:	add	r3, sl, #168	; 0xa8
   110e4:	mov	fp, sl
   110e8:	add	lr, sl, lr
   110ec:	str	r3, [sp, #32]
   110f0:	vmov.f64	d1, d7
   110f4:	vmov.f64	d3, d7
   110f8:	ldr	r3, [pc, #908]	; 1148c <readstat_por_parse_double+0x414>
   110fc:	vmov.f64	d5, d7
   11100:	vmov.f64	d8, d7
   11104:	vmov.f64	d0, d7
   11108:	vmov.f64	d2, d6
   1110c:	add	r3, pc, r3
   11110:	str	r3, [sp, #16]
   11114:	ldr	r3, [pc, #884]	; 11490 <readstat_por_parse_double+0x418>
   11118:	add	r3, pc, r3
   1111c:	str	r3, [sp, #24]
   11120:	mov	r3, r0
   11124:	bne	11188 <readstat_por_parse_double+0x110>
   11128:	ldr	r2, [sp, #16]
   1112c:	add	r4, r2, r4
   11130:	ldrb	r7, [r4, #56]	; 0x38
   11134:	cmp	r7, #0
   11138:	bne	11340 <readstat_por_parse_double+0x2c8>
   1113c:	add	r3, fp, r3
   11140:	ldrb	r2, [r3, #120]	; 0x78
   11144:	ldrb	r4, [r3, #72]	; 0x48
   11148:	cmp	r2, #0
   1114c:	bne	111d0 <readstat_por_parse_double+0x158>
   11150:	cmp	r4, #0
   11154:	beq	11458 <readstat_por_parse_double+0x3e0>
   11158:	add	r5, r5, #1
   1115c:	cmp	r8, r5
   11160:	beq	1145c <readstat_por_parse_double+0x3e4>
   11164:	ldr	r3, [sp, #24]
   11168:	add	r3, r3, r4
   1116c:	ldrb	r9, [r3, #236]	; 0xec
   11170:	ldrb	lr, [r3, #204]	; 0xcc
   11174:	ldrb	r0, [r3, #220]	; 0xdc
   11178:	cmp	r9, #0
   1117c:	add	lr, sl, lr
   11180:	mov	r3, r0
   11184:	beq	11128 <readstat_por_parse_double+0xb0>
   11188:	sub	r1, r9, #1
   1118c:	adds	r1, lr, r1
   11190:	bcs	111c4 <readstat_por_parse_double+0x14c>
   11194:	ldrb	r7, [r5]
   11198:	mov	r2, lr
   1119c:	sub	r3, r1, r2
   111a0:	ldrb	ip, [r2, r3, asr #1]
   111a4:	add	r3, r2, r3, asr #1
   111a8:	cmp	r7, ip
   111ac:	subcc	r1, r3, #1
   111b0:	bcc	111bc <readstat_por_parse_double+0x144>
   111b4:	bls	1144c <readstat_por_parse_double+0x3d4>
   111b8:	add	r2, r3, #1
   111bc:	cmp	r1, r2
   111c0:	bcs	1119c <readstat_por_parse_double+0x124>
   111c4:	add	lr, lr, r9
   111c8:	add	r3, r0, r9
   111cc:	b	11128 <readstat_por_parse_double+0xb0>
   111d0:	add	r1, fp, r2
   111d4:	add	r3, r2, #1
   111d8:	ldr	r2, [sp, #32]
   111dc:	ldrb	r1, [r1, #168]	; 0xa8
   111e0:	add	r3, r2, r3
   111e4:	add	r1, r3, r1
   111e8:	cmp	r3, r1
   111ec:	beq	11150 <readstat_por_parse_double+0xd8>
   111f0:	ldrb	r2, [r3], #1
   111f4:	cmp	r2, #10
   111f8:	addls	pc, pc, r2, lsl #2
   111fc:	b	111e8 <readstat_por_parse_double+0x170>
   11200:	b	11318 <readstat_por_parse_double+0x2a0>
   11204:	b	112e4 <readstat_por_parse_double+0x26c>
   11208:	b	11240 <readstat_por_parse_double+0x1c8>
   1120c:	b	11238 <readstat_por_parse_double+0x1c0>
   11210:	b	1122c <readstat_por_parse_double+0x1b4>
   11214:	b	1125c <readstat_por_parse_double+0x1e4>
   11218:	b	11250 <readstat_por_parse_double+0x1d8>
   1121c:	b	11248 <readstat_por_parse_double+0x1d0>
   11220:	b	1122c <readstat_por_parse_double+0x1b4>
   11224:	b	11310 <readstat_por_parse_double+0x298>
   11228:	b	11264 <readstat_por_parse_double+0x1ec>
   1122c:	mov	r2, #1
   11230:	str	r2, [sp, #20]
   11234:	b	111e8 <readstat_por_parse_double+0x170>
   11238:	vldr	d5, [pc, #560]	; 11470 <readstat_por_parse_double+0x3f8>
   1123c:	b	111e8 <readstat_por_parse_double+0x170>
   11240:	vmov.f64	d7, d0
   11244:	b	111e8 <readstat_por_parse_double+0x170>
   11248:	vmov.f64	d1, d7
   1124c:	b	111e8 <readstat_por_parse_double+0x170>
   11250:	mov	r2, #1
   11254:	str	r2, [sp, #28]
   11258:	b	111e8 <readstat_por_parse_double+0x170>
   1125c:	vmov.f64	d3, d7
   11260:	b	111e8 <readstat_por_parse_double+0x170>
   11264:	vcmp.f64	d8, d8
   11268:	add	r8, r5, #1
   1126c:	vmrs	APSR_nzcv, fpscr
   11270:	movvc	r5, #1
   11274:	bvs	112a8 <readstat_por_parse_double+0x230>
   11278:	ldr	r3, [sp, #28]
   1127c:	vadd.f64	d8, d5, d3
   11280:	cmp	r3, #0
   11284:	vnegne.f64	d1, d1
   11288:	vcmp.f64	d1, #0.0
   1128c:	vmrs	APSR_nzcv, fpscr
   11290:	bne	11430 <readstat_por_parse_double+0x3b8>
   11294:	ldr	r3, [sp, #20]
   11298:	cmp	r3, #0
   1129c:	vnegne.f64	d8, d8
   112a0:	cmp	r5, #0
   112a4:	beq	113e4 <readstat_por_parse_double+0x36c>
   112a8:	ldr	r3, [sp, #36]	; 0x24
   112ac:	cmp	r3, #0
   112b0:	beq	112bc <readstat_por_parse_double+0x244>
   112b4:	ldr	r3, [sp, #36]	; 0x24
   112b8:	vstr	d8, [r3]
   112bc:	sub	r0, r8, r6
   112c0:	add	sp, sp, #1072	; 0x430
   112c4:	add	sp, sp, #4
   112c8:	vpop	{d8-d9}
   112cc:	ldrd	r4, [sp]
   112d0:	ldrd	r6, [sp, #8]
   112d4:	ldrd	r8, [sp, #16]
   112d8:	ldrd	sl, [sp, #24]
   112dc:	add	sp, sp, #32
   112e0:	pop	{pc}		; (ldr pc, [sp], #4)
   112e4:	ldrb	r2, [r5]
   112e8:	sub	r0, r2, #48	; 0x30
   112ec:	uxtb	ip, r0
   112f0:	cmp	ip, #9
   112f4:	bhi	113bc <readstat_por_parse_double+0x344>
   112f8:	vmov	s9, r0
   112fc:	vcvt.f64.s32	d4, s9
   11300:	vdiv.f64	d9, d4, d6
   11304:	vadd.f64	d5, d5, d9
   11308:	vmul.f64	d6, d6, d2
   1130c:	b	111e8 <readstat_por_parse_double+0x170>
   11310:	vldr	d8, [pc, #360]	; 11480 <readstat_por_parse_double+0x408>
   11314:	b	111e8 <readstat_por_parse_double+0x170>
   11318:	ldrb	r2, [r5]
   1131c:	sub	r0, r2, #48	; 0x30
   11320:	uxtb	ip, r0
   11324:	cmp	ip, #9
   11328:	bhi	11398 <readstat_por_parse_double+0x320>
   1132c:	vmov	s9, r0
   11330:	vcvt.f64.s32	d4, s9
   11334:	vmla.f64	d4, d7, d2
   11338:	vmov.f64	d7, d4
   1133c:	b	111e8 <readstat_por_parse_double+0x170>
   11340:	add	r0, lr, r7, lsl #1
   11344:	sub	r0, r0, #2
   11348:	cmp	lr, r0
   1134c:	bhi	11390 <readstat_por_parse_double+0x318>
   11350:	ldrb	r4, [r5]
   11354:	mov	r1, lr
   11358:	sub	r2, r0, r1
   1135c:	asr	r2, r2, #1
   11360:	bic	r2, r2, #1
   11364:	ldrb	ip, [r1, r2]
   11368:	add	r2, r1, r2
   1136c:	cmp	ip, r4
   11370:	subhi	r0, r2, #2
   11374:	bhi	11388 <readstat_por_parse_double+0x310>
   11378:	ldrb	ip, [r2, #1]
   1137c:	add	r1, r2, #2
   11380:	cmp	ip, r4
   11384:	bcs	11440 <readstat_por_parse_double+0x3c8>
   11388:	cmp	r1, r0
   1138c:	bls	11358 <readstat_por_parse_double+0x2e0>
   11390:	add	r3, r3, r7
   11394:	b	1113c <readstat_por_parse_double+0xc4>
   11398:	sub	r0, r2, #65	; 0x41
   1139c:	cmp	r0, #19
   113a0:	bhi	111e8 <readstat_por_parse_double+0x170>
   113a4:	sub	r2, r2, #55	; 0x37
   113a8:	vmov	s9, r2
   113ac:	vcvt.f64.s32	d4, s9
   113b0:	vmla.f64	d4, d7, d2
   113b4:	vmov.f64	d7, d4
   113b8:	b	111e8 <readstat_por_parse_double+0x170>
   113bc:	sub	r0, r2, #65	; 0x41
   113c0:	cmp	r0, #19
   113c4:	bhi	11308 <readstat_por_parse_double+0x290>
   113c8:	sub	r2, r2, #55	; 0x37
   113cc:	vmov	s9, r2
   113d0:	vcvt.f64.s32	d4, s9
   113d4:	vdiv.f64	d9, d4, d6
   113d8:	vadd.f64	d5, d5, d9
   113dc:	b	11308 <readstat_por_parse_double+0x290>
   113e0:	mov	r4, #1
   113e4:	ldr	r7, [sp, #40]	; 0x28
   113e8:	cmp	r7, #0
   113ec:	mvneq	r0, #0
   113f0:	beq	112c0 <readstat_por_parse_double+0x248>
   113f4:	ldr	r2, [sp, #44]	; 0x2c
   113f8:	add	r5, sp, #48	; 0x30
   113fc:	sub	r3, r8, r6
   11400:	mov	r1, #1024	; 0x400
   11404:	mov	r0, r5
   11408:	stm	sp, {r2, r6}
   1140c:	ldr	r2, [pc, #128]	; 11494 <readstat_por_parse_double+0x41c>
   11410:	str	r4, [sp, #8]
   11414:	add	r2, pc, r2
   11418:	bl	4254 <snprintf@plt>
   1141c:	mov	r0, r5
   11420:	ldr	r1, [sp, #1128]	; 0x468
   11424:	blx	r7
   11428:	mvn	r0, #0
   1142c:	b	112c0 <readstat_por_parse_double+0x248>
   11430:	vldr	d0, [pc, #64]	; 11478 <readstat_por_parse_double+0x400>
   11434:	bl	3f60 <pow@plt>
   11438:	vmul.f64	d8, d8, d0
   1143c:	b	11294 <readstat_por_parse_double+0x21c>
   11440:	sub	r2, r2, lr
   11444:	add	r3, r3, r2, asr #1
   11448:	b	1113c <readstat_por_parse_double+0xc4>
   1144c:	sub	r3, r3, lr
   11450:	add	r3, r0, r3
   11454:	b	1113c <readstat_por_parse_double+0xc4>
   11458:	mov	r8, r5
   1145c:	vcmp.f64	d8, d8
   11460:	vmrs	APSR_nzcv, fpscr
   11464:	movvc	r5, #0
   11468:	bvc	11278 <readstat_por_parse_double+0x200>
   1146c:	b	113e4 <readstat_por_parse_double+0x36c>
	...
   1147c:	.word	0x403e0000
   11480:	.word	0x00000000
   11484:	.word	0x7ff80000
   11488:	.word	0x0001517c
   1148c:	.word	0x00015148
   11490:	.word	0x0001513c
   11494:	.word	0x00014f3c

00011498 <read_bytes>:
   11498:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1149c:	mov	r5, r0
   114a0:	mov	r4, r1
   114a4:	strd	r6, [sp, #8]
   114a8:	add	r6, r1, r2
   114ac:	str	sl, [sp, #24]
   114b0:	ldr	sl, [r0, #44]	; 0x2c
   114b4:	strd	r8, [sp, #16]
   114b8:	mov	r9, r1
   114bc:	mov	r8, #0
   114c0:	str	lr, [sp, #28]
   114c4:	sub	sp, sp, #8
   114c8:	add	r7, sp, #7
   114cc:	cmp	r4, r6
   114d0:	bcs	11560 <read_bytes+0xc8>
   114d4:	ldr	r3, [r5, #52]	; 0x34
   114d8:	cmp	r3, #0
   114dc:	bne	11580 <read_bytes+0xe8>
   114e0:	mov	r1, #1
   114e4:	mov	r0, r7
   114e8:	ldr	r3, [sl, #12]
   114ec:	ldr	r2, [sl, #20]
   114f0:	blx	r3
   114f4:	cmp	r0, #0
   114f8:	beq	11560 <read_bytes+0xc8>
   114fc:	cmn	r0, #1
   11500:	beq	115b8 <read_bytes+0x120>
   11504:	ldrb	r3, [sp, #7]
   11508:	cmp	r3, #10
   1150c:	cmpne	r3, #13
   11510:	bne	11598 <read_bytes+0x100>
   11514:	cmp	r3, #13
   11518:	bne	11548 <read_bytes+0xb0>
   1151c:	mov	r1, #1
   11520:	mov	r0, r7
   11524:	ldr	r3, [sl, #12]
   11528:	ldr	r2, [sl, #20]
   1152c:	blx	r3
   11530:	add	r0, r0, #1
   11534:	cmp	r0, #1
   11538:	bls	115b8 <read_bytes+0x120>
   1153c:	ldrb	r3, [sp, #7]
   11540:	cmp	r3, #10
   11544:	bne	115b8 <read_bytes+0x120>
   11548:	ldr	r3, [r5, #40]	; 0x28
   1154c:	cmp	r4, r6
   11550:	str	r8, [r5, #40]	; 0x28
   11554:	rsb	r3, r3, #80	; 0x50
   11558:	str	r3, [r5, #52]	; 0x34
   1155c:	bcc	114d4 <read_bytes+0x3c>
   11560:	sub	r0, r4, r9
   11564:	add	sp, sp, #8
   11568:	ldrd	r4, [sp]
   1156c:	ldrd	r6, [sp, #8]
   11570:	ldrd	r8, [sp, #16]
   11574:	ldr	sl, [sp, #24]
   11578:	add	sp, sp, #28
   1157c:	pop	{pc}		; (ldr pc, [sp], #4)
   11580:	ldrb	r3, [r5, #48]	; 0x30
   11584:	strb	r3, [r4], #1
   11588:	ldr	r3, [r5, #52]	; 0x34
   1158c:	sub	r3, r3, #1
   11590:	str	r3, [r5, #52]	; 0x34
   11594:	b	114cc <read_bytes+0x34>
   11598:	ldr	r2, [r5, #40]	; 0x28
   1159c:	cmp	r2, #80	; 0x50
   115a0:	beq	115b8 <read_bytes+0x120>
   115a4:	strb	r3, [r4], #1
   115a8:	ldr	r3, [r5, #40]	; 0x28
   115ac:	add	r3, r3, #1
   115b0:	str	r3, [r5, #40]	; 0x28
   115b4:	b	114cc <read_bytes+0x34>
   115b8:	mvn	r0, #0
   115bc:	b	11564 <read_bytes+0xcc>

000115c0 <read_double_with_peek>:
   115c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   115c4:	mov	r4, #0
   115c8:	mov	r5, #0
   115cc:	movt	r5, #32760	; 0x7ff8
   115d0:	strd	r6, [sp, #8]
   115d4:	mov	r6, r0
   115d8:	strd	r8, [sp, #16]
   115dc:	mov	r8, r1
   115e0:	str	sl, [sp, #24]
   115e4:	str	lr, [sp, #28]
   115e8:	sub	sp, sp, #1456	; 0x5b0
   115ec:	sub	sp, sp, #8
   115f0:	add	r7, sp, #40	; 0x28
   115f4:	add	r1, r7, #1
   115f8:	strb	r2, [sp, #40]	; 0x28
   115fc:	mov	r2, #1
   11600:	strd	r4, [r7, #-8]
   11604:	bl	11498 <read_bytes>
   11608:	cmp	r0, #1
   1160c:	bne	116f4 <read_double_with_peek+0x134>
   11610:	ldrb	r2, [sp, #40]	; 0x28
   11614:	ldrb	r3, [sp, #41]	; 0x29
   11618:	add	r2, r6, r2, lsl #1
   1161c:	ldrh	r2, [r2, #94]	; 0x5e
   11620:	add	r3, r6, r3, lsl #1
   11624:	ldrh	r3, [r3, #94]	; 0x5e
   11628:	cmp	r2, #42	; 0x2a
   1162c:	beq	11718 <read_double_with_peek+0x158>
   11630:	add	r9, r7, #2
   11634:	mov	r4, #2
   11638:	mov	r5, #0
   1163c:	b	11674 <read_double_with_peek+0xb4>
   11640:	bl	11498 <read_bytes>
   11644:	cmp	r0, #1
   11648:	mov	r3, r9
   1164c:	add	r9, r9, #1
   11650:	bne	116f4 <read_double_with_peek+0x134>
   11654:	adds	r4, r4, #1
   11658:	adc	r5, r5, #0
   1165c:	cmp	r5, #0
   11660:	cmpeq	r4, #100	; 0x64
   11664:	beq	116f4 <read_double_with_peek+0x134>
   11668:	ldrb	r3, [r3]
   1166c:	add	r3, r6, r3, lsl #1
   11670:	ldrh	r3, [r3, #94]	; 0x5e
   11674:	cmp	r3, #47	; 0x2f
   11678:	mov	r1, r9
   1167c:	mov	r2, #1
   11680:	mov	r0, r6
   11684:	bne	11640 <read_double_with_peek+0x80>
   11688:	add	r0, r6, #94	; 0x5e
   1168c:	add	sl, sp, #140	; 0x8c
   11690:	mov	r2, sl
   11694:	mov	r3, #300	; 0x12c
   11698:	mov	r1, r4
   1169c:	str	r0, [sp]
   116a0:	mov	r0, r7
   116a4:	bl	4230 <por_utf8_encode@plt>
   116a8:	asr	r3, r0, #31
   116ac:	mov	r2, r0
   116b0:	cmn	r0, #1
   116b4:	mov	r9, r0
   116b8:	strd	r2, [sp, #24]
   116bc:	beq	1172c <read_double_with_peek+0x16c>
   116c0:	sub	r2, r7, #8
   116c4:	mov	r1, r9
   116c8:	ldr	r3, [r6, #24]
   116cc:	mov	r0, sl
   116d0:	ldr	ip, [r6, #36]	; 0x24
   116d4:	str	ip, [sp]
   116d8:	bl	4224 <readstat_por_parse_double@plt>
   116dc:	cmn	r0, #1
   116e0:	movne	r0, #0
   116e4:	beq	11778 <read_double_with_peek+0x1b8>
   116e8:	ldrd	r2, [r7, #-8]
   116ec:	strd	r2, [r8]
   116f0:	b	116f8 <read_double_with_peek+0x138>
   116f4:	mov	r0, #5
   116f8:	add	sp, sp, #1456	; 0x5b0
   116fc:	add	sp, sp, #8
   11700:	ldrd	r4, [sp]
   11704:	ldrd	r6, [sp, #8]
   11708:	ldrd	r8, [sp, #16]
   1170c:	ldr	sl, [sp, #24]
   11710:	add	sp, sp, #28
   11714:	pop	{pc}		; (ldr pc, [sp], #4)
   11718:	cmp	r3, #46	; 0x2e
   1171c:	bne	11630 <read_double_with_peek+0x70>
   11720:	mov	r0, #0
   11724:	strd	r4, [r8]
   11728:	b	116f8 <read_double_with_peek+0x138>
   1172c:	ldr	r3, [r6, #24]
   11730:	cmp	r3, #0
   11734:	moveq	r0, #16
   11738:	beq	116e8 <read_double_with_peek+0x128>
   1173c:	ldr	r2, [pc, #140]	; 117d0 <read_double_with_peek+0x210>
   11740:	mov	r1, #1024	; 0x400
   11744:	strd	r4, [sp]
   11748:	str	r4, [sp, #8]
   1174c:	add	r4, sp, #440	; 0x1b8
   11750:	mov	r0, r4
   11754:	str	r7, [sp, #12]
   11758:	add	r2, pc, r2
   1175c:	bl	4254 <snprintf@plt>
   11760:	mov	r0, r4
   11764:	ldr	r3, [r6, #24]
   11768:	ldr	r1, [r6, #36]	; 0x24
   1176c:	blx	r3
   11770:	mov	r0, #16
   11774:	b	116e8 <read_double_with_peek+0x128>
   11778:	ldr	r3, [r6, #24]
   1177c:	cmp	r3, #0
   11780:	moveq	r0, #5
   11784:	beq	116e8 <read_double_with_peek+0x128>
   11788:	asr	r3, r9, #31
   1178c:	mov	r2, r9
   11790:	add	r4, sp, #440	; 0x1b8
   11794:	mov	r1, #1024	; 0x400
   11798:	mov	r0, r4
   1179c:	strd	r2, [sp]
   117a0:	ldr	r2, [pc, #44]	; 117d4 <read_double_with_peek+0x214>
   117a4:	str	r9, [sp, #8]
   117a8:	str	sl, [sp, #12]
   117ac:	str	r7, [sp, #16]
   117b0:	add	r2, pc, r2
   117b4:	bl	4254 <snprintf@plt>
   117b8:	mov	r0, r4
   117bc:	ldr	r3, [r6, #24]
   117c0:	ldr	r1, [r6, #36]	; 0x24
   117c4:	blx	r3
   117c8:	mov	r0, #5
   117cc:	b	116e8 <read_double_with_peek+0x128>
   117d0:	.word	0x00014c2c
   117d4:	.word	0x00014c08

000117d8 <read_double>:
   117d8:	strd	r4, [sp, #-12]!
   117dc:	mov	r2, #1
   117e0:	mov	r5, r1
   117e4:	str	lr, [sp, #8]
   117e8:	sub	sp, sp, #12
   117ec:	mov	r4, r0
   117f0:	add	r1, sp, #7
   117f4:	bl	11498 <read_bytes>
   117f8:	cmp	r0, #1
   117fc:	movne	r0, #5
   11800:	bne	11814 <read_double+0x3c>
   11804:	mov	r1, r5
   11808:	mov	r0, r4
   1180c:	ldrb	r2, [sp, #7]
   11810:	bl	115c0 <read_double_with_peek>
   11814:	add	sp, sp, #12
   11818:	ldrd	r4, [sp]
   1181c:	add	sp, sp, #8
   11820:	pop	{pc}		; (ldr pc, [sp], #4)

00011824 <maybe_read_string>:
   11824:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11828:	mov	r4, r0
   1182c:	strd	r6, [sp, #8]
   11830:	strd	r8, [sp, #16]
   11834:	mov	r9, r1
   11838:	mov	r8, r3
   1183c:	str	sl, [sp, #24]
   11840:	mov	sl, r2
   11844:	mov	r2, #1
   11848:	str	lr, [sp, #28]
   1184c:	sub	sp, sp, #1040	; 0x410
   11850:	add	r6, sp, #16
   11854:	mov	r1, r6
   11858:	bl	11498 <read_bytes>
   1185c:	cmp	r0, #1
   11860:	movne	r0, #0
   11864:	movne	r7, #5
   11868:	bne	11948 <maybe_read_string+0x124>
   1186c:	ldrb	r2, [sp, #16]
   11870:	add	r3, r4, r2, lsl #1
   11874:	ldrh	r3, [r3, #94]	; 0x5e
   11878:	cmp	r3, #90	; 0x5a
   1187c:	moveq	r7, #0
   11880:	beq	11948 <maybe_read_string+0x124>
   11884:	sub	r1, r6, #8
   11888:	mov	r0, r4
   1188c:	bl	115c0 <read_double_with_peek>
   11890:	subs	r7, r0, #0
   11894:	bne	11944 <maybe_read_string+0x120>
   11898:	vldr	d7, [r6, #-8]
   1189c:	vcmpe.f64	d7, #0.0
   118a0:	vmrs	APSR_nzcv, fpscr
   118a4:	bmi	11978 <maybe_read_string+0x154>
   118a8:	vldr	d6, [pc, #280]	; 119c8 <maybe_read_string+0x1a4>
   118ac:	vcmpe.f64	d7, d6
   118b0:	vmrs	APSR_nzcv, fpscr
   118b4:	bgt	11978 <maybe_read_string+0x154>
   118b8:	vcmp.f64	d7, d7
   118bc:	vmrs	APSR_nzcv, fpscr
   118c0:	bvs	11978 <maybe_read_string+0x154>
   118c4:	vcvt.u32.f64	s15, d7
   118c8:	ldr	r1, [r4, #616]	; 0x268
   118cc:	ldr	r3, [r4, #620]	; 0x26c
   118d0:	vmov	r5, s15
   118d4:	cmp	r3, r5
   118d8:	bcc	11950 <maybe_read_string+0x12c>
   118dc:	mov	r2, r5
   118e0:	mov	r0, r4
   118e4:	bl	11498 <read_bytes>
   118e8:	cmn	r0, #1
   118ec:	moveq	r7, #2
   118f0:	beq	11924 <maybe_read_string+0x100>
   118f4:	add	ip, r4, #94	; 0x5e
   118f8:	sub	r3, sl, #1
   118fc:	ldr	r0, [r4, #616]	; 0x268
   11900:	mov	r2, r9
   11904:	mov	r1, r5
   11908:	str	ip, [sp]
   1190c:	bl	4230 <por_utf8_encode@plt>
   11910:	cmn	r0, #1
   11914:	movne	r3, #0
   11918:	strbne	r3, [r9, r0]
   1191c:	strne	r3, [r8]
   11920:	beq	11980 <maybe_read_string+0x15c>
   11924:	mov	r0, r7
   11928:	add	sp, sp, #1040	; 0x410
   1192c:	ldrd	r4, [sp]
   11930:	ldrd	r6, [sp, #8]
   11934:	ldrd	r8, [sp, #16]
   11938:	ldr	sl, [sp, #24]
   1193c:	add	sp, sp, #28
   11940:	pop	{pc}		; (ldr pc, [sp], #4)
   11944:	mov	r0, #0
   11948:	str	r0, [r8]
   1194c:	b	11924 <maybe_read_string+0x100>
   11950:	mov	r0, r1
   11954:	vmov	r1, s15
   11958:	vstr	s15, [r4, #620]	; 0x26c
   1195c:	bl	3fcc <realloc@plt>
   11960:	mov	r1, r7
   11964:	str	r0, [r4, #616]	; 0x268
   11968:	ldr	r2, [r4, #620]	; 0x26c
   1196c:	bl	4278 <memset@plt>
   11970:	ldr	r1, [r4, #616]	; 0x268
   11974:	b	118dc <maybe_read_string+0xb8>
   11978:	mov	r7, #5
   1197c:	b	11924 <maybe_read_string+0x100>
   11980:	ldr	r3, [r4, #24]
   11984:	cmp	r3, #0
   11988:	moveq	r7, #16
   1198c:	beq	11924 <maybe_read_string+0x100>
   11990:	ldr	r2, [pc, #56]	; 119d0 <maybe_read_string+0x1ac>
   11994:	mov	r3, r5
   11998:	mov	r1, #1024	; 0x400
   1199c:	mov	r0, r6
   119a0:	mov	r7, #16
   119a4:	ldr	ip, [r4, #616]	; 0x268
   119a8:	add	r2, pc, r2
   119ac:	str	ip, [sp]
   119b0:	bl	4254 <snprintf@plt>
   119b4:	mov	r0, r6
   119b8:	ldr	r3, [r4, #24]
   119bc:	ldr	r1, [r4, #36]	; 0x24
   119c0:	blx	r3
   119c4:	b	11924 <maybe_read_string+0x100>
   119c8:	.word	0x00000000
   119cc:	.word	0x40d38800
   119d0:	.word	0x00014a48

000119d4 <read_integer_in_range.constprop.1>:
   119d4:	strd	r4, [sp, #-16]!
   119d8:	mov	r4, #0
   119dc:	mov	r5, #0
   119e0:	movt	r5, #32760	; 0x7ff8
   119e4:	str	r6, [sp, #8]
   119e8:	mov	r6, r2
   119ec:	str	lr, [sp, #12]
   119f0:	sub	sp, sp, #16
   119f4:	str	r1, [sp, #4]
   119f8:	add	r1, sp, #8
   119fc:	strd	r4, [sp, #8]
   11a00:	bl	117d8 <read_double>
   11a04:	cmp	r0, #0
   11a08:	bne	11a44 <read_integer_in_range.constprop.1+0x70>
   11a0c:	vldr	d7, [sp, #8]
   11a10:	vcmp.f64	d7, d7
   11a14:	vmrs	APSR_nzcv, fpscr
   11a18:	bvs	11a58 <read_integer_in_range.constprop.1+0x84>
   11a1c:	vcmpe.f64	d7, #0.0
   11a20:	vmrs	APSR_nzcv, fpscr
   11a24:	bmi	11a58 <read_integer_in_range.constprop.1+0x84>
   11a28:	vldr	s13, [sp, #4]
   11a2c:	vcvt.f64.s32	d6, s13
   11a30:	vcmpe.f64	d7, d6
   11a34:	vmrs	APSR_nzcv, fpscr
   11a38:	bgt	11a58 <read_integer_in_range.constprop.1+0x84>
   11a3c:	vcvt.s32.f64	s14, d7
   11a40:	vstr	s14, [r6]
   11a44:	add	sp, sp, #16
   11a48:	ldrd	r4, [sp]
   11a4c:	ldr	r6, [sp, #8]
   11a50:	add	sp, sp, #12
   11a54:	pop	{pc}		; (ldr pc, [sp], #4)
   11a58:	mov	r0, #5
   11a5c:	b	11a44 <read_integer_in_range.constprop.1+0x70>

00011a60 <read_version_and_timestamp>:
   11a60:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a64:	mvn	r3, #0
   11a68:	mov	r4, #0
   11a6c:	strd	r6, [sp, #8]
   11a70:	mov	r2, #1
   11a74:	mov	r6, r0
   11a78:	str	r8, [sp, #16]
   11a7c:	str	lr, [sp, #20]
   11a80:	sub	sp, sp, #320	; 0x140
   11a84:	add	r5, sp, #20
   11a88:	add	r1, sp, #15
   11a8c:	str	r4, [r5, #4]
   11a90:	str	r4, [r5, #8]
   11a94:	str	r4, [r5, #12]
   11a98:	str	r4, [r5, #16]
   11a9c:	str	r4, [r5, #20]
   11aa0:	str	r4, [sp, #20]
   11aa4:	str	r4, [r5, #24]
   11aa8:	str	r4, [r5, #28]
   11aac:	str	r4, [r5, #36]	; 0x24
   11ab0:	str	r4, [r5, #40]	; 0x28
   11ab4:	str	r3, [sp, #52]	; 0x34
   11ab8:	bl	11498 <read_bytes>
   11abc:	cmp	r0, #1
   11ac0:	movne	r4, #2
   11ac4:	beq	11ae4 <read_version_and_timestamp+0x84>
   11ac8:	mov	r0, r4
   11acc:	add	sp, sp, #320	; 0x140
   11ad0:	ldrd	r4, [sp]
   11ad4:	ldrd	r6, [sp, #8]
   11ad8:	ldr	r8, [sp, #16]
   11adc:	add	sp, sp, #20
   11ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ae4:	add	r8, sp, #16
   11ae8:	add	r7, sp, #64	; 0x40
   11aec:	str	r4, [sp, #16]
   11af0:	mov	r3, r8
   11af4:	mov	r1, r7
   11af8:	mov	r2, #256	; 0x100
   11afc:	mov	r0, r6
   11b00:	bl	11824 <maybe_read_string>
   11b04:	subs	r4, r0, #0
   11b08:	bne	11ac8 <read_version_and_timestamp+0x68>
   11b0c:	ldr	r3, [sp, #16]
   11b10:	cmp	r3, #0
   11b14:	bne	11bc8 <read_version_and_timestamp+0x168>
   11b18:	ldr	r1, [pc, #184]	; 11bd8 <read_version_and_timestamp+0x178>
   11b1c:	add	ip, sp, #32
   11b20:	add	r3, sp, #36	; 0x24
   11b24:	add	r2, sp, #40	; 0x28
   11b28:	mov	r0, r7
   11b2c:	str	ip, [sp]
   11b30:	add	r1, pc, r1
   11b34:	bl	4260 <__isoc99_sscanf@plt>
   11b38:	cmp	r0, #3
   11b3c:	bne	11bd0 <read_version_and_timestamp+0x170>
   11b40:	mov	r3, r8
   11b44:	mov	r2, #256	; 0x100
   11b48:	str	r4, [sp, #16]
   11b4c:	mov	r1, r7
   11b50:	mov	r0, r6
   11b54:	bl	11824 <maybe_read_string>
   11b58:	subs	r4, r0, #0
   11b5c:	bne	11ac8 <read_version_and_timestamp+0x68>
   11b60:	ldr	r3, [sp, #16]
   11b64:	cmp	r3, #0
   11b68:	bne	11bc8 <read_version_and_timestamp+0x168>
   11b6c:	ldr	r1, [pc, #104]	; 11bdc <read_version_and_timestamp+0x17c>
   11b70:	mov	r0, r7
   11b74:	add	r3, sp, #24
   11b78:	add	r2, sp, #28
   11b7c:	str	r5, [sp]
   11b80:	add	r1, pc, r1
   11b84:	bl	4260 <__isoc99_sscanf@plt>
   11b88:	cmp	r0, #3
   11b8c:	bne	11bd0 <read_version_and_timestamp+0x170>
   11b90:	ldrd	r2, [sp, #36]	; 0x24
   11b94:	mov	r0, r5
   11b98:	sub	r3, r3, #1888	; 0x760
   11b9c:	sub	r2, r2, #1
   11ba0:	sub	r3, r3, #12
   11ba4:	strd	r2, [sp, #36]	; 0x24
   11ba8:	bl	3e28 <mktime@plt>
   11bac:	ldrb	r3, [sp, #15]
   11bb0:	add	r3, r6, r3, lsl #1
   11bb4:	ldrh	r3, [r3, #94]	; 0x5e
   11bb8:	str	r0, [r6, #56]	; 0x38
   11bbc:	sub	r3, r3, #65	; 0x41
   11bc0:	str	r3, [r6, #60]	; 0x3c
   11bc4:	b	11ac8 <read_version_and_timestamp+0x68>
   11bc8:	mov	r4, #5
   11bcc:	b	11ac8 <read_version_and_timestamp+0x68>
   11bd0:	mov	r4, #29
   11bd4:	b	11ac8 <read_version_and_timestamp+0x68>
   11bd8:	.word	0x000148e0
   11bdc:	.word	0x000148a0

00011be0 <handle_variables>:
   11be0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11be4:	mov	r5, r0
   11be8:	strd	r6, [sp, #8]
   11bec:	ldr	r6, [r0, #632]	; 0x278
   11bf0:	strd	r8, [sp, #16]
   11bf4:	strd	sl, [sp, #24]
   11bf8:	str	lr, [sp, #32]
   11bfc:	sub	sp, sp, #268	; 0x10c
   11c00:	cmp	r6, #0
   11c04:	ble	11cd0 <handle_variables+0xf0>
   11c08:	ldr	r3, [pc, #344]	; 11d68 <handle_variables+0x188>
   11c0c:	mov	r7, #0
   11c10:	add	sl, sp, #8
   11c14:	mov	r9, r7
   11c18:	mov	r4, r7
   11c1c:	add	r3, pc, r3
   11c20:	str	r3, [sp, #4]
   11c24:	b	11c7c <handle_variables+0x9c>
   11c28:	ldr	r2, [r6, #4]
   11c2c:	ldr	r3, [r5, #36]	; 0x24
   11c30:	ldr	r1, [r5, #648]	; 0x288
   11c34:	cmn	r2, #1
   11c38:	movne	r2, sl
   11c3c:	moveq	r2, #0
   11c40:	ldr	r1, [r1, r4, lsl #2]
   11c44:	blx	r8
   11c48:	cmp	r0, #1
   11c4c:	beq	11d60 <handle_variables+0x180>
   11c50:	cmp	r0, #2
   11c54:	bne	11cc8 <handle_variables+0xe8>
   11c58:	ldr	r3, [r5, #648]	; 0x288
   11c5c:	mov	r2, #1
   11c60:	ldr	r3, [r3, fp]
   11c64:	str	r2, [r3, #2144]	; 0x860
   11c68:	ldr	r6, [r5, #632]	; 0x278
   11c6c:	add	r4, r4, #1
   11c70:	add	r7, r7, #280	; 0x118
   11c74:	cmp	r6, r4
   11c78:	ble	11cd0 <handle_variables+0xf0>
   11c7c:	mov	r1, r9
   11c80:	ldr	r2, [r5, #612]	; 0x264
   11c84:	lsl	fp, r4, #2
   11c88:	ldr	r6, [r5, #652]	; 0x28c
   11c8c:	ldr	r8, [r5, #648]	; 0x288
   11c90:	add	r6, r6, r7
   11c94:	mov	r0, r6
   11c98:	str	r4, [r6, #8]
   11c9c:	bl	4248 <spss_init_variable_for_info@plt>
   11ca0:	mov	r1, #256	; 0x100
   11ca4:	str	r0, [r8, r4, lsl #2]
   11ca8:	mov	r0, sl
   11cac:	ldr	r3, [r6, #4]
   11cb0:	ldr	r2, [sp, #4]
   11cb4:	bl	4254 <snprintf@plt>
   11cb8:	ldr	r8, [r5, #8]
   11cbc:	mov	r0, r4
   11cc0:	cmp	r8, #0
   11cc4:	bne	11c28 <handle_variables+0x48>
   11cc8:	add	r9, r9, #1
   11ccc:	b	11c68 <handle_variables+0x88>
   11cd0:	ldr	r9, [r5, #12]
   11cd4:	cmp	r9, #0
   11cd8:	beq	11d40 <handle_variables+0x160>
   11cdc:	ldrb	r3, [r5, #64]	; 0x40
   11ce0:	cmp	r3, #0
   11ce4:	beq	11d40 <handle_variables+0x160>
   11ce8:	cmp	r6, #0
   11cec:	ble	11d40 <handle_variables+0x160>
   11cf0:	ldr	r4, [r5, #652]	; 0x28c
   11cf4:	add	r8, r5, #64	; 0x40
   11cf8:	mov	r7, #0
   11cfc:	add	r4, r4, #187	; 0xbb
   11d00:	b	11d10 <handle_variables+0x130>
   11d04:	add	r7, r7, #1
   11d08:	cmp	r7, r6
   11d0c:	beq	11d40 <handle_variables+0x160>
   11d10:	mov	r0, r4
   11d14:	mov	r1, r8
   11d18:	bl	3dd4 <strcmp@plt>
   11d1c:	cmp	r0, #0
   11d20:	add	r4, r4, #280	; 0x118
   11d24:	bne	11d04 <handle_variables+0x124>
   11d28:	ldr	r1, [r5, #36]	; 0x24
   11d2c:	ldr	r3, [r5, #648]	; 0x288
   11d30:	ldr	r0, [r3, r7, lsl #2]
   11d34:	blx	r9
   11d38:	cmp	r0, #0
   11d3c:	bne	11d60 <handle_variables+0x180>
   11d40:	mov	r0, #0
   11d44:	add	sp, sp, #268	; 0x10c
   11d48:	ldrd	r4, [sp]
   11d4c:	ldrd	r6, [sp, #8]
   11d50:	ldrd	r8, [sp, #16]
   11d54:	ldrd	sl, [sp, #24]
   11d58:	add	sp, sp, #32
   11d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d60:	mov	r0, #4
   11d64:	b	11d44 <handle_variables+0x164>
   11d68:	.word	0x00014814

00011d6c <readstat_parse_por>:
   11d6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11d70:	mov	r5, r1
   11d74:	strd	r6, [sp, #8]
   11d78:	mov	r7, r0
   11d7c:	strd	r8, [sp, #16]
   11d80:	strd	sl, [sp, #24]
   11d84:	mov	sl, r2
   11d88:	str	lr, [sp, #32]
   11d8c:	vpush	{d8-d9}
   11d90:	sub	sp, sp, #3136	; 0xc40
   11d94:	sub	sp, sp, #4
   11d98:	ldr	fp, [r0, #32]
   11d9c:	bl	4464 <por_ctx_init@plt>
   11da0:	mov	r4, r0
   11da4:	ldrd	r0, [r7]
   11da8:	ldrd	r8, [r7, #8]
   11dac:	ldr	ip, [r7, #48]	; 0x30
   11db0:	ldrd	r2, [r7, #16]
   11db4:	ldr	lr, [r7, #44]	; 0x2c
   11db8:	strd	r0, [r4]
   11dbc:	cmp	ip, #0
   11dc0:	ldrd	r0, [r7, #24]
   11dc4:	strgt	ip, [r4, #644]	; 0x284
   11dc8:	ldr	r7, [r7, #40]	; 0x28
   11dcc:	strd	r8, [r4, #8]
   11dd0:	ldr	r6, [pc, #1472]	; 12398 <readstat_parse_por+0x62c>
   11dd4:	strd	r2, [r4, #16]
   11dd8:	strd	r0, [r4, #24]
   11ddc:	cmp	r7, #0
   11de0:	str	sl, [r4, #36]	; 0x24
   11de4:	str	fp, [r4, #44]	; 0x2c
   11de8:	add	r6, pc, r6
   11dec:	str	lr, [r4, #640]	; 0x280
   11df0:	beq	11e28 <readstat_parse_por+0xbc>
   11df4:	ldr	r8, [pc, #1440]	; 1239c <readstat_parse_por+0x630>
   11df8:	mov	r0, r7
   11dfc:	add	r8, pc, r8
   11e00:	mov	r1, r8
   11e04:	bl	3dd4 <strcmp@plt>
   11e08:	cmp	r0, #0
   11e0c:	bne	11f00 <readstat_parse_por+0x194>
   11e10:	ldr	r0, [r4, #612]	; 0x264
   11e14:	cmn	r0, #1
   11e18:	moveq	r3, #0
   11e1c:	moveq	r5, #7
   11e20:	streq	r3, [r4, #612]	; 0x264
   11e24:	beq	11ec4 <readstat_parse_por+0x158>
   11e28:	mov	r0, r5
   11e2c:	ldr	r3, [fp]
   11e30:	ldr	r1, [fp, #20]
   11e34:	blx	r3
   11e38:	cmn	r0, #1
   11e3c:	moveq	r5, #1
   11e40:	beq	11ec4 <readstat_parse_por+0x158>
   11e44:	mov	r1, #2
   11e48:	mov	r0, #0
   11e4c:	ldr	r3, [fp, #8]
   11e50:	ldr	r2, [fp, #20]
   11e54:	blx	r3
   11e58:	cmn	r0, #1
   11e5c:	str	r0, [r4, #32]
   11e60:	beq	11f14 <readstat_parse_por+0x1a8>
   11e64:	mov	r1, #0
   11e68:	ldr	r3, [fp, #8]
   11e6c:	mov	r0, r1
   11e70:	ldr	r2, [fp, #20]
   11e74:	blx	r3
   11e78:	cmn	r0, #1
   11e7c:	beq	11f14 <readstat_parse_por+0x1a8>
   11e80:	add	sl, sp, #112	; 0x70
   11e84:	mov	r2, #200	; 0xc8
   11e88:	mov	r1, sl
   11e8c:	mov	r0, r4
   11e90:	bl	11498 <read_bytes>
   11e94:	cmp	r0, #200	; 0xc8
   11e98:	bne	11fc4 <readstat_parse_por+0x258>
   11e9c:	mov	r1, #0
   11ea0:	add	r8, r4, #73	; 0x49
   11ea4:	mov	r0, r8
   11ea8:	mov	r3, #20
   11eac:	add	r2, sl, #60	; 0x3c
   11eb0:	str	r1, [sp]
   11eb4:	mov	r1, #21
   11eb8:	bl	420c <readstat_convert@plt>
   11ebc:	subs	r5, r0, #0
   11ec0:	beq	11f1c <readstat_parse_por+0x1b0>
   11ec4:	ldr	r3, [fp, #4]
   11ec8:	ldr	r0, [fp, #20]
   11ecc:	blx	r3
   11ed0:	mov	r0, r4
   11ed4:	bl	3d8c <por_ctx_free@plt>
   11ed8:	mov	r0, r5
   11edc:	add	sp, sp, #3136	; 0xc40
   11ee0:	add	sp, sp, #4
   11ee4:	vpop	{d8-d9}
   11ee8:	ldrd	r4, [sp]
   11eec:	ldrd	r6, [sp, #8]
   11ef0:	ldrd	r8, [sp, #16]
   11ef4:	ldrd	sl, [sp, #24]
   11ef8:	add	sp, sp, #32
   11efc:	pop	{pc}		; (ldr pc, [sp], #4)
   11f00:	mov	r1, r8
   11f04:	mov	r0, r7
   11f08:	bl	4104 <iconv_open@plt>
   11f0c:	str	r0, [r4, #612]	; 0x264
   11f10:	b	11e14 <readstat_parse_por+0xa8>
   11f14:	mov	r5, #15
   11f18:	b	11ec4 <readstat_parse_por+0x158>
   11f1c:	add	r5, sp, #312	; 0x138
   11f20:	mov	r2, #256	; 0x100
   11f24:	mov	r1, r5
   11f28:	mov	r0, r4
   11f2c:	bl	11498 <read_bytes>
   11f30:	cmp	r0, #256	; 0x100
   11f34:	bne	11fc4 <readstat_parse_por+0x258>
   11f38:	ldr	r2, [pc, #1120]	; 123a0 <readstat_parse_por+0x634>
   11f3c:	mov	r1, r5
   11f40:	ldr	r3, [pc, #1116]	; 123a4 <readstat_parse_por+0x638>
   11f44:	ldrb	r0, [sp, #438]	; 0x1b6
   11f48:	strb	r0, [r4, #48]	; 0x30
   11f4c:	ldr	r5, [r6, r2]
   11f50:	ldr	lr, [r6, r3]
   11f54:	sub	r3, r5, #1
   11f58:	add	r5, r5, #255	; 0xff
   11f5c:	mov	r2, lr
   11f60:	ldrsb	r0, [r3, #1]!
   11f64:	cmp	r0, #0
   11f68:	bne	11f78 <readstat_parse_por+0x20c>
   11f6c:	ldrh	r0, [r2]
   11f70:	cmp	r0, #0
   11f74:	beq	11f84 <readstat_parse_por+0x218>
   11f78:	ldrb	ip, [r1]
   11f7c:	add	ip, r4, ip, lsl #1
   11f80:	strh	r0, [ip, #94]	; 0x5e
   11f84:	cmp	r5, r3
   11f88:	add	r1, r1, #1
   11f8c:	add	r2, r2, #2
   11f90:	bne	11f60 <readstat_parse_por+0x1f4>
   11f94:	ldrb	r3, [sp, #376]	; 0x178
   11f98:	add	r7, sp, #80	; 0x50
   11f9c:	mov	r2, #8
   11fa0:	mov	r1, r7
   11fa4:	mov	r0, r4
   11fa8:	ldrh	ip, [lr, #128]	; 0x80
   11fac:	add	r3, r4, r3, lsl #1
   11fb0:	strh	ip, [r3, #94]	; 0x5e
   11fb4:	bl	11498 <read_bytes>
   11fb8:	cmp	r0, #8
   11fbc:	mov	r5, r0
   11fc0:	beq	11fcc <readstat_parse_por+0x260>
   11fc4:	mov	r5, #2
   11fc8:	b	11ec4 <readstat_parse_por+0x158>
   11fcc:	add	r3, sp, #96	; 0x60
   11fd0:	add	r0, r4, #94	; 0x5e
   11fd4:	add	r6, sp, #88	; 0x58
   11fd8:	mov	r1, r5
   11fdc:	mov	r2, r6
   11fe0:	str	r0, [sp]
   11fe4:	mov	r0, r7
   11fe8:	str	r3, [sp, #40]	; 0x28
   11fec:	mov	r3, r5
   11ff0:	bl	4230 <por_utf8_encode@plt>
   11ff4:	cmn	r0, #1
   11ff8:	mov	r2, r0
   11ffc:	beq	12a64 <readstat_parse_por+0xcf8>
   12000:	ldr	r0, [pc, #928]	; 123a8 <readstat_parse_por+0x63c>
   12004:	mov	r1, r6
   12008:	add	r0, pc, r0
   1200c:	bl	44d0 <strncmp@plt>
   12010:	cmp	r0, #0
   12014:	bne	12660 <readstat_parse_por+0x8f4>
   12018:	mvn	r3, #0
   1201c:	mov	r0, r4
   12020:	str	r3, [r4, #636]	; 0x27c
   12024:	bl	3fe4 <read_version_and_timestamp@plt>
   12028:	subs	r5, r0, #0
   1202c:	bne	11ec4 <readstat_parse_por+0x158>
   12030:	movw	r3, #16960	; 0x4240
   12034:	movt	r3, #15
   12038:	vldr	d9, [pc, #840]	; 12388 <readstat_parse_por+0x61c>
   1203c:	add	r9, sp, #2096	; 0x830
   12040:	vldr	d8, [pc, #840]	; 12390 <readstat_parse_por+0x624>
   12044:	add	r9, r9, #8
   12048:	str	r3, [sp, #20]
   1204c:	add	r3, sp, #2112	; 0x840
   12050:	str	r3, [sp, #44]	; 0x2c
   12054:	add	r3, sp, #1072	; 0x430
   12058:	add	r3, r3, #8
   1205c:	str	r3, [sp, #52]	; 0x34
   12060:	mov	r2, #1
   12064:	mov	r1, r9
   12068:	mov	r0, r4
   1206c:	bl	11498 <read_bytes>
   12070:	cmp	r0, #1
   12074:	bne	12660 <readstat_parse_por+0x8f4>
   12078:	ldrb	r3, [sp, #2104]	; 0x838
   1207c:	add	r3, r4, r3, lsl #1
   12080:	ldrh	r3, [r3, #94]	; 0x5e
   12084:	sub	r3, r3, #49	; 0x31
   12088:	cmp	r3, #21
   1208c:	addls	pc, pc, r3, lsl #2
   12090:	b	12660 <readstat_parse_por+0x8f4>
   12094:	b	1284c <readstat_parse_por+0xae0>
   12098:	b	1284c <readstat_parse_por+0xae0>
   1209c:	b	1284c <readstat_parse_por+0xae0>
   120a0:	b	12750 <readstat_parse_por+0x9e4>
   120a4:	b	12a38 <readstat_parse_por+0xccc>
   120a8:	b	12a24 <readstat_parse_por+0xcb8>
   120ac:	b	123bc <readstat_parse_por+0x650>
   120b0:	b	12300 <readstat_parse_por+0x594>
   120b4:	b	126e0 <readstat_parse_por+0x974>
   120b8:	b	12660 <readstat_parse_por+0x8f4>
   120bc:	b	12660 <readstat_parse_por+0x8f4>
   120c0:	b	12660 <readstat_parse_por+0x8f4>
   120c4:	b	12660 <readstat_parse_por+0x8f4>
   120c8:	b	12660 <readstat_parse_por+0x8f4>
   120cc:	b	12660 <readstat_parse_por+0x8f4>
   120d0:	b	12660 <readstat_parse_por+0x8f4>
   120d4:	b	12668 <readstat_parse_por+0x8fc>
   120d8:	b	125c8 <readstat_parse_por+0x85c>
   120dc:	b	12514 <readstat_parse_por+0x7a8>
   120e0:	b	12860 <readstat_parse_por+0xaf4>
   120e4:	b	12268 <readstat_parse_por+0x4fc>
   120e8:	b	120ec <readstat_parse_por+0x380>
   120ec:	ldr	r3, [r4, #632]	; 0x278
   120f0:	ldr	r2, [r4, #636]	; 0x27c
   120f4:	sub	r3, r3, #1
   120f8:	cmp	r2, r3
   120fc:	movne	r5, #8
   12100:	bne	11ec4 <readstat_parse_por+0x158>
   12104:	mov	r0, r4
   12108:	bl	450c <handle_variables@plt>
   1210c:	subs	r5, r0, #0
   12110:	bne	11ec4 <readstat_parse_por+0x158>
   12114:	ldr	r3, [r4, #16]
   12118:	cmp	r3, #0
   1211c:	beq	11ec4 <readstat_parse_por+0x158>
   12120:	ldr	r3, [r4, #632]	; 0x278
   12124:	cmp	r3, #0
   12128:	beq	11ec4 <readstat_parse_por+0x158>
   1212c:	str	fp, [sp, #20]
   12130:	add	r6, sp, #1072	; 0x430
   12134:	ldr	fp, [sp, #40]	; 0x28
   12138:	add	r6, r6, #8
   1213c:	mov	r8, #0
   12140:	str	r8, [sp, #72]	; 0x48
   12144:	ldr	r3, [r4, #632]	; 0x278
   12148:	cmp	r3, r8
   1214c:	ble	12b40 <readstat_parse_por+0xdd4>
   12150:	str	r6, [sp, #24]
   12154:	str	r7, [sp, #32]
   12158:	str	r8, [sp, #40]	; 0x28
   1215c:	b	121d8 <readstat_parse_por+0x46c>
   12160:	cmp	r3, #5
   12164:	beq	12ab8 <readstat_parse_por+0xd4c>
   12168:	ldr	r5, [r4, #16]
   1216c:	cmp	r5, #0
   12170:	beq	121bc <readstat_parse_por+0x450>
   12174:	ldr	r2, [sp, #40]	; 0x28
   12178:	ldr	r3, [r4, #648]	; 0x288
   1217c:	ldr	r1, [r3, r2, lsl #2]
   12180:	ldr	r3, [r1, #2144]	; 0x860
   12184:	cmp	r3, #0
   12188:	bne	121bc <readstat_parse_por+0x450>
   1218c:	ldr	r3, [r4, #644]	; 0x284
   12190:	cmp	r3, #0
   12194:	bne	121bc <readstat_parse_por+0x450>
   12198:	ldrd	r6, [sl, #-8]
   1219c:	ldr	r0, [r4, #36]	; 0x24
   121a0:	ldm	fp, {r2, r3}
   121a4:	strd	r6, [sp]
   121a8:	str	r0, [sp, #8]
   121ac:	ldr	r0, [r4, #628]	; 0x274
   121b0:	blx	r5
   121b4:	cmp	r0, #0
   121b8:	bne	12ba8 <readstat_parse_por+0xe3c>
   121bc:	ldr	r2, [sp, #40]	; 0x28
   121c0:	add	r8, r8, #280	; 0x118
   121c4:	ldr	r3, [r4, #632]	; 0x278
   121c8:	add	r2, r2, #1
   121cc:	cmp	r2, r3
   121d0:	str	r2, [sp, #40]	; 0x28
   121d4:	bge	12b38 <readstat_parse_por+0xdcc>
   121d8:	ldr	r2, [r4, #652]	; 0x28c
   121dc:	mov	r0, #0
   121e0:	mov	r1, #0
   121e4:	ldr	r3, [r2, r8]
   121e8:	add	r2, r2, r8
   121ec:	mov	r7, r2
   121f0:	strd	r0, [fp]
   121f4:	strd	r0, [fp, #8]
   121f8:	cmp	r3, #0
   121fc:	str	r3, [sp, #104]	; 0x68
   12200:	bne	12160 <readstat_parse_por+0x3f4>
   12204:	ldr	r3, [sp, #32]
   12208:	add	r5, sp, #824	; 0x338
   1220c:	mov	r2, #256	; 0x100
   12210:	mov	r1, r5
   12214:	mov	r0, r4
   12218:	sub	r3, r3, #8
   1221c:	bl	11824 <maybe_read_string>
   12220:	subs	r3, r0, #0
   12224:	bne	12c88 <readstat_parse_por+0xf1c>
   12228:	ldr	r3, [sp, #72]	; 0x48
   1222c:	cmp	r3, #0
   12230:	bne	12c80 <readstat_parse_por+0xf14>
   12234:	mov	r0, r5
   12238:	bl	41d0 <strlen@plt>
   1223c:	ldr	ip, [r4, #612]	; 0x264
   12240:	mov	r3, r0
   12244:	mov	r2, r5
   12248:	movw	r1, #1025	; 0x401
   1224c:	mov	r0, r9
   12250:	str	ip, [sp]
   12254:	bl	420c <readstat_convert@plt>
   12258:	subs	r3, r0, #0
   1225c:	bne	12cc0 <readstat_parse_por+0xf54>
   12260:	str	r9, [sp, #96]	; 0x60
   12264:	b	12168 <readstat_parse_por+0x3fc>
   12268:	mov	r3, #0
   1226c:	add	r2, sp, #824	; 0x338
   12270:	ldr	r1, [sp, #20]
   12274:	mov	r0, r4
   12278:	str	r3, [sp, #824]	; 0x338
   1227c:	bl	119d4 <read_integer_in_range.constprop.1>
   12280:	subs	ip, r0, #0
   12284:	bne	125c0 <readstat_parse_por+0x854>
   12288:	ldr	r3, [sp, #824]	; 0x338
   1228c:	cmp	r3, #0
   12290:	ble	12060 <readstat_parse_por+0x2f4>
   12294:	mov	r6, ip
   12298:	mov	r5, ip
   1229c:	mov	r2, #256	; 0x100
   122a0:	mov	r1, r9
   122a4:	ldr	r3, [sp, #52]	; 0x34
   122a8:	mov	r0, r4
   122ac:	str	r5, [sp, #1080]	; 0x438
   122b0:	bl	11824 <maybe_read_string>
   122b4:	cmp	r0, #0
   122b8:	bne	12ab0 <readstat_parse_por+0xd44>
   122bc:	ldr	r3, [sp, #1080]	; 0x438
   122c0:	mov	r0, r6
   122c4:	mov	r1, r9
   122c8:	add	r6, r6, #1
   122cc:	cmp	r3, #0
   122d0:	bne	12660 <readstat_parse_por+0x8f4>
   122d4:	ldr	r3, [r4, #4]
   122d8:	cmp	r3, #0
   122dc:	beq	122f0 <readstat_parse_por+0x584>
   122e0:	ldr	r2, [r4, #36]	; 0x24
   122e4:	blx	r3
   122e8:	cmp	r0, #0
   122ec:	bne	12844 <readstat_parse_por+0xad8>
   122f0:	ldr	r3, [sp, #824]	; 0x338
   122f4:	cmp	r6, r3
   122f8:	blt	1229c <readstat_parse_por+0x530>
   122fc:	b	12060 <readstat_parse_por+0x2f4>
   12300:	ldr	r2, [r4, #636]	; 0x27c
   12304:	cmp	r2, #0
   12308:	blt	12660 <readstat_parse_por+0x8f4>
   1230c:	ldr	r3, [r4, #632]	; 0x278
   12310:	cmp	r2, r3
   12314:	bge	12660 <readstat_parse_por+0x8f4>
   12318:	mov	r3, #280	; 0x118
   1231c:	ldr	r6, [r4, #652]	; 0x28c
   12320:	mul	r3, r3, r2
   12324:	ldr	r2, [r6, r3]
   12328:	add	r6, r6, r3
   1232c:	ldr	r3, [r6, #52]	; 0x34
   12330:	cmp	r2, #5
   12334:	beq	12ccc <readstat_parse_por+0xf60>
   12338:	add	r1, r3, r3, lsl #5
   1233c:	mov	ip, #0
   12340:	mov	r3, r9
   12344:	mov	r2, #33	; 0x21
   12348:	mov	r0, r4
   1234c:	add	r1, r1, #88	; 0x58
   12350:	str	ip, [sp, #2104]	; 0x838
   12354:	add	r1, r6, r1
   12358:	bl	11824 <maybe_read_string>
   1235c:	subs	ip, r0, #0
   12360:	bne	125c0 <readstat_parse_por+0x854>
   12364:	ldr	r3, [sp, #2104]	; 0x838
   12368:	cmp	r3, #0
   1236c:	bne	12660 <readstat_parse_por+0x8f4>
   12370:	ldr	r3, [r6, #52]	; 0x34
   12374:	cmp	r3, #2
   12378:	bgt	12660 <readstat_parse_por+0x8f4>
   1237c:	add	r3, r3, #1
   12380:	str	r3, [r6, #52]	; 0x34
   12384:	b	12060 <readstat_parse_por+0x2f4>
   12388:	.word	0x00000000
   1238c:	.word	0x7ff00000
   12390:	.word	0x00000000
   12394:	.word	0xfff00000
   12398:	.word	0x00033210
   1239c:	.word	0x00013e8c
   123a0:	.word	0x00000300
   123a4:	.word	0x000002f4
   123a8:	.word	0x00014458
   123ac:	.word	0x00013ba4
   123b0:	.word	0x000139ac
   123b4:	.word	0x00013874
   123b8:	.word	0x000137b4
   123bc:	ldr	r2, [r4, #632]	; 0x278
   123c0:	ldr	r3, [r4, #636]	; 0x27c
   123c4:	add	r3, r3, #1
   123c8:	cmp	r3, r2
   123cc:	str	r3, [r4, #636]	; 0x27c
   123d0:	beq	12660 <readstat_parse_por+0x8f4>
   123d4:	mov	r2, #280	; 0x118
   123d8:	ldr	lr, [r4, #652]	; 0x28c
   123dc:	mvn	ip, #0
   123e0:	add	r0, sp, #824	; 0x338
   123e4:	mul	r3, r2, r3
   123e8:	mov	r2, r0
   123ec:	ldr	r1, [sp, #20]
   123f0:	add	r5, lr, r3
   123f4:	mov	r6, r3
   123f8:	str	lr, [sp, #24]
   123fc:	add	r3, r5, #36	; 0x24
   12400:	add	lr, r5, #24
   12404:	str	r0, [sp, #48]	; 0x30
   12408:	mov	r0, r4
   1240c:	str	lr, [sp, #2104]	; 0x838
   12410:	str	r3, [sp, #2108]	; 0x83c
   12414:	str	ip, [r5, #4]
   12418:	bl	119d4 <read_integer_in_range.constprop.1>
   1241c:	subs	ip, r0, #0
   12420:	bne	125c0 <readstat_parse_por+0x854>
   12424:	ldr	lr, [sp, #824]	; 0x338
   12428:	add	r2, r5, #187	; 0xbb
   1242c:	add	r3, sp, #1072	; 0x430
   12430:	mov	r1, r2
   12434:	add	r3, r3, #8
   12438:	str	r2, [sp, #32]
   1243c:	mov	r2, #9
   12440:	cmp	lr, #0
   12444:	str	lr, [r5, #16]
   12448:	ldr	lr, [sp, #24]
   1244c:	moveq	ip, #5
   12450:	str	ip, [lr, r6]
   12454:	str	r0, [sp, #1080]	; 0x438
   12458:	mov	r0, r4
   1245c:	bl	11824 <maybe_read_string>
   12460:	subs	ip, r0, #0
   12464:	bne	125c0 <readstat_parse_por+0x854>
   12468:	ldr	r3, [sp, #1080]	; 0x438
   1246c:	cmp	r3, #0
   12470:	str	r3, [sp, #24]
   12474:	bne	12660 <readstat_parse_por+0x8f4>
   12478:	mov	r1, r5
   1247c:	ldr	r0, [sp, #32]
   12480:	ldr	r2, [r4, #656]	; 0x290
   12484:	bl	44c4 <ck_str_hash_insert@plt>
   12488:	ldr	r6, [sp, #48]	; 0x30
   1248c:	str	r9, [sp, #32]
   12490:	ldr	r3, [sp, #32]
   12494:	mov	r2, r6
   12498:	mov	r1, #120	; 0x78
   1249c:	mov	r0, r4
   124a0:	ldr	r5, [r3], #4
   124a4:	str	r3, [sp, #32]
   124a8:	bl	119d4 <read_integer_in_range.constprop.1>
   124ac:	subs	ip, r0, #0
   124b0:	mov	r2, r6
   124b4:	movw	r1, #20000	; 0x4e20
   124b8:	mov	r0, r4
   124bc:	bne	125c0 <readstat_parse_por+0x854>
   124c0:	ldr	r3, [sp, #824]	; 0x338
   124c4:	str	r3, [r5]
   124c8:	bl	119d4 <read_integer_in_range.constprop.1>
   124cc:	subs	ip, r0, #0
   124d0:	mov	r2, r6
   124d4:	mov	r1, #100	; 0x64
   124d8:	mov	r0, r4
   124dc:	bne	125c0 <readstat_parse_por+0x854>
   124e0:	ldr	r3, [sp, #824]	; 0x338
   124e4:	str	r3, [r5, #4]
   124e8:	bl	119d4 <read_integer_in_range.constprop.1>
   124ec:	subs	ip, r0, #0
   124f0:	bne	125c0 <readstat_parse_por+0x854>
   124f4:	ldr	r2, [sp, #24]
   124f8:	ldr	r3, [sp, #824]	; 0x338
   124fc:	cmp	r2, #1
   12500:	str	r3, [r5, #8]
   12504:	beq	12060 <readstat_parse_por+0x2f4>
   12508:	mov	r3, #1
   1250c:	str	r3, [sp, #24]
   12510:	b	12490 <readstat_parse_por+0x724>
   12514:	ldr	r6, [r4, #636]	; 0x27c
   12518:	cmp	r6, #0
   1251c:	blt	12660 <readstat_parse_por+0x8f4>
   12520:	ldr	r3, [r4, #632]	; 0x278
   12524:	cmp	r6, r3
   12528:	beq	12660 <readstat_parse_por+0x8f4>
   1252c:	mov	ip, #0
   12530:	add	r3, sp, #1072	; 0x430
   12534:	ldr	r5, [r4, #652]	; 0x28c
   12538:	add	r3, r3, #8
   1253c:	mov	r2, #256	; 0x100
   12540:	mov	r1, r9
   12544:	mov	r0, r4
   12548:	str	ip, [sp, #1080]	; 0x438
   1254c:	bl	11824 <maybe_read_string>
   12550:	subs	ip, r0, #0
   12554:	bne	125c0 <readstat_parse_por+0x854>
   12558:	ldr	r3, [sp, #1080]	; 0x438
   1255c:	cmp	r3, #0
   12560:	bne	12660 <readstat_parse_por+0x8f4>
   12564:	mov	r3, #280	; 0x118
   12568:	mov	r0, r9
   1256c:	mla	r5, r3, r6, r5
   12570:	bl	41d0 <strlen@plt>
   12574:	lsl	r1, r0, #2
   12578:	ldr	r0, [r5, #264]	; 0x108
   1257c:	add	r1, r1, #1
   12580:	bl	3fcc <realloc@plt>
   12584:	mov	r6, r0
   12588:	mov	r0, r9
   1258c:	str	r6, [r5, #264]	; 0x108
   12590:	bl	41d0 <strlen@plt>
   12594:	ldr	ip, [r4, #612]	; 0x264
   12598:	mov	r3, r0
   1259c:	mov	r2, r9
   125a0:	lsl	r1, r3, #2
   125a4:	mov	r0, r6
   125a8:	add	r1, r1, #1
   125ac:	str	ip, [sp]
   125b0:	bl	420c <readstat_convert@plt>
   125b4:	mov	ip, r0
   125b8:	cmp	ip, #0
   125bc:	beq	12060 <readstat_parse_por+0x2f4>
   125c0:	mov	r5, ip
   125c4:	b	11ec4 <readstat_parse_por+0x158>
   125c8:	ldr	r2, [r4, #636]	; 0x27c
   125cc:	cmp	r2, #0
   125d0:	blt	12660 <readstat_parse_por+0x8f4>
   125d4:	ldr	r3, [r4, #632]	; 0x278
   125d8:	cmp	r2, r3
   125dc:	beq	12660 <readstat_parse_por+0x8f4>
   125e0:	mov	r3, #280	; 0x118
   125e4:	ldr	r6, [r4, #652]	; 0x28c
   125e8:	mov	r1, #1
   125ec:	mov	r0, #2
   125f0:	mul	r3, r3, r2
   125f4:	ldr	r2, [r6, r3]
   125f8:	add	r6, r6, r3
   125fc:	strd	r0, [r6, #52]	; 0x34
   12600:	cmp	r2, #5
   12604:	beq	12c1c <readstat_parse_por+0xeb0>
   12608:	mov	ip, #0
   1260c:	mov	r3, r9
   12610:	mov	r2, #33	; 0x21
   12614:	add	r1, r6, #88	; 0x58
   12618:	mov	r0, r4
   1261c:	str	ip, [sp, #2104]	; 0x838
   12620:	bl	11824 <maybe_read_string>
   12624:	subs	ip, r0, #0
   12628:	bne	125c0 <readstat_parse_por+0x854>
   1262c:	ldr	r3, [sp, #2104]	; 0x838
   12630:	cmp	r3, #0
   12634:	bne	12660 <readstat_parse_por+0x8f4>
   12638:	add	r1, r6, #121	; 0x79
   1263c:	mov	r3, r9
   12640:	mov	r2, #33	; 0x21
   12644:	mov	r0, r4
   12648:	bl	11824 <maybe_read_string>
   1264c:	subs	ip, r0, #0
   12650:	bne	125c0 <readstat_parse_por+0x854>
   12654:	ldr	r3, [sp, #2104]	; 0x838
   12658:	cmp	r3, #0
   1265c:	beq	12060 <readstat_parse_por+0x2f4>
   12660:	mov	r5, #5
   12664:	b	11ec4 <readstat_parse_por+0x158>
   12668:	ldr	r2, [r4, #636]	; 0x27c
   1266c:	cmp	r2, #0
   12670:	blt	12660 <readstat_parse_por+0x8f4>
   12674:	ldr	r3, [r4, #632]	; 0x278
   12678:	cmp	r2, r3
   1267c:	beq	12660 <readstat_parse_por+0x8f4>
   12680:	mov	r3, #280	; 0x118
   12684:	ldr	r6, [r4, #652]	; 0x28c
   12688:	mov	r1, #1
   1268c:	mov	r0, #2
   12690:	mul	r3, r3, r2
   12694:	ldr	r2, [r6, r3]
   12698:	add	r6, r6, r3
   1269c:	strd	r0, [r6, #52]	; 0x34
   126a0:	cmp	r2, #5
   126a4:	beq	12c44 <readstat_parse_por+0xed8>
   126a8:	mov	ip, #0
   126ac:	mov	r3, r9
   126b0:	mov	r2, #33	; 0x21
   126b4:	add	r1, r6, #88	; 0x58
   126b8:	mov	r0, r4
   126bc:	str	ip, [sp, #2104]	; 0x838
   126c0:	bl	11824 <maybe_read_string>
   126c4:	subs	ip, r0, #0
   126c8:	bne	125c0 <readstat_parse_por+0x854>
   126cc:	ldr	r3, [sp, #2104]	; 0x838
   126d0:	cmp	r3, #0
   126d4:	bne	12660 <readstat_parse_por+0x8f4>
   126d8:	strb	r3, [r6, #121]	; 0x79
   126dc:	b	12060 <readstat_parse_por+0x2f4>
   126e0:	ldr	r2, [r4, #636]	; 0x27c
   126e4:	cmp	r2, #0
   126e8:	blt	12660 <readstat_parse_por+0x8f4>
   126ec:	ldr	r3, [r4, #632]	; 0x278
   126f0:	cmp	r2, r3
   126f4:	beq	12660 <readstat_parse_por+0x8f4>
   126f8:	mov	r3, #280	; 0x118
   126fc:	ldr	r0, [r4, #652]	; 0x28c
   12700:	mov	r1, #1
   12704:	mov	ip, #2
   12708:	mul	r3, r3, r2
   1270c:	ldr	r2, [r0, r3]
   12710:	add	r0, r0, r3
   12714:	str	ip, [r0, #52]	; 0x34
   12718:	str	r1, [r0, #56]	; 0x38
   1271c:	cmp	r2, #5
   12720:	beq	12c68 <readstat_parse_por+0xefc>
   12724:	mov	ip, #0
   12728:	add	r1, r0, #121	; 0x79
   1272c:	mov	r3, r9
   12730:	mov	r2, #33	; 0x21
   12734:	strb	ip, [r0, #88]	; 0x58
   12738:	mov	r0, r4
   1273c:	str	ip, [sp, #2104]	; 0x838
   12740:	bl	11824 <maybe_read_string>
   12744:	subs	ip, r0, #0
   12748:	bne	125c0 <readstat_parse_por+0x854>
   1274c:	b	12654 <readstat_parse_por+0x8e8>
   12750:	ldr	r3, [r4, #632]	; 0x278
   12754:	cmp	r3, #0
   12758:	bne	12660 <readstat_parse_por+0x8f4>
   1275c:	add	r2, sp, #1072	; 0x430
   12760:	mov	r0, r4
   12764:	ldr	r1, [sp, #20]
   12768:	add	r2, r2, #8
   1276c:	bl	119d4 <read_integer_in_range.constprop.1>
   12770:	subs	ip, r0, #0
   12774:	bne	125c0 <readstat_parse_por+0x854>
   12778:	ldr	r0, [sp, #1080]	; 0x438
   1277c:	mov	r1, #4
   12780:	str	r0, [r4, #632]	; 0x278
   12784:	bl	3f9c <readstat_calloc@plt>
   12788:	mov	r1, #280	; 0x118
   1278c:	str	r0, [r4, #648]	; 0x288
   12790:	ldr	r0, [r4, #632]	; 0x278
   12794:	bl	3f9c <readstat_calloc@plt>
   12798:	ldr	r3, [r4, #648]	; 0x288
   1279c:	str	r0, [r4, #652]	; 0x28c
   127a0:	cmp	r3, #0
   127a4:	beq	12c60 <readstat_parse_por+0xef4>
   127a8:	cmp	r0, #0
   127ac:	beq	12c60 <readstat_parse_por+0xef4>
   127b0:	ldr	r5, [r4]
   127b4:	cmp	r5, #0
   127b8:	beq	12060 <readstat_parse_por+0x2f4>
   127bc:	ldr	r6, [sp, #44]	; 0x2c
   127c0:	add	ip, sp, #2128	; 0x850
   127c4:	mov	r2, #0
   127c8:	add	ip, ip, #8
   127cc:	mvn	r0, #0
   127d0:	ldr	r3, [r4, #632]	; 0x278
   127d4:	mvn	r1, #0
   127d8:	ldr	lr, [r4, #60]	; 0x3c
   127dc:	str	r3, [sp, #24]
   127e0:	mov	r3, #0
   127e4:	strd	r2, [ip]
   127e8:	strd	r0, [r6, #-8]
   127ec:	mov	r0, r9
   127f0:	strd	r2, [sp, #32]
   127f4:	ldr	r1, [r4, #56]	; 0x38
   127f8:	strd	r2, [ip, #8]
   127fc:	ldr	r2, [sp, #24]
   12800:	str	r8, [sp, #2148]	; 0x864
   12804:	asr	r3, r2, #31
   12808:	strd	r2, [sp, #24]
   1280c:	mov	r2, #0
   12810:	mov	r3, #0
   12814:	strd	r2, [ip, #16]
   12818:	ldrd	r2, [sp, #24]
   1281c:	str	r1, [sp, #2120]	; 0x848
   12820:	str	r1, [sp, #2124]	; 0x84c
   12824:	ldr	r1, [r4, #36]	; 0x24
   12828:	strd	r2, [r6]
   1282c:	asr	r3, lr, #31
   12830:	mov	r2, lr
   12834:	strd	r2, [r6, #16]
   12838:	blx	r5
   1283c:	cmp	r0, #0
   12840:	beq	12060 <readstat_parse_por+0x2f4>
   12844:	mov	r5, #4
   12848:	b	11ec4 <readstat_parse_por+0x158>
   1284c:	mov	ip, #0
   12850:	mov	r3, r9
   12854:	mov	r2, #256	; 0x100
   12858:	add	r1, sp, #568	; 0x238
   1285c:	b	12738 <readstat_parse_por+0x9cc>
   12860:	add	r2, sp, #1072	; 0x430
   12864:	mov	r3, #0
   12868:	add	r2, r2, #8
   1286c:	add	ip, sp, #64	; 0x40
   12870:	mov	r0, r2
   12874:	ldr	r2, [pc, #-1232]	; 123ac <readstat_parse_por+0x640>
   12878:	mov	r5, ip
   1287c:	mov	r1, #256	; 0x100
   12880:	str	r0, [sp, #32]
   12884:	str	r3, [sp, #60]	; 0x3c
   12888:	str	r3, [sp, #64]	; 0x40
   1288c:	add	r2, pc, r2
   12890:	ldr	r3, [r4, #624]	; 0x270
   12894:	str	ip, [sp, #48]	; 0x30
   12898:	bl	4254 <snprintf@plt>
   1289c:	sub	r2, r5, #4
   128a0:	mov	r0, r4
   128a4:	ldr	r1, [sp, #20]
   128a8:	bl	119d4 <read_integer_in_range.constprop.1>
   128ac:	subs	ip, r0, #0
   128b0:	bne	125c0 <readstat_parse_por+0x854>
   128b4:	ldr	r3, [sp, #60]	; 0x3c
   128b8:	cmp	r3, #0
   128bc:	ble	12d4c <readstat_parse_por+0xfe0>
   128c0:	mov	r5, #5
   128c4:	add	r6, sp, #824	; 0x338
   128c8:	str	ip, [sp, #24]
   128cc:	mov	r1, #0
   128d0:	mov	r3, r9
   128d4:	mov	r2, #256	; 0x100
   128d8:	mov	r0, r4
   128dc:	str	r1, [sp, #2104]	; 0x838
   128e0:	mov	r1, r6
   128e4:	bl	11824 <maybe_read_string>
   128e8:	cmp	r0, #0
   128ec:	bne	12ab0 <readstat_parse_por+0xd44>
   128f0:	ldr	r3, [sp, #2104]	; 0x838
   128f4:	mov	r0, r6
   128f8:	cmp	r3, #0
   128fc:	bne	12660 <readstat_parse_por+0x8f4>
   12900:	ldr	r1, [r4, #656]	; 0x290
   12904:	bl	3fa8 <ck_str_hash_lookup@plt>
   12908:	cmp	r0, #0
   1290c:	ldr	r2, [sp, #24]
   12910:	ldrne	r3, [r4, #624]	; 0x270
   12914:	ldrne	r5, [r0]
   12918:	add	r2, r2, #1
   1291c:	strne	r3, [r0, #4]
   12920:	ldr	r3, [sp, #60]	; 0x3c
   12924:	str	r2, [sp, #24]
   12928:	cmp	r2, r3
   1292c:	blt	128cc <readstat_parse_por+0xb60>
   12930:	mov	r0, r4
   12934:	ldr	r1, [sp, #20]
   12938:	ldr	r2, [sp, #48]	; 0x30
   1293c:	bl	119d4 <read_integer_in_range.constprop.1>
   12940:	subs	ip, r0, #0
   12944:	bne	125c0 <readstat_parse_por+0x854>
   12948:	add	r3, sp, #824	; 0x338
   1294c:	mov	r6, ip
   12950:	str	r3, [sp, #24]
   12954:	str	r8, [sp, #48]	; 0x30
   12958:	ldr	r3, [sp, #64]	; 0x40
   1295c:	cmp	r6, r3
   12960:	bge	12d38 <readstat_parse_por+0xfcc>
   12964:	ldr	r1, [sp, #40]	; 0x28
   12968:	mov	r2, #0
   1296c:	mov	r3, #0
   12970:	cmp	r5, #0
   12974:	strd	r2, [r1]
   12978:	strd	r2, [r1, #8]
   1297c:	str	r5, [sp, #104]	; 0x68
   12980:	bne	12ce8 <readstat_parse_por+0xf7c>
   12984:	sub	r8, r7, #12
   12988:	mov	r2, #256	; 0x100
   1298c:	ldr	r1, [sp, #24]
   12990:	mov	r3, r8
   12994:	mov	r0, r4
   12998:	str	r5, [sp, #68]	; 0x44
   1299c:	bl	11824 <maybe_read_string>
   129a0:	cmp	r0, #0
   129a4:	bne	12ab0 <readstat_parse_por+0xd44>
   129a8:	ldr	r3, [sp, #68]	; 0x44
   129ac:	cmp	r3, #0
   129b0:	bne	12660 <readstat_parse_por+0x8f4>
   129b4:	mov	r3, r8
   129b8:	mov	r2, #256	; 0x100
   129bc:	mov	r1, r9
   129c0:	mov	r0, r4
   129c4:	bl	11824 <maybe_read_string>
   129c8:	cmp	r0, #0
   129cc:	bne	12ab0 <readstat_parse_por+0xd44>
   129d0:	ldr	r3, [sp, #68]	; 0x44
   129d4:	cmp	r3, #0
   129d8:	bne	12660 <readstat_parse_por+0x8f4>
   129dc:	ldr	r3, [sp, #24]
   129e0:	str	r3, [sp, #96]	; 0x60
   129e4:	ldr	r1, [r4, #20]
   129e8:	cmp	r1, #0
   129ec:	beq	12a1c <readstat_parse_por+0xcb0>
   129f0:	ldrd	r2, [sl, #-8]
   129f4:	ldr	ip, [r4, #36]	; 0x24
   129f8:	ldr	r0, [sp, #32]
   129fc:	strd	r2, [sp]
   12a00:	ldr	r3, [sp, #40]	; 0x28
   12a04:	str	r9, [sp, #8]
   12a08:	ldm	r3, {r2, r3}
   12a0c:	str	ip, [sp, #12]
   12a10:	blx	r1
   12a14:	cmp	r0, #0
   12a18:	bne	12844 <readstat_parse_por+0xad8>
   12a1c:	add	r6, r6, #1
   12a20:	b	12958 <readstat_parse_por+0xbec>
   12a24:	mov	ip, #0
   12a28:	mov	r3, r9
   12a2c:	mov	r2, #9
   12a30:	add	r1, r4, #64	; 0x40
   12a34:	b	12738 <readstat_parse_por+0x9cc>
   12a38:	mov	r3, #0
   12a3c:	mov	r2, r9
   12a40:	mov	r1, #100	; 0x64
   12a44:	mov	r0, r4
   12a48:	str	r3, [sp, #2104]	; 0x838
   12a4c:	bl	119d4 <read_integer_in_range.constprop.1>
   12a50:	subs	ip, r0, #0
   12a54:	bne	125c0 <readstat_parse_por+0x854>
   12a58:	ldr	r3, [sp, #2104]	; 0x838
   12a5c:	str	r3, [r4, #608]	; 0x260
   12a60:	b	12060 <readstat_parse_por+0x2f4>
   12a64:	ldr	r3, [r4, #24]
   12a68:	cmp	r3, #0
   12a6c:	moveq	r5, #16
   12a70:	beq	11ec4 <readstat_parse_por+0x158>
   12a74:	ldr	r2, [pc, #-1740]	; 123b0 <readstat_parse_por+0x644>
   12a78:	mov	r3, r5
   12a7c:	add	r5, sp, #2096	; 0x830
   12a80:	add	r5, r5, #8
   12a84:	mov	r1, #1024	; 0x400
   12a88:	str	r7, [sp]
   12a8c:	mov	r0, r5
   12a90:	add	r2, pc, r2
   12a94:	bl	4254 <snprintf@plt>
   12a98:	mov	r0, r5
   12a9c:	ldr	r3, [r4, #24]
   12aa0:	mov	r5, #16
   12aa4:	ldr	r1, [r4, #36]	; 0x24
   12aa8:	blx	r3
   12aac:	b	11ec4 <readstat_parse_por+0x158>
   12ab0:	mov	r5, r0
   12ab4:	b	11ec4 <readstat_parse_por+0x158>
   12ab8:	mov	r2, #1
   12abc:	mov	r0, r4
   12ac0:	ldr	r1, [sp, #24]
   12ac4:	str	r3, [sp, #44]	; 0x2c
   12ac8:	bl	11498 <read_bytes>
   12acc:	cmp	r0, #1
   12ad0:	ldr	r3, [sp, #44]	; 0x2c
   12ad4:	bne	12bcc <readstat_parse_por+0xe60>
   12ad8:	ldrb	r2, [sp, #1080]	; 0x438
   12adc:	add	r3, r4, r2, lsl #1
   12ae0:	ldrh	r3, [r3, #94]	; 0x5e
   12ae4:	cmp	r3, #90	; 0x5a
   12ae8:	beq	12bb0 <readstat_parse_por+0xe44>
   12aec:	mov	r3, #0
   12af0:	mov	r1, fp
   12af4:	mov	r0, r4
   12af8:	str	r3, [sp, #72]	; 0x48
   12afc:	bl	115c0 <read_double_with_peek>
   12b00:	subs	r3, r0, #0
   12b04:	bne	12bcc <readstat_parse_por+0xe60>
   12b08:	ldr	r3, [sp, #72]	; 0x48
   12b0c:	cmp	r3, #0
   12b10:	bne	12c80 <readstat_parse_por+0xf14>
   12b14:	vldr	d7, [fp]
   12b18:	ldrb	r3, [sp, #109]	; 0x6d
   12b1c:	vcmp.f64	d7, d7
   12b20:	vmrs	APSR_nzcv, fpscr
   12b24:	movvs	r2, #1
   12b28:	movvc	r2, #0
   12b2c:	bfi	r3, r2, #0, #1
   12b30:	strb	r3, [sp, #109]	; 0x6d
   12b34:	b	12168 <readstat_parse_por+0x3fc>
   12b38:	ldr	r6, [sp, #24]
   12b3c:	ldr	r7, [sp, #32]
   12b40:	ldr	r3, [r4, #644]	; 0x284
   12b44:	cmp	r3, #0
   12b48:	subne	r3, r3, #1
   12b4c:	strne	r3, [r4, #644]	; 0x284
   12b50:	bne	12b60 <readstat_parse_por+0xdf4>
   12b54:	ldr	r3, [r4, #628]	; 0x274
   12b58:	add	r3, r3, #1
   12b5c:	str	r3, [r4, #628]	; 0x274
   12b60:	ldr	r1, [r4, #28]
   12b64:	ldr	r3, [r4, #44]	; 0x2c
   12b68:	ldr	r0, [r4, #32]
   12b6c:	ldr	r2, [r4, #36]	; 0x24
   12b70:	ldr	r5, [r3, #16]
   12b74:	ldr	r3, [r3, #20]
   12b78:	blx	r5
   12b7c:	cmp	r0, #0
   12b80:	bne	12b9c <readstat_parse_por+0xe30>
   12b84:	ldr	r3, [r4, #640]	; 0x280
   12b88:	cmp	r3, #0
   12b8c:	ble	1213c <readstat_parse_por+0x3d0>
   12b90:	ldr	r2, [r4, #628]	; 0x274
   12b94:	cmp	r3, r2
   12b98:	bne	1213c <readstat_parse_por+0x3d0>
   12b9c:	mov	r5, r0
   12ba0:	ldr	fp, [sp, #20]
   12ba4:	b	11ec4 <readstat_parse_por+0x158>
   12ba8:	ldr	fp, [sp, #20]
   12bac:	b	12844 <readstat_parse_por+0xad8>
   12bb0:	ldr	fp, [sp, #20]
   12bb4:	str	r0, [sp, #72]	; 0x48
   12bb8:	ldr	r3, [sp, #40]	; 0x28
   12bbc:	cmp	r3, #0
   12bc0:	moveq	r5, #0
   12bc4:	beq	11ec4 <readstat_parse_por+0x158>
   12bc8:	b	12660 <readstat_parse_por+0x8f4>
   12bcc:	mov	r5, r3
   12bd0:	ldr	r3, [r4, #24]
   12bd4:	ldr	fp, [sp, #20]
   12bd8:	ldr	r6, [sp, #24]
   12bdc:	cmp	r3, #0
   12be0:	beq	11ec4 <readstat_parse_por+0x158>
   12be4:	ldr	r2, [pc, #-2104]	; 123b4 <readstat_parse_por+0x648>
   12be8:	add	r3, r7, #187	; 0xbb
   12bec:	mov	r1, #1024	; 0x400
   12bf0:	mov	r0, r6
   12bf4:	ldr	ip, [r4, #628]	; 0x274
   12bf8:	add	r2, pc, r2
   12bfc:	add	ip, ip, #1
   12c00:	str	ip, [sp]
   12c04:	bl	4254 <snprintf@plt>
   12c08:	mov	r0, r6
   12c0c:	ldr	r3, [r4, #24]
   12c10:	ldr	r1, [r4, #36]	; 0x24
   12c14:	blx	r3
   12c18:	b	11ec4 <readstat_parse_por+0x158>
   12c1c:	add	r1, r6, #64	; 0x40
   12c20:	mov	r0, r4
   12c24:	bl	117d8 <read_double>
   12c28:	subs	ip, r0, #0
   12c2c:	bne	125c0 <readstat_parse_por+0x854>
   12c30:	add	r1, r6, #72	; 0x48
   12c34:	mov	r0, r4
   12c38:	bl	117d8 <read_double>
   12c3c:	mov	ip, r0
   12c40:	b	125b8 <readstat_parse_por+0x84c>
   12c44:	add	r1, r6, #64	; 0x40
   12c48:	mov	r0, r4
   12c4c:	bl	117d8 <read_double>
   12c50:	subs	ip, r0, #0
   12c54:	bne	125c0 <readstat_parse_por+0x854>
   12c58:	vstr	d9, [r6, #72]	; 0x48
   12c5c:	b	12060 <readstat_parse_por+0x2f4>
   12c60:	mov	r5, #3
   12c64:	b	11ec4 <readstat_parse_por+0x158>
   12c68:	add	r1, r0, #72	; 0x48
   12c6c:	vstr	d8, [r0, #64]	; 0x40
   12c70:	mov	r0, r4
   12c74:	bl	117d8 <read_double>
   12c78:	mov	ip, r0
   12c7c:	b	125b8 <readstat_parse_por+0x84c>
   12c80:	ldr	fp, [sp, #20]
   12c84:	b	12bb8 <readstat_parse_por+0xe4c>
   12c88:	mov	r5, r3
   12c8c:	ldr	r3, [r4, #24]
   12c90:	ldr	fp, [sp, #20]
   12c94:	cmp	r3, #0
   12c98:	beq	11ec4 <readstat_parse_por+0x158>
   12c9c:	ldr	r2, [pc, #-2284]	; 123b8 <readstat_parse_por+0x64c>
   12ca0:	add	r6, sp, #1072	; 0x430
   12ca4:	add	r3, r7, #187	; 0xbb
   12ca8:	add	r6, r6, #8
   12cac:	mov	r1, #1024	; 0x400
   12cb0:	mov	r0, r6
   12cb4:	ldr	ip, [r4, #628]	; 0x274
   12cb8:	add	r2, pc, r2
   12cbc:	b	12bfc <readstat_parse_por+0xe90>
   12cc0:	mov	r5, r3
   12cc4:	ldr	fp, [sp, #20]
   12cc8:	b	11ec4 <readstat_parse_por+0x158>
   12ccc:	add	r3, r3, #8
   12cd0:	mov	r0, r4
   12cd4:	add	r1, r6, r3, lsl #3
   12cd8:	bl	117d8 <read_double>
   12cdc:	subs	ip, r0, #0
   12ce0:	beq	12370 <readstat_parse_por+0x604>
   12ce4:	b	125c0 <readstat_parse_por+0x854>
   12ce8:	sub	r1, r7, #8
   12cec:	mov	r0, r4
   12cf0:	bl	117d8 <read_double>
   12cf4:	cmp	r0, #0
   12cf8:	bne	12ab0 <readstat_parse_por+0xd44>
   12cfc:	sub	r3, r7, #12
   12d00:	mov	r2, #256	; 0x100
   12d04:	str	r0, [sp, #68]	; 0x44
   12d08:	mov	r1, r9
   12d0c:	mov	r0, r4
   12d10:	bl	11824 <maybe_read_string>
   12d14:	cmp	r0, #0
   12d18:	bne	12ab0 <readstat_parse_por+0xd44>
   12d1c:	ldr	r3, [sp, #68]	; 0x44
   12d20:	cmp	r3, #0
   12d24:	bne	12660 <readstat_parse_por+0x8f4>
   12d28:	ldrd	r2, [r7, #-8]
   12d2c:	ldr	r1, [sp, #40]	; 0x28
   12d30:	strd	r2, [r1]
   12d34:	b	129e4 <readstat_parse_por+0xc78>
   12d38:	ldr	r3, [r4, #624]	; 0x270
   12d3c:	ldr	r8, [sp, #48]	; 0x30
   12d40:	add	r3, r3, #1
   12d44:	str	r3, [r4, #624]	; 0x270
   12d48:	b	12060 <readstat_parse_por+0x2f4>
   12d4c:	mov	r5, #5
   12d50:	b	12930 <readstat_parse_por+0xbc4>
   12d54:	andeq	r0, r0, r0

00012d58 <por_variable_width>:
   12d58:	cmp	r0, #0
   12d5c:	addeq	r0, r1, #54	; 0x36
   12d60:	movne	r0, #54	; 0x36
   12d64:	bx	lr

00012d68 <por_metadata_ok>:
   12d68:	ldr	r0, [r0, #16]
   12d6c:	cmp	r0, #0
   12d70:	movne	r0, #6
   12d74:	bx	lr

00012d78 <por_variable_ok>:
   12d78:	str	r4, [sp, #-8]!
   12d7c:	str	lr, [sp, #4]
   12d80:	bl	4338 <readstat_variable_get_name@plt>
   12d84:	mov	r4, r0
   12d88:	bl	41d0 <strlen@plt>
   12d8c:	sub	r0, r0, #1
   12d90:	cmp	r0, #7
   12d94:	movhi	r0, #28
   12d98:	bhi	12de0 <por_variable_ok+0x68>
   12d9c:	ldrb	r1, [r4]
   12da0:	cmp	r1, #0
   12da4:	beq	12e14 <por_variable_ok+0x9c>
   12da8:	mov	r0, r4
   12dac:	mov	r3, r1
   12db0:	sub	r2, r3, #48	; 0x30
   12db4:	sub	lr, r3, #35	; 0x23
   12db8:	cmp	r2, #9
   12dbc:	sub	ip, r3, #64	; 0x40
   12dc0:	bls	12dec <por_variable_ok+0x74>
   12dc4:	cmp	ip, #26
   12dc8:	cmphi	lr, #1
   12dcc:	bls	12dec <por_variable_ok+0x74>
   12dd0:	cmp	r3, #46	; 0x2e
   12dd4:	cmpne	r3, #95	; 0x5f
   12dd8:	beq	12dec <por_variable_ok+0x74>
   12ddc:	mov	r0, #26
   12de0:	ldr	r4, [sp]
   12de4:	add	sp, sp, #4
   12de8:	pop	{pc}		; (ldr pc, [sp], #4)
   12dec:	ldrb	r3, [r0, #1]!
   12df0:	cmp	r3, #0
   12df4:	bne	12db0 <por_variable_ok+0x38>
   12df8:	sub	r1, r1, #64	; 0x40
   12dfc:	ldr	r4, [sp]
   12e00:	add	sp, sp, #4
   12e04:	cmp	r1, #26
   12e08:	movhi	r0, #25
   12e0c:	movls	r0, #0
   12e10:	pop	{pc}		; (ldr pc, [sp], #4)
   12e14:	mov	r0, #25
   12e18:	b	12de0 <por_variable_ok+0x68>

00012e1c <por_write_base30_integer.isra.0>:
   12e1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12e20:	mov	r4, r2
   12e24:	mov	r5, r3
   12e28:	orrs	r3, r4, r5
   12e2c:	strd	r6, [sp, #8]
   12e30:	strd	r8, [sp, #16]
   12e34:	strd	sl, [sp, #24]
   12e38:	str	lr, [sp, #32]
   12e3c:	sub	sp, sp, #4
   12e40:	beq	12f20 <por_write_base30_integer.isra.0+0x104>
   12e44:	sub	r6, r0, #1
   12e48:	mov	r8, r0
   12e4c:	mov	r7, #0
   12e50:	mov	r9, r6
   12e54:	b	12e5c <por_write_base30_integer.isra.0+0x40>
   12e58:	mov	r7, sl
   12e5c:	mov	r0, r4
   12e60:	mov	r1, r5
   12e64:	mov	r2, #30
   12e68:	mov	r3, #0
   12e6c:	bl	25240 <__aeabi_uldivmod>
   12e70:	cmp	r3, #0
   12e74:	mov	r0, r4
   12e78:	cmpeq	r2, #9
   12e7c:	uxtb	r2, r2
   12e80:	add	fp, r2, #55	; 0x37
   12e84:	addls	r2, r2, #48	; 0x30
   12e88:	uxtbls	fp, r2
   12e8c:	uxtbhi	fp, fp
   12e90:	mov	r1, r5
   12e94:	mov	r2, #30
   12e98:	mov	r3, #0
   12e9c:	strb	fp, [r9, #1]!
   12ea0:	add	sl, r7, #1
   12ea4:	bl	25240 <__aeabi_uldivmod>
   12ea8:	cmp	r5, #0
   12eac:	mov	r5, r1
   12eb0:	cmpeq	r4, #29
   12eb4:	mov	r4, r0
   12eb8:	bhi	12e58 <por_write_base30_integer.isra.0+0x3c>
   12ebc:	cmp	r7, #0
   12ec0:	beq	12f00 <por_write_base30_integer.isra.0+0xe4>
   12ec4:	add	r0, r8, r7
   12ec8:	b	12ed0 <por_write_base30_integer.isra.0+0xb4>
   12ecc:	ldrb	fp, [r0]
   12ed0:	add	r1, r6, #1
   12ed4:	add	r2, r6, #2
   12ed8:	ldrb	ip, [r6, #1]
   12edc:	mvn	r3, r1
   12ee0:	sub	r2, r2, r8
   12ee4:	add	r3, r3, r8
   12ee8:	strb	fp, [r6, #1]
   12eec:	mov	r6, r1
   12ef0:	add	r3, r3, r7
   12ef4:	cmp	r3, r2
   12ef8:	strb	ip, [r0], #-1
   12efc:	bgt	12ecc <por_write_base30_integer.isra.0+0xb0>
   12f00:	mov	r0, sl
   12f04:	add	sp, sp, #4
   12f08:	ldrd	r4, [sp]
   12f0c:	ldrd	r6, [sp, #8]
   12f10:	ldrd	r8, [sp, #16]
   12f14:	ldrd	sl, [sp, #24]
   12f18:	add	sp, sp, #32
   12f1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f20:	mov	sl, #0
   12f24:	b	12f00 <por_write_base30_integer.isra.0+0xe4>

00012f28 <por_write_string_n.isra.1>:
   12f28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12f2c:	mov	r5, r0
   12f30:	strd	r6, [sp, #8]
   12f34:	mov	r7, r1
   12f38:	mov	r6, r3
   12f3c:	str	r8, [sp, #16]
   12f40:	mov	r8, r2
   12f44:	str	lr, [sp, #20]
   12f48:	sub	sp, sp, #1040	; 0x410
   12f4c:	ldr	r0, [sp, #1064]	; 0x428
   12f50:	bl	40e0 <malloc@plt>
   12f54:	ldr	ip, [r7]
   12f58:	mov	r2, r0
   12f5c:	mov	r4, r0
   12f60:	mov	r0, r6
   12f64:	ldr	lr, [r8]
   12f68:	ldr	r3, [sp, #1064]	; 0x428
   12f6c:	stm	sp, {ip, lr}
   12f70:	mov	r1, r3
   12f74:	bl	4368 <por_utf8_decode@plt>
   12f78:	cmn	r0, #1
   12f7c:	beq	12fd0 <por_write_string_n.isra.1+0xa8>
   12f80:	ldr	ip, [pc, #160]	; 13028 <por_write_string_n.isra.1+0x100>
   12f84:	mov	r2, r0
   12f88:	mov	r3, #80	; 0x50
   12f8c:	mov	r0, r5
   12f90:	mov	r1, r4
   12f94:	add	ip, pc, ip
   12f98:	str	ip, [sp]
   12f9c:	bl	44f4 <readstat_write_bytes_as_lines@plt>
   12fa0:	mov	r6, r0
   12fa4:	cmp	r4, #0
   12fa8:	beq	12fb4 <por_write_string_n.isra.1+0x8c>
   12fac:	mov	r0, r4
   12fb0:	bl	3e94 <free@plt>
   12fb4:	mov	r0, r6
   12fb8:	add	sp, sp, #1040	; 0x410
   12fbc:	ldrd	r4, [sp]
   12fc0:	ldrd	r6, [sp, #8]
   12fc4:	ldr	r8, [sp, #16]
   12fc8:	add	sp, sp, #20
   12fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fd0:	ldr	r3, [r5, #296]	; 0x128
   12fd4:	cmp	r3, #0
   12fd8:	moveq	r6, #16
   12fdc:	beq	12fa4 <por_write_string_n.isra.1+0x7c>
   12fe0:	ldr	r1, [sp, #1064]	; 0x428
   12fe4:	mov	r3, #0
   12fe8:	add	r7, sp, #16
   12fec:	mov	r0, r7
   12ff0:	ldr	r2, [pc, #52]	; 1302c <por_write_string_n.isra.1+0x104>
   12ff4:	stm	sp, {r1, r3}
   12ff8:	mov	r1, #1024	; 0x400
   12ffc:	ldr	r3, [sp, #1064]	; 0x428
   13000:	add	r2, pc, r2
   13004:	str	r3, [sp, #8]
   13008:	str	r6, [sp, #12]
   1300c:	mov	r6, #16
   13010:	bl	4254 <snprintf@plt>
   13014:	mov	r0, r7
   13018:	ldr	r3, [r5, #296]	; 0x128
   1301c:	ldr	r1, [r5, #304]	; 0x130
   13020:	blx	r3
   13024:	b	12fa4 <por_write_string_n.isra.1+0x7c>
   13028:	.word	0x0001351c
   1302c:	.word	0x00013484

00013030 <por_write_row>:
   13030:	cmp	r2, #0
   13034:	mov	r3, r1
   13038:	str	r4, [sp, #-8]!
   1303c:	str	lr, [sp, #4]
   13040:	sub	sp, sp, #8
   13044:	beq	1307c <por_write_row+0x4c>
   13048:	sub	r2, r2, #1
   1304c:	sub	ip, r1, #1
   13050:	add	r4, r2, r1
   13054:	mov	r2, #0
   13058:	ldrb	lr, [ip, #1]!
   1305c:	cmp	lr, #0
   13060:	sub	r1, ip, r3
   13064:	beq	13074 <por_write_row+0x44>
   13068:	cmp	r2, r1
   1306c:	strbne	lr, [r3, r2]
   13070:	add	r2, r2, #1
   13074:	cmp	ip, r4
   13078:	bne	13058 <por_write_row+0x28>
   1307c:	ldr	r1, [r0, #300]	; 0x12c
   13080:	str	r2, [sp]
   13084:	add	r2, r1, #4
   13088:	bl	12f28 <por_write_string_n.isra.1>
   1308c:	add	sp, sp, #8
   13090:	ldr	r4, [sp]
   13094:	add	sp, sp, #4
   13098:	pop	{pc}		; (ldr pc, [sp], #4)

0001309c <por_emit_header>:
   1309c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   130a0:	mov	r4, r0
   130a4:	strd	r6, [sp, #8]
   130a8:	add	r6, r0, #88	; 0x58
   130ac:	mov	r0, r6
   130b0:	strd	r8, [sp, #16]
   130b4:	strd	sl, [sp, #24]
   130b8:	mov	fp, r1
   130bc:	str	lr, [sp, #32]
   130c0:	sub	sp, sp, #476	; 0x1dc
   130c4:	bl	41d0 <strlen@plt>
   130c8:	add	r9, sp, #16
   130cc:	mov	sl, r0
   130d0:	ldr	r8, [pc, #304]	; 13208 <por_emit_header+0x16c>
   130d4:	mov	r2, #200	; 0xc8
   130d8:	mov	r1, #48	; 0x30
   130dc:	mov	r0, r9
   130e0:	add	r5, sp, #56	; 0x38
   130e4:	bl	4278 <memset@plt>
   130e8:	ldr	r3, [pc, #284]	; 1320c <por_emit_header+0x170>
   130ec:	mov	r1, r6
   130f0:	mov	r2, #20
   130f4:	add	r0, sp, #76	; 0x4c
   130f8:	add	r8, pc, r8
   130fc:	add	r3, pc, r3
   13100:	ldrd	r6, [r3]
   13104:	strd	r6, [sp, #8]
   13108:	ldrd	r6, [r3, #8]
   1310c:	ldr	r3, [r3, #16]
   13110:	strd	r6, [r5, #8]
   13114:	ldrd	r6, [sp, #8]
   13118:	strd	r6, [r5]
   1311c:	str	r3, [r5, #16]
   13120:	bl	4290 <strncpy@plt>
   13124:	cmp	sl, #19
   13128:	bls	131f0 <por_emit_header+0x154>
   1312c:	ldr	ip, [pc, #220]	; 13210 <por_emit_header+0x174>
   13130:	mov	r3, #80	; 0x50
   13134:	mov	r1, r9
   13138:	mov	r2, #200	; 0xc8
   1313c:	add	r5, sp, #216	; 0xd8
   13140:	mov	r0, r4
   13144:	add	ip, pc, ip
   13148:	str	ip, [sp]
   1314c:	bl	44f4 <readstat_write_bytes_as_lines@plt>
   13150:	mov	r2, #256	; 0x100
   13154:	mov	r0, r5
   13158:	mov	r1, #48	; 0x30
   1315c:	bl	4278 <memset@plt>
   13160:	ldr	r3, [pc, #172]	; 13214 <por_emit_header+0x178>
   13164:	mov	r2, r5
   13168:	ldr	r0, [r8, r3]
   1316c:	sub	r3, r0, #1
   13170:	add	r0, r0, #255	; 0xff
   13174:	ldrsb	r1, [r3, #1]!
   13178:	add	r2, r2, #1
   1317c:	cmp	r1, #0
   13180:	strbne	r1, [r2, #-1]
   13184:	cmp	r3, r0
   13188:	bne	13174 <por_emit_header+0xd8>
   1318c:	ldr	ip, [pc, #132]	; 13218 <por_emit_header+0x17c>
   13190:	mov	r1, r5
   13194:	mov	r3, #80	; 0x50
   13198:	mov	r2, #256	; 0x100
   1319c:	mov	r0, r4
   131a0:	add	ip, pc, ip
   131a4:	str	ip, [sp]
   131a8:	bl	44f4 <readstat_write_bytes_as_lines@plt>
   131ac:	cmp	r0, #0
   131b0:	bne	131d4 <por_emit_header+0x138>
   131b4:	ldr	r3, [pc, #96]	; 1321c <por_emit_header+0x180>
   131b8:	mov	ip, #8
   131bc:	mov	r0, r4
   131c0:	add	r2, fp, #4
   131c4:	mov	r1, fp
   131c8:	str	ip, [sp]
   131cc:	add	r3, pc, r3
   131d0:	bl	12f28 <por_write_string_n.isra.1>
   131d4:	add	sp, sp, #476	; 0x1dc
   131d8:	ldrd	r4, [sp]
   131dc:	ldrd	r6, [sp, #8]
   131e0:	ldrd	r8, [sp, #16]
   131e4:	ldrd	sl, [sp, #24]
   131e8:	add	sp, sp, #32
   131ec:	pop	{pc}		; (ldr pc, [sp], #4)
   131f0:	add	r0, sl, #20
   131f4:	rsb	r2, sl, #20
   131f8:	add	r0, r5, r0
   131fc:	mov	r1, #32
   13200:	bl	4278 <memset@plt>
   13204:	b	1312c <por_emit_header+0x90>
   13208:	.word	0x00031f00
   1320c:	.word	0x000133b8
   13210:	.word	0x0001336c
   13214:	.word	0x00000300
   13218:	.word	0x00013310
   1321c:	.word	0x00013294

00013220 <por_write_double_to_buffer.isra.2.constprop.6>:
   13220:	vcmp.f64	d0, d0
   13224:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13228:	mov	r4, r0
   1322c:	strd	r6, [sp, #8]
   13230:	strd	r8, [sp, #16]
   13234:	strd	sl, [sp, #24]
   13238:	str	lr, [sp, #32]
   1323c:	vpush	{d8-d9}
   13240:	sub	sp, sp, #12
   13244:	vmrs	APSR_nzcv, fpscr
   13248:	bvs	13528 <por_write_double_to_buffer.isra.2.constprop.6+0x308>
   1324c:	vldr	d7, [pc, #764]	; 13550 <por_write_double_to_buffer.isra.2.constprop.6+0x330>
   13250:	vmov.f64	d9, d0
   13254:	vabs.f64	d0, d0
   13258:	vcmp.f64	d0, d7
   1325c:	vmrs	APSR_nzcv, fpscr
   13260:	ble	13304 <por_write_double_to_buffer.isra.2.constprop.6+0xe4>
   13264:	vcmpe.f64	d9, #0.0
   13268:	add	lr, r0, #1
   1326c:	add	ip, r0, #2
   13270:	add	r1, r0, #3
   13274:	add	r2, r0, #4
   13278:	add	r0, r0, #5
   1327c:	vmrs	APSR_nzcv, fpscr
   13280:	movpl	sl, #5
   13284:	bmi	132d8 <por_write_double_to_buffer.isra.2.constprop.6+0xb8>
   13288:	mov	r6, #49	; 0x31
   1328c:	mov	r3, #84	; 0x54
   13290:	mov	r5, #43	; 0x2b
   13294:	strb	r6, [r4]
   13298:	mov	r4, #47	; 0x2f
   1329c:	strb	r5, [lr]
   132a0:	strb	r3, [ip]
   132a4:	strb	r3, [r1]
   132a8:	strb	r4, [r2]
   132ac:	mov	r3, #0
   132b0:	strb	r3, [r0]
   132b4:	mov	r0, sl
   132b8:	add	sp, sp, #12
   132bc:	vpop	{d8-d9}
   132c0:	ldrd	r4, [sp]
   132c4:	ldrd	r6, [sp, #8]
   132c8:	ldrd	r8, [sp, #16]
   132cc:	ldrd	sl, [sp, #24]
   132d0:	add	sp, sp, #32
   132d4:	pop	{pc}		; (ldr pc, [sp], #4)
   132d8:	mov	r3, r4
   132dc:	mov	r5, #45	; 0x2d
   132e0:	mov	r4, lr
   132e4:	mov	sl, #6
   132e8:	mov	lr, ip
   132ec:	mov	ip, r1
   132f0:	strb	r5, [r3], #6
   132f4:	mov	r1, r2
   132f8:	mov	r2, r0
   132fc:	mov	r0, r3
   13300:	b	13288 <por_write_double_to_buffer.isra.2.constprop.6+0x68>
   13304:	mov	r5, sp
   13308:	mov	r0, r5
   1330c:	bl	414c <modf@plt>
   13310:	ldrd	r0, [sp]
   13314:	vmov.f64	d8, d0
   13318:	bl	2528c <__aeabi_d2lz>
   1331c:	vcmpe.f64	d9, #0.0
   13320:	mov	r8, r0
   13324:	mov	r9, r1
   13328:	vmrs	APSR_nzcv, fpscr
   1332c:	movpl	fp, r4
   13330:	movpl	sl, #0
   13334:	bmi	134e0 <por_write_double_to_buffer.isra.2.constprop.6+0x2c0>
   13338:	orrs	r3, r8, r9
   1333c:	vcmp.f64	d8, #0.0
   13340:	bne	13408 <por_write_double_to_buffer.isra.2.constprop.6+0x1e8>
   13344:	vmrs	APSR_nzcv, fpscr
   13348:	mov	r3, #48	; 0x30
   1334c:	add	r2, sl, #1
   13350:	add	r1, r4, r2
   13354:	add	sl, sl, #2
   13358:	strb	r3, [fp]
   1335c:	beq	134d0 <por_write_double_to_buffer.isra.2.constprop.6+0x2b0>
   13360:	mov	r3, #46	; 0x2e
   13364:	mov	r6, r8
   13368:	mov	r7, r9
   1336c:	mov	r0, #0
   13370:	strb	r3, [r4, r2]
   13374:	sub	r0, r0, r4
   13378:	vldr	d9, [pc, #472]	; 13558 <por_write_double_to_buffer.isra.2.constprop.6+0x338>
   1337c:	mov	r9, r1
   13380:	sub	r8, r0, r2
   13384:	b	133d0 <por_write_double_to_buffer.isra.2.constprop.6+0x1b0>
   13388:	vcmp.f64	d8, #0.0
   1338c:	cmp	r0, #10
   13390:	uxtb	r3, r3
   13394:	sbcs	r1, r1, #0
   13398:	add	r1, r2, r9
   1339c:	addlt	r3, ip, #48	; 0x30
   133a0:	add	r9, r9, #1
   133a4:	uxtblt	r3, r3
   133a8:	mov	r2, r9
   133ac:	strb	r3, [r2], r8
   133b0:	vmrs	APSR_nzcv, fpscr
   133b4:	movne	r3, #1
   133b8:	moveq	r3, #0
   133bc:	cmp	r2, #49	; 0x31
   133c0:	movgt	r3, #0
   133c4:	andle	r3, r3, #1
   133c8:	cmp	r3, #0
   133cc:	beq	1351c <por_write_double_to_buffer.isra.2.constprop.6+0x2fc>
   133d0:	vmul.f64	d0, d8, d9
   133d4:	mov	r0, r5
   133d8:	bl	414c <modf@plt>
   133dc:	ldrd	r0, [sp]
   133e0:	vmov.f64	d8, d0
   133e4:	bl	2528c <__aeabi_d2lz>
   133e8:	cmp	r0, #0
   133ec:	uxtb	ip, r0
   133f0:	sbcs	r3, r1, #0
   133f4:	rsb	r2, r4, #2
   133f8:	add	r3, ip, #55	; 0x37
   133fc:	bge	13388 <por_write_double_to_buffer.isra.2.constprop.6+0x168>
   13400:	mvn	sl, #0
   13404:	b	132b4 <por_write_double_to_buffer.isra.2.constprop.6+0x94>
   13408:	vmrs	APSR_nzcv, fpscr
   1340c:	bne	13544 <por_write_double_to_buffer.isra.2.constprop.6+0x324>
   13410:	mov	r2, #30
   13414:	mov	r3, #0
   13418:	mov	r0, r8
   1341c:	mov	r1, r9
   13420:	bl	2516c <__aeabi_ldivmod>
   13424:	mov	r6, r2
   13428:	mov	r7, r3
   1342c:	orrs	r3, r6, r7
   13430:	beq	13444 <por_write_double_to_buffer.isra.2.constprop.6+0x224>
   13434:	b	13544 <por_write_double_to_buffer.isra.2.constprop.6+0x324>
   13438:	bl	2516c <__aeabi_ldivmod>
   1343c:	orrs	r3, r2, r3
   13440:	bne	13478 <por_write_double_to_buffer.isra.2.constprop.6+0x258>
   13444:	mov	r0, r8
   13448:	mov	r1, r9
   1344c:	mov	r2, #30
   13450:	mov	r3, #0
   13454:	bl	2516c <__aeabi_ldivmod>
   13458:	mov	r8, r0
   1345c:	adds	r6, r6, #1
   13460:	mov	r9, r1
   13464:	adc	r7, r7, #0
   13468:	orrs	ip, r8, r9
   1346c:	mov	r2, #30
   13470:	mov	r3, #0
   13474:	bne	13438 <por_write_double_to_buffer.isra.2.constprop.6+0x218>
   13478:	mov	r2, r8
   1347c:	mov	r3, r9
   13480:	mov	r0, fp
   13484:	bl	12e1c <por_write_base30_integer.isra.0>
   13488:	vcmp.f64	d8, #0.0
   1348c:	add	r3, sl, r0
   13490:	add	sl, r3, #1
   13494:	mov	r2, r3
   13498:	add	r1, r4, r3
   1349c:	vmrs	APSR_nzcv, fpscr
   134a0:	bne	13500 <por_write_double_to_buffer.isra.2.constprop.6+0x2e0>
   134a4:	orrs	r3, r6, r7
   134a8:	add	r0, r4, sl
   134ac:	beq	134d4 <por_write_double_to_buffer.isra.2.constprop.6+0x2b4>
   134b0:	mov	ip, #43	; 0x2b
   134b4:	mov	r2, r6
   134b8:	mov	r3, r7
   134bc:	strb	ip, [r1]
   134c0:	bl	12e1c <por_write_base30_integer.isra.0>
   134c4:	add	r1, r0, sl
   134c8:	add	sl, r1, #1
   134cc:	add	r1, r4, r1
   134d0:	add	r0, r4, sl
   134d4:	mov	r3, #47	; 0x2f
   134d8:	strb	r3, [r1]
   134dc:	b	132ac <por_write_double_to_buffer.isra.2.constprop.6+0x8c>
   134e0:	mov	r3, #45	; 0x2d
   134e4:	mov	fp, r4
   134e8:	vcmp.f64	d8, #0.0
   134ec:	mov	sl, #1
   134f0:	strb	r3, [fp], #1
   134f4:	orrs	r3, r8, r9
   134f8:	beq	13344 <por_write_double_to_buffer.isra.2.constprop.6+0x124>
   134fc:	b	13408 <por_write_double_to_buffer.isra.2.constprop.6+0x1e8>
   13500:	mov	ip, #46	; 0x2e
   13504:	cmp	r0, #49	; 0x31
   13508:	addgt	r1, r4, sl
   1350c:	addgt	sl, r3, #2
   13510:	strb	ip, [r4, r3]
   13514:	ble	13374 <por_write_double_to_buffer.isra.2.constprop.6+0x154>
   13518:	b	134a4 <por_write_double_to_buffer.isra.2.constprop.6+0x284>
   1351c:	add	sl, r1, #1
   13520:	add	r1, r4, r1
   13524:	b	134a4 <por_write_double_to_buffer.isra.2.constprop.6+0x284>
   13528:	mov	r2, #42	; 0x2a
   1352c:	mov	r3, #46	; 0x2e
   13530:	add	r0, r0, #2
   13534:	mov	sl, #2
   13538:	strb	r2, [r4]
   1353c:	strb	r3, [r4, #1]
   13540:	b	132ac <por_write_double_to_buffer.isra.2.constprop.6+0x8c>
   13544:	mov	r6, #0
   13548:	mov	r7, #0
   1354c:	b	13478 <por_write_double_to_buffer.isra.2.constprop.6+0x258>
   13550:	.word	0xffffffff
   13554:	.word	0x7fefffff
   13558:	.word	0x00000000
   1355c:	.word	0x403e0000

00013560 <por_write_string_value>:
   13560:	strd	r4, [sp, #-20]!	; 0xffffffec
   13564:	mov	r5, r2
   13568:	strd	r6, [sp, #8]
   1356c:	mov	r6, r0
   13570:	mov	r0, r2
   13574:	str	lr, [sp, #16]
   13578:	sub	sp, sp, #12
   1357c:	mov	r7, r1
   13580:	bl	41d0 <strlen@plt>
   13584:	subs	r4, r0, #0
   13588:	bne	13598 <por_write_string_value+0x38>
   1358c:	ldr	r5, [pc, #96]	; 135f4 <por_write_string_value+0x94>
   13590:	mov	r4, #1
   13594:	add	r5, pc, r5
   13598:	mov	r0, r7
   1359c:	bl	429c <readstat_variable_get_storage_width@plt>
   135a0:	cmp	r4, r0
   135a4:	movcs	r2, r0
   135a8:	movcc	r2, r4
   135ac:	mov	r0, r6
   135b0:	vmov	s15, r2
   135b4:	str	r2, [sp, #4]
   135b8:	vcvt.f64.s32	d0, s15
   135bc:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   135c0:	cmn	r0, #1
   135c4:	moveq	r0, #13
   135c8:	beq	135e0 <por_write_string_value+0x80>
   135cc:	mov	r1, r5
   135d0:	add	r0, r6, r0
   135d4:	ldr	r2, [sp, #4]
   135d8:	bl	4290 <strncpy@plt>
   135dc:	mov	r0, #0
   135e0:	add	sp, sp, #12
   135e4:	ldrd	r4, [sp]
   135e8:	ldrd	r6, [sp, #8]
   135ec:	add	sp, sp, #16
   135f0:	pop	{pc}		; (ldr pc, [sp], #4)
   135f4:	.word	0x00012f38

000135f8 <por_write_int8_value>:
   135f8:	vmov	s15, r2
   135fc:	str	r4, [sp, #-8]!
   13600:	str	lr, [sp, #4]
   13604:	vcvt.f64.s32	d0, s15
   13608:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   1360c:	cmn	r0, #1
   13610:	ldr	r4, [sp]
   13614:	add	sp, sp, #4
   13618:	moveq	r0, #13
   1361c:	movne	r0, #0
   13620:	pop	{pc}		; (ldr pc, [sp], #4)

00013624 <por_write_int16_value>:
   13624:	vmov	s15, r2
   13628:	str	r4, [sp, #-8]!
   1362c:	str	lr, [sp, #4]
   13630:	vcvt.f64.s32	d0, s15
   13634:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   13638:	cmn	r0, #1
   1363c:	ldr	r4, [sp]
   13640:	add	sp, sp, #4
   13644:	moveq	r0, #13
   13648:	movne	r0, #0
   1364c:	pop	{pc}		; (ldr pc, [sp], #4)

00013650 <por_write_int32_value>:
   13650:	vmov	s15, r2
   13654:	str	r4, [sp, #-8]!
   13658:	str	lr, [sp, #4]
   1365c:	vcvt.f64.s32	d0, s15
   13660:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   13664:	cmn	r0, #1
   13668:	ldr	r4, [sp]
   1366c:	add	sp, sp, #4
   13670:	moveq	r0, #13
   13674:	movne	r0, #0
   13678:	pop	{pc}		; (ldr pc, [sp], #4)

0001367c <por_write_float_value>:
   1367c:	vcvt.f64.f32	d0, s0
   13680:	str	r4, [sp, #-8]!
   13684:	str	lr, [sp, #4]
   13688:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   1368c:	cmn	r0, #1
   13690:	ldr	r4, [sp]
   13694:	add	sp, sp, #4
   13698:	moveq	r0, #13
   1369c:	movne	r0, #0
   136a0:	pop	{pc}		; (ldr pc, [sp], #4)

000136a4 <por_write_missing_string>:
   136a4:	vldr	d0, [pc, #36]	; 136d0 <por_write_missing_string+0x2c>
   136a8:	str	r4, [sp, #-8]!
   136ac:	str	lr, [sp, #4]
   136b0:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   136b4:	cmn	r0, #1
   136b8:	ldr	r4, [sp]
   136bc:	add	sp, sp, #4
   136c0:	moveq	r0, #13
   136c4:	movne	r0, #0
   136c8:	pop	{pc}		; (ldr pc, [sp], #4)
   136cc:	nop	{0}
	...

000136d8 <por_write_missing_number>:
   136d8:	vldr	d0, [pc, #32]	; 13700 <por_write_missing_number+0x28>
   136dc:	str	r4, [sp, #-8]!
   136e0:	str	lr, [sp, #4]
   136e4:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   136e8:	cmn	r0, #1
   136ec:	ldr	r4, [sp]
   136f0:	add	sp, sp, #4
   136f4:	moveq	r0, #13
   136f8:	movne	r0, #0
   136fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13700:	.word	0x00000000
   13704:	.word	0x7ff80000

00013708 <por_write_double_value>:
   13708:	str	r4, [sp, #-8]!
   1370c:	str	lr, [sp, #4]
   13710:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   13714:	cmn	r0, #1
   13718:	ldr	r4, [sp]
   1371c:	add	sp, sp, #4
   13720:	moveq	r0, #13
   13724:	movne	r0, #0
   13728:	pop	{pc}		; (ldr pc, [sp], #4)

0001372c <por_write_double>:
   1372c:	strd	r4, [sp, #-16]!
   13730:	mov	r5, r1
   13734:	str	r6, [sp, #8]
   13738:	mov	r6, r0
   1373c:	str	lr, [sp, #12]
   13740:	vpush	{d8}
   13744:	sub	sp, sp, #1280	; 0x500
   13748:	vmov.f64	d8, d0
   1374c:	sub	sp, sp, #8
   13750:	add	r4, sp, #8
   13754:	mov	r0, r4
   13758:	bl	13220 <por_write_double_to_buffer.isra.2.constprop.6>
   1375c:	cmn	r0, #1
   13760:	beq	1379c <por_write_double+0x70>
   13764:	mov	r2, r0
   13768:	mov	r3, r4
   1376c:	mov	r0, r6
   13770:	mov	r1, r5
   13774:	str	r2, [sp]
   13778:	add	r2, r5, #4
   1377c:	bl	12f28 <por_write_string_n.isra.1>
   13780:	add	sp, sp, #1280	; 0x500
   13784:	add	sp, sp, #8
   13788:	vpop	{d8}
   1378c:	ldrd	r4, [sp]
   13790:	ldr	r6, [sp, #8]
   13794:	add	sp, sp, #12
   13798:	pop	{pc}		; (ldr pc, [sp], #4)
   1379c:	ldr	r3, [r6, #296]	; 0x128
   137a0:	cmp	r3, #0
   137a4:	beq	137d4 <por_write_double+0xa8>
   137a8:	ldr	r2, [pc, #44]	; 137dc <por_write_double+0xb0>
   137ac:	add	r4, sp, #264	; 0x108
   137b0:	mov	r1, #1024	; 0x400
   137b4:	mov	r0, r4
   137b8:	vstr	d8, [sp]
   137bc:	add	r2, pc, r2
   137c0:	bl	4254 <snprintf@plt>
   137c4:	mov	r0, r4
   137c8:	ldr	r3, [r6, #296]	; 0x128
   137cc:	ldr	r1, [r6, #304]	; 0x130
   137d0:	blx	r3
   137d4:	mov	r0, #13
   137d8:	b	13780 <por_write_double+0x54>
   137dc:	.word	0x00012d14

000137e0 <por_write_string_field_n>:
   137e0:	vmov	s15, r3
   137e4:	strd	r4, [sp, #-20]!	; 0xffffffec
   137e8:	mov	r4, r3
   137ec:	mov	r5, r1
   137f0:	strd	r6, [sp, #8]
   137f4:	mov	r7, r2
   137f8:	mov	r6, r0
   137fc:	str	lr, [sp, #16]
   13800:	sub	sp, sp, #12
   13804:	vcvt.f64.u32	d0, s15
   13808:	bl	1372c <por_write_double>
   1380c:	cmp	r0, #0
   13810:	bne	1382c <por_write_string_field_n+0x4c>
   13814:	mov	r3, r7
   13818:	mov	r0, r6
   1381c:	str	r4, [sp]
   13820:	add	r2, r5, #4
   13824:	mov	r1, r5
   13828:	bl	12f28 <por_write_string_n.isra.1>
   1382c:	add	sp, sp, #12
   13830:	ldrd	r4, [sp]
   13834:	ldrd	r6, [sp, #8]
   13838:	add	sp, sp, #16
   1383c:	pop	{pc}		; (ldr pc, [sp], #4)

00013840 <por_emit_format>:
   13840:	vldr	s15, [r2]
   13844:	strd	r4, [sp, #-16]!
   13848:	mov	r4, r2
   1384c:	mov	r5, r0
   13850:	str	r6, [sp, #8]
   13854:	mov	r6, r1
   13858:	str	lr, [sp, #12]
   1385c:	vcvt.f64.s32	d0, s15
   13860:	bl	1372c <por_write_double>
   13864:	cmp	r0, #0
   13868:	beq	1387c <por_emit_format+0x3c>
   1386c:	ldrd	r4, [sp]
   13870:	ldr	r6, [sp, #8]
   13874:	add	sp, sp, #12
   13878:	pop	{pc}		; (ldr pc, [sp], #4)
   1387c:	vldr	s15, [r4, #4]
   13880:	mov	r1, r6
   13884:	mov	r0, r5
   13888:	vcvt.f64.s32	d0, s15
   1388c:	bl	1372c <por_write_double>
   13890:	cmp	r0, #0
   13894:	bne	1386c <por_emit_format+0x2c>
   13898:	vldr	s0, [r4, #8]
   1389c:	mov	r1, r6
   138a0:	mov	r0, r5
   138a4:	ldrd	r4, [sp]
   138a8:	ldr	r6, [sp, #8]
   138ac:	vcvt.f64.s32	d0, s0
   138b0:	ldr	lr, [sp, #12]
   138b4:	add	sp, sp, #16
   138b8:	b	1372c <por_write_double>

000138bc <por_begin_data>:
   138bc:	mov	r1, #8
   138c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   138c4:	strd	r6, [sp, #8]
   138c8:	ldr	r7, [pc, #1856]	; 14010 <por_begin_data+0x754>
   138cc:	strd	r8, [sp, #16]
   138d0:	mov	r8, r0
   138d4:	mov	r0, #1
   138d8:	strd	sl, [sp, #24]
   138dc:	str	lr, [sp, #32]
   138e0:	vpush	{d8-d11}
   138e4:	sub	sp, sp, #84	; 0x54
   138e8:	bl	3d2c <calloc@plt>
   138ec:	ldr	r3, [pc, #1824]	; 14014 <por_begin_data+0x758>
   138f0:	add	r7, pc, r7
   138f4:	mov	sl, r0
   138f8:	mov	r0, #0
   138fc:	ldr	r5, [r7, r3]
   13900:	sub	r6, r5, #2
   13904:	add	r5, r5, #508	; 0x1fc
   13908:	add	r5, r5, #2
   1390c:	mov	r3, r6
   13910:	ldrh	r2, [r3, #2]!
   13914:	cmp	r2, r0
   13918:	movcs	r0, r2
   1391c:	cmp	r5, r3
   13920:	bne	13910 <por_begin_data+0x54>
   13924:	add	r4, r0, #1
   13928:	mov	r0, r4
   1392c:	bl	40e0 <malloc@plt>
   13930:	ldr	r3, [pc, #1760]	; 14018 <por_begin_data+0x75c>
   13934:	stm	sl, {r0, r4}
   13938:	ldr	r3, [r7, r3]
   1393c:	sub	r3, r3, #1
   13940:	ldrh	r1, [r6, #2]!
   13944:	ldrsb	r2, [r3, #1]!
   13948:	cmp	r1, #0
   1394c:	beq	1395c <por_begin_data+0xa0>
   13950:	ldr	r0, [sl]
   13954:	strb	r2, [r0, r1]
   13958:	ldrsb	r2, [r3]
   1395c:	cmp	r2, #0
   13960:	ldrne	r1, [sl]
   13964:	strbne	r2, [r1, r2]
   13968:	cmp	r5, r6
   1396c:	bne	13940 <por_begin_data+0x84>
   13970:	mov	r1, sl
   13974:	mov	r0, r8
   13978:	bl	1309c <por_emit_header>
   1397c:	subs	fp, r0, #0
   13980:	beq	139c0 <por_begin_data+0x104>
   13984:	ldr	r0, [sl]
   13988:	cmp	r0, #0
   1398c:	beq	13994 <por_begin_data+0xd8>
   13990:	bl	3e94 <free@plt>
   13994:	mov	r0, sl
   13998:	bl	3e94 <free@plt>
   1399c:	mov	r0, fp
   139a0:	add	sp, sp, #84	; 0x54
   139a4:	vpop	{d8-d11}
   139a8:	ldrd	r4, [sp]
   139ac:	ldrd	r6, [sp, #8]
   139b0:	ldrd	r8, [sp, #16]
   139b4:	ldrd	sl, [sp, #24]
   139b8:	add	sp, sp, #32
   139bc:	pop	{pc}		; (ldr pc, [sp], #4)
   139c0:	add	r0, r8, #20
   139c4:	bl	4134 <localtime@plt>
   139c8:	subs	r5, r0, #0
   139cc:	moveq	fp, #39	; 0x27
   139d0:	beq	13984 <por_begin_data+0xc8>
   139d4:	add	r3, sl, #4
   139d8:	mov	r7, #1
   139dc:	mov	ip, #65	; 0x41
   139e0:	add	r9, sp, #64	; 0x40
   139e4:	mov	r2, r3
   139e8:	mov	r1, sl
   139ec:	str	r7, [sp]
   139f0:	mov	r0, r8
   139f4:	str	r3, [sp, #12]
   139f8:	mov	r3, r9
   139fc:	strh	ip, [sp, #64]	; 0x40
   13a00:	bl	12f28 <por_write_string_n.isra.1>
   13a04:	subs	fp, r0, #0
   13a08:	bne	13984 <por_begin_data+0xc8>
   13a0c:	ldr	r2, [r5, #12]
   13a10:	movw	r4, #34079	; 0x851f
   13a14:	movt	r4, #20971	; 0x51eb
   13a18:	mov	r6, #100	; 0x64
   13a1c:	movw	ip, #5977	; 0x1759
   13a20:	movt	ip, #53687	; 0xd1b7
   13a24:	ldr	lr, [r5, #20]
   13a28:	movw	r3, #10000	; 0x2710
   13a2c:	mov	r1, #9
   13a30:	umull	fp, r0, r4, r2
   13a34:	add	lr, lr, #1888	; 0x760
   13a38:	lsr	r0, r0, #5
   13a3c:	add	lr, lr, #12
   13a40:	umull	fp, ip, ip, lr
   13a44:	mls	r0, r6, r0, r2
   13a48:	ldr	r2, [pc, #1484]	; 1401c <por_begin_data+0x760>
   13a4c:	lsr	ip, ip, #13
   13a50:	str	r0, [sp, #4]
   13a54:	mov	r0, r9
   13a58:	ldr	fp, [r5, #16]
   13a5c:	mls	r3, r3, ip, lr
   13a60:	add	r2, pc, r2
   13a64:	add	lr, fp, r7
   13a68:	umull	fp, ip, r4, lr
   13a6c:	lsr	ip, ip, #5
   13a70:	mls	ip, r6, ip, lr
   13a74:	str	ip, [sp]
   13a78:	bl	4254 <snprintf@plt>
   13a7c:	mov	r0, r9
   13a80:	bl	41d0 <strlen@plt>
   13a84:	mov	r3, r0
   13a88:	mov	r2, r9
   13a8c:	mov	r1, sl
   13a90:	mov	r0, r8
   13a94:	bl	137e0 <por_write_string_field_n>
   13a98:	subs	fp, r0, #0
   13a9c:	bne	13984 <por_begin_data+0xc8>
   13aa0:	ldr	r3, [r5]
   13aa4:	add	fp, sp, #48	; 0x30
   13aa8:	mov	r1, #7
   13aac:	mov	r0, fp
   13ab0:	ldr	lr, [r5, #8]
   13ab4:	str	fp, [sp, #16]
   13ab8:	umull	ip, r2, r4, r3
   13abc:	lsr	r2, r2, #5
   13ac0:	mls	r2, r6, r2, r3
   13ac4:	str	r2, [sp, #4]
   13ac8:	umull	r2, r3, r4, lr
   13acc:	ldr	ip, [r5, #4]
   13ad0:	lsr	r3, r3, #5
   13ad4:	umull	r2, r4, r4, ip
   13ad8:	ldr	r2, [pc, #1344]	; 14020 <por_begin_data+0x764>
   13adc:	mls	r3, r6, r3, lr
   13ae0:	lsr	r4, r4, #5
   13ae4:	add	r2, pc, r2
   13ae8:	mls	r6, r6, r4, ip
   13aec:	str	r6, [sp]
   13af0:	bl	4254 <snprintf@plt>
   13af4:	mov	r0, fp
   13af8:	bl	41d0 <strlen@plt>
   13afc:	mov	r3, r0
   13b00:	mov	r2, fp
   13b04:	mov	r1, sl
   13b08:	mov	r0, r8
   13b0c:	bl	137e0 <por_write_string_field_n>
   13b10:	subs	fp, r0, #0
   13b14:	bne	13984 <por_begin_data+0xc8>
   13b18:	ldr	r5, [sp, #12]
   13b1c:	mov	ip, #49	; 0x31
   13b20:	mov	r3, r9
   13b24:	mov	r1, sl
   13b28:	mov	r0, r8
   13b2c:	str	r7, [sp]
   13b30:	strh	ip, [sp, #64]	; 0x40
   13b34:	mov	r2, r5
   13b38:	bl	12f28 <por_write_string_n.isra.1>
   13b3c:	subs	fp, r0, #0
   13b40:	bne	13984 <por_begin_data+0xc8>
   13b44:	ldr	r2, [pc, #1240]	; 14024 <por_begin_data+0x768>
   13b48:	mov	r3, #8
   13b4c:	mov	r1, sl
   13b50:	mov	r0, r8
   13b54:	add	r2, pc, r2
   13b58:	bl	137e0 <por_write_string_field_n>
   13b5c:	subs	fp, r0, #0
   13b60:	bne	13984 <por_begin_data+0xc8>
   13b64:	mov	ip, #51	; 0x33
   13b68:	mov	r3, r9
   13b6c:	str	r7, [sp]
   13b70:	mov	r2, r5
   13b74:	mov	r1, sl
   13b78:	mov	r0, r8
   13b7c:	strh	ip, [sp, #64]	; 0x40
   13b80:	bl	12f28 <por_write_string_n.isra.1>
   13b84:	subs	fp, r0, #0
   13b88:	bne	13984 <por_begin_data+0xc8>
   13b8c:	ldr	r2, [pc, #1172]	; 14028 <por_begin_data+0x76c>
   13b90:	mov	r3, #37	; 0x25
   13b94:	mov	r1, sl
   13b98:	mov	r0, r8
   13b9c:	add	r2, pc, r2
   13ba0:	bl	137e0 <por_write_string_field_n>
   13ba4:	subs	fp, r0, #0
   13ba8:	bne	13984 <por_begin_data+0xc8>
   13bac:	mov	ip, #52	; 0x34
   13bb0:	mov	r3, r9
   13bb4:	str	r7, [sp]
   13bb8:	mov	r2, r5
   13bbc:	mov	r1, sl
   13bc0:	mov	r0, r8
   13bc4:	strh	ip, [sp, #64]	; 0x40
   13bc8:	bl	12f28 <por_write_string_n.isra.1>
   13bcc:	subs	fp, r0, #0
   13bd0:	bne	13984 <por_begin_data+0xc8>
   13bd4:	vldr	s15, [r8, #28]
   13bd8:	mov	r1, sl
   13bdc:	mov	r0, r8
   13be0:	vcvt.f64.s32	d0, s15
   13be4:	bl	1372c <por_write_double>
   13be8:	subs	fp, r0, #0
   13bec:	bne	13984 <por_begin_data+0xc8>
   13bf0:	mov	ip, #53	; 0x35
   13bf4:	mov	r3, r9
   13bf8:	str	r7, [sp]
   13bfc:	mov	r2, r5
   13c00:	mov	r1, sl
   13c04:	mov	r0, r8
   13c08:	strh	ip, [sp, #64]	; 0x40
   13c0c:	bl	12f28 <por_write_string_n.isra.1>
   13c10:	subs	fp, r0, #0
   13c14:	bne	13984 <por_begin_data+0xc8>
   13c18:	vldr	d0, [pc, #984]	; 13ff8 <por_begin_data+0x73c>
   13c1c:	mov	r1, sl
   13c20:	mov	r0, r8
   13c24:	bl	1372c <por_write_double>
   13c28:	subs	fp, r0, #0
   13c2c:	bne	13984 <por_begin_data+0xc8>
   13c30:	ldr	r3, [r8, #224]	; 0xe0
   13c34:	cmp	r3, #0
   13c38:	beq	13c90 <por_begin_data+0x3d4>
   13c3c:	mov	ip, #54	; 0x36
   13c40:	mov	r3, r9
   13c44:	str	r7, [sp]
   13c48:	mov	r2, r5
   13c4c:	mov	r1, sl
   13c50:	mov	r0, r8
   13c54:	strh	ip, [sp, #64]	; 0x40
   13c58:	bl	12f28 <por_write_string_n.isra.1>
   13c5c:	subs	fp, r0, #0
   13c60:	bne	13984 <por_begin_data+0xc8>
   13c64:	ldr	r0, [r8, #224]	; 0xe0
   13c68:	bl	4338 <readstat_variable_get_name@plt>
   13c6c:	mov	r4, r0
   13c70:	bl	41d0 <strlen@plt>
   13c74:	mov	r3, r0
   13c78:	mov	r2, r4
   13c7c:	mov	r1, sl
   13c80:	mov	r0, r8
   13c84:	bl	137e0 <por_write_string_field_n>
   13c88:	subs	fp, r0, #0
   13c8c:	bne	13984 <por_begin_data+0xc8>
   13c90:	ldr	r3, [r8, #28]
   13c94:	cmp	r3, #0
   13c98:	ble	13f44 <por_begin_data+0x688>
   13c9c:	vldr	d11, [pc, #860]	; 14000 <por_begin_data+0x744>
   13ca0:	mov	r3, #0
   13ca4:	mov	fp, sl
   13ca8:	vldr	d10, [pc, #856]	; 14008 <por_begin_data+0x74c>
   13cac:	str	r3, [sp, #28]
   13cb0:	ldr	r4, [sp, #16]
   13cb4:	mov	r0, r8
   13cb8:	ldr	r1, [sp, #28]
   13cbc:	bl	4350 <readstat_get_variable@plt>
   13cc0:	mov	r5, r0
   13cc4:	bl	4338 <readstat_variable_get_name@plt>
   13cc8:	mov	r1, #1
   13ccc:	mov	ip, #55	; 0x37
   13cd0:	ldr	r2, [sp, #12]
   13cd4:	mov	r3, r9
   13cd8:	mov	r6, r0
   13cdc:	mov	r0, r8
   13ce0:	str	r1, [sp]
   13ce4:	mov	r1, fp
   13ce8:	strh	ip, [sp, #64]	; 0x40
   13cec:	bl	12f28 <por_write_string_n.isra.1>
   13cf0:	subs	r3, r0, #0
   13cf4:	bne	13eb4 <por_begin_data+0x5f8>
   13cf8:	ldr	r3, [r5]
   13cfc:	mov	r1, fp
   13d00:	mov	r0, r8
   13d04:	cmp	r3, #0
   13d08:	ldreq	r3, [r5, #1600]	; 0x640
   13d0c:	vmovne.f64	d0, d11
   13d10:	vmoveq	s15, r3
   13d14:	vcvteq.f64.u32	d0, s15
   13d18:	bl	1372c <por_write_double>
   13d1c:	subs	r3, r0, #0
   13d20:	bne	13eb4 <por_begin_data+0x5f8>
   13d24:	mov	r0, r6
   13d28:	bl	41d0 <strlen@plt>
   13d2c:	mov	r3, r0
   13d30:	mov	r2, r6
   13d34:	mov	r1, fp
   13d38:	mov	r0, r8
   13d3c:	bl	137e0 <por_write_string_field_n>
   13d40:	subs	r3, r0, #0
   13d44:	bne	13eb4 <por_begin_data+0x5f8>
   13d48:	add	r6, sp, #36	; 0x24
   13d4c:	mov	r0, r5
   13d50:	mov	r1, r6
   13d54:	bl	40c8 <spss_format_for_variable@plt>
   13d58:	subs	r3, r0, #0
   13d5c:	bne	13eb4 <por_begin_data+0x5f8>
   13d60:	mov	r2, r6
   13d64:	mov	r1, fp
   13d68:	mov	r0, r8
   13d6c:	bl	13840 <por_emit_format>
   13d70:	subs	r3, r0, #0
   13d74:	bne	13eb4 <por_begin_data+0x5f8>
   13d78:	mov	r2, r6
   13d7c:	mov	r1, fp
   13d80:	mov	r0, r8
   13d84:	bl	13840 <por_emit_format>
   13d88:	subs	r3, r0, #0
   13d8c:	bne	13eb4 <por_begin_data+0x5f8>
   13d90:	ldr	r2, [r5]
   13d94:	mov	r0, r5
   13d98:	str	r3, [sp, #16]
   13d9c:	cmp	r2, #5
   13da0:	beq	14164 <por_begin_data+0x8a8>
   13da4:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   13da8:	subs	sl, r0, #0
   13dac:	ble	13ec8 <por_begin_data+0x60c>
   13db0:	ldr	r3, [sp, #16]
   13db4:	str	r8, [sp, #20]
   13db8:	mov	r6, r3
   13dbc:	add	r3, sp, #32
   13dc0:	str	r3, [sp, #24]
   13dc4:	b	13dd8 <por_begin_data+0x51c>
   13dc8:	add	r3, r6, #1
   13dcc:	cmp	sl, r3
   13dd0:	beq	14078 <por_begin_data+0x7bc>
   13dd4:	mov	r6, r3
   13dd8:	mov	r2, r6
   13ddc:	mov	r1, r5
   13de0:	mov	r0, r4
   13de4:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   13de8:	mov	r2, r6
   13dec:	mov	r1, r5
   13df0:	mov	r0, r9
   13df4:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   13df8:	ldm	r4, {r0, r1, r2, r3}
   13dfc:	bl	3f84 <readstat_string_value@plt>
   13e00:	mov	r7, r0
   13e04:	ldm	r9, {r0, r1, r2, r3}
   13e08:	bl	3f84 <readstat_string_value@plt>
   13e0c:	cmp	r7, #0
   13e10:	cmpne	r0, #0
   13e14:	mov	r8, r0
   13e18:	mov	r1, r0
   13e1c:	mov	r0, r7
   13e20:	beq	13dc8 <por_begin_data+0x50c>
   13e24:	bl	3dd4 <strcmp@plt>
   13e28:	cmp	r0, #0
   13e2c:	beq	13dc8 <por_begin_data+0x50c>
   13e30:	mov	r1, #1
   13e34:	mov	ip, #66	; 0x42
   13e38:	ldr	r2, [sp, #12]
   13e3c:	str	r1, [sp]
   13e40:	mov	r1, fp
   13e44:	ldr	r0, [sp, #20]
   13e48:	strh	ip, [sp, #32]
   13e4c:	ldr	r3, [sp, #24]
   13e50:	bl	12f28 <por_write_string_n.isra.1>
   13e54:	ldr	r3, [sp, #16]
   13e58:	add	r3, r3, #2
   13e5c:	str	r3, [sp, #16]
   13e60:	subs	r3, r0, #0
   13e64:	mov	r0, r7
   13e68:	bne	13eb4 <por_begin_data+0x5f8>
   13e6c:	bl	41d0 <strlen@plt>
   13e70:	mov	r2, r7
   13e74:	ldr	r7, [sp, #20]
   13e78:	mov	r3, r0
   13e7c:	mov	r1, fp
   13e80:	mov	r0, r7
   13e84:	bl	137e0 <por_write_string_field_n>
   13e88:	subs	r3, r0, #0
   13e8c:	mov	r0, r8
   13e90:	bne	13eb4 <por_begin_data+0x5f8>
   13e94:	bl	41d0 <strlen@plt>
   13e98:	mov	r3, r0
   13e9c:	mov	r2, r8
   13ea0:	mov	r1, fp
   13ea4:	mov	r0, r7
   13ea8:	bl	137e0 <por_write_string_field_n>
   13eac:	subs	r3, r0, #0
   13eb0:	beq	13dc8 <por_begin_data+0x50c>
   13eb4:	mov	sl, fp
   13eb8:	mov	fp, r3
   13ebc:	b	13984 <por_begin_data+0xc8>
   13ec0:	cmp	r7, #3
   13ec4:	bgt	14158 <por_begin_data+0x89c>
   13ec8:	mov	r0, r5
   13ecc:	bl	43d4 <readstat_variable_get_label@plt>
   13ed0:	subs	r5, r0, #0
   13ed4:	beq	13f28 <por_begin_data+0x66c>
   13ed8:	mov	r1, #1
   13edc:	mov	ip, #67	; 0x43
   13ee0:	ldr	r2, [sp, #12]
   13ee4:	mov	r3, r9
   13ee8:	mov	r0, r8
   13eec:	str	r1, [sp]
   13ef0:	mov	r1, fp
   13ef4:	strh	ip, [sp, #64]	; 0x40
   13ef8:	bl	12f28 <por_write_string_n.isra.1>
   13efc:	subs	r3, r0, #0
   13f00:	bne	13eb4 <por_begin_data+0x5f8>
   13f04:	mov	r0, r5
   13f08:	bl	41d0 <strlen@plt>
   13f0c:	mov	r3, r0
   13f10:	mov	r2, r5
   13f14:	mov	r1, fp
   13f18:	mov	r0, r8
   13f1c:	bl	137e0 <por_write_string_field_n>
   13f20:	subs	r3, r0, #0
   13f24:	bne	13eb4 <por_begin_data+0x5f8>
   13f28:	ldr	r2, [sp, #28]
   13f2c:	ldr	r3, [r8, #28]
   13f30:	add	r2, r2, #1
   13f34:	cmp	r2, r3
   13f38:	str	r2, [sp, #28]
   13f3c:	blt	13cb4 <por_begin_data+0x3f8>
   13f40:	mov	sl, fp
   13f44:	ldr	r3, [r8, #40]	; 0x28
   13f48:	cmp	r3, #0
   13f4c:	movgt	r5, #0
   13f50:	movgt	fp, r9
   13f54:	bgt	13f6c <por_begin_data+0x6b0>
   13f58:	b	14458 <por_begin_data+0xb9c>
   13f5c:	ldr	r3, [r8, #40]	; 0x28
   13f60:	add	r5, r5, #1
   13f64:	cmp	r5, r3
   13f68:	bge	14454 <por_begin_data+0xb98>
   13f6c:	mov	r1, r5
   13f70:	mov	r0, r8
   13f74:	bl	43f8 <readstat_get_label_set@plt>
   13f78:	ldr	r3, [r0, #264]	; 0x108
   13f7c:	mov	r4, r0
   13f80:	cmp	r3, #0
   13f84:	beq	13f5c <por_begin_data+0x6a0>
   13f88:	ldr	r3, [r0, #276]	; 0x114
   13f8c:	cmp	r3, #0
   13f90:	beq	13f5c <por_begin_data+0x6a0>
   13f94:	mov	ip, #1
   13f98:	ldr	r9, [r4]
   13f9c:	mov	r3, fp
   13fa0:	mov	r1, sl
   13fa4:	mov	r0, r8
   13fa8:	str	ip, [sp]
   13fac:	mov	ip, #68	; 0x44
   13fb0:	ldr	r2, [sp, #12]
   13fb4:	strh	ip, [sp, #64]	; 0x40
   13fb8:	bl	12f28 <por_write_string_n.isra.1>
   13fbc:	cmp	r0, #0
   13fc0:	bne	14070 <por_begin_data+0x7b4>
   13fc4:	vldr	s15, [r4, #276]	; 0x114
   13fc8:	mov	r1, sl
   13fcc:	mov	r0, r8
   13fd0:	vcvt.f64.s32	d0, s15
   13fd4:	bl	1372c <por_write_double>
   13fd8:	cmp	r0, #0
   13fdc:	bne	14070 <por_begin_data+0x7b4>
   13fe0:	ldr	r3, [r4, #276]	; 0x114
   13fe4:	cmp	r3, #0
   13fe8:	movgt	r6, r0
   13fec:	bgt	14038 <por_begin_data+0x77c>
   13ff0:	b	1438c <por_begin_data+0xad0>
   13ff4:	nop	{0}
   13ff8:	.word	0x00000000
   13ffc:	.word	0x40490000
	...
   14008:	.word	0xffffffff
   1400c:	.word	0x7fefffff
   14010:	.word	0x00031708
   14014:	.word	0x000002f4
   14018:	.word	0x00000300
   1401c:	.word	0x000129b0
   14020:	.word	0x0001293c
   14024:	.word	0x0001299c
   14028:	.word	0x00012960
   1402c:	ldr	r3, [r4, #276]	; 0x114
   14030:	cmp	r6, r3
   14034:	bge	1438c <por_begin_data+0xad0>
   14038:	mov	r1, r6
   1403c:	mov	r0, r4
   14040:	bl	441c <readstat_get_label_set_variable@plt>
   14044:	bl	4338 <readstat_variable_get_name@plt>
   14048:	mov	r7, r0
   1404c:	add	r6, r6, #1
   14050:	bl	41d0 <strlen@plt>
   14054:	mov	r3, r0
   14058:	mov	r2, r7
   1405c:	mov	r1, sl
   14060:	mov	r0, r8
   14064:	bl	137e0 <por_write_string_field_n>
   14068:	cmp	r0, #0
   1406c:	beq	1402c <por_begin_data+0x770>
   14070:	mov	fp, r0
   14074:	b	13984 <por_begin_data+0xc8>
   14078:	add	r3, sp, #32
   1407c:	mov	r7, #0
   14080:	ldr	r8, [sp, #20]
   14084:	str	r3, [sp, #20]
   14088:	b	14098 <por_begin_data+0x7dc>
   1408c:	cmp	r7, r6
   14090:	add	r7, r7, #1
   14094:	beq	1414c <por_begin_data+0x890>
   14098:	mov	r2, r7
   1409c:	mov	r1, r5
   140a0:	mov	r0, r4
   140a4:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   140a8:	mov	r2, r7
   140ac:	mov	r1, r5
   140b0:	mov	r0, r9
   140b4:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   140b8:	ldm	r4, {r0, r1, r2, r3}
   140bc:	bl	3f84 <readstat_string_value@plt>
   140c0:	mov	sl, r0
   140c4:	ldm	r9, {r0, r1, r2, r3}
   140c8:	bl	3f84 <readstat_string_value@plt>
   140cc:	cmp	sl, #0
   140d0:	cmpne	r0, #0
   140d4:	mov	r1, r0
   140d8:	mov	r0, sl
   140dc:	beq	1408c <por_begin_data+0x7d0>
   140e0:	bl	3dd4 <strcmp@plt>
   140e4:	cmp	r0, #0
   140e8:	bne	1408c <por_begin_data+0x7d0>
   140ec:	mov	r1, #1
   140f0:	mov	ip, #56	; 0x38
   140f4:	ldr	r2, [sp, #12]
   140f8:	mov	r0, r8
   140fc:	str	r1, [sp]
   14100:	mov	r1, fp
   14104:	ldr	r3, [sp, #20]
   14108:	strh	ip, [sp, #32]
   1410c:	bl	12f28 <por_write_string_n.isra.1>
   14110:	ldr	r3, [sp, #16]
   14114:	add	r3, r3, #1
   14118:	str	r3, [sp, #16]
   1411c:	subs	r3, r0, #0
   14120:	mov	r0, sl
   14124:	bne	13eb4 <por_begin_data+0x5f8>
   14128:	bl	41d0 <strlen@plt>
   1412c:	mov	r3, r0
   14130:	mov	r2, sl
   14134:	mov	r1, fp
   14138:	mov	r0, r8
   1413c:	bl	137e0 <por_write_string_field_n>
   14140:	subs	r3, r0, #0
   14144:	beq	1408c <por_begin_data+0x7d0>
   14148:	b	13eb4 <por_begin_data+0x5f8>
   1414c:	ldr	r3, [sp, #16]
   14150:	cmp	r3, #3
   14154:	ble	13ec8 <por_begin_data+0x60c>
   14158:	mov	sl, fp
   1415c:	mov	fp, #31
   14160:	b	13984 <por_begin_data+0xc8>
   14164:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   14168:	ldr	r3, [sp, #16]
   1416c:	subs	sl, r0, #0
   14170:	movgt	r7, r3
   14174:	addgt	r3, sp, #32
   14178:	movgt	r6, r7
   1417c:	strgt	r3, [sp, #16]
   14180:	bgt	141b4 <por_begin_data+0x8f8>
   14184:	b	13ec8 <por_begin_data+0x60c>
   14188:	vabs.f64	d7, d0
   1418c:	vcmp.f64	d7, d10
   14190:	vmrs	APSR_nzcv, fpscr
   14194:	bgt	14244 <por_begin_data+0x988>
   14198:	vcmp.f64	d8, d0
   1419c:	vmrs	APSR_nzcv, fpscr
   141a0:	bne	14274 <por_begin_data+0x9b8>
   141a4:	add	r3, r6, #1
   141a8:	cmp	sl, r3
   141ac:	beq	142c4 <por_begin_data+0xa08>
   141b0:	mov	r6, r3
   141b4:	mov	r2, r6
   141b8:	mov	r1, r5
   141bc:	mov	r0, r4
   141c0:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   141c4:	mov	r2, r6
   141c8:	mov	r1, r5
   141cc:	mov	r0, r9
   141d0:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   141d4:	ldm	r4, {r0, r1, r2, r3}
   141d8:	bl	4188 <readstat_double_value@plt>
   141dc:	vmov.f64	d8, d0
   141e0:	ldm	r9, {r0, r1, r2, r3}
   141e4:	bl	4188 <readstat_double_value@plt>
   141e8:	vabs.f64	d7, d8
   141ec:	vmov.f64	d9, d0
   141f0:	vcmp.f64	d7, d10
   141f4:	vmrs	APSR_nzcv, fpscr
   141f8:	ble	14188 <por_begin_data+0x8cc>
   141fc:	mov	r1, #1
   14200:	mov	ip, #57	; 0x39
   14204:	ldrd	r2, [sp, #12]
   14208:	mov	r0, r8
   1420c:	str	r1, [sp]
   14210:	mov	r1, fp
   14214:	strh	ip, [sp, #32]
   14218:	bl	12f28 <por_write_string_n.isra.1>
   1421c:	cmp	r0, #0
   14220:	bne	142b8 <por_begin_data+0x9fc>
   14224:	vmov.f64	d0, d9
   14228:	mov	r1, fp
   1422c:	mov	r0, r8
   14230:	bl	1372c <por_write_double>
   14234:	cmp	r0, #0
   14238:	bne	142b8 <por_begin_data+0x9fc>
   1423c:	add	r7, r7, #2
   14240:	b	141a4 <por_begin_data+0x8e8>
   14244:	mov	r1, #1
   14248:	mov	ip, #65	; 0x41
   1424c:	ldrd	r2, [sp, #12]
   14250:	mov	r0, r8
   14254:	str	r1, [sp]
   14258:	mov	r1, fp
   1425c:	strh	ip, [sp, #32]
   14260:	bl	12f28 <por_write_string_n.isra.1>
   14264:	cmp	r0, #0
   14268:	bne	142b8 <por_begin_data+0x9fc>
   1426c:	vmov.f64	d0, d8
   14270:	b	14228 <por_begin_data+0x96c>
   14274:	mov	r0, #1
   14278:	mov	r2, #66	; 0x42
   1427c:	ldr	r3, [sp, #16]
   14280:	mov	r1, fp
   14284:	str	r0, [sp]
   14288:	mov	r0, r8
   1428c:	strh	r2, [sp, #32]
   14290:	ldr	r2, [sp, #12]
   14294:	bl	12f28 <por_write_string_n.isra.1>
   14298:	cmp	r0, #0
   1429c:	bne	142b8 <por_begin_data+0x9fc>
   142a0:	vmov.f64	d0, d8
   142a4:	mov	r1, fp
   142a8:	mov	r0, r8
   142ac:	bl	1372c <por_write_double>
   142b0:	cmp	r0, #0
   142b4:	beq	14224 <por_begin_data+0x968>
   142b8:	mov	sl, fp
   142bc:	mov	fp, r0
   142c0:	b	13984 <por_begin_data+0xc8>
   142c4:	add	r3, sp, #32
   142c8:	mov	sl, #0
   142cc:	str	r3, [sp, #16]
   142d0:	b	142e0 <por_begin_data+0xa24>
   142d4:	cmp	sl, r6
   142d8:	add	sl, sl, #1
   142dc:	beq	13ec0 <por_begin_data+0x604>
   142e0:	mov	r2, sl
   142e4:	mov	r1, r5
   142e8:	mov	r0, r4
   142ec:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   142f0:	mov	r2, sl
   142f4:	mov	r1, r5
   142f8:	mov	r0, r9
   142fc:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   14300:	ldm	r4, {r0, r1, r2, r3}
   14304:	bl	4188 <readstat_double_value@plt>
   14308:	vmov.f64	d8, d0
   1430c:	ldm	r9, {r0, r1, r2, r3}
   14310:	bl	4188 <readstat_double_value@plt>
   14314:	vcmp.f64	d8, d0
   14318:	vabs.f64	d7, d8
   1431c:	vmrs	APSR_nzcv, fpscr
   14320:	bne	142d4 <por_begin_data+0xa18>
   14324:	vcmp.f64	d7, d10
   14328:	vabs.f64	d0, d0
   1432c:	vmrs	APSR_nzcv, fpscr
   14330:	bgt	142d4 <por_begin_data+0xa18>
   14334:	vcmp.f64	d0, d10
   14338:	vmrs	APSR_nzcv, fpscr
   1433c:	bgt	142d4 <por_begin_data+0xa18>
   14340:	mov	r0, #1
   14344:	mov	r2, #56	; 0x38
   14348:	ldr	r3, [sp, #16]
   1434c:	mov	r1, fp
   14350:	add	r7, r7, #1
   14354:	str	r0, [sp]
   14358:	mov	r0, r8
   1435c:	strh	r2, [sp, #32]
   14360:	ldr	r2, [sp, #12]
   14364:	bl	12f28 <por_write_string_n.isra.1>
   14368:	subs	r3, r0, #0
   1436c:	vmov.f64	d0, d8
   14370:	mov	r1, fp
   14374:	mov	r0, r8
   14378:	bne	13eb4 <por_begin_data+0x5f8>
   1437c:	bl	1372c <por_write_double>
   14380:	subs	r3, r0, #0
   14384:	beq	142d4 <por_begin_data+0xa18>
   14388:	b	13eb4 <por_begin_data+0x5f8>
   1438c:	vldr	s15, [r4, #264]	; 0x108
   14390:	mov	r1, sl
   14394:	mov	r0, r8
   14398:	vcvt.f64.s32	d0, s15
   1439c:	bl	1372c <por_write_double>
   143a0:	cmp	r0, #0
   143a4:	bne	14070 <por_begin_data+0x7b4>
   143a8:	ldr	r3, [r4, #264]	; 0x108
   143ac:	cmp	r3, #0
   143b0:	ble	13f5c <por_begin_data+0x6a0>
   143b4:	mov	r6, r0
   143b8:	b	143f4 <por_begin_data+0xb38>
   143bc:	cmp	r9, #5
   143c0:	beq	14428 <por_begin_data+0xb6c>
   143c4:	cmp	r9, #3
   143c8:	beq	1443c <por_begin_data+0xb80>
   143cc:	mov	r1, sl
   143d0:	mov	r0, r8
   143d4:	ldrd	r2, [r7, #24]
   143d8:	bl	137e0 <por_write_string_field_n>
   143dc:	cmp	r0, #0
   143e0:	add	r6, r6, #1
   143e4:	bne	14070 <por_begin_data+0x7b4>
   143e8:	ldr	r3, [r4, #264]	; 0x108
   143ec:	cmp	r6, r3
   143f0:	bge	13f5c <por_begin_data+0x6a0>
   143f4:	mov	r1, r6
   143f8:	mov	r0, r4
   143fc:	bl	44a0 <readstat_get_value_label@plt>
   14400:	cmp	r9, #0
   14404:	mov	r7, r0
   14408:	bne	143bc <por_begin_data+0xb00>
   1440c:	mov	r1, sl
   14410:	mov	r0, r8
   14414:	ldrd	r2, [r7, #16]
   14418:	bl	137e0 <por_write_string_field_n>
   1441c:	cmp	r0, #0
   14420:	beq	143cc <por_begin_data+0xb10>
   14424:	b	14070 <por_begin_data+0x7b4>
   14428:	mov	r1, sl
   1442c:	mov	r0, r8
   14430:	vldr	d0, [r7]
   14434:	bl	1372c <por_write_double>
   14438:	b	1441c <por_begin_data+0xb60>
   1443c:	vldr	s15, [r7, #8]
   14440:	mov	r1, sl
   14444:	mov	r0, r8
   14448:	vcvt.f64.s32	d0, s15
   1444c:	bl	1372c <por_write_double>
   14450:	b	1441c <por_begin_data+0xb60>
   14454:	mov	r9, fp
   14458:	mov	r1, #1
   1445c:	mov	ip, #69	; 0x45
   14460:	ldr	r2, [sp, #12]
   14464:	mov	r3, r9
   14468:	mov	r0, r8
   1446c:	str	r1, [sp]
   14470:	mov	r1, sl
   14474:	strh	ip, [sp, #64]	; 0x40
   14478:	bl	12f28 <por_write_string_n.isra.1>
   1447c:	subs	fp, r0, #0
   14480:	bne	13984 <por_begin_data+0xc8>
   14484:	vldr	s15, [r8, #52]	; 0x34
   14488:	mov	r1, sl
   1448c:	mov	r0, r8
   14490:	vcvt.f64.s32	d0, s15
   14494:	bl	1372c <por_write_double>
   14498:	subs	fp, r0, #0
   1449c:	bne	13984 <por_begin_data+0xc8>
   144a0:	ldr	r2, [r8, #52]	; 0x34
   144a4:	cmp	r2, #0
   144a8:	ble	14504 <por_begin_data+0xc48>
   144ac:	mov	r4, fp
   144b0:	b	144cc <por_begin_data+0xc10>
   144b4:	bl	137e0 <por_write_string_field_n>
   144b8:	cmp	r0, #0
   144bc:	bne	14070 <por_begin_data+0x7b4>
   144c0:	ldr	r3, [r8, #52]	; 0x34
   144c4:	cmp	r4, r3
   144c8:	bge	14504 <por_begin_data+0xc48>
   144cc:	ldr	r3, [r8, #48]	; 0x30
   144d0:	ldr	r5, [r3, r4, lsl #2]
   144d4:	add	r4, r4, #1
   144d8:	mov	r0, r5
   144dc:	bl	41d0 <strlen@plt>
   144e0:	mov	ip, r0
   144e4:	mov	r3, r0
   144e8:	cmp	ip, #80	; 0x50
   144ec:	mov	r2, r5
   144f0:	mov	r1, sl
   144f4:	mov	r0, r8
   144f8:	bls	144b4 <por_begin_data+0xbf8>
   144fc:	mov	fp, #32
   14500:	b	13984 <por_begin_data+0xc8>
   14504:	mov	r1, #1
   14508:	mov	ip, #70	; 0x46
   1450c:	ldr	r2, [sp, #12]
   14510:	mov	r3, r9
   14514:	mov	r0, r8
   14518:	str	r1, [sp]
   1451c:	mov	r1, sl
   14520:	strh	ip, [sp, #64]	; 0x40
   14524:	bl	12f28 <por_write_string_n.isra.1>
   14528:	subs	fp, r0, #0
   1452c:	streq	sl, [r8, #300]	; 0x12c
   14530:	beq	1399c <por_begin_data+0xe0>
   14534:	b	13984 <por_begin_data+0xc8>

00014538 <por_end_data>:
   14538:	ldr	r1, [r0, #300]	; 0x12c
   1453c:	mov	r2, #1
   14540:	strd	r4, [sp, #-16]!
   14544:	mov	r4, r0
   14548:	str	r6, [sp, #8]
   1454c:	mov	r6, #90	; 0x5a
   14550:	str	lr, [sp, #12]
   14554:	sub	sp, sp, #16
   14558:	add	r3, sp, #12
   1455c:	str	r2, [sp]
   14560:	add	r2, r1, #4
   14564:	strh	r6, [sp, #12]
   14568:	bl	12f28 <por_write_string_n.isra.1>
   1456c:	subs	r5, r0, #0
   14570:	bne	14590 <por_end_data+0x58>
   14574:	ldr	r3, [pc, #72]	; 145c4 <por_end_data+0x8c>
   14578:	mov	r1, r6
   1457c:	mov	r2, #80	; 0x50
   14580:	mov	r0, r4
   14584:	add	r3, pc, r3
   14588:	bl	44b8 <readstat_write_line_padding@plt>
   1458c:	mov	r5, r0
   14590:	ldr	r4, [r4, #300]	; 0x12c
   14594:	ldr	r0, [r4]
   14598:	cmp	r0, #0
   1459c:	beq	145a4 <por_end_data+0x6c>
   145a0:	bl	3e94 <free@plt>
   145a4:	mov	r0, r4
   145a8:	bl	3e94 <free@plt>
   145ac:	mov	r0, r5
   145b0:	add	sp, sp, #16
   145b4:	ldrd	r4, [sp]
   145b8:	ldr	r6, [sp, #8]
   145bc:	add	sp, sp, #12
   145c0:	pop	{pc}		; (ldr pc, [sp], #4)
   145c4:	.word	0x00011f2c

000145c8 <readstat_begin_writing_por>:
   145c8:	ldr	ip, [pc, #184]	; 14688 <readstat_begin_writing_por+0xc0>
   145cc:	str	r4, [sp, #-8]!
   145d0:	ldr	r4, [pc, #180]	; 1468c <readstat_begin_writing_por+0xc4>
   145d4:	str	lr, [sp, #4]
   145d8:	ldr	lr, [pc, #176]	; 14690 <readstat_begin_writing_por+0xc8>
   145dc:	add	ip, pc, ip
   145e0:	add	r4, pc, r4
   145e4:	str	ip, [r0, #228]	; 0xe4
   145e8:	ldr	ip, [pc, #164]	; 14694 <readstat_begin_writing_por+0xcc>
   145ec:	add	lr, pc, lr
   145f0:	str	r4, [r0, #232]	; 0xe8
   145f4:	ldr	r4, [pc, #156]	; 14698 <readstat_begin_writing_por+0xd0>
   145f8:	str	lr, [r0, #292]	; 0x124
   145fc:	ldr	lr, [pc, #152]	; 1469c <readstat_begin_writing_por+0xd4>
   14600:	add	ip, pc, ip
   14604:	add	r4, pc, r4
   14608:	str	ip, [r0, #240]	; 0xf0
   1460c:	ldr	ip, [pc, #140]	; 146a0 <readstat_begin_writing_por+0xd8>
   14610:	add	lr, pc, lr
   14614:	str	lr, [r0, #236]	; 0xec
   14618:	ldr	lr, [pc, #132]	; 146a4 <readstat_begin_writing_por+0xdc>
   1461c:	str	r4, [r0, #244]	; 0xf4
   14620:	add	ip, pc, ip
   14624:	ldr	r4, [pc, #124]	; 146a8 <readstat_begin_writing_por+0xe0>
   14628:	str	ip, [r0, #252]	; 0xfc
   1462c:	ldr	ip, [pc, #120]	; 146ac <readstat_begin_writing_por+0xe4>
   14630:	add	lr, pc, lr
   14634:	add	r4, pc, r4
   14638:	str	lr, [r0, #248]	; 0xf8
   1463c:	ldr	lr, [pc, #108]	; 146b0 <readstat_begin_writing_por+0xe8>
   14640:	str	r4, [r0, #256]	; 0x100
   14644:	add	ip, pc, ip
   14648:	ldr	r4, [pc, #100]	; 146b4 <readstat_begin_writing_por+0xec>
   1464c:	str	ip, [r0, #268]	; 0x10c
   14650:	ldr	ip, [pc, #96]	; 146b8 <readstat_begin_writing_por+0xf0>
   14654:	add	lr, pc, lr
   14658:	add	r4, pc, r4
   1465c:	str	r4, [r0, #276]	; 0x114
   14660:	add	ip, pc, ip
   14664:	ldr	r4, [sp]
   14668:	str	lr, [r0, #264]	; 0x108
   1466c:	ldr	lr, [pc, #72]	; 146bc <readstat_begin_writing_por+0xf4>
   14670:	str	ip, [r0, #284]	; 0x11c
   14674:	add	lr, pc, lr
   14678:	str	lr, [r0, #280]	; 0x118
   1467c:	ldr	lr, [sp, #4]
   14680:	add	sp, sp, #8
   14684:	b	3f3c <readstat_begin_writing_file@plt>
   14688:	.word	0xffffe774
   1468c:	.word	0xffffe790
   14690:	.word	0xffffe774
   14694:	.word	0xfffff01c
   14698:	.word	0xfffff044
   1469c:	.word	0xffffefe0
   146a0:	.word	0xfffff0e0
   146a4:	.word	0xfffff044
   146a8:	.word	0xffffef24
   146ac:	.word	0xfffff08c
   146b0:	.word	0xfffff048
   146b4:	.word	0xfffff25c
   146b8:	.word	0xfffffed0
   146bc:	.word	0xffffe9b4

000146c0 <sav_ctx_free>:
   146c0:	strd	r4, [sp, #-16]!
   146c4:	mov	r4, r0
   146c8:	ldr	r0, [r0, #44]	; 0x2c
   146cc:	str	r6, [sp, #8]
   146d0:	str	lr, [sp, #12]
   146d4:	cmp	r0, #0
   146d8:	beq	1470c <sav_ctx_free+0x4c>
   146dc:	ldr	r3, [r4, #340]	; 0x154
   146e0:	cmp	r3, #0
   146e4:	ble	14708 <sav_ctx_free+0x48>
   146e8:	mov	r5, #0
   146ec:	ldr	r0, [r0, r5, lsl #2]
   146f0:	add	r5, r5, #1
   146f4:	bl	43ec <spss_varinfo_free@plt>
   146f8:	ldr	r0, [r4, #44]	; 0x2c
   146fc:	ldr	r3, [r4, #340]	; 0x154
   14700:	cmp	r3, r5
   14704:	bgt	146ec <sav_ctx_free+0x2c>
   14708:	bl	3e94 <free@plt>
   1470c:	ldr	r2, [r4, #52]	; 0x34
   14710:	cmp	r2, #0
   14714:	beq	14754 <sav_ctx_free+0x94>
   14718:	ldr	r1, [r4, #348]	; 0x15c
   1471c:	cmp	r1, #0
   14720:	ble	1474c <sav_ctx_free+0x8c>
   14724:	mov	r5, #0
   14728:	ldr	r3, [r2, r5, lsl #2]
   1472c:	add	r5, r5, #1
   14730:	subs	r0, r3, #0
   14734:	beq	14744 <sav_ctx_free+0x84>
   14738:	bl	3e94 <free@plt>
   1473c:	ldr	r2, [r4, #52]	; 0x34
   14740:	ldr	r1, [r4, #348]	; 0x15c
   14744:	cmp	r1, r5
   14748:	bgt	14728 <sav_ctx_free+0x68>
   1474c:	mov	r0, r2
   14750:	bl	3e94 <free@plt>
   14754:	ldr	r0, [r4, #376]	; 0x178
   14758:	cmp	r0, #0
   1475c:	beq	14764 <sav_ctx_free+0xa4>
   14760:	bl	3e94 <free@plt>
   14764:	ldr	r0, [r4, #384]	; 0x180
   14768:	cmp	r0, #0
   1476c:	beq	14774 <sav_ctx_free+0xb4>
   14770:	bl	3e94 <free@plt>
   14774:	ldr	r0, [r4, #336]	; 0x150
   14778:	cmp	r0, #0
   1477c:	beq	14784 <sav_ctx_free+0xc4>
   14780:	bl	3da4 <iconv_close@plt>
   14784:	ldr	r0, [r4, #328]	; 0x148
   14788:	cmp	r0, #0
   1478c:	beq	14794 <sav_ctx_free+0xd4>
   14790:	bl	3e94 <free@plt>
   14794:	mov	r0, r4
   14798:	ldrd	r4, [sp]
   1479c:	ldr	r6, [sp, #8]
   147a0:	ldr	lr, [sp, #12]
   147a4:	add	sp, sp, #16
   147a8:	b	3e94 <free@plt>

000147ac <sav_ctx_init>:
   147ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   147b0:	mov	r5, r0
   147b4:	mov	r0, #1
   147b8:	str	r6, [sp, #8]
   147bc:	mov	r6, r1
   147c0:	mov	r1, #440	; 0x1b8
   147c4:	strd	r8, [sp, #12]
   147c8:	str	lr, [sp, #20]
   147cc:	bl	3f9c <readstat_calloc@plt>
   147d0:	subs	r4, r0, #0
   147d4:	beq	147f0 <sav_ctx_init+0x44>
   147d8:	ldrb	r3, [r5]
   147dc:	cmp	r3, #36	; 0x24
   147e0:	beq	14808 <sav_ctx_init+0x5c>
   147e4:	mov	r0, r4
   147e8:	mov	r4, #0
   147ec:	bl	3ee8 <sav_ctx_free@plt>
   147f0:	mov	r0, r4
   147f4:	ldrd	r4, [sp]
   147f8:	ldr	r6, [sp, #8]
   147fc:	ldrd	r8, [sp, #12]
   14800:	add	sp, sp, #20
   14804:	pop	{pc}		; (ldr pc, [sp], #4)
   14808:	ldrb	r3, [r5, #1]
   1480c:	add	r2, r5, #1
   14810:	cmp	r3, #70	; 0x46
   14814:	beq	1484c <sav_ctx_init+0xa0>
   14818:	ldrb	r3, [r5, #1]
   1481c:	add	r2, r5, #1
   14820:	cmp	r3, #70	; 0x46
   14824:	bne	147e4 <sav_ctx_init+0x38>
   14828:	ldrb	r3, [r2, #1]!
   1482c:	cmp	r3, #76	; 0x4c
   14830:	bne	147e4 <sav_ctx_init+0x38>
   14834:	ldrb	r3, [r2, #1]
   14838:	cmp	r3, #51	; 0x33
   1483c:	moveq	r3, #3
   14840:	streq	r3, [r4, #424]	; 0x1a8
   14844:	bne	147e4 <sav_ctx_init+0x38>
   14848:	b	1486c <sav_ctx_init+0xc0>
   1484c:	ldrb	r3, [r2, #1]!
   14850:	cmp	r3, #76	; 0x4c
   14854:	bne	14818 <sav_ctx_init+0x6c>
   14858:	ldrb	r3, [r2, #1]
   1485c:	cmp	r3, #50	; 0x32
   14860:	moveq	r3, #2
   14864:	streq	r3, [r4, #424]	; 0x1a8
   14868:	bne	14818 <sav_ctx_init+0x6c>
   1486c:	ldr	r3, [r5, #64]	; 0x40
   14870:	ldrb	r2, [r4, #436]	; 0x1b4
   14874:	sub	r3, r3, #2
   14878:	cmp	r3, #1
   1487c:	movls	r3, #0
   14880:	movhi	r3, #1
   14884:	bfi	r2, r3, #0, #1
   14888:	strb	r2, [r4, #436]	; 0x1b4
   1488c:	bl	3e88 <machine_is_little_endian@plt>
   14890:	ldrb	r2, [r4, #436]	; 0x1b4
   14894:	and	r3, r2, #1
   14898:	cmp	r0, r3
   1489c:	movne	r0, #1
   148a0:	moveq	r0, #2
   148a4:	str	r0, [r4, #432]	; 0x1b0
   148a8:	ldr	r0, [r5, #72]	; 0x48
   148ac:	cmp	r0, #1
   148b0:	beq	14960 <sav_ctx_init+0x1b4>
   148b4:	bl	3d68 <byteswap4@plt>
   148b8:	cmp	r0, #1
   148bc:	beq	1495c <sav_ctx_init+0x1b0>
   148c0:	ldr	r0, [r5, #72]	; 0x48
   148c4:	cmp	r0, #2
   148c8:	beq	149e8 <sav_ctx_init+0x23c>
   148cc:	bl	3d68 <byteswap4@plt>
   148d0:	cmp	r0, #2
   148d4:	beq	149e8 <sav_ctx_init+0x23c>
   148d8:	ldrb	r2, [r4, #436]	; 0x1b4
   148dc:	tst	r2, #1
   148e0:	ldr	r0, [r5, #80]	; 0x50
   148e4:	bne	14974 <sav_ctx_init+0x1c8>
   148e8:	str	r0, [r4, #352]	; 0x160
   148ec:	ldr	r0, [r5, #76]	; 0x4c
   148f0:	add	r3, r4, #400	; 0x190
   148f4:	mvn	r8, #0
   148f8:	str	r0, [r4, #372]	; 0x174
   148fc:	mvn	r9, #1048576	; 0x100000
   14900:	add	r2, r4, #416	; 0x1a0
   14904:	mvn	r1, #1048576	; 0x100000
   14908:	mvn	r0, #1
   1490c:	strd	r8, [r3, #-8]
   14910:	mvn	r8, #0
   14914:	movw	r9, #65535	; 0xffff
   14918:	movt	r9, #32751	; 0x7fef
   1491c:	strd	r0, [r3]
   14920:	strd	r8, [r2, #-8]
   14924:	ldr	r2, [r5, #84]	; 0x54
   14928:	ldr	r3, [r5, #88]	; 0x58
   1492c:	mov	ip, #512	; 0x200
   14930:	mov	r1, #4
   14934:	mov	r0, ip
   14938:	str	ip, [r4, #48]	; 0x30
   1493c:	str	r2, [r4, #416]	; 0x1a0
   14940:	str	r3, [r4, #420]	; 0x1a4
   14944:	bl	3f9c <readstat_calloc@plt>
   14948:	cmp	r0, #0
   1494c:	str	r0, [r4, #44]	; 0x2c
   14950:	strne	r6, [r4, #36]	; 0x24
   14954:	bne	147f0 <sav_ctx_init+0x44>
   14958:	b	147e4 <sav_ctx_init+0x38>
   1495c:	ldrb	r2, [r4, #436]	; 0x1b4
   14960:	mov	r3, #1
   14964:	tst	r2, #1
   14968:	str	r3, [r4, #428]	; 0x1ac
   1496c:	ldr	r0, [r5, #80]	; 0x50
   14970:	beq	148e8 <sav_ctx_init+0x13c>
   14974:	bl	3d68 <byteswap4@plt>
   14978:	ldrb	r3, [r4, #436]	; 0x1b4
   1497c:	str	r0, [r4, #352]	; 0x160
   14980:	ldr	r0, [r5, #76]	; 0x4c
   14984:	tst	r3, #1
   14988:	beq	148f0 <sav_ctx_init+0x144>
   1498c:	bl	3d68 <byteswap4@plt>
   14990:	ldrb	ip, [r4, #436]	; 0x1b4
   14994:	add	r3, r4, #400	; 0x190
   14998:	mvn	r8, #0
   1499c:	mvn	r9, #1048576	; 0x100000
   149a0:	add	r2, r4, #416	; 0x1a0
   149a4:	str	r0, [r4, #372]	; 0x174
   149a8:	mvn	r1, #1048576	; 0x100000
   149ac:	mvn	r0, #1
   149b0:	strd	r8, [r3, #-8]
   149b4:	mvn	r8, #0
   149b8:	movw	r9, #65535	; 0xffff
   149bc:	movt	r9, #32751	; 0x7fef
   149c0:	strd	r0, [r3]
   149c4:	tst	ip, #1
   149c8:	strd	r8, [r2, #-8]
   149cc:	ldr	r2, [r5, #84]	; 0x54
   149d0:	ldr	r3, [r5, #88]	; 0x58
   149d4:	beq	1492c <sav_ctx_init+0x180>
   149d8:	vmov	d0, r2, r3
   149dc:	bl	44dc <byteswap_double@plt>
   149e0:	vmov	r2, r3, d0
   149e4:	b	1492c <sav_ctx_init+0x180>
   149e8:	mov	r3, #2
   149ec:	ldrb	r2, [r4, #436]	; 0x1b4
   149f0:	str	r3, [r4, #428]	; 0x1ac
   149f4:	b	148dc <sav_ctx_init+0x130>

000149f8 <sav_compressed_row_bound>:
   149f8:	lsr	r3, r0, #3
   149fc:	add	r3, r3, #8
   14a00:	bic	r3, r3, #7
   14a04:	add	r0, r3, r0
   14a08:	bx	lr

00014a0c <sav_compress_row>:
   14a0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14a10:	mov	r4, #0
   14a14:	strd	r6, [sp, #8]
   14a18:	mov	r7, r0
   14a1c:	strd	r8, [sp, #16]
   14a20:	strd	sl, [sp, #24]
   14a24:	str	lr, [sp, #32]
   14a28:	vpush	{d8-d9}
   14a2c:	sub	sp, sp, #28
   14a30:	str	r4, [r0]
   14a34:	str	r3, [sp]
   14a38:	str	r4, [r0, #4]
   14a3c:	ldr	r3, [r3, #28]
   14a40:	cmp	r3, r4
   14a44:	ble	14c44 <sav_compress_row+0x238>
   14a48:	mov	fp, r1
   14a4c:	vldr	d8, [pc, #564]	; 14c88 <sav_compress_row+0x27c>
   14a50:	mov	sl, r4
   14a54:	mov	r5, #8
   14a58:	mov	r6, r4
   14a5c:	vldr	d9, [pc, #556]	; 14c90 <sav_compress_row+0x284>
   14a60:	b	14ac4 <sav_compress_row+0xb8>
   14a64:	add	r0, fp, r6
   14a68:	add	r2, r7, r4
   14a6c:	ldr	ip, [r0, #4]
   14a70:	mvn	r9, #1048576	; 0x100000
   14a74:	mvn	r8, #0
   14a78:	add	r4, r4, #1
   14a7c:	ldr	lr, [r0]
   14a80:	str	ip, [sp, #12]
   14a84:	stmib	sp, {r2, lr}
   14a88:	ldrd	r2, [sp, #8]
   14a8c:	cmp	r3, r9
   14a90:	cmpeq	r2, r8
   14a94:	bne	14bac <sav_compress_row+0x1a0>
   14a98:	ldr	r2, [sp, #4]
   14a9c:	mvn	r3, #0
   14aa0:	strb	r3, [r2]
   14aa4:	ands	r3, r4, #7
   14aa8:	beq	14bfc <sav_compress_row+0x1f0>
   14aac:	add	r6, r6, #8
   14ab0:	ldr	r3, [sp]
   14ab4:	add	sl, sl, #1
   14ab8:	ldr	r3, [r3, #28]
   14abc:	cmp	r3, sl
   14ac0:	ble	14c48 <sav_compress_row+0x23c>
   14ac4:	mov	r1, sl
   14ac8:	ldr	r0, [sp]
   14acc:	bl	4350 <readstat_get_variable@plt>
   14ad0:	ldr	r3, [r0]
   14ad4:	mov	r1, r5
   14ad8:	cmp	r3, #0
   14adc:	bne	14a64 <sav_compress_row+0x58>
   14ae0:	ldr	r8, [r0, #1596]	; 0x63c
   14ae4:	cmp	r8, #0
   14ae8:	beq	14ab0 <sav_compress_row+0xa4>
   14aec:	ldr	r3, [pc, #420]	; 14c98 <sav_compress_row+0x28c>
   14af0:	add	r8, r6, r8
   14af4:	str	sl, [sp, #4]
   14af8:	mov	sl, r7
   14afc:	mov	r7, r8
   14b00:	add	r3, pc, r3
   14b04:	mov	r8, r3
   14b08:	b	14b28 <sav_compress_row+0x11c>
   14b0c:	mvn	r3, #1
   14b10:	add	r6, r6, #8
   14b14:	strb	r3, [r2]
   14b18:	ands	r2, r4, #7
   14b1c:	beq	14b80 <sav_compress_row+0x174>
   14b20:	cmp	r6, r7
   14b24:	beq	14ba0 <sav_compress_row+0x194>
   14b28:	add	r9, fp, r6
   14b2c:	mov	r2, #8
   14b30:	mov	r1, r8
   14b34:	mov	r0, r9
   14b38:	bl	3f78 <memcmp@plt>
   14b3c:	cmp	r0, #0
   14b40:	add	r2, sl, r4
   14b44:	mov	r1, r5
   14b48:	add	r4, r4, #1
   14b4c:	beq	14b0c <sav_compress_row+0x100>
   14b50:	mvn	r3, #2
   14b54:	add	r6, r6, #8
   14b58:	strb	r3, [r2]
   14b5c:	add	r2, sl, r5
   14b60:	ldr	r1, [r9]
   14b64:	ldr	r0, [r9, #4]
   14b68:	str	r1, [sl, r5]
   14b6c:	add	r5, r5, #8
   14b70:	mov	r1, r5
   14b74:	str	r0, [r2, #4]
   14b78:	ands	r2, r4, #7
   14b7c:	bne	14b20 <sav_compress_row+0x114>
   14b80:	add	r0, sl, r5
   14b84:	add	r1, r5, #8
   14b88:	str	r2, [sl, r5]
   14b8c:	cmp	r6, r7
   14b90:	mov	r4, r5
   14b94:	mov	r5, r1
   14b98:	str	r2, [r0, #4]
   14b9c:	bne	14b28 <sav_compress_row+0x11c>
   14ba0:	mov	r7, sl
   14ba4:	ldr	sl, [sp, #4]
   14ba8:	b	14ab0 <sav_compress_row+0xa4>
   14bac:	str	lr, [sp, #16]
   14bb0:	str	ip, [sp, #20]
   14bb4:	vldr	d7, [sp, #16]
   14bb8:	vcmpe.f64	d7, d8
   14bbc:	vmrs	APSR_nzcv, fpscr
   14bc0:	ble	14c18 <sav_compress_row+0x20c>
   14bc4:	vcmpe.f64	d7, d9
   14bc8:	vmrs	APSR_nzcv, fpscr
   14bcc:	bpl	14c18 <sav_compress_row+0x20c>
   14bd0:	vcvt.s32.f64	s13, d7
   14bd4:	vcvt.f64.s32	d5, s13
   14bd8:	vcmp.f64	d7, d5
   14bdc:	vmrs	APSR_nzcv, fpscr
   14be0:	bne	14c18 <sav_compress_row+0x20c>
   14be4:	vmov	r3, s13
   14be8:	ldr	r2, [sp, #4]
   14bec:	add	r3, r3, #100	; 0x64
   14bf0:	strb	r3, [r2]
   14bf4:	ands	r3, r4, #7
   14bf8:	bne	14aac <sav_compress_row+0xa0>
   14bfc:	add	r2, r7, r5
   14c00:	add	r1, r5, #8
   14c04:	str	r3, [r7, r5]
   14c08:	mov	r4, r5
   14c0c:	mov	r5, r1
   14c10:	str	r3, [r2, #4]
   14c14:	b	14aac <sav_compress_row+0xa0>
   14c18:	ldr	r1, [sp, #4]
   14c1c:	mvn	r2, #2
   14c20:	add	r3, r7, r5
   14c24:	strb	r2, [r1]
   14c28:	ldr	r1, [r0]
   14c2c:	ldr	r2, [r0, #4]
   14c30:	str	r1, [r7, r5]
   14c34:	add	r5, r5, #8
   14c38:	mov	r1, r5
   14c3c:	str	r2, [r3, #4]
   14c40:	b	14aa4 <sav_compress_row+0x98>
   14c44:	mov	r1, #8
   14c48:	ldr	r2, [sp]
   14c4c:	mov	r0, r1
   14c50:	ldrd	r2, [r2, #80]	; 0x50
   14c54:	add	r3, r3, #1
   14c58:	cmp	r3, r2
   14c5c:	mvneq	r3, #3
   14c60:	strbeq	r3, [r7, r4]
   14c64:	add	sp, sp, #28
   14c68:	vpop	{d8-d9}
   14c6c:	ldrd	r4, [sp]
   14c70:	ldrd	r6, [sp, #8]
   14c74:	ldrd	r8, [sp, #16]
   14c78:	ldrd	sl, [sp, #24]
   14c7c:	add	sp, sp, #32
   14c80:	pop	{pc}		; (ldr pc, [sp], #4)
   14c84:	nop	{0}
   14c88:	.word	0x00000000
   14c8c:	.word	0xc0590000
   14c90:	.word	0x00000000
   14c94:	.word	0x40630000
   14c98:	.word	0x00011a34

00014c9c <sav_decompress_row>:
   14c9c:	ldr	r3, [r0, #44]	; 0x2c
   14ca0:	strd	r4, [sp, #-20]!	; 0xffffffec
   14ca4:	mov	r4, r0
   14ca8:	ldrd	r0, [r0, #16]
   14cac:	strd	r6, [sp, #8]
   14cb0:	str	lr, [sp, #16]
   14cb4:	sub	sp, sp, #20
   14cb8:	cmp	r3, #0
   14cbc:	bne	14e60 <sav_decompress_row+0x1c4>
   14cc0:	ldr	r5, [r4, #40]	; 0x28
   14cc4:	movw	r7, #8224	; 0x2020
   14cc8:	movt	r7, #8224	; 0x2020
   14ccc:	strd	r0, [sp, #8]
   14cd0:	rsb	r5, r5, #8
   14cd4:	cmp	r5, #8
   14cd8:	beq	14d78 <sav_decompress_row+0xdc>
   14cdc:	cmp	r5, #7
   14ce0:	bgt	14cd4 <sav_decompress_row+0x38>
   14ce4:	add	r6, r5, #31
   14ce8:	add	r6, r4, r6
   14cec:	ldrb	r3, [r6, #1]!
   14cf0:	cmp	r3, #253	; 0xfd
   14cf4:	beq	14dbc <sav_decompress_row+0x120>
   14cf8:	bhi	14d30 <sav_decompress_row+0x94>
   14cfc:	cmp	r3, #0
   14d00:	beq	14e58 <sav_decompress_row+0x1bc>
   14d04:	cmp	r3, #252	; 0xfc
   14d08:	bne	14e2c <sav_decompress_row+0x190>
   14d0c:	mov	r3, #3
   14d10:	rsb	r5, r5, #8
   14d14:	str	r3, [r4, #48]	; 0x30
   14d18:	str	r5, [r4, #40]	; 0x28
   14d1c:	add	sp, sp, #20
   14d20:	ldrd	r4, [sp]
   14d24:	ldrd	r6, [sp, #8]
   14d28:	add	sp, sp, #16
   14d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d30:	cmp	r3, #254	; 0xfe
   14d34:	beq	14e1c <sav_decompress_row+0x180>
   14d38:	cmp	r3, #255	; 0xff
   14d3c:	bne	14e2c <sav_decompress_row+0x190>
   14d40:	ldr	r1, [sp, #8]
   14d44:	ldr	r2, [sp, #12]
   14d48:	ldr	r3, [r4, #8]
   14d4c:	str	r1, [r3]
   14d50:	str	r2, [r3, #4]
   14d54:	ldrd	r2, [r4, #8]
   14d58:	add	r2, r2, #8
   14d5c:	sub	r3, r3, #8
   14d60:	strd	r2, [r4, #8]
   14d64:	cmp	r3, #7
   14d68:	add	r5, r5, #1
   14d6c:	bls	14e0c <sav_decompress_row+0x170>
   14d70:	cmp	r5, #8
   14d74:	bne	14cec <sav_decompress_row+0x50>
   14d78:	ldr	r3, [r4, #4]
   14d7c:	cmp	r3, #7
   14d80:	movls	r3, #0
   14d84:	movls	r5, r3
   14d88:	strls	r3, [r4, #48]	; 0x30
   14d8c:	bls	14d18 <sav_decompress_row+0x7c>
   14d90:	ldr	r1, [r4]
   14d94:	mov	r2, r4
   14d98:	sub	r3, r3, #8
   14d9c:	mov	r5, #0
   14da0:	ldr	ip, [r1]
   14da4:	add	r0, r1, #8
   14da8:	ldr	r1, [r1, #4]
   14dac:	str	ip, [r2, #32]!
   14db0:	str	r1, [r2, #4]
   14db4:	stm	r4, {r0, r3}
   14db8:	b	14ce4 <sav_decompress_row+0x48>
   14dbc:	ldr	r3, [r4, #4]
   14dc0:	cmp	r3, #7
   14dc4:	bls	14e70 <sav_decompress_row+0x1d4>
   14dc8:	ldr	r2, [r4]
   14dcc:	add	r5, r5, #1
   14dd0:	ldr	r3, [r4, #8]
   14dd4:	ldr	r1, [r2]
   14dd8:	ldr	r2, [r2, #4]
   14ddc:	str	r1, [r3]
   14de0:	str	r2, [r3, #4]
   14de4:	ldrd	r0, [r4]
   14de8:	ldrd	r2, [r4, #8]
   14dec:	add	r0, r0, #8
   14df0:	sub	r1, r1, #8
   14df4:	sub	r3, r3, #8
   14df8:	add	r2, r2, #8
   14dfc:	strd	r0, [r4]
   14e00:	cmp	r3, #7
   14e04:	strd	r2, [r4, #8]
   14e08:	bhi	14d70 <sav_decompress_row+0xd4>
   14e0c:	mov	r3, #2
   14e10:	rsb	r5, r5, #8
   14e14:	str	r3, [r4, #48]	; 0x30
   14e18:	b	14d18 <sav_decompress_row+0x7c>
   14e1c:	ldr	r3, [r4, #8]
   14e20:	str	r7, [r3]
   14e24:	str	r7, [r3, #4]
   14e28:	b	14d54 <sav_decompress_row+0xb8>
   14e2c:	vmov	s15, r3
   14e30:	ldr	r3, [r4, #44]	; 0x2c
   14e34:	cmp	r3, #0
   14e38:	vcvt.f64.s32	d0, s15
   14e3c:	vldr	d7, [r4, #24]
   14e40:	vsub.f64	d0, d0, d7
   14e44:	vstr	d0, [sp]
   14e48:	bne	14e68 <sav_decompress_row+0x1cc>
   14e4c:	vstr	d0, [sp]
   14e50:	ldm	sp, {r1, r2}
   14e54:	b	14d48 <sav_decompress_row+0xac>
   14e58:	ldr	r3, [r4, #12]
   14e5c:	b	14d64 <sav_decompress_row+0xc8>
   14e60:	bl	3d50 <byteswap8@plt>
   14e64:	b	14cc0 <sav_decompress_row+0x24>
   14e68:	bl	44dc <byteswap_double@plt>
   14e6c:	b	14e4c <sav_decompress_row+0x1b0>
   14e70:	mov	r3, #0
   14e74:	rsb	r5, r5, #8
   14e78:	str	r3, [r4, #48]	; 0x30
   14e7c:	b	14d18 <sav_decompress_row+0x7c>

00014e80 <compare_varlookups>:
   14e80:	b	3dd4 <strcmp@plt>

00014e84 <count_vars.isra.0>:
   14e84:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14e88:	strd	r6, [sp, #8]
   14e8c:	subs	r7, r1, #0
   14e90:	str	r8, [sp, #16]
   14e94:	str	lr, [sp, #20]
   14e98:	ble	14ef4 <count_vars.isra.0+0x70>
   14e9c:	mov	r6, #0
   14ea0:	add	r7, r0, r7, lsl #2
   14ea4:	mov	r5, r0
   14ea8:	mov	r3, r6
   14eac:	cmp	r3, #0
   14eb0:	add	r1, r3, #187	; 0xbb
   14eb4:	ldr	r4, [r5], #4
   14eb8:	beq	14ecc <count_vars.isra.0+0x48>
   14ebc:	add	r0, r4, #187	; 0xbb
   14ec0:	bl	3dd4 <strcmp@plt>
   14ec4:	cmp	r0, #0
   14ec8:	beq	14ed0 <count_vars.isra.0+0x4c>
   14ecc:	add	r6, r6, #1
   14ed0:	cmp	r5, r7
   14ed4:	mov	r3, r4
   14ed8:	bne	14eac <count_vars.isra.0+0x28>
   14edc:	mov	r0, r6
   14ee0:	ldrd	r4, [sp]
   14ee4:	ldrd	r6, [sp, #8]
   14ee8:	ldr	r8, [sp, #16]
   14eec:	add	sp, sp, #20
   14ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ef4:	mov	r6, #0
   14ef8:	b	14edc <count_vars.isra.0+0x58>

00014efc <build_lookup_table.isra.1>:
   14efc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14f00:	strd	r6, [sp, #8]
   14f04:	strd	r8, [sp, #16]
   14f08:	mov	r9, r2
   14f0c:	strd	sl, [sp, #24]
   14f10:	mov	fp, r1
   14f14:	str	lr, [sp, #32]
   14f18:	sub	sp, sp, #12
   14f1c:	str	r0, [sp, #4]
   14f20:	add	r0, r0, r0, lsl #2
   14f24:	lsl	r0, r0, #3
   14f28:	bl	4200 <readstat_malloc@plt>
   14f2c:	ldr	sl, [r9]
   14f30:	mov	r8, r0
   14f34:	cmp	sl, #0
   14f38:	ble	14fac <build_lookup_table.isra.1+0xb0>
   14f3c:	mov	r7, #0
   14f40:	mov	r4, r7
   14f44:	mov	r5, r7
   14f48:	ldr	r2, [fp]
   14f4c:	add	r1, r4, #187	; 0xbb
   14f50:	cmp	r4, #0
   14f54:	ldr	r4, [r2, r5, lsl #2]
   14f58:	add	r5, r5, #1
   14f5c:	add	r6, r4, #187	; 0xbb
   14f60:	beq	14f74 <build_lookup_table.isra.1+0x78>
   14f64:	mov	r0, r6
   14f68:	bl	3dd4 <strcmp@plt>
   14f6c:	cmp	r0, #0
   14f70:	beq	14fa4 <build_lookup_table.isra.1+0xa8>
   14f74:	add	r2, r7, r7, lsl #2
   14f78:	ldr	r0, [r6]
   14f7c:	add	r7, r7, #1
   14f80:	ldr	r1, [r6, #4]
   14f84:	add	r3, r8, r2, lsl #3
   14f88:	str	r0, [r8, r2, lsl #3]
   14f8c:	str	r1, [r3, #4]
   14f90:	ldrb	r2, [r6, #8]
   14f94:	strb	r2, [r3, #8]
   14f98:	ldr	r2, [r4, #8]
   14f9c:	str	r2, [r3, #36]	; 0x24
   14fa0:	ldr	sl, [r9]
   14fa4:	cmp	r5, sl
   14fa8:	blt	14f48 <build_lookup_table.isra.1+0x4c>
   14fac:	ldr	r3, [pc, #48]	; 14fe4 <build_lookup_table.isra.1+0xe8>
   14fb0:	mov	r0, r8
   14fb4:	mov	r2, #40	; 0x28
   14fb8:	ldr	r1, [sp, #4]
   14fbc:	add	r3, pc, r3
   14fc0:	bl	4410 <qsort@plt>
   14fc4:	mov	r0, r8
   14fc8:	add	sp, sp, #12
   14fcc:	ldrd	r4, [sp]
   14fd0:	ldrd	r6, [sp, #8]
   14fd4:	ldrd	r8, [sp, #16]
   14fd8:	ldrd	sl, [sp, #24]
   14fdc:	add	sp, sp, #32
   14fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fe4:	.word	0xfffffebc

00014fe8 <sav_parse_long_variable_names_record>:
   14fe8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14fec:	mov	r4, r2
   14ff0:	mov	r5, r0
   14ff4:	strd	r6, [sp, #8]
   14ff8:	add	r6, r0, r1
   14ffc:	strd	r8, [sp, #16]
   15000:	strd	sl, [sp, #24]
   15004:	str	lr, [sp, #32]
   15008:	sub	sp, sp, #8320	; 0x2080
   1500c:	sub	sp, sp, #36	; 0x24
   15010:	str	r6, [sp, #36]	; 0x24
   15014:	strd	r0, [sp, #72]	; 0x48
   15018:	ldr	r0, [r2, #44]	; 0x2c
   1501c:	str	r2, [sp, #52]	; 0x34
   15020:	ldr	r1, [r2, #340]	; 0x154
   15024:	bl	14e84 <count_vars.isra.0>
   15028:	add	r2, r4, #340	; 0x154
   1502c:	add	r1, r4, #44	; 0x2c
   15030:	str	r0, [sp, #60]	; 0x3c
   15034:	bl	14efc <build_lookup_table.isra.1>
   15038:	cmp	r5, r6
   1503c:	mov	fp, r0
   15040:	beq	155b4 <sav_parse_long_variable_names_record+0x5cc>
   15044:	ldr	r3, [pc, #1412]	; 155d0 <sav_parse_long_variable_names_record+0x5e8>
   15048:	mov	r4, #0
   1504c:	mov	sl, r5
   15050:	mov	ip, r4
   15054:	mov	r5, r4
   15058:	ldr	r2, [pc, #1396]	; 155d4 <sav_parse_long_variable_names_record+0x5ec>
   1505c:	mov	r9, #1
   15060:	str	r4, [sp, #24]
   15064:	str	r4, [sp, #28]
   15068:	add	r3, pc, r3
   1506c:	add	r2, pc, r2
   15070:	str	r3, [sp, #40]	; 0x28
   15074:	add	r3, r3, #1200	; 0x4b0
   15078:	add	r3, r3, #8
   1507c:	str	r2, [sp, #32]
   15080:	add	r2, sp, #80	; 0x50
   15084:	str	r3, [sp, #44]	; 0x2c
   15088:	str	r2, [sp, #64]	; 0x40
   1508c:	b	150c8 <sav_parse_long_variable_names_record+0xe0>
   15090:	cmp	r9, #0
   15094:	beq	15394 <sav_parse_long_variable_names_record+0x3ac>
   15098:	ldr	r3, [sp, #36]	; 0x24
   1509c:	add	sl, sl, #1
   150a0:	cmp	r3, sl
   150a4:	beq	15428 <sav_parse_long_variable_names_record+0x440>
   150a8:	ldr	r1, [sp, #40]	; 0x28
   150ac:	lsl	r3, r9, #1
   150b0:	add	r2, r1, #1360	; 0x550
   150b4:	add	r1, r1, r9
   150b8:	ldrb	r4, [r1, #1512]	; 0x5e8
   150bc:	ldr	r1, [sp, #44]	; 0x2c
   150c0:	ldrsh	r5, [r2, r3]
   150c4:	ldrsh	ip, [r1, r3]
   150c8:	cmp	r4, #0
   150cc:	ldr	r3, [sp, #32]
   150d0:	add	ip, r3, ip
   150d4:	mov	r3, r5
   150d8:	bne	152dc <sav_parse_long_variable_names_record+0x2f4>
   150dc:	ldr	r2, [pc, #1268]	; 155d8 <sav_parse_long_variable_names_record+0x5f0>
   150e0:	add	r2, pc, r2
   150e4:	add	r9, r2, r9
   150e8:	ldrb	r5, [r9, #496]	; 0x1f0
   150ec:	cmp	r5, #0
   150f0:	bne	15284 <sav_parse_long_variable_names_record+0x29c>
   150f4:	ldr	r2, [pc, #1248]	; 155dc <sav_parse_long_variable_names_record+0x5f4>
   150f8:	add	r2, pc, r2
   150fc:	add	r3, r2, r3
   15100:	ldrb	r3, [r3, #572]	; 0x23c
   15104:	add	r3, r2, r3
   15108:	ldrb	r1, [r3, #1044]	; 0x414
   1510c:	ldrb	r9, [r3, #968]	; 0x3c8
   15110:	cmp	r1, #0
   15114:	beq	15090 <sav_parse_long_variable_names_record+0xa8>
   15118:	ldr	r3, [pc, #1216]	; 155e0 <sav_parse_long_variable_names_record+0x5f8>
   1511c:	add	r8, r2, #1120	; 0x460
   15120:	add	r3, pc, r3
   15124:	str	r3, [sp, #68]	; 0x44
   15128:	ldrb	r3, [r8, r1]
   1512c:	add	r8, r8, r1
   15130:	add	r7, r8, #1
   15134:	add	r3, r3, #1
   15138:	add	r3, r8, r3
   1513c:	str	r3, [sp, #20]
   15140:	ldr	r3, [sp, #20]
   15144:	cmp	r7, r3
   15148:	beq	15090 <sav_parse_long_variable_names_record+0xa8>
   1514c:	ldrb	r3, [r7], #1
   15150:	cmp	r3, #6
   15154:	addls	pc, pc, r3, lsl #2
   15158:	b	15140 <sav_parse_long_variable_names_record+0x158>
   1515c:	b	151e0 <sav_parse_long_variable_names_record+0x1f8>
   15160:	b	151b8 <sav_parse_long_variable_names_record+0x1d0>
   15164:	b	15190 <sav_parse_long_variable_names_record+0x1a8>
   15168:	b	15188 <sav_parse_long_variable_names_record+0x1a0>
   1516c:	b	15178 <sav_parse_long_variable_names_record+0x190>
   15170:	b	15188 <sav_parse_long_variable_names_record+0x1a0>
   15174:	b	15178 <sav_parse_long_variable_names_record+0x190>
   15178:	ldr	r3, [sp, #24]
   1517c:	sub	r3, sl, r3
   15180:	str	r3, [sp, #28]
   15184:	b	15140 <sav_parse_long_variable_names_record+0x158>
   15188:	str	sl, [sp, #24]
   1518c:	b	15140 <sav_parse_long_variable_names_record+0x158>
   15190:	add	r0, sp, #92	; 0x5c
   15194:	ldr	r1, [sp, #24]
   15198:	ldr	r4, [sp, #28]
   1519c:	mov	r2, r4
   151a0:	bl	3ef4 <memcpy@plt>
   151a4:	add	r3, sp, #160	; 0xa0
   151a8:	mov	r2, #0
   151ac:	add	r3, r3, r4
   151b0:	strb	r2, [r3, #-68]	; 0xffffffbc
   151b4:	b	15140 <sav_parse_long_variable_names_record+0x158>
   151b8:	add	r0, sp, #80	; 0x50
   151bc:	ldr	r1, [sp, #24]
   151c0:	ldr	r4, [sp, #28]
   151c4:	mov	r2, r4
   151c8:	bl	3ef4 <memcpy@plt>
   151cc:	add	r3, sp, #160	; 0xa0
   151d0:	mov	r2, #0
   151d4:	add	r3, r3, r4
   151d8:	strb	r2, [r3, #-80]	; 0xffffffb0
   151dc:	b	15140 <sav_parse_long_variable_names_record+0x158>
   151e0:	ldr	r8, [sp, #60]	; 0x3c
   151e4:	mov	r6, #0
   151e8:	add	r3, sp, #96	; 0x60
   151ec:	str	r7, [sp, #48]	; 0x30
   151f0:	str	r3, [sp, #56]	; 0x38
   151f4:	mov	r7, r8
   151f8:	mov	r8, r6
   151fc:	ldr	r6, [sp, #64]	; 0x40
   15200:	cmp	r7, r8
   15204:	bls	1523c <sav_parse_long_variable_names_record+0x254>
   15208:	add	r4, r7, r8
   1520c:	mov	r0, r6
   15210:	lsr	r4, r4, #1
   15214:	add	r5, r4, r4, lsl #2
   15218:	add	r5, fp, r5, lsl #3
   1521c:	mov	r1, r5
   15220:	bl	3dd4 <strcmp@plt>
   15224:	cmp	r0, #0
   15228:	blt	1527c <sav_parse_long_variable_names_record+0x294>
   1522c:	beq	15324 <sav_parse_long_variable_names_record+0x33c>
   15230:	add	r8, r4, #1
   15234:	cmp	r7, r8
   15238:	bhi	15208 <sav_parse_long_variable_names_record+0x220>
   1523c:	ldr	r7, [sp, #48]	; 0x30
   15240:	ldr	r5, [sp, #52]	; 0x34
   15244:	ldr	r3, [r5, #24]
   15248:	cmp	r3, #0
   1524c:	beq	15140 <sav_parse_long_variable_names_record+0x158>
   15250:	add	r4, sp, #160	; 0xa0
   15254:	add	r3, sp, #80	; 0x50
   15258:	ldr	r2, [sp, #68]	; 0x44
   1525c:	mov	r0, r4
   15260:	mov	r1, #8192	; 0x2000
   15264:	bl	4254 <snprintf@plt>
   15268:	mov	r0, r4
   1526c:	ldr	r3, [r5, #24]
   15270:	ldr	r1, [r5, #40]	; 0x28
   15274:	blx	r3
   15278:	b	15140 <sav_parse_long_variable_names_record+0x158>
   1527c:	mov	r7, r4
   15280:	b	15200 <sav_parse_long_variable_names_record+0x218>
   15284:	add	r0, ip, r5, lsl #1
   15288:	sub	r0, r0, #2
   1528c:	cmp	ip, r0
   15290:	bhi	152d4 <sav_parse_long_variable_names_record+0x2ec>
   15294:	ldrb	r4, [sl]
   15298:	mov	r1, ip
   1529c:	sub	r2, r0, r1
   152a0:	asr	r2, r2, #1
   152a4:	bic	r2, r2, #1
   152a8:	ldrb	lr, [r1, r2]
   152ac:	add	r2, r1, r2
   152b0:	cmp	lr, r4
   152b4:	subhi	r0, r2, #2
   152b8:	bhi	152cc <sav_parse_long_variable_names_record+0x2e4>
   152bc:	ldrb	lr, [r2, #1]
   152c0:	add	r1, r2, #2
   152c4:	cmp	lr, r4
   152c8:	bcs	1536c <sav_parse_long_variable_names_record+0x384>
   152cc:	cmp	r1, r0
   152d0:	bls	1529c <sav_parse_long_variable_names_record+0x2b4>
   152d4:	add	r3, r3, r5
   152d8:	b	150f4 <sav_parse_long_variable_names_record+0x10c>
   152dc:	sub	r1, r4, #1
   152e0:	adds	r1, ip, r1
   152e4:	bcs	15318 <sav_parse_long_variable_names_record+0x330>
   152e8:	ldrb	lr, [sl]
   152ec:	mov	r2, ip
   152f0:	sub	r3, r1, r2
   152f4:	ldrb	r0, [r2, r3, asr #1]
   152f8:	add	r3, r2, r3, asr #1
   152fc:	cmp	lr, r0
   15300:	subcc	r1, r3, #1
   15304:	bcc	15310 <sav_parse_long_variable_names_record+0x328>
   15308:	bls	15378 <sav_parse_long_variable_names_record+0x390>
   1530c:	add	r2, r3, #1
   15310:	cmp	r2, r1
   15314:	bls	152f0 <sav_parse_long_variable_names_record+0x308>
   15318:	add	ip, ip, r4
   1531c:	add	r3, r5, r4
   15320:	b	150dc <sav_parse_long_variable_names_record+0xf4>
   15324:	cmp	r5, #0
   15328:	ldr	r7, [sp, #48]	; 0x30
   1532c:	str	r0, [sp, #48]	; 0x30
   15330:	beq	15240 <sav_parse_long_variable_names_record+0x258>
   15334:	ldr	r3, [sp, #56]	; 0x38
   15338:	ldr	ip, [r5, #36]	; 0x24
   1533c:	ldr	r5, [sp, #28]
   15340:	sub	r1, r3, #4
   15344:	ldr	r3, [sp, #52]	; 0x34
   15348:	mov	r2, r5
   1534c:	ldr	r0, [r3, #44]	; 0x2c
   15350:	ldr	r4, [r0, ip, lsl #2]
   15354:	add	r0, r4, #196	; 0xc4
   15358:	add	r4, r4, r5
   1535c:	bl	3ef4 <memcpy@plt>
   15360:	ldr	r3, [sp, #48]	; 0x30
   15364:	strb	r3, [r4, #196]	; 0xc4
   15368:	b	15140 <sav_parse_long_variable_names_record+0x158>
   1536c:	sub	r2, r2, ip
   15370:	add	r3, r3, r2, asr #1
   15374:	b	150f4 <sav_parse_long_variable_names_record+0x10c>
   15378:	sub	r3, r3, ip
   1537c:	add	r3, r5, r3
   15380:	b	150f4 <sav_parse_long_variable_names_record+0x10c>
   15384:	ldr	r3, [sp, #32]
   15388:	cmp	r3, #0
   1538c:	ldreq	r4, [sp, #32]
   15390:	beq	153f4 <sav_parse_long_variable_names_record+0x40c>
   15394:	ldr	r6, [sp, #52]	; 0x34
   15398:	ldr	r3, [r6, #24]
   1539c:	cmp	r3, #0
   153a0:	moveq	r4, #5
   153a4:	beq	153f4 <sav_parse_long_variable_names_record+0x40c>
   153a8:	ldrb	r2, [sl]
   153ac:	add	r5, sp, #160	; 0xa0
   153b0:	mov	r4, #5
   153b4:	mov	r0, r5
   153b8:	ldr	r3, [sp, #72]	; 0x48
   153bc:	ldr	ip, [sp, #76]	; 0x4c
   153c0:	str	r2, [sp, #12]
   153c4:	sub	r1, sl, r3
   153c8:	ldr	r2, [pc, #532]	; 155e4 <sav_parse_long_variable_names_record+0x5fc>
   153cc:	str	r3, [sp]
   153d0:	mov	r3, ip
   153d4:	stmib	sp, {r1, ip}
   153d8:	mov	r1, #8192	; 0x2000
   153dc:	add	r2, pc, r2
   153e0:	bl	4254 <snprintf@plt>
   153e4:	mov	r0, r5
   153e8:	ldr	r3, [r6, #24]
   153ec:	ldr	r1, [r6, #40]	; 0x28
   153f0:	blx	r3
   153f4:	cmp	fp, #0
   153f8:	beq	15404 <sav_parse_long_variable_names_record+0x41c>
   153fc:	mov	r0, fp
   15400:	bl	3e94 <free@plt>
   15404:	mov	r0, r4
   15408:	add	sp, sp, #8320	; 0x2080
   1540c:	add	sp, sp, #36	; 0x24
   15410:	ldrd	r4, [sp]
   15414:	ldrd	r6, [sp, #8]
   15418:	ldrd	r8, [sp, #16]
   1541c:	ldrd	sl, [sp, #24]
   15420:	add	sp, sp, #32
   15424:	pop	{pc}		; (ldr pc, [sp], #4)
   15428:	ldr	r3, [pc, #440]	; 155e8 <sav_parse_long_variable_names_record+0x600>
   1542c:	cmp	r9, #10
   15430:	movgt	r2, #0
   15434:	movle	r2, #1
   15438:	str	r2, [sp, #32]
   1543c:	add	r3, pc, r3
   15440:	add	r9, r3, r9
   15444:	ldrb	r2, [r9, #1132]	; 0x46c
   15448:	add	r3, r3, r2
   1544c:	add	r2, r2, #1
   15450:	ldrb	r3, [r3, #1120]	; 0x460
   15454:	add	r1, sp, #80	; 0x50
   15458:	ldr	r7, [pc, #396]	; 155ec <sav_parse_long_variable_names_record+0x604>
   1545c:	str	r1, [sp, #40]	; 0x28
   15460:	ldr	r1, [pc, #392]	; 155f0 <sav_parse_long_variable_names_record+0x608>
   15464:	add	r7, pc, r7
   15468:	add	r7, r7, #1120	; 0x460
   1546c:	add	r7, r7, r2
   15470:	add	r1, pc, r1
   15474:	add	r3, r7, r3
   15478:	str	r3, [sp, #20]
   1547c:	str	r1, [sp, #48]	; 0x30
   15480:	ldr	r3, [sp, #20]
   15484:	cmp	r7, r3
   15488:	beq	15384 <sav_parse_long_variable_names_record+0x39c>
   1548c:	ldrb	r5, [r7], #1
   15490:	cmp	r5, #2
   15494:	beq	15548 <sav_parse_long_variable_names_record+0x560>
   15498:	cmp	r5, #6
   1549c:	beq	15538 <sav_parse_long_variable_names_record+0x550>
   154a0:	cmp	r5, #0
   154a4:	bne	15480 <sav_parse_long_variable_names_record+0x498>
   154a8:	add	r3, sp, #96	; 0x60
   154ac:	ldr	r8, [sp, #40]	; 0x28
   154b0:	str	r3, [sp, #36]	; 0x24
   154b4:	ldr	r9, [sp, #60]	; 0x3c
   154b8:	b	154c4 <sav_parse_long_variable_names_record+0x4dc>
   154bc:	beq	15570 <sav_parse_long_variable_names_record+0x588>
   154c0:	add	r5, r4, #1
   154c4:	cmp	r9, r5
   154c8:	bls	154fc <sav_parse_long_variable_names_record+0x514>
   154cc:	add	r4, r5, r9
   154d0:	mov	r0, r8
   154d4:	lsr	r4, r4, #1
   154d8:	add	r6, r4, r4, lsl #2
   154dc:	add	r6, fp, r6, lsl #3
   154e0:	mov	r1, r6
   154e4:	bl	3dd4 <strcmp@plt>
   154e8:	cmp	r0, #0
   154ec:	bge	154bc <sav_parse_long_variable_names_record+0x4d4>
   154f0:	cmp	r5, r4
   154f4:	mov	r9, r4
   154f8:	bcc	154cc <sav_parse_long_variable_names_record+0x4e4>
   154fc:	ldr	r5, [sp, #52]	; 0x34
   15500:	ldr	r3, [r5, #24]
   15504:	cmp	r3, #0
   15508:	beq	15480 <sav_parse_long_variable_names_record+0x498>
   1550c:	add	r4, sp, #160	; 0xa0
   15510:	add	r3, sp, #80	; 0x50
   15514:	ldr	r2, [sp, #48]	; 0x30
   15518:	mov	r0, r4
   1551c:	mov	r1, #8192	; 0x2000
   15520:	bl	4254 <snprintf@plt>
   15524:	mov	r0, r4
   15528:	ldr	r3, [r5, #24]
   1552c:	ldr	r1, [r5, #40]	; 0x28
   15530:	blx	r3
   15534:	b	15480 <sav_parse_long_variable_names_record+0x498>
   15538:	ldr	r3, [sp, #24]
   1553c:	sub	r3, sl, r3
   15540:	str	r3, [sp, #28]
   15544:	b	15480 <sav_parse_long_variable_names_record+0x498>
   15548:	add	r0, sp, #92	; 0x5c
   1554c:	ldr	r1, [sp, #24]
   15550:	ldr	r4, [sp, #28]
   15554:	mov	r2, r4
   15558:	bl	3ef4 <memcpy@plt>
   1555c:	add	r3, sp, #160	; 0xa0
   15560:	mov	r2, #0
   15564:	add	r3, r3, r4
   15568:	strb	r2, [r3, #-68]	; 0xffffffbc
   1556c:	b	15480 <sav_parse_long_variable_names_record+0x498>
   15570:	cmp	r6, #0
   15574:	str	r0, [sp, #44]	; 0x2c
   15578:	beq	154fc <sav_parse_long_variable_names_record+0x514>
   1557c:	ldr	ip, [r6, #36]	; 0x24
   15580:	ldr	r3, [sp, #36]	; 0x24
   15584:	ldr	r5, [sp, #28]
   15588:	sub	r1, r3, #4
   1558c:	ldr	r3, [sp, #52]	; 0x34
   15590:	mov	r2, r5
   15594:	ldr	r0, [r3, #44]	; 0x2c
   15598:	ldr	r4, [r0, ip, lsl #2]
   1559c:	add	r0, r4, #196	; 0xc4
   155a0:	add	r4, r4, r5
   155a4:	bl	3ef4 <memcpy@plt>
   155a8:	ldr	r3, [sp, #44]	; 0x2c
   155ac:	strb	r3, [r4, #196]	; 0xc4
   155b0:	b	15480 <sav_parse_long_variable_names_record+0x498>
   155b4:	mov	r3, #0
   155b8:	mov	r2, #1
   155bc:	ldr	sl, [sp, #72]	; 0x48
   155c0:	str	r3, [sp, #24]
   155c4:	str	r3, [sp, #28]
   155c8:	str	r2, [sp, #32]
   155cc:	b	15454 <sav_parse_long_variable_names_record+0x46c>
   155d0:	.word	0x000114d8
   155d4:	.word	0x000114d4
   155d8:	.word	0x00011460
   155dc:	.word	0x00011448
   155e0:	.word	0x00011b90
   155e4:	.word	0x000118e8
   155e8:	.word	0x00011104
   155ec:	.word	0x000110dc
   155f0:	.word	0x00011840

000155f4 <sav_parse_very_long_string_record>:
   155f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   155f8:	mov	r5, r0
   155fc:	mov	r4, r2
   15600:	strd	r6, [sp, #8]
   15604:	add	r7, r0, r1
   15608:	add	r6, r1, #1024	; 0x400
   1560c:	strd	r8, [sp, #16]
   15610:	strd	sl, [sp, #24]
   15614:	str	lr, [sp, #32]
   15618:	sub	sp, sp, #132	; 0x84
   1561c:	str	r7, [sp, #40]	; 0x28
   15620:	str	r0, [sp, #76]	; 0x4c
   15624:	str	r1, [sp, #84]	; 0x54
   15628:	ldr	r0, [r2, #44]	; 0x2c
   1562c:	str	r2, [sp, #60]	; 0x3c
   15630:	ldr	r1, [r2, #340]	; 0x154
   15634:	str	r6, [sp, #80]	; 0x50
   15638:	bl	14e84 <count_vars.isra.0>
   1563c:	mov	r8, r0
   15640:	str	r0, [sp, #52]	; 0x34
   15644:	mov	r0, r6
   15648:	bl	4200 <readstat_malloc@plt>
   1564c:	add	r2, r4, #340	; 0x154
   15650:	add	r1, r4, #44	; 0x2c
   15654:	str	r0, [sp, #72]	; 0x48
   15658:	mov	r0, r8
   1565c:	bl	14efc <build_lookup_table.isra.1>
   15660:	cmp	r5, r7
   15664:	mov	r9, r0
   15668:	beq	159e4 <sav_parse_very_long_string_record+0x3f0>
   1566c:	ldr	r3, [pc, #984]	; 15a4c <sav_parse_very_long_string_record+0x458>
   15670:	movw	r1, #52429	; 0xcccd
   15674:	movt	r1, #52428	; 0xcccc
   15678:	mov	r2, r5
   1567c:	mov	r4, #0
   15680:	mov	r5, r4
   15684:	mov	ip, r4
   15688:	str	r1, [sp, #64]	; 0x40
   1568c:	ldr	r1, [pc, #956]	; 15a50 <sav_parse_very_long_string_record+0x45c>
   15690:	str	r2, [sp, #20]
   15694:	mov	r2, #1
   15698:	add	r3, pc, r3
   1569c:	str	r2, [sp, #24]
   156a0:	add	r2, r3, #1584	; 0x630
   156a4:	add	r2, r2, #4
   156a8:	str	r4, [sp, #28]
   156ac:	add	r1, pc, r1
   156b0:	str	r3, [sp, #48]	; 0x30
   156b4:	add	r3, r3, #1840	; 0x730
   156b8:	str	r4, [sp, #32]
   156bc:	str	r4, [sp, #36]	; 0x24
   156c0:	str	r2, [sp, #44]	; 0x2c
   156c4:	str	r1, [sp, #56]	; 0x38
   156c8:	str	r3, [sp, #68]	; 0x44
   156cc:	b	1570c <sav_parse_very_long_string_record+0x118>
   156d0:	ldr	r2, [sp, #24]
   156d4:	cmp	r2, #0
   156d8:	beq	159ec <sav_parse_very_long_string_record+0x3f8>
   156dc:	ldr	r3, [sp, #20]
   156e0:	ldr	r1, [sp, #40]	; 0x28
   156e4:	add	r3, r3, #1
   156e8:	cmp	r1, r3
   156ec:	str	r3, [sp, #20]
   156f0:	beq	1597c <sav_parse_very_long_string_record+0x388>
   156f4:	ldr	r3, [pc, #856]	; 15a54 <sav_parse_very_long_string_record+0x460>
   156f8:	add	r3, pc, r3
   156fc:	add	r3, r3, r2
   15700:	ldrb	ip, [r3, #1856]	; 0x740
   15704:	ldrb	r5, [r3, #1872]	; 0x750
   15708:	ldrb	r4, [r3, #1888]	; 0x760
   1570c:	cmp	r4, #0
   15710:	mov	r1, r5
   15714:	ldr	r3, [sp, #44]	; 0x2c
   15718:	add	ip, r3, ip
   1571c:	bne	1590c <sav_parse_very_long_string_record+0x318>
   15720:	ldr	r2, [sp, #24]
   15724:	ldr	r3, [sp, #56]	; 0x38
   15728:	add	fp, r3, r2
   1572c:	ldrb	r5, [fp, #1708]	; 0x6ac
   15730:	cmp	r5, #0
   15734:	bne	158b0 <sav_parse_very_long_string_record+0x2bc>
   15738:	ldr	r2, [sp, #48]	; 0x30
   1573c:	add	r1, r2, r1
   15740:	ldrb	r3, [r1, #1724]	; 0x6bc
   15744:	add	r3, r2, r3
   15748:	ldrb	r2, [r3, #1824]	; 0x720
   1574c:	ldrb	r3, [r3, #1808]	; 0x710
   15750:	cmp	r2, #0
   15754:	str	r3, [sp, #24]
   15758:	beq	156d0 <sav_parse_very_long_string_record+0xdc>
   1575c:	ldr	r3, [sp, #68]	; 0x44
   15760:	add	r7, sp, #92	; 0x5c
   15764:	ldrb	r8, [r3, r2]
   15768:	add	r2, r3, r2
   1576c:	add	r6, r2, #1
   15770:	add	r8, r8, #1
   15774:	add	r8, r2, r8
   15778:	cmp	r6, r8
   1577c:	beq	156d0 <sav_parse_very_long_string_record+0xdc>
   15780:	ldrb	r3, [r6], #1
   15784:	cmp	r3, #5
   15788:	addls	pc, pc, r3, lsl #2
   1578c:	b	15778 <sav_parse_very_long_string_record+0x184>
   15790:	b	15830 <sav_parse_very_long_string_record+0x23c>
   15794:	b	15808 <sav_parse_very_long_string_record+0x214>
   15798:	b	157c8 <sav_parse_very_long_string_record+0x1d4>
   1579c:	b	15878 <sav_parse_very_long_string_record+0x284>
   157a0:	b	157b4 <sav_parse_very_long_string_record+0x1c0>
   157a4:	b	157a8 <sav_parse_very_long_string_record+0x1b4>
   157a8:	mov	r3, #0
   157ac:	str	r3, [sp, #32]
   157b0:	b	15778 <sav_parse_very_long_string_record+0x184>
   157b4:	ldr	r3, [sp, #20]
   157b8:	ldr	r2, [sp, #28]
   157bc:	sub	r3, r3, r2
   157c0:	str	r3, [sp, #36]	; 0x24
   157c4:	b	15778 <sav_parse_very_long_string_record+0x184>
   157c8:	ldr	r3, [sp, #20]
   157cc:	ldrb	r3, [r3]
   157d0:	cmp	r3, #0
   157d4:	beq	15778 <sav_parse_very_long_string_record+0x184>
   157d8:	ldr	r1, [sp, #64]	; 0x40
   157dc:	sub	r3, r3, #48	; 0x30
   157e0:	uxtb	r3, r3
   157e4:	mvn	r2, r3
   157e8:	umull	r1, r2, r1, r2
   157ec:	ldr	r1, [sp, #32]
   157f0:	cmp	r1, r2, lsr #3
   157f4:	bhi	15970 <sav_parse_very_long_string_record+0x37c>
   157f8:	add	r2, r1, r1, lsl #2
   157fc:	add	r3, r3, r2, lsl #1
   15800:	str	r3, [sp, #32]
   15804:	b	15778 <sav_parse_very_long_string_record+0x184>
   15808:	mov	r0, r7
   1580c:	ldr	r1, [sp, #28]
   15810:	ldr	r4, [sp, #36]	; 0x24
   15814:	mov	r2, r4
   15818:	bl	3ef4 <memcpy@plt>
   1581c:	add	r2, sp, #128	; 0x80
   15820:	add	r3, r2, r4
   15824:	mov	r2, #0
   15828:	strb	r2, [r3, #-36]	; 0xffffffdc
   1582c:	b	15778 <sav_parse_very_long_string_record+0x184>
   15830:	ldr	fp, [sp, #52]	; 0x34
   15834:	mov	sl, #0
   15838:	cmp	sl, fp
   1583c:	bcs	15778 <sav_parse_very_long_string_record+0x184>
   15840:	add	r4, sl, fp
   15844:	mov	r0, r7
   15848:	lsr	r4, r4, #1
   1584c:	add	r5, r4, r4, lsl #2
   15850:	add	r5, r9, r5, lsl #3
   15854:	mov	r1, r5
   15858:	bl	3dd4 <strcmp@plt>
   1585c:	cmp	r0, #0
   15860:	blt	15884 <sav_parse_very_long_string_record+0x290>
   15864:	beq	1588c <sav_parse_very_long_string_record+0x298>
   15868:	add	sl, r4, #1
   1586c:	cmp	sl, fp
   15870:	bcc	15840 <sav_parse_very_long_string_record+0x24c>
   15874:	b	15778 <sav_parse_very_long_string_record+0x184>
   15878:	ldr	r3, [sp, #20]
   1587c:	str	r3, [sp, #28]
   15880:	b	15778 <sav_parse_very_long_string_record+0x184>
   15884:	mov	fp, r4
   15888:	b	15838 <sav_parse_very_long_string_record+0x244>
   1588c:	cmp	r5, #0
   15890:	beq	15778 <sav_parse_very_long_string_record+0x184>
   15894:	ldr	r3, [sp, #60]	; 0x3c
   15898:	ldr	r2, [r5, #36]	; 0x24
   1589c:	ldr	r3, [r3, #44]	; 0x2c
   158a0:	ldr	r3, [r3, r2, lsl #2]
   158a4:	ldr	r2, [sp, #32]
   158a8:	str	r2, [r3, #20]
   158ac:	b	15778 <sav_parse_very_long_string_record+0x184>
   158b0:	add	r0, ip, r5, lsl #1
   158b4:	sub	r0, r0, #2
   158b8:	cmp	ip, r0
   158bc:	bhi	15904 <sav_parse_very_long_string_record+0x310>
   158c0:	ldr	r3, [sp, #20]
   158c4:	mov	r2, ip
   158c8:	ldrb	r4, [r3]
   158cc:	sub	r3, r0, r2
   158d0:	asr	r3, r3, #1
   158d4:	bic	r3, r3, #1
   158d8:	ldrb	lr, [r2, r3]
   158dc:	add	r3, r2, r3
   158e0:	cmp	lr, r4
   158e4:	subhi	r0, r3, #2
   158e8:	bhi	158fc <sav_parse_very_long_string_record+0x308>
   158ec:	ldrb	lr, [r3, #1]
   158f0:	add	r2, r3, #2
   158f4:	cmp	lr, r4
   158f8:	bcs	15958 <sav_parse_very_long_string_record+0x364>
   158fc:	cmp	r0, r2
   15900:	bcs	158cc <sav_parse_very_long_string_record+0x2d8>
   15904:	add	r1, r1, r5
   15908:	b	15738 <sav_parse_very_long_string_record+0x144>
   1590c:	sub	r1, r4, #1
   15910:	adds	r1, ip, r1
   15914:	bcs	1594c <sav_parse_very_long_string_record+0x358>
   15918:	ldr	r3, [sp, #20]
   1591c:	mov	r2, ip
   15920:	ldrb	lr, [r3]
   15924:	sub	r3, r1, r2
   15928:	ldrb	r0, [r2, r3, asr #1]
   1592c:	add	r3, r2, r3, asr #1
   15930:	cmp	lr, r0
   15934:	subcc	r1, r3, #1
   15938:	bcc	15944 <sav_parse_very_long_string_record+0x350>
   1593c:	bls	15964 <sav_parse_very_long_string_record+0x370>
   15940:	add	r2, r3, #1
   15944:	cmp	r1, r2
   15948:	bcs	15924 <sav_parse_very_long_string_record+0x330>
   1594c:	add	ip, ip, r4
   15950:	add	r1, r5, r4
   15954:	b	15720 <sav_parse_very_long_string_record+0x12c>
   15958:	sub	r3, r3, ip
   1595c:	add	r1, r1, r3, asr #1
   15960:	b	15738 <sav_parse_very_long_string_record+0x144>
   15964:	sub	r3, r3, ip
   15968:	add	r1, r5, r3
   1596c:	b	15738 <sav_parse_very_long_string_record+0x144>
   15970:	ldr	r3, [sp, #20]
   15974:	add	r3, r3, #1
   15978:	str	r3, [sp, #20]
   1597c:	ldr	r3, [sp, #20]
   15980:	ldr	r2, [sp, #40]	; 0x28
   15984:	subs	r4, r3, r2
   15988:	ldr	r3, [sp, #24]
   1598c:	movne	r4, #1
   15990:	cmp	r3, #11
   15994:	orrle	r4, r4, #1
   15998:	cmp	r4, #0
   1599c:	bne	159ec <sav_parse_very_long_string_record+0x3f8>
   159a0:	cmp	r9, #0
   159a4:	beq	159b0 <sav_parse_very_long_string_record+0x3bc>
   159a8:	mov	r0, r9
   159ac:	bl	3e94 <free@plt>
   159b0:	ldr	r3, [sp, #72]	; 0x48
   159b4:	cmp	r3, #0
   159b8:	beq	159c4 <sav_parse_very_long_string_record+0x3d0>
   159bc:	mov	r0, r3
   159c0:	bl	3e94 <free@plt>
   159c4:	mov	r0, r4
   159c8:	add	sp, sp, #132	; 0x84
   159cc:	ldrd	r4, [sp]
   159d0:	ldrd	r6, [sp, #8]
   159d4:	ldrd	r8, [sp, #16]
   159d8:	ldrd	sl, [sp, #24]
   159dc:	add	sp, sp, #32
   159e0:	pop	{pc}		; (ldr pc, [sp], #4)
   159e4:	ldr	r3, [sp, #76]	; 0x4c
   159e8:	str	r3, [sp, #20]
   159ec:	ldr	r5, [sp, #60]	; 0x3c
   159f0:	ldr	r3, [r5, #24]
   159f4:	cmp	r3, #0
   159f8:	moveq	r4, #5
   159fc:	beq	159a0 <sav_parse_very_long_string_record+0x3ac>
   15a00:	ldr	lr, [sp, #20]
   15a04:	mov	r4, #5
   15a08:	ldr	r3, [sp, #40]	; 0x28
   15a0c:	ldr	r6, [sp, #72]	; 0x48
   15a10:	ldr	r2, [sp, #84]	; 0x54
   15a14:	sub	ip, r3, lr
   15a18:	ldr	r3, [sp, #76]	; 0x4c
   15a1c:	mov	r0, r6
   15a20:	ldr	r1, [sp, #80]	; 0x50
   15a24:	stm	sp, {r2, ip, lr}
   15a28:	sub	r3, lr, r3
   15a2c:	ldr	r2, [pc, #36]	; 15a58 <sav_parse_very_long_string_record+0x464>
   15a30:	add	r2, pc, r2
   15a34:	bl	4254 <snprintf@plt>
   15a38:	mov	r0, r6
   15a3c:	ldr	r3, [r5, #24]
   15a40:	ldr	r1, [r5, #40]	; 0x28
   15a44:	blx	r3
   15a48:	b	159a0 <sav_parse_very_long_string_record+0x3ac>
   15a4c:	.word	0x00010ea8
   15a50:	.word	0x00010e94
   15a54:	.word	0x00010e48
   15a58:	.word	0x000112d4

00015a5c <sav_parse_time>:
   15a5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15a60:	strd	r6, [sp, #8]
   15a64:	strd	r8, [sp, #16]
   15a68:	strd	sl, [sp, #24]
   15a6c:	add	sl, r0, r1
   15a70:	str	lr, [sp, #32]
   15a74:	sub	sp, sp, #8192	; 0x2000
   15a78:	cmp	r0, sl
   15a7c:	sub	sp, sp, #36	; 0x24
   15a80:	str	r3, [sp, #20]
   15a84:	strd	r0, [sp, #24]
   15a88:	beq	15d24 <sav_parse_time+0x2c8>
   15a8c:	ldr	r3, [pc, #680]	; 15d3c <sav_parse_time+0x2e0>
   15a90:	mov	r9, #0
   15a94:	mov	r8, #1
   15a98:	mov	r6, r0
   15a9c:	mov	r4, r8
   15aa0:	ldr	fp, [pc, #664]	; 15d40 <sav_parse_time+0x2e4>
   15aa4:	mov	r5, r9
   15aa8:	mov	ip, r9
   15aac:	add	r3, pc, r3
   15ab0:	str	r3, [sp, #12]
   15ab4:	add	fp, pc, fp
   15ab8:	ldr	r3, [pc, #644]	; 15d44 <sav_parse_time+0x2e8>
   15abc:	add	r3, pc, r3
   15ac0:	str	r3, [sp, #16]
   15ac4:	add	r3, fp, #16
   15ac8:	str	r3, [sp, #8]
   15acc:	b	15af8 <sav_parse_time+0x9c>
   15ad0:	cmp	r4, #0
   15ad4:	beq	15c80 <sav_parse_time+0x224>
   15ad8:	add	r6, r6, #1
   15adc:	cmp	sl, r6
   15ae0:	beq	15cf0 <sav_parse_time+0x294>
   15ae4:	ldr	r3, [sp, #16]
   15ae8:	add	r3, r3, r4
   15aec:	ldrb	r5, [r3, #128]	; 0x80
   15af0:	ldrb	r9, [r3, #144]	; 0x90
   15af4:	ldrb	r8, [r3, #160]	; 0xa0
   15af8:	cmp	r8, #0
   15afc:	ldr	r3, [sp, #8]
   15b00:	add	r5, r3, r5
   15b04:	mov	r3, r9
   15b08:	bne	15c04 <sav_parse_time+0x1a8>
   15b0c:	ldr	r1, [sp, #12]
   15b10:	add	r4, r1, r4
   15b14:	ldrb	r8, [r4, #40]	; 0x28
   15b18:	cmp	r8, #0
   15b1c:	bne	15bac <sav_parse_time+0x150>
   15b20:	add	r3, fp, r3
   15b24:	ldrb	r1, [r3, #84]	; 0x54
   15b28:	ldrb	r4, [r3, #56]	; 0x38
   15b2c:	cmp	r1, #0
   15b30:	beq	15ad0 <sav_parse_time+0x74>
   15b34:	ldrb	r0, [fp, r1]
   15b38:	add	r1, fp, r1
   15b3c:	add	r3, r1, #1
   15b40:	add	r0, r0, #1
   15b44:	add	r0, r1, r0
   15b48:	cmp	r3, r0
   15b4c:	beq	15ad0 <sav_parse_time+0x74>
   15b50:	ldrb	r1, [r3], #1
   15b54:	cmp	r1, #4
   15b58:	addls	pc, pc, r1, lsl #2
   15b5c:	b	15b48 <sav_parse_time+0xec>
   15b60:	b	15b98 <sav_parse_time+0x13c>
   15b64:	b	15b90 <sav_parse_time+0x134>
   15b68:	b	15b84 <sav_parse_time+0x128>
   15b6c:	b	15b7c <sav_parse_time+0x120>
   15b70:	b	15b74 <sav_parse_time+0x118>
   15b74:	str	ip, [r2, #4]
   15b78:	b	15b48 <sav_parse_time+0xec>
   15b7c:	str	ip, [r2, #8]
   15b80:	b	15b48 <sav_parse_time+0xec>
   15b84:	ldrb	ip, [r6]
   15b88:	sub	ip, ip, #48	; 0x30
   15b8c:	b	15b48 <sav_parse_time+0xec>
   15b90:	mov	ip, #0
   15b94:	b	15b48 <sav_parse_time+0xec>
   15b98:	ldrb	r1, [r6]
   15b9c:	add	ip, ip, ip, lsl #2
   15ba0:	sub	r1, r1, #48	; 0x30
   15ba4:	add	ip, r1, ip, lsl #1
   15ba8:	b	15b48 <sav_parse_time+0xec>
   15bac:	add	lr, r5, r8, lsl #1
   15bb0:	sub	lr, lr, #2
   15bb4:	cmp	r5, lr
   15bb8:	bhi	15bfc <sav_parse_time+0x1a0>
   15bbc:	ldrb	r7, [r6]
   15bc0:	mov	r0, r5
   15bc4:	sub	r1, lr, r0
   15bc8:	asr	r1, r1, #1
   15bcc:	bic	r1, r1, #1
   15bd0:	ldrb	r4, [r0, r1]
   15bd4:	add	r1, r0, r1
   15bd8:	cmp	r4, r7
   15bdc:	subhi	lr, r1, #2
   15be0:	bhi	15bf4 <sav_parse_time+0x198>
   15be4:	ldrb	r4, [r1, #1]
   15be8:	add	r0, r1, #2
   15bec:	cmp	r4, r7
   15bf0:	bcs	15c4c <sav_parse_time+0x1f0>
   15bf4:	cmp	lr, r0
   15bf8:	bcs	15bc4 <sav_parse_time+0x168>
   15bfc:	add	r3, r3, r8
   15c00:	b	15b20 <sav_parse_time+0xc4>
   15c04:	sub	r0, r8, #1
   15c08:	adds	r0, r5, r0
   15c0c:	bcs	15c40 <sav_parse_time+0x1e4>
   15c10:	ldrb	r7, [r6]
   15c14:	mov	r1, r5
   15c18:	sub	r3, r0, r1
   15c1c:	ldrb	lr, [r1, r3, asr #1]
   15c20:	add	r3, r1, r3, asr #1
   15c24:	cmp	r7, lr
   15c28:	subcc	r0, r3, #1
   15c2c:	bcc	15c38 <sav_parse_time+0x1dc>
   15c30:	bls	15c58 <sav_parse_time+0x1fc>
   15c34:	add	r1, r3, #1
   15c38:	cmp	r1, r0
   15c3c:	bls	15c18 <sav_parse_time+0x1bc>
   15c40:	add	r5, r5, r8
   15c44:	add	r3, r9, r8
   15c48:	b	15b0c <sav_parse_time+0xb0>
   15c4c:	sub	r1, r1, r5
   15c50:	add	r3, r3, r1, asr #1
   15c54:	b	15b20 <sav_parse_time+0xc4>
   15c58:	sub	r3, r3, r5
   15c5c:	add	r3, r9, r3
   15c60:	b	15b20 <sav_parse_time+0xc4>
   15c64:	ldrb	r1, [r3], #1
   15c68:	cmp	r1, #5
   15c6c:	streq	ip, [r2]
   15c70:	cmp	r3, lr
   15c74:	bne	15c64 <sav_parse_time+0x208>
   15c78:	cmp	r0, #0
   15c7c:	beq	15cd0 <sav_parse_time+0x274>
   15c80:	ldr	r3, [sp, #20]
   15c84:	cmp	r3, #0
   15c88:	beq	15ccc <sav_parse_time+0x270>
   15c8c:	ldr	r2, [pc, #180]	; 15d48 <sav_parse_time+0x2ec>
   15c90:	add	r4, sp, #32
   15c94:	mov	r0, r4
   15c98:	ldr	r5, [sp, #20]
   15c9c:	ldr	ip, [sp, #24]
   15ca0:	add	r2, pc, r2
   15ca4:	ldr	r1, [sp, #28]
   15ca8:	mov	r3, r1
   15cac:	stm	sp, {r1, ip}
   15cb0:	mov	r1, #8192	; 0x2000
   15cb4:	bl	4254 <snprintf@plt>
   15cb8:	add	r3, sp, #8256	; 0x2040
   15cbc:	mov	r0, r4
   15cc0:	add	r3, r3, #8
   15cc4:	ldr	r1, [r3]
   15cc8:	blx	r5
   15ccc:	mov	r0, #29
   15cd0:	add	sp, sp, #8192	; 0x2000
   15cd4:	add	sp, sp, #36	; 0x24
   15cd8:	ldrd	r4, [sp]
   15cdc:	ldrd	r6, [sp, #8]
   15ce0:	ldrd	r8, [sp, #16]
   15ce4:	ldrd	sl, [sp, #24]
   15ce8:	add	sp, sp, #32
   15cec:	pop	{pc}		; (ldr pc, [sp], #4)
   15cf0:	ldr	r3, [pc, #84]	; 15d4c <sav_parse_time+0x2f0>
   15cf4:	cmp	r4, #11
   15cf8:	movgt	r0, #0
   15cfc:	movle	r0, #1
   15d00:	add	r3, pc, r3
   15d04:	add	r4, r3, r4
   15d08:	ldrb	r1, [r4, #112]	; 0x70
   15d0c:	add	lr, r3, r1
   15d10:	ldrb	r3, [r3, r1]
   15d14:	add	r1, r3, #1
   15d18:	add	r3, lr, #1
   15d1c:	add	lr, lr, r1
   15d20:	b	15c70 <sav_parse_time+0x214>
   15d24:	ldr	lr, [pc, #36]	; 15d50 <sav_parse_time+0x2f4>
   15d28:	mov	r3, #0
   15d2c:	mov	r0, #1
   15d30:	mov	ip, r3
   15d34:	add	lr, pc, lr
   15d38:	b	15d14 <sav_parse_time+0x2b8>
   15d3c:	.word	0x00011288
   15d40:	.word	0x00011280
   15d44:	.word	0x00011278
   15d48:	.word	0x000113b4
   15d4c:	.word	0x00011034
   15d50:	.word	0x00011000

00015d54 <sav_parse_date>:
   15d54:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15d58:	strd	r6, [sp, #8]
   15d5c:	strd	r8, [sp, #16]
   15d60:	strd	sl, [sp, #24]
   15d64:	add	sl, r0, r1
   15d68:	str	lr, [sp, #32]
   15d6c:	sub	sp, sp, #8192	; 0x2000
   15d70:	cmp	r0, sl
   15d74:	sub	sp, sp, #44	; 0x2c
   15d78:	str	r3, [sp, #28]
   15d7c:	strd	r0, [sp, #32]
   15d80:	beq	16108 <sav_parse_date+0x3b4>
   15d84:	mov	ip, r0
   15d88:	ldr	r0, [pc, #908]	; 1611c <sav_parse_date+0x3c8>
   15d8c:	mov	r8, #0
   15d90:	mov	r7, #1
   15d94:	mov	r5, r8
   15d98:	ldr	r3, [pc, #896]	; 16120 <sav_parse_date+0x3cc>
   15d9c:	mov	r1, r7
   15da0:	mov	fp, r8
   15da4:	add	r0, pc, r0
   15da8:	str	r0, [sp, #16]
   15dac:	add	r3, pc, r3
   15db0:	ldr	r0, [pc, #876]	; 16124 <sav_parse_date+0x3d0>
   15db4:	mov	r9, r3
   15db8:	add	r3, r3, #176	; 0xb0
   15dbc:	str	r3, [sp, #12]
   15dc0:	add	r3, r9, #572	; 0x23c
   15dc4:	str	r3, [sp, #24]
   15dc8:	add	r0, pc, r0
   15dcc:	str	r0, [sp, #20]
   15dd0:	b	15dfc <sav_parse_date+0xa8>
   15dd4:	cmp	r1, #0
   15dd8:	beq	16030 <sav_parse_date+0x2dc>
   15ddc:	add	ip, ip, #1
   15de0:	cmp	sl, ip
   15de4:	beq	160a0 <sav_parse_date+0x34c>
   15de8:	ldr	r3, [sp, #20]
   15dec:	add	r3, r3, r1
   15df0:	ldrb	r5, [r3, #656]	; 0x290
   15df4:	ldrb	r8, [r3, #704]	; 0x2c0
   15df8:	ldrb	r7, [r3, #752]	; 0x2f0
   15dfc:	cmp	r7, #0
   15e00:	ldr	r3, [sp, #12]
   15e04:	add	r5, r3, r5
   15e08:	mov	r3, r8
   15e0c:	bne	15fc8 <sav_parse_date+0x274>
   15e10:	ldr	r0, [sp, #16]
   15e14:	add	r1, r0, r1
   15e18:	ldrb	r7, [r1, #268]	; 0x10c
   15e1c:	cmp	r7, #0
   15e20:	bne	15f70 <sav_parse_date+0x21c>
   15e24:	add	r3, r9, r3
   15e28:	ldrb	r1, [r3, #316]	; 0x13c
   15e2c:	add	r1, r9, r1
   15e30:	ldrb	r3, [r1, #512]	; 0x200
   15e34:	ldrb	r1, [r1, #452]	; 0x1c4
   15e38:	cmp	r3, #0
   15e3c:	beq	15dd4 <sav_parse_date+0x80>
   15e40:	add	r0, r9, r3
   15e44:	ldr	lr, [sp, #24]
   15e48:	add	r3, r3, #1
   15e4c:	mov	r8, #8
   15e50:	mov	r7, #7
   15e54:	ldrb	r0, [r0, #572]	; 0x23c
   15e58:	mov	r6, #5
   15e5c:	mov	r5, #4
   15e60:	mov	r4, #3
   15e64:	add	r3, lr, r3
   15e68:	add	r0, r3, r0
   15e6c:	cmp	r3, r0
   15e70:	beq	15dd4 <sav_parse_date+0x80>
   15e74:	ldrb	lr, [r3], #1
   15e78:	cmp	lr, #15
   15e7c:	addls	pc, pc, lr, lsl #2
   15e80:	b	15e6c <sav_parse_date+0x118>
   15e84:	b	15f50 <sav_parse_date+0x1fc>
   15e88:	b	15e6c <sav_parse_date+0x118>
   15e8c:	b	15f48 <sav_parse_date+0x1f4>
   15e90:	b	15f40 <sav_parse_date+0x1ec>
   15e94:	b	15f34 <sav_parse_date+0x1e0>
   15e98:	b	15f28 <sav_parse_date+0x1d4>
   15e9c:	b	15f1c <sav_parse_date+0x1c8>
   15ea0:	b	15f14 <sav_parse_date+0x1c0>
   15ea4:	b	15f0c <sav_parse_date+0x1b8>
   15ea8:	b	15f04 <sav_parse_date+0x1b0>
   15eac:	b	15ef8 <sav_parse_date+0x1a4>
   15eb0:	b	15ef0 <sav_parse_date+0x19c>
   15eb4:	b	15ee8 <sav_parse_date+0x194>
   15eb8:	b	15edc <sav_parse_date+0x188>
   15ebc:	b	15ed0 <sav_parse_date+0x17c>
   15ec0:	b	15ec4 <sav_parse_date+0x170>
   15ec4:	mov	lr, #11
   15ec8:	str	lr, [r2, #16]
   15ecc:	b	15e6c <sav_parse_date+0x118>
   15ed0:	mov	lr, #10
   15ed4:	str	lr, [r2, #16]
   15ed8:	b	15e6c <sav_parse_date+0x118>
   15edc:	mov	lr, #9
   15ee0:	str	lr, [r2, #16]
   15ee4:	b	15e6c <sav_parse_date+0x118>
   15ee8:	str	r8, [r2, #16]
   15eec:	b	15e6c <sav_parse_date+0x118>
   15ef0:	str	r7, [r2, #16]
   15ef4:	b	15e6c <sav_parse_date+0x118>
   15ef8:	mov	lr, #6
   15efc:	str	lr, [r2, #16]
   15f00:	b	15e6c <sav_parse_date+0x118>
   15f04:	str	r6, [r2, #16]
   15f08:	b	15e6c <sav_parse_date+0x118>
   15f0c:	str	r5, [r2, #16]
   15f10:	b	15e6c <sav_parse_date+0x118>
   15f14:	str	r4, [r2, #16]
   15f18:	b	15e6c <sav_parse_date+0x118>
   15f1c:	mov	lr, #2
   15f20:	str	lr, [r2, #16]
   15f24:	b	15e6c <sav_parse_date+0x118>
   15f28:	mov	lr, #1
   15f2c:	str	lr, [r2, #16]
   15f30:	b	15e6c <sav_parse_date+0x118>
   15f34:	mov	lr, #0
   15f38:	str	lr, [r2, #16]
   15f3c:	b	15e6c <sav_parse_date+0x118>
   15f40:	str	fp, [r2, #12]
   15f44:	b	15e6c <sav_parse_date+0x118>
   15f48:	mov	fp, #0
   15f4c:	b	15e6c <sav_parse_date+0x118>
   15f50:	ldrb	lr, [ip]
   15f54:	sub	lr, lr, #48	; 0x30
   15f58:	uxtb	lr, lr
   15f5c:	cmp	lr, #9
   15f60:	bhi	15e6c <sav_parse_date+0x118>
   15f64:	add	fp, fp, fp, lsl #2
   15f68:	add	fp, lr, fp, lsl #1
   15f6c:	b	15e6c <sav_parse_date+0x118>
   15f70:	add	lr, r5, r7, lsl #1
   15f74:	sub	lr, lr, #2
   15f78:	cmp	r5, lr
   15f7c:	bhi	15fc0 <sav_parse_date+0x26c>
   15f80:	ldrb	r6, [ip]
   15f84:	mov	r0, r5
   15f88:	sub	r1, lr, r0
   15f8c:	asr	r1, r1, #1
   15f90:	bic	r1, r1, #1
   15f94:	ldrb	r4, [r0, r1]
   15f98:	add	r1, r0, r1
   15f9c:	cmp	r4, r6
   15fa0:	subhi	lr, r1, #2
   15fa4:	bhi	15fb8 <sav_parse_date+0x264>
   15fa8:	ldrb	r4, [r1, #1]
   15fac:	add	r0, r1, #2
   15fb0:	cmp	r4, r6
   15fb4:	bcs	16010 <sav_parse_date+0x2bc>
   15fb8:	cmp	lr, r0
   15fbc:	bcs	15f88 <sav_parse_date+0x234>
   15fc0:	add	r3, r3, r7
   15fc4:	b	15e24 <sav_parse_date+0xd0>
   15fc8:	sub	lr, r7, #1
   15fcc:	adds	lr, r5, lr
   15fd0:	bcs	16004 <sav_parse_date+0x2b0>
   15fd4:	ldrb	r6, [ip]
   15fd8:	mov	r0, r5
   15fdc:	sub	r3, lr, r0
   15fe0:	ldrb	r4, [r0, r3, asr #1]
   15fe4:	add	r3, r0, r3, asr #1
   15fe8:	cmp	r6, r4
   15fec:	subcc	lr, r3, #1
   15ff0:	bcc	15ffc <sav_parse_date+0x2a8>
   15ff4:	bls	1601c <sav_parse_date+0x2c8>
   15ff8:	add	r0, r3, #1
   15ffc:	cmp	r0, lr
   16000:	bls	15fdc <sav_parse_date+0x288>
   16004:	add	r5, r5, r7
   16008:	add	r3, r8, r7
   1600c:	b	15e10 <sav_parse_date+0xbc>
   16010:	sub	r1, r1, r5
   16014:	add	r3, r3, r1, asr #1
   16018:	b	15e24 <sav_parse_date+0xd0>
   1601c:	sub	r3, r3, r5
   16020:	add	r3, r8, r3
   16024:	b	15e24 <sav_parse_date+0xd0>
   16028:	cmp	r0, #0
   1602c:	beq	16080 <sav_parse_date+0x32c>
   16030:	ldr	r3, [sp, #28]
   16034:	cmp	r3, #0
   16038:	beq	1607c <sav_parse_date+0x328>
   1603c:	ldr	r2, [pc, #228]	; 16128 <sav_parse_date+0x3d4>
   16040:	add	r4, sp, #40	; 0x28
   16044:	mov	r0, r4
   16048:	ldr	r5, [sp, #28]
   1604c:	ldr	ip, [sp, #32]
   16050:	add	r2, pc, r2
   16054:	ldr	r1, [sp, #36]	; 0x24
   16058:	mov	r3, r1
   1605c:	stm	sp, {r1, ip}
   16060:	mov	r1, #8192	; 0x2000
   16064:	bl	4254 <snprintf@plt>
   16068:	add	r3, sp, #8256	; 0x2040
   1606c:	mov	r0, r4
   16070:	add	r3, r3, #16
   16074:	ldr	r1, [r3]
   16078:	blx	r5
   1607c:	mov	r0, #29
   16080:	add	sp, sp, #8192	; 0x2000
   16084:	add	sp, sp, #44	; 0x2c
   16088:	ldrd	r4, [sp]
   1608c:	ldrd	r6, [sp, #8]
   16090:	ldrd	r8, [sp, #16]
   16094:	ldrd	sl, [sp, #24]
   16098:	add	sp, sp, #32
   1609c:	pop	{pc}		; (ldr pc, [sp], #4)
   160a0:	ldr	r3, [pc, #132]	; 1612c <sav_parse_date+0x3d8>
   160a4:	cmp	r1, #46	; 0x2e
   160a8:	movgt	r0, #0
   160ac:	movle	r0, #1
   160b0:	add	r3, pc, r3
   160b4:	add	r1, r3, r1
   160b8:	ldrb	r1, [r1, #608]	; 0x260
   160bc:	add	r3, r3, r1
   160c0:	add	r1, r1, #1
   160c4:	ldrb	ip, [r3, #572]	; 0x23c
   160c8:	add	lr, fp, #100	; 0x64
   160cc:	ldr	r3, [pc, #92]	; 16130 <sav_parse_date+0x3dc>
   160d0:	add	r3, pc, r3
   160d4:	add	r3, r3, #572	; 0x23c
   160d8:	add	r3, r3, r1
   160dc:	add	ip, r3, ip
   160e0:	cmp	r3, ip
   160e4:	beq	16028 <sav_parse_date+0x2d4>
   160e8:	ldrb	r1, [r3], #1
   160ec:	cmp	r1, #1
   160f0:	bne	160e0 <sav_parse_date+0x38c>
   160f4:	cmp	fp, #69	; 0x45
   160f8:	movgt	r1, fp
   160fc:	movle	r1, lr
   16100:	str	r1, [r2, #20]
   16104:	b	160e0 <sav_parse_date+0x38c>
   16108:	mov	ip, #0
   1610c:	mov	r1, #1
   16110:	mov	fp, ip
   16114:	mov	r0, r1
   16118:	b	160c8 <sav_parse_date+0x374>
   1611c:	.word	0x00010f90
   16120:	.word	0x00010f88
   16124:	.word	0x00010f6c
   16128:	.word	0x0001102c
   1612c:	.word	0x00010c84
   16130:	.word	0x00010c64
   16134:	.word	0x00000000

00016138 <sav_skip_document_record>:
   16138:	strd	r4, [sp, #-12]!
   1613c:	mov	r1, #4
   16140:	mov	r5, r0
   16144:	ldr	r4, [r0, #36]	; 0x24
   16148:	ldr	r3, [r4, #12]
   1614c:	ldr	r2, [r4, #20]
   16150:	str	lr, [sp, #8]
   16154:	sub	sp, sp, #12
   16158:	add	r0, sp, r1
   1615c:	blx	r3
   16160:	cmp	r0, #3
   16164:	movls	r0, #2
   16168:	bls	161a0 <sav_skip_document_record+0x68>
   1616c:	ldrb	r3, [r5, #436]	; 0x1b4
   16170:	ldr	r0, [sp, #4]
   16174:	tst	r3, #1
   16178:	bne	161b0 <sav_skip_document_record+0x78>
   1617c:	add	r0, r0, r0, lsl #2
   16180:	mov	r1, #1
   16184:	ldr	r3, [r4, #8]
   16188:	lsl	r0, r0, #4
   1618c:	ldr	r2, [r4, #20]
   16190:	blx	r3
   16194:	cmn	r0, #1
   16198:	movne	r0, #0
   1619c:	moveq	r0, #15
   161a0:	add	sp, sp, #12
   161a4:	ldrd	r4, [sp]
   161a8:	add	sp, sp, #8
   161ac:	pop	{pc}		; (ldr pc, [sp], #4)
   161b0:	bl	3d68 <byteswap4@plt>
   161b4:	str	r0, [sp, #4]
   161b8:	b	1617c <sav_skip_document_record+0x44>

000161bc <sav_parse_records_pass1>:
   161bc:	ldr	r3, [pc, #1268]	; 166b8 <sav_parse_records_pass1+0x4fc>
   161c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   161c4:	strd	r6, [sp, #8]
   161c8:	strd	r8, [sp, #16]
   161cc:	mov	r8, r0
   161d0:	strd	sl, [sp, #24]
   161d4:	str	lr, [sp, #32]
   161d8:	sub	sp, sp, #5184	; 0x1440
   161dc:	add	r3, pc, r3
   161e0:	ldr	r7, [r0, #36]	; 0x24
   161e4:	sub	sp, sp, #4
   161e8:	add	r5, sp, #1088	; 0x440
   161ec:	add	r9, sp, #64	; 0x40
   161f0:	add	sl, sp, #16
   161f4:	str	r3, [sp, #4]
   161f8:	sub	r3, r5, #1056	; 0x420
   161fc:	str	r3, [sp]
   16200:	mov	r1, #4
   16204:	mov	r0, sl
   16208:	ldr	r3, [r7, #12]
   1620c:	ldr	r2, [r7, #20]
   16210:	blx	r3
   16214:	cmp	r0, #3
   16218:	bls	163bc <sav_parse_records_pass1+0x200>
   1621c:	ldrb	r3, [r8, #436]	; 0x1b4
   16220:	ldr	r4, [r5, #-1072]	; 0xfffffbd0
   16224:	tst	r3, #1
   16228:	bne	16390 <sav_parse_records_pass1+0x1d4>
   1622c:	cmp	r4, #6
   16230:	beq	163a8 <sav_parse_records_pass1+0x1ec>
   16234:	bhi	16308 <sav_parse_records_pass1+0x14c>
   16238:	cmp	r4, #2
   1623c:	beq	16428 <sav_parse_records_pass1+0x26c>
   16240:	cmp	r4, #3
   16244:	bne	16388 <sav_parse_records_pass1+0x1cc>
   16248:	ldr	r4, [r8, #36]	; 0x24
   1624c:	mov	r1, #4
   16250:	sub	r0, r9, #44	; 0x2c
   16254:	ldr	r3, [r4, #12]
   16258:	ldr	r2, [r4, #20]
   1625c:	blx	r3
   16260:	cmp	r0, #3
   16264:	bls	163bc <sav_parse_records_pass1+0x200>
   16268:	ldrb	r3, [r8, #436]	; 0x1b4
   1626c:	ldr	r0, [r5, #-1068]	; 0xfffffbd4
   16270:	tst	r3, #1
   16274:	bne	165ac <sav_parse_records_pass1+0x3f0>
   16278:	cmp	r0, #0
   1627c:	movne	r6, #0
   16280:	movne	fp, r6
   16284:	bne	162d4 <sav_parse_records_pass1+0x118>
   16288:	b	16344 <sav_parse_records_pass1+0x188>
   1628c:	ldr	r3, [r4, #12]
   16290:	ldr	r2, [r4, #20]
   16294:	blx	r3
   16298:	cmp	r0, #0
   1629c:	mov	r1, #1
   162a0:	ble	163bc <sav_parse_records_pass1+0x200>
   162a4:	ldrb	r0, [r5, #-1024]	; 0xfffffc00
   162a8:	ldr	r3, [r4, #8]
   162ac:	ldr	r2, [r4, #20]
   162b0:	add	r0, r0, #8
   162b4:	and	r0, r0, #504	; 0x1f8
   162b8:	sub	r0, r0, #1
   162bc:	blx	r3
   162c0:	cmn	r0, #1
   162c4:	beq	16300 <sav_parse_records_pass1+0x144>
   162c8:	ldr	r3, [r5, #-1068]	; 0xfffffbd4
   162cc:	cmp	r3, r6
   162d0:	bls	16344 <sav_parse_records_pass1+0x188>
   162d4:	mov	r1, #1
   162d8:	mov	r0, #8
   162dc:	strb	fp, [r5, #-1024]	; 0xfffffc00
   162e0:	ldr	r3, [r4, #8]
   162e4:	add	r6, r6, r1
   162e8:	ldr	r2, [r4, #20]
   162ec:	blx	r3
   162f0:	cmn	r0, #1
   162f4:	mov	r1, #1
   162f8:	mov	r0, r9
   162fc:	bne	1628c <sav_parse_records_pass1+0xd0>
   16300:	mov	r4, #15
   16304:	b	16320 <sav_parse_records_pass1+0x164>
   16308:	cmp	r4, #7
   1630c:	beq	163c4 <sav_parse_records_pass1+0x208>
   16310:	movw	r3, #999	; 0x3e7
   16314:	cmp	r4, r3
   16318:	movne	r4, #5
   1631c:	moveq	r4, #0
   16320:	mov	r0, r4
   16324:	add	sp, sp, #5184	; 0x1440
   16328:	add	sp, sp, #4
   1632c:	ldrd	r4, [sp]
   16330:	ldrd	r6, [sp, #8]
   16334:	ldrd	r8, [sp, #16]
   16338:	ldrd	sl, [sp, #24]
   1633c:	add	sp, sp, #32
   16340:	pop	{pc}		; (ldr pc, [sp], #4)
   16344:	mov	r1, #4
   16348:	sub	r0, r9, #32
   1634c:	ldr	r3, [r4, #12]
   16350:	ldr	r2, [r4, #20]
   16354:	blx	r3
   16358:	cmp	r0, #3
   1635c:	bls	163bc <sav_parse_records_pass1+0x200>
   16360:	ldrb	r3, [r8, #436]	; 0x1b4
   16364:	ldr	r1, [r5, #-1056]	; 0xfffffbe0
   16368:	tst	r3, #1
   1636c:	beq	16380 <sav_parse_records_pass1+0x1c4>
   16370:	mov	r0, r1
   16374:	bl	3d68 <byteswap4@plt>
   16378:	mov	r1, r0
   1637c:	str	r0, [r5, #-1056]	; 0xfffffbe0
   16380:	cmp	r1, #4
   16384:	beq	165b8 <sav_parse_records_pass1+0x3fc>
   16388:	mov	r4, #5
   1638c:	b	16320 <sav_parse_records_pass1+0x164>
   16390:	mov	r0, r4
   16394:	bl	3d68 <byteswap4@plt>
   16398:	mov	r4, r0
   1639c:	str	r0, [r5, #-1072]	; 0xfffffbd0
   163a0:	cmp	r4, #6
   163a4:	bne	16234 <sav_parse_records_pass1+0x78>
   163a8:	mov	r0, r8
   163ac:	bl	16138 <sav_skip_document_record>
   163b0:	subs	r4, r0, #0
   163b4:	beq	16200 <sav_parse_records_pass1+0x44>
   163b8:	b	16320 <sav_parse_records_pass1+0x164>
   163bc:	mov	r4, #2
   163c0:	b	16320 <sav_parse_records_pass1+0x164>
   163c4:	sub	r6, r9, #44	; 0x2c
   163c8:	mov	r1, #12
   163cc:	ldr	r3, [r7, #12]
   163d0:	mov	r0, r6
   163d4:	ldr	r2, [r7, #20]
   163d8:	blx	r3
   163dc:	cmp	r0, #11
   163e0:	bls	163bc <sav_parse_records_pass1+0x200>
   163e4:	ldrb	r3, [r8, #436]	; 0x1b4
   163e8:	tst	r3, #1
   163ec:	bne	16590 <sav_parse_records_pass1+0x3d4>
   163f0:	ldr	r2, [r5, #-1068]	; 0xfffffbd4
   163f4:	ldr	r3, [r5, #-1064]	; 0xfffffbd8
   163f8:	ldr	r6, [r5, #-1060]	; 0xfffffbdc
   163fc:	cmp	r2, #3
   16400:	mul	r6, r6, r3
   16404:	beq	164e4 <sav_parse_records_pass1+0x328>
   16408:	mov	r0, r6
   1640c:	mov	r1, #1
   16410:	ldr	r3, [r7, #8]
   16414:	ldr	r2, [r7, #20]
   16418:	blx	r3
   1641c:	cmn	r0, #1
   16420:	bne	16200 <sav_parse_records_pass1+0x44>
   16424:	b	16300 <sav_parse_records_pass1+0x144>
   16428:	ldr	r6, [r8, #36]	; 0x24
   1642c:	mov	r1, #28
   16430:	mov	r0, r9
   16434:	ldr	r3, [r6, #12]
   16438:	ldr	r2, [r6, #20]
   1643c:	blx	r3
   16440:	cmp	r0, #27
   16444:	bls	16320 <sav_parse_records_pass1+0x164>
   16448:	ldr	r3, [r5, #-1020]	; 0xfffffc04
   1644c:	cmp	r3, #0
   16450:	beq	164a4 <sav_parse_records_pass1+0x2e8>
   16454:	mov	r1, #4
   16458:	sub	r0, r9, #32
   1645c:	ldr	r3, [r6, #12]
   16460:	ldr	r2, [r6, #20]
   16464:	blx	r3
   16468:	cmp	r0, #3
   1646c:	bls	16320 <sav_parse_records_pass1+0x164>
   16470:	ldrb	r3, [r8, #436]	; 0x1b4
   16474:	ldr	r0, [r5, #-1056]	; 0xfffffbe0
   16478:	tst	r3, #1
   1647c:	bne	16608 <sav_parse_records_pass1+0x44c>
   16480:	add	r3, r0, #3
   16484:	mov	r1, #1
   16488:	ldr	r2, [r6, #20]
   1648c:	str	r0, [r5, #-1056]	; 0xfffffbe0
   16490:	bic	r0, r3, #3
   16494:	ldr	r3, [r6, #8]
   16498:	blx	r3
   1649c:	cmn	r0, #1
   164a0:	beq	16300 <sav_parse_records_pass1+0x144>
   164a4:	ldr	r0, [r5, #-1016]	; 0xfffffc08
   164a8:	cmp	r0, #0
   164ac:	beq	16200 <sav_parse_records_pass1+0x44>
   164b0:	ldrb	r3, [r8, #436]	; 0x1b4
   164b4:	tst	r3, #1
   164b8:	bne	16600 <sav_parse_records_pass1+0x444>
   164bc:	cmp	r0, #0
   164c0:	mov	r1, #1
   164c4:	ldr	r3, [r6, #8]
   164c8:	rsblt	r0, r0, #0
   164cc:	lsl	r0, r0, #3
   164d0:	ldr	r2, [r6, #20]
   164d4:	blx	r3
   164d8:	cmn	r0, #1
   164dc:	bne	16200 <sav_parse_records_pass1+0x44>
   164e0:	b	16300 <sav_parse_records_pass1+0x144>
   164e4:	cmp	r6, #4096	; 0x1000
   164e8:	bhi	16388 <sav_parse_records_pass1+0x1cc>
   164ec:	mov	r1, r6
   164f0:	mov	r0, r5
   164f4:	ldr	r3, [r7, #12]
   164f8:	ldr	r2, [r7, #20]
   164fc:	blx	r3
   16500:	cmp	r0, r6
   16504:	bcc	16388 <sav_parse_records_pass1+0x1cc>
   16508:	cmp	r6, #32
   1650c:	bne	16388 <sav_parse_records_pass1+0x1cc>
   16510:	ldrb	ip, [r8, #436]	; 0x1b4
   16514:	ldrd	r0, [r5]
   16518:	ldrd	r2, [r5, #24]
   1651c:	tst	ip, #1
   16520:	ldr	ip, [sp]
   16524:	ldr	r6, [r8, #60]	; 0x3c
   16528:	strd	r0, [ip]
   1652c:	strd	r2, [ip, #24]
   16530:	ldr	r0, [r5, #-1028]	; 0xfffffbfc
   16534:	ldrd	r2, [r5, #16]
   16538:	strd	r2, [sp, #8]
   1653c:	ldrd	r2, [r5, #8]
   16540:	strd	r2, [ip, #8]
   16544:	ldrd	r2, [sp, #8]
   16548:	strd	r2, [ip, #16]
   1654c:	bne	16610 <sav_parse_records_pass1+0x454>
   16550:	ldr	r1, [r8, #56]	; 0x38
   16554:	cmp	r1, #0
   16558:	beq	16618 <sav_parse_records_pass1+0x45c>
   1655c:	cmp	r6, #0
   16560:	beq	16200 <sav_parse_records_pass1+0x44>
   16564:	mov	r0, r6
   16568:	bl	4104 <iconv_open@plt>
   1656c:	cmn	r0, #1
   16570:	mov	r6, r0
   16574:	beq	16320 <sav_parse_records_pass1+0x164>
   16578:	ldr	r0, [r8, #336]	; 0x150
   1657c:	cmp	r0, #0
   16580:	beq	16588 <sav_parse_records_pass1+0x3cc>
   16584:	bl	3da4 <iconv_close@plt>
   16588:	str	r6, [r8, #336]	; 0x150
   1658c:	b	16200 <sav_parse_records_pass1+0x44>
   16590:	mov	fp, #3
   16594:	ldr	r0, [r6]
   16598:	bl	3d68 <byteswap4@plt>
   1659c:	subs	fp, fp, #1
   165a0:	str	r0, [r6], #4
   165a4:	bne	16594 <sav_parse_records_pass1+0x3d8>
   165a8:	b	163f0 <sav_parse_records_pass1+0x234>
   165ac:	bl	3d68 <byteswap4@plt>
   165b0:	str	r0, [r5, #-1068]	; 0xfffffbd4
   165b4:	b	16278 <sav_parse_records_pass1+0xbc>
   165b8:	mov	r0, r9
   165bc:	ldr	r3, [r4, #12]
   165c0:	ldr	r2, [r4, #20]
   165c4:	blx	r3
   165c8:	cmp	r0, #3
   165cc:	bls	163bc <sav_parse_records_pass1+0x200>
   165d0:	ldrb	r3, [r8, #436]	; 0x1b4
   165d4:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   165d8:	tst	r3, #1
   165dc:	bne	1666c <sav_parse_records_pass1+0x4b0>
   165e0:	lsl	r0, r0, #2
   165e4:	mov	r1, #1
   165e8:	ldr	r3, [r4, #8]
   165ec:	ldr	r2, [r4, #20]
   165f0:	blx	r3
   165f4:	cmn	r0, #1
   165f8:	bne	16200 <sav_parse_records_pass1+0x44>
   165fc:	b	16300 <sav_parse_records_pass1+0x144>
   16600:	bl	3d68 <byteswap4@plt>
   16604:	b	164bc <sav_parse_records_pass1+0x300>
   16608:	bl	3d68 <byteswap4@plt>
   1660c:	b	16480 <sav_parse_records_pass1+0x2c4>
   16610:	bl	3d68 <byteswap4@plt>
   16614:	b	16550 <sav_parse_records_pass1+0x394>
   16618:	ldr	r2, [sp, #4]
   1661c:	ldr	r3, [r2]
   16620:	cmp	r3, r0
   16624:	beq	166b0 <sav_parse_records_pass1+0x4f4>
   16628:	mov	r3, #1
   1662c:	b	1663c <sav_parse_records_pass1+0x480>
   16630:	add	r3, r3, #1
   16634:	cmp	r3, #79	; 0x4f
   16638:	beq	16678 <sav_parse_records_pass1+0x4bc>
   1663c:	ldr	r1, [r2, #36]	; 0x24
   16640:	add	r2, r2, #36	; 0x24
   16644:	cmp	r0, r1
   16648:	bne	16630 <sav_parse_records_pass1+0x474>
   1664c:	add	r3, r3, r3, lsl #3
   16650:	lsl	r3, r3, #2
   16654:	add	r3, r3, #4
   16658:	ldr	r1, [pc, #92]	; 166bc <sav_parse_records_pass1+0x500>
   1665c:	add	r1, pc, r1
   16660:	add	r1, r1, r3
   16664:	str	r1, [r8, #56]	; 0x38
   16668:	b	1655c <sav_parse_records_pass1+0x3a0>
   1666c:	bl	3d68 <byteswap4@plt>
   16670:	str	r0, [r5, #-1024]	; 0xfffffc00
   16674:	b	165e0 <sav_parse_records_pass1+0x424>
   16678:	ldr	r3, [r8, #24]
   1667c:	cmp	r3, #0
   16680:	beq	16320 <sav_parse_records_pass1+0x164>
   16684:	ldr	r2, [pc, #52]	; 166c0 <sav_parse_records_pass1+0x504>
   16688:	mov	r3, r0
   1668c:	mov	r1, #1024	; 0x400
   16690:	mov	r0, r9
   16694:	add	r2, pc, r2
   16698:	bl	4254 <snprintf@plt>
   1669c:	mov	r0, r9
   166a0:	ldr	r3, [r8, #24]
   166a4:	ldr	r1, [r8, #40]	; 0x28
   166a8:	blx	r3
   166ac:	b	16320 <sav_parse_records_pass1+0x164>
   166b0:	mov	r3, #4
   166b4:	b	16658 <sav_parse_records_pass1+0x49c>
   166b8:	.word	0x0002fd7c
   166bc:	.word	0x0002f8fc
   166c0:	.word	0x00010a10

000166c4 <sav_process_row>:
   166c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   166c8:	strd	r6, [sp, #8]
   166cc:	strd	r8, [sp, #16]
   166d0:	ldr	r8, [r2, #360]	; 0x168
   166d4:	strd	sl, [sp, #24]
   166d8:	str	lr, [sp, #32]
   166dc:	sub	sp, sp, #76	; 0x4c
   166e0:	cmp	r8, #0
   166e4:	subne	r8, r8, #1
   166e8:	movne	r0, #0
   166ec:	strne	r8, [r2, #360]	; 0x168
   166f0:	bne	1684c <sav_process_row+0x188>
   166f4:	cmp	r1, #0
   166f8:	mov	r6, r2
   166fc:	beq	1683c <sav_process_row+0x178>
   16700:	ldr	r3, [r2, #340]	; 0x154
   16704:	cmp	r3, #0
   16708:	ble	1683c <sav_process_row+0x178>
   1670c:	ldr	r2, [r2, #44]	; 0x2c
   16710:	add	r3, r6, #416	; 0x1a0
   16714:	sub	r1, r1, #1
   16718:	bic	r1, r1, #7
   1671c:	mov	ip, #0
   16720:	str	r8, [sp, #16]
   16724:	add	r1, r0, r1
   16728:	add	r7, sp, #56	; 0x38
   1672c:	str	r8, [sp, #20]
   16730:	str	r3, [sp, #44]	; 0x2c
   16734:	mov	fp, r0
   16738:	mov	r5, ip
   1673c:	str	r1, [sp, #24]
   16740:	add	r1, r6, #400	; 0x190
   16744:	mov	r9, r8
   16748:	ldr	r2, [r2]
   1674c:	mov	r4, r8
   16750:	str	ip, [r7, #12]
   16754:	str	ip, [sp, #28]
   16758:	str	r1, [sp, #40]	; 0x28
   1675c:	str	ip, [sp, #56]	; 0x38
   16760:	ldr	r3, [r2]
   16764:	mov	sl, r2
   16768:	str	ip, [sp, #60]	; 0x3c
   1676c:	str	r3, [sp, #64]	; 0x40
   16770:	b	167fc <sav_process_row+0x138>
   16774:	ldr	r3, [sp, #16]
   16778:	ldr	r1, [r6, #380]	; 0x17c
   1677c:	add	r3, r3, #8
   16780:	cmp	r3, r1
   16784:	bls	168c0 <sav_process_row+0x1fc>
   16788:	ldr	r2, [r2, #16]
   1678c:	add	r4, r4, #1
   16790:	ldr	r3, [sl, #48]	; 0x30
   16794:	cmp	r4, r2
   16798:	beq	16894 <sav_process_row+0x1d0>
   1679c:	ldr	r2, [sp, #20]
   167a0:	cmp	r2, r3
   167a4:	beq	16868 <sav_process_row+0x1a4>
   167a8:	ldr	r3, [sp, #24]
   167ac:	cmp	r3, fp
   167b0:	beq	1683c <sav_process_row+0x178>
   167b4:	ldr	r3, [r6, #340]	; 0x154
   167b8:	cmp	r8, r9
   167bc:	movge	r2, r8
   167c0:	movlt	r2, r9
   167c4:	cmp	r2, r3
   167c8:	bge	1683c <sav_process_row+0x178>
   167cc:	ldr	r3, [r6, #44]	; 0x2c
   167d0:	cmp	r4, #32
   167d4:	add	fp, fp, #8
   167d8:	str	r5, [r7, #12]
   167dc:	ldr	r2, [sp, #28]
   167e0:	ldr	sl, [r3, r8, lsl #2]
   167e4:	stm	r7, {r2, r5}
   167e8:	str	r2, [r7, #8]
   167ec:	ldr	r2, [r3, r9, lsl #2]
   167f0:	ldr	r3, [sl]
   167f4:	str	r3, [sp, #64]	; 0x40
   167f8:	beq	16a24 <sav_process_row+0x360>
   167fc:	cmp	r3, #0
   16800:	beq	16774 <sav_process_row+0xb0>
   16804:	cmp	r3, #5
   16808:	bne	167a8 <sav_process_row+0xe4>
   1680c:	ldr	r2, [sl, #8]
   16810:	ldr	r3, [r6, #52]	; 0x34
   16814:	ldr	ip, [r3, r2, lsl #2]
   16818:	ldr	r3, [ip, #2144]	; 0x860
   1681c:	cmp	r3, #0
   16820:	beq	1694c <sav_process_row+0x288>
   16824:	ldr	r3, [sl, #48]	; 0x30
   16828:	add	r9, r9, #1
   1682c:	add	r8, r8, r3
   16830:	ldr	r3, [sp, #24]
   16834:	cmp	r3, fp
   16838:	bne	167b4 <sav_process_row+0xf0>
   1683c:	ldr	r3, [r6, #364]	; 0x16c
   16840:	mov	r0, #0
   16844:	add	r3, r3, #1
   16848:	str	r3, [r6, #364]	; 0x16c
   1684c:	add	sp, sp, #76	; 0x4c
   16850:	ldrd	r4, [sp]
   16854:	ldrd	r6, [sp, #8]
   16858:	ldrd	r8, [sp, #16]
   1685c:	ldrd	sl, [sp, #24]
   16860:	add	sp, sp, #32
   16864:	pop	{pc}		; (ldr pc, [sp], #4)
   16868:	ldr	r1, [sl, #8]
   1686c:	ldr	r2, [r6, #52]	; 0x34
   16870:	ldr	r2, [r2, r1, lsl #2]
   16874:	ldr	r2, [r2, #2144]	; 0x860
   16878:	cmp	r2, #0
   1687c:	beq	168e4 <sav_process_row+0x220>
   16880:	mov	r2, #0
   16884:	add	r8, r8, r3
   16888:	str	r2, [sp, #16]
   1688c:	str	r2, [sp, #20]
   16890:	b	167a8 <sav_process_row+0xe4>
   16894:	ldr	r2, [sp, #20]
   16898:	add	r2, r2, #1
   1689c:	cmp	r2, r3
   168a0:	str	r2, [sp, #20]
   168a4:	bge	168b4 <sav_process_row+0x1f0>
   168a8:	ldr	r2, [sp, #16]
   168ac:	sub	r2, r2, #1
   168b0:	str	r2, [sp, #16]
   168b4:	add	r9, r9, #1
   168b8:	mov	r4, #0
   168bc:	b	1679c <sav_process_row+0xd8>
   168c0:	ldr	ip, [fp]
   168c4:	ldr	lr, [sp, #16]
   168c8:	str	r3, [sp, #16]
   168cc:	ldr	r1, [r6, #376]	; 0x178
   168d0:	ldr	r0, [fp, #4]
   168d4:	str	ip, [r1, lr]
   168d8:	add	r1, r1, lr
   168dc:	str	r0, [r1, #4]
   168e0:	b	16788 <sav_process_row+0xc4>
   168e4:	ldr	r1, [r6, #336]	; 0x150
   168e8:	ldr	r3, [sp, #16]
   168ec:	ldr	r2, [r6, #376]	; 0x178
   168f0:	ldr	r0, [r6, #384]	; 0x180
   168f4:	str	r1, [sp]
   168f8:	ldr	r1, [r6, #388]	; 0x184
   168fc:	bl	420c <readstat_convert@plt>
   16900:	cmp	r0, #0
   16904:	bne	1684c <sav_process_row+0x188>
   16908:	ldr	ip, [sl, #8]
   1690c:	ldrd	r2, [sp, #64]	; 0x40
   16910:	ldr	r1, [r6, #52]	; 0x34
   16914:	ldr	r0, [r6, #40]	; 0x28
   16918:	ldr	r1, [r1, ip, lsl #2]
   1691c:	strd	r2, [sp]
   16920:	ldr	r3, [r6, #384]	; 0x180
   16924:	str	r0, [sp, #8]
   16928:	ldr	ip, [r6, #16]
   1692c:	ldr	r0, [r6, #364]	; 0x16c
   16930:	str	r3, [sp, #56]	; 0x38
   16934:	ldm	r7, {r2, r3}
   16938:	blx	ip
   1693c:	cmp	r0, #0
   16940:	bne	16a1c <sav_process_row+0x358>
   16944:	ldr	r3, [sl, #48]	; 0x30
   16948:	b	16880 <sav_process_row+0x1bc>
   1694c:	ldrb	r1, [r6, #436]	; 0x1b4
   16950:	ldr	r2, [fp]
   16954:	ldr	r3, [fp, #4]
   16958:	tst	r1, #1
   1695c:	strd	r2, [sp, #48]	; 0x30
   16960:	bne	16a2c <sav_process_row+0x368>
   16964:	vldr	d7, [sp, #48]	; 0x30
   16968:	vstr	d7, [sp, #32]
   1696c:	ldrd	r2, [sp, #32]
   16970:	vmov	d7, r2, r3
   16974:	mov	r1, r3
   16978:	mov	r0, r2
   1697c:	ldr	r3, [sp, #40]	; 0x28
   16980:	ldrd	r2, [r3, #-8]
   16984:	vstr	d7, [sp, #56]	; 0x38
   16988:	cmp	r1, r3
   1698c:	cmpeq	r0, r2
   16990:	bne	169a0 <sav_process_row+0x2dc>
   16994:	ldrb	r3, [sp, #69]	; 0x45
   16998:	orr	r3, r3, #1
   1699c:	strb	r3, [sp, #69]	; 0x45
   169a0:	ldr	r3, [sp, #40]	; 0x28
   169a4:	ldrd	r2, [r3]
   169a8:	cmp	r1, r3
   169ac:	cmpeq	r0, r2
   169b0:	bne	169c0 <sav_process_row+0x2fc>
   169b4:	ldrb	r3, [sp, #69]	; 0x45
   169b8:	orr	r3, r3, #1
   169bc:	strb	r3, [sp, #69]	; 0x45
   169c0:	ldr	r3, [sp, #44]	; 0x2c
   169c4:	ldrd	r2, [r3, #-8]
   169c8:	cmp	r1, r3
   169cc:	cmpeq	r0, r2
   169d0:	bne	169e0 <sav_process_row+0x31c>
   169d4:	ldrb	r3, [sp, #69]	; 0x45
   169d8:	orr	r3, r3, #1
   169dc:	strb	r3, [sp, #69]	; 0x45
   169e0:	vldr	d7, [sp, #32]
   169e4:	vcmp.f64	d7, d7
   169e8:	vmrs	APSR_nzcv, fpscr
   169ec:	bvs	16a4c <sav_process_row+0x388>
   169f0:	ldr	r0, [r6, #40]	; 0x28
   169f4:	mov	r1, ip
   169f8:	ldrd	r2, [sp, #64]	; 0x40
   169fc:	ldr	ip, [r6, #16]
   16a00:	strd	r2, [sp]
   16a04:	ldm	r7, {r2, r3}
   16a08:	str	r0, [sp, #8]
   16a0c:	ldr	r0, [r6, #364]	; 0x16c
   16a10:	blx	ip
   16a14:	cmp	r0, #0
   16a18:	beq	16824 <sav_process_row+0x160>
   16a1c:	mov	r0, #4
   16a20:	b	1684c <sav_process_row+0x188>
   16a24:	mov	r0, #5
   16a28:	b	1684c <sav_process_row+0x188>
   16a2c:	vldr	d0, [sp, #48]	; 0x30
   16a30:	bl	44dc <byteswap_double@plt>
   16a34:	ldr	r2, [sl, #8]
   16a38:	vstr	d0, [sp, #32]
   16a3c:	ldr	r3, [r6, #52]	; 0x34
   16a40:	ldr	ip, [r3, r2, lsl #2]
   16a44:	vstr	d0, [sp, #48]	; 0x30
   16a48:	b	1696c <sav_process_row+0x2a8>
   16a4c:	ldrb	r3, [sp, #69]	; 0x45
   16a50:	orr	r3, r3, #1
   16a54:	strb	r3, [sp, #69]	; 0x45
   16a58:	b	169f0 <sav_process_row+0x32c>

00016a5c <sav_read_pascal_string.constprop.5>:
   16a5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16a60:	mov	r5, r1
   16a64:	ldr	r1, [r1]
   16a68:	strd	r6, [sp, #8]
   16a6c:	str	r8, [sp, #16]
   16a70:	str	lr, [sp, #20]
   16a74:	sub	sp, sp, #8
   16a78:	add	r4, r1, #4
   16a7c:	add	r6, r1, r2
   16a80:	cmp	r6, r4
   16a84:	bcc	16af4 <sav_read_pascal_string.constprop.5+0x98>
   16a88:	ldrb	r3, [r3, #436]	; 0x1b4
   16a8c:	mov	r8, r0
   16a90:	ldr	r0, [r1]
   16a94:	tst	r3, #1
   16a98:	bne	16aec <sav_read_pascal_string.constprop.5+0x90>
   16a9c:	add	r7, r4, r0
   16aa0:	cmp	r6, r7
   16aa4:	movcc	r0, #5
   16aa8:	bcc	16ad0 <sav_read_pascal_string.constprop.5+0x74>
   16aac:	mov	r1, #0
   16ab0:	mov	r3, r0
   16ab4:	mov	r2, r4
   16ab8:	mov	r0, r8
   16abc:	str	r1, [sp]
   16ac0:	movw	r1, #257	; 0x101
   16ac4:	bl	420c <readstat_convert@plt>
   16ac8:	cmp	r0, #0
   16acc:	moveq	r4, r7
   16ad0:	str	r4, [r5]
   16ad4:	add	sp, sp, #8
   16ad8:	ldrd	r4, [sp]
   16adc:	ldrd	r6, [sp, #8]
   16ae0:	ldr	r8, [sp, #16]
   16ae4:	add	sp, sp, #20
   16ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   16aec:	bl	3d68 <byteswap4@plt>
   16af0:	b	16a9c <sav_read_pascal_string.constprop.5+0x40>
   16af4:	mov	r4, r1
   16af8:	mov	r0, #5
   16afc:	b	16ad0 <sav_read_pascal_string.constprop.5+0x74>

00016b00 <sav_read_compressed_data.constprop.6>:
   16b00:	ldr	r3, [r0, #36]	; 0x24
   16b04:	mov	r2, #56	; 0x38
   16b08:	mov	r1, #0
   16b0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16b10:	strd	r6, [sp, #8]
   16b14:	mov	r6, r0
   16b18:	strd	r8, [sp, #16]
   16b1c:	strd	sl, [sp, #24]
   16b20:	str	lr, [sp, #32]
   16b24:	sub	sp, sp, #65536	; 0x10000
   16b28:	sub	sp, sp, #68	; 0x44
   16b2c:	ldr	r7, [r0, #344]	; 0x158
   16b30:	add	r4, sp, #64	; 0x40
   16b34:	sub	r0, r4, #56	; 0x38
   16b38:	str	r3, [sp]
   16b3c:	bl	4278 <memset@plt>
   16b40:	ldrb	r1, [r6, #436]	; 0x1b4
   16b44:	add	r3, r6, #400	; 0x190
   16b48:	lsl	r7, r7, #3
   16b4c:	ldrd	r2, [r3, #-8]
   16b50:	cmp	r7, #0
   16b54:	add	r9, r6, #416	; 0x1a0
   16b58:	ldrd	r8, [r9]
   16b5c:	and	r1, r1, #1
   16b60:	strd	r2, [r4, #-40]	; 0xffffffd8
   16b64:	strd	r8, [r4, #-32]	; 0xffffffe0
   16b68:	str	r1, [r4, #-12]
   16b6c:	bne	16cb0 <sav_read_compressed_data.constprop.6+0x1b0>
   16b70:	ldr	r3, [sp]
   16b74:	mov	r9, r7
   16b78:	mov	r5, #0
   16b7c:	add	sl, sp, #8
   16b80:	ldr	r8, [r3, #16]
   16b84:	ldr	r3, [r3, #20]
   16b88:	ldr	r1, [r6, #28]
   16b8c:	ldr	r0, [r6, #32]
   16b90:	ldr	r2, [r6, #40]	; 0x28
   16b94:	blx	r8
   16b98:	subs	fp, r0, #0
   16b9c:	str	fp, [sp, #4]
   16ba0:	bne	16c74 <sav_read_compressed_data.constprop.6+0x174>
   16ba4:	ldr	r2, [sp]
   16ba8:	mov	r1, #65536	; 0x10000
   16bac:	mov	r0, r4
   16bb0:	ldr	r3, [r2, #12]
   16bb4:	ldr	r2, [r2, #20]
   16bb8:	blx	r3
   16bbc:	add	r3, r0, #1
   16bc0:	mov	r8, r0
   16bc4:	cmp	r3, #1
   16bc8:	bls	16c74 <sav_read_compressed_data.constprop.6+0x174>
   16bcc:	tst	r0, #7
   16bd0:	bne	16c74 <sav_read_compressed_data.constprop.6+0x174>
   16bd4:	mov	r2, #1
   16bd8:	str	r2, [r4, #-8]
   16bdc:	b	16c10 <sav_read_compressed_data.constprop.6+0x110>
   16be0:	ldr	r5, [r4, #-44]	; 0xffffffd4
   16be4:	cmp	r2, #3
   16be8:	sub	r5, r7, r5
   16bec:	beq	16c74 <sav_read_compressed_data.constprop.6+0x174>
   16bf0:	ldr	r1, [r6, #356]	; 0x164
   16bf4:	cmp	r1, #0
   16bf8:	ble	16c08 <sav_read_compressed_data.constprop.6+0x108>
   16bfc:	ldr	r0, [r6, #364]	; 0x16c
   16c00:	cmp	r1, r0
   16c04:	beq	16c74 <sav_read_compressed_data.constprop.6+0x174>
   16c08:	cmp	r2, #0
   16c0c:	beq	16ca8 <sav_read_compressed_data.constprop.6+0x1a8>
   16c10:	sub	r3, r8, fp
   16c14:	add	r2, r9, r5
   16c18:	add	r1, r4, fp
   16c1c:	sub	r5, r7, r5
   16c20:	mov	r0, sl
   16c24:	str	r1, [r4, #-56]	; 0xffffffc8
   16c28:	str	r3, [r4, #-52]	; 0xffffffcc
   16c2c:	str	r2, [r4, #-48]	; 0xffffffd0
   16c30:	str	r5, [r4, #-44]	; 0xffffffd4
   16c34:	bl	41e8 <sav_decompress_row@plt>
   16c38:	ldr	r3, [r4, #-52]	; 0xffffffcc
   16c3c:	ldr	r2, [r4, #-8]
   16c40:	sub	fp, r8, r3
   16c44:	cmp	r2, #2
   16c48:	bne	16be0 <sav_read_compressed_data.constprop.6+0xe0>
   16c4c:	mov	r2, r6
   16c50:	mov	r1, r7
   16c54:	mov	r0, r9
   16c58:	bl	166c4 <sav_process_row>
   16c5c:	cmp	r0, #0
   16c60:	mov	r5, r0
   16c64:	bne	16cc8 <sav_read_compressed_data.constprop.6+0x1c8>
   16c68:	ldr	r2, [r4, #-8]
   16c6c:	cmp	r2, #3
   16c70:	bne	16bf0 <sav_read_compressed_data.constprop.6+0xf0>
   16c74:	cmp	r9, #0
   16c78:	beq	16c84 <sav_read_compressed_data.constprop.6+0x184>
   16c7c:	mov	r0, r9
   16c80:	bl	3e94 <free@plt>
   16c84:	ldr	r0, [sp, #4]
   16c88:	add	sp, sp, #65536	; 0x10000
   16c8c:	add	sp, sp, #68	; 0x44
   16c90:	ldrd	r4, [sp]
   16c94:	ldrd	r6, [sp, #8]
   16c98:	ldrd	r8, [sp, #16]
   16c9c:	ldrd	sl, [sp, #24]
   16ca0:	add	sp, sp, #32
   16ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ca8:	ldr	r3, [r6, #36]	; 0x24
   16cac:	b	16b80 <sav_read_compressed_data.constprop.6+0x80>
   16cb0:	mov	r0, r7
   16cb4:	bl	4200 <readstat_malloc@plt>
   16cb8:	subs	r9, r0, #0
   16cbc:	beq	16cd0 <sav_read_compressed_data.constprop.6+0x1d0>
   16cc0:	ldr	r3, [r6, #36]	; 0x24
   16cc4:	b	16b78 <sav_read_compressed_data.constprop.6+0x78>
   16cc8:	str	r0, [sp, #4]
   16ccc:	b	16c74 <sav_read_compressed_data.constprop.6+0x174>
   16cd0:	mov	r3, #3
   16cd4:	str	r3, [sp, #4]
   16cd8:	b	16c84 <sav_read_compressed_data.constprop.6+0x184>

00016cdc <sav_parse_timestamp>:
   16cdc:	ldr	r3, [r0, #40]	; 0x28
   16ce0:	mov	ip, #0
   16ce4:	strd	r4, [sp, #-20]!	; 0xffffffec
   16ce8:	mov	r5, r0
   16cec:	add	r0, r1, #101	; 0x65
   16cf0:	strd	r6, [sp, #8]
   16cf4:	mov	r7, r1
   16cf8:	mov	r1, #8
   16cfc:	str	lr, [sp, #16]
   16d00:	sub	sp, sp, #60	; 0x3c
   16d04:	mvn	lr, #0
   16d08:	add	r4, sp, #12
   16d0c:	mov	r2, r4
   16d10:	str	r3, [sp]
   16d14:	ldr	r3, [r5, #24]
   16d18:	str	ip, [sp, #12]
   16d1c:	str	ip, [sp, #16]
   16d20:	str	ip, [sp, #20]
   16d24:	str	ip, [sp, #24]
   16d28:	str	ip, [sp, #28]
   16d2c:	str	ip, [sp, #32]
   16d30:	str	ip, [sp, #36]	; 0x24
   16d34:	str	ip, [sp, #40]	; 0x28
   16d38:	str	lr, [sp, #44]	; 0x2c
   16d3c:	str	ip, [sp, #48]	; 0x30
   16d40:	str	ip, [sp, #52]	; 0x34
   16d44:	bl	3eac <sav_parse_time@plt>
   16d48:	subs	r6, r0, #0
   16d4c:	beq	16d68 <sav_parse_timestamp+0x8c>
   16d50:	mov	r0, r6
   16d54:	add	sp, sp, #60	; 0x3c
   16d58:	ldrd	r4, [sp]
   16d5c:	ldrd	r6, [sp, #8]
   16d60:	add	sp, sp, #16
   16d64:	pop	{pc}		; (ldr pc, [sp], #4)
   16d68:	add	r0, r7, #92	; 0x5c
   16d6c:	mov	r2, r4
   16d70:	ldr	r3, [r5, #24]
   16d74:	mov	r1, #9
   16d78:	ldr	ip, [r5, #40]	; 0x28
   16d7c:	str	ip, [sp]
   16d80:	bl	405c <sav_parse_date@plt>
   16d84:	subs	r6, r0, #0
   16d88:	bne	16d50 <sav_parse_timestamp+0x74>
   16d8c:	mov	r0, r4
   16d90:	bl	3e28 <mktime@plt>
   16d94:	str	r0, [r5, #324]	; 0x144
   16d98:	b	16d50 <sav_parse_timestamp+0x74>

00016d9c <readstat_parse_sav>:
   16d9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16da0:	mov	r4, r0
   16da4:	strd	r6, [sp, #8]
   16da8:	mov	r6, r2
   16dac:	strd	r8, [sp, #16]
   16db0:	ldr	r8, [r0, #32]
   16db4:	mov	r0, r1
   16db8:	strd	sl, [sp, #24]
   16dbc:	str	lr, [sp, #32]
   16dc0:	vpush	{d8-d11}
   16dc4:	sub	sp, sp, #900	; 0x384
   16dc8:	ldr	r3, [r8]
   16dcc:	ldr	r1, [r8, #20]
   16dd0:	blx	r3
   16dd4:	cmn	r0, #1
   16dd8:	moveq	r9, #1
   16ddc:	beq	16e4c <readstat_parse_sav+0xb0>
   16de0:	mov	r1, #2
   16de4:	mov	r0, #0
   16de8:	ldr	r3, [r8, #8]
   16dec:	ldr	r2, [r8, #20]
   16df0:	blx	r3
   16df4:	cmn	r0, #1
   16df8:	mov	r5, r0
   16dfc:	beq	16e70 <readstat_parse_sav+0xd4>
   16e00:	mov	r1, #0
   16e04:	ldr	r3, [r8, #8]
   16e08:	mov	r0, r1
   16e0c:	ldr	r2, [r8, #20]
   16e10:	blx	r3
   16e14:	cmn	r0, #1
   16e18:	beq	16e70 <readstat_parse_sav+0xd4>
   16e1c:	add	sl, sp, #136	; 0x88
   16e20:	mov	r1, #176	; 0xb0
   16e24:	ldr	r3, [r8, #12]
   16e28:	mov	r0, sl
   16e2c:	ldr	r2, [r8, #20]
   16e30:	blx	r3
   16e34:	cmp	r0, #175	; 0xaf
   16e38:	bhi	16e84 <readstat_parse_sav+0xe8>
   16e3c:	ldr	r3, [r8, #4]
   16e40:	mov	r9, #2
   16e44:	ldr	r0, [r8, #20]
   16e48:	blx	r3
   16e4c:	mov	r0, r9
   16e50:	add	sp, sp, #900	; 0x384
   16e54:	vpop	{d8-d11}
   16e58:	ldrd	r4, [sp]
   16e5c:	ldrd	r6, [sp, #8]
   16e60:	ldrd	r8, [sp, #16]
   16e64:	ldrd	sl, [sp, #24]
   16e68:	add	sp, sp, #32
   16e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e70:	ldr	r3, [r8, #4]
   16e74:	mov	r9, #15
   16e78:	ldr	r0, [r8, #20]
   16e7c:	blx	r3
   16e80:	b	16e4c <readstat_parse_sav+0xb0>
   16e84:	mov	r1, r8
   16e88:	mov	r0, sl
   16e8c:	bl	402c <sav_ctx_init@plt>
   16e90:	subs	r7, r0, #0
   16e94:	beq	16fb8 <readstat_parse_sav+0x21c>
   16e98:	ldrd	r2, [r4]
   16e9c:	ldrd	r0, [r4, #8]
   16ea0:	ldr	ip, [r4, #48]	; 0x30
   16ea4:	strd	r2, [sp, #16]
   16ea8:	ldrd	r2, [r4, #16]
   16eac:	cmp	ip, #0
   16eb0:	strd	r2, [r7, #16]
   16eb4:	ldrd	r2, [sp, #16]
   16eb8:	strd	r2, [r7]
   16ebc:	ldrd	r2, [r4, #24]
   16ec0:	strd	r0, [r7, #8]
   16ec4:	ldrd	r0, [r4, #36]	; 0x24
   16ec8:	strgt	ip, [r7, #360]	; 0x168
   16ecc:	strd	r2, [r7, #24]
   16ed0:	ldr	r2, [r7, #352]	; 0x160
   16ed4:	str	r5, [r7, #32]
   16ed8:	str	r6, [r7, #40]	; 0x28
   16edc:	strd	r0, [r7, #56]	; 0x38
   16ee0:	cmn	r2, #1
   16ee4:	beq	16f98 <readstat_parse_sav+0x1fc>
   16ee8:	ldr	r3, [r7, #360]	; 0x168
   16eec:	subs	r3, r2, r3
   16ef0:	bmi	16fa8 <readstat_parse_sav+0x20c>
   16ef4:	ldr	r2, [r4, #44]	; 0x2c
   16ef8:	cmp	r2, r3
   16efc:	movge	r1, #0
   16f00:	movlt	r1, #1
   16f04:	cmp	r2, #0
   16f08:	movle	r1, #0
   16f0c:	cmp	r1, #0
   16f10:	movne	r3, r2
   16f14:	str	r3, [r7, #356]	; 0x164
   16f18:	mov	r1, sl
   16f1c:	mov	r0, r7
   16f20:	bl	3dc8 <sav_parse_timestamp@plt>
   16f24:	subs	r9, r0, #0
   16f28:	bne	16f80 <readstat_parse_sav+0x1e4>
   16f2c:	mov	r0, r7
   16f30:	bl	161bc <sav_parse_records_pass1>
   16f34:	subs	r9, r0, #0
   16f38:	bne	16f80 <readstat_parse_sav+0x1e4>
   16f3c:	mov	r1, r9
   16f40:	mov	r0, #176	; 0xb0
   16f44:	ldr	r3, [r8, #8]
   16f48:	ldr	r2, [r8, #20]
   16f4c:	blx	r3
   16f50:	cmn	r0, #1
   16f54:	moveq	r9, #15
   16f58:	beq	16f80 <readstat_parse_sav+0x1e4>
   16f5c:	ldr	r1, [r7, #28]
   16f60:	ldr	r3, [r7, #36]	; 0x24
   16f64:	ldr	r0, [r7, #32]
   16f68:	ldr	r2, [r7, #40]	; 0x28
   16f6c:	ldr	r4, [r3, #16]
   16f70:	ldr	r3, [r3, #20]
   16f74:	blx	r4
   16f78:	subs	r9, r0, #0
   16f7c:	beq	16fcc <readstat_parse_sav+0x230>
   16f80:	ldr	r3, [r8, #4]
   16f84:	ldr	r0, [r8, #20]
   16f88:	blx	r3
   16f8c:	mov	r0, r7
   16f90:	bl	3ee8 <sav_ctx_free@plt>
   16f94:	b	16e4c <readstat_parse_sav+0xb0>
   16f98:	ldr	r3, [r4, #44]	; 0x2c
   16f9c:	cmp	r3, #0
   16fa0:	strgt	r3, [r7, #356]	; 0x164
   16fa4:	b	16f18 <readstat_parse_sav+0x17c>
   16fa8:	mov	r3, #0
   16fac:	str	r3, [r7, #356]	; 0x164
   16fb0:	str	r2, [r7, #360]	; 0x168
   16fb4:	b	16f18 <readstat_parse_sav+0x17c>
   16fb8:	ldr	r3, [r8, #4]
   16fbc:	mov	r9, #5
   16fc0:	ldr	r0, [r8, #20]
   16fc4:	blx	r3
   16fc8:	b	16e4c <readstat_parse_sav+0xb0>
   16fcc:	ldr	r3, [r7, #36]	; 0x24
   16fd0:	mov	r0, #4096	; 0x1000
   16fd4:	str	r3, [sp, #24]
   16fd8:	bl	4200 <readstat_malloc@plt>
   16fdc:	subs	r3, r0, #0
   16fe0:	str	r3, [sp, #40]	; 0x28
   16fe4:	beq	181c0 <readstat_parse_sav+0x1424>
   16fe8:	vldr	d11, [pc, #960]	; 173b0 <readstat_parse_sav+0x614>
   16fec:	mov	r3, #4096	; 0x1000
   16ff0:	str	r8, [sp, #16]
   16ff4:	vldr	d10, [pc, #956]	; 173b8 <readstat_parse_sav+0x61c>
   16ff8:	str	r9, [sp, #32]
   16ffc:	vldr	d9, [pc, #956]	; 173c0 <readstat_parse_sav+0x624>
   17000:	str	r3, [sp, #56]	; 0x38
   17004:	add	r3, sp, #76	; 0x4c
   17008:	vldr	d8, [pc, #952]	; 173c8 <readstat_parse_sav+0x62c>
   1700c:	str	r3, [sp, #28]
   17010:	str	sl, [sp, #36]	; 0x24
   17014:	ldr	r2, [sp, #24]
   17018:	mov	r1, #4
   1701c:	ldr	r0, [sp, #28]
   17020:	ldr	r3, [r2, #12]
   17024:	ldr	r2, [r2, #20]
   17028:	blx	r3
   1702c:	cmp	r0, #3
   17030:	bls	17cc0 <readstat_parse_sav+0xf24>
   17034:	ldrb	r3, [r7, #436]	; 0x1b4
   17038:	ldr	r5, [sp, #76]	; 0x4c
   1703c:	tst	r3, #1
   17040:	bne	17530 <readstat_parse_sav+0x794>
   17044:	cmp	r5, #6
   17048:	beq	17c00 <readstat_parse_sav+0xe64>
   1704c:	bhi	171bc <readstat_parse_sav+0x420>
   17050:	cmp	r5, #2
   17054:	beq	17544 <readstat_parse_sav+0x7a8>
   17058:	cmp	r5, #3
   1705c:	bne	17518 <readstat_parse_sav+0x77c>
   17060:	ldr	r4, [r7, #36]	; 0x24
   17064:	mov	r1, #4
   17068:	add	r0, sp, #80	; 0x50
   1706c:	ldr	r3, [r4, #12]
   17070:	ldr	r2, [r4, #20]
   17074:	blx	r3
   17078:	cmp	r0, #3
   1707c:	bls	17cc0 <readstat_parse_sav+0xf24>
   17080:	ldrb	r3, [r7, #436]	; 0x1b4
   17084:	ldr	r6, [sp, #80]	; 0x50
   17088:	tst	r3, #1
   1708c:	bne	1819c <readstat_parse_sav+0x1400>
   17090:	cmp	r6, #0
   17094:	bne	18048 <readstat_parse_sav+0x12ac>
   17098:	mov	r1, #4
   1709c:	add	r0, sp, #96	; 0x60
   170a0:	ldr	r3, [r4, #12]
   170a4:	ldr	r2, [r4, #20]
   170a8:	blx	r3
   170ac:	cmp	r0, #3
   170b0:	bls	187b8 <readstat_parse_sav+0x1a1c>
   170b4:	str	r6, [sp, #44]	; 0x2c
   170b8:	ldrb	r3, [r7, #436]	; 0x1b4
   170bc:	tst	r3, #1
   170c0:	bne	18594 <readstat_parse_sav+0x17f8>
   170c4:	ldr	r1, [sp, #96]	; 0x60
   170c8:	cmp	r1, #4
   170cc:	bne	18528 <readstat_parse_sav+0x178c>
   170d0:	add	r0, sp, #84	; 0x54
   170d4:	ldr	r3, [r4, #12]
   170d8:	ldr	r2, [r4, #20]
   170dc:	blx	r3
   170e0:	cmp	r0, #3
   170e4:	bls	187ac <readstat_parse_sav+0x1a10>
   170e8:	ldrb	r3, [r7, #436]	; 0x1b4
   170ec:	tst	r3, #1
   170f0:	bne	1882c <readstat_parse_sav+0x1a90>
   170f4:	ldr	r6, [sp, #84]	; 0x54
   170f8:	cmp	r6, #0
   170fc:	bne	187c4 <readstat_parse_sav+0x1a28>
   17100:	mov	r1, r6
   17104:	mov	r0, r6
   17108:	ldr	r3, [r4, #12]
   1710c:	ldr	r2, [r4, #20]
   17110:	blx	r3
   17114:	ldr	r3, [sp, #84]	; 0x54
   17118:	cmp	r0, r3, lsl #2
   1711c:	strcs	r6, [sp, #60]	; 0x3c
   17120:	bcc	18a24 <readstat_parse_sav+0x1c88>
   17124:	cmp	r3, #0
   17128:	str	r3, [sp, #64]	; 0x40
   1712c:	beq	17d20 <readstat_parse_sav+0xf84>
   17130:	ldr	r3, [sp, #60]	; 0x3c
   17134:	mov	r9, #0
   17138:	add	r8, sp, #568	; 0x238
   1713c:	str	r9, [sp, #64]	; 0x40
   17140:	sub	r3, r3, #4
   17144:	str	r3, [sp, #48]	; 0x30
   17148:	ldr	r3, [sp, #48]	; 0x30
   1714c:	ldr	r0, [r3, #4]!
   17150:	str	r3, [sp, #48]	; 0x30
   17154:	str	r0, [sp, #568]	; 0x238
   17158:	ldrb	r3, [r7, #436]	; 0x1b4
   1715c:	tst	r3, #1
   17160:	bne	182f0 <readstat_parse_sav+0x1554>
   17164:	sub	r0, r0, #1
   17168:	ldr	r5, [r7, #44]	; 0x2c
   1716c:	str	r0, [sp, #568]	; 0x238
   17170:	ldr	r6, [r7, #340]	; 0x154
   17174:	cmp	r6, #0
   17178:	beq	17d10 <readstat_parse_sav+0xf74>
   1717c:	mov	fp, #0
   17180:	b	17194 <readstat_parse_sav+0x3f8>
   17184:	beq	17cf4 <readstat_parse_sav+0xf58>
   17188:	add	fp, r4, #1
   1718c:	cmp	r6, fp
   17190:	bls	17d10 <readstat_parse_sav+0xf74>
   17194:	add	r4, r6, fp
   17198:	mov	r0, r8
   1719c:	lsr	r4, r4, #1
   171a0:	add	sl, r5, r4, lsl #2
   171a4:	mov	r1, sl
   171a8:	bl	41dc <spss_varinfo_compare@plt>
   171ac:	cmp	r0, #0
   171b0:	bge	17184 <readstat_parse_sav+0x3e8>
   171b4:	mov	r6, r4
   171b8:	b	1718c <readstat_parse_sav+0x3f0>
   171bc:	cmp	r5, #7
   171c0:	beq	175f0 <readstat_parse_sav+0x854>
   171c4:	movw	r3, #999	; 0x3e7
   171c8:	ldr	r8, [sp, #16]
   171cc:	cmp	r5, r3
   171d0:	ldr	r9, [sp, #32]
   171d4:	ldr	sl, [sp, #36]	; 0x24
   171d8:	bne	1751c <readstat_parse_sav+0x780>
   171dc:	add	r4, sp, #568	; 0x238
   171e0:	mov	r1, #4
   171e4:	ldr	r3, [r7, #36]	; 0x24
   171e8:	mov	r0, r4
   171ec:	ldr	r5, [r3, #12]
   171f0:	ldr	r2, [r3, #20]
   171f4:	blx	r5
   171f8:	cmp	r0, #3
   171fc:	ldr	r0, [sp, #40]	; 0x28
   17200:	bls	17ce8 <readstat_parse_sav+0xf4c>
   17204:	bl	3e94 <free@plt>
   17208:	ldr	r0, [r7, #340]	; 0x154
   1720c:	mov	ip, #0
   17210:	str	ip, [r7, #348]	; 0x15c
   17214:	cmp	r0, ip
   17218:	movle	r0, ip
   1721c:	ble	17270 <readstat_parse_sav+0x4d4>
   17220:	ldr	lr, [r7, #44]	; 0x2c
   17224:	movw	r5, #2081	; 0x821
   17228:	movt	r5, #8322	; 0x2082
   1722c:	mov	r2, ip
   17230:	ldr	r1, [lr, r2, lsl #2]
   17234:	ldr	r6, [r1, #20]
   17238:	str	ip, [r1, #8]
   1723c:	add	ip, ip, #1
   17240:	add	r3, r6, #251	; 0xfb
   17244:	cmp	r6, #0
   17248:	lsr	r3, r3, #2
   1724c:	ldreq	r3, [r1, #48]	; 0x30
   17250:	umullne	r6, r3, r5, r3
   17254:	lsrne	r3, r3, #3
   17258:	add	r2, r2, r3
   1725c:	strne	r3, [r1, #48]	; 0x30
   17260:	cmp	r2, r0
   17264:	blt	17230 <readstat_parse_sav+0x494>
   17268:	mov	r0, ip
   1726c:	str	ip, [r7, #348]	; 0x15c
   17270:	mov	r1, #4
   17274:	bl	3f9c <readstat_calloc@plt>
   17278:	ldr	r6, [r7, #348]	; 0x15c
   1727c:	str	r0, [r7, #52]	; 0x34
   17280:	cmp	r6, #0
   17284:	beq	17ce0 <readstat_parse_sav+0xf44>
   17288:	ldr	r3, [r7]
   1728c:	cmp	r3, #0
   17290:	beq	17354 <readstat_parse_sav+0x5b8>
   17294:	add	r1, sp, #608	; 0x260
   17298:	mov	r2, #0
   1729c:	asr	fp, r6, #31
   172a0:	ldr	r0, [r7, #352]	; 0x160
   172a4:	mov	r3, #0
   172a8:	add	ip, sp, #576	; 0x240
   172ac:	add	r5, r7, #64	; 0x40
   172b0:	strd	r2, [r1]
   172b4:	strd	r2, [r1, #8]
   172b8:	add	r2, sl, #109	; 0x6d
   172bc:	mov	sl, r6
   172c0:	ldr	r6, [r7, #56]	; 0x38
   172c4:	cmn	r0, #1
   172c8:	ldr	r3, [r7, #424]	; 0x1a8
   172cc:	mvneq	r0, #0
   172d0:	mvneq	r1, #0
   172d4:	ldrne	r0, [r7, #356]	; 0x164
   172d8:	ldr	lr, [r7, #324]	; 0x144
   172dc:	strd	sl, [ip]
   172e0:	asr	fp, r3, #31
   172e4:	ldr	sl, [r7, #336]	; 0x150
   172e8:	asrne	r1, r0, #31
   172ec:	strd	r0, [ip, #-8]
   172f0:	mov	r0, r5
   172f4:	movw	r1, #257	; 0x101
   172f8:	str	sl, [sp, #16]
   172fc:	mov	sl, r3
   17300:	mov	r3, #64	; 0x40
   17304:	str	lr, [sp, #584]	; 0x248
   17308:	str	lr, [sp, #588]	; 0x24c
   1730c:	ldr	lr, [r7, #428]	; 0x1ac
   17310:	strd	sl, [ip, #16]
   17314:	ldr	sl, [sp, #16]
   17318:	ldr	ip, [r7, #432]	; 0x1b0
   1731c:	str	sl, [sp]
   17320:	str	lr, [sp, #600]	; 0x258
   17324:	str	ip, [sp, #604]	; 0x25c
   17328:	str	r6, [sp, #616]	; 0x268
   1732c:	bl	420c <readstat_convert@plt>
   17330:	cmp	r0, #0
   17334:	bne	17e74 <readstat_parse_sav+0x10d8>
   17338:	mov	r0, r4
   1733c:	ldr	r3, [r7]
   17340:	ldr	r1, [r7, #40]	; 0x28
   17344:	str	r5, [sp, #612]	; 0x264
   17348:	blx	r3
   1734c:	cmp	r0, #0
   17350:	bne	17e70 <readstat_parse_sav+0x10d4>
   17354:	ldr	r3, [r7, #328]	; 0x148
   17358:	cmp	r3, #0
   1735c:	beq	17438 <readstat_parse_sav+0x69c>
   17360:	ldr	r6, [r7, #332]	; 0x14c
   17364:	ldr	r1, [r7, #340]	; 0x154
   17368:	lsl	r2, r1, #1
   1736c:	cmp	r6, r2
   17370:	beq	17380 <readstat_parse_sav+0x5e4>
   17374:	add	r2, r2, r1
   17378:	cmp	r6, r2
   1737c:	bne	17ce0 <readstat_parse_sav+0xf44>
   17380:	cmp	r1, #0
   17384:	ble	18300 <readstat_parse_sav+0x1564>
   17388:	sdiv	r6, r6, r1
   1738c:	mov	sl, #0
   17390:	str	r4, [sp, #16]
   17394:	mov	r4, r7
   17398:	cmp	r6, #3
   1739c:	moveq	r2, #1
   173a0:	movne	r2, #0
   173a4:	movne	r6, #2
   173a8:	mov	fp, r2
   173ac:	b	173dc <readstat_parse_sav+0x640>
   173b0:	.word	0x00000000
   173b4:	.word	0x7ff80000
   173b8:	.word	0x00000000
   173bc:	.word	0xfff00000
   173c0:	.word	0x00000000
   173c4:	.word	0x7ff00000
	...
   173d0:	.word	0x0000efcc
   173d4:	.word	0x0000ed48
   173d8:	ldr	r3, [r4, #328]	; 0x148
   173dc:	mul	r5, r6, sl
   173e0:	ldr	r1, [r4, #44]	; 0x2c
   173e4:	ldr	r0, [r3, r5, lsl #2]
   173e8:	add	r5, r5, #1
   173ec:	ldr	r7, [r1, sl, lsl #2]
   173f0:	bl	4380 <spss_measure_to_readstat_measure@plt>
   173f4:	ldr	r1, [r4, #328]	; 0x148
   173f8:	cmp	fp, #0
   173fc:	lsl	r3, r5, #2
   17400:	addne	r3, r3, #4
   17404:	str	r0, [r7, #268]	; 0x10c
   17408:	ldrne	r0, [r1, r5, lsl #2]
   1740c:	strne	r0, [r7, #276]	; 0x114
   17410:	ldr	r0, [r1, r3]
   17414:	bl	435c <spss_alignment_to_readstat_alignment@plt>
   17418:	ldr	r1, [r7, #48]	; 0x30
   1741c:	ldr	r3, [r4, #340]	; 0x154
   17420:	str	r0, [r7, #272]	; 0x110
   17424:	add	sl, sl, r1
   17428:	cmp	sl, r3
   1742c:	blt	173d8 <readstat_parse_sav+0x63c>
   17430:	mov	r7, r4
   17434:	ldr	r4, [sp, #16]
   17438:	ldr	r3, [r7, #8]
   1743c:	cmp	r3, #0
   17440:	beq	18300 <readstat_parse_sav+0x1564>
   17444:	ldr	r3, [r7, #340]	; 0x154
   17448:	cmp	r3, #0
   1744c:	ble	18300 <readstat_parse_sav+0x1564>
   17450:	ldr	sl, [pc, #-136]	; 173d0 <readstat_parse_sav+0x634>
   17454:	mov	fp, #0
   17458:	mov	r6, fp
   1745c:	str	r8, [sp, #16]
   17460:	str	r9, [sp, #24]
   17464:	add	sl, pc, sl
   17468:	b	174a0 <readstat_parse_sav+0x704>
   1746c:	cmp	r0, #2
   17470:	addne	fp, fp, #1
   17474:	bne	1748c <readstat_parse_sav+0x6f0>
   17478:	ldr	r2, [r5, #8]
   1747c:	ldr	r3, [r7, #52]	; 0x34
   17480:	ldr	r3, [r3, r2, lsl #2]
   17484:	mov	r2, #1
   17488:	str	r2, [r3, #2144]	; 0x860
   1748c:	ldr	r2, [r5, #48]	; 0x30
   17490:	ldr	r3, [r7, #340]	; 0x154
   17494:	add	r6, r6, r2
   17498:	cmp	r6, r3
   1749c:	bge	182f8 <readstat_parse_sav+0x155c>
   174a0:	ldr	r3, [r7, #44]	; 0x2c
   174a4:	mov	r1, fp
   174a8:	ldr	r8, [r7, #52]	; 0x34
   174ac:	ldr	r2, [r7, #336]	; 0x150
   174b0:	ldr	r5, [r3, r6, lsl #2]
   174b4:	ldr	r9, [r5, #8]
   174b8:	mov	r0, r5
   174bc:	bl	4248 <spss_init_variable_for_info@plt>
   174c0:	mov	r2, sl
   174c4:	mov	r1, #256	; 0x100
   174c8:	ldr	r3, [r5, #4]
   174cc:	str	r0, [r8, r9, lsl #2]
   174d0:	mov	r0, r4
   174d4:	bl	4254 <snprintf@plt>
   174d8:	ldr	r3, [r5, #4]
   174dc:	ldr	r1, [r5, #8]
   174e0:	ldr	r8, [r7, #8]
   174e4:	cmn	r3, #1
   174e8:	ldr	ip, [r7, #52]	; 0x34
   174ec:	movne	r2, r4
   174f0:	moveq	r2, #0
   174f4:	mov	r0, r1
   174f8:	ldr	r3, [r7, #40]	; 0x28
   174fc:	ldr	r1, [ip, r1, lsl #2]
   17500:	blx	r8
   17504:	cmp	r0, #1
   17508:	bne	1746c <readstat_parse_sav+0x6d0>
   1750c:	mov	r9, #4
   17510:	ldr	r8, [sp, #16]
   17514:	b	16f80 <readstat_parse_sav+0x1e4>
   17518:	ldr	r8, [sp, #16]
   1751c:	mov	fp, #5
   17520:	ldr	r0, [sp, #40]	; 0x28
   17524:	mov	r9, fp
   17528:	bl	3e94 <free@plt>
   1752c:	b	16f80 <readstat_parse_sav+0x1e4>
   17530:	mov	r0, r5
   17534:	bl	3d68 <byteswap4@plt>
   17538:	mov	r5, r0
   1753c:	str	r0, [sp, #76]	; 0x4c
   17540:	b	17044 <readstat_parse_sav+0x2a8>
   17544:	mov	r3, #0
   17548:	add	r4, sp, #568	; 0x238
   1754c:	ldr	r6, [r7, #36]	; 0x24
   17550:	ldr	r2, [r7, #48]	; 0x30
   17554:	ldr	r1, [r7, #340]	; 0x154
   17558:	str	r3, [r4, #4]
   1755c:	str	r3, [r4, #8]
   17560:	str	r3, [r4, #12]
   17564:	str	r3, [r4, #16]
   17568:	cmp	r1, r2
   1756c:	str	r3, [r4, #20]
   17570:	str	r3, [r4, #24]
   17574:	str	r3, [sp, #568]	; 0x238
   17578:	beq	18220 <readstat_parse_sav+0x1484>
   1757c:	mov	r0, r4
   17580:	mov	r1, #28
   17584:	ldr	r3, [r6, #12]
   17588:	ldr	r2, [r6, #20]
   1758c:	blx	r3
   17590:	cmp	r0, #27
   17594:	bls	17e34 <readstat_parse_sav+0x1098>
   17598:	ldrb	r3, [r7, #436]	; 0x1b4
   1759c:	ldr	r0, [sp, #580]	; 0x244
   175a0:	tst	r3, #1
   175a4:	bne	181e0 <readstat_parse_sav+0x1444>
   175a8:	ldr	r0, [sp, #584]	; 0x248
   175ac:	str	r0, [sp, #584]	; 0x248
   175b0:	ldr	r4, [sp, #568]	; 0x238
   175b4:	cmp	r4, #0
   175b8:	bge	17e98 <readstat_parse_sav+0x10fc>
   175bc:	ldr	r3, [r7, #340]	; 0x154
   175c0:	cmp	r3, #0
   175c4:	beq	181cc <readstat_parse_sav+0x1430>
   175c8:	ldr	r1, [r7, #44]	; 0x2c
   175cc:	sub	r3, r3, #-1073741823	; 0xc0000001
   175d0:	ldr	r2, [r7, #344]	; 0x158
   175d4:	ldr	r1, [r1, r3, lsl #2]
   175d8:	add	r3, r2, #1
   175dc:	str	r3, [r7, #344]	; 0x158
   175e0:	ldr	r3, [r1, #16]
   175e4:	add	r3, r3, #1
   175e8:	str	r3, [r1, #16]
   175ec:	b	17014 <readstat_parse_sav+0x278>
   175f0:	ldr	r2, [sp, #24]
   175f4:	add	r4, sp, #84	; 0x54
   175f8:	mov	r1, #12
   175fc:	mov	r0, r4
   17600:	ldr	r3, [r2, #12]
   17604:	ldr	r2, [r2, #20]
   17608:	blx	r3
   1760c:	cmp	r0, #11
   17610:	bls	17cc0 <readstat_parse_sav+0xf24>
   17614:	ldrb	r3, [r7, #436]	; 0x1b4
   17618:	tst	r3, #1
   1761c:	bne	17e7c <readstat_parse_sav+0x10e0>
   17620:	ldr	r3, [sp, #56]	; 0x38
   17624:	ldr	r8, [sp, #88]	; 0x58
   17628:	ldr	r6, [sp, #92]	; 0x5c
   1762c:	ldr	r5, [sp, #84]	; 0x54
   17630:	mul	sl, r6, r8
   17634:	cmp	sl, r3
   17638:	bhi	17e50 <readstat_parse_sav+0x10b4>
   1763c:	cmp	sl, #0
   17640:	beq	17518 <readstat_parse_sav+0x77c>
   17644:	ldr	r2, [sp, #24]
   17648:	mov	r1, sl
   1764c:	ldr	r0, [sp, #40]	; 0x28
   17650:	ldr	r3, [r2, #12]
   17654:	ldr	r2, [r2, #20]
   17658:	blx	r3
   1765c:	cmp	sl, r0
   17660:	bhi	17518 <readstat_parse_sav+0x77c>
   17664:	sub	r5, r5, #4
   17668:	cmp	r5, #18
   1766c:	addls	pc, pc, r5, lsl #2
   17670:	b	17014 <readstat_parse_sav+0x278>
   17674:	b	17a2c <readstat_parse_sav+0xc90>
   17678:	b	17014 <readstat_parse_sav+0x278>
   1767c:	b	17014 <readstat_parse_sav+0x278>
   17680:	b	17014 <readstat_parse_sav+0x278>
   17684:	b	17014 <readstat_parse_sav+0x278>
   17688:	b	17014 <readstat_parse_sav+0x278>
   1768c:	b	17014 <readstat_parse_sav+0x278>
   17690:	b	179b0 <readstat_parse_sav+0xc14>
   17694:	b	17014 <readstat_parse_sav+0x278>
   17698:	b	17994 <readstat_parse_sav+0xbf8>
   1769c:	b	17974 <readstat_parse_sav+0xbd8>
   176a0:	b	17014 <readstat_parse_sav+0x278>
   176a4:	b	17014 <readstat_parse_sav+0x278>
   176a8:	b	17014 <readstat_parse_sav+0x278>
   176ac:	b	17014 <readstat_parse_sav+0x278>
   176b0:	b	17014 <readstat_parse_sav+0x278>
   176b4:	b	17014 <readstat_parse_sav+0x278>
   176b8:	b	176c0 <readstat_parse_sav+0x924>
   176bc:	b	17ab0 <readstat_parse_sav+0xd14>
   176c0:	ldr	r3, [r7, #20]
   176c4:	cmp	r3, #0
   176c8:	beq	17014 <readstat_parse_sav+0x278>
   176cc:	cmp	r8, #1
   176d0:	bne	181cc <readstat_parse_sav+0x1430>
   176d4:	ldr	r2, [pc, #-776]	; 173d4 <readstat_parse_sav+0x638>
   176d8:	mov	r9, #0
   176dc:	mov	r5, r9
   176e0:	ldr	r3, [sp, #40]	; 0x28
   176e4:	str	r9, [sp, #44]	; 0x2c
   176e8:	add	r2, pc, r2
   176ec:	add	sl, r3, sl
   176f0:	mov	r8, r3
   176f4:	str	r2, [sp, #68]	; 0x44
   176f8:	str	r3, [sp, #80]	; 0x50
   176fc:	add	r3, sp, #104	; 0x68
   17700:	str	r3, [sp, #60]	; 0x3c
   17704:	cmp	sl, r8
   17708:	bls	18aec <readstat_parse_sav+0x1d50>
   1770c:	add	r3, sp, #312	; 0x138
   17710:	mov	r2, #256	; 0x100
   17714:	mov	r0, r3
   17718:	mov	r1, #0
   1771c:	add	r9, sp, #568	; 0x238
   17720:	str	r3, [sp, #48]	; 0x30
   17724:	bl	4278 <memset@plt>
   17728:	sub	r2, sl, r8
   1772c:	mov	r0, r9
   17730:	mov	r3, r7
   17734:	add	r1, sp, #80	; 0x50
   17738:	bl	16a5c <sav_read_pascal_string.constprop.5>
   1773c:	subs	fp, r0, #0
   17740:	bne	18ae4 <readstat_parse_sav+0x1d48>
   17744:	ldr	r6, [r7, #340]	; 0x154
   17748:	cmp	r6, #0
   1774c:	beq	177b4 <readstat_parse_sav+0xa18>
   17750:	mov	r8, fp
   17754:	str	r5, [sp, #64]	; 0x40
   17758:	ldr	r4, [r7, #44]	; 0x2c
   1775c:	b	17770 <readstat_parse_sav+0x9d4>
   17760:	ldr	r3, [r5, #48]	; 0x30
   17764:	add	r8, r8, r3
   17768:	cmp	r8, r6
   1776c:	bcs	18548 <readstat_parse_sav+0x17ac>
   17770:	ldr	r5, [r4, r8, lsl #2]
   17774:	mov	r0, r9
   17778:	add	r1, r5, #196	; 0xc4
   1777c:	bl	3dd4 <strcmp@plt>
   17780:	cmp	r0, #0
   17784:	bne	17760 <readstat_parse_sav+0x9c4>
   17788:	ldr	ip, [r7, #368]	; 0x170
   1778c:	mov	r4, r5
   17790:	mov	r1, #256	; 0x100
   17794:	ldr	r0, [sp, #48]	; 0x30
   17798:	ldr	r5, [sp, #64]	; 0x40
   1779c:	add	lr, ip, #1
   177a0:	mov	r3, ip
   177a4:	ldr	r2, [sp, #68]	; 0x44
   177a8:	str	lr, [r7, #368]	; 0x170
   177ac:	str	ip, [r4, #4]
   177b0:	bl	4254 <snprintf@plt>
   177b4:	ldrb	r3, [sp, #312]	; 0x138
   177b8:	cmp	r3, #0
   177bc:	beq	18a18 <readstat_parse_sav+0x1c7c>
   177c0:	ldr	r8, [sp, #80]	; 0x50
   177c4:	mov	r3, r8
   177c8:	add	r8, r8, #4
   177cc:	add	r2, r3, #8
   177d0:	cmp	sl, r2
   177d4:	str	r8, [sp, #80]	; 0x50
   177d8:	bcc	18a18 <readstat_parse_sav+0x1c7c>
   177dc:	ldrb	r2, [r7, #436]	; 0x1b4
   177e0:	ldr	r6, [r3, #4]
   177e4:	tst	r2, #1
   177e8:	bne	185f4 <readstat_parse_sav+0x1858>
   177ec:	mov	r3, r8
   177f0:	add	r8, r8, #4
   177f4:	cmp	r6, #0
   177f8:	str	r8, [sp, #80]	; 0x50
   177fc:	beq	17704 <readstat_parse_sav+0x968>
   17800:	add	r3, r3, #8
   17804:	cmp	sl, r3
   17808:	bcc	189c4 <readstat_parse_sav+0x1c28>
   1780c:	add	r9, sp, #96	; 0x60
   17810:	mov	r2, r8
   17814:	str	r6, [sp, #64]	; 0x40
   17818:	ldr	r6, [sp, #44]	; 0x2c
   1781c:	b	17950 <readstat_parse_sav+0xbb4>
   17820:	lsl	r3, r4, #2
   17824:	add	r2, r2, #4
   17828:	mov	r0, r5
   1782c:	add	r8, r3, #1
   17830:	str	r2, [sp, #80]	; 0x50
   17834:	mov	r1, r8
   17838:	bl	42b4 <readstat_realloc@plt>
   1783c:	subs	r5, r0, #0
   17840:	beq	187a0 <readstat_parse_sav+0x1a04>
   17844:	ldr	r2, [sp, #80]	; 0x50
   17848:	add	r1, r2, r4
   1784c:	cmp	sl, r1
   17850:	bcc	1855c <readstat_parse_sav+0x17c0>
   17854:	ldr	ip, [r7, #336]	; 0x150
   17858:	mov	r3, r4
   1785c:	mov	r1, r8
   17860:	str	ip, [sp]
   17864:	bl	420c <readstat_convert@plt>
   17868:	subs	r3, r0, #0
   1786c:	bne	1883c <readstat_parse_sav+0x1aa0>
   17870:	ldr	r3, [sp, #80]	; 0x50
   17874:	add	r4, r3, r4
   17878:	add	r2, r4, #4
   1787c:	cmp	sl, r2
   17880:	str	r4, [sp, #80]	; 0x50
   17884:	bcc	1855c <readstat_parse_sav+0x17c0>
   17888:	ldrb	r3, [r7, #436]	; 0x1b4
   1788c:	ldr	r4, [r4]
   17890:	tst	r3, #1
   17894:	bne	182b4 <readstat_parse_sav+0x1518>
   17898:	lsl	r3, r4, #2
   1789c:	mov	r0, r6
   178a0:	str	r2, [sp, #80]	; 0x50
   178a4:	add	r8, r3, #1
   178a8:	mov	r1, r8
   178ac:	bl	42b4 <readstat_realloc@plt>
   178b0:	subs	r6, r0, #0
   178b4:	beq	187a0 <readstat_parse_sav+0x1a04>
   178b8:	ldr	r2, [sp, #80]	; 0x50
   178bc:	add	r1, r2, r4
   178c0:	cmp	sl, r1
   178c4:	bcc	1855c <readstat_parse_sav+0x17c0>
   178c8:	ldr	ip, [r7, #336]	; 0x150
   178cc:	mov	r3, r4
   178d0:	mov	r1, r8
   178d4:	str	ip, [sp]
   178d8:	bl	420c <readstat_convert@plt>
   178dc:	subs	r3, r0, #0
   178e0:	bne	1883c <readstat_parse_sav+0x1aa0>
   178e4:	str	r5, [sp, #96]	; 0x60
   178e8:	ldr	r1, [sp, #80]	; 0x50
   178ec:	str	r3, [sp, #100]	; 0x64
   178f0:	str	r3, [sp, #104]	; 0x68
   178f4:	str	r3, [sp, #108]	; 0x6c
   178f8:	ldr	r0, [sp, #48]	; 0x30
   178fc:	add	r4, r1, r4
   17900:	ldr	r3, [sp, #60]	; 0x3c
   17904:	str	r4, [sp, #80]	; 0x50
   17908:	ldr	r1, [r7, #40]	; 0x28
   1790c:	ldrd	r2, [r3]
   17910:	strd	r2, [sp]
   17914:	str	r6, [sp, #8]
   17918:	ldm	r9, {r2, r3}
   1791c:	str	r1, [sp, #12]
   17920:	ldr	r1, [r7, #20]
   17924:	blx	r1
   17928:	cmp	r0, #0
   1792c:	bne	189a0 <readstat_parse_sav+0x1c04>
   17930:	ldr	r3, [sp, #64]	; 0x40
   17934:	add	fp, fp, #1
   17938:	ldr	r2, [sp, #80]	; 0x50
   1793c:	cmp	fp, r3
   17940:	beq	18994 <readstat_parse_sav+0x1bf8>
   17944:	add	r3, r2, #4
   17948:	cmp	sl, r3
   1794c:	bcc	1855c <readstat_parse_sav+0x17c0>
   17950:	ldrb	r3, [r7, #436]	; 0x1b4
   17954:	ldr	r4, [r2]
   17958:	tst	r3, #1
   1795c:	beq	17820 <readstat_parse_sav+0xa84>
   17960:	mov	r0, r4
   17964:	bl	3d68 <byteswap4@plt>
   17968:	mov	r4, r0
   1796c:	ldr	r2, [sp, #80]	; 0x50
   17970:	b	17820 <readstat_parse_sav+0xa84>
   17974:	mov	r1, r6
   17978:	mov	r2, r7
   1797c:	ldr	r0, [sp, #40]	; 0x28
   17980:	bl	42a8 <sav_parse_very_long_string_record@plt>
   17984:	subs	fp, r0, #0
   17988:	beq	17014 <readstat_parse_sav+0x278>
   1798c:	ldr	r8, [sp, #16]
   17990:	b	17520 <readstat_parse_sav+0x784>
   17994:	mov	r1, r6
   17998:	mov	r2, r7
   1799c:	ldr	r0, [sp, #40]	; 0x28
   179a0:	bl	41c4 <sav_parse_long_variable_names_record@plt>
   179a4:	subs	fp, r0, #0
   179a8:	beq	17014 <readstat_parse_sav+0x278>
   179ac:	b	1798c <readstat_parse_sav+0xbf0>
   179b0:	cmp	r8, #4
   179b4:	bne	17518 <readstat_parse_sav+0x77c>
   179b8:	lsl	r4, r6, #2
   179bc:	ldr	r0, [r7, #328]	; 0x148
   179c0:	mov	r1, r4
   179c4:	bl	42b4 <readstat_realloc@plt>
   179c8:	clz	r3, r0
   179cc:	cmp	r6, #0
   179d0:	str	r0, [r7, #328]	; 0x148
   179d4:	lsr	r3, r3, #5
   179d8:	moveq	r3, #0
   179dc:	cmp	r3, #0
   179e0:	bne	18550 <readstat_parse_sav+0x17b4>
   179e4:	cmp	r6, #0
   179e8:	str	r6, [r7, #332]	; 0x14c
   179ec:	beq	17014 <readstat_parse_sav+0x278>
   179f0:	ldr	r8, [sp, #40]	; 0x28
   179f4:	add	r6, r4, r8
   179f8:	mov	r4, r8
   179fc:	b	17a10 <readstat_parse_sav+0xc74>
   17a00:	ldr	r3, [r7, #328]	; 0x148
   17a04:	cmp	r6, r4
   17a08:	str	r0, [r3, r5]
   17a0c:	beq	17014 <readstat_parse_sav+0x278>
   17a10:	ldrb	r3, [r7, #436]	; 0x1b4
   17a14:	sub	r5, r4, r8
   17a18:	ldr	r0, [r4], #4
   17a1c:	tst	r3, #1
   17a20:	beq	17a00 <readstat_parse_sav+0xc64>
   17a24:	bl	3d68 <byteswap4@plt>
   17a28:	b	17a00 <readstat_parse_sav+0xc64>
   17a2c:	cmp	r6, #3
   17a30:	cmpeq	r8, #8
   17a34:	bne	17518 <readstat_parse_sav+0x77c>
   17a38:	ldr	lr, [sp, #40]	; 0x28
   17a3c:	ldrb	r2, [r7, #436]	; 0x1b4
   17a40:	ldr	ip, [lr, #4]
   17a44:	ldr	r1, [lr]
   17a48:	tst	r2, #1
   17a4c:	ldr	r0, [lr, #8]
   17a50:	str	ip, [sp, #116]	; 0x74
   17a54:	mov	ip, lr
   17a58:	ldr	ip, [ip, #20]
   17a5c:	str	r1, [sp, #112]	; 0x70
   17a60:	ldr	r1, [lr, #12]
   17a64:	str	r0, [sp, #120]	; 0x78
   17a68:	ldr	lr, [lr, #16]
   17a6c:	str	r1, [sp, #124]	; 0x7c
   17a70:	str	ip, [sp, #132]	; 0x84
   17a74:	str	lr, [sp, #128]	; 0x80
   17a78:	ldrd	r0, [sp, #112]	; 0x70
   17a7c:	ldrd	r4, [sp, #120]	; 0x78
   17a80:	ldrd	r8, [sp, #128]	; 0x80
   17a84:	bne	185c0 <readstat_parse_sav+0x1824>
   17a88:	add	r6, r7, #400	; 0x190
   17a8c:	tst	r2, #1
   17a90:	strd	r0, [r6, #-8]
   17a94:	bne	185a4 <readstat_parse_sav+0x1808>
   17a98:	add	r3, r7, #416	; 0x1a0
   17a9c:	tst	r2, #1
   17aa0:	strd	r4, [r3, #-8]
   17aa4:	bne	185cc <readstat_parse_sav+0x1830>
   17aa8:	strd	r8, [r6]
   17aac:	b	17014 <readstat_parse_sav+0x278>
   17ab0:	cmp	r8, #1
   17ab4:	bne	181cc <readstat_parse_sav+0x1430>
   17ab8:	ldr	r3, [sp, #40]	; 0x28
   17abc:	add	r5, sp, #568	; 0x238
   17ac0:	add	sl, r3, sl
   17ac4:	mov	r2, r3
   17ac8:	str	r3, [sp, #312]	; 0x138
   17acc:	add	r3, sp, #312	; 0x138
   17ad0:	str	r3, [sp, #48]	; 0x30
   17ad4:	cmp	sl, r2
   17ad8:	bls	181c8 <readstat_parse_sav+0x142c>
   17adc:	sub	r2, sl, r2
   17ae0:	mov	r3, r7
   17ae4:	ldr	r1, [sp, #48]	; 0x30
   17ae8:	mov	r0, r5
   17aec:	bl	16a5c <sav_read_pascal_string.constprop.5>
   17af0:	subs	fp, r0, #0
   17af4:	bne	1798c <readstat_parse_sav+0xbf0>
   17af8:	ldr	r9, [sp, #312]	; 0x138
   17afc:	cmp	sl, r9
   17b00:	beq	17518 <readstat_parse_sav+0x77c>
   17b04:	add	r3, r9, #1
   17b08:	str	r3, [sp, #312]	; 0x138
   17b0c:	ldrb	r3, [r9]
   17b10:	str	r3, [sp, #44]	; 0x2c
   17b14:	sub	r3, r3, #1
   17b18:	cmp	r3, #2
   17b1c:	bhi	17518 <readstat_parse_sav+0x77c>
   17b20:	ldr	r4, [r7, #340]	; 0x154
   17b24:	cmp	r4, #0
   17b28:	beq	17518 <readstat_parse_sav+0x77c>
   17b2c:	ldr	r6, [r7, #44]	; 0x2c
   17b30:	b	17b44 <readstat_parse_sav+0xda8>
   17b34:	ldr	r3, [r8, #48]	; 0x30
   17b38:	add	fp, fp, r3
   17b3c:	cmp	r4, fp
   17b40:	bls	1827c <readstat_parse_sav+0x14e0>
   17b44:	ldr	r8, [r6, fp, lsl #2]
   17b48:	mov	r0, r5
   17b4c:	add	r1, r8, #196	; 0xc4
   17b50:	bl	3dd4 <strcmp@plt>
   17b54:	cmp	r0, #0
   17b58:	bne	17b34 <readstat_parse_sav+0xd98>
   17b5c:	ldr	r3, [sp, #44]	; 0x2c
   17b60:	add	r2, r9, #5
   17b64:	cmp	sl, r2
   17b68:	str	r3, [r8, #52]	; 0x34
   17b6c:	bcc	17518 <readstat_parse_sav+0x77c>
   17b70:	ldrb	r2, [r7, #436]	; 0x1b4
   17b74:	ldr	r4, [r9, #1]
   17b78:	tst	r2, #1
   17b7c:	bne	185e4 <readstat_parse_sav+0x1848>
   17b80:	ldr	r2, [sp, #312]	; 0x138
   17b84:	add	r2, r2, #4
   17b88:	add	r1, r2, r4
   17b8c:	cmp	sl, r1
   17b90:	str	r2, [sp, #312]	; 0x138
   17b94:	bcc	17518 <readstat_parse_sav+0x77c>
   17b98:	ldr	r3, [sp, #44]	; 0x2c
   17b9c:	mov	r1, #33	; 0x21
   17ba0:	add	r6, r8, #88	; 0x58
   17ba4:	mla	r3, r1, r3, r8
   17ba8:	add	r8, r3, #55	; 0x37
   17bac:	b	17bd4 <readstat_parse_sav+0xe38>
   17bb0:	ldr	r2, [sp, #312]	; 0x138
   17bb4:	cmp	r8, r6
   17bb8:	add	r6, r6, #33	; 0x21
   17bbc:	add	r2, r2, r4
   17bc0:	add	r3, r2, r4
   17bc4:	str	r2, [sp, #312]	; 0x138
   17bc8:	beq	18278 <readstat_parse_sav+0x14dc>
   17bcc:	cmp	sl, r3
   17bd0:	bcc	17518 <readstat_parse_sav+0x77c>
   17bd4:	ldr	ip, [r7, #336]	; 0x150
   17bd8:	mov	r3, r4
   17bdc:	mov	r1, #33	; 0x21
   17be0:	mov	r0, r6
   17be4:	str	ip, [sp]
   17be8:	bl	420c <readstat_convert@plt>
   17bec:	cmp	r0, #0
   17bf0:	beq	17bb0 <readstat_parse_sav+0xe14>
   17bf4:	mov	fp, r0
   17bf8:	ldr	r8, [sp, #16]
   17bfc:	b	17520 <readstat_parse_sav+0x784>
   17c00:	ldr	r3, [r7, #4]
   17c04:	cmp	r3, #0
   17c08:	beq	17ccc <readstat_parse_sav+0xf30>
   17c0c:	ldr	r5, [r7, #36]	; 0x24
   17c10:	mov	r1, #4
   17c14:	add	r0, sp, #96	; 0x60
   17c18:	ldr	r3, [r5, #12]
   17c1c:	ldr	r2, [r5, #20]
   17c20:	blx	r3
   17c24:	cmp	r0, #3
   17c28:	bls	18258 <readstat_parse_sav+0x14bc>
   17c2c:	ldrb	r3, [r7, #436]	; 0x1b4
   17c30:	ldr	r0, [sp, #96]	; 0x60
   17c34:	tst	r3, #1
   17c38:	bne	181b0 <readstat_parse_sav+0x1414>
   17c3c:	cmp	r0, #0
   17c40:	movne	r4, #0
   17c44:	addne	r6, sp, #312	; 0x138
   17c48:	addne	r8, sp, #568	; 0x238
   17c4c:	bne	17c94 <readstat_parse_sav+0xef8>
   17c50:	b	17014 <readstat_parse_sav+0x278>
   17c54:	ldr	ip, [r7, #336]	; 0x150
   17c58:	str	ip, [sp]
   17c5c:	bl	420c <readstat_convert@plt>
   17c60:	subs	fp, r0, #0
   17c64:	mov	r1, r8
   17c68:	mov	r0, r4
   17c6c:	add	r4, r4, #1
   17c70:	bne	1798c <readstat_parse_sav+0xbf0>
   17c74:	ldr	r3, [r7, #4]
   17c78:	ldr	r2, [r7, #40]	; 0x28
   17c7c:	blx	r3
   17c80:	cmp	r0, #0
   17c84:	bne	1826c <readstat_parse_sav+0x14d0>
   17c88:	ldr	r3, [sp, #96]	; 0x60
   17c8c:	cmp	r3, r4
   17c90:	bls	17014 <readstat_parse_sav+0x278>
   17c94:	mov	r1, #80	; 0x50
   17c98:	mov	r0, r6
   17c9c:	ldr	r3, [r5, #12]
   17ca0:	ldr	r2, [r5, #20]
   17ca4:	blx	r3
   17ca8:	cmp	r0, #79	; 0x4f
   17cac:	mov	r3, #80	; 0x50
   17cb0:	mov	r2, r6
   17cb4:	movw	r1, #321	; 0x141
   17cb8:	mov	r0, r8
   17cbc:	bgt	17c54 <readstat_parse_sav+0xeb8>
   17cc0:	mov	fp, #2
   17cc4:	ldr	r8, [sp, #16]
   17cc8:	b	17520 <readstat_parse_sav+0x784>
   17ccc:	mov	r0, r7
   17cd0:	bl	16138 <sav_skip_document_record>
   17cd4:	subs	fp, r0, #0
   17cd8:	beq	17014 <readstat_parse_sav+0x278>
   17cdc:	b	1798c <readstat_parse_sav+0xbf0>
   17ce0:	mov	r9, #5
   17ce4:	b	16f80 <readstat_parse_sav+0x1e4>
   17ce8:	mov	r9, #2
   17cec:	bl	3e94 <free@plt>
   17cf0:	b	16f80 <readstat_parse_sav+0x1e4>
   17cf4:	cmp	sl, #0
   17cf8:	beq	17d10 <readstat_parse_sav+0xf74>
   17cfc:	ldr	r3, [sl]
   17d00:	ldr	r2, [r7, #368]	; 0x170
   17d04:	ldr	r1, [r3]
   17d08:	str	r2, [r3, #4]
   17d0c:	str	r1, [sp, #64]	; 0x40
   17d10:	ldr	r3, [sp, #84]	; 0x54
   17d14:	add	r9, r9, #1
   17d18:	cmp	r3, r9
   17d1c:	bhi	17148 <readstat_parse_sav+0x3ac>
   17d20:	ldr	r5, [sp, #80]	; 0x50
   17d24:	cmp	r5, #0
   17d28:	beq	18a90 <readstat_parse_sav+0x1cf4>
   17d2c:	ldr	r4, [sp, #44]	; 0x2c
   17d30:	mov	r6, #0
   17d34:	ldr	r8, [sp, #64]	; 0x40
   17d38:	mov	sl, r4
   17d3c:	b	17d80 <readstat_parse_sav+0xfe4>
   17d40:	ldr	ip, [r7, #336]	; 0x150
   17d44:	add	r9, r4, #8
   17d48:	mov	r3, #8
   17d4c:	mov	r0, r9
   17d50:	mov	r2, r4
   17d54:	mov	r1, #33	; 0x21
   17d58:	str	ip, [sp]
   17d5c:	bl	420c <readstat_convert@plt>
   17d60:	cmp	r0, #0
   17d64:	bne	18844 <readstat_parse_sav+0x1aa8>
   17d68:	str	r9, [r4, #48]	; 0x30
   17d6c:	ldr	r3, [sp, #80]	; 0x50
   17d70:	add	r6, r6, #1
   17d74:	add	r4, r4, #72	; 0x48
   17d78:	cmp	r3, r6
   17d7c:	bls	186cc <readstat_parse_sav+0x1930>
   17d80:	cmp	r8, #5
   17d84:	vstr	d8, [sp, #568]	; 0x238
   17d88:	str	r8, [r4, #56]	; 0x38
   17d8c:	bne	17d40 <readstat_parse_sav+0xfa4>
   17d90:	ldr	r3, [r4, #4]
   17d94:	ldr	r2, [r4]
   17d98:	str	r2, [sp, #568]	; 0x238
   17d9c:	str	r3, [sp, #572]	; 0x23c
   17da0:	ldrb	r3, [r7, #436]	; 0x1b4
   17da4:	tst	r3, #1
   17da8:	bne	18518 <readstat_parse_sav+0x177c>
   17dac:	vldr	d7, [sp, #568]	; 0x238
   17db0:	add	ip, r7, #400	; 0x190
   17db4:	ldrd	r0, [ip, #-8]
   17db8:	vstr	d7, [sp, #48]	; 0x30
   17dbc:	ldrd	r2, [sp, #48]	; 0x30
   17dc0:	vstr	d7, [r4, #48]	; 0x30
   17dc4:	cmp	r3, r1
   17dc8:	cmpeq	r2, r0
   17dcc:	bne	17ddc <readstat_parse_sav+0x1040>
   17dd0:	ldrb	r1, [r4, #61]	; 0x3d
   17dd4:	orr	r1, r1, #1
   17dd8:	strb	r1, [r4, #61]	; 0x3d
   17ddc:	ldrd	r0, [ip]
   17de0:	cmp	r3, r1
   17de4:	cmpeq	r2, r0
   17de8:	bne	17df8 <readstat_parse_sav+0x105c>
   17dec:	ldrb	r1, [r4, #61]	; 0x3d
   17df0:	orr	r1, r1, #1
   17df4:	strb	r1, [r4, #61]	; 0x3d
   17df8:	add	r1, r7, #416	; 0x1a0
   17dfc:	ldrd	r0, [r1, #-8]
   17e00:	cmp	r3, r1
   17e04:	cmpeq	r2, r0
   17e08:	bne	17e18 <readstat_parse_sav+0x107c>
   17e0c:	ldrb	r3, [r4, #61]	; 0x3d
   17e10:	orr	r3, r3, #1
   17e14:	strb	r3, [r4, #61]	; 0x3d
   17e18:	vldr	d7, [sp, #48]	; 0x30
   17e1c:	vcmp.f64	d7, d7
   17e20:	vmrs	APSR_nzcv, fpscr
   17e24:	ldrbvs	r3, [r4, #61]	; 0x3d
   17e28:	orrvs	r3, r3, #1
   17e2c:	strbvs	r3, [r4, #61]	; 0x3d
   17e30:	b	17d6c <readstat_parse_sav+0xfd0>
   17e34:	mov	r0, #0
   17e38:	ldr	r8, [sp, #16]
   17e3c:	mov	r9, #2
   17e40:	bl	43ec <spss_varinfo_free@plt>
   17e44:	ldr	r0, [sp, #40]	; 0x28
   17e48:	bl	3e94 <free@plt>
   17e4c:	b	16f80 <readstat_parse_sav+0x1e4>
   17e50:	mov	r1, sl
   17e54:	ldr	r0, [sp, #40]	; 0x28
   17e58:	bl	42b4 <readstat_realloc@plt>
   17e5c:	subs	r3, r0, #0
   17e60:	str	r3, [sp, #40]	; 0x28
   17e64:	beq	181bc <readstat_parse_sav+0x1420>
   17e68:	str	sl, [sp, #56]	; 0x38
   17e6c:	b	17644 <readstat_parse_sav+0x8a8>
   17e70:	mov	r0, #4
   17e74:	mov	r9, r0
   17e78:	b	16f80 <readstat_parse_sav+0x1e4>
   17e7c:	mov	r5, #3
   17e80:	ldr	r0, [r4]
   17e84:	bl	3d68 <byteswap4@plt>
   17e88:	subs	r5, r5, #1
   17e8c:	str	r0, [r4], #4
   17e90:	bne	17e80 <readstat_parse_sav+0x10e4>
   17e94:	b	17620 <readstat_parse_sav+0x884>
   17e98:	mov	r1, #280	; 0x118
   17e9c:	mov	r0, #1
   17ea0:	bl	3f9c <readstat_calloc@plt>
   17ea4:	subs	r8, r0, #0
   17ea8:	beq	18240 <readstat_parse_sav+0x14a4>
   17eac:	ldr	lr, [r7, #340]	; 0x154
   17eb0:	mov	r1, #1
   17eb4:	mvn	r3, #0
   17eb8:	mov	ip, #0
   17ebc:	add	r6, sp, #588	; 0x24c
   17ec0:	ldr	r0, [r7, #344]	; 0x158
   17ec4:	mov	r2, r6
   17ec8:	stmib	r8, {r3, lr}
   17ecc:	mov	r3, #8
   17ed0:	str	r1, [r8, #48]	; 0x30
   17ed4:	strd	r0, [r8, #12]
   17ed8:	mov	r1, #9
   17edc:	add	r0, r8, #187	; 0xbb
   17ee0:	str	ip, [sp]
   17ee4:	bl	420c <readstat_convert@plt>
   17ee8:	subs	fp, r0, #0
   17eec:	bne	1828c <readstat_parse_sav+0x14f0>
   17ef0:	mov	r2, r6
   17ef4:	mov	r3, #8
   17ef8:	str	fp, [sp]
   17efc:	mov	r1, #65	; 0x41
   17f00:	add	r0, r8, #196	; 0xc4
   17f04:	bl	420c <readstat_convert@plt>
   17f08:	subs	fp, r0, #0
   17f0c:	bne	1828c <readstat_parse_sav+0x14f0>
   17f10:	ldr	ip, [sp, #572]	; 0x23c
   17f14:	ldr	lr, [sp, #580]	; 0x244
   17f18:	ldr	r2, [sp, #584]	; 0x248
   17f1c:	ubfx	r3, lr, #16, #8
   17f20:	uxtb	r0, lr
   17f24:	ubfx	lr, lr, #8, #8
   17f28:	ubfx	r1, r2, #16, #8
   17f2c:	str	r3, [r8, #24]
   17f30:	cmp	r1, #1
   17f34:	cmpne	r3, #1
   17f38:	str	lr, [r8, #28]
   17f3c:	moveq	r3, #1
   17f40:	movne	r3, #0
   17f44:	strd	r0, [r8, #32]
   17f48:	cmp	r4, #0
   17f4c:	uxtb	r0, r2
   17f50:	ubfx	r2, r2, #8, #8
   17f54:	moveq	r4, r3
   17f58:	movne	r4, #1
   17f5c:	cmp	r4, #0
   17f60:	moveq	fp, #5
   17f64:	cmp	ip, #0
   17f68:	str	fp, [r8]
   17f6c:	str	r2, [r8, #40]	; 0x28
   17f70:	str	r0, [r8, #44]	; 0x2c
   17f74:	bne	18608 <readstat_parse_sav+0x186c>
   17f78:	ldr	r0, [sp, #576]	; 0x240
   17f7c:	cmp	r0, #0
   17f80:	beq	184c0 <readstat_parse_sav+0x1724>
   17f84:	ldrb	r3, [r7, #436]	; 0x1b4
   17f88:	tst	r3, #1
   17f8c:	bne	189ac <readstat_parse_sav+0x1c10>
   17f90:	add	r3, r0, #3
   17f94:	str	r0, [r8, #52]	; 0x34
   17f98:	cmp	r3, #6
   17f9c:	bhi	189f8 <readstat_parse_sav+0x1c5c>
   17fa0:	cmp	r0, #0
   17fa4:	ldr	r3, [r8]
   17fa8:	blt	188dc <readstat_parse_sav+0x1b40>
   17fac:	mov	r2, #0
   17fb0:	cmp	r3, #5
   17fb4:	ldr	r5, [r7, #36]	; 0x24
   17fb8:	mov	r1, r0
   17fbc:	str	r2, [r8, #56]	; 0x38
   17fc0:	beq	188f8 <readstat_parse_sav+0x1b5c>
   17fc4:	cmp	r0, #0
   17fc8:	ble	184c0 <readstat_parse_sav+0x1724>
   17fcc:	add	r4, r8, #88	; 0x58
   17fd0:	mov	r9, #0
   17fd4:	add	r6, sp, #312	; 0x138
   17fd8:	b	18000 <readstat_parse_sav+0x1264>
   17fdc:	ldr	ip, [r7, #336]	; 0x150
   17fe0:	add	r4, r4, r1
   17fe4:	str	ip, [sp]
   17fe8:	bl	420c <readstat_convert@plt>
   17fec:	cmp	r0, #0
   17ff0:	bne	188cc <readstat_parse_sav+0x1b30>
   17ff4:	ldr	r3, [r8, #52]	; 0x34
   17ff8:	cmp	r9, r3
   17ffc:	bge	184c0 <readstat_parse_sav+0x1724>
   18000:	mov	r1, #8
   18004:	mov	r0, r6
   18008:	ldr	r3, [r5, #12]
   1800c:	add	r9, r9, #1
   18010:	ldr	r2, [r5, #20]
   18014:	blx	r3
   18018:	cmp	r0, #7
   1801c:	mov	r3, #8
   18020:	mov	r2, r6
   18024:	mov	r1, #33	; 0x21
   18028:	mov	r0, r4
   1802c:	bhi	17fdc <readstat_parse_sav+0x1240>
   18030:	mov	r5, r8
   18034:	ldr	r8, [sp, #16]
   18038:	mov	fp, #2
   1803c:	mov	r0, r5
   18040:	bl	43ec <spss_varinfo_free@plt>
   18044:	b	17520 <readstat_parse_sav+0x784>
   18048:	mov	r0, r6
   1804c:	mov	r1, #72	; 0x48
   18050:	bl	3f9c <readstat_calloc@plt>
   18054:	subs	r3, r0, #0
   18058:	str	r3, [sp, #44]	; 0x2c
   1805c:	beq	18550 <readstat_parse_sav+0x17b4>
   18060:	ldr	r3, [sp, #80]	; 0x50
   18064:	cmp	r3, #0
   18068:	beq	182d0 <readstat_parse_sav+0x1534>
   1806c:	mov	r8, #0
   18070:	add	fp, sp, #568	; 0x238
   18074:	str	r5, [sp, #48]	; 0x30
   18078:	ldr	r6, [sp, #44]	; 0x2c
   1807c:	b	1810c <readstat_parse_sav+0x1370>
   18080:	ldr	r3, [r4, #12]
   18084:	ldr	r2, [r4, #20]
   18088:	blx	r3
   1808c:	cmp	r0, #0
   18090:	mov	r0, sl
   18094:	ble	18140 <readstat_parse_sav+0x13a4>
   18098:	ldrb	r9, [sp, #568]	; 0x238
   1809c:	ldr	r3, [r4, #12]
   180a0:	ldr	r2, [r4, #20]
   180a4:	add	r9, r9, #8
   180a8:	and	r9, r9, #504	; 0x1f8
   180ac:	sub	r9, r9, #1
   180b0:	mov	r1, r9
   180b4:	blx	r3
   180b8:	cmp	r9, r0
   180bc:	lsl	r1, r9, #2
   180c0:	bhi	18140 <readstat_parse_sav+0x13a4>
   180c4:	add	r5, r1, #1
   180c8:	add	r6, r6, #72	; 0x48
   180cc:	mov	r0, r5
   180d0:	bl	4200 <readstat_malloc@plt>
   180d4:	cmp	r0, #0
   180d8:	mov	r3, r9
   180dc:	str	r0, [r6, #-8]
   180e0:	mov	r2, sl
   180e4:	mov	r1, r5
   180e8:	beq	18298 <readstat_parse_sav+0x14fc>
   180ec:	ldr	ip, [r7, #336]	; 0x150
   180f0:	str	ip, [sp]
   180f4:	bl	420c <readstat_convert@plt>
   180f8:	cmp	r0, #0
   180fc:	bne	182ac <readstat_parse_sav+0x1510>
   18100:	ldr	r3, [sp, #80]	; 0x50
   18104:	cmp	r3, r8
   18108:	bls	182cc <readstat_parse_sav+0x1530>
   1810c:	mov	r3, #0
   18110:	mov	r1, #8
   18114:	mov	r0, r6
   18118:	add	sl, sp, #312	; 0x138
   1811c:	strb	r3, [sp, #568]	; 0x238
   18120:	add	r8, r8, #1
   18124:	ldr	r3, [r4, #12]
   18128:	ldr	r2, [r4, #20]
   1812c:	blx	r3
   18130:	cmp	r0, #7
   18134:	mov	r1, #1
   18138:	mov	r0, fp
   1813c:	bgt	18080 <readstat_parse_sav+0x12e4>
   18140:	ldr	r2, [sp, #80]	; 0x50
   18144:	cmp	r2, #0
   18148:	beq	18504 <readstat_parse_sav+0x1768>
   1814c:	mov	r5, #2
   18150:	ldr	r6, [sp, #44]	; 0x2c
   18154:	mov	r4, #0
   18158:	add	r4, r4, #1
   1815c:	add	r6, r6, #72	; 0x48
   18160:	ldr	r3, [r6, #-8]
   18164:	subs	r0, r3, #0
   18168:	beq	18174 <readstat_parse_sav+0x13d8>
   1816c:	bl	3e94 <free@plt>
   18170:	ldr	r2, [sp, #80]	; 0x50
   18174:	cmp	r2, r4
   18178:	bhi	18158 <readstat_parse_sav+0x13bc>
   1817c:	ldr	r0, [sp, #44]	; 0x2c
   18180:	bl	3e94 <free@plt>
   18184:	cmp	r5, #0
   18188:	beq	17014 <readstat_parse_sav+0x278>
   1818c:	ldr	r8, [sp, #16]
   18190:	mov	r3, r5
   18194:	mov	fp, r3
   18198:	b	17520 <readstat_parse_sav+0x784>
   1819c:	mov	r0, r6
   181a0:	bl	3d68 <byteswap4@plt>
   181a4:	mov	r6, r0
   181a8:	str	r0, [sp, #80]	; 0x50
   181ac:	b	17090 <readstat_parse_sav+0x2f4>
   181b0:	bl	3d68 <byteswap4@plt>
   181b4:	str	r0, [sp, #96]	; 0x60
   181b8:	b	17c3c <readstat_parse_sav+0xea0>
   181bc:	ldr	r8, [sp, #16]
   181c0:	mov	r9, #3
   181c4:	b	16f80 <readstat_parse_sav+0x1e4>
   181c8:	beq	17014 <readstat_parse_sav+0x278>
   181cc:	mov	r9, #5
   181d0:	ldr	r8, [sp, #16]
   181d4:	ldr	r0, [sp, #40]	; 0x28
   181d8:	bl	3e94 <free@plt>
   181dc:	b	16f80 <readstat_parse_sav+0x1e4>
   181e0:	bl	3d68 <byteswap4@plt>
   181e4:	ldrb	r3, [r7, #436]	; 0x1b4
   181e8:	str	r0, [sp, #580]	; 0x244
   181ec:	ldr	r0, [sp, #584]	; 0x248
   181f0:	tst	r3, #1
   181f4:	beq	175ac <readstat_parse_sav+0x810>
   181f8:	bl	3d68 <byteswap4@plt>
   181fc:	ldrb	r3, [r7, #436]	; 0x1b4
   18200:	str	r0, [sp, #584]	; 0x248
   18204:	ldr	r4, [sp, #568]	; 0x238
   18208:	tst	r3, #1
   1820c:	beq	175b4 <readstat_parse_sav+0x818>
   18210:	mov	r0, r4
   18214:	bl	3d68 <byteswap4@plt>
   18218:	mov	r4, r0
   1821c:	b	175b4 <readstat_parse_sav+0x818>
   18220:	lsl	r3, r1, #1
   18224:	ldr	r0, [r7, #44]	; 0x2c
   18228:	lsl	r1, r1, #3
   1822c:	str	r3, [r7, #48]	; 0x30
   18230:	bl	42b4 <readstat_realloc@plt>
   18234:	cmp	r0, #0
   18238:	str	r0, [r7, #44]	; 0x2c
   1823c:	bne	1757c <readstat_parse_sav+0x7e0>
   18240:	ldr	r8, [sp, #16]
   18244:	mov	r9, #3
   18248:	bl	43ec <spss_varinfo_free@plt>
   1824c:	ldr	r0, [sp, #40]	; 0x28
   18250:	bl	3e94 <free@plt>
   18254:	b	16f80 <readstat_parse_sav+0x1e4>
   18258:	mov	r9, #2
   1825c:	ldr	r8, [sp, #16]
   18260:	ldr	r0, [sp, #40]	; 0x28
   18264:	bl	3e94 <free@plt>
   18268:	b	16f80 <readstat_parse_sav+0x1e4>
   1826c:	mov	fp, #4
   18270:	ldr	r8, [sp, #16]
   18274:	b	17520 <readstat_parse_sav+0x784>
   18278:	ldr	r4, [r7, #340]	; 0x154
   1827c:	cmp	fp, r4
   18280:	beq	17518 <readstat_parse_sav+0x77c>
   18284:	ldr	r2, [sp, #312]	; 0x138
   18288:	b	17ad4 <readstat_parse_sav+0xd38>
   1828c:	mov	r5, r8
   18290:	ldr	r8, [sp, #16]
   18294:	b	1803c <readstat_parse_sav+0x12a0>
   18298:	ldr	r5, [sp, #48]	; 0x30
   1829c:	ldr	r2, [sp, #80]	; 0x50
   182a0:	cmp	r2, #0
   182a4:	bne	18150 <readstat_parse_sav+0x13b4>
   182a8:	b	1817c <readstat_parse_sav+0x13e0>
   182ac:	mov	r5, r0
   182b0:	b	1829c <readstat_parse_sav+0x1500>
   182b4:	mov	r0, r4
   182b8:	bl	3d68 <byteswap4@plt>
   182bc:	ldr	r2, [sp, #80]	; 0x50
   182c0:	mov	r4, r0
   182c4:	add	r2, r2, #4
   182c8:	b	17898 <readstat_parse_sav+0xafc>
   182cc:	ldr	r5, [sp, #48]	; 0x30
   182d0:	mov	r1, #4
   182d4:	add	r0, sp, #96	; 0x60
   182d8:	ldr	r3, [r4, #12]
   182dc:	ldr	r2, [r4, #20]
   182e0:	blx	r3
   182e4:	cmp	r0, #3
   182e8:	bhi	170b8 <readstat_parse_sav+0x31c>
   182ec:	b	18140 <readstat_parse_sav+0x13a4>
   182f0:	bl	3d68 <byteswap4@plt>
   182f4:	b	17164 <readstat_parse_sav+0x3c8>
   182f8:	ldr	r8, [sp, #16]
   182fc:	ldr	r9, [sp, #24]
   18300:	ldr	r4, [r7, #12]
   18304:	cmp	r4, #0
   18308:	beq	184e4 <readstat_parse_sav+0x1748>
   1830c:	ldr	ip, [r7, #372]	; 0x174
   18310:	cmp	ip, #0
   18314:	blt	184e4 <readstat_parse_sav+0x1748>
   18318:	ldr	r1, [r7, #340]	; 0x154
   1831c:	cmp	r1, #0
   18320:	ble	189d8 <readstat_parse_sav+0x1c3c>
   18324:	ldr	r0, [r7, #44]	; 0x2c
   18328:	sub	ip, ip, #1
   1832c:	ldr	r2, [r0]
   18330:	ldr	r3, [r2, #12]
   18334:	cmp	r3, ip
   18338:	beq	1877c <readstat_parse_sav+0x19e0>
   1833c:	mov	r3, #0
   18340:	b	18354 <readstat_parse_sav+0x15b8>
   18344:	ldr	r2, [r0, r3, lsl #2]
   18348:	ldr	lr, [r2, #12]
   1834c:	cmp	lr, ip
   18350:	beq	1877c <readstat_parse_sav+0x19e0>
   18354:	ldr	r2, [r2, #48]	; 0x30
   18358:	add	r3, r3, r2
   1835c:	cmp	r3, r1
   18360:	blt	18344 <readstat_parse_sav+0x15a8>
   18364:	ldr	r3, [r7, #16]
   18368:	cmp	r3, #0
   1836c:	beq	16f80 <readstat_parse_sav+0x1e4>
   18370:	mov	r4, #256	; 0x100
   18374:	mov	r3, #0
   18378:	ldr	ip, [r0, r3, lsl #2]
   1837c:	ldr	r2, [ip, #20]
   18380:	ldr	ip, [ip, #48]	; 0x30
   18384:	cmp	r4, r2
   18388:	movcc	r4, r2
   1838c:	add	r3, r3, ip
   18390:	cmp	r3, r1
   18394:	blt	18378 <readstat_parse_sav+0x15dc>
   18398:	add	r3, r4, #7
   1839c:	mov	r0, r3
   183a0:	str	r3, [r7, #380]	; 0x17c
   183a4:	bl	4200 <readstat_malloc@plt>
   183a8:	add	r3, r4, #2
   183ac:	str	r0, [r7, #376]	; 0x178
   183b0:	lsl	r3, r3, #2
   183b4:	mov	r0, r3
   183b8:	str	r3, [r7, #388]	; 0x184
   183bc:	bl	4200 <readstat_malloc@plt>
   183c0:	ldr	r4, [r7, #376]	; 0x178
   183c4:	clz	r3, r0
   183c8:	lsr	r3, r3, #5
   183cc:	str	r0, [r7, #384]	; 0x180
   183d0:	cmp	r4, #0
   183d4:	movne	r4, r3
   183d8:	moveq	r4, #1
   183dc:	cmp	r4, #0
   183e0:	bne	181c0 <readstat_parse_sav+0x1424>
   183e4:	ldr	r3, [r7, #428]	; 0x1ac
   183e8:	cmp	r3, #1
   183ec:	beq	189b4 <readstat_parse_sav+0x1c18>
   183f0:	cmp	r3, #2
   183f4:	beq	18878 <readstat_parse_sav+0x1adc>
   183f8:	ldr	sl, [r7, #36]	; 0x24
   183fc:	ldr	r5, [r7, #344]	; 0x158
   18400:	lsl	r5, r5, #3
   18404:	mov	r0, r5
   18408:	bl	4200 <readstat_malloc@plt>
   1840c:	mov	r6, r0
   18410:	ldr	r0, [r7, #360]	; 0x168
   18414:	cmp	r0, #0
   18418:	beq	1846c <readstat_parse_sav+0x16d0>
   1841c:	mul	r0, r5, r0
   18420:	mov	r1, #1
   18424:	ldr	r3, [sl, #8]
   18428:	ldr	r2, [sl, #20]
   1842c:	blx	r3
   18430:	cmn	r0, #1
   18434:	beq	189d0 <readstat_parse_sav+0x1c34>
   18438:	str	r4, [r7, #360]	; 0x168
   1843c:	b	1846c <readstat_parse_sav+0x16d0>
   18440:	ldr	r3, [sl, #12]
   18444:	ldr	r2, [sl, #20]
   18448:	blx	r3
   1844c:	cmp	r5, r0
   18450:	mov	r2, r7
   18454:	mov	r1, r5
   18458:	mov	r0, r6
   1845c:	bne	188b4 <readstat_parse_sav+0x1b18>
   18460:	bl	166c4 <sav_process_row>
   18464:	subs	r4, r0, #0
   18468:	bne	184b0 <readstat_parse_sav+0x1714>
   1846c:	ldr	r3, [r7, #356]	; 0x164
   18470:	cmn	r3, #1
   18474:	beq	18484 <readstat_parse_sav+0x16e8>
   18478:	ldr	r2, [r7, #364]	; 0x16c
   1847c:	cmp	r3, r2
   18480:	ble	188b4 <readstat_parse_sav+0x1b18>
   18484:	ldr	r1, [r7, #28]
   18488:	ldr	r3, [r7, #36]	; 0x24
   1848c:	ldr	r0, [r7, #32]
   18490:	ldr	r2, [r7, #40]	; 0x28
   18494:	ldr	r4, [r3, #16]
   18498:	ldr	r3, [r3, #20]
   1849c:	blx	r4
   184a0:	subs	r4, r0, #0
   184a4:	mov	r1, r5
   184a8:	mov	r0, r6
   184ac:	beq	18440 <readstat_parse_sav+0x16a4>
   184b0:	cmp	r6, #0
   184b4:	bne	188c0 <readstat_parse_sav+0x1b24>
   184b8:	mov	r9, r4
   184bc:	b	16f80 <readstat_parse_sav+0x1e4>
   184c0:	ldr	r0, [r7, #44]	; 0x2c
   184c4:	ldr	r2, [r7, #340]	; 0x154
   184c8:	ldr	r3, [r7, #344]	; 0x158
   184cc:	add	r1, r2, #1
   184d0:	str	r8, [r0, r2, lsl #2]
   184d4:	add	r3, r3, #1
   184d8:	str	r1, [r7, #340]	; 0x154
   184dc:	str	r3, [r7, #344]	; 0x158
   184e0:	b	17014 <readstat_parse_sav+0x278>
   184e4:	ldr	r3, [r7, #16]
   184e8:	cmp	r3, #0
   184ec:	beq	16f80 <readstat_parse_sav+0x1e4>
   184f0:	ldr	r1, [r7, #340]	; 0x154
   184f4:	cmp	r1, #0
   184f8:	ble	189e4 <readstat_parse_sav+0x1c48>
   184fc:	ldr	r0, [r7, #44]	; 0x2c
   18500:	b	18370 <readstat_parse_sav+0x15d4>
   18504:	mov	fp, #2
   18508:	ldr	r8, [sp, #16]
   1850c:	ldr	r0, [sp, #44]	; 0x2c
   18510:	bl	3e94 <free@plt>
   18514:	b	17520 <readstat_parse_sav+0x784>
   18518:	vldr	d0, [sp, #568]	; 0x238
   1851c:	bl	44dc <byteswap_double@plt>
   18520:	vstr	d0, [sp, #568]	; 0x238
   18524:	b	17dac <readstat_parse_sav+0x1010>
   18528:	ldr	r3, [sp, #44]	; 0x2c
   1852c:	cmp	r3, #0
   18530:	beq	189ec <readstat_parse_sav+0x1c50>
   18534:	ldr	r2, [sp, #80]	; 0x50
   18538:	cmp	r2, #0
   1853c:	beq	18864 <readstat_parse_sav+0x1ac8>
   18540:	mov	r5, #5
   18544:	b	18150 <readstat_parse_sav+0x13b4>
   18548:	ldr	r5, [sp, #64]	; 0x40
   1854c:	b	177b4 <readstat_parse_sav+0xa18>
   18550:	mov	fp, #3
   18554:	ldr	r8, [sp, #16]
   18558:	b	17520 <readstat_parse_sav+0x784>
   1855c:	mov	r9, r6
   18560:	mov	r3, #5
   18564:	mov	fp, r3
   18568:	cmp	r5, #0
   1856c:	beq	18578 <readstat_parse_sav+0x17dc>
   18570:	mov	r0, r5
   18574:	bl	3e94 <free@plt>
   18578:	cmp	r9, #0
   1857c:	beq	18588 <readstat_parse_sav+0x17ec>
   18580:	mov	r0, r9
   18584:	bl	3e94 <free@plt>
   18588:	cmp	fp, #0
   1858c:	beq	17014 <readstat_parse_sav+0x278>
   18590:	b	1798c <readstat_parse_sav+0xbf0>
   18594:	ldr	r0, [sp, #96]	; 0x60
   18598:	bl	3d68 <byteswap4@plt>
   1859c:	str	r0, [sp, #96]	; 0x60
   185a0:	b	170c4 <readstat_parse_sav+0x328>
   185a4:	mov	r0, r4
   185a8:	mov	r1, r5
   185ac:	bl	3d50 <byteswap8@plt>
   185b0:	mov	r4, r0
   185b4:	mov	r5, r1
   185b8:	ldrb	r2, [r7, #436]	; 0x1b4
   185bc:	b	17a98 <readstat_parse_sav+0xcfc>
   185c0:	bl	3d50 <byteswap8@plt>
   185c4:	ldrb	r2, [r7, #436]	; 0x1b4
   185c8:	b	17a88 <readstat_parse_sav+0xcec>
   185cc:	mov	r0, r8
   185d0:	mov	r1, r9
   185d4:	bl	3d50 <byteswap8@plt>
   185d8:	mov	r8, r0
   185dc:	mov	r9, r1
   185e0:	b	17aa8 <readstat_parse_sav+0xd0c>
   185e4:	mov	r0, r4
   185e8:	bl	3d68 <byteswap4@plt>
   185ec:	mov	r4, r0
   185f0:	b	17b80 <readstat_parse_sav+0xde4>
   185f4:	mov	r0, r6
   185f8:	bl	3d68 <byteswap4@plt>
   185fc:	mov	r6, r0
   18600:	ldr	r8, [sp, #80]	; 0x50
   18604:	b	177ec <readstat_parse_sav+0xa50>
   18608:	ldr	r9, [r7, #36]	; 0x24
   1860c:	mov	r1, #4
   18610:	add	r0, sp, #312	; 0x138
   18614:	ldr	r3, [r9, #12]
   18618:	ldr	r2, [r9, #20]
   1861c:	blx	r3
   18620:	cmp	r0, #3
   18624:	bls	18854 <readstat_parse_sav+0x1ab8>
   18628:	ldrb	r3, [r7, #436]	; 0x1b4
   1862c:	ldr	r0, [sp, #312]	; 0x138
   18630:	tst	r3, #1
   18634:	bne	1884c <readstat_parse_sav+0x1ab0>
   18638:	cmp	r0, #0
   1863c:	str	r0, [sp, #312]	; 0x138
   18640:	beq	17f78 <readstat_parse_sav+0x11dc>
   18644:	add	r0, r0, #3
   18648:	bic	sl, r0, #3
   1864c:	mov	r0, sl
   18650:	bl	4200 <readstat_malloc@plt>
   18654:	subs	r4, r0, #0
   18658:	beq	18a80 <readstat_parse_sav+0x1ce4>
   1865c:	ldr	r6, [sp, #312]	; 0x138
   18660:	lsl	r6, r6, #2
   18664:	add	r6, r6, #1
   18668:	mov	r0, r6
   1866c:	bl	4200 <readstat_malloc@plt>
   18670:	cmp	r0, #0
   18674:	str	r0, [r8, #264]	; 0x108
   18678:	beq	18a70 <readstat_parse_sav+0x1cd4>
   1867c:	mov	r1, sl
   18680:	mov	r0, r4
   18684:	ldr	r3, [r9, #12]
   18688:	ldr	r2, [r9, #20]
   1868c:	blx	r3
   18690:	cmp	sl, r0
   18694:	bls	18a34 <readstat_parse_sav+0x1c98>
   18698:	mov	r3, r5
   1869c:	mov	r5, r8
   186a0:	ldr	r8, [sp, #16]
   186a4:	mov	r0, r4
   186a8:	mov	fp, r3
   186ac:	bl	3e94 <free@plt>
   186b0:	ldr	r0, [r5, #264]	; 0x108
   186b4:	cmp	r0, #0
   186b8:	beq	1803c <readstat_parse_sav+0x12a0>
   186bc:	bl	3e94 <free@plt>
   186c0:	mov	r3, #0
   186c4:	str	r3, [r5, #264]	; 0x108
   186c8:	b	1803c <readstat_parse_sav+0x12a0>
   186cc:	mov	r5, #0
   186d0:	ldr	r3, [r7, #20]
   186d4:	cmp	r3, #0
   186d8:	beq	18750 <readstat_parse_sav+0x19b4>
   186dc:	ldr	r2, [pc, #1048]	; 18afc <readstat_parse_sav+0x1d60>
   186e0:	add	r4, sp, #568	; 0x238
   186e4:	mov	r1, #256	; 0x100
   186e8:	mov	r0, r4
   186ec:	ldr	r8, [sp, #80]	; 0x50
   186f0:	ldr	r3, [r7, #368]	; 0x170
   186f4:	add	r2, pc, r2
   186f8:	bl	4254 <snprintf@plt>
   186fc:	cmp	r8, #0
   18700:	ble	18750 <readstat_parse_sav+0x19b4>
   18704:	mov	r6, #0
   18708:	b	18714 <readstat_parse_sav+0x1978>
   1870c:	cmp	r8, r6
   18710:	beq	18750 <readstat_parse_sav+0x19b4>
   18714:	ldr	r3, [r7, #40]	; 0x28
   18718:	add	r1, sl, #48	; 0x30
   1871c:	mov	r0, r4
   18720:	add	r6, r6, #1
   18724:	add	sl, sl, #72	; 0x48
   18728:	str	r3, [sp, #12]
   1872c:	ldr	r3, [sl, #-8]
   18730:	str	r3, [sp, #8]
   18734:	ldrd	r2, [sl, #-16]
   18738:	strd	r2, [sp]
   1873c:	ldm	r1, {r2, r3}
   18740:	ldr	r1, [r7, #20]
   18744:	blx	r1
   18748:	cmp	r0, #0
   1874c:	beq	1870c <readstat_parse_sav+0x1970>
   18750:	ldr	r3, [r7, #368]	; 0x170
   18754:	ldr	r0, [sp, #60]	; 0x3c
   18758:	add	r3, r3, #1
   1875c:	cmp	r0, #0
   18760:	str	r3, [r7, #368]	; 0x170
   18764:	beq	1876c <readstat_parse_sav+0x19d0>
   18768:	bl	3e94 <free@plt>
   1876c:	ldr	r3, [sp, #44]	; 0x2c
   18770:	cmp	r3, #0
   18774:	beq	18184 <readstat_parse_sav+0x13e8>
   18778:	b	1829c <readstat_parse_sav+0x1500>
   1877c:	ldr	r2, [r2, #8]
   18780:	ldr	r1, [r7, #40]	; 0x28
   18784:	ldr	r3, [r7, #52]	; 0x34
   18788:	ldr	r0, [r3, r2, lsl #2]
   1878c:	blx	r4
   18790:	cmp	r0, #0
   18794:	beq	184e4 <readstat_parse_sav+0x1748>
   18798:	mov	r9, #4
   1879c:	b	16f80 <readstat_parse_sav+0x1e4>
   187a0:	mov	r9, r6
   187a4:	mov	r3, #3
   187a8:	b	18564 <readstat_parse_sav+0x17c8>
   187ac:	ldr	r3, [sp, #44]	; 0x2c
   187b0:	cmp	r3, #0
   187b4:	bne	18140 <readstat_parse_sav+0x13a4>
   187b8:	mov	r3, #2
   187bc:	ldr	r8, [sp, #16]
   187c0:	b	18194 <readstat_parse_sav+0x13f8>
   187c4:	lsl	r0, r6, #2
   187c8:	bl	4200 <readstat_malloc@plt>
   187cc:	subs	r3, r0, #0
   187d0:	str	r3, [sp, #60]	; 0x3c
   187d4:	beq	18ab8 <readstat_parse_sav+0x1d1c>
   187d8:	ldr	r1, [sp, #84]	; 0x54
   187dc:	ldr	r3, [r4, #12]
   187e0:	ldr	r2, [r4, #20]
   187e4:	lsl	r1, r1, #2
   187e8:	blx	r3
   187ec:	ldr	r3, [sp, #84]	; 0x54
   187f0:	cmp	r0, r3, lsl #2
   187f4:	bcs	17124 <readstat_parse_sav+0x388>
   187f8:	ldr	r0, [sp, #60]	; 0x3c
   187fc:	bl	3e94 <free@plt>
   18800:	ldr	r3, [sp, #44]	; 0x2c
   18804:	cmp	r3, #0
   18808:	beq	17cc0 <readstat_parse_sav+0xf24>
   1880c:	ldr	r2, [sp, #80]	; 0x50
   18810:	cmp	r2, #0
   18814:	bne	1814c <readstat_parse_sav+0x13b0>
   18818:	mov	r0, r3
   1881c:	mov	fp, #2
   18820:	ldr	r8, [sp, #16]
   18824:	bl	3e94 <free@plt>
   18828:	b	17520 <readstat_parse_sav+0x784>
   1882c:	ldr	r0, [sp, #84]	; 0x54
   18830:	bl	3d68 <byteswap4@plt>
   18834:	str	r0, [sp, #84]	; 0x54
   18838:	b	170f4 <readstat_parse_sav+0x358>
   1883c:	mov	r9, r6
   18840:	b	18564 <readstat_parse_sav+0x17c8>
   18844:	mov	r5, r0
   18848:	b	186d0 <readstat_parse_sav+0x1934>
   1884c:	bl	3d68 <byteswap4@plt>
   18850:	b	18638 <readstat_parse_sav+0x189c>
   18854:	mov	r5, r8
   18858:	mov	fp, #2
   1885c:	ldr	r8, [sp, #16]
   18860:	b	186b0 <readstat_parse_sav+0x1914>
   18864:	mov	r0, r3
   18868:	mov	fp, #5
   1886c:	ldr	r8, [sp, #16]
   18870:	bl	3e94 <free@plt>
   18874:	b	17520 <readstat_parse_sav+0x784>
   18878:	ldr	r1, [pc, #640]	; 18b00 <readstat_parse_sav+0x1d64>
   1887c:	mov	r0, r7
   18880:	add	r1, pc, r1
   18884:	bl	4494 <zsav_read_compressed_data@plt>
   18888:	mov	r4, r0
   1888c:	cmp	r4, #0
   18890:	bne	184b8 <readstat_parse_sav+0x171c>
   18894:	ldr	r3, [r7, #352]	; 0x160
   18898:	cmn	r3, #1
   1889c:	beq	16f80 <readstat_parse_sav+0x1e4>
   188a0:	ldr	r3, [r7, #356]	; 0x164
   188a4:	ldr	r2, [r7, #364]	; 0x16c
   188a8:	cmp	r2, r3
   188ac:	movne	r9, #9
   188b0:	b	16f80 <readstat_parse_sav+0x1e4>
   188b4:	cmp	r6, #0
   188b8:	movne	r4, #0
   188bc:	beq	18894 <readstat_parse_sav+0x1af8>
   188c0:	mov	r0, r6
   188c4:	bl	3e94 <free@plt>
   188c8:	b	1888c <readstat_parse_sav+0x1af0>
   188cc:	mov	r5, r8
   188d0:	mov	fp, r0
   188d4:	ldr	r8, [sp, #16]
   188d8:	b	1803c <readstat_parse_sav+0x12a0>
   188dc:	rsb	r1, r0, #0
   188e0:	mov	r2, #1
   188e4:	ldr	r5, [r7, #36]	; 0x24
   188e8:	cmp	r3, #5
   188ec:	str	r1, [r8, #52]	; 0x34
   188f0:	str	r2, [r8, #56]	; 0x38
   188f4:	bne	17fcc <readstat_parse_sav+0x1230>
   188f8:	add	r4, r8, #64	; 0x40
   188fc:	lsl	r1, r1, #3
   18900:	ldr	r3, [r5, #12]
   18904:	mov	r0, r4
   18908:	ldr	r2, [r5, #20]
   1890c:	blx	r3
   18910:	ldr	r3, [r8, #52]	; 0x34
   18914:	cmp	r0, r3, lsl #3
   18918:	bcc	18030 <readstat_parse_sav+0x1294>
   1891c:	mov	r6, #0
   18920:	cmp	r6, r3
   18924:	add	r5, r7, #400	; 0x190
   18928:	add	r6, r6, #1
   1892c:	bge	184c0 <readstat_parse_sav+0x1724>
   18930:	ldrb	r3, [r7, #436]	; 0x1b4
   18934:	tst	r3, #1
   18938:	bne	18a08 <readstat_parse_sav+0x1c6c>
   1893c:	ldr	r3, [r4, #4]
   18940:	add	ip, r7, #416	; 0x1a0
   18944:	add	r4, r4, #8
   18948:	ldr	r2, [r4, #-8]
   1894c:	str	r3, [sp, #316]	; 0x13c
   18950:	add	r3, sp, #320	; 0x140
   18954:	str	r2, [sp, #312]	; 0x138
   18958:	ldrd	r2, [r3, #-8]
   1895c:	ldrd	r0, [r5, #-8]
   18960:	cmp	r1, r3
   18964:	cmpeq	r0, r2
   18968:	ldrd	r0, [r5]
   1896c:	vstreq	d11, [r4, #-8]
   18970:	cmp	r3, r1
   18974:	cmpeq	r2, r0
   18978:	ldrd	r0, [ip, #-8]
   1897c:	vstreq	d10, [r4, #-8]
   18980:	cmp	r3, r1
   18984:	ldr	r3, [r8, #52]	; 0x34
   18988:	cmpeq	r2, r0
   1898c:	vstreq	d9, [r4, #-8]
   18990:	b	18920 <readstat_parse_sav+0x1b84>
   18994:	mov	r8, r2
   18998:	str	r6, [sp, #44]	; 0x2c
   1899c:	b	17704 <readstat_parse_sav+0x968>
   189a0:	mov	r9, r6
   189a4:	mov	r3, #4
   189a8:	b	18564 <readstat_parse_sav+0x17c8>
   189ac:	bl	3d68 <byteswap4@plt>
   189b0:	b	17f90 <readstat_parse_sav+0x11f4>
   189b4:	mov	r0, r7
   189b8:	bl	16b00 <sav_read_compressed_data.constprop.6>
   189bc:	mov	r4, r0
   189c0:	b	1888c <readstat_parse_sav+0x1af0>
   189c4:	mov	r3, #5
   189c8:	ldr	r9, [sp, #44]	; 0x2c
   189cc:	b	18564 <readstat_parse_sav+0x17c8>
   189d0:	mov	r4, #15
   189d4:	b	184b0 <readstat_parse_sav+0x1714>
   189d8:	ldr	r3, [r7, #16]
   189dc:	cmp	r3, #0
   189e0:	beq	16f80 <readstat_parse_sav+0x1e4>
   189e4:	mov	r4, #256	; 0x100
   189e8:	b	18398 <readstat_parse_sav+0x15fc>
   189ec:	mov	r3, #5
   189f0:	ldr	r8, [sp, #16]
   189f4:	b	18194 <readstat_parse_sav+0x13f8>
   189f8:	mov	r5, r8
   189fc:	mov	fp, #5
   18a00:	ldr	r8, [sp, #16]
   18a04:	b	1803c <readstat_parse_sav+0x12a0>
   18a08:	vldr	d0, [r4]
   18a0c:	bl	44dc <byteswap_double@plt>
   18a10:	vstr	d0, [r4]
   18a14:	b	1893c <readstat_parse_sav+0x1ba0>
   18a18:	ldr	r9, [sp, #44]	; 0x2c
   18a1c:	mov	fp, #5
   18a20:	b	18568 <readstat_parse_sav+0x17cc>
   18a24:	ldr	r3, [sp, #44]	; 0x2c
   18a28:	cmp	r3, #0
   18a2c:	beq	17cc0 <readstat_parse_sav+0xf24>
   18a30:	b	1880c <readstat_parse_sav+0x1a70>
   18a34:	ldr	r0, [r7, #336]	; 0x150
   18a38:	mov	r1, r6
   18a3c:	mov	r2, r4
   18a40:	ldr	r3, [sp, #312]	; 0x138
   18a44:	str	r0, [sp]
   18a48:	ldr	r0, [r8, #264]	; 0x108
   18a4c:	bl	420c <readstat_convert@plt>
   18a50:	mov	fp, r0
   18a54:	mov	r0, r4
   18a58:	bl	3e94 <free@plt>
   18a5c:	cmp	fp, #0
   18a60:	beq	17f78 <readstat_parse_sav+0x11dc>
   18a64:	mov	r5, r8
   18a68:	ldr	r8, [sp, #16]
   18a6c:	b	186b0 <readstat_parse_sav+0x1914>
   18a70:	mov	r5, r8
   18a74:	mov	r3, #3
   18a78:	ldr	r8, [sp, #16]
   18a7c:	b	186a4 <readstat_parse_sav+0x1908>
   18a80:	mov	r5, r8
   18a84:	mov	fp, #3
   18a88:	ldr	r8, [sp, #16]
   18a8c:	b	186b0 <readstat_parse_sav+0x1914>
   18a90:	ldr	r3, [r7, #20]
   18a94:	cmp	r3, #0
   18a98:	beq	18750 <readstat_parse_sav+0x19b4>
   18a9c:	ldr	r2, [pc, #96]	; 18b04 <readstat_parse_sav+0x1d68>
   18aa0:	mov	r1, #256	; 0x100
   18aa4:	add	r0, sp, #568	; 0x238
   18aa8:	ldr	r3, [r7, #368]	; 0x170
   18aac:	add	r2, pc, r2
   18ab0:	bl	4254 <snprintf@plt>
   18ab4:	b	18750 <readstat_parse_sav+0x19b4>
   18ab8:	ldr	r3, [sp, #44]	; 0x2c
   18abc:	cmp	r3, #0
   18ac0:	beq	1818c <readstat_parse_sav+0x13f0>
   18ac4:	ldr	r2, [sp, #80]	; 0x50
   18ac8:	cmp	r2, #0
   18acc:	bne	18150 <readstat_parse_sav+0x13b4>
   18ad0:	mov	r0, r3
   18ad4:	mov	fp, #3
   18ad8:	ldr	r8, [sp, #16]
   18adc:	bl	3e94 <free@plt>
   18ae0:	b	17520 <readstat_parse_sav+0x784>
   18ae4:	ldr	r9, [sp, #44]	; 0x2c
   18ae8:	b	18568 <readstat_parse_sav+0x17cc>
   18aec:	moveq	fp, #0
   18af0:	ldr	r9, [sp, #44]	; 0x2c
   18af4:	bne	18a1c <readstat_parse_sav+0x1c80>
   18af8:	b	18568 <readstat_parse_sav+0x17cc>
   18afc:	.word	0x0000dd3c
   18b00:	.word	0xffffde3c
   18b04:	.word	0x0000d984

00018b08 <sav_metadata_ok>:
   18b08:	ldr	r3, [r0, #8]
   18b0c:	cmp	r3, #2
   18b10:	beq	18b24 <sav_metadata_ok+0x1c>
   18b14:	cmp	r3, #3
   18b18:	moveq	r0, #0
   18b1c:	movne	r0, #24
   18b20:	bx	lr
   18b24:	ldr	r3, [r0, #16]
   18b28:	cmp	r3, #2
   18b2c:	movne	r0, #0
   18b30:	moveq	r0, #6
   18b34:	bx	lr

00018b38 <sav_write_compressed_row>:
   18b38:	strd	r4, [sp, #-16]!
   18b3c:	mov	r3, r0
   18b40:	mov	r4, r0
   18b44:	ldr	r5, [r0, #300]	; 0x12c
   18b48:	str	r6, [sp, #8]
   18b4c:	str	lr, [sp, #12]
   18b50:	mov	r0, r5
   18b54:	bl	4434 <sav_compress_row@plt>
   18b58:	mov	r2, r0
   18b5c:	mov	r1, r5
   18b60:	ldr	r6, [sp, #8]
   18b64:	mov	r0, r4
   18b68:	ldrd	r4, [sp]
   18b6c:	ldr	lr, [sp, #12]
   18b70:	add	sp, sp, #16
   18b74:	b	4428 <readstat_write_bytes@plt>

00018b78 <sav_emit_blank_variable_records>:
   18b78:	mov	r3, #2
   18b7c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18b80:	mov	r5, r0
   18b84:	strd	r6, [sp, #8]
   18b88:	mov	r4, r1
   18b8c:	mov	r6, #0
   18b90:	strd	r8, [sp, #16]
   18b94:	mov	r7, #0
   18b98:	str	sl, [sp, #24]
   18b9c:	movw	sl, #7425	; 0x1d01
   18ba0:	movt	sl, #1
   18ba4:	str	lr, [sp, #28]
   18ba8:	sub	sp, sp, #32
   18bac:	add	r9, pc, #140	; 0x8c
   18bb0:	ldrd	r8, [r9]
   18bb4:	str	r3, [sp]
   18bb8:	b	18bfc <sav_emit_blank_variable_records+0x84>
   18bbc:	bl	4428 <readstat_write_bytes@plt>
   18bc0:	subs	ip, r0, #0
   18bc4:	mvn	r3, #0
   18bc8:	mov	r2, #28
   18bcc:	add	r1, sp, #4
   18bd0:	mov	r0, r5
   18bd4:	bne	18c30 <sav_emit_blank_variable_records+0xb8>
   18bd8:	add	r4, r4, r3
   18bdc:	str	r3, [sp, #4]
   18be0:	strd	r6, [sp, #8]
   18be4:	str	sl, [sp, #16]
   18be8:	str	sl, [sp, #20]
   18bec:	strd	r8, [sp, #24]
   18bf0:	bl	4428 <readstat_write_bytes@plt>
   18bf4:	cmp	r0, #0
   18bf8:	bne	18c38 <sav_emit_blank_variable_records+0xc0>
   18bfc:	cmp	r4, #0
   18c00:	mov	r2, #4
   18c04:	mov	r1, sp
   18c08:	mov	r0, r5
   18c0c:	bne	18bbc <sav_emit_blank_variable_records+0x44>
   18c10:	mov	r0, r4
   18c14:	add	sp, sp, #32
   18c18:	ldrd	r4, [sp]
   18c1c:	ldrd	r6, [sp, #8]
   18c20:	ldrd	r8, [sp, #16]
   18c24:	ldr	sl, [sp, #24]
   18c28:	add	sp, sp, #28
   18c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c30:	mov	r4, ip
   18c34:	b	18c10 <sav_emit_blank_variable_records+0x98>
   18c38:	mov	r4, r0
   18c3c:	b	18c10 <sav_emit_blank_variable_records+0x98>
   18c40:	.word	0x20202020
   18c44:	.word	0x20202020

00018c48 <sav_write_missing_string>:
   18c48:	str	r4, [sp, #-8]!
   18c4c:	ldr	r2, [r1, #1596]	; 0x63c
   18c50:	mov	r1, #32
   18c54:	str	lr, [sp, #4]
   18c58:	bl	4278 <memset@plt>
   18c5c:	ldr	r4, [sp]
   18c60:	add	sp, sp, #4
   18c64:	mov	r0, #0
   18c68:	pop	{pc}		; (ldr pc, [sp], #4)

00018c6c <sav_write_missing_number>:
   18c6c:	sub	sp, sp, #8
   18c70:	mov	r3, r0
   18c74:	mvn	r1, #1048576	; 0x100000
   18c78:	mvn	r2, #0
   18c7c:	mov	r0, #0
   18c80:	str	r2, [r3]
   18c84:	str	r2, [sp]
   18c88:	str	r1, [r3, #4]
   18c8c:	str	r1, [sp, #4]
   18c90:	add	sp, sp, #8
   18c94:	bx	lr

00018c98 <sav_write_double>:
   18c98:	sub	sp, sp, #8
   18c9c:	mov	r3, r0
   18ca0:	mov	r0, #0
   18ca4:	vstr	d0, [sp]
   18ca8:	ldm	sp, {r1, r2}
   18cac:	str	r1, [r3]
   18cb0:	str	r2, [r3, #4]
   18cb4:	add	sp, sp, #8
   18cb8:	bx	lr

00018cbc <sav_write_float>:
   18cbc:	vcvt.f64.f32	d0, s0
   18cc0:	sub	sp, sp, #8
   18cc4:	mov	r3, r0
   18cc8:	mov	r0, #0
   18ccc:	vstr	d0, [sp]
   18cd0:	ldm	sp, {r1, r2}
   18cd4:	str	r1, [r3]
   18cd8:	str	r2, [r3, #4]
   18cdc:	add	sp, sp, #8
   18ce0:	bx	lr

00018ce4 <sav_write_int32>:
   18ce4:	vmov	s15, r2
   18ce8:	sub	sp, sp, #8
   18cec:	mov	r3, r0
   18cf0:	mov	r0, #0
   18cf4:	vcvt.f64.s32	d7, s15
   18cf8:	vstr	d7, [sp]
   18cfc:	ldm	sp, {r1, r2}
   18d00:	str	r1, [r3]
   18d04:	str	r2, [r3, #4]
   18d08:	add	sp, sp, #8
   18d0c:	bx	lr

00018d10 <sav_write_int16>:
   18d10:	vmov	s15, r2
   18d14:	sub	sp, sp, #8
   18d18:	mov	r3, r0
   18d1c:	mov	r0, #0
   18d20:	vcvt.f64.s32	d7, s15
   18d24:	vstr	d7, [sp]
   18d28:	ldm	sp, {r1, r2}
   18d2c:	str	r1, [r3]
   18d30:	str	r2, [r3, #4]
   18d34:	add	sp, sp, #8
   18d38:	bx	lr

00018d3c <sav_write_int8>:
   18d3c:	vmov	s15, r2
   18d40:	sub	sp, sp, #8
   18d44:	mov	r3, r0
   18d48:	mov	r0, #0
   18d4c:	vcvt.f64.s32	d7, s15
   18d50:	vstr	d7, [sp]
   18d54:	ldm	sp, {r1, r2}
   18d58:	str	r1, [r3]
   18d5c:	str	r2, [r3, #4]
   18d60:	add	sp, sp, #8
   18d64:	bx	lr

00018d68 <readstat_label_set_number_short_variables>:
   18d68:	ldr	r3, [r0, #276]	; 0x114
   18d6c:	strd	r4, [sp, #-16]!
   18d70:	str	r6, [sp, #8]
   18d74:	str	lr, [sp, #12]
   18d78:	cmp	r3, #0
   18d7c:	ble	18dc8 <readstat_label_set_number_short_variables+0x60>
   18d80:	mov	r4, #0
   18d84:	mov	r5, r0
   18d88:	mov	r6, r4
   18d8c:	mov	r1, r4
   18d90:	mov	r0, r5
   18d94:	bl	441c <readstat_get_label_set_variable@plt>
   18d98:	ldr	r3, [r0, #1596]	; 0x63c
   18d9c:	add	r4, r4, #1
   18da0:	cmp	r3, #8
   18da4:	ldr	r3, [r5, #276]	; 0x114
   18da8:	addls	r6, r6, #1
   18dac:	cmp	r3, r4
   18db0:	bgt	18d8c <readstat_label_set_number_short_variables+0x24>
   18db4:	mov	r0, r6
   18db8:	ldrd	r4, [sp]
   18dbc:	ldr	r6, [sp, #8]
   18dc0:	add	sp, sp, #12
   18dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   18dc8:	mov	r6, #0
   18dcc:	b	18db4 <readstat_label_set_number_short_variables+0x4c>

00018dd0 <sav_variable_width>:
   18dd0:	cmp	r0, #0
   18dd4:	bne	18df4 <sav_variable_width+0x24>
   18dd8:	cmp	r1, #255	; 0xff
   18ddc:	bhi	18dfc <sav_variable_width+0x2c>
   18de0:	cmp	r1, #0
   18de4:	beq	18df4 <sav_variable_width+0x24>
   18de8:	add	r1, r1, #7
   18dec:	bic	r0, r1, #7
   18df0:	bx	lr
   18df4:	mov	r0, #8
   18df8:	bx	lr
   18dfc:	add	r3, r1, #251	; 0xfb
   18e00:	movw	r0, #2081	; 0x821
   18e04:	movt	r0, #8322	; 0x2082
   18e08:	lsr	r3, r3, #2
   18e0c:	add	r1, r1, #256	; 0x100
   18e10:	add	r1, r1, #3
   18e14:	umull	r2, r3, r0, r3
   18e18:	lsr	r0, r3, #3
   18e1c:	sub	r2, r0, r0, lsl #6
   18e20:	add	r3, r0, #16777216	; 0x1000000
   18e24:	sub	r3, r3, #1
   18e28:	add	r1, r1, r2, lsl #2
   18e2c:	bic	r0, r1, #7
   18e30:	add	r0, r0, r3, lsl #8
   18e34:	bx	lr

00018e38 <sav_write_string>:
   18e38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18e3c:	mov	r4, r1
   18e40:	mov	r1, #32
   18e44:	strd	r6, [sp, #8]
   18e48:	mov	r6, r2
   18e4c:	mov	r7, r0
   18e50:	ldr	r2, [r4, #1596]	; 0x63c
   18e54:	str	r8, [sp, #16]
   18e58:	str	lr, [sp, #20]
   18e5c:	bl	4278 <memset@plt>
   18e60:	cmp	r6, #0
   18e64:	beq	18ed8 <sav_write_string+0xa0>
   18e68:	ldrb	r0, [r6]
   18e6c:	cmp	r0, #0
   18e70:	beq	18edc <sav_write_string+0xa4>
   18e74:	mov	r0, r6
   18e78:	bl	41d0 <strlen@plt>
   18e7c:	ldr	r3, [r4, #1596]	; 0x63c
   18e80:	mov	r8, r0
   18e84:	cmp	r0, r3
   18e88:	movhi	r0, #22
   18e8c:	bhi	18edc <sav_write_string+0xa4>
   18e90:	cmp	r8, #255	; 0xff
   18e94:	bls	18ef0 <sav_write_string+0xb8>
   18e98:	mov	r4, #0
   18e9c:	mov	r5, r4
   18ea0:	mov	r2, #255	; 0xff
   18ea4:	add	r1, r6, r4
   18ea8:	add	r0, r7, r5
   18eac:	add	r4, r4, r2
   18eb0:	bl	3ef4 <memcpy@plt>
   18eb4:	sub	r2, r8, r4
   18eb8:	add	r5, r5, #256	; 0x100
   18ebc:	cmp	r2, #255	; 0xff
   18ec0:	bhi	18ea0 <sav_write_string+0x68>
   18ec4:	add	r7, r7, r5
   18ec8:	add	r6, r6, r4
   18ecc:	mov	r1, r6
   18ed0:	mov	r0, r7
   18ed4:	bl	3ef4 <memcpy@plt>
   18ed8:	mov	r0, #0
   18edc:	ldrd	r4, [sp]
   18ee0:	ldrd	r6, [sp, #8]
   18ee4:	ldr	r8, [sp, #16]
   18ee8:	add	sp, sp, #20
   18eec:	pop	{pc}		; (ldr pc, [sp], #4)
   18ef0:	mov	r2, r8
   18ef4:	b	18ecc <sav_write_string+0x94>

00018ef8 <sav_variable_ok>:
   18ef8:	strd	r4, [sp, #-16]!
   18efc:	add	r4, r0, #8
   18f00:	mov	r5, r0
   18f04:	mov	r0, r4
   18f08:	str	r6, [sp, #8]
   18f0c:	str	lr, [sp, #12]
   18f10:	bl	41d0 <strlen@plt>
   18f14:	cmp	r0, #64	; 0x40
   18f18:	movhi	r0, #28
   18f1c:	bhi	190fc <sav_variable_ok+0x204>
   18f20:	cmp	r0, #0
   18f24:	moveq	r0, #38	; 0x26
   18f28:	beq	190fc <sav_variable_ok+0x204>
   18f2c:	ldr	r1, [pc, #512]	; 19134 <sav_variable_ok+0x23c>
   18f30:	mov	r0, r4
   18f34:	add	r1, pc, r1
   18f38:	bl	3dd4 <strcmp@plt>
   18f3c:	cmp	r0, #0
   18f40:	beq	190f8 <sav_variable_ok+0x200>
   18f44:	ldr	r1, [pc, #492]	; 19138 <sav_variable_ok+0x240>
   18f48:	mov	r0, r4
   18f4c:	add	r1, pc, r1
   18f50:	bl	3dd4 <strcmp@plt>
   18f54:	cmp	r0, #0
   18f58:	beq	190f8 <sav_variable_ok+0x200>
   18f5c:	ldr	r1, [pc, #472]	; 1913c <sav_variable_ok+0x244>
   18f60:	mov	r0, r4
   18f64:	add	r1, pc, r1
   18f68:	bl	3dd4 <strcmp@plt>
   18f6c:	cmp	r0, #0
   18f70:	beq	190f8 <sav_variable_ok+0x200>
   18f74:	ldr	r1, [pc, #452]	; 19140 <sav_variable_ok+0x248>
   18f78:	mov	r0, r4
   18f7c:	add	r1, pc, r1
   18f80:	bl	3dd4 <strcmp@plt>
   18f84:	cmp	r0, #0
   18f88:	beq	190f8 <sav_variable_ok+0x200>
   18f8c:	ldr	r1, [pc, #432]	; 19144 <sav_variable_ok+0x24c>
   18f90:	mov	r0, r4
   18f94:	add	r1, pc, r1
   18f98:	bl	3dd4 <strcmp@plt>
   18f9c:	cmp	r0, #0
   18fa0:	beq	190f8 <sav_variable_ok+0x200>
   18fa4:	ldr	r1, [pc, #412]	; 19148 <sav_variable_ok+0x250>
   18fa8:	mov	r0, r4
   18fac:	add	r1, pc, r1
   18fb0:	bl	3dd4 <strcmp@plt>
   18fb4:	cmp	r0, #0
   18fb8:	beq	190f8 <sav_variable_ok+0x200>
   18fbc:	ldr	r1, [pc, #392]	; 1914c <sav_variable_ok+0x254>
   18fc0:	mov	r0, r4
   18fc4:	add	r1, pc, r1
   18fc8:	bl	3dd4 <strcmp@plt>
   18fcc:	cmp	r0, #0
   18fd0:	beq	190f8 <sav_variable_ok+0x200>
   18fd4:	ldr	r1, [pc, #372]	; 19150 <sav_variable_ok+0x258>
   18fd8:	mov	r0, r4
   18fdc:	add	r1, pc, r1
   18fe0:	bl	3dd4 <strcmp@plt>
   18fe4:	cmp	r0, #0
   18fe8:	beq	190f8 <sav_variable_ok+0x200>
   18fec:	ldr	r1, [pc, #352]	; 19154 <sav_variable_ok+0x25c>
   18ff0:	mov	r0, r4
   18ff4:	add	r1, pc, r1
   18ff8:	bl	3dd4 <strcmp@plt>
   18ffc:	cmp	r0, #0
   19000:	beq	190f8 <sav_variable_ok+0x200>
   19004:	ldr	r1, [pc, #332]	; 19158 <sav_variable_ok+0x260>
   19008:	mov	r0, r4
   1900c:	add	r1, pc, r1
   19010:	bl	3dd4 <strcmp@plt>
   19014:	cmp	r0, #0
   19018:	beq	190f8 <sav_variable_ok+0x200>
   1901c:	ldr	r1, [pc, #312]	; 1915c <sav_variable_ok+0x264>
   19020:	mov	r0, r4
   19024:	add	r1, pc, r1
   19028:	bl	3dd4 <strcmp@plt>
   1902c:	cmp	r0, #0
   19030:	beq	190f8 <sav_variable_ok+0x200>
   19034:	ldr	r1, [pc, #292]	; 19160 <sav_variable_ok+0x268>
   19038:	mov	r0, r4
   1903c:	add	r1, pc, r1
   19040:	bl	3dd4 <strcmp@plt>
   19044:	cmp	r0, #0
   19048:	beq	190f8 <sav_variable_ok+0x200>
   1904c:	ldr	r1, [pc, #272]	; 19164 <sav_variable_ok+0x26c>
   19050:	mov	r0, r4
   19054:	add	r1, pc, r1
   19058:	bl	3dd4 <strcmp@plt>
   1905c:	cmp	r0, #0
   19060:	beq	190f8 <sav_variable_ok+0x200>
   19064:	ldrb	r1, [r5, #8]
   19068:	cmp	r1, #0
   1906c:	beq	1912c <sav_variable_ok+0x234>
   19070:	cmp	r1, #32
   19074:	beq	190e4 <sav_variable_ok+0x1ec>
   19078:	mov	r0, r1
   1907c:	b	19094 <sav_variable_ok+0x19c>
   19080:	ldrb	r0, [r4, #1]!
   19084:	cmp	r0, #0
   19088:	beq	1910c <sav_variable_ok+0x214>
   1908c:	cmp	r0, #32
   19090:	beq	190e4 <sav_variable_ok+0x1ec>
   19094:	sub	r2, r0, #64	; 0x40
   19098:	sub	r3, r0, #35	; 0x23
   1909c:	cmp	r0, #46	; 0x2e
   190a0:	cmpne	r2, #26
   190a4:	movhi	r2, #1
   190a8:	movls	r2, #0
   190ac:	cmp	r0, #95	; 0x5f
   190b0:	moveq	r2, #0
   190b4:	andne	r2, r2, #1
   190b8:	cmp	r3, #1
   190bc:	movls	r3, #0
   190c0:	andhi	r3, r2, #1
   190c4:	cmp	r3, #0
   190c8:	beq	19080 <sav_variable_ok+0x188>
   190cc:	sub	r3, r0, #97	; 0x61
   190d0:	sub	r0, r0, #48	; 0x30
   190d4:	cmp	r3, #25
   190d8:	bls	19080 <sav_variable_ok+0x188>
   190dc:	cmp	r0, #9
   190e0:	bls	19080 <sav_variable_ok+0x188>
   190e4:	ldrd	r4, [sp]
   190e8:	mov	r0, #26
   190ec:	ldr	r6, [sp, #8]
   190f0:	add	sp, sp, #12
   190f4:	pop	{pc}		; (ldr pc, [sp], #4)
   190f8:	mov	r0, #27
   190fc:	ldrd	r4, [sp]
   19100:	ldr	r6, [sp, #8]
   19104:	add	sp, sp, #12
   19108:	pop	{pc}		; (ldr pc, [sp], #4)
   1910c:	sub	r3, r1, #64	; 0x40
   19110:	cmp	r3, #26
   19114:	bls	190fc <sav_variable_ok+0x204>
   19118:	sub	r0, r1, #97	; 0x61
   1911c:	cmp	r0, #25
   19120:	movls	r0, #0
   19124:	movhi	r0, #25
   19128:	b	190fc <sav_variable_ok+0x204>
   1912c:	mov	r0, r1
   19130:	b	190fc <sav_variable_ok+0x204>
   19134:	.word	0x0000e230
   19138:	.word	0x0000e21c
   1913c:	.word	0x0000e208
   19140:	.word	0x0000e1f4
   19144:	.word	0x0000e1e0
   19148:	.word	0x0000e1cc
   1914c:	.word	0x0000e1b8
   19150:	.word	0x0000e1a4
   19154:	.word	0x0000e190
   19158:	.word	0x0000e17c
   1915c:	.word	0x0000e168
   19160:	.word	0x0000e154
   19164:	.word	0x0000e140

00019168 <sav_emit_variable_records>:
   19168:	ldr	r3, [r0, #28]
   1916c:	cmp	r3, #0
   19170:	ble	19a04 <sav_emit_variable_records+0x89c>
   19174:	ldr	r3, [pc, #1556]	; 19790 <sav_emit_variable_records+0x628>
   19178:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1917c:	strd	r6, [sp, #8]
   19180:	strd	r8, [sp, #16]
   19184:	strd	sl, [sp, #24]
   19188:	mov	fp, r0
   1918c:	add	r3, pc, r3
   19190:	str	lr, [sp, #32]
   19194:	sub	sp, sp, #404	; 0x194
   19198:	str	r1, [sp, #4]
   1919c:	str	r3, [sp, #44]	; 0x2c
   191a0:	movw	r3, #2081	; 0x821
   191a4:	movt	r3, #8322	; 0x2082
   191a8:	str	r3, [sp, #52]	; 0x34
   191ac:	movw	r3, #36409	; 0x8e39
   191b0:	movt	r3, #14563	; 0x38e3
   191b4:	str	r3, [sp, #40]	; 0x28
   191b8:	mov	r3, #0
   191bc:	str	r3, [sp, #8]
   191c0:	add	r3, sp, #84	; 0x54
   191c4:	str	r3, [sp, #16]
   191c8:	add	r3, sp, #60	; 0x3c
   191cc:	str	r3, [sp, #48]	; 0x30
   191d0:	ldr	r3, [pc, #1468]	; 19794 <sav_emit_variable_records+0x62c>
   191d4:	add	r3, pc, r3
   191d8:	str	r3, [sp, #36]	; 0x24
   191dc:	mov	r0, fp
   191e0:	ldr	r1, [sp, #8]
   191e4:	bl	4350 <readstat_get_variable@plt>
   191e8:	mov	ip, #2
   191ec:	mov	r1, #9
   191f0:	ldr	r3, [sp, #4]
   191f4:	mov	r6, r0
   191f8:	ldr	r4, [sp, #16]
   191fc:	str	ip, [sp, #60]	; 0x3c
   19200:	ldr	r2, [sp, #44]	; 0x2c
   19204:	mov	r0, r4
   19208:	bl	4254 <snprintf@plt>
   1920c:	mov	r0, r4
   19210:	bl	41d0 <strlen@plt>
   19214:	mov	r2, #4
   19218:	str	r0, [sp, #24]
   1921c:	mov	r0, fp
   19220:	ldr	r1, [sp, #48]	; 0x30
   19224:	bl	4428 <readstat_write_bytes@plt>
   19228:	subs	r2, r0, #0
   1922c:	bne	192ac <sav_emit_variable_records+0x144>
   19230:	add	r3, sp, #116	; 0x74
   19234:	ldr	r1, [r6]
   19238:	str	r3, [sp, #20]
   1923c:	str	r2, [sp, #116]	; 0x74
   19240:	str	r2, [sp, #120]	; 0x78
   19244:	str	r2, [sp, #124]	; 0x7c
   19248:	str	r2, [sp, #128]	; 0x80
   1924c:	str	r2, [sp, #132]	; 0x84
   19250:	str	r2, [sp, #136]	; 0x88
   19254:	str	r2, [sp, #140]	; 0x8c
   19258:	ldrb	r3, [r6, #564]	; 0x234
   1925c:	adds	r3, r3, #0
   19260:	movne	r3, #1
   19264:	cmp	r1, #0
   19268:	bne	192cc <sav_emit_variable_records+0x164>
   1926c:	ldr	r2, [r6, #1600]	; 0x640
   19270:	cmp	r2, #255	; 0xff
   19274:	movcs	r2, #255	; 0xff
   19278:	strd	r2, [sp, #116]	; 0x74
   1927c:	mov	r0, r6
   19280:	bl	429c <readstat_variable_get_storage_width@plt>
   19284:	cmp	r0, #8
   19288:	movhi	sl, #0
   1928c:	bls	19494 <sav_emit_variable_records+0x32c>
   19290:	add	r4, sp, #144	; 0x90
   19294:	mov	r0, r6
   19298:	str	sl, [sp, #124]	; 0x7c
   1929c:	mov	r1, r4
   192a0:	bl	40c8 <spss_format_for_variable@plt>
   192a4:	subs	r2, r0, #0
   192a8:	beq	19394 <sav_emit_variable_records+0x22c>
   192ac:	mov	r0, r2
   192b0:	add	sp, sp, #404	; 0x194
   192b4:	ldrd	r4, [sp]
   192b8:	ldrd	r6, [sp, #8]
   192bc:	ldrd	r8, [sp, #16]
   192c0:	ldrd	sl, [sp, #24]
   192c4:	add	sp, sp, #32
   192c8:	pop	{pc}		; (ldr pc, [sp], #4)
   192cc:	cmp	r1, #5
   192d0:	str	r2, [sp, #12]
   192d4:	str	r3, [sp, #120]	; 0x78
   192d8:	bne	1927c <sav_emit_variable_records+0x114>
   192dc:	mov	r0, r6
   192e0:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   192e4:	subs	r8, r0, #0
   192e8:	ble	19760 <sav_emit_variable_records+0x5f8>
   192ec:	ldr	r2, [sp, #12]
   192f0:	mov	sl, r8
   192f4:	add	r9, sp, #96	; 0x60
   192f8:	add	r4, sp, #144	; 0x90
   192fc:	mov	r5, sl
   19300:	str	r8, [sp, #12]
   19304:	str	fp, [sp, #28]
   19308:	mov	r7, r2
   1930c:	mov	r8, r2
   19310:	mov	r2, r7
   19314:	mov	r1, r6
   19318:	mov	r0, r9
   1931c:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   19320:	mov	r2, r7
   19324:	mov	r1, r6
   19328:	mov	r0, r4
   1932c:	add	r7, r7, #1
   19330:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   19334:	ldm	r9, {r0, r1, r2, r3}
   19338:	bl	4284 <spss_64bit_value@plt>
   1933c:	mov	sl, r0
   19340:	mov	fp, r1
   19344:	ldm	r4, {r0, r1, r2, r3}
   19348:	bl	4284 <spss_64bit_value@plt>
   1934c:	ldr	r3, [sp, #12]
   19350:	cmp	fp, r1
   19354:	cmpeq	sl, r0
   19358:	addne	r5, r5, #1
   1935c:	movne	r8, #1
   19360:	cmp	r3, r7
   19364:	bne	19310 <sav_emit_variable_records+0x1a8>
   19368:	cmp	r8, #0
   1936c:	mov	sl, r5
   19370:	ldr	fp, [sp, #28]
   19374:	beq	1937c <sav_emit_variable_records+0x214>
   19378:	rsb	sl, sl, #0
   1937c:	eor	r3, sl, sl, asr #31
   19380:	sub	r3, r3, sl, asr #31
   19384:	cmp	r3, #3
   19388:	ble	19290 <sav_emit_variable_records+0x128>
   1938c:	mov	r2, #31
   19390:	b	192ac <sav_emit_variable_records+0x144>
   19394:	ldr	ip, [sp, #24]
   19398:	add	r0, sp, #136	; 0x88
   1939c:	ldr	r3, [sp, #148]	; 0x94
   193a0:	ldr	r1, [sp, #144]	; 0x90
   193a4:	sub	ip, ip, #1
   193a8:	ldr	r2, [sp, #152]	; 0x98
   193ac:	cmp	r3, #255	; 0xff
   193b0:	movge	r3, #255	; 0xff
   193b4:	add	r9, pc, #972	; 0x3cc
   193b8:	ldrd	r8, [r9]
   193bc:	cmp	ip, #7
   193c0:	lsl	r3, r3, #8
   193c4:	orr	r2, r2, r1, lsl #16
   193c8:	uxth	r3, r3
   193cc:	orr	r3, r2, r3
   193d0:	strd	r8, [r0]
   193d4:	str	r3, [sp, #128]	; 0x80
   193d8:	str	r3, [sp, #132]	; 0x84
   193dc:	bls	19750 <sav_emit_variable_records+0x5e8>
   193e0:	mov	r2, #28
   193e4:	mov	r0, fp
   193e8:	ldr	r1, [sp, #20]
   193ec:	bl	4428 <readstat_write_bytes@plt>
   193f0:	subs	r2, r0, #0
   193f4:	bne	192ac <sav_emit_variable_records+0x144>
   193f8:	add	r7, r6, #564	; 0x234
   193fc:	mov	r0, r7
   19400:	bl	41d0 <strlen@plt>
   19404:	cmp	r0, #0
   19408:	bne	19538 <sav_emit_variable_records+0x3d0>
   1940c:	ldr	r3, [r6]
   19410:	mov	r0, r6
   19414:	cmp	r3, #5
   19418:	beq	19768 <sav_emit_variable_records+0x600>
   1941c:	bl	429c <readstat_variable_get_storage_width@plt>
   19420:	cmp	r0, #8
   19424:	bls	198e8 <sav_emit_variable_records+0x780>
   19428:	ldr	r1, [r6, #1596]	; 0x63c
   1942c:	mov	r0, fp
   19430:	lsr	r1, r1, #3
   19434:	sub	r1, r1, #1
   19438:	cmp	r1, #31
   1943c:	movge	r1, #31
   19440:	bl	18b78 <sav_emit_blank_variable_records>
   19444:	subs	r2, r0, #0
   19448:	bne	192ac <sav_emit_variable_records+0x144>
   1944c:	ldr	r1, [r6]
   19450:	ldr	r2, [r6, #1600]	; 0x640
   19454:	cmp	r2, #255	; 0xff
   19458:	movls	r3, #0
   1945c:	movhi	r3, #1
   19460:	cmp	r1, #0
   19464:	movne	r3, #0
   19468:	cmp	r3, #0
   1946c:	bne	19598 <sav_emit_variable_records+0x430>
   19470:	ldmib	sp, {r1, r2}
   19474:	ldr	r3, [fp, #28]
   19478:	add	r2, r2, #1
   1947c:	add	r1, r1, #15
   19480:	cmp	r3, r2
   19484:	stmib	sp, {r1, r2}
   19488:	bgt	191dc <sav_emit_variable_records+0x74>
   1948c:	mov	r2, #0
   19490:	b	192ac <sav_emit_variable_records+0x144>
   19494:	mov	r0, r6
   19498:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   1949c:	subs	r8, r0, #0
   194a0:	ble	19760 <sav_emit_variable_records+0x5f8>
   194a4:	mov	r3, #0
   194a8:	mov	sl, r8
   194ac:	mov	r5, r3
   194b0:	add	r9, sp, #96	; 0x60
   194b4:	add	r4, sp, #144	; 0x90
   194b8:	str	r3, [sp, #12]
   194bc:	mov	r2, r5
   194c0:	mov	r1, r6
   194c4:	mov	r0, r9
   194c8:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   194cc:	mov	r2, r5
   194d0:	mov	r1, r6
   194d4:	mov	r0, r4
   194d8:	add	r5, r5, #1
   194dc:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   194e0:	ldm	r9, {r0, r1, r2, r3}
   194e4:	bl	3f84 <readstat_string_value@plt>
   194e8:	mov	r7, r0
   194ec:	ldm	r4, {r0, r1, r2, r3}
   194f0:	bl	3f84 <readstat_string_value@plt>
   194f4:	cmp	r7, #0
   194f8:	cmpne	r0, #0
   194fc:	mov	r1, r0
   19500:	mov	r0, r7
   19504:	beq	19520 <sav_emit_variable_records+0x3b8>
   19508:	bl	3dd4 <strcmp@plt>
   1950c:	cmp	r0, #0
   19510:	beq	19520 <sav_emit_variable_records+0x3b8>
   19514:	mov	r3, #1
   19518:	add	sl, sl, #1
   1951c:	str	r3, [sp, #12]
   19520:	cmp	r8, r5
   19524:	bne	194bc <sav_emit_variable_records+0x354>
   19528:	ldr	r3, [sp, #12]
   1952c:	cmp	r3, #0
   19530:	bne	19378 <sav_emit_variable_records+0x210>
   19534:	b	1937c <sav_emit_variable_records+0x214>
   19538:	cmp	r0, #256	; 0x100
   1953c:	mov	r2, #4
   19540:	movhi	r3, #256	; 0x100
   19544:	add	r1, sp, #96	; 0x60
   19548:	strls	r0, [sp, #96]	; 0x60
   1954c:	mov	r0, fp
   19550:	strhi	r3, [sp, #96]	; 0x60
   19554:	bl	4428 <readstat_write_bytes@plt>
   19558:	subs	r2, r0, #0
   1955c:	bne	192ac <sav_emit_variable_records+0x144>
   19560:	ldr	r5, [sp, #96]	; 0x60
   19564:	mov	r1, r7
   19568:	mov	r0, r4
   1956c:	add	r5, r5, #3
   19570:	bic	r5, r5, #3
   19574:	mov	r2, r5
   19578:	bl	4290 <strncpy@plt>
   1957c:	mov	r2, r5
   19580:	mov	r1, r4
   19584:	mov	r0, fp
   19588:	bl	4428 <readstat_write_bytes@plt>
   1958c:	subs	r2, r0, #0
   19590:	beq	1940c <sav_emit_variable_records+0x2a4>
   19594:	b	192ac <sav_emit_variable_records+0x144>
   19598:	add	r2, r2, #251	; 0xfb
   1959c:	lsr	r3, r2, #2
   195a0:	cmp	r2, #504	; 0x1f8
   195a4:	ldr	r2, [sp, #52]	; 0x34
   195a8:	umull	r2, r3, r2, r3
   195ac:	lsr	r3, r3, #3
   195b0:	str	r3, [sp, #24]
   195b4:	bcc	19470 <sav_emit_variable_records+0x308>
   195b8:	sub	r3, r3, #1
   195bc:	mov	r5, #252	; 0xfc
   195c0:	mov	r8, #1
   195c4:	add	r9, sp, #96	; 0x60
   195c8:	str	r3, [sp, #28]
   195cc:	ldr	r3, [sp, #4]
   195d0:	add	r3, r3, #9
   195d4:	str	r3, [sp, #32]
   195d8:	b	1968c <sav_emit_variable_records+0x524>
   195dc:	mov	r0, r6
   195e0:	ldr	r1, [sp, #20]
   195e4:	str	r7, [sp, #144]	; 0x90
   195e8:	bl	40c8 <spss_format_for_variable@plt>
   195ec:	cmp	r0, #0
   195f0:	str	r7, [sp, #120]	; 0x78
   195f4:	bne	19738 <sav_emit_variable_records+0x5d0>
   195f8:	add	r3, pc, #392	; 0x188
   195fc:	ldrd	r2, [r3]
   19600:	cmp	r7, #255	; 0xff
   19604:	add	r0, sp, #164	; 0xa4
   19608:	movlt	ip, r7
   1960c:	movge	ip, #255	; 0xff
   19610:	ldr	r1, [sp, #116]	; 0x74
   19614:	cmp	sl, #8
   19618:	strd	r2, [sp, #164]	; 0xa4
   1961c:	lsl	r2, ip, #8
   19620:	ldr	r3, [sp, #124]	; 0x7c
   19624:	uxth	r2, r2
   19628:	orr	r3, r3, r1, lsl #16
   1962c:	orr	r3, r3, r2
   19630:	str	r3, [sp, #156]	; 0x9c
   19634:	str	r3, [sp, #160]	; 0xa0
   19638:	bne	19740 <sav_emit_variable_records+0x5d8>
   1963c:	mov	r2, #28
   19640:	mov	r1, r4
   19644:	mov	r0, fp
   19648:	bl	4428 <readstat_write_bytes@plt>
   1964c:	cmp	r0, #0
   19650:	bne	19738 <sav_emit_variable_records+0x5d0>
   19654:	add	r1, r7, #7
   19658:	mov	r0, fp
   1965c:	lsr	r1, r1, #3
   19660:	sub	r1, r1, #1
   19664:	cmp	r1, #31
   19668:	movge	r1, #31
   1966c:	bl	18b78 <sav_emit_blank_variable_records>
   19670:	cmp	r0, #0
   19674:	bne	19738 <sav_emit_variable_records+0x5d0>
   19678:	ldr	r3, [sp, #24]
   1967c:	add	r8, r8, #1
   19680:	add	r5, r5, #252	; 0xfc
   19684:	cmp	r3, r8
   19688:	beq	19470 <sav_emit_variable_records+0x308>
   1968c:	ldr	r3, [sp, #28]
   19690:	mov	r0, #2
   19694:	mov	ip, #0
   19698:	mov	r1, #9
   1969c:	ldr	r2, [sp, #36]	; 0x24
   196a0:	cmp	r3, r8
   196a4:	ldr	r3, [sp, #32]
   196a8:	movne	r7, #255	; 0xff
   196ac:	ldreq	r7, [r6, #1600]	; 0x640
   196b0:	str	r0, [sp, #84]	; 0x54
   196b4:	mov	r0, r9
   196b8:	str	ip, [r4]
   196bc:	str	ip, [r4, #4]
   196c0:	str	ip, [r4, #8]
   196c4:	subeq	r7, r7, r5
   196c8:	str	ip, [r4, #12]
   196cc:	str	ip, [r4, #16]
   196d0:	str	ip, [r4, #20]
   196d4:	str	ip, [r4, #24]
   196d8:	bl	4254 <snprintf@plt>
   196dc:	mov	r0, r9
   196e0:	bl	41d0 <strlen@plt>
   196e4:	ldr	r3, [sp, #40]	; 0x28
   196e8:	mov	sl, r0
   196ec:	umull	r3, r2, r3, r8
   196f0:	add	r3, r0, #1
   196f4:	mov	r0, fp
   196f8:	str	r3, [sp, #12]
   196fc:	add	r3, sp, #400	; 0x190
   19700:	lsr	r2, r2, #3
   19704:	add	r1, r3, sl
   19708:	add	r2, r2, r2, lsl #3
   1970c:	sub	r2, r8, r2, lsl #2
   19710:	cmp	r2, #9
   19714:	uxtb	r2, r2
   19718:	addls	r2, r2, #48	; 0x30
   1971c:	addhi	r2, r2, #55	; 0x37
   19720:	strb	r2, [r1, #-304]	; 0xfffffed0
   19724:	mov	r2, #4
   19728:	ldr	r1, [sp, #16]
   1972c:	bl	4428 <readstat_write_bytes@plt>
   19730:	cmp	r0, #0
   19734:	beq	195dc <sav_emit_variable_records+0x474>
   19738:	mov	r2, r0
   1973c:	b	192ac <sav_emit_variable_records+0x144>
   19740:	mov	r1, r9
   19744:	ldr	r2, [sp, #12]
   19748:	bl	3ef4 <memcpy@plt>
   1974c:	b	1963c <sav_emit_variable_records+0x4d4>
   19750:	ldr	r1, [sp, #16]
   19754:	ldr	r2, [sp, #24]
   19758:	bl	3ef4 <memcpy@plt>
   1975c:	b	193e0 <sav_emit_variable_records+0x278>
   19760:	mov	sl, r8
   19764:	b	1937c <sav_emit_variable_records+0x214>
   19768:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   1976c:	subs	sl, r0, #0
   19770:	ble	19428 <sav_emit_variable_records+0x2c0>
   19774:	mov	r5, #0
   19778:	add	r9, sp, #96	; 0x60
   1977c:	mov	r8, r6
   19780:	b	197a0 <sav_emit_variable_records+0x638>
   19784:	nop	{0}
   19788:	.word	0x20202020
   1978c:	.word	0x20202020
   19790:	.word	0x0000cb04
   19794:	.word	0x0000cabc
   19798:	cmp	sl, r5
   1979c:	beq	199f8 <sav_emit_variable_records+0x890>
   197a0:	mov	r2, r5
   197a4:	mov	r1, r8
   197a8:	mov	r0, r9
   197ac:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   197b0:	mov	r2, r5
   197b4:	mov	r1, r8
   197b8:	mov	r0, r4
   197bc:	add	r5, r5, #1
   197c0:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   197c4:	ldm	r9, {r0, r1, r2, r3}
   197c8:	bl	4284 <spss_64bit_value@plt>
   197cc:	mov	r6, r0
   197d0:	mov	r7, r1
   197d4:	ldm	r4, {r0, r1, r2, r3}
   197d8:	bl	4284 <spss_64bit_value@plt>
   197dc:	cmp	r7, r1
   197e0:	cmpeq	r6, r0
   197e4:	beq	19798 <sav_emit_variable_records+0x630>
   197e8:	ldm	r9, {r0, r1, r2, r3}
   197ec:	mov	r6, r8
   197f0:	bl	4284 <spss_64bit_value@plt>
   197f4:	add	r3, sp, #64	; 0x40
   197f8:	mov	r2, #8
   197fc:	strd	r0, [sp, #64]	; 0x40
   19800:	mov	r1, r3
   19804:	mov	r0, fp
   19808:	bl	4428 <readstat_write_bytes@plt>
   1980c:	subs	r2, r0, #0
   19810:	bne	192ac <sav_emit_variable_records+0x144>
   19814:	ldm	r4, {r0, r1, r2, r3}
   19818:	bl	4284 <spss_64bit_value@plt>
   1981c:	mov	r2, #8
   19820:	strd	r0, [sp, #72]	; 0x48
   19824:	add	r1, sp, #72	; 0x48
   19828:	mov	r0, fp
   1982c:	bl	4428 <readstat_write_bytes@plt>
   19830:	subs	r2, r0, #0
   19834:	bne	192ac <sav_emit_variable_records+0x144>
   19838:	mov	r8, #2
   1983c:	add	r5, sp, #72	; 0x48
   19840:	add	r3, sp, #80	; 0x50
   19844:	str	fp, [sp, #12]
   19848:	mov	r7, #0
   1984c:	str	r3, [sp, #24]
   19850:	str	r5, [sp, #28]
   19854:	mov	r5, sl
   19858:	b	19864 <sav_emit_variable_records+0x6fc>
   1985c:	cmp	r5, r7
   19860:	beq	198e0 <sav_emit_variable_records+0x778>
   19864:	mov	r2, r7
   19868:	mov	r1, r6
   1986c:	mov	r0, r9
   19870:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   19874:	mov	r2, r7
   19878:	mov	r1, r6
   1987c:	mov	r0, r4
   19880:	add	r7, r7, #1
   19884:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   19888:	ldm	r9, {r0, r1, r2, r3}
   1988c:	bl	4284 <spss_64bit_value@plt>
   19890:	mov	sl, r0
   19894:	mov	fp, r1
   19898:	ldm	r4, {r0, r1, r2, r3}
   1989c:	bl	4284 <spss_64bit_value@plt>
   198a0:	cmp	fp, r1
   198a4:	cmpeq	sl, r0
   198a8:	bne	1985c <sav_emit_variable_records+0x6f4>
   198ac:	ldm	r9, {r0, r1, r2, r3}
   198b0:	add	r8, r8, #1
   198b4:	bl	4284 <spss_64bit_value@plt>
   198b8:	ldr	r3, [sp, #24]
   198bc:	mov	r2, #8
   198c0:	strd	r0, [r3, #-8]
   198c4:	ldr	r0, [sp, #12]
   198c8:	ldr	r1, [sp, #28]
   198cc:	bl	4428 <readstat_write_bytes@plt>
   198d0:	cmp	r0, #0
   198d4:	bne	19738 <sav_emit_variable_records+0x5d0>
   198d8:	cmp	r8, #3
   198dc:	bne	1985c <sav_emit_variable_records+0x6f4>
   198e0:	ldr	fp, [sp, #12]
   198e4:	b	19428 <sav_emit_variable_records+0x2c0>
   198e8:	mov	r0, r6
   198ec:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   198f0:	subs	r8, r0, #0
   198f4:	ble	19428 <sav_emit_variable_records+0x2c0>
   198f8:	mov	r5, #0
   198fc:	add	r9, sp, #96	; 0x60
   19900:	mov	r2, r5
   19904:	mov	r1, r6
   19908:	mov	r0, r9
   1990c:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   19910:	mov	r2, r5
   19914:	mov	r1, r6
   19918:	mov	r0, r4
   1991c:	add	r5, r5, #1
   19920:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   19924:	ldm	r9, {r0, r1, r2, r3}
   19928:	bl	3f84 <readstat_string_value@plt>
   1992c:	mov	r7, r0
   19930:	ldm	r4, {r0, r1, r2, r3}
   19934:	bl	3f84 <readstat_string_value@plt>
   19938:	cmp	r7, #0
   1993c:	cmpne	r0, #0
   19940:	mov	sl, r0
   19944:	mov	r1, r0
   19948:	mov	r0, r7
   1994c:	beq	1995c <sav_emit_variable_records+0x7f4>
   19950:	bl	3dd4 <strcmp@plt>
   19954:	cmp	r0, #0
   19958:	bne	19a10 <sav_emit_variable_records+0x8a8>
   1995c:	cmp	r8, r5
   19960:	bne	19900 <sav_emit_variable_records+0x798>
   19964:	mov	sl, #0
   19968:	mov	r7, #0
   1996c:	b	19978 <sav_emit_variable_records+0x810>
   19970:	cmp	r8, r7
   19974:	beq	19428 <sav_emit_variable_records+0x2c0>
   19978:	mov	r2, r7
   1997c:	mov	r1, r6
   19980:	mov	r0, r9
   19984:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   19988:	mov	r2, r7
   1998c:	mov	r1, r6
   19990:	mov	r0, r4
   19994:	add	r7, r7, #1
   19998:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   1999c:	ldm	r9, {r0, r1, r2, r3}
   199a0:	bl	3f84 <readstat_string_value@plt>
   199a4:	mov	r5, r0
   199a8:	ldm	r4, {r0, r1, r2, r3}
   199ac:	bl	3f84 <readstat_string_value@plt>
   199b0:	cmp	r5, #0
   199b4:	cmpne	r0, #0
   199b8:	mov	r1, r0
   199bc:	mov	r0, r5
   199c0:	beq	19970 <sav_emit_variable_records+0x808>
   199c4:	bl	3dd4 <strcmp@plt>
   199c8:	cmp	r0, #0
   199cc:	bne	19970 <sav_emit_variable_records+0x808>
   199d0:	mov	r1, r5
   199d4:	mov	r2, #8
   199d8:	mov	r0, fp
   199dc:	add	sl, sl, #1
   199e0:	bl	4524 <readstat_write_space_padded_string@plt>
   199e4:	cmp	r0, #0
   199e8:	bne	19738 <sav_emit_variable_records+0x5d0>
   199ec:	cmp	sl, #3
   199f0:	bne	19970 <sav_emit_variable_records+0x808>
   199f4:	b	19428 <sav_emit_variable_records+0x2c0>
   199f8:	mov	r6, r8
   199fc:	mov	r8, #0
   19a00:	b	1983c <sav_emit_variable_records+0x6d4>
   19a04:	mov	r2, #0
   19a08:	mov	r0, r2
   19a0c:	bx	lr
   19a10:	mov	r2, #8
   19a14:	mov	r1, r7
   19a18:	mov	r0, fp
   19a1c:	bl	4524 <readstat_write_space_padded_string@plt>
   19a20:	subs	r2, r0, #0
   19a24:	bne	192ac <sav_emit_variable_records+0x144>
   19a28:	mov	r2, #8
   19a2c:	mov	r1, sl
   19a30:	mov	r0, fp
   19a34:	bl	4524 <readstat_write_space_padded_string@plt>
   19a38:	subs	r2, r0, #0
   19a3c:	bne	192ac <sav_emit_variable_records+0x144>
   19a40:	mov	sl, #2
   19a44:	b	19968 <sav_emit_variable_records+0x800>

00019a48 <sav_begin_data>:
   19a48:	ldr	r3, [r0, #308]	; 0x134
   19a4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19a50:	strd	r6, [sp, #8]
   19a54:	strd	r8, [sp, #16]
   19a58:	strd	sl, [sp, #24]
   19a5c:	cmp	r3, #0
   19a60:	str	lr, [sp, #32]
   19a64:	sub	sp, sp, #308	; 0x134
   19a68:	moveq	r4, #14
   19a6c:	beq	19e2c <sav_begin_data+0x3e4>
   19a70:	ldr	r4, [r0, #28]
   19a74:	mov	r9, r0
   19a78:	mov	r1, #15
   19a7c:	mov	r0, r4
   19a80:	bl	3d2c <calloc@plt>
   19a84:	str	r0, [sp, #8]
   19a88:	mov	r0, r4
   19a8c:	bl	4164 <ck_hash_table_init@plt>
   19a90:	ldr	r3, [r9, #28]
   19a94:	mov	r8, r0
   19a98:	cmp	r3, #0
   19a9c:	ble	19b8c <sav_begin_data+0x144>
   19aa0:	ldr	r3, [sp, #8]
   19aa4:	mov	r5, #0
   19aa8:	ldr	fp, [pc, #2160]	; 1a320 <sav_begin_data+0x8d8>
   19aac:	add	r6, r3, #9
   19ab0:	ldr	r3, [pc, #2156]	; 1a324 <sav_begin_data+0x8dc>
   19ab4:	add	fp, pc, fp
   19ab8:	add	r3, pc, r3
   19abc:	str	r3, [sp, #12]
   19ac0:	ldr	r3, [pc, #2144]	; 1a328 <sav_begin_data+0x8e0>
   19ac4:	add	r3, pc, r3
   19ac8:	str	r3, [sp, #16]
   19acc:	mov	r1, r5
   19ad0:	mov	r0, r9
   19ad4:	bl	4350 <readstat_get_variable@plt>
   19ad8:	sub	r4, r6, #9
   19adc:	add	r3, r0, #8
   19ae0:	mov	r7, r0
   19ae4:	mov	r2, fp
   19ae8:	mov	r0, r4
   19aec:	mov	r1, #9
   19af0:	bl	4254 <snprintf@plt>
   19af4:	ldrb	sl, [r6, #-9]
   19af8:	cmp	sl, #0
   19afc:	beq	19b20 <sav_begin_data+0xd8>
   19b00:	bl	4158 <__ctype_toupper_loc@plt>
   19b04:	mov	r2, r4
   19b08:	ldr	r3, [r0]
   19b0c:	ldr	r3, [r3, sl, lsl #2]
   19b10:	strb	r3, [r2]
   19b14:	ldrb	sl, [r2, #1]!
   19b18:	cmp	sl, #0
   19b1c:	bne	19b08 <sav_begin_data+0xc0>
   19b20:	mov	r1, r8
   19b24:	mov	r0, r4
   19b28:	bl	3fa8 <ck_str_hash_lookup@plt>
   19b2c:	cmp	r0, #0
   19b30:	add	r5, r5, #1
   19b34:	beq	19b4c <sav_begin_data+0x104>
   19b38:	mov	r3, r5
   19b3c:	mov	r1, #9
   19b40:	ldr	r2, [sp, #12]
   19b44:	mov	r0, r4
   19b48:	bl	4254 <snprintf@plt>
   19b4c:	mov	r2, r8
   19b50:	mov	r1, r7
   19b54:	mov	r0, r4
   19b58:	bl	44c4 <ck_str_hash_insert@plt>
   19b5c:	ldr	r3, [r7, #1600]	; 0x640
   19b60:	cmp	r3, #255	; 0xff
   19b64:	bls	19b7c <sav_begin_data+0x134>
   19b68:	mov	r3, r4
   19b6c:	mov	r1, #6
   19b70:	ldr	r2, [sp, #16]
   19b74:	mov	r0, r6
   19b78:	bl	4254 <snprintf@plt>
   19b7c:	ldr	r3, [r9, #28]
   19b80:	add	r6, r6, #15
   19b84:	cmp	r3, r5
   19b88:	bgt	19acc <sav_begin_data+0x84>
   19b8c:	mov	r0, r8
   19b90:	add	sl, sp, #128	; 0x80
   19b94:	bl	4218 <ck_hash_table_free@plt>
   19b98:	add	r3, sp, #48	; 0x30
   19b9c:	mov	r2, #176	; 0xb0
   19ba0:	mov	r1, #0
   19ba4:	mov	r0, sl
   19ba8:	mov	r4, r3
   19bac:	str	r3, [sp, #12]
   19bb0:	add	r5, sp, #52	; 0x34
   19bb4:	bl	4278 <memset@plt>
   19bb8:	ldr	r3, [r9, #20]
   19bbc:	mov	r0, r4
   19bc0:	add	r4, sp, #64	; 0x40
   19bc4:	add	fp, sp, #80	; 0x50
   19bc8:	strd	r4, [sp, #16]
   19bcc:	str	r3, [sp, #48]	; 0x30
   19bd0:	bl	4134 <localtime@plt>
   19bd4:	ldr	ip, [pc, #1872]	; 1a32c <sav_begin_data+0x8e4>
   19bd8:	subs	r7, r0, #0
   19bdc:	mov	lr, #0
   19be0:	str	lr, [r4, #4]
   19be4:	str	lr, [r5, #4]
   19be8:	strh	lr, [r4, #8]
   19bec:	add	ip, pc, ip
   19bf0:	strb	lr, [r5, #8]
   19bf4:	ldrd	r2, [ip]
   19bf8:	str	lr, [sp, #52]	; 0x34
   19bfc:	ldrd	r0, [ip, #8]
   19c00:	str	lr, [sp, #64]	; 0x40
   19c04:	strd	r2, [sp, #80]	; 0x50
   19c08:	ldrd	r2, [ip, #16]
   19c0c:	strd	r0, [fp, #8]
   19c10:	ldrd	r0, [ip, #24]
   19c14:	strd	r2, [fp, #16]
   19c18:	ldrd	r2, [ip, #32]
   19c1c:	strd	r0, [fp, #24]
   19c20:	ldrd	r0, [ip, #40]	; 0x28
   19c24:	strd	r2, [fp, #32]
   19c28:	strd	r0, [fp, #40]	; 0x28
   19c2c:	beq	1a790 <sav_begin_data+0xd48>
   19c30:	ldr	ip, [r9, #16]
   19c34:	movw	r3, #17956	; 0x4624
   19c38:	movt	r3, #12876	; 0x324c
   19c3c:	ldr	lr, [r9, #76]	; 0x4c
   19c40:	str	r3, [sp, #128]	; 0x80
   19c44:	cmp	ip, #2
   19c48:	lsr	lr, lr, #3
   19c4c:	beq	19e4c <sav_begin_data+0x404>
   19c50:	ldr	r3, [pc, #1752]	; 1a330 <sav_begin_data+0x8e8>
   19c54:	movw	r0, #8224	; 0x2020
   19c58:	mov	r1, #2
   19c5c:	cmp	ip, #1
   19c60:	strh	r0, [sp, #190]	; 0xbe
   19c64:	str	r1, [sp, #192]	; 0xc0
   19c68:	streq	ip, [sp, #200]	; 0xc8
   19c6c:	add	r3, pc, r3
   19c70:	str	lr, [sp, #196]	; 0xc4
   19c74:	ldrh	r0, [r3, #56]	; 0x38
   19c78:	ldrb	r1, [r3, #58]	; 0x3a
   19c7c:	ldrd	r4, [r3]
   19c80:	strh	r0, [sp, #188]	; 0xbc
   19c84:	strb	r1, [sp, #190]	; 0xbe
   19c88:	ldrd	r0, [r3, #24]
   19c8c:	strd	r0, [sp, #24]
   19c90:	ldrd	r0, [r3, #16]
   19c94:	strd	r4, [sp, #132]	; 0x84
   19c98:	ldrd	r4, [r3, #8]
   19c9c:	strd	r0, [sp, #148]	; 0x94
   19ca0:	ldrd	r0, [r3, #40]	; 0x28
   19ca4:	strd	r4, [sp, #140]	; 0x8c
   19ca8:	ldrd	r4, [r3, #32]
   19cac:	strd	r0, [sp, #172]	; 0xac
   19cb0:	ldrd	r0, [sp, #24]
   19cb4:	strd	r0, [sp, #156]	; 0x9c
   19cb8:	ldrd	r0, [r3, #48]	; 0x30
   19cbc:	strd	r4, [sp, #164]	; 0xa4
   19cc0:	strd	r0, [sp, #180]	; 0xb4
   19cc4:	ldr	r3, [r9, #224]	; 0xe0
   19cc8:	cmp	r3, #0
   19ccc:	moveq	r2, r3
   19cd0:	beq	19cec <sav_begin_data+0x2a4>
   19cd4:	ldr	r3, [r3, #1592]	; 0x638
   19cd8:	add	r2, r3, #7
   19cdc:	cmp	r3, #0
   19ce0:	movlt	r3, r2
   19ce4:	asr	r3, r3, #3
   19ce8:	add	r2, r3, #1
   19cec:	movw	r4, #34079	; 0x851f
   19cf0:	movt	r4, #20971	; 0x51eb
   19cf4:	ldr	lr, [r7, #12]
   19cf8:	mov	r5, #100	; 0x64
   19cfc:	mov	r1, #0
   19d00:	ldr	r3, [r7, #20]
   19d04:	mov	r0, #0
   19d08:	movt	r0, #16473	; 0x4059
   19d0c:	str	r2, [sp, #204]	; 0xcc
   19d10:	ldr	r6, [r9, #80]	; 0x50
   19d14:	ldr	r8, [sp, #16]
   19d18:	umull	r2, ip, r4, r3
   19d1c:	ldr	r2, [pc, #1552]	; 1a334 <sav_begin_data+0x8ec>
   19d20:	str	r1, [sp, #212]	; 0xd4
   19d24:	mov	r1, #10
   19d28:	lsr	ip, ip, #5
   19d2c:	str	r0, [sp, #216]	; 0xd8
   19d30:	mov	r0, r8
   19d34:	str	r6, [sp, #208]	; 0xd0
   19d38:	add	r6, sp, #237	; 0xed
   19d3c:	mls	ip, r5, ip, r3
   19d40:	add	r2, pc, r2
   19d44:	str	ip, [sp, #4]
   19d48:	ldr	ip, [r7, #16]
   19d4c:	str	ip, [sp, #24]
   19d50:	umull	ip, r3, r4, lr
   19d54:	ldr	ip, [sp, #24]
   19d58:	lsr	r3, r3, #5
   19d5c:	add	ip, fp, ip, lsl #2
   19d60:	mls	r3, r5, r3, lr
   19d64:	str	ip, [sp]
   19d68:	bl	4254 <snprintf@plt>
   19d6c:	ldrb	ip, [r8, #8]
   19d70:	mov	r1, #9
   19d74:	ldr	r8, [sp, #20]
   19d78:	ldrd	r2, [sp, #64]	; 0x40
   19d7c:	mov	r0, r8
   19d80:	strd	r2, [sp, #220]	; 0xdc
   19d84:	strb	ip, [sp, #228]	; 0xe4
   19d88:	ldr	ip, [r7]
   19d8c:	ldr	lr, [r7, #8]
   19d90:	umull	r2, r3, r4, ip
   19d94:	ldr	r2, [pc, #1436]	; 1a338 <sav_begin_data+0x8f0>
   19d98:	lsr	r3, r3, #5
   19d9c:	add	r2, pc, r2
   19da0:	mls	r3, r5, r3, ip
   19da4:	str	r3, [sp, #4]
   19da8:	ldr	ip, [r7, #4]
   19dac:	umull	r7, r3, r4, lr
   19db0:	lsr	r3, r3, #5
   19db4:	umull	r7, r4, r4, ip
   19db8:	mls	r3, r5, r3, lr
   19dbc:	lsr	r4, r4, #5
   19dc0:	mls	r5, r5, r4, ip
   19dc4:	str	r5, [sp]
   19dc8:	bl	4254 <snprintf@plt>
   19dcc:	ldr	r3, [r8, #4]
   19dd0:	mov	r0, r6
   19dd4:	mov	r2, #64	; 0x40
   19dd8:	mov	r1, #32
   19ddc:	ldr	ip, [sp, #52]	; 0x34
   19de0:	str	ip, [sp, #229]	; 0xe5
   19de4:	str	r3, [sp, #233]	; 0xe9
   19de8:	bl	4278 <memset@plt>
   19dec:	ldrb	r3, [r9, #88]	; 0x58
   19df0:	cmp	r3, #0
   19df4:	bne	1a084 <sav_begin_data+0x63c>
   19df8:	mov	r2, #176	; 0xb0
   19dfc:	mov	r1, sl
   19e00:	mov	r0, r9
   19e04:	bl	4428 <readstat_write_bytes@plt>
   19e08:	subs	r4, r0, #0
   19e0c:	bne	19e24 <sav_begin_data+0x3dc>
   19e10:	mov	r0, r9
   19e14:	ldr	r1, [sp, #8]
   19e18:	bl	19168 <sav_emit_variable_records>
   19e1c:	subs	r4, r0, #0
   19e20:	beq	19ec4 <sav_begin_data+0x47c>
   19e24:	ldr	r0, [sp, #8]
   19e28:	bl	3e94 <free@plt>
   19e2c:	mov	r0, r4
   19e30:	add	sp, sp, #308	; 0x134
   19e34:	ldrd	r4, [sp]
   19e38:	ldrd	r6, [sp, #8]
   19e3c:	ldrd	r8, [sp, #16]
   19e40:	ldrd	sl, [sp, #24]
   19e44:	add	sp, sp, #32
   19e48:	pop	{pc}		; (ldr pc, [sp], #4)
   19e4c:	ldr	r1, [pc, #1256]	; 1a33c <sav_begin_data+0x8f4>
   19e50:	movw	r2, #8224	; 0x2020
   19e54:	mov	r3, #51	; 0x33
   19e58:	strb	r3, [sp, #131]	; 0x83
   19e5c:	strh	r2, [sp, #190]	; 0xbe
   19e60:	str	ip, [sp, #192]	; 0xc0
   19e64:	add	r1, pc, r1
   19e68:	str	lr, [sp, #196]	; 0xc4
   19e6c:	ldrd	r2, [r1]
   19e70:	str	ip, [sp, #200]	; 0xc8
   19e74:	ldrd	r4, [r1, #8]
   19e78:	ldrh	lr, [r1, #56]	; 0x38
   19e7c:	strd	r2, [sp, #132]	; 0x84
   19e80:	ldrd	r2, [r1, #16]
   19e84:	strd	r4, [sp, #140]	; 0x8c
   19e88:	ldrb	ip, [r1, #58]	; 0x3a
   19e8c:	ldrd	r4, [r1, #32]
   19e90:	strd	r2, [sp, #148]	; 0x94
   19e94:	ldrd	r2, [r1, #40]	; 0x28
   19e98:	strh	lr, [sp, #188]	; 0xbc
   19e9c:	strb	ip, [sp, #190]	; 0xbe
   19ea0:	strd	r2, [sp, #24]
   19ea4:	ldrd	r2, [r1, #24]
   19ea8:	strd	r4, [sp, #164]	; 0xa4
   19eac:	strd	r2, [sp, #156]	; 0x9c
   19eb0:	ldrd	r2, [r1, #48]	; 0x30
   19eb4:	strd	r2, [sp, #180]	; 0xb4
   19eb8:	ldrd	r2, [sp, #24]
   19ebc:	strd	r2, [sp, #172]	; 0xac
   19ec0:	b	19cc4 <sav_begin_data+0x27c>
   19ec4:	ldr	r3, [r9, #40]	; 0x28
   19ec8:	cmp	r3, #0
   19ecc:	ble	1a0bc <sav_begin_data+0x674>
   19ed0:	mov	r6, r4
   19ed4:	b	19ee8 <sav_begin_data+0x4a0>
   19ed8:	ldr	r3, [r9, #40]	; 0x28
   19edc:	add	r6, r6, #1
   19ee0:	cmp	r6, r3
   19ee4:	bge	1a0bc <sav_begin_data+0x674>
   19ee8:	mov	r1, r6
   19eec:	mov	r0, r9
   19ef0:	bl	43f8 <readstat_get_label_set@plt>
   19ef4:	mov	r5, r0
   19ef8:	bl	18d68 <readstat_label_set_number_short_variables>
   19efc:	cmp	r0, #0
   19f00:	ble	19ed8 <sav_begin_data+0x490>
   19f04:	mov	r2, #0
   19f08:	ldr	r8, [r5]
   19f0c:	ldr	r3, [r5, #264]	; 0x108
   19f10:	cmp	r3, r2
   19f14:	str	r3, [sp, #52]	; 0x34
   19f18:	str	r2, [sp, #64]	; 0x40
   19f1c:	beq	19ed8 <sav_begin_data+0x490>
   19f20:	mov	r3, #3
   19f24:	mov	r2, #4
   19f28:	ldr	r1, [sp, #16]
   19f2c:	mov	r0, r9
   19f30:	str	r3, [sp, #64]	; 0x40
   19f34:	bl	4428 <readstat_write_bytes@plt>
   19f38:	subs	r3, r0, #0
   19f3c:	bne	1a0ac <sav_begin_data+0x664>
   19f40:	mov	r2, #4
   19f44:	mov	r0, r9
   19f48:	ldr	r1, [sp, #20]
   19f4c:	bl	4428 <readstat_write_bytes@plt>
   19f50:	subs	r3, r0, #0
   19f54:	bne	1a0ac <sav_begin_data+0x664>
   19f58:	ldr	r2, [sp, #52]	; 0x34
   19f5c:	cmp	r2, #0
   19f60:	movgt	r7, r3
   19f64:	strgt	r5, [sp, #24]
   19f68:	strgt	r6, [sp, #32]
   19f6c:	bgt	1a02c <sav_begin_data+0x5e4>
   19f70:	b	1a7a0 <sav_begin_data+0xd58>
   19f74:	ldr	r2, [r6, #20]
   19f78:	add	r5, pc, #920	; 0x398
   19f7c:	ldrd	r4, [r5]
   19f80:	cmp	r2, #8
   19f84:	movcs	r2, #8
   19f88:	strd	r4, [fp]
   19f8c:	ldr	r1, [r6, #16]
   19f90:	bl	3ef4 <memcpy@plt>
   19f94:	mov	r2, #8
   19f98:	mov	r1, fp
   19f9c:	mov	r0, r9
   19fa0:	add	r7, r7, #1
   19fa4:	bl	4428 <readstat_write_bytes@plt>
   19fa8:	mov	r3, #120	; 0x78
   19fac:	ldr	r4, [r6, #24]
   19fb0:	mov	r2, #1
   19fb4:	mov	r0, r9
   19fb8:	strb	r3, [sp, #48]	; 0x30
   19fbc:	ldr	r3, [r6, #28]
   19fc0:	ldr	r1, [sp, #12]
   19fc4:	cmp	r3, #119	; 0x77
   19fc8:	movhi	r3, #120	; 0x78
   19fcc:	strb	r3, [sp, #48]	; 0x30
   19fd0:	bl	4428 <readstat_write_bytes@plt>
   19fd4:	subs	r3, r0, #0
   19fd8:	mov	r2, #128	; 0x80
   19fdc:	mov	r1, #32
   19fe0:	mov	r0, sl
   19fe4:	bne	1a0ac <sav_begin_data+0x664>
   19fe8:	bl	4278 <memset@plt>
   19fec:	ldrb	r6, [sp, #48]	; 0x30
   19ff0:	mov	r1, r4
   19ff4:	mov	r0, sl
   19ff8:	mov	r2, r6
   19ffc:	bl	3ef4 <memcpy@plt>
   1a000:	add	r2, r6, #8
   1a004:	mov	r1, sl
   1a008:	bic	r2, r2, #7
   1a00c:	mov	r0, r9
   1a010:	sub	r2, r2, #1
   1a014:	bl	4428 <readstat_write_bytes@plt>
   1a018:	subs	r3, r0, #0
   1a01c:	bne	1a0ac <sav_begin_data+0x664>
   1a020:	ldr	r3, [sp, #52]	; 0x34
   1a024:	cmp	r7, r3
   1a028:	bge	1a798 <sav_begin_data+0xd50>
   1a02c:	mov	r1, r7
   1a030:	ldr	r0, [sp, #24]
   1a034:	bl	44a0 <readstat_get_value_label@plt>
   1a038:	cmp	r8, #0
   1a03c:	mov	r6, r0
   1a040:	mov	r0, fp
   1a044:	beq	19f74 <sav_begin_data+0x52c>
   1a048:	cmp	r8, #5
   1a04c:	beq	1a070 <sav_begin_data+0x628>
   1a050:	cmp	r8, #3
   1a054:	bne	19f94 <sav_begin_data+0x54c>
   1a058:	vldr	s15, [r6, #8]
   1a05c:	vcvt.f64.s32	d7, s15
   1a060:	vstr	d7, [sp, #128]	; 0x80
   1a064:	ldrd	r0, [sl]
   1a068:	strd	r0, [fp]
   1a06c:	b	19f94 <sav_begin_data+0x54c>
   1a070:	ldrd	r0, [r6]
   1a074:	strd	r0, [sp, #128]	; 0x80
   1a078:	ldrd	r0, [sl]
   1a07c:	strd	r0, [fp]
   1a080:	b	19f94 <sav_begin_data+0x54c>
   1a084:	add	r4, r9, #88	; 0x58
   1a088:	mov	r0, r4
   1a08c:	bl	41d0 <strlen@plt>
   1a090:	cmp	r0, #64	; 0x40
   1a094:	mov	r1, r4
   1a098:	movcc	r2, r0
   1a09c:	movcs	r2, #64	; 0x40
   1a0a0:	mov	r0, r6
   1a0a4:	bl	3ef4 <memcpy@plt>
   1a0a8:	b	19df8 <sav_begin_data+0x3b0>
   1a0ac:	ldr	r0, [sp, #8]
   1a0b0:	mov	r4, r3
   1a0b4:	bl	3e94 <free@plt>
   1a0b8:	b	19e2c <sav_begin_data+0x3e4>
   1a0bc:	ldr	r3, [r9, #52]	; 0x34
   1a0c0:	mov	r2, #6
   1a0c4:	str	r2, [sp, #80]	; 0x50
   1a0c8:	cmp	r3, #0
   1a0cc:	str	r3, [sp, #128]	; 0x80
   1a0d0:	bne	1a860 <sav_begin_data+0xe18>
   1a0d4:	ldr	r5, [pc, #612]	; 1a340 <sav_begin_data+0x8f8>
   1a0d8:	mov	r3, #0
   1a0dc:	mov	r2, #20
   1a0e0:	mvn	r1, #0
   1a0e4:	mov	ip, #1
   1a0e8:	strd	r2, [sp, #128]	; 0x80
   1a0ec:	str	r3, [sp, #136]	; 0x88
   1a0f0:	str	r1, [sp, #140]	; 0x8c
   1a0f4:	add	r5, pc, r5
   1a0f8:	str	ip, [sp, #144]	; 0x90
   1a0fc:	ldrd	r2, [r5, #48]	; 0x30
   1a100:	ldrd	r0, [r5, #56]	; 0x38
   1a104:	strd	r2, [sp, #80]	; 0x50
   1a108:	str	ip, [sp, #148]	; 0x94
   1a10c:	strd	r0, [fp, #8]
   1a110:	bl	3e88 <machine_is_little_endian@plt>
   1a114:	cmp	r0, #0
   1a118:	movw	r0, #65001	; 0xfde9
   1a11c:	movne	r3, #2
   1a120:	moveq	r3, #1
   1a124:	mov	r2, #16
   1a128:	mov	r1, fp
   1a12c:	str	r3, [sp, #152]	; 0x98
   1a130:	str	r0, [sp, #156]	; 0x9c
   1a134:	mov	r0, r9
   1a138:	bl	4428 <readstat_write_bytes@plt>
   1a13c:	subs	r4, r0, #0
   1a140:	bne	19e24 <sav_begin_data+0x3dc>
   1a144:	mov	r2, #32
   1a148:	mov	r1, sl
   1a14c:	mov	r0, r9
   1a150:	bl	4428 <readstat_write_bytes@plt>
   1a154:	subs	r4, r0, #0
   1a158:	bne	19e24 <sav_begin_data+0x3dc>
   1a15c:	ldrd	r6, [r5, #64]	; 0x40
   1a160:	mov	r2, #16
   1a164:	mov	r1, fp
   1a168:	mov	r0, r9
   1a16c:	ldrd	r4, [r5, #72]	; 0x48
   1a170:	strd	r6, [fp]
   1a174:	strd	r4, [fp, #8]
   1a178:	bl	4428 <readstat_write_bytes@plt>
   1a17c:	subs	r4, r0, #0
   1a180:	bne	19e24 <sav_begin_data+0x3dc>
   1a184:	mvn	r2, #0
   1a188:	mvn	r3, #1048576	; 0x100000
   1a18c:	mvn	r0, #0
   1a190:	movw	r1, #65535	; 0xffff
   1a194:	movt	r1, #32751	; 0x7fef
   1a198:	mvn	r4, #1
   1a19c:	strd	r2, [sp, #128]	; 0x80
   1a1a0:	mvn	r5, #1048576	; 0x100000
   1a1a4:	mov	r2, #24
   1a1a8:	strd	r0, [sp, #136]	; 0x88
   1a1ac:	mov	r1, sl
   1a1b0:	mov	r0, r9
   1a1b4:	strd	r4, [sp, #144]	; 0x90
   1a1b8:	bl	4428 <readstat_write_bytes@plt>
   1a1bc:	subs	r4, r0, #0
   1a1c0:	bne	19e24 <sav_begin_data+0x3dc>
   1a1c4:	ldr	r3, [r9, #28]
   1a1c8:	mov	r0, #7
   1a1cc:	mov	r1, #11
   1a1d0:	mov	r2, #4
   1a1d4:	strd	r0, [sp, #128]	; 0x80
   1a1d8:	str	r2, [sp, #136]	; 0x88
   1a1dc:	str	r4, [sp, #140]	; 0x8c
   1a1e0:	cmp	r3, #0
   1a1e4:	ble	1a24c <sav_begin_data+0x804>
   1a1e8:	movw	r5, #2081	; 0x821
   1a1ec:	movt	r5, #8322	; 0x2082
   1a1f0:	mov	r6, r4
   1a1f4:	mov	r1, r6
   1a1f8:	mov	r0, r9
   1a1fc:	bl	4350 <readstat_get_variable@plt>
   1a200:	ldr	r3, [r0, #1600]	; 0x640
   1a204:	mov	r1, #1
   1a208:	ldr	r0, [r0]
   1a20c:	cmp	r3, #255	; 0xff
   1a210:	movls	r2, #0
   1a214:	movhi	r2, #1
   1a218:	cmp	r0, #0
   1a21c:	movne	r2, #0
   1a220:	cmp	r2, #0
   1a224:	beq	1a238 <sav_begin_data+0x7f0>
   1a228:	add	r3, r3, #251	; 0xfb
   1a22c:	lsr	r3, r3, #2
   1a230:	umull	r2, r3, r5, r3
   1a234:	lsr	r1, r3, #3
   1a238:	ldr	r3, [r9, #28]
   1a23c:	add	r6, r6, #1
   1a240:	add	r4, r4, r1
   1a244:	cmp	r6, r3
   1a248:	blt	1a1f4 <sav_begin_data+0x7ac>
   1a24c:	add	r4, r4, r4, lsl #1
   1a250:	mov	r2, #16
   1a254:	mov	r1, sl
   1a258:	mov	r0, r9
   1a25c:	str	r4, [sp, #140]	; 0x8c
   1a260:	bl	4428 <readstat_write_bytes@plt>
   1a264:	subs	r4, r0, #0
   1a268:	bne	19e24 <sav_begin_data+0x3dc>
   1a26c:	ldr	ip, [r9, #28]
   1a270:	cmp	ip, #0
   1a274:	ble	1a3d4 <sav_begin_data+0x98c>
   1a278:	mov	r7, r4
   1a27c:	str	sl, [sp, #24]
   1a280:	movw	r6, #2081	; 0x821
   1a284:	movt	r6, #8322	; 0x2082
   1a288:	ldr	r4, [sp, #16]
   1a28c:	mov	r8, #8
   1a290:	ldr	sl, [sp, #20]
   1a294:	mov	r1, r7
   1a298:	mov	r0, r9
   1a29c:	bl	4350 <readstat_get_variable@plt>
   1a2a0:	mov	r5, r0
   1a2a4:	bl	42f0 <readstat_variable_get_measure@plt>
   1a2a8:	bl	4044 <spss_measure_from_readstat_measure@plt>
   1a2ac:	str	r0, [sp, #52]	; 0x34
   1a2b0:	mov	r0, r5
   1a2b4:	bl	41f4 <readstat_variable_get_display_width@plt>
   1a2b8:	cmp	r0, #0
   1a2bc:	movgt	r3, r0
   1a2c0:	movle	r3, r8
   1a2c4:	mov	r0, r5
   1a2c8:	str	r3, [sp, #64]	; 0x40
   1a2cc:	bl	4404 <readstat_variable_get_alignment@plt>
   1a2d0:	bl	3e34 <spss_alignment_from_readstat_alignment@plt>
   1a2d4:	ldr	r1, [r5]
   1a2d8:	str	r0, [sp, #80]	; 0x50
   1a2dc:	ldr	r3, [r5, #1600]	; 0x640
   1a2e0:	cmp	r3, #255	; 0xff
   1a2e4:	movls	r2, #0
   1a2e8:	movhi	r2, #1
   1a2ec:	cmp	r1, #0
   1a2f0:	movne	r2, #0
   1a2f4:	cmp	r2, #0
   1a2f8:	moveq	r5, #1
   1a2fc:	beq	1a3ac <sav_begin_data+0x964>
   1a300:	add	r5, r3, #251	; 0xfb
   1a304:	lsr	r5, r5, #2
   1a308:	umull	r3, r5, r6, r5
   1a30c:	lsr	r5, r5, #3
   1a310:	b	1a3ac <sav_begin_data+0x964>
   1a314:	nop	{0}
   1a318:	.word	0x20202020
   1a31c:	.word	0x20202020
   1a320:	.word	0x0000d6e8
   1a324:	.word	0x0000d6ec
   1a328:	.word	0x0000d6e8
   1a32c:	.word	0x0000d4d8
   1a330:	.word	0x0000d548
   1a334:	.word	0x0000d4b0
   1a338:	.word	0x0000c2d0
   1a33c:	.word	0x0000d350
   1a340:	.word	0x0000cfd0
   1a344:	.word	0x0000cce8
   1a348:	.word	0x0000b890
   1a34c:	.word	0x0000cc30
   1a350:	.word	0x0000b7c8
   1a354:	.word	0x0000cd2c
   1a358:	.word	0x0000b6cc
   1a35c:	.word	0x0000cc34
   1a360:	.word	0x0000ca3c
   1a364:	.word	0x0000b34c
   1a368:	.word	0x0000c68c
   1a36c:	.word	0x0000c134
   1a370:	bl	4428 <readstat_write_bytes@plt>
   1a374:	subs	r3, r0, #0
   1a378:	mov	r2, #4
   1a37c:	mov	r1, r4
   1a380:	mov	r0, r9
   1a384:	bne	1a0ac <sav_begin_data+0x664>
   1a388:	bl	4428 <readstat_write_bytes@plt>
   1a38c:	subs	r3, r0, #0
   1a390:	mov	r2, #4
   1a394:	mov	r1, fp
   1a398:	mov	r0, r9
   1a39c:	bne	1a0ac <sav_begin_data+0x664>
   1a3a0:	bl	4428 <readstat_write_bytes@plt>
   1a3a4:	subs	r3, r0, #0
   1a3a8:	bne	1a0ac <sav_begin_data+0x664>
   1a3ac:	subs	r5, r5, #1
   1a3b0:	mov	r2, #4
   1a3b4:	mov	r1, sl
   1a3b8:	mov	r0, r9
   1a3bc:	bcs	1a370 <sav_begin_data+0x928>
   1a3c0:	ldr	ip, [r9, #28]
   1a3c4:	add	r7, r7, #1
   1a3c8:	cmp	r7, ip
   1a3cc:	blt	1a294 <sav_begin_data+0x84c>
   1a3d0:	ldr	sl, [sp, #24]
   1a3d4:	cmp	ip, #0
   1a3d8:	ldr	r1, [pc, #-156]	; 1a344 <sav_begin_data+0x8fc>
   1a3dc:	add	r1, pc, r1
   1a3e0:	ldrd	r2, [r1, #144]	; 0x90
   1a3e4:	ldrd	r0, [r1, #152]	; 0x98
   1a3e8:	strd	r2, [sp, #128]	; 0x80
   1a3ec:	strd	r0, [sl, #8]
   1a3f0:	ble	1a478 <sav_begin_data+0xa30>
   1a3f4:	ldr	r7, [pc, #-180]	; 1a348 <sav_begin_data+0x900>
   1a3f8:	mov	r4, #0
   1a3fc:	ldr	r5, [sp, #8]
   1a400:	add	r7, pc, r7
   1a404:	mov	r1, r4
   1a408:	mov	r0, r9
   1a40c:	bl	4350 <readstat_get_variable@plt>
   1a410:	mov	r8, r0
   1a414:	mov	r3, r5
   1a418:	mov	r2, r7
   1a41c:	mov	r1, #9
   1a420:	mov	r0, fp
   1a424:	add	r4, r4, #1
   1a428:	bl	4254 <snprintf@plt>
   1a42c:	mov	r0, fp
   1a430:	add	r5, r5, #15
   1a434:	bl	41d0 <strlen@plt>
   1a438:	mov	r6, r0
   1a43c:	add	r0, r8, #8
   1a440:	bl	41d0 <strlen@plt>
   1a444:	cmp	r0, #0
   1a448:	cmpne	r6, #0
   1a44c:	beq	1a46c <sav_begin_data+0xa24>
   1a450:	ldr	r3, [sp, #140]	; 0x8c
   1a454:	add	r3, r3, #2
   1a458:	add	r3, r3, r6
   1a45c:	cmp	r0, #64	; 0x40
   1a460:	addls	r3, r3, r0
   1a464:	addhi	r3, r3, #64	; 0x40
   1a468:	str	r3, [sp, #140]	; 0x8c
   1a46c:	ldr	ip, [r9, #28]
   1a470:	cmp	r4, ip
   1a474:	blt	1a404 <sav_begin_data+0x9bc>
   1a478:	ldr	r3, [sp, #140]	; 0x8c
   1a47c:	cmp	r3, #0
   1a480:	bgt	1a904 <sav_begin_data+0xebc>
   1a484:	ldr	r1, [pc, #-320]	; 1a34c <sav_begin_data+0x904>
   1a488:	mov	r3, #2304	; 0x900
   1a48c:	cmp	ip, #0
   1a490:	strh	r3, [sp, #52]	; 0x34
   1a494:	add	r1, pc, r1
   1a498:	ldrd	r2, [r1, #80]	; 0x50
   1a49c:	ldrd	r0, [r1, #88]	; 0x58
   1a4a0:	strd	r2, [sp, #128]	; 0x80
   1a4a4:	strd	r0, [sl, #8]
   1a4a8:	ble	1a574 <sav_begin_data+0xb2c>
   1a4ac:	ldr	r6, [pc, #-356]	; 1a350 <sav_begin_data+0x908>
   1a4b0:	movw	r7, #23237	; 0x5ac5
   1a4b4:	movt	r7, #2684	; 0xa7c
   1a4b8:	mov	r5, #0
   1a4bc:	ldr	r8, [pc, #-368]	; 1a354 <sav_begin_data+0x90c>
   1a4c0:	str	r7, [sp, #32]
   1a4c4:	ldr	r7, [sp, #8]
   1a4c8:	add	r6, pc, r6
   1a4cc:	str	sl, [sp, #36]	; 0x24
   1a4d0:	ldr	r4, [sp, #16]
   1a4d4:	add	r8, pc, r8
   1a4d8:	str	r8, [sp, #24]
   1a4dc:	mov	r1, r5
   1a4e0:	mov	r0, r9
   1a4e4:	bl	4350 <readstat_get_variable@plt>
   1a4e8:	mov	sl, r0
   1a4ec:	rsb	r3, r5, r5, lsl #4
   1a4f0:	mov	r2, r6
   1a4f4:	ldr	ip, [sl, #1600]	; 0x640
   1a4f8:	mov	r1, #9
   1a4fc:	mov	r0, r4
   1a500:	add	r3, r7, r3
   1a504:	add	r5, r5, #1
   1a508:	cmp	ip, #255	; 0xff
   1a50c:	bls	1a564 <sav_begin_data+0xb1c>
   1a510:	bl	4254 <snprintf@plt>
   1a514:	ldr	sl, [sl, #1600]	; 0x640
   1a518:	movw	lr, #34464	; 0x86a0
   1a51c:	movt	lr, #1
   1a520:	mov	r3, r4
   1a524:	mov	r1, #15
   1a528:	mov	r0, fp
   1a52c:	ldr	r2, [sp, #24]
   1a530:	ldr	r8, [sp, #32]
   1a534:	lsr	ip, sl, #5
   1a538:	umull	r8, ip, r8, ip
   1a53c:	lsr	ip, ip, #7
   1a540:	mls	ip, lr, ip, sl
   1a544:	str	ip, [sp]
   1a548:	bl	4254 <snprintf@plt>
   1a54c:	mov	r0, fp
   1a550:	bl	41d0 <strlen@plt>
   1a554:	ldr	r3, [sp, #140]	; 0x8c
   1a558:	add	r3, r3, #2
   1a55c:	add	r3, r3, r0
   1a560:	str	r3, [sp, #140]	; 0x8c
   1a564:	ldr	r3, [r9, #28]
   1a568:	cmp	r5, r3
   1a56c:	blt	1a4dc <sav_begin_data+0xa94>
   1a570:	ldr	sl, [sp, #36]	; 0x24
   1a574:	ldr	r3, [sp, #140]	; 0x8c
   1a578:	cmp	r3, #0
   1a57c:	beq	1a680 <sav_begin_data+0xc38>
   1a580:	mov	r2, #16
   1a584:	mov	r1, sl
   1a588:	mov	r0, r9
   1a58c:	bl	4428 <readstat_write_bytes@plt>
   1a590:	subs	r4, r0, #0
   1a594:	bne	19e24 <sav_begin_data+0x3dc>
   1a598:	ldr	r3, [r9, #28]
   1a59c:	cmp	r3, #0
   1a5a0:	ble	1a680 <sav_begin_data+0xc38>
   1a5a4:	ldr	r6, [pc, #-596]	; 1a358 <sav_begin_data+0x910>
   1a5a8:	movw	r7, #23237	; 0x5ac5
   1a5ac:	movt	r7, #2684	; 0xa7c
   1a5b0:	mov	r5, r4
   1a5b4:	ldr	r8, [pc, #-608]	; 1a35c <sav_begin_data+0x914>
   1a5b8:	str	r7, [sp, #32]
   1a5bc:	str	sl, [sp, #36]	; 0x24
   1a5c0:	ldr	r7, [sp, #8]
   1a5c4:	add	r6, pc, r6
   1a5c8:	ldr	sl, [sp, #16]
   1a5cc:	add	r8, pc, r8
   1a5d0:	str	r8, [sp, #24]
   1a5d4:	mov	r1, r5
   1a5d8:	mov	r0, r9
   1a5dc:	bl	4350 <readstat_get_variable@plt>
   1a5e0:	mov	r4, r0
   1a5e4:	rsb	r3, r5, r5, lsl #4
   1a5e8:	mov	r2, r6
   1a5ec:	ldr	ip, [r4, #1600]	; 0x640
   1a5f0:	mov	r1, #9
   1a5f4:	mov	r0, sl
   1a5f8:	add	r3, r7, r3
   1a5fc:	add	r5, r5, #1
   1a600:	cmp	ip, #255	; 0xff
   1a604:	bls	1a670 <sav_begin_data+0xc28>
   1a608:	bl	4254 <snprintf@plt>
   1a60c:	ldr	r4, [r4, #1600]	; 0x640
   1a610:	movw	lr, #34464	; 0x86a0
   1a614:	movt	lr, #1
   1a618:	mov	r3, sl
   1a61c:	mov	r1, #15
   1a620:	mov	r0, fp
   1a624:	ldr	r2, [sp, #24]
   1a628:	ldr	r8, [sp, #32]
   1a62c:	lsr	ip, r4, #5
   1a630:	umull	r8, ip, r8, ip
   1a634:	lsr	ip, ip, #7
   1a638:	mls	ip, lr, ip, r4
   1a63c:	str	ip, [sp]
   1a640:	bl	4254 <snprintf@plt>
   1a644:	mov	r1, fp
   1a648:	mov	r0, r9
   1a64c:	bl	4128 <readstat_write_string@plt>
   1a650:	subs	r4, r0, #0
   1a654:	mov	r2, #2
   1a658:	ldr	r1, [sp, #20]
   1a65c:	mov	r0, r9
   1a660:	bne	19e24 <sav_begin_data+0x3dc>
   1a664:	bl	4428 <readstat_write_bytes@plt>
   1a668:	subs	r4, r0, #0
   1a66c:	bne	19e24 <sav_begin_data+0x3dc>
   1a670:	ldr	r3, [r9, #28]
   1a674:	cmp	r5, r3
   1a678:	blt	1a5d4 <sav_begin_data+0xb8c>
   1a67c:	ldr	sl, [sp, #36]	; 0x24
   1a680:	ldr	r1, [pc, #-808]	; 1a360 <sav_begin_data+0x918>
   1a684:	ldr	ip, [r9, #40]	; 0x28
   1a688:	add	r1, pc, r1
   1a68c:	ldrd	r2, [r1, #96]	; 0x60
   1a690:	cmp	ip, #0
   1a694:	ldrd	r0, [r1, #104]	; 0x68
   1a698:	strgt	fp, [sp, #24]
   1a69c:	strgt	sl, [sp, #32]
   1a6a0:	strd	r2, [sp, #128]	; 0x80
   1a6a4:	movgt	r3, #0
   1a6a8:	movgt	fp, r3
   1a6ac:	strd	r0, [sl, #8]
   1a6b0:	bgt	1a6c8 <sav_begin_data+0xc80>
   1a6b4:	b	1aa24 <sav_begin_data+0xfdc>
   1a6b8:	ldr	r3, [r9, #40]	; 0x28
   1a6bc:	add	fp, fp, #1
   1a6c0:	cmp	fp, r3
   1a6c4:	bge	1aa1c <sav_begin_data+0xfd4>
   1a6c8:	mov	r1, fp
   1a6cc:	mov	r0, r9
   1a6d0:	bl	43f8 <readstat_get_label_set@plt>
   1a6d4:	mov	r5, r0
   1a6d8:	bl	18d68 <readstat_label_set_number_short_variables>
   1a6dc:	ldr	sl, [r5, #276]	; 0x114
   1a6e0:	cmp	r0, sl
   1a6e4:	bge	1a6b8 <sav_begin_data+0xc70>
   1a6e8:	cmp	sl, #0
   1a6ec:	ldr	r7, [r5, #264]	; 0x108
   1a6f0:	ble	1a6b8 <sav_begin_data+0xc70>
   1a6f4:	mov	r6, #0
   1a6f8:	b	1a708 <sav_begin_data+0xcc0>
   1a6fc:	add	r6, r6, #1
   1a700:	cmp	sl, r6
   1a704:	beq	1a6b8 <sav_begin_data+0xc70>
   1a708:	mov	r1, r6
   1a70c:	mov	r0, r5
   1a710:	bl	441c <readstat_get_label_set_variable@plt>
   1a714:	mov	r4, r0
   1a718:	add	r0, r0, #8
   1a71c:	bl	41d0 <strlen@plt>
   1a720:	mov	r8, r0
   1a724:	mov	r0, r4
   1a728:	bl	429c <readstat_variable_get_storage_width@plt>
   1a72c:	cmp	r0, #8
   1a730:	mov	r4, r0
   1a734:	ble	1a6fc <sav_begin_data+0xcb4>
   1a738:	ldr	r3, [sp, #140]	; 0x8c
   1a73c:	cmp	r7, #0
   1a740:	add	r3, r8, r3
   1a744:	add	r3, r3, #12
   1a748:	str	r3, [sp, #140]	; 0x8c
   1a74c:	ble	1a6fc <sav_begin_data+0xcb4>
   1a750:	mov	r8, #0
   1a754:	mov	r1, r8
   1a758:	mov	r0, r5
   1a75c:	bl	44a0 <readstat_get_value_label@plt>
   1a760:	ldr	r3, [sp, #140]	; 0x8c
   1a764:	add	r8, r8, #1
   1a768:	ldr	r2, [r0, #28]
   1a76c:	add	r3, r4, r3
   1a770:	add	r3, r3, #8
   1a774:	cmp	r2, #120	; 0x78
   1a778:	addle	r3, r3, r2
   1a77c:	addgt	r3, r3, #120	; 0x78
   1a780:	cmp	r7, r8
   1a784:	str	r3, [sp, #140]	; 0x8c
   1a788:	bne	1a754 <sav_begin_data+0xd0c>
   1a78c:	b	1a6fc <sav_begin_data+0xcb4>
   1a790:	mov	r4, #39	; 0x27
   1a794:	b	19e24 <sav_begin_data+0x3dc>
   1a798:	ldr	r5, [sp, #24]
   1a79c:	ldr	r6, [sp, #32]
   1a7a0:	mov	r7, #4
   1a7a4:	mov	r0, r5
   1a7a8:	str	r7, [sp, #64]	; 0x40
   1a7ac:	bl	18d68 <readstat_label_set_number_short_variables>
   1a7b0:	mov	r2, r7
   1a7b4:	str	r0, [sp, #80]	; 0x50
   1a7b8:	mov	r0, r9
   1a7bc:	ldr	r1, [sp, #16]
   1a7c0:	bl	4428 <readstat_write_bytes@plt>
   1a7c4:	subs	r3, r0, #0
   1a7c8:	bne	1a0ac <sav_begin_data+0x664>
   1a7cc:	mov	r2, r7
   1a7d0:	mov	r1, fp
   1a7d4:	mov	r0, r9
   1a7d8:	bl	4428 <readstat_write_bytes@plt>
   1a7dc:	subs	r3, r0, #0
   1a7e0:	bne	1a0ac <sav_begin_data+0x664>
   1a7e4:	ldr	r2, [r5, #276]	; 0x114
   1a7e8:	cmp	r2, #0
   1a7ec:	ble	19ed8 <sav_begin_data+0x490>
   1a7f0:	mov	r7, r3
   1a7f4:	b	1a804 <sav_begin_data+0xdbc>
   1a7f8:	ldr	r3, [r5, #276]	; 0x114
   1a7fc:	cmp	r7, r3
   1a800:	bge	19ed8 <sav_begin_data+0x490>
   1a804:	mov	r1, r7
   1a808:	mov	r0, r5
   1a80c:	bl	441c <readstat_get_label_set_variable@plt>
   1a810:	mov	r3, r0
   1a814:	mov	r2, #4
   1a818:	ldr	ip, [r3, #1596]	; 0x63c
   1a81c:	mov	r1, sl
   1a820:	mov	r0, r9
   1a824:	add	r7, r7, #1
   1a828:	cmp	ip, #8
   1a82c:	bhi	1a7f8 <sav_begin_data+0xdb0>
   1a830:	ldr	r3, [r3, #1592]	; 0x638
   1a834:	cmp	r3, #0
   1a838:	add	ip, r3, #7
   1a83c:	movlt	r3, ip
   1a840:	asr	r3, r3, #3
   1a844:	add	r3, r3, #1
   1a848:	str	r3, [sp, #128]	; 0x80
   1a84c:	bl	4428 <readstat_write_bytes@plt>
   1a850:	cmp	r0, #0
   1a854:	beq	1a7f8 <sav_begin_data+0xdb0>
   1a858:	mov	r4, r0
   1a85c:	b	19e24 <sav_begin_data+0x3dc>
   1a860:	mov	r2, #4
   1a864:	mov	r1, fp
   1a868:	mov	r0, r9
   1a86c:	bl	4428 <readstat_write_bytes@plt>
   1a870:	subs	r4, r0, #0
   1a874:	bne	19e24 <sav_begin_data+0x3dc>
   1a878:	mov	r2, #4
   1a87c:	mov	r1, sl
   1a880:	mov	r0, r9
   1a884:	bl	4428 <readstat_write_bytes@plt>
   1a888:	subs	r4, r0, #0
   1a88c:	bne	19e24 <sav_begin_data+0x3dc>
   1a890:	ldr	r3, [r9, #52]	; 0x34
   1a894:	cmp	r3, #0
   1a898:	ble	1a0d4 <sav_begin_data+0x68c>
   1a89c:	mov	r5, r4
   1a8a0:	b	1a8d0 <sav_begin_data+0xe88>
   1a8a4:	bl	4428 <readstat_write_bytes@plt>
   1a8a8:	rsb	r1, r4, #80	; 0x50
   1a8ac:	subs	r4, r0, #0
   1a8b0:	mov	r0, r9
   1a8b4:	bne	19e24 <sav_begin_data+0x3dc>
   1a8b8:	bl	3db0 <readstat_write_spaces@plt>
   1a8bc:	subs	r4, r0, #0
   1a8c0:	bne	19e24 <sav_begin_data+0x3dc>
   1a8c4:	ldr	r3, [r9, #52]	; 0x34
   1a8c8:	cmp	r5, r3
   1a8cc:	bge	1a0d4 <sav_begin_data+0x68c>
   1a8d0:	ldr	r3, [r9, #48]	; 0x30
   1a8d4:	ldr	r6, [r3, r5, lsl #2]
   1a8d8:	add	r5, r5, #1
   1a8dc:	mov	r0, r6
   1a8e0:	bl	41d0 <strlen@plt>
   1a8e4:	mov	r4, r0
   1a8e8:	mov	r2, r0
   1a8ec:	cmp	r4, #80	; 0x50
   1a8f0:	mov	r1, r6
   1a8f4:	mov	r0, r9
   1a8f8:	bls	1a8a4 <sav_begin_data+0xe5c>
   1a8fc:	mov	r4, #32
   1a900:	b	19e24 <sav_begin_data+0x3dc>
   1a904:	sub	r3, r3, #1
   1a908:	mov	r2, #16
   1a90c:	mov	r1, sl
   1a910:	mov	r0, r9
   1a914:	str	r3, [sp, #140]	; 0x8c
   1a918:	bl	4428 <readstat_write_bytes@plt>
   1a91c:	subs	r4, r0, #0
   1a920:	bne	19e24 <sav_begin_data+0x3dc>
   1a924:	ldr	ip, [r9, #28]
   1a928:	cmp	ip, #0
   1a92c:	ble	1a484 <sav_begin_data+0xa3c>
   1a930:	ldr	r3, [pc, #-1492]	; 1a364 <sav_begin_data+0x91c>
   1a934:	mov	r7, r4
   1a938:	mov	r4, #1
   1a93c:	str	sl, [sp, #24]
   1a940:	ldr	r8, [sp, #8]
   1a944:	add	r3, pc, r3
   1a948:	mov	sl, r3
   1a94c:	mov	r1, r7
   1a950:	mov	r0, r9
   1a954:	bl	4350 <readstat_get_variable@plt>
   1a958:	add	r5, r0, #8
   1a95c:	mov	r3, r8
   1a960:	mov	r2, sl
   1a964:	mov	r1, #9
   1a968:	mov	r0, fp
   1a96c:	add	r7, r7, #1
   1a970:	bl	4254 <snprintf@plt>
   1a974:	mov	r0, r5
   1a978:	add	r8, r8, #15
   1a97c:	bl	41d0 <strlen@plt>
   1a980:	mov	r3, #61	; 0x3d
   1a984:	subs	r6, r0, #0
   1a988:	strb	r3, [sp, #52]	; 0x34
   1a98c:	mov	r3, #9
   1a990:	strb	r3, [sp, #64]	; 0x40
   1a994:	beq	1aa08 <sav_begin_data+0xfc0>
   1a998:	cmp	r6, #64	; 0x40
   1a99c:	mov	r2, #1
   1a9a0:	ldr	r1, [sp, #16]
   1a9a4:	movcs	r6, #64	; 0x40
   1a9a8:	cmp	r4, #0
   1a9ac:	mov	r0, r9
   1a9b0:	bne	1a9c0 <sav_begin_data+0xf78>
   1a9b4:	bl	4428 <readstat_write_bytes@plt>
   1a9b8:	subs	r3, r0, #0
   1a9bc:	bne	1a0ac <sav_begin_data+0x664>
   1a9c0:	mov	r1, fp
   1a9c4:	mov	r0, r9
   1a9c8:	bl	4128 <readstat_write_string@plt>
   1a9cc:	subs	r3, r0, #0
   1a9d0:	mov	r2, #1
   1a9d4:	ldr	r1, [sp, #20]
   1a9d8:	mov	r0, r9
   1a9dc:	bne	1a0ac <sav_begin_data+0x664>
   1a9e0:	bl	4428 <readstat_write_bytes@plt>
   1a9e4:	subs	r3, r0, #0
   1a9e8:	mov	r2, r6
   1a9ec:	mov	r1, r5
   1a9f0:	mov	r0, r9
   1a9f4:	bne	1a0ac <sav_begin_data+0x664>
   1a9f8:	bl	4428 <readstat_write_bytes@plt>
   1a9fc:	subs	r3, r0, #0
   1aa00:	mov	r4, r3
   1aa04:	bne	1a0ac <sav_begin_data+0x664>
   1aa08:	ldr	ip, [r9, #28]
   1aa0c:	cmp	r7, ip
   1aa10:	blt	1a94c <sav_begin_data+0xf04>
   1aa14:	ldr	sl, [sp, #24]
   1aa18:	b	1a484 <sav_begin_data+0xa3c>
   1aa1c:	ldr	fp, [sp, #24]
   1aa20:	ldr	sl, [sp, #32]
   1aa24:	ldr	r3, [sp, #140]	; 0x8c
   1aa28:	cmp	r3, #0
   1aa2c:	bne	1ad4c <sav_begin_data+0x1304>
   1aa30:	ldr	r1, [pc, #-1744]	; 1a368 <sav_begin_data+0x920>
   1aa34:	ldr	ip, [r9, #28]
   1aa38:	add	r1, pc, r1
   1aa3c:	ldrd	r2, [r1, #112]	; 0x70
   1aa40:	cmp	ip, #0
   1aa44:	str	ip, [sp, #24]
   1aa48:	ldrd	r0, [r1, #120]	; 0x78
   1aa4c:	movgt	r7, #0
   1aa50:	strgt	sl, [sp, #36]	; 0x24
   1aa54:	ldrgt	r5, [sp, #16]
   1aa58:	strd	r2, [sp, #128]	; 0x80
   1aa5c:	strd	r0, [sl, #8]
   1aa60:	bgt	1aa78 <sav_begin_data+0x1030>
   1aa64:	b	1ab40 <sav_begin_data+0x10f8>
   1aa68:	ldr	r3, [sp, #24]
   1aa6c:	add	r7, r7, #1
   1aa70:	cmp	r3, r7
   1aa74:	beq	1ab3c <sav_begin_data+0x10f4>
   1aa78:	mov	r1, r7
   1aa7c:	mov	r0, r9
   1aa80:	bl	4350 <readstat_get_variable@plt>
   1aa84:	mov	r6, r0
   1aa88:	add	r0, r0, #8
   1aa8c:	bl	41d0 <strlen@plt>
   1aa90:	str	r0, [sp, #32]
   1aa94:	mov	r0, r6
   1aa98:	bl	429c <readstat_variable_get_storage_width@plt>
   1aa9c:	cmp	r0, #8
   1aaa0:	ble	1aa68 <sav_begin_data+0x1020>
   1aaa4:	mov	sl, #0
   1aaa8:	mov	r4, sl
   1aaac:	mov	r0, r6
   1aab0:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   1aab4:	cmp	r4, r0
   1aab8:	mov	r2, r4
   1aabc:	mov	r1, r6
   1aac0:	mov	r0, r5
   1aac4:	bge	1ab18 <sav_begin_data+0x10d0>
   1aac8:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   1aacc:	mov	r2, r4
   1aad0:	mov	r1, r6
   1aad4:	mov	r0, fp
   1aad8:	add	r4, r4, #1
   1aadc:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   1aae0:	ldm	r5, {r0, r1, r2, r3}
   1aae4:	bl	3f84 <readstat_string_value@plt>
   1aae8:	mov	r8, r0
   1aaec:	ldm	fp, {r0, r1, r2, r3}
   1aaf0:	bl	3f84 <readstat_string_value@plt>
   1aaf4:	cmp	r8, #0
   1aaf8:	cmpne	r0, #0
   1aafc:	mov	r1, r0
   1ab00:	mov	r0, r8
   1ab04:	beq	1aaac <sav_begin_data+0x1064>
   1ab08:	bl	3dd4 <strcmp@plt>
   1ab0c:	cmp	r0, #0
   1ab10:	addeq	sl, sl, #1
   1ab14:	b	1aaac <sav_begin_data+0x1064>
   1ab18:	cmp	sl, #0
   1ab1c:	beq	1aa68 <sav_begin_data+0x1020>
   1ab20:	ldr	r2, [sp, #32]
   1ab24:	ldr	r3, [sp, #140]	; 0x8c
   1ab28:	add	r3, r2, r3
   1ab2c:	add	r3, r3, #9
   1ab30:	add	sl, r3, sl, lsl #3
   1ab34:	str	sl, [sp, #140]	; 0x8c
   1ab38:	b	1aa68 <sav_begin_data+0x1020>
   1ab3c:	ldr	sl, [sp, #36]	; 0x24
   1ab40:	ldr	r3, [sp, #140]	; 0x8c
   1ab44:	cmp	r3, #0
   1ab48:	beq	1af74 <sav_begin_data+0x152c>
   1ab4c:	mov	r2, #16
   1ab50:	mov	r1, sl
   1ab54:	mov	r0, r9
   1ab58:	bl	4428 <readstat_write_bytes@plt>
   1ab5c:	subs	r4, r0, #0
   1ab60:	bne	19e24 <sav_begin_data+0x3dc>
   1ab64:	ldr	r3, [sp, #24]
   1ab68:	cmp	r3, #0
   1ab6c:	ble	1af74 <sav_begin_data+0x152c>
   1ab70:	add	r3, sp, #47	; 0x2f
   1ab74:	mov	r8, r4
   1ab78:	ldr	r5, [sp, #16]
   1ab7c:	str	r3, [sp, #32]
   1ab80:	str	sl, [sp, #36]	; 0x24
   1ab84:	b	1ab98 <sav_begin_data+0x1150>
   1ab88:	ldr	r3, [sp, #24]
   1ab8c:	add	r8, r8, #1
   1ab90:	cmp	r3, r8
   1ab94:	beq	1af70 <sav_begin_data+0x1528>
   1ab98:	mov	r1, r8
   1ab9c:	mov	r0, r9
   1aba0:	bl	4350 <readstat_get_variable@plt>
   1aba4:	add	sl, r0, #8
   1aba8:	mov	r6, r0
   1abac:	mov	r0, sl
   1abb0:	bl	41d0 <strlen@plt>
   1abb4:	mov	r3, #0
   1abb8:	str	r0, [sp, #48]	; 0x30
   1abbc:	mov	r0, r6
   1abc0:	strb	r3, [sp, #47]	; 0x2f
   1abc4:	bl	429c <readstat_variable_get_storage_width@plt>
   1abc8:	cmp	r0, #8
   1abcc:	movgt	r4, #0
   1abd0:	ble	1ab88 <sav_begin_data+0x1140>
   1abd4:	mov	r0, r6
   1abd8:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   1abdc:	cmp	r4, r0
   1abe0:	mov	r2, r4
   1abe4:	mov	r1, r6
   1abe8:	mov	r0, r5
   1abec:	bge	1ac4c <sav_begin_data+0x1204>
   1abf0:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   1abf4:	mov	r2, r4
   1abf8:	mov	r1, r6
   1abfc:	mov	r0, fp
   1ac00:	add	r4, r4, #1
   1ac04:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   1ac08:	ldm	r5, {r0, r1, r2, r3}
   1ac0c:	bl	3f84 <readstat_string_value@plt>
   1ac10:	mov	r7, r0
   1ac14:	ldm	fp, {r0, r1, r2, r3}
   1ac18:	bl	3f84 <readstat_string_value@plt>
   1ac1c:	cmp	r7, #0
   1ac20:	cmpne	r0, #0
   1ac24:	mov	r1, r0
   1ac28:	mov	r0, r7
   1ac2c:	beq	1abd4 <sav_begin_data+0x118c>
   1ac30:	bl	3dd4 <strcmp@plt>
   1ac34:	cmp	r0, #0
   1ac38:	bne	1abd4 <sav_begin_data+0x118c>
   1ac3c:	ldrb	r3, [sp, #47]	; 0x2f
   1ac40:	add	r3, r3, #1
   1ac44:	strb	r3, [sp, #47]	; 0x2f
   1ac48:	b	1abd4 <sav_begin_data+0x118c>
   1ac4c:	ldr	r3, [sp, #32]
   1ac50:	ldrsb	r3, [r3]
   1ac54:	cmp	r3, #0
   1ac58:	beq	1ab88 <sav_begin_data+0x1140>
   1ac5c:	mov	r2, #4
   1ac60:	mov	r0, r9
   1ac64:	ldr	r1, [sp, #12]
   1ac68:	bl	4428 <readstat_write_bytes@plt>
   1ac6c:	cmp	r0, #0
   1ac70:	bne	1a858 <sav_begin_data+0xe10>
   1ac74:	mov	r1, sl
   1ac78:	mov	r0, r9
   1ac7c:	ldr	r2, [sp, #48]	; 0x30
   1ac80:	bl	4428 <readstat_write_bytes@plt>
   1ac84:	cmp	r0, #0
   1ac88:	bne	1a858 <sav_begin_data+0xe10>
   1ac8c:	mov	r2, #1
   1ac90:	mov	r0, r9
   1ac94:	ldr	r1, [sp, #32]
   1ac98:	bl	4428 <readstat_write_bytes@plt>
   1ac9c:	cmp	r0, #0
   1aca0:	bne	1a858 <sav_begin_data+0xe10>
   1aca4:	mov	r3, #8
   1aca8:	mov	r2, #4
   1acac:	ldr	r1, [sp, #20]
   1acb0:	mov	r0, r9
   1acb4:	str	r3, [sp, #52]	; 0x34
   1acb8:	bl	4428 <readstat_write_bytes@plt>
   1acbc:	cmp	r0, #0
   1acc0:	bne	1a858 <sav_begin_data+0xe10>
   1acc4:	mov	r7, r0
   1acc8:	mov	r0, r6
   1accc:	bl	42d8 <readstat_variable_get_missing_ranges_count@plt>
   1acd0:	cmp	r7, r0
   1acd4:	mov	r2, r7
   1acd8:	mov	r1, r6
   1acdc:	mov	r0, r5
   1ace0:	bge	1ab88 <sav_begin_data+0x1140>
   1ace4:	bl	3f18 <readstat_variable_get_missing_range_lo@plt>
   1ace8:	mov	r2, r7
   1acec:	mov	r1, r6
   1acf0:	mov	r0, fp
   1acf4:	add	r7, r7, #1
   1acf8:	bl	42fc <readstat_variable_get_missing_range_hi@plt>
   1acfc:	ldm	r5, {r0, r1, r2, r3}
   1ad00:	bl	3f84 <readstat_string_value@plt>
   1ad04:	mov	r4, r0
   1ad08:	ldm	fp, {r0, r1, r2, r3}
   1ad0c:	bl	3f84 <readstat_string_value@plt>
   1ad10:	cmp	r4, #0
   1ad14:	cmpne	r0, #0
   1ad18:	mov	r1, r0
   1ad1c:	mov	r0, r4
   1ad20:	beq	1acc8 <sav_begin_data+0x1280>
   1ad24:	bl	3dd4 <strcmp@plt>
   1ad28:	cmp	r0, #0
   1ad2c:	bne	1acc8 <sav_begin_data+0x1280>
   1ad30:	mov	r1, r4
   1ad34:	mov	r0, r9
   1ad38:	ldr	r2, [sp, #52]	; 0x34
   1ad3c:	bl	4524 <readstat_write_space_padded_string@plt>
   1ad40:	cmp	r0, #0
   1ad44:	beq	1acc8 <sav_begin_data+0x1280>
   1ad48:	b	1a858 <sav_begin_data+0xe10>
   1ad4c:	mov	r2, #16
   1ad50:	mov	r1, sl
   1ad54:	mov	r0, r9
   1ad58:	bl	4428 <readstat_write_bytes@plt>
   1ad5c:	subs	r4, r0, #0
   1ad60:	bne	19e24 <sav_begin_data+0x3dc>
   1ad64:	mov	r5, r4
   1ad68:	str	r4, [sp, #24]
   1ad6c:	str	sl, [sp, #32]
   1ad70:	ldr	r2, [sp, #24]
   1ad74:	ldr	r3, [r9, #40]	; 0x28
   1ad78:	cmp	r2, r3
   1ad7c:	bge	1b060 <sav_begin_data+0x1618>
   1ad80:	mov	r0, r9
   1ad84:	ldr	r1, [sp, #24]
   1ad88:	bl	43f8 <readstat_get_label_set@plt>
   1ad8c:	mov	r7, r0
   1ad90:	bl	18d68 <readstat_label_set_number_short_variables>
   1ad94:	ldr	r4, [r7, #276]	; 0x114
   1ad98:	cmp	r0, r4
   1ad9c:	blt	1adb0 <sav_begin_data+0x1368>
   1ada0:	ldr	r3, [sp, #24]
   1ada4:	add	r3, r3, #1
   1ada8:	str	r3, [sp, #24]
   1adac:	b	1ad70 <sav_begin_data+0x1328>
   1adb0:	ldr	r3, [r7, #264]	; 0x108
   1adb4:	cmp	r4, #0
   1adb8:	str	r3, [sp, #48]	; 0x30
   1adbc:	ble	1ada0 <sav_begin_data+0x1358>
   1adc0:	mov	r8, #0
   1adc4:	mov	sl, r5
   1adc8:	str	r4, [sp, #36]	; 0x24
   1adcc:	mov	r1, r8
   1add0:	mov	r0, r7
   1add4:	bl	441c <readstat_get_label_set_variable@plt>
   1add8:	add	r5, r0, #8
   1addc:	mov	r6, r0
   1ade0:	mov	r0, r5
   1ade4:	bl	41d0 <strlen@plt>
   1ade8:	str	r0, [sp, #52]	; 0x34
   1adec:	mov	r0, r6
   1adf0:	bl	429c <readstat_variable_get_storage_width@plt>
   1adf4:	cmp	r0, #8
   1adf8:	mov	r1, r0
   1adfc:	str	r0, [sp, #64]	; 0x40
   1ae00:	bgt	1ae1c <sav_begin_data+0x13d4>
   1ae04:	ldr	r3, [sp, #36]	; 0x24
   1ae08:	add	r8, r8, #1
   1ae0c:	cmp	r3, r8
   1ae10:	bne	1adcc <sav_begin_data+0x1384>
   1ae14:	mov	r5, sl
   1ae18:	b	1ada0 <sav_begin_data+0x1358>
   1ae1c:	mov	r0, sl
   1ae20:	bl	3fcc <realloc@plt>
   1ae24:	mov	r1, #32
   1ae28:	ldr	r2, [sp, #64]	; 0x40
   1ae2c:	mov	sl, r0
   1ae30:	bl	4278 <memset@plt>
   1ae34:	mov	r2, #4
   1ae38:	mov	r0, r9
   1ae3c:	ldr	r1, [sp, #20]
   1ae40:	bl	4428 <readstat_write_bytes@plt>
   1ae44:	subs	ip, r0, #0
   1ae48:	bne	1af60 <sav_begin_data+0x1518>
   1ae4c:	mov	r1, r5
   1ae50:	mov	r0, r9
   1ae54:	ldr	r2, [sp, #52]	; 0x34
   1ae58:	bl	4428 <readstat_write_bytes@plt>
   1ae5c:	subs	ip, r0, #0
   1ae60:	bne	1af60 <sav_begin_data+0x1518>
   1ae64:	mov	r2, #4
   1ae68:	mov	r0, r9
   1ae6c:	ldr	r1, [sp, #16]
   1ae70:	bl	4428 <readstat_write_bytes@plt>
   1ae74:	subs	ip, r0, #0
   1ae78:	bne	1af60 <sav_begin_data+0x1518>
   1ae7c:	mov	r2, #4
   1ae80:	mov	r0, r9
   1ae84:	ldr	r1, [sp, #12]
   1ae88:	bl	4428 <readstat_write_bytes@plt>
   1ae8c:	subs	ip, r0, #0
   1ae90:	bne	1af60 <sav_begin_data+0x1518>
   1ae94:	ldr	r3, [sp, #48]	; 0x30
   1ae98:	cmp	r3, #0
   1ae9c:	movgt	r6, ip
   1aea0:	bgt	1af18 <sav_begin_data+0x14d0>
   1aea4:	b	1ae04 <sav_begin_data+0x13bc>
   1aea8:	ldr	r1, [r4, #16]
   1aeac:	bl	4428 <readstat_write_bytes@plt>
   1aeb0:	subs	ip, r0, #0
   1aeb4:	mov	r1, sl
   1aeb8:	mov	r0, r9
   1aebc:	bne	1af60 <sav_begin_data+0x1518>
   1aec0:	ldr	ip, [sp, #64]	; 0x40
   1aec4:	cmp	r5, ip
   1aec8:	sub	r2, ip, r5
   1aecc:	bge	1aedc <sav_begin_data+0x1494>
   1aed0:	bl	4428 <readstat_write_bytes@plt>
   1aed4:	subs	ip, r0, #0
   1aed8:	bne	1af60 <sav_begin_data+0x1518>
   1aedc:	mov	r2, #4
   1aee0:	mov	r1, fp
   1aee4:	mov	r0, r9
   1aee8:	bl	4428 <readstat_write_bytes@plt>
   1aeec:	subs	ip, r0, #0
   1aef0:	mov	r0, r9
   1aef4:	bne	1af60 <sav_begin_data+0x1518>
   1aef8:	ldr	r1, [r4, #24]
   1aefc:	ldr	r2, [sp, #80]	; 0x50
   1af00:	bl	4428 <readstat_write_bytes@plt>
   1af04:	subs	ip, r0, #0
   1af08:	bne	1af60 <sav_begin_data+0x1518>
   1af0c:	ldr	r3, [sp, #48]	; 0x30
   1af10:	cmp	r6, r3
   1af14:	bge	1ae04 <sav_begin_data+0x13bc>
   1af18:	mov	r1, r6
   1af1c:	mov	r0, r7
   1af20:	bl	44a0 <readstat_get_value_label@plt>
   1af24:	mov	r4, r0
   1af28:	mov	r2, #4
   1af2c:	ldr	r1, [sp, #16]
   1af30:	mov	r0, r9
   1af34:	add	r6, r6, #1
   1af38:	ldr	r5, [r4, #20]
   1af3c:	ldr	ip, [r4, #28]
   1af40:	cmp	ip, #120	; 0x78
   1af44:	movgt	ip, #120	; 0x78
   1af48:	str	ip, [sp, #80]	; 0x50
   1af4c:	bl	4428 <readstat_write_bytes@plt>
   1af50:	subs	ip, r0, #0
   1af54:	mov	r2, r5
   1af58:	mov	r0, r9
   1af5c:	beq	1aea8 <sav_begin_data+0x1460>
   1af60:	mov	r0, sl
   1af64:	mov	r4, ip
   1af68:	bl	3e94 <free@plt>
   1af6c:	b	19e24 <sav_begin_data+0x3dc>
   1af70:	ldr	sl, [sp, #36]	; 0x24
   1af74:	mov	r2, #1
   1af78:	mov	r3, #0
   1af7c:	ldr	r1, [pc, #-3096]	; 1a36c <sav_begin_data+0x924>
   1af80:	mov	r0, r9
   1af84:	strd	r2, [sp, #64]	; 0x40
   1af88:	mov	r2, #16
   1af8c:	ldr	ip, [r9, #80]	; 0x50
   1af90:	add	r1, pc, r1
   1af94:	mov	r3, r1
   1af98:	mov	r1, sl
   1af9c:	ldrd	r6, [r3, #128]	; 0x80
   1afa0:	ldrd	r4, [r3, #136]	; 0x88
   1afa4:	strd	r6, [sp, #128]	; 0x80
   1afa8:	strd	r4, [sl, #8]
   1afac:	asr	r5, ip, #31
   1afb0:	mov	r4, ip
   1afb4:	strd	r4, [sp, #80]	; 0x50
   1afb8:	bl	4428 <readstat_write_bytes@plt>
   1afbc:	subs	r4, r0, #0
   1afc0:	bne	19e24 <sav_begin_data+0x3dc>
   1afc4:	mov	r2, #8
   1afc8:	mov	r0, r9
   1afcc:	ldr	r1, [sp, #16]
   1afd0:	bl	4428 <readstat_write_bytes@plt>
   1afd4:	subs	r4, r0, #0
   1afd8:	bne	19e24 <sav_begin_data+0x3dc>
   1afdc:	mov	r1, fp
   1afe0:	mov	r2, #8
   1afe4:	mov	r0, r9
   1afe8:	bl	4428 <readstat_write_bytes@plt>
   1afec:	subs	r4, r0, #0
   1aff0:	bne	19e24 <sav_begin_data+0x3dc>
   1aff4:	movw	r3, #999	; 0x3e7
   1aff8:	mov	r1, sl
   1affc:	mov	r2, #8
   1b000:	mov	r0, r9
   1b004:	str	r3, [sp, #128]	; 0x80
   1b008:	str	r4, [sp, #132]	; 0x84
   1b00c:	bl	4428 <readstat_write_bytes@plt>
   1b010:	mov	r4, r0
   1b014:	ldr	r0, [sp, #8]
   1b018:	bl	3e94 <free@plt>
   1b01c:	cmp	r4, #0
   1b020:	bne	19e2c <sav_begin_data+0x3e4>
   1b024:	ldr	r0, [r9, #76]	; 0x4c
   1b028:	bl	3fb4 <sav_compressed_row_bound@plt>
   1b02c:	ldr	r3, [r9, #16]
   1b030:	cmp	r3, #1
   1b034:	beq	1b054 <sav_begin_data+0x160c>
   1b038:	cmp	r3, #2
   1b03c:	bne	19e2c <sav_begin_data+0x3e4>
   1b040:	mov	r3, r4
   1b044:	ldr	r2, [r9, #4]
   1b048:	bl	4080 <zsav_ctx_init@plt>
   1b04c:	str	r0, [r9, #300]	; 0x12c
   1b050:	b	19e2c <sav_begin_data+0x3e4>
   1b054:	bl	4200 <readstat_malloc@plt>
   1b058:	str	r0, [r9, #300]	; 0x12c
   1b05c:	b	19e2c <sav_begin_data+0x3e4>
   1b060:	cmp	r5, #0
   1b064:	ldr	sl, [sp, #32]
   1b068:	beq	1aa30 <sav_begin_data+0xfe8>
   1b06c:	mov	r0, r5
   1b070:	bl	3e94 <free@plt>
   1b074:	b	1aa30 <sav_begin_data+0xfe8>

0001b078 <readstat_begin_writing_sav>:
   1b078:	ldr	r3, [pc, #348]	; 1b1dc <readstat_begin_writing_sav+0x164>
   1b07c:	str	r4, [sp, #-8]!
   1b080:	ldr	ip, [pc, #344]	; 1b1e0 <readstat_begin_writing_sav+0x168>
   1b084:	ldr	r4, [r0, #8]
   1b088:	add	r3, pc, r3
   1b08c:	str	lr, [sp, #4]
   1b090:	ldr	lr, [pc, #332]	; 1b1e4 <readstat_begin_writing_sav+0x16c>
   1b094:	str	r3, [r0, #292]	; 0x124
   1b098:	add	ip, pc, ip
   1b09c:	ldr	r3, [pc, #324]	; 1b1e8 <readstat_begin_writing_sav+0x170>
   1b0a0:	str	ip, [r0, #228]	; 0xe4
   1b0a4:	cmp	r4, #3
   1b0a8:	ldr	ip, [pc, #316]	; 1b1ec <readstat_begin_writing_sav+0x174>
   1b0ac:	add	lr, pc, lr
   1b0b0:	add	r3, pc, r3
   1b0b4:	str	r3, [r0, #232]	; 0xe8
   1b0b8:	add	ip, pc, ip
   1b0bc:	ldr	r3, [pc, #300]	; 1b1f0 <readstat_begin_writing_sav+0x178>
   1b0c0:	str	lr, [r0, #236]	; 0xec
   1b0c4:	str	ip, [r0, #240]	; 0xf0
   1b0c8:	ldr	ip, [pc, #292]	; 1b1f4 <readstat_begin_writing_sav+0x17c>
   1b0cc:	add	r3, pc, r3
   1b0d0:	ldr	lr, [pc, #288]	; 1b1f8 <readstat_begin_writing_sav+0x180>
   1b0d4:	str	r3, [r0, #244]	; 0xf4
   1b0d8:	ldr	r3, [pc, #284]	; 1b1fc <readstat_begin_writing_sav+0x184>
   1b0dc:	add	ip, pc, ip
   1b0e0:	str	ip, [r0, #252]	; 0xfc
   1b0e4:	add	lr, pc, lr
   1b0e8:	ldr	ip, [pc, #272]	; 1b200 <readstat_begin_writing_sav+0x188>
   1b0ec:	str	lr, [r0, #248]	; 0xf8
   1b0f0:	add	r3, pc, r3
   1b0f4:	ldr	lr, [pc, #264]	; 1b204 <readstat_begin_writing_sav+0x18c>
   1b0f8:	str	r3, [r0, #256]	; 0x100
   1b0fc:	ldr	r3, [pc, #260]	; 1b208 <readstat_begin_writing_sav+0x190>
   1b100:	add	ip, pc, ip
   1b104:	str	ip, [r0, #268]	; 0x10c
   1b108:	add	lr, pc, lr
   1b10c:	ldr	ip, [pc, #248]	; 1b20c <readstat_begin_writing_sav+0x194>
   1b110:	str	lr, [r0, #264]	; 0x108
   1b114:	add	r3, pc, r3
   1b118:	str	r3, [r0, #276]	; 0x114
   1b11c:	moveq	r3, #2
   1b120:	add	ip, pc, ip
   1b124:	streq	r3, [r0, #16]
   1b128:	beq	1b198 <readstat_begin_writing_sav+0x120>
   1b12c:	cmp	r4, #0
   1b130:	ldr	r3, [r0, #16]
   1b134:	bne	1b148 <readstat_begin_writing_sav+0xd0>
   1b138:	cmp	r3, #2
   1b13c:	movne	lr, #2
   1b140:	moveq	lr, #3
   1b144:	str	lr, [r0, #8]
   1b148:	cmp	r3, #1
   1b14c:	beq	1b170 <readstat_begin_writing_sav+0xf8>
   1b150:	cmp	r3, #2
   1b154:	beq	1b198 <readstat_begin_writing_sav+0x120>
   1b158:	cmp	r3, #0
   1b15c:	bne	1b1cc <readstat_begin_writing_sav+0x154>
   1b160:	ldr	r4, [sp]
   1b164:	ldr	lr, [sp, #4]
   1b168:	add	sp, sp, #8
   1b16c:	b	3f3c <readstat_begin_writing_file@plt>
   1b170:	ldr	lr, [pc, #152]	; 1b210 <readstat_begin_writing_sav+0x198>
   1b174:	ldr	r3, [pc, #152]	; 1b214 <readstat_begin_writing_sav+0x19c>
   1b178:	ldr	r4, [sp]
   1b17c:	add	lr, pc, lr
   1b180:	str	lr, [r0, #280]	; 0x118
   1b184:	ldr	r3, [ip, r3]
   1b188:	ldr	lr, [sp, #4]
   1b18c:	add	sp, sp, #8
   1b190:	str	r3, [r0, #288]	; 0x120
   1b194:	b	3f3c <readstat_begin_writing_file@plt>
   1b198:	ldr	r3, [pc, #120]	; 1b218 <readstat_begin_writing_sav+0x1a0>
   1b19c:	ldr	lr, [pc, #120]	; 1b21c <readstat_begin_writing_sav+0x1a4>
   1b1a0:	ldr	r4, [ip, r3]
   1b1a4:	ldr	r3, [pc, #116]	; 1b220 <readstat_begin_writing_sav+0x1a8>
   1b1a8:	str	r4, [r0, #280]	; 0x118
   1b1ac:	ldr	lr, [ip, lr]
   1b1b0:	ldr	r4, [sp]
   1b1b4:	str	lr, [r0, #284]	; 0x11c
   1b1b8:	ldr	r3, [ip, r3]
   1b1bc:	ldr	lr, [sp, #4]
   1b1c0:	add	sp, sp, #8
   1b1c4:	str	r3, [r0, #288]	; 0x120
   1b1c8:	b	3f3c <readstat_begin_writing_file@plt>
   1b1cc:	ldr	r4, [sp]
   1b1d0:	add	sp, sp, #4
   1b1d4:	mov	r0, #6
   1b1d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1dc:	.word	0xffffda78
   1b1e0:	.word	0xffffdd30
   1b1e4:	.word	0xffffdc88
   1b1e8:	.word	0xffffde40
   1b1ec:	.word	0xffffdc50
   1b1f0:	.word	0xffffdc10
   1b1f4:	.word	0xffffdbb4
   1b1f8:	.word	0xffffdbd0
   1b1fc:	.word	0xffffdd40
   1b200:	.word	0xffffdb64
   1b204:	.word	0xffffdb38
   1b208:	.word	0xffffe92c
   1b20c:	.word	0x00029ed8
   1b210:	.word	0xffffd9b4
   1b214:	.word	0x000002d4
   1b218:	.word	0x000002e0
   1b21c:	.word	0x000002e8
   1b220:	.word	0x000002d0
   1b224:	.word	0x00000000

0001b228 <spss_boxed_missing_value>:
   1b228:	ldr	r3, [r1]
   1b22c:	strd	r4, [sp, #-8]!
   1b230:	sub	sp, sp, #16
   1b234:	cmp	r3, #5
   1b238:	beq	1b278 <spss_boxed_missing_value+0x50>
   1b23c:	add	r2, r2, r2, lsl #5
   1b240:	mov	ip, #0
   1b244:	add	r2, r2, #88	; 0x58
   1b248:	str	ip, [sp, #8]
   1b24c:	add	r2, r1, r2
   1b250:	str	ip, [sp, #12]
   1b254:	stm	sp, {r2, ip}
   1b258:	ldrd	r4, [sp]
   1b25c:	ldrd	r2, [sp, #8]
   1b260:	strd	r4, [r0]
   1b264:	strd	r2, [r0, #8]
   1b268:	add	sp, sp, #16
   1b26c:	ldrd	r4, [sp]
   1b270:	add	sp, sp, #8
   1b274:	bx	lr
   1b278:	add	r2, r1, r2, lsl #3
   1b27c:	str	r3, [sp, #8]
   1b280:	mov	r1, #0
   1b284:	str	r1, [sp, #12]
   1b288:	vldr	d7, [r2, #64]	; 0x40
   1b28c:	vcmp.f64	d7, d7
   1b290:	vstr	d7, [sp]
   1b294:	ldrd	r2, [sp]
   1b298:	strd	r2, [r0]
   1b29c:	vmrs	APSR_nzcv, fpscr
   1b2a0:	movvs	r3, #1
   1b2a4:	movvc	r3, r1
   1b2a8:	strb	r3, [sp, #13]
   1b2ac:	ldrd	r2, [sp, #8]
   1b2b0:	strd	r2, [r0, #8]
   1b2b4:	add	sp, sp, #16
   1b2b8:	ldrd	r4, [sp]
   1b2bc:	add	sp, sp, #8
   1b2c0:	bx	lr

0001b2c4 <spss_format>:
   1b2c4:	ldr	r3, [r2]
   1b2c8:	cmp	r3, #41	; 0x29
   1b2cc:	bhi	1b348 <spss_format+0x84>
   1b2d0:	str	r4, [sp, #-8]!
   1b2d4:	str	lr, [sp, #4]
   1b2d8:	sub	sp, sp, #8
   1b2dc:	ldr	lr, [pc, #160]	; 1b384 <spss_format+0xc0>
   1b2e0:	add	lr, pc, lr
   1b2e4:	ldrb	ip, [lr, r3, lsl #4]
   1b2e8:	cmp	ip, #0
   1b2ec:	moveq	r0, ip
   1b2f0:	beq	1b338 <spss_format+0x74>
   1b2f4:	ldr	r4, [r2, #8]
   1b2f8:	sub	ip, r3, #5
   1b2fc:	add	r3, lr, r3, lsl #4
   1b300:	clz	ip, ip
   1b304:	lsr	ip, ip, #5
   1b308:	ldr	lr, [r2, #4]
   1b30c:	cmp	r4, #0
   1b310:	moveq	r2, ip
   1b314:	movne	r2, #1
   1b318:	cmp	r2, #0
   1b31c:	beq	1b350 <spss_format+0x8c>
   1b320:	ldr	r2, [pc, #96]	; 1b388 <spss_format+0xc4>
   1b324:	str	lr, [sp]
   1b328:	str	r4, [sp, #4]
   1b32c:	add	r2, pc, r2
   1b330:	bl	4254 <snprintf@plt>
   1b334:	mov	r0, #1
   1b338:	add	sp, sp, #8
   1b33c:	ldr	r4, [sp]
   1b340:	add	sp, sp, #4
   1b344:	pop	{pc}		; (ldr pc, [sp], #4)
   1b348:	mov	r0, #0
   1b34c:	bx	lr
   1b350:	cmp	lr, #0
   1b354:	beq	1b370 <spss_format+0xac>
   1b358:	ldr	r2, [pc, #44]	; 1b38c <spss_format+0xc8>
   1b35c:	str	lr, [sp]
   1b360:	add	r2, pc, r2
   1b364:	bl	4254 <snprintf@plt>
   1b368:	mov	r0, #1
   1b36c:	b	1b338 <spss_format+0x74>
   1b370:	ldr	r2, [pc, #24]	; 1b390 <spss_format+0xcc>
   1b374:	add	r2, pc, r2
   1b378:	bl	4254 <snprintf@plt>
   1b37c:	mov	r0, #1
   1b380:	b	1b338 <spss_format+0x74>
   1b384:	.word	0x0002b794
   1b388:	.word	0x0000ad14
   1b38c:	.word	0x0000ace8
   1b390:	.word	0x0000a91c

0001b394 <spss_varinfo_compare>:
   1b394:	ldr	r2, [r1]
   1b398:	ldr	r3, [r0]
   1b39c:	ldr	r2, [r2, #12]
   1b3a0:	cmp	r2, r3
   1b3a4:	bgt	1b3b4 <spss_varinfo_compare+0x20>
   1b3a8:	movlt	r0, #1
   1b3ac:	movge	r0, #0
   1b3b0:	bx	lr
   1b3b4:	mvn	r0, #0
   1b3b8:	bx	lr

0001b3bc <spss_varinfo_free>:
   1b3bc:	str	r4, [sp, #-8]!
   1b3c0:	subs	r4, r0, #0
   1b3c4:	str	lr, [sp, #4]
   1b3c8:	beq	1b3f0 <spss_varinfo_free+0x34>
   1b3cc:	ldr	r0, [r4, #264]	; 0x108
   1b3d0:	cmp	r0, #0
   1b3d4:	beq	1b3dc <spss_varinfo_free+0x20>
   1b3d8:	bl	3e94 <free@plt>
   1b3dc:	mov	r0, r4
   1b3e0:	ldr	r4, [sp]
   1b3e4:	ldr	lr, [sp, #4]
   1b3e8:	add	sp, sp, #8
   1b3ec:	b	3e94 <free@plt>
   1b3f0:	ldr	r4, [sp]
   1b3f4:	add	sp, sp, #4
   1b3f8:	pop	{pc}		; (ldr pc, [sp], #4)

0001b3fc <spss_64bit_value>:
   1b3fc:	push	{lr}		; (str lr, [sp, #-4]!)
   1b400:	sub	sp, sp, #28
   1b404:	add	ip, sp, #8
   1b408:	stm	ip, {r0, r1, r2, r3}
   1b40c:	ldm	ip, {r0, r1, r2, r3}
   1b410:	bl	4188 <readstat_double_value@plt>
   1b414:	vldr	d7, [pc, #92]	; 1b478 <spss_64bit_value+0x7c>
   1b418:	vabs.f64	d6, d0
   1b41c:	vstr	d0, [sp]
   1b420:	vcmp.f64	d6, d7
   1b424:	vmrs	APSR_nzcv, fpscr
   1b428:	ble	1b454 <spss_64bit_value+0x58>
   1b42c:	vcmpe.f64	d0, #0.0
   1b430:	vmrs	APSR_nzcv, fpscr
   1b434:	mvnmi	r0, #1
   1b438:	mvnmi	r1, #1048576	; 0x100000
   1b43c:	bmi	1b44c <spss_64bit_value+0x50>
   1b440:	movw	r1, #65535	; 0xffff
   1b444:	movt	r1, #32751	; 0x7fef
   1b448:	mvn	r0, #0
   1b44c:	add	sp, sp, #28
   1b450:	pop	{pc}		; (ldr pc, [sp], #4)
   1b454:	vldr	d7, [sp]
   1b458:	vcmp.f64	d7, d7
   1b45c:	vmrs	APSR_nzcv, fpscr
   1b460:	ldrdvc	r0, [sp]
   1b464:	mvnvs	r0, #0
   1b468:	mvnvs	r1, #1048576	; 0x100000
   1b46c:	add	sp, sp, #28
   1b470:	pop	{pc}		; (ldr pc, [sp], #4)
   1b474:	nop	{0}
   1b478:	.word	0xffffffff
   1b47c:	.word	0x7fefffff

0001b480 <spss_missingness_for_info>:
   1b480:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1b484:	mov	r2, #520	; 0x208
   1b488:	strd	r6, [sp, #8]
   1b48c:	mov	r6, r1
   1b490:	mov	r1, #0
   1b494:	strd	r8, [sp, #16]
   1b498:	mov	r9, r0
   1b49c:	str	lr, [sp, #24]
   1b4a0:	sub	sp, sp, #524	; 0x20c
   1b4a4:	mov	r8, sp
   1b4a8:	mov	r0, r8
   1b4ac:	bl	4278 <memset@plt>
   1b4b0:	ldr	r5, [r6, #56]	; 0x38
   1b4b4:	cmp	r5, #0
   1b4b8:	bne	1b540 <spss_missingness_for_info+0xc0>
   1b4bc:	ldr	r3, [r6, #52]	; 0x34
   1b4c0:	cmp	r3, #0
   1b4c4:	ble	1b514 <spss_missingness_for_info+0x94>
   1b4c8:	mov	r4, r8
   1b4cc:	mov	r7, #1
   1b4d0:	str	r3, [sp, #512]	; 0x200
   1b4d4:	add	r3, sp, #520	; 0x208
   1b4d8:	mov	r2, r5
   1b4dc:	add	r0, r3, r7, lsl #4
   1b4e0:	mov	r1, r6
   1b4e4:	add	r5, r5, #1
   1b4e8:	add	r7, r7, #2
   1b4ec:	add	r4, r4, #32
   1b4f0:	sub	r0, r0, #520	; 0x208
   1b4f4:	bl	1b228 <spss_boxed_missing_value>
   1b4f8:	ldr	ip, [r6, #52]	; 0x34
   1b4fc:	ldrd	r2, [r4, #-16]
   1b500:	ldrd	r0, [r4, #-8]
   1b504:	cmp	ip, r5
   1b508:	strd	r2, [r4, #-32]	; 0xffffffe0
   1b50c:	strd	r0, [r4, #-24]	; 0xffffffe8
   1b510:	bgt	1b4d4 <spss_missingness_for_info+0x54>
   1b514:	mov	r1, r8
   1b518:	mov	r2, #520	; 0x208
   1b51c:	mov	r0, r9
   1b520:	bl	3ef4 <memcpy@plt>
   1b524:	mov	r0, r9
   1b528:	add	sp, sp, #524	; 0x20c
   1b52c:	ldrd	r4, [sp]
   1b530:	ldrd	r6, [sp, #8]
   1b534:	ldrd	r8, [sp, #16]
   1b538:	add	sp, sp, #24
   1b53c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b540:	mov	r4, #1
   1b544:	mov	r2, #0
   1b548:	mov	r1, r6
   1b54c:	mov	r0, r8
   1b550:	str	r4, [sp, #512]	; 0x200
   1b554:	bl	1b228 <spss_boxed_missing_value>
   1b558:	mov	r2, r4
   1b55c:	mov	r1, r6
   1b560:	add	r0, sp, #16
   1b564:	bl	1b228 <spss_boxed_missing_value>
   1b568:	ldr	r3, [r6, #52]	; 0x34
   1b56c:	cmp	r3, #3
   1b570:	bne	1b514 <spss_missingness_for_info+0x94>
   1b574:	mov	r3, #2
   1b578:	add	r4, sp, #48	; 0x30
   1b57c:	mov	r1, r6
   1b580:	mov	r2, r3
   1b584:	mov	r0, r4
   1b588:	str	r3, [sp, #512]	; 0x200
   1b58c:	bl	1b228 <spss_boxed_missing_value>
   1b590:	ldrd	r6, [r4]
   1b594:	ldrd	r2, [r4, #8]
   1b598:	strd	r6, [sp, #32]
   1b59c:	strd	r2, [sp, #40]	; 0x28
   1b5a0:	b	1b514 <spss_missingness_for_info+0x94>

0001b5a4 <spss_init_variable_for_info>:
   1b5a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b5a8:	mov	r4, r0
   1b5ac:	mov	r0, #1
   1b5b0:	strd	r6, [sp, #8]
   1b5b4:	mov	r7, r1
   1b5b8:	movw	r1, #2152	; 0x868
   1b5bc:	str	lr, [sp, #16]
   1b5c0:	sub	sp, sp, #532	; 0x214
   1b5c4:	mov	r6, r2
   1b5c8:	bl	3d2c <calloc@plt>
   1b5cc:	ldr	r1, [r4]
   1b5d0:	mov	r5, r0
   1b5d4:	str	r7, [r0, #2148]	; 0x864
   1b5d8:	ldr	r3, [r4, #20]
   1b5dc:	ldr	r2, [r4, #8]
   1b5e0:	cmp	r3, #0
   1b5e4:	ldreq	r3, [r4, #16]
   1b5e8:	stm	r0, {r1, r2}
   1b5ec:	add	r0, r0, #8
   1b5f0:	mov	r1, #300	; 0x12c
   1b5f4:	ldrb	r2, [r4, #196]	; 0xc4
   1b5f8:	str	r6, [sp]
   1b5fc:	lsleq	r3, r3, #3
   1b600:	cmp	r2, #0
   1b604:	addne	r2, r4, #196	; 0xc4
   1b608:	addeq	r2, r4, #187	; 0xbb
   1b60c:	str	r3, [r5, #1596]	; 0x63c
   1b610:	movne	r3, #65	; 0x41
   1b614:	moveq	r3, #9
   1b618:	bl	420c <readstat_convert@plt>
   1b61c:	ldr	r3, [r4, #264]	; 0x108
   1b620:	cmp	r3, #0
   1b624:	beq	1b63c <spss_init_variable_for_info+0x98>
   1b628:	ldr	r2, [pc, #112]	; 1b6a0 <spss_init_variable_for_info+0xfc>
   1b62c:	mov	r1, #1024	; 0x400
   1b630:	add	r0, r5, #564	; 0x234
   1b634:	add	r2, pc, r2
   1b638:	bl	4254 <snprintf@plt>
   1b63c:	add	r2, r4, #24
   1b640:	add	r6, sp, #8
   1b644:	mov	r1, #256	; 0x100
   1b648:	add	r0, r5, #308	; 0x134
   1b64c:	bl	43e0 <spss_format@plt>
   1b650:	mov	r0, r6
   1b654:	mov	r1, r4
   1b658:	bl	4500 <spss_missingness_for_info@plt>
   1b65c:	add	r0, r5, #1600	; 0x640
   1b660:	mov	r1, r6
   1b664:	mov	r2, #520	; 0x208
   1b668:	add	r0, r0, #8
   1b66c:	bl	3ef4 <memcpy@plt>
   1b670:	ldr	r2, [r4, #268]	; 0x10c
   1b674:	mov	r0, r5
   1b678:	ldr	r3, [r4, #276]	; 0x114
   1b67c:	str	r2, [r5, #2128]	; 0x850
   1b680:	cmp	r3, #0
   1b684:	ldreq	r3, [r4, #28]
   1b688:	str	r3, [r5, #2136]	; 0x858
   1b68c:	add	sp, sp, #532	; 0x214
   1b690:	ldrd	r4, [sp]
   1b694:	ldrd	r6, [sp, #8]
   1b698:	add	sp, sp, #16
   1b69c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6a0:	.word	0x0000a65c

0001b6a4 <spss_measure_from_readstat_measure>:
   1b6a4:	cmp	r0, #1
   1b6a8:	beq	1b6bc <spss_measure_from_readstat_measure+0x18>
   1b6ac:	cmp	r0, #2
   1b6b0:	beq	1b6bc <spss_measure_from_readstat_measure+0x18>
   1b6b4:	cmp	r0, #3
   1b6b8:	movne	r0, #0
   1b6bc:	bx	lr

0001b6c0 <spss_measure_to_readstat_measure>:
   1b6c0:	cmp	r0, #1
   1b6c4:	beq	1b6dc <spss_measure_to_readstat_measure+0x1c>
   1b6c8:	cmp	r0, #2
   1b6cc:	beq	1b6dc <spss_measure_to_readstat_measure+0x1c>
   1b6d0:	cmp	r0, #3
   1b6d4:	movne	r0, #0
   1b6d8:	moveq	r0, #3
   1b6dc:	bx	lr

0001b6e0 <spss_alignment_from_readstat_alignment>:
   1b6e0:	cmp	r0, #1
   1b6e4:	beq	1b700 <spss_alignment_from_readstat_alignment+0x20>
   1b6e8:	cmp	r0, #2
   1b6ec:	beq	1b704 <spss_alignment_from_readstat_alignment+0x24>
   1b6f0:	sub	r0, r0, #3
   1b6f4:	clz	r0, r0
   1b6f8:	lsr	r0, r0, #5
   1b6fc:	bx	lr
   1b700:	mov	r0, #0
   1b704:	bx	lr

0001b708 <spss_alignment_to_readstat_alignment>:
   1b708:	cmp	r0, #0
   1b70c:	beq	1b728 <spss_alignment_to_readstat_alignment+0x20>
   1b710:	cmp	r0, #2
   1b714:	beq	1b72c <spss_alignment_to_readstat_alignment+0x24>
   1b718:	cmp	r0, #1
   1b71c:	movne	r0, #0
   1b720:	moveq	r0, #3
   1b724:	bx	lr
   1b728:	mov	r0, #1
   1b72c:	bx	lr

0001b730 <spss_format_for_variable>:
   1b730:	mov	r3, #0
   1b734:	str	r3, [r1]
   1b738:	str	r3, [r1, #4]
   1b73c:	str	r3, [r1, #8]
   1b740:	ldr	r3, [r0]
   1b744:	cmp	r3, #0
   1b748:	bne	1b788 <spss_format_for_variable+0x58>
   1b74c:	ldr	r3, [r0, #2136]	; 0x858
   1b750:	mov	r2, #1
   1b754:	str	r2, [r1]
   1b758:	cmp	r3, #0
   1b75c:	beq	1b778 <spss_format_for_variable+0x48>
   1b760:	str	r3, [r1, #4]
   1b764:	ldrb	r3, [r0, #308]	; 0x134
   1b768:	cmp	r3, #0
   1b76c:	bne	1b7bc <spss_format_for_variable+0x8c>
   1b770:	mov	r0, #0
   1b774:	bx	lr
   1b778:	ldr	r3, [r0, #1600]	; 0x640
   1b77c:	cmp	r3, #0
   1b780:	ldreq	r3, [r0, #1596]	; 0x63c
   1b784:	b	1b760 <spss_format_for_variable+0x30>
   1b788:	ldr	r2, [r0, #2136]	; 0x858
   1b78c:	sub	r3, r3, #4
   1b790:	mov	ip, #5
   1b794:	str	ip, [r1]
   1b798:	cmp	r2, #0
   1b79c:	moveq	r2, #8
   1b7a0:	cmp	r3, #1
   1b7a4:	movls	r3, #2
   1b7a8:	str	r2, [r1, #4]
   1b7ac:	strls	r3, [r1, #8]
   1b7b0:	ldrb	r3, [r0, #308]	; 0x134
   1b7b4:	cmp	r3, #0
   1b7b8:	beq	1b770 <spss_format_for_variable+0x40>
   1b7bc:	mov	r3, #0
   1b7c0:	strd	r4, [sp, #-16]!
   1b7c4:	add	r5, r0, #308	; 0x134
   1b7c8:	mov	r0, r5
   1b7cc:	str	r6, [sp, #8]
   1b7d0:	mov	r4, r1
   1b7d4:	str	lr, [sp, #12]
   1b7d8:	str	r3, [r1, #8]
   1b7dc:	bl	41d0 <strlen@plt>
   1b7e0:	mov	r1, r0
   1b7e4:	mov	r2, r4
   1b7e8:	mov	r0, r5
   1b7ec:	bl	3f00 <spss_parse_format@plt>
   1b7f0:	cmp	r0, #0
   1b7f4:	ldrd	r4, [sp]
   1b7f8:	moveq	r0, #0
   1b7fc:	movne	r0, #11
   1b800:	ldr	r6, [sp, #8]
   1b804:	add	sp, sp, #12
   1b808:	pop	{pc}		; (ldr pc, [sp], #4)

0001b80c <spss_parse_format>:
   1b80c:	add	r3, r0, r1
   1b810:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b814:	strd	r6, [sp, #8]
   1b818:	cmp	r0, r3
   1b81c:	strd	r8, [sp, #16]
   1b820:	strd	sl, [sp, #24]
   1b824:	str	lr, [sp, #32]
   1b828:	sub	sp, sp, #20
   1b82c:	str	r3, [sp]
   1b830:	beq	1bdb8 <spss_parse_format+0x5ac>
   1b834:	ldr	r1, [pc, #1880]	; 1bf94 <spss_parse_format+0x788>
   1b838:	mov	r8, #0
   1b83c:	mov	r7, #34	; 0x22
   1b840:	mov	r5, r8
   1b844:	mov	ip, #1
   1b848:	ldr	fp, [pc, #1864]	; 1bf98 <spss_parse_format+0x78c>
   1b84c:	str	r8, [sp, #12]
   1b850:	ldr	r3, [pc, #1860]	; 1bf9c <spss_parse_format+0x790>
   1b854:	add	r1, pc, r1
   1b858:	add	fp, pc, fp
   1b85c:	str	r1, [sp, #4]
   1b860:	add	r1, fp, #1584	; 0x630
   1b864:	add	r1, r1, #8
   1b868:	add	r3, pc, r3
   1b86c:	add	sl, r3, #232	; 0xe8
   1b870:	mov	r9, r3
   1b874:	str	r1, [sp, #8]
   1b878:	b	1b8b0 <spss_parse_format+0xa4>
   1b87c:	cmp	ip, #0
   1b880:	beq	1bc90 <spss_parse_format+0x484>
   1b884:	ldr	r3, [sp]
   1b888:	add	r0, r0, #1
   1b88c:	cmp	r3, r0
   1b890:	beq	1bcb0 <spss_parse_format+0x4a4>
   1b894:	lsl	r3, ip, #1
   1b898:	add	r1, fp, #1376	; 0x560
   1b89c:	add	lr, fp, ip
   1b8a0:	ldrb	r7, [lr, #1808]	; 0x710
   1b8a4:	ldrsh	r5, [r1, r3]
   1b8a8:	ldr	r1, [sp, #8]
   1b8ac:	ldrsh	r8, [r1, r3]
   1b8b0:	cmp	r7, #0
   1b8b4:	add	r5, sl, r5
   1b8b8:	mov	r3, r8
   1b8bc:	bne	1bc28 <spss_parse_format+0x41c>
   1b8c0:	ldr	r1, [sp, #4]
   1b8c4:	add	ip, r1, ip
   1b8c8:	ldrb	r7, [ip, #520]	; 0x208
   1b8cc:	cmp	r7, #0
   1b8d0:	bne	1bbd0 <spss_parse_format+0x3c4>
   1b8d4:	add	r3, r9, r3
   1b8d8:	ldrb	r3, [r3, #628]	; 0x274
   1b8dc:	add	r3, r9, r3
   1b8e0:	ldrb	r1, [r3, #1124]	; 0x464
   1b8e4:	ldrb	ip, [r3, #980]	; 0x3d4
   1b8e8:	cmp	r1, #0
   1b8ec:	beq	1b87c <spss_parse_format+0x70>
   1b8f0:	ldrb	r5, [r9, r1]
   1b8f4:	add	r1, r9, r1
   1b8f8:	mov	r4, #38	; 0x26
   1b8fc:	add	r3, r1, #1
   1b900:	mov	lr, #37	; 0x25
   1b904:	mov	r7, #36	; 0x24
   1b908:	mov	r8, #35	; 0x23
   1b90c:	add	r5, r5, #1
   1b910:	add	r1, r1, r5
   1b914:	cmp	r3, r1
   1b918:	beq	1b87c <spss_parse_format+0x70>
   1b91c:	ldrb	r5, [r3], #1
   1b920:	cmp	r5, #40	; 0x28
   1b924:	addls	pc, pc, r5, lsl #2
   1b928:	b	1b914 <spss_parse_format+0x108>
   1b92c:	b	1bbc4 <spss_parse_format+0x3b8>
   1b930:	b	1bba8 <spss_parse_format+0x39c>
   1b934:	b	1bb9c <spss_parse_format+0x390>
   1b938:	b	1b914 <spss_parse_format+0x108>
   1b93c:	b	1bb90 <spss_parse_format+0x384>
   1b940:	b	1bb84 <spss_parse_format+0x378>
   1b944:	b	1bb78 <spss_parse_format+0x36c>
   1b948:	b	1bb6c <spss_parse_format+0x360>
   1b94c:	b	1bb60 <spss_parse_format+0x354>
   1b950:	b	1bb54 <spss_parse_format+0x348>
   1b954:	b	1bb48 <spss_parse_format+0x33c>
   1b958:	b	1bb3c <spss_parse_format+0x330>
   1b95c:	b	1bb30 <spss_parse_format+0x324>
   1b960:	b	1bb24 <spss_parse_format+0x318>
   1b964:	b	1bb18 <spss_parse_format+0x30c>
   1b968:	b	1bb0c <spss_parse_format+0x300>
   1b96c:	b	1bb00 <spss_parse_format+0x2f4>
   1b970:	b	1baf4 <spss_parse_format+0x2e8>
   1b974:	b	1bae8 <spss_parse_format+0x2dc>
   1b978:	b	1bad8 <spss_parse_format+0x2cc>
   1b97c:	b	1bacc <spss_parse_format+0x2c0>
   1b980:	b	1babc <spss_parse_format+0x2b0>
   1b984:	b	1baac <spss_parse_format+0x2a0>
   1b988:	b	1ba9c <spss_parse_format+0x290>
   1b98c:	b	1ba90 <spss_parse_format+0x284>
   1b990:	b	1ba80 <spss_parse_format+0x274>
   1b994:	b	1ba74 <spss_parse_format+0x268>
   1b998:	b	1ba68 <spss_parse_format+0x25c>
   1b99c:	b	1ba5c <spss_parse_format+0x250>
   1b9a0:	b	1ba50 <spss_parse_format+0x244>
   1b9a4:	b	1ba44 <spss_parse_format+0x238>
   1b9a8:	b	1ba34 <spss_parse_format+0x228>
   1b9ac:	b	1ba28 <spss_parse_format+0x21c>
   1b9b0:	b	1ba1c <spss_parse_format+0x210>
   1b9b4:	b	1ba10 <spss_parse_format+0x204>
   1b9b8:	b	1ba04 <spss_parse_format+0x1f8>
   1b9bc:	b	1b9fc <spss_parse_format+0x1f0>
   1b9c0:	b	1b9f4 <spss_parse_format+0x1e8>
   1b9c4:	b	1b9ec <spss_parse_format+0x1e0>
   1b9c8:	b	1b9e0 <spss_parse_format+0x1d4>
   1b9cc:	b	1b9d0 <spss_parse_format+0x1c4>
   1b9d0:	mov	r5, #39	; 0x27
   1b9d4:	mov	r6, #10
   1b9d8:	stm	r2, {r5, r6}
   1b9dc:	b	1b914 <spss_parse_format+0x108>
   1b9e0:	mov	r5, #10
   1b9e4:	strd	r4, [r2]
   1b9e8:	b	1b914 <spss_parse_format+0x108>
   1b9ec:	str	lr, [r2]
   1b9f0:	b	1b914 <spss_parse_format+0x108>
   1b9f4:	str	r7, [r2]
   1b9f8:	b	1b914 <spss_parse_format+0x108>
   1b9fc:	str	r8, [r2]
   1ba00:	b	1b914 <spss_parse_format+0x108>
   1ba04:	mov	r5, #34	; 0x22
   1ba08:	str	r5, [r2]
   1ba0c:	b	1b914 <spss_parse_format+0x108>
   1ba10:	mov	r5, #33	; 0x21
   1ba14:	str	r5, [r2]
   1ba18:	b	1b914 <spss_parse_format+0x108>
   1ba1c:	mov	r5, #32
   1ba20:	str	r5, [r2]
   1ba24:	b	1b914 <spss_parse_format+0x108>
   1ba28:	mov	r5, #31
   1ba2c:	str	r5, [r2]
   1ba30:	b	1b914 <spss_parse_format+0x108>
   1ba34:	mov	r5, #30
   1ba38:	mov	r6, #10
   1ba3c:	stm	r2, {r5, r6}
   1ba40:	b	1b914 <spss_parse_format+0x108>
   1ba44:	mov	r5, #29
   1ba48:	str	r5, [r2]
   1ba4c:	b	1b914 <spss_parse_format+0x108>
   1ba50:	mov	r5, #28
   1ba54:	str	r5, [r2]
   1ba58:	b	1b914 <spss_parse_format+0x108>
   1ba5c:	mov	r5, #27
   1ba60:	str	r5, [r2]
   1ba64:	b	1b914 <spss_parse_format+0x108>
   1ba68:	mov	r5, #26
   1ba6c:	str	r5, [r2]
   1ba70:	b	1b914 <spss_parse_format+0x108>
   1ba74:	mov	r5, #40	; 0x28
   1ba78:	str	r5, [r2]
   1ba7c:	b	1b914 <spss_parse_format+0x108>
   1ba80:	mov	r5, #25
   1ba84:	mov	r6, #23
   1ba88:	stm	r2, {r5, r6}
   1ba8c:	b	1b914 <spss_parse_format+0x108>
   1ba90:	mov	r5, #24
   1ba94:	str	r5, [r2]
   1ba98:	b	1b914 <spss_parse_format+0x108>
   1ba9c:	mov	r5, #23
   1baa0:	mov	r6, #10
   1baa4:	stm	r2, {r5, r6}
   1baa8:	b	1b914 <spss_parse_format+0x108>
   1baac:	mov	r5, #41	; 0x29
   1bab0:	mov	r6, #19
   1bab4:	stm	r2, {r5, r6}
   1bab8:	b	1b914 <spss_parse_format+0x108>
   1babc:	mov	r5, #22
   1bac0:	mov	r6, #20
   1bac4:	stm	r2, {r5, r6}
   1bac8:	b	1b914 <spss_parse_format+0x108>
   1bacc:	mov	r5, #21
   1bad0:	str	r5, [r2]
   1bad4:	b	1b914 <spss_parse_format+0x108>
   1bad8:	mov	r5, #20
   1badc:	mov	r6, #11
   1bae0:	stm	r2, {r5, r6}
   1bae4:	b	1b914 <spss_parse_format+0x108>
   1bae8:	mov	r5, #17
   1baec:	str	r5, [r2]
   1baf0:	b	1b914 <spss_parse_format+0x108>
   1baf4:	mov	r5, #16
   1baf8:	str	r5, [r2]
   1bafc:	b	1b914 <spss_parse_format+0x108>
   1bb00:	mov	r5, #15
   1bb04:	str	r5, [r2]
   1bb08:	b	1b914 <spss_parse_format+0x108>
   1bb0c:	mov	r5, #12
   1bb10:	str	r5, [r2]
   1bb14:	b	1b914 <spss_parse_format+0x108>
   1bb18:	mov	r5, #11
   1bb1c:	str	r5, [r2]
   1bb20:	b	1b914 <spss_parse_format+0x108>
   1bb24:	mov	r5, #10
   1bb28:	str	r5, [r2]
   1bb2c:	b	1b914 <spss_parse_format+0x108>
   1bb30:	mov	r5, #9
   1bb34:	str	r5, [r2]
   1bb38:	b	1b914 <spss_parse_format+0x108>
   1bb3c:	mov	r5, #8
   1bb40:	str	r5, [r2]
   1bb44:	b	1b914 <spss_parse_format+0x108>
   1bb48:	mov	r5, #7
   1bb4c:	str	r5, [r2]
   1bb50:	b	1b914 <spss_parse_format+0x108>
   1bb54:	mov	r5, #6
   1bb58:	str	r5, [r2]
   1bb5c:	b	1b914 <spss_parse_format+0x108>
   1bb60:	mov	r5, #5
   1bb64:	str	r5, [r2]
   1bb68:	b	1b914 <spss_parse_format+0x108>
   1bb6c:	mov	r5, #4
   1bb70:	str	r5, [r2]
   1bb74:	b	1b914 <spss_parse_format+0x108>
   1bb78:	mov	r5, #3
   1bb7c:	str	r5, [r2]
   1bb80:	b	1b914 <spss_parse_format+0x108>
   1bb84:	mov	r5, #2
   1bb88:	str	r5, [r2]
   1bb8c:	b	1b914 <spss_parse_format+0x108>
   1bb90:	mov	r5, #1
   1bb94:	str	r5, [r2]
   1bb98:	b	1b914 <spss_parse_format+0x108>
   1bb9c:	ldr	r5, [sp, #12]
   1bba0:	str	r5, [r2, #4]
   1bba4:	b	1b914 <spss_parse_format+0x108>
   1bba8:	ldr	r5, [sp, #12]
   1bbac:	ldrb	r6, [r0]
   1bbb0:	add	r5, r5, r5, lsl #2
   1bbb4:	sub	r6, r6, #48	; 0x30
   1bbb8:	add	r5, r6, r5, lsl #1
   1bbbc:	str	r5, [sp, #12]
   1bbc0:	b	1b914 <spss_parse_format+0x108>
   1bbc4:	mov	r5, #0
   1bbc8:	str	r5, [sp, #12]
   1bbcc:	b	1b914 <spss_parse_format+0x108>
   1bbd0:	add	lr, r5, r7, lsl #1
   1bbd4:	sub	lr, lr, #2
   1bbd8:	cmp	r5, lr
   1bbdc:	bhi	1bc20 <spss_parse_format+0x414>
   1bbe0:	ldrb	r6, [r0]
   1bbe4:	mov	ip, r5
   1bbe8:	sub	r1, lr, ip
   1bbec:	asr	r1, r1, #1
   1bbf0:	bic	r1, r1, #1
   1bbf4:	ldrb	r4, [ip, r1]
   1bbf8:	add	r1, ip, r1
   1bbfc:	cmp	r4, r6
   1bc00:	subhi	lr, r1, #2
   1bc04:	bhi	1bc18 <spss_parse_format+0x40c>
   1bc08:	ldrb	r4, [r1, #1]
   1bc0c:	add	ip, r1, #2
   1bc10:	cmp	r4, r6
   1bc14:	bcs	1bc70 <spss_parse_format+0x464>
   1bc18:	cmp	ip, lr
   1bc1c:	bls	1bbe8 <spss_parse_format+0x3dc>
   1bc20:	add	r3, r3, r7
   1bc24:	b	1b8d4 <spss_parse_format+0xc8>
   1bc28:	sub	lr, r7, #1
   1bc2c:	adds	lr, r5, lr
   1bc30:	bcs	1bc64 <spss_parse_format+0x458>
   1bc34:	ldrb	r6, [r0]
   1bc38:	mov	r1, r5
   1bc3c:	sub	r3, lr, r1
   1bc40:	ldrb	r4, [r1, r3, asr #1]
   1bc44:	add	r3, r1, r3, asr #1
   1bc48:	cmp	r6, r4
   1bc4c:	subcc	lr, r3, #1
   1bc50:	bcc	1bc5c <spss_parse_format+0x450>
   1bc54:	bls	1bc7c <spss_parse_format+0x470>
   1bc58:	add	r1, r3, #1
   1bc5c:	cmp	r1, lr
   1bc60:	bls	1bc3c <spss_parse_format+0x430>
   1bc64:	add	r5, r5, r7
   1bc68:	add	r3, r8, r7
   1bc6c:	b	1b8c0 <spss_parse_format+0xb4>
   1bc70:	sub	r1, r1, r5
   1bc74:	add	r3, r3, r1, asr #1
   1bc78:	b	1b8d4 <spss_parse_format+0xc8>
   1bc7c:	sub	r3, r3, r5
   1bc80:	add	r3, r8, r3
   1bc84:	b	1b8d4 <spss_parse_format+0xc8>
   1bc88:	cmp	r0, #0
   1bc8c:	beq	1bc94 <spss_parse_format+0x488>
   1bc90:	mov	r0, #5
   1bc94:	add	sp, sp, #20
   1bc98:	ldrd	r4, [sp]
   1bc9c:	ldrd	r6, [sp, #8]
   1bca0:	ldrd	r8, [sp, #16]
   1bca4:	ldrd	sl, [sp, #24]
   1bca8:	add	sp, sp, #32
   1bcac:	pop	{pc}		; (ldr pc, [sp], #4)
   1bcb0:	ldr	r3, [pc, #744]	; 1bfa0 <spss_parse_format+0x794>
   1bcb4:	cmp	ip, #67	; 0x43
   1bcb8:	movgt	r0, #0
   1bcbc:	movle	r0, #1
   1bcc0:	add	r3, pc, r3
   1bcc4:	add	ip, r3, ip
   1bcc8:	ldrb	ip, [ip, #1268]	; 0x4f4
   1bccc:	add	lr, r3, ip
   1bcd0:	ldrb	r3, [r3, ip]
   1bcd4:	add	r1, r3, #1
   1bcd8:	mov	r8, #39	; 0x27
   1bcdc:	add	r3, lr, #1
   1bce0:	add	r1, lr, r1
   1bce4:	mov	ip, #10
   1bce8:	mov	r7, #38	; 0x26
   1bcec:	mov	r6, #37	; 0x25
   1bcf0:	mov	r5, #36	; 0x24
   1bcf4:	mov	r4, #35	; 0x23
   1bcf8:	mov	lr, #34	; 0x22
   1bcfc:	mov	fp, #33	; 0x21
   1bd00:	cmp	r3, r1
   1bd04:	beq	1bc88 <spss_parse_format+0x47c>
   1bd08:	ldrb	r9, [r3], #1
   1bd0c:	sub	r9, r9, #2
   1bd10:	cmp	r9, #38	; 0x26
   1bd14:	addls	pc, pc, r9, lsl #2
   1bd18:	b	1bd00 <spss_parse_format+0x4f4>
   1bd1c:	b	1bdd8 <spss_parse_format+0x5cc>
   1bd20:	b	1bde4 <spss_parse_format+0x5d8>
   1bd24:	b	1bdf0 <spss_parse_format+0x5e4>
   1bd28:	b	1bdfc <spss_parse_format+0x5f0>
   1bd2c:	b	1be08 <spss_parse_format+0x5fc>
   1bd30:	b	1be14 <spss_parse_format+0x608>
   1bd34:	b	1be20 <spss_parse_format+0x614>
   1bd38:	b	1be2c <spss_parse_format+0x620>
   1bd3c:	b	1be38 <spss_parse_format+0x62c>
   1bd40:	b	1be44 <spss_parse_format+0x638>
   1bd44:	b	1be50 <spss_parse_format+0x644>
   1bd48:	b	1be5c <spss_parse_format+0x650>
   1bd4c:	b	1be64 <spss_parse_format+0x658>
   1bd50:	b	1be70 <spss_parse_format+0x664>
   1bd54:	b	1be7c <spss_parse_format+0x670>
   1bd58:	b	1be88 <spss_parse_format+0x67c>
   1bd5c:	b	1be94 <spss_parse_format+0x688>
   1bd60:	b	1bea0 <spss_parse_format+0x694>
   1bd64:	b	1beb0 <spss_parse_format+0x6a4>
   1bd68:	b	1bebc <spss_parse_format+0x6b0>
   1bd6c:	b	1becc <spss_parse_format+0x6c0>
   1bd70:	b	1bedc <spss_parse_format+0x6d0>
   1bd74:	b	1bee8 <spss_parse_format+0x6dc>
   1bd78:	b	1bef4 <spss_parse_format+0x6e8>
   1bd7c:	b	1bf04 <spss_parse_format+0x6f8>
   1bd80:	b	1bf10 <spss_parse_format+0x704>
   1bd84:	b	1bf1c <spss_parse_format+0x710>
   1bd88:	b	1bf28 <spss_parse_format+0x71c>
   1bd8c:	b	1bf34 <spss_parse_format+0x728>
   1bd90:	b	1bf40 <spss_parse_format+0x734>
   1bd94:	b	1bf4c <spss_parse_format+0x740>
   1bd98:	b	1bf58 <spss_parse_format+0x74c>
   1bd9c:	b	1bf64 <spss_parse_format+0x758>
   1bda0:	b	1bf6c <spss_parse_format+0x760>
   1bda4:	b	1bf74 <spss_parse_format+0x768>
   1bda8:	b	1bf7c <spss_parse_format+0x770>
   1bdac:	b	1bf84 <spss_parse_format+0x778>
   1bdb0:	b	1bf8c <spss_parse_format+0x780>
   1bdb4:	b	1bdd0 <spss_parse_format+0x5c4>
   1bdb8:	ldr	lr, [pc, #484]	; 1bfa4 <spss_parse_format+0x798>
   1bdbc:	mov	r3, #0
   1bdc0:	mov	r0, #1
   1bdc4:	str	r3, [sp, #12]
   1bdc8:	add	lr, pc, lr
   1bdcc:	b	1bcd4 <spss_parse_format+0x4c8>
   1bdd0:	stm	r2, {r8, ip}
   1bdd4:	b	1bd00 <spss_parse_format+0x4f4>
   1bdd8:	ldr	r9, [sp, #12]
   1bddc:	str	r9, [r2, #4]
   1bde0:	b	1bd00 <spss_parse_format+0x4f4>
   1bde4:	ldr	r9, [sp, #12]
   1bde8:	str	r9, [r2, #8]
   1bdec:	b	1bd00 <spss_parse_format+0x4f4>
   1bdf0:	mov	r9, #1
   1bdf4:	str	r9, [r2]
   1bdf8:	b	1bd00 <spss_parse_format+0x4f4>
   1bdfc:	mov	r9, #2
   1be00:	str	r9, [r2]
   1be04:	b	1bd00 <spss_parse_format+0x4f4>
   1be08:	mov	r9, #3
   1be0c:	str	r9, [r2]
   1be10:	b	1bd00 <spss_parse_format+0x4f4>
   1be14:	mov	r9, #4
   1be18:	str	r9, [r2]
   1be1c:	b	1bd00 <spss_parse_format+0x4f4>
   1be20:	mov	r9, #5
   1be24:	str	r9, [r2]
   1be28:	b	1bd00 <spss_parse_format+0x4f4>
   1be2c:	mov	r9, #6
   1be30:	str	r9, [r2]
   1be34:	b	1bd00 <spss_parse_format+0x4f4>
   1be38:	mov	r9, #7
   1be3c:	str	r9, [r2]
   1be40:	b	1bd00 <spss_parse_format+0x4f4>
   1be44:	mov	r9, #8
   1be48:	str	r9, [r2]
   1be4c:	b	1bd00 <spss_parse_format+0x4f4>
   1be50:	mov	r9, #9
   1be54:	str	r9, [r2]
   1be58:	b	1bd00 <spss_parse_format+0x4f4>
   1be5c:	str	ip, [r2]
   1be60:	b	1bd00 <spss_parse_format+0x4f4>
   1be64:	mov	r9, #11
   1be68:	str	r9, [r2]
   1be6c:	b	1bd00 <spss_parse_format+0x4f4>
   1be70:	mov	r9, #12
   1be74:	str	r9, [r2]
   1be78:	b	1bd00 <spss_parse_format+0x4f4>
   1be7c:	mov	r9, #15
   1be80:	str	r9, [r2]
   1be84:	b	1bd00 <spss_parse_format+0x4f4>
   1be88:	mov	r9, #16
   1be8c:	str	r9, [r2]
   1be90:	b	1bd00 <spss_parse_format+0x4f4>
   1be94:	mov	r9, #17
   1be98:	str	r9, [r2]
   1be9c:	b	1bd00 <spss_parse_format+0x4f4>
   1bea0:	mov	r9, #20
   1bea4:	mov	sl, #11
   1bea8:	stm	r2, {r9, sl}
   1beac:	b	1bd00 <spss_parse_format+0x4f4>
   1beb0:	mov	r9, #21
   1beb4:	str	r9, [r2]
   1beb8:	b	1bd00 <spss_parse_format+0x4f4>
   1bebc:	mov	r9, #22
   1bec0:	mov	sl, #20
   1bec4:	stm	r2, {r9, sl}
   1bec8:	b	1bd00 <spss_parse_format+0x4f4>
   1becc:	mov	r9, #41	; 0x29
   1bed0:	mov	sl, #19
   1bed4:	stm	r2, {r9, sl}
   1bed8:	b	1bd00 <spss_parse_format+0x4f4>
   1bedc:	mov	r9, #23
   1bee0:	stm	r2, {r9, ip}
   1bee4:	b	1bd00 <spss_parse_format+0x4f4>
   1bee8:	mov	r9, #24
   1beec:	str	r9, [r2]
   1bef0:	b	1bd00 <spss_parse_format+0x4f4>
   1bef4:	mov	r9, #25
   1bef8:	mov	sl, #23
   1befc:	stm	r2, {r9, sl}
   1bf00:	b	1bd00 <spss_parse_format+0x4f4>
   1bf04:	mov	r9, #40	; 0x28
   1bf08:	str	r9, [r2]
   1bf0c:	b	1bd00 <spss_parse_format+0x4f4>
   1bf10:	mov	r9, #26
   1bf14:	str	r9, [r2]
   1bf18:	b	1bd00 <spss_parse_format+0x4f4>
   1bf1c:	mov	r9, #27
   1bf20:	str	r9, [r2]
   1bf24:	b	1bd00 <spss_parse_format+0x4f4>
   1bf28:	mov	r9, #28
   1bf2c:	str	r9, [r2]
   1bf30:	b	1bd00 <spss_parse_format+0x4f4>
   1bf34:	mov	r9, #29
   1bf38:	str	r9, [r2]
   1bf3c:	b	1bd00 <spss_parse_format+0x4f4>
   1bf40:	mov	r9, #30
   1bf44:	stm	r2, {r9, ip}
   1bf48:	b	1bd00 <spss_parse_format+0x4f4>
   1bf4c:	mov	r9, #31
   1bf50:	str	r9, [r2]
   1bf54:	b	1bd00 <spss_parse_format+0x4f4>
   1bf58:	mov	r9, #32
   1bf5c:	str	r9, [r2]
   1bf60:	b	1bd00 <spss_parse_format+0x4f4>
   1bf64:	str	fp, [r2]
   1bf68:	b	1bd00 <spss_parse_format+0x4f4>
   1bf6c:	str	lr, [r2]
   1bf70:	b	1bd00 <spss_parse_format+0x4f4>
   1bf74:	str	r4, [r2]
   1bf78:	b	1bd00 <spss_parse_format+0x4f4>
   1bf7c:	str	r5, [r2]
   1bf80:	b	1bd00 <spss_parse_format+0x4f4>
   1bf84:	str	r6, [r2]
   1bf88:	b	1bd00 <spss_parse_format+0x4f4>
   1bf8c:	stm	r2, {r7, ip}
   1bf90:	b	1bd00 <spss_parse_format+0x4f4>
   1bf94:	.word	0x0000b9b4
   1bf98:	.word	0x0000b9b0
   1bf9c:	.word	0x0000b9a0
   1bfa0:	.word	0x0000b548
   1bfa4:	.word	0x0000b440

0001bfa8 <dta_ctx_alloc>:
   1bfa8:	mov	r1, #544	; 0x220
   1bfac:	str	r4, [sp, #-8]!
   1bfb0:	mov	r4, r0
   1bfb4:	mov	r0, #1
   1bfb8:	str	lr, [sp, #4]
   1bfbc:	bl	3d2c <calloc@plt>
   1bfc0:	cmp	r0, #0
   1bfc4:	beq	1bfd4 <dta_ctx_alloc+0x2c>
   1bfc8:	mov	r3, #0
   1bfcc:	str	r4, [r0, #280]	; 0x118
   1bfd0:	str	r3, [r0, #284]	; 0x11c
   1bfd4:	ldr	r4, [sp]
   1bfd8:	add	sp, sp, #4
   1bfdc:	pop	{pc}		; (ldr pc, [sp], #4)

0001bfe0 <dta_ctx_init>:
   1bfe0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bfe4:	ldrb	r5, [sp, #36]	; 0x24
   1bfe8:	strd	r6, [sp, #8]
   1bfec:	strd	r8, [sp, #16]
   1bff0:	mov	r9, r3
   1bff4:	ldrb	r7, [sp, #32]
   1bff8:	str	sl, [sp, #24]
   1bffc:	sub	r3, r5, #104	; 0x68
   1c000:	str	lr, [sp, #28]
   1c004:	cmp	r3, #15
   1c008:	movhi	r0, #24
   1c00c:	bhi	1c17c <dta_ctx_init+0x19c>
   1c010:	mov	r4, r0
   1c014:	mov	r6, r1
   1c018:	mov	r8, r2
   1c01c:	bl	3e88 <machine_is_little_endian@plt>
   1c020:	ldrb	r2, [r4, #192]	; 0xc0
   1c024:	cmp	r0, #0
   1c028:	moveq	r3, #1
   1c02c:	movne	r3, #2
   1c030:	str	r5, [r4, #144]	; 0x90
   1c034:	subs	r3, r7, r3
   1c038:	str	r6, [r4, #148]	; 0x94
   1c03c:	movne	r3, #1
   1c040:	cmp	r7, #2
   1c044:	strd	r8, [r4, #152]	; 0x98
   1c048:	moveq	r1, #1
   1c04c:	movne	r1, #2
   1c050:	bfi	r2, r3, #0, #1
   1c054:	cmp	r6, #0
   1c058:	strb	r2, [r4, #192]	; 0xc0
   1c05c:	str	r1, [r4, #232]	; 0xe8
   1c060:	bne	1c2a4 <dta_ctx_init+0x2c4>
   1c064:	ldrb	r3, [r4, #192]	; 0xc0
   1c068:	cmp	r5, #104	; 0x68
   1c06c:	bfc	r3, #1, #1
   1c070:	strb	r3, [r4, #192]	; 0xc0
   1c074:	bne	1c194 <dta_ctx_init+0x1b4>
   1c078:	mov	r3, #7
   1c07c:	str	r3, [r4, #80]	; 0x50
   1c080:	mov	r3, #0
   1c084:	cmp	r5, #104	; 0x68
   1c088:	strb	r3, [r4, #20]
   1c08c:	bne	1c3a8 <dta_ctx_init+0x3c8>
   1c090:	ldrb	r1, [r4, #192]	; 0xc0
   1c094:	mov	ip, #32
   1c098:	mov	r2, #9
   1c09c:	mov	r0, #2
   1c0a0:	mov	lr, #12
   1c0a4:	str	ip, [r4, #4]
   1c0a8:	str	r3, [r4, #16]
   1c0ac:	str	ip, [r4, #88]	; 0x58
   1c0b0:	mov	ip, #1
   1c0b4:	bfi	r1, r3, #2, #1
   1c0b8:	str	ip, [r4, #24]
   1c0bc:	str	r2, [r4, #76]	; 0x4c
   1c0c0:	str	r2, [r4, #84]	; 0x54
   1c0c4:	str	r3, [r4, #92]	; 0x5c
   1c0c8:	str	r2, [r4, #96]	; 0x60
   1c0cc:	str	r0, [r4, #100]	; 0x64
   1c0d0:	str	lr, [r4, #104]	; 0x68
   1c0d4:	str	r0, [r4, #108]	; 0x6c
   1c0d8:	strb	r1, [r4, #192]	; 0xc0
   1c0dc:	ldr	r2, [sp, #44]	; 0x2c
   1c0e0:	mov	r3, #126	; 0x7e
   1c0e4:	movw	ip, #32766	; 0x7ffe
   1c0e8:	mvn	r0, #-2147483647	; 0x80000001
   1c0ec:	mvn	r1, #-2130706432	; 0x81000000
   1c0f0:	strb	r3, [r4, #193]	; 0xc1
   1c0f4:	movw	r3, #65535	; 0xffff
   1c0f8:	movt	r3, #32735	; 0x7fdf
   1c0fc:	strh	ip, [r4, #194]	; 0xc2
   1c100:	strd	r0, [r4, #196]	; 0xc4
   1c104:	cmp	r2, #0
   1c108:	mvn	r2, #0
   1c10c:	strd	r2, [r4, #208]	; 0xd0
   1c110:	beq	1c2e0 <dta_ctx_init+0x300>
   1c114:	ldr	r3, [sp, #40]	; 0x28
   1c118:	cmp	r3, #0
   1c11c:	beq	1c2c4 <dta_ctx_init+0x2e4>
   1c120:	ldr	r1, [sp, #40]	; 0x28
   1c124:	ldr	r0, [sp, #44]	; 0x2c
   1c128:	bl	4104 <iconv_open@plt>
   1c12c:	str	r0, [r4, #236]	; 0xec
   1c130:	cmn	r0, #1
   1c134:	beq	1c474 <dta_ctx_init+0x494>
   1c138:	ldr	r3, [r4, #148]	; 0x94
   1c13c:	cmp	r5, #119	; 0x77
   1c140:	add	r3, r3, #1
   1c144:	lsleq	r3, r3, #2
   1c148:	bne	1c2e8 <dta_ctx_init+0x308>
   1c14c:	mov	r0, r3
   1c150:	str	r3, [r4, #48]	; 0x30
   1c154:	bl	4200 <readstat_malloc@plt>
   1c158:	cmp	r0, #0
   1c15c:	str	r0, [r4, #44]	; 0x2c
   1c160:	beq	1c2bc <dta_ctx_init+0x2dc>
   1c164:	ldr	r3, [r4, #148]	; 0x94
   1c168:	cmp	r3, #0
   1c16c:	bgt	1c2f0 <dta_ctx_init+0x310>
   1c170:	mov	r3, #1
   1c174:	mov	r0, #0
   1c178:	str	r3, [r4, #284]	; 0x11c
   1c17c:	ldrd	r4, [sp]
   1c180:	ldrd	r6, [sp, #8]
   1c184:	ldrd	r8, [sp, #16]
   1c188:	ldr	sl, [sp, #24]
   1c18c:	add	sp, sp, #28
   1c190:	pop	{pc}		; (ldr pc, [sp], #4)
   1c194:	cmp	r5, #113	; 0x71
   1c198:	bls	1c390 <dta_ctx_init+0x3b0>
   1c19c:	cmp	r5, #117	; 0x75
   1c1a0:	bhi	1c414 <dta_ctx_init+0x434>
   1c1a4:	mov	r3, #49	; 0x31
   1c1a8:	str	r3, [r4, #80]	; 0x50
   1c1ac:	bne	1c3a0 <dta_ctx_init+0x3c0>
   1c1b0:	mov	r3, #4
   1c1b4:	mov	r2, #1
   1c1b8:	str	r2, [r4, #8]
   1c1bc:	strb	r5, [r4, #20]
   1c1c0:	str	r3, [r4, #92]	; 0x5c
   1c1c4:	str	r3, [r4, #112]	; 0x70
   1c1c8:	str	r3, [r4, #116]	; 0x74
   1c1cc:	mov	r3, #33	; 0x21
   1c1d0:	str	r3, [r4, #76]	; 0x4c
   1c1d4:	str	r3, [r4, #84]	; 0x54
   1c1d8:	str	r3, [r4, #96]	; 0x60
   1c1dc:	cmp	r5, #117	; 0x75
   1c1e0:	mov	r3, #81	; 0x51
   1c1e4:	mov	r0, #18
   1c1e8:	mov	r1, #4
   1c1ec:	movhi	r2, #129	; 0x81
   1c1f0:	movls	r2, #33	; 0x21
   1c1f4:	str	r3, [r4, #4]
   1c1f8:	str	r0, [r4, #16]
   1c1fc:	str	r3, [r4, #88]	; 0x58
   1c200:	str	r1, [r4, #100]	; 0x64
   1c204:	mov	r3, #3
   1c208:	cmp	r5, #116	; 0x74
   1c20c:	strd	r2, [r4, #104]	; 0x68
   1c210:	bls	1c3f4 <dta_ctx_init+0x414>
   1c214:	ldrb	r3, [r4, #192]	; 0xc0
   1c218:	mov	r2, #2
   1c21c:	str	r2, [r4, #24]
   1c220:	orr	r3, r3, #4
   1c224:	strb	r3, [r4, #192]	; 0xc0
   1c228:	ldr	r2, [r4, #192]	; 0xc0
   1c22c:	movw	r3, #25608	; 0x6408
   1c230:	movt	r3, #32740	; 0x7fe4
   1c234:	mvn	lr, #-2147483621	; 0x8000001b
   1c238:	mvn	ip, #-2130706432	; 0x81000000
   1c23c:	ldr	r1, [sp, #44]	; 0x2c
   1c240:	mvn	r0, #0
   1c244:	str	lr, [r4, #196]	; 0xc4
   1c248:	str	ip, [r4, #200]	; 0xc8
   1c24c:	and	r2, r2, #247	; 0xf7
   1c250:	orr	r3, r2, r3
   1c254:	cmp	r1, #0
   1c258:	movw	r1, #65535	; 0xffff
   1c25c:	movt	r1, #32735	; 0x7fdf
   1c260:	str	r3, [r4, #192]	; 0xc0
   1c264:	strd	r0, [r4, #208]	; 0xd0
   1c268:	beq	1c138 <dta_ctx_init+0x158>
   1c26c:	ldr	r3, [sp, #40]	; 0x28
   1c270:	cmp	r3, #0
   1c274:	bne	1c120 <dta_ctx_init+0x140>
   1c278:	cmp	r5, #117	; 0x75
   1c27c:	bls	1c2c4 <dta_ctx_init+0x2e4>
   1c280:	ldr	r6, [pc, #548]	; 1c4ac <dta_ctx_init+0x4cc>
   1c284:	ldr	r0, [sp, #44]	; 0x2c
   1c288:	add	r6, pc, r6
   1c28c:	mov	r1, r6
   1c290:	bl	3dd4 <strcmp@plt>
   1c294:	cmp	r0, #0
   1c298:	bne	1c484 <dta_ctx_init+0x4a4>
   1c29c:	ldr	r0, [r4, #236]	; 0xec
   1c2a0:	b	1c130 <dta_ctx_init+0x150>
   1c2a4:	mov	r0, r6
   1c2a8:	mov	r1, #4
   1c2ac:	bl	3f9c <readstat_calloc@plt>
   1c2b0:	cmp	r0, #0
   1c2b4:	str	r0, [r4, #228]	; 0xe4
   1c2b8:	bne	1c064 <dta_ctx_init+0x84>
   1c2bc:	mov	r0, #3
   1c2c0:	b	1c17c <dta_ctx_init+0x19c>
   1c2c4:	ldr	r1, [pc, #484]	; 1c4b0 <dta_ctx_init+0x4d0>
   1c2c8:	ldr	r0, [sp, #44]	; 0x2c
   1c2cc:	add	r1, pc, r1
   1c2d0:	bl	4104 <iconv_open@plt>
   1c2d4:	cmn	r0, #1
   1c2d8:	str	r0, [r4, #236]	; 0xec
   1c2dc:	beq	1c474 <dta_ctx_init+0x494>
   1c2e0:	ldr	r3, [r4, #148]	; 0x94
   1c2e4:	add	r3, r3, #1
   1c2e8:	lsl	r3, r3, #1
   1c2ec:	b	1c14c <dta_ctx_init+0x16c>
   1c2f0:	lsl	r2, r3, #1
   1c2f4:	ldr	ip, [r4, #76]	; 0x4c
   1c2f8:	mov	r0, r2
   1c2fc:	ldr	r1, [r4, #80]	; 0x50
   1c300:	str	r2, [r4, #32]
   1c304:	ldr	r2, [r4, #84]	; 0x54
   1c308:	mul	ip, r3, ip
   1c30c:	ldr	lr, [r4, #88]	; 0x58
   1c310:	mul	r1, r3, r1
   1c314:	str	ip, [r4, #40]	; 0x28
   1c318:	mul	r2, r3, r2
   1c31c:	str	r1, [r4, #56]	; 0x38
   1c320:	mul	r3, r3, lr
   1c324:	str	r2, [r4, #64]	; 0x40
   1c328:	str	r3, [r4, #72]	; 0x48
   1c32c:	bl	4200 <readstat_malloc@plt>
   1c330:	cmp	r0, #0
   1c334:	str	r0, [r4, #28]
   1c338:	beq	1c2bc <dta_ctx_init+0x2dc>
   1c33c:	ldr	r0, [r4, #40]	; 0x28
   1c340:	bl	4200 <readstat_malloc@plt>
   1c344:	cmp	r0, #0
   1c348:	str	r0, [r4, #36]	; 0x24
   1c34c:	beq	1c2bc <dta_ctx_init+0x2dc>
   1c350:	ldr	r0, [r4, #56]	; 0x38
   1c354:	bl	4200 <readstat_malloc@plt>
   1c358:	cmp	r0, #0
   1c35c:	str	r0, [r4, #52]	; 0x34
   1c360:	beq	1c2bc <dta_ctx_init+0x2dc>
   1c364:	ldr	r0, [r4, #64]	; 0x40
   1c368:	bl	4200 <readstat_malloc@plt>
   1c36c:	cmp	r0, #0
   1c370:	str	r0, [r4, #60]	; 0x3c
   1c374:	beq	1c2bc <dta_ctx_init+0x2dc>
   1c378:	ldr	r0, [r4, #72]	; 0x48
   1c37c:	bl	4200 <readstat_malloc@plt>
   1c380:	cmp	r0, #0
   1c384:	str	r0, [r4, #68]	; 0x44
   1c388:	bne	1c170 <dta_ctx_init+0x190>
   1c38c:	b	1c2bc <dta_ctx_init+0x2dc>
   1c390:	mov	r3, #12
   1c394:	cmp	r5, #110	; 0x6e
   1c398:	str	r3, [r4, #80]	; 0x50
   1c39c:	bls	1c080 <dta_ctx_init+0xa0>
   1c3a0:	mov	r3, #111	; 0x6f
   1c3a4:	strb	r3, [r4, #20]
   1c3a8:	cmp	r5, #109	; 0x6d
   1c3ac:	bhi	1c498 <dta_ctx_init+0x4b8>
   1c3b0:	mov	r3, #9
   1c3b4:	mov	r2, #2
   1c3b8:	cmp	r5, #107	; 0x6b
   1c3bc:	str	r3, [r4, #76]	; 0x4c
   1c3c0:	str	r3, [r4, #84]	; 0x54
   1c3c4:	strd	r2, [r4, #92]	; 0x5c
   1c3c8:	bhi	1c1dc <dta_ctx_init+0x1fc>
   1c3cc:	mov	r3, #32
   1c3d0:	mov	ip, #18
   1c3d4:	mov	r0, #4
   1c3d8:	mov	r1, #33	; 0x21
   1c3dc:	mov	r2, #3
   1c3e0:	str	r3, [r4, #4]
   1c3e4:	str	ip, [r4, #16]
   1c3e8:	str	r3, [r4, #88]	; 0x58
   1c3ec:	strd	r0, [r4, #100]	; 0x64
   1c3f0:	str	r2, [r4, #108]	; 0x6c
   1c3f4:	ldrb	r3, [r4, #192]	; 0xc0
   1c3f8:	mov	r2, #1
   1c3fc:	cmp	r5, #112	; 0x70
   1c400:	str	r2, [r4, #24]
   1c404:	bfc	r3, #2, #1
   1c408:	strb	r3, [r4, #192]	; 0xc0
   1c40c:	bls	1c0dc <dta_ctx_init+0xfc>
   1c410:	b	1c228 <dta_ctx_init+0x248>
   1c414:	mov	r1, #117	; 0x75
   1c418:	mov	r3, #2
   1c41c:	mov	r0, #57	; 0x39
   1c420:	mov	r2, #6
   1c424:	str	r3, [r4, #8]
   1c428:	strb	r1, [r4, #20]
   1c42c:	mov	r1, #4
   1c430:	str	r0, [r4, #80]	; 0x50
   1c434:	str	r1, [r4, #92]	; 0x5c
   1c438:	str	r3, [r4, #112]	; 0x70
   1c43c:	str	r2, [r4, #116]	; 0x74
   1c440:	mov	r3, #129	; 0x81
   1c444:	movw	r1, #321	; 0x141
   1c448:	mov	r2, #18
   1c44c:	mov	r0, #4
   1c450:	str	r1, [r4, #4]
   1c454:	str	r2, [r4, #16]
   1c458:	mov	r2, r3
   1c45c:	str	r3, [r4, #76]	; 0x4c
   1c460:	str	r3, [r4, #84]	; 0x54
   1c464:	str	r1, [r4, #88]	; 0x58
   1c468:	str	r3, [r4, #96]	; 0x60
   1c46c:	str	r0, [r4, #100]	; 0x64
   1c470:	b	1c204 <dta_ctx_init+0x224>
   1c474:	mov	r3, #0
   1c478:	mov	r0, #7
   1c47c:	str	r3, [r4, #236]	; 0xec
   1c480:	b	1c17c <dta_ctx_init+0x19c>
   1c484:	mov	r1, r6
   1c488:	ldr	r0, [sp, #44]	; 0x2c
   1c48c:	bl	4104 <iconv_open@plt>
   1c490:	str	r0, [r4, #236]	; 0xec
   1c494:	b	1c130 <dta_ctx_init+0x150>
   1c498:	mov	r3, #4
   1c49c:	cmp	r5, #117	; 0x75
   1c4a0:	str	r3, [r4, #92]	; 0x5c
   1c4a4:	bls	1c1cc <dta_ctx_init+0x1ec>
   1c4a8:	b	1c440 <dta_ctx_init+0x460>
   1c4ac:	.word	0x00009a00
   1c4b0:	.word	0x0000b764

0001c4b4 <dta_ctx_free>:
   1c4b4:	strd	r4, [sp, #-16]!
   1c4b8:	mov	r4, r0
   1c4bc:	ldr	r0, [r0, #28]
   1c4c0:	str	r6, [sp, #8]
   1c4c4:	str	lr, [sp, #12]
   1c4c8:	cmp	r0, #0
   1c4cc:	beq	1c4d4 <dta_ctx_free+0x20>
   1c4d0:	bl	3e94 <free@plt>
   1c4d4:	ldr	r0, [r4, #36]	; 0x24
   1c4d8:	cmp	r0, #0
   1c4dc:	beq	1c4e4 <dta_ctx_free+0x30>
   1c4e0:	bl	3e94 <free@plt>
   1c4e4:	ldr	r0, [r4, #44]	; 0x2c
   1c4e8:	cmp	r0, #0
   1c4ec:	beq	1c4f4 <dta_ctx_free+0x40>
   1c4f0:	bl	3e94 <free@plt>
   1c4f4:	ldr	r0, [r4, #52]	; 0x34
   1c4f8:	cmp	r0, #0
   1c4fc:	beq	1c504 <dta_ctx_free+0x50>
   1c500:	bl	3e94 <free@plt>
   1c504:	ldr	r0, [r4, #60]	; 0x3c
   1c508:	cmp	r0, #0
   1c50c:	beq	1c514 <dta_ctx_free+0x60>
   1c510:	bl	3e94 <free@plt>
   1c514:	ldr	r0, [r4, #68]	; 0x44
   1c518:	cmp	r0, #0
   1c51c:	beq	1c524 <dta_ctx_free+0x70>
   1c520:	bl	3e94 <free@plt>
   1c524:	ldr	r0, [r4, #236]	; 0xec
   1c528:	cmp	r0, #0
   1c52c:	beq	1c534 <dta_ctx_free+0x80>
   1c530:	bl	3da4 <iconv_close@plt>
   1c534:	ldr	r0, [r4]
   1c538:	cmp	r0, #0
   1c53c:	beq	1c544 <dta_ctx_free+0x90>
   1c540:	bl	3e94 <free@plt>
   1c544:	ldr	r2, [r4, #228]	; 0xe4
   1c548:	cmp	r2, #0
   1c54c:	beq	1c58c <dta_ctx_free+0xd8>
   1c550:	ldr	r1, [r4, #148]	; 0x94
   1c554:	cmp	r1, #0
   1c558:	ble	1c584 <dta_ctx_free+0xd0>
   1c55c:	mov	r5, #0
   1c560:	ldr	r3, [r2, r5, lsl #2]
   1c564:	add	r5, r5, #1
   1c568:	subs	r0, r3, #0
   1c56c:	beq	1c57c <dta_ctx_free+0xc8>
   1c570:	bl	3e94 <free@plt>
   1c574:	ldr	r1, [r4, #148]	; 0x94
   1c578:	ldr	r2, [r4, #228]	; 0xe4
   1c57c:	cmp	r1, r5
   1c580:	bgt	1c560 <dta_ctx_free+0xac>
   1c584:	mov	r0, r2
   1c588:	bl	3e94 <free@plt>
   1c58c:	ldr	r0, [r4, #216]	; 0xd8
   1c590:	cmp	r0, #0
   1c594:	beq	1c5c8 <dta_ctx_free+0x114>
   1c598:	ldr	r3, [r4, #220]	; 0xdc
   1c59c:	cmp	r3, #0
   1c5a0:	beq	1c5c4 <dta_ctx_free+0x110>
   1c5a4:	mov	r5, #0
   1c5a8:	ldr	r0, [r0, r5, lsl #2]
   1c5ac:	add	r5, r5, #1
   1c5b0:	bl	3e94 <free@plt>
   1c5b4:	ldr	r0, [r4, #216]	; 0xd8
   1c5b8:	ldr	r3, [r4, #220]	; 0xdc
   1c5bc:	cmp	r3, r5
   1c5c0:	bhi	1c5a8 <dta_ctx_free+0xf4>
   1c5c4:	bl	3e94 <free@plt>
   1c5c8:	mov	r0, r4
   1c5cc:	ldrd	r4, [sp]
   1c5d0:	ldr	r6, [sp, #8]
   1c5d4:	ldr	lr, [sp, #12]
   1c5d8:	add	sp, sp, #16
   1c5dc:	b	3e94 <free@plt>

0001c5e0 <dta_type_info>:
   1c5e0:	ldrb	r1, [r1, #20]
   1c5e4:	cmp	r1, #111	; 0x6f
   1c5e8:	beq	1c698 <dta_type_info+0xb8>
   1c5ec:	cmp	r1, #117	; 0x75
   1c5f0:	beq	1c62c <dta_type_info+0x4c>
   1c5f4:	cmp	r0, #126	; 0x7e
   1c5f8:	bhi	1c6d8 <dta_type_info+0xf8>
   1c5fc:	sub	r0, r0, #98	; 0x62
   1c600:	uxth	r0, r0
   1c604:	cmp	r0, #10
   1c608:	bls	1c6e8 <dta_type_info+0x108>
   1c60c:	mov	ip, #0
   1c610:	mov	r0, #5
   1c614:	mov	r1, ip
   1c618:	cmp	r2, #0
   1c61c:	strne	r1, [r2]
   1c620:	cmp	r3, #0
   1c624:	strne	ip, [r3]
   1c628:	bx	lr
   1c62c:	movw	r1, #65527	; 0xfff7
   1c630:	cmp	r0, r1
   1c634:	beq	1c734 <dta_type_info+0x154>
   1c638:	bls	1c674 <dta_type_info+0x94>
   1c63c:	movw	r1, #65529	; 0xfff9
   1c640:	cmp	r0, r1
   1c644:	beq	1c724 <dta_type_info+0x144>
   1c648:	bcc	1c714 <dta_type_info+0x134>
   1c64c:	movw	r1, #65530	; 0xfffa
   1c650:	cmp	r0, r1
   1c654:	moveq	ip, #1
   1c658:	moveq	r0, #0
   1c65c:	moveq	r1, ip
   1c660:	beq	1c618 <dta_type_info+0x38>
   1c664:	mov	ip, #0
   1c668:	mov	r1, r0
   1c66c:	mov	r0, ip
   1c670:	b	1c618 <dta_type_info+0x38>
   1c674:	cmp	r0, #32768	; 0x8000
   1c678:	beq	1c704 <dta_type_info+0x124>
   1c67c:	movw	r1, #65526	; 0xfff6
   1c680:	cmp	r0, r1
   1c684:	moveq	ip, #5
   1c688:	moveq	r1, #8
   1c68c:	moveq	r0, #0
   1c690:	beq	1c618 <dta_type_info+0x38>
   1c694:	b	1c664 <dta_type_info+0x84>
   1c698:	sub	r1, r0, #251	; 0xfb
   1c69c:	uxth	r1, r1
   1c6a0:	cmp	r1, #4
   1c6a4:	bhi	1c664 <dta_type_info+0x84>
   1c6a8:	ldr	ip, [pc, #148]	; 1c744 <dta_type_info+0x164>
   1c6ac:	cmp	r2, #0
   1c6b0:	mov	r0, #0
   1c6b4:	push	{lr}		; (str lr, [sp, #-4]!)
   1c6b8:	add	ip, pc, ip
   1c6bc:	add	lr, ip, r1, lsl #2
   1c6c0:	ldr	r1, [ip, r1, lsl #2]
   1c6c4:	ldr	ip, [lr, #20]
   1c6c8:	strne	r1, [r2]
   1c6cc:	cmp	r3, #0
   1c6d0:	strne	ip, [r3]
   1c6d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c6d8:	mov	ip, #0
   1c6dc:	sub	r1, r0, #127	; 0x7f
   1c6e0:	mov	r0, ip
   1c6e4:	b	1c618 <dta_type_info+0x38>
   1c6e8:	ldr	ip, [pc, #88]	; 1c748 <dta_type_info+0x168>
   1c6ec:	add	ip, pc, ip
   1c6f0:	add	ip, ip, r0, lsl #2
   1c6f4:	ldr	r0, [ip, #40]	; 0x28
   1c6f8:	ldr	r1, [ip, #84]	; 0x54
   1c6fc:	ldr	ip, [ip, #128]	; 0x80
   1c700:	b	1c618 <dta_type_info+0x38>
   1c704:	mov	ip, #6
   1c708:	mov	r1, #8
   1c70c:	mov	r0, #0
   1c710:	b	1c618 <dta_type_info+0x38>
   1c714:	mov	ip, #3
   1c718:	mov	r1, #4
   1c71c:	mov	r0, #0
   1c720:	b	1c618 <dta_type_info+0x38>
   1c724:	mov	ip, #2
   1c728:	mov	r0, #0
   1c72c:	mov	r1, ip
   1c730:	b	1c618 <dta_type_info+0x38>
   1c734:	mov	ip, #4
   1c738:	mov	r0, #0
   1c73c:	mov	r1, ip
   1c740:	b	1c618 <dta_type_info+0x38>
   1c744:	.word	0x0000b2cc
   1c748:	.word	0x0000b298

0001c74c <dta_parse_timestamp>:
   1c74c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c750:	strd	r6, [sp, #8]
   1c754:	strd	r8, [sp, #16]
   1c758:	strd	sl, [sp, #24]
   1c75c:	add	fp, r0, r1
   1c760:	str	lr, [sp, #32]
   1c764:	sub	sp, sp, #1056	; 0x420
   1c768:	cmp	r0, fp
   1c76c:	sub	sp, sp, #4
   1c770:	str	r3, [sp, #20]
   1c774:	strd	r0, [sp, #24]
   1c778:	beq	1cad0 <dta_parse_timestamp+0x384>
   1c77c:	ldr	r3, [pc, #868]	; 1cae8 <dta_parse_timestamp+0x39c>
   1c780:	mov	sl, #0
   1c784:	mov	r9, #1
   1c788:	mov	lr, r0
   1c78c:	mov	ip, r9
   1c790:	ldr	r4, [pc, #852]	; 1caec <dta_parse_timestamp+0x3a0>
   1c794:	mov	r7, sl
   1c798:	mov	r5, sl
   1c79c:	add	r3, pc, r3
   1c7a0:	add	r4, pc, r4
   1c7a4:	str	r3, [sp, #16]
   1c7a8:	add	r3, r4, #40	; 0x28
   1c7ac:	str	r3, [sp, #12]
   1c7b0:	b	1c7e0 <dta_parse_timestamp+0x94>
   1c7b4:	cmp	ip, #0
   1c7b8:	beq	1ca34 <dta_parse_timestamp+0x2e8>
   1c7bc:	add	lr, lr, #1
   1c7c0:	cmp	fp, lr
   1c7c4:	beq	1ca9c <dta_parse_timestamp+0x350>
   1c7c8:	ldr	r3, [pc, #800]	; 1caf0 <dta_parse_timestamp+0x3a4>
   1c7cc:	add	r3, pc, r3
   1c7d0:	add	r3, r3, ip
   1c7d4:	ldrb	r7, [r3, #532]	; 0x214
   1c7d8:	ldrb	sl, [r3, #580]	; 0x244
   1c7dc:	ldrb	r9, [r3, #628]	; 0x274
   1c7e0:	cmp	r9, #0
   1c7e4:	ldr	r3, [sp, #12]
   1c7e8:	add	r7, r3, r7
   1c7ec:	mov	r3, sl
   1c7f0:	bne	1c9b8 <dta_parse_timestamp+0x26c>
   1c7f4:	ldr	r1, [sp, #16]
   1c7f8:	add	ip, r1, ip
   1c7fc:	ldrb	r9, [ip, #160]	; 0xa0
   1c800:	cmp	r9, #0
   1c804:	bne	1c960 <dta_parse_timestamp+0x214>
   1c808:	add	r3, r4, r3
   1c80c:	ldrb	r3, [r3, #208]	; 0xd0
   1c810:	add	r3, r4, r3
   1c814:	ldrb	r1, [r3, #424]	; 0x1a8
   1c818:	ldrb	ip, [r3, #364]	; 0x16c
   1c81c:	cmp	r1, #0
   1c820:	beq	1c7b4 <dta_parse_timestamp+0x68>
   1c824:	ldrb	r0, [r4, r1]
   1c828:	add	r1, r4, r1
   1c82c:	mov	sl, #7
   1c830:	add	r3, r1, #1
   1c834:	mov	r9, #6
   1c838:	mov	r8, #5
   1c83c:	mov	r7, #4
   1c840:	mov	r6, #3
   1c844:	add	r0, r0, #1
   1c848:	add	r0, r1, r0
   1c84c:	cmp	r3, r0
   1c850:	beq	1c7b4 <dta_parse_timestamp+0x68>
   1c854:	ldrb	r1, [r3], #1
   1c858:	cmp	r1, #16
   1c85c:	addls	pc, pc, r1, lsl #2
   1c860:	b	1c84c <dta_parse_timestamp+0x100>
   1c864:	b	1c94c <dta_parse_timestamp+0x200>
   1c868:	b	1c944 <dta_parse_timestamp+0x1f8>
   1c86c:	b	1c93c <dta_parse_timestamp+0x1f0>
   1c870:	b	1c930 <dta_parse_timestamp+0x1e4>
   1c874:	b	1c924 <dta_parse_timestamp+0x1d8>
   1c878:	b	1c918 <dta_parse_timestamp+0x1cc>
   1c87c:	b	1c910 <dta_parse_timestamp+0x1c4>
   1c880:	b	1c908 <dta_parse_timestamp+0x1bc>
   1c884:	b	1c900 <dta_parse_timestamp+0x1b4>
   1c888:	b	1c8f8 <dta_parse_timestamp+0x1ac>
   1c88c:	b	1c8f0 <dta_parse_timestamp+0x1a4>
   1c890:	b	1c8e4 <dta_parse_timestamp+0x198>
   1c894:	b	1c8d8 <dta_parse_timestamp+0x18c>
   1c898:	b	1c8cc <dta_parse_timestamp+0x180>
   1c89c:	b	1c8c0 <dta_parse_timestamp+0x174>
   1c8a0:	b	1c8b0 <dta_parse_timestamp+0x164>
   1c8a4:	b	1c8a8 <dta_parse_timestamp+0x15c>
   1c8a8:	str	r5, [r2, #8]
   1c8ac:	b	1c84c <dta_parse_timestamp+0x100>
   1c8b0:	sub	r1, r5, #1888	; 0x760
   1c8b4:	sub	r1, r1, #12
   1c8b8:	str	r1, [r2, #20]
   1c8bc:	b	1c84c <dta_parse_timestamp+0x100>
   1c8c0:	mov	r1, #11
   1c8c4:	str	r1, [r2, #16]
   1c8c8:	b	1c84c <dta_parse_timestamp+0x100>
   1c8cc:	mov	r1, #10
   1c8d0:	str	r1, [r2, #16]
   1c8d4:	b	1c84c <dta_parse_timestamp+0x100>
   1c8d8:	mov	r1, #9
   1c8dc:	str	r1, [r2, #16]
   1c8e0:	b	1c84c <dta_parse_timestamp+0x100>
   1c8e4:	mov	r1, #8
   1c8e8:	str	r1, [r2, #16]
   1c8ec:	b	1c84c <dta_parse_timestamp+0x100>
   1c8f0:	str	sl, [r2, #16]
   1c8f4:	b	1c84c <dta_parse_timestamp+0x100>
   1c8f8:	str	r9, [r2, #16]
   1c8fc:	b	1c84c <dta_parse_timestamp+0x100>
   1c900:	str	r8, [r2, #16]
   1c904:	b	1c84c <dta_parse_timestamp+0x100>
   1c908:	str	r7, [r2, #16]
   1c90c:	b	1c84c <dta_parse_timestamp+0x100>
   1c910:	str	r6, [r2, #16]
   1c914:	b	1c84c <dta_parse_timestamp+0x100>
   1c918:	mov	r1, #2
   1c91c:	str	r1, [r2, #16]
   1c920:	b	1c84c <dta_parse_timestamp+0x100>
   1c924:	mov	r1, #1
   1c928:	str	r1, [r2, #16]
   1c92c:	b	1c84c <dta_parse_timestamp+0x100>
   1c930:	mov	r1, #0
   1c934:	str	r1, [r2, #16]
   1c938:	b	1c84c <dta_parse_timestamp+0x100>
   1c93c:	str	r5, [r2, #12]
   1c940:	b	1c84c <dta_parse_timestamp+0x100>
   1c944:	mov	r5, #0
   1c948:	b	1c84c <dta_parse_timestamp+0x100>
   1c94c:	ldrb	r1, [lr]
   1c950:	add	r5, r5, r5, lsl #2
   1c954:	sub	r1, r1, #48	; 0x30
   1c958:	add	r5, r1, r5, lsl #1
   1c95c:	b	1c84c <dta_parse_timestamp+0x100>
   1c960:	add	ip, r7, r9, lsl #1
   1c964:	sub	ip, ip, #2
   1c968:	cmp	r7, ip
   1c96c:	bhi	1c9b0 <dta_parse_timestamp+0x264>
   1c970:	ldrb	r8, [lr]
   1c974:	mov	r0, r7
   1c978:	sub	r1, ip, r0
   1c97c:	asr	r1, r1, #1
   1c980:	bic	r1, r1, #1
   1c984:	ldrb	r6, [r0, r1]
   1c988:	add	r1, r0, r1
   1c98c:	cmp	r6, r8
   1c990:	subhi	ip, r1, #2
   1c994:	bhi	1c9a8 <dta_parse_timestamp+0x25c>
   1c998:	ldrb	r6, [r1, #1]
   1c99c:	add	r0, r1, #2
   1c9a0:	cmp	r6, r8
   1c9a4:	bcs	1ca00 <dta_parse_timestamp+0x2b4>
   1c9a8:	cmp	ip, r0
   1c9ac:	bcs	1c978 <dta_parse_timestamp+0x22c>
   1c9b0:	add	r3, r3, r9
   1c9b4:	b	1c808 <dta_parse_timestamp+0xbc>
   1c9b8:	sub	r0, r9, #1
   1c9bc:	adds	r0, r7, r0
   1c9c0:	bcs	1c9f4 <dta_parse_timestamp+0x2a8>
   1c9c4:	ldrb	r8, [lr]
   1c9c8:	mov	r1, r7
   1c9cc:	sub	r3, r0, r1
   1c9d0:	ldrb	r6, [r1, r3, asr #1]
   1c9d4:	add	r3, r1, r3, asr #1
   1c9d8:	cmp	r8, r6
   1c9dc:	subcc	r0, r3, #1
   1c9e0:	bcc	1c9ec <dta_parse_timestamp+0x2a0>
   1c9e4:	bls	1ca0c <dta_parse_timestamp+0x2c0>
   1c9e8:	add	r1, r3, #1
   1c9ec:	cmp	r1, r0
   1c9f0:	bls	1c9cc <dta_parse_timestamp+0x280>
   1c9f4:	add	r7, r7, r9
   1c9f8:	add	r3, sl, r9
   1c9fc:	b	1c7f4 <dta_parse_timestamp+0xa8>
   1ca00:	sub	r1, r1, r7
   1ca04:	add	r3, r3, r1, asr #1
   1ca08:	b	1c808 <dta_parse_timestamp+0xbc>
   1ca0c:	sub	r3, r3, r7
   1ca10:	add	r3, sl, r3
   1ca14:	b	1c808 <dta_parse_timestamp+0xbc>
   1ca18:	ldrb	r1, [r3], #1
   1ca1c:	cmp	r1, #17
   1ca20:	streq	r5, [r2, #4]
   1ca24:	cmp	r3, ip
   1ca28:	bne	1ca18 <dta_parse_timestamp+0x2cc>
   1ca2c:	cmp	r0, #0
   1ca30:	beq	1ca7c <dta_parse_timestamp+0x330>
   1ca34:	ldr	r3, [sp, #20]
   1ca38:	cmp	r3, #0
   1ca3c:	beq	1ca78 <dta_parse_timestamp+0x32c>
   1ca40:	ldr	r2, [pc, #172]	; 1caf4 <dta_parse_timestamp+0x3a8>
   1ca44:	add	r4, sp, #32
   1ca48:	mov	r0, r4
   1ca4c:	ldr	r5, [sp, #20]
   1ca50:	ldr	ip, [sp, #24]
   1ca54:	add	r2, pc, r2
   1ca58:	ldr	r1, [sp, #28]
   1ca5c:	mov	r3, r1
   1ca60:	stm	sp, {r1, ip}
   1ca64:	mov	r1, #1024	; 0x400
   1ca68:	bl	4254 <snprintf@plt>
   1ca6c:	mov	r0, r4
   1ca70:	ldr	r1, [sp, #1096]	; 0x448
   1ca74:	blx	r5
   1ca78:	mov	r0, #29
   1ca7c:	add	sp, sp, #1056	; 0x420
   1ca80:	add	sp, sp, #4
   1ca84:	ldrd	r4, [sp]
   1ca88:	ldrd	r6, [sp, #8]
   1ca8c:	ldrd	r8, [sp, #16]
   1ca90:	ldrd	sl, [sp, #24]
   1ca94:	add	sp, sp, #32
   1ca98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca9c:	ldr	r3, [pc, #84]	; 1caf8 <dta_parse_timestamp+0x3ac>
   1caa0:	cmp	ip, #43	; 0x2b
   1caa4:	movgt	r0, #0
   1caa8:	movle	r0, #1
   1caac:	add	r3, pc, r3
   1cab0:	add	ip, r3, ip
   1cab4:	ldrb	r1, [ip, #484]	; 0x1e4
   1cab8:	add	ip, r3, r1
   1cabc:	ldrb	r3, [r3, r1]
   1cac0:	add	r1, r3, #1
   1cac4:	add	r3, ip, #1
   1cac8:	add	ip, ip, r1
   1cacc:	b	1ca24 <dta_parse_timestamp+0x2d8>
   1cad0:	ldr	ip, [pc, #36]	; 1cafc <dta_parse_timestamp+0x3b0>
   1cad4:	mov	r3, #0
   1cad8:	mov	r0, #1
   1cadc:	mov	r5, r3
   1cae0:	add	ip, pc, ip
   1cae4:	b	1cac0 <dta_parse_timestamp+0x374>
   1cae8:	.word	0x0000b2a4
   1caec:	.word	0x0000b2a0
   1caf0:	.word	0x0000b274
   1caf4:	.word	0x0000b290
   1caf8:	.word	0x0000af94
   1cafc:	.word	0x0000af60

0001cb00 <dta_update_progress>:
   1cb00:	str	r4, [sp, #-16]!
   1cb04:	mov	r4, r0
   1cb08:	strd	r6, [sp, #4]
   1cb0c:	ldrd	r6, [r0, #168]	; 0xa8
   1cb10:	str	lr, [sp, #12]
   1cb14:	vpush	{d8}
   1cb18:	cmp	r6, #1
   1cb1c:	sbcs	r3, r7, #0
   1cb20:	blt	1cb78 <dta_update_progress+0x78>
   1cb24:	ldrd	r0, [r0, #184]	; 0xb8
   1cb28:	bl	2510c <__aeabi_l2d>
   1cb2c:	vmov	d8, r0, r1
   1cb30:	mov	r0, r6
   1cb34:	mov	r1, r7
   1cb38:	bl	2510c <__aeabi_l2d>
   1cb3c:	vmov	d7, r0, r1
   1cb40:	vdiv.f64	d0, d8, d7
   1cb44:	ldr	r3, [r4, #268]	; 0x10c
   1cb48:	cmp	r3, #0
   1cb4c:	beq	1cb60 <dta_update_progress+0x60>
   1cb50:	ldr	r0, [r4, #276]	; 0x114
   1cb54:	blx	r3
   1cb58:	cmp	r0, #0
   1cb5c:	bne	1cb80 <dta_update_progress+0x80>
   1cb60:	mov	r0, #0
   1cb64:	vpop	{d8}
   1cb68:	ldr	r4, [sp]
   1cb6c:	ldrd	r6, [sp, #4]
   1cb70:	add	sp, sp, #12
   1cb74:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb78:	vldr	d0, [pc, #8]	; 1cb88 <dta_update_progress+0x88>
   1cb7c:	b	1cb44 <dta_update_progress+0x44>
   1cb80:	mov	r0, #4
   1cb84:	b	1cb64 <dta_update_progress+0x64>
	...

0001cb90 <dta_read_tag>:
   1cb90:	ldr	r3, [r0, #284]	; 0x11c
   1cb94:	cmp	r3, #0
   1cb98:	beq	1cba8 <dta_read_tag+0x18>
   1cb9c:	ldrb	r3, [r0, #192]	; 0xc0
   1cba0:	tst	r3, #4
   1cba4:	beq	1cc24 <dta_read_tag+0x94>
   1cba8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1cbac:	mov	r4, r0
   1cbb0:	mov	r0, r1
   1cbb4:	strd	r6, [sp, #8]
   1cbb8:	mov	r5, r1
   1cbbc:	str	lr, [sp, #16]
   1cbc0:	sub	sp, sp, #260	; 0x104
   1cbc4:	bl	41d0 <strlen@plt>
   1cbc8:	ldr	r3, [r4, #280]	; 0x118
   1cbcc:	mov	r6, r0
   1cbd0:	mov	r7, sp
   1cbd4:	mov	r0, r7
   1cbd8:	mov	r1, r6
   1cbdc:	ldr	r4, [r3, #12]
   1cbe0:	ldr	r2, [r3, #20]
   1cbe4:	blx	r4
   1cbe8:	cmp	r0, r6
   1cbec:	movne	r0, #2
   1cbf0:	bne	1cc10 <dta_read_tag+0x80>
   1cbf4:	mov	r2, r0
   1cbf8:	mov	r1, r5
   1cbfc:	mov	r0, r7
   1cc00:	bl	44d0 <strncmp@plt>
   1cc04:	cmp	r0, #0
   1cc08:	movne	r0, #5
   1cc0c:	moveq	r0, #0
   1cc10:	add	sp, sp, #260	; 0x104
   1cc14:	ldrd	r4, [sp]
   1cc18:	ldrd	r6, [sp, #8]
   1cc1c:	add	sp, sp, #16
   1cc20:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc24:	mov	r0, #0
   1cc28:	bx	lr

0001cc2c <dta_interpret_int32_bytes>:
   1cc2c:	ldrb	r3, [r1, #192]	; 0xc0
   1cc30:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1cc34:	mov	r4, r0
   1cc38:	mov	r5, r1
   1cc3c:	strd	r6, [sp, #8]
   1cc40:	mov	r6, #0
   1cc44:	mov	r7, #0
   1cc48:	str	r8, [sp, #16]
   1cc4c:	str	lr, [sp, #20]
   1cc50:	tst	r3, #1
   1cc54:	ldr	r0, [r2]
   1cc58:	strd	r6, [r4]
   1cc5c:	strd	r6, [r4, #8]
   1cc60:	bne	1ccf4 <dta_interpret_int32_bytes+0xc8>
   1cc64:	tst	r3, #2
   1cc68:	bne	1ccec <dta_interpret_int32_bytes+0xc0>
   1cc6c:	ldr	r3, [r5, #196]	; 0xc4
   1cc70:	cmp	r3, r0
   1cc74:	bge	1ccdc <dta_interpret_int32_bytes+0xb0>
   1cc78:	ldrb	r3, [r5, #192]	; 0xc0
   1cc7c:	cmn	r0, #-2147483621	; 0x8000001b
   1cc80:	movle	r2, #0
   1cc84:	movgt	r2, #1
   1cc88:	ands	r2, r2, r3, lsr #3
   1cc8c:	addne	r1, r0, #123	; 0x7b
   1cc90:	movne	ip, #0
   1cc94:	uxtbne	r1, r1
   1cc98:	bne	1cca4 <dta_interpret_int32_bytes+0x78>
   1cc9c:	mov	ip, #1
   1cca0:	mov	r1, r2
   1cca4:	ldrb	r3, [r4, #13]
   1cca8:	mov	lr, #3
   1ccac:	ldrd	r6, [sp, #8]
   1ccb0:	ldr	r8, [sp, #16]
   1ccb4:	bfi	r3, ip, #0, #1
   1ccb8:	str	r0, [r4]
   1ccbc:	mov	r0, r4
   1ccc0:	str	lr, [r4, #8]
   1ccc4:	bfi	r3, r2, #1, #1
   1ccc8:	strb	r1, [r4, #12]
   1cccc:	strb	r3, [r4, #13]
   1ccd0:	ldrd	r4, [sp]
   1ccd4:	add	sp, sp, #20
   1ccd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccdc:	mov	r2, #0
   1cce0:	mov	ip, r2
   1cce4:	mov	r1, r2
   1cce8:	b	1cca4 <dta_interpret_int32_bytes+0x78>
   1ccec:	bl	3ed0 <ones_to_twos_complement4@plt>
   1ccf0:	b	1cc6c <dta_interpret_int32_bytes+0x40>
   1ccf4:	bl	3d68 <byteswap4@plt>
   1ccf8:	ldrb	r3, [r5, #192]	; 0xc0
   1ccfc:	b	1cc64 <dta_interpret_int32_bytes+0x38>

0001cd00 <dta_handle_row>:
   1cd00:	ldr	r3, [r1, #148]	; 0x94
   1cd04:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1cd08:	strd	r6, [sp, #8]
   1cd0c:	strd	r8, [sp, #16]
   1cd10:	strd	sl, [sp, #24]
   1cd14:	cmp	r3, #0
   1cd18:	str	lr, [sp, #32]
   1cd1c:	vpush	{d8-d9}
   1cd20:	sub	sp, sp, #2224	; 0x8b0
   1cd24:	sub	sp, sp, #4
   1cd28:	ble	1d304 <dta_handle_row+0x604>
   1cd2c:	add	r9, sp, #128	; 0x80
   1cd30:	mov	r2, #0
   1cd34:	vldr	d9, [pc, #940]	; 1d0e8 <dta_handle_row+0x3e8>
   1cd38:	add	r3, r9, #8
   1cd3c:	mov	r7, #0
   1cd40:	mov	r4, r1
   1cd44:	mov	r8, r7
   1cd48:	vldr	s16, [pc, #928]	; 1d0f0 <dta_handle_row+0x3f0>
   1cd4c:	str	r3, [sp, #28]
   1cd50:	add	r3, sp, #112	; 0x70
   1cd54:	str	r0, [sp, #36]	; 0x24
   1cd58:	str	r3, [sp, #48]	; 0x30
   1cd5c:	add	r3, sp, #108	; 0x6c
   1cd60:	str	r3, [sp, #32]
   1cd64:	mov	r3, #0
   1cd68:	strd	r2, [sp, #16]
   1cd6c:	b	1cde4 <dta_handle_row+0xe4>
   1cd70:	cmp	r2, #6
   1cd74:	beq	1d0f4 <dta_handle_row+0x3f4>
   1cd78:	cmp	r2, #1
   1cd7c:	beq	1ced0 <dta_handle_row+0x1d0>
   1cd80:	cmp	r2, #2
   1cd84:	beq	1cf9c <dta_handle_row+0x29c>
   1cd88:	cmp	r2, #3
   1cd8c:	beq	1d00c <dta_handle_row+0x30c>
   1cd90:	cmp	r2, #4
   1cd94:	beq	1d050 <dta_handle_row+0x350>
   1cd98:	cmp	r2, #5
   1cd9c:	addne	r5, sp, #144	; 0x90
   1cda0:	beq	1d218 <dta_handle_row+0x518>
   1cda4:	ldrd	r2, [r5, #-8]
   1cda8:	ldr	r0, [r4, #184]	; 0xb8
   1cdac:	ldr	ip, [r4, #276]	; 0x114
   1cdb0:	strd	r2, [sp]
   1cdb4:	ldm	r9, {r2, r3}
   1cdb8:	str	ip, [sp, #8]
   1cdbc:	ldr	r5, [r4, #256]	; 0x100
   1cdc0:	blx	r5
   1cdc4:	cmp	r0, #0
   1cdc8:	bne	1d410 <dta_handle_row+0x710>
   1cdcc:	ldr	r3, [sp, #108]	; 0x6c
   1cdd0:	add	r7, r7, r3
   1cdd4:	ldr	r3, [r4, #148]	; 0x94
   1cdd8:	add	r8, r8, #1
   1cddc:	cmp	r3, r8
   1cde0:	ble	1d304 <dta_handle_row+0x604>
   1cde4:	ldrd	sl, [sp, #16]
   1cde8:	lsl	r0, r8, #1
   1cdec:	mov	r1, r4
   1cdf0:	ldr	ip, [r4, #28]
   1cdf4:	ldr	r3, [sp, #28]
   1cdf8:	strd	sl, [r9]
   1cdfc:	strd	sl, [r9, #8]
   1ce00:	ldrh	r0, [ip, r0]
   1ce04:	ldr	r2, [sp, #32]
   1ce08:	bl	41b8 <dta_type_info@plt>
   1ce0c:	subs	r5, r0, #0
   1ce10:	bne	1cf74 <dta_handle_row+0x274>
   1ce14:	ldr	ip, [r4, #228]	; 0xe4
   1ce18:	lsl	r6, r8, #2
   1ce1c:	ldr	r3, [sp, #108]	; 0x6c
   1ce20:	ldr	r1, [ip, r8, lsl #2]
   1ce24:	add	ip, ip, r6
   1ce28:	add	r2, r3, r7
   1ce2c:	ldr	r0, [r1, #2144]	; 0x860
   1ce30:	cmp	r0, #0
   1ce34:	movne	r7, r2
   1ce38:	bne	1cdd4 <dta_handle_row+0xd4>
   1ce3c:	ldr	r0, [r4, #160]	; 0xa0
   1ce40:	cmp	r0, r2
   1ce44:	bcc	1cf70 <dta_handle_row+0x270>
   1ce48:	ldr	r2, [sp, #136]	; 0x88
   1ce4c:	cmp	r2, #0
   1ce50:	bne	1cd70 <dta_handle_row+0x70>
   1ce54:	ldr	ip, [sp, #36]	; 0x24
   1ce58:	cmp	r3, #0
   1ce5c:	add	r2, ip, r7
   1ce60:	beq	1ce9c <dta_handle_row+0x19c>
   1ce64:	ldrb	r1, [ip, r7]
   1ce68:	cmp	r1, #0
   1ce6c:	beq	1d42c <dta_handle_row+0x72c>
   1ce70:	add	r3, ip, r3
   1ce74:	add	r1, r7, #1
   1ce78:	add	r0, r3, r7
   1ce7c:	add	r1, ip, r1
   1ce80:	b	1ce90 <dta_handle_row+0x190>
   1ce84:	ldrb	ip, [r1], #1
   1ce88:	cmp	ip, #0
   1ce8c:	beq	1ce9c <dta_handle_row+0x19c>
   1ce90:	cmp	r0, r1
   1ce94:	sub	r3, r1, r2
   1ce98:	bne	1ce84 <dta_handle_row+0x184>
   1ce9c:	ldr	ip, [r4, #236]	; 0xec
   1cea0:	add	sl, sp, #176	; 0xb0
   1cea4:	mov	r1, #2048	; 0x800
   1cea8:	mov	r0, sl
   1ceac:	str	ip, [sp]
   1ceb0:	bl	420c <readstat_convert@plt>
   1ceb4:	subs	r5, r0, #0
   1ceb8:	bne	1cf74 <dta_handle_row+0x274>
   1cebc:	ldr	r3, [r4, #228]	; 0xe4
   1cec0:	add	r5, sp, #144	; 0x90
   1cec4:	ldr	r1, [r3, r6]
   1cec8:	str	sl, [sp, #128]	; 0x80
   1cecc:	b	1cda4 <dta_handle_row+0xa4>
   1ced0:	ldrb	r3, [r4, #192]	; 0xc0
   1ced4:	add	r5, sp, #144	; 0x90
   1ced8:	ldr	r2, [sp, #36]	; 0x24
   1cedc:	ldrd	sl, [sp, #16]
   1cee0:	tst	r3, #2
   1cee4:	ldrb	r0, [r2, r7]
   1cee8:	strd	sl, [r5]
   1ceec:	strd	sl, [r5, #8]
   1cef0:	sxtbeq	r0, r0
   1cef4:	bne	1d2c8 <dta_handle_row+0x5c8>
   1cef8:	ldrsb	r3, [r4, #193]	; 0xc1
   1cefc:	cmp	r3, r0
   1cf00:	bge	1d0d8 <dta_handle_row+0x3d8>
   1cf04:	ldrb	r3, [r4, #192]	; 0xc0
   1cf08:	cmp	r0, #101	; 0x65
   1cf0c:	movle	r2, #0
   1cf10:	movgt	r2, #1
   1cf14:	ands	r2, r2, r3, lsr #3
   1cf18:	subne	ip, r0, #5
   1cf1c:	movne	lr, #0
   1cf20:	uxtbne	ip, ip
   1cf24:	bne	1cf30 <dta_handle_row+0x230>
   1cf28:	mov	lr, #1
   1cf2c:	mov	ip, r2
   1cf30:	ldrb	r3, [sp, #157]	; 0x9d
   1cf34:	strb	r0, [sp, #144]	; 0x90
   1cf38:	mov	r0, #1
   1cf3c:	strb	ip, [sp, #156]	; 0x9c
   1cf40:	str	r0, [sp, #152]	; 0x98
   1cf44:	bfi	r3, lr, #0, #1
   1cf48:	mov	ip, r3
   1cf4c:	bfi	ip, r2, #1, #1
   1cf50:	ldrd	r2, [r5]
   1cf54:	strb	ip, [sp, #157]	; 0x9d
   1cf58:	strd	r2, [sp, #160]	; 0xa0
   1cf5c:	ldrd	sl, [r5, #8]
   1cf60:	strd	r2, [r9]
   1cf64:	strd	sl, [r9, #8]
   1cf68:	strd	sl, [sp, #168]	; 0xa8
   1cf6c:	b	1cda4 <dta_handle_row+0xa4>
   1cf70:	mov	r5, #5
   1cf74:	mov	r0, r5
   1cf78:	add	sp, sp, #2224	; 0x8b0
   1cf7c:	add	sp, sp, #4
   1cf80:	vpop	{d8-d9}
   1cf84:	ldrd	r4, [sp]
   1cf88:	ldrd	r6, [sp, #8]
   1cf8c:	ldrd	r8, [sp, #16]
   1cf90:	ldrd	sl, [sp, #24]
   1cf94:	add	sp, sp, #32
   1cf98:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf9c:	ldrb	r3, [r4, #192]	; 0xc0
   1cfa0:	add	r5, sp, #144	; 0x90
   1cfa4:	ldrd	sl, [sp, #16]
   1cfa8:	ldr	r2, [sp, #36]	; 0x24
   1cfac:	tst	r3, #1
   1cfb0:	strd	sl, [r5]
   1cfb4:	strd	sl, [r5, #8]
   1cfb8:	ldrh	r0, [r2, r7]
   1cfbc:	bne	1d2f8 <dta_handle_row+0x5f8>
   1cfc0:	tst	r3, #2
   1cfc4:	sxth	r0, r0
   1cfc8:	bne	1d2f0 <dta_handle_row+0x5f0>
   1cfcc:	ldrsh	r3, [r4, #194]	; 0xc2
   1cfd0:	cmp	r3, r0
   1cfd4:	bge	1d18c <dta_handle_row+0x48c>
   1cfd8:	ldrb	r3, [r4, #192]	; 0xc0
   1cfdc:	movw	r2, #32741	; 0x7fe5
   1cfe0:	cmp	r0, r2
   1cfe4:	movle	r2, #0
   1cfe8:	movgt	r2, #1
   1cfec:	ands	r2, r2, r3, lsr #3
   1cff0:	addne	r1, r0, #123	; 0x7b
   1cff4:	movne	ip, #0
   1cff8:	uxtbne	r1, r1
   1cffc:	bne	1d198 <dta_handle_row+0x498>
   1d000:	mov	ip, #1
   1d004:	mov	r1, r2
   1d008:	b	1d198 <dta_handle_row+0x498>
   1d00c:	ldr	r3, [sp, #36]	; 0x24
   1d010:	add	sl, sp, #88	; 0x58
   1d014:	mov	r1, r4
   1d018:	mov	r0, sl
   1d01c:	add	r5, sp, #144	; 0x90
   1d020:	add	r2, r3, r7
   1d024:	add	r3, sp, #96	; 0x60
   1d028:	str	r3, [sp, #40]	; 0x28
   1d02c:	bl	1cc2c <dta_interpret_int32_bytes>
   1d030:	ldr	r3, [sp, #40]	; 0x28
   1d034:	ldrd	r0, [sl, #8]
   1d038:	ldr	ip, [r4, #228]	; 0xe4
   1d03c:	ldrd	r2, [r3, #-8]
   1d040:	strd	r2, [r9]
   1d044:	strd	r0, [r9, #8]
   1d048:	ldr	r1, [ip, r6]
   1d04c:	b	1cda4 <dta_handle_row+0xa4>
   1d050:	ldrb	r3, [r4, #192]	; 0xc0
   1d054:	add	r5, sp, #144	; 0x90
   1d058:	vstr	s16, [r9, #-8]
   1d05c:	ldrd	r0, [sp, #16]
   1d060:	ldr	r2, [sp, #36]	; 0x24
   1d064:	tst	r3, #1
   1d068:	strd	r0, [r5]
   1d06c:	strd	r0, [r5, #8]
   1d070:	ldr	r0, [r2, r7]
   1d074:	bne	1d324 <dta_handle_row+0x624>
   1d078:	ldr	r3, [r4, #200]	; 0xc8
   1d07c:	cmp	r3, r0
   1d080:	blt	1d1c4 <dta_handle_row+0x4c4>
   1d084:	mov	r2, #0
   1d088:	str	r0, [sp, #120]	; 0x78
   1d08c:	mov	lr, r2
   1d090:	mov	r3, r2
   1d094:	ldr	r6, [r9, #-8]
   1d098:	mov	r0, #4
   1d09c:	ldr	r1, [ip]
   1d0a0:	str	r6, [r5]
   1d0a4:	ldrb	ip, [sp, #157]	; 0x9d
   1d0a8:	str	r0, [sp, #152]	; 0x98
   1d0ac:	strb	r3, [sp, #156]	; 0x9c
   1d0b0:	bfi	ip, lr, #0, #1
   1d0b4:	bfi	ip, r2, #1, #1
   1d0b8:	ldrd	r2, [r5]
   1d0bc:	strd	r2, [sp, #160]	; 0xa0
   1d0c0:	strd	r2, [r9]
   1d0c4:	strb	ip, [sp, #157]	; 0x9d
   1d0c8:	ldrd	r2, [r5, #8]
   1d0cc:	strd	r2, [r9, #8]
   1d0d0:	strd	r2, [sp, #168]	; 0xa8
   1d0d4:	b	1cda4 <dta_handle_row+0xa4>
   1d0d8:	mov	r2, #0
   1d0dc:	mov	lr, r2
   1d0e0:	mov	ip, r2
   1d0e4:	b	1cf30 <dta_handle_row+0x230>
   1d0e8:	.word	0x00000000
   1d0ec:	.word	0x7ff80000
   1d0f0:	.word	0x7fc00000
   1d0f4:	ldr	r3, [r4, #112]	; 0x70
   1d0f8:	ldr	r2, [sp, #36]	; 0x24
   1d0fc:	cmp	r3, #2
   1d100:	add	ip, r2, r7
   1d104:	beq	1d340 <dta_handle_row+0x640>
   1d108:	cmp	r3, #4
   1d10c:	beq	1d434 <dta_handle_row+0x734>
   1d110:	mov	r2, #0
   1d114:	mov	r3, #0
   1d118:	strd	r2, [sp, #40]	; 0x28
   1d11c:	str	r5, [sp, #52]	; 0x34
   1d120:	ldr	r6, [r4, #216]	; 0xd8
   1d124:	mov	fp, r4
   1d128:	ldr	ip, [r4, #220]	; 0xdc
   1d12c:	mov	r4, r1
   1d130:	mov	r1, r6
   1d134:	ldr	r6, [sp, #52]	; 0x34
   1d138:	cmp	ip, r5
   1d13c:	bls	1d174 <dta_handle_row+0x474>
   1d140:	add	r3, r5, ip
   1d144:	lsr	r3, r3, #1
   1d148:	ldr	lr, [r1, r3, lsl #2]
   1d14c:	ldrh	r2, [lr]
   1d150:	cmp	r2, r6
   1d154:	sub	r0, r6, r2
   1d158:	beq	1d208 <dta_handle_row+0x508>
   1d15c:	cmp	r0, #0
   1d160:	blt	1d200 <dta_handle_row+0x500>
   1d164:	beq	1d2dc <dta_handle_row+0x5dc>
   1d168:	add	r5, r3, #1
   1d16c:	cmp	ip, r5
   1d170:	bhi	1d140 <dta_handle_row+0x440>
   1d174:	mov	r1, r4
   1d178:	mov	r4, fp
   1d17c:	mov	r3, #0
   1d180:	add	r5, sp, #144	; 0x90
   1d184:	str	r3, [sp, #136]	; 0x88
   1d188:	b	1cda4 <dta_handle_row+0xa4>
   1d18c:	mov	r2, #0
   1d190:	mov	ip, r2
   1d194:	mov	r1, r2
   1d198:	strh	r0, [r5]
   1d19c:	mov	r0, #2
   1d1a0:	ldrb	r3, [sp, #157]	; 0x9d
   1d1a4:	strb	r1, [sp, #156]	; 0x9c
   1d1a8:	ldr	r1, [r4, #228]	; 0xe4
   1d1ac:	bfi	r3, ip, #0, #1
   1d1b0:	mov	ip, r3
   1d1b4:	ldr	r1, [r1, r6]
   1d1b8:	bfi	ip, r2, #1, #1
   1d1bc:	str	r0, [sp, #152]	; 0x98
   1d1c0:	b	1cf50 <dta_handle_row+0x250>
   1d1c4:	ldrb	r3, [r4, #192]	; 0xc0
   1d1c8:	cmp	r0, #2130706432	; 0x7f000000
   1d1cc:	movle	r2, #0
   1d1d0:	movgt	r2, #1
   1d1d4:	ands	r2, r2, r3, lsr #3
   1d1d8:	moveq	lr, #1
   1d1dc:	moveq	r3, r2
   1d1e0:	beq	1d094 <dta_handle_row+0x394>
   1d1e4:	add	r0, r0, #-2130706432	; 0x81000000
   1d1e8:	mov	lr, #0
   1d1ec:	sub	r0, r0, #2048	; 0x800
   1d1f0:	asr	r3, r0, #11
   1d1f4:	add	r3, r3, #97	; 0x61
   1d1f8:	uxtb	r3, r3
   1d1fc:	b	1d094 <dta_handle_row+0x394>
   1d200:	mov	ip, r3
   1d204:	b	1d138 <dta_handle_row+0x438>
   1d208:	ldr	r0, [lr, #8]
   1d20c:	ldr	r2, [sp, #40]	; 0x28
   1d210:	sub	r0, r2, r0
   1d214:	b	1d15c <dta_handle_row+0x45c>
   1d218:	ldrd	sl, [sp, #16]
   1d21c:	add	r5, sp, #144	; 0x90
   1d220:	ldr	r3, [sp, #36]	; 0x24
   1d224:	ldr	r1, [sp, #48]	; 0x30
   1d228:	mov	r0, sl
   1d22c:	strd	sl, [r5]
   1d230:	ldrb	r2, [r4, #192]	; 0xc0
   1d234:	add	r3, r3, r7
   1d238:	vstr	d9, [r1]
   1d23c:	ldr	r1, [r3]
   1d240:	tst	r2, #1
   1d244:	ldr	r3, [r3, #4]
   1d248:	stmdb	r9, {r1, r3}
   1d24c:	mov	r1, fp
   1d250:	strd	r0, [r5, #8]
   1d254:	ldrd	r0, [r9, #-8]
   1d258:	bne	1d418 <dta_handle_row+0x718>
   1d25c:	ldrd	r2, [r4, #208]	; 0xd0
   1d260:	cmp	r2, r0
   1d264:	sbcs	r3, r3, r1
   1d268:	bge	1d30c <dta_handle_row+0x60c>
   1d26c:	ldrb	r2, [r4, #192]	; 0xc0
   1d270:	mov	sl, #0
   1d274:	mov	fp, #0
   1d278:	movt	fp, #32736	; 0x7fe0
   1d27c:	cmp	sl, r0
   1d280:	sbcs	r3, fp, r1
   1d284:	movlt	r3, #1
   1d288:	movge	r3, #0
   1d28c:	ands	r3, r3, r2, lsr #3
   1d290:	moveq	lr, #1
   1d294:	moveq	r2, r3
   1d298:	bne	1d3ec <dta_handle_row+0x6ec>
   1d29c:	ldr	r1, [sp, #48]	; 0x30
   1d2a0:	mov	r0, #5
   1d2a4:	vldr	d7, [r1]
   1d2a8:	ldr	r1, [ip]
   1d2ac:	vstr	d7, [r5]
   1d2b0:	ldrb	ip, [sp, #157]	; 0x9d
   1d2b4:	str	r0, [sp, #152]	; 0x98
   1d2b8:	strb	r2, [sp, #156]	; 0x9c
   1d2bc:	bfi	ip, lr, #0, #1
   1d2c0:	bfi	ip, r3, #1, #1
   1d2c4:	b	1d0b8 <dta_handle_row+0x3b8>
   1d2c8:	bl	4344 <ones_to_twos_complement1@plt>
   1d2cc:	ldr	r3, [r4, #228]	; 0xe4
   1d2d0:	sxtb	r0, r0
   1d2d4:	ldr	r1, [r3, r6]
   1d2d8:	b	1cef8 <dta_handle_row+0x1f8>
   1d2dc:	add	lr, lr, #24
   1d2e0:	mov	r1, r4
   1d2e4:	mov	r4, fp
   1d2e8:	str	lr, [sp, #128]	; 0x80
   1d2ec:	b	1d17c <dta_handle_row+0x47c>
   1d2f0:	bl	3edc <ones_to_twos_complement2@plt>
   1d2f4:	b	1cfcc <dta_handle_row+0x2cc>
   1d2f8:	bl	3e7c <byteswap2@plt>
   1d2fc:	ldrb	r3, [r4, #192]	; 0xc0
   1d300:	b	1cfc0 <dta_handle_row+0x2c0>
   1d304:	mov	r5, #0
   1d308:	b	1cf74 <dta_handle_row+0x274>
   1d30c:	ldr	r2, [sp, #48]	; 0x30
   1d310:	mov	r3, #0
   1d314:	mov	lr, r3
   1d318:	strd	r0, [r2]
   1d31c:	mov	r2, r3
   1d320:	b	1d29c <dta_handle_row+0x59c>
   1d324:	bl	3d68 <byteswap4@plt>
   1d328:	ldr	r3, [r4, #200]	; 0xc8
   1d32c:	ldr	ip, [r4, #228]	; 0xe4
   1d330:	cmp	r3, r0
   1d334:	add	ip, ip, r6
   1d338:	bge	1d084 <dta_handle_row+0x384>
   1d33c:	b	1d1c4 <dta_handle_row+0x4c4>
   1d340:	ldr	r3, [r4, #232]	; 0xe8
   1d344:	mov	fp, #0
   1d348:	ldrb	r2, [ip, #1]
   1d34c:	ldrb	sl, [ip, #7]
   1d350:	cmp	r3, #2
   1d354:	ldrb	r3, [ip, #4]
   1d358:	ldrb	r6, [ip, #2]
   1d35c:	strd	sl, [sp, #40]	; 0x28
   1d360:	ldrb	r0, [ip, #5]
   1d364:	strd	r2, [sp, #52]	; 0x34
   1d368:	ldr	r3, [sp, #36]	; 0x24
   1d36c:	ldrb	lr, [ip, #6]
   1d370:	ldrb	sl, [ip, #3]
   1d374:	ldrb	r3, [r3, r7]
   1d378:	str	r3, [sp, #60]	; 0x3c
   1d37c:	beq	1d460 <dta_handle_row+0x760>
   1d380:	uxtb	r2, r0
   1d384:	ldr	r0, [sp, #40]	; 0x28
   1d388:	mov	r3, #0
   1d38c:	strd	r2, [sp, #64]	; 0x40
   1d390:	add	r2, r6, sl, lsl #8
   1d394:	ldr	fp, [sp, #52]	; 0x34
   1d398:	lsl	sl, r0, #8
   1d39c:	ldr	r0, [sp, #64]	; 0x40
   1d3a0:	lsl	ip, r0, #24
   1d3a4:	lsr	r0, r0, #8
   1d3a8:	adds	r3, ip, r5
   1d3ac:	ldr	ip, [sp, #56]	; 0x38
   1d3b0:	adc	r0, r0, lr
   1d3b4:	adds	r3, r3, r5
   1d3b8:	str	r3, [sp, #72]	; 0x48
   1d3bc:	adc	r3, r0, sl
   1d3c0:	add	ip, r2, ip, lsl #16
   1d3c4:	ldr	r2, [sp, #60]	; 0x3c
   1d3c8:	str	r3, [sp, #76]	; 0x4c
   1d3cc:	add	r2, r2, fp, lsl #8
   1d3d0:	uxth	r3, r2
   1d3d4:	str	r3, [sp, #52]	; 0x34
   1d3d8:	ldrd	r2, [sp, #72]	; 0x48
   1d3dc:	adds	r2, r2, ip
   1d3e0:	adc	r3, r3, ip, asr #31
   1d3e4:	strd	r2, [sp, #40]	; 0x28
   1d3e8:	b	1d120 <dta_handle_row+0x420>
   1d3ec:	adds	r2, r0, #0
   1d3f0:	mov	r2, #65280	; 0xff00
   1d3f4:	movt	r2, #32799	; 0x801f
   1d3f8:	mov	lr, #0
   1d3fc:	adc	r2, r1, r2
   1d400:	asr	r2, r2, #8
   1d404:	add	r2, r2, #97	; 0x61
   1d408:	uxtb	r2, r2
   1d40c:	b	1d29c <dta_handle_row+0x59c>
   1d410:	mov	r5, #4
   1d414:	b	1cf74 <dta_handle_row+0x274>
   1d418:	bl	3d50 <byteswap8@plt>
   1d41c:	ldr	ip, [r4, #228]	; 0xe4
   1d420:	strd	r0, [r9, #-8]
   1d424:	add	ip, ip, r6
   1d428:	b	1d25c <dta_handle_row+0x55c>
   1d42c:	mov	r3, r1
   1d430:	b	1ce9c <dta_handle_row+0x19c>
   1d434:	ldrb	r2, [r4, #192]	; 0xc0
   1d438:	ldr	r0, [ip]
   1d43c:	ldr	r3, [ip, #4]
   1d440:	tst	r2, #1
   1d444:	uxtheq	r2, r0
   1d448:	streq	r2, [sp, #52]	; 0x34
   1d44c:	bne	1d4d8 <dta_handle_row+0x7d8>
   1d450:	mov	sl, r3
   1d454:	mov	fp, #0
   1d458:	strd	sl, [sp, #40]	; 0x28
   1d45c:	b	1d120 <dta_handle_row+0x420>
   1d460:	lsl	r6, r6, #8
   1d464:	mov	r3, sl
   1d468:	adds	r2, r5, r5
   1d46c:	ldr	ip, [sp, #52]	; 0x34
   1d470:	lsl	r0, r0, #16
   1d474:	adc	r3, r6, r3
   1d478:	lsl	lr, lr, #8
   1d47c:	ldr	r6, [sp, #60]	; 0x3c
   1d480:	ldrb	sl, [sp, #56]	; 0x38
   1d484:	add	ip, ip, r6, lsl #8
   1d488:	ldr	r6, [sp, #40]	; 0x28
   1d48c:	uxtb	sl, sl
   1d490:	str	ip, [sp, #52]	; 0x34
   1d494:	lsl	ip, sl, #24
   1d498:	adds	r2, r2, r6
   1d49c:	lsr	r6, sl, #8
   1d4a0:	ldr	sl, [sp, #44]	; 0x2c
   1d4a4:	adc	r3, r3, sl
   1d4a8:	adds	r2, r2, ip
   1d4ac:	ldrh	sl, [sp, #52]	; 0x34
   1d4b0:	adc	r3, r3, r6
   1d4b4:	strd	r2, [sp, #80]	; 0x50
   1d4b8:	ldrd	r2, [sp, #80]	; 0x50
   1d4bc:	str	sl, [sp, #52]	; 0x34
   1d4c0:	adds	r2, r2, r0
   1d4c4:	adc	r3, r3, r0, asr #31
   1d4c8:	adds	sl, r2, lr
   1d4cc:	adc	fp, r3, lr, asr #31
   1d4d0:	strd	sl, [sp, #40]	; 0x28
   1d4d4:	b	1d120 <dta_handle_row+0x420>
   1d4d8:	str	r3, [sp, #40]	; 0x28
   1d4dc:	bl	3d68 <byteswap4@plt>
   1d4e0:	ldrb	r2, [r4, #192]	; 0xc0
   1d4e4:	uxth	r3, r0
   1d4e8:	str	r3, [sp, #52]	; 0x34
   1d4ec:	ldr	r3, [sp, #40]	; 0x28
   1d4f0:	tst	r2, #1
   1d4f4:	beq	1d504 <dta_handle_row+0x804>
   1d4f8:	mov	r0, r3
   1d4fc:	bl	3d68 <byteswap4@plt>
   1d500:	mov	r3, r0
   1d504:	ldr	r2, [r4, #228]	; 0xe4
   1d508:	ldr	r1, [r2, r6]
   1d50c:	b	1d450 <dta_handle_row+0x750>

0001d510 <dta_read_chunk>:
   1d510:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d514:	mov	r4, r3
   1d518:	ldr	r5, [r0, #280]	; 0x118
   1d51c:	strd	r6, [sp, #8]
   1d520:	mov	r6, r0
   1d524:	mov	r7, r2
   1d528:	str	r8, [sp, #16]
   1d52c:	str	lr, [sp, #20]
   1d530:	ldr	r8, [sp, #24]
   1d534:	bl	1cb90 <dta_read_tag>
   1d538:	cmp	r0, #0
   1d53c:	bne	1d560 <dta_read_chunk+0x50>
   1d540:	mov	r0, r7
   1d544:	mov	r1, r4
   1d548:	ldr	r3, [r5, #12]
   1d54c:	ldr	r2, [r5, #20]
   1d550:	blx	r3
   1d554:	cmp	r0, r4
   1d558:	movne	r0, #2
   1d55c:	beq	1d574 <dta_read_chunk+0x64>
   1d560:	ldrd	r4, [sp]
   1d564:	ldrd	r6, [sp, #8]
   1d568:	ldr	r8, [sp, #16]
   1d56c:	add	sp, sp, #20
   1d570:	pop	{pc}		; (ldr pc, [sp], #4)
   1d574:	mov	r1, r8
   1d578:	mov	r0, r6
   1d57c:	ldrd	r4, [sp]
   1d580:	ldrd	r6, [sp, #8]
   1d584:	ldr	r8, [sp, #16]
   1d588:	ldr	lr, [sp, #20]
   1d58c:	add	sp, sp, #24
   1d590:	b	1cb90 <dta_read_tag>

0001d594 <readstat_parse_dta>:
   1d594:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d598:	ldr	r4, [r0, #32]
   1d59c:	strd	r6, [sp, #8]
   1d5a0:	mov	r6, r1
   1d5a4:	mov	r7, r2
   1d5a8:	strd	r8, [sp, #16]
   1d5ac:	mov	r8, r0
   1d5b0:	strd	sl, [sp, #24]
   1d5b4:	str	lr, [sp, #32]
   1d5b8:	sub	sp, sp, #276	; 0x114
   1d5bc:	mov	r0, r4
   1d5c0:	bl	4530 <dta_ctx_alloc@plt>
   1d5c4:	mov	r5, r0
   1d5c8:	mov	r0, r6
   1d5cc:	ldr	r3, [r4]
   1d5d0:	ldr	r1, [r4, #20]
   1d5d4:	blx	r3
   1d5d8:	cmn	r0, #1
   1d5dc:	beq	1d8bc <readstat_parse_dta+0x328>
   1d5e0:	add	r6, sp, #76	; 0x4c
   1d5e4:	mov	r1, #4
   1d5e8:	ldr	r3, [r4, #12]
   1d5ec:	mov	r0, r6
   1d5f0:	ldr	r2, [r4, #20]
   1d5f4:	blx	r3
   1d5f8:	cmp	r0, #4
   1d5fc:	mov	sl, r0
   1d600:	bne	1d85c <readstat_parse_dta+0x2c8>
   1d604:	mov	r1, #2
   1d608:	mov	r0, #0
   1d60c:	ldr	r3, [r4, #8]
   1d610:	ldr	r2, [r4, #20]
   1d614:	blx	r3
   1d618:	cmn	r0, #1
   1d61c:	mov	r9, r0
   1d620:	beq	1d894 <readstat_parse_dta+0x300>
   1d624:	mov	r1, #0
   1d628:	ldr	r3, [r4, #8]
   1d62c:	mov	r0, r1
   1d630:	ldr	r2, [r4, #20]
   1d634:	blx	r3
   1d638:	cmn	r0, #1
   1d63c:	beq	1ddc8 <readstat_parse_dta+0x834>
   1d640:	ldr	r1, [pc, #4076]	; 1e634 <readstat_parse_dta+0x10a0>
   1d644:	mov	r2, sl
   1d648:	mov	r0, r6
   1d64c:	add	r1, pc, r1
   1d650:	bl	44d0 <strncmp@plt>
   1d654:	cmp	r0, #0
   1d658:	bne	1d8c4 <readstat_parse_dta+0x330>
   1d65c:	ldr	r1, [pc, #4052]	; 1e638 <readstat_parse_dta+0x10a4>
   1d660:	mov	r0, r5
   1d664:	add	r1, pc, r1
   1d668:	bl	1cb90 <dta_read_tag>
   1d66c:	subs	r6, r0, #0
   1d670:	bne	1d860 <readstat_parse_dta+0x2cc>
   1d674:	ldr	r1, [pc, #4032]	; 1e63c <readstat_parse_dta+0x10a8>
   1d678:	mov	r0, r5
   1d67c:	add	r1, pc, r1
   1d680:	bl	1cb90 <dta_read_tag>
   1d684:	subs	r6, r0, #0
   1d688:	bne	1d860 <readstat_parse_dta+0x2cc>
   1d68c:	ldr	ip, [pc, #4012]	; 1e640 <readstat_parse_dta+0x10ac>
   1d690:	mov	r3, #3
   1d694:	add	r2, sp, #80	; 0x50
   1d698:	mov	r0, r5
   1d69c:	ldr	r1, [pc, #4000]	; 1e644 <readstat_parse_dta+0x10b0>
   1d6a0:	add	ip, pc, ip
   1d6a4:	add	r1, pc, r1
   1d6a8:	str	ip, [sp]
   1d6ac:	bl	1d510 <dta_read_chunk>
   1d6b0:	subs	r6, r0, #0
   1d6b4:	bne	1d860 <readstat_parse_dta+0x2cc>
   1d6b8:	ldr	ip, [pc, #3976]	; 1e648 <readstat_parse_dta+0x10b4>
   1d6bc:	add	r6, sp, #96	; 0x60
   1d6c0:	mov	r3, #3
   1d6c4:	mov	r2, r6
   1d6c8:	mov	r0, r5
   1d6cc:	ldr	r1, [pc, #3960]	; 1e64c <readstat_parse_dta+0x10b8>
   1d6d0:	str	r6, [sp, #24]
   1d6d4:	ldrb	lr, [sp, #80]	; 0x50
   1d6d8:	add	ip, pc, ip
   1d6dc:	ldrb	fp, [sp, #81]	; 0x51
   1d6e0:	add	r1, pc, r1
   1d6e4:	str	ip, [sp]
   1d6e8:	ldrb	sl, [sp, #82]	; 0x52
   1d6ec:	str	lr, [sp, #32]
   1d6f0:	bl	1d510 <dta_read_chunk>
   1d6f4:	subs	r6, r0, #0
   1d6f8:	bne	1d860 <readstat_parse_dta+0x2cc>
   1d6fc:	ldr	r1, [pc, #3916]	; 1e650 <readstat_parse_dta+0x10bc>
   1d700:	mov	r2, #3
   1d704:	ldr	r6, [sp, #24]
   1d708:	add	r1, pc, r1
   1d70c:	mov	r0, r6
   1d710:	bl	44d0 <strncmp@plt>
   1d714:	subs	r3, r0, #0
   1d718:	str	r3, [sp, #36]	; 0x24
   1d71c:	beq	1e018 <readstat_parse_dta+0xa84>
   1d720:	ldr	r1, [pc, #3884]	; 1e654 <readstat_parse_dta+0x10c0>
   1d724:	mov	r0, r6
   1d728:	mov	r2, #3
   1d72c:	add	r1, pc, r1
   1d730:	bl	44d0 <strncmp@plt>
   1d734:	cmp	r0, #0
   1d738:	movne	r6, #5
   1d73c:	bne	1d860 <readstat_parse_dta+0x2cc>
   1d740:	mov	r3, #1
   1d744:	str	r3, [sp, #36]	; 0x24
   1d748:	mov	r3, #2
   1d74c:	str	r3, [sp, #24]
   1d750:	ldr	r3, [sp, #32]
   1d754:	sub	sl, sl, #48	; 0x30
   1d758:	sub	fp, fp, #48	; 0x30
   1d75c:	add	fp, fp, fp, lsl #2
   1d760:	sub	r3, r3, #48	; 0x30
   1d764:	add	r3, r3, r3, lsl #2
   1d768:	add	r3, r3, r3, lsl #2
   1d76c:	add	r3, sl, r3, lsl #2
   1d770:	add	fp, r3, fp, lsl #1
   1d774:	bl	3e88 <machine_is_little_endian@plt>
   1d778:	uxtb	sl, fp
   1d77c:	str	r0, [sp, #48]	; 0x30
   1d780:	cmp	sl, #118	; 0x76
   1d784:	bls	1e024 <readstat_parse_dta+0xa90>
   1d788:	ldr	ip, [pc, #3784]	; 1e658 <readstat_parse_dta+0x10c4>
   1d78c:	add	fp, sp, #136	; 0x88
   1d790:	mov	r3, #4
   1d794:	mov	r2, fp
   1d798:	mov	r0, r5
   1d79c:	ldr	r1, [pc, #3768]	; 1e65c <readstat_parse_dta+0x10c8>
   1d7a0:	add	ip, pc, ip
   1d7a4:	add	r1, pc, r1
   1d7a8:	str	ip, [sp]
   1d7ac:	bl	1d510 <dta_read_chunk>
   1d7b0:	subs	r6, r0, #0
   1d7b4:	bne	1d860 <readstat_parse_dta+0x2cc>
   1d7b8:	ldr	r2, [sp, #36]	; 0x24
   1d7bc:	ldr	r3, [sp, #48]	; 0x30
   1d7c0:	ldr	r0, [sp, #136]	; 0x88
   1d7c4:	cmp	r3, r2
   1d7c8:	str	r0, [sp, #32]
   1d7cc:	beq	1d7d8 <readstat_parse_dta+0x244>
   1d7d0:	bl	3d68 <byteswap4@plt>
   1d7d4:	str	r0, [sp, #32]
   1d7d8:	ldr	ip, [pc, #3712]	; 1e660 <readstat_parse_dta+0x10cc>
   1d7dc:	mov	r3, #8
   1d7e0:	mov	r2, fp
   1d7e4:	mov	r0, r5
   1d7e8:	ldr	r1, [pc, #3700]	; 1e664 <readstat_parse_dta+0x10d0>
   1d7ec:	add	ip, pc, ip
   1d7f0:	add	r1, pc, r1
   1d7f4:	str	ip, [sp]
   1d7f8:	bl	1d510 <dta_read_chunk>
   1d7fc:	subs	r6, r0, #0
   1d800:	bne	1d860 <readstat_parse_dta+0x2cc>
   1d804:	ldr	r2, [sp, #36]	; 0x24
   1d808:	ldr	r3, [sp, #48]	; 0x30
   1d80c:	cmp	r3, r2
   1d810:	ldrd	r2, [sp, #136]	; 0x88
   1d814:	beq	1d82c <readstat_parse_dta+0x298>
   1d818:	mov	r0, r2
   1d81c:	mov	r1, r3
   1d820:	bl	3d50 <byteswap8@plt>
   1d824:	mov	r2, r0
   1d828:	mov	r3, r1
   1d82c:	ldr	r0, [sp, #24]
   1d830:	ldr	lr, [r8, #36]	; 0x24
   1d834:	ldr	r1, [sp, #32]
   1d838:	str	r0, [sp]
   1d83c:	mov	r0, r5
   1d840:	ldr	ip, [r8, #40]	; 0x28
   1d844:	stmib	sp, {sl, lr}
   1d848:	str	ip, [sp, #12]
   1d84c:	bl	41a0 <dta_ctx_init@plt>
   1d850:	subs	r6, r0, #0
   1d854:	beq	1d948 <readstat_parse_dta+0x3b4>
   1d858:	b	1d860 <readstat_parse_dta+0x2cc>
   1d85c:	mov	r6, #2
   1d860:	ldr	r3, [r4, #4]
   1d864:	ldr	r0, [r4, #20]
   1d868:	blx	r3
   1d86c:	cmp	r5, #0
   1d870:	bne	1d8b0 <readstat_parse_dta+0x31c>
   1d874:	mov	r0, r6
   1d878:	add	sp, sp, #276	; 0x114
   1d87c:	ldrd	r4, [sp]
   1d880:	ldrd	r6, [sp, #8]
   1d884:	ldrd	r8, [sp, #16]
   1d888:	ldrd	sl, [sp, #24]
   1d88c:	add	sp, sp, #32
   1d890:	pop	{pc}		; (ldr pc, [sp], #4)
   1d894:	ldr	r7, [r5, #264]	; 0x108
   1d898:	cmp	r7, #0
   1d89c:	bne	1de48 <readstat_parse_dta+0x8b4>
   1d8a0:	mov	r6, #15
   1d8a4:	ldr	r3, [r4, #4]
   1d8a8:	ldr	r0, [r4, #20]
   1d8ac:	blx	r3
   1d8b0:	mov	r0, r5
   1d8b4:	bl	3e4c <dta_ctx_free@plt>
   1d8b8:	b	1d874 <readstat_parse_dta+0x2e0>
   1d8bc:	mov	r6, #1
   1d8c0:	b	1d860 <readstat_parse_dta+0x2cc>
   1d8c4:	ldr	r2, [r5, #280]	; 0x118
   1d8c8:	add	fp, sp, #136	; 0x88
   1d8cc:	mov	r1, #10
   1d8d0:	mov	r0, fp
   1d8d4:	ldr	r3, [r2, #12]
   1d8d8:	ldr	r2, [r2, #20]
   1d8dc:	blx	r3
   1d8e0:	cmp	r0, #10
   1d8e4:	bne	1ddc0 <readstat_parse_dta+0x82c>
   1d8e8:	ldrb	r6, [sp, #137]	; 0x89
   1d8ec:	bl	3e88 <machine_is_little_endian@plt>
   1d8f0:	sub	r6, r6, #2
   1d8f4:	clz	r6, r6
   1d8f8:	lsr	r6, r6, #5
   1d8fc:	cmp	r6, r0
   1d900:	bne	1de30 <readstat_parse_dta+0x89c>
   1d904:	ldr	r0, [sp, #142]	; 0x8e
   1d908:	mov	r2, r0
   1d90c:	mov	r3, #0
   1d910:	str	r0, [sp, #142]	; 0x8e
   1d914:	ldrb	ip, [sp, #136]	; 0x88
   1d918:	mov	r0, r5
   1d91c:	ldrb	r1, [sp, #137]	; 0x89
   1d920:	ldr	lr, [r8, #40]	; 0x28
   1d924:	str	ip, [sp, #4]
   1d928:	ldr	ip, [r8, #36]	; 0x24
   1d92c:	str	r1, [sp]
   1d930:	ldrh	r1, [sp, #140]	; 0x8c
   1d934:	str	ip, [sp, #8]
   1d938:	str	lr, [sp, #12]
   1d93c:	bl	41a0 <dta_ctx_init@plt>
   1d940:	subs	r6, r0, #0
   1d944:	bne	1d8a4 <readstat_parse_dta+0x310>
   1d948:	ldrd	r2, [r8]
   1d94c:	add	lr, r5, #240	; 0xf0
   1d950:	ldrd	r0, [r8, #8]
   1d954:	ldr	ip, [r8, #48]	; 0x30
   1d958:	strd	r2, [r5, #240]	; 0xf0
   1d95c:	ldrd	r2, [r8, #16]
   1d960:	str	r9, [r5, #272]	; 0x110
   1d964:	str	r7, [r5, #276]	; 0x114
   1d968:	cmp	ip, #0
   1d96c:	strd	r2, [sp, #24]
   1d970:	ldrd	r2, [r8, #24]
   1d974:	strd	r2, [lr, #24]
   1d978:	ldrd	r2, [sp, #24]
   1d97c:	strd	r0, [r5, #248]	; 0xf8
   1d980:	ldr	r1, [r5, #152]	; 0x98
   1d984:	ldr	r0, [r5, #156]	; 0x9c
   1d988:	strd	r2, [lr, #16]
   1d98c:	movgt	r2, ip
   1d990:	ldrdle	r2, [r5, #176]	; 0xb0
   1d994:	asrgt	r3, r2, #31
   1d998:	strdgt	r2, [r5, #176]	; 0xb0
   1d99c:	subs	ip, r1, r2
   1d9a0:	sbc	r3, r0, r3
   1d9a4:	str	ip, [sp, #16]
   1d9a8:	str	r3, [sp, #20]
   1d9ac:	ldrd	r2, [sp, #16]
   1d9b0:	cmp	r2, #0
   1d9b4:	sbcs	r3, r3, #0
   1d9b8:	blt	1dea4 <readstat_parse_dta+0x910>
   1d9bc:	ldr	r2, [r8, #44]	; 0x2c
   1d9c0:	ldrd	r0, [sp, #16]
   1d9c4:	cmp	r2, #0
   1d9c8:	strd	r0, [r5, #168]	; 0xa8
   1d9cc:	ble	1d9e0 <readstat_parse_dta+0x44c>
   1d9d0:	asr	r3, r2, #31
   1d9d4:	cmp	r2, r0
   1d9d8:	sbcs	r1, r3, r1
   1d9dc:	strdlt	r2, [r5, #168]	; 0xa8
   1d9e0:	mov	r0, r5
   1d9e4:	bl	1cb00 <dta_update_progress>
   1d9e8:	subs	r6, r0, #0
   1d9ec:	bne	1d8a4 <readstat_parse_dta+0x310>
   1d9f0:	ldr	r9, [r5, #280]	; 0x118
   1d9f4:	mvn	r3, #0
   1d9f8:	strb	r6, [sp, #75]	; 0x4b
   1d9fc:	strh	r6, [sp, #96]	; 0x60
   1da00:	ldrb	r2, [r5, #192]	; 0xc0
   1da04:	str	r6, [fp, #4]
   1da08:	str	r6, [fp, #8]
   1da0c:	str	r6, [fp, #12]
   1da10:	str	r6, [fp, #16]
   1da14:	tst	r2, #4
   1da18:	str	r6, [fp, #20]
   1da1c:	str	r6, [fp, #24]
   1da20:	str	r6, [fp, #28]
   1da24:	str	r6, [fp, #32]
   1da28:	str	r6, [fp, #36]	; 0x24
   1da2c:	str	r6, [fp, #40]	; 0x28
   1da30:	str	r6, [sp, #136]	; 0x88
   1da34:	str	r3, [sp, #168]	; 0xa8
   1da38:	bne	1debc <readstat_parse_dta+0x928>
   1da3c:	ldrh	r0, [r5, #4]
   1da40:	strh	r0, [sp, #96]	; 0x60
   1da44:	add	r0, r0, #1
   1da48:	bl	4200 <readstat_malloc@plt>
   1da4c:	subs	r8, r0, #0
   1da50:	beq	1e0d8 <readstat_parse_dta+0xb44>
   1da54:	ldrh	r1, [sp, #96]	; 0x60
   1da58:	ldr	r3, [r9, #12]
   1da5c:	ldr	r2, [r9, #20]
   1da60:	blx	r3
   1da64:	ldrh	r3, [sp, #96]	; 0x60
   1da68:	cmp	r0, r3
   1da6c:	bne	1def0 <readstat_parse_dta+0x95c>
   1da70:	ldrb	r2, [r5, #192]	; 0xc0
   1da74:	ands	r2, r2, #4
   1da78:	movne	r2, #0
   1da7c:	strne	r2, [sp, #16]
   1da80:	bne	1daa4 <readstat_parse_dta+0x510>
   1da84:	add	r1, r8, r3
   1da88:	mov	r0, r8
   1da8c:	ldrb	r1, [r1, #-1]
   1da90:	strb	r2, [r8, r3]
   1da94:	str	r1, [sp, #16]
   1da98:	bl	41d0 <strlen@plt>
   1da9c:	uxth	r3, r0
   1daa0:	strh	r0, [sp, #96]	; 0x60
   1daa4:	lsl	r0, r3, #2
   1daa8:	add	r0, r0, #1
   1daac:	bl	4200 <readstat_malloc@plt>
   1dab0:	cmp	r0, #0
   1dab4:	str	r0, [r5]
   1dab8:	beq	1e19c <readstat_parse_dta+0xc08>
   1dabc:	ldrh	r3, [sp, #96]	; 0x60
   1dac0:	mov	r2, r8
   1dac4:	ldr	ip, [r5, #236]	; 0xec
   1dac8:	lsl	r1, r3, #2
   1dacc:	add	r1, r1, #1
   1dad0:	str	ip, [sp]
   1dad4:	bl	420c <readstat_convert@plt>
   1dad8:	subs	r6, r0, #0
   1dadc:	bne	1e00c <readstat_parse_dta+0xa78>
   1dae0:	ldrb	r3, [r5, #192]	; 0xc0
   1dae4:	tst	r3, #4
   1dae8:	bne	1e1f0 <readstat_parse_dta+0xc5c>
   1daec:	ldrb	r0, [r5, #16]
   1daf0:	strb	r0, [sp, #75]	; 0x4b
   1daf4:	cmp	r0, #0
   1daf8:	bne	1e0e0 <readstat_parse_dta+0xb4c>
   1dafc:	ldr	r1, [pc, #2916]	; 1e668 <readstat_parse_dta+0x10d4>
   1db00:	mov	r0, r5
   1db04:	add	r1, pc, r1
   1db08:	bl	1cb90 <dta_read_tag>
   1db0c:	mov	r6, r0
   1db10:	mov	r0, r8
   1db14:	bl	3e94 <free@plt>
   1db18:	cmp	r6, #0
   1db1c:	bne	1d8a4 <readstat_parse_dta+0x310>
   1db20:	ldr	r1, [pc, #2884]	; 1e66c <readstat_parse_dta+0x10d8>
   1db24:	mov	r0, r5
   1db28:	add	r1, pc, r1
   1db2c:	bl	1cb90 <dta_read_tag>
   1db30:	subs	r6, r0, #0
   1db34:	bne	1d8a4 <readstat_parse_dta+0x310>
   1db38:	ldr	r6, [r5, #240]	; 0xf0
   1db3c:	cmp	r6, #0
   1db40:	beq	1dbc4 <readstat_parse_dta+0x630>
   1db44:	ldr	sl, [r5, #144]	; 0x90
   1db48:	mov	r8, #0
   1db4c:	mov	r9, #0
   1db50:	mov	r1, r7
   1db54:	mov	r0, fp
   1db58:	ldr	r7, [r5]
   1db5c:	ldr	r2, [r5, #148]	; 0x94
   1db60:	strd	r8, [sp, #168]	; 0xa8
   1db64:	cmp	sl, #117	; 0x75
   1db68:	strd	r8, [sp, #184]	; 0xb8
   1db6c:	movle	lr, #0
   1db70:	movgt	lr, #1
   1db74:	ldrb	ip, [sp, #188]	; 0xbc
   1db78:	strd	r8, [sp, #176]	; 0xb0
   1db7c:	asr	r9, sl, #31
   1db80:	mov	r8, sl
   1db84:	asr	r3, r2, #31
   1db88:	bfi	ip, lr, #0, #1
   1db8c:	ldr	lr, [r5, #12]
   1db90:	strd	r8, [sp, #160]	; 0xa0
   1db94:	ldrd	r8, [r5, #168]	; 0xa8
   1db98:	strd	r2, [sp, #144]	; 0x90
   1db9c:	ldr	r3, [r5, #232]	; 0xe8
   1dba0:	strd	r8, [sp, #136]	; 0x88
   1dba4:	str	lr, [sp, #152]	; 0x98
   1dba8:	str	lr, [sp, #156]	; 0x9c
   1dbac:	str	r3, [sp, #172]	; 0xac
   1dbb0:	str	r7, [sp, #180]	; 0xb4
   1dbb4:	strb	ip, [sp, #188]	; 0xbc
   1dbb8:	blx	r6
   1dbbc:	cmp	r0, #0
   1dbc0:	bne	1e278 <readstat_parse_dta+0xce4>
   1dbc4:	ldrb	r3, [r5, #192]	; 0xc0
   1dbc8:	tst	r3, #4
   1dbcc:	beq	1dc20 <readstat_parse_dta+0x68c>
   1dbd0:	ldr	ip, [pc, #2712]	; 1e670 <readstat_parse_dta+0x10dc>
   1dbd4:	mov	r3, #112	; 0x70
   1dbd8:	mov	r2, fp
   1dbdc:	mov	r0, r5
   1dbe0:	ldr	r1, [pc, #2700]	; 1e674 <readstat_parse_dta+0x10e0>
   1dbe4:	add	ip, pc, ip
   1dbe8:	add	r1, pc, r1
   1dbec:	str	ip, [sp]
   1dbf0:	bl	1d510 <dta_read_chunk>
   1dbf4:	cmp	r0, #0
   1dbf8:	bne	1ddc0 <readstat_parse_dta+0x82c>
   1dbfc:	ldrb	r3, [r5, #192]	; 0xc0
   1dc00:	ldrd	r0, [sp, #208]	; 0xd0
   1dc04:	tst	r3, #1
   1dc08:	bne	1e538 <readstat_parse_dta+0xfa4>
   1dc0c:	strd	r0, [r5, #120]	; 0x78
   1dc10:	ldrd	r0, [sp, #216]	; 0xd8
   1dc14:	strd	r0, [r5, #128]	; 0x80
   1dc18:	ldrd	r0, [sp, #224]	; 0xe0
   1dc1c:	strd	r0, [r5, #136]	; 0x88
   1dc20:	ldr	r8, [r5, #24]
   1dc24:	ldr	r2, [r5, #148]	; 0x94
   1dc28:	cmp	r2, #0
   1dc2c:	mul	r8, r8, r2
   1dc30:	beq	1e1c0 <readstat_parse_dta+0xc2c>
   1dc34:	mov	r0, r8
   1dc38:	bl	4200 <readstat_malloc@plt>
   1dc3c:	subs	r7, r0, #0
   1dc40:	beq	1e0d8 <readstat_parse_dta+0xb44>
   1dc44:	ldr	ip, [pc, #2604]	; 1e678 <readstat_parse_dta+0x10e4>
   1dc48:	mov	r3, r8
   1dc4c:	mov	r2, r7
   1dc50:	mov	r0, r5
   1dc54:	ldr	r1, [pc, #2592]	; 1e67c <readstat_parse_dta+0x10e8>
   1dc58:	add	ip, pc, ip
   1dc5c:	add	r1, pc, r1
   1dc60:	str	ip, [sp]
   1dc64:	bl	1d510 <dta_read_chunk>
   1dc68:	subs	r6, r0, #0
   1dc6c:	bne	1e1b4 <readstat_parse_dta+0xc20>
   1dc70:	ldr	r3, [r5, #24]
   1dc74:	cmp	r3, #1
   1dc78:	beq	1e4e4 <readstat_parse_dta+0xf50>
   1dc7c:	cmp	r3, #2
   1dc80:	beq	1ebc4 <readstat_parse_dta+0x1630>
   1dc84:	ldr	r1, [pc, #2548]	; 1e680 <readstat_parse_dta+0x10ec>
   1dc88:	mov	r0, r5
   1dc8c:	ldrd	r2, [r5, #36]	; 0x24
   1dc90:	add	r1, pc, r1
   1dc94:	str	r1, [sp]
   1dc98:	ldr	r1, [pc, #2532]	; 1e684 <readstat_parse_dta+0x10f0>
   1dc9c:	add	r1, pc, r1
   1dca0:	bl	1d510 <dta_read_chunk>
   1dca4:	subs	r6, r0, #0
   1dca8:	bne	1e1ac <readstat_parse_dta+0xc18>
   1dcac:	ldr	r1, [pc, #2516]	; 1e688 <readstat_parse_dta+0x10f4>
   1dcb0:	mov	r0, r5
   1dcb4:	ldrd	r2, [r5, #44]	; 0x2c
   1dcb8:	add	r1, pc, r1
   1dcbc:	str	r1, [sp]
   1dcc0:	ldr	r1, [pc, #2500]	; 1e68c <readstat_parse_dta+0x10f8>
   1dcc4:	add	r1, pc, r1
   1dcc8:	bl	1d510 <dta_read_chunk>
   1dccc:	subs	r6, r0, #0
   1dcd0:	bne	1e1ac <readstat_parse_dta+0xc18>
   1dcd4:	ldr	r1, [pc, #2484]	; 1e690 <readstat_parse_dta+0x10fc>
   1dcd8:	mov	r0, r5
   1dcdc:	ldrd	r2, [r5, #52]	; 0x34
   1dce0:	add	r1, pc, r1
   1dce4:	str	r1, [sp]
   1dce8:	ldr	r1, [pc, #2468]	; 1e694 <readstat_parse_dta+0x1100>
   1dcec:	add	r1, pc, r1
   1dcf0:	bl	1d510 <dta_read_chunk>
   1dcf4:	subs	r6, r0, #0
   1dcf8:	bne	1e1ac <readstat_parse_dta+0xc18>
   1dcfc:	ldr	r3, [pc, #2452]	; 1e698 <readstat_parse_dta+0x1104>
   1dd00:	mov	r0, r5
   1dd04:	ldr	r1, [pc, #2448]	; 1e69c <readstat_parse_dta+0x1108>
   1dd08:	add	r3, pc, r3
   1dd0c:	add	r1, pc, r1
   1dd10:	str	r3, [sp]
   1dd14:	ldrd	r2, [r5, #60]	; 0x3c
   1dd18:	bl	1d510 <dta_read_chunk>
   1dd1c:	subs	r6, r0, #0
   1dd20:	bne	1e1ac <readstat_parse_dta+0xc18>
   1dd24:	ldr	r3, [pc, #2420]	; 1e6a0 <readstat_parse_dta+0x110c>
   1dd28:	mov	r0, r5
   1dd2c:	ldr	r1, [pc, #2416]	; 1e6a4 <readstat_parse_dta+0x1110>
   1dd30:	add	r3, pc, r3
   1dd34:	add	r1, pc, r1
   1dd38:	str	r3, [sp]
   1dd3c:	ldrd	r2, [r5, #68]	; 0x44
   1dd40:	bl	1d510 <dta_read_chunk>
   1dd44:	cmp	r7, #0
   1dd48:	mov	r6, r0
   1dd4c:	bne	1e1b4 <readstat_parse_dta+0xc20>
   1dd50:	cmp	r6, #0
   1dd54:	bne	1d8a4 <readstat_parse_dta+0x310>
   1dd58:	ldr	r1, [r5, #148]	; 0x94
   1dd5c:	cmp	r1, #0
   1dd60:	movgt	r7, r6
   1dd64:	bgt	1dd88 <readstat_parse_dta+0x7f4>
   1dd68:	b	1e570 <readstat_parse_dta+0xfdc>
   1dd6c:	ldr	r2, [sp, #136]	; 0x88
   1dd70:	ldr	r1, [r5, #148]	; 0x94
   1dd74:	ldr	r3, [r5, #160]	; 0xa0
   1dd78:	cmp	r1, r7
   1dd7c:	add	r3, r3, r2
   1dd80:	str	r3, [r5, #160]	; 0xa0
   1dd84:	ble	1e280 <readstat_parse_dta+0xcec>
   1dd88:	ldr	ip, [r5, #28]
   1dd8c:	lsl	r0, r7, #1
   1dd90:	mov	r3, #0
   1dd94:	mov	r2, fp
   1dd98:	mov	r1, r5
   1dd9c:	add	r7, r7, #1
   1dda0:	ldrh	r0, [ip, r0]
   1dda4:	bl	41b8 <dta_type_info@plt>
   1dda8:	cmp	r0, #0
   1ddac:	beq	1dd6c <readstat_parse_dta+0x7d8>
   1ddb0:	mov	r6, r0
   1ddb4:	b	1d8a4 <readstat_parse_dta+0x310>
   1ddb8:	cmp	r8, #0
   1ddbc:	bne	1e00c <readstat_parse_dta+0xa78>
   1ddc0:	mov	r6, #2
   1ddc4:	b	1d8a4 <readstat_parse_dta+0x310>
   1ddc8:	ldr	r7, [r5, #264]	; 0x108
   1ddcc:	cmp	r7, #0
   1ddd0:	beq	1d8a0 <readstat_parse_dta+0x30c>
   1ddd4:	ldr	r2, [pc, #2252]	; 1e6a8 <readstat_parse_dta+0x1114>
   1ddd8:	add	r3, r5, #288	; 0x120
   1dddc:	mov	r6, #15
   1dde0:	mov	r0, r3
   1dde4:	add	r2, pc, r2
   1dde8:	ldm	r2, {r1, lr}
   1ddec:	ldr	ip, [r2, #8]
   1ddf0:	str	r1, [r5, #288]	; 0x120
   1ddf4:	ldr	r1, [r2, #12]
   1ddf8:	str	lr, [r5, #292]	; 0x124
   1ddfc:	str	ip, [r5, #296]	; 0x128
   1de00:	ldr	lr, [r2, #16]
   1de04:	str	r1, [r5, #300]	; 0x12c
   1de08:	ldr	ip, [r2, #20]
   1de0c:	ldr	r1, [r2, #24]
   1de10:	str	lr, [r5, #304]	; 0x130
   1de14:	ldr	r2, [r2, #28]
   1de18:	str	ip, [r5, #308]	; 0x134
   1de1c:	str	r1, [r5, #312]	; 0x138
   1de20:	ldr	r1, [r5, #276]	; 0x114
   1de24:	str	r2, [r5, #316]	; 0x13c
   1de28:	blx	r7
   1de2c:	b	1d8a4 <readstat_parse_dta+0x310>
   1de30:	ldrh	r0, [sp, #140]	; 0x8c
   1de34:	bl	3e7c <byteswap2@plt>
   1de38:	strh	r0, [sp, #140]	; 0x8c
   1de3c:	ldr	r0, [sp, #142]	; 0x8e
   1de40:	bl	3d68 <byteswap4@plt>
   1de44:	b	1d908 <readstat_parse_dta+0x374>
   1de48:	ldr	r2, [pc, #2140]	; 1e6ac <readstat_parse_dta+0x1118>
   1de4c:	add	r3, r5, #288	; 0x120
   1de50:	mov	r6, #15
   1de54:	mov	r0, r3
   1de58:	add	r2, pc, r2
   1de5c:	ldm	r2, {r1, ip}
   1de60:	ldrh	lr, [r2, #28]
   1de64:	str	r1, [r5, #288]	; 0x120
   1de68:	ldr	r1, [r2, #8]
   1de6c:	strh	lr, [r3, #28]
   1de70:	str	ip, [r5, #292]	; 0x124
   1de74:	ldr	lr, [r2, #12]
   1de78:	str	r1, [r5, #296]	; 0x128
   1de7c:	ldr	ip, [r2, #16]
   1de80:	ldr	r1, [r2, #20]
   1de84:	str	lr, [r5, #300]	; 0x12c
   1de88:	ldr	r2, [r2, #24]
   1de8c:	str	ip, [r5, #304]	; 0x130
   1de90:	str	r1, [r5, #308]	; 0x134
   1de94:	ldr	r1, [r5, #276]	; 0x114
   1de98:	str	r2, [r5, #312]	; 0x138
   1de9c:	blx	r7
   1dea0:	b	1d8a4 <readstat_parse_dta+0x310>
   1dea4:	mov	r2, #0
   1dea8:	mov	r3, #0
   1deac:	strd	r2, [r5, #168]	; 0xa8
   1deb0:	str	r1, [r5, #176]	; 0xb0
   1deb4:	str	r0, [r5, #180]	; 0xb4
   1deb8:	b	1d9e0 <readstat_parse_dta+0x44c>
   1debc:	ldr	r1, [pc, #2028]	; 1e6b0 <readstat_parse_dta+0x111c>
   1dec0:	mov	r0, r5
   1dec4:	add	r1, pc, r1
   1dec8:	bl	1cb90 <dta_read_tag>
   1decc:	subs	r6, r0, #0
   1ded0:	bne	1d8a4 <readstat_parse_dta+0x310>
   1ded4:	ldr	r1, [r5, #8]
   1ded8:	cmp	r1, #2
   1dedc:	beq	1e244 <readstat_parse_dta+0xcb0>
   1dee0:	cmp	r1, #1
   1dee4:	beq	1e498 <readstat_parse_dta+0xf04>
   1dee8:	ldrh	r0, [sp, #96]	; 0x60
   1deec:	b	1da44 <readstat_parse_dta+0x4b0>
   1def0:	mov	r0, r8
   1def4:	mov	r6, #2
   1def8:	bl	3e94 <free@plt>
   1defc:	b	1d8a4 <readstat_parse_dta+0x310>
   1df00:	ldr	fp, [sp, #16]
   1df04:	ldr	r4, [sp, #48]	; 0x30
   1df08:	ldr	r3, [r5, #92]	; 0x5c
   1df0c:	cmp	r3, #0
   1df10:	beq	1e75c <readstat_parse_dta+0x11c8>
   1df14:	ldrb	r3, [r5, #192]	; 0xc0
   1df18:	ldr	r7, [r5, #280]	; 0x118
   1df1c:	tst	r3, #4
   1df20:	beq	1df30 <readstat_parse_dta+0x99c>
   1df24:	ldr	r1, [r5, #244]	; 0xf4
   1df28:	cmp	r1, #0
   1df2c:	beq	1efd4 <readstat_parse_dta+0x1a40>
   1df30:	ldr	r1, [pc, #1916]	; 1e6b4 <readstat_parse_dta+0x1120>
   1df34:	mov	r0, r5
   1df38:	add	r1, pc, r1
   1df3c:	bl	1cb90 <dta_read_tag>
   1df40:	subs	r6, r0, #0
   1df44:	bne	1d8a4 <readstat_parse_dta+0x310>
   1df48:	ldr	r3, [pc, #1896]	; 1e6b8 <readstat_parse_dta+0x1124>
   1df4c:	movw	r9, #12092	; 0x2f3c
   1df50:	movt	r9, #26723	; 0x6863
   1df54:	mov	r8, r6
   1df58:	add	r3, pc, r3
   1df5c:	str	r3, [sp, #24]
   1df60:	movw	r3, #25404	; 0x633c
   1df64:	movt	r3, #15976	; 0x3e68
   1df68:	str	r3, [sp, #16]
   1df6c:	ldrb	r3, [r5, #192]	; 0xc0
   1df70:	ldr	r6, [r7, #12]
   1df74:	ldr	r2, [r7, #20]
   1df78:	tst	r3, #4
   1df7c:	beq	1e5ec <readstat_parse_dta+0x1058>
   1df80:	mov	r1, #4
   1df84:	mov	r0, fp
   1df88:	blx	r6
   1df8c:	cmp	r0, #4
   1df90:	bne	1e600 <readstat_parse_dta+0x106c>
   1df94:	ldr	r3, [sp, #136]	; 0x88
   1df98:	cmp	r3, r9
   1df9c:	beq	1e734 <readstat_parse_dta+0x11a0>
   1dfa0:	ldr	r2, [sp, #16]
   1dfa4:	cmp	r3, r2
   1dfa8:	bne	1f2a4 <readstat_parse_dta+0x1d10>
   1dfac:	mov	r3, #1
   1dfb0:	strb	r3, [sp, #96]	; 0x60
   1dfb4:	ldr	r6, [r5, #92]	; 0x5c
   1dfb8:	ldr	r3, [r7, #12]
   1dfbc:	ldr	r2, [r7, #20]
   1dfc0:	cmp	r6, #2
   1dfc4:	beq	1e608 <readstat_parse_dta+0x1074>
   1dfc8:	mov	r1, #4
   1dfcc:	mov	r0, fp
   1dfd0:	blx	r3
   1dfd4:	cmp	r0, #4
   1dfd8:	bne	1f10c <readstat_parse_dta+0x1b78>
   1dfdc:	ldrb	r3, [r5, #192]	; 0xc0
   1dfe0:	ldr	r6, [sp, #136]	; 0x88
   1dfe4:	tst	r3, #1
   1dfe8:	bne	1ed0c <readstat_parse_dta+0x1778>
   1dfec:	ldrb	r3, [sp, #96]	; 0x60
   1dff0:	cmp	r3, #0
   1dff4:	bne	1e588 <readstat_parse_dta+0xff4>
   1dff8:	cmp	r6, #0
   1dffc:	beq	1e74c <readstat_parse_dta+0x11b8>
   1e000:	mov	r6, #32
   1e004:	cmp	r8, #0
   1e008:	beq	1d8a4 <readstat_parse_dta+0x310>
   1e00c:	mov	r0, r8
   1e010:	bl	3e94 <free@plt>
   1e014:	b	1d8a4 <readstat_parse_dta+0x310>
   1e018:	mov	r3, #1
   1e01c:	str	r3, [sp, #24]
   1e020:	b	1d750 <readstat_parse_dta+0x1bc>
   1e024:	ldr	ip, [pc, #1680]	; 1e6bc <readstat_parse_dta+0x1128>
   1e028:	add	fp, sp, #136	; 0x88
   1e02c:	mov	r3, #2
   1e030:	mov	r2, fp
   1e034:	mov	r0, r5
   1e038:	ldr	r1, [pc, #1664]	; 1e6c0 <readstat_parse_dta+0x112c>
   1e03c:	add	ip, pc, ip
   1e040:	add	r1, pc, r1
   1e044:	str	ip, [sp]
   1e048:	bl	1d510 <dta_read_chunk>
   1e04c:	subs	r6, r0, #0
   1e050:	bne	1d860 <readstat_parse_dta+0x2cc>
   1e054:	ldr	r2, [sp, #36]	; 0x24
   1e058:	ldr	r3, [sp, #48]	; 0x30
   1e05c:	ldrh	r0, [sp, #136]	; 0x88
   1e060:	cmp	r3, r2
   1e064:	streq	r0, [sp, #32]
   1e068:	beq	1e074 <readstat_parse_dta+0xae0>
   1e06c:	bl	3e7c <byteswap2@plt>
   1e070:	str	r0, [sp, #32]
   1e074:	cmp	sl, #118	; 0x76
   1e078:	beq	1d7d8 <readstat_parse_dta+0x244>
   1e07c:	ldr	ip, [pc, #1600]	; 1e6c4 <readstat_parse_dta+0x1130>
   1e080:	mov	r3, #4
   1e084:	mov	r2, fp
   1e088:	mov	r0, r5
   1e08c:	ldr	r1, [pc, #1588]	; 1e6c8 <readstat_parse_dta+0x1134>
   1e090:	add	ip, pc, ip
   1e094:	add	r1, pc, r1
   1e098:	str	ip, [sp]
   1e09c:	bl	1d510 <dta_read_chunk>
   1e0a0:	subs	r6, r0, #0
   1e0a4:	bne	1d860 <readstat_parse_dta+0x2cc>
   1e0a8:	ldr	r2, [sp, #36]	; 0x24
   1e0ac:	ldr	r3, [sp, #48]	; 0x30
   1e0b0:	ldr	r0, [sp, #136]	; 0x88
   1e0b4:	cmp	r3, r2
   1e0b8:	beq	1e0c0 <readstat_parse_dta+0xb2c>
   1e0bc:	bl	3d68 <byteswap4@plt>
   1e0c0:	mov	r2, r0
   1e0c4:	mov	r3, #0
   1e0c8:	b	1d82c <readstat_parse_dta+0x298>
   1e0cc:	bl	4200 <readstat_malloc@plt>
   1e0d0:	subs	r7, r0, #0
   1e0d4:	bne	1e824 <readstat_parse_dta+0x1290>
   1e0d8:	mov	r6, #3
   1e0dc:	b	1d8a4 <readstat_parse_dta+0x310>
   1e0e0:	bl	4200 <readstat_malloc@plt>
   1e0e4:	ldrb	r1, [sp, #75]	; 0x4b
   1e0e8:	mov	sl, r0
   1e0ec:	ldr	r3, [r9, #12]
   1e0f0:	ldr	r2, [r9, #20]
   1e0f4:	blx	r3
   1e0f8:	ldrb	r3, [sp, #75]	; 0x4b
   1e0fc:	cmp	r0, r3
   1e100:	bne	1e518 <readstat_parse_dta+0xf84>
   1e104:	ldrb	r3, [r5, #192]	; 0xc0
   1e108:	tst	r3, #4
   1e10c:	subeq	r0, r0, #1
   1e110:	strbeq	r0, [sp, #75]	; 0x4b
   1e114:	ldrb	r3, [sl]
   1e118:	cmp	r3, #0
   1e11c:	beq	1e174 <readstat_parse_dta+0xbe0>
   1e120:	ldrb	r1, [sp, #75]	; 0x4b
   1e124:	ldr	r3, [sp, #16]
   1e128:	add	r2, sl, r1
   1e12c:	ldrb	r2, [r2, #-1]
   1e130:	adds	r3, r3, #0
   1e134:	movne	r3, #1
   1e138:	cmp	r2, #0
   1e13c:	movne	r3, #0
   1e140:	cmp	r3, #0
   1e144:	bne	1ef9c <readstat_parse_dta+0x1a08>
   1e148:	mov	r2, fp
   1e14c:	mov	r0, sl
   1e150:	ldr	r3, [r5, #264]	; 0x108
   1e154:	ldr	ip, [r5, #276]	; 0x114
   1e158:	str	ip, [sp]
   1e15c:	bl	42c0 <dta_parse_timestamp@plt>
   1e160:	subs	r6, r0, #0
   1e164:	bne	1e188 <readstat_parse_dta+0xbf4>
   1e168:	mov	r0, fp
   1e16c:	bl	3e28 <mktime@plt>
   1e170:	str	r0, [r5, #12]
   1e174:	ldr	r1, [pc, #1360]	; 1e6cc <readstat_parse_dta+0x1138>
   1e178:	mov	r0, r5
   1e17c:	add	r1, pc, r1
   1e180:	bl	1cb90 <dta_read_tag>
   1e184:	mov	r6, r0
   1e188:	mov	r0, r8
   1e18c:	bl	3e94 <free@plt>
   1e190:	mov	r0, sl
   1e194:	bl	3e94 <free@plt>
   1e198:	b	1db18 <readstat_parse_dta+0x584>
   1e19c:	mov	r0, r8
   1e1a0:	mov	r6, #3
   1e1a4:	bl	3e94 <free@plt>
   1e1a8:	b	1d8a4 <readstat_parse_dta+0x310>
   1e1ac:	cmp	r7, #0
   1e1b0:	beq	1d8a4 <readstat_parse_dta+0x310>
   1e1b4:	mov	r0, r7
   1e1b8:	bl	3e94 <free@plt>
   1e1bc:	b	1dd50 <readstat_parse_dta+0x7bc>
   1e1c0:	ldr	ip, [pc, #1288]	; 1e6d0 <readstat_parse_dta+0x113c>
   1e1c4:	mov	r3, r8
   1e1c8:	mov	r0, r5
   1e1cc:	ldr	r1, [pc, #1280]	; 1e6d4 <readstat_parse_dta+0x1140>
   1e1d0:	add	ip, pc, ip
   1e1d4:	add	r1, pc, r1
   1e1d8:	str	ip, [sp]
   1e1dc:	bl	1d510 <dta_read_chunk>
   1e1e0:	subs	r6, r0, #0
   1e1e4:	moveq	r7, r6
   1e1e8:	beq	1dc70 <readstat_parse_dta+0x6dc>
   1e1ec:	b	1d8a4 <readstat_parse_dta+0x310>
   1e1f0:	ldr	r1, [pc, #1248]	; 1e6d8 <readstat_parse_dta+0x1144>
   1e1f4:	mov	r0, r5
   1e1f8:	add	r1, pc, r1
   1e1fc:	bl	1cb90 <dta_read_tag>
   1e200:	subs	r6, r0, #0
   1e204:	bne	1e00c <readstat_parse_dta+0xa78>
   1e208:	ldr	r1, [pc, #1228]	; 1e6dc <readstat_parse_dta+0x1148>
   1e20c:	mov	r0, r5
   1e210:	add	r1, pc, r1
   1e214:	bl	1cb90 <dta_read_tag>
   1e218:	subs	r6, r0, #0
   1e21c:	bne	1e00c <readstat_parse_dta+0xa78>
   1e220:	mov	r1, #1
   1e224:	add	r0, sp, #75	; 0x4b
   1e228:	ldr	r3, [r9, #12]
   1e22c:	ldr	r2, [r9, #20]
   1e230:	blx	r3
   1e234:	cmp	r0, #1
   1e238:	bne	1def0 <readstat_parse_dta+0x95c>
   1e23c:	ldrb	r0, [sp, #75]	; 0x4b
   1e240:	b	1daf4 <readstat_parse_dta+0x560>
   1e244:	add	r0, sp, #96	; 0x60
   1e248:	ldr	r3, [r9, #12]
   1e24c:	ldr	r2, [r9, #20]
   1e250:	blx	r3
   1e254:	cmp	r0, #2
   1e258:	bne	1ddc0 <readstat_parse_dta+0x82c>
   1e25c:	ldrb	r3, [r5, #192]	; 0xc0
   1e260:	ldrh	r0, [sp, #96]	; 0x60
   1e264:	tst	r3, #1
   1e268:	beq	1da40 <readstat_parse_dta+0x4ac>
   1e26c:	bl	3e7c <byteswap2@plt>
   1e270:	b	1da40 <readstat_parse_dta+0x4ac>
   1e274:	ldr	r4, [sp, #48]	; 0x30
   1e278:	mov	r6, #4
   1e27c:	b	1d8a4 <readstat_parse_dta+0x310>
   1e280:	cmp	r1, #0
   1e284:	ble	1e570 <readstat_parse_dta+0xfdc>
   1e288:	cmp	r3, #0
   1e28c:	beq	1ec70 <readstat_parse_dta+0x16dc>
   1e290:	ldr	r3, [r5, #248]	; 0xf8
   1e294:	cmp	r3, #0
   1e298:	beq	1df08 <readstat_parse_dta+0x974>
   1e29c:	cmp	r1, #0
   1e2a0:	ble	1df08 <readstat_parse_dta+0x974>
   1e2a4:	add	r2, sp, #96	; 0x60
   1e2a8:	ldr	r3, [pc, #1072]	; 1e6e0 <readstat_parse_dta+0x114c>
   1e2ac:	mov	r9, #0
   1e2b0:	mov	r7, r9
   1e2b4:	str	fp, [sp, #16]
   1e2b8:	str	r2, [sp, #24]
   1e2bc:	ldr	r2, [pc, #1056]	; 1e6e4 <readstat_parse_dta+0x1150>
   1e2c0:	str	r4, [sp, #48]	; 0x30
   1e2c4:	add	r3, pc, r3
   1e2c8:	str	r3, [sp, #32]
   1e2cc:	add	r3, sp, #80	; 0x50
   1e2d0:	add	r2, pc, r2
   1e2d4:	mov	fp, r3
   1e2d8:	str	r2, [sp, #36]	; 0x24
   1e2dc:	b	1e3d8 <readstat_parse_dta+0xe44>
   1e2e0:	ldr	r6, [sp, #80]	; 0x50
   1e2e4:	add	r6, r6, #1
   1e2e8:	str	r6, [sp, #80]	; 0x50
   1e2ec:	movw	r1, #2152	; 0x868
   1e2f0:	mov	r0, #1
   1e2f4:	ldr	r8, [r5, #228]	; 0xe4
   1e2f8:	bl	3d2c <calloc@plt>
   1e2fc:	ldr	r2, [r5, #36]	; 0x24
   1e300:	mov	r4, r0
   1e304:	mov	r1, #300	; 0x12c
   1e308:	add	r0, r0, #8
   1e30c:	ldr	r3, [r5, #76]	; 0x4c
   1e310:	ldr	ip, [r5, #236]	; 0xec
   1e314:	str	sl, [r4]
   1e318:	str	r7, [r4, #4]
   1e31c:	mla	r2, r7, r3, r2
   1e320:	str	r6, [r4, #1596]	; 0x63c
   1e324:	str	r9, [r4, #2148]	; 0x864
   1e328:	lsl	r6, r7, #2
   1e32c:	str	ip, [sp]
   1e330:	bl	420c <readstat_convert@plt>
   1e334:	ldr	r2, [r5, #68]	; 0x44
   1e338:	ldr	r3, [r5, #88]	; 0x58
   1e33c:	mul	r1, r7, r3
   1e340:	ldrb	r0, [r2, r1]
   1e344:	add	r2, r2, r1
   1e348:	cmp	r0, #0
   1e34c:	bne	1e480 <readstat_parse_dta+0xeec>
   1e350:	ldr	r2, [r5, #52]	; 0x34
   1e354:	ldr	r3, [r5, #80]	; 0x50
   1e358:	mul	r1, r7, r3
   1e35c:	ldrb	r0, [r2, r1]
   1e360:	add	r2, r2, r1
   1e364:	cmp	r0, #0
   1e368:	bne	1e420 <readstat_parse_dta+0xe8c>
   1e36c:	ldr	ip, [r5, #60]	; 0x3c
   1e370:	mov	r0, r7
   1e374:	ldr	r2, [r5, #84]	; 0x54
   1e378:	ldr	r1, [r5, #228]	; 0xe4
   1e37c:	str	r4, [r8, r6]
   1e380:	ldr	r4, [r5, #248]	; 0xf8
   1e384:	mul	r2, r2, r7
   1e388:	ldr	r1, [r1, r6]
   1e38c:	ldrb	r3, [ip, r2]
   1e390:	cmp	r3, #0
   1e394:	ldr	r3, [r5, #276]	; 0x114
   1e398:	addne	r2, ip, r2
   1e39c:	moveq	r2, #0
   1e3a0:	blx	r4
   1e3a4:	cmp	r0, #1
   1e3a8:	beq	1e274 <readstat_parse_dta+0xce0>
   1e3ac:	cmp	r0, #2
   1e3b0:	addne	r9, r9, #1
   1e3b4:	bne	1e3c8 <readstat_parse_dta+0xe34>
   1e3b8:	ldr	r3, [r5, #228]	; 0xe4
   1e3bc:	mov	r2, #1
   1e3c0:	ldr	r3, [r3, r6]
   1e3c4:	str	r2, [r3, #2144]	; 0x860
   1e3c8:	ldr	r3, [r5, #148]	; 0x94
   1e3cc:	add	r7, r7, #1
   1e3d0:	cmp	r7, r3
   1e3d4:	bge	1df00 <readstat_parse_dta+0x96c>
   1e3d8:	ldr	ip, [r5, #28]
   1e3dc:	lsl	r0, r7, #1
   1e3e0:	mov	r2, fp
   1e3e4:	mov	r1, r5
   1e3e8:	ldr	r3, [sp, #24]
   1e3ec:	ldrh	r0, [ip, r0]
   1e3f0:	bl	41b8 <dta_type_info@plt>
   1e3f4:	subs	r6, r0, #0
   1e3f8:	bne	1ec68 <readstat_parse_dta+0x16d4>
   1e3fc:	ldr	sl, [sp, #96]	; 0x60
   1e400:	cmp	sl, #0
   1e404:	beq	1e2e0 <readstat_parse_dta+0xd4c>
   1e408:	cmp	sl, #6
   1e40c:	ldrne	r6, [sp, #80]	; 0x50
   1e410:	moveq	sl, r6
   1e414:	streq	r6, [sp, #80]	; 0x50
   1e418:	streq	r6, [sp, #96]	; 0x60
   1e41c:	b	1e2ec <readstat_parse_dta+0xd58>
   1e420:	ldr	ip, [r5, #236]	; 0xec
   1e424:	add	sl, r4, #308	; 0x134
   1e428:	mov	r1, #256	; 0x100
   1e42c:	mov	r0, sl
   1e430:	str	ip, [sp]
   1e434:	bl	420c <readstat_convert@plt>
   1e438:	ldrb	r3, [r4, #308]	; 0x134
   1e43c:	cmp	r3, #37	; 0x25
   1e440:	beq	1e4bc <readstat_parse_dta+0xf28>
   1e444:	mov	r0, sl
   1e448:	ldr	r2, [sp, #16]
   1e44c:	ldr	r1, [sp, #32]
   1e450:	bl	4260 <__isoc99_sscanf@plt>
   1e454:	cmp	r0, #1
   1e458:	beq	1e474 <readstat_parse_dta+0xee0>
   1e45c:	mov	r0, sl
   1e460:	ldr	r2, [sp, #16]
   1e464:	ldr	r1, [sp, #36]	; 0x24
   1e468:	bl	4260 <__isoc99_sscanf@plt>
   1e46c:	cmp	r0, #1
   1e470:	bne	1e36c <readstat_parse_dta+0xdd8>
   1e474:	ldr	r3, [sp, #136]	; 0x88
   1e478:	str	r3, [r4, #2136]	; 0x858
   1e47c:	b	1e36c <readstat_parse_dta+0xdd8>
   1e480:	ldr	ip, [r5, #236]	; 0xec
   1e484:	mov	r1, #1024	; 0x400
   1e488:	add	r0, r4, #564	; 0x234
   1e48c:	str	ip, [sp]
   1e490:	bl	420c <readstat_convert@plt>
   1e494:	b	1e350 <readstat_parse_dta+0xdbc>
   1e498:	add	r0, sp, #80	; 0x50
   1e49c:	ldr	r3, [r9, #12]
   1e4a0:	ldr	r2, [r9, #20]
   1e4a4:	blx	r3
   1e4a8:	cmp	r0, #1
   1e4ac:	bne	1ddc0 <readstat_parse_dta+0x82c>
   1e4b0:	ldrb	r0, [sp, #80]	; 0x50
   1e4b4:	strh	r0, [sp, #96]	; 0x60
   1e4b8:	b	1da44 <readstat_parse_dta+0x4b0>
   1e4bc:	ldrb	r3, [r4, #309]	; 0x135
   1e4c0:	cmp	r3, #45	; 0x2d
   1e4c4:	moveq	r3, #1
   1e4c8:	streq	r3, [r4, #2132]	; 0x854
   1e4cc:	beq	1e444 <readstat_parse_dta+0xeb0>
   1e4d0:	cmp	r3, #126	; 0x7e
   1e4d4:	moveq	r3, #2
   1e4d8:	movne	r3, #3
   1e4dc:	str	r3, [r4, #2132]	; 0x854
   1e4e0:	b	1e444 <readstat_parse_dta+0xeb0>
   1e4e4:	ldr	r3, [r5, #148]	; 0x94
   1e4e8:	cmp	r3, #0
   1e4ec:	ble	1dc84 <readstat_parse_dta+0x6f0>
   1e4f0:	ldr	r2, [r5, #28]
   1e4f4:	sub	r0, r3, #1
   1e4f8:	sub	r3, r7, #1
   1e4fc:	add	r0, r7, r0
   1e500:	sub	r2, r2, #2
   1e504:	ldrb	r1, [r3, #1]!
   1e508:	cmp	r0, r3
   1e50c:	strh	r1, [r2, #2]!
   1e510:	bne	1e504 <readstat_parse_dta+0xf70>
   1e514:	b	1dc84 <readstat_parse_dta+0x6f0>
   1e518:	mov	r0, r8
   1e51c:	bl	3e94 <free@plt>
   1e520:	cmp	sl, #0
   1e524:	beq	1ddc0 <readstat_parse_dta+0x82c>
   1e528:	mov	r0, sl
   1e52c:	mov	r6, #2
   1e530:	bl	3e94 <free@plt>
   1e534:	b	1d8a4 <readstat_parse_dta+0x310>
   1e538:	bl	3d50 <byteswap8@plt>
   1e53c:	ldrb	r3, [r5, #192]	; 0xc0
   1e540:	strd	r0, [r5, #120]	; 0x78
   1e544:	ldrd	r0, [sp, #216]	; 0xd8
   1e548:	tst	r3, #1
   1e54c:	beq	1dc14 <readstat_parse_dta+0x680>
   1e550:	bl	3d50 <byteswap8@plt>
   1e554:	ldrb	r3, [r5, #192]	; 0xc0
   1e558:	strd	r0, [r5, #128]	; 0x80
   1e55c:	ldrd	r0, [sp, #224]	; 0xe0
   1e560:	tst	r3, #1
   1e564:	beq	1dc1c <readstat_parse_dta+0x688>
   1e568:	bl	3d50 <byteswap8@plt>
   1e56c:	b	1dc1c <readstat_parse_dta+0x688>
   1e570:	ldrd	r2, [r5, #152]	; 0x98
   1e574:	cmp	r2, #1
   1e578:	sbcs	r3, r3, #0
   1e57c:	ldrge	r3, [r5, #160]	; 0xa0
   1e580:	bge	1e288 <readstat_parse_dta+0xcf4>
   1e584:	b	1e290 <readstat_parse_dta+0xcfc>
   1e588:	cmp	r6, #1048576	; 0x100000
   1e58c:	cmpls	r3, #1
   1e590:	movne	sl, #1
   1e594:	moveq	sl, #0
   1e598:	bne	1e000 <readstat_parse_dta+0xa6c>
   1e59c:	ldr	r3, [r5, #244]	; 0xf4
   1e5a0:	cmp	r3, #0
   1e5a4:	beq	1e5b4 <readstat_parse_dta+0x1020>
   1e5a8:	ldr	r3, [r5, #96]	; 0x60
   1e5ac:	cmp	r6, r3, lsl #1
   1e5b0:	bcs	1ec78 <readstat_parse_dta+0x16e4>
   1e5b4:	mov	r0, r6
   1e5b8:	mov	r1, #1
   1e5bc:	ldr	r3, [r7, #8]
   1e5c0:	ldr	r2, [r7, #20]
   1e5c4:	blx	r3
   1e5c8:	cmn	r0, #1
   1e5cc:	beq	1f104 <readstat_parse_dta+0x1b70>
   1e5d0:	ldr	r1, [pc, #272]	; 1e6e8 <readstat_parse_dta+0x1154>
   1e5d4:	mov	r0, r5
   1e5d8:	add	r1, pc, r1
   1e5dc:	bl	1cb90 <dta_read_tag>
   1e5e0:	subs	r6, r0, #0
   1e5e4:	beq	1df6c <readstat_parse_dta+0x9d8>
   1e5e8:	b	1e004 <readstat_parse_dta+0xa70>
   1e5ec:	mov	r1, #1
   1e5f0:	add	r0, sp, #96	; 0x60
   1e5f4:	blx	r6
   1e5f8:	cmp	r0, #1
   1e5fc:	beq	1dfb4 <readstat_parse_dta+0xa20>
   1e600:	mov	r6, #2
   1e604:	b	1e004 <readstat_parse_dta+0xa70>
   1e608:	mov	r1, r6
   1e60c:	mov	r0, fp
   1e610:	blx	r3
   1e614:	cmp	r0, #2
   1e618:	bne	1ddb8 <readstat_parse_dta+0x824>
   1e61c:	ldrb	r3, [r5, #192]	; 0xc0
   1e620:	ldrh	r0, [sp, #136]	; 0x88
   1e624:	tst	r3, #1
   1e628:	bne	1ef90 <readstat_parse_dta+0x19fc>
   1e62c:	mov	r6, r0
   1e630:	b	1dfec <readstat_parse_dta+0xa58>
   1e634:	.word	0x0000a704
   1e638:	.word	0x0000a6f4
   1e63c:	.word	0x0000a6e8
   1e640:	.word	0x0000aa50
   1e644:	.word	0x0000a6cc
   1e648:	.word	0x0000a6b0
   1e64c:	.word	0x0000a69c
   1e650:	.word	0x0000a690
   1e654:	.word	0x0000a670
   1e658:	.word	0x0000a604
   1e65c:	.word	0x0000a5fc
   1e660:	.word	0x0000a5c4
   1e664:	.word	0x0000a5bc
   1e668:	.word	0x0000a2d4
   1e66c:	.word	0x0000a2c0
   1e670:	.word	0x0000a218
   1e674:	.word	0x0000a20c
   1e678:	.word	0x0000a378
   1e67c:	.word	0x0000a360
   1e680:	.word	0x0000a180
   1e684:	.word	0x0000a168
   1e688:	.word	0x0000a170
   1e68c:	.word	0x0000a158
   1e690:	.word	0x0000a160
   1e694:	.word	0x0000a148
   1e698:	.word	0x0000a158
   1e69c:	.word	0x0000a140
   1e6a0:	.word	0x0000a15c
   1e6a4:	.word	0x0000a144
   1e6a8:	.word	0x00009f4c
   1e6ac:	.word	0x00009eb8
   1e6b0:	.word	0x00009ef4
   1e6b4:	.word	0x00009fa8
   1e6b8:	.word	0x00009f9c
   1e6bc:	.word	0x00009d68
   1e6c0:	.word	0x00009d60
   1e6c4:	.word	0x00009d20
   1e6c8:	.word	0x00009d18
   1e6cc:	.word	0x00009c5c
   1e6d0:	.word	0x00009e00
   1e6d4:	.word	0x00009de8
   1e6d8:	.word	0x00009bc8
   1e6dc:	.word	0x00009bbc
   1e6e0:	.word	0x00009bdc
   1e6e4:	.word	0x00009bd8
   1e6e8:	.word	0x0000992c
   1e6ec:	.word	0x000099e0
   1e6f0:	.word	0x00009764
   1e6f4:	.word	0x00009620
   1e6f8:	.word	0x00009628
   1e6fc:	.word	0x00009604
   1e700:	.word	0x000095f4
   1e704:	.word	0x000091f0
   1e708:	.word	0x000091e0
   1e70c:	.word	0x000091e0
   1e710:	.word	0x000091d0
   1e714:	.word	0x0000922c
   1e718:	.word	0x000091fc
   1e71c:	.word	0x0000919c
   1e720:	.word	0x00009188
   1e724:	.word	0x00008ea0
   1e728:	.word	0x00008e5c
   1e72c:	.word	0x00008e94
   1e730:	.word	0x00008e10
   1e734:	ldr	r1, [pc, #-80]	; 1e6ec <readstat_parse_dta+0x1158>
   1e738:	mov	r0, r5
   1e73c:	add	r1, pc, r1
   1e740:	bl	1cb90 <dta_read_tag>
   1e744:	subs	r6, r0, #0
   1e748:	bne	1e004 <readstat_parse_dta+0xa70>
   1e74c:	cmp	r8, #0
   1e750:	beq	1e75c <readstat_parse_dta+0x11c8>
   1e754:	mov	r0, r8
   1e758:	bl	3e94 <free@plt>
   1e75c:	ldrb	r3, [r5, #192]	; 0xc0
   1e760:	ands	r0, r3, #4
   1e764:	bne	1ed18 <readstat_parse_dta+0x1784>
   1e768:	mov	r1, #1
   1e76c:	ldr	r3, [r4, #8]
   1e770:	ldr	r2, [r4, #20]
   1e774:	blx	r3
   1e778:	asr	r1, r0, #31
   1e77c:	mvn	r3, #0
   1e780:	mvn	r2, #0
   1e784:	cmp	r1, r3
   1e788:	cmpeq	r0, r2
   1e78c:	strd	r0, [r5, #120]	; 0x78
   1e790:	beq	1d8a0 <readstat_parse_dta+0x30c>
   1e794:	add	r2, r5, #152	; 0x98
   1e798:	ldrb	lr, [r5, #192]	; 0xc0
   1e79c:	ldm	r2, {r2, r6, ip}
   1e7a0:	umull	r8, r9, r2, ip
   1e7a4:	mla	r9, ip, r6, r9
   1e7a8:	adds	r2, r8, r0
   1e7ac:	adc	r3, r9, r1
   1e7b0:	tst	lr, #4
   1e7b4:	strd	r2, [r5, #136]	; 0x88
   1e7b8:	bne	1ed18 <readstat_parse_dta+0x1784>
   1e7bc:	ldr	r3, [r5, #256]	; 0x100
   1e7c0:	cmp	r3, #0
   1e7c4:	beq	1e94c <readstat_parse_dta+0x13b8>
   1e7c8:	mov	r1, #0
   1e7cc:	ldr	r0, [r5, #120]	; 0x78
   1e7d0:	ldr	r3, [r5, #280]	; 0x118
   1e7d4:	ldr	r6, [r3, #8]
   1e7d8:	ldr	r2, [r3, #20]
   1e7dc:	blx	r6
   1e7e0:	cmn	r0, #1
   1e7e4:	beq	1f030 <readstat_parse_dta+0x1a9c>
   1e7e8:	ldr	r1, [pc, #-256]	; 1e6f0 <readstat_parse_dta+0x115c>
   1e7ec:	mov	r0, r5
   1e7f0:	add	r1, pc, r1
   1e7f4:	bl	1cb90 <dta_read_tag>
   1e7f8:	subs	r6, r0, #0
   1e7fc:	bne	1d8a4 <readstat_parse_dta+0x310>
   1e800:	mov	r0, r5
   1e804:	bl	1cb00 <dta_update_progress>
   1e808:	subs	r6, r0, #0
   1e80c:	bne	1d8a4 <readstat_parse_dta+0x310>
   1e810:	ldr	r0, [r5, #160]	; 0xa0
   1e814:	ldr	sl, [r5, #280]	; 0x118
   1e818:	cmp	r0, #0
   1e81c:	moveq	r7, r0
   1e820:	bne	1e0cc <readstat_parse_dta+0xb38>
   1e824:	ldrd	r8, [r5, #176]	; 0xb0
   1e828:	orrs	r3, r8, r9
   1e82c:	beq	1e850 <readstat_parse_dta+0x12bc>
   1e830:	ldr	r0, [r5, #160]	; 0xa0
   1e834:	mov	r1, #1
   1e838:	ldr	r3, [sl, #8]
   1e83c:	ldr	r2, [sl, #20]
   1e840:	mul	r0, r0, r8
   1e844:	blx	r3
   1e848:	cmn	r0, #1
   1e84c:	beq	1f11c <readstat_parse_dta+0x1b88>
   1e850:	mov	r8, #0
   1e854:	mov	r9, #0
   1e858:	b	1e8bc <readstat_parse_dta+0x1328>
   1e85c:	ldr	r3, [sl, #12]
   1e860:	ldr	r2, [sl, #20]
   1e864:	ldr	r1, [r5, #160]	; 0xa0
   1e868:	blx	r3
   1e86c:	ldr	r3, [r5, #160]	; 0xa0
   1e870:	mov	r1, r5
   1e874:	cmp	r0, r3
   1e878:	mov	r0, r7
   1e87c:	bne	1f134 <readstat_parse_dta+0x1ba0>
   1e880:	bl	1cd00 <dta_handle_row>
   1e884:	subs	r6, r0, #0
   1e888:	mov	r0, r5
   1e88c:	bne	1f120 <readstat_parse_dta+0x1b8c>
   1e890:	ldr	r3, [r5, #184]	; 0xb8
   1e894:	ldr	r2, [r5, #188]	; 0xbc
   1e898:	adds	r3, r3, #1
   1e89c:	adc	r2, r2, #0
   1e8a0:	str	r3, [r5, #184]	; 0xb8
   1e8a4:	str	r2, [r5, #188]	; 0xbc
   1e8a8:	bl	1cb00 <dta_update_progress>
   1e8ac:	adds	r8, r8, #1
   1e8b0:	adc	r9, r9, #0
   1e8b4:	subs	r6, r0, #0
   1e8b8:	bne	1f120 <readstat_parse_dta+0x1b8c>
   1e8bc:	ldrd	r2, [r5, #168]	; 0xa8
   1e8c0:	mov	r0, r7
   1e8c4:	cmp	r8, r2
   1e8c8:	sbcs	r1, r9, r3
   1e8cc:	blt	1e85c <readstat_parse_dta+0x12c8>
   1e8d0:	ldr	r0, [r5, #152]	; 0x98
   1e8d4:	ldr	lr, [r5, #156]	; 0x9c
   1e8d8:	ldr	r1, [r5, #176]	; 0xb0
   1e8dc:	ldr	ip, [r5, #180]	; 0xb4
   1e8e0:	subs	r1, r0, r1
   1e8e4:	str	r1, [sp, #40]	; 0x28
   1e8e8:	sbc	r1, lr, ip
   1e8ec:	str	r1, [sp, #44]	; 0x2c
   1e8f0:	ldrd	r8, [sp, #40]	; 0x28
   1e8f4:	cmp	r2, r8
   1e8f8:	sbcs	r1, r3, r9
   1e8fc:	bge	1e924 <readstat_parse_dta+0x1390>
   1e900:	ldr	r0, [r5, #160]	; 0xa0
   1e904:	subs	r3, r8, r2
   1e908:	mov	r1, #1
   1e90c:	ldr	r6, [sl, #8]
   1e910:	ldr	r2, [sl, #20]
   1e914:	mul	r0, r0, r3
   1e918:	blx	r6
   1e91c:	cmn	r0, #1
   1e920:	beq	1f11c <readstat_parse_dta+0x1b88>
   1e924:	cmp	r7, #0
   1e928:	beq	1e934 <readstat_parse_dta+0x13a0>
   1e92c:	mov	r0, r7
   1e930:	bl	3e94 <free@plt>
   1e934:	ldr	r1, [pc, #-584]	; 1e6f4 <readstat_parse_dta+0x1160>
   1e938:	mov	r0, r5
   1e93c:	add	r1, pc, r1
   1e940:	bl	1cb90 <dta_read_tag>
   1e944:	subs	r6, r0, #0
   1e948:	bne	1d8a4 <readstat_parse_dta+0x310>
   1e94c:	mov	r1, #0
   1e950:	ldr	r0, [r5, #136]	; 0x88
   1e954:	ldr	sl, [r5, #280]	; 0x118
   1e958:	ldr	r3, [sl, #8]
   1e95c:	ldr	r2, [sl, #20]
   1e960:	blx	r3
   1e964:	cmn	r0, #1
   1e968:	beq	1f0ac <readstat_parse_dta+0x1b18>
   1e96c:	ldr	r1, [pc, #-636]	; 1e6f8 <readstat_parse_dta+0x1164>
   1e970:	mov	r0, r5
   1e974:	add	r1, pc, r1
   1e978:	bl	1cb90 <dta_read_tag>
   1e97c:	subs	r6, r0, #0
   1e980:	bne	1d8a4 <readstat_parse_dta+0x310>
   1e984:	ldr	r3, [r5, #260]	; 0x104
   1e988:	cmp	r3, #0
   1e98c:	beq	1d8a4 <readstat_parse_dta+0x310>
   1e990:	ldr	r3, [pc, #-668]	; 1e6fc <readstat_parse_dta+0x1168>
   1e994:	mov	r8, r6
   1e998:	str	r4, [sp, #16]
   1e99c:	ldr	r1, [r5, #100]	; 0x64
   1e9a0:	str	r6, [sp, #24]
   1e9a4:	str	r6, [sp, #32]
   1e9a8:	add	r3, pc, r3
   1e9ac:	str	r3, [sp, #56]	; 0x38
   1e9b0:	movw	r3, #62465	; 0xf401
   1e9b4:	movt	r3, #1
   1e9b8:	str	r3, [sp, #64]	; 0x40
   1e9bc:	ldr	r3, [pc, #-708]	; 1e700 <readstat_parse_dta+0x116c>
   1e9c0:	add	r3, pc, r3
   1e9c4:	str	r3, [sp, #60]	; 0x3c
   1e9c8:	cmp	r1, #2
   1e9cc:	bne	1f05c <readstat_parse_dta+0x1ac8>
   1e9d0:	mov	r0, fp
   1e9d4:	ldr	r3, [sl, #12]
   1e9d8:	ldr	r2, [sl, #20]
   1e9dc:	blx	r3
   1e9e0:	cmp	r0, #1
   1e9e4:	bls	1f294 <readstat_parse_dta+0x1d00>
   1e9e8:	ldrb	r3, [r5, #192]	; 0xc0
   1e9ec:	ldrsh	r0, [sp, #136]	; 0x88
   1e9f0:	tst	r3, #1
   1e9f4:	bne	1f288 <readstat_parse_dta+0x1cf4>
   1e9f8:	lsr	r4, r0, #3
   1e9fc:	mov	r6, r0
   1ea00:	mov	r0, fp
   1ea04:	ldr	r3, [sl, #12]
   1ea08:	ldr	r2, [sl, #20]
   1ea0c:	ldr	r1, [r5, #104]	; 0x68
   1ea10:	blx	r3
   1ea14:	ldr	r3, [r5, #104]	; 0x68
   1ea18:	cmp	r0, r3
   1ea1c:	bcc	1f294 <readstat_parse_dta+0x1d00>
   1ea20:	mov	r1, #1
   1ea24:	ldr	r3, [sl, #8]
   1ea28:	ldr	r2, [sl, #20]
   1ea2c:	ldr	r0, [r5, #108]	; 0x6c
   1ea30:	blx	r3
   1ea34:	cmn	r0, #1
   1ea38:	beq	1f294 <readstat_parse_dta+0x1d00>
   1ea3c:	mov	r0, r8
   1ea40:	mov	r1, r6
   1ea44:	bl	42b4 <readstat_realloc@plt>
   1ea48:	subs	r8, r0, #0
   1ea4c:	beq	1f278 <readstat_parse_dta+0x1ce4>
   1ea50:	mov	r1, r6
   1ea54:	ldr	r3, [sl, #12]
   1ea58:	ldr	r2, [sl, #20]
   1ea5c:	blx	r3
   1ea60:	cmp	r6, r0
   1ea64:	bhi	1f294 <readstat_parse_dta+0x1d00>
   1ea68:	ldr	r1, [r5, #100]	; 0x64
   1ea6c:	cmp	r1, #2
   1ea70:	beq	1f13c <readstat_parse_dta+0x1ba8>
   1ea74:	cmp	r6, #8
   1ea78:	bls	1e9c8 <readstat_parse_dta+0x1434>
   1ea7c:	mov	r0, r5
   1ea80:	ldr	r1, [sp, #60]	; 0x3c
   1ea84:	bl	1cb90 <dta_read_tag>
   1ea88:	subs	r3, r0, #0
   1ea8c:	bne	1f2ac <readstat_parse_dta+0x1d18>
   1ea90:	ldrb	r3, [r5, #192]	; 0xc0
   1ea94:	ldm	r8, {r4, r7}
   1ea98:	tst	r3, #1
   1ea9c:	bne	1f25c <readstat_parse_dta+0x1cc8>
   1eaa0:	sub	r6, r6, #8
   1eaa4:	cmp	r6, r7
   1eaa8:	bcc	1f294 <readstat_parse_dta+0x1d00>
   1eaac:	sub	r6, r6, r7
   1eab0:	cmp	r4, r6, lsr #3
   1eab4:	bhi	1f294 <readstat_parse_dta+0x1d00>
   1eab8:	movw	r2, #32001	; 0x7d01
   1eabc:	add	r3, r4, #1
   1eac0:	ldr	r0, [sp, #32]
   1eac4:	cmp	r7, r2
   1eac8:	lsl	r3, r3, #3
   1eacc:	add	r6, r8, #8
   1ead0:	ldrhi	r9, [sp, #64]	; 0x40
   1ead4:	lslls	r9, r7, #2
   1ead8:	addls	r9, r9, #1
   1eadc:	str	r3, [sp, #40]	; 0x28
   1eae0:	mov	r1, r9
   1eae4:	bl	3fcc <realloc@plt>
   1eae8:	subs	r3, r0, #0
   1eaec:	str	r3, [sp, #32]
   1eaf0:	beq	1f278 <readstat_parse_dta+0x1ce4>
   1eaf4:	ldrb	r3, [r5, #192]	; 0xc0
   1eaf8:	lsl	r4, r4, #2
   1eafc:	tst	r3, #1
   1eb00:	bne	1f210 <readstat_parse_dta+0x1c7c>
   1eb04:	add	r3, sp, #96	; 0x60
   1eb08:	str	r3, [sp, #36]	; 0x24
   1eb0c:	add	r3, r6, r4
   1eb10:	str	fp, [sp, #48]	; 0x30
   1eb14:	str	r3, [sp, #52]	; 0x34
   1eb18:	str	sl, [sp, #68]	; 0x44
   1eb1c:	b	1eb9c <readstat_parse_dta+0x1608>
   1eb20:	ldr	r3, [r6]
   1eb24:	cmp	r7, r3
   1eb28:	bls	1f200 <readstat_parse_dta+0x1c6c>
   1eb2c:	bl	1cc2c <dta_interpret_int32_bytes>
   1eb30:	ldr	r2, [r6], #4
   1eb34:	mov	r1, r9
   1eb38:	ldr	sl, [sp, #32]
   1eb3c:	ldr	lr, [sp, #40]	; 0x28
   1eb40:	sub	r3, r7, r2
   1eb44:	ldr	ip, [r5, #236]	; 0xec
   1eb48:	cmp	r3, #32000	; 0x7d00
   1eb4c:	movcs	r3, #32000	; 0x7d00
   1eb50:	mov	r0, sl
   1eb54:	add	r2, lr, r2
   1eb58:	add	r2, r8, r2
   1eb5c:	str	ip, [sp]
   1eb60:	bl	420c <readstat_convert@plt>
   1eb64:	subs	r3, r0, #0
   1eb68:	ldr	r0, [sp, #48]	; 0x30
   1eb6c:	bne	1f2ac <readstat_parse_dta+0x1d18>
   1eb70:	ldr	r3, [sp, #36]	; 0x24
   1eb74:	ldr	r1, [r5, #276]	; 0x114
   1eb78:	str	sl, [sp, #8]
   1eb7c:	ldrd	sl, [sp, #104]	; 0x68
   1eb80:	ldm	r3, {r2, r3}
   1eb84:	strd	sl, [sp]
   1eb88:	str	r1, [sp, #12]
   1eb8c:	ldr	r1, [r5, #260]	; 0x104
   1eb90:	blx	r1
   1eb94:	cmp	r0, #0
   1eb98:	bne	1f1c8 <readstat_parse_dta+0x1c34>
   1eb9c:	add	r2, r4, r6
   1eba0:	mov	r1, r5
   1eba4:	ldr	r0, [sp, #36]	; 0x24
   1eba8:	ldr	r3, [sp, #52]	; 0x34
   1ebac:	cmp	r3, r6
   1ebb0:	bne	1eb20 <readstat_parse_dta+0x158c>
   1ebb4:	ldr	fp, [sp, #48]	; 0x30
   1ebb8:	ldr	sl, [sp, #68]	; 0x44
   1ebbc:	ldr	r1, [r5, #100]	; 0x64
   1ebc0:	b	1e9c8 <readstat_parse_dta+0x1434>
   1ebc4:	mov	r2, r8
   1ebc8:	mov	r1, r7
   1ebcc:	ldr	r0, [r5, #28]
   1ebd0:	bl	3ef4 <memcpy@plt>
   1ebd4:	ldrb	r3, [r5, #192]	; 0xc0
   1ebd8:	tst	r3, #1
   1ebdc:	beq	1ec14 <readstat_parse_dta+0x1680>
   1ebe0:	ldr	r3, [r5, #148]	; 0x94
   1ebe4:	cmp	r3, #0
   1ebe8:	ble	1ec14 <readstat_parse_dta+0x1680>
   1ebec:	mov	r6, #0
   1ebf0:	ldr	r9, [r5, #28]
   1ebf4:	lsl	r8, r6, #1
   1ebf8:	add	r6, r6, #1
   1ebfc:	ldrh	r0, [r9, r8]
   1ec00:	bl	3e7c <byteswap2@plt>
   1ec04:	ldr	r3, [r5, #148]	; 0x94
   1ec08:	strh	r0, [r9, r8]
   1ec0c:	cmp	r6, r3
   1ec10:	blt	1ebf0 <readstat_parse_dta+0x165c>
   1ec14:	ldr	r3, [pc, #-1304]	; 1e704 <readstat_parse_dta+0x1170>
   1ec18:	mov	r0, r5
   1ec1c:	ldr	r1, [pc, #-1308]	; 1e708 <readstat_parse_dta+0x1174>
   1ec20:	add	r3, pc, r3
   1ec24:	add	r1, pc, r1
   1ec28:	str	r3, [sp]
   1ec2c:	ldrd	r2, [r5, #36]	; 0x24
   1ec30:	bl	1d510 <dta_read_chunk>
   1ec34:	subs	r6, r0, #0
   1ec38:	bne	1e1b4 <readstat_parse_dta+0xc20>
   1ec3c:	ldr	r3, [pc, #-1336]	; 1e70c <readstat_parse_dta+0x1178>
   1ec40:	mov	r0, r5
   1ec44:	ldr	r1, [pc, #-1340]	; 1e710 <readstat_parse_dta+0x117c>
   1ec48:	add	r3, pc, r3
   1ec4c:	add	r1, pc, r1
   1ec50:	str	r3, [sp]
   1ec54:	ldrd	r2, [r5, #44]	; 0x2c
   1ec58:	bl	1d510 <dta_read_chunk>
   1ec5c:	subs	r6, r0, #0
   1ec60:	bne	1e1b4 <readstat_parse_dta+0xc20>
   1ec64:	b	1dcd4 <readstat_parse_dta+0x740>
   1ec68:	ldr	r4, [sp, #48]	; 0x30
   1ec6c:	b	1d8a4 <readstat_parse_dta+0x310>
   1ec70:	mov	r6, #5
   1ec74:	b	1d8a4 <readstat_parse_dta+0x310>
   1ec78:	mov	r0, r8
   1ec7c:	add	r1, r6, #1
   1ec80:	bl	42b4 <readstat_realloc@plt>
   1ec84:	subs	r8, r0, #0
   1ec88:	beq	1e0d8 <readstat_parse_dta+0xb44>
   1ec8c:	mov	r1, r6
   1ec90:	strb	sl, [r8, r6]
   1ec94:	ldr	r3, [r7, #12]
   1ec98:	ldr	r2, [r7, #20]
   1ec9c:	blx	r3
   1eca0:	cmp	r6, r0
   1eca4:	bne	1e600 <readstat_parse_dta+0x106c>
   1eca8:	mov	r2, #4
   1ecac:	mov	r0, r8
   1ecb0:	ldr	r1, [sp, #24]
   1ecb4:	str	sl, [sp, #136]	; 0x88
   1ecb8:	bl	44d0 <strncmp@plt>
   1ecbc:	cmp	r0, #0
   1ecc0:	bne	1e5d0 <readstat_parse_dta+0x103c>
   1ecc4:	ldr	r1, [pc, #-1464]	; 1e714 <readstat_parse_dta+0x1180>
   1ecc8:	mov	r2, fp
   1eccc:	ldr	r0, [r5, #96]	; 0x60
   1ecd0:	add	r1, pc, r1
   1ecd4:	add	r0, r8, r0
   1ecd8:	bl	4260 <__isoc99_sscanf@plt>
   1ecdc:	cmp	r0, #1
   1ece0:	bne	1e5d0 <readstat_parse_dta+0x103c>
   1ece4:	ldr	r1, [r5, #96]	; 0x60
   1ece8:	ldr	r0, [sp, #136]	; 0x88
   1ecec:	ldr	r3, [r5, #244]	; 0xf4
   1ecf0:	add	r1, r8, r1, lsl #1
   1ecf4:	ldr	r2, [r5, #276]	; 0x114
   1ecf8:	blx	r3
   1ecfc:	cmp	r0, #0
   1ed00:	beq	1e5d0 <readstat_parse_dta+0x103c>
   1ed04:	mov	r6, #4
   1ed08:	b	1e004 <readstat_parse_dta+0xa70>
   1ed0c:	mov	r0, r6
   1ed10:	bl	3d68 <byteswap4@plt>
   1ed14:	b	1e62c <readstat_parse_dta+0x1098>
   1ed18:	mov	r1, #0
   1ed1c:	ldr	r0, [r5, #128]	; 0x80
   1ed20:	ldr	r7, [r5, #280]	; 0x118
   1ed24:	ldr	r3, [r7, #8]
   1ed28:	ldr	r2, [r7, #20]
   1ed2c:	blx	r3
   1ed30:	cmn	r0, #1
   1ed34:	beq	1f0d8 <readstat_parse_dta+0x1b44>
   1ed38:	ldr	r1, [pc, #-1576]	; 1e718 <readstat_parse_dta+0x1184>
   1ed3c:	mov	r0, r5
   1ed40:	add	r1, pc, r1
   1ed44:	bl	1cb90 <dta_read_tag>
   1ed48:	subs	r6, r0, #0
   1ed4c:	bne	1d8a4 <readstat_parse_dta+0x310>
   1ed50:	mov	r3, #100	; 0x64
   1ed54:	add	r2, sp, #80	; 0x50
   1ed58:	mov	r0, #400	; 0x190
   1ed5c:	movw	r9, #21319	; 0x5347
   1ed60:	add	r8, sp, #96	; 0x60
   1ed64:	str	r3, [r5, #224]	; 0xe0
   1ed68:	str	r2, [sp, #16]
   1ed6c:	bl	4200 <readstat_malloc@plt>
   1ed70:	str	r0, [r5, #216]	; 0xd8
   1ed74:	ldr	r6, [sp, #16]
   1ed78:	mov	r1, #3
   1ed7c:	ldr	r3, [r7, #12]
   1ed80:	ldr	r2, [r7, #20]
   1ed84:	mov	r0, r6
   1ed88:	blx	r3
   1ed8c:	cmp	r0, #3
   1ed90:	bne	1ddc0 <readstat_parse_dta+0x82c>
   1ed94:	ldrh	r3, [r6]
   1ed98:	cmp	r3, r9
   1ed9c:	beq	1edd8 <readstat_parse_dta+0x1844>
   1eda0:	ldr	r1, [pc, #-1676]	; 1e71c <readstat_parse_dta+0x1188>
   1eda4:	mov	r2, #3
   1eda8:	ldr	r0, [sp, #16]
   1edac:	add	r1, pc, r1
   1edb0:	bl	3f78 <memcmp@plt>
   1edb4:	cmp	r0, #0
   1edb8:	bne	1ec70 <readstat_parse_dta+0x16dc>
   1edbc:	ldr	r1, [pc, #-1700]	; 1e720 <readstat_parse_dta+0x118c>
   1edc0:	mov	r0, r5
   1edc4:	add	r1, pc, r1
   1edc8:	bl	1cb90 <dta_read_tag>
   1edcc:	subs	r6, r0, #0
   1edd0:	beq	1e7bc <readstat_parse_dta+0x1228>
   1edd4:	b	1d8a4 <readstat_parse_dta+0x310>
   1edd8:	ldr	r3, [sp, #16]
   1eddc:	ldrb	r3, [r3, #2]
   1ede0:	cmp	r3, #79	; 0x4f
   1ede4:	bne	1eda0 <readstat_parse_dta+0x180c>
   1ede8:	ldr	r3, [r5, #116]	; 0x74
   1edec:	ldr	r2, [r5, #280]	; 0x118
   1edf0:	cmp	r3, #4
   1edf4:	ldr	r3, [r2, #12]
   1edf8:	ldr	r2, [r2, #20]
   1edfc:	bhi	1eef4 <readstat_parse_dta+0x1960>
   1ee00:	mov	r1, #13
   1ee04:	mov	r0, r8
   1ee08:	blx	r3
   1ee0c:	cmp	r0, #13
   1ee10:	bne	1ddc0 <readstat_parse_dta+0x82c>
   1ee14:	ldrb	r3, [r5, #192]	; 0xc0
   1ee18:	ldr	r0, [sp, #96]	; 0x60
   1ee1c:	tst	r3, #1
   1ee20:	uxtheq	r0, r0
   1ee24:	bne	1ef80 <readstat_parse_dta+0x19ec>
   1ee28:	tst	r3, #1
   1ee2c:	strh	r0, [sp, #136]	; 0x88
   1ee30:	ldr	r0, [sp, #100]	; 0x64
   1ee34:	bne	1ef78 <readstat_parse_dta+0x19e4>
   1ee38:	mov	r3, #0
   1ee3c:	str	r0, [sp, #144]	; 0x90
   1ee40:	ldrb	r6, [sp, #104]	; 0x68
   1ee44:	str	r3, [sp, #148]	; 0x94
   1ee48:	ldr	r0, [sp, #105]	; 0x69
   1ee4c:	strb	r6, [sp, #152]	; 0x98
   1ee50:	ldrb	r3, [r5, #192]	; 0xc0
   1ee54:	tst	r3, #1
   1ee58:	bne	1ef4c <readstat_parse_dta+0x19b8>
   1ee5c:	cmp	r6, #130	; 0x82
   1ee60:	str	r0, [sp, #156]	; 0x9c
   1ee64:	bne	1ed74 <readstat_parse_dta+0x17e0>
   1ee68:	ldr	r1, [r5, #220]	; 0xdc
   1ee6c:	ldr	r3, [r5, #224]	; 0xe0
   1ee70:	cmp	r1, r3
   1ee74:	beq	1ef54 <readstat_parse_dta+0x19c0>
   1ee78:	ldr	sl, [sp, #156]	; 0x9c
   1ee7c:	add	r0, sl, #32
   1ee80:	bl	4200 <readstat_malloc@plt>
   1ee84:	subs	r6, r0, #0
   1ee88:	beq	1e0d8 <readstat_parse_dta+0xb44>
   1ee8c:	ldrd	r2, [fp]
   1ee90:	mov	r1, sl
   1ee94:	add	r0, r6, #24
   1ee98:	str	r2, [r6]
   1ee9c:	str	r3, [r6, #4]
   1eea0:	ldrd	r2, [fp, #8]
   1eea4:	str	r2, [r6, #8]
   1eea8:	str	r3, [r6, #12]
   1eeac:	ldrd	r2, [fp, #16]
   1eeb0:	str	r2, [r6, #16]
   1eeb4:	str	r3, [r6, #20]
   1eeb8:	ldrd	r2, [fp, #24]
   1eebc:	str	r2, [r6, #24]
   1eec0:	str	r3, [r6, #28]
   1eec4:	ldr	ip, [r5, #216]	; 0xd8
   1eec8:	ldr	r2, [r5, #220]	; 0xdc
   1eecc:	ldr	r3, [r7, #12]
   1eed0:	add	lr, r2, #1
   1eed4:	str	lr, [r5, #220]	; 0xdc
   1eed8:	str	r6, [ip, r2, lsl #2]
   1eedc:	ldr	r2, [r7, #20]
   1eee0:	blx	r3
   1eee4:	ldr	r3, [r6, #20]
   1eee8:	cmp	r0, r3
   1eeec:	beq	1ed74 <readstat_parse_dta+0x17e0>
   1eef0:	b	1ddc0 <readstat_parse_dta+0x82c>
   1eef4:	mov	r1, #17
   1eef8:	mov	r0, r8
   1eefc:	blx	r3
   1ef00:	cmp	r0, #17
   1ef04:	bne	1ddc0 <readstat_parse_dta+0x82c>
   1ef08:	ldrb	r3, [r5, #192]	; 0xc0
   1ef0c:	ldr	r0, [sp, #96]	; 0x60
   1ef10:	tst	r3, #1
   1ef14:	uxtheq	r0, r0
   1ef18:	bne	1efc4 <readstat_parse_dta+0x1a30>
   1ef1c:	tst	r3, #1
   1ef20:	strh	r0, [sp, #136]	; 0x88
   1ef24:	ldr	r0, [sp, #100]	; 0x64
   1ef28:	ldr	r1, [sp, #104]	; 0x68
   1ef2c:	bne	1efbc <readstat_parse_dta+0x1a28>
   1ef30:	strd	r0, [sp, #144]	; 0x90
   1ef34:	ldrb	r6, [sp, #108]	; 0x6c
   1ef38:	ldr	r0, [sp, #109]	; 0x6d
   1ef3c:	strb	r6, [sp, #152]	; 0x98
   1ef40:	ldrb	r3, [r5, #192]	; 0xc0
   1ef44:	tst	r3, #1
   1ef48:	beq	1ee5c <readstat_parse_dta+0x18c8>
   1ef4c:	bl	3d68 <byteswap4@plt>
   1ef50:	b	1ee5c <readstat_parse_dta+0x18c8>
   1ef54:	lsl	r3, r1, #1
   1ef58:	ldr	r0, [r5, #216]	; 0xd8
   1ef5c:	lsl	r1, r1, #3
   1ef60:	str	r3, [r5, #224]	; 0xe0
   1ef64:	bl	42b4 <readstat_realloc@plt>
   1ef68:	cmp	r0, #0
   1ef6c:	str	r0, [r5, #216]	; 0xd8
   1ef70:	bne	1ee78 <readstat_parse_dta+0x18e4>
   1ef74:	b	1e0d8 <readstat_parse_dta+0xb44>
   1ef78:	bl	3d68 <byteswap4@plt>
   1ef7c:	b	1ee38 <readstat_parse_dta+0x18a4>
   1ef80:	bl	3d68 <byteswap4@plt>
   1ef84:	uxth	r0, r0
   1ef88:	ldrb	r3, [r5, #192]	; 0xc0
   1ef8c:	b	1ee28 <readstat_parse_dta+0x1894>
   1ef90:	bl	3e7c <byteswap2@plt>
   1ef94:	mov	r6, r0
   1ef98:	b	1dfec <readstat_parse_dta+0xa58>
   1ef9c:	sub	r2, r1, #1
   1efa0:	add	r0, sl, #1
   1efa4:	mov	r1, sl
   1efa8:	bl	3e70 <memmove@plt>
   1efac:	ldr	r3, [sp, #16]
   1efb0:	strb	r3, [sl]
   1efb4:	ldrb	r1, [sp, #75]	; 0x4b
   1efb8:	b	1e148 <readstat_parse_dta+0xbb4>
   1efbc:	bl	3d50 <byteswap8@plt>
   1efc0:	b	1ef30 <readstat_parse_dta+0x199c>
   1efc4:	bl	3d68 <byteswap4@plt>
   1efc8:	uxth	r0, r0
   1efcc:	ldrb	r3, [r5, #192]	; 0xc0
   1efd0:	b	1ef1c <readstat_parse_dta+0x1988>
   1efd4:	ldr	r3, [r7, #8]
   1efd8:	ldr	r2, [r7, #20]
   1efdc:	ldr	r0, [r5, #120]	; 0x78
   1efe0:	blx	r3
   1efe4:	cmn	r0, #1
   1efe8:	bne	1e75c <readstat_parse_dta+0x11c8>
   1efec:	ldr	r3, [r5, #264]	; 0x108
   1eff0:	cmp	r3, #0
   1eff4:	beq	1d8a0 <readstat_parse_dta+0x30c>
   1eff8:	ldr	r2, [pc, #-2268]	; 1e724 <readstat_parse_dta+0x1190>
   1effc:	add	r7, r5, #288	; 0x120
   1f000:	mov	r1, #256	; 0x100
   1f004:	mov	r0, r7
   1f008:	mov	r6, #15
   1f00c:	ldrd	r8, [r5, #120]	; 0x78
   1f010:	add	r2, pc, r2
   1f014:	strd	r8, [sp]
   1f018:	bl	4254 <snprintf@plt>
   1f01c:	mov	r0, r7
   1f020:	ldr	r3, [r5, #264]	; 0x108
   1f024:	ldr	r1, [r5, #276]	; 0x114
   1f028:	blx	r3
   1f02c:	b	1d8a4 <readstat_parse_dta+0x310>
   1f030:	ldr	r3, [r5, #264]	; 0x108
   1f034:	cmp	r3, #0
   1f038:	beq	1d8a0 <readstat_parse_dta+0x30c>
   1f03c:	ldr	r2, [pc, #-2332]	; 1e728 <readstat_parse_dta+0x1194>
   1f040:	add	r7, r5, #288	; 0x120
   1f044:	mov	r1, #256	; 0x100
   1f048:	mov	r0, r7
   1f04c:	mov	r6, #15
   1f050:	ldrd	r8, [r5, #120]	; 0x78
   1f054:	add	r2, pc, r2
   1f058:	b	1f014 <readstat_parse_dta+0x1a80>
   1f05c:	mov	r0, r5
   1f060:	ldr	r1, [sp, #56]	; 0x38
   1f064:	bl	1cb90 <dta_read_tag>
   1f068:	subs	r4, r0, #0
   1f06c:	bne	1f294 <readstat_parse_dta+0x1d00>
   1f070:	mov	r1, #4
   1f074:	mov	r0, fp
   1f078:	ldr	r3, [sl, #12]
   1f07c:	ldr	r2, [sl, #20]
   1f080:	blx	r3
   1f084:	cmp	r0, #3
   1f088:	bls	1f294 <readstat_parse_dta+0x1d00>
   1f08c:	ldrb	r3, [r5, #192]	; 0xc0
   1f090:	ldr	r6, [sp, #136]	; 0x88
   1f094:	tst	r3, #1
   1f098:	beq	1ea00 <readstat_parse_dta+0x146c>
   1f09c:	mov	r0, r6
   1f0a0:	bl	3d68 <byteswap4@plt>
   1f0a4:	mov	r6, r0
   1f0a8:	b	1ea00 <readstat_parse_dta+0x146c>
   1f0ac:	ldr	r3, [r5, #264]	; 0x108
   1f0b0:	cmp	r3, #0
   1f0b4:	beq	1d8a0 <readstat_parse_dta+0x30c>
   1f0b8:	ldr	r2, [pc, #-2452]	; 1e72c <readstat_parse_dta+0x1198>
   1f0bc:	add	r7, r5, #288	; 0x120
   1f0c0:	mov	r1, #256	; 0x100
   1f0c4:	mov	r0, r7
   1f0c8:	mov	r6, #15
   1f0cc:	ldrd	r8, [r5, #136]	; 0x88
   1f0d0:	add	r2, pc, r2
   1f0d4:	b	1f014 <readstat_parse_dta+0x1a80>
   1f0d8:	ldr	r3, [r5, #264]	; 0x108
   1f0dc:	cmp	r3, #0
   1f0e0:	beq	1d8a0 <readstat_parse_dta+0x30c>
   1f0e4:	ldr	r2, [pc, #-2492]	; 1e730 <readstat_parse_dta+0x119c>
   1f0e8:	add	r7, r5, #288	; 0x120
   1f0ec:	mov	r1, #256	; 0x100
   1f0f0:	mov	r0, r7
   1f0f4:	mov	r6, #15
   1f0f8:	ldrd	r8, [r5, #128]	; 0x80
   1f0fc:	add	r2, pc, r2
   1f100:	b	1f014 <readstat_parse_dta+0x1a80>
   1f104:	mov	r6, #15
   1f108:	b	1e004 <readstat_parse_dta+0xa70>
   1f10c:	cmp	r8, #0
   1f110:	movne	r6, #2
   1f114:	bne	1e00c <readstat_parse_dta+0xa78>
   1f118:	b	1ddc0 <readstat_parse_dta+0x82c>
   1f11c:	mov	r6, #15
   1f120:	cmp	r7, #0
   1f124:	beq	1d8a4 <readstat_parse_dta+0x310>
   1f128:	mov	r0, r7
   1f12c:	bl	3e94 <free@plt>
   1f130:	b	1d8a4 <readstat_parse_dta+0x310>
   1f134:	mov	r6, #2
   1f138:	b	1f120 <readstat_parse_dta+0x1b8c>
   1f13c:	mov	r6, #0
   1f140:	add	r7, sp, #96	; 0x60
   1f144:	mov	r9, r6
   1f148:	cmp	r6, r4
   1f14c:	add	r2, r8, r6, lsl #3
   1f150:	mov	r3, #8
   1f154:	mov	r1, #33	; 0x21
   1f158:	mov	r0, r7
   1f15c:	beq	1ebbc <readstat_parse_dta+0x1628>
   1f160:	ldr	ip, [r5, #236]	; 0xec
   1f164:	mov	lr, #3
   1f168:	str	r9, [sp, #92]	; 0x5c
   1f16c:	str	ip, [sp]
   1f170:	str	r6, [sp, #80]	; 0x50
   1f174:	add	r6, r6, #1
   1f178:	str	r9, [sp, #84]	; 0x54
   1f17c:	str	lr, [sp, #88]	; 0x58
   1f180:	bl	420c <readstat_convert@plt>
   1f184:	subs	r3, r0, #0
   1f188:	add	ip, sp, #80	; 0x50
   1f18c:	mov	r0, fp
   1f190:	bne	1f2ac <readstat_parse_dta+0x1d18>
   1f194:	ldrb	r3, [sp, #96]	; 0x60
   1f198:	cmp	r3, #0
   1f19c:	beq	1f148 <readstat_parse_dta+0x1bb4>
   1f1a0:	ldrd	r2, [sp, #88]	; 0x58
   1f1a4:	ldr	r1, [r5, #276]	; 0x114
   1f1a8:	strd	r2, [sp]
   1f1ac:	str	r7, [sp, #8]
   1f1b0:	ldm	ip, {r2, r3}
   1f1b4:	str	r1, [sp, #12]
   1f1b8:	ldr	r1, [r5, #260]	; 0x104
   1f1bc:	blx	r1
   1f1c0:	cmp	r0, #0
   1f1c4:	beq	1f148 <readstat_parse_dta+0x1bb4>
   1f1c8:	ldr	r4, [sp, #16]
   1f1cc:	mov	r2, r8
   1f1d0:	mov	r3, #4
   1f1d4:	mov	r6, r3
   1f1d8:	cmp	r2, #0
   1f1dc:	beq	1f1e8 <readstat_parse_dta+0x1c54>
   1f1e0:	mov	r0, r2
   1f1e4:	bl	3e94 <free@plt>
   1f1e8:	ldr	r3, [sp, #32]
   1f1ec:	cmp	r3, #0
   1f1f0:	beq	1d8a4 <readstat_parse_dta+0x310>
   1f1f4:	mov	r0, r3
   1f1f8:	bl	3e94 <free@plt>
   1f1fc:	b	1d8a4 <readstat_parse_dta+0x310>
   1f200:	mov	r2, r8
   1f204:	mov	r3, #5
   1f208:	ldr	r4, [sp, #16]
   1f20c:	b	1f1d4 <readstat_parse_dta+0x1c40>
   1f210:	add	r3, r8, #4
   1f214:	str	r4, [sp, #36]	; 0x24
   1f218:	add	r2, r3, r4
   1f21c:	mov	r4, r3
   1f220:	str	fp, [sp, #48]	; 0x30
   1f224:	mov	fp, r6
   1f228:	mov	r6, r5
   1f22c:	mov	r5, r2
   1f230:	b	1f240 <readstat_parse_dta+0x1cac>
   1f234:	ldr	r0, [r4, #4]!
   1f238:	bl	3d68 <byteswap4@plt>
   1f23c:	str	r0, [r4]
   1f240:	cmp	r5, r4
   1f244:	bne	1f234 <readstat_parse_dta+0x1ca0>
   1f248:	mov	r5, r6
   1f24c:	mov	r6, fp
   1f250:	ldr	r4, [sp, #36]	; 0x24
   1f254:	ldr	fp, [sp, #48]	; 0x30
   1f258:	b	1eb04 <readstat_parse_dta+0x1570>
   1f25c:	mov	r0, r4
   1f260:	bl	3d68 <byteswap4@plt>
   1f264:	mov	r4, r0
   1f268:	mov	r0, r7
   1f26c:	bl	3d68 <byteswap4@plt>
   1f270:	mov	r7, r0
   1f274:	b	1eaa0 <readstat_parse_dta+0x150c>
   1f278:	mov	r2, r8
   1f27c:	mov	r3, #3
   1f280:	ldr	r4, [sp, #16]
   1f284:	b	1f1d4 <readstat_parse_dta+0x1c40>
   1f288:	uxth	r0, r0
   1f28c:	bl	3e7c <byteswap2@plt>
   1f290:	b	1e9f8 <readstat_parse_dta+0x1464>
   1f294:	mov	r2, r8
   1f298:	ldr	r4, [sp, #16]
   1f29c:	ldr	r6, [sp, #24]
   1f2a0:	b	1f1d8 <readstat_parse_dta+0x1c44>
   1f2a4:	mov	r6, #5
   1f2a8:	b	1e004 <readstat_parse_dta+0xa70>
   1f2ac:	mov	r2, r8
   1f2b0:	ldr	r4, [sp, #16]
   1f2b4:	b	1f1d4 <readstat_parse_dta+0x1c40>

0001f2b8 <dta_113_write_int8>:
   1f2b8:	cmp	r2, #100	; 0x64
   1f2bc:	movle	r3, #0
   1f2c0:	movgt	r3, #20
   1f2c4:	strble	r2, [r0]
   1f2c8:	mov	r0, r3
   1f2cc:	bx	lr

0001f2d0 <dta_old_write_int8>:
   1f2d0:	cmp	r2, #127	; 0x7f
   1f2d4:	movne	r3, #0
   1f2d8:	moveq	r3, #20
   1f2dc:	strbne	r2, [r0]
   1f2e0:	mov	r0, r3
   1f2e4:	bx	lr

0001f2e8 <dta_113_write_int16>:
   1f2e8:	movw	r3, #32740	; 0x7fe4
   1f2ec:	cmp	r2, r3
   1f2f0:	movle	r3, #0
   1f2f4:	movgt	r3, #20
   1f2f8:	strhle	r2, [r0]
   1f2fc:	mov	r0, r3
   1f300:	bx	lr

0001f304 <dta_old_write_int16>:
   1f304:	movw	r3, #32767	; 0x7fff
   1f308:	cmp	r2, r3
   1f30c:	movne	r3, #0
   1f310:	moveq	r3, #20
   1f314:	strhne	r2, [r0]
   1f318:	mov	r0, r3
   1f31c:	bx	lr

0001f320 <dta_113_write_int32>:
   1f320:	cmn	r2, #-2147483620	; 0x8000001c
   1f324:	movle	r3, #0
   1f328:	movgt	r3, #20
   1f32c:	strle	r2, [r0]
   1f330:	mov	r0, r3
   1f334:	bx	lr

0001f338 <dta_old_write_int32>:
   1f338:	cmn	r2, #-2147483647	; 0x80000001
   1f33c:	movne	r3, #0
   1f340:	moveq	r3, #20
   1f344:	strne	r2, [r0]
   1f348:	mov	r0, r3
   1f34c:	bx	lr

0001f350 <dta_117_write_string_ref>:
   1f350:	cmp	r2, #0
   1f354:	mov	r3, r0
   1f358:	beq	1f374 <dta_117_write_string_ref+0x24>
   1f35c:	ldr	r1, [r2]
   1f360:	mov	r0, #0
   1f364:	ldr	r2, [r2, #8]
   1f368:	str	r1, [r3]
   1f36c:	str	r2, [r3, #4]
   1f370:	bx	lr
   1f374:	mov	r0, #34	; 0x22
   1f378:	bx	lr

0001f37c <dta_metadata_ok>:
   1f37c:	ldr	r3, [r0, #16]
   1f380:	cmp	r3, #0
   1f384:	movne	r3, #6
   1f388:	bne	1f39c <dta_metadata_ok+0x20>
   1f38c:	ldr	r2, [r0, #8]
   1f390:	sub	r2, r2, #104	; 0x68
   1f394:	cmp	r2, #16
   1f398:	movcs	r3, #24
   1f39c:	mov	r0, r3
   1f3a0:	bx	lr

0001f3a4 <dta_module_ctx_free>:
   1f3a4:	b	3e4c <dta_ctx_free@plt>

0001f3a8 <dta_write_missing_string>:
   1f3a8:	str	r4, [sp, #-8]!
   1f3ac:	ldr	r2, [r1, #1596]	; 0x63c
   1f3b0:	mov	r1, #0
   1f3b4:	str	lr, [sp, #4]
   1f3b8:	bl	4278 <memset@plt>
   1f3bc:	ldr	r4, [sp]
   1f3c0:	add	sp, sp, #4
   1f3c4:	mov	r0, #0
   1f3c8:	pop	{pc}		; (ldr pc, [sp], #4)

0001f3cc <dta_118_write_string_ref>:
   1f3cc:	cmp	r2, #0
   1f3d0:	beq	1f444 <dta_118_write_string_ref+0x78>
   1f3d4:	ldr	r3, [r2]
   1f3d8:	strd	r4, [sp, #-16]!
   1f3dc:	mov	r4, r0
   1f3e0:	ldr	r5, [r2, #12]
   1f3e4:	str	r6, [sp, #8]
   1f3e8:	ldr	r6, [r2, #8]
   1f3ec:	str	lr, [sp, #12]
   1f3f0:	sub	sp, sp, #8
   1f3f4:	strh	r3, [r0]
   1f3f8:	str	r6, [sp]
   1f3fc:	str	r5, [sp, #4]
   1f400:	bl	3e88 <machine_is_little_endian@plt>
   1f404:	cmp	r0, #0
   1f408:	bne	1f41c <dta_118_write_string_ref+0x50>
   1f40c:	lsl	r5, r5, #16
   1f410:	lsl	r3, r6, #16
   1f414:	orr	r5, r5, r6, lsr #16
   1f418:	stm	sp, {r3, r5}
   1f41c:	ldrh	r2, [sp, #4]
   1f420:	mov	r0, #0
   1f424:	ldr	r3, [sp]
   1f428:	str	r3, [r4, #2]
   1f42c:	strh	r2, [r4, #6]
   1f430:	add	sp, sp, #8
   1f434:	ldrd	r4, [sp]
   1f438:	ldr	r6, [sp, #8]
   1f43c:	add	sp, sp, #12
   1f440:	pop	{pc}		; (ldr pc, [sp], #4)
   1f444:	mov	r0, #34	; 0x22
   1f448:	bx	lr

0001f44c <dta_emit_header_data_label>:
   1f44c:	ldrb	r3, [r1, #192]	; 0xc0
   1f450:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f454:	mov	r4, r1
   1f458:	mov	r5, r0
   1f45c:	strd	r6, [sp, #8]
   1f460:	str	r8, [sp, #16]
   1f464:	str	lr, [sp, #20]
   1f468:	sub	sp, sp, #8
   1f46c:	tst	r3, #4
   1f470:	bne	1f4d0 <dta_emit_header_data_label+0x84>
   1f474:	ldr	r6, [r4, #8]
   1f478:	add	r7, r5, #88	; 0x58
   1f47c:	cmp	r6, #0
   1f480:	beq	1f4f4 <dta_emit_header_data_label+0xa8>
   1f484:	cmp	r6, #1
   1f488:	beq	1f570 <dta_emit_header_data_label+0x124>
   1f48c:	cmp	r6, #2
   1f490:	beq	1f598 <dta_emit_header_data_label+0x14c>
   1f494:	mov	r1, r7
   1f498:	mov	r0, r5
   1f49c:	bl	4128 <readstat_write_string@plt>
   1f4a0:	subs	r6, r0, #0
   1f4a4:	bne	1f4b4 <dta_emit_header_data_label+0x68>
   1f4a8:	ldrb	r3, [r4, #192]	; 0xc0
   1f4ac:	tst	r3, #4
   1f4b0:	bne	1f558 <dta_emit_header_data_label+0x10c>
   1f4b4:	mov	r0, r6
   1f4b8:	add	sp, sp, #8
   1f4bc:	ldrd	r4, [sp]
   1f4c0:	ldrd	r6, [sp, #8]
   1f4c4:	ldr	r8, [sp, #16]
   1f4c8:	add	sp, sp, #20
   1f4cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1f4d0:	ldr	r1, [pc, #232]	; 1f5c0 <dta_emit_header_data_label+0x174>
   1f4d4:	add	r1, pc, r1
   1f4d8:	bl	4128 <readstat_write_string@plt>
   1f4dc:	subs	r6, r0, #0
   1f4e0:	bne	1f4b4 <dta_emit_header_data_label+0x68>
   1f4e4:	ldr	r6, [r4, #8]
   1f4e8:	add	r7, r5, #88	; 0x58
   1f4ec:	cmp	r6, #0
   1f4f0:	bne	1f484 <dta_emit_header_data_label+0x38>
   1f4f4:	ldr	r6, [r4, #4]
   1f4f8:	mov	r0, #1
   1f4fc:	mov	r1, r6
   1f500:	bl	3d2c <calloc@plt>
   1f504:	mov	r8, r0
   1f508:	mov	r2, r6
   1f50c:	mov	r1, r7
   1f510:	bl	4290 <strncpy@plt>
   1f514:	mov	r2, r6
   1f518:	mov	r1, r8
   1f51c:	mov	r0, r5
   1f520:	bl	4428 <readstat_write_bytes@plt>
   1f524:	subs	r6, r0, #0
   1f528:	bne	1f54c <dta_emit_header_data_label+0x100>
   1f52c:	ldrb	r3, [r4, #192]	; 0xc0
   1f530:	tst	r3, #4
   1f534:	beq	1f54c <dta_emit_header_data_label+0x100>
   1f538:	ldr	r1, [pc, #132]	; 1f5c4 <dta_emit_header_data_label+0x178>
   1f53c:	mov	r0, r5
   1f540:	add	r1, pc, r1
   1f544:	bl	4128 <readstat_write_string@plt>
   1f548:	mov	r6, r0
   1f54c:	mov	r0, r8
   1f550:	bl	3e94 <free@plt>
   1f554:	b	1f4b4 <dta_emit_header_data_label+0x68>
   1f558:	ldr	r1, [pc, #104]	; 1f5c8 <dta_emit_header_data_label+0x17c>
   1f55c:	mov	r0, r5
   1f560:	add	r1, pc, r1
   1f564:	bl	4128 <readstat_write_string@plt>
   1f568:	mov	r6, r0
   1f56c:	b	1f4b4 <dta_emit_header_data_label+0x68>
   1f570:	mov	r0, r7
   1f574:	bl	41d0 <strlen@plt>
   1f578:	mov	r2, r6
   1f57c:	add	r1, sp, #6
   1f580:	strb	r0, [sp, #6]
   1f584:	mov	r0, r5
   1f588:	bl	4428 <readstat_write_bytes@plt>
   1f58c:	subs	r6, r0, #0
   1f590:	beq	1f494 <dta_emit_header_data_label+0x48>
   1f594:	b	1f4b4 <dta_emit_header_data_label+0x68>
   1f598:	mov	r0, r7
   1f59c:	bl	41d0 <strlen@plt>
   1f5a0:	mov	r2, r6
   1f5a4:	add	r1, sp, #6
   1f5a8:	strh	r0, [sp, #6]
   1f5ac:	mov	r0, r5
   1f5b0:	bl	4428 <readstat_write_bytes@plt>
   1f5b4:	subs	r6, r0, #0
   1f5b8:	beq	1f494 <dta_emit_header_data_label+0x48>
   1f5bc:	b	1f4b4 <dta_emit_header_data_label+0x68>
   1f5c0:	.word	0x000088e4
   1f5c4:	.word	0x00008880
   1f5c8:	.word	0x00008860

0001f5cc <dta_write_string>:
   1f5cc:	strd	r4, [sp, #-16]!
   1f5d0:	subs	r4, r2, #0
   1f5d4:	ldr	r5, [r1, #1596]	; 0x63c
   1f5d8:	str	r6, [sp, #8]
   1f5dc:	mov	r6, r0
   1f5e0:	str	lr, [sp, #12]
   1f5e4:	beq	1f5f4 <dta_write_string+0x28>
   1f5e8:	ldrb	r3, [r4]
   1f5ec:	cmp	r3, #0
   1f5f0:	bne	1f618 <dta_write_string+0x4c>
   1f5f4:	mov	r2, r5
   1f5f8:	mov	r0, r6
   1f5fc:	mov	r1, #0
   1f600:	bl	4278 <memset@plt>
   1f604:	mov	r0, #0
   1f608:	ldrd	r4, [sp]
   1f60c:	ldr	r6, [sp, #8]
   1f610:	add	sp, sp, #12
   1f614:	pop	{pc}		; (ldr pc, [sp], #4)
   1f618:	mov	r0, r4
   1f61c:	bl	41d0 <strlen@plt>
   1f620:	cmp	r5, r0
   1f624:	movcc	r0, #22
   1f628:	bcc	1f608 <dta_write_string+0x3c>
   1f62c:	mov	r2, r5
   1f630:	mov	r1, r4
   1f634:	mov	r0, r6
   1f638:	bl	4290 <strncpy@plt>
   1f63c:	ldrd	r4, [sp]
   1f640:	mov	r0, #0
   1f644:	ldr	r6, [sp, #8]
   1f648:	add	sp, sp, #12
   1f64c:	pop	{pc}		; (ldr pc, [sp], #4)

0001f650 <dta_compare_value_labels>:
   1f650:	ldrb	r3, [r0, #12]
   1f654:	ldrb	r2, [r1, #12]
   1f658:	cmp	r3, #0
   1f65c:	beq	1f678 <dta_compare_value_labels+0x28>
   1f660:	cmp	r2, #0
   1f664:	beq	1f670 <dta_compare_value_labels+0x20>
   1f668:	sub	r0, r3, r2
   1f66c:	bx	lr
   1f670:	mov	r0, #1
   1f674:	bx	lr
   1f678:	cmp	r2, #0
   1f67c:	bne	1f690 <dta_compare_value_labels+0x40>
   1f680:	ldr	r0, [r0, #8]
   1f684:	ldr	r3, [r1, #8]
   1f688:	sub	r0, r0, r3
   1f68c:	bx	lr
   1f690:	mvn	r0, #0
   1f694:	bx	lr

0001f698 <dta_117_variable_width>:
   1f698:	cmp	r0, #0
   1f69c:	beq	1f6e0 <dta_117_variable_width+0x48>
   1f6a0:	sub	r3, r0, #5
   1f6a4:	cmp	r3, #1
   1f6a8:	bls	1f6d0 <dta_117_variable_width+0x38>
   1f6ac:	sub	r3, r0, #3
   1f6b0:	cmp	r3, #1
   1f6b4:	bls	1f6d8 <dta_117_variable_width+0x40>
   1f6b8:	cmp	r0, #2
   1f6bc:	beq	1f6dc <dta_117_variable_width+0x44>
   1f6c0:	sub	r0, r0, #1
   1f6c4:	clz	r0, r0
   1f6c8:	lsr	r0, r0, #5
   1f6cc:	bx	lr
   1f6d0:	mov	r0, #8
   1f6d4:	bx	lr
   1f6d8:	mov	r0, #4
   1f6dc:	bx	lr
   1f6e0:	sub	r2, r1, #1
   1f6e4:	movw	r3, #2044	; 0x7fc
   1f6e8:	cmp	r2, r3
   1f6ec:	movw	r0, #2045	; 0x7fd
   1f6f0:	movls	r0, r1
   1f6f4:	bx	lr

0001f6f8 <dta_write_chunk>:
   1f6f8:	ldrb	ip, [r1, #192]	; 0xc0
   1f6fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f700:	mov	r4, r1
   1f704:	mov	r5, r0
   1f708:	strd	r6, [sp, #8]
   1f70c:	mov	r6, r3
   1f710:	str	r8, [sp, #16]
   1f714:	str	lr, [sp, #20]
   1f718:	tst	ip, #4
   1f71c:	ldr	r7, [sp, #24]
   1f720:	ldr	r8, [sp, #28]
   1f724:	bne	1f780 <dta_write_chunk+0x88>
   1f728:	mov	r2, r7
   1f72c:	mov	r1, r6
   1f730:	mov	r0, r5
   1f734:	bl	4428 <readstat_write_bytes@plt>
   1f738:	cmp	r0, #0
   1f73c:	bne	1f74c <dta_write_chunk+0x54>
   1f740:	ldrb	r3, [r4, #192]	; 0xc0
   1f744:	tst	r3, #4
   1f748:	bne	1f760 <dta_write_chunk+0x68>
   1f74c:	ldrd	r4, [sp]
   1f750:	ldrd	r6, [sp, #8]
   1f754:	ldr	r8, [sp, #16]
   1f758:	add	sp, sp, #20
   1f75c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f760:	mov	r1, r8
   1f764:	mov	r0, r5
   1f768:	ldrd	r4, [sp]
   1f76c:	ldrd	r6, [sp, #8]
   1f770:	ldr	r8, [sp, #16]
   1f774:	ldr	lr, [sp, #20]
   1f778:	add	sp, sp, #24
   1f77c:	b	4128 <readstat_write_string@plt>
   1f780:	mov	r1, r2
   1f784:	bl	4128 <readstat_write_string@plt>
   1f788:	cmp	r0, #0
   1f78c:	beq	1f728 <dta_write_chunk+0x30>
   1f790:	b	1f74c <dta_write_chunk+0x54>

0001f794 <dta_old_write_missing_numeric>:
   1f794:	ldr	r3, [r1]
   1f798:	cmp	r3, #1
   1f79c:	moveq	r3, #127	; 0x7f
   1f7a0:	strbeq	r3, [r0]
   1f7a4:	beq	1f7e0 <dta_old_write_missing_numeric+0x4c>
   1f7a8:	cmp	r3, #2
   1f7ac:	movweq	r3, #32767	; 0x7fff
   1f7b0:	strheq	r3, [r0]
   1f7b4:	beq	1f7e0 <dta_old_write_missing_numeric+0x4c>
   1f7b8:	cmp	r3, #3
   1f7bc:	mvneq	r3, #-2147483648	; 0x80000000
   1f7c0:	streq	r3, [r0]
   1f7c4:	beq	1f7e0 <dta_old_write_missing_numeric+0x4c>
   1f7c8:	cmp	r3, #4
   1f7cc:	moveq	r3, #2130706432	; 0x7f000000
   1f7d0:	streq	r3, [r0]
   1f7d4:	beq	1f7e0 <dta_old_write_missing_numeric+0x4c>
   1f7d8:	cmp	r3, #5
   1f7dc:	beq	1f7e8 <dta_old_write_missing_numeric+0x54>
   1f7e0:	mov	r0, #0
   1f7e4:	bx	lr
   1f7e8:	strd	r4, [sp, #-8]!
   1f7ec:	mov	r4, #0
   1f7f0:	sub	sp, sp, #8
   1f7f4:	mov	r5, #0
   1f7f8:	movt	r5, #32736	; 0x7fe0
   1f7fc:	mov	r2, #0
   1f800:	strd	r4, [sp]
   1f804:	ldr	r3, [sp, #4]
   1f808:	str	r2, [r0]
   1f80c:	str	r3, [r0, #4]
   1f810:	mov	r0, #0
   1f814:	add	sp, sp, #8
   1f818:	ldrd	r4, [sp]
   1f81c:	add	sp, sp, #8
   1f820:	bx	lr

0001f824 <dta_113_write_missing_tagged>:
   1f824:	sub	ip, r2, #97	; 0x61
   1f828:	uxtb	r3, ip
   1f82c:	cmp	r3, #25
   1f830:	bhi	1f878 <dta_113_write_missing_tagged+0x54>
   1f834:	ldr	r3, [r1]
   1f838:	cmp	r3, #1
   1f83c:	addeq	r2, r2, #5
   1f840:	moveq	r3, #0
   1f844:	strbeq	r2, [r0]
   1f848:	beq	1f870 <dta_113_write_missing_tagged+0x4c>
   1f84c:	cmp	r3, #2
   1f850:	beq	1f884 <dta_113_write_missing_tagged+0x60>
   1f854:	cmp	r3, #3
   1f858:	beq	1f8b4 <dta_113_write_missing_tagged+0x90>
   1f85c:	cmp	r3, #4
   1f860:	beq	1f89c <dta_113_write_missing_tagged+0x78>
   1f864:	cmp	r3, #5
   1f868:	movne	r3, #23
   1f86c:	beq	1f8cc <dta_113_write_missing_tagged+0xa8>
   1f870:	mov	r0, r3
   1f874:	bx	lr
   1f878:	mov	r3, #21
   1f87c:	mov	r0, r3
   1f880:	bx	lr
   1f884:	add	r2, r2, #32512	; 0x7f00
   1f888:	mov	r3, #0
   1f88c:	add	r2, r2, #133	; 0x85
   1f890:	strh	r2, [r0]
   1f894:	mov	r0, r3
   1f898:	bx	lr
   1f89c:	lsl	ip, ip, #11
   1f8a0:	mov	r3, #0
   1f8a4:	add	ip, ip, #2130706432	; 0x7f000000
   1f8a8:	add	ip, ip, #2048	; 0x800
   1f8ac:	str	ip, [r0]
   1f8b0:	b	1f870 <dta_113_write_missing_tagged+0x4c>
   1f8b4:	add	r2, r2, #-2147483648	; 0x80000000
   1f8b8:	mov	r3, #0
   1f8bc:	sub	r2, r2, #123	; 0x7b
   1f8c0:	str	r2, [r0]
   1f8c4:	mov	r0, r3
   1f8c8:	bx	lr
   1f8cc:	mov	r2, #0
   1f8d0:	lsl	ip, ip, #8
   1f8d4:	push	{lr}		; (str lr, [sp, #-4]!)
   1f8d8:	mov	r1, r2
   1f8dc:	mov	lr, #256	; 0x100
   1f8e0:	movt	lr, #32736	; 0x7fe0
   1f8e4:	adds	r2, r2, r2
   1f8e8:	adc	ip, ip, lr
   1f8ec:	sub	sp, sp, #12
   1f8f0:	str	r2, [r0]
   1f8f4:	str	ip, [r0, #4]
   1f8f8:	mov	r0, r1
   1f8fc:	stm	sp, {r2, ip}
   1f900:	add	sp, sp, #12
   1f904:	pop	{pc}		; (ldr pc, [sp], #4)

0001f908 <dta_end_data>:
   1f908:	ldr	r3, [r0, #308]	; 0x134
   1f90c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f910:	strd	r6, [sp, #8]
   1f914:	strd	r8, [sp, #16]
   1f918:	strd	sl, [sp, #24]
   1f91c:	cmp	r3, #0
   1f920:	str	lr, [sp, #32]
   1f924:	sub	sp, sp, #68	; 0x44
   1f928:	moveq	r4, #14
   1f92c:	beq	1fb68 <dta_end_data+0x260>
   1f930:	ldr	r7, [r0, #300]	; 0x12c
   1f934:	mov	r5, r0
   1f938:	ldrb	r4, [r7, #192]	; 0xc0
   1f93c:	tst	r4, #4
   1f940:	bne	1fb88 <dta_end_data+0x280>
   1f944:	ldr	r3, [r7, #100]	; 0x64
   1f948:	cmp	r3, #2
   1f94c:	beq	1fe7c <dta_end_data+0x574>
   1f950:	ldr	r1, [r7, #104]	; 0x68
   1f954:	mov	r0, #1
   1f958:	ldr	r3, [r7, #108]	; 0x6c
   1f95c:	add	r1, r1, r3
   1f960:	bl	3d2c <calloc@plt>
   1f964:	ldrb	r3, [r7, #192]	; 0xc0
   1f968:	str	r0, [sp, #8]
   1f96c:	tst	r3, #4
   1f970:	bne	1fcc0 <dta_end_data+0x3b8>
   1f974:	ldr	r3, [r5, #40]	; 0x28
   1f978:	cmp	r3, #0
   1f97c:	ble	20040 <dta_end_data+0x738>
   1f980:	ldr	r3, [pc, #1784]	; 20080 <dta_end_data+0x778>
   1f984:	mov	r9, #0
   1f988:	mov	sl, r9
   1f98c:	str	r9, [sp, #4]
   1f990:	str	r9, [sp, #12]
   1f994:	add	r3, pc, r3
   1f998:	str	r3, [sp, #16]
   1f99c:	ldr	r3, [pc, #1760]	; 20084 <dta_end_data+0x77c>
   1f9a0:	add	r3, pc, r3
   1f9a4:	str	r3, [sp, #20]
   1f9a8:	ldr	r3, [pc, #1752]	; 20088 <dta_end_data+0x780>
   1f9ac:	add	r3, pc, r3
   1f9b0:	str	r3, [sp, #28]
   1f9b4:	mov	r0, r5
   1f9b8:	ldr	r1, [sp, #4]
   1f9bc:	mov	r4, #0
   1f9c0:	bl	43f8 <readstat_get_label_set@plt>
   1f9c4:	ldr	r3, [r0, #264]	; 0x108
   1f9c8:	mov	fp, r0
   1f9cc:	cmp	r3, r4
   1f9d0:	str	r3, [sp, #36]	; 0x24
   1f9d4:	str	r4, [sp, #40]	; 0x28
   1f9d8:	ble	1fa08 <dta_end_data+0x100>
   1f9dc:	mov	r1, r4
   1f9e0:	mov	r0, fp
   1f9e4:	bl	44a0 <readstat_get_value_label@plt>
   1f9e8:	ldrd	r2, [sp, #36]	; 0x24
   1f9ec:	add	r4, r4, #1
   1f9f0:	ldr	r1, [r0, #28]
   1f9f4:	add	r3, r3, #1
   1f9f8:	cmp	r4, r2
   1f9fc:	add	r3, r3, r1
   1fa00:	str	r3, [sp, #40]	; 0x28
   1fa04:	blt	1f9dc <dta_end_data+0xd4>
   1fa08:	ldrb	r3, [r7, #192]	; 0xc0
   1fa0c:	tst	r3, #4
   1fa10:	beq	1fa28 <dta_end_data+0x120>
   1fa14:	mov	r0, r5
   1fa18:	ldr	r1, [sp, #16]
   1fa1c:	bl	4128 <readstat_write_string@plt>
   1fa20:	cmp	r0, #0
   1fa24:	bne	1fcac <dta_end_data+0x3a4>
   1fa28:	ldr	ip, [sp, #36]	; 0x24
   1fa2c:	mov	r2, #4
   1fa30:	add	r1, sp, #44	; 0x2c
   1fa34:	mov	r0, r5
   1fa38:	ldr	r3, [sp, #40]	; 0x28
   1fa3c:	add	ip, ip, #1
   1fa40:	add	r3, r3, ip, lsl #3
   1fa44:	str	r3, [sp, #44]	; 0x2c
   1fa48:	bl	4428 <readstat_write_bytes@plt>
   1fa4c:	cmp	r0, #0
   1fa50:	bne	1fcac <dta_end_data+0x3a4>
   1fa54:	ldr	r6, [sp, #8]
   1fa58:	add	r1, fp, #4
   1fa5c:	ldr	r4, [r7, #104]	; 0x68
   1fa60:	mov	r0, r6
   1fa64:	mov	r2, r4
   1fa68:	bl	4290 <strncpy@plt>
   1fa6c:	ldr	r2, [r7, #108]	; 0x6c
   1fa70:	mov	r1, r6
   1fa74:	mov	r0, r5
   1fa78:	add	r2, r4, r2
   1fa7c:	bl	4428 <readstat_write_bytes@plt>
   1fa80:	subs	r4, r0, #0
   1fa84:	bne	1fb0c <dta_end_data+0x204>
   1fa88:	ldr	r2, [sp, #40]	; 0x28
   1fa8c:	cmp	r2, #0
   1fa90:	bne	1fd00 <dta_end_data+0x3f8>
   1fa94:	add	r6, sp, #40	; 0x28
   1fa98:	mov	r2, #4
   1fa9c:	mov	r1, r6
   1faa0:	mov	r0, r5
   1faa4:	bl	4428 <readstat_write_bytes@plt>
   1faa8:	cmp	r0, #0
   1faac:	bne	1fcac <dta_end_data+0x3a4>
   1fab0:	mov	r1, r6
   1fab4:	mov	r2, #4
   1fab8:	mov	r0, r5
   1fabc:	bl	4428 <readstat_write_bytes@plt>
   1fac0:	cmp	r0, #0
   1fac4:	bne	1fcac <dta_end_data+0x3a4>
   1fac8:	ldrb	r3, [r7, #192]	; 0xc0
   1facc:	tst	r3, #4
   1fad0:	bne	1fc94 <dta_end_data+0x38c>
   1fad4:	ldr	r2, [sp, #4]
   1fad8:	ldr	r3, [r5, #40]	; 0x28
   1fadc:	add	r2, r2, #1
   1fae0:	cmp	r2, r3
   1fae4:	str	r2, [sp, #4]
   1fae8:	blt	1f9b4 <dta_end_data+0xac>
   1faec:	ldrb	r4, [r7, #192]	; 0xc0
   1faf0:	ands	r4, r4, #4
   1faf4:	beq	1fb0c <dta_end_data+0x204>
   1faf8:	ldr	r1, [pc, #1420]	; 2008c <dta_end_data+0x784>
   1fafc:	mov	r0, r5
   1fb00:	add	r1, pc, r1
   1fb04:	bl	4128 <readstat_write_string@plt>
   1fb08:	mov	r4, r0
   1fb0c:	ldr	r3, [sp, #12]
   1fb10:	cmp	r3, #0
   1fb14:	beq	1fb20 <dta_end_data+0x218>
   1fb18:	mov	r0, r3
   1fb1c:	bl	3e94 <free@plt>
   1fb20:	cmp	sl, #0
   1fb24:	beq	1fb30 <dta_end_data+0x228>
   1fb28:	mov	r0, sl
   1fb2c:	bl	3e94 <free@plt>
   1fb30:	cmp	r9, #0
   1fb34:	beq	1fb40 <dta_end_data+0x238>
   1fb38:	mov	r0, r9
   1fb3c:	bl	3e94 <free@plt>
   1fb40:	ldr	r3, [sp, #8]
   1fb44:	cmp	r3, #0
   1fb48:	beq	1fb54 <dta_end_data+0x24c>
   1fb4c:	ldr	r0, [sp, #8]
   1fb50:	bl	3e94 <free@plt>
   1fb54:	cmp	r4, #0
   1fb58:	bne	1fb68 <dta_end_data+0x260>
   1fb5c:	ldrb	r4, [r7, #192]	; 0xc0
   1fb60:	ands	r4, r4, #4
   1fb64:	bne	1fce8 <dta_end_data+0x3e0>
   1fb68:	mov	r0, r4
   1fb6c:	add	sp, sp, #68	; 0x44
   1fb70:	ldrd	r4, [sp]
   1fb74:	ldrd	r6, [sp, #8]
   1fb78:	ldrd	r8, [sp, #16]
   1fb7c:	ldrd	sl, [sp, #24]
   1fb80:	add	sp, sp, #32
   1fb84:	pop	{pc}		; (ldr pc, [sp], #4)
   1fb88:	ldr	r1, [pc, #1280]	; 20090 <dta_end_data+0x788>
   1fb8c:	add	r1, pc, r1
   1fb90:	bl	4128 <readstat_write_string@plt>
   1fb94:	subs	r4, r0, #0
   1fb98:	bne	1fb68 <dta_end_data+0x260>
   1fb9c:	ldrb	r4, [r7, #192]	; 0xc0
   1fba0:	tst	r4, #4
   1fba4:	beq	1f944 <dta_end_data+0x3c>
   1fba8:	ldr	r1, [pc, #1252]	; 20094 <dta_end_data+0x78c>
   1fbac:	mov	r0, r5
   1fbb0:	add	r1, pc, r1
   1fbb4:	bl	4128 <readstat_write_string@plt>
   1fbb8:	subs	r4, r0, #0
   1fbbc:	bne	1fb68 <dta_end_data+0x260>
   1fbc0:	ldr	r3, [r5, #64]	; 0x40
   1fbc4:	cmp	r3, #0
   1fbc8:	ble	1ff10 <dta_end_data+0x608>
   1fbcc:	ldr	fp, [pc, #1220]	; 20098 <dta_end_data+0x790>
   1fbd0:	mov	r8, r4
   1fbd4:	mvn	sl, #125	; 0x7d
   1fbd8:	add	r9, sp, #44	; 0x2c
   1fbdc:	add	fp, pc, fp
   1fbe0:	b	1fc34 <dta_end_data+0x32c>
   1fbe4:	mov	r2, #17
   1fbe8:	str	lr, [sp, #44]	; 0x2c
   1fbec:	str	ip, [sp, #48]	; 0x30
   1fbf0:	str	r4, [sp, #52]	; 0x34
   1fbf4:	strb	sl, [sp, #56]	; 0x38
   1fbf8:	str	r3, [sp, #57]	; 0x39
   1fbfc:	bl	4428 <readstat_write_bytes@plt>
   1fc00:	mov	r4, r0
   1fc04:	cmp	r4, #0
   1fc08:	add	r1, r6, #20
   1fc0c:	mov	r0, r5
   1fc10:	add	r8, r8, #1
   1fc14:	bne	1fb68 <dta_end_data+0x260>
   1fc18:	ldr	r2, [r6, #16]
   1fc1c:	bl	4428 <readstat_write_bytes@plt>
   1fc20:	subs	r4, r0, #0
   1fc24:	bne	1fb68 <dta_end_data+0x260>
   1fc28:	ldr	r3, [r5, #64]	; 0x40
   1fc2c:	cmp	r8, r3
   1fc30:	bge	1ff10 <dta_end_data+0x608>
   1fc34:	ldr	r3, [r5, #60]	; 0x3c
   1fc38:	mov	r1, fp
   1fc3c:	mov	r0, r5
   1fc40:	ldr	r6, [r3, r8, lsl #2]
   1fc44:	bl	4128 <readstat_write_string@plt>
   1fc48:	subs	r4, r0, #0
   1fc4c:	mov	r2, #13
   1fc50:	mov	r1, r9
   1fc54:	mov	r0, r5
   1fc58:	bne	1fb68 <dta_end_data+0x260>
   1fc5c:	ldr	r3, [r7, #116]	; 0x74
   1fc60:	ldr	lr, [r6]
   1fc64:	ldr	ip, [r6, #8]
   1fc68:	cmp	r3, #4
   1fc6c:	ldr	r4, [r6, #12]
   1fc70:	ldr	r3, [r6, #16]
   1fc74:	bhi	1fbe4 <dta_end_data+0x2dc>
   1fc78:	str	lr, [sp, #44]	; 0x2c
   1fc7c:	str	ip, [sp, #48]	; 0x30
   1fc80:	strb	sl, [sp, #52]	; 0x34
   1fc84:	str	r3, [sp, #53]	; 0x35
   1fc88:	bl	4428 <readstat_write_bytes@plt>
   1fc8c:	mov	r4, r0
   1fc90:	b	1fc04 <dta_end_data+0x2fc>
   1fc94:	ldr	r1, [pc, #1024]	; 2009c <dta_end_data+0x794>
   1fc98:	mov	r0, r5
   1fc9c:	add	r1, pc, r1
   1fca0:	bl	4128 <readstat_write_string@plt>
   1fca4:	cmp	r0, #0
   1fca8:	beq	1fad4 <dta_end_data+0x1cc>
   1fcac:	ldr	r3, [sp, #12]
   1fcb0:	mov	r4, r0
   1fcb4:	cmp	r3, #0
   1fcb8:	bne	1fb18 <dta_end_data+0x210>
   1fcbc:	b	1fb20 <dta_end_data+0x218>
   1fcc0:	ldr	r1, [pc, #984]	; 200a0 <dta_end_data+0x798>
   1fcc4:	mov	r0, r5
   1fcc8:	add	r1, pc, r1
   1fccc:	bl	4128 <readstat_write_string@plt>
   1fcd0:	subs	r4, r0, #0
   1fcd4:	beq	1f974 <dta_end_data+0x6c>
   1fcd8:	ldr	r3, [sp, #8]
   1fcdc:	cmp	r3, #0
   1fce0:	bne	1fb4c <dta_end_data+0x244>
   1fce4:	b	1fb68 <dta_end_data+0x260>
   1fce8:	ldr	r1, [pc, #948]	; 200a4 <dta_end_data+0x79c>
   1fcec:	mov	r0, r5
   1fcf0:	add	r1, pc, r1
   1fcf4:	bl	4128 <readstat_write_string@plt>
   1fcf8:	mov	r4, r0
   1fcfc:	b	1fb68 <dta_end_data+0x260>
   1fd00:	ldr	r0, [sp, #12]
   1fd04:	ldr	r1, [sp, #36]	; 0x24
   1fd08:	lsl	r1, r1, #2
   1fd0c:	bl	3fcc <realloc@plt>
   1fd10:	ldr	r1, [sp, #36]	; 0x24
   1fd14:	str	r0, [sp, #12]
   1fd18:	mov	r0, sl
   1fd1c:	lsl	r1, r1, #2
   1fd20:	bl	3fcc <realloc@plt>
   1fd24:	mov	sl, r0
   1fd28:	mov	r0, r9
   1fd2c:	ldr	r1, [sp, #40]	; 0x28
   1fd30:	bl	3fcc <realloc@plt>
   1fd34:	mov	r9, r0
   1fd38:	mov	r0, fp
   1fd3c:	ldr	r1, [sp, #20]
   1fd40:	bl	3d80 <readstat_sort_label_set@plt>
   1fd44:	ldr	r3, [sp, #36]	; 0x24
   1fd48:	cmp	r3, #0
   1fd4c:	ble	1fdd8 <dta_end_data+0x4d0>
   1fd50:	mov	r6, r4
   1fd54:	str	r7, [sp, #24]
   1fd58:	mov	r7, r4
   1fd5c:	ldr	r4, [sp, #12]
   1fd60:	b	1fda0 <dta_end_data+0x498>
   1fd64:	ldr	r0, [r5, #8]
   1fd68:	cmp	r0, #112	; 0x70
   1fd6c:	ble	1ff2c <dta_end_data+0x624>
   1fd70:	add	r0, r9, r7
   1fd74:	str	r2, [sl, r6, lsl #2]
   1fd78:	mov	r2, r8
   1fd7c:	bl	3ef4 <memcpy@plt>
   1fd80:	ldr	r2, [sp, #36]	; 0x24
   1fd84:	add	r8, r8, r7
   1fd88:	add	r6, r6, #1
   1fd8c:	mov	r3, #0
   1fd90:	add	r7, r8, #1
   1fd94:	strb	r3, [r9, r8]
   1fd98:	cmp	r6, r2
   1fd9c:	bge	1fdd4 <dta_end_data+0x4cc>
   1fda0:	mov	r1, r6
   1fda4:	mov	r0, fp
   1fda8:	bl	44a0 <readstat_get_value_label@plt>
   1fdac:	ldr	r1, [r0, #24]
   1fdb0:	ldr	r8, [r0, #28]
   1fdb4:	str	r7, [r4, r6, lsl #2]
   1fdb8:	ldrb	ip, [r0, #12]
   1fdbc:	add	r2, ip, #-2147483648	; 0x80000000
   1fdc0:	cmp	ip, #0
   1fdc4:	sub	r2, r2, #123	; 0x7b
   1fdc8:	bne	1fd64 <dta_end_data+0x45c>
   1fdcc:	ldr	r2, [r0, #8]
   1fdd0:	b	1fd70 <dta_end_data+0x468>
   1fdd4:	ldr	r7, [sp, #24]
   1fdd8:	mov	r2, #4
   1fddc:	add	r1, sp, #36	; 0x24
   1fde0:	mov	r0, r5
   1fde4:	bl	4428 <readstat_write_bytes@plt>
   1fde8:	cmp	r0, #0
   1fdec:	bne	1fcac <dta_end_data+0x3a4>
   1fdf0:	mov	r2, #4
   1fdf4:	add	r1, sp, #40	; 0x28
   1fdf8:	mov	r0, r5
   1fdfc:	bl	4428 <readstat_write_bytes@plt>
   1fe00:	cmp	r0, #0
   1fe04:	bne	1fcac <dta_end_data+0x3a4>
   1fe08:	mov	r0, r5
   1fe0c:	ldr	r1, [sp, #12]
   1fe10:	ldr	r2, [sp, #36]	; 0x24
   1fe14:	lsl	r2, r2, #2
   1fe18:	bl	4428 <readstat_write_bytes@plt>
   1fe1c:	cmp	r0, #0
   1fe20:	bne	1fcac <dta_end_data+0x3a4>
   1fe24:	ldr	r2, [sp, #36]	; 0x24
   1fe28:	mov	r1, sl
   1fe2c:	mov	r0, r5
   1fe30:	lsl	r2, r2, #2
   1fe34:	bl	4428 <readstat_write_bytes@plt>
   1fe38:	cmp	r0, #0
   1fe3c:	bne	1fcac <dta_end_data+0x3a4>
   1fe40:	mov	r1, r9
   1fe44:	mov	r0, r5
   1fe48:	ldr	r2, [sp, #40]	; 0x28
   1fe4c:	bl	4428 <readstat_write_bytes@plt>
   1fe50:	cmp	r0, #0
   1fe54:	bne	1fcac <dta_end_data+0x3a4>
   1fe58:	ldrb	r3, [r7, #192]	; 0xc0
   1fe5c:	tst	r3, #4
   1fe60:	beq	1fad4 <dta_end_data+0x1cc>
   1fe64:	mov	r0, r5
   1fe68:	ldr	r1, [sp, #28]
   1fe6c:	bl	4128 <readstat_write_string@plt>
   1fe70:	cmp	r0, #0
   1fe74:	beq	1fad4 <dta_end_data+0x1cc>
   1fe78:	b	1fcac <dta_end_data+0x3a4>
   1fe7c:	ldr	r3, [r5, #40]	; 0x28
   1fe80:	cmp	r3, #0
   1fe84:	movgt	r6, #0
   1fe88:	addgt	r9, sp, #40	; 0x28
   1fe8c:	movgt	r8, r6
   1fe90:	ble	1fb5c <dta_end_data+0x254>
   1fe94:	mov	r1, r8
   1fe98:	mov	r0, r5
   1fe9c:	bl	43f8 <readstat_get_label_set@plt>
   1fea0:	ldr	r3, [r0, #264]	; 0x108
   1fea4:	mov	fp, r0
   1fea8:	cmp	r3, #0
   1feac:	ble	20064 <dta_end_data+0x75c>
   1feb0:	mov	sl, #0
   1feb4:	mov	r4, sl
   1feb8:	b	1fedc <dta_end_data+0x5d4>
   1febc:	ldr	r3, [r0, #8]
   1fec0:	cmp	r3, #1024	; 0x400
   1fec4:	bhi	1ff38 <dta_end_data+0x630>
   1fec8:	ldr	r2, [fp, #264]	; 0x108
   1fecc:	cmp	sl, r3
   1fed0:	movlt	sl, r3
   1fed4:	cmp	r4, r2
   1fed8:	bge	1ff40 <dta_end_data+0x638>
   1fedc:	mov	r1, r4
   1fee0:	mov	r0, fp
   1fee4:	bl	44a0 <readstat_get_value_label@plt>
   1fee8:	ldrb	r3, [r0, #12]
   1feec:	add	r4, r4, #1
   1fef0:	cmp	r3, #0
   1fef4:	beq	1febc <dta_end_data+0x5b4>
   1fef8:	mov	r4, #23
   1fefc:	cmp	r6, #0
   1ff00:	beq	1fb54 <dta_end_data+0x24c>
   1ff04:	mov	r0, r6
   1ff08:	bl	3e94 <free@plt>
   1ff0c:	b	1fb54 <dta_end_data+0x24c>
   1ff10:	ldr	r1, [pc, #400]	; 200a8 <dta_end_data+0x7a0>
   1ff14:	mov	r0, r5
   1ff18:	add	r1, pc, r1
   1ff1c:	bl	4128 <readstat_write_string@plt>
   1ff20:	subs	r4, r0, #0
   1ff24:	beq	1f944 <dta_end_data+0x3c>
   1ff28:	b	1fb68 <dta_end_data+0x260>
   1ff2c:	mov	r4, #23
   1ff30:	ldr	r7, [sp, #24]
   1ff34:	b	1fb0c <dta_end_data+0x204>
   1ff38:	mov	r4, #20
   1ff3c:	b	1fefc <dta_end_data+0x5f4>
   1ff40:	add	r3, sl, #1
   1ff44:	lsl	r3, r3, #3
   1ff48:	sxth	r3, r3
   1ff4c:	mov	r2, #2
   1ff50:	mov	r1, r9
   1ff54:	strh	r3, [sp, #40]	; 0x28
   1ff58:	mov	r0, r5
   1ff5c:	bl	4428 <readstat_write_bytes@plt>
   1ff60:	subs	r4, r0, #0
   1ff64:	bne	1fefc <dta_end_data+0x5f4>
   1ff68:	str	r4, [sp, #44]	; 0x2c
   1ff6c:	add	r3, sp, #44	; 0x2c
   1ff70:	add	r1, fp, #4
   1ff74:	str	r4, [sp, #48]	; 0x30
   1ff78:	mov	r0, r3
   1ff7c:	str	r4, [sp, #52]	; 0x34
   1ff80:	strh	r4, [sp, #56]	; 0x38
   1ff84:	ldr	r4, [r7, #104]	; 0x68
   1ff88:	mov	r2, r4
   1ff8c:	bl	4290 <strncpy@plt>
   1ff90:	ldr	r2, [r7, #108]	; 0x6c
   1ff94:	mov	r1, r0
   1ff98:	mov	r0, r5
   1ff9c:	add	r2, r4, r2
   1ffa0:	bl	4428 <readstat_write_bytes@plt>
   1ffa4:	subs	r4, r0, #0
   1ffa8:	bne	1fefc <dta_end_data+0x5f4>
   1ffac:	ldrsh	sl, [sp, #40]	; 0x28
   1ffb0:	mov	r0, r6
   1ffb4:	mov	r1, sl
   1ffb8:	bl	3fcc <realloc@plt>
   1ffbc:	mov	r2, sl
   1ffc0:	mov	r1, r4
   1ffc4:	mov	r6, r0
   1ffc8:	bl	4278 <memset@plt>
   1ffcc:	ldr	r3, [fp, #264]	; 0x108
   1ffd0:	cmp	r3, #0
   1ffd4:	ble	20014 <dta_end_data+0x70c>
   1ffd8:	mov	r1, r4
   1ffdc:	mov	r0, fp
   1ffe0:	bl	44a0 <readstat_get_value_label@plt>
   1ffe4:	ldr	r3, [r0, #8]
   1ffe8:	add	r4, r4, #1
   1ffec:	ldr	r2, [r0, #28]
   1fff0:	ldr	r1, [r0, #24]
   1fff4:	add	r0, r6, r3, lsl #3
   1fff8:	cmp	r2, #8
   1fffc:	movcs	r2, #8
   20000:	bl	3ef4 <memcpy@plt>
   20004:	ldr	r3, [fp, #264]	; 0x108
   20008:	cmp	r4, r3
   2000c:	blt	1ffd8 <dta_end_data+0x6d0>
   20010:	ldrsh	sl, [sp, #40]	; 0x28
   20014:	mov	r2, sl
   20018:	mov	r1, r6
   2001c:	mov	r0, r5
   20020:	bl	4428 <readstat_write_bytes@plt>
   20024:	subs	r4, r0, #0
   20028:	bne	1ff04 <dta_end_data+0x5fc>
   2002c:	ldr	r3, [r5, #40]	; 0x28
   20030:	add	r8, r8, #1
   20034:	cmp	r8, r3
   20038:	blt	1fe94 <dta_end_data+0x58c>
   2003c:	b	1ff04 <dta_end_data+0x5fc>
   20040:	ldrb	r4, [r7, #192]	; 0xc0
   20044:	ands	r3, r4, #4
   20048:	beq	2006c <dta_end_data+0x764>
   2004c:	ldr	r1, [pc, #88]	; 200ac <dta_end_data+0x7a4>
   20050:	mov	r0, r5
   20054:	add	r1, pc, r1
   20058:	bl	4128 <readstat_write_string@plt>
   2005c:	mov	r4, r0
   20060:	b	1fb40 <dta_end_data+0x238>
   20064:	mov	r3, #8
   20068:	b	1ff4c <dta_end_data+0x644>
   2006c:	ldr	r2, [sp, #8]
   20070:	cmp	r2, #0
   20074:	movne	r4, r3
   20078:	bne	1fb4c <dta_end_data+0x244>
   2007c:	b	1fb60 <dta_end_data+0x258>
   20080:	.word	0x00008618
   20084:	.word	0xfffffca8
   20088:	.word	0x00008608
   2008c:	.word	0x00008520
   20090:	.word	0x000083d0
   20094:	.word	0x0000838c
   20098:	.word	0x00008368
   2009c:	.word	0x00008318
   200a0:	.word	0x000082d4
   200a4:	.word	0x00008340
   200a8:	.word	0x000080fc
   200ac:	.word	0x00007fcc

000200b0 <dta_emit_header_time_stamp.part.18>:
   200b0:	ldr	r3, [r0, #20]
   200b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   200b8:	strd	r6, [sp, #8]
   200bc:	strd	r8, [sp, #16]
   200c0:	mov	r8, r1
   200c4:	mov	r9, r0
   200c8:	str	sl, [sp, #24]
   200cc:	str	lr, [sp, #28]
   200d0:	sub	sp, sp, #80	; 0x50
   200d4:	add	r0, sp, #28
   200d8:	str	r3, [sp, #28]
   200dc:	bl	4134 <localtime@plt>
   200e0:	ldr	sl, [r8, #16]
   200e4:	mov	r6, r0
   200e8:	mov	r0, #1
   200ec:	mov	r1, sl
   200f0:	bl	3d2c <calloc@plt>
   200f4:	ldr	r1, [pc, #356]	; 20260 <dta_emit_header_time_stamp.part.18+0x1b0>
   200f8:	cmp	r6, #0
   200fc:	mov	r7, r0
   20100:	add	r1, pc, r1
   20104:	ldrd	r4, [r1]
   20108:	ldrd	r2, [r1, #8]
   2010c:	strd	r4, [sp, #32]
   20110:	ldrd	r4, [r1, #24]
   20114:	strd	r2, [sp, #40]	; 0x28
   20118:	ldrd	r2, [r1, #32]
   2011c:	strd	r2, [sp, #16]
   20120:	ldrd	r2, [r1, #16]
   20124:	strd	r4, [sp, #56]	; 0x38
   20128:	moveq	r4, #39	; 0x27
   2012c:	strd	r2, [sp, #48]	; 0x30
   20130:	ldrd	r2, [r1, #40]	; 0x28
   20134:	strd	r2, [sp, #72]	; 0x48
   20138:	ldrd	r2, [sp, #16]
   2013c:	strd	r2, [sp, #64]	; 0x40
   20140:	beq	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   20144:	cmp	r0, #0
   20148:	moveq	r4, #3
   2014c:	beq	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   20150:	ldr	lr, [r6, #4]
   20154:	add	ip, sp, #32
   20158:	mov	r1, sl
   2015c:	ldr	r3, [r6, #12]
   20160:	ldr	r2, [pc, #252]	; 20264 <dta_emit_header_time_stamp.part.18+0x1b4>
   20164:	str	lr, [sp, #12]
   20168:	ldr	lr, [r6, #8]
   2016c:	add	r2, pc, r2
   20170:	str	lr, [sp, #8]
   20174:	ldr	lr, [r6, #20]
   20178:	add	lr, lr, #1888	; 0x760
   2017c:	add	lr, lr, #12
   20180:	str	lr, [sp, #4]
   20184:	ldr	lr, [r6, #16]
   20188:	add	ip, ip, lr, lsl #2
   2018c:	str	ip, [sp]
   20190:	bl	4254 <snprintf@plt>
   20194:	uxtb	r0, r0
   20198:	cmp	r0, #0
   2019c:	moveq	r4, #13
   201a0:	strb	r0, [sp, #27]
   201a4:	beq	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   201a8:	ldrb	r3, [r8, #192]	; 0xc0
   201ac:	tst	r3, #4
   201b0:	beq	2020c <dta_emit_header_time_stamp.part.18+0x15c>
   201b4:	ldr	r1, [pc, #172]	; 20268 <dta_emit_header_time_stamp.part.18+0x1b8>
   201b8:	mov	r0, r9
   201bc:	add	r1, pc, r1
   201c0:	bl	4128 <readstat_write_string@plt>
   201c4:	subs	r4, r0, #0
   201c8:	bne	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   201cc:	mov	r2, #1
   201d0:	add	r1, sp, #27
   201d4:	mov	r0, r9
   201d8:	bl	4428 <readstat_write_bytes@plt>
   201dc:	subs	r4, r0, #0
   201e0:	beq	20224 <dta_emit_header_time_stamp.part.18+0x174>
   201e4:	mov	r0, r7
   201e8:	bl	3e94 <free@plt>
   201ec:	mov	r0, r4
   201f0:	add	sp, sp, #80	; 0x50
   201f4:	ldrd	r4, [sp]
   201f8:	ldrd	r6, [sp, #8]
   201fc:	ldrd	r8, [sp, #16]
   20200:	ldr	sl, [sp, #24]
   20204:	add	sp, sp, #28
   20208:	pop	{pc}		; (ldr pc, [sp], #4)
   2020c:	mov	r0, r9
   20210:	mov	r1, r7
   20214:	ldr	r2, [r8, #16]
   20218:	bl	4428 <readstat_write_bytes@plt>
   2021c:	mov	r4, r0
   20220:	b	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   20224:	ldrb	r2, [sp, #27]
   20228:	mov	r1, r7
   2022c:	mov	r0, r9
   20230:	bl	4428 <readstat_write_bytes@plt>
   20234:	subs	r4, r0, #0
   20238:	bne	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   2023c:	ldrb	r3, [r8, #192]	; 0xc0
   20240:	tst	r3, #4
   20244:	beq	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   20248:	ldr	r1, [pc, #28]	; 2026c <dta_emit_header_time_stamp.part.18+0x1bc>
   2024c:	mov	r0, r9
   20250:	add	r1, pc, r1
   20254:	bl	4128 <readstat_write_string@plt>
   20258:	mov	r4, r0
   2025c:	b	201e4 <dta_emit_header_time_stamp.part.18+0x134>
   20260:	.word	0x00007ee4
   20264:	.word	0x00007ed4
   20268:	.word	0x00007c10
   2026c:	.word	0x00007b88

00020270 <dta_validate_name>:
   20270:	strd	r4, [sp, #-12]!
   20274:	mov	r5, r2
   20278:	mov	r4, r0
   2027c:	str	lr, [sp, #8]
   20280:	sub	sp, sp, #12
   20284:	bl	41d0 <strlen@plt>
   20288:	cmp	r0, r5
   2028c:	movhi	r0, #28
   20290:	bhi	204f8 <dta_validate_name+0x288>
   20294:	ldrb	r1, [r4]
   20298:	cmp	r1, #0
   2029c:	moveq	r0, #38	; 0x26
   202a0:	beq	204f8 <dta_validate_name+0x288>
   202a4:	mov	r0, r4
   202a8:	mov	r3, r1
   202ac:	bic	r2, r3, #32
   202b0:	cmp	r3, #95	; 0x5f
   202b4:	sub	r2, r2, #65	; 0x41
   202b8:	beq	202d0 <dta_validate_name+0x60>
   202bc:	cmp	r2, #25
   202c0:	sub	r3, r3, #48	; 0x30
   202c4:	bls	202d0 <dta_validate_name+0x60>
   202c8:	cmp	r3, #9
   202cc:	bhi	2051c <dta_validate_name+0x2ac>
   202d0:	ldrb	r3, [r0, #1]!
   202d4:	cmp	r3, #0
   202d8:	bne	202ac <dta_validate_name+0x3c>
   202dc:	cmp	r1, #95	; 0x5f
   202e0:	beq	202f8 <dta_validate_name+0x88>
   202e4:	bic	r1, r1, #32
   202e8:	sub	r1, r1, #65	; 0x41
   202ec:	cmp	r1, #25
   202f0:	movhi	r0, #25
   202f4:	bhi	204f8 <dta_validate_name+0x288>
   202f8:	ldr	r1, [pc, #548]	; 20524 <dta_validate_name+0x2b4>
   202fc:	mov	r0, r4
   20300:	add	r1, pc, r1
   20304:	bl	3dd4 <strcmp@plt>
   20308:	cmp	r0, #0
   2030c:	beq	20508 <dta_validate_name+0x298>
   20310:	ldr	r1, [pc, #528]	; 20528 <dta_validate_name+0x2b8>
   20314:	mov	r0, r4
   20318:	add	r1, pc, r1
   2031c:	bl	3dd4 <strcmp@plt>
   20320:	cmp	r0, #0
   20324:	beq	20508 <dta_validate_name+0x298>
   20328:	ldr	r1, [pc, #508]	; 2052c <dta_validate_name+0x2bc>
   2032c:	mov	r0, r4
   20330:	add	r1, pc, r1
   20334:	bl	3dd4 <strcmp@plt>
   20338:	cmp	r0, #0
   2033c:	beq	20508 <dta_validate_name+0x298>
   20340:	ldr	r1, [pc, #488]	; 20530 <dta_validate_name+0x2c0>
   20344:	mov	r0, r4
   20348:	add	r1, pc, r1
   2034c:	bl	3dd4 <strcmp@plt>
   20350:	cmp	r0, #0
   20354:	beq	20508 <dta_validate_name+0x298>
   20358:	ldr	r1, [pc, #468]	; 20534 <dta_validate_name+0x2c4>
   2035c:	mov	r0, r4
   20360:	add	r1, pc, r1
   20364:	bl	3dd4 <strcmp@plt>
   20368:	cmp	r0, #0
   2036c:	beq	20508 <dta_validate_name+0x298>
   20370:	ldr	r1, [pc, #448]	; 20538 <dta_validate_name+0x2c8>
   20374:	mov	r0, r4
   20378:	add	r1, pc, r1
   2037c:	bl	3dd4 <strcmp@plt>
   20380:	cmp	r0, #0
   20384:	beq	20508 <dta_validate_name+0x298>
   20388:	ldr	r1, [pc, #428]	; 2053c <dta_validate_name+0x2cc>
   2038c:	mov	r0, r4
   20390:	add	r1, pc, r1
   20394:	bl	3dd4 <strcmp@plt>
   20398:	cmp	r0, #0
   2039c:	beq	20508 <dta_validate_name+0x298>
   203a0:	ldr	r1, [pc, #408]	; 20540 <dta_validate_name+0x2d0>
   203a4:	mov	r0, r4
   203a8:	add	r1, pc, r1
   203ac:	bl	3dd4 <strcmp@plt>
   203b0:	cmp	r0, #0
   203b4:	beq	20508 <dta_validate_name+0x298>
   203b8:	ldr	r1, [pc, #388]	; 20544 <dta_validate_name+0x2d4>
   203bc:	mov	r0, r4
   203c0:	add	r1, pc, r1
   203c4:	bl	3dd4 <strcmp@plt>
   203c8:	cmp	r0, #0
   203cc:	beq	20508 <dta_validate_name+0x298>
   203d0:	ldr	r1, [pc, #368]	; 20548 <dta_validate_name+0x2d8>
   203d4:	mov	r0, r4
   203d8:	add	r1, pc, r1
   203dc:	bl	3dd4 <strcmp@plt>
   203e0:	cmp	r0, #0
   203e4:	beq	20508 <dta_validate_name+0x298>
   203e8:	ldr	r1, [pc, #348]	; 2054c <dta_validate_name+0x2dc>
   203ec:	mov	r0, r4
   203f0:	add	r1, pc, r1
   203f4:	bl	3dd4 <strcmp@plt>
   203f8:	cmp	r0, #0
   203fc:	beq	20508 <dta_validate_name+0x298>
   20400:	ldr	r1, [pc, #328]	; 20550 <dta_validate_name+0x2e0>
   20404:	mov	r0, r4
   20408:	add	r1, pc, r1
   2040c:	bl	3dd4 <strcmp@plt>
   20410:	cmp	r0, #0
   20414:	beq	20508 <dta_validate_name+0x298>
   20418:	ldr	r1, [pc, #308]	; 20554 <dta_validate_name+0x2e4>
   2041c:	mov	r0, r4
   20420:	add	r1, pc, r1
   20424:	bl	3dd4 <strcmp@plt>
   20428:	cmp	r0, #0
   2042c:	beq	20508 <dta_validate_name+0x298>
   20430:	ldr	r1, [pc, #288]	; 20558 <dta_validate_name+0x2e8>
   20434:	mov	r0, r4
   20438:	add	r1, pc, r1
   2043c:	bl	3dd4 <strcmp@plt>
   20440:	cmp	r0, #0
   20444:	beq	20508 <dta_validate_name+0x298>
   20448:	ldr	r1, [pc, #268]	; 2055c <dta_validate_name+0x2ec>
   2044c:	mov	r0, r4
   20450:	add	r1, pc, r1
   20454:	bl	3dd4 <strcmp@plt>
   20458:	cmp	r0, #0
   2045c:	beq	20508 <dta_validate_name+0x298>
   20460:	ldr	r1, [pc, #248]	; 20560 <dta_validate_name+0x2f0>
   20464:	mov	r0, r4
   20468:	add	r1, pc, r1
   2046c:	bl	3dd4 <strcmp@plt>
   20470:	cmp	r0, #0
   20474:	beq	20508 <dta_validate_name+0x298>
   20478:	ldr	r1, [pc, #228]	; 20564 <dta_validate_name+0x2f4>
   2047c:	mov	r0, r4
   20480:	add	r1, pc, r1
   20484:	bl	3dd4 <strcmp@plt>
   20488:	cmp	r0, #0
   2048c:	beq	20508 <dta_validate_name+0x298>
   20490:	ldr	r1, [pc, #208]	; 20568 <dta_validate_name+0x2f8>
   20494:	mov	r0, r4
   20498:	add	r1, pc, r1
   2049c:	bl	3dd4 <strcmp@plt>
   204a0:	cmp	r0, #0
   204a4:	beq	20508 <dta_validate_name+0x298>
   204a8:	ldr	r1, [pc, #188]	; 2056c <dta_validate_name+0x2fc>
   204ac:	mov	r0, r4
   204b0:	add	r1, pc, r1
   204b4:	bl	3dd4 <strcmp@plt>
   204b8:	cmp	r0, #0
   204bc:	beq	20508 <dta_validate_name+0x298>
   204c0:	ldr	r1, [pc, #168]	; 20570 <dta_validate_name+0x300>
   204c4:	mov	r0, r4
   204c8:	add	r1, pc, r1
   204cc:	bl	3dd4 <strcmp@plt>
   204d0:	cmp	r0, #0
   204d4:	beq	20508 <dta_validate_name+0x298>
   204d8:	ldr	r1, [pc, #148]	; 20574 <dta_validate_name+0x304>
   204dc:	mov	r0, r4
   204e0:	add	r2, sp, #4
   204e4:	add	r1, pc, r1
   204e8:	bl	4260 <__isoc99_sscanf@plt>
   204ec:	cmp	r0, #1
   204f0:	movne	r0, #0
   204f4:	beq	20508 <dta_validate_name+0x298>
   204f8:	add	sp, sp, #12
   204fc:	ldrd	r4, [sp]
   20500:	add	sp, sp, #8
   20504:	pop	{pc}		; (ldr pc, [sp], #4)
   20508:	mov	r0, #27
   2050c:	add	sp, sp, #12
   20510:	ldrd	r4, [sp]
   20514:	add	sp, sp, #8
   20518:	pop	{pc}		; (ldr pc, [sp], #4)
   2051c:	mov	r0, #26
   20520:	b	204f8 <dta_validate_name+0x288>
   20524:	.word	0x00007d58
   20528:	.word	0x00007d48
   2052c:	.word	0x00007d34
   20530:	.word	0x00007d24
   20534:	.word	0x00007d14
   20538:	.word	0x00007d04
   2053c:	.word	0x00007cf4
   20540:	.word	0x00007ce4
   20544:	.word	0x00007cd0
   20548:	.word	0x00007cbc
   2054c:	.word	0x00007ca8
   20550:	.word	0x00007c98
   20554:	.word	0x00007c84
   20558:	.word	0x00007c70
   2055c:	.word	0x00007c5c
   20560:	.word	0x00007c4c
   20564:	.word	0x00007c38
   20568:	.word	0x00007c28
   2056c:	.word	0x00007c18
   20570:	.word	0x00007c08
   20574:	.word	0x00007bf4

00020578 <dta_old_variable_ok>:
   20578:	str	r4, [sp, #-8]!
   2057c:	str	lr, [sp, #4]
   20580:	bl	4338 <readstat_variable_get_name@plt>
   20584:	mov	r2, #9
   20588:	mov	r1, #0
   2058c:	ldr	r4, [sp]
   20590:	ldr	lr, [sp, #4]
   20594:	add	sp, sp, #8
   20598:	b	20270 <dta_validate_name>

0002059c <dta_110_variable_ok>:
   2059c:	str	r4, [sp, #-8]!
   205a0:	str	lr, [sp, #4]
   205a4:	bl	4338 <readstat_variable_get_name@plt>
   205a8:	mov	r2, #33	; 0x21
   205ac:	mov	r1, #0
   205b0:	ldr	r4, [sp]
   205b4:	ldr	lr, [sp, #4]
   205b8:	add	sp, sp, #8
   205bc:	b	20270 <dta_validate_name>

000205c0 <dta_118_variable_ok>:
   205c0:	str	r4, [sp, #-8]!
   205c4:	str	lr, [sp, #4]
   205c8:	bl	4338 <readstat_variable_get_name@plt>
   205cc:	mov	r2, #129	; 0x81
   205d0:	mov	r1, #1
   205d4:	ldr	r4, [sp]
   205d8:	ldr	lr, [sp, #4]
   205dc:	add	sp, sp, #8
   205e0:	b	20270 <dta_validate_name>

000205e4 <dta_typecode_for_variable.constprop.21>:
   205e4:	cmp	r1, #111	; 0x6f
   205e8:	ldr	r3, [r0]
   205ec:	ldr	r0, [r0, #1596]	; 0x63c
   205f0:	beq	20698 <dta_typecode_for_variable.constprop.21+0xb4>
   205f4:	cmp	r1, #117	; 0x75
   205f8:	beq	20624 <dta_typecode_for_variable.constprop.21+0x40>
   205fc:	cmp	r3, #6
   20600:	addls	pc, pc, r3, lsl #2
   20604:	b	20718 <dta_typecode_for_variable.constprop.21+0x134>
   20608:	b	2067c <dta_typecode_for_variable.constprop.21+0x98>
   2060c:	b	20654 <dta_typecode_for_variable.constprop.21+0x70>
   20610:	b	20674 <dta_typecode_for_variable.constprop.21+0x90>
   20614:	b	20690 <dta_typecode_for_variable.constprop.21+0xac>
   20618:	b	2066c <dta_typecode_for_variable.constprop.21+0x88>
   2061c:	b	20664 <dta_typecode_for_variable.constprop.21+0x80>
   20620:	b	2064c <dta_typecode_for_variable.constprop.21+0x68>
   20624:	cmp	r3, #6
   20628:	addls	pc, pc, r3, lsl #2
   2062c:	b	20718 <dta_typecode_for_variable.constprop.21+0x134>
   20630:	b	20680 <dta_typecode_for_variable.constprop.21+0x9c>
   20634:	b	206e8 <dta_typecode_for_variable.constprop.21+0x104>
   20638:	b	206c8 <dta_typecode_for_variable.constprop.21+0xe4>
   2063c:	b	206d0 <dta_typecode_for_variable.constprop.21+0xec>
   20640:	b	206d8 <dta_typecode_for_variable.constprop.21+0xf4>
   20644:	b	206e0 <dta_typecode_for_variable.constprop.21+0xfc>
   20648:	b	206c0 <dta_typecode_for_variable.constprop.21+0xdc>
   2064c:	mov	r0, #33	; 0x21
   20650:	bx	lr
   20654:	mov	r3, #98	; 0x62
   20658:	mov	r0, #0
   2065c:	strh	r3, [r2]
   20660:	bx	lr
   20664:	mov	r3, #100	; 0x64
   20668:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   2066c:	mov	r3, #102	; 0x66
   20670:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   20674:	mov	r3, #105	; 0x69
   20678:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   2067c:	add	r0, r0, #127	; 0x7f
   20680:	uxth	r3, r0
   20684:	mov	r0, #0
   20688:	strh	r3, [r2]
   2068c:	bx	lr
   20690:	mov	r3, #108	; 0x6c
   20694:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   20698:	cmp	r3, #6
   2069c:	addls	pc, pc, r3, lsl #2
   206a0:	b	20718 <dta_typecode_for_variable.constprop.21+0x134>
   206a4:	b	20680 <dta_typecode_for_variable.constprop.21+0x9c>
   206a8:	b	206f0 <dta_typecode_for_variable.constprop.21+0x10c>
   206ac:	b	20710 <dta_typecode_for_variable.constprop.21+0x12c>
   206b0:	b	20708 <dta_typecode_for_variable.constprop.21+0x124>
   206b4:	b	20700 <dta_typecode_for_variable.constprop.21+0x11c>
   206b8:	b	206f8 <dta_typecode_for_variable.constprop.21+0x114>
   206bc:	b	2064c <dta_typecode_for_variable.constprop.21+0x68>
   206c0:	mov	r3, #32768	; 0x8000
   206c4:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   206c8:	movw	r3, #65529	; 0xfff9
   206cc:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   206d0:	movw	r3, #65528	; 0xfff8
   206d4:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   206d8:	movw	r3, #65527	; 0xfff7
   206dc:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   206e0:	movw	r3, #65526	; 0xfff6
   206e4:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   206e8:	movw	r3, #65530	; 0xfffa
   206ec:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   206f0:	mov	r3, #251	; 0xfb
   206f4:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   206f8:	mov	r3, #255	; 0xff
   206fc:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   20700:	mov	r3, #254	; 0xfe
   20704:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   20708:	mov	r3, #253	; 0xfd
   2070c:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   20710:	mov	r3, #252	; 0xfc
   20714:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>
   20718:	mov	r3, #0
   2071c:	b	20658 <dta_typecode_for_variable.constprop.21+0x74>

00020720 <dta_begin_data>:
   20720:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20724:	strd	r6, [sp, #8]
   20728:	strd	r8, [sp, #16]
   2072c:	strd	sl, [sp, #24]
   20730:	add	fp, sp, #32
   20734:	str	lr, [sp, #32]
   20738:	sub	sp, sp, #196	; 0xc4
   2073c:	ldr	r3, [r0, #308]	; 0x134
   20740:	cmp	r3, #0
   20744:	moveq	sl, #14
   20748:	beq	207b4 <dta_begin_data+0x94>
   2074c:	mov	r5, r0
   20750:	mov	r0, #0
   20754:	bl	4530 <dta_ctx_alloc@plt>
   20758:	mov	r4, r0
   2075c:	ldr	r8, [r5, #28]
   20760:	ldr	r6, [r5, #80]	; 0x50
   20764:	bl	3e88 <machine_is_little_endian@plt>
   20768:	mov	ip, #0
   2076c:	cmp	r0, ip
   20770:	mov	r1, r8
   20774:	str	ip, [sp, #8]
   20778:	movne	lr, #2
   2077c:	moveq	lr, #1
   20780:	str	ip, [sp, #12]
   20784:	asr	r7, r6, #31
   20788:	mov	r2, r6
   2078c:	ldrb	ip, [r5, #8]
   20790:	mov	r0, r4
   20794:	mov	r3, r7
   20798:	str	lr, [sp]
   2079c:	str	ip, [sp, #4]
   207a0:	bl	41a0 <dta_ctx_init@plt>
   207a4:	subs	sl, r0, #0
   207a8:	beq	207d4 <dta_begin_data+0xb4>
   207ac:	mov	r0, r4
   207b0:	bl	3e4c <dta_ctx_free@plt>
   207b4:	mov	r0, sl
   207b8:	sub	sp, fp, #32
   207bc:	ldrd	r4, [sp]
   207c0:	ldrd	r6, [sp, #8]
   207c4:	ldrd	r8, [sp, #16]
   207c8:	ldrd	sl, [sp, #24]
   207cc:	add	sp, sp, #32
   207d0:	pop	{pc}		; (ldr pc, [sp], #4)
   207d4:	ldrb	r3, [r4, #192]	; 0xc0
   207d8:	tst	r3, #4
   207dc:	bne	20c8c <dta_begin_data+0x56c>
   207e0:	ldr	r3, [r5, #8]
   207e4:	sub	r6, fp, #164	; 0xa4
   207e8:	str	r6, [fp, #-188]	; 0xffffff44
   207ec:	str	sl, [fp, #-164]	; 0xffffff5c
   207f0:	str	sl, [fp, #-160]	; 0xffffff60
   207f4:	strb	r3, [fp, #-164]	; 0xffffff5c
   207f8:	strh	sl, [fp, #-156]	; 0xffffff64
   207fc:	bl	3e88 <machine_is_little_endian@plt>
   20800:	ldr	r3, [r5, #28]
   20804:	cmp	r0, #0
   20808:	mov	r1, #1
   2080c:	movne	r0, #2
   20810:	moveq	r0, r1
   20814:	ldr	r2, [r5, #80]	; 0x50
   20818:	strb	r0, [fp, #-163]	; 0xffffff5d
   2081c:	strh	r1, [fp, #-162]	; 0xffffff5e
   20820:	cmp	r3, #32768	; 0x8000
   20824:	strh	r3, [fp, #-160]	; 0xffffff60
   20828:	str	r2, [fp, #-158]	; 0xffffff62
   2082c:	blt	20c44 <dta_begin_data+0x524>
   20830:	ldrb	r3, [r4, #192]	; 0xc0
   20834:	ldr	r6, [r4, #148]	; 0x94
   20838:	ands	r3, r3, #4
   2083c:	str	r3, [fp, #-184]	; 0xffffff48
   20840:	beq	20be0 <dta_begin_data+0x4c0>
   20844:	ldr	r1, [r5, #4]
   20848:	mov	r0, #0
   2084c:	ldr	r7, [r4, #24]
   20850:	ldr	ip, [r4, #40]	; 0x28
   20854:	adds	r3, r1, #123	; 0x7b
   20858:	ldr	r2, [r4, #48]	; 0x30
   2085c:	str	r3, [fp, #-204]	; 0xffffff34
   20860:	mul	r7, r7, r6
   20864:	ldr	r3, [r4, #56]	; 0x38
   20868:	add	ip, ip, #21
   2086c:	ldr	lr, [r4, #64]	; 0x40
   20870:	add	r7, r7, #33	; 0x21
   20874:	str	r1, [fp, #-156]	; 0xffffff64
   20878:	add	r2, r2, #21
   2087c:	str	r0, [fp, #-152]	; 0xffffff68
   20880:	adc	r0, r0, r0
   20884:	add	r3, r3, #19
   20888:	str	r0, [fp, #-200]	; 0xffffff38
   2088c:	ldrd	r8, [fp, #-204]	; 0xffffff34
   20890:	add	lr, lr, #39	; 0x27
   20894:	adds	r0, r8, r7
   20898:	strd	r8, [fp, #-148]	; 0xffffff6c
   2089c:	adc	r1, r9, #0
   208a0:	adds	r8, r0, ip
   208a4:	ldr	ip, [r4, #72]	; 0x48
   208a8:	adc	r9, r1, #0
   208ac:	ldr	r7, [r5, #52]	; 0x34
   208b0:	strd	r0, [fp, #-140]	; 0xffffff74
   208b4:	strd	r8, [fp, #-132]	; 0xffffff7c
   208b8:	adds	r8, r8, r2
   208bc:	adc	r9, r9, #0
   208c0:	adds	r0, r8, r3
   208c4:	adc	r1, r9, #0
   208c8:	add	ip, ip, #35	; 0x23
   208cc:	adds	r2, r0, lr
   208d0:	strd	r8, [fp, #-124]	; 0xffffff84
   208d4:	adc	r3, r1, #0
   208d8:	adds	r8, r2, ip
   208dc:	strd	r0, [fp, #-116]	; 0xffffff8c
   208e0:	adc	r9, r3, #0
   208e4:	mov	r0, #0
   208e8:	mov	r1, #0
   208ec:	cmp	r7, #0
   208f0:	strd	r8, [fp, #-204]	; 0xffffff34
   208f4:	strd	r0, [fp, #-164]	; 0xffffff5c
   208f8:	strd	r2, [fp, #-108]	; 0xffffff94
   208fc:	mov	r2, r7
   20900:	strd	r8, [fp, #-100]	; 0xffffff9c
   20904:	ldr	r9, [r5, #48]	; 0x30
   20908:	ble	21214 <dta_begin_data+0xaf4>
   2090c:	add	r8, r9, r2, lsl #2
   20910:	mov	r7, #0
   20914:	str	r4, [fp, #-208]	; 0xffffff30
   20918:	ldr	r3, [r4, #92]	; 0x5c
   2091c:	ldr	r2, [r4, #96]	; 0x60
   20920:	add	r3, r3, #10
   20924:	add	r3, r3, r2, lsl #1
   20928:	mov	r4, r3
   2092c:	mov	r3, r5
   20930:	mov	r5, r7
   20934:	mov	r7, r3
   20938:	ldr	r0, [r9], #4
   2093c:	bl	41d0 <strlen@plt>
   20940:	add	r0, r0, r4
   20944:	add	r5, r5, r0
   20948:	cmp	r8, r9
   2094c:	bne	20938 <dta_begin_data+0x218>
   20950:	ldr	r4, [fp, #-208]	; 0xffffff30
   20954:	mov	r3, r7
   20958:	mov	r7, r5
   2095c:	add	r2, r7, #35	; 0x23
   20960:	mov	r5, r3
   20964:	mov	r3, #0
   20968:	ldrd	r0, [fp, #-204]	; 0xffffff34
   2096c:	adds	r2, r0, r2
   20970:	adc	r3, r1, r3
   20974:	cmp	r6, #0
   20978:	str	r2, [fp, #-196]	; 0xffffff3c
   2097c:	str	r3, [fp, #-192]	; 0xffffff40
   20980:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   20984:	strd	r2, [fp, #-92]	; 0xffffffa4
   20988:	ble	21204 <dta_begin_data+0xae4>
   2098c:	mov	r6, #0
   20990:	sub	r8, fp, #172	; 0xac
   20994:	mov	r7, r6
   20998:	sub	r9, fp, #174	; 0xae
   2099c:	mov	r1, r6
   209a0:	mov	r0, r5
   209a4:	str	r7, [fp, #-172]	; 0xffffff54
   209a8:	bl	4350 <readstat_get_variable@plt>
   209ac:	mov	r2, r9
   209b0:	ldrb	r1, [r4, #20]
   209b4:	add	r6, r6, #1
   209b8:	strh	r7, [fp, #-174]	; 0xffffff52
   209bc:	bl	205e4 <dta_typecode_for_variable.constprop.21>
   209c0:	mov	r3, #0
   209c4:	mov	r2, r8
   209c8:	ldrh	r0, [fp, #-174]	; 0xffffff52
   209cc:	mov	r1, r4
   209d0:	bl	41b8 <dta_type_info@plt>
   209d4:	cmp	r0, #0
   209d8:	bne	209ec <dta_begin_data+0x2cc>
   209dc:	ldr	r2, [fp, #-172]	; 0xffffff54
   209e0:	ldr	r3, [r4, #160]	; 0xa0
   209e4:	add	r3, r3, r2
   209e8:	str	r3, [r4, #160]	; 0xa0
   209ec:	ldr	r3, [r4, #148]	; 0x94
   209f0:	cmp	r6, r3
   209f4:	blt	2099c <dta_begin_data+0x27c>
   209f8:	ldrb	r2, [r4, #192]	; 0xc0
   209fc:	ldr	r1, [r4, #152]	; 0x98
   20a00:	ldr	r3, [r4, #160]	; 0xa0
   20a04:	ands	r2, r2, #4
   20a08:	str	r2, [fp, #-184]	; 0xffffff48
   20a0c:	mul	r3, r3, r1
   20a10:	beq	20e30 <dta_begin_data+0x710>
   20a14:	add	r3, r3, #13
   20a18:	mov	ip, #7
   20a1c:	ldrd	r6, [fp, #-196]	; 0xffffff3c
   20a20:	ldr	r2, [r5, #60]	; 0x3c
   20a24:	ldr	lr, [r5, #64]	; 0x40
   20a28:	adds	r6, r6, r3
   20a2c:	adc	r7, r7, #0
   20a30:	strd	r6, [fp, #-84]	; 0xffffffac
   20a34:	cmp	lr, #0
   20a38:	ble	20a70 <dta_begin_data+0x350>
   20a3c:	ldr	r8, [r4, #116]	; 0x74
   20a40:	add	lr, r2, lr, lsl #2
   20a44:	mov	r3, #0
   20a48:	cmp	r8, #4
   20a4c:	add	r0, r3, #16
   20a50:	ldr	r1, [r2], #4
   20a54:	add	r3, r3, #20
   20a58:	ldr	r1, [r1, #16]
   20a5c:	addhi	r3, r1, r3
   20a60:	addls	r3, r1, r0
   20a64:	cmp	r2, lr
   20a68:	bne	20a48 <dta_begin_data+0x328>
   20a6c:	add	ip, ip, r3
   20a70:	ldr	r3, [fp, #-184]	; 0xffffff48
   20a74:	cmp	r3, #0
   20a78:	ldr	r3, [r5, #40]	; 0x28
   20a7c:	beq	20ed0 <dta_begin_data+0x7b0>
   20a80:	add	ip, ip, #8
   20a84:	adds	r0, r6, ip
   20a88:	adc	r1, r7, #0
   20a8c:	cmp	r3, #0
   20a90:	movle	r3, #29
   20a94:	movle	r2, #0
   20a98:	strd	r0, [fp, #-196]	; 0xffffff3c
   20a9c:	strd	r0, [fp, #-76]	; 0xffffffb4
   20aa0:	ble	20b50 <dta_begin_data+0x430>
   20aa4:	mov	sl, #14
   20aa8:	mov	r6, #0
   20aac:	str	sl, [fp, #-184]	; 0xffffff48
   20ab0:	mov	r1, r6
   20ab4:	mov	r0, r5
   20ab8:	bl	43f8 <readstat_get_label_set@plt>
   20abc:	ldr	r8, [r0, #264]	; 0x108
   20ac0:	mov	sl, r0
   20ac4:	mov	r7, #0
   20ac8:	cmp	r8, #0
   20acc:	ble	20af8 <dta_begin_data+0x3d8>
   20ad0:	mov	r9, r7
   20ad4:	mov	r1, r9
   20ad8:	mov	r0, sl
   20adc:	bl	44a0 <readstat_get_value_label@plt>
   20ae0:	ldr	r3, [r0, #28]
   20ae4:	add	r9, r9, #1
   20ae8:	add	r7, r7, #1
   20aec:	cmp	r8, r9
   20af0:	add	r7, r7, r3
   20af4:	bne	20ad4 <dta_begin_data+0x3b4>
   20af8:	ldrb	r2, [r4, #192]	; 0xc0
   20afc:	add	r8, r8, #1
   20b00:	add	r8, r7, r8, lsl #3
   20b04:	ldr	r1, [r4, #104]	; 0x68
   20b08:	ldr	r3, [r4, #108]	; 0x6c
   20b0c:	ands	r2, r2, #4
   20b10:	add	r3, r3, r1
   20b14:	beq	20e38 <dta_begin_data+0x718>
   20b18:	ldr	r1, [fp, #-184]	; 0xffffff48
   20b1c:	add	r3, r3, #15
   20b20:	add	sl, r3, r1
   20b24:	add	r3, sl, r8
   20b28:	str	r3, [fp, #-184]	; 0xffffff48
   20b2c:	ldr	r3, [r5, #40]	; 0x28
   20b30:	add	r6, r6, #1
   20b34:	cmp	r6, r3
   20b38:	blt	20ab0 <dta_begin_data+0x390>
   20b3c:	ldr	sl, [fp, #-184]	; 0xffffff48
   20b40:	cmp	r2, #0
   20b44:	movne	r2, #0
   20b48:	addne	r3, sl, #15
   20b4c:	beq	20ef8 <dta_begin_data+0x7d8>
   20b50:	ldr	r1, [fp, #-196]	; 0xffffff3c
   20b54:	adds	r3, r1, r3
   20b58:	str	r3, [fp, #-196]	; 0xffffff3c
   20b5c:	ldr	r3, [fp, #-192]	; 0xffffff40
   20b60:	adc	r3, r3, r2
   20b64:	str	r3, [fp, #-192]	; 0xffffff40
   20b68:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   20b6c:	adds	r1, r2, #12
   20b70:	adc	r0, r3, #0
   20b74:	ldr	r2, [pc, #2844]	; 21698 <dta_begin_data+0xf78>
   20b78:	mov	ip, #112	; 0x70
   20b7c:	str	r1, [fp, #-60]	; 0xffffffc4
   20b80:	mov	r1, r4
   20b84:	ldrd	r6, [fp, #-196]	; 0xffffff3c
   20b88:	ldr	r3, [fp, #-188]	; 0xffffff44
   20b8c:	add	r2, pc, r2
   20b90:	strd	r6, [fp, #-68]	; 0xffffffbc
   20b94:	str	r0, [fp, #-56]	; 0xffffffc8
   20b98:	mov	r0, r5
   20b9c:	str	ip, [sp]
   20ba0:	str	r2, [sp, #4]
   20ba4:	ldr	r2, [pc, #2800]	; 2169c <dta_begin_data+0xf7c>
   20ba8:	add	r2, pc, r2
   20bac:	bl	1f6f8 <dta_write_chunk>
   20bb0:	subs	sl, r0, #0
   20bb4:	bne	207ac <dta_begin_data+0x8c>
   20bb8:	ldrb	r3, [r4, #192]	; 0xc0
   20bbc:	tst	r3, #4
   20bc0:	beq	21688 <dta_begin_data+0xf68>
   20bc4:	ldr	r1, [pc, #2772]	; 216a0 <dta_begin_data+0xf80>
   20bc8:	mov	r0, r5
   20bcc:	add	r1, pc, r1
   20bd0:	bl	4128 <readstat_write_string@plt>
   20bd4:	subs	sl, r0, #0
   20bd8:	bne	207ac <dta_begin_data+0x8c>
   20bdc:	ldr	r6, [r4, #148]	; 0x94
   20be0:	cmp	r6, #0
   20be4:	ble	20f18 <dta_begin_data+0x7f8>
   20be8:	mov	r7, #0
   20bec:	ldr	r9, [fp, #-188]	; 0xffffff44
   20bf0:	mov	r8, r7
   20bf4:	b	20c10 <dta_begin_data+0x4f0>
   20bf8:	ldrh	r1, [fp, #-164]	; 0xffffff5c
   20bfc:	ldr	r6, [r4, #148]	; 0x94
   20c00:	ldr	r2, [r4, #28]
   20c04:	cmp	r7, r6
   20c08:	strh	r1, [r2, r3]
   20c0c:	bge	20e50 <dta_begin_data+0x730>
   20c10:	mov	r1, r7
   20c14:	mov	r0, r5
   20c18:	bl	4350 <readstat_get_variable@plt>
   20c1c:	mov	r2, r9
   20c20:	strh	r8, [fp, #-164]	; 0xffffff5c
   20c24:	ldrb	r1, [r4, #20]
   20c28:	bl	205e4 <dta_typecode_for_variable.constprop.21>
   20c2c:	cmp	r0, #0
   20c30:	lsl	r3, r7, #1
   20c34:	add	r7, r7, #1
   20c38:	beq	20bf8 <dta_begin_data+0x4d8>
   20c3c:	mov	sl, r0
   20c40:	b	207ac <dta_begin_data+0x8c>
   20c44:	mov	r2, #10
   20c48:	mov	r1, r6
   20c4c:	mov	r0, r5
   20c50:	bl	4428 <readstat_write_bytes@plt>
   20c54:	cmp	r0, #0
   20c58:	bne	20830 <dta_begin_data+0x110>
   20c5c:	mov	r1, r4
   20c60:	mov	r0, r5
   20c64:	bl	1f44c <dta_emit_header_data_label>
   20c68:	cmp	r0, #0
   20c6c:	bne	20830 <dta_begin_data+0x110>
   20c70:	ldr	r3, [r4, #16]
   20c74:	cmp	r3, #0
   20c78:	beq	20830 <dta_begin_data+0x110>
   20c7c:	mov	r1, r4
   20c80:	mov	r0, r5
   20c84:	bl	200b0 <dta_emit_header_time_stamp.part.18>
   20c88:	b	20830 <dta_begin_data+0x110>
   20c8c:	ldr	r1, [pc, #2576]	; 216a4 <dta_begin_data+0xf84>
   20c90:	mov	r0, r5
   20c94:	add	r1, pc, r1
   20c98:	bl	4128 <readstat_write_string@plt>
   20c9c:	cmp	r0, #0
   20ca0:	bne	20c3c <dta_begin_data+0x51c>
   20ca4:	ldrb	r3, [r4, #192]	; 0xc0
   20ca8:	tst	r3, #4
   20cac:	bne	20e14 <dta_begin_data+0x6f4>
   20cb0:	ldr	r2, [pc, #2544]	; 216a8 <dta_begin_data+0xf88>
   20cb4:	sub	r3, fp, #164	; 0xa4
   20cb8:	mov	r1, #128	; 0x80
   20cbc:	mov	r6, r3
   20cc0:	mov	r0, r3
   20cc4:	ldr	r3, [r5, #8]
   20cc8:	str	r6, [fp, #-188]	; 0xffffff44
   20ccc:	add	r2, pc, r2
   20cd0:	bl	4254 <snprintf@plt>
   20cd4:	mov	r1, r6
   20cd8:	mov	r0, r5
   20cdc:	bl	4128 <readstat_write_string@plt>
   20ce0:	cmp	r0, #0
   20ce4:	bne	20c3c <dta_begin_data+0x51c>
   20ce8:	bl	3e88 <machine_is_little_endian@plt>
   20cec:	cmp	r0, #0
   20cf0:	bne	20f0c <dta_begin_data+0x7ec>
   20cf4:	ldr	r3, [pc, #2480]	; 216ac <dta_begin_data+0xf8c>
   20cf8:	add	r3, pc, r3
   20cfc:	ldr	ip, [pc, #2476]	; 216b0 <dta_begin_data+0xf90>
   20d00:	mov	r2, #3
   20d04:	mov	r1, r4
   20d08:	mov	r0, r5
   20d0c:	add	ip, pc, ip
   20d10:	stm	sp, {r2, ip}
   20d14:	ldr	r2, [pc, #2456]	; 216b4 <dta_begin_data+0xf94>
   20d18:	add	r2, pc, r2
   20d1c:	bl	1f6f8 <dta_write_chunk>
   20d20:	cmp	r0, #0
   20d24:	bne	20c3c <dta_begin_data+0x51c>
   20d28:	ldr	r3, [r5, #8]
   20d2c:	ldr	r2, [r5, #28]
   20d30:	cmp	r3, #118	; 0x76
   20d34:	ble	211c8 <dta_begin_data+0xaa8>
   20d38:	ldr	ip, [pc, #2424]	; 216b8 <dta_begin_data+0xf98>
   20d3c:	mov	r0, #4
   20d40:	sub	r8, fp, #172	; 0xac
   20d44:	str	r2, [fp, #-172]	; 0xffffff54
   20d48:	mov	r3, r8
   20d4c:	mov	r1, r4
   20d50:	ldr	r2, [pc, #2404]	; 216bc <dta_begin_data+0xf9c>
   20d54:	add	ip, pc, ip
   20d58:	add	r2, pc, r2
   20d5c:	stm	sp, {r0, ip}
   20d60:	mov	r0, r5
   20d64:	bl	1f6f8 <dta_write_chunk>
   20d68:	cmp	r0, #0
   20d6c:	bne	20c3c <dta_begin_data+0x51c>
   20d70:	ldr	r3, [r5, #8]
   20d74:	ldr	r0, [r5, #80]	; 0x50
   20d78:	cmp	r3, #117	; 0x75
   20d7c:	ble	21220 <dta_begin_data+0xb00>
   20d80:	ldr	ip, [pc, #2360]	; 216c0 <dta_begin_data+0xfa0>
   20d84:	asr	r1, r0, #31
   20d88:	mov	r2, #8
   20d8c:	mov	r3, r8
   20d90:	strd	r0, [fp, #-172]	; 0xffffff54
   20d94:	mov	r1, r4
   20d98:	mov	r0, r5
   20d9c:	add	ip, pc, ip
   20da0:	stm	sp, {r2, ip}
   20da4:	ldr	r2, [pc, #2328]	; 216c4 <dta_begin_data+0xfa4>
   20da8:	add	r2, pc, r2
   20dac:	bl	1f6f8 <dta_write_chunk>
   20db0:	cmp	r0, #0
   20db4:	bne	20c3c <dta_begin_data+0x51c>
   20db8:	mov	r1, r4
   20dbc:	mov	r0, r5
   20dc0:	bl	1f44c <dta_emit_header_data_label>
   20dc4:	cmp	r0, #0
   20dc8:	bne	20c3c <dta_begin_data+0x51c>
   20dcc:	ldr	r3, [r4, #16]
   20dd0:	cmp	r3, #0
   20dd4:	beq	20dec <dta_begin_data+0x6cc>
   20dd8:	mov	r1, r4
   20ddc:	mov	r0, r5
   20de0:	bl	200b0 <dta_emit_header_time_stamp.part.18>
   20de4:	cmp	r0, #0
   20de8:	bne	20c3c <dta_begin_data+0x51c>
   20dec:	ldrb	r3, [r4, #192]	; 0xc0
   20df0:	tst	r3, #4
   20df4:	beq	20bdc <dta_begin_data+0x4bc>
   20df8:	ldr	r1, [pc, #2248]	; 216c8 <dta_begin_data+0xfa8>
   20dfc:	mov	r0, r5
   20e00:	add	r1, pc, r1
   20e04:	bl	4128 <readstat_write_string@plt>
   20e08:	cmp	r0, #0
   20e0c:	beq	20830 <dta_begin_data+0x110>
   20e10:	b	20c3c <dta_begin_data+0x51c>
   20e14:	ldr	r1, [pc, #2224]	; 216cc <dta_begin_data+0xfac>
   20e18:	mov	r0, r5
   20e1c:	add	r1, pc, r1
   20e20:	bl	4128 <readstat_write_string@plt>
   20e24:	cmp	r0, #0
   20e28:	beq	20cb0 <dta_begin_data+0x590>
   20e2c:	b	20c3c <dta_begin_data+0x51c>
   20e30:	mov	ip, r2
   20e34:	b	20a1c <dta_begin_data+0x2fc>
   20e38:	ldr	r1, [fp, #-184]	; 0xffffff48
   20e3c:	add	r3, r3, #4
   20e40:	add	sl, r3, r1
   20e44:	add	r3, r8, sl
   20e48:	str	r3, [fp, #-184]	; 0xffffff48
   20e4c:	b	20b2c <dta_begin_data+0x40c>
   20e50:	cmp	r6, #0
   20e54:	ble	21114 <dta_begin_data+0x9f4>
   20e58:	mov	r7, r0
   20e5c:	ldr	r8, [fp, #-188]	; 0xffffff44
   20e60:	b	20e78 <dta_begin_data+0x758>
   20e64:	cmp	r2, #2
   20e68:	beq	20eb0 <dta_begin_data+0x790>
   20e6c:	add	r7, r7, #1
   20e70:	cmp	r7, r6
   20e74:	bge	20f18 <dta_begin_data+0x7f8>
   20e78:	ldr	r2, [r4, #24]
   20e7c:	cmp	r2, #1
   20e80:	bne	20e64 <dta_begin_data+0x744>
   20e84:	ldr	ip, [r4, #28]
   20e88:	lsl	r3, r7, #1
   20e8c:	mov	r1, r8
   20e90:	mov	r0, r5
   20e94:	ldrh	r3, [ip, r3]
   20e98:	strb	r3, [fp, #-164]	; 0xffffff5c
   20e9c:	bl	4428 <readstat_write_bytes@plt>
   20ea0:	cmp	r0, #0
   20ea4:	bne	20c3c <dta_begin_data+0x51c>
   20ea8:	ldr	r6, [r4, #148]	; 0x94
   20eac:	b	20e6c <dta_begin_data+0x74c>
   20eb0:	ldr	ip, [r4, #28]
   20eb4:	lsl	r3, r7, #1
   20eb8:	mov	r1, r8
   20ebc:	mov	r0, r5
   20ec0:	ldrh	r3, [ip, r3]
   20ec4:	strh	r3, [fp, #-164]	; 0xffffff5c
   20ec8:	bl	4428 <readstat_write_bytes@plt>
   20ecc:	b	20ea0 <dta_begin_data+0x780>
   20ed0:	adds	r0, r6, ip
   20ed4:	adc	r1, r7, #0
   20ed8:	cmp	r3, #0
   20edc:	strd	r0, [fp, #-196]	; 0xffffff3c
   20ee0:	strd	r0, [fp, #-76]	; 0xffffffb4
   20ee4:	bgt	20aa8 <dta_begin_data+0x388>
   20ee8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   20eec:	mov	r1, r2
   20ef0:	mov	r0, r3
   20ef4:	b	20b74 <dta_begin_data+0x454>
   20ef8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   20efc:	adds	r2, r2, sl
   20f00:	adc	r3, r3, #0
   20f04:	strd	r2, [fp, #-196]	; 0xffffff3c
   20f08:	b	20ee8 <dta_begin_data+0x7c8>
   20f0c:	ldr	r3, [pc, #1980]	; 216d0 <dta_begin_data+0xfb0>
   20f10:	add	r3, pc, r3
   20f14:	b	20cfc <dta_begin_data+0x5dc>
   20f18:	ldrb	r3, [r4, #192]	; 0xc0
   20f1c:	tst	r3, #4
   20f20:	bne	21120 <dta_begin_data+0xa00>
   20f24:	cmp	r6, #0
   20f28:	movgt	r6, #0
   20f2c:	ble	20f60 <dta_begin_data+0x840>
   20f30:	mov	r1, r6
   20f34:	mov	r0, r5
   20f38:	bl	4350 <readstat_get_variable@plt>
   20f3c:	ldr	r3, [r4, #36]	; 0x24
   20f40:	add	r1, r0, #8
   20f44:	ldr	r2, [r4, #76]	; 0x4c
   20f48:	mla	r0, r2, r6, r3
   20f4c:	add	r6, r6, #1
   20f50:	bl	4290 <strncpy@plt>
   20f54:	ldr	r3, [r4, #148]	; 0x94
   20f58:	cmp	r6, r3
   20f5c:	blt	20f30 <dta_begin_data+0x810>
   20f60:	mov	r0, r5
   20f64:	ldr	r1, [r4, #36]	; 0x24
   20f68:	ldr	r2, [r4, #40]	; 0x28
   20f6c:	bl	4428 <readstat_write_bytes@plt>
   20f70:	subs	sl, r0, #0
   20f74:	bne	207ac <dta_begin_data+0x8c>
   20f78:	ldrb	r3, [r4, #192]	; 0xc0
   20f7c:	tst	r3, #4
   20f80:	beq	20fc0 <dta_begin_data+0x8a0>
   20f84:	ldr	r1, [pc, #1864]	; 216d4 <dta_begin_data+0xfb4>
   20f88:	mov	r0, r5
   20f8c:	add	r1, pc, r1
   20f90:	bl	4128 <readstat_write_string@plt>
   20f94:	subs	sl, r0, #0
   20f98:	bne	207ac <dta_begin_data+0x8c>
   20f9c:	ldrb	r3, [r4, #192]	; 0xc0
   20fa0:	tst	r3, #4
   20fa4:	beq	20fc0 <dta_begin_data+0x8a0>
   20fa8:	ldr	r1, [pc, #1832]	; 216d8 <dta_begin_data+0xfb8>
   20fac:	mov	r0, r5
   20fb0:	add	r1, pc, r1
   20fb4:	bl	4128 <readstat_write_string@plt>
   20fb8:	subs	sl, r0, #0
   20fbc:	bne	207ac <dta_begin_data+0x8c>
   20fc0:	mov	r1, #0
   20fc4:	ldr	r0, [r4, #44]	; 0x2c
   20fc8:	ldr	r2, [r4, #48]	; 0x30
   20fcc:	bl	4278 <memset@plt>
   20fd0:	mov	r0, r5
   20fd4:	ldr	r1, [r4, #44]	; 0x2c
   20fd8:	ldr	r2, [r4, #48]	; 0x30
   20fdc:	bl	4428 <readstat_write_bytes@plt>
   20fe0:	subs	sl, r0, #0
   20fe4:	bne	207ac <dta_begin_data+0x8c>
   20fe8:	ldrb	r3, [r4, #192]	; 0xc0
   20fec:	tst	r3, #4
   20ff0:	beq	21030 <dta_begin_data+0x910>
   20ff4:	ldr	r1, [pc, #1760]	; 216dc <dta_begin_data+0xfbc>
   20ff8:	mov	r0, r5
   20ffc:	add	r1, pc, r1
   21000:	bl	4128 <readstat_write_string@plt>
   21004:	subs	sl, r0, #0
   21008:	bne	207ac <dta_begin_data+0x8c>
   2100c:	ldrb	r3, [r4, #192]	; 0xc0
   21010:	tst	r3, #4
   21014:	beq	21030 <dta_begin_data+0x910>
   21018:	ldr	r1, [pc, #1728]	; 216e0 <dta_begin_data+0xfc0>
   2101c:	mov	r0, r5
   21020:	add	r1, pc, r1
   21024:	bl	4128 <readstat_write_string@plt>
   21028:	subs	sl, r0, #0
   2102c:	bne	207ac <dta_begin_data+0x8c>
   21030:	ldr	r3, [r4, #148]	; 0x94
   21034:	cmp	r3, #0
   21038:	ble	21258 <dta_begin_data+0xb38>
   2103c:	ldr	r8, [pc, #1696]	; 216e4 <dta_begin_data+0xfc4>
   21040:	mov	r6, #0
   21044:	ldr	r3, [pc, #1692]	; 216e8 <dta_begin_data+0xfc8>
   21048:	ldr	r9, [pc, #1692]	; 216ec <dta_begin_data+0xfcc>
   2104c:	add	r8, pc, r8
   21050:	ldr	r7, [fp, #-188]	; 0xffffff44
   21054:	add	r3, pc, r3
   21058:	str	r8, [fp, #-196]	; 0xffffff3c
   2105c:	add	r9, pc, r9
   21060:	str	r3, [fp, #-184]	; 0xffffff48
   21064:	b	2108c <dta_begin_data+0x96c>
   21068:	add	r1, r0, #308	; 0x134
   2106c:	ldr	r0, [r4, #52]	; 0x34
   21070:	ldr	r2, [r4, #80]	; 0x50
   21074:	mla	r0, r6, r2, r0
   21078:	bl	4290 <strncpy@plt>
   2107c:	ldr	r3, [r4, #148]	; 0x94
   21080:	add	r6, r6, #1
   21084:	cmp	r6, r3
   21088:	bge	21258 <dta_begin_data+0xb38>
   2108c:	mov	r1, r6
   21090:	mov	r0, r5
   21094:	bl	4350 <readstat_get_variable@plt>
   21098:	ldrb	r3, [r0, #308]	; 0x134
   2109c:	mov	sl, r0
   210a0:	cmp	r3, #0
   210a4:	bne	21068 <dta_begin_data+0x948>
   210a8:	ldr	r0, [r0]
   210ac:	ldr	r8, [sl, #2136]	; 0x858
   210b0:	bl	3df8 <readstat_type_class@plt>
   210b4:	cmp	r0, #0
   210b8:	bne	21164 <dta_begin_data+0xa44>
   210bc:	cmp	r8, #0
   210c0:	bne	210d8 <dta_begin_data+0x9b8>
   210c4:	ldr	r3, [sl]
   210c8:	sub	r2, r3, #1
   210cc:	cmp	r2, #1
   210d0:	movls	r8, #8
   210d4:	bhi	21658 <dta_begin_data+0xf38>
   210d8:	ldr	r2, [sl, #2132]	; 0x854
   210dc:	mov	r3, r8
   210e0:	mov	r1, r9
   210e4:	mov	r0, r7
   210e8:	ldr	ip, [fp, #-184]	; 0xffffff48
   210ec:	cmp	r2, #1
   210f0:	ldr	r2, [fp, #-196]	; 0xffffff3c
   210f4:	movne	r2, ip
   210f8:	bl	43bc <sprintf@plt>
   210fc:	ldr	r0, [r4, #52]	; 0x34
   21100:	mov	r1, r7
   21104:	ldr	r2, [r4, #80]	; 0x50
   21108:	mla	r0, r6, r2, r0
   2110c:	bl	4290 <strncpy@plt>
   21110:	b	2107c <dta_begin_data+0x95c>
   21114:	ldrb	r3, [r4, #192]	; 0xc0
   21118:	tst	r3, #4
   2111c:	beq	20f60 <dta_begin_data+0x840>
   21120:	ldr	r1, [pc, #1480]	; 216f0 <dta_begin_data+0xfd0>
   21124:	mov	r0, r5
   21128:	add	r1, pc, r1
   2112c:	bl	4128 <readstat_write_string@plt>
   21130:	subs	sl, r0, #0
   21134:	bne	207ac <dta_begin_data+0x8c>
   21138:	ldrb	r3, [r4, #192]	; 0xc0
   2113c:	tst	r3, #4
   21140:	beq	2115c <dta_begin_data+0xa3c>
   21144:	ldr	r1, [pc, #1448]	; 216f4 <dta_begin_data+0xfd4>
   21148:	mov	r0, r5
   2114c:	add	r1, pc, r1
   21150:	bl	4128 <readstat_write_string@plt>
   21154:	subs	sl, r0, #0
   21158:	bne	207ac <dta_begin_data+0x8c>
   2115c:	ldr	r6, [r4, #148]	; 0x94
   21160:	b	20f24 <dta_begin_data+0x804>
   21164:	cmp	r8, #0
   21168:	bne	2119c <dta_begin_data+0xa7c>
   2116c:	ldr	r3, [sl]
   21170:	sub	r2, r3, #1
   21174:	cmp	r2, #1
   21178:	bls	21650 <dta_begin_data+0xf30>
   2117c:	cmp	r3, #3
   21180:	beq	21680 <dta_begin_data+0xf60>
   21184:	mov	r2, #103	; 0x67
   21188:	cmp	r3, #5
   2118c:	moveq	r8, #10
   21190:	movne	r8, #9
   21194:	cmp	r2, #103	; 0x67
   21198:	bne	210d8 <dta_begin_data+0x9b8>
   2119c:	ldr	r2, [sl, #2132]	; 0x854
   211a0:	cmp	r2, #1
   211a4:	beq	21644 <dta_begin_data+0xf24>
   211a8:	ldr	r2, [pc, #1352]	; 216f8 <dta_begin_data+0xfd8>
   211ac:	add	r2, pc, r2
   211b0:	ldr	r1, [pc, #1348]	; 216fc <dta_begin_data+0xfdc>
   211b4:	mov	r3, r8
   211b8:	mov	r0, r7
   211bc:	add	r1, pc, r1
   211c0:	bl	43bc <sprintf@plt>
   211c4:	b	210fc <dta_begin_data+0x9dc>
   211c8:	ldr	ip, [pc, #1328]	; 21700 <dta_begin_data+0xfe0>
   211cc:	mov	r0, #2
   211d0:	sub	r8, fp, #172	; 0xac
   211d4:	strh	r2, [fp, #-172]	; 0xffffff54
   211d8:	mov	r3, r8
   211dc:	mov	r1, r4
   211e0:	ldr	r2, [pc, #1308]	; 21704 <dta_begin_data+0xfe4>
   211e4:	add	ip, pc, ip
   211e8:	add	r2, pc, r2
   211ec:	stm	sp, {r0, ip}
   211f0:	mov	r0, r5
   211f4:	bl	1f6f8 <dta_write_chunk>
   211f8:	cmp	r0, #0
   211fc:	beq	20d70 <dta_begin_data+0x650>
   21200:	b	20c3c <dta_begin_data+0x51c>
   21204:	ldr	r2, [r4, #152]	; 0x98
   21208:	ldr	r3, [r4, #160]	; 0xa0
   2120c:	mul	r3, r3, r2
   21210:	b	20a14 <dta_begin_data+0x2f4>
   21214:	mov	r2, #35	; 0x23
   21218:	mov	r3, #0
   2121c:	b	20968 <dta_begin_data+0x248>
   21220:	ldr	ip, [pc, #1248]	; 21708 <dta_begin_data+0xfe8>
   21224:	mov	r2, #4
   21228:	mov	r3, r8
   2122c:	str	r0, [fp, #-172]	; 0xffffff54
   21230:	mov	r1, r4
   21234:	mov	r0, r5
   21238:	add	ip, pc, ip
   2123c:	stm	sp, {r2, ip}
   21240:	ldr	r2, [pc, #1220]	; 2170c <dta_begin_data+0xfec>
   21244:	add	r2, pc, r2
   21248:	bl	1f6f8 <dta_write_chunk>
   2124c:	cmp	r0, #0
   21250:	beq	20db8 <dta_begin_data+0x698>
   21254:	b	20c3c <dta_begin_data+0x51c>
   21258:	mov	r0, r5
   2125c:	ldr	r1, [r4, #52]	; 0x34
   21260:	ldr	r2, [r4, #56]	; 0x38
   21264:	bl	4428 <readstat_write_bytes@plt>
   21268:	subs	sl, r0, #0
   2126c:	bne	207ac <dta_begin_data+0x8c>
   21270:	ldrb	r3, [r4, #192]	; 0xc0
   21274:	tst	r3, #4
   21278:	beq	212b8 <dta_begin_data+0xb98>
   2127c:	ldr	r1, [pc, #1164]	; 21710 <dta_begin_data+0xff0>
   21280:	mov	r0, r5
   21284:	add	r1, pc, r1
   21288:	bl	4128 <readstat_write_string@plt>
   2128c:	subs	sl, r0, #0
   21290:	bne	207ac <dta_begin_data+0x8c>
   21294:	ldrb	r3, [r4, #192]	; 0xc0
   21298:	tst	r3, #4
   2129c:	beq	212b8 <dta_begin_data+0xb98>
   212a0:	ldr	r1, [pc, #1132]	; 21714 <dta_begin_data+0xff4>
   212a4:	mov	r0, r5
   212a8:	add	r1, pc, r1
   212ac:	bl	4128 <readstat_write_string@plt>
   212b0:	subs	sl, r0, #0
   212b4:	bne	207ac <dta_begin_data+0x8c>
   212b8:	ldr	r3, [r4, #148]	; 0x94
   212bc:	cmp	r3, #0
   212c0:	movgt	r6, #0
   212c4:	bgt	212e8 <dta_begin_data+0xbc8>
   212c8:	b	2131c <dta_begin_data+0xbfc>
   212cc:	ldr	r2, [r4, #84]	; 0x54
   212d0:	mla	r0, r2, r6, r0
   212d4:	bl	4290 <strncpy@plt>
   212d8:	ldr	r3, [r4, #148]	; 0x94
   212dc:	add	r6, r6, #1
   212e0:	cmp	r6, r3
   212e4:	bge	2131c <dta_begin_data+0xbfc>
   212e8:	mov	r1, r6
   212ec:	mov	r0, r5
   212f0:	bl	4350 <readstat_get_variable@plt>
   212f4:	ldr	r3, [r0, #1588]	; 0x634
   212f8:	ldr	r0, [r4, #60]	; 0x3c
   212fc:	cmp	r3, #0
   21300:	add	r1, r3, #4
   21304:	bne	212cc <dta_begin_data+0xbac>
   21308:	ldr	r2, [r4, #84]	; 0x54
   2130c:	mov	r1, r3
   21310:	mla	r0, r2, r6, r0
   21314:	bl	4278 <memset@plt>
   21318:	b	212d8 <dta_begin_data+0xbb8>
   2131c:	mov	r0, r5
   21320:	ldr	r1, [r4, #60]	; 0x3c
   21324:	ldr	r2, [r4, #64]	; 0x40
   21328:	bl	4428 <readstat_write_bytes@plt>
   2132c:	subs	sl, r0, #0
   21330:	bne	207ac <dta_begin_data+0x8c>
   21334:	ldrb	r3, [r4, #192]	; 0xc0
   21338:	tst	r3, #4
   2133c:	bne	215ac <dta_begin_data+0xe8c>
   21340:	ldr	r3, [r4, #148]	; 0x94
   21344:	cmp	r3, #0
   21348:	movgt	r6, #0
   2134c:	ble	21380 <dta_begin_data+0xc60>
   21350:	mov	r1, r6
   21354:	mov	r0, r5
   21358:	bl	4350 <readstat_get_variable@plt>
   2135c:	ldr	r3, [r4, #68]	; 0x44
   21360:	add	r1, r0, #564	; 0x234
   21364:	ldr	r2, [r4, #88]	; 0x58
   21368:	mla	r0, r2, r6, r3
   2136c:	add	r6, r6, #1
   21370:	bl	4290 <strncpy@plt>
   21374:	ldr	r3, [r4, #148]	; 0x94
   21378:	cmp	r6, r3
   2137c:	blt	21350 <dta_begin_data+0xc30>
   21380:	mov	r0, r5
   21384:	ldr	r1, [r4, #68]	; 0x44
   21388:	ldr	r2, [r4, #72]	; 0x48
   2138c:	bl	4428 <readstat_write_bytes@plt>
   21390:	subs	sl, r0, #0
   21394:	bne	207ac <dta_begin_data+0x8c>
   21398:	ldrb	r3, [r4, #192]	; 0xc0
   2139c:	tst	r3, #4
   213a0:	beq	213bc <dta_begin_data+0xc9c>
   213a4:	ldr	r1, [pc, #876]	; 21718 <dta_begin_data+0xff8>
   213a8:	mov	r0, r5
   213ac:	add	r1, pc, r1
   213b0:	bl	4128 <readstat_write_string@plt>
   213b4:	cmp	r0, #0
   213b8:	bne	20c3c <dta_begin_data+0x51c>
   213bc:	ldrd	r2, [r4, #92]	; 0x5c
   213c0:	str	sp, [fp, #-208]	; 0xffffff30
   213c4:	add	r3, r3, #7
   213c8:	cmp	r2, #0
   213cc:	bic	r3, r3, #7
   213d0:	sub	sp, sp, r3
   213d4:	add	r9, sp, #16
   213d8:	beq	21630 <dta_begin_data+0xf10>
   213dc:	ldrb	r3, [r4, #192]	; 0xc0
   213e0:	ands	r3, r3, #4
   213e4:	beq	21408 <dta_begin_data+0xce8>
   213e8:	ldr	r1, [pc, #812]	; 2171c <dta_begin_data+0xffc>
   213ec:	mov	r0, r5
   213f0:	add	r1, pc, r1
   213f4:	bl	4128 <readstat_write_string@plt>
   213f8:	cmp	r0, #0
   213fc:	bne	21638 <dta_begin_data+0xf18>
   21400:	ldrb	r3, [r4, #192]	; 0xc0
   21404:	and	r3, r3, #4
   21408:	ldr	r2, [pc, #784]	; 21720 <dta_begin_data+0x1000>
   2140c:	mov	r6, #0
   21410:	str	sl, [fp, #-212]	; 0xffffff2c
   21414:	add	r2, pc, r2
   21418:	str	r2, [fp, #-204]	; 0xffffff34
   2141c:	ldr	r2, [pc, #768]	; 21724 <dta_begin_data+0x1004>
   21420:	add	r2, pc, r2
   21424:	str	r2, [fp, #-184]	; 0xffffff48
   21428:	ldr	r2, [pc, #760]	; 21728 <dta_begin_data+0x1008>
   2142c:	add	r2, pc, r2
   21430:	str	r2, [fp, #-196]	; 0xffffff3c
   21434:	ldr	r2, [r5, #52]	; 0x34
   21438:	uxtb	r3, r3
   2143c:	cmp	r6, r2
   21440:	bge	2153c <dta_begin_data+0xe1c>
   21444:	cmp	r3, #0
   21448:	beq	21590 <dta_begin_data+0xe70>
   2144c:	mov	r0, r5
   21450:	ldr	r1, [fp, #-204]	; 0xffffff34
   21454:	bl	4128 <readstat_write_string@plt>
   21458:	cmp	r0, #0
   2145c:	bne	21638 <dta_begin_data+0xf18>
   21460:	ldr	r3, [r5, #48]	; 0x30
   21464:	lsl	r8, r6, #2
   21468:	ldr	r0, [r3, r6, lsl #2]
   2146c:	bl	41d0 <strlen@plt>
   21470:	ldr	r2, [r4, #92]	; 0x5c
   21474:	mov	r7, r0
   21478:	ldr	sl, [r4, #96]	; 0x60
   2147c:	cmp	r2, #2
   21480:	beq	215ec <dta_begin_data+0xecc>
   21484:	cmp	r2, #4
   21488:	beq	21614 <dta_begin_data+0xef4>
   2148c:	mov	r2, sl
   21490:	mov	r0, r9
   21494:	ldr	r1, [fp, #-184]	; 0xffffff48
   21498:	bl	4290 <strncpy@plt>
   2149c:	mov	r2, sl
   214a0:	mov	r1, r9
   214a4:	mov	r0, r5
   214a8:	bl	4428 <readstat_write_bytes@plt>
   214ac:	cmp	r0, #0
   214b0:	bne	21638 <dta_begin_data+0xf18>
   214b4:	add	r6, r6, #1
   214b8:	mov	r0, r9
   214bc:	ldr	r2, [fp, #-196]	; 0xffffff3c
   214c0:	mov	r3, r6
   214c4:	ldr	r1, [r4, #96]	; 0x60
   214c8:	bl	4254 <snprintf@plt>
   214cc:	mov	r1, r9
   214d0:	mov	r0, r5
   214d4:	ldr	r2, [r4, #96]	; 0x60
   214d8:	bl	4428 <readstat_write_bytes@plt>
   214dc:	cmp	r0, #0
   214e0:	bne	21638 <dta_begin_data+0xf18>
   214e4:	ldr	r3, [r5, #48]	; 0x30
   214e8:	add	r2, r7, #1
   214ec:	mov	r0, r5
   214f0:	ldr	r1, [r3, r8]
   214f4:	bl	4428 <readstat_write_bytes@plt>
   214f8:	cmp	r0, #0
   214fc:	bne	21638 <dta_begin_data+0xf18>
   21500:	ldrb	r3, [r4, #192]	; 0xc0
   21504:	ands	r3, r3, #4
   21508:	beq	21434 <dta_begin_data+0xd14>
   2150c:	ldr	r1, [pc, #536]	; 2172c <dta_begin_data+0x100c>
   21510:	mov	r0, r5
   21514:	add	r1, pc, r1
   21518:	bl	4128 <readstat_write_string@plt>
   2151c:	cmp	r0, #0
   21520:	bne	21638 <dta_begin_data+0xf18>
   21524:	ldrb	r3, [r4, #192]	; 0xc0
   21528:	ldr	r2, [r5, #52]	; 0x34
   2152c:	and	r3, r3, #4
   21530:	uxtb	r3, r3
   21534:	cmp	r6, r2
   21538:	blt	21444 <dta_begin_data+0xd24>
   2153c:	cmp	r3, #0
   21540:	ldr	sl, [fp, #-212]	; 0xffffff2c
   21544:	beq	2166c <dta_begin_data+0xf4c>
   21548:	ldr	r1, [pc, #480]	; 21730 <dta_begin_data+0x1010>
   2154c:	mov	r0, r5
   21550:	add	r1, pc, r1
   21554:	bl	4128 <readstat_write_string@plt>
   21558:	cmp	r0, #0
   2155c:	ldr	sp, [fp, #-208]	; 0xffffff30
   21560:	bne	20c3c <dta_begin_data+0x51c>
   21564:	ldrb	r3, [r4, #192]	; 0xc0
   21568:	tst	r3, #4
   2156c:	beq	21588 <dta_begin_data+0xe68>
   21570:	ldr	r1, [pc, #444]	; 21734 <dta_begin_data+0x1014>
   21574:	mov	r0, r5
   21578:	add	r1, pc, r1
   2157c:	bl	4128 <readstat_write_string@plt>
   21580:	cmp	r0, #0
   21584:	bne	20c3c <dta_begin_data+0x51c>
   21588:	str	r4, [r5, #300]	; 0x12c
   2158c:	b	207b4 <dta_begin_data+0x94>
   21590:	mov	r3, #1
   21594:	mov	r0, r5
   21598:	ldr	r1, [fp, #-188]	; 0xffffff44
   2159c:	mov	r2, r3
   215a0:	strb	r3, [fp, #-164]	; 0xffffff5c
   215a4:	bl	4428 <readstat_write_bytes@plt>
   215a8:	b	21458 <dta_begin_data+0xd38>
   215ac:	ldr	r1, [pc, #388]	; 21738 <dta_begin_data+0x1018>
   215b0:	mov	r0, r5
   215b4:	add	r1, pc, r1
   215b8:	bl	4128 <readstat_write_string@plt>
   215bc:	subs	sl, r0, #0
   215c0:	bne	207ac <dta_begin_data+0x8c>
   215c4:	ldrb	r3, [r4, #192]	; 0xc0
   215c8:	tst	r3, #4
   215cc:	beq	21340 <dta_begin_data+0xc20>
   215d0:	ldr	r1, [pc, #356]	; 2173c <dta_begin_data+0x101c>
   215d4:	mov	r0, r5
   215d8:	add	r1, pc, r1
   215dc:	bl	4128 <readstat_write_string@plt>
   215e0:	subs	sl, r0, #0
   215e4:	beq	21340 <dta_begin_data+0xc20>
   215e8:	b	207ac <dta_begin_data+0x8c>
   215ec:	add	r3, r0, sl, lsl #1
   215f0:	mov	r0, r5
   215f4:	ldr	r1, [fp, #-188]	; 0xffffff44
   215f8:	add	r3, r3, #1
   215fc:	strh	r3, [fp, #-164]	; 0xffffff5c
   21600:	bl	4428 <readstat_write_bytes@plt>
   21604:	cmp	r0, #0
   21608:	bne	21638 <dta_begin_data+0xf18>
   2160c:	ldr	sl, [r4, #96]	; 0x60
   21610:	b	2148c <dta_begin_data+0xd6c>
   21614:	add	r3, r0, sl, lsl #1
   21618:	mov	r0, r5
   2161c:	ldr	r1, [fp, #-188]	; 0xffffff44
   21620:	add	r3, r3, #1
   21624:	str	r3, [fp, #-164]	; 0xffffff5c
   21628:	bl	4428 <readstat_write_bytes@plt>
   2162c:	b	21604 <dta_begin_data+0xee4>
   21630:	ldr	sp, [fp, #-208]	; 0xffffff30
   21634:	b	21564 <dta_begin_data+0xe44>
   21638:	mov	sl, r0
   2163c:	ldr	sp, [fp, #-208]	; 0xffffff30
   21640:	b	207ac <dta_begin_data+0x8c>
   21644:	ldr	r2, [pc, #244]	; 21740 <dta_begin_data+0x1020>
   21648:	add	r2, pc, r2
   2164c:	b	211b0 <dta_begin_data+0xa90>
   21650:	mov	r8, #8
   21654:	b	2119c <dta_begin_data+0xa7c>
   21658:	cmp	r3, #3
   2165c:	movne	r2, #115	; 0x73
   21660:	bne	21188 <dta_begin_data+0xa68>
   21664:	mov	r8, #12
   21668:	b	210d8 <dta_begin_data+0x9b8>
   2166c:	ldr	r1, [r4, #92]	; 0x5c
   21670:	mov	r0, r5
   21674:	add	r1, r1, #1
   21678:	bl	3ff0 <readstat_write_zeros@plt>
   2167c:	b	21558 <dta_begin_data+0xe38>
   21680:	mov	r8, #12
   21684:	b	2119c <dta_begin_data+0xa7c>
   21688:	ldr	r6, [r4, #148]	; 0x94
   2168c:	cmp	r6, #0
   21690:	bgt	20be8 <dta_begin_data+0x4c8>
   21694:	b	20f24 <dta_begin_data+0x804>
   21698:	.word	0x00007270
   2169c:	.word	0x0000724c
   216a0:	.word	0x000073f0
   216a4:	.word	0x000070c4
   216a8:	.word	0x00007418
   216ac:	.word	0x000070a0
   216b0:	.word	0x0000707c
   216b4:	.word	0x00007064
   216b8:	.word	0x00007050
   216bc:	.word	0x00007048
   216c0:	.word	0x00007014
   216c4:	.word	0x00007004
   216c8:	.word	0x00006fe8
   216cc:	.word	0x00006f48
   216d0:	.word	0x00006e8c
   216d4:	.word	0x00006e84
   216d8:	.word	0x00006e6c
   216dc:	.word	0x00006e2c
   216e0:	.word	0x00006e14
   216e4:	.word	0x00007094
   216e8:	.word	0x000054e8
   216ec:	.word	0x000070ac
   216f0:	.word	0x00006ea8
   216f4:	.word	0x00006cb8
   216f8:	.word	0x00005390
   216fc:	.word	0x00006f40
   21700:	.word	0x00006bc0
   21704:	.word	0x00006bb8
   21708:	.word	0x00006b78
   2170c:	.word	0x00006b68
   21710:	.word	0x00006bbc
   21714:	.word	0x00006ba4
   21718:	.word	0x00006ae0
   2171c:	.word	0x00006af0
   21720:	.word	0x00006cfc
   21724:	.word	0x00006ad4
   21728:	.word	0x00006ad0
   2172c:	.word	0x000069f0
   21730:	.word	0x00006bc8
   21734:	.word	0x000069dc
   21738:	.word	0x000068ac
   2173c:	.word	0x000068a0
   21740:	.word	0x00006a98

00021744 <dta_111_variable_width>:
   21744:	cmp	r0, #0
   21748:	beq	21780 <dta_111_variable_width+0x3c>
   2174c:	cmp	r0, #5
   21750:	beq	21794 <dta_111_variable_width+0x50>
   21754:	sub	r3, r0, #3
   21758:	cmp	r3, #1
   2175c:	bls	21778 <dta_111_variable_width+0x34>
   21760:	cmp	r0, #2
   21764:	beq	2177c <dta_111_variable_width+0x38>
   21768:	sub	r0, r0, #1
   2176c:	clz	r0, r0
   21770:	lsr	r0, r0, #5
   21774:	bx	lr
   21778:	mov	r0, #4
   2177c:	bx	lr
   21780:	sub	r3, r1, #1
   21784:	cmp	r3, #244	; 0xf4
   21788:	movcc	r0, r1
   2178c:	movcs	r0, #244	; 0xf4
   21790:	bx	lr
   21794:	mov	r0, #8
   21798:	bx	lr

0002179c <dta_old_variable_width>:
   2179c:	cmp	r0, #0
   217a0:	beq	217d8 <dta_old_variable_width+0x3c>
   217a4:	cmp	r0, #5
   217a8:	beq	217ec <dta_old_variable_width+0x50>
   217ac:	sub	r3, r0, #3
   217b0:	cmp	r3, #1
   217b4:	bls	217d0 <dta_old_variable_width+0x34>
   217b8:	cmp	r0, #2
   217bc:	beq	217d4 <dta_old_variable_width+0x38>
   217c0:	sub	r0, r0, #1
   217c4:	clz	r0, r0
   217c8:	lsr	r0, r0, #5
   217cc:	bx	lr
   217d0:	mov	r0, #4
   217d4:	bx	lr
   217d8:	sub	r3, r1, #1
   217dc:	cmp	r3, #128	; 0x80
   217e0:	movcc	r0, r1
   217e4:	movcs	r0, #128	; 0x80
   217e8:	bx	lr
   217ec:	mov	r0, #8
   217f0:	bx	lr

000217f4 <dta_113_write_missing_numeric>:
   217f4:	ldr	r3, [r1]
   217f8:	cmp	r3, #1
   217fc:	moveq	r3, #101	; 0x65
   21800:	strbeq	r3, [r0]
   21804:	beq	21840 <dta_113_write_missing_numeric+0x4c>
   21808:	cmp	r3, #2
   2180c:	movweq	r3, #32741	; 0x7fe5
   21810:	strheq	r3, [r0]
   21814:	beq	21840 <dta_113_write_missing_numeric+0x4c>
   21818:	cmp	r3, #3
   2181c:	mvneq	r3, #-2147483622	; 0x8000001a
   21820:	streq	r3, [r0]
   21824:	beq	21840 <dta_113_write_missing_numeric+0x4c>
   21828:	cmp	r3, #4
   2182c:	moveq	r3, #2130706432	; 0x7f000000
   21830:	streq	r3, [r0]
   21834:	beq	21840 <dta_113_write_missing_numeric+0x4c>
   21838:	cmp	r3, #5
   2183c:	beq	21848 <dta_113_write_missing_numeric+0x54>
   21840:	mov	r0, #0
   21844:	bx	lr
   21848:	strd	r4, [sp, #-8]!
   2184c:	mov	r4, #0
   21850:	sub	sp, sp, #8
   21854:	mov	r5, #0
   21858:	movt	r5, #32736	; 0x7fe0
   2185c:	mov	r2, #0
   21860:	strd	r4, [sp]
   21864:	ldr	r3, [sp, #4]
   21868:	str	r2, [r0]
   2186c:	str	r3, [r0, #4]
   21870:	mov	r0, #0
   21874:	add	sp, sp, #8
   21878:	ldrd	r4, [sp]
   2187c:	add	sp, sp, #8
   21880:	bx	lr

00021884 <dta_write_double>:
   21884:	vldr	d7, [pc, #124]	; 21908 <dta_write_double+0x84>
   21888:	strd	r4, [sp, #-8]!
   2188c:	mvn	r4, #0
   21890:	sub	sp, sp, #16
   21894:	movw	r5, #65535	; 0xffff
   21898:	movt	r5, #32735	; 0x7fdf
   2189c:	strd	r4, [sp]
   218a0:	vcmpe.f64	d0, d7
   218a4:	vmrs	APSR_nzcv, fpscr
   218a8:	bgt	218e4 <dta_write_double+0x60>
   218ac:	vcmp.f64	d0, d0
   218b0:	vmrs	APSR_nzcv, fpscr
   218b4:	bvs	218f8 <dta_write_double+0x74>
   218b8:	vstr	d0, [sp, #8]
   218bc:	mov	r3, r0
   218c0:	mov	r0, #0
   218c4:	ldr	r1, [sp, #8]
   218c8:	ldr	r2, [sp, #12]
   218cc:	str	r1, [r3]
   218d0:	str	r2, [r3, #4]
   218d4:	add	sp, sp, #16
   218d8:	ldrd	r4, [sp]
   218dc:	add	sp, sp, #8
   218e0:	bx	lr
   218e4:	mov	r0, #20
   218e8:	add	sp, sp, #16
   218ec:	ldrd	r4, [sp]
   218f0:	add	sp, sp, #8
   218f4:	bx	lr
   218f8:	add	sp, sp, #16
   218fc:	ldrd	r4, [sp]
   21900:	add	sp, sp, #8
   21904:	b	217f4 <dta_113_write_missing_numeric>
   21908:	.word	0xffffffff
   2190c:	.word	0x7fdfffff

00021910 <dta_write_float>:
   21910:	vldr	s15, [pc, #76]	; 21964 <dta_write_float+0x54>
   21914:	sub	sp, sp, #8
   21918:	mvn	r3, #-2130706432	; 0x81000000
   2191c:	str	r3, [sp, #4]
   21920:	vcmpe.f32	s0, s15
   21924:	vmrs	APSR_nzcv, fpscr
   21928:	bgt	21950 <dta_write_float+0x40>
   2192c:	vcmp.f32	s0, s0
   21930:	vmrs	APSR_nzcv, fpscr
   21934:	bvs	2195c <dta_write_float+0x4c>
   21938:	vmov	r3, s0
   2193c:	mov	r2, r0
   21940:	mov	r0, #0
   21944:	str	r3, [r2]
   21948:	add	sp, sp, #8
   2194c:	bx	lr
   21950:	mov	r0, #20
   21954:	add	sp, sp, #8
   21958:	bx	lr
   2195c:	add	sp, sp, #8
   21960:	b	217f4 <dta_113_write_missing_numeric>
   21964:	.word	0x7effffff

00021968 <readstat_begin_writing_dta>:
   21968:	mov	r3, r0
   2196c:	ldr	r0, [r0, #8]
   21970:	str	r4, [sp, #-8]!
   21974:	ldr	ip, [pc, #420]	; 21b20 <readstat_begin_writing_dta+0x1b8>
   21978:	str	lr, [sp, #4]
   2197c:	ldr	lr, [pc, #416]	; 21b24 <readstat_begin_writing_dta+0x1bc>
   21980:	cmp	r0, #0
   21984:	add	ip, pc, ip
   21988:	bne	21a64 <readstat_begin_writing_dta+0xfc>
   2198c:	mov	r0, #118	; 0x76
   21990:	str	r0, [r3, #8]
   21994:	ldr	r0, [pc, #396]	; 21b28 <readstat_begin_writing_dta+0x1c0>
   21998:	ldr	ip, [ip, lr]
   2199c:	add	r0, pc, r0
   219a0:	str	r0, [r3, #228]	; 0xe4
   219a4:	str	ip, [r3, #292]	; 0x124
   219a8:	ldr	ip, [pc, #380]	; 21b2c <readstat_begin_writing_dta+0x1c4>
   219ac:	ldr	r0, [pc, #380]	; 21b30 <readstat_begin_writing_dta+0x1c8>
   219b0:	add	ip, pc, ip
   219b4:	add	r0, pc, r0
   219b8:	str	ip, [r3, #232]	; 0xe8
   219bc:	str	r0, [r3, #260]	; 0x104
   219c0:	ldr	ip, [pc, #364]	; 21b34 <readstat_begin_writing_dta+0x1cc>
   219c4:	ldr	r0, [pc, #364]	; 21b38 <readstat_begin_writing_dta+0x1d0>
   219c8:	ldr	lr, [pc, #364]	; 21b3c <readstat_begin_writing_dta+0x1d4>
   219cc:	add	ip, pc, ip
   219d0:	add	r0, pc, r0
   219d4:	str	ip, [r3, #236]	; 0xec
   219d8:	ldr	ip, [pc, #352]	; 21b40 <readstat_begin_writing_dta+0x1d8>
   219dc:	str	r0, [r3, #240]	; 0xf0
   219e0:	add	lr, pc, lr
   219e4:	ldr	r0, [pc, #344]	; 21b44 <readstat_begin_writing_dta+0x1dc>
   219e8:	str	lr, [r3, #244]	; 0xf4
   219ec:	add	ip, pc, ip
   219f0:	add	r0, pc, r0
   219f4:	str	ip, [r3, #268]	; 0x10c
   219f8:	str	r0, [r3, #272]	; 0x110
   219fc:	ldr	ip, [pc, #324]	; 21b48 <readstat_begin_writing_dta+0x1e0>
   21a00:	mov	r0, r3
   21a04:	ldr	r4, [pc, #320]	; 21b4c <readstat_begin_writing_dta+0x1e4>
   21a08:	ldr	lr, [pc, #320]	; 21b50 <readstat_begin_writing_dta+0x1e8>
   21a0c:	add	ip, pc, ip
   21a10:	str	ip, [r3, #248]	; 0xf8
   21a14:	add	r4, pc, r4
   21a18:	ldr	ip, [pc, #308]	; 21b54 <readstat_begin_writing_dta+0x1ec>
   21a1c:	add	lr, pc, lr
   21a20:	str	r4, [r3, #252]	; 0xfc
   21a24:	ldr	r4, [pc, #300]	; 21b58 <readstat_begin_writing_dta+0x1f0>
   21a28:	str	lr, [r3, #256]	; 0x100
   21a2c:	ldr	lr, [pc, #296]	; 21b5c <readstat_begin_writing_dta+0x1f4>
   21a30:	add	ip, pc, ip
   21a34:	str	ip, [r3, #264]	; 0x108
   21a38:	add	r4, pc, r4
   21a3c:	ldr	ip, [pc, #284]	; 21b60 <readstat_begin_writing_dta+0x1f8>
   21a40:	add	lr, pc, lr
   21a44:	str	r4, [r3, #276]	; 0x114
   21a48:	ldr	r4, [sp]
   21a4c:	str	lr, [r3, #284]	; 0x11c
   21a50:	ldr	lr, [sp, #4]
   21a54:	add	sp, sp, #8
   21a58:	add	ip, pc, ip
   21a5c:	str	ip, [r3, #288]	; 0x120
   21a60:	b	3f3c <readstat_begin_writing_file@plt>
   21a64:	ldr	ip, [ip, lr]
   21a68:	cmp	r0, #116	; 0x74
   21a6c:	str	ip, [r3, #292]	; 0x124
   21a70:	bgt	21af0 <readstat_begin_writing_dta+0x188>
   21a74:	cmp	r0, #110	; 0x6e
   21a78:	ble	21ad0 <readstat_begin_writing_dta+0x168>
   21a7c:	ldr	ip, [pc, #224]	; 21b64 <readstat_begin_writing_dta+0x1fc>
   21a80:	add	ip, pc, ip
   21a84:	str	ip, [r3, #228]	; 0xe4
   21a88:	ldr	ip, [pc, #216]	; 21b68 <readstat_begin_writing_dta+0x200>
   21a8c:	cmp	r0, #112	; 0x70
   21a90:	add	ip, pc, ip
   21a94:	str	ip, [r3, #232]	; 0xe8
   21a98:	bgt	219c0 <readstat_begin_writing_dta+0x58>
   21a9c:	ldr	r0, [pc, #200]	; 21b6c <readstat_begin_writing_dta+0x204>
   21aa0:	ldr	lr, [pc, #200]	; 21b70 <readstat_begin_writing_dta+0x208>
   21aa4:	ldr	ip, [pc, #200]	; 21b74 <readstat_begin_writing_dta+0x20c>
   21aa8:	add	r0, pc, r0
   21aac:	str	r0, [r3, #236]	; 0xec
   21ab0:	add	lr, pc, lr
   21ab4:	ldr	r0, [pc, #188]	; 21b78 <readstat_begin_writing_dta+0x210>
   21ab8:	add	ip, pc, ip
   21abc:	str	lr, [r3, #240]	; 0xf0
   21ac0:	str	ip, [r3, #244]	; 0xf4
   21ac4:	add	r0, pc, r0
   21ac8:	str	r0, [r3, #268]	; 0x10c
   21acc:	b	219fc <readstat_begin_writing_dta+0x94>
   21ad0:	ldr	ip, [pc, #164]	; 21b7c <readstat_begin_writing_dta+0x214>
   21ad4:	add	ip, pc, ip
   21ad8:	str	ip, [r3, #228]	; 0xe4
   21adc:	beq	21a88 <readstat_begin_writing_dta+0x120>
   21ae0:	ldr	r0, [pc, #152]	; 21b80 <readstat_begin_writing_dta+0x218>
   21ae4:	add	r0, pc, r0
   21ae8:	str	r0, [r3, #232]	; 0xe8
   21aec:	b	21a9c <readstat_begin_writing_dta+0x134>
   21af0:	ldr	ip, [pc, #140]	; 21b84 <readstat_begin_writing_dta+0x21c>
   21af4:	cmp	r0, #117	; 0x75
   21af8:	add	ip, pc, ip
   21afc:	str	ip, [r3, #228]	; 0xe4
   21b00:	bne	219a8 <readstat_begin_writing_dta+0x40>
   21b04:	ldr	ip, [pc, #124]	; 21b88 <readstat_begin_writing_dta+0x220>
   21b08:	ldr	r0, [pc, #124]	; 21b8c <readstat_begin_writing_dta+0x224>
   21b0c:	add	ip, pc, ip
   21b10:	add	r0, pc, r0
   21b14:	str	ip, [r3, #232]	; 0xe8
   21b18:	str	r0, [r3, #260]	; 0x104
   21b1c:	b	219c0 <readstat_begin_writing_dta+0x58>
   21b20:	.word	0x00023674
   21b24:	.word	0x000002fc
   21b28:	.word	0xffffdcf4
   21b2c:	.word	0xffffec08
   21b30:	.word	0xffffda10
   21b34:	.word	0xffffd8e4
   21b38:	.word	0xffffd910
   21b3c:	.word	0xffffd938
   21b40:	.word	0xfffffe00
   21b44:	.word	0xffffde2c
   21b48:	.word	0xfffffefc
   21b4c:	.word	0xfffffe68
   21b50:	.word	0xffffdba8
   21b54:	.word	0xffffd970
   21b58:	.word	0xffffece0
   21b5c:	.word	0xffffdec0
   21b60:	.word	0xffffd944
   21b64:	.word	0xfffffcbc
   21b68:	.word	0xffffeb04
   21b6c:	.word	0xffffd820
   21b70:	.word	0xffffd84c
   21b74:	.word	0xffffd878
   21b78:	.word	0xffffdcc8
   21b7c:	.word	0xfffffcc0
   21b80:	.word	0xffffea8c
   21b84:	.word	0xffffdb98
   21b88:	.word	0xffffea88
   21b8c:	.word	0xffffd838

00021b90 <submit_value_label>:
   21b90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21b94:	strd	r6, [sp, #8]
   21b98:	ldr	r6, [r0, #20]
   21b9c:	strd	r8, [sp, #16]
   21ba0:	strd	sl, [sp, #24]
   21ba4:	str	lr, [sp, #32]
   21ba8:	sub	sp, sp, #44	; 0x2c
   21bac:	ldrd	r4, [sp, #80]	; 0x50
   21bb0:	cmp	r6, #0
   21bb4:	beq	21c4c <submit_value_label+0xbc>
   21bb8:	cmp	r2, #2
   21bbc:	mov	r9, r1
   21bc0:	beq	21c6c <submit_value_label+0xdc>
   21bc4:	cmp	r2, #3
   21bc8:	beq	21c4c <submit_value_label+0xbc>
   21bcc:	mov	r0, #0
   21bd0:	mov	r1, #0
   21bd4:	add	r7, sp, #24
   21bd8:	cmp	r2, #0
   21bdc:	strd	r0, [r7, #8]
   21be0:	strd	r0, [sp, #24]
   21be4:	beq	21c14 <submit_value_label+0x84>
   21be8:	cmp	r2, #1
   21bec:	beq	21d04 <submit_value_label+0x174>
   21bf0:	cmn	r2, #1
   21bf4:	bne	21c20 <submit_value_label+0x90>
   21bf8:	mov	r2, #0
   21bfc:	mov	r3, #0
   21c00:	movt	r3, #32760	; 0x7ff8
   21c04:	mov	r1, #5
   21c08:	strd	r2, [sp, #24]
   21c0c:	str	r1, [sp, #32]
   21c10:	b	21c20 <submit_value_label+0x90>
   21c14:	mov	r3, #5
   21c18:	vstr	d0, [sp, #24]
   21c1c:	str	r3, [sp, #32]
   21c20:	ldrd	r4, [sp, #32]
   21c24:	mov	r0, r9
   21c28:	ldr	r3, [sp, #100]	; 0x64
   21c2c:	str	r3, [sp, #8]
   21c30:	ldr	r3, [sp, #104]	; 0x68
   21c34:	str	r3, [sp, #12]
   21c38:	ldm	r7, {r2, r3}
   21c3c:	strd	r4, [sp]
   21c40:	blx	r6
   21c44:	cmp	r0, #0
   21c48:	bne	21cfc <submit_value_label+0x16c>
   21c4c:	mov	r0, #0
   21c50:	add	sp, sp, #44	; 0x2c
   21c54:	ldrd	r4, [sp]
   21c58:	ldrd	r6, [sp, #8]
   21c5c:	ldrd	r8, [sp, #16]
   21c60:	ldrd	sl, [sp, #24]
   21c64:	add	sp, sp, #32
   21c68:	pop	{pc}		; (ldr pc, [sp], #4)
   21c6c:	ldrd	r2, [sp, #88]	; 0x58
   21c70:	cmp	r2, r4
   21c74:	sbcs	r3, r3, r5
   21c78:	blt	21c4c <submit_value_label+0xbc>
   21c7c:	add	fp, sp, #32
   21c80:	add	r7, sp, #24
   21c84:	str	r1, [sp, #16]
   21c88:	mov	sl, #0
   21c8c:	str	r0, [sp, #20]
   21c90:	b	21cb4 <submit_value_label+0x124>
   21c94:	ldrd	r2, [sp, #88]	; 0x58
   21c98:	adds	r4, r4, #1
   21c9c:	adc	r5, r5, #0
   21ca0:	cmp	r2, r4
   21ca4:	sbcs	r3, r3, r5
   21ca8:	blt	21c4c <submit_value_label+0xbc>
   21cac:	ldr	r3, [sp, #20]
   21cb0:	ldr	r6, [r3, #20]
   21cb4:	mov	r0, r4
   21cb8:	mov	r1, r5
   21cbc:	str	sl, [sp, #36]	; 0x24
   21cc0:	bl	2510c <__aeabi_l2d>
   21cc4:	mov	r3, #5
   21cc8:	strd	r0, [sp, #24]
   21ccc:	ldr	r0, [sp, #16]
   21cd0:	str	r3, [sp, #32]
   21cd4:	ldr	r3, [sp, #100]	; 0x64
   21cd8:	str	r3, [sp, #8]
   21cdc:	ldr	r3, [sp, #104]	; 0x68
   21ce0:	str	r3, [sp, #12]
   21ce4:	ldrd	r8, [fp]
   21ce8:	ldm	r7, {r2, r3}
   21cec:	strd	r8, [sp]
   21cf0:	blx	r6
   21cf4:	cmp	r0, #0
   21cf8:	beq	21c94 <submit_value_label+0x104>
   21cfc:	mov	r0, #4
   21d00:	b	21c50 <submit_value_label+0xc0>
   21d04:	ldr	r3, [sp, #96]	; 0x60
   21d08:	str	r3, [sp, #24]
   21d0c:	b	21c20 <submit_value_label+0x90>

00021d10 <submit_columns>:
   21d10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21d14:	strd	r6, [sp, #8]
   21d18:	ldr	r6, [r1, #268]	; 0x10c
   21d1c:	strd	r8, [sp, #16]
   21d20:	strd	sl, [sp, #24]
   21d24:	str	lr, [sp, #32]
   21d28:	sub	sp, sp, #4
   21d2c:	ldr	r8, [r0, #8]
   21d30:	cmp	r6, #0
   21d34:	ble	21dfc <submit_columns+0xec>
   21d38:	ldr	r4, [r1, #276]	; 0x114
   21d3c:	mov	r3, #2208	; 0x8a0
   21d40:	mla	r6, r3, r6, r4
   21d44:	mov	r3, r4
   21d48:	ldr	ip, [r3]
   21d4c:	add	r3, r3, #2208	; 0x8a0
   21d50:	ldr	lr, [r1, #256]	; 0x100
   21d54:	add	r5, ip, #1
   21d58:	cmp	ip, lr
   21d5c:	strge	r5, [r1, #256]	; 0x100
   21d60:	cmp	r6, r3
   21d64:	bne	21d48 <submit_columns+0x38>
   21d68:	cmp	r8, #0
   21d6c:	beq	21dfc <submit_columns+0xec>
   21d70:	mov	r7, #0
   21d74:	mov	sl, r2
   21d78:	mov	r9, r0
   21d7c:	mov	r6, r1
   21d80:	mov	fp, #2208	; 0x8a0
   21d84:	mov	r5, r7
   21d88:	b	21d94 <submit_columns+0x84>
   21d8c:	ldr	r8, [r9, #8]
   21d90:	ldr	r4, [r6, #276]	; 0x114
   21d94:	mla	r4, fp, r5, r4
   21d98:	mov	r0, r5
   21d9c:	ldr	r3, [r4, #16]
   21da0:	add	r1, r4, #16
   21da4:	str	r5, [r4, #20]
   21da8:	ldrb	r2, [r4, #2168]	; 0x878
   21dac:	str	r7, [r4, #2164]	; 0x874
   21db0:	cmp	r3, #0
   21db4:	ldreq	r3, [r4, #8]
   21db8:	streq	r3, [r4, #1612]	; 0x64c
   21dbc:	cmp	r2, #0
   21dc0:	mov	r3, sl
   21dc4:	addne	r2, r4, #2160	; 0x870
   21dc8:	addne	r2, r2, #8
   21dcc:	blx	r8
   21dd0:	cmp	r0, #2
   21dd4:	moveq	r3, #1
   21dd8:	streq	r3, [r4, #12]
   21ddc:	beq	21dec <submit_columns+0xdc>
   21de0:	cmp	r0, #1
   21de4:	beq	21e1c <submit_columns+0x10c>
   21de8:	add	r7, r7, #1
   21dec:	ldr	r3, [r6, #268]	; 0x10c
   21df0:	add	r5, r5, #1
   21df4:	cmp	r3, r5
   21df8:	bgt	21d8c <submit_columns+0x7c>
   21dfc:	mov	r0, #0
   21e00:	add	sp, sp, #4
   21e04:	ldrd	r4, [sp]
   21e08:	ldrd	r6, [sp, #8]
   21e0c:	ldrd	r8, [sp, #16]
   21e10:	ldrd	sl, [sp, #24]
   21e14:	add	sp, sp, #32
   21e18:	pop	{pc}		; (ldr pc, [sp], #4)
   21e1c:	mov	r0, #4
   21e20:	b	21e00 <submit_columns+0xf0>

00021e24 <readstat_copy>:
   21e24:	cmp	r3, r1
   21e28:	str	r4, [sp, #-8]!
   21e2c:	mov	r4, r3
   21e30:	subcs	r4, r1, #1
   21e34:	mov	r1, r2
   21e38:	str	lr, [sp, #4]
   21e3c:	mov	r2, r4
   21e40:	bl	3ef4 <memcpy@plt>
   21e44:	mov	r2, #0
   21e48:	strb	r2, [r0, r4]
   21e4c:	ldr	r4, [sp]
   21e50:	add	sp, sp, #4
   21e54:	pop	{pc}		; (ldr pc, [sp], #4)

00021e58 <readstat_copy_lower>:
   21e58:	strd	r4, [sp, #-16]!
   21e5c:	mov	r4, r0
   21e60:	str	r6, [sp, #8]
   21e64:	mov	r6, r1
   21e68:	str	lr, [sp, #12]
   21e6c:	bl	3e40 <readstat_copy@plt>
   21e70:	cmp	r6, #0
   21e74:	beq	21eb4 <readstat_copy_lower+0x5c>
   21e78:	ldrb	r5, [r4]
   21e7c:	cmp	r5, #0
   21e80:	beq	21eb4 <readstat_copy_lower+0x5c>
   21e84:	bl	4140 <__ctype_tolower_loc@plt>
   21e88:	sub	r2, r6, #1
   21e8c:	add	r2, r4, r2
   21e90:	b	21ea0 <readstat_copy_lower+0x48>
   21e94:	ldrb	r5, [r4, #1]!
   21e98:	cmp	r5, #0
   21e9c:	beq	21eb4 <readstat_copy_lower+0x5c>
   21ea0:	ldr	r3, [r0]
   21ea4:	cmp	r4, r2
   21ea8:	ldr	r3, [r3, r5, lsl #2]
   21eac:	strb	r3, [r4]
   21eb0:	bne	21e94 <readstat_copy_lower+0x3c>
   21eb4:	ldrd	r4, [sp]
   21eb8:	ldr	r6, [sp, #8]
   21ebc:	add	sp, sp, #12
   21ec0:	pop	{pc}		; (ldr pc, [sp], #4)

00021ec4 <readstat_copy_quoted>:
   21ec4:	cmp	r3, r1
   21ec8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   21ecc:	subcs	r3, r1, #1
   21ed0:	strd	r6, [sp, #8]
   21ed4:	cmp	r3, #0
   21ed8:	str	r8, [sp, #16]
   21edc:	str	lr, [sp, #20]
   21ee0:	beq	21f88 <readstat_copy_quoted+0xc4>
   21ee4:	mov	r1, r0
   21ee8:	mov	ip, #0
   21eec:	rsb	r6, r0, #1
   21ef0:	mov	r8, #9
   21ef4:	b	21f0c <readstat_copy_quoted+0x48>
   21ef8:	cmp	r3, r4
   21efc:	mov	ip, r4
   21f00:	strb	r5, [r1]
   21f04:	bls	21f80 <readstat_copy_quoted+0xbc>
   21f08:	add	r1, r1, #1
   21f0c:	ldrb	r5, [r2, ip]
   21f10:	mov	lr, r1
   21f14:	add	r4, ip, #1
   21f18:	add	r7, r6, r1
   21f1c:	cmp	r5, #92	; 0x5c
   21f20:	bne	21ef8 <readstat_copy_quoted+0x34>
   21f24:	cmp	r3, r4
   21f28:	add	ip, ip, #2
   21f2c:	bls	21f50 <readstat_copy_quoted+0x8c>
   21f30:	ldrb	r4, [r2, r4]
   21f34:	add	r5, r6, lr
   21f38:	cmp	r4, #116	; 0x74
   21f3c:	beq	21f6c <readstat_copy_quoted+0xa8>
   21f40:	cmp	r3, ip
   21f44:	strb	r4, [lr]
   21f48:	bhi	21f08 <readstat_copy_quoted+0x44>
   21f4c:	add	lr, r0, r5
   21f50:	mov	r3, #0
   21f54:	strb	r3, [lr]
   21f58:	ldrd	r4, [sp]
   21f5c:	ldrd	r6, [sp, #8]
   21f60:	ldr	r8, [sp, #16]
   21f64:	add	sp, sp, #20
   21f68:	pop	{pc}		; (ldr pc, [sp], #4)
   21f6c:	cmp	r3, ip
   21f70:	strb	r8, [lr]
   21f74:	bhi	21f08 <readstat_copy_quoted+0x44>
   21f78:	add	lr, r0, r5
   21f7c:	b	21f50 <readstat_copy_quoted+0x8c>
   21f80:	add	lr, r0, r7
   21f84:	b	21f50 <readstat_copy_quoted+0x8c>
   21f88:	mov	lr, r0
   21f8c:	b	21f50 <readstat_copy_quoted+0x8c>

00021f90 <readstat_parse_sas_commands>:
   21f90:	ldr	ip, [r0, #32]
   21f94:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21f98:	strd	r6, [sp, #8]
   21f9c:	strd	r8, [sp, #16]
   21fa0:	mov	r9, r0
   21fa4:	mov	r0, r1
   21fa8:	strd	sl, [sp, #24]
   21fac:	str	lr, [sp, #32]
   21fb0:	sub	sp, sp, #2304	; 0x900
   21fb4:	sub	sp, sp, #12
   21fb8:	ldr	r1, [ip, #20]
   21fbc:	str	r2, [sp, #100]	; 0x64
   21fc0:	str	r3, [sp, #132]	; 0x84
   21fc4:	ldr	r3, [ip]
   21fc8:	blx	r3
   21fcc:	cmn	r0, #1
   21fd0:	beq	227dc <readstat_parse_sas_commands+0x84c>
   21fd4:	ldr	r3, [r9, #32]
   21fd8:	mov	r1, #2
   21fdc:	mov	r0, #0
   21fe0:	ldr	r4, [r3, #8]
   21fe4:	ldr	r2, [r3, #20]
   21fe8:	blx	r4
   21fec:	cmn	r0, #1
   21ff0:	mov	r4, r0
   21ff4:	beq	227bc <readstat_parse_sas_commands+0x82c>
   21ff8:	ldr	r3, [r9, #32]
   21ffc:	mov	r1, #0
   22000:	mov	r0, r1
   22004:	ldr	r5, [r3, #8]
   22008:	ldr	r2, [r3, #20]
   2200c:	blx	r5
   22010:	mov	r0, r4
   22014:	bl	40e0 <malloc@plt>
   22018:	ldr	r3, [r9, #32]
   2201c:	add	r6, r0, r4
   22020:	mov	r1, r4
   22024:	mov	r5, r0
   22028:	str	r6, [sp, #44]	; 0x2c
   2202c:	str	r0, [sp, #128]	; 0x80
   22030:	ldr	r4, [r3, #12]
   22034:	ldr	r2, [r3, #20]
   22038:	blx	r4
   2203c:	mov	r1, #280	; 0x118
   22040:	mov	r0, #1
   22044:	bl	3d2c <calloc@plt>
   22048:	subs	r2, r0, #0
   2204c:	str	r2, [sp, #36]	; 0x24
   22050:	beq	227d4 <readstat_parse_sas_commands+0x844>
   22054:	mov	r3, #1
   22058:	cmp	r5, r6
   2205c:	mov	r1, r5
   22060:	str	r3, [r2, #256]	; 0x100
   22064:	beq	22268 <readstat_parse_sas_commands+0x2d8>
   22068:	ldr	r0, [pc, #1048]	; 22488 <readstat_parse_sas_commands+0x4f8>
   2206c:	mov	r2, #0
   22070:	mov	sl, #0
   22074:	mov	fp, #0
   22078:	mov	r6, r5
   2207c:	ldr	r3, [pc, #1032]	; 2248c <readstat_parse_sas_commands+0x4fc>
   22080:	mov	r8, r2
   22084:	mov	r4, #27
   22088:	mov	r5, #5632	; 0x1600
   2208c:	movw	ip, #5383	; 0x1507
   22090:	str	r2, [sp, #40]	; 0x28
   22094:	vldr	d7, [pc, #996]	; 22480 <readstat_parse_sas_commands+0x4f0>
   22098:	movw	r7, #1094	; 0x446
   2209c:	add	r0, pc, r0
   220a0:	str	r0, [sp, #48]	; 0x30
   220a4:	add	r3, pc, r3
   220a8:	ldr	r0, [pc, #992]	; 22490 <readstat_parse_sas_commands+0x500>
   220ac:	add	r3, r3, #1088	; 0x440
   220b0:	add	r3, r3, #12
   220b4:	str	r2, [sp, #52]	; 0x34
   220b8:	str	r2, [sp, #60]	; 0x3c
   220bc:	str	r2, [sp, #64]	; 0x40
   220c0:	str	r3, [sp, #104]	; 0x68
   220c4:	mov	r3, #5
   220c8:	add	r0, pc, r0
   220cc:	str	r2, [sp, #96]	; 0x60
   220d0:	str	r0, [sp, #56]	; 0x38
   220d4:	str	r3, [sp, #68]	; 0x44
   220d8:	vstr	d7, [sp, #72]	; 0x48
   220dc:	strd	sl, [sp, #108]	; 0x6c
   220e0:	str	r9, [sp, #120]	; 0x78
   220e4:	mov	r9, r2
   220e8:	str	r1, [sp, #124]	; 0x7c
   220ec:	b	2213c <readstat_parse_sas_commands+0x1ac>
   220f0:	cmp	r7, #0
   220f4:	beq	226f8 <readstat_parse_sas_commands+0x768>
   220f8:	ldr	r3, [sp, #44]	; 0x2c
   220fc:	add	r6, r6, #1
   22100:	cmp	r3, r6
   22104:	beq	22258 <readstat_parse_sas_commands+0x2c8>
   22108:	ldr	r3, [pc, #900]	; 22494 <readstat_parse_sas_commands+0x504>
   2210c:	lsl	r2, r7, #1
   22110:	ldr	r1, [pc, #896]	; 22498 <readstat_parse_sas_commands+0x508>
   22114:	add	r3, pc, r3
   22118:	add	r0, r3, #1296	; 0x510
   2211c:	add	r3, r3, #3488	; 0xda0
   22120:	add	r1, pc, r1
   22124:	add	r0, r0, #4
   22128:	add	r3, r3, #8
   2212c:	add	r1, r1, r7
   22130:	ldrsh	ip, [r0, r2]
   22134:	ldrsh	r5, [r3, r2]
   22138:	ldrb	r4, [r1, #-2492]	; 0xfffff644
   2213c:	cmp	r4, #0
   22140:	mov	r0, r5
   22144:	ldr	r3, [sp, #48]	; 0x30
   22148:	add	ip, ip, r3
   2214c:	bne	22674 <readstat_parse_sas_commands+0x6e4>
   22150:	ldr	r3, [sp, #56]	; 0x38
   22154:	ldrb	r7, [r3, r7]
   22158:	cmp	r7, #0
   2215c:	bne	2261c <readstat_parse_sas_commands+0x68c>
   22160:	ldr	r3, [pc, #820]	; 2249c <readstat_parse_sas_commands+0x50c>
   22164:	lsl	r1, r0, #1
   22168:	ldr	r2, [pc, #816]	; 224a0 <readstat_parse_sas_commands+0x510>
   2216c:	add	r3, pc, r3
   22170:	ldrb	r3, [r3, r0]
   22174:	add	r2, pc, r2
   22178:	ldrsh	r7, [r2, r1]
   2217c:	cmp	r3, #0
   22180:	beq	220f0 <readstat_parse_sas_commands+0x160>
   22184:	ldr	r1, [sp, #104]	; 0x68
   22188:	ldrb	r2, [r1, r3]
   2218c:	add	r3, r1, r3
   22190:	add	r4, r3, #1
   22194:	ldr	r1, [pc, #776]	; 224a4 <readstat_parse_sas_commands+0x514>
   22198:	add	r2, r2, #1
   2219c:	add	r5, r3, r2
   221a0:	add	r1, pc, r1
   221a4:	str	r1, [sp, #80]	; 0x50
   221a8:	ldr	r1, [pc, #760]	; 224a8 <readstat_parse_sas_commands+0x518>
   221ac:	add	r1, pc, r1
   221b0:	str	r1, [sp, #84]	; 0x54
   221b4:	cmp	r5, r4
   221b8:	beq	220f0 <readstat_parse_sas_commands+0x160>
   221bc:	ldrb	r3, [r4], #1
   221c0:	cmp	r3, #34	; 0x22
   221c4:	addls	pc, pc, r3, lsl #2
   221c8:	b	221b4 <readstat_parse_sas_commands+0x224>
   221cc:	b	22610 <readstat_parse_sas_commands+0x680>
   221d0:	b	223b0 <readstat_parse_sas_commands+0x420>
   221d4:	b	2236c <readstat_parse_sas_commands+0x3dc>
   221d8:	b	22358 <readstat_parse_sas_commands+0x3c8>
   221dc:	b	22600 <readstat_parse_sas_commands+0x670>
   221e0:	b	225f4 <readstat_parse_sas_commands+0x664>
   221e4:	b	225e8 <readstat_parse_sas_commands+0x658>
   221e8:	b	225d0 <readstat_parse_sas_commands+0x640>
   221ec:	b	225b8 <readstat_parse_sas_commands+0x628>
   221f0:	b	225a0 <readstat_parse_sas_commands+0x610>
   221f4:	b	22588 <readstat_parse_sas_commands+0x5f8>
   221f8:	b	22570 <readstat_parse_sas_commands+0x5e0>
   221fc:	b	22520 <readstat_parse_sas_commands+0x590>
   22200:	b	224f0 <readstat_parse_sas_commands+0x560>
   22204:	b	224d8 <readstat_parse_sas_commands+0x548>
   22208:	b	224b4 <readstat_parse_sas_commands+0x524>
   2220c:	b	22458 <readstat_parse_sas_commands+0x4c8>
   22210:	b	22404 <readstat_parse_sas_commands+0x474>
   22214:	b	222d0 <readstat_parse_sas_commands+0x340>
   22218:	b	222c8 <readstat_parse_sas_commands+0x338>
   2221c:	b	222d0 <readstat_parse_sas_commands+0x340>
   22220:	b	222c8 <readstat_parse_sas_commands+0x338>
   22224:	b	222f8 <readstat_parse_sas_commands+0x368>
   22228:	b	222d0 <readstat_parse_sas_commands+0x340>
   2222c:	b	222c8 <readstat_parse_sas_commands+0x338>
   22230:	b	2233c <readstat_parse_sas_commands+0x3ac>
   22234:	b	22320 <readstat_parse_sas_commands+0x390>
   22238:	b	22318 <readstat_parse_sas_commands+0x388>
   2223c:	b	2230c <readstat_parse_sas_commands+0x37c>
   22240:	b	222d8 <readstat_parse_sas_commands+0x348>
   22244:	b	222d8 <readstat_parse_sas_commands+0x348>
   22248:	b	222e4 <readstat_parse_sas_commands+0x354>
   2224c:	b	222f0 <readstat_parse_sas_commands+0x360>
   22250:	b	223ec <readstat_parse_sas_commands+0x45c>
   22254:	b	223f8 <readstat_parse_sas_commands+0x468>
   22258:	movw	r3, #1093	; 0x445
   2225c:	ldr	r9, [sp, #120]	; 0x78
   22260:	cmp	r7, r3
   22264:	ble	2279c <readstat_parse_sas_commands+0x80c>
   22268:	mov	r0, r9
   2226c:	ldr	r1, [sp, #36]	; 0x24
   22270:	ldr	r2, [sp, #100]	; 0x64
   22274:	bl	3f0c <submit_columns@plt>
   22278:	ldr	r2, [r9, #32]
   2227c:	mov	r3, r0
   22280:	str	r3, [sp, #40]	; 0x28
   22284:	ldr	r1, [r2, #4]
   22288:	ldr	r0, [r2, #20]
   2228c:	blx	r1
   22290:	ldr	r0, [sp, #128]	; 0x80
   22294:	bl	3e94 <free@plt>
   22298:	ldr	r3, [sp, #40]	; 0x28
   2229c:	cmp	r3, #0
   222a0:	bne	2277c <readstat_parse_sas_commands+0x7ec>
   222a4:	ldr	r0, [sp, #36]	; 0x24
   222a8:	add	sp, sp, #2304	; 0x900
   222ac:	add	sp, sp, #12
   222b0:	ldrd	r4, [sp]
   222b4:	ldrd	r6, [sp, #8]
   222b8:	ldrd	r8, [sp, #16]
   222bc:	ldrd	sl, [sp, #24]
   222c0:	add	sp, sp, #32
   222c4:	pop	{pc}		; (ldr pc, [sp], #4)
   222c8:	sub	r9, r6, r8
   222cc:	b	221b4 <readstat_parse_sas_commands+0x224>
   222d0:	mov	r8, r6
   222d4:	b	221b4 <readstat_parse_sas_commands+0x224>
   222d8:	mov	r3, #1
   222dc:	str	r3, [sp, #40]	; 0x28
   222e0:	b	221b4 <readstat_parse_sas_commands+0x224>
   222e4:	mov	r3, #3
   222e8:	str	r3, [sp, #40]	; 0x28
   222ec:	b	221b4 <readstat_parse_sas_commands+0x224>
   222f0:	str	sl, [sp, #52]	; 0x34
   222f4:	b	221b4 <readstat_parse_sas_commands+0x224>
   222f8:	ldr	r3, [sp, #96]	; 0x60
   222fc:	str	r6, [sp, #124]	; 0x7c
   22300:	add	r3, r3, #1
   22304:	str	r3, [sp, #96]	; 0x60
   22308:	b	221b4 <readstat_parse_sas_commands+0x224>
   2230c:	mov	r3, #2
   22310:	str	r3, [sp, #40]	; 0x28
   22314:	b	221b4 <readstat_parse_sas_commands+0x224>
   22318:	strd	sl, [sp, #108]	; 0x6c
   2231c:	b	221b4 <readstat_parse_sas_commands+0x224>
   22320:	mov	r3, #0
   22324:	mov	r0, sl
   22328:	mov	r1, fp
   2232c:	str	r3, [sp, #40]	; 0x28
   22330:	bl	250f8 <__aeabi_ul2d>
   22334:	strd	r0, [sp, #72]	; 0x48
   22338:	b	221b4 <readstat_parse_sas_commands+0x224>
   2233c:	rsbs	r0, sl, #0
   22340:	mov	r3, #0
   22344:	rsc	r1, fp, #0
   22348:	str	r3, [sp, #40]	; 0x28
   2234c:	bl	250f8 <__aeabi_ul2d>
   22350:	strd	r0, [sp, #72]	; 0x48
   22354:	b	221b4 <readstat_parse_sas_commands+0x224>
   22358:	sub	r3, sl, #1
   2235c:	str	r3, [sp, #60]	; 0x3c
   22360:	mov	r3, #1
   22364:	str	r3, [sp, #52]	; 0x34
   22368:	b	221b4 <readstat_parse_sas_commands+0x224>
   2236c:	ldrb	r3, [r6]
   22370:	sub	r2, r3, #48	; 0x30
   22374:	uxtb	r1, r2
   22378:	cmp	r1, #9
   2237c:	bls	22394 <readstat_parse_sas_commands+0x404>
   22380:	sub	r2, r3, #65	; 0x41
   22384:	cmp	r2, #5
   22388:	bhi	226d4 <readstat_parse_sas_commands+0x744>
   2238c:	sub	r3, r3, #55	; 0x37
   22390:	mov	r2, r3
   22394:	asr	r3, r2, #31
   22398:	lsl	r1, fp, #4
   2239c:	lsl	r0, sl, #4
   223a0:	orr	r1, r1, sl, lsr #28
   223a4:	adds	sl, r0, r2
   223a8:	adc	fp, r1, r3
   223ac:	b	221b4 <readstat_parse_sas_commands+0x224>
   223b0:	lsl	r2, fp, #2
   223b4:	ldrb	r1, [r6]
   223b8:	lsl	r3, sl, #2
   223bc:	orr	r2, r2, sl, lsr #30
   223c0:	adds	r3, r3, sl
   223c4:	adc	r2, r2, fp
   223c8:	adds	r3, r3, r3
   223cc:	str	r3, [sp, #88]	; 0x58
   223d0:	adc	r3, r2, r2
   223d4:	str	r3, [sp, #92]	; 0x5c
   223d8:	sub	r3, r1, #48	; 0x30
   223dc:	ldrd	sl, [sp, #88]	; 0x58
   223e0:	adds	sl, sl, r3
   223e4:	adc	fp, fp, r3, asr #31
   223e8:	b	221b4 <readstat_parse_sas_commands+0x224>
   223ec:	sub	r3, sl, #1
   223f0:	str	r3, [sp, #64]	; 0x40
   223f4:	b	221b4 <readstat_parse_sas_commands+0x224>
   223f8:	mov	r3, #0
   223fc:	str	r3, [sp, #64]	; 0x40
   22400:	b	221b4 <readstat_parse_sas_commands+0x224>
   22404:	add	r1, sp, #200	; 0xc8
   22408:	strd	sl, [sp, #8]
   2240c:	ldr	r3, [sp, #108]	; 0x6c
   22410:	ldr	r2, [sp, #40]	; 0x28
   22414:	vldr	d0, [sp, #72]	; 0x48
   22418:	str	r3, [sp]
   2241c:	ldr	r3, [sp, #112]	; 0x70
   22420:	ldr	r0, [sp, #120]	; 0x78
   22424:	str	r3, [sp, #4]
   22428:	add	r3, sp, #232	; 0xe8
   2242c:	str	r3, [sp, #16]
   22430:	add	r3, sp, #264	; 0x108
   22434:	str	r3, [sp, #20]
   22438:	ldr	r3, [sp, #100]	; 0x64
   2243c:	str	r3, [sp, #24]
   22440:	bl	4020 <submit_value_label@plt>
   22444:	cmp	r0, #0
   22448:	beq	221b4 <readstat_parse_sas_commands+0x224>
   2244c:	mov	r3, r0
   22450:	ldr	r9, [sp, #120]	; 0x78
   22454:	b	2275c <readstat_parse_sas_commands+0x7cc>
   22458:	add	r1, sp, #136	; 0x88
   2245c:	ldr	r0, [sp, #36]	; 0x24
   22460:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   22464:	add	r0, r0, #2160	; 0x870
   22468:	mov	r3, #32
   2246c:	add	r0, r0, #8
   22470:	mov	r1, r3
   22474:	add	r2, sp, #200	; 0xc8
   22478:	bl	3e40 <readstat_copy@plt>
   2247c:	b	221b4 <readstat_parse_sas_commands+0x224>
   22480:	.word	0x00000000
   22484:	.word	0x7ff80000
   22488:	.word	0x0000be74
   2248c:	.word	0x00006088
   22490:	.word	0x00006064
   22494:	.word	0x00006018
   22498:	.word	0x00008004
   2249c:	.word	0x00007a48
   224a0:	.word	0x000090b4
   224a4:	.word	0x0000d2e8
   224a8:	.word	0x0000d2e8
   224ac:	.word	0x0000cda8
   224b0:	.word	0x0000cce8
   224b4:	add	r1, sp, #136	; 0x88
   224b8:	ldr	r0, [sp, #36]	; 0x24
   224bc:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   224c0:	mov	r3, #1024	; 0x400
   224c4:	add	r0, r0, #580	; 0x244
   224c8:	mov	r1, r3
   224cc:	add	r2, sp, #264	; 0x108
   224d0:	bl	3e40 <readstat_copy@plt>
   224d4:	b	221b4 <readstat_parse_sas_commands+0x224>
   224d8:	add	r1, sp, #136	; 0x88
   224dc:	ldr	r0, [sp, #36]	; 0x24
   224e0:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   224e4:	ldr	r3, [sp, #52]	; 0x34
   224e8:	str	r3, [r0, #8]
   224ec:	b	221b4 <readstat_parse_sas_commands+0x224>
   224f0:	add	r1, sp, #136	; 0x88
   224f4:	ldr	r0, [sp, #36]	; 0x24
   224f8:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   224fc:	ldr	r3, [sp, #64]	; 0x40
   22500:	str	r3, [r0]
   22504:	ldr	r3, [sp, #60]	; 0x3c
   22508:	str	r3, [r0, #4]
   2250c:	ldr	r3, [sp, #52]	; 0x34
   22510:	str	r3, [r0, #8]
   22514:	ldr	r3, [sp, #68]	; 0x44
   22518:	str	r3, [r0, #16]
   2251c:	b	221b4 <readstat_parse_sas_commands+0x224>
   22520:	add	r3, sp, #168	; 0xa8
   22524:	ldr	r1, [sp, #80]	; 0x50
   22528:	mov	r0, r3
   2252c:	str	r3, [sp, #116]	; 0x74
   22530:	bl	3ffc <strcasecmp@plt>
   22534:	cmp	r0, #0
   22538:	ldr	r1, [sp, #84]	; 0x54
   2253c:	ldreq	r2, [sp, #36]	; 0x24
   22540:	ldr	r3, [sp, #116]	; 0x74
   22544:	streq	sl, [r2, #264]	; 0x108
   22548:	mov	r0, r3
   2254c:	bl	3ffc <strcasecmp@plt>
   22550:	cmp	r0, #0
   22554:	bne	221b4 <readstat_parse_sas_commands+0x224>
   22558:	orrs	r3, sl, fp
   2255c:	ldr	r2, [sp, #36]	; 0x24
   22560:	uxtbne	r3, sl
   22564:	ldrbeq	r3, [sp, #264]	; 0x108
   22568:	strb	r3, [r2, #272]	; 0x110
   2256c:	b	221b4 <readstat_parse_sas_commands+0x224>
   22570:	mov	r3, r9
   22574:	mov	r2, r8
   22578:	mov	r1, #32
   2257c:	add	r0, sp, #136	; 0x88
   22580:	bl	43b0 <readstat_copy_lower@plt>
   22584:	b	221b4 <readstat_parse_sas_commands+0x224>
   22588:	mov	r3, r9
   2258c:	mov	r2, r8
   22590:	mov	r1, #32
   22594:	add	r0, sp, #168	; 0xa8
   22598:	bl	3e40 <readstat_copy@plt>
   2259c:	b	221b4 <readstat_parse_sas_commands+0x224>
   225a0:	mov	r3, r9
   225a4:	mov	r2, r8
   225a8:	mov	r1, #32
   225ac:	add	r0, sp, #232	; 0xe8
   225b0:	bl	3e40 <readstat_copy@plt>
   225b4:	b	221b4 <readstat_parse_sas_commands+0x224>
   225b8:	mov	r3, r9
   225bc:	mov	r2, r8
   225c0:	mov	r1, #32
   225c4:	add	r0, sp, #200	; 0xc8
   225c8:	bl	3e40 <readstat_copy@plt>
   225cc:	b	221b4 <readstat_parse_sas_commands+0x224>
   225d0:	mov	r3, r9
   225d4:	mov	r2, r8
   225d8:	mov	r1, #1024	; 0x400
   225dc:	add	r0, sp, #264	; 0x108
   225e0:	bl	3e40 <readstat_copy@plt>
   225e4:	b	221b4 <readstat_parse_sas_commands+0x224>
   225e8:	mov	r3, #5
   225ec:	str	r3, [sp, #68]	; 0x44
   225f0:	b	221b4 <readstat_parse_sas_commands+0x224>
   225f4:	mov	r3, #0
   225f8:	str	r3, [sp, #68]	; 0x44
   225fc:	b	221b4 <readstat_parse_sas_commands+0x224>
   22600:	ldr	r3, [sp, #60]	; 0x3c
   22604:	sub	r3, sl, r3
   22608:	str	r3, [sp, #52]	; 0x34
   2260c:	b	221b4 <readstat_parse_sas_commands+0x224>
   22610:	mov	sl, #0
   22614:	mov	fp, #0
   22618:	b	221b4 <readstat_parse_sas_commands+0x224>
   2261c:	add	r1, ip, r7, lsl #1
   22620:	sub	r1, r1, #2
   22624:	cmp	ip, r1
   22628:	bhi	2266c <readstat_parse_sas_commands+0x6dc>
   2262c:	ldrb	r4, [r6]
   22630:	mov	r2, ip
   22634:	sub	r3, r1, r2
   22638:	asr	r3, r3, #1
   2263c:	bic	r3, r3, #1
   22640:	ldrb	lr, [r2, r3]
   22644:	add	r3, r2, r3
   22648:	cmp	lr, r4
   2264c:	subhi	r1, r3, #2
   22650:	bhi	22664 <readstat_parse_sas_commands+0x6d4>
   22654:	ldrb	lr, [r3, #1]
   22658:	add	r2, r3, #2
   2265c:	cmp	lr, r4
   22660:	bcs	226bc <readstat_parse_sas_commands+0x72c>
   22664:	cmp	r1, r2
   22668:	bcs	22634 <readstat_parse_sas_commands+0x6a4>
   2266c:	add	r0, r0, r7
   22670:	b	22160 <readstat_parse_sas_commands+0x1d0>
   22674:	sub	r1, r4, #1
   22678:	adds	r1, ip, r1
   2267c:	bcs	226b0 <readstat_parse_sas_commands+0x720>
   22680:	ldrb	lr, [r6]
   22684:	mov	r2, ip
   22688:	sub	r3, r1, r2
   2268c:	ldrb	r0, [r2, r3, asr #1]
   22690:	add	r3, r2, r3, asr #1
   22694:	cmp	lr, r0
   22698:	subcc	r1, r3, #1
   2269c:	bcc	226a8 <readstat_parse_sas_commands+0x718>
   226a0:	bls	226c8 <readstat_parse_sas_commands+0x738>
   226a4:	add	r2, r3, #1
   226a8:	cmp	r2, r1
   226ac:	bls	22688 <readstat_parse_sas_commands+0x6f8>
   226b0:	add	ip, ip, r4
   226b4:	add	r0, r5, r4
   226b8:	b	22150 <readstat_parse_sas_commands+0x1c0>
   226bc:	sub	r3, r3, ip
   226c0:	add	r0, r0, r3, asr #1
   226c4:	b	22160 <readstat_parse_sas_commands+0x1d0>
   226c8:	sub	r3, r3, ip
   226cc:	add	r0, r5, r3
   226d0:	b	22160 <readstat_parse_sas_commands+0x1d0>
   226d4:	sub	r2, r3, #97	; 0x61
   226d8:	cmp	r2, #5
   226dc:	movhi	r2, #0
   226e0:	movhi	r3, #0
   226e4:	bhi	22398 <readstat_parse_sas_commands+0x408>
   226e8:	sub	r3, r3, #87	; 0x57
   226ec:	mov	r2, r3
   226f0:	asr	r3, r3, #31
   226f4:	b	22398 <readstat_parse_sas_commands+0x408>
   226f8:	ldr	r3, [sp, #44]	; 0x2c
   226fc:	ldr	r9, [sp, #120]	; 0x78
   22700:	cmp	r6, r3
   22704:	beq	2279c <readstat_parse_sas_commands+0x80c>
   22708:	ldr	r3, [sp, #124]	; 0x7c
   2270c:	add	r4, sp, #1280	; 0x500
   22710:	add	r4, r4, #8
   22714:	ldrb	ip, [r6]
   22718:	mov	r0, r4
   2271c:	ldr	r2, [pc, #-632]	; 224ac <readstat_parse_sas_commands+0x51c>
   22720:	sub	r1, r6, r3
   22724:	ldr	r3, [sp, #96]	; 0x60
   22728:	add	r1, r1, #1
   2272c:	stm	sp, {r1, ip}
   22730:	mov	r1, #1024	; 0x400
   22734:	add	r2, pc, r2
   22738:	add	r3, r3, #1
   2273c:	bl	4254 <snprintf@plt>
   22740:	ldr	r3, [r9, #24]
   22744:	cmp	r3, #0
   22748:	beq	22758 <readstat_parse_sas_commands+0x7c8>
   2274c:	mov	r0, r4
   22750:	ldr	r1, [sp, #100]	; 0x64
   22754:	blx	r3
   22758:	mov	r3, #5
   2275c:	ldr	r2, [r9, #32]
   22760:	str	r3, [sp, #40]	; 0x28
   22764:	ldr	r1, [r2, #4]
   22768:	ldr	r0, [r2, #20]
   2276c:	blx	r1
   22770:	ldr	r0, [sp, #128]	; 0x80
   22774:	bl	3e94 <free@plt>
   22778:	ldr	r3, [sp, #40]	; 0x28
   2277c:	ldr	r0, [sp, #36]	; 0x24
   22780:	ldr	r2, [sp, #132]	; 0x84
   22784:	cmp	r2, #0
   22788:	strne	r3, [r2]
   2278c:	mov	r3, #0
   22790:	str	r3, [sp, #36]	; 0x24
   22794:	bl	3f90 <readstat_schema_free@plt>
   22798:	b	222a4 <readstat_parse_sas_commands+0x314>
   2279c:	ldr	r1, [pc, #-756]	; 224b0 <readstat_parse_sas_commands+0x520>
   227a0:	add	r4, sp, #1280	; 0x500
   227a4:	mov	r2, #66	; 0x42
   227a8:	add	r4, r4, #8
   227ac:	mov	r0, r4
   227b0:	add	r1, pc, r1
   227b4:	bl	3ef4 <memcpy@plt>
   227b8:	b	22740 <readstat_parse_sas_commands+0x7b0>
   227bc:	mov	r3, #0
   227c0:	mov	r2, r3
   227c4:	mov	r3, #15
   227c8:	str	r2, [sp, #36]	; 0x24
   227cc:	str	r2, [sp, #128]	; 0x80
   227d0:	b	2275c <readstat_parse_sas_commands+0x7cc>
   227d4:	mov	r3, #3
   227d8:	b	2275c <readstat_parse_sas_commands+0x7cc>
   227dc:	ldr	r2, [sp, #132]	; 0x84
   227e0:	cmp	r2, #0
   227e4:	beq	227fc <readstat_parse_sas_commands+0x86c>
   227e8:	mov	r3, #1
   227ec:	mov	r1, #0
   227f0:	str	r3, [r2]
   227f4:	str	r1, [sp, #36]	; 0x24
   227f8:	b	222a4 <readstat_parse_sas_commands+0x314>
   227fc:	ldr	r3, [sp, #132]	; 0x84
   22800:	str	r3, [sp, #36]	; 0x24
   22804:	b	222a4 <readstat_parse_sas_commands+0x314>

00022808 <readstat_parse_spss_commands>:
   22808:	ldr	ip, [r0, #32]
   2280c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   22810:	strd	r6, [sp, #8]
   22814:	strd	r8, [sp, #16]
   22818:	strd	sl, [sp, #24]
   2281c:	str	lr, [sp, #32]
   22820:	sub	sp, sp, #2288	; 0x8f0
   22824:	sub	sp, sp, #12
   22828:	str	r0, [sp, #72]	; 0x48
   2282c:	mov	r0, r1
   22830:	ldr	r1, [ip, #20]
   22834:	str	r3, [sp, #148]	; 0x94
   22838:	ldr	r3, [ip]
   2283c:	str	r2, [sp, #112]	; 0x70
   22840:	blx	r3
   22844:	cmn	r0, #1
   22848:	beq	230a0 <readstat_parse_spss_commands+0x898>
   2284c:	ldr	r6, [sp, #72]	; 0x48
   22850:	mov	r1, #2
   22854:	mov	r0, #0
   22858:	ldr	r3, [r6, #32]
   2285c:	ldr	r4, [r3, #8]
   22860:	ldr	r2, [r3, #20]
   22864:	blx	r4
   22868:	cmn	r0, #1
   2286c:	mov	r4, r0
   22870:	beq	23084 <readstat_parse_spss_commands+0x87c>
   22874:	ldr	r3, [r6, #32]
   22878:	mov	r1, #0
   2287c:	mov	r0, r1
   22880:	ldr	r5, [r3, #8]
   22884:	ldr	r2, [r3, #20]
   22888:	blx	r5
   2288c:	mov	r0, r4
   22890:	bl	40e0 <malloc@plt>
   22894:	ldr	r3, [r6, #32]
   22898:	mov	r1, r4
   2289c:	mov	r5, r0
   228a0:	add	r6, r0, r1
   228a4:	str	r6, [sp, #60]	; 0x3c
   228a8:	str	r0, [sp, #132]	; 0x84
   228ac:	ldr	r4, [r3, #12]
   228b0:	ldr	r2, [r3, #20]
   228b4:	blx	r4
   228b8:	mov	r1, #280	; 0x118
   228bc:	mov	r0, #1
   228c0:	bl	3d2c <calloc@plt>
   228c4:	subs	sl, r0, #0
   228c8:	beq	23098 <readstat_parse_spss_commands+0x890>
   228cc:	mov	r3, #1
   228d0:	cmp	r5, r6
   228d4:	mov	r2, r5
   228d8:	str	r3, [sl, #256]	; 0x100
   228dc:	beq	22fe4 <readstat_parse_spss_commands+0x7dc>
   228e0:	ldr	r3, [pc, #992]	; 22cc8 <readstat_parse_spss_commands+0x4c0>
   228e4:	mov	fp, #0
   228e8:	mov	r0, #0
   228ec:	mov	r1, #0
   228f0:	mov	r4, #27
   228f4:	ldr	ip, [pc, #976]	; 22ccc <readstat_parse_spss_commands+0x4c4>
   228f8:	movw	r5, #3172	; 0xc64
   228fc:	mov	r8, #628	; 0x274
   22900:	strd	r0, [sp, #32]
   22904:	vldr	d7, [pc, #948]	; 22cc0 <readstat_parse_spss_commands+0x4b8>
   22908:	add	r3, pc, r3
   2290c:	str	fp, [sp, #40]	; 0x28
   22910:	add	r3, r3, #164	; 0xa4
   22914:	str	fp, [sp, #48]	; 0x30
   22918:	add	ip, pc, ip
   2291c:	str	fp, [sp, #52]	; 0x34
   22920:	str	r3, [sp, #64]	; 0x40
   22924:	ldr	r3, [pc, #932]	; 22cd0 <readstat_parse_spss_commands+0x4c8>
   22928:	str	ip, [sp, #68]	; 0x44
   2292c:	movw	ip, #2924	; 0xb6c
   22930:	str	fp, [sp, #76]	; 0x4c
   22934:	vstr	d7, [sp, #80]	; 0x50
   22938:	str	fp, [sp, #88]	; 0x58
   2293c:	add	r3, pc, r3
   22940:	str	fp, [sp, #92]	; 0x5c
   22944:	str	fp, [sp, #108]	; 0x6c
   22948:	str	fp, [sp, #116]	; 0x74
   2294c:	str	r3, [sp, #140]	; 0x8c
   22950:	ldr	r3, [pc, #892]	; 22cd4 <readstat_parse_spss_commands+0x4cc>
   22954:	str	r0, [sp, #120]	; 0x78
   22958:	str	r1, [sp, #124]	; 0x7c
   2295c:	str	r2, [sp, #136]	; 0x88
   22960:	add	r3, pc, r3
   22964:	str	r3, [sp, #144]	; 0x90
   22968:	mov	r3, #5
   2296c:	str	r3, [sp, #44]	; 0x2c
   22970:	mov	r3, sl
   22974:	mov	sl, r2
   22978:	mov	r9, r3
   2297c:	b	229bc <readstat_parse_spss_commands+0x1b4>
   22980:	cmp	r8, #0
   22984:	beq	22af4 <readstat_parse_spss_commands+0x2ec>
   22988:	ldr	r3, [sp, #60]	; 0x3c
   2298c:	add	sl, sl, #1
   22990:	cmp	r3, sl
   22994:	beq	2305c <readstat_parse_spss_commands+0x854>
   22998:	ldr	r3, [pc, #824]	; 22cd8 <readstat_parse_spss_commands+0x4d0>
   2299c:	lsl	r2, r8, #1
   229a0:	add	r3, pc, r3
   229a4:	sub	r0, r3, #432	; 0x1b0
   229a8:	add	r1, r3, #832	; 0x340
   229ac:	add	r3, r3, r8
   229b0:	ldrsh	ip, [r0, r2]
   229b4:	ldrsh	r5, [r1, r2]
   229b8:	ldrb	r4, [r3, #2096]	; 0x830
   229bc:	cmp	r4, #0
   229c0:	mov	r1, r5
   229c4:	ldr	r3, [sp, #64]	; 0x40
   229c8:	add	ip, r3, ip
   229cc:	bne	22f84 <readstat_parse_spss_commands+0x77c>
   229d0:	ldr	r3, [sp, #68]	; 0x44
   229d4:	add	r8, r3, r8
   229d8:	ldrb	r5, [r8, #3200]	; 0xc80
   229dc:	cmp	r5, #0
   229e0:	bne	22f2c <readstat_parse_spss_commands+0x724>
   229e4:	ldr	r3, [pc, #752]	; 22cdc <readstat_parse_spss_commands+0x4d4>
   229e8:	lsl	r0, r1, #1
   229ec:	ldr	r2, [pc, #748]	; 22ce0 <readstat_parse_spss_commands+0x4d8>
   229f0:	add	r3, pc, r3
   229f4:	add	r1, r3, r1
   229f8:	ldrb	r5, [r1, #3832]	; 0xef8
   229fc:	add	r2, pc, r2
   22a00:	ldrsh	r8, [r2, r0]
   22a04:	cmp	r5, #0
   22a08:	beq	22980 <readstat_parse_spss_commands+0x178>
   22a0c:	ldrb	r2, [r3, r5]
   22a10:	add	r3, r3, r5
   22a14:	add	r4, r3, #1
   22a18:	str	r8, [sp, #56]	; 0x38
   22a1c:	ldr	r1, [pc, #704]	; 22ce4 <readstat_parse_spss_commands+0x4dc>
   22a20:	add	r5, r2, #1
   22a24:	add	r5, r3, r5
   22a28:	add	r1, pc, r1
   22a2c:	str	r1, [sp, #104]	; 0x68
   22a30:	cmp	r5, r4
   22a34:	beq	22ae8 <readstat_parse_spss_commands+0x2e0>
   22a38:	ldrb	r3, [r4], #1
   22a3c:	cmp	r3, #35	; 0x23
   22a40:	addls	pc, pc, r3, lsl #2
   22a44:	b	22a30 <readstat_parse_spss_commands+0x228>
   22a48:	b	22f1c <readstat_parse_spss_commands+0x714>
   22a4c:	b	22ed8 <readstat_parse_spss_commands+0x6d0>
   22a50:	b	22ec0 <readstat_parse_spss_commands+0x6b8>
   22a54:	b	22eac <readstat_parse_spss_commands+0x6a4>
   22a58:	b	22e94 <readstat_parse_spss_commands+0x68c>
   22a5c:	b	22e7c <readstat_parse_spss_commands+0x674>
   22a60:	b	22e64 <readstat_parse_spss_commands+0x65c>
   22a64:	b	22e28 <readstat_parse_spss_commands+0x620>
   22a68:	b	22df8 <readstat_parse_spss_commands+0x5f0>
   22a6c:	b	22dd4 <readstat_parse_spss_commands+0x5cc>
   22a70:	b	22dcc <readstat_parse_spss_commands+0x5c4>
   22a74:	b	22dc0 <readstat_parse_spss_commands+0x5b8>
   22a78:	b	22d80 <readstat_parse_spss_commands+0x578>
   22a7c:	b	22d00 <readstat_parse_spss_commands+0x4f8>
   22a80:	b	22bf8 <readstat_parse_spss_commands+0x3f0>
   22a84:	b	22b78 <readstat_parse_spss_commands+0x370>
   22a88:	b	22b68 <readstat_parse_spss_commands+0x360>
   22a8c:	b	22b78 <readstat_parse_spss_commands+0x370>
   22a90:	b	22b68 <readstat_parse_spss_commands+0x360>
   22a94:	b	22e40 <readstat_parse_spss_commands+0x638>
   22a98:	b	22b78 <readstat_parse_spss_commands+0x370>
   22a9c:	b	22b68 <readstat_parse_spss_commands+0x360>
   22aa0:	b	22b80 <readstat_parse_spss_commands+0x378>
   22aa4:	b	22b80 <readstat_parse_spss_commands+0x378>
   22aa8:	b	22ad8 <readstat_parse_spss_commands+0x2d0>
   22aac:	b	22ad8 <readstat_parse_spss_commands+0x2d0>
   22ab0:	b	22b80 <readstat_parse_spss_commands+0x378>
   22ab4:	b	22e54 <readstat_parse_spss_commands+0x64c>
   22ab8:	b	22ad8 <readstat_parse_spss_commands+0x2d0>
   22abc:	b	22ad8 <readstat_parse_spss_commands+0x2d0>
   22ac0:	b	22b8c <readstat_parse_spss_commands+0x384>
   22ac4:	b	22b98 <readstat_parse_spss_commands+0x390>
   22ac8:	b	22bb8 <readstat_parse_spss_commands+0x3b0>
   22acc:	b	22bd0 <readstat_parse_spss_commands+0x3c8>
   22ad0:	b	22be0 <readstat_parse_spss_commands+0x3d8>
   22ad4:	b	22bec <readstat_parse_spss_commands+0x3e4>
   22ad8:	mov	r3, #5
   22adc:	cmp	r5, r4
   22ae0:	str	r3, [sp, #44]	; 0x2c
   22ae4:	bne	22a38 <readstat_parse_spss_commands+0x230>
   22ae8:	ldr	r8, [sp, #56]	; 0x38
   22aec:	cmp	r8, #0
   22af0:	bne	22988 <readstat_parse_spss_commands+0x180>
   22af4:	mov	r3, r9
   22af8:	mov	r9, sl
   22afc:	mov	sl, r3
   22b00:	ldr	r3, [sp, #60]	; 0x3c
   22b04:	cmp	r9, r3
   22b08:	beq	23100 <readstat_parse_spss_commands+0x8f8>
   22b0c:	ldr	r3, [sp, #136]	; 0x88
   22b10:	add	r4, sp, #1264	; 0x4f0
   22b14:	add	r4, r4, #8
   22b18:	ldrb	ip, [r9]
   22b1c:	mov	r0, r4
   22b20:	ldr	r2, [pc, #448]	; 22ce8 <readstat_parse_spss_commands+0x4e0>
   22b24:	sub	r1, r9, r3
   22b28:	ldr	r3, [sp, #116]	; 0x74
   22b2c:	add	r1, r1, #1
   22b30:	stm	sp, {r1, ip}
   22b34:	mov	r1, #1024	; 0x400
   22b38:	add	r2, pc, r2
   22b3c:	add	r3, r3, #1
   22b40:	bl	4254 <snprintf@plt>
   22b44:	ldr	r3, [sp, #72]	; 0x48
   22b48:	ldr	r3, [r3, #24]
   22b4c:	cmp	r3, #0
   22b50:	beq	22b60 <readstat_parse_spss_commands+0x358>
   22b54:	mov	r0, r4
   22b58:	ldr	r1, [sp, #112]	; 0x70
   22b5c:	blx	r3
   22b60:	mov	r6, #5
   22b64:	b	22c68 <readstat_parse_spss_commands+0x460>
   22b68:	ldr	r3, [sp, #40]	; 0x28
   22b6c:	sub	r3, sl, r3
   22b70:	str	r3, [sp, #48]	; 0x30
   22b74:	b	22a30 <readstat_parse_spss_commands+0x228>
   22b78:	str	sl, [sp, #40]	; 0x28
   22b7c:	b	22a30 <readstat_parse_spss_commands+0x228>
   22b80:	mov	r3, #0
   22b84:	str	r3, [sp, #44]	; 0x2c
   22b88:	b	22a30 <readstat_parse_spss_commands+0x228>
   22b8c:	mvn	r3, #0
   22b90:	str	r3, [sp, #52]	; 0x34
   22b94:	b	22a30 <readstat_parse_spss_commands+0x228>
   22b98:	ldrd	r0, [sp, #32]
   22b9c:	mov	r3, #0
   22ba0:	str	r3, [sp, #52]	; 0x34
   22ba4:	rsbs	r0, r0, #0
   22ba8:	rsc	r1, r1, #0
   22bac:	bl	250f8 <__aeabi_ul2d>
   22bb0:	strd	r0, [sp, #80]	; 0x50
   22bb4:	b	22a30 <readstat_parse_spss_commands+0x228>
   22bb8:	mov	r3, #0
   22bbc:	ldrd	r0, [sp, #32]
   22bc0:	str	r3, [sp, #52]	; 0x34
   22bc4:	bl	250f8 <__aeabi_ul2d>
   22bc8:	strd	r0, [sp, #80]	; 0x50
   22bcc:	b	22a30 <readstat_parse_spss_commands+0x228>
   22bd0:	ldrd	r2, [sp, #32]
   22bd4:	str	r2, [sp, #120]	; 0x78
   22bd8:	str	r3, [sp, #124]	; 0x7c
   22bdc:	b	22a30 <readstat_parse_spss_commands+0x228>
   22be0:	mov	r3, #2
   22be4:	str	r3, [sp, #52]	; 0x34
   22be8:	b	22a30 <readstat_parse_spss_commands+0x228>
   22bec:	mov	r3, #1
   22bf0:	str	r3, [sp, #52]	; 0x34
   22bf4:	b	22a30 <readstat_parse_spss_commands+0x228>
   22bf8:	add	r6, sp, #1264	; 0x4f0
   22bfc:	mov	r1, #256	; 0x100
   22c00:	ldr	r3, [sp, #92]	; 0x5c
   22c04:	add	r6, r6, #8
   22c08:	mov	r0, r6
   22c0c:	ldr	r2, [sp, #140]	; 0x8c
   22c10:	bl	4254 <snprintf@plt>
   22c14:	mov	r1, r6
   22c18:	ldrd	r6, [sp, #32]
   22c1c:	ldr	r3, [sp, #120]	; 0x78
   22c20:	ldr	r2, [sp, #52]	; 0x34
   22c24:	ldr	r0, [sp, #72]	; 0x48
   22c28:	str	r3, [sp]
   22c2c:	strd	r6, [sp, #8]
   22c30:	ldr	r3, [sp, #124]	; 0x7c
   22c34:	vldr	d0, [sp, #80]	; 0x50
   22c38:	str	r3, [sp, #4]
   22c3c:	add	r3, sp, #216	; 0xd8
   22c40:	str	r3, [sp, #16]
   22c44:	add	r3, sp, #248	; 0xf8
   22c48:	str	r3, [sp, #20]
   22c4c:	ldr	r3, [sp, #112]	; 0x70
   22c50:	str	r3, [sp, #24]
   22c54:	bl	4020 <submit_value_label@plt>
   22c58:	cmp	r0, #0
   22c5c:	beq	22a30 <readstat_parse_spss_commands+0x228>
   22c60:	mov	r6, r0
   22c64:	mov	sl, r9
   22c68:	ldr	r3, [sp, #72]	; 0x48
   22c6c:	ldr	r3, [r3, #32]
   22c70:	ldr	r2, [r3, #4]
   22c74:	ldr	r0, [r3, #20]
   22c78:	blx	r2
   22c7c:	ldr	r0, [sp, #132]	; 0x84
   22c80:	bl	3e94 <free@plt>
   22c84:	ldr	r3, [sp, #148]	; 0x94
   22c88:	mov	r0, sl
   22c8c:	mov	sl, #0
   22c90:	cmp	r3, #0
   22c94:	strne	r6, [r3]
   22c98:	bl	3f90 <readstat_schema_free@plt>
   22c9c:	mov	r0, sl
   22ca0:	add	sp, sp, #2288	; 0x8f0
   22ca4:	add	sp, sp, #12
   22ca8:	ldrd	r4, [sp]
   22cac:	ldrd	r6, [sp, #8]
   22cb0:	ldrd	r8, [sp, #16]
   22cb4:	ldrd	sl, [sp, #24]
   22cb8:	add	sp, sp, #32
   22cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   22cc0:	.word	0x00000000
   22cc4:	.word	0x7ff80000
   22cc8:	.word	0x0000cc14
   22ccc:	.word	0x0000cc04
   22cd0:	.word	0x00003af4
   22cd4:	.word	0x00003ad0
   22cd8:	.word	0x0000eb74
   22cdc:	.word	0x0000cb2c
   22ce0:	.word	0x0000f5c0
   22ce4:	.word	0x00010f40
   22ce8:	.word	0x00010e8c
   22cec:	.word	0x00010bd4
   22cf0:	.word	0x0000c51c
   22cf4:	.word	0x0000e4ac
   22cf8:	.word	0x0000c4a8
   22cfc:	.word	0x0001086c
   22d00:	ldr	ip, [sp, #92]	; 0x5c
   22d04:	add	r8, sp, #1264	; 0x4f0
   22d08:	mov	r1, #256	; 0x100
   22d0c:	add	r8, r8, #8
   22d10:	mov	r0, r8
   22d14:	ldr	r2, [sp, #144]	; 0x90
   22d18:	mov	r3, ip
   22d1c:	add	ip, ip, #1
   22d20:	str	ip, [sp, #92]	; 0x5c
   22d24:	bl	4254 <snprintf@plt>
   22d28:	cmp	fp, #0
   22d2c:	beq	22a30 <readstat_parse_spss_commands+0x228>
   22d30:	ldr	r7, [sp, #56]	; 0x38
   22d34:	add	r3, sp, #152	; 0x98
   22d38:	mov	r6, #0
   22d3c:	str	sl, [sp, #128]	; 0x80
   22d40:	mov	sl, r3
   22d44:	mov	r1, sl
   22d48:	mov	r0, r9
   22d4c:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   22d50:	add	r0, r0, #2160	; 0x870
   22d54:	add	r6, r6, #1
   22d58:	add	r0, r0, #8
   22d5c:	mov	r3, #256	; 0x100
   22d60:	mov	r2, r8
   22d64:	mov	r1, #32
   22d68:	bl	3e40 <readstat_copy@plt>
   22d6c:	cmp	fp, r6
   22d70:	bne	22d44 <readstat_parse_spss_commands+0x53c>
   22d74:	str	r7, [sp, #56]	; 0x38
   22d78:	ldr	sl, [sp, #128]	; 0x80
   22d7c:	b	22a30 <readstat_parse_spss_commands+0x228>
   22d80:	add	r6, sp, #184	; 0xb8
   22d84:	ldr	r1, [sp, #104]	; 0x68
   22d88:	mov	r0, r6
   22d8c:	bl	3ffc <strcasecmp@plt>
   22d90:	cmp	r0, #0
   22d94:	ldr	r1, [pc, #-176]	; 22cec <readstat_parse_spss_commands+0x4e4>
   22d98:	mov	r0, r6
   22d9c:	ldreq	r3, [sp, #32]
   22da0:	add	r1, pc, r1
   22da4:	streq	r3, [r9, #264]	; 0x108
   22da8:	bl	3ffc <strcasecmp@plt>
   22dac:	cmp	r0, #0
   22db0:	bne	22a30 <readstat_parse_spss_commands+0x228>
   22db4:	ldrb	r3, [sp, #248]	; 0xf8
   22db8:	strb	r3, [r9, #272]	; 0x110
   22dbc:	b	22a30 <readstat_parse_spss_commands+0x228>
   22dc0:	cmp	fp, #1024	; 0x400
   22dc4:	addlt	fp, fp, #1
   22dc8:	b	22a30 <readstat_parse_spss_commands+0x228>
   22dcc:	mov	fp, #0
   22dd0:	b	22a30 <readstat_parse_spss_commands+0x228>
   22dd4:	add	r1, sp, #152	; 0x98
   22dd8:	mov	r0, r9
   22ddc:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   22de0:	mov	r3, #1024	; 0x400
   22de4:	add	r0, r0, #580	; 0x244
   22de8:	mov	r1, r3
   22dec:	add	r2, sp, #248	; 0xf8
   22df0:	bl	3e40 <readstat_copy@plt>
   22df4:	b	22a30 <readstat_parse_spss_commands+0x228>
   22df8:	add	r1, sp, #152	; 0x98
   22dfc:	mov	r0, r9
   22e00:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   22e04:	ldr	r3, [sp, #108]	; 0x6c
   22e08:	str	r3, [r0]
   22e0c:	ldr	r3, [sp, #88]	; 0x58
   22e10:	str	r3, [r0, #4]
   22e14:	ldr	r3, [sp, #76]	; 0x4c
   22e18:	str	r3, [r0, #8]
   22e1c:	ldr	r3, [sp, #44]	; 0x2c
   22e20:	str	r3, [r0, #16]
   22e24:	b	22a30 <readstat_parse_spss_commands+0x228>
   22e28:	mov	r1, #32
   22e2c:	add	r0, sp, #184	; 0xb8
   22e30:	ldr	r2, [sp, #40]	; 0x28
   22e34:	ldr	r3, [sp, #48]	; 0x30
   22e38:	bl	3e40 <readstat_copy@plt>
   22e3c:	b	22a30 <readstat_parse_spss_commands+0x228>
   22e40:	ldr	r3, [sp, #116]	; 0x74
   22e44:	str	sl, [sp, #136]	; 0x88
   22e48:	add	r3, r3, #1
   22e4c:	str	r3, [sp, #116]	; 0x74
   22e50:	b	22a30 <readstat_parse_spss_commands+0x228>
   22e54:	ldr	r3, [sp, #32]
   22e58:	sub	r3, r3, #1
   22e5c:	str	r3, [sp, #108]	; 0x6c
   22e60:	b	22a30 <readstat_parse_spss_commands+0x228>
   22e64:	mov	r1, #32
   22e68:	add	r0, sp, #152	; 0x98
   22e6c:	ldr	r2, [sp, #40]	; 0x28
   22e70:	ldr	r3, [sp, #48]	; 0x30
   22e74:	bl	3e40 <readstat_copy@plt>
   22e78:	b	22a30 <readstat_parse_spss_commands+0x228>
   22e7c:	mov	r1, #32
   22e80:	add	r0, sp, #216	; 0xd8
   22e84:	ldr	r2, [sp, #40]	; 0x28
   22e88:	ldr	r3, [sp, #48]	; 0x30
   22e8c:	bl	4008 <readstat_copy_quoted@plt>
   22e90:	b	22a30 <readstat_parse_spss_commands+0x228>
   22e94:	mov	r1, #1024	; 0x400
   22e98:	add	r0, sp, #248	; 0xf8
   22e9c:	ldr	r2, [sp, #40]	; 0x28
   22ea0:	ldr	r3, [sp, #48]	; 0x30
   22ea4:	bl	4008 <readstat_copy_quoted@plt>
   22ea8:	b	22a30 <readstat_parse_spss_commands+0x228>
   22eac:	ldr	r3, [sp, #32]
   22eb0:	ldr	r2, [sp, #88]	; 0x58
   22eb4:	sub	r3, r3, r2
   22eb8:	str	r3, [sp, #76]	; 0x4c
   22ebc:	b	22a30 <readstat_parse_spss_commands+0x228>
   22ec0:	ldr	r3, [sp, #32]
   22ec4:	sub	r3, r3, #1
   22ec8:	str	r3, [sp, #88]	; 0x58
   22ecc:	mov	r3, #1
   22ed0:	str	r3, [sp, #76]	; 0x4c
   22ed4:	b	22a30 <readstat_parse_spss_commands+0x228>
   22ed8:	ldrd	r6, [sp, #32]
   22edc:	ldrb	r1, [sl]
   22ee0:	lsl	r2, r7, #2
   22ee4:	lsl	r3, r6, #2
   22ee8:	orr	r2, r2, r6, lsr #30
   22eec:	adds	r3, r3, r6
   22ef0:	adc	r2, r2, r7
   22ef4:	adds	r3, r3, r3
   22ef8:	str	r3, [sp, #96]	; 0x60
   22efc:	adc	r3, r2, r2
   22f00:	str	r3, [sp, #100]	; 0x64
   22f04:	sub	r3, r1, #48	; 0x30
   22f08:	ldrd	r0, [sp, #96]	; 0x60
   22f0c:	adds	r0, r0, r3
   22f10:	adc	r1, r1, r3, asr #31
   22f14:	strd	r0, [sp, #32]
   22f18:	b	22a30 <readstat_parse_spss_commands+0x228>
   22f1c:	mov	r2, #0
   22f20:	mov	r3, #0
   22f24:	strd	r2, [sp, #32]
   22f28:	b	22a30 <readstat_parse_spss_commands+0x228>
   22f2c:	add	r0, ip, r5, lsl #1
   22f30:	sub	r0, r0, #2
   22f34:	cmp	ip, r0
   22f38:	bhi	22f7c <readstat_parse_spss_commands+0x774>
   22f3c:	ldrb	r4, [sl]
   22f40:	mov	r2, ip
   22f44:	sub	r3, r0, r2
   22f48:	asr	r3, r3, #1
   22f4c:	bic	r3, r3, #1
   22f50:	ldrb	lr, [r2, r3]
   22f54:	add	r3, r2, r3
   22f58:	cmp	lr, r4
   22f5c:	subhi	r0, r3, #2
   22f60:	bhi	22f74 <readstat_parse_spss_commands+0x76c>
   22f64:	ldrb	lr, [r3, #1]
   22f68:	add	r2, r3, #2
   22f6c:	cmp	lr, r4
   22f70:	bcs	22fcc <readstat_parse_spss_commands+0x7c4>
   22f74:	cmp	r0, r2
   22f78:	bcs	22f44 <readstat_parse_spss_commands+0x73c>
   22f7c:	add	r1, r1, r5
   22f80:	b	229e4 <readstat_parse_spss_commands+0x1dc>
   22f84:	sub	r1, r4, #1
   22f88:	adds	r1, ip, r1
   22f8c:	bcs	22fc0 <readstat_parse_spss_commands+0x7b8>
   22f90:	ldrb	lr, [sl]
   22f94:	mov	r2, ip
   22f98:	sub	r3, r1, r2
   22f9c:	ldrb	r0, [r2, r3, asr #1]
   22fa0:	add	r3, r2, r3, asr #1
   22fa4:	cmp	lr, r0
   22fa8:	subcc	r1, r3, #1
   22fac:	bcc	22fb8 <readstat_parse_spss_commands+0x7b0>
   22fb0:	bls	22fd8 <readstat_parse_spss_commands+0x7d0>
   22fb4:	add	r2, r3, #1
   22fb8:	cmp	r2, r1
   22fbc:	bls	22f98 <readstat_parse_spss_commands+0x790>
   22fc0:	add	ip, ip, r4
   22fc4:	add	r1, r5, r4
   22fc8:	b	229d0 <readstat_parse_spss_commands+0x1c8>
   22fcc:	sub	r3, r3, ip
   22fd0:	add	r1, r1, r3, asr #1
   22fd4:	b	229e4 <readstat_parse_spss_commands+0x1dc>
   22fd8:	sub	r3, r3, ip
   22fdc:	add	r1, r5, r3
   22fe0:	b	229e4 <readstat_parse_spss_commands+0x1dc>
   22fe4:	ldr	r6, [pc, #-764]	; 22cf0 <readstat_parse_spss_commands+0x4e8>
   22fe8:	mov	r3, #0
   22fec:	mov	r2, #5
   22ff0:	mov	r8, #628	; 0x274
   22ff4:	str	r2, [sp, #44]	; 0x2c
   22ff8:	str	r3, [sp, #76]	; 0x4c
   22ffc:	str	r3, [sp, #88]	; 0x58
   23000:	add	r6, pc, r6
   23004:	str	r3, [sp, #108]	; 0x6c
   23008:	add	r3, r3, #1
   2300c:	add	r5, r6, #1
   23010:	add	r4, sp, #152	; 0x98
   23014:	add	r6, r6, r3
   23018:	cmp	r6, r5
   2301c:	beq	230bc <readstat_parse_spss_commands+0x8b4>
   23020:	ldrb	r3, [r5], #1
   23024:	cmp	r3, #8
   23028:	bne	23018 <readstat_parse_spss_commands+0x810>
   2302c:	mov	r1, r4
   23030:	mov	r0, sl
   23034:	bl	40a4 <readstat_schema_find_or_create_entry@plt>
   23038:	ldr	r3, [sp, #108]	; 0x6c
   2303c:	str	r3, [r0]
   23040:	ldr	r3, [sp, #88]	; 0x58
   23044:	str	r3, [r0, #4]
   23048:	ldr	r3, [sp, #76]	; 0x4c
   2304c:	str	r3, [r0, #8]
   23050:	ldr	r3, [sp, #44]	; 0x2c
   23054:	str	r3, [r0, #16]
   23058:	b	23018 <readstat_parse_spss_commands+0x810>
   2305c:	ldr	r3, [pc, #-880]	; 22cf4 <readstat_parse_spss_commands+0x4ec>
   23060:	mov	sl, r9
   23064:	ldr	r2, [pc, #-884]	; 22cf8 <readstat_parse_spss_commands+0x4f0>
   23068:	add	r3, pc, r3
   2306c:	add	r3, r3, r8
   23070:	ldrb	r1, [r3, #-1064]	; 0xfffffbd8
   23074:	add	r2, pc, r2
   23078:	add	r6, r2, r1
   2307c:	ldrb	r3, [r2, r1]
   23080:	b	23008 <readstat_parse_spss_commands+0x800>
   23084:	mov	r3, #0
   23088:	mov	r6, #15
   2308c:	mov	sl, r3
   23090:	str	r3, [sp, #132]	; 0x84
   23094:	b	22c68 <readstat_parse_spss_commands+0x460>
   23098:	mov	r6, #3
   2309c:	b	22c68 <readstat_parse_spss_commands+0x460>
   230a0:	ldr	r2, [sp, #148]	; 0x94
   230a4:	cmp	r2, #0
   230a8:	beq	23120 <readstat_parse_spss_commands+0x918>
   230ac:	mov	r3, #1
   230b0:	mov	sl, #0
   230b4:	str	r3, [r2]
   230b8:	b	22c9c <readstat_parse_spss_commands+0x494>
   230bc:	cmp	r8, #628	; 0x274
   230c0:	blt	23100 <readstat_parse_spss_commands+0x8f8>
   230c4:	ldr	r4, [sp, #72]	; 0x48
   230c8:	mov	r1, sl
   230cc:	ldr	r2, [sp, #112]	; 0x70
   230d0:	mov	r0, r4
   230d4:	bl	3f0c <submit_columns@plt>
   230d8:	ldr	r3, [r4, #32]
   230dc:	mov	r6, r0
   230e0:	ldr	r2, [r3, #4]
   230e4:	ldr	r0, [r3, #20]
   230e8:	blx	r2
   230ec:	ldr	r0, [sp, #132]	; 0x84
   230f0:	bl	3e94 <free@plt>
   230f4:	cmp	r6, #0
   230f8:	beq	22c9c <readstat_parse_spss_commands+0x494>
   230fc:	b	22c84 <readstat_parse_spss_commands+0x47c>
   23100:	ldr	r1, [pc, #-1036]	; 22cfc <readstat_parse_spss_commands+0x4f4>
   23104:	add	r4, sp, #1264	; 0x4f0
   23108:	mov	r2, #67	; 0x43
   2310c:	add	r4, r4, #8
   23110:	mov	r0, r4
   23114:	add	r1, pc, r1
   23118:	bl	3ef4 <memcpy@plt>
   2311c:	b	22b44 <readstat_parse_spss_commands+0x33c>
   23120:	ldr	sl, [sp, #148]	; 0x94
   23124:	b	22c9c <readstat_parse_spss_commands+0x494>

00023128 <readstat_schema_free>:
   23128:	str	r4, [sp, #-8]!
   2312c:	subs	r4, r0, #0
   23130:	str	lr, [sp, #4]
   23134:	beq	23154 <readstat_schema_free+0x2c>
   23138:	ldr	r0, [r4, #276]	; 0x114
   2313c:	bl	3e94 <free@plt>
   23140:	mov	r0, r4
   23144:	ldr	r4, [sp]
   23148:	ldr	lr, [sp, #4]
   2314c:	add	sp, sp, #8
   23150:	b	3e94 <free@plt>
   23154:	ldr	r4, [sp]
   23158:	add	sp, sp, #4
   2315c:	pop	{pc}		; (ldr pc, [sp], #4)

00023160 <readstat_schema_find_or_create_entry>:
   23160:	strd	r4, [sp, #-32]!	; 0xffffffe0
   23164:	strd	r6, [sp, #8]
   23168:	ldr	r7, [r0, #268]	; 0x10c
   2316c:	strd	r8, [sp, #16]
   23170:	mov	r9, r0
   23174:	mov	r8, r1
   23178:	str	sl, [sp, #24]
   2317c:	str	lr, [sp, #28]
   23180:	ldr	sl, [r0, #276]	; 0x114
   23184:	cmp	r7, #0
   23188:	ble	231e4 <readstat_schema_find_or_create_entry+0x84>
   2318c:	mov	r4, sl
   23190:	mov	r5, #0
   23194:	b	231a4 <readstat_schema_find_or_create_entry+0x44>
   23198:	cmp	r7, r5
   2319c:	add	r4, r4, #2208	; 0x8a0
   231a0:	beq	231e4 <readstat_schema_find_or_create_entry+0x84>
   231a4:	mov	r1, r8
   231a8:	add	r0, r4, #24
   231ac:	bl	3dd4 <strcmp@plt>
   231b0:	cmp	r0, #0
   231b4:	add	r5, r5, #1
   231b8:	mov	r6, r4
   231bc:	bne	23198 <readstat_schema_find_or_create_entry+0x38>
   231c0:	cmp	r4, #0
   231c4:	beq	231e4 <readstat_schema_find_or_create_entry+0x84>
   231c8:	mov	r0, r6
   231cc:	ldrd	r4, [sp]
   231d0:	ldrd	r6, [sp, #8]
   231d4:	ldrd	r8, [sp, #16]
   231d8:	ldr	sl, [sp, #24]
   231dc:	add	sp, sp, #28
   231e0:	pop	{pc}		; (ldr pc, [sp], #4)
   231e4:	mov	r4, #2208	; 0x8a0
   231e8:	mov	r0, sl
   231ec:	mla	r1, r7, r4, r4
   231f0:	bl	3fcc <realloc@plt>
   231f4:	ldr	r6, [r9, #268]	; 0x10c
   231f8:	mov	r2, r4
   231fc:	mov	r1, #0
   23200:	str	r0, [r9, #276]	; 0x114
   23204:	mla	r6, r4, r6, r0
   23208:	mov	r0, r6
   2320c:	bl	4278 <memset@plt>
   23210:	mov	r0, r8
   23214:	bl	41d0 <strlen@plt>
   23218:	mov	r3, r0
   2321c:	mov	r2, r8
   23220:	add	r0, r6, #24
   23224:	mov	r1, #300	; 0x12c
   23228:	bl	3e40 <readstat_copy@plt>
   2322c:	mov	r3, #46	; 0x2e
   23230:	strb	r3, [r6, #2200]	; 0x898
   23234:	ldr	r3, [r9, #268]	; 0x10c
   23238:	add	r2, r3, #1
   2323c:	str	r2, [r9, #268]	; 0x10c
   23240:	str	r3, [r6, #20]
   23244:	b	231c8 <readstat_schema_find_or_create_entry+0x68>

00023248 <readstat_parse_stata_dictionary>:
   23248:	ldr	ip, [r0, #32]
   2324c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23250:	strd	r6, [sp, #8]
   23254:	strd	r8, [sp, #16]
   23258:	strd	sl, [sp, #24]
   2325c:	str	lr, [sp, #32]
   23260:	sub	sp, sp, #3312	; 0xcf0
   23264:	sub	sp, sp, #12
   23268:	str	r0, [sp, #52]	; 0x34
   2326c:	mov	r0, r1
   23270:	ldr	r1, [ip, #20]
   23274:	str	r3, [sp, #84]	; 0x54
   23278:	ldr	r3, [ip]
   2327c:	str	r2, [sp, #72]	; 0x48
   23280:	blx	r3
   23284:	cmn	r0, #1
   23288:	beq	23900 <readstat_parse_stata_dictionary+0x6b8>
   2328c:	ldr	r6, [sp, #52]	; 0x34
   23290:	mov	r1, #2
   23294:	mov	r0, #0
   23298:	ldr	r3, [r6, #32]
   2329c:	ldr	r4, [r3, #8]
   232a0:	ldr	r2, [r3, #20]
   232a4:	blx	r4
   232a8:	cmn	r0, #1
   232ac:	mov	r4, r0
   232b0:	beq	238a0 <readstat_parse_stata_dictionary+0x658>
   232b4:	ldr	r3, [r6, #32]
   232b8:	mov	r1, #0
   232bc:	mov	r0, r1
   232c0:	ldr	r5, [r3, #8]
   232c4:	ldr	r2, [r3, #20]
   232c8:	blx	r5
   232cc:	mov	r0, r4
   232d0:	bl	40e0 <malloc@plt>
   232d4:	ldr	r3, [r6, #32]
   232d8:	add	r7, r0, r4
   232dc:	mov	r1, r4
   232e0:	mov	r5, r0
   232e4:	str	r7, [sp, #24]
   232e8:	str	r0, [sp, #76]	; 0x4c
   232ec:	ldr	r4, [r3, #12]
   232f0:	ldr	r2, [r3, #20]
   232f4:	blx	r4
   232f8:	mov	r1, #280	; 0x118
   232fc:	mov	r0, #1
   23300:	bl	3d2c <calloc@plt>
   23304:	subs	r9, r0, #0
   23308:	beq	238b4 <readstat_parse_stata_dictionary+0x66c>
   2330c:	mov	r6, #1
   23310:	cmp	r5, r7
   23314:	str	r6, [r9, #256]	; 0x100
   23318:	beq	237ec <readstat_parse_stata_dictionary+0x5a4>
   2331c:	ldr	r2, [pc, #1544]	; 2392c <readstat_parse_stata_dictionary+0x6e4>
   23320:	mov	r4, #0
   23324:	mov	r5, #4
   23328:	mov	ip, r4
   2332c:	mov	sl, r4
   23330:	ldr	r3, [pc, #1528]	; 23930 <readstat_parse_stata_dictionary+0x6e8>
   23334:	str	r4, [sp, #12]
   23338:	ldr	fp, [pc, #1524]	; 23934 <readstat_parse_stata_dictionary+0x6ec>
   2333c:	add	r2, pc, r2
   23340:	str	r4, [sp, #16]
   23344:	ldr	r7, [sp, #76]	; 0x4c
   23348:	add	r3, pc, r3
   2334c:	str	r2, [sp, #36]	; 0x24
   23350:	add	r2, r3, #2688	; 0xa80
   23354:	add	fp, pc, fp
   23358:	str	r3, [sp, #28]
   2335c:	str	r3, [sp, #32]
   23360:	add	r3, r2, #4
   23364:	str	r4, [sp, #44]	; 0x2c
   23368:	str	r4, [sp, #48]	; 0x30
   2336c:	str	r3, [sp, #68]	; 0x44
   23370:	add	r3, fp, #2800	; 0xaf0
   23374:	add	r3, r3, #12
   23378:	str	r4, [sp, #60]	; 0x3c
   2337c:	str	r4, [sp, #64]	; 0x40
   23380:	str	r3, [sp, #40]	; 0x28
   23384:	mov	r3, fp
   23388:	mov	fp, r4
   2338c:	mov	r8, r3
   23390:	str	r7, [sp, #80]	; 0x50
   23394:	b	233d0 <readstat_parse_stata_dictionary+0x188>
   23398:	cmp	r6, #0
   2339c:	beq	238bc <readstat_parse_stata_dictionary+0x674>
   233a0:	ldr	r3, [sp, #24]
   233a4:	add	r7, r7, #1
   233a8:	cmp	r3, r7
   233ac:	beq	237a4 <readstat_parse_stata_dictionary+0x55c>
   233b0:	lsl	r3, r6, #1
   233b4:	add	r2, r8, #3120	; 0xc30
   233b8:	add	r1, r8, r6
   233bc:	add	r2, r2, #8
   233c0:	ldrb	r5, [r1, #3444]	; 0xd74
   233c4:	ldrsh	r4, [r2, r3]
   233c8:	ldr	r2, [sp, #40]	; 0x28
   233cc:	ldrsh	ip, [r2, r3]
   233d0:	cmp	r5, #0
   233d4:	mov	r1, r4
   233d8:	ldr	r3, [sp, #28]
   233dc:	add	ip, r3, ip
   233e0:	bne	23744 <readstat_parse_stata_dictionary+0x4fc>
   233e4:	ldr	r3, [sp, #36]	; 0x24
   233e8:	add	r6, r3, r6
   233ec:	ldrb	r5, [r6, #828]	; 0x33c
   233f0:	cmp	r5, #0
   233f4:	bne	236ec <readstat_parse_stata_dictionary+0x4a4>
   233f8:	ldr	r3, [sp, #32]
   233fc:	add	r1, r3, r1
   23400:	ldrb	r3, [r1, #1840]	; 0x730
   23404:	ldrb	r6, [r1, #988]	; 0x3dc
   23408:	cmp	r3, #0
   2340c:	beq	23398 <readstat_parse_stata_dictionary+0x150>
   23410:	ldr	r2, [sp, #68]	; 0x44
   23414:	ldrb	r5, [r2, r3]
   23418:	add	r3, r2, r3
   2341c:	add	r2, sp, #1104	; 0x450
   23420:	add	r2, r2, #8
   23424:	add	r4, r3, #1
   23428:	str	r2, [sp, #20]
   2342c:	add	r2, r2, #580	; 0x244
   23430:	add	r5, r5, #1
   23434:	str	r2, [sp, #56]	; 0x38
   23438:	add	r5, r3, r5
   2343c:	cmp	r4, r5
   23440:	beq	23398 <readstat_parse_stata_dictionary+0x150>
   23444:	ldrb	r3, [r4], #1
   23448:	cmp	r3, #28
   2344c:	addls	pc, pc, r3, lsl #2
   23450:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23454:	b	23648 <readstat_parse_stata_dictionary+0x400>
   23458:	b	23634 <readstat_parse_stata_dictionary+0x3ec>
   2345c:	b	23608 <readstat_parse_stata_dictionary+0x3c0>
   23460:	b	23558 <readstat_parse_stata_dictionary+0x310>
   23464:	b	23540 <readstat_parse_stata_dictionary+0x2f8>
   23468:	b	23524 <readstat_parse_stata_dictionary+0x2dc>
   2346c:	b	2350c <readstat_parse_stata_dictionary+0x2c4>
   23470:	b	234d4 <readstat_parse_stata_dictionary+0x28c>
   23474:	b	234c8 <readstat_parse_stata_dictionary+0x280>
   23478:	b	234d4 <readstat_parse_stata_dictionary+0x28c>
   2347c:	b	234c8 <readstat_parse_stata_dictionary+0x280>
   23480:	b	234d4 <readstat_parse_stata_dictionary+0x28c>
   23484:	b	234c8 <readstat_parse_stata_dictionary+0x280>
   23488:	b	236d8 <readstat_parse_stata_dictionary+0x490>
   2348c:	b	236d0 <readstat_parse_stata_dictionary+0x488>
   23490:	b	236c4 <readstat_parse_stata_dictionary+0x47c>
   23494:	b	236b8 <readstat_parse_stata_dictionary+0x470>
   23498:	b	236a8 <readstat_parse_stata_dictionary+0x460>
   2349c:	b	23694 <readstat_parse_stata_dictionary+0x44c>
   234a0:	b	2368c <readstat_parse_stata_dictionary+0x444>
   234a4:	b	23680 <readstat_parse_stata_dictionary+0x438>
   234a8:	b	23674 <readstat_parse_stata_dictionary+0x42c>
   234ac:	b	23668 <readstat_parse_stata_dictionary+0x420>
   234b0:	b	2365c <readstat_parse_stata_dictionary+0x414>
   234b4:	b	23650 <readstat_parse_stata_dictionary+0x408>
   234b8:	b	234dc <readstat_parse_stata_dictionary+0x294>
   234bc:	b	234e8 <readstat_parse_stata_dictionary+0x2a0>
   234c0:	b	234f8 <readstat_parse_stata_dictionary+0x2b0>
   234c4:	b	23500 <readstat_parse_stata_dictionary+0x2b8>
   234c8:	sub	r3, r7, fp
   234cc:	str	r3, [sp, #16]
   234d0:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   234d4:	mov	fp, r7
   234d8:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   234dc:	mov	r3, #5
   234e0:	str	r3, [sp, #1128]	; 0x468
   234e4:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   234e8:	mov	r3, #0
   234ec:	str	r3, [sp, #1128]	; 0x468
   234f0:	str	sl, [sp, #2724]	; 0xaa4
   234f4:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   234f8:	str	sl, [sp, #1120]	; 0x460
   234fc:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23500:	mov	r3, #44	; 0x2c
   23504:	strb	r3, [sp, #3312]	; 0xcf0
   23508:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   2350c:	mov	r2, fp
   23510:	mov	r1, #1024	; 0x400
   23514:	ldr	r3, [sp, #16]
   23518:	ldr	r0, [sp, #56]	; 0x38
   2351c:	bl	3e40 <readstat_copy@plt>
   23520:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23524:	mov	r2, fp
   23528:	mov	r1, #300	; 0x12c
   2352c:	ldr	r3, [sp, #16]
   23530:	ldr	r0, [sp, #20]
   23534:	add	r0, r0, #24
   23538:	bl	3e40 <readstat_copy@plt>
   2353c:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23540:	mov	r2, fp
   23544:	mov	r1, #255	; 0xff
   23548:	ldr	r3, [sp, #16]
   2354c:	mov	r0, r9
   23550:	bl	3e40 <readstat_copy@plt>
   23554:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23558:	ldrd	r2, [sp, #48]	; 0x30
   2355c:	ldr	ip, [r3, #8]
   23560:	str	r2, [sp, #1116]	; 0x45c
   23564:	ldr	r3, [sp, #12]
   23568:	cmp	ip, #0
   2356c:	str	r3, [sp, #1112]	; 0x458
   23570:	ldr	r3, [sp, #1120]	; 0x460
   23574:	add	r3, r2, r3
   23578:	str	r3, [sp, #48]	; 0x30
   2357c:	beq	235b8 <readstat_parse_stata_dictionary+0x370>
   23580:	mov	r2, #0
   23584:	ldr	r0, [sp, #44]	; 0x2c
   23588:	ldr	r1, [sp, #60]	; 0x3c
   2358c:	ldr	r3, [sp, #72]	; 0x48
   23590:	str	r1, [sp, #3276]	; 0xccc
   23594:	add	r1, sp, #1120	; 0x460
   23598:	add	r1, r1, #8
   2359c:	blx	ip
   235a0:	cmp	r0, #1
   235a4:	beq	2391c <readstat_parse_stata_dictionary+0x6d4>
   235a8:	cmp	r0, #2
   235ac:	moveq	r3, #1
   235b0:	streq	r3, [sp, #1124]	; 0x464
   235b4:	beq	235c4 <readstat_parse_stata_dictionary+0x37c>
   235b8:	ldr	r3, [sp, #60]	; 0x3c
   235bc:	add	r3, r3, #1
   235c0:	str	r3, [sp, #60]	; 0x3c
   235c4:	ldr	r3, [sp, #44]	; 0x2c
   235c8:	mov	r2, #2208	; 0x8a0
   235cc:	ldr	r1, [r9, #268]	; 0x10c
   235d0:	ldr	r0, [r9, #276]	; 0x114
   235d4:	add	r3, r3, #1
   235d8:	mla	r1, r1, r2, r2
   235dc:	str	r3, [sp, #44]	; 0x2c
   235e0:	bl	3fcc <realloc@plt>
   235e4:	ldr	r3, [r9, #268]	; 0x10c
   235e8:	mov	r2, #2208	; 0x8a0
   235ec:	str	r0, [r9, #276]	; 0x114
   235f0:	ldr	r1, [sp, #20]
   235f4:	mla	r0, r2, r3, r0
   235f8:	add	r3, r3, #1
   235fc:	str	r3, [r9, #268]	; 0x10c
   23600:	bl	3ef4 <memcpy@plt>
   23604:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23608:	mov	r2, #2208	; 0x8a0
   2360c:	mov	r1, #0
   23610:	ldr	r0, [sp, #20]
   23614:	bl	4278 <memset@plt>
   23618:	ldr	r1, [sp, #44]	; 0x2c
   2361c:	mov	r3, #46	; 0x2e
   23620:	mov	r2, #5
   23624:	str	r2, [sp, #1128]	; 0x468
   23628:	str	r1, [sp, #1132]	; 0x46c
   2362c:	strb	r3, [sp, #3312]	; 0xcf0
   23630:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23634:	ldrb	r3, [r7]
   23638:	add	sl, sl, sl, lsl #2
   2363c:	sub	r3, r3, #48	; 0x30
   23640:	add	sl, r3, sl, lsl #1
   23644:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23648:	mov	sl, #0
   2364c:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23650:	mov	r3, #4
   23654:	str	r3, [sp, #1128]	; 0x468
   23658:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   2365c:	mov	r3, #3
   23660:	str	r3, [sp, #1128]	; 0x468
   23664:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23668:	mov	r3, #2
   2366c:	str	r3, [sp, #1128]	; 0x468
   23670:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23674:	mov	r3, #1
   23678:	str	r3, [sp, #1128]	; 0x468
   2367c:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23680:	sub	r3, sl, #1
   23684:	str	r3, [r9, #264]	; 0x108
   23688:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   2368c:	str	sl, [r9, #260]	; 0x104
   23690:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   23694:	ldr	r2, [sp, #12]
   23698:	sub	r3, sl, #1
   2369c:	add	r3, r2, r3
   236a0:	str	r3, [sp, #12]
   236a4:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   236a8:	ldr	r3, [sp, #12]
   236ac:	add	r3, r3, #1
   236b0:	str	r3, [sp, #12]
   236b4:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   236b8:	sub	r3, sl, #1
   236bc:	str	r3, [sp, #48]	; 0x30
   236c0:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   236c4:	sub	r3, sl, #1
   236c8:	str	r3, [sp, #12]
   236cc:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   236d0:	str	sl, [r9, #256]	; 0x100
   236d4:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   236d8:	ldr	r3, [sp, #64]	; 0x40
   236dc:	str	r7, [sp, #80]	; 0x50
   236e0:	add	r3, r3, #1
   236e4:	str	r3, [sp, #64]	; 0x40
   236e8:	b	2343c <readstat_parse_stata_dictionary+0x1f4>
   236ec:	add	r0, ip, r5, lsl #1
   236f0:	sub	r0, r0, #2
   236f4:	cmp	ip, r0
   236f8:	bhi	2373c <readstat_parse_stata_dictionary+0x4f4>
   236fc:	ldrb	r4, [r7]
   23700:	mov	r2, ip
   23704:	sub	r3, r0, r2
   23708:	asr	r3, r3, #1
   2370c:	bic	r3, r3, #1
   23710:	ldrb	lr, [r2, r3]
   23714:	add	r3, r2, r3
   23718:	cmp	lr, r4
   2371c:	subhi	r0, r3, #2
   23720:	bhi	23734 <readstat_parse_stata_dictionary+0x4ec>
   23724:	ldrb	lr, [r3, #1]
   23728:	add	r2, r3, #2
   2372c:	cmp	lr, r4
   23730:	bcs	2378c <readstat_parse_stata_dictionary+0x544>
   23734:	cmp	r2, r0
   23738:	bls	23704 <readstat_parse_stata_dictionary+0x4bc>
   2373c:	add	r1, r1, r5
   23740:	b	233f8 <readstat_parse_stata_dictionary+0x1b0>
   23744:	sub	r1, r5, #1
   23748:	adds	r1, ip, r1
   2374c:	bcs	23780 <readstat_parse_stata_dictionary+0x538>
   23750:	ldrb	lr, [r7]
   23754:	mov	r2, ip
   23758:	sub	r3, r1, r2
   2375c:	ldrb	r0, [r2, r3, asr #1]
   23760:	add	r3, r2, r3, asr #1
   23764:	cmp	lr, r0
   23768:	subcc	r1, r3, #1
   2376c:	bcc	23778 <readstat_parse_stata_dictionary+0x530>
   23770:	bls	23798 <readstat_parse_stata_dictionary+0x550>
   23774:	add	r2, r3, #1
   23778:	cmp	r2, r1
   2377c:	bls	23758 <readstat_parse_stata_dictionary+0x510>
   23780:	add	ip, ip, r5
   23784:	add	r1, r4, r5
   23788:	b	233e4 <readstat_parse_stata_dictionary+0x19c>
   2378c:	sub	r3, r3, ip
   23790:	add	r1, r1, r3, asr #1
   23794:	b	233f8 <readstat_parse_stata_dictionary+0x1b0>
   23798:	sub	r3, r3, ip
   2379c:	add	r1, r4, r3
   237a0:	b	233f8 <readstat_parse_stata_dictionary+0x1b0>
   237a4:	cmp	r6, #155	; 0x9b
   237a8:	ble	237ec <readstat_parse_stata_dictionary+0x5a4>
   237ac:	ldr	r3, [sp, #52]	; 0x34
   237b0:	ldr	r3, [r3, #32]
   237b4:	ldr	r2, [r3, #4]
   237b8:	ldr	r0, [r3, #20]
   237bc:	blx	r2
   237c0:	ldr	r0, [sp, #76]	; 0x4c
   237c4:	bl	3e94 <free@plt>
   237c8:	mov	r0, r9
   237cc:	add	sp, sp, #3312	; 0xcf0
   237d0:	add	sp, sp, #12
   237d4:	ldrd	r4, [sp]
   237d8:	ldrd	r6, [sp, #8]
   237dc:	ldrd	r8, [sp, #16]
   237e0:	ldrd	sl, [sp, #24]
   237e4:	add	sp, sp, #32
   237e8:	pop	{pc}		; (ldr pc, [sp], #4)
   237ec:	ldr	ip, [pc, #324]	; 23938 <readstat_parse_stata_dictionary+0x6f0>
   237f0:	add	r4, sp, #88	; 0x58
   237f4:	add	ip, pc, ip
   237f8:	ldrh	r1, [ip, #56]	; 0x38
   237fc:	ldrd	r2, [ip]
   23800:	ldrd	r6, [ip, #24]
   23804:	ldrb	lr, [ip, #58]	; 0x3a
   23808:	strd	r2, [r4]
   2380c:	strh	r1, [r4, #56]	; 0x38
   23810:	ldrd	r2, [ip, #8]
   23814:	ldrd	r0, [ip, #16]
   23818:	strd	r2, [r4, #8]
   2381c:	strd	r6, [r4, #24]
   23820:	strd	r0, [r4, #16]
   23824:	ldrd	r2, [ip, #32]
   23828:	ldrd	r0, [ip, #40]	; 0x28
   2382c:	ldrd	r6, [ip, #48]	; 0x30
   23830:	strd	r2, [r4, #32]
   23834:	strd	r0, [r4, #40]	; 0x28
   23838:	strd	r6, [r4, #48]	; 0x30
   2383c:	strb	lr, [sp, #146]	; 0x92
   23840:	ldr	r3, [sp, #52]	; 0x34
   23844:	ldr	r3, [r3, #24]
   23848:	cmp	r3, #0
   2384c:	beq	2385c <readstat_parse_stata_dictionary+0x614>
   23850:	mov	r0, r4
   23854:	ldr	r1, [sp, #72]	; 0x48
   23858:	blx	r3
   2385c:	mov	r4, #5
   23860:	ldr	r3, [sp, #52]	; 0x34
   23864:	ldr	r3, [r3, #32]
   23868:	ldr	r2, [r3, #4]
   2386c:	ldr	r0, [r3, #20]
   23870:	blx	r2
   23874:	ldr	r0, [sp, #76]	; 0x4c
   23878:	bl	3e94 <free@plt>
   2387c:	ldr	r3, [sp, #84]	; 0x54
   23880:	cmp	r3, #0
   23884:	beq	23890 <readstat_parse_stata_dictionary+0x648>
   23888:	ldr	r3, [sp, #84]	; 0x54
   2388c:	str	r4, [r3]
   23890:	mov	r0, r9
   23894:	mov	r9, #0
   23898:	bl	3f90 <readstat_schema_free@plt>
   2389c:	b	237c8 <readstat_parse_stata_dictionary+0x580>
   238a0:	mov	r3, #0
   238a4:	mov	r4, #15
   238a8:	mov	r9, r3
   238ac:	str	r3, [sp, #76]	; 0x4c
   238b0:	b	23860 <readstat_parse_stata_dictionary+0x618>
   238b4:	mov	r4, #3
   238b8:	b	23860 <readstat_parse_stata_dictionary+0x618>
   238bc:	ldr	r3, [sp, #24]
   238c0:	cmp	r7, r3
   238c4:	beq	237ec <readstat_parse_stata_dictionary+0x5a4>
   238c8:	ldr	r3, [sp, #80]	; 0x50
   238cc:	add	r4, sp, #88	; 0x58
   238d0:	mov	r0, r4
   238d4:	ldrb	ip, [r7]
   238d8:	ldr	r2, [pc, #92]	; 2393c <readstat_parse_stata_dictionary+0x6f4>
   238dc:	sub	r1, r7, r3
   238e0:	ldr	r3, [sp, #64]	; 0x40
   238e4:	add	r1, r1, #1
   238e8:	stm	sp, {r1, ip}
   238ec:	mov	r1, #1024	; 0x400
   238f0:	add	r2, pc, r2
   238f4:	add	r3, r3, #1
   238f8:	bl	4254 <snprintf@plt>
   238fc:	b	23840 <readstat_parse_stata_dictionary+0x5f8>
   23900:	ldr	r2, [sp, #84]	; 0x54
   23904:	cmp	r2, #0
   23908:	beq	23924 <readstat_parse_stata_dictionary+0x6dc>
   2390c:	mov	r3, #1
   23910:	mov	r9, #0
   23914:	str	r3, [r2]
   23918:	b	237c8 <readstat_parse_stata_dictionary+0x580>
   2391c:	mov	r4, #4
   23920:	b	23860 <readstat_parse_stata_dictionary+0x618>
   23924:	ldr	r9, [sp, #84]	; 0x54
   23928:	b	237c8 <readstat_parse_stata_dictionary+0x580>
   2392c:	.word	0x000106c8
   23930:	.word	0x000106bc
   23934:	.word	0x000106b0
   23938:	.word	0x00011024
   2393c:	.word	0x00010f64

00023940 <handle_value.isra.1>:
   23940:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23944:	mov	r5, r0
   23948:	strd	r6, [sp, #8]
   2394c:	mov	r7, #0
   23950:	mov	r6, #0
   23954:	strd	r8, [sp, #16]
   23958:	add	r9, r3, #16
   2395c:	mov	r8, r2
   23960:	strd	sl, [sp, #24]
   23964:	add	fp, sp, #32
   23968:	mov	sl, r3
   2396c:	str	lr, [sp, #32]
   23970:	sub	sp, sp, #52	; 0x34
   23974:	sub	r4, fp, #52	; 0x34
   23978:	ldr	ip, [r3, #16]
   2397c:	strd	r6, [r4, #8]
   23980:	ldr	r3, [fp, #8]
   23984:	strd	r6, [fp, #-52]	; 0xffffffcc
   23988:	str	r1, [fp, #-64]	; 0xffffffc0
   2398c:	mov	r0, ip
   23990:	str	ip, [fp, #-44]	; 0xffffffd4
   23994:	lsl	r7, r3, #2
   23998:	add	r2, r7, #8
   2399c:	bic	r2, r2, #7
   239a0:	sub	sp, sp, r2
   239a4:	bl	3df8 <readstat_type_class@plt>
   239a8:	cmp	r0, #0
   239ac:	beq	23a54 <handle_value.isra.1+0x114>
   239b0:	ldr	r3, [sl, #16]
   239b4:	mov	r2, #0
   239b8:	str	r2, [fp, #-56]	; 0xffffffc8
   239bc:	cmp	r3, #5
   239c0:	beq	23a9c <handle_value.isra.1+0x15c>
   239c4:	cmp	r3, #4
   239c8:	beq	23a88 <handle_value.isra.1+0x148>
   239cc:	mov	r2, #10
   239d0:	sub	r1, fp, #56	; 0x38
   239d4:	ldr	r0, [fp, #4]
   239d8:	bl	3e04 <strtol@plt>
   239dc:	mov	r3, #3
   239e0:	str	r0, [fp, #-52]	; 0xffffffcc
   239e4:	str	r3, [fp, #-44]	; 0xffffffd4
   239e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   239ec:	ldr	r1, [fp, #4]
   239f0:	ldrb	r2, [fp, #-39]	; 0xffffffd9
   239f4:	sub	r3, r3, r1
   239f8:	clz	r3, r3
   239fc:	lsr	r3, r3, #5
   23a00:	bfi	r2, r3, #0, #1
   23a04:	strb	r2, [fp, #-39]	; 0xffffffd9
   23a08:	ldrd	r6, [fp, #-44]	; 0xffffffd4
   23a0c:	mov	r1, r9
   23a10:	mov	r0, r8
   23a14:	ldr	r3, [fp, #12]
   23a18:	str	r3, [sp, #8]
   23a1c:	ldm	r4, {r2, r3}
   23a20:	ldr	r5, [r5]
   23a24:	strd	r6, [sp]
   23a28:	blx	r5
   23a2c:	cmp	r0, #1
   23a30:	movne	r0, #0
   23a34:	moveq	r0, #4
   23a38:	sub	sp, fp, #32
   23a3c:	ldrd	r4, [sp]
   23a40:	ldrd	r6, [sp, #8]
   23a44:	ldrd	r8, [sp, #16]
   23a48:	ldrd	sl, [sp, #24]
   23a4c:	add	sp, sp, #32
   23a50:	pop	{pc}		; (ldr pc, [sp], #4)
   23a54:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23a58:	add	r6, sp, #16
   23a5c:	add	r7, r7, #1
   23a60:	mov	r1, r7
   23a64:	mov	r0, r6
   23a68:	ldr	r3, [fp, #8]
   23a6c:	str	r2, [sp]
   23a70:	ldr	r2, [fp, #4]
   23a74:	bl	420c <readstat_convert@plt>
   23a78:	cmp	r0, #0
   23a7c:	streq	r6, [fp, #-52]	; 0xffffffcc
   23a80:	beq	23a08 <handle_value.isra.1+0xc8>
   23a84:	b	23a38 <handle_value.isra.1+0xf8>
   23a88:	sub	r1, fp, #56	; 0x38
   23a8c:	ldr	r0, [fp, #4]
   23a90:	bl	4098 <strtof@plt>
   23a94:	vstr	s0, [fp, #-52]	; 0xffffffcc
   23a98:	b	239e8 <handle_value.isra.1+0xa8>
   23a9c:	sub	r1, fp, #56	; 0x38
   23aa0:	ldr	r0, [fp, #4]
   23aa4:	bl	42cc <strtod@plt>
   23aa8:	vstr	d0, [fp, #-52]	; 0xffffffcc
   23aac:	b	239e8 <handle_value.isra.1+0xa8>

00023ab0 <txt_parse_fixed_width>:
   23ab0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23ab4:	strd	r6, [sp, #8]
   23ab8:	strd	r8, [sp, #16]
   23abc:	strd	sl, [sp, #24]
   23ac0:	mov	sl, r0
   23ac4:	str	lr, [sp, #32]
   23ac8:	sub	sp, sp, #4160	; 0x1040
   23acc:	sub	sp, sp, #4
   23ad0:	ldr	r6, [r1, #8]
   23ad4:	ldr	fp, [r0, #32]
   23ad8:	str	r3, [sp, #52]	; 0x34
   23adc:	mov	r3, #0
   23ae0:	str	r3, [sp, #36]	; 0x24
   23ae4:	add	r3, sp, #64	; 0x40
   23ae8:	str	r1, [sp, #40]	; 0x28
   23aec:	str	r3, [sp, #20]
   23af0:	add	r3, sp, #63	; 0x3f
   23af4:	str	r2, [sp, #44]	; 0x2c
   23af8:	str	r3, [sp, #48]	; 0x30
   23afc:	ldr	r3, [r6, #256]	; 0x100
   23b00:	cmp	r3, #0
   23b04:	ble	23c64 <txt_parse_fixed_width+0x1b4>
   23b08:	ldr	r3, [sp, #52]	; 0x34
   23b0c:	mov	r8, #0
   23b10:	mov	r4, r8
   23b14:	sub	r3, r3, #4
   23b18:	str	r3, [sp, #28]
   23b1c:	ldr	r5, [sp, #28]
   23b20:	add	r3, sp, #4160	; 0x1040
   23b24:	add	r3, r3, #40	; 0x28
   23b28:	ldr	r0, [r3]
   23b2c:	ldr	r3, [fp, #12]
   23b30:	ldr	r1, [r5, #4]!
   23b34:	ldr	r2, [fp, #20]
   23b38:	str	r5, [sp, #28]
   23b3c:	blx	r3
   23b40:	cmp	r0, #0
   23b44:	beq	23c80 <txt_parse_fixed_width+0x1d0>
   23b48:	ldr	r3, [r5]
   23b4c:	cmp	r3, r0
   23b50:	bhi	23ce4 <txt_parse_fixed_width+0x234>
   23b54:	ldr	r0, [r6, #268]	; 0x10c
   23b58:	cmp	r0, r4
   23b5c:	ble	23c48 <txt_parse_fixed_width+0x198>
   23b60:	mov	r7, #2208	; 0x8a0
   23b64:	ldr	r2, [r6, #276]	; 0x114
   23b68:	mul	r3, r7, r4
   23b6c:	ldr	r1, [r2, r3]
   23b70:	add	r3, r2, r3
   23b74:	cmp	r8, r1
   23b78:	bne	23c48 <txt_parse_fixed_width+0x198>
   23b7c:	add	r2, sl, #16
   23b80:	str	r2, [sp, #24]
   23b84:	str	fp, [sp, #32]
   23b88:	mov	fp, r3
   23b8c:	b	23bb4 <txt_parse_fixed_width+0x104>
   23b90:	add	r4, r4, #1
   23b94:	cmp	r0, r4
   23b98:	mul	r3, r7, r4
   23b9c:	ble	23c44 <txt_parse_fixed_width+0x194>
   23ba0:	ldr	r2, [r6, #276]	; 0x114
   23ba4:	ldr	r1, [r2, r3]
   23ba8:	add	fp, r2, r3
   23bac:	cmp	r1, r8
   23bb0:	bne	23c44 <txt_parse_fixed_width+0x194>
   23bb4:	ldr	r5, [fp, #8]
   23bb8:	cmp	r5, #4096	; 0x1000
   23bbc:	bcs	23b90 <txt_parse_fixed_width+0xe0>
   23bc0:	ldr	r2, [sl, #16]
   23bc4:	cmp	r2, #0
   23bc8:	beq	23b90 <txt_parse_fixed_width+0xe0>
   23bcc:	ldr	r9, [fp, #12]
   23bd0:	cmp	r9, #0
   23bd4:	bne	23b90 <txt_parse_fixed_width+0xe0>
   23bd8:	add	r3, sp, #4160	; 0x1040
   23bdc:	ldr	r1, [fp, #4]
   23be0:	mov	r2, r5
   23be4:	add	r3, r3, #40	; 0x28
   23be8:	ldr	r3, [r3]
   23bec:	ldr	r0, [sp, #20]
   23bf0:	add	r1, r3, r1
   23bf4:	bl	3ef4 <memcpy@plt>
   23bf8:	ldr	ip, [sp, #20]
   23bfc:	mov	r3, fp
   23c00:	ldr	r1, [sp, #44]	; 0x2c
   23c04:	ldr	r0, [sp, #24]
   23c08:	str	ip, [sp]
   23c0c:	str	r5, [sp, #4]
   23c10:	str	r1, [sp, #8]
   23c14:	strb	r9, [ip, r5]
   23c18:	ldr	r1, [sp, #40]	; 0x28
   23c1c:	ldr	r2, [sp, #36]	; 0x24
   23c20:	ldr	r1, [r1, #4]
   23c24:	bl	23940 <handle_value.isra.1>
   23c28:	cmp	r0, #0
   23c2c:	bne	23c80 <txt_parse_fixed_width+0x1d0>
   23c30:	ldr	r0, [r6, #268]	; 0x10c
   23c34:	add	r4, r4, #1
   23c38:	mul	r3, r7, r4
   23c3c:	cmp	r0, r4
   23c40:	bgt	23ba0 <txt_parse_fixed_width+0xf0>
   23c44:	ldr	fp, [sp, #32]
   23c48:	ldr	r3, [r6, #260]	; 0x104
   23c4c:	cmp	r3, #0
   23c50:	beq	23ca8 <txt_parse_fixed_width+0x1f8>
   23c54:	ldr	r3, [r6, #256]	; 0x100
   23c58:	add	r8, r8, #1
   23c5c:	cmp	r3, r8
   23c60:	bgt	23b1c <txt_parse_fixed_width+0x6c>
   23c64:	ldr	r1, [sp, #36]	; 0x24
   23c68:	ldr	r2, [sl, #44]	; 0x2c
   23c6c:	add	r1, r1, #1
   23c70:	cmp	r2, r1
   23c74:	str	r1, [sp, #36]	; 0x24
   23c78:	bne	23b00 <txt_parse_fixed_width+0x50>
   23c7c:	mov	r0, #0
   23c80:	ldrd	r2, [sp, #36]	; 0x24
   23c84:	str	r2, [r3]
   23c88:	add	sp, sp, #4160	; 0x1040
   23c8c:	add	sp, sp, #4
   23c90:	ldrd	r4, [sp]
   23c94:	ldrd	r6, [sp, #8]
   23c98:	ldrd	r8, [sp, #16]
   23c9c:	ldrd	sl, [sp, #24]
   23ca0:	add	sp, sp, #32
   23ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   23ca8:	ldr	r7, [sp, #20]
   23cac:	ldr	r5, [sp, #48]	; 0x30
   23cb0:	strb	r3, [r7, #-1]
   23cb4:	b	23cc4 <txt_parse_fixed_width+0x214>
   23cb8:	ldrb	r3, [r7, #-1]
   23cbc:	cmp	r3, #10
   23cc0:	beq	23c54 <txt_parse_fixed_width+0x1a4>
   23cc4:	mov	r1, #1
   23cc8:	mov	r0, r5
   23ccc:	ldr	r3, [fp, #12]
   23cd0:	ldr	r2, [fp, #20]
   23cd4:	blx	r3
   23cd8:	cmp	r0, #1
   23cdc:	beq	23cb8 <txt_parse_fixed_width+0x208>
   23ce0:	b	23c54 <txt_parse_fixed_width+0x1a4>
   23ce4:	mov	r0, #2
   23ce8:	b	23c80 <txt_parse_fixed_width+0x1d0>

00023cec <readstat_parse_txt>:
   23cec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23cf0:	mov	ip, r0
   23cf4:	mov	r4, #0
   23cf8:	strd	r6, [sp, #8]
   23cfc:	mov	r5, #0
   23d00:	mov	r7, r1
   23d04:	strd	r8, [sp, #16]
   23d08:	strd	sl, [sp, #24]
   23d0c:	str	lr, [sp, #32]
   23d10:	sub	sp, sp, #124	; 0x7c
   23d14:	ldr	r6, [r0, #32]
   23d18:	str	r0, [sp, #16]
   23d1c:	ldr	r0, [r0, #40]	; 0x28
   23d20:	str	r2, [sp, #24]
   23d24:	str	r3, [sp, #32]
   23d28:	strd	r4, [sp, #52]	; 0x34
   23d2c:	str	r2, [sp, #60]	; 0x3c
   23d30:	cmp	r0, #0
   23d34:	beq	23d54 <readstat_parse_txt+0x68>
   23d38:	ldr	r1, [ip, #36]	; 0x24
   23d3c:	cmp	r1, #0
   23d40:	beq	23d54 <readstat_parse_txt+0x68>
   23d44:	bl	4104 <iconv_open@plt>
   23d48:	cmn	r0, #1
   23d4c:	str	r0, [sp, #56]	; 0x38
   23d50:	beq	24118 <readstat_parse_txt+0x42c>
   23d54:	mov	r0, r7
   23d58:	ldr	r3, [r6]
   23d5c:	ldr	r1, [r6, #20]
   23d60:	blx	r3
   23d64:	cmn	r0, #1
   23d68:	beq	24004 <readstat_parse_txt+0x318>
   23d6c:	ldr	r7, [sp, #24]
   23d70:	ldr	r4, [r7, #256]	; 0x100
   23d74:	lsl	r5, r4, #2
   23d78:	mov	r0, r5
   23d7c:	bl	40e0 <malloc@plt>
   23d80:	subs	r3, r0, #0
   23d84:	str	r3, [sp, #28]
   23d88:	beq	24104 <readstat_parse_txt+0x418>
   23d8c:	cmp	r4, #0
   23d90:	ble	240ec <readstat_parse_txt+0x400>
   23d94:	ldr	r2, [r7, #260]	; 0x104
   23d98:	add	r1, r5, r3
   23d9c:	str	r2, [r3], #4
   23da0:	cmp	r1, r3
   23da4:	bne	23d9c <readstat_parse_txt+0xb0>
   23da8:	ldr	r3, [sp, #24]
   23dac:	ldr	lr, [r3, #268]	; 0x10c
   23db0:	cmp	lr, #0
   23db4:	ble	23dfc <readstat_parse_txt+0x110>
   23db8:	ldr	r3, [sp, #24]
   23dbc:	mov	r2, #2208	; 0x8a0
   23dc0:	ldr	r7, [sp, #28]
   23dc4:	ldr	r3, [r3, #276]	; 0x114
   23dc8:	mla	lr, r2, lr, r3
   23dcc:	ldm	r3, {r1, r2, ip}
   23dd0:	add	r3, r3, #2208	; 0x8a0
   23dd4:	ldr	r0, [r7, r1, lsl #2]
   23dd8:	add	r2, r2, ip
   23ddc:	cmp	r0, r2
   23de0:	strcc	r2, [r7, r1, lsl #2]
   23de4:	cmp	lr, r3
   23de8:	bne	23dcc <readstat_parse_txt+0xe0>
   23dec:	cmp	r4, #0
   23df0:	ble	240fc <readstat_parse_txt+0x410>
   23df4:	ldr	r3, [sp, #28]
   23df8:	add	r1, r5, r3
   23dfc:	ldr	r3, [sp, #28]
   23e00:	mov	r0, #0
   23e04:	ldr	r2, [r3], #4
   23e08:	cmp	r0, r2
   23e0c:	movcc	r0, r2
   23e10:	cmp	r1, r3
   23e14:	bne	23e04 <readstat_parse_txt+0x118>
   23e18:	add	r0, r0, #2
   23e1c:	bl	40e0 <malloc@plt>
   23e20:	subs	r3, r0, #0
   23e24:	str	r3, [sp, #40]	; 0x28
   23e28:	beq	24158 <readstat_parse_txt+0x46c>
   23e2c:	ldr	r3, [sp, #24]
   23e30:	ldr	r5, [r3, #264]	; 0x108
   23e34:	cmp	r5, #1
   23e38:	ble	23e84 <readstat_parse_txt+0x198>
   23e3c:	mov	r3, #0
   23e40:	sub	r5, r5, #2
   23e44:	add	r4, sp, #64	; 0x40
   23e48:	strb	r3, [sp, #64]	; 0x40
   23e4c:	b	23e5c <readstat_parse_txt+0x170>
   23e50:	ldrb	r3, [sp, #64]	; 0x40
   23e54:	cmp	r3, #10
   23e58:	beq	23e78 <readstat_parse_txt+0x18c>
   23e5c:	mov	r1, #1
   23e60:	mov	r0, r4
   23e64:	ldr	r3, [r6, #12]
   23e68:	ldr	r2, [r6, #20]
   23e6c:	blx	r3
   23e70:	cmp	r0, #1
   23e74:	beq	23e50 <readstat_parse_txt+0x164>
   23e78:	cmp	r5, #0
   23e7c:	sub	r5, r5, #1
   23e80:	bne	23e5c <readstat_parse_txt+0x170>
   23e84:	ldr	r3, [sp, #24]
   23e88:	ldrb	r3, [r3, #272]	; 0x110
   23e8c:	cmp	r3, #0
   23e90:	beq	24044 <readstat_parse_txt+0x358>
   23e94:	mov	r0, #4096	; 0x1000
   23e98:	mov	fp, r0
   23e9c:	bl	40e0 <malloc@plt>
   23ea0:	mov	r3, #0
   23ea4:	ldr	sl, [sp, #60]	; 0x3c
   23ea8:	mov	r8, r0
   23eac:	str	r3, [sp, #36]	; 0x24
   23eb0:	ldr	r3, [sp, #16]
   23eb4:	str	r6, [sp, #44]	; 0x2c
   23eb8:	ldr	r7, [r3, #32]
   23ebc:	ldr	r3, [sl, #268]	; 0x10c
   23ec0:	cmp	r3, #0
   23ec4:	ble	23fc8 <readstat_parse_txt+0x2dc>
   23ec8:	mov	r9, #0
   23ecc:	sub	r3, r3, #1
   23ed0:	ldr	r2, [sl, #276]	; 0x114
   23ed4:	mov	r4, #0
   23ed8:	cmp	r3, r9
   23edc:	ldrbne	r6, [sl, #272]	; 0x110
   23ee0:	moveq	r6, #10
   23ee4:	str	r2, [sp, #20]
   23ee8:	add	r5, r8, r4
   23eec:	mov	r1, #1
   23ef0:	ldr	r3, [r7, #12]
   23ef4:	mov	r0, r5
   23ef8:	ldr	r2, [r7, #20]
   23efc:	blx	r3
   23f00:	cmp	r0, #1
   23f04:	bne	23f38 <readstat_parse_txt+0x24c>
   23f08:	ldrb	r3, [r5]
   23f0c:	add	r4, r4, #1
   23f10:	cmp	r6, r3
   23f14:	beq	23f48 <readstat_parse_txt+0x25c>
   23f18:	cmp	fp, r4
   23f1c:	bne	23ee8 <readstat_parse_txt+0x1fc>
   23f20:	lsl	fp, fp, #1
   23f24:	mov	r0, r8
   23f28:	mov	r1, fp
   23f2c:	bl	3fcc <realloc@plt>
   23f30:	mov	r8, r0
   23f34:	b	23ee8 <readstat_parse_txt+0x1fc>
   23f38:	cmn	r0, #1
   23f3c:	beq	2416c <readstat_parse_txt+0x480>
   23f40:	cmp	r4, #0
   23f44:	beq	23fe4 <readstat_parse_txt+0x2f8>
   23f48:	ldr	r3, [sp, #16]
   23f4c:	ldr	r3, [r3, #16]
   23f50:	cmp	r3, #0
   23f54:	beq	23fb8 <readstat_parse_txt+0x2cc>
   23f58:	ldr	r2, [sp, #20]
   23f5c:	mov	r3, #2208	; 0x8a0
   23f60:	mla	r3, r3, r9, r2
   23f64:	ldr	r2, [r3, #12]
   23f68:	cmp	r2, #0
   23f6c:	bne	23fb8 <readstat_parse_txt+0x2cc>
   23f70:	subs	ip, r4, #1
   23f74:	beq	23f88 <readstat_parse_txt+0x29c>
   23f78:	add	r2, r8, r4
   23f7c:	ldrb	r2, [r2, #-2]
   23f80:	cmp	r2, #13
   23f84:	subeq	ip, r4, #2
   23f88:	mov	r0, #0
   23f8c:	ldr	r2, [sp, #36]	; 0x24
   23f90:	strb	r0, [r8, ip]
   23f94:	stm	sp, {r8, ip}
   23f98:	ldr	r0, [sp, #16]
   23f9c:	ldr	ip, [sp, #32]
   23fa0:	ldr	r1, [sp, #56]	; 0x38
   23fa4:	add	r0, r0, #16
   23fa8:	str	ip, [sp, #8]
   23fac:	bl	23940 <handle_value.isra.1>
   23fb0:	cmp	r0, #0
   23fb4:	bne	24134 <readstat_parse_txt+0x448>
   23fb8:	ldr	r3, [sl, #268]	; 0x10c
   23fbc:	add	r9, r9, #1
   23fc0:	cmp	r3, r9
   23fc4:	bgt	23ecc <readstat_parse_txt+0x1e0>
   23fc8:	ldr	r2, [sp, #16]
   23fcc:	ldr	r1, [sp, #36]	; 0x24
   23fd0:	ldr	r2, [r2, #44]	; 0x2c
   23fd4:	add	r1, r1, #1
   23fd8:	str	r1, [sp, #36]	; 0x24
   23fdc:	cmp	r1, r2
   23fe0:	bne	23ec0 <readstat_parse_txt+0x1d4>
   23fe4:	ldr	r3, [sp, #36]	; 0x24
   23fe8:	cmp	r8, #0
   23fec:	ldr	r6, [sp, #44]	; 0x2c
   23ff0:	str	r3, [sp, #52]	; 0x34
   23ff4:	beq	24068 <readstat_parse_txt+0x37c>
   23ff8:	mov	r0, r8
   23ffc:	bl	3e94 <free@plt>
   24000:	b	24068 <readstat_parse_txt+0x37c>
   24004:	ldr	r3, [r6, #4]
   24008:	mov	r4, #1
   2400c:	ldr	r0, [r6, #20]
   24010:	blx	r3
   24014:	ldr	r0, [sp, #56]	; 0x38
   24018:	cmp	r0, #0
   2401c:	beq	24024 <readstat_parse_txt+0x338>
   24020:	bl	3da4 <iconv_close@plt>
   24024:	mov	r0, r4
   24028:	add	sp, sp, #124	; 0x7c
   2402c:	ldrd	r4, [sp]
   24030:	ldrd	r6, [sp, #8]
   24034:	ldrd	r8, [sp, #16]
   24038:	ldrd	sl, [sp, #24]
   2403c:	add	sp, sp, #32
   24040:	pop	{pc}		; (ldr pc, [sp], #4)
   24044:	ldr	r0, [sp, #16]
   24048:	ldr	r1, [sp, #40]	; 0x28
   2404c:	ldr	r3, [sp, #28]
   24050:	ldr	r2, [sp, #32]
   24054:	str	r1, [sp]
   24058:	add	r1, sp, #52	; 0x34
   2405c:	bl	23ab0 <txt_parse_fixed_width>
   24060:	subs	r4, r0, #0
   24064:	bne	240cc <readstat_parse_txt+0x3e0>
   24068:	ldr	r3, [sp, #16]
   2406c:	ldr	r4, [r3]
   24070:	cmp	r4, #0
   24074:	beq	240cc <readstat_parse_txt+0x3e0>
   24078:	ldr	r3, [sp, #24]
   2407c:	mov	r2, #0
   24080:	add	r0, sp, #64	; 0x40
   24084:	ldr	r1, [sp, #32]
   24088:	ldr	lr, [sp, #52]	; 0x34
   2408c:	ldr	r8, [r3, #268]	; 0x10c
   24090:	mov	r3, #0
   24094:	strd	r2, [sp, #80]	; 0x50
   24098:	strd	r2, [sp, #88]	; 0x58
   2409c:	strd	r2, [sp, #96]	; 0x60
   240a0:	asr	r9, r8, #31
   240a4:	strd	r2, [sp, #104]	; 0x68
   240a8:	strd	r2, [sp, #112]	; 0x70
   240ac:	asr	r3, lr, #31
   240b0:	mov	r2, lr
   240b4:	strd	r2, [sp, #64]	; 0x40
   240b8:	strd	r8, [sp, #72]	; 0x48
   240bc:	blx	r4
   240c0:	cmp	r0, #1
   240c4:	movne	r4, #0
   240c8:	moveq	r4, #4
   240cc:	ldr	r3, [r6, #4]
   240d0:	ldr	r0, [r6, #20]
   240d4:	blx	r3
   240d8:	ldr	r0, [sp, #40]	; 0x28
   240dc:	bl	3e94 <free@plt>
   240e0:	ldr	r0, [sp, #28]
   240e4:	bl	3e94 <free@plt>
   240e8:	b	24014 <readstat_parse_txt+0x328>
   240ec:	ldr	r3, [sp, #24]
   240f0:	ldr	lr, [r3, #268]	; 0x10c
   240f4:	cmp	lr, #0
   240f8:	bgt	23db8 <readstat_parse_txt+0xcc>
   240fc:	mov	r0, #2
   24100:	b	23e1c <readstat_parse_txt+0x130>
   24104:	ldr	r3, [r6, #4]
   24108:	mov	r4, #3
   2410c:	ldr	r0, [r6, #20]
   24110:	blx	r3
   24114:	b	24014 <readstat_parse_txt+0x328>
   24118:	mov	r2, #0
   2411c:	ldr	r3, [r6, #4]
   24120:	mov	r4, #7
   24124:	str	r2, [sp, #56]	; 0x38
   24128:	ldr	r0, [r6, #20]
   2412c:	blx	r3
   24130:	b	24014 <readstat_parse_txt+0x328>
   24134:	ldr	r6, [sp, #44]	; 0x2c
   24138:	mov	r4, r0
   2413c:	cmp	r8, #0
   24140:	ldr	r3, [sp, #36]	; 0x24
   24144:	str	r3, [sp, #52]	; 0x34
   24148:	beq	240cc <readstat_parse_txt+0x3e0>
   2414c:	mov	r0, r8
   24150:	bl	3e94 <free@plt>
   24154:	b	240cc <readstat_parse_txt+0x3e0>
   24158:	ldr	r3, [r6, #4]
   2415c:	mov	r4, #3
   24160:	ldr	r0, [r6, #20]
   24164:	blx	r3
   24168:	b	240e0 <readstat_parse_txt+0x3f4>
   2416c:	mov	r4, #2
   24170:	ldr	r6, [sp, #44]	; 0x2c
   24174:	b	2413c <readstat_parse_txt+0x450>

00024178 <zsav_ctx_init>:
   24178:	mov	r1, #40	; 0x28
   2417c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   24180:	mov	r5, r0
   24184:	mov	r0, #1
   24188:	strd	r6, [sp, #8]
   2418c:	mov	r6, r2
   24190:	mov	r7, r3
   24194:	strd	r8, [sp, #16]
   24198:	mov	r9, #0
   2419c:	str	sl, [sp, #24]
   241a0:	mov	r8, #61440	; 0xf000
   241a4:	movt	r8, #63	; 0x3f
   241a8:	str	lr, [sp, #28]
   241ac:	bl	3d2c <calloc@plt>
   241b0:	mov	r4, r0
   241b4:	mov	r0, r5
   241b8:	bl	40e0 <malloc@plt>
   241bc:	mov	r3, #10
   241c0:	mov	r1, #4
   241c4:	str	r0, [r4]
   241c8:	mov	r0, r3
   241cc:	str	r3, [r4, #12]
   241d0:	bl	3d2c <calloc@plt>
   241d4:	mvn	r3, #0
   241d8:	str	r0, [r4, #4]
   241dc:	mov	r0, r4
   241e0:	strd	r8, [r4, #16]
   241e4:	strd	r6, [r4, #24]
   241e8:	str	r3, [r4, #32]
   241ec:	ldrd	r4, [sp]
   241f0:	ldrd	r6, [sp, #8]
   241f4:	ldrd	r8, [sp, #16]
   241f8:	ldr	sl, [sp, #24]
   241fc:	add	sp, sp, #28
   24200:	pop	{pc}		; (ldr pc, [sp], #4)

00024204 <zsav_ctx_free>:
   24204:	ldr	r3, [r0, #8]
   24208:	strd	r4, [sp, #-16]!
   2420c:	str	r6, [sp, #8]
   24210:	mov	r6, r0
   24214:	str	lr, [sp, #12]
   24218:	cmp	r3, #0
   2421c:	ble	24254 <zsav_ctx_free+0x50>
   24220:	mov	r4, #0
   24224:	ldr	r3, [r6, #4]
   24228:	ldr	r5, [r3, r4, lsl #2]
   2422c:	add	r4, r4, #1
   24230:	add	r0, r5, #8
   24234:	bl	42e4 <deflateEnd@plt>
   24238:	ldr	r0, [r5, #64]	; 0x40
   2423c:	bl	3e94 <free@plt>
   24240:	mov	r0, r5
   24244:	bl	3e94 <free@plt>
   24248:	ldr	r3, [r6, #8]
   2424c:	cmp	r3, r4
   24250:	bgt	24224 <zsav_ctx_free+0x20>
   24254:	ldr	r0, [r6, #4]
   24258:	bl	3e94 <free@plt>
   2425c:	ldr	r0, [r6]
   24260:	bl	3e94 <free@plt>
   24264:	mov	r0, r6
   24268:	ldrd	r4, [sp]
   2426c:	ldr	r6, [sp, #8]
   24270:	ldr	lr, [sp, #12]
   24274:	add	sp, sp, #16
   24278:	b	3e94 <free@plt>

0002427c <zsav_add_block>:
   2427c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   24280:	mov	r4, r0
   24284:	ldr	r3, [r0, #12]
   24288:	strd	r6, [sp, #8]
   2428c:	ldr	r6, [r0, #8]
   24290:	str	r8, [sp, #16]
   24294:	str	lr, [sp, #20]
   24298:	ldr	r8, [r0, #4]
   2429c:	cmp	r6, r3
   242a0:	beq	2430c <zsav_add_block+0x90>
   242a4:	mov	r1, #72	; 0x48
   242a8:	mov	r0, #1
   242ac:	bl	3d2c <calloc@plt>
   242b0:	ldr	r2, [pc, #120]	; 24330 <zsav_add_block+0xb4>
   242b4:	mov	r5, r0
   242b8:	add	r1, r6, #1
   242bc:	add	r7, r0, #8
   242c0:	mov	r3, #56	; 0x38
   242c4:	mov	r0, r7
   242c8:	str	r1, [r4, #8]
   242cc:	str	r5, [r8, r6, lsl #2]
   242d0:	ldr	r1, [r4, #32]
   242d4:	add	r2, pc, r2
   242d8:	bl	40f8 <deflateInit_@plt>
   242dc:	mov	r0, r7
   242e0:	ldr	r1, [r4, #16]
   242e4:	bl	3e58 <deflateBound@plt>
   242e8:	str	r0, [r5, #68]	; 0x44
   242ec:	bl	40e0 <malloc@plt>
   242f0:	str	r0, [r5, #64]	; 0x40
   242f4:	mov	r0, r5
   242f8:	ldrd	r4, [sp]
   242fc:	ldrd	r6, [sp, #8]
   24300:	ldr	r8, [sp, #16]
   24304:	add	sp, sp, #20
   24308:	pop	{pc}		; (ldr pc, [sp], #4)
   2430c:	lsl	r3, r6, #1
   24310:	mov	r0, r8
   24314:	lsl	r1, r6, #3
   24318:	str	r3, [r4, #12]
   2431c:	bl	3fcc <realloc@plt>
   24320:	mov	r8, r0
   24324:	str	r0, [r4, #4]
   24328:	ldr	r6, [r4, #8]
   2432c:	b	242a4 <zsav_add_block+0x28>
   24330:	.word	0x000105b8

00024334 <zsav_current_block>:
   24334:	ldr	r3, [r0, #8]
   24338:	cmp	r3, #0
   2433c:	ldrne	r2, [r0, #4]
   24340:	subne	r3, r3, #-1073741823	; 0xc0000001
   24344:	ldrne	r0, [r2, r3, lsl #2]
   24348:	moveq	r0, r3
   2434c:	bx	lr

00024350 <zsav_compress_row>:
   24350:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24354:	strd	r6, [sp, #8]
   24358:	mov	r7, r0
   2435c:	mov	r0, r3
   24360:	strd	r8, [sp, #16]
   24364:	mov	r6, r1
   24368:	mov	r8, r3
   2436c:	strd	sl, [sp, #24]
   24370:	str	lr, [sp, #32]
   24374:	sub	sp, sp, #12
   24378:	str	r2, [sp, #4]
   2437c:	bl	4074 <zsav_current_block@plt>
   24380:	subs	r4, r0, #0
   24384:	beq	244c8 <zsav_compress_row+0x178>
   24388:	ldr	ip, [r4]
   2438c:	mov	r3, #0
   24390:	ldrd	sl, [r8, #16]
   24394:	str	r7, [r4, #8]
   24398:	ldr	r5, [r4, #4]
   2439c:	str	r6, [r4, #12]
   243a0:	ldr	lr, [r4, #64]	; 0x40
   243a4:	subs	r0, sl, ip
   243a8:	ldr	r9, [r4, #68]	; 0x44
   243ac:	sbc	r1, fp, ip, asr #31
   243b0:	cmp	r0, r6
   243b4:	sbcs	r3, r1, r3
   243b8:	add	lr, lr, r5
   243bc:	sub	r5, r9, r5
   243c0:	str	lr, [r4, #20]
   243c4:	str	r5, [r4, #24]
   243c8:	bge	24480 <zsav_compress_row+0x130>
   243cc:	mov	r9, #0
   243d0:	b	24434 <zsav_compress_row+0xe4>
   243d4:	ldr	ip, [r4, #12]
   243d8:	ldr	r2, [r8, #16]
   243dc:	ldr	r1, [r4, #24]
   243e0:	ldr	r3, [r4, #68]	; 0x44
   243e4:	sub	r2, r2, ip
   243e8:	sub	r3, r3, r1
   243ec:	strd	r2, [r4]
   243f0:	bl	40ec <zsav_add_block@plt>
   243f4:	ldr	ip, [r0]
   243f8:	mov	r4, r0
   243fc:	add	r3, r7, r9
   24400:	ldrd	sl, [r8, #16]
   24404:	ldr	lr, [r0, #68]	; 0x44
   24408:	str	r3, [r4, #8]
   2440c:	mov	r3, #0
   24410:	str	r5, [r4, #12]
   24414:	subs	r0, sl, ip
   24418:	sbc	r1, fp, ip, asr #31
   2441c:	cmp	r0, r5
   24420:	str	lr, [r4, #24]
   24424:	sbcs	r3, r1, r3
   24428:	ldr	r3, [r4, #64]	; 0x40
   2442c:	str	r3, [r4, #20]
   24430:	bge	24484 <zsav_compress_row+0x134>
   24434:	sub	sl, sl, ip
   24438:	mov	r1, #4
   2443c:	add	r0, r4, #8
   24440:	add	r9, r9, sl
   24444:	str	sl, [r4, #12]
   24448:	sub	r5, r6, r9
   2444c:	bl	4014 <deflate@plt>
   24450:	mov	r3, r0
   24454:	mov	r0, r8
   24458:	cmp	r3, #1
   2445c:	beq	243d4 <zsav_compress_row+0x84>
   24460:	mov	r0, r3
   24464:	add	sp, sp, #12
   24468:	ldrd	r4, [sp]
   2446c:	ldrd	r6, [sp, #8]
   24470:	ldrd	r8, [sp, #16]
   24474:	ldrd	sl, [sp, #24]
   24478:	add	sp, sp, #32
   2447c:	pop	{pc}		; (ldr pc, [sp], #4)
   24480:	mov	r5, r6
   24484:	ldr	r3, [sp, #4]
   24488:	add	r0, r4, #8
   2448c:	cmp	r3, #0
   24490:	moveq	r1, r3
   24494:	movne	r1, #4
   24498:	bl	4014 <deflate@plt>
   2449c:	ldr	r2, [r4]
   244a0:	mov	r3, r0
   244a4:	ldr	ip, [r4, #12]
   244a8:	ldr	r0, [r4, #24]
   244ac:	ldr	r1, [r4, #68]	; 0x44
   244b0:	sub	r2, r2, ip
   244b4:	add	r5, r2, r5
   244b8:	str	r5, [r4]
   244bc:	sub	r2, r1, r0
   244c0:	str	r2, [r4, #4]
   244c4:	b	24460 <zsav_compress_row+0x110>
   244c8:	mov	r0, r8
   244cc:	bl	40ec <zsav_add_block@plt>
   244d0:	mov	r4, r0
   244d4:	b	24388 <zsav_compress_row+0x38>

000244d8 <zsav_read_compressed_data>:
   244d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   244dc:	mov	r3, #0
   244e0:	mov	r5, r0
   244e4:	strd	r6, [sp, #8]
   244e8:	mov	r2, #56	; 0x38
   244ec:	strd	r8, [sp, #16]
   244f0:	strd	sl, [sp, #24]
   244f4:	str	lr, [sp, #32]
   244f8:	sub	sp, sp, #148	; 0x94
   244fc:	add	r9, sp, #88	; 0x58
   24500:	ldr	r6, [r5, #36]	; 0x24
   24504:	mov	r0, r9
   24508:	str	r1, [sp, #4]
   2450c:	mov	r1, r3
   24510:	str	r3, [sp, #36]	; 0x24
   24514:	ldr	r7, [r5, #344]	; 0x158
   24518:	bl	4278 <memset@plt>
   2451c:	ldrb	ip, [r5, #436]	; 0x1b4
   24520:	add	r3, r5, #400	; 0x190
   24524:	mov	r1, #24
   24528:	add	r0, sp, #40	; 0x28
   2452c:	ldrd	r2, [r3, #-8]
   24530:	add	fp, r5, #416	; 0x1a0
   24534:	ldrd	sl, [fp]
   24538:	and	ip, ip, #1
   2453c:	strd	r2, [sp, #104]	; 0x68
   24540:	ldr	r3, [r6, #12]
   24544:	strd	sl, [sp, #112]	; 0x70
   24548:	str	ip, [sp, #132]	; 0x84
   2454c:	ldr	r2, [r6, #20]
   24550:	blx	r3
   24554:	cmp	r0, #23
   24558:	bls	24660 <zsav_read_compressed_data+0x188>
   2455c:	ldrb	r3, [r5, #436]	; 0x1b4
   24560:	ldrd	sl, [sp, #40]	; 0x28
   24564:	tst	r3, #1
   24568:	bne	2468c <zsav_read_compressed_data+0x1b4>
   2456c:	ldrd	r2, [sp, #48]	; 0x30
   24570:	strd	r2, [sp, #48]	; 0x30
   24574:	ldrd	r2, [sp, #56]	; 0x38
   24578:	mov	r1, #1
   2457c:	mov	r0, #0
   24580:	strd	r2, [sp, #56]	; 0x38
   24584:	ldr	r3, [r6, #8]
   24588:	ldr	r2, [r6, #20]
   2458c:	blx	r3
   24590:	mov	r1, #0
   24594:	sub	r0, r0, #24
   24598:	cmp	fp, r1
   2459c:	cmpeq	sl, r0
   245a0:	bne	24684 <zsav_read_compressed_data+0x1ac>
   245a4:	mov	r1, #0
   245a8:	ldr	r3, [r6, #8]
   245ac:	ldr	r2, [r6, #20]
   245b0:	ldr	r0, [sp, #48]	; 0x30
   245b4:	ldr	r8, [sp, #56]	; 0x38
   245b8:	ldr	sl, [sp, #60]	; 0x3c
   245bc:	blx	r3
   245c0:	cmn	r0, #1
   245c4:	beq	2472c <zsav_read_compressed_data+0x254>
   245c8:	mov	r1, #24
   245cc:	add	r0, sp, #64	; 0x40
   245d0:	ldr	r3, [r6, #12]
   245d4:	ldr	r2, [r6, #20]
   245d8:	blx	r3
   245dc:	cmp	r0, #23
   245e0:	bls	24660 <zsav_read_compressed_data+0x188>
   245e4:	ldrb	r3, [r5, #436]	; 0x1b4
   245e8:	ldrd	r0, [sp, #64]	; 0x40
   245ec:	tst	r3, #1
   245f0:	bne	24950 <zsav_read_compressed_data+0x478>
   245f4:	ldrd	r0, [sp, #72]	; 0x48
   245f8:	strd	r0, [sp, #72]	; 0x48
   245fc:	ldr	r0, [sp, #80]	; 0x50
   24600:	str	r0, [sp, #80]	; 0x50
   24604:	ldr	fp, [sp, #84]	; 0x54
   24608:	subs	r0, r8, #24
   2460c:	mov	r2, #24
   24610:	sbc	r1, sl, #0
   24614:	mov	r3, #0
   24618:	bl	25240 <__aeabi_uldivmod>
   2461c:	cmp	fp, r0
   24620:	mov	r8, r0
   24624:	str	r0, [sp, #16]
   24628:	str	fp, [sp, #84]	; 0x54
   2462c:	bne	24684 <zsav_read_compressed_data+0x1ac>
   24630:	add	sl, fp, fp, lsl #1
   24634:	cmp	fp, #0
   24638:	lsl	r7, r7, #3
   2463c:	lsl	sl, sl, #3
   24640:	bne	246f0 <zsav_read_compressed_data+0x218>
   24644:	mov	r1, sl
   24648:	mov	r0, fp
   2464c:	ldr	r3, [r6, #12]
   24650:	ldr	r2, [r6, #20]
   24654:	blx	r3
   24658:	cmp	sl, r0
   2465c:	bls	24a40 <zsav_read_compressed_data+0x568>
   24660:	mov	fp, #2
   24664:	mov	r0, fp
   24668:	add	sp, sp, #148	; 0x94
   2466c:	ldrd	r4, [sp]
   24670:	ldrd	r6, [sp, #8]
   24674:	ldrd	r8, [sp, #16]
   24678:	ldrd	sl, [sp, #24]
   2467c:	add	sp, sp, #32
   24680:	pop	{pc}		; (ldr pc, [sp], #4)
   24684:	mov	fp, #5
   24688:	b	24664 <zsav_read_compressed_data+0x18c>
   2468c:	mov	r0, sl
   24690:	mov	r1, fp
   24694:	bl	3d50 <byteswap8@plt>
   24698:	ldrb	ip, [r5, #436]	; 0x1b4
   2469c:	strd	r0, [sp, #40]	; 0x28
   246a0:	ldrd	r2, [sp, #48]	; 0x30
   246a4:	tst	ip, #1
   246a8:	moveq	sl, r0
   246ac:	moveq	fp, r1
   246b0:	beq	24570 <zsav_read_compressed_data+0x98>
   246b4:	mov	r0, r2
   246b8:	mov	r1, r3
   246bc:	bl	3d50 <byteswap8@plt>
   246c0:	ldrb	ip, [r5, #436]	; 0x1b4
   246c4:	strd	r0, [sp, #48]	; 0x30
   246c8:	ldrd	r2, [sp, #56]	; 0x38
   246cc:	tst	ip, #1
   246d0:	beq	246e8 <zsav_read_compressed_data+0x210>
   246d4:	mov	r0, r2
   246d8:	mov	r1, r3
   246dc:	bl	3d50 <byteswap8@plt>
   246e0:	mov	r2, r0
   246e4:	mov	r3, r1
   246e8:	ldrd	sl, [sp, #40]	; 0x28
   246ec:	b	24578 <zsav_read_compressed_data+0xa0>
   246f0:	mov	r0, sl
   246f4:	bl	4200 <readstat_malloc@plt>
   246f8:	subs	r3, r0, #0
   246fc:	str	r3, [sp, #12]
   24700:	beq	24a80 <zsav_read_compressed_data+0x5a8>
   24704:	mov	r1, sl
   24708:	ldr	r3, [r6, #12]
   2470c:	ldr	r2, [r6, #20]
   24710:	blx	r3
   24714:	cmp	sl, r0
   24718:	bls	24734 <zsav_read_compressed_data+0x25c>
   2471c:	ldr	r0, [sp, #12]
   24720:	mov	fp, #2
   24724:	bl	3e94 <free@plt>
   24728:	b	24664 <zsav_read_compressed_data+0x18c>
   2472c:	mov	fp, #15
   24730:	b	24664 <zsav_read_compressed_data+0x18c>
   24734:	cmp	r8, #0
   24738:	ble	247dc <zsav_read_compressed_data+0x304>
   2473c:	ldr	r3, [sp, #12]
   24740:	add	r4, sl, r3
   24744:	mov	sl, r3
   24748:	b	24770 <zsav_read_compressed_data+0x298>
   2474c:	ldrd	r0, [sl, #8]
   24750:	strd	r0, [sl, #8]
   24754:	ldr	r0, [sl, #16]
   24758:	str	r0, [sl, #16]
   2475c:	ldr	r0, [sl, #20]
   24760:	add	sl, sl, #24
   24764:	str	r0, [sl, #-4]
   24768:	cmp	r4, sl
   2476c:	beq	247dc <zsav_read_compressed_data+0x304>
   24770:	ldrb	r3, [r5, #436]	; 0x1b4
   24774:	ldrd	r0, [sl]
   24778:	tst	r3, #1
   2477c:	beq	2474c <zsav_read_compressed_data+0x274>
   24780:	bl	3d50 <byteswap8@plt>
   24784:	ldrb	r3, [r5, #436]	; 0x1b4
   24788:	strd	r0, [sl]
   2478c:	ldrd	r0, [sl, #8]
   24790:	tst	r3, #1
   24794:	beq	24750 <zsav_read_compressed_data+0x278>
   24798:	bl	3d50 <byteswap8@plt>
   2479c:	ldrb	r3, [r5, #436]	; 0x1b4
   247a0:	strd	r0, [sl, #8]
   247a4:	ldr	r0, [sl, #16]
   247a8:	tst	r3, #1
   247ac:	beq	24758 <zsav_read_compressed_data+0x280>
   247b0:	bl	3d68 <byteswap4@plt>
   247b4:	ldrb	r3, [r5, #436]	; 0x1b4
   247b8:	str	r0, [sl, #16]
   247bc:	ldr	r0, [sl, #20]
   247c0:	tst	r3, #1
   247c4:	beq	24760 <zsav_read_compressed_data+0x288>
   247c8:	bl	3d68 <byteswap4@plt>
   247cc:	add	sl, sl, #24
   247d0:	str	r0, [sl, #-4]
   247d4:	cmp	r4, sl
   247d8:	bne	24770 <zsav_read_compressed_data+0x298>
   247dc:	cmp	r7, #0
   247e0:	moveq	sl, r7
   247e4:	bne	24a1c <zsav_read_compressed_data+0x544>
   247e8:	ldr	fp, [sp, #12]
   247ec:	mov	r4, #0
   247f0:	add	r3, sp, #36	; 0x24
   247f4:	mov	r8, r4
   247f8:	str	r4, [sp, #8]
   247fc:	str	r6, [sp, #20]
   24800:	str	r3, [sp, #24]
   24804:	str	r4, [sp, #28]
   24808:	ldr	r6, [sp, #20]
   2480c:	mov	r1, #0
   24810:	ldr	r0, [fp, #8]
   24814:	ldr	r3, [r6, #8]
   24818:	ldr	r2, [r6, #20]
   2481c:	blx	r3
   24820:	cmn	r0, #1
   24824:	beq	24a88 <zsav_read_compressed_data+0x5b0>
   24828:	ldr	r0, [sp, #8]
   2482c:	ldr	r1, [fp, #20]
   24830:	bl	42b4 <readstat_realloc@plt>
   24834:	subs	r3, r0, #0
   24838:	str	r3, [sp, #8]
   2483c:	beq	24a70 <zsav_read_compressed_data+0x598>
   24840:	ldr	r3, [r6, #12]
   24844:	ldr	r2, [r6, #20]
   24848:	ldr	r1, [fp, #20]
   2484c:	blx	r3
   24850:	ldr	r3, [fp, #20]
   24854:	cmp	r0, r3
   24858:	bne	24a90 <zsav_read_compressed_data+0x5b8>
   2485c:	ldr	r3, [fp, #16]
   24860:	mov	r0, r8
   24864:	mov	r1, r3
   24868:	str	r3, [sp, #36]	; 0x24
   2486c:	bl	42b4 <readstat_realloc@plt>
   24870:	subs	r8, r0, #0
   24874:	beq	24a70 <zsav_read_compressed_data+0x598>
   24878:	ldr	r2, [sp, #8]
   2487c:	ldr	r3, [fp, #20]
   24880:	ldr	r1, [sp, #24]
   24884:	bl	3f6c <uncompress@plt>
   24888:	subs	r6, r0, #0
   2488c:	bne	24a78 <zsav_read_compressed_data+0x5a0>
   24890:	ldr	r1, [fp, #16]
   24894:	ldr	r2, [sp, #36]	; 0x24
   24898:	cmp	r1, r2
   2489c:	bne	24a78 <zsav_read_compressed_data+0x5a0>
   248a0:	mov	r1, #1
   248a4:	mov	r3, r4
   248a8:	mov	r4, fp
   248ac:	ldr	fp, [sp, #4]
   248b0:	str	r1, [sp, #136]	; 0x88
   248b4:	b	248ec <zsav_read_compressed_data+0x414>
   248b8:	ldr	r3, [sp, #100]	; 0x64
   248bc:	sub	r3, r7, r3
   248c0:	cmp	r0, #3
   248c4:	beq	249a8 <zsav_read_compressed_data+0x4d0>
   248c8:	ldr	r2, [r5, #356]	; 0x164
   248cc:	cmp	r2, #0
   248d0:	ble	248e0 <zsav_read_compressed_data+0x408>
   248d4:	ldr	r1, [r5, #364]	; 0x16c
   248d8:	cmp	r2, r1
   248dc:	beq	249a8 <zsav_read_compressed_data+0x4d0>
   248e0:	cmp	r0, #0
   248e4:	beq	249f0 <zsav_read_compressed_data+0x518>
   248e8:	ldr	r2, [sp, #36]	; 0x24
   248ec:	sub	r2, r2, r6
   248f0:	add	r1, sl, r3
   248f4:	add	r6, r8, r6
   248f8:	sub	r3, r7, r3
   248fc:	mov	r0, r9
   24900:	str	r6, [sp, #88]	; 0x58
   24904:	str	r2, [sp, #92]	; 0x5c
   24908:	str	r1, [sp, #96]	; 0x60
   2490c:	str	r3, [sp, #100]	; 0x64
   24910:	bl	41e8 <sav_decompress_row@plt>
   24914:	ldr	r6, [sp, #36]	; 0x24
   24918:	ldr	r0, [sp, #136]	; 0x88
   2491c:	ldr	r3, [sp, #92]	; 0x5c
   24920:	cmp	r0, #2
   24924:	sub	r6, r6, r3
   24928:	bne	248b8 <zsav_read_compressed_data+0x3e0>
   2492c:	mov	r2, r5
   24930:	mov	r1, r7
   24934:	mov	r0, sl
   24938:	blx	fp
   2493c:	mov	r3, r0
   24940:	cmp	r0, #0
   24944:	bne	24a14 <zsav_read_compressed_data+0x53c>
   24948:	ldr	r0, [sp, #136]	; 0x88
   2494c:	b	248c0 <zsav_read_compressed_data+0x3e8>
   24950:	bl	3d50 <byteswap8@plt>
   24954:	ldrb	r3, [r5, #436]	; 0x1b4
   24958:	strd	r0, [sp, #64]	; 0x40
   2495c:	ldrd	r0, [sp, #72]	; 0x48
   24960:	tst	r3, #1
   24964:	beq	245f8 <zsav_read_compressed_data+0x120>
   24968:	bl	3d50 <byteswap8@plt>
   2496c:	ldrb	r3, [r5, #436]	; 0x1b4
   24970:	strd	r0, [sp, #72]	; 0x48
   24974:	ldr	r0, [sp, #80]	; 0x50
   24978:	tst	r3, #1
   2497c:	beq	24600 <zsav_read_compressed_data+0x128>
   24980:	bl	3d68 <byteswap4@plt>
   24984:	ldrb	r3, [r5, #436]	; 0x1b4
   24988:	str	r0, [sp, #80]	; 0x50
   2498c:	ldr	fp, [sp, #84]	; 0x54
   24990:	tst	r3, #1
   24994:	beq	24608 <zsav_read_compressed_data+0x130>
   24998:	mov	r0, fp
   2499c:	bl	3d68 <byteswap4@plt>
   249a0:	mov	fp, r0
   249a4:	b	24608 <zsav_read_compressed_data+0x130>
   249a8:	mov	fp, #0
   249ac:	cmp	sl, #0
   249b0:	beq	249bc <zsav_read_compressed_data+0x4e4>
   249b4:	mov	r0, sl
   249b8:	bl	3e94 <free@plt>
   249bc:	ldr	r0, [sp, #12]
   249c0:	cmp	r0, #0
   249c4:	beq	249cc <zsav_read_compressed_data+0x4f4>
   249c8:	bl	3e94 <free@plt>
   249cc:	ldr	r0, [sp, #8]
   249d0:	cmp	r0, #0
   249d4:	beq	249dc <zsav_read_compressed_data+0x504>
   249d8:	bl	3e94 <free@plt>
   249dc:	cmp	r8, #0
   249e0:	beq	24664 <zsav_read_compressed_data+0x18c>
   249e4:	mov	r0, r8
   249e8:	bl	3e94 <free@plt>
   249ec:	b	24664 <zsav_read_compressed_data+0x18c>
   249f0:	mov	fp, r4
   249f4:	mov	r4, r3
   249f8:	ldr	r2, [sp, #16]
   249fc:	add	fp, fp, #24
   24a00:	ldr	r3, [sp, #28]
   24a04:	add	r3, r3, #1
   24a08:	cmp	r2, r3
   24a0c:	str	r3, [sp, #28]
   24a10:	bne	24808 <zsav_read_compressed_data+0x330>
   24a14:	mov	fp, r0
   24a18:	b	249ac <zsav_read_compressed_data+0x4d4>
   24a1c:	mov	r0, r7
   24a20:	bl	4200 <readstat_malloc@plt>
   24a24:	subs	sl, r0, #0
   24a28:	beq	24a60 <zsav_read_compressed_data+0x588>
   24a2c:	cmp	r8, #0
   24a30:	bne	247e8 <zsav_read_compressed_data+0x310>
   24a34:	mov	fp, r8
   24a38:	str	r8, [sp, #8]
   24a3c:	b	249b4 <zsav_read_compressed_data+0x4dc>
   24a40:	cmp	r7, #0
   24a44:	beq	24664 <zsav_read_compressed_data+0x18c>
   24a48:	mov	r0, r7
   24a4c:	bl	4200 <readstat_malloc@plt>
   24a50:	subs	sl, r0, #0
   24a54:	beq	24a80 <zsav_read_compressed_data+0x5a8>
   24a58:	str	r8, [sp, #12]
   24a5c:	b	24a2c <zsav_read_compressed_data+0x554>
   24a60:	ldr	r0, [sp, #12]
   24a64:	mov	fp, #3
   24a68:	bl	3e94 <free@plt>
   24a6c:	b	24664 <zsav_read_compressed_data+0x18c>
   24a70:	mov	fp, #3
   24a74:	b	249ac <zsav_read_compressed_data+0x4d4>
   24a78:	mov	fp, #5
   24a7c:	b	249ac <zsav_read_compressed_data+0x4d4>
   24a80:	mov	fp, #3
   24a84:	b	24664 <zsav_read_compressed_data+0x18c>
   24a88:	mov	fp, #15
   24a8c:	b	249ac <zsav_read_compressed_data+0x4d4>
   24a90:	mov	fp, #2
   24a94:	b	249ac <zsav_read_compressed_data+0x4d4>

00024a98 <zsav_write_compressed_row>:
   24a98:	strd	r4, [sp, #-16]!
   24a9c:	mov	r3, r0
   24aa0:	mov	r4, r0
   24aa4:	ldr	r5, [r0, #300]	; 0x12c
   24aa8:	ldr	r0, [r5]
   24aac:	str	r6, [sp, #8]
   24ab0:	str	lr, [sp, #12]
   24ab4:	bl	4434 <sav_compress_row@plt>
   24ab8:	ldr	ip, [r4, #80]	; 0x50
   24abc:	mov	r1, r0
   24ac0:	mov	r3, r5
   24ac4:	ldr	r2, [r4, #84]	; 0x54
   24ac8:	ldr	r0, [r5]
   24acc:	add	r2, r2, #1
   24ad0:	sub	r2, r2, ip
   24ad4:	clz	r2, r2
   24ad8:	lsr	r2, r2, #5
   24adc:	bl	4488 <zsav_compress_row@plt>
   24ae0:	cmp	r0, #1
   24ae4:	ldrd	r4, [sp]
   24ae8:	movhi	r0, #13
   24aec:	movls	r0, #0
   24af0:	ldr	r6, [sp, #8]
   24af4:	add	sp, sp, #12
   24af8:	pop	{pc}		; (ldr pc, [sp], #4)

00024afc <zsav_end_data>:
   24afc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24b00:	mov	r5, r0
   24b04:	ldr	r4, [r0, #300]	; 0x12c
   24b08:	ldr	r1, [r4, #8]
   24b0c:	ldr	r3, [r4, #24]
   24b10:	ldr	r0, [r4, #28]
   24b14:	add	r2, r1, #1
   24b18:	strd	r6, [sp, #8]
   24b1c:	add	r2, r2, r2, lsl #1
   24b20:	strd	r8, [sp, #16]
   24b24:	strd	sl, [sp, #24]
   24b28:	adds	r6, r3, #24
   24b2c:	lsl	r2, r2, #3
   24b30:	str	lr, [sp, #32]
   24b34:	sub	sp, sp, #60	; 0x3c
   24b38:	adc	r7, r0, #0
   24b3c:	cmp	r1, #0
   24b40:	str	r3, [sp, #32]
   24b44:	asr	r3, r2, #31
   24b48:	str	r0, [sp, #36]	; 0x24
   24b4c:	strd	r6, [sp, #40]	; 0x28
   24b50:	strd	r2, [sp, #48]	; 0x30
   24b54:	ble	24b7c <zsav_end_data+0x80>
   24b58:	ldr	r3, [r4, #4]
   24b5c:	add	r1, r3, r1, lsl #2
   24b60:	ldr	r2, [r3], #4
   24b64:	ldr	r2, [r2, #4]
   24b68:	adds	r6, r6, r2
   24b6c:	adc	r7, r7, r2, asr #31
   24b70:	cmp	r1, r3
   24b74:	bne	24b60 <zsav_end_data+0x64>
   24b78:	strd	r6, [sp, #40]	; 0x28
   24b7c:	add	sl, sp, #32
   24b80:	mov	r2, #8
   24b84:	mov	r1, sl
   24b88:	mov	r0, r5
   24b8c:	bl	4428 <readstat_write_bytes@plt>
   24b90:	subs	r6, r0, #0
   24b94:	beq	24bb8 <zsav_end_data+0xbc>
   24b98:	mov	r0, r6
   24b9c:	add	sp, sp, #60	; 0x3c
   24ba0:	ldrd	r4, [sp]
   24ba4:	ldrd	r6, [sp, #8]
   24ba8:	ldrd	r8, [sp, #16]
   24bac:	ldrd	sl, [sp, #24]
   24bb0:	add	sp, sp, #32
   24bb4:	pop	{pc}		; (ldr pc, [sp], #4)
   24bb8:	add	r3, sp, #40	; 0x28
   24bbc:	mov	r2, #8
   24bc0:	mov	r1, r3
   24bc4:	mov	r0, r5
   24bc8:	str	r3, [sp, #4]
   24bcc:	bl	4428 <readstat_write_bytes@plt>
   24bd0:	subs	r6, r0, #0
   24bd4:	bne	24b98 <zsav_end_data+0x9c>
   24bd8:	add	r8, sp, #48	; 0x30
   24bdc:	mov	r2, #8
   24be0:	mov	r1, r8
   24be4:	mov	r0, r5
   24be8:	bl	4428 <readstat_write_bytes@plt>
   24bec:	subs	r6, r0, #0
   24bf0:	bne	24b98 <zsav_end_data+0x9c>
   24bf4:	ldr	r3, [r4, #8]
   24bf8:	cmp	r3, #0
   24bfc:	ble	24c34 <zsav_end_data+0x138>
   24c00:	mov	r9, r6
   24c04:	ldr	r3, [r4, #4]
   24c08:	mov	r0, r5
   24c0c:	ldr	r3, [r3, r9, lsl #2]
   24c10:	add	r9, r9, #1
   24c14:	ldr	r2, [r3, #4]
   24c18:	ldr	r1, [r3, #64]	; 0x40
   24c1c:	bl	4428 <readstat_write_bytes@plt>
   24c20:	subs	r6, r0, #0
   24c24:	bne	24b98 <zsav_end_data+0x9c>
   24c28:	ldr	r3, [r4, #8]
   24c2c:	cmp	r9, r3
   24c30:	blt	24c04 <zsav_end_data+0x108>
   24c34:	mov	r6, #0
   24c38:	mov	r7, #0
   24c3c:	str	r3, [sp, #12]
   24c40:	mov	r2, #8
   24c44:	add	r1, sp, #24
   24c48:	strd	r6, [sp, #32]
   24c4c:	mvn	r6, #99	; 0x63
   24c50:	mvn	r7, #0
   24c54:	ldr	r3, [r4, #16]
   24c58:	mov	r0, r5
   24c5c:	str	r3, [sp, #8]
   24c60:	strd	r6, [sp, #24]
   24c64:	bl	4428 <readstat_write_bytes@plt>
   24c68:	subs	r6, r0, #0
   24c6c:	bne	24b98 <zsav_end_data+0x9c>
   24c70:	mov	r1, sl
   24c74:	mov	r2, #8
   24c78:	mov	r0, r5
   24c7c:	bl	4428 <readstat_write_bytes@plt>
   24c80:	subs	r6, r0, #0
   24c84:	bne	24b98 <zsav_end_data+0x9c>
   24c88:	mov	r2, #4
   24c8c:	add	r1, sp, #8
   24c90:	mov	r0, r5
   24c94:	bl	4428 <readstat_write_bytes@plt>
   24c98:	subs	r6, r0, #0
   24c9c:	bne	24b98 <zsav_end_data+0x9c>
   24ca0:	mov	r2, #4
   24ca4:	add	r1, sp, #12
   24ca8:	mov	r0, r5
   24cac:	bl	4428 <readstat_write_bytes@plt>
   24cb0:	subs	r6, r0, #0
   24cb4:	bne	24b98 <zsav_end_data+0x9c>
   24cb8:	ldr	r1, [r4, #8]
   24cbc:	ldr	r3, [r4, #24]
   24cc0:	ldr	r2, [r4, #28]
   24cc4:	adds	r0, r3, #24
   24cc8:	str	r3, [sp, #40]	; 0x28
   24ccc:	adc	r3, r2, #0
   24cd0:	cmp	r1, #0
   24cd4:	str	r2, [sp, #44]	; 0x2c
   24cd8:	str	r0, [sp, #48]	; 0x30
   24cdc:	str	r3, [sp, #52]	; 0x34
   24ce0:	ble	24b98 <zsav_end_data+0x9c>
   24ce4:	mov	r9, r6
   24ce8:	add	r7, sp, #16
   24cec:	b	24d5c <zsav_end_data+0x260>
   24cf0:	bl	4428 <readstat_write_bytes@plt>
   24cf4:	subs	r3, r0, #0
   24cf8:	mov	r2, #4
   24cfc:	mov	r1, r7
   24d00:	mov	r0, r5
   24d04:	bne	24d9c <zsav_end_data+0x2a0>
   24d08:	bl	4428 <readstat_write_bytes@plt>
   24d0c:	subs	r3, r0, #0
   24d10:	mov	r2, #4
   24d14:	add	r1, sp, #20
   24d18:	mov	r0, r5
   24d1c:	bne	24d9c <zsav_end_data+0x2a0>
   24d20:	bl	4428 <readstat_write_bytes@plt>
   24d24:	cmp	r0, #0
   24d28:	bne	24da4 <zsav_end_data+0x2a8>
   24d2c:	ldrd	r0, [sp, #16]
   24d30:	ldrd	r2, [sp, #40]	; 0x28
   24d34:	adds	sl, r2, r0
   24d38:	adc	fp, r3, r0, asr #31
   24d3c:	ldrd	r2, [sp, #48]	; 0x30
   24d40:	ldr	r0, [r4, #8]
   24d44:	strd	sl, [sp, #40]	; 0x28
   24d48:	adds	r2, r2, r1
   24d4c:	adc	r3, r3, r1, asr #31
   24d50:	cmp	r9, r0
   24d54:	strd	r2, [sp, #48]	; 0x30
   24d58:	bge	24b98 <zsav_end_data+0x9c>
   24d5c:	ldr	r3, [r4, #4]
   24d60:	mov	r2, #8
   24d64:	mov	r0, r5
   24d68:	ldr	r1, [sp, #4]
   24d6c:	ldr	r3, [r3, r9, lsl #2]
   24d70:	add	r9, r9, #1
   24d74:	ldr	ip, [r3]
   24d78:	ldr	r3, [r3, #4]
   24d7c:	str	ip, [sp, #16]
   24d80:	str	r3, [sp, #20]
   24d84:	bl	4428 <readstat_write_bytes@plt>
   24d88:	subs	r3, r0, #0
   24d8c:	mov	r2, #8
   24d90:	mov	r1, r8
   24d94:	mov	r0, r5
   24d98:	beq	24cf0 <zsav_end_data+0x1f4>
   24d9c:	mov	r6, r3
   24da0:	b	24b98 <zsav_end_data+0x9c>
   24da4:	mov	r6, r0
   24da8:	b	24b98 <zsav_end_data+0x9c>

00024dac <__aeabi_drsub>:
   24dac:	eor	r1, r1, #-2147483648	; 0x80000000
   24db0:	b	24db8 <__adddf3>

00024db4 <__aeabi_dsub>:
   24db4:	eor	r3, r3, #-2147483648	; 0x80000000

00024db8 <__adddf3>:
   24db8:	push	{r4, r5, lr}
   24dbc:	lsl	r4, r1, #1
   24dc0:	lsl	r5, r3, #1
   24dc4:	teq	r4, r5
   24dc8:	teqeq	r0, r2
   24dcc:	orrsne	ip, r4, r0
   24dd0:	orrsne	ip, r5, r2
   24dd4:	mvnsne	ip, r4, asr #21
   24dd8:	mvnsne	ip, r5, asr #21
   24ddc:	beq	24fc8 <__adddf3+0x210>
   24de0:	lsr	r4, r4, #21
   24de4:	rsbs	r5, r4, r5, lsr #21
   24de8:	rsblt	r5, r5, #0
   24dec:	ble	24e0c <__adddf3+0x54>
   24df0:	add	r4, r4, r5
   24df4:	eor	r2, r0, r2
   24df8:	eor	r3, r1, r3
   24dfc:	eor	r0, r2, r0
   24e00:	eor	r1, r3, r1
   24e04:	eor	r2, r0, r2
   24e08:	eor	r3, r1, r3
   24e0c:	cmp	r5, #54	; 0x36
   24e10:	pophi	{r4, r5, pc}
   24e14:	tst	r1, #-2147483648	; 0x80000000
   24e18:	lsl	r1, r1, #12
   24e1c:	mov	ip, #1048576	; 0x100000
   24e20:	orr	r1, ip, r1, lsr #12
   24e24:	beq	24e30 <__adddf3+0x78>
   24e28:	rsbs	r0, r0, #0
   24e2c:	rsc	r1, r1, #0
   24e30:	tst	r3, #-2147483648	; 0x80000000
   24e34:	lsl	r3, r3, #12
   24e38:	orr	r3, ip, r3, lsr #12
   24e3c:	beq	24e48 <__adddf3+0x90>
   24e40:	rsbs	r2, r2, #0
   24e44:	rsc	r3, r3, #0
   24e48:	teq	r4, r5
   24e4c:	beq	24fb0 <__adddf3+0x1f8>
   24e50:	sub	r4, r4, #1
   24e54:	rsbs	lr, r5, #32
   24e58:	blt	24e74 <__adddf3+0xbc>
   24e5c:	lsl	ip, r2, lr
   24e60:	adds	r0, r0, r2, lsr r5
   24e64:	adc	r1, r1, #0
   24e68:	adds	r0, r0, r3, lsl lr
   24e6c:	adcs	r1, r1, r3, asr r5
   24e70:	b	24e90 <__adddf3+0xd8>
   24e74:	sub	r5, r5, #32
   24e78:	add	lr, lr, #32
   24e7c:	cmp	r2, #1
   24e80:	lsl	ip, r3, lr
   24e84:	orrcs	ip, ip, #2
   24e88:	adds	r0, r0, r3, asr r5
   24e8c:	adcs	r1, r1, r3, asr #31
   24e90:	and	r5, r1, #-2147483648	; 0x80000000
   24e94:	bpl	24ea4 <__adddf3+0xec>
   24e98:	rsbs	ip, ip, #0
   24e9c:	rscs	r0, r0, #0
   24ea0:	rsc	r1, r1, #0
   24ea4:	cmp	r1, #1048576	; 0x100000
   24ea8:	bcc	24ee8 <__adddf3+0x130>
   24eac:	cmp	r1, #2097152	; 0x200000
   24eb0:	bcc	24ed0 <__adddf3+0x118>
   24eb4:	lsrs	r1, r1, #1
   24eb8:	rrxs	r0, r0
   24ebc:	rrx	ip, ip
   24ec0:	add	r4, r4, #1
   24ec4:	lsl	r2, r4, #21
   24ec8:	cmn	r2, #4194304	; 0x400000
   24ecc:	bcs	25028 <__adddf3+0x270>
   24ed0:	cmp	ip, #-2147483648	; 0x80000000
   24ed4:	lsrseq	ip, r0, #1
   24ed8:	adcs	r0, r0, #0
   24edc:	adc	r1, r1, r4, lsl #20
   24ee0:	orr	r1, r1, r5
   24ee4:	pop	{r4, r5, pc}
   24ee8:	lsls	ip, ip, #1
   24eec:	adcs	r0, r0, r0
   24ef0:	adc	r1, r1, r1
   24ef4:	tst	r1, #1048576	; 0x100000
   24ef8:	sub	r4, r4, #1
   24efc:	bne	24ed0 <__adddf3+0x118>
   24f00:	teq	r1, #0
   24f04:	moveq	r1, r0
   24f08:	moveq	r0, #0
   24f0c:	clz	r3, r1
   24f10:	addeq	r3, r3, #32
   24f14:	sub	r3, r3, #11
   24f18:	subs	r2, r3, #32
   24f1c:	bge	24f40 <__adddf3+0x188>
   24f20:	adds	r2, r2, #12
   24f24:	ble	24f3c <__adddf3+0x184>
   24f28:	add	ip, r2, #20
   24f2c:	rsb	r2, r2, #12
   24f30:	lsl	r0, r1, ip
   24f34:	lsr	r1, r1, r2
   24f38:	b	24f50 <__adddf3+0x198>
   24f3c:	add	r2, r2, #20
   24f40:	rsble	ip, r2, #32
   24f44:	lsl	r1, r1, r2
   24f48:	orrle	r1, r1, r0, lsr ip
   24f4c:	lslle	r0, r0, r2
   24f50:	subs	r4, r4, r3
   24f54:	addge	r1, r1, r4, lsl #20
   24f58:	orrge	r1, r1, r5
   24f5c:	popge	{r4, r5, pc}
   24f60:	mvn	r4, r4
   24f64:	subs	r4, r4, #31
   24f68:	bge	24fa4 <__adddf3+0x1ec>
   24f6c:	adds	r4, r4, #12
   24f70:	bgt	24f8c <__adddf3+0x1d4>
   24f74:	add	r4, r4, #20
   24f78:	rsb	r2, r4, #32
   24f7c:	lsr	r0, r0, r4
   24f80:	orr	r0, r0, r1, lsl r2
   24f84:	orr	r1, r5, r1, lsr r4
   24f88:	pop	{r4, r5, pc}
   24f8c:	rsb	r4, r4, #12
   24f90:	rsb	r2, r4, #32
   24f94:	lsr	r0, r0, r2
   24f98:	orr	r0, r0, r1, lsl r4
   24f9c:	mov	r1, r5
   24fa0:	pop	{r4, r5, pc}
   24fa4:	lsr	r0, r1, r4
   24fa8:	mov	r1, r5
   24fac:	pop	{r4, r5, pc}
   24fb0:	teq	r4, #0
   24fb4:	eor	r3, r3, #1048576	; 0x100000
   24fb8:	eoreq	r1, r1, #1048576	; 0x100000
   24fbc:	addeq	r4, r4, #1
   24fc0:	subne	r5, r5, #1
   24fc4:	b	24e50 <__adddf3+0x98>
   24fc8:	mvns	ip, r4, asr #21
   24fcc:	mvnsne	ip, r5, asr #21
   24fd0:	beq	25038 <__adddf3+0x280>
   24fd4:	teq	r4, r5
   24fd8:	teqeq	r0, r2
   24fdc:	beq	24ff0 <__adddf3+0x238>
   24fe0:	orrs	ip, r4, r0
   24fe4:	moveq	r1, r3
   24fe8:	moveq	r0, r2
   24fec:	pop	{r4, r5, pc}
   24ff0:	teq	r1, r3
   24ff4:	movne	r1, #0
   24ff8:	movne	r0, #0
   24ffc:	popne	{r4, r5, pc}
   25000:	lsrs	ip, r4, #21
   25004:	bne	25018 <__adddf3+0x260>
   25008:	lsls	r0, r0, #1
   2500c:	adcs	r1, r1, r1
   25010:	orrcs	r1, r1, #-2147483648	; 0x80000000
   25014:	pop	{r4, r5, pc}
   25018:	adds	r4, r4, #4194304	; 0x400000
   2501c:	addcc	r1, r1, #1048576	; 0x100000
   25020:	popcc	{r4, r5, pc}
   25024:	and	r5, r1, #-2147483648	; 0x80000000
   25028:	orr	r1, r5, #2130706432	; 0x7f000000
   2502c:	orr	r1, r1, #15728640	; 0xf00000
   25030:	mov	r0, #0
   25034:	pop	{r4, r5, pc}
   25038:	mvns	ip, r4, asr #21
   2503c:	movne	r1, r3
   25040:	movne	r0, r2
   25044:	mvnseq	ip, r5, asr #21
   25048:	movne	r3, r1
   2504c:	movne	r2, r0
   25050:	orrs	r4, r0, r1, lsl #12
   25054:	orrseq	r5, r2, r3, lsl #12
   25058:	teqeq	r1, r3
   2505c:	orrne	r1, r1, #524288	; 0x80000
   25060:	pop	{r4, r5, pc}

00025064 <__aeabi_ui2d>:
   25064:	teq	r0, #0
   25068:	moveq	r1, #0
   2506c:	bxeq	lr
   25070:	push	{r4, r5, lr}
   25074:	mov	r4, #1024	; 0x400
   25078:	add	r4, r4, #50	; 0x32
   2507c:	mov	r5, #0
   25080:	mov	r1, #0
   25084:	b	24f00 <__adddf3+0x148>

00025088 <__aeabi_i2d>:
   25088:	teq	r0, #0
   2508c:	moveq	r1, #0
   25090:	bxeq	lr
   25094:	push	{r4, r5, lr}
   25098:	mov	r4, #1024	; 0x400
   2509c:	add	r4, r4, #50	; 0x32
   250a0:	ands	r5, r0, #-2147483648	; 0x80000000
   250a4:	rsbmi	r0, r0, #0
   250a8:	mov	r1, #0
   250ac:	b	24f00 <__adddf3+0x148>

000250b0 <__aeabi_f2d>:
   250b0:	lsls	r2, r0, #1
   250b4:	asr	r1, r2, #3
   250b8:	rrx	r1, r1
   250bc:	lsl	r0, r2, #28
   250c0:	andsne	r3, r2, #-16777216	; 0xff000000
   250c4:	teqne	r3, #-16777216	; 0xff000000
   250c8:	eorne	r1, r1, #939524096	; 0x38000000
   250cc:	bxne	lr
   250d0:	bics	r2, r2, #-16777216	; 0xff000000
   250d4:	bxeq	lr
   250d8:	teq	r3, #-16777216	; 0xff000000
   250dc:	orreq	r1, r1, #524288	; 0x80000
   250e0:	bxeq	lr
   250e4:	push	{r4, r5, lr}
   250e8:	mov	r4, #896	; 0x380
   250ec:	and	r5, r1, #-2147483648	; 0x80000000
   250f0:	bic	r1, r1, #-2147483648	; 0x80000000
   250f4:	b	24f00 <__adddf3+0x148>

000250f8 <__aeabi_ul2d>:
   250f8:	orrs	r2, r0, r1
   250fc:	bxeq	lr
   25100:	push	{r4, r5, lr}
   25104:	mov	r5, #0
   25108:	b	25128 <__aeabi_l2d+0x1c>

0002510c <__aeabi_l2d>:
   2510c:	orrs	r2, r0, r1
   25110:	bxeq	lr
   25114:	push	{r4, r5, lr}
   25118:	ands	r5, r1, #-2147483648	; 0x80000000
   2511c:	bpl	25128 <__aeabi_l2d+0x1c>
   25120:	rsbs	r0, r0, #0
   25124:	rsc	r1, r1, #0
   25128:	mov	r4, #1024	; 0x400
   2512c:	add	r4, r4, #50	; 0x32
   25130:	lsrs	ip, r1, #22
   25134:	beq	24ea4 <__adddf3+0xec>
   25138:	mov	r2, #3
   2513c:	lsrs	ip, ip, #3
   25140:	addne	r2, r2, #3
   25144:	lsrs	ip, ip, #3
   25148:	addne	r2, r2, #3
   2514c:	add	r2, r2, ip, lsr #3
   25150:	rsb	r3, r2, #32
   25154:	lsl	ip, r0, r3
   25158:	lsr	r0, r0, r2
   2515c:	orr	r0, r0, r1, lsl r3
   25160:	lsr	r1, r1, r2
   25164:	add	r4, r4, r2
   25168:	b	24ea4 <__adddf3+0xec>

0002516c <__aeabi_ldivmod>:
   2516c:	cmp	r3, #0
   25170:	cmpeq	r2, #0
   25174:	bne	25198 <__aeabi_ldivmod+0x2c>
   25178:	cmp	r1, #0
   2517c:	movlt	r1, #-2147483648	; 0x80000000
   25180:	movlt	r0, #0
   25184:	blt	25194 <__aeabi_ldivmod+0x28>
   25188:	cmpeq	r0, #0
   2518c:	mvnne	r1, #-2147483648	; 0x80000000
   25190:	mvnne	r0, #0
   25194:	b	2527c <__aeabi_idiv0>
   25198:	sub	sp, sp, #8
   2519c:	push	{sp, lr}
   251a0:	cmp	r1, #0
   251a4:	blt	251c4 <__aeabi_ldivmod+0x58>
   251a8:	cmp	r3, #0
   251ac:	blt	251f8 <__aeabi_ldivmod+0x8c>
   251b0:	bl	252f8 <__udivmoddi4>
   251b4:	ldr	lr, [sp, #4]
   251b8:	add	sp, sp, #8
   251bc:	pop	{r2, r3}
   251c0:	bx	lr
   251c4:	rsbs	r0, r0, #0
   251c8:	sbc	r1, r1, r1, lsl #1
   251cc:	cmp	r3, #0
   251d0:	blt	2521c <__aeabi_ldivmod+0xb0>
   251d4:	bl	252f8 <__udivmoddi4>
   251d8:	ldr	lr, [sp, #4]
   251dc:	add	sp, sp, #8
   251e0:	pop	{r2, r3}
   251e4:	rsbs	r0, r0, #0
   251e8:	sbc	r1, r1, r1, lsl #1
   251ec:	rsbs	r2, r2, #0
   251f0:	sbc	r3, r3, r3, lsl #1
   251f4:	bx	lr
   251f8:	rsbs	r2, r2, #0
   251fc:	sbc	r3, r3, r3, lsl #1
   25200:	bl	252f8 <__udivmoddi4>
   25204:	ldr	lr, [sp, #4]
   25208:	add	sp, sp, #8
   2520c:	pop	{r2, r3}
   25210:	rsbs	r0, r0, #0
   25214:	sbc	r1, r1, r1, lsl #1
   25218:	bx	lr
   2521c:	rsbs	r2, r2, #0
   25220:	sbc	r3, r3, r3, lsl #1
   25224:	bl	252f8 <__udivmoddi4>
   25228:	ldr	lr, [sp, #4]
   2522c:	add	sp, sp, #8
   25230:	pop	{r2, r3}
   25234:	rsbs	r2, r2, #0
   25238:	sbc	r3, r3, r3, lsl #1
   2523c:	bx	lr

00025240 <__aeabi_uldivmod>:
   25240:	cmp	r3, #0
   25244:	cmpeq	r2, #0
   25248:	bne	25260 <__aeabi_uldivmod+0x20>
   2524c:	cmp	r1, #0
   25250:	cmpeq	r0, #0
   25254:	mvnne	r1, #0
   25258:	mvnne	r0, #0
   2525c:	b	2527c <__aeabi_idiv0>
   25260:	sub	sp, sp, #8
   25264:	push	{sp, lr}
   25268:	bl	252f8 <__udivmoddi4>
   2526c:	ldr	lr, [sp, #4]
   25270:	add	sp, sp, #8
   25274:	pop	{r2, r3}
   25278:	bx	lr

0002527c <__aeabi_idiv0>:
   2527c:	push	{r1, lr}
   25280:	mov	r0, #8
   25284:	bl	3d5c <raise@plt>
   25288:	pop	{r1, pc}

0002528c <__aeabi_d2lz>:
   2528c:	vmov	d7, r0, r1
   25290:	vcmpe.f64	d7, #0.0
   25294:	vmrs	APSR_nzcv, fpscr
   25298:	bmi	252a0 <__aeabi_d2lz+0x14>
   2529c:	b	252b8 <__aeabi_d2ulz>
   252a0:	push	{r4, lr}
   252a4:	eor	r1, r1, #-2147483648	; 0x80000000
   252a8:	bl	252b8 <__aeabi_d2ulz>
   252ac:	rsbs	r0, r0, #0
   252b0:	rsc	r1, r1, #0
   252b4:	pop	{r4, pc}

000252b8 <__aeabi_d2ulz>:
   252b8:	vmov	d6, r0, r1
   252bc:	vldr	d7, [pc, #36]	; 252e8 <__aeabi_d2ulz+0x30>
   252c0:	vldr	d5, [pc, #40]	; 252f0 <__aeabi_d2ulz+0x38>
   252c4:	vmul.f64	d7, d6, d7
   252c8:	vcvt.u32.f64	s14, d7
   252cc:	vcvt.f64.u32	d4, s14
   252d0:	vmov	r1, s14
   252d4:	vmls.f64	d6, d4, d5
   252d8:	vcvt.u32.f64	s15, d6
   252dc:	vmov	r0, s15
   252e0:	bx	lr
   252e4:	nop			; (mov r0, r0)
   252e8:	.word	0x00000000
   252ec:	.word	0x3df00000
   252f0:	.word	0x00000000
   252f4:	.word	0x41f00000

000252f8 <__udivmoddi4>:
   252f8:	cmp	r1, r3
   252fc:	cmpeq	r0, r2
   25300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25304:	mov	r4, r0
   25308:	movcc	r0, #0
   2530c:	mov	r5, r1
   25310:	ldr	lr, [sp, #36]	; 0x24
   25314:	movcc	r1, r0
   25318:	bcc	25414 <__udivmoddi4+0x11c>
   2531c:	cmp	r3, #0
   25320:	clzeq	ip, r2
   25324:	clzne	ip, r3
   25328:	addeq	ip, ip, #32
   2532c:	cmp	r5, #0
   25330:	clzeq	r1, r4
   25334:	addeq	r1, r1, #32
   25338:	clzne	r1, r5
   2533c:	sub	ip, ip, r1
   25340:	sub	sl, ip, #32
   25344:	lsl	r9, r3, ip
   25348:	rsb	fp, ip, #32
   2534c:	orr	r9, r9, r2, lsl sl
   25350:	orr	r9, r9, r2, lsr fp
   25354:	lsl	r8, r2, ip
   25358:	cmp	r5, r9
   2535c:	cmpeq	r4, r8
   25360:	movcc	r0, #0
   25364:	movcc	r1, r0
   25368:	bcc	25384 <__udivmoddi4+0x8c>
   2536c:	mov	r0, #1
   25370:	subs	r4, r4, r8
   25374:	lsl	r1, r0, sl
   25378:	orr	r1, r1, r0, lsr fp
   2537c:	lsl	r0, r0, ip
   25380:	sbc	r5, r5, r9
   25384:	cmp	ip, #0
   25388:	beq	25414 <__udivmoddi4+0x11c>
   2538c:	lsr	r6, r8, #1
   25390:	orr	r6, r6, r9, lsl #31
   25394:	lsr	r7, r9, #1
   25398:	mov	r2, ip
   2539c:	b	253c0 <__udivmoddi4+0xc8>
   253a0:	subs	r3, r4, r6
   253a4:	sbc	r8, r5, r7
   253a8:	adds	r3, r3, r3
   253ac:	adc	r8, r8, r8
   253b0:	adds	r4, r3, #1
   253b4:	adc	r5, r8, #0
   253b8:	subs	r2, r2, #1
   253bc:	beq	253dc <__udivmoddi4+0xe4>
   253c0:	cmp	r5, r7
   253c4:	cmpeq	r4, r6
   253c8:	bcs	253a0 <__udivmoddi4+0xa8>
   253cc:	adds	r4, r4, r4
   253d0:	adc	r5, r5, r5
   253d4:	subs	r2, r2, #1
   253d8:	bne	253c0 <__udivmoddi4+0xc8>
   253dc:	lsr	r3, r4, ip
   253e0:	orr	r3, r3, r5, lsl fp
   253e4:	lsr	r2, r5, ip
   253e8:	orr	r3, r3, r5, lsr sl
   253ec:	adds	r0, r0, r4
   253f0:	mov	r4, r3
   253f4:	lsl	r3, r2, ip
   253f8:	orr	r3, r3, r4, lsl sl
   253fc:	lsl	ip, r4, ip
   25400:	orr	r3, r3, r4, lsr fp
   25404:	adc	r1, r1, r5
   25408:	subs	r0, r0, ip
   2540c:	mov	r5, r2
   25410:	sbc	r1, r1, r3
   25414:	cmp	lr, #0
   25418:	strdne	r4, [lr]
   2541c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00025420 <_fini>:
   25420:	push	{r3, lr}
   25424:	pop	{r3, pc}
