
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010b00 <.init>:
   10b00:	push	{r3, lr}
   10b04:	bl	10f88 <abort@plt+0x264>
   10b08:	pop	{r3, pc}

Disassembly of section .plt:

00010b0c <calloc@plt-0x14>:
   10b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b10:	ldr	lr, [pc, #4]	; 10b1c <calloc@plt-0x4>
   10b14:	add	lr, pc, lr
   10b18:	ldr	pc, [lr, #8]!
   10b1c:	andeq	r5, r1, r4, ror #9

00010b20 <calloc@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #86016	; 0x15000
   10b28:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b2c <fputs_unlocked@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #86016	; 0x15000
   10b34:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b38 <raise@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #86016	; 0x15000
   10b40:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b44 <strcmp@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #86016	; 0x15000
   10b4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b50 <fflush@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #86016	; 0x15000
   10b58:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b5c <free@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #86016	; 0x15000
   10b64:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b68 <_exit@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #86016	; 0x15000
   10b70:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b74 <memcpy@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #86016	; 0x15000
   10b7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b80 <mbsinit@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #86016	; 0x15000
   10b88:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b8c <memcmp@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #86016	; 0x15000
   10b94:	ldr	pc, [ip, #1180]!	; 0x49c

00010b98 <fputc_unlocked@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #86016	; 0x15000
   10ba0:	ldr	pc, [ip, #1172]!	; 0x494

00010ba4 <dcgettext@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #86016	; 0x15000
   10bac:	ldr	pc, [ip, #1164]!	; 0x48c

00010bb0 <realloc@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #86016	; 0x15000
   10bb8:	ldr	pc, [ip, #1156]!	; 0x484

00010bbc <textdomain@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #86016	; 0x15000
   10bc4:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc8 <iswprint@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #86016	; 0x15000
   10bd0:	ldr	pc, [ip, #1140]!	; 0x474

00010bd4 <fwrite@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #86016	; 0x15000
   10bdc:	ldr	pc, [ip, #1132]!	; 0x46c

00010be0 <lseek64@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #86016	; 0x15000
   10be8:	ldr	pc, [ip, #1124]!	; 0x464

00010bec <__ctype_get_mb_cur_max@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #86016	; 0x15000
   10bf4:	ldr	pc, [ip, #1116]!	; 0x45c

00010bf8 <__fpending@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #86016	; 0x15000
   10c00:	ldr	pc, [ip, #1108]!	; 0x454

00010c04 <mbrtowc@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #86016	; 0x15000
   10c0c:	ldr	pc, [ip, #1100]!	; 0x44c

00010c10 <error@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #86016	; 0x15000
   10c18:	ldr	pc, [ip, #1092]!	; 0x444

00010c1c <malloc@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #86016	; 0x15000
   10c24:	ldr	pc, [ip, #1084]!	; 0x43c

00010c28 <__libc_start_main@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #86016	; 0x15000
   10c30:	ldr	pc, [ip, #1076]!	; 0x434

00010c34 <__freading@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #86016	; 0x15000
   10c3c:	ldr	pc, [ip, #1068]!	; 0x42c

00010c40 <__gmon_start__@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #86016	; 0x15000
   10c48:	ldr	pc, [ip, #1060]!	; 0x424

00010c4c <getopt_long@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #86016	; 0x15000
   10c54:	ldr	pc, [ip, #1052]!	; 0x41c

00010c58 <__ctype_b_loc@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #86016	; 0x15000
   10c60:	ldr	pc, [ip, #1044]!	; 0x414

00010c64 <exit@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #86016	; 0x15000
   10c6c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c70 <strlen@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #86016	; 0x15000
   10c78:	ldr	pc, [ip, #1028]!	; 0x404

00010c7c <__errno_location@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #86016	; 0x15000
   10c84:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c88 <__cxa_atexit@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c94 <memset@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010ca0 <__printf_chk@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #996]!	; 0x3e4

00010cac <fileno@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #988]!	; 0x3dc

00010cb8 <__fprintf_chk@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #980]!	; 0x3d4

00010cc4 <fclose@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #972]!	; 0x3cc

00010cd0 <fseeko64@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #964]!	; 0x3c4

00010cdc <__overflow@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #956]!	; 0x3bc

00010ce8 <setlocale@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #948]!	; 0x3b4

00010cf4 <strrchr@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #940]!	; 0x3ac

00010d00 <nl_langinfo@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #932]!	; 0x3a4

00010d0c <bindtextdomain@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #924]!	; 0x39c

00010d18 <strncmp@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #916]!	; 0x394

00010d24 <abort@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #908]!	; 0x38c

Disassembly of section .text:

00010d30 <.text>:
   10d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d34:	mov	r7, r0
   10d38:	sub	sp, sp, #20
   10d3c:	ldr	r0, [r1]
   10d40:	mov	r5, r1
   10d44:	bl	11670 <abort@plt+0x94c>
   10d48:	ldr	r1, [pc, #448]	; 10f10 <abort@plt+0x1ec>
   10d4c:	mov	r0, #6
   10d50:	bl	10ce8 <setlocale@plt>
   10d54:	mov	r4, #0
   10d58:	ldr	r1, [pc, #436]	; 10f14 <abort@plt+0x1f0>
   10d5c:	ldr	r0, [pc, #436]	; 10f18 <abort@plt+0x1f4>
   10d60:	ldr	r9, [pc, #436]	; 10f1c <abort@plt+0x1f8>
   10d64:	ldr	r8, [pc, #436]	; 10f20 <abort@plt+0x1fc>
   10d68:	bl	10d0c <bindtextdomain@plt>
   10d6c:	mov	fp, r4
   10d70:	ldr	r0, [pc, #416]	; 10f18 <abort@plt+0x1f4>
   10d74:	mov	r6, r4
   10d78:	mov	sl, #1
   10d7c:	bl	10bbc <textdomain@plt>
   10d80:	ldr	r0, [pc, #412]	; 10f24 <abort@plt+0x200>
   10d84:	bl	14a10 <abort@plt+0x3cec>
   10d88:	str	r4, [sp, #12]
   10d8c:	str	r6, [sp]
   10d90:	mov	r3, r9
   10d94:	mov	r2, r8
   10d98:	mov	r1, r5
   10d9c:	mov	r0, r7
   10da0:	bl	10c4c <getopt_long@plt>
   10da4:	cmn	r0, #1
   10da8:	beq	10e58 <abort@plt+0x134>
   10dac:	cmp	r0, #97	; 0x61
   10db0:	beq	10e50 <abort@plt+0x12c>
   10db4:	bgt	10dd0 <abort@plt+0xac>
   10db8:	cmn	r0, #3
   10dbc:	beq	10de8 <abort@plt+0xc4>
   10dc0:	cmn	r0, #2
   10dc4:	bne	10e48 <abort@plt+0x124>
   10dc8:	mov	r0, #0
   10dcc:	bl	11144 <abort@plt+0x420>
   10dd0:	cmp	r0, #115	; 0x73
   10dd4:	beq	10e18 <abort@plt+0xf4>
   10dd8:	cmp	r0, #122	; 0x7a
   10ddc:	bne	10e48 <abort@plt+0x124>
   10de0:	str	sl, [sp, #12]
   10de4:	b	10d8c <abort@plt+0x68>
   10de8:	ldr	r1, [pc, #312]	; 10f28 <abort@plt+0x204>
   10dec:	ldr	r3, [pc, #312]	; 10f2c <abort@plt+0x208>
   10df0:	ldr	r2, [pc, #312]	; 10f30 <abort@plt+0x20c>
   10df4:	str	r6, [sp, #4]
   10df8:	ldr	r0, [r1]
   10dfc:	ldr	r3, [r3]
   10e00:	ldr	r1, [pc, #300]	; 10f34 <abort@plt+0x210>
   10e04:	str	r2, [sp]
   10e08:	ldr	r2, [pc, #296]	; 10f38 <abort@plt+0x214>
   10e0c:	bl	1396c <abort@plt+0x2c48>
   10e10:	mov	r0, #0
   10e14:	bl	10c64 <exit@plt>
   10e18:	ldr	r3, [pc, #284]	; 10f3c <abort@plt+0x218>
   10e1c:	mov	fp, sl
   10e20:	ldr	r4, [r3]
   10e24:	b	10d8c <abort@plt+0x68>
   10e28:	mov	r2, #5
   10e2c:	ldr	r1, [pc, #268]	; 10f40 <abort@plt+0x21c>
   10e30:	mov	r0, #0
   10e34:	bl	10ba4 <dcgettext@plt>
   10e38:	mov	r1, #0
   10e3c:	mov	r2, r0
   10e40:	mov	r0, r1
   10e44:	bl	10c10 <error@plt>
   10e48:	mov	r0, #1
   10e4c:	bl	11144 <abort@plt+0x420>
   10e50:	mov	fp, sl
   10e54:	b	10d8c <abort@plt+0x68>
   10e58:	ldr	r6, [pc, #228]	; 10f44 <abort@plt+0x220>
   10e5c:	ldr	r3, [r6]
   10e60:	cmp	r7, r3
   10e64:	ble	10e28 <abort@plt+0x104>
   10e68:	cmp	fp, #0
   10e6c:	bne	10ea4 <abort@plt+0x180>
   10e70:	add	r2, r3, #2
   10e74:	cmp	r7, r2
   10e78:	bgt	10ed0 <abort@plt+0x1ac>
   10e7c:	lsl	r2, r3, #2
   10e80:	ldr	r0, [r5, r3, lsl #2]
   10e84:	addeq	r5, r5, r2
   10e88:	movne	r1, fp
   10e8c:	ldreq	r1, [r5, #4]
   10e90:	ldr	r2, [sp, #12]
   10e94:	bl	11074 <abort@plt+0x350>
   10e98:	mov	r0, #0
   10e9c:	add	sp, sp, #20
   10ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ea4:	ldr	r8, [sp, #12]
   10ea8:	ldr	r0, [r5, r3, lsl #2]
   10eac:	mov	r2, r8
   10eb0:	mov	r1, r4
   10eb4:	bl	11074 <abort@plt+0x350>
   10eb8:	ldr	r3, [r6]
   10ebc:	add	r3, r3, #1
   10ec0:	cmp	r7, r3
   10ec4:	str	r3, [r6]
   10ec8:	bgt	10ea8 <abort@plt+0x184>
   10ecc:	b	10e98 <abort@plt+0x174>
   10ed0:	mov	r2, #5
   10ed4:	ldr	r1, [pc, #108]	; 10f48 <abort@plt+0x224>
   10ed8:	mov	r0, fp
   10edc:	bl	10ba4 <dcgettext@plt>
   10ee0:	ldr	r3, [r6]
   10ee4:	add	r3, r3, #2
   10ee8:	mov	r4, r0
   10eec:	ldr	r0, [r5, r3, lsl #2]
   10ef0:	bl	13530 <abort@plt+0x280c>
   10ef4:	mov	r2, r4
   10ef8:	mov	r1, fp
   10efc:	mov	r3, r0
   10f00:	mov	r0, fp
   10f04:	bl	10c10 <error@plt>
   10f08:	mov	r0, #1
   10f0c:	bl	11144 <abort@plt+0x420>
   10f10:	ldrdeq	r4, [r1], -r8
   10f14:	andeq	r4, r1, r8, asr #29
   10f18:	andeq	r4, r1, r0, lsr #28
   10f1c:	andeq	r4, r1, ip, ror #20
   10f20:	andeq	r4, r1, r0, ror #29
   10f24:	muleq	r1, r8, r4
   10f28:	andeq	r6, r2, r4, lsr #2
   10f2c:	andeq	r6, r2, r8, asr #1
   10f30:	andeq	r4, r1, r8, ror #29
   10f34:	andeq	r4, r1, ip, asr #21
   10f38:	andeq	r4, r1, ip, lsl lr
   10f3c:	andeq	r6, r2, r8, lsr #2
   10f40:	strdeq	r4, [r1], -r8
   10f44:	andeq	r6, r2, r8, lsl r1
   10f48:	andeq	r4, r1, r8, lsl #30
   10f4c:	mov	fp, #0
   10f50:	mov	lr, #0
   10f54:	pop	{r1}		; (ldr r1, [sp], #4)
   10f58:	mov	r2, sp
   10f5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f60:	push	{r0}		; (str r0, [sp, #-4]!)
   10f64:	ldr	ip, [pc, #16]	; 10f7c <abort@plt+0x258>
   10f68:	push	{ip}		; (str ip, [sp, #-4]!)
   10f6c:	ldr	r0, [pc, #12]	; 10f80 <abort@plt+0x25c>
   10f70:	ldr	r3, [pc, #12]	; 10f84 <abort@plt+0x260>
   10f74:	bl	10c28 <__libc_start_main@plt>
   10f78:	bl	10d24 <abort@plt>
   10f7c:	andeq	r4, r1, ip, lsl #20
   10f80:	andeq	r0, r1, r0, lsr sp
   10f84:	andeq	r4, r1, ip, lsr #19
   10f88:	ldr	r3, [pc, #20]	; 10fa4 <abort@plt+0x280>
   10f8c:	ldr	r2, [pc, #20]	; 10fa8 <abort@plt+0x284>
   10f90:	add	r3, pc, r3
   10f94:	ldr	r2, [r3, r2]
   10f98:	cmp	r2, #0
   10f9c:	bxeq	lr
   10fa0:	b	10c40 <__gmon_start__@plt>
   10fa4:	andeq	r5, r1, r8, rrx
   10fa8:	strheq	r0, [r0], -ip
   10fac:	ldr	r3, [pc, #28]	; 10fd0 <abort@plt+0x2ac>
   10fb0:	ldr	r0, [pc, #28]	; 10fd4 <abort@plt+0x2b0>
   10fb4:	sub	r3, r3, r0
   10fb8:	cmp	r3, #6
   10fbc:	bxls	lr
   10fc0:	ldr	r3, [pc, #16]	; 10fd8 <abort@plt+0x2b4>
   10fc4:	cmp	r3, #0
   10fc8:	bxeq	lr
   10fcc:	bx	r3
   10fd0:	andeq	r6, r2, r3, lsl r1
   10fd4:	andeq	r6, r2, r0, lsl r1
   10fd8:	andeq	r0, r0, r0
   10fdc:	ldr	r1, [pc, #36]	; 11008 <abort@plt+0x2e4>
   10fe0:	ldr	r0, [pc, #36]	; 1100c <abort@plt+0x2e8>
   10fe4:	sub	r1, r1, r0
   10fe8:	asr	r1, r1, #2
   10fec:	add	r1, r1, r1, lsr #31
   10ff0:	asrs	r1, r1, #1
   10ff4:	bxeq	lr
   10ff8:	ldr	r3, [pc, #16]	; 11010 <abort@plt+0x2ec>
   10ffc:	cmp	r3, #0
   11000:	bxeq	lr
   11004:	bx	r3
   11008:	andeq	r6, r2, r0, lsl r1
   1100c:	andeq	r6, r2, r0, lsl r1
   11010:	andeq	r0, r0, r0
   11014:	push	{r4, lr}
   11018:	ldr	r4, [pc, #24]	; 11038 <abort@plt+0x314>
   1101c:	ldrb	r3, [r4]
   11020:	cmp	r3, #0
   11024:	popne	{r4, pc}
   11028:	bl	10fac <abort@plt+0x288>
   1102c:	mov	r3, #1
   11030:	strb	r3, [r4]
   11034:	pop	{r4, pc}
   11038:	andeq	r6, r2, ip, lsr #2
   1103c:	ldr	r0, [pc, #40]	; 1106c <abort@plt+0x348>
   11040:	ldr	r3, [r0]
   11044:	cmp	r3, #0
   11048:	bne	11050 <abort@plt+0x32c>
   1104c:	b	10fdc <abort@plt+0x2b8>
   11050:	ldr	r3, [pc, #24]	; 11070 <abort@plt+0x34c>
   11054:	cmp	r3, #0
   11058:	beq	1104c <abort@plt+0x328>
   1105c:	push	{r4, lr}
   11060:	blx	r3
   11064:	pop	{r4, lr}
   11068:	b	10fdc <abort@plt+0x2b8>
   1106c:	andeq	r5, r2, r4, lsl pc
   11070:	andeq	r0, r0, r0
   11074:	push	{r4, r5, r6, r7, r8, lr}
   11078:	mov	r6, r1
   1107c:	mov	r7, r2
   11080:	bl	1157c <abort@plt+0x858>
   11084:	mov	r5, r0
   11088:	bl	115e0 <abort@plt+0x8bc>
   1108c:	cmp	r6, #0
   11090:	beq	110e8 <abort@plt+0x3c4>
   11094:	ldrb	r3, [r5]
   11098:	cmp	r3, #47	; 0x2f
   1109c:	beq	110e8 <abort@plt+0x3c4>
   110a0:	mov	r0, r5
   110a4:	bl	10c70 <strlen@plt>
   110a8:	add	r4, r5, r0
   110ac:	mov	r0, r6
   110b0:	bl	10c70 <strlen@plt>
   110b4:	add	r0, r6, r0
   110b8:	b	110cc <abort@plt+0x3a8>
   110bc:	ldrb	r2, [r4, #-1]!
   110c0:	ldrb	r3, [r0, #-1]!
   110c4:	cmp	r2, r3
   110c8:	bne	110e8 <abort@plt+0x3c4>
   110cc:	cmp	r5, r4
   110d0:	cmpcc	r6, r0
   110d4:	movcc	r3, #1
   110d8:	movcs	r3, #0
   110dc:	bcc	110bc <abort@plt+0x398>
   110e0:	cmp	r5, r4
   110e4:	strbcc	r3, [r4]
   110e8:	ldr	r4, [pc, #80]	; 11140 <abort@plt+0x41c>
   110ec:	mov	r0, r5
   110f0:	ldr	r1, [r4]
   110f4:	bl	10b2c <fputs_unlocked@plt>
   110f8:	ldr	r0, [r4]
   110fc:	cmp	r7, #0
   11100:	moveq	r1, #10
   11104:	ldr	r3, [r0, #20]
   11108:	ldr	r2, [r0, #24]
   1110c:	movne	r1, #0
   11110:	cmp	r3, r2
   11114:	addcc	r2, r3, #1
   11118:	strcc	r2, [r0, #20]
   1111c:	strbcc	r1, [r3]
   11120:	bcs	11130 <abort@plt+0x40c>
   11124:	mov	r0, r5
   11128:	pop	{r4, r5, r6, r7, r8, lr}
   1112c:	b	11618 <abort@plt+0x8f4>
   11130:	bl	10cdc <__overflow@plt>
   11134:	mov	r0, r5
   11138:	pop	{r4, r5, r6, r7, r8, lr}
   1113c:	b	11618 <abort@plt+0x8f4>
   11140:	andeq	r6, r2, r4, lsr #2
   11144:	subs	r6, r0, #0
   11148:	push	{r7, lr}
   1114c:	sub	sp, sp, #64	; 0x40
   11150:	beq	1118c <abort@plt+0x468>
   11154:	ldr	r3, [pc, #708]	; 11420 <abort@plt+0x6fc>
   11158:	mov	r2, #5
   1115c:	ldr	r1, [pc, #704]	; 11424 <abort@plt+0x700>
   11160:	mov	r0, #0
   11164:	ldr	r4, [r3]
   11168:	bl	10ba4 <dcgettext@plt>
   1116c:	ldr	r3, [pc, #692]	; 11428 <abort@plt+0x704>
   11170:	mov	r1, #1
   11174:	ldr	r3, [r3]
   11178:	mov	r2, r0
   1117c:	mov	r0, r4
   11180:	bl	10cb8 <__fprintf_chk@plt>
   11184:	mov	r0, r6
   11188:	bl	10c64 <exit@plt>
   1118c:	mov	r2, #5
   11190:	ldr	r1, [pc, #660]	; 1142c <abort@plt+0x708>
   11194:	bl	10ba4 <dcgettext@plt>
   11198:	ldr	r4, [pc, #648]	; 11428 <abort@plt+0x704>
   1119c:	ldr	r7, [pc, #652]	; 11430 <abort@plt+0x70c>
   111a0:	ldr	r3, [r4]
   111a4:	mov	r2, r3
   111a8:	mov	r1, r0
   111ac:	mov	r0, #1
   111b0:	bl	10ca0 <__printf_chk@plt>
   111b4:	mov	r2, #5
   111b8:	ldr	r1, [pc, #628]	; 11434 <abort@plt+0x710>
   111bc:	mov	r0, r6
   111c0:	bl	10ba4 <dcgettext@plt>
   111c4:	ldr	r1, [r7]
   111c8:	bl	10b2c <fputs_unlocked@plt>
   111cc:	mov	r2, #5
   111d0:	ldr	r1, [pc, #608]	; 11438 <abort@plt+0x714>
   111d4:	mov	r0, r6
   111d8:	bl	10ba4 <dcgettext@plt>
   111dc:	ldr	r1, [r7]
   111e0:	bl	10b2c <fputs_unlocked@plt>
   111e4:	mov	r2, #5
   111e8:	ldr	r1, [pc, #588]	; 1143c <abort@plt+0x718>
   111ec:	mov	r0, r6
   111f0:	bl	10ba4 <dcgettext@plt>
   111f4:	ldr	r1, [r7]
   111f8:	bl	10b2c <fputs_unlocked@plt>
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #568]	; 11440 <abort@plt+0x71c>
   11204:	mov	r0, r6
   11208:	bl	10ba4 <dcgettext@plt>
   1120c:	ldr	r1, [r7]
   11210:	bl	10b2c <fputs_unlocked@plt>
   11214:	mov	r2, #5
   11218:	ldr	r1, [pc, #548]	; 11444 <abort@plt+0x720>
   1121c:	mov	r0, r6
   11220:	bl	10ba4 <dcgettext@plt>
   11224:	ldr	r1, [r7]
   11228:	bl	10b2c <fputs_unlocked@plt>
   1122c:	mov	r2, #5
   11230:	ldr	r1, [pc, #528]	; 11448 <abort@plt+0x724>
   11234:	mov	r0, r6
   11238:	bl	10ba4 <dcgettext@plt>
   1123c:	ldr	r3, [r4]
   11240:	ldr	r4, [pc, #516]	; 1144c <abort@plt+0x728>
   11244:	str	r3, [sp, #4]
   11248:	str	r3, [sp]
   1124c:	mov	r2, r3
   11250:	mov	r1, r0
   11254:	mov	r0, #1
   11258:	bl	10ca0 <__printf_chk@plt>
   1125c:	ldm	r4!, {r0, r1, r2, r3}
   11260:	add	lr, sp, #8
   11264:	stmia	lr!, {r0, r1, r2, r3}
   11268:	ldm	r4!, {r0, r1, r2, r3}
   1126c:	ldr	ip, [sp, #8]
   11270:	stmia	lr!, {r0, r1, r2, r3}
   11274:	cmp	ip, #0
   11278:	ldm	r4!, {r0, r1, r2, r3}
   1127c:	stmia	lr!, {r0, r1, r2, r3}
   11280:	ldm	r4, {r0, r1}
   11284:	addeq	r4, sp, #8
   11288:	stm	lr, {r0, r1}
   1128c:	beq	112bc <abort@plt+0x598>
   11290:	ldr	r5, [pc, #440]	; 11450 <abort@plt+0x72c>
   11294:	add	r4, sp, #8
   11298:	b	112a8 <abort@plt+0x584>
   1129c:	ldr	ip, [r4, #8]!
   112a0:	cmp	ip, #0
   112a4:	beq	112bc <abort@plt+0x598>
   112a8:	mov	r1, ip
   112ac:	mov	r0, r5
   112b0:	bl	10b44 <strcmp@plt>
   112b4:	cmp	r0, #0
   112b8:	bne	1129c <abort@plt+0x578>
   112bc:	ldr	r4, [r4, #4]
   112c0:	mov	r2, #5
   112c4:	cmp	r4, #0
   112c8:	ldr	r1, [pc, #388]	; 11454 <abort@plt+0x730>
   112cc:	beq	11374 <abort@plt+0x650>
   112d0:	mov	r0, #0
   112d4:	bl	10ba4 <dcgettext@plt>
   112d8:	ldr	r3, [pc, #376]	; 11458 <abort@plt+0x734>
   112dc:	ldr	r2, [pc, #376]	; 1145c <abort@plt+0x738>
   112e0:	mov	r1, r0
   112e4:	mov	r0, #1
   112e8:	bl	10ca0 <__printf_chk@plt>
   112ec:	mov	r1, #0
   112f0:	mov	r0, #5
   112f4:	bl	10ce8 <setlocale@plt>
   112f8:	cmp	r0, #0
   112fc:	ldreq	r5, [pc, #332]	; 11450 <abort@plt+0x72c>
   11300:	beq	1131c <abort@plt+0x5f8>
   11304:	mov	r2, #3
   11308:	ldr	r1, [pc, #336]	; 11460 <abort@plt+0x73c>
   1130c:	bl	10d18 <strncmp@plt>
   11310:	ldr	r5, [pc, #312]	; 11450 <abort@plt+0x72c>
   11314:	cmp	r0, #0
   11318:	bne	11404 <abort@plt+0x6e0>
   1131c:	mov	r2, #5
   11320:	ldr	r1, [pc, #316]	; 11464 <abort@plt+0x740>
   11324:	mov	r0, #0
   11328:	bl	10ba4 <dcgettext@plt>
   1132c:	ldr	r3, [pc, #284]	; 11450 <abort@plt+0x72c>
   11330:	ldr	r2, [pc, #288]	; 11458 <abort@plt+0x734>
   11334:	mov	r1, r0
   11338:	mov	r0, #1
   1133c:	bl	10ca0 <__printf_chk@plt>
   11340:	mov	r2, #5
   11344:	ldr	r1, [pc, #284]	; 11468 <abort@plt+0x744>
   11348:	mov	r0, #0
   1134c:	bl	10ba4 <dcgettext@plt>
   11350:	ldr	r2, [pc, #276]	; 1146c <abort@plt+0x748>
   11354:	cmp	r4, r5
   11358:	ldr	r3, [pc, #272]	; 11470 <abort@plt+0x74c>
   1135c:	movne	r3, r2
   11360:	mov	r1, r0
   11364:	mov	r2, r4
   11368:	mov	r0, #1
   1136c:	bl	10ca0 <__printf_chk@plt>
   11370:	b	11184 <abort@plt+0x460>
   11374:	mov	r0, r4
   11378:	bl	10ba4 <dcgettext@plt>
   1137c:	ldr	r3, [pc, #212]	; 11458 <abort@plt+0x734>
   11380:	ldr	r2, [pc, #212]	; 1145c <abort@plt+0x738>
   11384:	mov	r1, r0
   11388:	mov	r0, #1
   1138c:	bl	10ca0 <__printf_chk@plt>
   11390:	mov	r1, r4
   11394:	mov	r0, #5
   11398:	bl	10ce8 <setlocale@plt>
   1139c:	cmp	r0, #0
   113a0:	beq	113b8 <abort@plt+0x694>
   113a4:	mov	r2, #3
   113a8:	ldr	r1, [pc, #176]	; 11460 <abort@plt+0x73c>
   113ac:	bl	10d18 <strncmp@plt>
   113b0:	cmp	r0, #0
   113b4:	bne	113fc <abort@plt+0x6d8>
   113b8:	mov	r2, #5
   113bc:	ldr	r1, [pc, #160]	; 11464 <abort@plt+0x740>
   113c0:	mov	r0, #0
   113c4:	bl	10ba4 <dcgettext@plt>
   113c8:	ldr	r3, [pc, #128]	; 11450 <abort@plt+0x72c>
   113cc:	ldr	r2, [pc, #132]	; 11458 <abort@plt+0x734>
   113d0:	mov	r4, r3
   113d4:	mov	r1, r0
   113d8:	mov	r0, #1
   113dc:	bl	10ca0 <__printf_chk@plt>
   113e0:	ldr	r1, [pc, #128]	; 11468 <abort@plt+0x744>
   113e4:	mov	r2, #5
   113e8:	mov	r0, #0
   113ec:	bl	10ba4 <dcgettext@plt>
   113f0:	ldr	r3, [pc, #120]	; 11470 <abort@plt+0x74c>
   113f4:	mov	r1, r0
   113f8:	b	11364 <abort@plt+0x640>
   113fc:	ldr	r5, [pc, #76]	; 11450 <abort@plt+0x72c>
   11400:	mov	r4, r5
   11404:	mov	r2, #5
   11408:	ldr	r1, [pc, #100]	; 11474 <abort@plt+0x750>
   1140c:	mov	r0, #0
   11410:	bl	10ba4 <dcgettext@plt>
   11414:	ldr	r1, [r7]
   11418:	bl	10b2c <fputs_unlocked@plt>
   1141c:	b	1131c <abort@plt+0x5f8>
   11420:	andeq	r6, r2, r0, lsr #2
   11424:	ldrdeq	r4, [r1], -r8
   11428:	andeq	r6, r2, r8, lsr r1
   1142c:	andeq	r4, r1, r0, lsl #22
   11430:	andeq	r6, r2, r4, lsr #2
   11434:	andeq	r4, r1, r8, lsr fp
   11438:	andeq	r4, r1, r0, lsr #23
   1143c:	andeq	r4, r1, ip, ror #23
   11440:			; <UNDEFINED> instruction: 0x00014cb8
   11444:	andeq	r4, r1, r8, ror #25
   11448:	andeq	r4, r1, r0, lsr #26
   1144c:	andeq	r4, r1, r4, lsr sl
   11450:	andeq	r4, r1, ip, asr #21
   11454:	ldrdeq	r4, [r1], -ip
   11458:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1145c:	andeq	r4, r1, ip, lsl lr
   11460:	andeq	r4, r1, ip, lsr #28
   11464:	andeq	r4, r1, r8, ror lr
   11468:	muleq	r1, r4, lr
   1146c:	ldrdeq	r4, [r1], -r8
   11470:	andeq	r4, r1, r4, lsr #30
   11474:	andeq	r4, r1, r0, lsr lr
   11478:	ldr	r3, [pc, #4]	; 11484 <abort@plt+0x760>
   1147c:	str	r0, [r3]
   11480:	bx	lr
   11484:	andeq	r6, r2, r0, lsr r1
   11488:	ldr	r3, [pc, #4]	; 11494 <abort@plt+0x770>
   1148c:	strb	r0, [r3, #4]
   11490:	bx	lr
   11494:	andeq	r6, r2, r0, lsr r1
   11498:	ldr	r3, [pc, #192]	; 11560 <abort@plt+0x83c>
   1149c:	push	{r4, r5, r6, lr}
   114a0:	sub	sp, sp, #8
   114a4:	ldr	r0, [r3]
   114a8:	bl	1416c <abort@plt+0x3448>
   114ac:	cmp	r0, #0
   114b0:	beq	114d4 <abort@plt+0x7b0>
   114b4:	ldr	r4, [pc, #168]	; 11564 <abort@plt+0x840>
   114b8:	ldrb	r3, [r4, #4]
   114bc:	cmp	r3, #0
   114c0:	beq	114f0 <abort@plt+0x7cc>
   114c4:	bl	10c7c <__errno_location@plt>
   114c8:	ldr	r3, [r0]
   114cc:	cmp	r3, #32
   114d0:	bne	114f0 <abort@plt+0x7cc>
   114d4:	ldr	r3, [pc, #140]	; 11568 <abort@plt+0x844>
   114d8:	ldr	r0, [r3]
   114dc:	bl	1416c <abort@plt+0x3448>
   114e0:	cmp	r0, #0
   114e4:	bne	11538 <abort@plt+0x814>
   114e8:	add	sp, sp, #8
   114ec:	pop	{r4, r5, r6, pc}
   114f0:	mov	r2, #5
   114f4:	ldr	r1, [pc, #112]	; 1156c <abort@plt+0x848>
   114f8:	mov	r0, #0
   114fc:	bl	10ba4 <dcgettext@plt>
   11500:	ldr	r4, [r4]
   11504:	cmp	r4, #0
   11508:	mov	r5, r0
   1150c:	beq	11544 <abort@plt+0x820>
   11510:	bl	10c7c <__errno_location@plt>
   11514:	ldr	r6, [r0]
   11518:	mov	r0, r4
   1151c:	bl	13398 <abort@plt+0x2674>
   11520:	mov	r1, r6
   11524:	str	r5, [sp]
   11528:	ldr	r2, [pc, #64]	; 11570 <abort@plt+0x84c>
   1152c:	mov	r3, r0
   11530:	mov	r0, #0
   11534:	bl	10c10 <error@plt>
   11538:	ldr	r3, [pc, #52]	; 11574 <abort@plt+0x850>
   1153c:	ldr	r0, [r3]
   11540:	bl	10b68 <_exit@plt>
   11544:	bl	10c7c <__errno_location@plt>
   11548:	mov	r3, r5
   1154c:	ldr	r2, [pc, #36]	; 11578 <abort@plt+0x854>
   11550:	ldr	r1, [r0]
   11554:	mov	r0, r4
   11558:	bl	10c10 <error@plt>
   1155c:	b	11538 <abort@plt+0x814>
   11560:	andeq	r6, r2, r4, lsr #2
   11564:	andeq	r6, r2, r0, lsr r1
   11568:	andeq	r6, r2, r0, lsr #2
   1156c:	andeq	r4, r1, r4, asr #31
   11570:	ldrdeq	r4, [r1], -r0
   11574:	andeq	r6, r2, ip, asr #1
   11578:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1157c:	push	{r4, r5, r6, lr}
   11580:	mov	r5, r0
   11584:	bl	140c0 <abort@plt+0x339c>
   11588:	ldrb	r3, [r0]
   1158c:	cmp	r3, #0
   11590:	bne	115c0 <abort@plt+0x89c>
   11594:	mov	r0, r5
   11598:	bl	1411c <abort@plt+0x33f8>
   1159c:	mov	r4, r0
   115a0:	add	r0, r4, #1
   115a4:	bl	13a7c <abort@plt+0x2d58>
   115a8:	mov	r2, r4
   115ac:	mov	r1, r5
   115b0:	bl	10b74 <memcpy@plt>
   115b4:	mov	r2, #0
   115b8:	strb	r2, [r0, r4]
   115bc:	pop	{r4, r5, r6, pc}
   115c0:	mov	r4, r0
   115c4:	bl	1411c <abort@plt+0x33f8>
   115c8:	mov	r5, r4
   115cc:	ldrb	r4, [r4, r0]
   115d0:	cmp	r4, #47	; 0x2f
   115d4:	movne	r4, r0
   115d8:	addeq	r4, r0, #1
   115dc:	b	115a0 <abort@plt+0x87c>
   115e0:	push	{r4, lr}
   115e4:	mov	r4, r0
   115e8:	bl	140c0 <abort@plt+0x339c>
   115ec:	ldrb	r3, [r0]
   115f0:	cmp	r3, #0
   115f4:	movne	r4, r0
   115f8:	mov	r0, r4
   115fc:	bl	1411c <abort@plt+0x33f8>
   11600:	mov	r2, #0
   11604:	ldrb	r3, [r4, r0]
   11608:	strb	r2, [r4, r0]
   1160c:	subs	r0, r3, r2
   11610:	movne	r0, #1
   11614:	pop	{r4, pc}
   11618:	push	{r4, r5, lr}
   1161c:	sub	sp, sp, #12
   11620:	mov	r5, r0
   11624:	bl	10c7c <__errno_location@plt>
   11628:	mov	r2, #0
   1162c:	mov	r4, r0
   11630:	ldr	r3, [r0]
   11634:	str	r2, [r4]
   11638:	mov	r0, r5
   1163c:	str	r3, [sp]
   11640:	str	r3, [sp, #4]
   11644:	bl	10b5c <free@plt>
   11648:	ldr	r3, [r4]
   1164c:	add	r2, sp, #8
   11650:	cmp	r3, #0
   11654:	moveq	r3, #4
   11658:	movne	r3, #0
   1165c:	add	r3, r2, r3
   11660:	ldr	r3, [r3, #-8]
   11664:	str	r3, [r4]
   11668:	add	sp, sp, #12
   1166c:	pop	{r4, r5, pc}
   11670:	push	{r4, r5, r6, lr}
   11674:	subs	r4, r0, #0
   11678:	beq	116ec <abort@plt+0x9c8>
   1167c:	mov	r1, #47	; 0x2f
   11680:	bl	10cf4 <strrchr@plt>
   11684:	subs	r5, r0, #0
   11688:	beq	116d8 <abort@plt+0x9b4>
   1168c:	add	r6, r5, #1
   11690:	sub	r3, r6, r4
   11694:	cmp	r3, #6
   11698:	ble	116d8 <abort@plt+0x9b4>
   1169c:	mov	r2, #7
   116a0:	ldr	r1, [pc, #96]	; 11708 <abort@plt+0x9e4>
   116a4:	sub	r0, r5, #6
   116a8:	bl	10d18 <strncmp@plt>
   116ac:	cmp	r0, #0
   116b0:	bne	116d8 <abort@plt+0x9b4>
   116b4:	mov	r2, #3
   116b8:	ldr	r1, [pc, #76]	; 1170c <abort@plt+0x9e8>
   116bc:	mov	r0, r6
   116c0:	bl	10d18 <strncmp@plt>
   116c4:	cmp	r0, #0
   116c8:	movne	r4, r6
   116cc:	ldreq	r3, [pc, #60]	; 11710 <abort@plt+0x9ec>
   116d0:	addeq	r4, r5, #4
   116d4:	streq	r4, [r3]
   116d8:	ldr	r2, [pc, #52]	; 11714 <abort@plt+0x9f0>
   116dc:	ldr	r3, [pc, #52]	; 11718 <abort@plt+0x9f4>
   116e0:	str	r4, [r2]
   116e4:	str	r4, [r3]
   116e8:	pop	{r4, r5, r6, pc}
   116ec:	ldr	r3, [pc, #40]	; 1171c <abort@plt+0x9f8>
   116f0:	mov	r2, #55	; 0x37
   116f4:	mov	r1, #1
   116f8:	ldr	r3, [r3]
   116fc:	ldr	r0, [pc, #28]	; 11720 <abort@plt+0x9fc>
   11700:	bl	10bd4 <fwrite@plt>
   11704:	bl	10d24 <abort@plt>
   11708:	andeq	r5, r1, r0, lsl r0
   1170c:	andeq	r5, r1, r8, lsl r0
   11710:	andeq	r6, r2, r0, lsl r1
   11714:	andeq	r6, r2, r8, lsr r1
   11718:	andeq	r6, r2, r4, lsl r1
   1171c:	andeq	r6, r2, r0, lsr #2
   11720:	ldrdeq	r4, [r1], -r8
   11724:	push	{r4, r5, r6, lr}
   11728:	mov	r2, #48	; 0x30
   1172c:	mov	r4, r1
   11730:	mov	r1, #0
   11734:	mov	r5, r0
   11738:	bl	10c94 <memset@plt>
   1173c:	cmp	r4, #10
   11740:	beq	11750 <abort@plt+0xa2c>
   11744:	str	r4, [r5]
   11748:	mov	r0, r5
   1174c:	pop	{r4, r5, r6, pc}
   11750:	bl	10d24 <abort@plt>
   11754:	push	{r4, r5, r6, lr}
   11758:	mov	r4, r0
   1175c:	mov	r5, r1
   11760:	bl	14388 <abort@plt+0x3664>
   11764:	ldrb	r3, [r0]
   11768:	bic	r3, r3, #32
   1176c:	cmp	r3, #85	; 0x55
   11770:	bne	117d0 <abort@plt+0xaac>
   11774:	ldrb	r3, [r0, #1]
   11778:	bic	r3, r3, #32
   1177c:	cmp	r3, #84	; 0x54
   11780:	bne	1180c <abort@plt+0xae8>
   11784:	ldrb	r3, [r0, #2]
   11788:	bic	r3, r3, #32
   1178c:	cmp	r3, #70	; 0x46
   11790:	bne	1180c <abort@plt+0xae8>
   11794:	ldrb	r3, [r0, #3]
   11798:	cmp	r3, #45	; 0x2d
   1179c:	bne	1180c <abort@plt+0xae8>
   117a0:	ldrb	r3, [r0, #4]
   117a4:	cmp	r3, #56	; 0x38
   117a8:	bne	1180c <abort@plt+0xae8>
   117ac:	ldrb	r3, [r0, #5]
   117b0:	cmp	r3, #0
   117b4:	bne	1180c <abort@plt+0xae8>
   117b8:	ldrb	r2, [r4]
   117bc:	ldr	r3, [pc, #152]	; 1185c <abort@plt+0xb38>
   117c0:	ldr	r0, [pc, #152]	; 11860 <abort@plt+0xb3c>
   117c4:	cmp	r2, #96	; 0x60
   117c8:	movne	r0, r3
   117cc:	pop	{r4, r5, r6, pc}
   117d0:	cmp	r3, #71	; 0x47
   117d4:	bne	1180c <abort@plt+0xae8>
   117d8:	ldrb	r3, [r0, #1]
   117dc:	bic	r3, r3, #32
   117e0:	cmp	r3, #66	; 0x42
   117e4:	bne	1180c <abort@plt+0xae8>
   117e8:	ldrb	r3, [r0, #2]
   117ec:	cmp	r3, #49	; 0x31
   117f0:	bne	1180c <abort@plt+0xae8>
   117f4:	ldrb	r3, [r0, #3]
   117f8:	cmp	r3, #56	; 0x38
   117fc:	bne	1180c <abort@plt+0xae8>
   11800:	ldrb	r3, [r0, #4]
   11804:	cmp	r3, #48	; 0x30
   11808:	beq	11820 <abort@plt+0xafc>
   1180c:	ldr	r3, [pc, #80]	; 11864 <abort@plt+0xb40>
   11810:	cmp	r5, #9
   11814:	ldr	r0, [pc, #76]	; 11868 <abort@plt+0xb44>
   11818:	movne	r0, r3
   1181c:	pop	{r4, r5, r6, pc}
   11820:	ldrb	r3, [r0, #5]
   11824:	cmp	r3, #51	; 0x33
   11828:	bne	1180c <abort@plt+0xae8>
   1182c:	ldrb	r3, [r0, #6]
   11830:	cmp	r3, #48	; 0x30
   11834:	bne	1180c <abort@plt+0xae8>
   11838:	ldrb	r3, [r0, #7]
   1183c:	cmp	r3, #0
   11840:	bne	1180c <abort@plt+0xae8>
   11844:	ldrb	r2, [r4]
   11848:	ldr	r3, [pc, #28]	; 1186c <abort@plt+0xb48>
   1184c:	ldr	r0, [pc, #28]	; 11870 <abort@plt+0xb4c>
   11850:	cmp	r2, #96	; 0x60
   11854:	movne	r0, r3
   11858:	pop	{r4, r5, r6, pc}
   1185c:	andeq	r5, r1, r4, ror r0
   11860:	andeq	r5, r1, r0, ror r0
   11864:	andeq	r5, r1, r4, lsl #1
   11868:	andeq	r5, r1, r0, lsl #1
   1186c:	andeq	r5, r1, ip, ror r0
   11870:	andeq	r5, r1, r8, ror r0
   11874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11878:	sub	sp, sp, #116	; 0x74
   1187c:	mov	sl, r0
   11880:	str	r3, [sp, #24]
   11884:	mov	r3, #1
   11888:	mov	r8, r1
   1188c:	str	r2, [sp, #56]	; 0x38
   11890:	str	r3, [sp, #36]	; 0x24
   11894:	bl	10bec <__ctype_get_mb_cur_max@plt>
   11898:	ldr	r3, [sp, #156]	; 0x9c
   1189c:	mov	fp, r8
   118a0:	mov	r2, #0
   118a4:	lsr	r3, r3, #1
   118a8:	and	r3, r3, #1
   118ac:	str	r2, [sp, #68]	; 0x44
   118b0:	str	r3, [sp, #28]
   118b4:	str	r2, [sp, #40]	; 0x28
   118b8:	str	r2, [sp, #44]	; 0x2c
   118bc:	str	r2, [sp, #52]	; 0x34
   118c0:	str	r2, [sp, #64]	; 0x40
   118c4:	str	r2, [sp, #72]	; 0x48
   118c8:	str	sl, [sp, #32]
   118cc:	str	r0, [sp, #76]	; 0x4c
   118d0:	ldr	r3, [sp, #152]	; 0x98
   118d4:	cmp	r3, #10
   118d8:	ldrls	pc, [pc, r3, lsl #2]
   118dc:	b	12a9c <abort@plt+0x1d78>
   118e0:	andeq	r1, r1, ip, lsl #18
   118e4:	strdeq	r1, [r1], -r4
   118e8:	andeq	r1, r1, r8, lsl ip
   118ec:	andeq	r1, r1, ip, lsr ip
   118f0:	andeq	r1, r1, r8, ror #26
   118f4:	andeq	r1, r1, ip, lsr sp
   118f8:	andeq	r1, r1, r4, lsl sp
   118fc:	andeq	r1, r1, r0, asr ip
   11900:	andeq	r1, r1, r8, ror #24
   11904:	andeq	r1, r1, r8, ror #24
   11908:	andeq	r1, r1, r8, ror #24
   1190c:	mov	r3, #0
   11910:	mov	r7, r3
   11914:	str	r3, [sp, #28]
   11918:	ldr	r3, [sp, #44]	; 0x2c
   1191c:	mov	sl, #0
   11920:	eor	r3, r3, #1
   11924:	str	r3, [sp, #60]	; 0x3c
   11928:	ldr	r3, [sp, #24]
   1192c:	cmn	r3, #1
   11930:	beq	11e94 <abort@plt+0x1170>
   11934:	ldr	r3, [sp, #24]
   11938:	subs	r5, r3, sl
   1193c:	movne	r5, #1
   11940:	cmp	r5, #0
   11944:	beq	11eac <abort@plt+0x1188>
   11948:	ldr	r3, [sp, #152]	; 0x98
   1194c:	ldr	r8, [sp, #44]	; 0x2c
   11950:	cmp	r3, #2
   11954:	moveq	r8, #0
   11958:	andne	r8, r8, #1
   1195c:	ldr	r3, [sp, #52]	; 0x34
   11960:	adds	r9, r3, #0
   11964:	movne	r9, #1
   11968:	ands	r6, r9, r8
   1196c:	beq	12314 <abort@plt+0x15f0>
   11970:	ldr	r2, [sp, #52]	; 0x34
   11974:	ldr	r1, [sp, #24]
   11978:	cmp	r2, #1
   1197c:	mov	r3, r2
   11980:	movls	r3, #0
   11984:	movhi	r3, #1
   11988:	cmn	r1, #1
   1198c:	movne	r3, #0
   11990:	cmp	r3, #0
   11994:	add	r4, sl, r2
   11998:	beq	119a8 <abort@plt+0xc84>
   1199c:	ldr	r0, [sp, #56]	; 0x38
   119a0:	bl	10c70 <strlen@plt>
   119a4:	str	r0, [sp, #24]
   119a8:	ldr	r3, [sp, #24]
   119ac:	cmp	r3, r4
   119b0:	ldr	r3, [sp, #56]	; 0x38
   119b4:	add	r3, r3, sl
   119b8:	str	r3, [sp, #48]	; 0x30
   119bc:	bcc	12320 <abort@plt+0x15fc>
   119c0:	mov	r0, r3
   119c4:	ldr	r2, [sp, #52]	; 0x34
   119c8:	ldr	r1, [sp, #64]	; 0x40
   119cc:	bl	10b8c <memcmp@plt>
   119d0:	cmp	r0, #0
   119d4:	bne	12320 <abort@plt+0x15fc>
   119d8:	ldr	r3, [sp, #28]
   119dc:	cmp	r3, #0
   119e0:	bne	12b9c <abort@plt+0x1e78>
   119e4:	ldr	r3, [sp, #48]	; 0x30
   119e8:	ldrb	r4, [r3]
   119ec:	cmp	r4, #126	; 0x7e
   119f0:	ldrls	pc, [pc, r4, lsl #2]
   119f4:	b	122b4 <abort@plt+0x1590>
   119f8:	ldrdeq	r2, [r1], -r8
   119fc:			; <UNDEFINED> instruction: 0x000122b4
   11a00:			; <UNDEFINED> instruction: 0x000122b4
   11a04:			; <UNDEFINED> instruction: 0x000122b4
   11a08:			; <UNDEFINED> instruction: 0x000122b4
   11a0c:			; <UNDEFINED> instruction: 0x000122b4
   11a10:			; <UNDEFINED> instruction: 0x000122b4
   11a14:	strheq	r2, [r1], -ip
   11a18:	andeq	r2, r1, r0, lsr #1
   11a1c:	muleq	r1, ip, r2
   11a20:	andeq	r2, r1, r0
   11a24:	andeq	r1, r1, r4, ror #31
   11a28:	andeq	r2, r1, r8, ror r2
   11a2c:	andeq	r2, r1, r4, asr r2
   11a30:			; <UNDEFINED> instruction: 0x000122b4
   11a34:			; <UNDEFINED> instruction: 0x000122b4
   11a38:			; <UNDEFINED> instruction: 0x000122b4
   11a3c:			; <UNDEFINED> instruction: 0x000122b4
   11a40:			; <UNDEFINED> instruction: 0x000122b4
   11a44:			; <UNDEFINED> instruction: 0x000122b4
   11a48:			; <UNDEFINED> instruction: 0x000122b4
   11a4c:			; <UNDEFINED> instruction: 0x000122b4
   11a50:			; <UNDEFINED> instruction: 0x000122b4
   11a54:			; <UNDEFINED> instruction: 0x000122b4
   11a58:			; <UNDEFINED> instruction: 0x000122b4
   11a5c:			; <UNDEFINED> instruction: 0x000122b4
   11a60:			; <UNDEFINED> instruction: 0x000122b4
   11a64:			; <UNDEFINED> instruction: 0x000122b4
   11a68:			; <UNDEFINED> instruction: 0x000122b4
   11a6c:			; <UNDEFINED> instruction: 0x000122b4
   11a70:			; <UNDEFINED> instruction: 0x000122b4
   11a74:			; <UNDEFINED> instruction: 0x000122b4
   11a78:	muleq	r1, r4, r2
   11a7c:	andeq	r2, r1, r8, asr #3
   11a80:	andeq	r2, r1, r8, asr #3
   11a84:	ldrdeq	r1, [r1], -r8
   11a88:	andeq	r2, r1, r8, asr #3
   11a8c:	andeq	r2, r1, r0, ror #4
   11a90:	andeq	r2, r1, r8, asr #3
   11a94:	andeq	r2, r1, r4, lsr r2
   11a98:	andeq	r2, r1, r8, asr #3
   11a9c:	andeq	r2, r1, r8, asr #3
   11aa0:	andeq	r2, r1, r8, asr #3
   11aa4:	andeq	r2, r1, r0, ror #4
   11aa8:	andeq	r2, r1, r0, ror #4
   11aac:	andeq	r2, r1, r0, ror #4
   11ab0:	andeq	r2, r1, r0, ror #4
   11ab4:	andeq	r2, r1, r0, ror #4
   11ab8:	andeq	r2, r1, r0, ror #4
   11abc:	andeq	r2, r1, r0, ror #4
   11ac0:	andeq	r2, r1, r0, ror #4
   11ac4:	andeq	r2, r1, r0, ror #4
   11ac8:	andeq	r2, r1, r0, ror #4
   11acc:	andeq	r2, r1, r0, ror #4
   11ad0:	andeq	r2, r1, r0, ror #4
   11ad4:	andeq	r2, r1, r0, ror #4
   11ad8:	andeq	r2, r1, r0, ror #4
   11adc:	andeq	r2, r1, r0, ror #4
   11ae0:	andeq	r2, r1, r0, ror #4
   11ae4:	andeq	r2, r1, r8, asr #3
   11ae8:	andeq	r2, r1, r8, asr #3
   11aec:	andeq	r2, r1, r8, asr #3
   11af0:	andeq	r2, r1, r8, asr #3
   11af4:	andeq	r2, r1, r4, lsl #4
   11af8:			; <UNDEFINED> instruction: 0x000122b4
   11afc:	andeq	r2, r1, r0, ror #4
   11b00:	andeq	r2, r1, r0, ror #4
   11b04:	andeq	r2, r1, r0, ror #4
   11b08:	andeq	r2, r1, r0, ror #4
   11b0c:	andeq	r2, r1, r0, ror #4
   11b10:	andeq	r2, r1, r0, ror #4
   11b14:	andeq	r2, r1, r0, ror #4
   11b18:	andeq	r2, r1, r0, ror #4
   11b1c:	andeq	r2, r1, r0, ror #4
   11b20:	andeq	r2, r1, r0, ror #4
   11b24:	andeq	r2, r1, r0, ror #4
   11b28:	andeq	r2, r1, r0, ror #4
   11b2c:	andeq	r2, r1, r0, ror #4
   11b30:	andeq	r2, r1, r0, ror #4
   11b34:	andeq	r2, r1, r0, ror #4
   11b38:	andeq	r2, r1, r0, ror #4
   11b3c:	andeq	r2, r1, r0, ror #4
   11b40:	andeq	r2, r1, r0, ror #4
   11b44:	andeq	r2, r1, r0, ror #4
   11b48:	andeq	r2, r1, r0, ror #4
   11b4c:	andeq	r2, r1, r0, ror #4
   11b50:	andeq	r2, r1, r0, ror #4
   11b54:	andeq	r2, r1, r0, ror #4
   11b58:	andeq	r2, r1, r0, ror #4
   11b5c:	andeq	r2, r1, r0, ror #4
   11b60:	andeq	r2, r1, r0, ror #4
   11b64:	andeq	r2, r1, r8, asr #3
   11b68:	andeq	r1, r1, r4, lsr #30
   11b6c:	andeq	r2, r1, r0, ror #4
   11b70:	andeq	r2, r1, r8, asr #3
   11b74:	andeq	r2, r1, r0, ror #4
   11b78:	andeq	r2, r1, r8, asr #3
   11b7c:	andeq	r2, r1, r0, ror #4
   11b80:	andeq	r2, r1, r0, ror #4
   11b84:	andeq	r2, r1, r0, ror #4
   11b88:	andeq	r2, r1, r0, ror #4
   11b8c:	andeq	r2, r1, r0, ror #4
   11b90:	andeq	r2, r1, r0, ror #4
   11b94:	andeq	r2, r1, r0, ror #4
   11b98:	andeq	r2, r1, r0, ror #4
   11b9c:	andeq	r2, r1, r0, ror #4
   11ba0:	andeq	r2, r1, r0, ror #4
   11ba4:	andeq	r2, r1, r0, ror #4
   11ba8:	andeq	r2, r1, r0, ror #4
   11bac:	andeq	r2, r1, r0, ror #4
   11bb0:	andeq	r2, r1, r0, ror #4
   11bb4:	andeq	r2, r1, r0, ror #4
   11bb8:	andeq	r2, r1, r0, ror #4
   11bbc:	andeq	r2, r1, r0, ror #4
   11bc0:	andeq	r2, r1, r0, ror #4
   11bc4:	andeq	r2, r1, r0, ror #4
   11bc8:	andeq	r2, r1, r0, ror #4
   11bcc:	andeq	r2, r1, r0, ror #4
   11bd0:	andeq	r2, r1, r0, ror #4
   11bd4:	andeq	r2, r1, r0, ror #4
   11bd8:	andeq	r2, r1, r0, ror #4
   11bdc:	andeq	r2, r1, r0, ror #4
   11be0:	andeq	r2, r1, r0, ror #4
   11be4:			; <UNDEFINED> instruction: 0x00011db8
   11be8:	andeq	r2, r1, r8, asr #3
   11bec:			; <UNDEFINED> instruction: 0x00011db8
   11bf0:	ldrdeq	r1, [r1], -r8
   11bf4:	mov	r3, #1
   11bf8:	str	r3, [sp, #28]
   11bfc:	str	r3, [sp, #52]	; 0x34
   11c00:	ldr	r3, [pc, #4000]	; 12ba8 <abort@plt+0x1e84>
   11c04:	mov	r7, #0
   11c08:	str	r3, [sp, #64]	; 0x40
   11c0c:	mov	r3, #2
   11c10:	str	r3, [sp, #152]	; 0x98
   11c14:	b	11918 <abort@plt+0xbf4>
   11c18:	ldr	r3, [sp, #28]
   11c1c:	cmp	r3, #0
   11c20:	beq	11d7c <abort@plt+0x1058>
   11c24:	mov	r3, #1
   11c28:	str	r3, [sp, #52]	; 0x34
   11c2c:	ldr	r3, [pc, #3956]	; 12ba8 <abort@plt+0x1e84>
   11c30:	mov	r7, #0
   11c34:	str	r3, [sp, #64]	; 0x40
   11c38:	b	11918 <abort@plt+0xbf4>
   11c3c:	mov	r3, #1
   11c40:	str	r3, [sp, #44]	; 0x2c
   11c44:	str	r3, [sp, #52]	; 0x34
   11c48:	str	r3, [sp, #28]
   11c4c:	b	11c00 <abort@plt+0xedc>
   11c50:	mov	r3, #0
   11c54:	str	r3, [sp, #28]
   11c58:	mov	r3, #1
   11c5c:	str	r3, [sp, #44]	; 0x2c
   11c60:	mov	r7, #0
   11c64:	b	11918 <abort@plt+0xbf4>
   11c68:	ldr	r3, [sp, #152]	; 0x98
   11c6c:	cmp	r3, #10
   11c70:	beq	11cb4 <abort@plt+0xf90>
   11c74:	mov	r2, #5
   11c78:	ldr	r1, [pc, #3884]	; 12bac <abort@plt+0x1e88>
   11c7c:	mov	r0, #0
   11c80:	bl	10ba4 <dcgettext@plt>
   11c84:	ldr	r2, [pc, #3872]	; 12bac <abort@plt+0x1e88>
   11c88:	cmp	r0, r2
   11c8c:	str	r0, [sp, #164]	; 0xa4
   11c90:	beq	12c98 <abort@plt+0x1f74>
   11c94:	mov	r2, #5
   11c98:	ldr	r1, [pc, #3848]	; 12ba8 <abort@plt+0x1e84>
   11c9c:	mov	r0, #0
   11ca0:	bl	10ba4 <dcgettext@plt>
   11ca4:	ldr	r2, [pc, #3836]	; 12ba8 <abort@plt+0x1e84>
   11ca8:	cmp	r0, r2
   11cac:	str	r0, [sp, #168]	; 0xa8
   11cb0:	beq	12c88 <abort@plt+0x1f64>
   11cb4:	ldr	r7, [sp, #28]
   11cb8:	cmp	r7, #0
   11cbc:	movne	r7, #0
   11cc0:	bne	11cf4 <abort@plt+0xfd0>
   11cc4:	ldr	r3, [sp, #164]	; 0xa4
   11cc8:	ldrb	r3, [r3]
   11ccc:	cmp	r3, #0
   11cd0:	beq	12ca8 <abort@plt+0x1f84>
   11cd4:	ldr	r2, [sp, #164]	; 0xa4
   11cd8:	ldr	r1, [sp, #32]
   11cdc:	cmp	fp, r7
   11ce0:	strbhi	r3, [r1, r7]
   11ce4:	ldrb	r3, [r2, #1]!
   11ce8:	add	r7, r7, #1
   11cec:	cmp	r3, #0
   11cf0:	bne	11cdc <abort@plt+0xfb8>
   11cf4:	ldr	r0, [sp, #168]	; 0xa8
   11cf8:	bl	10c70 <strlen@plt>
   11cfc:	ldr	r3, [sp, #168]	; 0xa8
   11d00:	str	r3, [sp, #64]	; 0x40
   11d04:	mov	r3, #1
   11d08:	str	r3, [sp, #44]	; 0x2c
   11d0c:	str	r0, [sp, #52]	; 0x34
   11d10:	b	11918 <abort@plt+0xbf4>
   11d14:	mov	r3, #1
   11d18:	str	r3, [sp, #44]	; 0x2c
   11d1c:	str	r3, [sp, #52]	; 0x34
   11d20:	str	r3, [sp, #28]
   11d24:	ldr	r3, [pc, #3716]	; 12bb0 <abort@plt+0x1e8c>
   11d28:	mov	r7, #0
   11d2c:	str	r3, [sp, #64]	; 0x40
   11d30:	mov	r3, #5
   11d34:	str	r3, [sp, #152]	; 0x98
   11d38:	b	11918 <abort@plt+0xbf4>
   11d3c:	ldr	r3, [sp, #28]
   11d40:	cmp	r3, #0
   11d44:	beq	12a44 <abort@plt+0x1d20>
   11d48:	ldr	r3, [sp, #28]
   11d4c:	mov	r7, #0
   11d50:	str	r3, [sp, #44]	; 0x2c
   11d54:	mov	r3, #1
   11d58:	str	r3, [sp, #52]	; 0x34
   11d5c:	ldr	r3, [pc, #3660]	; 12bb0 <abort@plt+0x1e8c>
   11d60:	str	r3, [sp, #64]	; 0x40
   11d64:	b	11918 <abort@plt+0xbf4>
   11d68:	ldr	r3, [sp, #28]
   11d6c:	cmp	r3, #0
   11d70:	mov	r3, #1
   11d74:	streq	r3, [sp, #44]	; 0x2c
   11d78:	bne	11bfc <abort@plt+0xed8>
   11d7c:	cmp	fp, #0
   11d80:	beq	12a74 <abort@plt+0x1d50>
   11d84:	ldr	r3, [sp, #32]
   11d88:	mov	r2, #39	; 0x27
   11d8c:	mov	r7, #1
   11d90:	strb	r2, [r3]
   11d94:	mov	r3, #0
   11d98:	str	r3, [sp, #28]
   11d9c:	mov	r3, #1
   11da0:	str	r3, [sp, #52]	; 0x34
   11da4:	ldr	r3, [pc, #3580]	; 12ba8 <abort@plt+0x1e84>
   11da8:	str	r3, [sp, #64]	; 0x40
   11dac:	mov	r3, #2
   11db0:	str	r3, [sp, #152]	; 0x98
   11db4:	b	11918 <abort@plt+0xbf4>
   11db8:	ldr	r3, [sp, #24]
   11dbc:	cmn	r3, #1
   11dc0:	beq	129d8 <abort@plt+0x1cb4>
   11dc4:	ldr	r3, [sp, #24]
   11dc8:	subs	r3, r3, #1
   11dcc:	movne	r3, #1
   11dd0:	cmp	r3, #0
   11dd4:	bne	11de0 <abort@plt+0x10bc>
   11dd8:	cmp	sl, #0
   11ddc:	beq	121cc <abort@plt+0x14a8>
   11de0:	ldr	r3, [sp, #152]	; 0x98
   11de4:	mov	r5, #0
   11de8:	sub	r2, r3, #2
   11dec:	mov	r8, r5
   11df0:	clz	r2, r2
   11df4:	lsr	r2, r2, #5
   11df8:	ldr	r3, [sp, #60]	; 0x3c
   11dfc:	ldr	r1, [sp, #28]
   11e00:	orr	r3, r2, r3
   11e04:	eor	r3, r3, #1
   11e08:	orr	r3, r1, r3
   11e0c:	tst	r3, #255	; 0xff
   11e10:	bne	1253c <abort@plt+0x1818>
   11e14:	cmp	r6, #0
   11e18:	bne	11f68 <abort@plt+0x1244>
   11e1c:	ldr	r3, [sp, #40]	; 0x28
   11e20:	eor	r8, r8, #1
   11e24:	and	r8, r8, r3
   11e28:	add	sl, sl, #1
   11e2c:	uxtb	r6, r8
   11e30:	cmp	r6, #0
   11e34:	beq	11e68 <abort@plt+0x1144>
   11e38:	cmp	fp, r7
   11e3c:	movhi	r2, #39	; 0x27
   11e40:	ldrhi	r3, [sp, #32]
   11e44:	strbhi	r2, [r3, r7]
   11e48:	add	r3, r7, #1
   11e4c:	cmp	fp, r3
   11e50:	movhi	r1, #39	; 0x27
   11e54:	ldrhi	r2, [sp, #32]
   11e58:	add	r7, r7, #2
   11e5c:	strbhi	r1, [r2, r3]
   11e60:	mov	r3, #0
   11e64:	str	r3, [sp, #40]	; 0x28
   11e68:	cmp	r7, fp
   11e6c:	ldrcc	r3, [sp, #32]
   11e70:	strbcc	r4, [r3, r7]
   11e74:	ldr	r3, [sp, #36]	; 0x24
   11e78:	cmp	r5, #0
   11e7c:	moveq	r3, #0
   11e80:	str	r3, [sp, #36]	; 0x24
   11e84:	ldr	r3, [sp, #24]
   11e88:	add	r7, r7, #1
   11e8c:	cmn	r3, #1
   11e90:	bne	11934 <abort@plt+0xc10>
   11e94:	ldr	r3, [sp, #56]	; 0x38
   11e98:	ldrb	r5, [r3, sl]
   11e9c:	adds	r5, r5, #0
   11ea0:	movne	r5, #1
   11ea4:	cmp	r5, #0
   11ea8:	bne	11948 <abort@plt+0xc24>
   11eac:	ldr	r3, [sp, #152]	; 0x98
   11eb0:	ldr	r1, [sp, #28]
   11eb4:	sub	r3, r3, #2
   11eb8:	clz	r3, r3
   11ebc:	lsr	r3, r3, #5
   11ec0:	and	r9, r1, r3
   11ec4:	cmp	r7, #0
   11ec8:	movne	r2, #0
   11ecc:	andeq	r2, r9, #1
   11ed0:	cmp	r2, #0
   11ed4:	bne	128b0 <abort@plt+0x1b8c>
   11ed8:	eor	r2, r1, #1
   11edc:	ands	r3, r3, r2
   11ee0:	beq	12d6c <abort@plt+0x2048>
   11ee4:	ldr	r2, [sp, #68]	; 0x44
   11ee8:	cmp	r2, #0
   11eec:	beq	12d58 <abort@plt+0x2034>
   11ef0:	ldr	r3, [sp, #36]	; 0x24
   11ef4:	cmp	r3, #0
   11ef8:	bne	12d10 <abort@plt+0x1fec>
   11efc:	ldr	r2, [sp, #72]	; 0x48
   11f00:	clz	r3, fp
   11f04:	cmp	r2, #0
   11f08:	lsr	r3, r3, #5
   11f0c:	moveq	r3, #0
   11f10:	cmp	r3, #0
   11f14:	beq	12cb0 <abort@plt+0x1f8c>
   11f18:	str	r3, [sp, #68]	; 0x44
   11f1c:	ldr	fp, [sp, #72]	; 0x48
   11f20:	b	118d0 <abort@plt+0xbac>
   11f24:	ldr	r3, [sp, #152]	; 0x98
   11f28:	cmp	r3, #2
   11f2c:	beq	12580 <abort@plt+0x185c>
   11f30:	ldr	r3, [sp, #44]	; 0x2c
   11f34:	ldr	r2, [sp, #28]
   11f38:	and	r2, r3, r2
   11f3c:	ands	r2, r9, r2
   11f40:	bne	1258c <abort@plt+0x1868>
   11f44:	mov	r4, #92	; 0x5c
   11f48:	mov	r3, r4
   11f4c:	ldr	r1, [sp, #44]	; 0x2c
   11f50:	cmp	r1, #0
   11f54:	moveq	r5, #0
   11f58:	moveq	r8, r1
   11f5c:	beq	11df8 <abort@plt+0x10d4>
   11f60:	mov	r4, r3
   11f64:	mov	r5, #0
   11f68:	ldr	r3, [sp, #28]
   11f6c:	cmp	r3, #0
   11f70:	bne	12574 <abort@plt+0x1850>
   11f74:	ldr	r3, [sp, #40]	; 0x28
   11f78:	eor	r9, r3, #1
   11f7c:	and	r9, r9, r2
   11f80:	ands	r9, r9, #255	; 0xff
   11f84:	beq	11fc8 <abort@plt+0x12a4>
   11f88:	cmp	fp, r7
   11f8c:	movhi	r2, #39	; 0x27
   11f90:	ldrhi	r3, [sp, #32]
   11f94:	str	r9, [sp, #40]	; 0x28
   11f98:	strbhi	r2, [r3, r7]
   11f9c:	add	r3, r7, #1
   11fa0:	cmp	fp, r3
   11fa4:	movhi	r1, #36	; 0x24
   11fa8:	ldrhi	r2, [sp, #32]
   11fac:	strbhi	r1, [r2, r3]
   11fb0:	add	r3, r7, #2
   11fb4:	cmp	fp, r3
   11fb8:	add	r7, r7, #3
   11fbc:	ldrhi	r2, [sp, #32]
   11fc0:	movhi	r1, #39	; 0x27
   11fc4:	strbhi	r1, [r2, r3]
   11fc8:	cmp	fp, r7
   11fcc:	movhi	r2, #92	; 0x5c
   11fd0:	ldrhi	r3, [sp, #32]
   11fd4:	add	sl, sl, #1
   11fd8:	strbhi	r2, [r3, r7]
   11fdc:	add	r7, r7, #1
   11fe0:	b	11e68 <abort@plt+0x1144>
   11fe4:	ldr	r3, [sp, #152]	; 0x98
   11fe8:	mov	r4, #11
   11fec:	sub	r2, r3, #2
   11ff0:	mov	r3, #118	; 0x76
   11ff4:	clz	r2, r2
   11ff8:	lsr	r2, r2, #5
   11ffc:	b	11f4c <abort@plt+0x1228>
   12000:	mov	r4, #10
   12004:	mov	r3, #110	; 0x6e
   12008:	ldr	r2, [sp, #152]	; 0x98
   1200c:	ldr	r1, [sp, #28]
   12010:	sub	r2, r2, #2
   12014:	clz	r2, r2
   12018:	lsr	r2, r2, #5
   1201c:	ands	r1, r1, r2
   12020:	beq	11f4c <abort@plt+0x1228>
   12024:	ldr	sl, [sp, #32]
   12028:	mov	r8, fp
   1202c:	mov	r2, r1
   12030:	mov	r3, #2
   12034:	str	r3, [sp, #152]	; 0x98
   12038:	ldr	r9, [sp, #44]	; 0x2c
   1203c:	ldr	r3, [sp, #152]	; 0x98
   12040:	and	r9, r9, r2
   12044:	tst	r9, #255	; 0xff
   12048:	movne	r3, #4
   1204c:	str	r3, [sp, #152]	; 0x98
   12050:	ldr	r3, [sp, #156]	; 0x9c
   12054:	mov	ip, #0
   12058:	bic	r3, r3, #2
   1205c:	str	r3, [sp, #4]
   12060:	ldr	r3, [sp, #168]	; 0xa8
   12064:	ldr	r2, [sp, #56]	; 0x38
   12068:	str	r3, [sp, #16]
   1206c:	ldr	r3, [sp, #164]	; 0xa4
   12070:	mov	r1, r8
   12074:	str	r3, [sp, #12]
   12078:	ldr	r3, [sp, #152]	; 0x98
   1207c:	mov	r0, sl
   12080:	str	r3, [sp]
   12084:	str	ip, [sp, #8]
   12088:	ldr	r3, [sp, #24]
   1208c:	bl	11874 <abort@plt+0xb50>
   12090:	mov	fp, r0
   12094:	mov	r0, fp
   12098:	add	sp, sp, #116	; 0x74
   1209c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120a0:	ldr	r3, [sp, #152]	; 0x98
   120a4:	mov	r4, #8
   120a8:	sub	r2, r3, #2
   120ac:	mov	r3, #98	; 0x62
   120b0:	clz	r2, r2
   120b4:	lsr	r2, r2, #5
   120b8:	b	11f4c <abort@plt+0x1228>
   120bc:	ldr	r3, [sp, #152]	; 0x98
   120c0:	mov	r4, #7
   120c4:	sub	r2, r3, #2
   120c8:	mov	r3, #97	; 0x61
   120cc:	clz	r2, r2
   120d0:	lsr	r2, r2, #5
   120d4:	b	11f4c <abort@plt+0x1228>
   120d8:	ldr	r3, [sp, #44]	; 0x2c
   120dc:	cmp	r3, #0
   120e0:	beq	128c4 <abort@plt+0x1ba0>
   120e4:	ldr	r3, [sp, #28]
   120e8:	cmp	r3, #0
   120ec:	bne	12b9c <abort@plt+0x1e78>
   120f0:	ldr	r3, [sp, #152]	; 0x98
   120f4:	sub	r2, r3, #2
   120f8:	ldr	r3, [sp, #40]	; 0x28
   120fc:	clz	r2, r2
   12100:	eor	r3, r3, #1
   12104:	lsr	r2, r2, #5
   12108:	ands	r3, r2, r3
   1210c:	moveq	r1, r7
   12110:	beq	12154 <abort@plt+0x1430>
   12114:	cmp	fp, r7
   12118:	movhi	r0, #39	; 0x27
   1211c:	ldrhi	r1, [sp, #32]
   12120:	str	r3, [sp, #40]	; 0x28
   12124:	strbhi	r0, [r1, r7]
   12128:	add	r1, r7, #1
   1212c:	cmp	fp, r1
   12130:	movhi	ip, #36	; 0x24
   12134:	ldrhi	r0, [sp, #32]
   12138:	strbhi	ip, [r0, r1]
   1213c:	add	r1, r7, #2
   12140:	cmp	fp, r1
   12144:	movhi	ip, #39	; 0x27
   12148:	ldrhi	r0, [sp, #32]
   1214c:	strbhi	ip, [r0, r1]
   12150:	add	r1, r7, #3
   12154:	cmp	fp, r1
   12158:	movhi	r0, #92	; 0x5c
   1215c:	ldrhi	r3, [sp, #32]
   12160:	add	r7, r1, #1
   12164:	strbhi	r0, [r3, r1]
   12168:	cmp	r8, #0
   1216c:	beq	12ab0 <abort@plt+0x1d8c>
   12170:	ldr	r0, [sp, #24]
   12174:	add	r3, sl, #1
   12178:	cmp	r3, r0
   1217c:	bcs	129ec <abort@plt+0x1cc8>
   12180:	ldr	r0, [sp, #56]	; 0x38
   12184:	ldrb	r3, [r0, r3]
   12188:	sub	r3, r3, #48	; 0x30
   1218c:	cmp	r3, #9
   12190:	bhi	129ec <abort@plt+0x1cc8>
   12194:	cmp	fp, r7
   12198:	movhi	r3, #48	; 0x30
   1219c:	ldrhi	r0, [sp, #32]
   121a0:	ldr	r5, [sp, #28]
   121a4:	mov	r4, #48	; 0x30
   121a8:	strbhi	r3, [r0, r7]
   121ac:	add	r3, r1, #2
   121b0:	cmp	fp, r3
   121b4:	movhi	r0, #48	; 0x30
   121b8:	ldrhi	ip, [sp, #32]
   121bc:	add	r7, r1, #3
   121c0:	strbhi	r0, [ip, r3]
   121c4:	b	11df8 <abort@plt+0x10d4>
   121c8:	mov	r5, #0
   121cc:	ldr	r3, [sp, #152]	; 0x98
   121d0:	sub	r2, r3, #2
   121d4:	ldr	r3, [sp, #28]
   121d8:	clz	r2, r2
   121dc:	lsr	r2, r2, #5
   121e0:	ands	r8, r3, r2
   121e4:	beq	11df8 <abort@plt+0x10d4>
   121e8:	mov	r3, r8
   121ec:	mov	r2, r3
   121f0:	mov	r3, #2
   121f4:	ldr	sl, [sp, #32]
   121f8:	mov	r8, fp
   121fc:	str	r3, [sp, #152]	; 0x98
   12200:	b	12038 <abort@plt+0x1314>
   12204:	ldr	r3, [sp, #152]	; 0x98
   12208:	cmp	r3, #2
   1220c:	beq	12930 <abort@plt+0x1c0c>
   12210:	cmp	r3, #5
   12214:	beq	128f0 <abort@plt+0x1bcc>
   12218:	mov	r5, #0
   1221c:	sub	r2, r3, #2
   12220:	mov	r8, r5
   12224:	clz	r2, r2
   12228:	mov	r4, #63	; 0x3f
   1222c:	lsr	r2, r2, #5
   12230:	b	11df8 <abort@plt+0x10d4>
   12234:	ldr	r3, [sp, #152]	; 0x98
   12238:	cmp	r3, #2
   1223c:	beq	12950 <abort@plt+0x1c2c>
   12240:	mov	r2, #0
   12244:	str	r5, [sp, #68]	; 0x44
   12248:	mov	r8, r2
   1224c:	mov	r4, #39	; 0x27
   12250:	b	11df8 <abort@plt+0x10d4>
   12254:	mov	r4, #13
   12258:	mov	r3, #114	; 0x72
   1225c:	b	12008 <abort@plt+0x12e4>
   12260:	ldr	r3, [sp, #152]	; 0x98
   12264:	mov	r8, #0
   12268:	sub	r2, r3, #2
   1226c:	clz	r2, r2
   12270:	lsr	r2, r2, #5
   12274:	b	11df8 <abort@plt+0x10d4>
   12278:	ldr	r3, [sp, #152]	; 0x98
   1227c:	mov	r4, #12
   12280:	sub	r2, r3, #2
   12284:	mov	r3, #102	; 0x66
   12288:	clz	r2, r2
   1228c:	lsr	r2, r2, #5
   12290:	b	11f4c <abort@plt+0x1228>
   12294:	mov	r5, r6
   12298:	b	121cc <abort@plt+0x14a8>
   1229c:	ldr	r3, [sp, #152]	; 0x98
   122a0:	sub	r2, r3, #2
   122a4:	mov	r3, #116	; 0x74
   122a8:	clz	r2, r2
   122ac:	lsr	r2, r2, #5
   122b0:	b	11f4c <abort@plt+0x1228>
   122b4:	ldr	r8, [sp, #76]	; 0x4c
   122b8:	cmp	r8, #1
   122bc:	bne	1276c <abort@plt+0x1a48>
   122c0:	bl	10c58 <__ctype_b_loc@plt>
   122c4:	sxth	r3, r4
   122c8:	mov	ip, r8
   122cc:	lsl	r3, r3, #1
   122d0:	ldr	r2, [r0]
   122d4:	ldrh	r3, [r2, r3]
   122d8:	and	r3, r3, #16384	; 0x4000
   122dc:	cmp	r3, #0
   122e0:	movne	r5, #1
   122e4:	moveq	r5, #0
   122e8:	moveq	r3, #1
   122ec:	movne	r3, #0
   122f0:	ldr	r2, [sp, #44]	; 0x2c
   122f4:	and	r3, r3, r2
   122f8:	ands	r8, r3, #255	; 0xff
   122fc:	bne	12600 <abort@plt+0x18dc>
   12300:	ldr	r3, [sp, #152]	; 0x98
   12304:	sub	r2, r3, #2
   12308:	clz	r2, r2
   1230c:	lsr	r2, r2, #5
   12310:	b	11df8 <abort@plt+0x10d4>
   12314:	ldr	r3, [sp, #56]	; 0x38
   12318:	add	r3, r3, sl
   1231c:	str	r3, [sp, #48]	; 0x30
   12320:	ldr	r3, [sp, #48]	; 0x30
   12324:	mov	r6, #0
   12328:	ldrb	r4, [r3]
   1232c:	cmp	r4, #126	; 0x7e
   12330:	ldrls	pc, [pc, r4, lsl #2]
   12334:	b	122b4 <abort@plt+0x1590>
   12338:	ldrdeq	r2, [r1], -r8
   1233c:			; <UNDEFINED> instruction: 0x000122b4
   12340:			; <UNDEFINED> instruction: 0x000122b4
   12344:			; <UNDEFINED> instruction: 0x000122b4
   12348:			; <UNDEFINED> instruction: 0x000122b4
   1234c:			; <UNDEFINED> instruction: 0x000122b4
   12350:			; <UNDEFINED> instruction: 0x000122b4
   12354:	strheq	r2, [r1], -ip
   12358:	andeq	r2, r1, r0, lsr #1
   1235c:	andeq	r2, r1, r4, lsr r5
   12360:	andeq	r2, r1, r0
   12364:	andeq	r1, r1, r4, ror #31
   12368:	andeq	r2, r1, r8, ror r2
   1236c:	andeq	r2, r1, r4, asr r2
   12370:			; <UNDEFINED> instruction: 0x000122b4
   12374:			; <UNDEFINED> instruction: 0x000122b4
   12378:			; <UNDEFINED> instruction: 0x000122b4
   1237c:			; <UNDEFINED> instruction: 0x000122b4
   12380:			; <UNDEFINED> instruction: 0x000122b4
   12384:			; <UNDEFINED> instruction: 0x000122b4
   12388:			; <UNDEFINED> instruction: 0x000122b4
   1238c:			; <UNDEFINED> instruction: 0x000122b4
   12390:			; <UNDEFINED> instruction: 0x000122b4
   12394:			; <UNDEFINED> instruction: 0x000122b4
   12398:			; <UNDEFINED> instruction: 0x000122b4
   1239c:			; <UNDEFINED> instruction: 0x000122b4
   123a0:			; <UNDEFINED> instruction: 0x000122b4
   123a4:			; <UNDEFINED> instruction: 0x000122b4
   123a8:			; <UNDEFINED> instruction: 0x000122b4
   123ac:			; <UNDEFINED> instruction: 0x000122b4
   123b0:			; <UNDEFINED> instruction: 0x000122b4
   123b4:			; <UNDEFINED> instruction: 0x000122b4
   123b8:	andeq	r2, r1, ip, asr #3
   123bc:	andeq	r2, r1, r8, asr #3
   123c0:	andeq	r2, r1, r8, asr #3
   123c4:	ldrdeq	r1, [r1], -r8
   123c8:	andeq	r2, r1, r8, asr #3
   123cc:	andeq	r2, r1, r0, ror #4
   123d0:	andeq	r2, r1, r8, asr #3
   123d4:	andeq	r2, r1, r4, lsr r2
   123d8:	andeq	r2, r1, r8, asr #3
   123dc:	andeq	r2, r1, r8, asr #3
   123e0:	andeq	r2, r1, r8, asr #3
   123e4:	andeq	r2, r1, r0, ror #4
   123e8:	andeq	r2, r1, r0, ror #4
   123ec:	andeq	r2, r1, r0, ror #4
   123f0:	andeq	r2, r1, r0, ror #4
   123f4:	andeq	r2, r1, r0, ror #4
   123f8:	andeq	r2, r1, r0, ror #4
   123fc:	andeq	r2, r1, r0, ror #4
   12400:	andeq	r2, r1, r0, ror #4
   12404:	andeq	r2, r1, r0, ror #4
   12408:	andeq	r2, r1, r0, ror #4
   1240c:	andeq	r2, r1, r0, ror #4
   12410:	andeq	r2, r1, r0, ror #4
   12414:	andeq	r2, r1, r0, ror #4
   12418:	andeq	r2, r1, r0, ror #4
   1241c:	andeq	r2, r1, r0, ror #4
   12420:	andeq	r2, r1, r0, ror #4
   12424:	andeq	r2, r1, r8, asr #3
   12428:	andeq	r2, r1, r8, asr #3
   1242c:	andeq	r2, r1, r8, asr #3
   12430:	andeq	r2, r1, r8, asr #3
   12434:	andeq	r2, r1, r4, lsl #4
   12438:			; <UNDEFINED> instruction: 0x000122b4
   1243c:	andeq	r2, r1, r0, ror #4
   12440:	andeq	r2, r1, r0, ror #4
   12444:	andeq	r2, r1, r0, ror #4
   12448:	andeq	r2, r1, r0, ror #4
   1244c:	andeq	r2, r1, r0, ror #4
   12450:	andeq	r2, r1, r0, ror #4
   12454:	andeq	r2, r1, r0, ror #4
   12458:	andeq	r2, r1, r0, ror #4
   1245c:	andeq	r2, r1, r0, ror #4
   12460:	andeq	r2, r1, r0, ror #4
   12464:	andeq	r2, r1, r0, ror #4
   12468:	andeq	r2, r1, r0, ror #4
   1246c:	andeq	r2, r1, r0, ror #4
   12470:	andeq	r2, r1, r0, ror #4
   12474:	andeq	r2, r1, r0, ror #4
   12478:	andeq	r2, r1, r0, ror #4
   1247c:	andeq	r2, r1, r0, ror #4
   12480:	andeq	r2, r1, r0, ror #4
   12484:	andeq	r2, r1, r0, ror #4
   12488:	andeq	r2, r1, r0, ror #4
   1248c:	andeq	r2, r1, r0, ror #4
   12490:	andeq	r2, r1, r0, ror #4
   12494:	andeq	r2, r1, r0, ror #4
   12498:	andeq	r2, r1, r0, ror #4
   1249c:	andeq	r2, r1, r0, ror #4
   124a0:	andeq	r2, r1, r0, ror #4
   124a4:	andeq	r2, r1, r8, asr #3
   124a8:	andeq	r1, r1, r4, lsr #30
   124ac:	andeq	r2, r1, r0, ror #4
   124b0:	andeq	r2, r1, r8, asr #3
   124b4:	andeq	r2, r1, r0, ror #4
   124b8:	andeq	r2, r1, r8, asr #3
   124bc:	andeq	r2, r1, r0, ror #4
   124c0:	andeq	r2, r1, r0, ror #4
   124c4:	andeq	r2, r1, r0, ror #4
   124c8:	andeq	r2, r1, r0, ror #4
   124cc:	andeq	r2, r1, r0, ror #4
   124d0:	andeq	r2, r1, r0, ror #4
   124d4:	andeq	r2, r1, r0, ror #4
   124d8:	andeq	r2, r1, r0, ror #4
   124dc:	andeq	r2, r1, r0, ror #4
   124e0:	andeq	r2, r1, r0, ror #4
   124e4:	andeq	r2, r1, r0, ror #4
   124e8:	andeq	r2, r1, r0, ror #4
   124ec:	andeq	r2, r1, r0, ror #4
   124f0:	andeq	r2, r1, r0, ror #4
   124f4:	andeq	r2, r1, r0, ror #4
   124f8:	andeq	r2, r1, r0, ror #4
   124fc:	andeq	r2, r1, r0, ror #4
   12500:	andeq	r2, r1, r0, ror #4
   12504:	andeq	r2, r1, r0, ror #4
   12508:	andeq	r2, r1, r0, ror #4
   1250c:	andeq	r2, r1, r0, ror #4
   12510:	andeq	r2, r1, r0, ror #4
   12514:	andeq	r2, r1, r0, ror #4
   12518:	andeq	r2, r1, r0, ror #4
   1251c:	andeq	r2, r1, r0, ror #4
   12520:	andeq	r2, r1, r0, ror #4
   12524:			; <UNDEFINED> instruction: 0x00011db8
   12528:	andeq	r2, r1, r8, asr #3
   1252c:			; <UNDEFINED> instruction: 0x00011db8
   12530:	ldrdeq	r1, [r1], -r8
   12534:	mov	r3, #116	; 0x74
   12538:	b	12008 <abort@plt+0x12e4>
   1253c:	ldr	r3, [sp, #160]	; 0xa0
   12540:	cmp	r3, #0
   12544:	beq	11e14 <abort@plt+0x10f0>
   12548:	lsr	r3, r4, #5
   1254c:	ldr	r0, [sp, #160]	; 0xa0
   12550:	uxtb	r3, r3
   12554:	and	r1, r4, #31
   12558:	ldr	r0, [r0, r3, lsl #2]
   1255c:	lsr	r3, r0, r1
   12560:	tst	r3, #1
   12564:	beq	11e14 <abort@plt+0x10f0>
   12568:	ldr	r3, [sp, #28]
   1256c:	cmp	r3, #0
   12570:	beq	11f74 <abort@plt+0x1250>
   12574:	ldr	sl, [sp, #32]
   12578:	mov	r8, fp
   1257c:	b	12038 <abort@plt+0x1314>
   12580:	ldr	r3, [sp, #28]
   12584:	cmp	r3, #0
   12588:	bne	12adc <abort@plt+0x1db8>
   1258c:	add	sl, sl, #1
   12590:	ldr	r6, [sp, #40]	; 0x28
   12594:	mov	r5, #0
   12598:	mov	r4, #92	; 0x5c
   1259c:	b	11e30 <abort@plt+0x110c>
   125a0:	cmp	r9, r8
   125a4:	bne	12814 <abort@plt+0x1af0>
   125a8:	ldr	r0, [sp, #100]	; 0x64
   125ac:	bl	10bc8 <iswprint@plt>
   125b0:	add	r5, r5, r4
   125b4:	cmp	r0, #0
   125b8:	add	r0, sp, #104	; 0x68
   125bc:	moveq	r6, #0
   125c0:	bl	10b80 <mbsinit@plt>
   125c4:	cmp	r0, #0
   125c8:	beq	127a8 <abort@plt+0x1a84>
   125cc:	mov	r2, r6
   125d0:	mov	ip, r5
   125d4:	eor	r5, r2, #1
   125d8:	ldr	r4, [sp, #80]	; 0x50
   125dc:	ldr	r6, [sp, #84]	; 0x54
   125e0:	ldr	r7, [sp, #88]	; 0x58
   125e4:	uxtb	r5, r5
   125e8:	cmp	ip, #1
   125ec:	bls	12aec <abort@plt+0x1dc8>
   125f0:	ldr	r3, [sp, #44]	; 0x2c
   125f4:	and	r8, r3, r5
   125f8:	mov	r5, r2
   125fc:	uxtb	r8, r8
   12600:	add	r2, sl, ip
   12604:	ldr	r0, [sp, #48]	; 0x30
   12608:	mov	r1, #0
   1260c:	str	r5, [sp, #48]	; 0x30
   12610:	ldr	r9, [sp, #28]
   12614:	ldr	ip, [sp, #40]	; 0x28
   12618:	ldr	r3, [sp, #32]
   1261c:	ldr	r5, [sp, #152]	; 0x98
   12620:	b	126dc <abort@plt+0x19b8>
   12624:	cmp	r9, #0
   12628:	bne	12a00 <abort@plt+0x1cdc>
   1262c:	eor	r1, ip, #1
   12630:	cmp	r5, #2
   12634:	movne	r1, #0
   12638:	andeq	r1, r1, #1
   1263c:	cmp	r1, #0
   12640:	beq	12678 <abort@plt+0x1954>
   12644:	cmp	fp, r7
   12648:	movhi	ip, #39	; 0x27
   1264c:	strbhi	ip, [r3, r7]
   12650:	add	ip, r7, #1
   12654:	cmp	fp, ip
   12658:	movhi	lr, #36	; 0x24
   1265c:	strbhi	lr, [r3, ip]
   12660:	add	ip, r7, #2
   12664:	cmp	fp, ip
   12668:	movhi	lr, #39	; 0x27
   1266c:	strbhi	lr, [r3, ip]
   12670:	add	r7, r7, #3
   12674:	mov	ip, r1
   12678:	cmp	fp, r7
   1267c:	movhi	r1, #92	; 0x5c
   12680:	strbhi	r1, [r3, r7]
   12684:	add	r1, r7, #1
   12688:	cmp	fp, r1
   1268c:	lsrhi	lr, r4, #6
   12690:	addhi	lr, lr, #48	; 0x30
   12694:	strbhi	lr, [r3, r1]
   12698:	add	lr, r7, #2
   1269c:	cmp	fp, lr
   126a0:	lsrhi	r1, r4, #3
   126a4:	andhi	r1, r1, #7
   126a8:	addhi	r1, r1, #48	; 0x30
   126ac:	add	sl, sl, #1
   126b0:	strbhi	r1, [r3, lr]
   126b4:	and	r4, r4, #7
   126b8:	cmp	r2, sl
   126bc:	add	r4, r4, #48	; 0x30
   126c0:	add	r7, r7, #3
   126c4:	bls	12a24 <abort@plt+0x1d00>
   126c8:	mov	r1, r8
   126cc:	cmp	fp, r7
   126d0:	strbhi	r4, [r3, r7]
   126d4:	ldrb	r4, [r0, #1]!
   126d8:	add	r7, r7, #1
   126dc:	cmp	r8, #0
   126e0:	bne	12624 <abort@plt+0x1900>
   126e4:	cmp	r6, #0
   126e8:	bne	12738 <abort@plt+0x1a14>
   126ec:	eor	r6, r1, #1
   126f0:	and	r6, r6, ip
   126f4:	add	sl, sl, #1
   126f8:	cmp	r2, sl
   126fc:	uxtb	r6, r6
   12700:	bls	12760 <abort@plt+0x1a3c>
   12704:	cmp	r6, #0
   12708:	beq	126cc <abort@plt+0x19a8>
   1270c:	cmp	fp, r7
   12710:	movhi	ip, #39	; 0x27
   12714:	strbhi	ip, [r3, r7]
   12718:	add	ip, r7, #1
   1271c:	cmp	fp, ip
   12720:	movhi	lr, #39	; 0x27
   12724:	strbhi	lr, [r3, ip]
   12728:	add	r7, r7, #2
   1272c:	mov	r6, r8
   12730:	mov	ip, r8
   12734:	b	126cc <abort@plt+0x19a8>
   12738:	cmp	fp, r7
   1273c:	eor	r6, r1, #1
   12740:	movhi	lr, #92	; 0x5c
   12744:	and	r6, r6, ip
   12748:	add	sl, sl, #1
   1274c:	strbhi	lr, [r3, r7]
   12750:	cmp	r2, sl
   12754:	add	r7, r7, #1
   12758:	uxtb	r6, r6
   1275c:	bhi	12704 <abort@plt+0x19e0>
   12760:	str	ip, [sp, #40]	; 0x28
   12764:	ldr	r5, [sp, #48]	; 0x30
   12768:	b	11e30 <abort@plt+0x110c>
   1276c:	ldr	r3, [sp, #24]
   12770:	cmn	r3, #1
   12774:	mov	r3, #0
   12778:	str	r3, [sp, #104]	; 0x68
   1277c:	str	r3, [sp, #108]	; 0x6c
   12780:	beq	12aa0 <abort@plt+0x1d7c>
   12784:	mov	r2, r5
   12788:	mov	r3, #0
   1278c:	str	r7, [sp, #88]	; 0x58
   12790:	ldr	r7, [sp, #152]	; 0x98
   12794:	str	r5, [sp, #92]	; 0x5c
   12798:	str	r6, [sp, #84]	; 0x54
   1279c:	mov	r5, r3
   127a0:	mov	r6, r2
   127a4:	str	r4, [sp, #80]	; 0x50
   127a8:	ldr	r3, [sp, #56]	; 0x38
   127ac:	add	r9, sl, r5
   127b0:	add	r8, r3, r9
   127b4:	ldr	r3, [sp, #24]
   127b8:	mov	r1, r8
   127bc:	sub	r2, r3, r9
   127c0:	add	r0, sp, #100	; 0x64
   127c4:	add	r3, sp, #104	; 0x68
   127c8:	bl	143bc <abort@plt+0x3698>
   127cc:	subs	r4, r0, #0
   127d0:	beq	12b78 <abort@plt+0x1e54>
   127d4:	cmn	r4, #1
   127d8:	beq	12b58 <abort@plt+0x1e34>
   127dc:	cmn	r4, #2
   127e0:	beq	12af8 <abort@plt+0x1dd4>
   127e4:	ldr	r2, [sp, #28]
   127e8:	cmp	r7, #2
   127ec:	movne	r2, #0
   127f0:	andeq	r2, r2, #1
   127f4:	cmp	r2, #0
   127f8:	beq	125a8 <abort@plt+0x1884>
   127fc:	cmp	r4, #1
   12800:	beq	125a8 <abort@plt+0x1884>
   12804:	sub	r3, r4, #1
   12808:	add	r9, r3, r9
   1280c:	ldr	r3, [sp, #56]	; 0x38
   12810:	add	r9, r3, r9
   12814:	ldrb	r3, [r8, #1]!
   12818:	sub	r3, r3, #91	; 0x5b
   1281c:	cmp	r3, #33	; 0x21
   12820:	ldrls	pc, [pc, r3, lsl #2]
   12824:	b	125a0 <abort@plt+0x187c>
   12828:			; <UNDEFINED> instruction: 0x000128b0
   1282c:			; <UNDEFINED> instruction: 0x000128b0
   12830:	andeq	r2, r1, r0, lsr #11
   12834:			; <UNDEFINED> instruction: 0x000128b0
   12838:	andeq	r2, r1, r0, lsr #11
   1283c:			; <UNDEFINED> instruction: 0x000128b0
   12840:	andeq	r2, r1, r0, lsr #11
   12844:	andeq	r2, r1, r0, lsr #11
   12848:	andeq	r2, r1, r0, lsr #11
   1284c:	andeq	r2, r1, r0, lsr #11
   12850:	andeq	r2, r1, r0, lsr #11
   12854:	andeq	r2, r1, r0, lsr #11
   12858:	andeq	r2, r1, r0, lsr #11
   1285c:	andeq	r2, r1, r0, lsr #11
   12860:	andeq	r2, r1, r0, lsr #11
   12864:	andeq	r2, r1, r0, lsr #11
   12868:	andeq	r2, r1, r0, lsr #11
   1286c:	andeq	r2, r1, r0, lsr #11
   12870:	andeq	r2, r1, r0, lsr #11
   12874:	andeq	r2, r1, r0, lsr #11
   12878:	andeq	r2, r1, r0, lsr #11
   1287c:	andeq	r2, r1, r0, lsr #11
   12880:	andeq	r2, r1, r0, lsr #11
   12884:	andeq	r2, r1, r0, lsr #11
   12888:	andeq	r2, r1, r0, lsr #11
   1288c:	andeq	r2, r1, r0, lsr #11
   12890:	andeq	r2, r1, r0, lsr #11
   12894:	andeq	r2, r1, r0, lsr #11
   12898:	andeq	r2, r1, r0, lsr #11
   1289c:	andeq	r2, r1, r0, lsr #11
   128a0:	andeq	r2, r1, r0, lsr #11
   128a4:	andeq	r2, r1, r0, lsr #11
   128a8:	andeq	r2, r1, r0, lsr #11
   128ac:			; <UNDEFINED> instruction: 0x000128b0
   128b0:	mov	r3, #2
   128b4:	ldr	sl, [sp, #32]
   128b8:	mov	r8, fp
   128bc:	str	r3, [sp, #152]	; 0x98
   128c0:	b	12038 <abort@plt+0x1314>
   128c4:	ldr	r3, [sp, #156]	; 0x9c
   128c8:	tst	r3, #1
   128cc:	bne	129f8 <abort@plt+0x1cd4>
   128d0:	ldr	r3, [sp, #152]	; 0x98
   128d4:	ldr	r4, [sp, #44]	; 0x2c
   128d8:	sub	r2, r3, #2
   128dc:	mov	r5, #0
   128e0:	clz	r2, r2
   128e4:	mov	r8, r4
   128e8:	lsr	r2, r2, #5
   128ec:	b	11df8 <abort@plt+0x10d4>
   128f0:	ldr	r3, [sp, #156]	; 0x9c
   128f4:	ands	r9, r3, #4
   128f8:	beq	12a30 <abort@plt+0x1d0c>
   128fc:	ldr	r2, [sp, #24]
   12900:	add	r3, sl, #2
   12904:	cmp	r3, r2
   12908:	bcs	1291c <abort@plt+0x1bf8>
   1290c:	ldr	r2, [sp, #48]	; 0x30
   12910:	ldrb	r4, [r2, #1]
   12914:	cmp	r4, #63	; 0x3f
   12918:	beq	12bb8 <abort@plt+0x1e94>
   1291c:	mov	r2, #0
   12920:	mov	r8, r2
   12924:	mov	r5, r2
   12928:	mov	r4, #63	; 0x3f
   1292c:	b	11df8 <abort@plt+0x10d4>
   12930:	ldr	r3, [sp, #28]
   12934:	cmp	r3, #0
   12938:	bne	12c5c <abort@plt+0x1f38>
   1293c:	mov	r2, r5
   12940:	mov	r8, r3
   12944:	mov	r5, #0
   12948:	mov	r4, #63	; 0x3f
   1294c:	b	11df8 <abort@plt+0x10d4>
   12950:	ldr	r3, [sp, #28]
   12954:	cmp	r3, #0
   12958:	bne	12c5c <abort@plt+0x1f38>
   1295c:	ldr	r2, [sp, #72]	; 0x48
   12960:	adds	r3, fp, #0
   12964:	movne	r3, #1
   12968:	cmp	r2, #0
   1296c:	movne	r3, #0
   12970:	cmp	r3, #0
   12974:	strne	fp, [sp, #72]	; 0x48
   12978:	movne	fp, #0
   1297c:	bne	129b8 <abort@plt+0x1c94>
   12980:	cmp	fp, r7
   12984:	movhi	r2, #39	; 0x27
   12988:	ldrhi	r3, [sp, #32]
   1298c:	strbhi	r2, [r3, r7]
   12990:	add	r3, r7, #1
   12994:	cmp	fp, r3
   12998:	movhi	r1, #92	; 0x5c
   1299c:	ldrhi	r2, [sp, #32]
   129a0:	strbhi	r1, [r2, r3]
   129a4:	add	r3, r7, #2
   129a8:	cmp	fp, r3
   129ac:	movhi	r1, #39	; 0x27
   129b0:	ldrhi	r2, [sp, #32]
   129b4:	strbhi	r1, [r2, r3]
   129b8:	ldr	r3, [sp, #28]
   129bc:	add	r7, r7, #3
   129c0:	mov	r2, r5
   129c4:	mov	r8, r3
   129c8:	str	r5, [sp, #68]	; 0x44
   129cc:	str	r3, [sp, #40]	; 0x28
   129d0:	mov	r4, #39	; 0x27
   129d4:	b	11df8 <abort@plt+0x10d4>
   129d8:	ldr	r3, [sp, #56]	; 0x38
   129dc:	ldrb	r3, [r3, #1]
   129e0:	adds	r3, r3, #0
   129e4:	movne	r3, #1
   129e8:	b	11dd0 <abort@plt+0x10ac>
   129ec:	ldr	r5, [sp, #28]
   129f0:	mov	r4, #48	; 0x30
   129f4:	b	11df8 <abort@plt+0x10d4>
   129f8:	add	sl, sl, #1
   129fc:	b	11928 <abort@plt+0xc04>
   12a00:	mov	sl, r3
   12a04:	ldr	r3, [sp, #28]
   12a08:	mov	r8, fp
   12a0c:	str	r3, [sp, #44]	; 0x2c
   12a10:	ldr	r3, [sp, #152]	; 0x98
   12a14:	sub	r2, r3, #2
   12a18:	clz	r2, r2
   12a1c:	lsr	r2, r2, #5
   12a20:	b	12038 <abort@plt+0x1314>
   12a24:	str	ip, [sp, #40]	; 0x28
   12a28:	ldr	r5, [sp, #48]	; 0x30
   12a2c:	b	11e68 <abort@plt+0x1144>
   12a30:	mov	r2, r9
   12a34:	mov	r8, r9
   12a38:	mov	r5, #0
   12a3c:	mov	r4, #63	; 0x3f
   12a40:	b	11df8 <abort@plt+0x10d4>
   12a44:	cmp	fp, #0
   12a48:	beq	12ac0 <abort@plt+0x1d9c>
   12a4c:	ldr	r1, [sp, #32]
   12a50:	mov	r3, #34	; 0x22
   12a54:	mov	r2, #1
   12a58:	strb	r3, [r1]
   12a5c:	ldr	r3, [pc, #332]	; 12bb0 <abort@plt+0x1e8c>
   12a60:	str	r2, [sp, #52]	; 0x34
   12a64:	mov	r7, r2
   12a68:	str	r2, [sp, #44]	; 0x2c
   12a6c:	str	r3, [sp, #64]	; 0x40
   12a70:	b	11918 <abort@plt+0xbf4>
   12a74:	ldr	r3, [pc, #300]	; 12ba8 <abort@plt+0x1e84>
   12a78:	str	r3, [sp, #64]	; 0x40
   12a7c:	mov	r3, #0
   12a80:	str	r3, [sp, #28]
   12a84:	mov	r3, #1
   12a88:	str	r3, [sp, #52]	; 0x34
   12a8c:	mov	r7, r3
   12a90:	mov	r3, #2
   12a94:	str	r3, [sp, #152]	; 0x98
   12a98:	b	11918 <abort@plt+0xbf4>
   12a9c:	bl	10d24 <abort@plt>
   12aa0:	ldr	r0, [sp, #56]	; 0x38
   12aa4:	bl	10c70 <strlen@plt>
   12aa8:	str	r0, [sp, #24]
   12aac:	b	12784 <abort@plt+0x1a60>
   12ab0:	mov	r5, r8
   12ab4:	mov	r4, #48	; 0x30
   12ab8:	ldr	r8, [sp, #44]	; 0x2c
   12abc:	b	11df8 <abort@plt+0x10d4>
   12ac0:	mov	r3, #1
   12ac4:	str	r3, [sp, #52]	; 0x34
   12ac8:	mov	r7, r3
   12acc:	str	r3, [sp, #44]	; 0x2c
   12ad0:	ldr	r3, [pc, #216]	; 12bb0 <abort@plt+0x1e8c>
   12ad4:	str	r3, [sp, #64]	; 0x40
   12ad8:	b	11918 <abort@plt+0xbf4>
   12adc:	ldr	sl, [sp, #32]
   12ae0:	mov	r8, fp
   12ae4:	mov	r2, r3
   12ae8:	b	12038 <abort@plt+0x1314>
   12aec:	mov	r3, r5
   12af0:	mov	r5, r2
   12af4:	b	122f0 <abort@plt+0x15cc>
   12af8:	ldr	r1, [sp, #24]
   12afc:	mov	r2, r5
   12b00:	cmp	r1, r9
   12b04:	mov	ip, r5
   12b08:	ldr	r4, [sp, #80]	; 0x50
   12b0c:	ldr	r5, [sp, #92]	; 0x5c
   12b10:	ldr	r6, [sp, #84]	; 0x54
   12b14:	ldr	r7, [sp, #88]	; 0x58
   12b18:	bls	12b4c <abort@plt+0x1e28>
   12b1c:	ldrb	r3, [r8]
   12b20:	cmp	r3, #0
   12b24:	bne	12b38 <abort@plt+0x1e14>
   12b28:	b	12b50 <abort@plt+0x1e2c>
   12b2c:	ldrb	r3, [r8, #1]!
   12b30:	cmp	r3, #0
   12b34:	beq	12c50 <abort@plt+0x1f2c>
   12b38:	add	r2, r2, #1
   12b3c:	add	r3, sl, r2
   12b40:	cmp	r1, r3
   12b44:	bhi	12b2c <abort@plt+0x1e08>
   12b48:	mov	ip, r2
   12b4c:	mov	r3, #0
   12b50:	mov	r2, r3
   12b54:	b	125e8 <abort@plt+0x18c4>
   12b58:	mov	r3, #0
   12b5c:	mov	ip, r5
   12b60:	ldr	r4, [sp, #80]	; 0x50
   12b64:	ldr	r5, [sp, #92]	; 0x5c
   12b68:	ldr	r6, [sp, #84]	; 0x54
   12b6c:	ldr	r7, [sp, #88]	; 0x58
   12b70:	mov	r2, r3
   12b74:	b	125e8 <abort@plt+0x18c4>
   12b78:	mov	r3, r6
   12b7c:	mov	ip, r5
   12b80:	eor	r5, r3, #1
   12b84:	mov	r2, r6
   12b88:	ldr	r4, [sp, #80]	; 0x50
   12b8c:	ldr	r6, [sp, #84]	; 0x54
   12b90:	ldr	r7, [sp, #88]	; 0x58
   12b94:	uxtb	r5, r5
   12b98:	b	125e8 <abort@plt+0x18c4>
   12b9c:	ldr	sl, [sp, #32]
   12ba0:	mov	r8, fp
   12ba4:	b	12a0c <abort@plt+0x1ce8>
   12ba8:	andeq	r5, r1, r4, lsl #1
   12bac:	andeq	r5, r1, r8, lsl #1
   12bb0:	andeq	r5, r1, r0, lsl #1
   12bb4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12bb8:	ldr	r2, [sp, #56]	; 0x38
   12bbc:	ldrb	r1, [r2, r3]
   12bc0:	sub	r2, r1, #33	; 0x21
   12bc4:	uxtb	r2, r2
   12bc8:	cmp	r2, #29
   12bcc:	bhi	12c6c <abort@plt+0x1f48>
   12bd0:	ldr	r0, [pc, #-36]	; 12bb4 <abort@plt+0x1e90>
   12bd4:	mov	ip, #1
   12bd8:	ands	r2, r0, ip, lsl r2
   12bdc:	beq	12c7c <abort@plt+0x1f58>
   12be0:	ldr	r2, [sp, #28]
   12be4:	cmp	r2, #0
   12be8:	bne	12d7c <abort@plt+0x2058>
   12bec:	cmp	fp, r7
   12bf0:	ldr	r8, [sp, #28]
   12bf4:	ldrhi	r2, [sp, #32]
   12bf8:	mov	sl, r3
   12bfc:	mov	r5, r8
   12c00:	strbhi	r4, [r2, r7]
   12c04:	add	r2, r7, #1
   12c08:	cmp	fp, r2
   12c0c:	movhi	r0, #34	; 0x22
   12c10:	ldrhi	ip, [sp, #32]
   12c14:	mov	r4, r1
   12c18:	strbhi	r0, [ip, r2]
   12c1c:	add	r2, r7, #2
   12c20:	cmp	fp, r2
   12c24:	movhi	r0, #34	; 0x22
   12c28:	ldrhi	ip, [sp, #32]
   12c2c:	strbhi	r0, [ip, r2]
   12c30:	add	r2, r7, #3
   12c34:	cmp	fp, r2
   12c38:	movhi	r0, #63	; 0x3f
   12c3c:	ldrhi	ip, [sp, #32]
   12c40:	add	r7, r7, #4
   12c44:	strbhi	r0, [ip, r2]
   12c48:	mov	r2, r8
   12c4c:	b	11df8 <abort@plt+0x10d4>
   12c50:	mov	ip, r2
   12c54:	mov	r2, r3
   12c58:	b	125e8 <abort@plt+0x18c4>
   12c5c:	ldr	sl, [sp, #32]
   12c60:	mov	r8, fp
   12c64:	ldr	r2, [sp, #28]
   12c68:	b	12038 <abort@plt+0x1314>
   12c6c:	mov	r2, #0
   12c70:	mov	r8, r2
   12c74:	mov	r5, r2
   12c78:	b	11df8 <abort@plt+0x10d4>
   12c7c:	mov	r8, r2
   12c80:	mov	r5, #0
   12c84:	b	11df8 <abort@plt+0x10d4>
   12c88:	ldr	r1, [sp, #152]	; 0x98
   12c8c:	bl	11754 <abort@plt+0xa30>
   12c90:	str	r0, [sp, #168]	; 0xa8
   12c94:	b	11cb4 <abort@plt+0xf90>
   12c98:	ldr	r1, [sp, #152]	; 0x98
   12c9c:	bl	11754 <abort@plt+0xa30>
   12ca0:	str	r0, [sp, #164]	; 0xa4
   12ca4:	b	11c94 <abort@plt+0xf70>
   12ca8:	ldr	r7, [sp, #28]
   12cac:	b	11cf4 <abort@plt+0xfd0>
   12cb0:	ldr	sl, [sp, #32]
   12cb4:	ldr	r2, [sp, #68]	; 0x44
   12cb8:	mov	r8, fp
   12cbc:	mov	fp, r7
   12cc0:	ldr	r3, [sp, #64]	; 0x40
   12cc4:	cmp	r3, #0
   12cc8:	moveq	r2, #0
   12ccc:	andne	r2, r2, #1
   12cd0:	cmp	r2, #0
   12cd4:	beq	12d00 <abort@plt+0x1fdc>
   12cd8:	mov	r2, r3
   12cdc:	ldrb	r3, [r3]
   12ce0:	cmp	r3, #0
   12ce4:	beq	12d00 <abort@plt+0x1fdc>
   12ce8:	cmp	r8, fp
   12cec:	strbhi	r3, [sl, fp]
   12cf0:	ldrb	r3, [r2, #1]!
   12cf4:	add	fp, fp, #1
   12cf8:	cmp	r3, #0
   12cfc:	bne	12ce8 <abort@plt+0x1fc4>
   12d00:	cmp	r8, fp
   12d04:	movhi	r3, #0
   12d08:	strbhi	r3, [sl, fp]
   12d0c:	b	12094 <abort@plt+0x1370>
   12d10:	ldr	r3, [sp, #168]	; 0xa8
   12d14:	ldr	sl, [sp, #32]
   12d18:	str	r3, [sp, #16]
   12d1c:	ldr	r3, [sp, #164]	; 0xa4
   12d20:	mov	ip, #5
   12d24:	str	r3, [sp, #12]
   12d28:	ldr	r3, [sp, #160]	; 0xa0
   12d2c:	ldr	r2, [sp, #56]	; 0x38
   12d30:	str	r3, [sp, #8]
   12d34:	ldr	r3, [sp, #156]	; 0x9c
   12d38:	ldr	r1, [sp, #72]	; 0x48
   12d3c:	str	r3, [sp, #4]
   12d40:	mov	r0, sl
   12d44:	ldr	r3, [sp, #24]
   12d48:	str	ip, [sp]
   12d4c:	bl	11874 <abort@plt+0xb50>
   12d50:	mov	fp, r0
   12d54:	b	12094 <abort@plt+0x1370>
   12d58:	mov	r8, fp
   12d5c:	ldr	sl, [sp, #32]
   12d60:	mov	fp, r7
   12d64:	mov	r2, r3
   12d68:	b	12cc0 <abort@plt+0x1f9c>
   12d6c:	mov	r8, fp
   12d70:	ldr	sl, [sp, #32]
   12d74:	mov	fp, r7
   12d78:	b	12cc0 <abort@plt+0x1f9c>
   12d7c:	ldr	sl, [sp, #32]
   12d80:	mov	r8, fp
   12d84:	b	12050 <abort@plt+0x132c>
   12d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d8c:	sub	sp, sp, #52	; 0x34
   12d90:	mov	r4, r0
   12d94:	mov	r5, r3
   12d98:	mov	sl, r1
   12d9c:	mov	fp, r2
   12da0:	bl	10c7c <__errno_location@plt>
   12da4:	ldr	r7, [pc, #412]	; 12f48 <abort@plt+0x2224>
   12da8:	cmn	r4, #-2147483647	; 0x80000001
   12dac:	ldr	r6, [r7]
   12db0:	mov	r8, r0
   12db4:	movne	r0, #0
   12db8:	moveq	r0, #1
   12dbc:	ldr	r3, [r8]
   12dc0:	orrs	r0, r0, r4, lsr #31
   12dc4:	str	r3, [sp, #24]
   12dc8:	bne	12f44 <abort@plt+0x2220>
   12dcc:	ldr	r2, [r7, #4]
   12dd0:	cmp	r4, r2
   12dd4:	blt	12e34 <abort@plt+0x2110>
   12dd8:	add	r9, r7, #8
   12ddc:	cmp	r6, r9
   12de0:	str	r2, [sp, #44]	; 0x2c
   12de4:	beq	12f14 <abort@plt+0x21f0>
   12de8:	mov	r3, #8
   12dec:	sub	r2, r4, r2
   12df0:	mov	r0, r6
   12df4:	str	r3, [sp]
   12df8:	add	r2, r2, #1
   12dfc:	mvn	r3, #-2147483648	; 0x80000000
   12e00:	add	r1, sp, #44	; 0x2c
   12e04:	bl	13bf4 <abort@plt+0x2ed0>
   12e08:	mov	r6, r0
   12e0c:	str	r0, [r7]
   12e10:	ldr	r0, [r7, #4]
   12e14:	ldr	r2, [sp, #44]	; 0x2c
   12e18:	mov	r1, #0
   12e1c:	sub	r2, r2, r0
   12e20:	add	r0, r6, r0, lsl #3
   12e24:	lsl	r2, r2, #3
   12e28:	bl	10c94 <memset@plt>
   12e2c:	ldr	r3, [sp, #44]	; 0x2c
   12e30:	str	r3, [r7, #4]
   12e34:	add	r3, r6, r4, lsl #3
   12e38:	ldr	r1, [r5, #4]
   12e3c:	ldr	r7, [r3, #4]
   12e40:	ldr	r9, [r6, r4, lsl #3]
   12e44:	ldr	r2, [r5, #40]	; 0x28
   12e48:	ldr	ip, [r5, #44]	; 0x2c
   12e4c:	add	r0, r5, #8
   12e50:	str	r3, [sp, #28]
   12e54:	ldr	r3, [r5]
   12e58:	orr	r1, r1, #1
   12e5c:	mov	lr, r0
   12e60:	str	r1, [sp, #32]
   12e64:	str	r0, [sp, #36]	; 0x24
   12e68:	str	r1, [sp, #4]
   12e6c:	str	r2, [sp, #12]
   12e70:	str	r3, [sp]
   12e74:	mov	r0, r7
   12e78:	mov	r1, r9
   12e7c:	str	ip, [sp, #16]
   12e80:	str	lr, [sp, #8]
   12e84:	mov	r3, fp
   12e88:	mov	r2, sl
   12e8c:	bl	11874 <abort@plt+0xb50>
   12e90:	cmp	r9, r0
   12e94:	bhi	12f00 <abort@plt+0x21dc>
   12e98:	ldr	r3, [pc, #172]	; 12f4c <abort@plt+0x2228>
   12e9c:	add	r9, r0, #1
   12ea0:	cmp	r7, r3
   12ea4:	str	r9, [r6, r4, lsl #3]
   12ea8:	beq	12eb4 <abort@plt+0x2190>
   12eac:	mov	r0, r7
   12eb0:	bl	11618 <abort@plt+0x8f4>
   12eb4:	mov	r0, r9
   12eb8:	bl	13a90 <abort@plt+0x2d6c>
   12ebc:	ldr	lr, [sp, #28]
   12ec0:	ldr	ip, [r5, #44]	; 0x2c
   12ec4:	ldr	r4, [r5, #40]	; 0x28
   12ec8:	mov	r3, fp
   12ecc:	mov	r2, sl
   12ed0:	mov	r1, r9
   12ed4:	str	r0, [lr, #4]
   12ed8:	ldr	lr, [r5]
   12edc:	ldr	r5, [sp, #36]	; 0x24
   12ee0:	str	ip, [sp, #16]
   12ee4:	str	r5, [sp, #8]
   12ee8:	ldr	r5, [sp, #32]
   12eec:	str	r4, [sp, #12]
   12ef0:	str	r5, [sp, #4]
   12ef4:	str	lr, [sp]
   12ef8:	mov	r7, r0
   12efc:	bl	11874 <abort@plt+0xb50>
   12f00:	ldr	r3, [sp, #24]
   12f04:	mov	r0, r7
   12f08:	str	r3, [r8]
   12f0c:	add	sp, sp, #52	; 0x34
   12f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f14:	mov	r3, #8
   12f18:	sub	r2, r4, r2
   12f1c:	str	r3, [sp]
   12f20:	add	r1, sp, #44	; 0x2c
   12f24:	add	r2, r2, #1
   12f28:	mvn	r3, #-2147483648	; 0x80000000
   12f2c:	bl	13bf4 <abort@plt+0x2ed0>
   12f30:	mov	r6, r0
   12f34:	ldm	r9, {r0, r1}
   12f38:	str	r6, [r7]
   12f3c:	stm	r6, {r0, r1}
   12f40:	b	12e10 <abort@plt+0x20ec>
   12f44:	bl	10d24 <abort@plt>
   12f48:	ldrdeq	r6, [r2], -r0
   12f4c:	andeq	r6, r2, ip, lsr r1
   12f50:	push	{r4, r5, r6, lr}
   12f54:	mov	r5, r0
   12f58:	bl	10c7c <__errno_location@plt>
   12f5c:	cmp	r5, #0
   12f60:	mov	r1, #48	; 0x30
   12f64:	mov	r4, r0
   12f68:	ldr	r0, [pc, #16]	; 12f80 <abort@plt+0x225c>
   12f6c:	ldr	r6, [r4]
   12f70:	movne	r0, r5
   12f74:	bl	13ef0 <abort@plt+0x31cc>
   12f78:	str	r6, [r4]
   12f7c:	pop	{r4, r5, r6, pc}
   12f80:	andeq	r6, r2, ip, lsr r2
   12f84:	ldr	r3, [pc, #12]	; 12f98 <abort@plt+0x2274>
   12f88:	cmp	r0, #0
   12f8c:	moveq	r0, r3
   12f90:	ldr	r0, [r0]
   12f94:	bx	lr
   12f98:	andeq	r6, r2, ip, lsr r2
   12f9c:	ldr	r3, [pc, #12]	; 12fb0 <abort@plt+0x228c>
   12fa0:	cmp	r0, #0
   12fa4:	moveq	r0, r3
   12fa8:	str	r1, [r0]
   12fac:	bx	lr
   12fb0:	andeq	r6, r2, ip, lsr r2
   12fb4:	ldr	r3, [pc, #52]	; 12ff0 <abort@plt+0x22cc>
   12fb8:	cmp	r0, #0
   12fbc:	moveq	r0, r3
   12fc0:	add	r3, r0, #8
   12fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   12fc8:	lsr	lr, r1, #5
   12fcc:	and	r1, r1, #31
   12fd0:	ldr	ip, [r3, lr, lsl #2]
   12fd4:	lsr	r0, ip, r1
   12fd8:	eor	r2, r2, r0
   12fdc:	and	r2, r2, #1
   12fe0:	and	r0, r0, #1
   12fe4:	eor	r1, ip, r2, lsl r1
   12fe8:	str	r1, [r3, lr, lsl #2]
   12fec:	pop	{pc}		; (ldr pc, [sp], #4)
   12ff0:	andeq	r6, r2, ip, lsr r2
   12ff4:	ldr	r3, [pc, #16]	; 1300c <abort@plt+0x22e8>
   12ff8:	cmp	r0, #0
   12ffc:	movne	r3, r0
   13000:	ldr	r0, [r3, #4]
   13004:	str	r1, [r3, #4]
   13008:	bx	lr
   1300c:	andeq	r6, r2, ip, lsr r2
   13010:	ldr	r3, [pc, #44]	; 13044 <abort@plt+0x2320>
   13014:	cmp	r0, #0
   13018:	moveq	r0, r3
   1301c:	mov	ip, #10
   13020:	cmp	r2, #0
   13024:	cmpne	r1, #0
   13028:	str	ip, [r0]
   1302c:	beq	1303c <abort@plt+0x2318>
   13030:	str	r1, [r0, #40]	; 0x28
   13034:	str	r2, [r0, #44]	; 0x2c
   13038:	bx	lr
   1303c:	push	{r4, lr}
   13040:	bl	10d24 <abort@plt>
   13044:	andeq	r6, r2, ip, lsr r2
   13048:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1304c:	sub	sp, sp, #24
   13050:	ldr	ip, [pc, #108]	; 130c4 <abort@plt+0x23a0>
   13054:	ldr	r4, [sp, #56]	; 0x38
   13058:	mov	r9, r2
   1305c:	cmp	r4, #0
   13060:	moveq	r4, ip
   13064:	mov	sl, r3
   13068:	mov	r7, r0
   1306c:	mov	r8, r1
   13070:	bl	10c7c <__errno_location@plt>
   13074:	ldr	r3, [r4, #44]	; 0x2c
   13078:	mov	r1, r8
   1307c:	ldr	r6, [r0]
   13080:	str	r3, [sp, #16]
   13084:	ldr	r2, [r4, #40]	; 0x28
   13088:	add	r3, r4, #8
   1308c:	str	r3, [sp, #8]
   13090:	str	r2, [sp, #12]
   13094:	ldr	r2, [r4, #4]
   13098:	mov	r5, r0
   1309c:	str	r2, [sp, #4]
   130a0:	ldr	ip, [r4]
   130a4:	mov	r3, sl
   130a8:	mov	r2, r9
   130ac:	mov	r0, r7
   130b0:	str	ip, [sp]
   130b4:	bl	11874 <abort@plt+0xb50>
   130b8:	str	r6, [r5]
   130bc:	add	sp, sp, #24
   130c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130c4:	andeq	r6, r2, ip, lsr r2
   130c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130cc:	cmp	r3, #0
   130d0:	sub	sp, sp, #44	; 0x2c
   130d4:	ldr	r4, [pc, #192]	; 1319c <abort@plt+0x2478>
   130d8:	mov	r6, r2
   130dc:	movne	r4, r3
   130e0:	mov	r9, r1
   130e4:	mov	r8, r0
   130e8:	bl	10c7c <__errno_location@plt>
   130ec:	ldr	r3, [r4, #44]	; 0x2c
   130f0:	ldr	r5, [r4, #4]
   130f4:	add	sl, r4, #8
   130f8:	cmp	r6, #0
   130fc:	orreq	r5, r5, #1
   13100:	mov	r1, #0
   13104:	ldr	r2, [r0]
   13108:	str	r3, [sp, #16]
   1310c:	ldr	r3, [r4, #40]	; 0x28
   13110:	stmib	sp, {r5, sl}
   13114:	str	r3, [sp, #12]
   13118:	ldr	r3, [r4]
   1311c:	mov	r7, r0
   13120:	str	r2, [sp, #28]
   13124:	str	r3, [sp]
   13128:	mov	r2, r8
   1312c:	mov	r3, r9
   13130:	mov	r0, r1
   13134:	bl	11874 <abort@plt+0xb50>
   13138:	add	r1, r0, #1
   1313c:	mov	fp, r0
   13140:	mov	r0, r1
   13144:	str	r1, [sp, #36]	; 0x24
   13148:	bl	13a90 <abort@plt+0x2d6c>
   1314c:	ldr	r3, [r4, #44]	; 0x2c
   13150:	mov	r2, r8
   13154:	str	r3, [sp, #16]
   13158:	ldr	r3, [r4, #40]	; 0x28
   1315c:	str	r5, [sp, #4]
   13160:	str	r3, [sp, #12]
   13164:	str	sl, [sp, #8]
   13168:	ldr	ip, [r4]
   1316c:	ldr	r1, [sp, #36]	; 0x24
   13170:	mov	r3, r9
   13174:	str	ip, [sp]
   13178:	str	r0, [sp, #32]
   1317c:	bl	11874 <abort@plt+0xb50>
   13180:	ldr	r2, [sp, #28]
   13184:	cmp	r6, #0
   13188:	str	r2, [r7]
   1318c:	ldr	r0, [sp, #32]
   13190:	strne	fp, [r6]
   13194:	add	sp, sp, #44	; 0x2c
   13198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1319c:	andeq	r6, r2, ip, lsr r2
   131a0:	mov	r3, r2
   131a4:	mov	r2, #0
   131a8:	b	130c8 <abort@plt+0x23a4>
   131ac:	push	{r4, r5, r6, r7, r8, lr}
   131b0:	ldr	r6, [pc, #116]	; 1322c <abort@plt+0x2508>
   131b4:	ldr	r3, [r6, #4]
   131b8:	ldr	r7, [r6]
   131bc:	cmp	r3, #1
   131c0:	movgt	r5, r7
   131c4:	movgt	r4, #1
   131c8:	ble	131e8 <abort@plt+0x24c4>
   131cc:	ldr	r0, [r5, #12]
   131d0:	bl	11618 <abort@plt+0x8f4>
   131d4:	ldr	r3, [r6, #4]
   131d8:	add	r4, r4, #1
   131dc:	cmp	r3, r4
   131e0:	add	r5, r5, #8
   131e4:	bgt	131cc <abort@plt+0x24a8>
   131e8:	ldr	r0, [r7, #4]
   131ec:	ldr	r4, [pc, #60]	; 13230 <abort@plt+0x250c>
   131f0:	cmp	r0, r4
   131f4:	beq	13208 <abort@plt+0x24e4>
   131f8:	bl	11618 <abort@plt+0x8f4>
   131fc:	mov	r3, #256	; 0x100
   13200:	str	r4, [r6, #12]
   13204:	str	r3, [r6, #8]
   13208:	ldr	r4, [pc, #36]	; 13234 <abort@plt+0x2510>
   1320c:	cmp	r7, r4
   13210:	beq	13220 <abort@plt+0x24fc>
   13214:	mov	r0, r7
   13218:	bl	11618 <abort@plt+0x8f4>
   1321c:	str	r4, [r6]
   13220:	mov	r3, #1
   13224:	str	r3, [r6, #4]
   13228:	pop	{r4, r5, r6, r7, r8, pc}
   1322c:	ldrdeq	r6, [r2], -r0
   13230:	andeq	r6, r2, ip, lsr r1
   13234:	ldrdeq	r6, [r2], -r8
   13238:	ldr	r3, [pc, #4]	; 13244 <abort@plt+0x2520>
   1323c:	mvn	r2, #0
   13240:	b	12d88 <abort@plt+0x2064>
   13244:	andeq	r6, r2, ip, lsr r2
   13248:	ldr	r3, [pc]	; 13250 <abort@plt+0x252c>
   1324c:	b	12d88 <abort@plt+0x2064>
   13250:	andeq	r6, r2, ip, lsr r2
   13254:	mov	r1, r0
   13258:	ldr	r3, [pc, #8]	; 13268 <abort@plt+0x2544>
   1325c:	mvn	r2, #0
   13260:	mov	r0, #0
   13264:	b	12d88 <abort@plt+0x2064>
   13268:	andeq	r6, r2, ip, lsr r2
   1326c:	mov	r2, r1
   13270:	ldr	r3, [pc, #8]	; 13280 <abort@plt+0x255c>
   13274:	mov	r1, r0
   13278:	mov	r0, #0
   1327c:	b	12d88 <abort@plt+0x2064>
   13280:	andeq	r6, r2, ip, lsr r2
   13284:	push	{r4, r5, lr}
   13288:	sub	sp, sp, #52	; 0x34
   1328c:	mov	r5, r2
   13290:	mov	r4, r0
   13294:	mov	r0, sp
   13298:	bl	11724 <abort@plt+0xa00>
   1329c:	mov	r3, sp
   132a0:	mov	r1, r5
   132a4:	mov	r0, r4
   132a8:	mvn	r2, #0
   132ac:	bl	12d88 <abort@plt+0x2064>
   132b0:	add	sp, sp, #52	; 0x34
   132b4:	pop	{r4, r5, pc}
   132b8:	push	{r4, r5, r6, lr}
   132bc:	sub	sp, sp, #48	; 0x30
   132c0:	mov	r5, r2
   132c4:	mov	r6, r3
   132c8:	mov	r4, r0
   132cc:	mov	r0, sp
   132d0:	bl	11724 <abort@plt+0xa00>
   132d4:	mov	r3, sp
   132d8:	mov	r2, r6
   132dc:	mov	r1, r5
   132e0:	mov	r0, r4
   132e4:	bl	12d88 <abort@plt+0x2064>
   132e8:	add	sp, sp, #48	; 0x30
   132ec:	pop	{r4, r5, r6, pc}
   132f0:	mov	r2, r1
   132f4:	mov	r1, r0
   132f8:	mov	r0, #0
   132fc:	b	13284 <abort@plt+0x2560>
   13300:	mov	r3, r2
   13304:	mov	r2, r1
   13308:	mov	r1, r0
   1330c:	mov	r0, #0
   13310:	b	132b8 <abort@plt+0x2594>
   13314:	push	{r4, r5, r6, r7, r8, lr}
   13318:	mov	r7, r0
   1331c:	ldr	lr, [pc, #100]	; 13388 <abort@plt+0x2664>
   13320:	mov	r8, r1
   13324:	mov	r4, r2
   13328:	ldm	lr!, {r0, r1, r2, r3}
   1332c:	sub	sp, sp, #48	; 0x30
   13330:	mov	ip, sp
   13334:	lsr	r5, r4, #5
   13338:	stmia	ip!, {r0, r1, r2, r3}
   1333c:	add	r6, sp, #8
   13340:	ldm	lr!, {r0, r1, r2, r3}
   13344:	and	r4, r4, #31
   13348:	stmia	ip!, {r0, r1, r2, r3}
   1334c:	ldm	lr, {r0, r1, r2, r3}
   13350:	stm	ip, {r0, r1, r2, r3}
   13354:	mov	r2, r8
   13358:	ldr	lr, [r6, r5, lsl #2]
   1335c:	mov	r1, r7
   13360:	mov	r3, sp
   13364:	lsr	ip, lr, r4
   13368:	eor	ip, ip, #1
   1336c:	and	ip, ip, #1
   13370:	mov	r0, #0
   13374:	eor	r4, lr, ip, lsl r4
   13378:	str	r4, [r6, r5, lsl #2]
   1337c:	bl	12d88 <abort@plt+0x2064>
   13380:	add	sp, sp, #48	; 0x30
   13384:	pop	{r4, r5, r6, r7, r8, pc}
   13388:	andeq	r6, r2, ip, lsr r2
   1338c:	mov	r2, r1
   13390:	mvn	r1, #0
   13394:	b	13314 <abort@plt+0x25f0>
   13398:	mov	r2, #58	; 0x3a
   1339c:	mvn	r1, #0
   133a0:	b	13314 <abort@plt+0x25f0>
   133a4:	mov	r2, #58	; 0x3a
   133a8:	b	13314 <abort@plt+0x25f0>
   133ac:	push	{r4, r5, r6, r7, lr}
   133b0:	sub	sp, sp, #100	; 0x64
   133b4:	mov	r6, r0
   133b8:	mov	r0, sp
   133bc:	mov	r7, r2
   133c0:	bl	11724 <abort@plt+0xa00>
   133c4:	mov	ip, sp
   133c8:	add	lr, sp, #48	; 0x30
   133cc:	ldm	ip!, {r0, r1, r2, r3}
   133d0:	stmia	lr!, {r0, r1, r2, r3}
   133d4:	ldm	ip!, {r0, r1, r2, r3}
   133d8:	ldr	r5, [sp, #60]	; 0x3c
   133dc:	stmia	lr!, {r0, r1, r2, r3}
   133e0:	mvn	r4, r5
   133e4:	ldm	ip, {r0, r1, r2, r3}
   133e8:	and	ip, r4, #67108864	; 0x4000000
   133ec:	eor	ip, ip, r5
   133f0:	str	ip, [sp, #60]	; 0x3c
   133f4:	stm	lr, {r0, r1, r2, r3}
   133f8:	mov	r1, r7
   133fc:	mov	r0, r6
   13400:	add	r3, sp, #48	; 0x30
   13404:	mvn	r2, #0
   13408:	bl	12d88 <abort@plt+0x2064>
   1340c:	add	sp, sp, #100	; 0x64
   13410:	pop	{r4, r5, r6, r7, pc}
   13414:	push	{r4, r5, r6, r7, r8, lr}
   13418:	mov	r5, r1
   1341c:	ldr	lr, [pc, #100]	; 13488 <abort@plt+0x2764>
   13420:	mov	r4, r2
   13424:	mov	r7, r0
   13428:	mov	r8, r3
   1342c:	ldm	lr!, {r0, r1, r2, r3}
   13430:	sub	sp, sp, #48	; 0x30
   13434:	mov	ip, sp
   13438:	mov	r6, #10
   1343c:	stmia	ip!, {r0, r1, r2, r3}
   13440:	cmp	r4, #0
   13444:	cmpne	r5, #0
   13448:	ldm	lr!, {r0, r1, r2, r3}
   1344c:	str	r6, [sp]
   13450:	stmia	ip!, {r0, r1, r2, r3}
   13454:	ldm	lr, {r0, r1, r2, r3}
   13458:	stm	ip, {r0, r1, r2, r3}
   1345c:	beq	13484 <abort@plt+0x2760>
   13460:	mov	r3, sp
   13464:	mov	r1, r8
   13468:	mov	r0, r7
   1346c:	ldr	r2, [sp, #72]	; 0x48
   13470:	str	r5, [sp, #40]	; 0x28
   13474:	str	r4, [sp, #44]	; 0x2c
   13478:	bl	12d88 <abort@plt+0x2064>
   1347c:	add	sp, sp, #48	; 0x30
   13480:	pop	{r4, r5, r6, r7, r8, pc}
   13484:	bl	10d24 <abort@plt>
   13488:	andeq	r6, r2, ip, lsr r2
   1348c:	push	{lr}		; (str lr, [sp, #-4]!)
   13490:	sub	sp, sp, #12
   13494:	mvn	ip, #0
   13498:	str	ip, [sp]
   1349c:	bl	13414 <abort@plt+0x26f0>
   134a0:	add	sp, sp, #12
   134a4:	pop	{pc}		; (ldr pc, [sp], #4)
   134a8:	push	{lr}		; (str lr, [sp, #-4]!)
   134ac:	sub	sp, sp, #12
   134b0:	mvn	ip, #0
   134b4:	mov	r3, r2
   134b8:	str	ip, [sp]
   134bc:	mov	r2, r1
   134c0:	mov	r1, r0
   134c4:	mov	r0, #0
   134c8:	bl	13414 <abort@plt+0x26f0>
   134cc:	add	sp, sp, #12
   134d0:	pop	{pc}		; (ldr pc, [sp], #4)
   134d4:	push	{lr}		; (str lr, [sp, #-4]!)
   134d8:	sub	sp, sp, #12
   134dc:	str	r3, [sp]
   134e0:	mov	r3, r2
   134e4:	mov	r2, r1
   134e8:	mov	r1, r0
   134ec:	mov	r0, #0
   134f0:	bl	13414 <abort@plt+0x26f0>
   134f4:	add	sp, sp, #12
   134f8:	pop	{pc}		; (ldr pc, [sp], #4)
   134fc:	ldr	r3, [pc]	; 13504 <abort@plt+0x27e0>
   13500:	b	12d88 <abort@plt+0x2064>
   13504:	andeq	r6, r2, r0, ror #1
   13508:	mov	r2, r1
   1350c:	ldr	r3, [pc, #8]	; 1351c <abort@plt+0x27f8>
   13510:	mov	r1, r0
   13514:	mov	r0, #0
   13518:	b	12d88 <abort@plt+0x2064>
   1351c:	andeq	r6, r2, r0, ror #1
   13520:	ldr	r3, [pc, #4]	; 1352c <abort@plt+0x2808>
   13524:	mvn	r2, #0
   13528:	b	12d88 <abort@plt+0x2064>
   1352c:	andeq	r6, r2, r0, ror #1
   13530:	mov	r1, r0
   13534:	ldr	r3, [pc, #8]	; 13544 <abort@plt+0x2820>
   13538:	mvn	r2, #0
   1353c:	mov	r0, #0
   13540:	b	12d88 <abort@plt+0x2064>
   13544:	andeq	r6, r2, r0, ror #1
   13548:	push	{r4, r5, r6, lr}
   1354c:	sub	sp, sp, #32
   13550:	cmp	r1, #0
   13554:	mov	r4, r0
   13558:	ldr	r5, [sp, #48]	; 0x30
   1355c:	ldr	r6, [sp, #52]	; 0x34
   13560:	beq	13878 <abort@plt+0x2b54>
   13564:	stm	sp, {r2, r3}
   13568:	mov	r3, r1
   1356c:	ldr	r2, [pc, #808]	; 1389c <abort@plt+0x2b78>
   13570:	mov	r1, #1
   13574:	bl	10cb8 <__fprintf_chk@plt>
   13578:	mov	r2, #5
   1357c:	ldr	r1, [pc, #796]	; 138a0 <abort@plt+0x2b7c>
   13580:	mov	r0, #0
   13584:	bl	10ba4 <dcgettext@plt>
   13588:	ldr	r3, [pc, #788]	; 138a4 <abort@plt+0x2b80>
   1358c:	ldr	r2, [pc, #788]	; 138a8 <abort@plt+0x2b84>
   13590:	str	r3, [sp]
   13594:	mov	r1, #1
   13598:	mov	r3, r0
   1359c:	mov	r0, r4
   135a0:	bl	10cb8 <__fprintf_chk@plt>
   135a4:	mov	r1, r4
   135a8:	mov	r0, #10
   135ac:	bl	10b98 <fputc_unlocked@plt>
   135b0:	mov	r2, #5
   135b4:	ldr	r1, [pc, #752]	; 138ac <abort@plt+0x2b88>
   135b8:	mov	r0, #0
   135bc:	bl	10ba4 <dcgettext@plt>
   135c0:	mov	r1, #1
   135c4:	ldr	r3, [pc, #740]	; 138b0 <abort@plt+0x2b8c>
   135c8:	mov	r2, r0
   135cc:	mov	r0, r4
   135d0:	bl	10cb8 <__fprintf_chk@plt>
   135d4:	mov	r1, r4
   135d8:	mov	r0, #10
   135dc:	bl	10b98 <fputc_unlocked@plt>
   135e0:	cmp	r6, #9
   135e4:	ldrls	pc, [pc, r6, lsl #2]
   135e8:	b	13890 <abort@plt+0x2b6c>
   135ec:	andeq	r3, r1, r0, ror r6
   135f0:	andeq	r3, r1, r8, ror r6
   135f4:	andeq	r3, r1, r4, lsr #13
   135f8:	ldrdeq	r3, [r1], -r8
   135fc:	andeq	r3, r1, r4, lsl r7
   13600:	andeq	r3, r1, r0, asr r7
   13604:	andeq	r3, r1, ip, lsl #15
   13608:	ldrdeq	r3, [r1], -r0
   1360c:	andeq	r3, r1, r0, lsr #16
   13610:	andeq	r3, r1, r4, lsl r6
   13614:	ldr	r1, [pc, #664]	; 138b4 <abort@plt+0x2b90>
   13618:	mov	r2, #5
   1361c:	mov	r0, #0
   13620:	bl	10ba4 <dcgettext@plt>
   13624:	ldr	ip, [r5, #32]
   13628:	ldr	r1, [r5, #28]
   1362c:	ldr	r2, [r5, #24]
   13630:	ldr	r3, [r5]
   13634:	ldr	r6, [r5, #20]
   13638:	str	ip, [sp, #28]
   1363c:	ldr	lr, [r5, #16]
   13640:	str	r1, [sp, #24]
   13644:	ldr	ip, [r5, #12]
   13648:	str	r2, [sp, #20]
   1364c:	ldr	r1, [r5, #8]
   13650:	ldr	r2, [r5, #4]
   13654:	str	r6, [sp, #16]
   13658:	stmib	sp, {r1, ip, lr}
   1365c:	mov	r1, #1
   13660:	str	r2, [sp]
   13664:	mov	r2, r0
   13668:	mov	r0, r4
   1366c:	bl	10cb8 <__fprintf_chk@plt>
   13670:	add	sp, sp, #32
   13674:	pop	{r4, r5, r6, pc}
   13678:	mov	r2, #5
   1367c:	ldr	r1, [pc, #564]	; 138b8 <abort@plt+0x2b94>
   13680:	mov	r0, #0
   13684:	bl	10ba4 <dcgettext@plt>
   13688:	ldr	r3, [r5]
   1368c:	mov	r1, #1
   13690:	mov	r2, r0
   13694:	mov	r0, r4
   13698:	add	sp, sp, #32
   1369c:	pop	{r4, r5, r6, lr}
   136a0:	b	10cb8 <__fprintf_chk@plt>
   136a4:	mov	r2, #5
   136a8:	ldr	r1, [pc, #524]	; 138bc <abort@plt+0x2b98>
   136ac:	mov	r0, #0
   136b0:	bl	10ba4 <dcgettext@plt>
   136b4:	ldr	r2, [r5, #4]
   136b8:	ldr	r3, [r5]
   136bc:	mov	r1, #1
   136c0:	str	r2, [sp, #48]	; 0x30
   136c4:	mov	r2, r0
   136c8:	mov	r0, r4
   136cc:	add	sp, sp, #32
   136d0:	pop	{r4, r5, r6, lr}
   136d4:	b	10cb8 <__fprintf_chk@plt>
   136d8:	mov	r2, #5
   136dc:	ldr	r1, [pc, #476]	; 138c0 <abort@plt+0x2b9c>
   136e0:	mov	r0, #0
   136e4:	bl	10ba4 <dcgettext@plt>
   136e8:	ldr	r1, [r5, #8]
   136ec:	ldr	r2, [r5, #4]
   136f0:	ldr	r3, [r5]
   136f4:	str	r1, [sp, #52]	; 0x34
   136f8:	str	r2, [sp, #48]	; 0x30
   136fc:	mov	r1, #1
   13700:	mov	r2, r0
   13704:	mov	r0, r4
   13708:	add	sp, sp, #32
   1370c:	pop	{r4, r5, r6, lr}
   13710:	b	10cb8 <__fprintf_chk@plt>
   13714:	mov	r2, #5
   13718:	ldr	r1, [pc, #420]	; 138c4 <abort@plt+0x2ba0>
   1371c:	mov	r0, #0
   13720:	bl	10ba4 <dcgettext@plt>
   13724:	ldr	r1, [r5, #8]
   13728:	ldr	ip, [r5, #12]
   1372c:	ldr	r2, [r5, #4]
   13730:	ldr	r3, [r5]
   13734:	stmib	sp, {r1, ip}
   13738:	str	r2, [sp]
   1373c:	mov	r1, #1
   13740:	mov	r2, r0
   13744:	mov	r0, r4
   13748:	bl	10cb8 <__fprintf_chk@plt>
   1374c:	b	13670 <abort@plt+0x294c>
   13750:	mov	r2, #5
   13754:	ldr	r1, [pc, #364]	; 138c8 <abort@plt+0x2ba4>
   13758:	mov	r0, #0
   1375c:	bl	10ba4 <dcgettext@plt>
   13760:	add	r1, r5, #8
   13764:	ldr	r2, [r5, #4]
   13768:	ldm	r1, {r1, ip, lr}
   1376c:	ldr	r3, [r5]
   13770:	str	r2, [sp]
   13774:	stmib	sp, {r1, ip, lr}
   13778:	mov	r1, #1
   1377c:	mov	r2, r0
   13780:	mov	r0, r4
   13784:	bl	10cb8 <__fprintf_chk@plt>
   13788:	b	13670 <abort@plt+0x294c>
   1378c:	mov	r2, #5
   13790:	ldr	r1, [pc, #308]	; 138cc <abort@plt+0x2ba8>
   13794:	mov	r0, #0
   13798:	bl	10ba4 <dcgettext@plt>
   1379c:	add	r1, r5, #8
   137a0:	ldr	r2, [r5, #4]
   137a4:	ldm	r1, {r1, ip, lr}
   137a8:	ldr	r6, [r5, #20]
   137ac:	ldr	r3, [r5]
   137b0:	stmib	sp, {r1, ip, lr}
   137b4:	mov	r1, #1
   137b8:	str	r2, [sp]
   137bc:	str	r6, [sp, #16]
   137c0:	mov	r2, r0
   137c4:	mov	r0, r4
   137c8:	bl	10cb8 <__fprintf_chk@plt>
   137cc:	b	13670 <abort@plt+0x294c>
   137d0:	mov	r2, #5
   137d4:	ldr	r1, [pc, #244]	; 138d0 <abort@plt+0x2bac>
   137d8:	mov	r0, #0
   137dc:	bl	10ba4 <dcgettext@plt>
   137e0:	ldr	r2, [r5, #24]
   137e4:	ldr	r3, [r5]
   137e8:	ldr	r6, [r5, #20]
   137ec:	ldr	lr, [r5, #16]
   137f0:	ldr	ip, [r5, #12]
   137f4:	str	r2, [sp, #20]
   137f8:	ldr	r1, [r5, #8]
   137fc:	ldr	r2, [r5, #4]
   13800:	str	r6, [sp, #16]
   13804:	stmib	sp, {r1, ip, lr}
   13808:	mov	r1, #1
   1380c:	str	r2, [sp]
   13810:	mov	r2, r0
   13814:	mov	r0, r4
   13818:	bl	10cb8 <__fprintf_chk@plt>
   1381c:	b	13670 <abort@plt+0x294c>
   13820:	mov	r2, #5
   13824:	ldr	r1, [pc, #168]	; 138d4 <abort@plt+0x2bb0>
   13828:	mov	r0, #0
   1382c:	bl	10ba4 <dcgettext@plt>
   13830:	ldr	r1, [r5, #28]
   13834:	ldr	r2, [r5, #24]
   13838:	ldr	r3, [r5]
   1383c:	ldr	r6, [r5, #20]
   13840:	ldr	lr, [r5, #16]
   13844:	str	r1, [sp, #24]
   13848:	ldr	ip, [r5, #12]
   1384c:	str	r2, [sp, #20]
   13850:	ldr	r1, [r5, #8]
   13854:	ldr	r2, [r5, #4]
   13858:	str	r6, [sp, #16]
   1385c:	stmib	sp, {r1, ip, lr}
   13860:	mov	r1, #1
   13864:	str	r2, [sp]
   13868:	mov	r2, r0
   1386c:	mov	r0, r4
   13870:	bl	10cb8 <__fprintf_chk@plt>
   13874:	b	13670 <abort@plt+0x294c>
   13878:	str	r3, [sp]
   1387c:	mov	r1, #1
   13880:	mov	r3, r2
   13884:	ldr	r2, [pc, #76]	; 138d8 <abort@plt+0x2bb4>
   13888:	bl	10cb8 <__fprintf_chk@plt>
   1388c:	b	13578 <abort@plt+0x2854>
   13890:	mov	r2, #5
   13894:	ldr	r1, [pc, #64]	; 138dc <abort@plt+0x2bb8>
   13898:	b	1361c <abort@plt+0x28f8>
   1389c:	strdeq	r5, [r1], -r4
   138a0:	andeq	r5, r1, r8, lsl #2
   138a4:	andeq	r0, r0, r6, ror #15
   138a8:	andeq	r5, r1, r0, ror #7
   138ac:	andeq	r5, r1, ip, lsl #2
   138b0:			; <UNDEFINED> instruction: 0x000151b8
   138b4:	andeq	r5, r1, r8, ror #5
   138b8:	ldrdeq	r5, [r1], -ip
   138bc:	andeq	r5, r1, ip, ror #3
   138c0:	andeq	r5, r1, r4, lsl #4
   138c4:	andeq	r5, r1, r0, lsr #4
   138c8:	andeq	r5, r1, r0, asr #4
   138cc:	andeq	r5, r1, r4, ror #4
   138d0:	andeq	r5, r1, ip, lsl #5
   138d4:			; <UNDEFINED> instruction: 0x000152b8
   138d8:	andeq	r5, r1, r0, lsl #2
   138dc:	andeq	r5, r1, ip, lsl r3
   138e0:	push	{r4, r5, lr}
   138e4:	sub	sp, sp, #12
   138e8:	ldr	r5, [sp, #24]
   138ec:	ldr	ip, [r5]
   138f0:	cmp	ip, #0
   138f4:	beq	13910 <abort@plt+0x2bec>
   138f8:	mov	lr, r5
   138fc:	mov	ip, #0
   13900:	ldr	r4, [lr, #4]!
   13904:	add	ip, ip, #1
   13908:	cmp	r4, #0
   1390c:	bne	13900 <abort@plt+0x2bdc>
   13910:	stm	sp, {r5, ip}
   13914:	bl	13548 <abort@plt+0x2824>
   13918:	add	sp, sp, #12
   1391c:	pop	{r4, r5, pc}
   13920:	push	{r4, r5, lr}
   13924:	sub	sp, sp, #52	; 0x34
   13928:	add	r5, sp, #4
   1392c:	ldr	r4, [sp, #64]	; 0x40
   13930:	mov	ip, #0
   13934:	sub	r4, r4, #4
   13938:	ldr	lr, [r4, #4]!
   1393c:	cmp	lr, #0
   13940:	str	lr, [r5, #4]!
   13944:	beq	13954 <abort@plt+0x2c30>
   13948:	add	ip, ip, #1
   1394c:	cmp	ip, #10
   13950:	bne	13938 <abort@plt+0x2c14>
   13954:	add	lr, sp, #8
   13958:	str	ip, [sp, #4]
   1395c:	str	lr, [sp]
   13960:	bl	13548 <abort@plt+0x2824>
   13964:	add	sp, sp, #52	; 0x34
   13968:	pop	{r4, r5, pc}
   1396c:	push	{r3}		; (str r3, [sp, #-4]!)
   13970:	push	{r4, lr}
   13974:	sub	sp, sp, #60	; 0x3c
   13978:	add	lr, sp, #56	; 0x38
   1397c:	add	r3, sp, #72	; 0x48
   13980:	str	r3, [lr, #-44]!	; 0xffffffd4
   13984:	add	r4, sp, #68	; 0x44
   13988:	mov	r3, #0
   1398c:	ldr	ip, [r4, #4]!
   13990:	cmp	ip, #0
   13994:	str	ip, [lr, #4]!
   13998:	beq	139a8 <abort@plt+0x2c84>
   1399c:	add	r3, r3, #1
   139a0:	cmp	r3, #10
   139a4:	bne	1398c <abort@plt+0x2c68>
   139a8:	add	ip, sp, #16
   139ac:	str	r3, [sp, #4]
   139b0:	str	ip, [sp]
   139b4:	ldr	r3, [sp, #68]	; 0x44
   139b8:	bl	13548 <abort@plt+0x2824>
   139bc:	add	sp, sp, #60	; 0x3c
   139c0:	pop	{r4, lr}
   139c4:	add	sp, sp, #4
   139c8:	bx	lr
   139cc:	ldr	r3, [pc, #116]	; 13a48 <abort@plt+0x2d24>
   139d0:	push	{r4, lr}
   139d4:	mov	r0, #10
   139d8:	ldr	r1, [r3]
   139dc:	bl	10b98 <fputc_unlocked@plt>
   139e0:	mov	r2, #5
   139e4:	ldr	r1, [pc, #96]	; 13a4c <abort@plt+0x2d28>
   139e8:	mov	r0, #0
   139ec:	bl	10ba4 <dcgettext@plt>
   139f0:	ldr	r2, [pc, #88]	; 13a50 <abort@plt+0x2d2c>
   139f4:	mov	r1, r0
   139f8:	mov	r0, #1
   139fc:	bl	10ca0 <__printf_chk@plt>
   13a00:	mov	r2, #5
   13a04:	ldr	r1, [pc, #72]	; 13a54 <abort@plt+0x2d30>
   13a08:	mov	r0, #0
   13a0c:	bl	10ba4 <dcgettext@plt>
   13a10:	ldr	r3, [pc, #64]	; 13a58 <abort@plt+0x2d34>
   13a14:	ldr	r2, [pc, #64]	; 13a5c <abort@plt+0x2d38>
   13a18:	mov	r1, r0
   13a1c:	mov	r0, #1
   13a20:	bl	10ca0 <__printf_chk@plt>
   13a24:	mov	r2, #5
   13a28:	ldr	r1, [pc, #48]	; 13a60 <abort@plt+0x2d3c>
   13a2c:	mov	r0, #0
   13a30:	bl	10ba4 <dcgettext@plt>
   13a34:	ldr	r2, [pc, #40]	; 13a64 <abort@plt+0x2d40>
   13a38:	pop	{r4, lr}
   13a3c:	mov	r1, r0
   13a40:	mov	r0, #1
   13a44:	b	10ca0 <__printf_chk@plt>
   13a48:	andeq	r6, r2, r4, lsr #2
   13a4c:	andeq	r5, r1, r8, asr r3
   13a50:	andeq	r5, r1, ip, ror #6
   13a54:	andeq	r5, r1, r4, lsl #7
   13a58:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13a5c:	andeq	r4, r1, ip, lsl lr
   13a60:	muleq	r1, r8, r3
   13a64:	andeq	r5, r1, r0, asr #7
   13a68:	push	{r4, lr}
   13a6c:	bl	14038 <abort@plt+0x3314>
   13a70:	cmp	r0, #0
   13a74:	popne	{r4, pc}
   13a78:	bl	13fb0 <abort@plt+0x328c>
   13a7c:	push	{r4, lr}
   13a80:	bl	14038 <abort@plt+0x3314>
   13a84:	cmp	r0, #0
   13a88:	popne	{r4, pc}
   13a8c:	bl	13fb0 <abort@plt+0x328c>
   13a90:	push	{r4, lr}
   13a94:	bl	14038 <abort@plt+0x3314>
   13a98:	cmp	r0, #0
   13a9c:	popne	{r4, pc}
   13aa0:	bl	13fb0 <abort@plt+0x328c>
   13aa4:	push	{r4, r5, r6, lr}
   13aa8:	mov	r5, r0
   13aac:	mov	r4, r1
   13ab0:	bl	14064 <abort@plt+0x3340>
   13ab4:	cmp	r0, #0
   13ab8:	popne	{r4, r5, r6, pc}
   13abc:	adds	r4, r4, #0
   13ac0:	movne	r4, #1
   13ac4:	cmp	r5, #0
   13ac8:	orreq	r4, r4, #1
   13acc:	cmp	r4, #0
   13ad0:	popeq	{r4, r5, r6, pc}
   13ad4:	bl	13fb0 <abort@plt+0x328c>
   13ad8:	push	{r4, lr}
   13adc:	cmp	r1, #0
   13ae0:	orreq	r1, r1, #1
   13ae4:	bl	14064 <abort@plt+0x3340>
   13ae8:	cmp	r0, #0
   13aec:	popne	{r4, pc}
   13af0:	bl	13fb0 <abort@plt+0x328c>
   13af4:	push	{r4, r5, r6, lr}
   13af8:	mov	r6, r0
   13afc:	mov	r5, r1
   13b00:	mov	r4, r2
   13b04:	bl	14410 <abort@plt+0x36ec>
   13b08:	cmp	r0, #0
   13b0c:	popne	{r4, r5, r6, pc}
   13b10:	cmp	r6, #0
   13b14:	beq	13b24 <abort@plt+0x2e00>
   13b18:	cmp	r5, #0
   13b1c:	cmpne	r4, #0
   13b20:	popeq	{r4, r5, r6, pc}
   13b24:	bl	13fb0 <abort@plt+0x328c>
   13b28:	b	13af4 <abort@plt+0x2dd0>
   13b2c:	cmp	r2, #0
   13b30:	cmpne	r1, #0
   13b34:	moveq	r2, #1
   13b38:	moveq	r1, r2
   13b3c:	push	{r4, lr}
   13b40:	bl	14410 <abort@plt+0x36ec>
   13b44:	cmp	r0, #0
   13b48:	popne	{r4, pc}
   13b4c:	bl	13fb0 <abort@plt+0x328c>
   13b50:	mov	r2, r1
   13b54:	mov	r1, r0
   13b58:	mov	r0, #0
   13b5c:	b	13af4 <abort@plt+0x2dd0>
   13b60:	mov	r2, r1
   13b64:	mov	r1, r0
   13b68:	mov	r0, #0
   13b6c:	b	13b2c <abort@plt+0x2e08>
   13b70:	push	{r4, r5, r6, lr}
   13b74:	subs	r6, r0, #0
   13b78:	sub	sp, sp, #8
   13b7c:	mov	r5, r1
   13b80:	ldr	r4, [r1]
   13b84:	beq	13bc0 <abort@plt+0x2e9c>
   13b88:	lsr	r1, r4, #1
   13b8c:	add	r3, r1, #1
   13b90:	mvn	r3, r3
   13b94:	cmp	r4, r3
   13b98:	bhi	13bbc <abort@plt+0x2e98>
   13b9c:	add	r4, r4, #1
   13ba0:	add	r4, r4, r1
   13ba4:	mov	r0, r6
   13ba8:	mov	r1, r4
   13bac:	bl	13af4 <abort@plt+0x2dd0>
   13bb0:	str	r4, [r5]
   13bb4:	add	sp, sp, #8
   13bb8:	pop	{r4, r5, r6, pc}
   13bbc:	bl	13fb0 <abort@plt+0x328c>
   13bc0:	cmp	r4, #0
   13bc4:	bne	13ba4 <abort@plt+0x2e80>
   13bc8:	mov	r1, r2
   13bcc:	mov	r0, #64	; 0x40
   13bd0:	str	r2, [sp, #4]
   13bd4:	bl	14550 <abort@plt+0x382c>
   13bd8:	ldr	r2, [sp, #4]
   13bdc:	cmp	r0, #0
   13be0:	movne	r4, r0
   13be4:	addeq	r4, r0, #1
   13be8:	b	13ba4 <abort@plt+0x2e80>
   13bec:	mov	r2, #1
   13bf0:	b	13b70 <abort@plt+0x2e4c>
   13bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bf8:	sub	sp, sp, #12
   13bfc:	ldr	r6, [r1]
   13c00:	mov	sl, r1
   13c04:	mov	r9, r0
   13c08:	asrs	r4, r6, #1
   13c0c:	mov	r5, r2
   13c10:	mov	fp, r3
   13c14:	ldr	r7, [sp, #48]	; 0x30
   13c18:	bmi	13d84 <abort@plt+0x3060>
   13c1c:	mvn	r3, #-2147483648	; 0x80000000
   13c20:	sub	r3, r3, r4
   13c24:	cmp	r6, r3
   13c28:	movle	r3, #0
   13c2c:	movgt	r3, #1
   13c30:	mvn	r8, fp
   13c34:	cmp	r3, #0
   13c38:	addeq	r4, r4, r6
   13c3c:	mvnne	r4, #-2147483648	; 0x80000000
   13c40:	lsr	r8, r8, #31
   13c44:	cmp	fp, r4
   13c48:	movge	r3, #0
   13c4c:	andlt	r3, r8, #1
   13c50:	cmp	r3, #0
   13c54:	beq	13d3c <abort@plt+0x3018>
   13c58:	cmp	r7, #0
   13c5c:	blt	13e0c <abort@plt+0x30e8>
   13c60:	bne	13e04 <abort@plt+0x30e0>
   13c64:	mov	r2, #64	; 0x40
   13c68:	mov	r1, r7
   13c6c:	mov	r0, r2
   13c70:	str	r2, [sp, #4]
   13c74:	bl	1475c <abort@plt+0x3a38>
   13c78:	ldr	r2, [sp, #4]
   13c7c:	mov	r1, r7
   13c80:	mov	r4, r0
   13c84:	mov	r0, r2
   13c88:	bl	1497c <abort@plt+0x3c58>
   13c8c:	ldr	r2, [sp, #4]
   13c90:	sub	r1, r2, r1
   13c94:	cmp	r9, #0
   13c98:	sub	r3, r4, r6
   13c9c:	streq	r9, [sl]
   13ca0:	cmp	r3, r5
   13ca4:	bge	13d28 <abort@plt+0x3004>
   13ca8:	cmp	r5, #0
   13cac:	blt	13d98 <abort@plt+0x3074>
   13cb0:	cmp	r6, #0
   13cb4:	blt	13cd4 <abort@plt+0x2fb0>
   13cb8:	mvn	r3, #-2147483648	; 0x80000000
   13cbc:	sub	r3, r3, r5
   13cc0:	cmp	r6, r3
   13cc4:	movle	r3, #0
   13cc8:	movgt	r3, #1
   13ccc:	cmp	r3, #0
   13cd0:	bne	13e94 <abort@plt+0x3170>
   13cd4:	add	r5, r6, r5
   13cd8:	cmp	fp, r5
   13cdc:	movge	r8, #0
   13ce0:	andlt	r8, r8, #1
   13ce4:	cmp	r8, #0
   13ce8:	mov	r4, r5
   13cec:	bne	13e94 <abort@plt+0x3170>
   13cf0:	cmp	r7, #0
   13cf4:	blt	13dac <abort@plt+0x3088>
   13cf8:	beq	13d24 <abort@plt+0x3000>
   13cfc:	cmp	r5, #0
   13d00:	blt	13e54 <abort@plt+0x3130>
   13d04:	mov	r1, r7
   13d08:	mvn	r0, #-2147483648	; 0x80000000
   13d0c:	bl	1475c <abort@plt+0x3a38>
   13d10:	cmp	r5, r0
   13d14:	movle	r0, #0
   13d18:	movgt	r0, #1
   13d1c:	cmp	r0, #0
   13d20:	bne	13e94 <abort@plt+0x3170>
   13d24:	mul	r1, r5, r7
   13d28:	mov	r0, r9
   13d2c:	bl	13aa4 <abort@plt+0x2d80>
   13d30:	str	r4, [sl]
   13d34:	add	sp, sp, #12
   13d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d3c:	cmp	r7, #0
   13d40:	blt	13dd8 <abort@plt+0x30b4>
   13d44:	beq	13c64 <abort@plt+0x2f40>
   13d48:	cmp	r4, #0
   13d4c:	blt	13e14 <abort@plt+0x30f0>
   13d50:	mov	r1, r7
   13d54:	mvn	r0, #-2147483648	; 0x80000000
   13d58:	bl	1475c <abort@plt+0x3a38>
   13d5c:	cmp	r0, r4
   13d60:	movge	r0, #0
   13d64:	movlt	r0, #1
   13d68:	cmp	r0, #0
   13d6c:	mvnne	r2, #-2147483648	; 0x80000000
   13d70:	bne	13c68 <abort@plt+0x2f44>
   13d74:	mul	r1, r7, r4
   13d78:	cmp	r1, #63	; 0x3f
   13d7c:	bgt	13c94 <abort@plt+0x2f70>
   13d80:	b	13c64 <abort@plt+0x2f40>
   13d84:	rsb	r3, r4, #-2147483648	; 0x80000000
   13d88:	cmp	r6, r3
   13d8c:	movge	r3, #0
   13d90:	movlt	r3, #1
   13d94:	b	13c30 <abort@plt+0x2f0c>
   13d98:	rsb	r3, r5, #-2147483648	; 0x80000000
   13d9c:	cmp	r6, r3
   13da0:	movge	r3, #0
   13da4:	movlt	r3, #1
   13da8:	b	13ccc <abort@plt+0x2fa8>
   13dac:	cmp	r5, #0
   13db0:	blt	13e38 <abort@plt+0x3114>
   13db4:	cmn	r7, #1
   13db8:	beq	13d24 <abort@plt+0x3000>
   13dbc:	mov	r1, r7
   13dc0:	mov	r0, #-2147483648	; 0x80000000
   13dc4:	bl	1475c <abort@plt+0x3a38>
   13dc8:	cmp	r5, r0
   13dcc:	movle	r0, #0
   13dd0:	movgt	r0, #1
   13dd4:	b	13d1c <abort@plt+0x2ff8>
   13dd8:	cmp	r4, #0
   13ddc:	blt	13e78 <abort@plt+0x3154>
   13de0:	cmn	r7, #1
   13de4:	beq	13d74 <abort@plt+0x3050>
   13de8:	mov	r1, r7
   13dec:	mov	r0, #-2147483648	; 0x80000000
   13df0:	bl	1475c <abort@plt+0x3a38>
   13df4:	cmp	r0, r4
   13df8:	movge	r0, #0
   13dfc:	movlt	r0, #1
   13e00:	b	13d68 <abort@plt+0x3044>
   13e04:	mov	r4, fp
   13e08:	b	13d50 <abort@plt+0x302c>
   13e0c:	mov	r4, fp
   13e10:	b	13de0 <abort@plt+0x30bc>
   13e14:	cmn	r4, #1
   13e18:	beq	13d74 <abort@plt+0x3050>
   13e1c:	mov	r1, r4
   13e20:	mov	r0, #-2147483648	; 0x80000000
   13e24:	bl	1475c <abort@plt+0x3a38>
   13e28:	cmp	r7, r0
   13e2c:	movle	r0, #0
   13e30:	movgt	r0, #1
   13e34:	b	13d68 <abort@plt+0x3044>
   13e38:	mov	r1, r7
   13e3c:	mvn	r0, #-2147483648	; 0x80000000
   13e40:	bl	1475c <abort@plt+0x3a38>
   13e44:	cmp	r5, r0
   13e48:	movge	r0, #0
   13e4c:	movlt	r0, #1
   13e50:	b	13d1c <abort@plt+0x2ff8>
   13e54:	cmn	r5, #1
   13e58:	beq	13d24 <abort@plt+0x3000>
   13e5c:	mov	r1, r5
   13e60:	mov	r0, #-2147483648	; 0x80000000
   13e64:	bl	1475c <abort@plt+0x3a38>
   13e68:	cmp	r7, r0
   13e6c:	movle	r0, #0
   13e70:	movgt	r0, #1
   13e74:	b	13d1c <abort@plt+0x2ff8>
   13e78:	mov	r1, r7
   13e7c:	mvn	r0, #-2147483648	; 0x80000000
   13e80:	bl	1475c <abort@plt+0x3a38>
   13e84:	cmp	r0, r4
   13e88:	movle	r0, #0
   13e8c:	movgt	r0, #1
   13e90:	b	13d68 <abort@plt+0x3044>
   13e94:	bl	13fb0 <abort@plt+0x328c>
   13e98:	push	{r4, lr}
   13e9c:	mov	r1, #1
   13ea0:	bl	13ff0 <abort@plt+0x32cc>
   13ea4:	cmp	r0, #0
   13ea8:	popne	{r4, pc}
   13eac:	bl	13fb0 <abort@plt+0x328c>
   13eb0:	push	{r4, lr}
   13eb4:	mov	r1, #1
   13eb8:	bl	13ff0 <abort@plt+0x32cc>
   13ebc:	cmp	r0, #0
   13ec0:	popne	{r4, pc}
   13ec4:	bl	13fb0 <abort@plt+0x328c>
   13ec8:	push	{r4, lr}
   13ecc:	bl	13ff0 <abort@plt+0x32cc>
   13ed0:	cmp	r0, #0
   13ed4:	popne	{r4, pc}
   13ed8:	bl	13fb0 <abort@plt+0x328c>
   13edc:	push	{r4, lr}
   13ee0:	bl	13ff0 <abort@plt+0x32cc>
   13ee4:	cmp	r0, #0
   13ee8:	popne	{r4, pc}
   13eec:	bl	13fb0 <abort@plt+0x328c>
   13ef0:	push	{r4, r5, r6, lr}
   13ef4:	mov	r6, r0
   13ef8:	mov	r0, r1
   13efc:	mov	r4, r1
   13f00:	bl	14038 <abort@plt+0x3314>
   13f04:	subs	r5, r0, #0
   13f08:	beq	13f20 <abort@plt+0x31fc>
   13f0c:	mov	r2, r4
   13f10:	mov	r1, r6
   13f14:	bl	10b74 <memcpy@plt>
   13f18:	mov	r0, r5
   13f1c:	pop	{r4, r5, r6, pc}
   13f20:	bl	13fb0 <abort@plt+0x328c>
   13f24:	push	{r4, r5, r6, lr}
   13f28:	mov	r6, r0
   13f2c:	mov	r0, r1
   13f30:	mov	r4, r1
   13f34:	bl	14038 <abort@plt+0x3314>
   13f38:	subs	r5, r0, #0
   13f3c:	beq	13f54 <abort@plt+0x3230>
   13f40:	mov	r2, r4
   13f44:	mov	r1, r6
   13f48:	bl	10b74 <memcpy@plt>
   13f4c:	mov	r0, r5
   13f50:	pop	{r4, r5, r6, pc}
   13f54:	bl	13fb0 <abort@plt+0x328c>
   13f58:	push	{r4, r5, r6, lr}
   13f5c:	mov	r6, r0
   13f60:	add	r0, r1, #1
   13f64:	mov	r4, r1
   13f68:	bl	14038 <abort@plt+0x3314>
   13f6c:	subs	r5, r0, #0
   13f70:	beq	13f90 <abort@plt+0x326c>
   13f74:	mov	r3, #0
   13f78:	mov	r1, r6
   13f7c:	strb	r3, [r5, r4]
   13f80:	mov	r2, r4
   13f84:	bl	10b74 <memcpy@plt>
   13f88:	mov	r0, r5
   13f8c:	pop	{r4, r5, r6, pc}
   13f90:	bl	13fb0 <abort@plt+0x328c>
   13f94:	push	{r4, lr}
   13f98:	mov	r4, r0
   13f9c:	bl	10c70 <strlen@plt>
   13fa0:	add	r1, r0, #1
   13fa4:	mov	r0, r4
   13fa8:	pop	{r4, lr}
   13fac:	b	13ef0 <abort@plt+0x31cc>
   13fb0:	ldr	r3, [pc, #44]	; 13fe4 <abort@plt+0x32c0>
   13fb4:	push	{r4, lr}
   13fb8:	mov	r2, #5
   13fbc:	ldr	r1, [pc, #36]	; 13fe8 <abort@plt+0x32c4>
   13fc0:	mov	r0, #0
   13fc4:	ldr	r4, [r3]
   13fc8:	bl	10ba4 <dcgettext@plt>
   13fcc:	ldr	r2, [pc, #24]	; 13fec <abort@plt+0x32c8>
   13fd0:	mov	r1, #0
   13fd4:	mov	r3, r0
   13fd8:	mov	r0, r4
   13fdc:	bl	10c10 <error@plt>
   13fe0:	bl	10d24 <abort@plt>
   13fe4:	andeq	r6, r2, ip, asr #1
   13fe8:	andeq	r5, r1, r0, lsl r4
   13fec:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ff0:	cmp	r1, #0
   13ff4:	cmpne	r0, #0
   13ff8:	moveq	r1, #1
   13ffc:	moveq	r0, r1
   14000:	umull	r2, r3, r0, r1
   14004:	adds	r3, r3, #0
   14008:	movne	r3, #1
   1400c:	cmp	r2, #0
   14010:	blt	14020 <abort@plt+0x32fc>
   14014:	cmp	r3, #0
   14018:	bne	14020 <abort@plt+0x32fc>
   1401c:	b	10b20 <calloc@plt>
   14020:	push	{r4, lr}
   14024:	bl	10c7c <__errno_location@plt>
   14028:	mov	r3, #12
   1402c:	str	r3, [r0]
   14030:	mov	r0, #0
   14034:	pop	{r4, pc}
   14038:	cmp	r0, #0
   1403c:	moveq	r0, #1
   14040:	cmp	r0, #0
   14044:	blt	1404c <abort@plt+0x3328>
   14048:	b	10c1c <malloc@plt>
   1404c:	push	{r4, lr}
   14050:	bl	10c7c <__errno_location@plt>
   14054:	mov	r3, #12
   14058:	str	r3, [r0]
   1405c:	mov	r0, #0
   14060:	pop	{r4, pc}
   14064:	cmp	r0, #0
   14068:	beq	1408c <abort@plt+0x3368>
   1406c:	cmp	r1, #0
   14070:	push	{lr}		; (str lr, [sp, #-4]!)
   14074:	sub	sp, sp, #12
   14078:	beq	14094 <abort@plt+0x3370>
   1407c:	blt	140ac <abort@plt+0x3388>
   14080:	add	sp, sp, #12
   14084:	pop	{lr}		; (ldr lr, [sp], #4)
   14088:	b	10bb0 <realloc@plt>
   1408c:	mov	r0, r1
   14090:	b	14038 <abort@plt+0x3314>
   14094:	str	r1, [sp, #4]
   14098:	bl	11618 <abort@plt+0x8f4>
   1409c:	ldr	r3, [sp, #4]
   140a0:	mov	r0, r3
   140a4:	add	sp, sp, #12
   140a8:	pop	{pc}		; (ldr pc, [sp], #4)
   140ac:	bl	10c7c <__errno_location@plt>
   140b0:	mov	r2, #12
   140b4:	mov	r3, #0
   140b8:	str	r2, [r0]
   140bc:	b	140a0 <abort@plt+0x337c>
   140c0:	ldrb	r3, [r0]
   140c4:	cmp	r3, #47	; 0x2f
   140c8:	bne	140d8 <abort@plt+0x33b4>
   140cc:	ldrb	r3, [r0, #1]!
   140d0:	cmp	r3, #47	; 0x2f
   140d4:	beq	140cc <abort@plt+0x33a8>
   140d8:	cmp	r3, #0
   140dc:	bxeq	lr
   140e0:	mov	r2, #0
   140e4:	push	{lr}		; (str lr, [sp, #-4]!)
   140e8:	mov	ip, r2
   140ec:	mov	r1, r0
   140f0:	mov	lr, #1
   140f4:	cmp	r3, #47	; 0x2f
   140f8:	moveq	r2, lr
   140fc:	beq	1410c <abort@plt+0x33e8>
   14100:	cmp	r2, #0
   14104:	movne	r0, r1
   14108:	movne	r2, ip
   1410c:	ldrb	r3, [r1, #1]!
   14110:	cmp	r3, #0
   14114:	bne	140f4 <abort@plt+0x33d0>
   14118:	pop	{pc}		; (ldr pc, [sp], #4)
   1411c:	push	{r4, lr}
   14120:	mov	r4, r0
   14124:	bl	10c70 <strlen@plt>
   14128:	cmp	r0, #1
   1412c:	popls	{r4, pc}
   14130:	sub	r3, r0, #1
   14134:	add	r2, r4, r3
   14138:	ldrb	r1, [r4, r3]
   1413c:	cmp	r1, #47	; 0x2f
   14140:	popne	{r4, pc}
   14144:	cmp	r3, #1
   14148:	beq	1415c <abort@plt+0x3438>
   1414c:	ldrb	r1, [r2, #-1]!
   14150:	sub	r0, r3, #1
   14154:	cmp	r1, #47	; 0x2f
   14158:	beq	14164 <abort@plt+0x3440>
   1415c:	mov	r0, r3
   14160:	pop	{r4, pc}
   14164:	mov	r3, r0
   14168:	b	14144 <abort@plt+0x3420>
   1416c:	push	{r4, r5, r6, lr}
   14170:	mov	r4, r0
   14174:	bl	10bf8 <__fpending@plt>
   14178:	ldr	r5, [r4]
   1417c:	and	r5, r5, #32
   14180:	mov	r6, r0
   14184:	mov	r0, r4
   14188:	bl	141e8 <abort@plt+0x34c4>
   1418c:	cmp	r5, #0
   14190:	mov	r4, r0
   14194:	bne	141b4 <abort@plt+0x3490>
   14198:	cmp	r0, #0
   1419c:	beq	141ac <abort@plt+0x3488>
   141a0:	cmp	r6, #0
   141a4:	beq	141d0 <abort@plt+0x34ac>
   141a8:	mvn	r4, #0
   141ac:	mov	r0, r4
   141b0:	pop	{r4, r5, r6, pc}
   141b4:	cmp	r0, #0
   141b8:	bne	141a8 <abort@plt+0x3484>
   141bc:	bl	10c7c <__errno_location@plt>
   141c0:	str	r4, [r0]
   141c4:	mvn	r4, #0
   141c8:	mov	r0, r4
   141cc:	pop	{r4, r5, r6, pc}
   141d0:	bl	10c7c <__errno_location@plt>
   141d4:	ldr	r4, [r0]
   141d8:	subs	r4, r4, #9
   141dc:	mvnne	r4, #0
   141e0:	mov	r0, r4
   141e4:	pop	{r4, r5, r6, pc}
   141e8:	push	{r4, r5, lr}
   141ec:	sub	sp, sp, #12
   141f0:	mov	r4, r0
   141f4:	bl	10cac <fileno@plt>
   141f8:	cmp	r0, #0
   141fc:	mov	r0, r4
   14200:	blt	1427c <abort@plt+0x3558>
   14204:	bl	10c34 <__freading@plt>
   14208:	cmp	r0, #0
   1420c:	bne	14248 <abort@plt+0x3524>
   14210:	mov	r0, r4
   14214:	bl	14288 <abort@plt+0x3564>
   14218:	cmp	r0, #0
   1421c:	beq	14278 <abort@plt+0x3554>
   14220:	bl	10c7c <__errno_location@plt>
   14224:	mov	r5, r0
   14228:	mov	r0, r4
   1422c:	ldr	r4, [r5]
   14230:	bl	10cc4 <fclose@plt>
   14234:	cmp	r4, #0
   14238:	mvnne	r0, #0
   1423c:	strne	r4, [r5]
   14240:	add	sp, sp, #12
   14244:	pop	{r4, r5, pc}
   14248:	mov	r0, r4
   1424c:	bl	10cac <fileno@plt>
   14250:	mov	r3, #1
   14254:	str	r3, [sp]
   14258:	mov	r2, #0
   1425c:	mov	r3, #0
   14260:	bl	10be0 <lseek64@plt>
   14264:	mvn	r3, #0
   14268:	mvn	r2, #0
   1426c:	cmp	r1, r3
   14270:	cmpeq	r0, r2
   14274:	bne	14210 <abort@plt+0x34ec>
   14278:	mov	r0, r4
   1427c:	add	sp, sp, #12
   14280:	pop	{r4, r5, lr}
   14284:	b	10cc4 <fclose@plt>
   14288:	push	{r4, lr}
   1428c:	subs	r4, r0, #0
   14290:	sub	sp, sp, #8
   14294:	beq	142b0 <abort@plt+0x358c>
   14298:	bl	10c34 <__freading@plt>
   1429c:	cmp	r0, #0
   142a0:	beq	142b0 <abort@plt+0x358c>
   142a4:	ldr	r3, [r4]
   142a8:	tst	r3, #256	; 0x100
   142ac:	bne	142c0 <abort@plt+0x359c>
   142b0:	mov	r0, r4
   142b4:	add	sp, sp, #8
   142b8:	pop	{r4, lr}
   142bc:	b	10b50 <fflush@plt>
   142c0:	mov	r3, #1
   142c4:	str	r3, [sp]
   142c8:	mov	r2, #0
   142cc:	mov	r3, #0
   142d0:	mov	r0, r4
   142d4:	bl	142e8 <abort@plt+0x35c4>
   142d8:	mov	r0, r4
   142dc:	add	sp, sp, #8
   142e0:	pop	{r4, lr}
   142e4:	b	10b50 <fflush@plt>
   142e8:	push	{r4, r5, r6, r7, r8, lr}
   142ec:	sub	sp, sp, #8
   142f0:	ldmib	r0, {ip, lr}
   142f4:	mov	r4, r0
   142f8:	ldr	r5, [sp, #32]
   142fc:	cmp	lr, ip
   14300:	beq	14318 <abort@plt+0x35f4>
   14304:	str	r5, [sp, #32]
   14308:	mov	r0, r4
   1430c:	add	sp, sp, #8
   14310:	pop	{r4, r5, r6, r7, r8, lr}
   14314:	b	10cd0 <fseeko64@plt>
   14318:	ldr	lr, [r0, #20]
   1431c:	ldr	ip, [r0, #16]
   14320:	cmp	lr, ip
   14324:	bne	14304 <abort@plt+0x35e0>
   14328:	ldr	r8, [r0, #36]	; 0x24
   1432c:	cmp	r8, #0
   14330:	bne	14304 <abort@plt+0x35e0>
   14334:	mov	r6, r2
   14338:	mov	r7, r3
   1433c:	bl	10cac <fileno@plt>
   14340:	mov	r2, r6
   14344:	mov	r3, r7
   14348:	str	r5, [sp]
   1434c:	bl	10be0 <lseek64@plt>
   14350:	mvn	r3, #0
   14354:	mvn	r2, #0
   14358:	cmp	r1, r3
   1435c:	cmpeq	r0, r2
   14360:	beq	14380 <abort@plt+0x365c>
   14364:	ldr	r3, [r4]
   14368:	strd	r0, [r4, #80]	; 0x50
   1436c:	mov	r0, r8
   14370:	bic	r3, r3, #16
   14374:	str	r3, [r4]
   14378:	add	sp, sp, #8
   1437c:	pop	{r4, r5, r6, r7, r8, pc}
   14380:	mvn	r0, #0
   14384:	b	14378 <abort@plt+0x3654>
   14388:	push	{r4, lr}
   1438c:	mov	r0, #14
   14390:	bl	10d00 <nl_langinfo@plt>
   14394:	cmp	r0, #0
   14398:	beq	143b0 <abort@plt+0x368c>
   1439c:	ldrb	r2, [r0]
   143a0:	ldr	r3, [pc, #16]	; 143b8 <abort@plt+0x3694>
   143a4:	cmp	r2, #0
   143a8:	moveq	r0, r3
   143ac:	pop	{r4, pc}
   143b0:	ldr	r0, [pc]	; 143b8 <abort@plt+0x3694>
   143b4:	pop	{r4, pc}
   143b8:	andeq	r5, r1, r4, lsr #8
   143bc:	push	{r4, r5, r6, r7, lr}
   143c0:	subs	r6, r0, #0
   143c4:	sub	sp, sp, #12
   143c8:	addeq	r6, sp, #4
   143cc:	mov	r0, r6
   143d0:	mov	r5, r2
   143d4:	mov	r7, r1
   143d8:	bl	10c04 <mbrtowc@plt>
   143dc:	cmp	r5, #0
   143e0:	cmnne	r0, #3
   143e4:	mov	r4, r0
   143e8:	bls	14404 <abort@plt+0x36e0>
   143ec:	mov	r0, #0
   143f0:	bl	1445c <abort@plt+0x3738>
   143f4:	cmp	r0, #0
   143f8:	moveq	r4, #1
   143fc:	ldrbeq	r3, [r7]
   14400:	streq	r3, [r6]
   14404:	mov	r0, r4
   14408:	add	sp, sp, #12
   1440c:	pop	{r4, r5, r6, r7, pc}
   14410:	push	{r4, r5, r6, lr}
   14414:	subs	r4, r2, #0
   14418:	mov	r6, r0
   1441c:	mov	r5, r1
   14420:	beq	1444c <abort@plt+0x3728>
   14424:	mov	r1, r4
   14428:	mvn	r0, #0
   1442c:	bl	14550 <abort@plt+0x382c>
   14430:	cmp	r0, r5
   14434:	bcs	1444c <abort@plt+0x3728>
   14438:	bl	10c7c <__errno_location@plt>
   1443c:	mov	r3, #12
   14440:	str	r3, [r0]
   14444:	mov	r0, #0
   14448:	pop	{r4, r5, r6, pc}
   1444c:	mul	r1, r5, r4
   14450:	mov	r0, r6
   14454:	pop	{r4, r5, r6, lr}
   14458:	b	14064 <abort@plt+0x3340>
   1445c:	push	{lr}		; (str lr, [sp, #-4]!)
   14460:	sub	sp, sp, #268	; 0x10c
   14464:	add	r1, sp, #4
   14468:	ldr	r2, [pc, #60]	; 144ac <abort@plt+0x3788>
   1446c:	bl	144b8 <abort@plt+0x3794>
   14470:	cmp	r0, #0
   14474:	movne	r0, #0
   14478:	bne	144a4 <abort@plt+0x3780>
   1447c:	ldr	r1, [pc, #44]	; 144b0 <abort@plt+0x378c>
   14480:	add	r0, sp, #4
   14484:	bl	10b44 <strcmp@plt>
   14488:	cmp	r0, #0
   1448c:	beq	144a4 <abort@plt+0x3780>
   14490:	add	r0, sp, #4
   14494:	ldr	r1, [pc, #24]	; 144b4 <abort@plt+0x3790>
   14498:	bl	10b44 <strcmp@plt>
   1449c:	adds	r0, r0, #0
   144a0:	movne	r0, #1
   144a4:	add	sp, sp, #268	; 0x10c
   144a8:	pop	{pc}		; (ldr pc, [sp], #4)
   144ac:	andeq	r0, r0, r1, lsl #2
   144b0:	andeq	r5, r1, ip, lsr #8
   144b4:	andeq	r5, r1, r0, lsr r4
   144b8:	push	{r4, r5, r6, lr}
   144bc:	mov	r5, r1
   144c0:	mov	r1, #0
   144c4:	mov	r4, r2
   144c8:	bl	10ce8 <setlocale@plt>
   144cc:	subs	r6, r0, #0
   144d0:	beq	1452c <abort@plt+0x3808>
   144d4:	bl	10c70 <strlen@plt>
   144d8:	cmp	r4, r0
   144dc:	bhi	14514 <abort@plt+0x37f0>
   144e0:	cmp	r4, #0
   144e4:	bne	144f0 <abort@plt+0x37cc>
   144e8:	mov	r0, #34	; 0x22
   144ec:	pop	{r4, r5, r6, pc}
   144f0:	sub	r4, r4, #1
   144f4:	mov	r1, r6
   144f8:	mov	r2, r4
   144fc:	mov	r0, r5
   14500:	bl	10b74 <memcpy@plt>
   14504:	mov	r3, #0
   14508:	strb	r3, [r5, r4]
   1450c:	mov	r0, #34	; 0x22
   14510:	pop	{r4, r5, r6, pc}
   14514:	add	r2, r0, #1
   14518:	mov	r1, r6
   1451c:	mov	r0, r5
   14520:	bl	10b74 <memcpy@plt>
   14524:	mov	r0, #0
   14528:	pop	{r4, r5, r6, pc}
   1452c:	cmp	r4, #0
   14530:	beq	14540 <abort@plt+0x381c>
   14534:	strb	r6, [r5]
   14538:	mov	r0, #22
   1453c:	pop	{r4, r5, r6, pc}
   14540:	mov	r0, #22
   14544:	pop	{r4, r5, r6, pc}
   14548:	mov	r1, #0
   1454c:	b	10ce8 <setlocale@plt>
   14550:	subs	r2, r1, #1
   14554:	bxeq	lr
   14558:	bcc	14730 <abort@plt+0x3a0c>
   1455c:	cmp	r0, r1
   14560:	bls	14714 <abort@plt+0x39f0>
   14564:	tst	r1, r2
   14568:	beq	14720 <abort@plt+0x39fc>
   1456c:	clz	r3, r0
   14570:	clz	r2, r1
   14574:	sub	r3, r2, r3
   14578:	rsbs	r3, r3, #31
   1457c:	addne	r3, r3, r3, lsl #1
   14580:	mov	r2, #0
   14584:	addne	pc, pc, r3, lsl #2
   14588:	nop			; (mov r0, r0)
   1458c:	cmp	r0, r1, lsl #31
   14590:	adc	r2, r2, r2
   14594:	subcs	r0, r0, r1, lsl #31
   14598:	cmp	r0, r1, lsl #30
   1459c:	adc	r2, r2, r2
   145a0:	subcs	r0, r0, r1, lsl #30
   145a4:	cmp	r0, r1, lsl #29
   145a8:	adc	r2, r2, r2
   145ac:	subcs	r0, r0, r1, lsl #29
   145b0:	cmp	r0, r1, lsl #28
   145b4:	adc	r2, r2, r2
   145b8:	subcs	r0, r0, r1, lsl #28
   145bc:	cmp	r0, r1, lsl #27
   145c0:	adc	r2, r2, r2
   145c4:	subcs	r0, r0, r1, lsl #27
   145c8:	cmp	r0, r1, lsl #26
   145cc:	adc	r2, r2, r2
   145d0:	subcs	r0, r0, r1, lsl #26
   145d4:	cmp	r0, r1, lsl #25
   145d8:	adc	r2, r2, r2
   145dc:	subcs	r0, r0, r1, lsl #25
   145e0:	cmp	r0, r1, lsl #24
   145e4:	adc	r2, r2, r2
   145e8:	subcs	r0, r0, r1, lsl #24
   145ec:	cmp	r0, r1, lsl #23
   145f0:	adc	r2, r2, r2
   145f4:	subcs	r0, r0, r1, lsl #23
   145f8:	cmp	r0, r1, lsl #22
   145fc:	adc	r2, r2, r2
   14600:	subcs	r0, r0, r1, lsl #22
   14604:	cmp	r0, r1, lsl #21
   14608:	adc	r2, r2, r2
   1460c:	subcs	r0, r0, r1, lsl #21
   14610:	cmp	r0, r1, lsl #20
   14614:	adc	r2, r2, r2
   14618:	subcs	r0, r0, r1, lsl #20
   1461c:	cmp	r0, r1, lsl #19
   14620:	adc	r2, r2, r2
   14624:	subcs	r0, r0, r1, lsl #19
   14628:	cmp	r0, r1, lsl #18
   1462c:	adc	r2, r2, r2
   14630:	subcs	r0, r0, r1, lsl #18
   14634:	cmp	r0, r1, lsl #17
   14638:	adc	r2, r2, r2
   1463c:	subcs	r0, r0, r1, lsl #17
   14640:	cmp	r0, r1, lsl #16
   14644:	adc	r2, r2, r2
   14648:	subcs	r0, r0, r1, lsl #16
   1464c:	cmp	r0, r1, lsl #15
   14650:	adc	r2, r2, r2
   14654:	subcs	r0, r0, r1, lsl #15
   14658:	cmp	r0, r1, lsl #14
   1465c:	adc	r2, r2, r2
   14660:	subcs	r0, r0, r1, lsl #14
   14664:	cmp	r0, r1, lsl #13
   14668:	adc	r2, r2, r2
   1466c:	subcs	r0, r0, r1, lsl #13
   14670:	cmp	r0, r1, lsl #12
   14674:	adc	r2, r2, r2
   14678:	subcs	r0, r0, r1, lsl #12
   1467c:	cmp	r0, r1, lsl #11
   14680:	adc	r2, r2, r2
   14684:	subcs	r0, r0, r1, lsl #11
   14688:	cmp	r0, r1, lsl #10
   1468c:	adc	r2, r2, r2
   14690:	subcs	r0, r0, r1, lsl #10
   14694:	cmp	r0, r1, lsl #9
   14698:	adc	r2, r2, r2
   1469c:	subcs	r0, r0, r1, lsl #9
   146a0:	cmp	r0, r1, lsl #8
   146a4:	adc	r2, r2, r2
   146a8:	subcs	r0, r0, r1, lsl #8
   146ac:	cmp	r0, r1, lsl #7
   146b0:	adc	r2, r2, r2
   146b4:	subcs	r0, r0, r1, lsl #7
   146b8:	cmp	r0, r1, lsl #6
   146bc:	adc	r2, r2, r2
   146c0:	subcs	r0, r0, r1, lsl #6
   146c4:	cmp	r0, r1, lsl #5
   146c8:	adc	r2, r2, r2
   146cc:	subcs	r0, r0, r1, lsl #5
   146d0:	cmp	r0, r1, lsl #4
   146d4:	adc	r2, r2, r2
   146d8:	subcs	r0, r0, r1, lsl #4
   146dc:	cmp	r0, r1, lsl #3
   146e0:	adc	r2, r2, r2
   146e4:	subcs	r0, r0, r1, lsl #3
   146e8:	cmp	r0, r1, lsl #2
   146ec:	adc	r2, r2, r2
   146f0:	subcs	r0, r0, r1, lsl #2
   146f4:	cmp	r0, r1, lsl #1
   146f8:	adc	r2, r2, r2
   146fc:	subcs	r0, r0, r1, lsl #1
   14700:	cmp	r0, r1
   14704:	adc	r2, r2, r2
   14708:	subcs	r0, r0, r1
   1470c:	mov	r0, r2
   14710:	bx	lr
   14714:	moveq	r0, #1
   14718:	movne	r0, #0
   1471c:	bx	lr
   14720:	clz	r2, r1
   14724:	rsb	r2, r2, #31
   14728:	lsr	r0, r0, r2
   1472c:	bx	lr
   14730:	cmp	r0, #0
   14734:	mvnne	r0, #0
   14738:	b	1499c <abort@plt+0x3c78>
   1473c:	cmp	r1, #0
   14740:	beq	14730 <abort@plt+0x3a0c>
   14744:	push	{r0, r1, lr}
   14748:	bl	14550 <abort@plt+0x382c>
   1474c:	pop	{r1, r2, lr}
   14750:	mul	r3, r2, r0
   14754:	sub	r1, r1, r3
   14758:	bx	lr
   1475c:	cmp	r1, #0
   14760:	beq	1496c <abort@plt+0x3c48>
   14764:	eor	ip, r0, r1
   14768:	rsbmi	r1, r1, #0
   1476c:	subs	r2, r1, #1
   14770:	beq	14938 <abort@plt+0x3c14>
   14774:	movs	r3, r0
   14778:	rsbmi	r3, r0, #0
   1477c:	cmp	r3, r1
   14780:	bls	14944 <abort@plt+0x3c20>
   14784:	tst	r1, r2
   14788:	beq	14954 <abort@plt+0x3c30>
   1478c:	clz	r2, r3
   14790:	clz	r0, r1
   14794:	sub	r2, r0, r2
   14798:	rsbs	r2, r2, #31
   1479c:	addne	r2, r2, r2, lsl #1
   147a0:	mov	r0, #0
   147a4:	addne	pc, pc, r2, lsl #2
   147a8:	nop			; (mov r0, r0)
   147ac:	cmp	r3, r1, lsl #31
   147b0:	adc	r0, r0, r0
   147b4:	subcs	r3, r3, r1, lsl #31
   147b8:	cmp	r3, r1, lsl #30
   147bc:	adc	r0, r0, r0
   147c0:	subcs	r3, r3, r1, lsl #30
   147c4:	cmp	r3, r1, lsl #29
   147c8:	adc	r0, r0, r0
   147cc:	subcs	r3, r3, r1, lsl #29
   147d0:	cmp	r3, r1, lsl #28
   147d4:	adc	r0, r0, r0
   147d8:	subcs	r3, r3, r1, lsl #28
   147dc:	cmp	r3, r1, lsl #27
   147e0:	adc	r0, r0, r0
   147e4:	subcs	r3, r3, r1, lsl #27
   147e8:	cmp	r3, r1, lsl #26
   147ec:	adc	r0, r0, r0
   147f0:	subcs	r3, r3, r1, lsl #26
   147f4:	cmp	r3, r1, lsl #25
   147f8:	adc	r0, r0, r0
   147fc:	subcs	r3, r3, r1, lsl #25
   14800:	cmp	r3, r1, lsl #24
   14804:	adc	r0, r0, r0
   14808:	subcs	r3, r3, r1, lsl #24
   1480c:	cmp	r3, r1, lsl #23
   14810:	adc	r0, r0, r0
   14814:	subcs	r3, r3, r1, lsl #23
   14818:	cmp	r3, r1, lsl #22
   1481c:	adc	r0, r0, r0
   14820:	subcs	r3, r3, r1, lsl #22
   14824:	cmp	r3, r1, lsl #21
   14828:	adc	r0, r0, r0
   1482c:	subcs	r3, r3, r1, lsl #21
   14830:	cmp	r3, r1, lsl #20
   14834:	adc	r0, r0, r0
   14838:	subcs	r3, r3, r1, lsl #20
   1483c:	cmp	r3, r1, lsl #19
   14840:	adc	r0, r0, r0
   14844:	subcs	r3, r3, r1, lsl #19
   14848:	cmp	r3, r1, lsl #18
   1484c:	adc	r0, r0, r0
   14850:	subcs	r3, r3, r1, lsl #18
   14854:	cmp	r3, r1, lsl #17
   14858:	adc	r0, r0, r0
   1485c:	subcs	r3, r3, r1, lsl #17
   14860:	cmp	r3, r1, lsl #16
   14864:	adc	r0, r0, r0
   14868:	subcs	r3, r3, r1, lsl #16
   1486c:	cmp	r3, r1, lsl #15
   14870:	adc	r0, r0, r0
   14874:	subcs	r3, r3, r1, lsl #15
   14878:	cmp	r3, r1, lsl #14
   1487c:	adc	r0, r0, r0
   14880:	subcs	r3, r3, r1, lsl #14
   14884:	cmp	r3, r1, lsl #13
   14888:	adc	r0, r0, r0
   1488c:	subcs	r3, r3, r1, lsl #13
   14890:	cmp	r3, r1, lsl #12
   14894:	adc	r0, r0, r0
   14898:	subcs	r3, r3, r1, lsl #12
   1489c:	cmp	r3, r1, lsl #11
   148a0:	adc	r0, r0, r0
   148a4:	subcs	r3, r3, r1, lsl #11
   148a8:	cmp	r3, r1, lsl #10
   148ac:	adc	r0, r0, r0
   148b0:	subcs	r3, r3, r1, lsl #10
   148b4:	cmp	r3, r1, lsl #9
   148b8:	adc	r0, r0, r0
   148bc:	subcs	r3, r3, r1, lsl #9
   148c0:	cmp	r3, r1, lsl #8
   148c4:	adc	r0, r0, r0
   148c8:	subcs	r3, r3, r1, lsl #8
   148cc:	cmp	r3, r1, lsl #7
   148d0:	adc	r0, r0, r0
   148d4:	subcs	r3, r3, r1, lsl #7
   148d8:	cmp	r3, r1, lsl #6
   148dc:	adc	r0, r0, r0
   148e0:	subcs	r3, r3, r1, lsl #6
   148e4:	cmp	r3, r1, lsl #5
   148e8:	adc	r0, r0, r0
   148ec:	subcs	r3, r3, r1, lsl #5
   148f0:	cmp	r3, r1, lsl #4
   148f4:	adc	r0, r0, r0
   148f8:	subcs	r3, r3, r1, lsl #4
   148fc:	cmp	r3, r1, lsl #3
   14900:	adc	r0, r0, r0
   14904:	subcs	r3, r3, r1, lsl #3
   14908:	cmp	r3, r1, lsl #2
   1490c:	adc	r0, r0, r0
   14910:	subcs	r3, r3, r1, lsl #2
   14914:	cmp	r3, r1, lsl #1
   14918:	adc	r0, r0, r0
   1491c:	subcs	r3, r3, r1, lsl #1
   14920:	cmp	r3, r1
   14924:	adc	r0, r0, r0
   14928:	subcs	r3, r3, r1
   1492c:	cmp	ip, #0
   14930:	rsbmi	r0, r0, #0
   14934:	bx	lr
   14938:	teq	ip, r0
   1493c:	rsbmi	r0, r0, #0
   14940:	bx	lr
   14944:	movcc	r0, #0
   14948:	asreq	r0, ip, #31
   1494c:	orreq	r0, r0, #1
   14950:	bx	lr
   14954:	clz	r2, r1
   14958:	rsb	r2, r2, #31
   1495c:	cmp	ip, #0
   14960:	lsr	r0, r3, r2
   14964:	rsbmi	r0, r0, #0
   14968:	bx	lr
   1496c:	cmp	r0, #0
   14970:	mvngt	r0, #-2147483648	; 0x80000000
   14974:	movlt	r0, #-2147483648	; 0x80000000
   14978:	b	1499c <abort@plt+0x3c78>
   1497c:	cmp	r1, #0
   14980:	beq	1496c <abort@plt+0x3c48>
   14984:	push	{r0, r1, lr}
   14988:	bl	14764 <abort@plt+0x3a40>
   1498c:	pop	{r1, r2, lr}
   14990:	mul	r3, r2, r0
   14994:	sub	r1, r1, r3
   14998:	bx	lr
   1499c:	push	{r1, lr}
   149a0:	mov	r0, #8
   149a4:	bl	10b38 <raise@plt>
   149a8:	pop	{r1, pc}
   149ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   149b0:	mov	r7, r0
   149b4:	ldr	r6, [pc, #72]	; 14a04 <abort@plt+0x3ce0>
   149b8:	ldr	r5, [pc, #72]	; 14a08 <abort@plt+0x3ce4>
   149bc:	add	r6, pc, r6
   149c0:	add	r5, pc, r5
   149c4:	sub	r6, r6, r5
   149c8:	mov	r8, r1
   149cc:	mov	r9, r2
   149d0:	bl	10b00 <calloc@plt-0x20>
   149d4:	asrs	r6, r6, #2
   149d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   149dc:	mov	r4, #0
   149e0:	add	r4, r4, #1
   149e4:	ldr	r3, [r5], #4
   149e8:	mov	r2, r9
   149ec:	mov	r1, r8
   149f0:	mov	r0, r7
   149f4:	blx	r3
   149f8:	cmp	r6, r4
   149fc:	bne	149e0 <abort@plt+0x3cbc>
   14a00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a04:	andeq	r1, r1, ip, asr #10
   14a08:	andeq	r1, r1, r4, asr #10
   14a0c:	bx	lr
   14a10:	ldr	r3, [pc, #12]	; 14a24 <abort@plt+0x3d00>
   14a14:	mov	r1, #0
   14a18:	add	r3, pc, r3
   14a1c:	ldr	r2, [r3]
   14a20:	b	10c88 <__cxa_atexit@plt>
   14a24:	andeq	r1, r1, r4, lsr #13

Disassembly of section .fini:

00014a28 <.fini>:
   14a28:	push	{r3, lr}
   14a2c:	pop	{r3, pc}
