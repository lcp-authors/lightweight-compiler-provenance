
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	11038 <dcngettext@plt+0x48>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <fdopen@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <fdopen@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x000182b4

00010d50 <fdopen@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #24, 20	; 0x18000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #24, 20	; 0x18000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #24, 20	; 0x18000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #24, 20	; 0x18000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #24, 20	; 0x18000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #24, 20	; 0x18000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <posix_fadvise64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #24, 20	; 0x18000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <fflush@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #24, 20	; 0x18000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #24, 20	; 0x18000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #24, 20	; 0x18000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #24, 20	; 0x18000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #24, 20	; 0x18000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <fwrite_unlocked@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #24, 20	; 0x18000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <memcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #24, 20	; 0x18000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <fputc_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #24, 20	; 0x18000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <dcgettext@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #24, 20	; 0x18000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #24, 20	; 0x18000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #24, 20	; 0x18000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #24, 20	; 0x18000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #24, 20	; 0x18000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #24, 20	; 0x18000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #24, 20	; 0x18000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #24, 20	; 0x18000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #24, 20	; 0x18000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #24, 20	; 0x18000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #24, 20	; 0x18000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #24, 20	; 0x18000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #24, 20	; 0x18000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__ctype_tolower_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #24, 20	; 0x18000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__gmon_start__@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #24, 20	; 0x18000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #24, 20	; 0x18000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #24, 20	; 0x18000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #24, 20	; 0x18000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #24, 20	; 0x18000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <strchr@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #24, 20	; 0x18000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <__errno_location@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #24, 20	; 0x18000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #24, 20	; 0x18000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <setvbuf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #24, 20	; 0x18000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #24, 20	; 0x18000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #24, 20	; 0x18000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #24, 20	; 0x18000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #24, 20	; 0x18000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #24, 20	; 0x18000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #24, 20	; 0x18000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <fcntl64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #24, 20	; 0x18000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <__overflow@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #24, 20	; 0x18000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #24, 20	; 0x18000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #24, 20	; 0x18000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #24, 20	; 0x18000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <clearerr_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #24, 20	; 0x18000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <fopen64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #24, 20	; 0x18000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #24, 20	; 0x18000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

00010fc0 <fread_unlocked@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #24, 20	; 0x18000
   10fc8:	ldr	pc, [ip, #276]!	; 0x114

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #24, 20	; 0x18000
   10fd4:	ldr	pc, [ip, #268]!	; 0x10c

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #24, 20	; 0x18000
   10fe0:	ldr	pc, [ip, #260]!	; 0x104

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #24, 20	; 0x18000
   10fec:	ldr	pc, [ip, #252]!	; 0xfc

00010ff0 <dcngettext@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #24, 20	; 0x18000
   10ff8:	ldr	pc, [ip, #244]!	; 0xf4

Disassembly of section .text:

00010ffc <.text>:
   10ffc:	mov	fp, #0
   11000:	mov	lr, #0
   11004:	pop	{r1}		; (ldr r1, [sp], #4)
   11008:	mov	r2, sp
   1100c:	push	{r2}		; (str r2, [sp, #-4]!)
   11010:	push	{r0}		; (str r0, [sp, #-4]!)
   11014:	ldr	ip, [pc, #16]	; 1102c <dcngettext@plt+0x3c>
   11018:	push	{ip}		; (str ip, [sp, #-4]!)
   1101c:	ldr	r0, [pc, #12]	; 11030 <dcngettext@plt+0x40>
   11020:	ldr	r3, [pc, #12]	; 11034 <dcngettext@plt+0x44>
   11024:	bl	10e88 <__libc_start_main@plt>
   11028:	bl	10fd8 <abort@plt>
   1102c:	andeq	r7, r1, ip, lsl r0
   11030:	andeq	r1, r1, ip, lsl #18
   11034:			; <UNDEFINED> instruction: 0x00016fbc
   11038:	ldr	r3, [pc, #20]	; 11054 <dcngettext@plt+0x64>
   1103c:	ldr	r2, [pc, #20]	; 11058 <dcngettext@plt+0x68>
   11040:	add	r3, pc, r3
   11044:	ldr	r2, [r3, r2]
   11048:	cmp	r2, #0
   1104c:	bxeq	lr
   11050:	b	10eac <__gmon_start__@plt>
   11054:			; <UNDEFINED> instruction: 0x00017fb8
   11058:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1105c:	ldr	r3, [pc, #28]	; 11080 <dcngettext@plt+0x90>
   11060:	ldr	r0, [pc, #28]	; 11084 <dcngettext@plt+0x94>
   11064:	sub	r3, r3, r0
   11068:	cmp	r3, #6
   1106c:	bxls	lr
   11070:	ldr	r3, [pc, #16]	; 11088 <dcngettext@plt+0x98>
   11074:	cmp	r3, #0
   11078:	bxeq	lr
   1107c:	bx	r3
   11080:	andeq	r9, r2, pc, asr #2
   11084:	andeq	r9, r2, ip, asr #2
   11088:	andeq	r0, r0, r0
   1108c:	ldr	r1, [pc, #36]	; 110b8 <dcngettext@plt+0xc8>
   11090:	ldr	r0, [pc, #36]	; 110bc <dcngettext@plt+0xcc>
   11094:	sub	r1, r1, r0
   11098:	asr	r1, r1, #2
   1109c:	add	r1, r1, r1, lsr #31
   110a0:	asrs	r1, r1, #1
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <dcngettext@plt+0xd0>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	r9, r2, ip, asr #2
   110bc:	andeq	r9, r2, ip, asr #2
   110c0:	andeq	r0, r0, r0
   110c4:	push	{r4, lr}
   110c8:	ldr	r4, [pc, #24]	; 110e8 <dcngettext@plt+0xf8>
   110cc:	ldrb	r3, [r4]
   110d0:	cmp	r3, #0
   110d4:	popne	{r4, pc}
   110d8:	bl	1105c <dcngettext@plt+0x6c>
   110dc:	mov	r3, #1
   110e0:	strb	r3, [r4]
   110e4:	pop	{r4, pc}
   110e8:	andeq	r9, r2, r0, ror r1
   110ec:	ldr	r0, [pc, #40]	; 1111c <dcngettext@plt+0x12c>
   110f0:	ldr	r3, [r0]
   110f4:	cmp	r3, #0
   110f8:	bne	11100 <dcngettext@plt+0x110>
   110fc:	b	1108c <dcngettext@plt+0x9c>
   11100:	ldr	r3, [pc, #24]	; 11120 <dcngettext@plt+0x130>
   11104:	cmp	r3, #0
   11108:	beq	110fc <dcngettext@plt+0x10c>
   1110c:	push	{r4, lr}
   11110:	blx	r3
   11114:	pop	{r4, lr}
   11118:	b	1108c <dcngettext@plt+0x9c>
   1111c:	andeq	r8, r2, r4, lsl pc
   11120:	andeq	r0, r0, r0
   11124:	cmp	r1, #0
   11128:	bxeq	lr
   1112c:	push	{r4, r5, r6, r7, r8, lr}
   11130:	add	lr, r0, #1
   11134:	mov	ip, r0
   11138:	mov	r3, #0
   1113c:	sub	r4, r1, #1
   11140:	mov	r8, #10
   11144:	mov	r7, #13
   11148:	mov	r6, #92	; 0x5c
   1114c:	b	11190 <dcngettext@plt+0x1a0>
   11150:	mov	r5, lr
   11154:	strb	r8, [ip]
   11158:	b	1117c <dcngettext@plt+0x18c>
   1115c:	mov	r5, lr
   11160:	strb	r7, [ip]
   11164:	b	1117c <dcngettext@plt+0x18c>
   11168:	mov	r5, lr
   1116c:	strb	r6, [ip]
   11170:	b	1117c <dcngettext@plt+0x18c>
   11174:	mov	r5, lr
   11178:	strb	r2, [ip]
   1117c:	add	r3, r3, #1
   11180:	add	lr, lr, #1
   11184:	add	ip, ip, #1
   11188:	cmp	r1, r3
   1118c:	bls	111d4 <dcngettext@plt+0x1e4>
   11190:	ldrb	r2, [r0, r3]
   11194:	cmp	r2, #0
   11198:	beq	111e8 <dcngettext@plt+0x1f8>
   1119c:	cmp	r2, #92	; 0x5c
   111a0:	bne	11174 <dcngettext@plt+0x184>
   111a4:	cmp	r4, r3
   111a8:	beq	111f0 <dcngettext@plt+0x200>
   111ac:	add	r3, r3, #1
   111b0:	ldrb	r2, [r0, r3]
   111b4:	cmp	r2, #110	; 0x6e
   111b8:	beq	11150 <dcngettext@plt+0x160>
   111bc:	cmp	r2, #114	; 0x72
   111c0:	beq	1115c <dcngettext@plt+0x16c>
   111c4:	cmp	r2, #92	; 0x5c
   111c8:	beq	11168 <dcngettext@plt+0x178>
   111cc:	mov	r0, #0
   111d0:	pop	{r4, r5, r6, r7, r8, pc}
   111d4:	add	r1, r0, r1
   111d8:	cmp	r5, r1
   111dc:	movcc	r3, #0
   111e0:	strbcc	r3, [r5]
   111e4:	pop	{r4, r5, r6, r7, r8, pc}
   111e8:	mov	r0, #0
   111ec:	pop	{r4, r5, r6, r7, r8, pc}
   111f0:	mov	r0, #0
   111f4:	pop	{r4, r5, r6, r7, r8, pc}
   111f8:	push	{r4, r5, r6, lr}
   111fc:	mov	r5, r0
   11200:	ldr	r3, [pc, #80]	; 11258 <dcngettext@plt+0x268>
   11204:	ldr	r4, [r3]
   11208:	cmp	r4, #0
   1120c:	beq	11240 <dcngettext@plt+0x250>
   11210:	bl	10ec4 <__ctype_b_loc@plt>
   11214:	ldr	r0, [r0]
   11218:	mov	r2, r5
   1121c:	add	r1, r5, r4
   11220:	ldrb	r3, [r2], #1
   11224:	lsl	r3, r3, #1
   11228:	ldrh	r3, [r0, r3]
   1122c:	tst	r3, #4096	; 0x1000
   11230:	beq	11250 <dcngettext@plt+0x260>
   11234:	mov	r5, r2
   11238:	cmp	r2, r1
   1123c:	bne	11220 <dcngettext@plt+0x230>
   11240:	ldrb	r0, [r5]
   11244:	clz	r0, r0
   11248:	lsr	r0, r0, #5
   1124c:	pop	{r4, r5, r6, pc}
   11250:	mov	r0, #0
   11254:	pop	{r4, r5, r6, pc}
   11258:	andeq	r9, r2, r4, ror r1
   1125c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11260:	mov	r4, r0
   11264:	cmp	r1, #0
   11268:	beq	11298 <dcngettext@plt+0x2a8>
   1126c:	ldrb	r1, [r0]
   11270:	cmp	r1, #0
   11274:	beq	11294 <dcngettext@plt+0x2a4>
   11278:	ldr	r5, [pc, #188]	; 1133c <dcngettext@plt+0x34c>
   1127c:	ldr	sl, [pc, #188]	; 11340 <dcngettext@plt+0x350>
   11280:	mov	r7, #2
   11284:	mov	r6, #1
   11288:	ldr	r9, [pc, #180]	; 11344 <dcngettext@plt+0x354>
   1128c:	ldr	r8, [pc, #180]	; 11348 <dcngettext@plt+0x358>
   11290:	b	112c8 <dcngettext@plt+0x2d8>
   11294:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11298:	ldr	r3, [pc, #156]	; 1133c <dcngettext@plt+0x34c>
   1129c:	ldr	r1, [r3]
   112a0:	bl	10d68 <fputs_unlocked@plt>
   112a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112a8:	ldr	r3, [r5]
   112ac:	mov	r2, r7
   112b0:	mov	r1, r6
   112b4:	mov	r0, r9
   112b8:	bl	10de0 <fwrite_unlocked@plt>
   112bc:	ldrb	r1, [r4, #1]!
   112c0:	cmp	r1, #0
   112c4:	beq	11338 <dcngettext@plt+0x348>
   112c8:	cmp	r1, #13
   112cc:	beq	11308 <dcngettext@plt+0x318>
   112d0:	cmp	r1, #92	; 0x5c
   112d4:	beq	11320 <dcngettext@plt+0x330>
   112d8:	cmp	r1, #10
   112dc:	beq	112a8 <dcngettext@plt+0x2b8>
   112e0:	ldr	r0, [r5]
   112e4:	ldr	r3, [r0, #20]
   112e8:	ldr	r2, [r0, #24]
   112ec:	cmp	r3, r2
   112f0:	addcc	r2, r3, #1
   112f4:	strcc	r2, [r0, #20]
   112f8:	strbcc	r1, [r3]
   112fc:	bcc	112bc <dcngettext@plt+0x2cc>
   11300:	bl	10f6c <__overflow@plt>
   11304:	b	112bc <dcngettext@plt+0x2cc>
   11308:	ldr	r3, [r5]
   1130c:	mov	r2, r7
   11310:	mov	r1, r6
   11314:	mov	r0, r8
   11318:	bl	10de0 <fwrite_unlocked@plt>
   1131c:	b	112bc <dcngettext@plt+0x2cc>
   11320:	ldr	r3, [r5]
   11324:	mov	r2, r7
   11328:	mov	r1, r6
   1132c:	mov	r0, sl
   11330:	bl	10de0 <fwrite_unlocked@plt>
   11334:	b	112bc <dcngettext@plt+0x2cc>
   11338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1133c:	andeq	r9, r2, ip, ror #2
   11340:	andeq	r7, r1, r4, ror #2
   11344:	andeq	r7, r1, ip, asr r1
   11348:	andeq	r7, r1, r0, ror #2
   1134c:	push	{r4, r5, r6, r7, r8, lr}
   11350:	mov	r6, r0
   11354:	mov	r4, r2
   11358:	mov	r5, r3
   1135c:	ldr	r1, [pc, #368]	; 114d4 <dcngettext@plt+0x4e4>
   11360:	bl	10d8c <strcmp@plt>
   11364:	mov	r3, #0
   11368:	strb	r3, [r5]
   1136c:	cmp	r0, r3
   11370:	bne	113cc <dcngettext@plt+0x3dc>
   11374:	mov	r2, #1
   11378:	ldr	r3, [pc, #344]	; 114d8 <dcngettext@plt+0x4e8>
   1137c:	strb	r2, [r3, #4]
   11380:	ldr	r3, [pc, #340]	; 114dc <dcngettext@plt+0x4ec>
   11384:	ldr	r5, [r3]
   11388:	mov	r1, #2
   1138c:	mov	r0, r5
   11390:	bl	13ac0 <dcngettext@plt+0x2ad0>
   11394:	mov	r1, r4
   11398:	mov	r0, r5
   1139c:	bl	12c14 <dcngettext@plt+0x1c24>
   113a0:	subs	r4, r0, #0
   113a4:	beq	113b0 <dcngettext@plt+0x3c0>
   113a8:	bl	10ef4 <__errno_location@plt>
   113ac:	ldr	r4, [r0]
   113b0:	mov	r0, r5
   113b4:	bl	10f9c <clearerr_unlocked@plt>
   113b8:	cmp	r4, #0
   113bc:	moveq	r4, #1
   113c0:	bne	11474 <dcngettext@plt+0x484>
   113c4:	mov	r0, r4
   113c8:	pop	{r4, r5, r6, r7, r8, pc}
   113cc:	ldr	r1, [pc, #268]	; 114e0 <dcngettext@plt+0x4f0>
   113d0:	mov	r0, r6
   113d4:	bl	13c00 <dcngettext@plt+0x2c10>
   113d8:	subs	r7, r0, #0
   113dc:	beq	11418 <dcngettext@plt+0x428>
   113e0:	mov	r1, #2
   113e4:	mov	r0, r7
   113e8:	bl	13ac0 <dcngettext@plt+0x2ad0>
   113ec:	mov	r1, r4
   113f0:	mov	r0, r7
   113f4:	bl	12c14 <dcngettext@plt+0x1c24>
   113f8:	cmp	r0, #0
   113fc:	bne	114a0 <dcngettext@plt+0x4b0>
   11400:	mov	r0, r7
   11404:	bl	13af4 <dcngettext@plt+0x2b04>
   11408:	cmp	r0, #0
   1140c:	bne	114c8 <dcngettext@plt+0x4d8>
   11410:	mov	r4, #1
   11414:	b	113c4 <dcngettext@plt+0x3d4>
   11418:	ldr	r3, [pc, #184]	; 114d8 <dcngettext@plt+0x4e8>
   1141c:	ldrb	r4, [r3, #5]
   11420:	cmp	r4, #0
   11424:	beq	11440 <dcngettext@plt+0x450>
   11428:	bl	10ef4 <__errno_location@plt>
   1142c:	ldr	r3, [r0]
   11430:	cmp	r3, #2
   11434:	moveq	r3, #1
   11438:	strbeq	r3, [r5]
   1143c:	beq	113c4 <dcngettext@plt+0x3d4>
   11440:	bl	10ef4 <__errno_location@plt>
   11444:	ldr	r4, [r0]
   11448:	mov	r2, r6
   1144c:	mov	r1, #3
   11450:	mov	r0, #0
   11454:	bl	15784 <dcngettext@plt+0x4794>
   11458:	mov	r3, r0
   1145c:	ldr	r2, [pc, #128]	; 114e4 <dcngettext@plt+0x4f4>
   11460:	mov	r1, r4
   11464:	mov	r0, #0
   11468:	bl	10e70 <error@plt>
   1146c:	mov	r4, #0
   11470:	b	113c4 <dcngettext@plt+0x3d4>
   11474:	mov	r2, r6
   11478:	mov	r1, #3
   1147c:	mov	r0, #0
   11480:	bl	15784 <dcngettext@plt+0x4794>
   11484:	mov	r3, r0
   11488:	ldr	r2, [pc, #84]	; 114e4 <dcngettext@plt+0x4f4>
   1148c:	mov	r1, r4
   11490:	mov	r0, #0
   11494:	bl	10e70 <error@plt>
   11498:	mov	r4, #0
   1149c:	b	113c4 <dcngettext@plt+0x3d4>
   114a0:	bl	10ef4 <__errno_location@plt>
   114a4:	ldr	r4, [r0]
   114a8:	mov	r0, r7
   114ac:	bl	13af4 <dcngettext@plt+0x2b04>
   114b0:	clz	r3, r4
   114b4:	lsr	r3, r3, #5
   114b8:	cmp	r0, #0
   114bc:	moveq	r3, #0
   114c0:	cmp	r3, #0
   114c4:	beq	113b8 <dcngettext@plt+0x3c8>
   114c8:	bl	10ef4 <__errno_location@plt>
   114cc:	ldr	r4, [r0]
   114d0:	b	113b8 <dcngettext@plt+0x3c8>
   114d4:	andeq	r7, r1, r8, ror #2
   114d8:	andeq	r9, r2, r4, ror r1
   114dc:	andeq	r9, r2, r8, ror #2
   114e0:	andeq	r7, r1, ip, ror #2
   114e4:	andeq	r7, r1, r0, lsr #27
   114e8:	push	{lr}		; (str lr, [sp, #-4]!)
   114ec:	sub	sp, sp, #60	; 0x3c
   114f0:	subs	r6, r0, #0
   114f4:	beq	11530 <dcngettext@plt+0x540>
   114f8:	ldr	r3, [pc, #916]	; 11894 <dcngettext@plt+0x8a4>
   114fc:	ldr	r4, [r3]
   11500:	mov	r2, #5
   11504:	ldr	r1, [pc, #908]	; 11898 <dcngettext@plt+0x8a8>
   11508:	mov	r0, #0
   1150c:	bl	10e04 <dcgettext@plt>
   11510:	ldr	r3, [pc, #900]	; 1189c <dcngettext@plt+0x8ac>
   11514:	ldr	r3, [r3]
   11518:	mov	r2, r0
   1151c:	mov	r1, #1
   11520:	mov	r0, r4
   11524:	bl	10f3c <__fprintf_chk@plt>
   11528:	mov	r0, r6
   1152c:	bl	10ed0 <exit@plt>
   11530:	mov	r2, #5
   11534:	ldr	r1, [pc, #868]	; 118a0 <dcngettext@plt+0x8b0>
   11538:	mov	r0, #0
   1153c:	bl	10e04 <dcgettext@plt>
   11540:	ldr	r3, [pc, #852]	; 1189c <dcngettext@plt+0x8ac>
   11544:	ldr	r2, [r3]
   11548:	mov	r1, r0
   1154c:	mov	r0, #1
   11550:	bl	10f24 <__printf_chk@plt>
   11554:	mov	r2, #5
   11558:	ldr	r1, [pc, #836]	; 118a4 <dcngettext@plt+0x8b4>
   1155c:	mov	r0, #0
   11560:	bl	10e04 <dcgettext@plt>
   11564:	mov	r3, #128	; 0x80
   11568:	ldr	r2, [pc, #824]	; 118a8 <dcngettext@plt+0x8b8>
   1156c:	mov	r1, r0
   11570:	mov	r0, #1
   11574:	bl	10f24 <__printf_chk@plt>
   11578:	mov	r2, #5
   1157c:	ldr	r1, [pc, #808]	; 118ac <dcngettext@plt+0x8bc>
   11580:	mov	r0, #0
   11584:	bl	10e04 <dcgettext@plt>
   11588:	ldr	r4, [pc, #800]	; 118b0 <dcngettext@plt+0x8c0>
   1158c:	ldr	r1, [r4]
   11590:	bl	10d68 <fputs_unlocked@plt>
   11594:	mov	r2, #5
   11598:	ldr	r1, [pc, #788]	; 118b4 <dcngettext@plt+0x8c4>
   1159c:	mov	r0, #0
   115a0:	bl	10e04 <dcgettext@plt>
   115a4:	ldr	r1, [r4]
   115a8:	bl	10d68 <fputs_unlocked@plt>
   115ac:	mov	r2, #5
   115b0:	ldr	r1, [pc, #768]	; 118b8 <dcngettext@plt+0x8c8>
   115b4:	mov	r0, #0
   115b8:	bl	10e04 <dcgettext@plt>
   115bc:	ldr	r1, [r4]
   115c0:	bl	10d68 <fputs_unlocked@plt>
   115c4:	mov	r2, #5
   115c8:	ldr	r1, [pc, #748]	; 118bc <dcngettext@plt+0x8cc>
   115cc:	mov	r0, #0
   115d0:	bl	10e04 <dcgettext@plt>
   115d4:	ldr	r1, [r4]
   115d8:	bl	10d68 <fputs_unlocked@plt>
   115dc:	mov	r2, #5
   115e0:	ldr	r1, [pc, #728]	; 118c0 <dcngettext@plt+0x8d0>
   115e4:	mov	r0, #0
   115e8:	bl	10e04 <dcgettext@plt>
   115ec:	ldr	r1, [r4]
   115f0:	bl	10d68 <fputs_unlocked@plt>
   115f4:	mov	r2, #5
   115f8:	ldr	r1, [pc, #708]	; 118c4 <dcngettext@plt+0x8d4>
   115fc:	mov	r0, #0
   11600:	bl	10e04 <dcgettext@plt>
   11604:	ldr	r1, [r4]
   11608:	bl	10d68 <fputs_unlocked@plt>
   1160c:	mov	r2, #5
   11610:	ldr	r1, [pc, #688]	; 118c8 <dcngettext@plt+0x8d8>
   11614:	mov	r0, #0
   11618:	bl	10e04 <dcgettext@plt>
   1161c:	ldr	r1, [r4]
   11620:	bl	10d68 <fputs_unlocked@plt>
   11624:	mov	r2, #5
   11628:	ldr	r1, [pc, #668]	; 118cc <dcngettext@plt+0x8dc>
   1162c:	mov	r0, #0
   11630:	bl	10e04 <dcgettext@plt>
   11634:	ldr	r1, [r4]
   11638:	bl	10d68 <fputs_unlocked@plt>
   1163c:	mov	r2, #5
   11640:	ldr	r1, [pc, #648]	; 118d0 <dcngettext@plt+0x8e0>
   11644:	mov	r0, #0
   11648:	bl	10e04 <dcgettext@plt>
   1164c:	ldr	r1, [r4]
   11650:	bl	10d68 <fputs_unlocked@plt>
   11654:	mov	r2, #5
   11658:	ldr	r1, [pc, #628]	; 118d4 <dcngettext@plt+0x8e4>
   1165c:	mov	r0, #0
   11660:	bl	10e04 <dcgettext@plt>
   11664:	ldr	r2, [pc, #620]	; 118d8 <dcngettext@plt+0x8e8>
   11668:	mov	r1, r0
   1166c:	mov	r0, #1
   11670:	bl	10f24 <__printf_chk@plt>
   11674:	mov	r2, #5
   11678:	ldr	r1, [pc, #604]	; 118dc <dcngettext@plt+0x8ec>
   1167c:	mov	r0, #0
   11680:	bl	10e04 <dcgettext@plt>
   11684:	ldr	r1, [r4]
   11688:	bl	10d68 <fputs_unlocked@plt>
   1168c:	mov	ip, sp
   11690:	ldr	lr, [pc, #584]	; 118e0 <dcngettext@plt+0x8f0>
   11694:	ldm	lr!, {r0, r1, r2, r3}
   11698:	stmia	ip!, {r0, r1, r2, r3}
   1169c:	ldm	lr!, {r0, r1, r2, r3}
   116a0:	stmia	ip!, {r0, r1, r2, r3}
   116a4:	ldm	lr!, {r0, r1, r2, r3}
   116a8:	stmia	ip!, {r0, r1, r2, r3}
   116ac:	ldm	lr, {r0, r1}
   116b0:	stm	ip, {r0, r1}
   116b4:	ldr	r1, [sp]
   116b8:	cmp	r1, #0
   116bc:	moveq	r4, sp
   116c0:	beq	116e8 <dcngettext@plt+0x6f8>
   116c4:	mov	r4, sp
   116c8:	ldr	r5, [pc, #532]	; 118e4 <dcngettext@plt+0x8f4>
   116cc:	mov	r0, r5
   116d0:	bl	10d8c <strcmp@plt>
   116d4:	cmp	r0, #0
   116d8:	beq	116e8 <dcngettext@plt+0x6f8>
   116dc:	ldr	r1, [r4, #8]!
   116e0:	cmp	r1, #0
   116e4:	bne	116cc <dcngettext@plt+0x6dc>
   116e8:	ldr	r4, [r4, #4]
   116ec:	cmp	r4, #0
   116f0:	beq	11804 <dcngettext@plt+0x814>
   116f4:	mov	r2, #5
   116f8:	ldr	r1, [pc, #488]	; 118e8 <dcngettext@plt+0x8f8>
   116fc:	mov	r0, #0
   11700:	bl	10e04 <dcgettext@plt>
   11704:	ldr	r3, [pc, #480]	; 118ec <dcngettext@plt+0x8fc>
   11708:	ldr	r2, [pc, #480]	; 118f0 <dcngettext@plt+0x900>
   1170c:	mov	r1, r0
   11710:	mov	r0, #1
   11714:	bl	10f24 <__printf_chk@plt>
   11718:	mov	r1, #0
   1171c:	mov	r0, #5
   11720:	bl	10f78 <setlocale@plt>
   11724:	cmp	r0, #0
   11728:	beq	11740 <dcngettext@plt+0x750>
   1172c:	mov	r2, #3
   11730:	ldr	r1, [pc, #444]	; 118f4 <dcngettext@plt+0x904>
   11734:	bl	10fcc <strncmp@plt>
   11738:	cmp	r0, #0
   1173c:	bne	117a0 <dcngettext@plt+0x7b0>
   11740:	mov	r2, #5
   11744:	ldr	r1, [pc, #428]	; 118f8 <dcngettext@plt+0x908>
   11748:	mov	r0, #0
   1174c:	bl	10e04 <dcgettext@plt>
   11750:	ldr	r5, [pc, #396]	; 118e4 <dcngettext@plt+0x8f4>
   11754:	mov	r3, r5
   11758:	ldr	r2, [pc, #396]	; 118ec <dcngettext@plt+0x8fc>
   1175c:	mov	r1, r0
   11760:	mov	r0, #1
   11764:	bl	10f24 <__printf_chk@plt>
   11768:	mov	r2, #5
   1176c:	ldr	r1, [pc, #392]	; 118fc <dcngettext@plt+0x90c>
   11770:	mov	r0, #0
   11774:	bl	10e04 <dcgettext@plt>
   11778:	mov	r1, r0
   1177c:	ldr	r2, [pc, #380]	; 11900 <dcngettext@plt+0x910>
   11780:	ldr	r3, [pc, #380]	; 11904 <dcngettext@plt+0x914>
   11784:	cmp	r4, r5
   11788:	movne	r3, r2
   1178c:	mov	r2, r4
   11790:	mov	r0, #1
   11794:	bl	10f24 <__printf_chk@plt>
   11798:	b	11528 <dcngettext@plt+0x538>
   1179c:	ldr	r4, [pc, #320]	; 118e4 <dcngettext@plt+0x8f4>
   117a0:	mov	r2, #5
   117a4:	ldr	r1, [pc, #348]	; 11908 <dcngettext@plt+0x918>
   117a8:	mov	r0, #0
   117ac:	bl	10e04 <dcgettext@plt>
   117b0:	ldr	r3, [pc, #248]	; 118b0 <dcngettext@plt+0x8c0>
   117b4:	ldr	r1, [r3]
   117b8:	bl	10d68 <fputs_unlocked@plt>
   117bc:	b	11740 <dcngettext@plt+0x750>
   117c0:	mov	r2, #5
   117c4:	ldr	r1, [pc, #300]	; 118f8 <dcngettext@plt+0x908>
   117c8:	mov	r0, #0
   117cc:	bl	10e04 <dcgettext@plt>
   117d0:	ldr	r4, [pc, #268]	; 118e4 <dcngettext@plt+0x8f4>
   117d4:	mov	r3, r4
   117d8:	ldr	r2, [pc, #268]	; 118ec <dcngettext@plt+0x8fc>
   117dc:	mov	r1, r0
   117e0:	mov	r0, #1
   117e4:	bl	10f24 <__printf_chk@plt>
   117e8:	mov	r2, #5
   117ec:	ldr	r1, [pc, #264]	; 118fc <dcngettext@plt+0x90c>
   117f0:	mov	r0, #0
   117f4:	bl	10e04 <dcgettext@plt>
   117f8:	mov	r1, r0
   117fc:	ldr	r3, [pc, #256]	; 11904 <dcngettext@plt+0x914>
   11800:	b	1178c <dcngettext@plt+0x79c>
   11804:	mov	r2, #5
   11808:	ldr	r1, [pc, #216]	; 118e8 <dcngettext@plt+0x8f8>
   1180c:	mov	r0, #0
   11810:	bl	10e04 <dcgettext@plt>
   11814:	ldr	r3, [pc, #208]	; 118ec <dcngettext@plt+0x8fc>
   11818:	ldr	r2, [pc, #208]	; 118f0 <dcngettext@plt+0x900>
   1181c:	mov	r1, r0
   11820:	mov	r0, #1
   11824:	bl	10f24 <__printf_chk@plt>
   11828:	mov	r1, #0
   1182c:	mov	r0, #5
   11830:	bl	10f78 <setlocale@plt>
   11834:	cmp	r0, #0
   11838:	beq	117c0 <dcngettext@plt+0x7d0>
   1183c:	mov	r2, #3
   11840:	ldr	r1, [pc, #172]	; 118f4 <dcngettext@plt+0x904>
   11844:	bl	10fcc <strncmp@plt>
   11848:	cmp	r0, #0
   1184c:	bne	1179c <dcngettext@plt+0x7ac>
   11850:	mov	r2, #5
   11854:	ldr	r1, [pc, #156]	; 118f8 <dcngettext@plt+0x908>
   11858:	mov	r0, #0
   1185c:	bl	10e04 <dcgettext@plt>
   11860:	ldr	r4, [pc, #124]	; 118e4 <dcngettext@plt+0x8f4>
   11864:	mov	r3, r4
   11868:	ldr	r2, [pc, #124]	; 118ec <dcngettext@plt+0x8fc>
   1186c:	mov	r1, r0
   11870:	mov	r0, #1
   11874:	bl	10f24 <__printf_chk@plt>
   11878:	mov	r2, #5
   1187c:	ldr	r1, [pc, #120]	; 118fc <dcngettext@plt+0x90c>
   11880:	mov	r0, #0
   11884:	bl	10e04 <dcgettext@plt>
   11888:	mov	r1, r0
   1188c:	ldr	r3, [pc, #112]	; 11904 <dcngettext@plt+0x914>
   11890:	b	1178c <dcngettext@plt+0x79c>
   11894:	andeq	r9, r2, r0, ror #2
   11898:	andeq	r7, r1, r8, ror r1
   1189c:	andeq	r9, r2, ip, lsl #3
   118a0:	andeq	r7, r1, r0, lsr #3
   118a4:	andeq	r7, r1, r4, asr #3
   118a8:	andeq	r7, r1, ip, ror #3
   118ac:	strdeq	r7, [r1], -r0
   118b0:	andeq	r9, r2, ip, ror #2
   118b4:	andeq	r7, r1, r8, lsr #4
   118b8:	andeq	r7, r1, r8, asr r2
   118bc:	andeq	r7, r1, r0, lsr #5
   118c0:	ldrdeq	r7, [r1], -r8
   118c4:	andeq	r7, r1, r0, lsl r3
   118c8:	muleq	r1, r0, r3
   118cc:	andeq	r7, r1, r8, asr #10
   118d0:	andeq	r7, r1, r8, ror r5
   118d4:			; <UNDEFINED> instruction: 0x000175b0
   118d8:	ldrdeq	r7, [r1], -ip
   118dc:	andeq	r7, r1, r8, ror #11
   118e0:	andeq	r7, r1, r4, asr #32
   118e4:	andeq	r7, r1, r0, ror r1
   118e8:	andeq	r7, r1, r8, lsr r7
   118ec:	andeq	r7, r1, r0, asr r7
   118f0:	andeq	r7, r1, r8, ror r7
   118f4:	andeq	r7, r1, r8, lsl #15
   118f8:	ldrdeq	r7, [r1], -r4
   118fc:	strdeq	r7, [r1], -r0
   11900:	andeq	r7, r1, ip, lsl #6
   11904:			; <UNDEFINED> instruction: 0x00017cb8
   11908:	andeq	r7, r1, ip, lsl #15
   1190c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11910:	sub	sp, sp, #164	; 0xa4
   11914:	mov	r5, r0
   11918:	mov	r4, r1
   1191c:	ldr	r0, [r1]
   11920:	bl	13d9c <dcngettext@plt+0x2dac>
   11924:	ldr	r1, [pc, #3992]	; 128c4 <dcngettext@plt+0x18d4>
   11928:	mov	r0, #6
   1192c:	bl	10f78 <setlocale@plt>
   11930:	ldr	r6, [pc, #3984]	; 128c8 <dcngettext@plt+0x18d8>
   11934:	ldr	r1, [pc, #3984]	; 128cc <dcngettext@plt+0x18dc>
   11938:	mov	r0, r6
   1193c:	bl	10fb4 <bindtextdomain@plt>
   11940:	mov	r0, r6
   11944:	bl	10e1c <textdomain@plt>
   11948:	ldr	r0, [pc, #3968]	; 128d0 <dcngettext@plt+0x18e0>
   1194c:	bl	17020 <dcngettext@plt+0x6030>
   11950:	mov	r3, #0
   11954:	mov	r2, #1
   11958:	mov	r1, r3
   1195c:	ldr	r0, [pc, #3952]	; 128d4 <dcngettext@plt+0x18e4>
   11960:	ldr	r0, [r0]
   11964:	bl	10f0c <setvbuf@plt>
   11968:	mov	r3, #0
   1196c:	str	r3, [sp, #32]
   11970:	mvn	sl, #0
   11974:	str	r3, [sp, #16]
   11978:	ldr	r7, [pc, #3928]	; 128d8 <dcngettext@plt+0x18e8>
   1197c:	ldr	r6, [pc, #3928]	; 128dc <dcngettext@plt+0x18ec>
   11980:	ldr	r9, [pc, #3928]	; 128e0 <dcngettext@plt+0x18f0>
   11984:	mov	r8, #1
   11988:	str	r8, [sp, #20]
   1198c:	ldr	fp, [pc, #3920]	; 128e4 <dcngettext@plt+0x18f4>
   11990:	mov	r3, #0
   11994:	str	r3, [sp]
   11998:	mov	r3, r7
   1199c:	mov	r2, r6
   119a0:	mov	r1, r4
   119a4:	mov	r0, r5
   119a8:	bl	10eb8 <getopt_long@plt>
   119ac:	cmn	r0, #1
   119b0:	beq	11af4 <dcngettext@plt+0xb04>
   119b4:	cmp	r0, #119	; 0x77
   119b8:	beq	11a64 <dcngettext@plt+0xa74>
   119bc:	ble	119f4 <dcngettext@plt+0xa04>
   119c0:	ldr	r3, [pc, #3872]	; 128e8 <dcngettext@plt+0x18f8>
   119c4:	cmp	r0, r3
   119c8:	beq	11a50 <dcngettext@plt+0xa60>
   119cc:	ble	11a30 <dcngettext@plt+0xa40>
   119d0:	ldr	r3, [pc, #3860]	; 128ec <dcngettext@plt+0x18fc>
   119d4:	cmp	r0, r3
   119d8:	beq	11a8c <dcngettext@plt+0xa9c>
   119dc:	blt	11a78 <dcngettext@plt+0xa88>
   119e0:	cmp	r0, #260	; 0x104
   119e4:	bne	11ae4 <dcngettext@plt+0xaf4>
   119e8:	str	r8, [sp, #32]
   119ec:	ldr	sl, [sp, #20]
   119f0:	b	11990 <dcngettext@plt+0x9a0>
   119f4:	cmp	r0, #98	; 0x62
   119f8:	beq	11a48 <dcngettext@plt+0xa58>
   119fc:	bgt	11a18 <dcngettext@plt+0xa28>
   11a00:	cmn	r0, #3
   11a04:	beq	11aa0 <dcngettext@plt+0xab0>
   11a08:	cmn	r0, #2
   11a0c:	bne	11ae4 <dcngettext@plt+0xaf4>
   11a10:	mov	r0, #0
   11a14:	bl	114e8 <dcngettext@plt+0x4f8>
   11a18:	cmp	r0, #99	; 0x63
   11a1c:	beq	11aec <dcngettext@plt+0xafc>
   11a20:	cmp	r0, #116	; 0x74
   11a24:	bne	11ae4 <dcngettext@plt+0xaf4>
   11a28:	mov	sl, #0
   11a2c:	b	11990 <dcngettext@plt+0x9a0>
   11a30:	cmp	r0, #122	; 0x7a
   11a34:	beq	11a94 <dcngettext@plt+0xaa4>
   11a38:	cmp	r0, #256	; 0x100
   11a3c:	bne	11ae4 <dcngettext@plt+0xaf4>
   11a40:	strb	r8, [r9, #5]
   11a44:	b	11990 <dcngettext@plt+0x9a0>
   11a48:	mov	sl, r8
   11a4c:	b	11990 <dcngettext@plt+0x9a0>
   11a50:	strb	r8, [r9, #6]
   11a54:	mov	r3, #0
   11a58:	strb	r3, [r9, #7]
   11a5c:	strb	r3, [r9, #8]
   11a60:	b	11990 <dcngettext@plt+0x9a0>
   11a64:	mov	r3, #0
   11a68:	strb	r3, [r9, #6]
   11a6c:	strb	r8, [r9, #7]
   11a70:	strb	r3, [r9, #8]
   11a74:	b	11990 <dcngettext@plt+0x9a0>
   11a78:	mov	r3, #0
   11a7c:	strb	r3, [r9, #6]
   11a80:	strb	r3, [r9, #7]
   11a84:	strb	r8, [r9, #8]
   11a88:	b	11990 <dcngettext@plt+0x9a0>
   11a8c:	strb	r8, [r9, #9]
   11a90:	b	11990 <dcngettext@plt+0x9a0>
   11a94:	mov	r3, #0
   11a98:	strb	r3, [fp]
   11a9c:	b	11990 <dcngettext@plt+0x9a0>
   11aa0:	mov	r4, #0
   11aa4:	str	r4, [sp, #12]
   11aa8:	ldr	r3, [pc, #3648]	; 128f0 <dcngettext@plt+0x1900>
   11aac:	str	r3, [sp, #8]
   11ab0:	ldr	r3, [pc, #3644]	; 128f4 <dcngettext@plt+0x1904>
   11ab4:	str	r3, [sp, #4]
   11ab8:	ldr	r3, [pc, #3640]	; 128f8 <dcngettext@plt+0x1908>
   11abc:	str	r3, [sp]
   11ac0:	ldr	r3, [pc, #3636]	; 128fc <dcngettext@plt+0x190c>
   11ac4:	ldr	r3, [r3]
   11ac8:	ldr	r2, [pc, #3632]	; 12900 <dcngettext@plt+0x1910>
   11acc:	ldr	r1, [pc, #3632]	; 12904 <dcngettext@plt+0x1914>
   11ad0:	ldr	r0, [pc, #3580]	; 128d4 <dcngettext@plt+0x18e4>
   11ad4:	ldr	r0, [r0]
   11ad8:	bl	15dcc <dcngettext@plt+0x4ddc>
   11adc:	mov	r0, r4
   11ae0:	bl	10ed0 <exit@plt>
   11ae4:	mov	r0, #1
   11ae8:	bl	114e8 <dcngettext@plt+0x4f8>
   11aec:	str	r8, [sp, #16]
   11af0:	b	11990 <dcngettext@plt+0x9a0>
   11af4:	ldr	r3, [pc, #3556]	; 128e0 <dcngettext@plt+0x18f0>
   11af8:	mov	r2, #34	; 0x22
   11afc:	str	r2, [r3, #12]
   11b00:	mov	r2, #32
   11b04:	str	r2, [r3]
   11b08:	ldr	r3, [sp, #32]
   11b0c:	cmp	sl, #0
   11b10:	movne	r3, #0
   11b14:	andeq	r3, r3, #1
   11b18:	cmp	r3, #0
   11b1c:	bne	11c38 <dcngettext@plt+0xc48>
   11b20:	ldr	r3, [pc, #3516]	; 128e4 <dcngettext@plt+0x18f4>
   11b24:	ldrb	r3, [r3]
   11b28:	ldr	r2, [sp, #16]
   11b2c:	cmp	r3, #10
   11b30:	moveq	r2, #0
   11b34:	andne	r2, r2, #1
   11b38:	cmp	r2, #0
   11b3c:	bne	11c60 <dcngettext@plt+0xc70>
   11b40:	ldr	r3, [sp, #16]
   11b44:	ldr	r2, [sp, #32]
   11b48:	tst	r3, r2
   11b4c:	bne	11c88 <dcngettext@plt+0xc98>
   11b50:	ldr	r3, [sp, #16]
   11b54:	cmp	sl, #0
   11b58:	movlt	r3, #0
   11b5c:	andge	r3, r3, #1
   11b60:	cmp	r3, #0
   11b64:	bne	11cb0 <dcngettext@plt+0xcc0>
   11b68:	ldr	r3, [pc, #3440]	; 128e0 <dcngettext@plt+0x18f0>
   11b6c:	ldrb	r3, [r3, #5]
   11b70:	eor	r3, r3, #1
   11b74:	ldr	r2, [sp, #16]
   11b78:	orrs	r3, r2, r3
   11b7c:	beq	11cd8 <dcngettext@plt+0xce8>
   11b80:	ldr	r3, [pc, #3416]	; 128e0 <dcngettext@plt+0x18f0>
   11b84:	ldrb	r3, [r3, #6]
   11b88:	eor	r3, r3, #1
   11b8c:	ldr	r2, [sp, #16]
   11b90:	orrs	r3, r2, r3
   11b94:	beq	11d00 <dcngettext@plt+0xd10>
   11b98:	ldr	r3, [pc, #3392]	; 128e0 <dcngettext@plt+0x18f0>
   11b9c:	ldrb	r3, [r3, #7]
   11ba0:	eor	r3, r3, #1
   11ba4:	ldr	r2, [sp, #16]
   11ba8:	orrs	r3, r2, r3
   11bac:	beq	11d28 <dcngettext@plt+0xd38>
   11bb0:	ldr	r3, [pc, #3368]	; 128e0 <dcngettext@plt+0x18f0>
   11bb4:	ldrb	r3, [r3, #8]
   11bb8:	eor	r3, r3, #1
   11bbc:	ldr	r2, [sp, #16]
   11bc0:	orrs	r3, r2, r3
   11bc4:	str	r3, [sp, #40]	; 0x28
   11bc8:	beq	11d50 <dcngettext@plt+0xd60>
   11bcc:	ldr	r3, [sp, #16]
   11bd0:	eor	r3, r3, #1
   11bd4:	ldr	r2, [pc, #3332]	; 128e0 <dcngettext@plt+0x18f0>
   11bd8:	ldrb	r2, [r2, #9]
   11bdc:	ands	r3, r2, r3
   11be0:	str	r3, [sp, #36]	; 0x24
   11be4:	bne	11d78 <dcngettext@plt+0xd88>
   11be8:	bic	r3, sl, sl, asr #31
   11bec:	str	r3, [sp, #92]	; 0x5c
   11bf0:	add	r3, r4, r5, lsl #2
   11bf4:	str	r3, [sp, #56]	; 0x38
   11bf8:	ldr	r3, [pc, #3336]	; 12908 <dcngettext@plt+0x1918>
   11bfc:	ldr	r3, [r3]
   11c00:	cmp	r5, r3
   11c04:	ldreq	r3, [pc, #3328]	; 1290c <dcngettext@plt+0x191c>
   11c08:	streq	r3, [r4, r5, lsl #2]
   11c0c:	ldreq	r3, [sp, #56]	; 0x38
   11c10:	addeq	r3, r3, #4
   11c14:	streq	r3, [sp, #56]	; 0x38
   11c18:	ldr	r3, [pc, #3304]	; 12908 <dcngettext@plt+0x1918>
   11c1c:	ldr	r3, [r3]
   11c20:	add	r3, r4, r3, lsl #2
   11c24:	str	r3, [sp, #20]
   11c28:	ldr	fp, [pc, #3248]	; 128e0 <dcngettext@plt+0x18f0>
   11c2c:	add	r3, sp, #120	; 0x78
   11c30:	str	r3, [sp, #84]	; 0x54
   11c34:	b	12714 <dcngettext@plt+0x1724>
   11c38:	mov	r2, #5
   11c3c:	ldr	r1, [pc, #3276]	; 12910 <dcngettext@plt+0x1920>
   11c40:	mov	r0, #0
   11c44:	bl	10e04 <dcgettext@plt>
   11c48:	mov	r2, r0
   11c4c:	mov	r1, #0
   11c50:	mov	r0, r1
   11c54:	bl	10e70 <error@plt>
   11c58:	mov	r0, #1
   11c5c:	bl	114e8 <dcngettext@plt+0x4f8>
   11c60:	mov	r2, #5
   11c64:	ldr	r1, [pc, #3240]	; 12914 <dcngettext@plt+0x1924>
   11c68:	mov	r0, #0
   11c6c:	bl	10e04 <dcgettext@plt>
   11c70:	mov	r2, r0
   11c74:	mov	r1, #0
   11c78:	mov	r0, r1
   11c7c:	bl	10e70 <error@plt>
   11c80:	mov	r0, #1
   11c84:	bl	114e8 <dcngettext@plt+0x4f8>
   11c88:	mov	r2, #5
   11c8c:	ldr	r1, [pc, #3204]	; 12918 <dcngettext@plt+0x1928>
   11c90:	mov	r0, #0
   11c94:	bl	10e04 <dcgettext@plt>
   11c98:	mov	r2, r0
   11c9c:	mov	r1, #0
   11ca0:	mov	r0, r1
   11ca4:	bl	10e70 <error@plt>
   11ca8:	mov	r0, #1
   11cac:	bl	114e8 <dcngettext@plt+0x4f8>
   11cb0:	mov	r2, #5
   11cb4:	ldr	r1, [pc, #3168]	; 1291c <dcngettext@plt+0x192c>
   11cb8:	mov	r0, #0
   11cbc:	bl	10e04 <dcgettext@plt>
   11cc0:	mov	r2, r0
   11cc4:	mov	r1, #0
   11cc8:	mov	r0, r1
   11ccc:	bl	10e70 <error@plt>
   11cd0:	mov	r0, #1
   11cd4:	bl	114e8 <dcngettext@plt+0x4f8>
   11cd8:	mov	r2, #5
   11cdc:	ldr	r1, [pc, #3132]	; 12920 <dcngettext@plt+0x1930>
   11ce0:	mov	r0, #0
   11ce4:	bl	10e04 <dcgettext@plt>
   11ce8:	mov	r2, r0
   11cec:	mov	r1, #0
   11cf0:	mov	r0, r1
   11cf4:	bl	10e70 <error@plt>
   11cf8:	mov	r0, #1
   11cfc:	bl	114e8 <dcngettext@plt+0x4f8>
   11d00:	mov	r2, #5
   11d04:	ldr	r1, [pc, #3096]	; 12924 <dcngettext@plt+0x1934>
   11d08:	mov	r0, #0
   11d0c:	bl	10e04 <dcgettext@plt>
   11d10:	mov	r2, r0
   11d14:	mov	r1, #0
   11d18:	mov	r0, r1
   11d1c:	bl	10e70 <error@plt>
   11d20:	mov	r0, #1
   11d24:	bl	114e8 <dcngettext@plt+0x4f8>
   11d28:	mov	r2, #5
   11d2c:	ldr	r1, [pc, #3060]	; 12928 <dcngettext@plt+0x1938>
   11d30:	mov	r0, #0
   11d34:	bl	10e04 <dcgettext@plt>
   11d38:	mov	r2, r0
   11d3c:	mov	r1, #0
   11d40:	mov	r0, r1
   11d44:	bl	10e70 <error@plt>
   11d48:	mov	r0, #1
   11d4c:	bl	114e8 <dcngettext@plt+0x4f8>
   11d50:	mov	r2, #5
   11d54:	ldr	r1, [pc, #3024]	; 1292c <dcngettext@plt+0x193c>
   11d58:	mov	r0, #0
   11d5c:	bl	10e04 <dcgettext@plt>
   11d60:	mov	r2, r0
   11d64:	mov	r1, #0
   11d68:	mov	r0, r1
   11d6c:	bl	10e70 <error@plt>
   11d70:	mov	r0, #1
   11d74:	bl	114e8 <dcngettext@plt+0x4f8>
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #2988]	; 12930 <dcngettext@plt+0x1940>
   11d80:	mov	r0, #0
   11d84:	bl	10e04 <dcgettext@plt>
   11d88:	mov	r2, r0
   11d8c:	mov	r1, #0
   11d90:	mov	r0, r1
   11d94:	bl	10e70 <error@plt>
   11d98:	mov	r0, #1
   11d9c:	bl	114e8 <dcngettext@plt+0x4f8>
   11da0:	ldr	r1, [pc, #2956]	; 12934 <dcngettext@plt+0x1944>
   11da4:	mov	r0, r6
   11da8:	bl	13c00 <dcngettext@plt+0x2c10>
   11dac:	subs	r7, r0, #0
   11db0:	strne	r6, [sp, #60]	; 0x3c
   11db4:	bne	12774 <dcngettext@plt+0x1784>
   11db8:	bl	10ef4 <__errno_location@plt>
   11dbc:	ldr	r4, [r0]
   11dc0:	mov	r2, r6
   11dc4:	mov	r1, #3
   11dc8:	mov	r0, #0
   11dcc:	bl	15784 <dcngettext@plt+0x4794>
   11dd0:	mov	r3, r0
   11dd4:	ldr	r2, [pc, #2908]	; 12938 <dcngettext@plt+0x1948>
   11dd8:	mov	r1, r4
   11ddc:	mov	r0, #0
   11de0:	bl	10e70 <error@plt>
   11de4:	ldr	r3, [sp, #36]	; 0x24
   11de8:	b	12450 <dcngettext@plt+0x1460>
   11dec:	mov	r2, #5
   11df0:	ldr	r1, [pc, #2884]	; 1293c <dcngettext@plt+0x194c>
   11df4:	mov	r0, #0
   11df8:	bl	10e04 <dcgettext@plt>
   11dfc:	mov	r4, r0
   11e00:	ldr	r2, [sp, #60]	; 0x3c
   11e04:	mov	r1, #3
   11e08:	mov	r0, #0
   11e0c:	bl	15784 <dcngettext@plt+0x4794>
   11e10:	mov	r3, r0
   11e14:	mov	r2, r4
   11e18:	mov	r1, #0
   11e1c:	mov	r0, #1
   11e20:	bl	10e70 <error@plt>
   11e24:	mov	sl, #0
   11e28:	b	12028 <dcngettext@plt+0x1038>
   11e2c:	ldrb	r3, [r6, r3]
   11e30:	cmp	r3, #41	; 0x29
   11e34:	bne	11f5c <dcngettext@plt+0xf6c>
   11e38:	ldr	r5, [sp, #48]	; 0x30
   11e3c:	b	12ae0 <dcngettext@plt+0x1af0>
   11e40:	mov	r1, r4
   11e44:	ldr	r0, [sp, #48]	; 0x30
   11e48:	bl	11124 <dcngettext@plt+0x134>
   11e4c:	cmp	r0, #0
   11e50:	bne	12aec <dcngettext@plt+0x1afc>
   11e54:	b	11f5c <dcngettext@plt+0xf6c>
   11e58:	add	r4, r4, #1
   11e5c:	ldrb	r3, [r2, r4]
   11e60:	cmp	r3, #9
   11e64:	cmpne	r3, #32
   11e68:	beq	11e58 <dcngettext@plt+0xe68>
   11e6c:	cmp	r3, #61	; 0x3d
   11e70:	bne	11f5c <dcngettext@plt+0xf6c>
   11e74:	add	r4, r4, #1
   11e78:	ldr	r3, [sp, #48]	; 0x30
   11e7c:	add	r3, r3, r4
   11e80:	mov	r5, r3
   11e84:	ldrb	r2, [r3], #1
   11e88:	cmp	r2, #9
   11e8c:	cmpne	r2, #32
   11e90:	beq	11e80 <dcngettext@plt+0xe90>
   11e94:	mov	r0, r5
   11e98:	bl	111f8 <dcngettext@plt+0x208>
   11e9c:	b	120fc <dcngettext@plt+0x110c>
   11ea0:	sub	r2, r4, sl
   11ea4:	ldrb	r1, [r6, sl]
   11ea8:	ldr	r3, [fp, #12]
   11eac:	cmp	r1, #92	; 0x5c
   11eb0:	addeq	r3, r3, #1
   11eb4:	cmp	r2, r3
   11eb8:	bcc	11f5c <dcngettext@plt+0xf6c>
   11ebc:	ldr	r3, [fp]
   11ec0:	add	sl, sl, r3
   11ec4:	ldrb	r3, [r6, sl]
   11ec8:	cmp	r3, #32
   11ecc:	cmpne	r3, #9
   11ed0:	bne	11f5c <dcngettext@plt+0xf6c>
   11ed4:	mov	r3, #0
   11ed8:	strb	r3, [r6, sl]
   11edc:	mov	r0, r5
   11ee0:	bl	111f8 <dcngettext@plt+0x208>
   11ee4:	cmp	r0, #0
   11ee8:	beq	11f5c <dcngettext@plt+0xf6c>
   11eec:	add	r1, sl, #1
   11ef0:	sub	r3, r4, r1
   11ef4:	cmp	r3, #1
   11ef8:	beq	11f0c <dcngettext@plt+0xf1c>
   11efc:	ldrb	r3, [r6, r1]
   11f00:	cmp	r3, #32
   11f04:	cmpne	r3, #42	; 0x2a
   11f08:	beq	120b4 <dcngettext@plt+0x10c4>
   11f0c:	ldr	r3, [pc, #2512]	; 128e4 <dcngettext@plt+0x18f4>
   11f10:	ldr	r3, [r3, #4]
   11f14:	cmp	r3, #0
   11f18:	beq	11f5c <dcngettext@plt+0xf6c>
   11f1c:	mov	r2, #1
   11f20:	ldr	r3, [pc, #2492]	; 128e4 <dcngettext@plt+0x18f4>
   11f24:	str	r2, [r3, #4]
   11f28:	add	r3, r6, r1
   11f2c:	str	r3, [sp, #48]	; 0x30
   11f30:	ldr	r3, [sp, #52]	; 0x34
   11f34:	cmp	r3, #0
   11f38:	bne	120e8 <dcngettext@plt+0x10f8>
   11f3c:	ldr	r3, [sp, #44]	; 0x2c
   11f40:	cmp	r3, #0
   11f44:	bne	12150 <dcngettext@plt+0x1160>
   11f48:	ldr	r1, [pc, #2492]	; 1290c <dcngettext@plt+0x191c>
   11f4c:	ldr	r0, [sp, #48]	; 0x30
   11f50:	bl	10d8c <strcmp@plt>
   11f54:	cmp	r0, #0
   11f58:	bne	12150 <dcngettext@plt+0x1160>
   11f5c:	ldrd	r2, [sp, #24]
   11f60:	adds	r2, r2, #1
   11f64:	adc	r3, r3, #0
   11f68:	strd	r2, [sp, #24]
   11f6c:	ldrb	r3, [fp, #7]
   11f70:	cmp	r3, #0
   11f74:	bne	12108 <dcngettext@plt+0x1118>
   11f78:	ldr	r3, [r7]
   11f7c:	tst	r3, #48	; 0x30
   11f80:	bne	123ec <dcngettext@plt+0x13fc>
   11f84:	adds	r8, r8, #1
   11f88:	adc	r9, r9, #0
   11f8c:	orrs	r3, r8, r9
   11f90:	beq	11dec <dcngettext@plt+0xdfc>
   11f94:	mov	r3, r7
   11f98:	mov	r2, #10
   11f9c:	add	r1, sp, #104	; 0x68
   11fa0:	add	r0, sp, #100	; 0x64
   11fa4:	bl	10d80 <__getdelim@plt>
   11fa8:	subs	r4, r0, #0
   11fac:	ble	123ec <dcngettext@plt+0x13fc>
   11fb0:	ldr	r3, [sp, #100]	; 0x64
   11fb4:	ldrb	r2, [r3]
   11fb8:	cmp	r2, #35	; 0x23
   11fbc:	beq	11f78 <dcngettext@plt+0xf88>
   11fc0:	add	r2, r3, r4
   11fc4:	ldrb	r0, [r2, #-1]
   11fc8:	cmp	r0, #10
   11fcc:	subeq	r4, r4, #1
   11fd0:	cmp	r4, #0
   11fd4:	movle	r2, r4
   11fd8:	subgt	r2, r4, #1
   11fdc:	ldrb	r0, [r3, r2]
   11fe0:	cmp	r0, #13
   11fe4:	subeq	r4, r4, #1
   11fe8:	cmp	r4, #0
   11fec:	beq	11f78 <dcngettext@plt+0xf88>
   11ff0:	mov	r2, #0
   11ff4:	strb	r2, [r3, r4]
   11ff8:	ldr	r6, [sp, #100]	; 0x64
   11ffc:	ldrb	r3, [r6]
   12000:	cmp	r3, #9
   12004:	cmpne	r3, #32
   12008:	bne	11e24 <dcngettext@plt+0xe34>
   1200c:	mov	r2, r6
   12010:	mov	sl, #0
   12014:	add	sl, sl, #1
   12018:	ldrb	r3, [r2, #1]!
   1201c:	cmp	r3, #9
   12020:	cmpne	r3, #32
   12024:	beq	12014 <dcngettext@plt+0x1024>
   12028:	cmp	r3, #92	; 0x5c
   1202c:	addeq	sl, sl, #1
   12030:	ldreq	r3, [sp, #16]
   12034:	ldrne	r3, [sp, #36]	; 0x24
   12038:	str	r3, [sp, #52]	; 0x34
   1203c:	add	r5, r6, sl
   12040:	mov	r2, #3
   12044:	ldr	r1, [pc, #2360]	; 12984 <dcngettext@plt+0x1994>
   12048:	mov	r0, r5
   1204c:	bl	10fcc <strncmp@plt>
   12050:	cmp	r0, #0
   12054:	bne	11ea0 <dcngettext@plt+0xeb0>
   12058:	add	r3, sl, #3
   1205c:	ldrb	r2, [r6, r3]
   12060:	cmp	r2, #32
   12064:	addeq	r3, sl, #4
   12068:	ldrb	r2, [r6, r3]
   1206c:	cmp	r2, #40	; 0x28
   12070:	bne	11f5c <dcngettext@plt+0xf6c>
   12074:	add	r3, r3, #1
   12078:	mov	r2, #0
   1207c:	str	r2, [sp, #108]	; 0x6c
   12080:	subs	r4, r4, r3
   12084:	beq	11f5c <dcngettext@plt+0xf6c>
   12088:	add	r2, r6, r3
   1208c:	str	r2, [sp, #48]	; 0x30
   12090:	sub	r4, r4, #1
   12094:	mov	r1, r2
   12098:	cmp	r4, #0
   1209c:	beq	11e2c <dcngettext@plt+0xe3c>
   120a0:	ldrb	r2, [r1, r4]
   120a4:	cmp	r2, #41	; 0x29
   120a8:	beq	12ad8 <dcngettext@plt+0x1ae8>
   120ac:	sub	r4, r4, #1
   120b0:	b	12098 <dcngettext@plt+0x10a8>
   120b4:	ldr	r2, [pc, #2088]	; 128e4 <dcngettext@plt+0x18f4>
   120b8:	ldr	r2, [r2, #4]
   120bc:	cmp	r2, #1
   120c0:	beq	11f28 <dcngettext@plt+0xf38>
   120c4:	mov	r1, #0
   120c8:	ldr	r2, [pc, #2068]	; 128e4 <dcngettext@plt+0x18f4>
   120cc:	str	r1, [r2, #4]
   120d0:	add	r1, sl, #2
   120d4:	cmp	r3, #42	; 0x2a
   120d8:	movne	r3, #0
   120dc:	moveq	r3, #1
   120e0:	str	r3, [sp, #108]	; 0x6c
   120e4:	b	11f28 <dcngettext@plt+0xf38>
   120e8:	sub	r1, r4, r1
   120ec:	ldr	r0, [sp, #48]	; 0x30
   120f0:	bl	11124 <dcngettext@plt+0x134>
   120f4:	adds	r0, r0, #0
   120f8:	movne	r0, #1
   120fc:	cmp	r0, #0
   12100:	bne	11f3c <dcngettext@plt+0xf4c>
   12104:	b	11f5c <dcngettext@plt+0xf6c>
   12108:	mov	r2, #5
   1210c:	ldr	r1, [pc, #2092]	; 12940 <dcngettext@plt+0x1950>
   12110:	mov	r0, #0
   12114:	bl	10e04 <dcgettext@plt>
   12118:	mov	r4, r0
   1211c:	ldr	r2, [sp, #60]	; 0x3c
   12120:	mov	r1, #3
   12124:	mov	r0, #0
   12128:	bl	15784 <dcngettext@plt+0x4794>
   1212c:	ldr	r3, [pc, #2128]	; 12984 <dcngettext@plt+0x1994>
   12130:	str	r3, [sp, #8]
   12134:	strd	r8, [sp]
   12138:	mov	r3, r0
   1213c:	mov	r2, r4
   12140:	mov	r1, #0
   12144:	mov	r0, r1
   12148:	bl	10e70 <error@plt>
   1214c:	b	11f78 <dcngettext@plt+0xf88>
   12150:	ldrb	r3, [fp, #6]
   12154:	cmp	r3, #0
   12158:	ldrne	r0, [sp, #36]	; 0x24
   1215c:	bne	12174 <dcngettext@plt+0x1184>
   12160:	mov	r1, #10
   12164:	ldr	r0, [sp, #48]	; 0x30
   12168:	bl	10ee8 <strchr@plt>
   1216c:	adds	r0, r0, #0
   12170:	movne	r0, #1
   12174:	and	r3, r0, #1
   12178:	mov	r4, r3
   1217c:	str	r3, [sp, #52]	; 0x34
   12180:	add	r3, sp, #112	; 0x70
   12184:	str	r3, [sp]
   12188:	add	r3, sp, #99	; 0x63
   1218c:	ldr	r2, [sp, #84]	; 0x54
   12190:	add	r1, sp, #108	; 0x6c
   12194:	ldr	r0, [sp, #48]	; 0x30
   12198:	bl	1134c <dcngettext@plt+0x35c>
   1219c:	subs	r3, r0, #0
   121a0:	str	r3, [sp, #80]	; 0x50
   121a4:	bne	12238 <dcngettext@plt+0x1248>
   121a8:	ldrd	r2, [sp, #64]	; 0x40
   121ac:	adds	r2, r2, #1
   121b0:	adc	r3, r3, #0
   121b4:	strd	r2, [sp, #64]	; 0x40
   121b8:	ldrb	r3, [fp, #6]
   121bc:	cmp	r3, #0
   121c0:	bne	12220 <dcngettext@plt+0x1230>
   121c4:	cmp	r4, #0
   121c8:	beq	121f4 <dcngettext@plt+0x1204>
   121cc:	ldr	r3, [pc, #1792]	; 128d4 <dcngettext@plt+0x18e4>
   121d0:	ldr	r0, [r3]
   121d4:	ldr	r3, [r0, #20]
   121d8:	ldr	r2, [r0, #24]
   121dc:	cmp	r3, r2
   121e0:	addcc	r2, r3, #1
   121e4:	strcc	r2, [r0, #20]
   121e8:	movcc	r2, #92	; 0x5c
   121ec:	strbcc	r2, [r3]
   121f0:	bcs	1222c <dcngettext@plt+0x123c>
   121f4:	ldr	r1, [sp, #52]	; 0x34
   121f8:	ldr	r0, [sp, #48]	; 0x30
   121fc:	bl	1125c <dcngettext@plt+0x26c>
   12200:	mov	r2, #5
   12204:	ldr	r1, [pc, #1848]	; 12944 <dcngettext@plt+0x1954>
   12208:	mov	r0, #0
   1220c:	bl	10e04 <dcgettext@plt>
   12210:	mov	r2, r0
   12214:	ldr	r1, [pc, #1836]	; 12948 <dcngettext@plt+0x1958>
   12218:	mov	r0, #1
   1221c:	bl	10f24 <__printf_chk@plt>
   12220:	ldr	r3, [sp, #16]
   12224:	str	r3, [sp, #80]	; 0x50
   12228:	b	11f78 <dcngettext@plt+0xf88>
   1222c:	mov	r1, #92	; 0x5c
   12230:	bl	10f6c <__overflow@plt>
   12234:	b	121f4 <dcngettext@plt+0x1204>
   12238:	ldrb	r3, [fp, #5]
   1223c:	cmp	r3, #0
   12240:	beq	12250 <dcngettext@plt+0x1260>
   12244:	ldrb	r3, [sp, #99]	; 0x63
   12248:	cmp	r3, #0
   1224c:	bne	12220 <dcngettext@plt+0x1230>
   12250:	ldr	r6, [fp]
   12254:	lsrs	r6, r6, #1
   12258:	beq	123c8 <dcngettext@plt+0x13d8>
   1225c:	bl	10ea0 <__ctype_tolower_loc@plt>
   12260:	ldr	ip, [r0]
   12264:	mov	r2, r5
   12268:	ldr	r3, [sp, #84]	; 0x54
   1226c:	sub	r1, r3, #1
   12270:	mov	r4, #0
   12274:	ldr	r0, [pc, #1744]	; 1294c <dcngettext@plt+0x195c>
   12278:	ldrb	r3, [r1, #1]!
   1227c:	ldrb	sl, [r5, r4, lsl #1]
   12280:	add	lr, r0, r3, lsr #4
   12284:	ldrb	lr, [lr, #264]	; 0x108
   12288:	ldr	sl, [ip, sl, lsl #2]
   1228c:	cmp	sl, lr
   12290:	bne	12368 <dcngettext@plt+0x1378>
   12294:	ldrb	lr, [r2, #1]
   12298:	and	r3, r3, #15
   1229c:	add	r3, r0, r3
   122a0:	ldrb	r3, [r3, #264]	; 0x108
   122a4:	ldr	lr, [ip, lr, lsl #2]
   122a8:	cmp	lr, r3
   122ac:	bne	12368 <dcngettext@plt+0x1378>
   122b0:	add	r4, r4, #1
   122b4:	add	r2, r2, #2
   122b8:	cmp	r6, r4
   122bc:	bne	12278 <dcngettext@plt+0x1288>
   122c0:	ldrb	r3, [fp, #6]
   122c4:	str	r3, [sp, #88]	; 0x58
   122c8:	cmp	r3, #0
   122cc:	moveq	r4, r6
   122d0:	bne	12220 <dcngettext@plt+0x1230>
   122d4:	ldrb	r3, [fp, #8]
   122d8:	str	r3, [sp, #88]	; 0x58
   122dc:	cmp	r3, #0
   122e0:	bne	12220 <dcngettext@plt+0x1230>
   122e4:	ldr	r3, [sp, #52]	; 0x34
   122e8:	cmp	r3, #0
   122ec:	ldreq	r3, [sp, #80]	; 0x50
   122f0:	streq	r3, [sp, #88]	; 0x58
   122f4:	beq	12324 <dcngettext@plt+0x1334>
   122f8:	str	r3, [sp, #88]	; 0x58
   122fc:	ldr	r3, [pc, #1488]	; 128d4 <dcngettext@plt+0x18e4>
   12300:	ldr	r0, [r3]
   12304:	ldr	r3, [r0, #20]
   12308:	ldr	r2, [r0, #24]
   1230c:	cmp	r3, r2
   12310:	addcc	r2, r3, #1
   12314:	strcc	r2, [r0, #20]
   12318:	movcc	r2, #92	; 0x5c
   1231c:	strbcc	r2, [r3]
   12320:	bcs	123e0 <dcngettext@plt+0x13f0>
   12324:	ldr	r1, [sp, #52]	; 0x34
   12328:	ldr	r0, [sp, #48]	; 0x30
   1232c:	bl	1125c <dcngettext@plt+0x26c>
   12330:	cmp	r6, r4
   12334:	bne	123a4 <dcngettext@plt+0x13b4>
   12338:	ldrb	r3, [fp, #8]
   1233c:	cmp	r3, #0
   12340:	bne	12220 <dcngettext@plt+0x1230>
   12344:	mov	r2, #5
   12348:	ldr	r1, [pc, #1536]	; 12950 <dcngettext@plt+0x1960>
   1234c:	mov	r0, #0
   12350:	bl	10e04 <dcgettext@plt>
   12354:	mov	r2, r0
   12358:	ldr	r1, [pc, #1512]	; 12948 <dcngettext@plt+0x1958>
   1235c:	mov	r0, #1
   12360:	bl	10f24 <__printf_chk@plt>
   12364:	b	12220 <dcngettext@plt+0x1230>
   12368:	cmp	r6, r4
   1236c:	beq	122c0 <dcngettext@plt+0x12d0>
   12370:	ldrd	r2, [sp, #72]	; 0x48
   12374:	adds	r2, r2, #1
   12378:	adc	r3, r3, #0
   1237c:	strd	r2, [sp, #72]	; 0x48
   12380:	ldrb	r3, [fp, #6]
   12384:	cmp	r3, #0
   12388:	bne	12220 <dcngettext@plt+0x1230>
   1238c:	ldr	r3, [sp, #52]	; 0x34
   12390:	cmp	r3, #0
   12394:	bne	122fc <dcngettext@plt+0x130c>
   12398:	ldr	r1, [sp, #52]	; 0x34
   1239c:	ldr	r0, [sp, #48]	; 0x30
   123a0:	bl	1125c <dcngettext@plt+0x26c>
   123a4:	mov	r2, #5
   123a8:	ldr	r1, [pc, #1444]	; 12954 <dcngettext@plt+0x1964>
   123ac:	mov	r0, #0
   123b0:	bl	10e04 <dcgettext@plt>
   123b4:	mov	r2, r0
   123b8:	ldr	r1, [pc, #1416]	; 12948 <dcngettext@plt+0x1958>
   123bc:	mov	r0, #1
   123c0:	bl	10f24 <__printf_chk@plt>
   123c4:	b	12220 <dcngettext@plt+0x1230>
   123c8:	ldrb	r3, [fp, #6]
   123cc:	str	r3, [sp, #88]	; 0x58
   123d0:	cmp	r3, #0
   123d4:	bne	12220 <dcngettext@plt+0x1230>
   123d8:	mov	r4, r6
   123dc:	b	122d4 <dcngettext@plt+0x12e4>
   123e0:	mov	r1, #92	; 0x5c
   123e4:	bl	10f6c <__overflow@plt>
   123e8:	b	12324 <dcngettext@plt+0x1334>
   123ec:	ldr	r0, [sp, #100]	; 0x64
   123f0:	bl	13c9c <dcngettext@plt+0x2cac>
   123f4:	ldr	r3, [r7]
   123f8:	tst	r3, #32
   123fc:	mvneq	r4, #0
   12400:	movne	r4, #0
   12404:	ldr	r3, [sp, #44]	; 0x2c
   12408:	cmp	r3, #0
   1240c:	bne	12460 <dcngettext@plt+0x1470>
   12410:	mov	r0, r7
   12414:	bl	10f9c <clearerr_unlocked@plt>
   12418:	cmp	r4, #0
   1241c:	blt	1249c <dcngettext@plt+0x14ac>
   12420:	ldrne	r5, [pc, #1296]	; 12938 <dcngettext@plt+0x1948>
   12424:	beq	12484 <dcngettext@plt+0x1494>
   12428:	ldr	r2, [sp, #60]	; 0x3c
   1242c:	mov	r1, #3
   12430:	mov	r0, #0
   12434:	bl	15784 <dcngettext@plt+0x4794>
   12438:	mov	r3, r0
   1243c:	mov	r2, r5
   12440:	mov	r1, r4
   12444:	mov	r0, #0
   12448:	bl	10e70 <error@plt>
   1244c:	ldr	r3, [sp, #36]	; 0x24
   12450:	ldr	r2, [sp, #40]	; 0x28
   12454:	and	r2, r2, r3
   12458:	str	r2, [sp, #40]	; 0x28
   1245c:	b	12714 <dcngettext@plt+0x1724>
   12460:	mov	r0, r7
   12464:	bl	13af4 <dcngettext@plt+0x2b04>
   12468:	adds	r0, r0, #0
   1246c:	movne	r0, #1
   12470:	ands	r3, r0, r4, lsr #31
   12474:	beq	12418 <dcngettext@plt+0x1428>
   12478:	bl	10ef4 <__errno_location@plt>
   1247c:	ldr	r4, [r0]
   12480:	b	12418 <dcngettext@plt+0x1428>
   12484:	mov	r2, #5
   12488:	ldr	r1, [pc, #1224]	; 12958 <dcngettext@plt+0x1968>
   1248c:	mov	r0, #0
   12490:	bl	10e04 <dcgettext@plt>
   12494:	mov	r5, r0
   12498:	b	12428 <dcngettext@plt+0x1438>
   1249c:	ldr	r3, [sp, #80]	; 0x50
   124a0:	cmp	r3, #0
   124a4:	beq	12664 <dcngettext@plt+0x1674>
   124a8:	ldrb	r3, [fp, #6]
   124ac:	cmp	r3, #0
   124b0:	bne	1261c <dcngettext@plt+0x162c>
   124b4:	ldrd	r0, [sp, #24]
   124b8:	mov	r2, r0
   124bc:	mov	r3, r1
   124c0:	orrs	r3, r2, r3
   124c4:	beq	12524 <dcngettext@plt+0x1534>
   124c8:	mvn	r2, #0
   124cc:	mov	r3, #0
   124d0:	cmp	r1, r3
   124d4:	cmpeq	r0, r2
   124d8:	ldrls	r3, [sp, #24]
   124dc:	bls	124f4 <dcngettext@plt+0x1504>
   124e0:	ldr	r2, [pc, #1140]	; 1295c <dcngettext@plt+0x196c>
   124e4:	mov	r3, #0
   124e8:	bl	16e48 <dcngettext@plt+0x5e58>
   124ec:	add	r3, r2, #999424	; 0xf4000
   124f0:	add	r3, r3, #576	; 0x240
   124f4:	mov	r2, #5
   124f8:	str	r2, [sp]
   124fc:	ldr	r2, [pc, #1116]	; 12960 <dcngettext@plt+0x1970>
   12500:	ldr	r1, [pc, #1116]	; 12964 <dcngettext@plt+0x1974>
   12504:	mov	r0, #0
   12508:	bl	10ff0 <dcngettext@plt>
   1250c:	ldrd	r2, [sp, #24]
   12510:	strd	r2, [sp]
   12514:	mov	r2, r0
   12518:	mov	r1, #0
   1251c:	mov	r0, r1
   12520:	bl	10e70 <error@plt>
   12524:	ldrd	r0, [sp, #64]	; 0x40
   12528:	mov	r2, r0
   1252c:	mov	r3, r1
   12530:	orrs	r3, r2, r3
   12534:	beq	12594 <dcngettext@plt+0x15a4>
   12538:	mvn	r2, #0
   1253c:	mov	r3, #0
   12540:	cmp	r1, r3
   12544:	cmpeq	r0, r2
   12548:	ldrls	r3, [sp, #64]	; 0x40
   1254c:	bls	12564 <dcngettext@plt+0x1574>
   12550:	ldr	r2, [pc, #1028]	; 1295c <dcngettext@plt+0x196c>
   12554:	mov	r3, #0
   12558:	bl	16e48 <dcngettext@plt+0x5e58>
   1255c:	add	r3, r2, #999424	; 0xf4000
   12560:	add	r3, r3, #576	; 0x240
   12564:	mov	r2, #5
   12568:	str	r2, [sp]
   1256c:	ldr	r2, [pc, #1012]	; 12968 <dcngettext@plt+0x1978>
   12570:	ldr	r1, [pc, #1012]	; 1296c <dcngettext@plt+0x197c>
   12574:	mov	r0, #0
   12578:	bl	10ff0 <dcngettext@plt>
   1257c:	ldrd	r2, [sp, #64]	; 0x40
   12580:	strd	r2, [sp]
   12584:	mov	r2, r0
   12588:	mov	r1, #0
   1258c:	mov	r0, r1
   12590:	bl	10e70 <error@plt>
   12594:	ldrd	r0, [sp, #72]	; 0x48
   12598:	mov	r2, r0
   1259c:	mov	r3, r1
   125a0:	orrs	r3, r2, r3
   125a4:	beq	12604 <dcngettext@plt+0x1614>
   125a8:	mvn	r2, #0
   125ac:	mov	r3, #0
   125b0:	cmp	r1, r3
   125b4:	cmpeq	r0, r2
   125b8:	ldrls	r3, [sp, #72]	; 0x48
   125bc:	bls	125d4 <dcngettext@plt+0x15e4>
   125c0:	ldr	r2, [pc, #916]	; 1295c <dcngettext@plt+0x196c>
   125c4:	mov	r3, #0
   125c8:	bl	16e48 <dcngettext@plt+0x5e58>
   125cc:	add	r3, r2, #999424	; 0xf4000
   125d0:	add	r3, r3, #576	; 0x240
   125d4:	mov	r2, #5
   125d8:	str	r2, [sp]
   125dc:	ldr	r2, [pc, #908]	; 12970 <dcngettext@plt+0x1980>
   125e0:	ldr	r1, [pc, #908]	; 12974 <dcngettext@plt+0x1984>
   125e4:	mov	r0, #0
   125e8:	bl	10ff0 <dcngettext@plt>
   125ec:	ldrd	r2, [sp, #72]	; 0x48
   125f0:	strd	r2, [sp]
   125f4:	mov	r2, r0
   125f8:	mov	r1, #0
   125fc:	mov	r0, r1
   12600:	bl	10e70 <error@plt>
   12604:	ldrb	r3, [fp, #5]
   12608:	eor	r3, r3, #1
   1260c:	ldr	r2, [sp, #88]	; 0x58
   12610:	orr	r3, r2, r3
   12614:	tst	r3, #255	; 0xff
   12618:	beq	126a8 <dcngettext@plt+0x16b8>
   1261c:	ldr	r3, [sp, #88]	; 0x58
   12620:	cmp	r3, #0
   12624:	moveq	r3, #0
   12628:	beq	126a0 <dcngettext@plt+0x16b0>
   1262c:	ldrd	r2, [sp, #64]	; 0x40
   12630:	ldrd	r0, [sp, #72]	; 0x48
   12634:	orr	r2, r2, r0
   12638:	orr	r3, r3, r1
   1263c:	orrs	r3, r2, r3
   12640:	movne	r3, #0
   12644:	bne	126a0 <dcngettext@plt+0x16b0>
   12648:	ldrb	r3, [fp, #9]
   1264c:	eor	r3, r3, #1
   12650:	ldrd	r0, [sp, #24]
   12654:	mov	r2, r0
   12658:	orrs	r2, r2, r1
   1265c:	orreq	r3, r3, #1
   12660:	b	126a0 <dcngettext@plt+0x16b0>
   12664:	mov	r2, #5
   12668:	ldr	r1, [pc, #776]	; 12978 <dcngettext@plt+0x1988>
   1266c:	mov	r0, #0
   12670:	bl	10e04 <dcgettext@plt>
   12674:	mov	r4, r0
   12678:	ldr	r2, [sp, #60]	; 0x3c
   1267c:	mov	r1, #3
   12680:	mov	r0, #0
   12684:	bl	15784 <dcngettext@plt+0x4794>
   12688:	mov	r3, r0
   1268c:	mov	r2, r4
   12690:	mov	r1, #0
   12694:	mov	r0, r1
   12698:	bl	10e70 <error@plt>
   1269c:	mov	r3, #0
   126a0:	and	r3, r3, #1
   126a4:	b	12450 <dcngettext@plt+0x1460>
   126a8:	mov	r2, #5
   126ac:	ldr	r1, [pc, #712]	; 1297c <dcngettext@plt+0x198c>
   126b0:	mov	r0, #0
   126b4:	bl	10e04 <dcgettext@plt>
   126b8:	mov	r4, r0
   126bc:	ldr	r2, [sp, #60]	; 0x3c
   126c0:	mov	r1, #3
   126c4:	mov	r0, #0
   126c8:	bl	15784 <dcngettext@plt+0x4794>
   126cc:	mov	r3, r0
   126d0:	mov	r2, r4
   126d4:	mov	r1, #0
   126d8:	mov	r0, r1
   126dc:	bl	10e70 <error@plt>
   126e0:	b	1261c <dcngettext@plt+0x162c>
   126e4:	add	r1, sp, #160	; 0xa0
   126e8:	ldr	r3, [sp, #92]	; 0x5c
   126ec:	str	r3, [r1, #-48]!	; 0xffffffd0
   126f0:	add	r3, sp, #120	; 0x78
   126f4:	str	r3, [sp]
   126f8:	add	r3, sp, #108	; 0x6c
   126fc:	add	r2, sp, #140	; 0x8c
   12700:	mov	r0, r6
   12704:	bl	1134c <dcngettext@plt+0x35c>
   12708:	subs	r7, r0, #0
   1270c:	bne	127ac <dcngettext@plt+0x17bc>
   12710:	str	r7, [sp, #40]	; 0x28
   12714:	ldr	r3, [sp, #56]	; 0x38
   12718:	ldr	r2, [sp, #20]
   1271c:	cmp	r3, r2
   12720:	bls	12a78 <dcngettext@plt+0x1a88>
   12724:	ldr	r3, [sp, #20]
   12728:	ldr	r6, [r3], #4
   1272c:	str	r3, [sp, #20]
   12730:	ldr	r3, [sp, #16]
   12734:	cmp	r3, #0
   12738:	beq	126e4 <dcngettext@plt+0x16f4>
   1273c:	ldr	r1, [pc, #456]	; 1290c <dcngettext@plt+0x191c>
   12740:	mov	r0, r6
   12744:	bl	10d8c <strcmp@plt>
   12748:	subs	r3, r0, #0
   1274c:	str	r3, [sp, #44]	; 0x2c
   12750:	bne	11da0 <dcngettext@plt+0xdb0>
   12754:	mov	r3, #1
   12758:	strb	r3, [fp, #4]
   1275c:	mov	r2, #5
   12760:	ldr	r1, [pc, #564]	; 1299c <dcngettext@plt+0x19ac>
   12764:	bl	10e04 <dcgettext@plt>
   12768:	str	r0, [sp, #60]	; 0x3c
   1276c:	ldr	r3, [pc, #548]	; 12998 <dcngettext@plt+0x19a8>
   12770:	ldr	r7, [r3]
   12774:	mov	r3, #0
   12778:	str	r3, [sp, #100]	; 0x64
   1277c:	str	r3, [sp, #104]	; 0x68
   12780:	ldr	r3, [sp, #36]	; 0x24
   12784:	str	r3, [sp, #88]	; 0x58
   12788:	str	r3, [sp, #80]	; 0x50
   1278c:	mov	r2, #0
   12790:	mov	r3, #0
   12794:	strd	r2, [sp, #72]	; 0x48
   12798:	strd	r2, [sp, #64]	; 0x40
   1279c:	strd	r2, [sp, #24]
   127a0:	mov	r8, #1
   127a4:	mov	r9, #0
   127a8:	b	11f94 <dcngettext@plt+0xfa4>
   127ac:	ldr	r8, [sp, #112]	; 0x70
   127b0:	ldr	r3, [pc, #300]	; 128e4 <dcngettext@plt+0x18f4>
   127b4:	ldrb	sl, [r3]
   127b8:	cmp	sl, #10
   127bc:	ldrne	r7, [sp, #16]
   127c0:	beq	1284c <dcngettext@plt+0x185c>
   127c4:	ldr	r3, [sp, #32]
   127c8:	cmp	r3, #0
   127cc:	bne	129a0 <dcngettext@plt+0x19b0>
   127d0:	ldr	r3, [fp]
   127d4:	cmp	r3, #1
   127d8:	bls	129fc <dcngettext@plt+0x1a0c>
   127dc:	add	r5, sp, #139	; 0x8b
   127e0:	mov	r4, #0
   127e4:	mov	r9, #1
   127e8:	ldrb	r2, [r5, #1]!
   127ec:	ldr	r1, [pc, #396]	; 12980 <dcngettext@plt+0x1990>
   127f0:	mov	r0, r9
   127f4:	bl	10f24 <__printf_chk@plt>
   127f8:	add	r4, r4, #1
   127fc:	ldr	r3, [fp]
   12800:	cmp	r4, r3, lsr #1
   12804:	bcc	127e8 <dcngettext@plt+0x17f8>
   12808:	ldr	r3, [sp, #32]
   1280c:	cmp	r3, #0
   12810:	beq	129fc <dcngettext@plt+0x1a0c>
   12814:	ldr	r3, [pc, #184]	; 128d4 <dcngettext@plt+0x18e4>
   12818:	ldr	r0, [r3]
   1281c:	ldr	r3, [r0, #20]
   12820:	ldr	r2, [r0, #24]
   12824:	cmp	r3, r2
   12828:	addcc	r2, r3, #1
   1282c:	strcc	r2, [r0, #20]
   12830:	strbcc	sl, [r3]
   12834:	ldrcc	r7, [sp, #40]	; 0x28
   12838:	bcc	12710 <dcngettext@plt+0x1720>
   1283c:	mov	r1, sl
   12840:	bl	10f6c <__overflow@plt>
   12844:	ldr	r7, [sp, #40]	; 0x28
   12848:	b	12710 <dcngettext@plt+0x1720>
   1284c:	mov	r1, #92	; 0x5c
   12850:	mov	r0, r6
   12854:	bl	10ee8 <strchr@plt>
   12858:	cmp	r0, #0
   1285c:	beq	12894 <dcngettext@plt+0x18a4>
   12860:	ldr	r3, [pc, #108]	; 128d4 <dcngettext@plt+0x18e4>
   12864:	ldr	r0, [r3]
   12868:	ldr	r3, [r0, #20]
   1286c:	ldr	r2, [r0, #24]
   12870:	cmp	r3, r2
   12874:	addcc	r2, r3, #1
   12878:	strcc	r2, [r0, #20]
   1287c:	movcc	r2, #92	; 0x5c
   12880:	strbcc	r2, [r3]
   12884:	bcc	127c4 <dcngettext@plt+0x17d4>
   12888:	mov	r1, #92	; 0x5c
   1288c:	bl	10f6c <__overflow@plt>
   12890:	b	127c4 <dcngettext@plt+0x17d4>
   12894:	mov	r1, #10
   12898:	mov	r0, r6
   1289c:	bl	10ee8 <strchr@plt>
   128a0:	cmp	r0, #0
   128a4:	bne	12860 <dcngettext@plt+0x1870>
   128a8:	mov	r1, #13
   128ac:	mov	r0, r6
   128b0:	bl	10ee8 <strchr@plt>
   128b4:	cmp	r0, #0
   128b8:	ldreq	r7, [sp, #16]
   128bc:	bne	12860 <dcngettext@plt+0x1870>
   128c0:	b	127c4 <dcngettext@plt+0x17d4>
   128c4:	andeq	r7, r1, ip, lsl #6
   128c8:	andeq	r7, r1, ip, ror r7
   128cc:	andeq	r7, r1, r4, lsr #16
   128d0:	andeq	r2, r1, r0, lsr #22
   128d4:	andeq	r9, r2, ip, ror #2
   128d8:	andeq	r7, r1, ip, ror r0
   128dc:	andeq	r7, r1, ip, ror #16
   128e0:	andeq	r9, r2, r4, ror r1
   128e4:	strdeq	r9, [r2], -ip
   128e8:	andeq	r0, r0, r1, lsl #2
   128ec:	andeq	r0, r0, r3, lsl #2
   128f0:	andeq	r7, r1, ip, lsr r8
   128f4:	andeq	r7, r1, ip, asr #16
   128f8:	andeq	r7, r1, ip, asr r8
   128fc:	andeq	r9, r2, r4, lsl #2
   12900:	andeq	r7, r1, r8, ror r7
   12904:	andeq	r7, r1, r0, ror r1
   12908:	andeq	r9, r2, r8, asr r1
   1290c:	andeq	r7, r1, r8, ror #2
   12910:	andeq	r7, r1, r4, ror r8
   12914:	muleq	r1, r8, r8
   12918:	ldrdeq	r7, [r1], -r4
   1291c:	andeq	r7, r1, r0, lsl r9
   12920:	andeq	r7, r1, ip, asr r9
   12924:	andeq	r7, r1, r4, lsr #19
   12928:	andeq	r7, r1, r4, ror #19
   1292c:	andeq	r7, r1, r4, lsr #20
   12930:	andeq	r7, r1, r4, ror #20
   12934:	andeq	r7, r1, ip, ror #2
   12938:	andeq	r7, r1, r0, lsr #27
   1293c:			; <UNDEFINED> instruction: 0x00017ab4
   12940:	ldrdeq	r7, [r1], -r0
   12944:	andeq	r7, r1, r0, lsl #22
   12948:	andeq	r7, r1, r4, lsl fp
   1294c:	andeq	r7, r1, r4, asr #32
   12950:	andeq	r7, r1, r4, lsr #22
   12954:	andeq	r7, r1, ip, lsl fp
   12958:	andeq	r7, r1, r8, lsr #22
   1295c:	andeq	r4, pc, r0, asr #4
   12960:	andeq	r7, r1, r8, ror #22
   12964:	muleq	r1, r8, fp
   12968:	andeq	r7, r1, r4, asr #23
   1296c:	strdeq	r7, [r1], -r4
   12970:	andeq	r7, r1, r0, lsr #24
   12974:	andeq	r7, r1, r0, asr ip
   12978:	andeq	r7, r1, r8, lsr fp
   1297c:	andeq	r7, r1, r0, lsl #25
   12980:	andeq	r7, r1, r8, lsr #25
   12984:	andeq	r7, r1, ip, ror #3
   12988:	muleq	r1, ip, ip
   1298c:	andeq	r7, r1, r0, lsr #25
   12990:	andeq	r9, r2, ip, ror #2
   12994:	andeq	r9, r2, r4, ror r1
   12998:	andeq	r9, r2, r8, ror #2
   1299c:	andeq	r7, r1, r4, lsr #21
   129a0:	ldr	r4, [pc, #-24]	; 12990 <dcngettext@plt+0x19a0>
   129a4:	ldr	r3, [r4]
   129a8:	mov	r2, #3
   129ac:	mov	r1, #1
   129b0:	ldr	r0, [pc, #-52]	; 12984 <dcngettext@plt+0x1994>
   129b4:	bl	10de0 <fwrite_unlocked@plt>
   129b8:	ldr	r3, [r4]
   129bc:	mov	r2, #2
   129c0:	mov	r1, #1
   129c4:	ldr	r0, [pc, #-68]	; 12988 <dcngettext@plt+0x1998>
   129c8:	bl	10de0 <fwrite_unlocked@plt>
   129cc:	mov	r1, r7
   129d0:	mov	r0, r6
   129d4:	bl	1125c <dcngettext@plt+0x26c>
   129d8:	ldr	r3, [r4]
   129dc:	mov	r2, #4
   129e0:	mov	r1, #1
   129e4:	ldr	r0, [pc, #-96]	; 1298c <dcngettext@plt+0x199c>
   129e8:	bl	10de0 <fwrite_unlocked@plt>
   129ec:	ldr	r3, [fp]
   129f0:	cmp	r3, #1
   129f4:	bhi	127dc <dcngettext@plt+0x17ec>
   129f8:	b	12814 <dcngettext@plt+0x1824>
   129fc:	ldr	r3, [pc, #-116]	; 12990 <dcngettext@plt+0x19a0>
   12a00:	ldr	r0, [r3]
   12a04:	ldr	r3, [r0, #20]
   12a08:	ldr	r2, [r0, #24]
   12a0c:	cmp	r3, r2
   12a10:	addcc	r2, r3, #1
   12a14:	strcc	r2, [r0, #20]
   12a18:	movcc	r2, #32
   12a1c:	strbcc	r2, [r3]
   12a20:	bcs	12a64 <dcngettext@plt+0x1a74>
   12a24:	cmp	r8, #0
   12a28:	movne	r1, #42	; 0x2a
   12a2c:	moveq	r1, #32
   12a30:	ldr	r3, [pc, #-168]	; 12990 <dcngettext@plt+0x19a0>
   12a34:	ldr	r0, [r3]
   12a38:	ldr	r3, [r0, #20]
   12a3c:	ldr	r2, [r0, #24]
   12a40:	cmp	r3, r2
   12a44:	addcc	r2, r3, #1
   12a48:	strcc	r2, [r0, #20]
   12a4c:	strbcc	r1, [r3]
   12a50:	bcs	12a70 <dcngettext@plt+0x1a80>
   12a54:	mov	r1, r7
   12a58:	mov	r0, r6
   12a5c:	bl	1125c <dcngettext@plt+0x26c>
   12a60:	b	12814 <dcngettext@plt+0x1824>
   12a64:	mov	r1, #32
   12a68:	bl	10f6c <__overflow@plt>
   12a6c:	b	12a24 <dcngettext@plt+0x1a34>
   12a70:	bl	10f6c <__overflow@plt>
   12a74:	b	12a54 <dcngettext@plt+0x1a64>
   12a78:	ldr	r3, [pc, #-236]	; 12994 <dcngettext@plt+0x19a4>
   12a7c:	ldrb	r3, [r3, #4]
   12a80:	cmp	r3, #0
   12a84:	bne	12a9c <dcngettext@plt+0x1aac>
   12a88:	ldr	r3, [sp, #40]	; 0x28
   12a8c:	eor	r0, r3, #1
   12a90:	uxtb	r0, r0
   12a94:	add	sp, sp, #164	; 0xa4
   12a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a9c:	ldr	r3, [pc, #-268]	; 12998 <dcngettext@plt+0x19a8>
   12aa0:	ldr	r0, [r3]
   12aa4:	bl	13af4 <dcngettext@plt+0x2b04>
   12aa8:	cmn	r0, #1
   12aac:	bne	12a88 <dcngettext@plt+0x1a98>
   12ab0:	bl	10ef4 <__errno_location@plt>
   12ab4:	ldr	r4, [r0]
   12ab8:	mov	r2, #5
   12abc:	ldr	r1, [pc, #-296]	; 1299c <dcngettext@plt+0x19ac>
   12ac0:	mov	r0, #0
   12ac4:	bl	10e04 <dcgettext@plt>
   12ac8:	mov	r2, r0
   12acc:	mov	r1, r4
   12ad0:	mov	r0, #1
   12ad4:	bl	10e70 <error@plt>
   12ad8:	ldr	r3, [sp, #48]	; 0x30
   12adc:	add	r5, r3, r4
   12ae0:	ldr	r3, [sp, #52]	; 0x34
   12ae4:	cmp	r3, #0
   12ae8:	bne	11e40 <dcngettext@plt+0xe50>
   12aec:	add	r4, r4, #1
   12af0:	mov	r3, #0
   12af4:	strb	r3, [r5]
   12af8:	ldr	r2, [sp, #48]	; 0x30
   12afc:	b	11e5c <dcngettext@plt+0xe6c>
   12b00:	ldr	r3, [pc, #4]	; 12b0c <dcngettext@plt+0x1b1c>
   12b04:	str	r0, [r3]
   12b08:	bx	lr
   12b0c:	andeq	r9, r2, r4, lsl #3
   12b10:	ldr	r3, [pc, #4]	; 12b1c <dcngettext@plt+0x1b2c>
   12b14:	strb	r0, [r3, #4]
   12b18:	bx	lr
   12b1c:	andeq	r9, r2, r4, lsl #3
   12b20:	push	{r4, r5, r6, lr}
   12b24:	sub	sp, sp, #8
   12b28:	ldr	r3, [pc, #200]	; 12bf8 <dcngettext@plt+0x1c08>
   12b2c:	ldr	r0, [r3]
   12b30:	bl	1654c <dcngettext@plt+0x555c>
   12b34:	cmp	r0, #0
   12b38:	beq	12b5c <dcngettext@plt+0x1b6c>
   12b3c:	ldr	r3, [pc, #184]	; 12bfc <dcngettext@plt+0x1c0c>
   12b40:	ldrb	r3, [r3, #4]
   12b44:	cmp	r3, #0
   12b48:	beq	12b78 <dcngettext@plt+0x1b88>
   12b4c:	bl	10ef4 <__errno_location@plt>
   12b50:	ldr	r3, [r0]
   12b54:	cmp	r3, #32
   12b58:	bne	12b78 <dcngettext@plt+0x1b88>
   12b5c:	ldr	r3, [pc, #156]	; 12c00 <dcngettext@plt+0x1c10>
   12b60:	ldr	r0, [r3]
   12b64:	bl	1654c <dcngettext@plt+0x555c>
   12b68:	cmp	r0, #0
   12b6c:	bne	12bec <dcngettext@plt+0x1bfc>
   12b70:	add	sp, sp, #8
   12b74:	pop	{r4, r5, r6, pc}
   12b78:	mov	r2, #5
   12b7c:	ldr	r1, [pc, #128]	; 12c04 <dcngettext@plt+0x1c14>
   12b80:	mov	r0, #0
   12b84:	bl	10e04 <dcgettext@plt>
   12b88:	mov	r4, r0
   12b8c:	ldr	r3, [pc, #104]	; 12bfc <dcngettext@plt+0x1c0c>
   12b90:	ldr	r5, [r3]
   12b94:	cmp	r5, #0
   12b98:	beq	12bd0 <dcngettext@plt+0x1be0>
   12b9c:	bl	10ef4 <__errno_location@plt>
   12ba0:	ldr	r6, [r0]
   12ba4:	mov	r0, r5
   12ba8:	bl	15764 <dcngettext@plt+0x4774>
   12bac:	str	r4, [sp]
   12bb0:	mov	r3, r0
   12bb4:	ldr	r2, [pc, #76]	; 12c08 <dcngettext@plt+0x1c18>
   12bb8:	mov	r1, r6
   12bbc:	mov	r0, #0
   12bc0:	bl	10e70 <error@plt>
   12bc4:	ldr	r3, [pc, #64]	; 12c0c <dcngettext@plt+0x1c1c>
   12bc8:	ldr	r0, [r3]
   12bcc:	bl	10dbc <_exit@plt>
   12bd0:	bl	10ef4 <__errno_location@plt>
   12bd4:	mov	r3, r4
   12bd8:	ldr	r2, [pc, #48]	; 12c10 <dcngettext@plt+0x1c20>
   12bdc:	ldr	r1, [r0]
   12be0:	mov	r0, #0
   12be4:	bl	10e70 <error@plt>
   12be8:	b	12bc4 <dcngettext@plt+0x1bd4>
   12bec:	ldr	r3, [pc, #24]	; 12c0c <dcngettext@plt+0x1c1c>
   12bf0:	ldr	r0, [r3]
   12bf4:	bl	10dbc <_exit@plt>
   12bf8:	andeq	r9, r2, ip, ror #2
   12bfc:	andeq	r9, r2, r4, lsl #3
   12c00:	andeq	r9, r2, r0, ror #2
   12c04:	muleq	r1, r0, sp
   12c08:	muleq	r1, ip, sp
   12c0c:	andeq	r9, r2, r8, lsl #2
   12c10:	andeq	r7, r1, r0, lsr #27
   12c14:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c18:	sub	sp, sp, #164	; 0xa4
   12c1c:	mov	r5, r0
   12c20:	mov	r8, r1
   12c24:	ldr	r0, [pc, #192]	; 12cec <dcngettext@plt+0x1cfc>
   12c28:	bl	164cc <dcngettext@plt+0x54dc>
   12c2c:	subs	r6, r0, #0
   12c30:	moveq	r0, #1
   12c34:	beq	12cac <dcngettext@plt+0x1cbc>
   12c38:	add	r0, sp, #4
   12c3c:	bl	12cf0 <dcngettext@plt+0x1d00>
   12c40:	mov	r7, #1
   12c44:	mov	r9, #32768	; 0x8000
   12c48:	mov	r4, #0
   12c4c:	ldr	r3, [r5]
   12c50:	tst	r3, #16
   12c54:	bne	12c8c <dcngettext@plt+0x1c9c>
   12c58:	mov	r3, r5
   12c5c:	rsb	r2, r4, #32768	; 0x8000
   12c60:	mov	r1, r7
   12c64:	add	r0, r6, r4
   12c68:	bl	10fc0 <fread_unlocked@plt>
   12c6c:	add	r4, r4, r0
   12c70:	cmp	r4, #32768	; 0x8000
   12c74:	beq	12cc4 <dcngettext@plt+0x1cd4>
   12c78:	cmp	r0, #0
   12c7c:	bne	12c4c <dcngettext@plt+0x1c5c>
   12c80:	ldr	r3, [r5]
   12c84:	tst	r3, #32
   12c88:	bne	12cb4 <dcngettext@plt+0x1cc4>
   12c8c:	cmp	r4, #0
   12c90:	bne	12cd8 <dcngettext@plt+0x1ce8>
   12c94:	mov	r1, r8
   12c98:	add	r0, sp, #4
   12c9c:	bl	1381c <dcngettext@plt+0x282c>
   12ca0:	mov	r0, r6
   12ca4:	bl	13c9c <dcngettext@plt+0x2cac>
   12ca8:	mov	r0, #0
   12cac:	add	sp, sp, #164	; 0xa4
   12cb0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12cb4:	mov	r0, r6
   12cb8:	bl	13c9c <dcngettext@plt+0x2cac>
   12cbc:	mov	r0, #1
   12cc0:	b	12cac <dcngettext@plt+0x1cbc>
   12cc4:	add	r2, sp, #4
   12cc8:	mov	r1, r9
   12ccc:	mov	r0, r6
   12cd0:	bl	12d5c <dcngettext@plt+0x1d6c>
   12cd4:	b	12c48 <dcngettext@plt+0x1c58>
   12cd8:	add	r2, sp, #4
   12cdc:	mov	r1, r4
   12ce0:	mov	r0, r6
   12ce4:	bl	138b0 <dcngettext@plt+0x28c0>
   12ce8:	b	12c94 <dcngettext@plt+0x1ca4>
   12cec:	andeq	r8, r0, r8, asr #32
   12cf0:	ldr	r3, [pc, #44]	; 12d24 <dcngettext@plt+0x1d34>
   12cf4:	str	r3, [r0]
   12cf8:	ldr	r3, [pc, #40]	; 12d28 <dcngettext@plt+0x1d38>
   12cfc:	str	r3, [r0, #4]
   12d00:	ldr	r3, [pc, #36]	; 12d2c <dcngettext@plt+0x1d3c>
   12d04:	str	r3, [r0, #8]
   12d08:	ldr	r3, [pc, #32]	; 12d30 <dcngettext@plt+0x1d40>
   12d0c:	str	r3, [r0, #12]
   12d10:	mov	r3, #0
   12d14:	str	r3, [r0, #20]
   12d18:	str	r3, [r0, #16]
   12d1c:	str	r3, [r0, #24]
   12d20:	bx	lr
   12d24:	strbvs	r2, [r5, -r1, lsl #6]
   12d28:	svc	0x00cdab89
   12d2c:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12d30:	eorsne	r5, r2, r6, ror r4
   12d34:	ldr	r3, [r0]
   12d38:	str	r3, [r1]
   12d3c:	ldr	r3, [r0, #4]
   12d40:	str	r3, [r1, #4]
   12d44:	ldr	r3, [r0, #8]
   12d48:	str	r3, [r1, #8]
   12d4c:	ldr	r3, [r0, #12]
   12d50:	str	r3, [r1, #12]
   12d54:	mov	r0, r1
   12d58:	bx	lr
   12d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d60:	sub	sp, sp, #76	; 0x4c
   12d64:	mov	ip, r2
   12d68:	str	r2, [sp, #68]	; 0x44
   12d6c:	bic	r3, r1, #3
   12d70:	add	r3, r0, r3
   12d74:	mov	lr, r3
   12d78:	str	r3, [sp, #64]	; 0x40
   12d7c:	ldr	r2, [r2]
   12d80:	str	r2, [sp, #48]	; 0x30
   12d84:	ldr	r7, [ip, #4]
   12d88:	ldr	r5, [ip, #8]
   12d8c:	ldr	r2, [ip, #12]
   12d90:	str	r2, [sp, #12]
   12d94:	ldr	r3, [ip, #16]
   12d98:	add	r3, r1, r3
   12d9c:	str	r3, [ip, #16]
   12da0:	ldr	r2, [ip, #20]
   12da4:	cmp	r1, r3
   12da8:	movls	r3, r2
   12dac:	addhi	r3, r2, #1
   12db0:	str	r3, [ip, #20]
   12db4:	cmp	r0, lr
   12db8:	bcs	13714 <dcngettext@plt+0x2724>
   12dbc:	mov	lr, r0
   12dc0:	str	r7, [sp, #16]
   12dc4:	str	r5, [sp, #20]
   12dc8:	ldr	r3, [lr]
   12dcc:	mov	fp, r3
   12dd0:	ldr	r3, [sp, #48]	; 0x30
   12dd4:	add	r3, r3, #-687865856	; 0xd7000000
   12dd8:	add	r3, r3, #6946816	; 0x6a0000
   12ddc:	add	r3, r3, #41984	; 0xa400
   12de0:	add	r3, r3, #120	; 0x78
   12de4:	add	r2, r3, fp
   12de8:	ldr	r0, [sp, #20]
   12dec:	mov	r3, r0
   12df0:	ldr	r1, [sp, #12]
   12df4:	eor	r3, r3, r1
   12df8:	ldr	r5, [sp, #16]
   12dfc:	and	r3, r3, r5
   12e00:	eor	r3, r3, r1
   12e04:	add	r3, r3, r2
   12e08:	add	r3, r5, r3, ror #25
   12e0c:	ldr	r2, [lr, #4]
   12e10:	add	r1, r1, #-402653184	; 0xe8000000
   12e14:	add	r1, r1, #13041664	; 0xc70000
   12e18:	add	r1, r1, #46848	; 0xb700
   12e1c:	add	r1, r1, #86	; 0x56
   12e20:	str	r2, [sp, #24]
   12e24:	add	r2, r1, r2
   12e28:	mov	r1, r0
   12e2c:	eor	r1, r1, r5
   12e30:	and	r1, r1, r3
   12e34:	eor	r1, r1, r0
   12e38:	add	r1, r1, r2
   12e3c:	add	r1, r3, r1, ror #20
   12e40:	ldr	r4, [lr, #8]
   12e44:	mov	r7, r4
   12e48:	add	r0, r0, #603979776	; 0x24000000
   12e4c:	add	r0, r0, #2113536	; 0x204000
   12e50:	add	r0, r0, #12480	; 0x30c0
   12e54:	add	r0, r0, #27
   12e58:	add	ip, r0, r4
   12e5c:	eor	r0, r3, r5
   12e60:	and	r0, r0, r1
   12e64:	eor	r0, r0, r5
   12e68:	add	r0, r0, ip
   12e6c:	add	r0, r1, r0, ror #15
   12e70:	ldr	r4, [lr, #12]
   12e74:	mov	r8, r4
   12e78:	ldr	ip, [pc, #2232]	; 13738 <dcngettext@plt+0x2748>
   12e7c:	add	ip, r5, ip
   12e80:	add	ip, ip, r4
   12e84:	eor	r2, r3, r1
   12e88:	and	r2, r2, r0
   12e8c:	eor	r2, r2, r3
   12e90:	add	r2, r2, ip
   12e94:	add	r2, r0, r2, ror #10
   12e98:	ldr	r4, [lr, #16]
   12e9c:	ldr	ip, [pc, #2200]	; 1373c <dcngettext@plt+0x274c>
   12ea0:	str	r4, [sp, #28]
   12ea4:	add	ip, r4, ip
   12ea8:	add	ip, ip, r3
   12eac:	eor	r3, r1, r0
   12eb0:	and	r3, r3, r2
   12eb4:	eor	r3, r3, r1
   12eb8:	add	r3, r3, ip
   12ebc:	add	r3, r2, r3, ror #25
   12ec0:	ldr	r5, [lr, #20]
   12ec4:	mov	r6, r5
   12ec8:	ldr	ip, [pc, #2160]	; 13740 <dcngettext@plt+0x2750>
   12ecc:	add	ip, r5, ip
   12ed0:	add	r1, ip, r1
   12ed4:	eor	ip, r0, r2
   12ed8:	and	ip, ip, r3
   12edc:	eor	ip, ip, r0
   12ee0:	add	r1, ip, r1
   12ee4:	add	r1, r3, r1, ror #20
   12ee8:	ldr	r5, [lr, #24]
   12eec:	ldr	ip, [pc, #2128]	; 13744 <dcngettext@plt+0x2754>
   12ef0:	add	ip, r5, ip
   12ef4:	add	r0, ip, r0
   12ef8:	eor	ip, r2, r3
   12efc:	and	ip, ip, r1
   12f00:	eor	ip, ip, r2
   12f04:	add	ip, ip, r0
   12f08:	add	ip, r1, ip, ror #15
   12f0c:	ldr	r9, [lr, #28]
   12f10:	str	r9, [sp, #32]
   12f14:	ldr	r0, [pc, #2092]	; 13748 <dcngettext@plt+0x2758>
   12f18:	add	r0, r9, r0
   12f1c:	add	r2, r0, r2
   12f20:	eor	r0, r3, r1
   12f24:	and	r0, r0, ip
   12f28:	eor	r0, r0, r3
   12f2c:	add	r2, r0, r2
   12f30:	add	r2, ip, r2, ror #10
   12f34:	ldr	r9, [lr, #32]
   12f38:	str	r9, [sp, #36]	; 0x24
   12f3c:	ldr	r0, [pc, #2056]	; 1374c <dcngettext@plt+0x275c>
   12f40:	add	r0, r9, r0
   12f44:	add	r3, r0, r3
   12f48:	eor	r0, r1, ip
   12f4c:	and	r0, r0, r2
   12f50:	eor	r0, r0, r1
   12f54:	add	r3, r0, r3
   12f58:	add	r3, r2, r3, ror #25
   12f5c:	ldr	r4, [lr, #36]	; 0x24
   12f60:	ldr	r0, [pc, #2024]	; 13750 <dcngettext@plt+0x2760>
   12f64:	str	r4, [sp, #40]	; 0x28
   12f68:	add	r0, r4, r0
   12f6c:	add	r0, r0, r1
   12f70:	eor	r1, ip, r2
   12f74:	and	r1, r1, r3
   12f78:	eor	r1, r1, ip
   12f7c:	add	r1, r1, r0
   12f80:	add	r1, r3, r1, ror #20
   12f84:	ldr	r4, [lr, #40]	; 0x28
   12f88:	str	r4, [sp, #44]	; 0x2c
   12f8c:	sub	r0, r4, #41984	; 0xa400
   12f90:	sub	r0, r0, #79	; 0x4f
   12f94:	add	ip, r0, ip
   12f98:	eor	r0, r2, r3
   12f9c:	and	r0, r0, r1
   12fa0:	eor	r0, r0, r2
   12fa4:	add	r0, r0, ip
   12fa8:	add	r0, r1, r0, ror #15
   12fac:	ldr	ip, [lr, #44]	; 0x2c
   12fb0:	mov	sl, ip
   12fb4:	add	ip, ip, #-1996488704	; 0x89000000
   12fb8:	add	ip, ip, #6029312	; 0x5c0000
   12fbc:	add	ip, ip, #55040	; 0xd700
   12fc0:	add	ip, ip, #190	; 0xbe
   12fc4:	add	r2, ip, r2
   12fc8:	eor	ip, r3, r1
   12fcc:	and	ip, ip, r0
   12fd0:	eor	ip, ip, r3
   12fd4:	add	r2, ip, r2
   12fd8:	add	r2, r0, r2, ror #10
   12fdc:	ldr	r9, [lr, #48]	; 0x30
   12fe0:	ldr	ip, [pc, #1900]	; 13754 <dcngettext@plt+0x2764>
   12fe4:	add	ip, r9, ip
   12fe8:	add	r3, ip, r3
   12fec:	eor	ip, r1, r0
   12ff0:	and	ip, ip, r2
   12ff4:	eor	ip, ip, r1
   12ff8:	add	r3, ip, r3
   12ffc:	add	r3, r2, r3, ror #25
   13000:	ldr	ip, [lr, #52]	; 0x34
   13004:	str	ip, [sp, #4]
   13008:	ldr	ip, [pc, #1864]	; 13758 <dcngettext@plt+0x2768>
   1300c:	ldr	r4, [sp, #4]
   13010:	add	ip, r4, ip
   13014:	add	ip, ip, r1
   13018:	eor	r1, r0, r2
   1301c:	and	r1, r1, r3
   13020:	eor	r1, r1, r0
   13024:	add	r1, r1, ip
   13028:	add	r1, r3, r1, ror #20
   1302c:	ldr	ip, [lr, #56]	; 0x38
   13030:	str	ip, [sp, #8]
   13034:	add	ip, ip, #-1509949440	; 0xa6000000
   13038:	add	ip, ip, #7929856	; 0x790000
   1303c:	add	ip, ip, #17152	; 0x4300
   13040:	add	ip, ip, #142	; 0x8e
   13044:	add	r0, ip, r0
   13048:	eor	ip, r2, r3
   1304c:	and	ip, ip, r1
   13050:	eor	ip, ip, r2
   13054:	add	r0, ip, r0
   13058:	add	r0, r1, r0, ror #15
   1305c:	ldr	r4, [lr, #60]	; 0x3c
   13060:	ldr	ip, [pc, #1780]	; 1375c <dcngettext@plt+0x276c>
   13064:	add	ip, r4, ip
   13068:	add	ip, ip, r2
   1306c:	eor	r2, r3, r1
   13070:	and	r2, r2, r0
   13074:	eor	r2, r2, r3
   13078:	add	r2, r2, ip
   1307c:	add	lr, lr, #64	; 0x40
   13080:	add	r2, r0, r2, ror #10
   13084:	ldr	ip, [sp, #24]
   13088:	add	ip, ip, #-167772160	; 0xf6000000
   1308c:	add	ip, ip, #1966080	; 0x1e0000
   13090:	add	ip, ip, #9536	; 0x2540
   13094:	add	ip, ip, #34	; 0x22
   13098:	add	r3, ip, r3
   1309c:	eor	ip, r0, r2
   130a0:	and	ip, ip, r1
   130a4:	eor	ip, ip, r0
   130a8:	add	r3, ip, r3
   130ac:	add	r3, r2, r3, ror #27
   130b0:	ldr	ip, [pc, #1704]	; 13760 <dcngettext@plt+0x2770>
   130b4:	add	ip, r5, ip
   130b8:	add	ip, ip, r1
   130bc:	eor	r1, r2, r3
   130c0:	and	r1, r1, r0
   130c4:	eor	r1, r1, r2
   130c8:	add	r1, r1, ip
   130cc:	add	r1, r3, r1, ror #23
   130d0:	ldr	ip, [pc, #1676]	; 13764 <dcngettext@plt+0x2774>
   130d4:	add	ip, sl, ip
   130d8:	add	ip, ip, r0
   130dc:	eor	r0, r3, r1
   130e0:	and	r0, r0, r2
   130e4:	eor	r0, r0, r3
   130e8:	add	r0, r0, ip
   130ec:	add	r0, r1, r0, ror #18
   130f0:	ldr	ip, [pc, #1648]	; 13768 <dcngettext@plt+0x2778>
   130f4:	str	fp, [sp, #52]	; 0x34
   130f8:	add	ip, fp, ip
   130fc:	add	ip, ip, r2
   13100:	eor	r2, r1, r0
   13104:	and	r2, r2, r3
   13108:	eor	r2, r2, r1
   1310c:	add	r2, r2, ip
   13110:	add	r2, r0, r2, ror #12
   13114:	ldr	ip, [pc, #1616]	; 1376c <dcngettext@plt+0x277c>
   13118:	add	ip, r6, ip
   1311c:	add	ip, ip, r3
   13120:	eor	r3, r0, r2
   13124:	and	r3, r3, r1
   13128:	eor	r3, r3, r0
   1312c:	add	r3, r3, ip
   13130:	add	r3, r2, r3, ror #27
   13134:	ldr	ip, [pc, #1588]	; 13770 <dcngettext@plt+0x2780>
   13138:	ldr	fp, [sp, #44]	; 0x2c
   1313c:	add	ip, fp, ip
   13140:	add	ip, ip, r1
   13144:	eor	r1, r2, r3
   13148:	and	r1, r1, r0
   1314c:	eor	r1, r1, r2
   13150:	add	r1, r1, ip
   13154:	add	r1, r3, r1, ror #23
   13158:	ldr	ip, [pc, #1556]	; 13774 <dcngettext@plt+0x2784>
   1315c:	add	ip, r4, ip
   13160:	add	ip, ip, r0
   13164:	eor	r0, r3, r1
   13168:	and	r0, r0, r2
   1316c:	eor	r0, r0, r3
   13170:	add	r0, r0, ip
   13174:	add	r0, r1, r0, ror #18
   13178:	ldr	ip, [pc, #1528]	; 13778 <dcngettext@plt+0x2788>
   1317c:	ldr	fp, [sp, #28]
   13180:	add	ip, fp, ip
   13184:	add	ip, ip, r2
   13188:	eor	r2, r1, r0
   1318c:	and	r2, r2, r3
   13190:	eor	r2, r2, r1
   13194:	add	r2, r2, ip
   13198:	add	r2, r0, r2, ror #12
   1319c:	ldr	ip, [pc, #1496]	; 1377c <dcngettext@plt+0x278c>
   131a0:	ldr	fp, [sp, #40]	; 0x28
   131a4:	add	ip, fp, ip
   131a8:	add	ip, ip, r3
   131ac:	eor	r3, r0, r2
   131b0:	and	r3, r3, r1
   131b4:	eor	r3, r3, r0
   131b8:	add	r3, r3, ip
   131bc:	add	r3, r2, r3, ror #27
   131c0:	ldr	ip, [pc, #1464]	; 13780 <dcngettext@plt+0x2790>
   131c4:	ldr	fp, [sp, #8]
   131c8:	add	ip, fp, ip
   131cc:	add	ip, ip, r1
   131d0:	eor	r1, r2, r3
   131d4:	and	r1, r1, r0
   131d8:	eor	r1, r1, r2
   131dc:	add	r1, r1, ip
   131e0:	add	r1, r3, r1, ror #23
   131e4:	ldr	ip, [pc, #1432]	; 13784 <dcngettext@plt+0x2794>
   131e8:	add	ip, r8, ip
   131ec:	add	r0, ip, r0
   131f0:	eor	ip, r3, r1
   131f4:	and	ip, ip, r2
   131f8:	eor	ip, ip, r3
   131fc:	add	r0, ip, r0
   13200:	add	r0, r1, r0, ror #18
   13204:	ldr	ip, [pc, #1404]	; 13788 <dcngettext@plt+0x2798>
   13208:	ldr	fp, [sp, #36]	; 0x24
   1320c:	add	ip, fp, ip
   13210:	add	r2, ip, r2
   13214:	eor	ip, r1, r0
   13218:	and	ip, ip, r3
   1321c:	eor	ip, ip, r1
   13220:	add	r2, ip, r2
   13224:	add	r2, r0, r2, ror #12
   13228:	ldr	ip, [pc, #1372]	; 1378c <dcngettext@plt+0x279c>
   1322c:	ldr	fp, [sp, #4]
   13230:	add	ip, fp, ip
   13234:	add	r3, ip, r3
   13238:	eor	ip, r0, r2
   1323c:	and	ip, ip, r1
   13240:	eor	ip, ip, r0
   13244:	add	r3, ip, r3
   13248:	add	r3, r2, r3, ror #27
   1324c:	ldr	ip, [pc, #1340]	; 13790 <dcngettext@plt+0x27a0>
   13250:	add	ip, r7, ip
   13254:	add	r1, ip, r1
   13258:	eor	ip, r2, r3
   1325c:	and	ip, ip, r0
   13260:	eor	ip, ip, r2
   13264:	add	r1, ip, r1
   13268:	add	r1, r3, r1, ror #23
   1326c:	ldr	ip, [pc, #1312]	; 13794 <dcngettext@plt+0x27a4>
   13270:	ldr	fp, [sp, #32]
   13274:	add	ip, fp, ip
   13278:	add	r0, ip, r0
   1327c:	eor	ip, r3, r1
   13280:	and	ip, ip, r2
   13284:	eor	ip, ip, r3
   13288:	add	ip, ip, r0
   1328c:	add	ip, r1, ip, ror #18
   13290:	eor	r0, r1, ip
   13294:	ldr	fp, [pc, #1276]	; 13798 <dcngettext@plt+0x27a8>
   13298:	add	fp, r9, fp
   1329c:	add	fp, fp, r2
   132a0:	and	r2, r3, r0
   132a4:	eor	r2, r2, r1
   132a8:	add	r2, r2, fp
   132ac:	add	r2, ip, r2, ror #12
   132b0:	ldr	fp, [pc, #1252]	; 1379c <dcngettext@plt+0x27ac>
   132b4:	add	fp, r6, fp
   132b8:	add	r3, fp, r3
   132bc:	eor	r0, r0, r2
   132c0:	add	r3, r0, r3
   132c4:	add	r3, r2, r3, ror #28
   132c8:	ldr	r0, [pc, #1232]	; 137a0 <dcngettext@plt+0x27b0>
   132cc:	ldr	fp, [sp, #36]	; 0x24
   132d0:	add	r0, fp, r0
   132d4:	add	r0, r0, r1
   132d8:	eor	r1, ip, r2
   132dc:	eor	r1, r1, r3
   132e0:	add	r1, r1, r0
   132e4:	add	r1, r3, r1, ror #21
   132e8:	ldr	r0, [pc, #1204]	; 137a4 <dcngettext@plt+0x27b4>
   132ec:	str	sl, [sp, #60]	; 0x3c
   132f0:	add	r0, sl, r0
   132f4:	add	r0, r0, ip
   132f8:	eor	ip, r2, r3
   132fc:	eor	ip, ip, r1
   13300:	add	ip, ip, r0
   13304:	add	ip, r1, ip, ror #16
   13308:	ldr	r0, [pc, #1176]	; 137a8 <dcngettext@plt+0x27b8>
   1330c:	ldr	sl, [sp, #8]
   13310:	add	r0, sl, r0
   13314:	add	r2, r0, r2
   13318:	eor	r0, r3, r1
   1331c:	eor	r0, r0, ip
   13320:	add	r2, r0, r2
   13324:	add	r2, ip, r2, ror #9
   13328:	ldr	r0, [pc, #1148]	; 137ac <dcngettext@plt+0x27bc>
   1332c:	ldr	fp, [sp, #24]
   13330:	add	r0, fp, r0
   13334:	add	r0, r0, r3
   13338:	eor	r3, r1, ip
   1333c:	eor	r3, r3, r2
   13340:	add	r3, r3, r0
   13344:	add	r3, r2, r3, ror #28
   13348:	ldr	r0, [pc, #1120]	; 137b0 <dcngettext@plt+0x27c0>
   1334c:	ldr	fp, [sp, #28]
   13350:	add	r0, fp, r0
   13354:	add	r0, r0, r1
   13358:	eor	r1, ip, r2
   1335c:	eor	r1, r1, r3
   13360:	add	r1, r1, r0
   13364:	add	r1, r3, r1, ror #21
   13368:	ldr	r0, [pc, #1092]	; 137b4 <dcngettext@plt+0x27c4>
   1336c:	ldr	sl, [sp, #32]
   13370:	add	r0, sl, r0
   13374:	add	ip, r0, ip
   13378:	eor	r0, r2, r3
   1337c:	eor	r0, r0, r1
   13380:	add	ip, r0, ip
   13384:	add	ip, r1, ip, ror #16
   13388:	ldr	r0, [pc, #1064]	; 137b8 <dcngettext@plt+0x27c8>
   1338c:	ldr	sl, [sp, #44]	; 0x2c
   13390:	add	r0, sl, r0
   13394:	add	r2, r0, r2
   13398:	eor	r0, r3, r1
   1339c:	eor	r0, r0, ip
   133a0:	add	r0, r0, r2
   133a4:	add	r0, ip, r0, ror #9
   133a8:	ldr	r2, [pc, #1036]	; 137bc <dcngettext@plt+0x27cc>
   133ac:	ldr	sl, [sp, #4]
   133b0:	add	r2, sl, r2
   133b4:	add	r2, r2, r3
   133b8:	eor	r3, r1, ip
   133bc:	eor	r3, r3, r0
   133c0:	add	r3, r3, r2
   133c4:	add	r3, r0, r3, ror #28
   133c8:	ldr	r2, [pc, #1008]	; 137c0 <dcngettext@plt+0x27d0>
   133cc:	ldr	fp, [sp, #52]	; 0x34
   133d0:	add	r2, fp, r2
   133d4:	add	r1, r2, r1
   133d8:	eor	r2, ip, r0
   133dc:	eor	r2, r2, r3
   133e0:	add	r2, r2, r1
   133e4:	add	r2, r3, r2, ror #21
   133e8:	ldr	r1, [pc, #980]	; 137c4 <dcngettext@plt+0x27d4>
   133ec:	str	r8, [sp, #52]	; 0x34
   133f0:	add	r1, r8, r1
   133f4:	add	ip, r1, ip
   133f8:	eor	r1, r0, r3
   133fc:	eor	r1, r1, r2
   13400:	add	r1, r1, ip
   13404:	add	r1, r2, r1, ror #16
   13408:	ldr	ip, [pc, #952]	; 137c8 <dcngettext@plt+0x27d8>
   1340c:	str	r5, [sp, #56]	; 0x38
   13410:	add	ip, r5, ip
   13414:	add	ip, ip, r0
   13418:	eor	r0, r3, r2
   1341c:	eor	r0, r0, r1
   13420:	add	r0, r0, ip
   13424:	add	r0, r1, r0, ror #9
   13428:	ldr	ip, [pc, #924]	; 137cc <dcngettext@plt+0x27dc>
   1342c:	ldr	r8, [sp, #40]	; 0x28
   13430:	add	ip, r8, ip
   13434:	add	ip, ip, r3
   13438:	eor	r3, r2, r1
   1343c:	eor	r3, r3, r0
   13440:	add	r3, r3, ip
   13444:	add	r3, r0, r3, ror #28
   13448:	ldr	ip, [pc, #896]	; 137d0 <dcngettext@plt+0x27e0>
   1344c:	mov	r8, r9
   13450:	add	ip, r9, ip
   13454:	add	r2, ip, r2
   13458:	eor	ip, r1, r0
   1345c:	eor	ip, ip, r3
   13460:	add	r2, ip, r2
   13464:	add	r2, r3, r2, ror #21
   13468:	ldr	ip, [pc, #868]	; 137d4 <dcngettext@plt+0x27e4>
   1346c:	mov	r5, r4
   13470:	add	ip, r4, ip
   13474:	add	ip, ip, r1
   13478:	eor	r1, r0, r3
   1347c:	eor	r1, r1, r2
   13480:	add	r1, r1, ip
   13484:	add	r1, r2, r1, ror #16
   13488:	ldr	ip, [pc, #840]	; 137d8 <dcngettext@plt+0x27e8>
   1348c:	add	ip, r7, ip
   13490:	add	ip, ip, r0
   13494:	eor	r0, r3, r2
   13498:	eor	r0, r0, r1
   1349c:	add	r0, r0, ip
   134a0:	add	r0, r1, r0, ror #9
   134a4:	ldr	ip, [pc, #816]	; 137dc <dcngettext@plt+0x27ec>
   134a8:	add	ip, fp, ip
   134ac:	add	r3, ip, r3
   134b0:	mvn	ip, r2
   134b4:	orr	ip, ip, r0
   134b8:	eor	ip, ip, r1
   134bc:	add	r3, ip, r3
   134c0:	add	r3, r0, r3, ror #26
   134c4:	ldr	ip, [pc, #788]	; 137e0 <dcngettext@plt+0x27f0>
   134c8:	ldr	r9, [sp, #32]
   134cc:	add	ip, r9, ip
   134d0:	add	r2, ip, r2
   134d4:	mvn	sl, r1
   134d8:	orr	sl, sl, r3
   134dc:	eor	sl, sl, r0
   134e0:	add	r2, sl, r2
   134e4:	add	r2, r3, r2, ror #22
   134e8:	ldr	ip, [pc, #756]	; 137e4 <dcngettext@plt+0x27f4>
   134ec:	ldr	r4, [sp, #8]
   134f0:	add	ip, r4, ip
   134f4:	add	r1, ip, r1
   134f8:	mvn	r9, r0
   134fc:	orr	r9, r9, r2
   13500:	eor	r9, r9, r3
   13504:	add	r1, r9, r1
   13508:	add	r1, r2, r1, ror #17
   1350c:	ldr	ip, [pc, #724]	; 137e8 <dcngettext@plt+0x27f8>
   13510:	add	ip, r6, ip
   13514:	add	r0, ip, r0
   13518:	mvn	r9, r3
   1351c:	orr	r9, r9, r1
   13520:	eor	r9, r9, r2
   13524:	add	r0, r9, r0
   13528:	add	r0, r1, r0, ror #11
   1352c:	ldr	ip, [pc, #696]	; 137ec <dcngettext@plt+0x27fc>
   13530:	add	ip, r8, ip
   13534:	add	r3, ip, r3
   13538:	mvn	r8, r2
   1353c:	orr	r8, r8, r0
   13540:	eor	r8, r8, r1
   13544:	add	r3, r8, r3
   13548:	add	r3, r0, r3, ror #26
   1354c:	ldr	ip, [pc, #668]	; 137f0 <dcngettext@plt+0x2800>
   13550:	ldr	r8, [sp, #52]	; 0x34
   13554:	add	ip, r8, ip
   13558:	add	r2, ip, r2
   1355c:	mvn	r8, r1
   13560:	orr	r8, r8, r3
   13564:	eor	r8, r8, r0
   13568:	add	r2, r8, r2
   1356c:	add	r2, r3, r2, ror #22
   13570:	ldr	ip, [pc, #636]	; 137f4 <dcngettext@plt+0x2804>
   13574:	ldr	r4, [sp, #44]	; 0x2c
   13578:	add	ip, r4, ip
   1357c:	add	r1, ip, r1
   13580:	mvn	r6, r0
   13584:	orr	r6, r6, r2
   13588:	eor	r6, r6, r3
   1358c:	add	r1, r6, r1
   13590:	add	r1, r2, r1, ror #17
   13594:	ldr	ip, [pc, #604]	; 137f8 <dcngettext@plt+0x2808>
   13598:	ldr	fp, [sp, #24]
   1359c:	add	ip, fp, ip
   135a0:	add	r0, ip, r0
   135a4:	mvn	r6, r3
   135a8:	orr	r6, r6, r1
   135ac:	eor	r6, r6, r2
   135b0:	add	r0, r6, r0
   135b4:	add	r0, r1, r0, ror #11
   135b8:	ldr	ip, [pc, #572]	; 137fc <dcngettext@plt+0x280c>
   135bc:	ldr	r9, [sp, #36]	; 0x24
   135c0:	add	ip, r9, ip
   135c4:	add	r3, ip, r3
   135c8:	mvn	r6, r2
   135cc:	orr	r6, r6, r0
   135d0:	eor	r6, r6, r1
   135d4:	add	r3, r6, r3
   135d8:	add	r3, r0, r3, ror #26
   135dc:	ldr	ip, [pc, #540]	; 13800 <dcngettext@plt+0x2810>
   135e0:	add	ip, r5, ip
   135e4:	add	r2, ip, r2
   135e8:	mvn	r5, r1
   135ec:	orr	r5, r5, r3
   135f0:	eor	r5, r5, r0
   135f4:	add	r2, r5, r2
   135f8:	add	r2, r3, r2, ror #22
   135fc:	ldr	ip, [pc, #512]	; 13804 <dcngettext@plt+0x2814>
   13600:	ldr	r5, [sp, #56]	; 0x38
   13604:	add	ip, r5, ip
   13608:	add	r1, ip, r1
   1360c:	mvn	r5, r0
   13610:	orr	r5, r5, r2
   13614:	eor	r5, r5, r3
   13618:	add	r1, r5, r1
   1361c:	add	r1, r2, r1, ror #17
   13620:	ldr	ip, [pc, #480]	; 13808 <dcngettext@plt+0x2818>
   13624:	ldr	r4, [sp, #4]
   13628:	add	ip, r4, ip
   1362c:	add	r0, ip, r0
   13630:	mvn	r4, r3
   13634:	orr	r4, r4, r1
   13638:	eor	r4, r4, r2
   1363c:	add	r0, r4, r0
   13640:	add	r0, r1, r0, ror #11
   13644:	ldr	ip, [pc, #448]	; 1380c <dcngettext@plt+0x281c>
   13648:	ldr	fp, [sp, #28]
   1364c:	add	ip, fp, ip
   13650:	add	ip, ip, r3
   13654:	mvn	r3, r2
   13658:	orr	r3, r3, r0
   1365c:	eor	r3, r3, r1
   13660:	add	r3, r3, ip
   13664:	add	r3, r0, r3, ror #26
   13668:	ldr	ip, [pc, #416]	; 13810 <dcngettext@plt+0x2820>
   1366c:	ldr	sl, [sp, #60]	; 0x3c
   13670:	add	ip, sl, ip
   13674:	add	ip, ip, r2
   13678:	mvn	r2, r1
   1367c:	orr	r2, r2, r3
   13680:	eor	r2, r2, r0
   13684:	add	r2, r2, ip
   13688:	add	r2, r3, r2, ror #22
   1368c:	ldr	ip, [pc, #384]	; 13814 <dcngettext@plt+0x2824>
   13690:	add	ip, r7, ip
   13694:	add	ip, ip, r1
   13698:	mvn	r1, r0
   1369c:	orr	r1, r1, r2
   136a0:	eor	r1, r1, r3
   136a4:	add	r1, r1, ip
   136a8:	add	r1, r2, r1, ror #17
   136ac:	ldr	ip, [pc, #356]	; 13818 <dcngettext@plt+0x2828>
   136b0:	ldr	r8, [sp, #40]	; 0x28
   136b4:	add	ip, r8, ip
   136b8:	add	ip, ip, r0
   136bc:	mvn	r0, r3
   136c0:	orr	r0, r0, r1
   136c4:	eor	r0, r0, r2
   136c8:	add	r0, r0, ip
   136cc:	add	r0, r1, r0, ror #11
   136d0:	ldr	ip, [sp, #48]	; 0x30
   136d4:	add	r3, ip, r3
   136d8:	str	r3, [sp, #48]	; 0x30
   136dc:	ldr	r3, [sp, #16]
   136e0:	add	r3, r3, r0
   136e4:	str	r3, [sp, #16]
   136e8:	ldr	r0, [sp, #20]
   136ec:	add	r3, r0, r1
   136f0:	str	r3, [sp, #20]
   136f4:	ldr	r1, [sp, #12]
   136f8:	add	r3, r1, r2
   136fc:	str	r3, [sp, #12]
   13700:	ldr	r3, [sp, #64]	; 0x40
   13704:	cmp	r3, lr
   13708:	bhi	12dc8 <dcngettext@plt+0x1dd8>
   1370c:	ldr	r7, [sp, #16]
   13710:	ldr	r5, [sp, #20]
   13714:	ldr	r3, [sp, #68]	; 0x44
   13718:	ldr	r2, [sp, #48]	; 0x30
   1371c:	str	r2, [r3]
   13720:	str	r7, [r3, #4]
   13724:	str	r5, [r3, #8]
   13728:	ldr	r2, [sp, #12]
   1372c:	str	r2, [r3, #12]
   13730:	add	sp, sp, #76	; 0x4c
   13734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13738:			; <UNDEFINED> instruction: 0xc1bdceee
   1373c:			; <UNDEFINED> instruction: 0xf57c0faf
   13740:	strmi	ip, [r7, sl, lsr #12]
   13744:	ldmdage	r0!, {r0, r1, r4, r9, sl, lr}
   13748:	stc2l	5, cr9, [r6, #-4]
   1374c:	stmibvs	r0, {r3, r4, r6, r7, fp, ip, pc}
   13750:	blhi	1151614 <stdout@@GLIBC_2.4+0x11284a8>
   13754:	blvs	fe417be4 <stdout@@GLIBC_2.4+0xfe3eea78>
   13758:	ldc2	1, cr7, [r8, #588]	; 0x24c
   1375c:	ldmibmi	r4!, {r0, r5, fp}
   13760:	subgt	fp, r0, r0, asr #6
   13764:			; <UNDEFINED> instruction: 0x265e5a51
   13768:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   1376c:			; <UNDEFINED> instruction: 0xd62f105d
   13770:	subeq	r1, r4, #1392508928	; 0x53000000
   13774:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   13778:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   1377c:	mvncs	ip, r6, ror #27
   13780:	teqgt	r7, #56098816	; 0x3580000
   13784:			; <UNDEFINED> instruction: 0xf4d50d87
   13788:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   1378c:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   13790:	stc2l	3, cr10, [pc], #992	; 13b78 <dcngettext@plt+0x2b88>
   13794:			; <UNDEFINED> instruction: 0x676f02d9
   13798:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   1379c:			; <UNDEFINED> instruction: 0xfffa3942
   137a0:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   137a4:	ldfvss	f6, [sp, #136]	; 0x88
   137a8:	vcmla.f16	d19, d5, d12, #270
   137ac:	ldrtge	lr, [lr], #2628	; 0xa44
   137b0:	blmi	ff7c765c <stdout@@GLIBC_2.4+0xff79e4f0>
   137b4:			; <UNDEFINED> instruction: 0xf6bb4b60
   137b8:	mrclt	12, 5, fp, cr15, cr0, {3}
   137bc:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   137c0:	b	fe85d7b0 <stdout@@GLIBC_2.4+0xfe834644>
   137c4:	strbtle	r3, [pc], #133	; 137cc <dcngettext@plt+0x27dc>
   137c8:	streq	r1, [r8], #3333	; 0xd05
   137cc:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   137d0:	ldrb	r9, [fp], r5, ror #19
   137d4:	svcne	0x00a27cf8
   137d8:	strtgt	r5, [ip], #1637	; 0x665
   137dc:	vld1.16	{d2-d5}, [r9], r4
   137e0:	msrmi	CPSR_fx, #604	; 0x25c
   137e4:	blge	fe51c688 <stdout@@GLIBC_2.4+0xfe4f351c>
   137e8:	ldc2	0, cr10, [r3], {57}	; 0x39
   137ec:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   137f0:	svchi	0x000ccc92
   137f4:			; <UNDEFINED> instruction: 0xffeff47d
   137f8:	strhi	r5, [r4, #3537]	; 0xdd1
   137fc:	svcvs	0x00a87e4f
   13800:	cdp2	6, 2, cr14, cr12, cr0, {7}
   13804:	movwge	r4, #4884	; 0x1314
   13808:	adfmi<illegal precision>p	f1, f0, f1
   1380c:			; <UNDEFINED> instruction: 0xf7537e82
   13810:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   13814:	bcs	ff608308 <stdout@@GLIBC_2.4+0xff5df19c>
   13818:	bl	fe1c8664 <stdout@@GLIBC_2.4+0xfe19f4f8>
   1381c:	push	{r4, r5, r6, r7, r8, lr}
   13820:	mov	r4, r0
   13824:	mov	r6, r1
   13828:	ldr	r0, [r0, #24]
   1382c:	cmp	r0, #55	; 0x37
   13830:	movls	r5, #16
   13834:	movhi	r5, #32
   13838:	ldr	r3, [r4, #16]
   1383c:	add	r3, r0, r3
   13840:	str	r3, [r4, #16]
   13844:	cmp	r0, r3
   13848:	ldrhi	r2, [r4, #20]
   1384c:	addhi	r2, r2, #1
   13850:	strhi	r2, [r4, #20]
   13854:	add	r2, r4, r5, lsl #2
   13858:	lsl	r1, r3, #3
   1385c:	str	r1, [r2, #20]
   13860:	ldr	r1, [r4, #20]
   13864:	lsr	r3, r3, #29
   13868:	orr	r3, r3, r1, lsl #3
   1386c:	str	r3, [r2, #24]
   13870:	add	r7, r4, #28
   13874:	sub	r5, r5, #-1073741822	; 0xc0000002
   13878:	lsl	r5, r5, #2
   1387c:	sub	r2, r5, r0
   13880:	ldr	r1, [pc, #36]	; 138ac <dcngettext@plt+0x28bc>
   13884:	add	r0, r7, r0
   13888:	bl	10dc8 <memcpy@plt>
   1388c:	mov	r2, r4
   13890:	add	r1, r5, #8
   13894:	mov	r0, r7
   13898:	bl	12d5c <dcngettext@plt+0x1d6c>
   1389c:	mov	r1, r6
   138a0:	mov	r0, r4
   138a4:	bl	12d34 <dcngettext@plt+0x1d44>
   138a8:	pop	{r4, r5, r6, r7, r8, pc}
   138ac:	andeq	r7, r1, r4, lsr #27
   138b0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138b4:	mov	r8, r0
   138b8:	mov	r5, r1
   138bc:	mov	r6, r2
   138c0:	ldr	r4, [r2, #24]
   138c4:	cmp	r4, #0
   138c8:	bne	139a0 <dcngettext@plt+0x29b0>
   138cc:	cmp	r5, #63	; 0x3f
   138d0:	bls	1396c <dcngettext@plt+0x297c>
   138d4:	tst	r8, #3
   138d8:	beq	13a14 <dcngettext@plt+0x2a24>
   138dc:	cmp	r5, #64	; 0x40
   138e0:	bls	1396c <dcngettext@plt+0x297c>
   138e4:	mov	r9, r5
   138e8:	mov	r4, r8
   138ec:	add	r7, r6, #28
   138f0:	mov	sl, #64	; 0x40
   138f4:	mov	r3, r4
   138f8:	mov	r2, r7
   138fc:	add	r1, r4, #64	; 0x40
   13900:	ldr	fp, [r3]
   13904:	ldr	lr, [r3, #4]
   13908:	ldr	ip, [r3, #8]
   1390c:	ldr	r0, [r3, #12]
   13910:	str	fp, [r2]
   13914:	str	lr, [r2, #4]
   13918:	str	ip, [r2, #8]
   1391c:	str	r0, [r2, #12]
   13920:	add	r3, r3, #16
   13924:	add	r2, r2, #16
   13928:	cmp	r3, r1
   1392c:	bne	13900 <dcngettext@plt+0x2910>
   13930:	mov	r2, r6
   13934:	mov	r1, sl
   13938:	mov	r0, r7
   1393c:	bl	12d5c <dcngettext@plt+0x1d6c>
   13940:	add	r4, r4, #64	; 0x40
   13944:	sub	r9, r9, #64	; 0x40
   13948:	cmp	r9, #64	; 0x40
   1394c:	bhi	138f4 <dcngettext@plt+0x2904>
   13950:	sub	r3, r5, #65	; 0x41
   13954:	bic	r2, r3, #63	; 0x3f
   13958:	add	r2, r2, #64	; 0x40
   1395c:	add	r8, r8, r2
   13960:	sub	r5, r5, #64	; 0x40
   13964:	bic	r3, r3, #63	; 0x3f
   13968:	sub	r5, r5, r3
   1396c:	cmp	r5, #0
   13970:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13974:	ldr	r4, [r6, #24]
   13978:	add	r7, r6, #28
   1397c:	mov	r2, r5
   13980:	mov	r1, r8
   13984:	add	r0, r7, r4
   13988:	bl	10dc8 <memcpy@plt>
   1398c:	add	r5, r5, r4
   13990:	cmp	r5, #63	; 0x3f
   13994:	bhi	13a34 <dcngettext@plt+0x2a44>
   13998:	str	r5, [r6, #24]
   1399c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139a0:	rsb	r7, r4, #128	; 0x80
   139a4:	cmp	r7, r1
   139a8:	movcs	r7, r1
   139ac:	add	r9, r2, #28
   139b0:	mov	r2, r7
   139b4:	mov	r1, r0
   139b8:	add	r0, r9, r4
   139bc:	bl	10dc8 <memcpy@plt>
   139c0:	ldr	r1, [r6, #24]
   139c4:	add	r1, r7, r1
   139c8:	str	r1, [r6, #24]
   139cc:	cmp	r1, #64	; 0x40
   139d0:	bhi	139e0 <dcngettext@plt+0x29f0>
   139d4:	add	r8, r8, r7
   139d8:	sub	r5, r5, r7
   139dc:	b	138cc <dcngettext@plt+0x28dc>
   139e0:	mov	r2, r6
   139e4:	bic	r1, r1, #63	; 0x3f
   139e8:	mov	r0, r9
   139ec:	bl	12d5c <dcngettext@plt+0x1d6c>
   139f0:	ldr	r2, [r6, #24]
   139f4:	and	r2, r2, #63	; 0x3f
   139f8:	str	r2, [r6, #24]
   139fc:	add	r1, r4, r7
   13a00:	bic	r1, r1, #63	; 0x3f
   13a04:	add	r1, r9, r1
   13a08:	mov	r0, r9
   13a0c:	bl	10dc8 <memcpy@plt>
   13a10:	b	139d4 <dcngettext@plt+0x29e4>
   13a14:	bic	r4, r5, #63	; 0x3f
   13a18:	mov	r2, r6
   13a1c:	mov	r1, r4
   13a20:	mov	r0, r8
   13a24:	bl	12d5c <dcngettext@plt+0x1d6c>
   13a28:	add	r8, r8, r4
   13a2c:	and	r5, r5, #63	; 0x3f
   13a30:	b	1396c <dcngettext@plt+0x297c>
   13a34:	mov	r2, r6
   13a38:	mov	r1, #64	; 0x40
   13a3c:	mov	r0, r7
   13a40:	bl	12d5c <dcngettext@plt+0x1d6c>
   13a44:	sub	r5, r5, #64	; 0x40
   13a48:	mov	r2, r5
   13a4c:	add	r1, r6, #92	; 0x5c
   13a50:	mov	r0, r7
   13a54:	bl	10dc8 <memcpy@plt>
   13a58:	b	13998 <dcngettext@plt+0x29a8>
   13a5c:	push	{r4, r5, r6, lr}
   13a60:	sub	sp, sp, #160	; 0xa0
   13a64:	mov	r5, r0
   13a68:	mov	r6, r1
   13a6c:	mov	r4, r2
   13a70:	add	r0, sp, #4
   13a74:	bl	12cf0 <dcngettext@plt+0x1d00>
   13a78:	add	r2, sp, #4
   13a7c:	mov	r1, r6
   13a80:	mov	r0, r5
   13a84:	bl	138b0 <dcngettext@plt+0x28c0>
   13a88:	mov	r1, r4
   13a8c:	add	r0, sp, #4
   13a90:	bl	1381c <dcngettext@plt+0x282c>
   13a94:	add	sp, sp, #160	; 0xa0
   13a98:	pop	{r4, r5, r6, pc}
   13a9c:	push	{r4, r5, lr}
   13aa0:	sub	sp, sp, #20
   13aa4:	ldr	r1, [sp, #40]	; 0x28
   13aa8:	str	r1, [sp, #8]
   13aac:	ldrd	r4, [sp, #32]
   13ab0:	strd	r4, [sp]
   13ab4:	bl	10d98 <posix_fadvise64@plt>
   13ab8:	add	sp, sp, #20
   13abc:	pop	{r4, r5, pc}
   13ac0:	cmp	r0, #0
   13ac4:	bxeq	lr
   13ac8:	push	{r4, lr}
   13acc:	sub	sp, sp, #16
   13ad0:	mov	r4, r1
   13ad4:	bl	10f30 <fileno@plt>
   13ad8:	str	r4, [sp, #8]
   13adc:	mov	r2, #0
   13ae0:	mov	r3, #0
   13ae4:	strd	r2, [sp]
   13ae8:	bl	10d98 <posix_fadvise64@plt>
   13aec:	add	sp, sp, #16
   13af0:	pop	{r4, pc}
   13af4:	push	{r4, r5, r6, lr}
   13af8:	sub	sp, sp, #8
   13afc:	mov	r4, r0
   13b00:	bl	10f30 <fileno@plt>
   13b04:	cmp	r0, #0
   13b08:	blt	13b80 <dcngettext@plt+0x2b90>
   13b0c:	mov	r0, r4
   13b10:	bl	10e94 <__freading@plt>
   13b14:	cmp	r0, #0
   13b18:	beq	13b4c <dcngettext@plt+0x2b5c>
   13b1c:	mov	r0, r4
   13b20:	bl	10f30 <fileno@plt>
   13b24:	mov	r3, #1
   13b28:	str	r3, [sp]
   13b2c:	mov	r2, #0
   13b30:	mov	r3, #0
   13b34:	bl	10e40 <lseek64@plt>
   13b38:	mvn	r2, #0
   13b3c:	mvn	r3, #0
   13b40:	cmp	r1, r3
   13b44:	cmpeq	r0, r2
   13b48:	beq	13b8c <dcngettext@plt+0x2b9c>
   13b4c:	mov	r0, r4
   13b50:	bl	13b9c <dcngettext@plt+0x2bac>
   13b54:	cmp	r0, #0
   13b58:	beq	13b8c <dcngettext@plt+0x2b9c>
   13b5c:	bl	10ef4 <__errno_location@plt>
   13b60:	mov	r5, r0
   13b64:	ldr	r6, [r0]
   13b68:	mov	r0, r4
   13b6c:	bl	10f48 <fclose@plt>
   13b70:	cmp	r6, #0
   13b74:	strne	r6, [r5]
   13b78:	mvnne	r0, #0
   13b7c:	b	13b94 <dcngettext@plt+0x2ba4>
   13b80:	mov	r0, r4
   13b84:	bl	10f48 <fclose@plt>
   13b88:	b	13b94 <dcngettext@plt+0x2ba4>
   13b8c:	mov	r0, r4
   13b90:	bl	10f48 <fclose@plt>
   13b94:	add	sp, sp, #8
   13b98:	pop	{r4, r5, r6, pc}
   13b9c:	push	{r4, lr}
   13ba0:	sub	sp, sp, #8
   13ba4:	subs	r4, r0, #0
   13ba8:	beq	13bbc <dcngettext@plt+0x2bcc>
   13bac:	mov	r0, r4
   13bb0:	bl	10e94 <__freading@plt>
   13bb4:	cmp	r0, #0
   13bb8:	bne	13bcc <dcngettext@plt+0x2bdc>
   13bbc:	mov	r0, r4
   13bc0:	bl	10da4 <fflush@plt>
   13bc4:	add	sp, sp, #8
   13bc8:	pop	{r4, pc}
   13bcc:	ldr	r3, [r4]
   13bd0:	tst	r3, #256	; 0x100
   13bd4:	bne	13be4 <dcngettext@plt+0x2bf4>
   13bd8:	mov	r0, r4
   13bdc:	bl	10da4 <fflush@plt>
   13be0:	b	13bc4 <dcngettext@plt+0x2bd4>
   13be4:	mov	r3, #1
   13be8:	str	r3, [sp]
   13bec:	mov	r2, #0
   13bf0:	mov	r3, #0
   13bf4:	mov	r0, r4
   13bf8:	bl	13cf4 <dcngettext@plt+0x2d04>
   13bfc:	b	13bd8 <dcngettext@plt+0x2be8>
   13c00:	push	{r4, r5, r6, lr}
   13c04:	mov	r5, r1
   13c08:	bl	10fa8 <fopen64@plt>
   13c0c:	subs	r4, r0, #0
   13c10:	beq	13c24 <dcngettext@plt+0x2c34>
   13c14:	mov	r0, r4
   13c18:	bl	10f30 <fileno@plt>
   13c1c:	cmp	r0, #2
   13c20:	bls	13c2c <dcngettext@plt+0x2c3c>
   13c24:	mov	r0, r4
   13c28:	pop	{r4, r5, r6, pc}
   13c2c:	bl	15900 <dcngettext@plt+0x4910>
   13c30:	subs	r6, r0, #0
   13c34:	blt	13c7c <dcngettext@plt+0x2c8c>
   13c38:	mov	r0, r4
   13c3c:	bl	13af4 <dcngettext@plt+0x2b04>
   13c40:	cmp	r0, #0
   13c44:	bne	13c5c <dcngettext@plt+0x2c6c>
   13c48:	mov	r1, r5
   13c4c:	mov	r0, r6
   13c50:	bl	10d50 <fdopen@plt>
   13c54:	subs	r4, r0, #0
   13c58:	bne	13c24 <dcngettext@plt+0x2c34>
   13c5c:	bl	10ef4 <__errno_location@plt>
   13c60:	mov	r4, r0
   13c64:	ldr	r5, [r0]
   13c68:	mov	r0, r6
   13c6c:	bl	10fe4 <close@plt>
   13c70:	str	r5, [r4]
   13c74:	mov	r4, #0
   13c78:	b	13c24 <dcngettext@plt+0x2c34>
   13c7c:	bl	10ef4 <__errno_location@plt>
   13c80:	mov	r5, r0
   13c84:	ldr	r6, [r0]
   13c88:	mov	r0, r4
   13c8c:	bl	13af4 <dcngettext@plt+0x2b04>
   13c90:	str	r6, [r5]
   13c94:	mov	r4, #0
   13c98:	b	13c24 <dcngettext@plt+0x2c34>
   13c9c:	push	{r4, r5, lr}
   13ca0:	sub	sp, sp, #12
   13ca4:	mov	r5, r0
   13ca8:	bl	10ef4 <__errno_location@plt>
   13cac:	mov	r4, r0
   13cb0:	ldr	r3, [r0]
   13cb4:	str	r3, [sp]
   13cb8:	str	r3, [sp, #4]
   13cbc:	mov	r3, #0
   13cc0:	str	r3, [r0]
   13cc4:	mov	r0, r5
   13cc8:	bl	10db0 <free@plt>
   13ccc:	ldr	r3, [r4]
   13cd0:	cmp	r3, #0
   13cd4:	moveq	r3, #4
   13cd8:	movne	r3, #0
   13cdc:	add	r2, sp, #8
   13ce0:	add	r3, r2, r3
   13ce4:	ldr	r3, [r3, #-8]
   13ce8:	str	r3, [r4]
   13cec:	add	sp, sp, #12
   13cf0:	pop	{r4, r5, pc}
   13cf4:	push	{r4, r5, r6, r7, lr}
   13cf8:	sub	sp, sp, #12
   13cfc:	mov	r4, r0
   13d00:	mov	r6, r2
   13d04:	mov	r7, r3
   13d08:	ldr	r5, [sp, #32]
   13d0c:	ldr	r2, [r0, #8]
   13d10:	ldr	r3, [r0, #4]
   13d14:	cmp	r2, r3
   13d18:	beq	13d38 <dcngettext@plt+0x2d48>
   13d1c:	str	r5, [sp]
   13d20:	mov	r2, r6
   13d24:	mov	r3, r7
   13d28:	mov	r0, r4
   13d2c:	bl	10f54 <fseeko64@plt>
   13d30:	add	sp, sp, #12
   13d34:	pop	{r4, r5, r6, r7, pc}
   13d38:	ldr	r2, [r0, #20]
   13d3c:	ldr	r3, [r0, #16]
   13d40:	cmp	r2, r3
   13d44:	bne	13d1c <dcngettext@plt+0x2d2c>
   13d48:	ldr	r3, [r0, #36]	; 0x24
   13d4c:	cmp	r3, #0
   13d50:	bne	13d1c <dcngettext@plt+0x2d2c>
   13d54:	bl	10f30 <fileno@plt>
   13d58:	str	r5, [sp]
   13d5c:	mov	r2, r6
   13d60:	mov	r3, r7
   13d64:	bl	10e40 <lseek64@plt>
   13d68:	mvn	r2, #0
   13d6c:	mvn	r3, #0
   13d70:	cmp	r1, r3
   13d74:	cmpeq	r0, r2
   13d78:	beq	13d94 <dcngettext@plt+0x2da4>
   13d7c:	ldr	r3, [r4]
   13d80:	bic	r3, r3, #16
   13d84:	str	r3, [r4]
   13d88:	strd	r0, [r4, #80]	; 0x50
   13d8c:	mov	r0, #0
   13d90:	b	13d30 <dcngettext@plt+0x2d40>
   13d94:	mvn	r0, #0
   13d98:	b	13d30 <dcngettext@plt+0x2d40>
   13d9c:	push	{r4, r5, r6, lr}
   13da0:	subs	r4, r0, #0
   13da4:	beq	13e1c <dcngettext@plt+0x2e2c>
   13da8:	mov	r1, #47	; 0x2f
   13dac:	mov	r0, r4
   13db0:	bl	10f84 <strrchr@plt>
   13db4:	cmp	r0, #0
   13db8:	addne	r5, r0, #1
   13dbc:	moveq	r5, r4
   13dc0:	sub	r3, r5, r4
   13dc4:	cmp	r3, #6
   13dc8:	ble	13e08 <dcngettext@plt+0x2e18>
   13dcc:	mov	r2, #7
   13dd0:	ldr	r1, [pc, #96]	; 13e38 <dcngettext@plt+0x2e48>
   13dd4:	sub	r0, r5, #7
   13dd8:	bl	10fcc <strncmp@plt>
   13ddc:	cmp	r0, #0
   13de0:	bne	13e08 <dcngettext@plt+0x2e18>
   13de4:	mov	r2, #3
   13de8:	ldr	r1, [pc, #76]	; 13e3c <dcngettext@plt+0x2e4c>
   13dec:	mov	r0, r5
   13df0:	bl	10fcc <strncmp@plt>
   13df4:	cmp	r0, #0
   13df8:	addeq	r4, r5, #3
   13dfc:	ldreq	r3, [pc, #60]	; 13e40 <dcngettext@plt+0x2e50>
   13e00:	streq	r4, [r3]
   13e04:	movne	r4, r5
   13e08:	ldr	r3, [pc, #52]	; 13e44 <dcngettext@plt+0x2e54>
   13e0c:	str	r4, [r3]
   13e10:	ldr	r3, [pc, #48]	; 13e48 <dcngettext@plt+0x2e58>
   13e14:	str	r4, [r3]
   13e18:	pop	{r4, r5, r6, pc}
   13e1c:	ldr	r3, [pc, #40]	; 13e4c <dcngettext@plt+0x2e5c>
   13e20:	ldr	r3, [r3]
   13e24:	mov	r2, #55	; 0x37
   13e28:	mov	r1, #1
   13e2c:	ldr	r0, [pc, #28]	; 13e50 <dcngettext@plt+0x2e60>
   13e30:	bl	10e34 <fwrite@plt>
   13e34:	bl	10fd8 <abort@plt>
   13e38:	andeq	r7, r1, ip, lsl lr
   13e3c:	andeq	r7, r1, r4, lsr #28
   13e40:	andeq	r9, r2, r0, asr r1
   13e44:	andeq	r9, r2, ip, lsl #3
   13e48:	andeq	r9, r2, r4, asr r1
   13e4c:	andeq	r9, r2, r0, ror #2
   13e50:	andeq	r7, r1, r4, ror #27
   13e54:	push	{r4, r5, r6, lr}
   13e58:	mov	r5, r0
   13e5c:	mov	r4, r1
   13e60:	mov	r2, #48	; 0x30
   13e64:	mov	r1, #0
   13e68:	bl	10f18 <memset@plt>
   13e6c:	cmp	r4, #10
   13e70:	beq	13e80 <dcngettext@plt+0x2e90>
   13e74:	str	r4, [r5]
   13e78:	mov	r0, r5
   13e7c:	pop	{r4, r5, r6, pc}
   13e80:	bl	10fd8 <abort@plt>
   13e84:	push	{r4, r5, r6, lr}
   13e88:	mov	r4, r0
   13e8c:	mov	r5, r1
   13e90:	mov	r2, #5
   13e94:	mov	r1, r0
   13e98:	mov	r0, #0
   13e9c:	bl	10e04 <dcgettext@plt>
   13ea0:	cmp	r4, r0
   13ea4:	popne	{r4, r5, r6, pc}
   13ea8:	bl	1681c <dcngettext@plt+0x582c>
   13eac:	ldrb	r3, [r0]
   13eb0:	bic	r3, r3, #32
   13eb4:	cmp	r3, #85	; 0x55
   13eb8:	beq	13f34 <dcngettext@plt+0x2f44>
   13ebc:	cmp	r3, #71	; 0x47
   13ec0:	bne	13f90 <dcngettext@plt+0x2fa0>
   13ec4:	ldrb	r3, [r0, #1]
   13ec8:	bic	r3, r3, #32
   13ecc:	cmp	r3, #66	; 0x42
   13ed0:	bne	13f90 <dcngettext@plt+0x2fa0>
   13ed4:	ldrb	r3, [r0, #2]
   13ed8:	cmp	r3, #49	; 0x31
   13edc:	bne	13f90 <dcngettext@plt+0x2fa0>
   13ee0:	ldrb	r3, [r0, #3]
   13ee4:	cmp	r3, #56	; 0x38
   13ee8:	bne	13f90 <dcngettext@plt+0x2fa0>
   13eec:	ldrb	r3, [r0, #4]
   13ef0:	cmp	r3, #48	; 0x30
   13ef4:	bne	13f90 <dcngettext@plt+0x2fa0>
   13ef8:	ldrb	r3, [r0, #5]
   13efc:	cmp	r3, #51	; 0x33
   13f00:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f04:	ldrb	r3, [r0, #6]
   13f08:	cmp	r3, #48	; 0x30
   13f0c:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f10:	ldrb	r3, [r0, #7]
   13f14:	cmp	r3, #0
   13f18:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f1c:	ldrb	r2, [r4]
   13f20:	ldr	r3, [pc, #124]	; 13fa4 <dcngettext@plt+0x2fb4>
   13f24:	ldr	r0, [pc, #124]	; 13fa8 <dcngettext@plt+0x2fb8>
   13f28:	cmp	r2, #96	; 0x60
   13f2c:	movne	r0, r3
   13f30:	pop	{r4, r5, r6, pc}
   13f34:	ldrb	r3, [r0, #1]
   13f38:	bic	r3, r3, #32
   13f3c:	cmp	r3, #84	; 0x54
   13f40:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f44:	ldrb	r3, [r0, #2]
   13f48:	bic	r3, r3, #32
   13f4c:	cmp	r3, #70	; 0x46
   13f50:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f54:	ldrb	r3, [r0, #3]
   13f58:	cmp	r3, #45	; 0x2d
   13f5c:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f60:	ldrb	r3, [r0, #4]
   13f64:	cmp	r3, #56	; 0x38
   13f68:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f6c:	ldrb	r3, [r0, #5]
   13f70:	cmp	r3, #0
   13f74:	bne	13f90 <dcngettext@plt+0x2fa0>
   13f78:	ldrb	r2, [r4]
   13f7c:	ldr	r3, [pc, #40]	; 13fac <dcngettext@plt+0x2fbc>
   13f80:	ldr	r0, [pc, #40]	; 13fb0 <dcngettext@plt+0x2fc0>
   13f84:	cmp	r2, #96	; 0x60
   13f88:	movne	r0, r3
   13f8c:	pop	{r4, r5, r6, pc}
   13f90:	ldr	r3, [pc, #28]	; 13fb4 <dcngettext@plt+0x2fc4>
   13f94:	ldr	r0, [pc, #28]	; 13fb8 <dcngettext@plt+0x2fc8>
   13f98:	cmp	r5, #9
   13f9c:	movne	r0, r3
   13fa0:	pop	{r4, r5, r6, pc}
   13fa4:	andeq	r7, r1, r0, lsl #29
   13fa8:	andeq	r7, r1, ip, lsl #29
   13fac:	andeq	r7, r1, ip, ror lr
   13fb0:	muleq	r1, r0, lr
   13fb4:	andeq	r7, r1, r4, lsl #29
   13fb8:	andeq	r7, r1, r8, lsl #29
   13fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fc0:	sub	sp, sp, #116	; 0x74
   13fc4:	str	r0, [sp, #36]	; 0x24
   13fc8:	mov	sl, r1
   13fcc:	str	r2, [sp, #52]	; 0x34
   13fd0:	str	r3, [sp, #28]
   13fd4:	ldr	r8, [sp, #152]	; 0x98
   13fd8:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   13fdc:	str	r0, [sp, #84]	; 0x54
   13fe0:	ldr	r3, [sp, #156]	; 0x9c
   13fe4:	lsr	r3, r3, #1
   13fe8:	and	r3, r3, #1
   13fec:	str	r3, [sp, #32]
   13ff0:	mov	r3, #1
   13ff4:	str	r3, [sp, #40]	; 0x28
   13ff8:	mov	r3, #0
   13ffc:	str	r3, [sp, #80]	; 0x50
   14000:	str	r3, [sp, #44]	; 0x2c
   14004:	str	r3, [sp, #48]	; 0x30
   14008:	str	r3, [sp, #60]	; 0x3c
   1400c:	str	r3, [sp, #72]	; 0x48
   14010:	str	r3, [sp, #76]	; 0x4c
   14014:	mov	r7, sl
   14018:	mov	sl, r8
   1401c:	cmp	sl, #10
   14020:	ldrls	pc, [pc, sl, lsl #2]
   14024:	b	141dc <dcngettext@plt+0x31ec>
   14028:	andeq	r4, r1, ip, lsl #1
   1402c:	andeq	r4, r1, ip, asr r0
   14030:			; <UNDEFINED> instruction: 0x000141b8
   14034:	andeq	r4, r1, r4, asr r0
   14038:	andeq	r4, r1, ip, ror #2
   1403c:	muleq	r1, ip, r0
   14040:	andeq	r5, r1, r8, lsl #2
   14044:	andeq	r4, r1, r0, ror #3
   14048:	ldrdeq	r4, [r1], -r8
   1404c:	ldrdeq	r4, [r1], -r8
   14050:	ldrdeq	r4, [r1], -r8
   14054:	mov	r3, #1
   14058:	str	r3, [sp, #48]	; 0x30
   1405c:	mov	r3, #1
   14060:	str	r3, [sp, #32]
   14064:	str	r3, [sp, #60]	; 0x3c
   14068:	ldr	r3, [pc, #4068]	; 15054 <dcngettext@plt+0x4064>
   1406c:	str	r3, [sp, #72]	; 0x48
   14070:	mov	fp, #0
   14074:	mov	sl, #2
   14078:	mov	r6, #0
   1407c:	ldr	r3, [sp, #48]	; 0x30
   14080:	eor	r3, r3, #1
   14084:	str	r3, [sp, #68]	; 0x44
   14088:	b	14970 <dcngettext@plt+0x3980>
   1408c:	mov	r3, #0
   14090:	str	r3, [sp, #32]
   14094:	mov	fp, r3
   14098:	b	14078 <dcngettext@plt+0x3088>
   1409c:	ldr	r3, [sp, #32]
   140a0:	cmp	r3, #0
   140a4:	bne	141f8 <dcngettext@plt+0x3208>
   140a8:	cmp	r7, #0
   140ac:	beq	14218 <dcngettext@plt+0x3228>
   140b0:	ldr	r3, [sp, #36]	; 0x24
   140b4:	mov	r2, #34	; 0x22
   140b8:	strb	r2, [r3]
   140bc:	mov	r3, #1
   140c0:	str	r3, [sp, #48]	; 0x30
   140c4:	str	r3, [sp, #60]	; 0x3c
   140c8:	ldr	r3, [pc, #3980]	; 1505c <dcngettext@plt+0x406c>
   140cc:	str	r3, [sp, #72]	; 0x48
   140d0:	mov	fp, #1
   140d4:	b	14078 <dcngettext@plt+0x3088>
   140d8:	cmp	sl, #10
   140dc:	beq	14100 <dcngettext@plt+0x3110>
   140e0:	mov	r1, sl
   140e4:	ldr	r0, [pc, #3948]	; 15058 <dcngettext@plt+0x4068>
   140e8:	bl	13e84 <dcngettext@plt+0x2e94>
   140ec:	str	r0, [sp, #164]	; 0xa4
   140f0:	mov	r1, sl
   140f4:	ldr	r0, [pc, #3928]	; 15054 <dcngettext@plt+0x4064>
   140f8:	bl	13e84 <dcngettext@plt+0x2e94>
   140fc:	str	r0, [sp, #168]	; 0xa8
   14100:	ldr	r3, [sp, #32]
   14104:	cmp	r3, #0
   14108:	movne	fp, #0
   1410c:	bne	14144 <dcngettext@plt+0x3154>
   14110:	ldr	r3, [sp, #164]	; 0xa4
   14114:	ldrb	r3, [r3]
   14118:	cmp	r3, #0
   1411c:	beq	14164 <dcngettext@plt+0x3174>
   14120:	ldr	r2, [sp, #164]	; 0xa4
   14124:	mov	fp, #0
   14128:	ldr	r1, [sp, #36]	; 0x24
   1412c:	cmp	r7, fp
   14130:	strbhi	r3, [r1, fp]
   14134:	add	fp, fp, #1
   14138:	ldrb	r3, [r2, #1]!
   1413c:	cmp	r3, #0
   14140:	bne	1412c <dcngettext@plt+0x313c>
   14144:	ldr	r0, [sp, #168]	; 0xa8
   14148:	bl	10edc <strlen@plt>
   1414c:	str	r0, [sp, #60]	; 0x3c
   14150:	ldr	r3, [sp, #168]	; 0xa8
   14154:	str	r3, [sp, #72]	; 0x48
   14158:	mov	r3, #1
   1415c:	str	r3, [sp, #48]	; 0x30
   14160:	b	14078 <dcngettext@plt+0x3088>
   14164:	mov	fp, #0
   14168:	b	14144 <dcngettext@plt+0x3154>
   1416c:	ldr	r3, [sp, #32]
   14170:	cmp	r3, #0
   14174:	bne	14234 <dcngettext@plt+0x3244>
   14178:	mov	r3, #1
   1417c:	str	r3, [sp, #48]	; 0x30
   14180:	cmp	r7, #0
   14184:	beq	14250 <dcngettext@plt+0x3260>
   14188:	ldr	r3, [sp, #36]	; 0x24
   1418c:	mov	r2, #39	; 0x27
   14190:	strb	r2, [r3]
   14194:	mov	r3, #0
   14198:	str	r3, [sp, #32]
   1419c:	mov	r3, #1
   141a0:	str	r3, [sp, #60]	; 0x3c
   141a4:	ldr	r3, [pc, #3752]	; 15054 <dcngettext@plt+0x4064>
   141a8:	str	r3, [sp, #72]	; 0x48
   141ac:	mov	fp, #1
   141b0:	mov	sl, #2
   141b4:	b	14078 <dcngettext@plt+0x3088>
   141b8:	ldr	r3, [sp, #32]
   141bc:	cmp	r3, #0
   141c0:	beq	14180 <dcngettext@plt+0x3190>
   141c4:	mov	r3, #1
   141c8:	str	r3, [sp, #60]	; 0x3c
   141cc:	ldr	r3, [pc, #3712]	; 15054 <dcngettext@plt+0x4064>
   141d0:	str	r3, [sp, #72]	; 0x48
   141d4:	mov	fp, #0
   141d8:	b	14078 <dcngettext@plt+0x3088>
   141dc:	bl	10fd8 <abort@plt>
   141e0:	mov	r3, #0
   141e4:	str	r3, [sp, #32]
   141e8:	mov	r3, #1
   141ec:	str	r3, [sp, #48]	; 0x30
   141f0:	mov	fp, #0
   141f4:	b	14078 <dcngettext@plt+0x3088>
   141f8:	ldr	r3, [sp, #32]
   141fc:	str	r3, [sp, #48]	; 0x30
   14200:	mov	r3, #1
   14204:	str	r3, [sp, #60]	; 0x3c
   14208:	ldr	r3, [pc, #3660]	; 1505c <dcngettext@plt+0x406c>
   1420c:	str	r3, [sp, #72]	; 0x48
   14210:	mov	fp, #0
   14214:	b	14078 <dcngettext@plt+0x3088>
   14218:	mov	r3, #1
   1421c:	str	r3, [sp, #48]	; 0x30
   14220:	str	r3, [sp, #60]	; 0x3c
   14224:	ldr	r3, [pc, #3632]	; 1505c <dcngettext@plt+0x406c>
   14228:	str	r3, [sp, #72]	; 0x48
   1422c:	mov	fp, #1
   14230:	b	14078 <dcngettext@plt+0x3088>
   14234:	mov	r3, #1
   14238:	str	r3, [sp, #60]	; 0x3c
   1423c:	ldr	r3, [pc, #3600]	; 15054 <dcngettext@plt+0x4064>
   14240:	str	r3, [sp, #72]	; 0x48
   14244:	mov	fp, #0
   14248:	mov	sl, #2
   1424c:	b	14078 <dcngettext@plt+0x3088>
   14250:	mov	r3, #0
   14254:	str	r3, [sp, #32]
   14258:	mov	r3, #1
   1425c:	str	r3, [sp, #60]	; 0x3c
   14260:	ldr	r3, [pc, #3564]	; 15054 <dcngettext@plt+0x4064>
   14264:	str	r3, [sp, #72]	; 0x48
   14268:	mov	fp, #1
   1426c:	mov	sl, #2
   14270:	b	14078 <dcngettext@plt+0x3088>
   14274:	mov	r3, #0
   14278:	str	r3, [sp, #56]	; 0x38
   1427c:	ldr	r3, [sp, #52]	; 0x34
   14280:	add	r2, r3, r6
   14284:	str	r2, [sp, #64]	; 0x40
   14288:	ldrb	r4, [r3, r6]
   1428c:	cmp	r4, #126	; 0x7e
   14290:	ldrls	pc, [pc, r4, lsl #2]
   14294:	b	14ad0 <dcngettext@plt+0x3ae0>
   14298:			; <UNDEFINED> instruction: 0x000144b0
   1429c:	ldrdeq	r4, [r1], -r0
   142a0:	ldrdeq	r4, [r1], -r0
   142a4:	ldrdeq	r4, [r1], -r0
   142a8:	ldrdeq	r4, [r1], -r0
   142ac:	ldrdeq	r4, [r1], -r0
   142b0:	ldrdeq	r4, [r1], -r0
   142b4:	andeq	r4, r1, ip, lsl #16
   142b8:	andeq	r4, r1, r8, lsr #9
   142bc:	andeq	r4, r1, r4, asr #15
   142c0:			; <UNDEFINED> instruction: 0x000147bc
   142c4:	andeq	r4, r1, ip, lsr #14
   142c8:	andeq	r4, r1, r4, lsr #14
   142cc:	andeq	r4, r1, r0, lsr #9
   142d0:	ldrdeq	r4, [r1], -r0
   142d4:	ldrdeq	r4, [r1], -r0
   142d8:	ldrdeq	r4, [r1], -r0
   142dc:	ldrdeq	r4, [r1], -r0
   142e0:	ldrdeq	r4, [r1], -r0
   142e4:	ldrdeq	r4, [r1], -r0
   142e8:	ldrdeq	r4, [r1], -r0
   142ec:	ldrdeq	r4, [r1], -r0
   142f0:	ldrdeq	r4, [r1], -r0
   142f4:	ldrdeq	r4, [r1], -r0
   142f8:	ldrdeq	r4, [r1], -r0
   142fc:	ldrdeq	r4, [r1], -r0
   14300:	ldrdeq	r4, [r1], -r0
   14304:	ldrdeq	r4, [r1], -r0
   14308:	ldrdeq	r4, [r1], -r0
   1430c:	ldrdeq	r4, [r1], -r0
   14310:	ldrdeq	r4, [r1], -r0
   14314:	ldrdeq	r4, [r1], -r0
   14318:	andeq	r4, r1, r0, ror #16
   1431c:	andeq	r4, r1, ip, asr r8
   14320:	andeq	r4, r1, ip, asr r8
   14324:	andeq	r4, r1, r4, lsr r8
   14328:	andeq	r4, r1, ip, asr r8
   1432c:	andeq	r4, r1, r4, lsr #29
   14330:	andeq	r4, r1, ip, asr r8
   14334:	andeq	r4, r1, r4, lsr sl
   14338:	andeq	r4, r1, ip, asr r8
   1433c:	andeq	r4, r1, ip, asr r8
   14340:	andeq	r4, r1, ip, asr r8
   14344:	andeq	r4, r1, r4, lsr #29
   14348:	andeq	r4, r1, r4, lsr #29
   1434c:	andeq	r4, r1, r4, lsr #29
   14350:	andeq	r4, r1, r4, lsr #29
   14354:	andeq	r4, r1, r4, lsr #29
   14358:	andeq	r4, r1, r4, lsr #29
   1435c:	andeq	r4, r1, r4, lsr #29
   14360:	andeq	r4, r1, r4, lsr #29
   14364:	andeq	r4, r1, r4, lsr #29
   14368:	andeq	r4, r1, r4, lsr #29
   1436c:	andeq	r4, r1, r4, lsr #29
   14370:	andeq	r4, r1, r4, lsr #29
   14374:	andeq	r4, r1, r4, lsr #29
   14378:	andeq	r4, r1, r4, lsr #29
   1437c:	andeq	r4, r1, r4, lsr #29
   14380:	andeq	r4, r1, r4, lsr #29
   14384:	andeq	r4, r1, ip, asr r8
   14388:	andeq	r4, r1, ip, asr r8
   1438c:	andeq	r4, r1, ip, asr r8
   14390:	andeq	r4, r1, ip, asr r8
   14394:			; <UNDEFINED> instruction: 0x000145b8
   14398:	ldrdeq	r4, [r1], -r0
   1439c:	andeq	r4, r1, r4, lsr #29
   143a0:	andeq	r4, r1, r4, lsr #29
   143a4:	andeq	r4, r1, r4, lsr #29
   143a8:	andeq	r4, r1, r4, lsr #29
   143ac:	andeq	r4, r1, r4, lsr #29
   143b0:	andeq	r4, r1, r4, lsr #29
   143b4:	andeq	r4, r1, r4, lsr #29
   143b8:	andeq	r4, r1, r4, lsr #29
   143bc:	andeq	r4, r1, r4, lsr #29
   143c0:	andeq	r4, r1, r4, lsr #29
   143c4:	andeq	r4, r1, r4, lsr #29
   143c8:	andeq	r4, r1, r4, lsr #29
   143cc:	andeq	r4, r1, r4, lsr #29
   143d0:	andeq	r4, r1, r4, lsr #29
   143d4:	andeq	r4, r1, r4, lsr #29
   143d8:	andeq	r4, r1, r4, lsr #29
   143dc:	andeq	r4, r1, r4, lsr #29
   143e0:	andeq	r4, r1, r4, lsr #29
   143e4:	andeq	r4, r1, r4, lsr #29
   143e8:	andeq	r4, r1, r4, lsr #29
   143ec:	andeq	r4, r1, r4, lsr #29
   143f0:	andeq	r4, r1, r4, lsr #29
   143f4:	andeq	r4, r1, r4, lsr #29
   143f8:	andeq	r4, r1, r4, lsr #29
   143fc:	andeq	r4, r1, r4, lsr #29
   14400:	andeq	r4, r1, r4, lsr #29
   14404:	andeq	r4, r1, ip, asr r8
   14408:	andeq	r4, r1, r4, lsr r7
   1440c:	andeq	r4, r1, r4, lsr #29
   14410:	andeq	r4, r1, ip, asr r8
   14414:	andeq	r4, r1, r4, lsr #29
   14418:	andeq	r4, r1, ip, asr r8
   1441c:	andeq	r4, r1, r4, lsr #29
   14420:	andeq	r4, r1, r4, lsr #29
   14424:	andeq	r4, r1, r4, lsr #29
   14428:	andeq	r4, r1, r4, lsr #29
   1442c:	andeq	r4, r1, r4, lsr #29
   14430:	andeq	r4, r1, r4, lsr #29
   14434:	andeq	r4, r1, r4, lsr #29
   14438:	andeq	r4, r1, r4, lsr #29
   1443c:	andeq	r4, r1, r4, lsr #29
   14440:	andeq	r4, r1, r4, lsr #29
   14444:	andeq	r4, r1, r4, lsr #29
   14448:	andeq	r4, r1, r4, lsr #29
   1444c:	andeq	r4, r1, r4, lsr #29
   14450:	andeq	r4, r1, r4, lsr #29
   14454:	andeq	r4, r1, r4, lsr #29
   14458:	andeq	r4, r1, r4, lsr #29
   1445c:	andeq	r4, r1, r4, lsr #29
   14460:	andeq	r4, r1, r4, lsr #29
   14464:	andeq	r4, r1, r4, lsr #29
   14468:	andeq	r4, r1, r4, lsr #29
   1446c:	andeq	r4, r1, r4, lsr #29
   14470:	andeq	r4, r1, r4, lsr #29
   14474:	andeq	r4, r1, r4, lsr #29
   14478:	andeq	r4, r1, r4, lsr #29
   1447c:	andeq	r4, r1, r4, lsr #29
   14480:	andeq	r4, r1, r4, lsr #29
   14484:	andeq	r4, r1, r4, lsl r8
   14488:	andeq	r4, r1, ip, asr r8
   1448c:	andeq	r4, r1, r4, lsl r8
   14490:	andeq	r4, r1, r4, lsr r8
   14494:	mov	r3, #0
   14498:	str	r3, [sp, #56]	; 0x38
   1449c:	b	1427c <dcngettext@plt+0x328c>
   144a0:	mov	r3, #114	; 0x72
   144a4:	b	147c8 <dcngettext@plt+0x37d8>
   144a8:	mov	r3, #98	; 0x62
   144ac:	b	147e0 <dcngettext@plt+0x37f0>
   144b0:	ldr	r3, [sp, #48]	; 0x30
   144b4:	cmp	r3, #0
   144b8:	beq	145a0 <dcngettext@plt+0x35b0>
   144bc:	ldr	r3, [sp, #32]
   144c0:	cmp	r3, #0
   144c4:	bne	15028 <dcngettext@plt+0x4038>
   144c8:	ldr	r3, [sp, #44]	; 0x2c
   144cc:	eor	r3, r3, #1
   144d0:	cmp	sl, #2
   144d4:	movne	r3, #0
   144d8:	andeq	r3, r3, #1
   144dc:	cmp	r3, #0
   144e0:	moveq	r2, fp
   144e4:	beq	14528 <dcngettext@plt+0x3538>
   144e8:	cmp	r7, fp
   144ec:	ldrhi	r2, [sp, #36]	; 0x24
   144f0:	movhi	r1, #39	; 0x27
   144f4:	strbhi	r1, [r2, fp]
   144f8:	add	r2, fp, #1
   144fc:	cmp	r7, r2
   14500:	ldrhi	r1, [sp, #36]	; 0x24
   14504:	movhi	r0, #36	; 0x24
   14508:	strbhi	r0, [r1, r2]
   1450c:	add	r2, fp, #2
   14510:	cmp	r7, r2
   14514:	ldrhi	r1, [sp, #36]	; 0x24
   14518:	movhi	r0, #39	; 0x27
   1451c:	strbhi	r0, [r1, r2]
   14520:	add	r2, fp, #3
   14524:	str	r3, [sp, #44]	; 0x2c
   14528:	cmp	r7, r2
   1452c:	ldrhi	r3, [sp, #36]	; 0x24
   14530:	movhi	r1, #92	; 0x5c
   14534:	strbhi	r1, [r3, r2]
   14538:	add	fp, r2, #1
   1453c:	cmp	r5, #0
   14540:	beq	14eac <dcngettext@plt+0x3ebc>
   14544:	add	r3, r6, #1
   14548:	ldr	r1, [sp, #28]
   1454c:	cmp	r1, r3
   14550:	bls	14ebc <dcngettext@plt+0x3ecc>
   14554:	ldr	r1, [sp, #52]	; 0x34
   14558:	ldrb	r3, [r1, r3]
   1455c:	sub	r3, r3, #48	; 0x30
   14560:	uxtb	r3, r3
   14564:	cmp	r3, #9
   14568:	bhi	14ec8 <dcngettext@plt+0x3ed8>
   1456c:	cmp	r7, fp
   14570:	movhi	r3, #48	; 0x30
   14574:	ldrhi	r1, [sp, #36]	; 0x24
   14578:	strbhi	r3, [r1, fp]
   1457c:	add	r3, r2, #2
   14580:	cmp	r7, r3
   14584:	movhi	r1, #48	; 0x30
   14588:	ldrhi	r0, [sp, #36]	; 0x24
   1458c:	strbhi	r1, [r0, r3]
   14590:	add	fp, r2, #3
   14594:	ldr	r8, [sp, #32]
   14598:	mov	r4, #48	; 0x30
   1459c:	b	14878 <dcngettext@plt+0x3888>
   145a0:	ldr	r3, [sp, #156]	; 0x9c
   145a4:	tst	r3, #1
   145a8:	bne	1496c <dcngettext@plt+0x397c>
   145ac:	ldr	r5, [sp, #48]	; 0x30
   145b0:	mov	r8, r5
   145b4:	b	14878 <dcngettext@plt+0x3888>
   145b8:	cmp	sl, #2
   145bc:	beq	145d4 <dcngettext@plt+0x35e4>
   145c0:	cmp	sl, #5
   145c4:	beq	145ec <dcngettext@plt+0x35fc>
   145c8:	mov	r8, #0
   145cc:	mov	r5, r8
   145d0:	b	14878 <dcngettext@plt+0x3888>
   145d4:	ldr	r3, [sp, #32]
   145d8:	cmp	r3, #0
   145dc:	bne	1503c <dcngettext@plt+0x404c>
   145e0:	mov	r8, r3
   145e4:	mov	r5, r3
   145e8:	b	14878 <dcngettext@plt+0x3888>
   145ec:	ldr	r3, [sp, #156]	; 0x9c
   145f0:	tst	r3, #4
   145f4:	beq	14ed4 <dcngettext@plt+0x3ee4>
   145f8:	add	r3, r6, #2
   145fc:	ldr	r2, [sp, #28]
   14600:	cmp	r2, r3
   14604:	bls	14ee0 <dcngettext@plt+0x3ef0>
   14608:	ldr	r2, [sp, #52]	; 0x34
   1460c:	add	r2, r2, r6
   14610:	ldrb	r2, [r2, #1]
   14614:	cmp	r2, #63	; 0x3f
   14618:	movne	r8, #0
   1461c:	movne	r5, r8
   14620:	bne	14878 <dcngettext@plt+0x3888>
   14624:	ldr	r2, [sp, #52]	; 0x34
   14628:	ldrb	r2, [r2, r3]
   1462c:	sub	r1, r2, #33	; 0x21
   14630:	cmp	r1, #29
   14634:	ldrls	pc, [pc, r1, lsl #2]
   14638:	b	14eec <dcngettext@plt+0x3efc>
   1463c:			; <UNDEFINED> instruction: 0x000146b4
   14640:	andeq	r4, r1, ip, ror #29
   14644:	andeq	r4, r1, ip, ror #29
   14648:	andeq	r4, r1, ip, ror #29
   1464c:	andeq	r4, r1, ip, ror #29
   14650:	andeq	r4, r1, ip, ror #29
   14654:			; <UNDEFINED> instruction: 0x000146b4
   14658:			; <UNDEFINED> instruction: 0x000146b4
   1465c:			; <UNDEFINED> instruction: 0x000146b4
   14660:	andeq	r4, r1, ip, ror #29
   14664:	andeq	r4, r1, ip, ror #29
   14668:	andeq	r4, r1, ip, ror #29
   1466c:			; <UNDEFINED> instruction: 0x000146b4
   14670:	andeq	r4, r1, ip, ror #29
   14674:			; <UNDEFINED> instruction: 0x000146b4
   14678:	andeq	r4, r1, ip, ror #29
   1467c:	andeq	r4, r1, ip, ror #29
   14680:	andeq	r4, r1, ip, ror #29
   14684:	andeq	r4, r1, ip, ror #29
   14688:	andeq	r4, r1, ip, ror #29
   1468c:	andeq	r4, r1, ip, ror #29
   14690:	andeq	r4, r1, ip, ror #29
   14694:	andeq	r4, r1, ip, ror #29
   14698:	andeq	r4, r1, ip, ror #29
   1469c:	andeq	r4, r1, ip, ror #29
   146a0:	andeq	r4, r1, ip, ror #29
   146a4:	andeq	r4, r1, ip, ror #29
   146a8:			; <UNDEFINED> instruction: 0x000146b4
   146ac:			; <UNDEFINED> instruction: 0x000146b4
   146b0:			; <UNDEFINED> instruction: 0x000146b4
   146b4:	ldr	r1, [sp, #32]
   146b8:	cmp	r1, #0
   146bc:	bne	150fc <dcngettext@plt+0x410c>
   146c0:	cmp	r7, fp
   146c4:	movhi	r1, #63	; 0x3f
   146c8:	ldrhi	r0, [sp, #36]	; 0x24
   146cc:	strbhi	r1, [r0, fp]
   146d0:	add	r1, fp, #1
   146d4:	cmp	r7, r1
   146d8:	ldrhi	r0, [sp, #36]	; 0x24
   146dc:	movhi	ip, #34	; 0x22
   146e0:	strbhi	ip, [r0, r1]
   146e4:	add	r1, fp, #2
   146e8:	cmp	r7, r1
   146ec:	ldrhi	r0, [sp, #36]	; 0x24
   146f0:	movhi	ip, #34	; 0x22
   146f4:	strbhi	ip, [r0, r1]
   146f8:	add	r1, fp, #3
   146fc:	cmp	r7, r1
   14700:	movhi	r0, #63	; 0x3f
   14704:	ldrhi	ip, [sp, #36]	; 0x24
   14708:	strbhi	r0, [ip, r1]
   1470c:	add	fp, fp, #4
   14710:	ldr	r5, [sp, #32]
   14714:	mov	r8, r5
   14718:	mov	r4, r2
   1471c:	mov	r6, r3
   14720:	b	14878 <dcngettext@plt+0x3888>
   14724:	mov	r3, #102	; 0x66
   14728:	b	147e0 <dcngettext@plt+0x37f0>
   1472c:	mov	r3, #118	; 0x76
   14730:	b	147e0 <dcngettext@plt+0x37f0>
   14734:	cmp	sl, #2
   14738:	beq	147a4 <dcngettext@plt+0x37b4>
   1473c:	ldr	r3, [sp, #48]	; 0x30
   14740:	ldr	r2, [sp, #32]
   14744:	and	r3, r3, r2
   14748:	tst	r9, r3
   1474c:	moveq	r3, r4
   14750:	beq	147e0 <dcngettext@plt+0x37f0>
   14754:	mov	r8, #0
   14758:	mov	r5, r8
   1475c:	eor	r5, r5, #1
   14760:	ldr	r3, [sp, #44]	; 0x2c
   14764:	and	r5, r5, r3
   14768:	tst	r5, #255	; 0xff
   1476c:	beq	1494c <dcngettext@plt+0x395c>
   14770:	cmp	r7, fp
   14774:	ldrhi	r3, [sp, #36]	; 0x24
   14778:	movhi	r2, #39	; 0x27
   1477c:	strbhi	r2, [r3, fp]
   14780:	add	r3, fp, #1
   14784:	cmp	r7, r3
   14788:	ldrhi	r2, [sp, #36]	; 0x24
   1478c:	movhi	r1, #39	; 0x27
   14790:	strbhi	r1, [r2, r3]
   14794:	add	fp, fp, #2
   14798:	mov	r3, #0
   1479c:	str	r3, [sp, #44]	; 0x2c
   147a0:	b	1494c <dcngettext@plt+0x395c>
   147a4:	ldr	r3, [sp, #32]
   147a8:	cmp	r3, #0
   147ac:	bne	15048 <dcngettext@plt+0x4058>
   147b0:	mov	r8, r3
   147b4:	mov	r5, r3
   147b8:	b	1475c <dcngettext@plt+0x376c>
   147bc:	mov	r3, #110	; 0x6e
   147c0:	b	147c8 <dcngettext@plt+0x37d8>
   147c4:	mov	r3, #116	; 0x74
   147c8:	ldr	r2, [sp, #32]
   147cc:	cmp	sl, #2
   147d0:	movne	r2, #0
   147d4:	andeq	r2, r2, #1
   147d8:	cmp	r2, #0
   147dc:	bne	14800 <dcngettext@plt+0x3810>
   147e0:	ldr	r2, [sp, #48]	; 0x30
   147e4:	cmp	r2, #0
   147e8:	moveq	r8, r2
   147ec:	moveq	r5, r2
   147f0:	beq	14878 <dcngettext@plt+0x3888>
   147f4:	mov	r4, r3
   147f8:	mov	r8, #0
   147fc:	b	148d0 <dcngettext@plt+0x38e0>
   14800:	mov	r8, sl
   14804:	mov	sl, r7
   14808:	b	15074 <dcngettext@plt+0x4084>
   1480c:	mov	r3, #97	; 0x61
   14810:	b	147e0 <dcngettext@plt+0x37f0>
   14814:	ldr	r3, [sp, #28]
   14818:	cmn	r3, #1
   1481c:	beq	14848 <dcngettext@plt+0x3858>
   14820:	ldr	r3, [sp, #28]
   14824:	subs	r3, r3, #1
   14828:	movne	r3, #1
   1482c:	cmp	r3, #0
   14830:	bne	14ef8 <dcngettext@plt+0x3f08>
   14834:	cmp	r6, #0
   14838:	beq	14860 <dcngettext@plt+0x3870>
   1483c:	mov	r8, #0
   14840:	mov	r5, r8
   14844:	b	14878 <dcngettext@plt+0x3888>
   14848:	ldr	r3, [sp, #52]	; 0x34
   1484c:	ldrb	r3, [r3, #1]
   14850:	adds	r3, r3, #0
   14854:	movne	r3, #1
   14858:	b	1482c <dcngettext@plt+0x383c>
   1485c:	mov	r8, #0
   14860:	ldr	r5, [sp, #32]
   14864:	cmp	sl, #2
   14868:	movne	r5, #0
   1486c:	andeq	r5, r5, #1
   14870:	cmp	r5, #0
   14874:	bne	14a28 <dcngettext@plt+0x3a38>
   14878:	ldr	r3, [sp, #68]	; 0x44
   1487c:	cmp	sl, #2
   14880:	orreq	r3, r3, #1
   14884:	eor	r3, r3, #1
   14888:	ldr	r2, [sp, #32]
   1488c:	orr	r3, r2, r3
   14890:	tst	r3, #255	; 0xff
   14894:	beq	148c4 <dcngettext@plt+0x38d4>
   14898:	ldr	r3, [sp, #160]	; 0xa0
   1489c:	cmp	r3, #0
   148a0:	beq	148c4 <dcngettext@plt+0x38d4>
   148a4:	lsr	r2, r4, #5
   148a8:	uxtb	r2, r2
   148ac:	and	r3, r4, #31
   148b0:	ldr	r1, [sp, #160]	; 0xa0
   148b4:	ldr	r2, [r1, r2, lsl #2]
   148b8:	lsr	r3, r2, r3
   148bc:	tst	r3, #1
   148c0:	bne	148d0 <dcngettext@plt+0x38e0>
   148c4:	ldr	r3, [sp, #56]	; 0x38
   148c8:	cmp	r3, #0
   148cc:	beq	1475c <dcngettext@plt+0x376c>
   148d0:	ldr	r3, [sp, #32]
   148d4:	cmp	r3, #0
   148d8:	bne	150e4 <dcngettext@plt+0x40f4>
   148dc:	ldr	r3, [sp, #44]	; 0x2c
   148e0:	eor	r3, r3, #1
   148e4:	cmp	sl, #2
   148e8:	movne	r3, #0
   148ec:	andeq	r3, r3, #1
   148f0:	cmp	r3, #0
   148f4:	beq	14938 <dcngettext@plt+0x3948>
   148f8:	cmp	r7, fp
   148fc:	ldrhi	r2, [sp, #36]	; 0x24
   14900:	movhi	r1, #39	; 0x27
   14904:	strbhi	r1, [r2, fp]
   14908:	add	r2, fp, #1
   1490c:	cmp	r7, r2
   14910:	ldrhi	r1, [sp, #36]	; 0x24
   14914:	movhi	r0, #36	; 0x24
   14918:	strbhi	r0, [r1, r2]
   1491c:	add	r2, fp, #2
   14920:	cmp	r7, r2
   14924:	ldrhi	r1, [sp, #36]	; 0x24
   14928:	movhi	r0, #39	; 0x27
   1492c:	strbhi	r0, [r1, r2]
   14930:	add	fp, fp, #3
   14934:	str	r3, [sp, #44]	; 0x2c
   14938:	cmp	r7, fp
   1493c:	ldrhi	r3, [sp, #36]	; 0x24
   14940:	movhi	r2, #92	; 0x5c
   14944:	strbhi	r2, [r3, fp]
   14948:	add	fp, fp, #1
   1494c:	cmp	fp, r7
   14950:	ldrcc	r3, [sp, #36]	; 0x24
   14954:	strbcc	r4, [r3, fp]
   14958:	add	fp, fp, #1
   1495c:	ldr	r3, [sp, #40]	; 0x28
   14960:	cmp	r8, #0
   14964:	moveq	r3, #0
   14968:	str	r3, [sp, #40]	; 0x28
   1496c:	add	r6, r6, #1
   14970:	ldr	r3, [sp, #28]
   14974:	cmn	r3, #1
   14978:	beq	14f04 <dcngettext@plt+0x3f14>
   1497c:	ldr	r3, [sp, #28]
   14980:	subs	r8, r3, r6
   14984:	movne	r8, #1
   14988:	cmp	r8, #0
   1498c:	beq	14f18 <dcngettext@plt+0x3f28>
   14990:	ldr	r5, [sp, #48]	; 0x30
   14994:	cmp	sl, #2
   14998:	moveq	r5, #0
   1499c:	andne	r5, r5, #1
   149a0:	ldr	r3, [sp, #60]	; 0x3c
   149a4:	adds	r9, r3, #0
   149a8:	movne	r9, #1
   149ac:	ands	r2, r5, r9
   149b0:	str	r2, [sp, #56]	; 0x38
   149b4:	beq	1427c <dcngettext@plt+0x328c>
   149b8:	add	r4, r6, r3
   149bc:	ldr	r2, [sp, #28]
   149c0:	cmp	r3, #1
   149c4:	movls	r3, #0
   149c8:	movhi	r3, #1
   149cc:	cmn	r2, #1
   149d0:	movne	r3, #0
   149d4:	cmp	r3, #0
   149d8:	beq	149e8 <dcngettext@plt+0x39f8>
   149dc:	ldr	r0, [sp, #52]	; 0x34
   149e0:	bl	10edc <strlen@plt>
   149e4:	str	r0, [sp, #28]
   149e8:	ldr	r3, [sp, #28]
   149ec:	cmp	r3, r4
   149f0:	bcc	14274 <dcngettext@plt+0x3284>
   149f4:	ldr	r2, [sp, #60]	; 0x3c
   149f8:	ldr	r1, [sp, #72]	; 0x48
   149fc:	ldr	r3, [sp, #52]	; 0x34
   14a00:	add	r0, r3, r6
   14a04:	bl	10dec <memcmp@plt>
   14a08:	cmp	r0, #0
   14a0c:	bne	14494 <dcngettext@plt+0x34a4>
   14a10:	ldr	r3, [sp, #32]
   14a14:	cmp	r3, #0
   14a18:	beq	1427c <dcngettext@plt+0x328c>
   14a1c:	mov	r8, sl
   14a20:	mov	sl, r7
   14a24:	b	15074 <dcngettext@plt+0x4084>
   14a28:	mov	r8, sl
   14a2c:	mov	sl, r7
   14a30:	b	15074 <dcngettext@plt+0x4084>
   14a34:	cmp	sl, #2
   14a38:	strne	r8, [sp, #80]	; 0x50
   14a3c:	movne	r5, #0
   14a40:	bne	14878 <dcngettext@plt+0x3888>
   14a44:	ldr	r3, [sp, #32]
   14a48:	cmp	r3, #0
   14a4c:	bne	15060 <dcngettext@plt+0x4070>
   14a50:	ldr	r2, [sp, #76]	; 0x4c
   14a54:	adds	r3, r7, #0
   14a58:	movne	r3, #1
   14a5c:	cmp	r2, #0
   14a60:	movne	r3, #0
   14a64:	cmp	r3, #0
   14a68:	movne	r3, #0
   14a6c:	bne	14a9c <dcngettext@plt+0x3aac>
   14a70:	cmp	r7, fp
   14a74:	ldrhi	r3, [sp, #36]	; 0x24
   14a78:	movhi	r2, #39	; 0x27
   14a7c:	strbhi	r2, [r3, fp]
   14a80:	add	r3, fp, #1
   14a84:	cmp	r7, r3
   14a88:	ldrhi	r2, [sp, #36]	; 0x24
   14a8c:	movhi	r1, #92	; 0x5c
   14a90:	strbhi	r1, [r2, r3]
   14a94:	mov	r3, r7
   14a98:	ldr	r7, [sp, #76]	; 0x4c
   14a9c:	add	r2, fp, #2
   14aa0:	cmp	r2, r3
   14aa4:	ldrcc	r1, [sp, #36]	; 0x24
   14aa8:	movcc	r0, #39	; 0x27
   14aac:	strbcc	r0, [r1, r2]
   14ab0:	add	fp, fp, #3
   14ab4:	ldr	r2, [sp, #32]
   14ab8:	mov	r5, r2
   14abc:	str	r8, [sp, #80]	; 0x50
   14ac0:	str	r2, [sp, #44]	; 0x2c
   14ac4:	str	r7, [sp, #76]	; 0x4c
   14ac8:	mov	r7, r3
   14acc:	b	14878 <dcngettext@plt+0x3888>
   14ad0:	ldr	r5, [sp, #84]	; 0x54
   14ad4:	cmp	r5, #1
   14ad8:	beq	14b08 <dcngettext@plt+0x3b18>
   14adc:	mov	r3, #0
   14ae0:	str	r3, [sp, #104]	; 0x68
   14ae4:	str	r3, [sp, #108]	; 0x6c
   14ae8:	ldr	r3, [sp, #28]
   14aec:	cmn	r3, #1
   14af0:	beq	14b3c <dcngettext@plt+0x3b4c>
   14af4:	mov	r3, #0
   14af8:	str	r4, [sp, #88]	; 0x58
   14afc:	str	fp, [sp, #92]	; 0x5c
   14b00:	mov	fp, r3
   14b04:	b	14c64 <dcngettext@plt+0x3c74>
   14b08:	bl	10ec4 <__ctype_b_loc@plt>
   14b0c:	ldr	r2, [r0]
   14b10:	lsl	r3, r4, #1
   14b14:	ldrh	r8, [r2, r3]
   14b18:	lsr	r8, r8, #14
   14b1c:	and	r8, r8, #1
   14b20:	mov	r2, r5
   14b24:	eor	r5, r8, #1
   14b28:	ldr	r3, [sp, #48]	; 0x30
   14b2c:	and	r5, r5, r3
   14b30:	ands	r5, r5, #255	; 0xff
   14b34:	beq	14878 <dcngettext@plt+0x3888>
   14b38:	b	14cfc <dcngettext@plt+0x3d0c>
   14b3c:	ldr	r0, [sp, #52]	; 0x34
   14b40:	bl	10edc <strlen@plt>
   14b44:	str	r0, [sp, #28]
   14b48:	b	14af4 <dcngettext@plt+0x3b04>
   14b4c:	mov	r2, fp
   14b50:	mov	r1, r4
   14b54:	ldr	r4, [sp, #88]	; 0x58
   14b58:	ldr	fp, [sp, #92]	; 0x5c
   14b5c:	ldr	r0, [sp, #28]
   14b60:	cmp	r0, r5
   14b64:	bls	14d30 <dcngettext@plt+0x3d40>
   14b68:	ldrb	r3, [r1]
   14b6c:	cmp	r3, #0
   14b70:	beq	14d38 <dcngettext@plt+0x3d48>
   14b74:	mov	r3, r1
   14b78:	add	r2, r2, #1
   14b7c:	add	r1, r6, r2
   14b80:	cmp	r0, r1
   14b84:	bls	14d40 <dcngettext@plt+0x3d50>
   14b88:	ldrb	r1, [r3, #1]!
   14b8c:	cmp	r1, #0
   14b90:	bne	14b78 <dcngettext@plt+0x3b88>
   14b94:	mov	r8, #0
   14b98:	b	14cf4 <dcngettext@plt+0x3d04>
   14b9c:	cmp	r4, r5
   14ba0:	beq	14c40 <dcngettext@plt+0x3c50>
   14ba4:	ldrb	r3, [r4, #1]!
   14ba8:	sub	r3, r3, #91	; 0x5b
   14bac:	cmp	r3, #33	; 0x21
   14bb0:	ldrls	pc, [pc, r3, lsl #2]
   14bb4:	b	14b9c <dcngettext@plt+0x3bac>
   14bb8:	andeq	r5, r1, ip, rrx
   14bbc:	andeq	r5, r1, ip, rrx
   14bc0:	muleq	r1, ip, fp
   14bc4:	andeq	r5, r1, ip, rrx
   14bc8:	muleq	r1, ip, fp
   14bcc:	andeq	r5, r1, ip, rrx
   14bd0:	muleq	r1, ip, fp
   14bd4:	muleq	r1, ip, fp
   14bd8:	muleq	r1, ip, fp
   14bdc:	muleq	r1, ip, fp
   14be0:	muleq	r1, ip, fp
   14be4:	muleq	r1, ip, fp
   14be8:	muleq	r1, ip, fp
   14bec:	muleq	r1, ip, fp
   14bf0:	muleq	r1, ip, fp
   14bf4:	muleq	r1, ip, fp
   14bf8:	muleq	r1, ip, fp
   14bfc:	muleq	r1, ip, fp
   14c00:	muleq	r1, ip, fp
   14c04:	muleq	r1, ip, fp
   14c08:	muleq	r1, ip, fp
   14c0c:	muleq	r1, ip, fp
   14c10:	muleq	r1, ip, fp
   14c14:	muleq	r1, ip, fp
   14c18:	muleq	r1, ip, fp
   14c1c:	muleq	r1, ip, fp
   14c20:	muleq	r1, ip, fp
   14c24:	muleq	r1, ip, fp
   14c28:	muleq	r1, ip, fp
   14c2c:	muleq	r1, ip, fp
   14c30:	muleq	r1, ip, fp
   14c34:	muleq	r1, ip, fp
   14c38:	muleq	r1, ip, fp
   14c3c:	andeq	r5, r1, ip, rrx
   14c40:	ldr	r0, [sp, #100]	; 0x64
   14c44:	bl	10e28 <iswprint@plt>
   14c48:	cmp	r0, #0
   14c4c:	moveq	r8, #0
   14c50:	add	fp, fp, r9
   14c54:	add	r0, sp, #104	; 0x68
   14c58:	bl	10dd4 <mbsinit@plt>
   14c5c:	cmp	r0, #0
   14c60:	bne	14cd4 <dcngettext@plt+0x3ce4>
   14c64:	add	r5, r6, fp
   14c68:	ldr	r3, [sp, #52]	; 0x34
   14c6c:	add	r4, r3, r5
   14c70:	add	r3, sp, #104	; 0x68
   14c74:	ldr	r2, [sp, #28]
   14c78:	sub	r2, r2, r5
   14c7c:	mov	r1, r4
   14c80:	add	r0, sp, #100	; 0x64
   14c84:	bl	16850 <dcngettext@plt+0x5860>
   14c88:	subs	r9, r0, #0
   14c8c:	beq	14d48 <dcngettext@plt+0x3d58>
   14c90:	cmn	r9, #1
   14c94:	beq	14ce4 <dcngettext@plt+0x3cf4>
   14c98:	cmn	r9, #2
   14c9c:	beq	14b4c <dcngettext@plt+0x3b5c>
   14ca0:	ldr	r3, [sp, #32]
   14ca4:	cmp	sl, #2
   14ca8:	movne	r3, #0
   14cac:	andeq	r3, r3, #1
   14cb0:	cmp	r3, #0
   14cb4:	beq	14c40 <dcngettext@plt+0x3c50>
   14cb8:	cmp	r9, #1
   14cbc:	bls	14c40 <dcngettext@plt+0x3c50>
   14cc0:	sub	r3, r9, #1
   14cc4:	add	r5, r3, r5
   14cc8:	ldr	r3, [sp, #52]	; 0x34
   14ccc:	add	r5, r3, r5
   14cd0:	b	14ba4 <dcngettext@plt+0x3bb4>
   14cd4:	ldr	r4, [sp, #88]	; 0x58
   14cd8:	mov	r2, fp
   14cdc:	ldr	fp, [sp, #92]	; 0x5c
   14ce0:	b	14cf4 <dcngettext@plt+0x3d04>
   14ce4:	ldr	r4, [sp, #88]	; 0x58
   14ce8:	mov	r2, fp
   14cec:	ldr	fp, [sp, #92]	; 0x5c
   14cf0:	mov	r8, #0
   14cf4:	cmp	r2, #1
   14cf8:	bls	14b24 <dcngettext@plt+0x3b34>
   14cfc:	add	r1, r6, r2
   14d00:	ldr	ip, [sp, #64]	; 0x40
   14d04:	mov	r5, #0
   14d08:	eor	r3, r8, #1
   14d0c:	ldr	r2, [sp, #48]	; 0x30
   14d10:	and	r3, r3, r2
   14d14:	uxtb	r3, r3
   14d18:	ldr	r9, [sp, #32]
   14d1c:	ldr	lr, [sp, #44]	; 0x2c
   14d20:	ldr	r2, [sp, #56]	; 0x38
   14d24:	str	r8, [sp, #56]	; 0x38
   14d28:	ldr	r0, [sp, #36]	; 0x24
   14d2c:	b	14dc8 <dcngettext@plt+0x3dd8>
   14d30:	mov	r8, #0
   14d34:	b	14cf4 <dcngettext@plt+0x3d04>
   14d38:	mov	r8, #0
   14d3c:	b	14cf4 <dcngettext@plt+0x3d04>
   14d40:	mov	r8, #0
   14d44:	b	14cf4 <dcngettext@plt+0x3d04>
   14d48:	ldr	r4, [sp, #88]	; 0x58
   14d4c:	mov	r2, fp
   14d50:	ldr	fp, [sp, #92]	; 0x5c
   14d54:	b	14cf4 <dcngettext@plt+0x3d04>
   14d58:	cmp	r2, #0
   14d5c:	beq	14d70 <dcngettext@plt+0x3d80>
   14d60:	cmp	r7, fp
   14d64:	movhi	r2, #92	; 0x5c
   14d68:	strbhi	r2, [r0, fp]
   14d6c:	add	fp, fp, #1
   14d70:	add	r8, r6, #1
   14d74:	cmp	r1, r8
   14d78:	bls	14e80 <dcngettext@plt+0x3e90>
   14d7c:	eor	r2, r5, #1
   14d80:	and	r2, r2, lr
   14d84:	ands	r2, r2, #255	; 0xff
   14d88:	beq	14e9c <dcngettext@plt+0x3eac>
   14d8c:	cmp	r7, fp
   14d90:	movhi	r2, #39	; 0x27
   14d94:	strbhi	r2, [r0, fp]
   14d98:	add	r2, fp, #1
   14d9c:	cmp	r7, r2
   14da0:	movhi	lr, #39	; 0x27
   14da4:	strbhi	lr, [r0, r2]
   14da8:	add	fp, fp, #2
   14dac:	mov	r6, r8
   14db0:	mov	r2, r3
   14db4:	mov	lr, r3
   14db8:	cmp	r7, fp
   14dbc:	strbhi	r4, [r0, fp]
   14dc0:	add	fp, fp, #1
   14dc4:	ldrb	r4, [ip, #1]!
   14dc8:	cmp	r3, #0
   14dcc:	beq	14d58 <dcngettext@plt+0x3d68>
   14dd0:	cmp	r9, #0
   14dd4:	bne	150d8 <dcngettext@plt+0x40e8>
   14dd8:	eor	r5, lr, #1
   14ddc:	cmp	sl, #2
   14de0:	movne	r5, #0
   14de4:	andeq	r5, r5, #1
   14de8:	cmp	r5, #0
   14dec:	beq	14e24 <dcngettext@plt+0x3e34>
   14df0:	cmp	r7, fp
   14df4:	movhi	lr, #39	; 0x27
   14df8:	strbhi	lr, [r0, fp]
   14dfc:	add	lr, fp, #1
   14e00:	cmp	r7, lr
   14e04:	movhi	r8, #36	; 0x24
   14e08:	strbhi	r8, [r0, lr]
   14e0c:	add	lr, fp, #2
   14e10:	cmp	r7, lr
   14e14:	movhi	r8, #39	; 0x27
   14e18:	strbhi	r8, [r0, lr]
   14e1c:	add	fp, fp, #3
   14e20:	mov	lr, r5
   14e24:	cmp	r7, fp
   14e28:	movhi	r5, #92	; 0x5c
   14e2c:	strbhi	r5, [r0, fp]
   14e30:	add	r5, fp, #1
   14e34:	cmp	r7, r5
   14e38:	lsrhi	r8, r4, #6
   14e3c:	addhi	r8, r8, #48	; 0x30
   14e40:	strbhi	r8, [r0, r5]
   14e44:	add	r8, fp, #2
   14e48:	cmp	r7, r8
   14e4c:	lsrhi	r5, r4, #3
   14e50:	andhi	r5, r5, #7
   14e54:	addhi	r5, r5, #48	; 0x30
   14e58:	strbhi	r5, [r0, r8]
   14e5c:	add	fp, fp, #3
   14e60:	and	r4, r4, #7
   14e64:	add	r4, r4, #48	; 0x30
   14e68:	add	r5, r6, #1
   14e6c:	cmp	r1, r5
   14e70:	bls	14e8c <dcngettext@plt+0x3e9c>
   14e74:	mov	r6, r5
   14e78:	mov	r5, r3
   14e7c:	b	14db8 <dcngettext@plt+0x3dc8>
   14e80:	str	lr, [sp, #44]	; 0x2c
   14e84:	ldr	r8, [sp, #56]	; 0x38
   14e88:	b	1475c <dcngettext@plt+0x376c>
   14e8c:	str	lr, [sp, #44]	; 0x2c
   14e90:	ldr	r8, [sp, #56]	; 0x38
   14e94:	mov	r5, r3
   14e98:	b	1475c <dcngettext@plt+0x376c>
   14e9c:	mov	r6, r8
   14ea0:	b	14db8 <dcngettext@plt+0x3dc8>
   14ea4:	mov	r5, #0
   14ea8:	b	14878 <dcngettext@plt+0x3888>
   14eac:	mov	r8, r5
   14eb0:	ldr	r5, [sp, #48]	; 0x30
   14eb4:	mov	r4, #48	; 0x30
   14eb8:	b	14878 <dcngettext@plt+0x3888>
   14ebc:	ldr	r8, [sp, #32]
   14ec0:	mov	r4, #48	; 0x30
   14ec4:	b	14878 <dcngettext@plt+0x3888>
   14ec8:	ldr	r8, [sp, #32]
   14ecc:	mov	r4, #48	; 0x30
   14ed0:	b	14878 <dcngettext@plt+0x3888>
   14ed4:	mov	r8, #0
   14ed8:	mov	r5, r8
   14edc:	b	14878 <dcngettext@plt+0x3888>
   14ee0:	mov	r8, #0
   14ee4:	mov	r5, r8
   14ee8:	b	14878 <dcngettext@plt+0x3888>
   14eec:	mov	r8, #0
   14ef0:	mov	r5, r8
   14ef4:	b	14878 <dcngettext@plt+0x3888>
   14ef8:	mov	r8, #0
   14efc:	mov	r5, r8
   14f00:	b	14878 <dcngettext@plt+0x3888>
   14f04:	ldr	r3, [sp, #52]	; 0x34
   14f08:	ldrb	r8, [r3, r6]
   14f0c:	adds	r8, r8, #0
   14f10:	movne	r8, #1
   14f14:	b	14988 <dcngettext@plt+0x3998>
   14f18:	cmp	sl, #2
   14f1c:	movne	r3, #0
   14f20:	moveq	r3, #1
   14f24:	ldr	r1, [sp, #32]
   14f28:	mov	r2, r1
   14f2c:	and	r2, r2, r3
   14f30:	cmp	fp, #0
   14f34:	movne	r2, #0
   14f38:	andeq	r2, r2, #1
   14f3c:	cmp	r2, #0
   14f40:	bne	150f0 <dcngettext@plt+0x4100>
   14f44:	eor	r2, r1, #1
   14f48:	and	r3, r3, r2
   14f4c:	ldr	r1, [sp, #80]	; 0x50
   14f50:	tst	r1, r3
   14f54:	beq	14fcc <dcngettext@plt+0x3fdc>
   14f58:	ldr	r3, [sp, #40]	; 0x28
   14f5c:	cmp	r3, #0
   14f60:	bne	14f88 <dcngettext@plt+0x3f98>
   14f64:	ldr	r1, [sp, #76]	; 0x4c
   14f68:	clz	r3, r7
   14f6c:	lsr	r3, r3, #5
   14f70:	cmp	r1, #0
   14f74:	moveq	r3, #0
   14f78:	cmp	r3, #0
   14f7c:	beq	14fcc <dcngettext@plt+0x3fdc>
   14f80:	ldr	r7, [sp, #76]	; 0x4c
   14f84:	b	1401c <dcngettext@plt+0x302c>
   14f88:	ldr	r3, [sp, #168]	; 0xa8
   14f8c:	str	r3, [sp, #16]
   14f90:	ldr	r3, [sp, #164]	; 0xa4
   14f94:	str	r3, [sp, #12]
   14f98:	ldr	r3, [sp, #160]	; 0xa0
   14f9c:	str	r3, [sp, #8]
   14fa0:	ldr	r3, [sp, #156]	; 0x9c
   14fa4:	str	r3, [sp, #4]
   14fa8:	mov	r3, #5
   14fac:	str	r3, [sp]
   14fb0:	ldr	r3, [sp, #28]
   14fb4:	ldr	r2, [sp, #52]	; 0x34
   14fb8:	ldr	r1, [sp, #76]	; 0x4c
   14fbc:	ldr	r0, [sp, #36]	; 0x24
   14fc0:	bl	13fbc <dcngettext@plt+0x2fcc>
   14fc4:	mov	fp, r0
   14fc8:	b	150cc <dcngettext@plt+0x40dc>
   14fcc:	mov	sl, r7
   14fd0:	ldr	r3, [sp, #72]	; 0x48
   14fd4:	cmp	r3, #0
   14fd8:	moveq	r2, #0
   14fdc:	andne	r2, r2, #1
   14fe0:	cmp	r2, #0
   14fe4:	beq	15014 <dcngettext@plt+0x4024>
   14fe8:	mov	r2, r3
   14fec:	ldrb	r3, [r3]
   14ff0:	cmp	r3, #0
   14ff4:	beq	15014 <dcngettext@plt+0x4024>
   14ff8:	ldr	r1, [sp, #36]	; 0x24
   14ffc:	cmp	sl, fp
   15000:	strbhi	r3, [r1, fp]
   15004:	add	fp, fp, #1
   15008:	ldrb	r3, [r2, #1]!
   1500c:	cmp	r3, #0
   15010:	bne	14ffc <dcngettext@plt+0x400c>
   15014:	cmp	sl, fp
   15018:	movhi	r3, #0
   1501c:	ldrhi	r2, [sp, #36]	; 0x24
   15020:	strbhi	r3, [r2, fp]
   15024:	b	150cc <dcngettext@plt+0x40dc>
   15028:	mov	r8, sl
   1502c:	mov	sl, r7
   15030:	ldr	r3, [sp, #32]
   15034:	str	r3, [sp, #48]	; 0x30
   15038:	b	15074 <dcngettext@plt+0x4084>
   1503c:	mov	r8, sl
   15040:	mov	sl, r7
   15044:	b	15074 <dcngettext@plt+0x4084>
   15048:	mov	r8, sl
   1504c:	mov	sl, r7
   15050:	b	15074 <dcngettext@plt+0x4084>
   15054:	andeq	r7, r1, r4, lsl #29
   15058:	muleq	r1, r4, lr
   1505c:	andeq	r7, r1, r8, lsl #29
   15060:	mov	r8, sl
   15064:	mov	sl, r7
   15068:	b	15074 <dcngettext@plt+0x4084>
   1506c:	mov	r8, sl
   15070:	mov	sl, r7
   15074:	ldr	r3, [sp, #48]	; 0x30
   15078:	cmp	r8, #2
   1507c:	movne	r3, #0
   15080:	andeq	r3, r3, #1
   15084:	cmp	r3, #0
   15088:	movne	r8, #4
   1508c:	ldr	r3, [sp, #168]	; 0xa8
   15090:	str	r3, [sp, #16]
   15094:	ldr	r3, [sp, #164]	; 0xa4
   15098:	str	r3, [sp, #12]
   1509c:	mov	r3, #0
   150a0:	str	r3, [sp, #8]
   150a4:	ldr	r3, [sp, #156]	; 0x9c
   150a8:	bic	r3, r3, #2
   150ac:	str	r3, [sp, #4]
   150b0:	str	r8, [sp]
   150b4:	ldr	r3, [sp, #28]
   150b8:	ldr	r2, [sp, #52]	; 0x34
   150bc:	mov	r1, sl
   150c0:	ldr	r0, [sp, #36]	; 0x24
   150c4:	bl	13fbc <dcngettext@plt+0x2fcc>
   150c8:	mov	fp, r0
   150cc:	mov	r0, fp
   150d0:	add	sp, sp, #116	; 0x74
   150d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150d8:	mov	r8, sl
   150dc:	mov	sl, r7
   150e0:	b	15074 <dcngettext@plt+0x4084>
   150e4:	mov	r8, sl
   150e8:	mov	sl, r7
   150ec:	b	15074 <dcngettext@plt+0x4084>
   150f0:	mov	r8, sl
   150f4:	mov	sl, r7
   150f8:	b	15074 <dcngettext@plt+0x4084>
   150fc:	mov	r8, sl
   15100:	mov	sl, r7
   15104:	b	1508c <dcngettext@plt+0x409c>
   15108:	mov	r3, #1
   1510c:	str	r3, [sp, #32]
   15110:	str	r3, [sp, #48]	; 0x30
   15114:	str	r3, [sp, #60]	; 0x3c
   15118:	ldr	r3, [pc, #-196]	; 1505c <dcngettext@plt+0x406c>
   1511c:	str	r3, [sp, #72]	; 0x48
   15120:	mov	fp, #0
   15124:	mov	sl, #5
   15128:	b	14078 <dcngettext@plt+0x3088>
   1512c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15130:	sub	sp, sp, #52	; 0x34
   15134:	mov	r5, r0
   15138:	str	r1, [sp, #24]
   1513c:	str	r2, [sp, #28]
   15140:	mov	r4, r3
   15144:	bl	10ef4 <__errno_location@plt>
   15148:	str	r0, [sp, #32]
   1514c:	ldr	r3, [r0]
   15150:	str	r3, [sp, #36]	; 0x24
   15154:	ldr	r3, [pc, #396]	; 152e8 <dcngettext@plt+0x42f8>
   15158:	ldr	r6, [r3]
   1515c:	cmn	r5, #-2147483647	; 0x80000001
   15160:	movne	r3, #0
   15164:	moveq	r3, #1
   15168:	orrs	r3, r3, r5, lsr #31
   1516c:	bne	152ac <dcngettext@plt+0x42bc>
   15170:	ldr	r3, [pc, #368]	; 152e8 <dcngettext@plt+0x42f8>
   15174:	ldr	r2, [r3, #4]
   15178:	cmp	r5, r2
   1517c:	blt	151e4 <dcngettext@plt+0x41f4>
   15180:	str	r2, [sp, #44]	; 0x2c
   15184:	add	r3, r3, #8
   15188:	cmp	r6, r3
   1518c:	beq	152b0 <dcngettext@plt+0x42c0>
   15190:	sub	r2, r5, r2
   15194:	mov	r3, #8
   15198:	str	r3, [sp]
   1519c:	mvn	r3, #-2147483648	; 0x80000000
   151a0:	add	r2, r2, #1
   151a4:	add	r1, sp, #44	; 0x2c
   151a8:	mov	r0, r6
   151ac:	bl	16044 <dcngettext@plt+0x5054>
   151b0:	mov	r6, r0
   151b4:	ldr	r3, [pc, #300]	; 152e8 <dcngettext@plt+0x42f8>
   151b8:	str	r0, [r3]
   151bc:	ldr	r7, [pc, #292]	; 152e8 <dcngettext@plt+0x42f8>
   151c0:	ldr	r0, [r7, #4]
   151c4:	ldr	r2, [sp, #44]	; 0x2c
   151c8:	sub	r2, r2, r0
   151cc:	lsl	r2, r2, #3
   151d0:	mov	r1, #0
   151d4:	add	r0, r6, r0, lsl #3
   151d8:	bl	10f18 <memset@plt>
   151dc:	ldr	r3, [sp, #44]	; 0x2c
   151e0:	str	r3, [r7, #4]
   151e4:	add	fp, r6, r5, lsl #3
   151e8:	ldr	r8, [r6, r5, lsl #3]
   151ec:	ldr	r7, [fp, #4]
   151f0:	ldr	r9, [r4, #4]
   151f4:	orr	r9, r9, #1
   151f8:	add	sl, r4, #8
   151fc:	ldr	r3, [r4, #44]	; 0x2c
   15200:	str	r3, [sp, #16]
   15204:	ldr	r3, [r4, #40]	; 0x28
   15208:	str	r3, [sp, #12]
   1520c:	str	sl, [sp, #8]
   15210:	str	r9, [sp, #4]
   15214:	ldr	r3, [r4]
   15218:	str	r3, [sp]
   1521c:	ldr	r3, [sp, #28]
   15220:	ldr	r2, [sp, #24]
   15224:	mov	r1, r8
   15228:	mov	r0, r7
   1522c:	bl	13fbc <dcngettext@plt+0x2fcc>
   15230:	cmp	r8, r0
   15234:	bhi	15294 <dcngettext@plt+0x42a4>
   15238:	add	r8, r0, #1
   1523c:	str	r8, [r6, r5, lsl #3]
   15240:	ldr	r3, [pc, #164]	; 152ec <dcngettext@plt+0x42fc>
   15244:	cmp	r7, r3
   15248:	beq	15254 <dcngettext@plt+0x4264>
   1524c:	mov	r0, r7
   15250:	bl	13c9c <dcngettext@plt+0x2cac>
   15254:	mov	r0, r8
   15258:	bl	15ec0 <dcngettext@plt+0x4ed0>
   1525c:	mov	r7, r0
   15260:	str	r0, [fp, #4]
   15264:	ldr	r3, [r4, #44]	; 0x2c
   15268:	str	r3, [sp, #16]
   1526c:	ldr	r3, [r4, #40]	; 0x28
   15270:	str	r3, [sp, #12]
   15274:	str	sl, [sp, #8]
   15278:	str	r9, [sp, #4]
   1527c:	ldr	r3, [r4]
   15280:	str	r3, [sp]
   15284:	ldr	r3, [sp, #28]
   15288:	ldr	r2, [sp, #24]
   1528c:	mov	r1, r8
   15290:	bl	13fbc <dcngettext@plt+0x2fcc>
   15294:	ldr	r3, [sp, #32]
   15298:	ldr	r2, [sp, #36]	; 0x24
   1529c:	str	r2, [r3]
   152a0:	mov	r0, r7
   152a4:	add	sp, sp, #52	; 0x34
   152a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152ac:	bl	10fd8 <abort@plt>
   152b0:	sub	r2, r5, r2
   152b4:	mov	r3, #8
   152b8:	str	r3, [sp]
   152bc:	mvn	r3, #-2147483648	; 0x80000000
   152c0:	add	r2, r2, #1
   152c4:	add	r1, sp, #44	; 0x2c
   152c8:	mov	r0, #0
   152cc:	bl	16044 <dcngettext@plt+0x5054>
   152d0:	mov	r6, r0
   152d4:	ldr	r3, [pc, #12]	; 152e8 <dcngettext@plt+0x42f8>
   152d8:	str	r0, [r3], #8
   152dc:	ldm	r3, {r0, r1}
   152e0:	stm	r6, {r0, r1}
   152e4:	b	151bc <dcngettext@plt+0x41cc>
   152e8:	andeq	r9, r2, ip, lsl #2
   152ec:	muleq	r2, r0, r1
   152f0:	push	{r4, r5, r6, lr}
   152f4:	mov	r4, r0
   152f8:	bl	10ef4 <__errno_location@plt>
   152fc:	mov	r5, r0
   15300:	ldr	r6, [r0]
   15304:	cmp	r4, #0
   15308:	ldr	r3, [pc, #20]	; 15324 <dcngettext@plt+0x4334>
   1530c:	moveq	r4, r3
   15310:	mov	r1, #48	; 0x30
   15314:	mov	r0, r4
   15318:	bl	163ac <dcngettext@plt+0x53bc>
   1531c:	str	r6, [r5]
   15320:	pop	{r4, r5, r6, pc}
   15324:	muleq	r2, r0, r2
   15328:	subs	r3, r0, #0
   1532c:	ldr	r2, [pc, #8]	; 1533c <dcngettext@plt+0x434c>
   15330:	moveq	r3, r2
   15334:	ldr	r0, [r3]
   15338:	bx	lr
   1533c:	muleq	r2, r0, r2
   15340:	subs	r3, r0, #0
   15344:	ldr	r2, [pc, #8]	; 15354 <dcngettext@plt+0x4364>
   15348:	moveq	r3, r2
   1534c:	str	r1, [r3]
   15350:	bx	lr
   15354:	muleq	r2, r0, r2
   15358:	push	{lr}		; (str lr, [sp, #-4]!)
   1535c:	subs	r3, r0, #0
   15360:	ldr	r0, [pc, #44]	; 15394 <dcngettext@plt+0x43a4>
   15364:	moveq	r3, r0
   15368:	add	r3, r3, #8
   1536c:	lsr	lr, r1, #5
   15370:	and	r1, r1, #31
   15374:	ldr	ip, [r3, lr, lsl #2]
   15378:	lsr	r0, ip, r1
   1537c:	eor	r2, r2, r0
   15380:	and	r2, r2, #1
   15384:	eor	r1, ip, r2, lsl r1
   15388:	str	r1, [r3, lr, lsl #2]
   1538c:	and	r0, r0, #1
   15390:	pop	{pc}		; (ldr pc, [sp], #4)
   15394:	muleq	r2, r0, r2
   15398:	subs	r3, r0, #0
   1539c:	ldr	r2, [pc, #12]	; 153b0 <dcngettext@plt+0x43c0>
   153a0:	moveq	r3, r2
   153a4:	ldr	r0, [r3, #4]
   153a8:	str	r1, [r3, #4]
   153ac:	bx	lr
   153b0:	muleq	r2, r0, r2
   153b4:	subs	r3, r0, #0
   153b8:	ldr	r0, [pc, #40]	; 153e8 <dcngettext@plt+0x43f8>
   153bc:	moveq	r3, r0
   153c0:	mov	r0, #10
   153c4:	str	r0, [r3]
   153c8:	cmp	r2, #0
   153cc:	cmpne	r1, #0
   153d0:	beq	153e0 <dcngettext@plt+0x43f0>
   153d4:	str	r1, [r3, #40]	; 0x28
   153d8:	str	r2, [r3, #44]	; 0x2c
   153dc:	bx	lr
   153e0:	push	{r4, lr}
   153e4:	bl	10fd8 <abort@plt>
   153e8:	muleq	r2, r0, r2
   153ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153f0:	sub	sp, sp, #24
   153f4:	mov	r7, r0
   153f8:	mov	r8, r1
   153fc:	mov	r9, r2
   15400:	mov	sl, r3
   15404:	ldr	r4, [sp, #56]	; 0x38
   15408:	cmp	r4, #0
   1540c:	ldr	r3, [pc, #84]	; 15468 <dcngettext@plt+0x4478>
   15410:	moveq	r4, r3
   15414:	bl	10ef4 <__errno_location@plt>
   15418:	mov	r5, r0
   1541c:	ldr	r6, [r0]
   15420:	ldr	r3, [r4, #44]	; 0x2c
   15424:	str	r3, [sp, #16]
   15428:	ldr	r3, [r4, #40]	; 0x28
   1542c:	str	r3, [sp, #12]
   15430:	add	r3, r4, #8
   15434:	str	r3, [sp, #8]
   15438:	ldr	r3, [r4, #4]
   1543c:	str	r3, [sp, #4]
   15440:	ldr	r3, [r4]
   15444:	str	r3, [sp]
   15448:	mov	r3, sl
   1544c:	mov	r2, r9
   15450:	mov	r1, r8
   15454:	mov	r0, r7
   15458:	bl	13fbc <dcngettext@plt+0x2fcc>
   1545c:	str	r6, [r5]
   15460:	add	sp, sp, #24
   15464:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15468:	muleq	r2, r0, r2
   1546c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15470:	sub	sp, sp, #44	; 0x2c
   15474:	str	r0, [sp, #28]
   15478:	str	r1, [sp, #32]
   1547c:	mov	r6, r2
   15480:	subs	r4, r3, #0
   15484:	ldr	r3, [pc, #172]	; 15538 <dcngettext@plt+0x4548>
   15488:	moveq	r4, r3
   1548c:	bl	10ef4 <__errno_location@plt>
   15490:	mov	r7, r0
   15494:	ldr	fp, [r0]
   15498:	ldr	r5, [r4, #4]
   1549c:	cmp	r6, #0
   154a0:	orreq	r5, r5, #1
   154a4:	add	r9, r4, #8
   154a8:	ldr	r3, [r4, #44]	; 0x2c
   154ac:	str	r3, [sp, #16]
   154b0:	ldr	r3, [r4, #40]	; 0x28
   154b4:	str	r3, [sp, #12]
   154b8:	str	r9, [sp, #8]
   154bc:	str	r5, [sp, #4]
   154c0:	ldr	r3, [r4]
   154c4:	str	r3, [sp]
   154c8:	ldr	r3, [sp, #32]
   154cc:	ldr	r2, [sp, #28]
   154d0:	mov	r1, #0
   154d4:	mov	r0, r1
   154d8:	bl	13fbc <dcngettext@plt+0x2fcc>
   154dc:	mov	sl, r0
   154e0:	add	r8, r0, #1
   154e4:	mov	r0, r8
   154e8:	bl	15ec0 <dcngettext@plt+0x4ed0>
   154ec:	str	r0, [sp, #36]	; 0x24
   154f0:	ldr	r3, [r4, #44]	; 0x2c
   154f4:	str	r3, [sp, #16]
   154f8:	ldr	r3, [r4, #40]	; 0x28
   154fc:	str	r3, [sp, #12]
   15500:	str	r9, [sp, #8]
   15504:	str	r5, [sp, #4]
   15508:	ldr	r3, [r4]
   1550c:	str	r3, [sp]
   15510:	ldr	r3, [sp, #32]
   15514:	ldr	r2, [sp, #28]
   15518:	mov	r1, r8
   1551c:	bl	13fbc <dcngettext@plt+0x2fcc>
   15520:	str	fp, [r7]
   15524:	cmp	r6, #0
   15528:	strne	sl, [r6]
   1552c:	ldr	r0, [sp, #36]	; 0x24
   15530:	add	sp, sp, #44	; 0x2c
   15534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15538:	muleq	r2, r0, r2
   1553c:	push	{r4, lr}
   15540:	mov	r3, r2
   15544:	mov	r2, #0
   15548:	bl	1546c <dcngettext@plt+0x447c>
   1554c:	pop	{r4, pc}
   15550:	push	{r4, r5, r6, r7, r8, lr}
   15554:	ldr	r3, [pc, #140]	; 155e8 <dcngettext@plt+0x45f8>
   15558:	ldr	r7, [r3]
   1555c:	ldr	r3, [r3, #4]
   15560:	cmp	r3, #1
   15564:	ble	15590 <dcngettext@plt+0x45a0>
   15568:	mov	r5, r7
   1556c:	mov	r4, #1
   15570:	ldr	r6, [pc, #112]	; 155e8 <dcngettext@plt+0x45f8>
   15574:	ldr	r0, [r5, #12]
   15578:	bl	13c9c <dcngettext@plt+0x2cac>
   1557c:	add	r4, r4, #1
   15580:	add	r5, r5, #8
   15584:	ldr	r3, [r6, #4]
   15588:	cmp	r3, r4
   1558c:	bgt	15574 <dcngettext@plt+0x4584>
   15590:	ldr	r0, [r7, #4]
   15594:	ldr	r3, [pc, #80]	; 155ec <dcngettext@plt+0x45fc>
   15598:	cmp	r0, r3
   1559c:	beq	155b8 <dcngettext@plt+0x45c8>
   155a0:	bl	13c9c <dcngettext@plt+0x2cac>
   155a4:	ldr	r3, [pc, #60]	; 155e8 <dcngettext@plt+0x45f8>
   155a8:	mov	r2, #256	; 0x100
   155ac:	str	r2, [r3, #8]
   155b0:	ldr	r2, [pc, #52]	; 155ec <dcngettext@plt+0x45fc>
   155b4:	str	r2, [r3, #12]
   155b8:	ldr	r3, [pc, #48]	; 155f0 <dcngettext@plt+0x4600>
   155bc:	cmp	r7, r3
   155c0:	beq	155d8 <dcngettext@plt+0x45e8>
   155c4:	mov	r0, r7
   155c8:	bl	13c9c <dcngettext@plt+0x2cac>
   155cc:	ldr	r3, [pc, #20]	; 155e8 <dcngettext@plt+0x45f8>
   155d0:	add	r2, r3, #8
   155d4:	str	r2, [r3]
   155d8:	mov	r2, #1
   155dc:	ldr	r3, [pc, #4]	; 155e8 <dcngettext@plt+0x45f8>
   155e0:	str	r2, [r3, #4]
   155e4:	pop	{r4, r5, r6, r7, r8, pc}
   155e8:	andeq	r9, r2, ip, lsl #2
   155ec:	muleq	r2, r0, r1
   155f0:	andeq	r9, r2, r4, lsl r1
   155f4:	push	{r4, lr}
   155f8:	ldr	r3, [pc, #8]	; 15608 <dcngettext@plt+0x4618>
   155fc:	mvn	r2, #0
   15600:	bl	1512c <dcngettext@plt+0x413c>
   15604:	pop	{r4, pc}
   15608:	muleq	r2, r0, r2
   1560c:	push	{r4, lr}
   15610:	ldr	r3, [pc, #4]	; 1561c <dcngettext@plt+0x462c>
   15614:	bl	1512c <dcngettext@plt+0x413c>
   15618:	pop	{r4, pc}
   1561c:	muleq	r2, r0, r2
   15620:	push	{r4, lr}
   15624:	mov	r1, r0
   15628:	mov	r0, #0
   1562c:	bl	155f4 <dcngettext@plt+0x4604>
   15630:	pop	{r4, pc}
   15634:	push	{r4, lr}
   15638:	mov	r2, r1
   1563c:	mov	r1, r0
   15640:	mov	r0, #0
   15644:	bl	1560c <dcngettext@plt+0x461c>
   15648:	pop	{r4, pc}
   1564c:	push	{r4, r5, lr}
   15650:	sub	sp, sp, #52	; 0x34
   15654:	mov	r4, r0
   15658:	mov	r5, r2
   1565c:	mov	r0, sp
   15660:	bl	13e54 <dcngettext@plt+0x2e64>
   15664:	mov	r3, sp
   15668:	mvn	r2, #0
   1566c:	mov	r1, r5
   15670:	mov	r0, r4
   15674:	bl	1512c <dcngettext@plt+0x413c>
   15678:	add	sp, sp, #52	; 0x34
   1567c:	pop	{r4, r5, pc}
   15680:	push	{r4, r5, r6, lr}
   15684:	sub	sp, sp, #48	; 0x30
   15688:	mov	r4, r0
   1568c:	mov	r5, r2
   15690:	mov	r6, r3
   15694:	mov	r0, sp
   15698:	bl	13e54 <dcngettext@plt+0x2e64>
   1569c:	mov	r3, sp
   156a0:	mov	r2, r6
   156a4:	mov	r1, r5
   156a8:	mov	r0, r4
   156ac:	bl	1512c <dcngettext@plt+0x413c>
   156b0:	add	sp, sp, #48	; 0x30
   156b4:	pop	{r4, r5, r6, pc}
   156b8:	push	{r4, lr}
   156bc:	mov	r2, r1
   156c0:	mov	r1, r0
   156c4:	mov	r0, #0
   156c8:	bl	1564c <dcngettext@plt+0x465c>
   156cc:	pop	{r4, pc}
   156d0:	push	{r4, lr}
   156d4:	mov	r3, r2
   156d8:	mov	r2, r1
   156dc:	mov	r1, r0
   156e0:	mov	r0, #0
   156e4:	bl	15680 <dcngettext@plt+0x4690>
   156e8:	pop	{r4, pc}
   156ec:	push	{r4, r5, r6, lr}
   156f0:	sub	sp, sp, #48	; 0x30
   156f4:	mov	r4, r0
   156f8:	mov	r5, r1
   156fc:	mov	r6, r2
   15700:	mov	ip, sp
   15704:	ldr	lr, [pc, #64]	; 1574c <dcngettext@plt+0x475c>
   15708:	ldm	lr!, {r0, r1, r2, r3}
   1570c:	stmia	ip!, {r0, r1, r2, r3}
   15710:	ldm	lr!, {r0, r1, r2, r3}
   15714:	stmia	ip!, {r0, r1, r2, r3}
   15718:	ldm	lr, {r0, r1, r2, r3}
   1571c:	stm	ip, {r0, r1, r2, r3}
   15720:	mov	r2, #1
   15724:	mov	r1, r6
   15728:	mov	r0, sp
   1572c:	bl	15358 <dcngettext@plt+0x4368>
   15730:	mov	r3, sp
   15734:	mov	r2, r5
   15738:	mov	r1, r4
   1573c:	mov	r0, #0
   15740:	bl	1512c <dcngettext@plt+0x413c>
   15744:	add	sp, sp, #48	; 0x30
   15748:	pop	{r4, r5, r6, pc}
   1574c:	muleq	r2, r0, r2
   15750:	push	{r4, lr}
   15754:	mov	r2, r1
   15758:	mvn	r1, #0
   1575c:	bl	156ec <dcngettext@plt+0x46fc>
   15760:	pop	{r4, pc}
   15764:	push	{r4, lr}
   15768:	mov	r1, #58	; 0x3a
   1576c:	bl	15750 <dcngettext@plt+0x4760>
   15770:	pop	{r4, pc}
   15774:	push	{r4, lr}
   15778:	mov	r2, #58	; 0x3a
   1577c:	bl	156ec <dcngettext@plt+0x46fc>
   15780:	pop	{r4, pc}
   15784:	push	{r4, r5, lr}
   15788:	sub	sp, sp, #100	; 0x64
   1578c:	mov	r4, r0
   15790:	mov	r5, r2
   15794:	mov	r0, sp
   15798:	bl	13e54 <dcngettext@plt+0x2e64>
   1579c:	add	lr, sp, #48	; 0x30
   157a0:	mov	ip, sp
   157a4:	ldm	ip!, {r0, r1, r2, r3}
   157a8:	stmia	lr!, {r0, r1, r2, r3}
   157ac:	ldm	ip!, {r0, r1, r2, r3}
   157b0:	stmia	lr!, {r0, r1, r2, r3}
   157b4:	ldm	ip, {r0, r1, r2, r3}
   157b8:	stm	lr, {r0, r1, r2, r3}
   157bc:	mov	r2, #1
   157c0:	mov	r1, #58	; 0x3a
   157c4:	add	r0, sp, #48	; 0x30
   157c8:	bl	15358 <dcngettext@plt+0x4368>
   157cc:	add	r3, sp, #48	; 0x30
   157d0:	mvn	r2, #0
   157d4:	mov	r1, r5
   157d8:	mov	r0, r4
   157dc:	bl	1512c <dcngettext@plt+0x413c>
   157e0:	add	sp, sp, #100	; 0x64
   157e4:	pop	{r4, r5, pc}
   157e8:	push	{r4, r5, r6, r7, lr}
   157ec:	sub	sp, sp, #52	; 0x34
   157f0:	mov	r4, r0
   157f4:	mov	r6, r1
   157f8:	mov	r7, r2
   157fc:	mov	r5, r3
   15800:	mov	ip, sp
   15804:	ldr	lr, [pc, #64]	; 1584c <dcngettext@plt+0x485c>
   15808:	ldm	lr!, {r0, r1, r2, r3}
   1580c:	stmia	ip!, {r0, r1, r2, r3}
   15810:	ldm	lr!, {r0, r1, r2, r3}
   15814:	stmia	ip!, {r0, r1, r2, r3}
   15818:	ldm	lr, {r0, r1, r2, r3}
   1581c:	stm	ip, {r0, r1, r2, r3}
   15820:	mov	r2, r7
   15824:	mov	r1, r6
   15828:	mov	r0, sp
   1582c:	bl	153b4 <dcngettext@plt+0x43c4>
   15830:	mov	r3, sp
   15834:	ldr	r2, [sp, #72]	; 0x48
   15838:	mov	r1, r5
   1583c:	mov	r0, r4
   15840:	bl	1512c <dcngettext@plt+0x413c>
   15844:	add	sp, sp, #52	; 0x34
   15848:	pop	{r4, r5, r6, r7, pc}
   1584c:	muleq	r2, r0, r2
   15850:	push	{lr}		; (str lr, [sp, #-4]!)
   15854:	sub	sp, sp, #12
   15858:	mvn	ip, #0
   1585c:	str	ip, [sp]
   15860:	bl	157e8 <dcngettext@plt+0x47f8>
   15864:	add	sp, sp, #12
   15868:	pop	{pc}		; (ldr pc, [sp], #4)
   1586c:	push	{r4, lr}
   15870:	mov	r3, r2
   15874:	mov	r2, r1
   15878:	mov	r1, r0
   1587c:	mov	r0, #0
   15880:	bl	15850 <dcngettext@plt+0x4860>
   15884:	pop	{r4, pc}
   15888:	push	{lr}		; (str lr, [sp, #-4]!)
   1588c:	sub	sp, sp, #12
   15890:	str	r3, [sp]
   15894:	mov	r3, r2
   15898:	mov	r2, r1
   1589c:	mov	r1, r0
   158a0:	mov	r0, #0
   158a4:	bl	157e8 <dcngettext@plt+0x47f8>
   158a8:	add	sp, sp, #12
   158ac:	pop	{pc}		; (ldr pc, [sp], #4)
   158b0:	push	{r4, lr}
   158b4:	ldr	r3, [pc, #4]	; 158c0 <dcngettext@plt+0x48d0>
   158b8:	bl	1512c <dcngettext@plt+0x413c>
   158bc:	pop	{r4, pc}
   158c0:	andeq	r9, r2, ip, lsl r1
   158c4:	push	{r4, lr}
   158c8:	mov	r2, r1
   158cc:	mov	r1, r0
   158d0:	mov	r0, #0
   158d4:	bl	158b0 <dcngettext@plt+0x48c0>
   158d8:	pop	{r4, pc}
   158dc:	push	{r4, lr}
   158e0:	mvn	r2, #0
   158e4:	bl	158b0 <dcngettext@plt+0x48c0>
   158e8:	pop	{r4, pc}
   158ec:	push	{r4, lr}
   158f0:	mov	r1, r0
   158f4:	mov	r0, #0
   158f8:	bl	158dc <dcngettext@plt+0x48ec>
   158fc:	pop	{r4, pc}
   15900:	push	{r4, lr}
   15904:	mov	r2, #3
   15908:	mov	r1, #0
   1590c:	bl	165c4 <dcngettext@plt+0x55d4>
   15910:	pop	{r4, pc}
   15914:	push	{r4, r5, r6, lr}
   15918:	sub	sp, sp, #32
   1591c:	mov	r4, r0
   15920:	ldr	r5, [sp, #48]	; 0x30
   15924:	ldr	r6, [sp, #52]	; 0x34
   15928:	cmp	r1, #0
   1592c:	beq	159e4 <dcngettext@plt+0x49f4>
   15930:	str	r3, [sp, #4]
   15934:	str	r2, [sp]
   15938:	mov	r3, r1
   1593c:	ldr	r2, [pc, #940]	; 15cf0 <dcngettext@plt+0x4d00>
   15940:	mov	r1, #1
   15944:	bl	10f3c <__fprintf_chk@plt>
   15948:	mov	r2, #5
   1594c:	ldr	r1, [pc, #928]	; 15cf4 <dcngettext@plt+0x4d04>
   15950:	mov	r0, #0
   15954:	bl	10e04 <dcgettext@plt>
   15958:	ldr	r3, [pc, #920]	; 15cf8 <dcngettext@plt+0x4d08>
   1595c:	str	r3, [sp]
   15960:	mov	r3, r0
   15964:	ldr	r2, [pc, #912]	; 15cfc <dcngettext@plt+0x4d0c>
   15968:	mov	r1, #1
   1596c:	mov	r0, r4
   15970:	bl	10f3c <__fprintf_chk@plt>
   15974:	mov	r1, r4
   15978:	mov	r0, #10
   1597c:	bl	10df8 <fputc_unlocked@plt>
   15980:	mov	r2, #5
   15984:	ldr	r1, [pc, #884]	; 15d00 <dcngettext@plt+0x4d10>
   15988:	mov	r0, #0
   1598c:	bl	10e04 <dcgettext@plt>
   15990:	ldr	r3, [pc, #876]	; 15d04 <dcngettext@plt+0x4d14>
   15994:	mov	r2, r0
   15998:	mov	r1, #1
   1599c:	mov	r0, r4
   159a0:	bl	10f3c <__fprintf_chk@plt>
   159a4:	mov	r1, r4
   159a8:	mov	r0, #10
   159ac:	bl	10df8 <fputc_unlocked@plt>
   159b0:	cmp	r6, #9
   159b4:	ldrls	pc, [pc, r6, lsl #2]
   159b8:	b	15c88 <dcngettext@plt+0x4c98>
   159bc:	andeq	r5, r1, r0, lsr #20
   159c0:	strdeq	r5, [r1], -ip
   159c4:	andeq	r5, r1, r8, lsr #20
   159c8:	andeq	r5, r1, r8, asr sl
   159cc:	muleq	r1, r0, sl
   159d0:	ldrdeq	r5, [r1], -r0
   159d4:	andeq	r5, r1, r8, lsl fp
   159d8:	andeq	r5, r1, r8, ror #22
   159dc:	andeq	r5, r1, r0, asr #23
   159e0:	andeq	r5, r1, r0, lsr #24
   159e4:	str	r3, [sp]
   159e8:	mov	r3, r2
   159ec:	ldr	r2, [pc, #788]	; 15d08 <dcngettext@plt+0x4d18>
   159f0:	mov	r1, #1
   159f4:	bl	10f3c <__fprintf_chk@plt>
   159f8:	b	15948 <dcngettext@plt+0x4958>
   159fc:	mov	r2, #5
   15a00:	ldr	r1, [pc, #772]	; 15d0c <dcngettext@plt+0x4d1c>
   15a04:	mov	r0, #0
   15a08:	bl	10e04 <dcgettext@plt>
   15a0c:	ldr	r3, [r5]
   15a10:	mov	r2, r0
   15a14:	mov	r1, #1
   15a18:	mov	r0, r4
   15a1c:	bl	10f3c <__fprintf_chk@plt>
   15a20:	add	sp, sp, #32
   15a24:	pop	{r4, r5, r6, pc}
   15a28:	mov	r2, #5
   15a2c:	ldr	r1, [pc, #732]	; 15d10 <dcngettext@plt+0x4d20>
   15a30:	mov	r0, #0
   15a34:	bl	10e04 <dcgettext@plt>
   15a38:	ldr	r3, [r5]
   15a3c:	ldr	r2, [r5, #4]
   15a40:	str	r2, [sp]
   15a44:	mov	r2, r0
   15a48:	mov	r1, #1
   15a4c:	mov	r0, r4
   15a50:	bl	10f3c <__fprintf_chk@plt>
   15a54:	b	15a20 <dcngettext@plt+0x4a30>
   15a58:	mov	r2, #5
   15a5c:	ldr	r1, [pc, #688]	; 15d14 <dcngettext@plt+0x4d24>
   15a60:	mov	r0, #0
   15a64:	bl	10e04 <dcgettext@plt>
   15a68:	ldr	r3, [r5]
   15a6c:	ldr	r2, [r5, #8]
   15a70:	str	r2, [sp, #4]
   15a74:	ldr	r2, [r5, #4]
   15a78:	str	r2, [sp]
   15a7c:	mov	r2, r0
   15a80:	mov	r1, #1
   15a84:	mov	r0, r4
   15a88:	bl	10f3c <__fprintf_chk@plt>
   15a8c:	b	15a20 <dcngettext@plt+0x4a30>
   15a90:	mov	r2, #5
   15a94:	ldr	r1, [pc, #636]	; 15d18 <dcngettext@plt+0x4d28>
   15a98:	mov	r0, #0
   15a9c:	bl	10e04 <dcgettext@plt>
   15aa0:	ldr	r3, [r5]
   15aa4:	ldr	r2, [r5, #12]
   15aa8:	str	r2, [sp, #8]
   15aac:	ldr	r2, [r5, #8]
   15ab0:	str	r2, [sp, #4]
   15ab4:	ldr	r2, [r5, #4]
   15ab8:	str	r2, [sp]
   15abc:	mov	r2, r0
   15ac0:	mov	r1, #1
   15ac4:	mov	r0, r4
   15ac8:	bl	10f3c <__fprintf_chk@plt>
   15acc:	b	15a20 <dcngettext@plt+0x4a30>
   15ad0:	mov	r2, #5
   15ad4:	ldr	r1, [pc, #576]	; 15d1c <dcngettext@plt+0x4d2c>
   15ad8:	mov	r0, #0
   15adc:	bl	10e04 <dcgettext@plt>
   15ae0:	ldr	r3, [r5]
   15ae4:	ldr	r2, [r5, #16]
   15ae8:	str	r2, [sp, #12]
   15aec:	ldr	r2, [r5, #12]
   15af0:	str	r2, [sp, #8]
   15af4:	ldr	r2, [r5, #8]
   15af8:	str	r2, [sp, #4]
   15afc:	ldr	r2, [r5, #4]
   15b00:	str	r2, [sp]
   15b04:	mov	r2, r0
   15b08:	mov	r1, #1
   15b0c:	mov	r0, r4
   15b10:	bl	10f3c <__fprintf_chk@plt>
   15b14:	b	15a20 <dcngettext@plt+0x4a30>
   15b18:	mov	r2, #5
   15b1c:	ldr	r1, [pc, #508]	; 15d20 <dcngettext@plt+0x4d30>
   15b20:	mov	r0, #0
   15b24:	bl	10e04 <dcgettext@plt>
   15b28:	ldr	r3, [r5]
   15b2c:	ldr	r2, [r5, #20]
   15b30:	str	r2, [sp, #16]
   15b34:	ldr	r2, [r5, #16]
   15b38:	str	r2, [sp, #12]
   15b3c:	ldr	r2, [r5, #12]
   15b40:	str	r2, [sp, #8]
   15b44:	ldr	r2, [r5, #8]
   15b48:	str	r2, [sp, #4]
   15b4c:	ldr	r2, [r5, #4]
   15b50:	str	r2, [sp]
   15b54:	mov	r2, r0
   15b58:	mov	r1, #1
   15b5c:	mov	r0, r4
   15b60:	bl	10f3c <__fprintf_chk@plt>
   15b64:	b	15a20 <dcngettext@plt+0x4a30>
   15b68:	mov	r2, #5
   15b6c:	ldr	r1, [pc, #432]	; 15d24 <dcngettext@plt+0x4d34>
   15b70:	mov	r0, #0
   15b74:	bl	10e04 <dcgettext@plt>
   15b78:	ldr	r3, [r5]
   15b7c:	ldr	r2, [r5, #24]
   15b80:	str	r2, [sp, #20]
   15b84:	ldr	r2, [r5, #20]
   15b88:	str	r2, [sp, #16]
   15b8c:	ldr	r2, [r5, #16]
   15b90:	str	r2, [sp, #12]
   15b94:	ldr	r2, [r5, #12]
   15b98:	str	r2, [sp, #8]
   15b9c:	ldr	r2, [r5, #8]
   15ba0:	str	r2, [sp, #4]
   15ba4:	ldr	r2, [r5, #4]
   15ba8:	str	r2, [sp]
   15bac:	mov	r2, r0
   15bb0:	mov	r1, #1
   15bb4:	mov	r0, r4
   15bb8:	bl	10f3c <__fprintf_chk@plt>
   15bbc:	b	15a20 <dcngettext@plt+0x4a30>
   15bc0:	mov	r2, #5
   15bc4:	ldr	r1, [pc, #348]	; 15d28 <dcngettext@plt+0x4d38>
   15bc8:	mov	r0, #0
   15bcc:	bl	10e04 <dcgettext@plt>
   15bd0:	ldr	r3, [r5]
   15bd4:	ldr	r2, [r5, #28]
   15bd8:	str	r2, [sp, #24]
   15bdc:	ldr	r2, [r5, #24]
   15be0:	str	r2, [sp, #20]
   15be4:	ldr	r2, [r5, #20]
   15be8:	str	r2, [sp, #16]
   15bec:	ldr	r2, [r5, #16]
   15bf0:	str	r2, [sp, #12]
   15bf4:	ldr	r2, [r5, #12]
   15bf8:	str	r2, [sp, #8]
   15bfc:	ldr	r2, [r5, #8]
   15c00:	str	r2, [sp, #4]
   15c04:	ldr	r2, [r5, #4]
   15c08:	str	r2, [sp]
   15c0c:	mov	r2, r0
   15c10:	mov	r1, #1
   15c14:	mov	r0, r4
   15c18:	bl	10f3c <__fprintf_chk@plt>
   15c1c:	b	15a20 <dcngettext@plt+0x4a30>
   15c20:	mov	r2, #5
   15c24:	ldr	r1, [pc, #256]	; 15d2c <dcngettext@plt+0x4d3c>
   15c28:	mov	r0, #0
   15c2c:	bl	10e04 <dcgettext@plt>
   15c30:	ldr	r3, [r5]
   15c34:	ldr	r2, [r5, #32]
   15c38:	str	r2, [sp, #28]
   15c3c:	ldr	r2, [r5, #28]
   15c40:	str	r2, [sp, #24]
   15c44:	ldr	r2, [r5, #24]
   15c48:	str	r2, [sp, #20]
   15c4c:	ldr	r2, [r5, #20]
   15c50:	str	r2, [sp, #16]
   15c54:	ldr	r2, [r5, #16]
   15c58:	str	r2, [sp, #12]
   15c5c:	ldr	r2, [r5, #12]
   15c60:	str	r2, [sp, #8]
   15c64:	ldr	r2, [r5, #8]
   15c68:	str	r2, [sp, #4]
   15c6c:	ldr	r2, [r5, #4]
   15c70:	str	r2, [sp]
   15c74:	mov	r2, r0
   15c78:	mov	r1, #1
   15c7c:	mov	r0, r4
   15c80:	bl	10f3c <__fprintf_chk@plt>
   15c84:	b	15a20 <dcngettext@plt+0x4a30>
   15c88:	mov	r2, #5
   15c8c:	ldr	r1, [pc, #156]	; 15d30 <dcngettext@plt+0x4d40>
   15c90:	mov	r0, #0
   15c94:	bl	10e04 <dcgettext@plt>
   15c98:	ldr	r3, [r5]
   15c9c:	ldr	r2, [r5, #32]
   15ca0:	str	r2, [sp, #28]
   15ca4:	ldr	r2, [r5, #28]
   15ca8:	str	r2, [sp, #24]
   15cac:	ldr	r2, [r5, #24]
   15cb0:	str	r2, [sp, #20]
   15cb4:	ldr	r2, [r5, #20]
   15cb8:	str	r2, [sp, #16]
   15cbc:	ldr	r2, [r5, #16]
   15cc0:	str	r2, [sp, #12]
   15cc4:	ldr	r2, [r5, #12]
   15cc8:	str	r2, [sp, #8]
   15ccc:	ldr	r2, [r5, #8]
   15cd0:	str	r2, [sp, #4]
   15cd4:	ldr	r2, [r5, #4]
   15cd8:	str	r2, [sp]
   15cdc:	mov	r2, r0
   15ce0:	mov	r1, #1
   15ce4:	mov	r0, r4
   15ce8:	bl	10f3c <__fprintf_chk@plt>
   15cec:	b	15a20 <dcngettext@plt+0x4a30>
   15cf0:	andeq	r7, r1, r0, lsl #30
   15cf4:	andeq	r7, r1, r4, lsl pc
   15cf8:	andeq	r0, r0, r6, ror #15
   15cfc:	andeq	r8, r1, ip, ror #3
   15d00:	andeq	r7, r1, r8, lsl pc
   15d04:	andeq	r7, r1, r4, asr #31
   15d08:	andeq	r7, r1, ip, lsl #30
   15d0c:	andeq	r7, r1, r8, ror #31
   15d10:	strdeq	r7, [r1], -r8
   15d14:	andeq	r8, r1, r0, lsl r0
   15d18:	andeq	r8, r1, ip, lsr #32
   15d1c:	andeq	r8, r1, ip, asr #32
   15d20:	andeq	r8, r1, r0, ror r0
   15d24:	muleq	r1, r8, r0
   15d28:	andeq	r8, r1, r4, asr #1
   15d2c:	strdeq	r8, [r1], -r4
   15d30:	andeq	r8, r1, r8, lsr #2
   15d34:	push	{r4, r5, lr}
   15d38:	sub	sp, sp, #12
   15d3c:	ldr	r5, [sp, #24]
   15d40:	ldr	ip, [r5]
   15d44:	cmp	ip, #0
   15d48:	beq	15d78 <dcngettext@plt+0x4d88>
   15d4c:	mov	lr, r5
   15d50:	mov	ip, #0
   15d54:	add	ip, ip, #1
   15d58:	ldr	r4, [lr, #4]!
   15d5c:	cmp	r4, #0
   15d60:	bne	15d54 <dcngettext@plt+0x4d64>
   15d64:	str	ip, [sp, #4]
   15d68:	str	r5, [sp]
   15d6c:	bl	15914 <dcngettext@plt+0x4924>
   15d70:	add	sp, sp, #12
   15d74:	pop	{r4, r5, pc}
   15d78:	mov	ip, #0
   15d7c:	b	15d64 <dcngettext@plt+0x4d74>
   15d80:	push	{r4, r5, lr}
   15d84:	sub	sp, sp, #52	; 0x34
   15d88:	ldr	r4, [sp, #64]	; 0x40
   15d8c:	sub	r4, r4, #4
   15d90:	add	r5, sp, #4
   15d94:	mov	ip, #0
   15d98:	ldr	lr, [r4, #4]!
   15d9c:	str	lr, [r5, #4]!
   15da0:	cmp	lr, #0
   15da4:	beq	15db4 <dcngettext@plt+0x4dc4>
   15da8:	add	ip, ip, #1
   15dac:	cmp	ip, #10
   15db0:	bne	15d98 <dcngettext@plt+0x4da8>
   15db4:	str	ip, [sp, #4]
   15db8:	add	ip, sp, #8
   15dbc:	str	ip, [sp]
   15dc0:	bl	15914 <dcngettext@plt+0x4924>
   15dc4:	add	sp, sp, #52	; 0x34
   15dc8:	pop	{r4, r5, pc}
   15dcc:	push	{r3}		; (str r3, [sp, #-4]!)
   15dd0:	push	{lr}		; (str lr, [sp, #-4]!)
   15dd4:	sub	sp, sp, #16
   15dd8:	add	r3, sp, #24
   15ddc:	str	r3, [sp, #12]
   15de0:	str	r3, [sp]
   15de4:	ldr	r3, [sp, #20]
   15de8:	bl	15d80 <dcngettext@plt+0x4d90>
   15dec:	add	sp, sp, #16
   15df0:	pop	{lr}		; (ldr lr, [sp], #4)
   15df4:	add	sp, sp, #4
   15df8:	bx	lr
   15dfc:	push	{r4, lr}
   15e00:	ldr	r3, [pc, #112]	; 15e78 <dcngettext@plt+0x4e88>
   15e04:	ldr	r1, [r3]
   15e08:	mov	r0, #10
   15e0c:	bl	10df8 <fputc_unlocked@plt>
   15e10:	mov	r2, #5
   15e14:	ldr	r1, [pc, #96]	; 15e7c <dcngettext@plt+0x4e8c>
   15e18:	mov	r0, #0
   15e1c:	bl	10e04 <dcgettext@plt>
   15e20:	ldr	r2, [pc, #88]	; 15e80 <dcngettext@plt+0x4e90>
   15e24:	mov	r1, r0
   15e28:	mov	r0, #1
   15e2c:	bl	10f24 <__printf_chk@plt>
   15e30:	mov	r2, #5
   15e34:	ldr	r1, [pc, #72]	; 15e84 <dcngettext@plt+0x4e94>
   15e38:	mov	r0, #0
   15e3c:	bl	10e04 <dcgettext@plt>
   15e40:	ldr	r3, [pc, #64]	; 15e88 <dcngettext@plt+0x4e98>
   15e44:	ldr	r2, [pc, #64]	; 15e8c <dcngettext@plt+0x4e9c>
   15e48:	mov	r1, r0
   15e4c:	mov	r0, #1
   15e50:	bl	10f24 <__printf_chk@plt>
   15e54:	mov	r2, #5
   15e58:	ldr	r1, [pc, #48]	; 15e90 <dcngettext@plt+0x4ea0>
   15e5c:	mov	r0, #0
   15e60:	bl	10e04 <dcgettext@plt>
   15e64:	ldr	r2, [pc, #40]	; 15e94 <dcngettext@plt+0x4ea4>
   15e68:	mov	r1, r0
   15e6c:	mov	r0, #1
   15e70:	bl	10f24 <__printf_chk@plt>
   15e74:	pop	{r4, pc}
   15e78:	andeq	r9, r2, ip, ror #2
   15e7c:	andeq	r8, r1, r4, ror #2
   15e80:	andeq	r8, r1, r8, ror r1
   15e84:	muleq	r1, r0, r1
   15e88:	andeq	r7, r1, r0, asr r7
   15e8c:	andeq	r7, r1, r8, ror r7
   15e90:	andeq	r8, r1, r4, lsr #3
   15e94:	andeq	r8, r1, ip, asr #3
   15e98:	push	{r4, lr}
   15e9c:	bl	164cc <dcngettext@plt+0x54dc>
   15ea0:	cmp	r0, #0
   15ea4:	popne	{r4, pc}
   15ea8:	bl	1643c <dcngettext@plt+0x544c>
   15eac:	push	{r4, lr}
   15eb0:	bl	164cc <dcngettext@plt+0x54dc>
   15eb4:	cmp	r0, #0
   15eb8:	popne	{r4, pc}
   15ebc:	bl	1643c <dcngettext@plt+0x544c>
   15ec0:	push	{r4, lr}
   15ec4:	bl	15e98 <dcngettext@plt+0x4ea8>
   15ec8:	pop	{r4, pc}
   15ecc:	push	{r4, r5, r6, lr}
   15ed0:	mov	r5, r0
   15ed4:	mov	r4, r1
   15ed8:	bl	164fc <dcngettext@plt+0x550c>
   15edc:	cmp	r0, #0
   15ee0:	popne	{r4, r5, r6, pc}
   15ee4:	adds	r4, r4, #0
   15ee8:	movne	r4, #1
   15eec:	cmp	r5, #0
   15ef0:	orreq	r4, r4, #1
   15ef4:	cmp	r4, #0
   15ef8:	popeq	{r4, r5, r6, pc}
   15efc:	bl	1643c <dcngettext@plt+0x544c>
   15f00:	push	{r4, lr}
   15f04:	cmp	r1, #0
   15f08:	orreq	r1, r1, #1
   15f0c:	bl	164fc <dcngettext@plt+0x550c>
   15f10:	cmp	r0, #0
   15f14:	popne	{r4, pc}
   15f18:	bl	1643c <dcngettext@plt+0x544c>
   15f1c:	push	{r4, r5, r6, lr}
   15f20:	mov	r6, r0
   15f24:	mov	r5, r1
   15f28:	mov	r4, r2
   15f2c:	bl	168a8 <dcngettext@plt+0x58b8>
   15f30:	cmp	r0, #0
   15f34:	popne	{r4, r5, r6, pc}
   15f38:	cmp	r6, #0
   15f3c:	beq	15f4c <dcngettext@plt+0x4f5c>
   15f40:	cmp	r5, #0
   15f44:	cmpne	r4, #0
   15f48:	popeq	{r4, r5, r6, pc}
   15f4c:	bl	1643c <dcngettext@plt+0x544c>
   15f50:	push	{r4, lr}
   15f54:	bl	15f1c <dcngettext@plt+0x4f2c>
   15f58:	pop	{r4, pc}
   15f5c:	push	{r4, lr}
   15f60:	mov	ip, r1
   15f64:	mov	r3, r2
   15f68:	cmp	r2, #0
   15f6c:	cmpne	r1, #0
   15f70:	moveq	r3, #1
   15f74:	moveq	ip, r3
   15f78:	mov	r2, r3
   15f7c:	mov	r1, ip
   15f80:	bl	168a8 <dcngettext@plt+0x58b8>
   15f84:	cmp	r0, #0
   15f88:	popne	{r4, pc}
   15f8c:	bl	1643c <dcngettext@plt+0x544c>
   15f90:	push	{r4, lr}
   15f94:	mov	r2, r1
   15f98:	mov	r1, r0
   15f9c:	mov	r0, #0
   15fa0:	bl	15f1c <dcngettext@plt+0x4f2c>
   15fa4:	pop	{r4, pc}
   15fa8:	push	{r4, lr}
   15fac:	mov	r2, r1
   15fb0:	mov	r1, r0
   15fb4:	mov	r0, #0
   15fb8:	bl	15f5c <dcngettext@plt+0x4f6c>
   15fbc:	pop	{r4, pc}
   15fc0:	push	{r4, r5, r6, r7, r8, lr}
   15fc4:	mov	r5, r1
   15fc8:	mov	r6, r2
   15fcc:	ldr	r4, [r1]
   15fd0:	subs	r7, r0, #0
   15fd4:	beq	15ff0 <dcngettext@plt+0x5000>
   15fd8:	lsr	r2, r4, #1
   15fdc:	add	r3, r2, #1
   15fe0:	mvn	r3, r3
   15fe4:	cmp	r4, r3
   15fe8:	bls	16014 <dcngettext@plt+0x5024>
   15fec:	bl	1643c <dcngettext@plt+0x544c>
   15ff0:	cmp	r4, #0
   15ff4:	bne	1601c <dcngettext@plt+0x502c>
   15ff8:	mov	r1, r2
   15ffc:	mov	r0, #64	; 0x40
   16000:	bl	169fc <dcngettext@plt+0x5a0c>
   16004:	cmp	r0, #0
   16008:	movne	r4, r0
   1600c:	addeq	r4, r0, #1
   16010:	b	1601c <dcngettext@plt+0x502c>
   16014:	add	r4, r4, #1
   16018:	add	r4, r4, r2
   1601c:	mov	r2, r6
   16020:	mov	r1, r4
   16024:	mov	r0, r7
   16028:	bl	15f1c <dcngettext@plt+0x4f2c>
   1602c:	str	r4, [r5]
   16030:	pop	{r4, r5, r6, r7, r8, pc}
   16034:	push	{r4, lr}
   16038:	mov	r2, #1
   1603c:	bl	15fc0 <dcngettext@plt+0x4fd0>
   16040:	pop	{r4, pc}
   16044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16048:	sub	sp, sp, #12
   1604c:	mov	fp, r0
   16050:	mov	sl, r1
   16054:	mov	r9, r2
   16058:	mov	r7, r3
   1605c:	ldr	r6, [sp, #48]	; 0x30
   16060:	ldr	r5, [r1]
   16064:	asrs	r4, r5, #1
   16068:	bmi	161c4 <dcngettext@plt+0x51d4>
   1606c:	cmp	r5, #0
   16070:	blt	161d8 <dcngettext@plt+0x51e8>
   16074:	mvn	r3, #-2147483648	; 0x80000000
   16078:	sub	r3, r3, r4
   1607c:	cmp	r5, r3
   16080:	movle	r3, #0
   16084:	movgt	r3, #1
   16088:	cmp	r3, #0
   1608c:	addeq	r4, r4, r5
   16090:	mvnne	r4, #-2147483648	; 0x80000000
   16094:	mvn	r8, r7
   16098:	lsr	r8, r8, #31
   1609c:	cmp	r7, r4
   160a0:	movge	r3, #0
   160a4:	andlt	r3, r8, #1
   160a8:	cmp	r3, #0
   160ac:	movne	r4, r7
   160b0:	cmp	r6, #0
   160b4:	blt	161ec <dcngettext@plt+0x51fc>
   160b8:	cmp	r6, #0
   160bc:	beq	16298 <dcngettext@plt+0x52a8>
   160c0:	cmp	r4, #0
   160c4:	blt	16248 <dcngettext@plt+0x5258>
   160c8:	mov	r1, r6
   160cc:	mvn	r0, #-2147483648	; 0x80000000
   160d0:	bl	16c08 <dcngettext@plt+0x5c18>
   160d4:	cmp	r0, r4
   160d8:	movge	r0, #0
   160dc:	movlt	r0, #1
   160e0:	cmp	r0, #0
   160e4:	mvnne	r3, #-2147483648	; 0x80000000
   160e8:	strne	r3, [sp, #4]
   160ec:	beq	16280 <dcngettext@plt+0x5290>
   160f0:	mov	r1, r6
   160f4:	ldr	r0, [sp, #4]
   160f8:	bl	16c08 <dcngettext@plt+0x5c18>
   160fc:	mov	r4, r0
   16100:	mov	r1, r6
   16104:	ldr	r0, [sp, #4]
   16108:	bl	16e28 <dcngettext@plt+0x5e38>
   1610c:	ldr	r3, [sp, #4]
   16110:	sub	r1, r3, r1
   16114:	cmp	fp, #0
   16118:	moveq	r3, #0
   1611c:	streq	r3, [sl]
   16120:	sub	r3, r4, r5
   16124:	cmp	r3, r9
   16128:	bge	161b0 <dcngettext@plt+0x51c0>
   1612c:	cmp	r9, #0
   16130:	blt	162a4 <dcngettext@plt+0x52b4>
   16134:	cmp	r5, #0
   16138:	blt	162b8 <dcngettext@plt+0x52c8>
   1613c:	mvn	r3, #-2147483648	; 0x80000000
   16140:	sub	r3, r3, r9
   16144:	cmp	r5, r3
   16148:	movle	r3, #0
   1614c:	movgt	r3, #1
   16150:	cmp	r3, #0
   16154:	bne	16360 <dcngettext@plt+0x5370>
   16158:	add	r5, r5, r9
   1615c:	mov	r4, r5
   16160:	cmp	r7, r5
   16164:	movge	r7, #0
   16168:	andlt	r7, r8, #1
   1616c:	cmp	r7, #0
   16170:	bne	16360 <dcngettext@plt+0x5370>
   16174:	cmp	r6, #0
   16178:	blt	162cc <dcngettext@plt+0x52dc>
   1617c:	cmp	r6, #0
   16180:	beq	161ac <dcngettext@plt+0x51bc>
   16184:	cmp	r5, #0
   16188:	blt	16328 <dcngettext@plt+0x5338>
   1618c:	mov	r1, r6
   16190:	mvn	r0, #-2147483648	; 0x80000000
   16194:	bl	16c08 <dcngettext@plt+0x5c18>
   16198:	cmp	r5, r0
   1619c:	movle	r0, #0
   161a0:	movgt	r0, #1
   161a4:	cmp	r0, #0
   161a8:	bne	16360 <dcngettext@plt+0x5370>
   161ac:	mul	r1, r5, r6
   161b0:	mov	r0, fp
   161b4:	bl	15ecc <dcngettext@plt+0x4edc>
   161b8:	str	r4, [sl]
   161bc:	add	sp, sp, #12
   161c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161c4:	rsb	r3, r4, #-2147483648	; 0x80000000
   161c8:	cmp	r5, r3
   161cc:	movge	r3, #0
   161d0:	movlt	r3, #1
   161d4:	b	16088 <dcngettext@plt+0x5098>
   161d8:	rsb	r3, r5, #-2147483648	; 0x80000000
   161dc:	cmp	r4, r3
   161e0:	movge	r3, #0
   161e4:	movlt	r3, #1
   161e8:	b	16088 <dcngettext@plt+0x5098>
   161ec:	cmp	r4, #0
   161f0:	blt	16218 <dcngettext@plt+0x5228>
   161f4:	cmn	r6, #1
   161f8:	beq	16234 <dcngettext@plt+0x5244>
   161fc:	mov	r1, r6
   16200:	mov	r0, #-2147483648	; 0x80000000
   16204:	bl	16c08 <dcngettext@plt+0x5c18>
   16208:	cmp	r0, r4
   1620c:	movge	r0, #0
   16210:	movlt	r0, #1
   16214:	b	160e0 <dcngettext@plt+0x50f0>
   16218:	mov	r1, r6
   1621c:	mvn	r0, #-2147483648	; 0x80000000
   16220:	bl	16c08 <dcngettext@plt+0x5c18>
   16224:	cmp	r0, r4
   16228:	movle	r0, #0
   1622c:	movgt	r0, #1
   16230:	b	160e0 <dcngettext@plt+0x50f0>
   16234:	add	r0, r4, #-2147483648	; 0x80000000
   16238:	cmp	r0, #0
   1623c:	movle	r0, #0
   16240:	movgt	r0, #1
   16244:	b	160e0 <dcngettext@plt+0x50f0>
   16248:	cmn	r4, #1
   1624c:	beq	1626c <dcngettext@plt+0x527c>
   16250:	mov	r1, r4
   16254:	mov	r0, #-2147483648	; 0x80000000
   16258:	bl	16c08 <dcngettext@plt+0x5c18>
   1625c:	cmp	r6, r0
   16260:	movle	r0, #0
   16264:	movgt	r0, #1
   16268:	b	160e0 <dcngettext@plt+0x50f0>
   1626c:	add	r0, r6, #-2147483648	; 0x80000000
   16270:	cmp	r0, #0
   16274:	movle	r0, #0
   16278:	movgt	r0, #1
   1627c:	b	160e0 <dcngettext@plt+0x50f0>
   16280:	mul	r1, r6, r4
   16284:	cmp	r1, #63	; 0x3f
   16288:	movle	r3, #64	; 0x40
   1628c:	strle	r3, [sp, #4]
   16290:	bgt	16114 <dcngettext@plt+0x5124>
   16294:	b	160f0 <dcngettext@plt+0x5100>
   16298:	mov	r3, #64	; 0x40
   1629c:	str	r3, [sp, #4]
   162a0:	b	160f0 <dcngettext@plt+0x5100>
   162a4:	rsb	r3, r9, #-2147483648	; 0x80000000
   162a8:	cmp	r5, r3
   162ac:	movge	r3, #0
   162b0:	movlt	r3, #1
   162b4:	b	16150 <dcngettext@plt+0x5160>
   162b8:	rsb	r3, r5, #-2147483648	; 0x80000000
   162bc:	cmp	r9, r3
   162c0:	movge	r3, #0
   162c4:	movlt	r3, #1
   162c8:	b	16150 <dcngettext@plt+0x5160>
   162cc:	cmp	r5, #0
   162d0:	blt	162f8 <dcngettext@plt+0x5308>
   162d4:	cmn	r6, #1
   162d8:	beq	16314 <dcngettext@plt+0x5324>
   162dc:	mov	r1, r6
   162e0:	mov	r0, #-2147483648	; 0x80000000
   162e4:	bl	16c08 <dcngettext@plt+0x5c18>
   162e8:	cmp	r5, r0
   162ec:	movle	r0, #0
   162f0:	movgt	r0, #1
   162f4:	b	161a4 <dcngettext@plt+0x51b4>
   162f8:	mov	r1, r6
   162fc:	mvn	r0, #-2147483648	; 0x80000000
   16300:	bl	16c08 <dcngettext@plt+0x5c18>
   16304:	cmp	r5, r0
   16308:	movge	r0, #0
   1630c:	movlt	r0, #1
   16310:	b	161a4 <dcngettext@plt+0x51b4>
   16314:	add	r0, r5, #-2147483648	; 0x80000000
   16318:	cmp	r0, #0
   1631c:	movle	r0, #0
   16320:	movgt	r0, #1
   16324:	b	161a4 <dcngettext@plt+0x51b4>
   16328:	cmn	r5, #1
   1632c:	beq	1634c <dcngettext@plt+0x535c>
   16330:	mov	r1, r5
   16334:	mov	r0, #-2147483648	; 0x80000000
   16338:	bl	16c08 <dcngettext@plt+0x5c18>
   1633c:	cmp	r6, r0
   16340:	movle	r0, #0
   16344:	movgt	r0, #1
   16348:	b	161a4 <dcngettext@plt+0x51b4>
   1634c:	add	r0, r6, #-2147483648	; 0x80000000
   16350:	cmp	r0, #0
   16354:	movle	r0, #0
   16358:	movgt	r0, #1
   1635c:	b	161a4 <dcngettext@plt+0x51b4>
   16360:	bl	1643c <dcngettext@plt+0x544c>
   16364:	push	{r4, lr}
   16368:	bl	1647c <dcngettext@plt+0x548c>
   1636c:	cmp	r0, #0
   16370:	popne	{r4, pc}
   16374:	bl	1643c <dcngettext@plt+0x544c>
   16378:	push	{r4, lr}
   1637c:	mov	r1, #1
   16380:	bl	16364 <dcngettext@plt+0x5374>
   16384:	pop	{r4, pc}
   16388:	push	{r4, lr}
   1638c:	bl	1647c <dcngettext@plt+0x548c>
   16390:	cmp	r0, #0
   16394:	popne	{r4, pc}
   16398:	bl	1643c <dcngettext@plt+0x544c>
   1639c:	push	{r4, lr}
   163a0:	mov	r1, #1
   163a4:	bl	16388 <dcngettext@plt+0x5398>
   163a8:	pop	{r4, pc}
   163ac:	push	{r4, r5, r6, lr}
   163b0:	mov	r5, r0
   163b4:	mov	r4, r1
   163b8:	mov	r0, r1
   163bc:	bl	15e98 <dcngettext@plt+0x4ea8>
   163c0:	mov	r2, r4
   163c4:	mov	r1, r5
   163c8:	bl	10dc8 <memcpy@plt>
   163cc:	pop	{r4, r5, r6, pc}
   163d0:	push	{r4, r5, r6, lr}
   163d4:	mov	r5, r0
   163d8:	mov	r4, r1
   163dc:	mov	r0, r1
   163e0:	bl	15eac <dcngettext@plt+0x4ebc>
   163e4:	mov	r2, r4
   163e8:	mov	r1, r5
   163ec:	bl	10dc8 <memcpy@plt>
   163f0:	pop	{r4, r5, r6, pc}
   163f4:	push	{r4, r5, r6, lr}
   163f8:	mov	r5, r0
   163fc:	mov	r4, r1
   16400:	add	r0, r1, #1
   16404:	bl	15eac <dcngettext@plt+0x4ebc>
   16408:	mov	r2, #0
   1640c:	strb	r2, [r0, r4]
   16410:	mov	r2, r4
   16414:	mov	r1, r5
   16418:	bl	10dc8 <memcpy@plt>
   1641c:	pop	{r4, r5, r6, pc}
   16420:	push	{r4, lr}
   16424:	mov	r4, r0
   16428:	bl	10edc <strlen@plt>
   1642c:	add	r1, r0, #1
   16430:	mov	r0, r4
   16434:	bl	163ac <dcngettext@plt+0x53bc>
   16438:	pop	{r4, pc}
   1643c:	push	{r4, lr}
   16440:	ldr	r3, [pc, #40]	; 16470 <dcngettext@plt+0x5480>
   16444:	ldr	r4, [r3]
   16448:	mov	r2, #5
   1644c:	ldr	r1, [pc, #32]	; 16474 <dcngettext@plt+0x5484>
   16450:	mov	r0, #0
   16454:	bl	10e04 <dcgettext@plt>
   16458:	mov	r3, r0
   1645c:	ldr	r2, [pc, #20]	; 16478 <dcngettext@plt+0x5488>
   16460:	mov	r1, #0
   16464:	mov	r0, r4
   16468:	bl	10e70 <error@plt>
   1646c:	bl	10fd8 <abort@plt>
   16470:	andeq	r9, r2, r8, lsl #2
   16474:	andeq	r8, r1, ip, lsl r2
   16478:	andeq	r7, r1, r0, lsr #27
   1647c:	push	{r4, lr}
   16480:	mov	r2, r0
   16484:	mov	r3, r1
   16488:	cmp	r1, #0
   1648c:	cmpne	r0, #0
   16490:	moveq	r3, #1
   16494:	moveq	r2, r3
   16498:	umull	r0, r1, r2, r3
   1649c:	cmp	r0, #0
   164a0:	cmpge	r1, #0
   164a4:	bne	164b8 <dcngettext@plt+0x54c8>
   164a8:	mov	r1, r3
   164ac:	mov	r0, r2
   164b0:	bl	10d5c <calloc@plt>
   164b4:	pop	{r4, pc}
   164b8:	bl	10ef4 <__errno_location@plt>
   164bc:	mov	r3, #12
   164c0:	str	r3, [r0]
   164c4:	mov	r0, #0
   164c8:	pop	{r4, pc}
   164cc:	push	{r4, lr}
   164d0:	cmp	r0, #0
   164d4:	moveq	r0, #1
   164d8:	cmp	r0, #0
   164dc:	blt	164e8 <dcngettext@plt+0x54f8>
   164e0:	bl	10e7c <malloc@plt>
   164e4:	pop	{r4, pc}
   164e8:	bl	10ef4 <__errno_location@plt>
   164ec:	mov	r3, #12
   164f0:	str	r3, [r0]
   164f4:	mov	r0, #0
   164f8:	pop	{r4, pc}
   164fc:	push	{r4, lr}
   16500:	cmp	r0, #0
   16504:	beq	16520 <dcngettext@plt+0x5530>
   16508:	cmp	r1, #0
   1650c:	beq	1652c <dcngettext@plt+0x553c>
   16510:	cmp	r1, #0
   16514:	blt	16538 <dcngettext@plt+0x5548>
   16518:	bl	10e10 <realloc@plt>
   1651c:	pop	{r4, pc}
   16520:	mov	r0, r1
   16524:	bl	164cc <dcngettext@plt+0x54dc>
   16528:	pop	{r4, pc}
   1652c:	bl	13c9c <dcngettext@plt+0x2cac>
   16530:	mov	r0, #0
   16534:	pop	{r4, pc}
   16538:	bl	10ef4 <__errno_location@plt>
   1653c:	mov	r3, #12
   16540:	str	r3, [r0]
   16544:	mov	r0, #0
   16548:	pop	{r4, pc}
   1654c:	push	{r4, r5, r6, lr}
   16550:	mov	r5, r0
   16554:	bl	10e58 <__fpending@plt>
   16558:	mov	r6, r0
   1655c:	ldr	r4, [r5]
   16560:	and	r4, r4, #32
   16564:	mov	r0, r5
   16568:	bl	13af4 <dcngettext@plt+0x2b04>
   1656c:	cmp	r4, #0
   16570:	bne	16598 <dcngettext@plt+0x55a8>
   16574:	cmp	r0, #0
   16578:	popeq	{r4, r5, r6, pc}
   1657c:	cmp	r6, #0
   16580:	bne	165b4 <dcngettext@plt+0x55c4>
   16584:	bl	10ef4 <__errno_location@plt>
   16588:	ldr	r0, [r0]
   1658c:	subs	r0, r0, #9
   16590:	mvnne	r0, #0
   16594:	pop	{r4, r5, r6, pc}
   16598:	cmp	r0, #0
   1659c:	bne	165bc <dcngettext@plt+0x55cc>
   165a0:	bl	10ef4 <__errno_location@plt>
   165a4:	mov	r3, #0
   165a8:	str	r3, [r0]
   165ac:	mvn	r0, #0
   165b0:	pop	{r4, r5, r6, pc}
   165b4:	mvn	r0, #0
   165b8:	pop	{r4, r5, r6, pc}
   165bc:	mvn	r0, #0
   165c0:	pop	{r4, r5, r6, pc}
   165c4:	push	{r1, r2, r3}
   165c8:	push	{r4, r5, r6, lr}
   165cc:	sub	sp, sp, #12
   165d0:	mov	r5, r0
   165d4:	ldr	r1, [sp, #28]
   165d8:	add	r3, sp, #32
   165dc:	str	r3, [sp, #4]
   165e0:	cmp	r1, #0
   165e4:	beq	1662c <dcngettext@plt+0x563c>
   165e8:	ldr	r3, [pc, #540]	; 1680c <dcngettext@plt+0x581c>
   165ec:	cmp	r1, r3
   165f0:	beq	1665c <dcngettext@plt+0x566c>
   165f4:	cmp	r1, #11
   165f8:	beq	167fc <dcngettext@plt+0x580c>
   165fc:	bgt	16788 <dcngettext@plt+0x5798>
   16600:	cmp	r1, #3
   16604:	beq	167fc <dcngettext@plt+0x580c>
   16608:	ble	16748 <dcngettext@plt+0x5758>
   1660c:	cmp	r1, #8
   16610:	beq	16768 <dcngettext@plt+0x5778>
   16614:	ble	16760 <dcngettext@plt+0x5770>
   16618:	cmp	r1, #9
   1661c:	beq	167fc <dcngettext@plt+0x580c>
   16620:	cmp	r1, #10
   16624:	bne	167c0 <dcngettext@plt+0x57d0>
   16628:	b	16768 <dcngettext@plt+0x5778>
   1662c:	ldr	r3, [sp, #4]
   16630:	add	r2, r3, #4
   16634:	str	r2, [sp, #4]
   16638:	ldr	r2, [r3]
   1663c:	mov	r1, #0
   16640:	bl	10f60 <fcntl64@plt>
   16644:	mov	r4, r0
   16648:	mov	r0, r4
   1664c:	add	sp, sp, #12
   16650:	pop	{r4, r5, r6, lr}
   16654:	add	sp, sp, #12
   16658:	bx	lr
   1665c:	ldr	r3, [sp, #4]
   16660:	add	r2, r3, #4
   16664:	str	r2, [sp, #4]
   16668:	ldr	r6, [r3]
   1666c:	ldr	r3, [pc, #412]	; 16810 <dcngettext@plt+0x5820>
   16670:	ldr	r3, [r3]
   16674:	cmp	r3, #0
   16678:	blt	166d8 <dcngettext@plt+0x56e8>
   1667c:	mov	r2, r6
   16680:	ldr	r1, [pc, #388]	; 1680c <dcngettext@plt+0x581c>
   16684:	bl	10f60 <fcntl64@plt>
   16688:	subs	r4, r0, #0
   1668c:	blt	166a0 <dcngettext@plt+0x56b0>
   16690:	mov	r2, #1
   16694:	ldr	r3, [pc, #372]	; 16810 <dcngettext@plt+0x5820>
   16698:	str	r2, [r3]
   1669c:	b	16648 <dcngettext@plt+0x5658>
   166a0:	bl	10ef4 <__errno_location@plt>
   166a4:	ldr	r3, [r0]
   166a8:	cmp	r3, #22
   166ac:	bne	16690 <dcngettext@plt+0x56a0>
   166b0:	mov	r2, r6
   166b4:	mov	r1, #0
   166b8:	mov	r0, r5
   166bc:	bl	10f60 <fcntl64@plt>
   166c0:	subs	r4, r0, #0
   166c4:	blt	16648 <dcngettext@plt+0x5658>
   166c8:	mvn	r2, #0
   166cc:	ldr	r3, [pc, #316]	; 16810 <dcngettext@plt+0x5820>
   166d0:	str	r2, [r3]
   166d4:	b	166fc <dcngettext@plt+0x570c>
   166d8:	mov	r2, r6
   166dc:	mov	r1, #0
   166e0:	bl	10f60 <fcntl64@plt>
   166e4:	subs	r4, r0, #0
   166e8:	blt	16648 <dcngettext@plt+0x5658>
   166ec:	ldr	r3, [pc, #284]	; 16810 <dcngettext@plt+0x5820>
   166f0:	ldr	r3, [r3]
   166f4:	cmn	r3, #1
   166f8:	bne	16648 <dcngettext@plt+0x5658>
   166fc:	mov	r1, #1
   16700:	mov	r0, r4
   16704:	bl	10f60 <fcntl64@plt>
   16708:	subs	r2, r0, #0
   1670c:	blt	16728 <dcngettext@plt+0x5738>
   16710:	orr	r2, r2, #1
   16714:	mov	r1, #2
   16718:	mov	r0, r4
   1671c:	bl	10f60 <fcntl64@plt>
   16720:	cmn	r0, #1
   16724:	bne	16648 <dcngettext@plt+0x5658>
   16728:	bl	10ef4 <__errno_location@plt>
   1672c:	mov	r5, r0
   16730:	ldr	r6, [r0]
   16734:	mov	r0, r4
   16738:	bl	10fe4 <close@plt>
   1673c:	str	r6, [r5]
   16740:	mvn	r4, #0
   16744:	b	16648 <dcngettext@plt+0x5658>
   16748:	cmp	r1, #1
   1674c:	beq	167fc <dcngettext@plt+0x580c>
   16750:	bgt	16768 <dcngettext@plt+0x5778>
   16754:	cmp	r1, #0
   16758:	bne	167c0 <dcngettext@plt+0x57d0>
   1675c:	b	16768 <dcngettext@plt+0x5778>
   16760:	cmp	r1, #4
   16764:	bne	167c0 <dcngettext@plt+0x57d0>
   16768:	ldr	r3, [sp, #4]
   1676c:	add	r2, r3, #4
   16770:	str	r2, [sp, #4]
   16774:	ldr	r2, [r3]
   16778:	mov	r0, r5
   1677c:	bl	10f60 <fcntl64@plt>
   16780:	mov	r4, r0
   16784:	b	16648 <dcngettext@plt+0x5658>
   16788:	ldr	r3, [pc, #132]	; 16814 <dcngettext@plt+0x5824>
   1678c:	cmp	r1, r3
   16790:	bgt	167e0 <dcngettext@plt+0x57f0>
   16794:	sub	r3, r3, #1
   16798:	cmp	r1, r3
   1679c:	bge	16768 <dcngettext@plt+0x5778>
   167a0:	sub	r3, r3, #5
   167a4:	cmp	r1, r3
   167a8:	beq	167fc <dcngettext@plt+0x580c>
   167ac:	add	r3, r3, #1
   167b0:	cmp	r1, r3
   167b4:	beq	16768 <dcngettext@plt+0x5778>
   167b8:	cmp	r1, #1024	; 0x400
   167bc:	beq	16768 <dcngettext@plt+0x5778>
   167c0:	ldr	r3, [sp, #4]
   167c4:	add	r2, r3, #4
   167c8:	str	r2, [sp, #4]
   167cc:	ldr	r2, [r3]
   167d0:	mov	r0, r5
   167d4:	bl	10f60 <fcntl64@plt>
   167d8:	mov	r4, r0
   167dc:	b	16648 <dcngettext@plt+0x5658>
   167e0:	ldr	r3, [pc, #48]	; 16818 <dcngettext@plt+0x5828>
   167e4:	cmp	r1, r3
   167e8:	beq	16768 <dcngettext@plt+0x5778>
   167ec:	blt	167fc <dcngettext@plt+0x580c>
   167f0:	add	r3, r3, #1
   167f4:	cmp	r1, r3
   167f8:	bne	167c0 <dcngettext@plt+0x57d0>
   167fc:	mov	r0, r5
   16800:	bl	10f60 <fcntl64@plt>
   16804:	mov	r4, r0
   16808:	b	16648 <dcngettext@plt+0x5658>
   1680c:	andeq	r0, r0, r6, lsl #8
   16810:	andeq	r9, r2, r0, asr #5
   16814:	andeq	r0, r0, r7, lsl #8
   16818:	andeq	r0, r0, r9, lsl #8
   1681c:	push	{r4, lr}
   16820:	mov	r0, #14
   16824:	bl	10f90 <nl_langinfo@plt>
   16828:	cmp	r0, #0
   1682c:	beq	16844 <dcngettext@plt+0x5854>
   16830:	ldrb	r2, [r0]
   16834:	ldr	r3, [pc, #16]	; 1684c <dcngettext@plt+0x585c>
   16838:	cmp	r2, #0
   1683c:	moveq	r0, r3
   16840:	pop	{r4, pc}
   16844:	ldr	r0, [pc]	; 1684c <dcngettext@plt+0x585c>
   16848:	pop	{r4, pc}
   1684c:	andeq	r8, r1, r0, lsr r2
   16850:	push	{r4, r5, r6, r7, lr}
   16854:	sub	sp, sp, #12
   16858:	mov	r7, r1
   1685c:	mov	r5, r2
   16860:	subs	r6, r0, #0
   16864:	addeq	r6, sp, #4
   16868:	mov	r0, r6
   1686c:	bl	10e64 <mbrtowc@plt>
   16870:	mov	r4, r0
   16874:	cmp	r5, #0
   16878:	cmnne	r0, #3
   1687c:	bhi	1688c <dcngettext@plt+0x589c>
   16880:	mov	r0, r4
   16884:	add	sp, sp, #12
   16888:	pop	{r4, r5, r6, r7, pc}
   1688c:	mov	r0, #0
   16890:	bl	168f4 <dcngettext@plt+0x5904>
   16894:	cmp	r0, #0
   16898:	ldrbeq	r3, [r7]
   1689c:	streq	r3, [r6]
   168a0:	moveq	r4, #1
   168a4:	b	16880 <dcngettext@plt+0x5890>
   168a8:	push	{r4, r5, r6, lr}
   168ac:	mov	r6, r0
   168b0:	mov	r5, r1
   168b4:	subs	r4, r2, #0
   168b8:	beq	168e4 <dcngettext@plt+0x58f4>
   168bc:	mov	r1, r4
   168c0:	mvn	r0, #0
   168c4:	bl	169fc <dcngettext@plt+0x5a0c>
   168c8:	cmp	r0, r5
   168cc:	bcs	168e4 <dcngettext@plt+0x58f4>
   168d0:	bl	10ef4 <__errno_location@plt>
   168d4:	mov	r3, #12
   168d8:	str	r3, [r0]
   168dc:	mov	r0, #0
   168e0:	pop	{r4, r5, r6, pc}
   168e4:	mul	r1, r5, r4
   168e8:	mov	r0, r6
   168ec:	bl	164fc <dcngettext@plt+0x550c>
   168f0:	pop	{r4, r5, r6, pc}
   168f4:	push	{lr}		; (str lr, [sp, #-4]!)
   168f8:	sub	sp, sp, #268	; 0x10c
   168fc:	ldr	r2, [pc, #68]	; 16948 <dcngettext@plt+0x5958>
   16900:	add	r1, sp, #4
   16904:	bl	16954 <dcngettext@plt+0x5964>
   16908:	cmp	r0, #0
   1690c:	movne	r0, #0
   16910:	bne	16940 <dcngettext@plt+0x5950>
   16914:	ldr	r1, [pc, #48]	; 1694c <dcngettext@plt+0x595c>
   16918:	add	r0, sp, #4
   1691c:	bl	10d8c <strcmp@plt>
   16920:	cmp	r0, #0
   16924:	moveq	r0, #0
   16928:	beq	16940 <dcngettext@plt+0x5950>
   1692c:	ldr	r1, [pc, #28]	; 16950 <dcngettext@plt+0x5960>
   16930:	add	r0, sp, #4
   16934:	bl	10d8c <strcmp@plt>
   16938:	adds	r0, r0, #0
   1693c:	movne	r0, #1
   16940:	add	sp, sp, #268	; 0x10c
   16944:	pop	{pc}		; (ldr pc, [sp], #4)
   16948:	andeq	r0, r0, r1, lsl #2
   1694c:	andeq	r8, r1, r8, lsr r2
   16950:	andeq	r8, r1, ip, lsr r2
   16954:	push	{r4, r5, r6, lr}
   16958:	mov	r6, r1
   1695c:	mov	r4, r2
   16960:	mov	r1, #0
   16964:	bl	10f78 <setlocale@plt>
   16968:	subs	r5, r0, #0
   1696c:	beq	16990 <dcngettext@plt+0x59a0>
   16970:	mov	r0, r5
   16974:	bl	10edc <strlen@plt>
   16978:	cmp	r4, r0
   1697c:	bhi	169a8 <dcngettext@plt+0x59b8>
   16980:	cmp	r4, #0
   16984:	bne	169c0 <dcngettext@plt+0x59d0>
   16988:	mov	r0, #34	; 0x22
   1698c:	pop	{r4, r5, r6, pc}
   16990:	cmp	r4, #0
   16994:	beq	169e4 <dcngettext@plt+0x59f4>
   16998:	mov	r3, #0
   1699c:	strb	r3, [r6]
   169a0:	mov	r0, #22
   169a4:	pop	{r4, r5, r6, pc}
   169a8:	add	r2, r0, #1
   169ac:	mov	r1, r5
   169b0:	mov	r0, r6
   169b4:	bl	10dc8 <memcpy@plt>
   169b8:	mov	r0, #0
   169bc:	pop	{r4, r5, r6, pc}
   169c0:	sub	r4, r4, #1
   169c4:	mov	r2, r4
   169c8:	mov	r1, r5
   169cc:	mov	r0, r6
   169d0:	bl	10dc8 <memcpy@plt>
   169d4:	mov	r3, #0
   169d8:	strb	r3, [r6, r4]
   169dc:	mov	r0, #34	; 0x22
   169e0:	pop	{r4, r5, r6, pc}
   169e4:	mov	r0, #22
   169e8:	pop	{r4, r5, r6, pc}
   169ec:	push	{r4, lr}
   169f0:	mov	r1, #0
   169f4:	bl	10f78 <setlocale@plt>
   169f8:	pop	{r4, pc}
   169fc:	subs	r2, r1, #1
   16a00:	bxeq	lr
   16a04:	bcc	16bdc <dcngettext@plt+0x5bec>
   16a08:	cmp	r0, r1
   16a0c:	bls	16bc0 <dcngettext@plt+0x5bd0>
   16a10:	tst	r1, r2
   16a14:	beq	16bcc <dcngettext@plt+0x5bdc>
   16a18:	clz	r3, r0
   16a1c:	clz	r2, r1
   16a20:	sub	r3, r2, r3
   16a24:	rsbs	r3, r3, #31
   16a28:	addne	r3, r3, r3, lsl #1
   16a2c:	mov	r2, #0
   16a30:	addne	pc, pc, r3, lsl #2
   16a34:	nop			; (mov r0, r0)
   16a38:	cmp	r0, r1, lsl #31
   16a3c:	adc	r2, r2, r2
   16a40:	subcs	r0, r0, r1, lsl #31
   16a44:	cmp	r0, r1, lsl #30
   16a48:	adc	r2, r2, r2
   16a4c:	subcs	r0, r0, r1, lsl #30
   16a50:	cmp	r0, r1, lsl #29
   16a54:	adc	r2, r2, r2
   16a58:	subcs	r0, r0, r1, lsl #29
   16a5c:	cmp	r0, r1, lsl #28
   16a60:	adc	r2, r2, r2
   16a64:	subcs	r0, r0, r1, lsl #28
   16a68:	cmp	r0, r1, lsl #27
   16a6c:	adc	r2, r2, r2
   16a70:	subcs	r0, r0, r1, lsl #27
   16a74:	cmp	r0, r1, lsl #26
   16a78:	adc	r2, r2, r2
   16a7c:	subcs	r0, r0, r1, lsl #26
   16a80:	cmp	r0, r1, lsl #25
   16a84:	adc	r2, r2, r2
   16a88:	subcs	r0, r0, r1, lsl #25
   16a8c:	cmp	r0, r1, lsl #24
   16a90:	adc	r2, r2, r2
   16a94:	subcs	r0, r0, r1, lsl #24
   16a98:	cmp	r0, r1, lsl #23
   16a9c:	adc	r2, r2, r2
   16aa0:	subcs	r0, r0, r1, lsl #23
   16aa4:	cmp	r0, r1, lsl #22
   16aa8:	adc	r2, r2, r2
   16aac:	subcs	r0, r0, r1, lsl #22
   16ab0:	cmp	r0, r1, lsl #21
   16ab4:	adc	r2, r2, r2
   16ab8:	subcs	r0, r0, r1, lsl #21
   16abc:	cmp	r0, r1, lsl #20
   16ac0:	adc	r2, r2, r2
   16ac4:	subcs	r0, r0, r1, lsl #20
   16ac8:	cmp	r0, r1, lsl #19
   16acc:	adc	r2, r2, r2
   16ad0:	subcs	r0, r0, r1, lsl #19
   16ad4:	cmp	r0, r1, lsl #18
   16ad8:	adc	r2, r2, r2
   16adc:	subcs	r0, r0, r1, lsl #18
   16ae0:	cmp	r0, r1, lsl #17
   16ae4:	adc	r2, r2, r2
   16ae8:	subcs	r0, r0, r1, lsl #17
   16aec:	cmp	r0, r1, lsl #16
   16af0:	adc	r2, r2, r2
   16af4:	subcs	r0, r0, r1, lsl #16
   16af8:	cmp	r0, r1, lsl #15
   16afc:	adc	r2, r2, r2
   16b00:	subcs	r0, r0, r1, lsl #15
   16b04:	cmp	r0, r1, lsl #14
   16b08:	adc	r2, r2, r2
   16b0c:	subcs	r0, r0, r1, lsl #14
   16b10:	cmp	r0, r1, lsl #13
   16b14:	adc	r2, r2, r2
   16b18:	subcs	r0, r0, r1, lsl #13
   16b1c:	cmp	r0, r1, lsl #12
   16b20:	adc	r2, r2, r2
   16b24:	subcs	r0, r0, r1, lsl #12
   16b28:	cmp	r0, r1, lsl #11
   16b2c:	adc	r2, r2, r2
   16b30:	subcs	r0, r0, r1, lsl #11
   16b34:	cmp	r0, r1, lsl #10
   16b38:	adc	r2, r2, r2
   16b3c:	subcs	r0, r0, r1, lsl #10
   16b40:	cmp	r0, r1, lsl #9
   16b44:	adc	r2, r2, r2
   16b48:	subcs	r0, r0, r1, lsl #9
   16b4c:	cmp	r0, r1, lsl #8
   16b50:	adc	r2, r2, r2
   16b54:	subcs	r0, r0, r1, lsl #8
   16b58:	cmp	r0, r1, lsl #7
   16b5c:	adc	r2, r2, r2
   16b60:	subcs	r0, r0, r1, lsl #7
   16b64:	cmp	r0, r1, lsl #6
   16b68:	adc	r2, r2, r2
   16b6c:	subcs	r0, r0, r1, lsl #6
   16b70:	cmp	r0, r1, lsl #5
   16b74:	adc	r2, r2, r2
   16b78:	subcs	r0, r0, r1, lsl #5
   16b7c:	cmp	r0, r1, lsl #4
   16b80:	adc	r2, r2, r2
   16b84:	subcs	r0, r0, r1, lsl #4
   16b88:	cmp	r0, r1, lsl #3
   16b8c:	adc	r2, r2, r2
   16b90:	subcs	r0, r0, r1, lsl #3
   16b94:	cmp	r0, r1, lsl #2
   16b98:	adc	r2, r2, r2
   16b9c:	subcs	r0, r0, r1, lsl #2
   16ba0:	cmp	r0, r1, lsl #1
   16ba4:	adc	r2, r2, r2
   16ba8:	subcs	r0, r0, r1, lsl #1
   16bac:	cmp	r0, r1
   16bb0:	adc	r2, r2, r2
   16bb4:	subcs	r0, r0, r1
   16bb8:	mov	r0, r2
   16bbc:	bx	lr
   16bc0:	moveq	r0, #1
   16bc4:	movne	r0, #0
   16bc8:	bx	lr
   16bcc:	clz	r2, r1
   16bd0:	rsb	r2, r2, #31
   16bd4:	lsr	r0, r0, r2
   16bd8:	bx	lr
   16bdc:	cmp	r0, #0
   16be0:	mvnne	r0, #0
   16be4:	b	16e84 <dcngettext@plt+0x5e94>
   16be8:	cmp	r1, #0
   16bec:	beq	16bdc <dcngettext@plt+0x5bec>
   16bf0:	push	{r0, r1, lr}
   16bf4:	bl	169fc <dcngettext@plt+0x5a0c>
   16bf8:	pop	{r1, r2, lr}
   16bfc:	mul	r3, r2, r0
   16c00:	sub	r1, r1, r3
   16c04:	bx	lr
   16c08:	cmp	r1, #0
   16c0c:	beq	16e18 <dcngettext@plt+0x5e28>
   16c10:	eor	ip, r0, r1
   16c14:	rsbmi	r1, r1, #0
   16c18:	subs	r2, r1, #1
   16c1c:	beq	16de4 <dcngettext@plt+0x5df4>
   16c20:	movs	r3, r0
   16c24:	rsbmi	r3, r0, #0
   16c28:	cmp	r3, r1
   16c2c:	bls	16df0 <dcngettext@plt+0x5e00>
   16c30:	tst	r1, r2
   16c34:	beq	16e00 <dcngettext@plt+0x5e10>
   16c38:	clz	r2, r3
   16c3c:	clz	r0, r1
   16c40:	sub	r2, r0, r2
   16c44:	rsbs	r2, r2, #31
   16c48:	addne	r2, r2, r2, lsl #1
   16c4c:	mov	r0, #0
   16c50:	addne	pc, pc, r2, lsl #2
   16c54:	nop			; (mov r0, r0)
   16c58:	cmp	r3, r1, lsl #31
   16c5c:	adc	r0, r0, r0
   16c60:	subcs	r3, r3, r1, lsl #31
   16c64:	cmp	r3, r1, lsl #30
   16c68:	adc	r0, r0, r0
   16c6c:	subcs	r3, r3, r1, lsl #30
   16c70:	cmp	r3, r1, lsl #29
   16c74:	adc	r0, r0, r0
   16c78:	subcs	r3, r3, r1, lsl #29
   16c7c:	cmp	r3, r1, lsl #28
   16c80:	adc	r0, r0, r0
   16c84:	subcs	r3, r3, r1, lsl #28
   16c88:	cmp	r3, r1, lsl #27
   16c8c:	adc	r0, r0, r0
   16c90:	subcs	r3, r3, r1, lsl #27
   16c94:	cmp	r3, r1, lsl #26
   16c98:	adc	r0, r0, r0
   16c9c:	subcs	r3, r3, r1, lsl #26
   16ca0:	cmp	r3, r1, lsl #25
   16ca4:	adc	r0, r0, r0
   16ca8:	subcs	r3, r3, r1, lsl #25
   16cac:	cmp	r3, r1, lsl #24
   16cb0:	adc	r0, r0, r0
   16cb4:	subcs	r3, r3, r1, lsl #24
   16cb8:	cmp	r3, r1, lsl #23
   16cbc:	adc	r0, r0, r0
   16cc0:	subcs	r3, r3, r1, lsl #23
   16cc4:	cmp	r3, r1, lsl #22
   16cc8:	adc	r0, r0, r0
   16ccc:	subcs	r3, r3, r1, lsl #22
   16cd0:	cmp	r3, r1, lsl #21
   16cd4:	adc	r0, r0, r0
   16cd8:	subcs	r3, r3, r1, lsl #21
   16cdc:	cmp	r3, r1, lsl #20
   16ce0:	adc	r0, r0, r0
   16ce4:	subcs	r3, r3, r1, lsl #20
   16ce8:	cmp	r3, r1, lsl #19
   16cec:	adc	r0, r0, r0
   16cf0:	subcs	r3, r3, r1, lsl #19
   16cf4:	cmp	r3, r1, lsl #18
   16cf8:	adc	r0, r0, r0
   16cfc:	subcs	r3, r3, r1, lsl #18
   16d00:	cmp	r3, r1, lsl #17
   16d04:	adc	r0, r0, r0
   16d08:	subcs	r3, r3, r1, lsl #17
   16d0c:	cmp	r3, r1, lsl #16
   16d10:	adc	r0, r0, r0
   16d14:	subcs	r3, r3, r1, lsl #16
   16d18:	cmp	r3, r1, lsl #15
   16d1c:	adc	r0, r0, r0
   16d20:	subcs	r3, r3, r1, lsl #15
   16d24:	cmp	r3, r1, lsl #14
   16d28:	adc	r0, r0, r0
   16d2c:	subcs	r3, r3, r1, lsl #14
   16d30:	cmp	r3, r1, lsl #13
   16d34:	adc	r0, r0, r0
   16d38:	subcs	r3, r3, r1, lsl #13
   16d3c:	cmp	r3, r1, lsl #12
   16d40:	adc	r0, r0, r0
   16d44:	subcs	r3, r3, r1, lsl #12
   16d48:	cmp	r3, r1, lsl #11
   16d4c:	adc	r0, r0, r0
   16d50:	subcs	r3, r3, r1, lsl #11
   16d54:	cmp	r3, r1, lsl #10
   16d58:	adc	r0, r0, r0
   16d5c:	subcs	r3, r3, r1, lsl #10
   16d60:	cmp	r3, r1, lsl #9
   16d64:	adc	r0, r0, r0
   16d68:	subcs	r3, r3, r1, lsl #9
   16d6c:	cmp	r3, r1, lsl #8
   16d70:	adc	r0, r0, r0
   16d74:	subcs	r3, r3, r1, lsl #8
   16d78:	cmp	r3, r1, lsl #7
   16d7c:	adc	r0, r0, r0
   16d80:	subcs	r3, r3, r1, lsl #7
   16d84:	cmp	r3, r1, lsl #6
   16d88:	adc	r0, r0, r0
   16d8c:	subcs	r3, r3, r1, lsl #6
   16d90:	cmp	r3, r1, lsl #5
   16d94:	adc	r0, r0, r0
   16d98:	subcs	r3, r3, r1, lsl #5
   16d9c:	cmp	r3, r1, lsl #4
   16da0:	adc	r0, r0, r0
   16da4:	subcs	r3, r3, r1, lsl #4
   16da8:	cmp	r3, r1, lsl #3
   16dac:	adc	r0, r0, r0
   16db0:	subcs	r3, r3, r1, lsl #3
   16db4:	cmp	r3, r1, lsl #2
   16db8:	adc	r0, r0, r0
   16dbc:	subcs	r3, r3, r1, lsl #2
   16dc0:	cmp	r3, r1, lsl #1
   16dc4:	adc	r0, r0, r0
   16dc8:	subcs	r3, r3, r1, lsl #1
   16dcc:	cmp	r3, r1
   16dd0:	adc	r0, r0, r0
   16dd4:	subcs	r3, r3, r1
   16dd8:	cmp	ip, #0
   16ddc:	rsbmi	r0, r0, #0
   16de0:	bx	lr
   16de4:	teq	ip, r0
   16de8:	rsbmi	r0, r0, #0
   16dec:	bx	lr
   16df0:	movcc	r0, #0
   16df4:	asreq	r0, ip, #31
   16df8:	orreq	r0, r0, #1
   16dfc:	bx	lr
   16e00:	clz	r2, r1
   16e04:	rsb	r2, r2, #31
   16e08:	cmp	ip, #0
   16e0c:	lsr	r0, r3, r2
   16e10:	rsbmi	r0, r0, #0
   16e14:	bx	lr
   16e18:	cmp	r0, #0
   16e1c:	mvngt	r0, #-2147483648	; 0x80000000
   16e20:	movlt	r0, #-2147483648	; 0x80000000
   16e24:	b	16e84 <dcngettext@plt+0x5e94>
   16e28:	cmp	r1, #0
   16e2c:	beq	16e18 <dcngettext@plt+0x5e28>
   16e30:	push	{r0, r1, lr}
   16e34:	bl	16c10 <dcngettext@plt+0x5c20>
   16e38:	pop	{r1, r2, lr}
   16e3c:	mul	r3, r2, r0
   16e40:	sub	r1, r1, r3
   16e44:	bx	lr
   16e48:	cmp	r3, #0
   16e4c:	cmpeq	r2, #0
   16e50:	bne	16e68 <dcngettext@plt+0x5e78>
   16e54:	cmp	r1, #0
   16e58:	cmpeq	r0, #0
   16e5c:	mvnne	r1, #0
   16e60:	mvnne	r0, #0
   16e64:	b	16e84 <dcngettext@plt+0x5e94>
   16e68:	sub	sp, sp, #8
   16e6c:	push	{sp, lr}
   16e70:	bl	16e94 <dcngettext@plt+0x5ea4>
   16e74:	ldr	lr, [sp, #4]
   16e78:	add	sp, sp, #8
   16e7c:	pop	{r2, r3}
   16e80:	bx	lr
   16e84:	push	{r1, lr}
   16e88:	mov	r0, #8
   16e8c:	bl	10d74 <raise@plt>
   16e90:	pop	{r1, pc}
   16e94:	cmp	r1, r3
   16e98:	push	{r4, r5, r6, r7, r8, r9, lr}
   16e9c:	cmpeq	r0, r2
   16ea0:	mov	r4, r0
   16ea4:	mov	r5, r1
   16ea8:	ldr	r9, [sp, #28]
   16eac:	movcc	r0, #0
   16eb0:	movcc	r1, #0
   16eb4:	bcc	16fac <dcngettext@plt+0x5fbc>
   16eb8:	cmp	r3, #0
   16ebc:	clzeq	ip, r2
   16ec0:	clzne	ip, r3
   16ec4:	addeq	ip, ip, #32
   16ec8:	cmp	r5, #0
   16ecc:	clzeq	r1, r4
   16ed0:	addeq	r1, r1, #32
   16ed4:	clzne	r1, r5
   16ed8:	sub	ip, ip, r1
   16edc:	sub	lr, ip, #32
   16ee0:	lsl	r7, r3, ip
   16ee4:	rsb	r8, ip, #32
   16ee8:	orr	r7, r7, r2, lsl lr
   16eec:	orr	r7, r7, r2, lsr r8
   16ef0:	lsl	r6, r2, ip
   16ef4:	cmp	r5, r7
   16ef8:	cmpeq	r4, r6
   16efc:	movcc	r0, #0
   16f00:	movcc	r1, #0
   16f04:	bcc	16f20 <dcngettext@plt+0x5f30>
   16f08:	mov	r3, #1
   16f0c:	subs	r4, r4, r6
   16f10:	lsl	r1, r3, lr
   16f14:	lsl	r0, r3, ip
   16f18:	orr	r1, r1, r3, lsr r8
   16f1c:	sbc	r5, r5, r7
   16f20:	cmp	ip, #0
   16f24:	beq	16fac <dcngettext@plt+0x5fbc>
   16f28:	lsrs	r3, r7, #1
   16f2c:	rrx	r2, r6
   16f30:	mov	r6, ip
   16f34:	b	16f58 <dcngettext@plt+0x5f68>
   16f38:	subs	r4, r4, r2
   16f3c:	sbc	r5, r5, r3
   16f40:	adds	r4, r4, r4
   16f44:	adc	r5, r5, r5
   16f48:	adds	r4, r4, #1
   16f4c:	adc	r5, r5, #0
   16f50:	subs	r6, r6, #1
   16f54:	beq	16f74 <dcngettext@plt+0x5f84>
   16f58:	cmp	r5, r3
   16f5c:	cmpeq	r4, r2
   16f60:	bcs	16f38 <dcngettext@plt+0x5f48>
   16f64:	adds	r4, r4, r4
   16f68:	adc	r5, r5, r5
   16f6c:	subs	r6, r6, #1
   16f70:	bne	16f58 <dcngettext@plt+0x5f68>
   16f74:	lsr	r6, r4, ip
   16f78:	lsr	r7, r5, ip
   16f7c:	orr	r6, r6, r5, lsl r8
   16f80:	adds	r2, r0, r4
   16f84:	orr	r6, r6, r5, lsr lr
   16f88:	adc	r3, r1, r5
   16f8c:	lsl	r1, r7, ip
   16f90:	orr	r1, r1, r6, lsl lr
   16f94:	lsl	r0, r6, ip
   16f98:	orr	r1, r1, r6, lsr r8
   16f9c:	subs	r0, r2, r0
   16fa0:	mov	r4, r6
   16fa4:	mov	r5, r7
   16fa8:	sbc	r1, r3, r1
   16fac:	cmp	r9, #0
   16fb0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   16fb4:	strd	r4, [r9]
   16fb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16fbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16fc0:	mov	r7, r0
   16fc4:	ldr	r6, [pc, #72]	; 17014 <dcngettext@plt+0x6024>
   16fc8:	ldr	r5, [pc, #72]	; 17018 <dcngettext@plt+0x6028>
   16fcc:	add	r6, pc, r6
   16fd0:	add	r5, pc, r5
   16fd4:	sub	r6, r6, r5
   16fd8:	mov	r8, r1
   16fdc:	mov	r9, r2
   16fe0:	bl	10d30 <fdopen@plt-0x20>
   16fe4:	asrs	r6, r6, #2
   16fe8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16fec:	mov	r4, #0
   16ff0:	add	r4, r4, #1
   16ff4:	ldr	r3, [r5], #4
   16ff8:	mov	r2, r9
   16ffc:	mov	r1, r8
   17000:	mov	r0, r7
   17004:	blx	r3
   17008:	cmp	r6, r4
   1700c:	bne	16ff0 <dcngettext@plt+0x6000>
   17010:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17014:	andeq	r1, r1, ip, lsr pc
   17018:	andeq	r1, r1, r4, lsr pc
   1701c:	bx	lr
   17020:	ldr	r3, [pc, #12]	; 17034 <dcngettext@plt+0x6044>
   17024:	mov	r1, #0
   17028:	add	r3, pc, r3
   1702c:	ldr	r2, [r3]
   17030:	b	10f00 <__cxa_atexit@plt>
   17034:	andeq	r2, r1, r8, asr #1

Disassembly of section .fini:

00017038 <.fini>:
   17038:	push	{r3, lr}
   1703c:	pop	{r3, pc}
