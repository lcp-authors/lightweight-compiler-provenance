
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

000109c4 <.init>:
   109c4:	push	{r3, lr}
   109c8:	bl	10e18 <_start@@Base+0x3c>
   109cc:	pop	{r3, pc}

Disassembly of section .plt:

000109d0 <calloc@plt-0x14>:
   109d0:	push	{lr}		; (str lr, [sp, #-4]!)
   109d4:	ldr	lr, [pc, #4]	; 109e0 <calloc@plt-0x4>
   109d8:	add	lr, pc, lr
   109dc:	ldr	pc, [lr, #8]!
   109e0:	andeq	r1, r1, r0, lsr #12

000109e4 <calloc@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #69632	; 0x11000
   109ec:	ldr	pc, [ip, #1568]!	; 0x620

000109f0 <strcmp@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #69632	; 0x11000
   109f8:	ldr	pc, [ip, #1560]!	; 0x618

000109fc <printf@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #69632	; 0x11000
   10a04:	ldr	pc, [ip, #1552]!	; 0x610

00010a08 <__isoc99_fscanf@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #69632	; 0x11000
   10a10:	ldr	pc, [ip, #1544]!	; 0x608

00010a14 <fopen@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #69632	; 0x11000
   10a1c:	ldr	pc, [ip, #1536]!	; 0x600

00010a20 <fflush@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #69632	; 0x11000
   10a28:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a2c <memmove@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #69632	; 0x11000
   10a34:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a38 <free@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #69632	; 0x11000
   10a40:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a44 <fgets@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a50 <strdup@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a5c <puts@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a68 <malloc@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a74 <__libc_start_main@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a80 <__gmon_start__@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a8c <feof@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a98 <strlen@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa4 <putchar@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab0 <fclose@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1432]!	; 0x598

00010abc <abort@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1424]!	; 0x590

Disassembly of section .text:

00010ac8 <main@@Base>:
   10ac8:	mov	r0, #42	; 0x2a
   10acc:	strd	r4, [sp, #-16]!
   10ad0:	movw	r5, #8300	; 0x206c
   10ad4:	movt	r5, #2
   10ad8:	str	r6, [sp, #8]
   10adc:	str	lr, [sp, #12]
   10ae0:	bl	1153c <vetor_cria@@Base>
   10ae4:	mov	r4, r0
   10ae8:	movw	r0, #6452	; 0x1934
   10aec:	movt	r0, #1
   10af0:	bl	10a5c <puts@plt>
   10af4:	mov	r0, r4
   10af8:	movw	r1, #6508	; 0x196c
   10afc:	movt	r1, #1
   10b00:	bl	111e0 <fp_carrega@@Base>
   10b04:	movw	r0, #6520	; 0x1978
   10b08:	movt	r0, #1
   10b0c:	ldr	r1, [r5]
   10b10:	bl	109fc <printf@plt>
   10b14:	mov	r0, r4
   10b18:	bl	11760 <vetor_imprime@@Base>
   10b1c:	ldr	r3, [r4]
   10b20:	cmp	r3, #42	; 0x2a
   10b24:	beq	10b4c <main@@Base+0x84>
   10b28:	movw	r0, #6576	; 0x19b0
   10b2c:	movt	r0, #1
   10b30:	mov	r6, #1
   10b34:	bl	10a5c <puts@plt>
   10b38:	mov	r0, r6
   10b3c:	ldrd	r4, [sp]
   10b40:	ldr	r6, [sp, #8]
   10b44:	add	sp, sp, #12
   10b48:	pop	{pc}		; (ldr pc, [sp], #4)
   10b4c:	mov	r0, r4
   10b50:	bl	11180 <fp_remove@@Base>
   10b54:	mov	r1, r0
   10b58:	movw	r0, #6616	; 0x19d8
   10b5c:	movt	r0, #1
   10b60:	bl	109f0 <strcmp@plt>
   10b64:	subs	r6, r0, #0
   10b68:	bne	10db4 <main@@Base+0x2ec>
   10b6c:	mov	r0, r4
   10b70:	str	r6, [r5]
   10b74:	bl	11180 <fp_remove@@Base>
   10b78:	movw	r0, #6704	; 0x1a30
   10b7c:	movt	r0, #1
   10b80:	ldr	r1, [r5]
   10b84:	bl	109fc <printf@plt>
   10b88:	ldrd	r2, [r4]
   10b8c:	str	r6, [r5]
   10b90:	cmp	r2, r3
   10b94:	beq	10bac <main@@Base+0xe4>
   10b98:	movw	r1, #6756	; 0x1a64
   10b9c:	movt	r1, #1
   10ba0:	mov	r2, #99	; 0x63
   10ba4:	mov	r0, r4
   10ba8:	bl	10ecc <_start@@Base+0xf0>
   10bac:	movw	r0, #6772	; 0x1a74
   10bb0:	movt	r0, #1
   10bb4:	ldr	r1, [r5]
   10bb8:	bl	109fc <printf@plt>
   10bbc:	mov	r0, r4
   10bc0:	bl	11180 <fp_remove@@Base>
   10bc4:	ldm	r4, {r1, r3}
   10bc8:	mov	r2, #0
   10bcc:	str	r2, [r5]
   10bd0:	cmp	r1, r3
   10bd4:	beq	10be8 <main@@Base+0x120>
   10bd8:	movw	r1, #6756	; 0x1a64
   10bdc:	movt	r1, #1
   10be0:	mov	r0, r4
   10be4:	bl	10ecc <_start@@Base+0xf0>
   10be8:	movw	r0, #6844	; 0x1abc
   10bec:	movt	r0, #1
   10bf0:	ldr	r1, [r5]
   10bf4:	bl	109fc <printf@plt>
   10bf8:	mov	r0, r4
   10bfc:	bl	11180 <fp_remove@@Base>
   10c00:	ldr	r3, [r4]
   10c04:	mov	r1, #0
   10c08:	ldr	r2, [r4, #4]
   10c0c:	str	r1, [r5]
   10c10:	cmp	r2, r3
   10c14:	beq	10c2c <main@@Base+0x164>
   10c18:	movw	r1, #6756	; 0x1a64
   10c1c:	movt	r1, #1
   10c20:	mov	r0, r4
   10c24:	mov	r2, #42	; 0x2a
   10c28:	bl	10ecc <_start@@Base+0xf0>
   10c2c:	movw	r0, #6916	; 0x1b04
   10c30:	movt	r0, #1
   10c34:	ldr	r1, [r5]
   10c38:	bl	109fc <printf@plt>
   10c3c:	movw	r0, #6988	; 0x1b4c
   10c40:	movt	r0, #1
   10c44:	bl	10a5c <puts@plt>
   10c48:	mov	r0, #42	; 0x2a
   10c4c:	bl	115a4 <vetor_criaHeap@@Base>
   10c50:	movw	r2, #6508	; 0x196c
   10c54:	movt	r2, #1
   10c58:	movw	r1, #5716	; 0x1654
   10c5c:	movt	r1, #1
   10c60:	mov	r4, r0
   10c64:	bl	1146c <heap_carrega@@Base>
   10c68:	movw	r0, #7044	; 0x1b84
   10c6c:	movt	r0, #1
   10c70:	ldr	r1, [r5]
   10c74:	bl	109fc <printf@plt>
   10c78:	mov	r0, r4
   10c7c:	bl	117fc <vetor_imprimeHeap@@Base>
   10c80:	ldr	r3, [r4]
   10c84:	cmp	r3, #42	; 0x2a
   10c88:	bne	10dc8 <main@@Base+0x300>
   10c8c:	movw	r0, #6616	; 0x19d8
   10c90:	movt	r0, #1
   10c94:	mov	r1, #0
   10c98:	bl	109f0 <strcmp@plt>
   10c9c:	subs	r6, r0, #0
   10ca0:	bne	10db4 <main@@Base+0x2ec>
   10ca4:	movw	r0, #7140	; 0x1be4
   10ca8:	movt	r0, #1
   10cac:	str	r6, [r5]
   10cb0:	mov	r1, r6
   10cb4:	bl	109fc <printf@plt>
   10cb8:	ldrd	r2, [r4]
   10cbc:	str	r6, [r5]
   10cc0:	cmp	r2, r3
   10cc4:	beq	10ce4 <main@@Base+0x21c>
   10cc8:	movw	r2, #6756	; 0x1a64
   10ccc:	movt	r2, #1
   10cd0:	movw	r1, #5716	; 0x1654
   10cd4:	movt	r1, #1
   10cd8:	mov	r3, #99	; 0x63
   10cdc:	mov	r0, r4
   10ce0:	bl	10f9c <_start@@Base+0x1c0>
   10ce4:	movw	r0, #7192	; 0x1c18
   10ce8:	movt	r0, #1
   10cec:	ldr	r1, [r5]
   10cf0:	bl	109fc <printf@plt>
   10cf4:	ldm	r4, {r1, r2}
   10cf8:	mov	r3, #0
   10cfc:	str	r3, [r5]
   10d00:	cmp	r1, r2
   10d04:	beq	10d20 <main@@Base+0x258>
   10d08:	movw	r2, #6756	; 0x1a64
   10d0c:	movt	r2, #1
   10d10:	movw	r1, #5716	; 0x1654
   10d14:	movt	r1, #1
   10d18:	mov	r0, r4
   10d1c:	bl	10f9c <_start@@Base+0x1c0>
   10d20:	movw	r0, #7264	; 0x1c60
   10d24:	movt	r0, #1
   10d28:	ldr	r1, [r5]
   10d2c:	bl	109fc <printf@plt>
   10d30:	ldrd	r2, [r4]
   10d34:	mov	r1, #0
   10d38:	str	r1, [r5]
   10d3c:	cmp	r2, r3
   10d40:	beq	10d60 <main@@Base+0x298>
   10d44:	movw	r2, #6756	; 0x1a64
   10d48:	movt	r2, #1
   10d4c:	movw	r1, #5716	; 0x1654
   10d50:	movt	r1, #1
   10d54:	mov	r0, r4
   10d58:	mov	r3, #42	; 0x2a
   10d5c:	bl	10f9c <_start@@Base+0x1c0>
   10d60:	movw	r0, #6916	; 0x1b04
   10d64:	movt	r0, #1
   10d68:	ldr	r1, [r5]
   10d6c:	bl	109fc <printf@plt>
   10d70:	mov	r0, #42	; 0x2a
   10d74:	mov	r4, r0
   10d78:	bl	115a4 <vetor_criaHeap@@Base>
   10d7c:	movw	r2, #6508	; 0x196c
   10d80:	movt	r2, #1
   10d84:	movw	r1, #5852	; 0x16dc
   10d88:	movt	r1, #1
   10d8c:	bl	1146c <heap_carrega@@Base>
   10d90:	movw	r0, #7044	; 0x1b84
   10d94:	movt	r0, #1
   10d98:	ldr	r1, [r5]
   10d9c:	bl	109fc <printf@plt>
   10da0:	mov	r0, #0
   10da4:	bl	10a5c <puts@plt>
   10da8:	subs	r4, r4, #1
   10dac:	bne	10da0 <main@@Base+0x2d8>
   10db0:	b	10b38 <main@@Base+0x70>
   10db4:	movw	r0, #6636	; 0x19ec
   10db8:	movt	r0, #1
   10dbc:	bl	10a5c <puts@plt>
   10dc0:	mov	r6, #1
   10dc4:	b	10b38 <main@@Base+0x70>
   10dc8:	movw	r0, #7100	; 0x1bbc
   10dcc:	movt	r0, #1
   10dd0:	bl	10a5c <puts@plt>
   10dd4:	mov	r6, #1
   10dd8:	b	10b38 <main@@Base+0x70>

00010ddc <_start@@Base>:
   10ddc:	mov	fp, #0
   10de0:	mov	lr, #0
   10de4:	pop	{r1}		; (ldr r1, [sp], #4)
   10de8:	mov	r2, sp
   10dec:	push	{r2}		; (str r2, [sp, #-4]!)
   10df0:	push	{r0}		; (str r0, [sp, #-4]!)
   10df4:	ldr	ip, [pc, #16]	; 10e0c <_start@@Base+0x30>
   10df8:	push	{ip}		; (str ip, [sp, #-4]!)
   10dfc:	ldr	r0, [pc, #12]	; 10e10 <_start@@Base+0x34>
   10e00:	ldr	r3, [pc, #12]	; 10e14 <_start@@Base+0x38>
   10e04:	bl	10a74 <__libc_start_main@plt>
   10e08:	bl	10abc <abort@plt>
   10e0c:	strdeq	r1, [r1], -r8
   10e10:	andeq	r0, r1, r8, asr #21
   10e14:	muleq	r1, r8, r8
   10e18:	ldr	r3, [pc, #20]	; 10e34 <_start@@Base+0x58>
   10e1c:	ldr	r2, [pc, #20]	; 10e38 <_start@@Base+0x5c>
   10e20:	add	r3, pc, r3
   10e24:	ldr	r2, [r3, r2]
   10e28:	cmp	r2, #0
   10e2c:	bxeq	lr
   10e30:	b	10a80 <__gmon_start__@plt>
   10e34:	ldrdeq	r1, [r1], -r8
   10e38:	andeq	r0, r0, r8, asr r0
   10e3c:	ldr	r0, [pc, #24]	; 10e5c <_start@@Base+0x80>
   10e40:	ldr	r3, [pc, #24]	; 10e60 <_start@@Base+0x84>
   10e44:	cmp	r3, r0
   10e48:	bxeq	lr
   10e4c:	ldr	r3, [pc, #16]	; 10e64 <_start@@Base+0x88>
   10e50:	cmp	r3, #0
   10e54:	bxeq	lr
   10e58:	bx	r3
   10e5c:	andeq	r2, r2, r4, rrx
   10e60:	andeq	r2, r2, r4, rrx
   10e64:	andeq	r0, r0, r0
   10e68:	ldr	r0, [pc, #36]	; 10e94 <_start@@Base+0xb8>
   10e6c:	ldr	r1, [pc, #36]	; 10e98 <_start@@Base+0xbc>
   10e70:	sub	r1, r1, r0
   10e74:	asr	r1, r1, #2
   10e78:	add	r1, r1, r1, lsr #31
   10e7c:	asrs	r1, r1, #1
   10e80:	bxeq	lr
   10e84:	ldr	r3, [pc, #16]	; 10e9c <_start@@Base+0xc0>
   10e88:	cmp	r3, #0
   10e8c:	bxeq	lr
   10e90:	bx	r3
   10e94:	andeq	r2, r2, r4, rrx
   10e98:	andeq	r2, r2, r4, rrx
   10e9c:	andeq	r0, r0, r0
   10ea0:	push	{r4, lr}
   10ea4:	ldr	r4, [pc, #24]	; 10ec4 <_start@@Base+0xe8>
   10ea8:	ldrb	r3, [r4]
   10eac:	cmp	r3, #0
   10eb0:	popne	{r4, pc}
   10eb4:	bl	10e3c <_start@@Base+0x60>
   10eb8:	mov	r3, #1
   10ebc:	strb	r3, [r4]
   10ec0:	pop	{r4, pc}
   10ec4:	andeq	r2, r2, r8, rrx
   10ec8:	b	10e68 <_start@@Base+0x8c>
   10ecc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10ed0:	strd	r6, [sp, #8]
   10ed4:	mov	r6, r0
   10ed8:	mov	r0, r2
   10edc:	strd	r8, [sp, #16]
   10ee0:	str	sl, [sp, #24]
   10ee4:	str	lr, [sp, #28]
   10ee8:	bl	1160c <elemento_cria@@Base>
   10eec:	ldr	r3, [r6]
   10ef0:	mov	r7, r0
   10ef4:	cmp	r3, #0
   10ef8:	ble	10f90 <_start@@Base+0x1b4>
   10efc:	mov	r4, #0
   10f00:	b	10f10 <_start@@Base+0x134>
   10f04:	add	r4, r4, #1
   10f08:	cmp	r4, r3
   10f0c:	bge	10f88 <_start@@Base+0x1ac>
   10f10:	ldr	r3, [r6, #8]
   10f14:	mov	r1, r7
   10f18:	lsl	r8, r4, #2
   10f1c:	ldr	r0, [r3, r4, lsl #2]
   10f20:	bl	11654 <maior_que@@Base>
   10f24:	cmp	r0, #0
   10f28:	ldr	r3, [r6]
   10f2c:	bne	10f04 <_start@@Base+0x128>
   10f30:	cmp	r4, r3
   10f34:	ldr	r9, [r6, #8]
   10f38:	addgt	r5, r3, #1
   10f3c:	bgt	10f64 <_start@@Base+0x188>
   10f40:	add	r0, r4, #1
   10f44:	add	r5, r3, #1
   10f48:	lsl	r0, r0, #2
   10f4c:	sub	r2, r5, r4
   10f50:	lsl	r2, r2, #2
   10f54:	sub	r1, r0, #4
   10f58:	add	r0, r9, r0
   10f5c:	add	r1, r9, r1
   10f60:	bl	10a2c <memmove@plt>
   10f64:	str	r7, [r9, r8]
   10f68:	mov	r0, #1
   10f6c:	ldrd	r8, [sp, #16]
   10f70:	ldr	sl, [sp, #24]
   10f74:	str	r5, [r6]
   10f78:	ldrd	r4, [sp]
   10f7c:	ldrd	r6, [sp, #8]
   10f80:	add	sp, sp, #28
   10f84:	pop	{pc}		; (ldr pc, [sp], #4)
   10f88:	lsl	r8, r4, #2
   10f8c:	b	10f30 <_start@@Base+0x154>
   10f90:	mov	r8, #0
   10f94:	mov	r4, r8
   10f98:	b	10f30 <_start@@Base+0x154>
   10f9c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10fa0:	strd	r6, [sp, #8]
   10fa4:	mov	r6, r0
   10fa8:	mov	r0, r3
   10fac:	strd	r8, [sp, #16]
   10fb0:	mov	r9, r1
   10fb4:	mov	r1, r2
   10fb8:	str	sl, [sp, #24]
   10fbc:	str	lr, [sp, #28]
   10fc0:	bl	1160c <elemento_cria@@Base>
   10fc4:	ldr	r5, [r6]
   10fc8:	mov	r8, r0
   10fcc:	cmp	r5, #0
   10fd0:	movgt	r4, #0
   10fd4:	bgt	10fec <_start@@Base+0x210>
   10fd8:	b	11080 <_start@@Base+0x2a4>
   10fdc:	ldr	r5, [r6]
   10fe0:	add	r4, r4, #1
   10fe4:	cmp	r4, r5
   10fe8:	bge	11070 <_start@@Base+0x294>
   10fec:	ldr	r3, [r6, #8]
   10ff0:	mov	r1, r8
   10ff4:	lsl	r7, r4, #2
   10ff8:	ldr	r0, [r3, r4, lsl #2]
   10ffc:	blx	r9
   11000:	cmp	r0, #1
   11004:	bne	10fdc <_start@@Base+0x200>
   11008:	cmp	r4, #0
   1100c:	ldr	r5, [r6]
   11010:	ldr	r2, [r6, #8]
   11014:	add	r9, r2, r7
   11018:	beq	11048 <_start@@Base+0x26c>
   1101c:	cmp	r4, #0
   11020:	rsb	r3, r7, #4
   11024:	add	r0, r7, #4
   11028:	movle	r3, #0
   1102c:	add	r1, r3, r7
   11030:	add	r0, r0, r3
   11034:	add	r1, r2, r1
   11038:	add	r0, r2, r0
   1103c:	movgt	r2, r7
   11040:	movle	r2, #4
   11044:	bl	10a2c <memmove@plt>
   11048:	add	r5, r5, #1
   1104c:	mov	r0, r4
   11050:	ldr	sl, [sp, #24]
   11054:	str	r8, [r9]
   11058:	str	r5, [r6]
   1105c:	ldrd	r4, [sp]
   11060:	ldrd	r6, [sp, #8]
   11064:	ldrd	r8, [sp, #16]
   11068:	add	sp, sp, #28
   1106c:	pop	{pc}		; (ldr pc, [sp], #4)
   11070:	ldr	r2, [r6, #8]
   11074:	lsl	r7, r4, #2
   11078:	add	r9, r2, r7
   1107c:	b	1101c <_start@@Base+0x240>
   11080:	mov	r4, #0
   11084:	ldr	r9, [r6, #8]
   11088:	b	11048 <_start@@Base+0x26c>

0001108c <fp_insere@@Base>:
   1108c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11090:	subs	r5, r0, #0
   11094:	mvneq	r0, #0
   11098:	strd	r6, [sp, #8]
   1109c:	strd	r8, [sp, #16]
   110a0:	str	sl, [sp, #24]
   110a4:	str	lr, [sp, #28]
   110a8:	beq	11144 <fp_insere@@Base+0xb8>
   110ac:	ldm	r5, {r0, r3}
   110b0:	cmp	r0, r3
   110b4:	moveq	r0, #0
   110b8:	beq	11144 <fp_insere@@Base+0xb8>
   110bc:	mov	r0, r2
   110c0:	bl	1160c <elemento_cria@@Base>
   110c4:	ldr	r3, [r5]
   110c8:	mov	r7, r0
   110cc:	cmp	r3, #0
   110d0:	ble	11174 <fp_insere@@Base+0xe8>
   110d4:	mov	r4, #0
   110d8:	b	110e8 <fp_insere@@Base+0x5c>
   110dc:	add	r4, r4, #1
   110e0:	cmp	r4, r3
   110e4:	bge	1115c <fp_insere@@Base+0xd0>
   110e8:	ldr	r3, [r5, #8]
   110ec:	mov	r1, r7
   110f0:	lsl	r8, r4, #2
   110f4:	ldr	r0, [r3, r4, lsl #2]
   110f8:	bl	11654 <maior_que@@Base>
   110fc:	cmp	r0, #0
   11100:	ldr	r3, [r5]
   11104:	bne	110dc <fp_insere@@Base+0x50>
   11108:	cmp	r4, r3
   1110c:	ldr	r9, [r5, #8]
   11110:	bgt	1116c <fp_insere@@Base+0xe0>
   11114:	add	r0, r4, #1
   11118:	add	r6, r3, #1
   1111c:	lsl	r0, r0, #2
   11120:	sub	r2, r6, r4
   11124:	lsl	r2, r2, #2
   11128:	sub	r1, r0, #4
   1112c:	add	r0, r9, r0
   11130:	add	r1, r9, r1
   11134:	bl	10a2c <memmove@plt>
   11138:	mov	r0, #1
   1113c:	str	r7, [r9, r8]
   11140:	str	r6, [r5]
   11144:	ldrd	r4, [sp]
   11148:	ldrd	r6, [sp, #8]
   1114c:	ldrd	r8, [sp, #16]
   11150:	ldr	sl, [sp, #24]
   11154:	add	sp, sp, #28
   11158:	pop	{pc}		; (ldr pc, [sp], #4)
   1115c:	cmp	r4, r3
   11160:	lsl	r8, r4, #2
   11164:	ldr	r9, [r5, #8]
   11168:	ble	11114 <fp_insere@@Base+0x88>
   1116c:	add	r6, r3, #1
   11170:	b	11138 <fp_insere@@Base+0xac>
   11174:	mov	r8, #0
   11178:	mov	r4, r8
   1117c:	b	11108 <fp_insere@@Base+0x7c>

00011180 <fp_remove@@Base>:
   11180:	strd	r4, [sp, #-16]!
   11184:	subs	r5, r0, #0
   11188:	str	r6, [sp, #8]
   1118c:	str	lr, [sp, #12]
   11190:	beq	111d8 <fp_remove@@Base+0x58>
   11194:	ldr	r4, [r5]
   11198:	cmp	r4, #0
   1119c:	moveq	r0, r4
   111a0:	beq	111c8 <fp_remove@@Base+0x48>
   111a4:	ldr	r0, [r5, #8]
   111a8:	ldr	r6, [r0]
   111ac:	ble	111bc <fp_remove@@Base+0x3c>
   111b0:	lsl	r2, r4, #2
   111b4:	add	r1, r0, #4
   111b8:	bl	10a2c <memmove@plt>
   111bc:	sub	r4, r4, #1
   111c0:	ldr	r0, [r6, #4]
   111c4:	str	r4, [r5]
   111c8:	ldrd	r4, [sp]
   111cc:	ldr	r6, [sp, #8]
   111d0:	add	sp, sp, #12
   111d4:	pop	{pc}		; (ldr pc, [sp], #4)
   111d8:	mov	r0, r5
   111dc:	b	111c8 <fp_remove@@Base+0x48>

000111e0 <fp_carrega@@Base>:
   111e0:	mov	r3, r1
   111e4:	movw	r1, #6408	; 0x1908
   111e8:	movt	r1, #1
   111ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   111f0:	mov	r5, r0
   111f4:	mov	r0, r3
   111f8:	strd	r6, [sp, #8]
   111fc:	strd	r8, [sp, #16]
   11200:	strd	sl, [sp, #24]
   11204:	str	lr, [sp, #32]
   11208:	sub	sp, sp, #268	; 0x10c
   1120c:	bl	10a14 <fopen@plt>
   11210:	subs	r7, r0, #0
   11214:	beq	11350 <fp_carrega@@Base+0x170>
   11218:	movw	sl, #6448	; 0x1930
   1121c:	movt	sl, #1
   11220:	mov	r0, r7
   11224:	bl	10a8c <feof@plt>
   11228:	subs	r4, r0, #0
   1122c:	bne	1130c <fp_carrega@@Base+0x12c>
   11230:	add	r2, sp, #4
   11234:	mov	r1, sl
   11238:	mov	r0, r7
   1123c:	bl	10a08 <__isoc99_fscanf@plt>
   11240:	mov	r2, r7
   11244:	mov	r1, #256	; 0x100
   11248:	add	r0, sp, #8
   1124c:	bl	10a44 <fgets@plt>
   11250:	add	r0, sp, #8
   11254:	bl	10a98 <strlen@plt>
   11258:	add	r3, sp, #264	; 0x108
   1125c:	cmp	r5, #0
   11260:	add	r0, r3, r0
   11264:	strb	r4, [r0, #-257]	; 0xfffffeff
   11268:	beq	11220 <fp_carrega@@Base+0x40>
   1126c:	ldrd	r2, [r5]
   11270:	cmp	r2, r3
   11274:	beq	11220 <fp_carrega@@Base+0x40>
   11278:	add	r1, sp, #8
   1127c:	ldr	r0, [sp, #4]
   11280:	bl	1160c <elemento_cria@@Base>
   11284:	ldr	r3, [r5]
   11288:	mov	r8, r0
   1128c:	cmp	r3, #0
   11290:	bgt	112a4 <fp_carrega@@Base+0xc4>
   11294:	b	11348 <fp_carrega@@Base+0x168>
   11298:	add	r4, r4, #1
   1129c:	cmp	r4, r3
   112a0:	bge	11330 <fp_carrega@@Base+0x150>
   112a4:	ldr	r3, [r5, #8]
   112a8:	mov	r1, r8
   112ac:	lsl	r9, r4, #2
   112b0:	ldr	r0, [r3, r4, lsl #2]
   112b4:	bl	11654 <maior_que@@Base>
   112b8:	cmp	r0, #0
   112bc:	ldr	r3, [r5]
   112c0:	bne	11298 <fp_carrega@@Base+0xb8>
   112c4:	cmp	r4, r3
   112c8:	ldr	fp, [r5, #8]
   112cc:	bgt	11340 <fp_carrega@@Base+0x160>
   112d0:	add	r0, r4, #1
   112d4:	add	r6, r3, #1
   112d8:	lsl	r0, r0, #2
   112dc:	sub	r2, r6, r4
   112e0:	lsl	r2, r2, #2
   112e4:	sub	r1, r0, #4
   112e8:	add	r0, fp, r0
   112ec:	add	r1, fp, r1
   112f0:	bl	10a2c <memmove@plt>
   112f4:	mov	r0, r7
   112f8:	str	r8, [fp, r9]
   112fc:	str	r6, [r5]
   11300:	bl	10a8c <feof@plt>
   11304:	subs	r4, r0, #0
   11308:	beq	11230 <fp_carrega@@Base+0x50>
   1130c:	mov	r0, r7
   11310:	bl	10ab0 <fclose@plt>
   11314:	add	sp, sp, #268	; 0x10c
   11318:	ldrd	r4, [sp]
   1131c:	ldrd	r6, [sp, #8]
   11320:	ldrd	r8, [sp, #16]
   11324:	ldrd	sl, [sp, #24]
   11328:	add	sp, sp, #32
   1132c:	pop	{pc}		; (ldr pc, [sp], #4)
   11330:	cmp	r4, r3
   11334:	lsl	r9, r4, #2
   11338:	ldr	fp, [r5, #8]
   1133c:	ble	112d0 <fp_carrega@@Base+0xf0>
   11340:	add	r6, r3, #1
   11344:	b	112f4 <fp_carrega@@Base+0x114>
   11348:	mov	r9, r4
   1134c:	b	112c4 <fp_carrega@@Base+0xe4>
   11350:	movw	r0, #6412	; 0x190c
   11354:	movt	r0, #1
   11358:	bl	10a5c <puts@plt>
   1135c:	b	11314 <fp_carrega@@Base+0x134>

00011360 <heap_insere@@Base>:
   11360:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11364:	ldr	ip, [r0, #4]
   11368:	strd	r6, [sp, #8]
   1136c:	str	lr, [sp, #28]
   11370:	ldr	lr, [r0]
   11374:	strd	r8, [sp, #16]
   11378:	str	sl, [sp, #24]
   1137c:	cmp	lr, ip
   11380:	moveq	r4, #0
   11384:	beq	1142c <heap_insere@@Base+0xcc>
   11388:	mov	r5, r0
   1138c:	mov	r9, r1
   11390:	mov	r0, r3
   11394:	mov	r1, r2
   11398:	bl	1160c <elemento_cria@@Base>
   1139c:	ldr	r6, [r5]
   113a0:	mov	r8, r0
   113a4:	cmp	r6, #0
   113a8:	movgt	r4, #0
   113ac:	bgt	113c4 <heap_insere@@Base+0x64>
   113b0:	b	11458 <heap_insere@@Base+0xf8>
   113b4:	ldr	r6, [r5]
   113b8:	add	r4, r4, #1
   113bc:	cmp	r4, r6
   113c0:	bge	11448 <heap_insere@@Base+0xe8>
   113c4:	ldr	r3, [r5, #8]
   113c8:	mov	r1, r8
   113cc:	lsl	r7, r4, #2
   113d0:	ldr	r0, [r3, r4, lsl #2]
   113d4:	blx	r9
   113d8:	cmp	r0, #1
   113dc:	bne	113b4 <heap_insere@@Base+0x54>
   113e0:	cmp	r4, #0
   113e4:	ldr	r6, [r5]
   113e8:	ldr	r2, [r5, #8]
   113ec:	add	r9, r2, r7
   113f0:	beq	11420 <heap_insere@@Base+0xc0>
   113f4:	cmp	r4, #0
   113f8:	rsb	r3, r7, #4
   113fc:	add	r0, r7, #4
   11400:	movle	r3, #0
   11404:	add	r1, r3, r7
   11408:	add	r0, r0, r3
   1140c:	add	r1, r2, r1
   11410:	add	r0, r2, r0
   11414:	movgt	r2, r7
   11418:	movle	r2, #4
   1141c:	bl	10a2c <memmove@plt>
   11420:	add	r6, r6, #1
   11424:	str	r8, [r9]
   11428:	str	r6, [r5]
   1142c:	mov	r0, r4
   11430:	ldrd	r4, [sp]
   11434:	ldrd	r6, [sp, #8]
   11438:	ldrd	r8, [sp, #16]
   1143c:	ldr	sl, [sp, #24]
   11440:	add	sp, sp, #28
   11444:	pop	{pc}		; (ldr pc, [sp], #4)
   11448:	ldr	r2, [r5, #8]
   1144c:	lsl	r7, r4, #2
   11450:	add	r9, r2, r7
   11454:	b	113f4 <heap_insere@@Base+0x94>
   11458:	mov	r4, #0
   1145c:	ldr	r9, [r5, #8]
   11460:	b	11420 <heap_insere@@Base+0xc0>

00011464 <heap_remove@@Base>:
   11464:	mov	r0, #0
   11468:	bx	lr

0001146c <heap_carrega@@Base>:
   1146c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11470:	mov	r5, r0
   11474:	mov	r0, r2
   11478:	strd	r6, [sp, #8]
   1147c:	str	r8, [sp, #16]
   11480:	mov	r8, r1
   11484:	movw	r1, #6408	; 0x1908
   11488:	movt	r1, #1
   1148c:	str	lr, [sp, #20]
   11490:	sub	sp, sp, #264	; 0x108
   11494:	bl	10a14 <fopen@plt>
   11498:	subs	r4, r0, #0
   1149c:	beq	1152c <heap_carrega@@Base+0xc0>
   114a0:	movw	r7, #6448	; 0x1930
   114a4:	movt	r7, #1
   114a8:	mov	r0, r4
   114ac:	bl	10a8c <feof@plt>
   114b0:	subs	r6, r0, #0
   114b4:	mov	r1, r7
   114b8:	add	r2, sp, #4
   114bc:	mov	r0, r4
   114c0:	bne	11510 <heap_carrega@@Base+0xa4>
   114c4:	bl	10a08 <__isoc99_fscanf@plt>
   114c8:	mov	r2, r4
   114cc:	mov	r1, #256	; 0x100
   114d0:	add	r0, sp, #8
   114d4:	bl	10a44 <fgets@plt>
   114d8:	add	r0, sp, #8
   114dc:	bl	10a98 <strlen@plt>
   114e0:	add	r3, sp, #264	; 0x108
   114e4:	add	r0, r3, r0
   114e8:	ldrd	r2, [r5]
   114ec:	strb	r6, [r0, #-257]	; 0xfffffeff
   114f0:	cmp	r2, r3
   114f4:	beq	114a8 <heap_carrega@@Base+0x3c>
   114f8:	add	r2, sp, #8
   114fc:	mov	r1, r8
   11500:	ldr	r3, [sp, #4]
   11504:	mov	r0, r5
   11508:	bl	10f9c <_start@@Base+0x1c0>
   1150c:	b	114a8 <heap_carrega@@Base+0x3c>
   11510:	bl	10ab0 <fclose@plt>
   11514:	add	sp, sp, #264	; 0x108
   11518:	ldrd	r4, [sp]
   1151c:	ldrd	r6, [sp, #8]
   11520:	ldr	r8, [sp, #16]
   11524:	add	sp, sp, #20
   11528:	pop	{pc}		; (ldr pc, [sp], #4)
   1152c:	movw	r0, #6412	; 0x190c
   11530:	movt	r0, #1
   11534:	bl	10a5c <puts@plt>
   11538:	b	11514 <heap_carrega@@Base+0xa8>

0001153c <vetor_cria@@Base>:
   1153c:	strd	r4, [sp, #-16]!
   11540:	mov	r5, r0
   11544:	mov	r0, #12
   11548:	str	r6, [sp, #8]
   1154c:	str	lr, [sp, #12]
   11550:	bl	10a68 <malloc@plt>
   11554:	subs	r4, r0, #0
   11558:	beq	11580 <vetor_cria@@Base+0x44>
   1155c:	mov	r3, #0
   11560:	mov	r0, r5
   11564:	mov	r1, #4
   11568:	stm	r4, {r3, r5}
   1156c:	bl	109e4 <calloc@plt>
   11570:	cmp	r0, #0
   11574:	mov	r3, r0
   11578:	str	r0, [r4, #8]
   1157c:	beq	11594 <vetor_cria@@Base+0x58>
   11580:	mov	r0, r4
   11584:	ldrd	r4, [sp]
   11588:	ldr	r6, [sp, #8]
   1158c:	add	sp, sp, #12
   11590:	pop	{pc}		; (ldr pc, [sp], #4)
   11594:	mov	r0, r4
   11598:	mov	r4, r3
   1159c:	bl	10a38 <free@plt>
   115a0:	b	11580 <vetor_cria@@Base+0x44>

000115a4 <vetor_criaHeap@@Base>:
   115a4:	strd	r4, [sp, #-16]!
   115a8:	mov	r5, r0
   115ac:	mov	r0, #12
   115b0:	str	r6, [sp, #8]
   115b4:	str	lr, [sp, #12]
   115b8:	bl	10a68 <malloc@plt>
   115bc:	subs	r4, r0, #0
   115c0:	beq	115e8 <vetor_criaHeap@@Base+0x44>
   115c4:	mov	r3, #0
   115c8:	add	r0, r5, #1
   115cc:	mov	r1, #4
   115d0:	stm	r4, {r3, r5}
   115d4:	bl	109e4 <calloc@plt>
   115d8:	cmp	r0, #0
   115dc:	mov	r3, r0
   115e0:	str	r0, [r4, #8]
   115e4:	beq	115fc <vetor_criaHeap@@Base+0x58>
   115e8:	mov	r0, r4
   115ec:	ldrd	r4, [sp]
   115f0:	ldr	r6, [sp, #8]
   115f4:	add	sp, sp, #12
   115f8:	pop	{pc}		; (ldr pc, [sp], #4)
   115fc:	mov	r0, r4
   11600:	mov	r4, r3
   11604:	bl	10a38 <free@plt>
   11608:	b	115e8 <vetor_criaHeap@@Base+0x44>

0001160c <elemento_cria@@Base>:
   1160c:	strd	r4, [sp, #-16]!
   11610:	mov	r5, r0
   11614:	mov	r0, #8
   11618:	str	r6, [sp, #8]
   1161c:	mov	r6, r1
   11620:	str	lr, [sp, #12]
   11624:	bl	10a68 <malloc@plt>
   11628:	subs	r4, r0, #0
   1162c:	beq	11640 <elemento_cria@@Base+0x34>
   11630:	mov	r0, r6
   11634:	bl	10a50 <strdup@plt>
   11638:	str	r5, [r4]
   1163c:	str	r0, [r4, #4]
   11640:	mov	r0, r4
   11644:	ldrd	r4, [sp]
   11648:	ldr	r6, [sp, #8]
   1164c:	add	sp, sp, #12
   11650:	pop	{pc}		; (ldr pc, [sp], #4)

00011654 <maior_que@@Base>:
   11654:	cmp	r1, #0
   11658:	cmpne	r0, #0
   1165c:	strd	r4, [sp, #-16]!
   11660:	str	r6, [sp, #8]
   11664:	str	lr, [sp, #12]
   11668:	beq	116bc <maior_que@@Base+0x68>
   1166c:	movw	r3, #8292	; 0x2064
   11670:	movt	r3, #2
   11674:	mov	r5, r0
   11678:	ldr	r0, [r3]
   1167c:	mov	r4, r1
   11680:	bl	10a20 <fflush@plt>
   11684:	movw	r3, #8300	; 0x206c
   11688:	movt	r3, #2
   1168c:	ldr	r0, [r5]
   11690:	ldr	r2, [r3]
   11694:	ldr	r1, [r4]
   11698:	ldrd	r4, [sp]
   1169c:	add	r2, r2, #1
   116a0:	ldr	r6, [sp, #8]
   116a4:	add	sp, sp, #12
   116a8:	cmp	r0, r1
   116ac:	str	r2, [r3]
   116b0:	movle	r0, #0
   116b4:	movgt	r0, #1
   116b8:	pop	{pc}		; (ldr pc, [sp], #4)
   116bc:	movw	r0, #7336	; 0x1ca8
   116c0:	movt	r0, #1
   116c4:	bl	10a5c <puts@plt>
   116c8:	ldrd	r4, [sp]
   116cc:	mov	r0, #0
   116d0:	ldr	r6, [sp, #8]
   116d4:	add	sp, sp, #12
   116d8:	pop	{pc}		; (ldr pc, [sp], #4)

000116dc <maior_que_HeapSort@@Base>:
   116dc:	cmp	r1, #0
   116e0:	cmpne	r0, #0
   116e4:	strd	r4, [sp, #-16]!
   116e8:	str	r6, [sp, #8]
   116ec:	str	lr, [sp, #12]
   116f0:	beq	11740 <maior_que_HeapSort@@Base+0x64>
   116f4:	movw	r3, #8292	; 0x2064
   116f8:	movt	r3, #2
   116fc:	mov	r4, r0
   11700:	ldr	r0, [r3]
   11704:	mov	r5, r1
   11708:	bl	10a20 <fflush@plt>
   1170c:	movw	r3, #8300	; 0x206c
   11710:	movt	r3, #2
   11714:	ldr	r0, [r4, #4]
   11718:	ldr	r2, [r3]
   1171c:	ldr	r1, [r5, #4]
   11720:	add	r2, r2, #1
   11724:	str	r2, [r3]
   11728:	bl	109f0 <strcmp@plt>
   1172c:	ldrd	r4, [sp]
   11730:	lsr	r0, r0, #31
   11734:	ldr	r6, [sp, #8]
   11738:	add	sp, sp, #12
   1173c:	pop	{pc}		; (ldr pc, [sp], #4)
   11740:	movw	r0, #7336	; 0x1ca8
   11744:	movt	r0, #1
   11748:	bl	10a5c <puts@plt>
   1174c:	ldrd	r4, [sp]
   11750:	mov	r0, #0
   11754:	ldr	r6, [sp, #8]
   11758:	add	sp, sp, #12
   1175c:	pop	{pc}		; (ldr pc, [sp], #4)

00011760 <vetor_imprime@@Base>:
   11760:	ldr	r3, [r0]
   11764:	cmp	r3, #0
   11768:	ble	117f0 <vetor_imprime@@Base+0x90>
   1176c:	strd	r4, [sp, #-16]!
   11770:	mov	r5, r0
   11774:	movw	r0, #7348	; 0x1cb4
   11778:	movt	r0, #1
   1177c:	ldr	r3, [r5, #8]
   11780:	ldr	r3, [r3]
   11784:	ldr	r2, [r3]
   11788:	ldr	r1, [r3, #4]
   1178c:	str	r6, [sp, #8]
   11790:	str	lr, [sp, #12]
   11794:	bl	109fc <printf@plt>
   11798:	ldr	r3, [r5]
   1179c:	cmp	r3, #1
   117a0:	movwgt	r6, #7404	; 0x1cec
   117a4:	movgt	r4, #1
   117a8:	movtgt	r6, #1
   117ac:	ble	117d8 <vetor_imprime@@Base+0x78>
   117b0:	ldr	r3, [r5, #8]
   117b4:	mov	r0, r6
   117b8:	ldr	r3, [r3, r4, lsl #2]
   117bc:	add	r4, r4, #1
   117c0:	ldr	r2, [r3]
   117c4:	ldr	r1, [r3, #4]
   117c8:	bl	109fc <printf@plt>
   117cc:	ldr	r3, [r5]
   117d0:	cmp	r3, r4
   117d4:	bgt	117b0 <vetor_imprime@@Base+0x50>
   117d8:	mov	r0, #10
   117dc:	ldrd	r4, [sp]
   117e0:	ldr	r6, [sp, #8]
   117e4:	ldr	lr, [sp, #12]
   117e8:	add	sp, sp, #16
   117ec:	b	10aa4 <putchar@plt>
   117f0:	movw	r0, #7380	; 0x1cd4
   117f4:	movt	r0, #1
   117f8:	b	10a5c <puts@plt>

000117fc <vetor_imprimeHeap@@Base>:
   117fc:	ldr	r3, [r0]
   11800:	cmp	r3, #0
   11804:	ble	1188c <vetor_imprimeHeap@@Base+0x90>
   11808:	strd	r4, [sp, #-16]!
   1180c:	mov	r5, r0
   11810:	movw	r0, #7348	; 0x1cb4
   11814:	movt	r0, #1
   11818:	ldr	r3, [r5, #8]
   1181c:	ldr	r3, [r3, #4]
   11820:	ldr	r2, [r3]
   11824:	ldr	r1, [r3, #4]
   11828:	str	r6, [sp, #8]
   1182c:	str	lr, [sp, #12]
   11830:	bl	109fc <printf@plt>
   11834:	ldr	r3, [r5]
   11838:	cmp	r3, #2
   1183c:	movwgt	r6, #7404	; 0x1cec
   11840:	movgt	r4, #2
   11844:	movtgt	r6, #1
   11848:	ble	11874 <vetor_imprimeHeap@@Base+0x78>
   1184c:	ldr	r3, [r5, #8]
   11850:	mov	r0, r6
   11854:	ldr	r3, [r3, r4, lsl #2]
   11858:	add	r4, r4, #1
   1185c:	ldr	r2, [r3]
   11860:	ldr	r1, [r3, #4]
   11864:	bl	109fc <printf@plt>
   11868:	ldr	r3, [r5]
   1186c:	cmp	r3, r4
   11870:	bgt	1184c <vetor_imprimeHeap@@Base+0x50>
   11874:	mov	r0, #10
   11878:	ldrd	r4, [sp]
   1187c:	ldr	r6, [sp, #8]
   11880:	ldr	lr, [sp, #12]
   11884:	add	sp, sp, #16
   11888:	b	10aa4 <putchar@plt>
   1188c:	movw	r0, #7380	; 0x1cd4
   11890:	movt	r0, #1
   11894:	b	10a5c <puts@plt>

00011898 <__libc_csu_init@@Base>:
   11898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1189c:	mov	r7, r0
   118a0:	ldr	r6, [pc, #72]	; 118f0 <__libc_csu_init@@Base+0x58>
   118a4:	ldr	r5, [pc, #72]	; 118f4 <__libc_csu_init@@Base+0x5c>
   118a8:	add	r6, pc, r6
   118ac:	add	r5, pc, r5
   118b0:	sub	r6, r6, r5
   118b4:	mov	r8, r1
   118b8:	mov	r9, r2
   118bc:	bl	109c4 <calloc@plt-0x20>
   118c0:	asrs	r6, r6, #2
   118c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   118c8:	mov	r4, #0
   118cc:	add	r4, r4, #1
   118d0:	ldr	r3, [r5], #4
   118d4:	mov	r2, r9
   118d8:	mov	r1, r8
   118dc:	mov	r0, r7
   118e0:	blx	r3
   118e4:	cmp	r6, r4
   118e8:	bne	118cc <__libc_csu_init@@Base+0x34>
   118ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118f0:	andeq	r0, r1, r4, ror #12
   118f4:	andeq	r0, r1, ip, asr r6

000118f8 <__libc_csu_fini@@Base>:
   118f8:	bx	lr

Disassembly of section .fini:

000118fc <.fini>:
   118fc:	push	{r3, lr}
   11900:	pop	{r3, pc}
