
../repos/coreutils/src/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010b3c <.init>:
   10b3c:	push	{r3, lr}
   10b40:	bl	10f74 <putchar_unlocked@plt+0x1fc>
   10b44:	pop	{r3, pc}

Disassembly of section .plt:

00010b48 <calloc@plt-0x14>:
   10b48:	push	{lr}		; (str lr, [sp, #-4]!)
   10b4c:	ldr	lr, [pc, #4]	; 10b58 <calloc@plt-0x4>
   10b50:	add	lr, pc, lr
   10b54:	ldr	pc, [lr, #8]!
   10b58:	andeq	r4, r1, r8, lsr #9

00010b5c <calloc@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #20, 20	; 0x14000
   10b64:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b68 <fputs_unlocked@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #20, 20	; 0x14000
   10b70:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b74 <raise@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #20, 20	; 0x14000
   10b7c:	ldr	pc, [ip, #1176]!	; 0x498

00010b80 <strcmp@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1168]!	; 0x490

00010b8c <fflush@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1160]!	; 0x488

00010b98 <free@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1152]!	; 0x480

00010ba4 <_exit@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1144]!	; 0x478

00010bb0 <memcpy@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1136]!	; 0x470

00010bbc <mbsinit@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1128]!	; 0x468

00010bc8 <fwrite_unlocked@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1120]!	; 0x460

00010bd4 <memcmp@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1112]!	; 0x458

00010be0 <fputc_unlocked@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1104]!	; 0x450

00010bec <dcgettext@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1096]!	; 0x448

00010bf8 <realloc@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1088]!	; 0x440

00010c04 <textdomain@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1080]!	; 0x438

00010c10 <iswprint@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1072]!	; 0x430

00010c1c <lseek64@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1064]!	; 0x428

00010c28 <__ctype_get_mb_cur_max@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1056]!	; 0x420

00010c34 <__fpending@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1048]!	; 0x418

00010c40 <ferror_unlocked@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1040]!	; 0x410

00010c4c <mbrtowc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1032]!	; 0x408

00010c58 <error@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1024]!	; 0x400

00010c64 <malloc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c70 <__libc_start_main@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c7c <__freading@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c88 <__gmon_start__@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #992]!	; 0x3e0

00010c94 <getopt_long@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #984]!	; 0x3d8

00010ca0 <__ctype_b_loc@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #976]!	; 0x3d0

00010cac <exit@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cb8 <strlen@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #960]!	; 0x3c0

00010cc4 <__errno_location@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #952]!	; 0x3b8

00010cd0 <__cxa_atexit@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cdc <memset@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #936]!	; 0x3a8

00010ce8 <__printf_chk@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #928]!	; 0x3a0

00010cf4 <fileno@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #920]!	; 0x398

00010d00 <__fprintf_chk@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #912]!	; 0x390

00010d0c <fclose@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #904]!	; 0x388

00010d18 <fseeko64@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #896]!	; 0x380

00010d24 <setlocale@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #888]!	; 0x378

00010d30 <strrchr@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #880]!	; 0x370

00010d3c <nl_langinfo@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #872]!	; 0x368

00010d48 <bindtextdomain@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #864]!	; 0x360

00010d54 <fputs@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #856]!	; 0x358

00010d60 <strncmp@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #848]!	; 0x350

00010d6c <abort@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #840]!	; 0x348

00010d78 <putchar_unlocked@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #832]!	; 0x340

Disassembly of section .text:

00010d84 <.text>:
   10d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d88:	mov	r7, r0
   10d8c:	sub	sp, sp, #20
   10d90:	ldr	r0, [r1]
   10d94:	mov	r8, r1
   10d98:	bl	11474 <putchar_unlocked@plt+0x6fc>
   10d9c:	ldr	r1, [pc, #344]	; 10efc <putchar_unlocked@plt+0x184>
   10da0:	mov	r0, #6
   10da4:	bl	10d24 <setlocale@plt>
   10da8:	ldr	r1, [pc, #336]	; 10f00 <putchar_unlocked@plt+0x188>
   10dac:	ldr	r0, [pc, #336]	; 10f04 <putchar_unlocked@plt+0x18c>
   10db0:	bl	10d48 <bindtextdomain@plt>
   10db4:	ldr	r0, [pc, #328]	; 10f04 <putchar_unlocked@plt+0x18c>
   10db8:	bl	10c04 <textdomain@plt>
   10dbc:	ldr	r0, [pc, #324]	; 10f08 <putchar_unlocked@plt+0x190>
   10dc0:	bl	13ec4 <putchar_unlocked@plt+0x314c>
   10dc4:	mov	r5, #0
   10dc8:	ldr	r6, [pc, #316]	; 10f0c <putchar_unlocked@plt+0x194>
   10dcc:	ldr	r9, [pc, #316]	; 10f10 <putchar_unlocked@plt+0x198>
   10dd0:	mov	r4, r5
   10dd4:	str	r4, [sp]
   10dd8:	mov	r3, r6
   10ddc:	mov	r2, r9
   10de0:	mov	r1, r8
   10de4:	mov	r0, r7
   10de8:	bl	10c94 <getopt_long@plt>
   10dec:	cmn	r0, #1
   10df0:	beq	10e54 <putchar_unlocked@plt+0xdc>
   10df4:	cmn	r0, #2
   10df8:	mov	r5, #1
   10dfc:	beq	10e4c <putchar_unlocked@plt+0xd4>
   10e00:	cmp	r0, #122	; 0x7a
   10e04:	beq	10dd4 <putchar_unlocked@plt+0x5c>
   10e08:	cmn	r0, #3
   10e0c:	movne	r0, r5
   10e10:	bne	10e50 <putchar_unlocked@plt+0xd8>
   10e14:	ldr	r3, [pc, #248]	; 10f14 <putchar_unlocked@plt+0x19c>
   10e18:	ldr	r0, [pc, #248]	; 10f18 <putchar_unlocked@plt+0x1a0>
   10e1c:	str	r3, [sp, #4]
   10e20:	ldr	r3, [pc, #244]	; 10f1c <putchar_unlocked@plt+0x1a4>
   10e24:	str	r4, [sp, #8]
   10e28:	str	r3, [sp]
   10e2c:	ldr	r3, [pc, #236]	; 10f20 <putchar_unlocked@plt+0x1a8>
   10e30:	ldr	r0, [r0]
   10e34:	ldr	r2, [pc, #232]	; 10f24 <putchar_unlocked@plt+0x1ac>
   10e38:	ldr	r3, [r3]
   10e3c:	ldr	r1, [pc, #228]	; 10f28 <putchar_unlocked@plt+0x1b0>
   10e40:	bl	12ef4 <putchar_unlocked@plt+0x217c>
   10e44:	mov	r0, #0
   10e48:	bl	10cac <exit@plt>
   10e4c:	mov	r0, #0
   10e50:	bl	11060 <putchar_unlocked@plt+0x2e8>
   10e54:	ldr	r4, [pc, #208]	; 10f2c <putchar_unlocked@plt+0x1b4>
   10e58:	ldr	r3, [r4]
   10e5c:	cmp	r7, r3
   10e60:	ble	10e94 <putchar_unlocked@plt+0x11c>
   10e64:	cmp	r5, #0
   10e68:	ldr	sl, [pc, #192]	; 10f30 <putchar_unlocked@plt+0x1b8>
   10e6c:	ldr	fp, [pc, #164]	; 10f18 <putchar_unlocked@plt+0x1a0>
   10e70:	moveq	r5, #10
   10e74:	movne	r5, #0
   10e78:	mov	r9, #1
   10e7c:	ldr	r3, [r4]
   10e80:	cmp	r7, r3
   10e84:	bgt	10ebc <putchar_unlocked@plt+0x144>
   10e88:	mov	r0, #0
   10e8c:	add	sp, sp, #20
   10e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e94:	mov	r2, #5
   10e98:	ldr	r1, [pc, #148]	; 10f34 <putchar_unlocked@plt+0x1bc>
   10e9c:	mov	r0, #0
   10ea0:	bl	10bec <dcgettext@plt>
   10ea4:	mov	r1, #0
   10ea8:	mov	r2, r0
   10eac:	mov	r0, r1
   10eb0:	bl	10c58 <error@plt>
   10eb4:	mov	r0, #1
   10eb8:	b	10e50 <putchar_unlocked@plt+0xd8>
   10ebc:	ldr	r6, [r8, r3, lsl #2]
   10ec0:	mov	r0, r6
   10ec4:	bl	113d8 <putchar_unlocked@plt+0x660>
   10ec8:	ldr	r3, [fp]
   10ecc:	mov	r1, r9
   10ed0:	subs	r2, r0, #0
   10ed4:	moveq	r6, sl
   10ed8:	moveq	r2, r9
   10edc:	mov	r0, r6
   10ee0:	bl	10bc8 <fwrite_unlocked@plt>
   10ee4:	mov	r0, r5
   10ee8:	bl	10d78 <putchar_unlocked@plt>
   10eec:	ldr	r3, [r4]
   10ef0:	add	r3, r3, #1
   10ef4:	str	r3, [r4]
   10ef8:	b	10e7c <putchar_unlocked@plt+0x104>
   10efc:	andeq	r4, r1, r6, asr #32
   10f00:	andeq	r4, r1, pc, asr #4
   10f04:	andeq	r4, r1, ip, lsr #3
   10f08:	strdeq	r1, [r1], -r4
   10f0c:	andeq	r3, r1, r4, lsr #30
   10f10:	andeq	r4, r1, r7, ror #4
   10f14:	andeq	r4, r1, r9, ror #4
   10f18:	andeq	r5, r2, ip, lsr #2
   10f1c:	andeq	r4, r1, r6, ror r2
   10f20:	ldrdeq	r5, [r2], -r0
   10f24:	andeq	r4, r1, r8, lsr #3
   10f28:	andeq	r3, r1, r4, ror #30
   10f2c:	andeq	r5, r2, r0, lsr #2
   10f30:	andeq	r3, r1, r0, lsr #30
   10f34:	andeq	r4, r1, r6, lsl #5
   10f38:	mov	fp, #0
   10f3c:	mov	lr, #0
   10f40:	pop	{r1}		; (ldr r1, [sp], #4)
   10f44:	mov	r2, sp
   10f48:	push	{r2}		; (str r2, [sp, #-4]!)
   10f4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f50:	ldr	ip, [pc, #16]	; 10f68 <putchar_unlocked@plt+0x1f0>
   10f54:	push	{ip}		; (str ip, [sp, #-4]!)
   10f58:	ldr	r0, [pc, #12]	; 10f6c <putchar_unlocked@plt+0x1f4>
   10f5c:	ldr	r3, [pc, #12]	; 10f70 <putchar_unlocked@plt+0x1f8>
   10f60:	bl	10c70 <__libc_start_main@plt>
   10f64:	bl	10d6c <abort@plt>
   10f68:	andeq	r3, r1, r0, asr #29
   10f6c:	andeq	r0, r1, r4, lsl #27
   10f70:	andeq	r3, r1, r0, ror #28
   10f74:	ldr	r3, [pc, #20]	; 10f90 <putchar_unlocked@plt+0x218>
   10f78:	ldr	r2, [pc, #20]	; 10f94 <putchar_unlocked@plt+0x21c>
   10f7c:	add	r3, pc, r3
   10f80:	ldr	r2, [r3, r2]
   10f84:	cmp	r2, #0
   10f88:	bxeq	lr
   10f8c:	b	10c88 <__gmon_start__@plt>
   10f90:	andeq	r4, r1, ip, ror r0
   10f94:	andeq	r0, r0, r4, asr #1
   10f98:	ldr	r3, [pc, #28]	; 10fbc <putchar_unlocked@plt+0x244>
   10f9c:	ldr	r0, [pc, #28]	; 10fc0 <putchar_unlocked@plt+0x248>
   10fa0:	sub	r3, r3, r0
   10fa4:	cmp	r3, #6
   10fa8:	bxls	lr
   10fac:	ldr	r3, [pc, #16]	; 10fc4 <putchar_unlocked@plt+0x24c>
   10fb0:	cmp	r3, #0
   10fb4:	bxeq	lr
   10fb8:	bx	r3
   10fbc:	andeq	r5, r2, fp, lsl r1
   10fc0:	andeq	r5, r2, r8, lsl r1
   10fc4:	andeq	r0, r0, r0
   10fc8:	ldr	r1, [pc, #36]	; 10ff4 <putchar_unlocked@plt+0x27c>
   10fcc:	ldr	r0, [pc, #36]	; 10ff8 <putchar_unlocked@plt+0x280>
   10fd0:	sub	r1, r1, r0
   10fd4:	asr	r1, r1, #2
   10fd8:	add	r1, r1, r1, lsr #31
   10fdc:	asrs	r1, r1, #1
   10fe0:	bxeq	lr
   10fe4:	ldr	r3, [pc, #16]	; 10ffc <putchar_unlocked@plt+0x284>
   10fe8:	cmp	r3, #0
   10fec:	bxeq	lr
   10ff0:	bx	r3
   10ff4:	andeq	r5, r2, r8, lsl r1
   10ff8:	andeq	r5, r2, r8, lsl r1
   10ffc:	andeq	r0, r0, r0
   11000:	push	{r4, lr}
   11004:	ldr	r4, [pc, #24]	; 11024 <putchar_unlocked@plt+0x2ac>
   11008:	ldrb	r3, [r4]
   1100c:	cmp	r3, #0
   11010:	popne	{r4, pc}
   11014:	bl	10f98 <putchar_unlocked@plt+0x220>
   11018:	mov	r3, #1
   1101c:	strb	r3, [r4]
   11020:	pop	{r4, pc}
   11024:	andeq	r5, r2, r0, lsr r1
   11028:	ldr	r0, [pc, #40]	; 11058 <putchar_unlocked@plt+0x2e0>
   1102c:	ldr	r3, [r0]
   11030:	cmp	r3, #0
   11034:	bne	1103c <putchar_unlocked@plt+0x2c4>
   11038:	b	10fc8 <putchar_unlocked@plt+0x250>
   1103c:	ldr	r3, [pc, #24]	; 1105c <putchar_unlocked@plt+0x2e4>
   11040:	cmp	r3, #0
   11044:	beq	11038 <putchar_unlocked@plt+0x2c0>
   11048:	push	{r4, lr}
   1104c:	blx	r3
   11050:	pop	{r4, lr}
   11054:	b	10fc8 <putchar_unlocked@plt+0x250>
   11058:	andeq	r4, r2, r4, lsl pc
   1105c:	andeq	r0, r0, r0
   11060:	subs	r4, r0, #0
   11064:	push	{r7, lr}
   11068:	sub	sp, sp, #64	; 0x40
   1106c:	ldr	r6, [pc, #524]	; 11280 <putchar_unlocked@plt+0x508>
   11070:	beq	110a8 <putchar_unlocked@plt+0x330>
   11074:	ldr	r3, [pc, #520]	; 11284 <putchar_unlocked@plt+0x50c>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #516]	; 11288 <putchar_unlocked@plt+0x510>
   11080:	mov	r0, #0
   11084:	ldr	r5, [r3]
   11088:	bl	10bec <dcgettext@plt>
   1108c:	ldr	r3, [r6]
   11090:	mov	r1, #1
   11094:	mov	r2, r0
   11098:	mov	r0, r5
   1109c:	bl	10d00 <__fprintf_chk@plt>
   110a0:	mov	r0, r4
   110a4:	bl	10cac <exit@plt>
   110a8:	mov	r2, #5
   110ac:	ldr	r1, [pc, #472]	; 1128c <putchar_unlocked@plt+0x514>
   110b0:	bl	10bec <dcgettext@plt>
   110b4:	ldr	r5, [pc, #468]	; 11290 <putchar_unlocked@plt+0x518>
   110b8:	ldr	r2, [r6]
   110bc:	ldr	r9, [pc, #464]	; 11294 <putchar_unlocked@plt+0x51c>
   110c0:	mov	r7, r4
   110c4:	mov	r1, r0
   110c8:	mov	r0, #1
   110cc:	bl	10ce8 <__printf_chk@plt>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #444]	; 11298 <putchar_unlocked@plt+0x520>
   110d8:	mov	r0, r4
   110dc:	bl	10bec <dcgettext@plt>
   110e0:	ldr	r1, [r5]
   110e4:	bl	10b68 <fputs_unlocked@plt>
   110e8:	mov	r2, #5
   110ec:	ldr	r1, [pc, #424]	; 1129c <putchar_unlocked@plt+0x524>
   110f0:	mov	r0, r4
   110f4:	bl	10bec <dcgettext@plt>
   110f8:	ldr	r1, [r5]
   110fc:	bl	10b68 <fputs_unlocked@plt>
   11100:	mov	r2, #5
   11104:	ldr	r1, [pc, #404]	; 112a0 <putchar_unlocked@plt+0x528>
   11108:	mov	r0, r4
   1110c:	bl	10bec <dcgettext@plt>
   11110:	ldr	r1, [r5]
   11114:	bl	10b68 <fputs_unlocked@plt>
   11118:	mov	r2, #5
   1111c:	ldr	r1, [pc, #384]	; 112a4 <putchar_unlocked@plt+0x52c>
   11120:	mov	r0, r4
   11124:	bl	10bec <dcgettext@plt>
   11128:	ldr	r1, [r5]
   1112c:	bl	10b68 <fputs_unlocked@plt>
   11130:	mov	r2, #5
   11134:	ldr	r1, [pc, #364]	; 112a8 <putchar_unlocked@plt+0x530>
   11138:	mov	r0, r4
   1113c:	bl	10bec <dcgettext@plt>
   11140:	ldr	r3, [r6]
   11144:	mov	r6, r5
   11148:	str	r3, [sp]
   1114c:	mov	r2, r3
   11150:	add	r5, sp, #8
   11154:	mov	r1, r0
   11158:	mov	r0, #1
   1115c:	bl	10ce8 <__printf_chk@plt>
   11160:	ldr	lr, [pc, #324]	; 112ac <putchar_unlocked@plt+0x534>
   11164:	add	ip, sp, #8
   11168:	ldm	lr!, {r0, r1, r2, r3}
   1116c:	stmia	ip!, {r0, r1, r2, r3}
   11170:	ldm	lr!, {r0, r1, r2, r3}
   11174:	stmia	ip!, {r0, r1, r2, r3}
   11178:	ldm	lr!, {r0, r1, r2, r3}
   1117c:	stmia	ip!, {r0, r1, r2, r3}
   11180:	ldm	lr, {r0, r1}
   11184:	stm	ip, {r0, r1}
   11188:	ldr	r1, [r5, r7]
   1118c:	add	r8, r5, r7
   11190:	cmp	r1, #0
   11194:	bne	11238 <putchar_unlocked@plt+0x4c0>
   11198:	ldr	r5, [r8, #4]
   1119c:	ldr	r7, [pc, #240]	; 11294 <putchar_unlocked@plt+0x51c>
   111a0:	cmp	r5, #0
   111a4:	mov	r2, #5
   111a8:	ldr	r1, [pc, #256]	; 112b0 <putchar_unlocked@plt+0x538>
   111ac:	mov	r0, #0
   111b0:	moveq	r5, r7
   111b4:	bl	10bec <dcgettext@plt>
   111b8:	ldr	r3, [pc, #244]	; 112b4 <putchar_unlocked@plt+0x53c>
   111bc:	ldr	r2, [pc, #244]	; 112b8 <putchar_unlocked@plt+0x540>
   111c0:	mov	r1, r0
   111c4:	mov	r0, #1
   111c8:	bl	10ce8 <__printf_chk@plt>
   111cc:	mov	r1, #0
   111d0:	mov	r0, #5
   111d4:	bl	10d24 <setlocale@plt>
   111d8:	cmp	r0, #0
   111dc:	bne	11250 <putchar_unlocked@plt+0x4d8>
   111e0:	mov	r2, #5
   111e4:	ldr	r1, [pc, #208]	; 112bc <putchar_unlocked@plt+0x544>
   111e8:	mov	r0, #0
   111ec:	bl	10bec <dcgettext@plt>
   111f0:	ldr	r3, [pc, #156]	; 11294 <putchar_unlocked@plt+0x51c>
   111f4:	ldr	r2, [pc, #184]	; 112b4 <putchar_unlocked@plt+0x53c>
   111f8:	mov	r1, r0
   111fc:	mov	r0, #1
   11200:	bl	10ce8 <__printf_chk@plt>
   11204:	mov	r2, #5
   11208:	ldr	r1, [pc, #176]	; 112c0 <putchar_unlocked@plt+0x548>
   1120c:	mov	r0, #0
   11210:	bl	10bec <dcgettext@plt>
   11214:	ldr	r2, [pc, #168]	; 112c4 <putchar_unlocked@plt+0x54c>
   11218:	cmp	r5, r7
   1121c:	ldr	r3, [pc, #164]	; 112c8 <putchar_unlocked@plt+0x550>
   11220:	moveq	r3, r2
   11224:	mov	r2, r5
   11228:	mov	r1, r0
   1122c:	mov	r0, #1
   11230:	bl	10ce8 <__printf_chk@plt>
   11234:	b	110a0 <putchar_unlocked@plt+0x328>
   11238:	mov	r0, r9
   1123c:	bl	10b80 <strcmp@plt>
   11240:	add	r7, r7, #8
   11244:	cmp	r0, #0
   11248:	bne	11188 <putchar_unlocked@plt+0x410>
   1124c:	b	11198 <putchar_unlocked@plt+0x420>
   11250:	mov	r2, #3
   11254:	ldr	r1, [pc, #112]	; 112cc <putchar_unlocked@plt+0x554>
   11258:	bl	10d60 <strncmp@plt>
   1125c:	cmp	r0, #0
   11260:	beq	111e0 <putchar_unlocked@plt+0x468>
   11264:	mov	r2, #5
   11268:	ldr	r1, [pc, #96]	; 112d0 <putchar_unlocked@plt+0x558>
   1126c:	mov	r0, #0
   11270:	bl	10bec <dcgettext@plt>
   11274:	ldr	r1, [r6]
   11278:	bl	10b68 <fputs_unlocked@plt>
   1127c:	b	111e0 <putchar_unlocked@plt+0x468>
   11280:	andeq	r5, r2, ip, lsr r1
   11284:	andeq	r5, r2, r8, lsr #2
   11288:	andeq	r3, r1, ip, ror #30
   1128c:	muleq	r1, r3, pc	; <UNPREDICTABLE>
   11290:	andeq	r5, r2, ip, lsr #2
   11294:	andeq	r3, r1, r4, ror #30
   11298:	andeq	r3, r1, pc, lsr #31
   1129c:	andeq	r4, r1, r7, asr #32
   112a0:	andeq	r4, r1, r4, lsl #1
   112a4:	strheq	r4, [r1], -r1
   112a8:	andeq	r4, r1, r7, ror #1
   112ac:	andeq	r3, r1, r8, ror #29
   112b0:	andeq	r4, r1, r9, ror #2
   112b4:	andeq	r4, r1, r0, lsl #3
   112b8:	andeq	r4, r1, r8, lsr #3
   112bc:	andeq	r4, r1, r1, lsl #4
   112c0:	andeq	r4, r1, ip, lsl r2
   112c4:			; <UNDEFINED> instruction: 0x000142b2
   112c8:	andeq	r4, r1, r6, asr #32
   112cc:			; <UNDEFINED> instruction: 0x000141b6
   112d0:			; <UNDEFINED> instruction: 0x000141ba
   112d4:	ldr	r3, [pc, #4]	; 112e0 <putchar_unlocked@plt+0x568>
   112d8:	str	r0, [r3]
   112dc:	bx	lr
   112e0:	andeq	r5, r2, r4, lsr r1
   112e4:	ldr	r3, [pc, #4]	; 112f0 <putchar_unlocked@plt+0x578>
   112e8:	strb	r0, [r3, #4]
   112ec:	bx	lr
   112f0:	andeq	r5, r2, r4, lsr r1
   112f4:	ldr	r3, [pc, #192]	; 113bc <putchar_unlocked@plt+0x644>
   112f8:	push	{r0, r1, r4, r5, r6, lr}
   112fc:	ldr	r0, [r3]
   11300:	bl	13604 <putchar_unlocked@plt+0x288c>
   11304:	cmp	r0, #0
   11308:	beq	113a0 <putchar_unlocked@plt+0x628>
   1130c:	ldr	r3, [pc, #172]	; 113c0 <putchar_unlocked@plt+0x648>
   11310:	mov	r4, r3
   11314:	ldrb	r2, [r3, #4]
   11318:	cmp	r2, #0
   1131c:	beq	11330 <putchar_unlocked@plt+0x5b8>
   11320:	bl	10cc4 <__errno_location@plt>
   11324:	ldr	r3, [r0]
   11328:	cmp	r3, #32
   1132c:	beq	113a0 <putchar_unlocked@plt+0x628>
   11330:	mov	r2, #5
   11334:	ldr	r1, [pc, #136]	; 113c4 <putchar_unlocked@plt+0x64c>
   11338:	mov	r0, #0
   1133c:	bl	10bec <dcgettext@plt>
   11340:	ldr	r4, [r4]
   11344:	cmp	r4, #0
   11348:	mov	r5, r0
   1134c:	beq	11384 <putchar_unlocked@plt+0x60c>
   11350:	bl	10cc4 <__errno_location@plt>
   11354:	ldr	r6, [r0]
   11358:	mov	r0, r4
   1135c:	bl	12954 <putchar_unlocked@plt+0x1bdc>
   11360:	str	r5, [sp]
   11364:	ldr	r2, [pc, #92]	; 113c8 <putchar_unlocked@plt+0x650>
   11368:	mov	r1, r6
   1136c:	mov	r3, r0
   11370:	mov	r0, #0
   11374:	bl	10c58 <error@plt>
   11378:	ldr	r3, [pc, #76]	; 113cc <putchar_unlocked@plt+0x654>
   1137c:	ldr	r0, [r3]
   11380:	bl	10ba4 <_exit@plt>
   11384:	bl	10cc4 <__errno_location@plt>
   11388:	mov	r3, r5
   1138c:	ldr	r2, [pc, #60]	; 113d0 <putchar_unlocked@plt+0x658>
   11390:	ldr	r1, [r0]
   11394:	mov	r0, r4
   11398:	bl	10c58 <error@plt>
   1139c:	b	11378 <putchar_unlocked@plt+0x600>
   113a0:	ldr	r3, [pc, #44]	; 113d4 <putchar_unlocked@plt+0x65c>
   113a4:	ldr	r0, [r3]
   113a8:	bl	13604 <putchar_unlocked@plt+0x288c>
   113ac:	cmp	r0, #0
   113b0:	bne	11378 <putchar_unlocked@plt+0x600>
   113b4:	add	sp, sp, #8
   113b8:	pop	{r4, r5, r6, pc}
   113bc:	andeq	r5, r2, ip, lsr #2
   113c0:	andeq	r5, r2, r4, lsr r1
   113c4:	andeq	r4, r1, r6, lsl r3
   113c8:	andeq	r4, r1, r2, lsr #6
   113cc:	ldrdeq	r5, [r2], -r4
   113d0:	andeq	r4, r1, r6, lsr #6
   113d4:	andeq	r5, r2, r8, lsr #2
   113d8:	push	{r4, r5, r6, lr}
   113dc:	mov	r5, r0
   113e0:	ldrb	r4, [r0]
   113e4:	bl	13574 <putchar_unlocked@plt+0x27fc>
   113e8:	sub	r4, r4, #47	; 0x2f
   113ec:	clz	r4, r4
   113f0:	lsr	r4, r4, #5
   113f4:	sub	r0, r0, r5
   113f8:	cmp	r0, r4
   113fc:	bhi	11404 <putchar_unlocked@plt+0x68c>
   11400:	pop	{r4, r5, r6, pc}
   11404:	sub	r3, r0, #1
   11408:	ldrb	r2, [r5, r3]
   1140c:	cmp	r2, #47	; 0x2f
   11410:	popne	{r4, r5, r6, pc}
   11414:	mov	r0, r3
   11418:	b	113f8 <putchar_unlocked@plt+0x680>
   1141c:	push	{r4, r5, r6, lr}
   11420:	mov	r6, r0
   11424:	bl	113d8 <putchar_unlocked@plt+0x660>
   11428:	add	r3, r0, #1
   1142c:	mov	r4, r0
   11430:	cmp	r0, #0
   11434:	movne	r0, r3
   11438:	addeq	r0, r3, #1
   1143c:	bl	134d8 <putchar_unlocked@plt+0x2760>
   11440:	subs	r5, r0, #0
   11444:	beq	1146c <putchar_unlocked@plt+0x6f4>
   11448:	mov	r2, r4
   1144c:	mov	r1, r6
   11450:	bl	10bb0 <memcpy@plt>
   11454:	cmp	r4, #0
   11458:	moveq	r3, #46	; 0x2e
   1145c:	moveq	r4, #1
   11460:	strbeq	r3, [r5]
   11464:	mov	r3, #0
   11468:	strb	r3, [r5, r4]
   1146c:	mov	r0, r5
   11470:	pop	{r4, r5, r6, pc}
   11474:	push	{r4, r5, r6, lr}
   11478:	subs	r5, r0, #0
   1147c:	bne	11494 <putchar_unlocked@plt+0x71c>
   11480:	ldr	r3, [pc, #124]	; 11504 <putchar_unlocked@plt+0x78c>
   11484:	ldr	r0, [pc, #124]	; 11508 <putchar_unlocked@plt+0x790>
   11488:	ldr	r1, [r3]
   1148c:	bl	10d54 <fputs@plt>
   11490:	bl	10d6c <abort@plt>
   11494:	mov	r1, #47	; 0x2f
   11498:	bl	10d30 <strrchr@plt>
   1149c:	cmp	r0, #0
   114a0:	addne	r4, r0, #1
   114a4:	moveq	r4, r5
   114a8:	sub	r3, r4, r5
   114ac:	cmp	r3, #6
   114b0:	ble	114f0 <putchar_unlocked@plt+0x778>
   114b4:	mov	r2, #7
   114b8:	ldr	r1, [pc, #76]	; 1150c <putchar_unlocked@plt+0x794>
   114bc:	sub	r0, r4, #7
   114c0:	bl	10d60 <strncmp@plt>
   114c4:	cmp	r0, #0
   114c8:	bne	114f0 <putchar_unlocked@plt+0x778>
   114cc:	mov	r2, #3
   114d0:	ldr	r1, [pc, #56]	; 11510 <putchar_unlocked@plt+0x798>
   114d4:	mov	r0, r4
   114d8:	bl	10d60 <strncmp@plt>
   114dc:	cmp	r0, #0
   114e0:	movne	r5, r4
   114e4:	ldreq	r3, [pc, #40]	; 11514 <putchar_unlocked@plt+0x79c>
   114e8:	addeq	r5, r4, #3
   114ec:	streq	r5, [r3]
   114f0:	ldr	r3, [pc, #32]	; 11518 <putchar_unlocked@plt+0x7a0>
   114f4:	str	r5, [r3]
   114f8:	ldr	r3, [pc, #28]	; 1151c <putchar_unlocked@plt+0x7a4>
   114fc:	str	r5, [r3]
   11500:	pop	{r4, r5, r6, pc}
   11504:	andeq	r5, r2, r8, lsr #2
   11508:	andeq	r4, r1, r9, lsr #6
   1150c:	andeq	r4, r1, r1, ror #6
   11510:	andeq	r4, r1, r9, ror #6
   11514:	andeq	r5, r2, r8, lsl r1
   11518:	andeq	r5, r2, ip, lsr r1
   1151c:	andeq	r5, r2, ip, lsl r1
   11520:	push	{r4, r5, r6, lr}
   11524:	mov	r2, #48	; 0x30
   11528:	mov	r5, r1
   1152c:	mov	r1, #0
   11530:	mov	r4, r0
   11534:	bl	10cdc <memset@plt>
   11538:	cmp	r5, #10
   1153c:	bne	11544 <putchar_unlocked@plt+0x7cc>
   11540:	bl	10d6c <abort@plt>
   11544:	str	r5, [r4]
   11548:	mov	r0, r4
   1154c:	pop	{r4, r5, r6, pc}
   11550:	push	{r4, r5, r6, lr}
   11554:	mov	r4, r0
   11558:	mov	r5, r1
   1155c:	bl	13854 <putchar_unlocked@plt+0x2adc>
   11560:	ldrb	r3, [r0]
   11564:	bic	r3, r3, #32
   11568:	cmp	r3, #85	; 0x55
   1156c:	bne	115dc <putchar_unlocked@plt+0x864>
   11570:	ldrb	r3, [r0, #1]
   11574:	bic	r3, r3, #32
   11578:	cmp	r3, #84	; 0x54
   1157c:	bne	115b4 <putchar_unlocked@plt+0x83c>
   11580:	ldrb	r3, [r0, #2]
   11584:	bic	r3, r3, #32
   11588:	cmp	r3, #70	; 0x46
   1158c:	bne	115b4 <putchar_unlocked@plt+0x83c>
   11590:	ldrb	r3, [r0, #3]
   11594:	cmp	r3, #45	; 0x2d
   11598:	bne	115b4 <putchar_unlocked@plt+0x83c>
   1159c:	ldrb	r3, [r0, #4]
   115a0:	cmp	r3, #56	; 0x38
   115a4:	bne	115b4 <putchar_unlocked@plt+0x83c>
   115a8:	ldrb	r3, [r0, #5]
   115ac:	cmp	r3, #0
   115b0:	beq	115c8 <putchar_unlocked@plt+0x850>
   115b4:	ldr	r1, [pc, #144]	; 1164c <putchar_unlocked@plt+0x8d4>
   115b8:	ldr	r0, [pc, #144]	; 11650 <putchar_unlocked@plt+0x8d8>
   115bc:	cmp	r5, #9
   115c0:	movne	r0, r1
   115c4:	pop	{r4, r5, r6, pc}
   115c8:	ldrb	r3, [r4]
   115cc:	ldr	r1, [pc, #128]	; 11654 <putchar_unlocked@plt+0x8dc>
   115d0:	ldr	r0, [pc, #128]	; 11658 <putchar_unlocked@plt+0x8e0>
   115d4:	cmp	r3, #96	; 0x60
   115d8:	b	115c0 <putchar_unlocked@plt+0x848>
   115dc:	cmp	r3, #71	; 0x47
   115e0:	bne	115b4 <putchar_unlocked@plt+0x83c>
   115e4:	ldrb	r3, [r0, #1]
   115e8:	bic	r3, r3, #32
   115ec:	cmp	r3, #66	; 0x42
   115f0:	bne	115b4 <putchar_unlocked@plt+0x83c>
   115f4:	ldrb	r3, [r0, #2]
   115f8:	cmp	r3, #49	; 0x31
   115fc:	bne	115b4 <putchar_unlocked@plt+0x83c>
   11600:	ldrb	r3, [r0, #3]
   11604:	cmp	r3, #56	; 0x38
   11608:	bne	115b4 <putchar_unlocked@plt+0x83c>
   1160c:	ldrb	r3, [r0, #4]
   11610:	cmp	r3, #48	; 0x30
   11614:	bne	115b4 <putchar_unlocked@plt+0x83c>
   11618:	ldrb	r3, [r0, #5]
   1161c:	cmp	r3, #51	; 0x33
   11620:	bne	115b4 <putchar_unlocked@plt+0x83c>
   11624:	ldrb	r3, [r0, #6]
   11628:	cmp	r3, #48	; 0x30
   1162c:	bne	115b4 <putchar_unlocked@plt+0x83c>
   11630:	ldrb	r3, [r0, #7]
   11634:	cmp	r3, #0
   11638:	bne	115b4 <putchar_unlocked@plt+0x83c>
   1163c:	ldrb	r3, [r4]
   11640:	ldr	r1, [pc, #20]	; 1165c <putchar_unlocked@plt+0x8e4>
   11644:	ldr	r0, [pc, #20]	; 11660 <putchar_unlocked@plt+0x8e8>
   11648:	b	115d4 <putchar_unlocked@plt+0x85c>
   1164c:	ldrdeq	r4, [r1], -r5
   11650:	ldrdeq	r4, [r1], -r3
   11654:	andeq	r4, r1, r8, asr #7
   11658:	andeq	r4, r1, r4, asr #7
   1165c:	ldrdeq	r4, [r1], -r0
   11660:	andeq	r4, r1, ip, asr #7
   11664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11668:	sub	sp, sp, #108	; 0x6c
   1166c:	mov	r8, r0
   11670:	str	r3, [sp, #36]	; 0x24
   11674:	mov	r5, r1
   11678:	str	r2, [sp, #44]	; 0x2c
   1167c:	ldr	sl, [sp, #144]	; 0x90
   11680:	bl	10c28 <__ctype_get_mb_cur_max@plt>
   11684:	ldr	r3, [sp, #148]	; 0x94
   11688:	mov	r7, #0
   1168c:	str	r7, [sp, #48]	; 0x30
   11690:	lsr	r6, r3, #1
   11694:	and	r6, r6, #1
   11698:	mov	r3, #1
   1169c:	str	r3, [sp, #72]	; 0x48
   116a0:	str	r7, [sp, #24]
   116a4:	str	r7, [sp, #32]
   116a8:	str	r7, [sp, #40]	; 0x28
   116ac:	str	r7, [sp, #60]	; 0x3c
   116b0:	str	r0, [sp, #76]	; 0x4c
   116b4:	cmp	sl, #10
   116b8:	ldrls	pc, [pc, sl, lsl #2]
   116bc:	b	118f8 <putchar_unlocked@plt+0xb80>
   116c0:	andeq	r1, r1, ip, ror #13
   116c4:	andeq	r2, r1, r0, lsl #7
   116c8:	andeq	r1, r1, r4, asr #17
   116cc:	andeq	r1, r1, r0, lsl r9
   116d0:	andeq	r1, r1, r0, lsr #17
   116d4:	strdeq	r1, [r1], -r8
   116d8:	andeq	r2, r1, r0, ror #6
   116dc:	strdeq	r1, [r1], -ip
   116e0:	strdeq	r1, [r1], -r0
   116e4:	strdeq	r1, [r1], -r0
   116e8:	strdeq	r1, [r1], -r0
   116ec:	mov	r6, #0
   116f0:	mov	r4, #0
   116f4:	b	11724 <putchar_unlocked@plt+0x9ac>
   116f8:	cmp	r6, #0
   116fc:	bne	11920 <putchar_unlocked@plt+0xba8>
   11700:	cmp	r5, #0
   11704:	movne	r3, #34	; 0x22
   11708:	strbne	r3, [r8]
   1170c:	mov	r3, #1
   11710:	str	r3, [sp, #24]
   11714:	str	r3, [sp, #32]
   11718:	mov	r4, #1
   1171c:	ldr	r3, [pc, #3172]	; 12388 <putchar_unlocked@plt+0x1610>
   11720:	str	r3, [sp, #40]	; 0x28
   11724:	mov	r9, r5
   11728:	mov	r3, #0
   1172c:	str	r7, [sp, #68]	; 0x44
   11730:	str	r3, [sp, #28]
   11734:	ldr	r3, [sp, #36]	; 0x24
   11738:	cmn	r3, #1
   1173c:	bne	122cc <putchar_unlocked@plt+0x1554>
   11740:	ldr	r3, [sp, #44]	; 0x2c
   11744:	ldr	r2, [sp, #28]
   11748:	ldrb	r3, [r3, r2]
   1174c:	adds	r3, r3, #0
   11750:	movne	r3, #1
   11754:	str	r3, [sp, #52]	; 0x34
   11758:	ldr	r3, [sp, #52]	; 0x34
   1175c:	cmp	r3, #0
   11760:	bne	11948 <putchar_unlocked@plt+0xbd0>
   11764:	sub	r2, sl, #2
   11768:	clz	r2, r2
   1176c:	lsr	r2, r2, #5
   11770:	and	r3, r6, r2
   11774:	cmp	r4, #0
   11778:	movne	r3, #0
   1177c:	andeq	r3, r3, #1
   11780:	cmp	r3, #0
   11784:	bne	11b10 <putchar_unlocked@plt+0xd98>
   11788:	eor	r3, r6, #1
   1178c:	ands	r2, r2, r3
   11790:	beq	12304 <putchar_unlocked@plt+0x158c>
   11794:	ldr	r3, [sp, #68]	; 0x44
   11798:	cmp	r3, #0
   1179c:	beq	1233c <putchar_unlocked@plt+0x15c4>
   117a0:	ldr	r3, [sp, #72]	; 0x48
   117a4:	cmp	r3, #0
   117a8:	beq	122e0 <putchar_unlocked@plt+0x1568>
   117ac:	ldr	r3, [sp, #160]	; 0xa0
   117b0:	ldr	r2, [sp, #44]	; 0x2c
   117b4:	str	r3, [sp, #16]
   117b8:	ldr	r3, [sp, #156]	; 0x9c
   117bc:	ldr	r1, [sp, #60]	; 0x3c
   117c0:	str	r3, [sp, #12]
   117c4:	ldr	r3, [sp, #152]	; 0x98
   117c8:	str	r3, [sp, #8]
   117cc:	ldr	r3, [sp, #148]	; 0x94
   117d0:	str	r3, [sp, #4]
   117d4:	mov	r3, #5
   117d8:	str	r3, [sp]
   117dc:	ldr	r3, [sp, #36]	; 0x24
   117e0:	mov	r0, r8
   117e4:	bl	11664 <putchar_unlocked@plt+0x8ec>
   117e8:	mov	r4, r0
   117ec:	b	12330 <putchar_unlocked@plt+0x15b8>
   117f0:	cmp	sl, #10
   117f4:	beq	11850 <putchar_unlocked@plt+0xad8>
   117f8:	ldr	r4, [pc, #2956]	; 1238c <putchar_unlocked@plt+0x1614>
   117fc:	mov	r2, #5
   11800:	mov	r1, r4
   11804:	mov	r0, #0
   11808:	bl	10bec <dcgettext@plt>
   1180c:	cmp	r0, r4
   11810:	str	r0, [sp, #156]	; 0x9c
   11814:	bne	11824 <putchar_unlocked@plt+0xaac>
   11818:	mov	r1, sl
   1181c:	bl	11550 <putchar_unlocked@plt+0x7d8>
   11820:	str	r0, [sp, #156]	; 0x9c
   11824:	ldr	r4, [pc, #2916]	; 12390 <putchar_unlocked@plt+0x1618>
   11828:	mov	r2, #5
   1182c:	mov	r1, r4
   11830:	mov	r0, #0
   11834:	bl	10bec <dcgettext@plt>
   11838:	cmp	r0, r4
   1183c:	str	r0, [sp, #160]	; 0xa0
   11840:	bne	11850 <putchar_unlocked@plt+0xad8>
   11844:	mov	r1, sl
   11848:	bl	11550 <putchar_unlocked@plt+0x7d8>
   1184c:	str	r0, [sp, #160]	; 0xa0
   11850:	cmp	r6, #0
   11854:	moveq	r4, r6
   11858:	beq	11870 <putchar_unlocked@plt+0xaf8>
   1185c:	mov	r4, #0
   11860:	b	11880 <putchar_unlocked@plt+0xb08>
   11864:	cmp	r5, r4
   11868:	strbhi	r3, [r8, r4]
   1186c:	add	r4, r4, #1
   11870:	ldr	r3, [sp, #156]	; 0x9c
   11874:	ldrb	r3, [r3, r4]
   11878:	cmp	r3, #0
   1187c:	bne	11864 <putchar_unlocked@plt+0xaec>
   11880:	ldr	r0, [sp, #160]	; 0xa0
   11884:	bl	10cb8 <strlen@plt>
   11888:	ldr	r3, [sp, #160]	; 0xa0
   1188c:	str	r3, [sp, #40]	; 0x28
   11890:	mov	r3, #1
   11894:	str	r3, [sp, #24]
   11898:	str	r0, [sp, #32]
   1189c:	b	11724 <putchar_unlocked@plt+0x9ac>
   118a0:	mov	r3, #1
   118a4:	cmp	r6, #0
   118a8:	streq	r3, [sp, #24]
   118ac:	beq	118cc <putchar_unlocked@plt+0xb54>
   118b0:	str	r3, [sp, #32]
   118b4:	ldr	r3, [pc, #2772]	; 12390 <putchar_unlocked@plt+0x1618>
   118b8:	mov	r4, #0
   118bc:	str	r3, [sp, #40]	; 0x28
   118c0:	b	118f0 <putchar_unlocked@plt+0xb78>
   118c4:	cmp	r6, #0
   118c8:	bne	11938 <putchar_unlocked@plt+0xbc0>
   118cc:	cmp	r5, #0
   118d0:	movne	r3, #39	; 0x27
   118d4:	strbne	r3, [r8]
   118d8:	mov	r3, #1
   118dc:	str	r3, [sp, #32]
   118e0:	mov	r6, #0
   118e4:	ldr	r3, [pc, #2724]	; 12390 <putchar_unlocked@plt+0x1618>
   118e8:	mov	r4, #1
   118ec:	str	r3, [sp, #40]	; 0x28
   118f0:	mov	sl, #2
   118f4:	b	11724 <putchar_unlocked@plt+0x9ac>
   118f8:	bl	10d6c <abort@plt>
   118fc:	mov	r6, #0
   11900:	mov	r3, #1
   11904:	str	r3, [sp, #24]
   11908:	mov	r4, r6
   1190c:	b	11724 <putchar_unlocked@plt+0x9ac>
   11910:	mov	r6, #1
   11914:	str	r6, [sp, #24]
   11918:	str	r6, [sp, #32]
   1191c:	b	118b4 <putchar_unlocked@plt+0xb3c>
   11920:	mov	r3, #1
   11924:	str	r3, [sp, #32]
   11928:	ldr	r3, [pc, #2648]	; 12388 <putchar_unlocked@plt+0x1610>
   1192c:	str	r6, [sp, #24]
   11930:	str	r3, [sp, #40]	; 0x28
   11934:	b	116f0 <putchar_unlocked@plt+0x978>
   11938:	mov	r3, #1
   1193c:	str	r3, [sp, #32]
   11940:	ldr	r3, [pc, #2632]	; 12390 <putchar_unlocked@plt+0x1618>
   11944:	b	11930 <putchar_unlocked@plt+0xbb8>
   11948:	ldr	r3, [sp, #32]
   1194c:	ldr	fp, [sp, #24]
   11950:	cmp	sl, #2
   11954:	moveq	fp, #0
   11958:	andne	fp, fp, #1
   1195c:	adds	r5, r3, #0
   11960:	movne	r5, #1
   11964:	ands	r3, r5, fp
   11968:	str	r3, [sp, #64]	; 0x40
   1196c:	beq	11a3c <putchar_unlocked@plt+0xcc4>
   11970:	ldr	r2, [sp, #32]
   11974:	ldr	r3, [sp, #28]
   11978:	add	r7, r3, r2
   1197c:	mov	r3, r2
   11980:	ldr	r2, [sp, #36]	; 0x24
   11984:	cmp	r3, #1
   11988:	movls	r3, #0
   1198c:	movhi	r3, #1
   11990:	cmn	r2, #1
   11994:	movne	r3, #0
   11998:	cmp	r3, #0
   1199c:	beq	119ac <putchar_unlocked@plt+0xc34>
   119a0:	ldr	r0, [sp, #44]	; 0x2c
   119a4:	bl	10cb8 <strlen@plt>
   119a8:	str	r0, [sp, #36]	; 0x24
   119ac:	ldr	r3, [sp, #36]	; 0x24
   119b0:	cmp	r3, r7
   119b4:	bcc	11a34 <putchar_unlocked@plt+0xcbc>
   119b8:	ldr	r3, [sp, #44]	; 0x2c
   119bc:	ldr	r0, [sp, #28]
   119c0:	ldr	r2, [sp, #32]
   119c4:	ldr	r1, [sp, #40]	; 0x28
   119c8:	add	r0, r3, r0
   119cc:	bl	10bd4 <memcmp@plt>
   119d0:	cmp	r0, #0
   119d4:	bne	11a34 <putchar_unlocked@plt+0xcbc>
   119d8:	cmp	r6, #0
   119dc:	beq	11a3c <putchar_unlocked@plt+0xcc4>
   119e0:	str	r6, [sp, #24]
   119e4:	ldr	r3, [sp, #24]
   119e8:	ldr	r2, [sp, #44]	; 0x2c
   119ec:	cmp	sl, #2
   119f0:	movne	r3, #0
   119f4:	andeq	r3, r3, #1
   119f8:	cmp	r3, #0
   119fc:	ldr	r3, [sp, #160]	; 0xa0
   11a00:	movne	sl, #4
   11a04:	str	r3, [sp, #16]
   11a08:	ldr	r3, [sp, #156]	; 0x9c
   11a0c:	str	sl, [sp]
   11a10:	str	r3, [sp, #12]
   11a14:	mov	r3, #0
   11a18:	str	r3, [sp, #8]
   11a1c:	ldr	r3, [sp, #148]	; 0x94
   11a20:	mov	r1, r9
   11a24:	bic	r3, r3, #2
   11a28:	str	r3, [sp, #4]
   11a2c:	ldr	r3, [sp, #36]	; 0x24
   11a30:	b	117e0 <putchar_unlocked@plt+0xa68>
   11a34:	mov	r3, #0
   11a38:	str	r3, [sp, #64]	; 0x40
   11a3c:	ldr	r2, [sp, #28]
   11a40:	ldr	r3, [sp, #44]	; 0x2c
   11a44:	add	r3, r3, r2
   11a48:	str	r3, [sp, #80]	; 0x50
   11a4c:	ldr	r3, [sp, #44]	; 0x2c
   11a50:	ldrb	r7, [r3, r2]
   11a54:	cmp	r7, #58	; 0x3a
   11a58:	bhi	11bc0 <putchar_unlocked@plt+0xe48>
   11a5c:	cmp	r7, #43	; 0x2b
   11a60:	bcs	11c14 <putchar_unlocked@plt+0xe9c>
   11a64:	cmp	r7, #32
   11a68:	beq	11c6c <putchar_unlocked@plt+0xef4>
   11a6c:	bhi	11b18 <putchar_unlocked@plt+0xda0>
   11a70:	cmp	r7, #9
   11a74:	beq	11f20 <putchar_unlocked@plt+0x11a8>
   11a78:	bhi	11adc <putchar_unlocked@plt+0xd64>
   11a7c:	cmp	r7, #7
   11a80:	beq	11fcc <putchar_unlocked@plt+0x1254>
   11a84:	bhi	11c88 <putchar_unlocked@plt+0xf10>
   11a88:	cmp	r7, #0
   11a8c:	beq	11ca4 <putchar_unlocked@plt+0xf2c>
   11a90:	ldr	r3, [sp, #76]	; 0x4c
   11a94:	cmp	r3, #1
   11a98:	bne	12010 <putchar_unlocked@plt+0x1298>
   11a9c:	bl	10ca0 <__ctype_b_loc@plt>
   11aa0:	sxth	r3, r7
   11aa4:	lsl	r3, r3, #1
   11aa8:	ldr	r2, [r0]
   11aac:	ldrh	r5, [r2, r3]
   11ab0:	ldr	r3, [sp, #76]	; 0x4c
   11ab4:	str	r3, [sp, #56]	; 0x38
   11ab8:	lsr	r5, r5, #14
   11abc:	and	r5, r5, #1
   11ac0:	ldr	r3, [sp, #24]
   11ac4:	eor	fp, r5, #1
   11ac8:	and	fp, fp, r3
   11acc:	ands	fp, fp, #255	; 0xff
   11ad0:	beq	11e58 <putchar_unlocked@plt+0x10e0>
   11ad4:	mov	r5, #0
   11ad8:	b	120bc <putchar_unlocked@plt+0x1344>
   11adc:	cmp	r7, #11
   11ae0:	beq	11f28 <putchar_unlocked@plt+0x11b0>
   11ae4:	bcc	11fc4 <putchar_unlocked@plt+0x124c>
   11ae8:	cmp	r7, #12
   11aec:	beq	11fd4 <putchar_unlocked@plt+0x125c>
   11af0:	cmp	r7, #13
   11af4:	moveq	r3, #114	; 0x72
   11af8:	bne	11a90 <putchar_unlocked@plt+0xd18>
   11afc:	cmp	sl, #2
   11b00:	movne	r2, #0
   11b04:	andeq	r2, r6, #1
   11b08:	cmp	r2, #0
   11b0c:	beq	11c8c <putchar_unlocked@plt+0xf14>
   11b10:	mov	sl, #2
   11b14:	b	119e4 <putchar_unlocked@plt+0xc6c>
   11b18:	cmp	r7, #37	; 0x25
   11b1c:	beq	11c14 <putchar_unlocked@plt+0xe9c>
   11b20:	bhi	11b34 <putchar_unlocked@plt+0xdbc>
   11b24:	cmp	r7, #35	; 0x23
   11b28:	beq	11c60 <putchar_unlocked@plt+0xee8>
   11b2c:	mov	r5, #0
   11b30:	b	11c70 <putchar_unlocked@plt+0xef8>
   11b34:	cmp	r7, #39	; 0x27
   11b38:	bne	11b2c <putchar_unlocked@plt+0xdb4>
   11b3c:	cmp	sl, #2
   11b40:	ldrne	r5, [sp, #52]	; 0x34
   11b44:	movne	r3, r5
   11b48:	strne	r3, [sp, #68]	; 0x44
   11b4c:	bne	11c18 <putchar_unlocked@plt+0xea0>
   11b50:	cmp	r6, #0
   11b54:	bne	119e4 <putchar_unlocked@plt+0xc6c>
   11b58:	ldr	r2, [sp, #60]	; 0x3c
   11b5c:	adds	r3, r9, #0
   11b60:	movne	r3, #1
   11b64:	cmp	r2, #0
   11b68:	movne	r3, #0
   11b6c:	cmp	r3, #0
   11b70:	strne	r9, [sp, #60]	; 0x3c
   11b74:	movne	r9, #0
   11b78:	bne	11b88 <putchar_unlocked@plt+0xe10>
   11b7c:	cmp	r9, r4
   11b80:	movhi	r3, #39	; 0x27
   11b84:	strbhi	r3, [r8, r4]
   11b88:	add	r3, r4, #1
   11b8c:	cmp	r3, r9
   11b90:	movcc	r2, #92	; 0x5c
   11b94:	strbcc	r2, [r8, r3]
   11b98:	add	r3, r4, #2
   11b9c:	cmp	r3, r9
   11ba0:	ldr	r5, [sp, #52]	; 0x34
   11ba4:	movcc	r2, #39	; 0x27
   11ba8:	strbcc	r2, [r8, r3]
   11bac:	add	r4, r4, #3
   11bb0:	mov	fp, r6
   11bb4:	str	r5, [sp, #68]	; 0x44
   11bb8:	str	r6, [sp, #48]	; 0x30
   11bbc:	b	11e58 <putchar_unlocked@plt+0x10e0>
   11bc0:	cmp	r7, #94	; 0x5e
   11bc4:	beq	11b2c <putchar_unlocked@plt+0xdb4>
   11bc8:	bhi	11c20 <putchar_unlocked@plt+0xea8>
   11bcc:	cmp	r7, #90	; 0x5a
   11bd0:	bhi	11c08 <putchar_unlocked@plt+0xe90>
   11bd4:	cmp	r7, #65	; 0x41
   11bd8:	bcs	11c14 <putchar_unlocked@plt+0xe9c>
   11bdc:	cmp	r7, #62	; 0x3e
   11be0:	bls	11b2c <putchar_unlocked@plt+0xdb4>
   11be4:	cmp	r7, #63	; 0x3f
   11be8:	bne	11a90 <putchar_unlocked@plt+0xd18>
   11bec:	cmp	sl, #2
   11bf0:	beq	11d94 <putchar_unlocked@plt+0x101c>
   11bf4:	cmp	sl, #5
   11bf8:	beq	11da4 <putchar_unlocked@plt+0x102c>
   11bfc:	mov	fp, #0
   11c00:	mov	r5, fp
   11c04:	b	11e58 <putchar_unlocked@plt+0x10e0>
   11c08:	cmp	r7, #92	; 0x5c
   11c0c:	beq	11f30 <putchar_unlocked@plt+0x11b8>
   11c10:	bls	11b2c <putchar_unlocked@plt+0xdb4>
   11c14:	ldr	r5, [sp, #52]	; 0x34
   11c18:	mov	fp, #0
   11c1c:	b	11e58 <putchar_unlocked@plt+0x10e0>
   11c20:	cmp	r7, #122	; 0x7a
   11c24:	bhi	11c44 <putchar_unlocked@plt+0xecc>
   11c28:	cmp	r7, #97	; 0x61
   11c2c:	bcs	11c14 <putchar_unlocked@plt+0xe9c>
   11c30:	cmp	r7, #95	; 0x5f
   11c34:	beq	11c14 <putchar_unlocked@plt+0xe9c>
   11c38:	cmp	r7, #96	; 0x60
   11c3c:	bne	11a90 <putchar_unlocked@plt+0xd18>
   11c40:	b	11b2c <putchar_unlocked@plt+0xdb4>
   11c44:	cmp	r7, #124	; 0x7c
   11c48:	beq	11b2c <putchar_unlocked@plt+0xdb4>
   11c4c:	bcc	11fdc <putchar_unlocked@plt+0x1264>
   11c50:	cmp	r7, #125	; 0x7d
   11c54:	beq	11fdc <putchar_unlocked@plt+0x1264>
   11c58:	cmp	r7, #126	; 0x7e
   11c5c:	bne	11a90 <putchar_unlocked@plt+0xd18>
   11c60:	ldr	r3, [sp, #28]
   11c64:	cmp	r3, #0
   11c68:	bne	11d9c <putchar_unlocked@plt+0x1024>
   11c6c:	ldr	r5, [sp, #52]	; 0x34
   11c70:	cmp	sl, #2
   11c74:	movne	fp, #0
   11c78:	andeq	fp, r6, #1
   11c7c:	cmp	fp, #0
   11c80:	beq	11e58 <putchar_unlocked@plt+0x10e0>
   11c84:	b	11b10 <putchar_unlocked@plt+0xd98>
   11c88:	mov	r3, #98	; 0x62
   11c8c:	ldr	r2, [sp, #24]
   11c90:	cmp	r2, #0
   11c94:	beq	11d9c <putchar_unlocked@plt+0x1024>
   11c98:	mov	r7, r3
   11c9c:	mov	r5, #0
   11ca0:	b	11eb0 <putchar_unlocked@plt+0x1138>
   11ca4:	ldr	r3, [sp, #24]
   11ca8:	cmp	r3, #0
   11cac:	beq	11d78 <putchar_unlocked@plt+0x1000>
   11cb0:	cmp	r6, #0
   11cb4:	bne	119e0 <putchar_unlocked@plt+0xc68>
   11cb8:	ldr	r3, [sp, #48]	; 0x30
   11cbc:	eor	r2, r3, #1
   11cc0:	cmp	sl, #2
   11cc4:	movne	r2, #0
   11cc8:	andeq	r2, r2, #1
   11ccc:	cmp	r2, #0
   11cd0:	moveq	r3, r4
   11cd4:	beq	11d0c <putchar_unlocked@plt+0xf94>
   11cd8:	cmp	r9, r4
   11cdc:	movhi	r3, #39	; 0x27
   11ce0:	strbhi	r3, [r8, r4]
   11ce4:	add	r3, r4, #1
   11ce8:	cmp	r9, r3
   11cec:	movhi	r1, #36	; 0x24
   11cf0:	strbhi	r1, [r8, r3]
   11cf4:	add	r3, r4, #2
   11cf8:	cmp	r9, r3
   11cfc:	movhi	r1, #39	; 0x27
   11d00:	strbhi	r1, [r8, r3]
   11d04:	add	r3, r4, #3
   11d08:	str	r2, [sp, #48]	; 0x30
   11d0c:	cmp	r9, r3
   11d10:	movhi	r2, #92	; 0x5c
   11d14:	strbhi	r2, [r8, r3]
   11d18:	cmp	fp, #0
   11d1c:	add	r4, r3, #1
   11d20:	beq	122b0 <putchar_unlocked@plt+0x1538>
   11d24:	ldr	r2, [sp, #28]
   11d28:	ldr	r1, [sp, #36]	; 0x24
   11d2c:	add	r2, r2, #1
   11d30:	cmp	r1, r2
   11d34:	bls	11d70 <putchar_unlocked@plt+0xff8>
   11d38:	ldr	r1, [sp, #44]	; 0x2c
   11d3c:	mov	r7, #48	; 0x30
   11d40:	ldrb	r2, [r1, r2]
   11d44:	sub	r2, r2, #48	; 0x30
   11d48:	cmp	r2, #9
   11d4c:	movhi	r5, r6
   11d50:	bhi	11e58 <putchar_unlocked@plt+0x10e0>
   11d54:	cmp	r9, r4
   11d58:	add	r2, r3, #2
   11d5c:	strbhi	r7, [r8, r4]
   11d60:	cmp	r9, r2
   11d64:	add	r4, r3, #3
   11d68:	movhi	r1, #48	; 0x30
   11d6c:	strbhi	r1, [r8, r2]
   11d70:	mov	r5, r6
   11d74:	b	122b8 <putchar_unlocked@plt+0x1540>
   11d78:	ldr	r3, [sp, #148]	; 0x94
   11d7c:	tst	r3, #1
   11d80:	ldreq	r5, [sp, #24]
   11d84:	beq	122c4 <putchar_unlocked@plt+0x154c>
   11d88:	ldr	r3, [sp, #28]
   11d8c:	add	r3, r3, #1
   11d90:	b	11730 <putchar_unlocked@plt+0x9b8>
   11d94:	cmp	r6, #0
   11d98:	bne	119e4 <putchar_unlocked@plt+0xc6c>
   11d9c:	mov	r5, #0
   11da0:	b	11c18 <putchar_unlocked@plt+0xea0>
   11da4:	ldr	r3, [sp, #148]	; 0x94
   11da8:	tst	r3, #4
   11dac:	beq	11d9c <putchar_unlocked@plt+0x1024>
   11db0:	ldr	r3, [sp, #28]
   11db4:	add	r2, r3, #2
   11db8:	ldr	r3, [sp, #36]	; 0x24
   11dbc:	cmp	r3, r2
   11dc0:	bls	11d9c <putchar_unlocked@plt+0x1024>
   11dc4:	ldr	r3, [sp, #44]	; 0x2c
   11dc8:	ldr	r1, [sp, #28]
   11dcc:	add	r3, r3, r1
   11dd0:	ldrb	r0, [r3, #1]
   11dd4:	cmp	r0, #63	; 0x3f
   11dd8:	bne	11d9c <putchar_unlocked@plt+0x1024>
   11ddc:	ldr	r3, [sp, #44]	; 0x2c
   11de0:	ldrb	r1, [r3, r2]
   11de4:	sub	r3, r1, #33	; 0x21
   11de8:	uxtb	r3, r3
   11dec:	cmp	r3, #29
   11df0:	bhi	122c0 <putchar_unlocked@plt+0x1548>
   11df4:	mov	ip, #1
   11df8:	ldr	r5, [pc, #1428]	; 12394 <putchar_unlocked@plt+0x161c>
   11dfc:	ands	r5, r5, ip, lsl r3
   11e00:	beq	11c18 <putchar_unlocked@plt+0xea0>
   11e04:	cmp	r6, #0
   11e08:	bne	119e4 <putchar_unlocked@plt+0xc6c>
   11e0c:	add	r3, r4, #1
   11e10:	cmp	r9, r4
   11e14:	strbhi	r0, [r8, r4]
   11e18:	cmp	r9, r3
   11e1c:	movhi	r0, #34	; 0x22
   11e20:	strbhi	r0, [r8, r3]
   11e24:	add	r3, r4, #2
   11e28:	cmp	r9, r3
   11e2c:	movhi	r0, #34	; 0x22
   11e30:	strbhi	r0, [r8, r3]
   11e34:	add	r3, r4, #3
   11e38:	cmp	r9, r3
   11e3c:	add	r4, r4, #4
   11e40:	mov	r5, r6
   11e44:	mov	fp, r6
   11e48:	mov	r7, r1
   11e4c:	movhi	r0, #63	; 0x3f
   11e50:	strbhi	r0, [r8, r3]
   11e54:	str	r2, [sp, #28]
   11e58:	ldr	r3, [sp, #24]
   11e5c:	eor	r3, r3, #1
   11e60:	cmp	sl, #2
   11e64:	orreq	r3, r3, #1
   11e68:	eor	r3, r3, #1
   11e6c:	orr	r3, r6, r3
   11e70:	tst	r3, #255	; 0xff
   11e74:	beq	11ea4 <putchar_unlocked@plt+0x112c>
   11e78:	ldr	r3, [sp, #152]	; 0x98
   11e7c:	cmp	r3, #0
   11e80:	beq	11ea4 <putchar_unlocked@plt+0x112c>
   11e84:	lsr	r2, r7, #5
   11e88:	ldr	r1, [sp, #152]	; 0x98
   11e8c:	uxtb	r2, r2
   11e90:	and	r3, r7, #31
   11e94:	ldr	r2, [r1, r2, lsl #2]
   11e98:	lsr	r3, r2, r3
   11e9c:	tst	r3, #1
   11ea0:	bne	11eb0 <putchar_unlocked@plt+0x1138>
   11ea4:	ldr	r3, [sp, #64]	; 0x40
   11ea8:	cmp	r3, #0
   11eac:	beq	11f48 <putchar_unlocked@plt+0x11d0>
   11eb0:	cmp	r6, #0
   11eb4:	bne	119e4 <putchar_unlocked@plt+0xc6c>
   11eb8:	ldr	r3, [sp, #48]	; 0x30
   11ebc:	eor	r3, r3, #1
   11ec0:	cmp	sl, #2
   11ec4:	movne	r3, #0
   11ec8:	andeq	r3, r3, #1
   11ecc:	cmp	r3, #0
   11ed0:	beq	11f08 <putchar_unlocked@plt+0x1190>
   11ed4:	cmp	r9, r4
   11ed8:	movhi	r2, #39	; 0x27
   11edc:	strbhi	r2, [r8, r4]
   11ee0:	add	r2, r4, #1
   11ee4:	cmp	r9, r2
   11ee8:	movhi	r1, #36	; 0x24
   11eec:	strbhi	r1, [r8, r2]
   11ef0:	add	r2, r4, #2
   11ef4:	cmp	r9, r2
   11ef8:	add	r4, r4, #3
   11efc:	movhi	r1, #39	; 0x27
   11f00:	strbhi	r1, [r8, r2]
   11f04:	str	r3, [sp, #48]	; 0x30
   11f08:	cmp	r9, r4
   11f0c:	movhi	r3, #92	; 0x5c
   11f10:	strbhi	r3, [r8, r4]
   11f14:	ldr	fp, [sp, #52]	; 0x34
   11f18:	add	r4, r4, #1
   11f1c:	b	11f48 <putchar_unlocked@plt+0x11d0>
   11f20:	mov	r3, #116	; 0x74
   11f24:	b	11afc <putchar_unlocked@plt+0xd84>
   11f28:	mov	r3, #118	; 0x76
   11f2c:	b	11c8c <putchar_unlocked@plt+0xf14>
   11f30:	cmp	sl, #2
   11f34:	bne	11fa4 <putchar_unlocked@plt+0x122c>
   11f38:	cmp	r6, #0
   11f3c:	bne	119e4 <putchar_unlocked@plt+0xc6c>
   11f40:	mov	r5, r6
   11f44:	mov	fp, r6
   11f48:	ldr	r3, [sp, #48]	; 0x30
   11f4c:	eor	fp, fp, #1
   11f50:	and	fp, fp, r3
   11f54:	tst	fp, #255	; 0xff
   11f58:	beq	11f84 <putchar_unlocked@plt+0x120c>
   11f5c:	cmp	r9, r4
   11f60:	movhi	r3, #39	; 0x27
   11f64:	strbhi	r3, [r8, r4]
   11f68:	add	r3, r4, #1
   11f6c:	cmp	r9, r3
   11f70:	movhi	r2, #39	; 0x27
   11f74:	add	r4, r4, #2
   11f78:	strbhi	r2, [r8, r3]
   11f7c:	mov	r3, #0
   11f80:	str	r3, [sp, #48]	; 0x30
   11f84:	cmp	r9, r4
   11f88:	strbhi	r7, [r8, r4]
   11f8c:	ldr	r3, [sp, #72]	; 0x48
   11f90:	cmp	r5, #0
   11f94:	moveq	r3, #0
   11f98:	add	r4, r4, #1
   11f9c:	str	r3, [sp, #72]	; 0x48
   11fa0:	b	11d88 <putchar_unlocked@plt+0x1010>
   11fa4:	ldr	r3, [sp, #24]
   11fa8:	and	r3, r3, r6
   11fac:	tst	r5, r3
   11fb0:	moveq	r3, r7
   11fb4:	beq	11afc <putchar_unlocked@plt+0xd84>
   11fb8:	mov	fp, #0
   11fbc:	mov	r5, fp
   11fc0:	b	11f48 <putchar_unlocked@plt+0x11d0>
   11fc4:	mov	r3, #110	; 0x6e
   11fc8:	b	11afc <putchar_unlocked@plt+0xd84>
   11fcc:	mov	r3, #97	; 0x61
   11fd0:	b	11c8c <putchar_unlocked@plt+0xf14>
   11fd4:	mov	r3, #102	; 0x66
   11fd8:	b	11c8c <putchar_unlocked@plt+0xf14>
   11fdc:	ldr	r3, [sp, #36]	; 0x24
   11fe0:	cmn	r3, #1
   11fe4:	bne	12004 <putchar_unlocked@plt+0x128c>
   11fe8:	ldr	r3, [sp, #44]	; 0x2c
   11fec:	ldrb	r3, [r3, #1]
   11ff0:	adds	r3, r3, #0
   11ff4:	movne	r3, #1
   11ff8:	cmp	r3, #0
   11ffc:	bne	11d9c <putchar_unlocked@plt+0x1024>
   12000:	b	11c60 <putchar_unlocked@plt+0xee8>
   12004:	ldr	r3, [sp, #36]	; 0x24
   12008:	subs	r3, r3, #1
   1200c:	b	11ff4 <putchar_unlocked@plt+0x127c>
   12010:	mov	r3, #0
   12014:	str	r3, [sp, #96]	; 0x60
   12018:	str	r3, [sp, #100]	; 0x64
   1201c:	ldr	r3, [sp, #36]	; 0x24
   12020:	cmn	r3, #1
   12024:	bne	12034 <putchar_unlocked@plt+0x12bc>
   12028:	ldr	r0, [sp, #44]	; 0x2c
   1202c:	bl	10cb8 <strlen@plt>
   12030:	str	r0, [sp, #36]	; 0x24
   12034:	ldr	r5, [sp, #52]	; 0x34
   12038:	mov	r3, #0
   1203c:	str	r3, [sp, #56]	; 0x38
   12040:	ldr	r3, [sp, #28]
   12044:	ldr	r2, [sp, #56]	; 0x38
   12048:	ldr	r1, [sp, #36]	; 0x24
   1204c:	add	r2, r3, r2
   12050:	ldr	r3, [sp, #44]	; 0x2c
   12054:	add	r0, sp, #92	; 0x5c
   12058:	add	fp, r3, r2
   1205c:	sub	r2, r1, r2
   12060:	add	r3, sp, #96	; 0x60
   12064:	mov	r1, fp
   12068:	bl	13888 <putchar_unlocked@plt+0x2b10>
   1206c:	subs	r2, r0, #0
   12070:	beq	120b0 <putchar_unlocked@plt+0x1338>
   12074:	cmn	r2, #1
   12078:	beq	12288 <putchar_unlocked@plt+0x1510>
   1207c:	cmn	r2, #2
   12080:	bne	121f8 <putchar_unlocked@plt+0x1480>
   12084:	ldr	r2, [sp, #56]	; 0x38
   12088:	ldr	r3, [sp, #28]
   1208c:	add	r3, r3, r2
   12090:	ldr	r2, [sp, #36]	; 0x24
   12094:	cmp	r2, r3
   12098:	bls	12288 <putchar_unlocked@plt+0x1510>
   1209c:	ldr	r3, [sp, #80]	; 0x50
   120a0:	ldr	r2, [sp, #56]	; 0x38
   120a4:	ldrb	r5, [r3, r2]
   120a8:	cmp	r5, #0
   120ac:	bne	121e8 <putchar_unlocked@plt+0x1470>
   120b0:	ldr	r3, [sp, #56]	; 0x38
   120b4:	cmp	r3, #1
   120b8:	bls	11ac0 <putchar_unlocked@plt+0xd48>
   120bc:	ldr	r2, [sp, #56]	; 0x38
   120c0:	ldr	r3, [sp, #28]
   120c4:	mov	fp, #0
   120c8:	add	r3, r3, r2
   120cc:	ldr	r2, [sp, #24]
   120d0:	str	r3, [sp, #52]	; 0x34
   120d4:	eor	r3, r5, #1
   120d8:	and	r3, r3, r2
   120dc:	mov	ip, #92	; 0x5c
   120e0:	uxtb	r3, r3
   120e4:	mov	r2, #39	; 0x27
   120e8:	cmp	r3, #0
   120ec:	beq	12290 <putchar_unlocked@plt+0x1518>
   120f0:	cmp	r6, #0
   120f4:	bne	119e0 <putchar_unlocked@plt+0xc68>
   120f8:	ldr	r1, [sp, #48]	; 0x30
   120fc:	eor	r1, r1, #1
   12100:	cmp	sl, #2
   12104:	movne	r1, #0
   12108:	andeq	r1, r1, #1
   1210c:	cmp	r1, #0
   12110:	beq	12140 <putchar_unlocked@plt+0x13c8>
   12114:	add	r0, r4, #1
   12118:	cmp	r9, r4
   1211c:	strbhi	r2, [r8, r4]
   12120:	cmp	r9, r0
   12124:	movhi	lr, #36	; 0x24
   12128:	strbhi	lr, [r8, r0]
   1212c:	add	r0, r4, #2
   12130:	add	r4, r4, #3
   12134:	cmp	r9, r0
   12138:	strbhi	r2, [r8, r0]
   1213c:	str	r1, [sp, #48]	; 0x30
   12140:	add	r0, r4, #1
   12144:	cmp	r9, r4
   12148:	strbhi	ip, [r8, r4]
   1214c:	cmp	r9, r0
   12150:	lsrhi	r1, r7, #6
   12154:	addhi	r1, r1, #48	; 0x30
   12158:	strbhi	r1, [r8, r0]
   1215c:	add	r0, r4, #2
   12160:	cmp	r9, r0
   12164:	lsrhi	r1, r7, #3
   12168:	and	r7, r7, #7
   1216c:	andhi	r1, r1, #7
   12170:	add	r4, r4, #3
   12174:	add	r7, r7, #48	; 0x30
   12178:	mov	fp, r3
   1217c:	addhi	r1, r1, #48	; 0x30
   12180:	strbhi	r1, [r8, r0]
   12184:	ldr	r1, [sp, #28]
   12188:	ldr	r0, [sp, #52]	; 0x34
   1218c:	add	r1, r1, #1
   12190:	cmp	r0, r1
   12194:	bls	11f48 <putchar_unlocked@plt+0x11d0>
   12198:	ldr	lr, [sp, #48]	; 0x30
   1219c:	eor	r0, fp, #1
   121a0:	and	r0, r0, lr
   121a4:	tst	r0, #255	; 0xff
   121a8:	beq	121cc <putchar_unlocked@plt+0x1454>
   121ac:	add	r0, r4, #1
   121b0:	cmp	r9, r4
   121b4:	strbhi	r2, [r8, r4]
   121b8:	cmp	r9, r0
   121bc:	add	r4, r4, #2
   121c0:	strbhi	r2, [r8, r0]
   121c4:	mov	r0, #0
   121c8:	str	r0, [sp, #48]	; 0x30
   121cc:	ldr	r0, [sp, #44]	; 0x2c
   121d0:	cmp	r9, r4
   121d4:	strbhi	r7, [r8, r4]
   121d8:	str	r1, [sp, #28]
   121dc:	add	r4, r4, #1
   121e0:	ldrb	r7, [r0, r1]
   121e4:	b	120e8 <putchar_unlocked@plt+0x1370>
   121e8:	ldr	r3, [sp, #56]	; 0x38
   121ec:	add	r3, r3, #1
   121f0:	str	r3, [sp, #56]	; 0x38
   121f4:	b	12084 <putchar_unlocked@plt+0x130c>
   121f8:	cmp	sl, #2
   121fc:	movne	r3, #0
   12200:	andeq	r3, r6, #1
   12204:	cmp	r3, #0
   12208:	movne	r1, #1
   1220c:	bne	12268 <putchar_unlocked@plt+0x14f0>
   12210:	ldr	r0, [sp, #92]	; 0x5c
   12214:	str	r2, [sp, #84]	; 0x54
   12218:	bl	10c10 <iswprint@plt>
   1221c:	ldr	r3, [sp, #56]	; 0x38
   12220:	ldr	r2, [sp, #84]	; 0x54
   12224:	add	r3, r3, r2
   12228:	str	r3, [sp, #56]	; 0x38
   1222c:	cmp	r0, #0
   12230:	add	r0, sp, #96	; 0x60
   12234:	moveq	r5, #0
   12238:	bl	10bbc <mbsinit@plt>
   1223c:	cmp	r0, #0
   12240:	beq	12040 <putchar_unlocked@plt+0x12c8>
   12244:	b	120b0 <putchar_unlocked@plt+0x1338>
   12248:	ldrb	r3, [fp, r1]
   1224c:	cmp	r3, #94	; 0x5e
   12250:	beq	11b10 <putchar_unlocked@plt+0xd98>
   12254:	bhi	12274 <putchar_unlocked@plt+0x14fc>
   12258:	sub	r3, r3, #91	; 0x5b
   1225c:	cmp	r3, #1
   12260:	bls	11b10 <putchar_unlocked@plt+0xd98>
   12264:	add	r1, r1, #1
   12268:	cmp	r1, r2
   1226c:	bne	12248 <putchar_unlocked@plt+0x14d0>
   12270:	b	12210 <putchar_unlocked@plt+0x1498>
   12274:	cmp	r3, #96	; 0x60
   12278:	beq	11b10 <putchar_unlocked@plt+0xd98>
   1227c:	cmp	r3, #124	; 0x7c
   12280:	bne	12264 <putchar_unlocked@plt+0x14ec>
   12284:	b	11b10 <putchar_unlocked@plt+0xd98>
   12288:	mov	r5, #0
   1228c:	b	120b0 <putchar_unlocked@plt+0x1338>
   12290:	ldr	r1, [sp, #64]	; 0x40
   12294:	cmp	r1, #0
   12298:	beq	12184 <putchar_unlocked@plt+0x140c>
   1229c:	cmp	r9, r4
   122a0:	strbhi	ip, [r8, r4]
   122a4:	str	r3, [sp, #64]	; 0x40
   122a8:	add	r4, r4, #1
   122ac:	b	12184 <putchar_unlocked@plt+0x140c>
   122b0:	mov	r5, fp
   122b4:	ldr	fp, [sp, #24]
   122b8:	mov	r7, #48	; 0x30
   122bc:	b	11e58 <putchar_unlocked@plt+0x10e0>
   122c0:	mov	r5, #0
   122c4:	mov	fp, r5
   122c8:	b	11e58 <putchar_unlocked@plt+0x10e0>
   122cc:	ldr	r3, [sp, #36]	; 0x24
   122d0:	ldr	r2, [sp, #28]
   122d4:	subs	r3, r3, r2
   122d8:	movne	r3, #1
   122dc:	b	11754 <putchar_unlocked@plt+0x9dc>
   122e0:	ldr	r3, [sp, #60]	; 0x3c
   122e4:	clz	r7, r9
   122e8:	cmp	r3, #0
   122ec:	lsr	r7, r7, #5
   122f0:	moveq	r7, #0
   122f4:	cmp	r7, #0
   122f8:	mov	r5, r3
   122fc:	bne	116b4 <putchar_unlocked@plt+0x93c>
   12300:	ldr	r3, [sp, #68]	; 0x44
   12304:	ldr	r2, [sp, #40]	; 0x28
   12308:	cmp	r2, #0
   1230c:	moveq	r3, #0
   12310:	andne	r3, r3, #1
   12314:	cmp	r3, #0
   12318:	movne	r3, r2
   1231c:	subne	r2, r3, #1
   12320:	bne	12350 <putchar_unlocked@plt+0x15d8>
   12324:	cmp	r9, r4
   12328:	movhi	r3, #0
   1232c:	strbhi	r3, [r8, r4]
   12330:	mov	r0, r4
   12334:	add	sp, sp, #108	; 0x6c
   12338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1233c:	mov	r3, r2
   12340:	b	12304 <putchar_unlocked@plt+0x158c>
   12344:	cmp	r9, r4
   12348:	strbhi	r3, [r8, r4]
   1234c:	add	r4, r4, #1
   12350:	ldrb	r3, [r2, #1]!
   12354:	cmp	r3, #0
   12358:	bne	12344 <putchar_unlocked@plt+0x15cc>
   1235c:	b	12324 <putchar_unlocked@plt+0x15ac>
   12360:	ldr	r3, [pc, #32]	; 12388 <putchar_unlocked@plt+0x1610>
   12364:	mov	r6, #1
   12368:	str	r6, [sp, #24]
   1236c:	str	r6, [sp, #32]
   12370:	str	r3, [sp, #40]	; 0x28
   12374:	mov	r4, #0
   12378:	mov	sl, #5
   1237c:	b	11724 <putchar_unlocked@plt+0x9ac>
   12380:	mov	r6, #1
   12384:	b	11918 <putchar_unlocked@plt+0xba0>
   12388:	ldrdeq	r4, [r1], -r3
   1238c:	ldrdeq	r4, [r1], -r7
   12390:	ldrdeq	r4, [r1], -r5
   12394:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1239c:	sub	sp, sp, #52	; 0x34
   123a0:	mov	r6, r0
   123a4:	mov	r5, r3
   123a8:	mov	r8, r1
   123ac:	mov	r9, r2
   123b0:	bl	10cc4 <__errno_location@plt>
   123b4:	ldr	r7, [pc, #380]	; 12538 <putchar_unlocked@plt+0x17c0>
   123b8:	cmn	r6, #-2147483647	; 0x80000001
   123bc:	ldr	r4, [r7]
   123c0:	ldr	r3, [r0]
   123c4:	str	r0, [sp, #24]
   123c8:	str	r3, [sp, #32]
   123cc:	movne	r3, #0
   123d0:	moveq	r3, #1
   123d4:	orrs	r3, r3, r6, lsr #31
   123d8:	beq	123e0 <putchar_unlocked@plt+0x1668>
   123dc:	bl	10d6c <abort@plt>
   123e0:	ldr	r2, [r7, #4]
   123e4:	cmp	r6, r2
   123e8:	blt	12458 <putchar_unlocked@plt+0x16e0>
   123ec:	add	r1, sp, #48	; 0x30
   123f0:	add	sl, r7, #8
   123f4:	str	r2, [r1, #-4]!
   123f8:	cmp	r4, sl
   123fc:	mov	r3, #8
   12400:	sub	r2, r6, r2
   12404:	movne	r0, r4
   12408:	str	r3, [sp]
   1240c:	add	r2, r2, #1
   12410:	mvn	r3, #-2147483648	; 0x80000000
   12414:	moveq	r0, #0
   12418:	bl	1312c <putchar_unlocked@plt+0x23b4>
   1241c:	cmp	r4, sl
   12420:	ldr	r2, [sp, #44]	; 0x2c
   12424:	mov	fp, r0
   12428:	str	r0, [r7]
   1242c:	ldmeq	r4, {r0, r1}
   12430:	mov	r4, fp
   12434:	stmeq	fp, {r0, r1}
   12438:	ldr	r0, [r7, #4]
   1243c:	mov	r1, #0
   12440:	sub	r2, r2, r0
   12444:	add	r0, fp, r0, lsl #3
   12448:	lsl	r2, r2, #3
   1244c:	bl	10cdc <memset@plt>
   12450:	ldr	r3, [sp, #44]	; 0x2c
   12454:	str	r3, [r7, #4]
   12458:	ldr	r3, [r5, #4]
   1245c:	add	sl, r4, r6, lsl #3
   12460:	orr	r3, r3, #1
   12464:	str	r3, [sp, #28]
   12468:	add	r3, r5, #8
   1246c:	str	r3, [sp, #36]	; 0x24
   12470:	ldr	r3, [r5, #44]	; 0x2c
   12474:	ldr	fp, [r4, r6, lsl #3]
   12478:	ldr	r7, [sl, #4]
   1247c:	str	r3, [sp, #16]
   12480:	ldr	r3, [r5, #40]	; 0x28
   12484:	mov	r2, r8
   12488:	str	r3, [sp, #12]
   1248c:	add	r3, r5, #8
   12490:	str	r3, [sp, #8]
   12494:	ldr	r3, [sp, #28]
   12498:	mov	r1, fp
   1249c:	str	r3, [sp, #4]
   124a0:	ldr	r3, [r5]
   124a4:	mov	r0, r7
   124a8:	str	r3, [sp]
   124ac:	mov	r3, r9
   124b0:	bl	11664 <putchar_unlocked@plt+0x8ec>
   124b4:	cmp	fp, r0
   124b8:	bhi	12520 <putchar_unlocked@plt+0x17a8>
   124bc:	ldr	r3, [pc, #120]	; 1253c <putchar_unlocked@plt+0x17c4>
   124c0:	add	fp, r0, #1
   124c4:	cmp	r7, r3
   124c8:	str	fp, [r4, r6, lsl #3]
   124cc:	beq	124d8 <putchar_unlocked@plt+0x1760>
   124d0:	mov	r0, r7
   124d4:	bl	1376c <putchar_unlocked@plt+0x29f4>
   124d8:	mov	r0, fp
   124dc:	bl	12fe4 <putchar_unlocked@plt+0x226c>
   124e0:	ldr	r3, [r5, #44]	; 0x2c
   124e4:	mov	r2, r8
   124e8:	mov	r1, fp
   124ec:	str	r0, [sl, #4]
   124f0:	str	r3, [sp, #16]
   124f4:	ldr	r3, [r5, #40]	; 0x28
   124f8:	mov	r7, r0
   124fc:	str	r3, [sp, #12]
   12500:	add	r3, r5, #8
   12504:	str	r3, [sp, #8]
   12508:	ldr	r3, [sp, #28]
   1250c:	str	r3, [sp, #4]
   12510:	ldr	r3, [r5]
   12514:	str	r3, [sp]
   12518:	mov	r3, r9
   1251c:	bl	11664 <putchar_unlocked@plt+0x8ec>
   12520:	ldr	r3, [sp, #24]
   12524:	ldr	r2, [sp, #32]
   12528:	mov	r0, r7
   1252c:	str	r2, [r3]
   12530:	add	sp, sp, #52	; 0x34
   12534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12538:	ldrdeq	r5, [r2], -r8
   1253c:	andeq	r5, r2, r0, asr #2
   12540:	push	{r4, r5, r6, lr}
   12544:	mov	r5, r0
   12548:	bl	10cc4 <__errno_location@plt>
   1254c:	cmp	r5, #0
   12550:	mov	r1, #48	; 0x30
   12554:	ldr	r6, [r0]
   12558:	mov	r4, r0
   1255c:	ldr	r0, [pc, #12]	; 12570 <putchar_unlocked@plt+0x17f8>
   12560:	movne	r0, r5
   12564:	bl	133c0 <putchar_unlocked@plt+0x2648>
   12568:	str	r6, [r4]
   1256c:	pop	{r4, r5, r6, pc}
   12570:	andeq	r5, r2, r0, asr #4
   12574:	ldr	r3, [pc, #12]	; 12588 <putchar_unlocked@plt+0x1810>
   12578:	cmp	r0, #0
   1257c:	moveq	r0, r3
   12580:	ldr	r0, [r0]
   12584:	bx	lr
   12588:	andeq	r5, r2, r0, asr #4
   1258c:	ldr	r3, [pc, #12]	; 125a0 <putchar_unlocked@plt+0x1828>
   12590:	cmp	r0, #0
   12594:	moveq	r0, r3
   12598:	str	r1, [r0]
   1259c:	bx	lr
   125a0:	andeq	r5, r2, r0, asr #4
   125a4:	ldr	r3, [pc, #52]	; 125e0 <putchar_unlocked@plt+0x1868>
   125a8:	cmp	r0, #0
   125ac:	moveq	r0, r3
   125b0:	add	r3, r0, #8
   125b4:	push	{lr}		; (str lr, [sp, #-4]!)
   125b8:	lsr	lr, r1, #5
   125bc:	and	r1, r1, #31
   125c0:	ldr	ip, [r3, lr, lsl #2]
   125c4:	lsr	r0, ip, r1
   125c8:	eor	r2, r2, r0
   125cc:	and	r2, r2, #1
   125d0:	and	r0, r0, #1
   125d4:	eor	r1, ip, r2, lsl r1
   125d8:	str	r1, [r3, lr, lsl #2]
   125dc:	pop	{pc}		; (ldr pc, [sp], #4)
   125e0:	andeq	r5, r2, r0, asr #4
   125e4:	ldr	r3, [pc, #16]	; 125fc <putchar_unlocked@plt+0x1884>
   125e8:	cmp	r0, #0
   125ec:	movne	r3, r0
   125f0:	ldr	r0, [r3, #4]
   125f4:	str	r1, [r3, #4]
   125f8:	bx	lr
   125fc:	andeq	r5, r2, r0, asr #4
   12600:	ldr	r3, [pc, #44]	; 12634 <putchar_unlocked@plt+0x18bc>
   12604:	cmp	r0, #0
   12608:	moveq	r0, r3
   1260c:	mov	r3, #10
   12610:	cmp	r2, #0
   12614:	cmpne	r1, #0
   12618:	str	r3, [r0]
   1261c:	bne	12628 <putchar_unlocked@plt+0x18b0>
   12620:	push	{r4, lr}
   12624:	bl	10d6c <abort@plt>
   12628:	str	r1, [r0, #40]	; 0x28
   1262c:	str	r2, [r0, #44]	; 0x2c
   12630:	bx	lr
   12634:	andeq	r5, r2, r0, asr #4
   12638:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1263c:	sub	sp, sp, #24
   12640:	mov	sl, r3
   12644:	ldr	r4, [sp, #56]	; 0x38
   12648:	ldr	r3, [pc, #100]	; 126b4 <putchar_unlocked@plt+0x193c>
   1264c:	cmp	r4, #0
   12650:	moveq	r4, r3
   12654:	mov	r7, r0
   12658:	mov	r8, r1
   1265c:	mov	r9, r2
   12660:	bl	10cc4 <__errno_location@plt>
   12664:	ldr	r3, [r4, #44]	; 0x2c
   12668:	mov	r2, r9
   1266c:	mov	r1, r8
   12670:	ldr	r6, [r0]
   12674:	str	r3, [sp, #16]
   12678:	ldr	r3, [r4, #40]	; 0x28
   1267c:	mov	r5, r0
   12680:	str	r3, [sp, #12]
   12684:	add	r3, r4, #8
   12688:	str	r3, [sp, #8]
   1268c:	ldr	r3, [r4, #4]
   12690:	mov	r0, r7
   12694:	str	r3, [sp, #4]
   12698:	ldr	r3, [r4]
   1269c:	str	r3, [sp]
   126a0:	mov	r3, sl
   126a4:	bl	11664 <putchar_unlocked@plt+0x8ec>
   126a8:	str	r6, [r5]
   126ac:	add	sp, sp, #24
   126b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126b4:	andeq	r5, r2, r0, asr #4
   126b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126bc:	cmp	r3, #0
   126c0:	sub	sp, sp, #44	; 0x2c
   126c4:	ldr	r4, [pc, #188]	; 12788 <putchar_unlocked@plt+0x1a10>
   126c8:	mov	r6, r2
   126cc:	movne	r4, r3
   126d0:	mov	sl, r1
   126d4:	mov	r9, r0
   126d8:	bl	10cc4 <__errno_location@plt>
   126dc:	ldr	r5, [r4, #4]
   126e0:	add	fp, r4, #8
   126e4:	cmp	r6, #0
   126e8:	orreq	r5, r5, #1
   126ec:	mov	r1, #0
   126f0:	mov	r2, r9
   126f4:	ldr	r3, [r0]
   126f8:	mov	r8, r0
   126fc:	str	r3, [sp, #28]
   12700:	ldr	r3, [r4, #44]	; 0x2c
   12704:	mov	r0, r1
   12708:	str	r3, [sp, #16]
   1270c:	ldr	r3, [r4, #40]	; 0x28
   12710:	stmib	sp, {r5, fp}
   12714:	str	r3, [sp, #12]
   12718:	ldr	r3, [r4]
   1271c:	str	r3, [sp]
   12720:	mov	r3, sl
   12724:	bl	11664 <putchar_unlocked@plt+0x8ec>
   12728:	add	r1, r0, #1
   1272c:	mov	r7, r0
   12730:	mov	r0, r1
   12734:	str	r1, [sp, #36]	; 0x24
   12738:	bl	12fe4 <putchar_unlocked@plt+0x226c>
   1273c:	ldr	r3, [r4, #44]	; 0x2c
   12740:	mov	r2, r9
   12744:	str	r3, [sp, #16]
   12748:	ldr	r3, [r4, #40]	; 0x28
   1274c:	stmib	sp, {r5, fp}
   12750:	str	r3, [sp, #12]
   12754:	ldr	r3, [r4]
   12758:	ldr	r1, [sp, #36]	; 0x24
   1275c:	str	r3, [sp]
   12760:	mov	r3, sl
   12764:	str	r0, [sp, #32]
   12768:	bl	11664 <putchar_unlocked@plt+0x8ec>
   1276c:	ldr	r3, [sp, #28]
   12770:	cmp	r6, #0
   12774:	str	r3, [r8]
   12778:	ldr	r0, [sp, #32]
   1277c:	strne	r7, [r6]
   12780:	add	sp, sp, #44	; 0x2c
   12784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12788:	andeq	r5, r2, r0, asr #4
   1278c:	mov	r3, r2
   12790:	mov	r2, #0
   12794:	b	126b8 <putchar_unlocked@plt+0x1940>
   12798:	push	{r4, r5, r6, r7, r8, lr}
   1279c:	mov	r6, #1
   127a0:	ldr	r4, [pc, #104]	; 12810 <putchar_unlocked@plt+0x1a98>
   127a4:	ldr	r5, [r4]
   127a8:	add	r7, r5, #12
   127ac:	ldr	r3, [r4, #4]
   127b0:	add	r7, r7, #8
   127b4:	cmp	r6, r3
   127b8:	blt	12800 <putchar_unlocked@plt+0x1a88>
   127bc:	ldr	r0, [r5, #4]
   127c0:	ldr	r6, [pc, #76]	; 12814 <putchar_unlocked@plt+0x1a9c>
   127c4:	cmp	r0, r6
   127c8:	beq	127dc <putchar_unlocked@plt+0x1a64>
   127cc:	bl	1376c <putchar_unlocked@plt+0x29f4>
   127d0:	mov	r3, #256	; 0x100
   127d4:	str	r3, [r4, #8]
   127d8:	str	r6, [r4, #12]
   127dc:	ldr	r6, [pc, #52]	; 12818 <putchar_unlocked@plt+0x1aa0>
   127e0:	cmp	r5, r6
   127e4:	beq	127f4 <putchar_unlocked@plt+0x1a7c>
   127e8:	mov	r0, r5
   127ec:	bl	1376c <putchar_unlocked@plt+0x29f4>
   127f0:	str	r6, [r4]
   127f4:	mov	r3, #1
   127f8:	str	r3, [r4, #4]
   127fc:	pop	{r4, r5, r6, r7, r8, pc}
   12800:	ldr	r0, [r7, #-8]
   12804:	bl	1376c <putchar_unlocked@plt+0x29f4>
   12808:	add	r6, r6, #1
   1280c:	b	127ac <putchar_unlocked@plt+0x1a34>
   12810:	ldrdeq	r5, [r2], -r8
   12814:	andeq	r5, r2, r0, asr #2
   12818:	andeq	r5, r2, r0, ror #1
   1281c:	ldr	r3, [pc, #4]	; 12828 <putchar_unlocked@plt+0x1ab0>
   12820:	mvn	r2, #0
   12824:	b	12398 <putchar_unlocked@plt+0x1620>
   12828:	andeq	r5, r2, r0, asr #4
   1282c:	ldr	r3, [pc]	; 12834 <putchar_unlocked@plt+0x1abc>
   12830:	b	12398 <putchar_unlocked@plt+0x1620>
   12834:	andeq	r5, r2, r0, asr #4
   12838:	mov	r1, r0
   1283c:	mov	r0, #0
   12840:	b	1281c <putchar_unlocked@plt+0x1aa4>
   12844:	mov	r2, r1
   12848:	mov	r1, r0
   1284c:	mov	r0, #0
   12850:	b	1282c <putchar_unlocked@plt+0x1ab4>
   12854:	push	{r4, r5, lr}
   12858:	sub	sp, sp, #52	; 0x34
   1285c:	mov	r5, r2
   12860:	mov	r4, r0
   12864:	mov	r0, sp
   12868:	bl	11520 <putchar_unlocked@plt+0x7a8>
   1286c:	mov	r3, sp
   12870:	mvn	r2, #0
   12874:	mov	r1, r5
   12878:	mov	r0, r4
   1287c:	bl	12398 <putchar_unlocked@plt+0x1620>
   12880:	add	sp, sp, #52	; 0x34
   12884:	pop	{r4, r5, pc}
   12888:	push	{r4, r5, r6, lr}
   1288c:	sub	sp, sp, #48	; 0x30
   12890:	mov	r5, r2
   12894:	mov	r6, r3
   12898:	mov	r4, r0
   1289c:	mov	r0, sp
   128a0:	bl	11520 <putchar_unlocked@plt+0x7a8>
   128a4:	mov	r3, sp
   128a8:	mov	r2, r6
   128ac:	mov	r1, r5
   128b0:	mov	r0, r4
   128b4:	bl	12398 <putchar_unlocked@plt+0x1620>
   128b8:	add	sp, sp, #48	; 0x30
   128bc:	pop	{r4, r5, r6, pc}
   128c0:	mov	r2, r1
   128c4:	mov	r1, r0
   128c8:	mov	r0, #0
   128cc:	b	12854 <putchar_unlocked@plt+0x1adc>
   128d0:	mov	r3, r2
   128d4:	mov	r2, r1
   128d8:	mov	r1, r0
   128dc:	mov	r0, #0
   128e0:	b	12888 <putchar_unlocked@plt+0x1b10>
   128e4:	push	{r4, r5, r6, lr}
   128e8:	mov	r4, r0
   128ec:	ldr	lr, [pc, #80]	; 12944 <putchar_unlocked@plt+0x1bcc>
   128f0:	mov	r5, r1
   128f4:	mov	r6, r2
   128f8:	ldm	lr!, {r0, r1, r2, r3}
   128fc:	sub	sp, sp, #48	; 0x30
   12900:	mov	ip, sp
   12904:	stmia	ip!, {r0, r1, r2, r3}
   12908:	ldm	lr!, {r0, r1, r2, r3}
   1290c:	stmia	ip!, {r0, r1, r2, r3}
   12910:	ldm	lr, {r0, r1, r2, r3}
   12914:	stm	ip, {r0, r1, r2, r3}
   12918:	mov	r1, r6
   1291c:	mov	r2, #1
   12920:	mov	r0, sp
   12924:	bl	125a4 <putchar_unlocked@plt+0x182c>
   12928:	mov	r3, sp
   1292c:	mov	r2, r5
   12930:	mov	r1, r4
   12934:	mov	r0, #0
   12938:	bl	12398 <putchar_unlocked@plt+0x1620>
   1293c:	add	sp, sp, #48	; 0x30
   12940:	pop	{r4, r5, r6, pc}
   12944:	andeq	r5, r2, r0, asr #4
   12948:	mov	r2, r1
   1294c:	mvn	r1, #0
   12950:	b	128e4 <putchar_unlocked@plt+0x1b6c>
   12954:	mov	r1, #58	; 0x3a
   12958:	b	12948 <putchar_unlocked@plt+0x1bd0>
   1295c:	mov	r2, #58	; 0x3a
   12960:	b	128e4 <putchar_unlocked@plt+0x1b6c>
   12964:	push	{r4, r5, lr}
   12968:	sub	sp, sp, #100	; 0x64
   1296c:	mov	r4, r0
   12970:	mov	r0, sp
   12974:	mov	r5, r2
   12978:	bl	11520 <putchar_unlocked@plt+0x7a8>
   1297c:	mov	ip, sp
   12980:	add	lr, sp, #48	; 0x30
   12984:	ldm	ip!, {r0, r1, r2, r3}
   12988:	stmia	lr!, {r0, r1, r2, r3}
   1298c:	ldm	ip!, {r0, r1, r2, r3}
   12990:	stmia	lr!, {r0, r1, r2, r3}
   12994:	ldm	ip, {r0, r1, r2, r3}
   12998:	stm	lr, {r0, r1, r2, r3}
   1299c:	mov	r2, #1
   129a0:	mov	r1, #58	; 0x3a
   129a4:	add	r0, sp, #48	; 0x30
   129a8:	bl	125a4 <putchar_unlocked@plt+0x182c>
   129ac:	add	r3, sp, #48	; 0x30
   129b0:	mvn	r2, #0
   129b4:	mov	r1, r5
   129b8:	mov	r0, r4
   129bc:	bl	12398 <putchar_unlocked@plt+0x1620>
   129c0:	add	sp, sp, #100	; 0x64
   129c4:	pop	{r4, r5, pc}
   129c8:	push	{r4, r5, r6, r7, lr}
   129cc:	mov	r4, r0
   129d0:	ldr	lr, [pc, #84]	; 12a2c <putchar_unlocked@plt+0x1cb4>
   129d4:	mov	r6, r1
   129d8:	mov	r7, r2
   129dc:	mov	r5, r3
   129e0:	ldm	lr!, {r0, r1, r2, r3}
   129e4:	sub	sp, sp, #52	; 0x34
   129e8:	mov	ip, sp
   129ec:	stmia	ip!, {r0, r1, r2, r3}
   129f0:	ldm	lr!, {r0, r1, r2, r3}
   129f4:	stmia	ip!, {r0, r1, r2, r3}
   129f8:	ldm	lr, {r0, r1, r2, r3}
   129fc:	stm	ip, {r0, r1, r2, r3}
   12a00:	mov	r2, r7
   12a04:	mov	r1, r6
   12a08:	mov	r0, sp
   12a0c:	bl	12600 <putchar_unlocked@plt+0x1888>
   12a10:	mov	r3, sp
   12a14:	ldr	r2, [sp, #72]	; 0x48
   12a18:	mov	r1, r5
   12a1c:	mov	r0, r4
   12a20:	bl	12398 <putchar_unlocked@plt+0x1620>
   12a24:	add	sp, sp, #52	; 0x34
   12a28:	pop	{r4, r5, r6, r7, pc}
   12a2c:	andeq	r5, r2, r0, asr #4
   12a30:	mvn	ip, #0
   12a34:	push	{r0, r1, r2, lr}
   12a38:	str	ip, [sp]
   12a3c:	bl	129c8 <putchar_unlocked@plt+0x1c50>
   12a40:	add	sp, sp, #12
   12a44:	pop	{pc}		; (ldr pc, [sp], #4)
   12a48:	mov	r3, r2
   12a4c:	mov	r2, r1
   12a50:	mov	r1, r0
   12a54:	mov	r0, #0
   12a58:	b	12a30 <putchar_unlocked@plt+0x1cb8>
   12a5c:	push	{r0, r1, r2, lr}
   12a60:	str	r3, [sp]
   12a64:	mov	r3, r2
   12a68:	mov	r2, r1
   12a6c:	mov	r1, r0
   12a70:	mov	r0, #0
   12a74:	bl	129c8 <putchar_unlocked@plt+0x1c50>
   12a78:	add	sp, sp, #12
   12a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a80:	ldr	r3, [pc]	; 12a88 <putchar_unlocked@plt+0x1d10>
   12a84:	b	12398 <putchar_unlocked@plt+0x1620>
   12a88:	andeq	r5, r2, r8, ror #1
   12a8c:	mov	r2, r1
   12a90:	mov	r1, r0
   12a94:	mov	r0, #0
   12a98:	b	12a80 <putchar_unlocked@plt+0x1d08>
   12a9c:	mvn	r2, #0
   12aa0:	b	12a80 <putchar_unlocked@plt+0x1d08>
   12aa4:	mov	r1, r0
   12aa8:	mov	r0, #0
   12aac:	b	12a9c <putchar_unlocked@plt+0x1d24>
   12ab0:	push	{r4, r5, r6, lr}
   12ab4:	sub	sp, sp, #32
   12ab8:	cmp	r1, #0
   12abc:	mov	r5, r0
   12ac0:	ldr	r4, [sp, #48]	; 0x30
   12ac4:	ldr	r6, [sp, #52]	; 0x34
   12ac8:	beq	12b7c <putchar_unlocked@plt+0x1e04>
   12acc:	stm	sp, {r2, r3}
   12ad0:	mov	r3, r1
   12ad4:	ldr	r2, [pc, #860]	; 12e38 <putchar_unlocked@plt+0x20c0>
   12ad8:	mov	r1, #1
   12adc:	bl	10d00 <__fprintf_chk@plt>
   12ae0:	mov	r2, #5
   12ae4:	ldr	r1, [pc, #848]	; 12e3c <putchar_unlocked@plt+0x20c4>
   12ae8:	mov	r0, #0
   12aec:	bl	10bec <dcgettext@plt>
   12af0:	ldr	r3, [pc, #840]	; 12e40 <putchar_unlocked@plt+0x20c8>
   12af4:	ldr	r2, [pc, #840]	; 12e44 <putchar_unlocked@plt+0x20cc>
   12af8:	str	r3, [sp]
   12afc:	mov	r1, #1
   12b00:	mov	r3, r0
   12b04:	mov	r0, r5
   12b08:	bl	10d00 <__fprintf_chk@plt>
   12b0c:	mov	r1, r5
   12b10:	mov	r0, #10
   12b14:	bl	10be0 <fputc_unlocked@plt>
   12b18:	mov	r2, #5
   12b1c:	ldr	r1, [pc, #804]	; 12e48 <putchar_unlocked@plt+0x20d0>
   12b20:	mov	r0, #0
   12b24:	bl	10bec <dcgettext@plt>
   12b28:	mov	r1, #1
   12b2c:	ldr	r3, [pc, #792]	; 12e4c <putchar_unlocked@plt+0x20d4>
   12b30:	mov	r2, r0
   12b34:	mov	r0, r5
   12b38:	bl	10d00 <__fprintf_chk@plt>
   12b3c:	mov	r1, r5
   12b40:	mov	r0, #10
   12b44:	bl	10be0 <fputc_unlocked@plt>
   12b48:	cmp	r6, #9
   12b4c:	ldrls	pc, [pc, r6, lsl #2]
   12b50:	b	12e2c <putchar_unlocked@plt+0x20b4>
   12b54:	andeq	r2, r1, ip, ror #24
   12b58:	muleq	r1, r4, fp
   12b5c:	andeq	r2, r1, r0, asr #23
   12b60:	strdeq	r2, [r1], -r4
   12b64:	andeq	r2, r1, r0, lsr ip
   12b68:	andeq	r2, r1, r4, ror ip
   12b6c:			; <UNDEFINED> instruction: 0x00012cbc
   12b70:	andeq	r2, r1, ip, lsl #26
   12b74:	andeq	r2, r1, r4, ror #26
   12b78:	andeq	r2, r1, r4, asr #27
   12b7c:	str	r3, [sp]
   12b80:	mov	r1, #1
   12b84:	mov	r3, r2
   12b88:	ldr	r2, [pc, #704]	; 12e50 <putchar_unlocked@plt+0x20d8>
   12b8c:	bl	10d00 <__fprintf_chk@plt>
   12b90:	b	12ae0 <putchar_unlocked@plt+0x1d68>
   12b94:	mov	r2, #5
   12b98:	ldr	r1, [pc, #692]	; 12e54 <putchar_unlocked@plt+0x20dc>
   12b9c:	mov	r0, #0
   12ba0:	bl	10bec <dcgettext@plt>
   12ba4:	ldr	r3, [r4]
   12ba8:	mov	r1, #1
   12bac:	mov	r2, r0
   12bb0:	mov	r0, r5
   12bb4:	add	sp, sp, #32
   12bb8:	pop	{r4, r5, r6, lr}
   12bbc:	b	10d00 <__fprintf_chk@plt>
   12bc0:	mov	r2, #5
   12bc4:	ldr	r1, [pc, #652]	; 12e58 <putchar_unlocked@plt+0x20e0>
   12bc8:	mov	r0, #0
   12bcc:	bl	10bec <dcgettext@plt>
   12bd0:	ldr	r3, [r4, #4]
   12bd4:	mov	r1, #1
   12bd8:	str	r3, [sp, #48]	; 0x30
   12bdc:	ldr	r3, [r4]
   12be0:	mov	r2, r0
   12be4:	mov	r0, r5
   12be8:	add	sp, sp, #32
   12bec:	pop	{r4, r5, r6, lr}
   12bf0:	b	10d00 <__fprintf_chk@plt>
   12bf4:	mov	r2, #5
   12bf8:	ldr	r1, [pc, #604]	; 12e5c <putchar_unlocked@plt+0x20e4>
   12bfc:	mov	r0, #0
   12c00:	bl	10bec <dcgettext@plt>
   12c04:	ldr	r3, [r4, #8]
   12c08:	mov	r1, #1
   12c0c:	str	r3, [sp, #52]	; 0x34
   12c10:	ldr	r3, [r4, #4]
   12c14:	str	r3, [sp, #48]	; 0x30
   12c18:	ldr	r3, [r4]
   12c1c:	mov	r2, r0
   12c20:	mov	r0, r5
   12c24:	add	sp, sp, #32
   12c28:	pop	{r4, r5, r6, lr}
   12c2c:	b	10d00 <__fprintf_chk@plt>
   12c30:	mov	r2, #5
   12c34:	ldr	r1, [pc, #548]	; 12e60 <putchar_unlocked@plt+0x20e8>
   12c38:	mov	r0, #0
   12c3c:	bl	10bec <dcgettext@plt>
   12c40:	ldr	r3, [r4, #12]
   12c44:	mov	r1, #1
   12c48:	str	r3, [sp, #8]
   12c4c:	ldr	r3, [r4, #8]
   12c50:	str	r3, [sp, #4]
   12c54:	ldr	r3, [r4, #4]
   12c58:	str	r3, [sp]
   12c5c:	ldr	r3, [r4]
   12c60:	mov	r2, r0
   12c64:	mov	r0, r5
   12c68:	bl	10d00 <__fprintf_chk@plt>
   12c6c:	add	sp, sp, #32
   12c70:	pop	{r4, r5, r6, pc}
   12c74:	mov	r2, #5
   12c78:	ldr	r1, [pc, #484]	; 12e64 <putchar_unlocked@plt+0x20ec>
   12c7c:	mov	r0, #0
   12c80:	bl	10bec <dcgettext@plt>
   12c84:	ldr	r3, [r4, #16]
   12c88:	mov	r1, #1
   12c8c:	str	r3, [sp, #12]
   12c90:	ldr	r3, [r4, #12]
   12c94:	str	r3, [sp, #8]
   12c98:	ldr	r3, [r4, #8]
   12c9c:	str	r3, [sp, #4]
   12ca0:	ldr	r3, [r4, #4]
   12ca4:	str	r3, [sp]
   12ca8:	ldr	r3, [r4]
   12cac:	mov	r2, r0
   12cb0:	mov	r0, r5
   12cb4:	bl	10d00 <__fprintf_chk@plt>
   12cb8:	b	12c6c <putchar_unlocked@plt+0x1ef4>
   12cbc:	mov	r2, #5
   12cc0:	ldr	r1, [pc, #416]	; 12e68 <putchar_unlocked@plt+0x20f0>
   12cc4:	mov	r0, #0
   12cc8:	bl	10bec <dcgettext@plt>
   12ccc:	ldr	r3, [r4, #20]
   12cd0:	mov	r1, #1
   12cd4:	str	r3, [sp, #16]
   12cd8:	ldr	r3, [r4, #16]
   12cdc:	str	r3, [sp, #12]
   12ce0:	ldr	r3, [r4, #12]
   12ce4:	str	r3, [sp, #8]
   12ce8:	ldr	r3, [r4, #8]
   12cec:	str	r3, [sp, #4]
   12cf0:	ldr	r3, [r4, #4]
   12cf4:	str	r3, [sp]
   12cf8:	ldr	r3, [r4]
   12cfc:	mov	r2, r0
   12d00:	mov	r0, r5
   12d04:	bl	10d00 <__fprintf_chk@plt>
   12d08:	b	12c6c <putchar_unlocked@plt+0x1ef4>
   12d0c:	mov	r2, #5
   12d10:	ldr	r1, [pc, #340]	; 12e6c <putchar_unlocked@plt+0x20f4>
   12d14:	mov	r0, #0
   12d18:	bl	10bec <dcgettext@plt>
   12d1c:	ldr	r3, [r4, #24]
   12d20:	mov	r1, #1
   12d24:	str	r3, [sp, #20]
   12d28:	ldr	r3, [r4, #20]
   12d2c:	str	r3, [sp, #16]
   12d30:	ldr	r3, [r4, #16]
   12d34:	str	r3, [sp, #12]
   12d38:	ldr	r3, [r4, #12]
   12d3c:	str	r3, [sp, #8]
   12d40:	ldr	r3, [r4, #8]
   12d44:	str	r3, [sp, #4]
   12d48:	ldr	r3, [r4, #4]
   12d4c:	str	r3, [sp]
   12d50:	ldr	r3, [r4]
   12d54:	mov	r2, r0
   12d58:	mov	r0, r5
   12d5c:	bl	10d00 <__fprintf_chk@plt>
   12d60:	b	12c6c <putchar_unlocked@plt+0x1ef4>
   12d64:	mov	r2, #5
   12d68:	ldr	r1, [pc, #256]	; 12e70 <putchar_unlocked@plt+0x20f8>
   12d6c:	mov	r0, #0
   12d70:	bl	10bec <dcgettext@plt>
   12d74:	ldr	r3, [r4, #28]
   12d78:	mov	r1, #1
   12d7c:	str	r3, [sp, #24]
   12d80:	ldr	r3, [r4, #24]
   12d84:	str	r3, [sp, #20]
   12d88:	ldr	r3, [r4, #20]
   12d8c:	str	r3, [sp, #16]
   12d90:	ldr	r3, [r4, #16]
   12d94:	str	r3, [sp, #12]
   12d98:	ldr	r3, [r4, #12]
   12d9c:	str	r3, [sp, #8]
   12da0:	ldr	r3, [r4, #8]
   12da4:	str	r3, [sp, #4]
   12da8:	ldr	r3, [r4, #4]
   12dac:	str	r3, [sp]
   12db0:	ldr	r3, [r4]
   12db4:	mov	r2, r0
   12db8:	mov	r0, r5
   12dbc:	bl	10d00 <__fprintf_chk@plt>
   12dc0:	b	12c6c <putchar_unlocked@plt+0x1ef4>
   12dc4:	ldr	r1, [pc, #168]	; 12e74 <putchar_unlocked@plt+0x20fc>
   12dc8:	mov	r2, #5
   12dcc:	mov	r0, #0
   12dd0:	bl	10bec <dcgettext@plt>
   12dd4:	ldr	r3, [r4, #32]
   12dd8:	mov	r1, #1
   12ddc:	str	r3, [sp, #28]
   12de0:	ldr	r3, [r4, #28]
   12de4:	str	r3, [sp, #24]
   12de8:	ldr	r3, [r4, #24]
   12dec:	str	r3, [sp, #20]
   12df0:	ldr	r3, [r4, #20]
   12df4:	str	r3, [sp, #16]
   12df8:	ldr	r3, [r4, #16]
   12dfc:	str	r3, [sp, #12]
   12e00:	ldr	r3, [r4, #12]
   12e04:	str	r3, [sp, #8]
   12e08:	ldr	r3, [r4, #8]
   12e0c:	str	r3, [sp, #4]
   12e10:	ldr	r3, [r4, #4]
   12e14:	str	r3, [sp]
   12e18:	ldr	r3, [r4]
   12e1c:	mov	r2, r0
   12e20:	mov	r0, r5
   12e24:	bl	10d00 <__fprintf_chk@plt>
   12e28:	b	12c6c <putchar_unlocked@plt+0x1ef4>
   12e2c:	mov	r2, #5
   12e30:	ldr	r1, [pc, #64]	; 12e78 <putchar_unlocked@plt+0x2100>
   12e34:	b	12dcc <putchar_unlocked@plt+0x2054>
   12e38:	andeq	r4, r1, r7, lsr #8
   12e3c:	andeq	r4, r1, sl, lsr r4
   12e40:	andeq	r0, r0, r6, ror #15
   12e44:	andeq	r4, r1, r8, lsl #14
   12e48:	andeq	r4, r1, lr, lsr r4
   12e4c:	andeq	r4, r1, r9, ror #9
   12e50:	andeq	r4, r1, r3, lsr r4
   12e54:	andeq	r4, r1, fp, lsl #10
   12e58:	andeq	r4, r1, fp, lsl r5
   12e5c:	andeq	r4, r1, r2, lsr r5
   12e60:	andeq	r4, r1, lr, asr #10
   12e64:	andeq	r4, r1, lr, ror #10
   12e68:	muleq	r1, r2, r5
   12e6c:			; <UNDEFINED> instruction: 0x000145ba
   12e70:	andeq	r4, r1, r6, ror #11
   12e74:	andeq	r4, r1, r6, lsl r6
   12e78:	andeq	r4, r1, sl, asr #12
   12e7c:	push	{r0, r1, r4, lr}
   12e80:	mov	ip, #0
   12e84:	ldr	lr, [sp, #16]
   12e88:	ldr	r4, [lr, ip, lsl #2]
   12e8c:	cmp	r4, #0
   12e90:	bne	12ea8 <putchar_unlocked@plt+0x2130>
   12e94:	str	ip, [sp, #4]
   12e98:	str	lr, [sp]
   12e9c:	bl	12ab0 <putchar_unlocked@plt+0x1d38>
   12ea0:	add	sp, sp, #8
   12ea4:	pop	{r4, pc}
   12ea8:	add	ip, ip, #1
   12eac:	b	12e88 <putchar_unlocked@plt+0x2110>
   12eb0:	push	{r4, r5, lr}
   12eb4:	sub	sp, sp, #52	; 0x34
   12eb8:	mov	ip, #0
   12ebc:	ldr	r5, [sp, #64]	; 0x40
   12ec0:	add	lr, sp, #8
   12ec4:	ldr	r4, [r5, ip, lsl #2]
   12ec8:	cmp	r4, #0
   12ecc:	str	r4, [lr, ip, lsl #2]
   12ed0:	beq	12ee0 <putchar_unlocked@plt+0x2168>
   12ed4:	add	ip, ip, #1
   12ed8:	cmp	ip, #10
   12edc:	bne	12ec4 <putchar_unlocked@plt+0x214c>
   12ee0:	str	ip, [sp, #4]
   12ee4:	str	lr, [sp]
   12ee8:	bl	12ab0 <putchar_unlocked@plt+0x1d38>
   12eec:	add	sp, sp, #52	; 0x34
   12ef0:	pop	{r4, r5, pc}
   12ef4:	push	{r3}		; (str r3, [sp, #-4]!)
   12ef8:	push	{r0, r1, r2, r3, lr}
   12efc:	add	r3, sp, #24
   12f00:	str	r3, [sp, #12]
   12f04:	str	r3, [sp]
   12f08:	ldr	r3, [sp, #20]
   12f0c:	bl	12eb0 <putchar_unlocked@plt+0x2138>
   12f10:	add	sp, sp, #16
   12f14:	pop	{lr}		; (ldr lr, [sp], #4)
   12f18:	add	sp, sp, #4
   12f1c:	bx	lr
   12f20:	ldr	r3, [pc, #116]	; 12f9c <putchar_unlocked@plt+0x2224>
   12f24:	push	{r4, lr}
   12f28:	mov	r0, #10
   12f2c:	ldr	r1, [r3]
   12f30:	bl	10be0 <fputc_unlocked@plt>
   12f34:	mov	r2, #5
   12f38:	ldr	r1, [pc, #96]	; 12fa0 <putchar_unlocked@plt+0x2228>
   12f3c:	mov	r0, #0
   12f40:	bl	10bec <dcgettext@plt>
   12f44:	ldr	r2, [pc, #88]	; 12fa4 <putchar_unlocked@plt+0x222c>
   12f48:	mov	r1, r0
   12f4c:	mov	r0, #1
   12f50:	bl	10ce8 <__printf_chk@plt>
   12f54:	mov	r2, #5
   12f58:	ldr	r1, [pc, #72]	; 12fa8 <putchar_unlocked@plt+0x2230>
   12f5c:	mov	r0, #0
   12f60:	bl	10bec <dcgettext@plt>
   12f64:	ldr	r3, [pc, #64]	; 12fac <putchar_unlocked@plt+0x2234>
   12f68:	ldr	r2, [pc, #64]	; 12fb0 <putchar_unlocked@plt+0x2238>
   12f6c:	mov	r1, r0
   12f70:	mov	r0, #1
   12f74:	bl	10ce8 <__printf_chk@plt>
   12f78:	mov	r2, #5
   12f7c:	ldr	r1, [pc, #48]	; 12fb4 <putchar_unlocked@plt+0x223c>
   12f80:	mov	r0, #0
   12f84:	bl	10bec <dcgettext@plt>
   12f88:	ldr	r2, [pc, #40]	; 12fb8 <putchar_unlocked@plt+0x2240>
   12f8c:	pop	{r4, lr}
   12f90:	mov	r1, r0
   12f94:	mov	r0, #1
   12f98:	b	10ce8 <__printf_chk@plt>
   12f9c:	andeq	r5, r2, ip, lsr #2
   12fa0:	andeq	r4, r1, r6, lsl #13
   12fa4:	muleq	r1, sl, r6
   12fa8:			; <UNDEFINED> instruction: 0x000146b0
   12fac:	andeq	r4, r1, r0, lsl #3
   12fb0:	andeq	r4, r1, r8, lsr #3
   12fb4:	andeq	r4, r1, r4, asr #13
   12fb8:	andeq	r4, r1, fp, ror #13
   12fbc:	push	{r4, lr}
   12fc0:	bl	134d8 <putchar_unlocked@plt+0x2760>
   12fc4:	cmp	r0, #0
   12fc8:	popne	{r4, pc}
   12fcc:	bl	13450 <putchar_unlocked@plt+0x26d8>
   12fd0:	push	{r4, lr}
   12fd4:	bl	134d8 <putchar_unlocked@plt+0x2760>
   12fd8:	cmp	r0, #0
   12fdc:	popne	{r4, pc}
   12fe0:	bl	13450 <putchar_unlocked@plt+0x26d8>
   12fe4:	b	12fbc <putchar_unlocked@plt+0x2244>
   12fe8:	push	{r4, r5, r6, lr}
   12fec:	mov	r5, r0
   12ff0:	mov	r4, r1
   12ff4:	bl	13518 <putchar_unlocked@plt+0x27a0>
   12ff8:	cmp	r0, #0
   12ffc:	popne	{r4, r5, r6, pc}
   13000:	adds	r4, r4, #0
   13004:	movne	r4, #1
   13008:	cmp	r5, #0
   1300c:	orreq	r4, r4, #1
   13010:	cmp	r4, #0
   13014:	popeq	{r4, r5, r6, pc}
   13018:	bl	13450 <putchar_unlocked@plt+0x26d8>
   1301c:	push	{r4, lr}
   13020:	cmp	r1, #0
   13024:	orreq	r1, r1, #1
   13028:	bl	13518 <putchar_unlocked@plt+0x27a0>
   1302c:	cmp	r0, #0
   13030:	popne	{r4, pc}
   13034:	bl	13450 <putchar_unlocked@plt+0x26d8>
   13038:	push	{r4, r5, r6, lr}
   1303c:	mov	r6, r0
   13040:	mov	r5, r1
   13044:	mov	r4, r2
   13048:	bl	138d8 <putchar_unlocked@plt+0x2b60>
   1304c:	cmp	r0, #0
   13050:	popne	{r4, r5, r6, pc}
   13054:	cmp	r6, #0
   13058:	beq	13068 <putchar_unlocked@plt+0x22f0>
   1305c:	cmp	r5, #0
   13060:	cmpne	r4, #0
   13064:	popeq	{r4, r5, r6, pc}
   13068:	bl	13450 <putchar_unlocked@plt+0x26d8>
   1306c:	b	13038 <putchar_unlocked@plt+0x22c0>
   13070:	cmp	r2, #0
   13074:	cmpne	r1, #0
   13078:	moveq	r2, #1
   1307c:	moveq	r1, r2
   13080:	push	{r4, lr}
   13084:	bl	138d8 <putchar_unlocked@plt+0x2b60>
   13088:	cmp	r0, #0
   1308c:	popne	{r4, pc}
   13090:	bl	13450 <putchar_unlocked@plt+0x26d8>
   13094:	mov	r2, r1
   13098:	mov	r1, r0
   1309c:	mov	r0, #0
   130a0:	b	13038 <putchar_unlocked@plt+0x22c0>
   130a4:	mov	r2, r1
   130a8:	mov	r1, r0
   130ac:	mov	r0, #0
   130b0:	b	13070 <putchar_unlocked@plt+0x22f8>
   130b4:	push	{r4, r5, r6, r7, r8, lr}
   130b8:	subs	r7, r0, #0
   130bc:	mov	r5, r1
   130c0:	mov	r6, r2
   130c4:	ldr	r4, [r1]
   130c8:	bne	13104 <putchar_unlocked@plt+0x238c>
   130cc:	cmp	r4, #0
   130d0:	bne	130ec <putchar_unlocked@plt+0x2374>
   130d4:	mov	r1, r2
   130d8:	mov	r0, #64	; 0x40
   130dc:	bl	13a04 <putchar_unlocked@plt+0x2c8c>
   130e0:	cmp	r0, #0
   130e4:	movne	r4, r0
   130e8:	addeq	r4, r0, #1
   130ec:	mov	r2, r6
   130f0:	mov	r1, r4
   130f4:	mov	r0, r7
   130f8:	bl	13038 <putchar_unlocked@plt+0x22c0>
   130fc:	str	r4, [r5]
   13100:	pop	{r4, r5, r6, r7, r8, pc}
   13104:	lsr	r2, r4, #1
   13108:	add	r3, r2, #1
   1310c:	mvn	r3, r3
   13110:	cmp	r4, r3
   13114:	addls	r4, r4, #1
   13118:	addls	r4, r4, r2
   1311c:	bls	130ec <putchar_unlocked@plt+0x2374>
   13120:	bl	13450 <putchar_unlocked@plt+0x26d8>
   13124:	mov	r2, #1
   13128:	b	130b4 <putchar_unlocked@plt+0x233c>
   1312c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13130:	mov	sl, r0
   13134:	ldr	r8, [r1]
   13138:	mov	fp, r1
   1313c:	mov	r5, r2
   13140:	asrs	r4, r8, #1
   13144:	mov	r9, r3
   13148:	ldr	r7, [sp, #48]	; 0x30
   1314c:	bpl	131e8 <putchar_unlocked@plt+0x2470>
   13150:	rsb	r2, r4, #-2147483648	; 0x80000000
   13154:	cmp	r8, r2
   13158:	movge	r2, #0
   1315c:	movlt	r2, #1
   13160:	mvn	r3, r9
   13164:	cmp	r2, #0
   13168:	lsr	r3, r3, #31
   1316c:	addeq	r4, r4, r8
   13170:	mvnne	r4, #-2147483648	; 0x80000000
   13174:	mov	r0, r3
   13178:	cmp	r9, r4
   1317c:	movge	r0, #0
   13180:	andlt	r0, r0, #1
   13184:	cmp	r0, #0
   13188:	str	r3, [sp, #4]
   1318c:	bne	1335c <putchar_unlocked@plt+0x25e4>
   13190:	cmp	r7, #0
   13194:	bge	132a8 <putchar_unlocked@plt+0x2530>
   13198:	cmp	r4, #0
   1319c:	bge	13200 <putchar_unlocked@plt+0x2488>
   131a0:	mov	r1, r7
   131a4:	mvn	r0, #-2147483648	; 0x80000000
   131a8:	bl	13c10 <putchar_unlocked@plt+0x2e98>
   131ac:	cmp	r0, r4
   131b0:	movle	r0, #0
   131b4:	movgt	r0, #1
   131b8:	cmp	r0, #0
   131bc:	mvnne	r6, #-2147483648	; 0x80000000
   131c0:	beq	13210 <putchar_unlocked@plt+0x2498>
   131c4:	mov	r1, r7
   131c8:	mov	r0, r6
   131cc:	bl	13c10 <putchar_unlocked@plt+0x2e98>
   131d0:	mov	r1, r7
   131d4:	mov	r4, r0
   131d8:	mov	r0, r6
   131dc:	bl	13e30 <putchar_unlocked@plt+0x30b8>
   131e0:	sub	r1, r6, r1
   131e4:	b	13220 <putchar_unlocked@plt+0x24a8>
   131e8:	mvn	r2, #-2147483648	; 0x80000000
   131ec:	sub	r2, r2, r4
   131f0:	cmp	r8, r2
   131f4:	movle	r2, #0
   131f8:	movgt	r2, #1
   131fc:	b	13160 <putchar_unlocked@plt+0x23e8>
   13200:	cmn	r7, #1
   13204:	movne	r1, r7
   13208:	movne	r0, #-2147483648	; 0x80000000
   1320c:	bne	13374 <putchar_unlocked@plt+0x25fc>
   13210:	mul	r1, r7, r4
   13214:	cmp	r1, #63	; 0x3f
   13218:	movle	r6, #64	; 0x40
   1321c:	ble	131c4 <putchar_unlocked@plt+0x244c>
   13220:	cmp	sl, #0
   13224:	sub	r2, r4, r8
   13228:	streq	sl, [fp]
   1322c:	cmp	r2, r5
   13230:	bge	13304 <putchar_unlocked@plt+0x258c>
   13234:	cmp	r5, #0
   13238:	bge	132d0 <putchar_unlocked@plt+0x2558>
   1323c:	rsb	r2, r5, #-2147483648	; 0x80000000
   13240:	cmp	r8, r2
   13244:	movge	r2, #0
   13248:	movlt	r2, #1
   1324c:	cmp	r2, #0
   13250:	bne	132a4 <putchar_unlocked@plt+0x252c>
   13254:	ldr	r0, [sp, #4]
   13258:	add	r5, r8, r5
   1325c:	cmp	r9, r5
   13260:	movge	r0, #0
   13264:	andlt	r0, r0, #1
   13268:	cmp	r0, #0
   1326c:	mov	r4, r5
   13270:	bne	132a4 <putchar_unlocked@plt+0x252c>
   13274:	cmp	r7, #0
   13278:	bge	13318 <putchar_unlocked@plt+0x25a0>
   1327c:	cmp	r5, #0
   13280:	bge	132f0 <putchar_unlocked@plt+0x2578>
   13284:	mov	r1, r7
   13288:	mvn	r0, #-2147483648	; 0x80000000
   1328c:	bl	13c10 <putchar_unlocked@plt+0x2e98>
   13290:	cmp	r5, r0
   13294:	movge	r0, #0
   13298:	movlt	r0, #1
   1329c:	cmp	r0, #0
   132a0:	beq	13300 <putchar_unlocked@plt+0x2588>
   132a4:	bl	13450 <putchar_unlocked@plt+0x26d8>
   132a8:	beq	13210 <putchar_unlocked@plt+0x2498>
   132ac:	cmp	r4, #0
   132b0:	bge	1336c <putchar_unlocked@plt+0x25f4>
   132b4:	cmn	r4, #1
   132b8:	beq	13210 <putchar_unlocked@plt+0x2498>
   132bc:	mov	r1, r4
   132c0:	mov	r0, #-2147483648	; 0x80000000
   132c4:	bl	13c10 <putchar_unlocked@plt+0x2e98>
   132c8:	cmp	r7, r0
   132cc:	b	131b0 <putchar_unlocked@plt+0x2438>
   132d0:	cmp	r8, #0
   132d4:	blt	13254 <putchar_unlocked@plt+0x24dc>
   132d8:	mvn	r2, #-2147483648	; 0x80000000
   132dc:	sub	r2, r2, r5
   132e0:	cmp	r8, r2
   132e4:	movle	r2, #0
   132e8:	movgt	r2, #1
   132ec:	b	1324c <putchar_unlocked@plt+0x24d4>
   132f0:	cmn	r7, #1
   132f4:	movne	r1, r7
   132f8:	movne	r0, #-2147483648	; 0x80000000
   132fc:	bne	13350 <putchar_unlocked@plt+0x25d8>
   13300:	mul	r1, r5, r7
   13304:	mov	r0, sl
   13308:	bl	12fe8 <putchar_unlocked@plt+0x2270>
   1330c:	str	r4, [fp]
   13310:	add	sp, sp, #12
   13314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13318:	beq	13300 <putchar_unlocked@plt+0x2588>
   1331c:	cmp	r5, #0
   13320:	movge	r1, r7
   13324:	mvnge	r0, #-2147483648	; 0x80000000
   13328:	bge	13350 <putchar_unlocked@plt+0x25d8>
   1332c:	cmn	r5, #1
   13330:	beq	13300 <putchar_unlocked@plt+0x2588>
   13334:	mov	r1, r5
   13338:	mov	r0, #-2147483648	; 0x80000000
   1333c:	bl	13c10 <putchar_unlocked@plt+0x2e98>
   13340:	cmp	r7, r0
   13344:	movle	r0, #0
   13348:	movgt	r0, #1
   1334c:	b	1329c <putchar_unlocked@plt+0x2524>
   13350:	bl	13c10 <putchar_unlocked@plt+0x2e98>
   13354:	cmp	r5, r0
   13358:	b	13344 <putchar_unlocked@plt+0x25cc>
   1335c:	cmp	r7, #0
   13360:	mov	r4, r9
   13364:	blt	13200 <putchar_unlocked@plt+0x2488>
   13368:	beq	13210 <putchar_unlocked@plt+0x2498>
   1336c:	mov	r1, r7
   13370:	mvn	r0, #-2147483648	; 0x80000000
   13374:	bl	13c10 <putchar_unlocked@plt+0x2e98>
   13378:	cmp	r0, r4
   1337c:	movge	r0, #0
   13380:	movlt	r0, #1
   13384:	b	131b8 <putchar_unlocked@plt+0x2440>
   13388:	push	{r4, lr}
   1338c:	bl	13490 <putchar_unlocked@plt+0x2718>
   13390:	cmp	r0, #0
   13394:	popne	{r4, pc}
   13398:	bl	13450 <putchar_unlocked@plt+0x26d8>
   1339c:	mov	r1, #1
   133a0:	b	13388 <putchar_unlocked@plt+0x2610>
   133a4:	push	{r4, lr}
   133a8:	bl	13490 <putchar_unlocked@plt+0x2718>
   133ac:	cmp	r0, #0
   133b0:	popne	{r4, pc}
   133b4:	bl	13450 <putchar_unlocked@plt+0x26d8>
   133b8:	mov	r1, #1
   133bc:	b	133a4 <putchar_unlocked@plt+0x262c>
   133c0:	push	{r4, r5, r6, lr}
   133c4:	mov	r4, r1
   133c8:	mov	r5, r0
   133cc:	mov	r0, r1
   133d0:	bl	12fbc <putchar_unlocked@plt+0x2244>
   133d4:	mov	r2, r4
   133d8:	mov	r1, r5
   133dc:	pop	{r4, r5, r6, lr}
   133e0:	b	10bb0 <memcpy@plt>
   133e4:	push	{r4, r5, r6, lr}
   133e8:	mov	r4, r1
   133ec:	mov	r5, r0
   133f0:	mov	r0, r1
   133f4:	bl	12fd0 <putchar_unlocked@plt+0x2258>
   133f8:	mov	r2, r4
   133fc:	mov	r1, r5
   13400:	pop	{r4, r5, r6, lr}
   13404:	b	10bb0 <memcpy@plt>
   13408:	push	{r4, r5, r6, lr}
   1340c:	mov	r5, r0
   13410:	add	r0, r1, #1
   13414:	mov	r4, r1
   13418:	bl	12fd0 <putchar_unlocked@plt+0x2258>
   1341c:	mov	r2, #0
   13420:	mov	r1, r5
   13424:	strb	r2, [r0, r4]
   13428:	mov	r2, r4
   1342c:	pop	{r4, r5, r6, lr}
   13430:	b	10bb0 <memcpy@plt>
   13434:	push	{r4, lr}
   13438:	mov	r4, r0
   1343c:	bl	10cb8 <strlen@plt>
   13440:	add	r1, r0, #1
   13444:	mov	r0, r4
   13448:	pop	{r4, lr}
   1344c:	b	133c0 <putchar_unlocked@plt+0x2648>
   13450:	ldr	r3, [pc, #44]	; 13484 <putchar_unlocked@plt+0x270c>
   13454:	push	{r4, lr}
   13458:	mov	r2, #5
   1345c:	ldr	r1, [pc, #36]	; 13488 <putchar_unlocked@plt+0x2710>
   13460:	mov	r0, #0
   13464:	ldr	r4, [r3]
   13468:	bl	10bec <dcgettext@plt>
   1346c:	ldr	r2, [pc, #24]	; 1348c <putchar_unlocked@plt+0x2714>
   13470:	mov	r1, #0
   13474:	mov	r3, r0
   13478:	mov	r0, r4
   1347c:	bl	10c58 <error@plt>
   13480:	bl	10d6c <abort@plt>
   13484:	ldrdeq	r5, [r2], -r4
   13488:	andeq	r4, r1, r7, lsr r7
   1348c:	andeq	r4, r1, r6, lsr #6
   13490:	cmp	r1, #0
   13494:	cmpne	r0, #0
   13498:	moveq	r1, #1
   1349c:	moveq	r0, r1
   134a0:	umull	r2, r3, r0, r1
   134a4:	adds	r3, r3, #0
   134a8:	movne	r3, #1
   134ac:	cmp	r2, #0
   134b0:	blt	134c0 <putchar_unlocked@plt+0x2748>
   134b4:	cmp	r3, #0
   134b8:	bne	134c0 <putchar_unlocked@plt+0x2748>
   134bc:	b	10b5c <calloc@plt>
   134c0:	push	{r4, lr}
   134c4:	bl	10cc4 <__errno_location@plt>
   134c8:	mov	r3, #12
   134cc:	str	r3, [r0]
   134d0:	mov	r0, #0
   134d4:	pop	{r4, pc}
   134d8:	cmp	r0, #0
   134dc:	mov	r3, #0
   134e0:	moveq	r0, #1
   134e4:	adds	r3, r3, #0
   134e8:	movne	r3, #1
   134ec:	cmp	r0, #0
   134f0:	blt	13500 <putchar_unlocked@plt+0x2788>
   134f4:	cmp	r3, #0
   134f8:	bne	13500 <putchar_unlocked@plt+0x2788>
   134fc:	b	10c64 <malloc@plt>
   13500:	push	{r4, lr}
   13504:	bl	10cc4 <__errno_location@plt>
   13508:	mov	r3, #12
   1350c:	str	r3, [r0]
   13510:	mov	r0, #0
   13514:	pop	{r4, pc}
   13518:	cmp	r0, #0
   1351c:	push	{r4, lr}
   13520:	mov	r4, r1
   13524:	bne	13534 <putchar_unlocked@plt+0x27bc>
   13528:	mov	r0, r1
   1352c:	pop	{r4, lr}
   13530:	b	134d8 <putchar_unlocked@plt+0x2760>
   13534:	cmp	r1, #0
   13538:	bne	13548 <putchar_unlocked@plt+0x27d0>
   1353c:	bl	1376c <putchar_unlocked@plt+0x29f4>
   13540:	mov	r0, #0
   13544:	pop	{r4, pc}
   13548:	cmp	r1, #0
   1354c:	blt	1355c <putchar_unlocked@plt+0x27e4>
   13550:	mov	r3, #0
   13554:	cmp	r3, r3
   13558:	beq	1356c <putchar_unlocked@plt+0x27f4>
   1355c:	bl	10cc4 <__errno_location@plt>
   13560:	mov	r3, #12
   13564:	str	r3, [r0]
   13568:	b	13540 <putchar_unlocked@plt+0x27c8>
   1356c:	pop	{r4, lr}
   13570:	b	10bf8 <realloc@plt>
   13574:	mov	r2, r0
   13578:	push	{r4, lr}
   1357c:	mov	r0, r2
   13580:	ldrb	r3, [r2]
   13584:	add	r1, r2, #1
   13588:	cmp	r3, #47	; 0x2f
   1358c:	beq	135b0 <putchar_unlocked@plt+0x2838>
   13590:	mov	r3, #0
   13594:	mov	lr, #1
   13598:	mov	r4, r3
   1359c:	mov	ip, r2
   135a0:	ldrb	r1, [r2], #1
   135a4:	cmp	r1, #0
   135a8:	bne	135b8 <putchar_unlocked@plt+0x2840>
   135ac:	pop	{r4, pc}
   135b0:	mov	r2, r1
   135b4:	b	1357c <putchar_unlocked@plt+0x2804>
   135b8:	cmp	r1, #47	; 0x2f
   135bc:	moveq	r3, lr
   135c0:	beq	1359c <putchar_unlocked@plt+0x2824>
   135c4:	cmp	r3, #0
   135c8:	movne	r0, ip
   135cc:	movne	r3, r4
   135d0:	b	1359c <putchar_unlocked@plt+0x2824>
   135d4:	push	{r4, lr}
   135d8:	mov	r4, r0
   135dc:	bl	10cb8 <strlen@plt>
   135e0:	cmp	r0, #1
   135e4:	popls	{r4, pc}
   135e8:	sub	r3, r0, #1
   135ec:	ldrb	r2, [r4, r3]
   135f0:	cmp	r2, #47	; 0x2f
   135f4:	beq	135fc <putchar_unlocked@plt+0x2884>
   135f8:	pop	{r4, pc}
   135fc:	mov	r0, r3
   13600:	b	135e0 <putchar_unlocked@plt+0x2868>
   13604:	push	{r4, r5, r6, lr}
   13608:	mov	r4, r0
   1360c:	bl	10c34 <__fpending@plt>
   13610:	mov	r5, r0
   13614:	mov	r0, r4
   13618:	bl	10c40 <ferror_unlocked@plt>
   1361c:	mov	r6, r0
   13620:	mov	r0, r4
   13624:	bl	13674 <putchar_unlocked@plt+0x28fc>
   13628:	cmp	r6, #0
   1362c:	mov	r4, r0
   13630:	bne	1365c <putchar_unlocked@plt+0x28e4>
   13634:	cmp	r0, #0
   13638:	beq	13654 <putchar_unlocked@plt+0x28dc>
   1363c:	cmp	r5, #0
   13640:	bne	1366c <putchar_unlocked@plt+0x28f4>
   13644:	bl	10cc4 <__errno_location@plt>
   13648:	ldr	r4, [r0]
   1364c:	subs	r4, r4, #9
   13650:	mvnne	r4, #0
   13654:	mov	r0, r4
   13658:	pop	{r4, r5, r6, pc}
   1365c:	cmp	r0, #0
   13660:	bne	1366c <putchar_unlocked@plt+0x28f4>
   13664:	bl	10cc4 <__errno_location@plt>
   13668:	str	r4, [r0]
   1366c:	mvn	r4, #0
   13670:	b	13654 <putchar_unlocked@plt+0x28dc>
   13674:	push	{r0, r1, r2, r4, r5, lr}
   13678:	mov	r4, r0
   1367c:	bl	10cf4 <fileno@plt>
   13680:	cmp	r0, #0
   13684:	mov	r0, r4
   13688:	bge	13698 <putchar_unlocked@plt+0x2920>
   1368c:	add	sp, sp, #12
   13690:	pop	{r4, r5, lr}
   13694:	b	10d0c <fclose@plt>
   13698:	bl	10c7c <__freading@plt>
   1369c:	cmp	r0, #0
   136a0:	bne	136dc <putchar_unlocked@plt+0x2964>
   136a4:	mov	r0, r4
   136a8:	bl	1371c <putchar_unlocked@plt+0x29a4>
   136ac:	cmp	r0, #0
   136b0:	bne	13710 <putchar_unlocked@plt+0x2998>
   136b4:	mov	r5, #0
   136b8:	mov	r0, r4
   136bc:	bl	10d0c <fclose@plt>
   136c0:	cmp	r5, #0
   136c4:	beq	136d4 <putchar_unlocked@plt+0x295c>
   136c8:	bl	10cc4 <__errno_location@plt>
   136cc:	str	r5, [r0]
   136d0:	mvn	r0, #0
   136d4:	add	sp, sp, #12
   136d8:	pop	{r4, r5, pc}
   136dc:	mov	r0, r4
   136e0:	bl	10cf4 <fileno@plt>
   136e4:	mov	r3, #1
   136e8:	str	r3, [sp]
   136ec:	mov	r2, #0
   136f0:	mov	r3, #0
   136f4:	bl	10c1c <lseek64@plt>
   136f8:	mvn	r3, #0
   136fc:	mvn	r2, #0
   13700:	cmp	r1, r3
   13704:	cmpeq	r0, r2
   13708:	bne	136a4 <putchar_unlocked@plt+0x292c>
   1370c:	b	136b4 <putchar_unlocked@plt+0x293c>
   13710:	bl	10cc4 <__errno_location@plt>
   13714:	ldr	r5, [r0]
   13718:	b	136b8 <putchar_unlocked@plt+0x2940>
   1371c:	push	{r0, r1, r4, lr}
   13720:	subs	r4, r0, #0
   13724:	bne	13738 <putchar_unlocked@plt+0x29c0>
   13728:	mov	r0, r4
   1372c:	add	sp, sp, #8
   13730:	pop	{r4, lr}
   13734:	b	10b8c <fflush@plt>
   13738:	bl	10c7c <__freading@plt>
   1373c:	cmp	r0, #0
   13740:	beq	13728 <putchar_unlocked@plt+0x29b0>
   13744:	ldr	r3, [r4]
   13748:	tst	r3, #256	; 0x100
   1374c:	beq	13728 <putchar_unlocked@plt+0x29b0>
   13750:	mov	r3, #1
   13754:	str	r3, [sp]
   13758:	mov	r2, #0
   1375c:	mov	r3, #0
   13760:	mov	r0, r4
   13764:	bl	137c0 <putchar_unlocked@plt+0x2a48>
   13768:	b	13728 <putchar_unlocked@plt+0x29b0>
   1376c:	push	{r0, r1, r2, r4, r5, lr}
   13770:	mov	r5, r0
   13774:	bl	10cc4 <__errno_location@plt>
   13778:	ldr	r3, [r0]
   1377c:	mov	r4, r0
   13780:	str	r3, [sp]
   13784:	str	r3, [sp, #4]
   13788:	mov	r3, #0
   1378c:	str	r3, [r0]
   13790:	mov	r0, r5
   13794:	bl	10b98 <free@plt>
   13798:	ldr	r3, [r4]
   1379c:	add	r2, sp, #8
   137a0:	cmp	r3, #0
   137a4:	moveq	r3, #4
   137a8:	movne	r3, #0
   137ac:	add	r3, r2, r3
   137b0:	ldr	r3, [r3, #-8]
   137b4:	str	r3, [r4]
   137b8:	add	sp, sp, #12
   137bc:	pop	{r4, r5, pc}
   137c0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   137c4:	mov	r4, r0
   137c8:	ldmib	r0, {ip, lr}
   137cc:	ldr	r8, [sp, #32]
   137d0:	cmp	lr, ip
   137d4:	bne	13840 <putchar_unlocked@plt+0x2ac8>
   137d8:	ldr	lr, [r0, #20]
   137dc:	ldr	ip, [r0, #16]
   137e0:	cmp	lr, ip
   137e4:	bne	13840 <putchar_unlocked@plt+0x2ac8>
   137e8:	ldr	r5, [r0, #36]	; 0x24
   137ec:	cmp	r5, #0
   137f0:	bne	13840 <putchar_unlocked@plt+0x2ac8>
   137f4:	mov	r6, r2
   137f8:	mov	r7, r3
   137fc:	bl	10cf4 <fileno@plt>
   13800:	mov	r2, r6
   13804:	mov	r3, r7
   13808:	str	r8, [sp]
   1380c:	bl	10c1c <lseek64@plt>
   13810:	mvn	r3, #0
   13814:	mvn	r2, #0
   13818:	cmp	r1, r3
   1381c:	cmpeq	r0, r2
   13820:	mvneq	r0, #0
   13824:	ldrne	r3, [r4]
   13828:	strdne	r0, [r4, #80]	; 0x50
   1382c:	movne	r0, r5
   13830:	bicne	r3, r3, #16
   13834:	strne	r3, [r4]
   13838:	add	sp, sp, #8
   1383c:	pop	{r4, r5, r6, r7, r8, pc}
   13840:	str	r8, [sp, #32]
   13844:	mov	r0, r4
   13848:	add	sp, sp, #8
   1384c:	pop	{r4, r5, r6, r7, r8, lr}
   13850:	b	10d18 <fseeko64@plt>
   13854:	push	{r4, lr}
   13858:	mov	r0, #14
   1385c:	bl	10d3c <nl_langinfo@plt>
   13860:	ldr	r3, [pc, #24]	; 13880 <putchar_unlocked@plt+0x2b08>
   13864:	cmp	r0, #0
   13868:	moveq	r0, r3
   1386c:	ldr	r3, [pc, #16]	; 13884 <putchar_unlocked@plt+0x2b0c>
   13870:	ldrb	r2, [r0]
   13874:	cmp	r2, #0
   13878:	moveq	r0, r3
   1387c:	pop	{r4, pc}
   13880:	andeq	r4, r1, r6, asr #32
   13884:	andeq	r4, r1, r8, asr #14
   13888:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1388c:	subs	r5, r0, #0
   13890:	addeq	r5, sp, #4
   13894:	mov	r0, r5
   13898:	mov	r7, r2
   1389c:	mov	r6, r1
   138a0:	bl	10c4c <mbrtowc@plt>
   138a4:	cmp	r7, #0
   138a8:	cmnne	r0, #3
   138ac:	mov	r4, r0
   138b0:	bls	138cc <putchar_unlocked@plt+0x2b54>
   138b4:	mov	r0, #0
   138b8:	bl	13924 <putchar_unlocked@plt+0x2bac>
   138bc:	cmp	r0, #0
   138c0:	moveq	r4, #1
   138c4:	ldrbeq	r3, [r6]
   138c8:	streq	r3, [r5]
   138cc:	mov	r0, r4
   138d0:	add	sp, sp, #12
   138d4:	pop	{r4, r5, r6, r7, pc}
   138d8:	push	{r4, r5, r6, lr}
   138dc:	subs	r4, r2, #0
   138e0:	mov	r6, r0
   138e4:	mov	r5, r1
   138e8:	beq	13900 <putchar_unlocked@plt+0x2b88>
   138ec:	mov	r1, r4
   138f0:	mvn	r0, #0
   138f4:	bl	13a04 <putchar_unlocked@plt+0x2c8c>
   138f8:	cmp	r0, r5
   138fc:	bcc	13910 <putchar_unlocked@plt+0x2b98>
   13900:	mul	r1, r5, r4
   13904:	mov	r0, r6
   13908:	pop	{r4, r5, r6, lr}
   1390c:	b	13518 <putchar_unlocked@plt+0x27a0>
   13910:	bl	10cc4 <__errno_location@plt>
   13914:	mov	r3, #12
   13918:	str	r3, [r0]
   1391c:	mov	r0, #0
   13920:	pop	{r4, r5, r6, pc}
   13924:	push	{lr}		; (str lr, [sp, #-4]!)
   13928:	sub	sp, sp, #268	; 0x10c
   1392c:	ldr	r2, [pc, #64]	; 13974 <putchar_unlocked@plt+0x2bfc>
   13930:	add	r1, sp, #4
   13934:	bl	13980 <putchar_unlocked@plt+0x2c08>
   13938:	cmp	r0, #0
   1393c:	movne	r0, #0
   13940:	bne	1396c <putchar_unlocked@plt+0x2bf4>
   13944:	ldr	r1, [pc, #44]	; 13978 <putchar_unlocked@plt+0x2c00>
   13948:	add	r0, sp, #4
   1394c:	bl	10b80 <strcmp@plt>
   13950:	cmp	r0, #0
   13954:	beq	1396c <putchar_unlocked@plt+0x2bf4>
   13958:	ldr	r1, [pc, #28]	; 1397c <putchar_unlocked@plt+0x2c04>
   1395c:	add	r0, sp, #4
   13960:	bl	10b80 <strcmp@plt>
   13964:	adds	r0, r0, #0
   13968:	movne	r0, #1
   1396c:	add	sp, sp, #268	; 0x10c
   13970:	pop	{pc}		; (ldr pc, [sp], #4)
   13974:	andeq	r0, r0, r1, lsl #2
   13978:	andeq	r4, r1, lr, asr #14
   1397c:	andeq	r4, r1, r0, asr r7
   13980:	push	{r4, r5, r6, lr}
   13984:	mov	r5, r1
   13988:	mov	r1, #0
   1398c:	mov	r4, r2
   13990:	bl	10d24 <setlocale@plt>
   13994:	subs	r6, r0, #0
   13998:	bne	139ac <putchar_unlocked@plt+0x2c34>
   1399c:	cmp	r4, #0
   139a0:	strbne	r6, [r5]
   139a4:	mov	r0, #22
   139a8:	pop	{r4, r5, r6, pc}
   139ac:	bl	10cb8 <strlen@plt>
   139b0:	cmp	r4, r0
   139b4:	bls	139d0 <putchar_unlocked@plt+0x2c58>
   139b8:	add	r2, r0, #1
   139bc:	mov	r1, r6
   139c0:	mov	r0, r5
   139c4:	bl	10bb0 <memcpy@plt>
   139c8:	mov	r0, #0
   139cc:	pop	{r4, r5, r6, pc}
   139d0:	cmp	r4, #0
   139d4:	beq	139f4 <putchar_unlocked@plt+0x2c7c>
   139d8:	sub	r4, r4, #1
   139dc:	mov	r2, r4
   139e0:	mov	r1, r6
   139e4:	mov	r0, r5
   139e8:	bl	10bb0 <memcpy@plt>
   139ec:	mov	r3, #0
   139f0:	strb	r3, [r5, r4]
   139f4:	mov	r0, #34	; 0x22
   139f8:	pop	{r4, r5, r6, pc}
   139fc:	mov	r1, #0
   13a00:	b	10d24 <setlocale@plt>
   13a04:	subs	r2, r1, #1
   13a08:	bxeq	lr
   13a0c:	bcc	13be4 <putchar_unlocked@plt+0x2e6c>
   13a10:	cmp	r0, r1
   13a14:	bls	13bc8 <putchar_unlocked@plt+0x2e50>
   13a18:	tst	r1, r2
   13a1c:	beq	13bd4 <putchar_unlocked@plt+0x2e5c>
   13a20:	clz	r3, r0
   13a24:	clz	r2, r1
   13a28:	sub	r3, r2, r3
   13a2c:	rsbs	r3, r3, #31
   13a30:	addne	r3, r3, r3, lsl #1
   13a34:	mov	r2, #0
   13a38:	addne	pc, pc, r3, lsl #2
   13a3c:	nop			; (mov r0, r0)
   13a40:	cmp	r0, r1, lsl #31
   13a44:	adc	r2, r2, r2
   13a48:	subcs	r0, r0, r1, lsl #31
   13a4c:	cmp	r0, r1, lsl #30
   13a50:	adc	r2, r2, r2
   13a54:	subcs	r0, r0, r1, lsl #30
   13a58:	cmp	r0, r1, lsl #29
   13a5c:	adc	r2, r2, r2
   13a60:	subcs	r0, r0, r1, lsl #29
   13a64:	cmp	r0, r1, lsl #28
   13a68:	adc	r2, r2, r2
   13a6c:	subcs	r0, r0, r1, lsl #28
   13a70:	cmp	r0, r1, lsl #27
   13a74:	adc	r2, r2, r2
   13a78:	subcs	r0, r0, r1, lsl #27
   13a7c:	cmp	r0, r1, lsl #26
   13a80:	adc	r2, r2, r2
   13a84:	subcs	r0, r0, r1, lsl #26
   13a88:	cmp	r0, r1, lsl #25
   13a8c:	adc	r2, r2, r2
   13a90:	subcs	r0, r0, r1, lsl #25
   13a94:	cmp	r0, r1, lsl #24
   13a98:	adc	r2, r2, r2
   13a9c:	subcs	r0, r0, r1, lsl #24
   13aa0:	cmp	r0, r1, lsl #23
   13aa4:	adc	r2, r2, r2
   13aa8:	subcs	r0, r0, r1, lsl #23
   13aac:	cmp	r0, r1, lsl #22
   13ab0:	adc	r2, r2, r2
   13ab4:	subcs	r0, r0, r1, lsl #22
   13ab8:	cmp	r0, r1, lsl #21
   13abc:	adc	r2, r2, r2
   13ac0:	subcs	r0, r0, r1, lsl #21
   13ac4:	cmp	r0, r1, lsl #20
   13ac8:	adc	r2, r2, r2
   13acc:	subcs	r0, r0, r1, lsl #20
   13ad0:	cmp	r0, r1, lsl #19
   13ad4:	adc	r2, r2, r2
   13ad8:	subcs	r0, r0, r1, lsl #19
   13adc:	cmp	r0, r1, lsl #18
   13ae0:	adc	r2, r2, r2
   13ae4:	subcs	r0, r0, r1, lsl #18
   13ae8:	cmp	r0, r1, lsl #17
   13aec:	adc	r2, r2, r2
   13af0:	subcs	r0, r0, r1, lsl #17
   13af4:	cmp	r0, r1, lsl #16
   13af8:	adc	r2, r2, r2
   13afc:	subcs	r0, r0, r1, lsl #16
   13b00:	cmp	r0, r1, lsl #15
   13b04:	adc	r2, r2, r2
   13b08:	subcs	r0, r0, r1, lsl #15
   13b0c:	cmp	r0, r1, lsl #14
   13b10:	adc	r2, r2, r2
   13b14:	subcs	r0, r0, r1, lsl #14
   13b18:	cmp	r0, r1, lsl #13
   13b1c:	adc	r2, r2, r2
   13b20:	subcs	r0, r0, r1, lsl #13
   13b24:	cmp	r0, r1, lsl #12
   13b28:	adc	r2, r2, r2
   13b2c:	subcs	r0, r0, r1, lsl #12
   13b30:	cmp	r0, r1, lsl #11
   13b34:	adc	r2, r2, r2
   13b38:	subcs	r0, r0, r1, lsl #11
   13b3c:	cmp	r0, r1, lsl #10
   13b40:	adc	r2, r2, r2
   13b44:	subcs	r0, r0, r1, lsl #10
   13b48:	cmp	r0, r1, lsl #9
   13b4c:	adc	r2, r2, r2
   13b50:	subcs	r0, r0, r1, lsl #9
   13b54:	cmp	r0, r1, lsl #8
   13b58:	adc	r2, r2, r2
   13b5c:	subcs	r0, r0, r1, lsl #8
   13b60:	cmp	r0, r1, lsl #7
   13b64:	adc	r2, r2, r2
   13b68:	subcs	r0, r0, r1, lsl #7
   13b6c:	cmp	r0, r1, lsl #6
   13b70:	adc	r2, r2, r2
   13b74:	subcs	r0, r0, r1, lsl #6
   13b78:	cmp	r0, r1, lsl #5
   13b7c:	adc	r2, r2, r2
   13b80:	subcs	r0, r0, r1, lsl #5
   13b84:	cmp	r0, r1, lsl #4
   13b88:	adc	r2, r2, r2
   13b8c:	subcs	r0, r0, r1, lsl #4
   13b90:	cmp	r0, r1, lsl #3
   13b94:	adc	r2, r2, r2
   13b98:	subcs	r0, r0, r1, lsl #3
   13b9c:	cmp	r0, r1, lsl #2
   13ba0:	adc	r2, r2, r2
   13ba4:	subcs	r0, r0, r1, lsl #2
   13ba8:	cmp	r0, r1, lsl #1
   13bac:	adc	r2, r2, r2
   13bb0:	subcs	r0, r0, r1, lsl #1
   13bb4:	cmp	r0, r1
   13bb8:	adc	r2, r2, r2
   13bbc:	subcs	r0, r0, r1
   13bc0:	mov	r0, r2
   13bc4:	bx	lr
   13bc8:	moveq	r0, #1
   13bcc:	movne	r0, #0
   13bd0:	bx	lr
   13bd4:	clz	r2, r1
   13bd8:	rsb	r2, r2, #31
   13bdc:	lsr	r0, r0, r2
   13be0:	bx	lr
   13be4:	cmp	r0, #0
   13be8:	mvnne	r0, #0
   13bec:	b	13e50 <putchar_unlocked@plt+0x30d8>
   13bf0:	cmp	r1, #0
   13bf4:	beq	13be4 <putchar_unlocked@plt+0x2e6c>
   13bf8:	push	{r0, r1, lr}
   13bfc:	bl	13a04 <putchar_unlocked@plt+0x2c8c>
   13c00:	pop	{r1, r2, lr}
   13c04:	mul	r3, r2, r0
   13c08:	sub	r1, r1, r3
   13c0c:	bx	lr
   13c10:	cmp	r1, #0
   13c14:	beq	13e20 <putchar_unlocked@plt+0x30a8>
   13c18:	eor	ip, r0, r1
   13c1c:	rsbmi	r1, r1, #0
   13c20:	subs	r2, r1, #1
   13c24:	beq	13dec <putchar_unlocked@plt+0x3074>
   13c28:	movs	r3, r0
   13c2c:	rsbmi	r3, r0, #0
   13c30:	cmp	r3, r1
   13c34:	bls	13df8 <putchar_unlocked@plt+0x3080>
   13c38:	tst	r1, r2
   13c3c:	beq	13e08 <putchar_unlocked@plt+0x3090>
   13c40:	clz	r2, r3
   13c44:	clz	r0, r1
   13c48:	sub	r2, r0, r2
   13c4c:	rsbs	r2, r2, #31
   13c50:	addne	r2, r2, r2, lsl #1
   13c54:	mov	r0, #0
   13c58:	addne	pc, pc, r2, lsl #2
   13c5c:	nop			; (mov r0, r0)
   13c60:	cmp	r3, r1, lsl #31
   13c64:	adc	r0, r0, r0
   13c68:	subcs	r3, r3, r1, lsl #31
   13c6c:	cmp	r3, r1, lsl #30
   13c70:	adc	r0, r0, r0
   13c74:	subcs	r3, r3, r1, lsl #30
   13c78:	cmp	r3, r1, lsl #29
   13c7c:	adc	r0, r0, r0
   13c80:	subcs	r3, r3, r1, lsl #29
   13c84:	cmp	r3, r1, lsl #28
   13c88:	adc	r0, r0, r0
   13c8c:	subcs	r3, r3, r1, lsl #28
   13c90:	cmp	r3, r1, lsl #27
   13c94:	adc	r0, r0, r0
   13c98:	subcs	r3, r3, r1, lsl #27
   13c9c:	cmp	r3, r1, lsl #26
   13ca0:	adc	r0, r0, r0
   13ca4:	subcs	r3, r3, r1, lsl #26
   13ca8:	cmp	r3, r1, lsl #25
   13cac:	adc	r0, r0, r0
   13cb0:	subcs	r3, r3, r1, lsl #25
   13cb4:	cmp	r3, r1, lsl #24
   13cb8:	adc	r0, r0, r0
   13cbc:	subcs	r3, r3, r1, lsl #24
   13cc0:	cmp	r3, r1, lsl #23
   13cc4:	adc	r0, r0, r0
   13cc8:	subcs	r3, r3, r1, lsl #23
   13ccc:	cmp	r3, r1, lsl #22
   13cd0:	adc	r0, r0, r0
   13cd4:	subcs	r3, r3, r1, lsl #22
   13cd8:	cmp	r3, r1, lsl #21
   13cdc:	adc	r0, r0, r0
   13ce0:	subcs	r3, r3, r1, lsl #21
   13ce4:	cmp	r3, r1, lsl #20
   13ce8:	adc	r0, r0, r0
   13cec:	subcs	r3, r3, r1, lsl #20
   13cf0:	cmp	r3, r1, lsl #19
   13cf4:	adc	r0, r0, r0
   13cf8:	subcs	r3, r3, r1, lsl #19
   13cfc:	cmp	r3, r1, lsl #18
   13d00:	adc	r0, r0, r0
   13d04:	subcs	r3, r3, r1, lsl #18
   13d08:	cmp	r3, r1, lsl #17
   13d0c:	adc	r0, r0, r0
   13d10:	subcs	r3, r3, r1, lsl #17
   13d14:	cmp	r3, r1, lsl #16
   13d18:	adc	r0, r0, r0
   13d1c:	subcs	r3, r3, r1, lsl #16
   13d20:	cmp	r3, r1, lsl #15
   13d24:	adc	r0, r0, r0
   13d28:	subcs	r3, r3, r1, lsl #15
   13d2c:	cmp	r3, r1, lsl #14
   13d30:	adc	r0, r0, r0
   13d34:	subcs	r3, r3, r1, lsl #14
   13d38:	cmp	r3, r1, lsl #13
   13d3c:	adc	r0, r0, r0
   13d40:	subcs	r3, r3, r1, lsl #13
   13d44:	cmp	r3, r1, lsl #12
   13d48:	adc	r0, r0, r0
   13d4c:	subcs	r3, r3, r1, lsl #12
   13d50:	cmp	r3, r1, lsl #11
   13d54:	adc	r0, r0, r0
   13d58:	subcs	r3, r3, r1, lsl #11
   13d5c:	cmp	r3, r1, lsl #10
   13d60:	adc	r0, r0, r0
   13d64:	subcs	r3, r3, r1, lsl #10
   13d68:	cmp	r3, r1, lsl #9
   13d6c:	adc	r0, r0, r0
   13d70:	subcs	r3, r3, r1, lsl #9
   13d74:	cmp	r3, r1, lsl #8
   13d78:	adc	r0, r0, r0
   13d7c:	subcs	r3, r3, r1, lsl #8
   13d80:	cmp	r3, r1, lsl #7
   13d84:	adc	r0, r0, r0
   13d88:	subcs	r3, r3, r1, lsl #7
   13d8c:	cmp	r3, r1, lsl #6
   13d90:	adc	r0, r0, r0
   13d94:	subcs	r3, r3, r1, lsl #6
   13d98:	cmp	r3, r1, lsl #5
   13d9c:	adc	r0, r0, r0
   13da0:	subcs	r3, r3, r1, lsl #5
   13da4:	cmp	r3, r1, lsl #4
   13da8:	adc	r0, r0, r0
   13dac:	subcs	r3, r3, r1, lsl #4
   13db0:	cmp	r3, r1, lsl #3
   13db4:	adc	r0, r0, r0
   13db8:	subcs	r3, r3, r1, lsl #3
   13dbc:	cmp	r3, r1, lsl #2
   13dc0:	adc	r0, r0, r0
   13dc4:	subcs	r3, r3, r1, lsl #2
   13dc8:	cmp	r3, r1, lsl #1
   13dcc:	adc	r0, r0, r0
   13dd0:	subcs	r3, r3, r1, lsl #1
   13dd4:	cmp	r3, r1
   13dd8:	adc	r0, r0, r0
   13ddc:	subcs	r3, r3, r1
   13de0:	cmp	ip, #0
   13de4:	rsbmi	r0, r0, #0
   13de8:	bx	lr
   13dec:	teq	ip, r0
   13df0:	rsbmi	r0, r0, #0
   13df4:	bx	lr
   13df8:	movcc	r0, #0
   13dfc:	asreq	r0, ip, #31
   13e00:	orreq	r0, r0, #1
   13e04:	bx	lr
   13e08:	clz	r2, r1
   13e0c:	rsb	r2, r2, #31
   13e10:	cmp	ip, #0
   13e14:	lsr	r0, r3, r2
   13e18:	rsbmi	r0, r0, #0
   13e1c:	bx	lr
   13e20:	cmp	r0, #0
   13e24:	mvngt	r0, #-2147483648	; 0x80000000
   13e28:	movlt	r0, #-2147483648	; 0x80000000
   13e2c:	b	13e50 <putchar_unlocked@plt+0x30d8>
   13e30:	cmp	r1, #0
   13e34:	beq	13e20 <putchar_unlocked@plt+0x30a8>
   13e38:	push	{r0, r1, lr}
   13e3c:	bl	13c18 <putchar_unlocked@plt+0x2ea0>
   13e40:	pop	{r1, r2, lr}
   13e44:	mul	r3, r2, r0
   13e48:	sub	r1, r1, r3
   13e4c:	bx	lr
   13e50:	push	{r1, lr}
   13e54:	mov	r0, #8
   13e58:	bl	10b74 <raise@plt>
   13e5c:	pop	{r1, pc}
   13e60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e64:	mov	r7, r0
   13e68:	ldr	r6, [pc, #72]	; 13eb8 <putchar_unlocked@plt+0x3140>
   13e6c:	ldr	r5, [pc, #72]	; 13ebc <putchar_unlocked@plt+0x3144>
   13e70:	add	r6, pc, r6
   13e74:	add	r5, pc, r5
   13e78:	sub	r6, r6, r5
   13e7c:	mov	r8, r1
   13e80:	mov	r9, r2
   13e84:	bl	10b3c <calloc@plt-0x20>
   13e88:	asrs	r6, r6, #2
   13e8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e90:	mov	r4, #0
   13e94:	add	r4, r4, #1
   13e98:	ldr	r3, [r5], #4
   13e9c:	mov	r2, r9
   13ea0:	mov	r1, r8
   13ea4:	mov	r0, r7
   13ea8:	blx	r3
   13eac:	cmp	r6, r4
   13eb0:	bne	13e94 <putchar_unlocked@plt+0x311c>
   13eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13eb8:	muleq	r1, r8, r0
   13ebc:	muleq	r1, r0, r0
   13ec0:	bx	lr
   13ec4:	ldr	r3, [pc, #12]	; 13ed8 <putchar_unlocked@plt+0x3160>
   13ec8:	mov	r1, #0
   13ecc:	add	r3, pc, r3
   13ed0:	ldr	r2, [r3]
   13ed4:	b	10cd0 <__cxa_atexit@plt>
   13ed8:	strdeq	r1, [r1], -r8

Disassembly of section .fini:

00013edc <.fini>:
   13edc:	push	{r3, lr}
   13ee0:	pop	{r3, pc}
