
../repos/inetutils/src/dnsdomainname:     file format elf32-littlearm


Disassembly of section .init:

00010d1c <.init>:
   10d1c:	push	{r3, lr}
   10d20:	bl	10fc4 <__assert_fail@plt+0x48>
   10d24:	pop	{r3, pc}

Disassembly of section .plt:

00010d28 <calloc@plt-0x14>:
   10d28:	push	{lr}		; (str lr, [sp, #-4]!)
   10d2c:	ldr	lr, [pc, #4]	; 10d38 <calloc@plt-0x4>
   10d30:	add	lr, pc, lr
   10d34:	ldr	pc, [lr, #8]!
   10d38:	andeq	r8, r1, r8, asr #5

00010d3c <calloc@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #24, 20	; 0x18000
   10d44:	ldr	pc, [ip, #712]!	; 0x2c8

00010d48 <fputs_unlocked@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #24, 20	; 0x18000
   10d50:	ldr	pc, [ip, #704]!	; 0x2c0

00010d54 <raise@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #24, 20	; 0x18000
   10d5c:	ldr	pc, [ip, #696]!	; 0x2b8

00010d60 <strcmp@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #24, 20	; 0x18000
   10d68:	ldr	pc, [ip, #688]!	; 0x2b0

00010d6c <strtol@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #24, 20	; 0x18000
   10d74:	ldr	pc, [ip, #680]!	; 0x2a8

00010d78 <printf@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #24, 20	; 0x18000
   10d80:	ldr	pc, [ip, #672]!	; 0x2a0

00010d84 <memmove@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #664]!	; 0x298

00010d90 <strchrnul@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #656]!	; 0x290

00010d9c <free@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #648]!	; 0x288

00010da8 <gai_strerror@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #640]!	; 0x280

00010db4 <strndup@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #632]!	; 0x278

00010dc0 <memcpy@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #624]!	; 0x270

00010dcc <fwrite_unlocked@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #616]!	; 0x268

00010dd8 <sleep@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #608]!	; 0x260

00010de4 <realloc@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #600]!	; 0x258

00010df0 <strcasecmp@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #592]!	; 0x250

00010dfc <funlockfile@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #584]!	; 0x248

00010e08 <fwrite@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #576]!	; 0x240

00010e14 <error@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #568]!	; 0x238

00010e20 <gethostname@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #560]!	; 0x230

00010e2c <getenv@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #24, 20	; 0x18000
   10e34:	ldr	pc, [ip, #552]!	; 0x228

00010e38 <puts@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #24, 20	; 0x18000
   10e40:	ldr	pc, [ip, #544]!	; 0x220

00010e44 <malloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #24, 20	; 0x18000
   10e4c:	ldr	pc, [ip, #536]!	; 0x218

00010e50 <__libc_start_main@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #24, 20	; 0x18000
   10e58:	ldr	pc, [ip, #528]!	; 0x210

00010e5c <strerror@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #24, 20	; 0x18000
   10e64:	ldr	pc, [ip, #520]!	; 0x208

00010e68 <__ctype_tolower_loc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #24, 20	; 0x18000
   10e70:	ldr	pc, [ip, #512]!	; 0x200

00010e74 <__gmon_start__@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #24, 20	; 0x18000
   10e7c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e80 <mempcpy@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #24, 20	; 0x18000
   10e88:	ldr	pc, [ip, #496]!	; 0x1f0

00010e8c <__ctype_b_loc@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #24, 20	; 0x18000
   10e94:	ldr	pc, [ip, #488]!	; 0x1e8

00010e98 <exit@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #24, 20	; 0x18000
   10ea0:	ldr	pc, [ip, #480]!	; 0x1e0

00010ea4 <strlen@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #24, 20	; 0x18000
   10eac:	ldr	pc, [ip, #472]!	; 0x1d8

00010eb0 <strchr@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #24, 20	; 0x18000
   10eb8:	ldr	pc, [ip, #464]!	; 0x1d0

00010ebc <fprintf@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #24, 20	; 0x18000
   10ec4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec8 <__errno_location@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #24, 20	; 0x18000
   10ed0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ed4 <strerror_r@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #24, 20	; 0x18000
   10edc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ee0 <memset@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #24, 20	; 0x18000
   10ee8:	ldr	pc, [ip, #432]!	; 0x1b0

00010eec <memchr@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #24, 20	; 0x18000
   10ef4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef8 <__overflow@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #24, 20	; 0x18000
   10f00:	ldr	pc, [ip, #416]!	; 0x1a0

00010f04 <strrchr@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #24, 20	; 0x18000
   10f0c:	ldr	pc, [ip, #408]!	; 0x198

00010f10 <vfprintf@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #24, 20	; 0x18000
   10f18:	ldr	pc, [ip, #400]!	; 0x190

00010f1c <fputc@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #24, 20	; 0x18000
   10f24:	ldr	pc, [ip, #392]!	; 0x188

00010f28 <flockfile@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #24, 20	; 0x18000
   10f30:	ldr	pc, [ip, #384]!	; 0x180

00010f34 <vsnprintf@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #24, 20	; 0x18000
   10f3c:	ldr	pc, [ip, #376]!	; 0x178

00010f40 <qsort@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #24, 20	; 0x18000
   10f48:	ldr	pc, [ip, #368]!	; 0x170

00010f4c <freeaddrinfo@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #24, 20	; 0x18000
   10f54:	ldr	pc, [ip, #360]!	; 0x168

00010f58 <getaddrinfo@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #24, 20	; 0x18000
   10f60:	ldr	pc, [ip, #352]!	; 0x160

00010f64 <strncmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #24, 20	; 0x18000
   10f6c:	ldr	pc, [ip, #344]!	; 0x158

00010f70 <abort@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #24, 20	; 0x18000
   10f78:	ldr	pc, [ip, #336]!	; 0x150

00010f7c <__assert_fail@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #24, 20	; 0x18000
   10f84:	ldr	pc, [ip, #328]!	; 0x148

Disassembly of section .text:

00010f88 <argp_parse@@Base-0x83c>:
   10f88:	mov	fp, #0
   10f8c:	mov	lr, #0
   10f90:	pop	{r1}		; (ldr r1, [sp], #4)
   10f94:	mov	r2, sp
   10f98:	push	{r2}		; (str r2, [sp, #-4]!)
   10f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10fa0:	ldr	ip, [pc, #16]	; 10fb8 <__assert_fail@plt+0x3c>
   10fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa8:	ldr	r0, [pc, #12]	; 10fbc <__assert_fail@plt+0x40>
   10fac:	ldr	r3, [pc, #12]	; 10fc0 <__assert_fail@plt+0x44>
   10fb0:	bl	10e50 <__libc_start_main@plt>
   10fb4:	bl	10f70 <abort@plt>
   10fb8:	andeq	r7, r1, r0, ror #22
   10fbc:	andeq	r1, r1, ip, ror #2
   10fc0:	andeq	r7, r1, r0, lsl #22
   10fc4:	ldr	r3, [pc, #20]	; 10fe0 <__assert_fail@plt+0x64>
   10fc8:	ldr	r2, [pc, #20]	; 10fe4 <__assert_fail@plt+0x68>
   10fcc:	add	r3, pc, r3
   10fd0:	ldr	r2, [r3, r2]
   10fd4:	cmp	r2, #0
   10fd8:	bxeq	lr
   10fdc:	b	10e74 <__gmon_start__@plt>
   10fe0:	andeq	r8, r1, ip, lsr #32
   10fe4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10fe8:	ldr	r3, [pc, #28]	; 1100c <__assert_fail@plt+0x90>
   10fec:	ldr	r0, [pc, #28]	; 11010 <__assert_fail@plt+0x94>
   10ff0:	sub	r3, r3, r0
   10ff4:	cmp	r3, #6
   10ff8:	bxls	lr
   10ffc:	ldr	r3, [pc, #16]	; 11014 <__assert_fail@plt+0x98>
   11000:	cmp	r3, #0
   11004:	bxeq	lr
   11008:	bx	r3
   1100c:	andeq	r9, r2, pc, lsr r1
   11010:	andeq	r9, r2, ip, lsr r1
   11014:	andeq	r0, r0, r0
   11018:	ldr	r1, [pc, #36]	; 11044 <__assert_fail@plt+0xc8>
   1101c:	ldr	r0, [pc, #36]	; 11048 <__assert_fail@plt+0xcc>
   11020:	sub	r1, r1, r0
   11024:	asr	r1, r1, #2
   11028:	add	r1, r1, r1, lsr #31
   1102c:	asrs	r1, r1, #1
   11030:	bxeq	lr
   11034:	ldr	r3, [pc, #16]	; 1104c <__assert_fail@plt+0xd0>
   11038:	cmp	r3, #0
   1103c:	bxeq	lr
   11040:	bx	r3
   11044:	andeq	r9, r2, ip, lsr r1
   11048:	andeq	r9, r2, ip, lsr r1
   1104c:	andeq	r0, r0, r0
   11050:	push	{r4, lr}
   11054:	ldr	r4, [pc, #24]	; 11074 <__assert_fail@plt+0xf8>
   11058:	ldrb	r3, [r4]
   1105c:	cmp	r3, #0
   11060:	popne	{r4, pc}
   11064:	bl	10fe8 <__assert_fail@plt+0x6c>
   11068:	mov	r3, #1
   1106c:	strb	r3, [r4]
   11070:	pop	{r4, pc}
   11074:	andeq	r9, r2, r0, asr r1
   11078:	ldr	r0, [pc, #40]	; 110a8 <__assert_fail@plt+0x12c>
   1107c:	ldr	r3, [r0]
   11080:	cmp	r3, #0
   11084:	bne	1108c <__assert_fail@plt+0x110>
   11088:	b	11018 <__assert_fail@plt+0x9c>
   1108c:	ldr	r3, [pc, #24]	; 110ac <__assert_fail@plt+0x130>
   11090:	cmp	r3, #0
   11094:	beq	11088 <__assert_fail@plt+0x10c>
   11098:	push	{r4, lr}
   1109c:	blx	r3
   110a0:	pop	{r4, lr}
   110a4:	b	11018 <__assert_fail@plt+0x9c>
   110a8:	andeq	r8, r2, ip, lsl #30
   110ac:	andeq	r0, r0, r0
   110b0:	push	{r4, lr}
   110b4:	sub	sp, sp, #40	; 0x28
   110b8:	bl	129a0 <argp_parse@@Base+0x11dc>
   110bc:	subs	r4, r0, #0
   110c0:	beq	11130 <__assert_fail@plt+0x1b4>
   110c4:	mov	r2, #32
   110c8:	mov	r1, #0
   110cc:	add	r0, sp, #8
   110d0:	bl	10ee0 <memset@plt>
   110d4:	mov	r3, #2
   110d8:	str	r3, [sp, #8]
   110dc:	add	r3, sp, #4
   110e0:	add	r2, sp, #8
   110e4:	mov	r1, #0
   110e8:	mov	r0, r4
   110ec:	bl	10f58 <getaddrinfo@plt>
   110f0:	cmp	r0, #0
   110f4:	bne	11148 <__assert_fail@plt+0x1cc>
   110f8:	mov	r1, #46	; 0x2e
   110fc:	ldr	r3, [sp, #4]
   11100:	ldr	r0, [r3, #24]
   11104:	bl	10eb0 <strchr@plt>
   11108:	cmp	r0, #0
   1110c:	beq	11118 <__assert_fail@plt+0x19c>
   11110:	add	r0, r0, #1
   11114:	bl	10e38 <puts@plt>
   11118:	mov	r0, r4
   1111c:	bl	123b8 <argp_parse@@Base+0xbf4>
   11120:	ldr	r0, [sp, #4]
   11124:	bl	10f4c <freeaddrinfo@plt>
   11128:	add	sp, sp, #40	; 0x28
   1112c:	pop	{r4, pc}
   11130:	bl	10ec8 <__errno_location@plt>
   11134:	ldr	r2, [pc, #40]	; 11164 <__assert_fail@plt+0x1e8>
   11138:	ldr	r1, [r0]
   1113c:	mov	r0, #1
   11140:	bl	10e14 <error@plt>
   11144:	b	110c4 <__assert_fail@plt+0x148>
   11148:	bl	10da8 <gai_strerror@plt>
   1114c:	mov	r3, r0
   11150:	ldr	r2, [pc, #16]	; 11168 <__assert_fail@plt+0x1ec>
   11154:	mov	r1, #0
   11158:	mov	r0, #1
   1115c:	bl	10e14 <error@plt>
   11160:	b	110f8 <__assert_fail@plt+0x17c>
   11164:	andeq	r7, r1, r8, ror #24
   11168:	andeq	r7, r1, r4, lsl #25
   1116c:	push	{r7, lr}
   11170:	sub	sp, sp, #8
   11174:	mov	r7, r0
   11178:	mov	r6, r1
   1117c:	ldr	r0, [r1]
   11180:	bl	124c8 <argp_parse@@Base+0xd04>
   11184:	ldr	r2, [pc, #64]	; 111cc <__assert_fail@plt+0x250>
   11188:	ldr	r3, [pc, #64]	; 111d0 <__assert_fail@plt+0x254>
   1118c:	str	r2, [r3]
   11190:	ldr	r5, [pc, #60]	; 111d4 <__assert_fail@plt+0x258>
   11194:	mov	r1, r5
   11198:	ldr	r0, [pc, #56]	; 111d8 <__assert_fail@plt+0x25c>
   1119c:	bl	122d0 <argp_parse@@Base+0xb0c>
   111a0:	mov	r4, #0
   111a4:	str	r4, [sp, #4]
   111a8:	str	r4, [sp]
   111ac:	mov	r3, r4
   111b0:	mov	r2, r6
   111b4:	mov	r1, r7
   111b8:	add	r0, r5, #8
   111bc:	bl	117c4 <argp_parse@@Base>
   111c0:	bl	110b0 <__assert_fail@plt+0x134>
   111c4:	mov	r0, r4
   111c8:	bl	10e98 <exit@plt>
   111cc:	andeq	r7, r1, r8, lsl #25
   111d0:	andeq	r9, r2, ip, lsl #3
   111d4:	ldrdeq	r9, [r2], -ip
   111d8:	andeq	r7, r1, r0, lsr #25
   111dc:	ldr	ip, [r0]
   111e0:	cmp	ip, #0
   111e4:	beq	11238 <__assert_fail@plt+0x2bc>
   111e8:	push	{r4, r5, r6, lr}
   111ec:	mov	ip, r2
   111f0:	mov	r5, r1
   111f4:	mov	r4, r0
   111f8:	ldr	r2, [r0, #32]
   111fc:	str	r2, [r1, #36]	; 0x24
   11200:	ldr	r2, [r0, #24]
   11204:	str	r2, [r1, #28]
   11208:	ldr	r2, [r0, #28]
   1120c:	str	r2, [r1, #32]
   11210:	ldr	r2, [r0, #12]
   11214:	str	r2, [r1, #20]
   11218:	ldr	r6, [r0]
   1121c:	mov	r2, r1
   11220:	mov	r1, r3
   11224:	mov	r0, ip
   11228:	blx	r6
   1122c:	ldr	r3, [r5, #36]	; 0x24
   11230:	str	r3, [r4, #32]
   11234:	pop	{r4, r5, r6, pc}
   11238:	mov	r0, #7
   1123c:	bx	lr
   11240:	push	{r4, r5, r6, lr}
   11244:	ldr	r5, [r0, #16]
   11248:	ldr	r3, [r0]
   1124c:	cmp	r3, #0
   11250:	beq	11268 <__assert_fail@plt+0x2ec>
   11254:	ldr	r2, [r1, #8]
   11258:	add	r2, r2, #1
   1125c:	str	r2, [r1, #8]
   11260:	mov	r2, #0
   11264:	b	112bc <__assert_fail@plt+0x340>
   11268:	ldr	r3, [r0, #4]
   1126c:	cmp	r3, #0
   11270:	ldrne	r3, [r1, #8]
   11274:	addne	r3, r3, #1
   11278:	strne	r3, [r1, #8]
   1127c:	cmp	r5, #0
   11280:	popeq	{r4, r5, r6, pc}
   11284:	ldr	r0, [r5]
   11288:	cmp	r0, #0
   1128c:	popeq	{r4, r5, r6, pc}
   11290:	mov	r4, r1
   11294:	mov	r1, r4
   11298:	bl	11240 <__assert_fail@plt+0x2c4>
   1129c:	ldr	r3, [r4, #12]
   112a0:	add	r3, r3, #1
   112a4:	str	r3, [r4, #12]
   112a8:	ldr	r0, [r5, #16]!
   112ac:	cmp	r0, #0
   112b0:	bne	11294 <__assert_fail@plt+0x318>
   112b4:	pop	{r4, r5, r6, pc}
   112b8:	add	r2, r2, #1
   112bc:	add	r3, r3, #24
   112c0:	ldr	r0, [r3, #-20]	; 0xffffffec
   112c4:	cmp	r0, #0
   112c8:	bne	112b8 <__assert_fail@plt+0x33c>
   112cc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   112d0:	cmp	r0, #0
   112d4:	bne	112b8 <__assert_fail@plt+0x33c>
   112d8:	ldr	r0, [r3, #-8]
   112dc:	cmp	r0, #0
   112e0:	bne	112b8 <__assert_fail@plt+0x33c>
   112e4:	ldr	r0, [r3, #-4]
   112e8:	cmp	r0, #0
   112ec:	bne	112b8 <__assert_fail@plt+0x33c>
   112f0:	add	r0, r2, r2, lsl #1
   112f4:	ldr	r3, [r1]
   112f8:	add	r3, r3, r0
   112fc:	str	r3, [r1]
   11300:	ldr	r3, [r1, #4]
   11304:	add	r2, r3, r2
   11308:	str	r2, [r1, #4]
   1130c:	b	1127c <__assert_fail@plt+0x300>
   11310:	cmp	r0, #86	; 0x56
   11314:	beq	11320 <__assert_fail@plt+0x3a4>
   11318:	mov	r0, #7
   1131c:	bx	lr
   11320:	push	{r4, lr}
   11324:	mov	r4, r2
   11328:	ldr	r3, [pc, #100]	; 11394 <__assert_fail@plt+0x418>
   1132c:	ldr	r3, [r3]
   11330:	cmp	r3, #0
   11334:	beq	11358 <__assert_fail@plt+0x3dc>
   11338:	mov	r1, r2
   1133c:	ldr	r0, [r2, #48]	; 0x30
   11340:	blx	r3
   11344:	ldr	r3, [r4, #16]
   11348:	tst	r3, #32
   1134c:	beq	1138c <__assert_fail@plt+0x410>
   11350:	mov	r0, #0
   11354:	pop	{r4, pc}
   11358:	ldr	r3, [pc, #56]	; 11398 <__assert_fail@plt+0x41c>
   1135c:	ldr	r2, [r3]
   11360:	cmp	r2, #0
   11364:	beq	11378 <__assert_fail@plt+0x3fc>
   11368:	ldr	r1, [pc, #44]	; 1139c <__assert_fail@plt+0x420>
   1136c:	ldr	r0, [r4, #48]	; 0x30
   11370:	bl	10ebc <fprintf@plt>
   11374:	b	11344 <__assert_fail@plt+0x3c8>
   11378:	ldr	r2, [pc, #32]	; 113a0 <__assert_fail@plt+0x424>
   1137c:	ldr	r1, [pc, #32]	; 113a4 <__assert_fail@plt+0x428>
   11380:	mov	r0, r4
   11384:	bl	15b48 <argp_error@@Base>
   11388:	b	11344 <__assert_fail@plt+0x3c8>
   1138c:	mov	r0, #0
   11390:	bl	10e98 <exit@plt>
   11394:	andeq	r9, r2, r8, asr r1
   11398:	muleq	r2, r0, r1
   1139c:	andeq	r7, r1, r4, ror pc
   113a0:	ldrdeq	r7, [r1], -r8
   113a4:	andeq	r7, r1, r4, lsl #25
   113a8:	push	{r4, r5, r6, lr}
   113ac:	mov	r4, r2
   113b0:	cmn	r0, #3
   113b4:	beq	11450 <__assert_fail@plt+0x4d4>
   113b8:	mov	r5, r1
   113bc:	ble	113e8 <__assert_fail@plt+0x46c>
   113c0:	cmn	r0, #2
   113c4:	beq	11468 <__assert_fail@plt+0x4ec>
   113c8:	cmp	r0, #63	; 0x3f
   113cc:	bne	114ac <__assert_fail@plt+0x530>
   113d0:	ldr	r2, [pc, #228]	; 114bc <__assert_fail@plt+0x540>
   113d4:	ldr	r1, [r4, #48]	; 0x30
   113d8:	mov	r0, r4
   113dc:	bl	15a8c <argp_state_help@@Base>
   113e0:	mov	r0, #0
   113e4:	pop	{r4, r5, r6, pc}
   113e8:	cmn	r0, #4
   113ec:	bne	114ac <__assert_fail@plt+0x530>
   113f0:	mov	r2, #10
   113f4:	mov	r1, #0
   113f8:	ldr	r0, [pc, #192]	; 114c0 <__assert_fail@plt+0x544>
   113fc:	cmp	r5, r1
   11400:	movne	r0, r5
   11404:	bl	10d6c <strtol@plt>
   11408:	ldr	r3, [pc, #180]	; 114c4 <__assert_fail@plt+0x548>
   1140c:	str	r0, [r3]
   11410:	ldr	r2, [r3]
   11414:	sub	r1, r2, #1
   11418:	str	r1, [r3]
   1141c:	cmp	r2, #0
   11420:	ble	114b4 <__assert_fail@plt+0x538>
   11424:	mov	r5, #1
   11428:	mov	r4, r3
   1142c:	mov	r0, r5
   11430:	bl	10dd8 <sleep@plt>
   11434:	ldr	r3, [r4]
   11438:	sub	r2, r3, #1
   1143c:	str	r2, [r4]
   11440:	cmp	r3, #0
   11444:	bgt	1142c <__assert_fail@plt+0x4b0>
   11448:	mov	r0, #0
   1144c:	pop	{r4, r5, r6, pc}
   11450:	ldr	r2, [pc, #112]	; 114c8 <__assert_fail@plt+0x54c>
   11454:	ldr	r1, [r4, #48]	; 0x30
   11458:	mov	r0, r4
   1145c:	bl	15a8c <argp_state_help@@Base>
   11460:	mov	r0, #0
   11464:	pop	{r4, r5, r6, pc}
   11468:	ldr	r3, [pc, #92]	; 114cc <__assert_fail@plt+0x550>
   1146c:	str	r1, [r3]
   11470:	mov	r0, r1
   11474:	bl	122f8 <argp_parse@@Base+0xb34>
   11478:	str	r0, [r4, #40]	; 0x28
   1147c:	ldr	r3, [pc, #76]	; 114d0 <__assert_fail@plt+0x554>
   11480:	str	r0, [r3]
   11484:	ldr	r3, [r4, #16]
   11488:	and	r3, r3, #3
   1148c:	cmp	r3, #1
   11490:	beq	1149c <__assert_fail@plt+0x520>
   11494:	mov	r0, #0
   11498:	pop	{r4, r5, r6, pc}
   1149c:	ldr	r3, [r4, #8]
   114a0:	str	r5, [r3]
   114a4:	mov	r0, #0
   114a8:	pop	{r4, r5, r6, pc}
   114ac:	mov	r0, #7
   114b0:	pop	{r4, r5, r6, pc}
   114b4:	mov	r0, #0
   114b8:	pop	{r4, r5, r6, pc}
   114bc:	andeq	r0, r0, sl, ror r2
   114c0:	strdeq	r7, [r1], -ip
   114c4:	andeq	r9, r2, r4, asr r1
   114c8:	andeq	r0, r0, r1, lsl #4
   114cc:	andeq	r9, r2, r4, asr #2
   114d0:	andeq	r9, r2, r0, asr #2
   114d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114d8:	sub	sp, sp, #36	; 0x24
   114dc:	str	r0, [sp, #12]
   114e0:	str	r1, [sp, #16]
   114e4:	str	r2, [sp, #20]
   114e8:	mov	r8, r3
   114ec:	ldr	sl, [sp, #72]	; 0x48
   114f0:	ldr	r9, [r0]
   114f4:	ldr	r5, [r0, #16]
   114f8:	cmp	r9, #0
   114fc:	addne	r6, r9, #24
   11500:	strne	r5, [sp, #28]
   11504:	strne	r8, [sp, #24]
   11508:	bne	11614 <__assert_fail@plt+0x698>
   1150c:	ldr	r3, [sp, #12]
   11510:	ldr	r3, [r3, #4]
   11514:	cmp	r3, #0
   11518:	moveq	r0, r8
   1151c:	moveq	r8, #0
   11520:	beq	115a0 <__assert_fail@plt+0x624>
   11524:	ldr	r2, [sp, #12]
   11528:	ldr	r3, [r2, #4]
   1152c:	str	r3, [r8]
   11530:	str	r2, [r8, #4]
   11534:	ldr	r3, [sl, #4]
   11538:	str	r3, [r8, #8]
   1153c:	mov	r3, #0
   11540:	str	r3, [r8, #12]
   11544:	ldr	r2, [sp, #16]
   11548:	str	r2, [r8, #16]
   1154c:	ldr	r2, [sp, #20]
   11550:	str	r2, [r8, #20]
   11554:	str	r3, [r8, #24]
   11558:	str	r3, [r8, #32]
   1155c:	str	r3, [r8, #28]
   11560:	cmp	r5, r3
   11564:	beq	1159c <__assert_fail@plt+0x620>
   11568:	ldr	r3, [r5]
   1156c:	cmp	r3, #0
   11570:	beq	117bc <__assert_fail@plt+0x840>
   11574:	mov	r3, #0
   11578:	add	r3, r3, #1
   1157c:	ldr	r2, [r5, r3, lsl #4]
   11580:	cmp	r2, #0
   11584:	bne	11578 <__assert_fail@plt+0x5fc>
   11588:	ldr	r2, [sl, #12]
   1158c:	str	r2, [r8, #28]
   11590:	ldr	r2, [sl, #12]
   11594:	add	r3, r2, r3, lsl #2
   11598:	str	r3, [sl, #12]
   1159c:	add	r0, r8, #36	; 0x24
   115a0:	cmp	r5, #0
   115a4:	beq	115e0 <__assert_fail@plt+0x664>
   115a8:	ldr	ip, [r5]
   115ac:	cmp	ip, #0
   115b0:	beq	115e0 <__assert_fail@plt+0x664>
   115b4:	mov	r2, #0
   115b8:	add	r4, r2, #1
   115bc:	str	sl, [sp]
   115c0:	mov	r3, r0
   115c4:	mov	r1, r8
   115c8:	mov	r0, ip
   115cc:	bl	114d4 <__assert_fail@plt+0x558>
   115d0:	ldr	ip, [r5, r4, lsl #4]
   115d4:	mov	r2, r4
   115d8:	cmp	ip, #0
   115dc:	bne	115b8 <__assert_fail@plt+0x63c>
   115e0:	add	sp, sp, #36	; 0x24
   115e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115e8:	ldr	r0, [r4, #16]!
   115ec:	cmp	r0, #0
   115f0:	beq	116fc <__assert_fail@plt+0x780>
   115f4:	mov	r1, r7
   115f8:	bl	10d60 <strcmp@plt>
   115fc:	cmp	r0, #0
   11600:	bne	115e8 <__assert_fail@plt+0x66c>
   11604:	sub	r4, r4, fp
   11608:	cmn	r4, #15
   1160c:	blt	116fc <__assert_fail@plt+0x780>
   11610:	add	r6, r6, #24
   11614:	sub	r2, r6, #24
   11618:	mov	r8, r6
   1161c:	ldr	r4, [r6, #-20]	; 0xffffffec
   11620:	cmp	r4, #0
   11624:	bne	11634 <__assert_fail@plt+0x6b8>
   11628:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1162c:	cmp	r3, #0
   11630:	beq	11798 <__assert_fail@plt+0x81c>
   11634:	ldr	r3, [r8, #-12]
   11638:	and	r1, r3, #4
   1163c:	cmp	r1, #0
   11640:	moveq	r9, r2
   11644:	ldr	r5, [r9, #12]
   11648:	ands	r5, r5, #8
   1164c:	bne	11610 <__assert_fail@plt+0x694>
   11650:	tst	r3, #8
   11654:	bne	116d8 <__assert_fail@plt+0x75c>
   11658:	sub	r3, r4, #1
   1165c:	cmp	r3, #254	; 0xfe
   11660:	bhi	116d8 <__assert_fail@plt+0x75c>
   11664:	bl	10e8c <__ctype_b_loc@plt>
   11668:	ldr	r3, [r0]
   1166c:	lsl	r4, r4, #1
   11670:	ldrh	r3, [r3, r4]
   11674:	tst	r3, #16384	; 0x4000
   11678:	beq	116d8 <__assert_fail@plt+0x75c>
   1167c:	ldr	r3, [sl, #4]
   11680:	add	r2, r3, #1
   11684:	str	r2, [sl, #4]
   11688:	ldr	r2, [r8, #-20]	; 0xffffffec
   1168c:	strb	r2, [r3]
   11690:	ldr	r3, [r9, #8]
   11694:	cmp	r3, #0
   11698:	beq	116cc <__assert_fail@plt+0x750>
   1169c:	ldr	r3, [sl, #4]
   116a0:	add	r2, r3, #1
   116a4:	str	r2, [sl, #4]
   116a8:	mov	r2, #58	; 0x3a
   116ac:	strb	r2, [r3]
   116b0:	ldr	r3, [r9, #12]
   116b4:	tst	r3, #1
   116b8:	ldrne	r3, [sl, #4]
   116bc:	addne	r2, r3, #1
   116c0:	strne	r2, [sl, #4]
   116c4:	movne	r2, #58	; 0x3a
   116c8:	strbne	r2, [r3]
   116cc:	ldr	r3, [sl, #4]
   116d0:	mov	r2, #0
   116d4:	strb	r2, [r3]
   116d8:	ldr	r7, [r8, #-24]	; 0xffffffe8
   116dc:	cmp	r7, #0
   116e0:	beq	11610 <__assert_fail@plt+0x694>
   116e4:	ldr	r3, [sl]
   116e8:	ldr	fp, [r3, #8]
   116ec:	ldr	r0, [fp]
   116f0:	cmp	r0, #0
   116f4:	movne	r4, fp
   116f8:	bne	115f4 <__assert_fail@plt+0x678>
   116fc:	ldr	r3, [sl, #8]
   11700:	str	r7, [r3]
   11704:	ldr	r3, [sl, #8]
   11708:	ldr	r2, [r9, #8]
   1170c:	cmp	r2, #0
   11710:	beq	11728 <__assert_fail@plt+0x7ac>
   11714:	ldr	r5, [r9, #12]
   11718:	and	r5, r5, #1
   1171c:	cmp	r5, #0
   11720:	movne	r5, #2
   11724:	moveq	r5, #1
   11728:	str	r5, [r3, #4]
   1172c:	ldr	r3, [sl, #8]
   11730:	mov	r2, #0
   11734:	str	r2, [r3, #8]
   11738:	ldr	r1, [sl, #8]
   1173c:	ldr	r0, [r8, #-20]	; 0xffffffec
   11740:	cmp	r0, r2
   11744:	ldreq	r0, [r9, #4]
   11748:	bic	r0, r0, #-16777216	; 0xff000000
   1174c:	ldr	r3, [sl]
   11750:	ldr	r3, [r3, #48]	; 0x30
   11754:	ldr	r2, [sp, #24]
   11758:	sub	r3, r2, r3
   1175c:	asr	r3, r3, #2
   11760:	rsb	r2, r3, r3, lsl #3
   11764:	add	r2, r2, r2, lsl #6
   11768:	add	r2, r3, r2, lsl #3
   1176c:	rsb	r2, r2, r2, lsl #15
   11770:	add	r3, r3, r2, lsl #3
   11774:	add	r3, r3, #1
   11778:	add	r3, r0, r3, lsl #24
   1177c:	str	r3, [r1, #12]
   11780:	ldr	r3, [sl, #8]
   11784:	add	r2, r3, #16
   11788:	str	r2, [sl, #8]
   1178c:	mov	r2, #0
   11790:	str	r2, [r3, #16]
   11794:	b	11610 <__assert_fail@plt+0x694>
   11798:	ldr	r3, [r6, #-8]
   1179c:	cmp	r3, #0
   117a0:	bne	11634 <__assert_fail@plt+0x6b8>
   117a4:	ldr	r3, [r6, #-4]
   117a8:	cmp	r3, #0
   117ac:	bne	11634 <__assert_fail@plt+0x6b8>
   117b0:	ldr	r5, [sp, #28]
   117b4:	ldr	r8, [sp, #24]
   117b8:	b	11524 <__assert_fail@plt+0x5a8>
   117bc:	mov	r3, #0
   117c0:	b	11588 <__assert_fail@plt+0x60c>

000117c4 <argp_parse@@Base>:
   117c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117c8:	add	fp, sp, #32
   117cc:	sub	sp, sp, #220	; 0xdc
   117d0:	mov	r8, r0
   117d4:	str	r1, [fp, #-236]	; 0xffffff14
   117d8:	str	r2, [fp, #-232]	; 0xffffff18
   117dc:	mov	r6, r3
   117e0:	tst	r3, #1
   117e4:	bne	11814 <argp_parse@@Base+0x50>
   117e8:	ldr	r3, [pc, #2548]	; 121e4 <argp_parse@@Base+0xa20>
   117ec:	ldr	r3, [r3]
   117f0:	cmp	r3, #0
   117f4:	moveq	r3, r2
   117f8:	ldreq	r2, [r3]
   117fc:	ldreq	r3, [pc, #2528]	; 121e4 <argp_parse@@Base+0xa20>
   11800:	streq	r2, [r3]
   11804:	ldr	r3, [pc, #2524]	; 121e8 <argp_parse@@Base+0xa24>
   11808:	ldr	r3, [r3]
   1180c:	cmp	r3, #0
   11810:	beq	11a04 <argp_parse@@Base+0x240>
   11814:	tst	r6, #16
   11818:	beq	11a1c <argp_parse@@Base+0x258>
   1181c:	mov	r2, #36	; 0x24
   11820:	mov	r1, #0
   11824:	sub	r0, fp, #196	; 0xc4
   11828:	bl	10ee0 <memset@plt>
   1182c:	ands	r3, r6, #4
   11830:	str	r3, [fp, #-240]	; 0xffffff10
   11834:	moveq	r3, #1
   11838:	movne	r3, #0
   1183c:	str	r3, [fp, #-228]	; 0xffffff1c
   11840:	mov	r3, #0
   11844:	str	r3, [fp, #-224]	; 0xffffff20
   11848:	str	r3, [fp, #-220]	; 0xffffff24
   1184c:	str	r3, [fp, #-216]	; 0xffffff28
   11850:	cmp	r8, r3
   11854:	beq	11864 <argp_parse@@Base+0xa0>
   11858:	sub	r1, fp, #228	; 0xe4
   1185c:	mov	r0, r8
   11860:	bl	11240 <__assert_fail@plt+0x2c4>
   11864:	ldr	r4, [fp, #-220]	; 0xffffff24
   11868:	add	r4, r4, #1
   1186c:	add	r4, r4, r4, lsl #3
   11870:	lsl	r4, r4, #2
   11874:	ldr	r9, [fp, #-216]	; 0xffffff28
   11878:	lsl	r9, r9, #2
   1187c:	add	sl, r9, r4
   11880:	ldr	r5, [fp, #-224]	; 0xffffff20
   11884:	add	r5, r5, #1
   11888:	add	r5, sl, r5, lsl #4
   1188c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   11890:	add	r0, r0, #1
   11894:	add	r0, r0, r5
   11898:	bl	12a98 <argp_parse@@Base+0x12d4>
   1189c:	mov	r7, r0
   118a0:	str	r0, [fp, #-40]	; 0xffffffd8
   118a4:	cmp	r0, #0
   118a8:	moveq	r4, #12
   118ac:	beq	12034 <argp_parse@@Base+0x870>
   118b0:	str	r0, [fp, #-112]	; 0xffffff90
   118b4:	add	r4, r0, r4
   118b8:	str	r4, [fp, #-104]	; 0xffffff98
   118bc:	add	r3, r0, sl
   118c0:	str	r3, [fp, #-244]	; 0xffffff0c
   118c4:	str	r3, [fp, #-152]	; 0xffffff68
   118c8:	add	sl, r0, r5
   118cc:	str	sl, [fp, #-156]	; 0xffffff64
   118d0:	mov	r3, #1
   118d4:	str	r3, [fp, #-196]	; 0xffffff3c
   118d8:	str	r3, [fp, #-192]	; 0xffffff40
   118dc:	sub	ip, fp, #148	; 0x94
   118e0:	sub	lr, fp, #196	; 0xc4
   118e4:	ldm	lr!, {r0, r1, r2, r3}
   118e8:	stmia	ip!, {r0, r1, r2, r3}
   118ec:	ldm	lr!, {r0, r1, r2, r3}
   118f0:	stmia	ip!, {r0, r1, r2, r3}
   118f4:	ldr	r3, [lr]
   118f8:	str	r3, [ip]
   118fc:	mov	r2, r9
   11900:	mov	r1, #0
   11904:	mov	r0, r4
   11908:	bl	10ee0 <memset@plt>
   1190c:	sub	r3, fp, #160	; 0xa0
   11910:	str	r3, [fp, #-212]	; 0xffffff2c
   11914:	str	sl, [fp, #-208]	; 0xffffff30
   11918:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1191c:	str	r3, [fp, #-204]	; 0xffffff34
   11920:	str	r4, [fp, #-200]	; 0xffffff38
   11924:	tst	r6, #8
   11928:	beq	11ab4 <argp_parse@@Base+0x2f0>
   1192c:	add	sl, sl, #1
   11930:	str	sl, [fp, #-208]	; 0xffffff30
   11934:	mov	r3, #45	; 0x2d
   11938:	strb	r3, [r7, r5]
   1193c:	mov	r3, #0
   11940:	ldr	r2, [fp, #-208]	; 0xffffff30
   11944:	strb	r3, [r2]
   11948:	ldr	r2, [fp, #-204]	; 0xffffff34
   1194c:	str	r3, [r2]
   11950:	str	r8, [fp, #-160]	; 0xffffff60
   11954:	cmp	r8, r3
   11958:	beq	11ad0 <argp_parse@@Base+0x30c>
   1195c:	sub	r3, fp, #212	; 0xd4
   11960:	str	r3, [sp]
   11964:	ldr	r3, [fp, #-112]	; 0xffffff90
   11968:	mov	r2, #0
   1196c:	mov	r1, r2
   11970:	mov	r0, r8
   11974:	bl	114d4 <__assert_fail@plt+0x558>
   11978:	str	r0, [fp, #-108]	; 0xffffff94
   1197c:	mov	r2, #56	; 0x38
   11980:	mov	r1, #0
   11984:	sub	r0, fp, #96	; 0x60
   11988:	bl	10ee0 <memset@plt>
   1198c:	ldr	r3, [fp, #-160]	; 0xffffff60
   11990:	str	r3, [fp, #-96]	; 0xffffffa0
   11994:	ldr	r3, [fp, #-236]	; 0xffffff14
   11998:	str	r3, [fp, #-92]	; 0xffffffa4
   1199c:	ldr	r3, [fp, #-232]	; 0xffffff18
   119a0:	str	r3, [fp, #-88]	; 0xffffffa8
   119a4:	str	r6, [fp, #-80]	; 0xffffffb0
   119a8:	ldr	r3, [pc, #2108]	; 121ec <argp_parse@@Base+0xa28>
   119ac:	ldr	r3, [r3]
   119b0:	str	r3, [fp, #-52]	; 0xffffffcc
   119b4:	ldr	r3, [pc, #2100]	; 121f0 <argp_parse@@Base+0xa2c>
   119b8:	ldr	r3, [r3]
   119bc:	str	r3, [fp, #-48]	; 0xffffffd0
   119c0:	sub	r3, fp, #160	; 0xa0
   119c4:	str	r3, [fp, #-44]	; 0xffffffd4
   119c8:	mov	r3, #1
   119cc:	str	r3, [fp, #-100]	; 0xffffff9c
   119d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   119d4:	ldr	r2, [fp, #-108]	; 0xffffff94
   119d8:	cmp	r3, r2
   119dc:	bcs	11b68 <argp_parse@@Base+0x3a4>
   119e0:	ldr	r2, [fp, #8]
   119e4:	str	r2, [r3, #24]
   119e8:	ldr	r5, [fp, #-112]	; 0xffffff90
   119ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   119f0:	cmp	r5, r3
   119f4:	bcs	11b74 <argp_parse@@Base+0x3b0>
   119f8:	ldr	r7, [pc, #2036]	; 121f4 <argp_parse@@Base+0xa30>
   119fc:	mov	r6, #0
   11a00:	b	11b0c <argp_parse@@Base+0x348>
   11a04:	ldr	r3, [fp, #-232]	; 0xffffff18
   11a08:	ldr	r0, [r3]
   11a0c:	bl	122f8 <argp_parse@@Base+0xb34>
   11a10:	ldr	r3, [pc, #2000]	; 121e8 <argp_parse@@Base+0xa24>
   11a14:	str	r0, [r3]
   11a18:	b	11814 <argp_parse@@Base+0x50>
   11a1c:	sub	sp, sp, #72	; 0x48
   11a20:	add	r5, sp, #8
   11a24:	sub	sp, sp, #40	; 0x28
   11a28:	add	r4, sp, #8
   11a2c:	mov	r1, #0
   11a30:	str	r1, [r4]
   11a34:	str	r1, [r4, #4]
   11a38:	str	r1, [r4, #8]
   11a3c:	str	r1, [r4, #12]
   11a40:	str	r1, [r4, #20]
   11a44:	str	r1, [r4, #24]
   11a48:	str	r5, [r4, #16]
   11a4c:	mov	r2, #64	; 0x40
   11a50:	mov	r0, r5
   11a54:	bl	10ee0 <memset@plt>
   11a58:	cmp	r8, #0
   11a5c:	addne	r3, r5, #16
   11a60:	strne	r8, [r5]
   11a64:	moveq	r3, r5
   11a68:	ldr	r2, [pc, #1928]	; 121f8 <argp_parse@@Base+0xa34>
   11a6c:	str	r2, [r3]
   11a70:	ldr	r2, [pc, #1924]	; 121fc <argp_parse@@Base+0xa38>
   11a74:	ldr	r2, [r2]
   11a78:	cmp	r2, #0
   11a7c:	beq	11a9c <argp_parse@@Base+0x2d8>
   11a80:	add	r2, r3, #32
   11a84:	ldr	r1, [pc, #1908]	; 12200 <argp_parse@@Base+0xa3c>
   11a88:	str	r1, [r3, #16]
   11a8c:	mov	r3, #0
   11a90:	str	r3, [r2]
   11a94:	mov	r8, r4
   11a98:	b	1181c <argp_parse@@Base+0x58>
   11a9c:	ldr	r2, [pc, #1888]	; 12204 <argp_parse@@Base+0xa40>
   11aa0:	ldr	r2, [r2]
   11aa4:	cmp	r2, #0
   11aa8:	addeq	r2, r3, #16
   11aac:	bne	11a80 <argp_parse@@Base+0x2bc>
   11ab0:	b	11a8c <argp_parse@@Base+0x2c8>
   11ab4:	ldr	r3, [fp, #-240]	; 0xffffff10
   11ab8:	cmp	r3, #0
   11abc:	addne	sl, sl, #1
   11ac0:	strne	sl, [fp, #-208]	; 0xffffff30
   11ac4:	movne	r3, #43	; 0x2b
   11ac8:	strbne	r3, [r7, r5]
   11acc:	b	1193c <argp_parse@@Base+0x178>
   11ad0:	ldr	r3, [fp, #-112]	; 0xffffff90
   11ad4:	str	r3, [fp, #-108]	; 0xffffff94
   11ad8:	b	1197c <argp_parse@@Base+0x1b8>
   11adc:	mov	r3, r6
   11ae0:	mov	r2, r7
   11ae4:	sub	r1, fp, #96	; 0x60
   11ae8:	mov	r0, r5
   11aec:	bl	111dc <__assert_fail@plt+0x260>
   11af0:	add	r5, r5, #36	; 0x24
   11af4:	ldr	r3, [fp, #-108]	; 0xffffff94
   11af8:	cmp	r5, r3
   11afc:	bcs	11b58 <argp_parse@@Base+0x394>
   11b00:	cmp	r0, #7
   11b04:	cmpne	r0, #0
   11b08:	bne	11b58 <argp_parse@@Base+0x394>
   11b0c:	ldr	r3, [r5, #16]
   11b10:	cmp	r3, #0
   11b14:	ldrne	r2, [r5, #20]
   11b18:	ldrne	r3, [r3, #28]
   11b1c:	ldrne	r3, [r3, r2, lsl #2]
   11b20:	strne	r3, [r5, #24]
   11b24:	ldr	r3, [r5]
   11b28:	cmp	r3, #0
   11b2c:	bne	11adc <argp_parse@@Base+0x318>
   11b30:	ldr	r3, [r5, #4]
   11b34:	ldr	r3, [r3, #16]
   11b38:	cmp	r3, #0
   11b3c:	beq	11adc <argp_parse@@Base+0x318>
   11b40:	ldr	r3, [r3]
   11b44:	cmp	r3, #0
   11b48:	ldrne	r3, [r5, #28]
   11b4c:	ldrne	r2, [r5, #24]
   11b50:	strne	r2, [r3]
   11b54:	b	11adc <argp_parse@@Base+0x318>
   11b58:	mov	r4, r0
   11b5c:	cmp	r0, #7
   11b60:	beq	11b74 <argp_parse@@Base+0x3b0>
   11b64:	b	11b6c <argp_parse@@Base+0x3a8>
   11b68:	mov	r4, #0
   11b6c:	cmp	r4, #0
   11b70:	bne	12034 <argp_parse@@Base+0x870>
   11b74:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11b78:	tst	r3, #2
   11b7c:	moveq	r3, #1
   11b80:	streq	r3, [fp, #-144]	; 0xffffff70
   11b84:	beq	11bb0 <argp_parse@@Base+0x3ec>
   11b88:	mov	r2, #0
   11b8c:	str	r2, [fp, #-144]	; 0xffffff70
   11b90:	tst	r3, #1
   11b94:	beq	11bb0 <argp_parse@@Base+0x3ec>
   11b98:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11b9c:	sub	r3, r3, #4
   11ba0:	str	r3, [fp, #-88]	; 0xffffffa8
   11ba4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11ba8:	add	r3, r3, #1
   11bac:	str	r3, [fp, #-92]	; 0xffffffa4
   11bb0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11bb4:	ldr	r2, [fp, #-232]	; 0xffffff18
   11bb8:	cmp	r2, r3
   11bbc:	beq	11bdc <argp_parse@@Base+0x418>
   11bc0:	ldr	r3, [pc, #1568]	; 121e8 <argp_parse@@Base+0xa24>
   11bc4:	ldr	r3, [r3]
   11bc8:	str	r3, [fp, #-56]	; 0xffffffc8
   11bcc:	mov	r6, #0
   11bd0:	mov	sl, #1
   11bd4:	mvn	r9, #0
   11bd8:	b	11e4c <argp_parse@@Base+0x688>
   11bdc:	ldr	r0, [r2]
   11be0:	cmp	r0, #0
   11be4:	beq	11bc0 <argp_parse@@Base+0x3fc>
   11be8:	bl	122f8 <argp_parse@@Base+0xb34>
   11bec:	str	r0, [fp, #-56]	; 0xffffffc8
   11bf0:	b	11bcc <argp_parse@@Base+0x408>
   11bf4:	ldr	r3, [fp, #-84]	; 0xffffffac
   11bf8:	str	r3, [fp, #-148]	; 0xffffff6c
   11bfc:	str	r9, [fp, #-140]	; 0xffffff74
   11c00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11c04:	tst	r3, #64	; 0x40
   11c08:	beq	11cd4 <argp_parse@@Base+0x510>
   11c0c:	sub	r3, fp, #148	; 0x94
   11c10:	str	r3, [sp, #4]
   11c14:	str	r6, [sp]
   11c18:	ldr	r3, [fp, #-152]	; 0xffffff68
   11c1c:	ldr	r2, [fp, #-156]	; 0xffffff64
   11c20:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11c24:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11c28:	bl	12494 <argp_parse@@Base+0xcd0>
   11c2c:	mov	r5, r0
   11c30:	ldr	r4, [fp, #-148]	; 0xffffff6c
   11c34:	str	r4, [fp, #-84]	; 0xffffffac
   11c38:	cmn	r5, #1
   11c3c:	beq	11cfc <argp_parse@@Base+0x538>
   11c40:	cmp	r5, #63	; 0x3f
   11c44:	beq	11d28 <argp_parse@@Base+0x564>
   11c48:	cmp	r5, #1
   11c4c:	beq	11d60 <argp_parse@@Base+0x59c>
   11c50:	ldr	r4, [fp, #-136]	; 0xffffff78
   11c54:	asrs	r3, r5, #24
   11c58:	bne	11e0c <argp_parse@@Base+0x648>
   11c5c:	mov	r1, r5
   11c60:	ldr	r0, [fp, #-156]	; 0xffffff64
   11c64:	bl	10eb0 <strchr@plt>
   11c68:	subs	r1, r0, #0
   11c6c:	beq	11cbc <argp_parse@@Base+0x4f8>
   11c70:	ldr	r0, [fp, #-112]	; 0xffffff90
   11c74:	ldr	r2, [fp, #-108]	; 0xffffff94
   11c78:	cmp	r2, r0
   11c7c:	bls	11cbc <argp_parse@@Base+0x4f8>
   11c80:	ldr	r3, [r0, #8]
   11c84:	cmp	r1, r3
   11c88:	bcc	11ca4 <argp_parse@@Base+0x4e0>
   11c8c:	add	r0, r0, #36	; 0x24
   11c90:	cmp	r2, r0
   11c94:	bls	11cbc <argp_parse@@Base+0x4f8>
   11c98:	ldr	r3, [r0, #8]
   11c9c:	cmp	r1, r3
   11ca0:	bcs	11c8c <argp_parse@@Base+0x4c8>
   11ca4:	mov	r3, r4
   11ca8:	mov	r2, r5
   11cac:	sub	r1, fp, #96	; 0x60
   11cb0:	bl	111dc <__assert_fail@plt+0x260>
   11cb4:	cmp	r0, #7
   11cb8:	bne	11e44 <argp_parse@@Base+0x680>
   11cbc:	ldr	r3, [pc, #1348]	; 12208 <argp_parse@@Base+0xa44>
   11cc0:	mov	r2, r5
   11cc4:	ldr	r1, [pc, #1344]	; 1220c <argp_parse@@Base+0xa48>
   11cc8:	sub	r0, fp, #96	; 0x60
   11ccc:	bl	15b48 <argp_error@@Base>
   11cd0:	b	11eec <argp_parse@@Base+0x728>
   11cd4:	sub	r3, fp, #148	; 0x94
   11cd8:	str	r3, [sp, #4]
   11cdc:	str	r6, [sp]
   11ce0:	ldr	r3, [fp, #-152]	; 0xffffff68
   11ce4:	ldr	r2, [fp, #-156]	; 0xffffff64
   11ce8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11cec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11cf0:	bl	12438 <argp_parse@@Base+0xc74>
   11cf4:	mov	r5, r0
   11cf8:	b	11c30 <argp_parse@@Base+0x46c>
   11cfc:	str	r6, [fp, #-100]	; 0xffffff9c
   11d00:	cmp	r4, #1
   11d04:	ble	11e74 <argp_parse@@Base+0x6b0>
   11d08:	sub	r3, r4, #-1073741823	; 0xc0000001
   11d0c:	ldr	r1, [pc, #1276]	; 12210 <argp_parse@@Base+0xa4c>
   11d10:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11d14:	ldr	r0, [r2, r3, lsl #2]
   11d18:	bl	10d60 <strcmp@plt>
   11d1c:	cmp	r0, #0
   11d20:	streq	r4, [fp, #-72]	; 0xffffffb8
   11d24:	b	11e74 <argp_parse@@Base+0x6b0>
   11d28:	ldr	r3, [fp, #-140]	; 0xffffff74
   11d2c:	cmn	r3, #1
   11d30:	beq	11c50 <argp_parse@@Base+0x48c>
   11d34:	mov	r3, #0
   11d38:	b	11efc <argp_parse@@Base+0x738>
   11d3c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11d40:	tst	r2, #4
   11d44:	movne	r3, #1
   11d48:	bne	11efc <argp_parse@@Base+0x738>
   11d4c:	add	r2, r3, #1
   11d50:	str	r2, [fp, #-84]	; 0xffffffac
   11d54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11d58:	ldr	r3, [r2, r3, lsl #2]
   11d5c:	str	r3, [fp, #-136]	; 0xffffff78
   11d60:	ldr	r7, [fp, #-136]	; 0xffffff78
   11d64:	ldr	r8, [fp, #-84]	; 0xffffffac
   11d68:	sub	r8, r8, #1
   11d6c:	str	r8, [fp, #-84]	; 0xffffffac
   11d70:	ldr	r5, [fp, #-112]	; 0xffffff90
   11d74:	ldr	r3, [fp, #-108]	; 0xffffff94
   11d78:	cmp	r3, r5
   11d7c:	bhi	11dc8 <argp_parse@@Base+0x604>
   11d80:	b	11e04 <argp_parse@@Base+0x640>
   11d84:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d88:	sub	r3, r3, #1
   11d8c:	str	r3, [fp, #-84]	; 0xffffffac
   11d90:	mov	r3, r6
   11d94:	ldr	r2, [pc, #1144]	; 12214 <argp_parse@@Base+0xa50>
   11d98:	sub	r1, fp, #96	; 0x60
   11d9c:	mov	r0, r5
   11da0:	bl	111dc <__assert_fail@plt+0x260>
   11da4:	add	r5, r5, #36	; 0x24
   11da8:	ldr	r3, [fp, #-108]	; 0xffffff94
   11dac:	cmp	r5, r3
   11db0:	movcs	r3, #0
   11db4:	movcc	r3, #1
   11db8:	cmp	r0, #7
   11dbc:	movne	r3, #0
   11dc0:	cmp	r3, #0
   11dc4:	beq	121a8 <argp_parse@@Base+0x9e4>
   11dc8:	ldr	r3, [fp, #-84]	; 0xffffffac
   11dcc:	add	r3, r3, #1
   11dd0:	str	r3, [fp, #-84]	; 0xffffffac
   11dd4:	mov	r3, r7
   11dd8:	mov	r2, r6
   11ddc:	sub	r1, fp, #96	; 0x60
   11de0:	mov	r0, r5
   11de4:	bl	111dc <__assert_fail@plt+0x260>
   11de8:	cmp	r0, #7
   11dec:	beq	11d84 <argp_parse@@Base+0x5c0>
   11df0:	add	r5, r5, #36	; 0x24
   11df4:	cmp	r0, #0
   11df8:	beq	121b8 <argp_parse@@Base+0x9f4>
   11dfc:	cmp	r0, #7
   11e00:	bne	11e44 <argp_parse@@Base+0x680>
   11e04:	mov	r5, #1
   11e08:	b	11eec <argp_parse@@Base+0x728>
   11e0c:	ands	r1, r5, #8388608	; 0x800000
   11e10:	movne	r1, #-16777216	; 0xff000000
   11e14:	bic	r2, r5, #-16777216	; 0xff000000
   11e18:	add	r0, r3, r3, lsl #3
   11e1c:	lsl	r0, r0, #2
   11e20:	sub	r0, r0, #36	; 0x24
   11e24:	mov	r3, r4
   11e28:	orr	r2, r2, r1
   11e2c:	sub	r1, fp, #96	; 0x60
   11e30:	ldr	ip, [fp, #-112]	; 0xffffff90
   11e34:	add	r0, ip, r0
   11e38:	bl	111dc <__assert_fail@plt+0x260>
   11e3c:	cmp	r0, #7
   11e40:	beq	11e8c <argp_parse@@Base+0x6c8>
   11e44:	cmp	r0, #0
   11e48:	bne	11f9c <argp_parse@@Base+0x7d8>
   11e4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11e50:	cmp	r3, #0
   11e54:	beq	11e68 <argp_parse@@Base+0x6a4>
   11e58:	ldr	r2, [fp, #-84]	; 0xffffffac
   11e5c:	cmp	r3, r2
   11e60:	strgt	r6, [fp, #-72]	; 0xffffffb8
   11e64:	ble	11e74 <argp_parse@@Base+0x6b0>
   11e68:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11e6c:	cmp	r3, #0
   11e70:	bne	11bf4 <argp_parse@@Base+0x430>
   11e74:	ldr	r3, [fp, #-84]	; 0xffffffac
   11e78:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11e7c:	cmp	r3, r2
   11e80:	blt	11d3c <argp_parse@@Base+0x578>
   11e84:	mov	r3, #1
   11e88:	b	11efc <argp_parse@@Base+0x738>
   11e8c:	ldr	r3, [fp, #-152]	; 0xffffff68
   11e90:	ldr	r2, [r3, #12]
   11e94:	cmp	r2, r5
   11e98:	beq	11ecc <argp_parse@@Base+0x708>
   11e9c:	ldr	r2, [r3]
   11ea0:	cmp	r2, #0
   11ea4:	beq	11f94 <argp_parse@@Base+0x7d0>
   11ea8:	add	r3, r3, #16
   11eac:	ldr	r2, [r3, #12]
   11eb0:	cmp	r2, r5
   11eb4:	beq	11ecc <argp_parse@@Base+0x708>
   11eb8:	ldr	r2, [r3]
   11ebc:	cmp	r2, #0
   11ec0:	bne	11ea8 <argp_parse@@Base+0x6e4>
   11ec4:	ldr	r2, [pc, #844]	; 12218 <argp_parse@@Base+0xa54>
   11ec8:	b	11edc <argp_parse@@Base+0x718>
   11ecc:	ldr	r2, [r3]
   11ed0:	ldr	r3, [pc, #832]	; 12218 <argp_parse@@Base+0xa54>
   11ed4:	cmp	r2, #0
   11ed8:	moveq	r2, r3
   11edc:	ldr	r3, [pc, #804]	; 12208 <argp_parse@@Base+0xa44>
   11ee0:	ldr	r1, [pc, #820]	; 1221c <argp_parse@@Base+0xa58>
   11ee4:	sub	r0, fp, #96	; 0x60
   11ee8:	bl	15b48 <argp_error@@Base>
   11eec:	add	r5, r5, #1
   11ef0:	bics	r3, r5, #2
   11ef4:	moveq	r3, #1
   11ef8:	movne	r3, #0
   11efc:	cmp	r3, #0
   11f00:	moveq	r4, #7
   11f04:	beq	11fa0 <argp_parse@@Base+0x7dc>
   11f08:	ldr	r3, [fp, #-84]	; 0xffffffac
   11f0c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11f10:	cmp	r3, r2
   11f14:	beq	12040 <argp_parse@@Base+0x87c>
   11f18:	ldr	r2, [fp, #4]
   11f1c:	cmp	r2, #0
   11f20:	strne	r3, [r2]
   11f24:	beq	1213c <argp_parse@@Base+0x978>
   11f28:	ldr	r5, [fp, #-108]	; 0xffffff94
   11f2c:	sub	r5, r5, #36	; 0x24
   11f30:	ldr	r3, [fp, #-112]	; 0xffffff90
   11f34:	cmp	r5, r3
   11f38:	bcc	12178 <argp_parse@@Base+0x9b4>
   11f3c:	ldr	r7, [pc, #732]	; 12220 <argp_parse@@Base+0xa5c>
   11f40:	mov	r6, #0
   11f44:	mov	r3, r6
   11f48:	mov	r2, r7
   11f4c:	sub	r1, fp, #96	; 0x60
   11f50:	mov	r0, r5
   11f54:	bl	111dc <__assert_fail@plt+0x260>
   11f58:	sub	r5, r5, #36	; 0x24
   11f5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   11f60:	cmp	r5, r3
   11f64:	bcc	11f74 <argp_parse@@Base+0x7b0>
   11f68:	cmp	r0, #7
   11f6c:	cmpne	r0, #0
   11f70:	beq	11f44 <argp_parse@@Base+0x780>
   11f74:	mov	r4, r0
   11f78:	cmp	r0, #7
   11f7c:	moveq	r4, #0
   11f80:	ldr	r5, [fp, #-108]	; 0xffffff94
   11f84:	sub	r5, r5, #36	; 0x24
   11f88:	cmp	r3, r5
   11f8c:	bls	11ff8 <argp_parse@@Base+0x834>
   11f90:	b	1202c <argp_parse@@Base+0x868>
   11f94:	ldr	r2, [pc, #636]	; 12218 <argp_parse@@Base+0xa54>
   11f98:	b	11edc <argp_parse@@Base+0x718>
   11f9c:	mov	r4, r0
   11fa0:	cmp	r4, #7
   11fa4:	beq	12160 <argp_parse@@Base+0x99c>
   11fa8:	ldr	r5, [fp, #-112]	; 0xffffff90
   11fac:	ldr	r3, [fp, #-108]	; 0xffffff94
   11fb0:	cmp	r3, r5
   11fb4:	bls	11fe4 <argp_parse@@Base+0x820>
   11fb8:	ldr	r7, [pc, #612]	; 12224 <argp_parse@@Base+0xa60>
   11fbc:	mov	r6, #0
   11fc0:	mov	r3, r6
   11fc4:	mov	r2, r7
   11fc8:	sub	r1, fp, #96	; 0x60
   11fcc:	mov	r0, r5
   11fd0:	bl	111dc <__assert_fail@plt+0x260>
   11fd4:	add	r5, r5, #36	; 0x24
   11fd8:	ldr	r3, [fp, #-108]	; 0xffffff94
   11fdc:	cmp	r5, r3
   11fe0:	bcc	11fc0 <argp_parse@@Base+0x7fc>
   11fe4:	ldr	r5, [fp, #-108]	; 0xffffff94
   11fe8:	sub	r5, r5, #36	; 0x24
   11fec:	ldr	r3, [fp, #-112]	; 0xffffff90
   11ff0:	cmp	r3, r5
   11ff4:	bhi	12024 <argp_parse@@Base+0x860>
   11ff8:	ldr	r7, [pc, #552]	; 12228 <argp_parse@@Base+0xa64>
   11ffc:	mov	r6, #0
   12000:	mov	r3, r6
   12004:	mov	r2, r7
   12008:	sub	r1, fp, #96	; 0x60
   1200c:	mov	r0, r5
   12010:	bl	111dc <__assert_fail@plt+0x260>
   12014:	sub	r5, r5, #36	; 0x24
   12018:	ldr	r3, [fp, #-112]	; 0xffffff90
   1201c:	cmp	r5, r3
   12020:	bcs	12000 <argp_parse@@Base+0x83c>
   12024:	cmp	r4, #7
   12028:	moveq	r4, #22
   1202c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12030:	bl	123b8 <argp_parse@@Base+0xbf4>
   12034:	mov	r0, r4
   12038:	sub	sp, fp, #32
   1203c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12040:	ldr	r6, [fp, #-112]	; 0xffffff90
   12044:	ldr	r5, [fp, #-108]	; 0xffffff94
   12048:	cmp	r6, r5
   1204c:	bcs	12180 <argp_parse@@Base+0x9bc>
   12050:	mov	r4, #0
   12054:	ldr	r8, [pc, #464]	; 1222c <argp_parse@@Base+0xa68>
   12058:	mov	r7, r4
   1205c:	mov	r0, r4
   12060:	b	12080 <argp_parse@@Base+0x8bc>
   12064:	add	r6, r6, #36	; 0x24
   12068:	ldr	r5, [fp, #-108]	; 0xffffff94
   1206c:	cmp	r6, r5
   12070:	bcs	120ac <argp_parse@@Base+0x8e8>
   12074:	cmp	r0, #7
   12078:	cmpne	r0, #0
   1207c:	bne	120a4 <argp_parse@@Base+0x8e0>
   12080:	ldr	r3, [r6, #12]
   12084:	cmp	r3, #0
   12088:	bne	12064 <argp_parse@@Base+0x8a0>
   1208c:	mov	r3, r7
   12090:	mov	r2, r8
   12094:	sub	r1, fp, #96	; 0x60
   12098:	mov	r0, r6
   1209c:	bl	111dc <__assert_fail@plt+0x260>
   120a0:	b	12064 <argp_parse@@Base+0x8a0>
   120a4:	mov	r4, r0
   120a8:	b	12110 <argp_parse@@Base+0x94c>
   120ac:	mov	r4, r0
   120b0:	sub	r5, r5, #36	; 0x24
   120b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   120b8:	cmp	r3, r5
   120bc:	bhi	12110 <argp_parse@@Base+0x94c>
   120c0:	cmp	r0, #0
   120c4:	cmpne	r0, #7
   120c8:	bne	12110 <argp_parse@@Base+0x94c>
   120cc:	ldr	r7, [pc, #348]	; 12230 <argp_parse@@Base+0xa6c>
   120d0:	mov	r6, #0
   120d4:	mov	r3, r6
   120d8:	mov	r2, r7
   120dc:	sub	r1, fp, #96	; 0x60
   120e0:	mov	r0, r5
   120e4:	bl	111dc <__assert_fail@plt+0x260>
   120e8:	sub	r5, r5, #36	; 0x24
   120ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   120f0:	cmp	r5, r3
   120f4:	bcc	1210c <argp_parse@@Base+0x948>
   120f8:	cmp	r0, #7
   120fc:	cmpne	r0, #0
   12100:	beq	120d4 <argp_parse@@Base+0x910>
   12104:	mov	r4, r0
   12108:	b	12110 <argp_parse@@Base+0x94c>
   1210c:	mov	r4, r0
   12110:	cmp	r4, #7
   12114:	beq	12194 <argp_parse@@Base+0x9d0>
   12118:	ldr	r3, [fp, #4]
   1211c:	cmp	r3, #0
   12120:	beq	121d8 <argp_parse@@Base+0xa14>
   12124:	ldr	r3, [fp, #-84]	; 0xffffffac
   12128:	ldr	r2, [fp, #4]
   1212c:	str	r3, [r2]
   12130:	cmp	r4, #0
   12134:	beq	11f28 <argp_parse@@Base+0x764>
   12138:	b	11fa0 <argp_parse@@Base+0x7dc>
   1213c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12140:	tst	r3, #2
   12144:	bne	12160 <argp_parse@@Base+0x99c>
   12148:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1214c:	cmp	r0, #0
   12150:	beq	12160 <argp_parse@@Base+0x99c>
   12154:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12158:	ldr	r1, [pc, #212]	; 12234 <argp_parse@@Base+0xa70>
   1215c:	bl	10ebc <fprintf@plt>
   12160:	mov	r2, #260	; 0x104
   12164:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12168:	sub	r0, fp, #96	; 0x60
   1216c:	bl	15a8c <argp_state_help@@Base>
   12170:	mov	r4, #7
   12174:	b	11fa8 <argp_parse@@Base+0x7e4>
   12178:	mov	r4, #0
   1217c:	b	12024 <argp_parse@@Base+0x860>
   12180:	sub	r5, r5, #36	; 0x24
   12184:	cmp	r6, r5
   12188:	movhi	r4, #0
   1218c:	bls	120cc <argp_parse@@Base+0x908>
   12190:	b	12118 <argp_parse@@Base+0x954>
   12194:	ldr	r3, [fp, #4]
   12198:	cmp	r3, #0
   1219c:	movne	r4, #0
   121a0:	bne	12124 <argp_parse@@Base+0x960>
   121a4:	b	11f28 <argp_parse@@Base+0x764>
   121a8:	cmp	r0, #0
   121ac:	bne	11dfc <argp_parse@@Base+0x638>
   121b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   121b4:	str	r3, [fp, #-84]	; 0xffffffac
   121b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   121bc:	cmp	r8, r3
   121c0:	sublt	r8, r3, r8
   121c4:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   121c8:	addlt	r8, r3, r8
   121cc:	strlt	r8, [r5, #-24]	; 0xffffffe8
   121d0:	strge	sl, [fp, #-100]	; 0xffffff9c
   121d4:	b	11e4c <argp_parse@@Base+0x688>
   121d8:	cmp	r4, #0
   121dc:	beq	11f28 <argp_parse@@Base+0x764>
   121e0:	b	11fa8 <argp_parse@@Base+0x7e4>
   121e4:	andeq	r9, r2, r4, asr #2
   121e8:	andeq	r9, r2, r0, asr #2
   121ec:	andeq	r9, r2, r8, asr #2
   121f0:	andeq	r9, r2, ip, asr #2
   121f4:	tsteq	r0, r3
   121f8:	andeq	r7, r1, r0, asr #25
   121fc:	muleq	r2, r0, r1
   12200:	ldrdeq	r7, [r1], -ip
   12204:	andeq	r9, r2, r8, asr r1
   12208:	strdeq	r7, [r1], -r8
   1220c:	andeq	r7, r1, ip, lsl #28
   12210:	andeq	r7, r1, r8, lsl #28
   12214:	tsteq	r0, r6
   12218:	andeq	r7, r1, r4, lsl #28
   1221c:	andeq	r7, r1, r4, lsl lr
   12220:	tsteq	r0, r4
   12224:	tsteq	r0, r5
   12228:	tsteq	r0, r7
   1222c:	tsteq	r0, r2
   12230:	tsteq	r0, r1
   12234:	andeq	r7, r1, r0, lsr #28
   12238:	cmp	r1, #0
   1223c:	beq	12288 <argp_parse@@Base+0xac4>
   12240:	ldr	r2, [r1, #52]	; 0x34
   12244:	ldr	r3, [r2, #48]	; 0x30
   12248:	ldr	r1, [r2, #52]	; 0x34
   1224c:	cmp	r3, r1
   12250:	bcs	12290 <argp_parse@@Base+0xacc>
   12254:	ldr	r2, [r3, #4]
   12258:	cmp	r0, r2
   1225c:	beq	12278 <argp_parse@@Base+0xab4>
   12260:	add	r3, r3, #36	; 0x24
   12264:	cmp	r3, r1
   12268:	bcs	12280 <argp_parse@@Base+0xabc>
   1226c:	ldr	r2, [r3, #4]
   12270:	cmp	r2, r0
   12274:	bne	12260 <argp_parse@@Base+0xa9c>
   12278:	ldr	r0, [r3, #24]
   1227c:	bx	lr
   12280:	mov	r0, #0
   12284:	bx	lr
   12288:	mov	r0, #0
   1228c:	bx	lr
   12290:	mov	r0, #0
   12294:	bx	lr
   12298:	push	{lr}		; (str lr, [sp, #-4]!)
   1229c:	sub	sp, sp, #12
   122a0:	ldr	r3, [pc, #28]	; 122c4 <argp_parse@@Base+0xb00>
   122a4:	ldr	r1, [r3]
   122a8:	ldr	r3, [r3, #4]
   122ac:	str	r3, [sp]
   122b0:	ldr	r3, [pc, #16]	; 122c8 <argp_parse@@Base+0xb04>
   122b4:	ldr	r2, [pc, #16]	; 122cc <argp_parse@@Base+0xb08>
   122b8:	bl	12878 <argp_parse@@Base+0x10b4>
   122bc:	add	sp, sp, #12
   122c0:	pop	{pc}		; (ldr pc, [sp], #4)
   122c4:	andeq	r9, r2, ip, asr r1
   122c8:	andeq	r7, r1, r8, lsl #30
   122cc:	andeq	r7, r1, r8, lsl pc
   122d0:	ldr	r2, [pc, #20]	; 122ec <argp_parse@@Base+0xb28>
   122d4:	ldr	r3, [pc, #20]	; 122f0 <argp_parse@@Base+0xb2c>
   122d8:	str	r2, [r3]
   122dc:	ldr	r3, [pc, #16]	; 122f4 <argp_parse@@Base+0xb30>
   122e0:	str	r0, [r3]
   122e4:	str	r1, [r3, #4]
   122e8:	bx	lr
   122ec:	muleq	r1, r8, r2
   122f0:	andeq	r9, r2, r8, asr r1
   122f4:	andeq	r9, r2, ip, asr r1
   122f8:	ldrb	r3, [r0]
   122fc:	cmp	r3, #47	; 0x2f
   12300:	bne	12310 <argp_parse@@Base+0xb4c>
   12304:	ldrb	r3, [r0, #1]!
   12308:	cmp	r3, #47	; 0x2f
   1230c:	beq	12304 <argp_parse@@Base+0xb40>
   12310:	ldrb	r2, [r0]
   12314:	cmp	r2, #0
   12318:	bxeq	lr
   1231c:	push	{lr}		; (str lr, [sp, #-4]!)
   12320:	mov	r1, r0
   12324:	mov	r3, #0
   12328:	mov	lr, #1
   1232c:	mov	ip, r3
   12330:	b	12340 <argp_parse@@Base+0xb7c>
   12334:	ldrb	r2, [r1, #1]!
   12338:	cmp	r2, #0
   1233c:	beq	1235c <argp_parse@@Base+0xb98>
   12340:	cmp	r2, #47	; 0x2f
   12344:	moveq	r3, lr
   12348:	beq	12334 <argp_parse@@Base+0xb70>
   1234c:	cmp	r3, #0
   12350:	movne	r0, r1
   12354:	movne	r3, ip
   12358:	b	12334 <argp_parse@@Base+0xb70>
   1235c:	pop	{pc}		; (ldr pc, [sp], #4)
   12360:	push	{r4, lr}
   12364:	mov	r4, r0
   12368:	bl	10ea4 <strlen@plt>
   1236c:	cmp	r0, #1
   12370:	popls	{r4, pc}
   12374:	sub	r3, r0, #1
   12378:	add	r2, r4, r3
   1237c:	ldrb	r1, [r4, r3]
   12380:	cmp	r1, #47	; 0x2f
   12384:	popne	{r4, pc}
   12388:	cmp	r3, #1
   1238c:	beq	123b0 <argp_parse@@Base+0xbec>
   12390:	sub	r0, r3, #1
   12394:	ldrb	r1, [r2, #-1]!
   12398:	cmp	r1, #47	; 0x2f
   1239c:	beq	123a8 <argp_parse@@Base+0xbe4>
   123a0:	mov	r0, r3
   123a4:	pop	{r4, pc}
   123a8:	mov	r3, r0
   123ac:	b	12388 <argp_parse@@Base+0xbc4>
   123b0:	mov	r0, #1
   123b4:	pop	{r4, pc}
   123b8:	push	{r4, r5, lr}
   123bc:	sub	sp, sp, #12
   123c0:	mov	r5, r0
   123c4:	bl	10ec8 <__errno_location@plt>
   123c8:	mov	r4, r0
   123cc:	ldr	r3, [r0]
   123d0:	str	r3, [sp]
   123d4:	str	r3, [sp, #4]
   123d8:	mov	r3, #0
   123dc:	str	r3, [r0]
   123e0:	mov	r0, r5
   123e4:	bl	10d9c <free@plt>
   123e8:	ldr	r3, [r4]
   123ec:	cmp	r3, #0
   123f0:	moveq	r3, #4
   123f4:	movne	r3, #0
   123f8:	add	r2, sp, #8
   123fc:	add	r3, r2, r3
   12400:	ldr	r3, [r3, #-8]
   12404:	str	r3, [r4]
   12408:	add	sp, sp, #12
   1240c:	pop	{r4, r5, pc}
   12410:	push	{lr}		; (str lr, [sp, #-4]!)
   12414:	sub	sp, sp, #20
   12418:	mov	ip, #0
   1241c:	str	ip, [sp, #8]
   12420:	str	ip, [sp, #4]
   12424:	ldr	ip, [sp, #24]
   12428:	str	ip, [sp]
   1242c:	bl	167c4 <argp_error@@Base+0xc7c>
   12430:	add	sp, sp, #20
   12434:	pop	{pc}		; (ldr pc, [sp], #4)
   12438:	push	{lr}		; (str lr, [sp, #-4]!)
   1243c:	sub	sp, sp, #20
   12440:	mov	ip, #0
   12444:	str	ip, [sp, #12]
   12448:	ldr	lr, [sp, #28]
   1244c:	str	lr, [sp, #8]
   12450:	str	ip, [sp, #4]
   12454:	ldr	ip, [sp, #24]
   12458:	str	ip, [sp]
   1245c:	bl	16248 <argp_error@@Base+0x700>
   12460:	add	sp, sp, #20
   12464:	pop	{pc}		; (ldr pc, [sp], #4)
   12468:	push	{lr}		; (str lr, [sp, #-4]!)
   1246c:	sub	sp, sp, #20
   12470:	mov	ip, #0
   12474:	str	ip, [sp, #8]
   12478:	mov	ip, #1
   1247c:	str	ip, [sp, #4]
   12480:	ldr	ip, [sp, #24]
   12484:	str	ip, [sp]
   12488:	bl	167c4 <argp_error@@Base+0xc7c>
   1248c:	add	sp, sp, #20
   12490:	pop	{pc}		; (ldr pc, [sp], #4)
   12494:	push	{lr}		; (str lr, [sp, #-4]!)
   12498:	sub	sp, sp, #20
   1249c:	mov	ip, #0
   124a0:	str	ip, [sp, #12]
   124a4:	ldr	ip, [sp, #28]
   124a8:	str	ip, [sp, #8]
   124ac:	mov	ip, #1
   124b0:	str	ip, [sp, #4]
   124b4:	ldr	ip, [sp, #24]
   124b8:	str	ip, [sp]
   124bc:	bl	16248 <argp_error@@Base+0x700>
   124c0:	add	sp, sp, #20
   124c4:	pop	{pc}		; (ldr pc, [sp], #4)
   124c8:	push	{r4, r5, r6, lr}
   124cc:	subs	r4, r0, #0
   124d0:	beq	12548 <argp_parse@@Base+0xd84>
   124d4:	mov	r1, #47	; 0x2f
   124d8:	mov	r0, r4
   124dc:	bl	10f04 <strrchr@plt>
   124e0:	cmp	r0, #0
   124e4:	addne	r5, r0, #1
   124e8:	moveq	r5, r4
   124ec:	sub	r3, r5, r4
   124f0:	cmp	r3, #6
   124f4:	ble	12534 <argp_parse@@Base+0xd70>
   124f8:	mov	r2, #7
   124fc:	ldr	r1, [pc, #96]	; 12564 <argp_parse@@Base+0xda0>
   12500:	sub	r0, r5, #7
   12504:	bl	10f64 <strncmp@plt>
   12508:	cmp	r0, #0
   1250c:	bne	12534 <argp_parse@@Base+0xd70>
   12510:	mov	r2, #3
   12514:	ldr	r1, [pc, #76]	; 12568 <argp_parse@@Base+0xda4>
   12518:	mov	r0, r5
   1251c:	bl	10f64 <strncmp@plt>
   12520:	cmp	r0, #0
   12524:	addeq	r4, r5, #3
   12528:	ldreq	r3, [pc, #60]	; 1256c <argp_parse@@Base+0xda8>
   1252c:	streq	r4, [r3]
   12530:	movne	r4, r5
   12534:	ldr	r3, [pc, #52]	; 12570 <argp_parse@@Base+0xdac>
   12538:	str	r4, [r3]
   1253c:	ldr	r3, [pc, #48]	; 12574 <argp_parse@@Base+0xdb0>
   12540:	str	r4, [r3]
   12544:	pop	{r4, r5, r6, pc}
   12548:	ldr	r3, [pc, #40]	; 12578 <argp_parse@@Base+0xdb4>
   1254c:	ldr	r3, [r3]
   12550:	mov	r2, #55	; 0x37
   12554:	mov	r1, #1
   12558:	ldr	r0, [pc, #28]	; 1257c <argp_parse@@Base+0xdb8>
   1255c:	bl	10e08 <fwrite@plt>
   12560:	bl	10f70 <abort@plt>
   12564:	andeq	r7, r1, r0, ror #30
   12568:	andeq	r7, r1, r8, ror #30
   1256c:	andeq	r9, r2, r0, asr #2
   12570:	andeq	r9, r2, r4, ror #2
   12574:	andeq	r9, r2, r4, asr #2
   12578:	andeq	r9, r2, r8, asr #2
   1257c:	andeq	r7, r1, r8, lsr #30
   12580:	push	{r4, r5, r6, lr}
   12584:	sub	sp, sp, #32
   12588:	mov	r4, r0
   1258c:	ldr	r5, [sp, #48]	; 0x30
   12590:	ldr	r6, [sp, #52]	; 0x34
   12594:	cmp	r1, #0
   12598:	beq	12620 <argp_parse@@Base+0xe5c>
   1259c:	str	r3, [sp]
   125a0:	mov	r3, r2
   125a4:	mov	r2, r1
   125a8:	ldr	r1, [pc, #644]	; 12834 <argp_parse@@Base+0x1070>
   125ac:	bl	10ebc <fprintf@plt>
   125b0:	ldr	r3, [pc, #640]	; 12838 <argp_parse@@Base+0x1074>
   125b4:	ldr	r2, [pc, #640]	; 1283c <argp_parse@@Base+0x1078>
   125b8:	ldr	r1, [pc, #640]	; 12840 <argp_parse@@Base+0x107c>
   125bc:	mov	r0, r4
   125c0:	bl	10ebc <fprintf@plt>
   125c4:	mov	r1, r4
   125c8:	mov	r0, #10
   125cc:	bl	10f1c <fputc@plt>
   125d0:	ldr	r2, [pc, #620]	; 12844 <argp_parse@@Base+0x1080>
   125d4:	ldr	r1, [pc, #620]	; 12848 <argp_parse@@Base+0x1084>
   125d8:	mov	r0, r4
   125dc:	bl	10ebc <fprintf@plt>
   125e0:	mov	r1, r4
   125e4:	mov	r0, #10
   125e8:	bl	10f1c <fputc@plt>
   125ec:	cmp	r6, #9
   125f0:	ldrls	pc, [pc, r6, lsl #2]
   125f4:	b	127e4 <argp_parse@@Base+0x1020>
   125f8:	andeq	r2, r1, ip, lsr r6
   125fc:	andeq	r2, r1, ip, lsr #12
   12600:	andeq	r2, r1, r4, asr #12
   12604:	andeq	r2, r1, ip, asr r6
   12608:	andeq	r2, r1, ip, ror r6
   1260c:	andeq	r2, r1, r4, lsr #13
   12610:	ldrdeq	r2, [r1], -r4
   12614:	andeq	r2, r1, ip, lsl #14
   12618:	andeq	r2, r1, ip, asr #14
   1261c:	muleq	r1, r4, r7
   12620:	ldr	r1, [pc, #548]	; 1284c <argp_parse@@Base+0x1088>
   12624:	bl	10ebc <fprintf@plt>
   12628:	b	125b0 <argp_parse@@Base+0xdec>
   1262c:	ldr	r2, [r5]
   12630:	ldr	r1, [pc, #536]	; 12850 <argp_parse@@Base+0x108c>
   12634:	mov	r0, r4
   12638:	bl	10ebc <fprintf@plt>
   1263c:	add	sp, sp, #32
   12640:	pop	{r4, r5, r6, pc}
   12644:	ldr	r3, [r5, #4]
   12648:	ldr	r2, [r5]
   1264c:	ldr	r1, [pc, #512]	; 12854 <argp_parse@@Base+0x1090>
   12650:	mov	r0, r4
   12654:	bl	10ebc <fprintf@plt>
   12658:	b	1263c <argp_parse@@Base+0xe78>
   1265c:	ldr	r3, [r5, #4]
   12660:	ldr	r2, [r5]
   12664:	ldr	r1, [r5, #8]
   12668:	str	r1, [sp]
   1266c:	ldr	r1, [pc, #484]	; 12858 <argp_parse@@Base+0x1094>
   12670:	mov	r0, r4
   12674:	bl	10ebc <fprintf@plt>
   12678:	b	1263c <argp_parse@@Base+0xe78>
   1267c:	ldr	r3, [r5, #4]
   12680:	ldr	r2, [r5]
   12684:	ldr	r1, [r5, #12]
   12688:	str	r1, [sp, #4]
   1268c:	ldr	r1, [r5, #8]
   12690:	str	r1, [sp]
   12694:	ldr	r1, [pc, #448]	; 1285c <argp_parse@@Base+0x1098>
   12698:	mov	r0, r4
   1269c:	bl	10ebc <fprintf@plt>
   126a0:	b	1263c <argp_parse@@Base+0xe78>
   126a4:	ldr	r3, [r5, #4]
   126a8:	ldr	r2, [r5]
   126ac:	ldr	r1, [r5, #16]
   126b0:	str	r1, [sp, #8]
   126b4:	ldr	r1, [r5, #12]
   126b8:	str	r1, [sp, #4]
   126bc:	ldr	r1, [r5, #8]
   126c0:	str	r1, [sp]
   126c4:	ldr	r1, [pc, #404]	; 12860 <argp_parse@@Base+0x109c>
   126c8:	mov	r0, r4
   126cc:	bl	10ebc <fprintf@plt>
   126d0:	b	1263c <argp_parse@@Base+0xe78>
   126d4:	ldr	r3, [r5, #4]
   126d8:	ldr	r2, [r5]
   126dc:	ldr	r1, [r5, #20]
   126e0:	str	r1, [sp, #12]
   126e4:	ldr	r1, [r5, #16]
   126e8:	str	r1, [sp, #8]
   126ec:	ldr	r1, [r5, #12]
   126f0:	str	r1, [sp, #4]
   126f4:	ldr	r1, [r5, #8]
   126f8:	str	r1, [sp]
   126fc:	ldr	r1, [pc, #352]	; 12864 <argp_parse@@Base+0x10a0>
   12700:	mov	r0, r4
   12704:	bl	10ebc <fprintf@plt>
   12708:	b	1263c <argp_parse@@Base+0xe78>
   1270c:	ldr	r3, [r5, #4]
   12710:	ldr	r2, [r5]
   12714:	ldr	r1, [r5, #24]
   12718:	str	r1, [sp, #16]
   1271c:	ldr	r1, [r5, #20]
   12720:	str	r1, [sp, #12]
   12724:	ldr	r1, [r5, #16]
   12728:	str	r1, [sp, #8]
   1272c:	ldr	r1, [r5, #12]
   12730:	str	r1, [sp, #4]
   12734:	ldr	r1, [r5, #8]
   12738:	str	r1, [sp]
   1273c:	ldr	r1, [pc, #292]	; 12868 <argp_parse@@Base+0x10a4>
   12740:	mov	r0, r4
   12744:	bl	10ebc <fprintf@plt>
   12748:	b	1263c <argp_parse@@Base+0xe78>
   1274c:	ldr	r3, [r5, #4]
   12750:	ldr	r2, [r5]
   12754:	ldr	r1, [r5, #28]
   12758:	str	r1, [sp, #20]
   1275c:	ldr	r1, [r5, #24]
   12760:	str	r1, [sp, #16]
   12764:	ldr	r1, [r5, #20]
   12768:	str	r1, [sp, #12]
   1276c:	ldr	r1, [r5, #16]
   12770:	str	r1, [sp, #8]
   12774:	ldr	r1, [r5, #12]
   12778:	str	r1, [sp, #4]
   1277c:	ldr	r1, [r5, #8]
   12780:	str	r1, [sp]
   12784:	ldr	r1, [pc, #224]	; 1286c <argp_parse@@Base+0x10a8>
   12788:	mov	r0, r4
   1278c:	bl	10ebc <fprintf@plt>
   12790:	b	1263c <argp_parse@@Base+0xe78>
   12794:	ldr	r3, [r5, #4]
   12798:	ldr	r2, [r5]
   1279c:	ldr	r1, [r5, #32]
   127a0:	str	r1, [sp, #24]
   127a4:	ldr	r1, [r5, #28]
   127a8:	str	r1, [sp, #20]
   127ac:	ldr	r1, [r5, #24]
   127b0:	str	r1, [sp, #16]
   127b4:	ldr	r1, [r5, #20]
   127b8:	str	r1, [sp, #12]
   127bc:	ldr	r1, [r5, #16]
   127c0:	str	r1, [sp, #8]
   127c4:	ldr	r1, [r5, #12]
   127c8:	str	r1, [sp, #4]
   127cc:	ldr	r1, [r5, #8]
   127d0:	str	r1, [sp]
   127d4:	ldr	r1, [pc, #148]	; 12870 <argp_parse@@Base+0x10ac>
   127d8:	mov	r0, r4
   127dc:	bl	10ebc <fprintf@plt>
   127e0:	b	1263c <argp_parse@@Base+0xe78>
   127e4:	ldr	r3, [r5, #4]
   127e8:	ldr	r2, [r5]
   127ec:	ldr	r1, [r5, #32]
   127f0:	str	r1, [sp, #24]
   127f4:	ldr	r1, [r5, #28]
   127f8:	str	r1, [sp, #20]
   127fc:	ldr	r1, [r5, #24]
   12800:	str	r1, [sp, #16]
   12804:	ldr	r1, [r5, #20]
   12808:	str	r1, [sp, #12]
   1280c:	ldr	r1, [r5, #16]
   12810:	str	r1, [sp, #8]
   12814:	ldr	r1, [r5, #12]
   12818:	str	r1, [sp, #4]
   1281c:	ldr	r1, [r5, #8]
   12820:	str	r1, [sp]
   12824:	ldr	r1, [pc, #72]	; 12874 <argp_parse@@Base+0x10b0>
   12828:	mov	r0, r4
   1282c:	bl	10ebc <fprintf@plt>
   12830:	b	1263c <argp_parse@@Base+0xe78>
   12834:	andeq	r7, r1, ip, ror #30
   12838:	andeq	r0, r0, r6, ror #15
   1283c:	andeq	r7, r1, r0, lsl #31
   12840:	andeq	r8, r1, r0, lsl #5
   12844:	andeq	r7, r1, r4, lsl #31
   12848:	andeq	r7, r1, r8, lsr #31
   1284c:	andeq	r7, r1, r8, ror pc
   12850:	andeq	r8, r1, r4, asr r0
   12854:	andeq	r8, r1, r4, rrx
   12858:	andeq	r8, r1, ip, ror r0
   1285c:	muleq	r1, r8, r0
   12860:	strheq	r8, [r1], -r8	; <UNPREDICTABLE>
   12864:	ldrdeq	r8, [r1], -ip
   12868:	andeq	r8, r1, r4, lsl #2
   1286c:	andeq	r8, r1, r0, lsr r1
   12870:	andeq	r8, r1, r0, ror #2
   12874:	muleq	r1, r4, r1
   12878:	push	{r4, r5, lr}
   1287c:	sub	sp, sp, #12
   12880:	ldr	r5, [sp, #24]
   12884:	ldr	ip, [r5]
   12888:	cmp	ip, #0
   1288c:	beq	128bc <argp_parse@@Base+0x10f8>
   12890:	mov	lr, r5
   12894:	mov	ip, #0
   12898:	add	ip, ip, #1
   1289c:	ldr	r4, [lr, #4]!
   128a0:	cmp	r4, #0
   128a4:	bne	12898 <argp_parse@@Base+0x10d4>
   128a8:	str	ip, [sp, #4]
   128ac:	str	r5, [sp]
   128b0:	bl	12580 <argp_parse@@Base+0xdbc>
   128b4:	add	sp, sp, #12
   128b8:	pop	{r4, r5, pc}
   128bc:	mov	ip, #0
   128c0:	b	128a8 <argp_parse@@Base+0x10e4>
   128c4:	push	{r4, r5, lr}
   128c8:	sub	sp, sp, #52	; 0x34
   128cc:	ldr	r4, [sp, #64]	; 0x40
   128d0:	sub	r4, r4, #4
   128d4:	add	r5, sp, #4
   128d8:	mov	ip, #0
   128dc:	ldr	lr, [r4, #4]!
   128e0:	str	lr, [r5, #4]!
   128e4:	cmp	lr, #0
   128e8:	beq	128f8 <argp_parse@@Base+0x1134>
   128ec:	add	ip, ip, #1
   128f0:	cmp	ip, #10
   128f4:	bne	128dc <argp_parse@@Base+0x1118>
   128f8:	str	ip, [sp, #4]
   128fc:	add	ip, sp, #8
   12900:	str	ip, [sp]
   12904:	bl	12580 <argp_parse@@Base+0xdbc>
   12908:	add	sp, sp, #52	; 0x34
   1290c:	pop	{r4, r5, pc}
   12910:	push	{r3}		; (str r3, [sp, #-4]!)
   12914:	push	{lr}		; (str lr, [sp, #-4]!)
   12918:	sub	sp, sp, #16
   1291c:	add	r3, sp, #24
   12920:	str	r3, [sp, #12]
   12924:	str	r3, [sp]
   12928:	ldr	r3, [sp, #20]
   1292c:	bl	128c4 <argp_parse@@Base+0x1100>
   12930:	add	sp, sp, #16
   12934:	pop	{lr}		; (ldr lr, [sp], #4)
   12938:	add	sp, sp, #4
   1293c:	bx	lr
   12940:	push	{r4, lr}
   12944:	ldr	r3, [pc, #52]	; 12980 <argp_parse@@Base+0x11bc>
   12948:	ldr	r1, [r3]
   1294c:	mov	r0, #10
   12950:	bl	10f1c <fputc@plt>
   12954:	ldr	r1, [pc, #40]	; 12984 <argp_parse@@Base+0x11c0>
   12958:	ldr	r0, [pc, #40]	; 12988 <argp_parse@@Base+0x11c4>
   1295c:	bl	10d78 <printf@plt>
   12960:	ldr	r2, [pc, #36]	; 1298c <argp_parse@@Base+0x11c8>
   12964:	ldr	r1, [pc, #36]	; 12990 <argp_parse@@Base+0x11cc>
   12968:	ldr	r0, [pc, #36]	; 12994 <argp_parse@@Base+0x11d0>
   1296c:	bl	10d78 <printf@plt>
   12970:	ldr	r1, [pc, #32]	; 12998 <argp_parse@@Base+0x11d4>
   12974:	ldr	r0, [pc, #32]	; 1299c <argp_parse@@Base+0x11d8>
   12978:	bl	10d78 <printf@plt>
   1297c:	pop	{r4, pc}
   12980:	andeq	r9, r2, ip, asr #2
   12984:	ldrdeq	r8, [r1], -r0
   12988:	andeq	r8, r1, r8, ror #3
   1298c:	strdeq	r8, [r1], -ip
   12990:	andeq	r7, r1, r8, lsl pc
   12994:	andeq	r8, r1, r4, lsr #4
   12998:	andeq	r8, r1, r8, lsr r2
   1299c:	andeq	r8, r1, r8, asr r2
   129a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129a4:	sub	sp, sp, #116	; 0x74
   129a8:	mov	r3, #100	; 0x64
   129ac:	str	r3, [sp, #8]
   129b0:	bl	10ec8 <__errno_location@plt>
   129b4:	mov	r5, r0
   129b8:	mov	fp, #0
   129bc:	add	sl, sp, #12
   129c0:	mov	r4, fp
   129c4:	mov	r6, #1
   129c8:	ldr	r7, [pc, #196]	; 12a94 <argp_parse@@Base+0x12d0>
   129cc:	mvn	r8, #0
   129d0:	b	12a44 <argp_parse@@Base+0x1280>
   129d4:	cmp	fp, #0
   129d8:	bne	12a88 <argp_parse@@Base+0x12c4>
   129dc:	mov	r1, r0
   129e0:	mov	r0, sl
   129e4:	bl	16d94 <argp_error@@Base+0x124c>
   129e8:	mov	fp, r0
   129ec:	b	12a88 <argp_parse@@Base+0x12c4>
   129f0:	mov	r0, fp
   129f4:	bl	123b8 <argp_parse@@Base+0xbf4>
   129f8:	ldr	r2, [r5]
   129fc:	cmp	r2, #22
   12a00:	lsrls	r3, r7, r2
   12a04:	eorls	r3, r3, #1
   12a08:	andls	r3, r3, #1
   12a0c:	movhi	r3, r6
   12a10:	cmp	r2, #36	; 0x24
   12a14:	moveq	r3, #0
   12a18:	andne	r3, r3, #1
   12a1c:	cmp	r3, #0
   12a20:	bne	12a84 <argp_parse@@Base+0x12c0>
   12a24:	str	r6, [sp]
   12a28:	mov	r3, r8
   12a2c:	mov	r2, r6
   12a30:	add	r1, sp, #8
   12a34:	mov	r0, r4
   12a38:	bl	16a08 <argp_error@@Base+0xec0>
   12a3c:	mov	fp, r0
   12a40:	mov	sl, r0
   12a44:	ldr	r9, [sp, #8]
   12a48:	sub	r9, r9, #1
   12a4c:	strb	r4, [sl, r9]
   12a50:	str	r4, [r5]
   12a54:	mov	r1, r9
   12a58:	mov	r0, sl
   12a5c:	bl	10e20 <gethostname@plt>
   12a60:	cmp	r0, #0
   12a64:	bne	129f0 <argp_parse@@Base+0x122c>
   12a68:	mov	r0, sl
   12a6c:	bl	10ea4 <strlen@plt>
   12a70:	add	r0, r0, #1
   12a74:	cmp	r9, r0
   12a78:	bgt	129d4 <argp_parse@@Base+0x1210>
   12a7c:	str	r4, [r5]
   12a80:	b	129f0 <argp_parse@@Base+0x122c>
   12a84:	mov	fp, #0
   12a88:	mov	r0, fp
   12a8c:	add	sp, sp, #116	; 0x74
   12a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a94:	subeq	r1, r0, r1
   12a98:	push	{r4, lr}
   12a9c:	cmp	r0, #0
   12aa0:	moveq	r0, #1
   12aa4:	cmp	r0, #0
   12aa8:	blt	12ab4 <argp_parse@@Base+0x12f0>
   12aac:	bl	10e44 <malloc@plt>
   12ab0:	pop	{r4, pc}
   12ab4:	bl	10ec8 <__errno_location@plt>
   12ab8:	mov	r3, #12
   12abc:	str	r3, [r0]
   12ac0:	mov	r0, #0
   12ac4:	pop	{r4, pc}
   12ac8:	ldr	r3, [r0]
   12acc:	ldr	r2, [r0, #4]
   12ad0:	cmp	r2, #0
   12ad4:	beq	12b10 <argp_parse@@Base+0x134c>
   12ad8:	add	r3, r3, #24
   12adc:	b	12aec <argp_parse@@Base+0x1328>
   12ae0:	add	r3, r3, #24
   12ae4:	subs	r2, r2, #1
   12ae8:	beq	12b08 <argp_parse@@Base+0x1344>
   12aec:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12af0:	cmp	r0, #0
   12af4:	beq	12ae0 <argp_parse@@Base+0x131c>
   12af8:	ldr	r1, [r3, #-12]
   12afc:	tst	r1, #2
   12b00:	bne	12ae0 <argp_parse@@Base+0x131c>
   12b04:	bx	lr
   12b08:	mov	r0, #0
   12b0c:	bx	lr
   12b10:	mov	r0, #0
   12b14:	bx	lr
   12b18:	ldr	r2, [r0, #8]
   12b1c:	cmp	r2, #0
   12b20:	beq	12b2c <argp_parse@@Base+0x1368>
   12b24:	mov	r0, #0
   12b28:	bx	lr
   12b2c:	ldr	r2, [r1, #8]
   12b30:	cmp	r2, #0
   12b34:	bne	12b24 <argp_parse@@Base+0x1360>
   12b38:	ldr	r2, [r0, #12]
   12b3c:	ldr	r1, [r1, #12]
   12b40:	orr	r2, r2, r1
   12b44:	tst	r2, #16
   12b48:	ldreq	r2, [r3]
   12b4c:	addeq	r1, r2, #1
   12b50:	streq	r1, [r3]
   12b54:	ldreq	r3, [r0, #4]
   12b58:	strbeq	r3, [r2]
   12b5c:	b	12b24 <argp_parse@@Base+0x1360>
   12b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b64:	sub	sp, sp, #12
   12b68:	ldr	r4, [r0]
   12b6c:	ldr	r9, [r0, #8]
   12b70:	ldr	r5, [r0, #4]
   12b74:	cmp	r5, #0
   12b78:	beq	12bcc <argp_parse@@Base+0x1408>
   12b7c:	str	r3, [sp, #4]
   12b80:	str	r2, [sp]
   12b84:	mov	fp, r1
   12b88:	mov	sl, r4
   12b8c:	mov	r8, #0
   12b90:	b	12c0c <argp_parse@@Base+0x1448>
   12b94:	and	r3, r6, #4
   12b98:	cmp	r3, #0
   12b9c:	moveq	sl, r4
   12ba0:	tst	r6, #2
   12ba4:	beq	12bb0 <argp_parse@@Base+0x13ec>
   12ba8:	add	r9, r9, #1
   12bac:	b	12be8 <argp_parse@@Base+0x1424>
   12bb0:	ldr	r3, [sp, #4]
   12bb4:	ldr	r2, [sp]
   12bb8:	mov	r1, sl
   12bbc:	mov	r0, r4
   12bc0:	blx	fp
   12bc4:	mov	r8, r0
   12bc8:	b	12ba8 <argp_parse@@Base+0x13e4>
   12bcc:	mov	r8, #0
   12bd0:	mov	r0, r8
   12bd4:	add	sp, sp, #12
   12bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bdc:	ldrb	r3, [r9]
   12be0:	cmp	r3, r7
   12be4:	beq	12b94 <argp_parse@@Base+0x13d0>
   12be8:	add	r4, r4, #24
   12bec:	subs	r5, r5, #1
   12bf0:	movne	r3, #1
   12bf4:	moveq	r3, #0
   12bf8:	cmp	r8, #0
   12bfc:	movne	r3, #0
   12c00:	andeq	r3, r3, #1
   12c04:	cmp	r3, #0
   12c08:	beq	12bd0 <argp_parse@@Base+0x140c>
   12c0c:	ldr	r6, [r4, #12]
   12c10:	tst	r6, #8
   12c14:	bne	12be8 <argp_parse@@Base+0x1424>
   12c18:	ldr	r7, [r4, #4]
   12c1c:	sub	r3, r7, #1
   12c20:	cmp	r3, #254	; 0xfe
   12c24:	bhi	12be8 <argp_parse@@Base+0x1424>
   12c28:	bl	10e8c <__ctype_b_loc@plt>
   12c2c:	ldr	r2, [r0]
   12c30:	lsl	r3, r7, #1
   12c34:	ldrh	r3, [r2, r3]
   12c38:	tst	r3, #16384	; 0x4000
   12c3c:	bne	12bdc <argp_parse@@Base+0x1418>
   12c40:	b	12be8 <argp_parse@@Base+0x1424>
   12c44:	push	{r4, r5, r6, lr}
   12c48:	ldr	r4, [r0, #12]
   12c4c:	ands	r4, r4, #8
   12c50:	movne	r4, #0
   12c54:	bne	12c84 <argp_parse@@Base+0x14c0>
   12c58:	ldr	r5, [r0, #4]
   12c5c:	sub	r3, r5, #1
   12c60:	cmp	r3, #254	; 0xfe
   12c64:	bhi	12c84 <argp_parse@@Base+0x14c0>
   12c68:	bl	10e8c <__ctype_b_loc@plt>
   12c6c:	ldr	r2, [r0]
   12c70:	lsl	r3, r5, #1
   12c74:	ldrh	r3, [r2, r3]
   12c78:	and	r3, r3, #16384	; 0x4000
   12c7c:	cmp	r3, #0
   12c80:	movne	r4, r5
   12c84:	mov	r0, r4
   12c88:	pop	{r4, r5, r6, pc}
   12c8c:	push	{r4, lr}
   12c90:	mov	r4, r0
   12c94:	bl	10e8c <__ctype_b_loc@plt>
   12c98:	b	12ca4 <argp_parse@@Base+0x14e0>
   12c9c:	add	r3, r3, #1
   12ca0:	str	r3, [r4]
   12ca4:	ldr	r3, [r4]
   12ca8:	ldrb	r2, [r3]
   12cac:	ldr	ip, [r0]
   12cb0:	lsl	r1, r2, #1
   12cb4:	ldrh	r1, [ip, r1]
   12cb8:	tst	r1, #8192	; 0x2000
   12cbc:	bne	12c9c <argp_parse@@Base+0x14d8>
   12cc0:	subs	ip, r2, #45	; 0x2d
   12cc4:	movne	ip, #1
   12cc8:	cmp	r2, #0
   12ccc:	beq	12d00 <argp_parse@@Base+0x153c>
   12cd0:	tst	r1, #8
   12cd4:	bne	12d00 <argp_parse@@Base+0x153c>
   12cd8:	add	r3, r3, #1
   12cdc:	str	r3, [r4]
   12ce0:	ldrb	r2, [r3]
   12ce4:	cmp	r2, #0
   12ce8:	beq	12d00 <argp_parse@@Base+0x153c>
   12cec:	ldr	r1, [r0]
   12cf0:	lsl	r2, r2, #1
   12cf4:	ldrh	r2, [r1, r2]
   12cf8:	tst	r2, #8
   12cfc:	beq	12cd8 <argp_parse@@Base+0x1514>
   12d00:	mov	r0, ip
   12d04:	pop	{r4, pc}
   12d08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d0c:	add	fp, sp, #32
   12d10:	sub	sp, sp, #12
   12d14:	ldr	r5, [r0, #4]
   12d18:	cmp	r5, #0
   12d1c:	bne	12d28 <argp_parse@@Base+0x1564>
   12d20:	sub	sp, fp, #32
   12d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d28:	mov	r9, r1
   12d2c:	mov	r6, r0
   12d30:	ldr	r0, [r0, #8]
   12d34:	bl	10ea4 <strlen@plt>
   12d38:	add	r3, r0, #15
   12d3c:	bic	r3, r3, #7
   12d40:	sub	sp, sp, r3
   12d44:	mov	sl, sp
   12d48:	sub	r7, fp, #36	; 0x24
   12d4c:	str	sp, [r7, #-4]!
   12d50:	ldr	r4, [r6]
   12d54:	ldr	r8, [pc, #336]	; 12eac <argp_parse@@Base+0x16e8>
   12d58:	ldr	r2, [r4, #20]
   12d5c:	mov	r3, r7
   12d60:	ldr	r2, [r2, #24]
   12d64:	mov	r1, r8
   12d68:	mov	r0, r4
   12d6c:	bl	12b60 <argp_parse@@Base+0x139c>
   12d70:	add	r4, r4, #28
   12d74:	subs	r5, r5, #1
   12d78:	bne	12d58 <argp_parse@@Base+0x1594>
   12d7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d80:	cmp	sl, r3
   12d84:	bcc	12ddc <argp_parse@@Base+0x1618>
   12d88:	ldr	r4, [r6]
   12d8c:	ldr	r5, [r6, #4]
   12d90:	cmp	r5, #0
   12d94:	beq	12d20 <argp_parse@@Base+0x155c>
   12d98:	ldr	r7, [pc, #272]	; 12eb0 <argp_parse@@Base+0x16ec>
   12d9c:	ldr	r2, [r4, #20]
   12da0:	mov	r3, r9
   12da4:	ldr	r2, [r2, #24]
   12da8:	mov	r1, r7
   12dac:	mov	r0, r4
   12db0:	bl	12b60 <argp_parse@@Base+0x139c>
   12db4:	add	r4, r4, #28
   12db8:	subs	r5, r5, #1
   12dbc:	bne	12d9c <argp_parse@@Base+0x15d8>
   12dc0:	ldr	r7, [r6]
   12dc4:	ldr	r8, [r6, #4]
   12dc8:	cmp	r8, #0
   12dcc:	beq	12d20 <argp_parse@@Base+0x155c>
   12dd0:	add	r7, r7, #28
   12dd4:	ldr	sl, [pc, #216]	; 12eb4 <argp_parse@@Base+0x16f0>
   12dd8:	b	12e94 <argp_parse@@Base+0x16d0>
   12ddc:	add	r2, r3, #1
   12de0:	str	r2, [fp, #-40]	; 0xffffffd8
   12de4:	mov	r2, #0
   12de8:	strb	r2, [r3]
   12dec:	mov	r2, sl
   12df0:	ldr	r1, [pc, #192]	; 12eb8 <argp_parse@@Base+0x16f4>
   12df4:	mov	r0, r9
   12df8:	bl	175d8 <argp_error@@Base+0x1a90>
   12dfc:	b	12d88 <argp_parse@@Base+0x15c4>
   12e00:	tst	r1, #16
   12e04:	bne	12e28 <argp_parse@@Base+0x1664>
   12e08:	ldr	r3, [r6, #8]
   12e0c:	cmp	r3, #0
   12e10:	beq	12e78 <argp_parse@@Base+0x16b4>
   12e14:	tst	r1, #1
   12e18:	ldrne	r1, [pc, #156]	; 12ebc <argp_parse@@Base+0x16f8>
   12e1c:	moveq	r1, sl
   12e20:	mov	r0, r9
   12e24:	bl	175d8 <argp_error@@Base+0x1a90>
   12e28:	add	r4, r4, #24
   12e2c:	subs	r5, r5, #1
   12e30:	beq	12e88 <argp_parse@@Base+0x16c4>
   12e34:	ldr	r2, [r4]
   12e38:	cmp	r2, #0
   12e3c:	beq	12e28 <argp_parse@@Base+0x1664>
   12e40:	ldr	r1, [r4, #12]
   12e44:	and	r3, r1, #4
   12e48:	cmp	r3, #0
   12e4c:	moveq	r6, r4
   12e50:	tst	r1, #2
   12e54:	bne	12e28 <argp_parse@@Base+0x1664>
   12e58:	ldr	r3, [r4, #8]
   12e5c:	ldr	r0, [r6, #12]
   12e60:	orr	r1, r1, r0
   12e64:	cmp	r3, #0
   12e68:	beq	12e00 <argp_parse@@Base+0x163c>
   12e6c:	tst	r1, #16
   12e70:	beq	12e14 <argp_parse@@Base+0x1650>
   12e74:	b	12e28 <argp_parse@@Base+0x1664>
   12e78:	ldr	r1, [pc, #64]	; 12ec0 <argp_parse@@Base+0x16fc>
   12e7c:	mov	r0, r9
   12e80:	bl	175d8 <argp_error@@Base+0x1a90>
   12e84:	b	12e28 <argp_parse@@Base+0x1664>
   12e88:	add	r7, r7, #28
   12e8c:	subs	r8, r8, #1
   12e90:	beq	12d20 <argp_parse@@Base+0x155c>
   12e94:	ldr	r4, [r7, #-28]	; 0xffffffe4
   12e98:	ldr	r5, [r7, #-24]	; 0xffffffe8
   12e9c:	cmp	r5, #0
   12ea0:	beq	12e88 <argp_parse@@Base+0x16c4>
   12ea4:	mov	r6, r4
   12ea8:	b	12e34 <argp_parse@@Base+0x1670>
   12eac:	andeq	r2, r1, r8, lsl fp
   12eb0:	andeq	r3, r1, r8, asr r1
   12eb4:	andeq	r8, r1, r0, ror r3
   12eb8:	andeq	r8, r1, r8, asr r3
   12ebc:	andeq	r8, r1, r0, ror #6
   12ec0:	andeq	r8, r1, ip, ror r3
   12ec4:	push	{r4, r5, r6, lr}
   12ec8:	mov	r5, r0
   12ecc:	ldr	r0, [r0, #12]
   12ed0:	cmp	r0, #0
   12ed4:	beq	12eec <argp_parse@@Base+0x1728>
   12ed8:	ldr	r4, [r0, #24]
   12edc:	bl	123b8 <argp_parse@@Base+0xbf4>
   12ee0:	mov	r0, r4
   12ee4:	cmp	r4, #0
   12ee8:	bne	12ed8 <argp_parse@@Base+0x1714>
   12eec:	ldr	r3, [r5, #4]
   12ef0:	cmp	r3, #0
   12ef4:	bne	12f04 <argp_parse@@Base+0x1740>
   12ef8:	mov	r0, r5
   12efc:	bl	123b8 <argp_parse@@Base+0xbf4>
   12f00:	pop	{r4, r5, r6, pc}
   12f04:	ldr	r0, [r5]
   12f08:	bl	123b8 <argp_parse@@Base+0xbf4>
   12f0c:	ldr	r0, [r5, #8]
   12f10:	bl	123b8 <argp_parse@@Base+0xbf4>
   12f14:	b	12ef8 <argp_parse@@Base+0x1734>
   12f18:	push	{r4, r5, r6, r7, r8, lr}
   12f1c:	mov	r6, r1
   12f20:	ldr	r7, [r0]
   12f24:	ldr	r3, [r0, #4]
   12f28:	sub	r8, r3, #1
   12f2c:	cmp	r3, #0
   12f30:	bne	12f8c <argp_parse@@Base+0x17c8>
   12f34:	mov	r7, #0
   12f38:	b	12f74 <argp_parse@@Base+0x17b0>
   12f3c:	sub	r5, r5, #1
   12f40:	add	r4, r4, #24
   12f44:	cmn	r5, #1
   12f48:	beq	12f7c <argp_parse@@Base+0x17b8>
   12f4c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12f50:	cmp	r0, #0
   12f54:	beq	12f3c <argp_parse@@Base+0x1778>
   12f58:	ldr	r3, [r4, #-12]
   12f5c:	tst	r3, #2
   12f60:	bne	12f3c <argp_parse@@Base+0x1778>
   12f64:	mov	r1, r6
   12f68:	bl	10d60 <strcmp@plt>
   12f6c:	cmp	r0, #0
   12f70:	bne	12f3c <argp_parse@@Base+0x1778>
   12f74:	mov	r0, r7
   12f78:	pop	{r4, r5, r6, r7, r8, pc}
   12f7c:	add	r7, r7, #28
   12f80:	sub	r8, r8, #1
   12f84:	cmn	r8, #1
   12f88:	beq	12fa8 <argp_parse@@Base+0x17e4>
   12f8c:	ldr	r4, [r7]
   12f90:	ldr	r3, [r7, #4]
   12f94:	sub	r5, r3, #1
   12f98:	cmp	r3, #0
   12f9c:	beq	12f7c <argp_parse@@Base+0x17b8>
   12fa0:	add	r4, r4, #24
   12fa4:	b	12f4c <argp_parse@@Base+0x1788>
   12fa8:	mov	r7, #0
   12fac:	b	12f74 <argp_parse@@Base+0x17b0>
   12fb0:	push	{r4, r5, r6, lr}
   12fb4:	ldr	r4, [r0, #16]
   12fb8:	ldr	r0, [r0, #8]
   12fbc:	cmp	r0, #0
   12fc0:	moveq	r5, #0
   12fc4:	beq	12fd8 <argp_parse@@Base+0x1814>
   12fc8:	mov	r1, #10
   12fcc:	bl	10eb0 <strchr@plt>
   12fd0:	adds	r5, r0, #0
   12fd4:	movne	r5, #1
   12fd8:	cmp	r4, #0
   12fdc:	beq	13000 <argp_parse@@Base+0x183c>
   12fe0:	ldr	r0, [r4]
   12fe4:	cmp	r0, #0
   12fe8:	beq	13000 <argp_parse@@Base+0x183c>
   12fec:	bl	12fb0 <argp_parse@@Base+0x17ec>
   12ff0:	add	r5, r5, r0
   12ff4:	ldr	r0, [r4, #16]!
   12ff8:	cmp	r0, #0
   12ffc:	bne	12fec <argp_parse@@Base+0x1828>
   13000:	mov	r0, r5
   13004:	pop	{r4, r5, r6, pc}
   13008:	push	{r4, r5, r6, r7, r8, lr}
   1300c:	mov	r4, r0
   13010:	mov	r5, r1
   13014:	ldr	r3, [r0, #28]
   13018:	ldr	r2, [r0, #24]
   1301c:	sub	r3, r3, r2
   13020:	ldr	r2, [r0, #16]
   13024:	cmp	r3, r2
   13028:	bhi	13044 <argp_parse@@Base+0x1880>
   1302c:	ldr	r3, [r4, #20]
   13030:	cmp	r3, #0
   13034:	subge	r5, r5, r3
   13038:	mov	r6, #32
   1303c:	mov	r7, #1
   13040:	b	13060 <argp_parse@@Base+0x189c>
   13044:	bl	16f44 <argp_error@@Base+0x13fc>
   13048:	b	1302c <argp_parse@@Base+0x1868>
   1304c:	ldr	r3, [r4, #28]
   13050:	add	r2, r3, #1
   13054:	str	r2, [r4, #28]
   13058:	strb	r6, [r3]
   1305c:	sub	r5, r5, #1
   13060:	cmp	r5, #0
   13064:	ble	13090 <argp_parse@@Base+0x18cc>
   13068:	ldr	r2, [r4, #28]
   1306c:	ldr	r3, [r4, #32]
   13070:	cmp	r2, r3
   13074:	bcc	1304c <argp_parse@@Base+0x1888>
   13078:	mov	r1, r7
   1307c:	mov	r0, r4
   13080:	bl	174e8 <argp_error@@Base+0x19a0>
   13084:	cmp	r0, #0
   13088:	beq	1305c <argp_parse@@Base+0x1898>
   1308c:	b	1304c <argp_parse@@Base+0x1888>
   13090:	pop	{r4, r5, r6, r7, r8, pc}
   13094:	push	{r4, r5, r6, lr}
   13098:	mov	r4, r0
   1309c:	mov	r5, r1
   130a0:	ldr	r3, [r0, #28]
   130a4:	ldr	r2, [r0, #24]
   130a8:	sub	r3, r3, r2
   130ac:	ldr	r2, [r0, #16]
   130b0:	cmp	r3, r2
   130b4:	bhi	130f8 <argp_parse@@Base+0x1934>
   130b8:	ldr	r3, [r4, #20]
   130bc:	cmp	r3, #0
   130c0:	addge	r5, r5, r3
   130c4:	ldr	r3, [r4, #8]
   130c8:	cmp	r5, r3
   130cc:	bcc	13118 <argp_parse@@Base+0x1954>
   130d0:	ldr	r2, [r4, #28]
   130d4:	ldr	r3, [r4, #32]
   130d8:	cmp	r2, r3
   130dc:	bcs	13100 <argp_parse@@Base+0x193c>
   130e0:	ldr	r3, [r4, #28]
   130e4:	add	r2, r3, #1
   130e8:	str	r2, [r4, #28]
   130ec:	mov	r2, #10
   130f0:	strb	r2, [r3]
   130f4:	pop	{r4, r5, r6, pc}
   130f8:	bl	16f44 <argp_error@@Base+0x13fc>
   130fc:	b	130b8 <argp_parse@@Base+0x18f4>
   13100:	mov	r1, #1
   13104:	mov	r0, r4
   13108:	bl	174e8 <argp_error@@Base+0x19a0>
   1310c:	cmp	r0, #0
   13110:	popeq	{r4, r5, r6, pc}
   13114:	b	130e0 <argp_parse@@Base+0x191c>
   13118:	ldr	r2, [r4, #28]
   1311c:	ldr	r3, [r4, #32]
   13120:	cmp	r2, r3
   13124:	bcs	13140 <argp_parse@@Base+0x197c>
   13128:	ldr	r3, [r4, #28]
   1312c:	add	r2, r3, #1
   13130:	str	r2, [r4, #28]
   13134:	mov	r2, #32
   13138:	strb	r2, [r3]
   1313c:	pop	{r4, r5, r6, pc}
   13140:	mov	r1, #1
   13144:	mov	r0, r4
   13148:	bl	174e8 <argp_error@@Base+0x19a0>
   1314c:	cmp	r0, #0
   13150:	bne	13128 <argp_parse@@Base+0x1964>
   13154:	pop	{r4, r5, r6, pc}
   13158:	push	{r4, r5, r6, lr}
   1315c:	ldr	r5, [r0, #8]
   13160:	ldr	r2, [r0, #12]
   13164:	ldr	ip, [r1, #12]
   13168:	orr	r2, r2, ip
   1316c:	cmp	r5, #0
   13170:	beq	131bc <argp_parse@@Base+0x19f8>
   13174:	tst	r2, #16
   13178:	bne	131b4 <argp_parse@@Base+0x19f0>
   1317c:	mov	r6, r3
   13180:	mov	r4, r0
   13184:	tst	r2, #1
   13188:	bne	131cc <argp_parse@@Base+0x1a08>
   1318c:	mov	r0, r5
   13190:	bl	10ea4 <strlen@plt>
   13194:	add	r1, r0, #6
   13198:	mov	r0, r6
   1319c:	bl	13094 <argp_parse@@Base+0x18d0>
   131a0:	mov	r3, r5
   131a4:	ldr	r2, [r4, #4]
   131a8:	ldr	r1, [pc, #52]	; 131e4 <argp_parse@@Base+0x1a20>
   131ac:	mov	r0, r6
   131b0:	bl	175d8 <argp_error@@Base+0x1a90>
   131b4:	mov	r0, #0
   131b8:	pop	{r4, r5, r6, pc}
   131bc:	ldr	r5, [r1, #8]
   131c0:	cmp	r5, #0
   131c4:	beq	131b4 <argp_parse@@Base+0x19f0>
   131c8:	b	13174 <argp_parse@@Base+0x19b0>
   131cc:	mov	r3, r5
   131d0:	ldr	r2, [r0, #4]
   131d4:	ldr	r1, [pc, #12]	; 131e8 <argp_parse@@Base+0x1a24>
   131d8:	mov	r0, r6
   131dc:	bl	175d8 <argp_error@@Base+0x1a90>
   131e0:	b	131b4 <argp_parse@@Base+0x19f0>
   131e4:	muleq	r1, r0, r3
   131e8:	andeq	r8, r1, r4, lsl #7
   131ec:	push	{r4, r5, r6, lr}
   131f0:	subs	r5, r2, #0
   131f4:	popeq	{r4, r5, r6, pc}
   131f8:	ldr	ip, [r5, #20]
   131fc:	cmp	ip, #0
   13200:	popeq	{r4, r5, r6, pc}
   13204:	mov	r6, r1
   13208:	mov	r4, r0
   1320c:	mov	r1, r3
   13210:	mov	r0, r5
   13214:	bl	12238 <argp_parse@@Base+0xa74>
   13218:	ldr	r3, [r5, #20]
   1321c:	mov	r2, r0
   13220:	mov	r1, r4
   13224:	mov	r0, r6
   13228:	blx	r3
   1322c:	pop	{r4, r5, r6, pc}
   13230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13234:	sub	sp, sp, #28
   13238:	str	r1, [sp, #16]
   1323c:	mov	r8, r2
   13240:	mov	r4, r3
   13244:	ldr	r5, [sp, #64]	; 0x40
   13248:	ldr	r3, [r2]
   1324c:	mov	r6, r3
   13250:	str	r3, [sp, #20]
   13254:	ldr	sl, [r0, #16]
   13258:	ldr	r2, [r0, #8]
   1325c:	mov	ip, r2
   13260:	str	r2, [sp, #12]
   13264:	mov	r3, r1
   13268:	mov	r2, r0
   1326c:	ldr	r1, [pc, #424]	; 1341c <argp_parse@@Base+0x1c58>
   13270:	mov	r0, ip
   13274:	bl	131ec <argp_parse@@Base+0x1a28>
   13278:	subs	r3, r0, #0
   1327c:	str	r3, [sp, #8]
   13280:	beq	13408 <argp_parse@@Base+0x1c44>
   13284:	mov	r1, #10
   13288:	mov	r0, r3
   1328c:	bl	10d90 <strchrnul@plt>
   13290:	mov	r7, r0
   13294:	ldrb	r3, [r0]
   13298:	cmp	r3, #0
   1329c:	beq	133d8 <argp_parse@@Base+0x1c14>
   132a0:	ldrb	fp, [r6]
   132a4:	cmp	fp, #0
   132a8:	ble	133d0 <argp_parse@@Base+0x1c0c>
   132ac:	mov	r6, #0
   132b0:	add	r9, r0, #1
   132b4:	mov	r1, #10
   132b8:	mov	r0, r9
   132bc:	bl	10d90 <strchrnul@plt>
   132c0:	add	r6, r6, #1
   132c4:	cmp	r6, fp
   132c8:	bne	132b0 <argp_parse@@Base+0x1aec>
   132cc:	mov	r7, r0
   132d0:	ldr	r3, [r8]
   132d4:	add	r3, r3, #1
   132d8:	str	r3, [r8]
   132dc:	mov	fp, #1
   132e0:	add	r1, r7, #1
   132e4:	sub	r1, r1, r9
   132e8:	mov	r0, r5
   132ec:	bl	13094 <argp_parse@@Base+0x18d0>
   132f0:	sub	r6, r7, r9
   132f4:	ldr	r3, [r5, #28]
   132f8:	add	r3, r3, r6
   132fc:	ldr	r2, [r5, #32]
   13300:	cmp	r2, r3
   13304:	bcs	1331c <argp_parse@@Base+0x1b58>
   13308:	mov	r1, r6
   1330c:	mov	r0, r5
   13310:	bl	174e8 <argp_error@@Base+0x19a0>
   13314:	cmp	r0, #0
   13318:	beq	13338 <argp_parse@@Base+0x1b74>
   1331c:	mov	r2, r6
   13320:	mov	r1, r9
   13324:	ldr	r0, [r5, #28]
   13328:	bl	10dc0 <memcpy@plt>
   1332c:	ldr	r3, [r5, #28]
   13330:	add	r6, r3, r6
   13334:	str	r6, [r5, #28]
   13338:	ldr	r3, [sp, #12]
   1333c:	ldr	r2, [sp, #8]
   13340:	cmp	r3, r2
   13344:	bne	133e4 <argp_parse@@Base+0x1c20>
   13348:	cmp	sl, #0
   1334c:	beq	1338c <argp_parse@@Base+0x1bc8>
   13350:	ldr	r0, [sl]
   13354:	cmp	r0, #0
   13358:	beq	1338c <argp_parse@@Base+0x1bc8>
   1335c:	mov	r3, r4
   13360:	ldr	r4, [sp, #16]
   13364:	str	r5, [sp]
   13368:	mov	r2, r8
   1336c:	mov	r1, r4
   13370:	bl	13230 <argp_parse@@Base+0x1a6c>
   13374:	clz	r3, r0
   13378:	lsr	r3, r3, #5
   1337c:	ldr	r0, [sl, #16]!
   13380:	cmp	r0, #0
   13384:	bne	13364 <argp_parse@@Base+0x1ba0>
   13388:	mov	r4, r3
   1338c:	cmp	r4, #0
   13390:	moveq	fp, #0
   13394:	andne	fp, fp, #1
   13398:	cmp	fp, #0
   1339c:	beq	133c0 <argp_parse@@Base+0x1bfc>
   133a0:	ldrb	r3, [r7]
   133a4:	cmp	r3, #0
   133a8:	bne	133f0 <argp_parse@@Base+0x1c2c>
   133ac:	ldr	r2, [sp, #20]
   133b0:	ldrb	r3, [r2]
   133b4:	cmp	r3, #0
   133b8:	movne	r3, #0
   133bc:	strbne	r3, [r2]
   133c0:	clz	r0, r4
   133c4:	lsr	r0, r0, #5
   133c8:	add	sp, sp, #28
   133cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133d0:	ldr	r9, [sp, #8]
   133d4:	b	132d0 <argp_parse@@Base+0x1b0c>
   133d8:	ldr	r9, [sp, #8]
   133dc:	mov	fp, #0
   133e0:	b	132e0 <argp_parse@@Base+0x1b1c>
   133e4:	mov	r0, r2
   133e8:	bl	123b8 <argp_parse@@Base+0xbf4>
   133ec:	b	13348 <argp_parse@@Base+0x1b84>
   133f0:	ldr	r2, [sp, #20]
   133f4:	ldrb	r3, [r2]
   133f8:	add	r3, r3, #1
   133fc:	strb	r3, [r2]
   13400:	mov	r4, #0
   13404:	b	133c0 <argp_parse@@Base+0x1bfc>
   13408:	cmp	sl, #0
   1340c:	beq	133c0 <argp_parse@@Base+0x1bfc>
   13410:	ldr	r7, [sp, #8]
   13414:	mov	fp, #0
   13418:	b	13350 <argp_parse@@Base+0x1b8c>
   1341c:	andeq	r0, r0, #6
   13420:	push	{r4, r5, r6, r7, r8, lr}
   13424:	mov	r7, r0
   13428:	mov	r4, r2
   1342c:	ldr	r3, [r2, #16]
   13430:	mov	r2, r1
   13434:	ldr	r1, [pc, #448]	; 135fc <argp_parse@@Base+0x1e38>
   13438:	bl	131ec <argp_parse@@Base+0x1a28>
   1343c:	subs	r5, r0, #0
   13440:	beq	13594 <argp_parse@@Base+0x1dd0>
   13444:	ldrb	r3, [r5]
   13448:	cmp	r3, #0
   1344c:	beq	13588 <argp_parse@@Base+0x1dc4>
   13450:	ldr	r3, [r4, #8]
   13454:	ldr	r3, [r3]
   13458:	cmp	r3, #0
   1345c:	beq	13488 <argp_parse@@Base+0x1cc4>
   13460:	ldr	r6, [r4, #4]
   13464:	ldr	r2, [r6, #28]
   13468:	ldr	r3, [r6, #32]
   1346c:	cmp	r2, r3
   13470:	bcs	135a8 <argp_parse@@Base+0x1de4>
   13474:	ldr	r3, [r6, #28]
   13478:	add	r2, r3, #1
   1347c:	str	r2, [r6, #28]
   13480:	mov	r2, #10
   13484:	strb	r2, [r3]
   13488:	ldr	r8, [pc, #368]	; 13600 <argp_parse@@Base+0x1e3c>
   1348c:	ldr	r1, [r8, #24]
   13490:	ldr	r0, [r4, #4]
   13494:	bl	13008 <argp_parse@@Base+0x1844>
   13498:	ldr	r6, [r4, #4]
   1349c:	ldr	r8, [r8, #24]
   134a0:	ldr	r3, [r6, #28]
   134a4:	ldr	r2, [r6, #24]
   134a8:	sub	r3, r3, r2
   134ac:	ldr	r2, [r6, #16]
   134b0:	cmp	r3, r2
   134b4:	bhi	135c0 <argp_parse@@Base+0x1dfc>
   134b8:	str	r8, [r6, #4]
   134bc:	ldr	r6, [r4, #4]
   134c0:	ldr	r3, [pc, #312]	; 13600 <argp_parse@@Base+0x1e3c>
   134c4:	ldr	r8, [r3, #24]
   134c8:	ldr	r3, [r6, #28]
   134cc:	ldr	r2, [r6, #24]
   134d0:	sub	r3, r3, r2
   134d4:	ldr	r2, [r6, #16]
   134d8:	cmp	r3, r2
   134dc:	bhi	135cc <argp_parse@@Base+0x1e08>
   134e0:	str	r8, [r6, #12]
   134e4:	mov	r0, r5
   134e8:	bl	10ea4 <strlen@plt>
   134ec:	subs	r8, r0, #0
   134f0:	beq	1353c <argp_parse@@Base+0x1d78>
   134f4:	ldr	r6, [r4, #4]
   134f8:	ldr	r3, [r6, #28]
   134fc:	add	r3, r3, r8
   13500:	ldr	r2, [r6, #32]
   13504:	cmp	r2, r3
   13508:	bcs	13520 <argp_parse@@Base+0x1d5c>
   1350c:	mov	r1, r8
   13510:	mov	r0, r6
   13514:	bl	174e8 <argp_error@@Base+0x19a0>
   13518:	cmp	r0, #0
   1351c:	beq	1353c <argp_parse@@Base+0x1d78>
   13520:	mov	r2, r8
   13524:	mov	r1, r5
   13528:	ldr	r0, [r6, #28]
   1352c:	bl	10dc0 <memcpy@plt>
   13530:	ldr	r3, [r6, #28]
   13534:	add	r8, r3, r8
   13538:	str	r8, [r6, #28]
   1353c:	ldr	r6, [r4, #4]
   13540:	ldr	r3, [r6, #28]
   13544:	ldr	r2, [r6, #24]
   13548:	sub	r3, r3, r2
   1354c:	ldr	r2, [r6, #16]
   13550:	cmp	r3, r2
   13554:	bhi	135d8 <argp_parse@@Base+0x1e14>
   13558:	mov	r3, #0
   1355c:	str	r3, [r6, #4]
   13560:	ldr	r6, [r4, #4]
   13564:	ldr	r2, [r6, #28]
   13568:	ldr	r3, [r6, #32]
   1356c:	cmp	r2, r3
   13570:	bcs	135e4 <argp_parse@@Base+0x1e20>
   13574:	ldr	r3, [r6, #28]
   13578:	add	r2, r3, #1
   1357c:	str	r2, [r6, #28]
   13580:	mov	r2, #10
   13584:	strb	r2, [r3]
   13588:	ldr	r3, [r4, #8]
   1358c:	mov	r2, #1
   13590:	str	r2, [r3, #4]
   13594:	cmp	r7, r5
   13598:	popeq	{r4, r5, r6, r7, r8, pc}
   1359c:	mov	r0, r5
   135a0:	bl	123b8 <argp_parse@@Base+0xbf4>
   135a4:	pop	{r4, r5, r6, r7, r8, pc}
   135a8:	mov	r1, #1
   135ac:	mov	r0, r6
   135b0:	bl	174e8 <argp_error@@Base+0x19a0>
   135b4:	cmp	r0, #0
   135b8:	beq	13488 <argp_parse@@Base+0x1cc4>
   135bc:	b	13474 <argp_parse@@Base+0x1cb0>
   135c0:	mov	r0, r6
   135c4:	bl	16f44 <argp_error@@Base+0x13fc>
   135c8:	b	134b8 <argp_parse@@Base+0x1cf4>
   135cc:	mov	r0, r6
   135d0:	bl	16f44 <argp_error@@Base+0x13fc>
   135d4:	b	134e0 <argp_parse@@Base+0x1d1c>
   135d8:	mov	r0, r6
   135dc:	bl	16f44 <argp_error@@Base+0x13fc>
   135e0:	b	13558 <argp_parse@@Base+0x1d94>
   135e4:	mov	r1, #1
   135e8:	mov	r0, r6
   135ec:	bl	174e8 <argp_error@@Base+0x19a0>
   135f0:	cmp	r0, #0
   135f4:	beq	13588 <argp_parse@@Base+0x1dc4>
   135f8:	b	13574 <argp_parse@@Base+0x1db0>
   135fc:	andeq	r0, r0, #3
   13600:	andeq	r9, r2, r0, lsl #2
   13604:	push	{r4, r5, r6, r7, r8, lr}
   13608:	mov	r6, r0
   1360c:	mov	r4, r1
   13610:	ldr	r3, [r1, #12]
   13614:	cmp	r3, #0
   13618:	beq	13738 <argp_parse@@Base+0x1f74>
   1361c:	ldr	r3, [r1, #8]
   13620:	ldr	r7, [r3]
   13624:	ldr	r2, [r1]
   13628:	ldr	r5, [r2, #16]
   1362c:	ldr	r3, [r3, #4]
   13630:	cmp	r3, #0
   13634:	cmpne	r7, #0
   13638:	beq	13674 <argp_parse@@Base+0x1eb0>
   1363c:	ldr	r2, [r2, #12]
   13640:	ldr	r3, [r7, #12]
   13644:	cmp	r2, r3
   13648:	beq	13674 <argp_parse@@Base+0x1eb0>
   1364c:	ldr	r8, [r1, #4]
   13650:	ldr	r2, [r8, #28]
   13654:	ldr	r3, [r8, #32]
   13658:	cmp	r2, r3
   1365c:	bcs	13714 <argp_parse@@Base+0x1f50>
   13660:	ldr	r3, [r8, #28]
   13664:	add	r2, r3, #1
   13668:	str	r2, [r8, #28]
   1366c:	mov	r2, #10
   13670:	strb	r2, [r3]
   13674:	cmp	r5, #0
   13678:	beq	136fc <argp_parse@@Base+0x1f38>
   1367c:	ldr	r0, [r5]
   13680:	cmp	r0, #0
   13684:	beq	136fc <argp_parse@@Base+0x1f38>
   13688:	ldrb	r3, [r0]
   1368c:	cmp	r3, #0
   13690:	beq	136fc <argp_parse@@Base+0x1f38>
   13694:	cmp	r7, #0
   13698:	beq	136c8 <argp_parse@@Base+0x1f04>
   1369c:	ldr	r3, [r7, #16]
   136a0:	cmp	r5, r3
   136a4:	beq	136fc <argp_parse@@Base+0x1f38>
   136a8:	cmp	r3, #0
   136ac:	beq	136c8 <argp_parse@@Base+0x1f04>
   136b0:	ldr	r3, [r3, #12]
   136b4:	cmp	r3, #0
   136b8:	cmpne	r5, r3
   136bc:	bne	136b0 <argp_parse@@Base+0x1eec>
   136c0:	cmp	r5, r3
   136c4:	beq	136fc <argp_parse@@Base+0x1f38>
   136c8:	ldr	r3, [r4, #4]
   136cc:	ldr	r7, [r3, #12]
   136d0:	mov	r2, r4
   136d4:	ldr	r1, [r5, #16]
   136d8:	bl	13420 <argp_parse@@Base+0x1c5c>
   136dc:	ldr	r5, [r4, #4]
   136e0:	ldr	r3, [r5, #28]
   136e4:	ldr	r2, [r5, #24]
   136e8:	sub	r3, r3, r2
   136ec:	ldr	r2, [r5, #16]
   136f0:	cmp	r3, r2
   136f4:	bhi	1372c <argp_parse@@Base+0x1f68>
   136f8:	str	r7, [r5, #12]
   136fc:	mov	r3, #0
   13700:	str	r3, [r4, #12]
   13704:	mov	r1, r6
   13708:	ldr	r0, [r4, #4]
   1370c:	bl	13008 <argp_parse@@Base+0x1844>
   13710:	pop	{r4, r5, r6, r7, r8, pc}
   13714:	mov	r1, #1
   13718:	mov	r0, r8
   1371c:	bl	174e8 <argp_error@@Base+0x19a0>
   13720:	cmp	r0, #0
   13724:	beq	13674 <argp_parse@@Base+0x1eb0>
   13728:	b	13660 <argp_parse@@Base+0x1e9c>
   1372c:	mov	r0, r5
   13730:	bl	16f44 <argp_error@@Base+0x13fc>
   13734:	b	136f8 <argp_parse@@Base+0x1f34>
   13738:	ldr	r5, [r1, #4]
   1373c:	ldr	r3, [r5, #28]
   13740:	add	r3, r3, #2
   13744:	ldr	r2, [r5, #32]
   13748:	cmp	r2, r3
   1374c:	bcs	13764 <argp_parse@@Base+0x1fa0>
   13750:	mov	r1, #2
   13754:	mov	r0, r5
   13758:	bl	174e8 <argp_error@@Base+0x19a0>
   1375c:	cmp	r0, #0
   13760:	beq	13704 <argp_parse@@Base+0x1f40>
   13764:	ldr	r3, [r5, #28]
   13768:	ldr	r2, [pc, #20]	; 13784 <argp_parse@@Base+0x1fc0>
   1376c:	ldrh	r2, [r2]
   13770:	strh	r2, [r3]
   13774:	ldr	r3, [r5, #28]
   13778:	add	r3, r3, #2
   1377c:	str	r3, [r5, #28]
   13780:	b	13704 <argp_parse@@Base+0x1f40>
   13784:	muleq	r1, ip, r3
   13788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1378c:	sub	sp, sp, #28
   13790:	mov	fp, r0
   13794:	str	r1, [sp, #8]
   13798:	mov	r6, r2
   1379c:	mov	r8, r3
   137a0:	ldr	r7, [sp, #64]	; 0x40
   137a4:	ldr	r5, [sp, #68]	; 0x44
   137a8:	ldr	r9, [r0, #12]
   137ac:	ldr	r3, [r0, #16]
   137b0:	str	r3, [sp, #16]
   137b4:	cmp	r9, #0
   137b8:	beq	13c14 <argp_parse@@Base+0x2450>
   137bc:	mov	r1, #11
   137c0:	mov	r0, r9
   137c4:	bl	10eb0 <strchr@plt>
   137c8:	cmp	r6, #0
   137cc:	beq	13ac4 <argp_parse@@Base+0x2300>
   137d0:	cmp	r0, #0
   137d4:	addne	r9, r0, #1
   137d8:	beq	13bfc <argp_parse@@Base+0x2438>
   137dc:	ldr	r3, [fp, #20]
   137e0:	cmp	r3, #0
   137e4:	movne	sl, #0
   137e8:	beq	13c04 <argp_parse@@Base+0x2440>
   137ec:	ldr	r1, [sp, #8]
   137f0:	mov	r0, fp
   137f4:	bl	12238 <argp_parse@@Base+0xa74>
   137f8:	str	r0, [sp, #12]
   137fc:	ldr	r3, [fp, #20]
   13800:	ldr	r2, [pc, #1140]	; 13c7c <argp_parse@@Base+0x24b8>
   13804:	ldr	r0, [pc, #1140]	; 13c80 <argp_parse@@Base+0x24bc>
   13808:	cmp	r6, #0
   1380c:	moveq	r0, r2
   13810:	ldr	r2, [sp, #12]
   13814:	mov	r1, r9
   13818:	blx	r3
   1381c:	mov	r4, r0
   13820:	cmp	r4, #0
   13824:	beq	13bb4 <argp_parse@@Base+0x23f0>
   13828:	cmp	r8, #0
   1382c:	beq	13854 <argp_parse@@Base+0x2090>
   13830:	ldr	r2, [r5, #28]
   13834:	ldr	r3, [r5, #32]
   13838:	cmp	r2, r3
   1383c:	bcs	13b08 <argp_parse@@Base+0x2344>
   13840:	ldr	r3, [r5, #28]
   13844:	add	r2, r3, #1
   13848:	str	r2, [r5, #28]
   1384c:	mov	r2, #10
   13850:	strb	r2, [r3]
   13854:	cmp	r4, r9
   13858:	movne	r3, #0
   1385c:	moveq	r3, #1
   13860:	cmp	sl, #0
   13864:	moveq	r3, #0
   13868:	cmp	r3, #0
   1386c:	beq	13b20 <argp_parse@@Base+0x235c>
   13870:	ldr	r3, [r5, #28]
   13874:	add	r3, r3, sl
   13878:	ldr	r2, [r5, #32]
   1387c:	cmp	r2, r3
   13880:	bcs	13898 <argp_parse@@Base+0x20d4>
   13884:	mov	r1, sl
   13888:	mov	r0, r5
   1388c:	bl	174e8 <argp_error@@Base+0x19a0>
   13890:	cmp	r0, #0
   13894:	beq	138b4 <argp_parse@@Base+0x20f0>
   13898:	mov	r2, sl
   1389c:	mov	r1, r9
   138a0:	ldr	r0, [r5, #28]
   138a4:	bl	10dc0 <memcpy@plt>
   138a8:	ldr	r3, [r5, #28]
   138ac:	add	r3, r3, sl
   138b0:	str	r3, [r5, #28]
   138b4:	ldr	r3, [r5, #28]
   138b8:	ldr	r2, [r5, #24]
   138bc:	sub	r3, r3, r2
   138c0:	ldr	r2, [r5, #16]
   138c4:	cmp	r3, r2
   138c8:	bhi	13b80 <argp_parse@@Base+0x23bc>
   138cc:	ldr	r3, [r5, #20]
   138d0:	bic	r3, r3, r3, asr #31
   138d4:	ldr	r2, [r5, #4]
   138d8:	cmp	r2, r3
   138dc:	bcs	13904 <argp_parse@@Base+0x2140>
   138e0:	ldr	r2, [r5, #28]
   138e4:	ldr	r3, [r5, #32]
   138e8:	cmp	r2, r3
   138ec:	bcs	13b8c <argp_parse@@Base+0x23c8>
   138f0:	ldr	r3, [r5, #28]
   138f4:	add	r2, r3, #1
   138f8:	str	r2, [r5, #28]
   138fc:	mov	r2, #10
   13900:	strb	r2, [r3]
   13904:	cmp	r4, r9
   13908:	moveq	r4, #1
   1390c:	bne	13ba4 <argp_parse@@Base+0x23e0>
   13910:	cmp	r9, #0
   13914:	cmpne	sl, #0
   13918:	beq	13930 <argp_parse@@Base+0x216c>
   1391c:	ldr	r3, [fp, #20]
   13920:	cmp	r3, #0
   13924:	beq	13a3c <argp_parse@@Base+0x2278>
   13928:	mov	r0, r9
   1392c:	bl	123b8 <argp_parse@@Base+0xbf4>
   13930:	cmp	r6, #0
   13934:	beq	13a3c <argp_parse@@Base+0x2278>
   13938:	ldr	r3, [fp, #20]
   1393c:	cmp	r3, #0
   13940:	beq	13a3c <argp_parse@@Base+0x2278>
   13944:	ldr	r2, [sp, #12]
   13948:	mov	r1, #0
   1394c:	ldr	r0, [pc, #816]	; 13c84 <argp_parse@@Base+0x24c0>
   13950:	blx	r3
   13954:	subs	r9, r0, #0
   13958:	beq	13a3c <argp_parse@@Base+0x2278>
   1395c:	orrs	r3, r8, r4
   13960:	beq	13988 <argp_parse@@Base+0x21c4>
   13964:	ldr	r2, [r5, #28]
   13968:	ldr	r3, [r5, #32]
   1396c:	cmp	r2, r3
   13970:	bcs	13bbc <argp_parse@@Base+0x23f8>
   13974:	ldr	r3, [r5, #28]
   13978:	add	r2, r3, #1
   1397c:	str	r2, [r5, #28]
   13980:	mov	r2, #10
   13984:	strb	r2, [r3]
   13988:	mov	r0, r9
   1398c:	bl	10ea4 <strlen@plt>
   13990:	subs	r4, r0, #0
   13994:	beq	139dc <argp_parse@@Base+0x2218>
   13998:	ldr	r3, [r5, #28]
   1399c:	add	r3, r3, r4
   139a0:	ldr	r2, [r5, #32]
   139a4:	cmp	r2, r3
   139a8:	bcs	139c0 <argp_parse@@Base+0x21fc>
   139ac:	mov	r1, r4
   139b0:	mov	r0, r5
   139b4:	bl	174e8 <argp_error@@Base+0x19a0>
   139b8:	cmp	r0, #0
   139bc:	beq	139dc <argp_parse@@Base+0x2218>
   139c0:	mov	r2, r4
   139c4:	mov	r1, r9
   139c8:	ldr	r0, [r5, #28]
   139cc:	bl	10dc0 <memcpy@plt>
   139d0:	ldr	r3, [r5, #28]
   139d4:	add	r4, r3, r4
   139d8:	str	r4, [r5, #28]
   139dc:	mov	r0, r9
   139e0:	bl	123b8 <argp_parse@@Base+0xbf4>
   139e4:	ldr	r3, [r5, #28]
   139e8:	ldr	r2, [r5, #24]
   139ec:	sub	r3, r3, r2
   139f0:	ldr	r2, [r5, #16]
   139f4:	cmp	r3, r2
   139f8:	bhi	13bd4 <argp_parse@@Base+0x2410>
   139fc:	ldr	r3, [r5, #20]
   13a00:	bic	r3, r3, r3, asr #31
   13a04:	ldr	r2, [r5, #4]
   13a08:	cmp	r2, r3
   13a0c:	movcs	r4, #1
   13a10:	bcs	13a3c <argp_parse@@Base+0x2278>
   13a14:	ldr	r2, [r5, #28]
   13a18:	ldr	r3, [r5, #32]
   13a1c:	cmp	r2, r3
   13a20:	bcs	13be0 <argp_parse@@Base+0x241c>
   13a24:	ldr	r3, [r5, #28]
   13a28:	add	r2, r3, #1
   13a2c:	str	r2, [r5, #28]
   13a30:	mov	r2, #10
   13a34:	strb	r2, [r3]
   13a38:	mov	r4, #1
   13a3c:	ldr	r3, [sp, #16]
   13a40:	cmp	r3, #0
   13a44:	beq	13ab8 <argp_parse@@Base+0x22f4>
   13a48:	ldr	r0, [r3]
   13a4c:	cmp	r0, #0
   13a50:	beq	13ab8 <argp_parse@@Base+0x22f4>
   13a54:	clz	r9, r7
   13a58:	lsr	r9, r9, #5
   13a5c:	cmp	r7, #0
   13a60:	cmpne	r4, #0
   13a64:	bne	13ab8 <argp_parse@@Base+0x22f4>
   13a68:	mov	sl, r3
   13a6c:	ldr	fp, [sp, #8]
   13a70:	orrs	r3, r8, r4
   13a74:	str	r5, [sp, #4]
   13a78:	str	r7, [sp]
   13a7c:	movne	r3, #1
   13a80:	moveq	r3, #0
   13a84:	mov	r2, r6
   13a88:	mov	r1, fp
   13a8c:	bl	13788 <argp_parse@@Base+0x1fc4>
   13a90:	orr	r4, r4, r0
   13a94:	ldr	r0, [sl, #16]
   13a98:	cmp	r0, #0
   13a9c:	beq	13ab8 <argp_parse@@Base+0x22f4>
   13aa0:	add	sl, sl, #16
   13aa4:	cmp	r4, #0
   13aa8:	movne	r3, r9
   13aac:	orreq	r3, r9, #1
   13ab0:	cmp	r3, #0
   13ab4:	bne	13a70 <argp_parse@@Base+0x22ac>
   13ab8:	mov	r0, r4
   13abc:	add	sp, sp, #28
   13ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ac4:	cmp	r0, #0
   13ac8:	beq	13c4c <argp_parse@@Base+0x2488>
   13acc:	sub	sl, r0, r9
   13ad0:	ldr	r3, [fp, #20]
   13ad4:	cmp	r3, #0
   13ad8:	beq	13af8 <argp_parse@@Base+0x2334>
   13adc:	cmp	sl, #0
   13ae0:	beq	137ec <argp_parse@@Base+0x2028>
   13ae4:	mov	r1, sl
   13ae8:	mov	r0, r9
   13aec:	bl	10db4 <strndup@plt>
   13af0:	mov	r9, r0
   13af4:	b	137ec <argp_parse@@Base+0x2028>
   13af8:	mov	r4, r9
   13afc:	mov	r3, #0
   13b00:	str	r3, [sp, #12]
   13b04:	b	13828 <argp_parse@@Base+0x2064>
   13b08:	mov	r1, #1
   13b0c:	mov	r0, r5
   13b10:	bl	174e8 <argp_error@@Base+0x19a0>
   13b14:	cmp	r0, #0
   13b18:	beq	13854 <argp_parse@@Base+0x2090>
   13b1c:	b	13840 <argp_parse@@Base+0x207c>
   13b20:	mov	r0, r4
   13b24:	bl	10ea4 <strlen@plt>
   13b28:	subs	r3, r0, #0
   13b2c:	mov	r1, r3
   13b30:	str	r3, [sp, #20]
   13b34:	beq	138b4 <argp_parse@@Base+0x20f0>
   13b38:	ldr	r3, [r5, #28]
   13b3c:	add	r3, r3, r1
   13b40:	ldr	r2, [r5, #32]
   13b44:	cmp	r2, r3
   13b48:	bcs	13b5c <argp_parse@@Base+0x2398>
   13b4c:	mov	r0, r5
   13b50:	bl	174e8 <argp_error@@Base+0x19a0>
   13b54:	cmp	r0, #0
   13b58:	beq	138b4 <argp_parse@@Base+0x20f0>
   13b5c:	ldr	r2, [sp, #20]
   13b60:	mov	r1, r4
   13b64:	ldr	r0, [r5, #28]
   13b68:	bl	10dc0 <memcpy@plt>
   13b6c:	ldr	r3, [r5, #28]
   13b70:	ldr	r2, [sp, #20]
   13b74:	add	r3, r3, r2
   13b78:	str	r3, [r5, #28]
   13b7c:	b	138b4 <argp_parse@@Base+0x20f0>
   13b80:	mov	r0, r5
   13b84:	bl	16f44 <argp_error@@Base+0x13fc>
   13b88:	b	138cc <argp_parse@@Base+0x2108>
   13b8c:	mov	r1, #1
   13b90:	mov	r0, r5
   13b94:	bl	174e8 <argp_error@@Base+0x19a0>
   13b98:	cmp	r0, #0
   13b9c:	beq	13904 <argp_parse@@Base+0x2140>
   13ba0:	b	138f0 <argp_parse@@Base+0x212c>
   13ba4:	mov	r0, r4
   13ba8:	bl	123b8 <argp_parse@@Base+0xbf4>
   13bac:	mov	r4, #1
   13bb0:	b	13910 <argp_parse@@Base+0x214c>
   13bb4:	mov	r4, #0
   13bb8:	b	13910 <argp_parse@@Base+0x214c>
   13bbc:	mov	r1, #1
   13bc0:	mov	r0, r5
   13bc4:	bl	174e8 <argp_error@@Base+0x19a0>
   13bc8:	cmp	r0, #0
   13bcc:	beq	13988 <argp_parse@@Base+0x21c4>
   13bd0:	b	13974 <argp_parse@@Base+0x21b0>
   13bd4:	mov	r0, r5
   13bd8:	bl	16f44 <argp_error@@Base+0x13fc>
   13bdc:	b	139fc <argp_parse@@Base+0x2238>
   13be0:	mov	r1, #1
   13be4:	mov	r0, r5
   13be8:	bl	174e8 <argp_error@@Base+0x19a0>
   13bec:	cmp	r0, #0
   13bf0:	moveq	r4, #1
   13bf4:	beq	13a3c <argp_parse@@Base+0x2278>
   13bf8:	b	13a24 <argp_parse@@Base+0x2260>
   13bfc:	mov	r9, #0
   13c00:	b	137dc <argp_parse@@Base+0x2018>
   13c04:	mov	r4, r9
   13c08:	mov	sl, #0
   13c0c:	str	sl, [sp, #12]
   13c10:	b	13820 <argp_parse@@Base+0x205c>
   13c14:	ldr	r3, [r0, #20]
   13c18:	cmp	r3, #0
   13c1c:	movne	sl, #0
   13c20:	bne	137ec <argp_parse@@Base+0x2028>
   13c24:	mov	r3, r9
   13c28:	cmp	r9, #0
   13c2c:	moveq	r4, #0
   13c30:	streq	r4, [sp, #12]
   13c34:	beq	13930 <argp_parse@@Base+0x216c>
   13c38:	mov	r4, r9
   13c3c:	mov	r9, r3
   13c40:	mov	sl, #0
   13c44:	str	sl, [sp, #12]
   13c48:	b	13828 <argp_parse@@Base+0x2064>
   13c4c:	ldr	r3, [fp, #20]
   13c50:	cmp	r3, #0
   13c54:	moveq	r3, r9
   13c58:	beq	13c28 <argp_parse@@Base+0x2464>
   13c5c:	ldr	r1, [sp, #8]
   13c60:	mov	r0, fp
   13c64:	bl	12238 <argp_parse@@Base+0xa74>
   13c68:	str	r0, [sp, #12]
   13c6c:	ldr	r3, [fp, #20]
   13c70:	mov	sl, #0
   13c74:	ldr	r0, [pc]	; 13c7c <argp_parse@@Base+0x24b8>
   13c78:	b	13810 <argp_parse@@Base+0x204c>
   13c7c:	andeq	r0, r0, #1
   13c80:	andeq	r0, r0, #2
   13c84:	andeq	r0, r0, #4
   13c88:	ldr	r3, [r0, #12]
   13c8c:	ldr	r2, [r1, #12]
   13c90:	cmp	r3, r2
   13c94:	beq	13cec <argp_parse@@Base+0x2528>
   13c98:	push	{r4, r5, r6, lr}
   13c9c:	mov	r5, r1
   13ca0:	mov	r4, r0
   13ca4:	mov	r1, r2
   13ca8:	mov	r0, r3
   13cac:	bl	13c88 <argp_parse@@Base+0x24c4>
   13cb0:	subs	r3, r0, #0
   13cb4:	bne	13ce4 <argp_parse@@Base+0x2520>
   13cb8:	ldr	r0, [r4, #8]
   13cbc:	ldr	r3, [r5, #8]
   13cc0:	mvn	r2, r3
   13cc4:	lsr	r2, r2, #31
   13cc8:	cmp	r2, r0, lsr #31
   13ccc:	subne	r3, r0, r3
   13cd0:	subeq	r3, r3, r0
   13cd4:	cmp	r3, #0
   13cd8:	ldreq	r3, [r5, #4]
   13cdc:	ldreq	r0, [r4, #4]
   13ce0:	subeq	r3, r3, r0
   13ce4:	mov	r0, r3
   13ce8:	pop	{r4, r5, r6, pc}
   13cec:	ldr	r2, [r0, #8]
   13cf0:	ldr	r3, [r1, #8]
   13cf4:	mvn	ip, r3
   13cf8:	lsr	ip, ip, #31
   13cfc:	cmp	ip, r2, lsr #31
   13d00:	subne	r3, r2, r3
   13d04:	subeq	r3, r3, r2
   13d08:	cmp	r3, #0
   13d0c:	ldreq	r3, [r1, #4]
   13d10:	ldreq	r0, [r0, #4]
   13d14:	subeq	r3, r3, r0
   13d18:	mov	r0, r3
   13d1c:	bx	lr
   13d20:	push	{r4, r5, r6, r7, r8, lr}
   13d24:	sub	sp, sp, #8
   13d28:	ldr	lr, [r0, #16]
   13d2c:	cmp	lr, #0
   13d30:	movne	r2, lr
   13d34:	bne	13d44 <argp_parse@@Base+0x2580>
   13d38:	ldr	ip, [r0, #12]
   13d3c:	b	13d54 <argp_parse@@Base+0x2590>
   13d40:	mov	r2, r3
   13d44:	ldr	r3, [r2, #12]
   13d48:	cmp	r3, #0
   13d4c:	bne	13d40 <argp_parse@@Base+0x257c>
   13d50:	ldr	ip, [r2, #8]
   13d54:	ldr	r5, [r1, #16]
   13d58:	cmp	r5, #0
   13d5c:	movne	r2, r5
   13d60:	bne	13d70 <argp_parse@@Base+0x25ac>
   13d64:	ldr	r4, [r1, #12]
   13d68:	b	13d80 <argp_parse@@Base+0x25bc>
   13d6c:	mov	r2, r3
   13d70:	ldr	r3, [r2, #12]
   13d74:	cmp	r3, #0
   13d78:	bne	13d6c <argp_parse@@Base+0x25a8>
   13d7c:	ldr	r4, [r2, #8]
   13d80:	mvn	r3, r4
   13d84:	lsr	r3, r3, #31
   13d88:	cmp	r3, ip, lsr #31
   13d8c:	subne	r4, ip, r4
   13d90:	subeq	r4, r4, ip
   13d94:	cmp	r4, #0
   13d98:	bne	13e00 <argp_parse@@Base+0x263c>
   13d9c:	adds	r4, r5, #0
   13da0:	movne	r4, #1
   13da4:	cmp	lr, #0
   13da8:	rsbeq	r4, r4, #0
   13dac:	rsbne	r4, r4, #1
   13db0:	cmp	r4, #0
   13db4:	bne	13e00 <argp_parse@@Base+0x263c>
   13db8:	mov	r6, r1
   13dbc:	mov	r7, r0
   13dc0:	cmp	lr, #0
   13dc4:	beq	13e50 <argp_parse@@Base+0x268c>
   13dc8:	ldr	ip, [lr, #20]
   13dcc:	ldr	r2, [r5, #20]
   13dd0:	cmp	ip, r2
   13dd4:	ble	13e0c <argp_parse@@Base+0x2648>
   13dd8:	mov	r0, lr
   13ddc:	ldr	r0, [r0, #12]
   13de0:	ldr	r3, [r0, #20]
   13de4:	cmp	r2, r3
   13de8:	blt	13ddc <argp_parse@@Base+0x2618>
   13dec:	mov	r1, r5
   13df0:	bl	13c88 <argp_parse@@Base+0x24c4>
   13df4:	subs	r4, r0, #0
   13df8:	cmp	r0, #0
   13dfc:	moveq	r4, #1
   13e00:	mov	r0, r4
   13e04:	add	sp, sp, #8
   13e08:	pop	{r4, r5, r6, r7, r8, pc}
   13e0c:	cmp	ip, r2
   13e10:	bge	13e3c <argp_parse@@Base+0x2678>
   13e14:	mov	r1, r5
   13e18:	ldr	r1, [r1, #12]
   13e1c:	ldr	r3, [r1, #20]
   13e20:	cmp	ip, r3
   13e24:	blt	13e18 <argp_parse@@Base+0x2654>
   13e28:	mov	r0, lr
   13e2c:	bl	13c88 <argp_parse@@Base+0x24c4>
   13e30:	subs	r4, r0, #0
   13e34:	mvneq	r4, #0
   13e38:	b	13e00 <argp_parse@@Base+0x263c>
   13e3c:	mov	r1, r5
   13e40:	mov	r0, lr
   13e44:	bl	13c88 <argp_parse@@Base+0x24c4>
   13e48:	subs	r4, r0, #0
   13e4c:	bne	13e00 <argp_parse@@Base+0x263c>
   13e50:	ldr	r3, [r7, #12]
   13e54:	ldr	r4, [r6, #12]
   13e58:	mvn	r2, r4
   13e5c:	lsr	r2, r2, #31
   13e60:	cmp	r2, r3, lsr #31
   13e64:	subne	r4, r3, r4
   13e68:	subeq	r4, r4, r3
   13e6c:	cmp	r4, #0
   13e70:	bne	13e00 <argp_parse@@Base+0x263c>
   13e74:	mov	r0, r7
   13e78:	bl	12ac8 <argp_parse@@Base+0x1304>
   13e7c:	mov	r5, r0
   13e80:	str	r0, [sp]
   13e84:	mov	r0, r6
   13e88:	bl	12ac8 <argp_parse@@Base+0x1304>
   13e8c:	str	r0, [sp, #4]
   13e90:	ldr	r3, [r7]
   13e94:	ldr	r3, [r3, #12]
   13e98:	adds	r5, r5, #0
   13e9c:	movne	r5, #1
   13ea0:	ands	r3, r5, r3, lsr #3
   13ea4:	beq	13fe8 <argp_parse@@Base+0x2824>
   13ea8:	mov	r0, sp
   13eac:	bl	12c8c <argp_parse@@Base+0x14c8>
   13eb0:	adds	r5, r0, #0
   13eb4:	movne	r5, #1
   13eb8:	ldr	r3, [r6]
   13ebc:	ldr	r0, [r3, #12]
   13ec0:	ands	r0, r0, #8
   13ec4:	beq	13ee4 <argp_parse@@Base+0x2720>
   13ec8:	ldr	r3, [sp, #4]
   13ecc:	cmp	r3, #0
   13ed0:	beq	13fe0 <argp_parse@@Base+0x281c>
   13ed4:	add	r0, sp, #4
   13ed8:	bl	12c8c <argp_parse@@Base+0x14c8>
   13edc:	adds	r0, r0, #0
   13ee0:	movne	r0, #1
   13ee4:	subs	r4, r5, r0
   13ee8:	bne	13e00 <argp_parse@@Base+0x263c>
   13eec:	ldr	r2, [r7, #20]
   13ef0:	ldr	r4, [pc, #276]	; 1400c <argp_parse@@Base+0x2848>
   13ef4:	mov	r3, #0
   13ef8:	ldr	r2, [r2, #24]
   13efc:	mov	r1, r4
   13f00:	mov	r0, r7
   13f04:	bl	12b60 <argp_parse@@Base+0x139c>
   13f08:	mov	r5, r0
   13f0c:	uxtb	r8, r0
   13f10:	ldr	r2, [r6, #20]
   13f14:	mov	r3, #0
   13f18:	ldr	r2, [r2, #24]
   13f1c:	mov	r1, r4
   13f20:	mov	r0, r6
   13f24:	bl	12b60 <argp_parse@@Base+0x139c>
   13f28:	uxtb	r7, r0
   13f2c:	cmp	r8, #0
   13f30:	movne	r5, r8
   13f34:	bne	13f48 <argp_parse@@Base+0x2784>
   13f38:	ldr	r3, [sp]
   13f3c:	cmp	r3, #0
   13f40:	ldrbne	r5, [r3]
   13f44:	moveq	r5, #0
   13f48:	cmp	r7, #0
   13f4c:	uxtbne	r6, r0
   13f50:	bne	13f64 <argp_parse@@Base+0x27a0>
   13f54:	ldr	r3, [sp, #4]
   13f58:	cmp	r3, #0
   13f5c:	ldrbne	r6, [r3]
   13f60:	moveq	r6, #0
   13f64:	bl	10e68 <__ctype_tolower_loc@plt>
   13f68:	ldr	r3, [r0]
   13f6c:	ldr	r4, [r3, r5, lsl #2]
   13f70:	ldr	r3, [r3, r6, lsl #2]
   13f74:	subs	r4, r4, r3
   13f78:	bne	13e00 <argp_parse@@Base+0x263c>
   13f7c:	subs	r4, r6, r5
   13f80:	bne	13e00 <argp_parse@@Base+0x263c>
   13f84:	adds	r4, r7, #0
   13f88:	movne	r4, #1
   13f8c:	cmp	r8, #0
   13f90:	rsbeq	r4, r4, #0
   13f94:	rsbne	r4, r4, #1
   13f98:	cmp	r4, #0
   13f9c:	bne	13e00 <argp_parse@@Base+0x263c>
   13fa0:	cmp	r8, #0
   13fa4:	bne	13e00 <argp_parse@@Base+0x263c>
   13fa8:	ldr	r0, [sp]
   13fac:	ldr	r1, [sp, #4]
   13fb0:	adds	r4, r1, #0
   13fb4:	movne	r4, #1
   13fb8:	cmp	r0, #0
   13fbc:	rsbeq	r4, r4, #0
   13fc0:	rsbne	r4, r4, #1
   13fc4:	cmp	r4, #0
   13fc8:	bne	13e00 <argp_parse@@Base+0x263c>
   13fcc:	cmp	r0, #0
   13fd0:	beq	13e00 <argp_parse@@Base+0x263c>
   13fd4:	bl	10df0 <strcasecmp@plt>
   13fd8:	mov	r4, r0
   13fdc:	b	13e00 <argp_parse@@Base+0x263c>
   13fe0:	mov	r0, r4
   13fe4:	b	13ee4 <argp_parse@@Base+0x2720>
   13fe8:	ldr	r3, [r6]
   13fec:	ldr	r3, [r3, #12]
   13ff0:	tst	r3, #8
   13ff4:	beq	13eec <argp_parse@@Base+0x2728>
   13ff8:	ldr	r3, [sp, #4]
   13ffc:	cmp	r3, #0
   14000:	movne	r5, r4
   14004:	bne	13ed4 <argp_parse@@Base+0x2710>
   14008:	b	13eec <argp_parse@@Base+0x2728>
   1400c:	andeq	r2, r1, r4, asr #24
   14010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14014:	sub	sp, sp, #52	; 0x34
   14018:	str	r0, [sp, #24]
   1401c:	str	r1, [sp, #28]
   14020:	ldr	r2, [r0, #16]
   14024:	str	r2, [sp, #8]
   14028:	ldr	r5, [r0]
   1402c:	mov	r0, #16
   14030:	bl	12a98 <argp_parse@@Base+0x12d4>
   14034:	subs	fp, r0, #0
   14038:	beq	14068 <argp_parse@@Base+0x28a4>
   1403c:	mov	r3, #0
   14040:	str	r3, [fp, #4]
   14044:	str	r3, [fp, #12]
   14048:	cmp	r5, r3
   1404c:	beq	14240 <argp_parse@@Base+0x2a7c>
   14050:	ldr	r4, [r5, #12]
   14054:	ands	r4, r4, #4
   14058:	bne	1407c <argp_parse@@Base+0x28b8>
   1405c:	add	r6, r5, #24
   14060:	mov	r8, r3
   14064:	b	140a4 <argp_parse@@Base+0x28e0>
   14068:	ldr	r3, [pc, #1576]	; 14698 <argp_parse@@Base+0x2ed4>
   1406c:	ldr	r2, [pc, #1576]	; 1469c <argp_parse@@Base+0x2ed8>
   14070:	ldr	r1, [pc, #1576]	; 146a0 <argp_parse@@Base+0x2edc>
   14074:	ldr	r0, [pc, #1576]	; 146a4 <argp_parse@@Base+0x2ee0>
   14078:	bl	10f7c <__assert_fail@plt>
   1407c:	ldr	r3, [pc, #1556]	; 14698 <argp_parse@@Base+0x2ed4>
   14080:	mov	r2, #460	; 0x1cc
   14084:	ldr	r1, [pc, #1556]	; 146a0 <argp_parse@@Base+0x2edc>
   14088:	ldr	r0, [pc, #1560]	; 146a8 <argp_parse@@Base+0x2ee4>
   1408c:	bl	10f7c <__assert_fail@plt>
   14090:	ldr	r2, [fp, #4]
   14094:	add	r2, r2, #1
   14098:	str	r2, [fp, #4]
   1409c:	b	140cc <argp_parse@@Base+0x2908>
   140a0:	add	r6, r6, #24
   140a4:	mov	r3, r6
   140a8:	ldr	r2, [r6, #-20]	; 0xffffffec
   140ac:	cmp	r2, #0
   140b0:	bne	140c0 <argp_parse@@Base+0x28fc>
   140b4:	ldr	r2, [r6, #-24]	; 0xffffffe8
   140b8:	cmp	r2, #0
   140bc:	beq	14104 <argp_parse@@Base+0x2940>
   140c0:	ldr	r2, [r3, #-12]
   140c4:	tst	r2, #4
   140c8:	beq	14090 <argp_parse@@Base+0x28cc>
   140cc:	ldr	r2, [r3, #-12]
   140d0:	tst	r2, #8
   140d4:	bne	140a0 <argp_parse@@Base+0x28dc>
   140d8:	ldr	r7, [r3, #-20]	; 0xffffffec
   140dc:	sub	r3, r7, #1
   140e0:	cmp	r3, #254	; 0xfe
   140e4:	bhi	140a0 <argp_parse@@Base+0x28dc>
   140e8:	bl	10e8c <__ctype_b_loc@plt>
   140ec:	ldr	r3, [r0]
   140f0:	lsl	r7, r7, #1
   140f4:	ldrh	r3, [r3, r7]
   140f8:	tst	r3, #16384	; 0x4000
   140fc:	addne	r8, r8, #1
   14100:	b	140a0 <argp_parse@@Base+0x28dc>
   14104:	ldr	r2, [r6, #-8]
   14108:	cmp	r2, #0
   1410c:	bne	140c0 <argp_parse@@Base+0x28fc>
   14110:	ldr	r2, [r6, #-4]
   14114:	cmp	r2, #0
   14118:	bne	140c0 <argp_parse@@Base+0x28fc>
   1411c:	ldr	r0, [fp, #4]
   14120:	rsb	r0, r0, r0, lsl #3
   14124:	lsl	r0, r0, #2
   14128:	bl	12a98 <argp_parse@@Base+0x12d4>
   1412c:	str	r0, [fp]
   14130:	add	r0, r8, #1
   14134:	bl	12a98 <argp_parse@@Base+0x12d4>
   14138:	str	r0, [fp, #8]
   1413c:	ldr	r8, [fp]
   14140:	cmp	r0, #0
   14144:	cmpne	r8, #0
   14148:	bne	14160 <argp_parse@@Base+0x299c>
   1414c:	ldr	r3, [pc, #1348]	; 14698 <argp_parse@@Base+0x2ed4>
   14150:	ldr	r2, [pc, #1364]	; 146ac <argp_parse@@Base+0x2ee8>
   14154:	ldr	r1, [pc, #1348]	; 146a0 <argp_parse@@Base+0x2edc>
   14158:	ldr	r0, [pc, #1360]	; 146b0 <argp_parse@@Base+0x2eec>
   1415c:	bl	10f7c <__assert_fail@plt>
   14160:	ldr	r2, [fp, #4]
   14164:	ldr	r3, [pc, #1352]	; 146b4 <argp_parse@@Base+0x2ef0>
   14168:	cmp	r2, r3
   1416c:	addls	r8, r8, #28
   14170:	movls	r7, r0
   14174:	movls	sl, #0
   14178:	bls	141c4 <argp_parse@@Base+0x2a00>
   1417c:	ldr	r3, [pc, #1300]	; 14698 <argp_parse@@Base+0x2ed4>
   14180:	mov	r2, #476	; 0x1dc
   14184:	ldr	r1, [pc, #1300]	; 146a0 <argp_parse@@Base+0x2edc>
   14188:	ldr	r0, [pc, #1320]	; 146b8 <argp_parse@@Base+0x2ef4>
   1418c:	bl	10f7c <__assert_fail@plt>
   14190:	ldr	r3, [r5, #4]
   14194:	cmp	r3, #0
   14198:	addeq	r9, r4, #1
   1419c:	movne	r9, r4
   141a0:	b	14208 <argp_parse@@Base+0x2a44>
   141a4:	ldr	r3, [r5, #16]
   141a8:	cmp	r3, #0
   141ac:	bne	145b4 <argp_parse@@Base+0x2df0>
   141b0:	ldr	r3, [r5, #20]
   141b4:	cmp	r3, #0
   141b8:	bne	145b4 <argp_parse@@Base+0x2df0>
   141bc:	add	r8, r8, #28
   141c0:	mov	r4, r9
   141c4:	ldr	r3, [r5, #4]
   141c8:	cmp	r3, #0
   141cc:	bne	141dc <argp_parse@@Base+0x2a18>
   141d0:	ldr	r3, [r5]
   141d4:	cmp	r3, #0
   141d8:	beq	14220 <argp_parse@@Base+0x2a5c>
   141dc:	mov	r6, r8
   141e0:	str	r5, [r8, #-28]	; 0xffffffe4
   141e4:	str	sl, [r8, #-24]	; 0xffffffe8
   141e8:	str	r7, [r8, #-20]	; 0xffffffec
   141ec:	ldr	r9, [r5, #20]
   141f0:	cmp	r9, #0
   141f4:	bne	14208 <argp_parse@@Base+0x2a44>
   141f8:	ldr	r3, [r5]
   141fc:	cmp	r3, #0
   14200:	movne	r9, r4
   14204:	beq	14190 <argp_parse@@Base+0x29cc>
   14208:	str	r9, [r6, #-16]
   1420c:	ldr	r3, [sp, #28]
   14210:	str	r3, [r6, #-12]
   14214:	ldr	r3, [sp, #24]
   14218:	str	r3, [r6, #-8]
   1421c:	b	145c0 <argp_parse@@Base+0x2dfc>
   14220:	ldr	r3, [r5, #16]
   14224:	cmp	r3, #0
   14228:	bne	141dc <argp_parse@@Base+0x2a18>
   1422c:	ldr	r3, [r5, #20]
   14230:	cmp	r3, #0
   14234:	bne	141dc <argp_parse@@Base+0x2a18>
   14238:	mov	r3, #0
   1423c:	strb	r3, [r7]
   14240:	ldr	r3, [sp, #8]
   14244:	cmp	r3, #0
   14248:	beq	14584 <argp_parse@@Base+0x2dc0>
   1424c:	ldr	r3, [r3]
   14250:	cmp	r3, #0
   14254:	beq	14584 <argp_parse@@Base+0x2dc0>
   14258:	add	r3, fp, #12
   1425c:	str	r3, [sp, #44]	; 0x2c
   14260:	str	fp, [sp, #20]
   14264:	b	142f4 <argp_parse@@Base+0x2b30>
   14268:	ldr	r1, [sp, #28]
   1426c:	b	14374 <argp_parse@@Base+0x2bb0>
   14270:	mov	r2, r3
   14274:	ldr	r3, [r2, #24]
   14278:	cmp	r3, #0
   1427c:	bne	14270 <argp_parse@@Base+0x2aac>
   14280:	add	r2, r2, #24
   14284:	ldr	r1, [sp, #16]
   14288:	ldr	r3, [r1, #12]
   1428c:	str	r3, [r2]
   14290:	mov	r2, #0
   14294:	str	r2, [r1, #12]
   14298:	ldr	r3, [r1, #4]
   1429c:	cmp	r3, r2
   142a0:	beq	142d8 <argp_parse@@Base+0x2b14>
   142a4:	ldr	r0, [sp, #20]
   142a8:	ldr	r2, [r0, #4]
   142ac:	cmp	r2, #0
   142b0:	bne	1439c <argp_parse@@Base+0x2bd8>
   142b4:	str	r3, [r0, #4]
   142b8:	mov	r2, r1
   142bc:	ldr	r3, [r1]
   142c0:	str	r3, [r0]
   142c4:	ldr	r3, [r2, #8]
   142c8:	str	r3, [r0, #8]
   142cc:	mov	r3, r2
   142d0:	mov	r2, #0
   142d4:	str	r2, [r3, #4]
   142d8:	ldr	r0, [sp, #16]
   142dc:	bl	12ec4 <argp_parse@@Base+0x1700>
   142e0:	ldr	r2, [sp, #8]
   142e4:	ldr	r3, [r2, #16]!
   142e8:	str	r2, [sp, #8]
   142ec:	cmp	r3, #0
   142f0:	beq	14580 <argp_parse@@Base+0x2dbc>
   142f4:	ldr	r3, [sp, #8]
   142f8:	ldr	r4, [r3, #12]
   142fc:	cmp	r4, #0
   14300:	bne	14310 <argp_parse@@Base+0x2b4c>
   14304:	ldr	r3, [r3, #8]
   14308:	cmp	r3, #0
   1430c:	beq	14268 <argp_parse@@Base+0x2aa4>
   14310:	ldr	r2, [sp, #8]
   14314:	ldr	r5, [r2, #8]
   14318:	ldr	r7, [sp, #24]
   1431c:	ldr	r3, [r7, #16]
   14320:	sub	r3, r2, r3
   14324:	asr	r6, r3, #4
   14328:	mov	r0, #28
   1432c:	bl	12a98 <argp_parse@@Base+0x12d4>
   14330:	subs	r1, r0, #0
   14334:	beq	14374 <argp_parse@@Base+0x2bb0>
   14338:	str	r4, [r1, #8]
   1433c:	str	r5, [r1]
   14340:	str	r6, [r1, #4]
   14344:	ldr	r3, [sp, #28]
   14348:	str	r3, [r1, #12]
   1434c:	str	r7, [r1, #16]
   14350:	cmp	r3, #0
   14354:	ldrne	r3, [r3, #20]
   14358:	addne	r3, r3, #1
   1435c:	moveq	r3, #0
   14360:	str	r3, [r1, #20]
   14364:	ldr	r2, [sp, #20]
   14368:	ldr	r3, [r2, #12]
   1436c:	str	r3, [r1, #24]
   14370:	str	r1, [r2, #12]
   14374:	ldr	r3, [sp, #8]
   14378:	ldr	r0, [r3]
   1437c:	bl	14010 <argp_parse@@Base+0x284c>
   14380:	str	r0, [sp, #16]
   14384:	ldr	r3, [sp, #20]
   14388:	ldr	r2, [r3, #12]
   1438c:	cmp	r2, #0
   14390:	ldreq	r2, [sp, #44]	; 0x2c
   14394:	bne	14274 <argp_parse@@Base+0x2ab0>
   14398:	b	14284 <argp_parse@@Base+0x2ac0>
   1439c:	add	r3, r3, r2
   143a0:	str	r3, [sp, #36]	; 0x24
   143a4:	rsb	r0, r3, r3, lsl #3
   143a8:	lsl	r0, r0, #2
   143ac:	bl	12a98 <argp_parse@@Base+0x12d4>
   143b0:	mov	r4, r0
   143b4:	str	r0, [sp, #32]
   143b8:	ldr	r3, [sp, #20]
   143bc:	ldr	r0, [r3, #8]
   143c0:	bl	10ea4 <strlen@plt>
   143c4:	mov	r6, r0
   143c8:	ldr	r3, [sp, #16]
   143cc:	ldr	r0, [r3, #8]
   143d0:	bl	10ea4 <strlen@plt>
   143d4:	add	r0, r6, r0
   143d8:	add	r0, r0, #1
   143dc:	bl	12a98 <argp_parse@@Base+0x12d4>
   143e0:	mov	sl, r0
   143e4:	cmp	r4, #0
   143e8:	cmpne	r0, #0
   143ec:	beq	144b8 <argp_parse@@Base+0x2cf4>
   143f0:	ldr	r3, [sp, #36]	; 0x24
   143f4:	ldr	r2, [pc, #696]	; 146b4 <argp_parse@@Base+0x2ef0>
   143f8:	cmp	r3, r2
   143fc:	bhi	144cc <argp_parse@@Base+0x2d08>
   14400:	ldr	r5, [sp, #20]
   14404:	ldr	r2, [r5]
   14408:	mov	r1, r2
   1440c:	str	r2, [sp, #40]	; 0x28
   14410:	ldr	r4, [r5, #4]
   14414:	rsb	r7, r4, r4, lsl #3
   14418:	lsl	r7, r7, #2
   1441c:	mov	r2, r7
   14420:	ldr	r8, [sp, #32]
   14424:	mov	r0, r8
   14428:	bl	10e80 <mempcpy@plt>
   1442c:	ldr	r3, [sp, #16]
   14430:	ldr	r1, [r3, #4]
   14434:	str	r1, [sp, #4]
   14438:	rsb	r2, r1, r1, lsl #3
   1443c:	lsl	r2, r2, #2
   14440:	ldr	r1, [r3]
   14444:	bl	10dc0 <memcpy@plt>
   14448:	ldr	r5, [r5, #8]
   1444c:	mov	r2, r6
   14450:	mov	r1, r5
   14454:	mov	r0, sl
   14458:	bl	10dc0 <memcpy@plt>
   1445c:	cmp	r4, #0
   14460:	beq	144e0 <argp_parse@@Base+0x2d1c>
   14464:	mov	r2, r8
   14468:	ldr	r3, [r2, #8]
   1446c:	sub	r3, r3, r5
   14470:	add	r3, sl, r3
   14474:	str	r3, [r2, #8]
   14478:	add	r2, r2, #28
   1447c:	subs	r4, r4, #1
   14480:	bne	14468 <argp_parse@@Base+0x2ca4>
   14484:	ldr	r3, [sp, #32]
   14488:	add	r7, r3, r7
   1448c:	add	r3, sl, r6
   14490:	str	r3, [sp, #12]
   14494:	ldr	r2, [sp, #16]
   14498:	ldr	r8, [r2, #8]
   1449c:	ldr	r2, [sp, #4]
   144a0:	cmp	r2, #0
   144a4:	beq	14548 <argp_parse@@Base+0x2d84>
   144a8:	add	r9, r7, #28
   144ac:	mov	fp, r3
   144b0:	sub	r7, r3, #1
   144b4:	b	14530 <argp_parse@@Base+0x2d6c>
   144b8:	ldr	r3, [pc, #508]	; 146bc <argp_parse@@Base+0x2ef8>
   144bc:	ldr	r2, [pc, #508]	; 146c0 <argp_parse@@Base+0x2efc>
   144c0:	ldr	r1, [pc, #472]	; 146a0 <argp_parse@@Base+0x2edc>
   144c4:	ldr	r0, [pc, #504]	; 146c4 <argp_parse@@Base+0x2f00>
   144c8:	bl	10f7c <__assert_fail@plt>
   144cc:	ldr	r3, [pc, #488]	; 146bc <argp_parse@@Base+0x2ef8>
   144d0:	mov	r2, #972	; 0x3cc
   144d4:	ldr	r1, [pc, #452]	; 146a0 <argp_parse@@Base+0x2edc>
   144d8:	ldr	r0, [pc, #488]	; 146c8 <argp_parse@@Base+0x2f04>
   144dc:	bl	10f7c <__assert_fail@plt>
   144e0:	ldr	r7, [sp, #32]
   144e4:	b	1448c <argp_parse@@Base+0x2cc8>
   144e8:	ldr	r3, [sp, #12]
   144ec:	cmp	sl, r3
   144f0:	bcs	14688 <argp_parse@@Base+0x2ec4>
   144f4:	ldrb	r3, [sl]
   144f8:	cmp	r3, r1
   144fc:	beq	14690 <argp_parse@@Base+0x2ecc>
   14500:	mov	r3, sl
   14504:	cmp	r7, r3
   14508:	beq	14688 <argp_parse@@Base+0x2ec4>
   1450c:	ldrb	r2, [r3, #1]!
   14510:	cmp	r2, r1
   14514:	bne	14504 <argp_parse@@Base+0x2d40>
   14518:	b	14690 <argp_parse@@Base+0x2ecc>
   1451c:	add	r9, r9, #28
   14520:	ldr	r3, [sp, #4]
   14524:	subs	r3, r3, #1
   14528:	str	r3, [sp, #4]
   1452c:	beq	1454c <argp_parse@@Base+0x2d88>
   14530:	str	fp, [r9, #-20]	; 0xffffffec
   14534:	ldr	r5, [r9, #-24]	; 0xffffffe8
   14538:	ldr	r4, [r9, #-28]	; 0xffffffe4
   1453c:	cmp	r5, #0
   14540:	bne	14650 <argp_parse@@Base+0x2e8c>
   14544:	b	1451c <argp_parse@@Base+0x2d58>
   14548:	ldr	fp, [sp, #12]
   1454c:	mov	r3, #0
   14550:	strb	r3, [fp]
   14554:	ldr	r0, [sp, #40]	; 0x28
   14558:	bl	123b8 <argp_parse@@Base+0xbf4>
   1455c:	ldr	r4, [sp, #20]
   14560:	ldr	r0, [r4, #8]
   14564:	bl	123b8 <argp_parse@@Base+0xbf4>
   14568:	ldr	r2, [sp, #32]
   1456c:	str	r2, [r4]
   14570:	ldr	r2, [sp, #36]	; 0x24
   14574:	str	r2, [r4, #4]
   14578:	str	sl, [r4, #8]
   1457c:	b	142d8 <argp_parse@@Base+0x2b14>
   14580:	ldr	fp, [sp, #20]
   14584:	mov	r0, fp
   14588:	add	sp, sp, #52	; 0x34
   1458c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14590:	strb	r4, [r7]
   14594:	add	r7, r7, #1
   14598:	add	r5, r5, #24
   1459c:	ldr	r3, [r5, #4]
   145a0:	cmp	r3, #0
   145a4:	bne	145b4 <argp_parse@@Base+0x2df0>
   145a8:	ldr	r3, [r5]
   145ac:	cmp	r3, #0
   145b0:	beq	141a4 <argp_parse@@Base+0x29e0>
   145b4:	ldr	r3, [r5, #12]
   145b8:	tst	r3, #4
   145bc:	beq	141bc <argp_parse@@Base+0x29f8>
   145c0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   145c4:	add	r3, r3, #1
   145c8:	str	r3, [r6, #-24]	; 0xffffffe8
   145cc:	ldr	r3, [r5, #12]
   145d0:	tst	r3, #8
   145d4:	bne	14598 <argp_parse@@Base+0x2dd4>
   145d8:	ldr	r4, [r5, #4]
   145dc:	sub	r3, r4, #1
   145e0:	cmp	r3, #254	; 0xfe
   145e4:	bhi	14598 <argp_parse@@Base+0x2dd4>
   145e8:	bl	10e8c <__ctype_b_loc@plt>
   145ec:	ldr	r2, [r0]
   145f0:	lsl	r3, r4, #1
   145f4:	ldrh	r3, [r2, r3]
   145f8:	tst	r3, #16384	; 0x4000
   145fc:	beq	14598 <argp_parse@@Base+0x2dd4>
   14600:	uxtb	r4, r4
   14604:	ldr	r3, [fp, #8]
   14608:	cmp	r3, r7
   1460c:	bcs	14590 <argp_parse@@Base+0x2dcc>
   14610:	ldrb	r2, [r3]
   14614:	cmp	r2, r4
   14618:	beq	14598 <argp_parse@@Base+0x2dd4>
   1461c:	sub	r1, r7, #1
   14620:	cmp	r3, r1
   14624:	beq	14590 <argp_parse@@Base+0x2dcc>
   14628:	ldrb	r2, [r3, #1]!
   1462c:	cmp	r2, r4
   14630:	bne	14620 <argp_parse@@Base+0x2e5c>
   14634:	b	14598 <argp_parse@@Base+0x2dd4>
   14638:	ldrb	r1, [r8]
   1463c:	cmp	r1, r6
   14640:	beq	144e8 <argp_parse@@Base+0x2d24>
   14644:	add	r4, r4, #24
   14648:	subs	r5, r5, #1
   1464c:	beq	1451c <argp_parse@@Base+0x2d58>
   14650:	ldr	r3, [r4, #12]
   14654:	tst	r3, #8
   14658:	bne	14644 <argp_parse@@Base+0x2e80>
   1465c:	ldr	r6, [r4, #4]
   14660:	sub	r3, r6, #1
   14664:	cmp	r3, #254	; 0xfe
   14668:	bhi	14644 <argp_parse@@Base+0x2e80>
   1466c:	bl	10e8c <__ctype_b_loc@plt>
   14670:	ldr	r2, [r0]
   14674:	lsl	r3, r6, #1
   14678:	ldrh	r3, [r2, r3]
   1467c:	tst	r3, #16384	; 0x4000
   14680:	bne	14638 <argp_parse@@Base+0x2e74>
   14684:	b	14644 <argp_parse@@Base+0x2e80>
   14688:	strb	r1, [fp]
   1468c:	add	fp, fp, #1
   14690:	add	r8, r8, #1
   14694:	b	14644 <argp_parse@@Base+0x2e80>
   14698:			; <UNDEFINED> instruction: 0x000182b0
   1469c:	andeq	r0, r0, r2, asr #3
   146a0:	andeq	r8, r1, r0, lsr #7
   146a4:	andeq	r8, r1, ip, lsr #7
   146a8:			; <UNDEFINED> instruction: 0x000183b0
   146ac:	ldrdeq	r0, [r0], -sl
   146b0:	andeq	r8, r1, r0, asr #7
   146b4:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   146b8:	andeq	r8, r1, r4, ror #7
   146bc:			; <UNDEFINED> instruction: 0x000182bc
   146c0:	andeq	r0, r0, sl, asr #7
   146c4:	andeq	r8, r1, r0, lsr #8
   146c8:	andeq	r8, r1, ip, lsr r4

000146cc <argp_failure@@Base>:
   146cc:	push	{r3}		; (str r3, [sp, #-4]!)
   146d0:	push	{r4, r5, r6, r7, lr}
   146d4:	sub	sp, sp, #200	; 0xc8
   146d8:	mov	r7, r1
   146dc:	mov	r6, r2
   146e0:	subs	r5, r0, #0
   146e4:	beq	14834 <argp_failure@@Base+0x168>
   146e8:	ldr	r3, [r5, #16]
   146ec:	tst	r3, #2
   146f0:	bne	14824 <argp_failure@@Base+0x158>
   146f4:	ldr	r4, [r5, #44]	; 0x2c
   146f8:	cmp	r4, #0
   146fc:	beq	14824 <argp_failure@@Base+0x158>
   14700:	mov	r0, r4
   14704:	bl	10f28 <flockfile@plt>
   14708:	ldr	r0, [r5, #40]	; 0x28
   1470c:	mov	r1, r4
   14710:	bl	10d48 <fputs_unlocked@plt>
   14714:	ldr	r3, [sp, #220]	; 0xdc
   14718:	cmp	r3, #0
   1471c:	beq	14778 <argp_failure@@Base+0xac>
   14720:	add	r3, sp, #224	; 0xe0
   14724:	str	r3, [sp]
   14728:	ldr	r3, [r4, #20]
   1472c:	ldr	r2, [r4, #24]
   14730:	cmp	r3, r2
   14734:	addcc	r2, r3, #1
   14738:	strcc	r2, [r4, #20]
   1473c:	movcc	r2, #58	; 0x3a
   14740:	strbcc	r2, [r3]
   14744:	bcs	14858 <argp_failure@@Base+0x18c>
   14748:	ldr	r3, [r4, #20]
   1474c:	ldr	r2, [r4, #24]
   14750:	cmp	r3, r2
   14754:	addcc	r2, r3, #1
   14758:	strcc	r2, [r4, #20]
   1475c:	movcc	r2, #32
   14760:	strbcc	r2, [r3]
   14764:	bcs	14868 <argp_failure@@Base+0x19c>
   14768:	ldr	r2, [sp]
   1476c:	ldr	r1, [sp, #220]	; 0xdc
   14770:	mov	r0, r4
   14774:	bl	10f10 <vfprintf@plt>
   14778:	cmp	r6, #0
   1477c:	beq	147e0 <argp_failure@@Base+0x114>
   14780:	ldr	r3, [r4, #20]
   14784:	ldr	r2, [r4, #24]
   14788:	cmp	r3, r2
   1478c:	addcc	r2, r3, #1
   14790:	strcc	r2, [r4, #20]
   14794:	movcc	r2, #58	; 0x3a
   14798:	strbcc	r2, [r3]
   1479c:	bcs	14878 <argp_failure@@Base+0x1ac>
   147a0:	ldr	r3, [r4, #20]
   147a4:	ldr	r2, [r4, #24]
   147a8:	cmp	r3, r2
   147ac:	addcc	r2, r3, #1
   147b0:	strcc	r2, [r4, #20]
   147b4:	movcc	r2, #32
   147b8:	strbcc	r2, [r3]
   147bc:	bcs	14888 <argp_failure@@Base+0x1bc>
   147c0:	mov	r2, #200	; 0xc8
   147c4:	mov	r1, sp
   147c8:	mov	r0, r6
   147cc:	bl	10ed4 <strerror_r@plt>
   147d0:	cmp	r0, #0
   147d4:	beq	14898 <argp_failure@@Base+0x1cc>
   147d8:	mov	r1, r4
   147dc:	bl	10d48 <fputs_unlocked@plt>
   147e0:	ldr	r3, [r4, #20]
   147e4:	ldr	r2, [r4, #24]
   147e8:	cmp	r3, r2
   147ec:	addcc	r2, r3, #1
   147f0:	strcc	r2, [r4, #20]
   147f4:	movcc	r2, #10
   147f8:	strbcc	r2, [r3]
   147fc:	bcs	148b0 <argp_failure@@Base+0x1e4>
   14800:	mov	r0, r4
   14804:	bl	10dfc <funlockfile@plt>
   14808:	cmp	r7, #0
   1480c:	beq	14824 <argp_failure@@Base+0x158>
   14810:	cmp	r5, #0
   14814:	beq	148c0 <argp_failure@@Base+0x1f4>
   14818:	ldr	r3, [r5, #16]
   1481c:	tst	r3, #32
   14820:	beq	148c0 <argp_failure@@Base+0x1f4>
   14824:	add	sp, sp, #200	; 0xc8
   14828:	pop	{r4, r5, r6, r7, lr}
   1482c:	add	sp, sp, #4
   14830:	bx	lr
   14834:	ldr	r3, [pc, #140]	; 148c8 <argp_failure@@Base+0x1fc>
   14838:	ldr	r4, [r3]
   1483c:	cmp	r4, #0
   14840:	beq	14824 <argp_failure@@Base+0x158>
   14844:	mov	r0, r4
   14848:	bl	10f28 <flockfile@plt>
   1484c:	ldr	r3, [pc, #120]	; 148cc <argp_failure@@Base+0x200>
   14850:	ldr	r0, [r3]
   14854:	b	1470c <argp_failure@@Base+0x40>
   14858:	mov	r1, #58	; 0x3a
   1485c:	mov	r0, r4
   14860:	bl	10ef8 <__overflow@plt>
   14864:	b	14748 <argp_failure@@Base+0x7c>
   14868:	mov	r1, #32
   1486c:	mov	r0, r4
   14870:	bl	10ef8 <__overflow@plt>
   14874:	b	14768 <argp_failure@@Base+0x9c>
   14878:	mov	r1, #58	; 0x3a
   1487c:	mov	r0, r4
   14880:	bl	10ef8 <__overflow@plt>
   14884:	b	147a0 <argp_failure@@Base+0xd4>
   14888:	mov	r1, #32
   1488c:	mov	r0, r4
   14890:	bl	10ef8 <__overflow@plt>
   14894:	b	147c0 <argp_failure@@Base+0xf4>
   14898:	mov	r0, r6
   1489c:	bl	10e5c <strerror@plt>
   148a0:	ldr	r3, [pc, #40]	; 148d0 <argp_failure@@Base+0x204>
   148a4:	cmp	r0, #0
   148a8:	moveq	r0, r3
   148ac:	b	147d8 <argp_failure@@Base+0x10c>
   148b0:	mov	r1, #10
   148b4:	mov	r0, r4
   148b8:	bl	10ef8 <__overflow@plt>
   148bc:	b	14800 <argp_failure@@Base+0x134>
   148c0:	mov	r0, r7
   148c4:	bl	10e98 <exit@plt>
   148c8:	andeq	r9, r2, r8, asr #2
   148cc:	andeq	r9, r2, r0, asr #2
   148d0:	andeq	r8, r1, r0, ror r4
   148d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148d8:	add	fp, sp, #32
   148dc:	sub	sp, sp, #108	; 0x6c
   148e0:	str	r0, [fp, #-112]	; 0xffffff90
   148e4:	str	r1, [fp, #-100]	; 0xffffff9c
   148e8:	str	r3, [fp, #-104]	; 0xffffff98
   148ec:	subs	r3, r2, #0
   148f0:	str	r3, [fp, #-132]	; 0xffffff7c
   148f4:	beq	15960 <argp_failure@@Base+0x1294>
   148f8:	mov	r0, r3
   148fc:	bl	10f28 <flockfile@plt>
   14900:	ldr	r3, [pc, #3772]	; 157c4 <argp_failure@@Base+0x10f8>
   14904:	ldr	r3, [r3, #36]	; 0x24
   14908:	str	r3, [fp, #-108]	; 0xffffff94
   1490c:	cmp	r3, #0
   14910:	beq	149e8 <argp_failure@@Base+0x31c>
   14914:	mov	r3, #0
   14918:	ldr	r2, [pc, #3748]	; 157c4 <argp_failure@@Base+0x10f8>
   1491c:	ldr	r2, [r2, #32]
   14920:	mov	r1, r3
   14924:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14928:	bl	16ecc <argp_error@@Base+0x1384>
   1492c:	subs	sl, r0, #0
   14930:	beq	14d94 <argp_failure@@Base+0x6c8>
   14934:	ldr	r3, [fp, #-104]	; 0xffffff98
   14938:	tst	r3, #11
   1493c:	moveq	r3, #0
   14940:	streq	r3, [fp, #-108]	; 0xffffff94
   14944:	bne	14da0 <argp_failure@@Base+0x6d4>
   14948:	ldr	r3, [fp, #-104]	; 0xffffff98
   1494c:	tst	r3, #3
   14950:	moveq	r4, #0
   14954:	bne	14e24 <argp_failure@@Base+0x758>
   14958:	ldr	r3, [fp, #-104]	; 0xffffff98
   1495c:	tst	r3, #16
   14960:	bne	15020 <argp_failure@@Base+0x954>
   14964:	ldr	r3, [fp, #-104]	; 0xffffff98
   14968:	tst	r3, #4
   1496c:	bne	15048 <argp_failure@@Base+0x97c>
   14970:	ldr	r3, [fp, #-104]	; 0xffffff98
   14974:	tst	r3, #8
   14978:	beq	158d4 <argp_failure@@Base+0x1208>
   1497c:	ldr	r3, [fp, #-108]	; 0xffffff94
   14980:	ldr	r3, [r3, #4]
   14984:	cmp	r3, #0
   14988:	beq	158d4 <argp_failure@@Base+0x1208>
   1498c:	cmp	r4, #0
   14990:	beq	149b8 <argp_failure@@Base+0x2ec>
   14994:	ldr	r2, [sl, #28]
   14998:	ldr	r3, [sl, #32]
   1499c:	cmp	r2, r3
   149a0:	bcs	15064 <argp_failure@@Base+0x998>
   149a4:	ldr	r3, [sl, #28]
   149a8:	add	r2, r3, #1
   149ac:	str	r2, [sl, #28]
   149b0:	mov	r2, #10
   149b4:	strb	r2, [r3]
   149b8:	mov	r3, #0
   149bc:	str	r3, [fp, #-88]	; 0xffffffa8
   149c0:	str	r3, [fp, #-84]	; 0xffffffac
   149c4:	str	r3, [fp, #-80]	; 0xffffffb0
   149c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   149cc:	ldr	r2, [r3]
   149d0:	str	r2, [fp, #-96]	; 0xffffffa0
   149d4:	ldr	r3, [r3, #4]
   149d8:	str	r3, [fp, #-120]	; 0xffffff88
   149dc:	cmp	r3, #0
   149e0:	bne	1544c <argp_failure@@Base+0xd80>
   149e4:	b	158d0 <argp_failure@@Base+0x1204>
   149e8:	ldr	r0, [pc, #3452]	; 1576c <argp_failure@@Base+0x10a0>
   149ec:	bl	10e2c <getenv@plt>
   149f0:	mov	r9, r0
   149f4:	sub	ip, fp, #76	; 0x4c
   149f8:	ldr	lr, [pc, #3524]	; 157c4 <argp_failure@@Base+0x10f8>
   149fc:	ldm	lr!, {r0, r1, r2, r3}
   14a00:	stmia	ip!, {r0, r1, r2, r3}
   14a04:	ldm	lr!, {r0, r1, r2, r3}
   14a08:	stmia	ip!, {r0, r1, r2, r3}
   14a0c:	ldm	lr, {r0, r1}
   14a10:	stm	ip, {r0, r1}
   14a14:	cmp	r9, #0
   14a18:	ldrne	sl, [pc, #3408]	; 15770 <argp_failure@@Base+0x10a4>
   14a1c:	addne	r8, sl, #168	; 0xa8
   14a20:	bne	14cc4 <argp_failure@@Base+0x5f8>
   14a24:	b	14914 <argp_failure@@Base+0x248>
   14a28:	mov	r5, r3
   14a2c:	mov	r9, r5
   14a30:	mov	r3, r5
   14a34:	ldrb	r0, [r3], #1
   14a38:	lsl	r2, r0, #1
   14a3c:	ldrh	r2, [r1, r2]
   14a40:	tst	r2, #8192	; 0x2000
   14a44:	bne	14a28 <argp_failure@@Base+0x35c>
   14a48:	tst	r2, #1024	; 0x400
   14a4c:	beq	14cbc <argp_failure@@Base+0x5f0>
   14a50:	cmp	r0, #95	; 0x5f
   14a54:	cmpne	r0, #45	; 0x2d
   14a58:	moveq	r3, #1
   14a5c:	movne	r3, #0
   14a60:	lsl	r2, r2, #28
   14a64:	orrs	r3, r3, r2, lsr #31
   14a68:	beq	159e4 <argp_failure@@Base+0x1318>
   14a6c:	mov	r4, r5
   14a70:	ldrb	r3, [r4, #1]!
   14a74:	lsl	r2, r3, #1
   14a78:	ldrh	r2, [r1, r2]
   14a7c:	lsl	r2, r2, #28
   14a80:	cmp	r3, #95	; 0x5f
   14a84:	cmpne	r3, #45	; 0x2d
   14a88:	moveq	r3, #1
   14a8c:	movne	r3, #0
   14a90:	orrs	r3, r3, r2, lsr #31
   14a94:	bne	14a70 <argp_failure@@Base+0x3a4>
   14a98:	sub	r5, r4, r5
   14a9c:	ldrb	r3, [r4]
   14aa0:	lsl	r2, r3, #1
   14aa4:	ldrh	r2, [r1, r2]
   14aa8:	tst	r2, #8192	; 0x2000
   14aac:	beq	14ac4 <argp_failure@@Base+0x3f8>
   14ab0:	ldrb	r3, [r4, #1]!
   14ab4:	lsl	r2, r3, #1
   14ab8:	ldrh	r2, [r1, r2]
   14abc:	tst	r2, #8192	; 0x2000
   14ac0:	bne	14ab0 <argp_failure@@Base+0x3e4>
   14ac4:	cmp	r3, #44	; 0x2c
   14ac8:	cmpne	r3, #0
   14acc:	beq	159fc <argp_failure@@Base+0x1330>
   14ad0:	cmp	r3, #61	; 0x3d
   14ad4:	beq	14afc <argp_failure@@Base+0x430>
   14ad8:	ldrb	r3, [r4]
   14adc:	lsl	r3, r3, #1
   14ae0:	ldrh	r3, [r1, r3]
   14ae4:	tst	r3, #2048	; 0x800
   14ae8:	bne	14b7c <argp_failure@@Base+0x4b0>
   14aec:	ldr	r3, [fp, #-108]	; 0xffffff94
   14af0:	str	r3, [fp, #-96]	; 0xffffffa0
   14af4:	str	r3, [fp, #-116]	; 0xffffff8c
   14af8:	b	15a10 <argp_failure@@Base+0x1344>
   14afc:	add	r2, r4, #1
   14b00:	ldrb	r3, [r4, #1]
   14b04:	lsl	r3, r3, #1
   14b08:	ldrh	r3, [r1, r3]
   14b0c:	tst	r3, #8192	; 0x2000
   14b10:	beq	159f4 <argp_failure@@Base+0x1328>
   14b14:	ldrb	r3, [r2, #1]!
   14b18:	lsl	r3, r3, #1
   14b1c:	ldrh	r3, [r1, r3]
   14b20:	tst	r3, #8192	; 0x2000
   14b24:	bne	14b14 <argp_failure@@Base+0x448>
   14b28:	mov	r4, r2
   14b2c:	b	14ad8 <argp_failure@@Base+0x40c>
   14b30:	ldrb	r3, [r9, #1]
   14b34:	cmp	r3, #111	; 0x6f
   14b38:	movne	r3, #1
   14b3c:	strne	r3, [fp, #-96]	; 0xffffffa0
   14b40:	strne	r3, [fp, #-116]	; 0xffffff8c
   14b44:	bne	15a10 <argp_failure@@Base+0x1344>
   14b48:	ldrb	r3, [r9, #2]
   14b4c:	cmp	r3, #45	; 0x2d
   14b50:	movne	r3, #1
   14b54:	strne	r3, [fp, #-96]	; 0xffffffa0
   14b58:	strne	r3, [fp, #-116]	; 0xffffff8c
   14b5c:	bne	15a10 <argp_failure@@Base+0x1344>
   14b60:	add	r9, r9, #3
   14b64:	sub	r5, r5, #3
   14b68:	ldr	r3, [fp, #-108]	; 0xffffff94
   14b6c:	str	r3, [fp, #-116]	; 0xffffff8c
   14b70:	mov	r3, #1
   14b74:	str	r3, [fp, #-96]	; 0xffffffa0
   14b78:	b	15a10 <argp_failure@@Base+0x1344>
   14b7c:	mov	r2, #10
   14b80:	mov	r1, #0
   14b84:	mov	r0, r4
   14b88:	bl	10d6c <strtol@plt>
   14b8c:	str	r0, [fp, #-116]	; 0xffffff8c
   14b90:	ldr	r2, [r6]
   14b94:	ldrb	r3, [r4]
   14b98:	lsl	r3, r3, #1
   14b9c:	ldrh	r3, [r2, r3]
   14ba0:	tst	r3, #2048	; 0x800
   14ba4:	beq	14bbc <argp_failure@@Base+0x4f0>
   14ba8:	ldrb	r3, [r4, #1]!
   14bac:	lsl	r3, r3, #1
   14bb0:	ldrh	r3, [r2, r3]
   14bb4:	tst	r3, #2048	; 0x800
   14bb8:	bne	14ba8 <argp_failure@@Base+0x4dc>
   14bbc:	ldrb	r3, [r4]
   14bc0:	lsl	r3, r3, #1
   14bc4:	ldrh	r3, [r2, r3]
   14bc8:	tst	r3, #8192	; 0x2000
   14bcc:	beq	14bf0 <argp_failure@@Base+0x524>
   14bd0:	ldrb	r3, [r4, #1]!
   14bd4:	lsl	r3, r3, #1
   14bd8:	ldrh	r3, [r2, r3]
   14bdc:	tst	r3, #8192	; 0x2000
   14be0:	bne	14bd0 <argp_failure@@Base+0x504>
   14be4:	ldr	r3, [fp, #-108]	; 0xffffff94
   14be8:	str	r3, [fp, #-96]	; 0xffffffa0
   14bec:	b	15a10 <argp_failure@@Base+0x1344>
   14bf0:	ldr	r3, [fp, #-108]	; 0xffffff94
   14bf4:	str	r3, [fp, #-96]	; 0xffffffa0
   14bf8:	b	15a10 <argp_failure@@Base+0x1344>
   14bfc:	str	r9, [sp, #4]
   14c00:	str	r7, [sp]
   14c04:	ldr	r3, [pc, #2920]	; 15774 <argp_failure@@Base+0x10a8>
   14c08:	mov	r2, #0
   14c0c:	mov	r1, r2
   14c10:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14c14:	bl	146cc <argp_failure@@Base>
   14c18:	b	14c80 <argp_failure@@Base+0x5b4>
   14c1c:	add	r6, r6, #16
   14c20:	cmp	r6, r8
   14c24:	beq	14c9c <argp_failure@@Base+0x5d0>
   14c28:	mov	r0, r6
   14c2c:	bl	10ea4 <strlen@plt>
   14c30:	mov	r7, r0
   14c34:	cmp	r0, r5
   14c38:	bne	14c1c <argp_failure@@Base+0x550>
   14c3c:	mov	r2, r5
   14c40:	mov	r1, r6
   14c44:	mov	r0, r9
   14c48:	bl	10f64 <strncmp@plt>
   14c4c:	cmp	r0, #0
   14c50:	bne	14c1c <argp_failure@@Base+0x550>
   14c54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14c58:	cmp	r3, #0
   14c5c:	beq	14c6c <argp_failure@@Base+0x5a0>
   14c60:	ldrb	r3, [r6, #14]
   14c64:	cmp	r3, #0
   14c68:	beq	14bfc <argp_failure@@Base+0x530>
   14c6c:	ldrb	r3, [r6, #15]
   14c70:	sub	r2, fp, #36	; 0x24
   14c74:	add	r3, r2, r3
   14c78:	ldr	r2, [fp, #-116]	; 0xffffff8c
   14c7c:	str	r2, [r3, #-40]	; 0xffffffd8
   14c80:	cmp	r6, r8
   14c84:	beq	14c9c <argp_failure@@Base+0x5d0>
   14c88:	ldrb	r3, [r4]
   14c8c:	cmp	r3, #44	; 0x2c
   14c90:	addeq	r9, r4, #1
   14c94:	movne	r9, r4
   14c98:	b	14cc4 <argp_failure@@Base+0x5f8>
   14c9c:	str	r9, [sp, #4]
   14ca0:	str	r5, [sp]
   14ca4:	ldr	r3, [pc, #2764]	; 15778 <argp_failure@@Base+0x10ac>
   14ca8:	mov	r2, #0
   14cac:	mov	r1, r2
   14cb0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14cb4:	bl	146cc <argp_failure@@Base>
   14cb8:	b	14c88 <argp_failure@@Base+0x5bc>
   14cbc:	cmp	r0, #0
   14cc0:	bne	14ce4 <argp_failure@@Base+0x618>
   14cc4:	ldrb	r3, [r9]
   14cc8:	cmp	r3, #0
   14ccc:	beq	14cfc <argp_failure@@Base+0x630>
   14cd0:	bl	10e8c <__ctype_b_loc@plt>
   14cd4:	mov	r6, r0
   14cd8:	ldr	r1, [r0]
   14cdc:	mov	r5, r9
   14ce0:	b	14a2c <argp_failure@@Base+0x360>
   14ce4:	str	r5, [sp]
   14ce8:	ldr	r3, [pc, #2700]	; 1577c <argp_failure@@Base+0x10b0>
   14cec:	mov	r2, #0
   14cf0:	mov	r1, r2
   14cf4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14cf8:	bl	146cc <argp_failure@@Base>
   14cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d00:	ldr	r3, [pc, #2680]	; 15780 <argp_failure@@Base+0x10b4>
   14d04:	add	r1, r3, #144	; 0x90
   14d08:	add	r3, r3, #16
   14d0c:	cmp	r3, r1
   14d10:	beq	14d64 <argp_failure@@Base+0x698>
   14d14:	ldrb	r2, [r3, #14]
   14d18:	cmp	r2, #0
   14d1c:	bne	14d08 <argp_failure@@Base+0x63c>
   14d20:	ldrb	r2, [r3, #15]
   14d24:	cmp	r2, #32
   14d28:	beq	14d08 <argp_failure@@Base+0x63c>
   14d2c:	sub	ip, fp, #36	; 0x24
   14d30:	add	r2, ip, r2
   14d34:	ldr	r2, [r2, #-40]	; 0xffffffd8
   14d38:	cmp	r2, r0
   14d3c:	blt	14d08 <argp_failure@@Base+0x63c>
   14d40:	str	r3, [sp, #4]
   14d44:	ldr	r3, [pc, #2616]	; 15784 <argp_failure@@Base+0x10b8>
   14d48:	str	r3, [sp]
   14d4c:	ldr	r3, [pc, #2612]	; 15788 <argp_failure@@Base+0x10bc>
   14d50:	mov	r2, #0
   14d54:	mov	r1, r2
   14d58:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14d5c:	bl	146cc <argp_failure@@Base>
   14d60:	b	14914 <argp_failure@@Base+0x248>
   14d64:	ldr	r4, [pc, #2648]	; 157c4 <argp_failure@@Base+0x10f8>
   14d68:	mov	ip, r4
   14d6c:	sub	lr, fp, #76	; 0x4c
   14d70:	ldm	lr!, {r0, r1, r2, r3}
   14d74:	stmia	ip!, {r0, r1, r2, r3}
   14d78:	ldm	lr!, {r0, r1, r2, r3}
   14d7c:	stmia	ip!, {r0, r1, r2, r3}
   14d80:	ldm	lr, {r0, r1}
   14d84:	stm	ip, {r0, r1}
   14d88:	mov	r3, #1
   14d8c:	str	r3, [r4, #36]	; 0x24
   14d90:	b	14914 <argp_failure@@Base+0x248>
   14d94:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14d98:	bl	10dfc <funlockfile@plt>
   14d9c:	b	15960 <argp_failure@@Base+0x1294>
   14da0:	mov	r1, #0
   14da4:	ldr	r0, [fp, #-112]	; 0xffffff90
   14da8:	bl	14010 <argp_parse@@Base+0x284c>
   14dac:	str	r0, [fp, #-108]	; 0xffffff94
   14db0:	ldr	r1, [pc, #2516]	; 1578c <argp_failure@@Base+0x10c0>
   14db4:	bl	12f18 <argp_parse@@Base+0x1754>
   14db8:	cmp	r0, #0
   14dbc:	mvnne	r3, #0
   14dc0:	strne	r3, [r0, #12]
   14dc4:	ldr	r1, [pc, #2500]	; 15790 <argp_failure@@Base+0x10c4>
   14dc8:	ldr	r0, [fp, #-108]	; 0xffffff94
   14dcc:	bl	12f18 <argp_parse@@Base+0x1754>
   14dd0:	cmp	r0, #0
   14dd4:	mvnne	r3, #0
   14dd8:	strne	r3, [r0, #12]
   14ddc:	ldr	r0, [fp, #-108]	; 0xffffff94
   14de0:	ldr	r3, [r0, #4]
   14de4:	cmp	r3, #0
   14de8:	beq	14948 <argp_failure@@Base+0x27c>
   14dec:	ldr	r2, [r0]
   14df0:	mov	r3, #0
   14df4:	str	r3, [r2, #24]
   14df8:	add	r3, r3, #1
   14dfc:	add	r2, r2, #28
   14e00:	ldr	r1, [r0, #4]
   14e04:	cmp	r3, r1
   14e08:	bcc	14df4 <argp_failure@@Base+0x728>
   14e0c:	ldr	r3, [pc, #2432]	; 15794 <argp_failure@@Base+0x10c8>
   14e10:	mov	r2, #28
   14e14:	ldr	r0, [fp, #-108]	; 0xffffff94
   14e18:	ldr	r0, [r0]
   14e1c:	bl	10f40 <qsort@plt>
   14e20:	b	14948 <argp_failure@@Base+0x27c>
   14e24:	ldr	r0, [fp, #-112]	; 0xffffff90
   14e28:	bl	12fb0 <argp_parse@@Base+0x17ec>
   14e2c:	mov	r2, r0
   14e30:	add	r3, r0, #14
   14e34:	bic	r3, r3, #7
   14e38:	sub	sp, sp, r3
   14e3c:	add	r8, sp, #8
   14e40:	mov	r1, #0
   14e44:	mov	r0, r8
   14e48:	bl	10ee0 <memset@plt>
   14e4c:	mov	r5, #1
   14e50:	ldr	r4, [pc, #2412]	; 157c4 <argp_failure@@Base+0x10f8>
   14e54:	ldr	r9, [pc, #2364]	; 15798 <argp_failure@@Base+0x10cc>
   14e58:	str	r8, [fp, #-96]	; 0xffffffa0
   14e5c:	ldr	r8, [fp, #-104]	; 0xffffff98
   14e60:	b	14f10 <argp_failure@@Base+0x844>
   14e64:	mov	r0, sl
   14e68:	bl	16f44 <argp_error@@Base+0x13fc>
   14e6c:	b	14f2c <argp_failure@@Base+0x860>
   14e70:	mov	r0, sl
   14e74:	bl	16f44 <argp_error@@Base+0x13fc>
   14e78:	b	14f74 <argp_failure@@Base+0x8a8>
   14e7c:	mov	r1, sl
   14e80:	ldr	r0, [fp, #-108]	; 0xffffff94
   14e84:	bl	12d08 <argp_parse@@Base+0x1544>
   14e88:	orr	r8, r8, #2
   14e8c:	str	sl, [sp]
   14e90:	mov	r3, #1
   14e94:	sub	r2, fp, #76	; 0x4c
   14e98:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14e9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   14ea0:	bl	13230 <argp_parse@@Base+0x1a6c>
   14ea4:	mov	r6, r0
   14ea8:	ldr	r3, [sl, #28]
   14eac:	ldr	r2, [sl, #24]
   14eb0:	sub	r3, r3, r2
   14eb4:	ldr	r2, [sl, #16]
   14eb8:	cmp	r3, r2
   14ebc:	bhi	14fe4 <argp_failure@@Base+0x918>
   14ec0:	str	r7, [sl, #12]
   14ec4:	ldr	r3, [sl, #28]
   14ec8:	ldr	r2, [sl, #24]
   14ecc:	sub	r3, r3, r2
   14ed0:	ldr	r2, [sl, #16]
   14ed4:	cmp	r3, r2
   14ed8:	bhi	14ff0 <argp_failure@@Base+0x924>
   14edc:	str	r5, [sl, #4]
   14ee0:	ldr	r2, [sl, #28]
   14ee4:	ldr	r3, [sl, #32]
   14ee8:	cmp	r2, r3
   14eec:	bcs	14ffc <argp_failure@@Base+0x930>
   14ef0:	ldr	r3, [sl, #28]
   14ef4:	add	r2, r3, #1
   14ef8:	str	r2, [sl, #28]
   14efc:	mov	r2, #10
   14f00:	strb	r2, [r3]
   14f04:	mov	r5, #0
   14f08:	cmp	r6, r5
   14f0c:	beq	15014 <argp_failure@@Base+0x948>
   14f10:	ldr	r6, [r4, #28]
   14f14:	ldr	r3, [sl, #28]
   14f18:	ldr	r2, [sl, #24]
   14f1c:	sub	r3, r3, r2
   14f20:	ldr	r2, [sl, #16]
   14f24:	cmp	r3, r2
   14f28:	bhi	14e64 <argp_failure@@Base+0x798>
   14f2c:	ldr	r7, [sl, #12]
   14f30:	str	r6, [sl, #12]
   14f34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14f38:	str	r3, [fp, #-76]	; 0xffffffb4
   14f3c:	cmp	r5, #0
   14f40:	ldr	r3, [fp, #4]
   14f44:	ldrne	r2, [pc, #2128]	; 1579c <argp_failure@@Base+0x10d0>
   14f48:	ldreq	r2, [pc, #2128]	; 157a0 <argp_failure@@Base+0x10d4>
   14f4c:	mov	r1, r9
   14f50:	mov	r0, sl
   14f54:	bl	175d8 <argp_error@@Base+0x1a90>
   14f58:	ldr	r6, [r4, #28]
   14f5c:	ldr	r3, [sl, #28]
   14f60:	ldr	r2, [sl, #24]
   14f64:	sub	r3, r3, r2
   14f68:	ldr	r2, [sl, #16]
   14f6c:	cmp	r3, r2
   14f70:	bhi	14e70 <argp_failure@@Base+0x7a4>
   14f74:	ldr	r5, [sl, #4]
   14f78:	str	r6, [sl, #4]
   14f7c:	tst	r8, #2
   14f80:	beq	14e7c <argp_failure@@Base+0x7b0>
   14f84:	ldr	r3, [fp, #-108]	; 0xffffff94
   14f88:	ldr	r3, [r3, #4]
   14f8c:	cmp	r3, #0
   14f90:	beq	14e8c <argp_failure@@Base+0x7c0>
   14f94:	ldr	r3, [sl, #28]
   14f98:	add	r3, r3, #12
   14f9c:	ldr	r2, [sl, #32]
   14fa0:	cmp	r2, r3
   14fa4:	bcs	14fbc <argp_failure@@Base+0x8f0>
   14fa8:	mov	r1, #12
   14fac:	mov	r0, sl
   14fb0:	bl	174e8 <argp_error@@Base+0x19a0>
   14fb4:	cmp	r0, #0
   14fb8:	beq	14e8c <argp_failure@@Base+0x7c0>
   14fbc:	ldr	ip, [sl, #28]
   14fc0:	ldr	r3, [pc, #2012]	; 157a4 <argp_failure@@Base+0x10d8>
   14fc4:	ldm	r3!, {r0, r1, r2}
   14fc8:	str	r0, [ip]
   14fcc:	str	r1, [ip, #4]
   14fd0:	str	r2, [ip, #8]
   14fd4:	ldr	r3, [sl, #28]
   14fd8:	add	r3, r3, #12
   14fdc:	str	r3, [sl, #28]
   14fe0:	b	14e8c <argp_failure@@Base+0x7c0>
   14fe4:	mov	r0, sl
   14fe8:	bl	16f44 <argp_error@@Base+0x13fc>
   14fec:	b	14ec0 <argp_failure@@Base+0x7f4>
   14ff0:	mov	r0, sl
   14ff4:	bl	16f44 <argp_error@@Base+0x13fc>
   14ff8:	b	14edc <argp_failure@@Base+0x810>
   14ffc:	mov	r1, #1
   15000:	mov	r0, sl
   15004:	bl	174e8 <argp_error@@Base+0x19a0>
   15008:	cmp	r0, #0
   1500c:	beq	14f04 <argp_failure@@Base+0x838>
   15010:	b	14ef0 <argp_failure@@Base+0x824>
   15014:	str	r8, [fp, #-104]	; 0xffffff98
   15018:	mov	r4, #1
   1501c:	b	14958 <argp_failure@@Base+0x28c>
   15020:	str	sl, [sp, #4]
   15024:	mov	r3, #1
   15028:	str	r3, [sp]
   1502c:	mov	r3, #0
   15030:	mov	r2, r3
   15034:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15038:	ldr	r0, [fp, #-112]	; 0xffffff90
   1503c:	bl	13788 <argp_parse@@Base+0x1fc4>
   15040:	orr	r4, r4, r0
   15044:	b	14964 <argp_failure@@Base+0x298>
   15048:	ldr	r3, [fp, #4]
   1504c:	mov	r2, r3
   15050:	ldr	r1, [pc, #1872]	; 157a8 <argp_failure@@Base+0x10dc>
   15054:	mov	r0, sl
   15058:	bl	175d8 <argp_error@@Base+0x1a90>
   1505c:	mov	r4, #1
   15060:	b	14970 <argp_failure@@Base+0x2a4>
   15064:	mov	r1, #1
   15068:	mov	r0, sl
   1506c:	bl	174e8 <argp_error@@Base+0x19a0>
   15070:	cmp	r0, #0
   15074:	beq	149b8 <argp_failure@@Base+0x2ec>
   15078:	b	149a4 <argp_failure@@Base+0x2d8>
   1507c:	mov	r0, sl
   15080:	bl	16f44 <argp_error@@Base+0x13fc>
   15084:	b	15470 <argp_failure@@Base+0xda4>
   15088:	add	r3, r3, #24
   1508c:	subs	r2, r2, #1
   15090:	beq	150b4 <argp_failure@@Base+0x9e8>
   15094:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15098:	cmp	r1, #0
   1509c:	beq	15088 <argp_failure@@Base+0x9bc>
   150a0:	ldr	r1, [r3, #-12]
   150a4:	tst	r1, #2
   150a8:	bne	15088 <argp_failure@@Base+0x9bc>
   150ac:	mov	r3, #1
   150b0:	str	r3, [fp, #-116]	; 0xffffff8c
   150b4:	ldr	r3, [pc, #1800]	; 157c4 <argp_failure@@Base+0x10f8>
   150b8:	ldr	r4, [r3, #8]
   150bc:	ldr	r3, [sl, #28]
   150c0:	ldr	r2, [sl, #24]
   150c4:	sub	r3, r3, r2
   150c8:	ldr	r2, [sl, #16]
   150cc:	cmp	r3, r2
   150d0:	bhi	150f0 <argp_failure@@Base+0xa24>
   150d4:	str	r4, [sl, #12]
   150d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   150dc:	ldr	r5, [r3, #4]
   150e0:	cmp	r5, #0
   150e4:	beq	151ec <argp_failure@@Base+0xb20>
   150e8:	mov	r4, r8
   150ec:	b	15a30 <argp_failure@@Base+0x1364>
   150f0:	mov	r0, sl
   150f4:	bl	16f44 <argp_error@@Base+0x13fc>
   150f8:	b	150d4 <argp_failure@@Base+0xa08>
   150fc:	tst	r6, #2
   15100:	beq	1510c <argp_failure@@Base+0xa40>
   15104:	add	r9, r9, #1
   15108:	b	15a24 <argp_failure@@Base+0x1358>
   1510c:	sub	r1, fp, #76	; 0x4c
   15110:	ldr	r3, [pc, #1708]	; 157c4 <argp_failure@@Base+0x10f8>
   15114:	ldr	r0, [r3, #8]
   15118:	bl	13604 <argp_parse@@Base+0x1e40>
   1511c:	ldr	r2, [sl, #28]
   15120:	ldr	r3, [sl, #32]
   15124:	cmp	r2, r3
   15128:	bcs	151a8 <argp_failure@@Base+0xadc>
   1512c:	ldr	r3, [sl, #28]
   15130:	add	r2, r3, #1
   15134:	str	r2, [sl, #28]
   15138:	mov	r2, #45	; 0x2d
   1513c:	strb	r2, [r3]
   15140:	ldrb	r6, [r9]
   15144:	ldr	r2, [sl, #28]
   15148:	ldr	r3, [sl, #32]
   1514c:	cmp	r2, r3
   15150:	bcs	151c0 <argp_failure@@Base+0xaf4>
   15154:	ldr	r3, [sl, #28]
   15158:	add	r2, r3, #1
   1515c:	str	r2, [sl, #28]
   15160:	strb	r6, [r3]
   15164:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15168:	cmp	r3, #0
   1516c:	beq	15180 <argp_failure@@Base+0xab4>
   15170:	ldr	r3, [pc, #1612]	; 157c4 <argp_failure@@Base+0x10f8>
   15174:	ldr	r3, [r3]
   15178:	cmp	r3, #0
   1517c:	beq	151d8 <argp_failure@@Base+0xb0c>
   15180:	ldr	r2, [r8, #8]
   15184:	cmp	r2, #0
   15188:	beq	15104 <argp_failure@@Base+0xa38>
   1518c:	ldr	r3, [r8, #12]
   15190:	tst	r3, #1
   15194:	ldrne	r1, [pc, #1552]	; 157ac <argp_failure@@Base+0x10e0>
   15198:	ldreq	r1, [pc, #1552]	; 157b0 <argp_failure@@Base+0x10e4>
   1519c:	mov	r0, sl
   151a0:	bl	175d8 <argp_error@@Base+0x1a90>
   151a4:	b	15104 <argp_failure@@Base+0xa38>
   151a8:	mov	r1, #1
   151ac:	mov	r0, sl
   151b0:	bl	174e8 <argp_error@@Base+0x19a0>
   151b4:	cmp	r0, #0
   151b8:	beq	15140 <argp_failure@@Base+0xa74>
   151bc:	b	1512c <argp_failure@@Base+0xa60>
   151c0:	mov	r1, #1
   151c4:	mov	r0, sl
   151c8:	bl	174e8 <argp_error@@Base+0x19a0>
   151cc:	cmp	r0, #0
   151d0:	beq	15164 <argp_failure@@Base+0xa98>
   151d4:	b	15154 <argp_failure@@Base+0xa88>
   151d8:	ldr	r3, [r8, #8]
   151dc:	cmp	r3, #0
   151e0:	movne	r3, #1
   151e4:	strne	r3, [fp, #-80]	; 0xffffffb0
   151e8:	b	15104 <argp_failure@@Base+0xa38>
   151ec:	ldr	r3, [r8, #12]
   151f0:	tst	r3, #8
   151f4:	beq	152d0 <argp_failure@@Base+0xc04>
   151f8:	ldr	r3, [pc, #1476]	; 157c4 <argp_failure@@Base+0x10f8>
   151fc:	ldr	r4, [r3, #16]
   15200:	ldr	r3, [sl, #28]
   15204:	ldr	r2, [sl, #24]
   15208:	sub	r3, r3, r2
   1520c:	ldr	r2, [sl, #16]
   15210:	cmp	r3, r2
   15214:	bhi	15234 <argp_failure@@Base+0xb68>
   15218:	str	r4, [sl, #12]
   1521c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15220:	ldr	r5, [r3, #4]
   15224:	cmp	r5, #0
   15228:	beq	15384 <argp_failure@@Base+0xcb8>
   1522c:	add	r4, r8, #24
   15230:	b	15268 <argp_failure@@Base+0xb9c>
   15234:	mov	r0, sl
   15238:	bl	16f44 <argp_error@@Base+0x13fc>
   1523c:	b	15218 <argp_failure@@Base+0xb4c>
   15240:	mov	r2, r6
   15244:	mov	r1, r7
   15248:	ldr	r0, [sl, #28]
   1524c:	bl	10dc0 <memcpy@plt>
   15250:	ldr	r3, [sl, #28]
   15254:	add	r6, r3, r6
   15258:	str	r6, [sl, #28]
   1525c:	add	r4, r4, #24
   15260:	subs	r5, r5, #1
   15264:	beq	15384 <argp_failure@@Base+0xcb8>
   15268:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1526c:	cmp	r3, #0
   15270:	beq	1525c <argp_failure@@Base+0xb90>
   15274:	ldr	r3, [r4, #-12]
   15278:	tst	r3, #2
   1527c:	bne	1525c <argp_failure@@Base+0xb90>
   15280:	sub	r1, fp, #76	; 0x4c
   15284:	ldr	r3, [pc, #1336]	; 157c4 <argp_failure@@Base+0x10f8>
   15288:	ldr	r0, [r3, #16]
   1528c:	bl	13604 <argp_parse@@Base+0x1e40>
   15290:	ldr	r7, [r4, #-24]	; 0xffffffe8
   15294:	mov	r0, r7
   15298:	bl	10ea4 <strlen@plt>
   1529c:	subs	r6, r0, #0
   152a0:	beq	1525c <argp_failure@@Base+0xb90>
   152a4:	ldr	r3, [sl, #28]
   152a8:	add	r3, r3, r6
   152ac:	ldr	r2, [sl, #32]
   152b0:	cmp	r2, r3
   152b4:	bcs	15240 <argp_failure@@Base+0xb74>
   152b8:	mov	r1, r6
   152bc:	mov	r0, sl
   152c0:	bl	174e8 <argp_error@@Base+0x19a0>
   152c4:	cmp	r0, #0
   152c8:	beq	1525c <argp_failure@@Base+0xb90>
   152cc:	b	15240 <argp_failure@@Base+0xb74>
   152d0:	ldr	r3, [pc, #1260]	; 157c4 <argp_failure@@Base+0x10f8>
   152d4:	ldr	r4, [r3, #12]
   152d8:	ldr	r3, [sl, #28]
   152dc:	ldr	r2, [sl, #24]
   152e0:	sub	r3, r3, r2
   152e4:	ldr	r2, [sl, #16]
   152e8:	cmp	r3, r2
   152ec:	bhi	1530c <argp_failure@@Base+0xc40>
   152f0:	str	r4, [sl, #12]
   152f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   152f8:	ldr	r5, [r3, #4]
   152fc:	cmp	r5, #0
   15300:	beq	15384 <argp_failure@@Base+0xcb8>
   15304:	add	r4, r8, #24
   15308:	b	15324 <argp_failure@@Base+0xc58>
   1530c:	mov	r0, sl
   15310:	bl	16f44 <argp_error@@Base+0x13fc>
   15314:	b	152f0 <argp_failure@@Base+0xc24>
   15318:	add	r4, r4, #24
   1531c:	subs	r5, r5, #1
   15320:	beq	15384 <argp_failure@@Base+0xcb8>
   15324:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15328:	cmp	r3, #0
   1532c:	beq	15318 <argp_failure@@Base+0xc4c>
   15330:	ldr	r3, [r4, #-12]
   15334:	tst	r3, #2
   15338:	bne	15318 <argp_failure@@Base+0xc4c>
   1533c:	sub	r1, fp, #76	; 0x4c
   15340:	ldr	r3, [pc, #1148]	; 157c4 <argp_failure@@Base+0x10f8>
   15344:	ldr	r0, [r3, #12]
   15348:	bl	13604 <argp_parse@@Base+0x1e40>
   1534c:	ldr	r2, [r4, #-24]	; 0xffffffe8
   15350:	ldr	r1, [pc, #1116]	; 157b4 <argp_failure@@Base+0x10e8>
   15354:	mov	r0, sl
   15358:	bl	175d8 <argp_error@@Base+0x1a90>
   1535c:	ldr	r2, [r8, #8]
   15360:	cmp	r2, #0
   15364:	beq	15318 <argp_failure@@Base+0xc4c>
   15368:	ldr	r3, [r8, #12]
   1536c:	tst	r3, #1
   15370:	ldrne	r1, [pc, #1088]	; 157b8 <argp_failure@@Base+0x10ec>
   15374:	ldreq	r1, [pc, #1088]	; 157bc <argp_failure@@Base+0x10f0>
   15378:	mov	r0, sl
   1537c:	bl	175d8 <argp_error@@Base+0x1a90>
   15380:	b	15318 <argp_failure@@Base+0xc4c>
   15384:	ldr	r3, [sl, #28]
   15388:	ldr	r2, [sl, #24]
   1538c:	sub	r3, r3, r2
   15390:	ldr	r2, [sl, #16]
   15394:	cmp	r3, r2
   15398:	bhi	154d8 <argp_failure@@Base+0xe0c>
   1539c:	mov	r3, #0
   153a0:	str	r3, [sl, #4]
   153a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   153a8:	cmp	r3, #0
   153ac:	beq	154fc <argp_failure@@Base+0xe30>
   153b0:	ldr	r3, [r8, #12]
   153b4:	tst	r3, #8
   153b8:	bne	153e4 <argp_failure@@Base+0xd18>
   153bc:	ldr	r4, [r8, #4]
   153c0:	sub	r3, r4, #1
   153c4:	cmp	r3, #254	; 0xfe
   153c8:	bhi	153e4 <argp_failure@@Base+0xd18>
   153cc:	bl	10e8c <__ctype_b_loc@plt>
   153d0:	ldr	r3, [r0]
   153d4:	lsl	r4, r4, #1
   153d8:	ldrh	r3, [r3, r4]
   153dc:	tst	r3, #16384	; 0x4000
   153e0:	bne	153f0 <argp_failure@@Base+0xd24>
   153e4:	ldr	r3, [r8]
   153e8:	cmp	r3, #0
   153ec:	beq	154e4 <argp_failure@@Base+0xe18>
   153f0:	ldr	r3, [sl, #28]
   153f4:	ldr	r2, [sl, #24]
   153f8:	sub	r3, r3, r2
   153fc:	ldr	r2, [sl, #16]
   15400:	cmp	r3, r2
   15404:	bhi	15754 <argp_failure@@Base+0x1088>
   15408:	ldr	r3, [fp, #-124]	; 0xffffff84
   1540c:	str	r3, [sl, #4]
   15410:	ldr	r3, [sl, #28]
   15414:	ldr	r2, [sl, #24]
   15418:	sub	r3, r3, r2
   1541c:	ldr	r2, [sl, #16]
   15420:	cmp	r3, r2
   15424:	bhi	15760 <argp_failure@@Base+0x1094>
   15428:	ldr	r3, [fp, #-128]	; 0xffffff80
   1542c:	str	r3, [sl, #12]
   15430:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15434:	add	r3, r3, #28
   15438:	str	r3, [fp, #-96]	; 0xffffffa0
   1543c:	ldr	r3, [fp, #-120]	; 0xffffff88
   15440:	subs	r3, r3, #1
   15444:	str	r3, [fp, #-120]	; 0xffffff88
   15448:	beq	157d8 <argp_failure@@Base+0x110c>
   1544c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15450:	ldr	r8, [r3]
   15454:	ldr	r9, [r3, #8]
   15458:	ldr	r3, [sl, #28]
   1545c:	ldr	r2, [sl, #24]
   15460:	sub	r3, r3, r2
   15464:	ldr	r2, [sl, #16]
   15468:	cmp	r3, r2
   1546c:	bhi	1507c <argp_failure@@Base+0x9b0>
   15470:	ldr	r3, [sl, #4]
   15474:	str	r3, [fp, #-124]	; 0xffffff84
   15478:	mov	r3, #0
   1547c:	str	r3, [sl, #4]
   15480:	ldr	r3, [sl, #12]
   15484:	str	r3, [fp, #-128]	; 0xffffff80
   15488:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1548c:	str	r2, [fp, #-76]	; 0xffffffb4
   15490:	str	sl, [fp, #-72]	; 0xffffffb8
   15494:	sub	r3, fp, #88	; 0x58
   15498:	str	r3, [fp, #-68]	; 0xffffffbc
   1549c:	mov	r3, #1
   154a0:	str	r3, [fp, #-64]	; 0xffffffc0
   154a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154a8:	str	r3, [fp, #-60]	; 0xffffffc4
   154ac:	ldr	r3, [r8, #12]
   154b0:	ands	r3, r3, #8
   154b4:	str	r3, [fp, #-116]	; 0xffffff8c
   154b8:	movne	r3, #0
   154bc:	strne	r3, [fp, #-116]	; 0xffffff8c
   154c0:	bne	150b4 <argp_failure@@Base+0x9e8>
   154c4:	ldr	r2, [r2, #4]
   154c8:	cmp	r2, #0
   154cc:	beq	150b4 <argp_failure@@Base+0x9e8>
   154d0:	add	r3, r8, #24
   154d4:	b	15094 <argp_failure@@Base+0x9c8>
   154d8:	mov	r0, sl
   154dc:	bl	16f44 <argp_error@@Base+0x13fc>
   154e0:	b	1539c <argp_failure@@Base+0xcd0>
   154e4:	sub	r2, fp, #76	; 0x4c
   154e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154ec:	ldr	r1, [r3, #20]
   154f0:	ldr	r0, [r8, #16]
   154f4:	bl	13420 <argp_parse@@Base+0x1c5c>
   154f8:	b	15654 <argp_failure@@Base+0xf88>
   154fc:	ldr	r7, [r8, #16]
   15500:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15504:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15508:	ldr	r2, [r2, #20]
   1550c:	ldr	r1, [r8, #4]
   15510:	mov	r0, r7
   15514:	bl	131ec <argp_parse@@Base+0x1a28>
   15518:	subs	r4, r0, #0
   1551c:	beq	15610 <argp_failure@@Base+0xf44>
   15520:	ldrb	r3, [r4]
   15524:	cmp	r3, #0
   15528:	beq	15608 <argp_failure@@Base+0xf3c>
   1552c:	ldr	r3, [sl, #28]
   15530:	ldr	r2, [sl, #24]
   15534:	sub	r3, r3, r2
   15538:	ldr	r2, [sl, #16]
   1553c:	cmp	r3, r2
   15540:	bhi	15660 <argp_failure@@Base+0xf94>
   15544:	ldr	r5, [sl, #20]
   15548:	bic	r5, r5, r5, asr #31
   1554c:	ldr	r3, [pc, #624]	; 157c4 <argp_failure@@Base+0x10f8>
   15550:	ldr	r6, [r3, #20]
   15554:	str	r6, [sl, #4]
   15558:	ldr	r3, [pc, #612]	; 157c4 <argp_failure@@Base+0x10f8>
   1555c:	ldr	r6, [r3, #20]
   15560:	ldr	r3, [sl, #28]
   15564:	ldr	r2, [sl, #24]
   15568:	sub	r3, r3, r2
   1556c:	ldr	r2, [sl, #16]
   15570:	cmp	r3, r2
   15574:	bhi	1569c <argp_failure@@Base+0xfd0>
   15578:	str	r6, [sl, #12]
   1557c:	ldr	r3, [pc, #576]	; 157c4 <argp_failure@@Base+0x10f8>
   15580:	ldr	r1, [r3, #20]
   15584:	add	r3, r1, #3
   15588:	cmp	r3, r5
   1558c:	bcs	156c0 <argp_failure@@Base+0xff4>
   15590:	ldr	r2, [sl, #28]
   15594:	ldr	r3, [sl, #32]
   15598:	cmp	r2, r3
   1559c:	bcs	156a8 <argp_failure@@Base+0xfdc>
   155a0:	ldr	r3, [sl, #28]
   155a4:	add	r2, r3, #1
   155a8:	str	r2, [sl, #28]
   155ac:	mov	r2, #10
   155b0:	strb	r2, [r3]
   155b4:	mov	r0, r4
   155b8:	bl	10ea4 <strlen@plt>
   155bc:	subs	r5, r0, #0
   155c0:	beq	15608 <argp_failure@@Base+0xf3c>
   155c4:	ldr	r3, [sl, #28]
   155c8:	add	r3, r3, r5
   155cc:	ldr	r2, [sl, #32]
   155d0:	cmp	r2, r3
   155d4:	bcs	155ec <argp_failure@@Base+0xf20>
   155d8:	mov	r1, r5
   155dc:	mov	r0, sl
   155e0:	bl	174e8 <argp_error@@Base+0x19a0>
   155e4:	cmp	r0, #0
   155e8:	beq	15608 <argp_failure@@Base+0xf3c>
   155ec:	mov	r2, r5
   155f0:	mov	r1, r4
   155f4:	ldr	r0, [sl, #28]
   155f8:	bl	10dc0 <memcpy@plt>
   155fc:	ldr	r3, [sl, #28]
   15600:	add	r5, r3, r5
   15604:	str	r5, [sl, #28]
   15608:	cmp	r7, r4
   1560c:	bne	15724 <argp_failure@@Base+0x1058>
   15610:	ldr	r3, [sl, #28]
   15614:	ldr	r2, [sl, #24]
   15618:	sub	r3, r3, r2
   1561c:	ldr	r2, [sl, #16]
   15620:	cmp	r3, r2
   15624:	bhi	15730 <argp_failure@@Base+0x1064>
   15628:	mov	r3, #0
   1562c:	str	r3, [sl, #4]
   15630:	ldr	r2, [sl, #28]
   15634:	ldr	r3, [sl, #32]
   15638:	cmp	r2, r3
   1563c:	bcs	1573c <argp_failure@@Base+0x1070>
   15640:	ldr	r3, [sl, #28]
   15644:	add	r2, r3, #1
   15648:	str	r2, [sl, #28]
   1564c:	mov	r2, #10
   15650:	strb	r2, [r3]
   15654:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15658:	str	r3, [fp, #-88]	; 0xffffffa8
   1565c:	b	153f0 <argp_failure@@Base+0xd24>
   15660:	mov	r0, sl
   15664:	bl	16f44 <argp_error@@Base+0x13fc>
   15668:	ldr	r5, [sl, #20]
   1566c:	bic	r5, r5, r5, asr #31
   15670:	ldr	r3, [pc, #332]	; 157c4 <argp_failure@@Base+0x10f8>
   15674:	ldr	r6, [r3, #20]
   15678:	ldr	r3, [sl, #28]
   1567c:	ldr	r2, [sl, #24]
   15680:	sub	r3, r3, r2
   15684:	ldr	r2, [sl, #16]
   15688:	cmp	r3, r2
   1568c:	bls	15554 <argp_failure@@Base+0xe88>
   15690:	mov	r0, sl
   15694:	bl	16f44 <argp_error@@Base+0x13fc>
   15698:	b	15554 <argp_failure@@Base+0xe88>
   1569c:	mov	r0, sl
   156a0:	bl	16f44 <argp_error@@Base+0x13fc>
   156a4:	b	15578 <argp_failure@@Base+0xeac>
   156a8:	mov	r1, #1
   156ac:	mov	r0, sl
   156b0:	bl	174e8 <argp_error@@Base+0x19a0>
   156b4:	cmp	r0, #0
   156b8:	beq	155b4 <argp_failure@@Base+0xee8>
   156bc:	b	155a0 <argp_failure@@Base+0xed4>
   156c0:	cmp	r1, r5
   156c4:	bhi	15718 <argp_failure@@Base+0x104c>
   156c8:	ldr	r3, [sl, #28]
   156cc:	add	r3, r3, #3
   156d0:	ldr	r2, [sl, #32]
   156d4:	cmp	r2, r3
   156d8:	bcs	156f0 <argp_failure@@Base+0x1024>
   156dc:	mov	r1, #3
   156e0:	mov	r0, sl
   156e4:	bl	174e8 <argp_error@@Base+0x19a0>
   156e8:	cmp	r0, #0
   156ec:	beq	155b4 <argp_failure@@Base+0xee8>
   156f0:	ldr	r3, [sl, #28]
   156f4:	ldr	r2, [pc, #196]	; 157c0 <argp_failure@@Base+0x10f4>
   156f8:	ldrh	r1, [r2]
   156fc:	ldrb	r2, [r2, #2]
   15700:	strh	r1, [r3]
   15704:	strb	r2, [r3, #2]
   15708:	ldr	r3, [sl, #28]
   1570c:	add	r3, r3, #3
   15710:	str	r3, [sl, #28]
   15714:	b	155b4 <argp_failure@@Base+0xee8>
   15718:	mov	r0, sl
   1571c:	bl	13008 <argp_parse@@Base+0x1844>
   15720:	b	155b4 <argp_failure@@Base+0xee8>
   15724:	mov	r0, r4
   15728:	bl	123b8 <argp_parse@@Base+0xbf4>
   1572c:	b	15610 <argp_failure@@Base+0xf44>
   15730:	mov	r0, sl
   15734:	bl	16f44 <argp_error@@Base+0x13fc>
   15738:	b	15628 <argp_failure@@Base+0xf5c>
   1573c:	mov	r1, #1
   15740:	mov	r0, sl
   15744:	bl	174e8 <argp_error@@Base+0x19a0>
   15748:	cmp	r0, #0
   1574c:	beq	15654 <argp_failure@@Base+0xf88>
   15750:	b	15640 <argp_failure@@Base+0xf74>
   15754:	mov	r0, sl
   15758:	bl	16f44 <argp_error@@Base+0x13fc>
   1575c:	b	15408 <argp_failure@@Base+0xd3c>
   15760:	mov	r0, sl
   15764:	bl	16f44 <argp_error@@Base+0x13fc>
   15768:	b	15428 <argp_failure@@Base+0xd5c>
   1576c:	andeq	r8, r1, r8, lsl #9
   15770:			; <UNDEFINED> instruction: 0x000182b0
   15774:	muleq	r1, r8, r4
   15778:	andeq	r8, r1, r8, asr #9
   1577c:	strdeq	r8, [r1], -r0
   15780:	andeq	r8, r1, r8, asr #5
   15784:	andeq	r8, r1, r4, asr #10
   15788:	andeq	r8, r1, r0, lsl r5
   1578c:	andeq	r7, r1, r0, ror #28
   15790:	andeq	r7, r1, r0, asr #28
   15794:	andeq	r3, r1, r0, lsr #26
   15798:	andeq	r8, r1, r4, asr r5
   1579c:	andeq	r8, r1, ip, asr #10
   157a0:	andeq	r8, r1, ip, asr r5
   157a4:	andeq	r8, r1, r4, ror #10
   157a8:	andeq	r8, r1, r4, ror r5
   157ac:	andeq	r8, r1, ip, lsr #11
   157b0:	andeq	r7, r1, r0, lsl lr
   157b4:			; <UNDEFINED> instruction: 0x000185b4
   157b8:			; <UNDEFINED> instruction: 0x000185bc
   157bc:	andeq	r8, r1, r4, asr #11
   157c0:	andeq	r8, r1, r8, asr #11
   157c4:	andeq	r9, r2, r0, lsl #2
   157c8:	andeq	r0, r0, #5
   157cc:	andeq	r8, r1, ip, asr #11
   157d0:	andeq	r9, r2, ip, lsl #3
   157d4:	andeq	r8, r1, r0, asr #12
   157d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   157dc:	cmp	r3, #0
   157e0:	beq	158d0 <argp_failure@@Base+0x1204>
   157e4:	ldr	r3, [pc, #-40]	; 157c4 <argp_failure@@Base+0x10f8>
   157e8:	ldr	r3, [r3, #4]
   157ec:	cmp	r3, #0
   157f0:	beq	158d0 <argp_failure@@Base+0x1204>
   157f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   157f8:	cmp	r3, #0
   157fc:	ldrne	r2, [r3]
   15800:	moveq	r2, #0
   15804:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15808:	ldr	r1, [pc, #-72]	; 157c8 <argp_failure@@Base+0x10fc>
   1580c:	ldr	r0, [pc, #-72]	; 157cc <argp_failure@@Base+0x1100>
   15810:	bl	131ec <argp_parse@@Base+0x1a28>
   15814:	subs	r4, r0, #0
   15818:	beq	158d0 <argp_failure@@Base+0x1204>
   1581c:	ldrb	r3, [r4]
   15820:	cmp	r3, #0
   15824:	beq	158c4 <argp_failure@@Base+0x11f8>
   15828:	ldr	r2, [sl, #28]
   1582c:	ldr	r3, [sl, #32]
   15830:	cmp	r2, r3
   15834:	bcs	15968 <argp_failure@@Base+0x129c>
   15838:	ldr	r3, [sl, #28]
   1583c:	add	r2, r3, #1
   15840:	str	r2, [sl, #28]
   15844:	mov	r2, #10
   15848:	strb	r2, [r3]
   1584c:	mov	r0, r4
   15850:	bl	10ea4 <strlen@plt>
   15854:	subs	r5, r0, #0
   15858:	beq	158a0 <argp_failure@@Base+0x11d4>
   1585c:	ldr	r3, [sl, #28]
   15860:	add	r3, r3, r5
   15864:	ldr	r2, [sl, #32]
   15868:	cmp	r2, r3
   1586c:	bcs	15884 <argp_failure@@Base+0x11b8>
   15870:	mov	r1, r5
   15874:	mov	r0, sl
   15878:	bl	174e8 <argp_error@@Base+0x19a0>
   1587c:	cmp	r0, #0
   15880:	beq	158a0 <argp_failure@@Base+0x11d4>
   15884:	mov	r2, r5
   15888:	mov	r1, r4
   1588c:	ldr	r0, [sl, #28]
   15890:	bl	10dc0 <memcpy@plt>
   15894:	ldr	r3, [sl, #28]
   15898:	add	r5, r3, r5
   1589c:	str	r5, [sl, #28]
   158a0:	ldr	r2, [sl, #28]
   158a4:	ldr	r3, [sl, #32]
   158a8:	cmp	r2, r3
   158ac:	bcs	15980 <argp_failure@@Base+0x12b4>
   158b0:	ldr	r3, [sl, #28]
   158b4:	add	r2, r3, #1
   158b8:	str	r2, [sl, #28]
   158bc:	mov	r2, #10
   158c0:	strb	r2, [r3]
   158c4:	ldr	r3, [pc, #-256]	; 157cc <argp_failure@@Base+0x1100>
   158c8:	cmp	r4, r3
   158cc:	bne	15998 <argp_failure@@Base+0x12cc>
   158d0:	mov	r4, #1
   158d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   158d8:	tst	r3, #32
   158dc:	bne	159a4 <argp_failure@@Base+0x12d8>
   158e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   158e4:	tst	r3, #64	; 0x40
   158e8:	beq	1593c <argp_failure@@Base+0x1270>
   158ec:	ldr	r3, [pc, #-292]	; 157d0 <argp_failure@@Base+0x1104>
   158f0:	ldr	r3, [r3]
   158f4:	cmp	r3, #0
   158f8:	beq	1593c <argp_failure@@Base+0x1270>
   158fc:	cmp	r4, #0
   15900:	beq	15928 <argp_failure@@Base+0x125c>
   15904:	ldr	r2, [sl, #28]
   15908:	ldr	r3, [sl, #32]
   1590c:	cmp	r2, r3
   15910:	bcs	159cc <argp_failure@@Base+0x1300>
   15914:	ldr	r3, [sl, #28]
   15918:	add	r2, r3, #1
   1591c:	str	r2, [sl, #28]
   15920:	mov	r2, #10
   15924:	strb	r2, [r3]
   15928:	ldr	r3, [pc, #-352]	; 157d0 <argp_failure@@Base+0x1104>
   1592c:	ldr	r2, [r3]
   15930:	ldr	r1, [pc, #-356]	; 157d4 <argp_failure@@Base+0x1108>
   15934:	mov	r0, sl
   15938:	bl	175d8 <argp_error@@Base+0x1a90>
   1593c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15940:	bl	10dfc <funlockfile@plt>
   15944:	ldr	r3, [fp, #-108]	; 0xffffff94
   15948:	cmp	r3, #0
   1594c:	beq	15958 <argp_failure@@Base+0x128c>
   15950:	mov	r0, r3
   15954:	bl	12ec4 <argp_parse@@Base+0x1700>
   15958:	mov	r0, sl
   1595c:	bl	174a8 <argp_error@@Base+0x1960>
   15960:	sub	sp, fp, #32
   15964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15968:	mov	r1, #1
   1596c:	mov	r0, sl
   15970:	bl	174e8 <argp_error@@Base+0x19a0>
   15974:	cmp	r0, #0
   15978:	beq	1584c <argp_failure@@Base+0x1180>
   1597c:	b	15838 <argp_failure@@Base+0x116c>
   15980:	mov	r1, #1
   15984:	mov	r0, sl
   15988:	bl	174e8 <argp_error@@Base+0x19a0>
   1598c:	cmp	r0, #0
   15990:	beq	158c4 <argp_failure@@Base+0x11f8>
   15994:	b	158b0 <argp_failure@@Base+0x11e4>
   15998:	mov	r0, r4
   1599c:	bl	123b8 <argp_parse@@Base+0xbf4>
   159a0:	b	158d0 <argp_failure@@Base+0x1204>
   159a4:	str	sl, [sp, #4]
   159a8:	mov	r3, #0
   159ac:	str	r3, [sp]
   159b0:	mov	r3, r4
   159b4:	mov	r2, #1
   159b8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   159bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   159c0:	bl	13788 <argp_parse@@Base+0x1fc4>
   159c4:	orr	r4, r4, r0
   159c8:	b	158e0 <argp_failure@@Base+0x1214>
   159cc:	mov	r1, #1
   159d0:	mov	r0, sl
   159d4:	bl	174e8 <argp_error@@Base+0x19a0>
   159d8:	cmp	r0, #0
   159dc:	beq	15928 <argp_failure@@Base+0x125c>
   159e0:	b	15914 <argp_failure@@Base+0x1248>
   159e4:	ldrb	r3, [r5]
   159e8:	mov	r4, r5
   159ec:	mov	r5, #0
   159f0:	b	14ac4 <argp_failure@@Base+0x3f8>
   159f4:	mov	r4, r2
   159f8:	b	14ad8 <argp_failure@@Base+0x40c>
   159fc:	cmp	r0, #110	; 0x6e
   15a00:	beq	14b30 <argp_failure@@Base+0x464>
   15a04:	mov	r3, #1
   15a08:	str	r3, [fp, #-96]	; 0xffffffa0
   15a0c:	str	r3, [fp, #-116]	; 0xffffff8c
   15a10:	add	r6, sl, #24
   15a14:	b	14c28 <argp_failure@@Base+0x55c>
   15a18:	ldrb	r3, [r9]
   15a1c:	cmp	r7, r3
   15a20:	beq	150fc <argp_failure@@Base+0xa30>
   15a24:	add	r4, r4, #24
   15a28:	subs	r5, r5, #1
   15a2c:	beq	151ec <argp_failure@@Base+0xb20>
   15a30:	ldr	r6, [r4, #12]
   15a34:	tst	r6, #8
   15a38:	bne	15a24 <argp_failure@@Base+0x1358>
   15a3c:	ldr	r7, [r4, #4]
   15a40:	sub	r3, r7, #1
   15a44:	cmp	r3, #254	; 0xfe
   15a48:	bhi	15a24 <argp_failure@@Base+0x1358>
   15a4c:	bl	10e8c <__ctype_b_loc@plt>
   15a50:	ldr	r2, [r0]
   15a54:	lsl	r3, r7, #1
   15a58:	ldrh	r3, [r2, r3]
   15a5c:	tst	r3, #16384	; 0x4000
   15a60:	bne	15a18 <argp_failure@@Base+0x134c>
   15a64:	b	15a24 <argp_failure@@Base+0x1358>

00015a68 <argp_help@@Base>:
   15a68:	push	{lr}		; (str lr, [sp, #-4]!)
   15a6c:	sub	sp, sp, #12
   15a70:	str	r3, [sp]
   15a74:	mov	r3, r2
   15a78:	mov	r2, r1
   15a7c:	mov	r1, #0
   15a80:	bl	148d4 <argp_failure@@Base+0x208>
   15a84:	add	sp, sp, #12
   15a88:	pop	{pc}		; (ldr pc, [sp], #4)

00015a8c <argp_state_help@@Base>:
   15a8c:	push	{r4, r5, lr}
   15a90:	sub	sp, sp, #12
   15a94:	mov	r5, r2
   15a98:	subs	r4, r0, #0
   15a9c:	beq	15b00 <argp_state_help@@Base+0x74>
   15aa0:	ldr	r3, [r4, #16]
   15aa4:	tst	r3, #2
   15aa8:	bne	15af8 <argp_state_help@@Base+0x6c>
   15aac:	cmp	r1, #0
   15ab0:	beq	15af8 <argp_state_help@@Base+0x6c>
   15ab4:	ldr	r3, [r4, #16]
   15ab8:	tst	r3, #64	; 0x40
   15abc:	orrne	r5, r5, #128	; 0x80
   15ac0:	ldr	r0, [r4]
   15ac4:	ldr	r3, [r4, #40]	; 0x28
   15ac8:	str	r3, [sp]
   15acc:	mov	r3, r5
   15ad0:	mov	r2, r1
   15ad4:	mov	r1, r4
   15ad8:	bl	148d4 <argp_failure@@Base+0x208>
   15adc:	ldr	r3, [r4, #16]
   15ae0:	tst	r3, #32
   15ae4:	bne	15af8 <argp_state_help@@Base+0x6c>
   15ae8:	tst	r5, #256	; 0x100
   15aec:	bne	15b2c <argp_state_help@@Base+0xa0>
   15af0:	tst	r5, #512	; 0x200
   15af4:	bne	15b38 <argp_state_help@@Base+0xac>
   15af8:	add	sp, sp, #12
   15afc:	pop	{r4, r5, pc}
   15b00:	cmp	r1, #0
   15b04:	beq	15af8 <argp_state_help@@Base+0x6c>
   15b08:	ldr	r3, [pc, #48]	; 15b40 <argp_state_help@@Base+0xb4>
   15b0c:	ldr	r3, [r3]
   15b10:	str	r3, [sp]
   15b14:	mov	r3, r2
   15b18:	mov	r2, r1
   15b1c:	mov	r1, #0
   15b20:	mov	r0, r1
   15b24:	bl	148d4 <argp_failure@@Base+0x208>
   15b28:	b	15ae8 <argp_state_help@@Base+0x5c>
   15b2c:	ldr	r3, [pc, #16]	; 15b44 <argp_state_help@@Base+0xb8>
   15b30:	ldr	r0, [r3]
   15b34:	bl	10e98 <exit@plt>
   15b38:	mov	r0, #0
   15b3c:	bl	10e98 <exit@plt>
   15b40:	andeq	r9, r2, r0, asr #2
   15b44:	andeq	r9, r2, r4, lsr r1

00015b48 <argp_error@@Base>:
   15b48:	push	{r1, r2, r3}
   15b4c:	push	{r4, r5, lr}
   15b50:	sub	sp, sp, #8
   15b54:	subs	r5, r0, #0
   15b58:	beq	15c28 <argp_error@@Base+0xe0>
   15b5c:	ldr	r3, [r5, #16]
   15b60:	tst	r3, #2
   15b64:	bne	15c18 <argp_error@@Base+0xd0>
   15b68:	ldr	r4, [r5, #44]	; 0x2c
   15b6c:	cmp	r4, #0
   15b70:	beq	15c18 <argp_error@@Base+0xd0>
   15b74:	mov	r0, r4
   15b78:	bl	10f28 <flockfile@plt>
   15b7c:	add	r3, sp, #24
   15b80:	str	r3, [sp, #4]
   15b84:	ldr	r0, [r5, #40]	; 0x28
   15b88:	mov	r1, r4
   15b8c:	bl	10d48 <fputs_unlocked@plt>
   15b90:	ldr	r3, [r4, #20]
   15b94:	ldr	r2, [r4, #24]
   15b98:	cmp	r3, r2
   15b9c:	addcc	r2, r3, #1
   15ba0:	strcc	r2, [r4, #20]
   15ba4:	movcc	r2, #58	; 0x3a
   15ba8:	strbcc	r2, [r3]
   15bac:	bcs	15c54 <argp_error@@Base+0x10c>
   15bb0:	ldr	r3, [r4, #20]
   15bb4:	ldr	r2, [r4, #24]
   15bb8:	cmp	r3, r2
   15bbc:	addcc	r2, r3, #1
   15bc0:	strcc	r2, [r4, #20]
   15bc4:	movcc	r2, #32
   15bc8:	strbcc	r2, [r3]
   15bcc:	bcs	15c64 <argp_error@@Base+0x11c>
   15bd0:	ldr	r2, [sp, #4]
   15bd4:	ldr	r1, [sp, #20]
   15bd8:	mov	r0, r4
   15bdc:	bl	10f10 <vfprintf@plt>
   15be0:	ldr	r3, [r4, #20]
   15be4:	ldr	r2, [r4, #24]
   15be8:	cmp	r3, r2
   15bec:	addcc	r2, r3, #1
   15bf0:	strcc	r2, [r4, #20]
   15bf4:	movcc	r2, #10
   15bf8:	strbcc	r2, [r3]
   15bfc:	bcs	15c74 <argp_error@@Base+0x12c>
   15c00:	mov	r2, #260	; 0x104
   15c04:	mov	r1, r4
   15c08:	mov	r0, r5
   15c0c:	bl	15a8c <argp_state_help@@Base>
   15c10:	mov	r0, r4
   15c14:	bl	10dfc <funlockfile@plt>
   15c18:	add	sp, sp, #8
   15c1c:	pop	{r4, r5, lr}
   15c20:	add	sp, sp, #12
   15c24:	bx	lr
   15c28:	ldr	r3, [pc, #84]	; 15c84 <argp_error@@Base+0x13c>
   15c2c:	ldr	r4, [r3]
   15c30:	cmp	r4, #0
   15c34:	beq	15c18 <argp_error@@Base+0xd0>
   15c38:	mov	r0, r4
   15c3c:	bl	10f28 <flockfile@plt>
   15c40:	add	r3, sp, #24
   15c44:	str	r3, [sp, #4]
   15c48:	ldr	r3, [pc, #56]	; 15c88 <argp_error@@Base+0x140>
   15c4c:	ldr	r0, [r3]
   15c50:	b	15b88 <argp_error@@Base+0x40>
   15c54:	mov	r1, #58	; 0x3a
   15c58:	mov	r0, r4
   15c5c:	bl	10ef8 <__overflow@plt>
   15c60:	b	15bb0 <argp_error@@Base+0x68>
   15c64:	mov	r1, #32
   15c68:	mov	r0, r4
   15c6c:	bl	10ef8 <__overflow@plt>
   15c70:	b	15bd0 <argp_error@@Base+0x88>
   15c74:	mov	r1, #10
   15c78:	mov	r0, r4
   15c7c:	bl	10ef8 <__overflow@plt>
   15c80:	b	15c00 <argp_error@@Base+0xb8>
   15c84:	andeq	r9, r2, r8, asr #2
   15c88:	andeq	r9, r2, r0, asr #2
   15c8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15c90:	ldr	r4, [r1, #28]
   15c94:	ldr	r5, [r1, #32]
   15c98:	ldr	r6, [r1]
   15c9c:	add	r7, r0, r5, lsl #2
   15ca0:	b	15cd8 <argp_error@@Base+0x190>
   15ca4:	cmp	sl, #0
   15ca8:	ble	15cd4 <argp_error@@Base+0x18c>
   15cac:	add	r2, r0, r4, lsl #2
   15cb0:	sub	r3, r6, sl
   15cb4:	add	r3, r0, r3, lsl #2
   15cb8:	add	r8, r0, r6, lsl #2
   15cbc:	ldr	ip, [r2]
   15cc0:	ldr	lr, [r3]
   15cc4:	str	lr, [r2], #4
   15cc8:	str	ip, [r3], #4
   15ccc:	cmp	r3, r8
   15cd0:	bne	15cbc <argp_error@@Base+0x174>
   15cd4:	sub	r6, r6, sl
   15cd8:	cmp	r6, r5
   15cdc:	movle	r3, #0
   15ce0:	movgt	r3, #1
   15ce4:	cmp	r4, r5
   15ce8:	movge	r3, #0
   15cec:	cmp	r3, #0
   15cf0:	beq	15d3c <argp_error@@Base+0x1f4>
   15cf4:	sub	r9, r6, r5
   15cf8:	sub	sl, r5, r4
   15cfc:	cmp	r9, sl
   15d00:	bgt	15ca4 <argp_error@@Base+0x15c>
   15d04:	cmp	r9, #0
   15d08:	addgt	r3, r0, r4, lsl #2
   15d0c:	addgt	r8, r9, r4
   15d10:	addgt	r8, r0, r8, lsl #2
   15d14:	movgt	r2, r7
   15d18:	ble	15d34 <argp_error@@Base+0x1ec>
   15d1c:	ldr	ip, [r3]
   15d20:	ldr	lr, [r2]
   15d24:	str	lr, [r3], #4
   15d28:	str	ip, [r2], #4
   15d2c:	cmp	r3, r8
   15d30:	bne	15d1c <argp_error@@Base+0x1d4>
   15d34:	add	r4, r4, r9
   15d38:	b	15cd8 <argp_error@@Base+0x190>
   15d3c:	ldr	r0, [r1]
   15d40:	ldr	r3, [r1, #32]
   15d44:	sub	r2, r0, r3
   15d48:	ldr	r3, [r1, #28]
   15d4c:	add	r3, r3, r2
   15d50:	str	r3, [r1, #28]
   15d54:	str	r0, [r1, #32]
   15d58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d60:	sub	sp, sp, #44	; 0x2c
   15d64:	str	r0, [sp, #20]
   15d68:	str	r1, [sp, #12]
   15d6c:	str	r2, [sp, #24]
   15d70:	str	r3, [sp, #8]
   15d74:	ldr	fp, [sp, #88]	; 0x58
   15d78:	ldr	sl, [fp, #20]
   15d7c:	ldrb	r3, [sl]
   15d80:	cmp	r3, #0
   15d84:	cmpne	r3, #61	; 0x3d
   15d88:	beq	15dc4 <argp_error@@Base+0x27c>
   15d8c:	mov	r8, sl
   15d90:	ldrb	r3, [r8, #1]!
   15d94:	cmp	r3, #0
   15d98:	cmpne	r3, #61	; 0x3d
   15d9c:	bne	15d90 <argp_error@@Base+0x248>
   15da0:	sub	r7, r8, sl
   15da4:	ldr	r5, [sp, #8]
   15da8:	ldr	r3, [r5]
   15dac:	str	r3, [sp, #16]
   15db0:	cmp	r3, #0
   15db4:	beq	160b8 <argp_error@@Base+0x570>
   15db8:	mov	r4, r3
   15dbc:	mov	r6, #0
   15dc0:	b	15ddc <argp_error@@Base+0x294>
   15dc4:	mov	r8, sl
   15dc8:	b	15da0 <argp_error@@Base+0x258>
   15dcc:	add	r6, r6, #1
   15dd0:	ldr	r4, [r5, #16]!
   15dd4:	cmp	r4, #0
   15dd8:	beq	15e14 <argp_error@@Base+0x2cc>
   15ddc:	mov	r9, r5
   15de0:	mov	r2, r7
   15de4:	mov	r1, sl
   15de8:	mov	r0, r4
   15dec:	bl	10f64 <strncmp@plt>
   15df0:	cmp	r0, #0
   15df4:	bne	15dcc <argp_error@@Base+0x284>
   15df8:	mov	r0, r4
   15dfc:	bl	10ea4 <strlen@plt>
   15e00:	cmp	r7, r0
   15e04:	bne	15dcc <argp_error@@Base+0x284>
   15e08:	cmp	r5, #0
   15e0c:	strne	r6, [sp, #28]
   15e10:	bne	16068 <argp_error@@Base+0x520>
   15e14:	ldr	r4, [sp, #8]
   15e18:	mvn	r3, #0
   15e1c:	str	r3, [sp, #28]
   15e20:	mov	sl, #0
   15e24:	str	sl, [sp, #36]	; 0x24
   15e28:	mov	r5, sl
   15e2c:	mov	r9, sl
   15e30:	str	r8, [sp, #32]
   15e34:	mov	r8, sl
   15e38:	ldr	r0, [sp, #16]
   15e3c:	b	15e8c <argp_error@@Base+0x344>
   15e40:	ldr	r2, [r9, #8]
   15e44:	ldr	r3, [r4, #8]
   15e48:	cmp	r2, r3
   15e4c:	bne	15ec4 <argp_error@@Base+0x37c>
   15e50:	ldr	r2, [r9, #12]
   15e54:	ldr	r3, [r4, #12]
   15e58:	cmp	r2, r3
   15e5c:	bne	15ec4 <argp_error@@Base+0x37c>
   15e60:	b	15e7c <argp_error@@Base+0x334>
   15e64:	cmp	r8, #0
   15e68:	moveq	sl, #1
   15e6c:	beq	15e7c <argp_error@@Base+0x334>
   15e70:	mov	sl, #1
   15e74:	mov	r3, #1
   15e78:	strb	r3, [r8, r5]
   15e7c:	add	r5, r5, #1
   15e80:	ldr	r0, [r4, #16]!
   15e84:	cmp	r0, #0
   15e88:	beq	15f2c <argp_error@@Base+0x3e4>
   15e8c:	mov	r2, r7
   15e90:	ldr	r1, [fp, #20]
   15e94:	bl	10f64 <strncmp@plt>
   15e98:	cmp	r0, #0
   15e9c:	bne	15e7c <argp_error@@Base+0x334>
   15ea0:	cmp	r9, #0
   15ea4:	beq	15f18 <argp_error@@Base+0x3d0>
   15ea8:	ldr	r3, [sp, #84]	; 0x54
   15eac:	cmp	r3, #0
   15eb0:	bne	15ec4 <argp_error@@Base+0x37c>
   15eb4:	ldr	r2, [r9, #4]
   15eb8:	ldr	r3, [r4, #4]
   15ebc:	cmp	r2, r3
   15ec0:	beq	15e40 <argp_error@@Base+0x2f8>
   15ec4:	cmp	sl, #0
   15ec8:	bne	15e7c <argp_error@@Base+0x334>
   15ecc:	ldr	r3, [sp, #92]	; 0x5c
   15ed0:	cmp	r3, #0
   15ed4:	beq	15e64 <argp_error@@Base+0x31c>
   15ed8:	cmp	r8, #0
   15edc:	bne	15e74 <argp_error@@Base+0x32c>
   15ee0:	mov	r0, r6
   15ee4:	bl	12a98 <argp_parse@@Base+0x12d4>
   15ee8:	subs	r8, r0, #0
   15eec:	beq	15f24 <argp_error@@Base+0x3dc>
   15ef0:	mov	r2, r6
   15ef4:	mov	r1, #0
   15ef8:	mov	r0, r8
   15efc:	bl	10ee0 <memset@plt>
   15f00:	ldr	r3, [sp, #28]
   15f04:	mov	r2, #1
   15f08:	strb	r2, [r8, r3]
   15f0c:	mov	r3, #1
   15f10:	str	r3, [sp, #36]	; 0x24
   15f14:	b	15e74 <argp_error@@Base+0x32c>
   15f18:	str	r5, [sp, #28]
   15f1c:	mov	r9, r4
   15f20:	b	15e7c <argp_error@@Base+0x334>
   15f24:	mov	sl, #1
   15f28:	b	15e7c <argp_error@@Base+0x334>
   15f2c:	mov	r3, r8
   15f30:	str	r8, [sp, #16]
   15f34:	ldr	r8, [sp, #32]
   15f38:	cmp	sl, #0
   15f3c:	cmpeq	r3, #0
   15f40:	beq	16060 <argp_error@@Base+0x518>
   15f44:	ldr	r3, [sp, #92]	; 0x5c
   15f48:	cmp	r3, #0
   15f4c:	beq	15f7c <argp_error@@Base+0x434>
   15f50:	cmp	sl, #0
   15f54:	beq	15fb8 <argp_error@@Base+0x470>
   15f58:	ldr	r3, [sp, #12]
   15f5c:	ldr	r2, [r3]
   15f60:	ldr	r3, [pc, #708]	; 1622c <argp_error@@Base+0x6e4>
   15f64:	ldr	r0, [r3]
   15f68:	ldr	r3, [fp, #20]
   15f6c:	str	r3, [sp]
   15f70:	ldr	r3, [sp, #96]	; 0x60
   15f74:	ldr	r1, [pc, #692]	; 16230 <argp_error@@Base+0x6e8>
   15f78:	bl	10ebc <fprintf@plt>
   15f7c:	ldr	r3, [sp, #36]	; 0x24
   15f80:	cmp	r3, #0
   15f84:	bne	16054 <argp_error@@Base+0x50c>
   15f88:	ldr	r4, [fp, #20]
   15f8c:	mov	r0, r4
   15f90:	bl	10ea4 <strlen@plt>
   15f94:	add	r0, r4, r0
   15f98:	str	r0, [fp, #20]
   15f9c:	ldr	r3, [fp]
   15fa0:	add	r3, r3, #1
   15fa4:	str	r3, [fp]
   15fa8:	mov	r3, #0
   15fac:	str	r3, [fp, #8]
   15fb0:	mov	r0, #63	; 0x3f
   15fb4:	b	161ac <argp_error@@Base+0x664>
   15fb8:	ldr	r4, [pc, #620]	; 1622c <argp_error@@Base+0x6e4>
   15fbc:	ldr	r0, [r4]
   15fc0:	bl	10f28 <flockfile@plt>
   15fc4:	ldr	r3, [sp, #12]
   15fc8:	ldr	r2, [r3]
   15fcc:	ldr	r0, [r4]
   15fd0:	ldr	r3, [fp, #20]
   15fd4:	str	r3, [sp]
   15fd8:	ldr	r3, [sp, #96]	; 0x60
   15fdc:	ldr	r1, [pc, #592]	; 16234 <argp_error@@Base+0x6ec>
   15fe0:	bl	10ebc <fprintf@plt>
   15fe4:	cmp	r6, #0
   15fe8:	ble	16038 <argp_error@@Base+0x4f0>
   15fec:	ldr	r3, [sp, #16]
   15ff0:	mov	r4, r3
   15ff4:	add	r6, r3, r6
   15ff8:	ldr	r7, [pc, #568]	; 16238 <argp_error@@Base+0x6f0>
   15ffc:	ldr	r5, [pc, #552]	; 1622c <argp_error@@Base+0x6e4>
   16000:	ldr	r8, [sp, #8]
   16004:	b	16014 <argp_error@@Base+0x4cc>
   16008:	add	sl, sl, #1
   1600c:	cmp	r4, r6
   16010:	beq	16038 <argp_error@@Base+0x4f0>
   16014:	ldrb	r3, [r4], #1
   16018:	cmp	r3, #0
   1601c:	beq	16008 <argp_error@@Base+0x4c0>
   16020:	ldr	r3, [r8, sl, lsl #4]
   16024:	ldr	r2, [sp, #96]	; 0x60
   16028:	mov	r1, r7
   1602c:	ldr	r0, [r5]
   16030:	bl	10ebc <fprintf@plt>
   16034:	b	16008 <argp_error@@Base+0x4c0>
   16038:	ldr	r4, [pc, #492]	; 1622c <argp_error@@Base+0x6e4>
   1603c:	ldr	r1, [r4]
   16040:	mov	r0, #10
   16044:	bl	10f1c <fputc@plt>
   16048:	ldr	r0, [r4]
   1604c:	bl	10dfc <funlockfile@plt>
   16050:	b	15f7c <argp_error@@Base+0x434>
   16054:	ldr	r0, [sp, #16]
   16058:	bl	123b8 <argp_parse@@Base+0xbf4>
   1605c:	b	15f88 <argp_error@@Base+0x440>
   16060:	cmp	r9, #0
   16064:	beq	160b8 <argp_error@@Base+0x570>
   16068:	ldr	r2, [fp]
   1606c:	add	r3, r2, #1
   16070:	str	r3, [fp]
   16074:	mov	r1, #0
   16078:	str	r1, [fp, #20]
   1607c:	ldrb	r1, [r8]
   16080:	cmp	r1, #0
   16084:	beq	16178 <argp_error@@Base+0x630>
   16088:	ldr	r3, [r9, #4]
   1608c:	cmp	r3, #0
   16090:	addne	r8, r8, #1
   16094:	strne	r8, [fp, #12]
   16098:	bne	16184 <argp_error@@Base+0x63c>
   1609c:	ldr	r3, [sp, #92]	; 0x5c
   160a0:	cmp	r3, #0
   160a4:	bne	16150 <argp_error@@Base+0x608>
   160a8:	ldr	r3, [r9, #12]
   160ac:	str	r3, [fp, #8]
   160b0:	mov	r0, #63	; 0x3f
   160b4:	b	161ac <argp_error@@Base+0x664>
   160b8:	ldr	r3, [sp, #84]	; 0x54
   160bc:	cmp	r3, #0
   160c0:	bne	160f0 <argp_error@@Base+0x5a8>
   160c4:	ldr	r3, [sp, #92]	; 0x5c
   160c8:	cmp	r3, #0
   160cc:	bne	16128 <argp_error@@Base+0x5e0>
   160d0:	mov	r2, #0
   160d4:	str	r2, [fp, #20]
   160d8:	ldr	r3, [fp]
   160dc:	add	r3, r3, #1
   160e0:	str	r3, [fp]
   160e4:	str	r2, [fp, #8]
   160e8:	mov	r0, #63	; 0x3f
   160ec:	b	161ac <argp_error@@Base+0x664>
   160f0:	ldr	r3, [fp]
   160f4:	ldr	r2, [sp, #12]
   160f8:	ldr	r3, [r2, r3, lsl #2]
   160fc:	ldrb	r3, [r3, #1]
   16100:	cmp	r3, #45	; 0x2d
   16104:	beq	160c4 <argp_error@@Base+0x57c>
   16108:	ldr	r3, [fp, #20]
   1610c:	ldrb	r1, [r3]
   16110:	ldr	r0, [sp, #24]
   16114:	bl	10eb0 <strchr@plt>
   16118:	cmp	r0, #0
   1611c:	beq	160c4 <argp_error@@Base+0x57c>
   16120:	mvn	r0, #0
   16124:	b	161ac <argp_error@@Base+0x664>
   16128:	ldr	r3, [sp, #12]
   1612c:	ldr	r2, [r3]
   16130:	ldr	r3, [pc, #244]	; 1622c <argp_error@@Base+0x6e4>
   16134:	ldr	r0, [r3]
   16138:	ldr	r3, [fp, #20]
   1613c:	str	r3, [sp]
   16140:	ldr	r3, [sp, #96]	; 0x60
   16144:	ldr	r1, [pc, #240]	; 1623c <argp_error@@Base+0x6f4>
   16148:	bl	10ebc <fprintf@plt>
   1614c:	b	160d0 <argp_error@@Base+0x588>
   16150:	ldr	r3, [sp, #12]
   16154:	ldr	r2, [r3]
   16158:	ldr	r3, [pc, #204]	; 1622c <argp_error@@Base+0x6e4>
   1615c:	ldr	r0, [r3]
   16160:	ldr	r3, [r9]
   16164:	str	r3, [sp]
   16168:	ldr	r3, [sp, #96]	; 0x60
   1616c:	ldr	r1, [pc, #204]	; 16240 <argp_error@@Base+0x6f8>
   16170:	bl	10ebc <fprintf@plt>
   16174:	b	160a8 <argp_error@@Base+0x560>
   16178:	ldr	r1, [r9, #4]
   1617c:	cmp	r1, #1
   16180:	beq	161b4 <argp_error@@Base+0x66c>
   16184:	ldr	r3, [sp, #80]	; 0x50
   16188:	cmp	r3, #0
   1618c:	ldrne	r2, [sp, #28]
   16190:	strne	r2, [r3]
   16194:	ldr	r3, [r9, #8]
   16198:	cmp	r3, #0
   1619c:	ldrne	r2, [r9, #12]
   161a0:	strne	r2, [r3]
   161a4:	movne	r0, #0
   161a8:	ldreq	r0, [r9, #12]
   161ac:	add	sp, sp, #44	; 0x2c
   161b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161b4:	ldr	r1, [sp, #20]
   161b8:	cmp	r3, r1
   161bc:	bge	161d8 <argp_error@@Base+0x690>
   161c0:	add	r2, r2, #2
   161c4:	str	r2, [fp]
   161c8:	ldr	r2, [sp, #12]
   161cc:	ldr	r3, [r2, r3, lsl #2]
   161d0:	str	r3, [fp, #12]
   161d4:	b	16184 <argp_error@@Base+0x63c>
   161d8:	ldr	r3, [sp, #92]	; 0x5c
   161dc:	cmp	r3, #0
   161e0:	bne	16204 <argp_error@@Base+0x6bc>
   161e4:	ldr	r3, [r9, #12]
   161e8:	str	r3, [fp, #8]
   161ec:	ldr	r3, [sp, #24]
   161f0:	ldrb	r0, [r3]
   161f4:	cmp	r0, #58	; 0x3a
   161f8:	moveq	r0, #58	; 0x3a
   161fc:	movne	r0, #63	; 0x3f
   16200:	b	161ac <argp_error@@Base+0x664>
   16204:	ldr	r3, [sp, #12]
   16208:	ldr	r2, [r3]
   1620c:	ldr	r3, [pc, #24]	; 1622c <argp_error@@Base+0x6e4>
   16210:	ldr	r0, [r3]
   16214:	ldr	r3, [r9]
   16218:	str	r3, [sp]
   1621c:	ldr	r3, [sp, #96]	; 0x60
   16220:	ldr	r1, [pc, #28]	; 16244 <argp_error@@Base+0x6fc>
   16224:	bl	10ebc <fprintf@plt>
   16228:	b	161e4 <argp_error@@Base+0x69c>
   1622c:	andeq	r9, r2, r8, asr #2
   16230:	andeq	r8, r1, r4, asr r6
   16234:	andeq	r8, r1, r4, ror r6
   16238:	andeq	r8, r1, r4, lsr #13
   1623c:	andeq	r8, r1, ip, lsr #13
   16240:	andeq	r8, r1, ip, asr #13
   16244:	strdeq	r8, [r1], -ip
   16248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1624c:	sub	sp, sp, #36	; 0x24
   16250:	str	r3, [sp, #24]
   16254:	ldr	r4, [sp, #80]	; 0x50
   16258:	ldr	r8, [r4, #4]
   1625c:	subs	r5, r0, #0
   16260:	ble	16768 <argp_error@@Base+0xc20>
   16264:	mov	r9, r1
   16268:	mov	r6, r2
   1626c:	mov	r3, #0
   16270:	str	r3, [r4, #12]
   16274:	ldr	r3, [r4]
   16278:	cmp	r3, #0
   1627c:	beq	162a0 <argp_error@@Base+0x758>
   16280:	ldr	r3, [r4, #16]
   16284:	cmp	r3, #0
   16288:	beq	162a8 <argp_error@@Base+0x760>
   1628c:	ldrb	r3, [r2]
   16290:	sub	r3, r3, #43	; 0x2b
   16294:	tst	r3, #253	; 0xfd
   16298:	addeq	r6, r2, #1
   1629c:	b	16304 <argp_error@@Base+0x7bc>
   162a0:	mov	r3, #1
   162a4:	str	r3, [r4]
   162a8:	ldr	r3, [r4]
   162ac:	str	r3, [r4, #32]
   162b0:	str	r3, [r4, #28]
   162b4:	mov	r3, #0
   162b8:	str	r3, [r4, #20]
   162bc:	ldrb	r3, [r6]
   162c0:	cmp	r3, #45	; 0x2d
   162c4:	moveq	r3, #2
   162c8:	streq	r3, [r4, #24]
   162cc:	addeq	r6, r6, #1
   162d0:	beq	162fc <argp_error@@Base+0x7b4>
   162d4:	cmp	r3, #43	; 0x2b
   162d8:	moveq	r3, #0
   162dc:	streq	r3, [r4, #24]
   162e0:	addeq	r6, r6, #1
   162e4:	beq	162fc <argp_error@@Base+0x7b4>
   162e8:	ldr	r3, [sp, #84]	; 0x54
   162ec:	cmp	r3, #0
   162f0:	beq	163a0 <argp_error@@Base+0x858>
   162f4:	mov	r3, #0
   162f8:	str	r3, [r4, #24]
   162fc:	mov	r3, #1
   16300:	str	r3, [r4, #16]
   16304:	ldrb	r3, [r6]
   16308:	cmp	r3, #58	; 0x3a
   1630c:	moveq	r8, #0
   16310:	ldr	r3, [r4, #20]
   16314:	cmp	r3, #0
   16318:	beq	16328 <argp_error@@Base+0x7e0>
   1631c:	ldrb	r3, [r3]
   16320:	cmp	r3, #0
   16324:	bne	164b4 <argp_error@@Base+0x96c>
   16328:	ldr	r3, [r4]
   1632c:	ldr	r2, [r4, #32]
   16330:	cmp	r2, r3
   16334:	strgt	r3, [r4, #32]
   16338:	ldr	r2, [r4, #28]
   1633c:	cmp	r3, r2
   16340:	strlt	r3, [r4, #28]
   16344:	ldr	r2, [r4, #24]
   16348:	cmp	r2, #1
   1634c:	beq	163bc <argp_error@@Base+0x874>
   16350:	ldr	r7, [r4]
   16354:	cmp	r5, r7
   16358:	beq	16440 <argp_error@@Base+0x8f8>
   1635c:	ldr	sl, [r9, r7, lsl #2]
   16360:	ldr	r1, [pc, #1088]	; 167a8 <argp_error@@Base+0xc60>
   16364:	mov	r0, sl
   16368:	bl	10d60 <strcmp@plt>
   1636c:	cmp	r0, #0
   16370:	bne	16778 <argp_error@@Base+0xc30>
   16374:	add	r7, r7, #1
   16378:	str	r7, [r4]
   1637c:	ldr	r2, [r4, #28]
   16380:	ldr	r3, [r4, #32]
   16384:	cmp	r7, r3
   16388:	cmpne	r2, r3
   1638c:	beq	16430 <argp_error@@Base+0x8e8>
   16390:	mov	r1, r4
   16394:	mov	r0, r9
   16398:	bl	15c8c <argp_error@@Base+0x144>
   1639c:	b	16438 <argp_error@@Base+0x8f0>
   163a0:	ldr	r0, [pc, #1028]	; 167ac <argp_error@@Base+0xc64>
   163a4:	bl	10e2c <getenv@plt>
   163a8:	cmp	r0, #0
   163ac:	bne	162f4 <argp_error@@Base+0x7ac>
   163b0:	mov	r3, #1
   163b4:	str	r3, [r4, #24]
   163b8:	b	162fc <argp_error@@Base+0x7b4>
   163bc:	ldr	r2, [r4, #32]
   163c0:	ldr	r1, [r4, #28]
   163c4:	cmp	r1, r2
   163c8:	cmpne	r3, r2
   163cc:	beq	163e0 <argp_error@@Base+0x898>
   163d0:	mov	r1, r4
   163d4:	mov	r0, r9
   163d8:	bl	15c8c <argp_error@@Base+0x144>
   163dc:	b	163e8 <argp_error@@Base+0x8a0>
   163e0:	cmp	r3, r2
   163e4:	strne	r3, [r4, #28]
   163e8:	ldr	r3, [r4]
   163ec:	cmp	r5, r3
   163f0:	ble	16428 <argp_error@@Base+0x8e0>
   163f4:	add	r1, r9, r3, lsl #2
   163f8:	b	1640c <argp_error@@Base+0x8c4>
   163fc:	add	r3, r3, #1
   16400:	str	r3, [r4]
   16404:	cmp	r5, r3
   16408:	beq	16428 <argp_error@@Base+0x8e0>
   1640c:	ldr	r2, [r1], #4
   16410:	ldrb	r0, [r2]
   16414:	cmp	r0, #45	; 0x2d
   16418:	bne	163fc <argp_error@@Base+0x8b4>
   1641c:	ldrb	r2, [r2, #1]
   16420:	cmp	r2, #0
   16424:	beq	163fc <argp_error@@Base+0x8b4>
   16428:	str	r3, [r4, #32]
   1642c:	b	16350 <argp_error@@Base+0x808>
   16430:	cmp	r2, r3
   16434:	streq	r7, [r4, #28]
   16438:	str	r5, [r4, #32]
   1643c:	str	r5, [r4]
   16440:	ldr	r3, [r4, #28]
   16444:	ldr	r2, [r4, #32]
   16448:	cmp	r3, r2
   1644c:	mvneq	r0, #0
   16450:	strne	r3, [r4]
   16454:	mvnne	r0, #0
   16458:	b	165b8 <argp_error@@Base+0xa70>
   1645c:	ldrb	r1, [sl, #1]
   16460:	cmp	r1, #0
   16464:	beq	16784 <argp_error@@Base+0xc3c>
   16468:	ldr	r3, [sp, #24]
   1646c:	cmp	r3, #0
   16470:	beq	164a4 <argp_error@@Base+0x95c>
   16474:	cmp	r1, #45	; 0x2d
   16478:	beq	1651c <argp_error@@Base+0x9d4>
   1647c:	ldr	r3, [sp, #76]	; 0x4c
   16480:	cmp	r3, #0
   16484:	beq	164a4 <argp_error@@Base+0x95c>
   16488:	ldrb	r3, [sl, #2]
   1648c:	cmp	r3, #0
   16490:	bne	1655c <argp_error@@Base+0xa14>
   16494:	mov	r0, r6
   16498:	bl	10eb0 <strchr@plt>
   1649c:	cmp	r0, #0
   164a0:	beq	1655c <argp_error@@Base+0xa14>
   164a4:	ldr	r3, [r4]
   164a8:	ldr	r3, [r9, r3, lsl #2]
   164ac:	add	r3, r3, #1
   164b0:	str	r3, [r4, #20]
   164b4:	ldr	sl, [r4, #20]
   164b8:	add	fp, sl, #1
   164bc:	str	fp, [r4, #20]
   164c0:	ldrb	r7, [sl]
   164c4:	str	r7, [sp, #28]
   164c8:	mov	r1, r7
   164cc:	mov	r0, r6
   164d0:	bl	10eb0 <strchr@plt>
   164d4:	ldrb	r3, [sl, #1]
   164d8:	cmp	r3, #0
   164dc:	ldreq	r3, [r4]
   164e0:	addeq	r3, r3, #1
   164e4:	streq	r3, [r4]
   164e8:	sub	r3, r7, #58	; 0x3a
   164ec:	uxtb	r3, r3
   164f0:	cmp	r0, #0
   164f4:	cmpne	r3, #1
   164f8:	bls	165a4 <argp_error@@Base+0xa5c>
   164fc:	ldrb	r3, [r0]
   16500:	cmp	r3, #87	; 0x57
   16504:	beq	165dc <argp_error@@Base+0xa94>
   16508:	ldrb	r3, [r0, #1]
   1650c:	cmp	r3, #58	; 0x3a
   16510:	beq	166a8 <argp_error@@Base+0xb60>
   16514:	mov	r0, r7
   16518:	b	165b8 <argp_error@@Base+0xa70>
   1651c:	add	sl, sl, #2
   16520:	str	sl, [r4, #20]
   16524:	ldr	r3, [pc, #636]	; 167a8 <argp_error@@Base+0xc60>
   16528:	str	r3, [sp, #16]
   1652c:	str	r8, [sp, #12]
   16530:	str	r4, [sp, #8]
   16534:	ldr	r3, [sp, #76]	; 0x4c
   16538:	str	r3, [sp, #4]
   1653c:	ldr	r3, [sp, #72]	; 0x48
   16540:	str	r3, [sp]
   16544:	ldr	r3, [sp, #24]
   16548:	mov	r2, r6
   1654c:	mov	r1, r9
   16550:	mov	r0, r5
   16554:	bl	15d5c <argp_error@@Base+0x214>
   16558:	b	165b8 <argp_error@@Base+0xa70>
   1655c:	add	sl, sl, #1
   16560:	str	sl, [r4, #20]
   16564:	ldr	r3, [pc, #580]	; 167b0 <argp_error@@Base+0xc68>
   16568:	str	r3, [sp, #16]
   1656c:	str	r8, [sp, #12]
   16570:	str	r4, [sp, #8]
   16574:	ldr	r3, [sp, #76]	; 0x4c
   16578:	str	r3, [sp, #4]
   1657c:	ldr	r3, [sp, #72]	; 0x48
   16580:	str	r3, [sp]
   16584:	ldr	r3, [sp, #24]
   16588:	mov	r2, r6
   1658c:	mov	r1, r9
   16590:	mov	r0, r5
   16594:	bl	15d5c <argp_error@@Base+0x214>
   16598:	cmn	r0, #1
   1659c:	bne	165b8 <argp_error@@Base+0xa70>
   165a0:	b	164a4 <argp_error@@Base+0x95c>
   165a4:	cmp	r8, #0
   165a8:	bne	165c0 <argp_error@@Base+0xa78>
   165ac:	ldr	r3, [sp, #28]
   165b0:	str	r3, [r4, #8]
   165b4:	mov	r0, #63	; 0x3f
   165b8:	add	sp, sp, #36	; 0x24
   165bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165c0:	ldr	r3, [sp, #28]
   165c4:	ldr	r2, [r9]
   165c8:	ldr	r1, [pc, #484]	; 167b4 <argp_error@@Base+0xc6c>
   165cc:	ldr	r0, [pc, #484]	; 167b8 <argp_error@@Base+0xc70>
   165d0:	ldr	r0, [r0]
   165d4:	bl	10ebc <fprintf@plt>
   165d8:	b	165ac <argp_error@@Base+0xa64>
   165dc:	ldrb	r3, [r0, #1]
   165e0:	ldr	r2, [sp, #24]
   165e4:	cmp	r3, #59	; 0x3b
   165e8:	movne	r3, #0
   165ec:	moveq	r3, #1
   165f0:	cmp	r2, #0
   165f4:	moveq	r3, #0
   165f8:	cmp	r3, #0
   165fc:	beq	16508 <argp_error@@Base+0x9c0>
   16600:	ldrb	r3, [sl, #1]
   16604:	cmp	r3, #0
   16608:	strne	fp, [r4, #12]
   1660c:	bne	16624 <argp_error@@Base+0xadc>
   16610:	ldr	r3, [r4]
   16614:	cmp	r5, r3
   16618:	beq	16668 <argp_error@@Base+0xb20>
   1661c:	ldr	r3, [r9, r3, lsl #2]
   16620:	str	r3, [r4, #12]
   16624:	ldr	r3, [r4, #12]
   16628:	str	r3, [r4, #20]
   1662c:	mov	r3, #0
   16630:	str	r3, [r4, #12]
   16634:	ldr	r2, [pc, #384]	; 167bc <argp_error@@Base+0xc74>
   16638:	str	r2, [sp, #16]
   1663c:	str	r8, [sp, #12]
   16640:	str	r4, [sp, #8]
   16644:	str	r3, [sp, #4]
   16648:	ldr	r3, [sp, #72]	; 0x48
   1664c:	str	r3, [sp]
   16650:	ldr	r3, [sp, #24]
   16654:	mov	r2, r6
   16658:	mov	r1, r9
   1665c:	mov	r0, r5
   16660:	bl	15d5c <argp_error@@Base+0x214>
   16664:	b	165b8 <argp_error@@Base+0xa70>
   16668:	cmp	r8, #0
   1666c:	bne	1668c <argp_error@@Base+0xb44>
   16670:	ldr	r3, [sp, #28]
   16674:	str	r3, [r4, #8]
   16678:	ldrb	r0, [r6]
   1667c:	cmp	r0, #58	; 0x3a
   16680:	moveq	r0, #58	; 0x3a
   16684:	movne	r0, #63	; 0x3f
   16688:	b	165b8 <argp_error@@Base+0xa70>
   1668c:	ldr	r3, [sp, #28]
   16690:	ldr	r2, [r9]
   16694:	ldr	r1, [pc, #292]	; 167c0 <argp_error@@Base+0xc78>
   16698:	ldr	r0, [pc, #280]	; 167b8 <argp_error@@Base+0xc70>
   1669c:	ldr	r0, [r0]
   166a0:	bl	10ebc <fprintf@plt>
   166a4:	b	16670 <argp_error@@Base+0xb28>
   166a8:	ldrb	r3, [r0, #2]
   166ac:	cmp	r3, #58	; 0x3a
   166b0:	beq	166dc <argp_error@@Base+0xb94>
   166b4:	ldrb	r3, [sl, #1]
   166b8:	cmp	r3, #0
   166bc:	beq	16708 <argp_error@@Base+0xbc0>
   166c0:	str	fp, [r4, #12]
   166c4:	ldr	r3, [r4]
   166c8:	add	r3, r3, #1
   166cc:	str	r3, [r4]
   166d0:	mov	r3, #0
   166d4:	str	r3, [r4, #20]
   166d8:	b	16514 <argp_error@@Base+0x9cc>
   166dc:	ldrb	r3, [sl, #1]
   166e0:	cmp	r3, #0
   166e4:	strne	fp, [r4, #12]
   166e8:	ldrne	r3, [r4]
   166ec:	addne	r3, r3, #1
   166f0:	strne	r3, [r4]
   166f4:	moveq	r3, #0
   166f8:	streq	r3, [r4, #12]
   166fc:	mov	r3, #0
   16700:	str	r3, [r4, #20]
   16704:	b	16514 <argp_error@@Base+0x9cc>
   16708:	ldr	r3, [r4]
   1670c:	cmp	r5, r3
   16710:	beq	16728 <argp_error@@Base+0xbe0>
   16714:	add	r2, r3, #1
   16718:	str	r2, [r4]
   1671c:	ldr	r3, [r9, r3, lsl #2]
   16720:	str	r3, [r4, #12]
   16724:	b	166d0 <argp_error@@Base+0xb88>
   16728:	cmp	r8, #0
   1672c:	bne	1674c <argp_error@@Base+0xc04>
   16730:	ldr	r3, [sp, #28]
   16734:	str	r3, [r4, #8]
   16738:	ldrb	r7, [r6]
   1673c:	cmp	r7, #58	; 0x3a
   16740:	moveq	r7, #58	; 0x3a
   16744:	movne	r7, #63	; 0x3f
   16748:	b	166d0 <argp_error@@Base+0xb88>
   1674c:	ldr	r3, [sp, #28]
   16750:	ldr	r2, [r9]
   16754:	ldr	r1, [pc, #100]	; 167c0 <argp_error@@Base+0xc78>
   16758:	ldr	r0, [pc, #88]	; 167b8 <argp_error@@Base+0xc70>
   1675c:	ldr	r0, [r0]
   16760:	bl	10ebc <fprintf@plt>
   16764:	b	16730 <argp_error@@Base+0xbe8>
   16768:	mvn	r0, #0
   1676c:	b	165b8 <argp_error@@Base+0xa70>
   16770:	mvn	r0, #0
   16774:	b	165b8 <argp_error@@Base+0xa70>
   16778:	ldrb	r3, [sl]
   1677c:	cmp	r3, #45	; 0x2d
   16780:	beq	1645c <argp_error@@Base+0x914>
   16784:	ldr	r3, [r4, #24]
   16788:	cmp	r3, #0
   1678c:	beq	16770 <argp_error@@Base+0xc28>
   16790:	add	r3, r7, #1
   16794:	str	r3, [r4]
   16798:	ldr	r3, [r9, r7, lsl #2]
   1679c:	str	r3, [r4, #12]
   167a0:	mov	r0, #1
   167a4:	b	165b8 <argp_error@@Base+0xa70>
   167a8:	andeq	r7, r1, r8, lsl #28
   167ac:	andeq	r8, r1, r4, lsr #14
   167b0:	andeq	r8, r1, r4, lsr r7
   167b4:	andeq	r8, r1, r8, lsr r7
   167b8:	andeq	r9, r2, r8, asr #2
   167bc:	andeq	r8, r1, r0, lsl #15
   167c0:	andeq	r8, r1, r4, asr r7
   167c4:	push	{r4, r5, lr}
   167c8:	sub	sp, sp, #20
   167cc:	ldr	r4, [pc, #84]	; 16828 <argp_error@@Base+0xce0>
   167d0:	ldr	r5, [pc, #84]	; 1682c <argp_error@@Base+0xce4>
   167d4:	ldr	ip, [r5]
   167d8:	str	ip, [r4]
   167dc:	ldr	ip, [r5, #4]
   167e0:	str	ip, [r4, #4]
   167e4:	ldr	ip, [sp, #40]	; 0x28
   167e8:	str	ip, [sp, #12]
   167ec:	str	r4, [sp, #8]
   167f0:	ldr	ip, [sp, #36]	; 0x24
   167f4:	str	ip, [sp, #4]
   167f8:	ldr	ip, [sp, #32]
   167fc:	str	ip, [sp]
   16800:	bl	16248 <argp_error@@Base+0x700>
   16804:	ldr	r3, [r4]
   16808:	str	r3, [r5]
   1680c:	ldr	r2, [r4, #12]
   16810:	ldr	r3, [pc, #24]	; 16830 <argp_error@@Base+0xce8>
   16814:	str	r2, [r3]
   16818:	ldr	r3, [r4, #8]
   1681c:	str	r3, [r5, #8]
   16820:	add	sp, sp, #20
   16824:	pop	{r4, r5, pc}
   16828:	andeq	r9, r2, r8, ror #2
   1682c:	andeq	r9, r2, r8, lsr #2
   16830:	muleq	r2, r4, r1
   16834:	push	{lr}		; (str lr, [sp, #-4]!)
   16838:	sub	sp, sp, #20
   1683c:	mov	r3, #1
   16840:	str	r3, [sp, #8]
   16844:	mov	r3, #0
   16848:	str	r3, [sp, #4]
   1684c:	str	r3, [sp]
   16850:	bl	167c4 <argp_error@@Base+0xc7c>
   16854:	add	sp, sp, #20
   16858:	pop	{pc}		; (ldr pc, [sp], #4)
   1685c:	push	{r4, lr}
   16860:	bl	12a98 <argp_parse@@Base+0x12d4>
   16864:	cmp	r0, #0
   16868:	popne	{r4, pc}
   1686c:	bl	16e00 <argp_error@@Base+0x12b8>
   16870:	push	{r4, lr}
   16874:	bl	12a98 <argp_parse@@Base+0x12d4>
   16878:	cmp	r0, #0
   1687c:	popne	{r4, pc}
   16880:	bl	16e00 <argp_error@@Base+0x12b8>
   16884:	push	{r4, lr}
   16888:	bl	1685c <argp_error@@Base+0xd14>
   1688c:	pop	{r4, pc}
   16890:	push	{r4, r5, r6, lr}
   16894:	mov	r5, r0
   16898:	mov	r4, r1
   1689c:	bl	16e7c <argp_error@@Base+0x1334>
   168a0:	cmp	r0, #0
   168a4:	popne	{r4, r5, r6, pc}
   168a8:	adds	r4, r4, #0
   168ac:	movne	r4, #1
   168b0:	cmp	r5, #0
   168b4:	orreq	r4, r4, #1
   168b8:	cmp	r4, #0
   168bc:	popeq	{r4, r5, r6, pc}
   168c0:	bl	16e00 <argp_error@@Base+0x12b8>
   168c4:	push	{r4, lr}
   168c8:	cmp	r1, #0
   168cc:	orreq	r1, r1, #1
   168d0:	bl	16e7c <argp_error@@Base+0x1334>
   168d4:	cmp	r0, #0
   168d8:	popne	{r4, pc}
   168dc:	bl	16e00 <argp_error@@Base+0x12b8>
   168e0:	push	{r4, r5, r6, lr}
   168e4:	mov	r6, r0
   168e8:	mov	r5, r1
   168ec:	mov	r4, r2
   168f0:	bl	17658 <argp_error@@Base+0x1b10>
   168f4:	cmp	r0, #0
   168f8:	popne	{r4, r5, r6, pc}
   168fc:	cmp	r6, #0
   16900:	beq	16910 <argp_error@@Base+0xdc8>
   16904:	cmp	r5, #0
   16908:	cmpne	r4, #0
   1690c:	popeq	{r4, r5, r6, pc}
   16910:	bl	16e00 <argp_error@@Base+0x12b8>
   16914:	push	{r4, lr}
   16918:	bl	168e0 <argp_error@@Base+0xd98>
   1691c:	pop	{r4, pc}
   16920:	push	{r4, lr}
   16924:	mov	ip, r1
   16928:	mov	r3, r2
   1692c:	cmp	r2, #0
   16930:	cmpne	r1, #0
   16934:	moveq	r3, #1
   16938:	moveq	ip, r3
   1693c:	mov	r2, r3
   16940:	mov	r1, ip
   16944:	bl	17658 <argp_error@@Base+0x1b10>
   16948:	cmp	r0, #0
   1694c:	popne	{r4, pc}
   16950:	bl	16e00 <argp_error@@Base+0x12b8>
   16954:	push	{r4, lr}
   16958:	mov	r2, r1
   1695c:	mov	r1, r0
   16960:	mov	r0, #0
   16964:	bl	168e0 <argp_error@@Base+0xd98>
   16968:	pop	{r4, pc}
   1696c:	push	{r4, lr}
   16970:	mov	r2, r1
   16974:	mov	r1, r0
   16978:	mov	r0, #0
   1697c:	bl	16920 <argp_error@@Base+0xdd8>
   16980:	pop	{r4, pc}
   16984:	push	{r4, r5, r6, r7, r8, lr}
   16988:	mov	r5, r1
   1698c:	mov	r6, r2
   16990:	ldr	r4, [r1]
   16994:	subs	r7, r0, #0
   16998:	beq	169b4 <argp_error@@Base+0xe6c>
   1699c:	lsr	r2, r4, #1
   169a0:	add	r3, r2, #1
   169a4:	mvn	r3, r3
   169a8:	cmp	r4, r3
   169ac:	bls	169d8 <argp_error@@Base+0xe90>
   169b0:	bl	16e00 <argp_error@@Base+0x12b8>
   169b4:	cmp	r4, #0
   169b8:	bne	169e0 <argp_error@@Base+0xe98>
   169bc:	mov	r1, r2
   169c0:	mov	r0, #64	; 0x40
   169c4:	bl	176a4 <argp_error@@Base+0x1b5c>
   169c8:	cmp	r0, #0
   169cc:	movne	r4, r0
   169d0:	addeq	r4, r0, #1
   169d4:	b	169e0 <argp_error@@Base+0xe98>
   169d8:	add	r4, r4, #1
   169dc:	add	r4, r4, r2
   169e0:	mov	r2, r6
   169e4:	mov	r1, r4
   169e8:	mov	r0, r7
   169ec:	bl	168e0 <argp_error@@Base+0xd98>
   169f0:	str	r4, [r5]
   169f4:	pop	{r4, r5, r6, r7, r8, pc}
   169f8:	push	{r4, lr}
   169fc:	mov	r2, #1
   16a00:	bl	16984 <argp_error@@Base+0xe3c>
   16a04:	pop	{r4, pc}
   16a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a0c:	sub	sp, sp, #12
   16a10:	mov	fp, r0
   16a14:	mov	sl, r1
   16a18:	mov	r9, r2
   16a1c:	mov	r7, r3
   16a20:	ldr	r6, [sp, #48]	; 0x30
   16a24:	ldr	r5, [r1]
   16a28:	asrs	r4, r5, #1
   16a2c:	bmi	16b88 <argp_error@@Base+0x1040>
   16a30:	cmp	r5, #0
   16a34:	blt	16b9c <argp_error@@Base+0x1054>
   16a38:	mvn	r3, #-2147483648	; 0x80000000
   16a3c:	sub	r3, r3, r4
   16a40:	cmp	r5, r3
   16a44:	movle	r3, #0
   16a48:	movgt	r3, #1
   16a4c:	cmp	r3, #0
   16a50:	addeq	r4, r4, r5
   16a54:	mvnne	r4, #-2147483648	; 0x80000000
   16a58:	mvn	r8, r7
   16a5c:	lsr	r8, r8, #31
   16a60:	cmp	r7, r4
   16a64:	movge	r3, #0
   16a68:	andlt	r3, r8, #1
   16a6c:	cmp	r3, #0
   16a70:	movne	r4, r7
   16a74:	cmp	r6, #0
   16a78:	blt	16bb0 <argp_error@@Base+0x1068>
   16a7c:	cmp	r6, #0
   16a80:	beq	16c5c <argp_error@@Base+0x1114>
   16a84:	cmp	r4, #0
   16a88:	blt	16c0c <argp_error@@Base+0x10c4>
   16a8c:	mov	r1, r6
   16a90:	mvn	r0, #-2147483648	; 0x80000000
   16a94:	bl	178b0 <argp_error@@Base+0x1d68>
   16a98:	cmp	r0, r4
   16a9c:	movge	r0, #0
   16aa0:	movlt	r0, #1
   16aa4:	cmp	r0, #0
   16aa8:	mvnne	r3, #-2147483648	; 0x80000000
   16aac:	strne	r3, [sp, #4]
   16ab0:	beq	16c44 <argp_error@@Base+0x10fc>
   16ab4:	mov	r1, r6
   16ab8:	ldr	r0, [sp, #4]
   16abc:	bl	178b0 <argp_error@@Base+0x1d68>
   16ac0:	mov	r4, r0
   16ac4:	mov	r1, r6
   16ac8:	ldr	r0, [sp, #4]
   16acc:	bl	17ad0 <argp_error@@Base+0x1f88>
   16ad0:	ldr	r3, [sp, #4]
   16ad4:	sub	r1, r3, r1
   16ad8:	cmp	fp, #0
   16adc:	moveq	r3, #0
   16ae0:	streq	r3, [sl]
   16ae4:	sub	r3, r4, r5
   16ae8:	cmp	r3, r9
   16aec:	bge	16b74 <argp_error@@Base+0x102c>
   16af0:	cmp	r9, #0
   16af4:	blt	16c68 <argp_error@@Base+0x1120>
   16af8:	cmp	r5, #0
   16afc:	blt	16c7c <argp_error@@Base+0x1134>
   16b00:	mvn	r3, #-2147483648	; 0x80000000
   16b04:	sub	r3, r3, r9
   16b08:	cmp	r5, r3
   16b0c:	movle	r3, #0
   16b10:	movgt	r3, #1
   16b14:	cmp	r3, #0
   16b18:	bne	16d24 <argp_error@@Base+0x11dc>
   16b1c:	add	r5, r5, r9
   16b20:	mov	r4, r5
   16b24:	cmp	r7, r5
   16b28:	movge	r7, #0
   16b2c:	andlt	r7, r8, #1
   16b30:	cmp	r7, #0
   16b34:	bne	16d24 <argp_error@@Base+0x11dc>
   16b38:	cmp	r6, #0
   16b3c:	blt	16c90 <argp_error@@Base+0x1148>
   16b40:	cmp	r6, #0
   16b44:	beq	16b70 <argp_error@@Base+0x1028>
   16b48:	cmp	r5, #0
   16b4c:	blt	16cec <argp_error@@Base+0x11a4>
   16b50:	mov	r1, r6
   16b54:	mvn	r0, #-2147483648	; 0x80000000
   16b58:	bl	178b0 <argp_error@@Base+0x1d68>
   16b5c:	cmp	r5, r0
   16b60:	movle	r0, #0
   16b64:	movgt	r0, #1
   16b68:	cmp	r0, #0
   16b6c:	bne	16d24 <argp_error@@Base+0x11dc>
   16b70:	mul	r1, r5, r6
   16b74:	mov	r0, fp
   16b78:	bl	16890 <argp_error@@Base+0xd48>
   16b7c:	str	r4, [sl]
   16b80:	add	sp, sp, #12
   16b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b88:	rsb	r3, r4, #-2147483648	; 0x80000000
   16b8c:	cmp	r5, r3
   16b90:	movge	r3, #0
   16b94:	movlt	r3, #1
   16b98:	b	16a4c <argp_error@@Base+0xf04>
   16b9c:	rsb	r3, r5, #-2147483648	; 0x80000000
   16ba0:	cmp	r4, r3
   16ba4:	movge	r3, #0
   16ba8:	movlt	r3, #1
   16bac:	b	16a4c <argp_error@@Base+0xf04>
   16bb0:	cmp	r4, #0
   16bb4:	blt	16bdc <argp_error@@Base+0x1094>
   16bb8:	cmn	r6, #1
   16bbc:	beq	16bf8 <argp_error@@Base+0x10b0>
   16bc0:	mov	r1, r6
   16bc4:	mov	r0, #-2147483648	; 0x80000000
   16bc8:	bl	178b0 <argp_error@@Base+0x1d68>
   16bcc:	cmp	r0, r4
   16bd0:	movge	r0, #0
   16bd4:	movlt	r0, #1
   16bd8:	b	16aa4 <argp_error@@Base+0xf5c>
   16bdc:	mov	r1, r6
   16be0:	mvn	r0, #-2147483648	; 0x80000000
   16be4:	bl	178b0 <argp_error@@Base+0x1d68>
   16be8:	cmp	r0, r4
   16bec:	movle	r0, #0
   16bf0:	movgt	r0, #1
   16bf4:	b	16aa4 <argp_error@@Base+0xf5c>
   16bf8:	add	r0, r4, #-2147483648	; 0x80000000
   16bfc:	cmp	r0, #0
   16c00:	movle	r0, #0
   16c04:	movgt	r0, #1
   16c08:	b	16aa4 <argp_error@@Base+0xf5c>
   16c0c:	cmn	r4, #1
   16c10:	beq	16c30 <argp_error@@Base+0x10e8>
   16c14:	mov	r1, r4
   16c18:	mov	r0, #-2147483648	; 0x80000000
   16c1c:	bl	178b0 <argp_error@@Base+0x1d68>
   16c20:	cmp	r6, r0
   16c24:	movle	r0, #0
   16c28:	movgt	r0, #1
   16c2c:	b	16aa4 <argp_error@@Base+0xf5c>
   16c30:	add	r0, r6, #-2147483648	; 0x80000000
   16c34:	cmp	r0, #0
   16c38:	movle	r0, #0
   16c3c:	movgt	r0, #1
   16c40:	b	16aa4 <argp_error@@Base+0xf5c>
   16c44:	mul	r1, r6, r4
   16c48:	cmp	r1, #63	; 0x3f
   16c4c:	movle	r3, #64	; 0x40
   16c50:	strle	r3, [sp, #4]
   16c54:	bgt	16ad8 <argp_error@@Base+0xf90>
   16c58:	b	16ab4 <argp_error@@Base+0xf6c>
   16c5c:	mov	r3, #64	; 0x40
   16c60:	str	r3, [sp, #4]
   16c64:	b	16ab4 <argp_error@@Base+0xf6c>
   16c68:	rsb	r3, r9, #-2147483648	; 0x80000000
   16c6c:	cmp	r5, r3
   16c70:	movge	r3, #0
   16c74:	movlt	r3, #1
   16c78:	b	16b14 <argp_error@@Base+0xfcc>
   16c7c:	rsb	r3, r5, #-2147483648	; 0x80000000
   16c80:	cmp	r9, r3
   16c84:	movge	r3, #0
   16c88:	movlt	r3, #1
   16c8c:	b	16b14 <argp_error@@Base+0xfcc>
   16c90:	cmp	r5, #0
   16c94:	blt	16cbc <argp_error@@Base+0x1174>
   16c98:	cmn	r6, #1
   16c9c:	beq	16cd8 <argp_error@@Base+0x1190>
   16ca0:	mov	r1, r6
   16ca4:	mov	r0, #-2147483648	; 0x80000000
   16ca8:	bl	178b0 <argp_error@@Base+0x1d68>
   16cac:	cmp	r5, r0
   16cb0:	movle	r0, #0
   16cb4:	movgt	r0, #1
   16cb8:	b	16b68 <argp_error@@Base+0x1020>
   16cbc:	mov	r1, r6
   16cc0:	mvn	r0, #-2147483648	; 0x80000000
   16cc4:	bl	178b0 <argp_error@@Base+0x1d68>
   16cc8:	cmp	r5, r0
   16ccc:	movge	r0, #0
   16cd0:	movlt	r0, #1
   16cd4:	b	16b68 <argp_error@@Base+0x1020>
   16cd8:	add	r0, r5, #-2147483648	; 0x80000000
   16cdc:	cmp	r0, #0
   16ce0:	movle	r0, #0
   16ce4:	movgt	r0, #1
   16ce8:	b	16b68 <argp_error@@Base+0x1020>
   16cec:	cmn	r5, #1
   16cf0:	beq	16d10 <argp_error@@Base+0x11c8>
   16cf4:	mov	r1, r5
   16cf8:	mov	r0, #-2147483648	; 0x80000000
   16cfc:	bl	178b0 <argp_error@@Base+0x1d68>
   16d00:	cmp	r6, r0
   16d04:	movle	r0, #0
   16d08:	movgt	r0, #1
   16d0c:	b	16b68 <argp_error@@Base+0x1020>
   16d10:	add	r0, r6, #-2147483648	; 0x80000000
   16d14:	cmp	r0, #0
   16d18:	movle	r0, #0
   16d1c:	movgt	r0, #1
   16d20:	b	16b68 <argp_error@@Base+0x1020>
   16d24:	bl	16e00 <argp_error@@Base+0x12b8>
   16d28:	push	{r4, lr}
   16d2c:	bl	16e2c <argp_error@@Base+0x12e4>
   16d30:	cmp	r0, #0
   16d34:	popne	{r4, pc}
   16d38:	bl	16e00 <argp_error@@Base+0x12b8>
   16d3c:	push	{r4, lr}
   16d40:	mov	r1, #1
   16d44:	bl	16d28 <argp_error@@Base+0x11e0>
   16d48:	pop	{r4, pc}
   16d4c:	push	{r4, lr}
   16d50:	bl	16e2c <argp_error@@Base+0x12e4>
   16d54:	cmp	r0, #0
   16d58:	popne	{r4, pc}
   16d5c:	bl	16e00 <argp_error@@Base+0x12b8>
   16d60:	push	{r4, lr}
   16d64:	mov	r1, #1
   16d68:	bl	16d4c <argp_error@@Base+0x1204>
   16d6c:	pop	{r4, pc}
   16d70:	push	{r4, r5, r6, lr}
   16d74:	mov	r5, r0
   16d78:	mov	r4, r1
   16d7c:	mov	r0, r1
   16d80:	bl	1685c <argp_error@@Base+0xd14>
   16d84:	mov	r2, r4
   16d88:	mov	r1, r5
   16d8c:	bl	10dc0 <memcpy@plt>
   16d90:	pop	{r4, r5, r6, pc}
   16d94:	push	{r4, r5, r6, lr}
   16d98:	mov	r5, r0
   16d9c:	mov	r4, r1
   16da0:	mov	r0, r1
   16da4:	bl	16870 <argp_error@@Base+0xd28>
   16da8:	mov	r2, r4
   16dac:	mov	r1, r5
   16db0:	bl	10dc0 <memcpy@plt>
   16db4:	pop	{r4, r5, r6, pc}
   16db8:	push	{r4, r5, r6, lr}
   16dbc:	mov	r5, r0
   16dc0:	mov	r4, r1
   16dc4:	add	r0, r1, #1
   16dc8:	bl	16870 <argp_error@@Base+0xd28>
   16dcc:	mov	r2, #0
   16dd0:	strb	r2, [r0, r4]
   16dd4:	mov	r2, r4
   16dd8:	mov	r1, r5
   16ddc:	bl	10dc0 <memcpy@plt>
   16de0:	pop	{r4, r5, r6, pc}
   16de4:	push	{r4, lr}
   16de8:	mov	r4, r0
   16dec:	bl	10ea4 <strlen@plt>
   16df0:	add	r1, r0, #1
   16df4:	mov	r0, r4
   16df8:	bl	16d70 <argp_error@@Base+0x1228>
   16dfc:	pop	{r4, pc}
   16e00:	push	{r4, lr}
   16e04:	ldr	r3, [pc, #20]	; 16e20 <argp_error@@Base+0x12d8>
   16e08:	ldr	r0, [r3]
   16e0c:	ldr	r3, [pc, #16]	; 16e24 <argp_error@@Base+0x12dc>
   16e10:	ldr	r2, [pc, #16]	; 16e28 <argp_error@@Base+0x12e0>
   16e14:	mov	r1, #0
   16e18:	bl	10e14 <error@plt>
   16e1c:	bl	10f70 <abort@plt>
   16e20:	andeq	r9, r2, r8, lsr r1
   16e24:	andeq	r8, r1, r4, lsl #15
   16e28:	andeq	r7, r1, r4, lsl #25
   16e2c:	push	{r4, lr}
   16e30:	mov	r2, r0
   16e34:	mov	r3, r1
   16e38:	cmp	r1, #0
   16e3c:	cmpne	r0, #0
   16e40:	moveq	r3, #1
   16e44:	moveq	r2, r3
   16e48:	umull	r0, r1, r2, r3
   16e4c:	cmp	r0, #0
   16e50:	cmpge	r1, #0
   16e54:	bne	16e68 <argp_error@@Base+0x1320>
   16e58:	mov	r1, r3
   16e5c:	mov	r0, r2
   16e60:	bl	10d3c <calloc@plt>
   16e64:	pop	{r4, pc}
   16e68:	bl	10ec8 <__errno_location@plt>
   16e6c:	mov	r3, #12
   16e70:	str	r3, [r0]
   16e74:	mov	r0, #0
   16e78:	pop	{r4, pc}
   16e7c:	push	{r4, lr}
   16e80:	cmp	r0, #0
   16e84:	beq	16ea0 <argp_error@@Base+0x1358>
   16e88:	cmp	r1, #0
   16e8c:	beq	16eac <argp_error@@Base+0x1364>
   16e90:	cmp	r1, #0
   16e94:	blt	16eb8 <argp_error@@Base+0x1370>
   16e98:	bl	10de4 <realloc@plt>
   16e9c:	pop	{r4, pc}
   16ea0:	mov	r0, r1
   16ea4:	bl	12a98 <argp_parse@@Base+0x12d4>
   16ea8:	pop	{r4, pc}
   16eac:	bl	123b8 <argp_parse@@Base+0xbf4>
   16eb0:	mov	r0, #0
   16eb4:	pop	{r4, pc}
   16eb8:	bl	10ec8 <__errno_location@plt>
   16ebc:	mov	r3, #12
   16ec0:	str	r3, [r0]
   16ec4:	mov	r0, #0
   16ec8:	pop	{r4, pc}
   16ecc:	push	{r4, r5, r6, r7, r8, lr}
   16ed0:	mov	r8, r0
   16ed4:	mov	r7, r1
   16ed8:	mov	r6, r2
   16edc:	mov	r5, r3
   16ee0:	mov	r0, #36	; 0x24
   16ee4:	bl	12a98 <argp_parse@@Base+0x12d4>
   16ee8:	subs	r4, r0, #0
   16eec:	beq	16f2c <argp_error@@Base+0x13e4>
   16ef0:	str	r8, [r4]
   16ef4:	str	r7, [r4, #4]
   16ef8:	str	r6, [r4, #8]
   16efc:	str	r5, [r4, #12]
   16f00:	mov	r3, #0
   16f04:	str	r3, [r4, #20]
   16f08:	str	r3, [r4, #16]
   16f0c:	mov	r0, #200	; 0xc8
   16f10:	bl	12a98 <argp_parse@@Base+0x12d4>
   16f14:	str	r0, [r4, #24]
   16f18:	cmp	r0, #0
   16f1c:	strne	r0, [r4, #28]
   16f20:	addne	r0, r0, #200	; 0xc8
   16f24:	strne	r0, [r4, #32]
   16f28:	beq	16f34 <argp_error@@Base+0x13ec>
   16f2c:	mov	r0, r4
   16f30:	pop	{r4, r5, r6, r7, r8, pc}
   16f34:	mov	r0, r4
   16f38:	bl	123b8 <argp_parse@@Base+0xbf4>
   16f3c:	mov	r4, #0
   16f40:	b	16f2c <argp_error@@Base+0x13e4>
   16f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f48:	sub	sp, sp, #20
   16f4c:	mov	r4, r0
   16f50:	ldr	r2, [r0, #24]
   16f54:	ldr	r3, [r0, #16]
   16f58:	add	r9, r2, r3
   16f5c:	mov	sl, #32
   16f60:	b	1700c <argp_error@@Base+0x14c4>
   16f64:	add	r5, r5, #1
   16f68:	cmp	r6, r5
   16f6c:	beq	16f9c <argp_error@@Base+0x1454>
   16f70:	ldr	r0, [r4]
   16f74:	ldr	r3, [r0, #20]
   16f78:	ldr	r2, [r0, #24]
   16f7c:	cmp	r3, r2
   16f80:	addcc	r2, r3, #1
   16f84:	strcc	r2, [r0, #20]
   16f88:	strbcc	sl, [r3]
   16f8c:	bcc	16f64 <argp_error@@Base+0x141c>
   16f90:	mov	r1, sl
   16f94:	bl	10ef8 <__overflow@plt>
   16f98:	b	16f64 <argp_error@@Base+0x141c>
   16f9c:	str	r6, [r4, #20]
   16fa0:	ldr	fp, [r4, #28]
   16fa4:	str	fp, [sp, #8]
   16fa8:	str	r9, [sp, #4]
   16fac:	sub	r3, fp, r9
   16fb0:	str	r3, [sp]
   16fb4:	mov	r2, r3
   16fb8:	mov	r1, #10
   16fbc:	mov	r0, r9
   16fc0:	bl	10eec <memchr@plt>
   16fc4:	mov	r7, r0
   16fc8:	ldr	r3, [r4, #20]
   16fcc:	cmp	r3, #0
   16fd0:	movlt	r3, #0
   16fd4:	strlt	r3, [r4, #20]
   16fd8:	cmp	r7, #0
   16fdc:	beq	1707c <argp_error@@Base+0x1534>
   16fe0:	ldr	r0, [r4, #20]
   16fe4:	mov	r5, r7
   16fe8:	ldr	r8, [r4, #8]
   16fec:	ldr	r3, [sp, #4]
   16ff0:	sub	r3, r7, r3
   16ff4:	add	r3, r3, r0
   16ff8:	cmp	r3, r8
   16ffc:	bge	170cc <argp_error@@Base+0x1584>
   17000:	mov	r3, #0
   17004:	str	r3, [r4, #20]
   17008:	add	r9, r7, #1
   1700c:	ldr	fp, [r4, #28]
   17010:	cmp	r9, fp
   17014:	bcs	170b4 <argp_error@@Base+0x156c>
   17018:	ldr	r3, [r4, #20]
   1701c:	cmp	r3, #0
   17020:	bne	16fa0 <argp_error@@Base+0x1458>
   17024:	ldr	r6, [r4, #4]
   17028:	cmp	r6, #0
   1702c:	beq	17478 <argp_error@@Base+0x1930>
   17030:	add	r3, fp, r6
   17034:	ldr	r2, [r4, #32]
   17038:	cmp	r2, r3
   1703c:	movls	r5, #0
   17040:	bls	16f70 <argp_error@@Base+0x1428>
   17044:	add	r5, r9, r6
   17048:	sub	r2, fp, r9
   1704c:	mov	r1, r9
   17050:	mov	r0, r5
   17054:	bl	10d84 <memmove@plt>
   17058:	ldr	r3, [r4, #28]
   1705c:	add	r3, r3, r6
   17060:	str	r3, [r4, #28]
   17064:	mov	r2, r6
   17068:	mov	r1, sl
   1706c:	mov	r0, r9
   17070:	bl	10ee0 <memset@plt>
   17074:	mov	r9, r5
   17078:	b	16f9c <argp_error@@Base+0x1454>
   1707c:	ldr	r3, [r4, #20]
   17080:	ldr	r2, [sp]
   17084:	add	r3, r2, r3
   17088:	ldr	r6, [r4, #8]
   1708c:	cmp	r3, r6
   17090:	bcc	170b0 <argp_error@@Base+0x1568>
   17094:	sub	r6, r6, #1
   17098:	ldr	r3, [r4, #12]
   1709c:	str	r3, [sp, #12]
   170a0:	cmp	r3, #0
   170a4:	blt	171c0 <argp_error@@Base+0x1678>
   170a8:	mov	r7, fp
   170ac:	b	170e0 <argp_error@@Base+0x1598>
   170b0:	str	r3, [r4, #20]
   170b4:	ldr	r3, [r4, #28]
   170b8:	ldr	r2, [r4, #24]
   170bc:	sub	r3, r3, r2
   170c0:	str	r3, [r4, #16]
   170c4:	add	sp, sp, #20
   170c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170cc:	sub	r6, r8, #1
   170d0:	ldr	r3, [r4, #12]
   170d4:	str	r3, [sp, #12]
   170d8:	cmp	r3, #0
   170dc:	blt	17174 <argp_error@@Base+0x162c>
   170e0:	ldr	r5, [r4, #20]
   170e4:	rsb	r5, r5, #1
   170e8:	add	r5, r5, r6
   170ec:	adds	r5, r9, r5
   170f0:	bcs	174a0 <argp_error@@Base+0x1958>
   170f4:	bl	10e8c <__ctype_b_loc@plt>
   170f8:	ldr	r0, [r0]
   170fc:	mov	r3, r5
   17100:	mov	r1, r3
   17104:	sub	r3, r3, #1
   17108:	ldrb	r2, [r1]
   1710c:	lsl	r2, r2, #1
   17110:	ldrh	r2, [r0, r2]
   17114:	tst	r2, #1
   17118:	bne	171e0 <argp_error@@Base+0x1698>
   1711c:	mov	r1, r3
   17120:	cmp	r3, r9
   17124:	bcs	17100 <argp_error@@Base+0x15b8>
   17128:	add	r6, r1, #1
   1712c:	cmp	r6, r9
   17130:	bhi	1721c <argp_error@@Base+0x16d4>
   17134:	cmp	r5, r7
   17138:	bcs	172cc <argp_error@@Base+0x1784>
   1713c:	add	r6, r5, #1
   17140:	mov	r8, r7
   17144:	mov	r5, r6
   17148:	cmp	r8, r6
   1714c:	beq	172cc <argp_error@@Base+0x1784>
   17150:	bl	10e8c <__ctype_b_loc@plt>
   17154:	add	r6, r6, #1
   17158:	ldrb	r3, [r5]
   1715c:	ldr	r2, [r0]
   17160:	lsl	r3, r3, #1
   17164:	ldrh	r3, [r2, r3]
   17168:	tst	r3, #1
   1716c:	beq	17144 <argp_error@@Base+0x15fc>
   17170:	b	172e0 <argp_error@@Base+0x1798>
   17174:	cmp	fp, r7
   17178:	bls	171c0 <argp_error@@Base+0x1678>
   1717c:	sub	r0, r6, r0
   17180:	ldr	r3, [sp, #8]
   17184:	sub	r2, r3, r7
   17188:	mov	r1, r7
   1718c:	add	r0, r9, r0
   17190:	bl	10d84 <memmove@plt>
   17194:	ldr	r3, [r4, #20]
   17198:	sub	r6, r6, r3
   1719c:	add	r6, r9, r6
   171a0:	sub	r5, r6, r7
   171a4:	ldr	r3, [r4, #28]
   171a8:	sub	r5, r3, r5
   171ac:	str	r5, [r4, #28]
   171b0:	mov	r3, #0
   171b4:	str	r3, [r4, #20]
   171b8:	add	r9, r9, r8
   171bc:	b	1700c <argp_error@@Base+0x14c4>
   171c0:	ldr	r3, [r4, #20]
   171c4:	ldr	r2, [sp]
   171c8:	add	r3, r2, r3
   171cc:	str	r3, [r4, #20]
   171d0:	sub	r3, r6, r3
   171d4:	add	r3, fp, r3
   171d8:	str	r3, [r4, #28]
   171dc:	b	170b4 <argp_error@@Base+0x156c>
   171e0:	add	r6, r1, #1
   171e4:	cmp	r6, r9
   171e8:	bls	17134 <argp_error@@Base+0x15ec>
   171ec:	cmp	r1, r9
   171f0:	bcc	1721c <argp_error@@Base+0x16d4>
   171f4:	sub	ip, r9, #1
   171f8:	mov	r1, r3
   171fc:	cmp	ip, r3
   17200:	beq	1721c <argp_error@@Base+0x16d4>
   17204:	sub	r3, r3, #1
   17208:	ldrb	r2, [r1]
   1720c:	lsl	r2, r2, #1
   17210:	ldrh	r2, [r0, r2]
   17214:	tst	r2, #1
   17218:	bne	171f8 <argp_error@@Base+0x16b0>
   1721c:	add	r5, r1, #1
   17220:	ldr	r3, [sp]
   17224:	add	r3, r3, #1
   17228:	add	r3, r9, r3
   1722c:	cmp	r6, r3
   17230:	beq	17304 <argp_error@@Base+0x17bc>
   17234:	add	r3, r5, #1
   17238:	sub	r3, r6, r3
   1723c:	ldr	r2, [sp, #12]
   17240:	cmp	r3, r2
   17244:	bge	1731c <argp_error@@Base+0x17d4>
   17248:	cmp	r6, fp
   1724c:	bcs	1731c <argp_error@@Base+0x17d4>
   17250:	ldr	r3, [r4, #32]
   17254:	ldr	r2, [sp, #8]
   17258:	sub	r3, r3, r2
   1725c:	ldr	r2, [sp, #12]
   17260:	add	r2, r2, #1
   17264:	cmp	r3, r2
   17268:	bgt	17364 <argp_error@@Base+0x181c>
   1726c:	ldr	r0, [r4, #24]
   17270:	cmp	r5, r0
   17274:	bls	17288 <argp_error@@Base+0x1740>
   17278:	ldr	r3, [r4]
   1727c:	sub	r2, r5, r0
   17280:	mov	r1, #1
   17284:	bl	10dcc <fwrite_unlocked@plt>
   17288:	ldr	r0, [r4]
   1728c:	ldr	r3, [r0, #20]
   17290:	ldr	r2, [r0, #24]
   17294:	cmp	r3, r2
   17298:	addcc	r2, r3, #1
   1729c:	strcc	r2, [r0, #20]
   172a0:	movcc	r2, #10
   172a4:	strbcc	r2, [r3]
   172a8:	bcs	173b0 <argp_error@@Base+0x1868>
   172ac:	ldr	r7, [r4, #24]
   172b0:	ldr	r3, [sp, #4]
   172b4:	sub	r3, r3, r7
   172b8:	ldr	r2, [sp]
   172bc:	add	r3, r2, r3
   172c0:	str	r3, [sp]
   172c4:	mov	r9, r7
   172c8:	b	1732c <argp_error@@Base+0x17e4>
   172cc:	cmp	r5, r7
   172d0:	moveq	r3, #0
   172d4:	streq	r3, [r4, #20]
   172d8:	addeq	r9, r7, #1
   172dc:	beq	1700c <argp_error@@Base+0x14c4>
   172e0:	bl	10e8c <__ctype_b_loc@plt>
   172e4:	ldr	r2, [r0]
   172e8:	mov	r6, r5
   172ec:	ldrb	r3, [r6, #1]!
   172f0:	lsl	r3, r3, #1
   172f4:	ldrh	r3, [r2, r3]
   172f8:	tst	r3, #1
   172fc:	bne	172ec <argp_error@@Base+0x17a4>
   17300:	b	17220 <argp_error@@Base+0x16d8>
   17304:	ldr	r3, [r4, #32]
   17308:	sub	r3, r3, r5
   1730c:	ldr	r2, [sp, #12]
   17310:	add	r2, r2, #1
   17314:	cmp	r3, r2
   17318:	blt	17248 <argp_error@@Base+0x1700>
   1731c:	mov	r3, #10
   17320:	strb	r3, [r5]
   17324:	mov	r7, r9
   17328:	add	r9, r5, #1
   1732c:	mov	r8, r6
   17330:	ldr	r3, [r4, #12]
   17334:	sub	r2, r6, r9
   17338:	cmp	r2, r3
   1733c:	bge	173cc <argp_error@@Base+0x1884>
   17340:	ldr	r2, [sp]
   17344:	add	r2, r2, #1
   17348:	add	r2, r7, r2
   1734c:	cmp	r6, r2
   17350:	beq	173bc <argp_error@@Base+0x1874>
   17354:	cmp	r3, #0
   17358:	movgt	r5, #0
   1735c:	bgt	17430 <argp_error@@Base+0x18e8>
   17360:	b	173f0 <argp_error@@Base+0x18a8>
   17364:	ldr	r3, [sp, #8]
   17368:	sub	r7, r3, r6
   1736c:	mov	r0, r2
   17370:	mov	r2, r7
   17374:	mov	r1, r6
   17378:	add	r0, r5, r0
   1737c:	bl	10d84 <memmove@plt>
   17380:	ldr	r6, [r4, #12]
   17384:	add	r6, r6, #1
   17388:	add	r6, r5, r6
   1738c:	add	r7, r6, r7
   17390:	ldr	r3, [sp, #4]
   17394:	sub	r3, r7, r3
   17398:	str	r3, [sp]
   1739c:	mov	r3, #10
   173a0:	strb	r3, [r5]
   173a4:	mov	r7, r9
   173a8:	add	r9, r5, #1
   173ac:	b	1732c <argp_error@@Base+0x17e4>
   173b0:	mov	r1, #10
   173b4:	bl	10ef8 <__overflow@plt>
   173b8:	b	172ac <argp_error@@Base+0x1764>
   173bc:	ldr	r2, [r4, #32]
   173c0:	sub	r2, r2, r6
   173c4:	cmp	r3, r2
   173c8:	bgt	17354 <argp_error@@Base+0x180c>
   173cc:	cmp	r3, #0
   173d0:	ble	173f0 <argp_error@@Base+0x18a8>
   173d4:	mov	r3, r9
   173d8:	strb	sl, [r3], #1
   173dc:	sub	r1, r3, r9
   173e0:	ldr	r2, [r4, #12]
   173e4:	cmp	r1, r2
   173e8:	blt	173d8 <argp_error@@Base+0x1890>
   173ec:	mov	r9, r3
   173f0:	cmp	r9, r6
   173f4:	bcc	1745c <argp_error@@Base+0x1914>
   173f8:	sub	r7, r8, r7
   173fc:	ldr	r3, [sp]
   17400:	sub	r7, r3, r7
   17404:	add	r7, r9, r7
   17408:	str	r7, [r4, #28]
   1740c:	ldr	r3, [r4, #12]
   17410:	cmp	r3, #0
   17414:	mvneq	r3, #0
   17418:	str	r3, [r4, #20]
   1741c:	b	1700c <argp_error@@Base+0x14c4>
   17420:	add	r5, r5, #1
   17424:	ldr	r3, [r4, #12]
   17428:	cmp	r3, r5
   1742c:	ble	173f0 <argp_error@@Base+0x18a8>
   17430:	ldr	r0, [r4]
   17434:	ldr	r3, [r0, #20]
   17438:	ldr	r2, [r0, #24]
   1743c:	cmp	r3, r2
   17440:	addcc	r2, r3, #1
   17444:	strcc	r2, [r0, #20]
   17448:	strbcc	sl, [r3]
   1744c:	bcc	17420 <argp_error@@Base+0x18d8>
   17450:	mov	r1, sl
   17454:	bl	10ef8 <__overflow@plt>
   17458:	b	17420 <argp_error@@Base+0x18d8>
   1745c:	ldr	r3, [sp]
   17460:	add	r2, r7, r3
   17464:	sub	r2, r2, r8
   17468:	mov	r1, r6
   1746c:	mov	r0, r9
   17470:	bl	10d84 <memmove@plt>
   17474:	b	173f8 <argp_error@@Base+0x18b0>
   17478:	str	fp, [sp, #8]
   1747c:	str	r9, [sp, #4]
   17480:	sub	r3, fp, r9
   17484:	str	r3, [sp]
   17488:	mov	r2, r3
   1748c:	mov	r1, #10
   17490:	mov	r0, r9
   17494:	bl	10eec <memchr@plt>
   17498:	mov	r7, r0
   1749c:	b	16fd8 <argp_error@@Base+0x1490>
   174a0:	mov	r1, r5
   174a4:	b	17128 <argp_error@@Base+0x15e0>
   174a8:	push	{r4, lr}
   174ac:	mov	r4, r0
   174b0:	bl	16f44 <argp_error@@Base+0x13fc>
   174b4:	ldr	r2, [r4, #28]
   174b8:	ldr	r0, [r4, #24]
   174bc:	cmp	r2, r0
   174c0:	bls	174d4 <argp_error@@Base+0x198c>
   174c4:	ldr	r3, [r4]
   174c8:	sub	r2, r2, r0
   174cc:	mov	r1, #1
   174d0:	bl	10dcc <fwrite_unlocked@plt>
   174d4:	ldr	r0, [r4, #24]
   174d8:	bl	123b8 <argp_parse@@Base+0xbf4>
   174dc:	mov	r0, r4
   174e0:	bl	123b8 <argp_parse@@Base+0xbf4>
   174e4:	pop	{r4, pc}
   174e8:	ldr	r3, [r0, #32]
   174ec:	ldr	r2, [r0, #28]
   174f0:	sub	r3, r3, r2
   174f4:	cmp	r3, r1
   174f8:	bcc	17504 <argp_error@@Base+0x19bc>
   174fc:	mov	r0, #1
   17500:	bx	lr
   17504:	push	{r4, r5, r6, lr}
   17508:	mov	r5, r1
   1750c:	mov	r4, r0
   17510:	bl	16f44 <argp_error@@Base+0x13fc>
   17514:	ldr	r0, [r4, #24]
   17518:	ldr	r2, [r4, #28]
   1751c:	ldr	r3, [r4]
   17520:	sub	r2, r2, r0
   17524:	mov	r1, #1
   17528:	bl	10dcc <fwrite_unlocked@plt>
   1752c:	ldr	r2, [r4, #28]
   17530:	ldr	r3, [r4, #24]
   17534:	sub	r1, r2, r3
   17538:	cmp	r0, r1
   1753c:	bne	17580 <argp_error@@Base+0x1a38>
   17540:	str	r3, [r4, #28]
   17544:	mov	r2, #0
   17548:	str	r2, [r4, #16]
   1754c:	ldr	r1, [r4, #32]
   17550:	sub	r1, r1, r3
   17554:	cmp	r5, r1
   17558:	bls	17578 <argp_error@@Base+0x1a30>
   1755c:	adds	r5, r5, r1
   17560:	bcc	175ac <argp_error@@Base+0x1a64>
   17564:	bl	10ec8 <__errno_location@plt>
   17568:	mov	r3, #12
   1756c:	str	r3, [r0]
   17570:	mov	r0, #0
   17574:	pop	{r4, r5, r6, pc}
   17578:	mov	r0, #1
   1757c:	pop	{r4, r5, r6, pc}
   17580:	sub	r2, r2, r0
   17584:	str	r2, [r4, #28]
   17588:	ldr	r1, [r4, #16]
   1758c:	sub	r1, r1, r0
   17590:	str	r1, [r4, #16]
   17594:	sub	r2, r2, r3
   17598:	add	r1, r3, r0
   1759c:	mov	r0, r3
   175a0:	bl	10d84 <memmove@plt>
   175a4:	mov	r0, #0
   175a8:	pop	{r4, r5, r6, pc}
   175ac:	mov	r1, r5
   175b0:	mov	r0, r3
   175b4:	bl	16e7c <argp_error@@Base+0x1334>
   175b8:	cmp	r0, #0
   175bc:	beq	17564 <argp_error@@Base+0x1a1c>
   175c0:	str	r0, [r4, #24]
   175c4:	add	r5, r0, r5
   175c8:	str	r5, [r4, #32]
   175cc:	str	r0, [r4, #28]
   175d0:	mov	r0, #1
   175d4:	pop	{r4, r5, r6, pc}
   175d8:	push	{r1, r2, r3}
   175dc:	push	{r4, r5, r6, r7, lr}
   175e0:	sub	sp, sp, #8
   175e4:	mov	r5, r0
   175e8:	ldr	r7, [sp, #28]
   175ec:	mov	r1, #150	; 0x96
   175f0:	add	r6, sp, #32
   175f4:	mov	r0, r5
   175f8:	bl	174e8 <argp_error@@Base+0x19a0>
   175fc:	cmp	r0, #0
   17600:	beq	17634 <argp_error@@Base+0x1aec>
   17604:	str	r6, [sp, #4]
   17608:	ldr	r0, [r5, #28]
   1760c:	ldr	r4, [r5, #32]
   17610:	sub	r4, r4, r0
   17614:	mov	r3, r6
   17618:	mov	r2, r7
   1761c:	mov	r1, r4
   17620:	bl	10f34 <vsnprintf@plt>
   17624:	cmp	r4, r0
   17628:	bhi	1763c <argp_error@@Base+0x1af4>
   1762c:	add	r1, r0, #1
   17630:	b	175f4 <argp_error@@Base+0x1aac>
   17634:	mvn	r0, #0
   17638:	b	17648 <argp_error@@Base+0x1b00>
   1763c:	ldr	r3, [r5, #28]
   17640:	add	r3, r3, r0
   17644:	str	r3, [r5, #28]
   17648:	add	sp, sp, #8
   1764c:	pop	{r4, r5, r6, r7, lr}
   17650:	add	sp, sp, #12
   17654:	bx	lr
   17658:	push	{r4, r5, r6, lr}
   1765c:	mov	r6, r0
   17660:	mov	r5, r1
   17664:	subs	r4, r2, #0
   17668:	beq	17694 <argp_error@@Base+0x1b4c>
   1766c:	mov	r1, r4
   17670:	mvn	r0, #0
   17674:	bl	176a4 <argp_error@@Base+0x1b5c>
   17678:	cmp	r0, r5
   1767c:	bcs	17694 <argp_error@@Base+0x1b4c>
   17680:	bl	10ec8 <__errno_location@plt>
   17684:	mov	r3, #12
   17688:	str	r3, [r0]
   1768c:	mov	r0, #0
   17690:	pop	{r4, r5, r6, pc}
   17694:	mul	r1, r5, r4
   17698:	mov	r0, r6
   1769c:	bl	16e7c <argp_error@@Base+0x1334>
   176a0:	pop	{r4, r5, r6, pc}
   176a4:	subs	r2, r1, #1
   176a8:	bxeq	lr
   176ac:	bcc	17884 <argp_error@@Base+0x1d3c>
   176b0:	cmp	r0, r1
   176b4:	bls	17868 <argp_error@@Base+0x1d20>
   176b8:	tst	r1, r2
   176bc:	beq	17874 <argp_error@@Base+0x1d2c>
   176c0:	clz	r3, r0
   176c4:	clz	r2, r1
   176c8:	sub	r3, r2, r3
   176cc:	rsbs	r3, r3, #31
   176d0:	addne	r3, r3, r3, lsl #1
   176d4:	mov	r2, #0
   176d8:	addne	pc, pc, r3, lsl #2
   176dc:	nop			; (mov r0, r0)
   176e0:	cmp	r0, r1, lsl #31
   176e4:	adc	r2, r2, r2
   176e8:	subcs	r0, r0, r1, lsl #31
   176ec:	cmp	r0, r1, lsl #30
   176f0:	adc	r2, r2, r2
   176f4:	subcs	r0, r0, r1, lsl #30
   176f8:	cmp	r0, r1, lsl #29
   176fc:	adc	r2, r2, r2
   17700:	subcs	r0, r0, r1, lsl #29
   17704:	cmp	r0, r1, lsl #28
   17708:	adc	r2, r2, r2
   1770c:	subcs	r0, r0, r1, lsl #28
   17710:	cmp	r0, r1, lsl #27
   17714:	adc	r2, r2, r2
   17718:	subcs	r0, r0, r1, lsl #27
   1771c:	cmp	r0, r1, lsl #26
   17720:	adc	r2, r2, r2
   17724:	subcs	r0, r0, r1, lsl #26
   17728:	cmp	r0, r1, lsl #25
   1772c:	adc	r2, r2, r2
   17730:	subcs	r0, r0, r1, lsl #25
   17734:	cmp	r0, r1, lsl #24
   17738:	adc	r2, r2, r2
   1773c:	subcs	r0, r0, r1, lsl #24
   17740:	cmp	r0, r1, lsl #23
   17744:	adc	r2, r2, r2
   17748:	subcs	r0, r0, r1, lsl #23
   1774c:	cmp	r0, r1, lsl #22
   17750:	adc	r2, r2, r2
   17754:	subcs	r0, r0, r1, lsl #22
   17758:	cmp	r0, r1, lsl #21
   1775c:	adc	r2, r2, r2
   17760:	subcs	r0, r0, r1, lsl #21
   17764:	cmp	r0, r1, lsl #20
   17768:	adc	r2, r2, r2
   1776c:	subcs	r0, r0, r1, lsl #20
   17770:	cmp	r0, r1, lsl #19
   17774:	adc	r2, r2, r2
   17778:	subcs	r0, r0, r1, lsl #19
   1777c:	cmp	r0, r1, lsl #18
   17780:	adc	r2, r2, r2
   17784:	subcs	r0, r0, r1, lsl #18
   17788:	cmp	r0, r1, lsl #17
   1778c:	adc	r2, r2, r2
   17790:	subcs	r0, r0, r1, lsl #17
   17794:	cmp	r0, r1, lsl #16
   17798:	adc	r2, r2, r2
   1779c:	subcs	r0, r0, r1, lsl #16
   177a0:	cmp	r0, r1, lsl #15
   177a4:	adc	r2, r2, r2
   177a8:	subcs	r0, r0, r1, lsl #15
   177ac:	cmp	r0, r1, lsl #14
   177b0:	adc	r2, r2, r2
   177b4:	subcs	r0, r0, r1, lsl #14
   177b8:	cmp	r0, r1, lsl #13
   177bc:	adc	r2, r2, r2
   177c0:	subcs	r0, r0, r1, lsl #13
   177c4:	cmp	r0, r1, lsl #12
   177c8:	adc	r2, r2, r2
   177cc:	subcs	r0, r0, r1, lsl #12
   177d0:	cmp	r0, r1, lsl #11
   177d4:	adc	r2, r2, r2
   177d8:	subcs	r0, r0, r1, lsl #11
   177dc:	cmp	r0, r1, lsl #10
   177e0:	adc	r2, r2, r2
   177e4:	subcs	r0, r0, r1, lsl #10
   177e8:	cmp	r0, r1, lsl #9
   177ec:	adc	r2, r2, r2
   177f0:	subcs	r0, r0, r1, lsl #9
   177f4:	cmp	r0, r1, lsl #8
   177f8:	adc	r2, r2, r2
   177fc:	subcs	r0, r0, r1, lsl #8
   17800:	cmp	r0, r1, lsl #7
   17804:	adc	r2, r2, r2
   17808:	subcs	r0, r0, r1, lsl #7
   1780c:	cmp	r0, r1, lsl #6
   17810:	adc	r2, r2, r2
   17814:	subcs	r0, r0, r1, lsl #6
   17818:	cmp	r0, r1, lsl #5
   1781c:	adc	r2, r2, r2
   17820:	subcs	r0, r0, r1, lsl #5
   17824:	cmp	r0, r1, lsl #4
   17828:	adc	r2, r2, r2
   1782c:	subcs	r0, r0, r1, lsl #4
   17830:	cmp	r0, r1, lsl #3
   17834:	adc	r2, r2, r2
   17838:	subcs	r0, r0, r1, lsl #3
   1783c:	cmp	r0, r1, lsl #2
   17840:	adc	r2, r2, r2
   17844:	subcs	r0, r0, r1, lsl #2
   17848:	cmp	r0, r1, lsl #1
   1784c:	adc	r2, r2, r2
   17850:	subcs	r0, r0, r1, lsl #1
   17854:	cmp	r0, r1
   17858:	adc	r2, r2, r2
   1785c:	subcs	r0, r0, r1
   17860:	mov	r0, r2
   17864:	bx	lr
   17868:	moveq	r0, #1
   1786c:	movne	r0, #0
   17870:	bx	lr
   17874:	clz	r2, r1
   17878:	rsb	r2, r2, #31
   1787c:	lsr	r0, r0, r2
   17880:	bx	lr
   17884:	cmp	r0, #0
   17888:	mvnne	r0, #0
   1788c:	b	17af0 <argp_error@@Base+0x1fa8>
   17890:	cmp	r1, #0
   17894:	beq	17884 <argp_error@@Base+0x1d3c>
   17898:	push	{r0, r1, lr}
   1789c:	bl	176a4 <argp_error@@Base+0x1b5c>
   178a0:	pop	{r1, r2, lr}
   178a4:	mul	r3, r2, r0
   178a8:	sub	r1, r1, r3
   178ac:	bx	lr
   178b0:	cmp	r1, #0
   178b4:	beq	17ac0 <argp_error@@Base+0x1f78>
   178b8:	eor	ip, r0, r1
   178bc:	rsbmi	r1, r1, #0
   178c0:	subs	r2, r1, #1
   178c4:	beq	17a8c <argp_error@@Base+0x1f44>
   178c8:	movs	r3, r0
   178cc:	rsbmi	r3, r0, #0
   178d0:	cmp	r3, r1
   178d4:	bls	17a98 <argp_error@@Base+0x1f50>
   178d8:	tst	r1, r2
   178dc:	beq	17aa8 <argp_error@@Base+0x1f60>
   178e0:	clz	r2, r3
   178e4:	clz	r0, r1
   178e8:	sub	r2, r0, r2
   178ec:	rsbs	r2, r2, #31
   178f0:	addne	r2, r2, r2, lsl #1
   178f4:	mov	r0, #0
   178f8:	addne	pc, pc, r2, lsl #2
   178fc:	nop			; (mov r0, r0)
   17900:	cmp	r3, r1, lsl #31
   17904:	adc	r0, r0, r0
   17908:	subcs	r3, r3, r1, lsl #31
   1790c:	cmp	r3, r1, lsl #30
   17910:	adc	r0, r0, r0
   17914:	subcs	r3, r3, r1, lsl #30
   17918:	cmp	r3, r1, lsl #29
   1791c:	adc	r0, r0, r0
   17920:	subcs	r3, r3, r1, lsl #29
   17924:	cmp	r3, r1, lsl #28
   17928:	adc	r0, r0, r0
   1792c:	subcs	r3, r3, r1, lsl #28
   17930:	cmp	r3, r1, lsl #27
   17934:	adc	r0, r0, r0
   17938:	subcs	r3, r3, r1, lsl #27
   1793c:	cmp	r3, r1, lsl #26
   17940:	adc	r0, r0, r0
   17944:	subcs	r3, r3, r1, lsl #26
   17948:	cmp	r3, r1, lsl #25
   1794c:	adc	r0, r0, r0
   17950:	subcs	r3, r3, r1, lsl #25
   17954:	cmp	r3, r1, lsl #24
   17958:	adc	r0, r0, r0
   1795c:	subcs	r3, r3, r1, lsl #24
   17960:	cmp	r3, r1, lsl #23
   17964:	adc	r0, r0, r0
   17968:	subcs	r3, r3, r1, lsl #23
   1796c:	cmp	r3, r1, lsl #22
   17970:	adc	r0, r0, r0
   17974:	subcs	r3, r3, r1, lsl #22
   17978:	cmp	r3, r1, lsl #21
   1797c:	adc	r0, r0, r0
   17980:	subcs	r3, r3, r1, lsl #21
   17984:	cmp	r3, r1, lsl #20
   17988:	adc	r0, r0, r0
   1798c:	subcs	r3, r3, r1, lsl #20
   17990:	cmp	r3, r1, lsl #19
   17994:	adc	r0, r0, r0
   17998:	subcs	r3, r3, r1, lsl #19
   1799c:	cmp	r3, r1, lsl #18
   179a0:	adc	r0, r0, r0
   179a4:	subcs	r3, r3, r1, lsl #18
   179a8:	cmp	r3, r1, lsl #17
   179ac:	adc	r0, r0, r0
   179b0:	subcs	r3, r3, r1, lsl #17
   179b4:	cmp	r3, r1, lsl #16
   179b8:	adc	r0, r0, r0
   179bc:	subcs	r3, r3, r1, lsl #16
   179c0:	cmp	r3, r1, lsl #15
   179c4:	adc	r0, r0, r0
   179c8:	subcs	r3, r3, r1, lsl #15
   179cc:	cmp	r3, r1, lsl #14
   179d0:	adc	r0, r0, r0
   179d4:	subcs	r3, r3, r1, lsl #14
   179d8:	cmp	r3, r1, lsl #13
   179dc:	adc	r0, r0, r0
   179e0:	subcs	r3, r3, r1, lsl #13
   179e4:	cmp	r3, r1, lsl #12
   179e8:	adc	r0, r0, r0
   179ec:	subcs	r3, r3, r1, lsl #12
   179f0:	cmp	r3, r1, lsl #11
   179f4:	adc	r0, r0, r0
   179f8:	subcs	r3, r3, r1, lsl #11
   179fc:	cmp	r3, r1, lsl #10
   17a00:	adc	r0, r0, r0
   17a04:	subcs	r3, r3, r1, lsl #10
   17a08:	cmp	r3, r1, lsl #9
   17a0c:	adc	r0, r0, r0
   17a10:	subcs	r3, r3, r1, lsl #9
   17a14:	cmp	r3, r1, lsl #8
   17a18:	adc	r0, r0, r0
   17a1c:	subcs	r3, r3, r1, lsl #8
   17a20:	cmp	r3, r1, lsl #7
   17a24:	adc	r0, r0, r0
   17a28:	subcs	r3, r3, r1, lsl #7
   17a2c:	cmp	r3, r1, lsl #6
   17a30:	adc	r0, r0, r0
   17a34:	subcs	r3, r3, r1, lsl #6
   17a38:	cmp	r3, r1, lsl #5
   17a3c:	adc	r0, r0, r0
   17a40:	subcs	r3, r3, r1, lsl #5
   17a44:	cmp	r3, r1, lsl #4
   17a48:	adc	r0, r0, r0
   17a4c:	subcs	r3, r3, r1, lsl #4
   17a50:	cmp	r3, r1, lsl #3
   17a54:	adc	r0, r0, r0
   17a58:	subcs	r3, r3, r1, lsl #3
   17a5c:	cmp	r3, r1, lsl #2
   17a60:	adc	r0, r0, r0
   17a64:	subcs	r3, r3, r1, lsl #2
   17a68:	cmp	r3, r1, lsl #1
   17a6c:	adc	r0, r0, r0
   17a70:	subcs	r3, r3, r1, lsl #1
   17a74:	cmp	r3, r1
   17a78:	adc	r0, r0, r0
   17a7c:	subcs	r3, r3, r1
   17a80:	cmp	ip, #0
   17a84:	rsbmi	r0, r0, #0
   17a88:	bx	lr
   17a8c:	teq	ip, r0
   17a90:	rsbmi	r0, r0, #0
   17a94:	bx	lr
   17a98:	movcc	r0, #0
   17a9c:	asreq	r0, ip, #31
   17aa0:	orreq	r0, r0, #1
   17aa4:	bx	lr
   17aa8:	clz	r2, r1
   17aac:	rsb	r2, r2, #31
   17ab0:	cmp	ip, #0
   17ab4:	lsr	r0, r3, r2
   17ab8:	rsbmi	r0, r0, #0
   17abc:	bx	lr
   17ac0:	cmp	r0, #0
   17ac4:	mvngt	r0, #-2147483648	; 0x80000000
   17ac8:	movlt	r0, #-2147483648	; 0x80000000
   17acc:	b	17af0 <argp_error@@Base+0x1fa8>
   17ad0:	cmp	r1, #0
   17ad4:	beq	17ac0 <argp_error@@Base+0x1f78>
   17ad8:	push	{r0, r1, lr}
   17adc:	bl	178b8 <argp_error@@Base+0x1d70>
   17ae0:	pop	{r1, r2, lr}
   17ae4:	mul	r3, r2, r0
   17ae8:	sub	r1, r1, r3
   17aec:	bx	lr
   17af0:	push	{r1, lr}
   17af4:	mov	r0, #8
   17af8:	bl	10d54 <raise@plt>
   17afc:	pop	{r1, pc}
   17b00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17b04:	mov	r7, r0
   17b08:	ldr	r6, [pc, #72]	; 17b58 <argp_error@@Base+0x2010>
   17b0c:	ldr	r5, [pc, #72]	; 17b5c <argp_error@@Base+0x2014>
   17b10:	add	r6, pc, r6
   17b14:	add	r5, pc, r5
   17b18:	sub	r6, r6, r5
   17b1c:	mov	r8, r1
   17b20:	mov	r9, r2
   17b24:	bl	10d1c <calloc@plt-0x20>
   17b28:	asrs	r6, r6, #2
   17b2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b30:	mov	r4, #0
   17b34:	add	r4, r4, #1
   17b38:	ldr	r3, [r5], #4
   17b3c:	mov	r2, r9
   17b40:	mov	r1, r8
   17b44:	mov	r0, r7
   17b48:	blx	r3
   17b4c:	cmp	r6, r4
   17b50:	bne	17b34 <argp_error@@Base+0x1fec>
   17b54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b58:	strdeq	r1, [r1], -r0
   17b5c:	andeq	r1, r1, r8, ror #7
   17b60:	bx	lr

Disassembly of section .fini:

00017b64 <.fini>:
   17b64:	push	{r3, lr}
   17b68:	pop	{r3, pc}
