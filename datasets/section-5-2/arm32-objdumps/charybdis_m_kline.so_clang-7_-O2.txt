
../repos/charybdis/modules/.libs/m_kline.so:     file format elf32-littlearm


Disassembly of section .init:

00000d48 <_init>:
 d48:	push	{r3, lr}
 d4c:	bl	f6c <call_weak_fn>
 d50:	pop	{r3, pc}

Disassembly of section .plt:

00000d54 <.plt>:
 d54:	push	{lr}		; (str lr, [sp, #-4]!)
 d58:	ldr	lr, [pc, #4]	; d64 <.plt+0x10>
 d5c:	add	lr, pc, lr
 d60:	ldr	pc, [lr, #8]!
 d64:	.word	0x0001329c

00000d68 <propagate_generic@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #77824	; 0x13000
 d70:	ldr	pc, [ip, #668]!	; 0x29c

00000d74 <make_conf@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #77824	; 0x13000
 d7c:	ldr	pc, [ip, #660]!	; 0x294

00000d80 <parse_netmask_strict@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #77824	; 0x13000
 d88:	ldr	pc, [ip, #652]!	; 0x28c

00000d8c <rb_current_time@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #77824	; 0x13000
 d94:	ldr	pc, [ip, #644]!	; 0x284

00000d98 <__cxa_finalize@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #77824	; 0x13000
 da0:	ldr	pc, [ip, #636]!	; 0x27c

00000da4 <strtol@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #77824	; 0x13000
 dac:	ldr	pc, [ip, #628]!	; 0x274

00000db0 <sendto_one@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #77824	; 0x13000
 db8:	ldr	pc, [ip, #620]!	; 0x26c

00000dbc <find_conf_by_address@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #77824	; 0x13000
 dc4:	ldr	pc, [ip, #612]!	; 0x264

00000dc8 <add_temp_kline@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #77824	; 0x13000
 dd0:	ldr	pc, [ip, #604]!	; 0x25c

00000dd4 <replace_old_ban@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #77824	; 0x13000
 ddc:	ldr	pc, [ip, #596]!	; 0x254

00000de0 <rb_outofmemory@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #77824	; 0x13000
 de8:	ldr	pc, [ip, #588]!	; 0x24c

00000dec <operhash_delete@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #77824	; 0x13000
 df4:	ldr	pc, [ip, #580]!	; 0x244

00000df8 <sendto_realops_snomask@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #77824	; 0x13000
 e00:	ldr	pc, [ip, #572]!	; 0x23c

00000e04 <bandb_add@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #77824	; 0x13000
 e0c:	ldr	pc, [ip, #564]!	; 0x234

00000e10 <deactivate_conf@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #77824	; 0x13000
 e18:	ldr	pc, [ip, #556]!	; 0x22c

00000e1c <get_oper_name@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #77824	; 0x13000
 e24:	ldr	pc, [ip, #548]!	; 0x224

00000e28 <rb_free_rb_dlink_node@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #77824	; 0x13000
 e30:	ldr	pc, [ip, #540]!	; 0x21c

00000e34 <cluster_generic@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #77824	; 0x13000
 e3c:	ldr	pc, [ip, #532]!	; 0x214

00000e40 <operhash_add@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #77824	; 0x13000
 e48:	ldr	pc, [ip, #524]!	; 0x20c

00000e4c <check_one_kline@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #77824	; 0x13000
 e54:	ldr	pc, [ip, #516]!	; 0x204

00000e58 <strcpy@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #77824	; 0x13000
 e60:	ldr	pc, [ip, #508]!	; 0x1fc

00000e64 <sendto_server@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #77824	; 0x13000
 e6c:	ldr	pc, [ip, #500]!	; 0x1f4

00000e70 <rb_set_time@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #77824	; 0x13000
 e78:	ldr	pc, [ip, #492]!	; 0x1ec

00000e7c <valid_wild_card@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #77824	; 0x13000
 e84:	ldr	pc, [ip, #484]!	; 0x1e4

00000e88 <malloc@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #77824	; 0x13000
 e90:	ldr	pc, [ip, #476]!	; 0x1dc

00000e94 <add_conf_by_address@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #77824	; 0x13000
 e9c:	ldr	pc, [ip, #468]!	; 0x1d4

00000ea0 <__gmon_start__@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #77824	; 0x13000
 ea8:	ldr	pc, [ip, #460]!	; 0x1cc

00000eac <rb_make_rb_dlink_node@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #77824	; 0x13000
 eb4:	ldr	pc, [ip, #452]!	; 0x1c4

00000eb8 <strlen@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #77824	; 0x13000
 ec0:	ldr	pc, [ip, #444]!	; 0x1bc

00000ec4 <strchr@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #77824	; 0x13000
 ecc:	ldr	pc, [ip, #436]!	; 0x1b4

00000ed0 <delete_one_address_conf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #77824	; 0x13000
 ed8:	ldr	pc, [ip, #428]!	; 0x1ac

00000edc <ilog@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #77824	; 0x13000
 ee4:	ldr	pc, [ip, #420]!	; 0x1a4

00000ee8 <match@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #77824	; 0x13000
 ef0:	ldr	pc, [ip, #412]!	; 0x19c

00000ef4 <valid_temp_time@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #77824	; 0x13000
 efc:	ldr	pc, [ip, #404]!	; 0x194

00000f00 <remove_reject_mask@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #77824	; 0x13000
 f08:	ldr	pc, [ip, #396]!	; 0x18c

00000f0c <sendto_one_notice@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #77824	; 0x13000
 f14:	ldr	pc, [ip, #388]!	; 0x184

00000f18 <bandb_del@plt>:
 f18:	add	ip, pc, #0, 12
 f1c:	add	ip, ip, #77824	; 0x13000
 f20:	ldr	pc, [ip, #380]!	; 0x17c

00000f24 <find_exact_conf_by_address@plt>:
 f24:	add	ip, pc, #0, 12
 f28:	add	ip, ip, #77824	; 0x13000
 f2c:	ldr	pc, [ip, #372]!	; 0x174

00000f30 <rb_strlcpy@plt>:
 f30:	add	ip, pc, #0, 12
 f34:	add	ip, ip, #77824	; 0x13000
 f38:	ldr	pc, [ip, #364]!	; 0x16c

00000f3c <find_shared_conf@plt>:
 f3c:	add	ip, pc, #0, 12
 f40:	add	ip, ip, #77824	; 0x13000
 f44:	ldr	pc, [ip, #356]!	; 0x164

00000f48 <privilegeset_in_set@plt>:
 f48:	add	ip, pc, #0, 12
 f4c:	add	ip, ip, #77824	; 0x13000
 f50:	ldr	pc, [ip, #348]!	; 0x15c

00000f54 <irccmp@plt>:
 f54:	add	ip, pc, #0, 12
 f58:	add	ip, ip, #77824	; 0x13000
 f5c:	ldr	pc, [ip, #340]!	; 0x154

00000f60 <__assert_fail@plt>:
 f60:	add	ip, pc, #0, 12
 f64:	add	ip, ip, #77824	; 0x13000
 f68:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00000f6c <call_weak_fn>:
     f6c:	ldr	r3, [pc, #20]	; f88 <call_weak_fn+0x1c>
     f70:	ldr	r2, [pc, #20]	; f8c <call_weak_fn+0x20>
     f74:	add	r3, pc, r3
     f78:	ldr	r2, [r3, r2]
     f7c:	cmp	r2, #0
     f80:	bxeq	lr
     f84:	b	ea0 <__gmon_start__@plt>
     f88:	.word	0x00013084
     f8c:	.word	0x000000d0

00000f90 <deregister_tm_clones>:
     f90:	ldr	r0, [pc, #44]	; fc4 <deregister_tm_clones+0x34>
     f94:	ldr	r3, [pc, #44]	; fc8 <deregister_tm_clones+0x38>
     f98:	add	r0, pc, r0
     f9c:	add	r3, pc, r3
     fa0:	cmp	r3, r0
     fa4:	ldr	r3, [pc, #32]	; fcc <deregister_tm_clones+0x3c>
     fa8:	add	r3, pc, r3
     fac:	bxeq	lr
     fb0:	ldr	r2, [pc, #24]	; fd0 <deregister_tm_clones+0x40>
     fb4:	ldr	r3, [r3, r2]
     fb8:	cmp	r3, #0
     fbc:	bxeq	lr
     fc0:	bx	r3
     fc4:	.word	0x0001320c
     fc8:	.word	0x00013208
     fcc:	.word	0x00013050
     fd0:	.word	0x000000c0

00000fd4 <register_tm_clones>:
     fd4:	ldr	r0, [pc, #56]	; 1014 <register_tm_clones+0x40>
     fd8:	ldr	r3, [pc, #56]	; 1018 <register_tm_clones+0x44>
     fdc:	add	r0, pc, r0
     fe0:	add	r3, pc, r3
     fe4:	sub	r1, r3, r0
     fe8:	ldr	r3, [pc, #44]	; 101c <register_tm_clones+0x48>
     fec:	asr	r1, r1, #2
     ff0:	add	r3, pc, r3
     ff4:	add	r1, r1, r1, lsr #31
     ff8:	asrs	r1, r1, #1
     ffc:	bxeq	lr
    1000:	ldr	r2, [pc, #24]	; 1020 <register_tm_clones+0x4c>
    1004:	ldr	r3, [r3, r2]
    1008:	cmp	r3, #0
    100c:	bxeq	lr
    1010:	bx	r3
    1014:	.word	0x000131c8
    1018:	.word	0x000131c4
    101c:	.word	0x00013008
    1020:	.word	0x000000e0

00001024 <__do_global_dtors_aux>:
    1024:	ldr	r3, [pc, #76]	; 1078 <__do_global_dtors_aux+0x54>
    1028:	ldr	r2, [pc, #76]	; 107c <__do_global_dtors_aux+0x58>
    102c:	add	r3, pc, r3
    1030:	add	r2, pc, r2
    1034:	ldrb	r3, [r3]
    1038:	cmp	r3, #0
    103c:	bxne	lr
    1040:	ldr	r3, [pc, #56]	; 1080 <__do_global_dtors_aux+0x5c>
    1044:	push	{r4, lr}
    1048:	ldr	r3, [r2, r3]
    104c:	cmp	r3, #0
    1050:	beq	1060 <__do_global_dtors_aux+0x3c>
    1054:	ldr	r3, [pc, #40]	; 1084 <__do_global_dtors_aux+0x60>
    1058:	ldr	r0, [pc, r3]
    105c:	bl	d98 <__cxa_finalize@plt>
    1060:	bl	f90 <deregister_tm_clones>
    1064:	ldr	r3, [pc, #28]	; 1088 <__do_global_dtors_aux+0x64>
    1068:	mov	r2, #1
    106c:	add	r3, pc, r3
    1070:	strb	r2, [r3]
    1074:	pop	{r4, pc}
    1078:	.word	0x00013178
    107c:	.word	0x00012fc8
    1080:	.word	0x000000b8
    1084:	.word	0x0001308c
    1088:	.word	0x00013138

0000108c <frame_dummy>:
    108c:	b	fd4 <register_tm_clones>

00001090 <ms_kline>:
    1090:	push	{r4, r5, r6, r7, fp, lr}
    1094:	add	fp, sp, #16
    1098:	sub	sp, sp, #24
    109c:	ldr	r7, [fp, #8]
    10a0:	mov	r4, r2
    10a4:	mov	r1, #0
    10a8:	mov	r2, #10
    10ac:	mov	r6, r3
    10b0:	ldr	r0, [r7, #8]
    10b4:	bl	da4 <strtol@plt>
    10b8:	cmp	r6, #6
    10bc:	blt	10d8 <ms_kline+0x48>
    10c0:	mov	r5, r0
    10c4:	ldr	r0, [r7, #20]
    10c8:	cmp	r0, #0
    10cc:	ldrbne	r1, [r0]
    10d0:	cmpne	r1, #0
    10d4:	bne	10e0 <ms_kline+0x50>
    10d8:	sub	sp, fp, #16
    10dc:	pop	{r4, r5, r6, r7, fp, pc}
    10e0:	ldr	r1, [pc, #140]	; 1174 <ms_kline+0xe4>
    10e4:	ldr	r1, [pc, r1]
    10e8:	ldr	r2, [r7, #4]
    10ec:	ldr	ip, [r7, #12]
    10f0:	ldr	r6, [r7, #16]
    10f4:	ldr	r3, [r1]
    10f8:	ldr	r1, [pc, #120]	; 1178 <ms_kline+0xe8>
    10fc:	add	r1, pc, r1
    1100:	stm	sp, {r1, r5, ip}
    1104:	str	r0, [sp, #16]
    1108:	str	r6, [sp, #12]
    110c:	mov	r0, r4
    1110:	ldr	r1, [pc, #100]	; 117c <ms_kline+0xec>
    1114:	add	r1, pc, r1
    1118:	bl	d68 <propagate_generic@plt>
    111c:	ldr	r0, [r7, #4]
    1120:	ldr	r1, [pc, #88]	; 1180 <ms_kline+0xf0>
    1124:	ldr	r1, [pc, r1]
    1128:	add	r1, r1, #88	; 0x58
    112c:	bl	ee8 <match@plt>
    1130:	cmp	r0, #0
    1134:	beq	10d8 <ms_kline+0x48>
    1138:	ldrh	r0, [r4, #80]	; 0x50
    113c:	cmp	r0, #64	; 0x40
    1140:	bne	10d8 <ms_kline+0x48>
    1144:	ldr	r0, [r4, #24]
    1148:	cmp	r0, #0
    114c:	beq	10d8 <ms_kline+0x48>
    1150:	ldr	r0, [r7, #20]
    1154:	ldr	r2, [r7, #12]
    1158:	ldr	r3, [r7, #16]
    115c:	mov	r1, r5
    1160:	str	r0, [sp]
    1164:	mov	r0, r4
    1168:	bl	25f4 <handle_remote_kline>
    116c:	sub	sp, fp, #16
    1170:	pop	{r4, r5, r6, r7, fp, pc}
    1174:	.word	0x00012fec
    1178:	.word	0x00001bc1
    117c:	.word	0x00001afa
    1180:	.word	0x00012fb8

00001184 <me_kline>:
    1184:	push	{r4, r5, fp, lr}
    1188:	add	fp, sp, #8
    118c:	sub	sp, sp, #8
    1190:	ldrh	r0, [r2, #80]	; 0x50
    1194:	cmp	r0, #64	; 0x40
    1198:	bne	11dc <me_kline+0x58>
    119c:	ldr	r0, [r2, #24]
    11a0:	mov	r4, r2
    11a4:	cmp	r0, #0
    11a8:	beq	11dc <me_kline+0x58>
    11ac:	ldr	r5, [fp, #8]
    11b0:	mov	r1, #0
    11b4:	mov	r2, #10
    11b8:	ldr	r0, [r5, #4]
    11bc:	bl	da4 <strtol@plt>
    11c0:	mov	r1, r0
    11c4:	ldr	r0, [r5, #16]
    11c8:	ldr	r2, [r5, #8]
    11cc:	ldr	r3, [r5, #12]
    11d0:	str	r0, [sp]
    11d4:	mov	r0, r4
    11d8:	bl	25f4 <handle_remote_kline>
    11dc:	sub	sp, fp, #8
    11e0:	pop	{r4, r5, fp, pc}

000011e4 <mo_kline>:
    11e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    11e8:	add	fp, sp, #28
    11ec:	sub	sp, sp, #100	; 0x64
    11f0:	ldr	r0, [r2, #24]
    11f4:	ldr	r1, [pc, #2336]	; 1b1c <mo_kline+0x938>
    11f8:	mov	r4, r2
    11fc:	ldr	r1, [pc, r1]
    1200:	ldr	r8, [r1, #324]	; 0x144
    1204:	cmp	r8, #0
    1208:	mov	sl, r8
    120c:	movwne	sl, #1
    1210:	cmp	r0, #0
    1214:	ldrne	r0, [r0, #36]	; 0x24
    1218:	cmpne	r0, #0
    121c:	bne	125c <mo_kline+0x78>
    1220:	sub	sp, sp, #8
    1224:	ldr	r0, [pc, #2296]	; 1b24 <mo_kline+0x940>
    1228:	add	r0, pc, r0
    122c:	str	r0, [sp]
    1230:	add	r3, r4, #88	; 0x58
    1234:	ldr	r0, [pc, #2284]	; 1b28 <mo_kline+0x944>
    1238:	ldr	r0, [pc, r0]
    123c:	ldr	r1, [pc, #2280]	; 1b2c <mo_kline+0x948>
    1240:	add	r2, r0, #88	; 0x58
    1244:	add	r1, pc, r1
    1248:	mov	r0, r4
    124c:	bl	db0 <sendto_one@plt>
    1250:	add	sp, sp, #8
    1254:	sub	sp, fp, #28
    1258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    125c:	ldr	r1, [pc, #2236]	; 1b20 <mo_kline+0x93c>
    1260:	mov	r6, r3
    1264:	add	r1, pc, r1
    1268:	bl	f48 <privilegeset_in_set@plt>
    126c:	cmp	r0, #0
    1270:	beq	1220 <mo_kline+0x3c>
    1274:	ldr	r5, [fp, #8]
    1278:	sub	r0, fp, #110	; 0x6e
    127c:	str	r4, [fp, #-116]	; 0xffffff8c
    1280:	add	r0, r0, #1
    1284:	str	r0, [fp, #-120]	; 0xffffff88
    1288:	ldr	r0, [r5, #4]
    128c:	bl	ef4 <valid_temp_time@plt>
    1290:	cmn	r0, #1
    1294:	mov	r9, #1
    1298:	mov	r4, #0
    129c:	mov	r1, #64	; 0x40
    12a0:	movwgt	r9, #2
    12a4:	movle	r0, r4
    12a8:	ldr	r7, [r5, r9, lsl #2]
    12ac:	str	r0, [fp, #-124]	; 0xffffff84
    12b0:	mov	r0, r7
    12b4:	bl	ec4 <strchr@plt>
    12b8:	cmp	r0, #0
    12bc:	beq	12e8 <mo_kline+0x104>
    12c0:	mov	r5, r0
    12c4:	strb	r4, [r5], #1
    12c8:	ldrb	r0, [r7]
    12cc:	cmp	r0, #0
    12d0:	beq	1330 <mo_kline+0x14c>
    12d4:	sub	r0, fp, #44	; 0x2c
    12d8:	mov	r1, r7
    12dc:	mov	r2, #11
    12e0:	bl	f30 <rb_strlcpy@plt>
    12e4:	b	1338 <mo_kline+0x154>
    12e8:	mov	r0, r7
    12ec:	mov	r1, #46	; 0x2e
    12f0:	bl	ec4 <strchr@plt>
    12f4:	cmp	r0, #0
    12f8:	bne	1310 <mo_kline+0x12c>
    12fc:	mov	r0, r7
    1300:	mov	r1, #58	; 0x3a
    1304:	bl	ec4 <strchr@plt>
    1308:	cmp	r0, #0
    130c:	beq	14f0 <mo_kline+0x30c>
    1310:	mov	r0, #42	; 0x2a
    1314:	mov	r1, r7
    1318:	mov	r2, #64	; 0x40
    131c:	strh	r0, [fp, #-44]	; 0xffffffd4
    1320:	ldr	r0, [fp, #-120]	; 0xffffff88
    1324:	bl	f30 <rb_strlcpy@plt>
    1328:	ldr	r4, [fp, #-116]	; 0xffffff8c
    132c:	b	1364 <mo_kline+0x180>
    1330:	mov	r0, #42	; 0x2a
    1334:	strh	r0, [fp, #-44]	; 0xffffffd4
    1338:	ldrb	r0, [r5]
    133c:	ldr	r4, [fp, #-116]	; 0xffffff8c
    1340:	cmp	r0, #0
    1344:	beq	135c <mo_kline+0x178>
    1348:	ldr	r0, [fp, #-120]	; 0xffffff88
    134c:	mov	r1, r5
    1350:	mov	r2, #64	; 0x40
    1354:	bl	f30 <rb_strlcpy@plt>
    1358:	b	1364 <mo_kline+0x180>
    135c:	mov	r0, #42	; 0x2a
    1360:	strh	r0, [fp, #-109]	; 0xffffff93
    1364:	ldrb	r0, [fp, #-44]	; 0xffffffd4
    1368:	cmp	r0, #58	; 0x3a
    136c:	ldrbne	r0, [fp, #-109]	; 0xffffff93
    1370:	cmpne	r0, #58	; 0x3a
    1374:	bne	1390 <mo_kline+0x1ac>
    1378:	ldr	r1, [pc, #1972]	; 1b34 <mo_kline+0x950>
    137c:	add	r1, pc, r1
    1380:	mov	r0, r4
    1384:	bl	f0c <sendto_one_notice@plt>
    1388:	sub	sp, fp, #28
    138c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1390:	add	r7, r9, #3
    1394:	mov	r0, #0
    1398:	add	r5, r9, #1
    139c:	cmp	r7, r6
    13a0:	str	r0, [fp, #-128]	; 0xffffff80
    13a4:	bgt	13c4 <mo_kline+0x1e0>
    13a8:	ldr	r0, [fp, #8]
    13ac:	ldr	r0, [r0, r5, lsl #2]
    13b0:	ldr	r1, [pc, #1920]	; 1b38 <mo_kline+0x954>
    13b4:	add	r1, pc, r1
    13b8:	bl	f54 <irccmp@plt>
    13bc:	cmp	r0, #0
    13c0:	beq	1410 <mo_kline+0x22c>
    13c4:	cmp	r5, r6
    13c8:	bge	13e4 <mo_kline+0x200>
    13cc:	ldr	r0, [fp, #8]
    13d0:	ldr	r5, [r0, r5, lsl #2]
    13d4:	cmp	r5, #0
    13d8:	ldrbne	r0, [r5]
    13dc:	cmpne	r0, #0
    13e0:	bne	1434 <mo_kline+0x250>
    13e4:	sub	sp, sp, #8
    13e8:	ldr	r0, [pc, #1876]	; 1b44 <mo_kline+0x960>
    13ec:	add	r3, r4, #88	; 0x58
    13f0:	add	r0, pc, r0
    13f4:	str	r0, [sp]
    13f8:	ldr	r0, [pc, #1864]	; 1b48 <mo_kline+0x964>
    13fc:	ldr	r0, [pc, r0]
    1400:	ldr	r1, [pc, #1860]	; 1b4c <mo_kline+0x968>
    1404:	add	r2, r0, #88	; 0x58
    1408:	add	r1, pc, r1
    140c:	b	1248 <mo_kline+0x64>
    1410:	ldr	r0, [r4, #24]
    1414:	cmp	r0, #0
    1418:	ldrne	r0, [r0, #36]	; 0x24
    141c:	cmpne	r0, #0
    1420:	bne	1520 <mo_kline+0x33c>
    1424:	sub	sp, sp, #8
    1428:	ldr	r0, [pc, #1808]	; 1b40 <mo_kline+0x95c>
    142c:	add	r0, pc, r0
    1430:	b	122c <mo_kline+0x48>
    1434:	mov	r0, r5
    1438:	bl	eb8 <strlen@plt>
    143c:	add	r0, r0, #8
    1440:	bic	r0, r0, #7
    1444:	sub	r9, sp, r0
    1448:	mov	sp, r9
    144c:	mov	r0, r9
    1450:	mov	r1, r5
    1454:	bl	e58 <strcpy@plt>
    1458:	ldr	r7, [fp, #-120]	; 0xffffff88
    145c:	mov	r1, #0
    1460:	mov	r2, #0
    1464:	mov	r0, r7
    1468:	bl	d80 <parse_netmask_strict@plt>
    146c:	cmp	r0, #0
    1470:	beq	1500 <mo_kline+0x31c>
    1474:	ldr	r6, [fp, #-128]	; 0xffffff80
    1478:	cmp	r6, #0
    147c:	beq	1554 <mo_kline+0x370>
    1480:	ldr	r0, [pc, #1740]	; 1b54 <mo_kline+0x970>
    1484:	ldr	r0, [pc, r0]
    1488:	ldr	r3, [r0]
    148c:	sub	sp, sp, #24
    1490:	ldr	r1, [pc, #1728]	; 1b58 <mo_kline+0x974>
    1494:	ldr	r5, [fp, #-124]	; 0xffffff84
    1498:	sub	r0, fp, #44	; 0x2c
    149c:	mov	r2, r6
    14a0:	add	r1, pc, r1
    14a4:	str	r5, [sp, #4]
    14a8:	str	r1, [sp]
    14ac:	add	r1, sp, #8
    14b0:	stm	r1, {r0, r7, r9}
    14b4:	mov	r0, r4
    14b8:	ldr	r1, [pc, #1692]	; 1b5c <mo_kline+0x978>
    14bc:	add	r1, pc, r1
    14c0:	bl	d68 <propagate_generic@plt>
    14c4:	add	sp, sp, #24
    14c8:	ldr	r0, [pc, #1680]	; 1b60 <mo_kline+0x97c>
    14cc:	ldr	r0, [pc, r0]
    14d0:	add	r1, r0, #88	; 0x58
    14d4:	mov	r0, r6
    14d8:	bl	ee8 <match@plt>
    14dc:	mov	sl, #0
    14e0:	cmp	r0, #0
    14e4:	bne	15c8 <mo_kline+0x3e4>
    14e8:	sub	sp, fp, #28
    14ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14f0:	ldr	r1, [pc, #1592]	; 1b30 <mo_kline+0x94c>
    14f4:	ldr	r0, [fp, #-116]	; 0xffffff8c
    14f8:	add	r1, pc, r1
    14fc:	b	1384 <mo_kline+0x1a0>
    1500:	ldr	r1, [pc, #1608]	; 1b50 <mo_kline+0x96c>
    1504:	sub	r2, fp, #44	; 0x2c
    1508:	mov	r0, r4
    150c:	mov	r3, r7
    1510:	add	r1, pc, r1
    1514:	bl	f0c <sendto_one_notice@plt>
    1518:	sub	sp, fp, #28
    151c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1520:	ldr	r1, [pc, #1556]	; 1b3c <mo_kline+0x958>
    1524:	add	r1, pc, r1
    1528:	bl	f48 <privilegeset_in_set@plt>
    152c:	cmp	r0, #0
    1530:	beq	1424 <mo_kline+0x240>
    1534:	ldr	r0, [fp, #8]
    1538:	mov	r5, r7
    153c:	add	r0, r0, r9, lsl #2
    1540:	ldr	r0, [r0, #8]
    1544:	str	r0, [fp, #-128]	; 0xffffff80
    1548:	cmp	r5, r6
    154c:	blt	13cc <mo_kline+0x1e8>
    1550:	b	13e4 <mo_kline+0x200>
    1554:	ldr	r0, [pc, #1544]	; 1b64 <mo_kline+0x980>
    1558:	ldr	r0, [pc, r0]
    155c:	ldr	r0, [r0, #8]
    1560:	cmp	r0, #0
    1564:	beq	15c4 <mo_kline+0x3e0>
    1568:	cmp	r8, #0
    156c:	bne	15c4 <mo_kline+0x3e0>
    1570:	ldr	r0, [pc, #1520]	; 1b68 <mo_kline+0x984>
    1574:	ldr	r0, [pc, r0]
    1578:	ldr	r3, [r0]
    157c:	sub	sp, sp, #24
    1580:	ldr	r1, [pc, #1508]	; 1b6c <mo_kline+0x988>
    1584:	ldr	r5, [fp, #-124]	; 0xffffff84
    1588:	sub	r0, fp, #44	; 0x2c
    158c:	mov	r2, #2
    1590:	add	r1, pc, r1
    1594:	str	r5, [sp, #4]
    1598:	cmp	r5, #0
    159c:	str	r1, [sp]
    15a0:	add	r1, sp, #8
    15a4:	movwgt	r2, #1
    15a8:	stm	r1, {r0, r7, r9}
    15ac:	mov	r0, r4
    15b0:	ldr	r1, [pc, #1464]	; 1b70 <mo_kline+0x98c>
    15b4:	add	r1, pc, r1
    15b8:	bl	e34 <cluster_generic@plt>
    15bc:	add	sp, sp, #24
    15c0:	b	15c8 <mo_kline+0x3e4>
    15c4:	ldr	r5, [fp, #-124]	; 0xffffff84
    15c8:	mov	r0, r7
    15cc:	mov	r1, #35	; 0x23
    15d0:	bl	ec4 <strchr@plt>
    15d4:	cmp	r0, #0
    15d8:	bne	1378 <mo_kline+0x194>
    15dc:	sub	r0, fp, #44	; 0x2c
    15e0:	mov	r1, #35	; 0x23
    15e4:	bl	ec4 <strchr@plt>
    15e8:	cmp	r0, #0
    15ec:	bne	1378 <mo_kline+0x194>
    15f0:	sub	r0, fp, #44	; 0x2c
    15f4:	mov	r1, #33	; 0x21
    15f8:	bl	ec4 <strchr@plt>
    15fc:	cmp	r0, #0
    1600:	bne	1378 <mo_kline+0x194>
    1604:	mov	r0, r7
    1608:	mov	r1, #64	; 0x40
    160c:	bl	ec4 <strchr@plt>
    1610:	cmp	r0, #0
    1614:	bne	1378 <mo_kline+0x194>
    1618:	sub	r0, fp, #44	; 0x2c
    161c:	mov	r1, r7
    1620:	bl	e7c <valid_wild_card@plt>
    1624:	cmp	r0, #0
    1628:	beq	1650 <mo_kline+0x46c>
    162c:	cmp	r5, #0
    1630:	mov	r1, r5
    1634:	eor	r0, sl, #1
    1638:	movwne	r1, #1
    163c:	orrs	r0, r1, r0
    1640:	bne	1674 <mo_kline+0x490>
    1644:	ldr	r1, [pc, #1328]	; 1b7c <mo_kline+0x998>
    1648:	add	r1, pc, r1
    164c:	b	1380 <mo_kline+0x19c>
    1650:	ldr	r0, [pc, #1308]	; 1b74 <mo_kline+0x990>
    1654:	ldr	r0, [pc, r0]
    1658:	ldr	r2, [r0, #236]	; 0xec
    165c:	ldr	r1, [pc, #1300]	; 1b78 <mo_kline+0x994>
    1660:	mov	r0, r4
    1664:	add	r1, pc, r1
    1668:	bl	f0c <sendto_one_notice@plt>
    166c:	sub	sp, fp, #28
    1670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1674:	sub	r1, fp, #44	; 0x2c
    1678:	mov	r0, r4
    167c:	mov	r2, r7
    1680:	mov	r3, r5
    1684:	bl	21ac <already_placed_kline>
    1688:	cmp	r0, #0
    168c:	bne	14e8 <mo_kline+0x304>
    1690:	bl	e70 <rb_set_time@plt>
    1694:	bl	d74 <make_conf@plt>
    1698:	mov	r4, r0
    169c:	mov	r0, #64	; 0x40
    16a0:	str	r0, [r4]
    16a4:	bl	d8c <rb_current_time@plt>
    16a8:	str	r0, [r4, #40]	; 0x28
    16ac:	mov	r0, r7
    16b0:	str	r4, [fp, #-128]	; 0xffffff80
    16b4:	bl	eb8 <strlen@plt>
    16b8:	add	r0, r0, #1
    16bc:	bl	e88 <malloc@plt>
    16c0:	cmp	r0, #0
    16c4:	beq	1af8 <mo_kline+0x914>
    16c8:	ldr	r1, [fp, #-120]	; 0xffffff88
    16cc:	mov	r5, r0
    16d0:	bl	e58 <strcpy@plt>
    16d4:	ldr	r0, [fp, #-128]	; 0xffffff80
    16d8:	str	r5, [r0, #16]
    16dc:	sub	r0, fp, #44	; 0x2c
    16e0:	bl	eb8 <strlen@plt>
    16e4:	add	r0, r0, #1
    16e8:	bl	e88 <malloc@plt>
    16ec:	cmp	r0, #0
    16f0:	beq	1af8 <mo_kline+0x914>
    16f4:	sub	r1, fp, #44	; 0x2c
    16f8:	mov	r5, r0
    16fc:	bl	e58 <strcpy@plt>
    1700:	mov	r0, #0
    1704:	ldr	r4, [fp, #-128]	; 0xffffff80
    1708:	mov	r1, #0
    170c:	str	r0, [fp, #-120]	; 0xffffff88
    1710:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1714:	str	r5, [r4, #28]
    1718:	str	r1, [r4, #32]
    171c:	bl	e1c <get_oper_name@plt>
    1720:	bl	e40 <operhash_add@plt>
    1724:	str	r0, [r4, #12]
    1728:	mov	r0, r9
    172c:	bl	eb8 <strlen@plt>
    1730:	movw	r1, #391	; 0x187
    1734:	cmp	r0, r1
    1738:	mov	r1, #124	; 0x7c
    173c:	movcs	r0, #0
    1740:	strbcs	r0, [r9, #390]	; 0x186
    1744:	mov	r0, r9
    1748:	bl	ec4 <strchr@plt>
    174c:	cmp	r0, #0
    1750:	beq	179c <mo_kline+0x5b8>
    1754:	mov	r7, r0
    1758:	mov	r0, #0
    175c:	strb	r0, [r7]
    1760:	ldrb	r0, [r7, #1]!
    1764:	cmp	r0, #0
    1768:	beq	1798 <mo_kline+0x5b4>
    176c:	mov	r0, r7
    1770:	bl	eb8 <strlen@plt>
    1774:	add	r0, r0, #1
    1778:	bl	e88 <malloc@plt>
    177c:	cmp	r0, #0
    1780:	beq	1af8 <mo_kline+0x914>
    1784:	mov	r1, r7
    1788:	mov	r5, r0
    178c:	bl	e58 <strcpy@plt>
    1790:	ldr	r0, [fp, #-128]	; 0xffffff80
    1794:	str	r5, [r0, #24]
    1798:	str	r7, [fp, #-120]	; 0xffffff88
    179c:	mov	r0, r9
    17a0:	bl	eb8 <strlen@plt>
    17a4:	add	r0, r0, #1
    17a8:	bl	e88 <malloc@plt>
    17ac:	cmp	r0, #0
    17b0:	beq	1af8 <mo_kline+0x914>
    17b4:	mov	r1, r9
    17b8:	mov	r5, r0
    17bc:	bl	e58 <strcpy@plt>
    17c0:	ldr	r0, [fp, #-128]	; 0xffffff80
    17c4:	cmp	sl, #0
    17c8:	str	r5, [r0, #20]
    17cc:	beq	183c <mo_kline+0x658>
    17d0:	ldr	r4, [fp, #-128]	; 0xffffff80
    17d4:	ldr	r0, [r4, #4]
    17d8:	orr	r0, r0, #8912896	; 0x880000
    17dc:	str	r0, [r4, #4]
    17e0:	bl	d8c <rb_current_time@plt>
    17e4:	ldr	r1, [fp, #-124]	; 0xffffff84
    17e8:	add	r0, r0, r1
    17ec:	str	r0, [r4, #36]	; 0x24
    17f0:	str	r0, [r4, #44]	; 0x2c
    17f4:	mov	r0, r4
    17f8:	bl	dd4 <replace_old_ban@plt>
    17fc:	bl	eac <rb_make_rb_dlink_node@plt>
    1800:	cmp	r0, #0
    1804:	beq	1afc <mo_kline+0x918>
    1808:	mov	r1, #0
    180c:	str	r1, [r0, #4]
    1810:	ldr	r1, [fp, #-128]	; 0xffffff80
    1814:	str	r1, [r0]
    1818:	ldr	r1, [pc, #864]	; 1b80 <mo_kline+0x99c>
    181c:	ldr	r1, [pc, r1]
    1820:	ldr	r2, [r1]
    1824:	cmp	r2, #0
    1828:	str	r2, [r0, #8]
    182c:	beq	1888 <mo_kline+0x6a4>
    1830:	add	r2, r2, #4
    1834:	str	r0, [r2]
    1838:	b	1898 <mo_kline+0x6b4>
    183c:	ldr	r0, [fp, #-124]	; 0xffffff84
    1840:	cmp	r0, #1
    1844:	blt	1870 <mo_kline+0x68c>
    1848:	sub	sp, sp, #8
    184c:	ldr	r0, [fp, #-124]	; 0xffffff84
    1850:	ldr	r1, [fp, #-128]	; 0xffffff80
    1854:	ldr	r3, [fp, #-120]	; 0xffffff88
    1858:	mov	r2, r9
    185c:	str	r0, [sp]
    1860:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1864:	bl	2314 <apply_tkline>
    1868:	add	sp, sp, #8
    186c:	b	1ae8 <mo_kline+0x904>
    1870:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1874:	ldr	r1, [fp, #-128]	; 0xffffff80
    1878:	ldr	r3, [fp, #-120]	; 0xffffff88
    187c:	mov	r2, r9
    1880:	bl	248c <apply_kline>
    1884:	b	1ae8 <mo_kline+0x904>
    1888:	mov	r2, r1
    188c:	ldr	r3, [r2, #4]!
    1890:	cmp	r3, #0
    1894:	streq	r0, [r2]
    1898:	str	r0, [r1]
    189c:	ldr	r0, [r1, #8]
    18a0:	add	r0, r0, #1
    18a4:	str	r0, [r1, #8]
    18a8:	ldr	r1, [fp, #-128]	; 0xffffff80
    18ac:	ldr	r0, [r1, #16]
    18b0:	ldr	r2, [r1, #28]
    18b4:	sub	sp, sp, #8
    18b8:	str	r1, [sp]
    18bc:	mov	r1, #64	; 0x40
    18c0:	mov	r3, #0
    18c4:	bl	e94 <add_conf_by_address@plt>
    18c8:	add	sp, sp, #8
    18cc:	ldr	r0, [fp, #-120]	; 0xffffff88
    18d0:	cmp	r0, #0
    18d4:	beq	1980 <mo_kline+0x79c>
    18d8:	ldr	r0, [fp, #-120]	; 0xffffff88
    18dc:	ldrb	r0, [r0]
    18e0:	cmp	r0, #0
    18e4:	beq	1980 <mo_kline+0x79c>
    18e8:	ldr	r8, [fp, #-116]	; 0xffffff8c
    18ec:	mov	r0, r8
    18f0:	bl	e1c <get_oper_name@plt>
    18f4:	ldr	r4, [fp, #-128]	; 0xffffff80
    18f8:	mov	r3, r0
    18fc:	ldr	r1, [r4, #28]
    1900:	ldr	r0, [r4, #16]
    1904:	sub	sp, sp, #24
    1908:	ldr	r7, [fp, #-124]	; 0xffffff84
    190c:	movw	r2, #34953	; 0x8889
    1910:	str	r1, [sp, #4]
    1914:	str	r0, [sp, #8]
    1918:	str	r9, [sp, #12]
    191c:	mov	r0, #256	; 0x100
    1920:	mov	r1, #0
    1924:	movt	r2, #34952	; 0x8888
    1928:	smmla	r2, r7, r2, r7
    192c:	asr	r7, r2, #5
    1930:	add	r5, r7, r2, lsr #31
    1934:	ldr	r7, [fp, #-120]	; 0xffffff88
    1938:	str	r5, [sp]
    193c:	str	r7, [sp, #16]
    1940:	ldr	r2, [pc, #580]	; 1b8c <mo_kline+0x9a8>
    1944:	add	r2, pc, r2
    1948:	bl	df8 <sendto_realops_snomask@plt>
    194c:	add	sp, sp, #24
    1950:	mov	r0, r8
    1954:	bl	e1c <get_oper_name@plt>
    1958:	ldr	r1, [r4, #28]
    195c:	mov	r2, r0
    1960:	ldr	r0, [r4, #16]
    1964:	sub	sp, sp, #16
    1968:	str	r1, [sp]
    196c:	stmib	sp, {r0, r9}
    1970:	str	r7, [sp, #12]
    1974:	ldr	r1, [pc, #532]	; 1b90 <mo_kline+0x9ac>
    1978:	add	r1, pc, r1
    197c:	b	1a08 <mo_kline+0x824>
    1980:	ldr	r8, [fp, #-116]	; 0xffffff8c
    1984:	mov	r0, r8
    1988:	bl	e1c <get_oper_name@plt>
    198c:	ldr	r4, [fp, #-128]	; 0xffffff80
    1990:	mov	r3, r0
    1994:	ldr	r1, [r4, #28]
    1998:	ldr	r0, [r4, #16]
    199c:	sub	sp, sp, #16
    19a0:	ldr	r7, [fp, #-124]	; 0xffffff84
    19a4:	movw	r2, #34953	; 0x8889
    19a8:	str	r1, [sp, #4]
    19ac:	str	r0, [sp, #8]
    19b0:	str	r9, [sp, #12]
    19b4:	mov	r0, #256	; 0x100
    19b8:	mov	r1, #0
    19bc:	movt	r2, #34952	; 0x8888
    19c0:	smmla	r2, r7, r2, r7
    19c4:	asr	r7, r2, #5
    19c8:	add	r5, r7, r2, lsr #31
    19cc:	str	r5, [sp]
    19d0:	ldr	r2, [pc, #428]	; 1b84 <mo_kline+0x9a0>
    19d4:	add	r2, pc, r2
    19d8:	bl	df8 <sendto_realops_snomask@plt>
    19dc:	add	sp, sp, #16
    19e0:	mov	r0, r8
    19e4:	bl	e1c <get_oper_name@plt>
    19e8:	ldr	r1, [r4, #28]
    19ec:	mov	r2, r0
    19f0:	ldr	r0, [r4, #16]
    19f4:	sub	sp, sp, #16
    19f8:	str	r1, [sp]
    19fc:	stmib	sp, {r0, r9}
    1a00:	ldr	r1, [pc, #384]	; 1b88 <mo_kline+0x9a4>
    1a04:	add	r1, pc, r1
    1a08:	mov	r0, #7
    1a0c:	mov	r3, r5
    1a10:	bl	edc <ilog@plt>
    1a14:	add	sp, sp, #16
    1a18:	ldr	r6, [fp, #-128]	; 0xffffff80
    1a1c:	ldr	r0, [r6, #16]
    1a20:	ldr	r3, [r6, #28]
    1a24:	sub	sp, sp, #8
    1a28:	str	r0, [sp]
    1a2c:	mov	r2, r5
    1a30:	ldr	r1, [pc, #348]	; 1b94 <mo_kline+0x9b0>
    1a34:	ldr	r4, [fp, #-116]	; 0xffffff8c
    1a38:	add	r1, pc, r1
    1a3c:	mov	r0, r4
    1a40:	bl	f0c <sendto_one_notice@plt>
    1a44:	add	sp, sp, #8
    1a48:	ldr	r0, [pc, #328]	; 1b98 <mo_kline+0x9b4>
    1a4c:	ldr	r0, [pc, r0]
    1a50:	ldr	ip, [r0]
    1a54:	ldr	r1, [pc, #320]	; 1b9c <mo_kline+0x9b8>
    1a58:	ldr	r1, [pc, r1]
    1a5c:	ldr	sl, [r6, #36]	; 0x24
    1a60:	ldr	r3, [r6, #40]	; 0x28
    1a64:	ldr	r7, [r6, #44]	; 0x2c
    1a68:	ldr	r8, [r6, #16]
    1a6c:	ldr	lr, [r1]
    1a70:	ldr	r1, [r6, #28]
    1a74:	ldr	r6, [pc, #292]	; 1ba0 <mo_kline+0x9bc>
    1a78:	ldr	r2, [fp, #-120]	; 0xffffff88
    1a7c:	add	r6, pc, r6
    1a80:	cmp	r2, #0
    1a84:	mov	r0, r6
    1a88:	movne	r0, r2
    1a8c:	sub	sp, sp, #40	; 0x28
    1a90:	ldr	r5, [pc, #268]	; 1ba4 <mo_kline+0x9c0>
    1a94:	cmp	r2, #0
    1a98:	str	r0, [sp, #36]	; 0x24
    1a9c:	add	r0, r4, #396	; 0x18c
    1aa0:	sub	r2, sl, r3
    1aa4:	add	r5, pc, r5
    1aa8:	moveq	r5, r6
    1aac:	str	r5, [sp, #32]
    1ab0:	sub	r5, r7, r3
    1ab4:	ldr	r4, [pc, #236]	; 1ba8 <mo_kline+0x9c4>
    1ab8:	add	r4, pc, r4
    1abc:	str	r4, [sp]
    1ac0:	stmib	sp, {r0, r1, r8}
    1ac4:	add	r0, sp, #20
    1ac8:	str	r3, [sp, #16]
    1acc:	mov	r1, #0
    1ad0:	mov	r3, #0
    1ad4:	stm	r0, {r2, r5, r9}
    1ad8:	orr	r2, ip, lr
    1adc:	mov	r0, #0
    1ae0:	bl	e64 <sendto_server@plt>
    1ae4:	add	sp, sp, #40	; 0x28
    1ae8:	ldr	r0, [fp, #-128]	; 0xffffff80
    1aec:	bl	e4c <check_one_kline@plt>
    1af0:	sub	sp, fp, #28
    1af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1af8:	bl	de0 <rb_outofmemory@plt>
    1afc:	ldr	r0, [pc, #168]	; 1bac <mo_kline+0x9c8>
    1b00:	ldr	r1, [pc, #168]	; 1bb0 <mo_kline+0x9cc>
    1b04:	ldr	r3, [pc, #168]	; 1bb4 <mo_kline+0x9d0>
    1b08:	mov	r2, #144	; 0x90
    1b0c:	add	r0, pc, r0
    1b10:	add	r1, pc, r1
    1b14:	add	r3, pc, r3
    1b18:	bl	f60 <__assert_fail@plt>
    1b1c:	.word	0x00012ee4
    1b20:	.word	0x000019b0
    1b24:	.word	0x000019f1
    1b28:	.word	0x00012ea4
    1b2c:	.word	0x000019db
    1b30:	.word	0x0000184a
    1b34:	.word	0x000019ea
    1b38:	.word	0x00001892
    1b3c:	.word	0x00001725
    1b40:	.word	0x00001822
    1b44:	.word	0x0000181e
    1b48:	.word	0x00012ce0
    1b4c:	.word	0x00001850
    1b50:	.word	0x0000176d
    1b54:	.word	0x00012c4c
    1b58:	.word	0x0000181d
    1b5c:	.word	0x00001752
    1b60:	.word	0x00012c10
    1b64:	.word	0x00012b74
    1b68:	.word	0x00012b5c
    1b6c:	.word	0x0000173a
    1b70:	.word	0x0000165a
    1b74:	.word	0x00012a8c
    1b78:	.word	0x00001674
    1b7c:	.word	0x000016d7
    1b80:	.word	0x000128a0
    1b84:	.word	0x000013d7
    1b88:	.word	0x000013d7
    1b8c:	.word	0x000014a8
    1b90:	.word	0x000014a7
    1b94:	.word	0x000013fb
    1b98:	.word	0x00012678
    1b9c:	.word	0x00012668
    1ba0:	.word	0x00001458
    1ba4:	.word	0x000013d8
    1ba8:	.word	0x000013a0
    1bac:	.word	0x000013c9
    1bb0:	.word	0x0000136e
    1bb4:	.word	0x00001386

00001bb8 <ms_unkline>:
    1bb8:	push	{r4, r5, r6, sl, fp, lr}
    1bbc:	add	fp, sp, #16
    1bc0:	sub	sp, sp, #16
    1bc4:	ldr	r0, [pc, #140]	; 1c58 <ms_unkline+0xa0>
    1bc8:	mov	r6, r2
    1bcc:	ldr	r0, [pc, r0]
    1bd0:	ldr	r5, [fp, #8]
    1bd4:	ldr	r3, [r0]
    1bd8:	ldr	r2, [r5, #4]
    1bdc:	ldr	r0, [r5, #8]
    1be0:	ldr	r1, [r5, #12]
    1be4:	ldr	r4, [pc, #112]	; 1c5c <ms_unkline+0xa4>
    1be8:	add	r4, pc, r4
    1bec:	str	r4, [sp]
    1bf0:	stmib	sp, {r0, r1}
    1bf4:	mov	r0, r6
    1bf8:	ldr	r1, [pc, #96]	; 1c60 <ms_unkline+0xa8>
    1bfc:	add	r1, pc, r1
    1c00:	bl	d68 <propagate_generic@plt>
    1c04:	ldr	r0, [r5, #4]
    1c08:	ldr	r1, [pc, #84]	; 1c64 <ms_unkline+0xac>
    1c0c:	ldr	r1, [pc, r1]
    1c10:	add	r1, r1, #88	; 0x58
    1c14:	bl	ee8 <match@plt>
    1c18:	cmp	r0, #0
    1c1c:	beq	1c50 <ms_unkline+0x98>
    1c20:	ldrh	r0, [r6, #80]	; 0x50
    1c24:	cmp	r0, #64	; 0x40
    1c28:	bne	1c50 <ms_unkline+0x98>
    1c2c:	ldr	r0, [r6, #24]
    1c30:	cmp	r0, #0
    1c34:	beq	1c50 <ms_unkline+0x98>
    1c38:	ldr	r1, [r5, #8]
    1c3c:	ldr	r2, [r5, #12]
    1c40:	mov	r0, r6
    1c44:	sub	sp, fp, #16
    1c48:	pop	{r4, r5, r6, sl, fp, lr}
    1c4c:	b	2b58 <handle_remote_unkline>
    1c50:	sub	sp, fp, #16
    1c54:	pop	{r4, r5, r6, sl, fp, pc}
    1c58:	.word	0x000124e8
    1c5c:	.word	0x000013b3
    1c60:	.word	0x00001010
    1c64:	.word	0x000124d0

00001c68 <me_unkline>:
    1c68:	ldrh	r0, [r2, #80]	; 0x50
    1c6c:	cmp	r0, #64	; 0x40
    1c70:	bxne	lr
    1c74:	ldr	r0, [r2, #24]
    1c78:	cmp	r0, #0
    1c7c:	beq	1c94 <me_unkline+0x2c>
    1c80:	ldr	r0, [sp]
    1c84:	ldmib	r0, {r1, r3}
    1c88:	mov	r0, r2
    1c8c:	mov	r2, r3
    1c90:	b	2b58 <handle_remote_unkline>
    1c94:	bx	lr

00001c98 <mo_unkline>:
    1c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c9c:	add	fp, sp, #28
    1ca0:	sub	sp, sp, #12
    1ca4:	ldr	r8, [fp, #8]
    1ca8:	mov	r0, #42	; 0x2a
    1cac:	mov	r6, r3
    1cb0:	mov	r4, r2
    1cb4:	strh	r0, [fp, #-34]	; 0xffffffde
    1cb8:	ldr	r7, [r8, #4]
    1cbc:	mov	r0, r7
    1cc0:	bl	eb8 <strlen@plt>
    1cc4:	add	r0, r0, #8
    1cc8:	bic	r0, r0, #7
    1ccc:	sub	r5, sp, r0
    1cd0:	mov	sp, r5
    1cd4:	mov	r0, r5
    1cd8:	mov	r1, r7
    1cdc:	bl	e58 <strcpy@plt>
    1ce0:	ldr	r0, [r4, #24]
    1ce4:	cmp	r0, #0
    1ce8:	ldrne	r0, [r0, #36]	; 0x24
    1cec:	cmpne	r0, #0
    1cf0:	bne	1d30 <mo_unkline+0x98>
    1cf4:	sub	sp, sp, #8
    1cf8:	ldr	r0, [pc, #1096]	; 2148 <mo_unkline+0x4b0>
    1cfc:	add	r0, pc, r0
    1d00:	str	r0, [sp]
    1d04:	add	r3, r4, #88	; 0x58
    1d08:	ldr	r0, [pc, #1084]	; 214c <mo_unkline+0x4b4>
    1d0c:	ldr	r0, [pc, r0]
    1d10:	ldr	r1, [pc, #1080]	; 2150 <mo_unkline+0x4b8>
    1d14:	add	r2, r0, #88	; 0x58
    1d18:	add	r1, pc, r1
    1d1c:	mov	r0, r4
    1d20:	bl	db0 <sendto_one@plt>
    1d24:	add	sp, sp, #8
    1d28:	sub	sp, fp, #28
    1d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1d30:	ldr	r1, [pc, #1036]	; 2144 <mo_unkline+0x4ac>
    1d34:	add	r1, pc, r1
    1d38:	bl	f48 <privilegeset_in_set@plt>
    1d3c:	cmp	r0, #0
    1d40:	beq	1cf4 <mo_unkline+0x5c>
    1d44:	mov	r0, r5
    1d48:	mov	r1, #64	; 0x40
    1d4c:	bl	ec4 <strchr@plt>
    1d50:	cmp	r0, #0
    1d54:	beq	1d90 <mo_unkline+0xf8>
    1d58:	mov	r1, #0
    1d5c:	sub	r2, fp, #34	; 0x22
    1d60:	mov	r7, r5
    1d64:	strb	r1, [r0]
    1d68:	ldrb	r1, [r5]
    1d6c:	cmp	r1, #0
    1d70:	ldrb	r1, [r0, #1]!
    1d74:	moveq	r7, r2
    1d78:	cmp	r1, #0
    1d7c:	moveq	r0, r2
    1d80:	mov	r5, r0
    1d84:	cmp	r6, #4
    1d88:	bge	1dd0 <mo_unkline+0x138>
    1d8c:	b	1de8 <mo_unkline+0x150>
    1d90:	ldrb	r0, [r5]
    1d94:	sub	r7, fp, #34	; 0x22
    1d98:	cmp	r0, #42	; 0x2a
    1d9c:	beq	1dc8 <mo_unkline+0x130>
    1da0:	mov	r0, r5
    1da4:	mov	r1, #46	; 0x2e
    1da8:	bl	ec4 <strchr@plt>
    1dac:	cmp	r0, #0
    1db0:	bne	1dc8 <mo_unkline+0x130>
    1db4:	mov	r0, r5
    1db8:	mov	r1, #58	; 0x3a
    1dbc:	bl	ec4 <strchr@plt>
    1dc0:	cmp	r0, #0
    1dc4:	beq	212c <mo_unkline+0x494>
    1dc8:	cmp	r6, #4
    1dcc:	blt	1de8 <mo_unkline+0x150>
    1dd0:	ldr	r0, [r8, #8]
    1dd4:	ldr	r1, [pc, #892]	; 2158 <mo_unkline+0x4c0>
    1dd8:	add	r1, pc, r1
    1ddc:	bl	f54 <irccmp@plt>
    1de0:	cmp	r0, #0
    1de4:	beq	2054 <mo_unkline+0x3bc>
    1de8:	mov	r0, r5
    1dec:	mov	r1, #64	; 0x40
    1df0:	mov	r2, r7
    1df4:	bl	f24 <find_exact_conf_by_address@plt>
    1df8:	mov	r6, r0
    1dfc:	cmp	r0, #0
    1e00:	beq	1e30 <mo_unkline+0x198>
    1e04:	mov	r8, r6
    1e08:	mov	r0, #1
    1e0c:	ldr	r1, [r8, #44]!	; 0x2c
    1e10:	cmp	r1, #0
    1e14:	bne	1e90 <mo_unkline+0x1f8>
    1e18:	ldr	r2, [pc, #852]	; 2174 <mo_unkline+0x4dc>
    1e1c:	ldr	r2, [pc, r2]
    1e20:	ldr	r2, [r2, #8]
    1e24:	cmp	r2, #0
    1e28:	bne	1e44 <mo_unkline+0x1ac>
    1e2c:	b	1e90 <mo_unkline+0x1f8>
    1e30:	ldr	r0, [pc, #832]	; 2178 <mo_unkline+0x4e0>
    1e34:	ldr	r0, [pc, r0]
    1e38:	ldr	r0, [r0, #8]
    1e3c:	cmp	r0, #0
    1e40:	beq	210c <mo_unkline+0x474>
    1e44:	ldr	r0, [pc, #816]	; 217c <mo_unkline+0x4e4>
    1e48:	ldr	r0, [pc, r0]
    1e4c:	ldr	r3, [r0]
    1e50:	sub	sp, sp, #16
    1e54:	ldr	r0, [pc, #804]	; 2180 <mo_unkline+0x4e8>
    1e58:	mov	r2, #4
    1e5c:	add	r0, pc, r0
    1e60:	stm	sp, {r0, r7}
    1e64:	str	r5, [sp, #8]
    1e68:	mov	r0, r4
    1e6c:	ldr	r1, [pc, #784]	; 2184 <mo_unkline+0x4ec>
    1e70:	add	r1, pc, r1
    1e74:	bl	e34 <cluster_generic@plt>
    1e78:	add	sp, sp, #16
    1e7c:	mov	r0, #1
    1e80:	cmp	r6, #0
    1e84:	beq	210c <mo_unkline+0x474>
    1e88:	mov	r8, r6
    1e8c:	ldr	r1, [r8, #44]!	; 0x2c
    1e90:	cmp	r1, #0
    1e94:	beq	202c <mo_unkline+0x394>
    1e98:	cmp	r0, #0
    1e9c:	beq	2078 <mo_unkline+0x3e0>
    1ea0:	ldr	r0, [pc, #736]	; 2188 <mo_unkline+0x4f0>
    1ea4:	ldr	r0, [pc, r0]
    1ea8:	ldr	r5, [r0]
    1eac:	cmp	r5, #0
    1eb0:	bne	1ec4 <mo_unkline+0x22c>
    1eb4:	b	204c <mo_unkline+0x3b4>
    1eb8:	ldr	r5, [r5, #8]
    1ebc:	cmp	r5, #0
    1ec0:	beq	204c <mo_unkline+0x3b4>
    1ec4:	ldr	r0, [r5]
    1ec8:	cmp	r0, r6
    1ecc:	bne	1eb8 <mo_unkline+0x220>
    1ed0:	ldr	r3, [r6, #16]
    1ed4:	ldr	r2, [r6, #28]
    1ed8:	ldr	r1, [pc, #688]	; 2190 <mo_unkline+0x4f8>
    1edc:	mov	r0, r4
    1ee0:	add	r1, pc, r1
    1ee4:	bl	f0c <sendto_one_notice@plt>
    1ee8:	mov	r0, r4
    1eec:	bl	e1c <get_oper_name@plt>
    1ef0:	mov	r3, r0
    1ef4:	ldr	r0, [r6, #16]
    1ef8:	ldr	r1, [r6, #28]
    1efc:	sub	sp, sp, #8
    1f00:	str	r1, [sp]
    1f04:	str	r0, [sp, #4]
    1f08:	mov	r0, #256	; 0x100
    1f0c:	mov	r1, #0
    1f10:	mov	r9, #0
    1f14:	ldr	r2, [pc, #632]	; 2194 <mo_unkline+0x4fc>
    1f18:	add	r2, pc, r2
    1f1c:	bl	df8 <sendto_realops_snomask@plt>
    1f20:	add	sp, sp, #8
    1f24:	mov	r0, r4
    1f28:	bl	e1c <get_oper_name@plt>
    1f2c:	mov	r2, r0
    1f30:	ldr	r0, [r6, #16]
    1f34:	ldr	r3, [r6, #28]
    1f38:	sub	sp, sp, #8
    1f3c:	str	r0, [sp]
    1f40:	mov	r0, #7
    1f44:	ldr	r1, [pc, #588]	; 2198 <mo_unkline+0x500>
    1f48:	add	r1, pc, r1
    1f4c:	bl	edc <ilog@plt>
    1f50:	add	sp, sp, #8
    1f54:	bl	d8c <rb_current_time@plt>
    1f58:	ldr	r1, [r6, #40]	; 0x28
    1f5c:	mov	sl, r0
    1f60:	ldr	r0, [r6, #12]
    1f64:	mov	r2, sl
    1f68:	cmp	r1, sl
    1f6c:	addge	r2, r1, #1
    1f70:	str	r2, [r6, #36]	; 0x24
    1f74:	str	r2, [r6, #40]	; 0x28
    1f78:	bl	dec <operhash_delete@plt>
    1f7c:	mov	r0, r4
    1f80:	bl	e1c <get_oper_name@plt>
    1f84:	bl	e40 <operhash_add@plt>
    1f88:	str	r0, [r6, #12]
    1f8c:	ldr	r0, [r6, #4]
    1f90:	ldr	ip, [r6, #16]
    1f94:	ldr	r2, [r6, #28]
    1f98:	ldr	r3, [r6, #40]	; 0x28
    1f9c:	orr	r0, r0, #8912896	; 0x880000
    1fa0:	str	r0, [r6, #4]
    1fa4:	ldr	r0, [pc, #496]	; 219c <mo_unkline+0x504>
    1fa8:	ldr	r0, [pc, r0]
    1fac:	ldr	r0, [r0]
    1fb0:	ldr	r7, [pc, #488]	; 21a0 <mo_unkline+0x508>
    1fb4:	ldr	r7, [pc, r7]
    1fb8:	ldr	r1, [r8]
    1fbc:	ldr	r7, [r7]
    1fc0:	sub	sp, sp, #32
    1fc4:	ldr	lr, [pc, #472]	; 21a4 <mo_unkline+0x50c>
    1fc8:	sub	r1, r1, r3
    1fcc:	add	r4, r4, #396	; 0x18c
    1fd0:	str	r2, [sp, #8]
    1fd4:	str	r3, [sp, #16]
    1fd8:	orr	r2, r0, r7
    1fdc:	mov	r0, #0
    1fe0:	mov	r3, #0
    1fe4:	str	ip, [sp, #12]
    1fe8:	str	r9, [sp, #20]
    1fec:	str	r1, [sp, #24]
    1ff0:	mov	r1, #0
    1ff4:	str	r4, [sp, #4]
    1ff8:	add	lr, pc, lr
    1ffc:	str	lr, [sp]
    2000:	bl	e64 <sendto_server@plt>
    2004:	add	sp, sp, #32
    2008:	ldr	r1, [r6, #16]
    200c:	ldr	r0, [r6, #28]
    2010:	bl	f00 <remove_reject_mask@plt>
    2014:	mov	r0, r6
    2018:	mov	r1, r5
    201c:	mov	r2, sl
    2020:	bl	e10 <deactivate_conf@plt>
    2024:	sub	sp, fp, #28
    2028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    202c:	mov	r0, r4
    2030:	mov	r1, r6
    2034:	bl	2894 <remove_temp_kline>
    2038:	cmp	r0, #0
    203c:	bne	204c <mo_unkline+0x3b4>
    2040:	mov	r0, r4
    2044:	mov	r1, r6
    2048:	bl	2a9c <remove_permkline_match>
    204c:	sub	sp, fp, #28
    2050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2054:	ldr	r0, [r4, #24]
    2058:	cmp	r0, #0
    205c:	ldrne	r0, [r0, #36]	; 0x24
    2060:	cmpne	r0, #0
    2064:	bne	2084 <mo_unkline+0x3ec>
    2068:	sub	sp, sp, #8
    206c:	ldr	r0, [pc, #236]	; 2160 <mo_unkline+0x4c8>
    2070:	add	r0, pc, r0
    2074:	b	1d00 <mo_unkline+0x68>
    2078:	ldr	r1, [pc, #296]	; 21a8 <mo_unkline+0x510>
    207c:	add	r1, pc, r1
    2080:	b	2114 <mo_unkline+0x47c>
    2084:	ldr	r1, [pc, #208]	; 215c <mo_unkline+0x4c4>
    2088:	add	r1, pc, r1
    208c:	bl	f48 <privilegeset_in_set@plt>
    2090:	cmp	r0, #0
    2094:	beq	2068 <mo_unkline+0x3d0>
    2098:	ldr	r2, [r8, #12]
    209c:	ldr	r0, [pc, #192]	; 2164 <mo_unkline+0x4cc>
    20a0:	ldr	r0, [pc, r0]
    20a4:	ldr	r3, [r0]
    20a8:	sub	sp, sp, #16
    20ac:	ldr	r0, [pc, #180]	; 2168 <mo_unkline+0x4d0>
    20b0:	add	r0, pc, r0
    20b4:	stm	sp, {r0, r7}
    20b8:	str	r5, [sp, #8]
    20bc:	mov	r0, r4
    20c0:	ldr	r1, [pc, #164]	; 216c <mo_unkline+0x4d4>
    20c4:	add	r1, pc, r1
    20c8:	bl	d68 <propagate_generic@plt>
    20cc:	add	sp, sp, #16
    20d0:	ldr	r0, [r8, #12]
    20d4:	ldr	r1, [pc, #148]	; 2170 <mo_unkline+0x4d8>
    20d8:	ldr	r1, [pc, r1]
    20dc:	add	r1, r1, #88	; 0x58
    20e0:	bl	ee8 <match@plt>
    20e4:	cmp	r0, #0
    20e8:	beq	204c <mo_unkline+0x3b4>
    20ec:	mov	r0, r5
    20f0:	mov	r1, #64	; 0x40
    20f4:	mov	r2, r7
    20f8:	bl	f24 <find_exact_conf_by_address@plt>
    20fc:	mov	r6, r0
    2100:	mov	r0, #0
    2104:	cmp	r6, #0
    2108:	bne	1e88 <mo_unkline+0x1f0>
    210c:	ldr	r1, [pc, #120]	; 218c <mo_unkline+0x4f4>
    2110:	add	r1, pc, r1
    2114:	mov	r0, r4
    2118:	mov	r2, r7
    211c:	mov	r3, r5
    2120:	bl	f0c <sendto_one_notice@plt>
    2124:	sub	sp, fp, #28
    2128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    212c:	ldr	r1, [pc, #32]	; 2154 <mo_unkline+0x4bc>
    2130:	mov	r0, r4
    2134:	add	r1, pc, r1
    2138:	bl	f0c <sendto_one_notice@plt>
    213c:	sub	sp, fp, #28
    2140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2144:	.word	0x000012ba
    2148:	.word	0x000012f7
    214c:	.word	0x000123d0
    2150:	.word	0x00000f07
    2154:	.word	0x00000ec7
    2158:	.word	0x00000e6e
    215c:	.word	0x00000bc1
    2160:	.word	0x00000bde
    2164:	.word	0x00012014
    2168:	.word	0x00000eeb
    216c:	.word	0x00000b48
    2170:	.word	0x00012004
    2174:	.word	0x000122b0
    2178:	.word	0x00012298
    217c:	.word	0x0001226c
    2180:	.word	0x0000113f
    2184:	.word	0x00000d9c
    2188:	.word	0x00012218
    218c:	.word	0x00000eff
    2190:	.word	0x0000117b
    2194:	.word	0x0000116a
    2198:	.word	0x00001168
    219c:	.word	0x0001211c
    21a0:	.word	0x0001210c
    21a4:	.word	0x000010c4
    21a8:	.word	0x00000fa8

000021ac <already_placed_kline>:
    21ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    21b0:	add	fp, sp, #28
    21b4:	sub	sp, sp, #148	; 0x94
    21b8:	mov	r5, r1
    21bc:	mov	r8, r0
    21c0:	mov	r4, r2
    21c4:	mov	r0, r2
    21c8:	mov	r1, #64	; 0x40
    21cc:	mov	r9, r3
    21d0:	mov	r2, r5
    21d4:	bl	f24 <find_exact_conf_by_address@plt>
    21d8:	mov	r7, r0
    21dc:	cmp	r0, #0
    21e0:	bne	2294 <already_placed_kline+0xe8>
    21e4:	ldr	r0, [pc, #284]	; 2308 <already_placed_kline+0x15c>
    21e8:	ldr	r0, [pc, r0]
    21ec:	ldr	r0, [r0, #140]	; 0x8c
    21f0:	cmp	r0, #0
    21f4:	beq	2294 <already_placed_kline+0xe8>
    21f8:	add	r7, sp, #20
    21fc:	mov	r6, #0
    2200:	add	r2, sp, #16
    2204:	mov	r0, r4
    2208:	mov	r1, r7
    220c:	str	r6, [sp, #16]
    2210:	bl	d80 <parse_netmask_strict@plt>
    2214:	cmp	r0, #2
    2218:	beq	2228 <already_placed_kline+0x7c>
    221c:	cmp	r0, #3
    2220:	movne	r7, #0
    2224:	moveq	r0, #10
    2228:	mov	r1, #64	; 0x40
    222c:	mov	r2, #0
    2230:	mov	r3, r7
    2234:	str	r1, [sp]
    2238:	stmib	sp, {r0, r5, r6}
    223c:	mov	r0, r4
    2240:	mov	r1, #0
    2244:	bl	dbc <find_conf_by_address@plt>
    2248:	cmp	r0, #0
    224c:	beq	22fc <already_placed_kline+0x150>
    2250:	mov	r7, r0
    2254:	ldr	r0, [r0, #16]
    2258:	mov	r1, #47	; 0x2f
    225c:	bl	ec4 <strchr@plt>
    2260:	ldr	sl, [sp, #16]
    2264:	cmp	sl, #1
    2268:	blt	229c <already_placed_kline+0xf0>
    226c:	cmp	r0, #0
    2270:	beq	22fc <already_placed_kline+0x150>
    2274:	add	r0, r0, #1
    2278:	mov	r1, #0
    227c:	mov	r2, #10
    2280:	mov	r6, #0
    2284:	bl	da4 <strtol@plt>
    2288:	cmp	sl, r0
    228c:	bge	229c <already_placed_kline+0xf0>
    2290:	b	22fc <already_placed_kline+0x150>
    2294:	cmp	r7, #0
    2298:	beq	22f8 <already_placed_kline+0x14c>
    229c:	cmp	r9, #0
    22a0:	bne	22b4 <already_placed_kline+0x108>
    22a4:	ldrb	r0, [r7, #6]
    22a8:	mov	r6, #0
    22ac:	tst	r0, #128	; 0x80
    22b0:	bne	22fc <already_placed_kline+0x150>
    22b4:	ldr	r1, [r7, #20]
    22b8:	ldr	r0, [r7, #16]
    22bc:	ldr	r2, [r7, #28]
    22c0:	ldr	r3, [pc, #68]	; 230c <already_placed_kline+0x160>
    22c4:	add	r3, pc, r3
    22c8:	cmp	r1, #0
    22cc:	str	r2, [sp]
    22d0:	mov	r2, r5
    22d4:	movne	r3, r1
    22d8:	stmib	sp, {r0, r3}
    22dc:	mov	r0, r8
    22e0:	mov	r3, r4
    22e4:	ldr	r1, [pc, #36]	; 2310 <already_placed_kline+0x164>
    22e8:	add	r1, pc, r1
    22ec:	bl	f0c <sendto_one_notice@plt>
    22f0:	mov	r6, #1
    22f4:	b	22fc <already_placed_kline+0x150>
    22f8:	mov	r6, #0
    22fc:	mov	r0, r6
    2300:	sub	sp, fp, #28
    2304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2308:	.word	0x00011ef8
    230c:	.word	0x00000ab2
    2310:	.word	0x00000a9a

00002314 <apply_tkline>:
    2314:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2318:	add	fp, sp, #24
    231c:	sub	sp, sp, #24
    2320:	ldr	r4, [fp, #8]
    2324:	mov	r7, r3
    2328:	mov	r8, r2
    232c:	mov	r5, r1
    2330:	mov	r9, r0
    2334:	bl	d8c <rb_current_time@plt>
    2338:	add	r0, r0, r4
    233c:	str	r0, [r5, #36]	; 0x24
    2340:	mov	r0, r5
    2344:	bl	dc8 <add_temp_kline@plt>
    2348:	cmp	r7, #0
    234c:	ldrbne	r0, [r7]
    2350:	cmpne	r0, #0
    2354:	bne	23cc <apply_tkline+0xb8>
    2358:	movw	r0, #34953	; 0x8889
    235c:	movt	r0, #34952	; 0x8888
    2360:	smmla	r0, r4, r0, r4
    2364:	asr	r1, r0, #5
    2368:	add	r6, r1, r0, lsr #31
    236c:	mov	r0, r9
    2370:	bl	e1c <get_oper_name@plt>
    2374:	mov	r3, r0
    2378:	ldr	r0, [r5, #16]!
    237c:	mov	r4, r5
    2380:	ldr	r1, [r4, #12]!
    2384:	str	r0, [sp, #8]
    2388:	str	r6, [sp]
    238c:	str	r8, [sp, #12]
    2390:	mov	r0, #256	; 0x100
    2394:	str	r1, [sp, #4]
    2398:	mov	r1, #0
    239c:	ldr	r2, [pc, #212]	; 2478 <apply_tkline+0x164>
    23a0:	add	r2, pc, r2
    23a4:	bl	df8 <sendto_realops_snomask@plt>
    23a8:	mov	r0, r9
    23ac:	bl	e1c <get_oper_name@plt>
    23b0:	mov	r2, r0
    23b4:	ldr	r0, [r4]
    23b8:	ldr	r1, [r5]
    23bc:	stm	sp, {r0, r1, r8}
    23c0:	ldr	r1, [pc, #180]	; 247c <apply_tkline+0x168>
    23c4:	add	r1, pc, r1
    23c8:	b	2444 <apply_tkline+0x130>
    23cc:	movw	r0, #34953	; 0x8889
    23d0:	movt	r0, #34952	; 0x8888
    23d4:	smmla	r0, r4, r0, r4
    23d8:	asr	r1, r0, #5
    23dc:	add	r6, r1, r0, lsr #31
    23e0:	mov	r0, r9
    23e4:	bl	e1c <get_oper_name@plt>
    23e8:	mov	r3, r0
    23ec:	ldr	r0, [r5, #16]!
    23f0:	mov	r4, r5
    23f4:	ldr	r1, [r4, #12]!
    23f8:	str	r0, [sp, #8]
    23fc:	str	r6, [sp]
    2400:	str	r8, [sp, #12]
    2404:	str	r7, [sp, #16]
    2408:	mov	r0, #256	; 0x100
    240c:	str	r1, [sp, #4]
    2410:	mov	r1, #0
    2414:	ldr	r2, [pc, #100]	; 2480 <apply_tkline+0x16c>
    2418:	add	r2, pc, r2
    241c:	bl	df8 <sendto_realops_snomask@plt>
    2420:	mov	r0, r9
    2424:	bl	e1c <get_oper_name@plt>
    2428:	mov	r2, r0
    242c:	ldr	r0, [r4]
    2430:	ldr	r1, [r5]
    2434:	stm	sp, {r0, r1, r8}
    2438:	str	r7, [sp, #12]
    243c:	ldr	r1, [pc, #64]	; 2484 <apply_tkline+0x170>
    2440:	add	r1, pc, r1
    2444:	mov	r0, #7
    2448:	mov	r3, r6
    244c:	bl	edc <ilog@plt>
    2450:	ldr	r0, [r5]
    2454:	ldr	r3, [r4]
    2458:	mov	r2, r6
    245c:	str	r0, [sp]
    2460:	mov	r0, r9
    2464:	ldr	r1, [pc, #28]	; 2488 <apply_tkline+0x174>
    2468:	add	r1, pc, r1
    246c:	bl	f0c <sendto_one_notice@plt>
    2470:	sub	sp, fp, #24
    2474:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2478:	.word	0x00000b3f
    247c:	.word	0x00000a17
    2480:	.word	0x00000afa
    2484:	.word	0x000009df
    2488:	.word	0x00000ae0

0000248c <apply_kline>:
    248c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2490:	add	fp, sp, #24
    2494:	sub	sp, sp, #16
    2498:	mov	r6, r2
    249c:	mov	r4, r0
    24a0:	ldr	r0, [r1, #16]
    24a4:	ldr	r2, [r1, #28]
    24a8:	mov	r7, r3
    24ac:	mov	r5, r1
    24b0:	str	r1, [sp]
    24b4:	mov	r1, #64	; 0x40
    24b8:	mov	r3, #0
    24bc:	mov	r8, #0
    24c0:	bl	e94 <add_conf_by_address@plt>
    24c4:	ldr	r3, [r5, #16]
    24c8:	ldr	r2, [r5, #28]
    24cc:	cmp	r7, #0
    24d0:	beq	2554 <apply_kline+0xc8>
    24d4:	ldrb	r0, [r7]
    24d8:	str	r6, [sp]
    24dc:	mov	r1, r4
    24e0:	cmp	r0, #0
    24e4:	movne	r0, r7
    24e8:	stmib	sp, {r0, r8}
    24ec:	mov	r0, #0
    24f0:	bl	e04 <bandb_add@plt>
    24f4:	ldrb	r0, [r7]
    24f8:	cmp	r0, #0
    24fc:	beq	2568 <apply_kline+0xdc>
    2500:	mov	r0, r4
    2504:	bl	e1c <get_oper_name@plt>
    2508:	mov	r3, r0
    250c:	ldr	r0, [r5, #16]
    2510:	ldr	r1, [r5, #28]
    2514:	str	r1, [sp]
    2518:	stmib	sp, {r0, r6, r7}
    251c:	mov	r0, #256	; 0x100
    2520:	mov	r1, #0
    2524:	ldr	r2, [pc, #180]	; 25e0 <apply_kline+0x154>
    2528:	add	r2, pc, r2
    252c:	bl	df8 <sendto_realops_snomask@plt>
    2530:	mov	r0, r4
    2534:	bl	e1c <get_oper_name@plt>
    2538:	mov	r2, r0
    253c:	ldr	r0, [r5, #16]
    2540:	ldr	r3, [r5, #28]
    2544:	stm	sp, {r0, r6, r7}
    2548:	ldr	r1, [pc, #148]	; 25e4 <apply_kline+0x158>
    254c:	add	r1, pc, r1
    2550:	b	25b8 <apply_kline+0x12c>
    2554:	mov	r0, #0
    2558:	mov	r1, r4
    255c:	stm	sp, {r6, r8}
    2560:	str	r8, [sp, #8]
    2564:	bl	e04 <bandb_add@plt>
    2568:	mov	r0, r4
    256c:	bl	e1c <get_oper_name@plt>
    2570:	mov	r3, r0
    2574:	ldr	r0, [r5, #16]
    2578:	ldr	r1, [r5, #28]
    257c:	str	r1, [sp]
    2580:	stmib	sp, {r0, r6}
    2584:	mov	r0, #256	; 0x100
    2588:	mov	r1, #0
    258c:	ldr	r2, [pc, #84]	; 25e8 <apply_kline+0x15c>
    2590:	add	r2, pc, r2
    2594:	bl	df8 <sendto_realops_snomask@plt>
    2598:	mov	r0, r4
    259c:	bl	e1c <get_oper_name@plt>
    25a0:	mov	r2, r0
    25a4:	ldr	r0, [r5, #16]
    25a8:	ldr	r3, [r5, #28]
    25ac:	stm	sp, {r0, r6}
    25b0:	ldr	r1, [pc, #52]	; 25ec <apply_kline+0x160>
    25b4:	add	r1, pc, r1
    25b8:	mov	r0, #7
    25bc:	bl	edc <ilog@plt>
    25c0:	ldr	r3, [r5, #16]
    25c4:	ldr	r2, [r5, #28]
    25c8:	ldr	r1, [pc, #32]	; 25f0 <apply_kline+0x164>
    25cc:	mov	r0, r4
    25d0:	add	r1, pc, r1
    25d4:	sub	sp, fp, #24
    25d8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    25dc:	b	f0c <sendto_one_notice@plt>
    25e0:	.word	0x00000a79
    25e4:	.word	0x00000a79
    25e8:	.word	0x000009e0
    25ec:	.word	0x000009dd
    25f0:	.word	0x00000a08

000025f4 <handle_remote_kline>:
    25f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    25f8:	add	fp, sp, #28
    25fc:	sub	sp, sp, #4
    2600:	ldr	r5, [fp, #8]
    2604:	mov	r4, r0
    2608:	mov	r7, r3
    260c:	mov	r8, r2
    2610:	mov	r9, r1
    2614:	mov	r0, r5
    2618:	bl	eb8 <strlen@plt>
    261c:	add	r0, r0, #8
    2620:	bic	r0, r0, #7
    2624:	sub	r6, sp, r0
    2628:	mov	sp, r6
    262c:	mov	r0, r6
    2630:	mov	r1, r5
    2634:	bl	e58 <strcpy@plt>
    2638:	ldr	r2, [r4, #32]
    263c:	mov	r3, #2
    2640:	cmp	r9, #0
    2644:	add	r0, r4, #152	; 0x98
    2648:	add	r1, r4, #163	; 0xa3
    264c:	movwgt	r3, #1
    2650:	add	r2, r2, #88	; 0x58
    2654:	bl	f3c <find_shared_conf@plt>
    2658:	cmp	r0, #0
    265c:	beq	287c <handle_remote_kline+0x288>
    2660:	mov	r0, r7
    2664:	mov	r1, #35	; 0x23
    2668:	bl	ec4 <strchr@plt>
    266c:	cmp	r0, #0
    2670:	bne	26b0 <handle_remote_kline+0xbc>
    2674:	mov	r0, r8
    2678:	mov	r1, #35	; 0x23
    267c:	bl	ec4 <strchr@plt>
    2680:	cmp	r0, #0
    2684:	bne	26b0 <handle_remote_kline+0xbc>
    2688:	mov	r0, r8
    268c:	mov	r1, #33	; 0x21
    2690:	bl	ec4 <strchr@plt>
    2694:	cmp	r0, #0
    2698:	bne	26b0 <handle_remote_kline+0xbc>
    269c:	mov	r0, r7
    26a0:	mov	r1, #64	; 0x40
    26a4:	bl	ec4 <strchr@plt>
    26a8:	cmp	r0, #0
    26ac:	beq	26c8 <handle_remote_kline+0xd4>
    26b0:	ldr	r1, [pc, #464]	; 2888 <handle_remote_kline+0x294>
    26b4:	mov	r0, r4
    26b8:	add	r1, pc, r1
    26bc:	bl	f0c <sendto_one_notice@plt>
    26c0:	sub	sp, fp, #28
    26c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    26c8:	mov	r0, r8
    26cc:	mov	r1, r7
    26d0:	bl	e7c <valid_wild_card@plt>
    26d4:	cmp	r0, #0
    26d8:	beq	27e4 <handle_remote_kline+0x1f0>
    26dc:	mov	r0, r4
    26e0:	mov	r1, r8
    26e4:	mov	r2, r7
    26e8:	mov	r3, r9
    26ec:	bl	21ac <already_placed_kline>
    26f0:	cmp	r0, #0
    26f4:	bne	287c <handle_remote_kline+0x288>
    26f8:	bl	d74 <make_conf@plt>
    26fc:	mov	r5, r0
    2700:	mov	r0, #64	; 0x40
    2704:	str	r0, [r5]
    2708:	bl	d8c <rb_current_time@plt>
    270c:	str	r0, [r5, #40]	; 0x28
    2710:	mov	r0, r8
    2714:	bl	eb8 <strlen@plt>
    2718:	add	r0, r0, #1
    271c:	bl	e88 <malloc@plt>
    2720:	cmp	r0, #0
    2724:	beq	2884 <handle_remote_kline+0x290>
    2728:	mov	r1, r8
    272c:	mov	sl, r0
    2730:	bl	e58 <strcpy@plt>
    2734:	mov	r0, r7
    2738:	str	sl, [r5, #28]
    273c:	bl	eb8 <strlen@plt>
    2740:	add	r0, r0, #1
    2744:	bl	e88 <malloc@plt>
    2748:	cmp	r0, #0
    274c:	beq	2884 <handle_remote_kline+0x290>
    2750:	mov	r1, r7
    2754:	mov	r8, r5
    2758:	mov	r5, r0
    275c:	bl	e58 <strcpy@plt>
    2760:	mov	r0, r4
    2764:	str	r5, [r8, #16]
    2768:	bl	e1c <get_oper_name@plt>
    276c:	bl	e40 <operhash_add@plt>
    2770:	str	r0, [r8, #12]
    2774:	mov	r0, r6
    2778:	bl	eb8 <strlen@plt>
    277c:	movw	r1, #391	; 0x187
    2780:	cmp	r0, r1
    2784:	mov	r1, #124	; 0x7c
    2788:	movcs	r0, #0
    278c:	strbcs	r0, [r6, #390]	; 0x186
    2790:	mov	r0, r6
    2794:	bl	ec4 <strchr@plt>
    2798:	cmp	r0, #0
    279c:	beq	2808 <handle_remote_kline+0x214>
    27a0:	mov	r5, r0
    27a4:	mov	r0, #0
    27a8:	strb	r0, [r5]
    27ac:	ldrb	r0, [r5, #1]!
    27b0:	cmp	r0, #0
    27b4:	beq	280c <handle_remote_kline+0x218>
    27b8:	mov	r0, r5
    27bc:	bl	eb8 <strlen@plt>
    27c0:	add	r0, r0, #1
    27c4:	bl	e88 <malloc@plt>
    27c8:	cmp	r0, #0
    27cc:	beq	2884 <handle_remote_kline+0x290>
    27d0:	mov	r1, r5
    27d4:	mov	r7, r0
    27d8:	bl	e58 <strcpy@plt>
    27dc:	str	r7, [r8, #24]
    27e0:	b	280c <handle_remote_kline+0x218>
    27e4:	ldr	r0, [pc, #160]	; 288c <handle_remote_kline+0x298>
    27e8:	ldr	r0, [pc, r0]
    27ec:	ldr	r2, [r0, #236]	; 0xec
    27f0:	ldr	r1, [pc, #152]	; 2890 <handle_remote_kline+0x29c>
    27f4:	mov	r0, r4
    27f8:	add	r1, pc, r1
    27fc:	bl	f0c <sendto_one_notice@plt>
    2800:	sub	sp, fp, #28
    2804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2808:	mov	r5, #0
    280c:	mov	r0, r6
    2810:	bl	eb8 <strlen@plt>
    2814:	add	r0, r0, #1
    2818:	bl	e88 <malloc@plt>
    281c:	cmp	r0, #0
    2820:	beq	2884 <handle_remote_kline+0x290>
    2824:	mov	r1, r6
    2828:	mov	r7, r0
    282c:	bl	e58 <strcpy@plt>
    2830:	cmp	r9, #1
    2834:	str	r7, [r8, #20]
    2838:	blt	2860 <handle_remote_kline+0x26c>
    283c:	sub	sp, sp, #8
    2840:	mov	r0, r4
    2844:	mov	r1, r8
    2848:	mov	r2, r6
    284c:	mov	r3, r5
    2850:	str	r9, [sp]
    2854:	bl	2314 <apply_tkline>
    2858:	add	sp, sp, #8
    285c:	b	2874 <handle_remote_kline+0x280>
    2860:	mov	r0, r4
    2864:	mov	r1, r8
    2868:	mov	r2, r6
    286c:	mov	r3, r5
    2870:	bl	248c <apply_kline>
    2874:	mov	r0, r8
    2878:	bl	e4c <check_one_kline@plt>
    287c:	sub	sp, fp, #28
    2880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2884:	bl	de0 <rb_outofmemory@plt>
    2888:	.word	0x000006ae
    288c:	.word	0x000118f8
    2890:	.word	0x000004e0

00002894 <remove_temp_kline>:
    2894:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2898:	add	fp, sp, #24
    289c:	sub	sp, sp, #8
    28a0:	ldr	r7, [pc, #472]	; 2a80 <remove_temp_kline+0x1ec>
    28a4:	mov	r4, r1
    28a8:	mov	r6, r0
    28ac:	ldr	r7, [pc, r7]
    28b0:	ldr	r5, [r7]
    28b4:	cmp	r5, #0
    28b8:	bne	28cc <remove_temp_kline+0x38>
    28bc:	b	28e0 <remove_temp_kline+0x4c>
    28c0:	ldr	r5, [r5, #8]
    28c4:	cmp	r5, #0
    28c8:	beq	28e0 <remove_temp_kline+0x4c>
    28cc:	ldr	r0, [r5]
    28d0:	cmp	r0, r4
    28d4:	bne	28c0 <remove_temp_kline+0x2c>
    28d8:	mov	r8, #0
    28dc:	b	2980 <remove_temp_kline+0xec>
    28e0:	ldr	r1, [pc, #432]	; 2a98 <remove_temp_kline+0x204>
    28e4:	ldr	r1, [pc, r1]
    28e8:	ldr	r5, [r1, #12]
    28ec:	cmp	r5, #0
    28f0:	beq	2910 <remove_temp_kline+0x7c>
    28f4:	add	r7, r1, #12
    28f8:	ldr	r0, [r5]
    28fc:	cmp	r0, r4
    2900:	beq	296c <remove_temp_kline+0xd8>
    2904:	ldr	r5, [r5, #8]
    2908:	cmp	r5, #0
    290c:	bne	28f8 <remove_temp_kline+0x64>
    2910:	ldr	r5, [r1, #24]
    2914:	cmp	r5, #0
    2918:	beq	2938 <remove_temp_kline+0xa4>
    291c:	add	r7, r1, #24
    2920:	ldr	r0, [r5]
    2924:	cmp	r0, r4
    2928:	beq	2974 <remove_temp_kline+0xe0>
    292c:	ldr	r5, [r5, #8]
    2930:	cmp	r5, #0
    2934:	bne	2920 <remove_temp_kline+0x8c>
    2938:	ldr	r5, [r1, #36]	; 0x24
    293c:	mov	r0, #0
    2940:	cmp	r5, #0
    2944:	beq	2964 <remove_temp_kline+0xd0>
    2948:	add	r7, r1, #36	; 0x24
    294c:	ldr	r1, [r5]
    2950:	cmp	r1, r4
    2954:	beq	297c <remove_temp_kline+0xe8>
    2958:	ldr	r5, [r5, #8]
    295c:	cmp	r5, #0
    2960:	bne	294c <remove_temp_kline+0xb8>
    2964:	sub	sp, fp, #24
    2968:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    296c:	mov	r8, #1
    2970:	b	2980 <remove_temp_kline+0xec>
    2974:	mov	r8, #2
    2978:	b	2980 <remove_temp_kline+0xec>
    297c:	mov	r8, #3
    2980:	ldr	r3, [r4, #16]
    2984:	ldr	r2, [r4, #28]
    2988:	ldr	r1, [pc, #244]	; 2a84 <remove_temp_kline+0x1f0>
    298c:	mov	r0, r6
    2990:	add	r1, pc, r1
    2994:	bl	f0c <sendto_one_notice@plt>
    2998:	mov	r0, r6
    299c:	bl	e1c <get_oper_name@plt>
    29a0:	mov	r3, r0
    29a4:	ldr	r0, [r4, #16]
    29a8:	ldr	r1, [r4, #28]
    29ac:	str	r1, [sp]
    29b0:	str	r0, [sp, #4]
    29b4:	mov	r0, #256	; 0x100
    29b8:	mov	r1, #0
    29bc:	ldr	r2, [pc, #196]	; 2a88 <remove_temp_kline+0x1f4>
    29c0:	add	r2, pc, r2
    29c4:	bl	df8 <sendto_realops_snomask@plt>
    29c8:	mov	r0, r6
    29cc:	bl	e1c <get_oper_name@plt>
    29d0:	mov	r2, r0
    29d4:	ldr	r0, [r4, #16]
    29d8:	ldr	r3, [r4, #28]
    29dc:	str	r0, [sp]
    29e0:	mov	r0, #7
    29e4:	ldr	r1, [pc, #160]	; 2a8c <remove_temp_kline+0x1f8>
    29e8:	add	r1, pc, r1
    29ec:	bl	edc <ilog@plt>
    29f0:	ldr	r0, [r5, #8]
    29f4:	ldr	r1, [r5, #4]
    29f8:	cmp	r0, #0
    29fc:	beq	2a0c <remove_temp_kline+0x178>
    2a00:	str	r1, [r0, #4]
    2a04:	ldr	r1, [r5, #4]
    2a08:	b	2a20 <remove_temp_kline+0x18c>
    2a0c:	ldr	r3, [pc, #124]	; 2a90 <remove_temp_kline+0x1fc>
    2a10:	add	r2, r8, r8, lsl #1
    2a14:	ldr	r3, [pc, r3]
    2a18:	add	r2, r3, r2, lsl #2
    2a1c:	str	r1, [r2, #4]
    2a20:	cmp	r1, #0
    2a24:	addne	r7, r1, #8
    2a28:	str	r0, [r7]
    2a2c:	mov	r0, #0
    2a30:	str	r0, [r5, #4]
    2a34:	str	r0, [r5, #8]
    2a38:	add	r0, r8, r8, lsl #1
    2a3c:	ldr	r1, [pc, #80]	; 2a94 <remove_temp_kline+0x200>
    2a40:	ldr	r1, [pc, r1]
    2a44:	add	r0, r1, r0, lsl #2
    2a48:	ldr	r1, [r0, #8]
    2a4c:	sub	r1, r1, #1
    2a50:	str	r1, [r0, #8]
    2a54:	mov	r0, r5
    2a58:	bl	e28 <rb_free_rb_dlink_node@plt>
    2a5c:	ldr	r1, [r4, #16]
    2a60:	ldr	r0, [r4, #28]
    2a64:	bl	f00 <remove_reject_mask@plt>
    2a68:	ldr	r0, [r4, #16]
    2a6c:	mov	r1, r4
    2a70:	bl	ed0 <delete_one_address_conf@plt>
    2a74:	mov	r0, #1
    2a78:	sub	sp, fp, #24
    2a7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2a80:	.word	0x00011828
    2a84:	.word	0x0000074b
    2a88:	.word	0x00000745
    2a8c:	.word	0x000006c8
    2a90:	.word	0x000116c0
    2a94:	.word	0x00011694
    2a98:	.word	0x000117f0

00002a9c <remove_permkline_match>:
    2a9c:	push	{r4, r5, fp, lr}
    2aa0:	add	fp, sp, #8
    2aa4:	sub	sp, sp, #8
    2aa8:	mov	r4, r1
    2aac:	ldr	r3, [r1, #16]
    2ab0:	ldr	r2, [r1, #28]
    2ab4:	ldr	r1, [pc, #144]	; 2b4c <remove_permkline_match+0xb0>
    2ab8:	mov	r5, r0
    2abc:	add	r1, pc, r1
    2ac0:	bl	f0c <sendto_one_notice@plt>
    2ac4:	mov	r0, r5
    2ac8:	bl	e1c <get_oper_name@plt>
    2acc:	mov	r3, r0
    2ad0:	ldr	r0, [r4, #16]
    2ad4:	ldr	r1, [r4, #28]
    2ad8:	str	r1, [sp]
    2adc:	str	r0, [sp, #4]
    2ae0:	mov	r0, #256	; 0x100
    2ae4:	mov	r1, #0
    2ae8:	ldr	r2, [pc, #96]	; 2b50 <remove_permkline_match+0xb4>
    2aec:	add	r2, pc, r2
    2af0:	bl	df8 <sendto_realops_snomask@plt>
    2af4:	mov	r0, r5
    2af8:	bl	e1c <get_oper_name@plt>
    2afc:	mov	r2, r0
    2b00:	ldr	r0, [r4, #16]
    2b04:	ldr	r3, [r4, #28]
    2b08:	str	r0, [sp]
    2b0c:	mov	r0, #7
    2b10:	ldr	r1, [pc, #60]	; 2b54 <remove_permkline_match+0xb8>
    2b14:	add	r1, pc, r1
    2b18:	bl	edc <ilog@plt>
    2b1c:	ldr	r1, [r4, #16]
    2b20:	ldr	r0, [r4, #28]
    2b24:	bl	f00 <remove_reject_mask@plt>
    2b28:	ldr	r2, [r4, #16]
    2b2c:	ldr	r1, [r4, #28]
    2b30:	mov	r0, #0
    2b34:	bl	f18 <bandb_del@plt>
    2b38:	ldr	r0, [r4, #16]
    2b3c:	mov	r1, r4
    2b40:	sub	sp, fp, #8
    2b44:	pop	{r4, r5, fp, lr}
    2b48:	b	ed0 <delete_one_address_conf@plt>
    2b4c:	.word	0x0000067a
    2b50:	.word	0x00000669
    2b54:	.word	0x0000059c

00002b58 <handle_remote_unkline>:
    2b58:	push	{r4, r5, r6, r7, fp, lr}
    2b5c:	add	fp, sp, #16
    2b60:	mov	r5, r2
    2b64:	ldr	r2, [r0, #32]
    2b68:	mov	r4, r0
    2b6c:	mov	r6, r1
    2b70:	add	r0, r0, #152	; 0x98
    2b74:	mov	r3, #4
    2b78:	add	r1, r4, #163	; 0xa3
    2b7c:	add	r2, r2, #88	; 0x58
    2b80:	bl	f3c <find_shared_conf@plt>
    2b84:	cmp	r0, #0
    2b88:	popeq	{r4, r5, r6, r7, fp, pc}
    2b8c:	mov	r0, r5
    2b90:	mov	r1, #64	; 0x40
    2b94:	mov	r2, r6
    2b98:	bl	f24 <find_exact_conf_by_address@plt>
    2b9c:	cmp	r0, #0
    2ba0:	beq	2bc0 <handle_remote_unkline+0x68>
    2ba4:	mov	r7, r0
    2ba8:	ldr	r0, [r0, #44]	; 0x2c
    2bac:	cmp	r0, #0
    2bb0:	beq	2bdc <handle_remote_unkline+0x84>
    2bb4:	ldr	r1, [pc, #76]	; 2c08 <handle_remote_unkline+0xb0>
    2bb8:	add	r1, pc, r1
    2bbc:	b	2bc8 <handle_remote_unkline+0x70>
    2bc0:	ldr	r1, [pc, #60]	; 2c04 <handle_remote_unkline+0xac>
    2bc4:	add	r1, pc, r1
    2bc8:	mov	r0, r4
    2bcc:	mov	r2, r6
    2bd0:	mov	r3, r5
    2bd4:	pop	{r4, r5, r6, r7, fp, lr}
    2bd8:	b	f0c <sendto_one_notice@plt>
    2bdc:	mov	r0, r4
    2be0:	mov	r1, r7
    2be4:	bl	2894 <remove_temp_kline>
    2be8:	cmp	r0, #0
    2bec:	beq	2bf4 <handle_remote_unkline+0x9c>
    2bf0:	pop	{r4, r5, r6, r7, fp, pc}
    2bf4:	mov	r0, r4
    2bf8:	mov	r1, r7
    2bfc:	pop	{r4, r5, r6, r7, fp, lr}
    2c00:	b	2a9c <remove_permkline_match>
    2c04:	.word	0x0000044b
    2c08:	.word	0x0000046c

Disassembly of section .fini:

00002c0c <_fini>:
    2c0c:	push	{r3, lr}
    2c10:	pop	{r3, pc}
