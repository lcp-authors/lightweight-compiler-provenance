
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011b48 <.init>:
   11b48:	push	{r3, lr}
   11b4c:	bl	11c7c <_start@@Base+0x3c>
   11b50:	pop	{r3, pc}

Disassembly of section .plt:

00011b54 <calloc@plt-0x14>:
   11b54:	push	{lr}		; (str lr, [sp, #-4]!)
   11b58:	ldr	lr, [pc, #4]	; 11b64 <calloc@plt-0x4>
   11b5c:	add	lr, pc, lr
   11b60:	ldr	pc, [lr, #8]!
   11b64:	muleq	r1, ip, r4

00011b68 <calloc@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #20, 20	; 0x14000
   11b70:	ldr	pc, [ip, #1180]!	; 0x49c

00011b74 <raise@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #20, 20	; 0x14000
   11b7c:	ldr	pc, [ip, #1172]!	; 0x494

00011b80 <strcmp@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #20, 20	; 0x14000
   11b88:	ldr	pc, [ip, #1164]!	; 0x48c

00011b8c <printf@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #20, 20	; 0x14000
   11b94:	ldr	pc, [ip, #1156]!	; 0x484

00011b98 <free@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #20, 20	; 0x14000
   11ba0:	ldr	pc, [ip, #1148]!	; 0x47c

00011ba4 <time@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #20, 20	; 0x14000
   11bac:	ldr	pc, [ip, #1140]!	; 0x474

00011bb0 <realloc@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #20, 20	; 0x14000
   11bb8:	ldr	pc, [ip, #1132]!	; 0x46c

00011bbc <strcpy@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #20, 20	; 0x14000
   11bc4:	ldr	pc, [ip, #1124]!	; 0x464

00011bc8 <puts@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #20, 20	; 0x14000
   11bd0:	ldr	pc, [ip, #1116]!	; 0x45c

00011bd4 <malloc@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #20, 20	; 0x14000
   11bdc:	ldr	pc, [ip, #1108]!	; 0x454

00011be0 <__libc_start_main@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #20, 20	; 0x14000
   11be8:	ldr	pc, [ip, #1100]!	; 0x44c

00011bec <__gmon_start__@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #20, 20	; 0x14000
   11bf4:	ldr	pc, [ip, #1092]!	; 0x444

00011bf8 <strlen@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #20, 20	; 0x14000
   11c00:	ldr	pc, [ip, #1084]!	; 0x43c

00011c04 <srand@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #20, 20	; 0x14000
   11c0c:	ldr	pc, [ip, #1076]!	; 0x434

00011c10 <snprintf@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #20, 20	; 0x14000
   11c18:	ldr	pc, [ip, #1068]!	; 0x42c

00011c1c <__isoc99_sscanf@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #20, 20	; 0x14000
   11c24:	ldr	pc, [ip, #1060]!	; 0x424

00011c28 <rand@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #20, 20	; 0x14000
   11c30:	ldr	pc, [ip, #1052]!	; 0x41c

00011c34 <abort@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #20, 20	; 0x14000
   11c3c:	ldr	pc, [ip, #1044]!	; 0x414

Disassembly of section .text:

00011c40 <_start@@Base>:
   11c40:	mov	fp, #0
   11c44:	mov	lr, #0
   11c48:	pop	{r1}		; (ldr r1, [sp], #4)
   11c4c:	mov	r2, sp
   11c50:	push	{r2}		; (str r2, [sp, #-4]!)
   11c54:	push	{r0}		; (str r0, [sp, #-4]!)
   11c58:	ldr	ip, [pc, #16]	; 11c70 <_start@@Base+0x30>
   11c5c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c60:	ldr	r0, [pc, #12]	; 11c74 <_start@@Base+0x34>
   11c64:	ldr	r3, [pc, #12]	; 11c78 <_start@@Base+0x38>
   11c68:	bl	11be0 <__libc_start_main@plt>
   11c6c:	bl	11c34 <abort@plt>
   11c70:	andeq	r5, r1, r8, lsl #14
   11c74:	andeq	r1, r1, r8, ror #26
   11c78:	andeq	r5, r1, r8, lsr #13
   11c7c:	ldr	r3, [pc, #20]	; 11c98 <_start@@Base+0x58>
   11c80:	ldr	r2, [pc, #20]	; 11c9c <_start@@Base+0x5c>
   11c84:	add	r3, pc, r3
   11c88:	ldr	r2, [r3, r2]
   11c8c:	cmp	r2, #0
   11c90:	bxeq	lr
   11c94:	b	11bec <__gmon_start__@plt>
   11c98:	andeq	r4, r1, r4, ror r3
   11c9c:	andeq	r0, r0, r4, asr r0
   11ca0:	ldr	r3, [pc, #28]	; 11cc4 <_start@@Base+0x84>
   11ca4:	ldr	r0, [pc, #28]	; 11cc8 <_start@@Base+0x88>
   11ca8:	sub	r3, r3, r0
   11cac:	cmp	r3, #6
   11cb0:	bxls	lr
   11cb4:	ldr	r3, [pc, #16]	; 11ccc <_start@@Base+0x8c>
   11cb8:	cmp	r3, #0
   11cbc:	bxeq	lr
   11cc0:	bx	r3
   11cc4:	andeq	r6, r2, r3, rrx
   11cc8:	andeq	r6, r2, r0, rrx
   11ccc:	andeq	r0, r0, r0
   11cd0:	ldr	r1, [pc, #36]	; 11cfc <_start@@Base+0xbc>
   11cd4:	ldr	r0, [pc, #36]	; 11d00 <_start@@Base+0xc0>
   11cd8:	sub	r1, r1, r0
   11cdc:	asr	r1, r1, #2
   11ce0:	add	r1, r1, r1, lsr #31
   11ce4:	asrs	r1, r1, #1
   11ce8:	bxeq	lr
   11cec:	ldr	r3, [pc, #16]	; 11d04 <_start@@Base+0xc4>
   11cf0:	cmp	r3, #0
   11cf4:	bxeq	lr
   11cf8:	bx	r3
   11cfc:	andeq	r6, r2, r0, rrx
   11d00:	andeq	r6, r2, r0, rrx
   11d04:	andeq	r0, r0, r0
   11d08:	push	{r4, lr}
   11d0c:	ldr	r4, [pc, #24]	; 11d2c <_start@@Base+0xec>
   11d10:	ldrb	r3, [r4]
   11d14:	cmp	r3, #0
   11d18:	popne	{r4, pc}
   11d1c:	bl	11ca0 <_start@@Base+0x60>
   11d20:	mov	r3, #1
   11d24:	strb	r3, [r4]
   11d28:	pop	{r4, pc}
   11d2c:	andeq	r6, r2, r0, rrx
   11d30:	ldr	r0, [pc, #40]	; 11d60 <_start@@Base+0x120>
   11d34:	ldr	r3, [r0]
   11d38:	cmp	r3, #0
   11d3c:	bne	11d44 <_start@@Base+0x104>
   11d40:	b	11cd0 <_start@@Base+0x90>
   11d44:	ldr	r3, [pc, #24]	; 11d64 <_start@@Base+0x124>
   11d48:	cmp	r3, #0
   11d4c:	beq	11d40 <_start@@Base+0x100>
   11d50:	push	{r4, lr}
   11d54:	blx	r3
   11d58:	pop	{r4, lr}
   11d5c:	b	11cd0 <_start@@Base+0x90>
   11d60:	andeq	r5, r2, r4, lsl pc
   11d64:	andeq	r0, r0, r0

00011d68 <main@@Base>:
   11d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d6c:	sub	sp, sp, #356	; 0x164
   11d70:	add	r0, sp, #292	; 0x124
   11d74:	bl	11ba4 <time@plt>
   11d78:	bl	11c04 <srand@plt>
   11d7c:	bl	11c28 <rand@plt>
   11d80:	ldr	r3, [pc, #1000]	; 12170 <main@@Base+0x408>
   11d84:	umull	r2, r3, r3, r0
   11d88:	lsr	r3, r3, #5
   11d8c:	mov	r2, #100	; 0x64
   11d90:	mul	r3, r2, r3
   11d94:	sub	r0, r0, r3
   11d98:	add	r5, r0, r2
   11d9c:	add	r0, sp, #296	; 0x128
   11da0:	bl	12198 <table_init@@Base>
   11da4:	cmp	r5, #0
   11da8:	ble	11dc4 <main@@Base+0x5c>
   11dac:	mov	r4, #0
   11db0:	add	r0, sp, #296	; 0x128
   11db4:	bl	14480 <table_add_row@@Base>
   11db8:	add	r4, r4, #1
   11dbc:	cmp	r5, r4
   11dc0:	bne	11db0 <main@@Base+0x48>
   11dc4:	add	r0, sp, #296	; 0x128
   11dc8:	bl	14478 <table_get_row_length@@Base>
   11dcc:	mov	fp, r0
   11dd0:	bl	11c28 <rand@plt>
   11dd4:	ldr	r3, [pc, #920]	; 12174 <main@@Base+0x40c>
   11dd8:	umull	r2, r3, r3, r0
   11ddc:	lsr	r3, r3, #2
   11de0:	add	r3, r3, r3, lsl #2
   11de4:	sub	r0, r0, r3
   11de8:	add	r5, r0, #2
   11dec:	cmp	r5, #0
   11df0:	ble	11e34 <main@@Base+0xcc>
   11df4:	mov	r4, #0
   11df8:	ldr	r8, [pc, #888]	; 12178 <main@@Base+0x410>
   11dfc:	mov	r7, #255	; 0xff
   11e00:	mov	r6, r4
   11e04:	mov	r3, r4
   11e08:	mov	r2, r8
   11e0c:	mov	r1, r7
   11e10:	add	r0, sp, #36	; 0x24
   11e14:	bl	11c10 <snprintf@plt>
   11e18:	mov	r2, r6
   11e1c:	add	r1, sp, #36	; 0x24
   11e20:	add	r0, sp, #296	; 0x128
   11e24:	bl	13720 <table_add_column@@Base>
   11e28:	add	r4, r4, #1
   11e2c:	cmp	r5, r4
   11e30:	bne	11e04 <main@@Base+0x9c>
   11e34:	add	r0, sp, #296	; 0x128
   11e38:	bl	136a4 <table_get_column_length@@Base>
   11e3c:	subs	sl, r0, #0
   11e40:	ble	12128 <main@@Base+0x3c0>
   11e44:	mov	r4, #0
   11e48:	ldr	r6, [pc, #812]	; 1217c <main@@Base+0x414>
   11e4c:	b	11e90 <main@@Base+0x128>
   11e50:	bl	11c28 <rand@plt>
   11e54:	smull	r2, r3, r6, r0
   11e58:	asr	r2, r0, #31
   11e5c:	rsb	r2, r2, r3, asr #3
   11e60:	add	r2, r2, r2, lsl #2
   11e64:	sub	r3, r0, r2, lsl #2
   11e68:	mov	r2, r4
   11e6c:	mov	r1, r5
   11e70:	add	r0, sp, #296	; 0x128
   11e74:	bl	14cdc <table_set_int@@Base>
   11e78:	add	r5, r5, #1
   11e7c:	cmp	fp, r5
   11e80:	bne	11e50 <main@@Base+0xe8>
   11e84:	add	r4, r4, #1
   11e88:	cmp	sl, r4
   11e8c:	beq	12098 <main@@Base+0x330>
   11e90:	cmp	fp, #0
   11e94:	movgt	r5, #0
   11e98:	bgt	11e50 <main@@Base+0xe8>
   11e9c:	b	11e84 <main@@Base+0x11c>
   11ea0:	mov	r2, r4
   11ea4:	mov	r1, r7
   11ea8:	add	r0, sp, #296	; 0x128
   11eac:	bl	142a0 <table_get_int@@Base>
   11eb0:	mov	r5, r0
   11eb4:	mov	r2, r4
   11eb8:	mov	r1, r6
   11ebc:	add	r0, sp, #296	; 0x128
   11ec0:	bl	142a0 <table_get_int@@Base>
   11ec4:	cmp	r5, r0
   11ec8:	blt	11f80 <main@@Base+0x218>
   11ecc:	add	r8, r4, #1
   11ed0:	cmp	sl, r8
   11ed4:	beq	11fa4 <main@@Base+0x23c>
   11ed8:	cmp	r8, #0
   11edc:	ble	11f20 <main@@Base+0x1b8>
   11ee0:	cmp	r8, #1
   11ee4:	bmi	11f20 <main@@Base+0x1b8>
   11ee8:	mov	r2, r4
   11eec:	mov	r1, r6
   11ef0:	add	r0, sp, #296	; 0x128
   11ef4:	bl	142a0 <table_get_int@@Base>
   11ef8:	mov	r5, r0
   11efc:	mov	r2, r4
   11f00:	mov	r1, r7
   11f04:	add	r0, sp, #296	; 0x128
   11f08:	bl	142a0 <table_get_int@@Base>
   11f0c:	cmp	r5, r0
   11f10:	bne	11fa4 <main@@Base+0x23c>
   11f14:	sub	r4, r4, #1
   11f18:	cmn	r4, #1
   11f1c:	bne	11ee8 <main@@Base+0x180>
   11f20:	mov	r4, r8
   11f24:	ldr	r3, [r9, #4]!
   11f28:	cmp	r3, #0
   11f2c:	bne	11ea0 <main@@Base+0x138>
   11f30:	mov	r2, r4
   11f34:	mov	r1, r7
   11f38:	add	r0, sp, #296	; 0x128
   11f3c:	bl	142a0 <table_get_int@@Base>
   11f40:	mov	r5, r0
   11f44:	mov	r2, r4
   11f48:	mov	r1, r6
   11f4c:	add	r0, sp, #296	; 0x128
   11f50:	bl	142a0 <table_get_int@@Base>
   11f54:	cmp	r5, r0
   11f58:	ble	11ecc <main@@Base+0x164>
   11f5c:	mov	r2, r4
   11f60:	mov	r1, r6
   11f64:	ldr	r0, [pc, #532]	; 12180 <main@@Base+0x418>
   11f68:	bl	11b8c <printf@plt>
   11f6c:	str	r4, [sp, #12]
   11f70:	str	r6, [sp, #16]
   11f74:	mvn	r3, #0
   11f78:	str	r3, [sp, #20]
   11f7c:	b	11ecc <main@@Base+0x164>
   11f80:	mov	r2, r4
   11f84:	mov	r1, r6
   11f88:	ldr	r0, [pc, #500]	; 12184 <main@@Base+0x41c>
   11f8c:	bl	11b8c <printf@plt>
   11f90:	str	r4, [sp, #12]
   11f94:	str	r6, [sp, #16]
   11f98:	mvn	r3, #0
   11f9c:	str	r3, [sp, #20]
   11fa0:	b	11ecc <main@@Base+0x164>
   11fa4:	mov	r7, r6
   11fa8:	add	r6, r7, #1
   11fac:	cmp	fp, r6
   11fb0:	beq	11fd4 <main@@Base+0x26c>
   11fb4:	cmp	r6, #0
   11fb8:	ble	11fa4 <main@@Base+0x23c>
   11fbc:	cmp	sl, #0
   11fc0:	ble	11fa4 <main@@Base+0x23c>
   11fc4:	ldr	r3, [sp, #24]
   11fc8:	sub	r9, r3, #4
   11fcc:	mov	r4, #0
   11fd0:	b	11f24 <main@@Base+0x1bc>
   11fd4:	ldr	r3, [sp, #16]
   11fd8:	cmn	r3, #1
   11fdc:	beq	1214c <main@@Base+0x3e4>
   11fe0:	add	r0, sp, #296	; 0x128
   11fe4:	bl	14478 <table_get_row_length@@Base>
   11fe8:	add	r0, sp, #296	; 0x128
   11fec:	bl	14478 <table_get_row_length@@Base>
   11ff0:	mov	r9, r0
   11ff4:	ldr	r0, [pc, #396]	; 12188 <main@@Base+0x420>
   11ff8:	bl	11bc8 <puts@plt>
   11ffc:	cmp	r9, #0
   12000:	ble	1214c <main@@Base+0x3e4>
   12004:	mov	r5, #0
   12008:	ldr	r8, [pc, #380]	; 1218c <main@@Base+0x424>
   1200c:	ldr	r7, [pc, #380]	; 12190 <main@@Base+0x428>
   12010:	ldr	sl, [pc, #368]	; 12188 <main@@Base+0x420>
   12014:	ldr	fp, [pc, #376]	; 12194 <main@@Base+0x42c>
   12018:	ldr	r6, [sp, #16]
   1201c:	str	r9, [sp, #16]
   12020:	b	12044 <main@@Base+0x2dc>
   12024:	cmp	r6, r5
   12028:	moveq	r0, fp
   1202c:	movne	r0, sl
   12030:	bl	11bc8 <puts@plt>
   12034:	add	r5, r5, #1
   12038:	ldr	r3, [sp, #16]
   1203c:	cmp	r3, r5
   12040:	beq	1214c <main@@Base+0x3e4>
   12044:	mov	r4, #0
   12048:	mov	r9, #255	; 0xff
   1204c:	add	r0, sp, #296	; 0x128
   12050:	bl	136a4 <table_get_column_length@@Base>
   12054:	cmp	r4, r0
   12058:	bge	12024 <main@@Base+0x2bc>
   1205c:	str	r9, [sp]
   12060:	add	r3, sp, #36	; 0x24
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	add	r0, sp, #296	; 0x128
   12070:	bl	12ab4 <table_cell_to_buffer@@Base>
   12074:	ldr	r3, [sp, #12]
   12078:	cmp	r6, r5
   1207c:	cmpeq	r3, r4
   12080:	add	r1, sp, #36	; 0x24
   12084:	moveq	r0, r7
   12088:	movne	r0, r8
   1208c:	bl	11b8c <printf@plt>
   12090:	add	r4, r4, #1
   12094:	b	1204c <main@@Base+0x2e4>
   12098:	mov	r1, #4
   1209c:	mov	r0, r4
   120a0:	bl	11b68 <calloc@plt>
   120a4:	mov	r5, r0
   120a8:	str	r0, [sp, #28]
   120ac:	mov	r1, #4
   120b0:	mov	r0, r4
   120b4:	bl	11b68 <calloc@plt>
   120b8:	str	r0, [sp, #24]
   120bc:	sub	r7, r5, #4
   120c0:	sub	r6, r0, #4
   120c4:	mov	r5, #0
   120c8:	str	r5, [r7, #4]!
   120cc:	bl	11c28 <rand@plt>
   120d0:	add	r3, r0, r0, lsr #31
   120d4:	and	r3, r3, #1
   120d8:	sub	r3, r3, r0, lsr #31
   120dc:	str	r3, [r6, #4]!
   120e0:	add	r5, r5, #1
   120e4:	cmp	r4, r5
   120e8:	bne	120c8 <main@@Base+0x360>
   120ec:	mov	r3, sl
   120f0:	ldr	r2, [sp, #24]
   120f4:	ldr	r1, [sp, #28]
   120f8:	add	r0, sp, #296	; 0x128
   120fc:	bl	15244 <table_column_sort@@Base>
   12100:	cmp	fp, #0
   12104:	movle	r3, #0
   12108:	strle	r3, [sp, #20]
   1210c:	ble	1214c <main@@Base+0x3e4>
   12110:	mov	r7, #0
   12114:	mvn	r3, #0
   12118:	str	r3, [sp, #12]
   1211c:	str	r3, [sp, #16]
   12120:	str	r7, [sp, #20]
   12124:	b	11fa8 <main@@Base+0x240>
   12128:	mov	r1, #4
   1212c:	mov	r0, sl
   12130:	bl	11b68 <calloc@plt>
   12134:	str	r0, [sp, #28]
   12138:	mov	r1, #4
   1213c:	mov	r0, sl
   12140:	bl	11b68 <calloc@plt>
   12144:	str	r0, [sp, #24]
   12148:	b	120ec <main@@Base+0x384>
   1214c:	add	r0, sp, #296	; 0x128
   12150:	bl	121fc <table_destroy@@Base>
   12154:	ldr	r0, [sp, #28]
   12158:	bl	11b98 <free@plt>
   1215c:	ldr	r0, [sp, #24]
   12160:	bl	11b98 <free@plt>
   12164:	ldr	r0, [sp, #20]
   12168:	add	sp, sp, #356	; 0x164
   1216c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12170:	mvnpl	r8, pc, lsl r5
   12174:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12178:	andeq	r5, r1, r8, lsl r7
   1217c:	strbtvs	r6, [r6], -r7, ror #12
   12180:	andeq	r5, r1, r0, lsr #14
   12184:	andeq	r5, r1, r8, ror #14
   12188:			; <UNDEFINED> instruction: 0x000157b4
   1218c:	andeq	r5, r1, r0, asr #15
   12190:			; <UNDEFINED> instruction: 0x000157b8
   12194:	andeq	r5, r1, r4, asr #15

00012198 <table_init@@Base>:
   12198:	mov	r3, #0
   1219c:	str	r3, [r0]
   121a0:	str	r3, [r0, #4]
   121a4:	str	r3, [r0, #12]
   121a8:	mov	r2, #10
   121ac:	str	r2, [r0, #8]
   121b0:	str	r3, [r0, #16]
   121b4:	str	r3, [r0, #20]
   121b8:	str	r3, [r0, #28]
   121bc:	mov	r1, #20
   121c0:	str	r1, [r0, #24]
   121c4:	str	r3, [r0, #36]	; 0x24
   121c8:	str	r3, [r0, #40]	; 0x28
   121cc:	str	r3, [r0, #44]	; 0x2c
   121d0:	str	r3, [r0, #32]
   121d4:	str	r3, [r0, #52]	; 0x34
   121d8:	str	r2, [r0, #48]	; 0x30
   121dc:	bx	lr

000121e0 <table_new@@Base>:
   121e0:	push	{r4, lr}
   121e4:	mov	r0, #56	; 0x38
   121e8:	bl	11bd4 <malloc@plt>
   121ec:	mov	r4, r0
   121f0:	bl	12198 <table_init@@Base>
   121f4:	mov	r0, r4
   121f8:	pop	{r4, pc}

000121fc <table_destroy@@Base>:
   121fc:	push	{r4, r5, r6, lr}
   12200:	subs	r5, r0, #0
   12204:	popeq	{r4, r5, r6, pc}
   12208:	mov	r3, #64	; 0x40
   1220c:	mvn	r2, #0
   12210:	mov	r1, r2
   12214:	mov	r0, r5
   12218:	bl	12a34 <table_notify@@Base>
   1221c:	mov	r0, r5
   12220:	bl	14478 <table_get_row_length@@Base>
   12224:	subs	r6, r0, #0
   12228:	ble	12248 <table_destroy@@Base+0x4c>
   1222c:	mov	r4, #0
   12230:	mov	r1, r4
   12234:	mov	r0, r5
   12238:	bl	14428 <table_row_destroy@@Base>
   1223c:	add	r4, r4, #1
   12240:	cmp	r6, r4
   12244:	bne	12230 <table_destroy@@Base+0x34>
   12248:	ldr	r0, [r5, #16]
   1224c:	cmp	r0, #0
   12250:	beq	12258 <table_destroy@@Base+0x5c>
   12254:	bl	11b98 <free@plt>
   12258:	mov	r0, r5
   1225c:	bl	136a4 <table_get_column_length@@Base>
   12260:	subs	r6, r0, #0
   12264:	ble	12284 <table_destroy@@Base+0x88>
   12268:	mov	r4, #0
   1226c:	mov	r1, r4
   12270:	mov	r0, r5
   12274:	bl	13684 <table_column_destroy@@Base>
   12278:	add	r4, r4, #1
   1227c:	cmp	r6, r4
   12280:	bne	1226c <table_destroy@@Base+0x70>
   12284:	ldr	r0, [r5]
   12288:	cmp	r0, #0
   1228c:	beq	12294 <table_destroy@@Base+0x98>
   12290:	bl	11b98 <free@plt>
   12294:	ldr	r0, [r5, #36]	; 0x24
   12298:	cmp	r0, #0
   1229c:	beq	122a4 <table_destroy@@Base+0xa8>
   122a0:	bl	11b98 <free@plt>
   122a4:	ldr	r0, [r5, #40]	; 0x28
   122a8:	cmp	r0, #0
   122ac:	beq	122b4 <table_destroy@@Base+0xb8>
   122b0:	bl	11b98 <free@plt>
   122b4:	ldr	r0, [r5, #44]	; 0x2c
   122b8:	cmp	r0, #0
   122bc:	popeq	{r4, r5, r6, pc}
   122c0:	bl	11b98 <free@plt>
   122c4:	pop	{r4, r5, r6, pc}

000122c8 <table_delete@@Base>:
   122c8:	push	{r4, lr}
   122cc:	mov	r4, r0
   122d0:	bl	121fc <table_destroy@@Base>
   122d4:	mov	r0, r4
   122d8:	bl	11b98 <free@plt>
   122dc:	pop	{r4, pc}

000122e0 <table_dupe@@Base>:
   122e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   122e4:	sub	sp, sp, #20
   122e8:	mov	r6, r0
   122ec:	bl	14478 <table_get_row_length@@Base>
   122f0:	mov	r9, r0
   122f4:	mov	r0, r6
   122f8:	bl	136a4 <table_get_column_length@@Base>
   122fc:	mov	r7, r0
   12300:	bl	121e0 <table_new@@Base>
   12304:	mov	r8, r0
   12308:	cmp	r7, #0
   1230c:	ble	1234c <table_dupe@@Base+0x6c>
   12310:	mov	r4, #0
   12314:	mov	r1, r4
   12318:	mov	r0, r6
   1231c:	bl	139b0 <table_get_column_name@@Base>
   12320:	mov	r5, r0
   12324:	mov	r1, r4
   12328:	mov	r0, r6
   1232c:	bl	1370c <table_get_column_data_type@@Base>
   12330:	mov	r2, r0
   12334:	mov	r1, r5
   12338:	mov	r0, r8
   1233c:	bl	13720 <table_add_column@@Base>
   12340:	add	r4, r4, #1
   12344:	cmp	r7, r4
   12348:	bne	12314 <table_dupe@@Base+0x34>
   1234c:	cmp	r9, #0
   12350:	ble	127b8 <table_dupe@@Base+0x4d8>
   12354:	mov	r5, #0
   12358:	b	127a0 <table_dupe@@Base+0x4c0>
   1235c:	mov	r2, r4
   12360:	mov	r1, r5
   12364:	mov	r0, r6
   12368:	bl	142a0 <table_get_int@@Base>
   1236c:	mov	r3, r0
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	mov	r0, r8
   1237c:	bl	14cdc <table_set_int@@Base>
   12380:	add	r4, r4, #1
   12384:	cmp	r7, r4
   12388:	beq	12794 <table_dupe@@Base+0x4b4>
   1238c:	mov	r1, r4
   12390:	mov	r0, r6
   12394:	bl	1370c <table_get_column_data_type@@Base>
   12398:	cmp	r0, #23
   1239c:	ldrls	pc, [pc, r0, lsl #2]
   123a0:	b	12380 <table_dupe@@Base+0xa0>
   123a4:	andeq	r2, r1, ip, asr r3
   123a8:	andeq	r2, r1, r4, lsl #8
   123ac:	andeq	r2, r1, ip, lsr #8
   123b0:	andeq	r2, r1, r4, asr r4
   123b4:	andeq	r2, r1, ip, ror r4
   123b8:	andeq	r2, r1, r4, lsr #9
   123bc:	andeq	r2, r1, ip, asr #9
   123c0:	strdeq	r2, [r1], -r4
   123c4:	andeq	r2, r1, ip, lsl r5
   123c8:	andeq	r2, r1, r4, asr #10
   123cc:	andeq	r2, r1, ip, ror #10
   123d0:	muleq	r1, r4, r5
   123d4:			; <UNDEFINED> instruction: 0x000125bc
   123d8:	andeq	r2, r1, r4, ror #11
   123dc:	andeq	r2, r1, ip, lsl #12
   123e0:	andeq	r2, r1, r4, lsr r6
   123e4:	andeq	r2, r1, r4, lsl #13
   123e8:	andeq	r2, r1, r8, lsr #13
   123ec:	andeq	r2, r1, ip, asr #13
   123f0:	andeq	r2, r1, r8, lsl r7
   123f4:	andeq	r2, r1, r0, asr #14
   123f8:	andeq	r2, r1, ip, asr r6
   123fc:	strdeq	r2, [r1], -r0
   12400:	andeq	r2, r1, r8, ror #14
   12404:	mov	r2, r4
   12408:	mov	r1, r5
   1240c:	mov	r0, r6
   12410:	bl	142b0 <table_get_uint@@Base>
   12414:	mov	r3, r0
   12418:	mov	r2, r4
   1241c:	mov	r1, r5
   12420:	mov	r0, r8
   12424:	bl	14d04 <table_set_uint@@Base>
   12428:	b	12380 <table_dupe@@Base+0xa0>
   1242c:	mov	r2, r4
   12430:	mov	r1, r5
   12434:	mov	r0, r6
   12438:	bl	142c0 <table_get_int8@@Base>
   1243c:	mov	r3, r0
   12440:	mov	r2, r4
   12444:	mov	r1, r5
   12448:	mov	r0, r8
   1244c:	bl	14d2c <table_set_int8@@Base>
   12450:	b	12380 <table_dupe@@Base+0xa0>
   12454:	mov	r2, r4
   12458:	mov	r1, r5
   1245c:	mov	r0, r6
   12460:	bl	142d0 <table_get_uint8@@Base>
   12464:	mov	r3, r0
   12468:	mov	r2, r4
   1246c:	mov	r1, r5
   12470:	mov	r0, r8
   12474:	bl	14d54 <table_set_uint8@@Base>
   12478:	b	12380 <table_dupe@@Base+0xa0>
   1247c:	mov	r2, r4
   12480:	mov	r1, r5
   12484:	mov	r0, r6
   12488:	bl	142e0 <table_get_int16@@Base>
   1248c:	mov	r3, r0
   12490:	mov	r2, r4
   12494:	mov	r1, r5
   12498:	mov	r0, r8
   1249c:	bl	14d7c <table_set_int16@@Base>
   124a0:	b	12380 <table_dupe@@Base+0xa0>
   124a4:	mov	r2, r4
   124a8:	mov	r1, r5
   124ac:	mov	r0, r6
   124b0:	bl	142f0 <table_get_uint16@@Base>
   124b4:	mov	r3, r0
   124b8:	mov	r2, r4
   124bc:	mov	r1, r5
   124c0:	mov	r0, r8
   124c4:	bl	14da4 <table_set_uint16@@Base>
   124c8:	b	12380 <table_dupe@@Base+0xa0>
   124cc:	mov	r2, r4
   124d0:	mov	r1, r5
   124d4:	mov	r0, r6
   124d8:	bl	14300 <table_get_int32@@Base>
   124dc:	mov	r3, r0
   124e0:	mov	r2, r4
   124e4:	mov	r1, r5
   124e8:	mov	r0, r8
   124ec:	bl	14dcc <table_set_int32@@Base>
   124f0:	b	12380 <table_dupe@@Base+0xa0>
   124f4:	mov	r2, r4
   124f8:	mov	r1, r5
   124fc:	mov	r0, r6
   12500:	bl	14310 <table_get_uint32@@Base>
   12504:	mov	r3, r0
   12508:	mov	r2, r4
   1250c:	mov	r1, r5
   12510:	mov	r0, r8
   12514:	bl	14df4 <table_set_uint32@@Base>
   12518:	b	12380 <table_dupe@@Base+0xa0>
   1251c:	mov	r2, r4
   12520:	mov	r1, r5
   12524:	mov	r0, r6
   12528:	bl	14320 <table_get_int64@@Base>
   1252c:	strd	r0, [sp]
   12530:	mov	r2, r4
   12534:	mov	r1, r5
   12538:	mov	r0, r8
   1253c:	bl	14e1c <table_set_int64@@Base>
   12540:	b	12380 <table_dupe@@Base+0xa0>
   12544:	mov	r2, r4
   12548:	mov	r1, r5
   1254c:	mov	r0, r6
   12550:	bl	14330 <table_get_uint64@@Base>
   12554:	strd	r0, [sp]
   12558:	mov	r2, r4
   1255c:	mov	r1, r5
   12560:	mov	r0, r8
   12564:	bl	14e3c <table_set_uint64@@Base>
   12568:	b	12380 <table_dupe@@Base+0xa0>
   1256c:	mov	r2, r4
   12570:	mov	r1, r5
   12574:	mov	r0, r6
   12578:	bl	14340 <table_get_short@@Base>
   1257c:	mov	r3, r0
   12580:	mov	r2, r4
   12584:	mov	r1, r5
   12588:	mov	r0, r8
   1258c:	bl	14e5c <table_set_short@@Base>
   12590:	b	12380 <table_dupe@@Base+0xa0>
   12594:	mov	r2, r4
   12598:	mov	r1, r5
   1259c:	mov	r0, r6
   125a0:	bl	14350 <table_get_ushort@@Base>
   125a4:	mov	r3, r0
   125a8:	mov	r2, r4
   125ac:	mov	r1, r5
   125b0:	mov	r0, r8
   125b4:	bl	14e84 <table_set_ushort@@Base>
   125b8:	b	12380 <table_dupe@@Base+0xa0>
   125bc:	mov	r2, r4
   125c0:	mov	r1, r5
   125c4:	mov	r0, r6
   125c8:	bl	14360 <table_get_long@@Base>
   125cc:	mov	r3, r0
   125d0:	mov	r2, r4
   125d4:	mov	r1, r5
   125d8:	mov	r0, r8
   125dc:	bl	14eac <table_set_long@@Base>
   125e0:	b	12380 <table_dupe@@Base+0xa0>
   125e4:	mov	r2, r4
   125e8:	mov	r1, r5
   125ec:	mov	r0, r6
   125f0:	bl	14370 <table_get_ulong@@Base>
   125f4:	mov	r3, r0
   125f8:	mov	r2, r4
   125fc:	mov	r1, r5
   12600:	mov	r0, r8
   12604:	bl	14ed4 <table_set_ulong@@Base>
   12608:	b	12380 <table_dupe@@Base+0xa0>
   1260c:	mov	r2, r4
   12610:	mov	r1, r5
   12614:	mov	r0, r6
   12618:	bl	14380 <table_get_llong@@Base>
   1261c:	strd	r0, [sp]
   12620:	mov	r2, r4
   12624:	mov	r1, r5
   12628:	mov	r0, r8
   1262c:	bl	14efc <table_set_llong@@Base>
   12630:	b	12380 <table_dupe@@Base+0xa0>
   12634:	mov	r2, r4
   12638:	mov	r1, r5
   1263c:	mov	r0, r6
   12640:	bl	14390 <table_get_ullong@@Base>
   12644:	strd	r0, [sp]
   12648:	mov	r2, r4
   1264c:	mov	r1, r5
   12650:	mov	r0, r8
   12654:	bl	14f1c <table_set_ullong@@Base>
   12658:	b	12380 <table_dupe@@Base+0xa0>
   1265c:	mov	r2, r4
   12660:	mov	r1, r5
   12664:	mov	r0, r6
   12668:	bl	143f0 <table_get_string@@Base>
   1266c:	mov	r3, r0
   12670:	mov	r2, r4
   12674:	mov	r1, r5
   12678:	mov	r0, r8
   1267c:	bl	14fa8 <table_set_string@@Base>
   12680:	b	12380 <table_dupe@@Base+0xa0>
   12684:	mov	r2, r4
   12688:	mov	r1, r5
   1268c:	mov	r0, r6
   12690:	bl	143a0 <table_get_float@@Base>
   12694:	mov	r2, r4
   12698:	mov	r1, r5
   1269c:	mov	r0, r8
   126a0:	bl	14f3c <table_set_float@@Base>
   126a4:	b	12380 <table_dupe@@Base+0xa0>
   126a8:	mov	r2, r4
   126ac:	mov	r1, r5
   126b0:	mov	r0, r6
   126b4:	bl	143b0 <table_get_double@@Base>
   126b8:	mov	r2, r4
   126bc:	mov	r1, r5
   126c0:	mov	r0, r8
   126c4:	bl	14f60 <table_set_double@@Base>
   126c8:	b	12380 <table_dupe@@Base+0xa0>
   126cc:	mov	r2, r4
   126d0:	mov	r1, r5
   126d4:	mov	r0, r6
   126d8:	bl	143c0 <table_get_ldouble@@Base>
   126dc:	mov	r2, r4
   126e0:	mov	r1, r5
   126e4:	mov	r0, r8
   126e8:	bl	14f84 <table_set_ldouble@@Base>
   126ec:	b	12380 <table_dupe@@Base+0xa0>
   126f0:	mov	r2, r4
   126f4:	mov	r1, r5
   126f8:	mov	r0, r6
   126fc:	bl	14290 <table_get_bool@@Base>
   12700:	mov	r3, r0
   12704:	mov	r2, r4
   12708:	mov	r1, r5
   1270c:	mov	r0, r8
   12710:	bl	14cb4 <table_set_bool@@Base>
   12714:	b	12380 <table_dupe@@Base+0xa0>
   12718:	mov	r2, r4
   1271c:	mov	r1, r5
   12720:	mov	r0, r6
   12724:	bl	143d0 <table_get_char@@Base>
   12728:	mov	r3, r0
   1272c:	mov	r2, r4
   12730:	mov	r1, r5
   12734:	mov	r0, r8
   12738:	bl	14fc4 <table_set_char@@Base>
   1273c:	b	12380 <table_dupe@@Base+0xa0>
   12740:	mov	r2, r4
   12744:	mov	r1, r5
   12748:	mov	r0, r6
   1274c:	bl	143e0 <table_get_uchar@@Base>
   12750:	mov	r3, r0
   12754:	mov	r2, r4
   12758:	mov	r1, r5
   1275c:	mov	r0, r8
   12760:	bl	14fec <table_set_uchar@@Base>
   12764:	b	12380 <table_dupe@@Base+0xa0>
   12768:	mov	r2, r4
   1276c:	mov	r1, r5
   12770:	mov	r0, r6
   12774:	bl	143fc <table_get_ptr@@Base>
   12778:	str	r0, [sp, #12]
   1277c:	add	r3, sp, #12
   12780:	mov	r2, r4
   12784:	mov	r1, r5
   12788:	mov	r0, r8
   1278c:	bl	15014 <table_set_ptr@@Base>
   12790:	b	12380 <table_dupe@@Base+0xa0>
   12794:	add	r5, r5, #1
   12798:	cmp	r9, r5
   1279c:	beq	127b8 <table_dupe@@Base+0x4d8>
   127a0:	mov	r0, r8
   127a4:	bl	14480 <table_add_row@@Base>
   127a8:	cmp	r7, #0
   127ac:	ble	12794 <table_dupe@@Base+0x4b4>
   127b0:	mov	r4, #0
   127b4:	b	1238c <table_dupe@@Base+0xac>
   127b8:	mov	r0, r8
   127bc:	add	sp, sp, #20
   127c0:	pop	{r4, r5, r6, r7, r8, r9, pc}

000127c4 <table_get_major_version@@Base>:
   127c4:	mov	r0, #0
   127c8:	bx	lr

000127cc <table_get_minor_version@@Base>:
   127cc:	mov	r0, #0
   127d0:	bx	lr

000127d4 <table_get_patch_version@@Base>:
   127d4:	mov	r0, #0
   127d8:	bx	lr

000127dc <table_get_version@@Base>:
   127dc:	ldr	r0, [pc]	; 127e4 <table_get_version@@Base+0x8>
   127e0:	bx	lr
   127e4:			; <UNDEFINED> instruction: 0x000157bc

000127e8 <table_get_callback_length@@Base>:
   127e8:	ldr	r0, [r0, #32]
   127ec:	bx	lr

000127f0 <table_register_callback@@Base>:
   127f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127f4:	ldr	r5, [r0, #32]
   127f8:	cmp	r5, #0
   127fc:	ble	12858 <table_register_callback@@Base+0x68>
   12800:	ldr	lr, [r0, #36]	; 0x24
   12804:	sub	lr, lr, #4
   12808:	mov	ip, #0
   1280c:	b	1281c <table_register_callback@@Base+0x2c>
   12810:	add	ip, ip, #1
   12814:	cmp	ip, r5
   12818:	beq	12858 <table_register_callback@@Base+0x68>
   1281c:	lsl	r6, ip, #2
   12820:	ldr	r4, [lr, #4]!
   12824:	cmp	r1, r4
   12828:	bne	12810 <table_register_callback@@Base+0x20>
   1282c:	ldr	r4, [r0, #40]	; 0x28
   12830:	ldr	r4, [r4, ip, lsl #2]
   12834:	cmp	r2, r4
   12838:	bne	12810 <table_register_callback@@Base+0x20>
   1283c:	cmp	ip, #0
   12840:	ble	12858 <table_register_callback@@Base+0x68>
   12844:	ldr	r1, [r0, #44]	; 0x2c
   12848:	ldr	r2, [r1, r6]
   1284c:	orr	r3, r2, r3
   12850:	str	r3, [r1, r6]
   12854:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12858:	mov	r7, r3
   1285c:	mov	r4, r2
   12860:	mov	r9, r1
   12864:	mov	r6, r0
   12868:	ldr	r8, [r0, #48]	; 0x30
   1286c:	mov	r1, r8
   12870:	mov	r0, r5
   12874:	bl	15678 <table_column_sort@@Base+0x434>
   12878:	cmp	r1, #0
   1287c:	beq	128ac <table_register_callback@@Base+0xbc>
   12880:	ldr	r3, [r6, #32]
   12884:	ldr	r2, [r6, #36]	; 0x24
   12888:	str	r9, [r2, r3, lsl #2]
   1288c:	ldr	r2, [r6, #40]	; 0x28
   12890:	str	r4, [r2, r3, lsl #2]
   12894:	ldr	r2, [r6, #44]	; 0x2c
   12898:	str	r7, [r2, r3, lsl #2]
   1289c:	ldr	r3, [r6, #32]
   128a0:	add	r3, r3, #1
   128a4:	str	r3, [r6, #32]
   128a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128ac:	ldr	r1, [r6, #52]	; 0x34
   128b0:	add	r1, r8, r1
   128b4:	str	r1, [r6, #52]	; 0x34
   128b8:	lsl	r1, r1, #2
   128bc:	ldr	r0, [r6, #36]	; 0x24
   128c0:	bl	11bb0 <realloc@plt>
   128c4:	str	r0, [r6, #36]	; 0x24
   128c8:	ldr	r1, [r6, #52]	; 0x34
   128cc:	lsl	r1, r1, #2
   128d0:	ldr	r0, [r6, #40]	; 0x28
   128d4:	bl	11bb0 <realloc@plt>
   128d8:	str	r0, [r6, #40]	; 0x28
   128dc:	ldr	r1, [r6, #52]	; 0x34
   128e0:	lsl	r1, r1, #2
   128e4:	ldr	r0, [r6, #44]	; 0x2c
   128e8:	bl	11bb0 <realloc@plt>
   128ec:	str	r0, [r6, #44]	; 0x2c
   128f0:	b	12880 <table_register_callback@@Base+0x90>

000128f4 <table_unregister_callback@@Base>:
   128f4:	push	{r4, r5, r6, lr}
   128f8:	ldr	lr, [r0, #32]
   128fc:	cmp	lr, #0
   12900:	pople	{r4, r5, r6, pc}
   12904:	ldr	r4, [r0, #36]	; 0x24
   12908:	sub	r4, r4, #4
   1290c:	mov	r3, #0
   12910:	b	12920 <table_unregister_callback@@Base+0x2c>
   12914:	add	r3, r3, #1
   12918:	cmp	r3, lr
   1291c:	beq	129f4 <table_unregister_callback@@Base+0x100>
   12920:	lsl	ip, r3, #2
   12924:	ldr	r5, [r4, #4]!
   12928:	cmp	r1, r5
   1292c:	bne	12914 <table_unregister_callback@@Base+0x20>
   12930:	ldr	r5, [r0, #40]	; 0x28
   12934:	ldr	r5, [r5, r3, lsl #2]
   12938:	cmp	r2, r5
   1293c:	bne	12914 <table_unregister_callback@@Base+0x20>
   12940:	cmn	r3, #1
   12944:	popeq	{r4, r5, r6, pc}
   12948:	sub	lr, lr, #1
   1294c:	cmp	lr, r3
   12950:	ble	12994 <table_unregister_callback@@Base+0xa0>
   12954:	ldr	r1, [r0, #36]	; 0x24
   12958:	add	r2, ip, #4
   1295c:	ldr	lr, [r1, r2]
   12960:	str	lr, [r1, ip]
   12964:	ldr	r1, [r0, #40]	; 0x28
   12968:	ldr	lr, [r1, r2]
   1296c:	str	lr, [r1, ip]
   12970:	ldr	r1, [r0, #44]	; 0x2c
   12974:	ldr	lr, [r1, r2]
   12978:	str	lr, [r1, ip]
   1297c:	add	r3, r3, #1
   12980:	ldr	lr, [r0, #32]
   12984:	sub	lr, lr, #1
   12988:	mov	ip, r2
   1298c:	cmp	lr, r3
   12990:	bgt	12954 <table_unregister_callback@@Base+0x60>
   12994:	mov	r4, r0
   12998:	str	lr, [r0, #32]
   1299c:	ldr	r5, [r0, #48]	; 0x30
   129a0:	mov	r1, r5
   129a4:	mov	r0, lr
   129a8:	bl	15678 <table_column_sort@@Base+0x434>
   129ac:	cmp	r1, #0
   129b0:	popne	{r4, r5, r6, pc}
   129b4:	ldr	r1, [r4, #52]	; 0x34
   129b8:	sub	r1, r1, r5
   129bc:	str	r1, [r4, #52]	; 0x34
   129c0:	cmp	r1, #0
   129c4:	bne	129f8 <table_unregister_callback@@Base+0x104>
   129c8:	ldr	r0, [r4, #36]	; 0x24
   129cc:	bl	11b98 <free@plt>
   129d0:	ldr	r0, [r4, #40]	; 0x28
   129d4:	bl	11b98 <free@plt>
   129d8:	ldr	r0, [r4, #44]	; 0x2c
   129dc:	bl	11b98 <free@plt>
   129e0:	mov	r3, #0
   129e4:	str	r3, [r4, #36]	; 0x24
   129e8:	str	r3, [r4, #40]	; 0x28
   129ec:	str	r3, [r4, #44]	; 0x2c
   129f0:	pop	{r4, r5, r6, pc}
   129f4:	pop	{r4, r5, r6, pc}
   129f8:	lsl	r1, r1, #2
   129fc:	ldr	r0, [r4, #36]	; 0x24
   12a00:	bl	11bb0 <realloc@plt>
   12a04:	str	r0, [r4, #36]	; 0x24
   12a08:	ldr	r1, [r4, #52]	; 0x34
   12a0c:	lsl	r1, r1, #2
   12a10:	ldr	r0, [r4, #40]	; 0x28
   12a14:	bl	11bb0 <realloc@plt>
   12a18:	str	r0, [r4, #40]	; 0x28
   12a1c:	ldr	r1, [r4, #52]	; 0x34
   12a20:	lsl	r1, r1, #2
   12a24:	ldr	r0, [r4, #44]	; 0x2c
   12a28:	bl	11bb0 <realloc@plt>
   12a2c:	str	r0, [r4, #44]	; 0x2c
   12a30:	pop	{r4, r5, r6, pc}

00012a34 <table_notify@@Base>:
   12a34:	ldr	ip, [r0, #32]
   12a38:	cmp	ip, #0
   12a3c:	bxle	lr
   12a40:	push	{r4, r5, r6, r7, r8, r9, lr}
   12a44:	sub	sp, sp, #12
   12a48:	mov	r6, r3
   12a4c:	mov	r8, r2
   12a50:	mov	r7, r1
   12a54:	mov	r5, r0
   12a58:	mov	r4, #0
   12a5c:	b	12a70 <table_notify@@Base+0x3c>
   12a60:	add	r4, r4, #1
   12a64:	ldr	r0, [r5, #32]
   12a68:	cmp	r0, r4
   12a6c:	ble	12aac <table_notify@@Base+0x78>
   12a70:	ldr	r0, [r5, #44]	; 0x2c
   12a74:	ldr	r0, [r0, r4, lsl #2]
   12a78:	tst	r6, r0
   12a7c:	beq	12a60 <table_notify@@Base+0x2c>
   12a80:	ldr	r3, [r5, #36]	; 0x24
   12a84:	ldr	r2, [r5, #40]	; 0x28
   12a88:	ldr	r2, [r2, r4, lsl #2]
   12a8c:	str	r2, [sp]
   12a90:	ldr	r9, [r3, r4, lsl #2]
   12a94:	mov	r3, r6
   12a98:	mov	r2, r8
   12a9c:	mov	r1, r7
   12aa0:	mov	r0, r5
   12aa4:	blx	r9
   12aa8:	b	12a60 <table_notify@@Base+0x2c>
   12aac:	add	sp, sp, #12
   12ab0:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012ab4 <table_cell_to_buffer@@Base>:
   12ab4:	push	{r4, r5, r6, r7, lr}
   12ab8:	sub	sp, sp, #12
   12abc:	mov	r6, r0
   12ac0:	mov	r7, r1
   12ac4:	mov	r4, r2
   12ac8:	mov	r5, r3
   12acc:	mov	r1, r2
   12ad0:	bl	1370c <table_get_column_data_type@@Base>
   12ad4:	cmp	r0, #23
   12ad8:	ldrls	pc, [pc, r0, lsl #2]
   12adc:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12ae0:	andeq	r2, r1, r0, asr #22
   12ae4:	andeq	r2, r1, r0, ror fp
   12ae8:	muleq	r1, r8, fp
   12aec:	andeq	r2, r1, r0, asr #23
   12af0:	andeq	r2, r1, r8, ror #23
   12af4:	andeq	r2, r1, r0, lsl ip
   12af8:	andeq	r2, r1, r8, lsr ip
   12afc:	andeq	r2, r1, r0, ror #24
   12b00:	andeq	r2, r1, r8, lsl #25
   12b04:			; <UNDEFINED> instruction: 0x00012cb0
   12b08:	ldrdeq	r2, [r1], -r8
   12b0c:	andeq	r2, r1, r0, lsl #26
   12b10:	andeq	r2, r1, r8, lsr #26
   12b14:	andeq	r2, r1, r0, asr sp
   12b18:	andeq	r2, r1, r8, ror sp
   12b1c:	andeq	r2, r1, r0, lsr #27
   12b20:	strdeq	r2, [r1], -r0
   12b24:	andeq	r2, r1, ip, lsl lr
   12b28:	andeq	r2, r1, r4, asr #28
   12b2c:	muleq	r1, r4, lr
   12b30:			; <UNDEFINED> instruction: 0x00012ebc
   12b34:	andeq	r2, r1, r8, asr #27
   12b38:	andeq	r2, r1, ip, ror #28
   12b3c:	andeq	r2, r1, r4, ror #29
   12b40:	mov	r2, r4
   12b44:	mov	r1, r7
   12b48:	mov	r0, r6
   12b4c:	bl	142a0 <table_get_int@@Base>
   12b50:	mov	r3, r0
   12b54:	ldr	r2, [pc, #944]	; 12f0c <table_cell_to_buffer@@Base+0x458>
   12b58:	ldr	r1, [sp, #32]
   12b5c:	mov	r0, r5
   12b60:	bl	11c10 <snprintf@plt>
   12b64:	mov	r0, #0
   12b68:	add	sp, sp, #12
   12b6c:	pop	{r4, r5, r6, r7, pc}
   12b70:	mov	r2, r4
   12b74:	mov	r1, r7
   12b78:	mov	r0, r6
   12b7c:	bl	142b0 <table_get_uint@@Base>
   12b80:	mov	r3, r0
   12b84:	ldr	r2, [pc, #900]	; 12f10 <table_cell_to_buffer@@Base+0x45c>
   12b88:	ldr	r1, [sp, #32]
   12b8c:	mov	r0, r5
   12b90:	bl	11c10 <snprintf@plt>
   12b94:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12b98:	mov	r2, r4
   12b9c:	mov	r1, r7
   12ba0:	mov	r0, r6
   12ba4:	bl	142c0 <table_get_int8@@Base>
   12ba8:	mov	r3, r0
   12bac:	ldr	r2, [pc, #856]	; 12f0c <table_cell_to_buffer@@Base+0x458>
   12bb0:	ldr	r1, [sp, #32]
   12bb4:	mov	r0, r5
   12bb8:	bl	11c10 <snprintf@plt>
   12bbc:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12bc0:	mov	r2, r4
   12bc4:	mov	r1, r7
   12bc8:	mov	r0, r6
   12bcc:	bl	142d0 <table_get_uint8@@Base>
   12bd0:	mov	r3, r0
   12bd4:	ldr	r2, [pc, #820]	; 12f10 <table_cell_to_buffer@@Base+0x45c>
   12bd8:	ldr	r1, [sp, #32]
   12bdc:	mov	r0, r5
   12be0:	bl	11c10 <snprintf@plt>
   12be4:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12be8:	mov	r2, r4
   12bec:	mov	r1, r7
   12bf0:	mov	r0, r6
   12bf4:	bl	142e0 <table_get_int16@@Base>
   12bf8:	mov	r3, r0
   12bfc:	ldr	r2, [pc, #776]	; 12f0c <table_cell_to_buffer@@Base+0x458>
   12c00:	ldr	r1, [sp, #32]
   12c04:	mov	r0, r5
   12c08:	bl	11c10 <snprintf@plt>
   12c0c:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12c10:	mov	r2, r4
   12c14:	mov	r1, r7
   12c18:	mov	r0, r6
   12c1c:	bl	142f0 <table_get_uint16@@Base>
   12c20:	mov	r3, r0
   12c24:	ldr	r2, [pc, #740]	; 12f10 <table_cell_to_buffer@@Base+0x45c>
   12c28:	ldr	r1, [sp, #32]
   12c2c:	mov	r0, r5
   12c30:	bl	11c10 <snprintf@plt>
   12c34:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12c38:	mov	r2, r4
   12c3c:	mov	r1, r7
   12c40:	mov	r0, r6
   12c44:	bl	14300 <table_get_int32@@Base>
   12c48:	mov	r3, r0
   12c4c:	ldr	r2, [pc, #696]	; 12f0c <table_cell_to_buffer@@Base+0x458>
   12c50:	ldr	r1, [sp, #32]
   12c54:	mov	r0, r5
   12c58:	bl	11c10 <snprintf@plt>
   12c5c:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12c60:	mov	r2, r4
   12c64:	mov	r1, r7
   12c68:	mov	r0, r6
   12c6c:	bl	14310 <table_get_uint32@@Base>
   12c70:	mov	r3, r0
   12c74:	ldr	r2, [pc, #660]	; 12f10 <table_cell_to_buffer@@Base+0x45c>
   12c78:	ldr	r1, [sp, #32]
   12c7c:	mov	r0, r5
   12c80:	bl	11c10 <snprintf@plt>
   12c84:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12c88:	mov	r2, r4
   12c8c:	mov	r1, r7
   12c90:	mov	r0, r6
   12c94:	bl	14320 <table_get_int64@@Base>
   12c98:	strd	r0, [sp]
   12c9c:	ldr	r2, [pc, #624]	; 12f14 <table_cell_to_buffer@@Base+0x460>
   12ca0:	ldr	r1, [sp, #32]
   12ca4:	mov	r0, r5
   12ca8:	bl	11c10 <snprintf@plt>
   12cac:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12cb0:	mov	r2, r4
   12cb4:	mov	r1, r7
   12cb8:	mov	r0, r6
   12cbc:	bl	14330 <table_get_uint64@@Base>
   12cc0:	strd	r0, [sp]
   12cc4:	ldr	r2, [pc, #588]	; 12f18 <table_cell_to_buffer@@Base+0x464>
   12cc8:	ldr	r1, [sp, #32]
   12ccc:	mov	r0, r5
   12cd0:	bl	11c10 <snprintf@plt>
   12cd4:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12cd8:	mov	r2, r4
   12cdc:	mov	r1, r7
   12ce0:	mov	r0, r6
   12ce4:	bl	14340 <table_get_short@@Base>
   12ce8:	mov	r3, r0
   12cec:	ldr	r2, [pc, #552]	; 12f1c <table_cell_to_buffer@@Base+0x468>
   12cf0:	ldr	r1, [sp, #32]
   12cf4:	mov	r0, r5
   12cf8:	bl	11c10 <snprintf@plt>
   12cfc:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12d00:	mov	r2, r4
   12d04:	mov	r1, r7
   12d08:	mov	r0, r6
   12d0c:	bl	14350 <table_get_ushort@@Base>
   12d10:	mov	r3, r0
   12d14:	ldr	r2, [pc, #516]	; 12f20 <table_cell_to_buffer@@Base+0x46c>
   12d18:	ldr	r1, [sp, #32]
   12d1c:	mov	r0, r5
   12d20:	bl	11c10 <snprintf@plt>
   12d24:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12d28:	mov	r2, r4
   12d2c:	mov	r1, r7
   12d30:	mov	r0, r6
   12d34:	bl	14360 <table_get_long@@Base>
   12d38:	mov	r3, r0
   12d3c:	ldr	r2, [pc, #480]	; 12f24 <table_cell_to_buffer@@Base+0x470>
   12d40:	ldr	r1, [sp, #32]
   12d44:	mov	r0, r5
   12d48:	bl	11c10 <snprintf@plt>
   12d4c:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12d50:	mov	r2, r4
   12d54:	mov	r1, r7
   12d58:	mov	r0, r6
   12d5c:	bl	14370 <table_get_ulong@@Base>
   12d60:	mov	r3, r0
   12d64:	ldr	r2, [pc, #444]	; 12f28 <table_cell_to_buffer@@Base+0x474>
   12d68:	ldr	r1, [sp, #32]
   12d6c:	mov	r0, r5
   12d70:	bl	11c10 <snprintf@plt>
   12d74:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12d78:	mov	r2, r4
   12d7c:	mov	r1, r7
   12d80:	mov	r0, r6
   12d84:	bl	14380 <table_get_llong@@Base>
   12d88:	strd	r0, [sp]
   12d8c:	ldr	r2, [pc, #384]	; 12f14 <table_cell_to_buffer@@Base+0x460>
   12d90:	ldr	r1, [sp, #32]
   12d94:	mov	r0, r5
   12d98:	bl	11c10 <snprintf@plt>
   12d9c:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12da0:	mov	r2, r4
   12da4:	mov	r1, r7
   12da8:	mov	r0, r6
   12dac:	bl	14390 <table_get_ullong@@Base>
   12db0:	strd	r0, [sp]
   12db4:	ldr	r2, [pc, #348]	; 12f18 <table_cell_to_buffer@@Base+0x464>
   12db8:	ldr	r1, [sp, #32]
   12dbc:	mov	r0, r5
   12dc0:	bl	11c10 <snprintf@plt>
   12dc4:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12dc8:	mov	r2, r4
   12dcc:	mov	r1, r7
   12dd0:	mov	r0, r6
   12dd4:	bl	143f0 <table_get_string@@Base>
   12dd8:	mov	r3, r0
   12ddc:	ldr	r2, [pc, #328]	; 12f2c <table_cell_to_buffer@@Base+0x478>
   12de0:	ldr	r1, [sp, #32]
   12de4:	mov	r0, r5
   12de8:	bl	11c10 <snprintf@plt>
   12dec:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12df0:	mov	r2, r4
   12df4:	mov	r1, r7
   12df8:	mov	r0, r6
   12dfc:	bl	143a0 <table_get_float@@Base>
   12e00:	vcvt.f64.f32	d0, s0
   12e04:	vstr	d0, [sp]
   12e08:	ldr	r2, [pc, #288]	; 12f30 <table_cell_to_buffer@@Base+0x47c>
   12e0c:	ldr	r1, [sp, #32]
   12e10:	mov	r0, r5
   12e14:	bl	11c10 <snprintf@plt>
   12e18:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12e1c:	mov	r2, r4
   12e20:	mov	r1, r7
   12e24:	mov	r0, r6
   12e28:	bl	143b0 <table_get_double@@Base>
   12e2c:	vstr	d0, [sp]
   12e30:	ldr	r2, [pc, #252]	; 12f34 <table_cell_to_buffer@@Base+0x480>
   12e34:	ldr	r1, [sp, #32]
   12e38:	mov	r0, r5
   12e3c:	bl	11c10 <snprintf@plt>
   12e40:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12e44:	mov	r2, r4
   12e48:	mov	r1, r7
   12e4c:	mov	r0, r6
   12e50:	bl	143c0 <table_get_ldouble@@Base>
   12e54:	vstr	d0, [sp]
   12e58:	ldr	r2, [pc, #216]	; 12f38 <table_cell_to_buffer@@Base+0x484>
   12e5c:	ldr	r1, [sp, #32]
   12e60:	mov	r0, r5
   12e64:	bl	11c10 <snprintf@plt>
   12e68:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12e6c:	mov	r2, r4
   12e70:	mov	r1, r7
   12e74:	mov	r0, r6
   12e78:	bl	14290 <table_get_bool@@Base>
   12e7c:	mov	r3, r0
   12e80:	ldr	r2, [pc, #132]	; 12f0c <table_cell_to_buffer@@Base+0x458>
   12e84:	ldr	r1, [sp, #32]
   12e88:	mov	r0, r5
   12e8c:	bl	11c10 <snprintf@plt>
   12e90:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12e94:	mov	r2, r4
   12e98:	mov	r1, r7
   12e9c:	mov	r0, r6
   12ea0:	bl	143d0 <table_get_char@@Base>
   12ea4:	mov	r3, r0
   12ea8:	ldr	r2, [pc, #140]	; 12f3c <table_cell_to_buffer@@Base+0x488>
   12eac:	ldr	r1, [sp, #32]
   12eb0:	mov	r0, r5
   12eb4:	bl	11c10 <snprintf@plt>
   12eb8:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12ebc:	mov	r2, r4
   12ec0:	mov	r1, r7
   12ec4:	mov	r0, r6
   12ec8:	bl	143e0 <table_get_uchar@@Base>
   12ecc:	mov	r3, r0
   12ed0:	ldr	r2, [pc, #100]	; 12f3c <table_cell_to_buffer@@Base+0x488>
   12ed4:	ldr	r1, [sp, #32]
   12ed8:	mov	r0, r5
   12edc:	bl	11c10 <snprintf@plt>
   12ee0:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12ee4:	mov	r2, r4
   12ee8:	mov	r1, r7
   12eec:	mov	r0, r6
   12ef0:	bl	143fc <table_get_ptr@@Base>
   12ef4:	mov	r3, r0
   12ef8:	ldr	r2, [pc, #64]	; 12f40 <table_cell_to_buffer@@Base+0x48c>
   12efc:	ldr	r1, [sp, #32]
   12f00:	mov	r0, r5
   12f04:	bl	11c10 <snprintf@plt>
   12f08:	b	12b64 <table_cell_to_buffer@@Base+0xb0>
   12f0c:	andeq	r5, r1, ip, lsl r7
   12f10:	andeq	r5, r1, r8, asr #15
   12f14:	andeq	r5, r1, ip, asr #15
   12f18:	ldrdeq	r5, [r1], -r4
   12f1c:	ldrdeq	r5, [r1], -ip
   12f20:	andeq	r5, r1, r0, ror #15
   12f24:	andeq	r5, r1, r4, ror #15
   12f28:	andeq	r5, r1, r8, ror #15
   12f2c:	andeq	r5, r1, ip, ror #15
   12f30:	strdeq	r5, [r1], -r0
   12f34:	strdeq	r5, [r1], -r4
   12f38:	strdeq	r5, [r1], -r8
   12f3c:	strdeq	r5, [r1], -ip
   12f40:	andeq	r5, r1, r0, lsl #16

00012f44 <table_cell_from_buffer@@Base>:
   12f44:	push	{r4, r5, r6, r7, lr}
   12f48:	sub	sp, sp, #268	; 0x10c
   12f4c:	mov	r6, r0
   12f50:	mov	r7, r1
   12f54:	mov	r4, r2
   12f58:	mov	r5, r3
   12f5c:	mov	r1, r2
   12f60:	bl	1370c <table_get_column_data_type@@Base>
   12f64:	cmp	r0, #23
   12f68:	ldrls	pc, [pc, r0, lsl #2]
   12f6c:	b	13550 <table_cell_from_buffer@@Base+0x60c>
   12f70:	ldrdeq	r2, [r1], -r0
   12f74:	andeq	r3, r1, r8
   12f78:	andeq	r3, r1, r0, asr #32
   12f7c:	andeq	r3, r1, r8, ror r0
   12f80:	strheq	r3, [r1], -r0
   12f84:	andeq	r3, r1, r8, ror #1
   12f88:	andeq	r3, r1, r0, lsr #2
   12f8c:	andeq	r3, r1, r8, asr r1
   12f90:	muleq	r1, r0, r1
   12f94:	andeq	r3, r1, ip, asr #3
   12f98:	andeq	r3, r1, r8, lsl #4
   12f9c:	andeq	r3, r1, r0, asr #4
   12fa0:	andeq	r3, r1, r8, ror r2
   12fa4:			; <UNDEFINED> instruction: 0x000132b0
   12fa8:	andeq	r3, r1, r8, ror #5
   12fac:	andeq	r3, r1, r4, lsr #6
   12fb0:	muleq	r1, r8, r3
   12fb4:	ldrdeq	r3, [r1], -r0
   12fb8:	andeq	r3, r1, r8, lsl #8
   12fbc:	muleq	r1, ip, r4
   12fc0:	ldrdeq	r3, [r1], -r4
   12fc4:	andeq	r3, r1, r0, ror #6
   12fc8:	andeq	r3, r1, r0, asr #8
   12fcc:	andeq	r3, r1, ip, lsl #10
   12fd0:	add	r2, sp, #8
   12fd4:	ldr	r1, [pc, #1404]	; 13558 <table_cell_from_buffer@@Base+0x614>
   12fd8:	mov	r0, r5
   12fdc:	bl	11c1c <__isoc99_sscanf@plt>
   12fe0:	cmp	r0, #1
   12fe4:	mvnne	r5, #0
   12fe8:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   12fec:	ldr	r3, [sp, #8]
   12ff0:	mov	r2, r4
   12ff4:	mov	r1, r7
   12ff8:	mov	r0, r6
   12ffc:	bl	14cdc <table_set_int@@Base>
   13000:	mov	r5, #0
   13004:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13008:	add	r2, sp, #8
   1300c:	ldr	r1, [pc, #1352]	; 1355c <table_cell_from_buffer@@Base+0x618>
   13010:	mov	r0, r5
   13014:	bl	11c1c <__isoc99_sscanf@plt>
   13018:	cmp	r0, #1
   1301c:	mvnne	r5, #0
   13020:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13024:	ldr	r3, [sp, #8]
   13028:	mov	r2, r4
   1302c:	mov	r1, r7
   13030:	mov	r0, r6
   13034:	bl	14d04 <table_set_uint@@Base>
   13038:	mov	r5, #0
   1303c:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13040:	add	r2, sp, #8
   13044:	ldr	r1, [pc, #1300]	; 13560 <table_cell_from_buffer@@Base+0x61c>
   13048:	mov	r0, r5
   1304c:	bl	11c1c <__isoc99_sscanf@plt>
   13050:	cmp	r0, #1
   13054:	mvnne	r5, #0
   13058:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   1305c:	ldrsb	r3, [sp, #8]
   13060:	mov	r2, r4
   13064:	mov	r1, r7
   13068:	mov	r0, r6
   1306c:	bl	14d2c <table_set_int8@@Base>
   13070:	mov	r5, #0
   13074:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13078:	add	r2, sp, #8
   1307c:	ldr	r1, [pc, #1248]	; 13564 <table_cell_from_buffer@@Base+0x620>
   13080:	mov	r0, r5
   13084:	bl	11c1c <__isoc99_sscanf@plt>
   13088:	cmp	r0, #1
   1308c:	mvnne	r5, #0
   13090:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13094:	ldrb	r3, [sp, #8]
   13098:	mov	r2, r4
   1309c:	mov	r1, r7
   130a0:	mov	r0, r6
   130a4:	bl	14d54 <table_set_uint8@@Base>
   130a8:	mov	r5, #0
   130ac:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   130b0:	add	r2, sp, #8
   130b4:	ldr	r1, [pc, #1196]	; 13568 <table_cell_from_buffer@@Base+0x624>
   130b8:	mov	r0, r5
   130bc:	bl	11c1c <__isoc99_sscanf@plt>
   130c0:	cmp	r0, #1
   130c4:	mvnne	r5, #0
   130c8:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   130cc:	ldrsh	r3, [sp, #8]
   130d0:	mov	r2, r4
   130d4:	mov	r1, r7
   130d8:	mov	r0, r6
   130dc:	bl	14d7c <table_set_int16@@Base>
   130e0:	mov	r5, #0
   130e4:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   130e8:	add	r2, sp, #8
   130ec:	ldr	r1, [pc, #1144]	; 1356c <table_cell_from_buffer@@Base+0x628>
   130f0:	mov	r0, r5
   130f4:	bl	11c1c <__isoc99_sscanf@plt>
   130f8:	cmp	r0, #1
   130fc:	mvnne	r5, #0
   13100:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13104:	ldrh	r3, [sp, #8]
   13108:	mov	r2, r4
   1310c:	mov	r1, r7
   13110:	mov	r0, r6
   13114:	bl	14da4 <table_set_uint16@@Base>
   13118:	mov	r5, #0
   1311c:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13120:	add	r2, sp, #8
   13124:	ldr	r1, [pc, #1068]	; 13558 <table_cell_from_buffer@@Base+0x614>
   13128:	mov	r0, r5
   1312c:	bl	11c1c <__isoc99_sscanf@plt>
   13130:	cmp	r0, #1
   13134:	mvnne	r5, #0
   13138:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   1313c:	ldr	r3, [sp, #8]
   13140:	mov	r2, r4
   13144:	mov	r1, r7
   13148:	mov	r0, r6
   1314c:	bl	14dcc <table_set_int32@@Base>
   13150:	mov	r5, #0
   13154:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13158:	add	r2, sp, #8
   1315c:	ldr	r1, [pc, #1016]	; 1355c <table_cell_from_buffer@@Base+0x618>
   13160:	mov	r0, r5
   13164:	bl	11c1c <__isoc99_sscanf@plt>
   13168:	cmp	r0, #1
   1316c:	mvnne	r5, #0
   13170:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13174:	ldr	r3, [sp, #8]
   13178:	mov	r2, r4
   1317c:	mov	r1, r7
   13180:	mov	r0, r6
   13184:	bl	14df4 <table_set_uint32@@Base>
   13188:	mov	r5, #0
   1318c:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13190:	add	r2, sp, #8
   13194:	ldr	r1, [pc, #980]	; 13570 <table_cell_from_buffer@@Base+0x62c>
   13198:	mov	r0, r5
   1319c:	bl	11c1c <__isoc99_sscanf@plt>
   131a0:	cmp	r0, #1
   131a4:	mvnne	r5, #0
   131a8:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   131ac:	ldrd	r2, [sp, #8]
   131b0:	strd	r2, [sp]
   131b4:	mov	r2, r4
   131b8:	mov	r1, r7
   131bc:	mov	r0, r6
   131c0:	bl	14e1c <table_set_int64@@Base>
   131c4:	mov	r5, #0
   131c8:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   131cc:	add	r2, sp, #8
   131d0:	ldr	r1, [pc, #924]	; 13574 <table_cell_from_buffer@@Base+0x630>
   131d4:	mov	r0, r5
   131d8:	bl	11c1c <__isoc99_sscanf@plt>
   131dc:	cmp	r0, #1
   131e0:	mvnne	r5, #0
   131e4:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   131e8:	ldrd	r2, [sp, #8]
   131ec:	strd	r2, [sp]
   131f0:	mov	r2, r4
   131f4:	mov	r1, r7
   131f8:	mov	r0, r6
   131fc:	bl	14e3c <table_set_uint64@@Base>
   13200:	mov	r5, #0
   13204:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13208:	add	r2, sp, #8
   1320c:	ldr	r1, [pc, #852]	; 13568 <table_cell_from_buffer@@Base+0x624>
   13210:	mov	r0, r5
   13214:	bl	11c1c <__isoc99_sscanf@plt>
   13218:	cmp	r0, #1
   1321c:	mvnne	r5, #0
   13220:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13224:	ldrsh	r3, [sp, #8]
   13228:	mov	r2, r4
   1322c:	mov	r1, r7
   13230:	mov	r0, r6
   13234:	bl	14e5c <table_set_short@@Base>
   13238:	mov	r5, #0
   1323c:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13240:	add	r2, sp, #8
   13244:	ldr	r1, [pc, #800]	; 1356c <table_cell_from_buffer@@Base+0x628>
   13248:	mov	r0, r5
   1324c:	bl	11c1c <__isoc99_sscanf@plt>
   13250:	cmp	r0, #1
   13254:	mvnne	r5, #0
   13258:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   1325c:	ldrh	r3, [sp, #8]
   13260:	mov	r2, r4
   13264:	mov	r1, r7
   13268:	mov	r0, r6
   1326c:	bl	14e84 <table_set_ushort@@Base>
   13270:	mov	r5, #0
   13274:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13278:	add	r2, sp, #8
   1327c:	ldr	r1, [pc, #756]	; 13578 <table_cell_from_buffer@@Base+0x634>
   13280:	mov	r0, r5
   13284:	bl	11c1c <__isoc99_sscanf@plt>
   13288:	cmp	r0, #1
   1328c:	mvnne	r5, #0
   13290:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13294:	ldr	r3, [sp, #8]
   13298:	mov	r2, r4
   1329c:	mov	r1, r7
   132a0:	mov	r0, r6
   132a4:	bl	14eac <table_set_long@@Base>
   132a8:	mov	r5, #0
   132ac:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   132b0:	add	r2, sp, #8
   132b4:	ldr	r1, [pc, #704]	; 1357c <table_cell_from_buffer@@Base+0x638>
   132b8:	mov	r0, r5
   132bc:	bl	11c1c <__isoc99_sscanf@plt>
   132c0:	cmp	r0, #1
   132c4:	mvnne	r5, #0
   132c8:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   132cc:	ldr	r3, [sp, #8]
   132d0:	mov	r2, r4
   132d4:	mov	r1, r7
   132d8:	mov	r0, r6
   132dc:	bl	14ed4 <table_set_ulong@@Base>
   132e0:	mov	r5, #0
   132e4:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   132e8:	add	r2, sp, #8
   132ec:	ldr	r1, [pc, #636]	; 13570 <table_cell_from_buffer@@Base+0x62c>
   132f0:	mov	r0, r5
   132f4:	bl	11c1c <__isoc99_sscanf@plt>
   132f8:	cmp	r0, #1
   132fc:	mvnne	r5, #0
   13300:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13304:	ldrd	r2, [sp, #8]
   13308:	strd	r2, [sp]
   1330c:	mov	r2, r4
   13310:	mov	r1, r7
   13314:	mov	r0, r6
   13318:	bl	14efc <table_set_llong@@Base>
   1331c:	mov	r5, #0
   13320:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13324:	add	r2, sp, #8
   13328:	ldr	r1, [pc, #580]	; 13574 <table_cell_from_buffer@@Base+0x630>
   1332c:	mov	r0, r5
   13330:	bl	11c1c <__isoc99_sscanf@plt>
   13334:	cmp	r0, #1
   13338:	mvnne	r5, #0
   1333c:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13340:	ldrd	r2, [sp, #8]
   13344:	strd	r2, [sp]
   13348:	mov	r2, r4
   1334c:	mov	r1, r7
   13350:	mov	r0, r6
   13354:	bl	14f1c <table_set_ullong@@Base>
   13358:	mov	r5, #0
   1335c:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13360:	add	r2, sp, #8
   13364:	ldr	r1, [pc, #532]	; 13580 <table_cell_from_buffer@@Base+0x63c>
   13368:	mov	r0, r5
   1336c:	bl	11c1c <__isoc99_sscanf@plt>
   13370:	cmp	r0, #1
   13374:	mvnne	r5, #0
   13378:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   1337c:	add	r3, sp, #8
   13380:	mov	r2, r4
   13384:	mov	r1, r7
   13388:	mov	r0, r6
   1338c:	bl	14fa8 <table_set_string@@Base>
   13390:	mov	r5, #0
   13394:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13398:	add	r2, sp, #8
   1339c:	ldr	r1, [pc, #480]	; 13584 <table_cell_from_buffer@@Base+0x640>
   133a0:	mov	r0, r5
   133a4:	bl	11c1c <__isoc99_sscanf@plt>
   133a8:	cmp	r0, #1
   133ac:	mvnne	r5, #0
   133b0:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   133b4:	vldr	s0, [sp, #8]
   133b8:	mov	r2, r4
   133bc:	mov	r1, r7
   133c0:	mov	r0, r6
   133c4:	bl	14f3c <table_set_float@@Base>
   133c8:	mov	r5, #0
   133cc:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   133d0:	add	r2, sp, #8
   133d4:	ldr	r1, [pc, #428]	; 13588 <table_cell_from_buffer@@Base+0x644>
   133d8:	mov	r0, r5
   133dc:	bl	11c1c <__isoc99_sscanf@plt>
   133e0:	cmp	r0, #1
   133e4:	mvnne	r5, #0
   133e8:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   133ec:	vldr	d0, [sp, #8]
   133f0:	mov	r2, r4
   133f4:	mov	r1, r7
   133f8:	mov	r0, r6
   133fc:	bl	14f60 <table_set_double@@Base>
   13400:	mov	r5, #0
   13404:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13408:	add	r2, sp, #8
   1340c:	ldr	r1, [pc, #376]	; 1358c <table_cell_from_buffer@@Base+0x648>
   13410:	mov	r0, r5
   13414:	bl	11c1c <__isoc99_sscanf@plt>
   13418:	cmp	r0, #1
   1341c:	mvnne	r5, #0
   13420:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   13424:	vldr	d0, [sp, #8]
   13428:	mov	r2, r4
   1342c:	mov	r1, r7
   13430:	mov	r0, r6
   13434:	bl	14f84 <table_set_ldouble@@Base>
   13438:	mov	r5, #0
   1343c:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13440:	add	r2, sp, #8
   13444:	ldr	r1, [pc, #268]	; 13558 <table_cell_from_buffer@@Base+0x614>
   13448:	mov	r0, r5
   1344c:	bl	11c1c <__isoc99_sscanf@plt>
   13450:	cmp	r0, #1
   13454:	mvnne	r5, #0
   13458:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   1345c:	ldr	r5, [sp, #8]
   13460:	cmp	r5, #0
   13464:	beq	13484 <table_cell_from_buffer@@Base+0x540>
   13468:	mov	r3, #1
   1346c:	mov	r2, r4
   13470:	mov	r1, r7
   13474:	mov	r0, r6
   13478:	bl	14cb4 <table_set_bool@@Base>
   1347c:	mov	r5, #0
   13480:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13484:	mov	r3, #0
   13488:	mov	r2, r4
   1348c:	mov	r1, r7
   13490:	mov	r0, r6
   13494:	bl	14cb4 <table_set_bool@@Base>
   13498:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   1349c:	add	r2, sp, #8
   134a0:	ldr	r1, [pc, #232]	; 13590 <table_cell_from_buffer@@Base+0x64c>
   134a4:	mov	r0, r5
   134a8:	bl	11c1c <__isoc99_sscanf@plt>
   134ac:	cmp	r0, #1
   134b0:	mvnne	r5, #0
   134b4:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   134b8:	ldrb	r3, [sp, #8]
   134bc:	mov	r2, r4
   134c0:	mov	r1, r7
   134c4:	mov	r0, r6
   134c8:	bl	14fc4 <table_set_char@@Base>
   134cc:	mov	r5, #0
   134d0:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   134d4:	add	r2, sp, #8
   134d8:	ldr	r1, [pc, #176]	; 13590 <table_cell_from_buffer@@Base+0x64c>
   134dc:	mov	r0, r5
   134e0:	bl	11c1c <__isoc99_sscanf@plt>
   134e4:	cmp	r0, #1
   134e8:	mvnne	r5, #0
   134ec:	bne	13528 <table_cell_from_buffer@@Base+0x5e4>
   134f0:	ldrb	r3, [sp, #8]
   134f4:	mov	r2, r4
   134f8:	mov	r1, r7
   134fc:	mov	r0, r6
   13500:	bl	14fec <table_set_uchar@@Base>
   13504:	mov	r5, #0
   13508:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   1350c:	add	r2, sp, #8
   13510:	ldr	r1, [pc, #124]	; 13594 <table_cell_from_buffer@@Base+0x650>
   13514:	mov	r0, r5
   13518:	bl	11c1c <__isoc99_sscanf@plt>
   1351c:	cmp	r0, #1
   13520:	mvnne	r5, #0
   13524:	beq	13534 <table_cell_from_buffer@@Base+0x5f0>
   13528:	mov	r0, r5
   1352c:	add	sp, sp, #268	; 0x10c
   13530:	pop	{r4, r5, r6, r7, pc}
   13534:	ldr	r3, [sp, #8]
   13538:	mov	r2, r4
   1353c:	mov	r1, r7
   13540:	mov	r0, r6
   13544:	bl	15014 <table_set_ptr@@Base>
   13548:	mov	r5, #0
   1354c:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13550:	mov	r5, #0
   13554:	b	13528 <table_cell_from_buffer@@Base+0x5e4>
   13558:	andeq	r5, r1, ip, lsl r7
   1355c:	andeq	r5, r1, r8, asr #15
   13560:	andeq	r5, r1, r4, lsl #16
   13564:	andeq	r5, r1, ip, lsl #16
   13568:	ldrdeq	r5, [r1], -ip
   1356c:	andeq	r5, r1, r0, ror #15
   13570:	andeq	r5, r1, ip, asr #15
   13574:	ldrdeq	r5, [r1], -r4
   13578:	andeq	r5, r1, r4, ror #15
   1357c:	andeq	r5, r1, r8, ror #15
   13580:	andeq	r5, r1, ip, ror #15
   13584:	strdeq	r5, [r1], -r0
   13588:	strdeq	r5, [r1], -r4
   1358c:	strdeq	r5, [r1], -r8
   13590:	strdeq	r5, [r1], -ip
   13594:	andeq	r5, r1, r0, lsl #16

00013598 <table_get_cell_ptr@@Base>:
   13598:	push	{r4, lr}
   1359c:	mov	r4, r2
   135a0:	bl	14638 <table_get_row_ptr@@Base>
   135a4:	ldr	r0, [r0]
   135a8:	add	r0, r0, r4, lsl #2
   135ac:	pop	{r4, pc}

000135b0 <table_cell_init@@Base>:
   135b0:	push	{r4, lr}
   135b4:	bl	13598 <table_get_cell_ptr@@Base>
   135b8:	mov	r3, #0
   135bc:	str	r3, [r0]
   135c0:	pop	{r4, pc}

000135c4 <table_cell_destroy@@Base>:
   135c4:	push	{r4, r5, r6, lr}
   135c8:	mov	r5, r0
   135cc:	mov	r6, r1
   135d0:	mov	r4, r2
   135d4:	mov	r1, r2
   135d8:	bl	1370c <table_get_column_data_type@@Base>
   135dc:	cmp	r0, #23
   135e0:	popeq	{r4, r5, r6, pc}
   135e4:	mov	r2, r4
   135e8:	mov	r1, r6
   135ec:	mov	r0, r5
   135f0:	bl	13598 <table_get_cell_ptr@@Base>
   135f4:	ldr	r0, [r0]
   135f8:	cmp	r0, #0
   135fc:	popeq	{r4, r5, r6, pc}
   13600:	bl	11b98 <free@plt>
   13604:	pop	{r4, r5, r6, pc}

00013608 <table_cell_nullify@@Base>:
   13608:	push	{r4, lr}
   1360c:	bl	13598 <table_get_cell_ptr@@Base>
   13610:	mov	r4, r0
   13614:	ldr	r0, [r0]
   13618:	cmp	r0, #0
   1361c:	beq	1362c <table_cell_nullify@@Base+0x24>
   13620:	bl	11b98 <free@plt>
   13624:	mov	r3, #0
   13628:	str	r3, [r4]
   1362c:	mov	r0, #0
   13630:	pop	{r4, pc}

00013634 <table_column_init@@Base>:
   13634:	push	{r4, r5, r6, r7, r8, lr}
   13638:	mov	r7, r2
   1363c:	mov	r8, r3
   13640:	add	r1, r1, r1, lsl #1
   13644:	lsl	r4, r1, #2
   13648:	ldr	r6, [r0]
   1364c:	add	r5, r6, r4
   13650:	mov	r0, r2
   13654:	bl	11bf8 <strlen@plt>
   13658:	add	r0, r0, #1
   1365c:	bl	11bd4 <malloc@plt>
   13660:	str	r0, [r6, r4]
   13664:	cmp	r0, #0
   13668:	beq	13674 <table_column_init@@Base+0x40>
   1366c:	mov	r1, r7
   13670:	bl	11bbc <strcpy@plt>
   13674:	str	r8, [r5, #4]
   13678:	ldr	r3, [sp, #24]
   1367c:	str	r3, [r5, #8]
   13680:	pop	{r4, r5, r6, r7, r8, pc}

00013684 <table_column_destroy@@Base>:
   13684:	ldr	r3, [r0]
   13688:	add	r1, r1, r1, lsl #1
   1368c:	ldr	r0, [r3, r1, lsl #2]
   13690:	cmp	r0, #0
   13694:	bxeq	lr
   13698:	push	{r4, lr}
   1369c:	bl	11b98 <free@plt>
   136a0:	pop	{r4, pc}

000136a4 <table_get_column_length@@Base>:
   136a4:	ldr	r0, [r0, #4]
   136a8:	bx	lr

000136ac <table_get_column@@Base>:
   136ac:	push	{r4, r5, r6, r7, r8, lr}
   136b0:	ldr	r7, [r0, #4]
   136b4:	cmp	r7, #0
   136b8:	ble	136f8 <table_get_column@@Base+0x4c>
   136bc:	mov	r6, r1
   136c0:	ldr	r8, [r0]
   136c4:	mov	r5, #0
   136c8:	mov	r4, r5
   136cc:	mov	r1, r6
   136d0:	ldr	r0, [r8, r5]
   136d4:	bl	11b80 <strcmp@plt>
   136d8:	cmp	r0, #0
   136dc:	beq	136fc <table_get_column@@Base+0x50>
   136e0:	add	r4, r4, #1
   136e4:	add	r5, r5, #12
   136e8:	cmp	r4, r7
   136ec:	bne	136cc <table_get_column@@Base+0x20>
   136f0:	mvn	r4, #0
   136f4:	b	13704 <table_get_column@@Base+0x58>
   136f8:	mov	r4, #0
   136fc:	cmp	r7, r4
   13700:	mvneq	r4, #0
   13704:	mov	r0, r4
   13708:	pop	{r4, r5, r6, r7, r8, pc}

0001370c <table_get_column_data_type@@Base>:
   1370c:	ldr	r3, [r0]
   13710:	add	r1, r1, r1, lsl #1
   13714:	add	r3, r3, r1, lsl #2
   13718:	ldr	r0, [r3, #4]
   1371c:	bx	lr

00013720 <table_add_column@@Base>:
   13720:	push	{r4, r5, r6, r7, r8, r9, lr}
   13724:	sub	sp, sp, #12
   13728:	mov	r5, r0
   1372c:	mov	r9, r1
   13730:	mov	r8, r2
   13734:	ldr	r4, [r0, #8]
   13738:	mov	r1, r4
   1373c:	ldr	r0, [r0, #4]
   13740:	bl	15678 <table_column_sort@@Base+0x434>
   13744:	cmp	r1, #0
   13748:	beq	137cc <table_add_column@@Base+0xac>
   1374c:	mov	r0, r5
   13750:	bl	14478 <table_get_row_length@@Base>
   13754:	mov	r6, r0
   13758:	ldr	r7, [r5, #4]
   1375c:	mov	r0, r8
   13760:	bl	140ec <table_get_default_compare_function_for_data_type@@Base>
   13764:	str	r0, [sp]
   13768:	mov	r3, r8
   1376c:	mov	r2, r9
   13770:	mov	r1, r7
   13774:	mov	r0, r5
   13778:	bl	13634 <table_column_init@@Base>
   1377c:	cmp	r6, #0
   13780:	ble	137a4 <table_add_column@@Base+0x84>
   13784:	mov	r4, #0
   13788:	mov	r2, r7
   1378c:	mov	r1, r4
   13790:	mov	r0, r5
   13794:	bl	135b0 <table_cell_init@@Base>
   13798:	add	r4, r4, #1
   1379c:	cmp	r6, r4
   137a0:	bne	13788 <table_add_column@@Base+0x68>
   137a4:	mov	r3, #8
   137a8:	ldr	r2, [r5, #4]
   137ac:	mvn	r1, #0
   137b0:	mov	r0, r5
   137b4:	bl	12a34 <table_notify@@Base>
   137b8:	ldr	r0, [r5, #4]
   137bc:	add	r3, r0, #1
   137c0:	str	r3, [r5, #4]
   137c4:	add	sp, sp, #12
   137c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   137cc:	ldr	r1, [r5, #12]
   137d0:	add	r4, r4, r1
   137d4:	str	r4, [r5, #12]
   137d8:	add	r4, r4, r4, lsl #1
   137dc:	lsl	r1, r4, #2
   137e0:	ldr	r0, [r5]
   137e4:	bl	11bb0 <realloc@plt>
   137e8:	str	r0, [r5]
   137ec:	mov	r0, r5
   137f0:	bl	14478 <table_get_row_length@@Base>
   137f4:	subs	r7, r0, #0
   137f8:	ble	1374c <table_add_column@@Base+0x2c>
   137fc:	mov	r4, #0
   13800:	mov	r1, r4
   13804:	mov	r0, r5
   13808:	bl	14638 <table_get_row_ptr@@Base>
   1380c:	mov	r6, r0
   13810:	ldr	r1, [r5, #12]
   13814:	lsl	r1, r1, #2
   13818:	ldr	r0, [r0]
   1381c:	bl	11bb0 <realloc@plt>
   13820:	str	r0, [r6]
   13824:	add	r4, r4, #1
   13828:	cmp	r7, r4
   1382c:	bne	13800 <table_add_column@@Base+0xe0>
   13830:	b	1374c <table_add_column@@Base+0x2c>

00013834 <table_remove_column@@Base>:
   13834:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13838:	mov	r6, r0
   1383c:	mov	r7, r1
   13840:	bl	13684 <table_column_destroy@@Base>
   13844:	ldr	r4, [r6, #4]
   13848:	sub	r8, r4, #1
   1384c:	cmp	r7, r8
   13850:	bge	13898 <table_remove_column@@Base+0x64>
   13854:	add	r3, r7, r7, lsl #1
   13858:	lsl	r3, r3, #2
   1385c:	mov	r0, r7
   13860:	ldr	r2, [r6]
   13864:	add	ip, r3, #12
   13868:	add	lr, r2, r3
   1386c:	add	r1, r2, ip
   13870:	ldr	r9, [r1]
   13874:	ldr	r5, [r1, #4]
   13878:	ldr	r1, [r1, #8]
   1387c:	str	r9, [r2, r3]
   13880:	str	r5, [lr, #4]
   13884:	str	r1, [lr, #8]
   13888:	add	r0, r0, #1
   1388c:	mov	r3, ip
   13890:	cmp	r8, r0
   13894:	bgt	13860 <table_remove_column@@Base+0x2c>
   13898:	mov	r0, r6
   1389c:	bl	14478 <table_get_row_length@@Base>
   138a0:	subs	r9, r0, #0
   138a4:	ble	1390c <table_remove_column@@Base+0xd8>
   138a8:	lsl	sl, r7, #2
   138ac:	mov	r5, #0
   138b0:	sub	r4, r4, #1
   138b4:	mov	r2, r7
   138b8:	mov	r1, r5
   138bc:	mov	r0, r6
   138c0:	bl	135c4 <table_cell_destroy@@Base>
   138c4:	mov	r1, r5
   138c8:	mov	r0, r6
   138cc:	bl	14638 <table_get_row_ptr@@Base>
   138d0:	cmp	r7, r8
   138d4:	bge	13900 <table_remove_column@@Base+0xcc>
   138d8:	mov	r2, sl
   138dc:	mov	r3, r7
   138e0:	ldr	ip, [r0]
   138e4:	add	r1, r2, #4
   138e8:	ldr	lr, [ip, r1]
   138ec:	str	lr, [ip, r2]
   138f0:	add	r3, r3, #1
   138f4:	mov	r2, r1
   138f8:	cmp	r3, r4
   138fc:	bne	138e0 <table_remove_column@@Base+0xac>
   13900:	add	r5, r5, #1
   13904:	cmp	r9, r5
   13908:	bne	138b4 <table_remove_column@@Base+0x80>
   1390c:	ldr	r0, [r6, #4]
   13910:	sub	r0, r0, #1
   13914:	str	r0, [r6, #4]
   13918:	ldr	r4, [r6, #8]
   1391c:	mov	r1, r4
   13920:	bl	15678 <table_column_sort@@Base+0x434>
   13924:	cmp	r1, #0
   13928:	beq	13948 <table_remove_column@@Base+0x114>
   1392c:	mov	r3, #16
   13930:	mov	r2, r7
   13934:	mvn	r1, #0
   13938:	mov	r0, r6
   1393c:	bl	12a34 <table_notify@@Base>
   13940:	mov	r0, #0
   13944:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13948:	ldr	r1, [r6, #12]
   1394c:	sub	r1, r1, r4
   13950:	str	r1, [r6, #12]
   13954:	add	r1, r1, r1, lsl #1
   13958:	lsl	r1, r1, #2
   1395c:	ldr	r0, [r6]
   13960:	bl	11bb0 <realloc@plt>
   13964:	str	r0, [r6]
   13968:	mov	r0, r6
   1396c:	bl	14478 <table_get_row_length@@Base>
   13970:	subs	r8, r0, #0
   13974:	ble	1392c <table_remove_column@@Base+0xf8>
   13978:	mov	r4, #0
   1397c:	mov	r1, r4
   13980:	mov	r0, r6
   13984:	bl	14638 <table_get_row_ptr@@Base>
   13988:	mov	r5, r0
   1398c:	ldr	r1, [r6, #12]
   13990:	lsl	r1, r1, #2
   13994:	ldr	r0, [r0]
   13998:	bl	11bb0 <realloc@plt>
   1399c:	str	r0, [r5]
   139a0:	add	r4, r4, #1
   139a4:	cmp	r8, r4
   139a8:	bne	1397c <table_remove_column@@Base+0x148>
   139ac:	b	1392c <table_remove_column@@Base+0xf8>

000139b0 <table_get_column_name@@Base>:
   139b0:	ldr	r3, [r0]
   139b4:	add	r1, r1, r1, lsl #1
   139b8:	ldr	r0, [r3, r1, lsl #2]
   139bc:	bx	lr

000139c0 <table_get_col_ptr@@Base>:
   139c0:	add	r1, r1, r1, lsl #1
   139c4:	ldr	r0, [r0]
   139c8:	add	r0, r0, r1, lsl #2
   139cc:	bx	lr

000139d0 <table_get_column_compare_function@@Base>:
   139d0:	ldr	r3, [r0]
   139d4:	add	r1, r1, r1, lsl #1
   139d8:	add	r3, r3, r1, lsl #2
   139dc:	ldr	r0, [r3, #8]
   139e0:	bx	lr

000139e4 <table_set_column_compare_function@@Base>:
   139e4:	ldr	r3, [r0]
   139e8:	add	r1, r1, r1, lsl #1
   139ec:	add	r3, r3, r1, lsl #2
   139f0:	str	r2, [r3, #8]
   139f4:	bx	lr

000139f8 <table_compare_bool@@Base>:
   139f8:	cmp	r0, #0
   139fc:	beq	13a28 <table_compare_bool@@Base+0x30>
   13a00:	cmp	r1, #0
   13a04:	beq	13a34 <table_compare_bool@@Base+0x3c>
   13a08:	ldrb	r0, [r0]
   13a0c:	ldrb	r1, [r1]
   13a10:	cmp	r0, r1
   13a14:	bgt	13a3c <table_compare_bool@@Base+0x44>
   13a18:	cmp	r0, r1
   13a1c:	movge	r0, #0
   13a20:	mvnlt	r0, #0
   13a24:	bx	lr
   13a28:	adds	r0, r1, #0
   13a2c:	mvnne	r0, #0
   13a30:	bx	lr
   13a34:	mov	r0, #1
   13a38:	bx	lr
   13a3c:	mov	r0, #1
   13a40:	bx	lr

00013a44 <table_compare_int@@Base>:
   13a44:	cmp	r0, #0
   13a48:	beq	13a74 <table_compare_int@@Base+0x30>
   13a4c:	cmp	r1, #0
   13a50:	beq	13a80 <table_compare_int@@Base+0x3c>
   13a54:	ldr	r0, [r0]
   13a58:	ldr	r1, [r1]
   13a5c:	cmp	r0, r1
   13a60:	bgt	13a88 <table_compare_int@@Base+0x44>
   13a64:	cmp	r0, r1
   13a68:	movge	r0, #0
   13a6c:	mvnlt	r0, #0
   13a70:	bx	lr
   13a74:	adds	r0, r1, #0
   13a78:	mvnne	r0, #0
   13a7c:	bx	lr
   13a80:	mov	r0, #1
   13a84:	bx	lr
   13a88:	mov	r0, #1
   13a8c:	bx	lr

00013a90 <table_compare_uint@@Base>:
   13a90:	cmp	r0, #0
   13a94:	beq	13ac0 <table_compare_uint@@Base+0x30>
   13a98:	cmp	r1, #0
   13a9c:	beq	13acc <table_compare_uint@@Base+0x3c>
   13aa0:	ldr	r0, [r0]
   13aa4:	ldr	r1, [r1]
   13aa8:	cmp	r0, r1
   13aac:	bhi	13ad4 <table_compare_uint@@Base+0x44>
   13ab0:	cmp	r0, r1
   13ab4:	movcs	r0, #0
   13ab8:	mvncc	r0, #0
   13abc:	bx	lr
   13ac0:	adds	r0, r1, #0
   13ac4:	mvnne	r0, #0
   13ac8:	bx	lr
   13acc:	mov	r0, #1
   13ad0:	bx	lr
   13ad4:	mov	r0, #1
   13ad8:	bx	lr

00013adc <table_compare_int8@@Base>:
   13adc:	cmp	r0, #0
   13ae0:	beq	13b0c <table_compare_int8@@Base+0x30>
   13ae4:	cmp	r1, #0
   13ae8:	beq	13b18 <table_compare_int8@@Base+0x3c>
   13aec:	ldrsb	r0, [r0]
   13af0:	ldrsb	r1, [r1]
   13af4:	cmp	r0, r1
   13af8:	bgt	13b20 <table_compare_int8@@Base+0x44>
   13afc:	cmp	r0, r1
   13b00:	movge	r0, #0
   13b04:	mvnlt	r0, #0
   13b08:	bx	lr
   13b0c:	adds	r0, r1, #0
   13b10:	mvnne	r0, #0
   13b14:	bx	lr
   13b18:	mov	r0, #1
   13b1c:	bx	lr
   13b20:	mov	r0, #1
   13b24:	bx	lr

00013b28 <table_compare_uint8@@Base>:
   13b28:	cmp	r0, #0
   13b2c:	beq	13b58 <table_compare_uint8@@Base+0x30>
   13b30:	cmp	r1, #0
   13b34:	beq	13b64 <table_compare_uint8@@Base+0x3c>
   13b38:	ldrb	r0, [r0]
   13b3c:	ldrb	r1, [r1]
   13b40:	cmp	r0, r1
   13b44:	bhi	13b6c <table_compare_uint8@@Base+0x44>
   13b48:	cmp	r0, r1
   13b4c:	movcs	r0, #0
   13b50:	mvncc	r0, #0
   13b54:	bx	lr
   13b58:	adds	r0, r1, #0
   13b5c:	mvnne	r0, #0
   13b60:	bx	lr
   13b64:	mov	r0, #1
   13b68:	bx	lr
   13b6c:	mov	r0, #1
   13b70:	bx	lr

00013b74 <table_compare_int16@@Base>:
   13b74:	cmp	r0, #0
   13b78:	beq	13ba4 <table_compare_int16@@Base+0x30>
   13b7c:	cmp	r1, #0
   13b80:	beq	13bb0 <table_compare_int16@@Base+0x3c>
   13b84:	ldrsh	r0, [r0]
   13b88:	ldrsh	r1, [r1]
   13b8c:	cmp	r0, r1
   13b90:	bgt	13bb8 <table_compare_int16@@Base+0x44>
   13b94:	cmp	r0, r1
   13b98:	movge	r0, #0
   13b9c:	mvnlt	r0, #0
   13ba0:	bx	lr
   13ba4:	adds	r0, r1, #0
   13ba8:	mvnne	r0, #0
   13bac:	bx	lr
   13bb0:	mov	r0, #1
   13bb4:	bx	lr
   13bb8:	mov	r0, #1
   13bbc:	bx	lr

00013bc0 <table_compare_uint16@@Base>:
   13bc0:	cmp	r0, #0
   13bc4:	beq	13bf0 <table_compare_uint16@@Base+0x30>
   13bc8:	cmp	r1, #0
   13bcc:	beq	13bfc <table_compare_uint16@@Base+0x3c>
   13bd0:	ldrh	r0, [r0]
   13bd4:	ldrh	r1, [r1]
   13bd8:	cmp	r0, r1
   13bdc:	bhi	13c04 <table_compare_uint16@@Base+0x44>
   13be0:	cmp	r0, r1
   13be4:	movcs	r0, #0
   13be8:	mvncc	r0, #0
   13bec:	bx	lr
   13bf0:	adds	r0, r1, #0
   13bf4:	mvnne	r0, #0
   13bf8:	bx	lr
   13bfc:	mov	r0, #1
   13c00:	bx	lr
   13c04:	mov	r0, #1
   13c08:	bx	lr

00013c0c <table_compare_int32@@Base>:
   13c0c:	cmp	r0, #0
   13c10:	beq	13c3c <table_compare_int32@@Base+0x30>
   13c14:	cmp	r1, #0
   13c18:	beq	13c48 <table_compare_int32@@Base+0x3c>
   13c1c:	ldr	r0, [r0]
   13c20:	ldr	r1, [r1]
   13c24:	cmp	r0, r1
   13c28:	bgt	13c50 <table_compare_int32@@Base+0x44>
   13c2c:	cmp	r0, r1
   13c30:	movge	r0, #0
   13c34:	mvnlt	r0, #0
   13c38:	bx	lr
   13c3c:	adds	r0, r1, #0
   13c40:	mvnne	r0, #0
   13c44:	bx	lr
   13c48:	mov	r0, #1
   13c4c:	bx	lr
   13c50:	mov	r0, #1
   13c54:	bx	lr

00013c58 <table_compare_uint32@@Base>:
   13c58:	cmp	r0, #0
   13c5c:	beq	13c88 <table_compare_uint32@@Base+0x30>
   13c60:	cmp	r1, #0
   13c64:	beq	13c94 <table_compare_uint32@@Base+0x3c>
   13c68:	ldr	r0, [r0]
   13c6c:	ldr	r1, [r1]
   13c70:	cmp	r0, r1
   13c74:	bhi	13c9c <table_compare_uint32@@Base+0x44>
   13c78:	cmp	r0, r1
   13c7c:	movcs	r0, #0
   13c80:	mvncc	r0, #0
   13c84:	bx	lr
   13c88:	adds	r0, r1, #0
   13c8c:	mvnne	r0, #0
   13c90:	bx	lr
   13c94:	mov	r0, #1
   13c98:	bx	lr
   13c9c:	mov	r0, #1
   13ca0:	bx	lr

00013ca4 <table_compare_int64@@Base>:
   13ca4:	cmp	r0, #0
   13ca8:	beq	13ce8 <table_compare_int64@@Base+0x44>
   13cac:	cmp	r1, #0
   13cb0:	beq	13cf4 <table_compare_int64@@Base+0x50>
   13cb4:	push	{r4, r5}
   13cb8:	ldrd	r4, [r0]
   13cbc:	ldrd	r2, [r1]
   13cc0:	cmp	r2, r4
   13cc4:	sbcs	r1, r3, r5
   13cc8:	movlt	r0, #1
   13ccc:	blt	13ce0 <table_compare_int64@@Base+0x3c>
   13cd0:	cmp	r4, r2
   13cd4:	sbcs	r3, r5, r3
   13cd8:	mvnlt	r0, #0
   13cdc:	movge	r0, #0
   13ce0:	pop	{r4, r5}
   13ce4:	bx	lr
   13ce8:	adds	r0, r1, #0
   13cec:	mvnne	r0, #0
   13cf0:	bx	lr
   13cf4:	mov	r0, #1
   13cf8:	bx	lr

00013cfc <table_compare_uint64@@Base>:
   13cfc:	cmp	r0, #0
   13d00:	beq	13d38 <table_compare_uint64@@Base+0x3c>
   13d04:	cmp	r1, #0
   13d08:	beq	13d44 <table_compare_uint64@@Base+0x48>
   13d0c:	push	{r4, r5}
   13d10:	ldrd	r4, [r0]
   13d14:	ldrd	r2, [r1]
   13d18:	cmp	r5, r3
   13d1c:	cmpeq	r4, r2
   13d20:	movhi	r0, #1
   13d24:	bhi	13d30 <table_compare_uint64@@Base+0x34>
   13d28:	mvncc	r0, #0
   13d2c:	movcs	r0, #0
   13d30:	pop	{r4, r5}
   13d34:	bx	lr
   13d38:	adds	r0, r1, #0
   13d3c:	mvnne	r0, #0
   13d40:	bx	lr
   13d44:	mov	r0, #1
   13d48:	bx	lr

00013d4c <table_compare_short@@Base>:
   13d4c:	cmp	r0, #0
   13d50:	beq	13d7c <table_compare_short@@Base+0x30>
   13d54:	cmp	r1, #0
   13d58:	beq	13d88 <table_compare_short@@Base+0x3c>
   13d5c:	ldrsh	r0, [r0]
   13d60:	ldrsh	r1, [r1]
   13d64:	cmp	r0, r1
   13d68:	bgt	13d90 <table_compare_short@@Base+0x44>
   13d6c:	cmp	r0, r1
   13d70:	movge	r0, #0
   13d74:	mvnlt	r0, #0
   13d78:	bx	lr
   13d7c:	adds	r0, r1, #0
   13d80:	mvnne	r0, #0
   13d84:	bx	lr
   13d88:	mov	r0, #1
   13d8c:	bx	lr
   13d90:	mov	r0, #1
   13d94:	bx	lr

00013d98 <table_compare_ushort@@Base>:
   13d98:	cmp	r0, #0
   13d9c:	beq	13dc8 <table_compare_ushort@@Base+0x30>
   13da0:	cmp	r1, #0
   13da4:	beq	13dd4 <table_compare_ushort@@Base+0x3c>
   13da8:	ldrh	r0, [r0]
   13dac:	ldrh	r1, [r1]
   13db0:	cmp	r0, r1
   13db4:	bhi	13ddc <table_compare_ushort@@Base+0x44>
   13db8:	cmp	r0, r1
   13dbc:	movcs	r0, #0
   13dc0:	mvncc	r0, #0
   13dc4:	bx	lr
   13dc8:	adds	r0, r1, #0
   13dcc:	mvnne	r0, #0
   13dd0:	bx	lr
   13dd4:	mov	r0, #1
   13dd8:	bx	lr
   13ddc:	mov	r0, #1
   13de0:	bx	lr

00013de4 <table_compare_long@@Base>:
   13de4:	cmp	r0, #0
   13de8:	beq	13e14 <table_compare_long@@Base+0x30>
   13dec:	cmp	r1, #0
   13df0:	beq	13e20 <table_compare_long@@Base+0x3c>
   13df4:	ldr	r0, [r0]
   13df8:	ldr	r1, [r1]
   13dfc:	cmp	r0, r1
   13e00:	bgt	13e28 <table_compare_long@@Base+0x44>
   13e04:	cmp	r0, r1
   13e08:	movge	r0, #0
   13e0c:	mvnlt	r0, #0
   13e10:	bx	lr
   13e14:	adds	r0, r1, #0
   13e18:	mvnne	r0, #0
   13e1c:	bx	lr
   13e20:	mov	r0, #1
   13e24:	bx	lr
   13e28:	mov	r0, #1
   13e2c:	bx	lr

00013e30 <table_compare_ulong@@Base>:
   13e30:	cmp	r0, #0
   13e34:	beq	13e60 <table_compare_ulong@@Base+0x30>
   13e38:	cmp	r1, #0
   13e3c:	beq	13e6c <table_compare_ulong@@Base+0x3c>
   13e40:	ldr	r0, [r0]
   13e44:	ldr	r1, [r1]
   13e48:	cmp	r0, r1
   13e4c:	bhi	13e74 <table_compare_ulong@@Base+0x44>
   13e50:	cmp	r0, r1
   13e54:	movcs	r0, #0
   13e58:	mvncc	r0, #0
   13e5c:	bx	lr
   13e60:	adds	r0, r1, #0
   13e64:	mvnne	r0, #0
   13e68:	bx	lr
   13e6c:	mov	r0, #1
   13e70:	bx	lr
   13e74:	mov	r0, #1
   13e78:	bx	lr

00013e7c <table_compare_llong@@Base>:
   13e7c:	cmp	r0, #0
   13e80:	beq	13ec0 <table_compare_llong@@Base+0x44>
   13e84:	cmp	r1, #0
   13e88:	beq	13ecc <table_compare_llong@@Base+0x50>
   13e8c:	push	{r4, r5}
   13e90:	ldrd	r4, [r0]
   13e94:	ldrd	r2, [r1]
   13e98:	cmp	r2, r4
   13e9c:	sbcs	r1, r3, r5
   13ea0:	movlt	r0, #1
   13ea4:	blt	13eb8 <table_compare_llong@@Base+0x3c>
   13ea8:	cmp	r4, r2
   13eac:	sbcs	r3, r5, r3
   13eb0:	mvnlt	r0, #0
   13eb4:	movge	r0, #0
   13eb8:	pop	{r4, r5}
   13ebc:	bx	lr
   13ec0:	adds	r0, r1, #0
   13ec4:	mvnne	r0, #0
   13ec8:	bx	lr
   13ecc:	mov	r0, #1
   13ed0:	bx	lr

00013ed4 <table_compare_ullong@@Base>:
   13ed4:	cmp	r0, #0
   13ed8:	beq	13f04 <table_compare_ullong@@Base+0x30>
   13edc:	cmp	r1, #0
   13ee0:	beq	13f10 <table_compare_ullong@@Base+0x3c>
   13ee4:	ldr	r0, [r0]
   13ee8:	ldr	r1, [r1]
   13eec:	cmp	r0, r1
   13ef0:	bhi	13f18 <table_compare_ullong@@Base+0x44>
   13ef4:	cmp	r0, r1
   13ef8:	movcs	r0, #0
   13efc:	mvncc	r0, #0
   13f00:	bx	lr
   13f04:	adds	r0, r1, #0
   13f08:	mvnne	r0, #0
   13f0c:	bx	lr
   13f10:	mov	r0, #1
   13f14:	bx	lr
   13f18:	mov	r0, #1
   13f1c:	bx	lr

00013f20 <table_compare_float@@Base>:
   13f20:	cmp	r0, #0
   13f24:	beq	13f50 <table_compare_float@@Base+0x30>
   13f28:	cmp	r1, #0
   13f2c:	beq	13f5c <table_compare_float@@Base+0x3c>
   13f30:	vldr	s14, [r0]
   13f34:	vldr	s15, [r1]
   13f38:	vcmpe.f32	s14, s15
   13f3c:	vmrs	APSR_nzcv, fpscr
   13f40:	bgt	13f64 <table_compare_float@@Base+0x44>
   13f44:	mvnmi	r0, #0
   13f48:	movpl	r0, #0
   13f4c:	bx	lr
   13f50:	adds	r0, r1, #0
   13f54:	mvnne	r0, #0
   13f58:	bx	lr
   13f5c:	mov	r0, #1
   13f60:	bx	lr
   13f64:	mov	r0, #1
   13f68:	bx	lr

00013f6c <table_compare_double@@Base>:
   13f6c:	cmp	r0, #0
   13f70:	beq	13f9c <table_compare_double@@Base+0x30>
   13f74:	cmp	r1, #0
   13f78:	beq	13fa8 <table_compare_double@@Base+0x3c>
   13f7c:	vldr	d6, [r0]
   13f80:	vldr	d7, [r1]
   13f84:	vcmpe.f64	d6, d7
   13f88:	vmrs	APSR_nzcv, fpscr
   13f8c:	bgt	13fb0 <table_compare_double@@Base+0x44>
   13f90:	mvnmi	r0, #0
   13f94:	movpl	r0, #0
   13f98:	bx	lr
   13f9c:	adds	r0, r1, #0
   13fa0:	mvnne	r0, #0
   13fa4:	bx	lr
   13fa8:	mov	r0, #1
   13fac:	bx	lr
   13fb0:	mov	r0, #1
   13fb4:	bx	lr

00013fb8 <table_compare_ldouble@@Base>:
   13fb8:	cmp	r0, #0
   13fbc:	beq	13fe8 <table_compare_ldouble@@Base+0x30>
   13fc0:	cmp	r1, #0
   13fc4:	beq	13ff4 <table_compare_ldouble@@Base+0x3c>
   13fc8:	vldr	d6, [r0]
   13fcc:	vldr	d7, [r1]
   13fd0:	vcmpe.f64	d6, d7
   13fd4:	vmrs	APSR_nzcv, fpscr
   13fd8:	bgt	13ffc <table_compare_ldouble@@Base+0x44>
   13fdc:	mvnmi	r0, #0
   13fe0:	movpl	r0, #0
   13fe4:	bx	lr
   13fe8:	adds	r0, r1, #0
   13fec:	mvnne	r0, #0
   13ff0:	bx	lr
   13ff4:	mov	r0, #1
   13ff8:	bx	lr
   13ffc:	mov	r0, #1
   14000:	bx	lr

00014004 <table_compare_char@@Base>:
   14004:	cmp	r0, #0
   14008:	beq	14034 <table_compare_char@@Base+0x30>
   1400c:	cmp	r1, #0
   14010:	beq	14040 <table_compare_char@@Base+0x3c>
   14014:	ldrb	r0, [r0]
   14018:	ldrb	r1, [r1]
   1401c:	cmp	r0, r1
   14020:	bhi	14048 <table_compare_char@@Base+0x44>
   14024:	cmp	r0, r1
   14028:	movcs	r0, #0
   1402c:	mvncc	r0, #0
   14030:	bx	lr
   14034:	adds	r0, r1, #0
   14038:	mvnne	r0, #0
   1403c:	bx	lr
   14040:	mov	r0, #1
   14044:	bx	lr
   14048:	mov	r0, #1
   1404c:	bx	lr

00014050 <table_compare_uchar@@Base>:
   14050:	cmp	r0, #0
   14054:	beq	14080 <table_compare_uchar@@Base+0x30>
   14058:	cmp	r1, #0
   1405c:	beq	1408c <table_compare_uchar@@Base+0x3c>
   14060:	ldrb	r0, [r0]
   14064:	ldrb	r1, [r1]
   14068:	cmp	r0, r1
   1406c:	bhi	14094 <table_compare_uchar@@Base+0x44>
   14070:	cmp	r0, r1
   14074:	movcs	r0, #0
   14078:	mvncc	r0, #0
   1407c:	bx	lr
   14080:	adds	r0, r1, #0
   14084:	mvnne	r0, #0
   14088:	bx	lr
   1408c:	mov	r0, #1
   14090:	bx	lr
   14094:	mov	r0, #1
   14098:	bx	lr

0001409c <table_compare_ptr@@Base>:
   1409c:	cmp	r0, r1
   140a0:	bhi	140b4 <table_compare_ptr@@Base+0x18>
   140a4:	cmp	r0, r1
   140a8:	movcs	r0, #0
   140ac:	mvncc	r0, #0
   140b0:	bx	lr
   140b4:	mov	r0, #1
   140b8:	bx	lr

000140bc <table_compare_string@@Base>:
   140bc:	cmp	r0, #0
   140c0:	beq	140d8 <table_compare_string@@Base+0x1c>
   140c4:	cmp	r1, #0
   140c8:	beq	140e4 <table_compare_string@@Base+0x28>
   140cc:	push	{r4, lr}
   140d0:	bl	11b80 <strcmp@plt>
   140d4:	pop	{r4, pc}
   140d8:	adds	r0, r1, #0
   140dc:	mvnne	r0, #0
   140e0:	bx	lr
   140e4:	mov	r0, #1
   140e8:	bx	lr

000140ec <table_get_default_compare_function_for_data_type@@Base>:
   140ec:	cmp	r0, #23
   140f0:	ldrls	pc, [pc, r0, lsl #2]
   140f4:	b	14218 <table_get_default_compare_function_for_data_type@@Base+0x12c>
   140f8:	andeq	r4, r1, r8, asr r1
   140fc:	andeq	r4, r1, r0, ror #2
   14100:	andeq	r4, r1, r8, ror #2
   14104:	andeq	r4, r1, r0, ror r1
   14108:	andeq	r4, r1, r8, ror r1
   1410c:	andeq	r4, r1, r0, lsl #3
   14110:	andeq	r4, r1, r8, lsl #3
   14114:	muleq	r1, r0, r1
   14118:	muleq	r1, r8, r1
   1411c:	andeq	r4, r1, r0, lsr #3
   14120:	andeq	r4, r1, r8, lsr #3
   14124:			; <UNDEFINED> instruction: 0x000141b0
   14128:			; <UNDEFINED> instruction: 0x000141b8
   1412c:	andeq	r4, r1, r0, asr #3
   14130:	andeq	r4, r1, r8, asr #3
   14134:	ldrdeq	r4, [r1], -r0
   14138:	andeq	r4, r1, r0, ror #3
   1413c:	andeq	r4, r1, r8, ror #3
   14140:	strdeq	r4, [r1], -r0
   14144:	andeq	r4, r1, r0, lsl #4
   14148:	andeq	r4, r1, r8, lsl #4
   1414c:	ldrdeq	r4, [r1], -r8
   14150:	strdeq	r4, [r1], -r8
   14154:	andeq	r4, r1, r0, lsl r2
   14158:	ldr	r0, [pc, #192]	; 14220 <table_get_default_compare_function_for_data_type@@Base+0x134>
   1415c:	bx	lr
   14160:	ldr	r0, [pc, #188]	; 14224 <table_get_default_compare_function_for_data_type@@Base+0x138>
   14164:	bx	lr
   14168:	ldr	r0, [pc, #184]	; 14228 <table_get_default_compare_function_for_data_type@@Base+0x13c>
   1416c:	bx	lr
   14170:	ldr	r0, [pc, #180]	; 1422c <table_get_default_compare_function_for_data_type@@Base+0x140>
   14174:	bx	lr
   14178:	ldr	r0, [pc, #176]	; 14230 <table_get_default_compare_function_for_data_type@@Base+0x144>
   1417c:	bx	lr
   14180:	ldr	r0, [pc, #172]	; 14234 <table_get_default_compare_function_for_data_type@@Base+0x148>
   14184:	bx	lr
   14188:	ldr	r0, [pc, #168]	; 14238 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   1418c:	bx	lr
   14190:	ldr	r0, [pc, #164]	; 1423c <table_get_default_compare_function_for_data_type@@Base+0x150>
   14194:	bx	lr
   14198:	ldr	r0, [pc, #160]	; 14240 <table_get_default_compare_function_for_data_type@@Base+0x154>
   1419c:	bx	lr
   141a0:	ldr	r0, [pc, #156]	; 14244 <table_get_default_compare_function_for_data_type@@Base+0x158>
   141a4:	bx	lr
   141a8:	ldr	r0, [pc, #152]	; 14248 <table_get_default_compare_function_for_data_type@@Base+0x15c>
   141ac:	bx	lr
   141b0:	ldr	r0, [pc, #148]	; 1424c <table_get_default_compare_function_for_data_type@@Base+0x160>
   141b4:	bx	lr
   141b8:	ldr	r0, [pc, #144]	; 14250 <table_get_default_compare_function_for_data_type@@Base+0x164>
   141bc:	bx	lr
   141c0:	ldr	r0, [pc, #140]	; 14254 <table_get_default_compare_function_for_data_type@@Base+0x168>
   141c4:	bx	lr
   141c8:	ldr	r0, [pc, #136]	; 14258 <table_get_default_compare_function_for_data_type@@Base+0x16c>
   141cc:	bx	lr
   141d0:	ldr	r0, [pc, #132]	; 1425c <table_get_default_compare_function_for_data_type@@Base+0x170>
   141d4:	bx	lr
   141d8:	ldr	r0, [pc, #128]	; 14260 <table_get_default_compare_function_for_data_type@@Base+0x174>
   141dc:	bx	lr
   141e0:	ldr	r0, [pc, #124]	; 14264 <table_get_default_compare_function_for_data_type@@Base+0x178>
   141e4:	bx	lr
   141e8:	ldr	r0, [pc, #120]	; 14268 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   141ec:	bx	lr
   141f0:	ldr	r0, [pc, #116]	; 1426c <table_get_default_compare_function_for_data_type@@Base+0x180>
   141f4:	bx	lr
   141f8:	ldr	r0, [pc, #112]	; 14270 <table_get_default_compare_function_for_data_type@@Base+0x184>
   141fc:	bx	lr
   14200:	ldr	r0, [pc, #108]	; 14274 <table_get_default_compare_function_for_data_type@@Base+0x188>
   14204:	bx	lr
   14208:	ldr	r0, [pc, #104]	; 14278 <table_get_default_compare_function_for_data_type@@Base+0x18c>
   1420c:	bx	lr
   14210:	ldr	r0, [pc, #100]	; 1427c <table_get_default_compare_function_for_data_type@@Base+0x190>
   14214:	bx	lr
   14218:	mov	r0, #0
   1421c:	bx	lr
   14220:	andeq	r3, r1, r4, asr #20
   14224:	muleq	r1, r0, sl
   14228:	ldrdeq	r3, [r1], -ip
   1422c:	andeq	r3, r1, r8, lsr #22
   14230:	andeq	r3, r1, r4, ror fp
   14234:	andeq	r3, r1, r0, asr #23
   14238:	andeq	r3, r1, ip, lsl #24
   1423c:	andeq	r3, r1, r8, asr ip
   14240:	andeq	r3, r1, r4, lsr #25
   14244:	strdeq	r3, [r1], -ip
   14248:	andeq	r3, r1, ip, asr #26
   1424c:	muleq	r1, r8, sp
   14250:	andeq	r3, r1, r4, ror #27
   14254:	andeq	r3, r1, r0, lsr lr
   14258:	andeq	r3, r1, ip, ror lr
   1425c:	ldrdeq	r3, [r1], -r4
   14260:	strheq	r4, [r1], -ip
   14264:	andeq	r3, r1, r0, lsr #30
   14268:	andeq	r3, r1, ip, ror #30
   1426c:			; <UNDEFINED> instruction: 0x00013fb8
   14270:	strdeq	r3, [r1], -r8
   14274:	andeq	r4, r1, r4
   14278:	andeq	r4, r1, r0, asr r0
   1427c:	muleq	r1, ip, r0

00014280 <table_get@@Base>:
   14280:	push	{r4, lr}
   14284:	bl	13598 <table_get_cell_ptr@@Base>
   14288:	ldr	r0, [r0]
   1428c:	pop	{r4, pc}

00014290 <table_get_bool@@Base>:
   14290:	push	{r4, lr}
   14294:	bl	14280 <table_get@@Base>
   14298:	ldrb	r0, [r0]
   1429c:	pop	{r4, pc}

000142a0 <table_get_int@@Base>:
   142a0:	push	{r4, lr}
   142a4:	bl	14280 <table_get@@Base>
   142a8:	ldr	r0, [r0]
   142ac:	pop	{r4, pc}

000142b0 <table_get_uint@@Base>:
   142b0:	push	{r4, lr}
   142b4:	bl	14280 <table_get@@Base>
   142b8:	ldr	r0, [r0]
   142bc:	pop	{r4, pc}

000142c0 <table_get_int8@@Base>:
   142c0:	push	{r4, lr}
   142c4:	bl	14280 <table_get@@Base>
   142c8:	ldrsb	r0, [r0]
   142cc:	pop	{r4, pc}

000142d0 <table_get_uint8@@Base>:
   142d0:	push	{r4, lr}
   142d4:	bl	14280 <table_get@@Base>
   142d8:	ldrb	r0, [r0]
   142dc:	pop	{r4, pc}

000142e0 <table_get_int16@@Base>:
   142e0:	push	{r4, lr}
   142e4:	bl	14280 <table_get@@Base>
   142e8:	ldrsh	r0, [r0]
   142ec:	pop	{r4, pc}

000142f0 <table_get_uint16@@Base>:
   142f0:	push	{r4, lr}
   142f4:	bl	14280 <table_get@@Base>
   142f8:	ldrh	r0, [r0]
   142fc:	pop	{r4, pc}

00014300 <table_get_int32@@Base>:
   14300:	push	{r4, lr}
   14304:	bl	14280 <table_get@@Base>
   14308:	ldr	r0, [r0]
   1430c:	pop	{r4, pc}

00014310 <table_get_uint32@@Base>:
   14310:	push	{r4, lr}
   14314:	bl	14280 <table_get@@Base>
   14318:	ldr	r0, [r0]
   1431c:	pop	{r4, pc}

00014320 <table_get_int64@@Base>:
   14320:	push	{r4, lr}
   14324:	bl	14280 <table_get@@Base>
   14328:	ldrd	r0, [r0]
   1432c:	pop	{r4, pc}

00014330 <table_get_uint64@@Base>:
   14330:	push	{r4, lr}
   14334:	bl	14280 <table_get@@Base>
   14338:	ldrd	r0, [r0]
   1433c:	pop	{r4, pc}

00014340 <table_get_short@@Base>:
   14340:	push	{r4, lr}
   14344:	bl	14280 <table_get@@Base>
   14348:	ldrsh	r0, [r0]
   1434c:	pop	{r4, pc}

00014350 <table_get_ushort@@Base>:
   14350:	push	{r4, lr}
   14354:	bl	14280 <table_get@@Base>
   14358:	ldrh	r0, [r0]
   1435c:	pop	{r4, pc}

00014360 <table_get_long@@Base>:
   14360:	push	{r4, lr}
   14364:	bl	14280 <table_get@@Base>
   14368:	ldr	r0, [r0]
   1436c:	pop	{r4, pc}

00014370 <table_get_ulong@@Base>:
   14370:	push	{r4, lr}
   14374:	bl	14280 <table_get@@Base>
   14378:	ldr	r0, [r0]
   1437c:	pop	{r4, pc}

00014380 <table_get_llong@@Base>:
   14380:	push	{r4, lr}
   14384:	bl	14280 <table_get@@Base>
   14388:	ldrd	r0, [r0]
   1438c:	pop	{r4, pc}

00014390 <table_get_ullong@@Base>:
   14390:	push	{r4, lr}
   14394:	bl	14280 <table_get@@Base>
   14398:	ldrd	r0, [r0]
   1439c:	pop	{r4, pc}

000143a0 <table_get_float@@Base>:
   143a0:	push	{r4, lr}
   143a4:	bl	14280 <table_get@@Base>
   143a8:	vldr	s0, [r0]
   143ac:	pop	{r4, pc}

000143b0 <table_get_double@@Base>:
   143b0:	push	{r4, lr}
   143b4:	bl	14280 <table_get@@Base>
   143b8:	vldr	d0, [r0]
   143bc:	pop	{r4, pc}

000143c0 <table_get_ldouble@@Base>:
   143c0:	push	{r4, lr}
   143c4:	bl	14280 <table_get@@Base>
   143c8:	vldr	d0, [r0]
   143cc:	pop	{r4, pc}

000143d0 <table_get_char@@Base>:
   143d0:	push	{r4, lr}
   143d4:	bl	14280 <table_get@@Base>
   143d8:	ldrb	r0, [r0]
   143dc:	pop	{r4, pc}

000143e0 <table_get_uchar@@Base>:
   143e0:	push	{r4, lr}
   143e4:	bl	14280 <table_get@@Base>
   143e8:	ldrb	r0, [r0]
   143ec:	pop	{r4, pc}

000143f0 <table_get_string@@Base>:
   143f0:	push	{r4, lr}
   143f4:	bl	14280 <table_get@@Base>
   143f8:	pop	{r4, pc}

000143fc <table_get_ptr@@Base>:
   143fc:	push	{r4, lr}
   14400:	bl	14280 <table_get@@Base>
   14404:	pop	{r4, pc}

00014408 <table_row_init@@Base>:
   14408:	push	{r4, r5, r6, lr}
   1440c:	mov	r5, r1
   14410:	ldr	r4, [r0, #16]
   14414:	ldr	r0, [r0, #12]
   14418:	lsl	r0, r0, #2
   1441c:	bl	11bd4 <malloc@plt>
   14420:	str	r0, [r4, r5, lsl #2]
   14424:	pop	{r4, r5, r6, pc}

00014428 <table_row_destroy@@Base>:
   14428:	push	{r4, r5, r6, r7, r8, lr}
   1442c:	mov	r6, r0
   14430:	mov	r5, r1
   14434:	bl	136a4 <table_get_column_length@@Base>
   14438:	ldr	r8, [r6, #16]
   1443c:	subs	r7, r0, #0
   14440:	ble	14464 <table_row_destroy@@Base+0x3c>
   14444:	mov	r4, #0
   14448:	mov	r2, r4
   1444c:	mov	r1, r5
   14450:	mov	r0, r6
   14454:	bl	135c4 <table_cell_destroy@@Base>
   14458:	add	r4, r4, #1
   1445c:	cmp	r7, r4
   14460:	bne	14448 <table_row_destroy@@Base+0x20>
   14464:	ldr	r0, [r8, r5, lsl #2]
   14468:	cmp	r0, #0
   1446c:	popeq	{r4, r5, r6, r7, r8, pc}
   14470:	bl	11b98 <free@plt>
   14474:	pop	{r4, r5, r6, r7, r8, pc}

00014478 <table_get_row_length@@Base>:
   14478:	ldr	r0, [r0, #20]
   1447c:	bx	lr

00014480 <table_add_row@@Base>:
   14480:	push	{r4, r5, r6, r7, r8, lr}
   14484:	mov	r5, r0
   14488:	ldr	r4, [r0, #24]
   1448c:	mov	r1, r4
   14490:	ldr	r0, [r0, #20]
   14494:	bl	15678 <table_column_sort@@Base+0x434>
   14498:	cmp	r1, #0
   1449c:	beq	14508 <table_add_row@@Base+0x88>
   144a0:	ldr	r7, [r5, #20]
   144a4:	mov	r0, r5
   144a8:	bl	136a4 <table_get_column_length@@Base>
   144ac:	mov	r6, r0
   144b0:	mov	r1, r7
   144b4:	mov	r0, r5
   144b8:	bl	14408 <table_row_init@@Base>
   144bc:	cmp	r6, #0
   144c0:	ble	144e4 <table_add_row@@Base+0x64>
   144c4:	mov	r4, #0
   144c8:	mov	r2, r4
   144cc:	mov	r1, r7
   144d0:	mov	r0, r5
   144d4:	bl	135b0 <table_cell_init@@Base>
   144d8:	add	r4, r4, #1
   144dc:	cmp	r6, r4
   144e0:	bne	144c8 <table_add_row@@Base+0x48>
   144e4:	mov	r3, #2
   144e8:	mvn	r2, #0
   144ec:	ldr	r1, [r5, #20]
   144f0:	mov	r0, r5
   144f4:	bl	12a34 <table_notify@@Base>
   144f8:	ldr	r0, [r5, #20]
   144fc:	add	r3, r0, #1
   14500:	str	r3, [r5, #20]
   14504:	pop	{r4, r5, r6, r7, r8, pc}
   14508:	ldr	r1, [r5, #28]
   1450c:	add	r1, r4, r1
   14510:	str	r1, [r5, #28]
   14514:	lsl	r1, r1, #2
   14518:	ldr	r0, [r5, #16]
   1451c:	bl	11bb0 <realloc@plt>
   14520:	str	r0, [r5, #16]
   14524:	b	144a0 <table_add_row@@Base+0x20>

00014528 <table_remove_row@@Base>:
   14528:	push	{r4, r5, r6, r7, r8, lr}
   1452c:	mov	r5, r0
   14530:	mov	r6, r1
   14534:	ldr	r7, [r0, #20]
   14538:	bl	136a4 <table_get_column_length@@Base>
   1453c:	subs	r8, r0, #0
   14540:	ble	14590 <table_remove_row@@Base+0x68>
   14544:	mov	r4, #0
   14548:	b	14558 <table_remove_row@@Base+0x30>
   1454c:	add	r4, r4, #1
   14550:	cmp	r8, r4
   14554:	beq	14590 <table_remove_row@@Base+0x68>
   14558:	mov	r1, r4
   1455c:	mov	r0, r5
   14560:	bl	1370c <table_get_column_data_type@@Base>
   14564:	cmp	r0, #23
   14568:	beq	1454c <table_remove_row@@Base+0x24>
   1456c:	mov	r2, r4
   14570:	mov	r1, r6
   14574:	mov	r0, r5
   14578:	bl	13598 <table_get_cell_ptr@@Base>
   1457c:	ldr	r0, [r0]
   14580:	cmp	r0, #0
   14584:	beq	1454c <table_remove_row@@Base+0x24>
   14588:	bl	11b98 <free@plt>
   1458c:	b	1454c <table_remove_row@@Base+0x24>
   14590:	lsl	r4, r6, #2
   14594:	ldr	r3, [r5, #16]
   14598:	ldr	r0, [r3, r6, lsl #2]
   1459c:	cmp	r0, #0
   145a0:	beq	145a8 <table_remove_row@@Base+0x80>
   145a4:	bl	11b98 <free@plt>
   145a8:	sub	r3, r7, #1
   145ac:	cmp	r6, r3
   145b0:	bge	145dc <table_remove_row@@Base+0xb4>
   145b4:	mov	ip, r3
   145b8:	mov	r3, r6
   145bc:	ldr	r1, [r5, #16]
   145c0:	add	r2, r4, #4
   145c4:	ldr	r0, [r1, r2]
   145c8:	str	r0, [r1, r4]
   145cc:	add	r3, r3, #1
   145d0:	mov	r4, r2
   145d4:	cmp	ip, r3
   145d8:	bne	145bc <table_remove_row@@Base+0x94>
   145dc:	ldr	r0, [r5, #20]
   145e0:	sub	r0, r0, #1
   145e4:	str	r0, [r5, #20]
   145e8:	ldr	r4, [r5, #24]
   145ec:	mov	r1, r4
   145f0:	bl	15678 <table_column_sort@@Base+0x434>
   145f4:	cmp	r1, #0
   145f8:	beq	14618 <table_remove_row@@Base+0xf0>
   145fc:	mov	r3, #4
   14600:	mvn	r2, #0
   14604:	mov	r1, r6
   14608:	mov	r0, r5
   1460c:	bl	12a34 <table_notify@@Base>
   14610:	mov	r0, #0
   14614:	pop	{r4, r5, r6, r7, r8, pc}
   14618:	ldr	r1, [r5, #28]
   1461c:	sub	r1, r1, r4
   14620:	str	r1, [r5, #28]
   14624:	lsl	r1, r1, #2
   14628:	ldr	r0, [r5, #16]
   1462c:	bl	11bb0 <realloc@plt>
   14630:	str	r0, [r5, #16]
   14634:	b	145fc <table_remove_row@@Base+0xd4>

00014638 <table_get_row_ptr@@Base>:
   14638:	ldr	r0, [r0, #16]
   1463c:	add	r0, r0, r1, lsl #2
   14640:	bx	lr

00014644 <table_set_row_ptr@@Base>:
   14644:	ldr	r3, [r0, #16]
   14648:	ldr	r2, [r2]
   1464c:	str	r2, [r3, r1, lsl #2]
   14650:	bx	lr

00014654 <table_set@@Base>:
   14654:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14658:	mov	r5, r0
   1465c:	mov	r9, r1
   14660:	mov	r6, r2
   14664:	mov	r7, r3
   14668:	ldr	r4, [sp, #32]
   1466c:	bl	13598 <table_get_cell_ptr@@Base>
   14670:	mov	r8, r0
   14674:	mov	r1, r6
   14678:	mov	r0, r5
   1467c:	bl	139c0 <table_get_col_ptr@@Base>
   14680:	cmp	r4, #23
   14684:	ldrls	pc, [pc, r4, lsl #2]
   14688:	b	14cac <table_set@@Base+0x658>
   1468c:	andeq	r4, r1, r8, lsr #14
   14690:	andeq	r4, r1, r4, ror #14
   14694:	andeq	r4, r1, r0, lsr #15
   14698:	ldrdeq	r4, [r1], -ip
   1469c:	andeq	r4, r1, r8, lsl r8
   146a0:	andeq	r4, r1, r4, asr r8
   146a4:	muleq	r1, r0, r8
   146a8:	andeq	r4, r1, ip, asr #17
   146ac:	andeq	r4, r1, r8, lsl #18
   146b0:	andeq	r4, r1, r0, asr r9
   146b4:	muleq	r1, r4, r9
   146b8:	ldrdeq	r4, [r1], -r0
   146bc:	andeq	r4, r1, ip, lsl #20
   146c0:	andeq	r4, r1, r8, asr #20
   146c4:	andeq	r4, r1, r4, lsl #21
   146c8:	andeq	r4, r1, r8, asr #21
   146cc:	andeq	r4, r1, ip, lsl #22
   146d0:	andeq	r4, r1, r8, asr #22
   146d4:	andeq	r4, r1, ip, lsl #23
   146d8:	andeq	r4, r1, r8, lsl #24
   146dc:	andeq	r4, r1, r4, asr #24
   146e0:	ldrdeq	r4, [r1], -r0
   146e4:	andeq	r4, r1, ip, ror #13
   146e8:	andeq	r4, r1, r0, lsl #25
   146ec:	ldr	r3, [r0, #4]
   146f0:	cmp	r3, #22
   146f4:	bne	14948 <table_set@@Base+0x2f4>
   146f8:	ldr	r0, [r8]
   146fc:	cmp	r0, #0
   14700:	beq	14710 <table_set@@Base+0xbc>
   14704:	ldrb	r3, [r7]
   14708:	strb	r3, [r0]
   1470c:	b	14c90 <table_set@@Base+0x63c>
   14710:	mov	r0, #1
   14714:	bl	11bd4 <malloc@plt>
   14718:	str	r0, [r8]
   1471c:	cmp	r0, #0
   14720:	bne	14704 <table_set@@Base+0xb0>
   14724:	b	14948 <table_set@@Base+0x2f4>
   14728:	ldr	r3, [r0, #4]
   1472c:	cmp	r3, #0
   14730:	bne	14948 <table_set@@Base+0x2f4>
   14734:	ldr	r0, [r8]
   14738:	cmp	r0, #0
   1473c:	beq	1474c <table_set@@Base+0xf8>
   14740:	ldr	r3, [r7]
   14744:	str	r3, [r0]
   14748:	b	14c90 <table_set@@Base+0x63c>
   1474c:	mov	r0, #4
   14750:	bl	11bd4 <malloc@plt>
   14754:	str	r0, [r8]
   14758:	cmp	r0, #0
   1475c:	bne	14740 <table_set@@Base+0xec>
   14760:	b	14948 <table_set@@Base+0x2f4>
   14764:	ldr	r3, [r0, #4]
   14768:	cmp	r3, #1
   1476c:	bne	14948 <table_set@@Base+0x2f4>
   14770:	ldr	r0, [r8]
   14774:	cmp	r0, #0
   14778:	beq	14788 <table_set@@Base+0x134>
   1477c:	ldr	r3, [r7]
   14780:	str	r3, [r0]
   14784:	b	14c90 <table_set@@Base+0x63c>
   14788:	mov	r0, #4
   1478c:	bl	11bd4 <malloc@plt>
   14790:	str	r0, [r8]
   14794:	cmp	r0, #0
   14798:	bne	1477c <table_set@@Base+0x128>
   1479c:	b	14948 <table_set@@Base+0x2f4>
   147a0:	ldr	r3, [r0, #4]
   147a4:	cmp	r3, #2
   147a8:	bne	14948 <table_set@@Base+0x2f4>
   147ac:	ldr	r0, [r8]
   147b0:	cmp	r0, #0
   147b4:	beq	147c4 <table_set@@Base+0x170>
   147b8:	ldrb	r3, [r7]
   147bc:	strb	r3, [r0]
   147c0:	b	14c90 <table_set@@Base+0x63c>
   147c4:	mov	r0, #1
   147c8:	bl	11bd4 <malloc@plt>
   147cc:	str	r0, [r8]
   147d0:	cmp	r0, #0
   147d4:	bne	147b8 <table_set@@Base+0x164>
   147d8:	b	14948 <table_set@@Base+0x2f4>
   147dc:	ldr	r3, [r0, #4]
   147e0:	cmp	r3, #3
   147e4:	bne	14948 <table_set@@Base+0x2f4>
   147e8:	ldr	r0, [r8]
   147ec:	cmp	r0, #0
   147f0:	beq	14800 <table_set@@Base+0x1ac>
   147f4:	ldrb	r3, [r7]
   147f8:	strb	r3, [r0]
   147fc:	b	14c90 <table_set@@Base+0x63c>
   14800:	mov	r0, #1
   14804:	bl	11bd4 <malloc@plt>
   14808:	str	r0, [r8]
   1480c:	cmp	r0, #0
   14810:	bne	147f4 <table_set@@Base+0x1a0>
   14814:	b	14948 <table_set@@Base+0x2f4>
   14818:	ldr	r3, [r0, #4]
   1481c:	cmp	r3, #4
   14820:	bne	14948 <table_set@@Base+0x2f4>
   14824:	ldr	r0, [r8]
   14828:	cmp	r0, #0
   1482c:	beq	1483c <table_set@@Base+0x1e8>
   14830:	ldrh	r3, [r7]
   14834:	strh	r3, [r0]
   14838:	b	14c90 <table_set@@Base+0x63c>
   1483c:	mov	r0, #2
   14840:	bl	11bd4 <malloc@plt>
   14844:	str	r0, [r8]
   14848:	cmp	r0, #0
   1484c:	bne	14830 <table_set@@Base+0x1dc>
   14850:	b	14948 <table_set@@Base+0x2f4>
   14854:	ldr	r3, [r0, #4]
   14858:	cmp	r3, #5
   1485c:	bne	14948 <table_set@@Base+0x2f4>
   14860:	ldr	r0, [r8]
   14864:	cmp	r0, #0
   14868:	beq	14878 <table_set@@Base+0x224>
   1486c:	ldrh	r3, [r7]
   14870:	strh	r3, [r0]
   14874:	b	14c90 <table_set@@Base+0x63c>
   14878:	mov	r0, #2
   1487c:	bl	11bd4 <malloc@plt>
   14880:	str	r0, [r8]
   14884:	cmp	r0, #0
   14888:	bne	1486c <table_set@@Base+0x218>
   1488c:	b	14948 <table_set@@Base+0x2f4>
   14890:	ldr	r3, [r0, #4]
   14894:	cmp	r3, #6
   14898:	bne	14948 <table_set@@Base+0x2f4>
   1489c:	ldr	r0, [r8]
   148a0:	cmp	r0, #0
   148a4:	beq	148b4 <table_set@@Base+0x260>
   148a8:	ldr	r3, [r7]
   148ac:	str	r3, [r0]
   148b0:	b	14c90 <table_set@@Base+0x63c>
   148b4:	mov	r0, #4
   148b8:	bl	11bd4 <malloc@plt>
   148bc:	str	r0, [r8]
   148c0:	cmp	r0, #0
   148c4:	bne	148a8 <table_set@@Base+0x254>
   148c8:	b	14948 <table_set@@Base+0x2f4>
   148cc:	ldr	r3, [r0, #4]
   148d0:	cmp	r3, #7
   148d4:	bne	14948 <table_set@@Base+0x2f4>
   148d8:	ldr	r0, [r8]
   148dc:	cmp	r0, #0
   148e0:	beq	148f0 <table_set@@Base+0x29c>
   148e4:	ldr	r3, [r7]
   148e8:	str	r3, [r0]
   148ec:	b	14c90 <table_set@@Base+0x63c>
   148f0:	mov	r0, #4
   148f4:	bl	11bd4 <malloc@plt>
   148f8:	str	r0, [r8]
   148fc:	cmp	r0, #0
   14900:	bne	148e4 <table_set@@Base+0x290>
   14904:	b	14948 <table_set@@Base+0x2f4>
   14908:	ldr	r3, [r0, #4]
   1490c:	cmp	r3, #8
   14910:	bne	14948 <table_set@@Base+0x2f4>
   14914:	ldr	r0, [r8]
   14918:	cmp	r0, #0
   1491c:	beq	14934 <table_set@@Base+0x2e0>
   14920:	ldr	r2, [r7]
   14924:	ldr	r3, [r7, #4]
   14928:	str	r2, [r0]
   1492c:	str	r3, [r0, #4]
   14930:	b	14c90 <table_set@@Base+0x63c>
   14934:	mov	r0, #8
   14938:	bl	11bd4 <malloc@plt>
   1493c:	str	r0, [r8]
   14940:	cmp	r0, #0
   14944:	bne	14920 <table_set@@Base+0x2cc>
   14948:	mvn	r0, #0
   1494c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14950:	ldr	r3, [r0, #4]
   14954:	cmp	r3, #9
   14958:	bne	14948 <table_set@@Base+0x2f4>
   1495c:	ldr	r0, [r8]
   14960:	cmp	r0, #0
   14964:	beq	1497c <table_set@@Base+0x328>
   14968:	ldr	r2, [r7]
   1496c:	ldr	r3, [r7, #4]
   14970:	str	r2, [r0]
   14974:	str	r3, [r0, #4]
   14978:	b	14c90 <table_set@@Base+0x63c>
   1497c:	mov	r0, #8
   14980:	bl	11bd4 <malloc@plt>
   14984:	str	r0, [r8]
   14988:	cmp	r0, #0
   1498c:	bne	14968 <table_set@@Base+0x314>
   14990:	b	14948 <table_set@@Base+0x2f4>
   14994:	ldr	r3, [r0, #4]
   14998:	cmp	r3, #10
   1499c:	bne	14948 <table_set@@Base+0x2f4>
   149a0:	ldr	r0, [r8]
   149a4:	cmp	r0, #0
   149a8:	beq	149b8 <table_set@@Base+0x364>
   149ac:	ldrh	r3, [r7]
   149b0:	strh	r3, [r0]
   149b4:	b	14c90 <table_set@@Base+0x63c>
   149b8:	mov	r0, #2
   149bc:	bl	11bd4 <malloc@plt>
   149c0:	str	r0, [r8]
   149c4:	cmp	r0, #0
   149c8:	bne	149ac <table_set@@Base+0x358>
   149cc:	b	14948 <table_set@@Base+0x2f4>
   149d0:	ldr	r3, [r0, #4]
   149d4:	cmp	r3, #11
   149d8:	bne	14948 <table_set@@Base+0x2f4>
   149dc:	ldr	r0, [r8]
   149e0:	cmp	r0, #0
   149e4:	beq	149f4 <table_set@@Base+0x3a0>
   149e8:	ldrh	r3, [r7]
   149ec:	strh	r3, [r0]
   149f0:	b	14c90 <table_set@@Base+0x63c>
   149f4:	mov	r0, #2
   149f8:	bl	11bd4 <malloc@plt>
   149fc:	str	r0, [r8]
   14a00:	cmp	r0, #0
   14a04:	bne	149e8 <table_set@@Base+0x394>
   14a08:	b	14948 <table_set@@Base+0x2f4>
   14a0c:	ldr	r3, [r0, #4]
   14a10:	cmp	r3, #12
   14a14:	bne	14948 <table_set@@Base+0x2f4>
   14a18:	ldr	r0, [r8]
   14a1c:	cmp	r0, #0
   14a20:	beq	14a30 <table_set@@Base+0x3dc>
   14a24:	ldr	r3, [r7]
   14a28:	str	r3, [r0]
   14a2c:	b	14c90 <table_set@@Base+0x63c>
   14a30:	mov	r0, #4
   14a34:	bl	11bd4 <malloc@plt>
   14a38:	str	r0, [r8]
   14a3c:	cmp	r0, #0
   14a40:	bne	14a24 <table_set@@Base+0x3d0>
   14a44:	b	14948 <table_set@@Base+0x2f4>
   14a48:	ldr	r3, [r0, #4]
   14a4c:	cmp	r3, #13
   14a50:	bne	14948 <table_set@@Base+0x2f4>
   14a54:	ldr	r0, [r8]
   14a58:	cmp	r0, #0
   14a5c:	beq	14a6c <table_set@@Base+0x418>
   14a60:	ldr	r3, [r7]
   14a64:	str	r3, [r0]
   14a68:	b	14c90 <table_set@@Base+0x63c>
   14a6c:	mov	r0, #4
   14a70:	bl	11bd4 <malloc@plt>
   14a74:	str	r0, [r8]
   14a78:	cmp	r0, #0
   14a7c:	bne	14a60 <table_set@@Base+0x40c>
   14a80:	b	14948 <table_set@@Base+0x2f4>
   14a84:	ldr	r3, [r0, #4]
   14a88:	cmp	r3, #14
   14a8c:	bne	14948 <table_set@@Base+0x2f4>
   14a90:	ldr	r0, [r8]
   14a94:	cmp	r0, #0
   14a98:	beq	14ab0 <table_set@@Base+0x45c>
   14a9c:	ldr	r2, [r7]
   14aa0:	ldr	r3, [r7, #4]
   14aa4:	str	r2, [r0]
   14aa8:	str	r3, [r0, #4]
   14aac:	b	14c90 <table_set@@Base+0x63c>
   14ab0:	mov	r0, #8
   14ab4:	bl	11bd4 <malloc@plt>
   14ab8:	str	r0, [r8]
   14abc:	cmp	r0, #0
   14ac0:	bne	14a9c <table_set@@Base+0x448>
   14ac4:	b	14948 <table_set@@Base+0x2f4>
   14ac8:	ldr	r3, [r0, #4]
   14acc:	cmp	r3, #15
   14ad0:	bne	14948 <table_set@@Base+0x2f4>
   14ad4:	ldr	r0, [r8]
   14ad8:	cmp	r0, #0
   14adc:	beq	14af4 <table_set@@Base+0x4a0>
   14ae0:	ldr	r2, [r7]
   14ae4:	ldr	r3, [r7, #4]
   14ae8:	str	r2, [r0]
   14aec:	str	r3, [r0, #4]
   14af0:	b	14c90 <table_set@@Base+0x63c>
   14af4:	mov	r0, #8
   14af8:	bl	11bd4 <malloc@plt>
   14afc:	str	r0, [r8]
   14b00:	cmp	r0, #0
   14b04:	bne	14ae0 <table_set@@Base+0x48c>
   14b08:	b	14948 <table_set@@Base+0x2f4>
   14b0c:	ldr	r3, [r0, #4]
   14b10:	cmp	r3, #16
   14b14:	bne	14948 <table_set@@Base+0x2f4>
   14b18:	ldr	r0, [r8]
   14b1c:	cmp	r0, #0
   14b20:	beq	14b30 <table_set@@Base+0x4dc>
   14b24:	ldr	r3, [r7]
   14b28:	str	r3, [r0]
   14b2c:	b	14c90 <table_set@@Base+0x63c>
   14b30:	mov	r0, #4
   14b34:	bl	11bd4 <malloc@plt>
   14b38:	str	r0, [r8]
   14b3c:	cmp	r0, #0
   14b40:	bne	14b24 <table_set@@Base+0x4d0>
   14b44:	b	14948 <table_set@@Base+0x2f4>
   14b48:	ldr	r3, [r0, #4]
   14b4c:	cmp	r3, #17
   14b50:	bne	14948 <table_set@@Base+0x2f4>
   14b54:	ldr	r0, [r8]
   14b58:	cmp	r0, #0
   14b5c:	beq	14b74 <table_set@@Base+0x520>
   14b60:	ldr	r2, [r7]
   14b64:	ldr	r3, [r7, #4]
   14b68:	str	r2, [r0]
   14b6c:	str	r3, [r0, #4]
   14b70:	b	14c90 <table_set@@Base+0x63c>
   14b74:	mov	r0, #8
   14b78:	bl	11bd4 <malloc@plt>
   14b7c:	str	r0, [r8]
   14b80:	cmp	r0, #0
   14b84:	bne	14b60 <table_set@@Base+0x50c>
   14b88:	b	14948 <table_set@@Base+0x2f4>
   14b8c:	ldr	r3, [r0, #4]
   14b90:	cmp	r3, #18
   14b94:	bne	14948 <table_set@@Base+0x2f4>
   14b98:	ldr	r0, [r8]
   14b9c:	cmp	r0, #0
   14ba0:	beq	14bb8 <table_set@@Base+0x564>
   14ba4:	ldr	r2, [r7]
   14ba8:	ldr	r3, [r7, #4]
   14bac:	str	r2, [r0]
   14bb0:	str	r3, [r0, #4]
   14bb4:	b	14c90 <table_set@@Base+0x63c>
   14bb8:	mov	r0, #8
   14bbc:	bl	11bd4 <malloc@plt>
   14bc0:	str	r0, [r8]
   14bc4:	cmp	r0, #0
   14bc8:	bne	14ba4 <table_set@@Base+0x550>
   14bcc:	b	14948 <table_set@@Base+0x2f4>
   14bd0:	ldr	r3, [r0, #4]
   14bd4:	cmp	r3, #21
   14bd8:	bne	14948 <table_set@@Base+0x2f4>
   14bdc:	mov	r0, r7
   14be0:	bl	11bf8 <strlen@plt>
   14be4:	add	r1, r0, #1
   14be8:	ldr	r0, [r8]
   14bec:	bl	11bb0 <realloc@plt>
   14bf0:	str	r0, [r8]
   14bf4:	cmp	r0, #0
   14bf8:	beq	14948 <table_set@@Base+0x2f4>
   14bfc:	mov	r1, r7
   14c00:	bl	11bbc <strcpy@plt>
   14c04:	b	14c90 <table_set@@Base+0x63c>
   14c08:	ldr	r3, [r0, #4]
   14c0c:	cmp	r3, #19
   14c10:	bne	14948 <table_set@@Base+0x2f4>
   14c14:	ldr	r0, [r8]
   14c18:	cmp	r0, #0
   14c1c:	beq	14c2c <table_set@@Base+0x5d8>
   14c20:	ldrb	r3, [r7]
   14c24:	strb	r3, [r0]
   14c28:	b	14c90 <table_set@@Base+0x63c>
   14c2c:	mov	r0, #1
   14c30:	bl	11bd4 <malloc@plt>
   14c34:	str	r0, [r8]
   14c38:	cmp	r0, #0
   14c3c:	bne	14c20 <table_set@@Base+0x5cc>
   14c40:	b	14948 <table_set@@Base+0x2f4>
   14c44:	ldr	r3, [r0, #4]
   14c48:	cmp	r3, #20
   14c4c:	bne	14948 <table_set@@Base+0x2f4>
   14c50:	ldr	r0, [r8]
   14c54:	cmp	r0, #0
   14c58:	beq	14c68 <table_set@@Base+0x614>
   14c5c:	ldrb	r3, [r7]
   14c60:	strb	r3, [r0]
   14c64:	b	14c90 <table_set@@Base+0x63c>
   14c68:	mov	r0, #1
   14c6c:	bl	11bd4 <malloc@plt>
   14c70:	str	r0, [r8]
   14c74:	cmp	r0, #0
   14c78:	bne	14c5c <table_set@@Base+0x608>
   14c7c:	b	14948 <table_set@@Base+0x2f4>
   14c80:	ldr	r3, [r0, #4]
   14c84:	cmp	r3, #23
   14c88:	bne	14948 <table_set@@Base+0x2f4>
   14c8c:	str	r7, [r8]
   14c90:	mov	r3, #1
   14c94:	mov	r2, r6
   14c98:	mov	r1, r9
   14c9c:	mov	r0, r5
   14ca0:	bl	12a34 <table_notify@@Base>
   14ca4:	mov	r0, #0
   14ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cac:	mvn	r0, #0
   14cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014cb4 <table_set_bool@@Base>:
   14cb4:	push	{lr}		; (str lr, [sp, #-4]!)
   14cb8:	sub	sp, sp, #20
   14cbc:	add	ip, sp, #16
   14cc0:	strb	r3, [ip, #-1]!
   14cc4:	mov	r3, #22
   14cc8:	str	r3, [sp]
   14ccc:	mov	r3, ip
   14cd0:	bl	14654 <table_set@@Base>
   14cd4:	add	sp, sp, #20
   14cd8:	pop	{pc}		; (ldr pc, [sp], #4)

00014cdc <table_set_int@@Base>:
   14cdc:	push	{lr}		; (str lr, [sp, #-4]!)
   14ce0:	sub	sp, sp, #20
   14ce4:	add	ip, sp, #16
   14ce8:	str	r3, [ip, #-4]!
   14cec:	mov	r3, #0
   14cf0:	str	r3, [sp]
   14cf4:	mov	r3, ip
   14cf8:	bl	14654 <table_set@@Base>
   14cfc:	add	sp, sp, #20
   14d00:	pop	{pc}		; (ldr pc, [sp], #4)

00014d04 <table_set_uint@@Base>:
   14d04:	push	{lr}		; (str lr, [sp, #-4]!)
   14d08:	sub	sp, sp, #20
   14d0c:	add	ip, sp, #16
   14d10:	str	r3, [ip, #-4]!
   14d14:	mov	r3, #1
   14d18:	str	r3, [sp]
   14d1c:	mov	r3, ip
   14d20:	bl	14654 <table_set@@Base>
   14d24:	add	sp, sp, #20
   14d28:	pop	{pc}		; (ldr pc, [sp], #4)

00014d2c <table_set_int8@@Base>:
   14d2c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d30:	sub	sp, sp, #20
   14d34:	add	ip, sp, #16
   14d38:	strb	r3, [ip, #-1]!
   14d3c:	mov	r3, #2
   14d40:	str	r3, [sp]
   14d44:	mov	r3, ip
   14d48:	bl	14654 <table_set@@Base>
   14d4c:	add	sp, sp, #20
   14d50:	pop	{pc}		; (ldr pc, [sp], #4)

00014d54 <table_set_uint8@@Base>:
   14d54:	push	{lr}		; (str lr, [sp, #-4]!)
   14d58:	sub	sp, sp, #20
   14d5c:	add	ip, sp, #16
   14d60:	strb	r3, [ip, #-1]!
   14d64:	mov	r3, #3
   14d68:	str	r3, [sp]
   14d6c:	mov	r3, ip
   14d70:	bl	14654 <table_set@@Base>
   14d74:	add	sp, sp, #20
   14d78:	pop	{pc}		; (ldr pc, [sp], #4)

00014d7c <table_set_int16@@Base>:
   14d7c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d80:	sub	sp, sp, #20
   14d84:	add	ip, sp, #16
   14d88:	strh	r3, [ip, #-2]!
   14d8c:	mov	r3, #4
   14d90:	str	r3, [sp]
   14d94:	mov	r3, ip
   14d98:	bl	14654 <table_set@@Base>
   14d9c:	add	sp, sp, #20
   14da0:	pop	{pc}		; (ldr pc, [sp], #4)

00014da4 <table_set_uint16@@Base>:
   14da4:	push	{lr}		; (str lr, [sp, #-4]!)
   14da8:	sub	sp, sp, #20
   14dac:	add	ip, sp, #16
   14db0:	strh	r3, [ip, #-2]!
   14db4:	mov	r3, #5
   14db8:	str	r3, [sp]
   14dbc:	mov	r3, ip
   14dc0:	bl	14654 <table_set@@Base>
   14dc4:	add	sp, sp, #20
   14dc8:	pop	{pc}		; (ldr pc, [sp], #4)

00014dcc <table_set_int32@@Base>:
   14dcc:	push	{lr}		; (str lr, [sp, #-4]!)
   14dd0:	sub	sp, sp, #20
   14dd4:	add	ip, sp, #16
   14dd8:	str	r3, [ip, #-4]!
   14ddc:	mov	r3, #6
   14de0:	str	r3, [sp]
   14de4:	mov	r3, ip
   14de8:	bl	14654 <table_set@@Base>
   14dec:	add	sp, sp, #20
   14df0:	pop	{pc}		; (ldr pc, [sp], #4)

00014df4 <table_set_uint32@@Base>:
   14df4:	push	{lr}		; (str lr, [sp, #-4]!)
   14df8:	sub	sp, sp, #20
   14dfc:	add	ip, sp, #16
   14e00:	str	r3, [ip, #-4]!
   14e04:	mov	r3, #7
   14e08:	str	r3, [sp]
   14e0c:	mov	r3, ip
   14e10:	bl	14654 <table_set@@Base>
   14e14:	add	sp, sp, #20
   14e18:	pop	{pc}		; (ldr pc, [sp], #4)

00014e1c <table_set_int64@@Base>:
   14e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e20:	sub	sp, sp, #12
   14e24:	mov	r3, #8
   14e28:	str	r3, [sp]
   14e2c:	add	r3, sp, #16
   14e30:	bl	14654 <table_set@@Base>
   14e34:	add	sp, sp, #12
   14e38:	pop	{pc}		; (ldr pc, [sp], #4)

00014e3c <table_set_uint64@@Base>:
   14e3c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e40:	sub	sp, sp, #12
   14e44:	mov	r3, #9
   14e48:	str	r3, [sp]
   14e4c:	add	r3, sp, #16
   14e50:	bl	14654 <table_set@@Base>
   14e54:	add	sp, sp, #12
   14e58:	pop	{pc}		; (ldr pc, [sp], #4)

00014e5c <table_set_short@@Base>:
   14e5c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e60:	sub	sp, sp, #20
   14e64:	add	ip, sp, #16
   14e68:	strh	r3, [ip, #-2]!
   14e6c:	mov	r3, #10
   14e70:	str	r3, [sp]
   14e74:	mov	r3, ip
   14e78:	bl	14654 <table_set@@Base>
   14e7c:	add	sp, sp, #20
   14e80:	pop	{pc}		; (ldr pc, [sp], #4)

00014e84 <table_set_ushort@@Base>:
   14e84:	push	{lr}		; (str lr, [sp, #-4]!)
   14e88:	sub	sp, sp, #20
   14e8c:	add	ip, sp, #16
   14e90:	strh	r3, [ip, #-2]!
   14e94:	mov	r3, #11
   14e98:	str	r3, [sp]
   14e9c:	mov	r3, ip
   14ea0:	bl	14654 <table_set@@Base>
   14ea4:	add	sp, sp, #20
   14ea8:	pop	{pc}		; (ldr pc, [sp], #4)

00014eac <table_set_long@@Base>:
   14eac:	push	{lr}		; (str lr, [sp, #-4]!)
   14eb0:	sub	sp, sp, #20
   14eb4:	add	ip, sp, #16
   14eb8:	str	r3, [ip, #-4]!
   14ebc:	mov	r3, #12
   14ec0:	str	r3, [sp]
   14ec4:	mov	r3, ip
   14ec8:	bl	14654 <table_set@@Base>
   14ecc:	add	sp, sp, #20
   14ed0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ed4 <table_set_ulong@@Base>:
   14ed4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ed8:	sub	sp, sp, #20
   14edc:	add	ip, sp, #16
   14ee0:	str	r3, [ip, #-4]!
   14ee4:	mov	r3, #13
   14ee8:	str	r3, [sp]
   14eec:	mov	r3, ip
   14ef0:	bl	14654 <table_set@@Base>
   14ef4:	add	sp, sp, #20
   14ef8:	pop	{pc}		; (ldr pc, [sp], #4)

00014efc <table_set_llong@@Base>:
   14efc:	push	{lr}		; (str lr, [sp, #-4]!)
   14f00:	sub	sp, sp, #12
   14f04:	mov	r3, #14
   14f08:	str	r3, [sp]
   14f0c:	add	r3, sp, #16
   14f10:	bl	14654 <table_set@@Base>
   14f14:	add	sp, sp, #12
   14f18:	pop	{pc}		; (ldr pc, [sp], #4)

00014f1c <table_set_ullong@@Base>:
   14f1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14f20:	sub	sp, sp, #12
   14f24:	mov	r3, #15
   14f28:	str	r3, [sp]
   14f2c:	add	r3, sp, #16
   14f30:	bl	14654 <table_set@@Base>
   14f34:	add	sp, sp, #12
   14f38:	pop	{pc}		; (ldr pc, [sp], #4)

00014f3c <table_set_float@@Base>:
   14f3c:	push	{lr}		; (str lr, [sp, #-4]!)
   14f40:	sub	sp, sp, #20
   14f44:	add	r3, sp, #16
   14f48:	vstmdb	r3!, {s0}
   14f4c:	mov	ip, #16
   14f50:	str	ip, [sp]
   14f54:	bl	14654 <table_set@@Base>
   14f58:	add	sp, sp, #20
   14f5c:	pop	{pc}		; (ldr pc, [sp], #4)

00014f60 <table_set_double@@Base>:
   14f60:	push	{lr}		; (str lr, [sp, #-4]!)
   14f64:	sub	sp, sp, #20
   14f68:	add	r3, sp, #16
   14f6c:	vstmdb	r3!, {d0}
   14f70:	mov	ip, #17
   14f74:	str	ip, [sp]
   14f78:	bl	14654 <table_set@@Base>
   14f7c:	add	sp, sp, #20
   14f80:	pop	{pc}		; (ldr pc, [sp], #4)

00014f84 <table_set_ldouble@@Base>:
   14f84:	push	{lr}		; (str lr, [sp, #-4]!)
   14f88:	sub	sp, sp, #20
   14f8c:	add	r3, sp, #16
   14f90:	vstmdb	r3!, {d0}
   14f94:	mov	ip, #18
   14f98:	str	ip, [sp]
   14f9c:	bl	14654 <table_set@@Base>
   14fa0:	add	sp, sp, #20
   14fa4:	pop	{pc}		; (ldr pc, [sp], #4)

00014fa8 <table_set_string@@Base>:
   14fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   14fac:	sub	sp, sp, #12
   14fb0:	mov	ip, #21
   14fb4:	str	ip, [sp]
   14fb8:	bl	14654 <table_set@@Base>
   14fbc:	add	sp, sp, #12
   14fc0:	pop	{pc}		; (ldr pc, [sp], #4)

00014fc4 <table_set_char@@Base>:
   14fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   14fc8:	sub	sp, sp, #20
   14fcc:	add	ip, sp, #16
   14fd0:	strb	r3, [ip, #-1]!
   14fd4:	mov	r3, #19
   14fd8:	str	r3, [sp]
   14fdc:	mov	r3, ip
   14fe0:	bl	14654 <table_set@@Base>
   14fe4:	add	sp, sp, #20
   14fe8:	pop	{pc}		; (ldr pc, [sp], #4)

00014fec <table_set_uchar@@Base>:
   14fec:	push	{lr}		; (str lr, [sp, #-4]!)
   14ff0:	sub	sp, sp, #20
   14ff4:	add	ip, sp, #16
   14ff8:	strb	r3, [ip, #-1]!
   14ffc:	mov	r3, #20
   15000:	str	r3, [sp]
   15004:	mov	r3, ip
   15008:	bl	14654 <table_set@@Base>
   1500c:	add	sp, sp, #20
   15010:	pop	{pc}		; (ldr pc, [sp], #4)

00015014 <table_set_ptr@@Base>:
   15014:	push	{lr}		; (str lr, [sp, #-4]!)
   15018:	sub	sp, sp, #12
   1501c:	mov	ip, #23
   15020:	str	ip, [sp]
   15024:	bl	14654 <table_set@@Base>
   15028:	add	sp, sp, #12
   1502c:	pop	{pc}		; (ldr pc, [sp], #4)
   15030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15034:	sub	sp, sp, #44	; 0x2c
   15038:	ldr	fp, [sp, #84]	; 0x54
   1503c:	ldr	ip, [sp, #80]	; 0x50
   15040:	sub	ip, ip, r3
   15044:	str	ip, [sp, #32]
   15048:	add	r5, ip, #1
   1504c:	cmp	r5, #1
   15050:	ble	1523c <table_set_ptr@@Base+0x228>
   15054:	mov	r6, ip
   15058:	mov	r7, r2
   1505c:	str	r2, [sp, #16]
   15060:	mov	r4, r1
   15064:	mov	sl, r0
   15068:	str	r0, [sp, #12]
   1506c:	ldr	r1, [sp, #80]	; 0x50
   15070:	add	r9, r1, r3
   15074:	add	r9, r9, r9, lsr #31
   15078:	asr	r9, r9, #1
   1507c:	str	fp, [sp, #4]
   15080:	str	r9, [sp]
   15084:	str	r3, [sp, #28]
   15088:	mov	r1, r4
   1508c:	bl	15030 <table_set_ptr@@Base+0x1c>
   15090:	add	r8, r9, #1
   15094:	str	fp, [sp, #4]
   15098:	ldr	r2, [sp, #80]	; 0x50
   1509c:	str	r2, [sp]
   150a0:	mov	r3, r8
   150a4:	mov	r2, r7
   150a8:	mov	r1, r4
   150ac:	mov	r0, sl
   150b0:	bl	15030 <table_set_ptr@@Base+0x1c>
   150b4:	mov	r1, r7
   150b8:	mov	r0, sl
   150bc:	bl	139d0 <table_get_column_compare_function@@Base>
   150c0:	str	r0, [sp, #20]
   150c4:	cmp	r5, #0
   150c8:	ble	1523c <table_set_ptr@@Base+0x228>
   150cc:	add	sl, r6, #1
   150d0:	ldr	r7, [sp, #28]
   150d4:	mov	r6, #0
   150d8:	str	r4, [sp, #36]	; 0x24
   150dc:	ldr	r5, [sp, #80]	; 0x50
   150e0:	b	15174 <table_set_ptr@@Base+0x160>
   150e4:	mov	r1, r7
   150e8:	ldr	r0, [sp, #12]
   150ec:	bl	14638 <table_get_row_ptr@@Base>
   150f0:	ldr	r3, [r0]
   150f4:	str	r3, [r4]
   150f8:	add	r7, r7, #1
   150fc:	b	15164 <table_set_ptr@@Base+0x150>
   15100:	cmp	r9, r7
   15104:	blt	151e4 <table_set_ptr@@Base+0x1d0>
   15108:	cmp	r5, r8
   1510c:	blt	1514c <table_set_ptr@@Base+0x138>
   15110:	ldr	r2, [sp, #16]
   15114:	mov	r1, r7
   15118:	ldr	r0, [sp, #12]
   1511c:	bl	14280 <table_get@@Base>
   15120:	str	r0, [sp, #24]
   15124:	ldr	r2, [sp, #16]
   15128:	mov	r1, r8
   1512c:	ldr	r0, [sp, #12]
   15130:	bl	14280 <table_get@@Base>
   15134:	mov	r1, r0
   15138:	ldr	r0, [sp, #24]
   1513c:	ldr	r3, [sp, #20]
   15140:	blx	r3
   15144:	cmp	r0, #0
   15148:	ble	151e4 <table_set_ptr@@Base+0x1d0>
   1514c:	mov	r1, r7
   15150:	ldr	r0, [sp, #12]
   15154:	bl	14638 <table_get_row_ptr@@Base>
   15158:	ldr	r3, [r0]
   1515c:	str	r3, [r4]
   15160:	add	r7, r7, #1
   15164:	add	r6, r6, #1
   15168:	add	r4, r4, #4
   1516c:	cmp	r6, sl
   15170:	beq	15200 <table_set_ptr@@Base+0x1ec>
   15174:	cmp	fp, #0
   15178:	bne	15100 <table_set_ptr@@Base+0xec>
   1517c:	cmp	r9, r7
   15180:	blt	151c8 <table_set_ptr@@Base+0x1b4>
   15184:	cmp	r5, r8
   15188:	blt	150e4 <table_set_ptr@@Base+0xd0>
   1518c:	ldr	r2, [sp, #16]
   15190:	mov	r1, r7
   15194:	ldr	r0, [sp, #12]
   15198:	bl	14280 <table_get@@Base>
   1519c:	str	r0, [sp, #24]
   151a0:	ldr	r2, [sp, #16]
   151a4:	mov	r1, r8
   151a8:	ldr	r0, [sp, #12]
   151ac:	bl	14280 <table_get@@Base>
   151b0:	mov	r1, r0
   151b4:	ldr	r0, [sp, #24]
   151b8:	ldr	r3, [sp, #20]
   151bc:	blx	r3
   151c0:	cmp	r0, #0
   151c4:	blt	150e4 <table_set_ptr@@Base+0xd0>
   151c8:	mov	r1, r8
   151cc:	ldr	r0, [sp, #12]
   151d0:	bl	14638 <table_get_row_ptr@@Base>
   151d4:	ldr	r3, [r0]
   151d8:	str	r3, [r4]
   151dc:	add	r8, r8, #1
   151e0:	b	15164 <table_set_ptr@@Base+0x150>
   151e4:	mov	r1, r8
   151e8:	ldr	r0, [sp, #12]
   151ec:	bl	14638 <table_get_row_ptr@@Base>
   151f0:	ldr	r3, [r0]
   151f4:	str	r3, [r4]
   151f8:	add	r8, r8, #1
   151fc:	b	15164 <table_set_ptr@@Base+0x150>
   15200:	ldr	r5, [sp, #36]	; 0x24
   15204:	ldr	r3, [sp, #28]
   15208:	mov	r4, r3
   1520c:	add	r6, r3, #1
   15210:	ldr	r3, [sp, #32]
   15214:	add	r6, r6, r3
   15218:	ldr	r7, [sp, #12]
   1521c:	mov	r2, r5
   15220:	mov	r1, r4
   15224:	mov	r0, r7
   15228:	bl	14644 <table_set_row_ptr@@Base>
   1522c:	add	r4, r4, #1
   15230:	add	r5, r5, #4
   15234:	cmp	r6, r4
   15238:	bne	1521c <table_set_ptr@@Base+0x208>
   1523c:	add	sp, sp, #44	; 0x2c
   15240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015244 <table_column_sort@@Base>:
   15244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15248:	sub	sp, sp, #52	; 0x34
   1524c:	mov	fp, r0
   15250:	str	r1, [sp, #44]	; 0x2c
   15254:	str	r2, [sp, #32]
   15258:	cmp	r3, #0
   1525c:	str	r3, [sp, #40]	; 0x28
   15260:	ble	15470 <table_column_sort@@Base+0x22c>
   15264:	str	r1, [sp, #12]
   15268:	mvn	r3, #0
   1526c:	str	r3, [sp, #16]
   15270:	mov	r3, #0
   15274:	str	r3, [sp, #24]
   15278:	b	152f4 <table_column_sort@@Base+0xb0>
   1527c:	ldr	r3, [sp, #44]	; 0x2c
   15280:	ldr	r5, [r3]
   15284:	ldr	r3, [sp, #32]
   15288:	ldr	r6, [r3]
   1528c:	mov	r1, #4
   15290:	mov	r7, r0
   15294:	bl	11b68 <calloc@plt>
   15298:	mov	r4, r0
   1529c:	str	r6, [sp, #4]
   152a0:	sub	r3, r7, #1
   152a4:	str	r3, [sp]
   152a8:	mov	r3, #0
   152ac:	mov	r2, r5
   152b0:	mov	r1, r0
   152b4:	mov	r0, fp
   152b8:	bl	15030 <table_set_ptr@@Base+0x1c>
   152bc:	mov	r0, r4
   152c0:	bl	11b98 <free@plt>
   152c4:	ldr	r3, [sp, #24]
   152c8:	add	r3, r3, #1
   152cc:	str	r3, [sp, #24]
   152d0:	ldr	r2, [sp, #12]
   152d4:	add	r2, r2, #4
   152d8:	str	r2, [sp, #12]
   152dc:	ldr	r2, [sp, #16]
   152e0:	add	r2, r2, #1
   152e4:	str	r2, [sp, #16]
   152e8:	ldr	r2, [sp, #40]	; 0x28
   152ec:	cmp	r2, r3
   152f0:	beq	15470 <table_column_sort@@Base+0x22c>
   152f4:	mov	r0, fp
   152f8:	bl	14478 <table_get_row_length@@Base>
   152fc:	str	r0, [sp, #20]
   15300:	ldr	r3, [sp, #24]
   15304:	cmp	r3, #0
   15308:	beq	1527c <table_column_sort@@Base+0x38>
   1530c:	ldr	r3, [sp, #12]
   15310:	str	r3, [sp, #28]
   15314:	ldr	r1, [r3, #-4]
   15318:	mov	r0, fp
   1531c:	bl	139d0 <table_get_column_compare_function@@Base>
   15320:	mov	r9, r0
   15324:	ldr	r3, [sp, #20]
   15328:	cmp	r3, #0
   1532c:	ble	152c4 <table_column_sort@@Base+0x80>
   15330:	mvn	r2, #0
   15334:	str	r2, [sp, #8]
   15338:	mov	sl, r2
   1533c:	mov	r7, #0
   15340:	add	r3, r3, r2
   15344:	str	r3, [sp, #36]	; 0x24
   15348:	b	153e0 <table_column_sort@@Base+0x19c>
   1534c:	cmn	r8, #1
   15350:	bne	15464 <table_column_sort@@Base+0x220>
   15354:	str	r7, [sp, #8]
   15358:	mov	sl, r8
   1535c:	b	153d0 <table_column_sort@@Base+0x18c>
   15360:	cmn	sl, #1
   15364:	beq	153d0 <table_column_sort@@Base+0x18c>
   15368:	ldr	r3, [sp, #8]
   1536c:	cmp	r7, r3
   15370:	beq	15450 <table_column_sort@@Base+0x20c>
   15374:	ldr	r3, [sp, #28]
   15378:	ldr	r5, [r3]
   1537c:	ldr	r3, [sp, #32]
   15380:	ldr	r2, [sp, #24]
   15384:	ldr	r6, [r3, r2, lsl #2]
   15388:	ldr	r8, [sp, #8]
   1538c:	sub	r0, r8, sl
   15390:	mov	r1, #4
   15394:	add	r0, r0, #1
   15398:	bl	11b68 <calloc@plt>
   1539c:	mov	r4, r0
   153a0:	str	r6, [sp, #4]
   153a4:	str	r8, [sp]
   153a8:	mov	r3, sl
   153ac:	mov	r2, r5
   153b0:	mov	r1, r0
   153b4:	mov	r0, fp
   153b8:	bl	15030 <table_set_ptr@@Base+0x1c>
   153bc:	mov	r0, r4
   153c0:	bl	11b98 <free@plt>
   153c4:	mvn	r3, #0
   153c8:	str	r3, [sp, #8]
   153cc:	mov	sl, r3
   153d0:	add	r7, r7, #1
   153d4:	ldr	r3, [sp, #20]
   153d8:	cmp	r3, r7
   153dc:	beq	152c4 <table_column_sort@@Base+0x80>
   153e0:	cmp	r7, #0
   153e4:	beq	15360 <table_column_sort@@Base+0x11c>
   153e8:	ldr	r3, [sp, #16]
   153ec:	mov	r5, r3
   153f0:	cmp	r3, #0
   153f4:	blt	15360 <table_column_sort@@Base+0x11c>
   153f8:	ldr	r4, [sp, #12]
   153fc:	sub	r8, r7, #1
   15400:	ldr	r2, [r4, #-4]
   15404:	mov	r1, r7
   15408:	mov	r0, fp
   1540c:	bl	14280 <table_get@@Base>
   15410:	mov	r6, r0
   15414:	ldr	r2, [r4, #-4]!
   15418:	mov	r1, r8
   1541c:	mov	r0, fp
   15420:	bl	14280 <table_get@@Base>
   15424:	mov	r1, r0
   15428:	mov	r0, r6
   1542c:	blx	r9
   15430:	cmp	r0, #0
   15434:	bne	15360 <table_column_sort@@Base+0x11c>
   15438:	sub	r5, r5, #1
   1543c:	cmn	r5, #1
   15440:	bne	15400 <table_column_sort@@Base+0x1bc>
   15444:	cmn	sl, #1
   15448:	strne	r7, [sp, #8]
   1544c:	beq	1534c <table_column_sort@@Base+0x108>
   15450:	ldr	r3, [sp, #36]	; 0x24
   15454:	cmp	r3, r7
   15458:	strne	r7, [sp, #8]
   1545c:	bne	153d0 <table_column_sort@@Base+0x18c>
   15460:	b	15374 <table_column_sort@@Base+0x130>
   15464:	str	r7, [sp, #8]
   15468:	mov	sl, r8
   1546c:	b	15450 <table_column_sort@@Base+0x20c>
   15470:	mov	r3, #32
   15474:	mvn	r2, #0
   15478:	mov	r1, r2
   1547c:	mov	r0, fp
   15480:	bl	12a34 <table_notify@@Base>
   15484:	add	sp, sp, #52	; 0x34
   15488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1548c:	subs	r2, r1, #1
   15490:	bxeq	lr
   15494:	bcc	1566c <table_column_sort@@Base+0x428>
   15498:	cmp	r0, r1
   1549c:	bls	15650 <table_column_sort@@Base+0x40c>
   154a0:	tst	r1, r2
   154a4:	beq	1565c <table_column_sort@@Base+0x418>
   154a8:	clz	r3, r0
   154ac:	clz	r2, r1
   154b0:	sub	r3, r2, r3
   154b4:	rsbs	r3, r3, #31
   154b8:	addne	r3, r3, r3, lsl #1
   154bc:	mov	r2, #0
   154c0:	addne	pc, pc, r3, lsl #2
   154c4:	nop			; (mov r0, r0)
   154c8:	cmp	r0, r1, lsl #31
   154cc:	adc	r2, r2, r2
   154d0:	subcs	r0, r0, r1, lsl #31
   154d4:	cmp	r0, r1, lsl #30
   154d8:	adc	r2, r2, r2
   154dc:	subcs	r0, r0, r1, lsl #30
   154e0:	cmp	r0, r1, lsl #29
   154e4:	adc	r2, r2, r2
   154e8:	subcs	r0, r0, r1, lsl #29
   154ec:	cmp	r0, r1, lsl #28
   154f0:	adc	r2, r2, r2
   154f4:	subcs	r0, r0, r1, lsl #28
   154f8:	cmp	r0, r1, lsl #27
   154fc:	adc	r2, r2, r2
   15500:	subcs	r0, r0, r1, lsl #27
   15504:	cmp	r0, r1, lsl #26
   15508:	adc	r2, r2, r2
   1550c:	subcs	r0, r0, r1, lsl #26
   15510:	cmp	r0, r1, lsl #25
   15514:	adc	r2, r2, r2
   15518:	subcs	r0, r0, r1, lsl #25
   1551c:	cmp	r0, r1, lsl #24
   15520:	adc	r2, r2, r2
   15524:	subcs	r0, r0, r1, lsl #24
   15528:	cmp	r0, r1, lsl #23
   1552c:	adc	r2, r2, r2
   15530:	subcs	r0, r0, r1, lsl #23
   15534:	cmp	r0, r1, lsl #22
   15538:	adc	r2, r2, r2
   1553c:	subcs	r0, r0, r1, lsl #22
   15540:	cmp	r0, r1, lsl #21
   15544:	adc	r2, r2, r2
   15548:	subcs	r0, r0, r1, lsl #21
   1554c:	cmp	r0, r1, lsl #20
   15550:	adc	r2, r2, r2
   15554:	subcs	r0, r0, r1, lsl #20
   15558:	cmp	r0, r1, lsl #19
   1555c:	adc	r2, r2, r2
   15560:	subcs	r0, r0, r1, lsl #19
   15564:	cmp	r0, r1, lsl #18
   15568:	adc	r2, r2, r2
   1556c:	subcs	r0, r0, r1, lsl #18
   15570:	cmp	r0, r1, lsl #17
   15574:	adc	r2, r2, r2
   15578:	subcs	r0, r0, r1, lsl #17
   1557c:	cmp	r0, r1, lsl #16
   15580:	adc	r2, r2, r2
   15584:	subcs	r0, r0, r1, lsl #16
   15588:	cmp	r0, r1, lsl #15
   1558c:	adc	r2, r2, r2
   15590:	subcs	r0, r0, r1, lsl #15
   15594:	cmp	r0, r1, lsl #14
   15598:	adc	r2, r2, r2
   1559c:	subcs	r0, r0, r1, lsl #14
   155a0:	cmp	r0, r1, lsl #13
   155a4:	adc	r2, r2, r2
   155a8:	subcs	r0, r0, r1, lsl #13
   155ac:	cmp	r0, r1, lsl #12
   155b0:	adc	r2, r2, r2
   155b4:	subcs	r0, r0, r1, lsl #12
   155b8:	cmp	r0, r1, lsl #11
   155bc:	adc	r2, r2, r2
   155c0:	subcs	r0, r0, r1, lsl #11
   155c4:	cmp	r0, r1, lsl #10
   155c8:	adc	r2, r2, r2
   155cc:	subcs	r0, r0, r1, lsl #10
   155d0:	cmp	r0, r1, lsl #9
   155d4:	adc	r2, r2, r2
   155d8:	subcs	r0, r0, r1, lsl #9
   155dc:	cmp	r0, r1, lsl #8
   155e0:	adc	r2, r2, r2
   155e4:	subcs	r0, r0, r1, lsl #8
   155e8:	cmp	r0, r1, lsl #7
   155ec:	adc	r2, r2, r2
   155f0:	subcs	r0, r0, r1, lsl #7
   155f4:	cmp	r0, r1, lsl #6
   155f8:	adc	r2, r2, r2
   155fc:	subcs	r0, r0, r1, lsl #6
   15600:	cmp	r0, r1, lsl #5
   15604:	adc	r2, r2, r2
   15608:	subcs	r0, r0, r1, lsl #5
   1560c:	cmp	r0, r1, lsl #4
   15610:	adc	r2, r2, r2
   15614:	subcs	r0, r0, r1, lsl #4
   15618:	cmp	r0, r1, lsl #3
   1561c:	adc	r2, r2, r2
   15620:	subcs	r0, r0, r1, lsl #3
   15624:	cmp	r0, r1, lsl #2
   15628:	adc	r2, r2, r2
   1562c:	subcs	r0, r0, r1, lsl #2
   15630:	cmp	r0, r1, lsl #1
   15634:	adc	r2, r2, r2
   15638:	subcs	r0, r0, r1, lsl #1
   1563c:	cmp	r0, r1
   15640:	adc	r2, r2, r2
   15644:	subcs	r0, r0, r1
   15648:	mov	r0, r2
   1564c:	bx	lr
   15650:	moveq	r0, #1
   15654:	movne	r0, #0
   15658:	bx	lr
   1565c:	clz	r2, r1
   15660:	rsb	r2, r2, #31
   15664:	lsr	r0, r0, r2
   15668:	bx	lr
   1566c:	cmp	r0, #0
   15670:	mvnne	r0, #0
   15674:	b	15698 <table_column_sort@@Base+0x454>
   15678:	cmp	r1, #0
   1567c:	beq	1566c <table_column_sort@@Base+0x428>
   15680:	push	{r0, r1, lr}
   15684:	bl	1548c <table_column_sort@@Base+0x248>
   15688:	pop	{r1, r2, lr}
   1568c:	mul	r3, r2, r0
   15690:	sub	r1, r1, r3
   15694:	bx	lr
   15698:	push	{r1, lr}
   1569c:	mov	r0, #8
   156a0:	bl	11b74 <raise@plt>
   156a4:	pop	{r1, pc}

000156a8 <__libc_csu_init@@Base>:
   156a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156ac:	mov	r7, r0
   156b0:	ldr	r6, [pc, #72]	; 15700 <__libc_csu_init@@Base+0x58>
   156b4:	ldr	r5, [pc, #72]	; 15704 <__libc_csu_init@@Base+0x5c>
   156b8:	add	r6, pc, r6
   156bc:	add	r5, pc, r5
   156c0:	sub	r6, r6, r5
   156c4:	mov	r8, r1
   156c8:	mov	r9, r2
   156cc:	bl	11b48 <calloc@plt-0x20>
   156d0:	asrs	r6, r6, #2
   156d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   156d8:	mov	r4, #0
   156dc:	add	r4, r4, #1
   156e0:	ldr	r3, [r5], #4
   156e4:	mov	r2, r9
   156e8:	mov	r1, r8
   156ec:	mov	r0, r7
   156f0:	blx	r3
   156f4:	cmp	r6, r4
   156f8:	bne	156dc <__libc_csu_init@@Base+0x34>
   156fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15700:	andeq	r0, r1, r0, asr r8
   15704:	andeq	r0, r1, r8, asr #16

00015708 <__libc_csu_fini@@Base>:
   15708:	bx	lr

Disassembly of section .fini:

0001570c <.fini>:
   1570c:	push	{r3, lr}
   15710:	pop	{r3, pc}
