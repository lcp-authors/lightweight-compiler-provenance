
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ad8 <.init>:
   11ad8:	push	{r3, lr}
   11adc:	bl	11c94 <_start@@Base+0x3c>
   11ae0:	pop	{r3, pc}

Disassembly of section .plt:

00011ae4 <raise@plt-0x14>:
   11ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ae8:	ldr	lr, [pc, #4]	; 11af4 <raise@plt-0x4>
   11aec:	add	lr, pc, lr
   11af0:	ldr	pc, [lr, #8]!
   11af4:	andeq	r4, r1, ip, lsl #10

00011af8 <raise@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #20, 20	; 0x14000
   11b00:	ldr	pc, [ip, #1292]!	; 0x50c

00011b04 <strcmp@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #20, 20	; 0x14000
   11b0c:	ldr	pc, [ip, #1284]!	; 0x504

00011b10 <printf@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #20, 20	; 0x14000
   11b18:	ldr	pc, [ip, #1276]!	; 0x4fc

00011b1c <free@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #20, 20	; 0x14000
   11b24:	ldr	pc, [ip, #1268]!	; 0x4f4

00011b28 <time@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #20, 20	; 0x14000
   11b30:	ldr	pc, [ip, #1260]!	; 0x4ec

00011b34 <realloc@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #20, 20	; 0x14000
   11b3c:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b40 <strcpy@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #20, 20	; 0x14000
   11b48:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b4c <malloc@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #20, 20	; 0x14000
   11b54:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b58 <__libc_start_main@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #20, 20	; 0x14000
   11b60:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b64 <__gmon_start__@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #20, 20	; 0x14000
   11b6c:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b70 <strlen@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #20, 20	; 0x14000
   11b78:	ldr	pc, [ip, #1212]!	; 0x4bc

00011b7c <srand@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #20, 20	; 0x14000
   11b84:	ldr	pc, [ip, #1204]!	; 0x4b4

00011b88 <snprintf@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #20, 20	; 0x14000
   11b90:	ldr	pc, [ip, #1196]!	; 0x4ac

00011b94 <__isoc99_sscanf@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #20, 20	; 0x14000
   11b9c:	ldr	pc, [ip, #1188]!	; 0x4a4

00011ba0 <rand@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #20, 20	; 0x14000
   11ba8:	ldr	pc, [ip, #1180]!	; 0x49c

00011bac <abort@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #20, 20	; 0x14000
   11bb4:	ldr	pc, [ip, #1172]!	; 0x494

Disassembly of section .text:

00011bb8 <main@@Base>:
   11bb8:	push	{r4, r5, lr}
   11bbc:	sub	sp, sp, #68	; 0x44
   11bc0:	add	r0, sp, #4
   11bc4:	bl	11b28 <time@plt>
   11bc8:	bl	11b7c <srand@plt>
   11bcc:	bl	11ba0 <rand@plt>
   11bd0:	ldr	r3, [pc, #120]	; 11c50 <main@@Base+0x98>
   11bd4:	mov	r2, #100	; 0x64
   11bd8:	mov	r4, #0
   11bdc:	umull	r1, r3, r3, r0
   11be0:	mov	r5, r0
   11be4:	lsr	r3, r3, #5
   11be8:	add	r0, sp, #8
   11bec:	mul	r3, r2, r3
   11bf0:	sub	r5, r5, r3
   11bf4:	add	r5, r5, r2
   11bf8:	bl	11dd4 <table_init@@Base>
   11bfc:	add	r4, r4, #1
   11c00:	add	r0, sp, #8
   11c04:	bl	13384 <table_add_row@@Base>
   11c08:	cmp	r5, r4
   11c0c:	bgt	11bfc <main@@Base+0x44>
   11c10:	add	r0, sp, #8
   11c14:	bl	1337c <table_get_row_length@@Base>
   11c18:	cmp	r5, r0
   11c1c:	moveq	r4, #0
   11c20:	bne	11c38 <main@@Base+0x80>
   11c24:	add	r0, sp, #8
   11c28:	bl	11e1c <table_destroy@@Base>
   11c2c:	mov	r0, r4
   11c30:	add	sp, sp, #68	; 0x44
   11c34:	pop	{r4, r5, pc}
   11c38:	mov	r2, r0
   11c3c:	mov	r1, r5
   11c40:	ldr	r0, [pc, #12]	; 11c54 <main@@Base+0x9c>
   11c44:	bl	11b10 <printf@plt>
   11c48:	mvn	r4, #0
   11c4c:	b	11c24 <main@@Base+0x6c>
   11c50:	mvnpl	r8, pc, lsl r5
   11c54:	andeq	r5, r1, r0, lsl #3

00011c58 <_start@@Base>:
   11c58:	mov	fp, #0
   11c5c:	mov	lr, #0
   11c60:	pop	{r1}		; (ldr r1, [sp], #4)
   11c64:	mov	r2, sp
   11c68:	push	{r2}		; (str r2, [sp, #-4]!)
   11c6c:	push	{r0}		; (str r0, [sp, #-4]!)
   11c70:	ldr	ip, [pc, #16]	; 11c88 <_start@@Base+0x30>
   11c74:	push	{ip}		; (str ip, [sp, #-4]!)
   11c78:	ldr	r0, [pc, #12]	; 11c8c <_start@@Base+0x34>
   11c7c:	ldr	r3, [pc, #12]	; 11c90 <_start@@Base+0x38>
   11c80:	bl	11b58 <__libc_start_main@plt>
   11c84:	bl	11bac <abort@plt>
   11c88:	andeq	r5, r1, r0, ror r1
   11c8c:			; <UNDEFINED> instruction: 0x00011bb8
   11c90:	andeq	r5, r1, r0, lsl r1
   11c94:	ldr	r3, [pc, #20]	; 11cb0 <_start@@Base+0x58>
   11c98:	ldr	r2, [pc, #20]	; 11cb4 <_start@@Base+0x5c>
   11c9c:	add	r3, pc, r3
   11ca0:	ldr	r2, [r3, r2]
   11ca4:	cmp	r2, #0
   11ca8:	bxeq	lr
   11cac:	b	11b64 <__gmon_start__@plt>
   11cb0:	andeq	r4, r1, ip, asr r3
   11cb4:	andeq	r0, r0, ip, asr #32
   11cb8:	ldr	r3, [pc, #28]	; 11cdc <_start@@Base+0x84>
   11cbc:	ldr	r0, [pc, #28]	; 11ce0 <_start@@Base+0x88>
   11cc0:	sub	r3, r3, r0
   11cc4:	cmp	r3, #6
   11cc8:	bxls	lr
   11ccc:	ldr	r3, [pc, #16]	; 11ce4 <_start@@Base+0x8c>
   11cd0:	cmp	r3, #0
   11cd4:	bxeq	lr
   11cd8:	bx	r3
   11cdc:	andeq	r6, r2, fp, asr r0
   11ce0:	andeq	r6, r2, r8, asr r0
   11ce4:	andeq	r0, r0, r0
   11ce8:	ldr	r1, [pc, #36]	; 11d14 <_start@@Base+0xbc>
   11cec:	ldr	r0, [pc, #36]	; 11d18 <_start@@Base+0xc0>
   11cf0:	sub	r1, r1, r0
   11cf4:	asr	r1, r1, #2
   11cf8:	add	r1, r1, r1, lsr #31
   11cfc:	asrs	r1, r1, #1
   11d00:	bxeq	lr
   11d04:	ldr	r3, [pc, #16]	; 11d1c <_start@@Base+0xc4>
   11d08:	cmp	r3, #0
   11d0c:	bxeq	lr
   11d10:	bx	r3
   11d14:	andeq	r6, r2, r8, asr r0
   11d18:	andeq	r6, r2, r8, asr r0
   11d1c:	andeq	r0, r0, r0
   11d20:	push	{r4, lr}
   11d24:	ldr	r4, [pc, #24]	; 11d44 <_start@@Base+0xec>
   11d28:	ldrb	r3, [r4]
   11d2c:	cmp	r3, #0
   11d30:	popne	{r4, pc}
   11d34:	bl	11cb8 <_start@@Base+0x60>
   11d38:	mov	r3, #1
   11d3c:	strb	r3, [r4]
   11d40:	pop	{r4, pc}
   11d44:	andeq	r6, r2, r8, asr r0
   11d48:	ldr	r0, [pc, #40]	; 11d78 <_start@@Base+0x120>
   11d4c:	ldr	r3, [r0]
   11d50:	cmp	r3, #0
   11d54:	bne	11d5c <_start@@Base+0x104>
   11d58:	b	11ce8 <_start@@Base+0x90>
   11d5c:	ldr	r3, [pc, #24]	; 11d7c <_start@@Base+0x124>
   11d60:	cmp	r3, #0
   11d64:	beq	11d58 <_start@@Base+0x100>
   11d68:	push	{r4, lr}
   11d6c:	blx	r3
   11d70:	pop	{r4, lr}
   11d74:	b	11ce8 <_start@@Base+0x90>
   11d78:	andeq	r5, r2, r4, lsl pc
   11d7c:	andeq	r0, r0, r0

00011d80 <table_new@@Base>:
   11d80:	push	{r4, lr}
   11d84:	mov	r0, #56	; 0x38
   11d88:	bl	11b4c <malloc@plt>
   11d8c:	mov	r2, #0
   11d90:	mov	r1, #10
   11d94:	mov	ip, #20
   11d98:	str	ip, [r0, #24]
   11d9c:	str	r2, [r0]
   11da0:	str	r2, [r0, #4]
   11da4:	str	r2, [r0, #12]
   11da8:	str	r2, [r0, #16]
   11dac:	str	r2, [r0, #20]
   11db0:	str	r2, [r0, #28]
   11db4:	str	r2, [r0, #36]	; 0x24
   11db8:	str	r2, [r0, #40]	; 0x28
   11dbc:	str	r2, [r0, #44]	; 0x2c
   11dc0:	str	r2, [r0, #32]
   11dc4:	str	r2, [r0, #52]	; 0x34
   11dc8:	str	r1, [r0, #8]
   11dcc:	str	r1, [r0, #48]	; 0x30
   11dd0:	pop	{r4, pc}

00011dd4 <table_init@@Base>:
   11dd4:	mov	r3, #0
   11dd8:	mov	r2, #10
   11ddc:	mov	r1, #20
   11de0:	str	r1, [r0, #24]
   11de4:	str	r3, [r0]
   11de8:	str	r3, [r0, #4]
   11dec:	str	r3, [r0, #12]
   11df0:	str	r3, [r0, #16]
   11df4:	str	r3, [r0, #20]
   11df8:	str	r3, [r0, #28]
   11dfc:	str	r3, [r0, #36]	; 0x24
   11e00:	str	r3, [r0, #40]	; 0x28
   11e04:	str	r3, [r0, #44]	; 0x2c
   11e08:	str	r3, [r0, #32]
   11e0c:	str	r3, [r0, #52]	; 0x34
   11e10:	str	r2, [r0, #8]
   11e14:	str	r2, [r0, #48]	; 0x30
   11e18:	bx	lr

00011e1c <table_destroy@@Base>:
   11e1c:	push	{r4, r5, r6, lr}
   11e20:	subs	r5, r0, #0
   11e24:	popeq	{r4, r5, r6, pc}
   11e28:	mvn	r2, #0
   11e2c:	mov	r1, r2
   11e30:	mov	r3, #64	; 0x40
   11e34:	bl	12684 <table_notify@@Base>
   11e38:	mov	r0, r5
   11e3c:	bl	1337c <table_get_row_length@@Base>
   11e40:	subs	r6, r0, #0
   11e44:	movgt	r4, #0
   11e48:	ble	11e64 <table_destroy@@Base+0x48>
   11e4c:	mov	r1, r4
   11e50:	mov	r0, r5
   11e54:	add	r4, r4, #1
   11e58:	bl	13328 <table_row_destroy@@Base>
   11e5c:	cmp	r6, r4
   11e60:	bne	11e4c <table_destroy@@Base+0x30>
   11e64:	ldr	r0, [r5, #16]
   11e68:	cmp	r0, #0
   11e6c:	beq	11e74 <table_destroy@@Base+0x58>
   11e70:	bl	11b1c <free@plt>
   11e74:	mov	r0, r5
   11e78:	bl	12774 <table_get_column_length@@Base>
   11e7c:	subs	r6, r0, #0
   11e80:	movgt	r4, #0
   11e84:	ble	11ea0 <table_destroy@@Base+0x84>
   11e88:	mov	r1, r4
   11e8c:	mov	r0, r5
   11e90:	add	r4, r4, #1
   11e94:	bl	1275c <table_column_destroy@@Base>
   11e98:	cmp	r6, r4
   11e9c:	bne	11e88 <table_destroy@@Base+0x6c>
   11ea0:	ldr	r0, [r5]
   11ea4:	cmp	r0, #0
   11ea8:	beq	11eb0 <table_destroy@@Base+0x94>
   11eac:	bl	11b1c <free@plt>
   11eb0:	ldr	r0, [r5, #36]	; 0x24
   11eb4:	cmp	r0, #0
   11eb8:	beq	11ec0 <table_destroy@@Base+0xa4>
   11ebc:	bl	11b1c <free@plt>
   11ec0:	ldr	r0, [r5, #40]	; 0x28
   11ec4:	cmp	r0, #0
   11ec8:	beq	11ed0 <table_destroy@@Base+0xb4>
   11ecc:	bl	11b1c <free@plt>
   11ed0:	ldr	r0, [r5, #44]	; 0x2c
   11ed4:	cmp	r0, #0
   11ed8:	popeq	{r4, r5, r6, pc}
   11edc:	pop	{r4, r5, r6, lr}
   11ee0:	b	11b1c <free@plt>

00011ee4 <table_delete@@Base>:
   11ee4:	push	{r4, lr}
   11ee8:	mov	r4, r0
   11eec:	bl	11e1c <table_destroy@@Base>
   11ef0:	mov	r0, r4
   11ef4:	pop	{r4, lr}
   11ef8:	b	11b1c <free@plt>

00011efc <table_dupe@@Base>:
   11efc:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f00:	sub	sp, sp, #20
   11f04:	mov	r6, r0
   11f08:	bl	1337c <table_get_row_length@@Base>
   11f0c:	mov	r4, #0
   11f10:	mov	r9, r0
   11f14:	mov	r0, r6
   11f18:	bl	12774 <table_get_column_length@@Base>
   11f1c:	mov	r8, r0
   11f20:	mov	r0, #56	; 0x38
   11f24:	bl	11b4c <malloc@plt>
   11f28:	mov	r3, #10
   11f2c:	mov	r2, #20
   11f30:	cmp	r8, #0
   11f34:	mov	r7, r0
   11f38:	str	r2, [r0, #24]
   11f3c:	str	r4, [r0]
   11f40:	str	r4, [r0, #4]
   11f44:	str	r4, [r0, #12]
   11f48:	str	r4, [r0, #16]
   11f4c:	str	r4, [r0, #20]
   11f50:	str	r4, [r0, #28]
   11f54:	str	r4, [r0, #36]	; 0x24
   11f58:	str	r4, [r0, #40]	; 0x28
   11f5c:	str	r4, [r0, #44]	; 0x2c
   11f60:	str	r4, [r0, #32]
   11f64:	str	r4, [r0, #52]	; 0x34
   11f68:	str	r3, [r0, #8]
   11f6c:	str	r3, [r0, #48]	; 0x30
   11f70:	ble	11fac <table_dupe@@Base+0xb0>
   11f74:	mov	r1, r4
   11f78:	mov	r0, r6
   11f7c:	bl	12ab0 <table_get_column_name@@Base>
   11f80:	mov	r1, r4
   11f84:	add	r4, r4, #1
   11f88:	mov	r5, r0
   11f8c:	mov	r0, r6
   11f90:	bl	127e4 <table_get_column_data_type@@Base>
   11f94:	mov	r1, r5
   11f98:	mov	r2, r0
   11f9c:	mov	r0, r7
   11fa0:	bl	127f8 <table_add_column@@Base>
   11fa4:	cmp	r8, r4
   11fa8:	bne	11f74 <table_dupe@@Base+0x78>
   11fac:	cmp	r9, #0
   11fb0:	movgt	r5, #0
   11fb4:	ble	12084 <table_dupe@@Base+0x188>
   11fb8:	mov	r0, r7
   11fbc:	bl	13384 <table_add_row@@Base>
   11fc0:	cmp	r8, #0
   11fc4:	movgt	r4, #0
   11fc8:	ble	12078 <table_dupe@@Base+0x17c>
   11fcc:	mov	r1, r4
   11fd0:	mov	r0, r6
   11fd4:	bl	127e4 <table_get_column_data_type@@Base>
   11fd8:	cmp	r0, #23
   11fdc:	ldrls	pc, [pc, r0, lsl #2]
   11fe0:	b	1206c <table_dupe@@Base+0x170>
   11fe4:	andeq	r2, r1, r0, ror #1
   11fe8:	andeq	r2, r1, r4, asr r3
   11fec:	andeq	r2, r1, ip, lsr #6
   11ff0:	andeq	r2, r1, r4, lsl #6
   11ff4:	ldrdeq	r2, [r1], -ip
   11ff8:	strdeq	r2, [r1], -r4
   11ffc:	andeq	r2, r1, ip, asr #7
   12000:	andeq	r2, r1, r4, lsr #7
   12004:	andeq	r2, r1, ip, ror r3
   12008:			; <UNDEFINED> instruction: 0x000122b4
   1200c:	andeq	r2, r1, ip, lsl #5
   12010:	andeq	r2, r1, r4, ror #4
   12014:	andeq	r2, r1, ip, lsr r2
   12018:	andeq	r2, r1, r4, lsl r2
   1201c:	andeq	r2, r1, ip, ror #3
   12020:	andeq	r2, r1, r4, asr #3
   12024:	andeq	r2, r1, r0, lsr #3
   12028:	andeq	r2, r1, ip, ror r1
   1202c:	andeq	r2, r1, r8, asr r1
   12030:	andeq	r2, r1, r0, lsr r1
   12034:	andeq	r2, r1, r8, lsl #2
   12038:	strheq	r2, [r1], -r8
   1203c:	muleq	r1, r0, r0
   12040:	andeq	r2, r1, r4, asr #32
   12044:	mov	r2, r4
   12048:	mov	r1, r5
   1204c:	mov	r0, r6
   12050:	bl	132f8 <table_get_ptr@@Base>
   12054:	add	r3, sp, #12
   12058:	mov	r2, r4
   1205c:	mov	r1, r5
   12060:	str	r0, [sp, #12]
   12064:	mov	r0, r7
   12068:	bl	14428 <table_set_ptr@@Base>
   1206c:	add	r4, r4, #1
   12070:	cmp	r8, r4
   12074:	bne	11fcc <table_dupe@@Base+0xd0>
   12078:	add	r5, r5, #1
   1207c:	cmp	r9, r5
   12080:	bne	11fb8 <table_dupe@@Base+0xbc>
   12084:	mov	r0, r7
   12088:	add	sp, sp, #20
   1208c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12090:	mov	r2, r4
   12094:	mov	r1, r5
   12098:	mov	r0, r6
   1209c:	bl	13130 <table_get_bool@@Base>
   120a0:	mov	r2, r4
   120a4:	mov	r1, r5
   120a8:	mov	r3, r0
   120ac:	mov	r0, r7
   120b0:	bl	1389c <table_set_bool@@Base>
   120b4:	b	1206c <table_dupe@@Base+0x170>
   120b8:	mov	r2, r4
   120bc:	mov	r1, r5
   120c0:	mov	r0, r6
   120c4:	bl	132e8 <table_get_string@@Base>
   120c8:	mov	r2, r4
   120cc:	mov	r1, r5
   120d0:	mov	r3, r0
   120d4:	mov	r0, r7
   120d8:	bl	142b0 <table_set_string@@Base>
   120dc:	b	1206c <table_dupe@@Base+0x170>
   120e0:	mov	r2, r4
   120e4:	mov	r1, r5
   120e8:	mov	r0, r6
   120ec:	bl	13144 <table_get_int@@Base>
   120f0:	mov	r2, r4
   120f4:	mov	r1, r5
   120f8:	mov	r3, r0
   120fc:	mov	r0, r7
   12100:	bl	13918 <table_set_int@@Base>
   12104:	b	1206c <table_dupe@@Base+0x170>
   12108:	mov	r2, r4
   1210c:	mov	r1, r5
   12110:	mov	r0, r6
   12114:	bl	132d4 <table_get_uchar@@Base>
   12118:	mov	r2, r4
   1211c:	mov	r1, r5
   12120:	mov	r3, r0
   12124:	mov	r0, r7
   12128:	bl	143ac <table_set_uchar@@Base>
   1212c:	b	1206c <table_dupe@@Base+0x170>
   12130:	mov	r2, r4
   12134:	mov	r1, r5
   12138:	mov	r0, r6
   1213c:	bl	132c0 <table_get_char@@Base>
   12140:	mov	r2, r4
   12144:	mov	r1, r5
   12148:	mov	r3, r0
   1214c:	mov	r0, r7
   12150:	bl	14330 <table_set_char@@Base>
   12154:	b	1206c <table_dupe@@Base+0x170>
   12158:	mov	r2, r4
   1215c:	mov	r1, r5
   12160:	mov	r0, r6
   12164:	bl	132ac <table_get_ldouble@@Base>
   12168:	mov	r2, r4
   1216c:	mov	r1, r5
   12170:	mov	r0, r7
   12174:	bl	14218 <table_set_ldouble@@Base>
   12178:	b	1206c <table_dupe@@Base+0x170>
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	mov	r0, r6
   12188:	bl	13298 <table_get_double@@Base>
   1218c:	mov	r2, r4
   12190:	mov	r1, r5
   12194:	mov	r0, r7
   12198:	bl	14180 <table_set_double@@Base>
   1219c:	b	1206c <table_dupe@@Base+0x170>
   121a0:	mov	r2, r4
   121a4:	mov	r1, r5
   121a8:	mov	r0, r6
   121ac:	bl	13284 <table_get_float@@Base>
   121b0:	mov	r2, r4
   121b4:	mov	r1, r5
   121b8:	mov	r0, r7
   121bc:	bl	14104 <table_set_float@@Base>
   121c0:	b	1206c <table_dupe@@Base+0x170>
   121c4:	mov	r2, r4
   121c8:	mov	r1, r5
   121cc:	mov	r0, r6
   121d0:	bl	13270 <table_get_ullong@@Base>
   121d4:	mov	r2, r4
   121d8:	strd	r0, [sp]
   121dc:	mov	r1, r5
   121e0:	mov	r0, r7
   121e4:	bl	1407c <table_set_ullong@@Base>
   121e8:	b	1206c <table_dupe@@Base+0x170>
   121ec:	mov	r2, r4
   121f0:	mov	r1, r5
   121f4:	mov	r0, r6
   121f8:	bl	1325c <table_get_llong@@Base>
   121fc:	mov	r2, r4
   12200:	strd	r0, [sp]
   12204:	mov	r1, r5
   12208:	mov	r0, r7
   1220c:	bl	13ff4 <table_set_llong@@Base>
   12210:	b	1206c <table_dupe@@Base+0x170>
   12214:	mov	r2, r4
   12218:	mov	r1, r5
   1221c:	mov	r0, r6
   12220:	bl	13248 <table_get_ulong@@Base>
   12224:	mov	r2, r4
   12228:	mov	r1, r5
   1222c:	mov	r3, r0
   12230:	mov	r0, r7
   12234:	bl	13f78 <table_set_ulong@@Base>
   12238:	b	1206c <table_dupe@@Base+0x170>
   1223c:	mov	r2, r4
   12240:	mov	r1, r5
   12244:	mov	r0, r6
   12248:	bl	13234 <table_get_long@@Base>
   1224c:	mov	r2, r4
   12250:	mov	r1, r5
   12254:	mov	r3, r0
   12258:	mov	r0, r7
   1225c:	bl	13efc <table_set_long@@Base>
   12260:	b	1206c <table_dupe@@Base+0x170>
   12264:	mov	r2, r4
   12268:	mov	r1, r5
   1226c:	mov	r0, r6
   12270:	bl	13220 <table_get_ushort@@Base>
   12274:	mov	r2, r4
   12278:	mov	r1, r5
   1227c:	mov	r3, r0
   12280:	mov	r0, r7
   12284:	bl	13e80 <table_set_ushort@@Base>
   12288:	b	1206c <table_dupe@@Base+0x170>
   1228c:	mov	r2, r4
   12290:	mov	r1, r5
   12294:	mov	r0, r6
   12298:	bl	1320c <table_get_short@@Base>
   1229c:	mov	r2, r4
   122a0:	mov	r1, r5
   122a4:	mov	r3, r0
   122a8:	mov	r0, r7
   122ac:	bl	13e04 <table_set_short@@Base>
   122b0:	b	1206c <table_dupe@@Base+0x170>
   122b4:	mov	r2, r4
   122b8:	mov	r1, r5
   122bc:	mov	r0, r6
   122c0:	bl	131f8 <table_get_uint64@@Base>
   122c4:	mov	r2, r4
   122c8:	strd	r0, [sp]
   122cc:	mov	r1, r5
   122d0:	mov	r0, r7
   122d4:	bl	13d7c <table_set_uint64@@Base>
   122d8:	b	1206c <table_dupe@@Base+0x170>
   122dc:	mov	r2, r4
   122e0:	mov	r1, r5
   122e4:	mov	r0, r6
   122e8:	bl	13194 <table_get_int16@@Base>
   122ec:	mov	r2, r4
   122f0:	mov	r1, r5
   122f4:	mov	r3, r0
   122f8:	mov	r0, r7
   122fc:	bl	13b08 <table_set_int16@@Base>
   12300:	b	1206c <table_dupe@@Base+0x170>
   12304:	mov	r2, r4
   12308:	mov	r1, r5
   1230c:	mov	r0, r6
   12310:	bl	13180 <table_get_uint8@@Base>
   12314:	mov	r2, r4
   12318:	mov	r1, r5
   1231c:	mov	r3, r0
   12320:	mov	r0, r7
   12324:	bl	13a8c <table_set_uint8@@Base>
   12328:	b	1206c <table_dupe@@Base+0x170>
   1232c:	mov	r2, r4
   12330:	mov	r1, r5
   12334:	mov	r0, r6
   12338:	bl	1316c <table_get_int8@@Base>
   1233c:	mov	r2, r4
   12340:	mov	r1, r5
   12344:	mov	r3, r0
   12348:	mov	r0, r7
   1234c:	bl	13a10 <table_set_int8@@Base>
   12350:	b	1206c <table_dupe@@Base+0x170>
   12354:	mov	r2, r4
   12358:	mov	r1, r5
   1235c:	mov	r0, r6
   12360:	bl	13158 <table_get_uint@@Base>
   12364:	mov	r2, r4
   12368:	mov	r1, r5
   1236c:	mov	r3, r0
   12370:	mov	r0, r7
   12374:	bl	13994 <table_set_uint@@Base>
   12378:	b	1206c <table_dupe@@Base+0x170>
   1237c:	mov	r2, r4
   12380:	mov	r1, r5
   12384:	mov	r0, r6
   12388:	bl	131e4 <table_get_int64@@Base>
   1238c:	mov	r2, r4
   12390:	strd	r0, [sp]
   12394:	mov	r1, r5
   12398:	mov	r0, r7
   1239c:	bl	13cf8 <table_set_int64@@Base>
   123a0:	b	1206c <table_dupe@@Base+0x170>
   123a4:	mov	r2, r4
   123a8:	mov	r1, r5
   123ac:	mov	r0, r6
   123b0:	bl	131d0 <table_get_uint32@@Base>
   123b4:	mov	r2, r4
   123b8:	mov	r1, r5
   123bc:	mov	r3, r0
   123c0:	mov	r0, r7
   123c4:	bl	13c7c <table_set_uint32@@Base>
   123c8:	b	1206c <table_dupe@@Base+0x170>
   123cc:	mov	r2, r4
   123d0:	mov	r1, r5
   123d4:	mov	r0, r6
   123d8:	bl	131bc <table_get_int32@@Base>
   123dc:	mov	r2, r4
   123e0:	mov	r1, r5
   123e4:	mov	r3, r0
   123e8:	mov	r0, r7
   123ec:	bl	13c00 <table_set_int32@@Base>
   123f0:	b	1206c <table_dupe@@Base+0x170>
   123f4:	mov	r2, r4
   123f8:	mov	r1, r5
   123fc:	mov	r0, r6
   12400:	bl	131a8 <table_get_uint16@@Base>
   12404:	mov	r2, r4
   12408:	mov	r1, r5
   1240c:	mov	r3, r0
   12410:	mov	r0, r7
   12414:	bl	13b84 <table_set_uint16@@Base>
   12418:	b	1206c <table_dupe@@Base+0x170>

0001241c <table_get_major_version@@Base>:
   1241c:	mov	r0, #0
   12420:	bx	lr

00012424 <table_get_minor_version@@Base>:
   12424:	mov	r0, #0
   12428:	bx	lr

0001242c <table_get_patch_version@@Base>:
   1242c:	mov	r0, #0
   12430:	bx	lr

00012434 <table_get_version@@Base>:
   12434:	ldr	r0, [pc]	; 1243c <table_get_version@@Base+0x8>
   12438:	bx	lr
   1243c:	andeq	r5, r1, ip, asr r2

00012440 <table_get_callback_length@@Base>:
   12440:	ldr	r0, [r0, #32]
   12444:	bx	lr

00012448 <table_register_callback@@Base>:
   12448:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1244c:	ldr	r5, [r0, #32]
   12450:	ldr	r7, [r0, #36]	; 0x24
   12454:	cmp	r5, #0
   12458:	ble	124b0 <table_register_callback@@Base+0x68>
   1245c:	mov	ip, #0
   12460:	sub	lr, r7, #4
   12464:	b	12474 <table_register_callback@@Base+0x2c>
   12468:	add	ip, ip, #1
   1246c:	cmp	ip, r5
   12470:	beq	124b0 <table_register_callback@@Base+0x68>
   12474:	ldr	r4, [lr, #4]!
   12478:	lsl	r6, ip, #2
   1247c:	cmp	r1, r4
   12480:	bne	12468 <table_register_callback@@Base+0x20>
   12484:	ldr	r4, [r0, #40]	; 0x28
   12488:	ldr	r4, [r4, ip, lsl #2]
   1248c:	cmp	r2, r4
   12490:	bne	12468 <table_register_callback@@Base+0x20>
   12494:	cmp	ip, #0
   12498:	beq	124b0 <table_register_callback@@Base+0x68>
   1249c:	ldr	r1, [r0, #44]	; 0x2c
   124a0:	ldr	r2, [r1, r6]
   124a4:	orr	r3, r2, r3
   124a8:	str	r3, [r1, r6]
   124ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124b0:	ldr	sl, [r0, #48]	; 0x30
   124b4:	mov	r9, r1
   124b8:	mov	r8, r0
   124bc:	mov	r1, sl
   124c0:	mov	r0, r5
   124c4:	mov	r6, r3
   124c8:	mov	r4, r2
   124cc:	bl	150e0 <table_get_cell_ptr@@Base+0x204>
   124d0:	cmp	r1, #0
   124d4:	beq	124fc <table_register_callback@@Base+0xb4>
   124d8:	str	r9, [r7, r5, lsl #2]
   124dc:	ldr	r3, [r8, #40]	; 0x28
   124e0:	str	r4, [r3, r5, lsl #2]
   124e4:	ldr	r3, [r8, #44]	; 0x2c
   124e8:	str	r6, [r3, r5, lsl #2]
   124ec:	ldr	r3, [r8, #32]
   124f0:	add	r3, r3, #1
   124f4:	str	r3, [r8, #32]
   124f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124fc:	ldr	r1, [r8, #52]	; 0x34
   12500:	mov	r0, r7
   12504:	add	r1, sl, r1
   12508:	str	r1, [r8, #52]	; 0x34
   1250c:	lsl	r1, r1, #2
   12510:	bl	11b34 <realloc@plt>
   12514:	ldr	r1, [r8, #52]	; 0x34
   12518:	lsl	r1, r1, #2
   1251c:	str	r0, [r8, #36]	; 0x24
   12520:	ldr	r0, [r8, #40]	; 0x28
   12524:	bl	11b34 <realloc@plt>
   12528:	ldr	r1, [r8, #52]	; 0x34
   1252c:	lsl	r1, r1, #2
   12530:	str	r0, [r8, #40]	; 0x28
   12534:	ldr	r0, [r8, #44]	; 0x2c
   12538:	bl	11b34 <realloc@plt>
   1253c:	ldr	r7, [r8, #36]	; 0x24
   12540:	ldr	r5, [r8, #32]
   12544:	str	r0, [r8, #44]	; 0x2c
   12548:	b	124d8 <table_register_callback@@Base+0x90>

0001254c <table_unregister_callback@@Base>:
   1254c:	push	{r4, r5, r6, lr}
   12550:	ldr	lr, [r0, #32]
   12554:	cmp	lr, #0
   12558:	pople	{r4, r5, r6, pc}
   1255c:	ldr	r6, [r0, #36]	; 0x24
   12560:	mov	r3, #0
   12564:	sub	r4, r6, #4
   12568:	b	12578 <table_unregister_callback@@Base+0x2c>
   1256c:	add	r3, r3, #1
   12570:	cmp	r3, lr
   12574:	beq	12644 <table_unregister_callback@@Base+0xf8>
   12578:	ldr	r5, [r4, #4]!
   1257c:	lsl	ip, r3, #2
   12580:	cmp	r1, r5
   12584:	bne	1256c <table_unregister_callback@@Base+0x20>
   12588:	ldr	r5, [r0, #40]	; 0x28
   1258c:	ldr	r5, [r5, r3, lsl #2]
   12590:	cmp	r2, r5
   12594:	bne	1256c <table_unregister_callback@@Base+0x20>
   12598:	sub	lr, lr, #1
   1259c:	cmp	lr, r3
   125a0:	bgt	125ac <table_unregister_callback@@Base+0x60>
   125a4:	b	125e8 <table_unregister_callback@@Base+0x9c>
   125a8:	ldr	r6, [r0, #36]	; 0x24
   125ac:	add	r2, ip, #4
   125b0:	add	r3, r3, #1
   125b4:	ldr	r1, [r6, r2]
   125b8:	str	r1, [r6, ip]
   125bc:	ldr	r1, [r0, #40]	; 0x28
   125c0:	ldr	lr, [r1, r2]
   125c4:	str	lr, [r1, ip]
   125c8:	ldr	r1, [r0, #44]	; 0x2c
   125cc:	ldr	lr, [r1, r2]
   125d0:	str	lr, [r1, ip]
   125d4:	ldr	lr, [r0, #32]
   125d8:	mov	ip, r2
   125dc:	sub	lr, lr, #1
   125e0:	cmp	lr, r3
   125e4:	bgt	125a8 <table_unregister_callback@@Base+0x5c>
   125e8:	ldr	r6, [r0, #48]	; 0x30
   125ec:	str	lr, [r0, #32]
   125f0:	mov	r4, r0
   125f4:	mov	r1, r6
   125f8:	mov	r0, lr
   125fc:	bl	150e0 <table_get_cell_ptr@@Base+0x204>
   12600:	cmp	r1, #0
   12604:	popne	{r4, r5, r6, pc}
   12608:	ldr	r5, [r4, #52]	; 0x34
   1260c:	sub	r5, r5, r6
   12610:	cmp	r5, #0
   12614:	str	r5, [r4, #52]	; 0x34
   12618:	bne	12648 <table_unregister_callback@@Base+0xfc>
   1261c:	ldr	r0, [r4, #36]	; 0x24
   12620:	bl	11b1c <free@plt>
   12624:	ldr	r0, [r4, #40]	; 0x28
   12628:	bl	11b1c <free@plt>
   1262c:	ldr	r0, [r4, #44]	; 0x2c
   12630:	bl	11b1c <free@plt>
   12634:	str	r5, [r4, #36]	; 0x24
   12638:	str	r5, [r4, #40]	; 0x28
   1263c:	str	r5, [r4, #44]	; 0x2c
   12640:	pop	{r4, r5, r6, pc}
   12644:	pop	{r4, r5, r6, pc}
   12648:	lsl	r1, r5, #2
   1264c:	ldr	r0, [r4, #36]	; 0x24
   12650:	bl	11b34 <realloc@plt>
   12654:	ldr	r1, [r4, #52]	; 0x34
   12658:	lsl	r1, r1, #2
   1265c:	str	r0, [r4, #36]	; 0x24
   12660:	ldr	r0, [r4, #40]	; 0x28
   12664:	bl	11b34 <realloc@plt>
   12668:	ldr	r1, [r4, #52]	; 0x34
   1266c:	lsl	r1, r1, #2
   12670:	str	r0, [r4, #40]	; 0x28
   12674:	ldr	r0, [r4, #44]	; 0x2c
   12678:	bl	11b34 <realloc@plt>
   1267c:	str	r0, [r4, #44]	; 0x2c
   12680:	pop	{r4, r5, r6, pc}

00012684 <table_notify@@Base>:
   12684:	ldr	ip, [r0, #32]
   12688:	cmp	ip, #0
   1268c:	bxle	lr
   12690:	push	{r4, r5, r6, r7, r8, r9, lr}
   12694:	mov	r6, r3
   12698:	sub	sp, sp, #12
   1269c:	mov	r8, r2
   126a0:	mov	r7, r1
   126a4:	mov	r5, r0
   126a8:	mov	r4, #0
   126ac:	b	126bc <table_notify@@Base+0x38>
   126b0:	add	r4, r4, #1
   126b4:	cmp	r4, ip
   126b8:	bge	12704 <table_notify@@Base+0x80>
   126bc:	ldr	r0, [r5, #44]	; 0x2c
   126c0:	ldr	r0, [r0, r4, lsl #2]
   126c4:	tst	r6, r0
   126c8:	beq	126b0 <table_notify@@Base+0x2c>
   126cc:	ldr	r2, [r5, #40]	; 0x28
   126d0:	ldr	r0, [r5, #36]	; 0x24
   126d4:	mov	r3, r6
   126d8:	ldr	r1, [r2, r4, lsl #2]
   126dc:	mov	r2, r8
   126e0:	str	r1, [sp]
   126e4:	mov	r1, r7
   126e8:	ldr	r9, [r0, r4, lsl #2]
   126ec:	mov	r0, r5
   126f0:	blx	r9
   126f4:	ldr	ip, [r5, #32]
   126f8:	add	r4, r4, #1
   126fc:	cmp	r4, ip
   12700:	blt	126bc <table_notify@@Base+0x38>
   12704:	add	sp, sp, #12
   12708:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001270c <table_column_init@@Base>:
   1270c:	add	r1, r1, r1, lsl #1
   12710:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12714:	lsl	r4, r1, #2
   12718:	ldr	r6, [r0]
   1271c:	mov	r0, r2
   12720:	mov	r9, r3
   12724:	mov	r7, r2
   12728:	bl	11b70 <strlen@plt>
   1272c:	ldr	r8, [sp, #32]
   12730:	add	r5, r6, r4
   12734:	add	r0, r0, #1
   12738:	bl	11b4c <malloc@plt>
   1273c:	subs	r3, r0, #0
   12740:	str	r0, [r6, r4]
   12744:	beq	12750 <table_column_init@@Base+0x44>
   12748:	mov	r1, r7
   1274c:	bl	11b40 <strcpy@plt>
   12750:	str	r9, [r5, #4]
   12754:	str	r8, [r5, #8]
   12758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001275c <table_column_destroy@@Base>:
   1275c:	ldr	r3, [r0]
   12760:	add	r1, r1, r1, lsl #1
   12764:	ldr	r0, [r3, r1, lsl #2]
   12768:	cmp	r0, #0
   1276c:	bxeq	lr
   12770:	b	11b1c <free@plt>

00012774 <table_get_column_length@@Base>:
   12774:	ldr	r0, [r0, #4]
   12778:	bx	lr

0001277c <table_get_column@@Base>:
   1277c:	push	{r4, r5, r6, r7, r8, lr}
   12780:	ldr	r7, [r0, #4]
   12784:	cmp	r7, #0
   12788:	ble	127d8 <table_get_column@@Base+0x5c>
   1278c:	mov	r4, #0
   12790:	mov	r6, r1
   12794:	ldr	r8, [r0]
   12798:	mov	r5, r4
   1279c:	b	127ac <table_get_column@@Base+0x30>
   127a0:	add	r5, r5, #1
   127a4:	cmp	r7, r5
   127a8:	beq	127cc <table_get_column@@Base+0x50>
   127ac:	ldr	r0, [r8, r4]
   127b0:	mov	r1, r6
   127b4:	bl	11b04 <strcmp@plt>
   127b8:	add	r4, r4, #12
   127bc:	cmp	r0, #0
   127c0:	bne	127a0 <table_get_column@@Base+0x24>
   127c4:	mov	r0, r5
   127c8:	pop	{r4, r5, r6, r7, r8, pc}
   127cc:	mvn	r5, #0
   127d0:	mov	r0, r5
   127d4:	pop	{r4, r5, r6, r7, r8, pc}
   127d8:	mvneq	r5, #0
   127dc:	movne	r5, #0
   127e0:	b	127c4 <table_get_column@@Base+0x48>

000127e4 <table_get_column_data_type@@Base>:
   127e4:	ldr	r3, [r0]
   127e8:	add	r1, r1, r1, lsl #1
   127ec:	add	r3, r3, r1, lsl #2
   127f0:	ldr	r0, [r3, #4]
   127f4:	bx	lr

000127f8 <table_add_column@@Base>:
   127f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127fc:	mov	r5, r0
   12800:	ldmib	r0, {r0, r6}
   12804:	sub	sp, sp, #12
   12808:	mov	r9, r1
   1280c:	mov	r1, r6
   12810:	mov	r8, r2
   12814:	bl	150e0 <table_get_cell_ptr@@Base+0x204>
   12818:	subs	r4, r1, #0
   1281c:	beq	128cc <table_add_column@@Base+0xd4>
   12820:	mov	r0, r5
   12824:	bl	1337c <table_get_row_length@@Base>
   12828:	ldr	r6, [r5, #4]
   1282c:	add	r4, r6, r6, lsl #1
   12830:	lsl	r4, r4, #2
   12834:	mov	r7, r0
   12838:	mov	r0, r8
   1283c:	bl	13108 <table_get_default_compare_function_for_data_type@@Base>
   12840:	mov	fp, r0
   12844:	mov	r0, r9
   12848:	bl	11b70 <strlen@plt>
   1284c:	ldr	r3, [r5]
   12850:	add	sl, r3, r4
   12854:	str	r3, [sp, #4]
   12858:	add	r0, r0, #1
   1285c:	bl	11b4c <malloc@plt>
   12860:	ldr	r3, [sp, #4]
   12864:	cmp	r0, #0
   12868:	str	r0, [r3, r4]
   1286c:	beq	12878 <table_add_column@@Base+0x80>
   12870:	mov	r1, r9
   12874:	bl	11b40 <strcpy@plt>
   12878:	cmp	r7, #0
   1287c:	stmib	sl, {r8, fp}
   12880:	ble	128a4 <table_add_column@@Base+0xac>
   12884:	mov	r4, #0
   12888:	mov	r1, r4
   1288c:	mov	r2, r6
   12890:	mov	r0, r5
   12894:	add	r4, r4, #1
   12898:	bl	14484 <table_cell_init@@Base>
   1289c:	cmp	r7, r4
   128a0:	bne	12888 <table_add_column@@Base+0x90>
   128a4:	mov	r0, r5
   128a8:	mov	r3, #8
   128ac:	ldr	r2, [r5, #4]
   128b0:	mvn	r1, #0
   128b4:	bl	12684 <table_notify@@Base>
   128b8:	ldr	r0, [r5, #4]
   128bc:	add	r3, r0, #1
   128c0:	str	r3, [r5, #4]
   128c4:	add	sp, sp, #12
   128c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128cc:	ldr	r1, [r5, #12]
   128d0:	ldr	r0, [r5]
   128d4:	add	r6, r6, r1
   128d8:	str	r6, [r5, #12]
   128dc:	add	r6, r6, r6, lsl #1
   128e0:	lsl	r1, r6, #2
   128e4:	bl	11b34 <realloc@plt>
   128e8:	str	r0, [r5]
   128ec:	mov	r0, r5
   128f0:	bl	1337c <table_get_row_length@@Base>
   128f4:	subs	r7, r0, #0
   128f8:	ble	12820 <table_add_column@@Base+0x28>
   128fc:	mov	r1, r4
   12900:	mov	r0, r5
   12904:	bl	13534 <table_get_row_ptr@@Base>
   12908:	ldr	r1, [r5, #12]
   1290c:	add	r4, r4, #1
   12910:	lsl	r1, r1, #2
   12914:	mov	r6, r0
   12918:	ldr	r0, [r0]
   1291c:	bl	11b34 <realloc@plt>
   12920:	cmp	r7, r4
   12924:	str	r0, [r6]
   12928:	bne	128fc <table_add_column@@Base+0x104>
   1292c:	b	12820 <table_add_column@@Base+0x28>

00012930 <table_remove_column@@Base>:
   12930:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12934:	add	r5, r1, r1, lsl #1
   12938:	ldr	r3, [r0]
   1293c:	lsl	r5, r5, #2
   12940:	mov	r6, r0
   12944:	ldr	r0, [r3, r5]
   12948:	mov	r9, r1
   1294c:	cmp	r0, #0
   12950:	beq	12958 <table_remove_column@@Base+0x28>
   12954:	bl	11b1c <free@plt>
   12958:	ldr	r4, [r6, #4]
   1295c:	sub	r4, r4, #1
   12960:	cmp	r9, r4
   12964:	movlt	r1, r9
   12968:	bge	129a4 <table_remove_column@@Base+0x74>
   1296c:	ldr	r3, [r6]
   12970:	add	r0, r5, #12
   12974:	add	r2, r3, r0
   12978:	add	r1, r1, #1
   1297c:	ldr	lr, [r2, #4]
   12980:	ldr	ip, [r2, #8]
   12984:	ldr	r7, [r2]
   12988:	add	r2, r3, r5
   1298c:	cmp	r1, r4
   12990:	str	r7, [r3, r5]
   12994:	str	lr, [r2, #4]
   12998:	str	ip, [r2, #8]
   1299c:	mov	r5, r0
   129a0:	bne	1296c <table_remove_column@@Base+0x3c>
   129a4:	mov	r0, r6
   129a8:	bl	1337c <table_get_row_length@@Base>
   129ac:	subs	r7, r0, #0
   129b0:	lslgt	r8, r9, #2
   129b4:	movgt	r5, #0
   129b8:	ble	12a14 <table_remove_column@@Base+0xe4>
   129bc:	mov	r2, r9
   129c0:	mov	r1, r5
   129c4:	mov	r0, r6
   129c8:	bl	144a0 <table_cell_destroy@@Base>
   129cc:	mov	r1, r5
   129d0:	mov	r0, r6
   129d4:	bl	13534 <table_get_row_ptr@@Base>
   129d8:	cmp	r9, r4
   129dc:	movlt	r2, r8
   129e0:	movlt	r3, r9
   129e4:	bge	12a08 <table_remove_column@@Base+0xd8>
   129e8:	ldr	ip, [r0]
   129ec:	add	r1, r2, #4
   129f0:	add	r3, r3, #1
   129f4:	ldr	lr, [ip, r1]
   129f8:	cmp	r3, r4
   129fc:	str	lr, [ip, r2]
   12a00:	mov	r2, r1
   12a04:	bne	129e8 <table_remove_column@@Base+0xb8>
   12a08:	add	r5, r5, #1
   12a0c:	cmp	r7, r5
   12a10:	bne	129bc <table_remove_column@@Base+0x8c>
   12a14:	ldmib	r6, {r0, r5}
   12a18:	sub	r0, r0, #1
   12a1c:	str	r0, [r6, #4]
   12a20:	mov	r1, r5
   12a24:	bl	150e0 <table_get_cell_ptr@@Base+0x204>
   12a28:	subs	r4, r1, #0
   12a2c:	beq	12a4c <table_remove_column@@Base+0x11c>
   12a30:	mov	r0, r6
   12a34:	mov	r2, r9
   12a38:	mov	r3, #16
   12a3c:	mvn	r1, #0
   12a40:	bl	12684 <table_notify@@Base>
   12a44:	mov	r0, #0
   12a48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a4c:	ldr	r1, [r6, #12]
   12a50:	ldr	r0, [r6]
   12a54:	sub	r1, r1, r5
   12a58:	str	r1, [r6, #12]
   12a5c:	add	r1, r1, r1, lsl #1
   12a60:	lsl	r1, r1, #2
   12a64:	bl	11b34 <realloc@plt>
   12a68:	str	r0, [r6]
   12a6c:	mov	r0, r6
   12a70:	bl	1337c <table_get_row_length@@Base>
   12a74:	subs	r7, r0, #0
   12a78:	ble	12a30 <table_remove_column@@Base+0x100>
   12a7c:	mov	r1, r4
   12a80:	mov	r0, r6
   12a84:	bl	13534 <table_get_row_ptr@@Base>
   12a88:	ldr	r1, [r6, #12]
   12a8c:	add	r4, r4, #1
   12a90:	lsl	r1, r1, #2
   12a94:	mov	r5, r0
   12a98:	ldr	r0, [r0]
   12a9c:	bl	11b34 <realloc@plt>
   12aa0:	cmp	r7, r4
   12aa4:	str	r0, [r5]
   12aa8:	bne	12a7c <table_remove_column@@Base+0x14c>
   12aac:	b	12a30 <table_remove_column@@Base+0x100>

00012ab0 <table_get_column_name@@Base>:
   12ab0:	ldr	r3, [r0]
   12ab4:	add	r1, r1, r1, lsl #1
   12ab8:	ldr	r0, [r3, r1, lsl #2]
   12abc:	bx	lr

00012ac0 <table_get_col_ptr@@Base>:
   12ac0:	add	r1, r1, r1, lsl #1
   12ac4:	ldr	r0, [r0]
   12ac8:	add	r0, r0, r1, lsl #2
   12acc:	bx	lr

00012ad0 <table_get_column_compare_function@@Base>:
   12ad0:	ldr	r3, [r0]
   12ad4:	add	r1, r1, r1, lsl #1
   12ad8:	add	r3, r3, r1, lsl #2
   12adc:	ldr	r0, [r3, #8]
   12ae0:	bx	lr

00012ae4 <table_set_column_compare_function@@Base>:
   12ae4:	ldr	r3, [r0]
   12ae8:	add	r1, r1, r1, lsl #1
   12aec:	add	r3, r3, r1, lsl #2
   12af0:	str	r2, [r3, #8]
   12af4:	bx	lr

00012af8 <table_compare_bool@@Base>:
   12af8:	cmp	r0, #0
   12afc:	beq	12b2c <table_compare_bool@@Base+0x34>
   12b00:	cmp	r1, #0
   12b04:	beq	12b24 <table_compare_bool@@Base+0x2c>
   12b08:	ldrb	r2, [r0]
   12b0c:	ldrb	r3, [r1]
   12b10:	cmp	r2, r3
   12b14:	bgt	12b24 <table_compare_bool@@Base+0x2c>
   12b18:	mvnlt	r0, #0
   12b1c:	movge	r0, #0
   12b20:	bx	lr
   12b24:	mov	r0, #1
   12b28:	bx	lr
   12b2c:	adds	r0, r1, #0
   12b30:	mvnne	r0, #0
   12b34:	bx	lr

00012b38 <table_compare_int8@@Base>:
   12b38:	cmp	r0, #0
   12b3c:	beq	12b6c <table_compare_int8@@Base+0x34>
   12b40:	cmp	r1, #0
   12b44:	beq	12b64 <table_compare_int8@@Base+0x2c>
   12b48:	ldrsb	r2, [r0]
   12b4c:	ldrsb	r3, [r1]
   12b50:	cmp	r2, r3
   12b54:	bgt	12b64 <table_compare_int8@@Base+0x2c>
   12b58:	mvnlt	r0, #0
   12b5c:	movge	r0, #0
   12b60:	bx	lr
   12b64:	mov	r0, #1
   12b68:	bx	lr
   12b6c:	adds	r0, r1, #0
   12b70:	mvnne	r0, #0
   12b74:	bx	lr

00012b78 <table_compare_int32@@Base>:
   12b78:	cmp	r0, #0
   12b7c:	beq	12bac <table_compare_int32@@Base+0x34>
   12b80:	cmp	r1, #0
   12b84:	beq	12ba4 <table_compare_int32@@Base+0x2c>
   12b88:	ldr	r2, [r0]
   12b8c:	ldr	r3, [r1]
   12b90:	cmp	r2, r3
   12b94:	bgt	12ba4 <table_compare_int32@@Base+0x2c>
   12b98:	mvnlt	r0, #0
   12b9c:	movge	r0, #0
   12ba0:	bx	lr
   12ba4:	mov	r0, #1
   12ba8:	bx	lr
   12bac:	adds	r0, r1, #0
   12bb0:	mvnne	r0, #0
   12bb4:	bx	lr

00012bb8 <table_compare_uint32@@Base>:
   12bb8:	cmp	r0, #0
   12bbc:	beq	12bec <table_compare_uint32@@Base+0x34>
   12bc0:	cmp	r1, #0
   12bc4:	beq	12be4 <table_compare_uint32@@Base+0x2c>
   12bc8:	ldr	r2, [r0]
   12bcc:	ldr	r3, [r1]
   12bd0:	cmp	r2, r3
   12bd4:	bhi	12be4 <table_compare_uint32@@Base+0x2c>
   12bd8:	mvncc	r0, #0
   12bdc:	movcs	r0, #0
   12be0:	bx	lr
   12be4:	mov	r0, #1
   12be8:	bx	lr
   12bec:	adds	r0, r1, #0
   12bf0:	mvnne	r0, #0
   12bf4:	bx	lr

00012bf8 <table_compare_uint64@@Base>:
   12bf8:	cmp	r0, #0
   12bfc:	beq	12c34 <table_compare_uint64@@Base+0x3c>
   12c00:	cmp	r1, #0
   12c04:	beq	12c40 <table_compare_uint64@@Base+0x48>
   12c08:	ldrd	r2, [r1]
   12c0c:	push	{r4, r5}
   12c10:	ldrd	r4, [r0]
   12c14:	cmp	r5, r3
   12c18:	cmpeq	r4, r2
   12c1c:	movhi	r0, #1
   12c20:	bhi	12c2c <table_compare_uint64@@Base+0x34>
   12c24:	mvncc	r0, #0
   12c28:	movcs	r0, #0
   12c2c:	pop	{r4, r5}
   12c30:	bx	lr
   12c34:	adds	r0, r1, #0
   12c38:	mvnne	r0, #0
   12c3c:	bx	lr
   12c40:	mov	r0, #1
   12c44:	bx	lr

00012c48 <table_compare_short@@Base>:
   12c48:	cmp	r0, #0
   12c4c:	beq	12c7c <table_compare_short@@Base+0x34>
   12c50:	cmp	r1, #0
   12c54:	beq	12c74 <table_compare_short@@Base+0x2c>
   12c58:	ldrsh	r2, [r0]
   12c5c:	ldrsh	r3, [r1]
   12c60:	cmp	r2, r3
   12c64:	bgt	12c74 <table_compare_short@@Base+0x2c>
   12c68:	mvnlt	r0, #0
   12c6c:	movge	r0, #0
   12c70:	bx	lr
   12c74:	mov	r0, #1
   12c78:	bx	lr
   12c7c:	adds	r0, r1, #0
   12c80:	mvnne	r0, #0
   12c84:	bx	lr

00012c88 <table_compare_ushort@@Base>:
   12c88:	cmp	r0, #0
   12c8c:	beq	12cbc <table_compare_ushort@@Base+0x34>
   12c90:	cmp	r1, #0
   12c94:	beq	12cb4 <table_compare_ushort@@Base+0x2c>
   12c98:	ldrh	r2, [r0]
   12c9c:	ldrh	r3, [r1]
   12ca0:	cmp	r2, r3
   12ca4:	bhi	12cb4 <table_compare_ushort@@Base+0x2c>
   12ca8:	mvncc	r0, #0
   12cac:	movcs	r0, #0
   12cb0:	bx	lr
   12cb4:	mov	r0, #1
   12cb8:	bx	lr
   12cbc:	adds	r0, r1, #0
   12cc0:	mvnne	r0, #0
   12cc4:	bx	lr

00012cc8 <table_compare_long@@Base>:
   12cc8:	cmp	r0, #0
   12ccc:	beq	12cfc <table_compare_long@@Base+0x34>
   12cd0:	cmp	r1, #0
   12cd4:	beq	12cf4 <table_compare_long@@Base+0x2c>
   12cd8:	ldr	r2, [r0]
   12cdc:	ldr	r3, [r1]
   12ce0:	cmp	r2, r3
   12ce4:	bgt	12cf4 <table_compare_long@@Base+0x2c>
   12ce8:	mvnlt	r0, #0
   12cec:	movge	r0, #0
   12cf0:	bx	lr
   12cf4:	mov	r0, #1
   12cf8:	bx	lr
   12cfc:	adds	r0, r1, #0
   12d00:	mvnne	r0, #0
   12d04:	bx	lr

00012d08 <table_compare_llong@@Base>:
   12d08:	cmp	r0, #0
   12d0c:	beq	12d4c <table_compare_llong@@Base+0x44>
   12d10:	cmp	r1, #0
   12d14:	beq	12d58 <table_compare_llong@@Base+0x50>
   12d18:	ldrd	r2, [r1]
   12d1c:	push	{r4, r5}
   12d20:	ldrd	r4, [r0]
   12d24:	cmp	r2, r4
   12d28:	sbcs	r1, r3, r5
   12d2c:	movlt	r0, #1
   12d30:	blt	12d44 <table_compare_llong@@Base+0x3c>
   12d34:	cmp	r4, r2
   12d38:	sbcs	r3, r5, r3
   12d3c:	mvnlt	r0, #0
   12d40:	movge	r0, #0
   12d44:	pop	{r4, r5}
   12d48:	bx	lr
   12d4c:	adds	r0, r1, #0
   12d50:	mvnne	r0, #0
   12d54:	bx	lr
   12d58:	mov	r0, #1
   12d5c:	bx	lr

00012d60 <table_compare_ullong@@Base>:
   12d60:	cmp	r0, #0
   12d64:	beq	12d94 <table_compare_ullong@@Base+0x34>
   12d68:	cmp	r1, #0
   12d6c:	beq	12d8c <table_compare_ullong@@Base+0x2c>
   12d70:	ldr	r2, [r0]
   12d74:	ldr	r3, [r1]
   12d78:	cmp	r2, r3
   12d7c:	bhi	12d8c <table_compare_ullong@@Base+0x2c>
   12d80:	mvncc	r0, #0
   12d84:	movcs	r0, #0
   12d88:	bx	lr
   12d8c:	mov	r0, #1
   12d90:	bx	lr
   12d94:	adds	r0, r1, #0
   12d98:	mvnne	r0, #0
   12d9c:	bx	lr

00012da0 <table_compare_float@@Base>:
   12da0:	cmp	r0, #0
   12da4:	beq	12dd8 <table_compare_float@@Base+0x38>
   12da8:	cmp	r1, #0
   12dac:	beq	12dd0 <table_compare_float@@Base+0x30>
   12db0:	vldr	s14, [r0]
   12db4:	vldr	s15, [r1]
   12db8:	vcmpe.f32	s14, s15
   12dbc:	vmrs	APSR_nzcv, fpscr
   12dc0:	bgt	12dd0 <table_compare_float@@Base+0x30>
   12dc4:	mvnmi	r0, #0
   12dc8:	movpl	r0, #0
   12dcc:	bx	lr
   12dd0:	mov	r0, #1
   12dd4:	bx	lr
   12dd8:	adds	r0, r1, #0
   12ddc:	mvnne	r0, #0
   12de0:	bx	lr

00012de4 <table_compare_double@@Base>:
   12de4:	cmp	r0, #0
   12de8:	beq	12e1c <table_compare_double@@Base+0x38>
   12dec:	cmp	r1, #0
   12df0:	beq	12e14 <table_compare_double@@Base+0x30>
   12df4:	vldr	d6, [r0]
   12df8:	vldr	d7, [r1]
   12dfc:	vcmpe.f64	d6, d7
   12e00:	vmrs	APSR_nzcv, fpscr
   12e04:	bgt	12e14 <table_compare_double@@Base+0x30>
   12e08:	mvnmi	r0, #0
   12e0c:	movpl	r0, #0
   12e10:	bx	lr
   12e14:	mov	r0, #1
   12e18:	bx	lr
   12e1c:	adds	r0, r1, #0
   12e20:	mvnne	r0, #0
   12e24:	bx	lr

00012e28 <table_compare_ldouble@@Base>:
   12e28:	cmp	r0, #0
   12e2c:	beq	12e60 <table_compare_ldouble@@Base+0x38>
   12e30:	cmp	r1, #0
   12e34:	beq	12e58 <table_compare_ldouble@@Base+0x30>
   12e38:	vldr	d6, [r0]
   12e3c:	vldr	d7, [r1]
   12e40:	vcmpe.f64	d6, d7
   12e44:	vmrs	APSR_nzcv, fpscr
   12e48:	bgt	12e58 <table_compare_ldouble@@Base+0x30>
   12e4c:	mvnmi	r0, #0
   12e50:	movpl	r0, #0
   12e54:	bx	lr
   12e58:	mov	r0, #1
   12e5c:	bx	lr
   12e60:	adds	r0, r1, #0
   12e64:	mvnne	r0, #0
   12e68:	bx	lr

00012e6c <table_compare_uchar@@Base>:
   12e6c:	cmp	r0, #0
   12e70:	beq	12ea0 <table_compare_uchar@@Base+0x34>
   12e74:	cmp	r1, #0
   12e78:	beq	12e98 <table_compare_uchar@@Base+0x2c>
   12e7c:	ldrb	r2, [r0]
   12e80:	ldrb	r3, [r1]
   12e84:	cmp	r2, r3
   12e88:	bhi	12e98 <table_compare_uchar@@Base+0x2c>
   12e8c:	mvncc	r0, #0
   12e90:	movcs	r0, #0
   12e94:	bx	lr
   12e98:	mov	r0, #1
   12e9c:	bx	lr
   12ea0:	adds	r0, r1, #0
   12ea4:	mvnne	r0, #0
   12ea8:	bx	lr

00012eac <table_compare_ptr@@Base>:
   12eac:	cmp	r0, r1
   12eb0:	bhi	12ec0 <table_compare_ptr@@Base+0x14>
   12eb4:	mvncc	r0, #0
   12eb8:	movcs	r0, #0
   12ebc:	bx	lr
   12ec0:	mov	r0, #1
   12ec4:	bx	lr

00012ec8 <table_compare_string@@Base>:
   12ec8:	cmp	r0, #0
   12ecc:	beq	12edc <table_compare_string@@Base+0x14>
   12ed0:	cmp	r1, #0
   12ed4:	beq	12ee8 <table_compare_string@@Base+0x20>
   12ed8:	b	11b04 <strcmp@plt>
   12edc:	adds	r0, r1, #0
   12ee0:	mvnne	r0, #0
   12ee4:	bx	lr
   12ee8:	mov	r0, #1
   12eec:	bx	lr

00012ef0 <table_compare_ulong@@Base>:
   12ef0:	cmp	r0, #0
   12ef4:	beq	12f24 <table_compare_ulong@@Base+0x34>
   12ef8:	cmp	r1, #0
   12efc:	beq	12f1c <table_compare_ulong@@Base+0x2c>
   12f00:	ldr	r2, [r0]
   12f04:	ldr	r3, [r1]
   12f08:	cmp	r2, r3
   12f0c:	bhi	12f1c <table_compare_ulong@@Base+0x2c>
   12f10:	mvncc	r0, #0
   12f14:	movcs	r0, #0
   12f18:	bx	lr
   12f1c:	mov	r0, #1
   12f20:	bx	lr
   12f24:	adds	r0, r1, #0
   12f28:	mvnne	r0, #0
   12f2c:	bx	lr

00012f30 <table_compare_int@@Base>:
   12f30:	cmp	r0, #0
   12f34:	beq	12f64 <table_compare_int@@Base+0x34>
   12f38:	cmp	r1, #0
   12f3c:	beq	12f5c <table_compare_int@@Base+0x2c>
   12f40:	ldr	r2, [r0]
   12f44:	ldr	r3, [r1]
   12f48:	cmp	r2, r3
   12f4c:	bgt	12f5c <table_compare_int@@Base+0x2c>
   12f50:	mvnlt	r0, #0
   12f54:	movge	r0, #0
   12f58:	bx	lr
   12f5c:	mov	r0, #1
   12f60:	bx	lr
   12f64:	adds	r0, r1, #0
   12f68:	mvnne	r0, #0
   12f6c:	bx	lr

00012f70 <table_compare_uint@@Base>:
   12f70:	cmp	r0, #0
   12f74:	beq	12fa4 <table_compare_uint@@Base+0x34>
   12f78:	cmp	r1, #0
   12f7c:	beq	12f9c <table_compare_uint@@Base+0x2c>
   12f80:	ldr	r2, [r0]
   12f84:	ldr	r3, [r1]
   12f88:	cmp	r2, r3
   12f8c:	bhi	12f9c <table_compare_uint@@Base+0x2c>
   12f90:	mvncc	r0, #0
   12f94:	movcs	r0, #0
   12f98:	bx	lr
   12f9c:	mov	r0, #1
   12fa0:	bx	lr
   12fa4:	adds	r0, r1, #0
   12fa8:	mvnne	r0, #0
   12fac:	bx	lr

00012fb0 <table_compare_int16@@Base>:
   12fb0:	cmp	r0, #0
   12fb4:	beq	12fe4 <table_compare_int16@@Base+0x34>
   12fb8:	cmp	r1, #0
   12fbc:	beq	12fdc <table_compare_int16@@Base+0x2c>
   12fc0:	ldrsh	r2, [r0]
   12fc4:	ldrsh	r3, [r1]
   12fc8:	cmp	r2, r3
   12fcc:	bgt	12fdc <table_compare_int16@@Base+0x2c>
   12fd0:	mvnlt	r0, #0
   12fd4:	movge	r0, #0
   12fd8:	bx	lr
   12fdc:	mov	r0, #1
   12fe0:	bx	lr
   12fe4:	adds	r0, r1, #0
   12fe8:	mvnne	r0, #0
   12fec:	bx	lr

00012ff0 <table_compare_uint16@@Base>:
   12ff0:	cmp	r0, #0
   12ff4:	beq	13024 <table_compare_uint16@@Base+0x34>
   12ff8:	cmp	r1, #0
   12ffc:	beq	1301c <table_compare_uint16@@Base+0x2c>
   13000:	ldrh	r2, [r0]
   13004:	ldrh	r3, [r1]
   13008:	cmp	r2, r3
   1300c:	bhi	1301c <table_compare_uint16@@Base+0x2c>
   13010:	mvncc	r0, #0
   13014:	movcs	r0, #0
   13018:	bx	lr
   1301c:	mov	r0, #1
   13020:	bx	lr
   13024:	adds	r0, r1, #0
   13028:	mvnne	r0, #0
   1302c:	bx	lr

00013030 <table_compare_int64@@Base>:
   13030:	cmp	r0, #0
   13034:	beq	13074 <table_compare_int64@@Base+0x44>
   13038:	cmp	r1, #0
   1303c:	beq	13080 <table_compare_int64@@Base+0x50>
   13040:	ldrd	r2, [r1]
   13044:	push	{r4, r5}
   13048:	ldrd	r4, [r0]
   1304c:	cmp	r2, r4
   13050:	sbcs	r1, r3, r5
   13054:	movlt	r0, #1
   13058:	blt	1306c <table_compare_int64@@Base+0x3c>
   1305c:	cmp	r4, r2
   13060:	sbcs	r3, r5, r3
   13064:	mvnlt	r0, #0
   13068:	movge	r0, #0
   1306c:	pop	{r4, r5}
   13070:	bx	lr
   13074:	adds	r0, r1, #0
   13078:	mvnne	r0, #0
   1307c:	bx	lr
   13080:	mov	r0, #1
   13084:	bx	lr

00013088 <table_compare_char@@Base>:
   13088:	cmp	r0, #0
   1308c:	beq	130bc <table_compare_char@@Base+0x34>
   13090:	cmp	r1, #0
   13094:	beq	130b4 <table_compare_char@@Base+0x2c>
   13098:	ldrb	r2, [r0]
   1309c:	ldrb	r3, [r1]
   130a0:	cmp	r2, r3
   130a4:	bhi	130b4 <table_compare_char@@Base+0x2c>
   130a8:	mvncc	r0, #0
   130ac:	movcs	r0, #0
   130b0:	bx	lr
   130b4:	mov	r0, #1
   130b8:	bx	lr
   130bc:	adds	r0, r1, #0
   130c0:	mvnne	r0, #0
   130c4:	bx	lr

000130c8 <table_compare_uint8@@Base>:
   130c8:	cmp	r0, #0
   130cc:	beq	130fc <table_compare_uint8@@Base+0x34>
   130d0:	cmp	r1, #0
   130d4:	beq	130f4 <table_compare_uint8@@Base+0x2c>
   130d8:	ldrb	r2, [r0]
   130dc:	ldrb	r3, [r1]
   130e0:	cmp	r2, r3
   130e4:	bhi	130f4 <table_compare_uint8@@Base+0x2c>
   130e8:	mvncc	r0, #0
   130ec:	movcs	r0, #0
   130f0:	bx	lr
   130f4:	mov	r0, #1
   130f8:	bx	lr
   130fc:	adds	r0, r1, #0
   13100:	mvnne	r0, #0
   13104:	bx	lr

00013108 <table_get_default_compare_function_for_data_type@@Base>:
   13108:	cmp	r0, #23
   1310c:	ldrls	r3, [pc, #8]	; 1311c <table_get_default_compare_function_for_data_type@@Base+0x14>
   13110:	ldrls	r0, [r3, r0, lsl #2]
   13114:	movhi	r0, #0
   13118:	bx	lr
   1311c:			; <UNDEFINED> instruction: 0x000151bc

00013120 <table_get@@Base>:
   13120:	push	{r4, lr}
   13124:	bl	14edc <table_get_cell_ptr@@Base>
   13128:	ldr	r0, [r0]
   1312c:	pop	{r4, pc}

00013130 <table_get_bool@@Base>:
   13130:	push	{r4, lr}
   13134:	bl	14edc <table_get_cell_ptr@@Base>
   13138:	ldr	r3, [r0]
   1313c:	ldrb	r0, [r3]
   13140:	pop	{r4, pc}

00013144 <table_get_int@@Base>:
   13144:	push	{r4, lr}
   13148:	bl	14edc <table_get_cell_ptr@@Base>
   1314c:	ldr	r3, [r0]
   13150:	ldr	r0, [r3]
   13154:	pop	{r4, pc}

00013158 <table_get_uint@@Base>:
   13158:	push	{r4, lr}
   1315c:	bl	14edc <table_get_cell_ptr@@Base>
   13160:	ldr	r3, [r0]
   13164:	ldr	r0, [r3]
   13168:	pop	{r4, pc}

0001316c <table_get_int8@@Base>:
   1316c:	push	{r4, lr}
   13170:	bl	14edc <table_get_cell_ptr@@Base>
   13174:	ldr	r3, [r0]
   13178:	ldrsb	r0, [r3]
   1317c:	pop	{r4, pc}

00013180 <table_get_uint8@@Base>:
   13180:	push	{r4, lr}
   13184:	bl	14edc <table_get_cell_ptr@@Base>
   13188:	ldr	r3, [r0]
   1318c:	ldrb	r0, [r3]
   13190:	pop	{r4, pc}

00013194 <table_get_int16@@Base>:
   13194:	push	{r4, lr}
   13198:	bl	14edc <table_get_cell_ptr@@Base>
   1319c:	ldr	r3, [r0]
   131a0:	ldrsh	r0, [r3]
   131a4:	pop	{r4, pc}

000131a8 <table_get_uint16@@Base>:
   131a8:	push	{r4, lr}
   131ac:	bl	14edc <table_get_cell_ptr@@Base>
   131b0:	ldr	r3, [r0]
   131b4:	ldrh	r0, [r3]
   131b8:	pop	{r4, pc}

000131bc <table_get_int32@@Base>:
   131bc:	push	{r4, lr}
   131c0:	bl	14edc <table_get_cell_ptr@@Base>
   131c4:	ldr	r3, [r0]
   131c8:	ldr	r0, [r3]
   131cc:	pop	{r4, pc}

000131d0 <table_get_uint32@@Base>:
   131d0:	push	{r4, lr}
   131d4:	bl	14edc <table_get_cell_ptr@@Base>
   131d8:	ldr	r3, [r0]
   131dc:	ldr	r0, [r3]
   131e0:	pop	{r4, pc}

000131e4 <table_get_int64@@Base>:
   131e4:	push	{r4, lr}
   131e8:	bl	14edc <table_get_cell_ptr@@Base>
   131ec:	ldr	r3, [r0]
   131f0:	ldrd	r0, [r3]
   131f4:	pop	{r4, pc}

000131f8 <table_get_uint64@@Base>:
   131f8:	push	{r4, lr}
   131fc:	bl	14edc <table_get_cell_ptr@@Base>
   13200:	ldr	r3, [r0]
   13204:	ldrd	r0, [r3]
   13208:	pop	{r4, pc}

0001320c <table_get_short@@Base>:
   1320c:	push	{r4, lr}
   13210:	bl	14edc <table_get_cell_ptr@@Base>
   13214:	ldr	r3, [r0]
   13218:	ldrsh	r0, [r3]
   1321c:	pop	{r4, pc}

00013220 <table_get_ushort@@Base>:
   13220:	push	{r4, lr}
   13224:	bl	14edc <table_get_cell_ptr@@Base>
   13228:	ldr	r3, [r0]
   1322c:	ldrh	r0, [r3]
   13230:	pop	{r4, pc}

00013234 <table_get_long@@Base>:
   13234:	push	{r4, lr}
   13238:	bl	14edc <table_get_cell_ptr@@Base>
   1323c:	ldr	r3, [r0]
   13240:	ldr	r0, [r3]
   13244:	pop	{r4, pc}

00013248 <table_get_ulong@@Base>:
   13248:	push	{r4, lr}
   1324c:	bl	14edc <table_get_cell_ptr@@Base>
   13250:	ldr	r3, [r0]
   13254:	ldr	r0, [r3]
   13258:	pop	{r4, pc}

0001325c <table_get_llong@@Base>:
   1325c:	push	{r4, lr}
   13260:	bl	14edc <table_get_cell_ptr@@Base>
   13264:	ldr	r3, [r0]
   13268:	ldrd	r0, [r3]
   1326c:	pop	{r4, pc}

00013270 <table_get_ullong@@Base>:
   13270:	push	{r4, lr}
   13274:	bl	14edc <table_get_cell_ptr@@Base>
   13278:	ldr	r3, [r0]
   1327c:	ldrd	r0, [r3]
   13280:	pop	{r4, pc}

00013284 <table_get_float@@Base>:
   13284:	push	{r4, lr}
   13288:	bl	14edc <table_get_cell_ptr@@Base>
   1328c:	ldr	r3, [r0]
   13290:	vldr	s0, [r3]
   13294:	pop	{r4, pc}

00013298 <table_get_double@@Base>:
   13298:	push	{r4, lr}
   1329c:	bl	14edc <table_get_cell_ptr@@Base>
   132a0:	ldr	r3, [r0]
   132a4:	vldr	d0, [r3]
   132a8:	pop	{r4, pc}

000132ac <table_get_ldouble@@Base>:
   132ac:	push	{r4, lr}
   132b0:	bl	14edc <table_get_cell_ptr@@Base>
   132b4:	ldr	r3, [r0]
   132b8:	vldr	d0, [r3]
   132bc:	pop	{r4, pc}

000132c0 <table_get_char@@Base>:
   132c0:	push	{r4, lr}
   132c4:	bl	14edc <table_get_cell_ptr@@Base>
   132c8:	ldr	r3, [r0]
   132cc:	ldrb	r0, [r3]
   132d0:	pop	{r4, pc}

000132d4 <table_get_uchar@@Base>:
   132d4:	push	{r4, lr}
   132d8:	bl	14edc <table_get_cell_ptr@@Base>
   132dc:	ldr	r3, [r0]
   132e0:	ldrb	r0, [r3]
   132e4:	pop	{r4, pc}

000132e8 <table_get_string@@Base>:
   132e8:	push	{r4, lr}
   132ec:	bl	14edc <table_get_cell_ptr@@Base>
   132f0:	ldr	r0, [r0]
   132f4:	pop	{r4, pc}

000132f8 <table_get_ptr@@Base>:
   132f8:	push	{r4, lr}
   132fc:	bl	14edc <table_get_cell_ptr@@Base>
   13300:	ldr	r0, [r0]
   13304:	pop	{r4, pc}

00013308 <table_row_init@@Base>:
   13308:	ldr	r3, [r0, #12]
   1330c:	push	{r4, r5, r6, lr}
   13310:	mov	r5, r1
   13314:	ldr	r4, [r0, #16]
   13318:	lsl	r0, r3, #2
   1331c:	bl	11b4c <malloc@plt>
   13320:	str	r0, [r4, r5, lsl #2]
   13324:	pop	{r4, r5, r6, pc}

00013328 <table_row_destroy@@Base>:
   13328:	push	{r4, r5, r6, r7, r8, lr}
   1332c:	mov	r6, r0
   13330:	mov	r5, r1
   13334:	bl	12774 <table_get_column_length@@Base>
   13338:	ldr	r8, [r6, #16]
   1333c:	subs	r7, r0, #0
   13340:	movgt	r4, #0
   13344:	ble	13364 <table_row_destroy@@Base+0x3c>
   13348:	mov	r2, r4
   1334c:	mov	r1, r5
   13350:	add	r4, r4, #1
   13354:	mov	r0, r6
   13358:	bl	144a0 <table_cell_destroy@@Base>
   1335c:	cmp	r7, r4
   13360:	bne	13348 <table_row_destroy@@Base+0x20>
   13364:	ldr	r0, [r8, r5, lsl #2]
   13368:	cmp	r0, #0
   1336c:	beq	13378 <table_row_destroy@@Base+0x50>
   13370:	pop	{r4, r5, r6, r7, r8, lr}
   13374:	b	11b1c <free@plt>
   13378:	pop	{r4, r5, r6, r7, r8, pc}

0001337c <table_get_row_length@@Base>:
   1337c:	ldr	r0, [r0, #20]
   13380:	bx	lr

00013384 <table_add_row@@Base>:
   13384:	push	{r4, r5, r6, r7, r8, lr}
   13388:	mov	r5, r0
   1338c:	ldr	r4, [r0, #24]
   13390:	ldr	r6, [r0, #20]
   13394:	mov	r1, r4
   13398:	mov	r0, r6
   1339c:	bl	150e0 <table_get_cell_ptr@@Base+0x204>
   133a0:	cmp	r1, #0
   133a4:	bne	133c8 <table_add_row@@Base+0x44>
   133a8:	ldr	r1, [r5, #28]
   133ac:	ldr	r0, [r5, #16]
   133b0:	add	r1, r4, r1
   133b4:	str	r1, [r5, #28]
   133b8:	lsl	r1, r1, #2
   133bc:	bl	11b34 <realloc@plt>
   133c0:	ldr	r6, [r5, #20]
   133c4:	str	r0, [r5, #16]
   133c8:	mov	r0, r5
   133cc:	bl	12774 <table_get_column_length@@Base>
   133d0:	ldr	r4, [r5, #16]
   133d4:	mov	r7, r0
   133d8:	ldr	r0, [r5, #12]
   133dc:	lsl	r0, r0, #2
   133e0:	bl	11b4c <malloc@plt>
   133e4:	cmp	r7, #0
   133e8:	str	r0, [r4, r6, lsl #2]
   133ec:	ble	13410 <table_add_row@@Base+0x8c>
   133f0:	mov	r4, #0
   133f4:	mov	r2, r4
   133f8:	mov	r1, r6
   133fc:	add	r4, r4, #1
   13400:	mov	r0, r5
   13404:	bl	14484 <table_cell_init@@Base>
   13408:	cmp	r7, r4
   1340c:	bne	133f4 <table_add_row@@Base+0x70>
   13410:	mov	r0, r5
   13414:	mov	r3, #2
   13418:	mvn	r2, #0
   1341c:	ldr	r1, [r5, #20]
   13420:	bl	12684 <table_notify@@Base>
   13424:	ldr	r0, [r5, #20]
   13428:	add	r3, r0, #1
   1342c:	str	r3, [r5, #20]
   13430:	pop	{r4, r5, r6, r7, r8, pc}

00013434 <table_remove_row@@Base>:
   13434:	push	{r4, r5, r6, r7, r8, lr}
   13438:	mov	r5, r0
   1343c:	mov	r6, r1
   13440:	ldr	r7, [r0, #20]
   13444:	bl	12774 <table_get_column_length@@Base>
   13448:	subs	r8, r0, #0
   1344c:	movgt	r4, #0
   13450:	ble	13494 <table_remove_row@@Base+0x60>
   13454:	mov	r1, r4
   13458:	mov	r0, r5
   1345c:	bl	127e4 <table_get_column_data_type@@Base>
   13460:	mov	r2, r4
   13464:	mov	r1, r6
   13468:	add	r4, r4, #1
   1346c:	cmp	r0, #23
   13470:	mov	r0, r5
   13474:	beq	1348c <table_remove_row@@Base+0x58>
   13478:	bl	14edc <table_get_cell_ptr@@Base>
   1347c:	ldr	r3, [r0]
   13480:	subs	r0, r3, #0
   13484:	beq	1348c <table_remove_row@@Base+0x58>
   13488:	bl	11b1c <free@plt>
   1348c:	cmp	r8, r4
   13490:	bne	13454 <table_remove_row@@Base+0x20>
   13494:	ldr	r3, [r5, #16]
   13498:	lsl	r4, r6, #2
   1349c:	ldr	r0, [r3, r6, lsl #2]
   134a0:	cmp	r0, #0
   134a4:	beq	134ac <table_remove_row@@Base+0x78>
   134a8:	bl	11b1c <free@plt>
   134ac:	sub	ip, r7, #1
   134b0:	cmp	r6, ip
   134b4:	movlt	r3, r6
   134b8:	bge	134dc <table_remove_row@@Base+0xa8>
   134bc:	ldr	r1, [r5, #16]
   134c0:	add	r2, r4, #4
   134c4:	add	r3, r3, #1
   134c8:	ldr	r0, [r1, r2]
   134cc:	cmp	r3, ip
   134d0:	str	r0, [r1, r4]
   134d4:	mov	r4, r2
   134d8:	bne	134bc <table_remove_row@@Base+0x88>
   134dc:	ldr	r0, [r5, #20]
   134e0:	ldr	r4, [r5, #24]
   134e4:	sub	r0, r0, #1
   134e8:	str	r0, [r5, #20]
   134ec:	mov	r1, r4
   134f0:	bl	150e0 <table_get_cell_ptr@@Base+0x204>
   134f4:	cmp	r1, #0
   134f8:	bne	13518 <table_remove_row@@Base+0xe4>
   134fc:	ldr	r1, [r5, #28]
   13500:	ldr	r0, [r5, #16]
   13504:	sub	r1, r1, r4
   13508:	str	r1, [r5, #28]
   1350c:	lsl	r1, r1, #2
   13510:	bl	11b34 <realloc@plt>
   13514:	str	r0, [r5, #16]
   13518:	mov	r0, r5
   1351c:	mov	r1, r6
   13520:	mov	r3, #4
   13524:	mvn	r2, #0
   13528:	bl	12684 <table_notify@@Base>
   1352c:	mov	r0, #0
   13530:	pop	{r4, r5, r6, r7, r8, pc}

00013534 <table_get_row_ptr@@Base>:
   13534:	ldr	r0, [r0, #16]
   13538:	add	r0, r0, r1, lsl #2
   1353c:	bx	lr

00013540 <table_set_row_ptr@@Base>:
   13540:	ldr	r3, [r0, #16]
   13544:	ldr	r2, [r2]
   13548:	str	r2, [r3, r1, lsl #2]
   1354c:	bx	lr

00013550 <table_set@@Base>:
   13550:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13554:	mov	r5, r0
   13558:	mov	r6, r2
   1355c:	ldr	r4, [sp, #32]
   13560:	mov	r9, r1
   13564:	mov	r7, r3
   13568:	bl	14edc <table_get_cell_ptr@@Base>
   1356c:	mov	r1, r6
   13570:	mov	r8, r0
   13574:	mov	r0, r5
   13578:	bl	12ac0 <table_get_col_ptr@@Base>
   1357c:	cmp	r4, #23
   13580:	ldrls	pc, [pc, r4, lsl #2]
   13584:	b	135fc <table_set@@Base+0xac>
   13588:	andeq	r3, r1, r0, lsr #15
   1358c:	muleq	r1, r0, r7
   13590:	andeq	r3, r1, r0, lsl #15
   13594:	andeq	r3, r1, r0, ror r7
   13598:	andeq	r3, r1, r0, ror #14
   1359c:	andeq	r3, r1, ip, lsr r7
   135a0:	andeq	r3, r1, ip, lsr #14
   135a4:	andeq	r3, r1, ip, lsl r7
   135a8:	andeq	r3, r1, r0, ror #15
   135ac:	ldrdeq	r3, [r1], -r0
   135b0:	andeq	r3, r1, r0, asr #15
   135b4:			; <UNDEFINED> instruction: 0x000137b0
   135b8:	andeq	r3, r1, ip, lsr #16
   135bc:	andeq	r3, r1, ip, lsl #16
   135c0:	andeq	r3, r1, ip, lsl r8
   135c4:	andeq	r3, r1, ip, lsl #14
   135c8:	andeq	r3, r1, r8, ror #13
   135cc:	ldrdeq	r3, [r1], -r8
   135d0:	andeq	r3, r1, ip, lsr #13
   135d4:	muleq	r1, ip, r6
   135d8:	andeq	r3, r1, ip, lsl #13
   135dc:	andeq	r3, r1, r4, asr r6
   135e0:	andeq	r3, r1, r0, lsr r6
   135e4:	andeq	r3, r1, r4, lsl #12
   135e8:	bl	11b4c <malloc@plt>
   135ec:	cmp	r0, #0
   135f0:	mov	r3, r0
   135f4:	str	r0, [r8]
   135f8:	bne	137f8 <table_set@@Base+0x2a8>
   135fc:	mvn	r0, #0
   13600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13604:	ldr	r3, [r0, #4]
   13608:	cmp	r3, #23
   1360c:	bne	135fc <table_set@@Base+0xac>
   13610:	str	r7, [r8]
   13614:	mov	r0, r5
   13618:	mov	r2, r6
   1361c:	mov	r1, r9
   13620:	mov	r3, #1
   13624:	bl	12684 <table_notify@@Base>
   13628:	mov	r0, #0
   1362c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13630:	ldr	r3, [r0, #4]
   13634:	cmp	r3, #22
   13638:	bne	135fc <table_set@@Base+0xac>
   1363c:	ldr	r0, [r8]
   13640:	cmp	r0, #0
   13644:	beq	13854 <table_set@@Base+0x304>
   13648:	ldrb	r3, [r7]
   1364c:	strb	r3, [r0]
   13650:	b	13614 <table_set@@Base+0xc4>
   13654:	ldr	r3, [r0, #4]
   13658:	cmp	r3, #21
   1365c:	bne	135fc <table_set@@Base+0xac>
   13660:	mov	r0, r7
   13664:	bl	11b70 <strlen@plt>
   13668:	add	r1, r0, #1
   1366c:	ldr	r0, [r8]
   13670:	bl	11b34 <realloc@plt>
   13674:	cmp	r0, #0
   13678:	str	r0, [r8]
   1367c:	beq	135fc <table_set@@Base+0xac>
   13680:	mov	r1, r7
   13684:	bl	11b40 <strcpy@plt>
   13688:	b	13614 <table_set@@Base+0xc4>
   1368c:	ldr	r3, [r0, #4]
   13690:	cmp	r3, #20
   13694:	beq	1363c <table_set@@Base+0xec>
   13698:	b	135fc <table_set@@Base+0xac>
   1369c:	ldr	r3, [r0, #4]
   136a0:	cmp	r3, #19
   136a4:	beq	1363c <table_set@@Base+0xec>
   136a8:	b	135fc <table_set@@Base+0xac>
   136ac:	ldr	r3, [r0, #4]
   136b0:	cmp	r3, #18
   136b4:	bne	135fc <table_set@@Base+0xac>
   136b8:	ldr	r0, [r8]
   136bc:	cmp	r0, #0
   136c0:	beq	1386c <table_set@@Base+0x31c>
   136c4:	ldr	r2, [r7]
   136c8:	ldr	r3, [r7, #4]
   136cc:	str	r2, [r0]
   136d0:	str	r3, [r0, #4]
   136d4:	b	13614 <table_set@@Base+0xc4>
   136d8:	ldr	r3, [r0, #4]
   136dc:	cmp	r3, #17
   136e0:	beq	136b8 <table_set@@Base+0x168>
   136e4:	b	135fc <table_set@@Base+0xac>
   136e8:	ldr	r3, [r0, #4]
   136ec:	cmp	r3, #16
   136f0:	bne	135fc <table_set@@Base+0xac>
   136f4:	ldr	r0, [r8]
   136f8:	cmp	r0, #0
   136fc:	beq	1383c <table_set@@Base+0x2ec>
   13700:	ldr	r3, [r7]
   13704:	str	r3, [r0]
   13708:	b	13614 <table_set@@Base+0xc4>
   1370c:	ldr	r3, [r0, #4]
   13710:	cmp	r3, #15
   13714:	beq	136b8 <table_set@@Base+0x168>
   13718:	b	135fc <table_set@@Base+0xac>
   1371c:	ldr	r3, [r0, #4]
   13720:	cmp	r3, #7
   13724:	beq	136f4 <table_set@@Base+0x1a4>
   13728:	b	135fc <table_set@@Base+0xac>
   1372c:	ldr	r3, [r0, #4]
   13730:	cmp	r3, #6
   13734:	beq	136f4 <table_set@@Base+0x1a4>
   13738:	b	135fc <table_set@@Base+0xac>
   1373c:	ldr	r3, [r0, #4]
   13740:	cmp	r3, #5
   13744:	bne	135fc <table_set@@Base+0xac>
   13748:	ldr	r0, [r8]
   1374c:	cmp	r0, #0
   13750:	beq	13884 <table_set@@Base+0x334>
   13754:	ldrh	r3, [r7]
   13758:	strh	r3, [r0]
   1375c:	b	13614 <table_set@@Base+0xc4>
   13760:	ldr	r3, [r0, #4]
   13764:	cmp	r3, #4
   13768:	beq	13748 <table_set@@Base+0x1f8>
   1376c:	b	135fc <table_set@@Base+0xac>
   13770:	ldr	r3, [r0, #4]
   13774:	cmp	r3, #3
   13778:	beq	1363c <table_set@@Base+0xec>
   1377c:	b	135fc <table_set@@Base+0xac>
   13780:	ldr	r3, [r0, #4]
   13784:	cmp	r3, #2
   13788:	beq	1363c <table_set@@Base+0xec>
   1378c:	b	135fc <table_set@@Base+0xac>
   13790:	ldr	r3, [r0, #4]
   13794:	cmp	r3, #1
   13798:	beq	136f4 <table_set@@Base+0x1a4>
   1379c:	b	135fc <table_set@@Base+0xac>
   137a0:	ldr	r3, [r0, #4]
   137a4:	cmp	r3, #0
   137a8:	beq	136f4 <table_set@@Base+0x1a4>
   137ac:	b	135fc <table_set@@Base+0xac>
   137b0:	ldr	r3, [r0, #4]
   137b4:	cmp	r3, #11
   137b8:	beq	13748 <table_set@@Base+0x1f8>
   137bc:	b	135fc <table_set@@Base+0xac>
   137c0:	ldr	r3, [r0, #4]
   137c4:	cmp	r3, #10
   137c8:	beq	13748 <table_set@@Base+0x1f8>
   137cc:	b	135fc <table_set@@Base+0xac>
   137d0:	ldr	r3, [r0, #4]
   137d4:	cmp	r3, #9
   137d8:	beq	136b8 <table_set@@Base+0x168>
   137dc:	b	135fc <table_set@@Base+0xac>
   137e0:	ldr	r0, [r0, #4]
   137e4:	cmp	r0, #8
   137e8:	bne	135fc <table_set@@Base+0xac>
   137ec:	ldr	r3, [r8]
   137f0:	cmp	r3, #0
   137f4:	beq	135e8 <table_set@@Base+0x98>
   137f8:	ldr	r1, [r7]
   137fc:	ldr	r2, [r7, #4]
   13800:	str	r1, [r3]
   13804:	str	r2, [r3, #4]
   13808:	b	13614 <table_set@@Base+0xc4>
   1380c:	ldr	r3, [r0, #4]
   13810:	cmp	r3, #13
   13814:	beq	136f4 <table_set@@Base+0x1a4>
   13818:	b	135fc <table_set@@Base+0xac>
   1381c:	ldr	r3, [r0, #4]
   13820:	cmp	r3, #14
   13824:	beq	136b8 <table_set@@Base+0x168>
   13828:	b	135fc <table_set@@Base+0xac>
   1382c:	ldr	r3, [r0, #4]
   13830:	cmp	r3, #12
   13834:	beq	136f4 <table_set@@Base+0x1a4>
   13838:	b	135fc <table_set@@Base+0xac>
   1383c:	mov	r0, #4
   13840:	bl	11b4c <malloc@plt>
   13844:	cmp	r0, #0
   13848:	str	r0, [r8]
   1384c:	bne	13700 <table_set@@Base+0x1b0>
   13850:	b	135fc <table_set@@Base+0xac>
   13854:	mov	r0, #1
   13858:	bl	11b4c <malloc@plt>
   1385c:	cmp	r0, #0
   13860:	str	r0, [r8]
   13864:	bne	13648 <table_set@@Base+0xf8>
   13868:	b	135fc <table_set@@Base+0xac>
   1386c:	mov	r0, #8
   13870:	bl	11b4c <malloc@plt>
   13874:	cmp	r0, #0
   13878:	str	r0, [r8]
   1387c:	bne	136c4 <table_set@@Base+0x174>
   13880:	b	135fc <table_set@@Base+0xac>
   13884:	mov	r0, #2
   13888:	bl	11b4c <malloc@plt>
   1388c:	cmp	r0, #0
   13890:	str	r0, [r8]
   13894:	bne	13754 <table_set@@Base+0x204>
   13898:	b	135fc <table_set@@Base+0xac>

0001389c <table_set_bool@@Base>:
   1389c:	push	{r4, r5, r6, r7, r8, lr}
   138a0:	mov	r5, r2
   138a4:	mov	r4, r0
   138a8:	mov	r8, r3
   138ac:	mov	r7, r1
   138b0:	bl	14edc <table_get_cell_ptr@@Base>
   138b4:	mov	r1, r5
   138b8:	mov	r6, r0
   138bc:	mov	r0, r4
   138c0:	bl	12ac0 <table_get_col_ptr@@Base>
   138c4:	ldr	r2, [r0, #4]
   138c8:	cmp	r2, #22
   138cc:	bne	13910 <table_set_bool@@Base+0x74>
   138d0:	ldr	r0, [r6]
   138d4:	cmp	r0, #0
   138d8:	beq	138fc <table_set_bool@@Base+0x60>
   138dc:	strb	r8, [r0]
   138e0:	mov	r2, r5
   138e4:	mov	r0, r4
   138e8:	mov	r1, r7
   138ec:	mov	r3, #1
   138f0:	bl	12684 <table_notify@@Base>
   138f4:	mov	r0, #0
   138f8:	pop	{r4, r5, r6, r7, r8, pc}
   138fc:	mov	r0, #1
   13900:	bl	11b4c <malloc@plt>
   13904:	cmp	r0, #0
   13908:	str	r0, [r6]
   1390c:	bne	138dc <table_set_bool@@Base+0x40>
   13910:	mvn	r0, #0
   13914:	pop	{r4, r5, r6, r7, r8, pc}

00013918 <table_set_int@@Base>:
   13918:	push	{r4, r5, r6, r7, r8, lr}
   1391c:	mov	r5, r2
   13920:	mov	r4, r0
   13924:	mov	r8, r3
   13928:	mov	r7, r1
   1392c:	bl	14edc <table_get_cell_ptr@@Base>
   13930:	mov	r1, r5
   13934:	mov	r6, r0
   13938:	mov	r0, r4
   1393c:	bl	12ac0 <table_get_col_ptr@@Base>
   13940:	ldr	r2, [r0, #4]
   13944:	cmp	r2, #0
   13948:	bne	1398c <table_set_int@@Base+0x74>
   1394c:	ldr	r0, [r6]
   13950:	cmp	r0, #0
   13954:	beq	13978 <table_set_int@@Base+0x60>
   13958:	str	r8, [r0]
   1395c:	mov	r2, r5
   13960:	mov	r0, r4
   13964:	mov	r1, r7
   13968:	mov	r3, #1
   1396c:	bl	12684 <table_notify@@Base>
   13970:	mov	r0, #0
   13974:	pop	{r4, r5, r6, r7, r8, pc}
   13978:	mov	r0, #4
   1397c:	bl	11b4c <malloc@plt>
   13980:	cmp	r0, #0
   13984:	str	r0, [r6]
   13988:	bne	13958 <table_set_int@@Base+0x40>
   1398c:	mvn	r0, #0
   13990:	pop	{r4, r5, r6, r7, r8, pc}

00013994 <table_set_uint@@Base>:
   13994:	push	{r4, r5, r6, r7, r8, lr}
   13998:	mov	r5, r2
   1399c:	mov	r4, r0
   139a0:	mov	r8, r3
   139a4:	mov	r7, r1
   139a8:	bl	14edc <table_get_cell_ptr@@Base>
   139ac:	mov	r1, r5
   139b0:	mov	r6, r0
   139b4:	mov	r0, r4
   139b8:	bl	12ac0 <table_get_col_ptr@@Base>
   139bc:	ldr	r2, [r0, #4]
   139c0:	cmp	r2, #1
   139c4:	bne	13a08 <table_set_uint@@Base+0x74>
   139c8:	ldr	r0, [r6]
   139cc:	cmp	r0, #0
   139d0:	beq	139f4 <table_set_uint@@Base+0x60>
   139d4:	str	r8, [r0]
   139d8:	mov	r2, r5
   139dc:	mov	r0, r4
   139e0:	mov	r1, r7
   139e4:	mov	r3, #1
   139e8:	bl	12684 <table_notify@@Base>
   139ec:	mov	r0, #0
   139f0:	pop	{r4, r5, r6, r7, r8, pc}
   139f4:	mov	r0, #4
   139f8:	bl	11b4c <malloc@plt>
   139fc:	cmp	r0, #0
   13a00:	str	r0, [r6]
   13a04:	bne	139d4 <table_set_uint@@Base+0x40>
   13a08:	mvn	r0, #0
   13a0c:	pop	{r4, r5, r6, r7, r8, pc}

00013a10 <table_set_int8@@Base>:
   13a10:	push	{r4, r5, r6, r7, r8, lr}
   13a14:	mov	r5, r2
   13a18:	mov	r4, r0
   13a1c:	mov	r8, r3
   13a20:	mov	r7, r1
   13a24:	bl	14edc <table_get_cell_ptr@@Base>
   13a28:	mov	r1, r5
   13a2c:	mov	r6, r0
   13a30:	mov	r0, r4
   13a34:	bl	12ac0 <table_get_col_ptr@@Base>
   13a38:	ldr	r2, [r0, #4]
   13a3c:	cmp	r2, #2
   13a40:	bne	13a84 <table_set_int8@@Base+0x74>
   13a44:	ldr	r0, [r6]
   13a48:	cmp	r0, #0
   13a4c:	beq	13a70 <table_set_int8@@Base+0x60>
   13a50:	strb	r8, [r0]
   13a54:	mov	r2, r5
   13a58:	mov	r0, r4
   13a5c:	mov	r1, r7
   13a60:	mov	r3, #1
   13a64:	bl	12684 <table_notify@@Base>
   13a68:	mov	r0, #0
   13a6c:	pop	{r4, r5, r6, r7, r8, pc}
   13a70:	mov	r0, #1
   13a74:	bl	11b4c <malloc@plt>
   13a78:	cmp	r0, #0
   13a7c:	str	r0, [r6]
   13a80:	bne	13a50 <table_set_int8@@Base+0x40>
   13a84:	mvn	r0, #0
   13a88:	pop	{r4, r5, r6, r7, r8, pc}

00013a8c <table_set_uint8@@Base>:
   13a8c:	push	{r4, r5, r6, r7, r8, lr}
   13a90:	mov	r5, r2
   13a94:	mov	r4, r0
   13a98:	mov	r8, r3
   13a9c:	mov	r7, r1
   13aa0:	bl	14edc <table_get_cell_ptr@@Base>
   13aa4:	mov	r1, r5
   13aa8:	mov	r6, r0
   13aac:	mov	r0, r4
   13ab0:	bl	12ac0 <table_get_col_ptr@@Base>
   13ab4:	ldr	r2, [r0, #4]
   13ab8:	cmp	r2, #3
   13abc:	bne	13b00 <table_set_uint8@@Base+0x74>
   13ac0:	ldr	r0, [r6]
   13ac4:	cmp	r0, #0
   13ac8:	beq	13aec <table_set_uint8@@Base+0x60>
   13acc:	strb	r8, [r0]
   13ad0:	mov	r2, r5
   13ad4:	mov	r0, r4
   13ad8:	mov	r1, r7
   13adc:	mov	r3, #1
   13ae0:	bl	12684 <table_notify@@Base>
   13ae4:	mov	r0, #0
   13ae8:	pop	{r4, r5, r6, r7, r8, pc}
   13aec:	mov	r0, #1
   13af0:	bl	11b4c <malloc@plt>
   13af4:	cmp	r0, #0
   13af8:	str	r0, [r6]
   13afc:	bne	13acc <table_set_uint8@@Base+0x40>
   13b00:	mvn	r0, #0
   13b04:	pop	{r4, r5, r6, r7, r8, pc}

00013b08 <table_set_int16@@Base>:
   13b08:	push	{r4, r5, r6, r7, r8, lr}
   13b0c:	mov	r5, r2
   13b10:	mov	r4, r0
   13b14:	mov	r8, r3
   13b18:	mov	r7, r1
   13b1c:	bl	14edc <table_get_cell_ptr@@Base>
   13b20:	mov	r1, r5
   13b24:	mov	r6, r0
   13b28:	mov	r0, r4
   13b2c:	bl	12ac0 <table_get_col_ptr@@Base>
   13b30:	ldr	r2, [r0, #4]
   13b34:	cmp	r2, #4
   13b38:	bne	13b7c <table_set_int16@@Base+0x74>
   13b3c:	ldr	r0, [r6]
   13b40:	cmp	r0, #0
   13b44:	beq	13b68 <table_set_int16@@Base+0x60>
   13b48:	strh	r8, [r0]
   13b4c:	mov	r2, r5
   13b50:	mov	r0, r4
   13b54:	mov	r1, r7
   13b58:	mov	r3, #1
   13b5c:	bl	12684 <table_notify@@Base>
   13b60:	mov	r0, #0
   13b64:	pop	{r4, r5, r6, r7, r8, pc}
   13b68:	mov	r0, #2
   13b6c:	bl	11b4c <malloc@plt>
   13b70:	cmp	r0, #0
   13b74:	str	r0, [r6]
   13b78:	bne	13b48 <table_set_int16@@Base+0x40>
   13b7c:	mvn	r0, #0
   13b80:	pop	{r4, r5, r6, r7, r8, pc}

00013b84 <table_set_uint16@@Base>:
   13b84:	push	{r4, r5, r6, r7, r8, lr}
   13b88:	mov	r5, r2
   13b8c:	mov	r4, r0
   13b90:	mov	r8, r3
   13b94:	mov	r7, r1
   13b98:	bl	14edc <table_get_cell_ptr@@Base>
   13b9c:	mov	r1, r5
   13ba0:	mov	r6, r0
   13ba4:	mov	r0, r4
   13ba8:	bl	12ac0 <table_get_col_ptr@@Base>
   13bac:	ldr	r2, [r0, #4]
   13bb0:	cmp	r2, #5
   13bb4:	bne	13bf8 <table_set_uint16@@Base+0x74>
   13bb8:	ldr	r0, [r6]
   13bbc:	cmp	r0, #0
   13bc0:	beq	13be4 <table_set_uint16@@Base+0x60>
   13bc4:	strh	r8, [r0]
   13bc8:	mov	r2, r5
   13bcc:	mov	r0, r4
   13bd0:	mov	r1, r7
   13bd4:	mov	r3, #1
   13bd8:	bl	12684 <table_notify@@Base>
   13bdc:	mov	r0, #0
   13be0:	pop	{r4, r5, r6, r7, r8, pc}
   13be4:	mov	r0, #2
   13be8:	bl	11b4c <malloc@plt>
   13bec:	cmp	r0, #0
   13bf0:	str	r0, [r6]
   13bf4:	bne	13bc4 <table_set_uint16@@Base+0x40>
   13bf8:	mvn	r0, #0
   13bfc:	pop	{r4, r5, r6, r7, r8, pc}

00013c00 <table_set_int32@@Base>:
   13c00:	push	{r4, r5, r6, r7, r8, lr}
   13c04:	mov	r5, r2
   13c08:	mov	r4, r0
   13c0c:	mov	r8, r3
   13c10:	mov	r7, r1
   13c14:	bl	14edc <table_get_cell_ptr@@Base>
   13c18:	mov	r1, r5
   13c1c:	mov	r6, r0
   13c20:	mov	r0, r4
   13c24:	bl	12ac0 <table_get_col_ptr@@Base>
   13c28:	ldr	r2, [r0, #4]
   13c2c:	cmp	r2, #6
   13c30:	bne	13c74 <table_set_int32@@Base+0x74>
   13c34:	ldr	r0, [r6]
   13c38:	cmp	r0, #0
   13c3c:	beq	13c60 <table_set_int32@@Base+0x60>
   13c40:	str	r8, [r0]
   13c44:	mov	r2, r5
   13c48:	mov	r0, r4
   13c4c:	mov	r1, r7
   13c50:	mov	r3, #1
   13c54:	bl	12684 <table_notify@@Base>
   13c58:	mov	r0, #0
   13c5c:	pop	{r4, r5, r6, r7, r8, pc}
   13c60:	mov	r0, #4
   13c64:	bl	11b4c <malloc@plt>
   13c68:	cmp	r0, #0
   13c6c:	str	r0, [r6]
   13c70:	bne	13c40 <table_set_int32@@Base+0x40>
   13c74:	mvn	r0, #0
   13c78:	pop	{r4, r5, r6, r7, r8, pc}

00013c7c <table_set_uint32@@Base>:
   13c7c:	push	{r4, r5, r6, r7, r8, lr}
   13c80:	mov	r5, r2
   13c84:	mov	r4, r0
   13c88:	mov	r8, r3
   13c8c:	mov	r7, r1
   13c90:	bl	14edc <table_get_cell_ptr@@Base>
   13c94:	mov	r1, r5
   13c98:	mov	r6, r0
   13c9c:	mov	r0, r4
   13ca0:	bl	12ac0 <table_get_col_ptr@@Base>
   13ca4:	ldr	r2, [r0, #4]
   13ca8:	cmp	r2, #7
   13cac:	bne	13cf0 <table_set_uint32@@Base+0x74>
   13cb0:	ldr	r0, [r6]
   13cb4:	cmp	r0, #0
   13cb8:	beq	13cdc <table_set_uint32@@Base+0x60>
   13cbc:	str	r8, [r0]
   13cc0:	mov	r2, r5
   13cc4:	mov	r0, r4
   13cc8:	mov	r1, r7
   13ccc:	mov	r3, #1
   13cd0:	bl	12684 <table_notify@@Base>
   13cd4:	mov	r0, #0
   13cd8:	pop	{r4, r5, r6, r7, r8, pc}
   13cdc:	mov	r0, #4
   13ce0:	bl	11b4c <malloc@plt>
   13ce4:	cmp	r0, #0
   13ce8:	str	r0, [r6]
   13cec:	bne	13cbc <table_set_uint32@@Base+0x40>
   13cf0:	mvn	r0, #0
   13cf4:	pop	{r4, r5, r6, r7, r8, pc}

00013cf8 <table_set_int64@@Base>:
   13cf8:	push	{r4, r5, r6, r7, r8, lr}
   13cfc:	mov	r5, r2
   13d00:	mov	r4, r0
   13d04:	mov	r7, r1
   13d08:	bl	14edc <table_get_cell_ptr@@Base>
   13d0c:	mov	r1, r5
   13d10:	mov	r6, r0
   13d14:	mov	r0, r4
   13d18:	bl	12ac0 <table_get_col_ptr@@Base>
   13d1c:	ldr	r0, [r0, #4]
   13d20:	cmp	r0, #8
   13d24:	bne	13d74 <table_set_int64@@Base+0x7c>
   13d28:	ldr	ip, [r6]
   13d2c:	cmp	ip, #0
   13d30:	beq	13d60 <table_set_int64@@Base+0x68>
   13d34:	add	r3, sp, #24
   13d38:	mov	r2, r5
   13d3c:	ldm	r3!, {r0, r1}
   13d40:	mov	r3, #1
   13d44:	str	r0, [ip]
   13d48:	str	r1, [ip, #4]
   13d4c:	mov	r0, r4
   13d50:	mov	r1, r7
   13d54:	bl	12684 <table_notify@@Base>
   13d58:	mov	r0, #0
   13d5c:	pop	{r4, r5, r6, r7, r8, pc}
   13d60:	bl	11b4c <malloc@plt>
   13d64:	cmp	r0, #0
   13d68:	mov	ip, r0
   13d6c:	str	r0, [r6]
   13d70:	bne	13d34 <table_set_int64@@Base+0x3c>
   13d74:	mvn	r0, #0
   13d78:	pop	{r4, r5, r6, r7, r8, pc}

00013d7c <table_set_uint64@@Base>:
   13d7c:	push	{r4, r5, r6, r7, r8, lr}
   13d80:	mov	r5, r2
   13d84:	mov	r4, r0
   13d88:	mov	r7, r1
   13d8c:	bl	14edc <table_get_cell_ptr@@Base>
   13d90:	mov	r1, r5
   13d94:	mov	r6, r0
   13d98:	mov	r0, r4
   13d9c:	bl	12ac0 <table_get_col_ptr@@Base>
   13da0:	ldr	r3, [r0, #4]
   13da4:	cmp	r3, #9
   13da8:	bne	13dfc <table_set_uint64@@Base+0x80>
   13dac:	ldr	ip, [r6]
   13db0:	cmp	ip, #0
   13db4:	beq	13de4 <table_set_uint64@@Base+0x68>
   13db8:	add	r3, sp, #24
   13dbc:	mov	r2, r5
   13dc0:	ldm	r3!, {r0, r1}
   13dc4:	mov	r3, #1
   13dc8:	str	r0, [ip]
   13dcc:	str	r1, [ip, #4]
   13dd0:	mov	r0, r4
   13dd4:	mov	r1, r7
   13dd8:	bl	12684 <table_notify@@Base>
   13ddc:	mov	r0, #0
   13de0:	pop	{r4, r5, r6, r7, r8, pc}
   13de4:	mov	r0, #8
   13de8:	bl	11b4c <malloc@plt>
   13dec:	cmp	r0, #0
   13df0:	mov	ip, r0
   13df4:	str	r0, [r6]
   13df8:	bne	13db8 <table_set_uint64@@Base+0x3c>
   13dfc:	mvn	r0, #0
   13e00:	pop	{r4, r5, r6, r7, r8, pc}

00013e04 <table_set_short@@Base>:
   13e04:	push	{r4, r5, r6, r7, r8, lr}
   13e08:	mov	r5, r2
   13e0c:	mov	r4, r0
   13e10:	mov	r8, r3
   13e14:	mov	r7, r1
   13e18:	bl	14edc <table_get_cell_ptr@@Base>
   13e1c:	mov	r1, r5
   13e20:	mov	r6, r0
   13e24:	mov	r0, r4
   13e28:	bl	12ac0 <table_get_col_ptr@@Base>
   13e2c:	ldr	r2, [r0, #4]
   13e30:	cmp	r2, #10
   13e34:	bne	13e78 <table_set_short@@Base+0x74>
   13e38:	ldr	r0, [r6]
   13e3c:	cmp	r0, #0
   13e40:	beq	13e64 <table_set_short@@Base+0x60>
   13e44:	strh	r8, [r0]
   13e48:	mov	r2, r5
   13e4c:	mov	r0, r4
   13e50:	mov	r1, r7
   13e54:	mov	r3, #1
   13e58:	bl	12684 <table_notify@@Base>
   13e5c:	mov	r0, #0
   13e60:	pop	{r4, r5, r6, r7, r8, pc}
   13e64:	mov	r0, #2
   13e68:	bl	11b4c <malloc@plt>
   13e6c:	cmp	r0, #0
   13e70:	str	r0, [r6]
   13e74:	bne	13e44 <table_set_short@@Base+0x40>
   13e78:	mvn	r0, #0
   13e7c:	pop	{r4, r5, r6, r7, r8, pc}

00013e80 <table_set_ushort@@Base>:
   13e80:	push	{r4, r5, r6, r7, r8, lr}
   13e84:	mov	r5, r2
   13e88:	mov	r4, r0
   13e8c:	mov	r8, r3
   13e90:	mov	r7, r1
   13e94:	bl	14edc <table_get_cell_ptr@@Base>
   13e98:	mov	r1, r5
   13e9c:	mov	r6, r0
   13ea0:	mov	r0, r4
   13ea4:	bl	12ac0 <table_get_col_ptr@@Base>
   13ea8:	ldr	r2, [r0, #4]
   13eac:	cmp	r2, #11
   13eb0:	bne	13ef4 <table_set_ushort@@Base+0x74>
   13eb4:	ldr	r0, [r6]
   13eb8:	cmp	r0, #0
   13ebc:	beq	13ee0 <table_set_ushort@@Base+0x60>
   13ec0:	strh	r8, [r0]
   13ec4:	mov	r2, r5
   13ec8:	mov	r0, r4
   13ecc:	mov	r1, r7
   13ed0:	mov	r3, #1
   13ed4:	bl	12684 <table_notify@@Base>
   13ed8:	mov	r0, #0
   13edc:	pop	{r4, r5, r6, r7, r8, pc}
   13ee0:	mov	r0, #2
   13ee4:	bl	11b4c <malloc@plt>
   13ee8:	cmp	r0, #0
   13eec:	str	r0, [r6]
   13ef0:	bne	13ec0 <table_set_ushort@@Base+0x40>
   13ef4:	mvn	r0, #0
   13ef8:	pop	{r4, r5, r6, r7, r8, pc}

00013efc <table_set_long@@Base>:
   13efc:	push	{r4, r5, r6, r7, r8, lr}
   13f00:	mov	r5, r2
   13f04:	mov	r4, r0
   13f08:	mov	r8, r3
   13f0c:	mov	r7, r1
   13f10:	bl	14edc <table_get_cell_ptr@@Base>
   13f14:	mov	r1, r5
   13f18:	mov	r6, r0
   13f1c:	mov	r0, r4
   13f20:	bl	12ac0 <table_get_col_ptr@@Base>
   13f24:	ldr	r2, [r0, #4]
   13f28:	cmp	r2, #12
   13f2c:	bne	13f70 <table_set_long@@Base+0x74>
   13f30:	ldr	r0, [r6]
   13f34:	cmp	r0, #0
   13f38:	beq	13f5c <table_set_long@@Base+0x60>
   13f3c:	str	r8, [r0]
   13f40:	mov	r2, r5
   13f44:	mov	r0, r4
   13f48:	mov	r1, r7
   13f4c:	mov	r3, #1
   13f50:	bl	12684 <table_notify@@Base>
   13f54:	mov	r0, #0
   13f58:	pop	{r4, r5, r6, r7, r8, pc}
   13f5c:	mov	r0, #4
   13f60:	bl	11b4c <malloc@plt>
   13f64:	cmp	r0, #0
   13f68:	str	r0, [r6]
   13f6c:	bne	13f3c <table_set_long@@Base+0x40>
   13f70:	mvn	r0, #0
   13f74:	pop	{r4, r5, r6, r7, r8, pc}

00013f78 <table_set_ulong@@Base>:
   13f78:	push	{r4, r5, r6, r7, r8, lr}
   13f7c:	mov	r5, r2
   13f80:	mov	r4, r0
   13f84:	mov	r8, r3
   13f88:	mov	r7, r1
   13f8c:	bl	14edc <table_get_cell_ptr@@Base>
   13f90:	mov	r1, r5
   13f94:	mov	r6, r0
   13f98:	mov	r0, r4
   13f9c:	bl	12ac0 <table_get_col_ptr@@Base>
   13fa0:	ldr	r2, [r0, #4]
   13fa4:	cmp	r2, #13
   13fa8:	bne	13fec <table_set_ulong@@Base+0x74>
   13fac:	ldr	r0, [r6]
   13fb0:	cmp	r0, #0
   13fb4:	beq	13fd8 <table_set_ulong@@Base+0x60>
   13fb8:	str	r8, [r0]
   13fbc:	mov	r2, r5
   13fc0:	mov	r0, r4
   13fc4:	mov	r1, r7
   13fc8:	mov	r3, #1
   13fcc:	bl	12684 <table_notify@@Base>
   13fd0:	mov	r0, #0
   13fd4:	pop	{r4, r5, r6, r7, r8, pc}
   13fd8:	mov	r0, #4
   13fdc:	bl	11b4c <malloc@plt>
   13fe0:	cmp	r0, #0
   13fe4:	str	r0, [r6]
   13fe8:	bne	13fb8 <table_set_ulong@@Base+0x40>
   13fec:	mvn	r0, #0
   13ff0:	pop	{r4, r5, r6, r7, r8, pc}

00013ff4 <table_set_llong@@Base>:
   13ff4:	push	{r4, r5, r6, r7, r8, lr}
   13ff8:	mov	r5, r2
   13ffc:	mov	r4, r0
   14000:	mov	r7, r1
   14004:	bl	14edc <table_get_cell_ptr@@Base>
   14008:	mov	r1, r5
   1400c:	mov	r6, r0
   14010:	mov	r0, r4
   14014:	bl	12ac0 <table_get_col_ptr@@Base>
   14018:	ldr	r3, [r0, #4]
   1401c:	cmp	r3, #14
   14020:	bne	14074 <table_set_llong@@Base+0x80>
   14024:	ldr	ip, [r6]
   14028:	cmp	ip, #0
   1402c:	beq	1405c <table_set_llong@@Base+0x68>
   14030:	add	r3, sp, #24
   14034:	mov	r2, r5
   14038:	ldm	r3!, {r0, r1}
   1403c:	mov	r3, #1
   14040:	str	r0, [ip]
   14044:	str	r1, [ip, #4]
   14048:	mov	r0, r4
   1404c:	mov	r1, r7
   14050:	bl	12684 <table_notify@@Base>
   14054:	mov	r0, #0
   14058:	pop	{r4, r5, r6, r7, r8, pc}
   1405c:	mov	r0, #8
   14060:	bl	11b4c <malloc@plt>
   14064:	cmp	r0, #0
   14068:	mov	ip, r0
   1406c:	str	r0, [r6]
   14070:	bne	14030 <table_set_llong@@Base+0x3c>
   14074:	mvn	r0, #0
   14078:	pop	{r4, r5, r6, r7, r8, pc}

0001407c <table_set_ullong@@Base>:
   1407c:	push	{r4, r5, r6, r7, r8, lr}
   14080:	mov	r5, r2
   14084:	mov	r4, r0
   14088:	mov	r7, r1
   1408c:	bl	14edc <table_get_cell_ptr@@Base>
   14090:	mov	r1, r5
   14094:	mov	r6, r0
   14098:	mov	r0, r4
   1409c:	bl	12ac0 <table_get_col_ptr@@Base>
   140a0:	ldr	r3, [r0, #4]
   140a4:	cmp	r3, #15
   140a8:	bne	140fc <table_set_ullong@@Base+0x80>
   140ac:	ldr	ip, [r6]
   140b0:	cmp	ip, #0
   140b4:	beq	140e4 <table_set_ullong@@Base+0x68>
   140b8:	add	r3, sp, #24
   140bc:	mov	r2, r5
   140c0:	ldm	r3!, {r0, r1}
   140c4:	mov	r3, #1
   140c8:	str	r0, [ip]
   140cc:	str	r1, [ip, #4]
   140d0:	mov	r0, r4
   140d4:	mov	r1, r7
   140d8:	bl	12684 <table_notify@@Base>
   140dc:	mov	r0, #0
   140e0:	pop	{r4, r5, r6, r7, r8, pc}
   140e4:	mov	r0, #8
   140e8:	bl	11b4c <malloc@plt>
   140ec:	cmp	r0, #0
   140f0:	mov	ip, r0
   140f4:	str	r0, [r6]
   140f8:	bne	140b8 <table_set_ullong@@Base+0x3c>
   140fc:	mvn	r0, #0
   14100:	pop	{r4, r5, r6, r7, r8, pc}

00014104 <table_set_float@@Base>:
   14104:	push	{r4, r5, r6, r7, r8, lr}
   14108:	mov	r5, r2
   1410c:	mov	r4, r0
   14110:	mov	r7, r1
   14114:	vmov	r8, s0
   14118:	bl	14edc <table_get_cell_ptr@@Base>
   1411c:	mov	r1, r5
   14120:	mov	r6, r0
   14124:	mov	r0, r4
   14128:	bl	12ac0 <table_get_col_ptr@@Base>
   1412c:	ldr	r3, [r0, #4]
   14130:	cmp	r3, #16
   14134:	bne	14178 <table_set_float@@Base+0x74>
   14138:	ldr	r0, [r6]
   1413c:	cmp	r0, #0
   14140:	beq	14164 <table_set_float@@Base+0x60>
   14144:	str	r8, [r0]
   14148:	mov	r2, r5
   1414c:	mov	r0, r4
   14150:	mov	r1, r7
   14154:	mov	r3, #1
   14158:	bl	12684 <table_notify@@Base>
   1415c:	mov	r0, #0
   14160:	pop	{r4, r5, r6, r7, r8, pc}
   14164:	mov	r0, #4
   14168:	bl	11b4c <malloc@plt>
   1416c:	cmp	r0, #0
   14170:	str	r0, [r6]
   14174:	bne	14144 <table_set_float@@Base+0x40>
   14178:	mvn	r0, #0
   1417c:	pop	{r4, r5, r6, r7, r8, pc}

00014180 <table_set_double@@Base>:
   14180:	push	{r4, r5, r6, r7, lr}
   14184:	sub	sp, sp, #12
   14188:	mov	r5, r2
   1418c:	mov	r4, r0
   14190:	vstr	d0, [sp]
   14194:	mov	r7, r1
   14198:	bl	14edc <table_get_cell_ptr@@Base>
   1419c:	mov	r1, r5
   141a0:	mov	r6, r0
   141a4:	mov	r0, r4
   141a8:	bl	12ac0 <table_get_col_ptr@@Base>
   141ac:	ldr	r3, [r0, #4]
   141b0:	cmp	r3, #17
   141b4:	bne	1420c <table_set_double@@Base+0x8c>
   141b8:	ldr	ip, [r6]
   141bc:	cmp	ip, #0
   141c0:	beq	141f4 <table_set_double@@Base+0x74>
   141c4:	mov	r3, sp
   141c8:	mov	r2, r5
   141cc:	ldm	r3!, {r0, r1}
   141d0:	mov	r3, #1
   141d4:	str	r0, [ip]
   141d8:	str	r1, [ip, #4]
   141dc:	mov	r0, r4
   141e0:	mov	r1, r7
   141e4:	bl	12684 <table_notify@@Base>
   141e8:	mov	r0, #0
   141ec:	add	sp, sp, #12
   141f0:	pop	{r4, r5, r6, r7, pc}
   141f4:	mov	r0, #8
   141f8:	bl	11b4c <malloc@plt>
   141fc:	cmp	r0, #0
   14200:	mov	ip, r0
   14204:	str	r0, [r6]
   14208:	bne	141c4 <table_set_double@@Base+0x44>
   1420c:	mvn	r0, #0
   14210:	add	sp, sp, #12
   14214:	pop	{r4, r5, r6, r7, pc}

00014218 <table_set_ldouble@@Base>:
   14218:	push	{r4, r5, r6, r7, lr}
   1421c:	sub	sp, sp, #12
   14220:	mov	r5, r2
   14224:	mov	r4, r0
   14228:	vstr	d0, [sp]
   1422c:	mov	r7, r1
   14230:	bl	14edc <table_get_cell_ptr@@Base>
   14234:	mov	r1, r5
   14238:	mov	r6, r0
   1423c:	mov	r0, r4
   14240:	bl	12ac0 <table_get_col_ptr@@Base>
   14244:	ldr	r3, [r0, #4]
   14248:	cmp	r3, #18
   1424c:	bne	142a4 <table_set_ldouble@@Base+0x8c>
   14250:	ldr	ip, [r6]
   14254:	cmp	ip, #0
   14258:	beq	1428c <table_set_ldouble@@Base+0x74>
   1425c:	mov	r3, sp
   14260:	mov	r2, r5
   14264:	ldm	r3!, {r0, r1}
   14268:	mov	r3, #1
   1426c:	str	r0, [ip]
   14270:	str	r1, [ip, #4]
   14274:	mov	r0, r4
   14278:	mov	r1, r7
   1427c:	bl	12684 <table_notify@@Base>
   14280:	mov	r0, #0
   14284:	add	sp, sp, #12
   14288:	pop	{r4, r5, r6, r7, pc}
   1428c:	mov	r0, #8
   14290:	bl	11b4c <malloc@plt>
   14294:	cmp	r0, #0
   14298:	mov	ip, r0
   1429c:	str	r0, [r6]
   142a0:	bne	1425c <table_set_ldouble@@Base+0x44>
   142a4:	mvn	r0, #0
   142a8:	add	sp, sp, #12
   142ac:	pop	{r4, r5, r6, r7, pc}

000142b0 <table_set_string@@Base>:
   142b0:	push	{r4, r5, r6, r7, r8, lr}
   142b4:	mov	r5, r2
   142b8:	mov	r7, r3
   142bc:	mov	r4, r0
   142c0:	mov	r8, r1
   142c4:	bl	14edc <table_get_cell_ptr@@Base>
   142c8:	mov	r1, r5
   142cc:	mov	r6, r0
   142d0:	mov	r0, r4
   142d4:	bl	12ac0 <table_get_col_ptr@@Base>
   142d8:	ldr	r3, [r0, #4]
   142dc:	cmp	r3, #21
   142e0:	bne	14328 <table_set_string@@Base+0x78>
   142e4:	mov	r0, r7
   142e8:	bl	11b70 <strlen@plt>
   142ec:	add	r1, r0, #1
   142f0:	ldr	r0, [r6]
   142f4:	bl	11b34 <realloc@plt>
   142f8:	cmp	r0, #0
   142fc:	str	r0, [r6]
   14300:	beq	14328 <table_set_string@@Base+0x78>
   14304:	mov	r1, r7
   14308:	bl	11b40 <strcpy@plt>
   1430c:	mov	r0, r4
   14310:	mov	r2, r5
   14314:	mov	r1, r8
   14318:	mov	r3, #1
   1431c:	bl	12684 <table_notify@@Base>
   14320:	mov	r0, #0
   14324:	pop	{r4, r5, r6, r7, r8, pc}
   14328:	mvn	r0, #0
   1432c:	pop	{r4, r5, r6, r7, r8, pc}

00014330 <table_set_char@@Base>:
   14330:	push	{r4, r5, r6, r7, r8, lr}
   14334:	mov	r5, r2
   14338:	mov	r4, r0
   1433c:	mov	r8, r3
   14340:	mov	r7, r1
   14344:	bl	14edc <table_get_cell_ptr@@Base>
   14348:	mov	r1, r5
   1434c:	mov	r6, r0
   14350:	mov	r0, r4
   14354:	bl	12ac0 <table_get_col_ptr@@Base>
   14358:	ldr	r2, [r0, #4]
   1435c:	cmp	r2, #19
   14360:	bne	143a4 <table_set_char@@Base+0x74>
   14364:	ldr	r0, [r6]
   14368:	cmp	r0, #0
   1436c:	beq	14390 <table_set_char@@Base+0x60>
   14370:	strb	r8, [r0]
   14374:	mov	r2, r5
   14378:	mov	r0, r4
   1437c:	mov	r1, r7
   14380:	mov	r3, #1
   14384:	bl	12684 <table_notify@@Base>
   14388:	mov	r0, #0
   1438c:	pop	{r4, r5, r6, r7, r8, pc}
   14390:	mov	r0, #1
   14394:	bl	11b4c <malloc@plt>
   14398:	cmp	r0, #0
   1439c:	str	r0, [r6]
   143a0:	bne	14370 <table_set_char@@Base+0x40>
   143a4:	mvn	r0, #0
   143a8:	pop	{r4, r5, r6, r7, r8, pc}

000143ac <table_set_uchar@@Base>:
   143ac:	push	{r4, r5, r6, r7, r8, lr}
   143b0:	mov	r5, r2
   143b4:	mov	r4, r0
   143b8:	mov	r8, r3
   143bc:	mov	r7, r1
   143c0:	bl	14edc <table_get_cell_ptr@@Base>
   143c4:	mov	r1, r5
   143c8:	mov	r6, r0
   143cc:	mov	r0, r4
   143d0:	bl	12ac0 <table_get_col_ptr@@Base>
   143d4:	ldr	r2, [r0, #4]
   143d8:	cmp	r2, #20
   143dc:	bne	14420 <table_set_uchar@@Base+0x74>
   143e0:	ldr	r0, [r6]
   143e4:	cmp	r0, #0
   143e8:	beq	1440c <table_set_uchar@@Base+0x60>
   143ec:	strb	r8, [r0]
   143f0:	mov	r2, r5
   143f4:	mov	r0, r4
   143f8:	mov	r1, r7
   143fc:	mov	r3, #1
   14400:	bl	12684 <table_notify@@Base>
   14404:	mov	r0, #0
   14408:	pop	{r4, r5, r6, r7, r8, pc}
   1440c:	mov	r0, #1
   14410:	bl	11b4c <malloc@plt>
   14414:	cmp	r0, #0
   14418:	str	r0, [r6]
   1441c:	bne	143ec <table_set_uchar@@Base+0x40>
   14420:	mvn	r0, #0
   14424:	pop	{r4, r5, r6, r7, r8, pc}

00014428 <table_set_ptr@@Base>:
   14428:	push	{r4, r5, r6, r7, r8, lr}
   1442c:	mov	r5, r2
   14430:	mov	r4, r0
   14434:	mov	r8, r3
   14438:	mov	r6, r1
   1443c:	bl	14edc <table_get_cell_ptr@@Base>
   14440:	mov	r1, r5
   14444:	mov	r7, r0
   14448:	mov	r0, r4
   1444c:	bl	12ac0 <table_get_col_ptr@@Base>
   14450:	ldr	r2, [r0, #4]
   14454:	cmp	r2, #23
   14458:	bne	1447c <table_set_ptr@@Base+0x54>
   1445c:	mov	r0, r4
   14460:	str	r8, [r7]
   14464:	mov	r2, r5
   14468:	mov	r1, r6
   1446c:	mov	r3, #1
   14470:	bl	12684 <table_notify@@Base>
   14474:	mov	r0, #0
   14478:	pop	{r4, r5, r6, r7, r8, pc}
   1447c:	mvn	r0, #0
   14480:	pop	{r4, r5, r6, r7, r8, pc}

00014484 <table_cell_init@@Base>:
   14484:	push	{r4, lr}
   14488:	mov	r4, r2
   1448c:	bl	13534 <table_get_row_ptr@@Base>
   14490:	mov	r2, #0
   14494:	ldr	r3, [r0]
   14498:	str	r2, [r3, r4, lsl #2]
   1449c:	pop	{r4, pc}

000144a0 <table_cell_destroy@@Base>:
   144a0:	push	{r4, r5, r6, lr}
   144a4:	mov	r6, r1
   144a8:	mov	r1, r2
   144ac:	mov	r4, r2
   144b0:	mov	r5, r0
   144b4:	bl	127e4 <table_get_column_data_type@@Base>
   144b8:	cmp	r0, #23
   144bc:	popeq	{r4, r5, r6, pc}
   144c0:	mov	r1, r6
   144c4:	mov	r0, r5
   144c8:	bl	13534 <table_get_row_ptr@@Base>
   144cc:	ldr	r3, [r0]
   144d0:	ldr	r0, [r3, r4, lsl #2]
   144d4:	cmp	r0, #0
   144d8:	popeq	{r4, r5, r6, pc}
   144dc:	pop	{r4, r5, r6, lr}
   144e0:	b	11b1c <free@plt>

000144e4 <table_cell_to_buffer@@Base>:
   144e4:	push	{r4, r5, r6, r7, lr}
   144e8:	mov	r7, r1
   144ec:	sub	sp, sp, #12
   144f0:	mov	r1, r2
   144f4:	mov	r4, r2
   144f8:	mov	r5, r3
   144fc:	mov	r6, r0
   14500:	bl	127e4 <table_get_column_data_type@@Base>
   14504:	cmp	r0, #23
   14508:	ldrls	pc, [pc, r0, lsl #2]
   1450c:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   14510:	andeq	r4, r1, r8, ror #16
   14514:	andeq	r4, r1, r4, asr r8
   14518:	andeq	r4, r1, r0, asr #16
   1451c:	andeq	r4, r1, ip, lsr #16
   14520:	andeq	r4, r1, r8, lsl r8
   14524:	andeq	r4, r1, r4, lsl #16
   14528:	strdeq	r4, [r1], -r0
   1452c:	andeq	r4, r1, r0, asr #15
   14530:	andeq	r4, r1, ip, lsr #15
   14534:	muleq	r1, r8, r7
   14538:	andeq	r4, r1, r0, ror r7
   1453c:	andeq	r4, r1, r8, asr #14
   14540:	andeq	r4, r1, r0, lsr #14
   14544:	strdeq	r4, [r1], -r8
   14548:	ldrdeq	r4, [r1], -r0
   1454c:	andeq	r4, r1, r8, lsr #13
   14550:	andeq	r4, r1, ip, ror r6
   14554:	andeq	r4, r1, r4, asr r6
   14558:	andeq	r4, r1, ip, lsr #12
   1455c:	andeq	r4, r1, r8, lsl r6
   14560:	strdeq	r4, [r1], -r0
   14564:	andeq	r4, r1, r8, asr #11
   14568:	andeq	r4, r1, r0, ror r5
   1456c:	andeq	r4, r1, r0, lsr #11
   14570:	mov	r2, r4
   14574:	mov	r1, r7
   14578:	mov	r0, r6
   1457c:	bl	13130 <table_get_bool@@Base>
   14580:	mov	r3, r0
   14584:	ldr	r2, [pc, #752]	; 1487c <table_cell_to_buffer@@Base+0x398>
   14588:	mov	r0, r5
   1458c:	ldr	r1, [sp, #32]
   14590:	bl	11b88 <snprintf@plt>
   14594:	mov	r0, #0
   14598:	add	sp, sp, #12
   1459c:	pop	{r4, r5, r6, r7, pc}
   145a0:	mov	r2, r4
   145a4:	mov	r1, r7
   145a8:	mov	r0, r6
   145ac:	bl	132f8 <table_get_ptr@@Base>
   145b0:	ldr	r2, [pc, #712]	; 14880 <table_cell_to_buffer@@Base+0x39c>
   145b4:	ldr	r1, [sp, #32]
   145b8:	mov	r3, r0
   145bc:	mov	r0, r5
   145c0:	bl	11b88 <snprintf@plt>
   145c4:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   145c8:	mov	r2, r4
   145cc:	mov	r1, r7
   145d0:	mov	r0, r6
   145d4:	bl	132e8 <table_get_string@@Base>
   145d8:	ldr	r2, [pc, #676]	; 14884 <table_cell_to_buffer@@Base+0x3a0>
   145dc:	ldr	r1, [sp, #32]
   145e0:	mov	r3, r0
   145e4:	mov	r0, r5
   145e8:	bl	11b88 <snprintf@plt>
   145ec:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   145f0:	mov	r2, r4
   145f4:	mov	r1, r7
   145f8:	mov	r0, r6
   145fc:	bl	132d4 <table_get_uchar@@Base>
   14600:	mov	r3, r0
   14604:	ldr	r2, [pc, #636]	; 14888 <table_cell_to_buffer@@Base+0x3a4>
   14608:	mov	r0, r5
   1460c:	ldr	r1, [sp, #32]
   14610:	bl	11b88 <snprintf@plt>
   14614:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   14618:	mov	r2, r4
   1461c:	mov	r1, r7
   14620:	mov	r0, r6
   14624:	bl	132c0 <table_get_char@@Base>
   14628:	b	14600 <table_cell_to_buffer@@Base+0x11c>
   1462c:	mov	r2, r4
   14630:	mov	r1, r7
   14634:	mov	r0, r6
   14638:	bl	132ac <table_get_ldouble@@Base>
   1463c:	mov	r0, r5
   14640:	ldr	r2, [pc, #580]	; 1488c <table_cell_to_buffer@@Base+0x3a8>
   14644:	ldr	r1, [sp, #32]
   14648:	vstr	d0, [sp]
   1464c:	bl	11b88 <snprintf@plt>
   14650:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   14654:	mov	r2, r4
   14658:	mov	r1, r7
   1465c:	mov	r0, r6
   14660:	bl	13298 <table_get_double@@Base>
   14664:	mov	r0, r5
   14668:	ldr	r2, [pc, #544]	; 14890 <table_cell_to_buffer@@Base+0x3ac>
   1466c:	ldr	r1, [sp, #32]
   14670:	vstr	d0, [sp]
   14674:	bl	11b88 <snprintf@plt>
   14678:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   1467c:	mov	r2, r4
   14680:	mov	r1, r7
   14684:	mov	r0, r6
   14688:	bl	13284 <table_get_float@@Base>
   1468c:	mov	r0, r5
   14690:	ldr	r2, [pc, #508]	; 14894 <table_cell_to_buffer@@Base+0x3b0>
   14694:	ldr	r1, [sp, #32]
   14698:	vcvt.f64.f32	d0, s0
   1469c:	vstr	d0, [sp]
   146a0:	bl	11b88 <snprintf@plt>
   146a4:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   146a8:	mov	r2, r4
   146ac:	mov	r1, r7
   146b0:	mov	r0, r6
   146b4:	bl	13270 <table_get_ullong@@Base>
   146b8:	strd	r0, [sp]
   146bc:	ldr	r2, [pc, #468]	; 14898 <table_cell_to_buffer@@Base+0x3b4>
   146c0:	mov	r0, r5
   146c4:	ldr	r1, [sp, #32]
   146c8:	bl	11b88 <snprintf@plt>
   146cc:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   146d0:	mov	r2, r4
   146d4:	mov	r1, r7
   146d8:	mov	r0, r6
   146dc:	bl	1325c <table_get_llong@@Base>
   146e0:	strd	r0, [sp]
   146e4:	ldr	r2, [pc, #432]	; 1489c <table_cell_to_buffer@@Base+0x3b8>
   146e8:	mov	r0, r5
   146ec:	ldr	r1, [sp, #32]
   146f0:	bl	11b88 <snprintf@plt>
   146f4:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   146f8:	mov	r2, r4
   146fc:	mov	r1, r7
   14700:	mov	r0, r6
   14704:	bl	13248 <table_get_ulong@@Base>
   14708:	ldr	r2, [pc, #400]	; 148a0 <table_cell_to_buffer@@Base+0x3bc>
   1470c:	ldr	r1, [sp, #32]
   14710:	mov	r3, r0
   14714:	mov	r0, r5
   14718:	bl	11b88 <snprintf@plt>
   1471c:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   14720:	mov	r2, r4
   14724:	mov	r1, r7
   14728:	mov	r0, r6
   1472c:	bl	13234 <table_get_long@@Base>
   14730:	ldr	r2, [pc, #364]	; 148a4 <table_cell_to_buffer@@Base+0x3c0>
   14734:	ldr	r1, [sp, #32]
   14738:	mov	r3, r0
   1473c:	mov	r0, r5
   14740:	bl	11b88 <snprintf@plt>
   14744:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   14748:	mov	r2, r4
   1474c:	mov	r1, r7
   14750:	mov	r0, r6
   14754:	bl	13220 <table_get_ushort@@Base>
   14758:	ldr	r2, [pc, #328]	; 148a8 <table_cell_to_buffer@@Base+0x3c4>
   1475c:	ldr	r1, [sp, #32]
   14760:	mov	r3, r0
   14764:	mov	r0, r5
   14768:	bl	11b88 <snprintf@plt>
   1476c:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   14770:	mov	r2, r4
   14774:	mov	r1, r7
   14778:	mov	r0, r6
   1477c:	bl	1320c <table_get_short@@Base>
   14780:	ldr	r2, [pc, #292]	; 148ac <table_cell_to_buffer@@Base+0x3c8>
   14784:	ldr	r1, [sp, #32]
   14788:	mov	r3, r0
   1478c:	mov	r0, r5
   14790:	bl	11b88 <snprintf@plt>
   14794:	b	14594 <table_cell_to_buffer@@Base+0xb0>
   14798:	mov	r2, r4
   1479c:	mov	r1, r7
   147a0:	mov	r0, r6
   147a4:	bl	131f8 <table_get_uint64@@Base>
   147a8:	b	146b8 <table_cell_to_buffer@@Base+0x1d4>
   147ac:	mov	r2, r4
   147b0:	mov	r1, r7
   147b4:	mov	r0, r6
   147b8:	bl	131e4 <table_get_int64@@Base>
   147bc:	b	146e0 <table_cell_to_buffer@@Base+0x1fc>
   147c0:	mov	r2, r4
   147c4:	mov	r1, r7
   147c8:	mov	r0, r6
   147cc:	bl	131d0 <table_get_uint32@@Base>
   147d0:	mov	r3, r0
   147d4:	ldr	r2, [pc, #212]	; 148b0 <table_cell_to_buffer@@Base+0x3cc>
   147d8:	mov	r0, r5
   147dc:	ldr	r1, [sp, #32]
   147e0:	bl	11b88 <snprintf@plt>
   147e4:	mov	r0, #0
   147e8:	add	sp, sp, #12
   147ec:	pop	{r4, r5, r6, r7, pc}
   147f0:	mov	r2, r4
   147f4:	mov	r1, r7
   147f8:	mov	r0, r6
   147fc:	bl	131bc <table_get_int32@@Base>
   14800:	b	14580 <table_cell_to_buffer@@Base+0x9c>
   14804:	mov	r2, r4
   14808:	mov	r1, r7
   1480c:	mov	r0, r6
   14810:	bl	131a8 <table_get_uint16@@Base>
   14814:	b	147d0 <table_cell_to_buffer@@Base+0x2ec>
   14818:	mov	r2, r4
   1481c:	mov	r1, r7
   14820:	mov	r0, r6
   14824:	bl	13194 <table_get_int16@@Base>
   14828:	b	14580 <table_cell_to_buffer@@Base+0x9c>
   1482c:	mov	r2, r4
   14830:	mov	r1, r7
   14834:	mov	r0, r6
   14838:	bl	13180 <table_get_uint8@@Base>
   1483c:	b	147d0 <table_cell_to_buffer@@Base+0x2ec>
   14840:	mov	r2, r4
   14844:	mov	r1, r7
   14848:	mov	r0, r6
   1484c:	bl	1316c <table_get_int8@@Base>
   14850:	b	14580 <table_cell_to_buffer@@Base+0x9c>
   14854:	mov	r2, r4
   14858:	mov	r1, r7
   1485c:	mov	r0, r6
   14860:	bl	13158 <table_get_uint@@Base>
   14864:	b	147d0 <table_cell_to_buffer@@Base+0x2ec>
   14868:	mov	r2, r4
   1486c:	mov	r1, r7
   14870:	mov	r0, r6
   14874:	bl	13144 <table_get_int@@Base>
   14878:	b	14580 <table_cell_to_buffer@@Base+0x9c>
   1487c:			; <UNDEFINED> instruction: 0x000151b8
   14880:	andeq	r5, r1, r4, asr r2
   14884:	andeq	r5, r1, r0, asr #4
   14888:	andeq	r5, r1, r0, asr r2
   1488c:	andeq	r5, r1, ip, asr #4
   14890:	andeq	r5, r1, r8, asr #4
   14894:	andeq	r5, r1, r4, asr #4
   14898:	andeq	r5, r1, r8, lsr #4
   1489c:	andeq	r5, r1, r0, lsr #4
   148a0:	andeq	r5, r1, ip, lsr r2
   148a4:	andeq	r5, r1, r8, lsr r2
   148a8:	andeq	r5, r1, r4, lsr r2
   148ac:	andeq	r5, r1, r0, lsr r2
   148b0:	andeq	r5, r1, ip, lsl r2

000148b4 <table_cell_from_buffer@@Base>:
   148b4:	push	{r4, r5, r6, r7, r8, lr}
   148b8:	mov	r8, r1
   148bc:	sub	sp, sp, #264	; 0x108
   148c0:	mov	r1, r2
   148c4:	mov	r4, r2
   148c8:	mov	r6, r3
   148cc:	mov	r5, r0
   148d0:	bl	127e4 <table_get_column_data_type@@Base>
   148d4:	cmp	r0, #23
   148d8:	ldrls	pc, [pc, r0, lsl #2]
   148dc:	b	14e64 <table_cell_from_buffer@@Base+0x5b0>
   148e0:	strdeq	r4, [r1], -ip
   148e4:	andeq	r4, r1, r8, asr #27
   148e8:	muleq	r1, r4, sp
   148ec:	andeq	r4, r1, r0, ror #26
   148f0:	andeq	r4, r1, ip, lsr #26
   148f4:	strdeq	r4, [r1], -r8
   148f8:	andeq	r4, r1, r4, asr #25
   148fc:	muleq	r1, r0, ip
   14900:	andeq	r4, r1, r8, asr ip
   14904:	andeq	r4, r1, r0, lsr #24
   14908:	andeq	r4, r1, ip, ror #23
   1490c:			; <UNDEFINED> instruction: 0x00014bb8
   14910:	andeq	r4, r1, r4, lsl #23
   14914:	andeq	r4, r1, r0, asr fp
   14918:	andeq	r4, r1, r8, lsl fp
   1491c:	andeq	r4, r1, r0, ror #21
   14920:	andeq	r4, r1, r8, ror sl
   14924:	andeq	r4, r1, r4, asr #20
   14928:	andeq	r4, r1, ip, lsr #21
   1492c:	andeq	r4, r1, r8, lsr #19
   14930:	andeq	r4, r1, r0, lsl sl
   14934:	ldrdeq	r4, [r1], -ip
   14938:	andeq	r4, r1, r8, ror #18
   1493c:	andeq	r4, r1, r0, asr #18
   14940:	mov	r0, r6
   14944:	add	r2, sp, #8
   14948:	ldr	r1, [pc, #1308]	; 14e6c <table_cell_from_buffer@@Base+0x5b8>
   1494c:	bl	11b94 <__isoc99_sscanf@plt>
   14950:	cmp	r0, #1
   14954:	beq	14e48 <table_cell_from_buffer@@Base+0x594>
   14958:	mvn	r6, #0
   1495c:	mov	r0, r6
   14960:	add	sp, sp, #264	; 0x108
   14964:	pop	{r4, r5, r6, r7, r8, pc}
   14968:	mov	r0, r6
   1496c:	add	r2, sp, #8
   14970:	ldr	r1, [pc, #1272]	; 14e70 <table_cell_from_buffer@@Base+0x5bc>
   14974:	bl	11b94 <__isoc99_sscanf@plt>
   14978:	cmp	r0, #1
   1497c:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14980:	ldr	r6, [sp, #8]
   14984:	cmp	r6, #0
   14988:	beq	14e30 <table_cell_from_buffer@@Base+0x57c>
   1498c:	mov	r3, r0
   14990:	mov	r2, r4
   14994:	mov	r1, r8
   14998:	mov	r0, r5
   1499c:	bl	1389c <table_set_bool@@Base>
   149a0:	mov	r6, #0
   149a4:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   149a8:	mov	r0, r6
   149ac:	add	r2, sp, #8
   149b0:	ldr	r1, [pc, #1212]	; 14e74 <table_cell_from_buffer@@Base+0x5c0>
   149b4:	bl	11b94 <__isoc99_sscanf@plt>
   149b8:	cmp	r0, #1
   149bc:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   149c0:	mov	r2, r4
   149c4:	mov	r1, r8
   149c8:	mov	r0, r5
   149cc:	ldrb	r3, [sp, #8]
   149d0:	bl	14330 <table_set_char@@Base>
   149d4:	mov	r6, #0
   149d8:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   149dc:	mov	r0, r6
   149e0:	add	r2, sp, #8
   149e4:	ldr	r1, [pc, #1164]	; 14e78 <table_cell_from_buffer@@Base+0x5c4>
   149e8:	bl	11b94 <__isoc99_sscanf@plt>
   149ec:	cmp	r0, #1
   149f0:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   149f4:	add	r3, sp, #8
   149f8:	mov	r2, r4
   149fc:	mov	r1, r8
   14a00:	mov	r0, r5
   14a04:	bl	142b0 <table_set_string@@Base>
   14a08:	mov	r6, #0
   14a0c:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14a10:	mov	r0, r6
   14a14:	add	r2, sp, #8
   14a18:	ldr	r1, [pc, #1108]	; 14e74 <table_cell_from_buffer@@Base+0x5c0>
   14a1c:	bl	11b94 <__isoc99_sscanf@plt>
   14a20:	cmp	r0, #1
   14a24:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14a28:	mov	r2, r4
   14a2c:	mov	r1, r8
   14a30:	mov	r0, r5
   14a34:	ldrb	r3, [sp, #8]
   14a38:	bl	143ac <table_set_uchar@@Base>
   14a3c:	mov	r6, #0
   14a40:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14a44:	mov	r0, r6
   14a48:	add	r2, sp, #8
   14a4c:	ldr	r1, [pc, #1064]	; 14e7c <table_cell_from_buffer@@Base+0x5c8>
   14a50:	bl	11b94 <__isoc99_sscanf@plt>
   14a54:	cmp	r0, #1
   14a58:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14a5c:	mov	r2, r4
   14a60:	mov	r1, r8
   14a64:	mov	r0, r5
   14a68:	vldr	d0, [sp, #8]
   14a6c:	bl	14180 <table_set_double@@Base>
   14a70:	mov	r6, #0
   14a74:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14a78:	mov	r0, r6
   14a7c:	add	r2, sp, #8
   14a80:	ldr	r1, [pc, #1016]	; 14e80 <table_cell_from_buffer@@Base+0x5cc>
   14a84:	bl	11b94 <__isoc99_sscanf@plt>
   14a88:	cmp	r0, #1
   14a8c:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14a90:	mov	r2, r4
   14a94:	mov	r1, r8
   14a98:	mov	r0, r5
   14a9c:	vldr	s0, [sp, #8]
   14aa0:	bl	14104 <table_set_float@@Base>
   14aa4:	mov	r6, #0
   14aa8:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14aac:	mov	r0, r6
   14ab0:	add	r2, sp, #8
   14ab4:	ldr	r1, [pc, #968]	; 14e84 <table_cell_from_buffer@@Base+0x5d0>
   14ab8:	bl	11b94 <__isoc99_sscanf@plt>
   14abc:	cmp	r0, #1
   14ac0:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14ac4:	mov	r2, r4
   14ac8:	mov	r1, r8
   14acc:	mov	r0, r5
   14ad0:	vldr	d0, [sp, #8]
   14ad4:	bl	14218 <table_set_ldouble@@Base>
   14ad8:	mov	r6, #0
   14adc:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14ae0:	mov	r0, r6
   14ae4:	add	r2, sp, #8
   14ae8:	ldr	r1, [pc, #920]	; 14e88 <table_cell_from_buffer@@Base+0x5d4>
   14aec:	bl	11b94 <__isoc99_sscanf@plt>
   14af0:	cmp	r0, #1
   14af4:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14af8:	ldrd	r6, [sp, #8]
   14afc:	mov	r2, r4
   14b00:	mov	r1, r8
   14b04:	strd	r6, [sp]
   14b08:	mov	r0, r5
   14b0c:	bl	1407c <table_set_ullong@@Base>
   14b10:	mov	r6, #0
   14b14:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14b18:	mov	r0, r6
   14b1c:	add	r2, sp, #8
   14b20:	ldr	r1, [pc, #868]	; 14e8c <table_cell_from_buffer@@Base+0x5d8>
   14b24:	bl	11b94 <__isoc99_sscanf@plt>
   14b28:	cmp	r0, #1
   14b2c:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14b30:	ldrd	r6, [sp, #8]
   14b34:	mov	r2, r4
   14b38:	mov	r1, r8
   14b3c:	strd	r6, [sp]
   14b40:	mov	r0, r5
   14b44:	bl	13ff4 <table_set_llong@@Base>
   14b48:	mov	r6, #0
   14b4c:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14b50:	mov	r0, r6
   14b54:	add	r2, sp, #8
   14b58:	ldr	r1, [pc, #816]	; 14e90 <table_cell_from_buffer@@Base+0x5dc>
   14b5c:	bl	11b94 <__isoc99_sscanf@plt>
   14b60:	cmp	r0, #1
   14b64:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14b68:	mov	r2, r4
   14b6c:	mov	r1, r8
   14b70:	mov	r0, r5
   14b74:	ldr	r3, [sp, #8]
   14b78:	bl	13f78 <table_set_ulong@@Base>
   14b7c:	mov	r6, #0
   14b80:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14b84:	mov	r0, r6
   14b88:	add	r2, sp, #8
   14b8c:	ldr	r1, [pc, #768]	; 14e94 <table_cell_from_buffer@@Base+0x5e0>
   14b90:	bl	11b94 <__isoc99_sscanf@plt>
   14b94:	cmp	r0, #1
   14b98:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14b9c:	mov	r2, r4
   14ba0:	mov	r1, r8
   14ba4:	mov	r0, r5
   14ba8:	ldr	r3, [sp, #8]
   14bac:	bl	13efc <table_set_long@@Base>
   14bb0:	mov	r6, #0
   14bb4:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14bb8:	mov	r0, r6
   14bbc:	add	r2, sp, #8
   14bc0:	ldr	r1, [pc, #720]	; 14e98 <table_cell_from_buffer@@Base+0x5e4>
   14bc4:	bl	11b94 <__isoc99_sscanf@plt>
   14bc8:	cmp	r0, #1
   14bcc:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14bd0:	ldrh	r3, [sp, #8]
   14bd4:	mov	r2, r4
   14bd8:	mov	r1, r8
   14bdc:	mov	r0, r5
   14be0:	bl	13e80 <table_set_ushort@@Base>
   14be4:	mov	r6, #0
   14be8:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14bec:	mov	r0, r6
   14bf0:	add	r2, sp, #8
   14bf4:	ldr	r1, [pc, #672]	; 14e9c <table_cell_from_buffer@@Base+0x5e8>
   14bf8:	bl	11b94 <__isoc99_sscanf@plt>
   14bfc:	cmp	r0, #1
   14c00:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14c04:	ldrsh	r3, [sp, #8]
   14c08:	mov	r2, r4
   14c0c:	mov	r1, r8
   14c10:	mov	r0, r5
   14c14:	bl	13e04 <table_set_short@@Base>
   14c18:	mov	r6, #0
   14c1c:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14c20:	mov	r0, r6
   14c24:	add	r2, sp, #8
   14c28:	ldr	r1, [pc, #600]	; 14e88 <table_cell_from_buffer@@Base+0x5d4>
   14c2c:	bl	11b94 <__isoc99_sscanf@plt>
   14c30:	cmp	r0, #1
   14c34:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14c38:	ldrd	r6, [sp, #8]
   14c3c:	mov	r2, r4
   14c40:	mov	r1, r8
   14c44:	strd	r6, [sp]
   14c48:	mov	r0, r5
   14c4c:	bl	13d7c <table_set_uint64@@Base>
   14c50:	mov	r6, #0
   14c54:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14c58:	mov	r0, r6
   14c5c:	add	r2, sp, #8
   14c60:	ldr	r1, [pc, #548]	; 14e8c <table_cell_from_buffer@@Base+0x5d8>
   14c64:	bl	11b94 <__isoc99_sscanf@plt>
   14c68:	cmp	r0, #1
   14c6c:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14c70:	ldrd	r6, [sp, #8]
   14c74:	mov	r2, r4
   14c78:	mov	r1, r8
   14c7c:	strd	r6, [sp]
   14c80:	mov	r0, r5
   14c84:	bl	13cf8 <table_set_int64@@Base>
   14c88:	mov	r6, #0
   14c8c:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14c90:	mov	r0, r6
   14c94:	add	r2, sp, #8
   14c98:	ldr	r1, [pc, #512]	; 14ea0 <table_cell_from_buffer@@Base+0x5ec>
   14c9c:	bl	11b94 <__isoc99_sscanf@plt>
   14ca0:	cmp	r0, #1
   14ca4:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14ca8:	mov	r2, r4
   14cac:	mov	r1, r8
   14cb0:	mov	r0, r5
   14cb4:	ldr	r3, [sp, #8]
   14cb8:	bl	13c7c <table_set_uint32@@Base>
   14cbc:	mov	r6, #0
   14cc0:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14cc4:	mov	r0, r6
   14cc8:	add	r2, sp, #8
   14ccc:	ldr	r1, [pc, #412]	; 14e70 <table_cell_from_buffer@@Base+0x5bc>
   14cd0:	bl	11b94 <__isoc99_sscanf@plt>
   14cd4:	cmp	r0, #1
   14cd8:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14cdc:	mov	r2, r4
   14ce0:	mov	r1, r8
   14ce4:	mov	r0, r5
   14ce8:	ldr	r3, [sp, #8]
   14cec:	bl	13c00 <table_set_int32@@Base>
   14cf0:	mov	r6, #0
   14cf4:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14cf8:	mov	r0, r6
   14cfc:	add	r2, sp, #8
   14d00:	ldr	r1, [pc, #400]	; 14e98 <table_cell_from_buffer@@Base+0x5e4>
   14d04:	bl	11b94 <__isoc99_sscanf@plt>
   14d08:	cmp	r0, #1
   14d0c:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14d10:	ldrh	r3, [sp, #8]
   14d14:	mov	r2, r4
   14d18:	mov	r1, r8
   14d1c:	mov	r0, r5
   14d20:	bl	13b84 <table_set_uint16@@Base>
   14d24:	mov	r6, #0
   14d28:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14d2c:	mov	r0, r6
   14d30:	add	r2, sp, #8
   14d34:	ldr	r1, [pc, #352]	; 14e9c <table_cell_from_buffer@@Base+0x5e8>
   14d38:	bl	11b94 <__isoc99_sscanf@plt>
   14d3c:	cmp	r0, #1
   14d40:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14d44:	ldrsh	r3, [sp, #8]
   14d48:	mov	r2, r4
   14d4c:	mov	r1, r8
   14d50:	mov	r0, r5
   14d54:	bl	13b08 <table_set_int16@@Base>
   14d58:	mov	r6, #0
   14d5c:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14d60:	mov	r0, r6
   14d64:	add	r2, sp, #8
   14d68:	ldr	r1, [pc, #308]	; 14ea4 <table_cell_from_buffer@@Base+0x5f0>
   14d6c:	bl	11b94 <__isoc99_sscanf@plt>
   14d70:	cmp	r0, #1
   14d74:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14d78:	mov	r2, r4
   14d7c:	mov	r1, r8
   14d80:	mov	r0, r5
   14d84:	ldrb	r3, [sp, #8]
   14d88:	bl	13a8c <table_set_uint8@@Base>
   14d8c:	mov	r6, #0
   14d90:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14d94:	mov	r0, r6
   14d98:	add	r2, sp, #8
   14d9c:	ldr	r1, [pc, #260]	; 14ea8 <table_cell_from_buffer@@Base+0x5f4>
   14da0:	bl	11b94 <__isoc99_sscanf@plt>
   14da4:	cmp	r0, #1
   14da8:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14dac:	ldrsb	r3, [sp, #8]
   14db0:	mov	r2, r4
   14db4:	mov	r1, r8
   14db8:	mov	r0, r5
   14dbc:	bl	13a10 <table_set_int8@@Base>
   14dc0:	mov	r6, #0
   14dc4:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14dc8:	mov	r0, r6
   14dcc:	add	r2, sp, #8
   14dd0:	ldr	r1, [pc, #200]	; 14ea0 <table_cell_from_buffer@@Base+0x5ec>
   14dd4:	bl	11b94 <__isoc99_sscanf@plt>
   14dd8:	cmp	r0, #1
   14ddc:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14de0:	mov	r2, r4
   14de4:	mov	r1, r8
   14de8:	mov	r0, r5
   14dec:	ldr	r3, [sp, #8]
   14df0:	bl	13994 <table_set_uint@@Base>
   14df4:	mov	r6, #0
   14df8:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14dfc:	mov	r0, r6
   14e00:	add	r2, sp, #8
   14e04:	ldr	r1, [pc, #100]	; 14e70 <table_cell_from_buffer@@Base+0x5bc>
   14e08:	bl	11b94 <__isoc99_sscanf@plt>
   14e0c:	cmp	r0, #1
   14e10:	bne	14958 <table_cell_from_buffer@@Base+0xa4>
   14e14:	mov	r2, r4
   14e18:	mov	r1, r8
   14e1c:	mov	r0, r5
   14e20:	ldr	r3, [sp, #8]
   14e24:	bl	13918 <table_set_int@@Base>
   14e28:	mov	r6, #0
   14e2c:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14e30:	mov	r2, r4
   14e34:	mov	r1, r8
   14e38:	mov	r0, r5
   14e3c:	mov	r3, r6
   14e40:	bl	1389c <table_set_bool@@Base>
   14e44:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14e48:	mov	r2, r4
   14e4c:	mov	r1, r8
   14e50:	mov	r0, r5
   14e54:	ldr	r3, [sp, #8]
   14e58:	bl	14428 <table_set_ptr@@Base>
   14e5c:	mov	r6, #0
   14e60:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14e64:	mov	r6, #0
   14e68:	b	1495c <table_cell_from_buffer@@Base+0xa8>
   14e6c:	andeq	r5, r1, r4, asr r2
   14e70:			; <UNDEFINED> instruction: 0x000151b8
   14e74:	andeq	r5, r1, r0, asr r2
   14e78:	andeq	r5, r1, r0, asr #4
   14e7c:	andeq	r5, r1, r8, asr #4
   14e80:	andeq	r5, r1, r4, asr #4
   14e84:	andeq	r5, r1, ip, asr #4
   14e88:	andeq	r5, r1, r8, lsr #4
   14e8c:	andeq	r5, r1, r0, lsr #4
   14e90:	andeq	r5, r1, ip, lsr r2
   14e94:	andeq	r5, r1, r8, lsr r2
   14e98:	andeq	r5, r1, r4, lsr r2
   14e9c:	andeq	r5, r1, r0, lsr r2
   14ea0:	andeq	r5, r1, ip, lsl r2
   14ea4:	andeq	r5, r1, r0, ror #4
   14ea8:	andeq	r5, r1, r8, asr r2

00014eac <table_cell_nullify@@Base>:
   14eac:	push	{r4, r5, r6, lr}
   14eb0:	mov	r5, r2
   14eb4:	bl	13534 <table_get_row_ptr@@Base>
   14eb8:	ldr	r4, [r0]
   14ebc:	ldr	r0, [r4, r5, lsl #2]
   14ec0:	cmp	r0, #0
   14ec4:	beq	14ed4 <table_cell_nullify@@Base+0x28>
   14ec8:	bl	11b1c <free@plt>
   14ecc:	mov	r3, #0
   14ed0:	str	r3, [r4, r5, lsl #2]
   14ed4:	mov	r0, #0
   14ed8:	pop	{r4, r5, r6, pc}

00014edc <table_get_cell_ptr@@Base>:
   14edc:	push	{r4, lr}
   14ee0:	mov	r4, r2
   14ee4:	bl	13534 <table_get_row_ptr@@Base>
   14ee8:	ldr	r0, [r0]
   14eec:	add	r0, r0, r4, lsl #2
   14ef0:	pop	{r4, pc}
   14ef4:	subs	r2, r1, #1
   14ef8:	bxeq	lr
   14efc:	bcc	150d4 <table_get_cell_ptr@@Base+0x1f8>
   14f00:	cmp	r0, r1
   14f04:	bls	150b8 <table_get_cell_ptr@@Base+0x1dc>
   14f08:	tst	r1, r2
   14f0c:	beq	150c4 <table_get_cell_ptr@@Base+0x1e8>
   14f10:	clz	r3, r0
   14f14:	clz	r2, r1
   14f18:	sub	r3, r2, r3
   14f1c:	rsbs	r3, r3, #31
   14f20:	addne	r3, r3, r3, lsl #1
   14f24:	mov	r2, #0
   14f28:	addne	pc, pc, r3, lsl #2
   14f2c:	nop			; (mov r0, r0)
   14f30:	cmp	r0, r1, lsl #31
   14f34:	adc	r2, r2, r2
   14f38:	subcs	r0, r0, r1, lsl #31
   14f3c:	cmp	r0, r1, lsl #30
   14f40:	adc	r2, r2, r2
   14f44:	subcs	r0, r0, r1, lsl #30
   14f48:	cmp	r0, r1, lsl #29
   14f4c:	adc	r2, r2, r2
   14f50:	subcs	r0, r0, r1, lsl #29
   14f54:	cmp	r0, r1, lsl #28
   14f58:	adc	r2, r2, r2
   14f5c:	subcs	r0, r0, r1, lsl #28
   14f60:	cmp	r0, r1, lsl #27
   14f64:	adc	r2, r2, r2
   14f68:	subcs	r0, r0, r1, lsl #27
   14f6c:	cmp	r0, r1, lsl #26
   14f70:	adc	r2, r2, r2
   14f74:	subcs	r0, r0, r1, lsl #26
   14f78:	cmp	r0, r1, lsl #25
   14f7c:	adc	r2, r2, r2
   14f80:	subcs	r0, r0, r1, lsl #25
   14f84:	cmp	r0, r1, lsl #24
   14f88:	adc	r2, r2, r2
   14f8c:	subcs	r0, r0, r1, lsl #24
   14f90:	cmp	r0, r1, lsl #23
   14f94:	adc	r2, r2, r2
   14f98:	subcs	r0, r0, r1, lsl #23
   14f9c:	cmp	r0, r1, lsl #22
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #22
   14fa8:	cmp	r0, r1, lsl #21
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #21
   14fb4:	cmp	r0, r1, lsl #20
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #20
   14fc0:	cmp	r0, r1, lsl #19
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #19
   14fcc:	cmp	r0, r1, lsl #18
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #18
   14fd8:	cmp	r0, r1, lsl #17
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #17
   14fe4:	cmp	r0, r1, lsl #16
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #16
   14ff0:	cmp	r0, r1, lsl #15
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #15
   14ffc:	cmp	r0, r1, lsl #14
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #14
   15008:	cmp	r0, r1, lsl #13
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #13
   15014:	cmp	r0, r1, lsl #12
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #12
   15020:	cmp	r0, r1, lsl #11
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #11
   1502c:	cmp	r0, r1, lsl #10
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #10
   15038:	cmp	r0, r1, lsl #9
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #9
   15044:	cmp	r0, r1, lsl #8
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #8
   15050:	cmp	r0, r1, lsl #7
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1, lsl #7
   1505c:	cmp	r0, r1, lsl #6
   15060:	adc	r2, r2, r2
   15064:	subcs	r0, r0, r1, lsl #6
   15068:	cmp	r0, r1, lsl #5
   1506c:	adc	r2, r2, r2
   15070:	subcs	r0, r0, r1, lsl #5
   15074:	cmp	r0, r1, lsl #4
   15078:	adc	r2, r2, r2
   1507c:	subcs	r0, r0, r1, lsl #4
   15080:	cmp	r0, r1, lsl #3
   15084:	adc	r2, r2, r2
   15088:	subcs	r0, r0, r1, lsl #3
   1508c:	cmp	r0, r1, lsl #2
   15090:	adc	r2, r2, r2
   15094:	subcs	r0, r0, r1, lsl #2
   15098:	cmp	r0, r1, lsl #1
   1509c:	adc	r2, r2, r2
   150a0:	subcs	r0, r0, r1, lsl #1
   150a4:	cmp	r0, r1
   150a8:	adc	r2, r2, r2
   150ac:	subcs	r0, r0, r1
   150b0:	mov	r0, r2
   150b4:	bx	lr
   150b8:	moveq	r0, #1
   150bc:	movne	r0, #0
   150c0:	bx	lr
   150c4:	clz	r2, r1
   150c8:	rsb	r2, r2, #31
   150cc:	lsr	r0, r0, r2
   150d0:	bx	lr
   150d4:	cmp	r0, #0
   150d8:	mvnne	r0, #0
   150dc:	b	15100 <table_get_cell_ptr@@Base+0x224>
   150e0:	cmp	r1, #0
   150e4:	beq	150d4 <table_get_cell_ptr@@Base+0x1f8>
   150e8:	push	{r0, r1, lr}
   150ec:	bl	14ef4 <table_get_cell_ptr@@Base+0x18>
   150f0:	pop	{r1, r2, lr}
   150f4:	mul	r3, r2, r0
   150f8:	sub	r1, r1, r3
   150fc:	bx	lr
   15100:	push	{r1, lr}
   15104:	mov	r0, #8
   15108:	bl	11af8 <raise@plt>
   1510c:	pop	{r1, pc}

00015110 <__libc_csu_init@@Base>:
   15110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15114:	mov	r7, r0
   15118:	ldr	r6, [pc, #72]	; 15168 <__libc_csu_init@@Base+0x58>
   1511c:	ldr	r5, [pc, #72]	; 1516c <__libc_csu_init@@Base+0x5c>
   15120:	add	r6, pc, r6
   15124:	add	r5, pc, r5
   15128:	sub	r6, r6, r5
   1512c:	mov	r8, r1
   15130:	mov	r9, r2
   15134:	bl	11ad8 <raise@plt-0x20>
   15138:	asrs	r6, r6, #2
   1513c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15140:	mov	r4, #0
   15144:	add	r4, r4, #1
   15148:	ldr	r3, [r5], #4
   1514c:	mov	r2, r9
   15150:	mov	r1, r8
   15154:	mov	r0, r7
   15158:	blx	r3
   1515c:	cmp	r6, r4
   15160:	bne	15144 <__libc_csu_init@@Base+0x34>
   15164:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15168:	andeq	r0, r1, r8, ror #27
   1516c:	andeq	r0, r1, r0, ror #27

00015170 <__libc_csu_fini@@Base>:
   15170:	bx	lr

Disassembly of section .fini:

00015174 <.fini>:
   15174:	push	{r3, lr}
   15178:	pop	{r3, pc}
