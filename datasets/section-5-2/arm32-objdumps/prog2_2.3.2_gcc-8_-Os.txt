
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010978 <.init>:
   10978:	push	{r3, lr}
   1097c:	bl	10bc4 <_start@@Base+0x3c>
   10980:	pop	{r3, pc}

Disassembly of section .plt:

00010984 <calloc@plt-0x14>:
   10984:	push	{lr}		; (str lr, [sp, #-4]!)
   10988:	ldr	lr, [pc, #4]	; 10994 <calloc@plt-0x4>
   1098c:	add	lr, pc, lr
   10990:	ldr	pc, [lr, #8]!
   10994:	andeq	r1, r1, ip, ror #12

00010998 <calloc@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1644]!	; 0x66c

000109a4 <strcmp@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1636]!	; 0x664

000109b0 <printf@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1628]!	; 0x65c

000109bc <free@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1620]!	; 0x654

000109c8 <fgets@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1612]!	; 0x64c

000109d4 <time@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1604]!	; 0x644

000109e0 <realloc@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1596]!	; 0x63c

000109ec <strcat@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1588]!	; 0x634

000109f8 <strcpy@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1580]!	; 0x62c

00010a04 <puts@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1572]!	; 0x624

00010a10 <malloc@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1564]!	; 0x61c

00010a1c <__libc_start_main@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1556]!	; 0x614

00010a28 <__gmon_start__@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1548]!	; 0x60c

00010a34 <strlen@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1540]!	; 0x604

00010a40 <srand@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a4c <rand@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a58 <__isoc99_scanf@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a64 <abort@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1508]!	; 0x5e4

Disassembly of section .text:

00010a70 <main@@Base>:
   10a70:	push	{r4, r5, r6, r7, r8, lr}
   10a74:	sub	sp, sp, #104	; 0x68
   10a78:	mov	r5, #0
   10a7c:	ldr	r8, [pc, #232]	; 10b6c <main@@Base+0xfc>
   10a80:	bl	10cb8 <vetor_novo@@Base>
   10a84:	ldr	r7, [pc, #228]	; 10b70 <main@@Base+0x100>
   10a88:	mov	r4, r0
   10a8c:	add	r6, r5, #1
   10a90:	mov	r0, r8
   10a94:	mov	r1, r6
   10a98:	bl	109b0 <printf@plt>
   10a9c:	mov	r1, #100	; 0x64
   10aa0:	add	r0, sp, #4
   10aa4:	ldr	r2, [r7]
   10aa8:	bl	109c8 <fgets@plt>
   10aac:	add	r0, sp, #4
   10ab0:	bl	10a34 <strlen@plt>
   10ab4:	add	r3, sp, #104	; 0x68
   10ab8:	mov	r2, r5
   10abc:	add	r0, r3, r0
   10ac0:	mov	r3, #0
   10ac4:	add	r1, sp, #4
   10ac8:	mov	r5, r6
   10acc:	strb	r3, [r0, #-101]	; 0xffffff9b
   10ad0:	mov	r0, r4
   10ad4:	bl	10dfc <vetor_insere@@Base>
   10ad8:	cmp	r6, #5
   10adc:	bne	10a8c <main@@Base+0x1c>
   10ae0:	mov	r0, r4
   10ae4:	bl	10c78 <imprime@@Base>
   10ae8:	ldr	r0, [pc, #132]	; 10b74 <main@@Base+0x104>
   10aec:	bl	109b0 <printf@plt>
   10af0:	add	r1, sp, #4
   10af4:	ldr	r0, [pc, #124]	; 10b78 <main@@Base+0x108>
   10af8:	bl	10a58 <__isoc99_scanf@plt>
   10afc:	add	r1, sp, #4
   10b00:	mov	r0, r4
   10b04:	bl	10f44 <vetor_pesquisa@@Base>
   10b08:	mov	r1, r0
   10b0c:	mov	r0, r4
   10b10:	bl	10ecc <vetor_remove@@Base>
   10b14:	cmp	r0, #0
   10b18:	beq	10b60 <main@@Base+0xf0>
   10b1c:	ldr	r0, [pc, #88]	; 10b7c <main@@Base+0x10c>
   10b20:	bl	10a04 <puts@plt>
   10b24:	mov	r0, r4
   10b28:	bl	10f90 <vetor_ordena@@Base>
   10b2c:	cmp	r0, #0
   10b30:	beq	10b3c <main@@Base+0xcc>
   10b34:	ldr	r0, [pc, #68]	; 10b80 <main@@Base+0x110>
   10b38:	bl	109b0 <printf@plt>
   10b3c:	ldr	r0, [pc, #64]	; 10b84 <main@@Base+0x114>
   10b40:	bl	10a04 <puts@plt>
   10b44:	mov	r0, r4
   10b48:	bl	10c78 <imprime@@Base>
   10b4c:	mov	r0, r4
   10b50:	bl	10cdc <vetor_apaga@@Base>
   10b54:	mov	r0, #0
   10b58:	add	sp, sp, #104	; 0x68
   10b5c:	pop	{r4, r5, r6, r7, r8, pc}
   10b60:	mov	r0, r4
   10b64:	bl	10c78 <imprime@@Base>
   10b68:	b	10b24 <main@@Base+0xb4>
   10b6c:			; <UNDEFINED> instruction: 0x000111b1
   10b70:	andeq	r2, r2, r0, rrx
   10b74:	andeq	r1, r1, r4, asr #3
   10b78:	andeq	r1, r1, r4, ror #3
   10b7c:	andeq	r1, r1, r7, ror #3
   10b80:	strdeq	r1, [r1], -sp
   10b84:	andeq	r1, r1, pc, lsl r2

00010b88 <_start@@Base>:
   10b88:	mov	fp, #0
   10b8c:	mov	lr, #0
   10b90:	pop	{r1}		; (ldr r1, [sp], #4)
   10b94:	mov	r2, sp
   10b98:	push	{r2}		; (str r2, [sp, #-4]!)
   10b9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba0:	ldr	ip, [pc, #16]	; 10bb8 <_start@@Base+0x30>
   10ba4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ba8:	ldr	r0, [pc, #12]	; 10bbc <_start@@Base+0x34>
   10bac:	ldr	r3, [pc, #12]	; 10bc0 <_start@@Base+0x38>
   10bb0:	bl	10a1c <__libc_start_main@plt>
   10bb4:	bl	10a64 <abort@plt>
   10bb8:	andeq	r1, r1, r4, lsl #3
   10bbc:	andeq	r0, r1, r0, ror sl
   10bc0:	andeq	r1, r1, r4, lsr #2
   10bc4:	ldr	r3, [pc, #20]	; 10be0 <_start@@Base+0x58>
   10bc8:	ldr	r2, [pc, #20]	; 10be4 <_start@@Base+0x5c>
   10bcc:	add	r3, pc, r3
   10bd0:	ldr	r2, [r3, r2]
   10bd4:	cmp	r2, #0
   10bd8:	bxeq	lr
   10bdc:	b	10a28 <__gmon_start__@plt>
   10be0:	andeq	r1, r1, ip, lsr #8
   10be4:	andeq	r0, r0, r4, asr r0
   10be8:	ldr	r0, [pc, #24]	; 10c08 <_start@@Base+0x80>
   10bec:	ldr	r3, [pc, #24]	; 10c0c <_start@@Base+0x84>
   10bf0:	cmp	r3, r0
   10bf4:	bxeq	lr
   10bf8:	ldr	r3, [pc, #16]	; 10c10 <_start@@Base+0x88>
   10bfc:	cmp	r3, #0
   10c00:	bxeq	lr
   10c04:	bx	r3
   10c08:	andeq	r2, r2, r0, rrx
   10c0c:	andeq	r2, r2, r0, rrx
   10c10:	andeq	r0, r0, r0
   10c14:	ldr	r0, [pc, #36]	; 10c40 <_start@@Base+0xb8>
   10c18:	ldr	r1, [pc, #36]	; 10c44 <_start@@Base+0xbc>
   10c1c:	sub	r1, r1, r0
   10c20:	asr	r1, r1, #2
   10c24:	add	r1, r1, r1, lsr #31
   10c28:	asrs	r1, r1, #1
   10c2c:	bxeq	lr
   10c30:	ldr	r3, [pc, #16]	; 10c48 <_start@@Base+0xc0>
   10c34:	cmp	r3, #0
   10c38:	bxeq	lr
   10c3c:	bx	r3
   10c40:	andeq	r2, r2, r0, rrx
   10c44:	andeq	r2, r2, r0, rrx
   10c48:	andeq	r0, r0, r0
   10c4c:	push	{r4, lr}
   10c50:	ldr	r4, [pc, #24]	; 10c70 <_start@@Base+0xe8>
   10c54:	ldrb	r3, [r4]
   10c58:	cmp	r3, #0
   10c5c:	popne	{r4, pc}
   10c60:	bl	10be8 <_start@@Base+0x60>
   10c64:	mov	r3, #1
   10c68:	strb	r3, [r4]
   10c6c:	pop	{r4, pc}
   10c70:	andeq	r2, r2, r4, rrx
   10c74:	b	10c14 <_start@@Base+0x8c>

00010c78 <imprime@@Base>:
   10c78:	push	{r4, r5, r6, lr}
   10c7c:	mov	r1, #0
   10c80:	mov	r6, r0
   10c84:	ldr	r5, [pc, #40]	; 10cb4 <imprime@@Base+0x3c>
   10c88:	mov	r0, r6
   10c8c:	add	r4, r1, #1
   10c90:	bl	10dc8 <vetor_elemento@@Base>
   10c94:	mov	r2, r0
   10c98:	mov	r1, r4
   10c9c:	mov	r0, r5
   10ca0:	bl	109b0 <printf@plt>
   10ca4:	cmp	r4, #5
   10ca8:	mov	r1, r4
   10cac:	bne	10c88 <imprime@@Base+0x10>
   10cb0:	pop	{r4, r5, r6, pc}
   10cb4:	muleq	r1, r4, r1

00010cb8 <vetor_novo@@Base>:
   10cb8:	push	{r4, lr}
   10cbc:	mov	r0, #12
   10cc0:	bl	10a10 <malloc@plt>
   10cc4:	cmp	r0, #0
   10cc8:	movne	r3, #0
   10ccc:	strne	r3, [r0]
   10cd0:	strne	r3, [r0, #4]
   10cd4:	strne	r3, [r0, #8]
   10cd8:	pop	{r4, pc}

00010cdc <vetor_apaga@@Base>:
   10cdc:	push	{r4, r5, r6, lr}
   10ce0:	subs	r4, r0, #0
   10ce4:	movne	r5, #0
   10ce8:	popeq	{r4, r5, r6, pc}
   10cec:	ldr	r3, [r4]
   10cf0:	ldr	r0, [r4, #8]
   10cf4:	cmp	r3, r5
   10cf8:	bgt	10d0c <vetor_apaga@@Base+0x30>
   10cfc:	bl	109bc <free@plt>
   10d00:	mov	r0, r4
   10d04:	pop	{r4, r5, r6, lr}
   10d08:	b	109bc <free@plt>
   10d0c:	ldr	r0, [r0, r5, lsl #2]
   10d10:	add	r5, r5, #1
   10d14:	bl	109bc <free@plt>
   10d18:	b	10cec <vetor_apaga@@Base+0x10>

00010d1c <vetor_atribui@@Base>:
   10d1c:	cmp	r0, #0
   10d20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d24:	lsrne	r3, r1, #31
   10d28:	moveq	r3, #1
   10d2c:	cmp	r3, #0
   10d30:	beq	10d40 <vetor_atribui@@Base+0x24>
   10d34:	mvn	r4, #0
   10d38:	mov	r0, r4
   10d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d40:	ldr	r3, [r0]
   10d44:	mov	r4, r1
   10d48:	mov	r5, r0
   10d4c:	cmp	r3, r1
   10d50:	ble	10d34 <vetor_atribui@@Base+0x18>
   10d54:	mov	r0, r2
   10d58:	mov	r9, r2
   10d5c:	lsl	sl, r4, #2
   10d60:	bl	10a34 <strlen@plt>
   10d64:	ldr	r6, [r5, #8]
   10d68:	mov	r8, r0
   10d6c:	ldr	r7, [r6, r4, lsl #2]
   10d70:	mov	r0, r7
   10d74:	bl	10a34 <strlen@plt>
   10d78:	cmp	r0, r8
   10d7c:	bcc	10d94 <vetor_atribui@@Base+0x78>
   10d80:	ldr	r3, [r5, #8]
   10d84:	mov	r1, r9
   10d88:	ldr	r0, [r3, sl]
   10d8c:	bl	109f8 <strcpy@plt>
   10d90:	b	10d38 <vetor_atribui@@Base+0x1c>
   10d94:	add	r1, r8, #1
   10d98:	mov	r0, r7
   10d9c:	bl	109e0 <realloc@plt>
   10da0:	ldr	r3, [r5, #8]
   10da4:	str	r0, [r6, r4, lsl #2]
   10da8:	ldr	r3, [r3, r4, lsl #2]
   10dac:	cmp	r3, #0
   10db0:	bne	10d80 <vetor_atribui@@Base+0x64>
   10db4:	b	10d34 <vetor_atribui@@Base+0x18>

00010db8 <vetor_tamanho@@Base>:
   10db8:	cmp	r0, #0
   10dbc:	ldrne	r0, [r0]
   10dc0:	mvneq	r0, #0
   10dc4:	bx	lr

00010dc8 <vetor_elemento@@Base>:
   10dc8:	cmp	r0, #0
   10dcc:	lsrne	r3, r1, #31
   10dd0:	moveq	r3, #1
   10dd4:	cmp	r3, #0
   10dd8:	bne	10df4 <vetor_elemento@@Base+0x2c>
   10ddc:	ldr	r2, [r0]
   10de0:	cmp	r2, r1
   10de4:	ble	10df4 <vetor_elemento@@Base+0x2c>
   10de8:	ldr	r3, [r0, #8]
   10dec:	ldr	r0, [r3, r1, lsl #2]
   10df0:	bx	lr
   10df4:	mov	r0, #0
   10df8:	bx	lr

00010dfc <vetor_insere@@Base>:
   10dfc:	cmp	r0, #0
   10e00:	push	{r4, r5, r6, r7, r8, lr}
   10e04:	lsrne	r3, r2, #31
   10e08:	moveq	r3, #1
   10e0c:	cmp	r3, #0
   10e10:	beq	10e20 <vetor_insere@@Base+0x24>
   10e14:	mvn	r5, #0
   10e18:	mov	r0, r5
   10e1c:	pop	{r4, r5, r6, r7, r8, pc}
   10e20:	mov	r8, r1
   10e24:	ldr	r1, [r0]
   10e28:	mov	r5, r2
   10e2c:	mov	r4, r0
   10e30:	cmp	r1, r2
   10e34:	blt	10e14 <vetor_insere@@Base+0x18>
   10e38:	ldr	r3, [r0, #4]
   10e3c:	cmp	r1, r3
   10e40:	beq	10e8c <vetor_insere@@Base+0x90>
   10e44:	ldr	r6, [r4]
   10e48:	sub	r3, r6, #1
   10e4c:	cmp	r3, r5
   10e50:	ldr	r7, [r4, #8]
   10e54:	bge	10eb8 <vetor_insere@@Base+0xbc>
   10e58:	mov	r0, r8
   10e5c:	bl	10a34 <strlen@plt>
   10e60:	mov	r1, #1
   10e64:	add	r0, r0, r1
   10e68:	bl	10998 <calloc@plt>
   10e6c:	cmp	r0, #0
   10e70:	str	r0, [r7, r5, lsl #2]
   10e74:	beq	10e14 <vetor_insere@@Base+0x18>
   10e78:	add	r6, r6, #1
   10e7c:	mov	r1, r8
   10e80:	bl	109f8 <strcpy@plt>
   10e84:	str	r6, [r4]
   10e88:	b	10e18 <vetor_insere@@Base+0x1c>
   10e8c:	cmp	r1, #0
   10e90:	ldr	r0, [r0, #8]
   10e94:	lslne	r1, r1, #1
   10e98:	moveq	r1, #1
   10e9c:	str	r1, [r4, #4]
   10ea0:	lsl	r1, r1, #2
   10ea4:	bl	109e0 <realloc@plt>
   10ea8:	cmp	r0, #0
   10eac:	str	r0, [r4, #8]
   10eb0:	bne	10e44 <vetor_insere@@Base+0x48>
   10eb4:	b	10e14 <vetor_insere@@Base+0x18>
   10eb8:	ldr	r1, [r7, r3, lsl #2]
   10ebc:	add	r2, r7, r3, lsl #2
   10ec0:	sub	r3, r3, #1
   10ec4:	str	r1, [r2, #4]
   10ec8:	b	10e4c <vetor_insere@@Base+0x50>

00010ecc <vetor_remove@@Base>:
   10ecc:	cmp	r0, #0
   10ed0:	lsrne	r3, r1, #31
   10ed4:	moveq	r3, #1
   10ed8:	cmp	r3, #0
   10edc:	bne	10f3c <vetor_remove@@Base+0x70>
   10ee0:	ldr	r3, [r0]
   10ee4:	cmp	r3, r1
   10ee8:	ble	10f3c <vetor_remove@@Base+0x70>
   10eec:	ldr	r3, [r0, #8]
   10ef0:	push	{r4, r5, r6, lr}
   10ef4:	mov	r4, r1
   10ef8:	mov	r5, r0
   10efc:	ldr	r0, [r3, r1, lsl #2]
   10f00:	bl	109bc <free@plt>
   10f04:	add	r1, r4, #1
   10f08:	ldr	r3, [r5]
   10f0c:	cmp	r3, r1
   10f10:	bgt	10f24 <vetor_remove@@Base+0x58>
   10f14:	sub	r3, r3, #1
   10f18:	mov	r0, #0
   10f1c:	str	r3, [r5]
   10f20:	pop	{r4, r5, r6, pc}
   10f24:	ldr	r3, [r5, #8]
   10f28:	add	r2, r3, r1, lsl #2
   10f2c:	ldr	r3, [r3, r1, lsl #2]
   10f30:	add	r1, r1, #1
   10f34:	str	r3, [r2, #-4]
   10f38:	b	10f08 <vetor_remove@@Base+0x3c>
   10f3c:	mvn	r0, #0
   10f40:	bx	lr

00010f44 <vetor_pesquisa@@Base>:
   10f44:	push	{r4, r5, r6, r7, r8, lr}
   10f48:	subs	r5, r0, #0
   10f4c:	movne	r6, r1
   10f50:	movne	r4, #0
   10f54:	ldrne	r7, [r5]
   10f58:	bne	10f84 <vetor_pesquisa@@Base+0x40>
   10f5c:	mvn	r4, #0
   10f60:	mov	r0, r4
   10f64:	pop	{r4, r5, r6, r7, r8, pc}
   10f68:	ldr	r3, [r5, #8]
   10f6c:	mov	r1, r6
   10f70:	ldr	r0, [r3, r4, lsl #2]
   10f74:	bl	109a4 <strcmp@plt>
   10f78:	cmp	r0, #0
   10f7c:	beq	10f60 <vetor_pesquisa@@Base+0x1c>
   10f80:	add	r4, r4, #1
   10f84:	cmp	r7, r4
   10f88:	bgt	10f68 <vetor_pesquisa@@Base+0x24>
   10f8c:	b	10f5c <vetor_pesquisa@@Base+0x18>

00010f90 <vetor_ordena@@Base>:
   10f90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f94:	subs	r5, r0, #0
   10f98:	movne	r4, #1
   10f9c:	bne	10fe4 <vetor_ordena@@Base+0x54>
   10fa0:	mvn	r0, #0
   10fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fa8:	ldr	r8, [r5, #8]
   10fac:	mov	r6, r4
   10fb0:	ldr	r9, [r8, r4, lsl #2]
   10fb4:	add	r7, r8, r4, lsl #2
   10fb8:	mov	r0, r9
   10fbc:	ldr	r1, [r7, #-4]
   10fc0:	bl	109a4 <strcmp@plt>
   10fc4:	cmp	r0, #0
   10fc8:	bge	10fdc <vetor_ordena@@Base+0x4c>
   10fcc:	ldr	r3, [r7, #-4]
   10fd0:	subs	r6, r6, #1
   10fd4:	str	r3, [r7], #-4
   10fd8:	bne	10fb8 <vetor_ordena@@Base+0x28>
   10fdc:	add	r4, r4, #1
   10fe0:	str	r9, [r8, r6, lsl #2]
   10fe4:	ldr	r3, [r5]
   10fe8:	cmp	r3, r4
   10fec:	bgt	10fa8 <vetor_ordena@@Base+0x18>
   10ff0:	mov	r0, #0
   10ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00010ff8 <vetor_concatena@@Base>:
   10ff8:	cmp	r1, #0
   10ffc:	cmpne	r0, #0
   11000:	push	{r4, r5, r6, lr}
   11004:	moveq	r6, #0
   11008:	beq	1105c <vetor_concatena@@Base+0x64>
   1100c:	mov	r5, r0
   11010:	mov	r4, r1
   11014:	bl	10cb8 <vetor_novo@@Base>
   11018:	mov	r6, r0
   1101c:	ldr	r2, [r5]
   11020:	ldrd	r0, [r4]
   11024:	add	r3, r2, r0, lsl #2
   11028:	ldr	r0, [r2, r0, lsl #2]
   1102c:	str	r3, [r6, #8]
   11030:	ldr	r3, [r5, #4]
   11034:	add	r3, r3, r1
   11038:	str	r3, [r6, #4]
   1103c:	ldr	r3, [r5, #8]
   11040:	ldr	r1, [r3]
   11044:	bl	109f8 <strcpy@plt>
   11048:	ldr	r2, [r4, #8]
   1104c:	ldr	r3, [r6, #8]
   11050:	ldr	r1, [r2]
   11054:	ldr	r0, [r3]
   11058:	bl	109ec <strcat@plt>
   1105c:	mov	r0, r6
   11060:	pop	{r4, r5, r6, pc}

00011064 <vetor_inverte@@Base>:
   11064:	cmp	r0, #0
   11068:	beq	110bc <vetor_inverte@@Base+0x58>
   1106c:	ldr	r1, [r0]
   11070:	cmp	r1, #0
   11074:	ble	110bc <vetor_inverte@@Base+0x58>
   11078:	mov	r3, r1
   1107c:	mov	r2, #0
   11080:	push	{r4, lr}
   11084:	ldr	ip, [r0, #8]
   11088:	ldr	lr, [ip, r2, lsl #2]
   1108c:	ldr	r4, [ip, r3, lsl #2]
   11090:	str	r4, [ip, r2, lsl #2]
   11094:	add	r2, r2, #1
   11098:	str	lr, [ip, r3, lsl #2]
   1109c:	sub	r3, r3, #1
   110a0:	cmp	r1, r3
   110a4:	movlt	ip, r1
   110a8:	movge	ip, r3
   110ac:	cmp	r2, ip
   110b0:	blt	11084 <vetor_inverte@@Base+0x20>
   110b4:	mov	r0, #0
   110b8:	pop	{r4, pc}
   110bc:	mov	r0, #0
   110c0:	bx	lr

000110c4 <vetor_baralha@@Base>:
   110c4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   110c8:	mov	r4, #0
   110cc:	ldr	r6, [r0]
   110d0:	bl	10cb8 <vetor_novo@@Base>
   110d4:	mov	r5, r0
   110d8:	add	r0, sp, #4
   110dc:	bl	109d4 <time@plt>
   110e0:	bl	10a40 <srand@plt>
   110e4:	add	r7, r6, #1
   110e8:	cmp	r4, r6
   110ec:	blt	110fc <vetor_baralha@@Base+0x38>
   110f0:	mov	r0, r5
   110f4:	add	sp, sp, #12
   110f8:	pop	{r4, r5, r6, r7, pc}
   110fc:	bl	10a4c <rand@plt>
   11100:	sdiv	r2, r0, r7
   11104:	ldr	r3, [r5, #8]
   11108:	ldr	r1, [r3, r4, lsl #2]
   1110c:	mls	r0, r2, r7, r0
   11110:	ldr	r2, [r3, r0, lsl #2]
   11114:	str	r2, [r3, r4, lsl #2]
   11118:	add	r4, r4, #1
   1111c:	str	r1, [r3, r0, lsl #2]
   11120:	b	110e8 <vetor_baralha@@Base+0x24>

00011124 <__libc_csu_init@@Base>:
   11124:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11128:	mov	r7, r0
   1112c:	ldr	r6, [pc, #72]	; 1117c <__libc_csu_init@@Base+0x58>
   11130:	ldr	r5, [pc, #72]	; 11180 <__libc_csu_init@@Base+0x5c>
   11134:	add	r6, pc, r6
   11138:	add	r5, pc, r5
   1113c:	sub	r6, r6, r5
   11140:	mov	r8, r1
   11144:	mov	r9, r2
   11148:	bl	10978 <calloc@plt-0x20>
   1114c:	asrs	r6, r6, #2
   11150:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11154:	mov	r4, #0
   11158:	add	r4, r4, #1
   1115c:	ldr	r3, [r5], #4
   11160:	mov	r2, r9
   11164:	mov	r1, r8
   11168:	mov	r0, r7
   1116c:	blx	r3
   11170:	cmp	r6, r4
   11174:	bne	11158 <__libc_csu_init@@Base+0x34>
   11178:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1117c:	ldrdeq	r0, [r1], -r8
   11180:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00011184 <__libc_csu_fini@@Base>:
   11184:	bx	lr

Disassembly of section .fini:

00011188 <.fini>:
   11188:	push	{r3, lr}
   1118c:	pop	{r3, pc}
