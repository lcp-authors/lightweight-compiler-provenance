
../repos/coreutils/src/comm:     file format elf32-littlearm


Disassembly of section .init:

00010cac <.init>:
   10cac:	push	{r3, lr}
   10cb0:	bl	117d4 <close@plt+0x898>
   10cb4:	pop	{r3, pc}

Disassembly of section .plt:

00010cb8 <fdopen@plt-0x14>:
   10cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cbc:	ldr	lr, [pc, #4]	; 10cc8 <fdopen@plt-0x4>
   10cc0:	add	lr, pc, lr
   10cc4:	ldr	pc, [lr, #8]!
   10cc8:	andeq	r5, r1, r8, lsr r3

00010ccc <fdopen@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #824]!	; 0x338

00010cd8 <calloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #816]!	; 0x330

00010ce4 <fputs_unlocked@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #808]!	; 0x328

00010cf0 <raise@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #800]!	; 0x320

00010cfc <strcmp@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #792]!	; 0x318

00010d08 <posix_fadvise64@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #784]!	; 0x310

00010d14 <fflush@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #776]!	; 0x308

00010d20 <free@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #768]!	; 0x300

00010d2c <_exit@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #760]!	; 0x2f8

00010d38 <memcpy@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #752]!	; 0x2f0

00010d44 <mbsinit@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d50 <fwrite_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #736]!	; 0x2e0

00010d5c <memcmp@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #728]!	; 0x2d8

00010d68 <fputc_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #720]!	; 0x2d0

00010d74 <getc_unlocked@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d80 <dcgettext@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #704]!	; 0x2c0

00010d8c <realloc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #696]!	; 0x2b8

00010d98 <textdomain@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #688]!	; 0x2b0

00010da4 <iswprint@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #680]!	; 0x2a8

00010db0 <lseek64@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dbc <__ctype_get_mb_cur_max@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #664]!	; 0x298

00010dc8 <__fpending@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #656]!	; 0x290

00010dd4 <ferror_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #648]!	; 0x288

00010de0 <mbrtowc@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #640]!	; 0x280

00010dec <error@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #632]!	; 0x278

00010df8 <strcoll@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #624]!	; 0x270

00010e04 <malloc@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #616]!	; 0x268

00010e10 <__libc_start_main@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #608]!	; 0x260

00010e1c <__freading@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #600]!	; 0x258

00010e28 <__gmon_start__@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #592]!	; 0x250

00010e34 <getopt_long@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #584]!	; 0x248

00010e40 <__ctype_b_loc@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #576]!	; 0x240

00010e4c <exit@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #568]!	; 0x238

00010e58 <strlen@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #560]!	; 0x230

00010e64 <__errno_location@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #552]!	; 0x228

00010e70 <__cxa_atexit@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #544]!	; 0x220

00010e7c <memset@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #536]!	; 0x218

00010e88 <__printf_chk@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #528]!	; 0x210

00010e94 <fileno@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #520]!	; 0x208

00010ea0 <__fprintf_chk@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #512]!	; 0x200

00010eac <fclose@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #504]!	; 0x1f8

00010eb8 <fseeko64@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec4 <fcntl64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #488]!	; 0x1e8

00010ed0 <setlocale@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #480]!	; 0x1e0

00010edc <strrchr@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ee8 <nl_langinfo@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef4 <fopen64@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #456]!	; 0x1c8

00010f00 <bindtextdomain@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #448]!	; 0x1c0

00010f0c <fputs@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #440]!	; 0x1b8

00010f18 <strncmp@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #432]!	; 0x1b0

00010f24 <abort@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #424]!	; 0x1a8

00010f30 <feof_unlocked@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #416]!	; 0x1a0

00010f3c <close@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #408]!	; 0x198

Disassembly of section .text:

00010f48 <.text>:
   10f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f4c:	mov	r7, r0
   10f50:	sub	sp, sp, #308	; 0x134
   10f54:	ldr	r0, [r1]
   10f58:	mov	r8, r1
   10f5c:	bl	12214 <close@plt+0x12d8>
   10f60:	ldr	r1, [pc, #1976]	; 11720 <close@plt+0x7e4>
   10f64:	mov	r0, #6
   10f68:	bl	10ed0 <setlocale@plt>
   10f6c:	ldr	r1, [pc, #1968]	; 11724 <close@plt+0x7e8>
   10f70:	ldr	r0, [pc, #1968]	; 11728 <close@plt+0x7ec>
   10f74:	bl	10f00 <bindtextdomain@plt>
   10f78:	ldr	r0, [pc, #1960]	; 11728 <close@plt+0x7ec>
   10f7c:	bl	10d98 <textdomain@plt>
   10f80:	mov	r0, #3
   10f84:	bl	1200c <close@plt+0x10d0>
   10f88:	ldr	r4, [pc, #1948]	; 1172c <close@plt+0x7f0>
   10f8c:	ldr	sl, [pc, #1948]	; 11730 <close@plt+0x7f4>
   10f90:	ldr	fp, [pc, #1948]	; 11734 <close@plt+0x7f8>
   10f94:	ldr	r9, [pc, #1948]	; 11738 <close@plt+0x7fc>
   10f98:	strb	r0, [r4, #7]
   10f9c:	ldr	r0, [pc, #1944]	; 1173c <close@plt+0x800>
   10fa0:	bl	14fdc <close@plt+0x40a0>
   10fa4:	mov	r3, #1
   10fa8:	strb	r3, [r4, #8]
   10fac:	strb	r3, [r4, #9]
   10fb0:	strb	r3, [r4, #10]
   10fb4:	mov	r3, #0
   10fb8:	strb	r3, [r4, #4]
   10fbc:	strb	r3, [r4, #6]
   10fc0:	strb	r3, [r4, #5]
   10fc4:	str	r3, [r4]
   10fc8:	strb	r3, [r4, #11]
   10fcc:	mov	r6, #0
   10fd0:	str	r6, [sp]
   10fd4:	ldr	r3, [pc, #1892]	; 11740 <close@plt+0x804>
   10fd8:	ldr	r2, [pc, #1892]	; 11744 <close@plt+0x808>
   10fdc:	mov	r1, r8
   10fe0:	mov	r0, r7
   10fe4:	bl	10e34 <getopt_long@plt>
   10fe8:	cmn	r0, #1
   10fec:	mov	r5, r0
   10ff0:	bne	11044 <close@plt+0x108>
   10ff4:	ldr	r3, [r4, #12]
   10ff8:	cmp	r3, r6
   10ffc:	moveq	r3, #1
   11000:	streq	r3, [r4, #12]
   11004:	ldr	r4, [pc, #1852]	; 11748 <close@plt+0x80c>
   11008:	ldr	r3, [r4]
   1100c:	sub	r2, r7, r3
   11010:	cmp	r2, #1
   11014:	bgt	111c8 <close@plt+0x28c>
   11018:	cmp	r7, r3
   1101c:	mov	r2, #5
   11020:	bgt	11194 <close@plt+0x258>
   11024:	ldr	r1, [pc, #1824]	; 1174c <close@plt+0x810>
   11028:	mov	r0, #0
   1102c:	bl	10d80 <dcgettext@plt>
   11030:	mov	r1, #0
   11034:	mov	r2, r0
   11038:	mov	r0, r1
   1103c:	bl	10dec <error@plt>
   11040:	b	11064 <close@plt+0x128>
   11044:	cmp	r5, #51	; 0x33
   11048:	beq	110d0 <close@plt+0x194>
   1104c:	bgt	11084 <close@plt+0x148>
   11050:	cmn	r5, #2
   11054:	beq	11154 <close@plt+0x218>
   11058:	bgt	1106c <close@plt+0x130>
   1105c:	cmn	r5, #3
   11060:	beq	1115c <close@plt+0x220>
   11064:	mov	r0, #1
   11068:	b	11158 <close@plt+0x21c>
   1106c:	cmp	r5, #49	; 0x31
   11070:	beq	110c8 <close@plt+0x18c>
   11074:	cmp	r5, #50	; 0x32
   11078:	bne	11064 <close@plt+0x128>
   1107c:	strb	r6, [r4, #9]
   11080:	b	10fcc <close@plt+0x90>
   11084:	cmp	r5, sl
   11088:	beq	110e0 <close@plt+0x1a4>
   1108c:	bgt	110a8 <close@plt+0x16c>
   11090:	cmp	r5, #122	; 0x7a
   11094:	beq	110d8 <close@plt+0x19c>
   11098:	cmp	r5, #256	; 0x100
   1109c:	bne	11064 <close@plt+0x128>
   110a0:	mov	r3, #1
   110a4:	b	110e4 <close@plt+0x1a8>
   110a8:	cmp	r5, fp
   110ac:	beq	110ec <close@plt+0x1b0>
   110b0:	ldr	r3, [pc, #1688]	; 11750 <close@plt+0x814>
   110b4:	cmp	r5, r3
   110b8:	bne	11064 <close@plt+0x128>
   110bc:	mov	r3, #1
   110c0:	strb	r3, [r4, #11]
   110c4:	b	10fcc <close@plt+0x90>
   110c8:	strb	r6, [r4, #8]
   110cc:	b	10fcc <close@plt+0x90>
   110d0:	strb	r6, [r4, #10]
   110d4:	b	10fcc <close@plt+0x90>
   110d8:	strb	r6, [r9]
   110dc:	b	10fcc <close@plt+0x90>
   110e0:	mov	r3, #2
   110e4:	str	r3, [r4]
   110e8:	b	10fcc <close@plt+0x90>
   110ec:	ldr	r3, [r4, #12]
   110f0:	ldr	r5, [pc, #1628]	; 11754 <close@plt+0x818>
   110f4:	cmp	r3, #0
   110f8:	beq	11130 <close@plt+0x1f4>
   110fc:	ldr	r1, [r5]
   11100:	ldr	r0, [r9, #4]
   11104:	bl	10cfc <strcmp@plt>
   11108:	cmp	r0, #0
   1110c:	beq	11130 <close@plt+0x1f4>
   11110:	ldr	r1, [pc, #1600]	; 11758 <close@plt+0x81c>
   11114:	mov	r2, #5
   11118:	mov	r0, #0
   1111c:	bl	10d80 <dcgettext@plt>
   11120:	mov	r1, #0
   11124:	mov	r2, r0
   11128:	mov	r0, #1
   1112c:	bl	10dec <error@plt>
   11130:	ldr	r0, [r5]
   11134:	str	r0, [r9, #4]
   11138:	ldrb	r3, [r0]
   1113c:	cmp	r3, #0
   11140:	moveq	r0, #1
   11144:	beq	1114c <close@plt+0x210>
   11148:	bl	10e58 <strlen@plt>
   1114c:	str	r0, [r4, #12]
   11150:	b	10fcc <close@plt+0x90>
   11154:	mov	r0, r6
   11158:	bl	11980 <close@plt+0xa44>
   1115c:	ldr	r3, [pc, #1528]	; 1175c <close@plt+0x820>
   11160:	ldr	r0, [pc, #1528]	; 11760 <close@plt+0x824>
   11164:	str	r3, [sp, #4]
   11168:	ldr	r3, [pc, #1524]	; 11764 <close@plt+0x828>
   1116c:	str	r6, [sp, #8]
   11170:	str	r3, [sp]
   11174:	ldr	r3, [pc, #1516]	; 11768 <close@plt+0x82c>
   11178:	ldr	r0, [r0]
   1117c:	ldr	r2, [pc, #1512]	; 1176c <close@plt+0x830>
   11180:	ldr	r3, [r3]
   11184:	ldr	r1, [pc, #1508]	; 11770 <close@plt+0x834>
   11188:	bl	13d24 <close@plt+0x2de8>
   1118c:	mov	r0, r6
   11190:	bl	10e4c <exit@plt>
   11194:	ldr	r1, [pc, #1496]	; 11774 <close@plt+0x838>
   11198:	mov	r0, #0
   1119c:	bl	10d80 <dcgettext@plt>
   111a0:	sub	r7, r7, #-1073741823	; 0xc0000001
   111a4:	mov	r4, r0
   111a8:	ldr	r0, [r8, r7, lsl #2]
   111ac:	bl	13844 <close@plt+0x2908>
   111b0:	mov	r2, r4
   111b4:	mov	r3, r0
   111b8:	mov	r1, #0
   111bc:	mov	r0, r1
   111c0:	bl	10dec <error@plt>
   111c4:	b	11064 <close@plt+0x128>
   111c8:	cmp	r2, #2
   111cc:	beq	11200 <close@plt+0x2c4>
   111d0:	mov	r2, #5
   111d4:	ldr	r1, [pc, #1436]	; 11778 <close@plt+0x83c>
   111d8:	mov	r0, #0
   111dc:	bl	10d80 <dcgettext@plt>
   111e0:	ldr	r3, [r4]
   111e4:	add	r3, r3, #2
   111e8:	mov	r5, r0
   111ec:	ldr	r0, [r8, r3, lsl #2]
   111f0:	bl	13844 <close@plt+0x2908>
   111f4:	mov	r2, r5
   111f8:	mov	r3, r0
   111fc:	b	111b8 <close@plt+0x27c>
   11200:	add	r3, r8, r3, lsl #2
   11204:	ldr	sl, [pc, #1392]	; 1177c <close@plt+0x840>
   11208:	mov	r9, r3
   1120c:	add	r7, sp, #152	; 0x98
   11210:	mov	r4, #0
   11214:	str	r3, [sp, #28]
   11218:	mov	r3, #48	; 0x30
   1121c:	add	r2, sp, #176	; 0xb0
   11220:	mul	r3, r3, r4
   11224:	lsl	r8, r4, #4
   11228:	add	r1, r2, r8
   1122c:	mov	r6, #0
   11230:	mov	r2, #12
   11234:	mla	fp, r2, r6, r3
   11238:	str	r3, [sp, #40]	; 0x28
   1123c:	add	r3, sp, #208	; 0xd0
   11240:	add	fp, r3, fp
   11244:	mov	r0, fp
   11248:	str	r1, [sp, #48]	; 0x30
   1124c:	str	r2, [sp, #32]
   11250:	bl	120d0 <close@plt+0x1194>
   11254:	ldr	r1, [sp, #48]	; 0x30
   11258:	ldr	r2, [sp, #32]
   1125c:	ldr	r3, [sp, #40]	; 0x28
   11260:	str	fp, [r1, r6, lsl #2]
   11264:	add	r6, r6, #1
   11268:	cmp	r6, #4
   1126c:	bne	11234 <close@plt+0x2f8>
   11270:	mov	r6, r9
   11274:	ldr	fp, [r9], #4
   11278:	mov	r3, #0
   1127c:	mov	r0, fp
   11280:	str	r3, [r7]
   11284:	str	r3, [r7, #4]
   11288:	str	r3, [r7, #8]
   1128c:	ldr	r1, [pc, #1260]	; 11780 <close@plt+0x844>
   11290:	bl	10cfc <strcmp@plt>
   11294:	cmp	r0, #0
   11298:	ldreq	fp, [sl]
   1129c:	beq	112b0 <close@plt+0x374>
   112a0:	mov	r0, fp
   112a4:	ldr	r1, [pc, #1240]	; 11784 <close@plt+0x848>
   112a8:	bl	11ee4 <close@plt+0xfa8>
   112ac:	mov	fp, r0
   112b0:	add	r3, sp, #72	; 0x48
   112b4:	cmp	fp, #0
   112b8:	str	fp, [r3, r4, lsl #2]
   112bc:	bne	112ec <close@plt+0x3b0>
   112c0:	bl	10e64 <__errno_location@plt>
   112c4:	ldr	r2, [r6]
   112c8:	ldr	r4, [r0]
   112cc:	mov	r1, #3
   112d0:	mov	r0, #0
   112d4:	bl	13704 <close@plt+0x27c8>
   112d8:	ldr	r2, [pc, #1192]	; 11788 <close@plt+0x84c>
   112dc:	mov	r1, r4
   112e0:	mov	r3, r0
   112e4:	mov	r0, #1
   112e8:	bl	10dec <error@plt>
   112ec:	mov	r0, fp
   112f0:	mov	r1, #2
   112f4:	bl	11dbc <close@plt+0xe80>
   112f8:	add	r3, sp, #304	; 0x130
   112fc:	add	r8, r3, r8
   11300:	ldr	r3, [pc, #1072]	; 11738 <close@plt+0x7fc>
   11304:	mov	r1, fp
   11308:	ldr	r0, [r8, #-128]	; 0xffffff80
   1130c:	ldrb	r2, [r3]
   11310:	bl	120e4 <close@plt+0x11a8>
   11314:	add	r3, sp, #64	; 0x40
   11318:	str	r0, [r3, r4, lsl #2]
   1131c:	mov	r0, fp
   11320:	bl	10dd4 <ferror_unlocked@plt>
   11324:	subs	fp, r0, #0
   11328:	bne	112c0 <close@plt+0x384>
   1132c:	add	r4, r4, #1
   11330:	cmp	r4, #2
   11334:	add	r7, r7, #12
   11338:	bne	11218 <close@plt+0x2dc>
   1133c:	ldr	r4, [pc, #1000]	; 1172c <close@plt+0x7f0>
   11340:	mov	r2, #0
   11344:	mov	r3, #0
   11348:	strd	r2, [sp, #32]
   1134c:	strd	r2, [sp, #48]	; 0x30
   11350:	strd	r2, [sp, #40]	; 0x28
   11354:	ldr	r7, [sp, #64]	; 0x40
   11358:	cmp	r7, #0
   1135c:	bne	11430 <close@plt+0x4f4>
   11360:	ldr	r3, [sp, #68]	; 0x44
   11364:	cmp	r3, #0
   11368:	bne	11430 <close@plt+0x4f4>
   1136c:	ldr	r0, [sp, #72]	; 0x48
   11370:	bl	11dec <close@plt+0xeb0>
   11374:	cmp	r0, #0
   11378:	bne	1170c <close@plt+0x7d0>
   1137c:	ldr	r0, [sp, #76]	; 0x4c
   11380:	bl	11dec <close@plt+0xeb0>
   11384:	subs	r5, r0, #0
   11388:	bne	11708 <close@plt+0x7cc>
   1138c:	ldrb	r3, [r4, #11]
   11390:	cmp	r3, #0
   11394:	beq	1140c <close@plt+0x4d0>
   11398:	add	r2, sp, #80	; 0x50
   1139c:	ldrd	r0, [sp, #40]	; 0x28
   113a0:	bl	12068 <close@plt+0x112c>
   113a4:	add	r2, sp, #104	; 0x68
   113a8:	ldr	r8, [pc, #904]	; 11738 <close@plt+0x7fc>
   113ac:	mov	r7, r0
   113b0:	ldrd	r0, [sp, #48]	; 0x30
   113b4:	bl	12068 <close@plt+0x112c>
   113b8:	add	r2, sp, #128	; 0x80
   113bc:	mov	r9, r0
   113c0:	ldrd	r0, [sp, #32]
   113c4:	bl	12068 <close@plt+0x112c>
   113c8:	mov	r2, #5
   113cc:	ldr	r1, [pc, #952]	; 1178c <close@plt+0x850>
   113d0:	ldr	r6, [r8, #4]
   113d4:	mov	sl, r0
   113d8:	mov	r0, r5
   113dc:	bl	10d80 <dcgettext@plt>
   113e0:	ldrb	r3, [r8]
   113e4:	mov	r2, r7
   113e8:	str	r6, [sp, #12]
   113ec:	str	r3, [sp, #20]
   113f0:	stmib	sp, {r6, sl}
   113f4:	str	r9, [sp]
   113f8:	mov	r3, r6
   113fc:	ldr	r1, [pc, #908]	; 11790 <close@plt+0x854>
   11400:	str	r0, [sp, #16]
   11404:	mov	r0, #1
   11408:	bl	10e88 <__printf_chk@plt>
   1140c:	ldrb	r3, [r4, #5]
   11410:	cmp	r3, #0
   11414:	bne	11424 <close@plt+0x4e8>
   11418:	ldrb	r0, [r4, #6]
   1141c:	cmp	r0, #0
   11420:	beq	11190 <close@plt+0x254>
   11424:	mov	r2, #5
   11428:	ldr	r1, [pc, #868]	; 11794 <close@plt+0x858>
   1142c:	b	11118 <close@plt+0x1dc>
   11430:	mov	r3, #0
   11434:	cmp	r7, r3
   11438:	strb	r3, [sp, #128]	; 0x80
   1143c:	strb	r3, [sp, #129]	; 0x81
   11440:	beq	11608 <close@plt+0x6cc>
   11444:	ldr	r8, [sp, #68]	; 0x44
   11448:	cmp	r8, r3
   1144c:	beq	11658 <close@plt+0x71c>
   11450:	ldrb	r3, [r4, #7]
   11454:	ldr	sl, [r8, #4]
   11458:	ldr	r9, [r7, #4]
   1145c:	cmp	r3, #0
   11460:	beq	115d0 <close@plt+0x694>
   11464:	sub	r3, sl, #1
   11468:	ldr	r2, [r8, #8]
   1146c:	sub	r1, r9, #1
   11470:	ldr	r0, [r7, #8]
   11474:	bl	1438c <close@plt+0x3450>
   11478:	mov	r6, r0
   1147c:	cmp	r6, #0
   11480:	bne	1160c <close@plt+0x6d0>
   11484:	ldrd	r2, [sp, #32]
   11488:	adds	r2, r2, #1
   1148c:	adc	r3, r3, #0
   11490:	strd	r2, [sp, #32]
   11494:	ldrb	r3, [r4, #10]
   11498:	cmp	r3, #0
   1149c:	beq	11504 <close@plt+0x5c8>
   114a0:	ldr	r3, [pc, #696]	; 11760 <close@plt+0x824>
   114a4:	ldr	r7, [r3]
   114a8:	ldrb	r3, [r4, #8]
   114ac:	cmp	r3, #0
   114b0:	beq	114cc <close@plt+0x590>
   114b4:	ldr	r0, [pc, #636]	; 11738 <close@plt+0x7fc>
   114b8:	mov	r3, r7
   114bc:	ldr	r2, [r4, #12]
   114c0:	mov	r1, #1
   114c4:	ldr	r0, [r0, #4]
   114c8:	bl	10d50 <fwrite_unlocked@plt>
   114cc:	ldrb	r3, [r4, #9]
   114d0:	cmp	r3, #0
   114d4:	beq	114f0 <close@plt+0x5b4>
   114d8:	ldr	r0, [pc, #600]	; 11738 <close@plt+0x7fc>
   114dc:	mov	r3, r7
   114e0:	ldr	r2, [r4, #12]
   114e4:	mov	r1, #1
   114e8:	ldr	r0, [r0, #4]
   114ec:	bl	10d50 <fwrite_unlocked@plt>
   114f0:	ldr	r2, [r8, #4]
   114f4:	ldr	r0, [r8, #8]
   114f8:	mov	r3, r7
   114fc:	mov	r1, #1
   11500:	bl	10d50 <fwrite_unlocked@plt>
   11504:	mov	r3, #1
   11508:	cmp	r6, #0
   1150c:	strb	r3, [sp, #129]	; 0x81
   11510:	beq	1164c <close@plt+0x710>
   11514:	add	r8, sp, #152	; 0x98
   11518:	mov	r7, fp
   1151c:	add	sl, sp, #128	; 0x80
   11520:	ldrb	r3, [r7, sl]
   11524:	cmp	r3, #0
   11528:	beq	116f4 <close@plt+0x7b8>
   1152c:	ldr	r3, [r8]
   11530:	ldr	r9, [r8, #4]
   11534:	add	r2, r3, #1
   11538:	str	r3, [r8, #4]
   1153c:	str	r3, [sp, #60]	; 0x3c
   11540:	add	r3, sp, #72	; 0x48
   11544:	and	r2, r2, #3
   11548:	ldr	r3, [r3, r7, lsl #2]
   1154c:	lsl	r6, r7, #2
   11550:	str	r2, [r8]
   11554:	add	r2, r6, r2
   11558:	str	r3, [sp, #56]	; 0x38
   1155c:	add	r3, sp, #304	; 0x130
   11560:	add	r0, r3, r2, lsl #2
   11564:	ldr	r3, [pc, #460]	; 11738 <close@plt+0x7fc>
   11568:	ldr	r1, [sp, #56]	; 0x38
   1156c:	str	r9, [r8, #8]
   11570:	ldrb	r2, [r3]
   11574:	ldr	r0, [r0, #-128]	; 0xffffff80
   11578:	bl	120e4 <close@plt+0x11a8>
   1157c:	add	r2, sp, #64	; 0x40
   11580:	ldr	r3, [sp, #60]	; 0x3c
   11584:	cmp	r0, #0
   11588:	mov	r1, r0
   1158c:	str	r0, [r2, r7, lsl #2]
   11590:	beq	116bc <close@plt+0x780>
   11594:	add	r6, r6, r3
   11598:	add	r3, sp, #304	; 0x130
   1159c:	add	r6, r3, r6, lsl #2
   115a0:	add	r2, r7, #1
   115a4:	ldr	r0, [r6, #-128]	; 0xffffff80
   115a8:	bl	118c0 <close@plt+0x984>
   115ac:	ldr	r0, [sp, #56]	; 0x38
   115b0:	bl	10dd4 <ferror_unlocked@plt>
   115b4:	cmp	r0, #0
   115b8:	beq	116f0 <close@plt+0x7b4>
   115bc:	bl	10e64 <__errno_location@plt>
   115c0:	ldr	r3, [sp, #28]
   115c4:	ldr	r2, [r3, r7, lsl #2]
   115c8:	ldr	r4, [r0]
   115cc:	b	112cc <close@plt+0x390>
   115d0:	cmp	sl, r9
   115d4:	movlt	r2, sl
   115d8:	movge	r2, r9
   115dc:	sub	r2, r2, #1
   115e0:	ldr	r1, [r8, #8]
   115e4:	ldr	r0, [r7, #8]
   115e8:	bl	10d5c <memcmp@plt>
   115ec:	subs	r6, r0, #0
   115f0:	bne	1160c <close@plt+0x6d0>
   115f4:	cmp	sl, r9
   115f8:	bgt	11658 <close@plt+0x71c>
   115fc:	movne	r6, #1
   11600:	moveq	r6, #0
   11604:	b	1147c <close@plt+0x540>
   11608:	mov	r6, #1
   1160c:	mov	r1, #1
   11610:	cmp	r6, #0
   11614:	strb	r1, [r4, #4]
   11618:	bgt	11660 <close@plt+0x724>
   1161c:	ldrd	r2, [sp, #40]	; 0x28
   11620:	adds	r2, r2, #1
   11624:	adc	r3, r3, #0
   11628:	strd	r2, [sp, #40]	; 0x28
   1162c:	ldrb	r3, [r4, #8]
   11630:	cmp	r3, #0
   11634:	beq	1164c <close@plt+0x710>
   11638:	ldr	r3, [pc, #288]	; 11760 <close@plt+0x824>
   1163c:	ldr	r2, [r7, #4]
   11640:	ldr	r0, [r7, #8]
   11644:	ldr	r3, [r3]
   11648:	bl	10d50 <fwrite_unlocked@plt>
   1164c:	mov	r3, #1
   11650:	strb	r3, [sp, #128]	; 0x80
   11654:	b	11514 <close@plt+0x5d8>
   11658:	mov	r6, r5
   1165c:	b	1160c <close@plt+0x6d0>
   11660:	ldrd	r2, [sp, #48]	; 0x30
   11664:	adds	r2, r2, #1
   11668:	adc	r3, r3, #0
   1166c:	strd	r2, [sp, #48]	; 0x30
   11670:	ldrb	r3, [r4, #9]
   11674:	cmp	r3, #0
   11678:	beq	11504 <close@plt+0x5c8>
   1167c:	ldr	r3, [pc, #220]	; 11760 <close@plt+0x824>
   11680:	ldr	r7, [sp, #68]	; 0x44
   11684:	ldr	r8, [r3]
   11688:	ldrb	r3, [r4, #8]
   1168c:	cmp	r3, #0
   11690:	beq	116a8 <close@plt+0x76c>
   11694:	ldr	r0, [pc, #156]	; 11738 <close@plt+0x7fc>
   11698:	mov	r3, r8
   1169c:	ldr	r2, [r4, #12]
   116a0:	ldr	r0, [r0, #4]
   116a4:	bl	10d50 <fwrite_unlocked@plt>
   116a8:	mov	r3, r8
   116ac:	ldr	r2, [r7, #4]
   116b0:	mov	r1, #1
   116b4:	ldr	r0, [r7, #8]
   116b8:	b	11500 <close@plt+0x5c4>
   116bc:	add	r9, r6, r9
   116c0:	add	r2, sp, #304	; 0x130
   116c4:	add	r9, r2, r9, lsl #2
   116c8:	ldr	r0, [r9, #-128]	; 0xffffff80
   116cc:	ldr	r2, [r0, #8]
   116d0:	cmp	r2, #0
   116d4:	beq	115ac <close@plt+0x670>
   116d8:	add	r6, r6, r3
   116dc:	add	r3, sp, #304	; 0x130
   116e0:	add	r6, r3, r6, lsl #2
   116e4:	add	r2, r7, #1
   116e8:	ldr	r1, [r6, #-128]	; 0xffffff80
   116ec:	b	115a8 <close@plt+0x66c>
   116f0:	strb	r0, [sl, r7]
   116f4:	add	r7, r7, #1
   116f8:	cmp	r7, #2
   116fc:	add	r8, r8, #12
   11700:	beq	11354 <close@plt+0x418>
   11704:	b	11520 <close@plt+0x5e4>
   11708:	mov	fp, #1
   1170c:	bl	10e64 <__errno_location@plt>
   11710:	ldr	r3, [sp, #28]
   11714:	ldr	r2, [r3, fp, lsl #2]
   11718:	ldr	r4, [r0]
   1171c:	b	112cc <close@plt+0x390>
   11720:	andeq	r5, r1, r3, lsr r8
   11724:	andeq	r5, r1, r3, asr #13
   11728:	andeq	r5, r1, r0, lsr #12
   1172c:	andeq	r6, r2, r8, ror #2
   11730:	andeq	r0, r0, r1, lsl #2
   11734:	andeq	r0, r0, r2, lsl #2
   11738:	andeq	r6, r2, ip, ror #1
   1173c:	andeq	r1, r1, ip, asr #25
   11740:	andeq	r5, r1, r8, lsr r0
   11744:	andeq	r5, r1, r4, lsr #14
   11748:	andeq	r6, r2, r8, asr #2
   1174c:	andeq	r5, r1, r9, lsr #14
   11750:	andeq	r0, r0, r3, lsl #2
   11754:	andeq	r6, r2, r0, ror #2
   11758:	ldrdeq	r5, [r1], -fp
   1175c:	andeq	r5, r1, r0, lsl #14
   11760:	andeq	r6, r2, ip, asr r1
   11764:	andeq	r5, r1, r0, lsl r7
   11768:	strdeq	r6, [r2], -r4
   1176c:	andeq	r5, r1, ip, lsl r6
   11770:	ldrdeq	r5, [r1], -r7
   11774:	andeq	r5, r1, r9, lsr r7
   11778:	andeq	r5, r1, r2, asr r7
   1177c:	andeq	r6, r2, r8, asr r1
   11780:	andeq	r5, r1, r0, lsr #17
   11784:	ldrdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   11788:	andeq	r5, r1, r3, asr r8
   1178c:	andeq	r5, r1, r3, ror #14
   11790:	andeq	r5, r1, r9, ror #14
   11794:	andeq	r5, r1, sl, ror r7
   11798:	mov	fp, #0
   1179c:	mov	lr, #0
   117a0:	pop	{r1}		; (ldr r1, [sp], #4)
   117a4:	mov	r2, sp
   117a8:	push	{r2}		; (str r2, [sp, #-4]!)
   117ac:	push	{r0}		; (str r0, [sp, #-4]!)
   117b0:	ldr	ip, [pc, #16]	; 117c8 <close@plt+0x88c>
   117b4:	push	{ip}		; (str ip, [sp, #-4]!)
   117b8:	ldr	r0, [pc, #12]	; 117cc <close@plt+0x890>
   117bc:	ldr	r3, [pc, #12]	; 117d0 <close@plt+0x894>
   117c0:	bl	10e10 <__libc_start_main@plt>
   117c4:	bl	10f24 <abort@plt>
   117c8:	ldrdeq	r4, [r1], -r8
   117cc:	andeq	r0, r1, r8, asr #30
   117d0:	andeq	r4, r1, r8, ror pc
   117d4:	ldr	r3, [pc, #20]	; 117f0 <close@plt+0x8b4>
   117d8:	ldr	r2, [pc, #20]	; 117f4 <close@plt+0x8b8>
   117dc:	add	r3, pc, r3
   117e0:	ldr	r2, [r3, r2]
   117e4:	cmp	r2, #0
   117e8:	bxeq	lr
   117ec:	b	10e28 <__gmon_start__@plt>
   117f0:	andeq	r4, r1, ip, lsl r8
   117f4:	andeq	r0, r0, r0, ror #1
   117f8:	ldr	r3, [pc, #28]	; 1181c <close@plt+0x8e0>
   117fc:	ldr	r0, [pc, #28]	; 11820 <close@plt+0x8e4>
   11800:	sub	r3, r3, r0
   11804:	cmp	r3, #6
   11808:	bxls	lr
   1180c:	ldr	r3, [pc, #16]	; 11824 <close@plt+0x8e8>
   11810:	cmp	r3, #0
   11814:	bxeq	lr
   11818:	bx	r3
   1181c:	andeq	r6, r2, pc, lsr r1
   11820:	andeq	r6, r2, ip, lsr r1
   11824:	andeq	r0, r0, r0
   11828:	ldr	r1, [pc, #36]	; 11854 <close@plt+0x918>
   1182c:	ldr	r0, [pc, #36]	; 11858 <close@plt+0x91c>
   11830:	sub	r1, r1, r0
   11834:	asr	r1, r1, #2
   11838:	add	r1, r1, r1, lsr #31
   1183c:	asrs	r1, r1, #1
   11840:	bxeq	lr
   11844:	ldr	r3, [pc, #16]	; 1185c <close@plt+0x920>
   11848:	cmp	r3, #0
   1184c:	bxeq	lr
   11850:	bx	r3
   11854:	andeq	r6, r2, ip, lsr r1
   11858:	andeq	r6, r2, ip, lsr r1
   1185c:	andeq	r0, r0, r0
   11860:	push	{r4, lr}
   11864:	ldr	r4, [pc, #24]	; 11884 <close@plt+0x948>
   11868:	ldrb	r3, [r4]
   1186c:	cmp	r3, #0
   11870:	popne	{r4, pc}
   11874:	bl	117f8 <close@plt+0x8bc>
   11878:	mov	r3, #1
   1187c:	strb	r3, [r4]
   11880:	pop	{r4, pc}
   11884:	andeq	r6, r2, r4, ror #2
   11888:	ldr	r0, [pc, #40]	; 118b8 <close@plt+0x97c>
   1188c:	ldr	r3, [r0]
   11890:	cmp	r3, #0
   11894:	bne	1189c <close@plt+0x960>
   11898:	b	11828 <close@plt+0x8ec>
   1189c:	ldr	r3, [pc, #24]	; 118bc <close@plt+0x980>
   118a0:	cmp	r3, #0
   118a4:	beq	11898 <close@plt+0x95c>
   118a8:	push	{r4, lr}
   118ac:	blx	r3
   118b0:	pop	{r4, lr}
   118b4:	b	11828 <close@plt+0x8ec>
   118b8:	andeq	r5, r2, r4, lsl pc
   118bc:	andeq	r0, r0, r0
   118c0:	push	{r4, r5, r6, lr}
   118c4:	ldr	r4, [pc, #172]	; 11978 <close@plt+0xa3c>
   118c8:	ldr	r3, [r4]
   118cc:	cmp	r3, #2
   118d0:	popeq	{r4, r5, r6, pc}
   118d4:	cmp	r3, #1
   118d8:	beq	118e8 <close@plt+0x9ac>
   118dc:	ldrb	r3, [r4, #4]
   118e0:	cmp	r3, #0
   118e4:	popeq	{r4, r5, r6, pc}
   118e8:	sub	r6, r2, #1
   118ec:	add	r3, r4, r6
   118f0:	ldrb	r3, [r3, #5]
   118f4:	cmp	r3, #0
   118f8:	popne	{r4, r5, r6, pc}
   118fc:	ldrb	r3, [r4, #7]
   11900:	ldr	ip, [r0, #4]
   11904:	mov	r5, r2
   11908:	cmp	r3, #0
   1190c:	ldr	r3, [r1, #4]
   11910:	ldr	r2, [r1, #8]
   11914:	sub	r3, r3, #1
   11918:	sub	r1, ip, #1
   1191c:	ldr	r0, [r0, #8]
   11920:	beq	11970 <close@plt+0xa34>
   11924:	bl	1438c <close@plt+0x3450>
   11928:	cmp	r0, #0
   1192c:	pople	{r4, r5, r6, pc}
   11930:	mov	r2, #5
   11934:	ldr	r1, [pc, #64]	; 1197c <close@plt+0xa40>
   11938:	mov	r0, #0
   1193c:	ldr	r6, [r4], r6
   11940:	bl	10d80 <dcgettext@plt>
   11944:	sub	r6, r6, #1
   11948:	clz	r6, r6
   1194c:	lsr	r6, r6, #5
   11950:	mov	r3, r5
   11954:	mov	r1, #0
   11958:	mov	r2, r0
   1195c:	mov	r0, r6
   11960:	bl	10dec <error@plt>
   11964:	mov	r3, #1
   11968:	strb	r3, [r4, #5]
   1196c:	pop	{r4, r5, r6, pc}
   11970:	bl	121d0 <close@plt+0x1294>
   11974:	b	11928 <close@plt+0x9ec>
   11978:	andeq	r6, r2, r8, ror #2
   1197c:	strheq	r5, [r1], -r8
   11980:	subs	r4, r0, #0
   11984:	push	{r7, lr}
   11988:	sub	sp, sp, #56	; 0x38
   1198c:	ldr	r6, [pc, #680]	; 11c3c <close@plt+0xd00>
   11990:	beq	119c8 <close@plt+0xa8c>
   11994:	ldr	r3, [pc, #676]	; 11c40 <close@plt+0xd04>
   11998:	mov	r2, #5
   1199c:	ldr	r1, [pc, #672]	; 11c44 <close@plt+0xd08>
   119a0:	mov	r0, #0
   119a4:	ldr	r5, [r3]
   119a8:	bl	10d80 <dcgettext@plt>
   119ac:	ldr	r3, [r6]
   119b0:	mov	r1, #1
   119b4:	mov	r2, r0
   119b8:	mov	r0, r5
   119bc:	bl	10ea0 <__fprintf_chk@plt>
   119c0:	mov	r0, r4
   119c4:	bl	10e4c <exit@plt>
   119c8:	mov	r2, #5
   119cc:	ldr	r1, [pc, #628]	; 11c48 <close@plt+0xd0c>
   119d0:	bl	10d80 <dcgettext@plt>
   119d4:	ldr	r5, [pc, #624]	; 11c4c <close@plt+0xd10>
   119d8:	ldr	r2, [r6]
   119dc:	ldr	r8, [pc, #620]	; 11c50 <close@plt+0xd14>
   119e0:	mov	r1, r0
   119e4:	mov	r0, #1
   119e8:	bl	10e88 <__printf_chk@plt>
   119ec:	mov	r2, #5
   119f0:	ldr	r1, [pc, #604]	; 11c54 <close@plt+0xd18>
   119f4:	mov	r0, r4
   119f8:	bl	10d80 <dcgettext@plt>
   119fc:	ldr	r1, [r5]
   11a00:	bl	10ce4 <fputs_unlocked@plt>
   11a04:	mov	r2, #5
   11a08:	ldr	r1, [pc, #584]	; 11c58 <close@plt+0xd1c>
   11a0c:	mov	r0, r4
   11a10:	bl	10d80 <dcgettext@plt>
   11a14:	ldr	r1, [r5]
   11a18:	bl	10ce4 <fputs_unlocked@plt>
   11a1c:	mov	r2, #5
   11a20:	ldr	r1, [pc, #564]	; 11c5c <close@plt+0xd20>
   11a24:	mov	r0, r4
   11a28:	bl	10d80 <dcgettext@plt>
   11a2c:	ldr	r1, [r5]
   11a30:	bl	10ce4 <fputs_unlocked@plt>
   11a34:	mov	r2, #5
   11a38:	ldr	r1, [pc, #544]	; 11c60 <close@plt+0xd24>
   11a3c:	mov	r0, r4
   11a40:	bl	10d80 <dcgettext@plt>
   11a44:	ldr	r1, [r5]
   11a48:	bl	10ce4 <fputs_unlocked@plt>
   11a4c:	mov	r2, #5
   11a50:	ldr	r1, [pc, #524]	; 11c64 <close@plt+0xd28>
   11a54:	mov	r0, r4
   11a58:	bl	10d80 <dcgettext@plt>
   11a5c:	ldr	r1, [r5]
   11a60:	bl	10ce4 <fputs_unlocked@plt>
   11a64:	mov	r2, #5
   11a68:	ldr	r1, [pc, #504]	; 11c68 <close@plt+0xd2c>
   11a6c:	mov	r0, r4
   11a70:	bl	10d80 <dcgettext@plt>
   11a74:	ldr	r1, [r5]
   11a78:	bl	10ce4 <fputs_unlocked@plt>
   11a7c:	mov	r2, #5
   11a80:	ldr	r1, [pc, #484]	; 11c6c <close@plt+0xd30>
   11a84:	mov	r0, r4
   11a88:	bl	10d80 <dcgettext@plt>
   11a8c:	ldr	r1, [r5]
   11a90:	bl	10ce4 <fputs_unlocked@plt>
   11a94:	mov	r2, #5
   11a98:	ldr	r1, [pc, #464]	; 11c70 <close@plt+0xd34>
   11a9c:	mov	r0, r4
   11aa0:	bl	10d80 <dcgettext@plt>
   11aa4:	ldr	r1, [r5]
   11aa8:	bl	10ce4 <fputs_unlocked@plt>
   11aac:	mov	r2, #5
   11ab0:	ldr	r1, [pc, #444]	; 11c74 <close@plt+0xd38>
   11ab4:	mov	r0, r4
   11ab8:	bl	10d80 <dcgettext@plt>
   11abc:	ldr	r1, [r5]
   11ac0:	bl	10ce4 <fputs_unlocked@plt>
   11ac4:	mov	r2, #5
   11ac8:	ldr	r1, [pc, #424]	; 11c78 <close@plt+0xd3c>
   11acc:	mov	r0, r4
   11ad0:	bl	10d80 <dcgettext@plt>
   11ad4:	ldr	r1, [r5]
   11ad8:	bl	10ce4 <fputs_unlocked@plt>
   11adc:	mov	r2, #5
   11ae0:	ldr	r1, [pc, #404]	; 11c7c <close@plt+0xd40>
   11ae4:	mov	r0, r4
   11ae8:	bl	10d80 <dcgettext@plt>
   11aec:	ldr	r1, [r5]
   11af0:	bl	10ce4 <fputs_unlocked@plt>
   11af4:	mov	r2, #5
   11af8:	ldr	r1, [pc, #384]	; 11c80 <close@plt+0xd44>
   11afc:	mov	r0, r4
   11b00:	bl	10d80 <dcgettext@plt>
   11b04:	ldr	r3, [r6]
   11b08:	mov	r6, r4
   11b0c:	mov	r2, r3
   11b10:	mov	r1, r0
   11b14:	mov	r0, #1
   11b18:	bl	10e88 <__printf_chk@plt>
   11b1c:	ldr	lr, [pc, #352]	; 11c84 <close@plt+0xd48>
   11b20:	mov	ip, sp
   11b24:	ldm	lr!, {r0, r1, r2, r3}
   11b28:	stmia	ip!, {r0, r1, r2, r3}
   11b2c:	ldm	lr!, {r0, r1, r2, r3}
   11b30:	stmia	ip!, {r0, r1, r2, r3}
   11b34:	ldm	lr!, {r0, r1, r2, r3}
   11b38:	stmia	ip!, {r0, r1, r2, r3}
   11b3c:	ldm	lr, {r0, r1}
   11b40:	stm	ip, {r0, r1}
   11b44:	ldr	r1, [sp, r6]
   11b48:	add	r7, sp, r6
   11b4c:	cmp	r1, #0
   11b50:	bne	11bf4 <close@plt+0xcb8>
   11b54:	ldr	r6, [r7, #4]
   11b58:	ldr	r7, [pc, #240]	; 11c50 <close@plt+0xd14>
   11b5c:	cmp	r6, #0
   11b60:	mov	r2, #5
   11b64:	ldr	r1, [pc, #284]	; 11c88 <close@plt+0xd4c>
   11b68:	mov	r0, #0
   11b6c:	moveq	r6, r7
   11b70:	bl	10d80 <dcgettext@plt>
   11b74:	ldr	r3, [pc, #272]	; 11c8c <close@plt+0xd50>
   11b78:	ldr	r2, [pc, #272]	; 11c90 <close@plt+0xd54>
   11b7c:	mov	r1, r0
   11b80:	mov	r0, #1
   11b84:	bl	10e88 <__printf_chk@plt>
   11b88:	mov	r1, #0
   11b8c:	mov	r0, #5
   11b90:	bl	10ed0 <setlocale@plt>
   11b94:	cmp	r0, #0
   11b98:	bne	11c0c <close@plt+0xcd0>
   11b9c:	mov	r2, #5
   11ba0:	ldr	r1, [pc, #236]	; 11c94 <close@plt+0xd58>
   11ba4:	mov	r0, #0
   11ba8:	bl	10d80 <dcgettext@plt>
   11bac:	ldr	r3, [pc, #156]	; 11c50 <close@plt+0xd14>
   11bb0:	ldr	r2, [pc, #212]	; 11c8c <close@plt+0xd50>
   11bb4:	mov	r1, r0
   11bb8:	mov	r0, #1
   11bbc:	bl	10e88 <__printf_chk@plt>
   11bc0:	mov	r2, #5
   11bc4:	ldr	r1, [pc, #204]	; 11c98 <close@plt+0xd5c>
   11bc8:	mov	r0, #0
   11bcc:	bl	10d80 <dcgettext@plt>
   11bd0:	ldr	r2, [pc, #196]	; 11c9c <close@plt+0xd60>
   11bd4:	cmp	r6, r7
   11bd8:	ldr	r3, [pc, #192]	; 11ca0 <close@plt+0xd64>
   11bdc:	moveq	r3, r2
   11be0:	mov	r2, r6
   11be4:	mov	r1, r0
   11be8:	mov	r0, #1
   11bec:	bl	10e88 <__printf_chk@plt>
   11bf0:	b	119c0 <close@plt+0xa84>
   11bf4:	mov	r0, r8
   11bf8:	bl	10cfc <strcmp@plt>
   11bfc:	add	r6, r6, #8
   11c00:	cmp	r0, #0
   11c04:	bne	11b44 <close@plt+0xc08>
   11c08:	b	11b54 <close@plt+0xc18>
   11c0c:	mov	r2, #3
   11c10:	ldr	r1, [pc, #140]	; 11ca4 <close@plt+0xd68>
   11c14:	bl	10f18 <strncmp@plt>
   11c18:	cmp	r0, #0
   11c1c:	beq	11b9c <close@plt+0xc60>
   11c20:	mov	r2, #5
   11c24:	ldr	r1, [pc, #124]	; 11ca8 <close@plt+0xd6c>
   11c28:	mov	r0, #0
   11c2c:	bl	10d80 <dcgettext@plt>
   11c30:	ldr	r1, [r5]
   11c34:	bl	10ce4 <fputs_unlocked@plt>
   11c38:	b	11b9c <close@plt+0xc60>
   11c3c:	andeq	r6, r2, r0, lsl #3
   11c40:	andeq	r6, r2, r0, asr r1
   11c44:	ldrdeq	r5, [r1], -ip
   11c48:	andeq	r5, r1, r3, lsl #2
   11c4c:	andeq	r6, r2, ip, asr r1
   11c50:	ldrdeq	r5, [r1], -r7
   11c54:	andeq	r5, r1, r6, lsr #2
   11c58:	andeq	r5, r1, sl, asr r1
   11c5c:	muleq	r1, r6, r1
   11c60:	andeq	r5, r1, r3, asr r2
   11c64:	andeq	r5, r1, fp, lsr #6
   11c68:	strdeq	r5, [r1], -ip
   11c6c:	andeq	r5, r1, r5, lsr r4
   11c70:	andeq	r5, r1, r1, ror #8
   11c74:	muleq	r1, pc, r4	; <UNPREDICTABLE>
   11c78:	andeq	r5, r1, ip, asr #9
   11c7c:	andeq	r5, r1, r2, lsl #10
   11c80:	andeq	r5, r1, r1, asr #10
   11c84:	andeq	r5, r1, r0
   11c88:	ldrdeq	r5, [r1], -sp
   11c8c:	strdeq	r5, [r1], -r4
   11c90:	andeq	r5, r1, ip, lsl r6
   11c94:	andeq	r5, r1, r5, ror r6
   11c98:	muleq	r1, r0, r6
   11c9c:			; <UNDEFINED> instruction: 0x000157b3
   11ca0:	andeq	r5, r1, r3, lsr r8
   11ca4:	andeq	r5, r1, sl, lsr #12
   11ca8:	andeq	r5, r1, lr, lsr #12
   11cac:	ldr	r3, [pc, #4]	; 11cb8 <close@plt+0xd7c>
   11cb0:	str	r0, [r3]
   11cb4:	bx	lr
   11cb8:	andeq	r6, r2, r8, ror r1
   11cbc:	ldr	r3, [pc, #4]	; 11cc8 <close@plt+0xd8c>
   11cc0:	strb	r0, [r3, #4]
   11cc4:	bx	lr
   11cc8:	andeq	r6, r2, r8, ror r1
   11ccc:	ldr	r3, [pc, #192]	; 11d94 <close@plt+0xe58>
   11cd0:	push	{r0, r1, r4, r5, r6, lr}
   11cd4:	ldr	r0, [r3]
   11cd8:	bl	1450c <close@plt+0x35d0>
   11cdc:	cmp	r0, #0
   11ce0:	beq	11d78 <close@plt+0xe3c>
   11ce4:	ldr	r3, [pc, #172]	; 11d98 <close@plt+0xe5c>
   11ce8:	mov	r4, r3
   11cec:	ldrb	r2, [r3, #4]
   11cf0:	cmp	r2, #0
   11cf4:	beq	11d08 <close@plt+0xdcc>
   11cf8:	bl	10e64 <__errno_location@plt>
   11cfc:	ldr	r3, [r0]
   11d00:	cmp	r3, #32
   11d04:	beq	11d78 <close@plt+0xe3c>
   11d08:	mov	r2, #5
   11d0c:	ldr	r1, [pc, #136]	; 11d9c <close@plt+0xe60>
   11d10:	mov	r0, #0
   11d14:	bl	10d80 <dcgettext@plt>
   11d18:	ldr	r4, [r4]
   11d1c:	cmp	r4, #0
   11d20:	mov	r5, r0
   11d24:	beq	11d5c <close@plt+0xe20>
   11d28:	bl	10e64 <__errno_location@plt>
   11d2c:	ldr	r6, [r0]
   11d30:	mov	r0, r4
   11d34:	bl	136f4 <close@plt+0x27b8>
   11d38:	str	r5, [sp]
   11d3c:	ldr	r2, [pc, #92]	; 11da0 <close@plt+0xe64>
   11d40:	mov	r1, r6
   11d44:	mov	r3, r0
   11d48:	mov	r0, #0
   11d4c:	bl	10dec <error@plt>
   11d50:	ldr	r3, [pc, #76]	; 11da4 <close@plt+0xe68>
   11d54:	ldr	r0, [r3]
   11d58:	bl	10d2c <_exit@plt>
   11d5c:	bl	10e64 <__errno_location@plt>
   11d60:	mov	r3, r5
   11d64:	ldr	r2, [pc, #60]	; 11da8 <close@plt+0xe6c>
   11d68:	ldr	r1, [r0]
   11d6c:	mov	r0, r4
   11d70:	bl	10dec <error@plt>
   11d74:	b	11d50 <close@plt+0xe14>
   11d78:	ldr	r3, [pc, #44]	; 11dac <close@plt+0xe70>
   11d7c:	ldr	r0, [r3]
   11d80:	bl	1450c <close@plt+0x35d0>
   11d84:	cmp	r0, #0
   11d88:	bne	11d50 <close@plt+0xe14>
   11d8c:	add	sp, sp, #8
   11d90:	pop	{r4, r5, r6, pc}
   11d94:	andeq	r6, r2, ip, asr r1
   11d98:	andeq	r6, r2, r8, ror r1
   11d9c:	andeq	r5, r1, r3, asr #16
   11da0:	andeq	r5, r1, pc, asr #16
   11da4:	strdeq	r6, [r2], -r8
   11da8:	andeq	r5, r1, r3, asr r8
   11dac:	andeq	r6, r2, r0, asr r1
   11db0:	push	{r4, r5}
   11db4:	pop	{r4, r5}
   11db8:	b	10d08 <posix_fadvise64@plt>
   11dbc:	cmp	r0, #0
   11dc0:	bxeq	lr
   11dc4:	push	{r0, r1, r2, r3, r4, lr}
   11dc8:	mov	r4, r1
   11dcc:	bl	10e94 <fileno@plt>
   11dd0:	mov	r2, #0
   11dd4:	mov	r3, #0
   11dd8:	str	r4, [sp, #8]
   11ddc:	strd	r2, [sp]
   11de0:	bl	10d08 <posix_fadvise64@plt>
   11de4:	add	sp, sp, #16
   11de8:	pop	{r4, pc}
   11dec:	push	{r0, r1, r2, r4, r5, lr}
   11df0:	mov	r4, r0
   11df4:	bl	10e94 <fileno@plt>
   11df8:	cmp	r0, #0
   11dfc:	mov	r0, r4
   11e00:	bge	11e10 <close@plt+0xed4>
   11e04:	add	sp, sp, #12
   11e08:	pop	{r4, r5, lr}
   11e0c:	b	10eac <fclose@plt>
   11e10:	bl	10e1c <__freading@plt>
   11e14:	cmp	r0, #0
   11e18:	bne	11e54 <close@plt+0xf18>
   11e1c:	mov	r0, r4
   11e20:	bl	11e94 <close@plt+0xf58>
   11e24:	cmp	r0, #0
   11e28:	bne	11e88 <close@plt+0xf4c>
   11e2c:	mov	r5, #0
   11e30:	mov	r0, r4
   11e34:	bl	10eac <fclose@plt>
   11e38:	cmp	r5, #0
   11e3c:	beq	11e4c <close@plt+0xf10>
   11e40:	bl	10e64 <__errno_location@plt>
   11e44:	str	r5, [r0]
   11e48:	mvn	r0, #0
   11e4c:	add	sp, sp, #12
   11e50:	pop	{r4, r5, pc}
   11e54:	mov	r0, r4
   11e58:	bl	10e94 <fileno@plt>
   11e5c:	mov	r3, #1
   11e60:	str	r3, [sp]
   11e64:	mov	r2, #0
   11e68:	mov	r3, #0
   11e6c:	bl	10db0 <lseek64@plt>
   11e70:	mvn	r3, #0
   11e74:	mvn	r2, #0
   11e78:	cmp	r1, r3
   11e7c:	cmpeq	r0, r2
   11e80:	bne	11e1c <close@plt+0xee0>
   11e84:	b	11e2c <close@plt+0xef0>
   11e88:	bl	10e64 <__errno_location@plt>
   11e8c:	ldr	r5, [r0]
   11e90:	b	11e30 <close@plt+0xef4>
   11e94:	push	{r0, r1, r4, lr}
   11e98:	subs	r4, r0, #0
   11e9c:	bne	11eb0 <close@plt+0xf74>
   11ea0:	mov	r0, r4
   11ea4:	add	sp, sp, #8
   11ea8:	pop	{r4, lr}
   11eac:	b	10d14 <fflush@plt>
   11eb0:	bl	10e1c <__freading@plt>
   11eb4:	cmp	r0, #0
   11eb8:	beq	11ea0 <close@plt+0xf64>
   11ebc:	ldr	r3, [r4]
   11ec0:	tst	r3, #256	; 0x100
   11ec4:	beq	11ea0 <close@plt+0xf64>
   11ec8:	mov	r3, #1
   11ecc:	str	r3, [sp]
   11ed0:	mov	r2, #0
   11ed4:	mov	r3, #0
   11ed8:	mov	r0, r4
   11edc:	bl	11f78 <close@plt+0x103c>
   11ee0:	b	11ea0 <close@plt+0xf64>
   11ee4:	push	{r4, r5, r6, lr}
   11ee8:	mov	r6, r1
   11eec:	bl	10ef4 <fopen64@plt>
   11ef0:	subs	r4, r0, #0
   11ef4:	beq	11f2c <close@plt+0xff0>
   11ef8:	bl	10e94 <fileno@plt>
   11efc:	cmp	r0, #2
   11f00:	bhi	11f2c <close@plt+0xff0>
   11f04:	bl	138d4 <close@plt+0x2998>
   11f08:	subs	r5, r0, #0
   11f0c:	bge	11f34 <close@plt+0xff8>
   11f10:	bl	10e64 <__errno_location@plt>
   11f14:	ldr	r6, [r0]
   11f18:	mov	r5, r0
   11f1c:	mov	r0, r4
   11f20:	bl	11dec <close@plt+0xeb0>
   11f24:	str	r6, [r5]
   11f28:	mov	r4, #0
   11f2c:	mov	r0, r4
   11f30:	pop	{r4, r5, r6, pc}
   11f34:	mov	r0, r4
   11f38:	bl	11dec <close@plt+0xeb0>
   11f3c:	cmp	r0, #0
   11f40:	beq	11f60 <close@plt+0x1024>
   11f44:	bl	10e64 <__errno_location@plt>
   11f48:	ldr	r6, [r0]
   11f4c:	mov	r4, r0
   11f50:	mov	r0, r5
   11f54:	bl	10f3c <close@plt>
   11f58:	str	r6, [r4]
   11f5c:	b	11f28 <close@plt+0xfec>
   11f60:	mov	r1, r6
   11f64:	mov	r0, r5
   11f68:	bl	10ccc <fdopen@plt>
   11f6c:	subs	r4, r0, #0
   11f70:	bne	11f2c <close@plt+0xff0>
   11f74:	b	11f44 <close@plt+0x1008>
   11f78:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11f7c:	mov	r4, r0
   11f80:	ldmib	r0, {ip, lr}
   11f84:	ldr	r8, [sp, #32]
   11f88:	cmp	lr, ip
   11f8c:	bne	11ff8 <close@plt+0x10bc>
   11f90:	ldr	lr, [r0, #20]
   11f94:	ldr	ip, [r0, #16]
   11f98:	cmp	lr, ip
   11f9c:	bne	11ff8 <close@plt+0x10bc>
   11fa0:	ldr	r5, [r0, #36]	; 0x24
   11fa4:	cmp	r5, #0
   11fa8:	bne	11ff8 <close@plt+0x10bc>
   11fac:	mov	r6, r2
   11fb0:	mov	r7, r3
   11fb4:	bl	10e94 <fileno@plt>
   11fb8:	mov	r2, r6
   11fbc:	mov	r3, r7
   11fc0:	str	r8, [sp]
   11fc4:	bl	10db0 <lseek64@plt>
   11fc8:	mvn	r3, #0
   11fcc:	mvn	r2, #0
   11fd0:	cmp	r1, r3
   11fd4:	cmpeq	r0, r2
   11fd8:	mvneq	r0, #0
   11fdc:	ldrne	r3, [r4]
   11fe0:	strdne	r0, [r4, #80]	; 0x50
   11fe4:	movne	r0, r5
   11fe8:	bicne	r3, r3, #16
   11fec:	strne	r3, [r4]
   11ff0:	add	sp, sp, #8
   11ff4:	pop	{r4, r5, r6, r7, r8, pc}
   11ff8:	str	r8, [sp, #32]
   11ffc:	mov	r0, r4
   12000:	add	sp, sp, #8
   12004:	pop	{r4, r5, r6, r7, r8, lr}
   12008:	b	10eb8 <fseeko64@plt>
   1200c:	push	{lr}		; (str lr, [sp, #-4]!)
   12010:	sub	sp, sp, #268	; 0x10c
   12014:	ldr	r2, [pc, #64]	; 1205c <close@plt+0x1120>
   12018:	add	r1, sp, #4
   1201c:	bl	13850 <close@plt+0x2914>
   12020:	cmp	r0, #0
   12024:	movne	r0, #0
   12028:	bne	12054 <close@plt+0x1118>
   1202c:	ldr	r1, [pc, #44]	; 12060 <close@plt+0x1124>
   12030:	add	r0, sp, #4
   12034:	bl	10cfc <strcmp@plt>
   12038:	cmp	r0, #0
   1203c:	beq	12054 <close@plt+0x1118>
   12040:	ldr	r1, [pc, #28]	; 12064 <close@plt+0x1128>
   12044:	add	r0, sp, #4
   12048:	bl	10cfc <strcmp@plt>
   1204c:	adds	r0, r0, #0
   12050:	movne	r0, #1
   12054:	add	sp, sp, #268	; 0x10c
   12058:	pop	{pc}		; (ldr pc, [sp], #4)
   1205c:	andeq	r0, r0, r1, lsl #2
   12060:	andeq	r5, r1, r6, asr r8
   12064:	andeq	r5, r1, r8, asr r8
   12068:	push	{r4, r5, r6, r8, r9, lr}
   1206c:	mov	r4, r0
   12070:	mov	r5, r1
   12074:	add	r6, r2, #20
   12078:	mov	r8, #10
   1207c:	mov	r9, #0
   12080:	mov	r3, #0
   12084:	strb	r3, [r2, #20]
   12088:	mov	r0, r4
   1208c:	mov	r1, r5
   12090:	mov	r2, r8
   12094:	mov	r3, r9
   12098:	bl	14e04 <close@plt+0x3ec8>
   1209c:	mov	r3, r9
   120a0:	mov	r0, r4
   120a4:	mov	r1, r5
   120a8:	add	r2, r2, #48	; 0x30
   120ac:	strb	r2, [r6, #-1]!
   120b0:	mov	r2, r8
   120b4:	bl	14e04 <close@plt+0x3ec8>
   120b8:	mov	r4, r0
   120bc:	mov	r5, r1
   120c0:	orrs	r3, r4, r5
   120c4:	bne	12088 <close@plt+0x114c>
   120c8:	mov	r0, r6
   120cc:	pop	{r4, r5, r6, r8, r9, pc}
   120d0:	mov	r3, #0
   120d4:	str	r3, [r0]
   120d8:	str	r3, [r0, #4]
   120dc:	str	r3, [r0, #8]
   120e0:	bx	lr
   120e4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120e8:	mov	r4, r0
   120ec:	ldr	r5, [r0, #8]
   120f0:	ldr	r6, [r0]
   120f4:	mov	r0, r1
   120f8:	mov	r9, r1
   120fc:	mov	r8, r2
   12100:	bl	10f30 <feof_unlocked@plt>
   12104:	add	r6, r5, r6
   12108:	cmp	r0, #0
   1210c:	moveq	sl, r5
   12110:	mvneq	fp, #0
   12114:	beq	12128 <close@plt+0x11ec>
   12118:	mov	r4, #0
   1211c:	mov	r0, r4
   12120:	add	sp, sp, #12
   12124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12128:	mov	r0, r9
   1212c:	bl	10d74 <getc_unlocked@plt>
   12130:	cmn	r0, #1
   12134:	mov	r7, r0
   12138:	bne	12164 <close@plt+0x1228>
   1213c:	cmp	r5, sl
   12140:	beq	12118 <close@plt+0x11dc>
   12144:	mov	r0, r9
   12148:	bl	10dd4 <ferror_unlocked@plt>
   1214c:	cmp	r0, #0
   12150:	bne	12118 <close@plt+0x11dc>
   12154:	ldrb	r2, [sl, #-1]
   12158:	cmp	r2, r8
   1215c:	beq	121b4 <close@plt+0x1278>
   12160:	mov	r7, r8
   12164:	cmp	sl, r6
   12168:	movne	r2, sl
   1216c:	bne	121a4 <close@plt+0x1268>
   12170:	mov	r3, #1
   12174:	ldr	r6, [r4]
   12178:	mov	r2, #1
   1217c:	str	r3, [sp]
   12180:	mov	r0, r5
   12184:	mov	r3, fp
   12188:	mov	r1, r4
   1218c:	bl	13f5c <close@plt+0x3020>
   12190:	add	r2, r0, r6
   12194:	ldr	r6, [r4]
   12198:	mov	r5, r0
   1219c:	add	r6, r0, r6
   121a0:	str	r0, [r4, #8]
   121a4:	cmp	r7, r8
   121a8:	add	sl, r2, #1
   121ac:	strb	r7, [r2]
   121b0:	bne	12128 <close@plt+0x11ec>
   121b4:	sub	r5, sl, r5
   121b8:	str	r5, [r4, #4]
   121bc:	b	1211c <close@plt+0x11e0>
   121c0:	mov	r2, #10
   121c4:	b	120e4 <close@plt+0x11a8>
   121c8:	ldr	r0, [r0, #8]
   121cc:	b	14740 <close@plt+0x3804>
   121d0:	push	{r4, r5, r6, lr}
   121d4:	mov	r5, r1
   121d8:	cmp	r5, r3
   121dc:	mov	r1, r2
   121e0:	movcc	r2, r5
   121e4:	movcs	r2, r3
   121e8:	mov	r4, r3
   121ec:	bl	10d5c <memcmp@plt>
   121f0:	cmp	r0, #0
   121f4:	popne	{r4, r5, r6, pc}
   121f8:	cmp	r5, r4
   121fc:	movcs	r0, #0
   12200:	movcc	r0, #1
   12204:	cmp	r5, r4
   12208:	rsbls	r0, r0, #0
   1220c:	rsbhi	r0, r0, #1
   12210:	pop	{r4, r5, r6, pc}
   12214:	push	{r4, r5, r6, lr}
   12218:	subs	r5, r0, #0
   1221c:	bne	12234 <close@plt+0x12f8>
   12220:	ldr	r3, [pc, #124]	; 122a4 <close@plt+0x1368>
   12224:	ldr	r0, [pc, #124]	; 122a8 <close@plt+0x136c>
   12228:	ldr	r1, [r3]
   1222c:	bl	10f0c <fputs@plt>
   12230:	bl	10f24 <abort@plt>
   12234:	mov	r1, #47	; 0x2f
   12238:	bl	10edc <strrchr@plt>
   1223c:	cmp	r0, #0
   12240:	addne	r4, r0, #1
   12244:	moveq	r4, r5
   12248:	sub	r3, r4, r5
   1224c:	cmp	r3, #6
   12250:	ble	12290 <close@plt+0x1354>
   12254:	mov	r2, #7
   12258:	ldr	r1, [pc, #76]	; 122ac <close@plt+0x1370>
   1225c:	sub	r0, r4, #7
   12260:	bl	10f18 <strncmp@plt>
   12264:	cmp	r0, #0
   12268:	bne	12290 <close@plt+0x1354>
   1226c:	mov	r2, #3
   12270:	ldr	r1, [pc, #56]	; 122b0 <close@plt+0x1374>
   12274:	mov	r0, r4
   12278:	bl	10f18 <strncmp@plt>
   1227c:	cmp	r0, #0
   12280:	movne	r5, r4
   12284:	ldreq	r3, [pc, #40]	; 122b4 <close@plt+0x1378>
   12288:	addeq	r5, r4, #3
   1228c:	streq	r5, [r3]
   12290:	ldr	r3, [pc, #32]	; 122b8 <close@plt+0x137c>
   12294:	str	r5, [r3]
   12298:	ldr	r3, [pc, #28]	; 122bc <close@plt+0x1380>
   1229c:	str	r5, [r3]
   122a0:	pop	{r4, r5, r6, pc}
   122a4:	andeq	r6, r2, r0, asr r1
   122a8:	andeq	r5, r1, lr, asr r8
   122ac:	muleq	r1, r6, r8
   122b0:	muleq	r1, lr, r8
   122b4:	andeq	r6, r2, r0, asr #2
   122b8:	andeq	r6, r2, r0, lsl #3
   122bc:	andeq	r6, r2, r4, asr #2
   122c0:	push	{r4, r5, r6, lr}
   122c4:	mov	r2, #48	; 0x30
   122c8:	mov	r5, r1
   122cc:	mov	r1, #0
   122d0:	mov	r4, r0
   122d4:	bl	10e7c <memset@plt>
   122d8:	cmp	r5, #10
   122dc:	bne	122e4 <close@plt+0x13a8>
   122e0:	bl	10f24 <abort@plt>
   122e4:	str	r5, [r4]
   122e8:	mov	r0, r4
   122ec:	pop	{r4, r5, r6, pc}
   122f0:	push	{r4, r5, r6, lr}
   122f4:	mov	r4, r0
   122f8:	mov	r5, r1
   122fc:	bl	14794 <close@plt+0x3858>
   12300:	ldrb	r3, [r0]
   12304:	bic	r3, r3, #32
   12308:	cmp	r3, #85	; 0x55
   1230c:	bne	1237c <close@plt+0x1440>
   12310:	ldrb	r3, [r0, #1]
   12314:	bic	r3, r3, #32
   12318:	cmp	r3, #84	; 0x54
   1231c:	bne	12354 <close@plt+0x1418>
   12320:	ldrb	r3, [r0, #2]
   12324:	bic	r3, r3, #32
   12328:	cmp	r3, #70	; 0x46
   1232c:	bne	12354 <close@plt+0x1418>
   12330:	ldrb	r3, [r0, #3]
   12334:	cmp	r3, #45	; 0x2d
   12338:	bne	12354 <close@plt+0x1418>
   1233c:	ldrb	r3, [r0, #4]
   12340:	cmp	r3, #56	; 0x38
   12344:	bne	12354 <close@plt+0x1418>
   12348:	ldrb	r3, [r0, #5]
   1234c:	cmp	r3, #0
   12350:	beq	12368 <close@plt+0x142c>
   12354:	ldr	r1, [pc, #144]	; 123ec <close@plt+0x14b0>
   12358:	ldr	r0, [pc, #144]	; 123f0 <close@plt+0x14b4>
   1235c:	cmp	r5, #9
   12360:	movne	r0, r1
   12364:	pop	{r4, r5, r6, pc}
   12368:	ldrb	r3, [r4]
   1236c:	ldr	r1, [pc, #128]	; 123f4 <close@plt+0x14b8>
   12370:	ldr	r0, [pc, #128]	; 123f8 <close@plt+0x14bc>
   12374:	cmp	r3, #96	; 0x60
   12378:	b	12360 <close@plt+0x1424>
   1237c:	cmp	r3, #71	; 0x47
   12380:	bne	12354 <close@plt+0x1418>
   12384:	ldrb	r3, [r0, #1]
   12388:	bic	r3, r3, #32
   1238c:	cmp	r3, #66	; 0x42
   12390:	bne	12354 <close@plt+0x1418>
   12394:	ldrb	r3, [r0, #2]
   12398:	cmp	r3, #49	; 0x31
   1239c:	bne	12354 <close@plt+0x1418>
   123a0:	ldrb	r3, [r0, #3]
   123a4:	cmp	r3, #56	; 0x38
   123a8:	bne	12354 <close@plt+0x1418>
   123ac:	ldrb	r3, [r0, #4]
   123b0:	cmp	r3, #48	; 0x30
   123b4:	bne	12354 <close@plt+0x1418>
   123b8:	ldrb	r3, [r0, #5]
   123bc:	cmp	r3, #51	; 0x33
   123c0:	bne	12354 <close@plt+0x1418>
   123c4:	ldrb	r3, [r0, #6]
   123c8:	cmp	r3, #48	; 0x30
   123cc:	bne	12354 <close@plt+0x1418>
   123d0:	ldrb	r3, [r0, #7]
   123d4:	cmp	r3, #0
   123d8:	bne	12354 <close@plt+0x1418>
   123dc:	ldrb	r3, [r4]
   123e0:	ldr	r1, [pc, #20]	; 123fc <close@plt+0x14c0>
   123e4:	ldr	r0, [pc, #20]	; 12400 <close@plt+0x14c4>
   123e8:	b	12374 <close@plt+0x1438>
   123ec:	andeq	r5, r1, r9, lsl #18
   123f0:	andeq	r5, r1, r7, lsl #18
   123f4:	strdeq	r5, [r1], -ip
   123f8:	strdeq	r5, [r1], -r8
   123fc:	andeq	r5, r1, r4, lsl #18
   12400:	andeq	r5, r1, r0, lsl #18
   12404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12408:	sub	sp, sp, #108	; 0x6c
   1240c:	mov	r8, r0
   12410:	str	r3, [sp, #36]	; 0x24
   12414:	mov	r5, r1
   12418:	str	r2, [sp, #44]	; 0x2c
   1241c:	ldr	sl, [sp, #144]	; 0x90
   12420:	bl	10dbc <__ctype_get_mb_cur_max@plt>
   12424:	ldr	r3, [sp, #148]	; 0x94
   12428:	mov	r7, #0
   1242c:	str	r7, [sp, #48]	; 0x30
   12430:	lsr	r6, r3, #1
   12434:	and	r6, r6, #1
   12438:	mov	r3, #1
   1243c:	str	r3, [sp, #72]	; 0x48
   12440:	str	r7, [sp, #24]
   12444:	str	r7, [sp, #32]
   12448:	str	r7, [sp, #40]	; 0x28
   1244c:	str	r7, [sp, #60]	; 0x3c
   12450:	str	r0, [sp, #76]	; 0x4c
   12454:	cmp	sl, #10
   12458:	ldrls	pc, [pc, sl, lsl #2]
   1245c:	b	12698 <close@plt+0x175c>
   12460:	andeq	r2, r1, ip, lsl #9
   12464:	andeq	r3, r1, r0, lsr #2
   12468:	andeq	r2, r1, r4, ror #12
   1246c:			; <UNDEFINED> instruction: 0x000126b0
   12470:	andeq	r2, r1, r0, asr #12
   12474:	muleq	r1, r8, r4
   12478:	andeq	r3, r1, r0, lsl #2
   1247c:	muleq	r1, ip, r6
   12480:	muleq	r1, r0, r5
   12484:	muleq	r1, r0, r5
   12488:	muleq	r1, r0, r5
   1248c:	mov	r6, #0
   12490:	mov	r4, #0
   12494:	b	124c4 <close@plt+0x1588>
   12498:	cmp	r6, #0
   1249c:	bne	126c0 <close@plt+0x1784>
   124a0:	cmp	r5, #0
   124a4:	movne	r3, #34	; 0x22
   124a8:	strbne	r3, [r8]
   124ac:	mov	r3, #1
   124b0:	str	r3, [sp, #24]
   124b4:	str	r3, [sp, #32]
   124b8:	mov	r4, #1
   124bc:	ldr	r3, [pc, #3172]	; 13128 <close@plt+0x21ec>
   124c0:	str	r3, [sp, #40]	; 0x28
   124c4:	mov	r9, r5
   124c8:	mov	r3, #0
   124cc:	str	r7, [sp, #68]	; 0x44
   124d0:	str	r3, [sp, #28]
   124d4:	ldr	r3, [sp, #36]	; 0x24
   124d8:	cmn	r3, #1
   124dc:	bne	1306c <close@plt+0x2130>
   124e0:	ldr	r3, [sp, #44]	; 0x2c
   124e4:	ldr	r2, [sp, #28]
   124e8:	ldrb	r3, [r3, r2]
   124ec:	adds	r3, r3, #0
   124f0:	movne	r3, #1
   124f4:	str	r3, [sp, #52]	; 0x34
   124f8:	ldr	r3, [sp, #52]	; 0x34
   124fc:	cmp	r3, #0
   12500:	bne	126e8 <close@plt+0x17ac>
   12504:	sub	r2, sl, #2
   12508:	clz	r2, r2
   1250c:	lsr	r2, r2, #5
   12510:	and	r3, r6, r2
   12514:	cmp	r4, #0
   12518:	movne	r3, #0
   1251c:	andeq	r3, r3, #1
   12520:	cmp	r3, #0
   12524:	bne	128b0 <close@plt+0x1974>
   12528:	eor	r3, r6, #1
   1252c:	ands	r2, r2, r3
   12530:	beq	130a4 <close@plt+0x2168>
   12534:	ldr	r3, [sp, #68]	; 0x44
   12538:	cmp	r3, #0
   1253c:	beq	130dc <close@plt+0x21a0>
   12540:	ldr	r3, [sp, #72]	; 0x48
   12544:	cmp	r3, #0
   12548:	beq	13080 <close@plt+0x2144>
   1254c:	ldr	r3, [sp, #160]	; 0xa0
   12550:	ldr	r2, [sp, #44]	; 0x2c
   12554:	str	r3, [sp, #16]
   12558:	ldr	r3, [sp, #156]	; 0x9c
   1255c:	ldr	r1, [sp, #60]	; 0x3c
   12560:	str	r3, [sp, #12]
   12564:	ldr	r3, [sp, #152]	; 0x98
   12568:	str	r3, [sp, #8]
   1256c:	ldr	r3, [sp, #148]	; 0x94
   12570:	str	r3, [sp, #4]
   12574:	mov	r3, #5
   12578:	str	r3, [sp]
   1257c:	ldr	r3, [sp, #36]	; 0x24
   12580:	mov	r0, r8
   12584:	bl	12404 <close@plt+0x14c8>
   12588:	mov	r4, r0
   1258c:	b	130d0 <close@plt+0x2194>
   12590:	cmp	sl, #10
   12594:	beq	125f0 <close@plt+0x16b4>
   12598:	ldr	r4, [pc, #2956]	; 1312c <close@plt+0x21f0>
   1259c:	mov	r2, #5
   125a0:	mov	r1, r4
   125a4:	mov	r0, #0
   125a8:	bl	10d80 <dcgettext@plt>
   125ac:	cmp	r0, r4
   125b0:	str	r0, [sp, #156]	; 0x9c
   125b4:	bne	125c4 <close@plt+0x1688>
   125b8:	mov	r1, sl
   125bc:	bl	122f0 <close@plt+0x13b4>
   125c0:	str	r0, [sp, #156]	; 0x9c
   125c4:	ldr	r4, [pc, #2916]	; 13130 <close@plt+0x21f4>
   125c8:	mov	r2, #5
   125cc:	mov	r1, r4
   125d0:	mov	r0, #0
   125d4:	bl	10d80 <dcgettext@plt>
   125d8:	cmp	r0, r4
   125dc:	str	r0, [sp, #160]	; 0xa0
   125e0:	bne	125f0 <close@plt+0x16b4>
   125e4:	mov	r1, sl
   125e8:	bl	122f0 <close@plt+0x13b4>
   125ec:	str	r0, [sp, #160]	; 0xa0
   125f0:	cmp	r6, #0
   125f4:	moveq	r4, r6
   125f8:	beq	12610 <close@plt+0x16d4>
   125fc:	mov	r4, #0
   12600:	b	12620 <close@plt+0x16e4>
   12604:	cmp	r5, r4
   12608:	strbhi	r3, [r8, r4]
   1260c:	add	r4, r4, #1
   12610:	ldr	r3, [sp, #156]	; 0x9c
   12614:	ldrb	r3, [r3, r4]
   12618:	cmp	r3, #0
   1261c:	bne	12604 <close@plt+0x16c8>
   12620:	ldr	r0, [sp, #160]	; 0xa0
   12624:	bl	10e58 <strlen@plt>
   12628:	ldr	r3, [sp, #160]	; 0xa0
   1262c:	str	r3, [sp, #40]	; 0x28
   12630:	mov	r3, #1
   12634:	str	r3, [sp, #24]
   12638:	str	r0, [sp, #32]
   1263c:	b	124c4 <close@plt+0x1588>
   12640:	mov	r3, #1
   12644:	cmp	r6, #0
   12648:	streq	r3, [sp, #24]
   1264c:	beq	1266c <close@plt+0x1730>
   12650:	str	r3, [sp, #32]
   12654:	ldr	r3, [pc, #2772]	; 13130 <close@plt+0x21f4>
   12658:	mov	r4, #0
   1265c:	str	r3, [sp, #40]	; 0x28
   12660:	b	12690 <close@plt+0x1754>
   12664:	cmp	r6, #0
   12668:	bne	126d8 <close@plt+0x179c>
   1266c:	cmp	r5, #0
   12670:	movne	r3, #39	; 0x27
   12674:	strbne	r3, [r8]
   12678:	mov	r3, #1
   1267c:	str	r3, [sp, #32]
   12680:	mov	r6, #0
   12684:	ldr	r3, [pc, #2724]	; 13130 <close@plt+0x21f4>
   12688:	mov	r4, #1
   1268c:	str	r3, [sp, #40]	; 0x28
   12690:	mov	sl, #2
   12694:	b	124c4 <close@plt+0x1588>
   12698:	bl	10f24 <abort@plt>
   1269c:	mov	r6, #0
   126a0:	mov	r3, #1
   126a4:	str	r3, [sp, #24]
   126a8:	mov	r4, r6
   126ac:	b	124c4 <close@plt+0x1588>
   126b0:	mov	r6, #1
   126b4:	str	r6, [sp, #24]
   126b8:	str	r6, [sp, #32]
   126bc:	b	12654 <close@plt+0x1718>
   126c0:	mov	r3, #1
   126c4:	str	r3, [sp, #32]
   126c8:	ldr	r3, [pc, #2648]	; 13128 <close@plt+0x21ec>
   126cc:	str	r6, [sp, #24]
   126d0:	str	r3, [sp, #40]	; 0x28
   126d4:	b	12490 <close@plt+0x1554>
   126d8:	mov	r3, #1
   126dc:	str	r3, [sp, #32]
   126e0:	ldr	r3, [pc, #2632]	; 13130 <close@plt+0x21f4>
   126e4:	b	126d0 <close@plt+0x1794>
   126e8:	ldr	r3, [sp, #32]
   126ec:	ldr	fp, [sp, #24]
   126f0:	cmp	sl, #2
   126f4:	moveq	fp, #0
   126f8:	andne	fp, fp, #1
   126fc:	adds	r5, r3, #0
   12700:	movne	r5, #1
   12704:	ands	r3, r5, fp
   12708:	str	r3, [sp, #64]	; 0x40
   1270c:	beq	127dc <close@plt+0x18a0>
   12710:	ldr	r2, [sp, #32]
   12714:	ldr	r3, [sp, #28]
   12718:	add	r7, r3, r2
   1271c:	mov	r3, r2
   12720:	ldr	r2, [sp, #36]	; 0x24
   12724:	cmp	r3, #1
   12728:	movls	r3, #0
   1272c:	movhi	r3, #1
   12730:	cmn	r2, #1
   12734:	movne	r3, #0
   12738:	cmp	r3, #0
   1273c:	beq	1274c <close@plt+0x1810>
   12740:	ldr	r0, [sp, #44]	; 0x2c
   12744:	bl	10e58 <strlen@plt>
   12748:	str	r0, [sp, #36]	; 0x24
   1274c:	ldr	r3, [sp, #36]	; 0x24
   12750:	cmp	r3, r7
   12754:	bcc	127d4 <close@plt+0x1898>
   12758:	ldr	r3, [sp, #44]	; 0x2c
   1275c:	ldr	r0, [sp, #28]
   12760:	ldr	r2, [sp, #32]
   12764:	ldr	r1, [sp, #40]	; 0x28
   12768:	add	r0, r3, r0
   1276c:	bl	10d5c <memcmp@plt>
   12770:	cmp	r0, #0
   12774:	bne	127d4 <close@plt+0x1898>
   12778:	cmp	r6, #0
   1277c:	beq	127dc <close@plt+0x18a0>
   12780:	str	r6, [sp, #24]
   12784:	ldr	r3, [sp, #24]
   12788:	ldr	r2, [sp, #44]	; 0x2c
   1278c:	cmp	sl, #2
   12790:	movne	r3, #0
   12794:	andeq	r3, r3, #1
   12798:	cmp	r3, #0
   1279c:	ldr	r3, [sp, #160]	; 0xa0
   127a0:	movne	sl, #4
   127a4:	str	r3, [sp, #16]
   127a8:	ldr	r3, [sp, #156]	; 0x9c
   127ac:	str	sl, [sp]
   127b0:	str	r3, [sp, #12]
   127b4:	mov	r3, #0
   127b8:	str	r3, [sp, #8]
   127bc:	ldr	r3, [sp, #148]	; 0x94
   127c0:	mov	r1, r9
   127c4:	bic	r3, r3, #2
   127c8:	str	r3, [sp, #4]
   127cc:	ldr	r3, [sp, #36]	; 0x24
   127d0:	b	12580 <close@plt+0x1644>
   127d4:	mov	r3, #0
   127d8:	str	r3, [sp, #64]	; 0x40
   127dc:	ldr	r2, [sp, #28]
   127e0:	ldr	r3, [sp, #44]	; 0x2c
   127e4:	add	r3, r3, r2
   127e8:	str	r3, [sp, #80]	; 0x50
   127ec:	ldr	r3, [sp, #44]	; 0x2c
   127f0:	ldrb	r7, [r3, r2]
   127f4:	cmp	r7, #58	; 0x3a
   127f8:	bhi	12960 <close@plt+0x1a24>
   127fc:	cmp	r7, #43	; 0x2b
   12800:	bcs	129b4 <close@plt+0x1a78>
   12804:	cmp	r7, #32
   12808:	beq	12a0c <close@plt+0x1ad0>
   1280c:	bhi	128b8 <close@plt+0x197c>
   12810:	cmp	r7, #9
   12814:	beq	12cc0 <close@plt+0x1d84>
   12818:	bhi	1287c <close@plt+0x1940>
   1281c:	cmp	r7, #7
   12820:	beq	12d6c <close@plt+0x1e30>
   12824:	bhi	12a28 <close@plt+0x1aec>
   12828:	cmp	r7, #0
   1282c:	beq	12a44 <close@plt+0x1b08>
   12830:	ldr	r3, [sp, #76]	; 0x4c
   12834:	cmp	r3, #1
   12838:	bne	12db0 <close@plt+0x1e74>
   1283c:	bl	10e40 <__ctype_b_loc@plt>
   12840:	sxth	r3, r7
   12844:	lsl	r3, r3, #1
   12848:	ldr	r2, [r0]
   1284c:	ldrh	r5, [r2, r3]
   12850:	ldr	r3, [sp, #76]	; 0x4c
   12854:	str	r3, [sp, #56]	; 0x38
   12858:	lsr	r5, r5, #14
   1285c:	and	r5, r5, #1
   12860:	ldr	r3, [sp, #24]
   12864:	eor	fp, r5, #1
   12868:	and	fp, fp, r3
   1286c:	ands	fp, fp, #255	; 0xff
   12870:	beq	12bf8 <close@plt+0x1cbc>
   12874:	mov	r5, #0
   12878:	b	12e5c <close@plt+0x1f20>
   1287c:	cmp	r7, #11
   12880:	beq	12cc8 <close@plt+0x1d8c>
   12884:	bcc	12d64 <close@plt+0x1e28>
   12888:	cmp	r7, #12
   1288c:	beq	12d74 <close@plt+0x1e38>
   12890:	cmp	r7, #13
   12894:	moveq	r3, #114	; 0x72
   12898:	bne	12830 <close@plt+0x18f4>
   1289c:	cmp	sl, #2
   128a0:	movne	r2, #0
   128a4:	andeq	r2, r6, #1
   128a8:	cmp	r2, #0
   128ac:	beq	12a2c <close@plt+0x1af0>
   128b0:	mov	sl, #2
   128b4:	b	12784 <close@plt+0x1848>
   128b8:	cmp	r7, #37	; 0x25
   128bc:	beq	129b4 <close@plt+0x1a78>
   128c0:	bhi	128d4 <close@plt+0x1998>
   128c4:	cmp	r7, #35	; 0x23
   128c8:	beq	12a00 <close@plt+0x1ac4>
   128cc:	mov	r5, #0
   128d0:	b	12a10 <close@plt+0x1ad4>
   128d4:	cmp	r7, #39	; 0x27
   128d8:	bne	128cc <close@plt+0x1990>
   128dc:	cmp	sl, #2
   128e0:	ldrne	r5, [sp, #52]	; 0x34
   128e4:	movne	r3, r5
   128e8:	strne	r3, [sp, #68]	; 0x44
   128ec:	bne	129b8 <close@plt+0x1a7c>
   128f0:	cmp	r6, #0
   128f4:	bne	12784 <close@plt+0x1848>
   128f8:	ldr	r2, [sp, #60]	; 0x3c
   128fc:	adds	r3, r9, #0
   12900:	movne	r3, #1
   12904:	cmp	r2, #0
   12908:	movne	r3, #0
   1290c:	cmp	r3, #0
   12910:	strne	r9, [sp, #60]	; 0x3c
   12914:	movne	r9, #0
   12918:	bne	12928 <close@plt+0x19ec>
   1291c:	cmp	r9, r4
   12920:	movhi	r3, #39	; 0x27
   12924:	strbhi	r3, [r8, r4]
   12928:	add	r3, r4, #1
   1292c:	cmp	r3, r9
   12930:	movcc	r2, #92	; 0x5c
   12934:	strbcc	r2, [r8, r3]
   12938:	add	r3, r4, #2
   1293c:	cmp	r3, r9
   12940:	ldr	r5, [sp, #52]	; 0x34
   12944:	movcc	r2, #39	; 0x27
   12948:	strbcc	r2, [r8, r3]
   1294c:	add	r4, r4, #3
   12950:	mov	fp, r6
   12954:	str	r5, [sp, #68]	; 0x44
   12958:	str	r6, [sp, #48]	; 0x30
   1295c:	b	12bf8 <close@plt+0x1cbc>
   12960:	cmp	r7, #94	; 0x5e
   12964:	beq	128cc <close@plt+0x1990>
   12968:	bhi	129c0 <close@plt+0x1a84>
   1296c:	cmp	r7, #90	; 0x5a
   12970:	bhi	129a8 <close@plt+0x1a6c>
   12974:	cmp	r7, #65	; 0x41
   12978:	bcs	129b4 <close@plt+0x1a78>
   1297c:	cmp	r7, #62	; 0x3e
   12980:	bls	128cc <close@plt+0x1990>
   12984:	cmp	r7, #63	; 0x3f
   12988:	bne	12830 <close@plt+0x18f4>
   1298c:	cmp	sl, #2
   12990:	beq	12b34 <close@plt+0x1bf8>
   12994:	cmp	sl, #5
   12998:	beq	12b44 <close@plt+0x1c08>
   1299c:	mov	fp, #0
   129a0:	mov	r5, fp
   129a4:	b	12bf8 <close@plt+0x1cbc>
   129a8:	cmp	r7, #92	; 0x5c
   129ac:	beq	12cd0 <close@plt+0x1d94>
   129b0:	bls	128cc <close@plt+0x1990>
   129b4:	ldr	r5, [sp, #52]	; 0x34
   129b8:	mov	fp, #0
   129bc:	b	12bf8 <close@plt+0x1cbc>
   129c0:	cmp	r7, #122	; 0x7a
   129c4:	bhi	129e4 <close@plt+0x1aa8>
   129c8:	cmp	r7, #97	; 0x61
   129cc:	bcs	129b4 <close@plt+0x1a78>
   129d0:	cmp	r7, #95	; 0x5f
   129d4:	beq	129b4 <close@plt+0x1a78>
   129d8:	cmp	r7, #96	; 0x60
   129dc:	bne	12830 <close@plt+0x18f4>
   129e0:	b	128cc <close@plt+0x1990>
   129e4:	cmp	r7, #124	; 0x7c
   129e8:	beq	128cc <close@plt+0x1990>
   129ec:	bcc	12d7c <close@plt+0x1e40>
   129f0:	cmp	r7, #125	; 0x7d
   129f4:	beq	12d7c <close@plt+0x1e40>
   129f8:	cmp	r7, #126	; 0x7e
   129fc:	bne	12830 <close@plt+0x18f4>
   12a00:	ldr	r3, [sp, #28]
   12a04:	cmp	r3, #0
   12a08:	bne	12b3c <close@plt+0x1c00>
   12a0c:	ldr	r5, [sp, #52]	; 0x34
   12a10:	cmp	sl, #2
   12a14:	movne	fp, #0
   12a18:	andeq	fp, r6, #1
   12a1c:	cmp	fp, #0
   12a20:	beq	12bf8 <close@plt+0x1cbc>
   12a24:	b	128b0 <close@plt+0x1974>
   12a28:	mov	r3, #98	; 0x62
   12a2c:	ldr	r2, [sp, #24]
   12a30:	cmp	r2, #0
   12a34:	beq	12b3c <close@plt+0x1c00>
   12a38:	mov	r7, r3
   12a3c:	mov	r5, #0
   12a40:	b	12c50 <close@plt+0x1d14>
   12a44:	ldr	r3, [sp, #24]
   12a48:	cmp	r3, #0
   12a4c:	beq	12b18 <close@plt+0x1bdc>
   12a50:	cmp	r6, #0
   12a54:	bne	12780 <close@plt+0x1844>
   12a58:	ldr	r3, [sp, #48]	; 0x30
   12a5c:	eor	r2, r3, #1
   12a60:	cmp	sl, #2
   12a64:	movne	r2, #0
   12a68:	andeq	r2, r2, #1
   12a6c:	cmp	r2, #0
   12a70:	moveq	r3, r4
   12a74:	beq	12aac <close@plt+0x1b70>
   12a78:	cmp	r9, r4
   12a7c:	movhi	r3, #39	; 0x27
   12a80:	strbhi	r3, [r8, r4]
   12a84:	add	r3, r4, #1
   12a88:	cmp	r9, r3
   12a8c:	movhi	r1, #36	; 0x24
   12a90:	strbhi	r1, [r8, r3]
   12a94:	add	r3, r4, #2
   12a98:	cmp	r9, r3
   12a9c:	movhi	r1, #39	; 0x27
   12aa0:	strbhi	r1, [r8, r3]
   12aa4:	add	r3, r4, #3
   12aa8:	str	r2, [sp, #48]	; 0x30
   12aac:	cmp	r9, r3
   12ab0:	movhi	r2, #92	; 0x5c
   12ab4:	strbhi	r2, [r8, r3]
   12ab8:	cmp	fp, #0
   12abc:	add	r4, r3, #1
   12ac0:	beq	13050 <close@plt+0x2114>
   12ac4:	ldr	r2, [sp, #28]
   12ac8:	ldr	r1, [sp, #36]	; 0x24
   12acc:	add	r2, r2, #1
   12ad0:	cmp	r1, r2
   12ad4:	bls	12b10 <close@plt+0x1bd4>
   12ad8:	ldr	r1, [sp, #44]	; 0x2c
   12adc:	mov	r7, #48	; 0x30
   12ae0:	ldrb	r2, [r1, r2]
   12ae4:	sub	r2, r2, #48	; 0x30
   12ae8:	cmp	r2, #9
   12aec:	movhi	r5, r6
   12af0:	bhi	12bf8 <close@plt+0x1cbc>
   12af4:	cmp	r9, r4
   12af8:	add	r2, r3, #2
   12afc:	strbhi	r7, [r8, r4]
   12b00:	cmp	r9, r2
   12b04:	add	r4, r3, #3
   12b08:	movhi	r1, #48	; 0x30
   12b0c:	strbhi	r1, [r8, r2]
   12b10:	mov	r5, r6
   12b14:	b	13058 <close@plt+0x211c>
   12b18:	ldr	r3, [sp, #148]	; 0x94
   12b1c:	tst	r3, #1
   12b20:	ldreq	r5, [sp, #24]
   12b24:	beq	13064 <close@plt+0x2128>
   12b28:	ldr	r3, [sp, #28]
   12b2c:	add	r3, r3, #1
   12b30:	b	124d0 <close@plt+0x1594>
   12b34:	cmp	r6, #0
   12b38:	bne	12784 <close@plt+0x1848>
   12b3c:	mov	r5, #0
   12b40:	b	129b8 <close@plt+0x1a7c>
   12b44:	ldr	r3, [sp, #148]	; 0x94
   12b48:	tst	r3, #4
   12b4c:	beq	12b3c <close@plt+0x1c00>
   12b50:	ldr	r3, [sp, #28]
   12b54:	add	r2, r3, #2
   12b58:	ldr	r3, [sp, #36]	; 0x24
   12b5c:	cmp	r3, r2
   12b60:	bls	12b3c <close@plt+0x1c00>
   12b64:	ldr	r3, [sp, #44]	; 0x2c
   12b68:	ldr	r1, [sp, #28]
   12b6c:	add	r3, r3, r1
   12b70:	ldrb	r0, [r3, #1]
   12b74:	cmp	r0, #63	; 0x3f
   12b78:	bne	12b3c <close@plt+0x1c00>
   12b7c:	ldr	r3, [sp, #44]	; 0x2c
   12b80:	ldrb	r1, [r3, r2]
   12b84:	sub	r3, r1, #33	; 0x21
   12b88:	uxtb	r3, r3
   12b8c:	cmp	r3, #29
   12b90:	bhi	13060 <close@plt+0x2124>
   12b94:	mov	ip, #1
   12b98:	ldr	r5, [pc, #1428]	; 13134 <close@plt+0x21f8>
   12b9c:	ands	r5, r5, ip, lsl r3
   12ba0:	beq	129b8 <close@plt+0x1a7c>
   12ba4:	cmp	r6, #0
   12ba8:	bne	12784 <close@plt+0x1848>
   12bac:	add	r3, r4, #1
   12bb0:	cmp	r9, r4
   12bb4:	strbhi	r0, [r8, r4]
   12bb8:	cmp	r9, r3
   12bbc:	movhi	r0, #34	; 0x22
   12bc0:	strbhi	r0, [r8, r3]
   12bc4:	add	r3, r4, #2
   12bc8:	cmp	r9, r3
   12bcc:	movhi	r0, #34	; 0x22
   12bd0:	strbhi	r0, [r8, r3]
   12bd4:	add	r3, r4, #3
   12bd8:	cmp	r9, r3
   12bdc:	add	r4, r4, #4
   12be0:	mov	r5, r6
   12be4:	mov	fp, r6
   12be8:	mov	r7, r1
   12bec:	movhi	r0, #63	; 0x3f
   12bf0:	strbhi	r0, [r8, r3]
   12bf4:	str	r2, [sp, #28]
   12bf8:	ldr	r3, [sp, #24]
   12bfc:	eor	r3, r3, #1
   12c00:	cmp	sl, #2
   12c04:	orreq	r3, r3, #1
   12c08:	eor	r3, r3, #1
   12c0c:	orr	r3, r6, r3
   12c10:	tst	r3, #255	; 0xff
   12c14:	beq	12c44 <close@plt+0x1d08>
   12c18:	ldr	r3, [sp, #152]	; 0x98
   12c1c:	cmp	r3, #0
   12c20:	beq	12c44 <close@plt+0x1d08>
   12c24:	lsr	r2, r7, #5
   12c28:	ldr	r1, [sp, #152]	; 0x98
   12c2c:	uxtb	r2, r2
   12c30:	and	r3, r7, #31
   12c34:	ldr	r2, [r1, r2, lsl #2]
   12c38:	lsr	r3, r2, r3
   12c3c:	tst	r3, #1
   12c40:	bne	12c50 <close@plt+0x1d14>
   12c44:	ldr	r3, [sp, #64]	; 0x40
   12c48:	cmp	r3, #0
   12c4c:	beq	12ce8 <close@plt+0x1dac>
   12c50:	cmp	r6, #0
   12c54:	bne	12784 <close@plt+0x1848>
   12c58:	ldr	r3, [sp, #48]	; 0x30
   12c5c:	eor	r3, r3, #1
   12c60:	cmp	sl, #2
   12c64:	movne	r3, #0
   12c68:	andeq	r3, r3, #1
   12c6c:	cmp	r3, #0
   12c70:	beq	12ca8 <close@plt+0x1d6c>
   12c74:	cmp	r9, r4
   12c78:	movhi	r2, #39	; 0x27
   12c7c:	strbhi	r2, [r8, r4]
   12c80:	add	r2, r4, #1
   12c84:	cmp	r9, r2
   12c88:	movhi	r1, #36	; 0x24
   12c8c:	strbhi	r1, [r8, r2]
   12c90:	add	r2, r4, #2
   12c94:	cmp	r9, r2
   12c98:	add	r4, r4, #3
   12c9c:	movhi	r1, #39	; 0x27
   12ca0:	strbhi	r1, [r8, r2]
   12ca4:	str	r3, [sp, #48]	; 0x30
   12ca8:	cmp	r9, r4
   12cac:	movhi	r3, #92	; 0x5c
   12cb0:	strbhi	r3, [r8, r4]
   12cb4:	ldr	fp, [sp, #52]	; 0x34
   12cb8:	add	r4, r4, #1
   12cbc:	b	12ce8 <close@plt+0x1dac>
   12cc0:	mov	r3, #116	; 0x74
   12cc4:	b	1289c <close@plt+0x1960>
   12cc8:	mov	r3, #118	; 0x76
   12ccc:	b	12a2c <close@plt+0x1af0>
   12cd0:	cmp	sl, #2
   12cd4:	bne	12d44 <close@plt+0x1e08>
   12cd8:	cmp	r6, #0
   12cdc:	bne	12784 <close@plt+0x1848>
   12ce0:	mov	r5, r6
   12ce4:	mov	fp, r6
   12ce8:	ldr	r3, [sp, #48]	; 0x30
   12cec:	eor	fp, fp, #1
   12cf0:	and	fp, fp, r3
   12cf4:	tst	fp, #255	; 0xff
   12cf8:	beq	12d24 <close@plt+0x1de8>
   12cfc:	cmp	r9, r4
   12d00:	movhi	r3, #39	; 0x27
   12d04:	strbhi	r3, [r8, r4]
   12d08:	add	r3, r4, #1
   12d0c:	cmp	r9, r3
   12d10:	movhi	r2, #39	; 0x27
   12d14:	add	r4, r4, #2
   12d18:	strbhi	r2, [r8, r3]
   12d1c:	mov	r3, #0
   12d20:	str	r3, [sp, #48]	; 0x30
   12d24:	cmp	r9, r4
   12d28:	strbhi	r7, [r8, r4]
   12d2c:	ldr	r3, [sp, #72]	; 0x48
   12d30:	cmp	r5, #0
   12d34:	moveq	r3, #0
   12d38:	add	r4, r4, #1
   12d3c:	str	r3, [sp, #72]	; 0x48
   12d40:	b	12b28 <close@plt+0x1bec>
   12d44:	ldr	r3, [sp, #24]
   12d48:	and	r3, r3, r6
   12d4c:	tst	r5, r3
   12d50:	moveq	r3, r7
   12d54:	beq	1289c <close@plt+0x1960>
   12d58:	mov	fp, #0
   12d5c:	mov	r5, fp
   12d60:	b	12ce8 <close@plt+0x1dac>
   12d64:	mov	r3, #110	; 0x6e
   12d68:	b	1289c <close@plt+0x1960>
   12d6c:	mov	r3, #97	; 0x61
   12d70:	b	12a2c <close@plt+0x1af0>
   12d74:	mov	r3, #102	; 0x66
   12d78:	b	12a2c <close@plt+0x1af0>
   12d7c:	ldr	r3, [sp, #36]	; 0x24
   12d80:	cmn	r3, #1
   12d84:	bne	12da4 <close@plt+0x1e68>
   12d88:	ldr	r3, [sp, #44]	; 0x2c
   12d8c:	ldrb	r3, [r3, #1]
   12d90:	adds	r3, r3, #0
   12d94:	movne	r3, #1
   12d98:	cmp	r3, #0
   12d9c:	bne	12b3c <close@plt+0x1c00>
   12da0:	b	12a00 <close@plt+0x1ac4>
   12da4:	ldr	r3, [sp, #36]	; 0x24
   12da8:	subs	r3, r3, #1
   12dac:	b	12d94 <close@plt+0x1e58>
   12db0:	mov	r3, #0
   12db4:	str	r3, [sp, #96]	; 0x60
   12db8:	str	r3, [sp, #100]	; 0x64
   12dbc:	ldr	r3, [sp, #36]	; 0x24
   12dc0:	cmn	r3, #1
   12dc4:	bne	12dd4 <close@plt+0x1e98>
   12dc8:	ldr	r0, [sp, #44]	; 0x2c
   12dcc:	bl	10e58 <strlen@plt>
   12dd0:	str	r0, [sp, #36]	; 0x24
   12dd4:	ldr	r5, [sp, #52]	; 0x34
   12dd8:	mov	r3, #0
   12ddc:	str	r3, [sp, #56]	; 0x38
   12de0:	ldr	r3, [sp, #28]
   12de4:	ldr	r2, [sp, #56]	; 0x38
   12de8:	ldr	r1, [sp, #36]	; 0x24
   12dec:	add	r2, r3, r2
   12df0:	ldr	r3, [sp, #44]	; 0x2c
   12df4:	add	r0, sp, #92	; 0x5c
   12df8:	add	fp, r3, r2
   12dfc:	sub	r2, r1, r2
   12e00:	add	r3, sp, #96	; 0x60
   12e04:	mov	r1, fp
   12e08:	bl	147c8 <close@plt+0x388c>
   12e0c:	subs	r2, r0, #0
   12e10:	beq	12e50 <close@plt+0x1f14>
   12e14:	cmn	r2, #1
   12e18:	beq	13028 <close@plt+0x20ec>
   12e1c:	cmn	r2, #2
   12e20:	bne	12f98 <close@plt+0x205c>
   12e24:	ldr	r2, [sp, #56]	; 0x38
   12e28:	ldr	r3, [sp, #28]
   12e2c:	add	r3, r3, r2
   12e30:	ldr	r2, [sp, #36]	; 0x24
   12e34:	cmp	r2, r3
   12e38:	bls	13028 <close@plt+0x20ec>
   12e3c:	ldr	r3, [sp, #80]	; 0x50
   12e40:	ldr	r2, [sp, #56]	; 0x38
   12e44:	ldrb	r5, [r3, r2]
   12e48:	cmp	r5, #0
   12e4c:	bne	12f88 <close@plt+0x204c>
   12e50:	ldr	r3, [sp, #56]	; 0x38
   12e54:	cmp	r3, #1
   12e58:	bls	12860 <close@plt+0x1924>
   12e5c:	ldr	r2, [sp, #56]	; 0x38
   12e60:	ldr	r3, [sp, #28]
   12e64:	mov	fp, #0
   12e68:	add	r3, r3, r2
   12e6c:	ldr	r2, [sp, #24]
   12e70:	str	r3, [sp, #52]	; 0x34
   12e74:	eor	r3, r5, #1
   12e78:	and	r3, r3, r2
   12e7c:	mov	ip, #92	; 0x5c
   12e80:	uxtb	r3, r3
   12e84:	mov	r2, #39	; 0x27
   12e88:	cmp	r3, #0
   12e8c:	beq	13030 <close@plt+0x20f4>
   12e90:	cmp	r6, #0
   12e94:	bne	12780 <close@plt+0x1844>
   12e98:	ldr	r1, [sp, #48]	; 0x30
   12e9c:	eor	r1, r1, #1
   12ea0:	cmp	sl, #2
   12ea4:	movne	r1, #0
   12ea8:	andeq	r1, r1, #1
   12eac:	cmp	r1, #0
   12eb0:	beq	12ee0 <close@plt+0x1fa4>
   12eb4:	add	r0, r4, #1
   12eb8:	cmp	r9, r4
   12ebc:	strbhi	r2, [r8, r4]
   12ec0:	cmp	r9, r0
   12ec4:	movhi	lr, #36	; 0x24
   12ec8:	strbhi	lr, [r8, r0]
   12ecc:	add	r0, r4, #2
   12ed0:	add	r4, r4, #3
   12ed4:	cmp	r9, r0
   12ed8:	strbhi	r2, [r8, r0]
   12edc:	str	r1, [sp, #48]	; 0x30
   12ee0:	add	r0, r4, #1
   12ee4:	cmp	r9, r4
   12ee8:	strbhi	ip, [r8, r4]
   12eec:	cmp	r9, r0
   12ef0:	lsrhi	r1, r7, #6
   12ef4:	addhi	r1, r1, #48	; 0x30
   12ef8:	strbhi	r1, [r8, r0]
   12efc:	add	r0, r4, #2
   12f00:	cmp	r9, r0
   12f04:	lsrhi	r1, r7, #3
   12f08:	and	r7, r7, #7
   12f0c:	andhi	r1, r1, #7
   12f10:	add	r4, r4, #3
   12f14:	add	r7, r7, #48	; 0x30
   12f18:	mov	fp, r3
   12f1c:	addhi	r1, r1, #48	; 0x30
   12f20:	strbhi	r1, [r8, r0]
   12f24:	ldr	r1, [sp, #28]
   12f28:	ldr	r0, [sp, #52]	; 0x34
   12f2c:	add	r1, r1, #1
   12f30:	cmp	r0, r1
   12f34:	bls	12ce8 <close@plt+0x1dac>
   12f38:	ldr	lr, [sp, #48]	; 0x30
   12f3c:	eor	r0, fp, #1
   12f40:	and	r0, r0, lr
   12f44:	tst	r0, #255	; 0xff
   12f48:	beq	12f6c <close@plt+0x2030>
   12f4c:	add	r0, r4, #1
   12f50:	cmp	r9, r4
   12f54:	strbhi	r2, [r8, r4]
   12f58:	cmp	r9, r0
   12f5c:	add	r4, r4, #2
   12f60:	strbhi	r2, [r8, r0]
   12f64:	mov	r0, #0
   12f68:	str	r0, [sp, #48]	; 0x30
   12f6c:	ldr	r0, [sp, #44]	; 0x2c
   12f70:	cmp	r9, r4
   12f74:	strbhi	r7, [r8, r4]
   12f78:	str	r1, [sp, #28]
   12f7c:	add	r4, r4, #1
   12f80:	ldrb	r7, [r0, r1]
   12f84:	b	12e88 <close@plt+0x1f4c>
   12f88:	ldr	r3, [sp, #56]	; 0x38
   12f8c:	add	r3, r3, #1
   12f90:	str	r3, [sp, #56]	; 0x38
   12f94:	b	12e24 <close@plt+0x1ee8>
   12f98:	cmp	sl, #2
   12f9c:	movne	r3, #0
   12fa0:	andeq	r3, r6, #1
   12fa4:	cmp	r3, #0
   12fa8:	movne	r1, #1
   12fac:	bne	13008 <close@plt+0x20cc>
   12fb0:	ldr	r0, [sp, #92]	; 0x5c
   12fb4:	str	r2, [sp, #84]	; 0x54
   12fb8:	bl	10da4 <iswprint@plt>
   12fbc:	ldr	r3, [sp, #56]	; 0x38
   12fc0:	ldr	r2, [sp, #84]	; 0x54
   12fc4:	add	r3, r3, r2
   12fc8:	str	r3, [sp, #56]	; 0x38
   12fcc:	cmp	r0, #0
   12fd0:	add	r0, sp, #96	; 0x60
   12fd4:	moveq	r5, #0
   12fd8:	bl	10d44 <mbsinit@plt>
   12fdc:	cmp	r0, #0
   12fe0:	beq	12de0 <close@plt+0x1ea4>
   12fe4:	b	12e50 <close@plt+0x1f14>
   12fe8:	ldrb	r3, [fp, r1]
   12fec:	cmp	r3, #94	; 0x5e
   12ff0:	beq	128b0 <close@plt+0x1974>
   12ff4:	bhi	13014 <close@plt+0x20d8>
   12ff8:	sub	r3, r3, #91	; 0x5b
   12ffc:	cmp	r3, #1
   13000:	bls	128b0 <close@plt+0x1974>
   13004:	add	r1, r1, #1
   13008:	cmp	r1, r2
   1300c:	bne	12fe8 <close@plt+0x20ac>
   13010:	b	12fb0 <close@plt+0x2074>
   13014:	cmp	r3, #96	; 0x60
   13018:	beq	128b0 <close@plt+0x1974>
   1301c:	cmp	r3, #124	; 0x7c
   13020:	bne	13004 <close@plt+0x20c8>
   13024:	b	128b0 <close@plt+0x1974>
   13028:	mov	r5, #0
   1302c:	b	12e50 <close@plt+0x1f14>
   13030:	ldr	r1, [sp, #64]	; 0x40
   13034:	cmp	r1, #0
   13038:	beq	12f24 <close@plt+0x1fe8>
   1303c:	cmp	r9, r4
   13040:	strbhi	ip, [r8, r4]
   13044:	str	r3, [sp, #64]	; 0x40
   13048:	add	r4, r4, #1
   1304c:	b	12f24 <close@plt+0x1fe8>
   13050:	mov	r5, fp
   13054:	ldr	fp, [sp, #24]
   13058:	mov	r7, #48	; 0x30
   1305c:	b	12bf8 <close@plt+0x1cbc>
   13060:	mov	r5, #0
   13064:	mov	fp, r5
   13068:	b	12bf8 <close@plt+0x1cbc>
   1306c:	ldr	r3, [sp, #36]	; 0x24
   13070:	ldr	r2, [sp, #28]
   13074:	subs	r3, r3, r2
   13078:	movne	r3, #1
   1307c:	b	124f4 <close@plt+0x15b8>
   13080:	ldr	r3, [sp, #60]	; 0x3c
   13084:	clz	r7, r9
   13088:	cmp	r3, #0
   1308c:	lsr	r7, r7, #5
   13090:	moveq	r7, #0
   13094:	cmp	r7, #0
   13098:	mov	r5, r3
   1309c:	bne	12454 <close@plt+0x1518>
   130a0:	ldr	r3, [sp, #68]	; 0x44
   130a4:	ldr	r2, [sp, #40]	; 0x28
   130a8:	cmp	r2, #0
   130ac:	moveq	r3, #0
   130b0:	andne	r3, r3, #1
   130b4:	cmp	r3, #0
   130b8:	movne	r3, r2
   130bc:	subne	r2, r3, #1
   130c0:	bne	130f0 <close@plt+0x21b4>
   130c4:	cmp	r9, r4
   130c8:	movhi	r3, #0
   130cc:	strbhi	r3, [r8, r4]
   130d0:	mov	r0, r4
   130d4:	add	sp, sp, #108	; 0x6c
   130d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130dc:	mov	r3, r2
   130e0:	b	130a4 <close@plt+0x2168>
   130e4:	cmp	r9, r4
   130e8:	strbhi	r3, [r8, r4]
   130ec:	add	r4, r4, #1
   130f0:	ldrb	r3, [r2, #1]!
   130f4:	cmp	r3, #0
   130f8:	bne	130e4 <close@plt+0x21a8>
   130fc:	b	130c4 <close@plt+0x2188>
   13100:	ldr	r3, [pc, #32]	; 13128 <close@plt+0x21ec>
   13104:	mov	r6, #1
   13108:	str	r6, [sp, #24]
   1310c:	str	r6, [sp, #32]
   13110:	str	r3, [sp, #40]	; 0x28
   13114:	mov	r4, #0
   13118:	mov	sl, #5
   1311c:	b	124c4 <close@plt+0x1588>
   13120:	mov	r6, #1
   13124:	b	126b8 <close@plt+0x177c>
   13128:	andeq	r5, r1, r7, lsl #18
   1312c:	andeq	r5, r1, fp, lsl #18
   13130:	andeq	r5, r1, r9, lsl #18
   13134:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1313c:	sub	sp, sp, #52	; 0x34
   13140:	mov	r6, r0
   13144:	mov	r5, r3
   13148:	mov	r8, r1
   1314c:	mov	r9, r2
   13150:	bl	10e64 <__errno_location@plt>
   13154:	ldr	r7, [pc, #380]	; 132d8 <close@plt+0x239c>
   13158:	cmn	r6, #-2147483647	; 0x80000001
   1315c:	ldr	r4, [r7]
   13160:	ldr	r3, [r0]
   13164:	str	r0, [sp, #24]
   13168:	str	r3, [sp, #32]
   1316c:	movne	r3, #0
   13170:	moveq	r3, #1
   13174:	orrs	r3, r3, r6, lsr #31
   13178:	beq	13180 <close@plt+0x2244>
   1317c:	bl	10f24 <abort@plt>
   13180:	ldr	r2, [r7, #4]
   13184:	cmp	r6, r2
   13188:	blt	131f8 <close@plt+0x22bc>
   1318c:	add	r1, sp, #48	; 0x30
   13190:	add	sl, r7, #8
   13194:	str	r2, [r1, #-4]!
   13198:	cmp	r4, sl
   1319c:	mov	r3, #8
   131a0:	sub	r2, r6, r2
   131a4:	movne	r0, r4
   131a8:	str	r3, [sp]
   131ac:	add	r2, r2, #1
   131b0:	mvn	r3, #-2147483648	; 0x80000000
   131b4:	moveq	r0, #0
   131b8:	bl	13f5c <close@plt+0x3020>
   131bc:	cmp	r4, sl
   131c0:	ldr	r2, [sp, #44]	; 0x2c
   131c4:	mov	fp, r0
   131c8:	str	r0, [r7]
   131cc:	ldmeq	r4, {r0, r1}
   131d0:	mov	r4, fp
   131d4:	stmeq	fp, {r0, r1}
   131d8:	ldr	r0, [r7, #4]
   131dc:	mov	r1, #0
   131e0:	sub	r2, r2, r0
   131e4:	add	r0, fp, r0, lsl #3
   131e8:	lsl	r2, r2, #3
   131ec:	bl	10e7c <memset@plt>
   131f0:	ldr	r3, [sp, #44]	; 0x2c
   131f4:	str	r3, [r7, #4]
   131f8:	ldr	r3, [r5, #4]
   131fc:	add	sl, r4, r6, lsl #3
   13200:	orr	r3, r3, #1
   13204:	str	r3, [sp, #28]
   13208:	add	r3, r5, #8
   1320c:	str	r3, [sp, #36]	; 0x24
   13210:	ldr	r3, [r5, #44]	; 0x2c
   13214:	ldr	fp, [r4, r6, lsl #3]
   13218:	ldr	r7, [sl, #4]
   1321c:	str	r3, [sp, #16]
   13220:	ldr	r3, [r5, #40]	; 0x28
   13224:	mov	r2, r8
   13228:	str	r3, [sp, #12]
   1322c:	add	r3, r5, #8
   13230:	str	r3, [sp, #8]
   13234:	ldr	r3, [sp, #28]
   13238:	mov	r1, fp
   1323c:	str	r3, [sp, #4]
   13240:	ldr	r3, [r5]
   13244:	mov	r0, r7
   13248:	str	r3, [sp]
   1324c:	mov	r3, r9
   13250:	bl	12404 <close@plt+0x14c8>
   13254:	cmp	fp, r0
   13258:	bhi	132c0 <close@plt+0x2384>
   1325c:	ldr	r3, [pc, #120]	; 132dc <close@plt+0x23a0>
   13260:	add	fp, r0, #1
   13264:	cmp	r7, r3
   13268:	str	fp, [r4, r6, lsl #3]
   1326c:	beq	13278 <close@plt+0x233c>
   13270:	mov	r0, r7
   13274:	bl	14740 <close@plt+0x3804>
   13278:	mov	r0, fp
   1327c:	bl	13e14 <close@plt+0x2ed8>
   13280:	ldr	r3, [r5, #44]	; 0x2c
   13284:	mov	r2, r8
   13288:	mov	r1, fp
   1328c:	str	r0, [sl, #4]
   13290:	str	r3, [sp, #16]
   13294:	ldr	r3, [r5, #40]	; 0x28
   13298:	mov	r7, r0
   1329c:	str	r3, [sp, #12]
   132a0:	add	r3, r5, #8
   132a4:	str	r3, [sp, #8]
   132a8:	ldr	r3, [sp, #28]
   132ac:	str	r3, [sp, #4]
   132b0:	ldr	r3, [r5]
   132b4:	str	r3, [sp]
   132b8:	mov	r3, r9
   132bc:	bl	12404 <close@plt+0x14c8>
   132c0:	ldr	r3, [sp, #24]
   132c4:	ldr	r2, [sp, #32]
   132c8:	mov	r0, r7
   132cc:	str	r2, [r3]
   132d0:	add	sp, sp, #52	; 0x34
   132d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132d8:	strdeq	r6, [r2], -ip
   132dc:	andeq	r6, r2, r4, lsl #3
   132e0:	push	{r4, r5, r6, lr}
   132e4:	mov	r5, r0
   132e8:	bl	10e64 <__errno_location@plt>
   132ec:	cmp	r5, #0
   132f0:	mov	r1, #48	; 0x30
   132f4:	ldr	r6, [r0]
   132f8:	mov	r4, r0
   132fc:	ldr	r0, [pc, #12]	; 13310 <close@plt+0x23d4>
   13300:	movne	r0, r5
   13304:	bl	141f0 <close@plt+0x32b4>
   13308:	str	r6, [r4]
   1330c:	pop	{r4, r5, r6, pc}
   13310:	andeq	r6, r2, r4, lsl #5
   13314:	ldr	r3, [pc, #12]	; 13328 <close@plt+0x23ec>
   13318:	cmp	r0, #0
   1331c:	moveq	r0, r3
   13320:	ldr	r0, [r0]
   13324:	bx	lr
   13328:	andeq	r6, r2, r4, lsl #5
   1332c:	ldr	r3, [pc, #12]	; 13340 <close@plt+0x2404>
   13330:	cmp	r0, #0
   13334:	moveq	r0, r3
   13338:	str	r1, [r0]
   1333c:	bx	lr
   13340:	andeq	r6, r2, r4, lsl #5
   13344:	ldr	r3, [pc, #52]	; 13380 <close@plt+0x2444>
   13348:	cmp	r0, #0
   1334c:	moveq	r0, r3
   13350:	add	r3, r0, #8
   13354:	push	{lr}		; (str lr, [sp, #-4]!)
   13358:	lsr	lr, r1, #5
   1335c:	and	r1, r1, #31
   13360:	ldr	ip, [r3, lr, lsl #2]
   13364:	lsr	r0, ip, r1
   13368:	eor	r2, r2, r0
   1336c:	and	r2, r2, #1
   13370:	and	r0, r0, #1
   13374:	eor	r1, ip, r2, lsl r1
   13378:	str	r1, [r3, lr, lsl #2]
   1337c:	pop	{pc}		; (ldr pc, [sp], #4)
   13380:	andeq	r6, r2, r4, lsl #5
   13384:	ldr	r3, [pc, #16]	; 1339c <close@plt+0x2460>
   13388:	cmp	r0, #0
   1338c:	movne	r3, r0
   13390:	ldr	r0, [r3, #4]
   13394:	str	r1, [r3, #4]
   13398:	bx	lr
   1339c:	andeq	r6, r2, r4, lsl #5
   133a0:	ldr	r3, [pc, #44]	; 133d4 <close@plt+0x2498>
   133a4:	cmp	r0, #0
   133a8:	moveq	r0, r3
   133ac:	mov	r3, #10
   133b0:	cmp	r2, #0
   133b4:	cmpne	r1, #0
   133b8:	str	r3, [r0]
   133bc:	bne	133c8 <close@plt+0x248c>
   133c0:	push	{r4, lr}
   133c4:	bl	10f24 <abort@plt>
   133c8:	str	r1, [r0, #40]	; 0x28
   133cc:	str	r2, [r0, #44]	; 0x2c
   133d0:	bx	lr
   133d4:	andeq	r6, r2, r4, lsl #5
   133d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   133dc:	sub	sp, sp, #24
   133e0:	mov	sl, r3
   133e4:	ldr	r4, [sp, #56]	; 0x38
   133e8:	ldr	r3, [pc, #100]	; 13454 <close@plt+0x2518>
   133ec:	cmp	r4, #0
   133f0:	moveq	r4, r3
   133f4:	mov	r7, r0
   133f8:	mov	r8, r1
   133fc:	mov	r9, r2
   13400:	bl	10e64 <__errno_location@plt>
   13404:	ldr	r3, [r4, #44]	; 0x2c
   13408:	mov	r2, r9
   1340c:	mov	r1, r8
   13410:	ldr	r6, [r0]
   13414:	str	r3, [sp, #16]
   13418:	ldr	r3, [r4, #40]	; 0x28
   1341c:	mov	r5, r0
   13420:	str	r3, [sp, #12]
   13424:	add	r3, r4, #8
   13428:	str	r3, [sp, #8]
   1342c:	ldr	r3, [r4, #4]
   13430:	mov	r0, r7
   13434:	str	r3, [sp, #4]
   13438:	ldr	r3, [r4]
   1343c:	str	r3, [sp]
   13440:	mov	r3, sl
   13444:	bl	12404 <close@plt+0x14c8>
   13448:	str	r6, [r5]
   1344c:	add	sp, sp, #24
   13450:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13454:	andeq	r6, r2, r4, lsl #5
   13458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1345c:	cmp	r3, #0
   13460:	sub	sp, sp, #44	; 0x2c
   13464:	ldr	r4, [pc, #188]	; 13528 <close@plt+0x25ec>
   13468:	mov	r6, r2
   1346c:	movne	r4, r3
   13470:	mov	sl, r1
   13474:	mov	r9, r0
   13478:	bl	10e64 <__errno_location@plt>
   1347c:	ldr	r5, [r4, #4]
   13480:	add	fp, r4, #8
   13484:	cmp	r6, #0
   13488:	orreq	r5, r5, #1
   1348c:	mov	r1, #0
   13490:	mov	r2, r9
   13494:	ldr	r3, [r0]
   13498:	mov	r8, r0
   1349c:	str	r3, [sp, #28]
   134a0:	ldr	r3, [r4, #44]	; 0x2c
   134a4:	mov	r0, r1
   134a8:	str	r3, [sp, #16]
   134ac:	ldr	r3, [r4, #40]	; 0x28
   134b0:	stmib	sp, {r5, fp}
   134b4:	str	r3, [sp, #12]
   134b8:	ldr	r3, [r4]
   134bc:	str	r3, [sp]
   134c0:	mov	r3, sl
   134c4:	bl	12404 <close@plt+0x14c8>
   134c8:	add	r1, r0, #1
   134cc:	mov	r7, r0
   134d0:	mov	r0, r1
   134d4:	str	r1, [sp, #36]	; 0x24
   134d8:	bl	13e14 <close@plt+0x2ed8>
   134dc:	ldr	r3, [r4, #44]	; 0x2c
   134e0:	mov	r2, r9
   134e4:	str	r3, [sp, #16]
   134e8:	ldr	r3, [r4, #40]	; 0x28
   134ec:	stmib	sp, {r5, fp}
   134f0:	str	r3, [sp, #12]
   134f4:	ldr	r3, [r4]
   134f8:	ldr	r1, [sp, #36]	; 0x24
   134fc:	str	r3, [sp]
   13500:	mov	r3, sl
   13504:	str	r0, [sp, #32]
   13508:	bl	12404 <close@plt+0x14c8>
   1350c:	ldr	r3, [sp, #28]
   13510:	cmp	r6, #0
   13514:	str	r3, [r8]
   13518:	ldr	r0, [sp, #32]
   1351c:	strne	r7, [r6]
   13520:	add	sp, sp, #44	; 0x2c
   13524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13528:	andeq	r6, r2, r4, lsl #5
   1352c:	mov	r3, r2
   13530:	mov	r2, #0
   13534:	b	13458 <close@plt+0x251c>
   13538:	push	{r4, r5, r6, r7, r8, lr}
   1353c:	mov	r6, #1
   13540:	ldr	r4, [pc, #104]	; 135b0 <close@plt+0x2674>
   13544:	ldr	r5, [r4]
   13548:	add	r7, r5, #12
   1354c:	ldr	r3, [r4, #4]
   13550:	add	r7, r7, #8
   13554:	cmp	r6, r3
   13558:	blt	135a0 <close@plt+0x2664>
   1355c:	ldr	r0, [r5, #4]
   13560:	ldr	r6, [pc, #76]	; 135b4 <close@plt+0x2678>
   13564:	cmp	r0, r6
   13568:	beq	1357c <close@plt+0x2640>
   1356c:	bl	14740 <close@plt+0x3804>
   13570:	mov	r3, #256	; 0x100
   13574:	str	r3, [r4, #8]
   13578:	str	r6, [r4, #12]
   1357c:	ldr	r6, [pc, #52]	; 135b8 <close@plt+0x267c>
   13580:	cmp	r5, r6
   13584:	beq	13594 <close@plt+0x2658>
   13588:	mov	r0, r5
   1358c:	bl	14740 <close@plt+0x3804>
   13590:	str	r6, [r4]
   13594:	mov	r3, #1
   13598:	str	r3, [r4, #4]
   1359c:	pop	{r4, r5, r6, r7, r8, pc}
   135a0:	ldr	r0, [r7, #-8]
   135a4:	bl	14740 <close@plt+0x3804>
   135a8:	add	r6, r6, #1
   135ac:	b	1354c <close@plt+0x2610>
   135b0:	strdeq	r6, [r2], -ip
   135b4:	andeq	r6, r2, r4, lsl #3
   135b8:	andeq	r6, r2, r4, lsl #2
   135bc:	ldr	r3, [pc, #4]	; 135c8 <close@plt+0x268c>
   135c0:	mvn	r2, #0
   135c4:	b	13138 <close@plt+0x21fc>
   135c8:	andeq	r6, r2, r4, lsl #5
   135cc:	ldr	r3, [pc]	; 135d4 <close@plt+0x2698>
   135d0:	b	13138 <close@plt+0x21fc>
   135d4:	andeq	r6, r2, r4, lsl #5
   135d8:	mov	r1, r0
   135dc:	mov	r0, #0
   135e0:	b	135bc <close@plt+0x2680>
   135e4:	mov	r2, r1
   135e8:	mov	r1, r0
   135ec:	mov	r0, #0
   135f0:	b	135cc <close@plt+0x2690>
   135f4:	push	{r4, r5, lr}
   135f8:	sub	sp, sp, #52	; 0x34
   135fc:	mov	r5, r2
   13600:	mov	r4, r0
   13604:	mov	r0, sp
   13608:	bl	122c0 <close@plt+0x1384>
   1360c:	mov	r3, sp
   13610:	mvn	r2, #0
   13614:	mov	r1, r5
   13618:	mov	r0, r4
   1361c:	bl	13138 <close@plt+0x21fc>
   13620:	add	sp, sp, #52	; 0x34
   13624:	pop	{r4, r5, pc}
   13628:	push	{r4, r5, r6, lr}
   1362c:	sub	sp, sp, #48	; 0x30
   13630:	mov	r5, r2
   13634:	mov	r6, r3
   13638:	mov	r4, r0
   1363c:	mov	r0, sp
   13640:	bl	122c0 <close@plt+0x1384>
   13644:	mov	r3, sp
   13648:	mov	r2, r6
   1364c:	mov	r1, r5
   13650:	mov	r0, r4
   13654:	bl	13138 <close@plt+0x21fc>
   13658:	add	sp, sp, #48	; 0x30
   1365c:	pop	{r4, r5, r6, pc}
   13660:	mov	r2, r1
   13664:	mov	r1, r0
   13668:	mov	r0, #0
   1366c:	b	135f4 <close@plt+0x26b8>
   13670:	mov	r3, r2
   13674:	mov	r2, r1
   13678:	mov	r1, r0
   1367c:	mov	r0, #0
   13680:	b	13628 <close@plt+0x26ec>
   13684:	push	{r4, r5, r6, lr}
   13688:	mov	r4, r0
   1368c:	ldr	lr, [pc, #80]	; 136e4 <close@plt+0x27a8>
   13690:	mov	r5, r1
   13694:	mov	r6, r2
   13698:	ldm	lr!, {r0, r1, r2, r3}
   1369c:	sub	sp, sp, #48	; 0x30
   136a0:	mov	ip, sp
   136a4:	stmia	ip!, {r0, r1, r2, r3}
   136a8:	ldm	lr!, {r0, r1, r2, r3}
   136ac:	stmia	ip!, {r0, r1, r2, r3}
   136b0:	ldm	lr, {r0, r1, r2, r3}
   136b4:	stm	ip, {r0, r1, r2, r3}
   136b8:	mov	r1, r6
   136bc:	mov	r2, #1
   136c0:	mov	r0, sp
   136c4:	bl	13344 <close@plt+0x2408>
   136c8:	mov	r3, sp
   136cc:	mov	r2, r5
   136d0:	mov	r1, r4
   136d4:	mov	r0, #0
   136d8:	bl	13138 <close@plt+0x21fc>
   136dc:	add	sp, sp, #48	; 0x30
   136e0:	pop	{r4, r5, r6, pc}
   136e4:	andeq	r6, r2, r4, lsl #5
   136e8:	mov	r2, r1
   136ec:	mvn	r1, #0
   136f0:	b	13684 <close@plt+0x2748>
   136f4:	mov	r1, #58	; 0x3a
   136f8:	b	136e8 <close@plt+0x27ac>
   136fc:	mov	r2, #58	; 0x3a
   13700:	b	13684 <close@plt+0x2748>
   13704:	push	{r4, r5, lr}
   13708:	sub	sp, sp, #100	; 0x64
   1370c:	mov	r4, r0
   13710:	mov	r0, sp
   13714:	mov	r5, r2
   13718:	bl	122c0 <close@plt+0x1384>
   1371c:	mov	ip, sp
   13720:	add	lr, sp, #48	; 0x30
   13724:	ldm	ip!, {r0, r1, r2, r3}
   13728:	stmia	lr!, {r0, r1, r2, r3}
   1372c:	ldm	ip!, {r0, r1, r2, r3}
   13730:	stmia	lr!, {r0, r1, r2, r3}
   13734:	ldm	ip, {r0, r1, r2, r3}
   13738:	stm	lr, {r0, r1, r2, r3}
   1373c:	mov	r2, #1
   13740:	mov	r1, #58	; 0x3a
   13744:	add	r0, sp, #48	; 0x30
   13748:	bl	13344 <close@plt+0x2408>
   1374c:	add	r3, sp, #48	; 0x30
   13750:	mvn	r2, #0
   13754:	mov	r1, r5
   13758:	mov	r0, r4
   1375c:	bl	13138 <close@plt+0x21fc>
   13760:	add	sp, sp, #100	; 0x64
   13764:	pop	{r4, r5, pc}
   13768:	push	{r4, r5, r6, r7, lr}
   1376c:	mov	r4, r0
   13770:	ldr	lr, [pc, #84]	; 137cc <close@plt+0x2890>
   13774:	mov	r6, r1
   13778:	mov	r7, r2
   1377c:	mov	r5, r3
   13780:	ldm	lr!, {r0, r1, r2, r3}
   13784:	sub	sp, sp, #52	; 0x34
   13788:	mov	ip, sp
   1378c:	stmia	ip!, {r0, r1, r2, r3}
   13790:	ldm	lr!, {r0, r1, r2, r3}
   13794:	stmia	ip!, {r0, r1, r2, r3}
   13798:	ldm	lr, {r0, r1, r2, r3}
   1379c:	stm	ip, {r0, r1, r2, r3}
   137a0:	mov	r2, r7
   137a4:	mov	r1, r6
   137a8:	mov	r0, sp
   137ac:	bl	133a0 <close@plt+0x2464>
   137b0:	mov	r3, sp
   137b4:	ldr	r2, [sp, #72]	; 0x48
   137b8:	mov	r1, r5
   137bc:	mov	r0, r4
   137c0:	bl	13138 <close@plt+0x21fc>
   137c4:	add	sp, sp, #52	; 0x34
   137c8:	pop	{r4, r5, r6, r7, pc}
   137cc:	andeq	r6, r2, r4, lsl #5
   137d0:	mvn	ip, #0
   137d4:	push	{r0, r1, r2, lr}
   137d8:	str	ip, [sp]
   137dc:	bl	13768 <close@plt+0x282c>
   137e0:	add	sp, sp, #12
   137e4:	pop	{pc}		; (ldr pc, [sp], #4)
   137e8:	mov	r3, r2
   137ec:	mov	r2, r1
   137f0:	mov	r1, r0
   137f4:	mov	r0, #0
   137f8:	b	137d0 <close@plt+0x2894>
   137fc:	push	{r0, r1, r2, lr}
   13800:	str	r3, [sp]
   13804:	mov	r3, r2
   13808:	mov	r2, r1
   1380c:	mov	r1, r0
   13810:	mov	r0, #0
   13814:	bl	13768 <close@plt+0x282c>
   13818:	add	sp, sp, #12
   1381c:	pop	{pc}		; (ldr pc, [sp], #4)
   13820:	ldr	r3, [pc]	; 13828 <close@plt+0x28ec>
   13824:	b	13138 <close@plt+0x21fc>
   13828:	andeq	r6, r2, ip, lsl #2
   1382c:	mov	r2, r1
   13830:	mov	r1, r0
   13834:	mov	r0, #0
   13838:	b	13820 <close@plt+0x28e4>
   1383c:	mvn	r2, #0
   13840:	b	13820 <close@plt+0x28e4>
   13844:	mov	r1, r0
   13848:	mov	r0, #0
   1384c:	b	1383c <close@plt+0x2900>
   13850:	push	{r4, r5, r6, lr}
   13854:	mov	r5, r1
   13858:	mov	r1, #0
   1385c:	mov	r4, r2
   13860:	bl	10ed0 <setlocale@plt>
   13864:	subs	r6, r0, #0
   13868:	bne	1387c <close@plt+0x2940>
   1386c:	cmp	r4, #0
   13870:	strbne	r6, [r5]
   13874:	mov	r0, #22
   13878:	pop	{r4, r5, r6, pc}
   1387c:	bl	10e58 <strlen@plt>
   13880:	cmp	r4, r0
   13884:	bls	138a0 <close@plt+0x2964>
   13888:	add	r2, r0, #1
   1388c:	mov	r1, r6
   13890:	mov	r0, r5
   13894:	bl	10d38 <memcpy@plt>
   13898:	mov	r0, #0
   1389c:	pop	{r4, r5, r6, pc}
   138a0:	cmp	r4, #0
   138a4:	beq	138c4 <close@plt+0x2988>
   138a8:	sub	r4, r4, #1
   138ac:	mov	r2, r4
   138b0:	mov	r1, r6
   138b4:	mov	r0, r5
   138b8:	bl	10d38 <memcpy@plt>
   138bc:	mov	r3, #0
   138c0:	strb	r3, [r5, r4]
   138c4:	mov	r0, #34	; 0x22
   138c8:	pop	{r4, r5, r6, pc}
   138cc:	mov	r1, #0
   138d0:	b	10ed0 <setlocale@plt>
   138d4:	mov	r2, #3
   138d8:	mov	r1, #0
   138dc:	b	1457c <close@plt+0x3640>
   138e0:	push	{r4, r5, r6, lr}
   138e4:	sub	sp, sp, #32
   138e8:	cmp	r1, #0
   138ec:	mov	r5, r0
   138f0:	ldr	r4, [sp, #48]	; 0x30
   138f4:	ldr	r6, [sp, #52]	; 0x34
   138f8:	beq	139ac <close@plt+0x2a70>
   138fc:	stm	sp, {r2, r3}
   13900:	mov	r3, r1
   13904:	ldr	r2, [pc, #860]	; 13c68 <close@plt+0x2d2c>
   13908:	mov	r1, #1
   1390c:	bl	10ea0 <__fprintf_chk@plt>
   13910:	mov	r2, #5
   13914:	ldr	r1, [pc, #848]	; 13c6c <close@plt+0x2d30>
   13918:	mov	r0, #0
   1391c:	bl	10d80 <dcgettext@plt>
   13920:	ldr	r3, [pc, #840]	; 13c70 <close@plt+0x2d34>
   13924:	ldr	r2, [pc, #840]	; 13c74 <close@plt+0x2d38>
   13928:	str	r3, [sp]
   1392c:	mov	r1, #1
   13930:	mov	r3, r0
   13934:	mov	r0, r5
   13938:	bl	10ea0 <__fprintf_chk@plt>
   1393c:	mov	r1, r5
   13940:	mov	r0, #10
   13944:	bl	10d68 <fputc_unlocked@plt>
   13948:	mov	r2, #5
   1394c:	ldr	r1, [pc, #804]	; 13c78 <close@plt+0x2d3c>
   13950:	mov	r0, #0
   13954:	bl	10d80 <dcgettext@plt>
   13958:	mov	r1, #1
   1395c:	ldr	r3, [pc, #792]	; 13c7c <close@plt+0x2d40>
   13960:	mov	r2, r0
   13964:	mov	r0, r5
   13968:	bl	10ea0 <__fprintf_chk@plt>
   1396c:	mov	r1, r5
   13970:	mov	r0, #10
   13974:	bl	10d68 <fputc_unlocked@plt>
   13978:	cmp	r6, #9
   1397c:	ldrls	pc, [pc, r6, lsl #2]
   13980:	b	13c5c <close@plt+0x2d20>
   13984:	muleq	r1, ip, sl
   13988:	andeq	r3, r1, r4, asr #19
   1398c:	strdeq	r3, [r1], -r0
   13990:	andeq	r3, r1, r4, lsr #20
   13994:	andeq	r3, r1, r0, ror #20
   13998:	andeq	r3, r1, r4, lsr #21
   1399c:	andeq	r3, r1, ip, ror #21
   139a0:	andeq	r3, r1, ip, lsr fp
   139a4:	muleq	r1, r4, fp
   139a8:	strdeq	r3, [r1], -r4
   139ac:	str	r3, [sp]
   139b0:	mov	r1, #1
   139b4:	mov	r3, r2
   139b8:	ldr	r2, [pc, #704]	; 13c80 <close@plt+0x2d44>
   139bc:	bl	10ea0 <__fprintf_chk@plt>
   139c0:	b	13910 <close@plt+0x29d4>
   139c4:	mov	r2, #5
   139c8:	ldr	r1, [pc, #692]	; 13c84 <close@plt+0x2d48>
   139cc:	mov	r0, #0
   139d0:	bl	10d80 <dcgettext@plt>
   139d4:	ldr	r3, [r4]
   139d8:	mov	r1, #1
   139dc:	mov	r2, r0
   139e0:	mov	r0, r5
   139e4:	add	sp, sp, #32
   139e8:	pop	{r4, r5, r6, lr}
   139ec:	b	10ea0 <__fprintf_chk@plt>
   139f0:	mov	r2, #5
   139f4:	ldr	r1, [pc, #652]	; 13c88 <close@plt+0x2d4c>
   139f8:	mov	r0, #0
   139fc:	bl	10d80 <dcgettext@plt>
   13a00:	ldr	r3, [r4, #4]
   13a04:	mov	r1, #1
   13a08:	str	r3, [sp, #48]	; 0x30
   13a0c:	ldr	r3, [r4]
   13a10:	mov	r2, r0
   13a14:	mov	r0, r5
   13a18:	add	sp, sp, #32
   13a1c:	pop	{r4, r5, r6, lr}
   13a20:	b	10ea0 <__fprintf_chk@plt>
   13a24:	mov	r2, #5
   13a28:	ldr	r1, [pc, #604]	; 13c8c <close@plt+0x2d50>
   13a2c:	mov	r0, #0
   13a30:	bl	10d80 <dcgettext@plt>
   13a34:	ldr	r3, [r4, #8]
   13a38:	mov	r1, #1
   13a3c:	str	r3, [sp, #52]	; 0x34
   13a40:	ldr	r3, [r4, #4]
   13a44:	str	r3, [sp, #48]	; 0x30
   13a48:	ldr	r3, [r4]
   13a4c:	mov	r2, r0
   13a50:	mov	r0, r5
   13a54:	add	sp, sp, #32
   13a58:	pop	{r4, r5, r6, lr}
   13a5c:	b	10ea0 <__fprintf_chk@plt>
   13a60:	mov	r2, #5
   13a64:	ldr	r1, [pc, #548]	; 13c90 <close@plt+0x2d54>
   13a68:	mov	r0, #0
   13a6c:	bl	10d80 <dcgettext@plt>
   13a70:	ldr	r3, [r4, #12]
   13a74:	mov	r1, #1
   13a78:	str	r3, [sp, #8]
   13a7c:	ldr	r3, [r4, #8]
   13a80:	str	r3, [sp, #4]
   13a84:	ldr	r3, [r4, #4]
   13a88:	str	r3, [sp]
   13a8c:	ldr	r3, [r4]
   13a90:	mov	r2, r0
   13a94:	mov	r0, r5
   13a98:	bl	10ea0 <__fprintf_chk@plt>
   13a9c:	add	sp, sp, #32
   13aa0:	pop	{r4, r5, r6, pc}
   13aa4:	mov	r2, #5
   13aa8:	ldr	r1, [pc, #484]	; 13c94 <close@plt+0x2d58>
   13aac:	mov	r0, #0
   13ab0:	bl	10d80 <dcgettext@plt>
   13ab4:	ldr	r3, [r4, #16]
   13ab8:	mov	r1, #1
   13abc:	str	r3, [sp, #12]
   13ac0:	ldr	r3, [r4, #12]
   13ac4:	str	r3, [sp, #8]
   13ac8:	ldr	r3, [r4, #8]
   13acc:	str	r3, [sp, #4]
   13ad0:	ldr	r3, [r4, #4]
   13ad4:	str	r3, [sp]
   13ad8:	ldr	r3, [r4]
   13adc:	mov	r2, r0
   13ae0:	mov	r0, r5
   13ae4:	bl	10ea0 <__fprintf_chk@plt>
   13ae8:	b	13a9c <close@plt+0x2b60>
   13aec:	mov	r2, #5
   13af0:	ldr	r1, [pc, #416]	; 13c98 <close@plt+0x2d5c>
   13af4:	mov	r0, #0
   13af8:	bl	10d80 <dcgettext@plt>
   13afc:	ldr	r3, [r4, #20]
   13b00:	mov	r1, #1
   13b04:	str	r3, [sp, #16]
   13b08:	ldr	r3, [r4, #16]
   13b0c:	str	r3, [sp, #12]
   13b10:	ldr	r3, [r4, #12]
   13b14:	str	r3, [sp, #8]
   13b18:	ldr	r3, [r4, #8]
   13b1c:	str	r3, [sp, #4]
   13b20:	ldr	r3, [r4, #4]
   13b24:	str	r3, [sp]
   13b28:	ldr	r3, [r4]
   13b2c:	mov	r2, r0
   13b30:	mov	r0, r5
   13b34:	bl	10ea0 <__fprintf_chk@plt>
   13b38:	b	13a9c <close@plt+0x2b60>
   13b3c:	mov	r2, #5
   13b40:	ldr	r1, [pc, #340]	; 13c9c <close@plt+0x2d60>
   13b44:	mov	r0, #0
   13b48:	bl	10d80 <dcgettext@plt>
   13b4c:	ldr	r3, [r4, #24]
   13b50:	mov	r1, #1
   13b54:	str	r3, [sp, #20]
   13b58:	ldr	r3, [r4, #20]
   13b5c:	str	r3, [sp, #16]
   13b60:	ldr	r3, [r4, #16]
   13b64:	str	r3, [sp, #12]
   13b68:	ldr	r3, [r4, #12]
   13b6c:	str	r3, [sp, #8]
   13b70:	ldr	r3, [r4, #8]
   13b74:	str	r3, [sp, #4]
   13b78:	ldr	r3, [r4, #4]
   13b7c:	str	r3, [sp]
   13b80:	ldr	r3, [r4]
   13b84:	mov	r2, r0
   13b88:	mov	r0, r5
   13b8c:	bl	10ea0 <__fprintf_chk@plt>
   13b90:	b	13a9c <close@plt+0x2b60>
   13b94:	mov	r2, #5
   13b98:	ldr	r1, [pc, #256]	; 13ca0 <close@plt+0x2d64>
   13b9c:	mov	r0, #0
   13ba0:	bl	10d80 <dcgettext@plt>
   13ba4:	ldr	r3, [r4, #28]
   13ba8:	mov	r1, #1
   13bac:	str	r3, [sp, #24]
   13bb0:	ldr	r3, [r4, #24]
   13bb4:	str	r3, [sp, #20]
   13bb8:	ldr	r3, [r4, #20]
   13bbc:	str	r3, [sp, #16]
   13bc0:	ldr	r3, [r4, #16]
   13bc4:	str	r3, [sp, #12]
   13bc8:	ldr	r3, [r4, #12]
   13bcc:	str	r3, [sp, #8]
   13bd0:	ldr	r3, [r4, #8]
   13bd4:	str	r3, [sp, #4]
   13bd8:	ldr	r3, [r4, #4]
   13bdc:	str	r3, [sp]
   13be0:	ldr	r3, [r4]
   13be4:	mov	r2, r0
   13be8:	mov	r0, r5
   13bec:	bl	10ea0 <__fprintf_chk@plt>
   13bf0:	b	13a9c <close@plt+0x2b60>
   13bf4:	ldr	r1, [pc, #168]	; 13ca4 <close@plt+0x2d68>
   13bf8:	mov	r2, #5
   13bfc:	mov	r0, #0
   13c00:	bl	10d80 <dcgettext@plt>
   13c04:	ldr	r3, [r4, #32]
   13c08:	mov	r1, #1
   13c0c:	str	r3, [sp, #28]
   13c10:	ldr	r3, [r4, #28]
   13c14:	str	r3, [sp, #24]
   13c18:	ldr	r3, [r4, #24]
   13c1c:	str	r3, [sp, #20]
   13c20:	ldr	r3, [r4, #20]
   13c24:	str	r3, [sp, #16]
   13c28:	ldr	r3, [r4, #16]
   13c2c:	str	r3, [sp, #12]
   13c30:	ldr	r3, [r4, #12]
   13c34:	str	r3, [sp, #8]
   13c38:	ldr	r3, [r4, #8]
   13c3c:	str	r3, [sp, #4]
   13c40:	ldr	r3, [r4, #4]
   13c44:	str	r3, [sp]
   13c48:	ldr	r3, [r4]
   13c4c:	mov	r2, r0
   13c50:	mov	r0, r5
   13c54:	bl	10ea0 <__fprintf_chk@plt>
   13c58:	b	13a9c <close@plt+0x2b60>
   13c5c:	mov	r2, #5
   13c60:	ldr	r1, [pc, #64]	; 13ca8 <close@plt+0x2d6c>
   13c64:	b	13bfc <close@plt+0x2cc0>
   13c68:	andeq	r5, r1, r9, asr r9
   13c6c:	andeq	r5, r1, ip, ror #18
   13c70:	andeq	r0, r0, r6, ror #15
   13c74:	andeq	r5, r1, sl, lsr ip
   13c78:	andeq	r5, r1, r0, ror r9
   13c7c:	andeq	r5, r1, fp, lsl sl
   13c80:	andeq	r5, r1, r5, ror #18
   13c84:	andeq	r5, r1, sp, lsr sl
   13c88:	andeq	r5, r1, sp, asr #20
   13c8c:	andeq	r5, r1, r4, ror #20
   13c90:	andeq	r5, r1, r0, lsl #21
   13c94:	andeq	r5, r1, r0, lsr #21
   13c98:	andeq	r5, r1, r4, asr #21
   13c9c:	andeq	r5, r1, ip, ror #21
   13ca0:	andeq	r5, r1, r8, lsl fp
   13ca4:	andeq	r5, r1, r8, asr #22
   13ca8:	andeq	r5, r1, ip, ror fp
   13cac:	push	{r0, r1, r4, lr}
   13cb0:	mov	ip, #0
   13cb4:	ldr	lr, [sp, #16]
   13cb8:	ldr	r4, [lr, ip, lsl #2]
   13cbc:	cmp	r4, #0
   13cc0:	bne	13cd8 <close@plt+0x2d9c>
   13cc4:	str	ip, [sp, #4]
   13cc8:	str	lr, [sp]
   13ccc:	bl	138e0 <close@plt+0x29a4>
   13cd0:	add	sp, sp, #8
   13cd4:	pop	{r4, pc}
   13cd8:	add	ip, ip, #1
   13cdc:	b	13cb8 <close@plt+0x2d7c>
   13ce0:	push	{r4, r5, lr}
   13ce4:	sub	sp, sp, #52	; 0x34
   13ce8:	mov	ip, #0
   13cec:	ldr	r5, [sp, #64]	; 0x40
   13cf0:	add	lr, sp, #8
   13cf4:	ldr	r4, [r5, ip, lsl #2]
   13cf8:	cmp	r4, #0
   13cfc:	str	r4, [lr, ip, lsl #2]
   13d00:	beq	13d10 <close@plt+0x2dd4>
   13d04:	add	ip, ip, #1
   13d08:	cmp	ip, #10
   13d0c:	bne	13cf4 <close@plt+0x2db8>
   13d10:	str	ip, [sp, #4]
   13d14:	str	lr, [sp]
   13d18:	bl	138e0 <close@plt+0x29a4>
   13d1c:	add	sp, sp, #52	; 0x34
   13d20:	pop	{r4, r5, pc}
   13d24:	push	{r3}		; (str r3, [sp, #-4]!)
   13d28:	push	{r0, r1, r2, r3, lr}
   13d2c:	add	r3, sp, #24
   13d30:	str	r3, [sp, #12]
   13d34:	str	r3, [sp]
   13d38:	ldr	r3, [sp, #20]
   13d3c:	bl	13ce0 <close@plt+0x2da4>
   13d40:	add	sp, sp, #16
   13d44:	pop	{lr}		; (ldr lr, [sp], #4)
   13d48:	add	sp, sp, #4
   13d4c:	bx	lr
   13d50:	ldr	r3, [pc, #116]	; 13dcc <close@plt+0x2e90>
   13d54:	push	{r4, lr}
   13d58:	mov	r0, #10
   13d5c:	ldr	r1, [r3]
   13d60:	bl	10d68 <fputc_unlocked@plt>
   13d64:	mov	r2, #5
   13d68:	ldr	r1, [pc, #96]	; 13dd0 <close@plt+0x2e94>
   13d6c:	mov	r0, #0
   13d70:	bl	10d80 <dcgettext@plt>
   13d74:	ldr	r2, [pc, #88]	; 13dd4 <close@plt+0x2e98>
   13d78:	mov	r1, r0
   13d7c:	mov	r0, #1
   13d80:	bl	10e88 <__printf_chk@plt>
   13d84:	mov	r2, #5
   13d88:	ldr	r1, [pc, #72]	; 13dd8 <close@plt+0x2e9c>
   13d8c:	mov	r0, #0
   13d90:	bl	10d80 <dcgettext@plt>
   13d94:	ldr	r3, [pc, #64]	; 13ddc <close@plt+0x2ea0>
   13d98:	ldr	r2, [pc, #64]	; 13de0 <close@plt+0x2ea4>
   13d9c:	mov	r1, r0
   13da0:	mov	r0, #1
   13da4:	bl	10e88 <__printf_chk@plt>
   13da8:	mov	r2, #5
   13dac:	ldr	r1, [pc, #48]	; 13de4 <close@plt+0x2ea8>
   13db0:	mov	r0, #0
   13db4:	bl	10d80 <dcgettext@plt>
   13db8:	ldr	r2, [pc, #40]	; 13de8 <close@plt+0x2eac>
   13dbc:	pop	{r4, lr}
   13dc0:	mov	r1, r0
   13dc4:	mov	r0, #1
   13dc8:	b	10e88 <__printf_chk@plt>
   13dcc:	andeq	r6, r2, ip, asr r1
   13dd0:			; <UNDEFINED> instruction: 0x00015bb8
   13dd4:	andeq	r5, r1, ip, asr #23
   13dd8:	andeq	r5, r1, r2, ror #23
   13ddc:	strdeq	r5, [r1], -r4
   13de0:	andeq	r5, r1, ip, lsl r6
   13de4:	strdeq	r5, [r1], -r6
   13de8:	andeq	r5, r1, sp, lsl ip
   13dec:	push	{r4, lr}
   13df0:	bl	14470 <close@plt+0x3534>
   13df4:	cmp	r0, #0
   13df8:	popne	{r4, pc}
   13dfc:	bl	14280 <close@plt+0x3344>
   13e00:	push	{r4, lr}
   13e04:	bl	14470 <close@plt+0x3534>
   13e08:	cmp	r0, #0
   13e0c:	popne	{r4, pc}
   13e10:	bl	14280 <close@plt+0x3344>
   13e14:	b	13dec <close@plt+0x2eb0>
   13e18:	push	{r4, r5, r6, lr}
   13e1c:	mov	r5, r0
   13e20:	mov	r4, r1
   13e24:	bl	144b0 <close@plt+0x3574>
   13e28:	cmp	r0, #0
   13e2c:	popne	{r4, r5, r6, pc}
   13e30:	adds	r4, r4, #0
   13e34:	movne	r4, #1
   13e38:	cmp	r5, #0
   13e3c:	orreq	r4, r4, #1
   13e40:	cmp	r4, #0
   13e44:	popeq	{r4, r5, r6, pc}
   13e48:	bl	14280 <close@plt+0x3344>
   13e4c:	push	{r4, lr}
   13e50:	cmp	r1, #0
   13e54:	orreq	r1, r1, #1
   13e58:	bl	144b0 <close@plt+0x3574>
   13e5c:	cmp	r0, #0
   13e60:	popne	{r4, pc}
   13e64:	bl	14280 <close@plt+0x3344>
   13e68:	push	{r4, r5, r6, lr}
   13e6c:	mov	r6, r0
   13e70:	mov	r5, r1
   13e74:	mov	r4, r2
   13e78:	bl	1496c <close@plt+0x3a30>
   13e7c:	cmp	r0, #0
   13e80:	popne	{r4, r5, r6, pc}
   13e84:	cmp	r6, #0
   13e88:	beq	13e98 <close@plt+0x2f5c>
   13e8c:	cmp	r5, #0
   13e90:	cmpne	r4, #0
   13e94:	popeq	{r4, r5, r6, pc}
   13e98:	bl	14280 <close@plt+0x3344>
   13e9c:	b	13e68 <close@plt+0x2f2c>
   13ea0:	cmp	r2, #0
   13ea4:	cmpne	r1, #0
   13ea8:	moveq	r2, #1
   13eac:	moveq	r1, r2
   13eb0:	push	{r4, lr}
   13eb4:	bl	1496c <close@plt+0x3a30>
   13eb8:	cmp	r0, #0
   13ebc:	popne	{r4, pc}
   13ec0:	bl	14280 <close@plt+0x3344>
   13ec4:	mov	r2, r1
   13ec8:	mov	r1, r0
   13ecc:	mov	r0, #0
   13ed0:	b	13e68 <close@plt+0x2f2c>
   13ed4:	mov	r2, r1
   13ed8:	mov	r1, r0
   13edc:	mov	r0, #0
   13ee0:	b	13ea0 <close@plt+0x2f64>
   13ee4:	push	{r4, r5, r6, r7, r8, lr}
   13ee8:	subs	r7, r0, #0
   13eec:	mov	r5, r1
   13ef0:	mov	r6, r2
   13ef4:	ldr	r4, [r1]
   13ef8:	bne	13f34 <close@plt+0x2ff8>
   13efc:	cmp	r4, #0
   13f00:	bne	13f1c <close@plt+0x2fe0>
   13f04:	mov	r1, r2
   13f08:	mov	r0, #64	; 0x40
   13f0c:	bl	149b8 <close@plt+0x3a7c>
   13f10:	cmp	r0, #0
   13f14:	movne	r4, r0
   13f18:	addeq	r4, r0, #1
   13f1c:	mov	r2, r6
   13f20:	mov	r1, r4
   13f24:	mov	r0, r7
   13f28:	bl	13e68 <close@plt+0x2f2c>
   13f2c:	str	r4, [r5]
   13f30:	pop	{r4, r5, r6, r7, r8, pc}
   13f34:	lsr	r2, r4, #1
   13f38:	add	r3, r2, #1
   13f3c:	mvn	r3, r3
   13f40:	cmp	r4, r3
   13f44:	addls	r4, r4, #1
   13f48:	addls	r4, r4, r2
   13f4c:	bls	13f1c <close@plt+0x2fe0>
   13f50:	bl	14280 <close@plt+0x3344>
   13f54:	mov	r2, #1
   13f58:	b	13ee4 <close@plt+0x2fa8>
   13f5c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f60:	mov	sl, r0
   13f64:	ldr	r8, [r1]
   13f68:	mov	fp, r1
   13f6c:	mov	r5, r2
   13f70:	asrs	r4, r8, #1
   13f74:	mov	r9, r3
   13f78:	ldr	r7, [sp, #48]	; 0x30
   13f7c:	bpl	14018 <close@plt+0x30dc>
   13f80:	rsb	r2, r4, #-2147483648	; 0x80000000
   13f84:	cmp	r8, r2
   13f88:	movge	r2, #0
   13f8c:	movlt	r2, #1
   13f90:	mvn	r3, r9
   13f94:	cmp	r2, #0
   13f98:	lsr	r3, r3, #31
   13f9c:	addeq	r4, r4, r8
   13fa0:	mvnne	r4, #-2147483648	; 0x80000000
   13fa4:	mov	r0, r3
   13fa8:	cmp	r9, r4
   13fac:	movge	r0, #0
   13fb0:	andlt	r0, r0, #1
   13fb4:	cmp	r0, #0
   13fb8:	str	r3, [sp, #4]
   13fbc:	bne	1418c <close@plt+0x3250>
   13fc0:	cmp	r7, #0
   13fc4:	bge	140d8 <close@plt+0x319c>
   13fc8:	cmp	r4, #0
   13fcc:	bge	14030 <close@plt+0x30f4>
   13fd0:	mov	r1, r7
   13fd4:	mvn	r0, #-2147483648	; 0x80000000
   13fd8:	bl	14bc4 <close@plt+0x3c88>
   13fdc:	cmp	r0, r4
   13fe0:	movle	r0, #0
   13fe4:	movgt	r0, #1
   13fe8:	cmp	r0, #0
   13fec:	mvnne	r6, #-2147483648	; 0x80000000
   13ff0:	beq	14040 <close@plt+0x3104>
   13ff4:	mov	r1, r7
   13ff8:	mov	r0, r6
   13ffc:	bl	14bc4 <close@plt+0x3c88>
   14000:	mov	r1, r7
   14004:	mov	r4, r0
   14008:	mov	r0, r6
   1400c:	bl	14de4 <close@plt+0x3ea8>
   14010:	sub	r1, r6, r1
   14014:	b	14050 <close@plt+0x3114>
   14018:	mvn	r2, #-2147483648	; 0x80000000
   1401c:	sub	r2, r2, r4
   14020:	cmp	r8, r2
   14024:	movle	r2, #0
   14028:	movgt	r2, #1
   1402c:	b	13f90 <close@plt+0x3054>
   14030:	cmn	r7, #1
   14034:	movne	r1, r7
   14038:	movne	r0, #-2147483648	; 0x80000000
   1403c:	bne	141a4 <close@plt+0x3268>
   14040:	mul	r1, r7, r4
   14044:	cmp	r1, #63	; 0x3f
   14048:	movle	r6, #64	; 0x40
   1404c:	ble	13ff4 <close@plt+0x30b8>
   14050:	cmp	sl, #0
   14054:	sub	r2, r4, r8
   14058:	streq	sl, [fp]
   1405c:	cmp	r2, r5
   14060:	bge	14134 <close@plt+0x31f8>
   14064:	cmp	r5, #0
   14068:	bge	14100 <close@plt+0x31c4>
   1406c:	rsb	r2, r5, #-2147483648	; 0x80000000
   14070:	cmp	r8, r2
   14074:	movge	r2, #0
   14078:	movlt	r2, #1
   1407c:	cmp	r2, #0
   14080:	bne	140d4 <close@plt+0x3198>
   14084:	ldr	r0, [sp, #4]
   14088:	add	r5, r8, r5
   1408c:	cmp	r9, r5
   14090:	movge	r0, #0
   14094:	andlt	r0, r0, #1
   14098:	cmp	r0, #0
   1409c:	mov	r4, r5
   140a0:	bne	140d4 <close@plt+0x3198>
   140a4:	cmp	r7, #0
   140a8:	bge	14148 <close@plt+0x320c>
   140ac:	cmp	r5, #0
   140b0:	bge	14120 <close@plt+0x31e4>
   140b4:	mov	r1, r7
   140b8:	mvn	r0, #-2147483648	; 0x80000000
   140bc:	bl	14bc4 <close@plt+0x3c88>
   140c0:	cmp	r5, r0
   140c4:	movge	r0, #0
   140c8:	movlt	r0, #1
   140cc:	cmp	r0, #0
   140d0:	beq	14130 <close@plt+0x31f4>
   140d4:	bl	14280 <close@plt+0x3344>
   140d8:	beq	14040 <close@plt+0x3104>
   140dc:	cmp	r4, #0
   140e0:	bge	1419c <close@plt+0x3260>
   140e4:	cmn	r4, #1
   140e8:	beq	14040 <close@plt+0x3104>
   140ec:	mov	r1, r4
   140f0:	mov	r0, #-2147483648	; 0x80000000
   140f4:	bl	14bc4 <close@plt+0x3c88>
   140f8:	cmp	r7, r0
   140fc:	b	13fe0 <close@plt+0x30a4>
   14100:	cmp	r8, #0
   14104:	blt	14084 <close@plt+0x3148>
   14108:	mvn	r2, #-2147483648	; 0x80000000
   1410c:	sub	r2, r2, r5
   14110:	cmp	r8, r2
   14114:	movle	r2, #0
   14118:	movgt	r2, #1
   1411c:	b	1407c <close@plt+0x3140>
   14120:	cmn	r7, #1
   14124:	movne	r1, r7
   14128:	movne	r0, #-2147483648	; 0x80000000
   1412c:	bne	14180 <close@plt+0x3244>
   14130:	mul	r1, r5, r7
   14134:	mov	r0, sl
   14138:	bl	13e18 <close@plt+0x2edc>
   1413c:	str	r4, [fp]
   14140:	add	sp, sp, #12
   14144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14148:	beq	14130 <close@plt+0x31f4>
   1414c:	cmp	r5, #0
   14150:	movge	r1, r7
   14154:	mvnge	r0, #-2147483648	; 0x80000000
   14158:	bge	14180 <close@plt+0x3244>
   1415c:	cmn	r5, #1
   14160:	beq	14130 <close@plt+0x31f4>
   14164:	mov	r1, r5
   14168:	mov	r0, #-2147483648	; 0x80000000
   1416c:	bl	14bc4 <close@plt+0x3c88>
   14170:	cmp	r7, r0
   14174:	movle	r0, #0
   14178:	movgt	r0, #1
   1417c:	b	140cc <close@plt+0x3190>
   14180:	bl	14bc4 <close@plt+0x3c88>
   14184:	cmp	r5, r0
   14188:	b	14174 <close@plt+0x3238>
   1418c:	cmp	r7, #0
   14190:	mov	r4, r9
   14194:	blt	14030 <close@plt+0x30f4>
   14198:	beq	14040 <close@plt+0x3104>
   1419c:	mov	r1, r7
   141a0:	mvn	r0, #-2147483648	; 0x80000000
   141a4:	bl	14bc4 <close@plt+0x3c88>
   141a8:	cmp	r0, r4
   141ac:	movge	r0, #0
   141b0:	movlt	r0, #1
   141b4:	b	13fe8 <close@plt+0x30ac>
   141b8:	push	{r4, lr}
   141bc:	bl	14428 <close@plt+0x34ec>
   141c0:	cmp	r0, #0
   141c4:	popne	{r4, pc}
   141c8:	bl	14280 <close@plt+0x3344>
   141cc:	mov	r1, #1
   141d0:	b	141b8 <close@plt+0x327c>
   141d4:	push	{r4, lr}
   141d8:	bl	14428 <close@plt+0x34ec>
   141dc:	cmp	r0, #0
   141e0:	popne	{r4, pc}
   141e4:	bl	14280 <close@plt+0x3344>
   141e8:	mov	r1, #1
   141ec:	b	141d4 <close@plt+0x3298>
   141f0:	push	{r4, r5, r6, lr}
   141f4:	mov	r4, r1
   141f8:	mov	r5, r0
   141fc:	mov	r0, r1
   14200:	bl	13dec <close@plt+0x2eb0>
   14204:	mov	r2, r4
   14208:	mov	r1, r5
   1420c:	pop	{r4, r5, r6, lr}
   14210:	b	10d38 <memcpy@plt>
   14214:	push	{r4, r5, r6, lr}
   14218:	mov	r4, r1
   1421c:	mov	r5, r0
   14220:	mov	r0, r1
   14224:	bl	13e00 <close@plt+0x2ec4>
   14228:	mov	r2, r4
   1422c:	mov	r1, r5
   14230:	pop	{r4, r5, r6, lr}
   14234:	b	10d38 <memcpy@plt>
   14238:	push	{r4, r5, r6, lr}
   1423c:	mov	r5, r0
   14240:	add	r0, r1, #1
   14244:	mov	r4, r1
   14248:	bl	13e00 <close@plt+0x2ec4>
   1424c:	mov	r2, #0
   14250:	mov	r1, r5
   14254:	strb	r2, [r0, r4]
   14258:	mov	r2, r4
   1425c:	pop	{r4, r5, r6, lr}
   14260:	b	10d38 <memcpy@plt>
   14264:	push	{r4, lr}
   14268:	mov	r4, r0
   1426c:	bl	10e58 <strlen@plt>
   14270:	add	r1, r0, #1
   14274:	mov	r0, r4
   14278:	pop	{r4, lr}
   1427c:	b	141f0 <close@plt+0x32b4>
   14280:	ldr	r3, [pc, #44]	; 142b4 <close@plt+0x3378>
   14284:	push	{r4, lr}
   14288:	mov	r2, #5
   1428c:	ldr	r1, [pc, #36]	; 142b8 <close@plt+0x337c>
   14290:	mov	r0, #0
   14294:	ldr	r4, [r3]
   14298:	bl	10d80 <dcgettext@plt>
   1429c:	ldr	r2, [pc, #24]	; 142bc <close@plt+0x3380>
   142a0:	mov	r1, #0
   142a4:	mov	r3, r0
   142a8:	mov	r0, r4
   142ac:	bl	10dec <error@plt>
   142b0:	bl	10f24 <abort@plt>
   142b4:	strdeq	r6, [r2], -r8
   142b8:	andeq	r5, r1, r9, ror #24
   142bc:	andeq	r5, r1, r3, asr r8
   142c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142c4:	mov	r4, r0
   142c8:	mov	r6, r1
   142cc:	mov	r9, r2
   142d0:	ldr	r1, [pc, #164]	; 1437c <close@plt+0x3440>
   142d4:	mov	r2, #5
   142d8:	mov	r0, #0
   142dc:	mov	r7, r3
   142e0:	ldr	r8, [sp, #32]
   142e4:	bl	10d80 <dcgettext@plt>
   142e8:	mov	r1, r4
   142ec:	mov	r2, r0
   142f0:	mov	r0, #0
   142f4:	bl	10dec <error@plt>
   142f8:	mov	r2, #5
   142fc:	ldr	r1, [pc, #124]	; 14380 <close@plt+0x3444>
   14300:	mov	r0, #0
   14304:	bl	10d80 <dcgettext@plt>
   14308:	mov	r1, #0
   1430c:	mov	r2, r0
   14310:	mov	r0, r1
   14314:	bl	10dec <error@plt>
   14318:	ldr	r3, [pc, #100]	; 14384 <close@plt+0x3448>
   1431c:	mov	r2, #5
   14320:	ldr	r1, [pc, #96]	; 14388 <close@plt+0x344c>
   14324:	mov	r0, #0
   14328:	ldr	r4, [r3]
   1432c:	bl	10d80 <dcgettext@plt>
   14330:	mov	r3, r9
   14334:	mov	r2, r6
   14338:	mov	r1, #8
   1433c:	mov	r5, r0
   14340:	mov	r0, #0
   14344:	bl	13628 <close@plt+0x26ec>
   14348:	mov	r3, r8
   1434c:	mov	r2, r7
   14350:	mov	r1, #8
   14354:	mov	r6, r0
   14358:	mov	r0, #1
   1435c:	bl	13628 <close@plt+0x26ec>
   14360:	mov	r3, r6
   14364:	mov	r2, r5
   14368:	mov	r1, #0
   1436c:	str	r0, [sp, #32]
   14370:	mov	r0, r4
   14374:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14378:	b	10dec <error@plt>
   1437c:	andeq	r5, r1, sl, ror ip
   14380:	muleq	r1, r3, ip
   14384:	strdeq	r6, [r2], -r8
   14388:			; <UNDEFINED> instruction: 0x00015cbe
   1438c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14390:	mov	r6, r1
   14394:	mov	r7, r2
   14398:	mov	r8, r3
   1439c:	mov	r5, r0
   143a0:	bl	1489c <close@plt+0x3960>
   143a4:	mov	r4, r0
   143a8:	bl	10e64 <__errno_location@plt>
   143ac:	ldr	r0, [r0]
   143b0:	cmp	r0, #0
   143b4:	beq	143cc <close@plt+0x3490>
   143b8:	str	r8, [sp]
   143bc:	mov	r3, r7
   143c0:	mov	r2, r6
   143c4:	mov	r1, r5
   143c8:	bl	142c0 <close@plt+0x3384>
   143cc:	mov	r0, r4
   143d0:	add	sp, sp, #8
   143d4:	pop	{r4, r5, r6, r7, r8, pc}
   143d8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   143dc:	mov	r7, r1
   143e0:	mov	r8, r2
   143e4:	mov	r4, r3
   143e8:	mov	r6, r0
   143ec:	bl	14914 <close@plt+0x39d8>
   143f0:	mov	r5, r0
   143f4:	bl	10e64 <__errno_location@plt>
   143f8:	ldr	r0, [r0]
   143fc:	cmp	r0, #0
   14400:	beq	1441c <close@plt+0x34e0>
   14404:	sub	r4, r4, #1
   14408:	str	r4, [sp]
   1440c:	mov	r3, r8
   14410:	sub	r2, r7, #1
   14414:	mov	r1, r6
   14418:	bl	142c0 <close@plt+0x3384>
   1441c:	mov	r0, r5
   14420:	add	sp, sp, #8
   14424:	pop	{r4, r5, r6, r7, r8, pc}
   14428:	cmp	r1, #0
   1442c:	cmpne	r0, #0
   14430:	moveq	r1, #1
   14434:	moveq	r0, r1
   14438:	umull	r2, r3, r0, r1
   1443c:	adds	r3, r3, #0
   14440:	movne	r3, #1
   14444:	cmp	r2, #0
   14448:	blt	14458 <close@plt+0x351c>
   1444c:	cmp	r3, #0
   14450:	bne	14458 <close@plt+0x351c>
   14454:	b	10cd8 <calloc@plt>
   14458:	push	{r4, lr}
   1445c:	bl	10e64 <__errno_location@plt>
   14460:	mov	r3, #12
   14464:	str	r3, [r0]
   14468:	mov	r0, #0
   1446c:	pop	{r4, pc}
   14470:	cmp	r0, #0
   14474:	mov	r3, #0
   14478:	moveq	r0, #1
   1447c:	adds	r3, r3, #0
   14480:	movne	r3, #1
   14484:	cmp	r0, #0
   14488:	blt	14498 <close@plt+0x355c>
   1448c:	cmp	r3, #0
   14490:	bne	14498 <close@plt+0x355c>
   14494:	b	10e04 <malloc@plt>
   14498:	push	{r4, lr}
   1449c:	bl	10e64 <__errno_location@plt>
   144a0:	mov	r3, #12
   144a4:	str	r3, [r0]
   144a8:	mov	r0, #0
   144ac:	pop	{r4, pc}
   144b0:	cmp	r0, #0
   144b4:	push	{r4, lr}
   144b8:	mov	r4, r1
   144bc:	bne	144cc <close@plt+0x3590>
   144c0:	mov	r0, r1
   144c4:	pop	{r4, lr}
   144c8:	b	14470 <close@plt+0x3534>
   144cc:	cmp	r1, #0
   144d0:	bne	144e0 <close@plt+0x35a4>
   144d4:	bl	14740 <close@plt+0x3804>
   144d8:	mov	r0, #0
   144dc:	pop	{r4, pc}
   144e0:	cmp	r1, #0
   144e4:	blt	144f4 <close@plt+0x35b8>
   144e8:	mov	r3, #0
   144ec:	cmp	r3, r3
   144f0:	beq	14504 <close@plt+0x35c8>
   144f4:	bl	10e64 <__errno_location@plt>
   144f8:	mov	r3, #12
   144fc:	str	r3, [r0]
   14500:	b	144d8 <close@plt+0x359c>
   14504:	pop	{r4, lr}
   14508:	b	10d8c <realloc@plt>
   1450c:	push	{r4, r5, r6, lr}
   14510:	mov	r4, r0
   14514:	bl	10dc8 <__fpending@plt>
   14518:	mov	r5, r0
   1451c:	mov	r0, r4
   14520:	bl	10dd4 <ferror_unlocked@plt>
   14524:	mov	r6, r0
   14528:	mov	r0, r4
   1452c:	bl	11dec <close@plt+0xeb0>
   14530:	cmp	r6, #0
   14534:	mov	r4, r0
   14538:	bne	14564 <close@plt+0x3628>
   1453c:	cmp	r0, #0
   14540:	beq	1455c <close@plt+0x3620>
   14544:	cmp	r5, #0
   14548:	bne	14574 <close@plt+0x3638>
   1454c:	bl	10e64 <__errno_location@plt>
   14550:	ldr	r4, [r0]
   14554:	subs	r4, r4, #9
   14558:	mvnne	r4, #0
   1455c:	mov	r0, r4
   14560:	pop	{r4, r5, r6, pc}
   14564:	cmp	r0, #0
   14568:	bne	14574 <close@plt+0x3638>
   1456c:	bl	10e64 <__errno_location@plt>
   14570:	str	r4, [r0]
   14574:	mvn	r4, #0
   14578:	b	1455c <close@plt+0x3620>
   1457c:	push	{r1, r2, r3}
   14580:	push	{r0, r1, r4, r5, r6, r7, lr}
   14584:	add	r2, sp, #32
   14588:	ldr	r1, [sp, #28]
   1458c:	str	r2, [sp, #4]
   14590:	cmp	r1, #0
   14594:	beq	145d8 <close@plt+0x369c>
   14598:	ldr	r3, [pc, #396]	; 1472c <close@plt+0x37f0>
   1459c:	mov	r6, r0
   145a0:	cmp	r1, r3
   145a4:	beq	145e4 <close@plt+0x36a8>
   145a8:	cmp	r1, #11
   145ac:	beq	145c8 <close@plt+0x368c>
   145b0:	bgt	146f4 <close@plt+0x37b8>
   145b4:	cmp	r1, #3
   145b8:	beq	145c8 <close@plt+0x368c>
   145bc:	bgt	146d0 <close@plt+0x3794>
   145c0:	cmp	r1, #1
   145c4:	bne	146dc <close@plt+0x37a0>
   145c8:	mov	r0, r6
   145cc:	bl	10ec4 <fcntl64@plt>
   145d0:	mov	r4, r0
   145d4:	b	14690 <close@plt+0x3754>
   145d8:	ldr	r2, [sp, #32]
   145dc:	bl	10ec4 <fcntl64@plt>
   145e0:	b	145d0 <close@plt+0x3694>
   145e4:	ldr	r5, [pc, #324]	; 14730 <close@plt+0x37f4>
   145e8:	add	r3, sp, #36	; 0x24
   145ec:	str	r3, [sp, #4]
   145f0:	ldr	r3, [r5]
   145f4:	ldr	r7, [r2]
   145f8:	cmp	r3, #0
   145fc:	mov	r2, r7
   14600:	blt	146a4 <close@plt+0x3768>
   14604:	bl	10ec4 <fcntl64@plt>
   14608:	subs	r4, r0, #0
   1460c:	bge	14620 <close@plt+0x36e4>
   14610:	bl	10e64 <__errno_location@plt>
   14614:	ldr	r3, [r0]
   14618:	cmp	r3, #22
   1461c:	beq	14670 <close@plt+0x3734>
   14620:	mov	r3, #1
   14624:	str	r3, [r5]
   14628:	cmp	r4, #0
   1462c:	blt	14690 <close@plt+0x3754>
   14630:	ldr	r5, [r5]
   14634:	cmn	r5, #1
   14638:	bne	14690 <close@plt+0x3754>
   1463c:	mov	r1, #1
   14640:	mov	r0, r4
   14644:	bl	10ec4 <fcntl64@plt>
   14648:	subs	r2, r0, #0
   1464c:	bge	146b4 <close@plt+0x3778>
   14650:	bl	10e64 <__errno_location@plt>
   14654:	ldr	r7, [r0]
   14658:	mov	r6, r0
   1465c:	mov	r0, r4
   14660:	bl	10f3c <close@plt>
   14664:	mov	r4, r5
   14668:	str	r7, [r6]
   1466c:	b	14690 <close@plt+0x3754>
   14670:	mov	r2, r7
   14674:	mov	r1, #0
   14678:	mov	r0, r6
   1467c:	bl	10ec4 <fcntl64@plt>
   14680:	subs	r4, r0, #0
   14684:	mvnge	r3, #0
   14688:	strge	r3, [r5]
   1468c:	bge	14630 <close@plt+0x36f4>
   14690:	mov	r0, r4
   14694:	add	sp, sp, #8
   14698:	pop	{r4, r5, r6, r7, lr}
   1469c:	add	sp, sp, #12
   146a0:	bx	lr
   146a4:	mov	r1, #0
   146a8:	bl	10ec4 <fcntl64@plt>
   146ac:	mov	r4, r0
   146b0:	b	14628 <close@plt+0x36ec>
   146b4:	orr	r2, r2, #1
   146b8:	mov	r1, #2
   146bc:	mov	r0, r4
   146c0:	bl	10ec4 <fcntl64@plt>
   146c4:	cmn	r0, #1
   146c8:	bne	14690 <close@plt+0x3754>
   146cc:	b	14650 <close@plt+0x3714>
   146d0:	cmp	r1, #8
   146d4:	beq	146dc <close@plt+0x37a0>
   146d8:	bgt	146ec <close@plt+0x37b0>
   146dc:	ldr	r3, [sp, #4]
   146e0:	mov	r0, r6
   146e4:	ldr	r2, [r3]
   146e8:	b	145dc <close@plt+0x36a0>
   146ec:	cmp	r1, #9
   146f0:	b	145c4 <close@plt+0x3688>
   146f4:	ldr	r2, [pc, #56]	; 14734 <close@plt+0x37f8>
   146f8:	cmp	r1, r2
   146fc:	bgt	14714 <close@plt+0x37d8>
   14700:	cmp	r1, r3
   14704:	ldrlt	r3, [pc, #44]	; 14738 <close@plt+0x37fc>
   14708:	bge	146dc <close@plt+0x37a0>
   1470c:	cmp	r1, r3
   14710:	b	145c4 <close@plt+0x3688>
   14714:	ldr	r3, [pc, #32]	; 1473c <close@plt+0x3800>
   14718:	cmp	r1, r3
   1471c:	beq	146dc <close@plt+0x37a0>
   14720:	blt	145c8 <close@plt+0x368c>
   14724:	add	r3, r3, #1
   14728:	b	1470c <close@plt+0x37d0>
   1472c:	andeq	r0, r0, r6, lsl #8
   14730:			; <UNDEFINED> instruction: 0x000262b4
   14734:	andeq	r0, r0, r7, lsl #8
   14738:	andeq	r0, r0, r1, lsl #8
   1473c:	andeq	r0, r0, r9, lsl #8
   14740:	push	{r0, r1, r2, r4, r5, lr}
   14744:	mov	r5, r0
   14748:	bl	10e64 <__errno_location@plt>
   1474c:	ldr	r3, [r0]
   14750:	mov	r4, r0
   14754:	str	r3, [sp]
   14758:	str	r3, [sp, #4]
   1475c:	mov	r3, #0
   14760:	str	r3, [r0]
   14764:	mov	r0, r5
   14768:	bl	10d20 <free@plt>
   1476c:	ldr	r3, [r4]
   14770:	add	r2, sp, #8
   14774:	cmp	r3, #0
   14778:	moveq	r3, #4
   1477c:	movne	r3, #0
   14780:	add	r3, r2, r3
   14784:	ldr	r3, [r3, #-8]
   14788:	str	r3, [r4]
   1478c:	add	sp, sp, #12
   14790:	pop	{r4, r5, pc}
   14794:	push	{r4, lr}
   14798:	mov	r0, #14
   1479c:	bl	10ee8 <nl_langinfo@plt>
   147a0:	ldr	r3, [pc, #24]	; 147c0 <close@plt+0x3884>
   147a4:	cmp	r0, #0
   147a8:	moveq	r0, r3
   147ac:	ldr	r3, [pc, #16]	; 147c4 <close@plt+0x3888>
   147b0:	ldrb	r2, [r0]
   147b4:	cmp	r2, #0
   147b8:	moveq	r0, r3
   147bc:	pop	{r4, pc}
   147c0:	andeq	r5, r1, r3, lsr r8
   147c4:	andeq	r5, r1, r3, ror #25
   147c8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   147cc:	subs	r5, r0, #0
   147d0:	addeq	r5, sp, #4
   147d4:	mov	r0, r5
   147d8:	mov	r7, r2
   147dc:	mov	r6, r1
   147e0:	bl	10de0 <mbrtowc@plt>
   147e4:	cmp	r7, #0
   147e8:	cmnne	r0, #3
   147ec:	mov	r4, r0
   147f0:	bls	1480c <close@plt+0x38d0>
   147f4:	mov	r0, #0
   147f8:	bl	1200c <close@plt+0x10d0>
   147fc:	cmp	r0, #0
   14800:	moveq	r4, #1
   14804:	ldrbeq	r3, [r6]
   14808:	streq	r3, [r5]
   1480c:	mov	r0, r4
   14810:	add	sp, sp, #12
   14814:	pop	{r4, r5, r6, r7, pc}
   14818:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1481c:	mov	r6, r0
   14820:	mov	r8, r1
   14824:	mov	r5, r2
   14828:	mov	r4, r3
   1482c:	bl	10e64 <__errno_location@plt>
   14830:	mov	sl, #0
   14834:	mov	r9, r0
   14838:	str	sl, [r9]
   1483c:	mov	r1, r5
   14840:	mov	r0, r6
   14844:	bl	10df8 <strcoll@plt>
   14848:	cmp	r0, #0
   1484c:	beq	14864 <close@plt+0x3928>
   14850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14854:	cmp	r4, #0
   14858:	bne	14838 <close@plt+0x38fc>
   1485c:	mov	r0, #1
   14860:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14864:	mov	r0, r6
   14868:	bl	10e58 <strlen@plt>
   1486c:	add	r7, r0, #1
   14870:	mov	r0, r5
   14874:	bl	10e58 <strlen@plt>
   14878:	subs	r8, r8, r7
   1487c:	add	r6, r6, r7
   14880:	add	r0, r0, #1
   14884:	add	r5, r5, r0
   14888:	sub	r4, r4, r0
   1488c:	bne	14854 <close@plt+0x3918>
   14890:	adds	r0, r4, #0
   14894:	mvnne	r0, #0
   14898:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1489c:	cmp	r1, r3
   148a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148a4:	mov	r7, r0
   148a8:	mov	r4, r1
   148ac:	mov	r6, r2
   148b0:	mov	r5, r3
   148b4:	bne	148dc <close@plt+0x39a0>
   148b8:	mov	r2, r1
   148bc:	mov	r1, r6
   148c0:	bl	10d5c <memcmp@plt>
   148c4:	subs	r8, r0, #0
   148c8:	bne	148dc <close@plt+0x39a0>
   148cc:	bl	10e64 <__errno_location@plt>
   148d0:	str	r8, [r0]
   148d4:	mov	r0, r8
   148d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148dc:	mov	r3, #0
   148e0:	ldrb	sl, [r7, r4]
   148e4:	ldrb	r9, [r6, r5]
   148e8:	mov	r2, r6
   148ec:	strb	r3, [r7, r4]
   148f0:	add	r1, r4, #1
   148f4:	strb	r3, [r6, r5]
   148f8:	mov	r0, r7
   148fc:	add	r3, r5, #1
   14900:	bl	14818 <close@plt+0x38dc>
   14904:	strb	sl, [r7, r4]
   14908:	strb	r9, [r6, r5]
   1490c:	mov	r8, r0
   14910:	b	148d4 <close@plt+0x3998>
   14914:	cmp	r1, r3
   14918:	push	{r4, r5, r6, r7, r8, lr}
   1491c:	mov	r8, r0
   14920:	mov	r4, r1
   14924:	mov	r6, r2
   14928:	mov	r7, r3
   1492c:	bne	14944 <close@plt+0x3a08>
   14930:	mov	r2, r1
   14934:	mov	r1, r6
   14938:	bl	10d5c <memcmp@plt>
   1493c:	subs	r5, r0, #0
   14940:	beq	1495c <close@plt+0x3a20>
   14944:	mov	r3, r7
   14948:	mov	r2, r6
   1494c:	mov	r1, r4
   14950:	mov	r0, r8
   14954:	pop	{r4, r5, r6, r7, r8, lr}
   14958:	b	14818 <close@plt+0x38dc>
   1495c:	bl	10e64 <__errno_location@plt>
   14960:	str	r5, [r0]
   14964:	mov	r0, r5
   14968:	pop	{r4, r5, r6, r7, r8, pc}
   1496c:	push	{r4, r5, r6, lr}
   14970:	subs	r4, r2, #0
   14974:	mov	r6, r0
   14978:	mov	r5, r1
   1497c:	beq	14994 <close@plt+0x3a58>
   14980:	mov	r1, r4
   14984:	mvn	r0, #0
   14988:	bl	149b8 <close@plt+0x3a7c>
   1498c:	cmp	r0, r5
   14990:	bcc	149a4 <close@plt+0x3a68>
   14994:	mul	r1, r5, r4
   14998:	mov	r0, r6
   1499c:	pop	{r4, r5, r6, lr}
   149a0:	b	144b0 <close@plt+0x3574>
   149a4:	bl	10e64 <__errno_location@plt>
   149a8:	mov	r3, #12
   149ac:	str	r3, [r0]
   149b0:	mov	r0, #0
   149b4:	pop	{r4, r5, r6, pc}
   149b8:	subs	r2, r1, #1
   149bc:	bxeq	lr
   149c0:	bcc	14b98 <close@plt+0x3c5c>
   149c4:	cmp	r0, r1
   149c8:	bls	14b7c <close@plt+0x3c40>
   149cc:	tst	r1, r2
   149d0:	beq	14b88 <close@plt+0x3c4c>
   149d4:	clz	r3, r0
   149d8:	clz	r2, r1
   149dc:	sub	r3, r2, r3
   149e0:	rsbs	r3, r3, #31
   149e4:	addne	r3, r3, r3, lsl #1
   149e8:	mov	r2, #0
   149ec:	addne	pc, pc, r3, lsl #2
   149f0:	nop			; (mov r0, r0)
   149f4:	cmp	r0, r1, lsl #31
   149f8:	adc	r2, r2, r2
   149fc:	subcs	r0, r0, r1, lsl #31
   14a00:	cmp	r0, r1, lsl #30
   14a04:	adc	r2, r2, r2
   14a08:	subcs	r0, r0, r1, lsl #30
   14a0c:	cmp	r0, r1, lsl #29
   14a10:	adc	r2, r2, r2
   14a14:	subcs	r0, r0, r1, lsl #29
   14a18:	cmp	r0, r1, lsl #28
   14a1c:	adc	r2, r2, r2
   14a20:	subcs	r0, r0, r1, lsl #28
   14a24:	cmp	r0, r1, lsl #27
   14a28:	adc	r2, r2, r2
   14a2c:	subcs	r0, r0, r1, lsl #27
   14a30:	cmp	r0, r1, lsl #26
   14a34:	adc	r2, r2, r2
   14a38:	subcs	r0, r0, r1, lsl #26
   14a3c:	cmp	r0, r1, lsl #25
   14a40:	adc	r2, r2, r2
   14a44:	subcs	r0, r0, r1, lsl #25
   14a48:	cmp	r0, r1, lsl #24
   14a4c:	adc	r2, r2, r2
   14a50:	subcs	r0, r0, r1, lsl #24
   14a54:	cmp	r0, r1, lsl #23
   14a58:	adc	r2, r2, r2
   14a5c:	subcs	r0, r0, r1, lsl #23
   14a60:	cmp	r0, r1, lsl #22
   14a64:	adc	r2, r2, r2
   14a68:	subcs	r0, r0, r1, lsl #22
   14a6c:	cmp	r0, r1, lsl #21
   14a70:	adc	r2, r2, r2
   14a74:	subcs	r0, r0, r1, lsl #21
   14a78:	cmp	r0, r1, lsl #20
   14a7c:	adc	r2, r2, r2
   14a80:	subcs	r0, r0, r1, lsl #20
   14a84:	cmp	r0, r1, lsl #19
   14a88:	adc	r2, r2, r2
   14a8c:	subcs	r0, r0, r1, lsl #19
   14a90:	cmp	r0, r1, lsl #18
   14a94:	adc	r2, r2, r2
   14a98:	subcs	r0, r0, r1, lsl #18
   14a9c:	cmp	r0, r1, lsl #17
   14aa0:	adc	r2, r2, r2
   14aa4:	subcs	r0, r0, r1, lsl #17
   14aa8:	cmp	r0, r1, lsl #16
   14aac:	adc	r2, r2, r2
   14ab0:	subcs	r0, r0, r1, lsl #16
   14ab4:	cmp	r0, r1, lsl #15
   14ab8:	adc	r2, r2, r2
   14abc:	subcs	r0, r0, r1, lsl #15
   14ac0:	cmp	r0, r1, lsl #14
   14ac4:	adc	r2, r2, r2
   14ac8:	subcs	r0, r0, r1, lsl #14
   14acc:	cmp	r0, r1, lsl #13
   14ad0:	adc	r2, r2, r2
   14ad4:	subcs	r0, r0, r1, lsl #13
   14ad8:	cmp	r0, r1, lsl #12
   14adc:	adc	r2, r2, r2
   14ae0:	subcs	r0, r0, r1, lsl #12
   14ae4:	cmp	r0, r1, lsl #11
   14ae8:	adc	r2, r2, r2
   14aec:	subcs	r0, r0, r1, lsl #11
   14af0:	cmp	r0, r1, lsl #10
   14af4:	adc	r2, r2, r2
   14af8:	subcs	r0, r0, r1, lsl #10
   14afc:	cmp	r0, r1, lsl #9
   14b00:	adc	r2, r2, r2
   14b04:	subcs	r0, r0, r1, lsl #9
   14b08:	cmp	r0, r1, lsl #8
   14b0c:	adc	r2, r2, r2
   14b10:	subcs	r0, r0, r1, lsl #8
   14b14:	cmp	r0, r1, lsl #7
   14b18:	adc	r2, r2, r2
   14b1c:	subcs	r0, r0, r1, lsl #7
   14b20:	cmp	r0, r1, lsl #6
   14b24:	adc	r2, r2, r2
   14b28:	subcs	r0, r0, r1, lsl #6
   14b2c:	cmp	r0, r1, lsl #5
   14b30:	adc	r2, r2, r2
   14b34:	subcs	r0, r0, r1, lsl #5
   14b38:	cmp	r0, r1, lsl #4
   14b3c:	adc	r2, r2, r2
   14b40:	subcs	r0, r0, r1, lsl #4
   14b44:	cmp	r0, r1, lsl #3
   14b48:	adc	r2, r2, r2
   14b4c:	subcs	r0, r0, r1, lsl #3
   14b50:	cmp	r0, r1, lsl #2
   14b54:	adc	r2, r2, r2
   14b58:	subcs	r0, r0, r1, lsl #2
   14b5c:	cmp	r0, r1, lsl #1
   14b60:	adc	r2, r2, r2
   14b64:	subcs	r0, r0, r1, lsl #1
   14b68:	cmp	r0, r1
   14b6c:	adc	r2, r2, r2
   14b70:	subcs	r0, r0, r1
   14b74:	mov	r0, r2
   14b78:	bx	lr
   14b7c:	moveq	r0, #1
   14b80:	movne	r0, #0
   14b84:	bx	lr
   14b88:	clz	r2, r1
   14b8c:	rsb	r2, r2, #31
   14b90:	lsr	r0, r0, r2
   14b94:	bx	lr
   14b98:	cmp	r0, #0
   14b9c:	mvnne	r0, #0
   14ba0:	b	14e40 <close@plt+0x3f04>
   14ba4:	cmp	r1, #0
   14ba8:	beq	14b98 <close@plt+0x3c5c>
   14bac:	push	{r0, r1, lr}
   14bb0:	bl	149b8 <close@plt+0x3a7c>
   14bb4:	pop	{r1, r2, lr}
   14bb8:	mul	r3, r2, r0
   14bbc:	sub	r1, r1, r3
   14bc0:	bx	lr
   14bc4:	cmp	r1, #0
   14bc8:	beq	14dd4 <close@plt+0x3e98>
   14bcc:	eor	ip, r0, r1
   14bd0:	rsbmi	r1, r1, #0
   14bd4:	subs	r2, r1, #1
   14bd8:	beq	14da0 <close@plt+0x3e64>
   14bdc:	movs	r3, r0
   14be0:	rsbmi	r3, r0, #0
   14be4:	cmp	r3, r1
   14be8:	bls	14dac <close@plt+0x3e70>
   14bec:	tst	r1, r2
   14bf0:	beq	14dbc <close@plt+0x3e80>
   14bf4:	clz	r2, r3
   14bf8:	clz	r0, r1
   14bfc:	sub	r2, r0, r2
   14c00:	rsbs	r2, r2, #31
   14c04:	addne	r2, r2, r2, lsl #1
   14c08:	mov	r0, #0
   14c0c:	addne	pc, pc, r2, lsl #2
   14c10:	nop			; (mov r0, r0)
   14c14:	cmp	r3, r1, lsl #31
   14c18:	adc	r0, r0, r0
   14c1c:	subcs	r3, r3, r1, lsl #31
   14c20:	cmp	r3, r1, lsl #30
   14c24:	adc	r0, r0, r0
   14c28:	subcs	r3, r3, r1, lsl #30
   14c2c:	cmp	r3, r1, lsl #29
   14c30:	adc	r0, r0, r0
   14c34:	subcs	r3, r3, r1, lsl #29
   14c38:	cmp	r3, r1, lsl #28
   14c3c:	adc	r0, r0, r0
   14c40:	subcs	r3, r3, r1, lsl #28
   14c44:	cmp	r3, r1, lsl #27
   14c48:	adc	r0, r0, r0
   14c4c:	subcs	r3, r3, r1, lsl #27
   14c50:	cmp	r3, r1, lsl #26
   14c54:	adc	r0, r0, r0
   14c58:	subcs	r3, r3, r1, lsl #26
   14c5c:	cmp	r3, r1, lsl #25
   14c60:	adc	r0, r0, r0
   14c64:	subcs	r3, r3, r1, lsl #25
   14c68:	cmp	r3, r1, lsl #24
   14c6c:	adc	r0, r0, r0
   14c70:	subcs	r3, r3, r1, lsl #24
   14c74:	cmp	r3, r1, lsl #23
   14c78:	adc	r0, r0, r0
   14c7c:	subcs	r3, r3, r1, lsl #23
   14c80:	cmp	r3, r1, lsl #22
   14c84:	adc	r0, r0, r0
   14c88:	subcs	r3, r3, r1, lsl #22
   14c8c:	cmp	r3, r1, lsl #21
   14c90:	adc	r0, r0, r0
   14c94:	subcs	r3, r3, r1, lsl #21
   14c98:	cmp	r3, r1, lsl #20
   14c9c:	adc	r0, r0, r0
   14ca0:	subcs	r3, r3, r1, lsl #20
   14ca4:	cmp	r3, r1, lsl #19
   14ca8:	adc	r0, r0, r0
   14cac:	subcs	r3, r3, r1, lsl #19
   14cb0:	cmp	r3, r1, lsl #18
   14cb4:	adc	r0, r0, r0
   14cb8:	subcs	r3, r3, r1, lsl #18
   14cbc:	cmp	r3, r1, lsl #17
   14cc0:	adc	r0, r0, r0
   14cc4:	subcs	r3, r3, r1, lsl #17
   14cc8:	cmp	r3, r1, lsl #16
   14ccc:	adc	r0, r0, r0
   14cd0:	subcs	r3, r3, r1, lsl #16
   14cd4:	cmp	r3, r1, lsl #15
   14cd8:	adc	r0, r0, r0
   14cdc:	subcs	r3, r3, r1, lsl #15
   14ce0:	cmp	r3, r1, lsl #14
   14ce4:	adc	r0, r0, r0
   14ce8:	subcs	r3, r3, r1, lsl #14
   14cec:	cmp	r3, r1, lsl #13
   14cf0:	adc	r0, r0, r0
   14cf4:	subcs	r3, r3, r1, lsl #13
   14cf8:	cmp	r3, r1, lsl #12
   14cfc:	adc	r0, r0, r0
   14d00:	subcs	r3, r3, r1, lsl #12
   14d04:	cmp	r3, r1, lsl #11
   14d08:	adc	r0, r0, r0
   14d0c:	subcs	r3, r3, r1, lsl #11
   14d10:	cmp	r3, r1, lsl #10
   14d14:	adc	r0, r0, r0
   14d18:	subcs	r3, r3, r1, lsl #10
   14d1c:	cmp	r3, r1, lsl #9
   14d20:	adc	r0, r0, r0
   14d24:	subcs	r3, r3, r1, lsl #9
   14d28:	cmp	r3, r1, lsl #8
   14d2c:	adc	r0, r0, r0
   14d30:	subcs	r3, r3, r1, lsl #8
   14d34:	cmp	r3, r1, lsl #7
   14d38:	adc	r0, r0, r0
   14d3c:	subcs	r3, r3, r1, lsl #7
   14d40:	cmp	r3, r1, lsl #6
   14d44:	adc	r0, r0, r0
   14d48:	subcs	r3, r3, r1, lsl #6
   14d4c:	cmp	r3, r1, lsl #5
   14d50:	adc	r0, r0, r0
   14d54:	subcs	r3, r3, r1, lsl #5
   14d58:	cmp	r3, r1, lsl #4
   14d5c:	adc	r0, r0, r0
   14d60:	subcs	r3, r3, r1, lsl #4
   14d64:	cmp	r3, r1, lsl #3
   14d68:	adc	r0, r0, r0
   14d6c:	subcs	r3, r3, r1, lsl #3
   14d70:	cmp	r3, r1, lsl #2
   14d74:	adc	r0, r0, r0
   14d78:	subcs	r3, r3, r1, lsl #2
   14d7c:	cmp	r3, r1, lsl #1
   14d80:	adc	r0, r0, r0
   14d84:	subcs	r3, r3, r1, lsl #1
   14d88:	cmp	r3, r1
   14d8c:	adc	r0, r0, r0
   14d90:	subcs	r3, r3, r1
   14d94:	cmp	ip, #0
   14d98:	rsbmi	r0, r0, #0
   14d9c:	bx	lr
   14da0:	teq	ip, r0
   14da4:	rsbmi	r0, r0, #0
   14da8:	bx	lr
   14dac:	movcc	r0, #0
   14db0:	asreq	r0, ip, #31
   14db4:	orreq	r0, r0, #1
   14db8:	bx	lr
   14dbc:	clz	r2, r1
   14dc0:	rsb	r2, r2, #31
   14dc4:	cmp	ip, #0
   14dc8:	lsr	r0, r3, r2
   14dcc:	rsbmi	r0, r0, #0
   14dd0:	bx	lr
   14dd4:	cmp	r0, #0
   14dd8:	mvngt	r0, #-2147483648	; 0x80000000
   14ddc:	movlt	r0, #-2147483648	; 0x80000000
   14de0:	b	14e40 <close@plt+0x3f04>
   14de4:	cmp	r1, #0
   14de8:	beq	14dd4 <close@plt+0x3e98>
   14dec:	push	{r0, r1, lr}
   14df0:	bl	14bcc <close@plt+0x3c90>
   14df4:	pop	{r1, r2, lr}
   14df8:	mul	r3, r2, r0
   14dfc:	sub	r1, r1, r3
   14e00:	bx	lr
   14e04:	cmp	r3, #0
   14e08:	cmpeq	r2, #0
   14e0c:	bne	14e24 <close@plt+0x3ee8>
   14e10:	cmp	r1, #0
   14e14:	cmpeq	r0, #0
   14e18:	mvnne	r1, #0
   14e1c:	mvnne	r0, #0
   14e20:	b	14e40 <close@plt+0x3f04>
   14e24:	sub	sp, sp, #8
   14e28:	push	{sp, lr}
   14e2c:	bl	14e50 <close@plt+0x3f14>
   14e30:	ldr	lr, [sp, #4]
   14e34:	add	sp, sp, #8
   14e38:	pop	{r2, r3}
   14e3c:	bx	lr
   14e40:	push	{r1, lr}
   14e44:	mov	r0, #8
   14e48:	bl	10cf0 <raise@plt>
   14e4c:	pop	{r1, pc}
   14e50:	cmp	r1, r3
   14e54:	push	{r4, r5, r6, r7, r8, r9, lr}
   14e58:	cmpeq	r0, r2
   14e5c:	mov	r4, r0
   14e60:	mov	r5, r1
   14e64:	ldr	r9, [sp, #28]
   14e68:	movcc	r0, #0
   14e6c:	movcc	r1, #0
   14e70:	bcc	14f68 <close@plt+0x402c>
   14e74:	cmp	r3, #0
   14e78:	clzeq	ip, r2
   14e7c:	clzne	ip, r3
   14e80:	addeq	ip, ip, #32
   14e84:	cmp	r5, #0
   14e88:	clzeq	r1, r4
   14e8c:	addeq	r1, r1, #32
   14e90:	clzne	r1, r5
   14e94:	sub	ip, ip, r1
   14e98:	sub	lr, ip, #32
   14e9c:	lsl	r7, r3, ip
   14ea0:	rsb	r8, ip, #32
   14ea4:	orr	r7, r7, r2, lsl lr
   14ea8:	orr	r7, r7, r2, lsr r8
   14eac:	lsl	r6, r2, ip
   14eb0:	cmp	r5, r7
   14eb4:	cmpeq	r4, r6
   14eb8:	movcc	r0, #0
   14ebc:	movcc	r1, #0
   14ec0:	bcc	14edc <close@plt+0x3fa0>
   14ec4:	mov	r3, #1
   14ec8:	subs	r4, r4, r6
   14ecc:	lsl	r1, r3, lr
   14ed0:	lsl	r0, r3, ip
   14ed4:	orr	r1, r1, r3, lsr r8
   14ed8:	sbc	r5, r5, r7
   14edc:	cmp	ip, #0
   14ee0:	beq	14f68 <close@plt+0x402c>
   14ee4:	lsrs	r3, r7, #1
   14ee8:	rrx	r2, r6
   14eec:	mov	r6, ip
   14ef0:	b	14f14 <close@plt+0x3fd8>
   14ef4:	subs	r4, r4, r2
   14ef8:	sbc	r5, r5, r3
   14efc:	adds	r4, r4, r4
   14f00:	adc	r5, r5, r5
   14f04:	adds	r4, r4, #1
   14f08:	adc	r5, r5, #0
   14f0c:	subs	r6, r6, #1
   14f10:	beq	14f30 <close@plt+0x3ff4>
   14f14:	cmp	r5, r3
   14f18:	cmpeq	r4, r2
   14f1c:	bcs	14ef4 <close@plt+0x3fb8>
   14f20:	adds	r4, r4, r4
   14f24:	adc	r5, r5, r5
   14f28:	subs	r6, r6, #1
   14f2c:	bne	14f14 <close@plt+0x3fd8>
   14f30:	lsr	r6, r4, ip
   14f34:	lsr	r7, r5, ip
   14f38:	orr	r6, r6, r5, lsl r8
   14f3c:	adds	r2, r0, r4
   14f40:	orr	r6, r6, r5, lsr lr
   14f44:	adc	r3, r1, r5
   14f48:	lsl	r1, r7, ip
   14f4c:	orr	r1, r1, r6, lsl lr
   14f50:	lsl	r0, r6, ip
   14f54:	orr	r1, r1, r6, lsr r8
   14f58:	subs	r0, r2, r0
   14f5c:	mov	r4, r6
   14f60:	mov	r5, r7
   14f64:	sbc	r1, r3, r1
   14f68:	cmp	r9, #0
   14f6c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   14f70:	strd	r4, [r9]
   14f74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14f78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14f7c:	mov	r7, r0
   14f80:	ldr	r6, [pc, #72]	; 14fd0 <close@plt+0x4094>
   14f84:	ldr	r5, [pc, #72]	; 14fd4 <close@plt+0x4098>
   14f88:	add	r6, pc, r6
   14f8c:	add	r5, pc, r5
   14f90:	sub	r6, r6, r5
   14f94:	mov	r8, r1
   14f98:	mov	r9, r2
   14f9c:	bl	10cac <fdopen@plt-0x20>
   14fa0:	asrs	r6, r6, #2
   14fa4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14fa8:	mov	r4, #0
   14fac:	add	r4, r4, #1
   14fb0:	ldr	r3, [r5], #4
   14fb4:	mov	r2, r9
   14fb8:	mov	r1, r8
   14fbc:	mov	r0, r7
   14fc0:	blx	r3
   14fc4:	cmp	r6, r4
   14fc8:	bne	14fac <close@plt+0x4070>
   14fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14fd0:	andeq	r0, r1, r0, lsl #31
   14fd4:	andeq	r0, r1, r8, ror pc
   14fd8:	bx	lr
   14fdc:	ldr	r3, [pc, #12]	; 14ff0 <close@plt+0x40b4>
   14fe0:	mov	r1, #0
   14fe4:	add	r3, pc, r3
   14fe8:	ldr	r2, [r3]
   14fec:	b	10e70 <__cxa_atexit@plt>
   14ff0:	strdeq	r1, [r1], -ip

Disassembly of section .fini:

00014ff4 <.fini>:
   14ff4:	push	{r3, lr}
   14ff8:	pop	{r3, pc}
