
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

00000548 <_init>:
 548:	push	{r3, lr}
 54c:	bl	604 <call_weak_fn>
 550:	pop	{r3, pc}

Disassembly of section .plt:

00000554 <.plt>:
 554:	push	{lr}		; (str lr, [sp, #-4]!)
 558:	ldr	lr, [pc, #4]	; 564 <.plt+0x10>
 55c:	add	lr, pc, lr
 560:	ldr	pc, [lr, #8]!
 564:	.word	0x00010a9c

00000568 <rb_current_time@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2716]!	; 0xa9c

00000574 <__cxa_finalize@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2708]!	; 0xa94

00000580 <sendto_one@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2700]!	; 0xa8c

0000058c <read@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2692]!	; 0xa84

00000598 <time@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2684]!	; 0xa7c

000005a4 <rb_crypt@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2676]!	; 0xa74

000005b0 <__gmon_start__@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2668]!	; 0xa6c

000005bc <open@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2660]!	; 0xa64

000005c8 <srand@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2652]!	; 0xa5c

000005d4 <rand@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2644]!	; 0xa54

000005e0 <sendto_one_notice@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2636]!	; 0xa4c

000005ec <close@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2628]!	; 0xa44

000005f8 <irccmp@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2620]!	; 0xa3c

Disassembly of section .text:

00000604 <call_weak_fn>:
 604:	ldr	r3, [pc, #20]	; 620 <call_weak_fn+0x1c>
 608:	ldr	r2, [pc, #20]	; 624 <call_weak_fn+0x20>
 60c:	add	r3, pc, r3
 610:	ldr	r2, [r3, r2]
 614:	cmp	r2, #0
 618:	bxeq	lr
 61c:	b	5b0 <__gmon_start__@plt>
 620:	.word	0x000109ec
 624:	.word	0x00000048

00000628 <deregister_tm_clones>:
 628:	ldr	r0, [pc, #44]	; 65c <deregister_tm_clones+0x34>
 62c:	ldr	r3, [pc, #44]	; 660 <deregister_tm_clones+0x38>
 630:	add	r0, pc, r0
 634:	add	r3, pc, r3
 638:	cmp	r3, r0
 63c:	ldr	r3, [pc, #32]	; 664 <deregister_tm_clones+0x3c>
 640:	add	r3, pc, r3
 644:	bxeq	lr
 648:	ldr	r2, [pc, #24]	; 668 <deregister_tm_clones+0x40>
 64c:	ldr	r3, [r3, r2]
 650:	cmp	r3, #0
 654:	bxeq	lr
 658:	bx	r3
 65c:	.word	0x00010a98
 660:	.word	0x00010a94
 664:	.word	0x000109b8
 668:	.word	0x00000044

0000066c <register_tm_clones>:
 66c:	ldr	r0, [pc, #56]	; 6ac <register_tm_clones+0x40>
 670:	ldr	r3, [pc, #56]	; 6b0 <register_tm_clones+0x44>
 674:	add	r0, pc, r0
 678:	add	r3, pc, r3
 67c:	sub	r1, r3, r0
 680:	ldr	r3, [pc, #44]	; 6b4 <register_tm_clones+0x48>
 684:	asr	r1, r1, #2
 688:	add	r3, pc, r3
 68c:	add	r1, r1, r1, lsr #31
 690:	asrs	r1, r1, #1
 694:	bxeq	lr
 698:	ldr	r2, [pc, #24]	; 6b8 <register_tm_clones+0x4c>
 69c:	ldr	r3, [r3, r2]
 6a0:	cmp	r3, #0
 6a4:	bxeq	lr
 6a8:	bx	r3
 6ac:	.word	0x00010a54
 6b0:	.word	0x00010a50
 6b4:	.word	0x00010970
 6b8:	.word	0x0000004c

000006bc <__do_global_dtors_aux>:
 6bc:	ldr	r3, [pc, #76]	; 710 <__do_global_dtors_aux+0x54>
 6c0:	ldr	r2, [pc, #76]	; 714 <__do_global_dtors_aux+0x58>
 6c4:	add	r3, pc, r3
 6c8:	add	r2, pc, r2
 6cc:	ldrb	r3, [r3]
 6d0:	cmp	r3, #0
 6d4:	bxne	lr
 6d8:	ldr	r3, [pc, #56]	; 718 <__do_global_dtors_aux+0x5c>
 6dc:	push	{r4, lr}
 6e0:	ldr	r3, [r2, r3]
 6e4:	cmp	r3, #0
 6e8:	beq	6f8 <__do_global_dtors_aux+0x3c>
 6ec:	ldr	r3, [pc, #40]	; 71c <__do_global_dtors_aux+0x60>
 6f0:	ldr	r0, [pc, r3]
 6f4:	bl	574 <__cxa_finalize@plt>
 6f8:	bl	628 <deregister_tm_clones>
 6fc:	ldr	r3, [pc, #28]	; 720 <__do_global_dtors_aux+0x64>
 700:	mov	r2, #1
 704:	add	r3, pc, r3
 708:	strb	r2, [r3]
 70c:	pop	{r4, pc}
 710:	.word	0x00010a04
 714:	.word	0x00010930
 718:	.word	0x00000040
 71c:	.word	0x00010960
 720:	.word	0x000109c4

00000724 <frame_dummy>:
 724:	b	66c <register_tm_clones>

00000728 <generate_poor_salt>:
 728:	push	{r4, r5, r6, r7, r8, lr}
 72c:	mov	r4, r0
 730:	mov	r5, r1
 734:	mov	r0, #0
 738:	mov	r6, r4
 73c:	add	r5, r5, r4
 740:	ldr	r7, [pc, #52]	; 77c <generate_poor_salt+0x54>
 744:	bl	598 <time@plt>
 748:	bl	5c8 <srand@plt>
 74c:	add	r7, pc, r7
 750:	bl	5d4 <rand@plt>
 754:	rsbs	r3, r0, #0
 758:	and	r0, r0, #63	; 0x3f
 75c:	and	r3, r3, #63	; 0x3f
 760:	rsbpl	r0, r3, #0
 764:	ldrb	r3, [r7, r0]
 768:	strb	r3, [r6], #1
 76c:	cmp	r6, r5
 770:	bne	750 <generate_poor_salt+0x28>
 774:	mov	r0, r4
 778:	pop	{r4, r5, r6, r7, r8, pc}
 77c:	.word	0x00000500

00000780 <generate_random_salt>:
 780:	push	{r4, r5, r6, lr}
 784:	mov	r4, r0
 788:	mov	r5, r1
 78c:	mov	r1, #0
 790:	ldr	r0, [pc, #116]	; 80c <generate_random_salt+0x8c>
 794:	add	r0, pc, r0
 798:	bl	5bc <open@plt>
 79c:	subs	r6, r0, #0
 7a0:	bge	7b4 <generate_random_salt+0x34>
 7a4:	mov	r1, r5
 7a8:	mov	r0, r4
 7ac:	pop	{r4, r5, r6, lr}
 7b0:	b	728 <generate_poor_salt>
 7b4:	mov	r2, r5
 7b8:	mov	r1, r4
 7bc:	bl	58c <read@plt>
 7c0:	cmp	r0, r5
 7c4:	beq	7d4 <generate_random_salt+0x54>
 7c8:	mov	r0, r6
 7cc:	bl	5ec <close@plt>
 7d0:	b	7a4 <generate_random_salt+0x24>
 7d4:	ldr	r1, [pc, #52]	; 810 <generate_random_salt+0x90>
 7d8:	mov	r3, r4
 7dc:	add	r0, r0, r4
 7e0:	add	r1, pc, r1
 7e4:	ldrb	r2, [r3]
 7e8:	and	r2, r2, #63	; 0x3f
 7ec:	ldrb	r2, [r1, r2]
 7f0:	strb	r2, [r3], #1
 7f4:	cmp	r0, r3
 7f8:	bne	7e4 <generate_random_salt+0x64>
 7fc:	mov	r0, r6
 800:	bl	5ec <close@plt>
 804:	mov	r0, r4
 808:	pop	{r4, r5, r6, pc}
 80c:	.word	0x0000051e
 810:	.word	0x0000046c

00000814 <m_mkpasswd>:
 814:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 818:	mov	r7, r2
 81c:	add	r5, sp, #8
 820:	ldr	r2, [pc, #496]	; a18 <m_mkpasswd+0x204>
 824:	ldr	r8, [sp, #48]	; 0x30
 828:	ldr	r6, [pc, #492]	; a1c <m_mkpasswd+0x208>
 82c:	add	r2, pc, r2
 830:	ldr	r0, [r2]
 834:	ldrh	r1, [r2, #4]
 838:	add	r6, pc, r6
 83c:	ldrb	r2, [r2, #6]
 840:	str	r0, [sp, #8]
 844:	strh	r1, [r5, #4]
 848:	strb	r2, [r5, #6]
 84c:	ldr	r2, [r8, #4]
 850:	cmp	r2, #0
 854:	beq	864 <m_mkpasswd+0x50>
 858:	ldrb	r2, [r2]
 85c:	cmp	r2, #0
 860:	bne	898 <m_mkpasswd+0x84>
 864:	ldr	r3, [pc, #436]	; a20 <m_mkpasswd+0x20c>
 868:	ldr	r1, [pc, #436]	; a24 <m_mkpasswd+0x210>
 86c:	ldr	r2, [r6, r3]
 870:	ldr	r3, [pc, #432]	; a28 <m_mkpasswd+0x214>
 874:	add	r1, pc, r1
 878:	add	r2, r2, #88	; 0x58
 87c:	add	r3, pc, r3
 880:	str	r3, [sp]
 884:	add	r3, r7, #88	; 0x58
 888:	mov	r0, r7
 88c:	bl	580 <sendto_one@plt>
 890:	add	sp, sp, #16
 894:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 898:	cmp	r3, #2
 89c:	ldr	r3, [pc, #392]	; a2c <m_mkpasswd+0x218>
 8a0:	ldr	r4, [pc, #392]	; a30 <m_mkpasswd+0x21c>
 8a4:	ldrgt	r5, [r8, #8]
 8a8:	ldr	r3, [r6, r3]
 8ac:	add	r4, pc, r4
 8b0:	ldr	r9, [r3, #184]	; 0xb8
 8b4:	ldr	r3, [r4, #64]	; 0x40
 8b8:	add	r9, r9, r3
 8bc:	bl	568 <rb_current_time@plt>
 8c0:	cmp	r9, r0
 8c4:	ble	8f0 <m_mkpasswd+0xdc>
 8c8:	ldr	r3, [pc, #336]	; a20 <m_mkpasswd+0x20c>
 8cc:	ldr	r1, [pc, #352]	; a34 <m_mkpasswd+0x220>
 8d0:	ldr	r2, [r6, r3]
 8d4:	ldr	r3, [pc, #348]	; a38 <m_mkpasswd+0x224>
 8d8:	add	r1, pc, r1
 8dc:	add	r2, r2, #88	; 0x58
 8e0:	add	r3, pc, r3
 8e4:	str	r3, [sp]
 8e8:	add	r3, r7, #88	; 0x58
 8ec:	b	888 <m_mkpasswd+0x74>
 8f0:	bl	568 <rb_current_time@plt>
 8f4:	ldr	r1, [pc, #320]	; a3c <m_mkpasswd+0x228>
 8f8:	str	r0, [r4, #64]	; 0x40
 8fc:	mov	r0, r5
 900:	add	r1, pc, r1
 904:	bl	5f8 <irccmp@plt>
 908:	subs	r9, r0, #0
 90c:	bne	970 <m_mkpasswd+0x15c>
 910:	mov	r6, #36	; 0x24
 914:	mov	r3, #53	; 0x35
 918:	mov	r1, #16
 91c:	add	r0, r4, #3
 920:	strb	r6, [r4]
 924:	strb	r3, [r4, #1]
 928:	strb	r6, [r4, #2]
 92c:	bl	780 <generate_random_salt>
 930:	mov	r1, r4
 934:	strb	r6, [r4, #19]
 938:	strb	r9, [r4, #20]
 93c:	ldr	r0, [r8, #4]
 940:	bl	5a4 <rb_crypt@plt>
 944:	cmp	r0, #0
 948:	ldr	r3, [r8, #4]
 94c:	ldreq	r0, [pc, #236]	; a40 <m_mkpasswd+0x22c>
 950:	addeq	r0, pc, r0
 954:	ldr	r1, [pc, #232]	; a44 <m_mkpasswd+0x230>
 958:	mov	r2, r5
 95c:	str	r0, [sp]
 960:	mov	r0, r7
 964:	add	r1, pc, r1
 968:	bl	5e0 <sendto_one_notice@plt>
 96c:	b	890 <m_mkpasswd+0x7c>
 970:	ldr	r1, [pc, #208]	; a48 <m_mkpasswd+0x234>
 974:	mov	r0, r5
 978:	add	r1, pc, r1
 97c:	bl	5f8 <irccmp@plt>
 980:	subs	sl, r0, #0
 984:	bne	9bc <m_mkpasswd+0x1a8>
 988:	mov	r9, #36	; 0x24
 98c:	mov	r3, #54	; 0x36
 990:	add	r6, r4, #21
 994:	mov	r1, #16
 998:	add	r0, r4, #24
 99c:	strb	r9, [r4, #21]
 9a0:	strb	r3, [r4, #22]
 9a4:	strb	r9, [r4, #23]
 9a8:	bl	780 <generate_random_salt>
 9ac:	strb	r9, [r4, #40]	; 0x28
 9b0:	strb	sl, [r4, #41]	; 0x29
 9b4:	mov	r1, r6
 9b8:	b	93c <m_mkpasswd+0x128>
 9bc:	ldr	r1, [pc, #136]	; a4c <m_mkpasswd+0x238>
 9c0:	mov	r0, r5
 9c4:	add	r1, pc, r1
 9c8:	bl	5f8 <irccmp@plt>
 9cc:	subs	sl, r0, #0
 9d0:	bne	a04 <m_mkpasswd+0x1f0>
 9d4:	mov	r9, #36	; 0x24
 9d8:	mov	r3, #49	; 0x31
 9dc:	mov	r1, #8
 9e0:	add	r0, r4, #45	; 0x2d
 9e4:	add	r6, r4, #42	; 0x2a
 9e8:	strb	r9, [r4, #42]	; 0x2a
 9ec:	strb	r3, [r4, #43]	; 0x2b
 9f0:	strb	r9, [r4, #44]	; 0x2c
 9f4:	bl	780 <generate_random_salt>
 9f8:	strb	r9, [r4, #53]	; 0x35
 9fc:	strb	sl, [r4, #54]	; 0x36
 a00:	b	9b4 <m_mkpasswd+0x1a0>
 a04:	ldr	r1, [pc, #68]	; a50 <m_mkpasswd+0x23c>
 a08:	mov	r0, r7
 a0c:	add	r1, pc, r1
 a10:	bl	5e0 <sendto_one_notice@plt>
 a14:	b	890 <m_mkpasswd+0x7c>
 a18:	.word	0x00000537
 a1c:	.word	0x000107c0
 a20:	.word	0x00000050
 a24:	.word	0x0000044f
 a28:	.word	0x0000046c
 a2c:	.word	0x00000054
 a30:	.word	0x00010820
 a34:	.word	0x00000419
 a38:	.word	0x00000408
 a3c:	.word	0x0000045c
 a40:	.word	0x0000036f
 a44:	.word	0x00000445
 a48:	.word	0x000003eb
 a4c:	.word	0x000003a6
 a50:	.word	0x00000362

00000a54 <mo_mkpasswd>:
 a54:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 a58:	mov	r6, r2
 a5c:	add	r5, sp, #8
 a60:	ldr	r2, [pc, #428]	; c14 <mo_mkpasswd+0x1c0>
 a64:	ldr	r7, [sp, #48]	; 0x30
 a68:	ldr	r1, [pc, #424]	; c18 <mo_mkpasswd+0x1c4>
 a6c:	add	r2, pc, r2
 a70:	ldr	r0, [r2]
 a74:	add	r1, pc, r1
 a78:	str	r0, [sp, #8]
 a7c:	ldrh	r0, [r2, #4]
 a80:	ldrb	r2, [r2, #6]
 a84:	strh	r0, [r5, #4]
 a88:	strb	r2, [r5, #6]
 a8c:	ldr	r2, [r7, #4]
 a90:	cmp	r2, #0
 a94:	beq	aa4 <mo_mkpasswd+0x50>
 a98:	ldrb	r2, [r2]
 a9c:	cmp	r2, #0
 aa0:	bne	ad8 <mo_mkpasswd+0x84>
 aa4:	ldr	r3, [pc, #368]	; c1c <mo_mkpasswd+0x1c8>
 aa8:	mov	r0, r6
 aac:	ldr	r2, [r1, r3]
 ab0:	ldr	r3, [pc, #360]	; c20 <mo_mkpasswd+0x1cc>
 ab4:	ldr	r1, [pc, #360]	; c24 <mo_mkpasswd+0x1d0>
 ab8:	add	r2, r2, #88	; 0x58
 abc:	add	r3, pc, r3
 ac0:	add	r1, pc, r1
 ac4:	str	r3, [sp]
 ac8:	add	r3, r6, #88	; 0x58
 acc:	bl	580 <sendto_one@plt>
 ad0:	add	sp, sp, #16
 ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 ad8:	cmp	r3, #2
 adc:	ldr	r1, [pc, #324]	; c28 <mo_mkpasswd+0x1d4>
 ae0:	ldrgt	r5, [r7, #8]
 ae4:	add	r1, pc, r1
 ae8:	mov	r0, r5
 aec:	bl	5f8 <irccmp@plt>
 af0:	subs	r9, r0, #0
 af4:	bne	b60 <mo_mkpasswd+0x10c>
 af8:	ldr	r4, [pc, #300]	; c2c <mo_mkpasswd+0x1d8>
 afc:	mov	r8, #36	; 0x24
 b00:	mov	r3, #53	; 0x35
 b04:	mov	r1, #16
 b08:	add	r4, pc, r4
 b0c:	add	r0, r4, #3
 b10:	strb	r8, [r4]
 b14:	strb	r3, [r4, #1]
 b18:	strb	r8, [r4, #2]
 b1c:	bl	780 <generate_random_salt>
 b20:	strb	r8, [r4, #19]
 b24:	strb	r9, [r4, #20]
 b28:	mov	r1, r4
 b2c:	ldr	r0, [r7, #4]
 b30:	bl	5a4 <rb_crypt@plt>
 b34:	cmp	r0, #0
 b38:	ldr	r3, [r7, #4]
 b3c:	ldreq	r0, [pc, #236]	; c30 <mo_mkpasswd+0x1dc>
 b40:	addeq	r0, pc, r0
 b44:	ldr	r1, [pc, #232]	; c34 <mo_mkpasswd+0x1e0>
 b48:	mov	r2, r5
 b4c:	str	r0, [sp]
 b50:	mov	r0, r6
 b54:	add	r1, pc, r1
 b58:	bl	5e0 <sendto_one_notice@plt>
 b5c:	b	ad0 <mo_mkpasswd+0x7c>
 b60:	ldr	r1, [pc, #208]	; c38 <mo_mkpasswd+0x1e4>
 b64:	mov	r0, r5
 b68:	add	r1, pc, r1
 b6c:	bl	5f8 <irccmp@plt>
 b70:	subs	sl, r0, #0
 b74:	bne	bb0 <mo_mkpasswd+0x15c>
 b78:	ldr	r8, [pc, #188]	; c3c <mo_mkpasswd+0x1e8>
 b7c:	mov	r9, #36	; 0x24
 b80:	mov	r3, #54	; 0x36
 b84:	mov	r1, #16
 b88:	add	r8, pc, r8
 b8c:	add	r0, r8, #24
 b90:	add	r4, r8, #21
 b94:	strb	r9, [r8, #21]
 b98:	strb	r3, [r8, #22]
 b9c:	strb	r9, [r8, #23]
 ba0:	bl	780 <generate_random_salt>
 ba4:	strb	r9, [r8, #40]	; 0x28
 ba8:	strb	sl, [r8, #41]	; 0x29
 bac:	b	b28 <mo_mkpasswd+0xd4>
 bb0:	ldr	r1, [pc, #136]	; c40 <mo_mkpasswd+0x1ec>
 bb4:	mov	r0, r5
 bb8:	add	r1, pc, r1
 bbc:	bl	5f8 <irccmp@plt>
 bc0:	subs	sl, r0, #0
 bc4:	bne	c00 <mo_mkpasswd+0x1ac>
 bc8:	ldr	r8, [pc, #116]	; c44 <mo_mkpasswd+0x1f0>
 bcc:	mov	r9, #36	; 0x24
 bd0:	mov	r3, #49	; 0x31
 bd4:	mov	r1, #8
 bd8:	add	r8, pc, r8
 bdc:	add	r0, r8, #45	; 0x2d
 be0:	add	r4, r8, #42	; 0x2a
 be4:	strb	r9, [r8, #42]	; 0x2a
 be8:	strb	r3, [r8, #43]	; 0x2b
 bec:	strb	r9, [r8, #44]	; 0x2c
 bf0:	bl	780 <generate_random_salt>
 bf4:	strb	r9, [r8, #53]	; 0x35
 bf8:	strb	sl, [r8, #54]	; 0x36
 bfc:	b	b28 <mo_mkpasswd+0xd4>
 c00:	ldr	r1, [pc, #64]	; c48 <mo_mkpasswd+0x1f4>
 c04:	mov	r0, r6
 c08:	add	r1, pc, r1
 c0c:	bl	5e0 <sendto_one_notice@plt>
 c10:	b	ad0 <mo_mkpasswd+0x7c>
 c14:	.word	0x000002f7
 c18:	.word	0x00010584
 c1c:	.word	0x00000050
 c20:	.word	0x0000022c
 c24:	.word	0x00000203
 c28:	.word	0x00000278
 c2c:	.word	0x000105c4
 c30:	.word	0x0000017f
 c34:	.word	0x00000255
 c38:	.word	0x000001fb
 c3c:	.word	0x00010544
 c40:	.word	0x000001b2
 c44:	.word	0x000104f4
 c48:	.word	0x00000166

Disassembly of section .fini:

00000c4c <_fini>:
 c4c:	push	{r3, lr}
 c50:	pop	{r3, pc}
