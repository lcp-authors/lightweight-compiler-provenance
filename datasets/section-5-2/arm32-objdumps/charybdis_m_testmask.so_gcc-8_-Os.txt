
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

00000584 <_init>:
 584:	push	{r3, lr}
 588:	bl	640 <call_weak_fn>
 58c:	pop	{r3, pc}

Disassembly of section .plt:

00000590 <.plt>:
 590:	push	{lr}		; (str lr, [sp, #-4]!)
 594:	ldr	lr, [pc, #4]	; 5a0 <.plt+0x10>
 598:	add	lr, pc, lr
 59c:	ldr	pc, [lr, #8]!
 5a0:	.word	0x00010a60

000005a4 <__cxa_finalize@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2656]!	; 0xa60

000005b0 <match_esc@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2648]!	; 0xa58

000005bc <sendto_one@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2640]!	; 0xa50

000005c8 <collapse_esc@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2632]!	; 0xa48

000005d4 <match_ips@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2624]!	; 0xa40

000005e0 <strcpy@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2616]!	; 0xa38

000005ec <__gmon_start__@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2608]!	; 0xa30

000005f8 <strlen@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2600]!	; 0xa28

00000604 <strchr@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2592]!	; 0xa20

00000610 <collapse@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #16, 20	; 0x10000
 618:	ldr	pc, [ip, #2584]!	; 0xa18

0000061c <match@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #16, 20	; 0x10000
 624:	ldr	pc, [ip, #2576]!	; 0xa10

00000628 <sendto_one_notice@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #16, 20	; 0x10000
 630:	ldr	pc, [ip, #2568]!	; 0xa08

00000634 <show_ip@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #16, 20	; 0x10000
 63c:	ldr	pc, [ip, #2560]!	; 0xa00

Disassembly of section .text:

00000640 <call_weak_fn>:
 640:	ldr	r3, [pc, #20]	; 65c <call_weak_fn+0x1c>
 644:	ldr	r2, [pc, #20]	; 660 <call_weak_fn+0x20>
 648:	add	r3, pc, r3
 64c:	ldr	r2, [r3, r2]
 650:	cmp	r2, #0
 654:	bxeq	lr
 658:	b	5ec <__gmon_start__@plt>
 65c:	.word	0x000109b0
 660:	.word	0x00000048

00000664 <deregister_tm_clones>:
 664:	ldr	r0, [pc, #44]	; 698 <deregister_tm_clones+0x34>
 668:	ldr	r3, [pc, #44]	; 69c <deregister_tm_clones+0x38>
 66c:	add	r0, pc, r0
 670:	add	r3, pc, r3
 674:	cmp	r3, r0
 678:	ldr	r3, [pc, #32]	; 6a0 <deregister_tm_clones+0x3c>
 67c:	add	r3, pc, r3
 680:	bxeq	lr
 684:	ldr	r2, [pc, #24]	; 6a4 <deregister_tm_clones+0x40>
 688:	ldr	r3, [r3, r2]
 68c:	cmp	r3, #0
 690:	bxeq	lr
 694:	bx	r3
 698:	.word	0x00010a5c
 69c:	.word	0x00010a58
 6a0:	.word	0x0001097c
 6a4:	.word	0x00000044

000006a8 <register_tm_clones>:
 6a8:	ldr	r0, [pc, #56]	; 6e8 <register_tm_clones+0x40>
 6ac:	ldr	r3, [pc, #56]	; 6ec <register_tm_clones+0x44>
 6b0:	add	r0, pc, r0
 6b4:	add	r3, pc, r3
 6b8:	sub	r1, r3, r0
 6bc:	ldr	r3, [pc, #44]	; 6f0 <register_tm_clones+0x48>
 6c0:	asr	r1, r1, #2
 6c4:	add	r3, pc, r3
 6c8:	add	r1, r1, r1, lsr #31
 6cc:	asrs	r1, r1, #1
 6d0:	bxeq	lr
 6d4:	ldr	r2, [pc, #24]	; 6f4 <register_tm_clones+0x4c>
 6d8:	ldr	r3, [r3, r2]
 6dc:	cmp	r3, #0
 6e0:	bxeq	lr
 6e4:	bx	r3
 6e8:	.word	0x00010a18
 6ec:	.word	0x00010a14
 6f0:	.word	0x00010934
 6f4:	.word	0x00000050

000006f8 <__do_global_dtors_aux>:
 6f8:	ldr	r3, [pc, #76]	; 74c <__do_global_dtors_aux+0x54>
 6fc:	ldr	r2, [pc, #76]	; 750 <__do_global_dtors_aux+0x58>
 700:	add	r3, pc, r3
 704:	add	r2, pc, r2
 708:	ldrb	r3, [r3]
 70c:	cmp	r3, #0
 710:	bxne	lr
 714:	ldr	r3, [pc, #56]	; 754 <__do_global_dtors_aux+0x5c>
 718:	push	{r4, lr}
 71c:	ldr	r3, [r2, r3]
 720:	cmp	r3, #0
 724:	beq	734 <__do_global_dtors_aux+0x3c>
 728:	ldr	r3, [pc, #40]	; 758 <__do_global_dtors_aux+0x60>
 72c:	ldr	r0, [pc, r3]
 730:	bl	5a4 <__cxa_finalize@plt>
 734:	bl	664 <deregister_tm_clones>
 738:	ldr	r3, [pc, #28]	; 75c <__do_global_dtors_aux+0x64>
 73c:	mov	r2, #1
 740:	add	r3, pc, r3
 744:	strb	r2, [r3]
 748:	pop	{r4, pc}
 74c:	.word	0x000109c8
 750:	.word	0x000108f4
 754:	.word	0x00000040
 758:	.word	0x00010924
 75c:	.word	0x00010988

00000760 <frame_dummy>:
 760:	b	6a8 <register_tm_clones>

00000764 <mo_testmask>:
 764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 768:	mov	r9, r3
 76c:	add	fp, sp, #32
 770:	sub	sp, sp, #60	; 0x3c
 774:	mov	sl, r2
 778:	ldr	r3, [pc, #776]	; a88 <mo_testmask+0x324>
 77c:	add	r3, pc, r3
 780:	str	r3, [fp, #-52]	; 0xffffffcc
 784:	ldr	r3, [fp, #4]
 788:	ldr	r4, [r3, #4]
 78c:	mov	r0, r4
 790:	bl	5f8 <strlen@plt>
 794:	add	r0, r0, #8
 798:	mov	r1, r4
 79c:	bic	r0, r0, #7
 7a0:	sub	sp, sp, r0
 7a4:	add	r6, sp, #24
 7a8:	mov	r0, r6
 7ac:	bl	5e0 <strcpy@plt>
 7b0:	mov	r0, r6
 7b4:	bl	610 <collapse@plt>
 7b8:	mov	r1, #64	; 0x40
 7bc:	mov	r0, r6
 7c0:	bl	604 <strchr@plt>
 7c4:	subs	r5, r0, #0
 7c8:	bne	7e4 <mo_testmask+0x80>
 7cc:	ldr	r1, [pc, #696]	; a8c <mo_testmask+0x328>
 7d0:	mov	r0, sl
 7d4:	add	r1, pc, r1
 7d8:	bl	628 <sendto_one_notice@plt>
 7dc:	sub	sp, fp, #32
 7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 7e4:	mov	r7, r5
 7e8:	mov	r4, #0
 7ec:	mov	r1, #33	; 0x21
 7f0:	mov	r0, r6
 7f4:	strb	r4, [r7], #1
 7f8:	bl	604 <strchr@plt>
 7fc:	subs	r8, r0, #0
 800:	beq	81c <mo_testmask+0xb8>
 804:	mov	r2, r8
 808:	strb	r4, [r2], #1
 80c:	cmp	r2, r4
 810:	beq	7cc <mo_testmask+0x68>
 814:	mov	r8, r6
 818:	mov	r6, r2
 81c:	ldrb	r2, [r6]
 820:	clz	r4, r7
 824:	lsr	r4, r4, #5
 828:	cmp	r2, #0
 82c:	moveq	r4, #1
 830:	cmp	r4, #0
 834:	bne	7cc <mo_testmask+0x68>
 838:	ldrb	r3, [r5, #1]
 83c:	cmp	r3, #0
 840:	beq	7cc <mo_testmask+0x68>
 844:	cmp	r9, #2
 848:	ble	89c <mo_testmask+0x138>
 84c:	ldr	r3, [fp, #4]
 850:	ldr	r4, [r3, #8]
 854:	cmp	r4, #0
 858:	beq	89c <mo_testmask+0x138>
 85c:	ldrb	r3, [r4]
 860:	cmp	r3, #0
 864:	moveq	r4, r3
 868:	beq	89c <mo_testmask+0x138>
 86c:	mov	r0, r4
 870:	bl	5f8 <strlen@plt>
 874:	add	r0, r0, #8
 878:	mov	r1, r4
 87c:	bic	r0, r0, #7
 880:	sub	sp, sp, r0
 884:	add	r5, sp, #24
 888:	mov	r0, r5
 88c:	mov	r4, r5
 890:	bl	5e0 <strcpy@plt>
 894:	mov	r0, r5
 898:	bl	5c8 <collapse_esc@plt>
 89c:	ldr	r3, [pc, #492]	; a90 <mo_testmask+0x32c>
 8a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
 8a4:	ldr	r3, [r2, r3]
 8a8:	ldr	r3, [r3]
 8ac:	str	r3, [fp, #-40]	; 0xffffffd8
 8b0:	mov	r3, #0
 8b4:	str	r3, [fp, #-48]	; 0xffffffd0
 8b8:	str	r3, [fp, #-44]	; 0xffffffd4
 8bc:	ldr	r3, [pc, #464]	; a94 <mo_testmask+0x330>
 8c0:	add	r3, pc, r3
 8c4:	str	r3, [fp, #-64]	; 0xffffffc0
 8c8:	ldr	r3, [pc, #456]	; a98 <mo_testmask+0x334>
 8cc:	add	r3, pc, r3
 8d0:	str	r3, [fp, #-68]	; 0xffffffbc
 8d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8d8:	cmp	r3, #0
 8dc:	bne	938 <mo_testmask+0x1d4>
 8e0:	cmp	r8, #0
 8e4:	add	r3, sl, #88	; 0x58
 8e8:	ldreq	r8, [pc, #428]	; a9c <mo_testmask+0x338>
 8ec:	addeq	r8, pc, r8
 8f0:	cmp	r4, #0
 8f4:	ldreq	r4, [pc, #420]	; aa0 <mo_testmask+0x33c>
 8f8:	addeq	r4, pc, r4
 8fc:	ldr	r2, [pc, #416]	; aa4 <mo_testmask+0x340>
 900:	mov	r0, sl
 904:	ldr	r1, [fp, #-52]	; 0xffffffcc
 908:	ldr	r2, [r1, r2]
 90c:	strd	r6, [sp, #12]
 910:	ldr	r1, [fp, #-48]	; 0xffffffd0
 914:	add	r2, r2, #88	; 0x58
 918:	stmib	sp, {r1, r8}
 91c:	ldr	r1, [fp, #-44]	; 0xffffffd4
 920:	str	r4, [sp, #20]
 924:	str	r1, [sp]
 928:	ldr	r1, [pc, #376]	; aa8 <mo_testmask+0x344>
 92c:	add	r1, pc, r1
 930:	bl	5bc <sendto_one@plt>
 934:	b	7dc <mo_testmask+0x78>
 938:	ldr	r3, [fp, #-40]	; 0xffffffd8
 93c:	ldr	r5, [r3]
 940:	ldrh	r3, [r5, #80]	; 0x50
 944:	cmp	r3, #64	; 0x40
 948:	bne	a28 <mo_testmask+0x2c4>
 94c:	ldr	r3, [r5, #24]
 950:	cmp	r3, #0
 954:	beq	a28 <mo_testmask+0x2c4>
 958:	ldrb	r3, [r5, #291]	; 0x123
 95c:	cmp	r3, #0
 960:	ldreq	r9, [fp, #-64]	; 0xffffffc0
 964:	beq	984 <mo_testmask+0x220>
 968:	mov	r1, r5
 96c:	mov	r0, sl
 970:	bl	634 <show_ip@plt>
 974:	cmp	r0, #0
 978:	ldreq	r9, [fp, #-68]	; 0xffffffbc
 97c:	addne	r9, r5, #288	; 0x120
 980:	addne	r9, r9, #3
 984:	add	r1, r5, #152	; 0x98
 988:	mov	r0, r6
 98c:	bl	61c <match@plt>
 990:	cmp	r0, #0
 994:	beq	a28 <mo_testmask+0x2c4>
 998:	add	r1, r5, #163	; 0xa3
 99c:	mov	r0, r7
 9a0:	bl	61c <match@plt>
 9a4:	cmp	r0, #0
 9a8:	beq	9ec <mo_testmask+0x288>
 9ac:	cmp	r8, #0
 9b0:	bne	a38 <mo_testmask+0x2d4>
 9b4:	cmp	r4, #0
 9b8:	bne	a50 <mo_testmask+0x2ec>
 9bc:	ldr	r3, [r5, #64]	; 0x40
 9c0:	and	r3, r3, #8192	; 0x2000
 9c4:	str	r3, [fp, #-60]	; 0xffffffc4
 9c8:	mov	r3, #0
 9cc:	str	r3, [fp, #-56]	; 0xffffffc8
 9d0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
 9d4:	orrs	r3, r2, r3
 9d8:	bne	a6c <mo_testmask+0x308>
 9dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
 9e0:	add	r3, r3, #1
 9e4:	str	r3, [fp, #-48]	; 0xffffffd0
 9e8:	b	a28 <mo_testmask+0x2c4>
 9ec:	add	r1, r5, #227	; 0xe3
 9f0:	mov	r0, r7
 9f4:	bl	61c <match@plt>
 9f8:	cmp	r0, #0
 9fc:	bne	9ac <mo_testmask+0x248>
 a00:	mov	r1, r9
 a04:	mov	r0, r7
 a08:	bl	61c <match@plt>
 a0c:	cmp	r0, #0
 a10:	bne	9ac <mo_testmask+0x248>
 a14:	mov	r1, r9
 a18:	mov	r0, r7
 a1c:	bl	5d4 <match_ips@plt>
 a20:	cmp	r0, #0
 a24:	bne	9ac <mo_testmask+0x248>
 a28:	ldr	r3, [fp, #-40]	; 0xffffffd8
 a2c:	ldr	r3, [r3, #8]
 a30:	str	r3, [fp, #-40]	; 0xffffffd8
 a34:	b	8d4 <mo_testmask+0x170>
 a38:	add	r1, r5, #88	; 0x58
 a3c:	mov	r0, r8
 a40:	bl	61c <match@plt>
 a44:	cmp	r0, #0
 a48:	bne	9b4 <mo_testmask+0x250>
 a4c:	b	a28 <mo_testmask+0x2c4>
 a50:	add	r1, r5, #344	; 0x158
 a54:	mov	r0, r4
 a58:	add	r1, r1, #1
 a5c:	bl	5b0 <match_esc@plt>
 a60:	cmp	r0, #0
 a64:	bne	9bc <mo_testmask+0x258>
 a68:	b	a28 <mo_testmask+0x2c4>
 a6c:	ldrh	r3, [r5, #80]	; 0x50
 a70:	cmp	r3, #64	; 0x40
 a74:	ldreq	r3, [fp, #-44]	; 0xffffffd4
 a78:	addeq	r3, r3, #1
 a7c:	streq	r3, [fp, #-44]	; 0xffffffd4
 a80:	bne	9dc <mo_testmask+0x278>
 a84:	b	a28 <mo_testmask+0x2c4>
 a88:	.word	0x0001087c
 a8c:	.word	0x00000345
 a90:	.word	0x0000004c
 a94:	.word	0x00000245
 a98:	.word	0x00000249
 a9c:	.word	0x0000022b
 aa0:	.word	0x0000021f
 aa4:	.word	0x00000054
 aa8:	.word	0x00000201

Disassembly of section .fini:

00000aac <_fini>:
 aac:	push	{r3, lr}
 ab0:	pop	{r3, pc}
