
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010d6c <.init>:
   10d6c:	push	{r3, lr}
   10d70:	bl	1102c <__mempcpy_chk@plt+0x48>
   10d74:	pop	{r3, pc}

Disassembly of section .plt:

00010d78 <calloc@plt-0x14>:
   10d78:	push	{lr}		; (str lr, [sp, #-4]!)
   10d7c:	ldr	lr, [pc, #4]	; 10d88 <calloc@plt-0x4>
   10d80:	add	lr, pc, lr
   10d84:	ldr	pc, [lr, #8]!
   10d88:	andeq	r7, r1, r8, ror r2

00010d8c <calloc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #632]!	; 0x278

00010d98 <fputs_unlocked@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #624]!	; 0x270

00010da4 <raise@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #616]!	; 0x268

00010db0 <strcmp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #608]!	; 0x260

00010dbc <fflush@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #600]!	; 0x258

00010dc8 <memmove@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #592]!	; 0x250

00010dd4 <free@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #584]!	; 0x248

00010de0 <faccessat@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #576]!	; 0x240

00010dec <_exit@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #568]!	; 0x238

00010df8 <memcpy@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #560]!	; 0x230

00010e04 <mbsinit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #552]!	; 0x228

00010e10 <dcgettext@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #544]!	; 0x220

00010e1c <realloc@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #536]!	; 0x218

00010e28 <textdomain@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #528]!	; 0x210

00010e34 <rawmemchr@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #520]!	; 0x208

00010e40 <iswprint@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #512]!	; 0x200

00010e4c <readlink@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #504]!	; 0x1f8

00010e58 <fwrite@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #496]!	; 0x1f0

00010e64 <lseek64@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e70 <__ctype_get_mb_cur_max@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #480]!	; 0x1e0

00010e7c <__fpending@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #472]!	; 0x1d8

00010e88 <mbrtowc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #464]!	; 0x1d0

00010e94 <error@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea0 <malloc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #448]!	; 0x1c0

00010eac <__libc_start_main@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb8 <__freading@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec4 <__gmon_start__@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed0 <getopt_long@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #416]!	; 0x1a0

00010edc <__ctype_b_loc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #408]!	; 0x198

00010ee8 <getcwd@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #400]!	; 0x190

00010ef4 <exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #392]!	; 0x188

00010f00 <bcmp@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #384]!	; 0x180

00010f0c <strlen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #376]!	; 0x178

00010f18 <__errno_location@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #368]!	; 0x170

00010f24 <__cxa_atexit@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #360]!	; 0x168

00010f30 <memset@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #352]!	; 0x160

00010f3c <__printf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #344]!	; 0x158

00010f48 <fileno@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #336]!	; 0x150

00010f54 <__fprintf_chk@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #328]!	; 0x148

00010f60 <fclose@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #320]!	; 0x140

00010f6c <fseeko64@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #312]!	; 0x138

00010f78 <__overflow@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #304]!	; 0x130

00010f84 <setlocale@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #296]!	; 0x128

00010f90 <strrchr@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #288]!	; 0x120

00010f9c <nl_langinfo@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #280]!	; 0x118

00010fa8 <bindtextdomain@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #272]!	; 0x110

00010fb4 <__xstat64@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #264]!	; 0x108

00010fc0 <strncmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #256]!	; 0x100

00010fcc <abort@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #248]!	; 0xf8

00010fd8 <strspn@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #240]!	; 0xf0

00010fe4 <__mempcpy_chk@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #232]!	; 0xe8

Disassembly of section .text:

00010ff0 <.text>:
   10ff0:	mov	fp, #0
   10ff4:	mov	lr, #0
   10ff8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ffc:	mov	r2, sp
   11000:	push	{r2}		; (str r2, [sp, #-4]!)
   11004:	push	{r0}		; (str r0, [sp, #-4]!)
   11008:	ldr	ip, [pc, #16]	; 11020 <__mempcpy_chk@plt+0x3c>
   1100c:	push	{ip}		; (str ip, [sp, #-4]!)
   11010:	ldr	r0, [pc, #12]	; 11024 <__mempcpy_chk@plt+0x40>
   11014:	ldr	r3, [pc, #12]	; 11028 <__mempcpy_chk@plt+0x44>
   11018:	bl	10eac <__libc_start_main@plt>
   1101c:	bl	10fcc <abort@plt>
   11020:	andeq	r6, r1, r0, lsr #26
   11024:	andeq	r1, r1, ip, asr r3
   11028:	andeq	r6, r1, r0, asr #25
   1102c:	ldr	r3, [pc, #20]	; 11048 <__mempcpy_chk@plt+0x64>
   11030:	ldr	r2, [pc, #20]	; 1104c <__mempcpy_chk@plt+0x68>
   11034:	add	r3, pc, r3
   11038:	ldr	r2, [r3, r2]
   1103c:	cmp	r2, #0
   11040:	bxeq	lr
   11044:	b	10ec4 <__gmon_start__@plt>
   11048:	andeq	r6, r1, r4, asr #31
   1104c:	ldrdeq	r0, [r0], -r8
   11050:	ldr	r0, [pc, #24]	; 11070 <__mempcpy_chk@plt+0x8c>
   11054:	ldr	r3, [pc, #24]	; 11074 <__mempcpy_chk@plt+0x90>
   11058:	cmp	r3, r0
   1105c:	bxeq	lr
   11060:	ldr	r3, [pc, #16]	; 11078 <__mempcpy_chk@plt+0x94>
   11064:	cmp	r3, #0
   11068:	bxeq	lr
   1106c:	bx	r3
   11070:	andeq	r8, r2, r0, lsr r1
   11074:	andeq	r8, r2, r0, lsr r1
   11078:	andeq	r0, r0, r0
   1107c:	ldr	r0, [pc, #36]	; 110a8 <__mempcpy_chk@plt+0xc4>
   11080:	ldr	r1, [pc, #36]	; 110ac <__mempcpy_chk@plt+0xc8>
   11084:	sub	r1, r1, r0
   11088:	asr	r1, r1, #2
   1108c:	add	r1, r1, r1, lsr #31
   11090:	asrs	r1, r1, #1
   11094:	bxeq	lr
   11098:	ldr	r3, [pc, #16]	; 110b0 <__mempcpy_chk@plt+0xcc>
   1109c:	cmp	r3, #0
   110a0:	bxeq	lr
   110a4:	bx	r3
   110a8:	andeq	r8, r2, r0, lsr r1
   110ac:	andeq	r8, r2, r0, lsr r1
   110b0:	andeq	r0, r0, r0
   110b4:	push	{r4, lr}
   110b8:	ldr	r4, [pc, #24]	; 110d8 <__mempcpy_chk@plt+0xf4>
   110bc:	ldrb	r3, [r4]
   110c0:	cmp	r3, #0
   110c4:	popne	{r4, pc}
   110c8:	bl	11050 <__mempcpy_chk@plt+0x6c>
   110cc:	mov	r3, #1
   110d0:	strb	r3, [r4]
   110d4:	pop	{r4, pc}
   110d8:	andeq	r8, r2, r8, asr #2
   110dc:	b	1107c <__mempcpy_chk@plt+0x98>
   110e0:	push	{fp, lr}
   110e4:	mov	fp, sp
   110e8:	sub	sp, sp, #56	; 0x38
   110ec:	mov	r4, r0
   110f0:	cmp	r0, #0
   110f4:	bne	11318 <__mempcpy_chk@plt+0x334>
   110f8:	movw	r1, #28019	; 0x6d73
   110fc:	mov	r0, #0
   11100:	mov	r2, #5
   11104:	movt	r1, #1
   11108:	bl	10e10 <dcgettext@plt>
   1110c:	mov	r1, r0
   11110:	movw	r0, #33108	; 0x8154
   11114:	movt	r0, #2
   11118:	ldr	r2, [r0]
   1111c:	mov	r0, #1
   11120:	bl	10f3c <__printf_chk@plt>
   11124:	movw	r1, #28050	; 0x6d92
   11128:	mov	r0, #0
   1112c:	mov	r2, #5
   11130:	movt	r1, #1
   11134:	bl	10e10 <dcgettext@plt>
   11138:	movw	r7, #33092	; 0x8144
   1113c:	movt	r7, #2
   11140:	ldr	r1, [r7]
   11144:	bl	10d98 <fputs_unlocked@plt>
   11148:	movw	r1, #28106	; 0x6dca
   1114c:	mov	r0, #0
   11150:	mov	r2, #5
   11154:	movt	r1, #1
   11158:	bl	10e10 <dcgettext@plt>
   1115c:	ldr	r1, [r7]
   11160:	bl	10d98 <fputs_unlocked@plt>
   11164:	movw	r1, #28543	; 0x6f7f
   11168:	mov	r0, #0
   1116c:	mov	r2, #5
   11170:	movt	r1, #1
   11174:	bl	10e10 <dcgettext@plt>
   11178:	ldr	r1, [r7]
   1117c:	bl	10d98 <fputs_unlocked@plt>
   11180:	movw	r1, #29064	; 0x7188
   11184:	mov	r0, #0
   11188:	mov	r2, #5
   1118c:	movt	r1, #1
   11190:	bl	10e10 <dcgettext@plt>
   11194:	ldr	r1, [r7]
   11198:	bl	10d98 <fputs_unlocked@plt>
   1119c:	movw	r1, #29109	; 0x71b5
   111a0:	mov	r0, #0
   111a4:	mov	r2, #5
   111a8:	movt	r1, #1
   111ac:	bl	10e10 <dcgettext@plt>
   111b0:	ldr	r1, [r7]
   111b4:	bl	10d98 <fputs_unlocked@plt>
   111b8:	movw	r0, #29896	; 0x74c8
   111bc:	mov	r2, #48	; 0x30
   111c0:	mov	r6, sp
   111c4:	movw	r5, #29163	; 0x71eb
   111c8:	movt	r0, #1
   111cc:	movt	r5, #1
   111d0:	add	r1, r0, #32
   111d4:	add	r3, r0, #16
   111d8:	vld1.64	{d18-d19}, [r0], r2
   111dc:	vld1.64	{d16-d17}, [r1]
   111e0:	vld1.64	{d20-d21}, [r3]
   111e4:	vldr	d22, [r0]
   111e8:	add	r1, r6, #32
   111ec:	add	r0, r6, #16
   111f0:	vst1.64	{d16-d17}, [r1]
   111f4:	movw	r1, #29297	; 0x7271
   111f8:	vst1.64	{d20-d21}, [r0]
   111fc:	mov	r0, r6
   11200:	movt	r1, #1
   11204:	vst1.64	{d18-d19}, [r0], r2
   11208:	vstr	d22, [r0]
   1120c:	mov	r0, r5
   11210:	bl	10db0 <strcmp@plt>
   11214:	cmp	r0, #0
   11218:	ldrne	r1, [r6, #8]!
   1121c:	cmpne	r1, #0
   11220:	bne	1120c <__mempcpy_chk@plt+0x228>
   11224:	movw	r1, #29392	; 0x72d0
   11228:	ldr	r6, [r6, #4]
   1122c:	mov	r0, #0
   11230:	mov	r2, #5
   11234:	movt	r1, #1
   11238:	bl	10e10 <dcgettext@plt>
   1123c:	movw	r2, #29205	; 0x7215
   11240:	movw	r3, #29415	; 0x72e7
   11244:	mov	r1, r0
   11248:	mov	r0, #1
   1124c:	movt	r2, #1
   11250:	movt	r3, #1
   11254:	bl	10f3c <__printf_chk@plt>
   11258:	cmp	r6, #0
   1125c:	mov	r0, #5
   11260:	mov	r1, #0
   11264:	moveq	r6, r5
   11268:	bl	10f84 <setlocale@plt>
   1126c:	cmp	r0, #0
   11270:	beq	112a8 <__mempcpy_chk@plt+0x2c4>
   11274:	movw	r1, #29455	; 0x730f
   11278:	mov	r2, #3
   1127c:	movt	r1, #1
   11280:	bl	10fc0 <strncmp@plt>
   11284:	cmp	r0, #0
   11288:	beq	112a8 <__mempcpy_chk@plt+0x2c4>
   1128c:	movw	r1, #29459	; 0x7313
   11290:	mov	r0, #0
   11294:	mov	r2, #5
   11298:	movt	r1, #1
   1129c:	bl	10e10 <dcgettext@plt>
   112a0:	ldr	r1, [r7]
   112a4:	bl	10d98 <fputs_unlocked@plt>
   112a8:	movw	r1, #29530	; 0x735a
   112ac:	mov	r0, #0
   112b0:	mov	r2, #5
   112b4:	movt	r1, #1
   112b8:	bl	10e10 <dcgettext@plt>
   112bc:	movw	r2, #29415	; 0x72e7
   112c0:	mov	r1, r0
   112c4:	mov	r0, #1
   112c8:	mov	r3, r5
   112cc:	movt	r2, #1
   112d0:	bl	10f3c <__printf_chk@plt>
   112d4:	movw	r1, #29557	; 0x7375
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	movt	r1, #1
   112e4:	bl	10e10 <dcgettext@plt>
   112e8:	mov	r1, r0
   112ec:	movw	r0, #29325	; 0x728d
   112f0:	movw	r3, #28105	; 0x6dc9
   112f4:	cmp	r6, r5
   112f8:	mov	r2, r6
   112fc:	movt	r0, #1
   11300:	movt	r3, #1
   11304:	moveq	r3, r0
   11308:	mov	r0, #1
   1130c:	bl	10f3c <__printf_chk@plt>
   11310:	mov	r0, r4
   11314:	bl	10ef4 <exit@plt>
   11318:	movw	r0, #33088	; 0x8140
   1131c:	movw	r1, #27980	; 0x6d4c
   11320:	mov	r2, #5
   11324:	movt	r0, #2
   11328:	movt	r1, #1
   1132c:	ldr	r5, [r0]
   11330:	mov	r0, #0
   11334:	bl	10e10 <dcgettext@plt>
   11338:	mov	r2, r0
   1133c:	movw	r0, #33108	; 0x8154
   11340:	mov	r1, #1
   11344:	movt	r0, #2
   11348:	ldr	r3, [r0]
   1134c:	mov	r0, r5
   11350:	bl	10f54 <__fprintf_chk@plt>
   11354:	mov	r0, r4
   11358:	bl	10ef4 <exit@plt>
   1135c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11360:	add	fp, sp, #28
   11364:	sub	sp, sp, #20
   11368:	mov	r5, r0
   1136c:	ldr	r0, [r1]
   11370:	mov	r4, r1
   11374:	bl	13878 <__mempcpy_chk@plt+0x2894>
   11378:	movw	r1, #28105	; 0x6dc9
   1137c:	mov	r0, #6
   11380:	movt	r1, #1
   11384:	bl	10f84 <setlocale@plt>
   11388:	movw	r6, #29209	; 0x7219
   1138c:	movw	r1, #29172	; 0x71f4
   11390:	movt	r6, #1
   11394:	movt	r1, #1
   11398:	mov	r0, r6
   1139c:	bl	10fa8 <bindtextdomain@plt>
   113a0:	mov	r0, r6
   113a4:	bl	10e28 <textdomain@plt>
   113a8:	movw	r0, #8580	; 0x2184
   113ac:	movt	r0, #1
   113b0:	bl	16d24 <__mempcpy_chk@plt+0x5d40>
   113b4:	movw	r9, #29196	; 0x720c
   113b8:	movw	r8, #29720	; 0x7418
   113bc:	mov	r0, #10
   113c0:	mvn	r7, #0
   113c4:	mov	r6, #0
   113c8:	mov	sl, #1
   113cc:	str	r0, [sp, #12]
   113d0:	movt	r9, #1
   113d4:	movt	r8, #1
   113d8:	mov	r0, r5
   113dc:	mov	r1, r4
   113e0:	mov	r2, r9
   113e4:	mov	r3, r8
   113e8:	str	r6, [sp]
   113ec:	bl	10ed0 <getopt_long@plt>
   113f0:	cmp	r0, #100	; 0x64
   113f4:	ble	114b8 <__mempcpy_chk@plt+0x4d4>
   113f8:	sub	r0, r0, #101	; 0x65
   113fc:	cmp	r0, #21
   11400:	bhi	1178c <__mempcpy_chk@plt+0x7a8>
   11404:	add	r1, pc, #0
   11408:	ldr	pc, [r1, r0, lsl #2]
   1140c:	muleq	r1, r8, r4
   11410:	andeq	r1, r1, r0, lsr #9
   11414:	andeq	r1, r1, ip, lsl #15
   11418:	andeq	r1, r1, ip, lsl #15
   1141c:	andeq	r1, r1, ip, lsl #15
   11420:	andeq	r1, r1, ip, lsl #15
   11424:	andeq	r1, r1, ip, lsl #15
   11428:	andeq	r1, r1, ip, lsl #15
   1142c:	muleq	r1, r0, r4
   11430:	andeq	r1, r1, r4, ror r4
   11434:	andeq	r1, r1, ip, lsl #15
   11438:	andeq	r1, r1, ip, lsl #15
   1143c:	andeq	r1, r1, r4, ror #8
   11440:	andeq	r1, r1, ip, lsl #15
   11444:	andeq	r1, r1, r4, ror #8
   11448:	andeq	r1, r1, ip, lsl #15
   1144c:	andeq	r1, r1, ip, lsl #15
   11450:	andeq	r1, r1, r8, lsr #9
   11454:	andeq	r1, r1, ip, lsl #15
   11458:	andeq	r1, r1, ip, lsl #15
   1145c:	andeq	r1, r1, ip, lsl #15
   11460:	andeq	r1, r1, r4, lsl #9
   11464:	movw	r0, #33097	; 0x8149
   11468:	movt	r0, #2
   1146c:	strb	r6, [r0, #1]
   11470:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11474:	movw	r0, #33097	; 0x8149
   11478:	movt	r0, #2
   1147c:	strb	sl, [r0]
   11480:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11484:	mov	r0, #0
   11488:	str	r0, [sp, #12]
   1148c:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11490:	mov	r7, #2
   11494:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11498:	mov	r7, #0
   1149c:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   114a0:	mov	r7, #1
   114a4:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   114a8:	movw	r0, #33097	; 0x8149
   114ac:	movt	r0, #2
   114b0:	strb	sl, [r0, #1]
   114b4:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   114b8:	cmn	r0, #1
   114bc:	bne	1172c <__mempcpy_chk@plt+0x748>
   114c0:	movw	r8, #33080	; 0x8138
   114c4:	movt	r8, #2
   114c8:	ldr	r0, [r8]
   114cc:	cmp	r0, r5
   114d0:	bge	11794 <__mempcpy_chk@plt+0x7b0>
   114d4:	sub	r1, r5, r0
   114d8:	cmp	r1, #2
   114dc:	blt	1152c <__mempcpy_chk@plt+0x548>
   114e0:	movw	r1, #33097	; 0x8149
   114e4:	movt	r1, #2
   114e8:	ldrb	r1, [r1]
   114ec:	cmp	r1, #1
   114f0:	bne	1151c <__mempcpy_chk@plt+0x538>
   114f4:	movw	r1, #29251	; 0x7243
   114f8:	mov	r0, #0
   114fc:	mov	r2, #5
   11500:	movt	r1, #1
   11504:	bl	10e10 <dcgettext@plt>
   11508:	mov	r2, r0
   1150c:	mov	r0, #0
   11510:	mov	r1, #0
   11514:	bl	10e94 <error@plt>
   11518:	ldr	r0, [r8]
   1151c:	movw	r2, #33097	; 0x8149
   11520:	mov	r1, #0
   11524:	movt	r2, #2
   11528:	strb	r1, [r2]
   1152c:	mov	r1, #0
   11530:	cmp	r0, r5
   11534:	str	r1, [sp, #16]
   11538:	bge	11720 <__mempcpy_chk@plt+0x73c>
   1153c:	mov	r1, #0
   11540:	cmn	r7, #1
   11544:	beq	1162c <__mempcpy_chk@plt+0x648>
   11548:	movw	sl, #33092	; 0x8144
   1154c:	str	r1, [sp, #16]
   11550:	movt	sl, #2
   11554:	b	11584 <__mempcpy_chk@plt+0x5a0>
   11558:	add	r2, r1, #1
   1155c:	str	r2, [r0, #20]
   11560:	ldr	r0, [sp, #12]
   11564:	strb	r0, [r1]
   11568:	mov	r0, r6
   1156c:	bl	1233c <__mempcpy_chk@plt+0x1358>
   11570:	ldr	r0, [r8]
   11574:	add	r0, r0, #1
   11578:	cmp	r0, r5
   1157c:	str	r0, [r8]
   11580:	bge	11720 <__mempcpy_chk@plt+0x73c>
   11584:	ldr	r9, [r4, r0, lsl #2]
   11588:	mov	r1, r7
   1158c:	mov	r0, r9
   11590:	bl	11998 <__mempcpy_chk@plt+0x9b4>
   11594:	cmp	r0, #0
   11598:	beq	115dc <__mempcpy_chk@plt+0x5f8>
   1159c:	ldr	r1, [sl]
   115a0:	mov	r6, r0
   115a4:	bl	10d98 <fputs_unlocked@plt>
   115a8:	movw	r0, #33097	; 0x8149
   115ac:	movt	r0, #2
   115b0:	ldrb	r0, [r0]
   115b4:	cmp	r0, #0
   115b8:	bne	11568 <__mempcpy_chk@plt+0x584>
   115bc:	ldr	r0, [sl]
   115c0:	ldr	r1, [r0, #20]
   115c4:	ldr	r2, [r0, #24]
   115c8:	cmp	r1, r2
   115cc:	bcc	11558 <__mempcpy_chk@plt+0x574>
   115d0:	ldr	r1, [sp, #12]
   115d4:	bl	10f78 <__overflow@plt>
   115d8:	b	11568 <__mempcpy_chk@plt+0x584>
   115dc:	movw	r0, #33097	; 0x8149
   115e0:	mov	r1, #1
   115e4:	movt	r0, #2
   115e8:	str	r1, [sp, #16]
   115ec:	ldrb	r0, [r0, #1]
   115f0:	cmp	r0, #1
   115f4:	bne	11570 <__mempcpy_chk@plt+0x58c>
   115f8:	bl	10f18 <__errno_location@plt>
   115fc:	ldr	r6, [r0]
   11600:	mov	r0, #0
   11604:	mov	r1, #3
   11608:	mov	r2, r9
   1160c:	bl	15590 <__mempcpy_chk@plt+0x45ac>
   11610:	movw	r2, #29985	; 0x7521
   11614:	mov	r3, r0
   11618:	mov	r0, #0
   1161c:	mov	r1, r6
   11620:	movt	r2, #1
   11624:	bl	10e94 <error@plt>
   11628:	b	11570 <__mempcpy_chk@plt+0x58c>
   1162c:	movw	r9, #29985	; 0x7521
   11630:	movw	sl, #33092	; 0x8144
   11634:	str	r1, [sp, #16]
   11638:	movt	r9, #1
   1163c:	movt	sl, #2
   11640:	b	11670 <__mempcpy_chk@plt+0x68c>
   11644:	add	r2, r1, #1
   11648:	str	r2, [r0, #20]
   1164c:	ldr	r0, [sp, #12]
   11650:	strb	r0, [r1]
   11654:	mov	r0, r7
   11658:	bl	1233c <__mempcpy_chk@plt+0x1358>
   1165c:	ldr	r0, [r8]
   11660:	add	r0, r0, #1
   11664:	cmp	r0, r5
   11668:	str	r0, [r8]
   1166c:	bge	11720 <__mempcpy_chk@plt+0x73c>
   11670:	ldr	r6, [r4, r0, lsl #2]
   11674:	mov	r1, #63	; 0x3f
   11678:	mov	r0, r6
   1167c:	bl	117c0 <__mempcpy_chk@plt+0x7dc>
   11680:	cmp	r0, #0
   11684:	beq	116c8 <__mempcpy_chk@plt+0x6e4>
   11688:	ldr	r1, [sl]
   1168c:	mov	r7, r0
   11690:	bl	10d98 <fputs_unlocked@plt>
   11694:	movw	r0, #33097	; 0x8149
   11698:	movt	r0, #2
   1169c:	ldrb	r0, [r0]
   116a0:	cmp	r0, #0
   116a4:	bne	11654 <__mempcpy_chk@plt+0x670>
   116a8:	ldr	r0, [sl]
   116ac:	ldr	r1, [r0, #20]
   116b0:	ldr	r2, [r0, #24]
   116b4:	cmp	r1, r2
   116b8:	bcc	11644 <__mempcpy_chk@plt+0x660>
   116bc:	ldr	r1, [sp, #12]
   116c0:	bl	10f78 <__overflow@plt>
   116c4:	b	11654 <__mempcpy_chk@plt+0x670>
   116c8:	movw	r0, #33097	; 0x8149
   116cc:	movt	r0, #2
   116d0:	ldrb	r0, [r0, #1]
   116d4:	cmp	r0, #1
   116d8:	bne	11714 <__mempcpy_chk@plt+0x730>
   116dc:	mov	r0, #1
   116e0:	str	r0, [sp, #16]
   116e4:	bl	10f18 <__errno_location@plt>
   116e8:	ldr	r7, [r0]
   116ec:	mov	r0, #0
   116f0:	mov	r1, #3
   116f4:	mov	r2, r6
   116f8:	bl	15590 <__mempcpy_chk@plt+0x45ac>
   116fc:	mov	r3, r0
   11700:	mov	r0, #0
   11704:	mov	r1, r7
   11708:	mov	r2, r9
   1170c:	bl	10e94 <error@plt>
   11710:	b	1165c <__mempcpy_chk@plt+0x678>
   11714:	mov	r0, #1
   11718:	str	r0, [sp, #16]
   1171c:	b	1165c <__mempcpy_chk@plt+0x678>
   11720:	ldr	r0, [sp, #16]
   11724:	sub	sp, fp, #28
   11728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1172c:	cmn	r0, #3
   11730:	bne	1177c <__mempcpy_chk@plt+0x798>
   11734:	movw	r0, #33000	; 0x80e8
   11738:	movw	r2, #29219	; 0x7223
   1173c:	mov	r1, #0
   11740:	movt	r0, #2
   11744:	movt	r2, #1
   11748:	str	r1, [sp, #4]
   1174c:	movw	r1, #29163	; 0x71eb
   11750:	movt	r1, #1
   11754:	ldr	r3, [r0]
   11758:	movw	r0, #33092	; 0x8144
   1175c:	str	r2, [sp]
   11760:	movw	r2, #29205	; 0x7215
   11764:	movt	r0, #2
   11768:	movt	r2, #1
   1176c:	ldr	r0, [r0]
   11770:	bl	15e74 <__mempcpy_chk@plt+0x4e90>
   11774:	mov	r0, #0
   11778:	bl	10ef4 <exit@plt>
   1177c:	cmn	r0, #2
   11780:	bne	1178c <__mempcpy_chk@plt+0x7a8>
   11784:	mov	r0, #0
   11788:	bl	110e0 <__mempcpy_chk@plt+0xfc>
   1178c:	mov	r0, #1
   11790:	bl	110e0 <__mempcpy_chk@plt+0xfc>
   11794:	movw	r1, #29235	; 0x7233
   11798:	mov	r0, #0
   1179c:	mov	r2, #5
   117a0:	movt	r1, #1
   117a4:	bl	10e10 <dcgettext@plt>
   117a8:	mov	r2, r0
   117ac:	mov	r0, #0
   117b0:	mov	r1, #0
   117b4:	bl	10e94 <error@plt>
   117b8:	mov	r0, #1
   117bc:	bl	110e0 <__mempcpy_chk@plt+0xfc>
   117c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   117c4:	add	fp, sp, #24
   117c8:	sub	sp, sp, #128	; 0x80
   117cc:	mov	r5, r0
   117d0:	cmp	r1, #0
   117d4:	beq	11854 <__mempcpy_chk@plt+0x870>
   117d8:	cmp	r1, #1024	; 0x400
   117dc:	movw	r4, #1025	; 0x401
   117e0:	addls	r4, r1, #1
   117e4:	mov	r0, r4
   117e8:	bl	1667c <__mempcpy_chk@plt+0x5698>
   117ec:	cmp	r0, #0
   117f0:	beq	118dc <__mempcpy_chk@plt+0x8f8>
   117f4:	mov	r6, r0
   117f8:	b	11814 <__mempcpy_chk@plt+0x830>
   117fc:	lsl	r4, r4, #1
   11800:	mov	r0, r4
   11804:	bl	1667c <__mempcpy_chk@plt+0x5698>
   11808:	mov	r6, r0
   1180c:	cmp	r0, #0
   11810:	beq	118dc <__mempcpy_chk@plt+0x8f8>
   11814:	mov	r0, r5
   11818:	mov	r1, r6
   1181c:	mov	r2, r4
   11820:	bl	10e4c <readlink@plt>
   11824:	cmn	r0, #1
   11828:	ble	118ec <__mempcpy_chk@plt+0x908>
   1182c:	cmp	r0, r4
   11830:	bcc	11944 <__mempcpy_chk@plt+0x960>
   11834:	mov	r0, r6
   11838:	bl	1233c <__mempcpy_chk@plt+0x1358>
   1183c:	cmn	r4, #-1073741823	; 0xc0000001
   11840:	bls	117fc <__mempcpy_chk@plt+0x818>
   11844:	cmn	r4, #-2147483647	; 0x80000001
   11848:	mvn	r4, #-2147483648	; 0x80000000
   1184c:	bcc	11800 <__mempcpy_chk@plt+0x81c>
   11850:	b	118dc <__mempcpy_chk@plt+0x8f8>
   11854:	mov	r4, #128	; 0x80
   11858:	mov	r8, sp
   1185c:	mov	r6, #0
   11860:	cmp	r4, #128	; 0x80
   11864:	mov	r7, r8
   11868:	beq	118a0 <__mempcpy_chk@plt+0x8bc>
   1186c:	b	11888 <__mempcpy_chk@plt+0x8a4>
   11870:	lsl	r0, r4, #1
   11874:	mov	r4, r0
   11878:	mov	r6, #0
   1187c:	cmp	r4, #128	; 0x80
   11880:	mov	r7, r8
   11884:	beq	118a0 <__mempcpy_chk@plt+0x8bc>
   11888:	mov	r0, r4
   1188c:	bl	1667c <__mempcpy_chk@plt+0x5698>
   11890:	mov	r7, r0
   11894:	cmp	r0, #0
   11898:	mov	r6, r0
   1189c:	beq	118dc <__mempcpy_chk@plt+0x8f8>
   118a0:	mov	r0, r5
   118a4:	mov	r1, r7
   118a8:	mov	r2, r4
   118ac:	bl	10e4c <readlink@plt>
   118b0:	cmp	r0, #0
   118b4:	bmi	118ec <__mempcpy_chk@plt+0x908>
   118b8:	cmp	r0, r4
   118bc:	bcc	11904 <__mempcpy_chk@plt+0x920>
   118c0:	mov	r0, r6
   118c4:	bl	1233c <__mempcpy_chk@plt+0x1358>
   118c8:	cmp	r4, #1073741824	; 0x40000000
   118cc:	bcc	11870 <__mempcpy_chk@plt+0x88c>
   118d0:	mvn	r0, #-2147483648	; 0x80000000
   118d4:	cmn	r4, #-2147483647	; 0x80000001
   118d8:	bcc	11874 <__mempcpy_chk@plt+0x890>
   118dc:	bl	10f18 <__errno_location@plt>
   118e0:	mov	r1, #12
   118e4:	str	r1, [r0]
   118e8:	b	118f4 <__mempcpy_chk@plt+0x910>
   118ec:	mov	r0, r6
   118f0:	bl	1233c <__mempcpy_chk@plt+0x1358>
   118f4:	mov	r5, #0
   118f8:	mov	r0, r5
   118fc:	sub	sp, fp, #24
   11900:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11904:	mov	r5, #0
   11908:	add	r8, r0, #1
   1190c:	cmp	r6, #0
   11910:	strb	r5, [r7, r0]
   11914:	beq	11968 <__mempcpy_chk@plt+0x984>
   11918:	cmp	r8, r4
   1191c:	bcs	11958 <__mempcpy_chk@plt+0x974>
   11920:	mov	r0, r6
   11924:	mov	r1, r8
   11928:	bl	166ac <__mempcpy_chk@plt+0x56c8>
   1192c:	cmp	r0, #0
   11930:	mov	r5, r0
   11934:	moveq	r5, r6
   11938:	mov	r0, r5
   1193c:	sub	sp, fp, #24
   11940:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11944:	mov	r1, #0
   11948:	add	r8, r0, #1
   1194c:	strb	r1, [r6, r0]
   11950:	cmp	r8, r4
   11954:	bcc	11920 <__mempcpy_chk@plt+0x93c>
   11958:	mov	r5, r6
   1195c:	mov	r0, r5
   11960:	sub	sp, fp, #24
   11964:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11968:	mov	r0, r8
   1196c:	bl	1667c <__mempcpy_chk@plt+0x5698>
   11970:	cmp	r0, #0
   11974:	beq	118f8 <__mempcpy_chk@plt+0x914>
   11978:	mov	r1, r7
   1197c:	mov	r2, r8
   11980:	mov	r4, r0
   11984:	bl	10df8 <memcpy@plt>
   11988:	mov	r5, r4
   1198c:	mov	r0, r5
   11990:	sub	sp, fp, #24
   11994:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1199c:	add	fp, sp, #28
   119a0:	sub	sp, sp, #180	; 0xb4
   119a4:	sub	sp, sp, #3072	; 0xc00
   119a8:	and	r7, r1, #3
   119ac:	mov	r8, r0
   119b0:	sub	r0, r7, #1
   119b4:	tst	r7, r0
   119b8:	bne	11a84 <__mempcpy_chk@plt+0xaa0>
   119bc:	cmp	r8, #0
   119c0:	beq	11a84 <__mempcpy_chk@plt+0xaa0>
   119c4:	ldrb	r0, [r8]
   119c8:	cmp	r0, #0
   119cc:	beq	12000 <__mempcpy_chk@plt+0x101c>
   119d0:	mov	r4, r1
   119d4:	mov	r1, #1024	; 0x400
   119d8:	sub	lr, fp, #1024	; 0x400
   119dc:	cmp	r0, #47	; 0x2f
   119e0:	str	r1, [fp, #-1060]	; 0xfffffbdc
   119e4:	str	r1, [sp, #52]	; 0x34
   119e8:	str	r1, [sp, #1188]	; 0x4a4
   119ec:	add	r1, sp, #1184	; 0x4a0
   119f0:	sub	r2, lr, #40	; 0x28
   119f4:	add	r1, r1, #8
   119f8:	add	r2, r2, #8
   119fc:	str	r1, [sp, #16]
   11a00:	str	r1, [sp, #1184]	; 0x4a0
   11a04:	add	r1, sp, #48	; 0x30
   11a08:	str	r2, [sp, #12]
   11a0c:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11a10:	add	r5, r1, #8
   11a14:	mov	r0, r5
   11a18:	str	r5, [sp, #48]	; 0x30
   11a1c:	str	r5, [sp, #8]
   11a20:	bne	1200c <__mempcpy_chk@plt+0x1028>
   11a24:	mov	r1, r8
   11a28:	mov	r2, #0
   11a2c:	mov	r3, #1024	; 0x400
   11a30:	bl	10fe4 <__mempcpy_chk@plt>
   11a34:	mov	r6, r0
   11a38:	mov	r0, #47	; 0x2f
   11a3c:	strb	r0, [r6], #1
   11a40:	ldrb	r0, [r8]
   11a44:	cmp	r0, #0
   11a48:	beq	12038 <__mempcpy_chk@plt+0x1054>
   11a4c:	and	r1, r4, #4
   11a50:	add	r9, sp, #48	; 0x30
   11a54:	str	r7, [sp, #32]
   11a58:	str	r1, [sp, #40]	; 0x28
   11a5c:	mov	r1, #0
   11a60:	str	r1, [sp, #24]
   11a64:	mov	r1, #0
   11a68:	str	r1, [sp, #36]	; 0x24
   11a6c:	mov	r1, #0
   11a70:	str	r1, [sp, #20]
   11a74:	uxtb	r1, r0
   11a78:	cmp	r1, #47	; 0x2f
   11a7c:	beq	11abc <__mempcpy_chk@plt+0xad8>
   11a80:	b	11ac8 <__mempcpy_chk@plt+0xae4>
   11a84:	bl	10f18 <__errno_location@plt>
   11a88:	mov	r1, #22
   11a8c:	mov	r4, #0
   11a90:	str	r1, [r0]
   11a94:	mov	r0, r4
   11a98:	sub	sp, fp, #28
   11a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11aa0:	mov	r8, sl
   11aa4:	ldrb	r0, [r8]
   11aa8:	cmp	r0, #0
   11aac:	beq	12040 <__mempcpy_chk@plt+0x105c>
   11ab0:	uxtb	r1, r0
   11ab4:	cmp	r1, #47	; 0x2f
   11ab8:	bne	11ac8 <__mempcpy_chk@plt+0xae4>
   11abc:	ldrb	r0, [r8, #1]!
   11ac0:	cmp	r0, #47	; 0x2f
   11ac4:	beq	11abc <__mempcpy_chk@plt+0xad8>
   11ac8:	mov	r1, r0
   11acc:	mov	sl, r8
   11ad0:	b	11ad8 <__mempcpy_chk@plt+0xaf4>
   11ad4:	ldrb	r1, [sl, #1]!
   11ad8:	uxtb	r1, r1
   11adc:	cmp	r1, #0
   11ae0:	cmpne	r1, #47	; 0x2f
   11ae4:	bne	11ad4 <__mempcpy_chk@plt+0xaf0>
   11ae8:	sub	r2, sl, r8
   11aec:	cmp	r2, #1
   11af0:	beq	11b08 <__mempcpy_chk@plt+0xb24>
   11af4:	cmp	r2, #2
   11af8:	beq	11b28 <__mempcpy_chk@plt+0xb44>
   11afc:	cmp	r2, #0
   11b00:	bne	11b80 <__mempcpy_chk@plt+0xb9c>
   11b04:	b	12040 <__mempcpy_chk@plt+0x105c>
   11b08:	uxtb	r0, r0
   11b0c:	cmp	r0, #46	; 0x2e
   11b10:	bne	11b80 <__mempcpy_chk@plt+0xb9c>
   11b14:	mov	r8, sl
   11b18:	ldrb	r0, [r8]
   11b1c:	cmp	r0, #0
   11b20:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11b24:	b	12040 <__mempcpy_chk@plt+0x105c>
   11b28:	uxtb	r0, r0
   11b2c:	cmp	r0, #46	; 0x2e
   11b30:	bne	11b80 <__mempcpy_chk@plt+0xb9c>
   11b34:	ldrb	r0, [r8, #1]
   11b38:	cmp	r0, #46	; 0x2e
   11b3c:	bne	11b80 <__mempcpy_chk@plt+0xb9c>
   11b40:	add	r0, r5, #1
   11b44:	cmp	r6, r0
   11b48:	bls	11e30 <__mempcpy_chk@plt+0xe4c>
   11b4c:	sub	r0, r6, #1
   11b50:	mov	r6, r0
   11b54:	cmp	r0, r5
   11b58:	bls	11fd8 <__mempcpy_chk@plt+0xff4>
   11b5c:	mov	r0, r6
   11b60:	ldrb	r1, [r0, #-1]!
   11b64:	cmp	r1, #47	; 0x2f
   11b68:	bne	11b50 <__mempcpy_chk@plt+0xb6c>
   11b6c:	mov	r8, sl
   11b70:	ldrb	r0, [r8]
   11b74:	cmp	r0, #0
   11b78:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11b7c:	b	12040 <__mempcpy_chk@plt+0x105c>
   11b80:	ldrb	r0, [r6, #-1]
   11b84:	add	r4, r2, #2
   11b88:	str	r2, [sp, #44]	; 0x2c
   11b8c:	cmp	r0, #47	; 0x2f
   11b90:	movne	r0, #47	; 0x2f
   11b94:	strbne	r0, [r6], #1
   11b98:	ldr	r0, [sp, #52]	; 0x34
   11b9c:	add	r0, r5, r0
   11ba0:	sub	r0, r0, r6
   11ba4:	cmp	r0, r4
   11ba8:	bcs	11be0 <__mempcpy_chk@plt+0xbfc>
   11bac:	mov	r0, r9
   11bb0:	bl	15930 <__mempcpy_chk@plt+0x494c>
   11bb4:	cmp	r0, #0
   11bb8:	beq	12140 <__mempcpy_chk@plt+0x115c>
   11bbc:	sub	r0, r6, r5
   11bc0:	ldr	r5, [sp, #48]	; 0x30
   11bc4:	ldr	r1, [sp, #52]	; 0x34
   11bc8:	add	r6, r5, r0
   11bcc:	add	r0, r5, r1
   11bd0:	sub	r0, r0, r6
   11bd4:	cmp	r0, r4
   11bd8:	bcc	11bac <__mempcpy_chk@plt+0xbc8>
   11bdc:	ldr	r2, [sp, #44]	; 0x2c
   11be0:	mov	r0, r6
   11be4:	mov	r1, r8
   11be8:	mvn	r3, #0
   11bec:	bl	10fe4 <__mempcpy_chk@plt>
   11bf0:	mov	r6, r0
   11bf4:	mov	r0, #0
   11bf8:	strb	r0, [r6]
   11bfc:	ldr	r0, [sp, #40]	; 0x28
   11c00:	cmp	r0, #0
   11c04:	bne	11c68 <__mempcpy_chk@plt+0xc84>
   11c08:	ldr	r0, [sp, #1188]	; 0x4a4
   11c0c:	ldr	r7, [sp, #1184]	; 0x4a0
   11c10:	sub	r9, r0, #1
   11c14:	mov	r0, r5
   11c18:	mov	r1, r7
   11c1c:	mov	r2, r9
   11c20:	bl	10e4c <readlink@plt>
   11c24:	cmp	r0, r9
   11c28:	blt	11c40 <__mempcpy_chk@plt+0xc5c>
   11c2c:	add	r0, sp, #1184	; 0x4a0
   11c30:	bl	158c0 <__mempcpy_chk@plt+0x48dc>
   11c34:	cmp	r0, #0
   11c38:	bne	11c08 <__mempcpy_chk@plt+0xc24>
   11c3c:	b	12140 <__mempcpy_chk@plt+0x115c>
   11c40:	mov	r4, r0
   11c44:	cmp	r0, #0
   11c48:	add	r9, sp, #48	; 0x30
   11c4c:	bmi	11c68 <__mempcpy_chk@plt+0xc84>
   11c50:	ldr	r0, [sp, #24]
   11c54:	cmp	r0, #19
   11c58:	bgt	11d04 <__mempcpy_chk@plt+0xd20>
   11c5c:	add	r0, r0, #1
   11c60:	str	r0, [sp, #24]
   11c64:	b	11eb4 <__mempcpy_chk@plt+0xed0>
   11c68:	ldr	r7, [sp, #32]
   11c6c:	cmp	r7, #2
   11c70:	beq	11aa0 <__mempcpy_chk@plt+0xabc>
   11c74:	ldrb	r0, [sl]
   11c78:	cmp	r0, #47	; 0x2f
   11c7c:	bne	11de4 <__mempcpy_chk@plt+0xe00>
   11c80:	mov	r2, sl
   11c84:	mov	r1, r2
   11c88:	ldrb	r3, [r2, #1]!
   11c8c:	cmp	r3, #47	; 0x2f
   11c90:	beq	11c84 <__mempcpy_chk@plt+0xca0>
   11c94:	cmp	r3, #46	; 0x2e
   11c98:	bne	11ddc <__mempcpy_chk@plt+0xdf8>
   11c9c:	add	r2, r1, #2
   11ca0:	ldrb	r3, [r2]
   11ca4:	cmp	r3, #47	; 0x2f
   11ca8:	beq	11c84 <__mempcpy_chk@plt+0xca0>
   11cac:	cmp	r3, #0
   11cb0:	beq	11ccc <__mempcpy_chk@plt+0xce8>
   11cb4:	cmp	r3, #46	; 0x2e
   11cb8:	bne	11de4 <__mempcpy_chk@plt+0xe00>
   11cbc:	ldrb	r1, [r1, #3]
   11cc0:	cmp	r1, #47	; 0x2f
   11cc4:	cmpne	r1, #0
   11cc8:	bne	11de4 <__mempcpy_chk@plt+0xe00>
   11ccc:	mov	r0, #47	; 0x2f
   11cd0:	mov	r1, r5
   11cd4:	mov	r2, #0
   11cd8:	mov	r3, #512	; 0x200
   11cdc:	strh	r0, [r6]
   11ce0:	mvn	r0, #99	; 0x63
   11ce4:	bl	10de0 <faccessat@plt>
   11ce8:	cmp	r0, #0
   11cec:	bne	11e60 <__mempcpy_chk@plt+0xe7c>
   11cf0:	mov	r8, sl
   11cf4:	ldrb	r0, [r8]
   11cf8:	cmp	r0, #0
   11cfc:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11d00:	b	12040 <__mempcpy_chk@plt+0x105c>
   11d04:	ldrb	r0, [r8]
   11d08:	add	lr, sp, #1024	; 0x400
   11d0c:	add	r2, lr, #56	; 0x38
   11d10:	cmp	r0, #0
   11d14:	beq	11eb4 <__mempcpy_chk@plt+0xed0>
   11d18:	ldr	r9, [sp, #44]	; 0x2c
   11d1c:	mov	r0, #0
   11d20:	mov	r1, r5
   11d24:	strb	r0, [r6, -r9]
   11d28:	ldrb	r0, [r5]
   11d2c:	cmp	r0, #0
   11d30:	movw	r0, #29967	; 0x750f
   11d34:	movt	r0, #1
   11d38:	moveq	r1, r0
   11d3c:	mov	r0, #3
   11d40:	bl	10fb4 <__xstat64@plt>
   11d44:	cmp	r0, #0
   11d48:	bne	12150 <__mempcpy_chk@plt+0x116c>
   11d4c:	rsb	r0, r9, #0
   11d50:	ldr	r9, [sp, #20]
   11d54:	ldrb	r1, [r8]
   11d58:	cmp	r9, #0
   11d5c:	strb	r1, [r6, r0]
   11d60:	bne	11d98 <__mempcpy_chk@plt+0xdb4>
   11d64:	movw	r0, #14424	; 0x3858
   11d68:	movw	r2, #14264	; 0x37b8
   11d6c:	movw	r3, #14320	; 0x37f0
   11d70:	mov	r1, #0
   11d74:	movt	r0, #1
   11d78:	movt	r2, #1
   11d7c:	movt	r3, #1
   11d80:	str	r0, [sp]
   11d84:	mov	r0, #7
   11d88:	bl	1285c <__mempcpy_chk@plt+0x1878>
   11d8c:	mov	r9, r0
   11d90:	cmp	r0, #0
   11d94:	beq	12140 <__mempcpy_chk@plt+0x115c>
   11d98:	add	lr, sp, #1024	; 0x400
   11d9c:	mov	r0, r9
   11da0:	mov	r1, r8
   11da4:	add	r2, lr, #56	; 0x38
   11da8:	bl	122ec <__mempcpy_chk@plt+0x1308>
   11dac:	cmp	r0, #0
   11db0:	str	r9, [sp, #20]
   11db4:	beq	11ea0 <__mempcpy_chk@plt+0xebc>
   11db8:	ldr	r7, [sp, #32]
   11dbc:	cmp	r7, #2
   11dc0:	bne	12144 <__mempcpy_chk@plt+0x1160>
   11dc4:	mov	r8, sl
   11dc8:	add	r9, sp, #48	; 0x30
   11dcc:	ldrb	r0, [r8]
   11dd0:	cmp	r0, #0
   11dd4:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11dd8:	b	12040 <__mempcpy_chk@plt+0x105c>
   11ddc:	cmp	r3, #0
   11de0:	beq	11ccc <__mempcpy_chk@plt+0xce8>
   11de4:	ldr	r1, [sp, #40]	; 0x28
   11de8:	cmp	r1, #0
   11dec:	beq	11e0c <__mempcpy_chk@plt+0xe28>
   11df0:	cmp	r0, #0
   11df4:	beq	11e44 <__mempcpy_chk@plt+0xe60>
   11df8:	mov	r8, sl
   11dfc:	ldrb	r0, [r8]
   11e00:	cmp	r0, #0
   11e04:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11e08:	b	12040 <__mempcpy_chk@plt+0x105c>
   11e0c:	bl	10f18 <__errno_location@plt>
   11e10:	ldr	r0, [r0]
   11e14:	cmp	r0, #22
   11e18:	bne	11e60 <__mempcpy_chk@plt+0xe7c>
   11e1c:	mov	r8, sl
   11e20:	ldrb	r0, [r8]
   11e24:	cmp	r0, #0
   11e28:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11e2c:	b	12040 <__mempcpy_chk@plt+0x105c>
   11e30:	mov	r8, sl
   11e34:	ldrb	r0, [r8]
   11e38:	cmp	r0, #0
   11e3c:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11e40:	b	12040 <__mempcpy_chk@plt+0x105c>
   11e44:	mvn	r0, #99	; 0x63
   11e48:	mov	r1, r5
   11e4c:	mov	r2, #0
   11e50:	mov	r3, #512	; 0x200
   11e54:	bl	10de0 <faccessat@plt>
   11e58:	cmp	r0, #0
   11e5c:	beq	11fec <__mempcpy_chk@plt+0x1008>
   11e60:	mov	r4, #1
   11e64:	cmp	r7, #1
   11e68:	bne	12060 <__mempcpy_chk@plt+0x107c>
   11e6c:	bl	10f18 <__errno_location@plt>
   11e70:	ldr	r0, [r0]
   11e74:	cmp	r0, #2
   11e78:	bne	12060 <__mempcpy_chk@plt+0x107c>
   11e7c:	movw	r1, #31103	; 0x797f
   11e80:	mov	r0, sl
   11e84:	movt	r1, #1
   11e88:	bl	10fd8 <strspn@plt>
   11e8c:	ldrb	r0, [sl, r0]
   11e90:	mov	r8, sl
   11e94:	cmp	r0, #0
   11e98:	beq	11aa4 <__mempcpy_chk@plt+0xac0>
   11e9c:	b	12060 <__mempcpy_chk@plt+0x107c>
   11ea0:	add	lr, sp, #1024	; 0x400
   11ea4:	mov	r0, r9
   11ea8:	mov	r1, r8
   11eac:	add	r2, lr, #56	; 0x38
   11eb0:	bl	12270 <__mempcpy_chk@plt+0x128c>
   11eb4:	mov	r0, #0
   11eb8:	strb	r0, [r7, r4]
   11ebc:	ldr	r0, [sp, #36]	; 0x24
   11ec0:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11ec4:	tst	r0, #1
   11ec8:	ldr	r0, [sp, #28]
   11ecc:	subne	r0, sl, r8
   11ed0:	str	r0, [sp, #28]
   11ed4:	mov	r0, sl
   11ed8:	bl	10f0c <strlen@plt>
   11edc:	mvn	r1, r4
   11ee0:	cmp	r0, r1
   11ee4:	bhi	12140 <__mempcpy_chk@plt+0x115c>
   11ee8:	str	r0, [sp, #44]	; 0x2c
   11eec:	add	r9, r0, r4
   11ef0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11ef4:	cmp	r0, r9
   11ef8:	bhi	11f20 <__mempcpy_chk@plt+0xf3c>
   11efc:	sub	lr, fp, #1024	; 0x400
   11f00:	sub	r0, lr, #40	; 0x28
   11f04:	bl	15930 <__mempcpy_chk@plt+0x494c>
   11f08:	cmp	r0, #0
   11f0c:	beq	12140 <__mempcpy_chk@plt+0x115c>
   11f10:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11f14:	cmp	r0, r9
   11f18:	bls	11efc <__mempcpy_chk@plt+0xf18>
   11f1c:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11f20:	ldr	r0, [sp, #36]	; 0x24
   11f24:	ldr	r1, [sp, #44]	; 0x2c
   11f28:	tst	r0, #1
   11f2c:	ldr	r0, [sp, #28]
   11f30:	add	r2, r1, #1
   11f34:	addne	sl, r8, r0
   11f38:	add	r0, r8, r4
   11f3c:	mov	r1, sl
   11f40:	bl	10dc8 <memmove@plt>
   11f44:	mov	r0, r8
   11f48:	mov	r1, r7
   11f4c:	mov	r2, r4
   11f50:	bl	10df8 <memcpy@plt>
   11f54:	ldrb	r0, [r7]
   11f58:	cmp	r0, #47	; 0x2f
   11f5c:	bne	11f9c <__mempcpy_chk@plt+0xfb8>
   11f60:	mov	r0, r5
   11f64:	mov	r1, r7
   11f68:	mov	r2, #0
   11f6c:	mvn	r3, #0
   11f70:	bl	10fe4 <__mempcpy_chk@plt>
   11f74:	mov	r6, r0
   11f78:	mov	r0, #47	; 0x2f
   11f7c:	strb	r0, [r6], #1
   11f80:	mov	r0, #1
   11f84:	str	r0, [sp, #36]	; 0x24
   11f88:	add	r9, sp, #48	; 0x30
   11f8c:	ldrb	r0, [r8]
   11f90:	cmp	r0, #0
   11f94:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11f98:	b	12040 <__mempcpy_chk@plt+0x105c>
   11f9c:	add	r0, r5, #1
   11fa0:	mov	r1, #1
   11fa4:	add	r9, sp, #48	; 0x30
   11fa8:	cmp	r6, r0
   11fac:	str	r1, [sp, #36]	; 0x24
   11fb0:	bls	11aa4 <__mempcpy_chk@plt+0xac0>
   11fb4:	sub	r0, r6, #1
   11fb8:	mov	r6, r0
   11fbc:	cmp	r0, r5
   11fc0:	bls	11aa4 <__mempcpy_chk@plt+0xac0>
   11fc4:	mov	r0, r6
   11fc8:	ldrb	r1, [r0, #-1]!
   11fcc:	cmp	r1, #47	; 0x2f
   11fd0:	bne	11fb8 <__mempcpy_chk@plt+0xfd4>
   11fd4:	b	11aa4 <__mempcpy_chk@plt+0xac0>
   11fd8:	mov	r8, sl
   11fdc:	ldrb	r0, [r8]
   11fe0:	cmp	r0, #0
   11fe4:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11fe8:	b	12040 <__mempcpy_chk@plt+0x105c>
   11fec:	mov	r8, sl
   11ff0:	ldrb	r0, [r8]
   11ff4:	cmp	r0, #0
   11ff8:	bne	11ab0 <__mempcpy_chk@plt+0xacc>
   11ffc:	b	12040 <__mempcpy_chk@plt+0x105c>
   12000:	bl	10f18 <__errno_location@plt>
   12004:	mov	r1, #2
   12008:	b	11a8c <__mempcpy_chk@plt+0xaa8>
   1200c:	mov	r1, #1024	; 0x400
   12010:	bl	10ee8 <getcwd@plt>
   12014:	cmp	r0, #0
   12018:	beq	12074 <__mempcpy_chk@plt+0x1090>
   1201c:	mov	r0, r5
   12020:	mov	r1, #0
   12024:	bl	10e34 <rawmemchr@plt>
   12028:	mov	r6, r0
   1202c:	ldrb	r0, [r8]
   12030:	cmp	r0, #0
   12034:	bne	11a4c <__mempcpy_chk@plt+0xa68>
   12038:	mov	r0, #0
   1203c:	str	r0, [sp, #20]
   12040:	add	r0, r5, #1
   12044:	cmp	r6, r0
   12048:	bls	1205c <__mempcpy_chk@plt+0x1078>
   1204c:	mov	r0, r6
   12050:	ldrb	r1, [r0, #-1]!
   12054:	cmp	r1, #47	; 0x2f
   12058:	moveq	r6, r0
   1205c:	mov	r4, #0
   12060:	ldr	r0, [sp, #20]
   12064:	cmp	r0, #0
   12068:	beq	120cc <__mempcpy_chk@plt+0x10e8>
   1206c:	bl	12b78 <__mempcpy_chk@plt+0x1b94>
   12070:	b	120cc <__mempcpy_chk@plt+0x10e8>
   12074:	bl	10f18 <__errno_location@plt>
   12078:	ldr	r5, [sp, #8]
   1207c:	mov	r6, r0
   12080:	add	r9, sp, #48	; 0x30
   12084:	ldr	r0, [r6]
   12088:	cmp	r0, #34	; 0x22
   1208c:	bne	120bc <__mempcpy_chk@plt+0x10d8>
   12090:	mov	r0, r9
   12094:	bl	158c0 <__mempcpy_chk@plt+0x48dc>
   12098:	cmp	r0, #0
   1209c:	beq	12140 <__mempcpy_chk@plt+0x115c>
   120a0:	ldr	r5, [sp, #48]	; 0x30
   120a4:	ldr	r1, [sp, #52]	; 0x34
   120a8:	mov	r0, r5
   120ac:	bl	10ee8 <getcwd@plt>
   120b0:	cmp	r0, #0
   120b4:	beq	12084 <__mempcpy_chk@plt+0x10a0>
   120b8:	b	1201c <__mempcpy_chk@plt+0x1038>
   120bc:	cmp	r0, #12
   120c0:	beq	12140 <__mempcpy_chk@plt+0x115c>
   120c4:	mov	r4, #1
   120c8:	mov	r6, r5
   120cc:	ldr	r1, [sp, #12]
   120d0:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   120d4:	ldr	r7, [sp, #16]
   120d8:	cmp	r0, r1
   120dc:	beq	120e4 <__mempcpy_chk@plt+0x1100>
   120e0:	bl	1233c <__mempcpy_chk@plt+0x1358>
   120e4:	ldr	r0, [sp, #1184]	; 0x4a0
   120e8:	cmp	r0, r7
   120ec:	beq	120f4 <__mempcpy_chk@plt+0x1110>
   120f0:	bl	1233c <__mempcpy_chk@plt+0x1358>
   120f4:	cmp	r4, #0
   120f8:	beq	12120 <__mempcpy_chk@plt+0x113c>
   120fc:	ldr	r0, [sp, #48]	; 0x30
   12100:	ldr	r1, [sp, #8]
   12104:	mov	r4, #0
   12108:	cmp	r0, r1
   1210c:	beq	11a94 <__mempcpy_chk@plt+0xab0>
   12110:	bl	1233c <__mempcpy_chk@plt+0x1358>
   12114:	mov	r0, r4
   12118:	sub	sp, fp, #28
   1211c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12120:	mov	r0, #0
   12124:	strb	r0, [r6], -r5
   12128:	add	r0, sp, #48	; 0x30
   1212c:	add	r1, r6, #1
   12130:	bl	15854 <__mempcpy_chk@plt+0x4870>
   12134:	mov	r4, r0
   12138:	cmp	r0, #0
   1213c:	bne	11a94 <__mempcpy_chk@plt+0xab0>
   12140:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   12144:	bl	10f18 <__errno_location@plt>
   12148:	mov	r1, #40	; 0x28
   1214c:	str	r1, [r0]
   12150:	mov	r4, #1
   12154:	ldr	r0, [sp, #20]
   12158:	cmp	r0, #0
   1215c:	bne	1206c <__mempcpy_chk@plt+0x1088>
   12160:	b	120cc <__mempcpy_chk@plt+0x10e8>
   12164:	movw	r1, #33100	; 0x814c
   12168:	movt	r1, #2
   1216c:	str	r0, [r1, #4]
   12170:	bx	lr
   12174:	movw	r1, #33100	; 0x814c
   12178:	movt	r1, #2
   1217c:	strb	r0, [r1]
   12180:	bx	lr
   12184:	push	{r4, r5, r6, sl, fp, lr}
   12188:	add	fp, sp, #16
   1218c:	sub	sp, sp, #8
   12190:	movw	r0, #33092	; 0x8144
   12194:	movt	r0, #2
   12198:	ldr	r0, [r0]
   1219c:	bl	16700 <__mempcpy_chk@plt+0x571c>
   121a0:	cmp	r0, #0
   121a4:	beq	121cc <__mempcpy_chk@plt+0x11e8>
   121a8:	movw	r5, #33100	; 0x814c
   121ac:	movt	r5, #2
   121b0:	ldrb	r0, [r5]
   121b4:	cmp	r0, #0
   121b8:	beq	121f8 <__mempcpy_chk@plt+0x1214>
   121bc:	bl	10f18 <__errno_location@plt>
   121c0:	ldr	r0, [r0]
   121c4:	cmp	r0, #32
   121c8:	bne	121f8 <__mempcpy_chk@plt+0x1214>
   121cc:	movw	r0, #33088	; 0x8140
   121d0:	movt	r0, #2
   121d4:	ldr	r0, [r0]
   121d8:	bl	16700 <__mempcpy_chk@plt+0x571c>
   121dc:	cmp	r0, #0
   121e0:	subeq	sp, fp, #16
   121e4:	popeq	{r4, r5, r6, sl, fp, pc}
   121e8:	movw	r0, #33004	; 0x80ec
   121ec:	movt	r0, #2
   121f0:	ldr	r0, [r0]
   121f4:	bl	10dec <_exit@plt>
   121f8:	movw	r1, #29969	; 0x7511
   121fc:	mov	r0, #0
   12200:	mov	r2, #5
   12204:	movt	r1, #1
   12208:	bl	10e10 <dcgettext@plt>
   1220c:	ldr	r6, [r5, #4]
   12210:	mov	r4, r0
   12214:	bl	10f18 <__errno_location@plt>
   12218:	ldr	r5, [r0]
   1221c:	cmp	r6, #0
   12220:	bne	1223c <__mempcpy_chk@plt+0x1258>
   12224:	movw	r2, #29985	; 0x7521
   12228:	mov	r0, #0
   1222c:	mov	r1, r5
   12230:	mov	r3, r4
   12234:	movt	r2, #1
   12238:	b	1225c <__mempcpy_chk@plt+0x1278>
   1223c:	mov	r0, r6
   12240:	bl	154b4 <__mempcpy_chk@plt+0x44d0>
   12244:	movw	r2, #29981	; 0x751d
   12248:	mov	r3, r0
   1224c:	str	r4, [sp]
   12250:	mov	r0, #0
   12254:	mov	r1, r5
   12258:	movt	r2, #1
   1225c:	bl	10e94 <error@plt>
   12260:	movw	r0, #33004	; 0x80ec
   12264:	movt	r0, #2
   12268:	ldr	r0, [r0]
   1226c:	bl	10dec <_exit@plt>
   12270:	push	{r4, r5, r6, r7, fp, lr}
   12274:	add	fp, sp, #16
   12278:	cmp	r0, #0
   1227c:	beq	122e4 <__mempcpy_chk@plt+0x1300>
   12280:	mov	r5, r0
   12284:	mov	r0, #24
   12288:	mov	r6, r2
   1228c:	mov	r7, r1
   12290:	bl	160a8 <__mempcpy_chk@plt+0x50c4>
   12294:	mov	r4, r0
   12298:	mov	r0, r7
   1229c:	bl	165ac <__mempcpy_chk@plt+0x55c8>
   122a0:	str	r0, [r4]
   122a4:	ldrd	r0, [r6, #96]	; 0x60
   122a8:	str	r0, [r4, #8]
   122ac:	str	r1, [r4, #12]
   122b0:	ldrd	r0, [r6]
   122b4:	str	r1, [r4, #20]
   122b8:	str	r0, [r4, #16]
   122bc:	mov	r0, r5
   122c0:	mov	r1, r4
   122c4:	bl	134b8 <__mempcpy_chk@plt+0x24d4>
   122c8:	cmp	r0, #0
   122cc:	beq	122e8 <__mempcpy_chk@plt+0x1304>
   122d0:	cmp	r0, r4
   122d4:	beq	122e4 <__mempcpy_chk@plt+0x1300>
   122d8:	mov	r0, r4
   122dc:	pop	{r4, r5, r6, r7, fp, lr}
   122e0:	b	13858 <__mempcpy_chk@plt+0x2874>
   122e4:	pop	{r4, r5, r6, r7, fp, pc}
   122e8:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   122ec:	cmp	r0, #0
   122f0:	moveq	r0, #0
   122f4:	bxeq	lr
   122f8:	push	{r4, r5, fp, lr}
   122fc:	add	fp, sp, #8
   12300:	sub	sp, sp, #24
   12304:	str	r1, [sp]
   12308:	mov	ip, sp
   1230c:	mov	r1, sp
   12310:	ldrd	r4, [r2, #96]	; 0x60
   12314:	add	r3, ip, #8
   12318:	add	ip, ip, #16
   1231c:	strd	r4, [r3]
   12320:	ldrd	r2, [r2]
   12324:	strd	r2, [ip]
   12328:	bl	12588 <__mempcpy_chk@plt+0x15a4>
   1232c:	cmp	r0, #0
   12330:	movwne	r0, #1
   12334:	sub	sp, fp, #8
   12338:	pop	{r4, r5, fp, pc}
   1233c:	push	{r4, r5, r6, sl, fp, lr}
   12340:	add	fp, sp, #16
   12344:	mov	r4, r0
   12348:	bl	10f18 <__errno_location@plt>
   1234c:	ldr	r6, [r0]
   12350:	mov	r5, r0
   12354:	mov	r0, r4
   12358:	bl	10dd4 <free@plt>
   1235c:	str	r6, [r5]
   12360:	pop	{r4, r5, r6, sl, fp, pc}
   12364:	andeq	r0, r0, r0
   12368:	ldr	r0, [r0, #8]
   1236c:	bx	lr
   12370:	ldr	r0, [r0, #12]
   12374:	bx	lr
   12378:	ldr	r0, [r0, #16]
   1237c:	bx	lr
   12380:	ldm	r0, {r2, ip}
   12384:	mov	r0, #0
   12388:	cmp	r2, ip
   1238c:	bxcs	lr
   12390:	mov	r0, #0
   12394:	ldr	r1, [r2]
   12398:	cmp	r1, #0
   1239c:	bne	123b8 <__mempcpy_chk@plt+0x13d4>
   123a0:	add	r2, r2, #8
   123a4:	cmp	r2, ip
   123a8:	bcs	123e4 <__mempcpy_chk@plt+0x1400>
   123ac:	ldr	r1, [r2]
   123b0:	cmp	r1, #0
   123b4:	beq	123a0 <__mempcpy_chk@plt+0x13bc>
   123b8:	mov	r3, #0
   123bc:	mov	r1, r2
   123c0:	ldr	r1, [r1, #4]
   123c4:	add	r3, r3, #1
   123c8:	cmp	r1, #0
   123cc:	bne	123c0 <__mempcpy_chk@plt+0x13dc>
   123d0:	cmp	r3, r0
   123d4:	movhi	r0, r3
   123d8:	add	r2, r2, #8
   123dc:	cmp	r2, ip
   123e0:	bcc	123ac <__mempcpy_chk@plt+0x13c8>
   123e4:	bx	lr
   123e8:	push	{fp, lr}
   123ec:	mov	fp, sp
   123f0:	ldm	r0, {r3, ip}
   123f4:	mov	lr, #0
   123f8:	mov	r1, #0
   123fc:	cmp	r3, ip
   12400:	bcs	12454 <__mempcpy_chk@plt+0x1470>
   12404:	mov	r1, #0
   12408:	mov	lr, #0
   1240c:	ldr	r2, [r3]
   12410:	cmp	r2, #0
   12414:	bne	12430 <__mempcpy_chk@plt+0x144c>
   12418:	add	r3, r3, #8
   1241c:	cmp	r3, ip
   12420:	bcs	12454 <__mempcpy_chk@plt+0x1470>
   12424:	ldr	r2, [r3]
   12428:	cmp	r2, #0
   1242c:	beq	12418 <__mempcpy_chk@plt+0x1434>
   12430:	mov	r2, r3
   12434:	ldr	r2, [r2, #4]
   12438:	add	r1, r1, #1
   1243c:	cmp	r2, #0
   12440:	bne	12434 <__mempcpy_chk@plt+0x1450>
   12444:	add	lr, lr, #1
   12448:	add	r3, r3, #8
   1244c:	cmp	r3, ip
   12450:	bcc	12424 <__mempcpy_chk@plt+0x1440>
   12454:	ldr	r2, [r0, #12]
   12458:	cmp	lr, r2
   1245c:	bne	12474 <__mempcpy_chk@plt+0x1490>
   12460:	ldr	r2, [r0, #16]
   12464:	mov	r0, #1
   12468:	cmp	r1, r2
   1246c:	movne	r0, #0
   12470:	pop	{fp, pc}
   12474:	mov	r0, #0
   12478:	pop	{fp, pc}
   1247c:	nop	{0}
   12480:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12484:	add	fp, sp, #24
   12488:	sub	sp, sp, #8
   1248c:	ldr	r6, [r0]
   12490:	ldmib	r0, {r2, r7, r8}
   12494:	ldr	r3, [r0, #16]
   12498:	mov	r4, r1
   1249c:	mov	r5, #0
   124a0:	cmp	r6, r2
   124a4:	bcs	124fc <__mempcpy_chk@plt+0x1518>
   124a8:	mov	r5, #0
   124ac:	ldr	r0, [r6]
   124b0:	cmp	r0, #0
   124b4:	bne	124d0 <__mempcpy_chk@plt+0x14ec>
   124b8:	add	r6, r6, #8
   124bc:	cmp	r6, r2
   124c0:	bcs	124fc <__mempcpy_chk@plt+0x1518>
   124c4:	ldr	r0, [r6]
   124c8:	cmp	r0, #0
   124cc:	beq	124b8 <__mempcpy_chk@plt+0x14d4>
   124d0:	mov	r0, #0
   124d4:	mov	r1, r6
   124d8:	ldr	r1, [r1, #4]
   124dc:	add	r0, r0, #1
   124e0:	cmp	r1, #0
   124e4:	bne	124d8 <__mempcpy_chk@plt+0x14f4>
   124e8:	cmp	r0, r5
   124ec:	movhi	r5, r0
   124f0:	add	r6, r6, #8
   124f4:	cmp	r6, r2
   124f8:	bcc	124c4 <__mempcpy_chk@plt+0x14e0>
   124fc:	movw	r2, #29988	; 0x7524
   12500:	mov	r0, r4
   12504:	mov	r1, #1
   12508:	movt	r2, #1
   1250c:	bl	10f54 <__fprintf_chk@plt>
   12510:	movw	r2, #30012	; 0x753c
   12514:	mov	r0, r4
   12518:	mov	r1, #1
   1251c:	mov	r3, r7
   12520:	movt	r2, #1
   12524:	bl	10f54 <__fprintf_chk@plt>
   12528:	vmov	s0, r8
   1252c:	vldr	d16, [pc, #76]	; 12580 <__mempcpy_chk@plt+0x159c>
   12530:	movw	r2, #30036	; 0x7554
   12534:	mov	r0, r4
   12538:	mov	r1, #1
   1253c:	mov	r3, r8
   12540:	movt	r2, #1
   12544:	vcvt.f64.u32	d17, s0
   12548:	vmov	s0, r7
   1254c:	vcvt.f64.u32	d18, s0
   12550:	vmul.f64	d16, d17, d16
   12554:	vdiv.f64	d16, d16, d18
   12558:	vstr	d16, [sp]
   1255c:	bl	10f54 <__fprintf_chk@plt>
   12560:	movw	r2, #30069	; 0x7575
   12564:	mov	r0, r4
   12568:	mov	r1, #1
   1256c:	mov	r3, r5
   12570:	movt	r2, #1
   12574:	sub	sp, fp, #24
   12578:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1257c:	b	10f54 <__fprintf_chk@plt>
   12580:	andeq	r0, r0, r0
   12584:	subsmi	r0, r9, r0
   12588:	push	{r4, r5, r6, r7, fp, lr}
   1258c:	add	fp, sp, #16
   12590:	mov	r4, r1
   12594:	ldr	r1, [r0, #8]
   12598:	ldr	r2, [r0, #24]
   1259c:	mov	r5, r0
   125a0:	mov	r0, r4
   125a4:	blx	r2
   125a8:	ldr	r1, [r5, #8]
   125ac:	cmp	r0, r1
   125b0:	bcs	12618 <__mempcpy_chk@plt+0x1634>
   125b4:	ldr	r7, [r5]
   125b8:	mov	r6, #0
   125bc:	ldr	r1, [r7, r0, lsl #3]!
   125c0:	cmp	r1, #0
   125c4:	cmpne	r7, #0
   125c8:	bne	125f8 <__mempcpy_chk@plt+0x1614>
   125cc:	mov	r0, r6
   125d0:	pop	{r4, r5, r6, r7, fp, pc}
   125d4:	ldr	r2, [r5, #28]
   125d8:	mov	r0, r4
   125dc:	blx	r2
   125e0:	cmp	r0, #0
   125e4:	bne	1260c <__mempcpy_chk@plt+0x1628>
   125e8:	ldr	r7, [r7, #4]
   125ec:	cmp	r7, #0
   125f0:	beq	125cc <__mempcpy_chk@plt+0x15e8>
   125f4:	ldr	r1, [r7]
   125f8:	cmp	r1, r4
   125fc:	bne	125d4 <__mempcpy_chk@plt+0x15f0>
   12600:	mov	r6, r4
   12604:	mov	r0, r6
   12608:	pop	{r4, r5, r6, r7, fp, pc}
   1260c:	ldr	r6, [r7]
   12610:	mov	r0, r6
   12614:	pop	{r4, r5, r6, r7, fp, pc}
   12618:	bl	10fcc <abort@plt>
   1261c:	push	{fp, lr}
   12620:	mov	fp, sp
   12624:	ldr	r1, [r0, #16]
   12628:	cmp	r1, #0
   1262c:	beq	1264c <__mempcpy_chk@plt+0x1668>
   12630:	ldm	r0, {r1, r2}
   12634:	cmp	r1, r2
   12638:	bcs	12654 <__mempcpy_chk@plt+0x1670>
   1263c:	ldr	r0, [r1], #8
   12640:	cmp	r0, #0
   12644:	beq	12634 <__mempcpy_chk@plt+0x1650>
   12648:	pop	{fp, pc}
   1264c:	mov	r0, #0
   12650:	pop	{fp, pc}
   12654:	bl	10fcc <abort@plt>
   12658:	push	{r4, r5, fp, lr}
   1265c:	add	fp, sp, #8
   12660:	mov	r5, r1
   12664:	ldr	r1, [r0, #8]
   12668:	ldr	r2, [r0, #24]
   1266c:	mov	r4, r0
   12670:	mov	r0, r5
   12674:	blx	r2
   12678:	ldr	r1, [r4, #8]
   1267c:	cmp	r0, r1
   12680:	bcs	126e4 <__mempcpy_chk@plt+0x1700>
   12684:	ldr	r1, [r4]
   12688:	add	r2, r1, r0, lsl #3
   1268c:	ldr	r3, [r2]
   12690:	ldr	r2, [r2, #4]
   12694:	cmp	r3, r5
   12698:	beq	126a8 <__mempcpy_chk@plt+0x16c4>
   1269c:	cmp	r2, #0
   126a0:	bne	1268c <__mempcpy_chk@plt+0x16a8>
   126a4:	b	126b8 <__mempcpy_chk@plt+0x16d4>
   126a8:	cmp	r2, #0
   126ac:	beq	126b8 <__mempcpy_chk@plt+0x16d4>
   126b0:	ldr	r0, [r2]
   126b4:	pop	{r4, r5, fp, pc}
   126b8:	ldr	r2, [r4, #4]
   126bc:	add	r0, r1, r0, lsl #3
   126c0:	add	r1, r0, #8
   126c4:	cmp	r1, r2
   126c8:	bcs	126dc <__mempcpy_chk@plt+0x16f8>
   126cc:	ldr	r0, [r1], #8
   126d0:	cmp	r0, #0
   126d4:	beq	126c4 <__mempcpy_chk@plt+0x16e0>
   126d8:	pop	{r4, r5, fp, pc}
   126dc:	mov	r0, #0
   126e0:	pop	{r4, r5, fp, pc}
   126e4:	bl	10fcc <abort@plt>
   126e8:	push	{r4, r5, fp, lr}
   126ec:	add	fp, sp, #8
   126f0:	ldm	r0, {r5, lr}
   126f4:	mov	ip, r0
   126f8:	mov	r0, #0
   126fc:	cmp	r5, lr
   12700:	popcs	{r4, r5, fp, pc}
   12704:	mov	r0, #0
   12708:	ldr	r3, [r5]
   1270c:	cmp	r3, #0
   12710:	cmpne	r5, #0
   12714:	beq	12720 <__mempcpy_chk@plt+0x173c>
   12718:	b	1273c <__mempcpy_chk@plt+0x1758>
   1271c:	ldr	lr, [ip, #4]
   12720:	add	r5, r5, #8
   12724:	cmp	r5, lr
   12728:	bcs	12764 <__mempcpy_chk@plt+0x1780>
   1272c:	ldr	r3, [r5]
   12730:	cmp	r3, #0
   12734:	cmpne	r5, #0
   12738:	beq	12720 <__mempcpy_chk@plt+0x173c>
   1273c:	mov	r3, r5
   12740:	cmp	r0, r2
   12744:	bcs	12764 <__mempcpy_chk@plt+0x1780>
   12748:	ldr	r4, [r3]
   1274c:	str	r4, [r1, r0, lsl #2]
   12750:	add	r0, r0, #1
   12754:	ldr	r3, [r3, #4]
   12758:	cmp	r3, #0
   1275c:	bne	12740 <__mempcpy_chk@plt+0x175c>
   12760:	b	1271c <__mempcpy_chk@plt+0x1738>
   12764:	pop	{r4, r5, fp, pc}
   12768:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1276c:	add	fp, sp, #24
   12770:	mov	r5, r1
   12774:	ldr	r4, [r0]
   12778:	ldr	r1, [r0, #4]
   1277c:	mov	r6, #0
   12780:	cmp	r4, r1
   12784:	bcs	12800 <__mempcpy_chk@plt+0x181c>
   12788:	mov	r9, r2
   1278c:	mov	r8, r0
   12790:	mov	r6, #0
   12794:	ldr	r0, [r4]
   12798:	cmp	r0, #0
   1279c:	cmpne	r4, #0
   127a0:	beq	127ac <__mempcpy_chk@plt+0x17c8>
   127a4:	b	127c8 <__mempcpy_chk@plt+0x17e4>
   127a8:	ldr	r1, [r8, #4]
   127ac:	add	r4, r4, #8
   127b0:	cmp	r4, r1
   127b4:	bcs	12800 <__mempcpy_chk@plt+0x181c>
   127b8:	ldr	r0, [r4]
   127bc:	cmp	r0, #0
   127c0:	cmpne	r4, #0
   127c4:	beq	127ac <__mempcpy_chk@plt+0x17c8>
   127c8:	mov	r1, r9
   127cc:	blx	r5
   127d0:	cmp	r0, #0
   127d4:	beq	12800 <__mempcpy_chk@plt+0x181c>
   127d8:	mov	r7, r4
   127dc:	ldr	r7, [r7, #4]
   127e0:	add	r6, r6, #1
   127e4:	cmp	r7, #0
   127e8:	beq	127a8 <__mempcpy_chk@plt+0x17c4>
   127ec:	ldr	r0, [r7]
   127f0:	mov	r1, r9
   127f4:	blx	r5
   127f8:	cmp	r0, #0
   127fc:	bne	127dc <__mempcpy_chk@plt+0x17f8>
   12800:	mov	r0, r6
   12804:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12808:	ldrb	r2, [r0]
   1280c:	cmp	r2, #0
   12810:	moveq	r0, #0
   12814:	bxeq	lr
   12818:	add	r3, r0, #1
   1281c:	mov	r0, #0
   12820:	rsb	r0, r0, r0, lsl #5
   12824:	uxtab	r0, r0, r2
   12828:	udiv	r2, r0, r1
   1282c:	mls	r0, r2, r1, r0
   12830:	ldrb	r2, [r3], #1
   12834:	cmp	r2, #0
   12838:	bne	12820 <__mempcpy_chk@plt+0x183c>
   1283c:	bx	lr
   12840:	movw	r1, #30096	; 0x7590
   12844:	movt	r1, #1
   12848:	vld1.32	{d16-d17}, [r1]!
   1284c:	ldr	r1, [r1]
   12850:	vst1.32	{d16-d17}, [r0]!
   12854:	str	r1, [r0]
   12858:	bx	lr
   1285c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12860:	add	fp, sp, #24
   12864:	movw	r9, #10896	; 0x2a90
   12868:	cmp	r3, #0
   1286c:	movw	r5, #10876	; 0x2a7c
   12870:	mov	r6, r0
   12874:	mov	r0, #40	; 0x28
   12878:	mov	r7, r1
   1287c:	movt	r9, #1
   12880:	movne	r9, r3
   12884:	cmp	r2, #0
   12888:	movt	r5, #1
   1288c:	movne	r5, r2
   12890:	bl	1667c <__mempcpy_chk@plt+0x5698>
   12894:	mov	r8, #0
   12898:	cmp	r0, #0
   1289c:	beq	12a64 <__mempcpy_chk@plt+0x1a80>
   128a0:	mov	r4, r0
   128a4:	movw	r0, #30096	; 0x7590
   128a8:	cmp	r7, #0
   128ac:	movt	r0, #1
   128b0:	moveq	r7, r0
   128b4:	cmp	r7, r0
   128b8:	str	r7, [r4, #20]
   128bc:	beq	12938 <__mempcpy_chk@plt+0x1954>
   128c0:	vldr	s2, [pc, #420]	; 12a6c <__mempcpy_chk@plt+0x1a88>
   128c4:	vldr	s0, [r7, #8]
   128c8:	vcmpe.f32	s0, s2
   128cc:	vmrs	APSR_nzcv, fpscr
   128d0:	ble	129e4 <__mempcpy_chk@plt+0x1a00>
   128d4:	vldr	s4, [pc, #404]	; 12a70 <__mempcpy_chk@plt+0x1a8c>
   128d8:	vcmpe.f32	s0, s4
   128dc:	vmrs	APSR_nzcv, fpscr
   128e0:	bpl	129e4 <__mempcpy_chk@plt+0x1a00>
   128e4:	vldr	s4, [pc, #392]	; 12a74 <__mempcpy_chk@plt+0x1a90>
   128e8:	vldr	s6, [r7, #12]
   128ec:	vcmpe.f32	s6, s4
   128f0:	vmrs	APSR_nzcv, fpscr
   128f4:	ble	129e4 <__mempcpy_chk@plt+0x1a00>
   128f8:	vldr	s4, [r7]
   128fc:	vcmpe.f32	s4, #0.0
   12900:	vmrs	APSR_nzcv, fpscr
   12904:	blt	129e4 <__mempcpy_chk@plt+0x1a00>
   12908:	vadd.f32	s2, s4, s2
   1290c:	vcmpe.f32	s2, s0
   12910:	vmrs	APSR_nzcv, fpscr
   12914:	bpl	129e4 <__mempcpy_chk@plt+0x1a00>
   12918:	vldr	s0, [r7, #4]
   1291c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12920:	vcmpe.f32	s0, s4
   12924:	vmrs	APSR_nzcv, fpscr
   12928:	bhi	129e4 <__mempcpy_chk@plt+0x1a00>
   1292c:	vcmpe.f32	s2, s0
   12930:	vmrs	APSR_nzcv, fpscr
   12934:	bpl	129e4 <__mempcpy_chk@plt+0x1a00>
   12938:	ldrb	r0, [r7, #16]
   1293c:	cmp	r0, #0
   12940:	bne	1296c <__mempcpy_chk@plt+0x1988>
   12944:	vmov	s2, r6
   12948:	vldr	s0, [r7, #8]
   1294c:	vldr	s4, [pc, #292]	; 12a78 <__mempcpy_chk@plt+0x1a94>
   12950:	vcvt.f32.u32	s2, s2
   12954:	vdiv.f32	s2, s2, s0
   12958:	vcvt.u32.f32	s0, s2
   1295c:	vcmpe.f32	s2, s4
   12960:	vmrs	APSR_nzcv, fpscr
   12964:	bge	12a00 <__mempcpy_chk@plt+0x1a1c>
   12968:	vmov	r6, s0
   1296c:	cmp	r6, #10
   12970:	movls	r6, #10
   12974:	orr	r0, r6, #1
   12978:	cmn	r0, #1
   1297c:	beq	12a00 <__mempcpy_chk@plt+0x1a1c>
   12980:	ldr	r6, [fp, #8]
   12984:	mov	r1, #3
   12988:	cmp	r0, #10
   1298c:	bcc	129c4 <__mempcpy_chk@plt+0x19e0>
   12990:	mov	r1, #3
   12994:	mov	r3, #9
   12998:	mov	r2, #12
   1299c:	udiv	r7, r0, r1
   129a0:	mls	r7, r7, r1, r0
   129a4:	cmp	r7, #0
   129a8:	beq	129c4 <__mempcpy_chk@plt+0x19e0>
   129ac:	add	r3, r3, r2
   129b0:	add	r2, r2, #8
   129b4:	add	r1, r1, #2
   129b8:	add	r3, r3, #4
   129bc:	cmp	r3, r0
   129c0:	bcc	1299c <__mempcpy_chk@plt+0x19b8>
   129c4:	udiv	r2, r0, r1
   129c8:	mls	r1, r2, r1, r0
   129cc:	cmp	r1, #0
   129d0:	bne	129f8 <__mempcpy_chk@plt+0x1a14>
   129d4:	add	r0, r0, #2
   129d8:	cmn	r0, #1
   129dc:	bne	12984 <__mempcpy_chk@plt+0x19a0>
   129e0:	b	12a00 <__mempcpy_chk@plt+0x1a1c>
   129e4:	str	r0, [r4, #20]
   129e8:	mov	r0, r4
   129ec:	bl	1233c <__mempcpy_chk@plt+0x1358>
   129f0:	mov	r0, r8
   129f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   129f8:	cmp	r0, #536870912	; 0x20000000
   129fc:	bcc	12a18 <__mempcpy_chk@plt+0x1a34>
   12a00:	mov	r0, #0
   12a04:	str	r0, [r4, #8]
   12a08:	mov	r0, r4
   12a0c:	bl	1233c <__mempcpy_chk@plt+0x1358>
   12a10:	mov	r0, r8
   12a14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12a18:	cmp	r0, #0
   12a1c:	str	r0, [r4, #8]
   12a20:	beq	12a08 <__mempcpy_chk@plt+0x1a24>
   12a24:	mov	r1, #8
   12a28:	bl	16628 <__mempcpy_chk@plt+0x5644>
   12a2c:	cmp	r0, #0
   12a30:	str	r0, [r4]
   12a34:	beq	12a08 <__mempcpy_chk@plt+0x1a24>
   12a38:	mov	r1, #0
   12a3c:	str	r5, [r4, #24]
   12a40:	str	r9, [r4, #28]
   12a44:	str	r6, [r4, #32]
   12a48:	mov	r8, r4
   12a4c:	str	r1, [r4, #36]	; 0x24
   12a50:	str	r1, [r4, #12]
   12a54:	str	r1, [r4, #16]
   12a58:	ldr	r1, [r4, #8]
   12a5c:	add	r0, r0, r1, lsl #3
   12a60:	str	r0, [r4, #4]
   12a64:	mov	r0, r8
   12a68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12a6c:	stclcc	12, cr12, [ip, #820]	; 0x334
   12a70:	svccc	0x00666666
   12a74:	svccc	0x008ccccd
   12a78:	svcmi	0x00800000
   12a7c:	ror	r2, r0, #3
   12a80:	udiv	r2, r2, r1
   12a84:	mul	r1, r2, r1
   12a88:	rsb	r0, r1, r0, ror #3
   12a8c:	bx	lr
   12a90:	sub	r0, r0, r1
   12a94:	clz	r0, r0
   12a98:	lsr	r0, r0, #5
   12a9c:	bx	lr
   12aa0:	push	{r4, r5, r6, r7, fp, lr}
   12aa4:	add	fp, sp, #16
   12aa8:	mov	r4, r0
   12aac:	ldr	r5, [r0]
   12ab0:	ldr	r0, [r0, #4]
   12ab4:	cmp	r5, r0
   12ab8:	bcs	12b68 <__mempcpy_chk@plt+0x1b84>
   12abc:	mov	r6, #0
   12ac0:	ldr	r1, [r5]
   12ac4:	cmp	r1, #0
   12ac8:	bne	12af4 <__mempcpy_chk@plt+0x1b10>
   12acc:	b	12adc <__mempcpy_chk@plt+0x1af8>
   12ad0:	str	r6, [r5]
   12ad4:	str	r6, [r5, #4]
   12ad8:	ldr	r0, [r4, #4]
   12adc:	add	r5, r5, #8
   12ae0:	cmp	r5, r0
   12ae4:	bcs	12b68 <__mempcpy_chk@plt+0x1b84>
   12ae8:	ldr	r1, [r5]
   12aec:	cmp	r1, #0
   12af0:	beq	12adc <__mempcpy_chk@plt+0x1af8>
   12af4:	ldr	r1, [r4, #32]
   12af8:	ldr	r7, [r5, #4]
   12afc:	cmp	r1, #0
   12b00:	mov	r0, r1
   12b04:	movwne	r0, #1
   12b08:	cmp	r7, #0
   12b0c:	bne	12b50 <__mempcpy_chk@plt+0x1b6c>
   12b10:	cmp	r0, #0
   12b14:	beq	12ad0 <__mempcpy_chk@plt+0x1aec>
   12b18:	ldr	r0, [r5]
   12b1c:	blx	r1
   12b20:	b	12ad0 <__mempcpy_chk@plt+0x1aec>
   12b24:	str	r6, [r7]
   12b28:	cmp	r1, #0
   12b2c:	ldr	r2, [r7, #4]
   12b30:	ldr	r0, [r4, #36]	; 0x24
   12b34:	str	r0, [r7, #4]
   12b38:	mov	r0, r1
   12b3c:	str	r7, [r4, #36]	; 0x24
   12b40:	movwne	r0, #1
   12b44:	cmp	r2, #0
   12b48:	mov	r7, r2
   12b4c:	beq	12b10 <__mempcpy_chk@plt+0x1b2c>
   12b50:	tst	r0, #1
   12b54:	beq	12b24 <__mempcpy_chk@plt+0x1b40>
   12b58:	ldr	r0, [r7]
   12b5c:	blx	r1
   12b60:	ldr	r1, [r4, #32]
   12b64:	b	12b24 <__mempcpy_chk@plt+0x1b40>
   12b68:	mov	r0, #0
   12b6c:	str	r0, [r4, #12]
   12b70:	str	r0, [r4, #16]
   12b74:	pop	{r4, r5, r6, r7, fp, pc}
   12b78:	push	{r4, r5, r6, sl, fp, lr}
   12b7c:	add	fp, sp, #16
   12b80:	mov	r4, r0
   12b84:	ldr	r0, [r0, #32]
   12b88:	cmp	r0, #0
   12b8c:	beq	12c00 <__mempcpy_chk@plt+0x1c1c>
   12b90:	ldr	r0, [r4, #16]
   12b94:	cmp	r0, #0
   12b98:	beq	12c00 <__mempcpy_chk@plt+0x1c1c>
   12b9c:	ldr	r5, [r4]
   12ba0:	ldr	r1, [r4, #4]
   12ba4:	cmp	r5, r1
   12ba8:	bcc	12bc0 <__mempcpy_chk@plt+0x1bdc>
   12bac:	b	12c00 <__mempcpy_chk@plt+0x1c1c>
   12bb0:	ldr	r1, [r4, #4]
   12bb4:	add	r5, r5, #8
   12bb8:	cmp	r5, r1
   12bbc:	bcs	12c00 <__mempcpy_chk@plt+0x1c1c>
   12bc0:	ldr	r0, [r5]
   12bc4:	cmp	r0, #0
   12bc8:	cmpne	r5, #0
   12bcc:	beq	12bb4 <__mempcpy_chk@plt+0x1bd0>
   12bd0:	ldr	r1, [r4, #32]
   12bd4:	blx	r1
   12bd8:	ldr	r6, [r5, #4]
   12bdc:	cmp	r6, #0
   12be0:	beq	12bb0 <__mempcpy_chk@plt+0x1bcc>
   12be4:	ldr	r1, [r4, #32]
   12be8:	ldr	r0, [r6]
   12bec:	blx	r1
   12bf0:	ldr	r6, [r6, #4]
   12bf4:	cmp	r6, #0
   12bf8:	bne	12be4 <__mempcpy_chk@plt+0x1c00>
   12bfc:	b	12bb0 <__mempcpy_chk@plt+0x1bcc>
   12c00:	ldr	r5, [r4]
   12c04:	ldr	r1, [r4, #4]
   12c08:	cmp	r5, r1
   12c0c:	bcc	12c20 <__mempcpy_chk@plt+0x1c3c>
   12c10:	b	12c48 <__mempcpy_chk@plt+0x1c64>
   12c14:	add	r5, r5, #8
   12c18:	cmp	r5, r1
   12c1c:	bcs	12c48 <__mempcpy_chk@plt+0x1c64>
   12c20:	ldr	r0, [r5, #4]
   12c24:	cmp	r0, #0
   12c28:	beq	12c14 <__mempcpy_chk@plt+0x1c30>
   12c2c:	ldr	r6, [r0, #4]
   12c30:	bl	1233c <__mempcpy_chk@plt+0x1358>
   12c34:	cmp	r6, #0
   12c38:	mov	r0, r6
   12c3c:	bne	12c2c <__mempcpy_chk@plt+0x1c48>
   12c40:	ldr	r1, [r4, #4]
   12c44:	b	12c14 <__mempcpy_chk@plt+0x1c30>
   12c48:	ldr	r0, [r4, #36]	; 0x24
   12c4c:	cmp	r0, #0
   12c50:	beq	12c68 <__mempcpy_chk@plt+0x1c84>
   12c54:	ldr	r5, [r0, #4]
   12c58:	bl	1233c <__mempcpy_chk@plt+0x1358>
   12c5c:	cmp	r5, #0
   12c60:	mov	r0, r5
   12c64:	bne	12c54 <__mempcpy_chk@plt+0x1c70>
   12c68:	ldr	r0, [r4]
   12c6c:	bl	1233c <__mempcpy_chk@plt+0x1358>
   12c70:	mov	r0, r4
   12c74:	pop	{r4, r5, r6, sl, fp, lr}
   12c78:	b	1233c <__mempcpy_chk@plt+0x1358>
   12c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c80:	add	fp, sp, #28
   12c84:	sub	sp, sp, #44	; 0x2c
   12c88:	mov	r7, r0
   12c8c:	mov	r4, r0
   12c90:	ldr	r0, [r7, #20]!
   12c94:	ldrb	r2, [r0, #16]
   12c98:	cmp	r2, #0
   12c9c:	bne	12ccc <__mempcpy_chk@plt+0x1ce8>
   12ca0:	vmov	s2, r1
   12ca4:	vldr	s0, [r0, #8]
   12ca8:	vldr	s4, [pc, #592]	; 12f00 <__mempcpy_chk@plt+0x1f1c>
   12cac:	mov	r5, #0
   12cb0:	vcvt.f32.u32	s2, s2
   12cb4:	vdiv.f32	s2, s2, s0
   12cb8:	vcvt.u32.f32	s0, s2
   12cbc:	vcmpe.f32	s2, s4
   12cc0:	vmrs	APSR_nzcv, fpscr
   12cc4:	bge	12df0 <__mempcpy_chk@plt+0x1e0c>
   12cc8:	vmov	r1, s0
   12ccc:	cmp	r1, #10
   12cd0:	mov	r5, #0
   12cd4:	movls	r1, #10
   12cd8:	orr	r6, r1, #1
   12cdc:	cmn	r6, #1
   12ce0:	beq	12df0 <__mempcpy_chk@plt+0x1e0c>
   12ce4:	mov	r0, #3
   12ce8:	cmp	r6, #10
   12cec:	bcc	12d24 <__mempcpy_chk@plt+0x1d40>
   12cf0:	mov	r0, #3
   12cf4:	mov	r2, #9
   12cf8:	mov	r1, #12
   12cfc:	udiv	r3, r6, r0
   12d00:	mls	r3, r3, r0, r6
   12d04:	cmp	r3, #0
   12d08:	beq	12d24 <__mempcpy_chk@plt+0x1d40>
   12d0c:	add	r2, r2, r1
   12d10:	add	r1, r1, #8
   12d14:	add	r0, r0, #2
   12d18:	add	r2, r2, #4
   12d1c:	cmp	r2, r6
   12d20:	bcc	12cfc <__mempcpy_chk@plt+0x1d18>
   12d24:	udiv	r1, r6, r0
   12d28:	mls	r0, r1, r0, r6
   12d2c:	cmp	r0, #0
   12d30:	bne	12d44 <__mempcpy_chk@plt+0x1d60>
   12d34:	add	r6, r6, #2
   12d38:	cmn	r6, #1
   12d3c:	bne	12ce4 <__mempcpy_chk@plt+0x1d00>
   12d40:	b	12df0 <__mempcpy_chk@plt+0x1e0c>
   12d44:	sub	r0, r6, #1
   12d48:	cmn	r0, #-536870910	; 0xe0000002
   12d4c:	bhi	12df0 <__mempcpy_chk@plt+0x1e0c>
   12d50:	ldr	r0, [r4, #8]
   12d54:	cmp	r6, r0
   12d58:	bne	12d6c <__mempcpy_chk@plt+0x1d88>
   12d5c:	mov	r5, #1
   12d60:	mov	r0, r5
   12d64:	sub	sp, fp, #28
   12d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d6c:	mov	r0, r6
   12d70:	mov	r1, #8
   12d74:	bl	16628 <__mempcpy_chk@plt+0x5644>
   12d78:	cmp	r0, #0
   12d7c:	str	r0, [sp, #4]
   12d80:	beq	12df0 <__mempcpy_chk@plt+0x1e0c>
   12d84:	add	r0, r0, r6, lsl #3
   12d88:	mov	r1, #0
   12d8c:	add	r5, sp, #4
   12d90:	mov	sl, r4
   12d94:	mov	r2, #0
   12d98:	str	r1, [sp, #20]
   12d9c:	str	r1, [sp, #16]
   12da0:	str	r6, [sp, #12]
   12da4:	mov	r1, r4
   12da8:	str	r0, [sp, #8]
   12dac:	add	r0, r5, #20
   12db0:	vld1.32	{d16-d17}, [r7]
   12db4:	vst1.32	{d16-d17}, [r0]
   12db8:	ldr	r0, [sl, #36]!	; 0x24
   12dbc:	str	r0, [sp, #40]	; 0x28
   12dc0:	mov	r0, r5
   12dc4:	bl	12f04 <__mempcpy_chk@plt+0x1f20>
   12dc8:	cmp	r0, #0
   12dcc:	beq	12dfc <__mempcpy_chk@plt+0x1e18>
   12dd0:	ldr	r0, [r4]
   12dd4:	bl	1233c <__mempcpy_chk@plt+0x1358>
   12dd8:	mov	r0, #36	; 0x24
   12ddc:	vld1.32	{d16-d17}, [r5], r0
   12de0:	vst1.32	{d16-d17}, [r4], r0
   12de4:	ldr	r0, [r5]
   12de8:	mov	r5, #1
   12dec:	str	r0, [r4]
   12df0:	mov	r0, r5
   12df4:	sub	sp, fp, #28
   12df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dfc:	ldr	r0, [sp, #40]	; 0x28
   12e00:	str	r0, [sl]
   12e04:	ldr	r0, [sp, #8]
   12e08:	ldr	r8, [sp, #4]
   12e0c:	cmp	r8, r0
   12e10:	str	r0, [sp]
   12e14:	bcs	12ecc <__mempcpy_chk@plt+0x1ee8>
   12e18:	mov	r9, #0
   12e1c:	ldr	r0, [r8]
   12e20:	cmp	r0, #0
   12e24:	bne	12e4c <__mempcpy_chk@plt+0x1e68>
   12e28:	b	12e30 <__mempcpy_chk@plt+0x1e4c>
   12e2c:	str	r9, [r8, #4]
   12e30:	ldr	r0, [sp]
   12e34:	add	r8, r8, #8
   12e38:	cmp	r8, r0
   12e3c:	bcs	12ecc <__mempcpy_chk@plt+0x1ee8>
   12e40:	ldr	r0, [r8]
   12e44:	cmp	r0, #0
   12e48:	beq	12e30 <__mempcpy_chk@plt+0x1e4c>
   12e4c:	ldr	r6, [r8, #4]
   12e50:	cmp	r6, #0
   12e54:	beq	12e2c <__mempcpy_chk@plt+0x1e48>
   12e58:	ldr	r1, [r4, #8]
   12e5c:	b	12e80 <__mempcpy_chk@plt+0x1e9c>
   12e60:	add	r0, r3, r0, lsl #3
   12e64:	add	r0, r0, #4
   12e68:	ldr	r3, [r0]
   12e6c:	cmp	r2, #0
   12e70:	str	r3, [r6, #4]
   12e74:	str	r6, [r0]
   12e78:	mov	r6, r2
   12e7c:	beq	12e2c <__mempcpy_chk@plt+0x1e48>
   12e80:	ldr	r5, [r6]
   12e84:	ldr	r2, [r4, #24]
   12e88:	mov	r0, r5
   12e8c:	blx	r2
   12e90:	ldr	r1, [r4, #8]
   12e94:	cmp	r0, r1
   12e98:	bcs	12efc <__mempcpy_chk@plt+0x1f18>
   12e9c:	ldr	r3, [r4]
   12ea0:	ldr	r2, [r6, #4]
   12ea4:	ldr	r7, [r3, r0, lsl #3]
   12ea8:	cmp	r7, #0
   12eac:	bne	12e60 <__mempcpy_chk@plt+0x1e7c>
   12eb0:	str	r5, [r3, r0, lsl #3]
   12eb4:	ldr	r0, [r4, #12]
   12eb8:	add	r0, r0, #1
   12ebc:	str	r0, [r4, #12]
   12ec0:	mov	r0, sl
   12ec4:	str	r9, [r6]
   12ec8:	b	12e68 <__mempcpy_chk@plt+0x1e84>
   12ecc:	add	r1, sp, #4
   12ed0:	mov	r0, r4
   12ed4:	mov	r2, #0
   12ed8:	mov	r5, #0
   12edc:	bl	12f04 <__mempcpy_chk@plt+0x1f20>
   12ee0:	cmp	r0, #0
   12ee4:	beq	12efc <__mempcpy_chk@plt+0x1f18>
   12ee8:	ldr	r0, [sp, #4]
   12eec:	bl	1233c <__mempcpy_chk@plt+0x1358>
   12ef0:	mov	r0, r5
   12ef4:	sub	sp, fp, #28
   12ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12efc:	bl	10fcc <abort@plt>
   12f00:	svcmi	0x00800000
   12f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f08:	add	fp, sp, #28
   12f0c:	sub	sp, sp, #4
   12f10:	ldr	r8, [r1]
   12f14:	ldr	r3, [r1, #4]
   12f18:	mov	r6, r0
   12f1c:	mov	r0, #1
   12f20:	str	r1, [sp]
   12f24:	cmp	r8, r3
   12f28:	bcs	1313c <__mempcpy_chk@plt+0x2158>
   12f2c:	add	sl, r6, #36	; 0x24
   12f30:	cmp	r2, #0
   12f34:	beq	12ff0 <__mempcpy_chk@plt+0x200c>
   12f38:	mov	r9, #0
   12f3c:	ldr	r1, [r8]
   12f40:	cmp	r1, #0
   12f44:	bne	12f70 <__mempcpy_chk@plt+0x1f8c>
   12f48:	b	12f58 <__mempcpy_chk@plt+0x1f74>
   12f4c:	ldr	r0, [sp]
   12f50:	ldr	r3, [r0, #4]
   12f54:	str	r9, [r8, #4]
   12f58:	add	r8, r8, #8
   12f5c:	cmp	r8, r3
   12f60:	bcs	13138 <__mempcpy_chk@plt+0x2154>
   12f64:	ldr	r1, [r8]
   12f68:	cmp	r1, #0
   12f6c:	beq	12f58 <__mempcpy_chk@plt+0x1f74>
   12f70:	ldr	r7, [r8, #4]
   12f74:	cmp	r7, #0
   12f78:	beq	12f54 <__mempcpy_chk@plt+0x1f70>
   12f7c:	ldr	r1, [r6, #8]
   12f80:	b	12fb4 <__mempcpy_chk@plt+0x1fd0>
   12f84:	str	r4, [r3, r0, lsl #3]
   12f88:	ldr	r0, [r6, #12]
   12f8c:	add	r0, r0, #1
   12f90:	str	r0, [r6, #12]
   12f94:	mov	r0, sl
   12f98:	str	r9, [r7]
   12f9c:	ldr	r3, [r0]
   12fa0:	cmp	r2, #0
   12fa4:	str	r3, [r7, #4]
   12fa8:	str	r7, [r0]
   12fac:	mov	r7, r2
   12fb0:	beq	12f4c <__mempcpy_chk@plt+0x1f68>
   12fb4:	ldr	r4, [r7]
   12fb8:	ldr	r2, [r6, #24]
   12fbc:	mov	r0, r4
   12fc0:	blx	r2
   12fc4:	ldr	r1, [r6, #8]
   12fc8:	cmp	r0, r1
   12fcc:	bcs	13150 <__mempcpy_chk@plt+0x216c>
   12fd0:	ldr	r3, [r6]
   12fd4:	ldr	r2, [r7, #4]
   12fd8:	ldr	r5, [r3, r0, lsl #3]
   12fdc:	cmp	r5, #0
   12fe0:	beq	12f84 <__mempcpy_chk@plt+0x1fa0>
   12fe4:	add	r0, r3, r0, lsl #3
   12fe8:	add	r0, r0, #4
   12fec:	b	12f9c <__mempcpy_chk@plt+0x1fb8>
   12ff0:	mov	r5, #0
   12ff4:	ldr	r7, [r8]
   12ff8:	cmp	r7, #0
   12ffc:	bne	13044 <__mempcpy_chk@plt+0x2060>
   13000:	b	1302c <__mempcpy_chk@plt+0x2048>
   13004:	str	r7, [r9, r4, lsl #3]
   13008:	ldr	r0, [r6, #12]
   1300c:	add	r0, r0, #1
   13010:	str	r0, [r6, #12]
   13014:	ldr	r0, [sp]
   13018:	str	r5, [r8]
   1301c:	ldr	r1, [r0, #12]
   13020:	ldr	r3, [r0, #4]
   13024:	sub	r1, r1, #1
   13028:	str	r1, [r0, #12]
   1302c:	add	r8, r8, #8
   13030:	cmp	r8, r3
   13034:	bcs	13138 <__mempcpy_chk@plt+0x2154>
   13038:	ldr	r7, [r8]
   1303c:	cmp	r7, #0
   13040:	beq	1302c <__mempcpy_chk@plt+0x2048>
   13044:	ldr	r9, [r8, #4]
   13048:	ldr	r1, [r6, #8]
   1304c:	cmp	r9, #0
   13050:	bne	13078 <__mempcpy_chk@plt+0x2094>
   13054:	b	130c8 <__mempcpy_chk@plt+0x20e4>
   13058:	add	r0, r3, r0, lsl #3
   1305c:	add	r0, r0, #4
   13060:	ldr	r3, [r0]
   13064:	cmp	r2, #0
   13068:	str	r3, [r9, #4]
   1306c:	str	r9, [r0]
   13070:	mov	r9, r2
   13074:	beq	130c4 <__mempcpy_chk@plt+0x20e0>
   13078:	ldr	r4, [r9]
   1307c:	ldr	r2, [r6, #24]
   13080:	mov	r0, r4
   13084:	blx	r2
   13088:	ldr	r1, [r6, #8]
   1308c:	cmp	r0, r1
   13090:	bcs	13150 <__mempcpy_chk@plt+0x216c>
   13094:	ldr	r3, [r6]
   13098:	ldr	r2, [r9, #4]
   1309c:	ldr	r7, [r3, r0, lsl #3]
   130a0:	cmp	r7, #0
   130a4:	bne	13058 <__mempcpy_chk@plt+0x2074>
   130a8:	str	r4, [r3, r0, lsl #3]
   130ac:	ldr	r0, [r6, #12]
   130b0:	add	r0, r0, #1
   130b4:	str	r0, [r6, #12]
   130b8:	mov	r0, sl
   130bc:	str	r5, [r9]
   130c0:	b	13060 <__mempcpy_chk@plt+0x207c>
   130c4:	ldr	r7, [r8]
   130c8:	str	r5, [r8, #4]
   130cc:	mov	r0, r7
   130d0:	ldr	r2, [r6, #24]
   130d4:	blx	r2
   130d8:	mov	r4, r0
   130dc:	ldr	r0, [r6, #8]
   130e0:	cmp	r4, r0
   130e4:	bcs	13150 <__mempcpy_chk@plt+0x216c>
   130e8:	ldr	r9, [r6]
   130ec:	ldr	r0, [r9, r4, lsl #3]
   130f0:	cmp	r0, #0
   130f4:	beq	13004 <__mempcpy_chk@plt+0x2020>
   130f8:	ldr	r0, [sl]
   130fc:	cmp	r0, #0
   13100:	beq	13110 <__mempcpy_chk@plt+0x212c>
   13104:	ldr	r1, [r0, #4]
   13108:	str	r1, [sl]
   1310c:	b	13120 <__mempcpy_chk@plt+0x213c>
   13110:	mov	r0, #8
   13114:	bl	1667c <__mempcpy_chk@plt+0x5698>
   13118:	cmp	r0, #0
   1311c:	beq	13144 <__mempcpy_chk@plt+0x2160>
   13120:	add	r1, r9, r4, lsl #3
   13124:	str	r7, [r0]
   13128:	ldr	r2, [r1, #4]
   1312c:	str	r2, [r0, #4]
   13130:	str	r0, [r1, #4]
   13134:	b	13014 <__mempcpy_chk@plt+0x2030>
   13138:	mov	r0, #1
   1313c:	sub	sp, fp, #28
   13140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13144:	mov	r0, #0
   13148:	sub	sp, fp, #28
   1314c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13150:	bl	10fcc <abort@plt>
   13154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13158:	add	fp, sp, #28
   1315c:	sub	sp, sp, #4
   13160:	cmp	r1, #0
   13164:	beq	134a0 <__mempcpy_chk@plt+0x24bc>
   13168:	mov	r8, r2
   1316c:	mov	sl, r1
   13170:	ldr	r1, [r0, #8]
   13174:	ldr	r2, [r0, #24]
   13178:	mov	r4, r0
   1317c:	mov	r0, sl
   13180:	blx	r2
   13184:	mov	r7, r0
   13188:	ldr	r0, [r4, #8]
   1318c:	cmp	r7, r0
   13190:	bcs	134a0 <__mempcpy_chk@plt+0x24bc>
   13194:	ldr	r5, [r4]
   13198:	mov	r9, r5
   1319c:	ldr	r1, [r9, r7, lsl #3]!
   131a0:	cmp	r1, #0
   131a4:	beq	13238 <__mempcpy_chk@plt+0x2254>
   131a8:	cmp	r1, sl
   131ac:	beq	131d8 <__mempcpy_chk@plt+0x21f4>
   131b0:	ldr	r2, [r4, #28]
   131b4:	mov	r0, sl
   131b8:	blx	r2
   131bc:	cmp	r0, #0
   131c0:	mov	r6, r9
   131c4:	beq	131f4 <__mempcpy_chk@plt+0x2210>
   131c8:	ldr	r0, [r6]
   131cc:	cmp	r0, #0
   131d0:	bne	131dc <__mempcpy_chk@plt+0x21f8>
   131d4:	b	13238 <__mempcpy_chk@plt+0x2254>
   131d8:	mov	r0, sl
   131dc:	cmp	r8, #0
   131e0:	mov	r7, #0
   131e4:	strne	r0, [r8]
   131e8:	mov	r0, r7
   131ec:	sub	sp, fp, #28
   131f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131f4:	add	r6, r5, r7, lsl #3
   131f8:	ldr	r0, [r6, #4]!
   131fc:	cmp	r0, #0
   13200:	beq	13238 <__mempcpy_chk@plt+0x2254>
   13204:	ldr	r1, [r0]
   13208:	cmp	r1, sl
   1320c:	beq	1322c <__mempcpy_chk@plt+0x2248>
   13210:	ldr	r2, [r4, #28]
   13214:	mov	r0, sl
   13218:	blx	r2
   1321c:	ldr	r6, [r6]
   13220:	cmp	r0, #0
   13224:	beq	131f8 <__mempcpy_chk@plt+0x2214>
   13228:	b	131c8 <__mempcpy_chk@plt+0x21e4>
   1322c:	mov	r0, sl
   13230:	cmp	r0, #0
   13234:	bne	131dc <__mempcpy_chk@plt+0x21f8>
   13238:	vldr	s0, [r4, #8]
   1323c:	vldr	s2, [r4, #12]
   13240:	ldr	r0, [r4, #20]
   13244:	vcvt.f32.u32	s0, s0
   13248:	vcvt.f32.u32	s4, s2
   1324c:	vldr	s2, [r0, #8]
   13250:	vmul.f32	s6, s2, s0
   13254:	vcmpe.f32	s6, s4
   13258:	vmrs	APSR_nzcv, fpscr
   1325c:	bpl	133c0 <__mempcpy_chk@plt+0x23dc>
   13260:	movw	r1, #30096	; 0x7590
   13264:	movt	r1, #1
   13268:	cmp	r0, r1
   1326c:	beq	13308 <__mempcpy_chk@plt+0x2324>
   13270:	vldr	s6, [pc, #556]	; 134a4 <__mempcpy_chk@plt+0x24c0>
   13274:	vcmpe.f32	s2, s6
   13278:	vmrs	APSR_nzcv, fpscr
   1327c:	ble	132e4 <__mempcpy_chk@plt+0x2300>
   13280:	vldr	s8, [pc, #544]	; 134a8 <__mempcpy_chk@plt+0x24c4>
   13284:	vcmpe.f32	s2, s8
   13288:	vmrs	APSR_nzcv, fpscr
   1328c:	bpl	132e4 <__mempcpy_chk@plt+0x2300>
   13290:	vldr	s8, [pc, #532]	; 134ac <__mempcpy_chk@plt+0x24c8>
   13294:	vldr	s10, [r0, #12]
   13298:	vcmpe.f32	s10, s8
   1329c:	vmrs	APSR_nzcv, fpscr
   132a0:	ble	132e4 <__mempcpy_chk@plt+0x2300>
   132a4:	vldr	s8, [r0]
   132a8:	vcmpe.f32	s8, #0.0
   132ac:	vmrs	APSR_nzcv, fpscr
   132b0:	blt	132e4 <__mempcpy_chk@plt+0x2300>
   132b4:	vadd.f32	s6, s8, s6
   132b8:	vcmpe.f32	s6, s2
   132bc:	vmrs	APSR_nzcv, fpscr
   132c0:	bpl	132e4 <__mempcpy_chk@plt+0x2300>
   132c4:	vldr	s8, [r0, #4]
   132c8:	vmov.f32	s10, #112	; 0x3f800000  1.0
   132cc:	vcmpe.f32	s8, s10
   132d0:	vmrs	APSR_nzcv, fpscr
   132d4:	bhi	132e4 <__mempcpy_chk@plt+0x2300>
   132d8:	vcmpe.f32	s6, s8
   132dc:	vmrs	APSR_nzcv, fpscr
   132e0:	bmi	132f4 <__mempcpy_chk@plt+0x2310>
   132e4:	vldr	s2, [pc, #452]	; 134b0 <__mempcpy_chk@plt+0x24cc>
   132e8:	movw	r0, #30096	; 0x7590
   132ec:	movt	r0, #1
   132f0:	str	r0, [r4, #20]
   132f4:	vmul.f32	s6, s2, s0
   132f8:	vcmpe.f32	s6, s4
   132fc:	vmrs	APSR_nzcv, fpscr
   13300:	bmi	1331c <__mempcpy_chk@plt+0x2338>
   13304:	b	133c0 <__mempcpy_chk@plt+0x23dc>
   13308:	mov	r0, r1
   1330c:	vmul.f32	s6, s2, s0
   13310:	vcmpe.f32	s6, s4
   13314:	vmrs	APSR_nzcv, fpscr
   13318:	bpl	133c0 <__mempcpy_chk@plt+0x23dc>
   1331c:	vldr	s4, [r0, #12]
   13320:	ldrb	r0, [r0, #16]
   13324:	mvn	r7, #0
   13328:	cmp	r0, #0
   1332c:	vmul.f32	s0, s4, s0
   13330:	vldr	s4, [pc, #380]	; 134b4 <__mempcpy_chk@plt+0x24d0>
   13334:	vmul.f32	s2, s2, s0
   13338:	vseleq.f32	s0, s2, s0
   1333c:	vcmpe.f32	s0, s4
   13340:	vmrs	APSR_nzcv, fpscr
   13344:	bge	13434 <__mempcpy_chk@plt+0x2450>
   13348:	vcvt.u32.f32	s0, s0
   1334c:	mov	r0, r4
   13350:	vmov	r1, s0
   13354:	bl	12c7c <__mempcpy_chk@plt+0x1c98>
   13358:	cmp	r0, #0
   1335c:	beq	13434 <__mempcpy_chk@plt+0x2450>
   13360:	ldr	r1, [r4, #8]
   13364:	ldr	r2, [r4, #24]
   13368:	mov	r0, sl
   1336c:	blx	r2
   13370:	mov	r7, r0
   13374:	ldr	r0, [r4, #8]
   13378:	cmp	r7, r0
   1337c:	bcs	134a0 <__mempcpy_chk@plt+0x24bc>
   13380:	ldr	r5, [r4]
   13384:	mov	r9, r5
   13388:	ldr	r1, [r9, r7, lsl #3]!
   1338c:	cmp	r1, #0
   13390:	beq	133c0 <__mempcpy_chk@plt+0x23dc>
   13394:	cmp	r1, sl
   13398:	mov	r0, sl
   1339c:	beq	133b8 <__mempcpy_chk@plt+0x23d4>
   133a0:	ldr	r2, [r4, #28]
   133a4:	mov	r0, sl
   133a8:	blx	r2
   133ac:	cmp	r0, #0
   133b0:	beq	13450 <__mempcpy_chk@plt+0x246c>
   133b4:	ldr	r0, [r9]
   133b8:	cmp	r0, #0
   133bc:	bne	134a0 <__mempcpy_chk@plt+0x24bc>
   133c0:	ldr	r0, [r9]
   133c4:	cmp	r0, #0
   133c8:	beq	133e4 <__mempcpy_chk@plt+0x2400>
   133cc:	ldr	r0, [r4, #36]	; 0x24
   133d0:	cmp	r0, #0
   133d4:	beq	13404 <__mempcpy_chk@plt+0x2420>
   133d8:	ldr	r1, [r0, #4]
   133dc:	str	r1, [r4, #36]	; 0x24
   133e0:	b	13414 <__mempcpy_chk@plt+0x2430>
   133e4:	str	sl, [r9]
   133e8:	ldr	r0, [r4, #12]
   133ec:	ldr	r1, [r4, #16]
   133f0:	add	r0, r0, #1
   133f4:	add	r1, r1, #1
   133f8:	str	r0, [r4, #12]
   133fc:	str	r1, [r4, #16]
   13400:	b	13430 <__mempcpy_chk@plt+0x244c>
   13404:	mov	r0, #8
   13408:	bl	1667c <__mempcpy_chk@plt+0x5698>
   1340c:	cmp	r0, #0
   13410:	beq	13440 <__mempcpy_chk@plt+0x245c>
   13414:	str	sl, [r0]
   13418:	ldr	r1, [r9, #4]
   1341c:	str	r1, [r0, #4]
   13420:	str	r0, [r9, #4]
   13424:	ldr	r0, [r4, #16]
   13428:	add	r0, r0, #1
   1342c:	str	r0, [r4, #16]
   13430:	mov	r7, #1
   13434:	mov	r0, r7
   13438:	sub	sp, fp, #28
   1343c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13440:	mvn	r7, #0
   13444:	mov	r0, r7
   13448:	sub	sp, fp, #28
   1344c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13450:	add	r6, r5, r7, lsl #3
   13454:	ldr	r0, [r6, #4]!
   13458:	cmp	r0, #0
   1345c:	beq	133c0 <__mempcpy_chk@plt+0x23dc>
   13460:	ldr	r1, [r0]
   13464:	cmp	r1, sl
   13468:	beq	13494 <__mempcpy_chk@plt+0x24b0>
   1346c:	ldr	r2, [r4, #28]
   13470:	mov	r0, sl
   13474:	blx	r2
   13478:	ldr	r6, [r6]
   1347c:	cmp	r0, #0
   13480:	beq	13454 <__mempcpy_chk@plt+0x2470>
   13484:	ldr	r0, [r6]
   13488:	cmp	r0, #0
   1348c:	beq	133c0 <__mempcpy_chk@plt+0x23dc>
   13490:	b	134a0 <__mempcpy_chk@plt+0x24bc>
   13494:	mov	r0, sl
   13498:	cmp	r0, #0
   1349c:	beq	133c0 <__mempcpy_chk@plt+0x23dc>
   134a0:	bl	10fcc <abort@plt>
   134a4:	stclcc	12, cr12, [ip, #820]	; 0x334
   134a8:	svccc	0x00666666
   134ac:	svccc	0x008ccccd
   134b0:	svccc	0x004ccccd
   134b4:	svcmi	0x00800000
   134b8:	push	{r4, sl, fp, lr}
   134bc:	add	fp, sp, #8
   134c0:	sub	sp, sp, #8
   134c4:	add	r2, sp, #4
   134c8:	mov	r4, r1
   134cc:	bl	13154 <__mempcpy_chk@plt+0x2170>
   134d0:	cmn	r0, #1
   134d4:	beq	134f0 <__mempcpy_chk@plt+0x250c>
   134d8:	ldr	r1, [sp, #4]
   134dc:	cmp	r0, #0
   134e0:	moveq	r4, r1
   134e4:	mov	r0, r4
   134e8:	sub	sp, fp, #8
   134ec:	pop	{r4, sl, fp, pc}
   134f0:	mov	r4, #0
   134f4:	mov	r0, r4
   134f8:	sub	sp, fp, #8
   134fc:	pop	{r4, sl, fp, pc}
   13500:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13504:	add	fp, sp, #24
   13508:	mov	r9, r1
   1350c:	ldr	r1, [r0, #8]
   13510:	ldr	r2, [r0, #24]
   13514:	mov	r5, r0
   13518:	mov	r0, r9
   1351c:	blx	r2
   13520:	mov	r7, r0
   13524:	ldr	r0, [r5, #8]
   13528:	cmp	r7, r0
   1352c:	bcs	137a0 <__mempcpy_chk@plt+0x27bc>
   13530:	ldr	r6, [r5]
   13534:	mov	r8, #0
   13538:	mov	r4, r6
   1353c:	ldr	r1, [r4, r7, lsl #3]!
   13540:	cmp	r1, #0
   13544:	beq	135f8 <__mempcpy_chk@plt+0x2614>
   13548:	cmp	r1, r9
   1354c:	beq	13568 <__mempcpy_chk@plt+0x2584>
   13550:	ldr	r2, [r5, #28]
   13554:	mov	r0, r9
   13558:	blx	r2
   1355c:	cmp	r0, #0
   13560:	beq	135a0 <__mempcpy_chk@plt+0x25bc>
   13564:	ldr	r9, [r4]
   13568:	add	r0, r6, r7, lsl #3
   1356c:	ldr	r0, [r0, #4]
   13570:	cmp	r0, #0
   13574:	beq	135e8 <__mempcpy_chk@plt+0x2604>
   13578:	ldm	r0, {r1, r2}
   1357c:	stm	r4, {r1, r2}
   13580:	mov	r1, #0
   13584:	str	r1, [r0]
   13588:	ldr	r1, [r5, #36]	; 0x24
   1358c:	str	r1, [r0, #4]
   13590:	str	r0, [r5, #36]	; 0x24
   13594:	cmp	r9, #0
   13598:	bne	13630 <__mempcpy_chk@plt+0x264c>
   1359c:	b	135f8 <__mempcpy_chk@plt+0x2614>
   135a0:	add	r7, r6, r7, lsl #3
   135a4:	ldr	r0, [r7, #4]!
   135a8:	cmp	r0, #0
   135ac:	beq	135f8 <__mempcpy_chk@plt+0x2614>
   135b0:	ldr	r1, [r0]
   135b4:	cmp	r1, r9
   135b8:	beq	13600 <__mempcpy_chk@plt+0x261c>
   135bc:	ldr	r2, [r5, #28]
   135c0:	mov	r0, r9
   135c4:	blx	r2
   135c8:	ldr	r1, [r7]
   135cc:	cmp	r0, #0
   135d0:	bne	13608 <__mempcpy_chk@plt+0x2624>
   135d4:	ldr	r0, [r1, #4]!
   135d8:	mov	r7, r1
   135dc:	cmp	r0, #0
   135e0:	bne	135b0 <__mempcpy_chk@plt+0x25cc>
   135e4:	b	135f8 <__mempcpy_chk@plt+0x2614>
   135e8:	mov	r0, #0
   135ec:	str	r0, [r4]
   135f0:	cmp	r9, #0
   135f4:	bne	13630 <__mempcpy_chk@plt+0x264c>
   135f8:	mov	r0, r8
   135fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13600:	mov	r1, r0
   13604:	b	1360c <__mempcpy_chk@plt+0x2628>
   13608:	ldr	r9, [r1]
   1360c:	ldr	r0, [r1, #4]
   13610:	str	r0, [r7]
   13614:	mov	r0, #0
   13618:	str	r0, [r1]
   1361c:	ldr	r0, [r5, #36]	; 0x24
   13620:	str	r0, [r1, #4]
   13624:	str	r1, [r5, #36]	; 0x24
   13628:	cmp	r9, #0
   1362c:	beq	135f8 <__mempcpy_chk@plt+0x2614>
   13630:	ldr	r0, [r5, #16]
   13634:	sub	r0, r0, #1
   13638:	str	r0, [r5, #16]
   1363c:	ldr	r0, [r4]
   13640:	cmp	r0, #0
   13644:	bne	13794 <__mempcpy_chk@plt+0x27b0>
   13648:	ldr	r0, [r5, #12]
   1364c:	vldr	s0, [r5, #8]
   13650:	sub	r1, r0, #1
   13654:	str	r1, [r5, #12]
   13658:	vmov	s2, r1
   1365c:	ldr	r0, [r5, #20]
   13660:	vcvt.f32.u32	s0, s0
   13664:	vcvt.f32.u32	s2, s2
   13668:	vldr	s4, [r0]
   1366c:	vmul.f32	s6, s4, s0
   13670:	vcmpe.f32	s6, s2
   13674:	vmrs	APSR_nzcv, fpscr
   13678:	ble	13794 <__mempcpy_chk@plt+0x27b0>
   1367c:	movw	r1, #30096	; 0x7590
   13680:	movt	r1, #1
   13684:	cmp	r0, r1
   13688:	beq	13724 <__mempcpy_chk@plt+0x2740>
   1368c:	vldr	s8, [pc, #272]	; 137a4 <__mempcpy_chk@plt+0x27c0>
   13690:	vldr	s6, [r0, #8]
   13694:	vcmpe.f32	s6, s8
   13698:	vmrs	APSR_nzcv, fpscr
   1369c:	ble	13700 <__mempcpy_chk@plt+0x271c>
   136a0:	vldr	s10, [pc, #256]	; 137a8 <__mempcpy_chk@plt+0x27c4>
   136a4:	vcmpe.f32	s6, s10
   136a8:	vmrs	APSR_nzcv, fpscr
   136ac:	bpl	13700 <__mempcpy_chk@plt+0x271c>
   136b0:	vcmpe.f32	s4, #0.0
   136b4:	vmrs	APSR_nzcv, fpscr
   136b8:	blt	13700 <__mempcpy_chk@plt+0x271c>
   136bc:	vldr	s10, [r0, #12]
   136c0:	vldr	s12, [pc, #228]	; 137ac <__mempcpy_chk@plt+0x27c8>
   136c4:	vcmpe.f32	s10, s12
   136c8:	vmrs	APSR_nzcv, fpscr
   136cc:	ble	13700 <__mempcpy_chk@plt+0x271c>
   136d0:	vadd.f32	s8, s4, s8
   136d4:	vcmpe.f32	s8, s6
   136d8:	vmrs	APSR_nzcv, fpscr
   136dc:	bpl	13700 <__mempcpy_chk@plt+0x271c>
   136e0:	vldr	s6, [r0, #4]
   136e4:	vmov.f32	s10, #112	; 0x3f800000  1.0
   136e8:	vcmpe.f32	s6, s10
   136ec:	vmrs	APSR_nzcv, fpscr
   136f0:	bhi	13700 <__mempcpy_chk@plt+0x271c>
   136f4:	vcmpe.f32	s8, s6
   136f8:	vmrs	APSR_nzcv, fpscr
   136fc:	bmi	13710 <__mempcpy_chk@plt+0x272c>
   13700:	vldr	s4, [pc, #168]	; 137b0 <__mempcpy_chk@plt+0x27cc>
   13704:	movw	r0, #30096	; 0x7590
   13708:	movt	r0, #1
   1370c:	str	r0, [r5, #20]
   13710:	vmul.f32	s4, s4, s0
   13714:	vcmpe.f32	s4, s2
   13718:	vmrs	APSR_nzcv, fpscr
   1371c:	bgt	13738 <__mempcpy_chk@plt+0x2754>
   13720:	b	13794 <__mempcpy_chk@plt+0x27b0>
   13724:	mov	r0, r1
   13728:	vmul.f32	s4, s4, s0
   1372c:	vcmpe.f32	s4, s2
   13730:	vmrs	APSR_nzcv, fpscr
   13734:	ble	13794 <__mempcpy_chk@plt+0x27b0>
   13738:	vldr	s2, [r0, #4]
   1373c:	ldrb	r1, [r0, #16]
   13740:	cmp	r1, #0
   13744:	vmul.f32	s0, s2, s0
   13748:	bne	13754 <__mempcpy_chk@plt+0x2770>
   1374c:	vldr	s2, [r0, #8]
   13750:	vmul.f32	s0, s0, s2
   13754:	vcvt.u32.f32	s0, s0
   13758:	mov	r0, r5
   1375c:	vmov	r1, s0
   13760:	bl	12c7c <__mempcpy_chk@plt+0x1c98>
   13764:	cmp	r0, #0
   13768:	bne	13794 <__mempcpy_chk@plt+0x27b0>
   1376c:	ldr	r0, [r5, #36]	; 0x24
   13770:	cmp	r0, #0
   13774:	beq	1378c <__mempcpy_chk@plt+0x27a8>
   13778:	ldr	r4, [r0, #4]
   1377c:	bl	1233c <__mempcpy_chk@plt+0x1358>
   13780:	cmp	r4, #0
   13784:	mov	r0, r4
   13788:	bne	13778 <__mempcpy_chk@plt+0x2794>
   1378c:	mov	r0, #0
   13790:	str	r0, [r5, #36]	; 0x24
   13794:	mov	r8, r9
   13798:	mov	r0, r8
   1379c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137a0:	bl	10fcc <abort@plt>
   137a4:	stclcc	12, cr12, [ip, #820]	; 0x334
   137a8:	svccc	0x00666666
   137ac:	svccc	0x008ccccd
   137b0:	andeq	r0, r0, r0
   137b4:	b	13500 <__mempcpy_chk@plt+0x251c>
   137b8:	push	{r4, r5, fp, lr}
   137bc:	add	fp, sp, #8
   137c0:	mov	r5, r0
   137c4:	ldr	r0, [r0]
   137c8:	mov	r4, r1
   137cc:	bl	16924 <__mempcpy_chk@plt+0x5940>
   137d0:	ldrd	r2, [r5, #8]
   137d4:	eor	r0, r2, r0
   137d8:	mov	r1, r3
   137dc:	mov	r2, r4
   137e0:	mov	r3, #0
   137e4:	bl	16b4c <__mempcpy_chk@plt+0x5b68>
   137e8:	mov	r0, r2
   137ec:	pop	{r4, r5, fp, pc}
   137f0:	push	{r4, r5, fp, lr}
   137f4:	add	fp, sp, #8
   137f8:	mov	lr, r1
   137fc:	mov	r2, r0
   13800:	ldr	r3, [r2, #8]!
   13804:	ldr	ip, [lr, #8]!
   13808:	ldr	r4, [r2, #4]
   1380c:	eor	ip, r3, ip
   13810:	ldr	r3, [lr, #4]
   13814:	eor	r3, r4, r3
   13818:	orrs	r3, ip, r3
   1381c:	mov	ip, #0
   13820:	bne	13850 <__mempcpy_chk@plt+0x286c>
   13824:	ldrd	r4, [lr, #8]
   13828:	ldrd	r2, [r2, #8]
   1382c:	eor	r3, r3, r5
   13830:	eor	r2, r2, r4
   13834:	orrs	r2, r2, r3
   13838:	bne	13850 <__mempcpy_chk@plt+0x286c>
   1383c:	ldr	r1, [r1]
   13840:	ldr	r0, [r0]
   13844:	bl	10db0 <strcmp@plt>
   13848:	clz	r0, r0
   1384c:	lsr	ip, r0, #5
   13850:	mov	r0, ip
   13854:	pop	{r4, r5, fp, pc}
   13858:	push	{r4, sl, fp, lr}
   1385c:	add	fp, sp, #8
   13860:	mov	r4, r0
   13864:	ldr	r0, [r0]
   13868:	bl	1233c <__mempcpy_chk@plt+0x1358>
   1386c:	mov	r0, r4
   13870:	pop	{r4, sl, fp, lr}
   13874:	b	1233c <__mempcpy_chk@plt+0x1358>
   13878:	push	{r4, r5, fp, lr}
   1387c:	add	fp, sp, #8
   13880:	cmp	r0, #0
   13884:	beq	13918 <__mempcpy_chk@plt+0x2934>
   13888:	mov	r1, #47	; 0x2f
   1388c:	mov	r4, r0
   13890:	bl	10f90 <strrchr@plt>
   13894:	cmp	r0, #0
   13898:	mov	r5, r4
   1389c:	addne	r5, r0, #1
   138a0:	sub	r0, r5, r4
   138a4:	cmp	r0, #7
   138a8:	blt	138fc <__mempcpy_chk@plt+0x2918>
   138ac:	movw	r1, #30172	; 0x75dc
   138b0:	sub	r0, r5, #7
   138b4:	mov	r2, #7
   138b8:	movt	r1, #1
   138bc:	bl	10fc0 <strncmp@plt>
   138c0:	cmp	r0, #0
   138c4:	bne	138fc <__mempcpy_chk@plt+0x2918>
   138c8:	movw	r1, #30180	; 0x75e4
   138cc:	mov	r0, r5
   138d0:	mov	r2, #3
   138d4:	movt	r1, #1
   138d8:	bl	10fc0 <strncmp@plt>
   138dc:	cmp	r0, #0
   138e0:	beq	138ec <__mempcpy_chk@plt+0x2908>
   138e4:	mov	r4, r5
   138e8:	b	138fc <__mempcpy_chk@plt+0x2918>
   138ec:	movw	r0, #33072	; 0x8130
   138f0:	add	r4, r5, #3
   138f4:	movt	r0, #2
   138f8:	str	r4, [r0]
   138fc:	movw	r0, #33076	; 0x8134
   13900:	movt	r0, #2
   13904:	str	r4, [r0]
   13908:	movw	r0, #33108	; 0x8154
   1390c:	movt	r0, #2
   13910:	str	r4, [r0]
   13914:	pop	{r4, r5, fp, pc}
   13918:	movw	r0, #33088	; 0x8140
   1391c:	mov	r1, #55	; 0x37
   13920:	mov	r2, #1
   13924:	movt	r0, #2
   13928:	ldr	r3, [r0]
   1392c:	movw	r0, #30116	; 0x75a4
   13930:	movt	r0, #1
   13934:	bl	10e58 <fwrite@plt>
   13938:	bl	10fcc <abort@plt>
   1393c:	push	{r4, r5, r6, sl, fp, lr}
   13940:	add	fp, sp, #16
   13944:	mov	r4, r0
   13948:	movw	r0, #33112	; 0x8158
   1394c:	movt	r0, #2
   13950:	cmp	r4, #0
   13954:	moveq	r4, r0
   13958:	bl	10f18 <__errno_location@plt>
   1395c:	ldr	r6, [r0]
   13960:	mov	r5, r0
   13964:	mov	r0, r4
   13968:	mov	r1, #48	; 0x30
   1396c:	bl	16508 <__mempcpy_chk@plt+0x5524>
   13970:	str	r6, [r5]
   13974:	pop	{r4, r5, r6, sl, fp, pc}
   13978:	movw	r1, #33112	; 0x8158
   1397c:	cmp	r0, #0
   13980:	movt	r1, #2
   13984:	movne	r1, r0
   13988:	ldr	r0, [r1]
   1398c:	bx	lr
   13990:	movw	r2, #33112	; 0x8158
   13994:	cmp	r0, #0
   13998:	movt	r2, #2
   1399c:	movne	r2, r0
   139a0:	str	r1, [r2]
   139a4:	bx	lr
   139a8:	movw	r3, #33112	; 0x8158
   139ac:	cmp	r0, #0
   139b0:	and	r2, r2, #1
   139b4:	movt	r3, #2
   139b8:	movne	r3, r0
   139bc:	ubfx	r0, r1, #5, #3
   139c0:	and	r1, r1, #31
   139c4:	add	ip, r3, r0, lsl #2
   139c8:	mov	r0, #1
   139cc:	ldr	r3, [ip, #8]
   139d0:	and	r0, r0, r3, lsr r1
   139d4:	eor	r2, r0, r2
   139d8:	eor	r1, r3, r2, lsl r1
   139dc:	str	r1, [ip, #8]
   139e0:	bx	lr
   139e4:	movw	r2, #33112	; 0x8158
   139e8:	cmp	r0, #0
   139ec:	movt	r2, #2
   139f0:	movne	r2, r0
   139f4:	ldr	r0, [r2, #4]
   139f8:	str	r1, [r2, #4]
   139fc:	bx	lr
   13a00:	push	{fp, lr}
   13a04:	mov	fp, sp
   13a08:	movw	r3, #33112	; 0x8158
   13a0c:	cmp	r0, #0
   13a10:	movt	r3, #2
   13a14:	movne	r3, r0
   13a18:	cmp	r1, #0
   13a1c:	mov	r0, #10
   13a20:	cmpne	r2, #0
   13a24:	str	r0, [r3]
   13a28:	bne	13a30 <__mempcpy_chk@plt+0x2a4c>
   13a2c:	bl	10fcc <abort@plt>
   13a30:	str	r1, [r3, #40]	; 0x28
   13a34:	str	r2, [r3, #44]	; 0x2c
   13a38:	pop	{fp, pc}
   13a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a40:	add	fp, sp, #28
   13a44:	sub	sp, sp, #20
   13a48:	mov	r7, r0
   13a4c:	ldr	r0, [fp, #8]
   13a50:	movw	r5, #33112	; 0x8158
   13a54:	mov	r8, r3
   13a58:	mov	r9, r2
   13a5c:	mov	sl, r1
   13a60:	movt	r5, #2
   13a64:	cmp	r0, #0
   13a68:	movne	r5, r0
   13a6c:	bl	10f18 <__errno_location@plt>
   13a70:	ldr	r2, [r5, #40]	; 0x28
   13a74:	ldr	r3, [r5, #44]	; 0x2c
   13a78:	mov	r4, r0
   13a7c:	ldm	r5, {r0, r1}
   13a80:	add	r5, r5, #8
   13a84:	ldr	r6, [r4]
   13a88:	stm	sp, {r0, r1, r5}
   13a8c:	mov	r0, r7
   13a90:	mov	r1, sl
   13a94:	str	r2, [sp, #12]
   13a98:	str	r3, [sp, #16]
   13a9c:	mov	r2, r9
   13aa0:	mov	r3, r8
   13aa4:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   13aa8:	str	r6, [r4]
   13aac:	sub	sp, fp, #28
   13ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ab8:	add	fp, sp, #28
   13abc:	sub	sp, sp, #156	; 0x9c
   13ac0:	str	r0, [fp, #-84]	; 0xffffffac
   13ac4:	add	r0, r2, #1
   13ac8:	mov	r6, r1
   13acc:	mov	r7, r3
   13ad0:	str	r2, [fp, #-80]	; 0xffffffb0
   13ad4:	str	r0, [sp, #80]	; 0x50
   13ad8:	ldr	r0, [fp, #12]
   13adc:	and	r1, r0, #1
   13ae0:	str	r1, [sp, #36]	; 0x24
   13ae4:	and	r1, r0, #4
   13ae8:	str	r1, [sp, #32]
   13aec:	ubfx	r8, r0, #1, #1
   13af0:	bl	10e70 <__ctype_get_mb_cur_max@plt>
   13af4:	str	r0, [sp, #40]	; 0x28
   13af8:	ldr	r0, [fp, #24]
   13afc:	ldr	r4, [fp, #8]
   13b00:	mov	r1, #0
   13b04:	str	r1, [fp, #-52]	; 0xffffffcc
   13b08:	mov	r1, #0
   13b0c:	str	r1, [sp, #60]	; 0x3c
   13b10:	mov	r1, #1
   13b14:	str	r1, [sp, #84]	; 0x54
   13b18:	str	r0, [sp, #76]	; 0x4c
   13b1c:	ldr	r0, [fp, #20]
   13b20:	str	r0, [sp, #72]	; 0x48
   13b24:	mov	r0, #0
   13b28:	str	r0, [sp, #56]	; 0x38
   13b2c:	mov	r0, #0
   13b30:	str	r0, [fp, #-88]	; 0xffffffa8
   13b34:	mov	r0, #0
   13b38:	str	r0, [fp, #-72]	; 0xffffffb8
   13b3c:	mov	r0, #0
   13b40:	cmp	r4, #10
   13b44:	bhi	14e60 <__mempcpy_chk@plt+0x3e7c>
   13b48:	add	r1, pc, #24
   13b4c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b50:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13b54:	mov	r5, r6
   13b58:	mov	r9, #0
   13b5c:	mov	r2, #1
   13b60:	mov	r3, #0
   13b64:	ldr	pc, [r1, r4, lsl #2]
   13b68:	andeq	r3, r1, r0, lsr ip
   13b6c:	andeq	r3, r1, ip, ror #24
   13b70:	andeq	r3, r1, r0, asr #24
   13b74:	andeq	r3, r1, r8, lsr #24
   13b78:	andeq	r3, r1, r0, ror #24
   13b7c:	andeq	r3, r1, r4, asr #25
   13b80:	andeq	r3, r1, r0, asr ip
   13b84:	andeq	r3, r1, ip, lsr pc
   13b88:	muleq	r1, r4, fp
   13b8c:	muleq	r1, r4, fp
   13b90:	andeq	r3, r1, ip, asr #27
   13b94:	movw	r6, #30264	; 0x7638
   13b98:	mov	r0, #0
   13b9c:	mov	r2, #5
   13ba0:	movt	r6, #1
   13ba4:	mov	r1, r6
   13ba8:	bl	10e10 <dcgettext@plt>
   13bac:	cmp	r0, r6
   13bb0:	str	r0, [sp, #72]	; 0x48
   13bb4:	bne	13da4 <__mempcpy_chk@plt+0x2dc0>
   13bb8:	bl	16968 <__mempcpy_chk@plt+0x5984>
   13bbc:	ldrb	r1, [r0]
   13bc0:	and	r1, r1, #223	; 0xdf
   13bc4:	cmp	r1, #71	; 0x47
   13bc8:	beq	13d24 <__mempcpy_chk@plt+0x2d40>
   13bcc:	cmp	r1, #85	; 0x55
   13bd0:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13bd4:	ldrb	r1, [r0, #1]
   13bd8:	and	r1, r1, #223	; 0xdf
   13bdc:	cmp	r1, #84	; 0x54
   13be0:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13be4:	ldrb	r1, [r0, #2]
   13be8:	and	r1, r1, #223	; 0xdf
   13bec:	cmp	r1, #70	; 0x46
   13bf0:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13bf4:	ldrb	r1, [r0, #3]
   13bf8:	cmp	r1, #45	; 0x2d
   13bfc:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13c00:	ldrb	r1, [r0, #4]
   13c04:	cmp	r1, #56	; 0x38
   13c08:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13c0c:	ldrb	r0, [r0, #5]
   13c10:	cmp	r0, #0
   13c14:	movw	r0, #30268	; 0x763c
   13c18:	movt	r0, #1
   13c1c:	str	r0, [sp, #72]	; 0x48
   13c20:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13c24:	b	13da4 <__mempcpy_chk@plt+0x2dc0>
   13c28:	mov	r0, #1
   13c2c:	b	13c6c <__mempcpy_chk@plt+0x2c88>
   13c30:	mov	r4, #0
   13c34:	mov	r9, #0
   13c38:	mov	r2, r0
   13c3c:	b	13cbc <__mempcpy_chk@plt+0x2cd8>
   13c40:	tst	r8, #1
   13c44:	bne	13c6c <__mempcpy_chk@plt+0x2c88>
   13c48:	mov	r2, r0
   13c4c:	b	13c94 <__mempcpy_chk@plt+0x2cb0>
   13c50:	mov	r0, #1
   13c54:	mov	r9, #0
   13c58:	mov	r4, #5
   13c5c:	b	13cd8 <__mempcpy_chk@plt+0x2cf4>
   13c60:	mov	r2, #1
   13c64:	tst	r8, #1
   13c68:	beq	13c94 <__mempcpy_chk@plt+0x2cb0>
   13c6c:	mov	r1, #1
   13c70:	mov	r9, #0
   13c74:	mov	r4, #2
   13c78:	mov	r2, r0
   13c7c:	mov	r3, #1
   13c80:	str	r1, [fp, #-72]	; 0xffffffb8
   13c84:	movw	r1, #30266	; 0x763a
   13c88:	movt	r1, #1
   13c8c:	str	r1, [fp, #-88]	; 0xffffffa8
   13c90:	b	13f3c <__mempcpy_chk@plt+0x2f58>
   13c94:	cmp	r5, #0
   13c98:	mov	r9, #1
   13c9c:	mov	r4, #2
   13ca0:	movne	r0, #39	; 0x27
   13ca4:	strbne	r0, [ip]
   13ca8:	movw	r0, #30266	; 0x763a
   13cac:	movt	r0, #1
   13cb0:	str	r0, [fp, #-88]	; 0xffffffa8
   13cb4:	mov	r0, #1
   13cb8:	str	r0, [fp, #-72]	; 0xffffffb8
   13cbc:	mov	r3, #0
   13cc0:	b	13f3c <__mempcpy_chk@plt+0x2f58>
   13cc4:	mov	r4, #5
   13cc8:	tst	r8, #1
   13ccc:	beq	13cf4 <__mempcpy_chk@plt+0x2d10>
   13cd0:	mov	r0, #1
   13cd4:	mov	r9, #0
   13cd8:	str	r0, [fp, #-72]	; 0xffffffb8
   13cdc:	movw	r0, #30262	; 0x7636
   13ce0:	mov	r2, #1
   13ce4:	mov	r3, #1
   13ce8:	movt	r0, #1
   13cec:	str	r0, [fp, #-88]	; 0xffffffa8
   13cf0:	b	13f3c <__mempcpy_chk@plt+0x2f58>
   13cf4:	cmp	r5, #0
   13cf8:	mov	r3, #0
   13cfc:	mov	r9, #1
   13d00:	mov	r2, #1
   13d04:	movne	r0, #34	; 0x22
   13d08:	strbne	r0, [ip]
   13d0c:	movw	r0, #30262	; 0x7636
   13d10:	movt	r0, #1
   13d14:	str	r0, [fp, #-88]	; 0xffffffa8
   13d18:	mov	r0, #1
   13d1c:	str	r0, [fp, #-72]	; 0xffffffb8
   13d20:	b	13f3c <__mempcpy_chk@plt+0x2f58>
   13d24:	ldrb	r1, [r0, #1]
   13d28:	and	r1, r1, #223	; 0xdf
   13d2c:	cmp	r1, #66	; 0x42
   13d30:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13d34:	ldrb	r1, [r0, #2]
   13d38:	cmp	r1, #49	; 0x31
   13d3c:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13d40:	ldrb	r1, [r0, #3]
   13d44:	cmp	r1, #56	; 0x38
   13d48:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13d4c:	ldrb	r1, [r0, #4]
   13d50:	cmp	r1, #48	; 0x30
   13d54:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13d58:	ldrb	r1, [r0, #5]
   13d5c:	cmp	r1, #51	; 0x33
   13d60:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13d64:	ldrb	r1, [r0, #6]
   13d68:	cmp	r1, #48	; 0x30
   13d6c:	bne	13d88 <__mempcpy_chk@plt+0x2da4>
   13d70:	ldrb	r0, [r0, #7]
   13d74:	cmp	r0, #0
   13d78:	movw	r0, #30276	; 0x7644
   13d7c:	movt	r0, #1
   13d80:	str	r0, [sp, #72]	; 0x48
   13d84:	beq	13da4 <__mempcpy_chk@plt+0x2dc0>
   13d88:	movw	r1, #30262	; 0x7636
   13d8c:	movw	r0, #30266	; 0x763a
   13d90:	cmp	r4, #9
   13d94:	movt	r1, #1
   13d98:	movt	r0, #1
   13d9c:	moveq	r0, r1
   13da0:	str	r0, [sp, #72]	; 0x48
   13da4:	movw	r6, #30266	; 0x763a
   13da8:	mov	r0, #0
   13dac:	mov	r2, #5
   13db0:	movt	r6, #1
   13db4:	mov	r1, r6
   13db8:	bl	10e10 <dcgettext@plt>
   13dbc:	cmp	r0, r6
   13dc0:	str	r0, [sp, #76]	; 0x4c
   13dc4:	beq	13e10 <__mempcpy_chk@plt+0x2e2c>
   13dc8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13dcc:	mov	r9, #0
   13dd0:	tst	r8, #1
   13dd4:	bne	13f18 <__mempcpy_chk@plt+0x2f34>
   13dd8:	ldr	r0, [sp, #72]	; 0x48
   13ddc:	ldrb	r0, [r0]
   13de0:	cmp	r0, #0
   13de4:	beq	13f18 <__mempcpy_chk@plt+0x2f34>
   13de8:	ldr	r1, [sp, #72]	; 0x48
   13dec:	mov	r9, #0
   13df0:	add	r1, r1, #1
   13df4:	cmp	r9, r5
   13df8:	strbcc	r0, [ip, r9]
   13dfc:	ldrb	r0, [r1, r9]
   13e00:	add	r9, r9, #1
   13e04:	cmp	r0, #0
   13e08:	bne	13df4 <__mempcpy_chk@plt+0x2e10>
   13e0c:	b	13f18 <__mempcpy_chk@plt+0x2f34>
   13e10:	bl	16968 <__mempcpy_chk@plt+0x5984>
   13e14:	ldrb	r1, [r0]
   13e18:	and	r1, r1, #223	; 0xdf
   13e1c:	cmp	r1, #71	; 0x47
   13e20:	beq	13e90 <__mempcpy_chk@plt+0x2eac>
   13e24:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e28:	cmp	r1, #85	; 0x55
   13e2c:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13e30:	ldrb	r1, [r0, #1]
   13e34:	and	r1, r1, #223	; 0xdf
   13e38:	cmp	r1, #84	; 0x54
   13e3c:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13e40:	ldrb	r1, [r0, #2]
   13e44:	and	r1, r1, #223	; 0xdf
   13e48:	cmp	r1, #70	; 0x46
   13e4c:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13e50:	ldrb	r1, [r0, #3]
   13e54:	cmp	r1, #45	; 0x2d
   13e58:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13e5c:	ldrb	r1, [r0, #4]
   13e60:	cmp	r1, #56	; 0x38
   13e64:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13e68:	ldrb	r0, [r0, #5]
   13e6c:	cmp	r0, #0
   13e70:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13e74:	movw	r0, #30272	; 0x7640
   13e78:	movt	r0, #1
   13e7c:	str	r0, [sp, #76]	; 0x4c
   13e80:	mov	r9, #0
   13e84:	tst	r8, #1
   13e88:	beq	13dd8 <__mempcpy_chk@plt+0x2df4>
   13e8c:	b	13f18 <__mempcpy_chk@plt+0x2f34>
   13e90:	ldrb	r1, [r0, #1]
   13e94:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e98:	and	r1, r1, #223	; 0xdf
   13e9c:	cmp	r1, #66	; 0x42
   13ea0:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13ea4:	ldrb	r1, [r0, #2]
   13ea8:	cmp	r1, #49	; 0x31
   13eac:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13eb0:	ldrb	r1, [r0, #3]
   13eb4:	cmp	r1, #56	; 0x38
   13eb8:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13ebc:	ldrb	r1, [r0, #4]
   13ec0:	cmp	r1, #48	; 0x30
   13ec4:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13ec8:	ldrb	r1, [r0, #5]
   13ecc:	cmp	r1, #51	; 0x33
   13ed0:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13ed4:	ldrb	r1, [r0, #6]
   13ed8:	cmp	r1, #48	; 0x30
   13edc:	bne	13eec <__mempcpy_chk@plt+0x2f08>
   13ee0:	ldrb	r0, [r0, #7]
   13ee4:	cmp	r0, #0
   13ee8:	beq	14d00 <__mempcpy_chk@plt+0x3d1c>
   13eec:	movw	r0, #30266	; 0x763a
   13ef0:	cmp	r4, #9
   13ef4:	movt	r0, #1
   13ef8:	mov	r1, r0
   13efc:	movw	r0, #30262	; 0x7636
   13f00:	movt	r0, #1
   13f04:	moveq	r1, r0
   13f08:	str	r1, [sp, #76]	; 0x4c
   13f0c:	mov	r9, #0
   13f10:	tst	r8, #1
   13f14:	beq	13dd8 <__mempcpy_chk@plt+0x2df4>
   13f18:	ldr	r6, [sp, #76]	; 0x4c
   13f1c:	mov	r0, r6
   13f20:	bl	10f0c <strlen@plt>
   13f24:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f28:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13f2c:	str	r0, [fp, #-72]	; 0xffffffb8
   13f30:	str	r6, [fp, #-88]	; 0xffffffa8
   13f34:	mov	r2, #1
   13f38:	mov	r3, r8
   13f3c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13f40:	str	r4, [fp, #-64]	; 0xffffffc0
   13f44:	mov	sl, #0
   13f48:	str	r3, [fp, #-76]	; 0xffffffb4
   13f4c:	str	r2, [sp, #88]	; 0x58
   13f50:	cmp	r0, #0
   13f54:	movwne	r0, #1
   13f58:	and	r1, r0, r3
   13f5c:	and	r1, r2, r1
   13f60:	str	r1, [sp, #48]	; 0x30
   13f64:	sub	r1, r4, #2
   13f68:	clz	r1, r1
   13f6c:	lsr	r1, r1, #5
   13f70:	and	r1, r1, r3
   13f74:	str	r1, [sp, #44]	; 0x2c
   13f78:	subs	r1, r4, #2
   13f7c:	eor	r4, r3, #1
   13f80:	movwne	r1, #1
   13f84:	str	r4, [sp, #92]	; 0x5c
   13f88:	orr	r4, r1, r4
   13f8c:	and	r1, r1, r2
   13f90:	and	r0, r0, r1
   13f94:	str	r4, [sp, #64]	; 0x40
   13f98:	ldr	r4, [sp, #84]	; 0x54
   13f9c:	str	r0, [fp, #-60]	; 0xffffffc4
   13fa0:	orr	r0, r1, r3
   13fa4:	ldr	r1, [fp, #16]
   13fa8:	eor	r0, r0, #1
   13fac:	clz	r1, r1
   13fb0:	lsr	r1, r1, #5
   13fb4:	orr	r0, r1, r0
   13fb8:	str	r0, [fp, #-68]	; 0xffffffbc
   13fbc:	eor	r0, r2, #1
   13fc0:	str	r0, [sp, #52]	; 0x34
   13fc4:	cmn	r7, #1
   13fc8:	beq	13fd8 <__mempcpy_chk@plt+0x2ff4>
   13fcc:	cmp	sl, r7
   13fd0:	bne	13fe4 <__mempcpy_chk@plt+0x3000>
   13fd4:	b	14c78 <__mempcpy_chk@plt+0x3c94>
   13fd8:	ldrb	r0, [lr, sl]
   13fdc:	cmp	r0, #0
   13fe0:	beq	14c80 <__mempcpy_chk@plt+0x3c9c>
   13fe4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13fe8:	cmp	r0, #0
   13fec:	beq	1404c <__mempcpy_chk@plt+0x3068>
   13ff0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13ff4:	mov	r6, r5
   13ff8:	add	r5, sl, r0
   13ffc:	cmp	r0, #2
   14000:	bcc	1406c <__mempcpy_chk@plt+0x3088>
   14004:	mov	r0, #0
   14008:	cmn	r7, #1
   1400c:	str	r0, [fp, #-56]	; 0xffffffc8
   14010:	bne	14028 <__mempcpy_chk@plt+0x3044>
   14014:	mov	r0, lr
   14018:	bl	10f0c <strlen@plt>
   1401c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14020:	ldr	ip, [fp, #-84]	; 0xffffffac
   14024:	mov	r7, r0
   14028:	cmp	r5, r7
   1402c:	bls	1407c <__mempcpy_chk@plt+0x3098>
   14030:	mov	r0, #0
   14034:	mov	r5, r6
   14038:	str	r0, [fp, #-48]	; 0xffffffd0
   1403c:	ldrb	r6, [lr, sl]
   14040:	cmp	r6, #126	; 0x7e
   14044:	bls	140cc <__mempcpy_chk@plt+0x30e8>
   14048:	b	14628 <__mempcpy_chk@plt+0x3644>
   1404c:	mov	r0, #0
   14050:	str	r0, [fp, #-56]	; 0xffffffc8
   14054:	mov	r0, #0
   14058:	str	r0, [fp, #-48]	; 0xffffffd0
   1405c:	ldrb	r6, [lr, sl]
   14060:	cmp	r6, #126	; 0x7e
   14064:	bls	140cc <__mempcpy_chk@plt+0x30e8>
   14068:	b	14628 <__mempcpy_chk@plt+0x3644>
   1406c:	mov	r0, #0
   14070:	str	r0, [fp, #-56]	; 0xffffffc8
   14074:	cmp	r5, r7
   14078:	bhi	14030 <__mempcpy_chk@plt+0x304c>
   1407c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14080:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14084:	add	r0, lr, sl
   14088:	bl	10f00 <bcmp@plt>
   1408c:	ldr	r2, [sp, #92]	; 0x5c
   14090:	cmp	r0, #0
   14094:	mov	r1, r0
   14098:	mov	r5, r6
   1409c:	movwne	r1, #1
   140a0:	orr	r1, r1, r2
   140a4:	tst	r1, #1
   140a8:	beq	14d40 <__mempcpy_chk@plt+0x3d5c>
   140ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   140b0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   140b4:	clz	r0, r0
   140b8:	lsr	r0, r0, #5
   140bc:	str	r0, [fp, #-48]	; 0xffffffd0
   140c0:	ldrb	r6, [lr, sl]
   140c4:	cmp	r6, #126	; 0x7e
   140c8:	bhi	14628 <__mempcpy_chk@plt+0x3644>
   140cc:	add	r3, pc, #16
   140d0:	mov	r8, #1
   140d4:	mov	r2, #110	; 0x6e
   140d8:	mov	r0, #97	; 0x61
   140dc:	mov	r1, #0
   140e0:	ldr	pc, [r3, r6, lsl #2]
   140e4:	andeq	r4, r1, r0, ror #7
   140e8:	andeq	r4, r1, r8, lsr #12
   140ec:	andeq	r4, r1, r8, lsr #12
   140f0:	andeq	r4, r1, r8, lsr #12
   140f4:	andeq	r4, r1, r8, lsr #12
   140f8:	andeq	r4, r1, r8, lsr #12
   140fc:	andeq	r4, r1, r8, lsr #12
   14100:	ldrdeq	r4, [r1], -ip
   14104:	andeq	r4, r1, r0, asr #7
   14108:			; <UNDEFINED> instruction: 0x000143b8
   1410c:	andeq	r4, r1, ip, asr #7
   14110:	strdeq	r4, [r1], -ip
   14114:			; <UNDEFINED> instruction: 0x000143b0
   14118:	andeq	r4, r1, r8, asr #7
   1411c:	andeq	r4, r1, r8, lsr #12
   14120:	andeq	r4, r1, r8, lsr #12
   14124:	andeq	r4, r1, r8, lsr #12
   14128:	andeq	r4, r1, r8, lsr #12
   1412c:	andeq	r4, r1, r8, lsr #12
   14130:	andeq	r4, r1, r8, lsr #12
   14134:	andeq	r4, r1, r8, lsr #12
   14138:	andeq	r4, r1, r8, lsr #12
   1413c:	andeq	r4, r1, r8, lsr #12
   14140:	andeq	r4, r1, r8, lsr #12
   14144:	andeq	r4, r1, r8, lsr #12
   14148:	andeq	r4, r1, r8, lsr #12
   1414c:	andeq	r4, r1, r8, lsr #12
   14150:	andeq	r4, r1, r8, lsr #12
   14154:	andeq	r4, r1, r8, lsr #12
   14158:	andeq	r4, r1, r8, lsr #12
   1415c:	andeq	r4, r1, r8, lsr #12
   14160:	andeq	r4, r1, r8, lsr #12
   14164:	andeq	r4, r1, r4, asr r3
   14168:	andeq	r4, r1, r8, asr r3
   1416c:	andeq	r4, r1, r8, asr r3
   14170:	andeq	r4, r1, r8, asr #6
   14174:	andeq	r4, r1, r8, asr r3
   14178:	andeq	r4, r1, r0, ror #5
   1417c:	andeq	r4, r1, r8, asr r3
   14180:	andeq	r4, r1, r4, lsl #10
   14184:	andeq	r4, r1, r8, asr r3
   14188:	andeq	r4, r1, r8, asr r3
   1418c:	andeq	r4, r1, r8, asr r3
   14190:	andeq	r4, r1, r0, ror #5
   14194:	andeq	r4, r1, r0, ror #5
   14198:	andeq	r4, r1, r0, ror #5
   1419c:	andeq	r4, r1, r0, ror #5
   141a0:	andeq	r4, r1, r0, ror #5
   141a4:	andeq	r4, r1, r0, ror #5
   141a8:	andeq	r4, r1, r0, ror #5
   141ac:	andeq	r4, r1, r0, ror #5
   141b0:	andeq	r4, r1, r0, ror #5
   141b4:	andeq	r4, r1, r0, ror #5
   141b8:	andeq	r4, r1, r0, ror #5
   141bc:	andeq	r4, r1, r0, ror #5
   141c0:	andeq	r4, r1, r0, ror #5
   141c4:	andeq	r4, r1, r0, ror #5
   141c8:	andeq	r4, r1, r0, ror #5
   141cc:	andeq	r4, r1, r0, ror #5
   141d0:	andeq	r4, r1, r8, asr r3
   141d4:	andeq	r4, r1, r8, asr r3
   141d8:	andeq	r4, r1, r8, asr r3
   141dc:	andeq	r4, r1, r8, asr r3
   141e0:	andeq	r4, r1, r8, asr #9
   141e4:	andeq	r4, r1, r8, lsr #12
   141e8:	andeq	r4, r1, r0, ror #5
   141ec:	andeq	r4, r1, r0, ror #5
   141f0:	andeq	r4, r1, r0, ror #5
   141f4:	andeq	r4, r1, r0, ror #5
   141f8:	andeq	r4, r1, r0, ror #5
   141fc:	andeq	r4, r1, r0, ror #5
   14200:	andeq	r4, r1, r0, ror #5
   14204:	andeq	r4, r1, r0, ror #5
   14208:	andeq	r4, r1, r0, ror #5
   1420c:	andeq	r4, r1, r0, ror #5
   14210:	andeq	r4, r1, r0, ror #5
   14214:	andeq	r4, r1, r0, ror #5
   14218:	andeq	r4, r1, r0, ror #5
   1421c:	andeq	r4, r1, r0, ror #5
   14220:	andeq	r4, r1, r0, ror #5
   14224:	andeq	r4, r1, r0, ror #5
   14228:	andeq	r4, r1, r0, ror #5
   1422c:	andeq	r4, r1, r0, ror #5
   14230:	andeq	r4, r1, r0, ror #5
   14234:	andeq	r4, r1, r0, ror #5
   14238:	andeq	r4, r1, r0, ror #5
   1423c:	andeq	r4, r1, r0, ror #5
   14240:	andeq	r4, r1, r0, ror #5
   14244:	andeq	r4, r1, r0, ror #5
   14248:	andeq	r4, r1, r0, ror #5
   1424c:	andeq	r4, r1, r0, ror #5
   14250:	andeq	r4, r1, r8, asr r3
   14254:	andeq	r4, r1, ip, lsl #7
   14258:	andeq	r4, r1, r0, ror #5
   1425c:	andeq	r4, r1, r8, asr r3
   14260:	andeq	r4, r1, r0, ror #5
   14264:	andeq	r4, r1, r8, asr r3
   14268:	andeq	r4, r1, r0, ror #5
   1426c:	andeq	r4, r1, r0, ror #5
   14270:	andeq	r4, r1, r0, ror #5
   14274:	andeq	r4, r1, r0, ror #5
   14278:	andeq	r4, r1, r0, ror #5
   1427c:	andeq	r4, r1, r0, ror #5
   14280:	andeq	r4, r1, r0, ror #5
   14284:	andeq	r4, r1, r0, ror #5
   14288:	andeq	r4, r1, r0, ror #5
   1428c:	andeq	r4, r1, r0, ror #5
   14290:	andeq	r4, r1, r0, ror #5
   14294:	andeq	r4, r1, r0, ror #5
   14298:	andeq	r4, r1, r0, ror #5
   1429c:	andeq	r4, r1, r0, ror #5
   142a0:	andeq	r4, r1, r0, ror #5
   142a4:	andeq	r4, r1, r0, ror #5
   142a8:	andeq	r4, r1, r0, ror #5
   142ac:	andeq	r4, r1, r0, ror #5
   142b0:	andeq	r4, r1, r0, ror #5
   142b4:	andeq	r4, r1, r0, ror #5
   142b8:	andeq	r4, r1, r0, ror #5
   142bc:	andeq	r4, r1, r0, ror #5
   142c0:	andeq	r4, r1, r0, ror #5
   142c4:	andeq	r4, r1, r0, ror #5
   142c8:	andeq	r4, r1, r0, ror #5
   142cc:	andeq	r4, r1, r0, ror #5
   142d0:	andeq	r4, r1, r0, lsr #6
   142d4:	andeq	r4, r1, r8, asr r3
   142d8:	andeq	r4, r1, r0, lsr #6
   142dc:	andeq	r4, r1, r8, asr #6
   142e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   142e4:	tst	r0, #1
   142e8:	bne	145a0 <__mempcpy_chk@plt+0x35bc>
   142ec:	ldr	r1, [fp, #16]
   142f0:	ubfx	r0, r6, #5, #3
   142f4:	mov	r2, #1
   142f8:	ldr	r0, [r1, r0, lsl #2]
   142fc:	and	r1, r6, #31
   14300:	tst	r0, r2, lsl r1
   14304:	beq	145a0 <__mempcpy_chk@plt+0x35bc>
   14308:	mov	r0, r6
   1430c:	mov	r1, r8
   14310:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14314:	tst	r2, #1
   14318:	beq	145c0 <__mempcpy_chk@plt+0x35dc>
   1431c:	b	14d1c <__mempcpy_chk@plt+0x3d38>
   14320:	cmp	r7, #1
   14324:	beq	14348 <__mempcpy_chk@plt+0x3364>
   14328:	mov	r8, #0
   1432c:	cmn	r7, #1
   14330:	bne	1458c <__mempcpy_chk@plt+0x35a8>
   14334:	ldrb	r0, [lr, #1]
   14338:	cmp	r0, #0
   1433c:	beq	14348 <__mempcpy_chk@plt+0x3364>
   14340:	mvn	r7, #0
   14344:	b	1458c <__mempcpy_chk@plt+0x35a8>
   14348:	mov	r8, #0
   1434c:	cmp	sl, #0
   14350:	bne	1458c <__mempcpy_chk@plt+0x35a8>
   14354:	mov	r1, #1
   14358:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1435c:	cmp	r0, #2
   14360:	bne	14378 <__mempcpy_chk@plt+0x3394>
   14364:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14368:	mov	r8, r1
   1436c:	tst	r0, #1
   14370:	beq	142e0 <__mempcpy_chk@plt+0x32fc>
   14374:	b	14d1c <__mempcpy_chk@plt+0x3d38>
   14378:	mov	r8, r1
   1437c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14380:	tst	r0, #1
   14384:	beq	142ec <__mempcpy_chk@plt+0x3308>
   14388:	b	145a0 <__mempcpy_chk@plt+0x35bc>
   1438c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14390:	cmp	r0, #2
   14394:	bne	14654 <__mempcpy_chk@plt+0x3670>
   14398:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1439c:	tst	r0, #1
   143a0:	bne	14d1c <__mempcpy_chk@plt+0x3d38>
   143a4:	mov	r0, #0
   143a8:	str	r0, [fp, #-56]	; 0xffffffc8
   143ac:	b	1466c <__mempcpy_chk@plt+0x3688>
   143b0:	mov	r0, #102	; 0x66
   143b4:	b	146dc <__mempcpy_chk@plt+0x36f8>
   143b8:	mov	r2, #116	; 0x74
   143bc:	b	143cc <__mempcpy_chk@plt+0x33e8>
   143c0:	mov	r0, #98	; 0x62
   143c4:	b	146dc <__mempcpy_chk@plt+0x36f8>
   143c8:	mov	r2, #114	; 0x72
   143cc:	ldr	r0, [sp, #64]	; 0x40
   143d0:	tst	r0, #1
   143d4:	mov	r0, r2
   143d8:	bne	146dc <__mempcpy_chk@plt+0x36f8>
   143dc:	b	14d1c <__mempcpy_chk@plt+0x3d38>
   143e0:	ldr	r0, [sp, #88]	; 0x58
   143e4:	tst	r0, #1
   143e8:	beq	146fc <__mempcpy_chk@plt+0x3718>
   143ec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   143f0:	tst	r0, #1
   143f4:	bne	14e58 <__mempcpy_chk@plt+0x3e74>
   143f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   143fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14400:	subs	r0, r0, #2
   14404:	movwne	r0, #1
   14408:	orr	r0, r0, r1
   1440c:	tst	r0, #1
   14410:	bne	1444c <__mempcpy_chk@plt+0x3468>
   14414:	cmp	r9, r5
   14418:	movcc	r0, #39	; 0x27
   1441c:	strbcc	r0, [ip, r9]
   14420:	add	r0, r9, #1
   14424:	cmp	r0, r5
   14428:	movcc	r1, #36	; 0x24
   1442c:	strbcc	r1, [ip, r0]
   14430:	add	r0, r9, #2
   14434:	add	r9, r9, #3
   14438:	cmp	r0, r5
   1443c:	movcc	r1, #39	; 0x27
   14440:	strbcc	r1, [ip, r0]
   14444:	mov	r0, #1
   14448:	str	r0, [fp, #-52]	; 0xffffffcc
   1444c:	mov	r1, #1
   14450:	cmp	r9, r5
   14454:	mov	r8, #0
   14458:	mov	r6, #48	; 0x30
   1445c:	str	r1, [fp, #-56]	; 0xffffffc8
   14460:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14464:	movcc	r0, #92	; 0x5c
   14468:	strbcc	r0, [ip, r9]
   1446c:	add	r0, r9, #1
   14470:	cmp	r1, #2
   14474:	beq	148c8 <__mempcpy_chk@plt+0x38e4>
   14478:	add	r1, sl, #1
   1447c:	cmp	r1, r7
   14480:	bcs	148c8 <__mempcpy_chk@plt+0x38e4>
   14484:	ldrb	r1, [lr, r1]
   14488:	sub	r1, r1, #48	; 0x30
   1448c:	uxtb	r1, r1
   14490:	cmp	r1, #9
   14494:	bhi	148c8 <__mempcpy_chk@plt+0x38e4>
   14498:	cmp	r0, r5
   1449c:	movcc	r1, #48	; 0x30
   144a0:	strbcc	r1, [ip, r0]
   144a4:	add	r0, r9, #2
   144a8:	add	r9, r9, #3
   144ac:	cmp	r0, r5
   144b0:	movcc	r1, #48	; 0x30
   144b4:	strbcc	r1, [ip, r0]
   144b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   144bc:	tst	r0, #1
   144c0:	beq	142ec <__mempcpy_chk@plt+0x3308>
   144c4:	b	145a0 <__mempcpy_chk@plt+0x35bc>
   144c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   144cc:	mov	r6, #63	; 0x3f
   144d0:	cmp	r0, #5
   144d4:	beq	148dc <__mempcpy_chk@plt+0x38f8>
   144d8:	mov	r1, #0
   144dc:	cmp	r0, #2
   144e0:	str	r1, [fp, #-56]	; 0xffffffc8
   144e4:	bne	149a4 <__mempcpy_chk@plt+0x39c0>
   144e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   144ec:	mov	r8, #0
   144f0:	tst	r0, #1
   144f4:	beq	142e0 <__mempcpy_chk@plt+0x32fc>
   144f8:	b	14d1c <__mempcpy_chk@plt+0x3d38>
   144fc:	mov	r0, #118	; 0x76
   14500:	b	146dc <__mempcpy_chk@plt+0x36f8>
   14504:	mov	r0, #1
   14508:	mov	r6, #39	; 0x27
   1450c:	str	r0, [sp, #60]	; 0x3c
   14510:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14514:	cmp	r0, #2
   14518:	bne	1471c <__mempcpy_chk@plt+0x3738>
   1451c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14520:	tst	r0, #1
   14524:	bne	14d1c <__mempcpy_chk@plt+0x3d38>
   14528:	ldr	r2, [sp, #56]	; 0x38
   1452c:	clz	r1, r5
   14530:	mov	r8, #1
   14534:	lsr	r1, r1, #5
   14538:	cmp	r2, #0
   1453c:	mov	r0, r2
   14540:	movwne	r0, #1
   14544:	orrs	r0, r0, r1
   14548:	moveq	r2, r5
   1454c:	moveq	r5, r0
   14550:	cmp	r9, r5
   14554:	str	r2, [sp, #56]	; 0x38
   14558:	movcc	r0, #39	; 0x27
   1455c:	strbcc	r0, [ip, r9]
   14560:	add	r0, r9, #1
   14564:	cmp	r0, r5
   14568:	movcc	r1, #92	; 0x5c
   1456c:	strbcc	r1, [ip, r0]
   14570:	add	r0, r9, #2
   14574:	add	r9, r9, #3
   14578:	cmp	r0, r5
   1457c:	movcc	r1, #39	; 0x27
   14580:	strbcc	r1, [ip, r0]
   14584:	mov	r0, #0
   14588:	str	r0, [fp, #-52]	; 0xffffffcc
   1458c:	mov	r0, #0
   14590:	str	r0, [fp, #-56]	; 0xffffffc8
   14594:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14598:	tst	r0, #1
   1459c:	beq	142ec <__mempcpy_chk@plt+0x3308>
   145a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   145a4:	mov	r1, r8
   145a8:	cmp	r0, #0
   145ac:	mov	r0, r6
   145b0:	beq	14674 <__mempcpy_chk@plt+0x3690>
   145b4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   145b8:	tst	r2, #1
   145bc:	bne	14d1c <__mempcpy_chk@plt+0x3d38>
   145c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   145c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   145c8:	subs	r2, r2, #2
   145cc:	movwne	r2, #1
   145d0:	orr	r2, r2, r3
   145d4:	tst	r2, #1
   145d8:	bne	14614 <__mempcpy_chk@plt+0x3630>
   145dc:	cmp	r9, r5
   145e0:	movcc	r2, #39	; 0x27
   145e4:	strbcc	r2, [ip, r9]
   145e8:	add	r2, r9, #1
   145ec:	cmp	r2, r5
   145f0:	movcc	r3, #36	; 0x24
   145f4:	strbcc	r3, [ip, r2]
   145f8:	add	r2, r9, #2
   145fc:	add	r9, r9, #3
   14600:	cmp	r2, r5
   14604:	movcc	r3, #39	; 0x27
   14608:	strbcc	r3, [ip, r2]
   1460c:	mov	r2, #1
   14610:	str	r2, [fp, #-52]	; 0xffffffcc
   14614:	cmp	r9, r5
   14618:	movcc	r2, #92	; 0x5c
   1461c:	strbcc	r2, [ip, r9]
   14620:	add	r9, r9, #1
   14624:	b	146bc <__mempcpy_chk@plt+0x36d8>
   14628:	ldr	r0, [sp, #40]	; 0x28
   1462c:	cmp	r0, #1
   14630:	bne	14730 <__mempcpy_chk@plt+0x374c>
   14634:	bl	10edc <__ctype_b_loc@plt>
   14638:	ldr	r0, [r0]
   1463c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14640:	mov	r1, #1
   14644:	add	r0, r0, r6, lsl #1
   14648:	ldrb	r0, [r0, #1]
   1464c:	ubfx	r8, r0, #6, #1
   14650:	b	14a88 <__mempcpy_chk@plt+0x3aa4>
   14654:	ldr	r1, [sp, #48]	; 0x30
   14658:	mov	r0, #0
   1465c:	str	r0, [fp, #-56]	; 0xffffffc8
   14660:	mov	r0, #92	; 0x5c
   14664:	cmp	r1, #0
   14668:	beq	146dc <__mempcpy_chk@plt+0x36f8>
   1466c:	mov	r6, #92	; 0x5c
   14670:	mov	r8, #0
   14674:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14678:	cmp	r0, #0
   1467c:	bne	146b4 <__mempcpy_chk@plt+0x36d0>
   14680:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14684:	tst	r0, #1
   14688:	beq	146b4 <__mempcpy_chk@plt+0x36d0>
   1468c:	cmp	r9, r5
   14690:	movcc	r0, #39	; 0x27
   14694:	strbcc	r0, [ip, r9]
   14698:	add	r0, r9, #1
   1469c:	add	r9, r9, #2
   146a0:	cmp	r0, r5
   146a4:	movcc	r1, #39	; 0x27
   146a8:	strbcc	r1, [ip, r0]
   146ac:	mov	r0, #0
   146b0:	str	r0, [fp, #-52]	; 0xffffffcc
   146b4:	mov	r1, r8
   146b8:	mov	r0, r6
   146bc:	cmp	r9, r5
   146c0:	and	r4, r4, r1
   146c4:	strbcc	r0, [ip, r9]
   146c8:	add	r9, r9, #1
   146cc:	add	sl, sl, #1
   146d0:	cmn	r7, #1
   146d4:	bne	13fcc <__mempcpy_chk@plt+0x2fe8>
   146d8:	b	13fd8 <__mempcpy_chk@plt+0x2ff4>
   146dc:	mov	r1, #0
   146e0:	mov	r8, #0
   146e4:	str	r1, [fp, #-56]	; 0xffffffc8
   146e8:	ldr	r1, [sp, #88]	; 0x58
   146ec:	tst	r1, #1
   146f0:	mov	r1, #0
   146f4:	beq	142e0 <__mempcpy_chk@plt+0x32fc>
   146f8:	b	145b4 <__mempcpy_chk@plt+0x35d0>
   146fc:	ldr	r0, [sp, #36]	; 0x24
   14700:	mov	r6, #0
   14704:	mov	r8, #0
   14708:	cmp	r0, #0
   1470c:	mov	r0, #0
   14710:	str	r0, [fp, #-56]	; 0xffffffc8
   14714:	bne	146cc <__mempcpy_chk@plt+0x36e8>
   14718:	b	142e0 <__mempcpy_chk@plt+0x32fc>
   1471c:	mov	r8, #1
   14720:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14724:	tst	r0, #1
   14728:	beq	142ec <__mempcpy_chk@plt+0x3308>
   1472c:	b	145a0 <__mempcpy_chk@plt+0x35bc>
   14730:	mov	r0, #0
   14734:	cmn	r7, #1
   14738:	str	r0, [fp, #-36]	; 0xffffffdc
   1473c:	str	r0, [fp, #-40]	; 0xffffffd8
   14740:	bne	14754 <__mempcpy_chk@plt+0x3770>
   14744:	mov	r0, lr
   14748:	bl	10f0c <strlen@plt>
   1474c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14750:	mov	r7, r0
   14754:	ldr	r0, [sp, #44]	; 0x2c
   14758:	str	r4, [sp, #84]	; 0x54
   1475c:	str	r5, [sp, #28]
   14760:	cmp	r0, #0
   14764:	beq	149b8 <__mempcpy_chk@plt+0x39d4>
   14768:	ldr	r0, [sp, #80]	; 0x50
   1476c:	mov	r8, #1
   14770:	mov	r5, #0
   14774:	add	r0, r0, sl
   14778:	str	r0, [sp, #24]
   1477c:	sub	r0, fp, #40	; 0x28
   14780:	mov	r3, r0
   14784:	b	147c0 <__mempcpy_chk@plt+0x37dc>
   14788:	ldr	r5, [sp, #68]	; 0x44
   1478c:	add	r5, r0, r5
   14790:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14794:	bl	10e40 <iswprint@plt>
   14798:	cmp	r0, #0
   1479c:	sub	r4, fp, #40	; 0x28
   147a0:	movwne	r0, #1
   147a4:	and	r8, r8, r0
   147a8:	mov	r0, r4
   147ac:	bl	10e04 <mbsinit@plt>
   147b0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   147b4:	mov	r3, r4
   147b8:	cmp	r0, #0
   147bc:	bne	14a7c <__mempcpy_chk@plt+0x3a98>
   147c0:	str	r5, [sp, #68]	; 0x44
   147c4:	add	r5, r5, sl
   147c8:	sub	r0, fp, #44	; 0x2c
   147cc:	add	r1, lr, r5
   147d0:	sub	r2, r7, r5
   147d4:	bl	169a0 <__mempcpy_chk@plt+0x59bc>
   147d8:	cmn	r0, #2
   147dc:	beq	14a3c <__mempcpy_chk@plt+0x3a58>
   147e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   147e4:	cmn	r0, #1
   147e8:	beq	14a30 <__mempcpy_chk@plt+0x3a4c>
   147ec:	cmp	r0, #0
   147f0:	beq	14a34 <__mempcpy_chk@plt+0x3a50>
   147f4:	cmp	r0, #2
   147f8:	bcc	14788 <__mempcpy_chk@plt+0x37a4>
   147fc:	ldr	r1, [sp, #68]	; 0x44
   14800:	ldr	r2, [sp, #24]
   14804:	add	r1, r2, r1
   14808:	sub	r2, r0, #1
   1480c:	ldrb	r3, [r1]
   14810:	sub	r3, r3, #91	; 0x5b
   14814:	cmp	r3, #33	; 0x21
   14818:	bls	14838 <__mempcpy_chk@plt+0x3854>
   1481c:	add	r1, r1, #1
   14820:	subs	r2, r2, #1
   14824:	beq	14788 <__mempcpy_chk@plt+0x37a4>
   14828:	ldrb	r3, [r1]
   1482c:	sub	r3, r3, #91	; 0x5b
   14830:	cmp	r3, #33	; 0x21
   14834:	bhi	1481c <__mempcpy_chk@plt+0x3838>
   14838:	add	r5, pc, #0
   1483c:	ldr	pc, [r5, r3, lsl #2]
   14840:	andeq	r4, r1, r4, asr sp
   14844:	andeq	r4, r1, r4, asr sp
   14848:	andeq	r4, r1, ip, lsl r8
   1484c:	andeq	r4, r1, r4, asr sp
   14850:	andeq	r4, r1, ip, lsl r8
   14854:	andeq	r4, r1, r4, asr sp
   14858:	andeq	r4, r1, ip, lsl r8
   1485c:	andeq	r4, r1, ip, lsl r8
   14860:	andeq	r4, r1, ip, lsl r8
   14864:	andeq	r4, r1, ip, lsl r8
   14868:	andeq	r4, r1, ip, lsl r8
   1486c:	andeq	r4, r1, ip, lsl r8
   14870:	andeq	r4, r1, ip, lsl r8
   14874:	andeq	r4, r1, ip, lsl r8
   14878:	andeq	r4, r1, ip, lsl r8
   1487c:	andeq	r4, r1, ip, lsl r8
   14880:	andeq	r4, r1, ip, lsl r8
   14884:	andeq	r4, r1, ip, lsl r8
   14888:	andeq	r4, r1, ip, lsl r8
   1488c:	andeq	r4, r1, ip, lsl r8
   14890:	andeq	r4, r1, ip, lsl r8
   14894:	andeq	r4, r1, ip, lsl r8
   14898:	andeq	r4, r1, ip, lsl r8
   1489c:	andeq	r4, r1, ip, lsl r8
   148a0:	andeq	r4, r1, ip, lsl r8
   148a4:	andeq	r4, r1, ip, lsl r8
   148a8:	andeq	r4, r1, ip, lsl r8
   148ac:	andeq	r4, r1, ip, lsl r8
   148b0:	andeq	r4, r1, ip, lsl r8
   148b4:	andeq	r4, r1, ip, lsl r8
   148b8:	andeq	r4, r1, ip, lsl r8
   148bc:	andeq	r4, r1, ip, lsl r8
   148c0:	andeq	r4, r1, ip, lsl r8
   148c4:	andeq	r4, r1, r4, asr sp
   148c8:	mov	r9, r0
   148cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   148d0:	tst	r0, #1
   148d4:	beq	142ec <__mempcpy_chk@plt+0x3308>
   148d8:	b	145a0 <__mempcpy_chk@plt+0x35bc>
   148dc:	mov	r0, #0
   148e0:	str	r0, [fp, #-56]	; 0xffffffc8
   148e4:	ldr	r0, [sp, #32]
   148e8:	cmp	r0, #0
   148ec:	beq	149a4 <__mempcpy_chk@plt+0x39c0>
   148f0:	add	r0, sl, #2
   148f4:	mov	r1, r7
   148f8:	cmp	r0, r7
   148fc:	bcs	149a4 <__mempcpy_chk@plt+0x39c0>
   14900:	add	r1, sl, lr
   14904:	ldrb	r1, [r1, #1]
   14908:	cmp	r1, #63	; 0x3f
   1490c:	bne	149a4 <__mempcpy_chk@plt+0x39c0>
   14910:	ldrb	r8, [lr, r0]
   14914:	sub	r2, r8, #33	; 0x21
   14918:	cmp	r2, #29
   1491c:	bhi	149a4 <__mempcpy_chk@plt+0x39c0>
   14920:	mov	r1, r4
   14924:	movw	r4, #20929	; 0x51c1
   14928:	mov	r3, #1
   1492c:	movt	r4, #14336	; 0x3800
   14930:	tst	r4, r3, lsl r2
   14934:	beq	14c60 <__mempcpy_chk@plt+0x3c7c>
   14938:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1493c:	tst	r2, #1
   14940:	bne	14d1c <__mempcpy_chk@plt+0x3d38>
   14944:	cmp	r9, r5
   14948:	mov	r6, r8
   1494c:	mov	r4, r1
   14950:	mov	sl, r0
   14954:	mov	r8, #0
   14958:	movcc	r2, #63	; 0x3f
   1495c:	strbcc	r2, [ip, r9]
   14960:	add	r2, r9, #1
   14964:	cmp	r2, r5
   14968:	movcc	r3, #34	; 0x22
   1496c:	strbcc	r3, [ip, r2]
   14970:	add	r2, r9, #2
   14974:	cmp	r2, r5
   14978:	movcc	r3, #34	; 0x22
   1497c:	strbcc	r3, [ip, r2]
   14980:	add	r2, r9, #3
   14984:	add	r9, r9, #4
   14988:	cmp	r2, r5
   1498c:	movcc	r3, #63	; 0x3f
   14990:	strbcc	r3, [ip, r2]
   14994:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14998:	tst	r0, #1
   1499c:	beq	142ec <__mempcpy_chk@plt+0x3308>
   149a0:	b	145a0 <__mempcpy_chk@plt+0x35bc>
   149a4:	mov	r8, #0
   149a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   149ac:	tst	r0, #1
   149b0:	beq	142ec <__mempcpy_chk@plt+0x3308>
   149b4:	b	145a0 <__mempcpy_chk@plt+0x35bc>
   149b8:	mov	r8, #1
   149bc:	mov	r5, #0
   149c0:	sub	r4, fp, #40	; 0x28
   149c4:	str	r5, [sp, #68]	; 0x44
   149c8:	add	r5, r5, sl
   149cc:	sub	r0, fp, #44	; 0x2c
   149d0:	mov	r3, r4
   149d4:	add	r1, lr, r5
   149d8:	sub	r2, r7, r5
   149dc:	bl	169a0 <__mempcpy_chk@plt+0x59bc>
   149e0:	cmn	r0, #2
   149e4:	beq	14a3c <__mempcpy_chk@plt+0x3a58>
   149e8:	cmn	r0, #1
   149ec:	beq	14a30 <__mempcpy_chk@plt+0x3a4c>
   149f0:	ldr	r5, [sp, #68]	; 0x44
   149f4:	cmp	r0, #0
   149f8:	beq	14a78 <__mempcpy_chk@plt+0x3a94>
   149fc:	add	r5, r0, r5
   14a00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a04:	bl	10e40 <iswprint@plt>
   14a08:	cmp	r0, #0
   14a0c:	sub	r4, fp, #40	; 0x28
   14a10:	movwne	r0, #1
   14a14:	and	r8, r8, r0
   14a18:	mov	r0, r4
   14a1c:	bl	10e04 <mbsinit@plt>
   14a20:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14a24:	cmp	r0, #0
   14a28:	beq	149c4 <__mempcpy_chk@plt+0x39e0>
   14a2c:	b	14a7c <__mempcpy_chk@plt+0x3a98>
   14a30:	mov	r8, #0
   14a34:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14a38:	b	14a70 <__mempcpy_chk@plt+0x3a8c>
   14a3c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14a40:	mov	r8, #0
   14a44:	cmp	r5, r7
   14a48:	bcs	14a70 <__mempcpy_chk@plt+0x3a8c>
   14a4c:	ldrb	r0, [lr, r5]
   14a50:	cmp	r0, #0
   14a54:	beq	14a70 <__mempcpy_chk@plt+0x3a8c>
   14a58:	ldr	r0, [sp, #68]	; 0x44
   14a5c:	add	r0, r0, #1
   14a60:	add	r5, r0, sl
   14a64:	str	r0, [sp, #68]	; 0x44
   14a68:	cmp	r5, r7
   14a6c:	bcc	14a4c <__mempcpy_chk@plt+0x3a68>
   14a70:	ldr	r5, [sp, #68]	; 0x44
   14a74:	b	14a7c <__mempcpy_chk@plt+0x3a98>
   14a78:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14a7c:	mov	r1, r5
   14a80:	ldr	r5, [sp, #28]
   14a84:	ldr	r4, [sp, #84]	; 0x54
   14a88:	ldr	r0, [sp, #52]	; 0x34
   14a8c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14a90:	cmp	r1, #1
   14a94:	orr	r2, r8, r0
   14a98:	mov	r0, r1
   14a9c:	bhi	14aa8 <__mempcpy_chk@plt+0x3ac4>
   14aa0:	tst	r2, #1
   14aa4:	bne	142e0 <__mempcpy_chk@plt+0x32fc>
   14aa8:	add	r0, r0, sl
   14aac:	str	r2, [sp, #84]	; 0x54
   14ab0:	str	r0, [fp, #-56]	; 0xffffffc8
   14ab4:	mov	r0, #0
   14ab8:	tst	r2, #1
   14abc:	bne	14b9c <__mempcpy_chk@plt+0x3bb8>
   14ac0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14ac4:	tst	r1, #1
   14ac8:	bne	14d1c <__mempcpy_chk@plt+0x3d38>
   14acc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14ad0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14ad4:	subs	r2, r1, #2
   14ad8:	movwne	r2, #1
   14adc:	orr	r2, r2, r0
   14ae0:	tst	r2, #1
   14ae4:	bne	14b20 <__mempcpy_chk@plt+0x3b3c>
   14ae8:	cmp	r9, r5
   14aec:	add	r2, r9, #1
   14af0:	mov	r0, #1
   14af4:	movcc	r1, #39	; 0x27
   14af8:	str	r0, [fp, #-52]	; 0xffffffcc
   14afc:	strbcc	r1, [ip, r9]
   14b00:	cmp	r2, r5
   14b04:	movcc	r1, #36	; 0x24
   14b08:	strbcc	r1, [ip, r2]
   14b0c:	add	r2, r9, #2
   14b10:	add	r9, r9, #3
   14b14:	cmp	r2, r5
   14b18:	movcc	r1, #39	; 0x27
   14b1c:	strbcc	r1, [ip, r2]
   14b20:	cmp	r9, r5
   14b24:	add	r2, r9, #1
   14b28:	movcc	r1, #92	; 0x5c
   14b2c:	strbcc	r1, [ip, r9]
   14b30:	cmp	r2, r5
   14b34:	bcs	14b48 <__mempcpy_chk@plt+0x3b64>
   14b38:	uxtb	r3, r6
   14b3c:	mov	r1, #48	; 0x30
   14b40:	orr	r3, r1, r3, lsr #6
   14b44:	strb	r3, [ip, r2]
   14b48:	add	r2, r9, #2
   14b4c:	add	r9, r9, #3
   14b50:	cmp	r2, r5
   14b54:	lsrcc	r3, r6, #3
   14b58:	movcc	r1, #6
   14b5c:	bficc	r3, r1, #3, #29
   14b60:	mov	r1, #6
   14b64:	bfi	r6, r1, #3, #29
   14b68:	strbcc	r3, [ip, r2]
   14b6c:	mov	r2, #1
   14b70:	b	14bd0 <__mempcpy_chk@plt+0x3bec>
   14b74:	ldr	r1, [sp, #80]	; 0x50
   14b78:	cmp	r9, r2
   14b7c:	mov	r5, r2
   14b80:	ldr	r2, [sp, #84]	; 0x54
   14b84:	strbcc	r6, [ip, r9]
   14b88:	add	r9, r9, #1
   14b8c:	ldrb	r6, [r1, sl]
   14b90:	mov	sl, r3
   14b94:	tst	r2, #1
   14b98:	beq	14ac0 <__mempcpy_chk@plt+0x3adc>
   14b9c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14ba0:	tst	r1, #1
   14ba4:	beq	14bc4 <__mempcpy_chk@plt+0x3be0>
   14ba8:	cmp	r9, r5
   14bac:	mov	r2, r0
   14bb0:	movcc	r1, #92	; 0x5c
   14bb4:	strbcc	r1, [ip, r9]
   14bb8:	add	r9, r9, #1
   14bbc:	mov	r1, #0
   14bc0:	b	14bcc <__mempcpy_chk@plt+0x3be8>
   14bc4:	mov	r1, #0
   14bc8:	mov	r2, r0
   14bcc:	str	r1, [fp, #-48]	; 0xffffffd0
   14bd0:	mov	r0, r2
   14bd4:	and	r1, r2, #1
   14bd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14bdc:	add	r3, sl, #1
   14be0:	cmp	r2, r3
   14be4:	bls	14c44 <__mempcpy_chk@plt+0x3c60>
   14be8:	mov	r2, r5
   14bec:	ldr	r5, [fp, #-52]	; 0xffffffcc
   14bf0:	cmp	r1, #0
   14bf4:	movwne	r1, #1
   14bf8:	mvn	r5, r5
   14bfc:	orr	r5, r5, r1
   14c00:	tst	r5, #1
   14c04:	bne	14b74 <__mempcpy_chk@plt+0x3b90>
   14c08:	cmp	r9, r2
   14c0c:	movcc	r5, r4
   14c10:	movcc	r4, #39	; 0x27
   14c14:	strbcc	r4, [ip, r9]
   14c18:	movcc	r4, r5
   14c1c:	add	r5, r9, #1
   14c20:	add	r9, r9, #2
   14c24:	cmp	r5, r2
   14c28:	movcc	r1, r4
   14c2c:	movcc	r4, #39	; 0x27
   14c30:	strbcc	r4, [ip, r5]
   14c34:	movcc	r4, r1
   14c38:	mov	r1, #0
   14c3c:	str	r1, [fp, #-52]	; 0xffffffcc
   14c40:	b	14b74 <__mempcpy_chk@plt+0x3b90>
   14c44:	cmp	r1, #0
   14c48:	movwne	r1, #1
   14c4c:	str	r1, [fp, #-56]	; 0xffffffc8
   14c50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c54:	cmp	r0, #0
   14c58:	beq	14680 <__mempcpy_chk@plt+0x369c>
   14c5c:	b	146b4 <__mempcpy_chk@plt+0x36d0>
   14c60:	mov	r8, #0
   14c64:	mov	r4, r1
   14c68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14c6c:	tst	r0, #1
   14c70:	beq	142ec <__mempcpy_chk@plt+0x3308>
   14c74:	b	145a0 <__mempcpy_chk@plt+0x35bc>
   14c78:	mov	r7, sl
   14c7c:	b	14c84 <__mempcpy_chk@plt+0x3ca0>
   14c80:	mvn	r7, #0
   14c84:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14c88:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14c8c:	ldr	r2, [sp, #88]	; 0x58
   14c90:	eor	r0, r1, #2
   14c94:	orr	r0, r0, r9
   14c98:	clz	r0, r0
   14c9c:	lsr	r0, r0, #5
   14ca0:	tst	r3, r0
   14ca4:	bne	14d1c <__mempcpy_chk@plt+0x3d38>
   14ca8:	subs	r0, r1, #2
   14cac:	movwne	r0, #1
   14cb0:	orr	r0, r3, r0
   14cb4:	tst	r0, #1
   14cb8:	ldreq	r0, [sp, #60]	; 0x3c
   14cbc:	eoreq	r0, r0, #1
   14cc0:	tsteq	r0, #1
   14cc4:	bne	14df8 <__mempcpy_chk@plt+0x3e14>
   14cc8:	tst	r4, #1
   14ccc:	bne	14dbc <__mempcpy_chk@plt+0x3dd8>
   14cd0:	ldr	r6, [sp, #56]	; 0x38
   14cd4:	mov	r8, #0
   14cd8:	cmp	r6, #0
   14cdc:	beq	14df4 <__mempcpy_chk@plt+0x3e10>
   14ce0:	mov	r1, #0
   14ce4:	mov	r4, #2
   14ce8:	cmp	r5, #0
   14cec:	mov	r0, r2
   14cf0:	mov	r3, #0
   14cf4:	str	r1, [sp, #84]	; 0x54
   14cf8:	beq	13b40 <__mempcpy_chk@plt+0x2b5c>
   14cfc:	b	14df8 <__mempcpy_chk@plt+0x3e14>
   14d00:	movw	r0, #30280	; 0x7648
   14d04:	movt	r0, #1
   14d08:	str	r0, [sp, #76]	; 0x4c
   14d0c:	mov	r9, #0
   14d10:	tst	r8, #1
   14d14:	beq	13dd8 <__mempcpy_chk@plt+0x2df4>
   14d18:	b	13f18 <__mempcpy_chk@plt+0x2f34>
   14d1c:	ldr	r1, [sp, #88]	; 0x58
   14d20:	mov	r0, #2
   14d24:	tst	r1, #1
   14d28:	movwne	r0, #4
   14d2c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14d30:	ldr	r1, [fp, #12]
   14d34:	cmp	r2, #2
   14d38:	moveq	r2, r0
   14d3c:	b	14d74 <__mempcpy_chk@plt+0x3d90>
   14d40:	ldr	ip, [fp, #-84]	; 0xffffffac
   14d44:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14d48:	ldr	r1, [fp, #12]
   14d4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14d50:	b	14d74 <__mempcpy_chk@plt+0x3d90>
   14d54:	ldr	r1, [sp, #88]	; 0x58
   14d58:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14d5c:	ldr	r5, [sp, #28]
   14d60:	mov	r0, #2
   14d64:	tst	r1, #1
   14d68:	ldr	r1, [fp, #12]
   14d6c:	movwne	r0, #4
   14d70:	mov	r2, r0
   14d74:	mov	r0, #0
   14d78:	bic	r1, r1, #2
   14d7c:	str	r2, [sp]
   14d80:	mov	r2, lr
   14d84:	str	r0, [sp, #8]
   14d88:	ldr	r0, [sp, #72]	; 0x48
   14d8c:	str	r1, [sp, #4]
   14d90:	mov	r1, r5
   14d94:	str	r0, [sp, #12]
   14d98:	ldr	r0, [sp, #76]	; 0x4c
   14d9c:	str	r0, [sp, #16]
   14da0:	mov	r0, ip
   14da4:	mov	r3, r7
   14da8:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   14dac:	mov	r9, r0
   14db0:	mov	r0, r9
   14db4:	sub	sp, fp, #28
   14db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dbc:	mov	r0, #5
   14dc0:	ldr	r1, [sp, #56]	; 0x38
   14dc4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14dc8:	str	r0, [sp]
   14dcc:	ldr	r0, [fp, #12]
   14dd0:	str	r0, [sp, #4]
   14dd4:	ldr	r0, [fp, #16]
   14dd8:	str	r0, [sp, #8]
   14ddc:	ldr	r0, [sp, #72]	; 0x48
   14de0:	str	r0, [sp, #12]
   14de4:	ldr	r0, [sp, #76]	; 0x4c
   14de8:	str	r0, [sp, #16]
   14dec:	ldr	r0, [fp, #-84]	; 0xffffffac
   14df0:	b	14da4 <__mempcpy_chk@plt+0x3dc0>
   14df4:	mov	r3, #0
   14df8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14dfc:	cmp	r1, #0
   14e00:	beq	14e3c <__mempcpy_chk@plt+0x3e58>
   14e04:	ldr	r2, [fp, #-84]	; 0xffffffac
   14e08:	tst	r3, #1
   14e0c:	bne	14e40 <__mempcpy_chk@plt+0x3e5c>
   14e10:	ldrb	r0, [r1]
   14e14:	cmp	r0, #0
   14e18:	beq	14e40 <__mempcpy_chk@plt+0x3e5c>
   14e1c:	add	r1, r1, #1
   14e20:	cmp	r9, r5
   14e24:	strbcc	r0, [r2, r9]
   14e28:	add	r9, r9, #1
   14e2c:	ldrb	r0, [r1], #1
   14e30:	cmp	r0, #0
   14e34:	bne	14e20 <__mempcpy_chk@plt+0x3e3c>
   14e38:	b	14e40 <__mempcpy_chk@plt+0x3e5c>
   14e3c:	ldr	r2, [fp, #-84]	; 0xffffffac
   14e40:	cmp	r9, r5
   14e44:	movcc	r0, #0
   14e48:	strbcc	r0, [r2, r9]
   14e4c:	mov	r0, r9
   14e50:	sub	sp, fp, #28
   14e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e58:	mov	r0, #4
   14e5c:	b	14d2c <__mempcpy_chk@plt+0x3d48>
   14e60:	bl	10fcc <abort@plt>
   14e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e68:	add	fp, sp, #28
   14e6c:	sub	sp, sp, #28
   14e70:	movw	r5, #33112	; 0x8158
   14e74:	cmp	r2, #0
   14e78:	mov	r4, r1
   14e7c:	mov	r7, r0
   14e80:	str	r0, [sp, #20]
   14e84:	movt	r5, #2
   14e88:	movne	r5, r2
   14e8c:	bl	10f18 <__errno_location@plt>
   14e90:	mov	sl, r0
   14e94:	ldr	r2, [r5, #40]	; 0x28
   14e98:	ldr	r3, [r5, #44]	; 0x2c
   14e9c:	ldm	r5, {r0, r1}
   14ea0:	orr	r8, r1, #1
   14ea4:	add	r9, r5, #8
   14ea8:	mov	r1, #0
   14eac:	ldr	r6, [sl]
   14eb0:	stm	sp, {r0, r8, r9}
   14eb4:	mov	r0, #0
   14eb8:	str	r2, [sp, #12]
   14ebc:	str	r3, [sp, #16]
   14ec0:	mov	r2, r7
   14ec4:	mov	r3, r4
   14ec8:	str	r6, [sp, #24]
   14ecc:	mov	r6, r4
   14ed0:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   14ed4:	add	r7, r0, #1
   14ed8:	mov	r0, r7
   14edc:	bl	160d8 <__mempcpy_chk@plt+0x50f4>
   14ee0:	mov	r4, r0
   14ee4:	ldr	r0, [r5]
   14ee8:	ldr	r2, [r5, #44]	; 0x2c
   14eec:	ldr	r1, [r5, #40]	; 0x28
   14ef0:	mov	r3, r6
   14ef4:	stm	sp, {r0, r8, r9}
   14ef8:	str	r2, [sp, #16]
   14efc:	ldr	r2, [sp, #20]
   14f00:	str	r1, [sp, #12]
   14f04:	mov	r0, r4
   14f08:	mov	r1, r7
   14f0c:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   14f10:	ldr	r0, [sp, #24]
   14f14:	str	r0, [sl]
   14f18:	mov	r0, r4
   14f1c:	sub	sp, fp, #28
   14f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f28:	add	fp, sp, #28
   14f2c:	sub	sp, sp, #36	; 0x24
   14f30:	movw	r8, #33112	; 0x8158
   14f34:	cmp	r3, #0
   14f38:	mov	r4, r2
   14f3c:	str	r2, [sp, #24]
   14f40:	mov	r5, r1
   14f44:	mov	r6, r0
   14f48:	str	r0, [sp, #20]
   14f4c:	movt	r8, #2
   14f50:	movne	r8, r3
   14f54:	bl	10f18 <__errno_location@plt>
   14f58:	str	r0, [sp, #28]
   14f5c:	ldr	r1, [r8, #40]	; 0x28
   14f60:	ldr	r2, [r8, #44]	; 0x2c
   14f64:	ldr	r7, [r0]
   14f68:	cmp	r4, #0
   14f6c:	add	sl, r8, #8
   14f70:	mov	r0, #0
   14f74:	ldm	r8, {r3, r9}
   14f78:	orreq	r9, r9, #1
   14f7c:	stm	sp, {r3, r9, sl}
   14f80:	str	r1, [sp, #12]
   14f84:	str	r2, [sp, #16]
   14f88:	mov	r1, #0
   14f8c:	mov	r2, r6
   14f90:	mov	r3, r5
   14f94:	str	r7, [sp, #32]
   14f98:	mov	r7, r5
   14f9c:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   14fa0:	add	r4, r0, #1
   14fa4:	mov	r5, r0
   14fa8:	mov	r0, r4
   14fac:	bl	160d8 <__mempcpy_chk@plt+0x50f4>
   14fb0:	mov	r6, r0
   14fb4:	ldr	r0, [r8]
   14fb8:	ldr	r2, [r8, #44]	; 0x2c
   14fbc:	ldr	r1, [r8, #40]	; 0x28
   14fc0:	mov	r3, r7
   14fc4:	stm	sp, {r0, r9, sl}
   14fc8:	str	r2, [sp, #16]
   14fcc:	ldr	r2, [sp, #20]
   14fd0:	str	r1, [sp, #12]
   14fd4:	mov	r0, r6
   14fd8:	mov	r1, r4
   14fdc:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   14fe0:	ldr	r0, [sp, #24]
   14fe4:	ldr	r1, [sp, #32]
   14fe8:	ldr	r2, [sp, #28]
   14fec:	cmp	r0, #0
   14ff0:	str	r1, [r2]
   14ff4:	strne	r5, [r0]
   14ff8:	mov	r0, r6
   14ffc:	sub	sp, fp, #28
   15000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15004:	push	{r4, r5, r6, r7, fp, lr}
   15008:	add	fp, sp, #16
   1500c:	movw	r4, #33056	; 0x8120
   15010:	movt	r4, #2
   15014:	ldrd	r6, [r4]
   15018:	cmp	r7, #2
   1501c:	blt	15048 <__mempcpy_chk@plt+0x4064>
   15020:	add	r5, r6, #12
   15024:	mov	r7, #0
   15028:	ldr	r0, [r5, r7, lsl #3]
   1502c:	bl	1233c <__mempcpy_chk@plt+0x1358>
   15030:	ldr	r1, [r4, #4]
   15034:	add	r2, r7, #2
   15038:	add	r0, r7, #1
   1503c:	mov	r7, r0
   15040:	cmp	r2, r1
   15044:	blt	15028 <__mempcpy_chk@plt+0x4044>
   15048:	ldr	r0, [r6, #4]
   1504c:	movw	r5, #33160	; 0x8188
   15050:	movt	r5, #2
   15054:	cmp	r0, r5
   15058:	beq	1506c <__mempcpy_chk@plt+0x4088>
   1505c:	bl	1233c <__mempcpy_chk@plt+0x1358>
   15060:	mov	r0, #256	; 0x100
   15064:	str	r0, [r4, #8]
   15068:	str	r5, [r4, #12]
   1506c:	add	r5, r4, #8
   15070:	cmp	r6, r5
   15074:	beq	15084 <__mempcpy_chk@plt+0x40a0>
   15078:	mov	r0, r6
   1507c:	bl	1233c <__mempcpy_chk@plt+0x1358>
   15080:	str	r5, [r4]
   15084:	mov	r0, #1
   15088:	str	r0, [r4, #4]
   1508c:	pop	{r4, r5, r6, r7, fp, pc}
   15090:	movw	r3, #33112	; 0x8158
   15094:	mvn	r2, #0
   15098:	movt	r3, #2
   1509c:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   150a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150a4:	add	fp, sp, #28
   150a8:	sub	sp, sp, #44	; 0x2c
   150ac:	mov	r7, r3
   150b0:	str	r2, [sp, #36]	; 0x24
   150b4:	str	r1, [sp, #32]
   150b8:	mov	r5, r0
   150bc:	bl	10f18 <__errno_location@plt>
   150c0:	cmp	r5, #0
   150c4:	bmi	1522c <__mempcpy_chk@plt+0x4248>
   150c8:	cmn	r5, #-2147483647	; 0x80000001
   150cc:	beq	1522c <__mempcpy_chk@plt+0x4248>
   150d0:	movw	r8, #33056	; 0x8120
   150d4:	mov	r4, r0
   150d8:	ldr	r0, [r0]
   150dc:	movt	r8, #2
   150e0:	str	r4, [sp, #28]
   150e4:	ldr	r1, [r8, #4]
   150e8:	ldr	r6, [r8]
   150ec:	str	r0, [sp, #24]
   150f0:	cmp	r1, r5
   150f4:	ble	15100 <__mempcpy_chk@plt+0x411c>
   150f8:	mov	sl, r6
   150fc:	b	15168 <__mempcpy_chk@plt+0x4184>
   15100:	mov	r0, #8
   15104:	add	r9, r8, #8
   15108:	str	r1, [fp, #-32]	; 0xffffffe0
   1510c:	sub	r1, r5, r1
   15110:	mvn	r3, #-2147483648	; 0x80000000
   15114:	str	r0, [sp]
   15118:	subs	r0, r6, r9
   1511c:	add	r2, r1, #1
   15120:	sub	r1, fp, #32
   15124:	movne	r0, r6
   15128:	bl	162d8 <__mempcpy_chk@plt+0x52f4>
   1512c:	mov	sl, r0
   15130:	cmp	r6, r9
   15134:	str	r0, [r8]
   15138:	bne	15144 <__mempcpy_chk@plt+0x4160>
   1513c:	ldrd	r0, [r8, #8]
   15140:	stm	sl, {r0, r1}
   15144:	ldr	r1, [r8, #4]
   15148:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1514c:	add	r0, sl, r1, lsl #3
   15150:	sub	r1, r2, r1
   15154:	lsl	r2, r1, #3
   15158:	mov	r1, #0
   1515c:	bl	10f30 <memset@plt>
   15160:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15164:	str	r0, [r8, #4]
   15168:	mov	r9, sl
   1516c:	ldm	r7, {r0, r1}
   15170:	orr	r8, r1, #1
   15174:	add	r1, r7, #8
   15178:	ldr	r2, [r7, #40]	; 0x28
   1517c:	ldr	r3, [r7, #44]	; 0x2c
   15180:	ldr	r6, [r9, r5, lsl #3]!
   15184:	str	r1, [sp, #20]
   15188:	ldr	r4, [r9, #4]!
   1518c:	stm	sp, {r0, r8}
   15190:	add	r0, sp, #8
   15194:	stm	r0, {r1, r2, r3}
   15198:	ldr	r2, [sp, #32]
   1519c:	ldr	r3, [sp, #36]	; 0x24
   151a0:	mov	r1, r6
   151a4:	mov	r0, r4
   151a8:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   151ac:	cmp	r6, r0
   151b0:	bhi	15214 <__mempcpy_chk@plt+0x4230>
   151b4:	add	r6, r0, #1
   151b8:	movw	r0, #33160	; 0x8188
   151bc:	movt	r0, #2
   151c0:	str	r6, [sl, r5, lsl #3]
   151c4:	cmp	r4, r0
   151c8:	beq	151d4 <__mempcpy_chk@plt+0x41f0>
   151cc:	mov	r0, r4
   151d0:	bl	1233c <__mempcpy_chk@plt+0x1358>
   151d4:	mov	r0, r6
   151d8:	bl	160d8 <__mempcpy_chk@plt+0x50f4>
   151dc:	str	r0, [r9]
   151e0:	mov	r4, r0
   151e4:	add	r3, sp, #8
   151e8:	ldr	r0, [r7]
   151ec:	ldr	r1, [r7, #40]	; 0x28
   151f0:	ldr	r2, [r7, #44]	; 0x2c
   151f4:	stm	sp, {r0, r8}
   151f8:	ldr	r0, [sp, #20]
   151fc:	stm	r3, {r0, r1, r2}
   15200:	ldr	r2, [sp, #32]
   15204:	ldr	r3, [sp, #36]	; 0x24
   15208:	mov	r0, r4
   1520c:	mov	r1, r6
   15210:	bl	13ab4 <__mempcpy_chk@plt+0x2ad0>
   15214:	ldr	r1, [sp, #24]
   15218:	ldr	r0, [sp, #28]
   1521c:	str	r1, [r0]
   15220:	mov	r0, r4
   15224:	sub	sp, fp, #28
   15228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1522c:	bl	10fcc <abort@plt>
   15230:	movw	r3, #33112	; 0x8158
   15234:	movt	r3, #2
   15238:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   1523c:	movw	r3, #33112	; 0x8158
   15240:	mov	r1, r0
   15244:	mov	r0, #0
   15248:	mvn	r2, #0
   1524c:	movt	r3, #2
   15250:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   15254:	movw	r3, #33112	; 0x8158
   15258:	mov	r2, r1
   1525c:	mov	r1, r0
   15260:	mov	r0, #0
   15264:	movt	r3, #2
   15268:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   1526c:	push	{fp, lr}
   15270:	mov	fp, sp
   15274:	sub	sp, sp, #48	; 0x30
   15278:	vmov.i32	q8, #0	; 0x00000000
   1527c:	mov	ip, #32
   15280:	mov	r3, sp
   15284:	mov	lr, r2
   15288:	cmp	r1, #10
   1528c:	add	r2, r3, #16
   15290:	vst1.64	{d16-d17}, [r3], ip
   15294:	vst1.64	{d16-d17}, [r2]
   15298:	vst1.64	{d16-d17}, [r3]
   1529c:	beq	152bc <__mempcpy_chk@plt+0x42d8>
   152a0:	str	r1, [sp]
   152a4:	mov	r3, sp
   152a8:	mov	r1, lr
   152ac:	mvn	r2, #0
   152b0:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   152b4:	mov	sp, fp
   152b8:	pop	{fp, pc}
   152bc:	bl	10fcc <abort@plt>
   152c0:	push	{r4, sl, fp, lr}
   152c4:	add	fp, sp, #8
   152c8:	sub	sp, sp, #48	; 0x30
   152cc:	vmov.i32	q8, #0	; 0x00000000
   152d0:	mov	ip, r3
   152d4:	mov	r3, sp
   152d8:	mov	lr, #32
   152dc:	cmp	r1, #10
   152e0:	add	r4, r3, #16
   152e4:	vst1.64	{d16-d17}, [r3], lr
   152e8:	vst1.64	{d16-d17}, [r4]
   152ec:	vst1.64	{d16-d17}, [r3]
   152f0:	beq	15310 <__mempcpy_chk@plt+0x432c>
   152f4:	str	r1, [sp]
   152f8:	mov	r1, r2
   152fc:	mov	r3, sp
   15300:	mov	r2, ip
   15304:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15308:	sub	sp, fp, #8
   1530c:	pop	{r4, sl, fp, pc}
   15310:	bl	10fcc <abort@plt>
   15314:	push	{fp, lr}
   15318:	mov	fp, sp
   1531c:	sub	sp, sp, #48	; 0x30
   15320:	vmov.i32	q8, #0	; 0x00000000
   15324:	mov	r3, sp
   15328:	mov	ip, #32
   1532c:	cmp	r0, #10
   15330:	add	r2, r3, #16
   15334:	vst1.64	{d16-d17}, [r3], ip
   15338:	vst1.64	{d16-d17}, [r2]
   1533c:	vst1.64	{d16-d17}, [r3]
   15340:	beq	15360 <__mempcpy_chk@plt+0x437c>
   15344:	str	r0, [sp]
   15348:	mov	r3, sp
   1534c:	mov	r0, #0
   15350:	mvn	r2, #0
   15354:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15358:	mov	sp, fp
   1535c:	pop	{fp, pc}
   15360:	bl	10fcc <abort@plt>
   15364:	push	{fp, lr}
   15368:	mov	fp, sp
   1536c:	sub	sp, sp, #48	; 0x30
   15370:	vmov.i32	q8, #0	; 0x00000000
   15374:	mov	r3, sp
   15378:	mov	ip, #32
   1537c:	cmp	r0, #10
   15380:	add	lr, r3, #16
   15384:	vst1.64	{d16-d17}, [r3], ip
   15388:	vst1.64	{d16-d17}, [lr]
   1538c:	vst1.64	{d16-d17}, [r3]
   15390:	beq	153ac <__mempcpy_chk@plt+0x43c8>
   15394:	str	r0, [sp]
   15398:	mov	r3, sp
   1539c:	mov	r0, #0
   153a0:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   153a4:	mov	sp, fp
   153a8:	pop	{fp, pc}
   153ac:	bl	10fcc <abort@plt>
   153b0:	push	{r4, sl, fp, lr}
   153b4:	add	fp, sp, #8
   153b8:	sub	sp, sp, #48	; 0x30
   153bc:	mov	lr, r0
   153c0:	movw	r0, #33112	; 0x8158
   153c4:	mov	ip, r1
   153c8:	mov	r1, #32
   153cc:	mov	r4, #1
   153d0:	movt	r0, #2
   153d4:	add	r3, r0, #16
   153d8:	vld1.64	{d16-d17}, [r0], r1
   153dc:	vld1.64	{d20-d21}, [r0]
   153e0:	vld1.64	{d18-d19}, [r3]
   153e4:	mov	r3, sp
   153e8:	add	r0, r3, #32
   153ec:	add	r1, r3, #16
   153f0:	vst1.64	{d20-d21}, [r0]
   153f4:	mov	r0, #28
   153f8:	vst1.64	{d18-d19}, [r1]
   153fc:	mov	r1, r3
   15400:	and	r0, r0, r2, lsr #3
   15404:	and	r2, r2, #31
   15408:	vst1.64	{d16-d17}, [r1], r0
   1540c:	ldr	r0, [r1, #8]
   15410:	bic	r4, r4, r0, lsr r2
   15414:	eor	r0, r0, r4, lsl r2
   15418:	mov	r2, ip
   1541c:	str	r0, [r1, #8]
   15420:	mov	r0, #0
   15424:	mov	r1, lr
   15428:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   1542c:	sub	sp, fp, #8
   15430:	pop	{r4, sl, fp, pc}
   15434:	push	{fp, lr}
   15438:	mov	fp, sp
   1543c:	sub	sp, sp, #48	; 0x30
   15440:	mov	ip, r0
   15444:	movw	r0, #33112	; 0x8158
   15448:	mov	r2, #32
   1544c:	movt	r0, #2
   15450:	add	r3, r0, #16
   15454:	vld1.64	{d16-d17}, [r0], r2
   15458:	vld1.64	{d20-d21}, [r0]
   1545c:	vld1.64	{d18-d19}, [r3]
   15460:	mov	r3, sp
   15464:	add	r0, r3, #32
   15468:	add	r2, r3, #16
   1546c:	vst1.64	{d20-d21}, [r0]
   15470:	mov	r0, #28
   15474:	vst1.64	{d18-d19}, [r2]
   15478:	mov	r2, r3
   1547c:	and	r0, r0, r1, lsr #3
   15480:	and	r1, r1, #31
   15484:	vst1.64	{d16-d17}, [r2], r0
   15488:	mov	r0, #1
   1548c:	ldr	lr, [r2, #8]
   15490:	bic	r0, r0, lr, lsr r1
   15494:	eor	r0, lr, r0, lsl r1
   15498:	mov	r1, ip
   1549c:	str	r0, [r2, #8]
   154a0:	mov	r0, #0
   154a4:	mvn	r2, #0
   154a8:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   154ac:	mov	sp, fp
   154b0:	pop	{fp, pc}
   154b4:	push	{fp, lr}
   154b8:	mov	fp, sp
   154bc:	sub	sp, sp, #48	; 0x30
   154c0:	mov	r1, r0
   154c4:	movw	r0, #33112	; 0x8158
   154c8:	mov	r3, #32
   154cc:	movt	r0, #2
   154d0:	add	r2, r0, #16
   154d4:	vld1.64	{d16-d17}, [r0], r3
   154d8:	mov	r3, sp
   154dc:	vld1.64	{d18-d19}, [r2]
   154e0:	vld1.64	{d20-d21}, [r0]
   154e4:	add	r2, r3, #16
   154e8:	add	r0, r3, #32
   154ec:	vst1.64	{d18-d19}, [r2]
   154f0:	vst1.64	{d20-d21}, [r0]
   154f4:	mov	r0, #12
   154f8:	mov	r2, r3
   154fc:	vst1.64	{d16-d17}, [r2], r0
   15500:	ldr	r0, [r2]
   15504:	orr	r0, r0, #67108864	; 0x4000000
   15508:	str	r0, [r2]
   1550c:	mov	r0, #0
   15510:	mvn	r2, #0
   15514:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15518:	mov	sp, fp
   1551c:	pop	{fp, pc}
   15520:	push	{fp, lr}
   15524:	mov	fp, sp
   15528:	sub	sp, sp, #48	; 0x30
   1552c:	mov	ip, r1
   15530:	mov	r1, r0
   15534:	movw	r0, #33112	; 0x8158
   15538:	mov	r2, #32
   1553c:	movt	r0, #2
   15540:	add	r3, r0, #16
   15544:	vld1.64	{d16-d17}, [r0], r2
   15548:	vld1.64	{d18-d19}, [r3]
   1554c:	vld1.64	{d20-d21}, [r0]
   15550:	mov	r3, sp
   15554:	add	r2, r3, #16
   15558:	add	r0, r3, #32
   1555c:	vst1.64	{d18-d19}, [r2]
   15560:	vst1.64	{d20-d21}, [r0]
   15564:	mov	r0, #12
   15568:	mov	r2, r3
   1556c:	vst1.64	{d16-d17}, [r2], r0
   15570:	ldr	r0, [r2]
   15574:	orr	r0, r0, #67108864	; 0x4000000
   15578:	str	r0, [r2]
   1557c:	mov	r0, #0
   15580:	mov	r2, ip
   15584:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15588:	mov	sp, fp
   1558c:	pop	{fp, pc}
   15590:	push	{r4, sl, fp, lr}
   15594:	add	fp, sp, #8
   15598:	sub	sp, sp, #96	; 0x60
   1559c:	vmov.i32	q8, #0	; 0x00000000
   155a0:	mov	ip, r2
   155a4:	mov	r2, sp
   155a8:	mov	r4, #28
   155ac:	cmp	r1, #10
   155b0:	mov	r3, r2
   155b4:	add	lr, r2, #16
   155b8:	vst1.64	{d16-d17}, [r3], r4
   155bc:	vst1.64	{d16-d17}, [lr]
   155c0:	vst1.32	{d16-d17}, [r3]
   155c4:	beq	15614 <__mempcpy_chk@plt+0x4630>
   155c8:	vld1.64	{d16-d17}, [r2], r4
   155cc:	vld1.64	{d18-d19}, [lr]
   155d0:	add	r3, sp, #48	; 0x30
   155d4:	vld1.32	{d20-d21}, [r2]
   155d8:	add	r2, r3, #20
   155dc:	add	r4, r3, #4
   155e0:	vst1.32	{d18-d19}, [r2]
   155e4:	add	r2, r3, #32
   155e8:	vst1.32	{d16-d17}, [r4]
   155ec:	vst1.32	{d20-d21}, [r2]
   155f0:	str	r1, [sp, #48]	; 0x30
   155f4:	mvn	r2, #0
   155f8:	ldr	r1, [sp, #60]	; 0x3c
   155fc:	orr	r1, r1, #67108864	; 0x4000000
   15600:	str	r1, [sp, #60]	; 0x3c
   15604:	mov	r1, ip
   15608:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   1560c:	sub	sp, fp, #8
   15610:	pop	{r4, sl, fp, pc}
   15614:	bl	10fcc <abort@plt>
   15618:	push	{r4, r5, r6, sl, fp, lr}
   1561c:	add	fp, sp, #16
   15620:	sub	sp, sp, #48	; 0x30
   15624:	mov	ip, r3
   15628:	movw	r3, #33112	; 0x8158
   1562c:	mov	r6, #32
   15630:	cmp	r1, #0
   15634:	mov	r4, sp
   15638:	movt	r3, #2
   1563c:	cmpne	r2, #0
   15640:	add	r5, r4, #16
   15644:	add	lr, r3, #16
   15648:	vld1.64	{d16-d17}, [r3], r6
   1564c:	vld1.64	{d18-d19}, [lr]
   15650:	vld1.64	{d20-d21}, [r3]
   15654:	mov	r3, #10
   15658:	vst1.64	{d16-d17}, [r4], r6
   1565c:	vst1.64	{d18-d19}, [r5]
   15660:	vst1.64	{d20-d21}, [r4]
   15664:	str	r3, [sp]
   15668:	bne	15670 <__mempcpy_chk@plt+0x468c>
   1566c:	bl	10fcc <abort@plt>
   15670:	str	r2, [sp, #44]	; 0x2c
   15674:	str	r1, [sp, #40]	; 0x28
   15678:	mov	r3, sp
   1567c:	mov	r1, ip
   15680:	mvn	r2, #0
   15684:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15688:	sub	sp, fp, #16
   1568c:	pop	{r4, r5, r6, sl, fp, pc}
   15690:	push	{r4, r5, r6, sl, fp, lr}
   15694:	add	fp, sp, #16
   15698:	sub	sp, sp, #48	; 0x30
   1569c:	mov	lr, r3
   156a0:	movw	r3, #33112	; 0x8158
   156a4:	mov	r6, #32
   156a8:	cmp	r1, #0
   156ac:	mov	r4, sp
   156b0:	movt	r3, #2
   156b4:	cmpne	r2, #0
   156b8:	add	r5, r4, #16
   156bc:	add	ip, r3, #16
   156c0:	vld1.64	{d16-d17}, [r3], r6
   156c4:	vld1.64	{d18-d19}, [ip]
   156c8:	vld1.64	{d20-d21}, [r3]
   156cc:	mov	r3, #10
   156d0:	vst1.64	{d16-d17}, [r4], r6
   156d4:	vst1.64	{d18-d19}, [r5]
   156d8:	vst1.64	{d20-d21}, [r4]
   156dc:	str	r3, [sp]
   156e0:	bne	156e8 <__mempcpy_chk@plt+0x4704>
   156e4:	bl	10fcc <abort@plt>
   156e8:	ldr	ip, [fp, #8]
   156ec:	str	r2, [sp, #44]	; 0x2c
   156f0:	str	r1, [sp, #40]	; 0x28
   156f4:	mov	r3, sp
   156f8:	mov	r1, lr
   156fc:	mov	r2, ip
   15700:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15704:	sub	sp, fp, #16
   15708:	pop	{r4, r5, r6, sl, fp, pc}
   1570c:	push	{r4, sl, fp, lr}
   15710:	add	fp, sp, #8
   15714:	sub	sp, sp, #48	; 0x30
   15718:	movw	r3, #33112	; 0x8158
   1571c:	mov	lr, #32
   15720:	mov	ip, r2
   15724:	cmp	r0, #0
   15728:	movt	r3, #2
   1572c:	cmpne	r1, #0
   15730:	add	r2, r3, #16
   15734:	vld1.64	{d16-d17}, [r3], lr
   15738:	vld1.64	{d20-d21}, [r3]
   1573c:	vld1.64	{d18-d19}, [r2]
   15740:	mov	r2, sp
   15744:	add	r4, r2, #16
   15748:	vst1.64	{d16-d17}, [r2], lr
   1574c:	vst1.64	{d20-d21}, [r2]
   15750:	mov	r2, #10
   15754:	vst1.64	{d18-d19}, [r4]
   15758:	str	r2, [sp]
   1575c:	bne	15764 <__mempcpy_chk@plt+0x4780>
   15760:	bl	10fcc <abort@plt>
   15764:	str	r1, [sp, #44]	; 0x2c
   15768:	str	r0, [sp, #40]	; 0x28
   1576c:	mov	r3, sp
   15770:	mov	r0, #0
   15774:	mov	r1, ip
   15778:	mvn	r2, #0
   1577c:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15780:	sub	sp, fp, #8
   15784:	pop	{r4, sl, fp, pc}
   15788:	push	{r4, r5, fp, lr}
   1578c:	add	fp, sp, #8
   15790:	sub	sp, sp, #48	; 0x30
   15794:	mov	ip, r3
   15798:	movw	r3, #33112	; 0x8158
   1579c:	mov	r4, #32
   157a0:	mov	lr, r2
   157a4:	cmp	r0, #0
   157a8:	movt	r3, #2
   157ac:	cmpne	r1, #0
   157b0:	add	r2, r3, #16
   157b4:	vld1.64	{d16-d17}, [r3], r4
   157b8:	vld1.64	{d20-d21}, [r3]
   157bc:	vld1.64	{d18-d19}, [r2]
   157c0:	mov	r2, sp
   157c4:	add	r5, r2, #16
   157c8:	vst1.64	{d16-d17}, [r2], r4
   157cc:	vst1.64	{d20-d21}, [r2]
   157d0:	mov	r2, #10
   157d4:	vst1.64	{d18-d19}, [r5]
   157d8:	str	r2, [sp]
   157dc:	bne	157e4 <__mempcpy_chk@plt+0x4800>
   157e0:	bl	10fcc <abort@plt>
   157e4:	str	r1, [sp, #44]	; 0x2c
   157e8:	str	r0, [sp, #40]	; 0x28
   157ec:	mov	r3, sp
   157f0:	mov	r0, #0
   157f4:	mov	r1, lr
   157f8:	mov	r2, ip
   157fc:	bl	150a0 <__mempcpy_chk@plt+0x40bc>
   15800:	sub	sp, fp, #8
   15804:	pop	{r4, r5, fp, pc}
   15808:	movw	r3, #33008	; 0x80f0
   1580c:	movt	r3, #2
   15810:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   15814:	movw	r3, #33008	; 0x80f0
   15818:	mov	r2, r1
   1581c:	mov	r1, r0
   15820:	mov	r0, #0
   15824:	movt	r3, #2
   15828:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   1582c:	movw	r3, #33008	; 0x80f0
   15830:	mvn	r2, #0
   15834:	movt	r3, #2
   15838:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   1583c:	movw	r3, #33008	; 0x80f0
   15840:	mov	r1, r0
   15844:	mov	r0, #0
   15848:	mvn	r2, #0
   1584c:	movt	r3, #2
   15850:	b	150a0 <__mempcpy_chk@plt+0x40bc>
   15854:	push	{r4, r5, r6, sl, fp, lr}
   15858:	add	fp, sp, #16
   1585c:	ldr	r4, [r0], #8
   15860:	mov	r5, r1
   15864:	cmp	r4, r0
   15868:	beq	1588c <__mempcpy_chk@plt+0x48a8>
   1586c:	mov	r0, r4
   15870:	mov	r1, r5
   15874:	bl	166ac <__mempcpy_chk@plt+0x56c8>
   15878:	cmp	r0, #0
   1587c:	mov	r6, r0
   15880:	moveq	r6, r4
   15884:	mov	r0, r6
   15888:	pop	{r4, r5, r6, sl, fp, pc}
   1588c:	mov	r0, r5
   15890:	bl	1667c <__mempcpy_chk@plt+0x5698>
   15894:	cmp	r0, #0
   15898:	beq	158b4 <__mempcpy_chk@plt+0x48d0>
   1589c:	mov	r1, r4
   158a0:	mov	r2, r5
   158a4:	mov	r6, r0
   158a8:	bl	10df8 <memcpy@plt>
   158ac:	mov	r0, r6
   158b0:	pop	{r4, r5, r6, sl, fp, pc}
   158b4:	mov	r6, #0
   158b8:	mov	r0, r6
   158bc:	pop	{r4, r5, r6, sl, fp, pc}
   158c0:	push	{r4, r5, r6, sl, fp, lr}
   158c4:	add	fp, sp, #16
   158c8:	mov	r4, r0
   158cc:	add	r6, r0, #8
   158d0:	ldrd	r0, [r0]
   158d4:	lsl	r5, r1, #1
   158d8:	cmp	r0, r6
   158dc:	beq	158e8 <__mempcpy_chk@plt+0x4904>
   158e0:	bl	1233c <__mempcpy_chk@plt+0x1358>
   158e4:	ldr	r1, [r4, #4]
   158e8:	cmp	r5, r1
   158ec:	bcc	15910 <__mempcpy_chk@plt+0x492c>
   158f0:	mov	r0, r5
   158f4:	bl	1667c <__mempcpy_chk@plt+0x5698>
   158f8:	cmp	r0, #0
   158fc:	strne	r0, [r4]
   15900:	movne	r0, #1
   15904:	strne	r5, [r4, #4]
   15908:	popne	{r4, r5, r6, sl, fp, pc}
   1590c:	b	1591c <__mempcpy_chk@plt+0x4938>
   15910:	bl	10f18 <__errno_location@plt>
   15914:	mov	r1, #12
   15918:	str	r1, [r0]
   1591c:	mov	r0, #0
   15920:	mov	r5, #1024	; 0x400
   15924:	str	r6, [r4]
   15928:	str	r5, [r4, #4]
   1592c:	pop	{r4, r5, r6, sl, fp, pc}
   15930:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15934:	add	fp, sp, #24
   15938:	ldrd	r8, [r0]
   1593c:	add	r7, r0, #8
   15940:	mov	r4, r0
   15944:	lsl	r5, r9, #1
   15948:	cmp	r8, r7
   1594c:	beq	15980 <__mempcpy_chk@plt+0x499c>
   15950:	cmp	r5, r9
   15954:	bcc	159b8 <__mempcpy_chk@plt+0x49d4>
   15958:	mov	r0, r8
   1595c:	mov	r1, r5
   15960:	bl	166ac <__mempcpy_chk@plt+0x56c8>
   15964:	mov	r6, r0
   15968:	cmp	r0, #0
   1596c:	beq	159c8 <__mempcpy_chk@plt+0x49e4>
   15970:	mov	r0, #1
   15974:	str	r6, [r4]
   15978:	str	r5, [r4, #4]
   1597c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15980:	mov	r0, r5
   15984:	bl	1667c <__mempcpy_chk@plt+0x5698>
   15988:	cmp	r0, #0
   1598c:	beq	159b0 <__mempcpy_chk@plt+0x49cc>
   15990:	ldr	r2, [r4, #4]
   15994:	mov	r1, r8
   15998:	mov	r6, r0
   1599c:	bl	10df8 <memcpy@plt>
   159a0:	mov	r0, #1
   159a4:	str	r6, [r4]
   159a8:	str	r5, [r4, #4]
   159ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   159b0:	mov	r0, #0
   159b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   159b8:	bl	10f18 <__errno_location@plt>
   159bc:	mov	r1, #12
   159c0:	str	r1, [r0]
   159c4:	b	159cc <__mempcpy_chk@plt+0x49e8>
   159c8:	ldr	r8, [r4]
   159cc:	mov	r0, r8
   159d0:	bl	1233c <__mempcpy_chk@plt+0x1358>
   159d4:	mov	r0, #0
   159d8:	mov	r5, #1024	; 0x400
   159dc:	str	r7, [r4]
   159e0:	str	r5, [r4, #4]
   159e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   159e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   159ec:	add	fp, sp, #24
   159f0:	sub	sp, sp, #32
   159f4:	ldr	r6, [fp, #12]
   159f8:	ldr	r7, [fp, #8]
   159fc:	mov	r4, r2
   15a00:	mov	r8, r0
   15a04:	cmp	r1, #0
   15a08:	beq	15a30 <__mempcpy_chk@plt+0x4a4c>
   15a0c:	movw	r2, #30368	; 0x76a0
   15a10:	mov	r5, r1
   15a14:	str	r3, [sp, #4]
   15a18:	str	r4, [sp]
   15a1c:	mov	r0, r8
   15a20:	mov	r1, #1
   15a24:	movt	r2, #1
   15a28:	mov	r3, r5
   15a2c:	b	15a48 <__mempcpy_chk@plt+0x4a64>
   15a30:	movw	r2, #30380	; 0x76ac
   15a34:	str	r3, [sp]
   15a38:	mov	r0, r8
   15a3c:	mov	r1, #1
   15a40:	mov	r3, r4
   15a44:	movt	r2, #1
   15a48:	bl	10f54 <__fprintf_chk@plt>
   15a4c:	movw	r1, #30387	; 0x76b3
   15a50:	mov	r0, #0
   15a54:	mov	r2, #5
   15a58:	movt	r1, #1
   15a5c:	bl	10e10 <dcgettext@plt>
   15a60:	movw	r2, #31105	; 0x7981
   15a64:	mov	r3, r0
   15a68:	movw	r0, #2022	; 0x7e6
   15a6c:	mov	r1, #1
   15a70:	movt	r2, #1
   15a74:	str	r0, [sp]
   15a78:	mov	r0, r8
   15a7c:	bl	10f54 <__fprintf_chk@plt>
   15a80:	movw	r4, #28104	; 0x6dc8
   15a84:	mov	r1, r8
   15a88:	movt	r4, #1
   15a8c:	mov	r0, r4
   15a90:	bl	10d98 <fputs_unlocked@plt>
   15a94:	movw	r1, #30391	; 0x76b7
   15a98:	mov	r0, #0
   15a9c:	mov	r2, #5
   15aa0:	movt	r1, #1
   15aa4:	bl	10e10 <dcgettext@plt>
   15aa8:	movw	r3, #30562	; 0x7762
   15aac:	mov	r2, r0
   15ab0:	mov	r0, r8
   15ab4:	mov	r1, #1
   15ab8:	movt	r3, #1
   15abc:	bl	10f54 <__fprintf_chk@plt>
   15ac0:	mov	r0, r4
   15ac4:	mov	r1, r8
   15ac8:	bl	10d98 <fputs_unlocked@plt>
   15acc:	cmp	r6, #9
   15ad0:	bhi	15b0c <__mempcpy_chk@plt+0x4b28>
   15ad4:	add	r0, pc, #0
   15ad8:	ldr	pc, [r0, r6, lsl #2]
   15adc:	andeq	r5, r1, r4, lsl #22
   15ae0:	andeq	r5, r1, r8, lsl fp
   15ae4:	andeq	r5, r1, r8, asr #22
   15ae8:	andeq	r5, r1, r0, ror fp
   15aec:	muleq	r1, r8, fp
   15af0:	andeq	r5, r1, r0, asr #23
   15af4:	andeq	r5, r1, r8, ror #23
   15af8:	andeq	r5, r1, r0, lsr #24
   15afc:	andeq	r5, r1, r8, asr #25
   15b00:	andeq	r5, r1, r0, ror ip
   15b04:	sub	sp, fp, #24
   15b08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b0c:	movw	r1, #30915	; 0x78c3
   15b10:	movt	r1, #1
   15b14:	b	15c78 <__mempcpy_chk@plt+0x4c94>
   15b18:	movw	r1, #30596	; 0x7784
   15b1c:	mov	r0, #0
   15b20:	mov	r2, #5
   15b24:	movt	r1, #1
   15b28:	bl	10e10 <dcgettext@plt>
   15b2c:	ldr	r3, [r7]
   15b30:	mov	r2, r0
   15b34:	mov	r0, r8
   15b38:	mov	r1, #1
   15b3c:	sub	sp, fp, #24
   15b40:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15b44:	b	10f54 <__fprintf_chk@plt>
   15b48:	movw	r1, #30612	; 0x7794
   15b4c:	mov	r0, #0
   15b50:	mov	r2, #5
   15b54:	movt	r1, #1
   15b58:	bl	10e10 <dcgettext@plt>
   15b5c:	mov	r2, r0
   15b60:	ldr	r3, [r7]
   15b64:	ldr	r0, [r7, #4]
   15b68:	str	r0, [sp]
   15b6c:	b	15c5c <__mempcpy_chk@plt+0x4c78>
   15b70:	movw	r1, #30635	; 0x77ab
   15b74:	mov	r0, #0
   15b78:	mov	r2, #5
   15b7c:	movt	r1, #1
   15b80:	bl	10e10 <dcgettext@plt>
   15b84:	mov	r2, r0
   15b88:	ldr	r3, [r7]
   15b8c:	ldmib	r7, {r0, r1}
   15b90:	stm	sp, {r0, r1}
   15b94:	b	15c5c <__mempcpy_chk@plt+0x4c78>
   15b98:	movw	r1, #30663	; 0x77c7
   15b9c:	mov	r0, #0
   15ba0:	mov	r2, #5
   15ba4:	movt	r1, #1
   15ba8:	bl	10e10 <dcgettext@plt>
   15bac:	ldr	r3, [r7]
   15bb0:	mov	r2, r0
   15bb4:	ldmib	r7, {r0, r1, r7}
   15bb8:	stm	sp, {r0, r1, r7}
   15bbc:	b	15c5c <__mempcpy_chk@plt+0x4c78>
   15bc0:	movw	r1, #30695	; 0x77e7
   15bc4:	mov	r0, #0
   15bc8:	mov	r2, #5
   15bcc:	movt	r1, #1
   15bd0:	bl	10e10 <dcgettext@plt>
   15bd4:	ldr	r3, [r7]
   15bd8:	mov	r2, r0
   15bdc:	ldmib	r7, {r0, r1, r6, r7}
   15be0:	stm	sp, {r0, r1, r6, r7}
   15be4:	b	15c5c <__mempcpy_chk@plt+0x4c78>
   15be8:	movw	r1, #30731	; 0x780b
   15bec:	mov	r0, #0
   15bf0:	mov	r2, #5
   15bf4:	movt	r1, #1
   15bf8:	bl	10e10 <dcgettext@plt>
   15bfc:	mov	r2, r0
   15c00:	ldr	r3, [r7]
   15c04:	ldmib	r7, {r0, r1, r6}
   15c08:	ldr	r5, [r7, #16]
   15c0c:	ldr	r7, [r7, #20]
   15c10:	stm	sp, {r0, r1, r6}
   15c14:	str	r5, [sp, #12]
   15c18:	str	r7, [sp, #16]
   15c1c:	b	15c5c <__mempcpy_chk@plt+0x4c78>
   15c20:	movw	r1, #30771	; 0x7833
   15c24:	mov	r0, #0
   15c28:	mov	r2, #5
   15c2c:	movt	r1, #1
   15c30:	bl	10e10 <dcgettext@plt>
   15c34:	mov	r2, r0
   15c38:	ldr	r3, [r7]
   15c3c:	ldmib	r7, {r0, r1, r6}
   15c40:	ldr	r5, [r7, #16]
   15c44:	ldr	r4, [r7, #20]
   15c48:	ldr	r7, [r7, #24]
   15c4c:	stm	sp, {r0, r1, r6}
   15c50:	str	r5, [sp, #12]
   15c54:	str	r4, [sp, #16]
   15c58:	str	r7, [sp, #20]
   15c5c:	mov	r0, r8
   15c60:	mov	r1, #1
   15c64:	bl	10f54 <__fprintf_chk@plt>
   15c68:	sub	sp, fp, #24
   15c6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c70:	movw	r1, #30863	; 0x788f
   15c74:	movt	r1, #1
   15c78:	mov	r0, #0
   15c7c:	mov	r2, #5
   15c80:	bl	10e10 <dcgettext@plt>
   15c84:	mov	ip, r0
   15c88:	ldr	r3, [r7]
   15c8c:	ldr	r0, [r7, #4]
   15c90:	ldr	r1, [r7, #8]
   15c94:	ldr	r6, [r7, #12]
   15c98:	ldr	r5, [r7, #16]
   15c9c:	ldr	r4, [r7, #20]
   15ca0:	ldr	r2, [r7, #24]
   15ca4:	ldr	lr, [r7, #28]
   15ca8:	ldr	r7, [r7, #32]
   15cac:	stm	sp, {r0, r1, r6}
   15cb0:	str	r5, [sp, #12]
   15cb4:	str	r4, [sp, #16]
   15cb8:	str	r2, [sp, #20]
   15cbc:	str	lr, [sp, #24]
   15cc0:	str	r7, [sp, #28]
   15cc4:	b	15d0c <__mempcpy_chk@plt+0x4d28>
   15cc8:	movw	r1, #30815	; 0x785f
   15ccc:	mov	r0, #0
   15cd0:	mov	r2, #5
   15cd4:	movt	r1, #1
   15cd8:	bl	10e10 <dcgettext@plt>
   15cdc:	mov	ip, r0
   15ce0:	ldr	r3, [r7]
   15ce4:	ldmib	r7, {r0, r1, r6}
   15ce8:	ldr	r5, [r7, #16]
   15cec:	ldr	r4, [r7, #20]
   15cf0:	ldr	r2, [r7, #24]
   15cf4:	ldr	r7, [r7, #28]
   15cf8:	stm	sp, {r0, r1, r6}
   15cfc:	str	r5, [sp, #12]
   15d00:	str	r4, [sp, #16]
   15d04:	str	r2, [sp, #20]
   15d08:	str	r7, [sp, #24]
   15d0c:	mov	r0, r8
   15d10:	mov	r1, #1
   15d14:	mov	r2, ip
   15d18:	bl	10f54 <__fprintf_chk@plt>
   15d1c:	sub	sp, fp, #24
   15d20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d24:	push	{r4, sl, fp, lr}
   15d28:	add	fp, sp, #8
   15d2c:	sub	sp, sp, #8
   15d30:	ldr	ip, [fp, #8]
   15d34:	mov	lr, #0
   15d38:	ldr	r4, [ip, lr, lsl #2]
   15d3c:	add	lr, lr, #1
   15d40:	cmp	r4, #0
   15d44:	bne	15d38 <__mempcpy_chk@plt+0x4d54>
   15d48:	sub	r4, lr, #1
   15d4c:	str	ip, [sp]
   15d50:	str	r4, [sp, #4]
   15d54:	bl	159e8 <__mempcpy_chk@plt+0x4a04>
   15d58:	sub	sp, fp, #8
   15d5c:	pop	{r4, sl, fp, pc}
   15d60:	push	{fp, lr}
   15d64:	mov	fp, sp
   15d68:	sub	sp, sp, #48	; 0x30
   15d6c:	ldr	ip, [fp, #8]
   15d70:	ldr	lr, [ip]
   15d74:	cmp	lr, #0
   15d78:	str	lr, [sp, #8]
   15d7c:	beq	15e18 <__mempcpy_chk@plt+0x4e34>
   15d80:	ldr	lr, [ip, #4]
   15d84:	cmp	lr, #0
   15d88:	str	lr, [sp, #12]
   15d8c:	beq	15e20 <__mempcpy_chk@plt+0x4e3c>
   15d90:	ldr	lr, [ip, #8]
   15d94:	cmp	lr, #0
   15d98:	str	lr, [sp, #16]
   15d9c:	beq	15e28 <__mempcpy_chk@plt+0x4e44>
   15da0:	ldr	lr, [ip, #12]
   15da4:	cmp	lr, #0
   15da8:	str	lr, [sp, #20]
   15dac:	beq	15e30 <__mempcpy_chk@plt+0x4e4c>
   15db0:	ldr	lr, [ip, #16]
   15db4:	cmp	lr, #0
   15db8:	str	lr, [sp, #24]
   15dbc:	beq	15e38 <__mempcpy_chk@plt+0x4e54>
   15dc0:	ldr	lr, [ip, #20]
   15dc4:	cmp	lr, #0
   15dc8:	str	lr, [sp, #28]
   15dcc:	beq	15e40 <__mempcpy_chk@plt+0x4e5c>
   15dd0:	ldr	lr, [ip, #24]
   15dd4:	cmp	lr, #0
   15dd8:	str	lr, [sp, #32]
   15ddc:	beq	15e48 <__mempcpy_chk@plt+0x4e64>
   15de0:	ldr	lr, [ip, #28]
   15de4:	cmp	lr, #0
   15de8:	str	lr, [sp, #36]	; 0x24
   15dec:	beq	15e50 <__mempcpy_chk@plt+0x4e6c>
   15df0:	ldr	lr, [ip, #32]
   15df4:	cmp	lr, #0
   15df8:	str	lr, [sp, #40]	; 0x28
   15dfc:	beq	15e58 <__mempcpy_chk@plt+0x4e74>
   15e00:	ldr	lr, [ip, #36]	; 0x24
   15e04:	mov	ip, #10
   15e08:	cmp	lr, #0
   15e0c:	str	lr, [sp, #44]	; 0x2c
   15e10:	movweq	ip, #9
   15e14:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e18:	mov	ip, #0
   15e1c:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e20:	mov	ip, #1
   15e24:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e28:	mov	ip, #2
   15e2c:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e30:	mov	ip, #3
   15e34:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e38:	mov	ip, #4
   15e3c:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e40:	mov	ip, #5
   15e44:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e48:	mov	ip, #6
   15e4c:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e50:	mov	ip, #7
   15e54:	b	15e5c <__mempcpy_chk@plt+0x4e78>
   15e58:	mov	ip, #8
   15e5c:	add	lr, sp, #8
   15e60:	str	ip, [sp, #4]
   15e64:	str	lr, [sp]
   15e68:	bl	159e8 <__mempcpy_chk@plt+0x4a04>
   15e6c:	mov	sp, fp
   15e70:	pop	{fp, pc}
   15e74:	push	{fp, lr}
   15e78:	mov	fp, sp
   15e7c:	sub	sp, sp, #56	; 0x38
   15e80:	add	ip, fp, #8
   15e84:	str	ip, [sp, #12]
   15e88:	ldr	lr, [fp, #8]
   15e8c:	cmp	lr, #0
   15e90:	str	lr, [sp, #16]
   15e94:	beq	15f30 <__mempcpy_chk@plt+0x4f4c>
   15e98:	ldr	lr, [ip, #4]
   15e9c:	cmp	lr, #0
   15ea0:	str	lr, [sp, #20]
   15ea4:	beq	15f38 <__mempcpy_chk@plt+0x4f54>
   15ea8:	ldr	lr, [ip, #8]
   15eac:	cmp	lr, #0
   15eb0:	str	lr, [sp, #24]
   15eb4:	beq	15f40 <__mempcpy_chk@plt+0x4f5c>
   15eb8:	ldr	lr, [ip, #12]
   15ebc:	cmp	lr, #0
   15ec0:	str	lr, [sp, #28]
   15ec4:	beq	15f48 <__mempcpy_chk@plt+0x4f64>
   15ec8:	ldr	lr, [ip, #16]
   15ecc:	cmp	lr, #0
   15ed0:	str	lr, [sp, #32]
   15ed4:	beq	15f50 <__mempcpy_chk@plt+0x4f6c>
   15ed8:	ldr	lr, [ip, #20]
   15edc:	cmp	lr, #0
   15ee0:	str	lr, [sp, #36]	; 0x24
   15ee4:	beq	15f58 <__mempcpy_chk@plt+0x4f74>
   15ee8:	ldr	lr, [ip, #24]
   15eec:	cmp	lr, #0
   15ef0:	str	lr, [sp, #40]	; 0x28
   15ef4:	beq	15f60 <__mempcpy_chk@plt+0x4f7c>
   15ef8:	ldr	lr, [ip, #28]
   15efc:	cmp	lr, #0
   15f00:	str	lr, [sp, #44]	; 0x2c
   15f04:	beq	15f68 <__mempcpy_chk@plt+0x4f84>
   15f08:	ldr	lr, [ip, #32]
   15f0c:	cmp	lr, #0
   15f10:	str	lr, [sp, #48]	; 0x30
   15f14:	beq	15f70 <__mempcpy_chk@plt+0x4f8c>
   15f18:	ldr	lr, [ip, #36]	; 0x24
   15f1c:	mov	ip, #10
   15f20:	cmp	lr, #0
   15f24:	str	lr, [sp, #52]	; 0x34
   15f28:	movweq	ip, #9
   15f2c:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f30:	mov	ip, #0
   15f34:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f38:	mov	ip, #1
   15f3c:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f40:	mov	ip, #2
   15f44:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f48:	mov	ip, #3
   15f4c:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f50:	mov	ip, #4
   15f54:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f58:	mov	ip, #5
   15f5c:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f60:	mov	ip, #6
   15f64:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f68:	mov	ip, #7
   15f6c:	b	15f74 <__mempcpy_chk@plt+0x4f90>
   15f70:	mov	ip, #8
   15f74:	add	lr, sp, #16
   15f78:	str	ip, [sp, #4]
   15f7c:	str	lr, [sp]
   15f80:	bl	159e8 <__mempcpy_chk@plt+0x4a04>
   15f84:	mov	sp, fp
   15f88:	pop	{fp, pc}
   15f8c:	push	{fp, lr}
   15f90:	mov	fp, sp
   15f94:	movw	r0, #33092	; 0x8144
   15f98:	movt	r0, #2
   15f9c:	ldr	r1, [r0]
   15fa0:	movw	r0, #28104	; 0x6dc8
   15fa4:	movt	r0, #1
   15fa8:	bl	10d98 <fputs_unlocked@plt>
   15fac:	movw	r1, #30975	; 0x78ff
   15fb0:	mov	r0, #0
   15fb4:	mov	r2, #5
   15fb8:	movt	r1, #1
   15fbc:	bl	10e10 <dcgettext@plt>
   15fc0:	movw	r2, #30995	; 0x7913
   15fc4:	mov	r1, r0
   15fc8:	mov	r0, #1
   15fcc:	movt	r2, #1
   15fd0:	bl	10f3c <__printf_chk@plt>
   15fd4:	movw	r1, #31017	; 0x7929
   15fd8:	mov	r0, #0
   15fdc:	mov	r2, #5
   15fe0:	movt	r1, #1
   15fe4:	bl	10e10 <dcgettext@plt>
   15fe8:	movw	r2, #29205	; 0x7215
   15fec:	movw	r3, #29415	; 0x72e7
   15ff0:	mov	r1, r0
   15ff4:	mov	r0, #1
   15ff8:	movt	r2, #1
   15ffc:	movt	r3, #1
   16000:	bl	10f3c <__printf_chk@plt>
   16004:	movw	r1, #31037	; 0x793d
   16008:	mov	r0, #0
   1600c:	mov	r2, #5
   16010:	movt	r1, #1
   16014:	bl	10e10 <dcgettext@plt>
   16018:	movw	r2, #31076	; 0x7964
   1601c:	mov	r1, r0
   16020:	mov	r0, #1
   16024:	movt	r2, #1
   16028:	pop	{fp, lr}
   1602c:	b	10f3c <__printf_chk@plt>
   16030:	push	{r4, r5, r6, sl, fp, lr}
   16034:	add	fp, sp, #16
   16038:	mov	r4, r2
   1603c:	mov	r5, r1
   16040:	mov	r6, r0
   16044:	bl	16a04 <__mempcpy_chk@plt+0x5a20>
   16048:	cmp	r0, #0
   1604c:	popne	{r4, r5, r6, sl, fp, pc}
   16050:	cmp	r6, #0
   16054:	beq	16068 <__mempcpy_chk@plt+0x5084>
   16058:	cmp	r5, #0
   1605c:	cmpne	r4, #0
   16060:	bne	16068 <__mempcpy_chk@plt+0x5084>
   16064:	pop	{r4, r5, r6, sl, fp, pc}
   16068:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   1606c:	push	{r4, r5, r6, sl, fp, lr}
   16070:	add	fp, sp, #16
   16074:	mov	r4, r2
   16078:	mov	r5, r1
   1607c:	mov	r6, r0
   16080:	bl	16a04 <__mempcpy_chk@plt+0x5a20>
   16084:	cmp	r0, #0
   16088:	popne	{r4, r5, r6, sl, fp, pc}
   1608c:	cmp	r6, #0
   16090:	beq	160a4 <__mempcpy_chk@plt+0x50c0>
   16094:	cmp	r5, #0
   16098:	cmpne	r4, #0
   1609c:	bne	160a4 <__mempcpy_chk@plt+0x50c0>
   160a0:	pop	{r4, r5, r6, sl, fp, pc}
   160a4:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   160a8:	push	{fp, lr}
   160ac:	mov	fp, sp
   160b0:	bl	1667c <__mempcpy_chk@plt+0x5698>
   160b4:	cmp	r0, #0
   160b8:	popne	{fp, pc}
   160bc:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   160c0:	push	{fp, lr}
   160c4:	mov	fp, sp
   160c8:	bl	1667c <__mempcpy_chk@plt+0x5698>
   160cc:	cmp	r0, #0
   160d0:	popne	{fp, pc}
   160d4:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   160d8:	push	{fp, lr}
   160dc:	mov	fp, sp
   160e0:	bl	1667c <__mempcpy_chk@plt+0x5698>
   160e4:	cmp	r0, #0
   160e8:	popne	{fp, pc}
   160ec:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   160f0:	push	{r4, r5, fp, lr}
   160f4:	add	fp, sp, #8
   160f8:	mov	r4, r1
   160fc:	mov	r5, r0
   16100:	bl	166ac <__mempcpy_chk@plt+0x56c8>
   16104:	cmp	r0, #0
   16108:	popne	{r4, r5, fp, pc}
   1610c:	cmp	r5, #0
   16110:	beq	16120 <__mempcpy_chk@plt+0x513c>
   16114:	cmp	r4, #0
   16118:	bne	16120 <__mempcpy_chk@plt+0x513c>
   1611c:	pop	{r4, r5, fp, pc}
   16120:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   16124:	push	{fp, lr}
   16128:	mov	fp, sp
   1612c:	cmp	r1, #0
   16130:	orreq	r1, r1, #1
   16134:	bl	166ac <__mempcpy_chk@plt+0x56c8>
   16138:	cmp	r0, #0
   1613c:	popne	{fp, pc}
   16140:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   16144:	push	{fp, lr}
   16148:	mov	fp, sp
   1614c:	clz	r3, r2
   16150:	lsr	ip, r3, #5
   16154:	clz	r3, r1
   16158:	lsr	r3, r3, #5
   1615c:	orrs	r3, r3, ip
   16160:	movwne	r1, #1
   16164:	movwne	r2, #1
   16168:	bl	16a04 <__mempcpy_chk@plt+0x5a20>
   1616c:	cmp	r0, #0
   16170:	popne	{fp, pc}
   16174:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   16178:	push	{fp, lr}
   1617c:	mov	fp, sp
   16180:	mov	r2, r1
   16184:	mov	r1, r0
   16188:	mov	r0, #0
   1618c:	bl	16a04 <__mempcpy_chk@plt+0x5a20>
   16190:	cmp	r0, #0
   16194:	popne	{fp, pc}
   16198:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   1619c:	push	{fp, lr}
   161a0:	mov	fp, sp
   161a4:	mov	r2, r1
   161a8:	mov	r1, r0
   161ac:	clz	r0, r2
   161b0:	clz	r3, r1
   161b4:	lsr	r0, r0, #5
   161b8:	lsr	r3, r3, #5
   161bc:	orrs	r0, r3, r0
   161c0:	mov	r0, #0
   161c4:	movwne	r1, #1
   161c8:	movwne	r2, #1
   161cc:	bl	16a04 <__mempcpy_chk@plt+0x5a20>
   161d0:	cmp	r0, #0
   161d4:	popne	{fp, pc}
   161d8:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   161dc:	push	{r4, r5, r6, sl, fp, lr}
   161e0:	add	fp, sp, #16
   161e4:	ldr	r5, [r1]
   161e8:	mov	r4, r1
   161ec:	mov	r6, r0
   161f0:	cmp	r0, #0
   161f4:	beq	1620c <__mempcpy_chk@plt+0x5228>
   161f8:	mov	r0, #1
   161fc:	add	r0, r0, r5, lsr #1
   16200:	adds	r5, r5, r0
   16204:	bcc	16214 <__mempcpy_chk@plt+0x5230>
   16208:	b	16250 <__mempcpy_chk@plt+0x526c>
   1620c:	cmp	r5, #0
   16210:	movweq	r5, #64	; 0x40
   16214:	mov	r0, r6
   16218:	mov	r1, r5
   1621c:	mov	r2, #1
   16220:	bl	16a04 <__mempcpy_chk@plt+0x5a20>
   16224:	cmp	r5, #0
   16228:	mov	r1, r5
   1622c:	movwne	r1, #1
   16230:	cmp	r0, #0
   16234:	bne	16248 <__mempcpy_chk@plt+0x5264>
   16238:	clz	r2, r6
   1623c:	lsr	r2, r2, #5
   16240:	orrs	r1, r2, r1
   16244:	bne	16250 <__mempcpy_chk@plt+0x526c>
   16248:	str	r5, [r4]
   1624c:	pop	{r4, r5, r6, sl, fp, pc}
   16250:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   16254:	push	{r4, r5, r6, r7, fp, lr}
   16258:	add	fp, sp, #16
   1625c:	ldr	r5, [r1]
   16260:	mov	r6, r2
   16264:	mov	r4, r1
   16268:	mov	r7, r0
   1626c:	cmp	r0, #0
   16270:	beq	16288 <__mempcpy_chk@plt+0x52a4>
   16274:	mov	r0, #1
   16278:	add	r0, r0, r5, lsr #1
   1627c:	adds	r5, r5, r0
   16280:	bcc	162a0 <__mempcpy_chk@plt+0x52bc>
   16284:	b	162d4 <__mempcpy_chk@plt+0x52f0>
   16288:	cmp	r5, #0
   1628c:	bne	162a0 <__mempcpy_chk@plt+0x52bc>
   16290:	mov	r0, #64	; 0x40
   16294:	cmp	r6, #64	; 0x40
   16298:	udiv	r5, r0, r6
   1629c:	addhi	r5, r5, #1
   162a0:	mov	r0, r7
   162a4:	mov	r1, r5
   162a8:	mov	r2, r6
   162ac:	bl	16a04 <__mempcpy_chk@plt+0x5a20>
   162b0:	cmp	r0, #0
   162b4:	bne	162cc <__mempcpy_chk@plt+0x52e8>
   162b8:	cmp	r7, #0
   162bc:	beq	162d4 <__mempcpy_chk@plt+0x52f0>
   162c0:	cmp	r6, #0
   162c4:	cmpne	r5, #0
   162c8:	bne	162d4 <__mempcpy_chk@plt+0x52f0>
   162cc:	str	r5, [r4]
   162d0:	pop	{r4, r5, r6, r7, fp, pc}
   162d4:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   162d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   162dc:	add	fp, sp, #24
   162e0:	mov	r8, r1
   162e4:	ldr	r1, [r1]
   162e8:	mov	r5, r0
   162ec:	add	r0, r1, r1, asr #1
   162f0:	cmp	r0, r1
   162f4:	mvnvs	r0, #-2147483648	; 0x80000000
   162f8:	cmp	r0, r3
   162fc:	mov	r7, r0
   16300:	movgt	r7, r3
   16304:	cmn	r3, #1
   16308:	movle	r7, r0
   1630c:	ldr	r0, [fp, #8]
   16310:	cmn	r0, #1
   16314:	ble	1633c <__mempcpy_chk@plt+0x5358>
   16318:	cmp	r0, #0
   1631c:	beq	16390 <__mempcpy_chk@plt+0x53ac>
   16320:	cmn	r7, #1
   16324:	ble	16364 <__mempcpy_chk@plt+0x5380>
   16328:	mvn	r4, #-2147483648	; 0x80000000
   1632c:	udiv	r6, r4, r0
   16330:	cmp	r6, r7
   16334:	bge	16390 <__mempcpy_chk@plt+0x53ac>
   16338:	b	163a0 <__mempcpy_chk@plt+0x53bc>
   1633c:	cmn	r7, #1
   16340:	ble	16380 <__mempcpy_chk@plt+0x539c>
   16344:	cmn	r0, #1
   16348:	beq	16390 <__mempcpy_chk@plt+0x53ac>
   1634c:	mov	r6, #-2147483648	; 0x80000000
   16350:	mvn	r4, #-2147483648	; 0x80000000
   16354:	sdiv	r6, r6, r0
   16358:	cmp	r6, r7
   1635c:	bge	16390 <__mempcpy_chk@plt+0x53ac>
   16360:	b	163a0 <__mempcpy_chk@plt+0x53bc>
   16364:	beq	16390 <__mempcpy_chk@plt+0x53ac>
   16368:	mov	r6, #-2147483648	; 0x80000000
   1636c:	mvn	r4, #-2147483648	; 0x80000000
   16370:	sdiv	r6, r6, r7
   16374:	cmp	r6, r0
   16378:	bge	16390 <__mempcpy_chk@plt+0x53ac>
   1637c:	b	163a0 <__mempcpy_chk@plt+0x53bc>
   16380:	mvn	r4, #-2147483648	; 0x80000000
   16384:	sdiv	r6, r4, r0
   16388:	cmp	r7, r6
   1638c:	blt	163a0 <__mempcpy_chk@plt+0x53bc>
   16390:	mul	r6, r7, r0
   16394:	mov	r4, #64	; 0x40
   16398:	cmp	r6, #63	; 0x3f
   1639c:	bgt	163a8 <__mempcpy_chk@plt+0x53c4>
   163a0:	sdiv	r7, r4, r0
   163a4:	mul	r6, r7, r0
   163a8:	cmp	r5, #0
   163ac:	moveq	r4, #0
   163b0:	streq	r4, [r8]
   163b4:	sub	r4, r7, r1
   163b8:	cmp	r4, r2
   163bc:	bge	16468 <__mempcpy_chk@plt+0x5484>
   163c0:	add	r7, r1, r2
   163c4:	mov	r6, #0
   163c8:	mov	r2, #0
   163cc:	cmp	r7, r3
   163d0:	movwgt	r6, #1
   163d4:	cmn	r3, #1
   163d8:	movwgt	r2, #1
   163dc:	cmp	r7, r1
   163e0:	bvs	1649c <__mempcpy_chk@plt+0x54b8>
   163e4:	ands	r1, r2, r6
   163e8:	bne	1649c <__mempcpy_chk@plt+0x54b8>
   163ec:	cmn	r0, #1
   163f0:	ble	16418 <__mempcpy_chk@plt+0x5434>
   163f4:	cmp	r0, #0
   163f8:	beq	16464 <__mempcpy_chk@plt+0x5480>
   163fc:	cmn	r7, #1
   16400:	ble	1643c <__mempcpy_chk@plt+0x5458>
   16404:	mvn	r1, #-2147483648	; 0x80000000
   16408:	udiv	r1, r1, r0
   1640c:	cmp	r1, r7
   16410:	bge	16464 <__mempcpy_chk@plt+0x5480>
   16414:	b	1649c <__mempcpy_chk@plt+0x54b8>
   16418:	cmn	r7, #1
   1641c:	ble	16454 <__mempcpy_chk@plt+0x5470>
   16420:	cmn	r0, #1
   16424:	beq	16464 <__mempcpy_chk@plt+0x5480>
   16428:	mov	r1, #-2147483648	; 0x80000000
   1642c:	sdiv	r1, r1, r0
   16430:	cmp	r1, r7
   16434:	bge	16464 <__mempcpy_chk@plt+0x5480>
   16438:	b	1649c <__mempcpy_chk@plt+0x54b8>
   1643c:	beq	16464 <__mempcpy_chk@plt+0x5480>
   16440:	mov	r1, #-2147483648	; 0x80000000
   16444:	sdiv	r1, r1, r7
   16448:	cmp	r1, r0
   1644c:	bge	16464 <__mempcpy_chk@plt+0x5480>
   16450:	b	1649c <__mempcpy_chk@plt+0x54b8>
   16454:	mvn	r1, #-2147483648	; 0x80000000
   16458:	sdiv	r1, r1, r0
   1645c:	cmp	r7, r1
   16460:	blt	1649c <__mempcpy_chk@plt+0x54b8>
   16464:	mul	r6, r7, r0
   16468:	mov	r0, r5
   1646c:	mov	r1, r6
   16470:	bl	166ac <__mempcpy_chk@plt+0x56c8>
   16474:	cmp	r6, #0
   16478:	movwne	r6, #1
   1647c:	cmp	r0, #0
   16480:	bne	16494 <__mempcpy_chk@plt+0x54b0>
   16484:	clz	r1, r5
   16488:	lsr	r1, r1, #5
   1648c:	orrs	r1, r1, r6
   16490:	bne	1649c <__mempcpy_chk@plt+0x54b8>
   16494:	str	r7, [r8]
   16498:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1649c:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   164a0:	push	{fp, lr}
   164a4:	mov	fp, sp
   164a8:	mov	r1, #1
   164ac:	bl	16628 <__mempcpy_chk@plt+0x5644>
   164b0:	cmp	r0, #0
   164b4:	popne	{fp, pc}
   164b8:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   164bc:	push	{fp, lr}
   164c0:	mov	fp, sp
   164c4:	bl	16628 <__mempcpy_chk@plt+0x5644>
   164c8:	cmp	r0, #0
   164cc:	popne	{fp, pc}
   164d0:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   164d4:	push	{fp, lr}
   164d8:	mov	fp, sp
   164dc:	mov	r1, #1
   164e0:	bl	16628 <__mempcpy_chk@plt+0x5644>
   164e4:	cmp	r0, #0
   164e8:	popne	{fp, pc}
   164ec:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   164f0:	push	{fp, lr}
   164f4:	mov	fp, sp
   164f8:	bl	16628 <__mempcpy_chk@plt+0x5644>
   164fc:	cmp	r0, #0
   16500:	popne	{fp, pc}
   16504:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   16508:	push	{r4, r5, fp, lr}
   1650c:	add	fp, sp, #8
   16510:	mov	r5, r0
   16514:	mov	r0, r1
   16518:	mov	r4, r1
   1651c:	bl	1667c <__mempcpy_chk@plt+0x5698>
   16520:	cmp	r0, #0
   16524:	beq	16538 <__mempcpy_chk@plt+0x5554>
   16528:	mov	r1, r5
   1652c:	mov	r2, r4
   16530:	pop	{r4, r5, fp, lr}
   16534:	b	10df8 <memcpy@plt>
   16538:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   1653c:	push	{r4, r5, fp, lr}
   16540:	add	fp, sp, #8
   16544:	mov	r5, r0
   16548:	mov	r0, r1
   1654c:	mov	r4, r1
   16550:	bl	1667c <__mempcpy_chk@plt+0x5698>
   16554:	cmp	r0, #0
   16558:	beq	1656c <__mempcpy_chk@plt+0x5588>
   1655c:	mov	r1, r5
   16560:	mov	r2, r4
   16564:	pop	{r4, r5, fp, lr}
   16568:	b	10df8 <memcpy@plt>
   1656c:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   16570:	push	{r4, r5, fp, lr}
   16574:	add	fp, sp, #8
   16578:	mov	r5, r0
   1657c:	add	r0, r1, #1
   16580:	mov	r4, r1
   16584:	bl	1667c <__mempcpy_chk@plt+0x5698>
   16588:	cmp	r0, #0
   1658c:	beq	165a8 <__mempcpy_chk@plt+0x55c4>
   16590:	mov	r1, #0
   16594:	mov	r2, r4
   16598:	strb	r1, [r0, r4]
   1659c:	mov	r1, r5
   165a0:	pop	{r4, r5, fp, lr}
   165a4:	b	10df8 <memcpy@plt>
   165a8:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   165ac:	push	{r4, r5, fp, lr}
   165b0:	add	fp, sp, #8
   165b4:	mov	r4, r0
   165b8:	bl	10f0c <strlen@plt>
   165bc:	add	r5, r0, #1
   165c0:	mov	r0, r5
   165c4:	bl	1667c <__mempcpy_chk@plt+0x5698>
   165c8:	cmp	r0, #0
   165cc:	beq	165e0 <__mempcpy_chk@plt+0x55fc>
   165d0:	mov	r1, r4
   165d4:	mov	r2, r5
   165d8:	pop	{r4, r5, fp, lr}
   165dc:	b	10df8 <memcpy@plt>
   165e0:	bl	165e4 <__mempcpy_chk@plt+0x5600>
   165e4:	push	{fp, lr}
   165e8:	mov	fp, sp
   165ec:	movw	r0, #33004	; 0x80ec
   165f0:	movw	r1, #31152	; 0x79b0
   165f4:	mov	r2, #5
   165f8:	movt	r0, #2
   165fc:	movt	r1, #1
   16600:	ldr	r4, [r0]
   16604:	mov	r0, #0
   16608:	bl	10e10 <dcgettext@plt>
   1660c:	movw	r2, #29985	; 0x7521
   16610:	mov	r3, r0
   16614:	mov	r0, r4
   16618:	mov	r1, #0
   1661c:	movt	r2, #1
   16620:	bl	10e94 <error@plt>
   16624:	bl	10fcc <abort@plt>
   16628:	clz	r2, r1
   1662c:	clz	r3, r0
   16630:	lsr	r2, r2, #5
   16634:	lsr	r3, r3, #5
   16638:	orrs	r2, r3, r2
   1663c:	movwne	r1, #1
   16640:	movwne	r0, #1
   16644:	cmp	r1, #0
   16648:	beq	16678 <__mempcpy_chk@plt+0x5694>
   1664c:	mvn	r2, #-2147483648	; 0x80000000
   16650:	udiv	r2, r2, r1
   16654:	cmp	r2, r0
   16658:	bcs	16678 <__mempcpy_chk@plt+0x5694>
   1665c:	push	{fp, lr}
   16660:	mov	fp, sp
   16664:	bl	10f18 <__errno_location@plt>
   16668:	mov	r1, #12
   1666c:	str	r1, [r0]
   16670:	mov	r0, #0
   16674:	pop	{fp, pc}
   16678:	b	10d8c <calloc@plt>
   1667c:	cmp	r0, #0
   16680:	movweq	r0, #1
   16684:	cmn	r0, #1
   16688:	ble	16690 <__mempcpy_chk@plt+0x56ac>
   1668c:	b	10ea0 <malloc@plt>
   16690:	push	{fp, lr}
   16694:	mov	fp, sp
   16698:	bl	10f18 <__errno_location@plt>
   1669c:	mov	r1, #12
   166a0:	str	r1, [r0]
   166a4:	mov	r0, #0
   166a8:	pop	{fp, pc}
   166ac:	push	{fp, lr}
   166b0:	mov	fp, sp
   166b4:	cmp	r0, #0
   166b8:	beq	166d4 <__mempcpy_chk@plt+0x56f0>
   166bc:	cmp	r1, #0
   166c0:	beq	166e0 <__mempcpy_chk@plt+0x56fc>
   166c4:	cmn	r1, #1
   166c8:	ble	166ec <__mempcpy_chk@plt+0x5708>
   166cc:	pop	{fp, lr}
   166d0:	b	10e1c <realloc@plt>
   166d4:	mov	r0, r1
   166d8:	pop	{fp, lr}
   166dc:	b	1667c <__mempcpy_chk@plt+0x5698>
   166e0:	bl	1233c <__mempcpy_chk@plt+0x1358>
   166e4:	mov	r0, #0
   166e8:	pop	{fp, pc}
   166ec:	bl	10f18 <__errno_location@plt>
   166f0:	mov	r1, #12
   166f4:	str	r1, [r0]
   166f8:	mov	r0, #0
   166fc:	pop	{fp, pc}
   16700:	push	{r4, r5, r6, sl, fp, lr}
   16704:	add	fp, sp, #16
   16708:	mov	r4, r0
   1670c:	bl	10e7c <__fpending@plt>
   16710:	ldr	r6, [r4]
   16714:	mov	r5, r0
   16718:	mov	r0, r4
   1671c:	bl	16784 <__mempcpy_chk@plt+0x57a0>
   16720:	tst	r6, #32
   16724:	bne	1675c <__mempcpy_chk@plt+0x5778>
   16728:	cmp	r0, #0
   1672c:	mov	r4, r0
   16730:	mvnne	r4, #0
   16734:	cmp	r5, #0
   16738:	bne	16768 <__mempcpy_chk@plt+0x5784>
   1673c:	cmp	r0, #0
   16740:	beq	16768 <__mempcpy_chk@plt+0x5784>
   16744:	bl	10f18 <__errno_location@plt>
   16748:	ldr	r0, [r0]
   1674c:	subs	r4, r0, #9
   16750:	mvnne	r4, #0
   16754:	mov	r0, r4
   16758:	pop	{r4, r5, r6, sl, fp, pc}
   1675c:	mvn	r4, #0
   16760:	cmp	r0, #0
   16764:	beq	16770 <__mempcpy_chk@plt+0x578c>
   16768:	mov	r0, r4
   1676c:	pop	{r4, r5, r6, sl, fp, pc}
   16770:	bl	10f18 <__errno_location@plt>
   16774:	mov	r1, #0
   16778:	str	r1, [r0]
   1677c:	mov	r0, r4
   16780:	pop	{r4, r5, r6, sl, fp, pc}
   16784:	push	{r4, r5, r6, sl, fp, lr}
   16788:	add	fp, sp, #16
   1678c:	sub	sp, sp, #8
   16790:	mov	r4, r0
   16794:	bl	10f48 <fileno@plt>
   16798:	cmn	r0, #1
   1679c:	ble	16810 <__mempcpy_chk@plt+0x582c>
   167a0:	mov	r0, r4
   167a4:	bl	10eb8 <__freading@plt>
   167a8:	cmp	r0, #0
   167ac:	beq	167d8 <__mempcpy_chk@plt+0x57f4>
   167b0:	mov	r0, r4
   167b4:	bl	10f48 <fileno@plt>
   167b8:	mov	r1, #1
   167bc:	mov	r2, #0
   167c0:	mov	r3, #0
   167c4:	str	r1, [sp]
   167c8:	bl	10e64 <lseek64@plt>
   167cc:	and	r0, r0, r1
   167d0:	cmn	r0, #1
   167d4:	beq	16810 <__mempcpy_chk@plt+0x582c>
   167d8:	mov	r0, r4
   167dc:	bl	16820 <__mempcpy_chk@plt+0x583c>
   167e0:	cmp	r0, #0
   167e4:	beq	16810 <__mempcpy_chk@plt+0x582c>
   167e8:	bl	10f18 <__errno_location@plt>
   167ec:	ldr	r6, [r0]
   167f0:	mov	r5, r0
   167f4:	mov	r0, r4
   167f8:	bl	10f60 <fclose@plt>
   167fc:	cmp	r6, #0
   16800:	strne	r6, [r5]
   16804:	mvnne	r0, #0
   16808:	sub	sp, fp, #16
   1680c:	pop	{r4, r5, r6, sl, fp, pc}
   16810:	mov	r0, r4
   16814:	sub	sp, fp, #16
   16818:	pop	{r4, r5, r6, sl, fp, lr}
   1681c:	b	10f60 <fclose@plt>
   16820:	push	{r4, sl, fp, lr}
   16824:	add	fp, sp, #8
   16828:	sub	sp, sp, #8
   1682c:	mov	r4, r0
   16830:	cmp	r0, #0
   16834:	beq	1686c <__mempcpy_chk@plt+0x5888>
   16838:	mov	r0, r4
   1683c:	bl	10eb8 <__freading@plt>
   16840:	cmp	r0, #0
   16844:	beq	1686c <__mempcpy_chk@plt+0x5888>
   16848:	ldrb	r0, [r4, #1]
   1684c:	tst	r0, #1
   16850:	beq	1686c <__mempcpy_chk@plt+0x5888>
   16854:	mov	r0, #1
   16858:	mov	r2, #0
   1685c:	mov	r3, #0
   16860:	str	r0, [sp]
   16864:	mov	r0, r4
   16868:	bl	1687c <__mempcpy_chk@plt+0x5898>
   1686c:	mov	r0, r4
   16870:	sub	sp, fp, #8
   16874:	pop	{r4, sl, fp, lr}
   16878:	b	10dbc <fflush@plt>
   1687c:	push	{r4, r5, r6, r7, fp, lr}
   16880:	add	fp, sp, #16
   16884:	sub	sp, sp, #8
   16888:	mov	r4, r0
   1688c:	ldr	r0, [r0, #4]
   16890:	mov	r5, r3
   16894:	mov	r6, r2
   16898:	ldr	r1, [r4, #8]
   1689c:	cmp	r1, r0
   168a0:	bne	168bc <__mempcpy_chk@plt+0x58d8>
   168a4:	ldrd	r0, [r4, #16]
   168a8:	cmp	r1, r0
   168ac:	bne	168bc <__mempcpy_chk@plt+0x58d8>
   168b0:	ldr	r0, [r4, #36]	; 0x24
   168b4:	cmp	r0, #0
   168b8:	beq	168d4 <__mempcpy_chk@plt+0x58f0>
   168bc:	mov	r0, r4
   168c0:	mov	r2, r6
   168c4:	mov	r3, r5
   168c8:	sub	sp, fp, #16
   168cc:	pop	{r4, r5, r6, r7, fp, lr}
   168d0:	b	10f6c <fseeko64@plt>
   168d4:	ldr	r7, [fp, #8]
   168d8:	mov	r0, r4
   168dc:	bl	10f48 <fileno@plt>
   168e0:	mov	r2, r6
   168e4:	mov	r3, r5
   168e8:	str	r7, [sp]
   168ec:	bl	10e64 <lseek64@plt>
   168f0:	and	r2, r0, r1
   168f4:	cmn	r2, #1
   168f8:	beq	16918 <__mempcpy_chk@plt+0x5934>
   168fc:	strd	r0, [r4, #80]	; 0x50
   16900:	ldr	r0, [r4]
   16904:	bic	r0, r0, #16
   16908:	str	r0, [r4]
   1690c:	mov	r0, #0
   16910:	sub	sp, fp, #16
   16914:	pop	{r4, r5, r6, r7, fp, pc}
   16918:	mvn	r0, #0
   1691c:	sub	sp, fp, #16
   16920:	pop	{r4, r5, r6, r7, fp, pc}
   16924:	ldrb	r2, [r0]
   16928:	cmp	r2, #0
   1692c:	beq	16958 <__mempcpy_chk@plt+0x5974>
   16930:	add	r3, r0, #1
   16934:	mov	r0, #0
   16938:	ror	r0, r0, #23
   1693c:	uxtab	r0, r0, r2
   16940:	ldrb	r2, [r3], #1
   16944:	cmp	r2, #0
   16948:	bne	16938 <__mempcpy_chk@plt+0x5954>
   1694c:	udiv	r2, r0, r1
   16950:	mls	r0, r2, r1, r0
   16954:	bx	lr
   16958:	mov	r0, #0
   1695c:	udiv	r2, r0, r1
   16960:	mls	r0, r2, r1, r0
   16964:	bx	lr
   16968:	push	{fp, lr}
   1696c:	mov	fp, sp
   16970:	mov	r0, #14
   16974:	bl	10f9c <nl_langinfo@plt>
   16978:	movw	r1, #28105	; 0x6dc9
   1697c:	cmp	r0, #0
   16980:	movt	r1, #1
   16984:	movne	r1, r0
   16988:	movw	r0, #31169	; 0x79c1
   1698c:	ldrb	r2, [r1]
   16990:	movt	r0, #1
   16994:	cmp	r2, #0
   16998:	movne	r0, r1
   1699c:	pop	{fp, pc}
   169a0:	push	{r4, r5, r6, r7, fp, lr}
   169a4:	add	fp, sp, #16
   169a8:	sub	sp, sp, #8
   169ac:	cmp	r0, #0
   169b0:	add	r5, sp, #4
   169b4:	mov	r7, r2
   169b8:	mov	r4, r1
   169bc:	movne	r5, r0
   169c0:	mov	r0, r5
   169c4:	bl	10e88 <mbrtowc@plt>
   169c8:	mov	r6, r0
   169cc:	cmp	r7, #0
   169d0:	beq	169f8 <__mempcpy_chk@plt+0x5a14>
   169d4:	cmn	r6, #2
   169d8:	bcc	169f8 <__mempcpy_chk@plt+0x5a14>
   169dc:	mov	r0, #0
   169e0:	bl	16a40 <__mempcpy_chk@plt+0x5a5c>
   169e4:	cmp	r0, #0
   169e8:	bne	169f8 <__mempcpy_chk@plt+0x5a14>
   169ec:	ldrb	r0, [r4]
   169f0:	mov	r6, #1
   169f4:	str	r0, [r5]
   169f8:	mov	r0, r6
   169fc:	sub	sp, fp, #16
   16a00:	pop	{r4, r5, r6, r7, fp, pc}
   16a04:	cmp	r2, #0
   16a08:	beq	16a38 <__mempcpy_chk@plt+0x5a54>
   16a0c:	mvn	r3, #0
   16a10:	udiv	r3, r3, r2
   16a14:	cmp	r3, r1
   16a18:	bcs	16a38 <__mempcpy_chk@plt+0x5a54>
   16a1c:	push	{fp, lr}
   16a20:	mov	fp, sp
   16a24:	bl	10f18 <__errno_location@plt>
   16a28:	mov	r1, #12
   16a2c:	str	r1, [r0]
   16a30:	mov	r0, #0
   16a34:	pop	{fp, pc}
   16a38:	mul	r1, r2, r1
   16a3c:	b	166ac <__mempcpy_chk@plt+0x56c8>
   16a40:	push	{r4, sl, fp, lr}
   16a44:	add	fp, sp, #8
   16a48:	sub	sp, sp, #264	; 0x108
   16a4c:	add	r1, sp, #7
   16a50:	movw	r2, #257	; 0x101
   16a54:	bl	16aac <__mempcpy_chk@plt+0x5ac8>
   16a58:	mov	r4, #0
   16a5c:	cmp	r0, #0
   16a60:	bne	16aa0 <__mempcpy_chk@plt+0x5abc>
   16a64:	movw	r1, #31175	; 0x79c7
   16a68:	add	r0, sp, #7
   16a6c:	mov	r2, #2
   16a70:	movt	r1, #1
   16a74:	bl	10f00 <bcmp@plt>
   16a78:	cmp	r0, #0
   16a7c:	beq	16aa0 <__mempcpy_chk@plt+0x5abc>
   16a80:	movw	r1, #31177	; 0x79c9
   16a84:	add	r0, sp, #7
   16a88:	mov	r2, #6
   16a8c:	movt	r1, #1
   16a90:	bl	10f00 <bcmp@plt>
   16a94:	cmp	r0, #0
   16a98:	mov	r4, r0
   16a9c:	movwne	r4, #1
   16aa0:	mov	r0, r4
   16aa4:	sub	sp, fp, #8
   16aa8:	pop	{r4, sl, fp, pc}
   16aac:	push	{r4, r5, r6, r7, fp, lr}
   16ab0:	add	fp, sp, #16
   16ab4:	mov	r4, r1
   16ab8:	mov	r1, #0
   16abc:	mov	r6, r2
   16ac0:	bl	10f84 <setlocale@plt>
   16ac4:	cmp	r0, #0
   16ac8:	beq	16af8 <__mempcpy_chk@plt+0x5b14>
   16acc:	mov	r7, r0
   16ad0:	bl	10f0c <strlen@plt>
   16ad4:	cmp	r0, r6
   16ad8:	bcs	16b14 <__mempcpy_chk@plt+0x5b30>
   16adc:	add	r2, r0, #1
   16ae0:	mov	r0, r4
   16ae4:	mov	r1, r7
   16ae8:	bl	10df8 <memcpy@plt>
   16aec:	mov	r5, #0
   16af0:	mov	r0, r5
   16af4:	pop	{r4, r5, r6, r7, fp, pc}
   16af8:	mov	r5, #22
   16afc:	cmp	r6, #0
   16b00:	beq	16b3c <__mempcpy_chk@plt+0x5b58>
   16b04:	mov	r0, #0
   16b08:	strb	r0, [r4]
   16b0c:	mov	r0, r5
   16b10:	pop	{r4, r5, r6, r7, fp, pc}
   16b14:	mov	r5, #34	; 0x22
   16b18:	cmp	r6, #0
   16b1c:	beq	16b3c <__mempcpy_chk@plt+0x5b58>
   16b20:	sub	r6, r6, #1
   16b24:	mov	r0, r4
   16b28:	mov	r1, r7
   16b2c:	mov	r2, r6
   16b30:	bl	10df8 <memcpy@plt>
   16b34:	mov	r0, #0
   16b38:	strb	r0, [r4, r6]
   16b3c:	mov	r0, r5
   16b40:	pop	{r4, r5, r6, r7, fp, pc}
   16b44:	mov	r1, #0
   16b48:	b	10f84 <setlocale@plt>
   16b4c:	cmp	r3, #0
   16b50:	cmpeq	r2, #0
   16b54:	bne	16b6c <__mempcpy_chk@plt+0x5b88>
   16b58:	cmp	r1, #0
   16b5c:	cmpeq	r0, #0
   16b60:	mvnne	r1, #0
   16b64:	mvnne	r0, #0
   16b68:	b	16b88 <__mempcpy_chk@plt+0x5ba4>
   16b6c:	sub	sp, sp, #8
   16b70:	push	{sp, lr}
   16b74:	bl	16b98 <__mempcpy_chk@plt+0x5bb4>
   16b78:	ldr	lr, [sp, #4]
   16b7c:	add	sp, sp, #8
   16b80:	pop	{r2, r3}
   16b84:	bx	lr
   16b88:	push	{r1, lr}
   16b8c:	mov	r0, #8
   16b90:	bl	10da4 <raise@plt>
   16b94:	pop	{r1, pc}
   16b98:	cmp	r1, r3
   16b9c:	cmpeq	r0, r2
   16ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ba4:	mov	r4, r0
   16ba8:	movcc	r0, #0
   16bac:	mov	r5, r1
   16bb0:	ldr	lr, [sp, #36]	; 0x24
   16bb4:	movcc	r1, r0
   16bb8:	bcc	16cb4 <__mempcpy_chk@plt+0x5cd0>
   16bbc:	cmp	r3, #0
   16bc0:	clzeq	ip, r2
   16bc4:	clzne	ip, r3
   16bc8:	addeq	ip, ip, #32
   16bcc:	cmp	r5, #0
   16bd0:	clzeq	r1, r4
   16bd4:	addeq	r1, r1, #32
   16bd8:	clzne	r1, r5
   16bdc:	sub	ip, ip, r1
   16be0:	sub	sl, ip, #32
   16be4:	lsl	r9, r3, ip
   16be8:	rsb	fp, ip, #32
   16bec:	orr	r9, r9, r2, lsl sl
   16bf0:	orr	r9, r9, r2, lsr fp
   16bf4:	lsl	r8, r2, ip
   16bf8:	cmp	r5, r9
   16bfc:	cmpeq	r4, r8
   16c00:	movcc	r0, #0
   16c04:	movcc	r1, r0
   16c08:	bcc	16c24 <__mempcpy_chk@plt+0x5c40>
   16c0c:	mov	r0, #1
   16c10:	subs	r4, r4, r8
   16c14:	lsl	r1, r0, sl
   16c18:	orr	r1, r1, r0, lsr fp
   16c1c:	lsl	r0, r0, ip
   16c20:	sbc	r5, r5, r9
   16c24:	cmp	ip, #0
   16c28:	beq	16cb4 <__mempcpy_chk@plt+0x5cd0>
   16c2c:	lsr	r6, r8, #1
   16c30:	orr	r6, r6, r9, lsl #31
   16c34:	lsr	r7, r9, #1
   16c38:	mov	r2, ip
   16c3c:	b	16c60 <__mempcpy_chk@plt+0x5c7c>
   16c40:	subs	r3, r4, r6
   16c44:	sbc	r8, r5, r7
   16c48:	adds	r3, r3, r3
   16c4c:	adc	r8, r8, r8
   16c50:	adds	r4, r3, #1
   16c54:	adc	r5, r8, #0
   16c58:	subs	r2, r2, #1
   16c5c:	beq	16c7c <__mempcpy_chk@plt+0x5c98>
   16c60:	cmp	r5, r7
   16c64:	cmpeq	r4, r6
   16c68:	bcs	16c40 <__mempcpy_chk@plt+0x5c5c>
   16c6c:	adds	r4, r4, r4
   16c70:	adc	r5, r5, r5
   16c74:	subs	r2, r2, #1
   16c78:	bne	16c60 <__mempcpy_chk@plt+0x5c7c>
   16c7c:	lsr	r3, r4, ip
   16c80:	orr	r3, r3, r5, lsl fp
   16c84:	lsr	r2, r5, ip
   16c88:	orr	r3, r3, r5, lsr sl
   16c8c:	adds	r0, r0, r4
   16c90:	mov	r4, r3
   16c94:	lsl	r3, r2, ip
   16c98:	orr	r3, r3, r4, lsl sl
   16c9c:	lsl	ip, r4, ip
   16ca0:	orr	r3, r3, r4, lsr fp
   16ca4:	adc	r1, r1, r5
   16ca8:	subs	r0, r0, ip
   16cac:	mov	r5, r2
   16cb0:	sbc	r1, r1, r3
   16cb4:	cmp	lr, #0
   16cb8:	strdne	r4, [lr]
   16cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16cc4:	mov	r7, r0
   16cc8:	ldr	r6, [pc, #72]	; 16d18 <__mempcpy_chk@plt+0x5d34>
   16ccc:	ldr	r5, [pc, #72]	; 16d1c <__mempcpy_chk@plt+0x5d38>
   16cd0:	add	r6, pc, r6
   16cd4:	add	r5, pc, r5
   16cd8:	sub	r6, r6, r5
   16cdc:	mov	r8, r1
   16ce0:	mov	r9, r2
   16ce4:	bl	10d6c <calloc@plt-0x20>
   16ce8:	asrs	r6, r6, #2
   16cec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16cf0:	mov	r4, #0
   16cf4:	add	r4, r4, #1
   16cf8:	ldr	r3, [r5], #4
   16cfc:	mov	r2, r9
   16d00:	mov	r1, r8
   16d04:	mov	r0, r7
   16d08:	blx	r3
   16d0c:	cmp	r6, r4
   16d10:	bne	16cf4 <__mempcpy_chk@plt+0x5d10>
   16d14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d18:	andeq	r1, r1, r4, lsr r2
   16d1c:	andeq	r1, r1, ip, lsr #4
   16d20:	bx	lr
   16d24:	ldr	r3, [pc, #12]	; 16d38 <__mempcpy_chk@plt+0x5d54>
   16d28:	mov	r1, #0
   16d2c:	add	r3, pc, r3
   16d30:	ldr	r2, [r3]
   16d34:	b	10f24 <__cxa_atexit@plt>
   16d38:			; <UNDEFINED> instruction: 0x000113b0

Disassembly of section .fini:

00016d3c <.fini>:
   16d3c:	push	{r3, lr}
   16d40:	pop	{r3, pc}
