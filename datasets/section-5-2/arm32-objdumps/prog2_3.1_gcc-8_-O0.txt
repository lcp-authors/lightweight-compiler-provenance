
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a24 <.init>:
   10a24:	push	{r3, lr}
   10a28:	bl	10b70 <_start@@Base+0x3c>
   10a2c:	pop	{r3, pc}

Disassembly of section .plt:

00010a30 <calloc@plt-0x14>:
   10a30:	push	{lr}		; (str lr, [sp, #-4]!)
   10a34:	ldr	lr, [pc, #4]	; 10a40 <calloc@plt-0x4>
   10a38:	add	lr, pc, lr
   10a3c:	ldr	pc, [lr, #8]!
   10a40:	andeq	r1, r1, r0, asr #11

00010a44 <calloc@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a50 <strstr@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a5c <strcmp@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a68 <printf@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a74 <fopen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a80 <free@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1432]!	; 0x598

00010a8c <fgets@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1424]!	; 0x590

00010a98 <time@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1416]!	; 0x588

00010aa4 <realloc@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1408]!	; 0x580

00010ab0 <strcat@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1400]!	; 0x578

00010abc <strcpy@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1392]!	; 0x570

00010ac8 <puts@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1384]!	; 0x568

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1376]!	; 0x560

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1368]!	; 0x558

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1360]!	; 0x550

00010af8 <strlen@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1352]!	; 0x548

00010b04 <srand@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1344]!	; 0x540

00010b10 <rand@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1336]!	; 0x538

00010b1c <fclose@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1328]!	; 0x530

00010b28 <abort@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1320]!	; 0x528

Disassembly of section .text:

00010b34 <_start@@Base>:
   10b34:	mov	fp, #0
   10b38:	mov	lr, #0
   10b3c:	pop	{r1}		; (ldr r1, [sp], #4)
   10b40:	mov	r2, sp
   10b44:	push	{r2}		; (str r2, [sp, #-4]!)
   10b48:	push	{r0}		; (str r0, [sp, #-4]!)
   10b4c:	ldr	ip, [pc, #16]	; 10b64 <_start@@Base+0x30>
   10b50:	push	{ip}		; (str ip, [sp, #-4]!)
   10b54:	ldr	r0, [pc, #12]	; 10b68 <_start@@Base+0x34>
   10b58:	ldr	r3, [pc, #12]	; 10b6c <_start@@Base+0x38>
   10b5c:	bl	10ae0 <__libc_start_main@plt>
   10b60:	bl	10b28 <abort@plt>
   10b64:	andeq	r1, r1, r4, asr #24
   10b68:	andeq	r0, r1, r4, lsr #24
   10b6c:	andeq	r1, r1, r4, ror #23
   10b70:	ldr	r3, [pc, #20]	; 10b8c <_start@@Base+0x58>
   10b74:	ldr	r2, [pc, #20]	; 10b90 <_start@@Base+0x5c>
   10b78:	add	r3, pc, r3
   10b7c:	ldr	r2, [r3, r2]
   10b80:	cmp	r2, #0
   10b84:	bxeq	lr
   10b88:	b	10aec <__gmon_start__@plt>
   10b8c:	andeq	r1, r1, r0, lsl #9
   10b90:	andeq	r0, r0, ip, asr r0
   10b94:	ldr	r0, [pc, #24]	; 10bb4 <_start@@Base+0x80>
   10b98:	ldr	r3, [pc, #24]	; 10bb8 <_start@@Base+0x84>
   10b9c:	cmp	r3, r0
   10ba0:	bxeq	lr
   10ba4:	ldr	r3, [pc, #16]	; 10bbc <_start@@Base+0x88>
   10ba8:	cmp	r3, #0
   10bac:	bxeq	lr
   10bb0:	bx	r3
   10bb4:	andeq	r2, r2, r8, rrx
   10bb8:	andeq	r2, r2, r8, rrx
   10bbc:	andeq	r0, r0, r0
   10bc0:	ldr	r0, [pc, #36]	; 10bec <_start@@Base+0xb8>
   10bc4:	ldr	r1, [pc, #36]	; 10bf0 <_start@@Base+0xbc>
   10bc8:	sub	r1, r1, r0
   10bcc:	asr	r1, r1, #2
   10bd0:	add	r1, r1, r1, lsr #31
   10bd4:	asrs	r1, r1, #1
   10bd8:	bxeq	lr
   10bdc:	ldr	r3, [pc, #16]	; 10bf4 <_start@@Base+0xc0>
   10be0:	cmp	r3, #0
   10be4:	bxeq	lr
   10be8:	bx	r3
   10bec:	andeq	r2, r2, r8, rrx
   10bf0:	andeq	r2, r2, r8, rrx
   10bf4:	andeq	r0, r0, r0
   10bf8:	push	{r4, lr}
   10bfc:	ldr	r4, [pc, #24]	; 10c1c <_start@@Base+0xe8>
   10c00:	ldrb	r3, [r4]
   10c04:	cmp	r3, #0
   10c08:	popne	{r4, pc}
   10c0c:	bl	10b94 <_start@@Base+0x60>
   10c10:	mov	r3, #1
   10c14:	strb	r3, [r4]
   10c18:	pop	{r4, pc}
   10c1c:	andeq	r2, r2, r8, rrx
   10c20:	b	10bc0 <_start@@Base+0x8c>

00010c24 <main@@Base>:
   10c24:	str	fp, [sp, #-8]!
   10c28:	str	lr, [sp, #4]
   10c2c:	add	fp, sp, #4
   10c30:	sub	sp, sp, #120	; 0x78
   10c34:	mov	r3, #0
   10c38:	str	r3, [fp, #-8]
   10c3c:	mov	r3, #0
   10c40:	str	r3, [fp, #-12]
   10c44:	bl	11148 <vetor_novo@@Base>
   10c48:	str	r0, [fp, #-16]
   10c4c:	ldr	r3, [pc, #448]	; 10e14 <main@@Base+0x1f0>
   10c50:	add	r3, pc, r3
   10c54:	mov	r1, r3
   10c58:	ldr	r3, [pc, #440]	; 10e18 <main@@Base+0x1f4>
   10c5c:	add	r3, pc, r3
   10c60:	mov	r0, r3
   10c64:	bl	10a74 <fopen@plt>
   10c68:	str	r0, [fp, #-20]	; 0xffffffec
   10c6c:	b	10cd8 <main@@Base+0xb4>
   10c70:	sub	r3, fp, #124	; 0x7c
   10c74:	mov	r0, r3
   10c78:	bl	10af8 <strlen@plt>
   10c7c:	mov	r3, r0
   10c80:	sub	r3, r3, #1
   10c84:	sub	r2, fp, #4
   10c88:	add	r3, r2, r3
   10c8c:	mov	r2, #0
   10c90:	strb	r2, [r3, #-120]	; 0xffffff88
   10c94:	sub	r3, fp, #124	; 0x7c
   10c98:	ldr	r2, [fp, #-8]
   10c9c:	mov	r1, r3
   10ca0:	ldr	r0, [fp, #-16]
   10ca4:	bl	11438 <vetor_insere@@Base>
   10ca8:	mov	r3, r0
   10cac:	cmn	r3, #1
   10cb0:	bne	10ccc <main@@Base+0xa8>
   10cb4:	ldr	r3, [pc, #352]	; 10e1c <main@@Base+0x1f8>
   10cb8:	add	r3, pc, r3
   10cbc:	mov	r0, r3
   10cc0:	bl	10ac8 <puts@plt>
   10cc4:	mvn	r3, #0
   10cc8:	b	10e00 <main@@Base+0x1dc>
   10ccc:	ldr	r3, [fp, #-8]
   10cd0:	add	r3, r3, #1
   10cd4:	str	r3, [fp, #-8]
   10cd8:	sub	r3, fp, #124	; 0x7c
   10cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   10ce0:	mov	r1, #100	; 0x64
   10ce4:	mov	r0, r3
   10ce8:	bl	10a8c <fgets@plt>
   10cec:	mov	r3, r0
   10cf0:	cmp	r3, #0
   10cf4:	bne	10c70 <main@@Base+0x4c>
   10cf8:	ldr	r1, [fp, #-8]
   10cfc:	ldr	r3, [pc, #284]	; 10e20 <main@@Base+0x1fc>
   10d00:	add	r3, pc, r3
   10d04:	mov	r0, r3
   10d08:	bl	10a68 <printf@plt>
   10d0c:	ldr	r0, [fp, #-16]
   10d10:	bl	10e40 <vetor_imprime@@Base>
   10d14:	ldr	r3, [pc, #264]	; 10e24 <main@@Base+0x200>
   10d18:	add	r3, pc, r3
   10d1c:	mov	r1, r3
   10d20:	ldr	r0, [fp, #-16]
   10d24:	bl	1172c <vetor_pesquisa@@Base>
   10d28:	mov	r3, r0
   10d2c:	mov	r1, r3
   10d30:	ldr	r3, [pc, #240]	; 10e28 <main@@Base+0x204>
   10d34:	add	r3, pc, r3
   10d38:	mov	r0, r3
   10d3c:	bl	10a68 <printf@plt>
   10d40:	ldr	r0, [fp, #-16]
   10d44:	bl	117d4 <vetor_ordena@@Base>
   10d48:	mov	r3, r0
   10d4c:	cmp	r3, #0
   10d50:	bne	10d60 <main@@Base+0x13c>
   10d54:	ldr	r0, [fp, #-16]
   10d58:	bl	10e40 <vetor_imprime@@Base>
   10d5c:	b	10d70 <main@@Base+0x14c>
   10d60:	ldr	r3, [pc, #196]	; 10e2c <main@@Base+0x208>
   10d64:	add	r3, pc, r3
   10d68:	mov	r0, r3
   10d6c:	bl	10ac8 <puts@plt>
   10d70:	ldr	r3, [pc, #184]	; 10e30 <main@@Base+0x20c>
   10d74:	add	r3, pc, r3
   10d78:	mov	r1, r3
   10d7c:	ldr	r0, [fp, #-16]
   10d80:	bl	10ec8 <vetor_num_ocorrencias@@Base>
   10d84:	mov	r3, r0
   10d88:	mov	r1, r3
   10d8c:	ldr	r3, [pc, #160]	; 10e34 <main@@Base+0x210>
   10d90:	add	r3, pc, r3
   10d94:	mov	r0, r3
   10d98:	bl	10a68 <printf@plt>
   10d9c:	ldr	r0, [fp, #-16]
   10da0:	bl	10f68 <vetor_remove_repetidas@@Base>
   10da4:	ldr	r3, [fp, #-16]
   10da8:	ldr	r3, [r3]
   10dac:	sub	r3, r3, #1
   10db0:	mov	r1, r3
   10db4:	ldr	r3, [pc, #124]	; 10e38 <main@@Base+0x214>
   10db8:	add	r3, pc, r3
   10dbc:	mov	r0, r3
   10dc0:	bl	10a68 <printf@plt>
   10dc4:	ldr	r3, [pc, #112]	; 10e3c <main@@Base+0x218>
   10dc8:	add	r3, pc, r3
   10dcc:	mov	r1, r3
   10dd0:	ldr	r0, [fp, #-16]
   10dd4:	bl	11074 <vetor_pesquisa_parcial@@Base>
   10dd8:	str	r0, [fp, #-24]	; 0xffffffe8
   10ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10de0:	bl	10e40 <vetor_imprime@@Base>
   10de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10de8:	bl	111b8 <vetor_apaga@@Base>
   10dec:	ldr	r0, [fp, #-16]
   10df0:	bl	111b8 <vetor_apaga@@Base>
   10df4:	ldr	r0, [fp, #-20]	; 0xffffffec
   10df8:	bl	10b1c <fclose@plt>
   10dfc:	mov	r3, #0
   10e00:	mov	r0, r3
   10e04:	sub	sp, fp, #4
   10e08:	ldr	fp, [sp]
   10e0c:	add	sp, sp, #4
   10e10:	pop	{pc}		; (ldr pc, [sp], #4)
   10e14:	strdeq	r0, [r0], -ip
   10e18:	strdeq	r0, [r0], -r4
   10e1c:			; <UNDEFINED> instruction: 0x00000fb0
   10e20:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   10e24:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   10e28:	andeq	r0, r0, r4, lsr #31
   10e2c:			; <UNDEFINED> instruction: 0x00000fbc
   10e30:	ldrdeq	r0, [r0], -r4
   10e34:	andeq	r0, r0, ip, asr #31
   10e38:	ldrdeq	r0, [r0], -ip
   10e3c:	andeq	r1, r0, ip

00010e40 <vetor_imprime@@Base>:
   10e40:	str	fp, [sp, #-8]!
   10e44:	str	lr, [sp, #4]
   10e48:	add	fp, sp, #4
   10e4c:	sub	sp, sp, #16
   10e50:	str	r0, [fp, #-16]
   10e54:	ldr	r3, [fp, #-16]
   10e58:	ldr	r3, [r3]
   10e5c:	str	r3, [fp, #-12]
   10e60:	mov	r3, #0
   10e64:	str	r3, [fp, #-8]
   10e68:	b	10ea0 <vetor_imprime@@Base+0x60>
   10e6c:	ldr	r1, [fp, #-8]
   10e70:	ldr	r0, [fp, #-16]
   10e74:	bl	113c8 <vetor_elemento@@Base>
   10e78:	mov	r3, r0
   10e7c:	mov	r2, r3
   10e80:	ldr	r1, [fp, #-8]
   10e84:	ldr	r3, [pc, #56]	; 10ec4 <vetor_imprime@@Base+0x84>
   10e88:	add	r3, pc, r3
   10e8c:	mov	r0, r3
   10e90:	bl	10a68 <printf@plt>
   10e94:	ldr	r3, [fp, #-8]
   10e98:	add	r3, r3, #1
   10e9c:	str	r3, [fp, #-8]
   10ea0:	ldr	r2, [fp, #-8]
   10ea4:	ldr	r3, [fp, #-12]
   10ea8:	cmp	r2, r3
   10eac:	blt	10e6c <vetor_imprime@@Base+0x2c>
   10eb0:	nop	{0}
   10eb4:	sub	sp, fp, #4
   10eb8:	ldr	fp, [sp]
   10ebc:	add	sp, sp, #4
   10ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ec4:	andeq	r0, r0, r4, asr pc

00010ec8 <vetor_num_ocorrencias@@Base>:
   10ec8:	str	fp, [sp, #-8]!
   10ecc:	str	lr, [sp, #4]
   10ed0:	add	fp, sp, #4
   10ed4:	sub	sp, sp, #24
   10ed8:	str	r0, [fp, #-24]	; 0xffffffe8
   10edc:	str	r1, [fp, #-28]	; 0xffffffe4
   10ee0:	mov	r3, #0
   10ee4:	str	r3, [fp, #-8]
   10ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10eec:	ldr	r3, [r3]
   10ef0:	str	r3, [fp, #-16]
   10ef4:	mov	r3, #0
   10ef8:	str	r3, [fp, #-12]
   10efc:	b	10f40 <vetor_num_ocorrencias@@Base+0x78>
   10f00:	ldr	r1, [fp, #-12]
   10f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f08:	bl	113c8 <vetor_elemento@@Base>
   10f0c:	mov	r3, r0
   10f10:	mov	r1, r3
   10f14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10f18:	bl	10a5c <strcmp@plt>
   10f1c:	mov	r3, r0
   10f20:	cmp	r3, #0
   10f24:	bne	10f34 <vetor_num_ocorrencias@@Base+0x6c>
   10f28:	ldr	r3, [fp, #-8]
   10f2c:	add	r3, r3, #1
   10f30:	str	r3, [fp, #-8]
   10f34:	ldr	r3, [fp, #-12]
   10f38:	add	r3, r3, #1
   10f3c:	str	r3, [fp, #-12]
   10f40:	ldr	r2, [fp, #-12]
   10f44:	ldr	r3, [fp, #-16]
   10f48:	cmp	r2, r3
   10f4c:	blt	10f00 <vetor_num_ocorrencias@@Base+0x38>
   10f50:	ldr	r3, [fp, #-8]
   10f54:	mov	r0, r3
   10f58:	sub	sp, fp, #4
   10f5c:	ldr	fp, [sp]
   10f60:	add	sp, sp, #4
   10f64:	pop	{pc}		; (ldr pc, [sp], #4)

00010f68 <vetor_remove_repetidas@@Base>:
   10f68:	str	fp, [sp, #-8]!
   10f6c:	str	lr, [sp, #4]
   10f70:	add	fp, sp, #4
   10f74:	sub	sp, sp, #120	; 0x78
   10f78:	str	r0, [fp, #-120]	; 0xffffff88
   10f7c:	mov	r3, #0
   10f80:	str	r3, [fp, #-8]
   10f84:	b	11048 <vetor_remove_repetidas@@Base+0xe0>
   10f88:	ldr	r1, [fp, #-8]
   10f8c:	ldr	r0, [fp, #-120]	; 0xffffff88
   10f90:	bl	113c8 <vetor_elemento@@Base>
   10f94:	mov	r2, r0
   10f98:	sub	r3, fp, #112	; 0x70
   10f9c:	mov	r1, r2
   10fa0:	mov	r0, r3
   10fa4:	bl	10abc <strcpy@plt>
   10fa8:	ldr	r3, [fp, #-8]
   10fac:	add	r3, r3, #1
   10fb0:	str	r3, [fp, #-12]
   10fb4:	b	11028 <vetor_remove_repetidas@@Base+0xc0>
   10fb8:	ldr	r1, [fp, #-12]
   10fbc:	ldr	r0, [fp, #-120]	; 0xffffff88
   10fc0:	bl	113c8 <vetor_elemento@@Base>
   10fc4:	mov	r2, r0
   10fc8:	sub	r3, fp, #112	; 0x70
   10fcc:	mov	r1, r2
   10fd0:	mov	r0, r3
   10fd4:	bl	10a5c <strcmp@plt>
   10fd8:	mov	r3, r0
   10fdc:	cmp	r3, #0
   10fe0:	bne	1101c <vetor_remove_repetidas@@Base+0xb4>
   10fe4:	ldr	r1, [fp, #-12]
   10fe8:	ldr	r0, [fp, #-120]	; 0xffffff88
   10fec:	bl	11630 <vetor_remove@@Base>
   10ff0:	mov	r3, r0
   10ff4:	cmn	r3, #1
   10ff8:	bne	11010 <vetor_remove_repetidas@@Base+0xa8>
   10ffc:	ldr	r3, [pc, #108]	; 11070 <vetor_remove_repetidas@@Base+0x108>
   11000:	add	r3, pc, r3
   11004:	mov	r0, r3
   11008:	bl	10ac8 <puts@plt>
   1100c:	b	1101c <vetor_remove_repetidas@@Base+0xb4>
   11010:	ldr	r3, [fp, #-12]
   11014:	sub	r3, r3, #1
   11018:	str	r3, [fp, #-12]
   1101c:	ldr	r3, [fp, #-12]
   11020:	add	r3, r3, #1
   11024:	str	r3, [fp, #-12]
   11028:	ldr	r3, [fp, #-120]	; 0xffffff88
   1102c:	ldr	r3, [r3]
   11030:	ldr	r2, [fp, #-12]
   11034:	cmp	r2, r3
   11038:	blt	10fb8 <vetor_remove_repetidas@@Base+0x50>
   1103c:	ldr	r3, [fp, #-8]
   11040:	add	r3, r3, #1
   11044:	str	r3, [fp, #-8]
   11048:	ldr	r3, [fp, #-120]	; 0xffffff88
   1104c:	ldr	r3, [r3]
   11050:	ldr	r2, [fp, #-8]
   11054:	cmp	r2, r3
   11058:	blt	10f88 <vetor_remove_repetidas@@Base+0x20>
   1105c:	nop	{0}
   11060:	sub	sp, fp, #4
   11064:	ldr	fp, [sp]
   11068:	add	sp, sp, #4
   1106c:	pop	{pc}		; (ldr pc, [sp], #4)
   11070:	andeq	r0, r0, ip, ror #27

00011074 <vetor_pesquisa_parcial@@Base>:
   11074:	str	fp, [sp, #-8]!
   11078:	str	lr, [sp, #4]
   1107c:	add	fp, sp, #4
   11080:	sub	sp, sp, #24
   11084:	str	r0, [fp, #-24]	; 0xffffffe8
   11088:	str	r1, [fp, #-28]	; 0xffffffe4
   1108c:	bl	11148 <vetor_novo@@Base>
   11090:	str	r0, [fp, #-12]
   11094:	mov	r3, #0
   11098:	str	r3, [fp, #-16]
   1109c:	mov	r3, #0
   110a0:	str	r3, [fp, #-8]
   110a4:	b	11118 <vetor_pesquisa_parcial@@Base+0xa4>
   110a8:	ldr	r1, [fp, #-8]
   110ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   110b0:	bl	113c8 <vetor_elemento@@Base>
   110b4:	mov	r3, r0
   110b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   110bc:	mov	r0, r3
   110c0:	bl	10a50 <strstr@plt>
   110c4:	mov	r3, r0
   110c8:	cmp	r3, #0
   110cc:	beq	1110c <vetor_pesquisa_parcial@@Base+0x98>
   110d0:	ldr	r1, [fp, #-8]
   110d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   110d8:	bl	113c8 <vetor_elemento@@Base>
   110dc:	mov	r3, r0
   110e0:	ldr	r2, [fp, #-16]
   110e4:	mov	r1, r3
   110e8:	ldr	r0, [fp, #-12]
   110ec:	bl	11438 <vetor_insere@@Base>
   110f0:	mov	r3, r0
   110f4:	cmn	r3, #1
   110f8:	bne	1110c <vetor_pesquisa_parcial@@Base+0x98>
   110fc:	ldr	r3, [pc, #64]	; 11144 <vetor_pesquisa_parcial@@Base+0xd0>
   11100:	add	r3, pc, r3
   11104:	mov	r0, r3
   11108:	bl	10ac8 <puts@plt>
   1110c:	ldr	r3, [fp, #-8]
   11110:	add	r3, r3, #1
   11114:	str	r3, [fp, #-8]
   11118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1111c:	ldr	r3, [r3]
   11120:	ldr	r2, [fp, #-8]
   11124:	cmp	r2, r3
   11128:	blt	110a8 <vetor_pesquisa_parcial@@Base+0x34>
   1112c:	ldr	r3, [fp, #-12]
   11130:	mov	r0, r3
   11134:	sub	sp, fp, #4
   11138:	ldr	fp, [sp]
   1113c:	add	sp, sp, #4
   11140:	pop	{pc}		; (ldr pc, [sp], #4)
   11144:	andeq	r0, r0, r8, lsl sp

00011148 <vetor_novo@@Base>:
   11148:	str	fp, [sp, #-8]!
   1114c:	str	lr, [sp, #4]
   11150:	add	fp, sp, #4
   11154:	sub	sp, sp, #8
   11158:	mov	r0, #12
   1115c:	bl	10ad4 <malloc@plt>
   11160:	mov	r3, r0
   11164:	str	r3, [fp, #-8]
   11168:	ldr	r3, [fp, #-8]
   1116c:	cmp	r3, #0
   11170:	bne	1117c <vetor_novo@@Base+0x34>
   11174:	mov	r3, #0
   11178:	b	111a4 <vetor_novo@@Base+0x5c>
   1117c:	ldr	r3, [fp, #-8]
   11180:	mov	r2, #0
   11184:	str	r2, [r3]
   11188:	ldr	r3, [fp, #-8]
   1118c:	mov	r2, #0
   11190:	str	r2, [r3, #4]
   11194:	ldr	r3, [fp, #-8]
   11198:	mov	r2, #0
   1119c:	str	r2, [r3, #8]
   111a0:	ldr	r3, [fp, #-8]
   111a4:	mov	r0, r3
   111a8:	sub	sp, fp, #4
   111ac:	ldr	fp, [sp]
   111b0:	add	sp, sp, #4
   111b4:	pop	{pc}		; (ldr pc, [sp], #4)

000111b8 <vetor_apaga@@Base>:
   111b8:	str	fp, [sp, #-8]!
   111bc:	str	lr, [sp, #4]
   111c0:	add	fp, sp, #4
   111c4:	sub	sp, sp, #16
   111c8:	str	r0, [fp, #-16]
   111cc:	ldr	r3, [fp, #-16]
   111d0:	cmp	r3, #0
   111d4:	beq	11240 <vetor_apaga@@Base+0x88>
   111d8:	mov	r3, #0
   111dc:	str	r3, [fp, #-8]
   111e0:	b	11210 <vetor_apaga@@Base+0x58>
   111e4:	ldr	r3, [fp, #-16]
   111e8:	ldr	r2, [r3, #8]
   111ec:	ldr	r3, [fp, #-8]
   111f0:	lsl	r3, r3, #2
   111f4:	add	r3, r2, r3
   111f8:	ldr	r3, [r3]
   111fc:	mov	r0, r3
   11200:	bl	10a80 <free@plt>
   11204:	ldr	r3, [fp, #-8]
   11208:	add	r3, r3, #1
   1120c:	str	r3, [fp, #-8]
   11210:	ldr	r3, [fp, #-16]
   11214:	ldr	r3, [r3]
   11218:	ldr	r2, [fp, #-8]
   1121c:	cmp	r2, r3
   11220:	blt	111e4 <vetor_apaga@@Base+0x2c>
   11224:	ldr	r3, [fp, #-16]
   11228:	ldr	r3, [r3, #8]
   1122c:	mov	r0, r3
   11230:	bl	10a80 <free@plt>
   11234:	ldr	r0, [fp, #-16]
   11238:	bl	10a80 <free@plt>
   1123c:	b	11244 <vetor_apaga@@Base+0x8c>
   11240:	nop	{0}
   11244:	sub	sp, fp, #4
   11248:	ldr	fp, [sp]
   1124c:	add	sp, sp, #4
   11250:	pop	{pc}		; (ldr pc, [sp], #4)

00011254 <vetor_atribui@@Base>:
   11254:	str	r4, [sp, #-12]!
   11258:	str	fp, [sp, #4]
   1125c:	str	lr, [sp, #8]
   11260:	add	fp, sp, #8
   11264:	sub	sp, sp, #28
   11268:	str	r0, [fp, #-24]	; 0xffffffe8
   1126c:	str	r1, [fp, #-28]	; 0xffffffe4
   11270:	str	r2, [fp, #-32]	; 0xffffffe0
   11274:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11278:	cmp	r3, #0
   1127c:	beq	112a0 <vetor_atribui@@Base+0x4c>
   11280:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11284:	cmp	r3, #0
   11288:	blt	112a0 <vetor_atribui@@Base+0x4c>
   1128c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11290:	ldr	r3, [r3]
   11294:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11298:	cmp	r2, r3
   1129c:	blt	112a8 <vetor_atribui@@Base+0x54>
   112a0:	mvn	r3, #0
   112a4:	b	11374 <vetor_atribui@@Base+0x120>
   112a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   112ac:	bl	10af8 <strlen@plt>
   112b0:	str	r0, [fp, #-16]
   112b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112b8:	ldr	r2, [r3, #8]
   112bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   112c0:	lsl	r3, r3, #2
   112c4:	add	r3, r2, r3
   112c8:	ldr	r3, [r3]
   112cc:	mov	r0, r3
   112d0:	bl	10af8 <strlen@plt>
   112d4:	mov	r2, r0
   112d8:	ldr	r3, [fp, #-16]
   112dc:	cmp	r3, r2
   112e0:	bls	1134c <vetor_atribui@@Base+0xf8>
   112e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112e8:	ldr	r2, [r3, #8]
   112ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   112f0:	lsl	r3, r3, #2
   112f4:	add	r3, r2, r3
   112f8:	ldr	r0, [r3]
   112fc:	ldr	r3, [fp, #-16]
   11300:	add	r1, r3, #1
   11304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11308:	ldr	r2, [r3, #8]
   1130c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11310:	lsl	r3, r3, #2
   11314:	add	r4, r2, r3
   11318:	bl	10aa4 <realloc@plt>
   1131c:	mov	r3, r0
   11320:	str	r3, [r4]
   11324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11328:	ldr	r2, [r3, #8]
   1132c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11330:	lsl	r3, r3, #2
   11334:	add	r3, r2, r3
   11338:	ldr	r3, [r3]
   1133c:	cmp	r3, #0
   11340:	bne	1134c <vetor_atribui@@Base+0xf8>
   11344:	mvn	r3, #0
   11348:	b	11374 <vetor_atribui@@Base+0x120>
   1134c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11350:	ldr	r2, [r3, #8]
   11354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11358:	lsl	r3, r3, #2
   1135c:	add	r3, r2, r3
   11360:	ldr	r3, [r3]
   11364:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11368:	mov	r0, r3
   1136c:	bl	10abc <strcpy@plt>
   11370:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11374:	mov	r0, r3
   11378:	sub	sp, fp, #8
   1137c:	ldr	r4, [sp]
   11380:	ldr	fp, [sp, #4]
   11384:	add	sp, sp, #8
   11388:	pop	{pc}		; (ldr pc, [sp], #4)

0001138c <vetor_tamanho@@Base>:
   1138c:	push	{fp}		; (str fp, [sp, #-4]!)
   11390:	add	fp, sp, #0
   11394:	sub	sp, sp, #12
   11398:	str	r0, [fp, #-8]
   1139c:	ldr	r3, [fp, #-8]
   113a0:	cmp	r3, #0
   113a4:	bne	113b0 <vetor_tamanho@@Base+0x24>
   113a8:	mvn	r3, #0
   113ac:	b	113b8 <vetor_tamanho@@Base+0x2c>
   113b0:	ldr	r3, [fp, #-8]
   113b4:	ldr	r3, [r3]
   113b8:	mov	r0, r3
   113bc:	add	sp, fp, #0
   113c0:	pop	{fp}		; (ldr fp, [sp], #4)
   113c4:	bx	lr

000113c8 <vetor_elemento@@Base>:
   113c8:	push	{fp}		; (str fp, [sp, #-4]!)
   113cc:	add	fp, sp, #0
   113d0:	sub	sp, sp, #12
   113d4:	str	r0, [fp, #-8]
   113d8:	str	r1, [fp, #-12]
   113dc:	ldr	r3, [fp, #-8]
   113e0:	cmp	r3, #0
   113e4:	beq	11408 <vetor_elemento@@Base+0x40>
   113e8:	ldr	r3, [fp, #-12]
   113ec:	cmp	r3, #0
   113f0:	blt	11408 <vetor_elemento@@Base+0x40>
   113f4:	ldr	r3, [fp, #-8]
   113f8:	ldr	r3, [r3]
   113fc:	ldr	r2, [fp, #-12]
   11400:	cmp	r2, r3
   11404:	blt	11410 <vetor_elemento@@Base+0x48>
   11408:	mov	r3, #0
   1140c:	b	11428 <vetor_elemento@@Base+0x60>
   11410:	ldr	r3, [fp, #-8]
   11414:	ldr	r2, [r3, #8]
   11418:	ldr	r3, [fp, #-12]
   1141c:	lsl	r3, r3, #2
   11420:	add	r3, r2, r3
   11424:	ldr	r3, [r3]
   11428:	mov	r0, r3
   1142c:	add	sp, fp, #0
   11430:	pop	{fp}		; (ldr fp, [sp], #4)
   11434:	bx	lr

00011438 <vetor_insere@@Base>:
   11438:	str	r4, [sp, #-12]!
   1143c:	str	fp, [sp, #4]
   11440:	str	lr, [sp, #8]
   11444:	add	fp, sp, #8
   11448:	sub	sp, sp, #28
   1144c:	str	r0, [fp, #-24]	; 0xffffffe8
   11450:	str	r1, [fp, #-28]	; 0xffffffe4
   11454:	str	r2, [fp, #-32]	; 0xffffffe0
   11458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1145c:	cmp	r3, #0
   11460:	beq	11484 <vetor_insere@@Base+0x4c>
   11464:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11468:	cmp	r3, #0
   1146c:	blt	11484 <vetor_insere@@Base+0x4c>
   11470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11474:	ldr	r3, [r3]
   11478:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1147c:	cmp	r2, r3
   11480:	ble	1148c <vetor_insere@@Base+0x54>
   11484:	mvn	r3, #0
   11488:	b	11618 <vetor_insere@@Base+0x1e0>
   1148c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11490:	ldr	r2, [r3]
   11494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11498:	ldr	r3, [r3, #4]
   1149c:	cmp	r2, r3
   114a0:	bne	1151c <vetor_insere@@Base+0xe4>
   114a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114a8:	ldr	r3, [r3, #4]
   114ac:	cmp	r3, #0
   114b0:	bne	114c4 <vetor_insere@@Base+0x8c>
   114b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b8:	mov	r2, #1
   114bc:	str	r2, [r3, #4]
   114c0:	b	114d8 <vetor_insere@@Base+0xa0>
   114c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114c8:	ldr	r3, [r3, #4]
   114cc:	lsl	r2, r3, #1
   114d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114d4:	str	r2, [r3, #4]
   114d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114dc:	ldr	r2, [r3, #8]
   114e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114e4:	ldr	r3, [r3, #4]
   114e8:	lsl	r3, r3, #2
   114ec:	mov	r1, r3
   114f0:	mov	r0, r2
   114f4:	bl	10aa4 <realloc@plt>
   114f8:	mov	r2, r0
   114fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11500:	str	r2, [r3, #8]
   11504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11508:	ldr	r3, [r3, #8]
   1150c:	cmp	r3, #0
   11510:	bne	1151c <vetor_insere@@Base+0xe4>
   11514:	mvn	r3, #0
   11518:	b	11618 <vetor_insere@@Base+0x1e0>
   1151c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11520:	ldr	r3, [r3]
   11524:	sub	r3, r3, #1
   11528:	str	r3, [fp, #-16]
   1152c:	b	11570 <vetor_insere@@Base+0x138>
   11530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11534:	ldr	r2, [r3, #8]
   11538:	ldr	r3, [fp, #-16]
   1153c:	lsl	r3, r3, #2
   11540:	add	r2, r2, r3
   11544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11548:	ldr	r1, [r3, #8]
   1154c:	ldr	r3, [fp, #-16]
   11550:	add	r3, r3, #1
   11554:	lsl	r3, r3, #2
   11558:	add	r3, r1, r3
   1155c:	ldr	r2, [r2]
   11560:	str	r2, [r3]
   11564:	ldr	r3, [fp, #-16]
   11568:	sub	r3, r3, #1
   1156c:	str	r3, [fp, #-16]
   11570:	ldr	r2, [fp, #-16]
   11574:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11578:	cmp	r2, r3
   1157c:	bge	11530 <vetor_insere@@Base+0xf8>
   11580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11584:	bl	10af8 <strlen@plt>
   11588:	mov	r3, r0
   1158c:	add	r0, r3, #1
   11590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11594:	ldr	r2, [r3, #8]
   11598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1159c:	lsl	r3, r3, #2
   115a0:	add	r4, r2, r3
   115a4:	mov	r1, #1
   115a8:	bl	10a44 <calloc@plt>
   115ac:	mov	r3, r0
   115b0:	str	r3, [r4]
   115b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115b8:	ldr	r2, [r3, #8]
   115bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115c0:	lsl	r3, r3, #2
   115c4:	add	r3, r2, r3
   115c8:	ldr	r3, [r3]
   115cc:	cmp	r3, #0
   115d0:	bne	115dc <vetor_insere@@Base+0x1a4>
   115d4:	mvn	r3, #0
   115d8:	b	11618 <vetor_insere@@Base+0x1e0>
   115dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115e0:	ldr	r2, [r3, #8]
   115e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115e8:	lsl	r3, r3, #2
   115ec:	add	r3, r2, r3
   115f0:	ldr	r3, [r3]
   115f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   115f8:	mov	r0, r3
   115fc:	bl	10abc <strcpy@plt>
   11600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11604:	ldr	r3, [r3]
   11608:	add	r2, r3, #1
   1160c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11610:	str	r2, [r3]
   11614:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11618:	mov	r0, r3
   1161c:	sub	sp, fp, #8
   11620:	ldr	r4, [sp]
   11624:	ldr	fp, [sp, #4]
   11628:	add	sp, sp, #8
   1162c:	pop	{pc}		; (ldr pc, [sp], #4)

00011630 <vetor_remove@@Base>:
   11630:	str	fp, [sp, #-8]!
   11634:	str	lr, [sp, #4]
   11638:	add	fp, sp, #4
   1163c:	sub	sp, sp, #16
   11640:	str	r0, [fp, #-16]
   11644:	str	r1, [fp, #-20]	; 0xffffffec
   11648:	ldr	r3, [fp, #-16]
   1164c:	cmp	r3, #0
   11650:	beq	11674 <vetor_remove@@Base+0x44>
   11654:	ldr	r3, [fp, #-20]	; 0xffffffec
   11658:	cmp	r3, #0
   1165c:	blt	11674 <vetor_remove@@Base+0x44>
   11660:	ldr	r3, [fp, #-16]
   11664:	ldr	r3, [r3]
   11668:	ldr	r2, [fp, #-20]	; 0xffffffec
   1166c:	cmp	r2, r3
   11670:	blt	1167c <vetor_remove@@Base+0x4c>
   11674:	mvn	r3, #0
   11678:	b	11718 <vetor_remove@@Base+0xe8>
   1167c:	ldr	r3, [fp, #-16]
   11680:	ldr	r2, [r3, #8]
   11684:	ldr	r3, [fp, #-20]	; 0xffffffec
   11688:	lsl	r3, r3, #2
   1168c:	add	r3, r2, r3
   11690:	ldr	r3, [r3]
   11694:	mov	r0, r3
   11698:	bl	10a80 <free@plt>
   1169c:	ldr	r3, [fp, #-20]	; 0xffffffec
   116a0:	add	r3, r3, #1
   116a4:	str	r3, [fp, #-8]
   116a8:	b	116ec <vetor_remove@@Base+0xbc>
   116ac:	ldr	r3, [fp, #-16]
   116b0:	ldr	r2, [r3, #8]
   116b4:	ldr	r3, [fp, #-8]
   116b8:	lsl	r3, r3, #2
   116bc:	add	r2, r2, r3
   116c0:	ldr	r3, [fp, #-16]
   116c4:	ldr	r1, [r3, #8]
   116c8:	ldr	r3, [fp, #-8]
   116cc:	sub	r3, r3, #-1073741823	; 0xc0000001
   116d0:	lsl	r3, r3, #2
   116d4:	add	r3, r1, r3
   116d8:	ldr	r2, [r2]
   116dc:	str	r2, [r3]
   116e0:	ldr	r3, [fp, #-8]
   116e4:	add	r3, r3, #1
   116e8:	str	r3, [fp, #-8]
   116ec:	ldr	r3, [fp, #-16]
   116f0:	ldr	r3, [r3]
   116f4:	ldr	r2, [fp, #-8]
   116f8:	cmp	r2, r3
   116fc:	blt	116ac <vetor_remove@@Base+0x7c>
   11700:	ldr	r3, [fp, #-16]
   11704:	ldr	r3, [r3]
   11708:	sub	r2, r3, #1
   1170c:	ldr	r3, [fp, #-16]
   11710:	str	r2, [r3]
   11714:	mov	r3, #0
   11718:	mov	r0, r3
   1171c:	sub	sp, fp, #4
   11720:	ldr	fp, [sp]
   11724:	add	sp, sp, #4
   11728:	pop	{pc}		; (ldr pc, [sp], #4)

0001172c <vetor_pesquisa@@Base>:
   1172c:	str	fp, [sp, #-8]!
   11730:	str	lr, [sp, #4]
   11734:	add	fp, sp, #4
   11738:	sub	sp, sp, #16
   1173c:	str	r0, [fp, #-16]
   11740:	str	r1, [fp, #-20]	; 0xffffffec
   11744:	ldr	r3, [fp, #-16]
   11748:	cmp	r3, #0
   1174c:	bne	11758 <vetor_pesquisa@@Base+0x2c>
   11750:	mvn	r3, #0
   11754:	b	117c0 <vetor_pesquisa@@Base+0x94>
   11758:	mov	r3, #0
   1175c:	str	r3, [fp, #-8]
   11760:	b	117a8 <vetor_pesquisa@@Base+0x7c>
   11764:	ldr	r3, [fp, #-16]
   11768:	ldr	r2, [r3, #8]
   1176c:	ldr	r3, [fp, #-8]
   11770:	lsl	r3, r3, #2
   11774:	add	r3, r2, r3
   11778:	ldr	r3, [r3]
   1177c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11780:	mov	r0, r3
   11784:	bl	10a5c <strcmp@plt>
   11788:	mov	r3, r0
   1178c:	cmp	r3, #0
   11790:	bne	1179c <vetor_pesquisa@@Base+0x70>
   11794:	ldr	r3, [fp, #-8]
   11798:	b	117c0 <vetor_pesquisa@@Base+0x94>
   1179c:	ldr	r3, [fp, #-8]
   117a0:	add	r3, r3, #1
   117a4:	str	r3, [fp, #-8]
   117a8:	ldr	r3, [fp, #-16]
   117ac:	ldr	r3, [r3]
   117b0:	ldr	r2, [fp, #-8]
   117b4:	cmp	r2, r3
   117b8:	blt	11764 <vetor_pesquisa@@Base+0x38>
   117bc:	mvn	r3, #0
   117c0:	mov	r0, r3
   117c4:	sub	sp, fp, #4
   117c8:	ldr	fp, [sp]
   117cc:	add	sp, sp, #4
   117d0:	pop	{pc}		; (ldr pc, [sp], #4)

000117d4 <vetor_ordena@@Base>:
   117d4:	str	fp, [sp, #-8]!
   117d8:	str	lr, [sp, #4]
   117dc:	add	fp, sp, #4
   117e0:	sub	sp, sp, #24
   117e4:	str	r0, [fp, #-24]	; 0xffffffe8
   117e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117ec:	cmp	r3, #0
   117f0:	bne	117fc <vetor_ordena@@Base+0x28>
   117f4:	mvn	r3, #0
   117f8:	b	118f0 <vetor_ordena@@Base+0x11c>
   117fc:	mov	r3, #1
   11800:	str	r3, [fp, #-8]
   11804:	b	118d8 <vetor_ordena@@Base+0x104>
   11808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1180c:	ldr	r2, [r3, #8]
   11810:	ldr	r3, [fp, #-8]
   11814:	lsl	r3, r3, #2
   11818:	add	r3, r2, r3
   1181c:	ldr	r3, [r3]
   11820:	str	r3, [fp, #-16]
   11824:	ldr	r3, [fp, #-8]
   11828:	str	r3, [fp, #-12]
   1182c:	b	11870 <vetor_ordena@@Base+0x9c>
   11830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11834:	ldr	r2, [r3, #8]
   11838:	ldr	r3, [fp, #-12]
   1183c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11840:	lsl	r3, r3, #2
   11844:	add	r2, r2, r3
   11848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1184c:	ldr	r1, [r3, #8]
   11850:	ldr	r3, [fp, #-12]
   11854:	lsl	r3, r3, #2
   11858:	add	r3, r1, r3
   1185c:	ldr	r2, [r2]
   11860:	str	r2, [r3]
   11864:	ldr	r3, [fp, #-12]
   11868:	sub	r3, r3, #1
   1186c:	str	r3, [fp, #-12]
   11870:	ldr	r3, [fp, #-12]
   11874:	cmp	r3, #0
   11878:	ble	118b0 <vetor_ordena@@Base+0xdc>
   1187c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11880:	ldr	r2, [r3, #8]
   11884:	ldr	r3, [fp, #-12]
   11888:	sub	r3, r3, #-1073741823	; 0xc0000001
   1188c:	lsl	r3, r3, #2
   11890:	add	r3, r2, r3
   11894:	ldr	r3, [r3]
   11898:	mov	r1, r3
   1189c:	ldr	r0, [fp, #-16]
   118a0:	bl	10a5c <strcmp@plt>
   118a4:	mov	r3, r0
   118a8:	cmp	r3, #0
   118ac:	blt	11830 <vetor_ordena@@Base+0x5c>
   118b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118b4:	ldr	r2, [r3, #8]
   118b8:	ldr	r3, [fp, #-12]
   118bc:	lsl	r3, r3, #2
   118c0:	add	r3, r2, r3
   118c4:	ldr	r2, [fp, #-16]
   118c8:	str	r2, [r3]
   118cc:	ldr	r3, [fp, #-8]
   118d0:	add	r3, r3, #1
   118d4:	str	r3, [fp, #-8]
   118d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118dc:	ldr	r3, [r3]
   118e0:	ldr	r2, [fp, #-8]
   118e4:	cmp	r2, r3
   118e8:	blt	11808 <vetor_ordena@@Base+0x34>
   118ec:	mov	r3, #0
   118f0:	mov	r0, r3
   118f4:	sub	sp, fp, #4
   118f8:	ldr	fp, [sp]
   118fc:	add	sp, sp, #4
   11900:	pop	{pc}		; (ldr pc, [sp], #4)

00011904 <vetor_concatena@@Base>:
   11904:	str	fp, [sp, #-8]!
   11908:	str	lr, [sp, #4]
   1190c:	add	fp, sp, #4
   11910:	sub	sp, sp, #16
   11914:	str	r0, [fp, #-16]
   11918:	str	r1, [fp, #-20]	; 0xffffffec
   1191c:	ldr	r3, [fp, #-16]
   11920:	cmp	r3, #0
   11924:	beq	11934 <vetor_concatena@@Base+0x30>
   11928:	ldr	r3, [fp, #-20]	; 0xffffffec
   1192c:	cmp	r3, #0
   11930:	bne	1193c <vetor_concatena@@Base+0x38>
   11934:	mov	r3, #0
   11938:	b	119d0 <vetor_concatena@@Base+0xcc>
   1193c:	bl	11148 <vetor_novo@@Base>
   11940:	str	r0, [fp, #-8]
   11944:	ldr	r3, [fp, #-20]	; 0xffffffec
   11948:	ldr	r3, [r3]
   1194c:	lsl	r3, r3, #2
   11950:	ldr	r2, [fp, #-16]
   11954:	ldr	r2, [r2]
   11958:	add	r3, r3, r2
   1195c:	mov	r2, r3
   11960:	ldr	r3, [fp, #-8]
   11964:	str	r2, [r3, #8]
   11968:	ldr	r3, [fp, #-16]
   1196c:	ldr	r2, [r3, #4]
   11970:	ldr	r3, [fp, #-20]	; 0xffffffec
   11974:	ldr	r3, [r3, #4]
   11978:	add	r2, r2, r3
   1197c:	ldr	r3, [fp, #-8]
   11980:	str	r2, [r3, #4]
   11984:	ldr	r3, [fp, #-8]
   11988:	ldr	r3, [r3, #8]
   1198c:	ldr	r2, [r3]
   11990:	ldr	r3, [fp, #-16]
   11994:	ldr	r3, [r3, #8]
   11998:	ldr	r3, [r3]
   1199c:	mov	r1, r3
   119a0:	mov	r0, r2
   119a4:	bl	10abc <strcpy@plt>
   119a8:	ldr	r3, [fp, #-8]
   119ac:	ldr	r3, [r3, #8]
   119b0:	ldr	r2, [r3]
   119b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   119b8:	ldr	r3, [r3, #8]
   119bc:	ldr	r3, [r3]
   119c0:	mov	r1, r3
   119c4:	mov	r0, r2
   119c8:	bl	10ab0 <strcat@plt>
   119cc:	ldr	r3, [fp, #-8]
   119d0:	mov	r0, r3
   119d4:	sub	sp, fp, #4
   119d8:	ldr	fp, [sp]
   119dc:	add	sp, sp, #4
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)

000119e4 <vetor_inverte@@Base>:
   119e4:	str	fp, [sp, #-8]!
   119e8:	str	lr, [sp, #4]
   119ec:	add	fp, sp, #4
   119f0:	sub	sp, sp, #24
   119f4:	str	r0, [fp, #-24]	; 0xffffffe8
   119f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119fc:	bl	1138c <vetor_tamanho@@Base>
   11a00:	str	r0, [fp, #-16]
   11a04:	ldr	r3, [fp, #-16]
   11a08:	str	r3, [fp, #-12]
   11a0c:	ldr	r3, [fp, #-16]
   11a10:	cmp	r3, #0
   11a14:	ble	11ac4 <vetor_inverte@@Base+0xe0>
   11a18:	mov	r3, #0
   11a1c:	str	r3, [fp, #-8]
   11a20:	b	11aa4 <vetor_inverte@@Base+0xc0>
   11a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a28:	ldr	r2, [r3, #8]
   11a2c:	ldr	r3, [fp, #-8]
   11a30:	lsl	r3, r3, #2
   11a34:	add	r3, r2, r3
   11a38:	ldr	r3, [r3]
   11a3c:	str	r3, [fp, #-20]	; 0xffffffec
   11a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a44:	ldr	r2, [r3, #8]
   11a48:	ldr	r3, [fp, #-12]
   11a4c:	lsl	r3, r3, #2
   11a50:	add	r2, r2, r3
   11a54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a58:	ldr	r1, [r3, #8]
   11a5c:	ldr	r3, [fp, #-8]
   11a60:	lsl	r3, r3, #2
   11a64:	add	r3, r1, r3
   11a68:	ldr	r2, [r2]
   11a6c:	str	r2, [r3]
   11a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a74:	ldr	r2, [r3, #8]
   11a78:	ldr	r3, [fp, #-12]
   11a7c:	lsl	r3, r3, #2
   11a80:	add	r3, r2, r3
   11a84:	ldr	r2, [fp, #-20]	; 0xffffffec
   11a88:	str	r2, [r3]
   11a8c:	ldr	r3, [fp, #-12]
   11a90:	sub	r3, r3, #1
   11a94:	str	r3, [fp, #-12]
   11a98:	ldr	r3, [fp, #-8]
   11a9c:	add	r3, r3, #1
   11aa0:	str	r3, [fp, #-8]
   11aa4:	ldr	r2, [fp, #-8]
   11aa8:	ldr	r3, [fp, #-16]
   11aac:	cmp	r2, r3
   11ab0:	bge	11ac4 <vetor_inverte@@Base+0xe0>
   11ab4:	ldr	r2, [fp, #-8]
   11ab8:	ldr	r3, [fp, #-12]
   11abc:	cmp	r2, r3
   11ac0:	blt	11a24 <vetor_inverte@@Base+0x40>
   11ac4:	mov	r3, #0
   11ac8:	mov	r0, r3
   11acc:	sub	sp, fp, #4
   11ad0:	ldr	fp, [sp]
   11ad4:	add	sp, sp, #4
   11ad8:	pop	{pc}		; (ldr pc, [sp], #4)

00011adc <vetor_baralha@@Base>:
   11adc:	str	fp, [sp, #-8]!
   11ae0:	str	lr, [sp, #4]
   11ae4:	add	fp, sp, #4
   11ae8:	sub	sp, sp, #32
   11aec:	str	r0, [fp, #-32]	; 0xffffffe0
   11af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11af4:	ldr	r3, [r3]
   11af8:	str	r3, [fp, #-12]
   11afc:	bl	11148 <vetor_novo@@Base>
   11b00:	str	r0, [fp, #-16]
   11b04:	sub	r3, fp, #24
   11b08:	mov	r0, r3
   11b0c:	bl	10a98 <time@plt>
   11b10:	mov	r3, r0
   11b14:	mov	r0, r3
   11b18:	bl	10b04 <srand@plt>
   11b1c:	mov	r3, #0
   11b20:	str	r3, [fp, #-8]
   11b24:	b	11bbc <vetor_baralha@@Base+0xe0>
   11b28:	bl	10b10 <rand@plt>
   11b2c:	mov	r2, r0
   11b30:	ldr	r3, [fp, #-12]
   11b34:	add	r3, r3, #1
   11b38:	sdiv	r1, r2, r3
   11b3c:	mul	r3, r3, r1
   11b40:	sub	r3, r2, r3
   11b44:	str	r3, [fp, #-20]	; 0xffffffec
   11b48:	ldr	r3, [fp, #-16]
   11b4c:	ldr	r2, [r3, #8]
   11b50:	ldr	r3, [fp, #-8]
   11b54:	lsl	r3, r3, #2
   11b58:	add	r3, r2, r3
   11b5c:	ldr	r3, [r3]
   11b60:	str	r3, [fp, #-28]	; 0xffffffe4
   11b64:	ldr	r3, [fp, #-16]
   11b68:	ldr	r2, [r3, #8]
   11b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b70:	lsl	r3, r3, #2
   11b74:	add	r2, r2, r3
   11b78:	ldr	r3, [fp, #-16]
   11b7c:	ldr	r1, [r3, #8]
   11b80:	ldr	r3, [fp, #-8]
   11b84:	lsl	r3, r3, #2
   11b88:	add	r3, r1, r3
   11b8c:	ldr	r2, [r2]
   11b90:	str	r2, [r3]
   11b94:	ldr	r3, [fp, #-16]
   11b98:	ldr	r2, [r3, #8]
   11b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ba0:	lsl	r3, r3, #2
   11ba4:	add	r3, r2, r3
   11ba8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11bac:	str	r2, [r3]
   11bb0:	ldr	r3, [fp, #-8]
   11bb4:	add	r3, r3, #1
   11bb8:	str	r3, [fp, #-8]
   11bbc:	ldr	r2, [fp, #-8]
   11bc0:	ldr	r3, [fp, #-12]
   11bc4:	cmp	r2, r3
   11bc8:	blt	11b28 <vetor_baralha@@Base+0x4c>
   11bcc:	ldr	r3, [fp, #-16]
   11bd0:	mov	r0, r3
   11bd4:	sub	sp, fp, #4
   11bd8:	ldr	fp, [sp]
   11bdc:	add	sp, sp, #4
   11be0:	pop	{pc}		; (ldr pc, [sp], #4)

00011be4 <__libc_csu_init@@Base>:
   11be4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11be8:	mov	r7, r0
   11bec:	ldr	r6, [pc, #72]	; 11c3c <__libc_csu_init@@Base+0x58>
   11bf0:	ldr	r5, [pc, #72]	; 11c40 <__libc_csu_init@@Base+0x5c>
   11bf4:	add	r6, pc, r6
   11bf8:	add	r5, pc, r5
   11bfc:	sub	r6, r6, r5
   11c00:	mov	r8, r1
   11c04:	mov	r9, r2
   11c08:	bl	10a24 <calloc@plt-0x20>
   11c0c:	asrs	r6, r6, #2
   11c10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c14:	mov	r4, #0
   11c18:	add	r4, r4, #1
   11c1c:	ldr	r3, [r5], #4
   11c20:	mov	r2, r9
   11c24:	mov	r1, r8
   11c28:	mov	r0, r7
   11c2c:	blx	r3
   11c30:	cmp	r6, r4
   11c34:	bne	11c18 <__libc_csu_init@@Base+0x34>
   11c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c3c:	andeq	r0, r1, r8, lsl r3
   11c40:	andeq	r0, r1, r0, lsl r3

00011c44 <__libc_csu_fini@@Base>:
   11c44:	bx	lr

Disassembly of section .fini:

00011c48 <.fini>:
   11c48:	push	{r3, lr}
   11c4c:	pop	{r3, pc}
