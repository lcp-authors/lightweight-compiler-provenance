
../repos/coreutils/src/uniq:     file format elf32-littlearm


Disassembly of section .init:

00011024 <.init>:
   11024:	push	{r3, lr}
   11028:	bl	11344 <putc_unlocked@plt+0x48>
   1102c:	pop	{r3, pc}

Disassembly of section .plt:

00011030 <calloc@plt-0x14>:
   11030:	push	{lr}		; (str lr, [sp, #-4]!)
   11034:	ldr	lr, [pc, #4]	; 11040 <calloc@plt-0x4>
   11038:	add	lr, pc, lr
   1103c:	ldr	pc, [lr, #8]!
   11040:	andeq	r6, r1, r0, asr #31

00011044 <calloc@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #4032]!	; 0xfc0

00011050 <fputs_unlocked@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #4024]!	; 0xfb8

0001105c <raise@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #4016]!	; 0xfb0

00011068 <strcmp@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #4008]!	; 0xfa8

00011074 <strtol@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #4000]!	; 0xfa0

00011080 <posix_fadvise64@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #3992]!	; 0xf98

0001108c <fflush@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #3984]!	; 0xf90

00011098 <free@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #3976]!	; 0xf88

000110a4 <_exit@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #3968]!	; 0xf80

000110b0 <memcpy@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #90112	; 0x16000
   110b8:	ldr	pc, [ip, #3960]!	; 0xf78

000110bc <mbsinit@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #90112	; 0x16000
   110c4:	ldr	pc, [ip, #3952]!	; 0xf70

000110c8 <fwrite_unlocked@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #90112	; 0x16000
   110d0:	ldr	pc, [ip, #3944]!	; 0xf68

000110d4 <memcmp@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #90112	; 0x16000
   110dc:	ldr	pc, [ip, #3936]!	; 0xf60

000110e0 <getc_unlocked@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #90112	; 0x16000
   110e8:	ldr	pc, [ip, #3928]!	; 0xf58

000110ec <dcgettext@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #90112	; 0x16000
   110f4:	ldr	pc, [ip, #3920]!	; 0xf50

000110f8 <dup2@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #90112	; 0x16000
   11100:	ldr	pc, [ip, #3912]!	; 0xf48

00011104 <realloc@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #90112	; 0x16000
   1110c:	ldr	pc, [ip, #3904]!	; 0xf40

00011110 <textdomain@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #90112	; 0x16000
   11118:	ldr	pc, [ip, #3896]!	; 0xf38

0001111c <iswprint@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #90112	; 0x16000
   11124:	ldr	pc, [ip, #3888]!	; 0xf30

00011128 <fwrite@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #90112	; 0x16000
   11130:	ldr	pc, [ip, #3880]!	; 0xf28

00011134 <lseek64@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #90112	; 0x16000
   1113c:	ldr	pc, [ip, #3872]!	; 0xf20

00011140 <__ctype_get_mb_cur_max@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #90112	; 0x16000
   11148:	ldr	pc, [ip, #3864]!	; 0xf18

0001114c <__fpending@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #90112	; 0x16000
   11154:	ldr	pc, [ip, #3856]!	; 0xf10

00011158 <ferror_unlocked@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #90112	; 0x16000
   11160:	ldr	pc, [ip, #3848]!	; 0xf08

00011164 <mbrtowc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #90112	; 0x16000
   1116c:	ldr	pc, [ip, #3840]!	; 0xf00

00011170 <error@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #90112	; 0x16000
   11178:	ldr	pc, [ip, #3832]!	; 0xef8

0001117c <open64@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #90112	; 0x16000
   11184:	ldr	pc, [ip, #3824]!	; 0xef0

00011188 <getenv@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3816]!	; 0xee8

00011194 <malloc@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3808]!	; 0xee0

000111a0 <__libc_start_main@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #90112	; 0x16000
   111a8:	ldr	pc, [ip, #3800]!	; 0xed8

000111ac <__freading@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #90112	; 0x16000
   111b4:	ldr	pc, [ip, #3792]!	; 0xed0

000111b8 <__ctype_toupper_loc@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #90112	; 0x16000
   111c0:	ldr	pc, [ip, #3784]!	; 0xec8

000111c4 <__gmon_start__@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #90112	; 0x16000
   111cc:	ldr	pc, [ip, #3776]!	; 0xec0

000111d0 <freopen64@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #90112	; 0x16000
   111d8:	ldr	pc, [ip, #3768]!	; 0xeb8

000111dc <getopt_long@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #90112	; 0x16000
   111e4:	ldr	pc, [ip, #3760]!	; 0xeb0

000111e8 <__ctype_b_loc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3752]!	; 0xea8

000111f4 <exit@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3744]!	; 0xea0

00011200 <strlen@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3736]!	; 0xe98

0001120c <strchr@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3728]!	; 0xe90

00011218 <__errno_location@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3720]!	; 0xe88

00011224 <__cxa_atexit@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3712]!	; 0xe80

00011230 <memset@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3704]!	; 0xe78

0001123c <__printf_chk@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3696]!	; 0xe70

00011248 <fileno@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3688]!	; 0xe68

00011254 <strtoumax@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3680]!	; 0xe60

00011260 <__fprintf_chk@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3672]!	; 0xe58

0001126c <fclose@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3664]!	; 0xe50

00011278 <fseeko64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3656]!	; 0xe48

00011284 <setlocale@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3648]!	; 0xe40

00011290 <strrchr@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3640]!	; 0xe38

0001129c <nl_langinfo@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3632]!	; 0xe30

000112a8 <bindtextdomain@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3624]!	; 0xe28

000112b4 <strncmp@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3616]!	; 0xe20

000112c0 <abort@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3608]!	; 0xe18

000112cc <feof_unlocked@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3600]!	; 0xe10

000112d8 <close@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3592]!	; 0xe08

000112e4 <putchar_unlocked@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3584]!	; 0xe00

000112f0 <__assert_fail@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3576]!	; 0xdf8

000112fc <putc_unlocked@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3568]!	; 0xdf0

Disassembly of section .text:

00011308 <.text>:
   11308:	mov	fp, #0
   1130c:	mov	lr, #0
   11310:	pop	{r1}		; (ldr r1, [sp], #4)
   11314:	mov	r2, sp
   11318:	push	{r2}		; (str r2, [sp, #-4]!)
   1131c:	push	{r0}		; (str r0, [sp, #-4]!)
   11320:	ldr	ip, [pc, #16]	; 11338 <putc_unlocked@plt+0x3c>
   11324:	push	{ip}		; (str ip, [sp, #-4]!)
   11328:	ldr	r0, [pc, #12]	; 1133c <putc_unlocked@plt+0x40>
   1132c:	ldr	r3, [pc, #12]	; 11340 <putc_unlocked@plt+0x44>
   11330:	bl	111a0 <__libc_start_main@plt>
   11334:	bl	112c0 <abort@plt>
   11338:	andeq	r6, r1, r8, asr r5
   1133c:	muleq	r1, r8, r7
   11340:	strdeq	r6, [r1], -r8
   11344:	ldr	r3, [pc, #20]	; 11360 <putc_unlocked@plt+0x64>
   11348:	ldr	r2, [pc, #20]	; 11364 <putc_unlocked@plt+0x68>
   1134c:	add	r3, pc, r3
   11350:	ldr	r2, [r3, r2]
   11354:	cmp	r2, #0
   11358:	bxeq	lr
   1135c:	b	111c4 <__gmon_start__@plt>
   11360:	andeq	r6, r1, ip, lsr #25
   11364:	strdeq	r0, [r0], -r8
   11368:	ldr	r0, [pc, #24]	; 11388 <putc_unlocked@plt+0x8c>
   1136c:	ldr	r3, [pc, #24]	; 1138c <putc_unlocked@plt+0x90>
   11370:	cmp	r3, r0
   11374:	bxeq	lr
   11378:	ldr	r3, [pc, #16]	; 11390 <putc_unlocked@plt+0x94>
   1137c:	cmp	r3, #0
   11380:	bxeq	lr
   11384:	bx	r3
   11388:	andeq	r8, r2, r8, asr r1
   1138c:	andeq	r8, r2, r8, asr r1
   11390:	andeq	r0, r0, r0
   11394:	ldr	r0, [pc, #36]	; 113c0 <putc_unlocked@plt+0xc4>
   11398:	ldr	r1, [pc, #36]	; 113c4 <putc_unlocked@plt+0xc8>
   1139c:	sub	r1, r1, r0
   113a0:	asr	r1, r1, #2
   113a4:	add	r1, r1, r1, lsr #31
   113a8:	asrs	r1, r1, #1
   113ac:	bxeq	lr
   113b0:	ldr	r3, [pc, #16]	; 113c8 <putc_unlocked@plt+0xcc>
   113b4:	cmp	r3, #0
   113b8:	bxeq	lr
   113bc:	bx	r3
   113c0:	andeq	r8, r2, r8, asr r1
   113c4:	andeq	r8, r2, r8, asr r1
   113c8:	andeq	r0, r0, r0
   113cc:	push	{r4, lr}
   113d0:	ldr	r4, [pc, #24]	; 113f0 <putc_unlocked@plt+0xf4>
   113d4:	ldrb	r3, [r4]
   113d8:	cmp	r3, #0
   113dc:	popne	{r4, pc}
   113e0:	bl	11368 <putc_unlocked@plt+0x6c>
   113e4:	mov	r3, #1
   113e8:	strb	r3, [r4]
   113ec:	pop	{r4, pc}
   113f0:	andeq	r8, r2, ip, ror r1
   113f4:	b	11394 <putc_unlocked@plt+0x98>
   113f8:	push	{fp, lr}
   113fc:	mov	fp, sp
   11400:	mov	r4, r0
   11404:	cmp	r0, #0
   11408:	bne	115a0 <putc_unlocked@plt+0x2a4>
   1140c:	movw	r1, #26027	; 0x65ab
   11410:	movt	r1, #1
   11414:	mov	r0, #0
   11418:	mov	r2, #5
   1141c:	bl	110ec <dcgettext@plt>
   11420:	mov	r1, r0
   11424:	movw	r0, #33192	; 0x81a8
   11428:	movt	r0, #2
   1142c:	ldr	r2, [r0]
   11430:	mov	r0, #1
   11434:	bl	1123c <__printf_chk@plt>
   11438:	movw	r1, #26067	; 0x65d3
   1143c:	movt	r1, #1
   11440:	mov	r0, #0
   11444:	mov	r2, #5
   11448:	bl	110ec <dcgettext@plt>
   1144c:	movw	r5, #33140	; 0x8174
   11450:	movt	r5, #2
   11454:	ldr	r1, [r5]
   11458:	bl	11050 <fputs_unlocked@plt>
   1145c:	bl	115e4 <putc_unlocked@plt+0x2e8>
   11460:	movw	r1, #26240	; 0x6680
   11464:	movt	r1, #1
   11468:	mov	r0, #0
   1146c:	mov	r2, #5
   11470:	bl	110ec <dcgettext@plt>
   11474:	ldr	r1, [r5]
   11478:	bl	11050 <fputs_unlocked@plt>
   1147c:	movw	r1, #26378	; 0x670a
   11480:	movt	r1, #1
   11484:	mov	r0, #0
   11488:	mov	r2, #5
   1148c:	bl	110ec <dcgettext@plt>
   11490:	ldr	r1, [r5]
   11494:	bl	11050 <fputs_unlocked@plt>
   11498:	movw	r1, #26623	; 0x67ff
   1149c:	movt	r1, #1
   114a0:	mov	r0, #0
   114a4:	mov	r2, #5
   114a8:	bl	110ec <dcgettext@plt>
   114ac:	ldr	r1, [r5]
   114b0:	bl	11050 <fputs_unlocked@plt>
   114b4:	movw	r1, #26683	; 0x683b
   114b8:	movt	r1, #1
   114bc:	mov	r0, #0
   114c0:	mov	r2, #5
   114c4:	bl	110ec <dcgettext@plt>
   114c8:	ldr	r1, [r5]
   114cc:	bl	11050 <fputs_unlocked@plt>
   114d0:	movw	r1, #26835	; 0x68d3
   114d4:	movt	r1, #1
   114d8:	mov	r0, #0
   114dc:	mov	r2, #5
   114e0:	bl	110ec <dcgettext@plt>
   114e4:	ldr	r1, [r5]
   114e8:	bl	11050 <fputs_unlocked@plt>
   114ec:	movw	r1, #27013	; 0x6985
   114f0:	movt	r1, #1
   114f4:	mov	r0, #0
   114f8:	mov	r2, #5
   114fc:	bl	110ec <dcgettext@plt>
   11500:	ldr	r1, [r5]
   11504:	bl	11050 <fputs_unlocked@plt>
   11508:	movw	r1, #27077	; 0x69c5
   1150c:	movt	r1, #1
   11510:	mov	r0, #0
   11514:	mov	r2, #5
   11518:	bl	110ec <dcgettext@plt>
   1151c:	ldr	r1, [r5]
   11520:	bl	11050 <fputs_unlocked@plt>
   11524:	movw	r1, #27145	; 0x6a09
   11528:	movt	r1, #1
   1152c:	mov	r0, #0
   11530:	mov	r2, #5
   11534:	bl	110ec <dcgettext@plt>
   11538:	ldr	r1, [r5]
   1153c:	bl	11050 <fputs_unlocked@plt>
   11540:	movw	r1, #27190	; 0x6a36
   11544:	movt	r1, #1
   11548:	mov	r0, #0
   1154c:	mov	r2, #5
   11550:	bl	110ec <dcgettext@plt>
   11554:	ldr	r1, [r5]
   11558:	bl	11050 <fputs_unlocked@plt>
   1155c:	movw	r1, #27244	; 0x6a6c
   11560:	movt	r1, #1
   11564:	mov	r0, #0
   11568:	mov	r2, #5
   1156c:	bl	110ec <dcgettext@plt>
   11570:	ldr	r1, [r5]
   11574:	bl	11050 <fputs_unlocked@plt>
   11578:	movw	r1, #27364	; 0x6ae4
   1157c:	movt	r1, #1
   11580:	mov	r0, #0
   11584:	mov	r2, #5
   11588:	bl	110ec <dcgettext@plt>
   1158c:	ldr	r1, [r5]
   11590:	bl	11050 <fputs_unlocked@plt>
   11594:	bl	11614 <putc_unlocked@plt+0x318>
   11598:	mov	r0, r4
   1159c:	bl	111f4 <exit@plt>
   115a0:	movw	r0, #33128	; 0x8168
   115a4:	movt	r0, #2
   115a8:	ldr	r5, [r0]
   115ac:	movw	r1, #25988	; 0x6584
   115b0:	movt	r1, #1
   115b4:	mov	r0, #0
   115b8:	mov	r2, #5
   115bc:	bl	110ec <dcgettext@plt>
   115c0:	mov	r2, r0
   115c4:	movw	r0, #33192	; 0x81a8
   115c8:	movt	r0, #2
   115cc:	ldr	r3, [r0]
   115d0:	mov	r0, r5
   115d4:	mov	r1, #1
   115d8:	bl	11260 <__fprintf_chk@plt>
   115dc:	mov	r0, r4
   115e0:	bl	111f4 <exit@plt>
   115e4:	push	{fp, lr}
   115e8:	mov	fp, sp
   115ec:	movw	r1, #27927	; 0x6d17
   115f0:	movt	r1, #1
   115f4:	mov	r0, #0
   115f8:	mov	r2, #5
   115fc:	bl	110ec <dcgettext@plt>
   11600:	movw	r1, #33140	; 0x8174
   11604:	movt	r1, #2
   11608:	ldr	r1, [r1]
   1160c:	pop	{fp, lr}
   11610:	b	11050 <fputs_unlocked@plt>
   11614:	push	{r4, r5, fp, lr}
   11618:	add	fp, sp, #8
   1161c:	sub	sp, sp, #56	; 0x38
   11620:	movw	r0, #28744	; 0x7048
   11624:	movt	r0, #1
   11628:	add	r1, r0, #32
   1162c:	mov	r5, sp
   11630:	mov	r2, #48	; 0x30
   11634:	vld1.64	{d16-d17}, [r1]
   11638:	add	r1, r5, #32
   1163c:	add	r3, r0, #16
   11640:	vld1.64	{d18-d19}, [r0], r2
   11644:	vld1.64	{d20-d21}, [r3]
   11648:	vldr	d22, [r0]
   1164c:	vst1.64	{d16-d17}, [r1]
   11650:	add	r0, r5, #16
   11654:	vst1.64	{d20-d21}, [r0]
   11658:	mov	r0, r5
   1165c:	vst1.64	{d18-d19}, [r0], r2
   11660:	vstr	d22, [r0]
   11664:	ldr	r1, [sp]
   11668:	cmp	r1, #0
   1166c:	beq	11694 <putc_unlocked@plt+0x398>
   11670:	mov	r5, sp
   11674:	movw	r4, #27507	; 0x6b73
   11678:	movt	r4, #1
   1167c:	mov	r0, r4
   11680:	bl	11068 <strcmp@plt>
   11684:	cmp	r0, #0
   11688:	ldrne	r1, [r5, #8]!
   1168c:	cmpne	r1, #0
   11690:	bne	1167c <putc_unlocked@plt+0x380>
   11694:	ldr	r4, [r5, #4]
   11698:	movw	r1, #28097	; 0x6dc1
   1169c:	movt	r1, #1
   116a0:	mov	r0, #0
   116a4:	mov	r2, #5
   116a8:	bl	110ec <dcgettext@plt>
   116ac:	mov	r1, r0
   116b0:	movw	r2, #27716	; 0x6c44
   116b4:	movt	r2, #1
   116b8:	movw	r3, #28120	; 0x6dd8
   116bc:	movt	r3, #1
   116c0:	mov	r0, #1
   116c4:	bl	1123c <__printf_chk@plt>
   116c8:	movw	r5, #27507	; 0x6b73
   116cc:	movt	r5, #1
   116d0:	cmp	r4, #0
   116d4:	moveq	r4, r5
   116d8:	mov	r0, #5
   116dc:	mov	r1, #0
   116e0:	bl	11284 <setlocale@plt>
   116e4:	cmp	r0, #0
   116e8:	beq	11728 <putc_unlocked@plt+0x42c>
   116ec:	movw	r1, #28160	; 0x6e00
   116f0:	movt	r1, #1
   116f4:	mov	r2, #3
   116f8:	bl	112b4 <strncmp@plt>
   116fc:	cmp	r0, #0
   11700:	beq	11728 <putc_unlocked@plt+0x42c>
   11704:	movw	r1, #28164	; 0x6e04
   11708:	movt	r1, #1
   1170c:	mov	r0, #0
   11710:	mov	r2, #5
   11714:	bl	110ec <dcgettext@plt>
   11718:	movw	r1, #33140	; 0x8174
   1171c:	movt	r1, #2
   11720:	ldr	r1, [r1]
   11724:	bl	11050 <fputs_unlocked@plt>
   11728:	movw	r1, #28235	; 0x6e4b
   1172c:	movt	r1, #1
   11730:	mov	r0, #0
   11734:	mov	r2, #5
   11738:	bl	110ec <dcgettext@plt>
   1173c:	mov	r1, r0
   11740:	movw	r2, #28120	; 0x6dd8
   11744:	movt	r2, #1
   11748:	mov	r0, #1
   1174c:	mov	r3, r5
   11750:	bl	1123c <__printf_chk@plt>
   11754:	movw	r1, #28262	; 0x6e66
   11758:	movt	r1, #1
   1175c:	mov	r0, #0
   11760:	mov	r2, #5
   11764:	bl	110ec <dcgettext@plt>
   11768:	mov	r1, r0
   1176c:	movw	r0, #28030	; 0x6d7e
   11770:	movt	r0, #1
   11774:	movw	r3, #28312	; 0x6e98
   11778:	movt	r3, #1
   1177c:	cmp	r4, r5
   11780:	moveq	r3, r0
   11784:	mov	r0, #1
   11788:	mov	r2, r4
   1178c:	bl	1123c <__printf_chk@plt>
   11790:	sub	sp, fp, #8
   11794:	pop	{r4, r5, fp, pc}
   11798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1179c:	add	fp, sp, #28
   117a0:	sub	sp, sp, #36	; 0x24
   117a4:	mov	r4, r1
   117a8:	mov	r5, r0
   117ac:	movw	r0, #27512	; 0x6b78
   117b0:	movt	r0, #1
   117b4:	bl	11188 <getenv@plt>
   117b8:	mov	r6, r0
   117bc:	movw	r0, #29009	; 0x7151
   117c0:	movt	r0, #1
   117c4:	str	r0, [sp, #28]
   117c8:	str	r0, [sp, #32]
   117cc:	ldr	r0, [r4]
   117d0:	bl	13298 <putc_unlocked@plt+0x1f9c>
   117d4:	movw	r1, #28312	; 0x6e98
   117d8:	movt	r1, #1
   117dc:	mov	r0, #6
   117e0:	bl	11284 <setlocale@plt>
   117e4:	movw	r7, #27720	; 0x6c48
   117e8:	movt	r7, #1
   117ec:	movw	r1, #27528	; 0x6b88
   117f0:	movt	r1, #1
   117f4:	mov	r0, r7
   117f8:	bl	112a8 <bindtextdomain@plt>
   117fc:	mov	r0, r7
   11800:	bl	11110 <textdomain@plt>
   11804:	movw	r0, #11288	; 0x2c18
   11808:	movt	r0, #1
   1180c:	bl	1655c <putc_unlocked@plt+0x5260>
   11810:	movw	r0, #33152	; 0x8180
   11814:	movt	r0, #2
   11818:	mov	r1, #0
   1181c:	str	r1, [r0]
   11820:	movw	r0, #33156	; 0x8184
   11824:	movt	r0, #2
   11828:	str	r1, [r0]
   1182c:	movw	r0, #33160	; 0x8188
   11830:	movt	r0, #2
   11834:	mvn	r2, #0
   11838:	str	r2, [r0]
   1183c:	movw	r0, #33164	; 0x818c
   11840:	movt	r0, #2
   11844:	mov	r2, #1
   11848:	strb	r2, [r0]
   1184c:	movw	r0, #33165	; 0x818d
   11850:	movt	r0, #2
   11854:	strb	r2, [r0]
   11858:	movw	r0, #33166	; 0x818e
   1185c:	movt	r0, #2
   11860:	strb	r1, [r0]
   11864:	movw	r0, #33168	; 0x8190
   11868:	movt	r0, #2
   1186c:	strb	r2, [r0]
   11870:	movw	r0, #33172	; 0x8194
   11874:	movt	r0, #2
   11878:	str	r1, [r0]
   1187c:	mov	r7, #10
   11880:	mov	r0, #0
   11884:	mov	sl, #0
   11888:	mov	r9, #0
   1188c:	mov	r1, #0
   11890:	str	r1, [sp, #12]
   11894:	b	118b4 <putc_unlocked@plt+0x5b8>
   11898:	add	r2, r1, #1
   1189c:	str	r2, [r7]
   118a0:	ldr	r1, [r4, r1, lsl #2]
   118a4:	add	r2, sp, #28
   118a8:	str	r1, [r2, r9, lsl #2]
   118ac:	add	r9, r9, #1
   118b0:	mov	r7, r8
   118b4:	mov	r8, r7
   118b8:	cmp	r9, #0
   118bc:	mov	r1, r9
   118c0:	movwne	r1, #1
   118c4:	cmp	r6, #0
   118c8:	mov	r2, r6
   118cc:	movwne	r2, #1
   118d0:	cmn	r0, #1
   118d4:	beq	11b30 <putc_unlocked@plt+0x834>
   118d8:	ands	r1, r2, r1
   118dc:	bne	11b30 <putc_unlocked@plt+0x834>
   118e0:	mov	r7, #0
   118e4:	str	r7, [sp]
   118e8:	mov	r0, r5
   118ec:	mov	r1, r4
   118f0:	movw	r2, #27552	; 0x6ba0
   118f4:	movt	r2, #1
   118f8:	movw	r3, #28472	; 0x6f38
   118fc:	movt	r3, #1
   11900:	bl	111dc <getopt_long@plt>
   11904:	add	r1, r0, #3
   11908:	cmp	r1, #125	; 0x7d
   1190c:	bhi	11b98 <putc_unlocked@plt+0x89c>
   11910:	add	r2, pc, #0
   11914:	ldr	pc, [r2, r1, lsl #2]
   11918:	andeq	r1, r1, ip, lsr #30
   1191c:	andeq	r1, r1, r0, lsl #31
   11920:	andeq	r1, r1, r0, lsr fp
   11924:	andeq	r1, r1, r4, ror #29
   11928:	andeq	r1, r1, r0, lsr #26
   1192c:	andeq	r1, r1, r4, ror #29
   11930:	andeq	r1, r1, r4, ror #29
   11934:	andeq	r1, r1, r4, ror #29
   11938:	andeq	r1, r1, r4, ror #29
   1193c:	andeq	r1, r1, r4, ror #29
   11940:	andeq	r1, r1, r4, ror #29
   11944:	andeq	r1, r1, r4, ror #29
   11948:	andeq	r1, r1, r4, ror #29
   1194c:	andeq	r1, r1, r4, ror #29
   11950:	andeq	r1, r1, r4, ror #29
   11954:	andeq	r1, r1, r4, ror #29
   11958:	andeq	r1, r1, r4, ror #29
   1195c:	andeq	r1, r1, r4, ror #29
   11960:	andeq	r1, r1, r4, ror #29
   11964:	andeq	r1, r1, r4, ror #29
   11968:	andeq	r1, r1, r4, ror #29
   1196c:	andeq	r1, r1, r4, ror #29
   11970:	andeq	r1, r1, r4, ror #29
   11974:	andeq	r1, r1, r4, ror #29
   11978:	andeq	r1, r1, r4, ror #29
   1197c:	andeq	r1, r1, r4, ror #29
   11980:	andeq	r1, r1, r4, ror #29
   11984:	andeq	r1, r1, r4, ror #29
   11988:	andeq	r1, r1, r4, ror #29
   1198c:	andeq	r1, r1, r4, ror #29
   11990:	andeq	r1, r1, r4, ror #29
   11994:	andeq	r1, r1, r4, ror #29
   11998:	andeq	r1, r1, r4, ror #29
   1199c:	andeq	r1, r1, r4, ror #29
   119a0:	andeq	r1, r1, r4, ror #29
   119a4:	andeq	r1, r1, r4, ror #29
   119a8:	andeq	r1, r1, r4, ror #29
   119ac:	andeq	r1, r1, r4, ror #29
   119b0:	andeq	r1, r1, r4, ror #29
   119b4:	andeq	r1, r1, r4, ror #29
   119b8:	andeq	r1, r1, r4, ror #29
   119bc:	andeq	r1, r1, r4, ror #29
   119c0:	andeq	r1, r1, r4, ror #29
   119c4:	andeq	r1, r1, r4, ror #29
   119c8:	andeq	r1, r1, r4, ror #29
   119cc:	andeq	r1, r1, r4, ror #29
   119d0:	andeq	r1, r1, r4, ror #29
   119d4:	andeq	r1, r1, r4, ror #29
   119d8:	andeq	r1, r1, r4, ror #29
   119dc:	andeq	r1, r1, r4, ror #29
   119e0:	andeq	r1, r1, r4, ror #29
   119e4:	andeq	r1, r1, r0, lsl fp
   119e8:	andeq	r1, r1, r0, lsl fp
   119ec:	andeq	r1, r1, r0, lsl fp
   119f0:	andeq	r1, r1, r0, lsl fp
   119f4:	andeq	r1, r1, r0, lsl fp
   119f8:	andeq	r1, r1, r0, lsl fp
   119fc:	andeq	r1, r1, r0, lsl fp
   11a00:	andeq	r1, r1, r0, lsl fp
   11a04:	andeq	r1, r1, r0, lsl fp
   11a08:	andeq	r1, r1, r0, lsl fp
   11a0c:	andeq	r1, r1, r4, ror #29
   11a10:	andeq	r1, r1, r4, ror #29
   11a14:	andeq	r1, r1, r4, ror #29
   11a18:	andeq	r1, r1, r4, ror #29
   11a1c:	andeq	r1, r1, r4, ror #29
   11a20:	andeq	r1, r1, r4, ror #29
   11a24:	andeq	r1, r1, r4, ror #29
   11a28:	andeq	r1, r1, r4, ror #29
   11a2c:	andeq	r1, r1, r4, ror #29
   11a30:	andeq	r1, r1, r4, ror #29
   11a34:	andeq	r1, r1, r8, lsl #24
   11a38:	andeq	r1, r1, r4, ror #29
   11a3c:	andeq	r1, r1, r4, ror #29
   11a40:	andeq	r1, r1, r4, ror #29
   11a44:	andeq	r1, r1, r4, ror #29
   11a48:	andeq	r1, r1, r4, ror #29
   11a4c:	andeq	r1, r1, r4, ror #29
   11a50:	andeq	r1, r1, r4, ror #29
   11a54:	andeq	r1, r1, r4, ror #29
   11a58:	andeq	r1, r1, r4, ror #29
   11a5c:	andeq	r1, r1, r4, ror #29
   11a60:	andeq	r1, r1, r4, ror #29
   11a64:	andeq	r1, r1, r4, ror #29
   11a68:	andeq	r1, r1, r4, ror #29
   11a6c:	andeq	r1, r1, r4, ror #29
   11a70:	andeq	r1, r1, r4, ror #29
   11a74:	andeq	r1, r1, r4, ror #29
   11a78:	andeq	r1, r1, r4, ror #29
   11a7c:	andeq	r1, r1, r4, ror #29
   11a80:	andeq	r1, r1, r4, ror #29
   11a84:	andeq	r1, r1, r4, ror #29
   11a88:	andeq	r1, r1, r4, ror #29
   11a8c:	andeq	r1, r1, r4, ror #29
   11a90:	andeq	r1, r1, r4, ror #29
   11a94:	andeq	r1, r1, r4, ror #29
   11a98:	andeq	r1, r1, r4, ror #29
   11a9c:	andeq	r1, r1, r4, ror #29
   11aa0:	andeq	r1, r1, r4, ror #29
   11aa4:	andeq	r1, r1, r4, ror #29
   11aa8:	andeq	r1, r1, r4, ror #29
   11aac:	andeq	r1, r1, r4, ror #29
   11ab0:	andeq	r1, r1, ip, asr #25
   11ab4:	andeq	r1, r1, ip, asr #27
   11ab8:	andeq	r1, r1, r4, ror #29
   11abc:	muleq	r1, r8, ip
   11ac0:	andeq	r1, r1, r4, ror #29
   11ac4:	andeq	r1, r1, r4, ror #29
   11ac8:	andeq	r1, r1, r0, lsr #28
   11acc:	andeq	r1, r1, r4, ror #29
   11ad0:	andeq	r1, r1, r4, ror #29
   11ad4:	andeq	r1, r1, r4, ror #29
   11ad8:	andeq	r1, r1, r4, ror #29
   11adc:	andeq	r1, r1, r4, ror #29
   11ae0:	andeq	r1, r1, r4, ror #29
   11ae4:	andeq	r1, r1, r4, ror #29
   11ae8:	andeq	r1, r1, r4, ror #29
   11aec:	andeq	r1, r1, r4, ror #29
   11af0:	strdeq	r1, [r1], -r0
   11af4:	andeq	r1, r1, r4, ror #29
   11af8:	andeq	r1, r1, r8, lsr #27
   11afc:	andeq	r1, r1, r4, ror #29
   11b00:	strdeq	r1, [r1], -r0
   11b04:	andeq	r1, r1, r4, ror #29
   11b08:	andeq	r1, r1, r4, ror #29
   11b0c:			; <UNDEFINED> instruction: 0x000118b4
   11b10:	cmp	sl, #2
   11b14:	bne	11b50 <putc_unlocked@plt+0x854>
   11b18:	mov	r1, #0
   11b1c:	movw	r3, #33156	; 0x8184
   11b20:	movt	r3, #2
   11b24:	str	r1, [r3]
   11b28:	sub	r1, r0, #48	; 0x30
   11b2c:	b	11b88 <putc_unlocked@plt+0x88c>
   11b30:	movw	r7, #33120	; 0x8160
   11b34:	movt	r7, #2
   11b38:	ldr	r1, [r7]
   11b3c:	cmp	r1, r5
   11b40:	bge	11e6c <putc_unlocked@plt+0xb70>
   11b44:	cmp	r9, #2
   11b48:	bne	11898 <putc_unlocked@plt+0x59c>
   11b4c:	b	11eec <putc_unlocked@plt+0xbf0>
   11b50:	movw	r3, #33156	; 0x8184
   11b54:	movt	r3, #2
   11b58:	ldr	r2, [r3]
   11b5c:	movw	r1, #39321	; 0x9999
   11b60:	movt	r1, #6553	; 0x1999
   11b64:	cmp	r2, r1
   11b68:	bls	11b74 <putc_unlocked@plt+0x878>
   11b6c:	mvn	r1, #0
   11b70:	b	11b88 <putc_unlocked@plt+0x88c>
   11b74:	add	r1, r2, r2, lsl #2
   11b78:	add	r1, r0, r1, lsl #1
   11b7c:	sub	r1, r1, #48	; 0x30
   11b80:	cmp	r1, r2
   11b84:	mvncc	r1, #0
   11b88:	str	r1, [r3]
   11b8c:	mov	sl, #1
   11b90:	mov	r7, r8
   11b94:	b	118b4 <putc_unlocked@plt+0x5b8>
   11b98:	cmp	r0, #256	; 0x100
   11b9c:	bne	11ee4 <putc_unlocked@plt+0xbe8>
   11ba0:	movw	r0, #33144	; 0x8178
   11ba4:	movt	r0, #2
   11ba8:	ldr	r1, [r0]
   11bac:	cmp	r1, #0
   11bb0:	beq	11e3c <putc_unlocked@plt+0xb40>
   11bb4:	movw	r0, #33036	; 0x810c
   11bb8:	movt	r0, #2
   11bbc:	ldr	r0, [r0]
   11bc0:	mov	r2, #4
   11bc4:	str	r2, [sp]
   11bc8:	str	r0, [sp, #4]
   11bcc:	mov	r0, #1
   11bd0:	str	r0, [sp, #8]
   11bd4:	movw	r0, #27608	; 0x6bd8
   11bd8:	movt	r0, #1
   11bdc:	movw	r2, #28724	; 0x7034
   11be0:	movt	r2, #1
   11be4:	movw	r7, #28708	; 0x7024
   11be8:	movt	r7, #1
   11bec:	mov	r3, r7
   11bf0:	bl	12ae8 <putc_unlocked@plt+0x17ec>
   11bf4:	ldr	r0, [r7, r0, lsl #2]
   11bf8:	movw	r1, #33176	; 0x8198
   11bfc:	movt	r1, #2
   11c00:	str	r0, [r1]
   11c04:	b	11e4c <putc_unlocked@plt+0xb50>
   11c08:	movw	r0, #33166	; 0x818e
   11c0c:	movt	r0, #2
   11c10:	mov	r2, #1
   11c14:	strb	r2, [r0]
   11c18:	mov	r0, #0
   11c1c:	movw	r1, #33165	; 0x818d
   11c20:	movt	r1, #2
   11c24:	strb	r0, [r1]
   11c28:	movw	r1, #33144	; 0x8178
   11c2c:	movt	r1, #2
   11c30:	ldr	r1, [r1]
   11c34:	cmp	r1, #0
   11c38:	beq	11c78 <putc_unlocked@plt+0x97c>
   11c3c:	movw	r0, #33036	; 0x810c
   11c40:	movt	r0, #2
   11c44:	ldr	r0, [r0]
   11c48:	mov	r3, #4
   11c4c:	str	r3, [sp]
   11c50:	stmib	sp, {r0, r2}
   11c54:	movw	r0, #27593	; 0x6bc9
   11c58:	movt	r0, #1
   11c5c:	movw	r2, #28692	; 0x7014
   11c60:	movt	r2, #1
   11c64:	movw	r7, #28680	; 0x7008
   11c68:	movt	r7, #1
   11c6c:	mov	r3, r7
   11c70:	bl	12ae8 <putc_unlocked@plt+0x17ec>
   11c74:	ldr	r0, [r7, r0, lsl #2]
   11c78:	movw	r1, #33172	; 0x8194
   11c7c:	movt	r1, #2
   11c80:	str	r0, [r1]
   11c84:	mov	r0, #1
   11c88:	str	r0, [sp, #12]
   11c8c:	mov	r0, #68	; 0x44
   11c90:	mov	r7, r8
   11c94:	b	118b4 <putc_unlocked@plt+0x5b8>
   11c98:	movw	r0, #33144	; 0x8178
   11c9c:	movt	r0, #2
   11ca0:	ldr	r0, [r0]
   11ca4:	movw	r1, #27616	; 0x6be0
   11ca8:	movt	r1, #1
   11cac:	bl	1202c <putc_unlocked@plt+0xd30>
   11cb0:	movw	r1, #33156	; 0x8184
   11cb4:	movt	r1, #2
   11cb8:	str	r0, [r1]
   11cbc:	mov	sl, #2
   11cc0:	mov	r0, #102	; 0x66
   11cc4:	mov	r7, r8
   11cc8:	b	118b4 <putc_unlocked@plt+0x5b8>
   11ccc:	mov	r0, #0
   11cd0:	movw	r1, #33168	; 0x8190
   11cd4:	movt	r1, #2
   11cd8:	strb	r0, [r1]
   11cdc:	mov	r0, #1
   11ce0:	str	r0, [sp, #12]
   11ce4:	mov	r0, #99	; 0x63
   11ce8:	mov	r7, r8
   11cec:	b	118b4 <putc_unlocked@plt+0x5b8>
   11cf0:	movw	r0, #33144	; 0x8178
   11cf4:	movt	r0, #2
   11cf8:	ldr	r0, [r0]
   11cfc:	movw	r1, #27649	; 0x6c01
   11d00:	movt	r1, #1
   11d04:	bl	1202c <putc_unlocked@plt+0xd30>
   11d08:	movw	r1, #33152	; 0x8180
   11d0c:	movt	r1, #2
   11d10:	str	r0, [r1]
   11d14:	mov	r0, #115	; 0x73
   11d18:	mov	r7, r8
   11d1c:	b	118b4 <putc_unlocked@plt+0x5b8>
   11d20:	movw	r0, #33144	; 0x8178
   11d24:	movt	r0, #2
   11d28:	ldr	r0, [r0]
   11d2c:	ldrb	r0, [r0]
   11d30:	cmp	r0, #43	; 0x2b
   11d34:	bne	11d7c <putc_unlocked@plt+0xa80>
   11d38:	bl	12008 <putc_unlocked@plt+0xd0c>
   11d3c:	cmp	r0, #0
   11d40:	bne	11d7c <putc_unlocked@plt+0xa80>
   11d44:	movw	r0, #33144	; 0x8178
   11d48:	movt	r0, #2
   11d4c:	ldr	r0, [r0]
   11d50:	movw	r1, #28312	; 0x6e98
   11d54:	movt	r1, #1
   11d58:	str	r1, [sp]
   11d5c:	mov	r1, #0
   11d60:	mov	r2, #10
   11d64:	add	r3, sp, #16
   11d68:	bl	1579c <putc_unlocked@plt+0x44a0>
   11d6c:	cmp	r0, #0
   11d70:	ldreq	r0, [sp, #20]
   11d74:	cmpeq	r0, #0
   11d78:	beq	11e58 <putc_unlocked@plt+0xb5c>
   11d7c:	cmp	r9, #2
   11d80:	beq	11f88 <putc_unlocked@plt+0xc8c>
   11d84:	movw	r0, #33144	; 0x8178
   11d88:	movt	r0, #2
   11d8c:	ldr	r0, [r0]
   11d90:	add	r1, sp, #28
   11d94:	str	r0, [r1, r9, lsl #2]
   11d98:	add	r9, r9, #1
   11d9c:	mov	r0, #1
   11da0:	mov	r7, r8
   11da4:	b	118b4 <putc_unlocked@plt+0x5b8>
   11da8:	mov	r0, #0
   11dac:	movw	r1, #33164	; 0x818c
   11db0:	movt	r1, #2
   11db4:	strb	r0, [r1]
   11db8:	mov	r0, #1
   11dbc:	str	r0, [sp, #12]
   11dc0:	mov	r0, #117	; 0x75
   11dc4:	mov	r7, r8
   11dc8:	b	118b4 <putc_unlocked@plt+0x5b8>
   11dcc:	mov	r0, #0
   11dd0:	movw	r1, #33165	; 0x818d
   11dd4:	movt	r1, #2
   11dd8:	strb	r0, [r1]
   11ddc:	mov	r0, #1
   11de0:	str	r0, [sp, #12]
   11de4:	mov	r0, #100	; 0x64
   11de8:	mov	r7, r8
   11dec:	b	118b4 <putc_unlocked@plt+0x5b8>
   11df0:	movw	r0, #33144	; 0x8178
   11df4:	movt	r0, #2
   11df8:	ldr	r0, [r0]
   11dfc:	movw	r1, #27681	; 0x6c21
   11e00:	movt	r1, #1
   11e04:	bl	1202c <putc_unlocked@plt+0xd30>
   11e08:	movw	r1, #33160	; 0x8188
   11e0c:	movt	r1, #2
   11e10:	str	r0, [r1]
   11e14:	mov	r0, #119	; 0x77
   11e18:	mov	r7, r8
   11e1c:	b	118b4 <putc_unlocked@plt+0x5b8>
   11e20:	mov	r0, #1
   11e24:	movw	r1, #33180	; 0x819c
   11e28:	movt	r1, #2
   11e2c:	strb	r0, [r1]
   11e30:	mov	r0, #105	; 0x69
   11e34:	mov	r7, r8
   11e38:	b	118b4 <putc_unlocked@plt+0x5b8>
   11e3c:	movw	r0, #33176	; 0x8198
   11e40:	movt	r0, #2
   11e44:	mov	r1, #3
   11e48:	str	r1, [r0]
   11e4c:	mov	r0, #256	; 0x100
   11e50:	mov	r7, r8
   11e54:	b	118b4 <putc_unlocked@plt+0x5b8>
   11e58:	ldr	r0, [sp, #16]
   11e5c:	movw	r1, #33152	; 0x8180
   11e60:	movt	r1, #2
   11e64:	str	r0, [r1]
   11e68:	b	11d9c <putc_unlocked@plt+0xaa0>
   11e6c:	movw	r0, #33176	; 0x8198
   11e70:	movt	r0, #2
   11e74:	ldr	r0, [r0]
   11e78:	cmp	r0, #0
   11e7c:	beq	11e90 <putc_unlocked@plt+0xb94>
   11e80:	ldr	r1, [sp, #12]
   11e84:	eor	r1, r1, #1
   11e88:	tst	r1, #1
   11e8c:	beq	11fc4 <putc_unlocked@plt+0xcc8>
   11e90:	movw	r1, #33168	; 0x8190
   11e94:	movt	r1, #2
   11e98:	ldrb	r1, [r1]
   11e9c:	cmp	r0, #0
   11ea0:	beq	11eac <putc_unlocked@plt+0xbb0>
   11ea4:	cmp	r1, #0
   11ea8:	beq	11fd0 <putc_unlocked@plt+0xcd4>
   11eac:	cmp	r1, #0
   11eb0:	bne	11ec8 <putc_unlocked@plt+0xbcc>
   11eb4:	movw	r0, #33166	; 0x818e
   11eb8:	movt	r0, #2
   11ebc:	ldrb	r0, [r0]
   11ec0:	cmp	r0, #1
   11ec4:	beq	11fdc <putc_unlocked@plt+0xce0>
   11ec8:	ldr	r0, [sp, #28]
   11ecc:	ldr	r1, [sp, #32]
   11ed0:	uxtb	r2, r8
   11ed4:	bl	120b4 <putc_unlocked@plt+0xdb8>
   11ed8:	mov	r0, #0
   11edc:	sub	sp, fp, #28
   11ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ee4:	mov	r0, #1
   11ee8:	bl	113f8 <putc_unlocked@plt+0xfc>
   11eec:	movw	r1, #27576	; 0x6bb8
   11ef0:	movt	r1, #1
   11ef4:	mov	r0, #0
   11ef8:	mov	r2, #5
   11efc:	bl	110ec <dcgettext@plt>
   11f00:	mov	r5, r0
   11f04:	ldr	r0, [r7]
   11f08:	ldr	r0, [r4, r0, lsl #2]
   11f0c:	bl	14ad0 <putc_unlocked@plt+0x37d4>
   11f10:	mov	r3, r0
   11f14:	mov	r0, #0
   11f18:	mov	r1, #0
   11f1c:	mov	r2, r5
   11f20:	bl	11170 <error@plt>
   11f24:	mov	r0, #1
   11f28:	bl	113f8 <putc_unlocked@plt+0xfc>
   11f2c:	movw	r0, #33032	; 0x8108
   11f30:	movt	r0, #2
   11f34:	ldr	r3, [r0]
   11f38:	movw	r0, #33140	; 0x8174
   11f3c:	movt	r0, #2
   11f40:	ldr	r0, [r0]
   11f44:	mov	r1, #0
   11f48:	movw	r2, #27750	; 0x6c66
   11f4c:	movt	r2, #1
   11f50:	movw	r7, #27730	; 0x6c52
   11f54:	movt	r7, #1
   11f58:	str	r7, [sp]
   11f5c:	str	r2, [sp, #4]
   11f60:	str	r1, [sp, #8]
   11f64:	movw	r1, #27507	; 0x6b73
   11f68:	movt	r1, #1
   11f6c:	movw	r2, #27716	; 0x6c44
   11f70:	movt	r2, #1
   11f74:	bl	152a0 <putc_unlocked@plt+0x3fa4>
   11f78:	mov	r0, #0
   11f7c:	bl	111f4 <exit@plt>
   11f80:	mov	r0, #0
   11f84:	bl	113f8 <putc_unlocked@plt+0xfc>
   11f88:	movw	r1, #27576	; 0x6bb8
   11f8c:	movt	r1, #1
   11f90:	mov	r0, #0
   11f94:	mov	r2, #5
   11f98:	bl	110ec <dcgettext@plt>
   11f9c:	mov	r4, r0
   11fa0:	movw	r0, #33144	; 0x8178
   11fa4:	movt	r0, #2
   11fa8:	ldr	r0, [r0]
   11fac:	bl	14ad0 <putc_unlocked@plt+0x37d4>
   11fb0:	mov	r3, r0
   11fb4:	mov	r0, #0
   11fb8:	mov	r1, #0
   11fbc:	mov	r2, r4
   11fc0:	b	11f20 <putc_unlocked@plt+0xc24>
   11fc4:	movw	r1, #27766	; 0x6c76
   11fc8:	movt	r1, #1
   11fcc:	b	11fe4 <putc_unlocked@plt+0xce8>
   11fd0:	movw	r1, #27813	; 0x6ca5
   11fd4:	movt	r1, #1
   11fd8:	b	11fe4 <putc_unlocked@plt+0xce8>
   11fdc:	movw	r1, #27864	; 0x6cd8
   11fe0:	movt	r1, #1
   11fe4:	mov	r0, #0
   11fe8:	mov	r2, #5
   11fec:	bl	110ec <dcgettext@plt>
   11ff0:	mov	r2, r0
   11ff4:	mov	r0, #0
   11ff8:	mov	r1, #0
   11ffc:	bl	11170 <error@plt>
   12000:	mov	r0, #1
   12004:	bl	113f8 <putc_unlocked@plt+0xfc>
   12008:	push	{fp, lr}
   1200c:	mov	fp, sp
   12010:	bl	13240 <putc_unlocked@plt+0x1f44>
   12014:	sub	r0, r0, #3504	; 0xdb0
   12018:	sub	r1, r0, #196608	; 0x30000
   1201c:	mov	r0, #0
   12020:	cmp	r1, #696	; 0x2b8
   12024:	movwls	r0, #1
   12028:	pop	{fp, pc}
   1202c:	push	{r4, r5, fp, lr}
   12030:	add	fp, sp, #8
   12034:	sub	sp, sp, #16
   12038:	mov	r5, r1
   1203c:	mov	r4, r0
   12040:	movw	r0, #28312	; 0x6e98
   12044:	movt	r0, #1
   12048:	str	r0, [sp]
   1204c:	add	r3, sp, #8
   12050:	mov	r0, r4
   12054:	mov	r1, #0
   12058:	mov	r2, #10
   1205c:	bl	1579c <putc_unlocked@plt+0x44a0>
   12060:	cmp	r0, #2
   12064:	bcs	12088 <putc_unlocked@plt+0xd8c>
   12068:	ldr	r1, [sp, #8]
   1206c:	ldr	r2, [sp, #12]
   12070:	mvn	r0, #0
   12074:	subs	r3, r1, r0
   12078:	sbcs	r2, r2, #0
   1207c:	movcc	r0, r1
   12080:	sub	sp, fp, #8
   12084:	pop	{r4, r5, fp, pc}
   12088:	mov	r0, #0
   1208c:	mov	r1, r5
   12090:	mov	r2, #5
   12094:	bl	110ec <dcgettext@plt>
   12098:	str	r0, [sp]
   1209c:	movw	r2, #28436	; 0x6f14
   120a0:	movt	r2, #1
   120a4:	mov	r0, #1
   120a8:	mov	r1, #0
   120ac:	mov	r3, r4
   120b0:	bl	11170 <error@plt>
   120b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b8:	add	fp, sp, #28
   120bc:	sub	sp, sp, #52	; 0x34
   120c0:	str	r2, [sp, #24]
   120c4:	mov	r4, r1
   120c8:	mov	r5, r0
   120cc:	movw	r1, #29009	; 0x7151
   120d0:	movt	r1, #1
   120d4:	bl	11068 <strcmp@plt>
   120d8:	cmp	r0, #0
   120dc:	beq	12104 <putc_unlocked@plt+0xe08>
   120e0:	movw	r0, #33136	; 0x8170
   120e4:	movt	r0, #2
   120e8:	ldr	r2, [r0]
   120ec:	movw	r1, #28915	; 0x70f3
   120f0:	movt	r1, #1
   120f4:	mov	r0, r5
   120f8:	bl	12e70 <putc_unlocked@plt+0x1b74>
   120fc:	cmp	r0, #0
   12100:	beq	125c8 <putc_unlocked@plt+0x12cc>
   12104:	movw	r1, #29009	; 0x7151
   12108:	movt	r1, #1
   1210c:	mov	r0, r4
   12110:	bl	11068 <strcmp@plt>
   12114:	cmp	r0, #0
   12118:	beq	12140 <putc_unlocked@plt+0xe44>
   1211c:	movw	r0, #33140	; 0x8174
   12120:	movt	r0, #2
   12124:	ldr	r2, [r0]
   12128:	movw	r1, #28443	; 0x6f1b
   1212c:	movt	r1, #1
   12130:	mov	r0, r4
   12134:	bl	12e70 <putc_unlocked@plt+0x1b74>
   12138:	cmp	r0, #0
   1213c:	beq	125f8 <putc_unlocked@plt+0x12fc>
   12140:	str	r5, [sp]
   12144:	movw	r8, #33136	; 0x8170
   12148:	movt	r8, #2
   1214c:	ldr	r0, [r8]
   12150:	mov	r1, #2
   12154:	bl	12d04 <putc_unlocked@plt+0x1a08>
   12158:	add	r6, sp, #40	; 0x28
   1215c:	mov	r0, r6
   12160:	bl	130ec <putc_unlocked@plt+0x1df0>
   12164:	add	r9, sp, #28
   12168:	mov	r0, r9
   1216c:	bl	130ec <putc_unlocked@plt+0x1df0>
   12170:	movw	r0, #33165	; 0x818d
   12174:	movt	r0, #2
   12178:	ldrb	r0, [r0]
   1217c:	cmp	r0, #1
   12180:	bne	122f8 <putc_unlocked@plt+0xffc>
   12184:	movw	r0, #33164	; 0x818c
   12188:	movt	r0, #2
   1218c:	ldrb	r0, [r0]
   12190:	cmp	r0, #1
   12194:	bne	122f8 <putc_unlocked@plt+0xffc>
   12198:	movw	r0, #33168	; 0x8190
   1219c:	movt	r0, #2
   121a0:	ldrb	r0, [r0]
   121a4:	cmp	r0, #0
   121a8:	beq	122f8 <putc_unlocked@plt+0xffc>
   121ac:	ldr	r0, [r8]
   121b0:	bl	112cc <feof_unlocked@plt>
   121b4:	mov	r1, #0
   121b8:	str	r1, [sp, #20]
   121bc:	cmp	r0, #0
   121c0:	mov	r4, r8
   121c4:	bne	1255c <putc_unlocked@plt+0x1260>
   121c8:	mov	sl, #0
   121cc:	add	r5, sp, #40	; 0x28
   121d0:	mov	r0, #0
   121d4:	str	r0, [sp, #20]
   121d8:	ldr	r1, [r4]
   121dc:	mov	r0, r5
   121e0:	ldr	r2, [sp, #24]
   121e4:	bl	13108 <putc_unlocked@plt+0x1e0c>
   121e8:	cmp	r0, #0
   121ec:	beq	12554 <putc_unlocked@plt+0x1258>
   121f0:	mov	r0, r5
   121f4:	bl	12628 <putc_unlocked@plt+0x132c>
   121f8:	mov	r6, r0
   121fc:	ldmib	r5, {r0, r1}
   12200:	mvn	r2, r6
   12204:	add	r0, r0, r2
   12208:	add	r4, r0, r1
   1220c:	cmp	sl, #0
   12210:	beq	12230 <putc_unlocked@plt+0xf34>
   12214:	mov	r0, r6
   12218:	mov	r1, sl
   1221c:	mov	r2, r4
   12220:	mov	r3, r8
   12224:	bl	126e0 <putc_unlocked@plt+0x13e4>
   12228:	mov	r7, r0
   1222c:	b	12234 <putc_unlocked@plt+0xf38>
   12230:	mov	r7, #1
   12234:	cmp	r7, #0
   12238:	movwne	r0, #33176	; 0x8198
   1223c:	movtne	r0, #2
   12240:	ldrne	r0, [r0]
   12244:	cmpne	r0, #0
   12248:	beq	12260 <putc_unlocked@plt+0xf64>
   1224c:	cmp	r0, #1
   12250:	cmpne	r0, #4
   12254:	bne	122d4 <putc_unlocked@plt+0xfd8>
   12258:	ldr	r0, [sp, #24]
   1225c:	bl	112e4 <putchar_unlocked@plt>
   12260:	mvn	r0, r7
   12264:	movw	r1, #33176	; 0x8198
   12268:	movt	r1, #2
   1226c:	ldr	r1, [r1]
   12270:	clz	r1, r1
   12274:	lsr	r1, r1, #5
   12278:	tst	r0, r1
   1227c:	bne	122b8 <putc_unlocked@plt+0xfbc>
   12280:	movw	r0, #33140	; 0x8174
   12284:	movt	r0, #2
   12288:	ldr	r3, [r0]
   1228c:	ldr	r2, [r5, #4]
   12290:	ldr	r0, [r5, #8]
   12294:	mov	r1, #1
   12298:	str	r1, [sp, #20]
   1229c:	mov	r1, #1
   122a0:	bl	110c8 <fwrite_unlocked@plt>
   122a4:	mov	r8, r4
   122a8:	mov	sl, r6
   122ac:	mov	r0, r5
   122b0:	mov	r5, r9
   122b4:	mov	r9, r0
   122b8:	movw	r4, #33136	; 0x8170
   122bc:	movt	r4, #2
   122c0:	ldr	r0, [r4]
   122c4:	bl	112cc <feof_unlocked@plt>
   122c8:	cmp	r0, #0
   122cc:	beq	121d8 <putc_unlocked@plt+0xedc>
   122d0:	b	1255c <putc_unlocked@plt+0x1260>
   122d4:	orr	r0, r0, #1
   122d8:	subs	r0, r0, #3
   122dc:	movwne	r0, #1
   122e0:	ldr	r1, [sp, #20]
   122e4:	mvn	r1, r1
   122e8:	orr	r0, r1, r0
   122ec:	tst	r0, #1
   122f0:	beq	12258 <putc_unlocked@plt+0xf5c>
   122f4:	b	12260 <putc_unlocked@plt+0xf64>
   122f8:	ldr	r1, [r8]
   122fc:	add	r7, sp, #28
   12300:	mov	r0, r7
   12304:	ldr	r2, [sp, #24]
   12308:	bl	13108 <putc_unlocked@plt+0x1e0c>
   1230c:	cmp	r0, #0
   12310:	beq	1251c <putc_unlocked@plt+0x1220>
   12314:	mov	r0, r7
   12318:	bl	12628 <putc_unlocked@plt+0x132c>
   1231c:	mov	r9, r0
   12320:	mvn	r0, r0
   12324:	ldr	r1, [sp, #32]
   12328:	ldr	r2, [sp, #36]	; 0x24
   1232c:	add	r0, r1, r0
   12330:	add	r0, r0, r2
   12334:	str	r0, [sp, #12]
   12338:	mov	r0, #0
   1233c:	str	r0, [sp, #20]
   12340:	mov	r0, #1
   12344:	str	r0, [sp, #4]
   12348:	mov	r4, #0
   1234c:	mov	r5, r7
   12350:	ldr	r0, [r8]
   12354:	bl	112cc <feof_unlocked@plt>
   12358:	cmp	r0, #0
   1235c:	bne	12504 <putc_unlocked@plt+0x1208>
   12360:	ldr	r1, [r8]
   12364:	mov	r0, r6
   12368:	ldr	r2, [sp, #24]
   1236c:	bl	13108 <putc_unlocked@plt+0x1e0c>
   12370:	cmp	r0, #0
   12374:	beq	12418 <putc_unlocked@plt+0x111c>
   12378:	mov	r0, r6
   1237c:	bl	12628 <putc_unlocked@plt+0x132c>
   12380:	mov	sl, r0
   12384:	ldr	r0, [r6, #4]
   12388:	str	r6, [sp, #16]
   1238c:	ldr	r1, [r6, #8]
   12390:	mvn	r2, sl
   12394:	add	r0, r0, r2
   12398:	add	r6, r0, r1
   1239c:	mov	r0, sl
   123a0:	str	r9, [sp, #8]
   123a4:	mov	r1, r9
   123a8:	mov	r2, r6
   123ac:	ldr	r3, [sp, #12]
   123b0:	bl	126e0 <putc_unlocked@plt+0x13e4>
   123b4:	mov	r9, r0
   123b8:	eor	r8, r0, #1
   123bc:	ldr	r0, [sp, #20]
   123c0:	adds	r0, r0, r8
   123c4:	adc	r1, r4, #0
   123c8:	and	r2, r0, r1
   123cc:	subs	r7, r0, #1
   123d0:	sbc	r4, r1, #0
   123d4:	cmn	r2, #1
   123d8:	movne	r4, r1
   123dc:	movne	r7, r0
   123e0:	movw	r0, #33172	; 0x8194
   123e4:	movt	r0, #2
   123e8:	ldr	r0, [r0]
   123ec:	cmp	r0, #0
   123f0:	beq	1243c <putc_unlocked@plt+0x1140>
   123f4:	cmp	r9, #0
   123f8:	beq	12448 <putc_unlocked@plt+0x114c>
   123fc:	orr	r0, r7, r4
   12400:	clz	r0, r0
   12404:	lsr	r0, r0, #5
   12408:	ldr	r1, [sp, #4]
   1240c:	and	r1, r1, r0
   12410:	str	r1, [sp, #4]
   12414:	b	1248c <putc_unlocked@plt+0x1190>
   12418:	ldr	r0, [r8]
   1241c:	bl	11158 <ferror_unlocked@plt>
   12420:	cmp	r0, #0
   12424:	mov	r0, #6
   12428:	movweq	r0, #8
   1242c:	mov	r7, r5
   12430:	cmp	r0, #0
   12434:	beq	1234c <putc_unlocked@plt+0x1050>
   12438:	b	124f8 <putc_unlocked@plt+0x11fc>
   1243c:	cmp	r9, #0
   12440:	beq	12474 <putc_unlocked@plt+0x1178>
   12444:	b	1248c <putc_unlocked@plt+0x1190>
   12448:	eor	r1, r7, #1
   1244c:	orrs	r1, r1, r4
   12450:	bne	12474 <putc_unlocked@plt+0x1178>
   12454:	cmp	r0, #1
   12458:	beq	1246c <putc_unlocked@plt+0x1170>
   1245c:	cmp	r0, #2
   12460:	ldreq	r0, [sp, #4]
   12464:	tsteq	r0, #1
   12468:	bne	12474 <putc_unlocked@plt+0x1178>
   1246c:	ldr	r0, [sp, #24]
   12470:	bl	112e4 <putchar_unlocked@plt>
   12474:	movw	r0, #33166	; 0x818e
   12478:	movt	r0, #2
   1247c:	ldrb	r1, [r0]
   12480:	mov	r0, #0
   12484:	cmp	r1, #1
   12488:	bne	124d8 <putc_unlocked@plt+0x11dc>
   1248c:	mov	r0, r5
   12490:	mov	r1, r8
   12494:	mov	r2, r7
   12498:	mov	r3, r4
   1249c:	bl	12750 <putc_unlocked@plt+0x1454>
   124a0:	cmp	r9, #0
   124a4:	movwne	r7, #0
   124a8:	str	r7, [sp, #20]
   124ac:	movwne	r4, #0
   124b0:	mov	r0, #0
   124b4:	mov	r9, sl
   124b8:	str	r6, [sp, #12]
   124bc:	ldr	r7, [sp, #16]
   124c0:	mov	r6, r5
   124c4:	movw	r8, #33136	; 0x8170
   124c8:	movt	r8, #2
   124cc:	cmp	r0, #0
   124d0:	beq	1234c <putc_unlocked@plt+0x1050>
   124d4:	b	124f8 <putc_unlocked@plt+0x11fc>
   124d8:	str	r7, [sp, #20]
   124dc:	mov	r7, r5
   124e0:	movw	r8, #33136	; 0x8170
   124e4:	movt	r8, #2
   124e8:	ldr	r6, [sp, #16]
   124ec:	ldr	r9, [sp, #8]
   124f0:	cmp	r0, #0
   124f4:	beq	1234c <putc_unlocked@plt+0x1050>
   124f8:	cmp	r0, #8
   124fc:	beq	12508 <putc_unlocked@plt+0x120c>
   12500:	b	1251c <putc_unlocked@plt+0x1220>
   12504:	mov	r7, r5
   12508:	mov	r0, r7
   1250c:	mov	r1, #0
   12510:	ldr	r2, [sp, #20]
   12514:	mov	r3, r4
   12518:	bl	12750 <putc_unlocked@plt+0x1454>
   1251c:	ldr	r0, [r8]
   12520:	bl	11158 <ferror_unlocked@plt>
   12524:	cmp	r0, #0
   12528:	bne	12590 <putc_unlocked@plt+0x1294>
   1252c:	ldr	r0, [r8]
   12530:	bl	12d40 <putc_unlocked@plt+0x1a44>
   12534:	cmp	r0, #0
   12538:	bne	12590 <putc_unlocked@plt+0x1294>
   1253c:	ldr	r0, [sp, #48]	; 0x30
   12540:	bl	12e48 <putc_unlocked@plt+0x1b4c>
   12544:	ldr	r0, [sp, #36]	; 0x24
   12548:	bl	12e48 <putc_unlocked@plt+0x1b4c>
   1254c:	sub	sp, fp, #28
   12550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12554:	movw	r4, #33136	; 0x8170
   12558:	movt	r4, #2
   1255c:	movw	r0, #33176	; 0x8198
   12560:	movt	r0, #2
   12564:	ldr	r0, [r0]
   12568:	cmp	r0, #4
   1256c:	mov	r8, r4
   12570:	cmpne	r0, #2
   12574:	bne	1251c <putc_unlocked@plt+0x1220>
   12578:	ldr	r0, [sp, #20]
   1257c:	tst	r0, #1
   12580:	beq	1251c <putc_unlocked@plt+0x1220>
   12584:	ldr	r0, [sp, #24]
   12588:	bl	112e4 <putchar_unlocked@plt>
   1258c:	b	1251c <putc_unlocked@plt+0x1220>
   12590:	movw	r1, #28445	; 0x6f1d
   12594:	movt	r1, #1
   12598:	mov	r0, #0
   1259c:	mov	r2, #5
   125a0:	bl	110ec <dcgettext@plt>
   125a4:	mov	r4, r0
   125a8:	mov	r0, #4
   125ac:	ldr	r1, [sp]
   125b0:	bl	148dc <putc_unlocked@plt+0x35e0>
   125b4:	mov	r3, r0
   125b8:	mov	r0, #1
   125bc:	mov	r1, #0
   125c0:	mov	r2, r4
   125c4:	bl	11170 <error@plt>
   125c8:	bl	11218 <__errno_location@plt>
   125cc:	ldr	r4, [r0]
   125d0:	mov	r0, #0
   125d4:	mov	r1, #3
   125d8:	mov	r2, r5
   125dc:	bl	14990 <putc_unlocked@plt+0x3694>
   125e0:	mov	r3, r0
   125e4:	movw	r2, #28902	; 0x70e6
   125e8:	movt	r2, #1
   125ec:	mov	r0, #1
   125f0:	mov	r1, r4
   125f4:	bl	11170 <error@plt>
   125f8:	bl	11218 <__errno_location@plt>
   125fc:	ldr	r5, [r0]
   12600:	mov	r0, #0
   12604:	mov	r1, #3
   12608:	mov	r2, r4
   1260c:	bl	14990 <putc_unlocked@plt+0x3694>
   12610:	mov	r3, r0
   12614:	movw	r2, #28902	; 0x70e6
   12618:	movt	r2, #1
   1261c:	mov	r0, #1
   12620:	mov	r1, r5
   12624:	bl	11170 <error@plt>
   12628:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1262c:	add	fp, sp, #24
   12630:	ldmib	r0, {r1, r4}
   12634:	subs	r6, r1, #1
   12638:	mov	r5, #0
   1263c:	movwne	r0, #33156	; 0x8184
   12640:	movtne	r0, #2
   12644:	ldrne	r1, [r0]
   12648:	cmpne	r1, #0
   1264c:	bne	12674 <putc_unlocked@plt+0x1378>
   12650:	sub	r0, r6, r5
   12654:	movw	r1, #33152	; 0x8180
   12658:	movt	r1, #2
   1265c:	ldr	r1, [r1]
   12660:	cmp	r1, r0
   12664:	movcc	r0, r1
   12668:	add	r0, r0, r5
   1266c:	add	r0, r4, r0
   12670:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12674:	ldr	r8, [r0]
   12678:	mov	r5, #0
   1267c:	mov	r7, #0
   12680:	cmp	r5, r6
   12684:	bcc	12698 <putc_unlocked@plt+0x139c>
   12688:	b	126b0 <putc_unlocked@plt+0x13b4>
   1268c:	add	r5, r5, #1
   12690:	cmp	r5, r6
   12694:	bcs	126b0 <putc_unlocked@plt+0x13b4>
   12698:	ldrb	r0, [r4, r5]
   1269c:	bl	127f4 <putc_unlocked@plt+0x14f8>
   126a0:	cmp	r0, #0
   126a4:	bne	1268c <putc_unlocked@plt+0x1390>
   126a8:	b	126b0 <putc_unlocked@plt+0x13b4>
   126ac:	add	r5, r5, #1
   126b0:	cmp	r5, r6
   126b4:	bcs	126c8 <putc_unlocked@plt+0x13cc>
   126b8:	ldrb	r0, [r4, r5]
   126bc:	bl	127f4 <putc_unlocked@plt+0x14f8>
   126c0:	cmp	r0, #0
   126c4:	beq	126ac <putc_unlocked@plt+0x13b0>
   126c8:	cmp	r6, r5
   126cc:	bls	12650 <putc_unlocked@plt+0x1354>
   126d0:	add	r7, r7, #1
   126d4:	cmp	r7, r8
   126d8:	bcc	12690 <putc_unlocked@plt+0x1394>
   126dc:	b	12650 <putc_unlocked@plt+0x1354>
   126e0:	push	{fp, lr}
   126e4:	mov	fp, sp
   126e8:	movw	ip, #33160	; 0x8188
   126ec:	movt	ip, #2
   126f0:	ldr	ip, [ip]
   126f4:	cmp	ip, r3
   126f8:	movcc	r3, ip
   126fc:	cmp	ip, r2
   12700:	movcc	r2, ip
   12704:	movw	ip, #33180	; 0x819c
   12708:	movt	ip, #2
   1270c:	ldrb	ip, [ip]
   12710:	cmp	ip, #1
   12714:	bne	1272c <putc_unlocked@plt+0x1430>
   12718:	mov	ip, #1
   1271c:	cmp	r2, r3
   12720:	bne	12748 <putc_unlocked@plt+0x144c>
   12724:	bl	131e8 <putc_unlocked@plt+0x1eec>
   12728:	b	1273c <putc_unlocked@plt+0x1440>
   1272c:	mov	ip, #1
   12730:	cmp	r2, r3
   12734:	bne	12748 <putc_unlocked@plt+0x144c>
   12738:	bl	110d4 <memcmp@plt>
   1273c:	mov	ip, r0
   12740:	cmp	r0, #0
   12744:	movwne	ip, #1
   12748:	mov	r0, ip
   1274c:	pop	{fp, pc}
   12750:	push	{r4, sl, fp, lr}
   12754:	add	fp, sp, #8
   12758:	mov	r4, r0
   1275c:	orrs	r0, r2, r3
   12760:	beq	12784 <putc_unlocked@plt+0x1488>
   12764:	cmp	r1, #0
   12768:	beq	12790 <putc_unlocked@plt+0x1494>
   1276c:	movw	r0, #33166	; 0x818e
   12770:	movt	r0, #2
   12774:	ldrb	r0, [r0]
   12778:	cmp	r0, #1
   1277c:	popne	{r4, sl, fp, pc}
   12780:	b	127a4 <putc_unlocked@plt+0x14a8>
   12784:	movw	r0, #33165	; 0x818d
   12788:	movt	r0, #2
   1278c:	b	12798 <putc_unlocked@plt+0x149c>
   12790:	movw	r0, #33164	; 0x818c
   12794:	movt	r0, #2
   12798:	ldrb	r0, [r0]
   1279c:	cmp	r0, #0
   127a0:	beq	127f0 <putc_unlocked@plt+0x14f4>
   127a4:	movw	r0, #33168	; 0x8190
   127a8:	movt	r0, #2
   127ac:	ldrb	r0, [r0]
   127b0:	cmp	r0, #0
   127b4:	bne	127d0 <putc_unlocked@plt+0x14d4>
   127b8:	adds	r2, r2, #1
   127bc:	adc	r3, r3, #0
   127c0:	movw	r1, #28462	; 0x6f2e
   127c4:	movt	r1, #1
   127c8:	mov	r0, #1
   127cc:	bl	1123c <__printf_chk@plt>
   127d0:	movw	r0, #33140	; 0x8174
   127d4:	movt	r0, #2
   127d8:	ldr	r3, [r0]
   127dc:	ldr	r2, [r4, #4]
   127e0:	ldr	r0, [r4, #8]
   127e4:	mov	r1, #1
   127e8:	pop	{r4, sl, fp, lr}
   127ec:	b	110c8 <fwrite_unlocked@plt>
   127f0:	pop	{r4, sl, fp, pc}
   127f4:	push	{r4, sl, fp, lr}
   127f8:	add	fp, sp, #8
   127fc:	mov	r4, r0
   12800:	bl	111e8 <__ctype_b_loc@plt>
   12804:	ldr	r0, [r0]
   12808:	ldrb	r0, [r0, r4, lsl #1]
   1280c:	and	r0, r0, #1
   12810:	sub	r1, r4, #10
   12814:	clz	r1, r1
   12818:	lsr	r1, r1, #5
   1281c:	orr	r0, r1, r0
   12820:	pop	{r4, sl, fp, pc}
   12824:	mov	r0, #1
   12828:	b	113f8 <putc_unlocked@plt+0xfc>
   1282c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12830:	add	fp, sp, #28
   12834:	sub	sp, sp, #12
   12838:	mov	r4, r3
   1283c:	mov	r6, r2
   12840:	mov	r5, r1
   12844:	mov	sl, r0
   12848:	bl	11200 <strlen@plt>
   1284c:	ldr	r8, [r5]
   12850:	cmp	r8, #0
   12854:	beq	12910 <putc_unlocked@plt+0x1614>
   12858:	mov	r7, r0
   1285c:	add	r9, r5, #4
   12860:	mov	r0, #0
   12864:	str	r0, [sp]
   12868:	mvn	r0, #0
   1286c:	str	r0, [sp, #8]
   12870:	str	r6, [sp, #4]
   12874:	mov	r5, #0
   12878:	mov	r0, r8
   1287c:	mov	r1, sl
   12880:	mov	r2, r7
   12884:	bl	112b4 <strncmp@plt>
   12888:	cmp	r0, #0
   1288c:	bne	128e4 <putc_unlocked@plt+0x15e8>
   12890:	mov	r0, r8
   12894:	bl	11200 <strlen@plt>
   12898:	cmp	r0, r7
   1289c:	beq	12914 <putc_unlocked@plt+0x1618>
   128a0:	ldr	r0, [sp, #8]
   128a4:	cmn	r0, #1
   128a8:	beq	128e0 <putc_unlocked@plt+0x15e4>
   128ac:	ldr	r0, [sp, #4]
   128b0:	cmp	r0, #0
   128b4:	beq	128d4 <putc_unlocked@plt+0x15d8>
   128b8:	ldr	r1, [sp, #8]
   128bc:	mla	r0, r1, r4, r0
   128c0:	mov	r1, r6
   128c4:	mov	r2, r4
   128c8:	bl	110d4 <memcmp@plt>
   128cc:	cmp	r0, #0
   128d0:	beq	128e4 <putc_unlocked@plt+0x15e8>
   128d4:	mov	r0, #1
   128d8:	str	r0, [sp]
   128dc:	b	128e4 <putc_unlocked@plt+0x15e8>
   128e0:	str	r5, [sp, #8]
   128e4:	add	r6, r6, r4
   128e8:	ldr	r8, [r9, r5, lsl #2]
   128ec:	add	r5, r5, #1
   128f0:	cmp	r8, #0
   128f4:	bne	12878 <putc_unlocked@plt+0x157c>
   128f8:	ldr	r0, [sp]
   128fc:	tst	r0, #1
   12900:	ldr	r0, [sp, #8]
   12904:	mvnne	r0, #1
   12908:	sub	sp, fp, #28
   1290c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12910:	mvn	r5, #0
   12914:	mov	r0, r5
   12918:	sub	sp, fp, #28
   1291c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12920:	push	{r4, r5, r6, r7, fp, lr}
   12924:	add	fp, sp, #16
   12928:	mov	r5, r0
   1292c:	ldr	r0, [r1]
   12930:	mvn	r4, #0
   12934:	cmp	r0, #0
   12938:	beq	12968 <putc_unlocked@plt+0x166c>
   1293c:	add	r7, r1, #4
   12940:	mov	r6, #0
   12944:	mov	r1, r5
   12948:	bl	11068 <strcmp@plt>
   1294c:	cmp	r0, #0
   12950:	moveq	r0, r6
   12954:	popeq	{r4, r5, r6, r7, fp, pc}
   12958:	ldr	r0, [r7, r6, lsl #2]
   1295c:	add	r6, r6, #1
   12960:	cmp	r0, #0
   12964:	bne	12944 <putc_unlocked@plt+0x1648>
   12968:	mov	r0, r4
   1296c:	pop	{r4, r5, r6, r7, fp, pc}
   12970:	push	{r4, r5, r6, sl, fp, lr}
   12974:	add	fp, sp, #16
   12978:	sub	sp, sp, #8
   1297c:	mov	r4, r1
   12980:	mov	r5, r0
   12984:	movw	r0, #28815	; 0x708f
   12988:	movt	r0, #1
   1298c:	movw	r1, #28842	; 0x70aa
   12990:	movt	r1, #1
   12994:	cmn	r2, #1
   12998:	moveq	r1, r0
   1299c:	mov	r0, #0
   129a0:	mov	r2, #5
   129a4:	bl	110ec <dcgettext@plt>
   129a8:	mov	r6, r0
   129ac:	mov	r0, #0
   129b0:	mov	r1, #8
   129b4:	mov	r2, r4
   129b8:	bl	1482c <putc_unlocked@plt+0x3530>
   129bc:	mov	r4, r0
   129c0:	mov	r0, #1
   129c4:	mov	r1, r5
   129c8:	bl	14ac8 <putc_unlocked@plt+0x37cc>
   129cc:	str	r0, [sp]
   129d0:	mov	r0, #0
   129d4:	mov	r1, #0
   129d8:	mov	r2, r6
   129dc:	mov	r3, r4
   129e0:	bl	11170 <error@plt>
   129e4:	sub	sp, fp, #16
   129e8:	pop	{r4, r5, r6, sl, fp, pc}
   129ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129f0:	add	fp, sp, #28
   129f4:	sub	sp, sp, #4
   129f8:	mov	sl, r2
   129fc:	mov	r5, r1
   12a00:	mov	r7, r0
   12a04:	mov	r8, #0
   12a08:	movw	r1, #28871	; 0x70c7
   12a0c:	movt	r1, #1
   12a10:	mov	r0, #0
   12a14:	mov	r2, #5
   12a18:	bl	110ec <dcgettext@plt>
   12a1c:	movw	r4, #33128	; 0x8168
   12a20:	movt	r4, #2
   12a24:	ldr	r1, [r4]
   12a28:	bl	11050 <fputs_unlocked@plt>
   12a2c:	ldr	r6, [r7]
   12a30:	cmp	r6, #0
   12a34:	beq	12ad4 <putc_unlocked@plt+0x17d8>
   12a38:	add	r9, r7, #4
   12a3c:	mov	r7, #0
   12a40:	str	sl, [sp]
   12a44:	cmp	r8, #0
   12a48:	beq	12a64 <putc_unlocked@plt+0x1768>
   12a4c:	mov	r0, r7
   12a50:	mov	r1, r5
   12a54:	mov	r2, sl
   12a58:	bl	110d4 <memcmp@plt>
   12a5c:	cmp	r0, #0
   12a60:	beq	12a90 <putc_unlocked@plt+0x1794>
   12a64:	ldr	r7, [r4]
   12a68:	mov	r0, r6
   12a6c:	bl	14ad0 <putc_unlocked@plt+0x37d4>
   12a70:	mov	r3, r0
   12a74:	mov	r0, r7
   12a78:	mov	r1, #1
   12a7c:	movw	r2, #28892	; 0x70dc
   12a80:	movt	r2, #1
   12a84:	bl	11260 <__fprintf_chk@plt>
   12a88:	mov	r7, r5
   12a8c:	b	12ac0 <putc_unlocked@plt+0x17c4>
   12a90:	mov	sl, r9
   12a94:	ldr	r9, [r4]
   12a98:	mov	r0, r6
   12a9c:	bl	14ad0 <putc_unlocked@plt+0x37d4>
   12aa0:	mov	r3, r0
   12aa4:	mov	r0, r9
   12aa8:	mov	r9, sl
   12aac:	ldr	sl, [sp]
   12ab0:	mov	r1, #1
   12ab4:	movw	r2, #28900	; 0x70e4
   12ab8:	movt	r2, #1
   12abc:	bl	11260 <__fprintf_chk@plt>
   12ac0:	add	r5, r5, sl
   12ac4:	ldr	r6, [r9, -r8, lsl #2]
   12ac8:	sub	r8, r8, #1
   12acc:	cmp	r6, #0
   12ad0:	bne	12a44 <putc_unlocked@plt+0x1748>
   12ad4:	ldr	r1, [r4]
   12ad8:	mov	r0, #10
   12adc:	sub	sp, fp, #28
   12ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ae4:	b	112fc <putc_unlocked@plt>
   12ae8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12aec:	add	fp, sp, #24
   12af0:	mov	r4, r3
   12af4:	mov	r5, r2
   12af8:	mov	r7, r1
   12afc:	mov	r6, r0
   12b00:	ldr	r8, [fp, #8]
   12b04:	ldr	r0, [fp, #16]
   12b08:	cmp	r0, #0
   12b0c:	beq	12b28 <putc_unlocked@plt+0x182c>
   12b10:	mov	r0, r7
   12b14:	mov	r1, r5
   12b18:	mov	r2, r4
   12b1c:	mov	r3, r8
   12b20:	bl	1282c <putc_unlocked@plt+0x1530>
   12b24:	b	12b34 <putc_unlocked@plt+0x1838>
   12b28:	mov	r0, r7
   12b2c:	mov	r1, r5
   12b30:	bl	12920 <putc_unlocked@plt+0x1624>
   12b34:	mov	r2, r0
   12b38:	cmn	r0, #1
   12b3c:	ble	12b48 <putc_unlocked@plt+0x184c>
   12b40:	mov	r0, r2
   12b44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12b48:	ldr	r9, [fp, #12]
   12b4c:	mov	r0, r6
   12b50:	mov	r1, r7
   12b54:	bl	12970 <putc_unlocked@plt+0x1674>
   12b58:	mov	r0, r5
   12b5c:	mov	r1, r4
   12b60:	mov	r2, r8
   12b64:	bl	129ec <putc_unlocked@plt+0x16f0>
   12b68:	blx	r9
   12b6c:	mvn	r2, #0
   12b70:	mov	r0, r2
   12b74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12b78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b7c:	add	fp, sp, #24
   12b80:	ldr	r6, [r1]
   12b84:	cmp	r6, #0
   12b88:	beq	12bec <putc_unlocked@plt+0x18f0>
   12b8c:	mov	r4, r3
   12b90:	mov	r7, r2
   12b94:	mov	r8, r1
   12b98:	mov	r9, r0
   12b9c:	mov	r1, r2
   12ba0:	mov	r2, r3
   12ba4:	bl	110d4 <memcmp@plt>
   12ba8:	cmp	r0, #0
   12bac:	beq	12be4 <putc_unlocked@plt+0x18e8>
   12bb0:	add	r7, r7, r4
   12bb4:	add	r5, r8, #4
   12bb8:	ldr	r6, [r5]
   12bbc:	cmp	r6, #0
   12bc0:	beq	12bec <putc_unlocked@plt+0x18f0>
   12bc4:	mov	r0, r9
   12bc8:	mov	r1, r7
   12bcc:	mov	r2, r4
   12bd0:	bl	110d4 <memcmp@plt>
   12bd4:	add	r7, r7, r4
   12bd8:	add	r5, r5, #4
   12bdc:	cmp	r0, #0
   12be0:	bne	12bb8 <putc_unlocked@plt+0x18bc>
   12be4:	mov	r0, r6
   12be8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12bec:	mov	r6, #0
   12bf0:	mov	r0, r6
   12bf4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12bf8:	movw	r1, #33184	; 0x81a0
   12bfc:	movt	r1, #2
   12c00:	str	r0, [r1]
   12c04:	bx	lr
   12c08:	movw	r1, #33188	; 0x81a4
   12c0c:	movt	r1, #2
   12c10:	strb	r0, [r1]
   12c14:	bx	lr
   12c18:	push	{r4, r5, r6, sl, fp, lr}
   12c1c:	add	fp, sp, #16
   12c20:	sub	sp, sp, #8
   12c24:	movw	r0, #33140	; 0x8174
   12c28:	movt	r0, #2
   12c2c:	ldr	r0, [r0]
   12c30:	bl	160cc <putc_unlocked@plt+0x4dd0>
   12c34:	cmp	r0, #0
   12c38:	beq	12c60 <putc_unlocked@plt+0x1964>
   12c3c:	movw	r0, #33188	; 0x81a4
   12c40:	movt	r0, #2
   12c44:	ldrb	r0, [r0]
   12c48:	cmp	r0, #0
   12c4c:	beq	12c80 <putc_unlocked@plt+0x1984>
   12c50:	bl	11218 <__errno_location@plt>
   12c54:	ldr	r0, [r0]
   12c58:	cmp	r0, #32
   12c5c:	bne	12c80 <putc_unlocked@plt+0x1984>
   12c60:	movw	r0, #33128	; 0x8168
   12c64:	movt	r0, #2
   12c68:	ldr	r0, [r0]
   12c6c:	bl	160cc <putc_unlocked@plt+0x4dd0>
   12c70:	cmp	r0, #0
   12c74:	subeq	sp, fp, #16
   12c78:	popeq	{r4, r5, r6, sl, fp, pc}
   12c7c:	b	12cf0 <putc_unlocked@plt+0x19f4>
   12c80:	movw	r1, #28905	; 0x70e9
   12c84:	movt	r1, #1
   12c88:	mov	r0, #0
   12c8c:	mov	r2, #5
   12c90:	bl	110ec <dcgettext@plt>
   12c94:	mov	r4, r0
   12c98:	movw	r0, #33184	; 0x81a0
   12c9c:	movt	r0, #2
   12ca0:	ldr	r6, [r0]
   12ca4:	bl	11218 <__errno_location@plt>
   12ca8:	ldr	r5, [r0]
   12cac:	cmp	r6, #0
   12cb0:	bne	12ccc <putc_unlocked@plt+0x19d0>
   12cb4:	movw	r2, #28902	; 0x70e6
   12cb8:	movt	r2, #1
   12cbc:	mov	r0, #0
   12cc0:	mov	r1, r5
   12cc4:	mov	r3, r4
   12cc8:	b	12cec <putc_unlocked@plt+0x19f0>
   12ccc:	mov	r0, r6
   12cd0:	bl	14980 <putc_unlocked@plt+0x3684>
   12cd4:	mov	r3, r0
   12cd8:	str	r4, [sp]
   12cdc:	movw	r2, #28436	; 0x6f14
   12ce0:	movt	r2, #1
   12ce4:	mov	r0, #0
   12ce8:	mov	r1, r5
   12cec:	bl	11170 <error@plt>
   12cf0:	movw	r0, #33040	; 0x8110
   12cf4:	movt	r0, #2
   12cf8:	ldr	r0, [r0]
   12cfc:	bl	110a4 <_exit@plt>
   12d00:	b	11080 <posix_fadvise64@plt>
   12d04:	cmp	r0, #0
   12d08:	bxeq	lr
   12d0c:	push	{r4, sl, fp, lr}
   12d10:	add	fp, sp, #8
   12d14:	sub	sp, sp, #16
   12d18:	mov	r4, r1
   12d1c:	bl	11248 <fileno@plt>
   12d20:	mov	r1, #0
   12d24:	str	r1, [sp]
   12d28:	stmib	sp, {r1, r4}
   12d2c:	mov	r2, #0
   12d30:	mov	r3, #0
   12d34:	bl	12d00 <putc_unlocked@plt+0x1a04>
   12d38:	sub	sp, fp, #8
   12d3c:	pop	{r4, sl, fp, pc}
   12d40:	push	{r4, r5, fp, lr}
   12d44:	add	fp, sp, #8
   12d48:	sub	sp, sp, #8
   12d4c:	mov	r4, r0
   12d50:	bl	11248 <fileno@plt>
   12d54:	cmn	r0, #1
   12d58:	ble	12dd0 <putc_unlocked@plt+0x1ad4>
   12d5c:	mov	r0, r4
   12d60:	bl	111ac <__freading@plt>
   12d64:	cmp	r0, #0
   12d68:	beq	12d94 <putc_unlocked@plt+0x1a98>
   12d6c:	mov	r0, r4
   12d70:	bl	11248 <fileno@plt>
   12d74:	mov	r1, #1
   12d78:	str	r1, [sp]
   12d7c:	mov	r2, #0
   12d80:	mov	r3, #0
   12d84:	bl	11134 <lseek64@plt>
   12d88:	and	r0, r0, r1
   12d8c:	cmn	r0, #1
   12d90:	beq	12dd0 <putc_unlocked@plt+0x1ad4>
   12d94:	mov	r0, r4
   12d98:	bl	12de0 <putc_unlocked@plt+0x1ae4>
   12d9c:	cmp	r0, #0
   12da0:	beq	12dd0 <putc_unlocked@plt+0x1ad4>
   12da4:	bl	11218 <__errno_location@plt>
   12da8:	ldr	r5, [r0]
   12dac:	mov	r0, r4
   12db0:	bl	1126c <fclose@plt>
   12db4:	cmp	r5, #0
   12db8:	beq	12dc8 <putc_unlocked@plt+0x1acc>
   12dbc:	bl	11218 <__errno_location@plt>
   12dc0:	str	r5, [r0]
   12dc4:	mvn	r0, #0
   12dc8:	sub	sp, fp, #8
   12dcc:	pop	{r4, r5, fp, pc}
   12dd0:	mov	r0, r4
   12dd4:	sub	sp, fp, #8
   12dd8:	pop	{r4, r5, fp, lr}
   12ddc:	b	1126c <fclose@plt>
   12de0:	push	{r4, sl, fp, lr}
   12de4:	add	fp, sp, #8
   12de8:	mov	r4, r0
   12dec:	cmp	r0, #0
   12df0:	beq	12e08 <putc_unlocked@plt+0x1b0c>
   12df4:	mov	r0, r4
   12df8:	bl	111ac <__freading@plt>
   12dfc:	cmp	r0, #0
   12e00:	movne	r0, r4
   12e04:	blne	12e14 <putc_unlocked@plt+0x1b18>
   12e08:	mov	r0, r4
   12e0c:	pop	{r4, sl, fp, lr}
   12e10:	b	1108c <fflush@plt>
   12e14:	ldrb	r1, [r0, #1]
   12e18:	tst	r1, #1
   12e1c:	bxeq	lr
   12e20:	push	{fp, lr}
   12e24:	mov	fp, sp
   12e28:	sub	sp, sp, #8
   12e2c:	mov	r1, #1
   12e30:	str	r1, [sp]
   12e34:	mov	r2, #0
   12e38:	mov	r3, #0
   12e3c:	bl	13048 <putc_unlocked@plt+0x1d4c>
   12e40:	mov	sp, fp
   12e44:	pop	{fp, pc}
   12e48:	push	{r4, r5, r6, sl, fp, lr}
   12e4c:	add	fp, sp, #16
   12e50:	mov	r4, r0
   12e54:	bl	11218 <__errno_location@plt>
   12e58:	mov	r5, r0
   12e5c:	ldr	r6, [r0]
   12e60:	mov	r0, r4
   12e64:	bl	11098 <free@plt>
   12e68:	str	r6, [r5]
   12e6c:	pop	{r4, r5, r6, sl, fp, pc}
   12e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e74:	add	fp, sp, #28
   12e78:	sub	sp, sp, #4
   12e7c:	mov	r4, r2
   12e80:	mov	r8, r1
   12e84:	mov	r5, r0
   12e88:	mov	r0, r2
   12e8c:	bl	11248 <fileno@plt>
   12e90:	mov	r6, #0
   12e94:	cmp	r0, #0
   12e98:	beq	12ed8 <putc_unlocked@plt+0x1bdc>
   12e9c:	cmp	r0, #1
   12ea0:	beq	12ee4 <putc_unlocked@plt+0x1be8>
   12ea4:	cmp	r0, #2
   12ea8:	beq	12ec0 <putc_unlocked@plt+0x1bc4>
   12eac:	mov	r0, #2
   12eb0:	mov	r1, #2
   12eb4:	bl	110f8 <dup2@plt>
   12eb8:	subs	r6, r0, #2
   12ebc:	movwne	r6, #1
   12ec0:	mov	r0, #1
   12ec4:	mov	r1, #1
   12ec8:	bl	110f8 <dup2@plt>
   12ecc:	subs	r7, r0, #1
   12ed0:	movwne	r7, #1
   12ed4:	b	12ee8 <putc_unlocked@plt+0x1bec>
   12ed8:	mov	r7, #0
   12edc:	mov	r9, #0
   12ee0:	b	12f98 <putc_unlocked@plt+0x1c9c>
   12ee4:	mov	r7, #0
   12ee8:	mov	sl, #0
   12eec:	mov	r0, #0
   12ef0:	mov	r1, #0
   12ef4:	bl	110f8 <dup2@plt>
   12ef8:	cmp	r0, #0
   12efc:	mov	r9, #0
   12f00:	beq	12f18 <putc_unlocked@plt+0x1c1c>
   12f04:	mov	r0, #0
   12f08:	bl	12ffc <putc_unlocked@plt+0x1d00>
   12f0c:	mov	r9, #1
   12f10:	cmp	r0, #0
   12f14:	beq	12f74 <putc_unlocked@plt+0x1c78>
   12f18:	cmp	r7, #0
   12f1c:	beq	12f34 <putc_unlocked@plt+0x1c38>
   12f20:	mov	sl, #1
   12f24:	mov	r0, #1
   12f28:	bl	12ffc <putc_unlocked@plt+0x1d00>
   12f2c:	cmp	r0, #0
   12f30:	beq	12f74 <putc_unlocked@plt+0x1c78>
   12f34:	cmp	r6, #0
   12f38:	beq	12f90 <putc_unlocked@plt+0x1c94>
   12f3c:	mov	r0, #2
   12f40:	bl	12ffc <putc_unlocked@plt+0x1d00>
   12f44:	mov	r6, #1
   12f48:	cmp	r0, #0
   12f4c:	bne	12f94 <putc_unlocked@plt+0x1c98>
   12f50:	bl	11218 <__errno_location@plt>
   12f54:	mov	r4, r0
   12f58:	ldr	r8, [r0]
   12f5c:	mov	r0, #2
   12f60:	bl	112d8 <close@plt>
   12f64:	mov	r5, #0
   12f68:	cmp	sl, #0
   12f6c:	bne	12fd0 <putc_unlocked@plt+0x1cd4>
   12f70:	b	12fd8 <putc_unlocked@plt+0x1cdc>
   12f74:	bl	11218 <__errno_location@plt>
   12f78:	mov	r4, r0
   12f7c:	ldr	r8, [r0]
   12f80:	mov	r5, #0
   12f84:	cmp	r6, #0
   12f88:	bne	12fc0 <putc_unlocked@plt+0x1cc4>
   12f8c:	b	12fc8 <putc_unlocked@plt+0x1ccc>
   12f90:	mov	r6, #0
   12f94:	mov	r7, sl
   12f98:	mov	r0, r5
   12f9c:	mov	r1, r8
   12fa0:	mov	r2, r4
   12fa4:	bl	111d0 <freopen64@plt>
   12fa8:	mov	r5, r0
   12fac:	bl	11218 <__errno_location@plt>
   12fb0:	mov	r4, r0
   12fb4:	ldr	r8, [r0]
   12fb8:	cmp	r6, #0
   12fbc:	beq	12fc8 <putc_unlocked@plt+0x1ccc>
   12fc0:	mov	r0, #2
   12fc4:	bl	112d8 <close@plt>
   12fc8:	cmp	r7, #0
   12fcc:	beq	12fd8 <putc_unlocked@plt+0x1cdc>
   12fd0:	mov	r0, #1
   12fd4:	bl	112d8 <close@plt>
   12fd8:	cmp	r9, #0
   12fdc:	beq	12fe8 <putc_unlocked@plt+0x1cec>
   12fe0:	mov	r0, #0
   12fe4:	bl	112d8 <close@plt>
   12fe8:	cmp	r5, #0
   12fec:	streq	r8, [r4]
   12ff0:	mov	r0, r5
   12ff4:	sub	sp, fp, #28
   12ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ffc:	push	{r4, sl, fp, lr}
   13000:	add	fp, sp, #8
   13004:	mov	r4, r0
   13008:	movw	r0, #28917	; 0x70f5
   1300c:	movt	r0, #1
   13010:	mov	r1, #0
   13014:	bl	1117c <open64@plt>
   13018:	mov	r1, #1
   1301c:	cmp	r0, r4
   13020:	beq	13040 <putc_unlocked@plt+0x1d44>
   13024:	cmp	r0, #0
   13028:	blt	1303c <putc_unlocked@plt+0x1d40>
   1302c:	bl	112d8 <close@plt>
   13030:	bl	11218 <__errno_location@plt>
   13034:	mov	r1, #9
   13038:	str	r1, [r0]
   1303c:	mov	r1, #0
   13040:	mov	r0, r1
   13044:	pop	{r4, sl, fp, pc}
   13048:	push	{r4, r5, r6, r7, fp, lr}
   1304c:	add	fp, sp, #16
   13050:	sub	sp, sp, #8
   13054:	mov	r5, r3
   13058:	mov	r6, r2
   1305c:	mov	r4, r0
   13060:	ldr	r0, [r0, #4]
   13064:	ldr	r1, [r4, #8]
   13068:	cmp	r1, r0
   1306c:	bne	13088 <putc_unlocked@plt+0x1d8c>
   13070:	ldrd	r0, [r4, #16]
   13074:	cmp	r1, r0
   13078:	bne	13088 <putc_unlocked@plt+0x1d8c>
   1307c:	ldr	r0, [r4, #36]	; 0x24
   13080:	cmp	r0, #0
   13084:	beq	130a0 <putc_unlocked@plt+0x1da4>
   13088:	mov	r0, r4
   1308c:	mov	r2, r6
   13090:	mov	r3, r5
   13094:	sub	sp, fp, #16
   13098:	pop	{r4, r5, r6, r7, fp, lr}
   1309c:	b	11278 <fseeko64@plt>
   130a0:	ldr	r7, [fp, #8]
   130a4:	mov	r0, r4
   130a8:	bl	11248 <fileno@plt>
   130ac:	str	r7, [sp]
   130b0:	mov	r2, r6
   130b4:	mov	r3, r5
   130b8:	bl	11134 <lseek64@plt>
   130bc:	and	r2, r0, r1
   130c0:	cmn	r2, #1
   130c4:	mvneq	r0, #0
   130c8:	subeq	sp, fp, #16
   130cc:	popeq	{r4, r5, r6, r7, fp, pc}
   130d0:	strd	r0, [r4, #80]	; 0x50
   130d4:	ldr	r0, [r4]
   130d8:	bic	r0, r0, #16
   130dc:	str	r0, [r4]
   130e0:	mov	r0, #0
   130e4:	sub	sp, fp, #16
   130e8:	pop	{r4, r5, r6, r7, fp, pc}
   130ec:	mov	r1, #0
   130f0:	str	r1, [r0]
   130f4:	str	r1, [r0, #4]
   130f8:	str	r1, [r0, #8]
   130fc:	bx	lr
   13100:	mov	r2, #10
   13104:	b	13108 <putc_unlocked@plt+0x1e0c>
   13108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1310c:	add	fp, sp, #28
   13110:	sub	sp, sp, #4
   13114:	mov	sl, r2
   13118:	mov	r8, r1
   1311c:	mov	r4, r0
   13120:	ldr	r5, [r0]
   13124:	ldr	r6, [r0, #8]
   13128:	mov	r0, r1
   1312c:	bl	112cc <feof_unlocked@plt>
   13130:	cmp	r0, #0
   13134:	beq	13140 <putc_unlocked@plt+0x1e44>
   13138:	mov	r4, #0
   1313c:	b	131d4 <putc_unlocked@plt+0x1ed8>
   13140:	add	r9, r6, r5
   13144:	mov	r7, r6
   13148:	mov	r0, r8
   1314c:	bl	110e0 <getc_unlocked@plt>
   13150:	mov	r5, r0
   13154:	cmn	r0, #1
   13158:	bne	13184 <putc_unlocked@plt+0x1e88>
   1315c:	cmp	r7, r6
   13160:	beq	13138 <putc_unlocked@plt+0x1e3c>
   13164:	mov	r0, r8
   13168:	bl	11158 <ferror_unlocked@plt>
   1316c:	cmp	r0, #0
   13170:	bne	13138 <putc_unlocked@plt+0x1e3c>
   13174:	ldrb	r0, [r7, #-1]
   13178:	cmp	r0, sl
   1317c:	mov	r5, sl
   13180:	beq	131cc <putc_unlocked@plt+0x1ed0>
   13184:	cmp	r7, r9
   13188:	bne	131c0 <putc_unlocked@plt+0x1ec4>
   1318c:	ldr	r7, [r4]
   13190:	mov	r0, #1
   13194:	str	r0, [sp]
   13198:	mov	r0, r6
   1319c:	mov	r1, r4
   131a0:	mov	r2, #1
   131a4:	mvn	r3, #0
   131a8:	bl	154cc <putc_unlocked@plt+0x41d0>
   131ac:	mov	r6, r0
   131b0:	str	r0, [r4, #8]
   131b4:	add	r7, r0, r7
   131b8:	ldr	r0, [r4]
   131bc:	add	r9, r6, r0
   131c0:	strb	r5, [r7], #1
   131c4:	cmp	r5, sl
   131c8:	bne	13148 <putc_unlocked@plt+0x1e4c>
   131cc:	sub	r0, r7, r6
   131d0:	str	r0, [r4, #4]
   131d4:	mov	r0, r4
   131d8:	sub	sp, fp, #28
   131dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e0:	ldr	r0, [r0, #8]
   131e4:	b	12e48 <putc_unlocked@plt+0x1b4c>
   131e8:	push	{r4, r5, r6, sl, fp, lr}
   131ec:	add	fp, sp, #16
   131f0:	cmp	r2, #0
   131f4:	moveq	r0, #0
   131f8:	popeq	{r4, r5, r6, sl, fp, pc}
   131fc:	mov	r4, r2
   13200:	mov	r5, r1
   13204:	mov	r6, r0
   13208:	bl	111b8 <__ctype_toupper_loc@plt>
   1320c:	ldr	r1, [r0]
   13210:	mov	r2, #0
   13214:	ldrb	r0, [r5, r2]
   13218:	ldr	r0, [r1, r0, lsl #2]
   1321c:	ldrb	r3, [r6, r2]
   13220:	ldr	r3, [r1, r3, lsl #2]
   13224:	subs	r0, r3, r0
   13228:	popne	{r4, r5, r6, sl, fp, pc}
   1322c:	add	r2, r2, #1
   13230:	cmp	r2, r4
   13234:	movcs	r0, #0
   13238:	popcs	{r4, r5, r6, sl, fp, pc}
   1323c:	b	13214 <putc_unlocked@plt+0x1f18>
   13240:	push	{r4, sl, fp, lr}
   13244:	add	fp, sp, #8
   13248:	sub	sp, sp, #8
   1324c:	movw	r0, #28927	; 0x70ff
   13250:	movt	r0, #1
   13254:	bl	11188 <getenv@plt>
   13258:	movw	r4, #4201	; 0x1069
   1325c:	movt	r4, #3
   13260:	cmp	r0, #0
   13264:	ldrbne	r1, [r0]
   13268:	cmpne	r1, #0
   1326c:	beq	1328c <putc_unlocked@plt+0x1f90>
   13270:	add	r1, sp, #4
   13274:	mov	r2, #10
   13278:	bl	11074 <strtol@plt>
   1327c:	ldr	r1, [sp, #4]
   13280:	ldrb	r1, [r1]
   13284:	cmp	r1, #0
   13288:	moveq	r4, r0
   1328c:	mov	r0, r4
   13290:	sub	sp, fp, #8
   13294:	pop	{r4, sl, fp, pc}
   13298:	push	{r4, r5, fp, lr}
   1329c:	add	fp, sp, #8
   132a0:	cmp	r0, #0
   132a4:	beq	13338 <putc_unlocked@plt+0x203c>
   132a8:	mov	r4, r0
   132ac:	mov	r1, #47	; 0x2f
   132b0:	bl	11290 <strrchr@plt>
   132b4:	cmp	r0, #0
   132b8:	mov	r5, r4
   132bc:	addne	r5, r0, #1
   132c0:	sub	r0, r5, r4
   132c4:	cmp	r0, #7
   132c8:	blt	1331c <putc_unlocked@plt+0x2020>
   132cc:	sub	r0, r5, #7
   132d0:	movw	r1, #28999	; 0x7147
   132d4:	movt	r1, #1
   132d8:	mov	r2, #7
   132dc:	bl	112b4 <strncmp@plt>
   132e0:	cmp	r0, #0
   132e4:	bne	1331c <putc_unlocked@plt+0x2020>
   132e8:	movw	r1, #29007	; 0x714f
   132ec:	movt	r1, #1
   132f0:	mov	r0, r5
   132f4:	mov	r2, #3
   132f8:	bl	112b4 <strncmp@plt>
   132fc:	cmp	r0, #0
   13300:	beq	1330c <putc_unlocked@plt+0x2010>
   13304:	mov	r4, r5
   13308:	b	1331c <putc_unlocked@plt+0x2020>
   1330c:	add	r4, r5, #3
   13310:	movw	r0, #33112	; 0x8158
   13314:	movt	r0, #2
   13318:	str	r4, [r0]
   1331c:	movw	r0, #33116	; 0x815c
   13320:	movt	r0, #2
   13324:	str	r4, [r0]
   13328:	movw	r0, #33192	; 0x81a8
   1332c:	movt	r0, #2
   13330:	str	r4, [r0]
   13334:	pop	{r4, r5, fp, pc}
   13338:	movw	r0, #33128	; 0x8168
   1333c:	movt	r0, #2
   13340:	ldr	r3, [r0]
   13344:	movw	r0, #28943	; 0x710f
   13348:	movt	r0, #1
   1334c:	mov	r1, #55	; 0x37
   13350:	mov	r2, #1
   13354:	bl	11128 <fwrite@plt>
   13358:	bl	112c0 <abort@plt>
   1335c:	push	{r4, r5, r6, sl, fp, lr}
   13360:	add	fp, sp, #16
   13364:	mov	r4, r0
   13368:	movw	r0, #33200	; 0x81b0
   1336c:	movt	r0, #2
   13370:	cmp	r4, #0
   13374:	moveq	r4, r0
   13378:	bl	11218 <__errno_location@plt>
   1337c:	mov	r5, r0
   13380:	ldr	r6, [r0]
   13384:	mov	r0, r4
   13388:	mov	r1, #48	; 0x30
   1338c:	bl	1569c <putc_unlocked@plt+0x43a0>
   13390:	str	r6, [r5]
   13394:	pop	{r4, r5, r6, sl, fp, pc}
   13398:	movw	r1, #33200	; 0x81b0
   1339c:	movt	r1, #2
   133a0:	cmp	r0, #0
   133a4:	movne	r1, r0
   133a8:	ldr	r0, [r1]
   133ac:	bx	lr
   133b0:	movw	r2, #33200	; 0x81b0
   133b4:	movt	r2, #2
   133b8:	cmp	r0, #0
   133bc:	movne	r2, r0
   133c0:	str	r1, [r2]
   133c4:	bx	lr
   133c8:	movw	r3, #33200	; 0x81b0
   133cc:	movt	r3, #2
   133d0:	cmp	r0, #0
   133d4:	movne	r3, r0
   133d8:	ubfx	r0, r1, #5, #3
   133dc:	add	r0, r3, r0, lsl #2
   133e0:	ldr	r3, [r0, #8]
   133e4:	and	r1, r1, #31
   133e8:	eor	r2, r2, r3, lsr r1
   133ec:	and	r2, r2, #1
   133f0:	eor	r2, r3, r2, lsl r1
   133f4:	str	r2, [r0, #8]
   133f8:	mov	r0, #1
   133fc:	and	r0, r0, r3, lsr r1
   13400:	bx	lr
   13404:	movw	r2, #33200	; 0x81b0
   13408:	movt	r2, #2
   1340c:	cmp	r0, #0
   13410:	movne	r2, r0
   13414:	ldr	r0, [r2, #4]
   13418:	str	r1, [r2, #4]
   1341c:	bx	lr
   13420:	movw	r3, #33200	; 0x81b0
   13424:	movt	r3, #2
   13428:	cmp	r0, #0
   1342c:	movne	r3, r0
   13430:	mov	r0, #10
   13434:	str	r0, [r3]
   13438:	cmp	r1, #0
   1343c:	cmpne	r2, #0
   13440:	bne	13450 <putc_unlocked@plt+0x2154>
   13444:	push	{fp, lr}
   13448:	mov	fp, sp
   1344c:	bl	112c0 <abort@plt>
   13450:	str	r1, [r3, #40]	; 0x28
   13454:	str	r2, [r3, #44]	; 0x2c
   13458:	bx	lr
   1345c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13460:	add	fp, sp, #28
   13464:	sub	sp, sp, #20
   13468:	mov	r8, r3
   1346c:	mov	r9, r2
   13470:	mov	sl, r1
   13474:	mov	r7, r0
   13478:	ldr	r0, [fp, #8]
   1347c:	movw	r5, #33200	; 0x81b0
   13480:	movt	r5, #2
   13484:	cmp	r0, #0
   13488:	movne	r5, r0
   1348c:	bl	11218 <__errno_location@plt>
   13490:	mov	r4, r0
   13494:	ldm	r5, {r0, r1}
   13498:	ldr	r2, [r5, #40]	; 0x28
   1349c:	ldr	r3, [r5, #44]	; 0x2c
   134a0:	ldr	r6, [r4]
   134a4:	add	r5, r5, #8
   134a8:	stm	sp, {r0, r1, r5}
   134ac:	str	r2, [sp, #12]
   134b0:	str	r3, [sp, #16]
   134b4:	mov	r0, r7
   134b8:	mov	r1, sl
   134bc:	mov	r2, r9
   134c0:	mov	r3, r8
   134c4:	bl	134d4 <putc_unlocked@plt+0x21d8>
   134c8:	str	r6, [r4]
   134cc:	sub	sp, fp, #28
   134d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134d8:	add	fp, sp, #28
   134dc:	sub	sp, sp, #156	; 0x9c
   134e0:	mov	r9, r3
   134e4:	str	r2, [fp, #-84]	; 0xffffffac
   134e8:	mov	r6, r1
   134ec:	mov	r7, r0
   134f0:	ldr	r0, [fp, #12]
   134f4:	and	r1, r0, #4
   134f8:	str	r1, [sp, #32]
   134fc:	and	r1, r0, #1
   13500:	str	r1, [sp, #36]	; 0x24
   13504:	ubfx	sl, r0, #1, #1
   13508:	bl	11140 <__ctype_get_mb_cur_max@plt>
   1350c:	str	r0, [sp, #40]	; 0x28
   13510:	ldr	r0, [fp, #24]
   13514:	str	r0, [sp, #76]	; 0x4c
   13518:	ldr	r0, [fp, #20]
   1351c:	str	r0, [sp, #68]	; 0x44
   13520:	ldr	r0, [fp, #8]
   13524:	str	r0, [fp, #-60]	; 0xffffffc4
   13528:	mov	r0, #0
   1352c:	str	r0, [sp, #72]	; 0x48
   13530:	mov	r0, #0
   13534:	str	r0, [sp, #92]	; 0x5c
   13538:	mov	r0, #0
   1353c:	str	r0, [fp, #-72]	; 0xffffffb8
   13540:	mov	r0, #0
   13544:	mov	r1, #0
   13548:	str	r1, [fp, #-56]	; 0xffffffc8
   1354c:	mov	r1, #0
   13550:	str	r1, [sp, #56]	; 0x38
   13554:	mov	r5, #1
   13558:	str	r7, [sp, #80]	; 0x50
   1355c:	mov	r4, r6
   13560:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13564:	cmp	r6, #10
   13568:	bhi	144d0 <putc_unlocked@plt+0x31d4>
   1356c:	add	r1, pc, #20
   13570:	mov	r8, #0
   13574:	mov	r2, #1
   13578:	mov	r3, #0
   1357c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13580:	mov	lr, r9
   13584:	ldr	pc, [r1, r6, lsl #2]
   13588:	andeq	r3, r1, r0, ror #12
   1358c:	muleq	r1, r0, r6
   13590:	andeq	r3, r1, r0, asr r6
   13594:	andeq	r3, r1, r8, asr #12
   13598:	andeq	r3, r1, r4, lsl #13
   1359c:	andeq	r3, r1, r4, ror #13
   135a0:	andeq	r3, r1, r0, ror r6
   135a4:	andeq	r3, r1, r0, asr #14
   135a8:			; <UNDEFINED> instruction: 0x000135b4
   135ac:			; <UNDEFINED> instruction: 0x000135b4
   135b0:	ldrdeq	r3, [r1], -ip
   135b4:	movw	r0, #29089	; 0x71a1
   135b8:	movt	r0, #1
   135bc:	mov	r1, r6
   135c0:	bl	14adc <putc_unlocked@plt+0x37e0>
   135c4:	str	r0, [sp, #68]	; 0x44
   135c8:	movw	r0, #29091	; 0x71a3
   135cc:	movt	r0, #1
   135d0:	mov	r1, r6
   135d4:	bl	14adc <putc_unlocked@plt+0x37e0>
   135d8:	str	r0, [sp, #76]	; 0x4c
   135dc:	mov	r8, #0
   135e0:	tst	sl, #1
   135e4:	bne	1361c <putc_unlocked@plt+0x2320>
   135e8:	ldr	r0, [sp, #68]	; 0x44
   135ec:	ldrb	r0, [r0]
   135f0:	cmp	r0, #0
   135f4:	beq	1361c <putc_unlocked@plt+0x2320>
   135f8:	ldr	r1, [sp, #68]	; 0x44
   135fc:	add	r1, r1, #1
   13600:	mov	r8, #0
   13604:	cmp	r8, r4
   13608:	strbcc	r0, [r7, r8]
   1360c:	ldrb	r0, [r1, r8]
   13610:	add	r8, r8, #1
   13614:	cmp	r0, #0
   13618:	bne	13604 <putc_unlocked@plt+0x2308>
   1361c:	ldr	r6, [sp, #76]	; 0x4c
   13620:	mov	r0, r6
   13624:	bl	11200 <strlen@plt>
   13628:	str	r0, [fp, #-72]	; 0xffffffb8
   1362c:	str	r6, [sp, #92]	; 0x5c
   13630:	mov	r2, #1
   13634:	mov	r3, sl
   13638:	ldr	ip, [fp, #-84]	; 0xffffffac
   1363c:	mov	lr, r9
   13640:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13644:	b	13740 <putc_unlocked@plt+0x2444>
   13648:	mov	r0, #1
   1364c:	b	13690 <putc_unlocked@plt+0x2394>
   13650:	tst	sl, #1
   13654:	bne	13690 <putc_unlocked@plt+0x2394>
   13658:	mov	r2, r0
   1365c:	b	136b8 <putc_unlocked@plt+0x23bc>
   13660:	mov	r6, #0
   13664:	mov	r8, #0
   13668:	mov	r2, r0
   1366c:	b	1373c <putc_unlocked@plt+0x2440>
   13670:	mov	r0, #1
   13674:	str	r0, [fp, #-72]	; 0xffffffb8
   13678:	mov	r8, #0
   1367c:	mov	r6, #5
   13680:	b	136fc <putc_unlocked@plt+0x2400>
   13684:	mov	r2, #1
   13688:	tst	sl, #1
   1368c:	beq	136b8 <putc_unlocked@plt+0x23bc>
   13690:	mov	r1, #1
   13694:	str	r1, [fp, #-72]	; 0xffffffb8
   13698:	mov	r8, #0
   1369c:	mov	r6, #2
   136a0:	movw	r1, #29091	; 0x71a3
   136a4:	movt	r1, #1
   136a8:	str	r1, [sp, #92]	; 0x5c
   136ac:	mov	r2, r0
   136b0:	mov	r3, #1
   136b4:	b	13740 <putc_unlocked@plt+0x2444>
   136b8:	mov	r8, #1
   136bc:	mov	r6, #2
   136c0:	cmp	r4, #0
   136c4:	movne	r0, #39	; 0x27
   136c8:	strbne	r0, [r7]
   136cc:	movw	r0, #29091	; 0x71a3
   136d0:	movt	r0, #1
   136d4:	str	r0, [sp, #92]	; 0x5c
   136d8:	mov	r0, #1
   136dc:	str	r0, [fp, #-72]	; 0xffffffb8
   136e0:	b	1373c <putc_unlocked@plt+0x2440>
   136e4:	mov	r6, #5
   136e8:	tst	sl, #1
   136ec:	beq	13714 <putc_unlocked@plt+0x2418>
   136f0:	mov	r0, #1
   136f4:	str	r0, [fp, #-72]	; 0xffffffb8
   136f8:	mov	r8, #0
   136fc:	movw	r0, #29087	; 0x719f
   13700:	movt	r0, #1
   13704:	str	r0, [sp, #92]	; 0x5c
   13708:	mov	r2, #1
   1370c:	mov	r3, #1
   13710:	b	13740 <putc_unlocked@plt+0x2444>
   13714:	cmp	r4, #0
   13718:	movne	r0, #34	; 0x22
   1371c:	strbne	r0, [r7]
   13720:	mov	r8, #1
   13724:	movw	r0, #29087	; 0x719f
   13728:	movt	r0, #1
   1372c:	str	r0, [sp, #92]	; 0x5c
   13730:	mov	r0, #1
   13734:	str	r0, [fp, #-72]	; 0xffffffb8
   13738:	mov	r2, #1
   1373c:	mov	r3, #0
   13740:	ldr	r0, [fp, #16]
   13744:	cmp	r0, #0
   13748:	movwne	r0, #1
   1374c:	and	r0, r0, r3
   13750:	str	r0, [fp, #-88]	; 0xffffffa8
   13754:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13758:	cmp	r0, #0
   1375c:	movwne	r0, #1
   13760:	and	r1, r0, r3
   13764:	and	r1, r2, r1
   13768:	str	r1, [sp, #48]	; 0x30
   1376c:	str	r6, [fp, #-60]	; 0xffffffc4
   13770:	subs	r6, r6, #2
   13774:	clz	r1, r6
   13778:	lsr	r1, r1, #5
   1377c:	and	r1, r1, r3
   13780:	str	r1, [sp, #60]	; 0x3c
   13784:	str	r6, [fp, #-80]	; 0xffffffb0
   13788:	mov	r1, r6
   1378c:	movwne	r1, #1
   13790:	str	r3, [fp, #-76]	; 0xffffffb4
   13794:	eor	r3, r3, #1
   13798:	str	r3, [sp, #88]	; 0x58
   1379c:	orr	r3, r1, r3
   137a0:	str	r3, [sp, #64]	; 0x40
   137a4:	and	r1, r1, r2
   137a8:	str	r1, [fp, #-68]	; 0xffffffbc
   137ac:	and	r0, r0, r1
   137b0:	str	r0, [fp, #-64]	; 0xffffffc0
   137b4:	str	r2, [sp, #84]	; 0x54
   137b8:	eor	r0, r2, #1
   137bc:	str	r0, [sp, #52]	; 0x34
   137c0:	mov	r6, #0
   137c4:	cmn	lr, #1
   137c8:	beq	137d8 <putc_unlocked@plt+0x24dc>
   137cc:	cmp	r6, lr
   137d0:	bne	137e4 <putc_unlocked@plt+0x24e8>
   137d4:	b	14350 <putc_unlocked@plt+0x3054>
   137d8:	ldrb	r0, [ip, r6]
   137dc:	cmp	r0, #0
   137e0:	beq	14350 <putc_unlocked@plt+0x3054>
   137e4:	str	r5, [fp, #-48]	; 0xffffffd0
   137e8:	mov	sl, #0
   137ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   137f0:	cmp	r0, #0
   137f4:	beq	13828 <putc_unlocked@plt+0x252c>
   137f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   137fc:	add	r5, r6, r0
   13800:	cmp	r0, #2
   13804:	bcc	13820 <putc_unlocked@plt+0x2524>
   13808:	cmn	lr, #1
   1380c:	bne	13820 <putc_unlocked@plt+0x2524>
   13810:	mov	r0, ip
   13814:	bl	11200 <strlen@plt>
   13818:	ldr	ip, [fp, #-84]	; 0xffffffac
   1381c:	mov	lr, r0
   13820:	cmp	r5, lr
   13824:	bls	13834 <putc_unlocked@plt+0x2538>
   13828:	mov	r0, #0
   1382c:	str	r0, [fp, #-52]	; 0xffffffcc
   13830:	b	13880 <putc_unlocked@plt+0x2584>
   13834:	mov	r5, r4
   13838:	mov	r4, lr
   1383c:	add	r0, ip, r6
   13840:	ldr	r1, [sp, #92]	; 0x5c
   13844:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13848:	bl	110d4 <memcmp@plt>
   1384c:	cmp	r0, #0
   13850:	mov	r1, r0
   13854:	movwne	r1, #1
   13858:	ldr	r2, [sp, #88]	; 0x58
   1385c:	orr	r1, r1, r2
   13860:	tst	r1, #1
   13864:	beq	14414 <putc_unlocked@plt+0x3118>
   13868:	clz	r0, r0
   1386c:	lsr	r0, r0, #5
   13870:	str	r0, [fp, #-52]	; 0xffffffcc
   13874:	ldr	ip, [fp, #-84]	; 0xffffffac
   13878:	mov	lr, r4
   1387c:	mov	r4, r5
   13880:	ldrb	r5, [ip, r6]
   13884:	cmp	r5, #126	; 0x7e
   13888:	bhi	13c44 <putc_unlocked@plt+0x2948>
   1388c:	mov	r9, #1
   13890:	mov	r2, #110	; 0x6e
   13894:	mov	r0, #97	; 0x61
   13898:	add	r3, pc, #4
   1389c:	mov	r1, #0
   138a0:	ldr	pc, [r3, r5, lsl #2]
   138a4:	andeq	r3, r1, ip, lsr fp
   138a8:	andeq	r3, r1, r4, asr #24
   138ac:	andeq	r3, r1, r4, asr #24
   138b0:	andeq	r3, r1, r4, asr #24
   138b4:	andeq	r3, r1, r4, asr #24
   138b8:	andeq	r3, r1, r4, asr #24
   138bc:	andeq	r3, r1, r4, asr #24
   138c0:	andeq	r3, r1, r8, lsl #26
   138c4:	andeq	r3, r1, ip, lsl fp
   138c8:	andeq	r3, r1, r4, lsl fp
   138cc:	andeq	r3, r1, r8, lsr #22
   138d0:	andeq	r3, r1, ip, lsr #23
   138d4:	andeq	r3, r1, ip, lsl #22
   138d8:	andeq	r3, r1, r4, lsr #22
   138dc:	andeq	r3, r1, r4, asr #24
   138e0:	andeq	r3, r1, r4, asr #24
   138e4:	andeq	r3, r1, r4, asr #24
   138e8:	andeq	r3, r1, r4, asr #24
   138ec:	andeq	r3, r1, r4, asr #24
   138f0:	andeq	r3, r1, r4, asr #24
   138f4:	andeq	r3, r1, r4, asr #24
   138f8:	andeq	r3, r1, r4, asr #24
   138fc:	andeq	r3, r1, r4, asr #24
   13900:	andeq	r3, r1, r4, asr #24
   13904:	andeq	r3, r1, r4, asr #24
   13908:	andeq	r3, r1, r4, asr #24
   1390c:	andeq	r3, r1, r4, asr #24
   13910:	andeq	r3, r1, r4, asr #24
   13914:	andeq	r3, r1, r4, asr #24
   13918:	andeq	r3, r1, r4, asr #24
   1391c:	andeq	r3, r1, r4, asr #24
   13920:	andeq	r3, r1, r4, asr #24
   13924:			; <UNDEFINED> instruction: 0x00013cb8
   13928:			; <UNDEFINED> instruction: 0x00013cbc
   1392c:			; <UNDEFINED> instruction: 0x00013cbc
   13930:			; <UNDEFINED> instruction: 0x00013ab4
   13934:			; <UNDEFINED> instruction: 0x00013cbc
   13938:	andeq	r3, r1, r0, lsr #21
   1393c:			; <UNDEFINED> instruction: 0x00013cbc
   13940:			; <UNDEFINED> instruction: 0x00013bb4
   13944:			; <UNDEFINED> instruction: 0x00013cbc
   13948:			; <UNDEFINED> instruction: 0x00013cbc
   1394c:			; <UNDEFINED> instruction: 0x00013cbc
   13950:	andeq	r3, r1, r0, lsr #21
   13954:	andeq	r3, r1, r0, lsr #21
   13958:	andeq	r3, r1, r0, lsr #21
   1395c:	andeq	r3, r1, r0, lsr #21
   13960:	andeq	r3, r1, r0, lsr #21
   13964:	andeq	r3, r1, r0, lsr #21
   13968:	andeq	r3, r1, r0, lsr #21
   1396c:	andeq	r3, r1, r0, lsr #21
   13970:	andeq	r3, r1, r0, lsr #21
   13974:	andeq	r3, r1, r0, lsr #21
   13978:	andeq	r3, r1, r0, lsr #21
   1397c:	andeq	r3, r1, r0, lsr #21
   13980:	andeq	r3, r1, r0, lsr #21
   13984:	andeq	r3, r1, r0, lsr #21
   13988:	andeq	r3, r1, r0, lsr #21
   1398c:	andeq	r3, r1, r0, lsr #21
   13990:			; <UNDEFINED> instruction: 0x00013cbc
   13994:			; <UNDEFINED> instruction: 0x00013cbc
   13998:			; <UNDEFINED> instruction: 0x00013cbc
   1399c:			; <UNDEFINED> instruction: 0x00013cbc
   139a0:	andeq	r3, r1, ip, ror fp
   139a4:	andeq	r3, r1, r4, asr #24
   139a8:	andeq	r3, r1, r0, lsr #21
   139ac:	andeq	r3, r1, r0, lsr #21
   139b0:	andeq	r3, r1, r0, lsr #21
   139b4:	andeq	r3, r1, r0, lsr #21
   139b8:	andeq	r3, r1, r0, lsr #21
   139bc:	andeq	r3, r1, r0, lsr #21
   139c0:	andeq	r3, r1, r0, lsr #21
   139c4:	andeq	r3, r1, r0, lsr #21
   139c8:	andeq	r3, r1, r0, lsr #21
   139cc:	andeq	r3, r1, r0, lsr #21
   139d0:	andeq	r3, r1, r0, lsr #21
   139d4:	andeq	r3, r1, r0, lsr #21
   139d8:	andeq	r3, r1, r0, lsr #21
   139dc:	andeq	r3, r1, r0, lsr #21
   139e0:	andeq	r3, r1, r0, lsr #21
   139e4:	andeq	r3, r1, r0, lsr #21
   139e8:	andeq	r3, r1, r0, lsr #21
   139ec:	andeq	r3, r1, r0, lsr #21
   139f0:	andeq	r3, r1, r0, lsr #21
   139f4:	andeq	r3, r1, r0, lsr #21
   139f8:	andeq	r3, r1, r0, lsr #21
   139fc:	andeq	r3, r1, r0, lsr #21
   13a00:	andeq	r3, r1, r0, lsr #21
   13a04:	andeq	r3, r1, r0, lsr #21
   13a08:	andeq	r3, r1, r0, lsr #21
   13a0c:	andeq	r3, r1, r0, lsr #21
   13a10:			; <UNDEFINED> instruction: 0x00013cbc
   13a14:	andeq	r3, r1, r8, ror #21
   13a18:	andeq	r3, r1, r0, lsr #21
   13a1c:			; <UNDEFINED> instruction: 0x00013cbc
   13a20:	andeq	r3, r1, r0, lsr #21
   13a24:			; <UNDEFINED> instruction: 0x00013cbc
   13a28:	andeq	r3, r1, r0, lsr #21
   13a2c:	andeq	r3, r1, r0, lsr #21
   13a30:	andeq	r3, r1, r0, lsr #21
   13a34:	andeq	r3, r1, r0, lsr #21
   13a38:	andeq	r3, r1, r0, lsr #21
   13a3c:	andeq	r3, r1, r0, lsr #21
   13a40:	andeq	r3, r1, r0, lsr #21
   13a44:	andeq	r3, r1, r0, lsr #21
   13a48:	andeq	r3, r1, r0, lsr #21
   13a4c:	andeq	r3, r1, r0, lsr #21
   13a50:	andeq	r3, r1, r0, lsr #21
   13a54:	andeq	r3, r1, r0, lsr #21
   13a58:	andeq	r3, r1, r0, lsr #21
   13a5c:	andeq	r3, r1, r0, lsr #21
   13a60:	andeq	r3, r1, r0, lsr #21
   13a64:	andeq	r3, r1, r0, lsr #21
   13a68:	andeq	r3, r1, r0, lsr #21
   13a6c:	andeq	r3, r1, r0, lsr #21
   13a70:	andeq	r3, r1, r0, lsr #21
   13a74:	andeq	r3, r1, r0, lsr #21
   13a78:	andeq	r3, r1, r0, lsr #21
   13a7c:	andeq	r3, r1, r0, lsr #21
   13a80:	andeq	r3, r1, r0, lsr #21
   13a84:	andeq	r3, r1, r0, lsr #21
   13a88:	andeq	r3, r1, r0, lsr #21
   13a8c:	andeq	r3, r1, r0, lsr #21
   13a90:	andeq	r3, r1, r8, asr #21
   13a94:			; <UNDEFINED> instruction: 0x00013cbc
   13a98:	andeq	r3, r1, r8, asr #21
   13a9c:			; <UNDEFINED> instruction: 0x00013ab4
   13aa0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13aa4:	cmp	r0, #0
   13aa8:	beq	13d1c <putc_unlocked@plt+0x2a20>
   13aac:	ldr	r0, [fp, #16]
   13ab0:	b	13d20 <putc_unlocked@plt+0x2a24>
   13ab4:	mov	r9, #0
   13ab8:	cmp	r6, #0
   13abc:	beq	13cb8 <putc_unlocked@plt+0x29bc>
   13ac0:	mov	sl, #0
   13ac4:	b	13aa0 <putc_unlocked@plt+0x27a4>
   13ac8:	mov	r9, #0
   13acc:	cmn	lr, #1
   13ad0:	beq	13c9c <putc_unlocked@plt+0x29a0>
   13ad4:	cmp	r6, #0
   13ad8:	bne	13ac0 <putc_unlocked@plt+0x27c4>
   13adc:	cmp	lr, #1
   13ae0:	beq	13cb8 <putc_unlocked@plt+0x29bc>
   13ae4:	b	13ac0 <putc_unlocked@plt+0x27c4>
   13ae8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13aec:	cmp	r0, #2
   13af0:	bne	13ce4 <putc_unlocked@plt+0x29e8>
   13af4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13af8:	tst	r0, #1
   13afc:	bne	1442c <putc_unlocked@plt+0x3130>
   13b00:	mov	sl, #0
   13b04:	mov	r0, #92	; 0x5c
   13b08:	b	13cf8 <putc_unlocked@plt+0x29fc>
   13b0c:	mov	r0, #102	; 0x66
   13b10:	b	13d08 <putc_unlocked@plt+0x2a0c>
   13b14:	mov	r2, #116	; 0x74
   13b18:	b	13b28 <putc_unlocked@plt+0x282c>
   13b1c:	mov	r0, #98	; 0x62
   13b20:	b	13d08 <putc_unlocked@plt+0x2a0c>
   13b24:	mov	r2, #114	; 0x72
   13b28:	ldr	r0, [sp, #64]	; 0x40
   13b2c:	tst	r0, #1
   13b30:	mov	r0, r2
   13b34:	bne	13d08 <putc_unlocked@plt+0x2a0c>
   13b38:	b	1442c <putc_unlocked@plt+0x3130>
   13b3c:	ldr	r0, [sp, #84]	; 0x54
   13b40:	tst	r0, #1
   13b44:	beq	13df8 <putc_unlocked@plt+0x2afc>
   13b48:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13b4c:	tst	r0, #1
   13b50:	bne	1442c <putc_unlocked@plt+0x3130>
   13b54:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13b58:	cmp	r0, #2
   13b5c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13b60:	movwne	r0, #1
   13b64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13b68:	orr	r0, r0, r2
   13b6c:	tst	r0, #1
   13b70:	beq	141ec <putc_unlocked@plt+0x2ef0>
   13b74:	mov	r0, r8
   13b78:	b	14220 <putc_unlocked@plt+0x2f24>
   13b7c:	mov	sl, #0
   13b80:	mov	r5, #63	; 0x3f
   13b84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13b88:	cmp	r0, #5
   13b8c:	beq	13fac <putc_unlocked@plt+0x2cb0>
   13b90:	cmp	r0, #2
   13b94:	bne	1404c <putc_unlocked@plt+0x2d50>
   13b98:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13b9c:	tst	r0, #1
   13ba0:	mov	r9, #0
   13ba4:	beq	13aa0 <putc_unlocked@plt+0x27a4>
   13ba8:	b	1442c <putc_unlocked@plt+0x3130>
   13bac:	mov	r0, #118	; 0x76
   13bb0:	b	13d08 <putc_unlocked@plt+0x2a0c>
   13bb4:	mov	r5, #39	; 0x27
   13bb8:	mov	r0, #1
   13bbc:	str	r0, [sp, #56]	; 0x38
   13bc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13bc4:	cmp	r0, #2
   13bc8:	bne	13e18 <putc_unlocked@plt+0x2b1c>
   13bcc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13bd0:	tst	r0, #1
   13bd4:	bne	1442c <putc_unlocked@plt+0x3130>
   13bd8:	ldr	r2, [sp, #72]	; 0x48
   13bdc:	cmp	r2, #0
   13be0:	mov	r0, r2
   13be4:	movwne	r0, #1
   13be8:	clz	r1, r4
   13bec:	lsr	r1, r1, #5
   13bf0:	orrs	r0, r0, r1
   13bf4:	moveq	r2, r4
   13bf8:	str	r2, [sp, #72]	; 0x48
   13bfc:	moveq	r4, r0
   13c00:	cmp	r8, r4
   13c04:	movcc	r0, #39	; 0x27
   13c08:	strbcc	r0, [r7, r8]
   13c0c:	add	r0, r8, #1
   13c10:	cmp	r0, r4
   13c14:	movcc	r1, #92	; 0x5c
   13c18:	strbcc	r1, [r7, r0]
   13c1c:	add	r0, r8, #2
   13c20:	cmp	r0, r4
   13c24:	movcc	r1, #39	; 0x27
   13c28:	strbcc	r1, [r7, r0]
   13c2c:	add	r8, r8, #3
   13c30:	mov	r0, #0
   13c34:	str	r0, [fp, #-56]	; 0xffffffc8
   13c38:	mov	sl, #0
   13c3c:	mov	r9, #1
   13c40:	b	13aa0 <putc_unlocked@plt+0x27a4>
   13c44:	str	r4, [sp, #24]
   13c48:	ldr	r0, [sp, #40]	; 0x28
   13c4c:	cmp	r0, #1
   13c50:	bne	13e20 <putc_unlocked@plt+0x2b24>
   13c54:	str	lr, [sp, #28]
   13c58:	bl	111e8 <__ctype_b_loc@plt>
   13c5c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13c60:	ldr	r0, [r0]
   13c64:	add	r0, r0, r5, lsl #1
   13c68:	ldrb	r0, [r0, #1]
   13c6c:	ubfx	r9, r0, #6, #1
   13c70:	mov	r1, #1
   13c74:	ldr	r4, [sp, #24]
   13c78:	ldr	r0, [sp, #52]	; 0x34
   13c7c:	orr	r0, r9, r0
   13c80:	mov	r2, r1
   13c84:	cmp	r1, #1
   13c88:	bhi	14054 <putc_unlocked@plt+0x2d58>
   13c8c:	tst	r0, #1
   13c90:	beq	14054 <putc_unlocked@plt+0x2d58>
   13c94:	ldr	lr, [sp, #28]
   13c98:	b	13aa0 <putc_unlocked@plt+0x27a4>
   13c9c:	cmp	r6, #0
   13ca0:	ldrbeq	r0, [ip, #1]
   13ca4:	cmpeq	r0, #0
   13ca8:	beq	13cb8 <putc_unlocked@plt+0x29bc>
   13cac:	mvn	lr, #0
   13cb0:	mov	sl, #0
   13cb4:	b	13aa0 <putc_unlocked@plt+0x27a4>
   13cb8:	mov	r1, #1
   13cbc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13cc0:	cmp	r0, #2
   13cc4:	bne	13cdc <putc_unlocked@plt+0x29e0>
   13cc8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13ccc:	tst	r0, #1
   13cd0:	mov	r9, r1
   13cd4:	beq	13aa0 <putc_unlocked@plt+0x27a4>
   13cd8:	b	1442c <putc_unlocked@plt+0x3130>
   13cdc:	mov	r9, r1
   13ce0:	b	13aa0 <putc_unlocked@plt+0x27a4>
   13ce4:	mov	sl, #0
   13ce8:	mov	r0, #92	; 0x5c
   13cec:	ldr	r1, [sp, #48]	; 0x30
   13cf0:	cmp	r1, #0
   13cf4:	beq	13d08 <putc_unlocked@plt+0x2a0c>
   13cf8:	mov	r9, #0
   13cfc:	cmp	sl, #0
   13d00:	beq	142b8 <putc_unlocked@plt+0x2fbc>
   13d04:	b	142f4 <putc_unlocked@plt+0x2ff8>
   13d08:	mov	r9, #0
   13d0c:	ldr	r1, [sp, #84]	; 0x54
   13d10:	tst	r1, #1
   13d14:	mov	sl, #0
   13d18:	bne	13d58 <putc_unlocked@plt+0x2a5c>
   13d1c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d20:	cmp	r0, #0
   13d24:	mov	r0, r5
   13d28:	beq	13d4c <putc_unlocked@plt+0x2a50>
   13d2c:	ubfx	r0, r5, #5, #3
   13d30:	ldr	r1, [fp, #16]
   13d34:	ldr	r0, [r1, r0, lsl #2]
   13d38:	and	r1, r5, #31
   13d3c:	mov	r2, #1
   13d40:	tst	r0, r2, lsl r1
   13d44:	mov	r0, r5
   13d48:	bne	13d58 <putc_unlocked@plt+0x2a5c>
   13d4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13d50:	cmp	r1, #0
   13d54:	beq	142b0 <putc_unlocked@plt+0x2fb4>
   13d58:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13d5c:	tst	r1, #1
   13d60:	bne	1442c <putc_unlocked@plt+0x3130>
   13d64:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13d68:	cmp	r1, #2
   13d6c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13d70:	movwne	r1, #1
   13d74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13d78:	orr	r1, r1, r2
   13d7c:	tst	r1, #1
   13d80:	beq	13d8c <putc_unlocked@plt+0x2a90>
   13d84:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13d88:	b	13dc8 <putc_unlocked@plt+0x2acc>
   13d8c:	cmp	r8, r4
   13d90:	movcc	r1, #39	; 0x27
   13d94:	strbcc	r1, [r7, r8]
   13d98:	add	r1, r8, #1
   13d9c:	cmp	r1, r4
   13da0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13da4:	movcc	r2, #36	; 0x24
   13da8:	strbcc	r2, [r7, r1]
   13dac:	add	r1, r8, #2
   13db0:	cmp	r1, r4
   13db4:	movcc	r2, #39	; 0x27
   13db8:	strbcc	r2, [r7, r1]
   13dbc:	add	r8, r8, #3
   13dc0:	mov	r1, #1
   13dc4:	str	r1, [fp, #-56]	; 0xffffffc8
   13dc8:	cmp	r8, r4
   13dcc:	movcc	r1, #92	; 0x5c
   13dd0:	strbcc	r1, [r7, r8]
   13dd4:	add	r8, r8, #1
   13dd8:	cmp	r8, r4
   13ddc:	strbcc	r0, [r7, r8]
   13de0:	and	r5, r5, r9
   13de4:	add	r8, r8, #1
   13de8:	add	r6, r6, #1
   13dec:	cmn	lr, #1
   13df0:	bne	137cc <putc_unlocked@plt+0x24d0>
   13df4:	b	137d8 <putc_unlocked@plt+0x24dc>
   13df8:	mov	r9, #0
   13dfc:	ldr	r0, [sp, #36]	; 0x24
   13e00:	cmp	r0, #0
   13e04:	mov	sl, #0
   13e08:	mov	r5, #0
   13e0c:	beq	13d1c <putc_unlocked@plt+0x2a20>
   13e10:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13e14:	b	13de8 <putc_unlocked@plt+0x2aec>
   13e18:	mov	r9, #1
   13e1c:	b	13aa0 <putc_unlocked@plt+0x27a4>
   13e20:	mov	r0, #0
   13e24:	str	r0, [fp, #-36]	; 0xffffffdc
   13e28:	str	r0, [fp, #-40]	; 0xffffffd8
   13e2c:	cmn	lr, #1
   13e30:	bne	13e44 <putc_unlocked@plt+0x2b48>
   13e34:	mov	r0, ip
   13e38:	bl	11200 <strlen@plt>
   13e3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e40:	mov	lr, r0
   13e44:	add	r0, ip, r6
   13e48:	str	r0, [sp, #20]
   13e4c:	mov	r9, #1
   13e50:	mov	r7, #0
   13e54:	sub	r4, fp, #40	; 0x28
   13e58:	str	lr, [sp, #28]
   13e5c:	str	r7, [sp, #44]	; 0x2c
   13e60:	add	r7, r7, r6
   13e64:	add	r1, ip, r7
   13e68:	sub	r2, lr, r7
   13e6c:	sub	r0, fp, #44	; 0x2c
   13e70:	mov	r3, r4
   13e74:	bl	161dc <putc_unlocked@plt+0x4ee0>
   13e78:	cmp	r0, #0
   13e7c:	beq	1433c <putc_unlocked@plt+0x3040>
   13e80:	cmn	r0, #1
   13e84:	beq	142fc <putc_unlocked@plt+0x3000>
   13e88:	cmn	r0, #2
   13e8c:	ldr	lr, [sp, #28]
   13e90:	beq	14304 <putc_unlocked@plt+0x3008>
   13e94:	cmp	r0, #2
   13e98:	mov	r1, #0
   13e9c:	movwcc	r1, #1
   13ea0:	ldr	r2, [sp, #60]	; 0x3c
   13ea4:	eor	r2, r2, #1
   13ea8:	orrs	r1, r2, r1
   13eac:	ldr	r4, [sp, #24]
   13eb0:	bne	13f70 <putc_unlocked@plt+0x2c74>
   13eb4:	ldr	r1, [sp, #44]	; 0x2c
   13eb8:	ldr	r2, [sp, #20]
   13ebc:	add	r1, r2, r1
   13ec0:	mov	r2, #1
   13ec4:	ldrb	r3, [r1, r2]
   13ec8:	sub	r3, r3, #91	; 0x5b
   13ecc:	cmp	r3, #33	; 0x21
   13ed0:	bhi	13f64 <putc_unlocked@plt+0x2c68>
   13ed4:	add	r7, pc, #0
   13ed8:	ldr	pc, [r7, r3, lsl #2]
   13edc:	andeq	r4, r1, r4, lsr #8
   13ee0:	andeq	r4, r1, r4, lsr #8
   13ee4:	andeq	r3, r1, r4, ror #30
   13ee8:	andeq	r4, r1, r4, lsr #8
   13eec:	andeq	r3, r1, r4, ror #30
   13ef0:	andeq	r4, r1, r4, lsr #8
   13ef4:	andeq	r3, r1, r4, ror #30
   13ef8:	andeq	r3, r1, r4, ror #30
   13efc:	andeq	r3, r1, r4, ror #30
   13f00:	andeq	r3, r1, r4, ror #30
   13f04:	andeq	r3, r1, r4, ror #30
   13f08:	andeq	r3, r1, r4, ror #30
   13f0c:	andeq	r3, r1, r4, ror #30
   13f10:	andeq	r3, r1, r4, ror #30
   13f14:	andeq	r3, r1, r4, ror #30
   13f18:	andeq	r3, r1, r4, ror #30
   13f1c:	andeq	r3, r1, r4, ror #30
   13f20:	andeq	r3, r1, r4, ror #30
   13f24:	andeq	r3, r1, r4, ror #30
   13f28:	andeq	r3, r1, r4, ror #30
   13f2c:	andeq	r3, r1, r4, ror #30
   13f30:	andeq	r3, r1, r4, ror #30
   13f34:	andeq	r3, r1, r4, ror #30
   13f38:	andeq	r3, r1, r4, ror #30
   13f3c:	andeq	r3, r1, r4, ror #30
   13f40:	andeq	r3, r1, r4, ror #30
   13f44:	andeq	r3, r1, r4, ror #30
   13f48:	andeq	r3, r1, r4, ror #30
   13f4c:	andeq	r3, r1, r4, ror #30
   13f50:	andeq	r3, r1, r4, ror #30
   13f54:	andeq	r3, r1, r4, ror #30
   13f58:	andeq	r3, r1, r4, ror #30
   13f5c:	andeq	r3, r1, r4, ror #30
   13f60:	andeq	r4, r1, r4, lsr #8
   13f64:	add	r2, r2, #1
   13f68:	cmp	r2, r0
   13f6c:	bcc	13ec4 <putc_unlocked@plt+0x2bc8>
   13f70:	ldr	r7, [sp, #44]	; 0x2c
   13f74:	add	r7, r0, r7
   13f78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f7c:	bl	1111c <iswprint@plt>
   13f80:	cmp	r0, #0
   13f84:	movwne	r0, #1
   13f88:	and	r9, r9, r0
   13f8c:	sub	r4, fp, #40	; 0x28
   13f90:	mov	r0, r4
   13f94:	bl	110bc <mbsinit@plt>
   13f98:	ldr	lr, [sp, #28]
   13f9c:	cmp	r0, #0
   13fa0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13fa4:	beq	13e5c <putc_unlocked@plt+0x2b60>
   13fa8:	b	14344 <putc_unlocked@plt+0x3048>
   13fac:	ldr	r0, [sp, #32]
   13fb0:	cmp	r0, #0
   13fb4:	beq	1404c <putc_unlocked@plt+0x2d50>
   13fb8:	add	r0, r6, #2
   13fbc:	cmp	r0, lr
   13fc0:	bcs	1404c <putc_unlocked@plt+0x2d50>
   13fc4:	add	r1, ip, r6
   13fc8:	ldrb	r1, [r1, #1]
   13fcc:	cmp	r1, #63	; 0x3f
   13fd0:	bne	1404c <putc_unlocked@plt+0x2d50>
   13fd4:	ldrb	r9, [ip, r0]
   13fd8:	sub	r2, r9, #33	; 0x21
   13fdc:	cmp	r2, #29
   13fe0:	bhi	1404c <putc_unlocked@plt+0x2d50>
   13fe4:	mov	r3, #1
   13fe8:	movw	r1, #20929	; 0x51c1
   13fec:	movt	r1, #14336	; 0x3800
   13ff0:	tst	r1, r3, lsl r2
   13ff4:	beq	1404c <putc_unlocked@plt+0x2d50>
   13ff8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13ffc:	tst	r1, #1
   14000:	bne	1442c <putc_unlocked@plt+0x3130>
   14004:	cmp	r8, r4
   14008:	movcc	r1, #63	; 0x3f
   1400c:	strbcc	r1, [r7, r8]
   14010:	add	r2, r8, #1
   14014:	cmp	r2, r4
   14018:	movcc	r1, #34	; 0x22
   1401c:	strbcc	r1, [r7, r2]
   14020:	add	r2, r8, #2
   14024:	cmp	r2, r4
   14028:	movcc	r1, #34	; 0x22
   1402c:	strbcc	r1, [r7, r2]
   14030:	add	r2, r8, #3
   14034:	cmp	r2, r4
   14038:	movcc	r1, #63	; 0x3f
   1403c:	strbcc	r1, [r7, r2]
   14040:	add	r8, r8, #4
   14044:	mov	r6, r0
   14048:	mov	r5, r9
   1404c:	mov	r9, #0
   14050:	b	13aa0 <putc_unlocked@plt+0x27a4>
   14054:	add	r1, r2, r6
   14058:	str	r1, [sp, #44]	; 0x2c
   1405c:	add	r1, r6, #1
   14060:	mov	r3, #0
   14064:	ldr	lr, [sp, #28]
   14068:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1406c:	tst	r0, #1
   14070:	bne	14164 <putc_unlocked@plt+0x2e68>
   14074:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14078:	tst	r2, #1
   1407c:	bne	1442c <putc_unlocked@plt+0x3130>
   14080:	cmp	r6, #2
   14084:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14088:	movwne	r3, #1
   1408c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14090:	orr	r3, r3, r2
   14094:	tst	r3, #1
   14098:	bne	140d4 <putc_unlocked@plt+0x2dd8>
   1409c:	cmp	r8, r4
   140a0:	movcc	r2, #39	; 0x27
   140a4:	strbcc	r2, [r7, r8]
   140a8:	add	r3, r8, #1
   140ac:	cmp	r3, r4
   140b0:	movcc	r2, #36	; 0x24
   140b4:	strbcc	r2, [r7, r3]
   140b8:	add	r3, r8, #2
   140bc:	cmp	r3, r4
   140c0:	movcc	r2, #39	; 0x27
   140c4:	strbcc	r2, [r7, r3]
   140c8:	add	r8, r8, #3
   140cc:	mov	r2, #1
   140d0:	str	r2, [fp, #-56]	; 0xffffffc8
   140d4:	cmp	r8, r4
   140d8:	movcc	r2, #92	; 0x5c
   140dc:	strbcc	r2, [r7, r8]
   140e0:	add	r3, r8, #1
   140e4:	cmp	r3, r4
   140e8:	bcs	14108 <putc_unlocked@plt+0x2e0c>
   140ec:	and	r7, r5, #192	; 0xc0
   140f0:	mov	r2, #48	; 0x30
   140f4:	orr	r7, r2, r7, lsr #6
   140f8:	ldr	r6, [sp, #80]	; 0x50
   140fc:	strb	r7, [r6, r3]
   14100:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14104:	ldr	r7, [sp, #80]	; 0x50
   14108:	add	r3, r8, #2
   1410c:	cmp	r3, r4
   14110:	bcs	14130 <putc_unlocked@plt+0x2e34>
   14114:	lsr	r7, r5, #3
   14118:	mov	r2, #6
   1411c:	bfi	r7, r2, #3, #29
   14120:	ldr	r6, [sp, #80]	; 0x50
   14124:	strb	r7, [r6, r3]
   14128:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1412c:	ldr	r7, [sp, #80]	; 0x50
   14130:	mov	r2, #6
   14134:	bfi	r5, r2, #3, #29
   14138:	add	r8, r8, #3
   1413c:	mov	r3, #1
   14140:	b	14188 <putc_unlocked@plt+0x2e8c>
   14144:	ldr	r7, [sp, #80]	; 0x50
   14148:	cmp	r8, r4
   1414c:	strbcc	r5, [r7, r8]
   14150:	ldrb	r5, [ip, r1]
   14154:	add	r1, r1, #1
   14158:	add	r8, r8, #1
   1415c:	tst	r0, #1
   14160:	beq	14074 <putc_unlocked@plt+0x2d78>
   14164:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14168:	tst	r2, #1
   1416c:	beq	14180 <putc_unlocked@plt+0x2e84>
   14170:	cmp	r8, r4
   14174:	movcc	r2, #92	; 0x5c
   14178:	strbcc	r2, [r7, r8]
   1417c:	add	r8, r8, #1
   14180:	mov	r2, #0
   14184:	str	r2, [fp, #-52]	; 0xffffffcc
   14188:	and	sl, r3, #1
   1418c:	ldr	r2, [sp, #44]	; 0x2c
   14190:	cmp	r2, r1
   14194:	bls	142a0 <putc_unlocked@plt+0x2fa4>
   14198:	cmp	sl, #0
   1419c:	movwne	sl, #1
   141a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   141a4:	mvn	r7, r2
   141a8:	orr	r7, r7, sl
   141ac:	tst	r7, #1
   141b0:	bne	14144 <putc_unlocked@plt+0x2e48>
   141b4:	cmp	r8, r4
   141b8:	ldrcc	r7, [sp, #80]	; 0x50
   141bc:	movcc	r2, #39	; 0x27
   141c0:	strbcc	r2, [r7, r8]
   141c4:	add	r7, r8, #1
   141c8:	cmp	r7, r4
   141cc:	ldrcc	r6, [sp, #80]	; 0x50
   141d0:	movcc	r2, #39	; 0x27
   141d4:	strbcc	r2, [r6, r7]
   141d8:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   141dc:	add	r8, r8, #2
   141e0:	mov	r2, #0
   141e4:	str	r2, [fp, #-56]	; 0xffffffc8
   141e8:	b	14144 <putc_unlocked@plt+0x2e48>
   141ec:	cmp	r8, r4
   141f0:	movcc	r0, #39	; 0x27
   141f4:	strbcc	r0, [r7, r8]
   141f8:	add	r0, r8, #1
   141fc:	cmp	r0, r4
   14200:	movcc	r1, #36	; 0x24
   14204:	strbcc	r1, [r7, r0]
   14208:	add	r0, r8, #2
   1420c:	cmp	r0, r4
   14210:	movcc	r1, #39	; 0x27
   14214:	strbcc	r1, [r7, r0]
   14218:	add	r0, r8, #3
   1421c:	mov	r2, #1
   14220:	cmp	r0, r4
   14224:	movcc	r1, #92	; 0x5c
   14228:	strbcc	r1, [r7, r0]
   1422c:	str	r2, [fp, #-56]	; 0xffffffc8
   14230:	add	r8, r0, #1
   14234:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14238:	cmp	r1, #2
   1423c:	beq	14290 <putc_unlocked@plt+0x2f94>
   14240:	add	r1, r6, #1
   14244:	mov	r9, #0
   14248:	mov	sl, #1
   1424c:	mov	r5, #48	; 0x30
   14250:	cmp	r1, lr
   14254:	bcs	13aa0 <putc_unlocked@plt+0x27a4>
   14258:	ldrb	r1, [ip, r1]
   1425c:	sub	r1, r1, #48	; 0x30
   14260:	uxtb	r1, r1
   14264:	cmp	r1, #9
   14268:	bhi	13aa0 <putc_unlocked@plt+0x27a4>
   1426c:	cmp	r8, r4
   14270:	movcc	r1, #48	; 0x30
   14274:	strbcc	r1, [r7, r8]
   14278:	add	r1, r0, #2
   1427c:	cmp	r1, r4
   14280:	movcc	r2, #48	; 0x30
   14284:	strbcc	r2, [r7, r1]
   14288:	add	r8, r0, #3
   1428c:	b	13aa0 <putc_unlocked@plt+0x27a4>
   14290:	mov	r0, #48	; 0x30
   14294:	mov	sl, #1
   14298:	mov	r9, #0
   1429c:	b	13d4c <putc_unlocked@plt+0x2a50>
   142a0:	sub	r6, r1, #1
   142a4:	cmp	sl, #0
   142a8:	movwne	sl, #1
   142ac:	mov	r0, r5
   142b0:	cmp	sl, #0
   142b4:	bne	142f4 <putc_unlocked@plt+0x2ff8>
   142b8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   142bc:	tst	r1, #1
   142c0:	beq	142f4 <putc_unlocked@plt+0x2ff8>
   142c4:	cmp	r8, r4
   142c8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   142cc:	movcc	r1, #39	; 0x27
   142d0:	strbcc	r1, [r7, r8]
   142d4:	add	r1, r8, #1
   142d8:	cmp	r1, r4
   142dc:	movcc	r2, #39	; 0x27
   142e0:	strbcc	r2, [r7, r1]
   142e4:	add	r8, r8, #2
   142e8:	mov	r1, #0
   142ec:	str	r1, [fp, #-56]	; 0xffffffc8
   142f0:	b	13dd8 <putc_unlocked@plt+0x2adc>
   142f4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   142f8:	b	13dd8 <putc_unlocked@plt+0x2adc>
   142fc:	mov	r9, #0
   14300:	b	1433c <putc_unlocked@plt+0x3040>
   14304:	mov	r9, #0
   14308:	cmp	r7, lr
   1430c:	bcs	1433c <putc_unlocked@plt+0x3040>
   14310:	ldr	ip, [fp, #-84]	; 0xffffffac
   14314:	ldr	r7, [sp, #44]	; 0x2c
   14318:	ldr	r0, [sp, #20]
   1431c:	ldrb	r0, [r0, r7]
   14320:	cmp	r0, #0
   14324:	beq	14344 <putc_unlocked@plt+0x3048>
   14328:	add	r7, r7, #1
   1432c:	add	r0, r6, r7
   14330:	cmp	r0, lr
   14334:	bcc	14318 <putc_unlocked@plt+0x301c>
   14338:	b	14344 <putc_unlocked@plt+0x3048>
   1433c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14340:	ldr	r7, [sp, #44]	; 0x2c
   14344:	mov	r1, r7
   14348:	ldr	r7, [sp, #80]	; 0x50
   1434c:	b	13c74 <putc_unlocked@plt+0x2978>
   14350:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14354:	eor	r0, r1, #2
   14358:	orr	r0, r0, r8
   1435c:	clz	r0, r0
   14360:	lsr	r0, r0, #5
   14364:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14368:	tst	r2, r0
   1436c:	bne	1442c <putc_unlocked@plt+0x3130>
   14370:	cmp	r1, #2
   14374:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14378:	movwne	r0, #1
   1437c:	orr	r0, r2, r0
   14380:	tst	r0, #1
   14384:	ldreq	r0, [sp, #56]	; 0x38
   14388:	eoreq	r0, r0, #1
   1438c:	tsteq	r0, #1
   14390:	bne	143c4 <putc_unlocked@plt+0x30c8>
   14394:	mov	r9, lr
   14398:	tst	r5, #1
   1439c:	bne	14494 <putc_unlocked@plt+0x3198>
   143a0:	ldr	r0, [sp, #72]	; 0x48
   143a4:	cmp	r0, #0
   143a8:	beq	143c4 <putc_unlocked@plt+0x30c8>
   143ac:	mov	r5, #0
   143b0:	cmp	r4, #0
   143b4:	ldr	r0, [sp, #84]	; 0x54
   143b8:	mov	sl, r2
   143bc:	ldr	r6, [sp, #72]	; 0x48
   143c0:	beq	1355c <putc_unlocked@plt+0x2260>
   143c4:	ldr	r1, [sp, #92]	; 0x5c
   143c8:	clz	r0, r1
   143cc:	lsr	r0, r0, #5
   143d0:	orr	r0, r0, r2
   143d4:	tst	r0, #1
   143d8:	bne	14404 <putc_unlocked@plt+0x3108>
   143dc:	ldrb	r0, [r1]
   143e0:	cmp	r0, #0
   143e4:	beq	14404 <putc_unlocked@plt+0x3108>
   143e8:	add	r1, r1, #1
   143ec:	cmp	r8, r4
   143f0:	strbcc	r0, [r7, r8]
   143f4:	add	r8, r8, #1
   143f8:	ldrb	r0, [r1], #1
   143fc:	cmp	r0, #0
   14400:	bne	143ec <putc_unlocked@plt+0x30f0>
   14404:	cmp	r8, r4
   14408:	movcc	r0, #0
   1440c:	strbcc	r0, [r7, r8]
   14410:	b	14488 <putc_unlocked@plt+0x318c>
   14414:	ldr	ip, [fp, #-84]	; 0xffffffac
   14418:	mov	lr, r4
   1441c:	mov	r4, r5
   14420:	b	1442c <putc_unlocked@plt+0x3130>
   14424:	ldr	r7, [sp, #80]	; 0x50
   14428:	ldr	ip, [fp, #-84]	; 0xffffffac
   1442c:	mov	r0, #0
   14430:	ldr	r1, [fp, #12]
   14434:	bic	r1, r1, #2
   14438:	ldr	r2, [sp, #84]	; 0x54
   1443c:	tst	r2, #1
   14440:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14444:	mov	r2, r3
   14448:	movwne	r2, #4
   1444c:	cmp	r3, #2
   14450:	movne	r2, r3
   14454:	str	r2, [sp]
   14458:	str	r1, [sp, #4]
   1445c:	str	r0, [sp, #8]
   14460:	ldr	r0, [sp, #68]	; 0x44
   14464:	str	r0, [sp, #12]
   14468:	ldr	r0, [sp, #76]	; 0x4c
   1446c:	str	r0, [sp, #16]
   14470:	mov	r0, r7
   14474:	mov	r1, r4
   14478:	mov	r2, ip
   1447c:	mov	r3, lr
   14480:	bl	134d4 <putc_unlocked@plt+0x21d8>
   14484:	mov	r8, r0
   14488:	mov	r0, r8
   1448c:	sub	sp, fp, #28
   14490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14494:	mov	r0, #5
   14498:	str	r0, [sp]
   1449c:	ldr	r0, [fp, #12]
   144a0:	str	r0, [sp, #4]
   144a4:	ldr	r0, [fp, #16]
   144a8:	str	r0, [sp, #8]
   144ac:	ldr	r0, [sp, #68]	; 0x44
   144b0:	str	r0, [sp, #12]
   144b4:	ldr	r0, [sp, #76]	; 0x4c
   144b8:	str	r0, [sp, #16]
   144bc:	mov	r0, r7
   144c0:	ldr	r1, [sp, #72]	; 0x48
   144c4:	ldr	r2, [fp, #-84]	; 0xffffffac
   144c8:	mov	r3, r9
   144cc:	b	14480 <putc_unlocked@plt+0x3184>
   144d0:	bl	112c0 <abort@plt>
   144d4:	mov	r3, r2
   144d8:	mov	r2, #0
   144dc:	b	144e0 <putc_unlocked@plt+0x31e4>
   144e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144e4:	add	fp, sp, #28
   144e8:	sub	sp, sp, #36	; 0x24
   144ec:	mov	r4, r2
   144f0:	str	r2, [sp, #24]
   144f4:	mov	r5, r1
   144f8:	mov	r6, r0
   144fc:	str	r0, [sp, #20]
   14500:	movw	r8, #33200	; 0x81b0
   14504:	movt	r8, #2
   14508:	cmp	r3, #0
   1450c:	movne	r8, r3
   14510:	bl	11218 <__errno_location@plt>
   14514:	str	r0, [sp, #28]
   14518:	ldm	r8, {r3, r9}
   1451c:	ldr	r1, [r8, #40]	; 0x28
   14520:	ldr	r2, [r8, #44]	; 0x2c
   14524:	ldr	r7, [r0]
   14528:	str	r7, [sp, #32]
   1452c:	add	sl, r8, #8
   14530:	cmp	r4, #0
   14534:	orreq	r9, r9, #1
   14538:	stm	sp, {r3, r9, sl}
   1453c:	str	r1, [sp, #12]
   14540:	str	r2, [sp, #16]
   14544:	mov	r0, #0
   14548:	mov	r1, #0
   1454c:	mov	r2, r6
   14550:	mov	r3, r5
   14554:	mov	r7, r5
   14558:	bl	134d4 <putc_unlocked@plt+0x21d8>
   1455c:	mov	r5, r0
   14560:	add	r4, r0, #1
   14564:	mov	r0, r4
   14568:	bl	153e4 <putc_unlocked@plt+0x40e8>
   1456c:	mov	r6, r0
   14570:	ldr	r0, [r8]
   14574:	ldr	r1, [r8, #40]	; 0x28
   14578:	ldr	r2, [r8, #44]	; 0x2c
   1457c:	stm	sp, {r0, r9, sl}
   14580:	str	r1, [sp, #12]
   14584:	str	r2, [sp, #16]
   14588:	mov	r0, r6
   1458c:	mov	r1, r4
   14590:	ldr	r2, [sp, #20]
   14594:	mov	r3, r7
   14598:	bl	134d4 <putc_unlocked@plt+0x21d8>
   1459c:	ldr	r0, [sp, #24]
   145a0:	ldr	r1, [sp, #32]
   145a4:	ldr	r2, [sp, #28]
   145a8:	str	r1, [r2]
   145ac:	cmp	r0, #0
   145b0:	strne	r5, [r0]
   145b4:	mov	r0, r6
   145b8:	sub	sp, fp, #28
   145bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145c4:	add	fp, sp, #24
   145c8:	movw	r8, #33048	; 0x8118
   145cc:	movt	r8, #2
   145d0:	ldr	r4, [r8]
   145d4:	movw	r5, #33052	; 0x811c
   145d8:	movt	r5, #2
   145dc:	ldr	r0, [r5]
   145e0:	cmp	r0, #2
   145e4:	blt	14610 <putc_unlocked@plt+0x3314>
   145e8:	add	r7, r4, #12
   145ec:	mov	r6, #0
   145f0:	ldr	r0, [r7, r6, lsl #3]
   145f4:	bl	12e48 <putc_unlocked@plt+0x1b4c>
   145f8:	add	r0, r6, #1
   145fc:	ldr	r1, [r5]
   14600:	add	r2, r6, #2
   14604:	cmp	r2, r1
   14608:	mov	r6, r0
   1460c:	blt	145f0 <putc_unlocked@plt+0x32f4>
   14610:	ldr	r0, [r4, #4]
   14614:	movw	r7, #33248	; 0x81e0
   14618:	movt	r7, #2
   1461c:	cmp	r0, r7
   14620:	beq	14638 <putc_unlocked@plt+0x333c>
   14624:	bl	12e48 <putc_unlocked@plt+0x1b4c>
   14628:	movw	r0, #33056	; 0x8120
   1462c:	movt	r0, #2
   14630:	mov	r6, #256	; 0x100
   14634:	strd	r6, [r0]
   14638:	movw	r6, #33056	; 0x8120
   1463c:	movt	r6, #2
   14640:	cmp	r4, r6
   14644:	beq	14654 <putc_unlocked@plt+0x3358>
   14648:	mov	r0, r4
   1464c:	bl	12e48 <putc_unlocked@plt+0x1b4c>
   14650:	str	r6, [r8]
   14654:	mov	r0, #1
   14658:	str	r0, [r5]
   1465c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14660:	movw	r3, #33200	; 0x81b0
   14664:	movt	r3, #2
   14668:	mvn	r2, #0
   1466c:	b	14670 <putc_unlocked@plt+0x3374>
   14670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14674:	add	fp, sp, #28
   14678:	sub	sp, sp, #44	; 0x2c
   1467c:	mov	r7, r3
   14680:	str	r2, [sp, #36]	; 0x24
   14684:	str	r1, [sp, #32]
   14688:	mov	r5, r0
   1468c:	bl	11218 <__errno_location@plt>
   14690:	cmp	r5, #0
   14694:	blt	14800 <putc_unlocked@plt+0x3504>
   14698:	cmn	r5, #-2147483647	; 0x80000001
   1469c:	beq	14800 <putc_unlocked@plt+0x3504>
   146a0:	movw	r4, #33048	; 0x8118
   146a4:	movt	r4, #2
   146a8:	ldr	r6, [r4]
   146ac:	str	r0, [sp, #28]
   146b0:	ldr	r0, [r0]
   146b4:	str	r0, [sp, #24]
   146b8:	movw	r8, #33052	; 0x811c
   146bc:	movt	r8, #2
   146c0:	ldr	r1, [r8]
   146c4:	cmp	r1, r5
   146c8:	ble	146d4 <putc_unlocked@plt+0x33d8>
   146cc:	mov	sl, r6
   146d0:	b	1473c <putc_unlocked@plt+0x3440>
   146d4:	str	r1, [fp, #-32]	; 0xffffffe0
   146d8:	mov	r0, #8
   146dc:	str	r0, [sp]
   146e0:	movw	r9, #33056	; 0x8120
   146e4:	movt	r9, #2
   146e8:	subs	r0, r6, r9
   146ec:	movne	r0, r6
   146f0:	add	r2, r5, #1
   146f4:	sub	r2, r2, r1
   146f8:	sub	r1, fp, #32
   146fc:	mvn	r3, #-2147483648	; 0x80000000
   14700:	bl	154cc <putc_unlocked@plt+0x41d0>
   14704:	mov	sl, r0
   14708:	str	r0, [r4]
   1470c:	cmp	r6, r9
   14710:	ldrdeq	r0, [r9]
   14714:	stmeq	sl, {r0, r1}
   14718:	ldr	r1, [r8]
   1471c:	add	r0, sl, r1, lsl #3
   14720:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14724:	sub	r1, r2, r1
   14728:	lsl	r2, r1, #3
   1472c:	mov	r1, #0
   14730:	bl	11230 <memset@plt>
   14734:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14738:	str	r0, [r8]
   1473c:	mov	r9, sl
   14740:	ldr	r6, [r9, r5, lsl #3]!
   14744:	ldr	r4, [r9, #4]!
   14748:	ldm	r7, {r0, r1}
   1474c:	ldr	r2, [r7, #40]	; 0x28
   14750:	ldr	r3, [r7, #44]	; 0x2c
   14754:	orr	r8, r1, #1
   14758:	add	r1, r7, #8
   1475c:	stm	sp, {r0, r8}
   14760:	str	r1, [sp, #20]
   14764:	add	r0, sp, #8
   14768:	stm	r0, {r1, r2, r3}
   1476c:	mov	r0, r4
   14770:	mov	r1, r6
   14774:	ldr	r2, [sp, #32]
   14778:	ldr	r3, [sp, #36]	; 0x24
   1477c:	bl	134d4 <putc_unlocked@plt+0x21d8>
   14780:	cmp	r6, r0
   14784:	bhi	147e8 <putc_unlocked@plt+0x34ec>
   14788:	add	r6, r0, #1
   1478c:	str	r6, [sl, r5, lsl #3]
   14790:	movw	r0, #33248	; 0x81e0
   14794:	movt	r0, #2
   14798:	cmp	r4, r0
   1479c:	beq	147a8 <putc_unlocked@plt+0x34ac>
   147a0:	mov	r0, r4
   147a4:	bl	12e48 <putc_unlocked@plt+0x1b4c>
   147a8:	mov	r0, r6
   147ac:	bl	153e4 <putc_unlocked@plt+0x40e8>
   147b0:	mov	r4, r0
   147b4:	str	r0, [r9]
   147b8:	ldr	r0, [r7]
   147bc:	ldr	r1, [r7, #40]	; 0x28
   147c0:	ldr	r2, [r7, #44]	; 0x2c
   147c4:	stm	sp, {r0, r8}
   147c8:	ldr	r0, [sp, #20]
   147cc:	add	r3, sp, #8
   147d0:	stm	r3, {r0, r1, r2}
   147d4:	mov	r0, r4
   147d8:	mov	r1, r6
   147dc:	ldr	r2, [sp, #32]
   147e0:	ldr	r3, [sp, #36]	; 0x24
   147e4:	bl	134d4 <putc_unlocked@plt+0x21d8>
   147e8:	ldr	r0, [sp, #28]
   147ec:	ldr	r1, [sp, #24]
   147f0:	str	r1, [r0]
   147f4:	mov	r0, r4
   147f8:	sub	sp, fp, #28
   147fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14800:	bl	112c0 <abort@plt>
   14804:	movw	r3, #33200	; 0x81b0
   14808:	movt	r3, #2
   1480c:	b	14670 <putc_unlocked@plt+0x3374>
   14810:	mov	r1, r0
   14814:	mov	r0, #0
   14818:	b	14660 <putc_unlocked@plt+0x3364>
   1481c:	mov	r2, r1
   14820:	mov	r1, r0
   14824:	mov	r0, #0
   14828:	b	14804 <putc_unlocked@plt+0x3508>
   1482c:	push	{r4, r5, r6, sl, fp, lr}
   14830:	add	fp, sp, #16
   14834:	sub	sp, sp, #48	; 0x30
   14838:	mov	r4, r2
   1483c:	mov	r5, r0
   14840:	mov	r6, sp
   14844:	mov	r0, r6
   14848:	bl	14868 <putc_unlocked@plt+0x356c>
   1484c:	mov	r0, r5
   14850:	mov	r1, r4
   14854:	mvn	r2, #0
   14858:	mov	r3, r6
   1485c:	bl	14670 <putc_unlocked@plt+0x3374>
   14860:	sub	sp, fp, #16
   14864:	pop	{r4, r5, r6, sl, fp, pc}
   14868:	vmov.i32	q8, #0	; 0x00000000
   1486c:	mov	r2, #32
   14870:	mov	r3, r0
   14874:	vst1.32	{d16-d17}, [r3], r2
   14878:	vst1.32	{d16-d17}, [r3]
   1487c:	add	r2, r0, #16
   14880:	vst1.32	{d16-d17}, [r2]
   14884:	cmp	r1, #10
   14888:	strne	r1, [r0]
   1488c:	bxne	lr
   14890:	push	{fp, lr}
   14894:	mov	fp, sp
   14898:	bl	112c0 <abort@plt>
   1489c:	push	{r4, r5, r6, r7, fp, lr}
   148a0:	add	fp, sp, #16
   148a4:	sub	sp, sp, #48	; 0x30
   148a8:	mov	r4, r3
   148ac:	mov	r5, r2
   148b0:	mov	r6, r0
   148b4:	mov	r7, sp
   148b8:	mov	r0, r7
   148bc:	bl	14868 <putc_unlocked@plt+0x356c>
   148c0:	mov	r0, r6
   148c4:	mov	r1, r5
   148c8:	mov	r2, r4
   148cc:	mov	r3, r7
   148d0:	bl	14670 <putc_unlocked@plt+0x3374>
   148d4:	sub	sp, fp, #16
   148d8:	pop	{r4, r5, r6, r7, fp, pc}
   148dc:	mov	r2, r1
   148e0:	mov	r1, r0
   148e4:	mov	r0, #0
   148e8:	b	1482c <putc_unlocked@plt+0x3530>
   148ec:	mov	r3, r2
   148f0:	mov	r2, r1
   148f4:	mov	r1, r0
   148f8:	mov	r0, #0
   148fc:	b	1489c <putc_unlocked@plt+0x35a0>
   14900:	push	{r4, r5, r6, sl, fp, lr}
   14904:	add	fp, sp, #16
   14908:	sub	sp, sp, #48	; 0x30
   1490c:	mov	r4, r1
   14910:	mov	r5, r0
   14914:	mov	r0, #32
   14918:	movw	r1, #33200	; 0x81b0
   1491c:	movt	r1, #2
   14920:	add	r3, r1, #16
   14924:	vld1.64	{d16-d17}, [r1], r0
   14928:	mov	r6, sp
   1492c:	vld1.64	{d18-d19}, [r3]
   14930:	add	r3, r6, #16
   14934:	vld1.64	{d20-d21}, [r1]
   14938:	vst1.64	{d18-d19}, [r3]
   1493c:	mov	r1, r6
   14940:	vst1.64	{d16-d17}, [r1], r0
   14944:	vst1.64	{d20-d21}, [r1]
   14948:	mov	r0, r6
   1494c:	mov	r1, r2
   14950:	mov	r2, #1
   14954:	bl	133c8 <putc_unlocked@plt+0x20cc>
   14958:	mov	r0, #0
   1495c:	mov	r1, r5
   14960:	mov	r2, r4
   14964:	mov	r3, r6
   14968:	bl	14670 <putc_unlocked@plt+0x3374>
   1496c:	sub	sp, fp, #16
   14970:	pop	{r4, r5, r6, sl, fp, pc}
   14974:	mov	r2, r1
   14978:	mvn	r1, #0
   1497c:	b	14900 <putc_unlocked@plt+0x3604>
   14980:	mov	r1, #58	; 0x3a
   14984:	b	14974 <putc_unlocked@plt+0x3678>
   14988:	mov	r2, #58	; 0x3a
   1498c:	b	14900 <putc_unlocked@plt+0x3604>
   14990:	push	{r4, r5, r6, sl, fp, lr}
   14994:	add	fp, sp, #16
   14998:	sub	sp, sp, #48	; 0x30
   1499c:	mov	r4, r2
   149a0:	mov	r5, r0
   149a4:	mov	r6, sp
   149a8:	mov	r0, r6
   149ac:	bl	14868 <putc_unlocked@plt+0x356c>
   149b0:	mov	r0, r6
   149b4:	mov	r1, #58	; 0x3a
   149b8:	mov	r2, #1
   149bc:	bl	133c8 <putc_unlocked@plt+0x20cc>
   149c0:	mov	r0, r5
   149c4:	mov	r1, r4
   149c8:	mvn	r2, #0
   149cc:	mov	r3, r6
   149d0:	bl	14670 <putc_unlocked@plt+0x3374>
   149d4:	sub	sp, fp, #16
   149d8:	pop	{r4, r5, r6, sl, fp, pc}
   149dc:	push	{fp, lr}
   149e0:	mov	fp, sp
   149e4:	sub	sp, sp, #8
   149e8:	mvn	ip, #0
   149ec:	str	ip, [sp]
   149f0:	bl	149fc <putc_unlocked@plt+0x3700>
   149f4:	mov	sp, fp
   149f8:	pop	{fp, pc}
   149fc:	push	{r4, r5, r6, r7, fp, lr}
   14a00:	add	fp, sp, #16
   14a04:	sub	sp, sp, #48	; 0x30
   14a08:	mov	r7, r3
   14a0c:	mov	r5, r0
   14a10:	mov	r0, #32
   14a14:	movw	r3, #33200	; 0x81b0
   14a18:	movt	r3, #2
   14a1c:	add	r4, r3, #16
   14a20:	vld1.64	{d16-d17}, [r3], r0
   14a24:	mov	r6, sp
   14a28:	vld1.64	{d18-d19}, [r4]
   14a2c:	add	r4, r6, #16
   14a30:	vld1.64	{d20-d21}, [r3]
   14a34:	vst1.64	{d18-d19}, [r4]
   14a38:	mov	r3, r6
   14a3c:	vst1.64	{d16-d17}, [r3], r0
   14a40:	vst1.64	{d20-d21}, [r3]
   14a44:	mov	r0, r6
   14a48:	bl	13420 <putc_unlocked@plt+0x2124>
   14a4c:	ldr	r2, [fp, #8]
   14a50:	mov	r0, r5
   14a54:	mov	r1, r7
   14a58:	mov	r3, r6
   14a5c:	bl	14670 <putc_unlocked@plt+0x3374>
   14a60:	sub	sp, fp, #16
   14a64:	pop	{r4, r5, r6, r7, fp, pc}
   14a68:	mov	r3, r2
   14a6c:	mov	r2, r1
   14a70:	mov	r1, r0
   14a74:	mov	r0, #0
   14a78:	b	149dc <putc_unlocked@plt+0x36e0>
   14a7c:	push	{fp, lr}
   14a80:	mov	fp, sp
   14a84:	sub	sp, sp, #8
   14a88:	mov	ip, r2
   14a8c:	mov	r2, r1
   14a90:	mov	r1, r0
   14a94:	str	r3, [sp]
   14a98:	mov	r0, #0
   14a9c:	mov	r3, ip
   14aa0:	bl	149fc <putc_unlocked@plt+0x3700>
   14aa4:	mov	sp, fp
   14aa8:	pop	{fp, pc}
   14aac:	movw	r3, #33064	; 0x8128
   14ab0:	movt	r3, #2
   14ab4:	b	14670 <putc_unlocked@plt+0x3374>
   14ab8:	mov	r2, r1
   14abc:	mov	r1, r0
   14ac0:	mov	r0, #0
   14ac4:	b	14aac <putc_unlocked@plt+0x37b0>
   14ac8:	mvn	r2, #0
   14acc:	b	14aac <putc_unlocked@plt+0x37b0>
   14ad0:	mov	r1, r0
   14ad4:	mov	r0, #0
   14ad8:	b	14ac8 <putc_unlocked@plt+0x37cc>
   14adc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ae0:	add	fp, sp, #24
   14ae4:	sub	sp, sp, #16
   14ae8:	mov	r4, r1
   14aec:	mov	r5, r0
   14af0:	mov	r7, #0
   14af4:	mov	r0, #0
   14af8:	mov	r1, r5
   14afc:	mov	r2, #5
   14b00:	bl	110ec <dcgettext@plt>
   14b04:	cmp	r0, r5
   14b08:	beq	14b14 <putc_unlocked@plt+0x3818>
   14b0c:	sub	sp, fp, #24
   14b10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b14:	bl	161a4 <putc_unlocked@plt+0x4ea8>
   14b18:	mov	r6, r0
   14b1c:	mov	r8, #56	; 0x38
   14b20:	mov	r0, #45	; 0x2d
   14b24:	stm	sp, {r0, r8}
   14b28:	str	r7, [sp, #8]
   14b2c:	str	r7, [sp, #12]
   14b30:	mov	r0, r6
   14b34:	mov	r1, #85	; 0x55
   14b38:	mov	r2, #84	; 0x54
   14b3c:	mov	r3, #70	; 0x46
   14b40:	bl	14bd8 <putc_unlocked@plt+0x38dc>
   14b44:	cmp	r0, #0
   14b48:	beq	14b64 <putc_unlocked@plt+0x3868>
   14b4c:	ldrb	r1, [r5]
   14b50:	movw	r2, #29093	; 0x71a5
   14b54:	movt	r2, #1
   14b58:	movw	r0, #29097	; 0x71a9
   14b5c:	movt	r0, #1
   14b60:	b	14ba8 <putc_unlocked@plt+0x38ac>
   14b64:	mov	r0, #48	; 0x30
   14b68:	mov	r1, #51	; 0x33
   14b6c:	str	r8, [sp]
   14b70:	stmib	sp, {r0, r1}
   14b74:	str	r0, [sp, #12]
   14b78:	mov	r0, r6
   14b7c:	mov	r1, #71	; 0x47
   14b80:	mov	r2, #66	; 0x42
   14b84:	mov	r3, #49	; 0x31
   14b88:	bl	14bd8 <putc_unlocked@plt+0x38dc>
   14b8c:	cmp	r0, #0
   14b90:	beq	14bb8 <putc_unlocked@plt+0x38bc>
   14b94:	ldrb	r1, [r5]
   14b98:	movw	r2, #29101	; 0x71ad
   14b9c:	movt	r2, #1
   14ba0:	movw	r0, #29105	; 0x71b1
   14ba4:	movt	r0, #1
   14ba8:	cmp	r1, #96	; 0x60
   14bac:	moveq	r0, r2
   14bb0:	sub	sp, fp, #24
   14bb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14bb8:	movw	r1, #29087	; 0x719f
   14bbc:	movt	r1, #1
   14bc0:	movw	r0, #29091	; 0x71a3
   14bc4:	movt	r0, #1
   14bc8:	cmp	r4, #9
   14bcc:	moveq	r0, r1
   14bd0:	sub	sp, fp, #24
   14bd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14bd8:	push	{r4, r5, r6, r7, fp, lr}
   14bdc:	add	fp, sp, #16
   14be0:	sub	sp, sp, #16
   14be4:	mov	r4, r3
   14be8:	mov	r5, r2
   14bec:	mov	r7, r1
   14bf0:	mov	r6, r0
   14bf4:	mov	r0, r1
   14bf8:	bl	1605c <putc_unlocked@plt+0x4d60>
   14bfc:	ldrb	r1, [r6]
   14c00:	cmp	r0, #0
   14c04:	andne	r1, r1, #223	; 0xdf
   14c08:	mov	r0, #0
   14c0c:	cmp	r1, r7
   14c10:	bne	14c50 <putc_unlocked@plt+0x3954>
   14c14:	cmp	r7, #0
   14c18:	moveq	r0, #1
   14c1c:	subeq	sp, fp, #16
   14c20:	popeq	{r4, r5, r6, r7, fp, pc}
   14c24:	ldr	r0, [fp, #20]
   14c28:	ldr	r1, [fp, #16]
   14c2c:	ldr	r2, [fp, #12]
   14c30:	ldr	r3, [fp, #8]
   14c34:	str	r2, [sp]
   14c38:	str	r1, [sp, #4]
   14c3c:	str	r0, [sp, #8]
   14c40:	mov	r0, r6
   14c44:	mov	r1, r5
   14c48:	mov	r2, r4
   14c4c:	bl	14c58 <putc_unlocked@plt+0x395c>
   14c50:	sub	sp, fp, #16
   14c54:	pop	{r4, r5, r6, r7, fp, pc}
   14c58:	push	{r4, r5, r6, r7, fp, lr}
   14c5c:	add	fp, sp, #16
   14c60:	sub	sp, sp, #8
   14c64:	mov	r4, r3
   14c68:	mov	r5, r2
   14c6c:	mov	r7, r1
   14c70:	mov	r6, r0
   14c74:	mov	r0, r1
   14c78:	bl	1605c <putc_unlocked@plt+0x4d60>
   14c7c:	ldrb	r1, [r6, #1]
   14c80:	cmp	r0, #0
   14c84:	andne	r1, r1, #223	; 0xdf
   14c88:	mov	r0, #0
   14c8c:	cmp	r1, r7
   14c90:	bne	14cc8 <putc_unlocked@plt+0x39cc>
   14c94:	cmp	r7, #0
   14c98:	moveq	r0, #1
   14c9c:	subeq	sp, fp, #16
   14ca0:	popeq	{r4, r5, r6, r7, fp, pc}
   14ca4:	ldr	r0, [fp, #16]
   14ca8:	ldr	r1, [fp, #12]
   14cac:	ldr	r3, [fp, #8]
   14cb0:	str	r1, [sp]
   14cb4:	str	r0, [sp, #4]
   14cb8:	mov	r0, r6
   14cbc:	mov	r1, r5
   14cc0:	mov	r2, r4
   14cc4:	bl	14cd0 <putc_unlocked@plt+0x39d4>
   14cc8:	sub	sp, fp, #16
   14ccc:	pop	{r4, r5, r6, r7, fp, pc}
   14cd0:	push	{r4, r5, r6, r7, fp, lr}
   14cd4:	add	fp, sp, #16
   14cd8:	sub	sp, sp, #8
   14cdc:	mov	r4, r3
   14ce0:	mov	r5, r2
   14ce4:	mov	r7, r1
   14ce8:	mov	r6, r0
   14cec:	mov	r0, r1
   14cf0:	bl	1605c <putc_unlocked@plt+0x4d60>
   14cf4:	ldrb	r1, [r6, #2]
   14cf8:	cmp	r0, #0
   14cfc:	andne	r1, r1, #223	; 0xdf
   14d00:	mov	r0, #0
   14d04:	cmp	r1, r7
   14d08:	bne	14d38 <putc_unlocked@plt+0x3a3c>
   14d0c:	cmp	r7, #0
   14d10:	moveq	r0, #1
   14d14:	subeq	sp, fp, #16
   14d18:	popeq	{r4, r5, r6, r7, fp, pc}
   14d1c:	ldr	r0, [fp, #12]
   14d20:	ldr	r3, [fp, #8]
   14d24:	str	r0, [sp]
   14d28:	mov	r0, r6
   14d2c:	mov	r1, r5
   14d30:	mov	r2, r4
   14d34:	bl	14d40 <putc_unlocked@plt+0x3a44>
   14d38:	sub	sp, fp, #16
   14d3c:	pop	{r4, r5, r6, r7, fp, pc}
   14d40:	push	{r4, r5, r6, r7, fp, lr}
   14d44:	add	fp, sp, #16
   14d48:	mov	r4, r3
   14d4c:	mov	r5, r2
   14d50:	mov	r7, r1
   14d54:	mov	r6, r0
   14d58:	mov	r0, r1
   14d5c:	bl	1605c <putc_unlocked@plt+0x4d60>
   14d60:	ldrb	r1, [r6, #3]
   14d64:	ldr	r3, [fp, #8]
   14d68:	cmp	r0, #0
   14d6c:	andne	r1, r1, #223	; 0xdf
   14d70:	mov	r0, #0
   14d74:	cmp	r1, r7
   14d78:	popne	{r4, r5, r6, r7, fp, pc}
   14d7c:	cmp	r7, #0
   14d80:	beq	14d98 <putc_unlocked@plt+0x3a9c>
   14d84:	mov	r0, r6
   14d88:	mov	r1, r5
   14d8c:	mov	r2, r4
   14d90:	pop	{r4, r5, r6, r7, fp, lr}
   14d94:	b	14da0 <putc_unlocked@plt+0x3aa4>
   14d98:	mov	r0, #1
   14d9c:	pop	{r4, r5, r6, r7, fp, pc}
   14da0:	push	{r4, r5, r6, r7, fp, lr}
   14da4:	add	fp, sp, #16
   14da8:	mov	r4, r3
   14dac:	mov	r5, r2
   14db0:	mov	r7, r1
   14db4:	mov	r6, r0
   14db8:	mov	r0, r1
   14dbc:	bl	1605c <putc_unlocked@plt+0x4d60>
   14dc0:	ldrb	r1, [r6, #4]
   14dc4:	cmp	r0, #0
   14dc8:	andne	r1, r1, #223	; 0xdf
   14dcc:	mov	r0, #0
   14dd0:	cmp	r1, r7
   14dd4:	popne	{r4, r5, r6, r7, fp, pc}
   14dd8:	cmp	r7, #0
   14ddc:	beq	14df4 <putc_unlocked@plt+0x3af8>
   14de0:	mov	r0, r6
   14de4:	mov	r1, r5
   14de8:	mov	r2, r4
   14dec:	pop	{r4, r5, r6, r7, fp, lr}
   14df0:	b	14dfc <putc_unlocked@plt+0x3b00>
   14df4:	mov	r0, #1
   14df8:	pop	{r4, r5, r6, r7, fp, pc}
   14dfc:	push	{r4, r5, r6, sl, fp, lr}
   14e00:	add	fp, sp, #16
   14e04:	mov	r4, r2
   14e08:	mov	r6, r1
   14e0c:	mov	r5, r0
   14e10:	mov	r0, r1
   14e14:	bl	1605c <putc_unlocked@plt+0x4d60>
   14e18:	ldrb	r1, [r5, #5]
   14e1c:	cmp	r0, #0
   14e20:	andne	r1, r1, #223	; 0xdf
   14e24:	mov	r0, #0
   14e28:	cmp	r1, r6
   14e2c:	popne	{r4, r5, r6, sl, fp, pc}
   14e30:	cmp	r6, #0
   14e34:	beq	14e48 <putc_unlocked@plt+0x3b4c>
   14e38:	mov	r0, r5
   14e3c:	mov	r1, r4
   14e40:	pop	{r4, r5, r6, sl, fp, lr}
   14e44:	b	14e50 <putc_unlocked@plt+0x3b54>
   14e48:	mov	r0, #1
   14e4c:	pop	{r4, r5, r6, sl, fp, pc}
   14e50:	push	{r4, r5, fp, lr}
   14e54:	add	fp, sp, #8
   14e58:	mov	r5, r1
   14e5c:	mov	r4, r0
   14e60:	mov	r0, r1
   14e64:	bl	1605c <putc_unlocked@plt+0x4d60>
   14e68:	ldrb	r1, [r4, #6]
   14e6c:	cmp	r0, #0
   14e70:	andne	r1, r1, #223	; 0xdf
   14e74:	mov	r0, #0
   14e78:	cmp	r1, r5
   14e7c:	popne	{r4, r5, fp, pc}
   14e80:	cmp	r5, #0
   14e84:	beq	14e94 <putc_unlocked@plt+0x3b98>
   14e88:	mov	r0, r4
   14e8c:	pop	{r4, r5, fp, lr}
   14e90:	b	14e9c <putc_unlocked@plt+0x3ba0>
   14e94:	mov	r0, #1
   14e98:	pop	{r4, r5, fp, pc}
   14e9c:	push	{r4, sl, fp, lr}
   14ea0:	add	fp, sp, #8
   14ea4:	mov	r4, r0
   14ea8:	mov	r0, #0
   14eac:	bl	1605c <putc_unlocked@plt+0x4d60>
   14eb0:	ldrb	r1, [r4, #7]
   14eb4:	cmp	r0, #0
   14eb8:	beq	14ed0 <putc_unlocked@plt+0x3bd4>
   14ebc:	tst	r1, #223	; 0xdf
   14ec0:	moveq	r0, #1
   14ec4:	popeq	{r4, sl, fp, pc}
   14ec8:	mov	r0, #0
   14ecc:	pop	{r4, sl, fp, pc}
   14ed0:	cmp	r1, #0
   14ed4:	moveq	r0, #1
   14ed8:	popeq	{r4, sl, fp, pc}
   14edc:	mov	r0, #0
   14ee0:	pop	{r4, sl, fp, pc}
   14ee4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ee8:	add	fp, sp, #24
   14eec:	sub	sp, sp, #32
   14ef0:	mov	r4, r2
   14ef4:	mov	r8, r0
   14ef8:	ldr	r6, [fp, #12]
   14efc:	ldr	r7, [fp, #8]
   14f00:	cmp	r1, #0
   14f04:	beq	14f2c <putc_unlocked@plt+0x3c30>
   14f08:	mov	r5, r1
   14f0c:	str	r4, [sp]
   14f10:	str	r3, [sp, #4]
   14f14:	movw	r2, #29192	; 0x7208
   14f18:	movt	r2, #1
   14f1c:	mov	r0, r8
   14f20:	mov	r1, #1
   14f24:	mov	r3, r5
   14f28:	b	14f44 <putc_unlocked@plt+0x3c48>
   14f2c:	str	r3, [sp]
   14f30:	movw	r2, #29204	; 0x7214
   14f34:	movt	r2, #1
   14f38:	mov	r0, r8
   14f3c:	mov	r1, #1
   14f40:	mov	r3, r4
   14f44:	bl	11260 <__fprintf_chk@plt>
   14f48:	movw	r1, #29211	; 0x721b
   14f4c:	movt	r1, #1
   14f50:	mov	r0, #0
   14f54:	mov	r2, #5
   14f58:	bl	110ec <dcgettext@plt>
   14f5c:	mov	r3, r0
   14f60:	movw	r0, #2022	; 0x7e6
   14f64:	str	r0, [sp]
   14f68:	movw	r2, #29929	; 0x74e9
   14f6c:	movt	r2, #1
   14f70:	mov	r0, r8
   14f74:	mov	r1, #1
   14f78:	bl	11260 <__fprintf_chk@plt>
   14f7c:	movw	r4, #28311	; 0x6e97
   14f80:	movt	r4, #1
   14f84:	mov	r0, r4
   14f88:	mov	r1, r8
   14f8c:	bl	11050 <fputs_unlocked@plt>
   14f90:	movw	r1, #29215	; 0x721f
   14f94:	movt	r1, #1
   14f98:	mov	r0, #0
   14f9c:	mov	r2, #5
   14fa0:	bl	110ec <dcgettext@plt>
   14fa4:	mov	r2, r0
   14fa8:	movw	r3, #29386	; 0x72ca
   14fac:	movt	r3, #1
   14fb0:	mov	r0, r8
   14fb4:	mov	r1, #1
   14fb8:	bl	11260 <__fprintf_chk@plt>
   14fbc:	mov	r0, r4
   14fc0:	mov	r1, r8
   14fc4:	bl	11050 <fputs_unlocked@plt>
   14fc8:	cmp	r6, #9
   14fcc:	bhi	15008 <putc_unlocked@plt+0x3d0c>
   14fd0:	add	r0, pc, #0
   14fd4:	ldr	pc, [r0, r6, lsl #2]
   14fd8:	andeq	r5, r1, r0
   14fdc:	andeq	r5, r1, r4, lsl r0
   14fe0:	andeq	r5, r1, r4, asr #32
   14fe4:	andeq	r5, r1, ip, rrx
   14fe8:	muleq	r1, r4, r0
   14fec:	strheq	r5, [r1], -ip
   14ff0:	andeq	r5, r1, r4, ror #1
   14ff4:	andeq	r5, r1, ip, lsl r1
   14ff8:			; <UNDEFINED> instruction: 0x000151bc
   14ffc:	andeq	r5, r1, r4, ror #2
   15000:	sub	sp, fp, #24
   15004:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15008:	movw	r1, #29739	; 0x742b
   1500c:	movt	r1, #1
   15010:	b	1516c <putc_unlocked@plt+0x3e70>
   15014:	movw	r1, #29420	; 0x72ec
   15018:	movt	r1, #1
   1501c:	mov	r0, #0
   15020:	mov	r2, #5
   15024:	bl	110ec <dcgettext@plt>
   15028:	mov	r2, r0
   1502c:	ldr	r3, [r7]
   15030:	mov	r0, r8
   15034:	mov	r1, #1
   15038:	sub	sp, fp, #24
   1503c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15040:	b	11260 <__fprintf_chk@plt>
   15044:	movw	r1, #29436	; 0x72fc
   15048:	movt	r1, #1
   1504c:	mov	r0, #0
   15050:	mov	r2, #5
   15054:	bl	110ec <dcgettext@plt>
   15058:	mov	r2, r0
   1505c:	ldr	r3, [r7]
   15060:	ldr	r0, [r7, #4]
   15064:	str	r0, [sp]
   15068:	b	15158 <putc_unlocked@plt+0x3e5c>
   1506c:	movw	r1, #29459	; 0x7313
   15070:	movt	r1, #1
   15074:	mov	r0, #0
   15078:	mov	r2, #5
   1507c:	bl	110ec <dcgettext@plt>
   15080:	mov	r2, r0
   15084:	ldr	r3, [r7]
   15088:	ldmib	r7, {r0, r1}
   1508c:	stm	sp, {r0, r1}
   15090:	b	15158 <putc_unlocked@plt+0x3e5c>
   15094:	movw	r1, #29487	; 0x732f
   15098:	movt	r1, #1
   1509c:	mov	r0, #0
   150a0:	mov	r2, #5
   150a4:	bl	110ec <dcgettext@plt>
   150a8:	mov	r2, r0
   150ac:	ldr	r3, [r7]
   150b0:	ldmib	r7, {r0, r1, r7}
   150b4:	stm	sp, {r0, r1, r7}
   150b8:	b	15158 <putc_unlocked@plt+0x3e5c>
   150bc:	movw	r1, #29519	; 0x734f
   150c0:	movt	r1, #1
   150c4:	mov	r0, #0
   150c8:	mov	r2, #5
   150cc:	bl	110ec <dcgettext@plt>
   150d0:	mov	r2, r0
   150d4:	ldr	r3, [r7]
   150d8:	ldmib	r7, {r0, r1, r6, r7}
   150dc:	stm	sp, {r0, r1, r6, r7}
   150e0:	b	15158 <putc_unlocked@plt+0x3e5c>
   150e4:	movw	r1, #29555	; 0x7373
   150e8:	movt	r1, #1
   150ec:	mov	r0, #0
   150f0:	mov	r2, #5
   150f4:	bl	110ec <dcgettext@plt>
   150f8:	mov	r2, r0
   150fc:	ldr	r3, [r7]
   15100:	ldmib	r7, {r0, r1, r6}
   15104:	ldr	r5, [r7, #16]
   15108:	ldr	r7, [r7, #20]
   1510c:	stm	sp, {r0, r1, r6}
   15110:	str	r5, [sp, #12]
   15114:	str	r7, [sp, #16]
   15118:	b	15158 <putc_unlocked@plt+0x3e5c>
   1511c:	movw	r1, #29595	; 0x739b
   15120:	movt	r1, #1
   15124:	mov	r0, #0
   15128:	mov	r2, #5
   1512c:	bl	110ec <dcgettext@plt>
   15130:	mov	r2, r0
   15134:	ldr	r3, [r7]
   15138:	ldmib	r7, {r0, r1, r6}
   1513c:	ldr	r5, [r7, #16]
   15140:	ldr	r4, [r7, #20]
   15144:	ldr	r7, [r7, #24]
   15148:	stm	sp, {r0, r1, r6}
   1514c:	str	r5, [sp, #12]
   15150:	str	r4, [sp, #16]
   15154:	str	r7, [sp, #20]
   15158:	mov	r0, r8
   1515c:	mov	r1, #1
   15160:	b	1520c <putc_unlocked@plt+0x3f10>
   15164:	movw	r1, #29687	; 0x73f7
   15168:	movt	r1, #1
   1516c:	mov	r0, #0
   15170:	mov	r2, #5
   15174:	bl	110ec <dcgettext@plt>
   15178:	mov	ip, r0
   1517c:	ldr	r3, [r7]
   15180:	ldr	r0, [r7, #4]
   15184:	ldr	r1, [r7, #8]
   15188:	ldr	r6, [r7, #12]
   1518c:	ldr	r5, [r7, #16]
   15190:	ldr	r4, [r7, #20]
   15194:	ldr	r2, [r7, #24]
   15198:	ldr	lr, [r7, #28]
   1519c:	ldr	r7, [r7, #32]
   151a0:	stm	sp, {r0, r1, r6}
   151a4:	str	r5, [sp, #12]
   151a8:	str	r4, [sp, #16]
   151ac:	str	r2, [sp, #20]
   151b0:	str	lr, [sp, #24]
   151b4:	str	r7, [sp, #28]
   151b8:	b	15200 <putc_unlocked@plt+0x3f04>
   151bc:	movw	r1, #29639	; 0x73c7
   151c0:	movt	r1, #1
   151c4:	mov	r0, #0
   151c8:	mov	r2, #5
   151cc:	bl	110ec <dcgettext@plt>
   151d0:	mov	ip, r0
   151d4:	ldr	r3, [r7]
   151d8:	ldmib	r7, {r0, r1, r6}
   151dc:	ldr	r5, [r7, #16]
   151e0:	ldr	r4, [r7, #20]
   151e4:	ldr	r2, [r7, #24]
   151e8:	ldr	r7, [r7, #28]
   151ec:	stm	sp, {r0, r1, r6}
   151f0:	str	r5, [sp, #12]
   151f4:	str	r4, [sp, #16]
   151f8:	str	r2, [sp, #20]
   151fc:	str	r7, [sp, #24]
   15200:	mov	r0, r8
   15204:	mov	r1, #1
   15208:	mov	r2, ip
   1520c:	bl	11260 <__fprintf_chk@plt>
   15210:	sub	sp, fp, #24
   15214:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15218:	push	{r4, sl, fp, lr}
   1521c:	add	fp, sp, #8
   15220:	sub	sp, sp, #8
   15224:	mov	lr, #0
   15228:	ldr	ip, [fp, #8]
   1522c:	ldr	r4, [ip, lr, lsl #2]
   15230:	add	lr, lr, #1
   15234:	cmp	r4, #0
   15238:	bne	1522c <putc_unlocked@plt+0x3f30>
   1523c:	sub	r4, lr, #1
   15240:	str	ip, [sp]
   15244:	str	r4, [sp, #4]
   15248:	bl	14ee4 <putc_unlocked@plt+0x3be8>
   1524c:	sub	sp, fp, #8
   15250:	pop	{r4, sl, fp, pc}
   15254:	push	{r4, r5, fp, lr}
   15258:	add	fp, sp, #8
   1525c:	sub	sp, sp, #48	; 0x30
   15260:	mov	ip, #0
   15264:	ldr	r4, [fp, #8]
   15268:	add	lr, sp, #8
   1526c:	ldr	r5, [r4]
   15270:	str	r5, [lr, ip, lsl #2]
   15274:	cmp	r5, #0
   15278:	beq	1528c <putc_unlocked@plt+0x3f90>
   1527c:	add	ip, ip, #1
   15280:	add	r4, r4, #4
   15284:	cmp	ip, #10
   15288:	bcc	1526c <putc_unlocked@plt+0x3f70>
   1528c:	str	lr, [sp]
   15290:	str	ip, [sp, #4]
   15294:	bl	14ee4 <putc_unlocked@plt+0x3be8>
   15298:	sub	sp, fp, #8
   1529c:	pop	{r4, r5, fp, pc}
   152a0:	push	{fp, lr}
   152a4:	mov	fp, sp
   152a8:	sub	sp, sp, #8
   152ac:	add	ip, fp, #8
   152b0:	str	ip, [sp, #4]
   152b4:	str	ip, [sp]
   152b8:	bl	15254 <putc_unlocked@plt+0x3f58>
   152bc:	mov	sp, fp
   152c0:	pop	{fp, pc}
   152c4:	push	{fp, lr}
   152c8:	mov	fp, sp
   152cc:	movw	r0, #33140	; 0x8174
   152d0:	movt	r0, #2
   152d4:	ldr	r1, [r0]
   152d8:	movw	r0, #28311	; 0x6e97
   152dc:	movt	r0, #1
   152e0:	bl	11050 <fputs_unlocked@plt>
   152e4:	movw	r1, #29799	; 0x7467
   152e8:	movt	r1, #1
   152ec:	mov	r0, #0
   152f0:	mov	r2, #5
   152f4:	bl	110ec <dcgettext@plt>
   152f8:	mov	r1, r0
   152fc:	movw	r2, #29819	; 0x747b
   15300:	movt	r2, #1
   15304:	mov	r0, #1
   15308:	bl	1123c <__printf_chk@plt>
   1530c:	movw	r1, #29841	; 0x7491
   15310:	movt	r1, #1
   15314:	mov	r0, #0
   15318:	mov	r2, #5
   1531c:	bl	110ec <dcgettext@plt>
   15320:	mov	r1, r0
   15324:	movw	r2, #27716	; 0x6c44
   15328:	movt	r2, #1
   1532c:	movw	r3, #28120	; 0x6dd8
   15330:	movt	r3, #1
   15334:	mov	r0, #1
   15338:	bl	1123c <__printf_chk@plt>
   1533c:	movw	r1, #29861	; 0x74a5
   15340:	movt	r1, #1
   15344:	mov	r0, #0
   15348:	mov	r2, #5
   1534c:	bl	110ec <dcgettext@plt>
   15350:	mov	r1, r0
   15354:	movw	r2, #29900	; 0x74cc
   15358:	movt	r2, #1
   1535c:	mov	r0, #1
   15360:	pop	{fp, lr}
   15364:	b	1123c <__printf_chk@plt>
   15368:	b	1536c <putc_unlocked@plt+0x4070>
   1536c:	push	{r4, r5, r6, sl, fp, lr}
   15370:	add	fp, sp, #16
   15374:	mov	r4, r2
   15378:	mov	r5, r1
   1537c:	mov	r6, r0
   15380:	bl	1623c <putc_unlocked@plt+0x4f40>
   15384:	cmp	r0, #0
   15388:	popne	{r4, r5, r6, sl, fp, pc}
   1538c:	cmp	r6, #0
   15390:	beq	153a4 <putc_unlocked@plt+0x40a8>
   15394:	cmp	r5, #0
   15398:	cmpne	r4, #0
   1539c:	bne	153a4 <putc_unlocked@plt+0x40a8>
   153a0:	pop	{r4, r5, r6, sl, fp, pc}
   153a4:	bl	15758 <putc_unlocked@plt+0x445c>
   153a8:	push	{fp, lr}
   153ac:	mov	fp, sp
   153b0:	bl	15d24 <putc_unlocked@plt+0x4a28>
   153b4:	bl	153bc <putc_unlocked@plt+0x40c0>
   153b8:	pop	{fp, pc}
   153bc:	cmp	r0, #0
   153c0:	bxne	lr
   153c4:	push	{fp, lr}
   153c8:	mov	fp, sp
   153cc:	bl	15758 <putc_unlocked@plt+0x445c>
   153d0:	push	{fp, lr}
   153d4:	mov	fp, sp
   153d8:	bl	16170 <putc_unlocked@plt+0x4e74>
   153dc:	bl	153bc <putc_unlocked@plt+0x40c0>
   153e0:	pop	{fp, pc}
   153e4:	b	153a8 <putc_unlocked@plt+0x40ac>
   153e8:	push	{r4, r5, fp, lr}
   153ec:	add	fp, sp, #8
   153f0:	mov	r4, r1
   153f4:	mov	r5, r0
   153f8:	bl	15d54 <putc_unlocked@plt+0x4a58>
   153fc:	cmp	r0, #0
   15400:	popne	{r4, r5, fp, pc}
   15404:	cmp	r5, #0
   15408:	beq	15418 <putc_unlocked@plt+0x411c>
   1540c:	cmp	r4, #0
   15410:	bne	15418 <putc_unlocked@plt+0x411c>
   15414:	pop	{r4, r5, fp, pc}
   15418:	bl	15758 <putc_unlocked@plt+0x445c>
   1541c:	push	{fp, lr}
   15420:	mov	fp, sp
   15424:	bl	16174 <putc_unlocked@plt+0x4e78>
   15428:	bl	153bc <putc_unlocked@plt+0x40c0>
   1542c:	pop	{fp, pc}
   15430:	push	{fp, lr}
   15434:	mov	fp, sp
   15438:	bl	16184 <putc_unlocked@plt+0x4e88>
   1543c:	bl	153bc <putc_unlocked@plt+0x40c0>
   15440:	pop	{fp, pc}
   15444:	push	{fp, lr}
   15448:	mov	fp, sp
   1544c:	mov	r2, r1
   15450:	mov	r1, r0
   15454:	mov	r0, #0
   15458:	bl	1536c <putc_unlocked@plt+0x4070>
   1545c:	pop	{fp, pc}
   15460:	mov	r2, r1
   15464:	mov	r1, r0
   15468:	mov	r0, #0
   1546c:	b	15430 <putc_unlocked@plt+0x4134>
   15470:	mov	r2, #1
   15474:	b	15478 <putc_unlocked@plt+0x417c>
   15478:	push	{r4, r5, fp, lr}
   1547c:	add	fp, sp, #8
   15480:	mov	r4, r1
   15484:	ldr	r5, [r1]
   15488:	cmp	r0, #0
   1548c:	beq	154a4 <putc_unlocked@plt+0x41a8>
   15490:	mov	r1, #1
   15494:	add	r1, r1, r5, lsr #1
   15498:	adds	r5, r5, r1
   1549c:	bcc	154bc <putc_unlocked@plt+0x41c0>
   154a0:	bl	15758 <putc_unlocked@plt+0x445c>
   154a4:	cmp	r5, #0
   154a8:	bne	154bc <putc_unlocked@plt+0x41c0>
   154ac:	mov	r1, #64	; 0x40
   154b0:	udiv	r5, r1, r2
   154b4:	cmp	r2, #64	; 0x40
   154b8:	addhi	r5, r5, #1
   154bc:	mov	r1, r5
   154c0:	bl	1536c <putc_unlocked@plt+0x4070>
   154c4:	str	r5, [r4]
   154c8:	pop	{r4, r5, fp, pc}
   154cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154d0:	add	fp, sp, #24
   154d4:	mov	r8, r1
   154d8:	ldr	r6, [r1]
   154dc:	add	r1, r6, r6, asr #1
   154e0:	cmp	r1, r6
   154e4:	mvnvs	r1, #-2147483648	; 0x80000000
   154e8:	cmp	r1, r3
   154ec:	mov	r5, r1
   154f0:	movgt	r5, r3
   154f4:	cmn	r3, #1
   154f8:	movle	r5, r1
   154fc:	ldr	r4, [fp, #8]
   15500:	cmn	r4, #1
   15504:	ble	1552c <putc_unlocked@plt+0x4230>
   15508:	cmp	r4, #0
   1550c:	beq	15580 <putc_unlocked@plt+0x4284>
   15510:	cmn	r5, #1
   15514:	ble	15554 <putc_unlocked@plt+0x4258>
   15518:	mvn	r7, #-2147483648	; 0x80000000
   1551c:	udiv	r1, r7, r4
   15520:	cmp	r1, r5
   15524:	bge	15580 <putc_unlocked@plt+0x4284>
   15528:	b	15590 <putc_unlocked@plt+0x4294>
   1552c:	cmn	r5, #1
   15530:	ble	15570 <putc_unlocked@plt+0x4274>
   15534:	cmn	r4, #1
   15538:	beq	15580 <putc_unlocked@plt+0x4284>
   1553c:	mov	r1, #-2147483648	; 0x80000000
   15540:	sdiv	r1, r1, r4
   15544:	mvn	r7, #-2147483648	; 0x80000000
   15548:	cmp	r1, r5
   1554c:	bge	15580 <putc_unlocked@plt+0x4284>
   15550:	b	15590 <putc_unlocked@plt+0x4294>
   15554:	beq	15580 <putc_unlocked@plt+0x4284>
   15558:	mov	r1, #-2147483648	; 0x80000000
   1555c:	sdiv	r1, r1, r5
   15560:	mvn	r7, #-2147483648	; 0x80000000
   15564:	cmp	r1, r4
   15568:	bge	15580 <putc_unlocked@plt+0x4284>
   1556c:	b	15590 <putc_unlocked@plt+0x4294>
   15570:	mvn	r7, #-2147483648	; 0x80000000
   15574:	sdiv	r1, r7, r4
   15578:	cmp	r5, r1
   1557c:	blt	15590 <putc_unlocked@plt+0x4294>
   15580:	mul	r1, r5, r4
   15584:	mov	r7, #64	; 0x40
   15588:	cmp	r1, #63	; 0x3f
   1558c:	bgt	15598 <putc_unlocked@plt+0x429c>
   15590:	sdiv	r5, r7, r4
   15594:	mul	r1, r5, r4
   15598:	cmp	r0, #0
   1559c:	moveq	r7, #0
   155a0:	streq	r7, [r8]
   155a4:	sub	r7, r5, r6
   155a8:	cmp	r7, r2
   155ac:	bge	15658 <putc_unlocked@plt+0x435c>
   155b0:	add	r5, r6, r2
   155b4:	mov	r1, #0
   155b8:	cmp	r5, r3
   155bc:	mov	r2, #0
   155c0:	movwgt	r2, #1
   155c4:	cmn	r3, #1
   155c8:	movwgt	r1, #1
   155cc:	cmp	r5, r6
   155d0:	bvs	15640 <putc_unlocked@plt+0x4344>
   155d4:	ands	r1, r1, r2
   155d8:	bne	15640 <putc_unlocked@plt+0x4344>
   155dc:	cmn	r4, #1
   155e0:	ble	15608 <putc_unlocked@plt+0x430c>
   155e4:	cmp	r4, #0
   155e8:	beq	15654 <putc_unlocked@plt+0x4358>
   155ec:	cmn	r5, #1
   155f0:	ble	1562c <putc_unlocked@plt+0x4330>
   155f4:	mvn	r1, #-2147483648	; 0x80000000
   155f8:	udiv	r1, r1, r4
   155fc:	cmp	r1, r5
   15600:	bge	15654 <putc_unlocked@plt+0x4358>
   15604:	b	15640 <putc_unlocked@plt+0x4344>
   15608:	cmn	r5, #1
   1560c:	ble	15644 <putc_unlocked@plt+0x4348>
   15610:	cmn	r4, #1
   15614:	beq	15654 <putc_unlocked@plt+0x4358>
   15618:	mov	r1, #-2147483648	; 0x80000000
   1561c:	sdiv	r1, r1, r4
   15620:	cmp	r1, r5
   15624:	bge	15654 <putc_unlocked@plt+0x4358>
   15628:	b	15640 <putc_unlocked@plt+0x4344>
   1562c:	beq	15654 <putc_unlocked@plt+0x4358>
   15630:	mov	r1, #-2147483648	; 0x80000000
   15634:	sdiv	r1, r1, r5
   15638:	cmp	r1, r4
   1563c:	bge	15654 <putc_unlocked@plt+0x4358>
   15640:	bl	15758 <putc_unlocked@plt+0x445c>
   15644:	mvn	r1, #-2147483648	; 0x80000000
   15648:	sdiv	r1, r1, r4
   1564c:	cmp	r5, r1
   15650:	blt	15640 <putc_unlocked@plt+0x4344>
   15654:	mul	r1, r5, r4
   15658:	bl	153e8 <putc_unlocked@plt+0x40ec>
   1565c:	str	r5, [r8]
   15660:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15664:	mov	r1, #1
   15668:	b	1566c <putc_unlocked@plt+0x4370>
   1566c:	push	{fp, lr}
   15670:	mov	fp, sp
   15674:	bl	15cd0 <putc_unlocked@plt+0x49d4>
   15678:	bl	153bc <putc_unlocked@plt+0x40c0>
   1567c:	pop	{fp, pc}
   15680:	mov	r1, #1
   15684:	b	15688 <putc_unlocked@plt+0x438c>
   15688:	push	{fp, lr}
   1568c:	mov	fp, sp
   15690:	bl	16180 <putc_unlocked@plt+0x4e84>
   15694:	bl	153bc <putc_unlocked@plt+0x40c0>
   15698:	pop	{fp, pc}
   1569c:	push	{r4, r5, r6, sl, fp, lr}
   156a0:	add	fp, sp, #16
   156a4:	mov	r4, r1
   156a8:	mov	r5, r0
   156ac:	mov	r0, r1
   156b0:	bl	153a8 <putc_unlocked@plt+0x40ac>
   156b4:	mov	r6, r0
   156b8:	mov	r1, r5
   156bc:	mov	r2, r4
   156c0:	bl	110b0 <memcpy@plt>
   156c4:	mov	r0, r6
   156c8:	pop	{r4, r5, r6, sl, fp, pc}
   156cc:	push	{r4, r5, r6, sl, fp, lr}
   156d0:	add	fp, sp, #16
   156d4:	mov	r4, r1
   156d8:	mov	r5, r0
   156dc:	mov	r0, r1
   156e0:	bl	153d0 <putc_unlocked@plt+0x40d4>
   156e4:	mov	r6, r0
   156e8:	mov	r1, r5
   156ec:	mov	r2, r4
   156f0:	bl	110b0 <memcpy@plt>
   156f4:	mov	r0, r6
   156f8:	pop	{r4, r5, r6, sl, fp, pc}
   156fc:	push	{r4, r5, r6, sl, fp, lr}
   15700:	add	fp, sp, #16
   15704:	mov	r4, r1
   15708:	mov	r5, r0
   1570c:	add	r0, r1, #1
   15710:	bl	153d0 <putc_unlocked@plt+0x40d4>
   15714:	mov	r6, r0
   15718:	mov	r0, #0
   1571c:	strb	r0, [r6, r4]
   15720:	mov	r0, r6
   15724:	mov	r1, r5
   15728:	mov	r2, r4
   1572c:	bl	110b0 <memcpy@plt>
   15730:	mov	r0, r6
   15734:	pop	{r4, r5, r6, sl, fp, pc}
   15738:	push	{r4, sl, fp, lr}
   1573c:	add	fp, sp, #8
   15740:	mov	r4, r0
   15744:	bl	11200 <strlen@plt>
   15748:	add	r1, r0, #1
   1574c:	mov	r0, r4
   15750:	pop	{r4, sl, fp, lr}
   15754:	b	1569c <putc_unlocked@plt+0x43a0>
   15758:	push	{fp, lr}
   1575c:	mov	fp, sp
   15760:	movw	r0, #33040	; 0x8110
   15764:	movt	r0, #2
   15768:	ldr	r4, [r0]
   1576c:	movw	r1, #29976	; 0x7518
   15770:	movt	r1, #1
   15774:	mov	r0, #0
   15778:	mov	r2, #5
   1577c:	bl	110ec <dcgettext@plt>
   15780:	mov	r3, r0
   15784:	movw	r2, #28902	; 0x70e6
   15788:	movt	r2, #1
   1578c:	mov	r0, r4
   15790:	mov	r1, #0
   15794:	bl	11170 <error@plt>
   15798:	bl	112c0 <abort@plt>
   1579c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157a0:	add	fp, sp, #28
   157a4:	sub	sp, sp, #20
   157a8:	cmp	r2, #37	; 0x25
   157ac:	bcs	15bdc <putc_unlocked@plt+0x48e0>
   157b0:	mov	r5, r2
   157b4:	mov	r6, r1
   157b8:	mov	r4, r0
   157bc:	str	r3, [sp, #4]
   157c0:	ldr	sl, [fp, #8]
   157c4:	bl	11218 <__errno_location@plt>
   157c8:	mov	r7, r0
   157cc:	mov	r0, #0
   157d0:	str	r0, [r7]
   157d4:	bl	111e8 <__ctype_b_loc@plt>
   157d8:	ldr	r1, [r0]
   157dc:	mov	r2, r4
   157e0:	ldrb	r0, [r2], #1
   157e4:	add	r3, r1, r0, lsl #1
   157e8:	ldrb	r3, [r3, #1]
   157ec:	tst	r3, #32
   157f0:	bne	157e0 <putc_unlocked@plt+0x44e4>
   157f4:	add	r9, sp, #16
   157f8:	cmp	r6, #0
   157fc:	movne	r9, r6
   15800:	mov	r8, #4
   15804:	cmp	r0, #45	; 0x2d
   15808:	beq	15bd0 <putc_unlocked@plt+0x48d4>
   1580c:	mov	r0, r4
   15810:	mov	r1, r9
   15814:	mov	r2, r5
   15818:	bl	11254 <strtoumax@plt>
   1581c:	str	r1, [sp, #12]
   15820:	str	r0, [sp, #8]
   15824:	ldr	r6, [r9]
   15828:	cmp	r6, r4
   1582c:	beq	15854 <putc_unlocked@plt+0x4558>
   15830:	ldr	r0, [r7]
   15834:	cmp	r0, #0
   15838:	beq	15888 <putc_unlocked@plt+0x458c>
   1583c:	cmp	r0, #34	; 0x22
   15840:	bne	15bd0 <putc_unlocked@plt+0x48d4>
   15844:	mov	r8, #1
   15848:	cmp	sl, #0
   1584c:	bne	15894 <putc_unlocked@plt+0x4598>
   15850:	b	15bc0 <putc_unlocked@plt+0x48c4>
   15854:	cmp	sl, #0
   15858:	ldrbne	r1, [r6]
   1585c:	cmpne	r1, #0
   15860:	beq	15bd0 <putc_unlocked@plt+0x48d4>
   15864:	mov	r0, sl
   15868:	bl	1120c <strchr@plt>
   1586c:	cmp	r0, #0
   15870:	beq	15bd0 <putc_unlocked@plt+0x48d4>
   15874:	mov	r8, #0
   15878:	str	r8, [sp, #12]
   1587c:	mov	r0, #1
   15880:	str	r0, [sp, #8]
   15884:	b	15894 <putc_unlocked@plt+0x4598>
   15888:	mov	r8, r0
   1588c:	cmp	sl, #0
   15890:	beq	15bc0 <putc_unlocked@plt+0x48c4>
   15894:	ldrb	r4, [r6]
   15898:	cmp	r4, #0
   1589c:	beq	15bc0 <putc_unlocked@plt+0x48c4>
   158a0:	mov	r0, sl
   158a4:	mov	r1, r4
   158a8:	bl	1120c <strchr@plt>
   158ac:	cmp	r0, #0
   158b0:	beq	15ac0 <putc_unlocked@plt+0x47c4>
   158b4:	sub	r0, r4, #69	; 0x45
   158b8:	mov	r7, #1
   158bc:	mov	r5, #1024	; 0x400
   158c0:	cmp	r0, #47	; 0x2f
   158c4:	bhi	159bc <putc_unlocked@plt+0x46c0>
   158c8:	add	r1, pc, #0
   158cc:	ldr	pc, [r1, r0, lsl #2]
   158d0:	muleq	r1, r0, r9
   158d4:			; <UNDEFINED> instruction: 0x000159bc
   158d8:	muleq	r1, r0, r9
   158dc:			; <UNDEFINED> instruction: 0x000159bc
   158e0:			; <UNDEFINED> instruction: 0x000159bc
   158e4:			; <UNDEFINED> instruction: 0x000159bc
   158e8:	muleq	r1, r0, r9
   158ec:			; <UNDEFINED> instruction: 0x000159bc
   158f0:	muleq	r1, r0, r9
   158f4:			; <UNDEFINED> instruction: 0x000159bc
   158f8:			; <UNDEFINED> instruction: 0x000159bc
   158fc:	muleq	r1, r0, r9
   15900:			; <UNDEFINED> instruction: 0x000159bc
   15904:			; <UNDEFINED> instruction: 0x000159bc
   15908:			; <UNDEFINED> instruction: 0x000159bc
   1590c:	muleq	r1, r0, r9
   15910:			; <UNDEFINED> instruction: 0x000159bc
   15914:			; <UNDEFINED> instruction: 0x000159bc
   15918:			; <UNDEFINED> instruction: 0x000159bc
   1591c:			; <UNDEFINED> instruction: 0x000159bc
   15920:	muleq	r1, r0, r9
   15924:	muleq	r1, r0, r9
   15928:			; <UNDEFINED> instruction: 0x000159bc
   1592c:			; <UNDEFINED> instruction: 0x000159bc
   15930:			; <UNDEFINED> instruction: 0x000159bc
   15934:			; <UNDEFINED> instruction: 0x000159bc
   15938:			; <UNDEFINED> instruction: 0x000159bc
   1593c:			; <UNDEFINED> instruction: 0x000159bc
   15940:			; <UNDEFINED> instruction: 0x000159bc
   15944:			; <UNDEFINED> instruction: 0x000159bc
   15948:			; <UNDEFINED> instruction: 0x000159bc
   1594c:			; <UNDEFINED> instruction: 0x000159bc
   15950:			; <UNDEFINED> instruction: 0x000159bc
   15954:			; <UNDEFINED> instruction: 0x000159bc
   15958:	muleq	r1, r0, r9
   1595c:			; <UNDEFINED> instruction: 0x000159bc
   15960:			; <UNDEFINED> instruction: 0x000159bc
   15964:			; <UNDEFINED> instruction: 0x000159bc
   15968:	muleq	r1, r0, r9
   1596c:			; <UNDEFINED> instruction: 0x000159bc
   15970:	muleq	r1, r0, r9
   15974:			; <UNDEFINED> instruction: 0x000159bc
   15978:			; <UNDEFINED> instruction: 0x000159bc
   1597c:			; <UNDEFINED> instruction: 0x000159bc
   15980:			; <UNDEFINED> instruction: 0x000159bc
   15984:			; <UNDEFINED> instruction: 0x000159bc
   15988:			; <UNDEFINED> instruction: 0x000159bc
   1598c:	muleq	r1, r0, r9
   15990:	mov	r0, sl
   15994:	mov	r1, #48	; 0x30
   15998:	bl	1120c <strchr@plt>
   1599c:	cmp	r0, #0
   159a0:	beq	159bc <putc_unlocked@plt+0x46c0>
   159a4:	ldrb	r0, [r6, #1]
   159a8:	cmp	r0, #66	; 0x42
   159ac:	cmpne	r0, #68	; 0x44
   159b0:	bne	15ad8 <putc_unlocked@plt+0x47dc>
   159b4:	mov	r7, #2
   159b8:	mov	r5, #1000	; 0x3e8
   159bc:	sub	r1, r4, #66	; 0x42
   159c0:	cmp	r1, #53	; 0x35
   159c4:	bhi	15ac0 <putc_unlocked@plt+0x47c4>
   159c8:	mov	r0, #0
   159cc:	add	r2, pc, #0
   159d0:	ldr	pc, [r2, r1, lsl #2]
   159d4:	andeq	r5, r1, r4, asr #22
   159d8:	andeq	r5, r1, r0, asr #21
   159dc:	andeq	r5, r1, r0, asr #21
   159e0:	andeq	r5, r1, r0, asr fp
   159e4:	andeq	r5, r1, r0, asr #21
   159e8:	andeq	r5, r1, ip, lsr #21
   159ec:	andeq	r5, r1, r0, asr #21
   159f0:	andeq	r5, r1, r0, asr #21
   159f4:	andeq	r5, r1, r0, asr #21
   159f8:	strdeq	r5, [r1], -r4
   159fc:	andeq	r5, r1, r0, asr #21
   15a00:	andeq	r5, r1, r8, lsl #22
   15a04:	andeq	r5, r1, r0, asr #21
   15a08:	andeq	r5, r1, r0, asr #21
   15a0c:	andeq	r5, r1, r4, ror #22
   15a10:	andeq	r5, r1, r0, asr #21
   15a14:	andeq	r5, r1, r0, asr #21
   15a18:	andeq	r5, r1, r0, asr #21
   15a1c:	andeq	r5, r1, ip, lsl fp
   15a20:	andeq	r5, r1, r0, asr #21
   15a24:	andeq	r5, r1, r0, asr #21
   15a28:	andeq	r5, r1, r0, asr #21
   15a2c:	andeq	r5, r1, r0, asr #21
   15a30:	andeq	r5, r1, r8, ror fp
   15a34:	andeq	r5, r1, r0, lsr fp
   15a38:	andeq	r5, r1, r0, asr #21
   15a3c:	andeq	r5, r1, r0, asr #21
   15a40:	andeq	r5, r1, r0, asr #21
   15a44:	andeq	r5, r1, r0, asr #21
   15a48:	andeq	r5, r1, r0, asr #21
   15a4c:	andeq	r5, r1, r0, asr #21
   15a50:	andeq	r5, r1, r0, asr #21
   15a54:	andeq	r5, r1, ip, lsl #23
   15a58:	andeq	r5, r1, r4, lsr #23
   15a5c:	andeq	r5, r1, r0, asr #21
   15a60:	andeq	r5, r1, r0, asr #21
   15a64:	andeq	r5, r1, r0, asr #21
   15a68:	andeq	r5, r1, ip, lsr #21
   15a6c:	andeq	r5, r1, r0, asr #21
   15a70:	andeq	r5, r1, r0, asr #21
   15a74:	andeq	r5, r1, r0, asr #21
   15a78:	strdeq	r5, [r1], -r4
   15a7c:	andeq	r5, r1, r0, asr #21
   15a80:	andeq	r5, r1, r8, lsl #22
   15a84:	andeq	r5, r1, r0, asr #21
   15a88:	andeq	r5, r1, r0, asr #21
   15a8c:	andeq	r5, r1, r0, asr #21
   15a90:	andeq	r5, r1, r0, asr #21
   15a94:	andeq	r5, r1, r0, asr #21
   15a98:	andeq	r5, r1, r0, asr #21
   15a9c:	andeq	r5, r1, ip, lsl fp
   15aa0:	andeq	r5, r1, r0, asr #21
   15aa4:	andeq	r5, r1, r0, asr #21
   15aa8:	muleq	r1, r8, fp
   15aac:	add	r0, sp, #8
   15ab0:	mov	r1, r5
   15ab4:	mov	r2, #3
   15ab8:	bl	15c88 <putc_unlocked@plt+0x498c>
   15abc:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15ac0:	ldr	r0, [sp, #8]
   15ac4:	ldr	r1, [sp, #12]
   15ac8:	ldr	r2, [sp, #4]
   15acc:	strd	r0, [r2]
   15ad0:	orr	r8, r8, #2
   15ad4:	b	15bd0 <putc_unlocked@plt+0x48d4>
   15ad8:	cmp	r0, #105	; 0x69
   15adc:	bne	159bc <putc_unlocked@plt+0x46c0>
   15ae0:	ldrb	r0, [r6, #2]
   15ae4:	mov	r7, #1
   15ae8:	cmp	r0, #66	; 0x42
   15aec:	movweq	r7, #3
   15af0:	b	159bc <putc_unlocked@plt+0x46c0>
   15af4:	add	r0, sp, #8
   15af8:	mov	r1, r5
   15afc:	mov	r2, #1
   15b00:	bl	15c88 <putc_unlocked@plt+0x498c>
   15b04:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15b08:	add	r0, sp, #8
   15b0c:	mov	r1, r5
   15b10:	mov	r2, #2
   15b14:	bl	15c88 <putc_unlocked@plt+0x498c>
   15b18:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15b1c:	add	r0, sp, #8
   15b20:	mov	r1, r5
   15b24:	mov	r2, #4
   15b28:	bl	15c88 <putc_unlocked@plt+0x498c>
   15b2c:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15b30:	add	r0, sp, #8
   15b34:	mov	r1, r5
   15b38:	mov	r2, #7
   15b3c:	bl	15c88 <putc_unlocked@plt+0x498c>
   15b40:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15b44:	add	r0, sp, #8
   15b48:	mov	r1, #1024	; 0x400
   15b4c:	b	15ba0 <putc_unlocked@plt+0x48a4>
   15b50:	add	r0, sp, #8
   15b54:	mov	r1, r5
   15b58:	mov	r2, #6
   15b5c:	bl	15c88 <putc_unlocked@plt+0x498c>
   15b60:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15b64:	add	r0, sp, #8
   15b68:	mov	r1, r5
   15b6c:	mov	r2, #5
   15b70:	bl	15c88 <putc_unlocked@plt+0x498c>
   15b74:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15b78:	add	r0, sp, #8
   15b7c:	mov	r1, r5
   15b80:	mov	r2, #8
   15b84:	bl	15c88 <putc_unlocked@plt+0x498c>
   15b88:	b	15ba4 <putc_unlocked@plt+0x48a8>
   15b8c:	add	r0, sp, #8
   15b90:	mov	r1, #512	; 0x200
   15b94:	b	15ba0 <putc_unlocked@plt+0x48a4>
   15b98:	add	r0, sp, #8
   15b9c:	mov	r1, #2
   15ba0:	bl	15bfc <putc_unlocked@plt+0x4900>
   15ba4:	ldr	r1, [r9]
   15ba8:	add	r2, r1, r7
   15bac:	str	r2, [r9]
   15bb0:	ldrb	r1, [r1, r7]
   15bb4:	orr	r8, r0, r8
   15bb8:	cmp	r1, #0
   15bbc:	orrne	r8, r8, #2
   15bc0:	ldr	r0, [sp, #8]
   15bc4:	ldr	r1, [sp, #12]
   15bc8:	ldr	r2, [sp, #4]
   15bcc:	strd	r0, [r2]
   15bd0:	mov	r0, r8
   15bd4:	sub	sp, fp, #28
   15bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bdc:	movw	r0, #29993	; 0x7529
   15be0:	movt	r0, #1
   15be4:	movw	r1, #30031	; 0x754f
   15be8:	movt	r1, #1
   15bec:	movw	r3, #30047	; 0x755f
   15bf0:	movt	r3, #1
   15bf4:	mov	r2, #85	; 0x55
   15bf8:	bl	112f0 <__assert_fail@plt>
   15bfc:	push	{r4, r5, r6, r7, fp, lr}
   15c00:	add	fp, sp, #16
   15c04:	mov	r5, r1
   15c08:	mov	r4, r0
   15c0c:	cmn	r1, #1
   15c10:	ble	15c48 <putc_unlocked@plt+0x494c>
   15c14:	cmp	r5, #0
   15c18:	beq	15c68 <putc_unlocked@plt+0x496c>
   15c1c:	asr	r3, r5, #31
   15c20:	mvn	r6, #0
   15c24:	mvn	r0, #0
   15c28:	mvn	r1, #0
   15c2c:	mov	r2, r5
   15c30:	bl	16384 <putc_unlocked@plt+0x5088>
   15c34:	ldrd	r2, [r4]
   15c38:	subs	r0, r0, r2
   15c3c:	sbcs	r0, r1, r3
   15c40:	bcc	15c58 <putc_unlocked@plt+0x495c>
   15c44:	b	15c68 <putc_unlocked@plt+0x496c>
   15c48:	ldrd	r0, [r4]
   15c4c:	orrs	r0, r0, r1
   15c50:	beq	15c68 <putc_unlocked@plt+0x496c>
   15c54:	mvn	r6, #0
   15c58:	mov	r0, #1
   15c5c:	mvn	r7, #0
   15c60:	strd	r6, [r4]
   15c64:	pop	{r4, r5, r6, r7, fp, pc}
   15c68:	ldrd	r0, [r4]
   15c6c:	umull	r6, r2, r0, r5
   15c70:	asr	r3, r5, #31
   15c74:	mla	r0, r0, r3, r2
   15c78:	mla	r7, r1, r5, r0
   15c7c:	mov	r0, #0
   15c80:	strd	r6, [r4]
   15c84:	pop	{r4, r5, r6, r7, fp, pc}
   15c88:	push	{r4, r5, r6, r7, fp, lr}
   15c8c:	add	fp, sp, #16
   15c90:	cmp	r2, #0
   15c94:	moveq	r6, #0
   15c98:	moveq	r0, r6
   15c9c:	popeq	{r4, r5, r6, r7, fp, pc}
   15ca0:	mov	r4, r2
   15ca4:	mov	r5, r1
   15ca8:	mov	r7, r0
   15cac:	mov	r6, #0
   15cb0:	mov	r0, r7
   15cb4:	mov	r1, r5
   15cb8:	bl	15bfc <putc_unlocked@plt+0x4900>
   15cbc:	orr	r6, r0, r6
   15cc0:	subs	r4, r4, #1
   15cc4:	bne	15cb0 <putc_unlocked@plt+0x49b4>
   15cc8:	mov	r0, r6
   15ccc:	pop	{r4, r5, r6, r7, fp, pc}
   15cd0:	clz	r2, r1
   15cd4:	lsr	r2, r2, #5
   15cd8:	clz	r3, r0
   15cdc:	lsr	r3, r3, #5
   15ce0:	orrs	r2, r3, r2
   15ce4:	movwne	r1, #1
   15ce8:	movwne	r0, #1
   15cec:	cmp	r1, #0
   15cf0:	beq	15d20 <putc_unlocked@plt+0x4a24>
   15cf4:	mvn	r2, #-2147483648	; 0x80000000
   15cf8:	udiv	r2, r2, r1
   15cfc:	cmp	r2, r0
   15d00:	bcs	15d20 <putc_unlocked@plt+0x4a24>
   15d04:	push	{fp, lr}
   15d08:	mov	fp, sp
   15d0c:	bl	11218 <__errno_location@plt>
   15d10:	mov	r1, #12
   15d14:	str	r1, [r0]
   15d18:	mov	r0, #0
   15d1c:	pop	{fp, pc}
   15d20:	b	11044 <calloc@plt>
   15d24:	cmp	r0, #0
   15d28:	movweq	r0, #1
   15d2c:	cmn	r0, #1
   15d30:	ble	15d38 <putc_unlocked@plt+0x4a3c>
   15d34:	b	11194 <malloc@plt>
   15d38:	push	{fp, lr}
   15d3c:	mov	fp, sp
   15d40:	bl	11218 <__errno_location@plt>
   15d44:	mov	r1, #12
   15d48:	str	r1, [r0]
   15d4c:	mov	r0, #0
   15d50:	pop	{fp, pc}
   15d54:	push	{fp, lr}
   15d58:	mov	fp, sp
   15d5c:	cmp	r0, #0
   15d60:	beq	15d7c <putc_unlocked@plt+0x4a80>
   15d64:	cmp	r1, #0
   15d68:	beq	15d88 <putc_unlocked@plt+0x4a8c>
   15d6c:	cmn	r1, #1
   15d70:	ble	15d94 <putc_unlocked@plt+0x4a98>
   15d74:	pop	{fp, lr}
   15d78:	b	11104 <realloc@plt>
   15d7c:	mov	r0, r1
   15d80:	pop	{fp, lr}
   15d84:	b	15d24 <putc_unlocked@plt+0x4a28>
   15d88:	bl	12e48 <putc_unlocked@plt+0x1b4c>
   15d8c:	mov	r0, #0
   15d90:	pop	{fp, pc}
   15d94:	bl	11218 <__errno_location@plt>
   15d98:	mov	r1, #12
   15d9c:	str	r1, [r0]
   15da0:	mov	r0, #0
   15da4:	pop	{fp, pc}
   15da8:	mov	r1, r0
   15dac:	sub	r2, r0, #65	; 0x41
   15db0:	mov	r0, #1
   15db4:	cmp	r2, #26
   15db8:	subcs	r2, r1, #97	; 0x61
   15dbc:	cmpcs	r2, #26
   15dc0:	bcs	15dc8 <putc_unlocked@plt+0x4acc>
   15dc4:	bx	lr
   15dc8:	sub	r1, r1, #48	; 0x30
   15dcc:	cmp	r1, #10
   15dd0:	movcs	r0, #0
   15dd4:	bx	lr
   15dd8:	mov	r1, r0
   15ddc:	sub	r2, r0, #65	; 0x41
   15de0:	mov	r0, #1
   15de4:	cmp	r2, #26
   15de8:	subcs	r1, r1, #97	; 0x61
   15dec:	cmpcs	r1, #26
   15df0:	movcs	r0, #0
   15df4:	bx	lr
   15df8:	mov	r1, #0
   15dfc:	cmp	r0, #128	; 0x80
   15e00:	movwcc	r1, #1
   15e04:	mov	r0, r1
   15e08:	bx	lr
   15e0c:	sub	r1, r0, #9
   15e10:	clz	r1, r1
   15e14:	lsr	r1, r1, #5
   15e18:	sub	r0, r0, #32
   15e1c:	clz	r0, r0
   15e20:	lsr	r0, r0, #5
   15e24:	orr	r0, r0, r1
   15e28:	bx	lr
   15e2c:	mov	r1, r0
   15e30:	mov	r0, #1
   15e34:	cmp	r1, #32
   15e38:	bxcc	lr
   15e3c:	cmp	r1, #127	; 0x7f
   15e40:	movne	r0, #0
   15e44:	bx	lr
   15e48:	sub	r1, r0, #48	; 0x30
   15e4c:	mov	r0, #0
   15e50:	cmp	r1, #10
   15e54:	movwcc	r0, #1
   15e58:	bx	lr
   15e5c:	sub	r1, r0, #33	; 0x21
   15e60:	mov	r0, #0
   15e64:	cmp	r1, #94	; 0x5e
   15e68:	movwcc	r0, #1
   15e6c:	bx	lr
   15e70:	sub	r1, r0, #97	; 0x61
   15e74:	mov	r0, #0
   15e78:	cmp	r1, #26
   15e7c:	movwcc	r0, #1
   15e80:	bx	lr
   15e84:	sub	r1, r0, #32
   15e88:	mov	r0, #0
   15e8c:	cmp	r1, #95	; 0x5f
   15e90:	movwcc	r0, #1
   15e94:	bx	lr
   15e98:	sub	r1, r0, #33	; 0x21
   15e9c:	cmp	r1, #93	; 0x5d
   15ea0:	bhi	1602c <putc_unlocked@plt+0x4d30>
   15ea4:	mov	r0, #1
   15ea8:	add	r2, pc, #0
   15eac:	ldr	pc, [r2, r1, lsl #2]
   15eb0:	andeq	r6, r1, r8, lsr #32
   15eb4:	andeq	r6, r1, r8, lsr #32
   15eb8:	andeq	r6, r1, r8, lsr #32
   15ebc:	andeq	r6, r1, r8, lsr #32
   15ec0:	andeq	r6, r1, r8, lsr #32
   15ec4:	andeq	r6, r1, r8, lsr #32
   15ec8:	andeq	r6, r1, r8, lsr #32
   15ecc:	andeq	r6, r1, r8, lsr #32
   15ed0:	andeq	r6, r1, r8, lsr #32
   15ed4:	andeq	r6, r1, r8, lsr #32
   15ed8:	andeq	r6, r1, r8, lsr #32
   15edc:	andeq	r6, r1, r8, lsr #32
   15ee0:	andeq	r6, r1, r8, lsr #32
   15ee4:	andeq	r6, r1, r8, lsr #32
   15ee8:	andeq	r6, r1, r8, lsr #32
   15eec:	andeq	r6, r1, ip, lsr #32
   15ef0:	andeq	r6, r1, ip, lsr #32
   15ef4:	andeq	r6, r1, ip, lsr #32
   15ef8:	andeq	r6, r1, ip, lsr #32
   15efc:	andeq	r6, r1, ip, lsr #32
   15f00:	andeq	r6, r1, ip, lsr #32
   15f04:	andeq	r6, r1, ip, lsr #32
   15f08:	andeq	r6, r1, ip, lsr #32
   15f0c:	andeq	r6, r1, ip, lsr #32
   15f10:	andeq	r6, r1, ip, lsr #32
   15f14:	andeq	r6, r1, r8, lsr #32
   15f18:	andeq	r6, r1, r8, lsr #32
   15f1c:	andeq	r6, r1, r8, lsr #32
   15f20:	andeq	r6, r1, r8, lsr #32
   15f24:	andeq	r6, r1, r8, lsr #32
   15f28:	andeq	r6, r1, r8, lsr #32
   15f2c:	andeq	r6, r1, r8, lsr #32
   15f30:	andeq	r6, r1, ip, lsr #32
   15f34:	andeq	r6, r1, ip, lsr #32
   15f38:	andeq	r6, r1, ip, lsr #32
   15f3c:	andeq	r6, r1, ip, lsr #32
   15f40:	andeq	r6, r1, ip, lsr #32
   15f44:	andeq	r6, r1, ip, lsr #32
   15f48:	andeq	r6, r1, ip, lsr #32
   15f4c:	andeq	r6, r1, ip, lsr #32
   15f50:	andeq	r6, r1, ip, lsr #32
   15f54:	andeq	r6, r1, ip, lsr #32
   15f58:	andeq	r6, r1, ip, lsr #32
   15f5c:	andeq	r6, r1, ip, lsr #32
   15f60:	andeq	r6, r1, ip, lsr #32
   15f64:	andeq	r6, r1, ip, lsr #32
   15f68:	andeq	r6, r1, ip, lsr #32
   15f6c:	andeq	r6, r1, ip, lsr #32
   15f70:	andeq	r6, r1, ip, lsr #32
   15f74:	andeq	r6, r1, ip, lsr #32
   15f78:	andeq	r6, r1, ip, lsr #32
   15f7c:	andeq	r6, r1, ip, lsr #32
   15f80:	andeq	r6, r1, ip, lsr #32
   15f84:	andeq	r6, r1, ip, lsr #32
   15f88:	andeq	r6, r1, ip, lsr #32
   15f8c:	andeq	r6, r1, ip, lsr #32
   15f90:	andeq	r6, r1, ip, lsr #32
   15f94:	andeq	r6, r1, ip, lsr #32
   15f98:	andeq	r6, r1, r8, lsr #32
   15f9c:	andeq	r6, r1, r8, lsr #32
   15fa0:	andeq	r6, r1, r8, lsr #32
   15fa4:	andeq	r6, r1, r8, lsr #32
   15fa8:	andeq	r6, r1, r8, lsr #32
   15fac:	andeq	r6, r1, r8, lsr #32
   15fb0:	andeq	r6, r1, ip, lsr #32
   15fb4:	andeq	r6, r1, ip, lsr #32
   15fb8:	andeq	r6, r1, ip, lsr #32
   15fbc:	andeq	r6, r1, ip, lsr #32
   15fc0:	andeq	r6, r1, ip, lsr #32
   15fc4:	andeq	r6, r1, ip, lsr #32
   15fc8:	andeq	r6, r1, ip, lsr #32
   15fcc:	andeq	r6, r1, ip, lsr #32
   15fd0:	andeq	r6, r1, ip, lsr #32
   15fd4:	andeq	r6, r1, ip, lsr #32
   15fd8:	andeq	r6, r1, ip, lsr #32
   15fdc:	andeq	r6, r1, ip, lsr #32
   15fe0:	andeq	r6, r1, ip, lsr #32
   15fe4:	andeq	r6, r1, ip, lsr #32
   15fe8:	andeq	r6, r1, ip, lsr #32
   15fec:	andeq	r6, r1, ip, lsr #32
   15ff0:	andeq	r6, r1, ip, lsr #32
   15ff4:	andeq	r6, r1, ip, lsr #32
   15ff8:	andeq	r6, r1, ip, lsr #32
   15ffc:	andeq	r6, r1, ip, lsr #32
   16000:	andeq	r6, r1, ip, lsr #32
   16004:	andeq	r6, r1, ip, lsr #32
   16008:	andeq	r6, r1, ip, lsr #32
   1600c:	andeq	r6, r1, ip, lsr #32
   16010:	andeq	r6, r1, ip, lsr #32
   16014:	andeq	r6, r1, ip, lsr #32
   16018:	andeq	r6, r1, r8, lsr #32
   1601c:	andeq	r6, r1, r8, lsr #32
   16020:	andeq	r6, r1, r8, lsr #32
   16024:	andeq	r6, r1, r8, lsr #32
   16028:	bx	lr
   1602c:	mov	r0, #0
   16030:	bx	lr
   16034:	sub	r0, r0, #9
   16038:	cmp	r0, #23
   1603c:	movhi	r0, #0
   16040:	bxhi	lr
   16044:	bic	r0, r0, #-16777216	; 0xff000000
   16048:	movw	r1, #31
   1604c:	movt	r1, #128	; 0x80
   16050:	mov	r2, #1
   16054:	and	r0, r2, r1, lsr r0
   16058:	bx	lr
   1605c:	sub	r1, r0, #65	; 0x41
   16060:	mov	r0, #0
   16064:	cmp	r1, #26
   16068:	movwcc	r0, #1
   1606c:	bx	lr
   16070:	mov	r1, r0
   16074:	sub	r2, r0, #48	; 0x30
   16078:	mov	r0, #1
   1607c:	cmp	r2, #22
   16080:	bhi	16098 <putc_unlocked@plt+0x4d9c>
   16084:	mov	ip, #1
   16088:	movw	r3, #1023	; 0x3ff
   1608c:	movt	r3, #126	; 0x7e
   16090:	tst	r3, ip, lsl r2
   16094:	bxne	lr
   16098:	sub	r1, r1, #97	; 0x61
   1609c:	cmp	r1, #6
   160a0:	movcs	r0, #0
   160a4:	bxcs	lr
   160a8:	bx	lr
   160ac:	sub	r1, r0, #65	; 0x41
   160b0:	cmp	r1, #26
   160b4:	addcc	r0, r0, #32
   160b8:	bx	lr
   160bc:	sub	r1, r0, #97	; 0x61
   160c0:	cmp	r1, #26
   160c4:	subcc	r0, r0, #32
   160c8:	bx	lr
   160cc:	push	{r4, r5, r6, sl, fp, lr}
   160d0:	add	fp, sp, #16
   160d4:	mov	r4, r0
   160d8:	bl	1114c <__fpending@plt>
   160dc:	mov	r5, r0
   160e0:	mov	r0, r4
   160e4:	bl	11158 <ferror_unlocked@plt>
   160e8:	mov	r6, r0
   160ec:	mov	r0, r4
   160f0:	bl	12d40 <putc_unlocked@plt+0x1a44>
   160f4:	cmp	r6, #0
   160f8:	beq	16118 <putc_unlocked@plt+0x4e1c>
   160fc:	mvn	r4, #0
   16100:	cmp	r0, #0
   16104:	bne	1614c <putc_unlocked@plt+0x4e50>
   16108:	bl	11218 <__errno_location@plt>
   1610c:	mov	r1, #0
   16110:	str	r1, [r0]
   16114:	b	1614c <putc_unlocked@plt+0x4e50>
   16118:	cmp	r0, #0
   1611c:	mov	r4, r0
   16120:	mvnne	r4, #0
   16124:	cmp	r5, #0
   16128:	bne	1614c <putc_unlocked@plt+0x4e50>
   1612c:	cmp	r0, #0
   16130:	beq	1614c <putc_unlocked@plt+0x4e50>
   16134:	bl	11218 <__errno_location@plt>
   16138:	ldr	r0, [r0]
   1613c:	subs	r4, r0, #9
   16140:	mvnne	r4, #0
   16144:	mov	r0, r4
   16148:	pop	{r4, r5, r6, sl, fp, pc}
   1614c:	mov	r0, r4
   16150:	pop	{r4, r5, r6, sl, fp, pc}
   16154:	push	{fp, lr}
   16158:	mov	fp, sp
   1615c:	bl	11218 <__errno_location@plt>
   16160:	mov	r1, #12
   16164:	str	r1, [r0]
   16168:	mov	r0, #0
   1616c:	pop	{fp, pc}
   16170:	b	15d24 <putc_unlocked@plt+0x4a28>
   16174:	cmp	r1, #0
   16178:	orreq	r1, r1, #1
   1617c:	b	15d54 <putc_unlocked@plt+0x4a58>
   16180:	b	15cd0 <putc_unlocked@plt+0x49d4>
   16184:	clz	r3, r2
   16188:	lsr	ip, r3, #5
   1618c:	clz	r3, r1
   16190:	lsr	r3, r3, #5
   16194:	orrs	r3, r3, ip
   16198:	movwne	r1, #1
   1619c:	movwne	r2, #1
   161a0:	b	1623c <putc_unlocked@plt+0x4f40>
   161a4:	push	{fp, lr}
   161a8:	mov	fp, sp
   161ac:	mov	r0, #14
   161b0:	bl	1129c <nl_langinfo@plt>
   161b4:	movw	r1, #28312	; 0x6e98
   161b8:	movt	r1, #1
   161bc:	cmp	r0, #0
   161c0:	movne	r1, r0
   161c4:	ldrb	r2, [r1]
   161c8:	movw	r0, #30126	; 0x75ae
   161cc:	movt	r0, #1
   161d0:	cmp	r2, #0
   161d4:	movne	r0, r1
   161d8:	pop	{fp, pc}
   161dc:	push	{r4, r5, r6, r7, fp, lr}
   161e0:	add	fp, sp, #16
   161e4:	sub	sp, sp, #8
   161e8:	mov	r7, r2
   161ec:	mov	r4, r1
   161f0:	add	r5, sp, #4
   161f4:	cmp	r0, #0
   161f8:	movne	r5, r0
   161fc:	mov	r0, r5
   16200:	bl	11164 <mbrtowc@plt>
   16204:	mov	r6, r0
   16208:	cmp	r7, #0
   1620c:	beq	16230 <putc_unlocked@plt+0x4f34>
   16210:	cmn	r6, #2
   16214:	bcc	16230 <putc_unlocked@plt+0x4f34>
   16218:	mov	r0, #0
   1621c:	bl	16278 <putc_unlocked@plt+0x4f7c>
   16220:	cmp	r0, #0
   16224:	ldrbeq	r0, [r4]
   16228:	streq	r0, [r5]
   1622c:	moveq	r6, #1
   16230:	mov	r0, r6
   16234:	sub	sp, fp, #16
   16238:	pop	{r4, r5, r6, r7, fp, pc}
   1623c:	cmp	r2, #0
   16240:	beq	16270 <putc_unlocked@plt+0x4f74>
   16244:	mvn	r3, #0
   16248:	udiv	r3, r3, r2
   1624c:	cmp	r3, r1
   16250:	bcs	16270 <putc_unlocked@plt+0x4f74>
   16254:	push	{fp, lr}
   16258:	mov	fp, sp
   1625c:	bl	11218 <__errno_location@plt>
   16260:	mov	r1, #12
   16264:	str	r1, [r0]
   16268:	mov	r0, #0
   1626c:	pop	{fp, pc}
   16270:	mul	r1, r2, r1
   16274:	b	15d54 <putc_unlocked@plt+0x4a58>
   16278:	push	{r4, sl, fp, lr}
   1627c:	add	fp, sp, #8
   16280:	sub	sp, sp, #264	; 0x108
   16284:	add	r1, sp, #7
   16288:	movw	r2, #257	; 0x101
   1628c:	bl	162dc <putc_unlocked@plt+0x4fe0>
   16290:	mov	r4, #0
   16294:	cmp	r0, #0
   16298:	bne	162d0 <putc_unlocked@plt+0x4fd4>
   1629c:	add	r0, sp, #7
   162a0:	movw	r1, #30132	; 0x75b4
   162a4:	movt	r1, #1
   162a8:	bl	11068 <strcmp@plt>
   162ac:	cmp	r0, #0
   162b0:	beq	162d0 <putc_unlocked@plt+0x4fd4>
   162b4:	add	r0, sp, #7
   162b8:	movw	r1, #30134	; 0x75b6
   162bc:	movt	r1, #1
   162c0:	bl	11068 <strcmp@plt>
   162c4:	mov	r4, r0
   162c8:	cmp	r0, #0
   162cc:	movwne	r4, #1
   162d0:	mov	r0, r4
   162d4:	sub	sp, fp, #8
   162d8:	pop	{r4, sl, fp, pc}
   162dc:	b	162e0 <putc_unlocked@plt+0x4fe4>
   162e0:	push	{r4, r5, r6, r7, fp, lr}
   162e4:	add	fp, sp, #16
   162e8:	mov	r6, r2
   162ec:	mov	r4, r1
   162f0:	bl	1637c <putc_unlocked@plt+0x5080>
   162f4:	cmp	r0, #0
   162f8:	beq	16328 <putc_unlocked@plt+0x502c>
   162fc:	mov	r7, r0
   16300:	bl	11200 <strlen@plt>
   16304:	cmp	r0, r6
   16308:	bcs	16348 <putc_unlocked@plt+0x504c>
   1630c:	add	r2, r0, #1
   16310:	mov	r0, r4
   16314:	mov	r1, r7
   16318:	bl	110b0 <memcpy@plt>
   1631c:	mov	r5, #0
   16320:	mov	r0, r5
   16324:	pop	{r4, r5, r6, r7, fp, pc}
   16328:	mov	r5, #22
   1632c:	cmp	r6, #0
   16330:	movne	r0, #0
   16334:	strbne	r0, [r4]
   16338:	movne	r0, r5
   1633c:	popne	{r4, r5, r6, r7, fp, pc}
   16340:	mov	r0, r5
   16344:	pop	{r4, r5, r6, r7, fp, pc}
   16348:	mov	r5, #34	; 0x22
   1634c:	cmp	r6, #0
   16350:	beq	16370 <putc_unlocked@plt+0x5074>
   16354:	sub	r6, r6, #1
   16358:	mov	r0, r4
   1635c:	mov	r1, r7
   16360:	mov	r2, r6
   16364:	bl	110b0 <memcpy@plt>
   16368:	mov	r0, #0
   1636c:	strb	r0, [r4, r6]
   16370:	mov	r0, r5
   16374:	pop	{r4, r5, r6, r7, fp, pc}
   16378:	b	1637c <putc_unlocked@plt+0x5080>
   1637c:	mov	r1, #0
   16380:	b	11284 <setlocale@plt>
   16384:	cmp	r3, #0
   16388:	cmpeq	r2, #0
   1638c:	bne	163a4 <putc_unlocked@plt+0x50a8>
   16390:	cmp	r1, #0
   16394:	cmpeq	r0, #0
   16398:	mvnne	r1, #0
   1639c:	mvnne	r0, #0
   163a0:	b	163c0 <putc_unlocked@plt+0x50c4>
   163a4:	sub	sp, sp, #8
   163a8:	push	{sp, lr}
   163ac:	bl	163d0 <putc_unlocked@plt+0x50d4>
   163b0:	ldr	lr, [sp, #4]
   163b4:	add	sp, sp, #8
   163b8:	pop	{r2, r3}
   163bc:	bx	lr
   163c0:	push	{r1, lr}
   163c4:	mov	r0, #8
   163c8:	bl	1105c <raise@plt>
   163cc:	pop	{r1, pc}
   163d0:	cmp	r1, r3
   163d4:	cmpeq	r0, r2
   163d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163dc:	mov	r4, r0
   163e0:	movcc	r0, #0
   163e4:	mov	r5, r1
   163e8:	ldr	lr, [sp, #36]	; 0x24
   163ec:	movcc	r1, r0
   163f0:	bcc	164ec <putc_unlocked@plt+0x51f0>
   163f4:	cmp	r3, #0
   163f8:	clzeq	ip, r2
   163fc:	clzne	ip, r3
   16400:	addeq	ip, ip, #32
   16404:	cmp	r5, #0
   16408:	clzeq	r1, r4
   1640c:	addeq	r1, r1, #32
   16410:	clzne	r1, r5
   16414:	sub	ip, ip, r1
   16418:	sub	sl, ip, #32
   1641c:	lsl	r9, r3, ip
   16420:	rsb	fp, ip, #32
   16424:	orr	r9, r9, r2, lsl sl
   16428:	orr	r9, r9, r2, lsr fp
   1642c:	lsl	r8, r2, ip
   16430:	cmp	r5, r9
   16434:	cmpeq	r4, r8
   16438:	movcc	r0, #0
   1643c:	movcc	r1, r0
   16440:	bcc	1645c <putc_unlocked@plt+0x5160>
   16444:	mov	r0, #1
   16448:	subs	r4, r4, r8
   1644c:	lsl	r1, r0, sl
   16450:	orr	r1, r1, r0, lsr fp
   16454:	lsl	r0, r0, ip
   16458:	sbc	r5, r5, r9
   1645c:	cmp	ip, #0
   16460:	beq	164ec <putc_unlocked@plt+0x51f0>
   16464:	lsr	r6, r8, #1
   16468:	orr	r6, r6, r9, lsl #31
   1646c:	lsr	r7, r9, #1
   16470:	mov	r2, ip
   16474:	b	16498 <putc_unlocked@plt+0x519c>
   16478:	subs	r3, r4, r6
   1647c:	sbc	r8, r5, r7
   16480:	adds	r3, r3, r3
   16484:	adc	r8, r8, r8
   16488:	adds	r4, r3, #1
   1648c:	adc	r5, r8, #0
   16490:	subs	r2, r2, #1
   16494:	beq	164b4 <putc_unlocked@plt+0x51b8>
   16498:	cmp	r5, r7
   1649c:	cmpeq	r4, r6
   164a0:	bcs	16478 <putc_unlocked@plt+0x517c>
   164a4:	adds	r4, r4, r4
   164a8:	adc	r5, r5, r5
   164ac:	subs	r2, r2, #1
   164b0:	bne	16498 <putc_unlocked@plt+0x519c>
   164b4:	lsr	r3, r4, ip
   164b8:	orr	r3, r3, r5, lsl fp
   164bc:	lsr	r2, r5, ip
   164c0:	orr	r3, r3, r5, lsr sl
   164c4:	adds	r0, r0, r4
   164c8:	mov	r4, r3
   164cc:	lsl	r3, r2, ip
   164d0:	orr	r3, r3, r4, lsl sl
   164d4:	lsl	ip, r4, ip
   164d8:	orr	r3, r3, r4, lsr fp
   164dc:	adc	r1, r1, r5
   164e0:	subs	r0, r0, ip
   164e4:	mov	r5, r2
   164e8:	sbc	r1, r1, r3
   164ec:	cmp	lr, #0
   164f0:	strdne	r4, [lr]
   164f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   164fc:	mov	r7, r0
   16500:	ldr	r6, [pc, #72]	; 16550 <putc_unlocked@plt+0x5254>
   16504:	ldr	r5, [pc, #72]	; 16554 <putc_unlocked@plt+0x5258>
   16508:	add	r6, pc, r6
   1650c:	add	r5, pc, r5
   16510:	sub	r6, r6, r5
   16514:	mov	r8, r1
   16518:	mov	r9, r2
   1651c:	bl	11024 <calloc@plt-0x20>
   16520:	asrs	r6, r6, #2
   16524:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16528:	mov	r4, #0
   1652c:	add	r4, r4, #1
   16530:	ldr	r3, [r5], #4
   16534:	mov	r2, r9
   16538:	mov	r1, r8
   1653c:	mov	r0, r7
   16540:	blx	r3
   16544:	cmp	r6, r4
   16548:	bne	1652c <putc_unlocked@plt+0x5230>
   1654c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16550:	strdeq	r1, [r1], -ip
   16554:	strdeq	r1, [r1], -r4
   16558:	bx	lr
   1655c:	ldr	r3, [pc, #12]	; 16570 <putc_unlocked@plt+0x5274>
   16560:	mov	r1, #0
   16564:	add	r3, pc, r3
   16568:	ldr	r2, [r3]
   1656c:	b	11224 <__cxa_atexit@plt>
   16570:	muleq	r1, r8, fp

Disassembly of section .fini:

00016574 <.fini>:
   16574:	push	{r3, lr}
   16578:	pop	{r3, pc}
