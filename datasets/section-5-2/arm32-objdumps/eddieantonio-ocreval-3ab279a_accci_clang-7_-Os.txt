
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <.init>:
   10a8c:	push	{r3, lr}
   10a90:	bl	10c74 <getc@plt+0x48>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <calloc@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <calloc@plt-0x4>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	andeq	r3, r1, r8, asr r5

00010aac <calloc@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #77824	; 0x13000
   10ab4:	ldr	pc, [ip, #1368]!	; 0x558

00010ab8 <strcmp@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #77824	; 0x13000
   10ac0:	ldr	pc, [ip, #1360]!	; 0x550

00010ac4 <printf@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #77824	; 0x13000
   10acc:	ldr	pc, [ip, #1352]!	; 0x548

00010ad0 <fopen@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #77824	; 0x13000
   10ad8:	ldr	pc, [ip, #1344]!	; 0x540

00010adc <free@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #77824	; 0x13000
   10ae4:	ldr	pc, [ip, #1336]!	; 0x538

00010ae8 <utf8proc_get_property@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #77824	; 0x13000
   10af0:	ldr	pc, [ip, #1328]!	; 0x530

00010af4 <fgets@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #77824	; 0x13000
   10afc:	ldr	pc, [ip, #1320]!	; 0x528

00010b00 <utf8proc_encode_char@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #77824	; 0x13000
   10b08:	ldr	pc, [ip, #1312]!	; 0x520

00010b0c <strdup@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #77824	; 0x13000
   10b14:	ldr	pc, [ip, #1304]!	; 0x518

00010b18 <rewind@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #77824	; 0x13000
   10b20:	ldr	pc, [ip, #1296]!	; 0x510

00010b24 <unlink@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #77824	; 0x13000
   10b2c:	ldr	pc, [ip, #1288]!	; 0x508

00010b30 <utf8proc_tolower@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #77824	; 0x13000
   10b38:	ldr	pc, [ip, #1280]!	; 0x500

00010b3c <__xstat@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #77824	; 0x13000
   10b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b48 <fwrite@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #77824	; 0x13000
   10b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b54 <fread@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #77824	; 0x13000
   10b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b60 <utf8proc_iterate@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #77824	; 0x13000
   10b68:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b6c <__libc_start_main@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #77824	; 0x13000
   10b74:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b78 <__sysv_signal@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #77824	; 0x13000
   10b80:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b84 <__gmon_start__@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #77824	; 0x13000
   10b8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b90 <getpid@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #77824	; 0x13000
   10b98:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b9c <exit@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #77824	; 0x13000
   10ba4:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba8 <utf8proc_category@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #77824	; 0x13000
   10bb0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb4 <strlen@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #77824	; 0x13000
   10bbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bc0 <fprintf@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #77824	; 0x13000
   10bc8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bcc <sqrt@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #77824	; 0x13000
   10bd4:	ldr	pc, [ip, #1176]!	; 0x498

00010bd8 <__isoc99_sscanf@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #77824	; 0x13000
   10be0:	ldr	pc, [ip, #1168]!	; 0x490

00010be4 <fclose@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #77824	; 0x13000
   10bec:	ldr	pc, [ip, #1160]!	; 0x488

00010bf0 <sprintf@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #77824	; 0x13000
   10bf8:	ldr	pc, [ip, #1152]!	; 0x480

00010bfc <utf8proc_errmsg@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #77824	; 0x13000
   10c04:	ldr	pc, [ip, #1144]!	; 0x478

00010c08 <fputs@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #77824	; 0x13000
   10c10:	ldr	pc, [ip, #1136]!	; 0x470

00010c14 <strncmp@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #77824	; 0x13000
   10c1c:	ldr	pc, [ip, #1128]!	; 0x468

00010c20 <abort@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #77824	; 0x13000
   10c28:	ldr	pc, [ip, #1120]!	; 0x460

00010c2c <getc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #77824	; 0x13000
   10c34:	ldr	pc, [ip, #1112]!	; 0x458

Disassembly of section .text:

00010c38 <error@@Base-0x1934>:
   10c38:	mov	fp, #0
   10c3c:	mov	lr, #0
   10c40:	pop	{r1}		; (ldr r1, [sp], #4)
   10c44:	mov	r2, sp
   10c48:	push	{r2}		; (str r2, [sp, #-4]!)
   10c4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c50:	ldr	ip, [pc, #16]	; 10c68 <getc@plt+0x3c>
   10c54:	push	{ip}		; (str ip, [sp, #-4]!)
   10c58:	ldr	r0, [pc, #12]	; 10c6c <getc@plt+0x40>
   10c5c:	ldr	r3, [pc, #12]	; 10c70 <getc@plt+0x44>
   10c60:	bl	10b6c <__libc_start_main@plt>
   10c64:	bl	10c20 <abort@plt>
   10c68:	andeq	r2, r1, ip, lsr #30
   10c6c:	andeq	r0, r1, r0, lsr lr
   10c70:	andeq	r2, r1, ip, asr #29
   10c74:	ldr	r3, [pc, #20]	; 10c90 <getc@plt+0x64>
   10c78:	ldr	r2, [pc, #20]	; 10c94 <getc@plt+0x68>
   10c7c:	add	r3, pc, r3
   10c80:	ldr	r2, [r3, r2]
   10c84:	cmp	r2, #0
   10c88:	bxeq	lr
   10c8c:	b	10b84 <__gmon_start__@plt>
   10c90:	andeq	r3, r1, ip, ror r3
   10c94:	muleq	r0, r0, r0
   10c98:	ldr	r0, [pc, #24]	; 10cb8 <getc@plt+0x8c>
   10c9c:	ldr	r3, [pc, #24]	; 10cbc <getc@plt+0x90>
   10ca0:	cmp	r3, r0
   10ca4:	bxeq	lr
   10ca8:	ldr	r3, [pc, #16]	; 10cc0 <getc@plt+0x94>
   10cac:	cmp	r3, #0
   10cb0:	bxeq	lr
   10cb4:	bx	r3
   10cb8:	andeq	r4, r2, r4, lsr #1
   10cbc:	andeq	r4, r2, r4, lsr #1
   10cc0:	andeq	r0, r0, r0
   10cc4:	ldr	r0, [pc, #36]	; 10cf0 <getc@plt+0xc4>
   10cc8:	ldr	r1, [pc, #36]	; 10cf4 <getc@plt+0xc8>
   10ccc:	sub	r1, r1, r0
   10cd0:	asr	r1, r1, #2
   10cd4:	add	r1, r1, r1, lsr #31
   10cd8:	asrs	r1, r1, #1
   10cdc:	bxeq	lr
   10ce0:	ldr	r3, [pc, #16]	; 10cf8 <getc@plt+0xcc>
   10ce4:	cmp	r3, #0
   10ce8:	bxeq	lr
   10cec:	bx	r3
   10cf0:	andeq	r4, r2, r4, lsr #1
   10cf4:	andeq	r4, r2, r4, lsr #1
   10cf8:	andeq	r0, r0, r0
   10cfc:	push	{r4, lr}
   10d00:	ldr	r4, [pc, #24]	; 10d20 <getc@plt+0xf4>
   10d04:	ldrb	r3, [r4]
   10d08:	cmp	r3, #0
   10d0c:	popne	{r4, pc}
   10d10:	bl	10c98 <getc@plt+0x6c>
   10d14:	mov	r3, #1
   10d18:	strb	r3, [r4]
   10d1c:	pop	{r4, pc}
   10d20:	strheq	r4, [r2], -r8
   10d24:	b	10cc4 <getc@plt+0x98>
   10d28:	push	{r4, r5, r6, sl, fp, lr}
   10d2c:	add	fp, sp, #16
   10d30:	movw	r4, #17712	; 0x4530
   10d34:	mov	r1, r0
   10d38:	movt	r4, #19
   10d3c:	ldm	r4, {r5, r6}
   10d40:	mov	r0, r4
   10d44:	bl	10fbc <getc@plt+0x390>
   10d48:	ldm	r4, {r0, r2}
   10d4c:	sub	r1, r0, r5
   10d50:	movw	r0, #27888	; 0x6cf0
   10d54:	sub	r2, r2, r6
   10d58:	movt	r0, #155	; 0x9b
   10d5c:	pop	{r4, r5, r6, sl, fp, lr}
   10d60:	b	11a30 <getc@plt+0xe04>
   10d64:	nop	{0}
   10d68:	push	{r4, sl, fp, lr}
   10d6c:	add	fp, sp, #8
   10d70:	sub	sp, sp, #32
   10d74:	movw	r4, #27888	; 0x6cf0
   10d78:	sub	r1, fp, #16
   10d7c:	add	r2, sp, #16
   10d80:	movt	r4, #155	; 0x9b
   10d84:	mov	r0, r4
   10d88:	bl	11a80 <getc@plt+0xe54>
   10d8c:	ldr	r1, [r4, #12]
   10d90:	movw	r0, #12108	; 0x2f4c
   10d94:	movt	r0, #1
   10d98:	bl	10ac4 <printf@plt>
   10d9c:	movw	r4, #17712	; 0x4530
   10da0:	movw	r0, #12130	; 0x2f62
   10da4:	movt	r4, #19
   10da8:	movt	r0, #1
   10dac:	ldr	r1, [r4]
   10db0:	bl	10ac4 <printf@plt>
   10db4:	ldr	r1, [r4, #4]
   10db8:	movw	r0, #12150	; 0x2f76
   10dbc:	movt	r0, #1
   10dc0:	bl	10ac4 <printf@plt>
   10dc4:	ldm	r4, {r0, r1}
   10dc8:	vldr	d16, [pc, #88]	; 10e28 <getc@plt+0x1fc>
   10dcc:	sub	r1, r0, r1
   10dd0:	vmov	s2, r0
   10dd4:	movw	r0, #12166	; 0x2f86
   10dd8:	vmov	s0, r1
   10ddc:	movt	r0, #1
   10de0:	vcvt.f64.s32	d17, s0
   10de4:	vcvt.f64.s32	d18, s2
   10de8:	vmul.f64	d16, d17, d16
   10dec:	vdiv.f64	d16, d16, d18
   10df0:	vmov	r2, r3, d16
   10df4:	bl	10ac4 <printf@plt>
   10df8:	vldr	d16, [fp, #-16]
   10dfc:	movw	r0, #12207	; 0x2faf
   10e00:	vldr	d17, [sp, #16]
   10e04:	movt	r0, #1
   10e08:	str	r0, [sp, #8]
   10e0c:	movw	r0, #12186	; 0x2f9a
   10e10:	movt	r0, #1
   10e14:	vmov	r2, r3, d16
   10e18:	vstr	d17, [sp]
   10e1c:	bl	10ac4 <printf@plt>
   10e20:	sub	sp, fp, #8
   10e24:	pop	{r4, sl, fp, pc}
   10e28:	andeq	r0, r0, r0
   10e2c:	subsmi	r0, r9, r0
   10e30:	push	{fp, lr}
   10e34:	mov	fp, sp
   10e38:	sub	sp, sp, #8
   10e3c:	movw	r2, #12256	; 0x2fe0
   10e40:	str	r0, [sp, #4]
   10e44:	add	r0, sp, #4
   10e48:	mov	r3, #0
   10e4c:	mov	r9, r1
   10e50:	mov	r7, #0
   10e54:	movt	r2, #1
   10e58:	bl	12300 <getc@plt+0x16d4>
   10e5c:	ldr	r0, [sp, #4]
   10e60:	cmp	r0, #2
   10e64:	blt	10eb8 <getc@plt+0x28c>
   10e68:	movw	r5, #17712	; 0x4530
   10e6c:	movw	r8, #27888	; 0x6cf0
   10e70:	movt	r5, #19
   10e74:	movt	r8, #155	; 0x9b
   10e78:	ldr	r1, [r9, r7, lsl #2]
   10e7c:	ldr	r6, [r5]
   10e80:	ldr	r4, [r5, #4]
   10e84:	mov	r0, r5
   10e88:	bl	10fbc <getc@plt+0x390>
   10e8c:	ldm	r5, {r0, r2}
   10e90:	sub	r1, r0, r6
   10e94:	sub	r2, r2, r4
   10e98:	mov	r0, r8
   10e9c:	bl	11a30 <getc@plt+0xe04>
   10ea0:	ldr	r0, [sp, #4]
   10ea4:	add	r7, r7, #1
   10ea8:	cmp	r7, r0
   10eac:	blt	10e78 <getc@plt+0x24c>
   10eb0:	bl	10d68 <getc@plt+0x13c>
   10eb4:	bl	1252c <getc@plt+0x1900>
   10eb8:	movw	r0, #12306	; 0x3012
   10ebc:	movt	r0, #1
   10ec0:	bl	1256c <error@@Base>
   10ec4:	andeq	r0, r0, r0
   10ec8:	push	{r4, r5, r6, r7, fp, lr}
   10ecc:	add	fp, sp, #16
   10ed0:	mov	r7, r0
   10ed4:	mov	r0, r1
   10ed8:	mov	r4, r3
   10edc:	mov	r5, r2
   10ee0:	mov	r6, r1
   10ee4:	bl	11f20 <getc@plt+0x12f4>
   10ee8:	add	r0, r7, r0, lsl #3
   10eec:	ldr	r1, [r0, #68]	; 0x44
   10ef0:	ldr	r2, [r0, #72]	; 0x48
   10ef4:	add	r1, r1, r5
   10ef8:	add	r2, r2, r4
   10efc:	str	r1, [r0, #68]	; 0x44
   10f00:	str	r2, [r0, #72]	; 0x48
   10f04:	ldr	r0, [r7, #2116]	; 0x844
   10f08:	ldr	r1, [r7, #2120]	; 0x848
   10f0c:	add	r0, r0, r5
   10f10:	add	r1, r1, r4
   10f14:	str	r0, [r7, #2116]	; 0x844
   10f18:	str	r1, [r7, #2120]	; 0x848
   10f1c:	add	r0, r7, r6, lsl #3
   10f20:	movw	r1, #10180	; 0x27c4
   10f24:	ldr	r1, [r0, r1]!
   10f28:	add	r1, r1, r5
   10f2c:	str	r1, [r0]
   10f30:	ldr	r1, [r0, #4]
   10f34:	add	r1, r1, r4
   10f38:	str	r1, [r0, #4]
   10f3c:	pop	{r4, r5, r6, r7, fp, pc}
   10f40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f44:	add	fp, sp, #24
   10f48:	mov	r7, r1
   10f4c:	movw	r1, #2124	; 0x84c
   10f50:	mov	r8, r3
   10f54:	mov	r5, r2
   10f58:	add	r6, r0, r1
   10f5c:	mov	r1, r7
   10f60:	mov	r0, r6
   10f64:	bl	11ca0 <getc@plt+0x1074>
   10f68:	cmp	r0, #0
   10f6c:	beq	10f8c <getc@plt+0x360>
   10f70:	ldr	r1, [r0, #12]
   10f74:	ldr	r2, [r0, #16]
   10f78:	add	r1, r1, r5
   10f7c:	add	r2, r2, r8
   10f80:	str	r1, [r0, #12]
   10f84:	str	r2, [r0, #16]
   10f88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10f8c:	mov	r0, #1
   10f90:	mov	r1, #20
   10f94:	bl	120e0 <getc@plt+0x14b4>
   10f98:	mov	r4, r0
   10f9c:	mov	r0, r7
   10fa0:	bl	10b0c <strdup@plt>
   10fa4:	add	r1, r4, #8
   10fa8:	stm	r1, {r0, r5, r8}
   10fac:	mov	r0, r6
   10fb0:	mov	r1, r4
   10fb4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10fb8:	b	11d28 <getc@plt+0x10fc>
   10fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fc0:	add	fp, sp, #28
   10fc4:	sub	sp, sp, #20
   10fc8:	mov	r6, r1
   10fcc:	movw	r1, #15749	; 0x3d85
   10fd0:	mov	sl, r0
   10fd4:	movt	r1, #1
   10fd8:	mov	r0, r6
   10fdc:	bl	1217c <getc@plt+0x1550>
   10fe0:	mov	r5, r0
   10fe4:	movw	r0, #16569	; 0x40b9
   10fe8:	mov	r1, #99	; 0x63
   10fec:	movt	r0, #2
   10ff0:	mov	r2, r5
   10ff4:	bl	10af4 <fgets@plt>
   10ff8:	cmp	r0, #0
   10ffc:	beq	1133c <getc@plt+0x710>
   11000:	movw	r0, #16569	; 0x40b9
   11004:	movw	r1, #12329	; 0x3029
   11008:	mov	r2, #40	; 0x28
   1100c:	movt	r0, #2
   11010:	movt	r1, #1
   11014:	bl	10c14 <strncmp@plt>
   11018:	cmp	r0, #0
   1101c:	bne	1133c <getc@plt+0x710>
   11020:	movw	r0, #16569	; 0x40b9
   11024:	mov	r1, #99	; 0x63
   11028:	mov	r2, r5
   1102c:	movt	r0, #2
   11030:	bl	10af4 <fgets@plt>
   11034:	cmp	r0, #0
   11038:	beq	1133c <getc@plt+0x710>
   1103c:	movw	r0, #16569	; 0x40b9
   11040:	movw	r1, #15684	; 0x3d44
   11044:	movt	r0, #2
   11048:	movt	r1, #1
   1104c:	bl	10ab8 <strcmp@plt>
   11050:	cmp	r0, #0
   11054:	bne	1133c <getc@plt+0x710>
   11058:	add	r1, sp, #16
   1105c:	mov	r0, r5
   11060:	mov	r2, sl
   11064:	bl	11358 <getc@plt+0x72c>
   11068:	cmp	r0, #0
   1106c:	beq	1133c <getc@plt+0x710>
   11070:	add	r2, sl, #4
   11074:	add	r1, sp, #12
   11078:	mov	r0, r5
   1107c:	bl	11358 <getc@plt+0x72c>
   11080:	cmp	r0, #0
   11084:	beq	1133c <getc@plt+0x710>
   11088:	movw	r0, #16569	; 0x40b9
   1108c:	mov	r1, #99	; 0x63
   11090:	mov	r2, r5
   11094:	movt	r0, #2
   11098:	bl	10af4 <fgets@plt>
   1109c:	cmp	r0, #0
   110a0:	beq	1133c <getc@plt+0x710>
   110a4:	movw	r0, #16569	; 0x40b9
   110a8:	mov	r1, #99	; 0x63
   110ac:	mov	r2, r5
   110b0:	movt	r0, #2
   110b4:	bl	10af4 <fgets@plt>
   110b8:	cmp	r0, #0
   110bc:	beq	1133c <getc@plt+0x710>
   110c0:	add	r2, sl, #8
   110c4:	add	r1, sp, #8
   110c8:	mov	r0, r5
   110cc:	bl	11358 <getc@plt+0x72c>
   110d0:	cmp	r0, #0
   110d4:	beq	1133c <getc@plt+0x710>
   110d8:	add	r2, sl, #12
   110dc:	add	r1, sp, #8
   110e0:	mov	r0, r5
   110e4:	bl	11358 <getc@plt+0x72c>
   110e8:	cmp	r0, #0
   110ec:	beq	1133c <getc@plt+0x710>
   110f0:	add	r2, sl, #16
   110f4:	add	r1, sp, #8
   110f8:	mov	r0, r5
   110fc:	bl	11358 <getc@plt+0x72c>
   11100:	cmp	r0, #0
   11104:	beq	1133c <getc@plt+0x710>
   11108:	movw	r0, #16569	; 0x40b9
   1110c:	mov	r1, #99	; 0x63
   11110:	mov	r2, r5
   11114:	movt	r0, #2
   11118:	bl	10af4 <fgets@plt>
   1111c:	cmp	r0, #0
   11120:	beq	1133c <getc@plt+0x710>
   11124:	movw	r0, #16569	; 0x40b9
   11128:	mov	r1, #99	; 0x63
   1112c:	mov	r2, r5
   11130:	movt	r0, #2
   11134:	bl	10af4 <fgets@plt>
   11138:	cmp	r0, #0
   1113c:	beq	1133c <getc@plt+0x710>
   11140:	movw	r0, #16569	; 0x40b9
   11144:	mov	r1, #99	; 0x63
   11148:	mov	r2, r5
   1114c:	movt	r0, #2
   11150:	bl	10af4 <fgets@plt>
   11154:	cmp	r0, #0
   11158:	beq	1133c <getc@plt+0x710>
   1115c:	movw	r0, #16569	; 0x40b9
   11160:	mov	r1, #99	; 0x63
   11164:	mov	r2, r5
   11168:	movt	r0, #2
   1116c:	bl	10af4 <fgets@plt>
   11170:	cmp	r0, #0
   11174:	beq	1133c <getc@plt+0x710>
   11178:	add	r1, sl, #20
   1117c:	mov	r0, r5
   11180:	bl	113c4 <getc@plt+0x798>
   11184:	cmp	r0, #0
   11188:	beq	1133c <getc@plt+0x710>
   1118c:	add	r1, sl, #36	; 0x24
   11190:	mov	r0, r5
   11194:	bl	113c4 <getc@plt+0x798>
   11198:	cmp	r0, #0
   1119c:	beq	1133c <getc@plt+0x710>
   111a0:	add	r1, sl, #52	; 0x34
   111a4:	mov	r0, r5
   111a8:	bl	113c4 <getc@plt+0x798>
   111ac:	cmp	r0, #0
   111b0:	beq	1133c <getc@plt+0x710>
   111b4:	movw	r7, #16569	; 0x40b9
   111b8:	mov	r1, #99	; 0x63
   111bc:	mov	r2, r5
   111c0:	movt	r7, #2
   111c4:	mov	r0, r7
   111c8:	bl	10af4 <fgets@plt>
   111cc:	cmp	r0, #0
   111d0:	beq	1133c <getc@plt+0x710>
   111d4:	mov	r0, r7
   111d8:	mov	r1, #99	; 0x63
   111dc:	mov	r2, r5
   111e0:	bl	10af4 <fgets@plt>
   111e4:	cmp	r0, #0
   111e8:	ldrbne	r0, [r7]
   111ec:	cmpne	r0, #10
   111f0:	bne	111d4 <getc@plt+0x5a8>
   111f4:	ldr	r0, [sp, #12]
   111f8:	cmp	r0, #1
   111fc:	blt	11270 <getc@plt+0x644>
   11200:	movw	r6, #16569	; 0x40b9
   11204:	mov	r1, #99	; 0x63
   11208:	mov	r2, r5
   1120c:	movt	r6, #2
   11210:	mov	r0, r6
   11214:	bl	10af4 <fgets@plt>
   11218:	cmp	r0, #0
   1121c:	beq	11270 <getc@plt+0x644>
   11220:	add	r1, sp, #8
   11224:	add	r2, sp, #4
   11228:	mov	r0, r5
   1122c:	bl	11450 <getc@plt+0x824>
   11230:	cmp	r0, #0
   11234:	beq	11270 <getc@plt+0x644>
   11238:	add	r6, r6, #20
   1123c:	add	r7, sp, #8
   11240:	add	r4, sp, #4
   11244:	ldr	r3, [sp, #4]
   11248:	ldr	r2, [sp, #8]
   1124c:	mov	r0, sl
   11250:	mov	r1, r6
   11254:	bl	10f40 <getc@plt+0x314>
   11258:	mov	r0, r5
   1125c:	mov	r1, r7
   11260:	mov	r2, r4
   11264:	bl	11450 <getc@plt+0x824>
   11268:	cmp	r0, #0
   1126c:	bne	11244 <getc@plt+0x618>
   11270:	ldr	r0, [sp, #16]
   11274:	cmp	r0, #1
   11278:	blt	1132c <getc@plt+0x700>
   1127c:	movw	r6, #16569	; 0x40b9
   11280:	mov	r1, #99	; 0x63
   11284:	mov	r2, r5
   11288:	movt	r6, #2
   1128c:	mov	r0, r6
   11290:	bl	10af4 <fgets@plt>
   11294:	cmp	r0, #0
   11298:	beq	1132c <getc@plt+0x700>
   1129c:	add	r1, sp, #8
   112a0:	add	r2, sp, #4
   112a4:	mov	r0, r5
   112a8:	bl	11450 <getc@plt+0x824>
   112ac:	cmp	r0, #0
   112b0:	beq	1132c <getc@plt+0x700>
   112b4:	add	r8, sp, #8
   112b8:	add	r7, sp, #4
   112bc:	add	r9, r6, #31
   112c0:	mov	r4, sp
   112c4:	ldrb	r0, [r6, #31]
   112c8:	cmp	r0, #92	; 0x5c
   112cc:	beq	112e0 <getc@plt+0x6b4>
   112d0:	cmp	r0, #125	; 0x7d
   112d4:	bne	112ec <getc@plt+0x6c0>
   112d8:	ldrb	r1, [r6, #30]
   112dc:	b	112e4 <getc@plt+0x6b8>
   112e0:	mov	r1, #10
   112e4:	str	r1, [sp]
   112e8:	b	11304 <getc@plt+0x6d8>
   112ec:	movw	r1, #12372	; 0x3054
   112f0:	mov	r0, r9
   112f4:	mov	r2, r4
   112f8:	movt	r1, #1
   112fc:	bl	10bd8 <__isoc99_sscanf@plt>
   11300:	ldr	r1, [sp]
   11304:	ldr	r3, [sp, #4]
   11308:	ldr	r2, [sp, #8]
   1130c:	mov	r0, sl
   11310:	bl	10ec8 <getc@plt+0x29c>
   11314:	mov	r0, r5
   11318:	mov	r1, r8
   1131c:	mov	r2, r7
   11320:	bl	11450 <getc@plt+0x824>
   11324:	cmp	r0, #0
   11328:	bne	112c4 <getc@plt+0x698>
   1132c:	mov	r0, r5
   11330:	bl	121f4 <getc@plt+0x15c8>
   11334:	sub	sp, fp, #28
   11338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1133c:	movw	r1, #12394	; 0x306a
   11340:	movw	r0, #12376	; 0x3058
   11344:	cmp	r6, #0
   11348:	movt	r1, #1
   1134c:	movt	r0, #1
   11350:	movne	r1, r6
   11354:	bl	125ac <error@@Base+0x40>
   11358:	push	{r4, r5, r6, sl, fp, lr}
   1135c:	add	fp, sp, #16
   11360:	mov	r4, r2
   11364:	mov	r2, r0
   11368:	movw	r0, #16569	; 0x40b9
   1136c:	mov	r5, r1
   11370:	mov	r1, #99	; 0x63
   11374:	movt	r0, #2
   11378:	bl	10af4 <fgets@plt>
   1137c:	mov	r6, #0
   11380:	cmp	r0, #0
   11384:	beq	113bc <getc@plt+0x790>
   11388:	movw	r0, #16569	; 0x40b9
   1138c:	movw	r1, #12669	; 0x317d
   11390:	mov	r2, r5
   11394:	movt	r0, #2
   11398:	movt	r1, #1
   1139c:	bl	10bd8 <__isoc99_sscanf@plt>
   113a0:	cmp	r0, #1
   113a4:	bne	113bc <getc@plt+0x790>
   113a8:	ldr	r0, [r5]
   113ac:	ldr	r1, [r4]
   113b0:	mov	r6, #1
   113b4:	add	r0, r1, r0
   113b8:	str	r0, [r4]
   113bc:	mov	r0, r6
   113c0:	pop	{r4, r5, r6, sl, fp, pc}
   113c4:	push	{r4, r5, r6, sl, fp, lr}
   113c8:	add	fp, sp, #16
   113cc:	sub	sp, sp, #40	; 0x28
   113d0:	bfc	sp, #0, #4
   113d4:	mov	r2, r0
   113d8:	movw	r0, #16569	; 0x40b9
   113dc:	mov	r4, r1
   113e0:	mov	r1, #99	; 0x63
   113e4:	movt	r0, #2
   113e8:	bl	10af4 <fgets@plt>
   113ec:	mov	r5, #0
   113f0:	cmp	r0, #0
   113f4:	beq	11444 <getc@plt+0x818>
   113f8:	add	r6, sp, #16
   113fc:	orr	r0, r6, #12
   11400:	orr	r1, r6, #8
   11404:	orr	r3, r6, #4
   11408:	mov	r2, r6
   1140c:	str	r1, [sp]
   11410:	movw	r1, #12657	; 0x3171
   11414:	str	r0, [sp, #4]
   11418:	movw	r0, #16569	; 0x40b9
   1141c:	movt	r0, #2
   11420:	movt	r1, #1
   11424:	bl	10bd8 <__isoc99_sscanf@plt>
   11428:	cmp	r0, #4
   1142c:	bne	11444 <getc@plt+0x818>
   11430:	vld1.64	{d16-d17}, [r6 :128]
   11434:	vld1.32	{d18-d19}, [r4]
   11438:	mov	r5, #1
   1143c:	vadd.i32	q8, q9, q8
   11440:	vst1.32	{d16-d17}, [r4]
   11444:	mov	r0, r5
   11448:	sub	sp, fp, #16
   1144c:	pop	{r4, r5, r6, sl, fp, pc}
   11450:	push	{r4, r5, fp, lr}
   11454:	add	fp, sp, #8
   11458:	mov	r4, r2
   1145c:	mov	r2, r0
   11460:	movw	r0, #16569	; 0x40b9
   11464:	mov	r5, r1
   11468:	mov	r1, #99	; 0x63
   1146c:	movt	r0, #2
   11470:	bl	10af4 <fgets@plt>
   11474:	cmp	r0, #0
   11478:	moveq	r0, #0
   1147c:	popeq	{r4, r5, fp, pc}
   11480:	movw	r0, #16569	; 0x40b9
   11484:	movw	r1, #12665	; 0x3179
   11488:	mov	r2, r5
   1148c:	mov	r3, r4
   11490:	movt	r0, #2
   11494:	movt	r1, #1
   11498:	bl	10bd8 <__isoc99_sscanf@plt>
   1149c:	sub	r0, r0, #2
   114a0:	clz	r0, r0
   114a4:	lsr	r0, r0, #5
   114a8:	pop	{r4, r5, fp, pc}
   114ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   114b0:	add	fp, sp, #24
   114b4:	sub	sp, sp, #16
   114b8:	mov	r2, r1
   114bc:	movw	r1, #13269	; 0x33d5
   114c0:	mov	r8, r0
   114c4:	movt	r1, #1
   114c8:	mov	r0, r2
   114cc:	bl	1217c <getc@plt+0x1550>
   114d0:	movw	r1, #12400	; 0x3070
   114d4:	movw	r2, #12329	; 0x3029
   114d8:	movw	r3, #15684	; 0x3d44
   114dc:	mov	r9, r0
   114e0:	movt	r1, #1
   114e4:	movt	r2, #1
   114e8:	movt	r3, #1
   114ec:	bl	10bc0 <fprintf@plt>
   114f0:	ldr	r2, [r8]
   114f4:	movw	r6, #12703	; 0x319f
   114f8:	movw	r3, #12999	; 0x32c7
   114fc:	mov	r0, r9
   11500:	movt	r6, #1
   11504:	movt	r3, #1
   11508:	mov	r1, r6
   1150c:	bl	10bc0 <fprintf@plt>
   11510:	ldr	r2, [r8, #4]
   11514:	movw	r3, #12405	; 0x3075
   11518:	mov	r0, r9
   1151c:	mov	r1, r6
   11520:	movt	r3, #1
   11524:	bl	10bc0 <fprintf@plt>
   11528:	ldr	r2, [r8]
   1152c:	ldr	r0, [r8, #4]
   11530:	sub	r1, r2, r0
   11534:	mov	r0, r9
   11538:	bl	117f0 <getc@plt+0xbc4>
   1153c:	movw	r1, #12412	; 0x307c
   11540:	mov	r0, r9
   11544:	movt	r1, #1
   11548:	bl	10bc0 <fprintf@plt>
   1154c:	ldr	r2, [r8, #8]
   11550:	movw	r3, #12427	; 0x308b
   11554:	mov	r0, r9
   11558:	mov	r1, r6
   1155c:	movt	r3, #1
   11560:	bl	10bc0 <fprintf@plt>
   11564:	ldr	r2, [r8, #12]
   11568:	movw	r3, #12445	; 0x309d
   1156c:	mov	r0, r9
   11570:	mov	r1, r6
   11574:	movt	r3, #1
   11578:	bl	10bc0 <fprintf@plt>
   1157c:	ldr	r2, [r8, #16]
   11580:	movw	r3, #12461	; 0x30ad
   11584:	mov	r0, r9
   11588:	mov	r1, r6
   1158c:	movt	r3, #1
   11590:	bl	10bc0 <fprintf@plt>
   11594:	ldr	r0, [r8, #8]
   11598:	ldr	r1, [r8, #12]
   1159c:	ldr	r2, [r8]
   115a0:	add	r1, r1, r0
   115a4:	mov	r0, r9
   115a8:	bl	117f0 <getc@plt+0xbc4>
   115ac:	movw	r1, #12473	; 0x30b9
   115b0:	mov	r0, r9
   115b4:	movt	r1, #1
   115b8:	bl	10bc0 <fprintf@plt>
   115bc:	ldr	r2, [r8]
   115c0:	ldr	r0, [r8, #48]	; 0x30
   115c4:	sub	r1, r2, r0
   115c8:	mov	r0, r9
   115cc:	bl	117f0 <getc@plt+0xbc4>
   115d0:	movw	r1, #12496	; 0x30d0
   115d4:	mov	r0, r9
   115d8:	movt	r1, #1
   115dc:	bl	10bc0 <fprintf@plt>
   115e0:	movw	r0, #12527	; 0x30ef
   115e4:	mov	r1, #37	; 0x25
   115e8:	mov	r2, #1
   115ec:	mov	r3, r9
   115f0:	movt	r0, #1
   115f4:	bl	10b48 <fwrite@plt>
   115f8:	ldr	r0, [r8, #28]
   115fc:	ldr	r1, [r8, #32]
   11600:	ldr	r2, [r8, #20]
   11604:	ldr	r3, [r8, #24]
   11608:	movw	r7, #12565	; 0x3115
   1160c:	movw	r6, #12688	; 0x3190
   11610:	movt	r7, #1
   11614:	movt	r6, #1
   11618:	stm	sp, {r0, r1, r7}
   1161c:	mov	r0, r9
   11620:	mov	r1, r6
   11624:	bl	10bc0 <fprintf@plt>
   11628:	ldr	r0, [r8, #44]	; 0x2c
   1162c:	ldr	r1, [r8, #48]	; 0x30
   11630:	ldr	r2, [r8, #36]	; 0x24
   11634:	ldr	r3, [r8, #40]	; 0x28
   11638:	movw	r7, #12572	; 0x311c
   1163c:	movt	r7, #1
   11640:	stm	sp, {r0, r1, r7}
   11644:	mov	r0, r9
   11648:	mov	r1, r6
   1164c:	bl	10bc0 <fprintf@plt>
   11650:	ldr	r0, [r8, #60]	; 0x3c
   11654:	ldr	r1, [r8, #64]	; 0x40
   11658:	ldr	r2, [r8, #52]	; 0x34
   1165c:	ldr	r3, [r8, #56]	; 0x38
   11660:	movw	r7, #12581	; 0x3125
   11664:	movt	r7, #1
   11668:	stm	sp, {r0, r1, r7}
   1166c:	mov	r0, r9
   11670:	mov	r1, r6
   11674:	bl	10bc0 <fprintf@plt>
   11678:	movw	r1, #12587	; 0x312b
   1167c:	mov	r0, r9
   11680:	movt	r1, #1
   11684:	bl	10bc0 <fprintf@plt>
   11688:	add	r6, r8, #68	; 0x44
   1168c:	mvn	r5, #255	; 0xff
   11690:	ldr	r0, [r6]
   11694:	cmp	r0, #1
   11698:	blt	116b8 <getc@plt+0xa8c>
   1169c:	add	r0, r5, #256	; 0x100
   116a0:	bl	11f50 <getc@plt+0x1324>
   116a4:	mov	r2, r0
   116a8:	mov	r0, r9
   116ac:	mov	r1, r6
   116b0:	mov	r3, #0
   116b4:	bl	11850 <getc@plt+0xc24>
   116b8:	add	r6, r6, #8
   116bc:	adds	r5, r5, #1
   116c0:	bne	11690 <getc@plt+0xa64>
   116c4:	movw	r2, #12581	; 0x3125
   116c8:	movw	r0, #2116	; 0x844
   116cc:	mov	r3, #0
   116d0:	add	r1, r8, r0
   116d4:	movt	r2, #1
   116d8:	mov	r0, r9
   116dc:	bl	11850 <getc@plt+0xc24>
   116e0:	ldr	r0, [r8, #4]
   116e4:	cmp	r0, #1
   116e8:	blt	11778 <getc@plt+0xb4c>
   116ec:	movw	r0, #2124	; 0x84c
   116f0:	add	r0, r8, r0
   116f4:	bl	11e48 <getc@plt+0x121c>
   116f8:	mov	r0, #10176	; 0x27c0
   116fc:	mov	r7, r8
   11700:	movw	r2, #6360	; 0x18d8
   11704:	ldr	r0, [r7, r0]!
   11708:	movt	r2, #1
   1170c:	mov	r5, r7
   11710:	ldr	r1, [r5, #-4]!
   11714:	bl	1190c <getc@plt+0xce0>
   11718:	movw	r0, #12617	; 0x3149
   1171c:	mov	r1, #39	; 0x27
   11720:	mov	r2, #1
   11724:	mov	r3, r9
   11728:	movt	r0, #1
   1172c:	bl	10b48 <fwrite@plt>
   11730:	ldr	r0, [r7]
   11734:	cmp	r0, #1
   11738:	blt	11778 <getc@plt+0xb4c>
   1173c:	movw	r6, #12734	; 0x31be
   11740:	mov	r4, #0
   11744:	movt	r6, #1
   11748:	ldr	r0, [r5]
   1174c:	ldr	r0, [r0, r4, lsl #2]
   11750:	add	r3, r0, #8
   11754:	mov	r0, r9
   11758:	ldm	r3, {r1, r2, r3}
   1175c:	str	r1, [sp]
   11760:	mov	r1, r6
   11764:	bl	10bc0 <fprintf@plt>
   11768:	ldr	r0, [r7]
   1176c:	add	r4, r4, #1
   11770:	cmp	r4, r0
   11774:	blt	11748 <getc@plt+0xb1c>
   11778:	ldr	r0, [r8]
   1177c:	cmp	r0, #1
   11780:	blt	117dc <getc@plt+0xbb0>
   11784:	movw	r1, #12587	; 0x312b
   11788:	mov	r0, r9
   1178c:	movt	r1, #1
   11790:	bl	10bc0 <fprintf@plt>
   11794:	movw	r4, #65535	; 0xffff
   11798:	movw	r0, #10180	; 0x27c4
   1179c:	mov	r7, #0
   117a0:	mov	r5, #0
   117a4:	add	r6, r8, r0
   117a8:	movt	r4, #16
   117ac:	ldr	r0, [r6, r5, lsl #3]
   117b0:	cmp	r0, #1
   117b4:	blt	117cc <getc@plt+0xba0>
   117b8:	add	r1, r6, r7
   117bc:	mov	r0, r9
   117c0:	mov	r2, #0
   117c4:	mov	r3, r5
   117c8:	bl	11850 <getc@plt+0xc24>
   117cc:	add	r5, r5, #1
   117d0:	add	r7, r7, #8
   117d4:	cmp	r5, r4
   117d8:	bne	117ac <getc@plt+0xb80>
   117dc:	mov	r0, r9
   117e0:	sub	sp, fp, #24
   117e4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   117e8:	b	121f4 <getc@plt+0x15c8>
   117ec:	nop	{0}
   117f0:	mov	ip, r0
   117f4:	cmp	r2, #0
   117f8:	beq	1182c <getc@plt+0xc00>
   117fc:	vldr	d16, [pc, #68]	; 11848 <getc@plt+0xc1c>
   11800:	vmov	s0, r1
   11804:	movw	r1, #12682	; 0x318a
   11808:	mov	r0, ip
   1180c:	vcvt.f64.s32	d17, s0
   11810:	vmov	s0, r2
   11814:	movt	r1, #1
   11818:	vcvt.f64.s32	d18, s0
   1181c:	vmul.f64	d16, d17, d16
   11820:	vdiv.f64	d16, d16, d18
   11824:	vmov	r2, r3, d16
   11828:	b	10bc0 <fprintf@plt>
   1182c:	movw	r0, #12673	; 0x3181
   11830:	mov	r1, #8
   11834:	mov	r2, #1
   11838:	mov	r3, ip
   1183c:	movt	r0, #1
   11840:	b	10b48 <fwrite@plt>
   11844:	nop	{0}
   11848:	andeq	r0, r0, r0
   1184c:	subsmi	r0, r9, r0
   11850:	push	{r4, r5, r6, r7, fp, lr}
   11854:	add	fp, sp, #16
   11858:	sub	sp, sp, #16
   1185c:	mov	r5, r3
   11860:	mov	r6, r2
   11864:	ldm	r1, {r2, r3}
   11868:	mov	r7, r1
   1186c:	movw	r1, #12714	; 0x31aa
   11870:	mov	r4, r0
   11874:	movt	r1, #1
   11878:	bl	10bc0 <fprintf@plt>
   1187c:	ldr	r2, [r7]
   11880:	ldr	r0, [r7, #4]
   11884:	sub	r1, r2, r0
   11888:	mov	r0, r4
   1188c:	bl	117f0 <getc@plt+0xbc4>
   11890:	cmp	r6, #0
   11894:	beq	118a4 <getc@plt+0xc78>
   11898:	movw	r1, #12707	; 0x31a3
   1189c:	movt	r1, #1
   118a0:	b	118c4 <getc@plt+0xc98>
   118a4:	add	r6, sp, #7
   118a8:	mov	r0, #0
   118ac:	mov	r1, r5
   118b0:	mov	r3, #1
   118b4:	mov	r2, r6
   118b8:	bl	12ac8 <error@@Base+0x55c>
   118bc:	movw	r1, #12725	; 0x31b5
   118c0:	movt	r1, #1
   118c4:	mov	r0, r4
   118c8:	mov	r2, r6
   118cc:	bl	10bc0 <fprintf@plt>
   118d0:	sub	sp, fp, #16
   118d4:	pop	{r4, r5, r6, r7, fp, pc}
   118d8:	ldr	r2, [r1, #12]
   118dc:	ldr	r3, [r0, #12]
   118e0:	cmp	r2, r3
   118e4:	bne	11904 <getc@plt+0xcd8>
   118e8:	ldr	r2, [r1, #16]
   118ec:	ldr	r3, [r0, #16]
   118f0:	cmp	r2, r3
   118f4:	bne	11904 <getc@plt+0xcd8>
   118f8:	ldr	r1, [r1, #8]
   118fc:	ldr	r0, [r0, #8]
   11900:	b	12100 <getc@plt+0x14d4>
   11904:	sub	r0, r2, r3
   11908:	bx	lr
   1190c:	cmp	r0, #2
   11910:	bxlt	lr
   11914:	movw	r3, #16676	; 0x4124
   11918:	movt	r3, #2
   1191c:	str	r2, [r3]
   11920:	movw	r2, #16672	; 0x4120
   11924:	movt	r2, #2
   11928:	str	r1, [r2]
   1192c:	sub	r1, r0, #1
   11930:	mov	r0, #0
   11934:	b	11938 <getc@plt+0xd0c>
   11938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1193c:	add	fp, sp, #28
   11940:	sub	sp, sp, #4
   11944:	movw	r7, #16672	; 0x4120
   11948:	movw	sl, #16676	; 0x4124
   1194c:	mov	r8, r1
   11950:	mov	r9, r0
   11954:	movt	r7, #2
   11958:	movt	sl, #2
   1195c:	ldr	r0, [r7]
   11960:	cmp	r9, r8
   11964:	mov	r4, r8
   11968:	mov	r5, r9
   1196c:	ldr	r6, [r0, r9, lsl #2]
   11970:	bge	11a04 <getc@plt+0xdd8>
   11974:	mov	r5, r9
   11978:	mov	r4, r8
   1197c:	cmp	r5, r4
   11980:	bge	119a8 <getc@plt+0xd7c>
   11984:	ldr	r0, [r7]
   11988:	ldr	r2, [sl]
   1198c:	ldr	r1, [r0, r4, lsl #2]
   11990:	mov	r0, r6
   11994:	blx	r2
   11998:	cmn	r0, #1
   1199c:	bgt	119a8 <getc@plt+0xd7c>
   119a0:	sub	r4, r4, #1
   119a4:	b	1197c <getc@plt+0xd50>
   119a8:	cmp	r5, r4
   119ac:	beq	119c0 <getc@plt+0xd94>
   119b0:	ldr	r0, [r7]
   119b4:	ldr	r1, [r0, r4, lsl #2]
   119b8:	str	r1, [r0, r5, lsl #2]
   119bc:	add	r5, r5, #1
   119c0:	cmp	r5, r4
   119c4:	bge	119e4 <getc@plt+0xdb8>
   119c8:	ldr	r0, [r7]
   119cc:	ldr	r2, [sl]
   119d0:	ldr	r1, [r0, r5, lsl #2]
   119d4:	mov	r0, r6
   119d8:	blx	r2
   119dc:	cmp	r0, #1
   119e0:	bge	119bc <getc@plt+0xd90>
   119e4:	cmp	r5, r4
   119e8:	ldrne	r0, [r7]
   119ec:	ldrne	r1, [r0, r5, lsl #2]
   119f0:	strne	r1, [r0, r4, lsl #2]
   119f4:	subne	r4, r4, #1
   119f8:	cmp	r5, r4
   119fc:	blt	1197c <getc@plt+0xd50>
   11a00:	ldr	r0, [r7]
   11a04:	sub	r1, r4, #1
   11a08:	str	r6, [r0, r4, lsl #2]
   11a0c:	cmp	r1, r9
   11a10:	movgt	r0, r9
   11a14:	blgt	11938 <getc@plt+0xd0c>
   11a18:	add	r9, r5, #1
   11a1c:	cmp	r9, r8
   11a20:	subge	sp, fp, #28
   11a24:	popge	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a28:	b	1195c <getc@plt+0xd30>
   11a2c:	andeq	r0, r0, r0
   11a30:	push	{r4, r5, r6, sl, fp, lr}
   11a34:	add	fp, sp, #16
   11a38:	mov	r6, r1
   11a3c:	mov	r4, r0
   11a40:	mov	r0, #1
   11a44:	mov	r1, #32
   11a48:	mov	r5, r2
   11a4c:	bl	120e0 <getc@plt+0x14b4>
   11a50:	mov	r1, r0
   11a54:	str	r6, [r1, #8]
   11a58:	str	r5, [r1, #12]
   11a5c:	ldr	r0, [r4, #24]
   11a60:	ldr	r3, [r4, #28]
   11a64:	add	r2, r0, r6
   11a68:	add	r3, r3, r5
   11a6c:	mov	r0, r4
   11a70:	strd	r2, [r4, #24]
   11a74:	pop	{r4, r5, r6, sl, fp, lr}
   11a78:	b	12d98 <error@@Base+0x82c>
   11a7c:	nop	{0}
   11a80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a84:	add	fp, sp, #24
   11a88:	vpush	{d8}
   11a8c:	mov	r5, r0
   11a90:	ldr	r0, [r0]
   11a94:	cmp	r0, #0
   11a98:	beq	11c44 <getc@plt+0x1018>
   11a9c:	mov	r8, r2
   11aa0:	mov	r9, r1
   11aa4:	mov	r1, #0
   11aa8:	mov	r2, r0
   11aac:	ldr	r3, [r2, #4]
   11ab0:	ldr	r2, [r2, #8]
   11ab4:	cmp	r2, #0
   11ab8:	mov	r2, r3
   11abc:	addgt	r1, r1, #1
   11ac0:	cmp	r3, #0
   11ac4:	bne	11aac <getc@plt+0xe80>
   11ac8:	cmp	r1, #1
   11acc:	bls	11c44 <getc@plt+0x1018>
   11ad0:	ldrd	r2, [r5, #24]
   11ad4:	ldr	r1, [r5, #12]
   11ad8:	vldr	d8, [pc, #368]	; 11c50 <getc@plt+0x1024>
   11adc:	vmov.i32	d19, #0	; 0x00000000
   11ae0:	sub	r4, r2, r3
   11ae4:	vmov	s2, r2
   11ae8:	vmov	s0, r4
   11aec:	sub	r4, r1, #1
   11af0:	vcvt.f64.s32	d16, s0
   11af4:	vmov	s0, r1
   11af8:	vcvt.f64.s32	d17, s2
   11afc:	mov	r1, r0
   11b00:	vmul.f64	d18, d16, d8
   11b04:	vcvt.f64.s32	d16, s0
   11b08:	vmov	s0, r4
   11b0c:	vdiv.f64	d20, d18, d17
   11b10:	vcvt.f64.s32	d17, s0
   11b14:	vmul.f64	d18, d20, d16
   11b18:	vstr	d20, [r5, #32]
   11b1c:	ldmib	r1, {r4, r7}
   11b20:	ldr	r6, [r1, #12]
   11b24:	sub	r7, r2, r7
   11b28:	sub	r6, r6, r3
   11b2c:	cmp	r4, #0
   11b30:	add	r6, r6, r7
   11b34:	vmov	s2, r7
   11b38:	vmov	s0, r6
   11b3c:	vcvt.f64.s32	d20, s0
   11b40:	vcvt.f64.s32	d21, s2
   11b44:	vmul.f64	d20, d20, d8
   11b48:	vdiv.f64	d20, d20, d21
   11b4c:	vmov.f64	d21, d18
   11b50:	vmls.f64	d21, d20, d17
   11b54:	vstr	d20, [r1, #16]
   11b58:	vadd.f64	d19, d19, d20
   11b5c:	vstr	d21, [r1, #24]
   11b60:	mov	r1, r4
   11b64:	bne	11b1c <getc@plt+0xef0>
   11b68:	vmul.f64	d19, d19, d17
   11b6c:	vdiv.f64	d19, d19, d16
   11b70:	vsub.f64	d19, d18, d19
   11b74:	vmov.i32	d18, #0	; 0x00000000
   11b78:	vstr	d19, [r5, #40]	; 0x28
   11b7c:	vldr	d20, [r0, #24]
   11b80:	ldr	r0, [r0, #4]
   11b84:	vsub.f64	d20, d20, d19
   11b88:	cmp	r0, #0
   11b8c:	vmla.f64	d18, d20, d20
   11b90:	bne	11b7c <getc@plt+0xf50>
   11b94:	vdiv.f64	d17, d18, d17
   11b98:	vdiv.f64	d16, d17, d16
   11b9c:	vsqrt.f64	d0, d16
   11ba0:	vcmpe.f64	d0, d0
   11ba4:	vmrs	APSR_nzcv, fpscr
   11ba8:	bvc	11bb4 <getc@plt+0xf88>
   11bac:	vmov.f64	d0, d16
   11bb0:	bl	10bcc <sqrt@plt>
   11bb4:	vldr	d16, [pc, #156]	; 11c58 <getc@plt+0x102c>
   11bb8:	vldr	d17, [r5, #40]	; 0x28
   11bbc:	vmov.i32	d18, #0	; 0x00000000
   11bc0:	vmov.f64	d20, d8
   11bc4:	vmul.f64	d16, d0, d16
   11bc8:	vsub.f64	d17, d17, d16
   11bcc:	vcmpe.f64	d17, d8
   11bd0:	vmrs	APSR_nzcv, fpscr
   11bd4:	vcmpe.f64	d17, #0.0
   11bd8:	vselgt.f64	d19, d8, d18
   11bdc:	vmrs	APSR_nzcv, fpscr
   11be0:	vcmpe.f64	d17, d8
   11be4:	vmovmi.f64	d20, d19
   11be8:	vmrs	APSR_nzcv, fpscr
   11bec:	vcmpe.f64	d17, #0.0
   11bf0:	vselgt.f64	d19, d20, d17
   11bf4:	vmrs	APSR_nzcv, fpscr
   11bf8:	vmovmi.f64	d19, d20
   11bfc:	vstr	d19, [r9]
   11c00:	vldr	d17, [r5, #40]	; 0x28
   11c04:	vadd.f64	d16, d16, d17
   11c08:	vcmpe.f64	d16, d8
   11c0c:	vmrs	APSR_nzcv, fpscr
   11c10:	vcmpe.f64	d16, #0.0
   11c14:	vselgt.f64	d17, d8, d18
   11c18:	vmrs	APSR_nzcv, fpscr
   11c1c:	vcmpe.f64	d16, d8
   11c20:	vmovmi.f64	d8, d17
   11c24:	vmrs	APSR_nzcv, fpscr
   11c28:	vcmpe.f64	d16, #0.0
   11c2c:	vselgt.f64	d17, d8, d16
   11c30:	vmrs	APSR_nzcv, fpscr
   11c34:	vmovmi.f64	d17, d8
   11c38:	vstr	d17, [r8]
   11c3c:	vpop	{d8}
   11c40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11c44:	movw	r0, #12749	; 0x31cd
   11c48:	movt	r0, #1
   11c4c:	bl	1256c <error@@Base>
   11c50:	andeq	r0, r0, r0
   11c54:	subsmi	r0, r9, r0
   11c58:			; <UNDEFINED> instruction: 0xf5c28f5c
   11c5c:	svccc	0x00ff5c28
   11c60:	push	{r4, r5, r6, sl, fp, lr}
   11c64:	add	fp, sp, #16
   11c68:	mov	r4, r0
   11c6c:	movw	r6, #503	; 0x1f7
   11c70:	mov	r5, r0
   11c74:	mov	r0, r5
   11c78:	bl	12d2c <error@@Base+0x7c0>
   11c7c:	subs	r6, r6, #1
   11c80:	add	r5, r5, #16
   11c84:	bne	11c74 <getc@plt+0x1048>
   11c88:	movw	r0, #8052	; 0x1f74
   11c8c:	mov	r1, #0
   11c90:	str	r1, [r4, r0]
   11c94:	movw	r0, #8048	; 0x1f70
   11c98:	str	r1, [r4, r0]
   11c9c:	pop	{r4, r5, r6, sl, fp, pc}
   11ca0:	push	{r4, r5, r6, sl, fp, lr}
   11ca4:	add	fp, sp, #16
   11ca8:	mov	r5, r1
   11cac:	ldrb	r1, [r1]
   11cb0:	mov	r4, #0
   11cb4:	mov	r2, #0
   11cb8:	cmp	r1, #0
   11cbc:	beq	11cf0 <getc@plt+0x10c4>
   11cc0:	add	r3, r5, #1
   11cc4:	mov	r2, #0
   11cc8:	uxtab	r2, r2, r1
   11ccc:	ldrb	r1, [r3], #1
   11cd0:	cmp	r1, #0
   11cd4:	bne	11cc8 <getc@plt+0x109c>
   11cd8:	movw	r1, #20065	; 0x4e61
   11cdc:	movt	r1, #33354	; 0x824a
   11ce0:	umull	r1, r3, r2, r1
   11ce4:	lsr	r1, r3, #8
   11ce8:	movw	r3, #503	; 0x1f7
   11cec:	mls	r2, r1, r3, r2
   11cf0:	ldr	r6, [r0, r2, lsl #4]
   11cf4:	b	11d10 <getc@plt+0x10e4>
   11cf8:	ldr	r1, [r6, #8]
   11cfc:	mov	r0, r5
   11d00:	bl	10ab8 <strcmp@plt>
   11d04:	cmp	r0, #0
   11d08:	beq	11d1c <getc@plt+0x10f0>
   11d0c:	ldr	r6, [r6, #4]
   11d10:	cmp	r6, #0
   11d14:	bne	11cf8 <getc@plt+0x10cc>
   11d18:	b	11d20 <getc@plt+0x10f4>
   11d1c:	mov	r4, r6
   11d20:	mov	r0, r4
   11d24:	pop	{r4, r5, r6, sl, fp, pc}
   11d28:	push	{r4, r5, fp, lr}
   11d2c:	add	fp, sp, #8
   11d30:	mov	r4, r0
   11d34:	ldr	r0, [r1, #8]
   11d38:	ldrb	r2, [r0]
   11d3c:	cmp	r2, #0
   11d40:	beq	11d78 <getc@plt+0x114c>
   11d44:	add	r3, r0, #1
   11d48:	mov	r0, #0
   11d4c:	uxtab	r0, r0, r2
   11d50:	ldrb	r2, [r3], #1
   11d54:	cmp	r2, #0
   11d58:	bne	11d4c <getc@plt+0x1120>
   11d5c:	movw	r2, #20065	; 0x4e61
   11d60:	movt	r2, #33354	; 0x824a
   11d64:	umull	r2, r3, r0, r2
   11d68:	lsr	r2, r3, #8
   11d6c:	movw	r3, #503	; 0x1f7
   11d70:	mls	r0, r2, r3, r0
   11d74:	b	11d7c <getc@plt+0x1150>
   11d78:	mov	r0, #0
   11d7c:	add	r0, r4, r0, lsl #4
   11d80:	bl	12d38 <error@@Base+0x7cc>
   11d84:	movw	r0, #8048	; 0x1f70
   11d88:	mov	r5, r4
   11d8c:	ldr	r0, [r5, r0]!
   11d90:	cmp	r0, #0
   11d94:	beq	11da4 <getc@plt+0x1178>
   11d98:	bl	10adc <free@plt>
   11d9c:	mov	r0, #0
   11da0:	str	r0, [r5]
   11da4:	movw	r0, #8052	; 0x1f74
   11da8:	ldr	r0, [r4, r0]!
   11dac:	add	r0, r0, #1
   11db0:	str	r0, [r4]
   11db4:	pop	{r4, r5, fp, pc}
   11db8:	push	{r4, r5, fp, lr}
   11dbc:	add	fp, sp, #8
   11dc0:	mov	r4, r0
   11dc4:	ldr	r0, [r1, #8]
   11dc8:	ldrb	r2, [r0]
   11dcc:	cmp	r2, #0
   11dd0:	beq	11e08 <getc@plt+0x11dc>
   11dd4:	add	r3, r0, #1
   11dd8:	mov	r0, #0
   11ddc:	uxtab	r0, r0, r2
   11de0:	ldrb	r2, [r3], #1
   11de4:	cmp	r2, #0
   11de8:	bne	11ddc <getc@plt+0x11b0>
   11dec:	movw	r2, #20065	; 0x4e61
   11df0:	movt	r2, #33354	; 0x824a
   11df4:	umull	r2, r3, r0, r2
   11df8:	lsr	r2, r3, #8
   11dfc:	movw	r3, #503	; 0x1f7
   11e00:	mls	r0, r2, r3, r0
   11e04:	b	11e0c <getc@plt+0x11e0>
   11e08:	mov	r0, #0
   11e0c:	add	r0, r4, r0, lsl #4
   11e10:	bl	12dc0 <error@@Base+0x854>
   11e14:	movw	r0, #8048	; 0x1f70
   11e18:	mov	r5, r4
   11e1c:	ldr	r0, [r5, r0]!
   11e20:	cmp	r0, #0
   11e24:	beq	11e34 <getc@plt+0x1208>
   11e28:	bl	10adc <free@plt>
   11e2c:	mov	r0, #0
   11e30:	str	r0, [r5]
   11e34:	movw	r0, #8052	; 0x1f74
   11e38:	ldr	r0, [r4, r0]!
   11e3c:	sub	r0, r0, #1
   11e40:	str	r0, [r4]
   11e44:	pop	{r4, r5, fp, pc}
   11e48:	push	{r4, r5, fp, lr}
   11e4c:	add	fp, sp, #8
   11e50:	mov	r4, r0
   11e54:	movw	r0, #8048	; 0x1f70
   11e58:	mov	r5, r4
   11e5c:	ldr	r0, [r5, r0]!
   11e60:	cmp	r0, #0
   11e64:	bne	11ebc <getc@plt+0x1290>
   11e68:	movw	r0, #8052	; 0x1f74
   11e6c:	ldr	r0, [r4, r0]
   11e70:	cmp	r0, #0
   11e74:	popeq	{r4, r5, fp, pc}
   11e78:	mov	r1, #4
   11e7c:	bl	120e0 <getc@plt+0x14b4>
   11e80:	str	r0, [r5]
   11e84:	mov	r0, #0
   11e88:	movw	ip, #503	; 0x1f7
   11e8c:	mov	r2, #0
   11e90:	ldr	r3, [r4, r2, lsl #4]
   11e94:	b	11ea8 <getc@plt+0x127c>
   11e98:	ldr	r1, [r5]
   11e9c:	str	r3, [r1, r0, lsl #2]
   11ea0:	add	r0, r0, #1
   11ea4:	ldr	r3, [r3, #4]
   11ea8:	cmp	r3, #0
   11eac:	bne	11e98 <getc@plt+0x126c>
   11eb0:	add	r2, r2, #1
   11eb4:	cmp	r2, ip
   11eb8:	bne	11e90 <getc@plt+0x1264>
   11ebc:	pop	{r4, r5, fp, pc}
   11ec0:	push	{r4, r5, r6, r7, fp, lr}
   11ec4:	add	fp, sp, #16
   11ec8:	mov	r5, r1
   11ecc:	mov	r4, r0
   11ed0:	movw	r7, #503	; 0x1f7
   11ed4:	mov	r6, r0
   11ed8:	mov	r0, r6
   11edc:	mov	r1, r5
   11ee0:	bl	12e8c <error@@Base+0x920>
   11ee4:	subs	r7, r7, #1
   11ee8:	add	r6, r6, #16
   11eec:	bne	11ed8 <getc@plt+0x12ac>
   11ef0:	movw	r0, #8048	; 0x1f70
   11ef4:	mov	r5, r4
   11ef8:	ldr	r0, [r5, r0]!
   11efc:	cmp	r0, #0
   11f00:	beq	11f10 <getc@plt+0x12e4>
   11f04:	bl	10adc <free@plt>
   11f08:	mov	r0, #0
   11f0c:	str	r0, [r5]
   11f10:	movw	r0, #8052	; 0x1f74
   11f14:	mov	r1, #0
   11f18:	str	r1, [r4, r0]
   11f1c:	pop	{r4, r5, r6, r7, fp, pc}
   11f20:	push	{r4, sl, fp, lr}
   11f24:	add	fp, sp, #8
   11f28:	mov	r4, r0
   11f2c:	movw	r0, #16680	; 0x4128
   11f30:	movt	r0, #2
   11f34:	ldrh	r0, [r0]
   11f38:	cmp	r0, #0
   11f3c:	bleq	11fa0 <getc@plt+0x1374>
   11f40:	movw	r0, #16682	; 0x412a
   11f44:	movt	r0, #2
   11f48:	ldrb	r0, [r0, r4]
   11f4c:	pop	{r4, sl, fp, pc}
   11f50:	push	{r4, r5, fp, lr}
   11f54:	add	fp, sp, #8
   11f58:	movw	r5, #16680	; 0x4128
   11f5c:	mov	r4, r0
   11f60:	movt	r5, #2
   11f64:	ldrh	r0, [r5]
   11f68:	cmp	r0, #0
   11f6c:	bne	11f78 <getc@plt+0x134c>
   11f70:	bl	11fa0 <getc@plt+0x1374>
   11f74:	ldrh	r0, [r5]
   11f78:	uxtb	r1, r4
   11f7c:	sxth	r0, r0
   11f80:	cmp	r1, r0
   11f84:	movwlt	r0, #16684	; 0x412c
   11f88:	movtlt	r0, #19
   11f8c:	ldrlt	r0, [r0, r1, lsl #2]
   11f90:	poplt	{r4, r5, fp, pc}
   11f94:	movw	r0, #12773	; 0x31e5
   11f98:	movt	r0, #1
   11f9c:	bl	1256c <error@@Base>
   11fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fa4:	add	fp, sp, #28
   11fa8:	sub	sp, sp, #4
   11fac:	movw	r0, #16680	; 0x4128
   11fb0:	movw	r3, #14284	; 0x37cc
   11fb4:	movw	r5, #16684	; 0x412c
   11fb8:	movw	r7, #16682	; 0x412a
   11fbc:	mov	r6, #0
   11fc0:	movt	r0, #2
   11fc4:	movt	r3, #1
   11fc8:	movt	r5, #19
   11fcc:	movt	r7, #2
   11fd0:	ldrh	sl, [r0]
   11fd4:	mov	r0, sl
   11fd8:	str	sl, [sp]
   11fdc:	b	12040 <getc@plt+0x1414>
   11fe0:	movw	r0, #16680	; 0x4128
   11fe4:	add	r1, sl, #1
   11fe8:	movt	r0, #2
   11fec:	str	r1, [sp]
   11ff0:	strh	r1, [r0]
   11ff4:	add	r0, r6, r6, lsl #1
   11ff8:	add	r0, r3, r0, lsl #2
   11ffc:	ldr	r0, [r0, #8]
   12000:	str	r0, [r5, r8, lsl #2]
   12004:	mov	r0, r1
   12008:	add	r1, r6, r6, lsl #1
   1200c:	mov	r2, r3
   12010:	ldr	r1, [r2, r1, lsl #2]!
   12014:	ldr	r2, [r2, #4]
   12018:	b	12024 <getc@plt+0x13f8>
   1201c:	strb	r8, [r7, r1]
   12020:	add	r1, r1, #1
   12024:	cmp	r1, r2
   12028:	bls	1201c <getc@plt+0x13f0>
   1202c:	add	r6, r6, #1
   12030:	mov	sl, r0
   12034:	cmp	r6, #91	; 0x5b
   12038:	subcs	sp, fp, #28
   1203c:	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12040:	sxth	r9, sl
   12044:	cmp	r9, #1
   12048:	blt	120b0 <getc@plt+0x1484>
   1204c:	add	r0, r6, r6, lsl #1
   12050:	ldr	r1, [r5]
   12054:	add	r0, r3, r0, lsl #2
   12058:	ldr	r4, [r0, #8]
   1205c:	mov	r0, r4
   12060:	bl	10ab8 <strcmp@plt>
   12064:	cmp	r0, #0
   12068:	ldr	r0, [sp]
   1206c:	mov	r8, #0
   12070:	beq	120b8 <getc@plt+0x148c>
   12074:	ldr	r0, [sp]
   12078:	mov	r1, #1
   1207c:	sxth	r9, r0
   12080:	mov	r8, r1
   12084:	cmp	r1, r9
   12088:	bge	120a4 <getc@plt+0x1478>
   1208c:	ldr	r1, [r5, r8, lsl #2]
   12090:	mov	r0, r4
   12094:	bl	10ab8 <strcmp@plt>
   12098:	add	r1, r8, #1
   1209c:	cmp	r0, #0
   120a0:	bne	12080 <getc@plt+0x1454>
   120a4:	ldr	sl, [sp]
   120a8:	mov	r0, sl
   120ac:	b	120b8 <getc@plt+0x148c>
   120b0:	mov	r0, sl
   120b4:	mov	r8, #0
   120b8:	movw	r3, #14284	; 0x37cc
   120bc:	cmp	r8, r9
   120c0:	movt	r3, #1
   120c4:	bne	12008 <getc@plt+0x13dc>
   120c8:	uxth	r0, sl
   120cc:	cmp	r0, #256	; 0x100
   120d0:	bne	11fe0 <getc@plt+0x13b4>
   120d4:	movw	r0, #12797	; 0x31fd
   120d8:	movt	r0, #1
   120dc:	bl	1256c <error@@Base>
   120e0:	push	{fp, lr}
   120e4:	mov	fp, sp
   120e8:	bl	10aac <calloc@plt>
   120ec:	cmp	r0, #0
   120f0:	popne	{fp, pc}
   120f4:	movw	r0, #15376	; 0x3c10
   120f8:	movt	r0, #1
   120fc:	bl	1256c <error@@Base>
   12100:	push	{r4, r5, r6, sl, fp, lr}
   12104:	add	fp, sp, #16
   12108:	ldrb	r3, [r0]
   1210c:	ldrb	ip, [r1]
   12110:	mov	r2, r0
   12114:	mov	r0, #0
   12118:	cmp	r3, #0
   1211c:	beq	12154 <getc@plt+0x1528>
   12120:	add	r6, r2, #1
   12124:	add	lr, r1, #1
   12128:	mov	r2, #0
   1212c:	uxtb	r4, ip
   12130:	uxtb	r5, r3
   12134:	cmp	r5, r4
   12138:	bne	12164 <getc@plt+0x1538>
   1213c:	ldrb	r3, [r6, r2]
   12140:	ldrb	ip, [lr, r2]
   12144:	add	r2, r2, #1
   12148:	cmp	r3, #0
   1214c:	bne	1212c <getc@plt+0x1500>
   12150:	b	12158 <getc@plt+0x152c>
   12154:	mov	r2, #0
   12158:	cmp	ip, #0
   1215c:	popeq	{r4, r5, r6, sl, fp, pc}
   12160:	mov	r3, #0
   12164:	ldrb	r1, [r1, r2]
   12168:	uxtb	r2, r3
   1216c:	mov	r0, #1
   12170:	cmp	r2, r1
   12174:	mvncc	r0, #0
   12178:	pop	{r4, r5, r6, sl, fp, pc}
   1217c:	push	{r4, r5, fp, lr}
   12180:	add	fp, sp, #8
   12184:	mov	r5, r1
   12188:	cmp	r0, #0
   1218c:	beq	121c0 <getc@plt+0x1594>
   12190:	mov	r1, r5
   12194:	mov	r4, r0
   12198:	bl	10ad0 <fopen@plt>
   1219c:	cmp	r0, #0
   121a0:	popne	{r4, r5, fp, pc}
   121a4:	ldrb	r0, [r5]
   121a8:	cmp	r0, #119	; 0x77
   121ac:	bne	121e4 <getc@plt+0x15b8>
   121b0:	movw	r0, #15402	; 0x3c2a
   121b4:	mov	r1, r4
   121b8:	movt	r0, #1
   121bc:	bl	125ac <error@@Base+0x40>
   121c0:	ldrb	r0, [r5]
   121c4:	movw	r1, #16560	; 0x40b0
   121c8:	movw	r2, #16564	; 0x40b4
   121cc:	movt	r1, #2
   121d0:	movt	r2, #2
   121d4:	cmp	r0, #114	; 0x72
   121d8:	moveq	r2, r1
   121dc:	ldr	r0, [r2]
   121e0:	pop	{r4, r5, fp, pc}
   121e4:	movw	r0, #15424	; 0x3c40
   121e8:	mov	r1, r4
   121ec:	movt	r0, #1
   121f0:	bl	125ac <error@@Base+0x40>
   121f4:	movw	r1, #16560	; 0x40b0
   121f8:	movt	r1, #2
   121fc:	ldr	r1, [r1]
   12200:	cmp	r1, r0
   12204:	movwne	r1, #16564	; 0x40b4
   12208:	movtne	r1, #2
   1220c:	ldrne	r1, [r1]
   12210:	cmpne	r1, r0
   12214:	bxeq	lr
   12218:	b	10be4 <fclose@plt>
   1221c:	push	{fp, lr}
   12220:	mov	fp, sp
   12224:	sub	sp, sp, #88	; 0x58
   12228:	mov	r1, sp
   1222c:	bl	12f30 <error@@Base+0x9c4>
   12230:	clz	r0, r0
   12234:	lsr	r0, r0, #5
   12238:	mov	sp, fp
   1223c:	pop	{fp, pc}
   12240:	push	{r4, sl, fp, lr}
   12244:	add	fp, sp, #8
   12248:	movw	r0, #17708	; 0x452c
   1224c:	movt	r0, #19
   12250:	ldrh	r1, [r0]
   12254:	add	r1, r1, #1
   12258:	strh	r1, [r0]
   1225c:	sxth	r0, r1
   12260:	bl	12274 <getc@plt+0x1648>
   12264:	mov	r4, r0
   12268:	bl	10b24 <unlink@plt>
   1226c:	mov	r0, r4
   12270:	pop	{r4, sl, fp, pc}
   12274:	push	{r4, r5, fp, lr}
   12278:	add	fp, sp, #8
   1227c:	sub	sp, sp, #104	; 0x68
   12280:	mov	r4, r0
   12284:	movw	r0, #27940	; 0x6d24
   12288:	movt	r0, #155	; 0x9b
   1228c:	ldr	r5, [r0]
   12290:	bl	10b90 <getpid@plt>
   12294:	movw	r1, #15465	; 0x3c69
   12298:	mov	r3, r0
   1229c:	sxth	r0, r4
   122a0:	add	r4, sp, #4
   122a4:	mov	r2, r5
   122a8:	str	r0, [sp]
   122ac:	movt	r1, #1
   122b0:	mov	r0, r4
   122b4:	bl	10bf0 <sprintf@plt>
   122b8:	mov	r0, r4
   122bc:	bl	10b0c <strdup@plt>
   122c0:	sub	sp, fp, #8
   122c4:	pop	{r4, r5, fp, pc}
   122c8:	push	{r4, sl, fp, lr}
   122cc:	add	fp, sp, #8
   122d0:	mov	r4, r0
   122d4:	bl	10bb4 <strlen@plt>
   122d8:	sub	r0, r0, #1
   122dc:	sxth	r0, r0
   122e0:	cmp	r0, #0
   122e4:	blt	122f4 <getc@plt+0x16c8>
   122e8:	ldrb	r1, [r4, r0]
   122ec:	cmp	r1, #47	; 0x2f
   122f0:	bne	122d8 <getc@plt+0x16ac>
   122f4:	add	r0, r4, r0
   122f8:	add	r0, r0, #1
   122fc:	pop	{r4, sl, fp, pc}
   12300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12304:	add	fp, sp, #28
   12308:	sub	sp, sp, #12
   1230c:	str	r2, [sp]
   12310:	stmib	sp, {r0, r1}
   12314:	mov	r6, r3
   12318:	ldr	r4, [r1]
   1231c:	mov	r0, r4
   12320:	bl	10bb4 <strlen@plt>
   12324:	sub	r0, r0, #1
   12328:	sxth	r0, r0
   1232c:	cmp	r0, #0
   12330:	blt	12340 <getc@plt+0x1714>
   12334:	ldrb	r1, [r4, r0]
   12338:	cmp	r1, #47	; 0x2f
   1233c:	bne	12324 <getc@plt+0x16f8>
   12340:	add	r0, r4, r0
   12344:	movw	r1, #27940	; 0x6d24
   12348:	movw	r4, #9780	; 0x2634
   1234c:	add	r0, r0, #1
   12350:	movt	r1, #155	; 0x9b
   12354:	movt	r4, #1
   12358:	str	r0, [r1]
   1235c:	mov	r0, #2
   12360:	mov	r1, r4
   12364:	bl	10b78 <__sysv_signal@plt>
   12368:	mov	r0, #15
   1236c:	mov	r1, r4
   12370:	bl	10b78 <__sysv_signal@plt>
   12374:	ldr	r0, [sp, #4]
   12378:	ldr	r5, [r0]
   1237c:	cmp	r5, #1
   12380:	bne	12398 <getc@plt+0x176c>
   12384:	movw	r0, #16540	; 0x409c
   12388:	movt	r0, #2
   1238c:	ldrb	r0, [r0]
   12390:	cmp	r0, #0
   12394:	bne	12514 <getc@plt+0x18e8>
   12398:	ldr	ip, [sp, #8]
   1239c:	mov	r8, #0
   123a0:	cmp	r5, #2
   123a4:	blt	124f0 <getc@plt+0x18c4>
   123a8:	mov	r8, #0
   123ac:	mov	r7, #1
   123b0:	mov	r9, #1
   123b4:	ldr	r4, [ip, r7, lsl #2]
   123b8:	ldrb	r0, [r4]
   123bc:	cmp	r0, #45	; 0x2d
   123c0:	bne	12498 <getc@plt+0x186c>
   123c4:	ldrb	sl, [r4, #1]
   123c8:	cmp	sl, #0
   123cc:	beq	12498 <getc@plt+0x186c>
   123d0:	mov	r0, r4
   123d4:	bl	10bb4 <strlen@plt>
   123d8:	mov	r2, r0
   123dc:	movw	r0, #15494	; 0x3c86
   123e0:	mov	r1, r4
   123e4:	movt	r0, #1
   123e8:	bl	10c14 <strncmp@plt>
   123ec:	cmp	r0, #0
   123f0:	beq	12514 <getc@plt+0x18e8>
   123f4:	ldr	ip, [sp, #8]
   123f8:	add	r1, r7, #1
   123fc:	mov	r0, #0
   12400:	cmp	r1, r5
   12404:	ldrlt	r0, [ip, r1, lsl #2]
   12408:	cmp	r6, #0
   1240c:	ldrbne	r2, [r6]
   12410:	cmpne	r2, #0
   12414:	beq	12504 <getc@plt+0x18d8>
   12418:	mov	r1, #0
   1241c:	cmp	sl, r2
   12420:	beq	12448 <getc@plt+0x181c>
   12424:	mov	r2, #1
   12428:	sxth	r1, r2
   1242c:	add	r3, r1, r1, lsl #1
   12430:	ldrb	r3, [r6, r3, lsl #2]
   12434:	cmp	r3, #0
   12438:	beq	12504 <getc@plt+0x18d8>
   1243c:	add	r2, r2, #1
   12440:	cmp	sl, r3
   12444:	bne	12428 <getc@plt+0x17fc>
   12448:	add	r1, r1, r1, lsl #1
   1244c:	add	r3, r6, r1, lsl #2
   12450:	ldr	r1, [r3, #4]
   12454:	cmp	r1, #0
   12458:	beq	124b8 <getc@plt+0x188c>
   1245c:	mov	r2, r4
   12460:	cmp	r0, #0
   12464:	ldrb	r7, [r2, #2]!
   12468:	cmpeq	r7, #0
   1246c:	beq	124b8 <getc@plt+0x188c>
   12470:	ldr	r3, [r1]
   12474:	cmp	r3, #0
   12478:	bne	1251c <getc@plt+0x18f0>
   1247c:	cmp	r7, #0
   12480:	movne	r0, r2
   12484:	str	r0, [r1]
   12488:	ldrb	r0, [r2]
   1248c:	cmp	r0, #0
   12490:	addeq	r9, r9, #1
   12494:	b	124a4 <getc@plt+0x1878>
   12498:	sxth	r0, r8
   1249c:	add	r8, r8, #1
   124a0:	str	r4, [ip, r0, lsl #2]
   124a4:	add	r9, r9, #1
   124a8:	sxth	r7, r9
   124ac:	cmp	r5, r7
   124b0:	bgt	123b4 <getc@plt+0x1788>
   124b4:	b	124f0 <getc@plt+0x18c4>
   124b8:	ldr	r0, [r3, #8]
   124bc:	cmp	r0, #0
   124c0:	beq	12504 <getc@plt+0x18d8>
   124c4:	ldrb	r1, [r4, #2]
   124c8:	cmp	r1, #0
   124cc:	bne	12504 <getc@plt+0x18d8>
   124d0:	ldrb	r1, [r0]
   124d4:	cmp	r1, #0
   124d8:	bne	1251c <getc@plt+0x18f0>
   124dc:	mov	r1, #1
   124e0:	strb	r1, [r0]
   124e4:	ldr	r0, [sp, #4]
   124e8:	ldr	r5, [r0]
   124ec:	b	124a4 <getc@plt+0x1878>
   124f0:	ldr	r1, [sp, #4]
   124f4:	sxth	r0, r8
   124f8:	str	r0, [r1]
   124fc:	sub	sp, fp, #28
   12500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12504:	movw	r0, #15515	; 0x3c9b
   12508:	mov	r1, r4
   1250c:	movt	r0, #1
   12510:	bl	125ac <error@@Base+0x40>
   12514:	ldr	r0, [sp]
   12518:	bl	12664 <error@@Base+0xf8>
   1251c:	movw	r0, #15530	; 0x3caa
   12520:	mov	r1, r4
   12524:	movt	r0, #1
   12528:	bl	125ac <error@@Base+0x40>
   1252c:	push	{fp, lr}
   12530:	mov	fp, sp
   12534:	mov	r0, #0
   12538:	bl	1253c <getc@plt+0x1910>
   1253c:	push	{fp, lr}
   12540:	mov	fp, sp
   12544:	mov	r4, r0
   12548:	movw	r0, #27944	; 0x6d28
   1254c:	movt	r0, #155	; 0x9b
   12550:	ldr	r0, [r0]
   12554:	cmp	r0, #0
   12558:	beq	12560 <getc@plt+0x1934>
   1255c:	blx	r0
   12560:	bl	126b4 <error@@Base+0x148>
   12564:	mov	r0, r4
   12568:	bl	10b9c <exit@plt>

0001256c <error@@Base>:
   1256c:	push	{fp, lr}
   12570:	mov	fp, sp
   12574:	mov	r3, r0
   12578:	movw	r0, #27940	; 0x6d24
   1257c:	movw	r1, #15444	; 0x3c54
   12580:	movt	r0, #155	; 0x9b
   12584:	movt	r1, #1
   12588:	ldr	r2, [r0]
   1258c:	movw	r0, #16552	; 0x40a8
   12590:	movt	r0, #2
   12594:	ldr	r0, [r0]
   12598:	bl	10bc0 <fprintf@plt>
   1259c:	movw	r0, #16544	; 0x40a0
   125a0:	movt	r0, #2
   125a4:	ldr	r0, [r0]
   125a8:	bl	1253c <getc@plt+0x1910>
   125ac:	push	{fp, lr}
   125b0:	mov	fp, sp
   125b4:	sub	sp, sp, #8
   125b8:	mov	r3, r0
   125bc:	movw	r0, #27940	; 0x6d24
   125c0:	str	r1, [sp]
   125c4:	movw	r1, #15452	; 0x3c5c
   125c8:	movt	r0, #155	; 0x9b
   125cc:	movt	r1, #1
   125d0:	ldr	r2, [r0]
   125d4:	movw	r0, #16552	; 0x40a8
   125d8:	movt	r0, #2
   125dc:	ldr	r0, [r0]
   125e0:	bl	10bc0 <fprintf@plt>
   125e4:	movw	r0, #16544	; 0x40a0
   125e8:	movt	r0, #2
   125ec:	ldr	r0, [r0]
   125f0:	bl	1253c <getc@plt+0x1910>
   125f4:	push	{fp, lr}
   125f8:	mov	fp, sp
   125fc:	sub	sp, sp, #8
   12600:	mov	r3, r0
   12604:	movw	r0, #27940	; 0x6d24
   12608:	str	r1, [sp]
   1260c:	movw	r1, #15452	; 0x3c5c
   12610:	movt	r0, #155	; 0x9b
   12614:	movt	r1, #1
   12618:	ldr	r2, [r0]
   1261c:	movw	r0, #16552	; 0x40a8
   12620:	movt	r0, #2
   12624:	ldr	r0, [r0]
   12628:	bl	10bc0 <fprintf@plt>
   1262c:	mov	sp, fp
   12630:	pop	{fp, pc}
   12634:	movw	r0, #17710	; 0x452e
   12638:	movt	r0, #19
   1263c:	ldrb	r1, [r0]
   12640:	cmp	r1, #1
   12644:	bxeq	lr
   12648:	push	{fp, lr}
   1264c:	mov	fp, sp
   12650:	mov	r1, #1
   12654:	strb	r1, [r0]
   12658:	movw	r0, #15479	; 0x3c77
   1265c:	movt	r0, #1
   12660:	bl	1256c <error@@Base>
   12664:	push	{fp, lr}
   12668:	mov	fp, sp
   1266c:	mov	r3, r0
   12670:	movw	r0, #27936	; 0x6d20
   12674:	movt	r0, #155	; 0x9b
   12678:	ldr	r0, [r0]
   1267c:	cmp	r0, #0
   12680:	bne	126ac <error@@Base+0x140>
   12684:	movw	r0, #27940	; 0x6d24
   12688:	movw	r1, #15500	; 0x3c8c
   1268c:	movt	r0, #155	; 0x9b
   12690:	movt	r1, #1
   12694:	ldr	r2, [r0]
   12698:	movw	r0, #16552	; 0x40a8
   1269c:	movt	r0, #2
   126a0:	ldr	r0, [r0]
   126a4:	bl	10bc0 <fprintf@plt>
   126a8:	bl	1252c <getc@plt+0x1900>
   126ac:	blx	r0
   126b0:	bl	1252c <getc@plt+0x1900>
   126b4:	push	{r4, r5, r6, sl, fp, lr}
   126b8:	add	fp, sp, #16
   126bc:	movw	r5, #17708	; 0x452c
   126c0:	movt	r5, #19
   126c4:	ldrsh	r0, [r5]
   126c8:	cmp	r0, #1
   126cc:	poplt	{r4, r5, r6, sl, fp, pc}
   126d0:	mov	r6, #1
   126d4:	sxth	r0, r6
   126d8:	bl	12274 <getc@plt+0x1648>
   126dc:	mov	r4, r0
   126e0:	bl	10b24 <unlink@plt>
   126e4:	mov	r0, r4
   126e8:	bl	10adc <free@plt>
   126ec:	add	r0, r6, #1
   126f0:	sxth	r6, r0
   126f4:	ldrsh	r0, [r5]
   126f8:	cmp	r6, r0
   126fc:	ble	126d4 <error@@Base+0x168>
   12700:	pop	{r4, r5, r6, sl, fp, pc}
   12704:	push	{r4, r5, r6, sl, fp, lr}
   12708:	add	fp, sp, #16
   1270c:	mov	r5, r1
   12710:	mov	r6, r0
   12714:	mov	r0, #1
   12718:	mov	r1, #16
   1271c:	mov	r4, r2
   12720:	bl	120e0 <getc@plt+0x14b4>
   12724:	strb	r5, [r0, #8]
   12728:	mov	r1, r0
   1272c:	str	r4, [r0, #12]
   12730:	mov	r0, r6
   12734:	pop	{r4, r5, r6, sl, fp, lr}
   12738:	b	12d98 <error@@Base+0x82c>
   1273c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12740:	add	fp, sp, #28
   12744:	sub	sp, sp, #124	; 0x7c
   12748:	mov	r4, r2
   1274c:	mov	r2, r1
   12750:	cmp	r1, #0
   12754:	str	r0, [sp, #16]
   12758:	bne	12768 <error@@Base+0x1fc>
   1275c:	ldrb	r0, [r4]
   12760:	cmp	r0, #0
   12764:	bne	12a90 <error@@Base+0x524>
   12768:	ldr	r0, [sp, #16]
   1276c:	movw	r1, #15749	; 0x3d85
   12770:	movt	r1, #1
   12774:	ldr	r0, [r0, #4]
   12778:	str	r0, [sp, #4]
   1277c:	mov	r0, r2
   12780:	bl	1217c <getc@plt+0x1550>
   12784:	mov	r6, r0
   12788:	ldrb	r0, [r4]
   1278c:	cmp	r0, #0
   12790:	beq	127d8 <error@@Base+0x26c>
   12794:	add	r0, sp, #20
   12798:	mov	r1, #99	; 0x63
   1279c:	mov	r2, r6
   127a0:	bl	10af4 <fgets@plt>
   127a4:	cmp	r0, #0
   127a8:	beq	127c8 <error@@Base+0x25c>
   127ac:	movw	r1, #15615	; 0x3cff
   127b0:	add	r0, sp, #20
   127b4:	mov	r2, #51	; 0x33
   127b8:	movt	r1, #1
   127bc:	bl	10c14 <strncmp@plt>
   127c0:	cmp	r0, #0
   127c4:	beq	12a20 <error@@Base+0x4b4>
   127c8:	mov	r0, r6
   127cc:	bl	10b18 <rewind@plt>
   127d0:	mov	r5, #0
   127d4:	strb	r5, [r4, #11]
   127d8:	ldr	r9, [r4, #4]
   127dc:	ldrb	r8, [r4, #1]
   127e0:	mov	r0, r6
   127e4:	str	r4, [sp, #8]
   127e8:	cmp	r9, #0
   127ec:	movweq	r9, #94	; 0x5e
   127f0:	bl	10c2c <getc@plt>
   127f4:	cmn	r0, #1
   127f8:	beq	128bc <error@@Base+0x350>
   127fc:	add	r1, sp, #20
   12800:	mov	sl, #0
   12804:	sub	r4, fp, #32
   12808:	add	r1, r1, #1
   1280c:	str	r1, [sp, #12]
   12810:	movw	r1, #15872	; 0x3e00
   12814:	movt	r1, #2
   12818:	add	r1, r1, r0
   1281c:	ldrsb	r5, [r1]
   12820:	cmp	r5, #0
   12824:	ble	12a70 <error@@Base+0x504>
   12828:	cmp	r5, #1
   1282c:	strb	r0, [sp, #20]
   12830:	beq	12854 <error@@Base+0x2e8>
   12834:	ldr	r0, [sp, #12]
   12838:	sub	r7, r5, #1
   1283c:	mov	r1, #1
   12840:	mov	r3, r6
   12844:	mov	r2, r7
   12848:	bl	10b54 <fread@plt>
   1284c:	cmp	r0, r7
   12850:	bne	12a84 <error@@Base+0x518>
   12854:	add	r0, sp, #20
   12858:	mov	r1, #4
   1285c:	mov	r2, r4
   12860:	bl	10b60 <utf8proc_iterate@plt>
   12864:	cmp	r0, r5
   12868:	bne	12a7c <error@@Base+0x510>
   1286c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12870:	cmp	r8, #0
   12874:	beq	12884 <error@@Base+0x318>
   12878:	mov	r7, #1
   1287c:	cmp	r5, r9
   12880:	beq	128a8 <error@@Base+0x33c>
   12884:	mov	r0, #1
   12888:	mov	r1, #16
   1288c:	bl	120e0 <getc@plt+0x14b4>
   12890:	strb	sl, [r0, #8]
   12894:	mov	r1, r0
   12898:	str	r5, [r0, #12]
   1289c:	ldr	r0, [sp, #16]
   128a0:	bl	12d98 <error@@Base+0x82c>
   128a4:	mov	r7, #0
   128a8:	mov	r0, r6
   128ac:	bl	10c2c <getc@plt>
   128b0:	cmn	r0, #1
   128b4:	mov	sl, r7
   128b8:	bne	12810 <error@@Base+0x2a4>
   128bc:	mov	r0, r6
   128c0:	bl	121f4 <getc@plt+0x15c8>
   128c4:	ldr	r8, [sp, #8]
   128c8:	ldr	r9, [sp, #4]
   128cc:	ldrb	r0, [r8, #9]
   128d0:	cmp	r0, #0
   128d4:	beq	129e0 <error@@Base+0x474>
   128d8:	ldr	r0, [sp, #16]
   128dc:	cmp	r9, #0
   128e0:	addne	r0, r9, #4
   128e4:	ldr	r6, [r0]
   128e8:	cmp	r6, #0
   128ec:	beq	129e0 <error@@Base+0x474>
   128f0:	mov	r5, #32
   128f4:	mov	r7, r6
   128f8:	ldr	r4, [r7, #12]
   128fc:	mov	r0, r4
   12900:	bl	10ae8 <utf8proc_get_property@plt>
   12904:	cmp	r4, #10
   12908:	ble	12924 <error@@Base+0x3b8>
   1290c:	sub	r1, r4, #11
   12910:	cmp	r1, #3
   12914:	bcc	12948 <error@@Base+0x3dc>
   12918:	cmp	r4, #160	; 0xa0
   1291c:	beq	12948 <error@@Base+0x3dc>
   12920:	b	12934 <error@@Base+0x3c8>
   12924:	cmp	r4, #9
   12928:	beq	12948 <error@@Base+0x3dc>
   1292c:	cmp	r4, #10
   12930:	beq	1294c <error@@Base+0x3e0>
   12934:	ldrsh	r0, [r0]
   12938:	sub	r0, r0, #23
   1293c:	cmp	r0, #2
   12940:	strls	r5, [r7, #12]
   12944:	b	1294c <error@@Base+0x3e0>
   12948:	str	r5, [r7, #12]
   1294c:	ldr	r7, [r7, #4]
   12950:	cmp	r7, #0
   12954:	bne	128f8 <error@@Base+0x38c>
   12958:	mov	r4, #0
   1295c:	ldr	r1, [r6, #12]
   12960:	ldr	r5, [r6, #4]
   12964:	cmp	r1, #32
   12968:	bne	129a4 <error@@Base+0x438>
   1296c:	tst	r4, #255	; 0xff
   12970:	beq	129c0 <error@@Base+0x454>
   12974:	cmp	r5, #0
   12978:	ldrne	r1, [r5, #12]
   1297c:	cmpne	r1, #10
   12980:	beq	129c0 <error@@Base+0x454>
   12984:	mov	r0, #1
   12988:	cmp	r1, #32
   1298c:	bne	129b8 <error@@Base+0x44c>
   12990:	ldrb	r0, [r6, #8]
   12994:	ldrb	r1, [r5, #8]
   12998:	orr	r0, r1, r0
   1299c:	strb	r0, [r5, #8]
   129a0:	b	129c0 <error@@Base+0x454>
   129a4:	subs	r0, r1, #10
   129a8:	movwne	r0, #1
   129ac:	tst	r4, #255	; 0xff
   129b0:	cmpeq	r1, #10
   129b4:	beq	129c0 <error@@Base+0x454>
   129b8:	mov	r4, r0
   129bc:	b	129d4 <error@@Base+0x468>
   129c0:	ldr	r0, [sp, #16]
   129c4:	mov	r1, r6
   129c8:	bl	12dc0 <error@@Base+0x854>
   129cc:	mov	r0, r6
   129d0:	bl	10adc <free@plt>
   129d4:	cmp	r5, #0
   129d8:	mov	r6, r5
   129dc:	bne	1295c <error@@Base+0x3f0>
   129e0:	ldrb	r0, [r8, #10]
   129e4:	cmp	r0, #0
   129e8:	beq	12a18 <error@@Base+0x4ac>
   129ec:	ldr	r0, [sp, #16]
   129f0:	cmp	r9, #0
   129f4:	addne	r0, r9, #4
   129f8:	ldr	r4, [r0]
   129fc:	b	12a10 <error@@Base+0x4a4>
   12a00:	ldr	r0, [r4, #12]
   12a04:	bl	10b30 <utf8proc_tolower@plt>
   12a08:	str	r0, [r4, #12]
   12a0c:	ldr	r4, [r4, #4]
   12a10:	cmp	r4, #0
   12a14:	bne	12a00 <error@@Base+0x494>
   12a18:	sub	sp, fp, #28
   12a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a20:	movw	r8, #15671	; 0x3d37
   12a24:	mov	r7, #0
   12a28:	add	r9, sp, #20
   12a2c:	mov	r5, #1
   12a30:	movt	r8, #1
   12a34:	mov	r0, r9
   12a38:	mov	r1, #99	; 0x63
   12a3c:	mov	r2, r6
   12a40:	bl	10af4 <fgets@plt>
   12a44:	cmp	r0, #0
   12a48:	beq	127d4 <error@@Base+0x268>
   12a4c:	mov	r0, r9
   12a50:	mov	r1, r8
   12a54:	bl	10ab8 <strcmp@plt>
   12a58:	cmp	r0, #0
   12a5c:	addeq	r7, r7, #1
   12a60:	sxth	r7, r7
   12a64:	cmp	r7, #2
   12a68:	blt	12a34 <error@@Base+0x4c8>
   12a6c:	b	127d4 <error@@Base+0x268>
   12a70:	movw	r0, #15727	; 0x3d6f
   12a74:	movt	r0, #1
   12a78:	bl	1256c <error@@Base>
   12a7c:	bl	10bfc <utf8proc_errmsg@plt>
   12a80:	bl	1256c <error@@Base>
   12a84:	movw	r0, #15751	; 0x3d87
   12a88:	movt	r0, #1
   12a8c:	bl	1256c <error@@Base>
   12a90:	movw	r0, #15547	; 0x3cbb
   12a94:	movw	r1, #15563	; 0x3ccb
   12a98:	movt	r0, #1
   12a9c:	movt	r1, #1
   12aa0:	bl	125ac <error@@Base+0x40>
   12aa4:	push	{fp, lr}
   12aa8:	mov	fp, sp
   12aac:	bl	10b00 <utf8proc_encode_char@plt>
   12ab0:	cmp	r0, #0
   12ab4:	sxtbgt	r0, r0
   12ab8:	popgt	{fp, pc}
   12abc:	movw	r0, #15573	; 0x3cd5
   12ac0:	movt	r0, #1
   12ac4:	bl	1256c <error@@Base>
   12ac8:	push	{r4, r5, r6, r7, fp, lr}
   12acc:	add	fp, sp, #16
   12ad0:	mov	r6, r3
   12ad4:	mov	r4, r2
   12ad8:	mov	r5, r1
   12adc:	tst	r0, #255	; 0xff
   12ae0:	beq	12b00 <error@@Base+0x594>
   12ae4:	mov	r0, #94	; 0x5e
   12ae8:	mov	r1, r4
   12aec:	bl	10b00 <utf8proc_encode_char@plt>
   12af0:	cmp	r0, #0
   12af4:	ble	12b9c <error@@Base+0x630>
   12af8:	sxtb	r7, r0
   12afc:	b	12b04 <error@@Base+0x598>
   12b00:	mov	r7, #0
   12b04:	cmp	r5, #10
   12b08:	bne	12b30 <error@@Base+0x5c4>
   12b0c:	movw	r0, #12425	; 0x3089
   12b10:	movw	r1, #15596	; 0x3cec
   12b14:	tst	r6, #255	; 0xff
   12b18:	movt	r0, #1
   12b1c:	movt	r1, #1
   12b20:	moveq	r1, r0
   12b24:	add	r0, r4, r7
   12b28:	pop	{r4, r5, r6, r7, fp, lr}
   12b2c:	b	10bf0 <sprintf@plt>
   12b30:	mov	r0, r5
   12b34:	bl	10ae8 <utf8proc_get_property@plt>
   12b38:	cmp	r5, #32
   12b3c:	beq	12b50 <error@@Base+0x5e4>
   12b40:	ldrsh	r0, [r0]
   12b44:	sub	r1, r0, #1
   12b48:	cmp	r1, #22
   12b4c:	bcs	12ba8 <error@@Base+0x63c>
   12b50:	mov	r0, r5
   12b54:	bl	10ba8 <utf8proc_category@plt>
   12b58:	sub	r0, r0, #6
   12b5c:	cmp	r0, #2
   12b60:	bhi	12b7c <error@@Base+0x610>
   12b64:	add	r1, r4, r7
   12b68:	movw	r0, #9676	; 0x25cc
   12b6c:	bl	10b00 <utf8proc_encode_char@plt>
   12b70:	cmp	r0, #0
   12b74:	ble	12b9c <error@@Base+0x630>
   12b78:	sxtab	r7, r7, r0
   12b7c:	add	r1, r4, r7
   12b80:	mov	r0, r5
   12b84:	bl	10b00 <utf8proc_encode_char@plt>
   12b88:	cmp	r0, #0
   12b8c:	sxtabgt	r0, r7, r0
   12b90:	movgt	r1, #0
   12b94:	strbgt	r1, [r4, r0]
   12b98:	popgt	{r4, r5, r6, r7, fp, pc}
   12b9c:	movw	r0, #15573	; 0x3cd5
   12ba0:	movt	r0, #1
   12ba4:	bl	1256c <error@@Base>
   12ba8:	cmp	r0, #29
   12bac:	beq	12b50 <error@@Base+0x5e4>
   12bb0:	add	r0, r4, r7
   12bb4:	cmp	r5, #255	; 0xff
   12bb8:	bhi	12bc8 <error@@Base+0x65c>
   12bbc:	movw	r1, #15601	; 0x3cf1
   12bc0:	movt	r1, #1
   12bc4:	b	12bd0 <error@@Base+0x664>
   12bc8:	movw	r1, #15608	; 0x3cf8
   12bcc:	movt	r1, #1
   12bd0:	mov	r2, r5
   12bd4:	pop	{r4, r5, r6, r7, fp, lr}
   12bd8:	b	10bf0 <sprintf@plt>
   12bdc:	push	{r4, r5, r6, r7, fp, lr}
   12be0:	add	fp, sp, #16
   12be4:	sub	sp, sp, #16
   12be8:	mov	r6, r2
   12bec:	mov	r2, r1
   12bf0:	movw	r1, #13269	; 0x33d5
   12bf4:	mov	r5, r0
   12bf8:	movt	r1, #1
   12bfc:	mov	r0, r2
   12c00:	bl	1217c <getc@plt+0x1550>
   12c04:	mov	r4, r0
   12c08:	cmp	r6, #0
   12c0c:	beq	12c48 <error@@Base+0x6dc>
   12c10:	movw	r0, #15615	; 0x3cff
   12c14:	mov	r1, r4
   12c18:	movt	r0, #1
   12c1c:	bl	10c08 <fputs@plt>
   12c20:	movw	r7, #15671	; 0x3d37
   12c24:	mov	r1, r4
   12c28:	movt	r7, #1
   12c2c:	mov	r0, r7
   12c30:	bl	10c08 <fputs@plt>
   12c34:	mov	r0, r4
   12c38:	blx	r6
   12c3c:	mov	r0, r7
   12c40:	mov	r1, r4
   12c44:	bl	10c08 <fputs@plt>
   12c48:	ldr	r6, [r5]
   12c4c:	cmp	r6, #0
   12c50:	beq	12c84 <error@@Base+0x718>
   12c54:	add	r5, sp, #7
   12c58:	ldr	r1, [r6, #12]
   12c5c:	ldrb	r0, [r6, #8]
   12c60:	mov	r2, r5
   12c64:	mov	r3, #0
   12c68:	bl	12ac8 <error@@Base+0x55c>
   12c6c:	mov	r0, r5
   12c70:	mov	r1, r4
   12c74:	bl	10c08 <fputs@plt>
   12c78:	ldr	r6, [r6, #4]
   12c7c:	cmp	r6, #0
   12c80:	bne	12c58 <error@@Base+0x6ec>
   12c84:	mov	r0, r4
   12c88:	bl	121f4 <getc@plt+0x15c8>
   12c8c:	sub	sp, fp, #16
   12c90:	pop	{r4, r5, r6, r7, fp, pc}
   12c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c98:	add	fp, sp, #28
   12c9c:	sub	sp, sp, #4
   12ca0:	mov	r9, #0
   12ca4:	mov	sl, r0
   12ca8:	str	r9, [sp]
   12cac:	ldrb	r0, [r1]
   12cb0:	cmp	r0, #0
   12cb4:	beq	12d14 <error@@Base+0x7a8>
   12cb8:	mov	r4, r1
   12cbc:	mov	r8, sp
   12cc0:	mov	r7, #1
   12cc4:	mov	r0, r4
   12cc8:	mvn	r1, #0
   12ccc:	mov	r2, r8
   12cd0:	bl	10b60 <utf8proc_iterate@plt>
   12cd4:	cmp	r0, #1
   12cd8:	blt	12d1c <error@@Base+0x7b0>
   12cdc:	ldr	r5, [sp]
   12ce0:	mov	r6, r0
   12ce4:	mov	r0, #1
   12ce8:	mov	r1, #16
   12cec:	bl	120e0 <getc@plt+0x14b4>
   12cf0:	strb	r9, [r0, #8]
   12cf4:	mov	r1, r0
   12cf8:	str	r5, [r0, #12]
   12cfc:	mov	r0, sl
   12d00:	bl	12d98 <error@@Base+0x82c>
   12d04:	ldrb	r0, [r4, r6]!
   12d08:	cmp	r0, #0
   12d0c:	bne	12cc4 <error@@Base+0x758>
   12d10:	b	12d20 <error@@Base+0x7b4>
   12d14:	mov	r7, #1
   12d18:	b	12d20 <error@@Base+0x7b4>
   12d1c:	mov	r7, #0
   12d20:	mov	r0, r7
   12d24:	sub	sp, fp, #28
   12d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d2c:	vmov.i32	q8, #0	; 0x00000000
   12d30:	vst1.32	{d16-d17}, [r0]
   12d34:	bx	lr
   12d38:	ldr	r3, [r0]
   12d3c:	mov	r2, r1
   12d40:	mov	r1, #0
   12d44:	b	12d48 <error@@Base+0x7dc>
   12d48:	push	{r4, sl, fp, lr}
   12d4c:	add	fp, sp, #8
   12d50:	cmp	r1, #0
   12d54:	mov	r4, r0
   12d58:	stm	r2, {r1, r3}
   12d5c:	addne	r0, r1, #4
   12d60:	cmp	r3, #0
   12d64:	addeq	r3, r4, #4
   12d68:	str	r2, [r0]
   12d6c:	str	r2, [r3]
   12d70:	ldr	r0, [r4, #8]
   12d74:	cmp	r0, #0
   12d78:	beq	12d88 <error@@Base+0x81c>
   12d7c:	bl	10adc <free@plt>
   12d80:	mov	r0, #0
   12d84:	str	r0, [r4, #8]
   12d88:	ldr	r0, [r4, #12]
   12d8c:	add	r0, r0, #1
   12d90:	str	r0, [r4, #12]
   12d94:	pop	{r4, sl, fp, pc}
   12d98:	mov	r2, r1
   12d9c:	ldr	r1, [r0, #4]
   12da0:	mov	r3, #0
   12da4:	b	12d48 <error@@Base+0x7dc>
   12da8:	mov	r3, r2
   12dac:	mov	r2, r1
   12db0:	ldr	r1, [r3]
   12db4:	b	12d48 <error@@Base+0x7dc>
   12db8:	ldr	r3, [r1, #4]
   12dbc:	b	12d48 <error@@Base+0x7dc>
   12dc0:	push	{r4, r5, fp, lr}
   12dc4:	add	fp, sp, #8
   12dc8:	mov	r4, r0
   12dcc:	ldm	r1, {r0, r2}
   12dd0:	mov	r5, #0
   12dd4:	cmp	r0, #0
   12dd8:	streq	r2, [r4]
   12ddc:	strne	r2, [r0, #4]
   12de0:	ldrne	r2, [r1, #4]
   12de4:	cmp	r2, #0
   12de8:	addeq	r2, r4, #4
   12dec:	str	r0, [r2]
   12df0:	str	r5, [r1]
   12df4:	str	r5, [r1, #4]
   12df8:	ldr	r0, [r4, #8]
   12dfc:	cmp	r0, #0
   12e00:	beq	12e0c <error@@Base+0x8a0>
   12e04:	bl	10adc <free@plt>
   12e08:	str	r5, [r4, #8]
   12e0c:	ldr	r0, [r4, #12]
   12e10:	sub	r0, r0, #1
   12e14:	str	r0, [r4, #12]
   12e18:	pop	{r4, r5, fp, pc}
   12e1c:	push	{r4, sl, fp, lr}
   12e20:	add	fp, sp, #8
   12e24:	mov	r4, r0
   12e28:	ldr	r0, [r0, #8]
   12e2c:	cmp	r0, #0
   12e30:	beq	12e38 <error@@Base+0x8cc>
   12e34:	pop	{r4, sl, fp, pc}
   12e38:	ldr	r0, [r4, #12]
   12e3c:	cmp	r0, #0
   12e40:	beq	12e34 <error@@Base+0x8c8>
   12e44:	mov	r1, #4
   12e48:	bl	120e0 <getc@plt+0x14b4>
   12e4c:	str	r0, [r4, #8]
   12e50:	ldr	r1, [r4]
   12e54:	cmp	r1, #0
   12e58:	beq	12e34 <error@@Base+0x8c8>
   12e5c:	str	r1, [r0]
   12e60:	ldr	r0, [r1, #4]
   12e64:	cmp	r0, #0
   12e68:	popeq	{r4, sl, fp, pc}
   12e6c:	mov	r1, #4
   12e70:	ldr	r2, [r4, #8]
   12e74:	str	r0, [r2, r1]
   12e78:	add	r1, r1, #4
   12e7c:	ldr	r0, [r0, #4]
   12e80:	cmp	r0, #0
   12e84:	bne	12e70 <error@@Base+0x904>
   12e88:	b	12e34 <error@@Base+0x8c8>
   12e8c:	push	{r4, r5, r6, sl, fp, lr}
   12e90:	add	fp, sp, #16
   12e94:	ldr	r6, [r0]
   12e98:	cmp	r6, #0
   12e9c:	popeq	{r4, r5, r6, sl, fp, pc}
   12ea0:	mov	r4, r1
   12ea4:	mov	r5, r0
   12ea8:	mov	r0, r5
   12eac:	mov	r1, r6
   12eb0:	bl	12dc0 <error@@Base+0x854>
   12eb4:	mov	r0, r6
   12eb8:	blx	r4
   12ebc:	ldr	r6, [r5]
   12ec0:	cmp	r6, #0
   12ec4:	bne	12ea8 <error@@Base+0x93c>
   12ec8:	pop	{r4, r5, r6, sl, fp, pc}
   12ecc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ed0:	mov	r7, r0
   12ed4:	ldr	r6, [pc, #72]	; 12f24 <error@@Base+0x9b8>
   12ed8:	ldr	r5, [pc, #72]	; 12f28 <error@@Base+0x9bc>
   12edc:	add	r6, pc, r6
   12ee0:	add	r5, pc, r5
   12ee4:	sub	r6, r6, r5
   12ee8:	mov	r8, r1
   12eec:	mov	r9, r2
   12ef0:	bl	10a8c <calloc@plt-0x20>
   12ef4:	asrs	r6, r6, #2
   12ef8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12efc:	mov	r4, #0
   12f00:	add	r4, r4, #1
   12f04:	ldr	r3, [r5], #4
   12f08:	mov	r2, r9
   12f0c:	mov	r1, r8
   12f10:	mov	r0, r7
   12f14:	blx	r3
   12f18:	cmp	r6, r4
   12f1c:	bne	12f00 <error@@Base+0x994>
   12f20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f24:	andeq	r0, r1, r8, lsl pc
   12f28:	andeq	r0, r1, r0, lsl pc
   12f2c:	bx	lr
   12f30:	mov	r2, r1
   12f34:	mov	r1, r0
   12f38:	mov	r0, #3
   12f3c:	b	10b3c <__xstat@plt>

Disassembly of section .fini:

00012f40 <.fini>:
   12f40:	push	{r3, lr}
   12f44:	pop	{r3, pc}
