
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

00010a64 <.init>:
   10a64:	push	{r3, lr}
   10a68:	bl	10bd4 <_start@@Base+0x3c>
   10a6c:	pop	{r3, pc}

Disassembly of section .plt:

00010a70 <raise@plt-0x14>:
   10a70:	push	{lr}		; (str lr, [sp, #-4]!)
   10a74:	ldr	lr, [pc, #4]	; 10a80 <raise@plt-0x4>
   10a78:	add	lr, pc, lr
   10a7c:	ldr	pc, [lr, #8]!
   10a80:	andeq	r1, r1, r0, lsl #11

00010a84 <raise@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #69632	; 0x11000
   10a8c:	ldr	pc, [ip, #1408]!	; 0x580

00010a90 <fopen@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1400]!	; 0x578

00010a9c <time@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1392]!	; 0x570

00010aa8 <xcb_connect@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1384]!	; 0x568

00010ab4 <sleep@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1376]!	; 0x560

00010ac0 <xcb_flush@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1368]!	; 0x558

00010acc <rewind@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1360]!	; 0x550

00010ad8 <xcb_screen_next@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1352]!	; 0x548

00010ae4 <fread@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1344]!	; 0x540

00010af0 <xcb_setup_roots_iterator@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1336]!	; 0x538

00010afc <puts@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1328]!	; 0x530

00010b08 <__libc_start_main@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1320]!	; 0x528

00010b14 <localtime@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1312]!	; 0x520

00010b20 <__gmon_start__@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1304]!	; 0x518

00010b2c <exit@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1296]!	; 0x510

00010b38 <snprintf@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1288]!	; 0x508

00010b44 <__isoc99_sscanf@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1280]!	; 0x500

00010b50 <fclose@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b5c <xcb_disconnect@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b68 <xcb_connection_has_error@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b74 <xcb_get_setup@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b80 <xcb_change_property@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b8c <abort@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1232]!	; 0x4d0

Disassembly of section .text:

00010b98 <_start@@Base>:
   10b98:	mov	fp, #0
   10b9c:	mov	lr, #0
   10ba0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba4:	mov	r2, sp
   10ba8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bac:	push	{r0}		; (str r0, [sp, #-4]!)
   10bb0:	ldr	ip, [pc, #16]	; 10bc8 <_start@@Base+0x30>
   10bb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb8:	ldr	r0, [pc, #12]	; 10bcc <_start@@Base+0x34>
   10bbc:	ldr	r3, [pc, #12]	; 10bd0 <_start@@Base+0x38>
   10bc0:	bl	10b08 <__libc_start_main@plt>
   10bc4:	bl	10b8c <abort@plt>
   10bc8:	andeq	r1, r1, ip, lsr #6
   10bcc:	andeq	r0, r1, r8, lsl #25
   10bd0:	andeq	r1, r1, ip, asr #5
   10bd4:	ldr	r3, [pc, #20]	; 10bf0 <_start@@Base+0x58>
   10bd8:	ldr	r2, [pc, #20]	; 10bf4 <_start@@Base+0x5c>
   10bdc:	add	r3, pc, r3
   10be0:	ldr	r2, [r3, r2]
   10be4:	cmp	r2, #0
   10be8:	bxeq	lr
   10bec:	b	10b20 <__gmon_start__@plt>
   10bf0:	andeq	r1, r1, ip, lsl r4
   10bf4:	andeq	r0, r0, r8, rrx
   10bf8:	ldr	r0, [pc, #24]	; 10c18 <_start@@Base+0x80>
   10bfc:	ldr	r3, [pc, #24]	; 10c1c <_start@@Base+0x84>
   10c00:	cmp	r3, r0
   10c04:	bxeq	lr
   10c08:	ldr	r3, [pc, #16]	; 10c20 <_start@@Base+0x88>
   10c0c:	cmp	r3, #0
   10c10:	bxeq	lr
   10c14:	bx	r3
   10c18:	andeq	r2, r2, r4, ror r0
   10c1c:	andeq	r2, r2, r4, ror r0
   10c20:	andeq	r0, r0, r0
   10c24:	ldr	r0, [pc, #36]	; 10c50 <_start@@Base+0xb8>
   10c28:	ldr	r1, [pc, #36]	; 10c54 <_start@@Base+0xbc>
   10c2c:	sub	r1, r1, r0
   10c30:	asr	r1, r1, #2
   10c34:	add	r1, r1, r1, lsr #31
   10c38:	asrs	r1, r1, #1
   10c3c:	bxeq	lr
   10c40:	ldr	r3, [pc, #16]	; 10c58 <_start@@Base+0xc0>
   10c44:	cmp	r3, #0
   10c48:	bxeq	lr
   10c4c:	bx	r3
   10c50:	andeq	r2, r2, r4, ror r0
   10c54:	andeq	r2, r2, r4, ror r0
   10c58:	andeq	r0, r0, r0
   10c5c:	push	{r4, lr}
   10c60:	ldr	r4, [pc, #24]	; 10c80 <_start@@Base+0xe8>
   10c64:	ldrb	r3, [r4]
   10c68:	cmp	r3, #0
   10c6c:	popne	{r4, pc}
   10c70:	bl	10bf8 <_start@@Base+0x60>
   10c74:	mov	r3, #1
   10c78:	strb	r3, [r4]
   10c7c:	pop	{r4, pc}
   10c80:	andeq	r2, r2, r4, ror r0
   10c84:	b	10c24 <_start@@Base+0x8c>

00010c88 <main@@Base>:
   10c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c8c:	add	fp, sp, #28
   10c90:	sub	sp, sp, #140	; 0x8c
   10c94:	add	r1, sp, #16
   10c98:	mov	r0, #0
   10c9c:	bl	10aa8 <xcb_connect@plt>
   10ca0:	mov	r4, r0
   10ca4:	bl	10b68 <xcb_connection_has_error@plt>
   10ca8:	cmp	r0, #0
   10cac:	bne	10e1c <main@@Base+0x194>
   10cb0:	mov	r0, r4
   10cb4:	bl	10b74 <xcb_get_setup@plt>
   10cb8:	add	r8, sp, #52	; 0x34
   10cbc:	mov	r1, r0
   10cc0:	mov	r0, r8
   10cc4:	bl	10af0 <xcb_setup_roots_iterator@plt>
   10cc8:	ldr	r0, [sp, #16]
   10ccc:	sub	r1, r0, #1
   10cd0:	cmp	r0, #0
   10cd4:	str	r1, [sp, #16]
   10cd8:	beq	10cfc <main@@Base+0x74>
   10cdc:	add	r5, sp, #52	; 0x34
   10ce0:	mov	r0, r5
   10ce4:	bl	10ad8 <xcb_screen_next@plt>
   10ce8:	ldr	r0, [sp, #16]
   10cec:	sub	r1, r0, #1
   10cf0:	cmp	r0, #0
   10cf4:	str	r1, [sp, #16]
   10cf8:	bne	10ce0 <main@@Base+0x58>
   10cfc:	ldr	r0, [sp, #52]	; 0x34
   10d00:	ldr	sl, [r0]
   10d04:	add	r0, sp, #16
   10d08:	bl	10eb0 <init_bat@@Base>
   10d0c:	mov	r9, #31
   10d10:	b	10d1c <main@@Base+0x94>
   10d14:	mov	r0, #60	; 0x3c
   10d18:	bl	10ab4 <sleep@plt>
   10d1c:	mov	r0, #0
   10d20:	mov	r5, r8
   10d24:	mov	r7, #0
   10d28:	strb	r0, [sp, #132]	; 0x84
   10d2c:	ldrb	r0, [sp, #40]	; 0x28
   10d30:	cmp	r0, #0
   10d34:	beq	10d50 <main@@Base+0xc8>
   10d38:	add	r0, sp, #16
   10d3c:	mov	r1, r8
   10d40:	mov	r2, #80	; 0x50
   10d44:	bl	11030 <bat@@Base>
   10d48:	mov	r7, r0
   10d4c:	add	r5, r8, r0
   10d50:	mov	r0, #0
   10d54:	bl	10a9c <time@plt>
   10d58:	str	r0, [fp, #-32]	; 0xffffffe0
   10d5c:	sub	r0, fp, #32
   10d60:	bl	10b14 <localtime@plt>
   10d64:	ldmib	r0, {r1, r2, r3, r6}
   10d68:	ldr	r0, [r0, #20]
   10d6c:	add	r6, r6, #1
   10d70:	str	r1, [sp, #12]
   10d74:	str	r3, [sp, #4]
   10d78:	str	r2, [sp, #8]
   10d7c:	movw	r1, #1900	; 0x76c
   10d80:	str	r6, [sp]
   10d84:	add	r3, r0, r1
   10d88:	rsb	r1, r7, #80	; 0x50
   10d8c:	mov	r0, r5
   10d90:	ldr	r2, [pc, #160]	; 10e38 <main@@Base+0x1b0>
   10d94:	add	r2, pc, r2
   10d98:	bl	10b38 <snprintf@plt>
   10d9c:	add	r0, r0, r7
   10da0:	mov	r1, #8
   10da4:	mov	r2, sl
   10da8:	mov	r3, #39	; 0x27
   10dac:	str	r9, [sp]
   10db0:	str	r8, [sp, #12]
   10db4:	str	r1, [sp, #4]
   10db8:	str	r0, [sp, #8]
   10dbc:	mov	r0, r4
   10dc0:	mov	r1, #0
   10dc4:	bl	10b80 <xcb_change_property@plt>
   10dc8:	mov	r0, r4
   10dcc:	bl	10ac0 <xcb_flush@plt>
   10dd0:	cmp	r0, #0
   10dd4:	bgt	10d14 <main@@Base+0x8c>
   10dd8:	ldr	r0, [pc, #92]	; 10e3c <main@@Base+0x1b4>
   10ddc:	add	r0, pc, r0
   10de0:	bl	10afc <puts@plt>
   10de4:	mov	r0, r4
   10de8:	bl	10b5c <xcb_disconnect@plt>
   10dec:	ldrb	r0, [sp, #40]	; 0x28
   10df0:	cmp	r0, #0
   10df4:	beq	10e10 <main@@Base+0x188>
   10df8:	ldr	r0, [sp, #16]
   10dfc:	bl	10b50 <fclose@plt>
   10e00:	ldr	r0, [sp, #24]
   10e04:	bl	10b50 <fclose@plt>
   10e08:	ldr	r0, [sp, #20]
   10e0c:	bl	10b50 <fclose@plt>
   10e10:	mov	r0, #2
   10e14:	sub	sp, fp, #28
   10e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e1c:	ldr	r0, [pc, #28]	; 10e40 <main@@Base+0x1b8>
   10e20:	add	r0, pc, r0
   10e24:	bl	10afc <puts@plt>
   10e28:	mov	r0, r4
   10e2c:	bl	10b5c <xcb_disconnect@plt>
   10e30:	mov	r0, #1
   10e34:	bl	10b2c <exit@plt>
   10e38:	ldrdeq	r0, [r0], -r8
   10e3c:	andeq	r0, r0, r8, asr r5
   10e40:	andeq	r0, r0, r4, lsr r5

00010e44 <read_int@@Base>:
   10e44:	push	{r4, r5, fp, lr}
   10e48:	add	fp, sp, #8
   10e4c:	sub	sp, sp, #48	; 0x30
   10e50:	mov	r4, r0
   10e54:	bl	10acc <rewind@plt>
   10e58:	mov	r5, sp
   10e5c:	mov	r1, #1
   10e60:	mov	r2, #40	; 0x28
   10e64:	mov	r3, r4
   10e68:	mov	r0, r5
   10e6c:	bl	10ae4 <fread@plt>
   10e70:	mov	r4, #0
   10e74:	sub	r2, fp, #16
   10e78:	strb	r4, [r5, r0]
   10e7c:	mov	r0, r5
   10e80:	ldr	r1, [pc, #36]	; 10eac <read_int@@Base+0x68>
   10e84:	add	r1, pc, r1
   10e88:	bl	10b44 <__isoc99_sscanf@plt>
   10e8c:	ldr	r2, [fp, #-16]
   10e90:	ldr	r1, [fp, #-12]
   10e94:	cmp	r0, #1
   10e98:	mvnne	r2, #0
   10e9c:	movne	r1, r4
   10ea0:	mov	r0, r2
   10ea4:	sub	sp, fp, #8
   10ea8:	pop	{r4, r5, fp, pc}
   10eac:	andeq	r0, r0, r1, lsl #10

00010eb0 <init_bat@@Base>:
   10eb0:	push	{r4, r5, r6, sl, fp, lr}
   10eb4:	add	fp, sp, #16
   10eb8:	mov	r4, r0
   10ebc:	ldr	r0, [pc, #248]	; 10fbc <init_bat@@Base+0x10c>
   10ec0:	ldr	r1, [pc, #248]	; 10fc0 <init_bat@@Base+0x110>
   10ec4:	add	r0, pc, r0
   10ec8:	add	r1, pc, r1
   10ecc:	bl	10a90 <fopen@plt>
   10ed0:	mov	r5, r0
   10ed4:	cmp	r0, #0
   10ed8:	bne	10efc <init_bat@@Base+0x4c>
   10edc:	ldr	r0, [pc, #224]	; 10fc4 <init_bat@@Base+0x114>
   10ee0:	ldr	r1, [pc, #224]	; 10fc8 <init_bat@@Base+0x118>
   10ee4:	add	r0, pc, r0
   10ee8:	add	r1, pc, r1
   10eec:	bl	10a90 <fopen@plt>
   10ef0:	mov	r5, r0
   10ef4:	cmp	r0, #0
   10ef8:	beq	10fa4 <init_bat@@Base+0xf4>
   10efc:	mov	r0, #1
   10f00:	strb	r0, [r4, #24]
   10f04:	mov	r0, r5
   10f08:	bl	10e44 <read_int@@Base>
   10f0c:	strd	r0, [r4, #16]
   10f10:	ldr	r0, [pc, #180]	; 10fcc <init_bat@@Base+0x11c>
   10f14:	ldr	r6, [pc, #180]	; 10fd0 <init_bat@@Base+0x120>
   10f18:	add	r6, pc, r6
   10f1c:	add	r0, pc, r0
   10f20:	mov	r1, r6
   10f24:	bl	10a90 <fopen@plt>
   10f28:	str	r0, [r4]
   10f2c:	mov	r1, r6
   10f30:	ldr	r0, [pc, #156]	; 10fd4 <init_bat@@Base+0x124>
   10f34:	add	r0, pc, r0
   10f38:	bl	10a90 <fopen@plt>
   10f3c:	cmp	r0, #0
   10f40:	str	r0, [r4, #4]
   10f44:	bne	10f60 <init_bat@@Base+0xb0>
   10f48:	ldr	r0, [pc, #136]	; 10fd8 <init_bat@@Base+0x128>
   10f4c:	ldr	r1, [pc, #136]	; 10fdc <init_bat@@Base+0x12c>
   10f50:	add	r0, pc, r0
   10f54:	add	r1, pc, r1
   10f58:	bl	10a90 <fopen@plt>
   10f5c:	str	r0, [r4, #4]
   10f60:	ldr	r0, [pc, #120]	; 10fe0 <init_bat@@Base+0x130>
   10f64:	ldr	r1, [pc, #120]	; 10fe4 <init_bat@@Base+0x134>
   10f68:	add	r0, pc, r0
   10f6c:	add	r1, pc, r1
   10f70:	bl	10a90 <fopen@plt>
   10f74:	cmp	r0, #0
   10f78:	str	r0, [r4, #8]
   10f7c:	bne	10f98 <init_bat@@Base+0xe8>
   10f80:	ldr	r0, [pc, #96]	; 10fe8 <init_bat@@Base+0x138>
   10f84:	ldr	r1, [pc, #96]	; 10fec <init_bat@@Base+0x13c>
   10f88:	add	r0, pc, r0
   10f8c:	add	r1, pc, r1
   10f90:	bl	10a90 <fopen@plt>
   10f94:	str	r0, [r4, #8]
   10f98:	mov	r0, r5
   10f9c:	pop	{r4, r5, r6, sl, fp, lr}
   10fa0:	b	10b50 <fclose@plt>
   10fa4:	mov	r0, #0
   10fa8:	strb	r0, [r4, #24]
   10fac:	str	r0, [r4]
   10fb0:	str	r0, [r4, #4]
   10fb4:	str	r0, [r4, #8]
   10fb8:	pop	{r4, r5, r6, sl, fp, pc}
   10fbc:	andeq	r0, r0, r6, asr #9
   10fc0:	andeq	r0, r0, fp, ror #9
   10fc4:	ldrdeq	r0, [r0], -r1
   10fc8:	andeq	r0, r0, fp, asr #9
   10fcc:	andeq	r0, r0, r2, asr #9
   10fd0:	muleq	r0, fp, r4
   10fd4:	andeq	r0, r0, ip, asr #9
   10fd8:	ldrdeq	r0, [r0], -r8
   10fdc:	andeq	r0, r0, pc, asr r4
   10fe0:	andeq	r0, r0, r8, ror #9
   10fe4:	andeq	r0, r0, r7, asr #8
   10fe8:	andeq	r0, r0, pc, ror #9
   10fec:	andeq	r0, r0, r7, lsr #8

00010ff0 <close_bat@@Base>:
   10ff0:	push	{r4, sl, fp, lr}
   10ff4:	add	fp, sp, #8
   10ff8:	mov	r4, r0
   10ffc:	ldr	r0, [r0]
   11000:	cmp	r0, #0
   11004:	beq	1100c <close_bat@@Base+0x1c>
   11008:	bl	10b50 <fclose@plt>
   1100c:	ldr	r0, [r4, #4]
   11010:	cmp	r0, #0
   11014:	beq	1101c <close_bat@@Base+0x2c>
   11018:	bl	10b50 <fclose@plt>
   1101c:	ldr	r0, [r4, #8]
   11020:	cmp	r0, #0
   11024:	popeq	{r4, sl, fp, pc}
   11028:	pop	{r4, sl, fp, lr}
   1102c:	b	10b50 <fclose@plt>

00011030 <bat@@Base>:
   11030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11034:	add	fp, sp, #28
   11038:	sub	sp, sp, #20
   1103c:	mov	r5, r0
   11040:	ldr	r0, [r0]
   11044:	str	r2, [sp, #16]
   11048:	mov	r8, r1
   1104c:	bl	10e44 <read_int@@Base>
   11050:	mov	r9, r0
   11054:	ldr	r0, [r5, #4]
   11058:	mov	sl, r1
   1105c:	bl	10e44 <read_int@@Base>
   11060:	mov	r7, r0
   11064:	ldr	r0, [r5, #8]
   11068:	mov	r4, r1
   1106c:	bl	10e44 <read_int@@Base>
   11070:	str	r1, [sp, #12]
   11074:	mov	r1, #100	; 0x64
   11078:	mov	r6, r0
   1107c:	umull	r0, r2, r7, r1
   11080:	mla	r1, r4, r1, r2
   11084:	ldrd	r2, [r5, #16]
   11088:	bl	11158 <bat@@Base+0x128>
   1108c:	mov	r5, r0
   11090:	orrs	r0, r9, sl
   11094:	beq	110b8 <bat@@Base+0x88>
   11098:	ldr	r2, [pc, #172]	; 1114c <bat@@Base+0x11c>
   1109c:	ldr	r1, [sp, #16]
   110a0:	mov	r0, r8
   110a4:	add	r2, pc, r2
   110a8:	mov	r3, r5
   110ac:	sub	sp, fp, #28
   110b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110b4:	b	10b38 <snprintf@plt>
   110b8:	ldr	r0, [sp, #12]
   110bc:	ldr	sl, [sp, #16]
   110c0:	mov	r9, r8
   110c4:	orrs	r0, r6, r0
   110c8:	beq	11138 <bat@@Base+0x108>
   110cc:	ldr	r8, [sp, #12]
   110d0:	mov	r0, r7
   110d4:	mov	r1, r4
   110d8:	mov	r2, r6
   110dc:	mov	r3, r8
   110e0:	bl	11158 <bat@@Base+0x128>
   110e4:	str	r0, [sp, #8]
   110e8:	mov	r0, #60	; 0x3c
   110ec:	rsb	r2, r4, r4, lsl #4
   110f0:	mov	r3, r8
   110f4:	umull	r0, r1, r7, r0
   110f8:	add	r1, r1, r2, lsl #2
   110fc:	mov	r2, r6
   11100:	bl	11158 <bat@@Base+0x128>
   11104:	mov	r2, #60	; 0x3c
   11108:	mov	r3, #0
   1110c:	bl	11158 <bat@@Base+0x128>
   11110:	ldr	r0, [sp, #8]
   11114:	mov	r1, sl
   11118:	mov	r3, r5
   1111c:	stm	sp, {r0, r2}
   11120:	mov	r0, r9
   11124:	ldr	r2, [pc, #40]	; 11154 <bat@@Base+0x124>
   11128:	add	r2, pc, r2
   1112c:	bl	10b38 <snprintf@plt>
   11130:	sub	sp, fp, #28
   11134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11138:	ldr	r2, [pc, #16]	; 11150 <bat@@Base+0x120>
   1113c:	mov	r0, r9
   11140:	mov	r1, sl
   11144:	add	r2, pc, r2
   11148:	b	110a8 <bat@@Base+0x78>
   1114c:	strdeq	r0, [r0], -ip
   11150:	andeq	r0, r0, fp, ror r3
   11154:	andeq	r0, r0, r3, lsl #7
   11158:	cmp	r3, #0
   1115c:	cmpeq	r2, #0
   11160:	bne	11178 <bat@@Base+0x148>
   11164:	cmp	r1, #0
   11168:	cmpeq	r0, #0
   1116c:	mvnne	r1, #0
   11170:	mvnne	r0, #0
   11174:	b	11194 <bat@@Base+0x164>
   11178:	sub	sp, sp, #8
   1117c:	push	{sp, lr}
   11180:	bl	111a4 <bat@@Base+0x174>
   11184:	ldr	lr, [sp, #4]
   11188:	add	sp, sp, #8
   1118c:	pop	{r2, r3}
   11190:	bx	lr
   11194:	push	{r1, lr}
   11198:	mov	r0, #8
   1119c:	bl	10a84 <raise@plt>
   111a0:	pop	{r1, pc}
   111a4:	cmp	r1, r3
   111a8:	cmpeq	r0, r2
   111ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111b0:	mov	r4, r0
   111b4:	movcc	r0, #0
   111b8:	mov	r5, r1
   111bc:	ldr	lr, [sp, #36]	; 0x24
   111c0:	movcc	r1, r0
   111c4:	bcc	112c0 <bat@@Base+0x290>
   111c8:	cmp	r3, #0
   111cc:	clzeq	ip, r2
   111d0:	clzne	ip, r3
   111d4:	addeq	ip, ip, #32
   111d8:	cmp	r5, #0
   111dc:	clzeq	r1, r4
   111e0:	addeq	r1, r1, #32
   111e4:	clzne	r1, r5
   111e8:	sub	ip, ip, r1
   111ec:	sub	sl, ip, #32
   111f0:	lsl	r9, r3, ip
   111f4:	rsb	fp, ip, #32
   111f8:	orr	r9, r9, r2, lsl sl
   111fc:	orr	r9, r9, r2, lsr fp
   11200:	lsl	r8, r2, ip
   11204:	cmp	r5, r9
   11208:	cmpeq	r4, r8
   1120c:	movcc	r0, #0
   11210:	movcc	r1, r0
   11214:	bcc	11230 <bat@@Base+0x200>
   11218:	mov	r0, #1
   1121c:	subs	r4, r4, r8
   11220:	lsl	r1, r0, sl
   11224:	orr	r1, r1, r0, lsr fp
   11228:	lsl	r0, r0, ip
   1122c:	sbc	r5, r5, r9
   11230:	cmp	ip, #0
   11234:	beq	112c0 <bat@@Base+0x290>
   11238:	lsr	r6, r8, #1
   1123c:	orr	r6, r6, r9, lsl #31
   11240:	lsr	r7, r9, #1
   11244:	mov	r2, ip
   11248:	b	1126c <bat@@Base+0x23c>
   1124c:	subs	r3, r4, r6
   11250:	sbc	r8, r5, r7
   11254:	adds	r3, r3, r3
   11258:	adc	r8, r8, r8
   1125c:	adds	r4, r3, #1
   11260:	adc	r5, r8, #0
   11264:	subs	r2, r2, #1
   11268:	beq	11288 <bat@@Base+0x258>
   1126c:	cmp	r5, r7
   11270:	cmpeq	r4, r6
   11274:	bcs	1124c <bat@@Base+0x21c>
   11278:	adds	r4, r4, r4
   1127c:	adc	r5, r5, r5
   11280:	subs	r2, r2, #1
   11284:	bne	1126c <bat@@Base+0x23c>
   11288:	lsr	r3, r4, ip
   1128c:	orr	r3, r3, r5, lsl fp
   11290:	lsr	r2, r5, ip
   11294:	orr	r3, r3, r5, lsr sl
   11298:	adds	r0, r0, r4
   1129c:	mov	r4, r3
   112a0:	lsl	r3, r2, ip
   112a4:	orr	r3, r3, r4, lsl sl
   112a8:	lsl	ip, r4, ip
   112ac:	orr	r3, r3, r4, lsr fp
   112b0:	adc	r1, r1, r5
   112b4:	subs	r0, r0, ip
   112b8:	mov	r5, r2
   112bc:	sbc	r1, r1, r3
   112c0:	cmp	lr, #0
   112c4:	strdne	r4, [lr]
   112c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000112cc <__libc_csu_init@@Base>:
   112cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   112d0:	mov	r7, r0
   112d4:	ldr	r6, [pc, #72]	; 11324 <__libc_csu_init@@Base+0x58>
   112d8:	ldr	r5, [pc, #72]	; 11328 <__libc_csu_init@@Base+0x5c>
   112dc:	add	r6, pc, r6
   112e0:	add	r5, pc, r5
   112e4:	sub	r6, r6, r5
   112e8:	mov	r8, r1
   112ec:	mov	r9, r2
   112f0:	bl	10a64 <raise@plt-0x20>
   112f4:	asrs	r6, r6, #2
   112f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   112fc:	mov	r4, #0
   11300:	add	r4, r4, #1
   11304:	ldr	r3, [r5], #4
   11308:	mov	r2, r9
   1130c:	mov	r1, r8
   11310:	mov	r0, r7
   11314:	blx	r3
   11318:	cmp	r6, r4
   1131c:	bne	11300 <__libc_csu_init@@Base+0x34>
   11320:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11324:	andeq	r0, r1, r0, lsr #24
   11328:	andeq	r0, r1, r8, lsl ip

0001132c <__libc_csu_fini@@Base>:
   1132c:	bx	lr

Disassembly of section .fini:

00011330 <.fini>:
   11330:	push	{r3, lr}
   11334:	pop	{r3, pc}
