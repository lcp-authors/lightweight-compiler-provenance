
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010788 <.init>:
   10788:	push	{r3, lr}
   1078c:	bl	109e0 <_start@@Base+0x3c>
   10790:	pop	{r3, pc}

Disassembly of section .plt:

00010794 <strcmp@plt-0x14>:
   10794:	push	{lr}		; (str lr, [sp, #-4]!)
   10798:	ldr	lr, [pc, #4]	; 107a4 <strcmp@plt-0x4>
   1079c:	add	lr, pc, lr
   107a0:	ldr	pc, [lr, #8]!
   107a4:	andeq	r1, r1, ip, asr r8

000107a8 <strcmp@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2140]!	; 0x85c

000107b4 <printf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2132]!	; 0x854

000107c0 <fopen@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2124]!	; 0x84c

000107cc <free@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2116]!	; 0x844

000107d8 <ftell@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2108]!	; 0x83c

000107e4 <rewind@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2100]!	; 0x834

000107f0 <fwrite@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2092]!	; 0x82c

000107fc <fread@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2084]!	; 0x824

00010808 <puts@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2076]!	; 0x81c

00010814 <malloc@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2068]!	; 0x814

00010820 <__libc_start_main@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2060]!	; 0x80c

0001082c <__gmon_start__@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2052]!	; 0x804

00010838 <exit@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2044]!	; 0x7fc

00010844 <fclose@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2036]!	; 0x7f4

00010850 <fseek@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #2028]!	; 0x7ec

0001085c <abort@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #2020]!	; 0x7e4

00010868 <__assert_fail@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #2012]!	; 0x7dc

Disassembly of section .text:

00010874 <main@@Base-0xd8>:
   10874:	push	{r4, lr}
   10878:	mov	r2, #218	; 0xda
   1087c:	ldr	r3, [pc, #8]	; 1088c <__assert_fail@plt+0x24>
   10880:	ldr	r1, [pc, #8]	; 10890 <__assert_fail@plt+0x28>
   10884:	ldr	r0, [pc, #8]	; 10894 <__assert_fail@plt+0x2c>
   10888:	bl	10868 <__assert_fail@plt>
   1088c:	andeq	r1, r1, r0, ror r6
   10890:	andeq	r1, r1, r0, ror #14
   10894:	strdeq	r1, [r1], -r8
   10898:	push	{r4, lr}
   1089c:	mov	r2, #195	; 0xc3
   108a0:	ldr	r3, [pc, #8]	; 108b0 <__assert_fail@plt+0x48>
   108a4:	ldr	r1, [pc, #8]	; 108b4 <__assert_fail@plt+0x4c>
   108a8:	ldr	r0, [pc, #8]	; 108b8 <__assert_fail@plt+0x50>
   108ac:	bl	10868 <__assert_fail@plt>
   108b0:	andeq	r1, r1, r8, lsl #13
   108b4:	andeq	r1, r1, r0, ror #14
   108b8:	strdeq	r1, [r1], -r8
   108bc:	push	{r4, lr}
   108c0:	mov	r2, #204	; 0xcc
   108c4:	ldr	r3, [pc, #8]	; 108d4 <__assert_fail@plt+0x6c>
   108c8:	ldr	r1, [pc, #8]	; 108d8 <__assert_fail@plt+0x70>
   108cc:	ldr	r0, [pc, #8]	; 108dc <__assert_fail@plt+0x74>
   108d0:	bl	10868 <__assert_fail@plt>
   108d4:	andeq	r1, r1, r0, lsr #13
   108d8:	andeq	r1, r1, r0, ror #14
   108dc:	strdeq	r1, [r1], -r8
   108e0:	push	{r4, lr}
   108e4:	mov	r2, #201	; 0xc9
   108e8:	ldr	r3, [pc, #8]	; 108f8 <__assert_fail@plt+0x90>
   108ec:	ldr	r1, [pc, #8]	; 108fc <__assert_fail@plt+0x94>
   108f0:	ldr	r0, [pc, #8]	; 10900 <__assert_fail@plt+0x98>
   108f4:	bl	10868 <__assert_fail@plt>
   108f8:	ldrdeq	r1, [r1], -ip
   108fc:	andeq	r1, r1, r0, ror #14
   10900:	strdeq	r1, [r1], -r8
   10904:	push	{r4, lr}
   10908:	mov	r2, #147	; 0x93
   1090c:	ldr	r3, [pc, #8]	; 1091c <__assert_fail@plt+0xb4>
   10910:	ldr	r1, [pc, #8]	; 10920 <__assert_fail@plt+0xb8>
   10914:	ldr	r0, [pc, #8]	; 10924 <__assert_fail@plt+0xbc>
   10918:	bl	10868 <__assert_fail@plt>
   1091c:	strdeq	r1, [r1], -r4
   10920:	andeq	r1, r1, r0, ror #14
   10924:	strdeq	r1, [r1], -r8
   10928:	push	{r4, lr}
   1092c:	mov	r2, #149	; 0x95
   10930:	ldr	r3, [pc, #8]	; 10940 <__assert_fail@plt+0xd8>
   10934:	ldr	r1, [pc, #8]	; 10944 <__assert_fail@plt+0xdc>
   10938:	ldr	r0, [pc, #8]	; 10948 <__assert_fail@plt+0xe0>
   1093c:	bl	10868 <__assert_fail@plt>
   10940:	andeq	r1, r1, r0, lsl r7
   10944:	andeq	r1, r1, r0, ror #14
   10948:	strdeq	r1, [r1], -r8

0001094c <main@@Base>:
   1094c:	sub	r3, r0, #1
   10950:	cmp	r3, #1
   10954:	bhi	10974 <main@@Base+0x28>
   10958:	cmp	r0, #2
   1095c:	ldr	r3, [pc, #52]	; 10998 <main@@Base+0x4c>
   10960:	ldreq	r2, [r1, #4]
   10964:	ldrne	r0, [r3]
   10968:	moveq	r0, r2
   1096c:	streq	r2, [r3]
   10970:	b	10b14 <test_schema@@Base>
   10974:	ldr	r3, [pc, #32]	; 1099c <main@@Base+0x50>
   10978:	push	{r4, lr}
   1097c:	mov	r2, #64	; 0x40
   10980:	mov	r1, #1
   10984:	ldr	r3, [r3]
   10988:	ldr	r0, [pc, #16]	; 109a0 <main@@Base+0x54>
   1098c:	bl	107f0 <fwrite@plt>
   10990:	mov	r0, #1
   10994:	bl	10838 <exit@plt>
   10998:	andeq	r2, r2, ip, asr r0
   1099c:	andeq	r2, r2, r0, rrx
   109a0:	andeq	r1, r1, r4, asr #20

000109a4 <_start@@Base>:
   109a4:	mov	fp, #0
   109a8:	mov	lr, #0
   109ac:	pop	{r1}		; (ldr r1, [sp], #4)
   109b0:	mov	r2, sp
   109b4:	push	{r2}		; (str r2, [sp, #-4]!)
   109b8:	push	{r0}		; (str r0, [sp, #-4]!)
   109bc:	ldr	ip, [pc, #16]	; 109d4 <_start@@Base+0x30>
   109c0:	push	{ip}		; (str ip, [sp, #-4]!)
   109c4:	ldr	r0, [pc, #12]	; 109d8 <_start@@Base+0x34>
   109c8:	ldr	r3, [pc, #12]	; 109dc <_start@@Base+0x38>
   109cc:	bl	10820 <__libc_start_main@plt>
   109d0:	bl	1085c <abort@plt>
   109d4:	andeq	r1, r1, r4, asr #12
   109d8:	andeq	r0, r1, ip, asr #18
   109dc:	andeq	r1, r1, r4, ror #11
   109e0:	ldr	r3, [pc, #20]	; 109fc <_start@@Base+0x58>
   109e4:	ldr	r2, [pc, #20]	; 10a00 <_start@@Base+0x5c>
   109e8:	add	r3, pc, r3
   109ec:	ldr	r2, [r3, r2]
   109f0:	cmp	r2, #0
   109f4:	bxeq	lr
   109f8:	b	1082c <__gmon_start__@plt>
   109fc:	andeq	r1, r1, r0, lsl r6
   10a00:	andeq	r0, r0, r0, asr r0
   10a04:	ldr	r3, [pc, #28]	; 10a28 <_start@@Base+0x84>
   10a08:	ldr	r0, [pc, #28]	; 10a2c <_start@@Base+0x88>
   10a0c:	sub	r3, r3, r0
   10a10:	cmp	r3, #6
   10a14:	bxls	lr
   10a18:	ldr	r3, [pc, #16]	; 10a30 <_start@@Base+0x8c>
   10a1c:	cmp	r3, #0
   10a20:	bxeq	lr
   10a24:	bx	r3
   10a28:	andeq	r2, r2, r3, rrx
   10a2c:	andeq	r2, r2, r0, rrx
   10a30:	andeq	r0, r0, r0
   10a34:	ldr	r1, [pc, #36]	; 10a60 <_start@@Base+0xbc>
   10a38:	ldr	r0, [pc, #36]	; 10a64 <_start@@Base+0xc0>
   10a3c:	sub	r1, r1, r0
   10a40:	asr	r1, r1, #2
   10a44:	add	r1, r1, r1, lsr #31
   10a48:	asrs	r1, r1, #1
   10a4c:	bxeq	lr
   10a50:	ldr	r3, [pc, #16]	; 10a68 <_start@@Base+0xc4>
   10a54:	cmp	r3, #0
   10a58:	bxeq	lr
   10a5c:	bx	r3
   10a60:	andeq	r2, r2, r0, rrx
   10a64:	andeq	r2, r2, r0, rrx
   10a68:	andeq	r0, r0, r0
   10a6c:	push	{r4, lr}
   10a70:	ldr	r4, [pc, #24]	; 10a90 <_start@@Base+0xec>
   10a74:	ldrb	r3, [r4]
   10a78:	cmp	r3, #0
   10a7c:	popne	{r4, pc}
   10a80:	bl	10a04 <_start@@Base+0x60>
   10a84:	mov	r3, #1
   10a88:	strb	r3, [r4]
   10a8c:	pop	{r4, pc}
   10a90:	andeq	r2, r2, r4, rrx
   10a94:	ldr	r0, [pc, #40]	; 10ac4 <_start@@Base+0x120>
   10a98:	ldr	r3, [r0]
   10a9c:	cmp	r3, #0
   10aa0:	bne	10aa8 <_start@@Base+0x104>
   10aa4:	b	10a34 <_start@@Base+0x90>
   10aa8:	ldr	r3, [pc, #24]	; 10ac8 <_start@@Base+0x124>
   10aac:	cmp	r3, #0
   10ab0:	beq	10aa4 <_start@@Base+0x100>
   10ab4:	push	{r4, lr}
   10ab8:	blx	r3
   10abc:	pop	{r4, lr}
   10ac0:	b	10a34 <_start@@Base+0x90>
   10ac4:	andeq	r1, r2, r4, lsl pc
   10ac8:	andeq	r0, r0, r0
   10acc:	push	{r4, lr}
   10ad0:	mov	r2, #215	; 0xd7
   10ad4:	ldr	r3, [pc, #8]	; 10ae4 <_start@@Base+0x140>
   10ad8:	ldr	r1, [pc, #8]	; 10ae8 <_start@@Base+0x144>
   10adc:	ldr	r0, [pc, #8]	; 10aec <_start@@Base+0x148>
   10ae0:	bl	10868 <__assert_fail@plt>
   10ae4:	andeq	r1, r1, r4, asr r6
   10ae8:	andeq	r1, r1, r0, ror #14
   10aec:	andeq	r1, r1, r0, asr #15
   10af0:	push	{r4, lr}
   10af4:	mov	r2, #192	; 0xc0
   10af8:	ldr	r3, [pc, #8]	; 10b08 <_start@@Base+0x164>
   10afc:	ldr	r1, [pc, #8]	; 10b0c <_start@@Base+0x168>
   10b00:	ldr	r0, [pc, #8]	; 10b10 <_start@@Base+0x16c>
   10b04:	bl	10868 <__assert_fail@plt>
   10b08:	andeq	r1, r1, r4, asr #13
   10b0c:	andeq	r1, r1, r0, ror #14
   10b10:	andeq	r1, r1, r0, asr #15

00010b14 <test_schema@@Base>:
   10b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b18:	sub	sp, sp, #20
   10b1c:	ldr	r1, [pc, #2620]	; 11560 <test_schema@@Base+0xa4c>
   10b20:	bl	107c0 <fopen@plt>
   10b24:	subs	r5, r0, #0
   10b28:	beq	10bdc <test_schema@@Base+0xc8>
   10b2c:	mov	r2, #2
   10b30:	mov	r1, #0
   10b34:	bl	10850 <fseek@plt>
   10b38:	mov	r0, r5
   10b3c:	bl	107d8 <ftell@plt>
   10b40:	ldr	r3, [pc, #2588]	; 11564 <test_schema@@Base+0xa50>
   10b44:	cmp	r0, r3
   10b48:	mov	r7, r0
   10b4c:	bhi	10bd4 <test_schema@@Base+0xc0>
   10b50:	mov	r0, r5
   10b54:	bl	107e4 <rewind@plt>
   10b58:	cmp	r7, #0
   10b5c:	movne	r0, r7
   10b60:	moveq	r0, #1
   10b64:	bl	10814 <malloc@plt>
   10b68:	subs	r8, r0, #0
   10b6c:	beq	10bd4 <test_schema@@Base+0xc0>
   10b70:	mov	r4, #0
   10b74:	mov	r9, #1
   10b78:	b	10b80 <test_schema@@Base+0x6c>
   10b7c:	add	r4, r4, r0
   10b80:	mov	r3, r5
   10b84:	sub	r2, r7, r4
   10b88:	mov	r1, r9
   10b8c:	add	r0, r8, r4
   10b90:	bl	107fc <fread@plt>
   10b94:	cmp	r0, #0
   10b98:	bne	10b7c <test_schema@@Base+0x68>
   10b9c:	cmp	r7, r4
   10ba0:	mov	r6, r0
   10ba4:	mov	r0, r5
   10ba8:	bne	10bf4 <test_schema@@Base+0xe0>
   10bac:	bl	10844 <fclose@plt>
   10bb0:	ldr	r3, [pc, #2480]	; 11568 <test_schema@@Base+0xa54>
   10bb4:	ldr	r2, [r8, #4]
   10bb8:	cmp	r2, r3
   10bbc:	beq	10c04 <test_schema@@Base+0xf0>
   10bc0:	ldr	r3, [pc, #2468]	; 1156c <test_schema@@Base+0xa58>
   10bc4:	mov	r2, #237	; 0xed
   10bc8:	ldr	r1, [pc, #2464]	; 11570 <test_schema@@Base+0xa5c>
   10bcc:	ldr	r0, [pc, #2464]	; 11574 <test_schema@@Base+0xa60>
   10bd0:	bl	10868 <__assert_fail@plt>
   10bd4:	mov	r0, r5
   10bd8:	bl	10844 <fclose@plt>
   10bdc:	ldr	r0, [pc, #2452]	; 11578 <test_schema@@Base+0xa64>
   10be0:	bl	10808 <puts@plt>
   10be4:	mvn	r6, #0
   10be8:	mov	r0, r6
   10bec:	add	sp, sp, #20
   10bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bf4:	bl	10844 <fclose@plt>
   10bf8:	mov	r0, r8
   10bfc:	bl	107cc <free@plt>
   10c00:	b	10bdc <test_schema@@Base+0xc8>
   10c04:	ldr	r2, [r8]
   10c08:	adds	r3, r8, r2
   10c0c:	beq	10bc0 <test_schema@@Base+0xac>
   10c10:	ldr	r2, [r8, r2]
   10c14:	sub	r2, r3, r2
   10c18:	ldrh	r1, [r2]
   10c1c:	cmp	r1, #5
   10c20:	bhi	10c38 <test_schema@@Base+0x124>
   10c24:	ldr	r3, [pc, #2368]	; 1156c <test_schema@@Base+0xa58>
   10c28:	mov	r2, #237	; 0xed
   10c2c:	ldr	r1, [pc, #2364]	; 11570 <test_schema@@Base+0xa5c>
   10c30:	ldr	r0, [pc, #2372]	; 1157c <test_schema@@Base+0xa68>
   10c34:	bl	10868 <__assert_fail@plt>
   10c38:	ldrh	r1, [r2, #4]
   10c3c:	cmp	r1, #0
   10c40:	beq	10c24 <test_schema@@Base+0x110>
   10c44:	ldr	r2, [r3, r1]
   10c48:	add	r3, r3, r1
   10c4c:	add	r2, r2, #4
   10c50:	adds	r4, r3, r2
   10c54:	beq	10d20 <test_schema@@Base+0x20c>
   10c58:	ldr	r1, [r4, #-4]
   10c5c:	cmp	r1, #0
   10c60:	beq	10d20 <test_schema@@Base+0x20c>
   10c64:	ldr	r3, [r3, r2]
   10c68:	adds	r0, r4, r3
   10c6c:	beq	1153c <test_schema@@Base+0xa28>
   10c70:	ldr	r3, [r4, r3]
   10c74:	sub	r3, r0, r3
   10c78:	ldrh	r2, [r3]
   10c7c:	cmp	r2, #5
   10c80:	bls	10d00 <test_schema@@Base+0x1ec>
   10c84:	ldrh	r2, [r3, #4]
   10c88:	cmp	r2, #0
   10c8c:	beq	10d00 <test_schema@@Base+0x1ec>
   10c90:	ldr	r7, [pc, #2280]	; 11580 <test_schema@@Base+0xa6c>
   10c94:	add	r9, r4, #4
   10c98:	mov	r5, r6
   10c9c:	mov	r3, r2
   10ca0:	ldr	r2, [r0, r3]
   10ca4:	add	r0, r0, r3
   10ca8:	add	r2, r2, #4
   10cac:	add	r2, r0, r2
   10cb0:	mov	r1, r5
   10cb4:	mov	r0, r7
   10cb8:	bl	107b4 <printf@plt>
   10cbc:	ldr	fp, [r4, #-4]
   10cc0:	add	r5, r5, #1
   10cc4:	cmp	r5, fp
   10cc8:	bcs	10d40 <test_schema@@Base+0x22c>
   10ccc:	mov	r3, r9
   10cd0:	add	r9, r9, #4
   10cd4:	ldr	r2, [r3]
   10cd8:	adds	r0, r3, r2
   10cdc:	beq	1153c <test_schema@@Base+0xa28>
   10ce0:	ldr	r3, [r3, r2]
   10ce4:	sub	r3, r0, r3
   10ce8:	ldrh	r2, [r3]
   10cec:	cmp	r2, #5
   10cf0:	bls	10d00 <test_schema@@Base+0x1ec>
   10cf4:	ldrh	r3, [r3, #4]
   10cf8:	cmp	r3, #0
   10cfc:	bne	10ca0 <test_schema@@Base+0x18c>
   10d00:	ldr	r3, [pc, #2172]	; 11584 <test_schema@@Base+0xa70>
   10d04:	mov	r2, #218	; 0xda
   10d08:	ldr	r1, [pc, #2144]	; 11570 <test_schema@@Base+0xa5c>
   10d0c:	ldr	r0, [pc, #2152]	; 1157c <test_schema@@Base+0xa68>
   10d10:	bl	10868 <__assert_fail@plt>
   10d14:	mov	sl, r9
   10d18:	cmp	r5, sl
   10d1c:	beq	10e10 <test_schema@@Base+0x2fc>
   10d20:	ldr	r0, [pc, #2144]	; 11588 <test_schema@@Base+0xa74>
   10d24:	bl	10808 <puts@plt>
   10d28:	mvn	r6, #0
   10d2c:	mov	r0, r8
   10d30:	bl	107cc <free@plt>
   10d34:	mov	r0, r6
   10d38:	add	sp, sp, #20
   10d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d40:	cmp	fp, #0
   10d44:	beq	10d20 <test_schema@@Base+0x20c>
   10d48:	ldr	r7, [pc, #2108]	; 1158c <test_schema@@Base+0xa78>
   10d4c:	sub	r9, fp, #1
   10d50:	mov	r5, r6
   10d54:	cmp	r5, r9
   10d58:	bcs	10d14 <test_schema@@Base+0x200>
   10d5c:	sub	sl, r9, r5
   10d60:	add	sl, r5, sl, lsr #1
   10d64:	cmp	fp, sl
   10d68:	add	r2, r4, sl, lsl #2
   10d6c:	bls	11540 <test_schema@@Base+0xa2c>
   10d70:	ldr	r3, [r4, sl, lsl #2]
   10d74:	adds	r1, r2, r3
   10d78:	beq	1153c <test_schema@@Base+0xa28>
   10d7c:	ldr	r2, [r2, r3]
   10d80:	sub	r2, r1, r2
   10d84:	ldrh	r3, [r2]
   10d88:	cmp	r3, #5
   10d8c:	bhi	10d9c <test_schema@@Base+0x288>
   10d90:	b	10d00 <test_schema@@Base+0x1ec>
   10d94:	mov	r9, sl
   10d98:	mov	sl, r3
   10d9c:	ldrh	r0, [r2, #4]
   10da0:	cmp	r0, #0
   10da4:	beq	10d00 <test_schema@@Base+0x1ec>
   10da8:	ldr	r3, [r1, r0]
   10dac:	add	r0, r1, r0
   10db0:	add	r3, r3, #4
   10db4:	add	r0, r0, r3
   10db8:	mov	r1, r7
   10dbc:	bl	107a8 <strcmp@plt>
   10dc0:	cmp	r0, #0
   10dc4:	blt	10e08 <test_schema@@Base+0x2f4>
   10dc8:	cmp	r5, sl
   10dcc:	bcs	10d18 <test_schema@@Base+0x204>
   10dd0:	sub	r3, sl, r5
   10dd4:	add	r3, r5, r3, lsr #1
   10dd8:	cmp	fp, r3
   10ddc:	add	r0, r4, r3, lsl #2
   10de0:	bls	11540 <test_schema@@Base+0xa2c>
   10de4:	ldr	r2, [r4, r3, lsl #2]
   10de8:	adds	r1, r0, r2
   10dec:	beq	1153c <test_schema@@Base+0xa28>
   10df0:	ldr	r2, [r0, r2]
   10df4:	sub	r2, r1, r2
   10df8:	ldrh	r0, [r2]
   10dfc:	cmp	r0, #5
   10e00:	bls	10d00 <test_schema@@Base+0x1ec>
   10e04:	b	10d94 <test_schema@@Base+0x280>
   10e08:	add	r5, sl, #1
   10e0c:	b	10d54 <test_schema@@Base+0x240>
   10e10:	cmp	fp, r5
   10e14:	add	r2, r4, r5, lsl #2
   10e18:	bls	11558 <test_schema@@Base+0xa44>
   10e1c:	ldr	r3, [r4, r5, lsl #2]
   10e20:	adds	r7, r2, r3
   10e24:	beq	1153c <test_schema@@Base+0xa28>
   10e28:	ldr	r9, [r2, r3]
   10e2c:	sub	r9, r7, r9
   10e30:	ldrh	r4, [r9]
   10e34:	cmp	r4, #5
   10e38:	bls	10d00 <test_schema@@Base+0x1ec>
   10e3c:	ldrh	r3, [r9, #4]
   10e40:	cmp	r3, #0
   10e44:	beq	10d00 <test_schema@@Base+0x1ec>
   10e48:	ldr	r0, [r7, r3]
   10e4c:	add	r3, r7, r3
   10e50:	add	r0, r0, #4
   10e54:	add	r0, r3, r0
   10e58:	ldr	r1, [pc, #1836]	; 1158c <test_schema@@Base+0xa78>
   10e5c:	bl	107a8 <strcmp@plt>
   10e60:	cmp	r0, #0
   10e64:	bne	10d20 <test_schema@@Base+0x20c>
   10e68:	cmp	r4, #7
   10e6c:	bhi	10e84 <test_schema@@Base+0x370>
   10e70:	ldr	r3, [pc, #1816]	; 11590 <test_schema@@Base+0xa7c>
   10e74:	mov	r2, #224	; 0xe0
   10e78:	ldr	r1, [pc, #1776]	; 11570 <test_schema@@Base+0xa5c>
   10e7c:	ldr	r0, [pc, #1784]	; 1157c <test_schema@@Base+0xa68>
   10e80:	bl	10868 <__assert_fail@plt>
   10e84:	ldrh	r4, [r9, #6]
   10e88:	cmp	r4, #0
   10e8c:	beq	10e70 <test_schema@@Base+0x35c>
   10e90:	ldr	r3, [r7, r4]
   10e94:	add	r4, r7, r4
   10e98:	add	r3, r3, #4
   10e9c:	adds	r4, r4, r3
   10ea0:	beq	10fa4 <test_schema@@Base+0x490>
   10ea4:	ldr	r7, [r4, #-4]
   10ea8:	cmp	r7, #0
   10eac:	beq	10fa4 <test_schema@@Base+0x490>
   10eb0:	sub	r3, r7, #1
   10eb4:	ldr	sl, [pc, #1752]	; 11594 <test_schema@@Base+0xa80>
   10eb8:	str	r5, [sp, #8]
   10ebc:	mov	fp, r6
   10ec0:	mov	r5, r4
   10ec4:	mov	r4, r3
   10ec8:	str	r3, [sp, #4]
   10ecc:	cmp	fp, r4
   10ed0:	bcs	10f90 <test_schema@@Base+0x47c>
   10ed4:	sub	r9, r4, fp
   10ed8:	add	r9, fp, r9, lsr #1
   10edc:	cmp	r7, r9
   10ee0:	add	r1, r5, r9, lsl #2
   10ee4:	bls	11528 <test_schema@@Base+0xa14>
   10ee8:	ldr	r3, [r5, r9, lsl #2]
   10eec:	adds	ip, r1, r3
   10ef0:	beq	11524 <test_schema@@Base+0xa10>
   10ef4:	ldr	r1, [r1, r3]
   10ef8:	sub	r1, ip, r1
   10efc:	ldrh	r3, [r1]
   10f00:	cmp	r3, #5
   10f04:	bhi	10f14 <test_schema@@Base+0x400>
   10f08:	b	10f7c <test_schema@@Base+0x468>
   10f0c:	mov	r4, r9
   10f10:	mov	r9, r3
   10f14:	ldrh	r0, [r1, #4]
   10f18:	cmp	r0, #0
   10f1c:	beq	10f7c <test_schema@@Base+0x468>
   10f20:	ldr	r3, [ip, r0]
   10f24:	add	r0, ip, r0
   10f28:	add	r3, r3, #4
   10f2c:	add	r0, r0, r3
   10f30:	mov	r1, sl
   10f34:	bl	107a8 <strcmp@plt>
   10f38:	cmp	r0, #0
   10f3c:	blt	10fb4 <test_schema@@Base+0x4a0>
   10f40:	cmp	fp, r9
   10f44:	bcs	10f94 <test_schema@@Base+0x480>
   10f48:	sub	r3, r9, fp
   10f4c:	add	r3, fp, r3, lsr #1
   10f50:	cmp	r7, r3
   10f54:	add	r0, r5, r3, lsl #2
   10f58:	bls	11528 <test_schema@@Base+0xa14>
   10f5c:	ldr	r1, [r5, r3, lsl #2]
   10f60:	adds	ip, r0, r1
   10f64:	beq	11524 <test_schema@@Base+0xa10>
   10f68:	ldr	r1, [r0, r1]
   10f6c:	sub	r1, ip, r1
   10f70:	ldrh	r0, [r1]
   10f74:	cmp	r0, #5
   10f78:	bhi	10f0c <test_schema@@Base+0x3f8>
   10f7c:	ldr	r3, [pc, #1556]	; 11598 <test_schema@@Base+0xa84>
   10f80:	mov	r2, #195	; 0xc3
   10f84:	ldr	r1, [pc, #1508]	; 11570 <test_schema@@Base+0xa5c>
   10f88:	ldr	r0, [pc, #1516]	; 1157c <test_schema@@Base+0xa68>
   10f8c:	bl	10868 <__assert_fail@plt>
   10f90:	mov	r9, r4
   10f94:	cmp	r9, fp
   10f98:	mov	r4, r5
   10f9c:	ldr	r5, [sp, #8]
   10fa0:	beq	10fbc <test_schema@@Base+0x4a8>
   10fa4:	ldr	r0, [pc, #1520]	; 1159c <test_schema@@Base+0xa88>
   10fa8:	bl	10808 <puts@plt>
   10fac:	mvn	r6, #0
   10fb0:	b	10d2c <test_schema@@Base+0x218>
   10fb4:	add	fp, r9, #1
   10fb8:	b	10ecc <test_schema@@Base+0x3b8>
   10fbc:	cmp	r7, r9
   10fc0:	add	r2, r4, r9, lsl #2
   10fc4:	bls	11554 <test_schema@@Base+0xa40>
   10fc8:	ldr	r9, [r4, r9, lsl #2]
   10fcc:	adds	sl, r2, r9
   10fd0:	beq	11524 <test_schema@@Base+0xa10>
   10fd4:	ldr	fp, [r2, r9]
   10fd8:	str	r2, [sp, #12]
   10fdc:	sub	fp, sl, fp
   10fe0:	ldrh	r3, [fp]
   10fe4:	cmp	r3, #5
   10fe8:	str	r3, [sp, #8]
   10fec:	bls	10f7c <test_schema@@Base+0x468>
   10ff0:	ldrh	r1, [fp, #4]
   10ff4:	cmp	r1, #0
   10ff8:	beq	10f7c <test_schema@@Base+0x468>
   10ffc:	ldr	r0, [sl, r1]
   11000:	add	r1, sl, r1
   11004:	add	r0, r0, #4
   11008:	add	r0, r1, r0
   1100c:	ldr	r1, [pc, #1408]	; 11594 <test_schema@@Base+0xa80>
   11010:	bl	107a8 <strcmp@plt>
   11014:	ldr	r3, [sp, #8]
   11018:	ldr	r2, [sp, #12]
   1101c:	cmp	r0, #0
   11020:	bne	10fa4 <test_schema@@Base+0x490>
   11024:	cmp	r3, #13
   11028:	bhi	110ac <test_schema@@Base+0x598>
   1102c:	ldr	r0, [pc, #1388]	; 115a0 <test_schema@@Base+0xa8c>
   11030:	str	r2, [sp, #4]
   11034:	bl	10808 <puts@plt>
   11038:	ldr	r2, [sp, #4]
   1103c:	ldr	r3, [r2, r9]
   11040:	sub	r3, sl, r3
   11044:	ldrh	r1, [r3]
   11048:	cmp	r1, #5
   1104c:	bls	10f7c <test_schema@@Base+0x468>
   11050:	ldrh	r3, [r3, #4]
   11054:	cmp	r3, #0
   11058:	beq	10f7c <test_schema@@Base+0x468>
   1105c:	ldr	r1, [sl, r3]
   11060:	add	r3, sl, r3
   11064:	add	r1, r1, #4
   11068:	add	r1, r3, r1
   1106c:	ldr	r0, [pc, #1328]	; 115a4 <test_schema@@Base+0xa90>
   11070:	bl	107b4 <printf@plt>
   11074:	ldr	r2, [sp, #4]
   11078:	ldr	r3, [r2, r9]
   1107c:	sub	r3, sl, r3
   11080:	ldrh	r2, [r3]
   11084:	cmp	r2, #13
   11088:	bls	11518 <test_schema@@Base+0xa04>
   1108c:	ldrh	r3, [r3, #12]
   11090:	cmp	r3, #0
   11094:	beq	11518 <test_schema@@Base+0xa04>
   11098:	ldrd	r2, [r3, sl]
   1109c:	ldr	r0, [pc, #1284]	; 115a8 <test_schema@@Base+0xa94>
   110a0:	bl	107b4 <printf@plt>
   110a4:	mvn	r6, #0
   110a8:	b	10d2c <test_schema@@Base+0x218>
   110ac:	ldrh	r3, [fp, #12]
   110b0:	cmp	r3, #0
   110b4:	beq	1102c <test_schema@@Base+0x518>
   110b8:	ldrd	r0, [sl, r3]
   110bc:	cmp	r1, #0
   110c0:	cmpeq	r0, #150	; 0x96
   110c4:	bne	1102c <test_schema@@Base+0x518>
   110c8:	ldrh	r2, [fp, #6]
   110cc:	cmp	r2, #0
   110d0:	beq	11280 <test_schema@@Base+0x76c>
   110d4:	ldr	r3, [sl, r2]
   110d8:	add	sl, sl, r2
   110dc:	adds	r2, sl, r3
   110e0:	beq	1155c <test_schema@@Base+0xa48>
   110e4:	ldr	r3, [sl, r3]
   110e8:	sub	r3, r2, r3
   110ec:	ldrh	r1, [r3]
   110f0:	cmp	r1, #5
   110f4:	bhi	11108 <test_schema@@Base+0x5f4>
   110f8:	ldr	r0, [pc, #1196]	; 115ac <test_schema@@Base+0xa98>
   110fc:	bl	10808 <puts@plt>
   11100:	mvn	r6, #0
   11104:	b	10d2c <test_schema@@Base+0x218>
   11108:	ldrh	r3, [r3, #4]
   1110c:	cmp	r3, #0
   11110:	beq	110f8 <test_schema@@Base+0x5e4>
   11114:	ldrsb	r3, [r2, r3]
   11118:	cmp	r3, #5
   1111c:	bne	110f8 <test_schema@@Base+0x5e4>
   11120:	ldr	r3, [sp, #4]
   11124:	ldr	sl, [pc, #1156]	; 115b0 <test_schema@@Base+0xa9c>
   11128:	str	r5, [sp, #8]
   1112c:	mov	r9, r6
   11130:	mov	r5, r4
   11134:	mov	r4, r3
   11138:	cmp	r9, r4
   1113c:	bcs	111ec <test_schema@@Base+0x6d8>
   11140:	sub	fp, r4, r9
   11144:	add	fp, r9, fp, lsr #1
   11148:	cmp	r7, fp
   1114c:	add	r1, r5, fp, lsl #2
   11150:	bls	11528 <test_schema@@Base+0xa14>
   11154:	ldr	r3, [r5, fp, lsl #2]
   11158:	adds	ip, r1, r3
   1115c:	beq	11524 <test_schema@@Base+0xa10>
   11160:	ldr	r1, [r1, r3]
   11164:	sub	r1, ip, r1
   11168:	ldrh	r3, [r1]
   1116c:	cmp	r3, #5
   11170:	bhi	11180 <test_schema@@Base+0x66c>
   11174:	b	10f7c <test_schema@@Base+0x468>
   11178:	mov	r4, fp
   1117c:	mov	fp, r3
   11180:	ldrh	r0, [r1, #4]
   11184:	cmp	r0, #0
   11188:	beq	10f7c <test_schema@@Base+0x468>
   1118c:	ldr	r3, [ip, r0]
   11190:	add	r0, ip, r0
   11194:	add	r3, r3, #4
   11198:	add	r0, r0, r3
   1119c:	mov	r1, sl
   111a0:	bl	107a8 <strcmp@plt>
   111a4:	cmp	r0, #0
   111a8:	blt	11210 <test_schema@@Base+0x6fc>
   111ac:	cmp	fp, r9
   111b0:	bls	111f0 <test_schema@@Base+0x6dc>
   111b4:	sub	r3, fp, r9
   111b8:	add	r3, r9, r3, lsr #1
   111bc:	cmp	r7, r3
   111c0:	add	r1, r5, r3, lsl #2
   111c4:	bls	11528 <test_schema@@Base+0xa14>
   111c8:	ldr	r0, [r5, r3, lsl #2]
   111cc:	adds	ip, r1, r0
   111d0:	beq	11524 <test_schema@@Base+0xa10>
   111d4:	ldr	r1, [r1, r0]
   111d8:	sub	r1, ip, r1
   111dc:	ldrh	r0, [r1]
   111e0:	cmp	r0, #5
   111e4:	bls	10f7c <test_schema@@Base+0x468>
   111e8:	b	11178 <test_schema@@Base+0x664>
   111ec:	mov	fp, r4
   111f0:	cmp	r9, fp
   111f4:	mov	r4, r5
   111f8:	ldr	r5, [sp, #8]
   111fc:	beq	11218 <test_schema@@Base+0x704>
   11200:	ldr	r0, [pc, #940]	; 115b4 <test_schema@@Base+0xaa0>
   11204:	bl	10808 <puts@plt>
   11208:	mvn	r6, #0
   1120c:	b	10d2c <test_schema@@Base+0x218>
   11210:	add	r9, fp, #1
   11214:	b	11138 <test_schema@@Base+0x624>
   11218:	cmp	r7, r9
   1121c:	add	r1, r4, r9, lsl #2
   11220:	bls	11554 <test_schema@@Base+0xa40>
   11224:	ldr	r3, [r4, r9, lsl #2]
   11228:	adds	sl, r1, r3
   1122c:	beq	11524 <test_schema@@Base+0xa10>
   11230:	ldr	r3, [r1, r3]
   11234:	sub	r3, sl, r3
   11238:	ldrh	fp, [r3]
   1123c:	cmp	fp, #5
   11240:	bls	10f7c <test_schema@@Base+0x468>
   11244:	ldrh	r2, [r3, #4]
   11248:	str	r3, [sp, #8]
   1124c:	cmp	r2, #0
   11250:	beq	10f7c <test_schema@@Base+0x468>
   11254:	ldr	r0, [sl, r2]
   11258:	add	r2, sl, r2
   1125c:	add	r0, r0, #4
   11260:	add	r0, r2, r0
   11264:	ldr	r1, [pc, #836]	; 115b0 <test_schema@@Base+0xa9c>
   11268:	bl	107a8 <strcmp@plt>
   1126c:	ldr	r3, [sp, #8]
   11270:	cmp	r0, #0
   11274:	bne	11200 <test_schema@@Base+0x6ec>
   11278:	cmp	fp, #7
   1127c:	bhi	11294 <test_schema@@Base+0x780>
   11280:	ldr	r3, [pc, #816]	; 115b8 <test_schema@@Base+0xaa4>
   11284:	mov	r2, #201	; 0xc9
   11288:	ldr	r1, [pc, #736]	; 11570 <test_schema@@Base+0xa5c>
   1128c:	ldr	r0, [pc, #744]	; 1157c <test_schema@@Base+0xa68>
   11290:	bl	10868 <__assert_fail@plt>
   11294:	ldrh	r3, [r3, #6]
   11298:	cmp	r3, #0
   1129c:	beq	11280 <test_schema@@Base+0x76c>
   112a0:	ldr	r2, [sl, r3]
   112a4:	add	r3, sl, r3
   112a8:	adds	r1, r3, r2
   112ac:	beq	1155c <test_schema@@Base+0xa48>
   112b0:	ldr	r3, [r3, r2]
   112b4:	sub	r3, r1, r3
   112b8:	ldrh	r2, [r3]
   112bc:	cmp	r2, #5
   112c0:	bhi	112d4 <test_schema@@Base+0x7c0>
   112c4:	ldr	r0, [pc, #752]	; 115bc <test_schema@@Base+0xaa8>
   112c8:	bl	10808 <puts@plt>
   112cc:	mvn	r6, #0
   112d0:	b	10d2c <test_schema@@Base+0x218>
   112d4:	ldrh	r0, [r3, #4]
   112d8:	cmp	r0, #0
   112dc:	beq	112c4 <test_schema@@Base+0x7b0>
   112e0:	ldrsb	r0, [r1, r0]
   112e4:	cmp	r0, #15
   112e8:	bne	112c4 <test_schema@@Base+0x7b0>
   112ec:	cmp	r2, #9
   112f0:	bhi	11304 <test_schema@@Base+0x7f0>
   112f4:	ldr	r0, [pc, #708]	; 115c0 <test_schema@@Base+0xaac>
   112f8:	bl	10808 <puts@plt>
   112fc:	mvn	r6, #0
   11300:	b	10d2c <test_schema@@Base+0x218>
   11304:	ldrh	r3, [r3, #8]
   11308:	cmp	r3, #0
   1130c:	beq	112f4 <test_schema@@Base+0x7e0>
   11310:	ldr	r3, [r1, r3]
   11314:	cmp	r5, r3
   11318:	bne	112f4 <test_schema@@Base+0x7e0>
   1131c:	ldr	sl, [pc, #672]	; 115c4 <test_schema@@Base+0xab0>
   11320:	ldr	r9, [sp, #4]
   11324:	cmp	r6, r9
   11328:	bcs	113d8 <test_schema@@Base+0x8c4>
   1132c:	sub	fp, r9, r6
   11330:	add	fp, r6, fp, lsr #1
   11334:	cmp	r7, fp
   11338:	add	r2, r4, fp, lsl #2
   1133c:	bls	11528 <test_schema@@Base+0xa14>
   11340:	ldr	r3, [r4, fp, lsl #2]
   11344:	adds	r1, r2, r3
   11348:	beq	11524 <test_schema@@Base+0xa10>
   1134c:	ldr	r2, [r2, r3]
   11350:	sub	r2, r1, r2
   11354:	ldrh	r3, [r2]
   11358:	cmp	r3, #5
   1135c:	bhi	1136c <test_schema@@Base+0x858>
   11360:	b	10f7c <test_schema@@Base+0x468>
   11364:	mov	r9, fp
   11368:	mov	fp, r3
   1136c:	ldrh	r0, [r2, #4]
   11370:	cmp	r0, #0
   11374:	beq	10f7c <test_schema@@Base+0x468>
   11378:	ldr	r3, [r1, r0]
   1137c:	add	r0, r1, r0
   11380:	add	r3, r3, #4
   11384:	add	r0, r0, r3
   11388:	mov	r1, sl
   1138c:	bl	107a8 <strcmp@plt>
   11390:	cmp	r0, #0
   11394:	blt	113f4 <test_schema@@Base+0x8e0>
   11398:	cmp	r6, fp
   1139c:	bcs	113dc <test_schema@@Base+0x8c8>
   113a0:	sub	r3, fp, r6
   113a4:	add	r3, r6, r3, lsr #1
   113a8:	cmp	r7, r3
   113ac:	add	r0, r4, r3, lsl #2
   113b0:	bls	11528 <test_schema@@Base+0xa14>
   113b4:	ldr	r2, [r4, r3, lsl #2]
   113b8:	adds	r1, r0, r2
   113bc:	beq	11524 <test_schema@@Base+0xa10>
   113c0:	ldr	r2, [r0, r2]
   113c4:	sub	r2, r1, r2
   113c8:	ldrh	r0, [r2]
   113cc:	cmp	r0, #5
   113d0:	bls	10f7c <test_schema@@Base+0x468>
   113d4:	b	11364 <test_schema@@Base+0x850>
   113d8:	mov	fp, r9
   113dc:	cmp	fp, r6
   113e0:	beq	113fc <test_schema@@Base+0x8e8>
   113e4:	ldr	r0, [pc, #476]	; 115c8 <test_schema@@Base+0xab4>
   113e8:	bl	10808 <puts@plt>
   113ec:	mvn	r6, #0
   113f0:	b	10d2c <test_schema@@Base+0x218>
   113f4:	add	r6, fp, #1
   113f8:	b	11324 <test_schema@@Base+0x810>
   113fc:	cmp	r7, fp
   11400:	add	r2, r4, fp, lsl #2
   11404:	bls	11554 <test_schema@@Base+0xa40>
   11408:	ldr	r3, [r4, fp, lsl #2]
   1140c:	adds	r4, r2, r3
   11410:	beq	11524 <test_schema@@Base+0xa10>
   11414:	ldr	r9, [r2, r3]
   11418:	sub	r9, r4, r9
   1141c:	ldrh	r7, [r9]
   11420:	cmp	r7, #5
   11424:	bls	10f7c <test_schema@@Base+0x468>
   11428:	ldrh	r3, [r9, #4]
   1142c:	cmp	r3, #0
   11430:	beq	10f7c <test_schema@@Base+0x468>
   11434:	ldr	r0, [r4, r3]
   11438:	add	r3, r4, r3
   1143c:	add	r0, r0, #4
   11440:	add	r0, r3, r0
   11444:	ldr	r1, [pc, #376]	; 115c4 <test_schema@@Base+0xab0>
   11448:	bl	107a8 <strcmp@plt>
   1144c:	subs	r6, r0, #0
   11450:	bne	113e4 <test_schema@@Base+0x8d0>
   11454:	cmp	r7, #7
   11458:	bls	11280 <test_schema@@Base+0x76c>
   1145c:	ldrh	r3, [r9, #6]
   11460:	cmp	r3, #0
   11464:	beq	11280 <test_schema@@Base+0x76c>
   11468:	ldr	r2, [r4, r3]
   1146c:	add	r3, r4, r3
   11470:	adds	r1, r3, r2
   11474:	beq	1155c <test_schema@@Base+0xa48>
   11478:	ldr	r3, [r3, r2]
   1147c:	sub	r3, r1, r3
   11480:	ldrh	r2, [r3]
   11484:	cmp	r2, #5
   11488:	bhi	1149c <test_schema@@Base+0x988>
   1148c:	ldr	r0, [pc, #312]	; 115cc <test_schema@@Base+0xab8>
   11490:	bl	10808 <puts@plt>
   11494:	mvn	r6, #0
   11498:	b	10d2c <test_schema@@Base+0x218>
   1149c:	ldrh	r0, [r3, #4]
   114a0:	cmp	r0, #0
   114a4:	beq	1148c <test_schema@@Base+0x978>
   114a8:	ldrsb	r0, [r1, r0]
   114ac:	cmp	r0, #14
   114b0:	bne	1148c <test_schema@@Base+0x978>
   114b4:	cmp	r2, #7
   114b8:	bhi	114cc <test_schema@@Base+0x9b8>
   114bc:	ldr	r0, [pc, #268]	; 115d0 <test_schema@@Base+0xabc>
   114c0:	bl	10808 <puts@plt>
   114c4:	mvn	r6, #0
   114c8:	b	10d2c <test_schema@@Base+0x218>
   114cc:	ldrh	r0, [r3, #6]
   114d0:	cmp	r0, #0
   114d4:	beq	114bc <test_schema@@Base+0x9a8>
   114d8:	ldrsb	r0, [r1, r0]
   114dc:	cmp	r0, #15
   114e0:	bne	114bc <test_schema@@Base+0x9a8>
   114e4:	cmp	r2, #9
   114e8:	bhi	114fc <test_schema@@Base+0x9e8>
   114ec:	ldr	r0, [pc, #224]	; 115d4 <test_schema@@Base+0xac0>
   114f0:	bl	10808 <puts@plt>
   114f4:	mvn	r6, #0
   114f8:	b	10d2c <test_schema@@Base+0x218>
   114fc:	ldrh	r3, [r3, #8]
   11500:	cmp	r3, #0
   11504:	beq	114ec <test_schema@@Base+0x9d8>
   11508:	ldr	r3, [r1, r3]
   1150c:	cmp	r5, r3
   11510:	beq	10d2c <test_schema@@Base+0x218>
   11514:	b	114ec <test_schema@@Base+0x9d8>
   11518:	mov	r2, #0
   1151c:	mov	r3, #0
   11520:	b	1109c <test_schema@@Base+0x588>
   11524:	bl	10898 <__assert_fail@plt+0x30>
   11528:	ldr	r3, [pc, #168]	; 115d8 <test_schema@@Base+0xac4>
   1152c:	mov	r2, #192	; 0xc0
   11530:	ldr	r1, [pc, #56]	; 11570 <test_schema@@Base+0xa5c>
   11534:	ldr	r0, [pc, #160]	; 115dc <test_schema@@Base+0xac8>
   11538:	bl	10868 <__assert_fail@plt>
   1153c:	bl	10874 <__assert_fail@plt+0xc>
   11540:	ldr	r3, [pc, #152]	; 115e0 <test_schema@@Base+0xacc>
   11544:	mov	r2, #215	; 0xd7
   11548:	ldr	r1, [pc, #32]	; 11570 <test_schema@@Base+0xa5c>
   1154c:	ldr	r0, [pc, #136]	; 115dc <test_schema@@Base+0xac8>
   11550:	bl	10868 <__assert_fail@plt>
   11554:	bl	10af0 <_start@@Base+0x14c>
   11558:	bl	10acc <_start@@Base+0x128>
   1155c:	bl	10904 <__assert_fail@plt+0x9c>
   11560:	andeq	r1, r1, r0, lsr #16
   11564:	andeq	r2, r0, r0, lsl r7
   11568:	movtpl	r4, #9794	; 0x2642
   1156c:	andeq	r1, r1, r8, lsr #14
   11570:	andeq	r1, r1, r0, ror #14
   11574:	strdeq	r1, [r1], -r8
   11578:	andeq	r1, r1, r0, lsl #20
   1157c:	andeq	r1, r1, r4, lsr #16
   11580:	andeq	r1, r1, r8, asr #16
   11584:	andeq	r1, r1, r0, ror r6
   11588:	andeq	r1, r1, r0, lsr #20
   1158c:	andeq	r1, r1, ip, asr r8
   11590:	andeq	r1, r1, r4, asr #14
   11594:	andeq	r1, r1, r4, ror r8
   11598:	andeq	r1, r1, r8, lsl #13
   1159c:	andeq	r1, r1, ip, ror r8
   115a0:	andeq	r1, r1, r8, lsr #17
   115a4:	andeq	r1, r1, ip, asr #17
   115a8:	ldrdeq	r1, [r1], -ip
   115ac:	andeq	r1, r1, r4, ror #17
   115b0:	andeq	r1, r1, r0, lsl #18
   115b4:	andeq	r1, r1, r8, lsl #18
   115b8:	ldrdeq	r1, [r1], -ip
   115bc:	andeq	r1, r1, r0, lsr #18
   115c0:	andeq	r1, r1, r8, lsr r9
   115c4:	andeq	r1, r1, r0, asr r9
   115c8:	andeq	r1, r1, r4, ror #18
   115cc:	andeq	r1, r1, r0, lsl #19
   115d0:	andeq	r1, r1, r8, lsr #19
   115d4:	ldrdeq	r1, [r1], -r8
   115d8:	andeq	r1, r1, r4, asr #13
   115dc:	andeq	r1, r1, r0, asr #15
   115e0:	andeq	r1, r1, r4, asr r6

000115e4 <__libc_csu_init@@Base>:
   115e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115e8:	mov	r7, r0
   115ec:	ldr	r6, [pc, #72]	; 1163c <__libc_csu_init@@Base+0x58>
   115f0:	ldr	r5, [pc, #72]	; 11640 <__libc_csu_init@@Base+0x5c>
   115f4:	add	r6, pc, r6
   115f8:	add	r5, pc, r5
   115fc:	sub	r6, r6, r5
   11600:	mov	r8, r1
   11604:	mov	r9, r2
   11608:	bl	10788 <strcmp@plt-0x20>
   1160c:	asrs	r6, r6, #2
   11610:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11614:	mov	r4, #0
   11618:	add	r4, r4, #1
   1161c:	ldr	r3, [r5], #4
   11620:	mov	r2, r9
   11624:	mov	r1, r8
   11628:	mov	r0, r7
   1162c:	blx	r3
   11630:	cmp	r6, r4
   11634:	bne	11618 <__libc_csu_init@@Base+0x34>
   11638:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1163c:	andeq	r0, r1, r4, lsl r9
   11640:	andeq	r0, r1, ip, lsl #18

00011644 <__libc_csu_fini@@Base>:
   11644:	bx	lr

Disassembly of section .fini:

00011648 <.fini>:
   11648:	push	{r3, lr}
   1164c:	pop	{r3, pc}
