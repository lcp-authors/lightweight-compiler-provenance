
../repos/inetutils/telnetd/telnetd:     file format elf32-littlearm


Disassembly of section .init:

00011748 <.init>:
   11748:	push	{r3, lr}
   1174c:	bl	11c30 <tcgetattr@plt+0x48>
   11750:	pop	{r3, pc}

Disassembly of section .plt:

00011754 <calloc@plt-0x14>:
   11754:	push	{lr}		; (str lr, [sp, #-4]!)
   11758:	ldr	lr, [pc, #4]	; 11764 <calloc@plt-0x4>
   1175c:	add	lr, pc, lr
   11760:	ldr	pc, [lr, #8]!
   11764:	muleq	r2, ip, r8

00011768 <calloc@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #32, 20	; 0x20000
   11770:	ldr	pc, [ip, #2204]!	; 0x89c

00011774 <fputs_unlocked@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #32, 20	; 0x20000
   1177c:	ldr	pc, [ip, #2196]!	; 0x894

00011780 <raise@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #32, 20	; 0x20000
   11788:	ldr	pc, [ip, #2188]!	; 0x88c

0001178c <strcmp@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #32, 20	; 0x20000
   11794:	ldr	pc, [ip, #2180]!	; 0x884

00011798 <strtol@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #32, 20	; 0x20000
   117a0:	ldr	pc, [ip, #2172]!	; 0x87c

000117a4 <setsockopt@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #32, 20	; 0x20000
   117ac:	ldr	pc, [ip, #2164]!	; 0x874

000117b0 <printf@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #32, 20	; 0x20000
   117b8:	ldr	pc, [ip, #2156]!	; 0x86c

000117bc <read@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #32, 20	; 0x20000
   117c4:	ldr	pc, [ip, #2148]!	; 0x864

000117c8 <memmove@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #32, 20	; 0x20000
   117d0:	ldr	pc, [ip, #2140]!	; 0x85c

000117d4 <strchrnul@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #32, 20	; 0x20000
   117dc:	ldr	pc, [ip, #2132]!	; 0x854

000117e0 <free@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #32, 20	; 0x20000
   117e8:	ldr	pc, [ip, #2124]!	; 0x84c

000117ec <gai_strerror@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #32, 20	; 0x20000
   117f4:	ldr	pc, [ip, #2116]!	; 0x844

000117f8 <strndup@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #32, 20	; 0x20000
   11800:	ldr	pc, [ip, #2108]!	; 0x83c

00011804 <pututxline@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #32, 20	; 0x20000
   1180c:	ldr	pc, [ip, #2100]!	; 0x834

00011810 <memcpy@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #32, 20	; 0x20000
   11818:	ldr	pc, [ip, #2092]!	; 0x82c

0001181c <signal@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #32, 20	; 0x20000
   11824:	ldr	pc, [ip, #2084]!	; 0x824

00011828 <time@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #32, 20	; 0x20000
   11830:	ldr	pc, [ip, #2076]!	; 0x81c

00011834 <fwrite_unlocked@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #32, 20	; 0x20000
   1183c:	ldr	pc, [ip, #2068]!	; 0x814

00011840 <memcmp@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #32, 20	; 0x20000
   11848:	ldr	pc, [ip, #2060]!	; 0x80c

0001184c <select@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #32, 20	; 0x20000
   11854:	ldr	pc, [ip, #2052]!	; 0x804

00011858 <sleep@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #32, 20	; 0x20000
   11860:	ldr	pc, [ip, #2044]!	; 0x7fc

00011864 <uname@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #32, 20	; 0x20000
   1186c:	ldr	pc, [ip, #2036]!	; 0x7f4

00011870 <strdup@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #32, 20	; 0x20000
   11878:	ldr	pc, [ip, #2028]!	; 0x7ec

0001187c <setutxent@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #32, 20	; 0x20000
   11884:	ldr	pc, [ip, #2020]!	; 0x7e4

00011888 <realloc@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #32, 20	; 0x20000
   11890:	ldr	pc, [ip, #2012]!	; 0x7dc

00011894 <strcasecmp@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #32, 20	; 0x20000
   1189c:	ldr	pc, [ip, #2004]!	; 0x7d4

000118a0 <funlockfile@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #32, 20	; 0x20000
   118a8:	ldr	pc, [ip, #1996]!	; 0x7cc

000118ac <cfsetospeed@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #32, 20	; 0x20000
   118b4:	ldr	pc, [ip, #1988]!	; 0x7c4

000118b8 <sigaction@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #32, 20	; 0x20000
   118c0:	ldr	pc, [ip, #1980]!	; 0x7bc

000118c4 <fwrite@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #32, 20	; 0x20000
   118cc:	ldr	pc, [ip, #1972]!	; 0x7b4

000118d0 <strcat@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #32, 20	; 0x20000
   118d8:	ldr	pc, [ip, #1964]!	; 0x7ac

000118dc <ioctl@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #32, 20	; 0x20000
   118e4:	ldr	pc, [ip, #1956]!	; 0x7a4

000118e8 <waitpid@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #32, 20	; 0x20000
   118f0:	ldr	pc, [ip, #1948]!	; 0x79c

000118f4 <tcsetattr@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #32, 20	; 0x20000
   118fc:	ldr	pc, [ip, #1940]!	; 0x794

00011900 <gettimeofday@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #32, 20	; 0x20000
   11908:	ldr	pc, [ip, #1932]!	; 0x78c

0001190c <error@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #32, 20	; 0x20000
   11914:	ldr	pc, [ip, #1924]!	; 0x784

00011918 <gethostname@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #32, 20	; 0x20000
   11920:	ldr	pc, [ip, #1916]!	; 0x77c

00011924 <getenv@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #32, 20	; 0x20000
   1192c:	ldr	pc, [ip, #1908]!	; 0x774

00011930 <malloc@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #32, 20	; 0x20000
   11938:	ldr	pc, [ip, #1900]!	; 0x76c

0001193c <__libc_start_main@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #32, 20	; 0x20000
   11944:	ldr	pc, [ip, #1892]!	; 0x764

00011948 <strerror@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #32, 20	; 0x20000
   11950:	ldr	pc, [ip, #1884]!	; 0x75c

00011954 <strftime@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #32, 20	; 0x20000
   1195c:	ldr	pc, [ip, #1876]!	; 0x754

00011960 <localtime@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #32, 20	; 0x20000
   11968:	ldr	pc, [ip, #1868]!	; 0x74c

0001196c <__ctype_tolower_loc@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #32, 20	; 0x20000
   11974:	ldr	pc, [ip, #1860]!	; 0x744

00011978 <__gmon_start__@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #32, 20	; 0x20000
   11980:	ldr	pc, [ip, #1852]!	; 0x73c

00011984 <mempcpy@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #32, 20	; 0x20000
   1198c:	ldr	pc, [ip, #1844]!	; 0x734

00011990 <__ctype_b_loc@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #32, 20	; 0x20000
   11998:	ldr	pc, [ip, #1836]!	; 0x72c

0001199c <getpid@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #32, 20	; 0x20000
   119a4:	ldr	pc, [ip, #1828]!	; 0x724

000119a8 <exit@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #32, 20	; 0x20000
   119b0:	ldr	pc, [ip, #1820]!	; 0x71c

000119b4 <strtoul@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #32, 20	; 0x20000
   119bc:	ldr	pc, [ip, #1812]!	; 0x714

000119c0 <strlen@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #32, 20	; 0x20000
   119c8:	ldr	pc, [ip, #1804]!	; 0x70c

000119cc <strchr@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #32, 20	; 0x20000
   119d4:	ldr	pc, [ip, #1796]!	; 0x704

000119d8 <setenv@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #32, 20	; 0x20000
   119e0:	ldr	pc, [ip, #1788]!	; 0x6fc

000119e4 <fprintf@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #32, 20	; 0x20000
   119ec:	ldr	pc, [ip, #1780]!	; 0x6f4

000119f0 <cfsetispeed@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #32, 20	; 0x20000
   119f8:	ldr	pc, [ip, #1772]!	; 0x6ec

000119fc <chown@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #32, 20	; 0x20000
   11a04:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a08 <execv@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #32, 20	; 0x20000
   11a10:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a14 <__errno_location@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #32, 20	; 0x20000
   11a1c:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a20 <snprintf@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #32, 20	; 0x20000
   11a28:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a2c <strerror_r@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #32, 20	; 0x20000
   11a34:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a38 <memset@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #32, 20	; 0x20000
   11a40:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a44 <strncpy@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #32, 20	; 0x20000
   11a4c:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a50 <write@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #32, 20	; 0x20000
   11a58:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a5c <memchr@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #32, 20	; 0x20000
   11a64:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a68 <fclose@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #32, 20	; 0x20000
   11a70:	ldr	pc, [ip, #1692]!	; 0x69c

00011a74 <getutxline@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #32, 20	; 0x20000
   11a7c:	ldr	pc, [ip, #1684]!	; 0x694

00011a80 <strtok@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #32, 20	; 0x20000
   11a88:	ldr	pc, [ip, #1676]!	; 0x68c

00011a8c <shutdown@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #32, 20	; 0x20000
   11a94:	ldr	pc, [ip, #1668]!	; 0x684

00011a98 <endutxent@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #32, 20	; 0x20000
   11aa0:	ldr	pc, [ip, #1660]!	; 0x67c

00011aa4 <__overflow@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #32, 20	; 0x20000
   11aac:	ldr	pc, [ip, #1652]!	; 0x674

00011ab0 <sigemptyset@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #32, 20	; 0x20000
   11ab8:	ldr	pc, [ip, #1644]!	; 0x66c

00011abc <getnameinfo@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #32, 20	; 0x20000
   11ac4:	ldr	pc, [ip, #1636]!	; 0x664

00011ac8 <strrchr@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #32, 20	; 0x20000
   11ad0:	ldr	pc, [ip, #1628]!	; 0x65c

00011ad4 <vfprintf@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #32, 20	; 0x20000
   11adc:	ldr	pc, [ip, #1620]!	; 0x654

00011ae0 <fputc@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #32, 20	; 0x20000
   11ae8:	ldr	pc, [ip, #1612]!	; 0x64c

00011aec <syslog@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #32, 20	; 0x20000
   11af4:	ldr	pc, [ip, #1604]!	; 0x644

00011af8 <updwtmpx@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #32, 20	; 0x20000
   11b00:	ldr	pc, [ip, #1596]!	; 0x63c

00011b04 <sprintf@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #32, 20	; 0x20000
   11b0c:	ldr	pc, [ip, #1588]!	; 0x634

00011b10 <openlog@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #32, 20	; 0x20000
   11b18:	ldr	pc, [ip, #1580]!	; 0x62c

00011b1c <flockfile@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #32, 20	; 0x20000
   11b24:	ldr	pc, [ip, #1572]!	; 0x624

00011b28 <vsnprintf@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #32, 20	; 0x20000
   11b30:	ldr	pc, [ip, #1564]!	; 0x61c

00011b34 <fopen64@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #32, 20	; 0x20000
   11b3c:	ldr	pc, [ip, #1556]!	; 0x614

00011b40 <qsort@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #32, 20	; 0x20000
   11b48:	ldr	pc, [ip, #1548]!	; 0x60c

00011b4c <getpeername@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #32, 20	; 0x20000
   11b54:	ldr	pc, [ip, #1540]!	; 0x604

00011b58 <freeaddrinfo@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #32, 20	; 0x20000
   11b60:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b64 <getaddrinfo@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #32, 20	; 0x20000
   11b6c:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b70 <umask@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #32, 20	; 0x20000
   11b78:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b7c <chmod@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #32, 20	; 0x20000
   11b84:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b88 <tgetent@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #32, 20	; 0x20000
   11b90:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b94 <unsetenv@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #32, 20	; 0x20000
   11b9c:	ldr	pc, [ip, #1492]!	; 0x5d4

00011ba0 <strncmp@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #32, 20	; 0x20000
   11ba8:	ldr	pc, [ip, #1484]!	; 0x5cc

00011bac <abort@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #32, 20	; 0x20000
   11bb4:	ldr	pc, [ip, #1476]!	; 0x5c4

00011bb8 <close@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #32, 20	; 0x20000
   11bc0:	ldr	pc, [ip, #1468]!	; 0x5bc

00011bc4 <send@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #32, 20	; 0x20000
   11bcc:	ldr	pc, [ip, #1460]!	; 0x5b4

00011bd0 <forkpty@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #32, 20	; 0x20000
   11bd8:	ldr	pc, [ip, #1452]!	; 0x5ac

00011bdc <__assert_fail@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #32, 20	; 0x20000
   11be4:	ldr	pc, [ip, #1444]!	; 0x5a4

00011be8 <tcgetattr@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #32, 20	; 0x20000
   11bf0:	ldr	pc, [ip, #1436]!	; 0x59c

Disassembly of section .text:

00011bf4 <argp_parse@@Base-0x7cb4>:
   11bf4:	mov	fp, #0
   11bf8:	mov	lr, #0
   11bfc:	pop	{r1}		; (ldr r1, [sp], #4)
   11c00:	mov	r2, sp
   11c04:	push	{r2}		; (str r2, [sp, #-4]!)
   11c08:	push	{r0}		; (str r0, [sp, #-4]!)
   11c0c:	ldr	ip, [pc, #16]	; 11c24 <tcgetattr@plt+0x3c>
   11c10:	push	{ip}		; (str ip, [sp, #-4]!)
   11c14:	ldr	r0, [pc, #12]	; 11c28 <tcgetattr@plt+0x40>
   11c18:	ldr	r3, [pc, #12]	; 11c2c <tcgetattr@plt+0x44>
   11c1c:	bl	1193c <__libc_start_main@plt>
   11c20:	bl	11bac <abort@plt>
   11c24:	strdeq	pc, [r1], -r0
   11c28:	andeq	r2, r1, r0, asr #25
   11c2c:	muleq	r1, r0, lr
   11c30:	ldr	r3, [pc, #20]	; 11c4c <tcgetattr@plt+0x64>
   11c34:	ldr	r2, [pc, #20]	; 11c50 <tcgetattr@plt+0x68>
   11c38:	add	r3, pc, r3
   11c3c:	ldr	r2, [r3, r2]
   11c40:	cmp	r2, #0
   11c44:	bxeq	lr
   11c48:	b	11978 <__gmon_start__@plt>
   11c4c:	andeq	r0, r2, r0, asr #7
   11c50:	muleq	r0, r0, r1
   11c54:	ldr	r3, [pc, #28]	; 11c78 <tcgetattr@plt+0x90>
   11c58:	ldr	r0, [pc, #28]	; 11c7c <tcgetattr@plt+0x94>
   11c5c:	sub	r3, r3, r0
   11c60:	cmp	r3, #6
   11c64:	bxls	lr
   11c68:	ldr	r3, [pc, #16]	; 11c80 <tcgetattr@plt+0x98>
   11c6c:	cmp	r3, #0
   11c70:	bxeq	lr
   11c74:	bx	r3
   11c78:	strdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   11c7c:	strdeq	r2, [r3], -ip
   11c80:	andeq	r0, r0, r0
   11c84:	ldr	r1, [pc, #36]	; 11cb0 <tcgetattr@plt+0xc8>
   11c88:	ldr	r0, [pc, #36]	; 11cb4 <tcgetattr@plt+0xcc>
   11c8c:	sub	r1, r1, r0
   11c90:	asr	r1, r1, #2
   11c94:	add	r1, r1, r1, lsr #31
   11c98:	asrs	r1, r1, #1
   11c9c:	bxeq	lr
   11ca0:	ldr	r3, [pc, #16]	; 11cb8 <tcgetattr@plt+0xd0>
   11ca4:	cmp	r3, #0
   11ca8:	bxeq	lr
   11cac:	bx	r3
   11cb0:	strdeq	r2, [r3], -ip
   11cb4:	strdeq	r2, [r3], -ip
   11cb8:	andeq	r0, r0, r0
   11cbc:	push	{r4, lr}
   11cc0:	ldr	r4, [pc, #24]	; 11ce0 <tcgetattr@plt+0xf8>
   11cc4:	ldrb	r3, [r4]
   11cc8:	cmp	r3, #0
   11ccc:	popne	{r4, pc}
   11cd0:	bl	11c54 <tcgetattr@plt+0x6c>
   11cd4:	mov	r3, #1
   11cd8:	strb	r3, [r4]
   11cdc:	pop	{r4, pc}
   11ce0:	andeq	r2, r3, r8, lsl r5
   11ce4:	ldr	r0, [pc, #40]	; 11d14 <tcgetattr@plt+0x12c>
   11ce8:	ldr	r3, [r0]
   11cec:	cmp	r3, #0
   11cf0:	bne	11cf8 <tcgetattr@plt+0x110>
   11cf4:	b	11c84 <tcgetattr@plt+0x9c>
   11cf8:	ldr	r3, [pc, #24]	; 11d18 <tcgetattr@plt+0x130>
   11cfc:	cmp	r3, #0
   11d00:	beq	11cf4 <tcgetattr@plt+0x10c>
   11d04:	push	{r4, lr}
   11d08:	blx	r3
   11d0c:	pop	{r4, lr}
   11d10:	b	11c84 <tcgetattr@plt+0x9c>
   11d14:	strdeq	r1, [r3], -ip
   11d18:	andeq	r0, r0, r0
   11d1c:	mov	r2, #1
   11d20:	ldr	r3, [pc, #4]	; 11d2c <tcgetattr@plt+0x144>
   11d24:	str	r2, [r3]
   11d28:	bx	lr
   11d2c:	andeq	r2, r3, ip, lsl r5
   11d30:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d34:	mov	r4, r1
   11d38:	sub	r0, r0, #68	; 0x44
   11d3c:	cmp	r0, #42	; 0x2a
   11d40:	ldrls	pc, [pc, r0, lsl #2]
   11d44:	b	11fac <tcgetattr@plt+0x3c4>
   11d48:	strdeq	r1, [r1], -r4
   11d4c:	andeq	r1, r1, r0, lsl pc
   11d50:	andeq	r1, r1, ip, lsr #31
   11d54:	andeq	r1, r1, ip, lsr #31
   11d58:	andeq	r1, r1, ip, lsr #31
   11d5c:	andeq	r1, r1, ip, lsr #31
   11d60:	andeq	r1, r1, ip, lsr #31
   11d64:	andeq	r1, r1, ip, lsr #31
   11d68:	andeq	r1, r1, ip, lsr #31
   11d6c:	andeq	r1, r1, ip, lsr #31
   11d70:	andeq	r1, r1, ip, lsr #31
   11d74:	andeq	r1, r1, ip, lsr #31
   11d78:	andeq	r1, r1, ip, lsr #31
   11d7c:	andeq	r1, r1, ip, lsr #31
   11d80:	andeq	r1, r1, ip, lsr #31
   11d84:	andeq	r1, r1, ip, lsr #31
   11d88:	andeq	r1, r1, ip, lsr #31
   11d8c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11d90:	andeq	r1, r1, ip, lsr #31
   11d94:	andeq	r1, r1, ip, lsr #31
   11d98:	andeq	r1, r1, ip, lsr #31
   11d9c:	andeq	r1, r1, ip, lsr #31
   11da0:	andeq	r1, r1, ip, lsr #31
   11da4:	andeq	r1, r1, ip, lsr #31
   11da8:	andeq	r1, r1, ip, lsr #31
   11dac:	andeq	r1, r1, ip, lsr #31
   11db0:	andeq	r1, r1, ip, lsr #31
   11db4:	andeq	r1, r1, ip, lsr #31
   11db8:	andeq	r1, r1, ip, lsr #31
   11dbc:	andeq	r1, r1, ip, lsr #31
   11dc0:	andeq	r1, r1, ip, lsr #31
   11dc4:	andeq	r1, r1, ip, lsr #31
   11dc8:	andeq	r1, r1, ip, lsr #31
   11dcc:	andeq	r1, r1, ip, lsr #31
   11dd0:	andeq	r1, r1, ip, lsr #31
   11dd4:	andeq	r1, r1, ip, lsr #31
   11dd8:	andeq	r1, r1, r0, lsr #30
   11ddc:	andeq	r1, r1, ip, lsr #31
   11de0:	andeq	r1, r1, ip, lsr #31
   11de4:	andeq	r1, r1, ip, lsr #31
   11de8:	andeq	r1, r1, r0, lsr pc
   11dec:	andeq	r1, r1, ip, lsr #31
   11df0:	andeq	r1, r1, r8, lsl #31
   11df4:	cmp	r1, #0
   11df8:	beq	11e24 <tcgetattr@plt+0x23c>
   11dfc:	ldr	r1, [pc, #440]	; 11fbc <tcgetattr@plt+0x3d4>
   11e00:	mov	r0, r4
   11e04:	bl	11a80 <strtok@plt>
   11e08:	subs	r5, r0, #0
   11e0c:	beq	11fb4 <tcgetattr@plt+0x3cc>
   11e10:	ldr	r8, [pc, #424]	; 11fc0 <tcgetattr@plt+0x3d8>
   11e14:	ldr	sl, [pc, #424]	; 11fc4 <tcgetattr@plt+0x3dc>
   11e18:	ldr	r7, [pc, #424]	; 11fc8 <tcgetattr@plt+0x3e0>
   11e1c:	ldr	fp, [pc, #424]	; 11fcc <tcgetattr@plt+0x3e4>
   11e20:	b	11e88 <tcgetattr@plt+0x2a0>
   11e24:	ldr	r3, [pc, #416]	; 11fcc <tcgetattr@plt+0x3e4>
   11e28:	mov	r2, #100	; 0x64
   11e2c:	str	r2, [r3]
   11e30:	str	r2, [r3, #4]
   11e34:	str	r2, [r3, #8]
   11e38:	str	r2, [r3, #12]
   11e3c:	str	r2, [r3, #16]
   11e40:	str	r2, [r3, #20]
   11e44:	mov	r0, #0
   11e48:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e4c:	mov	r0, r5
   11e50:	bl	119c0 <strlen@plt>
   11e54:	mov	r6, r0
   11e58:	mov	r9, #100	; 0x64
   11e5c:	b	11ed0 <tcgetattr@plt+0x2e8>
   11e60:	add	r3, r7, r4, lsl #3
   11e64:	ldr	r3, [r3, #4]
   11e68:	str	r9, [fp, r3, lsl #2]
   11e6c:	cmp	r4, #6
   11e70:	beq	11ef8 <tcgetattr@plt+0x310>
   11e74:	ldr	r1, [pc, #320]	; 11fbc <tcgetattr@plt+0x3d4>
   11e78:	mov	r0, #0
   11e7c:	bl	11a80 <strtok@plt>
   11e80:	subs	r5, r0, #0
   11e84:	beq	11f0c <tcgetattr@plt+0x324>
   11e88:	mov	r1, r8
   11e8c:	mov	r0, r5
   11e90:	bl	1178c <strcmp@plt>
   11e94:	cmp	r0, #0
   11e98:	moveq	r3, #1
   11e9c:	streq	r3, [sl, #4]
   11ea0:	beq	11e74 <tcgetattr@plt+0x28c>
   11ea4:	mov	r1, #61	; 0x3d
   11ea8:	mov	r0, r5
   11eac:	bl	119cc <strchr@plt>
   11eb0:	cmp	r0, #0
   11eb4:	beq	11e4c <tcgetattr@plt+0x264>
   11eb8:	sub	r6, r0, r5
   11ebc:	mov	r2, #0
   11ec0:	mov	r1, r2
   11ec4:	add	r0, r0, #1
   11ec8:	bl	119b4 <strtoul@plt>
   11ecc:	mov	r9, r0
   11ed0:	mov	r4, #0
   11ed4:	mov	r2, r6
   11ed8:	mov	r1, r5
   11edc:	ldr	r0, [r7, r4, lsl #3]
   11ee0:	bl	11ba0 <strncmp@plt>
   11ee4:	cmp	r0, #0
   11ee8:	beq	11e60 <tcgetattr@plt+0x278>
   11eec:	add	r4, r4, #1
   11ef0:	cmp	r4, #6
   11ef4:	bne	11ed4 <tcgetattr@plt+0x2ec>
   11ef8:	mov	r2, r5
   11efc:	ldr	r1, [pc, #204]	; 11fd0 <tcgetattr@plt+0x3e8>
   11f00:	mov	r0, #5
   11f04:	bl	11aec <syslog@plt>
   11f08:	b	11e74 <tcgetattr@plt+0x28c>
   11f0c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f10:	ldr	r3, [pc, #188]	; 11fd4 <tcgetattr@plt+0x3ec>
   11f14:	str	r1, [r3]
   11f18:	mov	r0, #0
   11f1c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f20:	mov	r0, #0
   11f24:	ldr	r3, [pc, #168]	; 11fd4 <tcgetattr@plt+0x3ec>
   11f28:	str	r0, [r3, #4]
   11f2c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f30:	cmp	r1, #0
   11f34:	beq	11f5c <tcgetattr@plt+0x374>
   11f38:	ldr	r1, [pc, #152]	; 11fd8 <tcgetattr@plt+0x3f0>
   11f3c:	mov	r0, r4
   11f40:	bl	1178c <strcmp@plt>
   11f44:	cmp	r0, #0
   11f48:	bne	11f70 <tcgetattr@plt+0x388>
   11f4c:	mov	r2, #2
   11f50:	ldr	r3, [pc, #132]	; 11fdc <tcgetattr@plt+0x3f4>
   11f54:	str	r2, [r3]
   11f58:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f5c:	mov	r2, #1
   11f60:	ldr	r3, [pc, #120]	; 11fe0 <tcgetattr@plt+0x3f8>
   11f64:	str	r2, [r3]
   11f68:	mov	r0, #0
   11f6c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f70:	mov	r2, r4
   11f74:	ldr	r1, [pc, #104]	; 11fe4 <tcgetattr@plt+0x3fc>
   11f78:	mov	r0, #5
   11f7c:	bl	11aec <syslog@plt>
   11f80:	mov	r0, #0
   11f84:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f88:	mov	r0, #0
   11f8c:	ldr	r3, [pc, #64]	; 11fd4 <tcgetattr@plt+0x3ec>
   11f90:	str	r0, [r3, #8]
   11f94:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f98:	mov	r2, #1
   11f9c:	ldr	r3, [pc, #32]	; 11fc4 <tcgetattr@plt+0x3dc>
   11fa0:	str	r2, [r3, #8]
   11fa4:	mov	r0, #0
   11fa8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fac:	mov	r0, #7
   11fb0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fb4:	mov	r0, #0
   11fb8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fbc:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   11fc0:	andeq	pc, r1, r4, lsr pc	; <UNPREDICTABLE>
   11fc4:	andeq	r2, r3, ip, lsl r5
   11fc8:	andeq	pc, r1, r0, lsl #30
   11fcc:	andeq	sl, r3, r0, ror #13
   11fd0:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   11fd4:	muleq	r3, ip, r1
   11fd8:	andeq	pc, r1, r0, asr pc	; <UNPREDICTABLE>
   11fdc:	strdeq	sl, [r3], -ip
   11fe0:	strdeq	sl, [r3], -r8
   11fe4:	andeq	pc, r1, ip, asr pc	; <UNPREDICTABLE>
   11fe8:	push	{r4, r5, r6, r7, r8, lr}
   11fec:	sub	sp, sp, #928	; 0x3a0
   11ff0:	mov	r6, r0
   11ff4:	mov	r3, #1
   11ff8:	str	r3, [sp, #284]	; 0x11c
   11ffc:	mov	r3, #128	; 0x80
   12000:	str	r3, [sp, #280]	; 0x118
   12004:	add	r2, sp, #280	; 0x118
   12008:	add	r1, sp, #800	; 0x320
   1200c:	bl	11b4c <getpeername@plt>
   12010:	cmp	r0, #0
   12014:	blt	12154 <tcgetattr@plt+0x56c>
   12018:	mov	r3, #1
   1201c:	str	r3, [sp, #8]
   12020:	mov	r3, #0
   12024:	str	r3, [sp, #4]
   12028:	str	r3, [sp]
   1202c:	mov	r3, #256	; 0x100
   12030:	add	r2, sp, #544	; 0x220
   12034:	ldr	r1, [sp, #280]	; 0x118
   12038:	add	r0, sp, #800	; 0x320
   1203c:	bl	11abc <getnameinfo@plt>
   12040:	cmp	r0, #0
   12044:	beq	12070 <tcgetattr@plt+0x488>
   12048:	cmn	r0, #11
   1204c:	beq	12168 <tcgetattr@plt+0x580>
   12050:	bl	117ec <gai_strerror@plt>
   12054:	mov	r2, r0
   12058:	ldr	r1, [pc, #916]	; 123f4 <tcgetattr@plt+0x80c>
   1205c:	mov	r0, #37	; 0x25
   12060:	bl	11aec <syslog@plt>
   12064:	ldr	r1, [pc, #908]	; 123f8 <tcgetattr@plt+0x810>
   12068:	mov	r0, r6
   1206c:	bl	14124 <tcgetattr@plt+0x253c>
   12070:	mov	r3, #8
   12074:	str	r3, [sp, #8]
   12078:	mov	r3, #0
   1207c:	str	r3, [sp, #4]
   12080:	str	r3, [sp]
   12084:	mov	r3, #256	; 0x100
   12088:	add	r2, sp, #288	; 0x120
   1208c:	ldr	r1, [sp, #280]	; 0x118
   12090:	add	r0, sp, #800	; 0x320
   12094:	bl	11abc <getnameinfo@plt>
   12098:	ldr	r3, [pc, #860]	; 123fc <tcgetattr@plt+0x814>
   1209c:	ldr	r3, [r3, #8]
   120a0:	cmp	r3, #0
   120a4:	beq	1235c <tcgetattr@plt+0x774>
   120a8:	cmp	r0, #0
   120ac:	beq	120dc <tcgetattr@plt+0x4f4>
   120b0:	cmn	r0, #11
   120b4:	beq	1217c <tcgetattr@plt+0x594>
   120b8:	bl	117ec <gai_strerror@plt>
   120bc:	mov	r3, r0
   120c0:	add	r2, sp, #544	; 0x220
   120c4:	ldr	r1, [pc, #820]	; 12400 <tcgetattr@plt+0x818>
   120c8:	mov	r0, #37	; 0x25
   120cc:	bl	11aec <syslog@plt>
   120d0:	ldr	r1, [pc, #812]	; 12404 <tcgetattr@plt+0x81c>
   120d4:	mov	r0, r6
   120d8:	bl	14124 <tcgetattr@plt+0x253c>
   120dc:	add	r0, sp, #288	; 0x120
   120e0:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   120e4:	ldr	r3, [pc, #796]	; 12408 <tcgetattr@plt+0x820>
   120e8:	str	r0, [r3]
   120ec:	add	r3, sp, #20
   120f0:	mov	r2, #0
   120f4:	mov	r1, r2
   120f8:	bl	11b64 <getaddrinfo@plt>
   120fc:	cmp	r0, #0
   12100:	beq	12134 <tcgetattr@plt+0x54c>
   12104:	cmn	r0, #11
   12108:	beq	12190 <tcgetattr@plt+0x5a8>
   1210c:	bl	117ec <gai_strerror@plt>
   12110:	mov	r3, r0
   12114:	ldr	r2, [pc, #748]	; 12408 <tcgetattr@plt+0x820>
   12118:	ldr	r2, [r2]
   1211c:	ldr	r1, [pc, #744]	; 1240c <tcgetattr@plt+0x824>
   12120:	mov	r0, #37	; 0x25
   12124:	bl	11aec <syslog@plt>
   12128:	ldr	r1, [pc, #724]	; 12404 <tcgetattr@plt+0x81c>
   1212c:	mov	r0, r6
   12130:	bl	14124 <tcgetattr@plt+0x253c>
   12134:	ldr	r4, [sp, #20]
   12138:	cmp	r4, #0
   1213c:	beq	12334 <tcgetattr@plt+0x74c>
   12140:	add	r3, sp, #800	; 0x320
   12144:	ldrh	r5, [r3]
   12148:	mov	r8, #16
   1214c:	mov	r7, #4
   12150:	b	121cc <tcgetattr@plt+0x5e4>
   12154:	ldr	r1, [pc, #692]	; 12410 <tcgetattr@plt+0x828>
   12158:	mov	r0, #3
   1215c:	bl	11aec <syslog@plt>
   12160:	mov	r0, #1
   12164:	bl	119a8 <exit@plt>
   12168:	bl	11a14 <__errno_location@plt>
   1216c:	ldr	r0, [r0]
   12170:	bl	11948 <strerror@plt>
   12174:	mov	r2, r0
   12178:	b	12058 <tcgetattr@plt+0x470>
   1217c:	bl	11a14 <__errno_location@plt>
   12180:	ldr	r0, [r0]
   12184:	bl	11948 <strerror@plt>
   12188:	mov	r3, r0
   1218c:	b	120c0 <tcgetattr@plt+0x4d8>
   12190:	bl	11a14 <__errno_location@plt>
   12194:	ldr	r0, [r0]
   12198:	bl	11948 <strerror@plt>
   1219c:	mov	r3, r0
   121a0:	b	12114 <tcgetattr@plt+0x52c>
   121a4:	ldr	r0, [r4, #20]
   121a8:	mov	r2, r7
   121ac:	add	r1, sp, #804	; 0x324
   121b0:	add	r0, r0, #4
   121b4:	bl	11840 <memcmp@plt>
   121b8:	cmp	r0, #0
   121bc:	beq	12204 <tcgetattr@plt+0x61c>
   121c0:	ldr	r4, [r4, #28]
   121c4:	cmp	r4, #0
   121c8:	beq	12334 <tcgetattr@plt+0x74c>
   121cc:	ldr	r3, [r4, #4]
   121d0:	cmp	r3, r5
   121d4:	bne	121c0 <tcgetattr@plt+0x5d8>
   121d8:	cmp	r3, #2
   121dc:	beq	121a4 <tcgetattr@plt+0x5bc>
   121e0:	cmp	r3, #10
   121e4:	bne	121c0 <tcgetattr@plt+0x5d8>
   121e8:	ldr	r0, [r4, #20]
   121ec:	mov	r2, r8
   121f0:	add	r1, sp, #808	; 0x328
   121f4:	add	r0, r0, #8
   121f8:	bl	11840 <memcmp@plt>
   121fc:	cmp	r0, #0
   12200:	bne	121c0 <tcgetattr@plt+0x5d8>
   12204:	cmp	r4, #0
   12208:	beq	12334 <tcgetattr@plt+0x74c>
   1220c:	ldr	r0, [sp, #20]
   12210:	bl	11b58 <freeaddrinfo@plt>
   12214:	ldr	r3, [pc, #504]	; 12414 <tcgetattr@plt+0x82c>
   12218:	ldr	r3, [r3, #8]
   1221c:	cmp	r3, #0
   12220:	bne	12378 <tcgetattr@plt+0x790>
   12224:	ldr	r3, [pc, #464]	; 123fc <tcgetattr@plt+0x814>
   12228:	ldr	r3, [r3, #4]
   1222c:	cmp	r3, #0
   12230:	bne	123ac <tcgetattr@plt+0x7c4>
   12234:	ldr	r3, [pc, #476]	; 12418 <tcgetattr@plt+0x830>
   12238:	str	r6, [r3]
   1223c:	bl	18f84 <tcgetattr@plt+0x739c>
   12240:	ldr	r3, [pc, #468]	; 1241c <tcgetattr@plt+0x834>
   12244:	str	r0, [r3]
   12248:	bl	13c68 <tcgetattr@plt+0x2080>
   1224c:	ldr	r0, [pc, #460]	; 12420 <tcgetattr@plt+0x838>
   12250:	bl	11b94 <unsetenv@plt>
   12254:	add	r0, sp, #928	; 0x3a0
   12258:	mov	r3, #0
   1225c:	strb	r3, [r0, #-904]!	; 0xfffffc78
   12260:	mov	r1, #256	; 0x100
   12264:	bl	147ac <tcgetattr@plt+0x2bc4>
   12268:	mov	r4, r0
   1226c:	ldr	r3, [pc, #432]	; 12424 <tcgetattr@plt+0x83c>
   12270:	ldr	r1, [r3]
   12274:	mov	r2, #1
   12278:	ldr	r3, [pc, #424]	; 12428 <tcgetattr@plt+0x840>
   1227c:	cmp	r1, #0
   12280:	moveq	r1, r3
   12284:	ldr	r0, [pc, #416]	; 1242c <tcgetattr@plt+0x844>
   12288:	bl	119d8 <setenv@plt>
   1228c:	ldrb	r3, [sp, #24]
   12290:	cmp	r3, #0
   12294:	bne	123e0 <tcgetattr@plt+0x7f8>
   12298:	ldr	r3, [pc, #400]	; 12430 <tcgetattr@plt+0x848>
   1229c:	ldr	r2, [r3]
   122a0:	mov	r1, r4
   122a4:	ldr	r3, [pc, #348]	; 12408 <tcgetattr@plt+0x820>
   122a8:	ldr	r0, [r3]
   122ac:	bl	12f44 <tcgetattr@plt+0x135c>
   122b0:	ldr	r4, [pc, #380]	; 12434 <tcgetattr@plt+0x84c>
   122b4:	str	r0, [r4]
   122b8:	add	r2, sp, #284	; 0x11c
   122bc:	ldr	r1, [pc, #372]	; 12438 <tcgetattr@plt+0x850>
   122c0:	bl	1a5ac <argp_parse@@Base+0xd04>
   122c4:	ldr	r5, [pc, #368]	; 1243c <tcgetattr@plt+0x854>
   122c8:	add	r2, sp, #284	; 0x11c
   122cc:	mov	r1, r5
   122d0:	ldr	r0, [r4]
   122d4:	bl	1a5ac <argp_parse@@Base+0xd04>
   122d8:	ldr	r4, [pc, #312]	; 12418 <tcgetattr@plt+0x830>
   122dc:	add	r2, sp, #284	; 0x11c
   122e0:	mov	r1, r5
   122e4:	ldr	r0, [r4]
   122e8:	bl	1a5ac <argp_parse@@Base+0xd04>
   122ec:	ldr	r0, [r4]
   122f0:	mov	r3, #4
   122f4:	str	r3, [sp]
   122f8:	add	r3, sp, #284	; 0x11c
   122fc:	mov	r2, #10
   12300:	mov	r1, #1
   12304:	bl	117a4 <setsockopt@plt>
   12308:	mov	r1, #1
   1230c:	mov	r0, #20
   12310:	bl	1181c <signal@plt>
   12314:	mov	r1, #1
   12318:	mov	r0, #22
   1231c:	bl	1181c <signal@plt>
   12320:	ldr	r1, [pc, #280]	; 12440 <tcgetattr@plt+0x858>
   12324:	mov	r0, #17
   12328:	bl	190d4 <tcgetattr@plt+0x74ec>
   1232c:	add	sp, sp, #928	; 0x3a0
   12330:	pop	{r4, r5, r6, r7, r8, pc}
   12334:	add	r3, sp, #544	; 0x220
   12338:	ldr	r2, [pc, #200]	; 12408 <tcgetattr@plt+0x820>
   1233c:	ldr	r2, [r2]
   12340:	ldr	r1, [pc, #252]	; 12444 <tcgetattr@plt+0x85c>
   12344:	mov	r0, #37	; 0x25
   12348:	bl	11aec <syslog@plt>
   1234c:	ldr	r1, [pc, #176]	; 12404 <tcgetattr@plt+0x81c>
   12350:	mov	r0, r6
   12354:	bl	14124 <tcgetattr@plt+0x253c>
   12358:	b	1220c <tcgetattr@plt+0x624>
   1235c:	cmp	r0, #0
   12360:	addeq	r0, sp, #288	; 0x120
   12364:	addne	r0, sp, #544	; 0x220
   12368:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   1236c:	ldr	r3, [pc, #148]	; 12408 <tcgetattr@plt+0x820>
   12370:	str	r0, [r3]
   12374:	b	12214 <tcgetattr@plt+0x62c>
   12378:	mov	r3, #4
   1237c:	str	r3, [sp]
   12380:	add	r3, sp, #284	; 0x11c
   12384:	mov	r2, #9
   12388:	mov	r1, #1
   1238c:	mov	r0, r6
   12390:	bl	117a4 <setsockopt@plt>
   12394:	cmp	r0, #0
   12398:	bge	12224 <tcgetattr@plt+0x63c>
   1239c:	ldr	r1, [pc, #164]	; 12448 <tcgetattr@plt+0x860>
   123a0:	mov	r0, #4
   123a4:	bl	11aec <syslog@plt>
   123a8:	b	12224 <tcgetattr@plt+0x63c>
   123ac:	mov	r3, #4
   123b0:	str	r3, [sp]
   123b4:	add	r3, sp, #284	; 0x11c
   123b8:	mov	r2, #1
   123bc:	mov	r1, r2
   123c0:	mov	r0, r6
   123c4:	bl	117a4 <setsockopt@plt>
   123c8:	cmp	r0, #0
   123cc:	bge	12234 <tcgetattr@plt+0x64c>
   123d0:	ldr	r1, [pc, #116]	; 1244c <tcgetattr@plt+0x864>
   123d4:	mov	r0, #4
   123d8:	bl	11aec <syslog@plt>
   123dc:	b	12234 <tcgetattr@plt+0x64c>
   123e0:	add	r0, sp, #24
   123e4:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   123e8:	ldr	r3, [pc, #64]	; 12430 <tcgetattr@plt+0x848>
   123ec:	str	r0, [r3]
   123f0:	b	12298 <tcgetattr@plt+0x6b0>
   123f4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   123f8:			; <UNDEFINED> instruction: 0x0001ffb0
   123fc:	andeq	r2, r3, ip, lsl r5
   12400:	andeq	pc, r1, r4, asr #31
   12404:	ldrdeq	pc, [r1], -ip
   12408:	andeq	sl, r3, r0, ror #23
   1240c:	strdeq	pc, [r1], -r4
   12410:	andeq	pc, r1, r8, lsl #31
   12414:	muleq	r3, ip, r1
   12418:	andeq	sl, r3, ip, lsr #19
   1241c:	andeq	sl, r3, r4, lsr #19
   12420:	andeq	r0, r2, r0, ror r0
   12424:	andeq	sl, r3, r0, lsl #14
   12428:	andeq	pc, r1, r0, lsl #31
   1242c:	andeq	r0, r2, r8, ror r0
   12430:	andeq	sl, r3, r8, ror #23
   12434:	ldrdeq	sl, [r3], -r0
   12438:	andeq	r5, r0, r0, lsr #8
   1243c:	andeq	r5, r0, r1, lsr #8
   12440:	andeq	r1, r1, ip, lsl sp
   12444:	andeq	r0, r2, r8, lsl r0
   12448:	andeq	r0, r2, r4, lsr r0
   1244c:	andeq	r0, r2, r4, asr r0
   12450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12454:	sub	sp, sp, #684	; 0x2ac
   12458:	bl	18554 <tcgetattr@plt+0x696c>
   1245c:	ldr	r3, [pc, #2052]	; 12c68 <tcgetattr@plt+0x1080>
   12460:	ldrb	r3, [r3, #3]
   12464:	tst	r3, #1
   12468:	beq	125d8 <tcgetattr@plt+0x9f0>
   1246c:	mov	r1, #1
   12470:	mov	r0, r1
   12474:	bl	15de8 <tcgetattr@plt+0x4200>
   12478:	ldr	r3, [pc, #2024]	; 12c68 <tcgetattr@plt+0x1080>
   1247c:	ldrb	r3, [r3, #34]	; 0x22
   12480:	tst	r3, #4
   12484:	beq	125e8 <tcgetattr@plt+0xa00>
   12488:	mov	r1, #1
   1248c:	mov	r0, #31
   12490:	bl	15de8 <tcgetattr@plt+0x4200>
   12494:	mov	r1, #1
   12498:	mov	r0, #5
   1249c:	bl	15f28 <tcgetattr@plt+0x4340>
   124a0:	mov	r1, #1
   124a4:	ldr	r3, [pc, #1984]	; 12c6c <tcgetattr@plt+0x1084>
   124a8:	str	r1, [r3]
   124ac:	mvn	r2, #0
   124b0:	ldr	r3, [pc, #1976]	; 12c70 <tcgetattr@plt+0x1088>
   124b4:	str	r2, [r3]
   124b8:	mov	r0, #33	; 0x21
   124bc:	bl	15de8 <tcgetattr@plt+0x4200>
   124c0:	ldr	r3, [pc, #1952]	; 12c68 <tcgetattr@plt+0x1080>
   124c4:	ldrb	r3, [r3, #31]
   124c8:	add	r2, r3, #4
   124cc:	tst	r2, #8
   124d0:	beq	124ec <tcgetattr@plt+0x904>
   124d4:	ldr	r4, [pc, #1932]	; 12c68 <tcgetattr@plt+0x1080>
   124d8:	bl	14594 <tcgetattr@plt+0x29ac>
   124dc:	ldrb	r3, [r4, #31]
   124e0:	add	r2, r3, #4
   124e4:	tst	r2, #8
   124e8:	bne	124d8 <tcgetattr@plt+0x8f0>
   124ec:	ldr	r2, [pc, #1908]	; 12c68 <tcgetattr@plt+0x1080>
   124f0:	ldrb	r2, [r2, #1]
   124f4:	tst	r2, #8
   124f8:	beq	12550 <tcgetattr@plt+0x968>
   124fc:	tst	r3, #4
   12500:	beq	12530 <tcgetattr@plt+0x948>
   12504:	add	r2, r2, #4
   12508:	tst	r2, #8
   1250c:	beq	12530 <tcgetattr@plt+0x948>
   12510:	ldr	r4, [pc, #1872]	; 12c68 <tcgetattr@plt+0x1080>
   12514:	bl	14594 <tcgetattr@plt+0x29ac>
   12518:	ldrb	r3, [r4, #1]
   1251c:	add	r2, r3, #4
   12520:	tst	r2, #8
   12524:	bne	12514 <tcgetattr@plt+0x92c>
   12528:	tst	r3, #8
   1252c:	beq	12550 <tcgetattr@plt+0x968>
   12530:	ldr	r3, [pc, #1852]	; 12c74 <tcgetattr@plt+0x108c>
   12534:	ldr	r3, [r3]
   12538:	cmp	r3, #0
   1253c:	ble	12548 <tcgetattr@plt+0x960>
   12540:	ldr	r0, [pc, #1840]	; 12c78 <tcgetattr@plt+0x1090>
   12544:	bl	1431c <tcgetattr@plt+0x2734>
   12548:	mov	r0, #1
   1254c:	bl	16324 <tcgetattr@plt+0x473c>
   12550:	ldr	r3, [pc, #1808]	; 12c68 <tcgetattr@plt+0x1080>
   12554:	ldrb	r3, [r3, #1]
   12558:	tst	r3, #1
   1255c:	beq	1260c <tcgetattr@plt+0xa24>
   12560:	ldr	r3, [pc, #1812]	; 12c7c <tcgetattr@plt+0x1094>
   12564:	ldr	r3, [r3]
   12568:	cmp	r3, #3
   1256c:	ble	1261c <tcgetattr@plt+0xa34>
   12570:	bl	174b8 <tcgetattr@plt+0x58d0>
   12574:	ldr	r3, [pc, #1796]	; 12c80 <tcgetattr@plt+0x1098>
   12578:	ldr	r3, [r3, #4]
   1257c:	cmp	r3, #0
   12580:	bne	1262c <tcgetattr@plt+0xa44>
   12584:	bl	13314 <tcgetattr@plt+0x172c>
   12588:	bl	17bdc <tcgetattr@plt+0x5ff4>
   1258c:	ldr	r3, [pc, #1760]	; 12c74 <tcgetattr@plt+0x108c>
   12590:	ldr	r3, [r3, #4]
   12594:	cmp	r3, #0
   12598:	ble	125a4 <tcgetattr@plt+0x9bc>
   1259c:	ldr	r0, [pc, #1760]	; 12c84 <tcgetattr@plt+0x109c>
   125a0:	bl	1431c <tcgetattr@plt+0x2734>
   125a4:	ldr	r3, [pc, #1756]	; 12c88 <tcgetattr@plt+0x10a0>
   125a8:	ldr	r3, [r3]
   125ac:	ldr	r2, [pc, #1752]	; 12c8c <tcgetattr@plt+0x10a4>
   125b0:	ldr	r2, [r2]
   125b4:	cmp	r3, r2
   125b8:	movlt	r3, r2
   125bc:	add	r3, r3, #1
   125c0:	str	r3, [sp, #20]
   125c4:	ldr	r6, [pc, #1728]	; 12c8c <tcgetattr@plt+0x10a4>
   125c8:	ldr	r8, [pc, #1720]	; 12c88 <tcgetattr@plt+0x10a0>
   125cc:	ldr	sl, [pc, #1724]	; 12c90 <tcgetattr@plt+0x10a8>
   125d0:	ldr	r9, [pc, #1680]	; 12c68 <tcgetattr@plt+0x1080>
   125d4:	b	12a0c <tcgetattr@plt+0xe24>
   125d8:	mov	r1, #1
   125dc:	mov	r0, #3
   125e0:	bl	15f28 <tcgetattr@plt+0x4340>
   125e4:	b	1246c <tcgetattr@plt+0x884>
   125e8:	mov	r3, #0
   125ec:	ldr	r2, [pc, #1696]	; 12c94 <tcgetattr@plt+0x10ac>
   125f0:	str	r3, [r2]
   125f4:	ldr	r2, [pc, #1692]	; 12c98 <tcgetattr@plt+0x10b0>
   125f8:	str	r3, [r2]
   125fc:	mov	r1, #1
   12600:	mov	r0, #34	; 0x22
   12604:	bl	15de8 <tcgetattr@plt+0x4200>
   12608:	b	12488 <tcgetattr@plt+0x8a0>
   1260c:	mov	r1, #1
   12610:	mov	r0, r1
   12614:	bl	15f28 <tcgetattr@plt+0x4340>
   12618:	b	12560 <tcgetattr@plt+0x978>
   1261c:	mov	r1, #1
   12620:	mov	r0, #6
   12624:	bl	15de8 <tcgetattr@plt+0x4200>
   12628:	b	12570 <tcgetattr@plt+0x988>
   1262c:	add	r0, sp, #288	; 0x120
   12630:	bl	11864 <uname@plt>
   12634:	cmp	r0, #0
   12638:	blt	12c58 <tcgetattr@plt+0x1070>
   1263c:	add	r0, sp, #288	; 0x120
   12640:	bl	119c0 <strlen@plt>
   12644:	mov	r4, r0
   12648:	add	r3, sp, #288	; 0x120
   1264c:	add	r0, r3, #130	; 0x82
   12650:	bl	119c0 <strlen@plt>
   12654:	add	r0, r4, r0
   12658:	add	r0, r0, #18
   1265c:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   12660:	subs	r4, r0, #0
   12664:	beq	12c58 <tcgetattr@plt+0x1070>
   12668:	ldr	r3, [pc, #1580]	; 12c9c <tcgetattr@plt+0x10b4>
   1266c:	str	r3, [sp, #4]
   12670:	add	r3, sp, #288	; 0x120
   12674:	add	r3, r3, #130	; 0x82
   12678:	str	r3, [sp]
   1267c:	add	r3, sp, #288	; 0x120
   12680:	ldr	r2, [pc, #1560]	; 12ca0 <tcgetattr@plt+0x10b8>
   12684:	ldr	r1, [pc, #1560]	; 12ca4 <tcgetattr@plt+0x10bc>
   12688:	mov	r0, r4
   1268c:	bl	11b04 <sprintf@plt>
   12690:	mov	r0, r4
   12694:	bl	15c7c <tcgetattr@plt+0x4094>
   12698:	mov	r5, r0
   1269c:	mov	r0, r4
   126a0:	bl	1a49c <argp_parse@@Base+0xbf4>
   126a4:	ldr	r3, [pc, #1480]	; 12c74 <tcgetattr@plt+0x108c>
   126a8:	ldr	r3, [r3, #12]
   126ac:	cmp	r3, #0
   126b0:	ble	126c0 <tcgetattr@plt+0xad8>
   126b4:	mov	r1, r5
   126b8:	ldr	r0, [pc, #1512]	; 12ca8 <tcgetattr@plt+0x10c0>
   126bc:	bl	1431c <tcgetattr@plt+0x2734>
   126c0:	mov	r0, r5
   126c4:	bl	119c0 <strlen@plt>
   126c8:	mov	r1, r0
   126cc:	mov	r0, r5
   126d0:	bl	13e64 <tcgetattr@plt+0x227c>
   126d4:	mov	r0, r5
   126d8:	bl	1a49c <argp_parse@@Base+0xbf4>
   126dc:	b	12584 <tcgetattr@plt+0x99c>
   126e0:	bl	13de0 <tcgetattr@plt+0x21f8>
   126e4:	cmp	r0, #0
   126e8:	bge	12a18 <tcgetattr@plt+0xe30>
   126ec:	mov	r0, #0
   126f0:	bl	13024 <tcgetattr@plt+0x143c>
   126f4:	mov	r0, #0
   126f8:	add	sp, sp, #684	; 0x2ac
   126fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12700:	bl	13de0 <tcgetattr@plt+0x21f8>
   12704:	cmp	r0, #0
   12708:	bgt	12a6c <tcgetattr@plt+0xe84>
   1270c:	ldr	r3, [r8]
   12710:	add	r2, r3, #31
   12714:	cmp	r3, #0
   12718:	movge	r2, r3
   1271c:	asr	r2, r2, #5
   12720:	add	r1, sp, #680	; 0x2a8
   12724:	add	r2, r1, r2, lsl #2
   12728:	asr	r1, r3, #31
   1272c:	lsr	r1, r1, #27
   12730:	add	r3, r3, r1
   12734:	and	r3, r3, #31
   12738:	sub	r3, r3, r1
   1273c:	ldr	r1, [r2, #-648]	; 0xfffffd78
   12740:	mov	r0, #1
   12744:	orr	r3, r1, r0, lsl r3
   12748:	str	r3, [r2, #-648]	; 0xfffffd78
   1274c:	b	12aac <tcgetattr@plt+0xec4>
   12750:	bl	13cf0 <tcgetattr@plt+0x2108>
   12754:	cmp	r0, #0
   12758:	bgt	12ab8 <tcgetattr@plt+0xed0>
   1275c:	ldr	r3, [r6]
   12760:	add	r2, r3, #31
   12764:	cmp	r3, #0
   12768:	movge	r2, r3
   1276c:	asr	r2, r2, #5
   12770:	add	r1, sp, #680	; 0x2a8
   12774:	add	r2, r1, r2, lsl #2
   12778:	asr	r1, r3, #31
   1277c:	lsr	r1, r1, #27
   12780:	add	r3, r3, r1
   12784:	and	r3, r3, #31
   12788:	sub	r3, r3, r1
   1278c:	ldr	r1, [r2, #-648]	; 0xfffffd78
   12790:	mov	r0, #1
   12794:	orr	r3, r1, r0, lsl r3
   12798:	str	r3, [r2, #-648]	; 0xfffffd78
   1279c:	b	12af8 <tcgetattr@plt+0xf10>
   127a0:	cmn	r0, #1
   127a4:	beq	127b4 <tcgetattr@plt+0xbcc>
   127a8:	mov	r0, #5
   127ac:	bl	11858 <sleep@plt>
   127b0:	b	12a0c <tcgetattr@plt+0xe24>
   127b4:	bl	11a14 <__errno_location@plt>
   127b8:	ldr	r3, [r0]
   127bc:	cmp	r3, #4
   127c0:	bne	127a8 <tcgetattr@plt+0xbc0>
   127c4:	b	12a0c <tcgetattr@plt+0xe24>
   127c8:	bl	15980 <tcgetattr@plt+0x3d98>
   127cc:	b	12bc4 <tcgetattr@plt+0xfdc>
   127d0:	bl	15bb8 <tcgetattr@plt+0x3fd0>
   127d4:	cmp	r0, #0
   127d8:	blt	126ec <tcgetattr@plt+0xb04>
   127dc:	mov	r0, #1
   127e0:	bl	13e10 <tcgetattr@plt+0x2228>
   127e4:	mov	r4, r0
   127e8:	tst	r0, #64	; 0x40
   127ec:	bne	12890 <tcgetattr@plt+0xca8>
   127f0:	tst	r4, #2
   127f4:	bne	128a4 <tcgetattr@plt+0xcbc>
   127f8:	ldrb	r3, [r9, #33]	; 0x21
   127fc:	tst	r3, #4
   12800:	beq	12884 <tcgetattr@plt+0xc9c>
   12804:	tst	r4, #48	; 0x30
   12808:	beq	12884 <tcgetattr@plt+0xc9c>
   1280c:	ldr	r3, [pc, #1112]	; 12c6c <tcgetattr@plt+0x1084>
   12810:	ldr	r1, [r3]
   12814:	lsr	r3, r4, #5
   12818:	and	r3, r3, #1
   1281c:	cmp	r3, r1
   12820:	beq	12884 <tcgetattr@plt+0xc9c>
   12824:	mov	r3, #240	; 0xf0
   12828:	str	r3, [sp, #12]
   1282c:	mov	r2, #255	; 0xff
   12830:	str	r2, [sp, #8]
   12834:	adds	r1, r1, #0
   12838:	movne	r1, #1
   1283c:	str	r1, [sp, #4]
   12840:	mov	r3, #33	; 0x21
   12844:	str	r3, [sp]
   12848:	mov	r3, #250	; 0xfa
   1284c:	ldr	r1, [pc, #1112]	; 12cac <tcgetattr@plt+0x10c4>
   12850:	add	r0, sp, #24
   12854:	bl	11b04 <sprintf@plt>
   12858:	mov	r1, #7
   1285c:	add	r0, sp, #24
   12860:	bl	14520 <tcgetattr@plt+0x2938>
   12864:	ldr	r3, [pc, #1032]	; 12c74 <tcgetattr@plt+0x108c>
   12868:	ldr	r3, [r3]
   1286c:	cmp	r3, #0
   12870:	ble	12884 <tcgetattr@plt+0xc9c>
   12874:	mov	r2, #5
   12878:	add	r1, sp, #26
   1287c:	mov	r0, #62	; 0x3e
   12880:	bl	14bac <tcgetattr@plt+0x2fc4>
   12884:	mov	r0, #0
   12888:	bl	13e10 <tcgetattr@plt+0x2228>
   1288c:	b	12c04 <tcgetattr@plt+0x101c>
   12890:	mov	r0, #0
   12894:	bl	13e10 <tcgetattr@plt+0x2228>
   12898:	bl	13364 <tcgetattr@plt+0x177c>
   1289c:	bl	17bdc <tcgetattr@plt+0x5ff4>
   128a0:	b	127f0 <tcgetattr@plt+0xc08>
   128a4:	mov	r0, #0
   128a8:	bl	13e10 <tcgetattr@plt+0x2228>
   128ac:	bl	13fb0 <tcgetattr@plt+0x23c8>
   128b0:	mov	r1, #2
   128b4:	ldr	r0, [pc, #1012]	; 12cb0 <tcgetattr@plt+0x10c8>
   128b8:	bl	14520 <tcgetattr@plt+0x2938>
   128bc:	bl	13cb4 <tcgetattr@plt+0x20cc>
   128c0:	ldr	r3, [pc, #940]	; 12c74 <tcgetattr@plt+0x108c>
   128c4:	ldr	r3, [r3]
   128c8:	cmp	r3, #0
   128cc:	ble	127f8 <tcgetattr@plt+0xc10>
   128d0:	mov	r1, #242	; 0xf2
   128d4:	ldr	r0, [pc, #984]	; 12cb4 <tcgetattr@plt+0x10cc>
   128d8:	bl	14b48 <tcgetattr@plt+0x2f60>
   128dc:	b	127f8 <tcgetattr@plt+0xc10>
   128e0:	mov	r0, r7
   128e4:	bl	13cd4 <tcgetattr@plt+0x20ec>
   128e8:	mov	r0, r7
   128ec:	bl	13cd4 <tcgetattr@plt+0x20ec>
   128f0:	bl	13de0 <tcgetattr@plt+0x21f8>
   128f4:	cmp	r0, #0
   128f8:	ble	1296c <tcgetattr@plt+0xd84>
   128fc:	bl	13d20 <tcgetattr@plt+0x2138>
   12900:	cmp	r0, #0
   12904:	bne	1296c <tcgetattr@plt+0xd84>
   12908:	mov	r0, r5
   1290c:	bl	13e10 <tcgetattr@plt+0x2228>
   12910:	mov	r4, r0
   12914:	cmp	r0, #255	; 0xff
   12918:	beq	128e0 <tcgetattr@plt+0xcf8>
   1291c:	bl	13cd4 <tcgetattr@plt+0x20ec>
   12920:	cmp	r4, #13
   12924:	bne	128f0 <tcgetattr@plt+0xd08>
   12928:	ldrb	r3, [r9]
   1292c:	tst	r3, #1
   12930:	bne	128f0 <tcgetattr@plt+0xd08>
   12934:	bl	13de0 <tcgetattr@plt+0x21f8>
   12938:	cmp	r0, #0
   1293c:	ble	12950 <tcgetattr@plt+0xd68>
   12940:	mov	r0, fp
   12944:	bl	13e10 <tcgetattr@plt+0x2228>
   12948:	cmp	r0, #10
   1294c:	beq	1295c <tcgetattr@plt+0xd74>
   12950:	mov	r0, r5
   12954:	bl	13cd4 <tcgetattr@plt+0x20ec>
   12958:	b	128f0 <tcgetattr@plt+0xd08>
   1295c:	mov	r0, r5
   12960:	bl	13e10 <tcgetattr@plt+0x2228>
   12964:	bl	13cd4 <tcgetattr@plt+0x20ec>
   12968:	b	128f0 <tcgetattr@plt+0xd08>
   1296c:	ldr	r3, [r6]
   12970:	add	r2, r3, #31
   12974:	cmp	r3, #0
   12978:	movge	r2, r3
   1297c:	asr	r2, r2, #5
   12980:	add	r1, sp, #680	; 0x2a8
   12984:	add	r2, r1, r2, lsl #2
   12988:	asr	r1, r3, #31
   1298c:	lsr	r1, r1, #27
   12990:	add	r3, r3, r1
   12994:	and	r3, r3, #31
   12998:	sub	r3, r3, r1
   1299c:	ldr	r2, [r2, #-520]	; 0xfffffdf8
   129a0:	mov	r1, #1
   129a4:	ands	r3, r2, r1, lsl r3
   129a8:	bne	12c14 <tcgetattr@plt+0x102c>
   129ac:	bl	13cf0 <tcgetattr@plt+0x2108>
   129b0:	cmp	r0, #0
   129b4:	ble	129bc <tcgetattr@plt+0xdd4>
   129b8:	bl	174b8 <tcgetattr@plt+0x58d0>
   129bc:	ldr	r3, [r8]
   129c0:	add	r2, r3, #31
   129c4:	cmp	r3, #0
   129c8:	movge	r2, r3
   129cc:	asr	r2, r2, #5
   129d0:	add	r1, sp, #680	; 0x2a8
   129d4:	add	r2, r1, r2, lsl #2
   129d8:	asr	r1, r3, #31
   129dc:	lsr	r1, r1, #27
   129e0:	add	r3, r3, r1
   129e4:	and	r3, r3, #31
   129e8:	sub	r3, r3, r1
   129ec:	ldr	r2, [r2, #-520]	; 0xfffffdf8
   129f0:	mov	r1, #1
   129f4:	ands	r3, r2, r1, lsl r3
   129f8:	bne	12c28 <tcgetattr@plt+0x1040>
   129fc:	ldr	r3, [pc, #692]	; 12cb8 <tcgetattr@plt+0x10d0>
   12a00:	ldr	r3, [r3]
   12a04:	cmp	r3, #0
   12a08:	bne	12c3c <tcgetattr@plt+0x1054>
   12a0c:	bl	13cf0 <tcgetattr@plt+0x2108>
   12a10:	cmp	r0, #0
   12a14:	blt	126e0 <tcgetattr@plt+0xaf8>
   12a18:	add	r3, sp, #28
   12a1c:	add	r1, sp, #156	; 0x9c
   12a20:	mov	r2, #0
   12a24:	str	r2, [r3, #4]!
   12a28:	cmp	r1, r3
   12a2c:	bne	12a24 <tcgetattr@plt+0xe3c>
   12a30:	add	r3, sp, #156	; 0x9c
   12a34:	add	r1, sp, #284	; 0x11c
   12a38:	mov	r2, #0
   12a3c:	str	r2, [r3, #4]!
   12a40:	cmp	r1, r3
   12a44:	bne	12a3c <tcgetattr@plt+0xe54>
   12a48:	add	r3, sp, #284	; 0x11c
   12a4c:	add	r1, sp, #412	; 0x19c
   12a50:	mov	r2, #0
   12a54:	str	r2, [r3, #4]!
   12a58:	cmp	r3, r1
   12a5c:	bne	12a54 <tcgetattr@plt+0xe6c>
   12a60:	bl	13d00 <tcgetattr@plt+0x2118>
   12a64:	cmp	r0, #0
   12a68:	beq	12700 <tcgetattr@plt+0xb18>
   12a6c:	ldr	r3, [r6]
   12a70:	add	r2, r3, #31
   12a74:	cmp	r3, #0
   12a78:	movge	r2, r3
   12a7c:	asr	r2, r2, #5
   12a80:	add	r1, sp, #680	; 0x2a8
   12a84:	add	r2, r1, r2, lsl #2
   12a88:	asr	r1, r3, #31
   12a8c:	lsr	r1, r1, #27
   12a90:	add	r3, r3, r1
   12a94:	and	r3, r3, #31
   12a98:	sub	r3, r3, r1
   12a9c:	ldr	r1, [r2, #-520]	; 0xfffffdf8
   12aa0:	mov	r0, #1
   12aa4:	orr	r3, r1, r0, lsl r3
   12aa8:	str	r3, [r2, #-520]	; 0xfffffdf8
   12aac:	bl	13df0 <tcgetattr@plt+0x2208>
   12ab0:	cmp	r0, #0
   12ab4:	beq	12750 <tcgetattr@plt+0xb68>
   12ab8:	ldr	r3, [r8]
   12abc:	add	r2, r3, #31
   12ac0:	cmp	r3, #0
   12ac4:	movge	r2, r3
   12ac8:	asr	r2, r2, #5
   12acc:	add	r1, sp, #680	; 0x2a8
   12ad0:	add	r2, r1, r2, lsl #2
   12ad4:	asr	r1, r3, #31
   12ad8:	lsr	r1, r1, #27
   12adc:	add	r3, r3, r1
   12ae0:	and	r3, r3, #31
   12ae4:	sub	r3, r3, r1
   12ae8:	ldr	r1, [r2, #-520]	; 0xfffffdf8
   12aec:	mov	r0, #1
   12af0:	orr	r3, r1, r0, lsl r3
   12af4:	str	r3, [r2, #-520]	; 0xfffffdf8
   12af8:	ldr	r3, [sl]
   12afc:	cmp	r3, #0
   12b00:	bne	12b44 <tcgetattr@plt+0xf5c>
   12b04:	ldr	r3, [r6]
   12b08:	add	r2, r3, #31
   12b0c:	cmp	r3, #0
   12b10:	movge	r2, r3
   12b14:	asr	r2, r2, #5
   12b18:	add	r1, sp, #680	; 0x2a8
   12b1c:	add	r2, r1, r2, lsl #2
   12b20:	asr	r1, r3, #31
   12b24:	lsr	r1, r1, #27
   12b28:	add	r3, r3, r1
   12b2c:	and	r3, r3, #31
   12b30:	sub	r3, r3, r1
   12b34:	ldr	r1, [r2, #-392]	; 0xfffffe78
   12b38:	mov	r0, #1
   12b3c:	orr	r3, r1, r0, lsl r3
   12b40:	str	r3, [r2, #-392]	; 0xfffffe78
   12b44:	mov	r3, #0
   12b48:	str	r3, [sp]
   12b4c:	add	r3, sp, #288	; 0x120
   12b50:	add	r2, sp, #160	; 0xa0
   12b54:	add	r1, sp, #32
   12b58:	ldr	r0, [sp, #20]
   12b5c:	bl	1184c <select@plt>
   12b60:	cmp	r0, #0
   12b64:	ble	127a0 <tcgetattr@plt+0xbb8>
   12b68:	ldr	r3, [r6]
   12b6c:	add	r2, r3, #31
   12b70:	cmp	r3, #0
   12b74:	movge	r2, r3
   12b78:	asr	r2, r2, #5
   12b7c:	asr	r1, r3, #31
   12b80:	lsr	r1, r1, #27
   12b84:	add	r3, r3, r1
   12b88:	and	r3, r3, #31
   12b8c:	sub	r3, r3, r1
   12b90:	mov	r1, #1
   12b94:	lsl	r3, r1, r3
   12b98:	add	r1, sp, #680	; 0x2a8
   12b9c:	add	r1, r1, r2, lsl #2
   12ba0:	ldr	r1, [r1, #-392]	; 0xfffffe78
   12ba4:	tst	r3, r1
   12ba8:	movne	r1, #1
   12bac:	strne	r1, [sl]
   12bb0:	add	r1, sp, #680	; 0x2a8
   12bb4:	add	r2, r1, r2, lsl #2
   12bb8:	ldr	r2, [r2, #-648]	; 0xfffffd78
   12bbc:	tst	r3, r2
   12bc0:	bne	127c8 <tcgetattr@plt+0xbe0>
   12bc4:	ldr	r3, [r8]
   12bc8:	add	r2, r3, #31
   12bcc:	cmp	r3, #0
   12bd0:	movge	r2, r3
   12bd4:	asr	r2, r2, #5
   12bd8:	add	r1, sp, #680	; 0x2a8
   12bdc:	add	r2, r1, r2, lsl #2
   12be0:	asr	r1, r3, #31
   12be4:	lsr	r1, r1, #27
   12be8:	add	r3, r3, r1
   12bec:	and	r3, r3, #31
   12bf0:	sub	r3, r3, r1
   12bf4:	ldr	r2, [r2, #-648]	; 0xfffffd78
   12bf8:	mov	r1, #1
   12bfc:	ands	r3, r2, r1, lsl r3
   12c00:	bne	127d0 <tcgetattr@plt+0xbe8>
   12c04:	mov	r5, #0
   12c08:	mov	fp, #1
   12c0c:	mov	r7, #255	; 0xff
   12c10:	b	128f0 <tcgetattr@plt+0xd08>
   12c14:	bl	13d00 <tcgetattr@plt+0x2118>
   12c18:	cmp	r0, #0
   12c1c:	ble	129ac <tcgetattr@plt+0xdc4>
   12c20:	bl	14368 <tcgetattr@plt+0x2780>
   12c24:	b	129ac <tcgetattr@plt+0xdc4>
   12c28:	bl	13df0 <tcgetattr@plt+0x2208>
   12c2c:	cmp	r0, #0
   12c30:	ble	129fc <tcgetattr@plt+0xe14>
   12c34:	bl	15a70 <tcgetattr@plt+0x3e88>
   12c38:	b	129fc <tcgetattr@plt+0xe14>
   12c3c:	bl	13d00 <tcgetattr@plt+0x2118>
   12c40:	cmp	r0, #0
   12c44:	ble	12c4c <tcgetattr@plt+0x1064>
   12c48:	bl	14368 <tcgetattr@plt+0x2780>
   12c4c:	mov	r0, #17
   12c50:	bl	13024 <tcgetattr@plt+0x143c>
   12c54:	b	12a0c <tcgetattr@plt+0xe24>
   12c58:	ldr	r0, [pc, #92]	; 12cbc <tcgetattr@plt+0x10d4>
   12c5c:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   12c60:	mov	r4, r0
   12c64:	b	12690 <tcgetattr@plt+0xaa8>
   12c68:	andeq	sl, r3, r4, lsl #14
   12c6c:	ldrdeq	sl, [r3], -r4
   12c70:	andeq	sl, r3, r4, ror #23
   12c74:	andeq	sl, r3, r0, ror #13
   12c78:	andeq	r0, r2, r0, lsl #1
   12c7c:	strdeq	sl, [r3], -ip
   12c80:	muleq	r3, ip, r1
   12c84:	strheq	r0, [r2], -r0	; <UNPREDICTABLE>
   12c88:	ldrdeq	sl, [r3], -r0
   12c8c:	andeq	sl, r3, ip, lsr #19
   12c90:	ldrdeq	sl, [r3], -ip
   12c94:			; <UNDEFINED> instruction: 0x0003a9b0
   12c98:	andeq	sl, r3, r8, lsl #18
   12c9c:	strdeq	r0, [r2], -r8
   12ca0:	andeq	r0, r2, r4, lsl #2
   12ca4:	muleq	r2, r8, r0
   12ca8:	andeq	r0, r2, r4, lsr #1
   12cac:	andeq	r0, r2, r0, ror #1
   12cb0:	andeq	r2, r3, r8, lsr #3
   12cb4:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   12cb8:	andeq	r2, r3, ip, lsl r5
   12cbc:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   12cc0:	push	{r4, r5, r6, lr}
   12cc4:	sub	sp, sp, #16
   12cc8:	mov	r4, r0
   12ccc:	mov	r5, r1
   12cd0:	ldr	r0, [r1]
   12cd4:	bl	1a950 <_obstack_memory_used@@Base+0x34>
   12cd8:	ldr	r2, [pc, #116]	; 12d54 <tcgetattr@plt+0x116c>
   12cdc:	ldr	r3, [pc, #116]	; 12d58 <tcgetattr@plt+0x1170>
   12ce0:	str	r2, [r3]
   12ce4:	ldr	r6, [pc, #112]	; 12d5c <tcgetattr@plt+0x1174>
   12ce8:	ldr	r1, [pc, #112]	; 12d60 <tcgetattr@plt+0x1178>
   12cec:	mov	r0, r6
   12cf0:	bl	1a3b4 <argp_parse@@Base+0xb0c>
   12cf4:	mov	r2, #24
   12cf8:	mov	r1, #5
   12cfc:	mov	r0, r6
   12d00:	bl	11b10 <openlog@plt>
   12d04:	mov	r3, #0
   12d08:	str	r3, [sp, #4]
   12d0c:	add	r2, sp, #12
   12d10:	str	r2, [sp]
   12d14:	mov	r2, r5
   12d18:	mov	r1, r4
   12d1c:	ldr	r0, [pc, #64]	; 12d64 <tcgetattr@plt+0x117c>
   12d20:	bl	198a8 <argp_parse@@Base>
   12d24:	ldr	r3, [sp, #12]
   12d28:	cmp	r4, r3
   12d2c:	beq	12d40 <tcgetattr@plt+0x1158>
   12d30:	ldr	r2, [pc, #48]	; 12d68 <tcgetattr@plt+0x1180>
   12d34:	mov	r1, #0
   12d38:	mov	r0, #1
   12d3c:	bl	1190c <error@plt>
   12d40:	mov	r0, #0
   12d44:	bl	11fe8 <tcgetattr@plt+0x400>
   12d48:	bl	12450 <tcgetattr@plt+0x868>
   12d4c:	add	sp, sp, #16
   12d50:	pop	{r4, r5, r6, pc}
   12d54:	andeq	r0, r2, r8, lsl #2
   12d58:	andeq	sl, r3, r4, ror #28
   12d5c:	andeq	r0, r2, r0, lsr #2
   12d60:			; <UNDEFINED> instruction: 0x000324b4
   12d64:	andeq	r2, r3, ip, lsr #3
   12d68:	andeq	r0, r2, r8, lsr #2
   12d6c:	push	{r4, r5, r6, lr}
   12d70:	mov	r4, r0
   12d74:	mov	r5, r1
   12d78:	ldr	r1, [pc, #24]	; 12d98 <tcgetattr@plt+0x11b0>
   12d7c:	bl	191e4 <tcgetattr@plt+0x75fc>
   12d80:	mov	r3, r5
   12d84:	mov	r2, r0
   12d88:	ldr	r1, [pc, #12]	; 12d9c <tcgetattr@plt+0x11b4>
   12d8c:	add	r0, r4, #5
   12d90:	bl	19128 <tcgetattr@plt+0x7540>
   12d94:	pop	{r4, r5, r6, pc}
   12d98:	andeq	r0, r2, r0, lsr #6
   12d9c:	andeq	r0, r2, r4, lsr #6
   12da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12da4:	sub	sp, sp, #12
   12da8:	ldr	r3, [pc, #348]	; 12f0c <tcgetattr@plt+0x1324>
   12dac:	ldr	sl, [r3]
   12db0:	ldr	r4, [sl]
   12db4:	cmp	r4, #0
   12db8:	beq	12e4c <tcgetattr@plt+0x1264>
   12dbc:	mov	r5, sl
   12dc0:	ldr	r7, [pc, #328]	; 12f10 <tcgetattr@plt+0x1328>
   12dc4:	mov	r6, #3
   12dc8:	ldr	r9, [pc, #324]	; 12f14 <tcgetattr@plt+0x132c>
   12dcc:	mov	r8, #5
   12dd0:	ldr	fp, [pc, #320]	; 12f18 <tcgetattr@plt+0x1330>
   12dd4:	b	12de4 <tcgetattr@plt+0x11fc>
   12dd8:	ldr	r4, [r5, #4]!
   12ddc:	cmp	r4, #0
   12de0:	beq	12e4c <tcgetattr@plt+0x1264>
   12de4:	mov	r2, r6
   12de8:	mov	r1, r7
   12dec:	mov	r0, r4
   12df0:	bl	11ba0 <strncmp@plt>
   12df4:	cmp	r0, #0
   12df8:	beq	12dd8 <tcgetattr@plt+0x11f0>
   12dfc:	mov	r2, r8
   12e00:	mov	r1, r9
   12e04:	mov	r0, r4
   12e08:	bl	11ba0 <strncmp@plt>
   12e0c:	cmp	r0, #0
   12e10:	beq	12dd8 <tcgetattr@plt+0x11f0>
   12e14:	mov	r2, #8
   12e18:	mov	r1, fp
   12e1c:	mov	r0, r4
   12e20:	bl	11ba0 <strncmp@plt>
   12e24:	cmp	r0, #0
   12e28:	beq	12dd8 <tcgetattr@plt+0x11f0>
   12e2c:	mov	r2, #4
   12e30:	ldr	r1, [pc, #228]	; 12f1c <tcgetattr@plt+0x1334>
   12e34:	mov	r0, r4
   12e38:	bl	11ba0 <strncmp@plt>
   12e3c:	cmp	r0, #0
   12e40:	strne	r4, [sl]
   12e44:	addne	sl, sl, #4
   12e48:	b	12dd8 <tcgetattr@plt+0x11f0>
   12e4c:	mov	r3, #0
   12e50:	str	r3, [sl]
   12e54:	ldr	r3, [pc, #196]	; 12f20 <tcgetattr@plt+0x1338>
   12e58:	ldr	r3, [r3]
   12e5c:	cmp	r3, #4
   12e60:	beq	12ed0 <tcgetattr@plt+0x12e8>
   12e64:	bic	r3, r3, #2
   12e68:	cmp	r3, #1
   12e6c:	beq	12ee4 <tcgetattr@plt+0x12fc>
   12e70:	ldr	r3, [pc, #172]	; 12f24 <tcgetattr@plt+0x133c>
   12e74:	ldr	r0, [r3]
   12e78:	bl	15c7c <tcgetattr@plt+0x4094>
   12e7c:	subs	r4, r0, #0
   12e80:	beq	12ef8 <tcgetattr@plt+0x1310>
   12e84:	mov	r3, sp
   12e88:	add	r2, sp, #4
   12e8c:	ldr	r1, [pc, #148]	; 12f28 <tcgetattr@plt+0x1340>
   12e90:	mov	r0, r4
   12e94:	bl	18c60 <tcgetattr@plt+0x7078>
   12e98:	ldr	r3, [sp]
   12e9c:	mov	r1, r3
   12ea0:	ldr	r0, [r3]
   12ea4:	bl	11a08 <execv@plt>
   12ea8:	mov	r2, r4
   12eac:	ldr	r1, [pc, #120]	; 12f2c <tcgetattr@plt+0x1344>
   12eb0:	mov	r0, #3
   12eb4:	bl	11aec <syslog@plt>
   12eb8:	mov	r1, r4
   12ebc:	ldr	r3, [pc, #108]	; 12f30 <tcgetattr@plt+0x1348>
   12ec0:	ldr	r0, [r3]
   12ec4:	bl	14174 <tcgetattr@plt+0x258c>
   12ec8:	add	sp, sp, #12
   12ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ed0:	mov	r2, #1
   12ed4:	ldr	r1, [pc, #88]	; 12f34 <tcgetattr@plt+0x134c>
   12ed8:	ldr	r0, [pc, #88]	; 12f38 <tcgetattr@plt+0x1350>
   12edc:	bl	119d8 <setenv@plt>
   12ee0:	b	12e70 <tcgetattr@plt+0x1288>
   12ee4:	mov	r2, #1
   12ee8:	ldr	r1, [pc, #76]	; 12f3c <tcgetattr@plt+0x1354>
   12eec:	ldr	r0, [pc, #68]	; 12f38 <tcgetattr@plt+0x1350>
   12ef0:	bl	119d8 <setenv@plt>
   12ef4:	b	12e70 <tcgetattr@plt+0x1288>
   12ef8:	ldr	r1, [pc, #64]	; 12f40 <tcgetattr@plt+0x1358>
   12efc:	ldr	r3, [pc, #44]	; 12f30 <tcgetattr@plt+0x1348>
   12f00:	ldr	r0, [r3]
   12f04:	bl	14124 <tcgetattr@plt+0x253c>
   12f08:	b	12e84 <tcgetattr@plt+0x129c>
   12f0c:	andeq	r2, r3, r4, lsl #10
   12f10:	andeq	r0, r2, ip, lsr #6
   12f14:	andeq	r0, r2, r0, lsr r3
   12f18:	andeq	r0, r2, r8, lsr r3
   12f1c:	andeq	r0, r2, r4, asr #6
   12f20:	strdeq	sl, [r3], -ip
   12f24:	muleq	r3, ip, r1
   12f28:	andeq	r0, r2, r0, ror r7
   12f2c:	andeq	r0, r2, r8, lsl #7
   12f30:	andeq	sl, r3, ip, lsr #19
   12f34:	andeq	r0, r2, ip, asr #6
   12f38:	andeq	r0, r2, r4, asr r3
   12f3c:	andeq	r0, r2, r0, ror #6
   12f40:	andeq	r0, r2, r8, ror #6
   12f44:	push	{r4, r5, r6, lr}
   12f48:	sub	sp, sp, #8
   12f4c:	mov	r4, r0
   12f50:	mov	r6, r1
   12f54:	mov	r3, #0
   12f58:	mov	r2, r3
   12f5c:	ldr	r1, [pc, #172]	; 13010 <tcgetattr@plt+0x1428>
   12f60:	add	r0, sp, #4
   12f64:	bl	11bd0 <forkpty@plt>
   12f68:	cmp	r0, #0
   12f6c:	blt	12fb4 <tcgetattr@plt+0x13cc>
   12f70:	cmp	r0, #0
   12f74:	bne	12fa8 <tcgetattr@plt+0x13c0>
   12f78:	ldr	r3, [pc, #148]	; 13014 <tcgetattr@plt+0x142c>
   12f7c:	ldr	r0, [r3]
   12f80:	cmp	r0, #2
   12f84:	bgt	13008 <tcgetattr@plt+0x1420>
   12f88:	ldr	r5, [pc, #128]	; 13010 <tcgetattr@plt+0x1428>
   12f8c:	mov	r1, r4
   12f90:	mov	r0, r5
   12f94:	bl	12d6c <tcgetattr@plt+0x1184>
   12f98:	mov	r2, r5
   12f9c:	mov	r1, r6
   12fa0:	mov	r0, r4
   12fa4:	bl	12da0 <tcgetattr@plt+0x11b8>
   12fa8:	ldr	r0, [sp, #4]
   12fac:	add	sp, sp, #8
   12fb0:	pop	{r4, r5, r6, pc}
   12fb4:	bl	11a14 <__errno_location@plt>
   12fb8:	ldr	r3, [r0]
   12fbc:	cmp	r3, #2
   12fc0:	beq	12fe4 <tcgetattr@plt+0x13fc>
   12fc4:	ldr	r1, [pc, #76]	; 13018 <tcgetattr@plt+0x1430>
   12fc8:	mov	r0, #3
   12fcc:	bl	11aec <syslog@plt>
   12fd0:	ldr	r1, [pc, #68]	; 1301c <tcgetattr@plt+0x1434>
   12fd4:	ldr	r3, [pc, #56]	; 13014 <tcgetattr@plt+0x142c>
   12fd8:	ldr	r0, [r3]
   12fdc:	bl	14124 <tcgetattr@plt+0x253c>
   12fe0:	b	12fa8 <tcgetattr@plt+0x13c0>
   12fe4:	ldr	r4, [pc, #52]	; 13020 <tcgetattr@plt+0x1438>
   12fe8:	mov	r1, r4
   12fec:	mov	r0, #3
   12ff0:	bl	11aec <syslog@plt>
   12ff4:	mov	r1, r4
   12ff8:	ldr	r3, [pc, #20]	; 13014 <tcgetattr@plt+0x142c>
   12ffc:	ldr	r0, [r3]
   13000:	bl	14124 <tcgetattr@plt+0x253c>
   13004:	b	12fa8 <tcgetattr@plt+0x13c0>
   13008:	bl	11bb8 <close@plt>
   1300c:	b	12f88 <tcgetattr@plt+0x13a0>
   13010:	andeq	sl, r3, r0, ror #19
   13014:	andeq	sl, r3, ip, lsr #19
   13018:	muleq	r2, ip, r3
   1301c:	andeq	r0, r2, r8, lsr #7
   13020:	muleq	r2, r0, r3
   13024:	push	{r4, lr}
   13028:	sub	sp, sp, #8
   1302c:	mov	r3, #1
   13030:	str	r3, [sp, #4]
   13034:	cmp	r0, #17
   13038:	beq	1308c <tcgetattr@plt+0x14a4>
   1303c:	cmp	r0, #1
   13040:	moveq	r3, #0
   13044:	streq	r3, [sp, #4]
   13048:	ldr	r4, [pc, #108]	; 130bc <tcgetattr@plt+0x14d4>
   1304c:	mov	r0, r4
   13050:	bl	19224 <tcgetattr@plt+0x763c>
   13054:	sub	r4, r4, #5
   13058:	mov	r1, #420	; 0x1a4
   1305c:	mov	r0, r4
   13060:	bl	11b7c <chmod@plt>
   13064:	mov	r2, #0
   13068:	mov	r1, r2
   1306c:	mov	r0, r4
   13070:	bl	119fc <chown@plt>
   13074:	mov	r1, #2
   13078:	ldr	r3, [pc, #64]	; 130c0 <tcgetattr@plt+0x14d8>
   1307c:	ldr	r0, [r3]
   13080:	bl	11a8c <shutdown@plt>
   13084:	ldr	r0, [sp, #4]
   13088:	bl	119a8 <exit@plt>
   1308c:	mov	r2, r3
   13090:	add	r1, sp, #4
   13094:	mvn	r0, #0
   13098:	bl	118e8 <waitpid@plt>
   1309c:	ldrb	r3, [sp, #5]
   130a0:	mov	r2, r0
   130a4:	ldr	r1, [pc, #24]	; 130c4 <tcgetattr@plt+0x14dc>
   130a8:	mov	r0, #6
   130ac:	bl	11aec <syslog@plt>
   130b0:	ldrb	r3, [sp, #5]
   130b4:	str	r3, [sp, #4]
   130b8:	b	13048 <tcgetattr@plt+0x1460>
   130bc:	andeq	sl, r3, r5, ror #19
   130c0:	andeq	sl, r3, ip, lsr #19
   130c4:			; <UNDEFINED> instruction: 0x000203b0
   130c8:	bx	lr
   130cc:	mov	r0, #0
   130d0:	bx	lr
   130d4:	ldr	r3, [pc, #8]	; 130e4 <tcgetattr@plt+0x14fc>
   130d8:	ldr	r0, [r3, #12]
   130dc:	and	r0, r0, #65536	; 0x10000
   130e0:	bx	lr
   130e4:	andeq	sl, r3, r8, lsr #24
   130e8:	cmp	r0, #0
   130ec:	ldr	r2, [pc, #16]	; 13104 <tcgetattr@plt+0x151c>
   130f0:	ldr	r3, [r2, #12]
   130f4:	orrne	r3, r3, #65536	; 0x10000
   130f8:	biceq	r3, r3, #65536	; 0x10000
   130fc:	str	r3, [r2, #12]
   13100:	bx	lr
   13104:	andeq	sl, r3, r8, lsr #24
   13108:	ldr	r3, [pc, #8]	; 13118 <tcgetattr@plt+0x1530>
   1310c:	ldr	r0, [r3, #12]
   13110:	and	r0, r0, #8
   13114:	bx	lr
   13118:	andeq	sl, r3, r8, lsr #24
   1311c:	ldr	r3, [pc, #12]	; 13130 <tcgetattr@plt+0x1548>
   13120:	ldr	r0, [r3]
   13124:	lsr	r0, r0, #10
   13128:	and	r0, r0, #1
   1312c:	bx	lr
   13130:	andeq	sl, r3, r8, lsr #24
   13134:	ldr	r3, [pc, #12]	; 13148 <tcgetattr@plt+0x1560>
   13138:	ldr	r0, [r3]
   1313c:	lsr	r0, r0, #11
   13140:	and	r0, r0, #1
   13144:	bx	lr
   13148:	andeq	sl, r3, r8, lsr #24
   1314c:	cmp	r0, #0
   13150:	ldr	r2, [pc, #16]	; 13168 <tcgetattr@plt+0x1580>
   13154:	ldr	r3, [r2, #12]
   13158:	orrne	r3, r3, #8
   1315c:	biceq	r3, r3, #8
   13160:	str	r3, [r2, #12]
   13164:	bx	lr
   13168:	andeq	sl, r3, r8, lsr #24
   1316c:	ldr	r3, [pc, #16]	; 13184 <tcgetattr@plt+0x159c>
   13170:	ldr	r0, [r3, #12]
   13174:	lsr	r0, r0, #1
   13178:	eor	r0, r0, #1
   1317c:	and	r0, r0, #1
   13180:	bx	lr
   13184:	andeq	sl, r3, r8, lsr #24
   13188:	cmp	r0, #0
   1318c:	ldr	r2, [pc, #16]	; 131a4 <tcgetattr@plt+0x15bc>
   13190:	ldr	r3, [r2]
   13194:	bicne	r3, r3, #32
   13198:	orreq	r3, r3, #32
   1319c:	str	r3, [r2]
   131a0:	bx	lr
   131a4:	andeq	sl, r3, r8, lsr #24
   131a8:	cmp	r0, #0
   131ac:	ldr	r2, [pc, #48]	; 131e4 <tcgetattr@plt+0x15fc>
   131b0:	ldr	r3, [r2, #8]
   131b4:	bicne	r3, r3, #304	; 0x130
   131b8:	orrne	r3, r3, #48	; 0x30
   131bc:	strne	r3, [r2, #8]
   131c0:	ldrne	r3, [r2, #4]
   131c4:	bicne	r3, r3, #1
   131c8:	biceq	r3, r3, #48	; 0x30
   131cc:	orreq	r3, r3, #288	; 0x120
   131d0:	streq	r3, [r2, #8]
   131d4:	ldreq	r3, [r2, #4]
   131d8:	orreq	r3, r3, #1
   131dc:	str	r3, [r2, #4]
   131e0:	bx	lr
   131e4:	andeq	sl, r3, r8, lsr #24
   131e8:	ldr	r3, [pc, #16]	; 13200 <tcgetattr@plt+0x1618>
   131ec:	ldr	r0, [r3]
   131f0:	lsr	r0, r0, #5
   131f4:	eor	r0, r0, #1
   131f8:	and	r0, r0, #1
   131fc:	bx	lr
   13200:	andeq	sl, r3, r8, lsr #24
   13204:	ldr	r3, [pc, #12]	; 13218 <tcgetattr@plt+0x1630>
   13208:	ldr	r0, [r3, #4]
   1320c:	eor	r0, r0, #1
   13210:	and	r0, r0, #1
   13214:	bx	lr
   13218:	andeq	sl, r3, r8, lsr #24
   1321c:	ldr	r3, [pc, #8]	; 1322c <tcgetattr@plt+0x1644>
   13220:	ldr	r0, [r3, #12]
   13224:	and	r0, r0, #2
   13228:	bx	lr
   1322c:	andeq	sl, r3, r8, lsr #24
   13230:	ldr	r3, [pc, #8]	; 13240 <tcgetattr@plt+0x1658>
   13234:	ldr	r0, [r3, #12]
   13238:	and	r0, r0, #1
   1323c:	bx	lr
   13240:	andeq	sl, r3, r8, lsr #24
   13244:	cmp	r0, #0
   13248:	ldr	r2, [pc, #16]	; 13260 <tcgetattr@plt+0x1678>
   1324c:	ldr	r3, [r2, #12]
   13250:	orrne	r3, r3, #2
   13254:	biceq	r3, r3, #2
   13258:	str	r3, [r2, #12]
   1325c:	bx	lr
   13260:	andeq	sl, r3, r8, lsr #24
   13264:	cmp	r0, #0
   13268:	ldr	r2, [pc, #16]	; 13280 <tcgetattr@plt+0x1698>
   1326c:	ldr	r3, [r2, #12]
   13270:	orrne	r3, r3, #1
   13274:	biceq	r3, r3, #1
   13278:	str	r3, [r2, #12]
   1327c:	bx	lr
   13280:	andeq	sl, r3, r8, lsr #24
   13284:	ldr	r3, [pc, #20]	; 132a0 <tcgetattr@plt+0x16b8>
   13288:	ldr	r0, [r3, #4]
   1328c:	and	r0, r0, #6144	; 0x1800
   13290:	cmp	r0, #6144	; 0x1800
   13294:	movne	r0, #0
   13298:	moveq	r0, #1
   1329c:	bx	lr
   132a0:	andeq	sl, r3, r8, lsr #24
   132a4:	cmp	r0, #0
   132a8:	ldr	r2, [pc, #16]	; 132c0 <tcgetattr@plt+0x16d8>
   132ac:	ldr	r3, [r2, #4]
   132b0:	orrne	r3, r3, #6144	; 0x1800
   132b4:	biceq	r3, r3, #6144	; 0x1800
   132b8:	str	r3, [r2, #4]
   132bc:	bx	lr
   132c0:	andeq	sl, r3, r8, lsr #24
   132c4:	ldr	r3, [pc, #16]	; 132dc <tcgetattr@plt+0x16f4>
   132c8:	ldr	r0, [r3, #12]
   132cc:	lsr	r0, r0, #9
   132d0:	eor	r0, r0, #1
   132d4:	and	r0, r0, #1
   132d8:	bx	lr
   132dc:	andeq	sl, r3, r8, lsr #24
   132e0:	cmp	r0, #0
   132e4:	ldr	r2, [pc, #16]	; 132fc <tcgetattr@plt+0x1714>
   132e8:	ldr	r3, [r2, #12]
   132ec:	bicne	r3, r3, #512	; 0x200
   132f0:	orreq	r3, r3, #512	; 0x200
   132f4:	str	r3, [r2, #12]
   132f8:	bx	lr
   132fc:	andeq	sl, r3, r8, lsr #24
   13300:	ldr	r3, [pc, #8]	; 13310 <tcgetattr@plt+0x1728>
   13304:	ldr	r0, [r3]
   13308:	and	r0, r0, #256	; 0x100
   1330c:	bx	lr
   13310:	andeq	sl, r3, r8, lsr #24
   13314:	push	{r4, lr}
   13318:	ldr	r4, [pc, #56]	; 13358 <tcgetattr@plt+0x1770>
   1331c:	mov	r1, r4
   13320:	ldr	r3, [pc, #52]	; 1335c <tcgetattr@plt+0x1774>
   13324:	ldr	r0, [r3]
   13328:	bl	11be8 <tcgetattr@plt>
   1332c:	ldr	lr, [pc, #44]	; 13360 <tcgetattr@plt+0x1778>
   13330:	mov	ip, r4
   13334:	ldm	ip!, {r0, r1, r2, r3}
   13338:	stmia	lr!, {r0, r1, r2, r3}
   1333c:	ldm	ip!, {r0, r1, r2, r3}
   13340:	stmia	lr!, {r0, r1, r2, r3}
   13344:	ldm	ip!, {r0, r1, r2, r3}
   13348:	stmia	lr!, {r0, r1, r2, r3}
   1334c:	ldm	ip, {r0, r1, r2}
   13350:	stm	lr, {r0, r1, r2}
   13354:	pop	{r4, pc}
   13358:	andeq	sl, r3, r8, lsr #24
   1335c:	ldrdeq	sl, [r3], -r0
   13360:	andeq	sl, r3, ip, ror #23
   13364:	push	{r4, r5, r6, lr}
   13368:	ldr	r5, [pc, #100]	; 133d4 <tcgetattr@plt+0x17ec>
   1336c:	mov	r4, #0
   13370:	mov	r6, r4
   13374:	bl	13de0 <tcgetattr@plt+0x21f8>
   13378:	cmp	r0, #0
   1337c:	movgt	r0, #0
   13380:	movle	r0, #1
   13384:	cmp	r4, #59	; 0x3b
   13388:	orrhi	r0, r0, #1
   1338c:	cmp	r0, #0
   13390:	bne	133a8 <tcgetattr@plt+0x17c0>
   13394:	mov	r0, r6
   13398:	bl	13e10 <tcgetattr@plt+0x2228>
   1339c:	strb	r0, [r5], #1
   133a0:	add	r4, r4, #1
   133a4:	b	13374 <tcgetattr@plt+0x178c>
   133a8:	ldr	ip, [pc, #40]	; 133d8 <tcgetattr@plt+0x17f0>
   133ac:	ldr	lr, [pc, #32]	; 133d4 <tcgetattr@plt+0x17ec>
   133b0:	ldm	lr!, {r0, r1, r2, r3}
   133b4:	stmia	ip!, {r0, r1, r2, r3}
   133b8:	ldm	lr!, {r0, r1, r2, r3}
   133bc:	stmia	ip!, {r0, r1, r2, r3}
   133c0:	ldm	lr!, {r0, r1, r2, r3}
   133c4:	stmia	ip!, {r0, r1, r2, r3}
   133c8:	ldm	lr, {r0, r1, r2}
   133cc:	stm	ip, {r0, r1, r2}
   133d0:	pop	{r4, r5, r6, pc}
   133d4:	andeq	sl, r3, r8, lsr #24
   133d8:	andeq	sl, r3, ip, ror #23
   133dc:	push	{r4, lr}
   133e0:	mov	r2, #60	; 0x3c
   133e4:	ldr	r1, [pc, #36]	; 13410 <tcgetattr@plt+0x1828>
   133e8:	ldr	r0, [pc, #36]	; 13414 <tcgetattr@plt+0x182c>
   133ec:	bl	11840 <memcmp@plt>
   133f0:	cmp	r0, #0
   133f4:	popeq	{r4, pc}
   133f8:	ldr	r2, [pc, #20]	; 13414 <tcgetattr@plt+0x182c>
   133fc:	mov	r1, #0
   13400:	ldr	r3, [pc, #16]	; 13418 <tcgetattr@plt+0x1830>
   13404:	ldr	r0, [r3]
   13408:	bl	118f4 <tcsetattr@plt>
   1340c:	pop	{r4, pc}
   13410:	andeq	sl, r3, ip, ror #23
   13414:	andeq	sl, r3, r8, lsr #24
   13418:	ldrdeq	sl, [r3], -r0
   1341c:	sub	r0, r0, #1
   13420:	cmp	r0, #17
   13424:	ldrls	pc, [pc, r0, lsl #2]
   13428:	b	135ec <tcgetattr@plt+0x1a04>
   1342c:	ldrdeq	r3, [r1], -r8
   13430:	ldrdeq	r3, [r1], -r8
   13434:			; <UNDEFINED> instruction: 0x000134bc
   13438:	andeq	r3, r1, r4, ror #10
   1343c:	andeq	r3, r1, r4, asr #11
   13440:	ldrdeq	r3, [r1], -r8
   13444:	ldrdeq	r3, [r1], -r4
   13448:	andeq	r3, r1, r4, ror r4
   1344c:	andeq	r3, r1, ip, ror r5
   13450:	andeq	r3, r1, ip, lsl #9
   13454:	andeq	r3, r1, r4, lsr #9
   13458:	andeq	r3, r1, ip, lsl r5
   1345c:	andeq	r3, r1, r4, lsr r5
   13460:	andeq	r3, r1, ip, asr #10
   13464:	andeq	r3, r1, ip, ror #9
   13468:	andeq	r3, r1, r4, lsl #10
   1346c:	muleq	r1, r4, r5
   13470:	andeq	r3, r1, ip, lsr #11
   13474:	ldr	r3, [pc, #384]	; 135fc <tcgetattr@plt+0x1a14>
   13478:	ldrb	r0, [r3, #21]!
   1347c:	strb	r0, [r1]
   13480:	str	r3, [r2]
   13484:	mov	r0, #2
   13488:	bx	lr
   1348c:	ldr	r3, [pc, #360]	; 135fc <tcgetattr@plt+0x1a14>
   13490:	ldrb	r0, [r3, #19]!
   13494:	strb	r0, [r1]
   13498:	str	r3, [r2]
   1349c:	mov	r0, #2
   134a0:	bx	lr
   134a4:	ldr	r3, [pc, #336]	; 135fc <tcgetattr@plt+0x1a14>
   134a8:	ldrb	r0, [r3, #20]!
   134ac:	strb	r0, [r1]
   134b0:	str	r3, [r2]
   134b4:	mov	r0, #2
   134b8:	bx	lr
   134bc:	ldr	r3, [pc, #312]	; 135fc <tcgetattr@plt+0x1a14>
   134c0:	ldrb	r0, [r3, #17]!
   134c4:	strb	r0, [r1]
   134c8:	str	r3, [r2]
   134cc:	mov	r0, #98	; 0x62
   134d0:	bx	lr
   134d4:	ldr	r3, [pc, #288]	; 135fc <tcgetattr@plt+0x1a14>
   134d8:	ldrb	r0, [r3, #18]!
   134dc:	strb	r0, [r1]
   134e0:	str	r3, [r2]
   134e4:	mov	r0, #98	; 0x62
   134e8:	bx	lr
   134ec:	ldr	r3, [pc, #264]	; 135fc <tcgetattr@plt+0x1a14>
   134f0:	ldrb	r0, [r3, #25]!
   134f4:	strb	r0, [r1]
   134f8:	str	r3, [r2]
   134fc:	mov	r0, #2
   13500:	bx	lr
   13504:	ldr	r3, [pc, #240]	; 135fc <tcgetattr@plt+0x1a14>
   13508:	ldrb	r0, [r3, #26]!
   1350c:	strb	r0, [r1]
   13510:	str	r3, [r2]
   13514:	mov	r0, #2
   13518:	bx	lr
   1351c:	ldr	r3, [pc, #216]	; 135fc <tcgetattr@plt+0x1a14>
   13520:	ldrb	r0, [r3, #31]!
   13524:	strb	r0, [r1]
   13528:	str	r3, [r2]
   1352c:	mov	r0, #2
   13530:	bx	lr
   13534:	ldr	r3, [pc, #192]	; 135fc <tcgetattr@plt+0x1a14>
   13538:	ldrb	r0, [r3, #29]!
   1353c:	strb	r0, [r1]
   13540:	str	r3, [r2]
   13544:	mov	r0, #2
   13548:	bx	lr
   1354c:	ldr	r3, [pc, #168]	; 135fc <tcgetattr@plt+0x1a14>
   13550:	ldrb	r0, [r3, #32]!
   13554:	strb	r0, [r1]
   13558:	str	r3, [r2]
   1355c:	mov	r0, #2
   13560:	bx	lr
   13564:	ldr	r3, [pc, #144]	; 135fc <tcgetattr@plt+0x1a14>
   13568:	ldrb	r0, [r3, #30]!
   1356c:	strb	r0, [r1]
   13570:	str	r3, [r2]
   13574:	mov	r0, #34	; 0x22
   13578:	bx	lr
   1357c:	ldr	r3, [pc, #120]	; 135fc <tcgetattr@plt+0x1a14>
   13580:	ldrb	r0, [r3, #27]!
   13584:	strb	r0, [r1]
   13588:	str	r3, [r2]
   1358c:	mov	r0, #66	; 0x42
   13590:	bx	lr
   13594:	ldr	r3, [pc, #96]	; 135fc <tcgetattr@plt+0x1a14>
   13598:	ldrb	r0, [r3, #28]!
   1359c:	strb	r0, [r1]
   135a0:	str	r3, [r2]
   135a4:	mov	r0, #2
   135a8:	bx	lr
   135ac:	ldr	r3, [pc, #72]	; 135fc <tcgetattr@plt+0x1a14>
   135b0:	ldrb	r0, [r3, #33]!	; 0x21
   135b4:	strb	r0, [r1]
   135b8:	str	r3, [r2]
   135bc:	mov	r0, #2
   135c0:	bx	lr
   135c4:	mov	r3, #0
   135c8:	strb	r3, [r1]
   135cc:	str	r3, [r2]
   135d0:	mov	r0, #3
   135d4:	bx	lr
   135d8:	mov	r3, #0
   135dc:	strb	r3, [r1]
   135e0:	str	r3, [r2]
   135e4:	mov	r0, #3
   135e8:	bx	lr
   135ec:	mov	r0, #0
   135f0:	strb	r0, [r1]
   135f4:	str	r0, [r2]
   135f8:	bx	lr
   135fc:	andeq	sl, r3, r8, lsr #24
   13600:	push	{r4, lr}
   13604:	ldr	r3, [pc, #64]	; 1364c <tcgetattr@plt+0x1a64>
   13608:	ldr	r3, [r3]
   1360c:	cmn	r3, #1
   13610:	cmpne	r0, r3
   13614:	ble	13644 <tcgetattr@plt+0x1a5c>
   13618:	ldr	r2, [pc, #44]	; 1364c <tcgetattr@plt+0x1a64>
   1361c:	ldr	r3, [r2, #8]!
   13620:	cmn	r3, #1
   13624:	cmpne	r3, r0
   13628:	blt	1361c <tcgetattr@plt+0x1a34>
   1362c:	cmn	r3, #1
   13630:	subeq	r2, r2, #8
   13634:	ldr	r1, [r2, #4]
   13638:	ldr	r0, [pc, #16]	; 13650 <tcgetattr@plt+0x1a68>
   1363c:	bl	118ac <cfsetospeed@plt>
   13640:	pop	{r4, pc}
   13644:	ldr	r2, [pc]	; 1364c <tcgetattr@plt+0x1a64>
   13648:	b	1362c <tcgetattr@plt+0x1a44>
   1364c:	andeq	r2, r3, r0, ror r2
   13650:	andeq	sl, r3, r8, lsr #24
   13654:	push	{r4, lr}
   13658:	ldr	r3, [pc, #64]	; 136a0 <tcgetattr@plt+0x1ab8>
   1365c:	ldr	r3, [r3]
   13660:	cmn	r3, #1
   13664:	cmpne	r0, r3
   13668:	ble	13698 <tcgetattr@plt+0x1ab0>
   1366c:	ldr	r2, [pc, #44]	; 136a0 <tcgetattr@plt+0x1ab8>
   13670:	ldr	r3, [r2, #8]!
   13674:	cmn	r3, #1
   13678:	cmpne	r3, r0
   1367c:	blt	13670 <tcgetattr@plt+0x1a88>
   13680:	cmn	r3, #1
   13684:	subeq	r2, r2, #8
   13688:	ldr	r1, [r2, #4]
   1368c:	ldr	r0, [pc, #16]	; 136a4 <tcgetattr@plt+0x1abc>
   13690:	bl	119f0 <cfsetispeed@plt>
   13694:	pop	{r4, pc}
   13698:	ldr	r2, [pc]	; 136a0 <tcgetattr@plt+0x1ab8>
   1369c:	b	13680 <tcgetattr@plt+0x1a98>
   136a0:	andeq	r2, r3, r0, ror r2
   136a4:	andeq	sl, r3, r8, lsr #24
   136a8:	ldr	r3, [r0, #12]
   136ac:	ldrb	r2, [r3]
   136b0:	cmp	r2, #123	; 0x7b
   136b4:	bxne	lr
   136b8:	ldr	r1, [r0, #4]
   136bc:	b	136e0 <tcgetattr@plt+0x1af8>
   136c0:	ldr	r2, [r0, #4]
   136c4:	add	r2, r2, #1
   136c8:	str	r2, [r0, #4]
   136cc:	add	r3, r3, #1
   136d0:	str	r3, [r0, #12]
   136d4:	ldrb	r2, [r3]
   136d8:	cmp	r2, #0
   136dc:	beq	13710 <tcgetattr@plt+0x1b28>
   136e0:	cmp	r2, #123	; 0x7b
   136e4:	beq	136c0 <tcgetattr@plt+0x1ad8>
   136e8:	cmp	r2, #125	; 0x7d
   136ec:	bne	136cc <tcgetattr@plt+0x1ae4>
   136f0:	ldr	r2, [r0, #4]
   136f4:	sub	r2, r2, #1
   136f8:	str	r2, [r0, #4]
   136fc:	cmp	r1, r2
   13700:	bne	136cc <tcgetattr@plt+0x1ae4>
   13704:	add	r3, r3, #1
   13708:	str	r3, [r0, #12]
   1370c:	bx	lr
   13710:	bx	lr
   13714:	push	{r4, lr}
   13718:	mov	r0, #63	; 0x3f
   1371c:	bl	11b70 <umask@plt>
   13720:	mov	r4, r0
   13724:	ldr	r3, [pc, #60]	; 13768 <tcgetattr@plt+0x1b80>
   13728:	ldr	r3, [r3]
   1372c:	cmp	r3, #0
   13730:	beq	13750 <tcgetattr@plt+0x1b68>
   13734:	mov	r0, r4
   13738:	bl	11b70 <umask@plt>
   1373c:	ldr	r3, [pc, #36]	; 13768 <tcgetattr@plt+0x1b80>
   13740:	ldr	r0, [r3]
   13744:	clz	r0, r0
   13748:	lsr	r0, r0, #5
   1374c:	pop	{r4, pc}
   13750:	ldr	r1, [pc, #20]	; 1376c <tcgetattr@plt+0x1b84>
   13754:	ldr	r0, [pc, #20]	; 13770 <tcgetattr@plt+0x1b88>
   13758:	bl	11b34 <fopen64@plt>
   1375c:	ldr	r3, [pc, #4]	; 13768 <tcgetattr@plt+0x1b80>
   13760:	str	r0, [r3]
   13764:	b	13734 <tcgetattr@plt+0x1b4c>
   13768:	andeq	r2, r3, r8, lsr #10
   1376c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   13770:	ldrdeq	r0, [r2], -r4
   13774:	ldr	r3, [pc, #48]	; 137ac <tcgetattr@plt+0x1bc4>
   13778:	ldr	r0, [r3]
   1377c:	cmp	r0, #0
   13780:	beq	1379c <tcgetattr@plt+0x1bb4>
   13784:	push	{r4, lr}
   13788:	bl	11a68 <fclose@plt>
   1378c:	mov	r0, #0
   13790:	ldr	r3, [pc, #20]	; 137ac <tcgetattr@plt+0x1bc4>
   13794:	str	r0, [r3]
   13798:	pop	{r4, pc}
   1379c:	mov	r0, #0
   137a0:	ldr	r3, [pc, #4]	; 137ac <tcgetattr@plt+0x1bc4>
   137a4:	str	r0, [r3]
   137a8:	bx	lr
   137ac:	andeq	r2, r3, r8, lsr #10
   137b0:	mov	r1, r0
   137b4:	ldr	r3, [r0, #12]
   137b8:	ldrb	r2, [r3]
   137bc:	cmp	r2, #123	; 0x7b
   137c0:	bne	13828 <tcgetattr@plt+0x1c40>
   137c4:	add	r0, r3, #1
   137c8:	str	r0, [r1, #12]
   137cc:	ldrb	r2, [r3, #1]
   137d0:	cmp	r2, #0
   137d4:	cmpne	r2, #125	; 0x7d
   137d8:	beq	13820 <tcgetattr@plt+0x1c38>
   137dc:	mov	r3, r0
   137e0:	add	r3, r3, #1
   137e4:	str	r3, [r1, #12]
   137e8:	ldrb	r2, [r3]
   137ec:	cmp	r2, #0
   137f0:	cmpne	r2, #125	; 0x7d
   137f4:	bne	137e0 <tcgetattr@plt+0x1bf8>
   137f8:	cmp	r2, #0
   137fc:	streq	r0, [r1, #12]
   13800:	moveq	r3, #2
   13804:	streq	r3, [r1]
   13808:	movne	r2, #2
   1380c:	strne	r2, [r1]
   13810:	addne	r3, r3, #1
   13814:	strne	r3, [r1, #12]
   13818:	movne	r0, #0
   1381c:	bx	lr
   13820:	mov	r3, r0
   13824:	b	137f8 <tcgetattr@plt+0x1c10>
   13828:	push	{lr}		; (str lr, [sp, #-4]!)
   1382c:	sub	sp, sp, #76	; 0x4c
   13830:	add	r2, r3, #1
   13834:	str	r2, [r0, #12]
   13838:	ldrb	r3, [r3]
   1383c:	sub	r3, r3, #76	; 0x4c
   13840:	cmp	r3, #41	; 0x29
   13844:	ldrls	pc, [pc, r3, lsl #2]
   13848:	b	139cc <tcgetattr@plt+0x1de4>
   1384c:	andeq	r3, r1, r4, asr #18
   13850:	andeq	r3, r1, ip, asr #19
   13854:	andeq	r3, r1, ip, asr #19
   13858:	andeq	r3, r1, ip, asr #19
   1385c:	andeq	r3, r1, ip, asr #19
   13860:	andeq	r3, r1, ip, asr #19
   13864:	andeq	r3, r1, ip, asr #19
   13868:	andeq	r3, r1, ip, asr #19
   1386c:	andeq	r3, r1, r0, ror r9
   13870:	andeq	r3, r1, r0, lsr #19
   13874:	andeq	r3, r1, ip, asr #19
   13878:	andeq	r3, r1, ip, asr #19
   1387c:	andeq	r3, r1, ip, asr #19
   13880:	andeq	r3, r1, ip, asr #19
   13884:	andeq	r3, r1, ip, asr #19
   13888:	andeq	r3, r1, ip, asr #19
   1388c:	andeq	r3, r1, ip, asr #19
   13890:	andeq	r3, r1, ip, asr #19
   13894:	andeq	r3, r1, ip, asr #19
   13898:	andeq	r3, r1, ip, asr #19
   1389c:	andeq	r3, r1, ip, asr #19
   138a0:	ldrdeq	r3, [r1], -ip
   138a4:	andeq	r3, r1, ip, asr #19
   138a8:	andeq	r3, r1, ip, asr #19
   138ac:	strdeq	r3, [r1], -r4
   138b0:	andeq	r3, r1, ip, asr #19
   138b4:	andeq	r3, r1, ip, asr #19
   138b8:	andeq	r3, r1, ip, asr #19
   138bc:	andeq	r3, r1, r4, lsr #18
   138c0:	andeq	r3, r1, ip, asr #19
   138c4:	andeq	r3, r1, ip, asr #19
   138c8:	andeq	r3, r1, ip, asr #19
   138cc:	andeq	r3, r1, r4, lsr r9
   138d0:	andeq	r3, r1, ip, asr #19
   138d4:	andeq	r3, r1, ip, asr #19
   138d8:	andeq	r3, r1, ip, asr #19
   138dc:	andeq	r3, r1, ip, asr #19
   138e0:	andeq	r3, r1, ip, asr #19
   138e4:	andeq	r3, r1, ip, asr #19
   138e8:	andeq	r3, r1, ip, asr #19
   138ec:	andeq	r3, r1, r0, asr r9
   138f0:	andeq	r3, r1, r8, lsl #19
   138f4:	add	r0, sp, #4
   138f8:	bl	11828 <time@plt>
   138fc:	add	r0, sp, #4
   13900:	bl	11960 <localtime@plt>
   13904:	mov	r3, r0
   13908:	ldr	r2, [pc, #216]	; 139e8 <tcgetattr@plt+0x1e00>
   1390c:	mov	r1, #64	; 0x40
   13910:	add	r0, sp, #8
   13914:	bl	11954 <strftime@plt>
   13918:	add	r0, sp, #8
   1391c:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   13920:	b	139e0 <tcgetattr@plt+0x1df8>
   13924:	ldr	r3, [pc, #192]	; 139ec <tcgetattr@plt+0x1e04>
   13928:	ldr	r0, [r3]
   1392c:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   13930:	b	139e0 <tcgetattr@plt+0x1df8>
   13934:	ldr	r3, [pc, #180]	; 139f0 <tcgetattr@plt+0x1e08>
   13938:	ldr	r0, [r3]
   1393c:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   13940:	b	139e0 <tcgetattr@plt+0x1df8>
   13944:	ldr	r0, [pc, #168]	; 139f4 <tcgetattr@plt+0x1e0c>
   13948:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   1394c:	b	139e0 <tcgetattr@plt+0x1df8>
   13950:	mov	r1, #47	; 0x2f
   13954:	ldr	r0, [pc, #156]	; 139f8 <tcgetattr@plt+0x1e10>
   13958:	bl	119cc <strchr@plt>
   1395c:	cmp	r0, #0
   13960:	addne	r0, r0, #1
   13964:	ldreq	r0, [pc, #136]	; 139f4 <tcgetattr@plt+0x1e0c>
   13968:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   1396c:	b	139e0 <tcgetattr@plt+0x1df8>
   13970:	ldr	r3, [pc, #132]	; 139fc <tcgetattr@plt+0x1e14>
   13974:	ldr	r0, [r3]
   13978:	cmp	r0, #0
   1397c:	beq	139e0 <tcgetattr@plt+0x1df8>
   13980:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   13984:	b	139e0 <tcgetattr@plt+0x1df8>
   13988:	ldr	r3, [pc, #112]	; 13a00 <tcgetattr@plt+0x1e18>
   1398c:	ldr	r0, [r3]
   13990:	cmp	r0, #0
   13994:	beq	139e0 <tcgetattr@plt+0x1df8>
   13998:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   1399c:	b	139e0 <tcgetattr@plt+0x1df8>
   139a0:	ldr	r0, [pc, #92]	; 13a04 <tcgetattr@plt+0x1e1c>
   139a4:	bl	11924 <getenv@plt>
   139a8:	cmp	r0, #0
   139ac:	beq	139c0 <tcgetattr@plt+0x1dd8>
   139b0:	ldr	r0, [pc, #76]	; 13a04 <tcgetattr@plt+0x1e1c>
   139b4:	bl	11924 <getenv@plt>
   139b8:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   139bc:	b	139e0 <tcgetattr@plt+0x1df8>
   139c0:	ldr	r0, [pc, #64]	; 13a08 <tcgetattr@plt+0x1e20>
   139c4:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   139c8:	b	139e0 <tcgetattr@plt+0x1df8>
   139cc:	mov	r3, #2
   139d0:	str	r3, [r0]
   139d4:	mov	r0, #0
   139d8:	b	139e0 <tcgetattr@plt+0x1df8>
   139dc:	mov	r0, #0
   139e0:	add	sp, sp, #76	; 0x4c
   139e4:	pop	{pc}		; (ldr pc, [sp], #4)
   139e8:	andeq	r0, r2, r8, ror #7
   139ec:	andeq	sl, r3, r0, ror #23
   139f0:	andeq	sl, r3, r4, lsr #19
   139f4:	andeq	sl, r3, r0, ror #19
   139f8:	andeq	sl, r3, r1, ror #19
   139fc:	andeq	sl, r3, r0, lsl #14
   13a00:	andeq	sl, r3, r8, ror #23
   13a04:	andeq	r0, r2, r0, ror r0
   13a08:	andeq	r0, r2, r0, ror r7
   13a0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a10:	mov	r4, r0
   13a14:	ldr	r5, [r0, #4]
   13a18:	ldr	r3, [r0, #12]
   13a1c:	ldrb	r2, [r3]
   13a20:	cmp	r2, #123	; 0x7b
   13a24:	addeq	r2, r5, #1
   13a28:	streq	r2, [r0, #4]
   13a2c:	addeq	r3, r3, #1
   13a30:	streq	r3, [r0, #12]
   13a34:	add	r6, r0, #16
   13a38:	mov	r7, #1
   13a3c:	b	13b58 <tcgetattr@plt+0x1f70>
   13a40:	ldr	r3, [r4, #4]
   13a44:	add	r3, r3, #1
   13a48:	str	r3, [r4, #4]
   13a4c:	ldr	r2, [r4, #32]
   13a50:	ldr	r3, [r4, #28]
   13a54:	cmp	r2, r3
   13a58:	beq	13ad0 <tcgetattr@plt+0x1ee8>
   13a5c:	ldr	r3, [r4, #28]
   13a60:	add	r2, r3, #1
   13a64:	str	r2, [r4, #28]
   13a68:	ldr	r2, [r4, #12]
   13a6c:	ldrb	r2, [r2]
   13a70:	strb	r2, [r3]
   13a74:	ldr	r3, [r4, #12]
   13a78:	add	r2, r3, #1
   13a7c:	str	r2, [r4, #12]
   13a80:	ldrb	r3, [r3, #1]
   13a84:	cmp	r3, #0
   13a88:	cmpne	r3, #37	; 0x25
   13a8c:	beq	13ae0 <tcgetattr@plt+0x1ef8>
   13a90:	cmp	r3, #123	; 0x7b
   13a94:	beq	13a40 <tcgetattr@plt+0x1e58>
   13a98:	cmp	r3, #125	; 0x7d
   13a9c:	beq	13ab0 <tcgetattr@plt+0x1ec8>
   13aa0:	cmp	r3, #92	; 0x5c
   13aa4:	addeq	r2, r2, #1
   13aa8:	streq	r2, [r4, #12]
   13aac:	b	13a4c <tcgetattr@plt+0x1e64>
   13ab0:	ldr	r3, [r4, #4]
   13ab4:	sub	r3, r3, #1
   13ab8:	str	r3, [r4, #4]
   13abc:	cmp	r5, r3
   13ac0:	bne	13a4c <tcgetattr@plt+0x1e64>
   13ac4:	add	r2, r2, #1
   13ac8:	str	r2, [r4, #12]
   13acc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ad0:	mov	r1, r7
   13ad4:	mov	r0, r6
   13ad8:	bl	1a754 <_obstack_newchunk@@Base>
   13adc:	b	13a5c <tcgetattr@plt+0x1e74>
   13ae0:	cmp	r3, #0
   13ae4:	beq	13b7c <tcgetattr@plt+0x1f94>
   13ae8:	cmp	r3, #37	; 0x25
   13aec:	beq	13bbc <tcgetattr@plt+0x1fd4>
   13af0:	add	r3, r2, #1
   13af4:	str	r3, [r4, #12]
   13af8:	ldrb	r3, [r2, #1]
   13afc:	cmp	r3, #63	; 0x3f
   13b00:	beq	13c10 <tcgetattr@plt+0x2028>
   13b04:	mov	r0, r4
   13b08:	bl	137b0 <tcgetattr@plt+0x1bc8>
   13b0c:	subs	r8, r0, #0
   13b10:	beq	13b50 <tcgetattr@plt+0x1f68>
   13b14:	mov	r0, r8
   13b18:	bl	119c0 <strlen@plt>
   13b1c:	mov	r9, r0
   13b20:	ldr	r3, [r4, #32]
   13b24:	ldr	r2, [r4, #28]
   13b28:	sub	r3, r3, r2
   13b2c:	cmp	r0, r3
   13b30:	bhi	13c58 <tcgetattr@plt+0x2070>
   13b34:	mov	r2, r9
   13b38:	mov	r1, r8
   13b3c:	ldr	r0, [r4, #28]
   13b40:	bl	11810 <memcpy@plt>
   13b44:	ldr	r3, [r4, #28]
   13b48:	add	r9, r3, r9
   13b4c:	str	r9, [r4, #28]
   13b50:	mov	r0, r8
   13b54:	bl	1a49c <argp_parse@@Base+0xbf4>
   13b58:	ldr	r3, [r4]
   13b5c:	cmp	r3, #0
   13b60:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b64:	ldr	r2, [r4, #12]
   13b68:	ldrb	r3, [r2]
   13b6c:	cmp	r3, #0
   13b70:	cmpne	r3, #37	; 0x25
   13b74:	bne	13a90 <tcgetattr@plt+0x1ea8>
   13b78:	b	13ae0 <tcgetattr@plt+0x1ef8>
   13b7c:	ldr	r2, [r4, #32]
   13b80:	ldr	r3, [r4, #28]
   13b84:	cmp	r2, r3
   13b88:	beq	13bac <tcgetattr@plt+0x1fc4>
   13b8c:	ldr	r3, [r4, #28]
   13b90:	add	r2, r3, #1
   13b94:	str	r2, [r4, #28]
   13b98:	mov	r2, #0
   13b9c:	strb	r2, [r3]
   13ba0:	mov	r3, #1
   13ba4:	str	r3, [r4]
   13ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bac:	mov	r1, #1
   13bb0:	add	r0, r4, #16
   13bb4:	bl	1a754 <_obstack_newchunk@@Base>
   13bb8:	b	13b8c <tcgetattr@plt+0x1fa4>
   13bbc:	ldrb	r3, [r2, #1]
   13bc0:	cmp	r3, #37	; 0x25
   13bc4:	bne	13af0 <tcgetattr@plt+0x1f08>
   13bc8:	ldr	r2, [r4, #32]
   13bcc:	ldr	r3, [r4, #28]
   13bd0:	cmp	r2, r3
   13bd4:	beq	13c00 <tcgetattr@plt+0x2018>
   13bd8:	ldr	r3, [r4, #28]
   13bdc:	add	r2, r3, #1
   13be0:	str	r2, [r4, #28]
   13be4:	ldr	r2, [r4, #12]
   13be8:	ldrb	r2, [r2]
   13bec:	strb	r2, [r3]
   13bf0:	ldr	r3, [r4, #12]
   13bf4:	add	r3, r3, #2
   13bf8:	str	r3, [r4, #12]
   13bfc:	b	13b58 <tcgetattr@plt+0x1f70>
   13c00:	mov	r1, r7
   13c04:	mov	r0, r6
   13c08:	bl	1a754 <_obstack_newchunk@@Base>
   13c0c:	b	13bd8 <tcgetattr@plt+0x1ff0>
   13c10:	add	r2, r2, #2
   13c14:	str	r2, [r4, #12]
   13c18:	mov	r0, r4
   13c1c:	bl	137b0 <tcgetattr@plt+0x1bc8>
   13c20:	subs	r8, r0, #0
   13c24:	beq	13c44 <tcgetattr@plt+0x205c>
   13c28:	mov	r0, r4
   13c2c:	bl	13a0c <tcgetattr@plt+0x1e24>
   13c30:	mov	r0, r4
   13c34:	bl	136a8 <tcgetattr@plt+0x1ac0>
   13c38:	mov	r0, r8
   13c3c:	bl	1a49c <argp_parse@@Base+0xbf4>
   13c40:	b	13b58 <tcgetattr@plt+0x1f70>
   13c44:	mov	r0, r4
   13c48:	bl	136a8 <tcgetattr@plt+0x1ac0>
   13c4c:	mov	r0, r4
   13c50:	bl	13a0c <tcgetattr@plt+0x1e24>
   13c54:	b	13c38 <tcgetattr@plt+0x2050>
   13c58:	mov	r1, r0
   13c5c:	mov	r0, r6
   13c60:	bl	1a754 <_obstack_newchunk@@Base>
   13c64:	b	13b34 <tcgetattr@plt+0x1f4c>
   13c68:	ldr	r3, [pc, #52]	; 13ca4 <tcgetattr@plt+0x20bc>
   13c6c:	add	r2, r3, #8
   13c70:	str	r2, [r3, #4]
   13c74:	ldr	r3, [pc, #44]	; 13ca8 <tcgetattr@plt+0x20c0>
   13c78:	str	r2, [r3, #80]	; 0x50
   13c7c:	add	r2, r3, #88	; 0x58
   13c80:	str	r2, [r3, #84]	; 0x54
   13c84:	ldr	r3, [pc, #32]	; 13cac <tcgetattr@plt+0x20c4>
   13c88:	str	r2, [r3, #160]	; 0xa0
   13c8c:	add	r2, r3, #168	; 0xa8
   13c90:	str	r2, [r3, #164]	; 0xa4
   13c94:	ldr	r3, [pc, #20]	; 13cb0 <tcgetattr@plt+0x20c8>
   13c98:	add	r2, r3, #180	; 0xb4
   13c9c:	str	r2, [r3, #176]	; 0xb0
   13ca0:	bx	lr
   13ca4:	andeq	r2, r3, r8, lsr #10
   13ca8:	andeq	r4, r3, r0, lsr #10
   13cac:	andeq	r6, r3, r8, lsl r5
   13cb0:	andeq	r8, r3, r0, lsl r5
   13cb4:	ldr	r3, [pc, #16]	; 13ccc <tcgetattr@plt+0x20e4>
   13cb8:	ldr	r3, [r3, #160]	; 0xa0
   13cbc:	sub	r3, r3, #1
   13cc0:	ldr	r2, [pc, #8]	; 13cd0 <tcgetattr@plt+0x20e8>
   13cc4:	str	r3, [r2, #188]	; 0xbc
   13cc8:	bx	lr
   13ccc:	andeq	r6, r3, r8, lsl r5
   13cd0:	andeq	sl, r3, r8, lsl #10
   13cd4:	ldr	r2, [pc, #16]	; 13cec <tcgetattr@plt+0x2104>
   13cd8:	ldr	r3, [r2, #160]	; 0xa0
   13cdc:	add	r1, r3, #1
   13ce0:	str	r1, [r2, #160]	; 0xa0
   13ce4:	strb	r0, [r3]
   13ce8:	bx	lr
   13cec:	andeq	r6, r3, r8, lsl r5
   13cf0:	ldr	r3, [pc, #4]	; 13cfc <tcgetattr@plt+0x2114>
   13cf4:	ldr	r0, [r3, #192]	; 0xc0
   13cf8:	bx	lr
   13cfc:	andeq	sl, r3, r8, lsl #10
   13d00:	ldr	r3, [pc, #16]	; 13d18 <tcgetattr@plt+0x2130>
   13d04:	ldr	r0, [r3, #160]	; 0xa0
   13d08:	ldr	r3, [pc, #12]	; 13d1c <tcgetattr@plt+0x2134>
   13d0c:	ldr	r3, [r3, #84]	; 0x54
   13d10:	sub	r0, r0, r3
   13d14:	bx	lr
   13d18:	andeq	r6, r3, r8, lsl r5
   13d1c:	andeq	r4, r3, r0, lsr #10
   13d20:	ldr	r3, [pc, #24]	; 13d40 <tcgetattr@plt+0x2158>
   13d24:	ldr	r3, [r3, #160]	; 0xa0
   13d28:	ldr	r0, [pc, #20]	; 13d44 <tcgetattr@plt+0x215c>
   13d2c:	sub	r0, r0, r3
   13d30:	cmp	r0, #1
   13d34:	movgt	r0, #0
   13d38:	movle	r0, #1
   13d3c:	bx	lr
   13d40:	andeq	r6, r3, r8, lsl r5
   13d44:	andeq	r6, r3, r8, ror r5
   13d48:	cmp	r0, #0
   13d4c:	bne	13d84 <tcgetattr@plt+0x219c>
   13d50:	ldr	r3, [pc, #60]	; 13d94 <tcgetattr@plt+0x21ac>
   13d54:	ldr	r3, [r3, #192]	; 0xc0
   13d58:	cmp	r3, #0
   13d5c:	bxle	lr
   13d60:	sub	r3, r3, #1
   13d64:	ldr	r2, [pc, #40]	; 13d94 <tcgetattr@plt+0x21ac>
   13d68:	str	r3, [r2, #192]	; 0xc0
   13d6c:	ldr	r2, [pc, #36]	; 13d98 <tcgetattr@plt+0x21b0>
   13d70:	ldr	r3, [r2, #164]	; 0xa4
   13d74:	add	r1, r3, #1
   13d78:	str	r1, [r2, #164]	; 0xa4
   13d7c:	ldrb	r0, [r3]
   13d80:	bx	lr
   13d84:	ldr	r3, [pc, #12]	; 13d98 <tcgetattr@plt+0x21b0>
   13d88:	ldr	r3, [r3, #164]	; 0xa4
   13d8c:	ldrb	r0, [r3]
   13d90:	bx	lr
   13d94:	andeq	sl, r3, r8, lsl #10
   13d98:	andeq	r6, r3, r8, lsl r5
   13d9c:	ldr	r3, [pc, #24]	; 13dbc <tcgetattr@plt+0x21d4>
   13da0:	ldr	r3, [r3, #80]	; 0x50
   13da4:	ldr	r0, [pc, #20]	; 13dc0 <tcgetattr@plt+0x21d8>
   13da8:	sub	r0, r0, r3
   13dac:	cmp	r0, #1
   13db0:	movgt	r0, #0
   13db4:	movle	r0, #1
   13db8:	bx	lr
   13dbc:	andeq	r4, r3, r0, lsr #10
   13dc0:	andeq	r4, r3, r0, lsr r5
   13dc4:	ldr	r2, [pc, #16]	; 13ddc <tcgetattr@plt+0x21f4>
   13dc8:	ldr	r3, [r2, #80]	; 0x50
   13dcc:	add	r1, r3, #1
   13dd0:	str	r1, [r2, #80]	; 0x50
   13dd4:	strb	r0, [r3]
   13dd8:	bx	lr
   13ddc:	andeq	r4, r3, r0, lsr #10
   13de0:	ldr	r3, [pc, #4]	; 13dec <tcgetattr@plt+0x2204>
   13de4:	ldr	r0, [r3, #196]	; 0xc4
   13de8:	bx	lr
   13dec:	andeq	sl, r3, r8, lsl #10
   13df0:	ldr	r3, [pc, #16]	; 13e08 <tcgetattr@plt+0x2220>
   13df4:	ldr	r0, [r3, #80]	; 0x50
   13df8:	ldr	r3, [pc, #12]	; 13e0c <tcgetattr@plt+0x2224>
   13dfc:	ldr	r3, [r3, #4]
   13e00:	sub	r0, r0, r3
   13e04:	bx	lr
   13e08:	andeq	r4, r3, r0, lsr #10
   13e0c:	andeq	r2, r3, r8, lsr #10
   13e10:	cmp	r0, #0
   13e14:	bne	13e4c <tcgetattr@plt+0x2264>
   13e18:	ldr	r3, [pc, #60]	; 13e5c <tcgetattr@plt+0x2274>
   13e1c:	ldr	r3, [r3, #196]	; 0xc4
   13e20:	cmp	r3, #0
   13e24:	bxle	lr
   13e28:	sub	r3, r3, #1
   13e2c:	ldr	r2, [pc, #40]	; 13e5c <tcgetattr@plt+0x2274>
   13e30:	str	r3, [r2, #196]	; 0xc4
   13e34:	ldr	r2, [pc, #36]	; 13e60 <tcgetattr@plt+0x2278>
   13e38:	ldr	r3, [r2, #176]	; 0xb0
   13e3c:	add	r1, r3, #1
   13e40:	str	r1, [r2, #176]	; 0xb0
   13e44:	ldrb	r0, [r3]
   13e48:	bx	lr
   13e4c:	ldr	r3, [pc, #12]	; 13e60 <tcgetattr@plt+0x2278>
   13e50:	ldr	r3, [r3, #176]	; 0xb0
   13e54:	ldrb	r0, [r3]
   13e58:	bx	lr
   13e5c:	andeq	sl, r3, r8, lsl #10
   13e60:	andeq	r8, r3, r0, lsl r5
   13e64:	push	{r4, lr}
   13e68:	ldr	r4, [pc, #60]	; 13eac <tcgetattr@plt+0x22c4>
   13e6c:	ldr	r3, [r4, #176]	; 0xb0
   13e70:	add	r4, r4, #180	; 0xb4
   13e74:	add	r4, r4, #8192	; 0x2000
   13e78:	sub	r4, r4, r3
   13e7c:	cmp	r4, r1
   13e80:	movcs	r4, r1
   13e84:	mov	r2, r4
   13e88:	mov	r1, r0
   13e8c:	mov	r0, r3
   13e90:	bl	11a44 <strncpy@plt>
   13e94:	ldr	r2, [pc, #20]	; 13eb0 <tcgetattr@plt+0x22c8>
   13e98:	ldr	r3, [r2, #196]	; 0xc4
   13e9c:	add	r4, r3, r4
   13ea0:	str	r4, [r2, #196]	; 0xc4
   13ea4:	mov	r0, #0
   13ea8:	pop	{r4, pc}
   13eac:	andeq	r8, r3, r0, lsl r5
   13eb0:	andeq	sl, r3, r8, lsl #10
   13eb4:	cmp	r0, r1
   13eb8:	bcs	13f98 <tcgetattr@plt+0x23b0>
   13ebc:	ldrb	r3, [r0]
   13ec0:	cmp	r3, #255	; 0xff
   13ec4:	beq	13ed0 <tcgetattr@plt+0x22e8>
   13ec8:	add	r0, r0, #1
   13ecc:	bx	lr
   13ed0:	add	r3, r0, #1
   13ed4:	cmp	r1, r3
   13ed8:	bls	13fa0 <tcgetattr@plt+0x23b8>
   13edc:	ldrb	r3, [r0, #1]
   13ee0:	cmp	r3, #250	; 0xfa
   13ee4:	beq	13f04 <tcgetattr@plt+0x231c>
   13ee8:	bcc	13f88 <tcgetattr@plt+0x23a0>
   13eec:	cmp	r3, #254	; 0xfe
   13ef0:	bhi	13f88 <tcgetattr@plt+0x23a0>
   13ef4:	add	r0, r0, #3
   13ef8:	cmp	r1, r0
   13efc:	movcc	r0, #0
   13f00:	bx	lr
   13f04:	add	r0, r0, #2
   13f08:	b	13f28 <tcgetattr@plt+0x2340>
   13f0c:	mov	r0, #0
   13f10:	bx	lr
   13f14:	mov	ip, r0
   13f18:	add	r0, ip, #2
   13f1c:	ldrb	r3, [ip, #1]
   13f20:	cmp	r3, #240	; 0xf0
   13f24:	bxeq	lr
   13f28:	cmp	r1, r0
   13f2c:	bls	13fa8 <tcgetattr@plt+0x23c0>
   13f30:	add	ip, r0, #1
   13f34:	ldrb	r3, [r0]
   13f38:	cmp	r3, #255	; 0xff
   13f3c:	movne	r3, #0
   13f40:	moveq	r3, #1
   13f44:	cmp	r1, ip
   13f48:	movls	r3, #0
   13f4c:	cmp	r3, #0
   13f50:	bne	13f14 <tcgetattr@plt+0x232c>
   13f54:	cmp	r1, ip
   13f58:	beq	13f0c <tcgetattr@plt+0x2324>
   13f5c:	mov	r3, ip
   13f60:	ldrb	r2, [r3], #1
   13f64:	cmp	r2, #255	; 0xff
   13f68:	movne	r2, #0
   13f6c:	moveq	r2, #1
   13f70:	cmp	r1, r3
   13f74:	movls	r2, #0
   13f78:	cmp	r2, #0
   13f7c:	bne	13f18 <tcgetattr@plt+0x2330>
   13f80:	mov	ip, r3
   13f84:	b	13f54 <tcgetattr@plt+0x236c>
   13f88:	add	r0, r0, #2
   13f8c:	cmp	r1, r0
   13f90:	movcc	r0, #0
   13f94:	bx	lr
   13f98:	mov	r0, #0
   13f9c:	bx	lr
   13fa0:	mov	r0, #0
   13fa4:	bx	lr
   13fa8:	mov	r0, #0
   13fac:	bx	lr
   13fb0:	push	{r4, r5, r6, r7, r8, lr}
   13fb4:	ldr	r5, [pc, #344]	; 14114 <tcgetattr@plt+0x252c>
   13fb8:	ldr	r4, [r5, #84]	; 0x54
   13fbc:	add	r5, r5, #88	; 0x58
   13fc0:	b	13fc8 <tcgetattr@plt+0x23e0>
   13fc4:	mov	r5, r3
   13fc8:	mov	r1, r4
   13fcc:	mov	r0, r5
   13fd0:	bl	13eb4 <tcgetattr@plt+0x22cc>
   13fd4:	mov	r3, r0
   13fd8:	adds	r0, r0, #0
   13fdc:	movne	r0, #1
   13fe0:	cmp	r4, r3
   13fe4:	movcc	r0, #0
   13fe8:	cmp	r0, #0
   13fec:	bne	13fc4 <tcgetattr@plt+0x23dc>
   13ff0:	cmp	r5, #0
   13ff4:	beq	140e4 <tcgetattr@plt+0x24fc>
   13ff8:	ldr	r3, [pc, #280]	; 14118 <tcgetattr@plt+0x2530>
   13ffc:	ldr	r6, [r3, #160]	; 0xa0
   14000:	cmp	r5, r6
   14004:	bcs	1410c <tcgetattr@plt+0x2524>
   14008:	ldr	r7, [pc, #268]	; 1411c <tcgetattr@plt+0x2534>
   1400c:	b	14038 <tcgetattr@plt+0x2450>
   14010:	mov	r4, r5
   14014:	b	140bc <tcgetattr@plt+0x24d4>
   14018:	mov	r1, r6
   1401c:	mov	r0, r5
   14020:	bl	13eb4 <tcgetattr@plt+0x22cc>
   14024:	mov	r5, r0
   14028:	cmp	r5, #0
   1402c:	beq	140e8 <tcgetattr@plt+0x2500>
   14030:	cmp	r5, r6
   14034:	bcs	140e8 <tcgetattr@plt+0x2500>
   14038:	ldrb	r3, [r5]
   1403c:	cmp	r3, #255	; 0xff
   14040:	bne	14018 <tcgetattr@plt+0x2430>
   14044:	add	r3, r5, #1
   14048:	cmp	r6, r3
   1404c:	bls	14018 <tcgetattr@plt+0x2430>
   14050:	ldrb	r3, [r5, #1]
   14054:	add	r3, r3, #9
   14058:	uxtb	r3, r3
   1405c:	cmp	r3, #1
   14060:	bls	14018 <tcgetattr@plt+0x2430>
   14064:	cmp	r5, #0
   14068:	cmpne	r6, r5
   1406c:	bls	14010 <tcgetattr@plt+0x2428>
   14070:	mov	r4, r5
   14074:	mov	r1, r6
   14078:	mov	r0, r4
   1407c:	bl	13eb4 <tcgetattr@plt+0x22cc>
   14080:	mov	r4, r0
   14084:	cmp	r0, #0
   14088:	cmpne	r0, r6
   1408c:	bcs	140bc <tcgetattr@plt+0x24d4>
   14090:	ldrb	r3, [r0]
   14094:	cmp	r3, #255	; 0xff
   14098:	bne	140bc <tcgetattr@plt+0x24d4>
   1409c:	add	r3, r0, #1
   140a0:	cmp	r6, r3
   140a4:	bls	140bc <tcgetattr@plt+0x24d4>
   140a8:	ldrb	r3, [r0, #1]
   140ac:	add	r3, r3, #9
   140b0:	uxtb	r3, r3
   140b4:	cmp	r3, #1
   140b8:	bhi	14074 <tcgetattr@plt+0x248c>
   140bc:	cmp	r4, #0
   140c0:	moveq	r4, r6
   140c4:	sub	r8, r4, r5
   140c8:	mov	r2, r8
   140cc:	mov	r1, r5
   140d0:	mov	r0, r7
   140d4:	bl	117c8 <memmove@plt>
   140d8:	add	r7, r7, r8
   140dc:	mov	r5, r4
   140e0:	b	14028 <tcgetattr@plt+0x2440>
   140e4:	ldr	r7, [pc, #48]	; 1411c <tcgetattr@plt+0x2534>
   140e8:	ldr	r3, [pc, #36]	; 14114 <tcgetattr@plt+0x252c>
   140ec:	add	r2, r3, #88	; 0x58
   140f0:	str	r2, [r3, #84]	; 0x54
   140f4:	ldr	r3, [pc, #28]	; 14118 <tcgetattr@plt+0x2530>
   140f8:	str	r7, [r3, #160]	; 0xa0
   140fc:	mov	r2, #0
   14100:	ldr	r3, [pc, #24]	; 14120 <tcgetattr@plt+0x2538>
   14104:	str	r2, [r3, #188]	; 0xbc
   14108:	pop	{r4, r5, r6, r7, r8, pc}
   1410c:	ldr	r7, [pc, #8]	; 1411c <tcgetattr@plt+0x2534>
   14110:	b	140e8 <tcgetattr@plt+0x2500>
   14114:	andeq	r4, r3, r0, lsr #10
   14118:	andeq	r6, r3, r8, lsl r5
   1411c:	andeq	r4, r3, r8, ror r5
   14120:	andeq	sl, r3, r8, lsl #10
   14124:	push	{lr}		; (str lr, [sp, #-4]!)
   14128:	sub	sp, sp, #8192	; 0x2000
   1412c:	sub	sp, sp, #4
   14130:	mov	r4, r0
   14134:	mov	r3, r1
   14138:	ldr	r2, [pc, #48]	; 14170 <tcgetattr@plt+0x2588>
   1413c:	mov	r1, #8192	; 0x2000
   14140:	mov	r0, sp
   14144:	bl	11a20 <snprintf@plt>
   14148:	mov	r0, sp
   1414c:	bl	119c0 <strlen@plt>
   14150:	mov	r2, r0
   14154:	mov	r1, sp
   14158:	mov	r0, r4
   1415c:	bl	11a50 <write@plt>
   14160:	mov	r0, #1
   14164:	bl	11858 <sleep@plt>
   14168:	mov	r0, #1
   1416c:	bl	119a8 <exit@plt>
   14170:	andeq	r0, r2, r0, lsl #8
   14174:	push	{lr}		; (str lr, [sp, #-4]!)
   14178:	sub	sp, sp, #8192	; 0x2000
   1417c:	sub	sp, sp, #12
   14180:	mov	r4, r0
   14184:	mov	r5, r1
   14188:	bl	11a14 <__errno_location@plt>
   1418c:	ldr	r0, [r0]
   14190:	bl	11948 <strerror@plt>
   14194:	str	r0, [sp]
   14198:	mov	r3, r5
   1419c:	ldr	r2, [pc, #20]	; 141b8 <tcgetattr@plt+0x25d0>
   141a0:	mov	r1, #8192	; 0x2000
   141a4:	add	r0, sp, #8
   141a8:	bl	11a20 <snprintf@plt>
   141ac:	add	r1, sp, #8
   141b0:	mov	r0, r4
   141b4:	bl	14124 <tcgetattr@plt+0x253c>
   141b8:	andeq	r0, r2, r0, lsl r4
   141bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141c0:	sub	sp, sp, #136	; 0x88
   141c4:	add	sl, r0, #31
   141c8:	cmp	r0, #0
   141cc:	movge	sl, r0
   141d0:	asr	sl, sl, #5
   141d4:	asr	r3, r0, #31
   141d8:	lsr	r8, r3, #27
   141dc:	add	r3, r0, r8
   141e0:	and	r3, r3, #31
   141e4:	sub	r3, r3, r8
   141e8:	mov	r8, #1
   141ec:	lsl	r8, r8, r3
   141f0:	add	r5, sp, #132	; 0x84
   141f4:	mov	r4, #0
   141f8:	add	r3, sp, #136	; 0x88
   141fc:	add	r6, r3, sl, lsl #2
   14200:	add	r7, r0, #1
   14204:	ldr	r9, [pc, #128]	; 1428c <tcgetattr@plt+0x26a4>
   14208:	add	r3, sp, #4
   1420c:	str	r4, [r3, #4]!
   14210:	cmp	r3, r5
   14214:	bne	1420c <tcgetattr@plt+0x2624>
   14218:	ldr	r3, [r6, #-128]	; 0xffffff80
   1421c:	orr	r3, r3, r8
   14220:	str	r3, [r6, #-128]	; 0xffffff80
   14224:	str	r9, [sp]
   14228:	add	r3, sp, #8
   1422c:	mov	r2, r4
   14230:	mov	r1, r4
   14234:	mov	r0, r7
   14238:	bl	1184c <select@plt>
   1423c:	cmn	r0, #1
   14240:	bne	14264 <tcgetattr@plt+0x267c>
   14244:	bl	11a14 <__errno_location@plt>
   14248:	ldr	r3, [r0]
   1424c:	cmp	r3, #4
   14250:	beq	14208 <tcgetattr@plt+0x2620>
   14254:	ldr	r1, [pc, #52]	; 14290 <tcgetattr@plt+0x26a8>
   14258:	ldr	r3, [pc, #52]	; 14294 <tcgetattr@plt+0x26ac>
   1425c:	ldr	r0, [r3]
   14260:	bl	14174 <tcgetattr@plt+0x258c>
   14264:	cmp	r0, #0
   14268:	blt	14254 <tcgetattr@plt+0x266c>
   1426c:	add	r3, sp, #136	; 0x88
   14270:	add	sl, r3, sl, lsl #2
   14274:	ldr	r3, [sl, #-128]	; 0xffffff80
   14278:	tst	r8, r3
   1427c:	movne	r0, #1
   14280:	moveq	r0, #0
   14284:	add	sp, sp, #136	; 0x88
   14288:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1428c:	ldrdeq	sl, [r3], -r0
   14290:	andeq	r0, r2, r8, lsl r4
   14294:	ldrdeq	sl, [r3], -r0
   14298:	ldr	r3, [pc, #60]	; 142dc <tcgetattr@plt+0x26f4>
   1429c:	ldr	r3, [r3]
   142a0:	cmp	r3, #0
   142a4:	beq	142d4 <tcgetattr@plt+0x26ec>
   142a8:	push	{lr}		; (str lr, [sp, #-4]!)
   142ac:	sub	sp, sp, #2048	; 0x800
   142b0:	sub	sp, sp, #4
   142b4:	mov	r1, r0
   142b8:	mov	r0, sp
   142bc:	bl	11b88 <tgetent@plt>
   142c0:	adds	r0, r0, #0
   142c4:	movne	r0, #1
   142c8:	add	sp, sp, #2048	; 0x800
   142cc:	add	sp, sp, #4
   142d0:	pop	{pc}		; (ldr pc, [sp], #4)
   142d4:	mov	r0, #1
   142d8:	bx	lr
   142dc:	andeq	sl, r3, r0, lsl #14
   142e0:	push	{r4, r5, r6, lr}
   142e4:	mov	r4, r0
   142e8:	mov	r5, r1
   142ec:	bl	13714 <tcgetattr@plt+0x1b2c>
   142f0:	cmp	r0, #0
   142f4:	popne	{r4, r5, r6, pc}
   142f8:	ldr	r3, [pc, #24]	; 14318 <tcgetattr@plt+0x2730>
   142fc:	ldr	r3, [r3]
   14300:	mov	r2, r5
   14304:	mov	r1, #1
   14308:	mov	r0, r4
   1430c:	bl	118c4 <fwrite@plt>
   14310:	bl	13774 <tcgetattr@plt+0x1b8c>
   14314:	pop	{r4, r5, r6, pc}
   14318:	andeq	r2, r3, r8, lsr #10
   1431c:	push	{r0, r1, r2, r3}
   14320:	push	{lr}		; (str lr, [sp, #-4]!)
   14324:	sub	sp, sp, #12
   14328:	bl	13714 <tcgetattr@plt+0x1b2c>
   1432c:	cmp	r0, #0
   14330:	beq	14344 <tcgetattr@plt+0x275c>
   14334:	add	sp, sp, #12
   14338:	pop	{lr}		; (ldr lr, [sp], #4)
   1433c:	add	sp, sp, #16
   14340:	bx	lr
   14344:	add	r2, sp, #20
   14348:	str	r2, [sp, #4]
   1434c:	ldr	r1, [sp, #16]
   14350:	ldr	r3, [pc, #12]	; 14364 <tcgetattr@plt+0x277c>
   14354:	ldr	r0, [r3]
   14358:	bl	11ad4 <vfprintf@plt>
   1435c:	bl	13774 <tcgetattr@plt+0x1b8c>
   14360:	b	14334 <tcgetattr@plt+0x274c>
   14364:	andeq	r2, r3, r8, lsr #10
   14368:	push	{r4, lr}
   1436c:	ldr	r3, [pc, #256]	; 14474 <tcgetattr@plt+0x288c>
   14370:	ldr	r1, [r3, #84]	; 0x54
   14374:	ldr	r3, [pc, #252]	; 14478 <tcgetattr@plt+0x2890>
   14378:	ldr	r4, [r3, #160]	; 0xa0
   1437c:	sub	r4, r4, r1
   14380:	cmp	r4, #0
   14384:	ble	143bc <tcgetattr@plt+0x27d4>
   14388:	ldr	r3, [pc, #236]	; 1447c <tcgetattr@plt+0x2894>
   1438c:	ldr	r2, [r3, #188]	; 0xbc
   14390:	cmp	r2, #0
   14394:	beq	143a8 <tcgetattr@plt+0x27c0>
   14398:	ldr	r3, [pc, #224]	; 14480 <tcgetattr@plt+0x2898>
   1439c:	ldr	r3, [r3]
   143a0:	cmp	r3, #0
   143a4:	bne	1442c <tcgetattr@plt+0x2844>
   143a8:	mov	r2, r4
   143ac:	ldr	r3, [pc, #208]	; 14484 <tcgetattr@plt+0x289c>
   143b0:	ldr	r0, [r3]
   143b4:	bl	11a50 <write@plt>
   143b8:	mov	r4, r0
   143bc:	cmp	r4, #0
   143c0:	blt	14454 <tcgetattr@plt+0x286c>
   143c4:	ldr	r2, [pc, #168]	; 14474 <tcgetattr@plt+0x288c>
   143c8:	ldr	r3, [r2, #84]	; 0x54
   143cc:	add	r3, r3, r4
   143d0:	str	r3, [r2, #84]	; 0x54
   143d4:	ldr	r2, [pc, #160]	; 1447c <tcgetattr@plt+0x2894>
   143d8:	ldr	r2, [r2, #188]	; 0xbc
   143dc:	cmp	r3, r2
   143e0:	movcs	r1, #0
   143e4:	ldrcs	r2, [pc, #144]	; 1447c <tcgetattr@plt+0x2894>
   143e8:	strcs	r1, [r2, #188]	; 0xbc
   143ec:	ldr	r2, [pc, #132]	; 14478 <tcgetattr@plt+0x2890>
   143f0:	ldr	r2, [r2, #160]	; 0xa0
   143f4:	cmp	r3, r2
   143f8:	ldreq	r3, [pc, #116]	; 14474 <tcgetattr@plt+0x288c>
   143fc:	addeq	r2, r3, #88	; 0x58
   14400:	ldreq	r1, [pc, #112]	; 14478 <tcgetattr@plt+0x2890>
   14404:	streq	r2, [r1, #160]	; 0xa0
   14408:	streq	r2, [r3, #84]	; 0x54
   1440c:	ldr	r3, [pc, #116]	; 14488 <tcgetattr@plt+0x28a0>
   14410:	ldr	r3, [r3, #4]
   14414:	cmp	r3, #0
   14418:	pople	{r4, pc}
   1441c:	mov	r1, r4
   14420:	ldr	r0, [pc, #100]	; 1448c <tcgetattr@plt+0x28a4>
   14424:	bl	1431c <tcgetattr@plt+0x2734>
   14428:	pop	{r4, pc}
   1442c:	sub	r2, r2, r1
   14430:	cmp	r2, #1
   14434:	movgt	r3, #0
   14438:	subgt	r2, r2, #1
   1443c:	movle	r3, #1
   14440:	ldr	r0, [pc, #60]	; 14484 <tcgetattr@plt+0x289c>
   14444:	ldr	r0, [r0]
   14448:	bl	11bc4 <send@plt>
   1444c:	mov	r4, r0
   14450:	b	143bc <tcgetattr@plt+0x27d4>
   14454:	bl	11a14 <__errno_location@plt>
   14458:	ldr	r3, [r0]
   1445c:	cmp	r3, #4
   14460:	cmpne	r3, #11
   14464:	popeq	{r4, pc}
   14468:	mov	r0, #0
   1446c:	bl	13024 <tcgetattr@plt+0x143c>
   14470:	b	143c4 <tcgetattr@plt+0x27dc>
   14474:	andeq	r4, r3, r0, lsr #10
   14478:	andeq	r6, r3, r8, lsl r5
   1447c:	andeq	sl, r3, r8, lsl #10
   14480:	muleq	r3, r8, r4
   14484:	andeq	sl, r3, ip, lsr #19
   14488:	andeq	sl, r3, r0, ror #13
   1448c:	andeq	r0, r2, r0, lsr #8
   14490:	push	{r0, r1, r2, r3}
   14494:	push	{r4, r5, lr}
   14498:	sub	sp, sp, #12
   1449c:	add	r3, sp, #28
   144a0:	str	r3, [sp, #4]
   144a4:	ldr	r5, [pc, #108]	; 14518 <tcgetattr@plt+0x2930>
   144a8:	ldr	r3, [pc, #108]	; 1451c <tcgetattr@plt+0x2934>
   144ac:	ldr	r4, [r3, #160]	; 0xa0
   144b0:	sub	r4, r5, r4
   144b4:	ldr	r0, [sp, #24]
   144b8:	bl	119c0 <strlen@plt>
   144bc:	cmp	r4, r0
   144c0:	cmpcs	r4, #2048	; 0x800
   144c4:	bcs	144d8 <tcgetattr@plt+0x28f0>
   144c8:	bl	14368 <tcgetattr@plt+0x2780>
   144cc:	ldr	r3, [pc, #72]	; 1451c <tcgetattr@plt+0x2934>
   144d0:	ldr	r4, [r3, #160]	; 0xa0
   144d4:	sub	r4, r5, r4
   144d8:	ldr	r5, [pc, #60]	; 1451c <tcgetattr@plt+0x2934>
   144dc:	ldr	r3, [sp, #4]
   144e0:	ldr	r2, [sp, #24]
   144e4:	mov	r1, r4
   144e8:	ldr	r0, [r5, #160]	; 0xa0
   144ec:	bl	11b28 <vsnprintf@plt>
   144f0:	sub	r4, r4, #1
   144f4:	ldr	r3, [r5, #160]	; 0xa0
   144f8:	cmp	r4, r0
   144fc:	addls	r4, r3, r4
   14500:	addhi	r4, r3, r0
   14504:	str	r4, [r5, #160]	; 0xa0
   14508:	add	sp, sp, #12
   1450c:	pop	{r4, r5, lr}
   14510:	add	sp, sp, #16
   14514:	bx	lr
   14518:	andeq	r6, r3, r8, ror r5
   1451c:	andeq	r6, r3, r8, lsl r5
   14520:	push	{r4, r5, r6, r7, r8, lr}
   14524:	mov	r7, r0
   14528:	mov	r4, r1
   1452c:	ldr	r5, [pc, #88]	; 1458c <tcgetattr@plt+0x29a4>
   14530:	ldr	r3, [pc, #88]	; 14590 <tcgetattr@plt+0x29a8>
   14534:	ldr	r3, [r3, #160]	; 0xa0
   14538:	sub	r3, r5, r3
   1453c:	cmp	r3, r1
   14540:	bcc	1456c <tcgetattr@plt+0x2984>
   14544:	ldr	r6, [pc, #68]	; 14590 <tcgetattr@plt+0x29a8>
   14548:	ldr	r5, [r6, #160]	; 0xa0
   1454c:	mov	r2, r4
   14550:	mov	r1, r7
   14554:	mov	r0, r5
   14558:	bl	117c8 <memmove@plt>
   1455c:	add	r5, r5, r4
   14560:	str	r5, [r6, #160]	; 0xa0
   14564:	mov	r0, r4
   14568:	pop	{r4, r5, r6, r7, r8, pc}
   1456c:	bl	14368 <tcgetattr@plt+0x2780>
   14570:	ldr	r3, [pc, #24]	; 14590 <tcgetattr@plt+0x29a8>
   14574:	ldr	r3, [r3, #160]	; 0xa0
   14578:	sub	r5, r5, r3
   1457c:	cmp	r4, r5
   14580:	bls	14544 <tcgetattr@plt+0x295c>
   14584:	mvn	r0, #0
   14588:	pop	{r4, r5, r6, r7, r8, pc}
   1458c:	andeq	r6, r3, r8, ror r5
   14590:	andeq	r6, r3, r8, lsl r5
   14594:	push	{lr}		; (str lr, [sp, #-4]!)
   14598:	sub	sp, sp, #140	; 0x8c
   1459c:	ldr	r3, [pc, #368]	; 14714 <tcgetattr@plt+0x2b2c>
   145a0:	ldr	r3, [r3, #4]
   145a4:	cmp	r3, #0
   145a8:	ble	145b4 <tcgetattr@plt+0x29cc>
   145ac:	ldr	r0, [pc, #356]	; 14718 <tcgetattr@plt+0x2b30>
   145b0:	bl	1431c <tcgetattr@plt+0x2734>
   145b4:	ldr	r3, [pc, #352]	; 1471c <tcgetattr@plt+0x2b34>
   145b8:	ldr	r3, [r3, #160]	; 0xa0
   145bc:	ldr	r2, [pc, #348]	; 14720 <tcgetattr@plt+0x2b38>
   145c0:	ldr	r2, [r2, #84]	; 0x54
   145c4:	sub	r3, r3, r2
   145c8:	cmp	r3, #0
   145cc:	ble	145d4 <tcgetattr@plt+0x29ec>
   145d0:	bl	14368 <tcgetattr@plt+0x2780>
   145d4:	add	r3, sp, #4
   145d8:	add	r1, sp, #132	; 0x84
   145dc:	mov	r2, #0
   145e0:	str	r2, [r3, #4]!
   145e4:	cmp	r3, r1
   145e8:	bne	145e0 <tcgetattr@plt+0x29f8>
   145ec:	ldr	r3, [pc, #304]	; 14724 <tcgetattr@plt+0x2b3c>
   145f0:	ldr	r0, [r3]
   145f4:	add	r3, r0, #31
   145f8:	cmp	r0, #0
   145fc:	movge	r3, r0
   14600:	asr	r3, r3, #5
   14604:	add	r2, sp, #136	; 0x88
   14608:	add	r3, r2, r3, lsl #2
   1460c:	asr	r2, r0, #31
   14610:	lsr	r1, r2, #27
   14614:	add	r2, r0, r1
   14618:	and	r2, r2, #31
   1461c:	sub	r2, r2, r1
   14620:	ldr	r1, [r3, #-128]	; 0xffffff80
   14624:	mov	ip, #1
   14628:	orr	r2, r1, ip, lsl r2
   1462c:	str	r2, [r3, #-128]	; 0xffffff80
   14630:	mov	r2, #0
   14634:	str	r2, [sp]
   14638:	mov	r3, r2
   1463c:	add	r1, sp, #8
   14640:	add	r0, r0, ip
   14644:	bl	1184c <select@plt>
   14648:	cmp	r0, #1
   1464c:	bne	146d8 <tcgetattr@plt+0x2af0>
   14650:	mov	r2, #8192	; 0x2000
   14654:	ldr	r1, [pc, #204]	; 14728 <tcgetattr@plt+0x2b40>
   14658:	ldr	r3, [pc, #196]	; 14724 <tcgetattr@plt+0x2b3c>
   1465c:	ldr	r0, [r3]
   14660:	bl	117bc <read@plt>
   14664:	ldr	r3, [pc, #192]	; 1472c <tcgetattr@plt+0x2b44>
   14668:	str	r0, [r3, #192]	; 0xc0
   1466c:	cmp	r0, #0
   14670:	blt	146ec <tcgetattr@plt+0x2b04>
   14674:	cmp	r0, #0
   14678:	beq	14700 <tcgetattr@plt+0x2b18>
   1467c:	ldr	r3, [pc, #144]	; 14714 <tcgetattr@plt+0x2b2c>
   14680:	ldr	r3, [r3, #4]
   14684:	cmp	r3, #0
   14688:	ble	14698 <tcgetattr@plt+0x2ab0>
   1468c:	mov	r1, r0
   14690:	ldr	r0, [pc, #152]	; 14730 <tcgetattr@plt+0x2b48>
   14694:	bl	1431c <tcgetattr@plt+0x2734>
   14698:	ldr	r3, [pc, #124]	; 1471c <tcgetattr@plt+0x2b34>
   1469c:	add	r2, r3, #168	; 0xa8
   146a0:	str	r2, [r3, #164]	; 0xa4
   146a4:	bl	174b8 <tcgetattr@plt+0x58d0>
   146a8:	ldr	r3, [pc, #124]	; 1472c <tcgetattr@plt+0x2b44>
   146ac:	ldr	r3, [r3, #192]	; 0xc0
   146b0:	cmp	r3, #0
   146b4:	ble	146d0 <tcgetattr@plt+0x2ae8>
   146b8:	ldr	r2, [pc, #116]	; 14734 <tcgetattr@plt+0x2b4c>
   146bc:	add	r3, r2, #8
   146c0:	str	r3, [r2, #4]
   146c4:	ldr	r2, [pc, #84]	; 14720 <tcgetattr@plt+0x2b38>
   146c8:	str	r3, [r2, #80]	; 0x50
   146cc:	bl	174b8 <tcgetattr@plt+0x58d0>
   146d0:	add	sp, sp, #140	; 0x8c
   146d4:	pop	{pc}		; (ldr pc, [sp], #4)
   146d8:	ldr	r1, [pc, #88]	; 14738 <tcgetattr@plt+0x2b50>
   146dc:	mov	r0, #6
   146e0:	bl	11aec <syslog@plt>
   146e4:	mov	r0, #1
   146e8:	bl	119a8 <exit@plt>
   146ec:	ldr	r1, [pc, #72]	; 1473c <tcgetattr@plt+0x2b54>
   146f0:	mov	r0, #6
   146f4:	bl	11aec <syslog@plt>
   146f8:	mov	r0, #1
   146fc:	bl	119a8 <exit@plt>
   14700:	ldr	r1, [pc, #56]	; 14740 <tcgetattr@plt+0x2b58>
   14704:	mov	r0, #6
   14708:	bl	11aec <syslog@plt>
   1470c:	mov	r0, #1
   14710:	bl	119a8 <exit@plt>
   14714:	andeq	sl, r3, r0, ror #13
   14718:	andeq	r0, r2, r8, lsr r4
   1471c:	andeq	r6, r3, r8, lsl r5
   14720:	andeq	r4, r3, r0, lsr #10
   14724:	andeq	sl, r3, ip, lsr #19
   14728:	andeq	r6, r3, r0, asr #11
   1472c:	andeq	sl, r3, r8, lsl #10
   14730:	andeq	r0, r2, ip, lsl #9
   14734:	andeq	r2, r3, r8, lsr #10
   14738:	andeq	r0, r2, r8, asr #8
   1473c:	andeq	r0, r2, r0, ror #8
   14740:	andeq	r0, r2, r4, ror r4
   14744:	ldr	r3, [pc, #84]	; 147a0 <tcgetattr@plt+0x2bb8>
   14748:	ldrb	r3, [r3, #24]
   1474c:	tst	r3, #4
   14750:	bxeq	lr
   14754:	push	{r4, lr}
   14758:	ldr	r4, [pc, #68]	; 147a4 <tcgetattr@plt+0x2bbc>
   1475c:	ldr	r3, [r4]
   14760:	add	r3, r3, #1
   14764:	str	r3, [r4]
   14768:	str	r3, [r4, #36]	; 0x24
   1476c:	mov	r1, #6
   14770:	ldr	r0, [pc, #48]	; 147a8 <tcgetattr@plt+0x2bc0>
   14774:	bl	14520 <tcgetattr@plt+0x2938>
   14778:	ldr	r2, [r4, #16]
   1477c:	ldr	r3, [r4, #36]	; 0x24
   14780:	cmp	r2, r3
   14784:	popge	{r4, pc}
   14788:	bl	14594 <tcgetattr@plt+0x29ac>
   1478c:	ldr	r2, [r4, #16]
   14790:	ldr	r3, [r4, #36]	; 0x24
   14794:	cmp	r2, r3
   14798:	blt	14788 <tcgetattr@plt+0x2ba0>
   1479c:	pop	{r4, pc}
   147a0:	andeq	sl, r3, r4, lsl #14
   147a4:			; <UNDEFINED> instruction: 0x0003a9b4
   147a8:	andeq	r2, r3, r0, lsl r3
   147ac:	push	{r4, r5, r6, r7, r8, lr}
   147b0:	ldr	r2, [pc, #880]	; 14b28 <tcgetattr@plt+0x2f40>
   147b4:	ldr	r3, [r2]
   147b8:	add	r3, r3, #1
   147bc:	str	r3, [r2]
   147c0:	str	r3, [r2, #36]	; 0x24
   147c4:	mov	r1, #1
   147c8:	mov	r0, #24
   147cc:	bl	15de8 <tcgetattr@plt+0x4200>
   147d0:	mov	r1, #1
   147d4:	mov	r0, #32
   147d8:	bl	15de8 <tcgetattr@plt+0x4200>
   147dc:	mov	r1, #1
   147e0:	mov	r0, #35	; 0x23
   147e4:	bl	15de8 <tcgetattr@plt+0x4200>
   147e8:	mov	r1, #1
   147ec:	mov	r0, #39	; 0x27
   147f0:	bl	15de8 <tcgetattr@plt+0x4200>
   147f4:	mov	r1, #1
   147f8:	mov	r0, #36	; 0x24
   147fc:	bl	15de8 <tcgetattr@plt+0x4200>
   14800:	ldr	r4, [pc, #804]	; 14b2c <tcgetattr@plt+0x2f44>
   14804:	b	1480c <tcgetattr@plt+0x2c24>
   14808:	bl	14594 <tcgetattr@plt+0x29ac>
   1480c:	ldrb	r3, [r4, #24]
   14810:	add	r3, r3, #4
   14814:	tst	r3, #8
   14818:	bne	14808 <tcgetattr@plt+0x2c20>
   1481c:	ldrb	r3, [r4, #32]
   14820:	add	r2, r3, #4
   14824:	tst	r2, #8
   14828:	bne	14808 <tcgetattr@plt+0x2c20>
   1482c:	ldrb	r2, [r4, #35]	; 0x23
   14830:	add	r2, r2, #4
   14834:	tst	r2, #8
   14838:	bne	14808 <tcgetattr@plt+0x2c20>
   1483c:	ldrb	r2, [r4, #39]	; 0x27
   14840:	add	r2, r2, #4
   14844:	tst	r2, #8
   14848:	bne	14808 <tcgetattr@plt+0x2c20>
   1484c:	ldrb	r2, [r4, #36]	; 0x24
   14850:	add	r2, r2, #4
   14854:	tst	r2, #8
   14858:	bne	14808 <tcgetattr@plt+0x2c20>
   1485c:	tst	r3, #4
   14860:	bne	14a00 <tcgetattr@plt+0x2e18>
   14864:	ldr	r3, [pc, #704]	; 14b2c <tcgetattr@plt+0x2f44>
   14868:	ldrb	r3, [r3, #35]	; 0x23
   1486c:	tst	r3, #4
   14870:	bne	14a10 <tcgetattr@plt+0x2e28>
   14874:	ldr	r3, [pc, #688]	; 14b2c <tcgetattr@plt+0x2f44>
   14878:	ldrb	r3, [r3, #39]	; 0x27
   1487c:	tst	r3, #4
   14880:	bne	14a20 <tcgetattr@plt+0x2e38>
   14884:	ldr	r3, [pc, #672]	; 14b2c <tcgetattr@plt+0x2f44>
   14888:	ldrb	r3, [r3, #36]	; 0x24
   1488c:	tst	r3, #4
   14890:	bne	14a30 <tcgetattr@plt+0x2e48>
   14894:	ldr	r3, [pc, #656]	; 14b2c <tcgetattr@plt+0x2f44>
   14898:	ldrb	r3, [r3, #24]
   1489c:	tst	r3, #4
   148a0:	bne	14a40 <tcgetattr@plt+0x2e58>
   148a4:	ldr	r3, [pc, #640]	; 14b2c <tcgetattr@plt+0x2f44>
   148a8:	ldrb	r3, [r3, #32]
   148ac:	tst	r3, #4
   148b0:	beq	148e0 <tcgetattr@plt+0x2cf8>
   148b4:	ldr	r3, [pc, #620]	; 14b28 <tcgetattr@plt+0x2f40>
   148b8:	ldr	r2, [r3, #20]
   148bc:	ldr	r3, [r3, #36]	; 0x24
   148c0:	cmp	r2, r3
   148c4:	bge	148e0 <tcgetattr@plt+0x2cf8>
   148c8:	ldr	r4, [pc, #600]	; 14b28 <tcgetattr@plt+0x2f40>
   148cc:	bl	14594 <tcgetattr@plt+0x29ac>
   148d0:	ldr	r2, [r4, #20]
   148d4:	ldr	r3, [r4, #36]	; 0x24
   148d8:	cmp	r2, r3
   148dc:	blt	148cc <tcgetattr@plt+0x2ce4>
   148e0:	ldr	r3, [pc, #580]	; 14b2c <tcgetattr@plt+0x2f44>
   148e4:	ldrb	r3, [r3, #35]	; 0x23
   148e8:	tst	r3, #4
   148ec:	beq	1491c <tcgetattr@plt+0x2d34>
   148f0:	ldr	r3, [pc, #560]	; 14b28 <tcgetattr@plt+0x2f40>
   148f4:	ldr	r2, [r3, #32]
   148f8:	ldr	r3, [r3, #36]	; 0x24
   148fc:	cmp	r2, r3
   14900:	bge	1491c <tcgetattr@plt+0x2d34>
   14904:	ldr	r4, [pc, #540]	; 14b28 <tcgetattr@plt+0x2f40>
   14908:	bl	14594 <tcgetattr@plt+0x29ac>
   1490c:	ldr	r2, [r4, #32]
   14910:	ldr	r3, [r4, #36]	; 0x24
   14914:	cmp	r2, r3
   14918:	blt	14908 <tcgetattr@plt+0x2d20>
   1491c:	ldr	r3, [pc, #520]	; 14b2c <tcgetattr@plt+0x2f44>
   14920:	ldrb	r3, [r3, #39]	; 0x27
   14924:	tst	r3, #4
   14928:	beq	14958 <tcgetattr@plt+0x2d70>
   1492c:	ldr	r3, [pc, #500]	; 14b28 <tcgetattr@plt+0x2f40>
   14930:	ldr	r2, [r3, #24]
   14934:	ldr	r3, [r3, #36]	; 0x24
   14938:	cmp	r2, r3
   1493c:	bge	14958 <tcgetattr@plt+0x2d70>
   14940:	ldr	r4, [pc, #480]	; 14b28 <tcgetattr@plt+0x2f40>
   14944:	bl	14594 <tcgetattr@plt+0x29ac>
   14948:	ldr	r2, [r4, #24]
   1494c:	ldr	r3, [r4, #36]	; 0x24
   14950:	cmp	r2, r3
   14954:	blt	14944 <tcgetattr@plt+0x2d5c>
   14958:	ldr	r3, [pc, #460]	; 14b2c <tcgetattr@plt+0x2f44>
   1495c:	ldrb	r3, [r3, #36]	; 0x24
   14960:	tst	r3, #4
   14964:	beq	14994 <tcgetattr@plt+0x2dac>
   14968:	ldr	r3, [pc, #440]	; 14b28 <tcgetattr@plt+0x2f40>
   1496c:	ldr	r2, [r3, #28]
   14970:	ldr	r3, [r3, #36]	; 0x24
   14974:	cmp	r2, r3
   14978:	bge	14994 <tcgetattr@plt+0x2dac>
   1497c:	ldr	r4, [pc, #420]	; 14b28 <tcgetattr@plt+0x2f40>
   14980:	bl	14594 <tcgetattr@plt+0x29ac>
   14984:	ldr	r2, [r4, #28]
   14988:	ldr	r3, [r4, #36]	; 0x24
   1498c:	cmp	r2, r3
   14990:	blt	14980 <tcgetattr@plt+0x2d98>
   14994:	ldr	r3, [pc, #400]	; 14b2c <tcgetattr@plt+0x2f44>
   14998:	ldrb	r3, [r3, #24]
   1499c:	tst	r3, #4
   149a0:	beq	149f8 <tcgetattr@plt+0x2e10>
   149a4:	ldr	r3, [pc, #380]	; 14b28 <tcgetattr@plt+0x2f40>
   149a8:	ldr	r2, [r3, #16]
   149ac:	ldr	r3, [r3, #36]	; 0x24
   149b0:	cmp	r2, r3
   149b4:	bge	14a50 <tcgetattr@plt+0x2e68>
   149b8:	ldr	r4, [pc, #360]	; 14b28 <tcgetattr@plt+0x2f40>
   149bc:	bl	14594 <tcgetattr@plt+0x29ac>
   149c0:	ldr	r2, [r4, #16]
   149c4:	ldr	r3, [r4, #36]	; 0x24
   149c8:	cmp	r2, r3
   149cc:	blt	149bc <tcgetattr@plt+0x2dd4>
   149d0:	ldr	r3, [pc, #340]	; 14b2c <tcgetattr@plt+0x2f44>
   149d4:	ldrb	r3, [r3, #24]
   149d8:	tst	r3, #4
   149dc:	moveq	r4, #0
   149e0:	moveq	r6, r4
   149e4:	bne	14a50 <tcgetattr@plt+0x2e68>
   149e8:	mov	r0, r6
   149ec:	bl	1a49c <argp_parse@@Base+0xbf4>
   149f0:	mov	r0, r4
   149f4:	bl	1a49c <argp_parse@@Base+0xbf4>
   149f8:	mvn	r0, #0
   149fc:	pop	{r4, r5, r6, r7, r8, pc}
   14a00:	mov	r1, #6
   14a04:	ldr	r0, [pc, #292]	; 14b30 <tcgetattr@plt+0x2f48>
   14a08:	bl	14520 <tcgetattr@plt+0x2938>
   14a0c:	b	14864 <tcgetattr@plt+0x2c7c>
   14a10:	mov	r1, #6
   14a14:	ldr	r0, [pc, #280]	; 14b34 <tcgetattr@plt+0x2f4c>
   14a18:	bl	14520 <tcgetattr@plt+0x2938>
   14a1c:	b	14874 <tcgetattr@plt+0x2c8c>
   14a20:	mov	r1, #6
   14a24:	ldr	r0, [pc, #268]	; 14b38 <tcgetattr@plt+0x2f50>
   14a28:	bl	14520 <tcgetattr@plt+0x2938>
   14a2c:	b	14894 <tcgetattr@plt+0x2cac>
   14a30:	mov	r1, #6
   14a34:	ldr	r0, [pc, #256]	; 14b3c <tcgetattr@plt+0x2f54>
   14a38:	bl	14520 <tcgetattr@plt+0x2938>
   14a3c:	b	14894 <tcgetattr@plt+0x2cac>
   14a40:	mov	r1, #6
   14a44:	ldr	r0, [pc, #244]	; 14b40 <tcgetattr@plt+0x2f58>
   14a48:	bl	14520 <tcgetattr@plt+0x2938>
   14a4c:	b	148a4 <tcgetattr@plt+0x2cbc>
   14a50:	ldr	r3, [pc, #236]	; 14b44 <tcgetattr@plt+0x2f5c>
   14a54:	ldr	r0, [r3]
   14a58:	bl	14298 <tcgetattr@plt+0x26b0>
   14a5c:	cmp	r0, #0
   14a60:	movne	r4, #0
   14a64:	movne	r6, r4
   14a68:	bne	149e8 <tcgetattr@plt+0x2e00>
   14a6c:	bl	1a49c <argp_parse@@Base+0xbf4>
   14a70:	ldr	r3, [pc, #204]	; 14b44 <tcgetattr@plt+0x2f5c>
   14a74:	ldr	r0, [r3]
   14a78:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   14a7c:	mov	r6, r0
   14a80:	mov	r4, #0
   14a84:	ldr	r5, [pc, #184]	; 14b44 <tcgetattr@plt+0x2f5c>
   14a88:	ldr	r8, [pc, #156]	; 14b2c <tcgetattr@plt+0x2f44>
   14a8c:	mov	r0, r4
   14a90:	bl	1a49c <argp_parse@@Base+0xbf4>
   14a94:	ldr	r0, [r5]
   14a98:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   14a9c:	mov	r4, r0
   14aa0:	bl	14744 <tcgetattr@plt+0x2b5c>
   14aa4:	ldr	r0, [r5]
   14aa8:	bl	14298 <tcgetattr@plt+0x26b0>
   14aac:	cmp	r0, #0
   14ab0:	bne	149e8 <tcgetattr@plt+0x2e00>
   14ab4:	ldr	r7, [r5]
   14ab8:	mov	r1, r7
   14abc:	mov	r0, r4
   14ac0:	bl	1178c <strcmp@plt>
   14ac4:	cmp	r0, #0
   14ac8:	beq	14ad8 <tcgetattr@plt+0x2ef0>
   14acc:	ldrb	r3, [r8, #24]
   14ad0:	tst	r3, #4
   14ad4:	bne	14a8c <tcgetattr@plt+0x2ea4>
   14ad8:	mov	r1, r7
   14adc:	mov	r0, r6
   14ae0:	bl	1178c <strcmp@plt>
   14ae4:	cmp	r0, #0
   14ae8:	beq	149e8 <tcgetattr@plt+0x2e00>
   14aec:	bl	14744 <tcgetattr@plt+0x2b5c>
   14af0:	ldr	r3, [pc, #76]	; 14b44 <tcgetattr@plt+0x2f5c>
   14af4:	ldr	r5, [r3]
   14af8:	mov	r1, r5
   14afc:	mov	r0, r6
   14b00:	bl	1178c <strcmp@plt>
   14b04:	cmp	r0, #0
   14b08:	beq	149e8 <tcgetattr@plt+0x2e00>
   14b0c:	mov	r0, r5
   14b10:	bl	1a49c <argp_parse@@Base+0xbf4>
   14b14:	mov	r0, r6
   14b18:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   14b1c:	ldr	r3, [pc, #32]	; 14b44 <tcgetattr@plt+0x2f5c>
   14b20:	str	r0, [r3]
   14b24:	b	149e8 <tcgetattr@plt+0x2e00>
   14b28:			; <UNDEFINED> instruction: 0x0003a9b4
   14b2c:	andeq	sl, r3, r4, lsl #14
   14b30:	andeq	r2, r3, r8, lsl r3
   14b34:	andeq	r2, r3, r0, lsr #6
   14b38:	andeq	r2, r3, r8, lsr #6
   14b3c:	andeq	r2, r3, r0, lsr r3
   14b40:	andeq	r2, r3, r0, lsl r3
   14b44:	andeq	sl, r3, r0, lsl #14
   14b48:	push	{r4, lr}
   14b4c:	cmp	r1, #39	; 0x27
   14b50:	bls	14b84 <tcgetattr@plt+0x2f9c>
   14b54:	sub	r3, r1, #236	; 0xec
   14b58:	cmp	r3, #19
   14b5c:	ldrls	r2, [pc, #60]	; 14ba0 <tcgetattr@plt+0x2fb8>
   14b60:	addls	r1, r2, r1, lsl #2
   14b64:	ldrls	r2, [r1, #-740]	; 0xfffffd1c
   14b68:	movls	r1, r0
   14b6c:	ldrls	r0, [pc, #48]	; 14ba4 <tcgetattr@plt+0x2fbc>
   14b70:	movhi	r2, r1
   14b74:	movhi	r1, r0
   14b78:	ldrhi	r0, [pc, #40]	; 14ba8 <tcgetattr@plt+0x2fc0>
   14b7c:	bl	1431c <tcgetattr@plt+0x2734>
   14b80:	pop	{r4, pc}
   14b84:	ldr	r2, [pc, #20]	; 14ba0 <tcgetattr@plt+0x2fb8>
   14b88:	add	r1, r2, r1, lsl #2
   14b8c:	ldr	r2, [r1, #40]	; 0x28
   14b90:	mov	r1, r0
   14b94:	ldr	r0, [pc, #8]	; 14ba4 <tcgetattr@plt+0x2fbc>
   14b98:	bl	1431c <tcgetattr@plt+0x2734>
   14b9c:	pop	{r4, pc}
   14ba0:	andeq	r2, r3, r0, lsl r3
   14ba4:	andeq	r0, r2, r8, lsr #9
   14ba8:			; <UNDEFINED> instruction: 0x000204b0
   14bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bb0:	sub	sp, sp, #60	; 0x3c
   14bb4:	mov	r7, r0
   14bb8:	mov	r6, r1
   14bbc:	mov	r4, r2
   14bc0:	ldrb	r3, [r1]
   14bc4:	cmp	r3, #37	; 0x25
   14bc8:	beq	14cc0 <tcgetattr@plt+0x30d8>
   14bcc:	cmp	r3, #38	; 0x26
   14bd0:	beq	14cd4 <tcgetattr@plt+0x30ec>
   14bd4:	cmp	r7, #0
   14bd8:	beq	14c18 <tcgetattr@plt+0x3030>
   14bdc:	ldr	r3, [pc, #2892]	; 15730 <tcgetattr@plt+0x3b48>
   14be0:	ldr	r1, [pc, #2892]	; 15734 <tcgetattr@plt+0x3b4c>
   14be4:	cmp	r7, #60	; 0x3c
   14be8:	movne	r1, r3
   14bec:	ldr	r0, [pc, #2884]	; 15738 <tcgetattr@plt+0x3b50>
   14bf0:	bl	1431c <tcgetattr@plt+0x2734>
   14bf4:	cmp	r4, #2
   14bf8:	ble	14c14 <tcgetattr@plt+0x302c>
   14bfc:	add	r3, r6, r4
   14c00:	ldrb	r8, [r3, #-2]
   14c04:	ldrb	r5, [r3, #-1]
   14c08:	cmp	r5, #240	; 0xf0
   14c0c:	cmpeq	r8, #255	; 0xff
   14c10:	bne	14ce8 <tcgetattr@plt+0x3100>
   14c14:	sub	r4, r4, #2
   14c18:	cmp	r4, #0
   14c1c:	ble	14d84 <tcgetattr@plt+0x319c>
   14c20:	ldrb	r1, [r6]
   14c24:	sub	r3, r1, #5
   14c28:	cmp	r3, #34	; 0x22
   14c2c:	ldrls	pc, [pc, r3, lsl #2]
   14c30:	b	156bc <tcgetattr@plt+0x3ad4>
   14c34:	andeq	r5, r1, ip, ror #6
   14c38:			; <UNDEFINED> instruction: 0x000156bc
   14c3c:			; <UNDEFINED> instruction: 0x000156bc
   14c40:			; <UNDEFINED> instruction: 0x000156bc
   14c44:			; <UNDEFINED> instruction: 0x000156bc
   14c48:			; <UNDEFINED> instruction: 0x000156bc
   14c4c:			; <UNDEFINED> instruction: 0x000156bc
   14c50:			; <UNDEFINED> instruction: 0x000156bc
   14c54:			; <UNDEFINED> instruction: 0x000156bc
   14c58:			; <UNDEFINED> instruction: 0x000156bc
   14c5c:			; <UNDEFINED> instruction: 0x000156bc
   14c60:			; <UNDEFINED> instruction: 0x000156bc
   14c64:			; <UNDEFINED> instruction: 0x000156bc
   14c68:			; <UNDEFINED> instruction: 0x000156bc
   14c6c:			; <UNDEFINED> instruction: 0x000156bc
   14c70:			; <UNDEFINED> instruction: 0x000156bc
   14c74:			; <UNDEFINED> instruction: 0x000156bc
   14c78:			; <UNDEFINED> instruction: 0x000156bc
   14c7c:			; <UNDEFINED> instruction: 0x000156bc
   14c80:	muleq	r1, r0, sp
   14c84:			; <UNDEFINED> instruction: 0x000156bc
   14c88:			; <UNDEFINED> instruction: 0x000156bc
   14c8c:			; <UNDEFINED> instruction: 0x000156bc
   14c90:			; <UNDEFINED> instruction: 0x000156bc
   14c94:			; <UNDEFINED> instruction: 0x000156bc
   14c98:			; <UNDEFINED> instruction: 0x000156bc
   14c9c:	andeq	r4, r1, r0, lsl #30
   14ca0:	ldrdeq	r4, [r1], -ip
   14ca4:	andeq	r4, r1, r0, ror #28
   14ca8:	andeq	r4, r1, r0, lsr #31
   14cac:	strdeq	r5, [r1], -r8
   14cb0:	andeq	r5, r1, r0, ror r5
   14cb4:			; <UNDEFINED> instruction: 0x000156bc
   14cb8:			; <UNDEFINED> instruction: 0x000156bc
   14cbc:	andeq	r5, r1, r4, asr #10
   14cc0:	ldr	r3, [pc, #2676]	; 1573c <tcgetattr@plt+0x3b54>
   14cc4:	ldr	r3, [r3, #16]
   14cc8:	cmp	r3, #0
   14ccc:	bgt	14bd4 <tcgetattr@plt+0x2fec>
   14cd0:	b	156a8 <tcgetattr@plt+0x3ac0>
   14cd4:	ldr	r3, [pc, #2656]	; 1573c <tcgetattr@plt+0x3b54>
   14cd8:	ldr	r3, [r3, #20]
   14cdc:	cmp	r3, #0
   14ce0:	bgt	14bd4 <tcgetattr@plt+0x2fec>
   14ce4:	b	156a8 <tcgetattr@plt+0x3ac0>
   14ce8:	ldr	r0, [pc, #2640]	; 15740 <tcgetattr@plt+0x3b58>
   14cec:	bl	1431c <tcgetattr@plt+0x2734>
   14cf0:	cmp	r8, #39	; 0x27
   14cf4:	bls	14d54 <tcgetattr@plt+0x316c>
   14cf8:	sub	r3, r8, #236	; 0xec
   14cfc:	cmp	r3, #19
   14d00:	ldrls	r3, [pc, #2620]	; 15744 <tcgetattr@plt+0x3b5c>
   14d04:	addls	r8, r3, r8, lsl #2
   14d08:	ldrls	r1, [r8, #-740]	; 0xfffffd1c
   14d0c:	ldrls	r0, [pc, #2612]	; 15748 <tcgetattr@plt+0x3b60>
   14d10:	movhi	r1, r8
   14d14:	ldrhi	r0, [pc, #2608]	; 1574c <tcgetattr@plt+0x3b64>
   14d18:	bl	1431c <tcgetattr@plt+0x2734>
   14d1c:	cmp	r5, #39	; 0x27
   14d20:	bls	14d6c <tcgetattr@plt+0x3184>
   14d24:	sub	r3, r5, #236	; 0xec
   14d28:	cmp	r3, #19
   14d2c:	ldrls	r3, [pc, #2576]	; 15744 <tcgetattr@plt+0x3b5c>
   14d30:	addls	r5, r3, r5, lsl #2
   14d34:	ldrls	r1, [r5, #-740]	; 0xfffffd1c
   14d38:	ldrls	r0, [pc, #2576]	; 15750 <tcgetattr@plt+0x3b68>
   14d3c:	movhi	r1, r5
   14d40:	ldrhi	r0, [pc, #2572]	; 15754 <tcgetattr@plt+0x3b6c>
   14d44:	bl	1431c <tcgetattr@plt+0x2734>
   14d48:	ldr	r0, [pc, #2568]	; 15758 <tcgetattr@plt+0x3b70>
   14d4c:	bl	1431c <tcgetattr@plt+0x2734>
   14d50:	b	14c14 <tcgetattr@plt+0x302c>
   14d54:	ldr	r3, [pc, #2536]	; 15744 <tcgetattr@plt+0x3b5c>
   14d58:	add	r8, r3, r8, lsl #2
   14d5c:	ldr	r1, [r8, #40]	; 0x28
   14d60:	ldr	r0, [pc, #2528]	; 15748 <tcgetattr@plt+0x3b60>
   14d64:	bl	1431c <tcgetattr@plt+0x2734>
   14d68:	b	14d1c <tcgetattr@plt+0x3134>
   14d6c:	ldr	r3, [pc, #2512]	; 15744 <tcgetattr@plt+0x3b5c>
   14d70:	add	r5, r3, r5, lsl #2
   14d74:	ldr	r1, [r5, #40]	; 0x28
   14d78:	ldr	r0, [pc, #2512]	; 15750 <tcgetattr@plt+0x3b68>
   14d7c:	bl	1431c <tcgetattr@plt+0x2734>
   14d80:	b	14d48 <tcgetattr@plt+0x3160>
   14d84:	ldr	r0, [pc, #2512]	; 1575c <tcgetattr@plt+0x3b74>
   14d88:	bl	1431c <tcgetattr@plt+0x2734>
   14d8c:	b	156a8 <tcgetattr@plt+0x3ac0>
   14d90:	ldr	r0, [pc, #2504]	; 15760 <tcgetattr@plt+0x3b78>
   14d94:	bl	1431c <tcgetattr@plt+0x2734>
   14d98:	ldrb	r1, [r6, #1]
   14d9c:	cmp	r1, #0
   14da0:	beq	14dbc <tcgetattr@plt+0x31d4>
   14da4:	cmp	r1, #1
   14da8:	beq	14dd0 <tcgetattr@plt+0x31e8>
   14dac:	mov	r2, r1
   14db0:	ldr	r0, [pc, #2476]	; 15764 <tcgetattr@plt+0x3b7c>
   14db4:	bl	1431c <tcgetattr@plt+0x2734>
   14db8:	b	156a0 <tcgetattr@plt+0x3ab8>
   14dbc:	add	r2, r6, #2
   14dc0:	sub	r1, r4, #2
   14dc4:	ldr	r0, [pc, #2460]	; 15768 <tcgetattr@plt+0x3b80>
   14dc8:	bl	1431c <tcgetattr@plt+0x2734>
   14dcc:	b	156a0 <tcgetattr@plt+0x3ab8>
   14dd0:	ldr	r0, [pc, #2452]	; 1576c <tcgetattr@plt+0x3b84>
   14dd4:	bl	1431c <tcgetattr@plt+0x2734>
   14dd8:	b	156a0 <tcgetattr@plt+0x3ab8>
   14ddc:	ldr	r0, [pc, #2444]	; 15770 <tcgetattr@plt+0x3b88>
   14de0:	bl	1431c <tcgetattr@plt+0x2734>
   14de4:	cmp	r4, #1
   14de8:	ble	14e34 <tcgetattr@plt+0x324c>
   14dec:	ldrb	r1, [r6, #1]
   14df0:	cmp	r1, #0
   14df4:	beq	14e40 <tcgetattr@plt+0x3258>
   14df8:	cmp	r1, #1
   14dfc:	beq	14e54 <tcgetattr@plt+0x326c>
   14e00:	ldr	r0, [pc, #2412]	; 15774 <tcgetattr@plt+0x3b8c>
   14e04:	bl	1431c <tcgetattr@plt+0x2734>
   14e08:	cmp	r4, #2
   14e0c:	ble	156a0 <tcgetattr@plt+0x3ab8>
   14e10:	add	r5, r6, #2
   14e14:	add	r4, r6, r4
   14e18:	ldr	r8, [pc, #2392]	; 15778 <tcgetattr@plt+0x3b90>
   14e1c:	ldrb	r1, [r5], #1
   14e20:	mov	r0, r8
   14e24:	bl	1431c <tcgetattr@plt+0x2734>
   14e28:	cmp	r5, r4
   14e2c:	bne	14e1c <tcgetattr@plt+0x3234>
   14e30:	b	156a0 <tcgetattr@plt+0x3ab8>
   14e34:	ldr	r0, [pc, #2368]	; 1577c <tcgetattr@plt+0x3b94>
   14e38:	bl	1431c <tcgetattr@plt+0x2734>
   14e3c:	b	156a0 <tcgetattr@plt+0x3ab8>
   14e40:	add	r2, r6, #2
   14e44:	sub	r1, r4, #2
   14e48:	ldr	r0, [pc, #2352]	; 15780 <tcgetattr@plt+0x3b98>
   14e4c:	bl	1431c <tcgetattr@plt+0x2734>
   14e50:	b	156a0 <tcgetattr@plt+0x3ab8>
   14e54:	ldr	r0, [pc, #2344]	; 15784 <tcgetattr@plt+0x3b9c>
   14e58:	bl	1431c <tcgetattr@plt+0x2734>
   14e5c:	b	14e08 <tcgetattr@plt+0x3220>
   14e60:	ldr	r0, [pc, #2336]	; 15788 <tcgetattr@plt+0x3ba0>
   14e64:	bl	1431c <tcgetattr@plt+0x2734>
   14e68:	cmp	r4, #1
   14e6c:	ble	14e90 <tcgetattr@plt+0x32a8>
   14e70:	ldrb	r1, [r6, #1]
   14e74:	cmp	r1, #3
   14e78:	ldrls	pc, [pc, r1, lsl #2]
   14e7c:	b	14ef4 <tcgetattr@plt+0x330c>
   14e80:	muleq	r1, ip, lr
   14e84:	ldrdeq	r4, [r1], -r0
   14e88:	ldrdeq	r4, [r1], -ip
   14e8c:	andeq	r4, r1, r8, ror #29
   14e90:	ldr	r0, [pc, #2276]	; 1577c <tcgetattr@plt+0x3b94>
   14e94:	bl	1431c <tcgetattr@plt+0x2734>
   14e98:	b	156a0 <tcgetattr@plt+0x3ab8>
   14e9c:	ldr	r0, [pc, #2280]	; 1578c <tcgetattr@plt+0x3ba4>
   14ea0:	bl	1431c <tcgetattr@plt+0x2734>
   14ea4:	cmp	r4, #2
   14ea8:	ble	156a0 <tcgetattr@plt+0x3ab8>
   14eac:	add	r5, r6, #2
   14eb0:	add	r4, r6, r4
   14eb4:	ldr	r8, [pc, #2236]	; 15778 <tcgetattr@plt+0x3b90>
   14eb8:	ldrb	r1, [r5], #1
   14ebc:	mov	r0, r8
   14ec0:	bl	1431c <tcgetattr@plt+0x2734>
   14ec4:	cmp	r4, r5
   14ec8:	bne	14eb8 <tcgetattr@plt+0x32d0>
   14ecc:	b	156a0 <tcgetattr@plt+0x3ab8>
   14ed0:	ldr	r0, [pc, #2232]	; 15790 <tcgetattr@plt+0x3ba8>
   14ed4:	bl	1431c <tcgetattr@plt+0x2734>
   14ed8:	b	14ea4 <tcgetattr@plt+0x32bc>
   14edc:	ldr	r0, [pc, #2224]	; 15794 <tcgetattr@plt+0x3bac>
   14ee0:	bl	1431c <tcgetattr@plt+0x2734>
   14ee4:	b	14ea4 <tcgetattr@plt+0x32bc>
   14ee8:	ldr	r0, [pc, #2216]	; 15798 <tcgetattr@plt+0x3bb0>
   14eec:	bl	1431c <tcgetattr@plt+0x2734>
   14ef0:	b	14ea4 <tcgetattr@plt+0x32bc>
   14ef4:	ldr	r0, [pc, #2168]	; 15774 <tcgetattr@plt+0x3b8c>
   14ef8:	bl	1431c <tcgetattr@plt+0x2734>
   14efc:	b	14ea4 <tcgetattr@plt+0x32bc>
   14f00:	ldr	r0, [pc, #2196]	; 1579c <tcgetattr@plt+0x3bb4>
   14f04:	bl	1431c <tcgetattr@plt+0x2734>
   14f08:	cmp	r4, #1
   14f0c:	ble	14f74 <tcgetattr@plt+0x338c>
   14f10:	cmp	r4, #2
   14f14:	beq	14f80 <tcgetattr@plt+0x3398>
   14f18:	ldrb	r1, [r6, #1]
   14f1c:	ldrb	r2, [r6, #2]
   14f20:	orr	r3, r2, r1, lsl #8
   14f24:	ldr	r0, [pc, #2164]	; 157a0 <tcgetattr@plt+0x3bb8>
   14f28:	bl	1431c <tcgetattr@plt+0x2734>
   14f2c:	cmp	r4, #4
   14f30:	beq	14f90 <tcgetattr@plt+0x33a8>
   14f34:	ldrb	r1, [r6, #3]
   14f38:	ldrb	r2, [r6, #4]
   14f3c:	orr	r3, r2, r1, lsl #8
   14f40:	ldr	r0, [pc, #2136]	; 157a0 <tcgetattr@plt+0x3bb8>
   14f44:	bl	1431c <tcgetattr@plt+0x2734>
   14f48:	cmp	r4, #5
   14f4c:	ble	156a0 <tcgetattr@plt+0x3ab8>
   14f50:	add	r5, r6, #5
   14f54:	add	r4, r6, r4
   14f58:	ldr	r8, [pc, #2072]	; 15778 <tcgetattr@plt+0x3b90>
   14f5c:	ldrb	r1, [r5], #1
   14f60:	mov	r0, r8
   14f64:	bl	1431c <tcgetattr@plt+0x2734>
   14f68:	cmp	r4, r5
   14f6c:	bne	14f5c <tcgetattr@plt+0x3374>
   14f70:	b	156a0 <tcgetattr@plt+0x3ab8>
   14f74:	ldr	r0, [pc, #2048]	; 1577c <tcgetattr@plt+0x3b94>
   14f78:	bl	1431c <tcgetattr@plt+0x2734>
   14f7c:	b	156a0 <tcgetattr@plt+0x3ab8>
   14f80:	ldrb	r1, [r6, #1]
   14f84:	ldr	r0, [pc, #2028]	; 15778 <tcgetattr@plt+0x3b90>
   14f88:	bl	1431c <tcgetattr@plt+0x2734>
   14f8c:	b	156a0 <tcgetattr@plt+0x3ab8>
   14f90:	ldrb	r1, [r6, #3]
   14f94:	ldr	r0, [pc, #2012]	; 15778 <tcgetattr@plt+0x3b90>
   14f98:	bl	1431c <tcgetattr@plt+0x2734>
   14f9c:	b	156a0 <tcgetattr@plt+0x3ab8>
   14fa0:	ldr	r0, [pc, #2044]	; 157a4 <tcgetattr@plt+0x3bbc>
   14fa4:	bl	1431c <tcgetattr@plt+0x2734>
   14fa8:	cmp	r4, #1
   14fac:	ble	14fe0 <tcgetattr@plt+0x33f8>
   14fb0:	ldrb	r1, [r6, #1]
   14fb4:	cmp	r1, #251	; 0xfb
   14fb8:	beq	1501c <tcgetattr@plt+0x3434>
   14fbc:	bls	14fec <tcgetattr@plt+0x3404>
   14fc0:	cmp	r1, #253	; 0xfd
   14fc4:	beq	15078 <tcgetattr@plt+0x3490>
   14fc8:	bcc	1506c <tcgetattr@plt+0x3484>
   14fcc:	cmp	r1, #254	; 0xfe
   14fd0:	bne	15338 <tcgetattr@plt+0x3750>
   14fd4:	ldr	r0, [pc, #1996]	; 157a8 <tcgetattr@plt+0x3bc0>
   14fd8:	bl	1431c <tcgetattr@plt+0x2734>
   14fdc:	b	15024 <tcgetattr@plt+0x343c>
   14fe0:	ldr	r0, [pc, #1940]	; 1577c <tcgetattr@plt+0x3b94>
   14fe4:	bl	1431c <tcgetattr@plt+0x2734>
   14fe8:	b	156a0 <tcgetattr@plt+0x3ab8>
   14fec:	cmp	r1, #1
   14ff0:	beq	15240 <tcgetattr@plt+0x3658>
   14ff4:	cmp	r1, #3
   14ff8:	bne	15338 <tcgetattr@plt+0x3750>
   14ffc:	ldr	r0, [pc, #1960]	; 157ac <tcgetattr@plt+0x3bc4>
   15000:	bl	1431c <tcgetattr@plt+0x2734>
   15004:	sub	fp, r4, #2
   15008:	cmp	fp, #2
   1500c:	ble	15210 <tcgetattr@plt+0x3628>
   15010:	mov	r5, #2
   15014:	ldr	sl, [pc, #1940]	; 157b0 <tcgetattr@plt+0x3bc8>
   15018:	b	15140 <tcgetattr@plt+0x3558>
   1501c:	ldr	r0, [pc, #1936]	; 157b4 <tcgetattr@plt+0x3bcc>
   15020:	bl	1431c <tcgetattr@plt+0x2734>
   15024:	cmp	r4, #2
   15028:	ble	15084 <tcgetattr@plt+0x349c>
   1502c:	ldrb	r1, [r6, #2]
   15030:	cmp	r1, #2
   15034:	bne	15090 <tcgetattr@plt+0x34a8>
   15038:	ldr	r0, [pc, #1912]	; 157b8 <tcgetattr@plt+0x3bd0>
   1503c:	bl	1431c <tcgetattr@plt+0x2734>
   15040:	cmp	r4, #3
   15044:	ble	156a0 <tcgetattr@plt+0x3ab8>
   15048:	add	r5, r6, #3
   1504c:	add	r4, r6, r4
   15050:	ldr	r6, [pc, #1892]	; 157bc <tcgetattr@plt+0x3bd4>
   15054:	ldrb	r1, [r5], #1
   15058:	mov	r0, r6
   1505c:	bl	1431c <tcgetattr@plt+0x2734>
   15060:	cmp	r5, r4
   15064:	bne	15054 <tcgetattr@plt+0x346c>
   15068:	b	156a0 <tcgetattr@plt+0x3ab8>
   1506c:	ldr	r0, [pc, #1868]	; 157c0 <tcgetattr@plt+0x3bd8>
   15070:	bl	1431c <tcgetattr@plt+0x2734>
   15074:	b	15024 <tcgetattr@plt+0x343c>
   15078:	ldr	r0, [pc, #1860]	; 157c4 <tcgetattr@plt+0x3bdc>
   1507c:	bl	1431c <tcgetattr@plt+0x2734>
   15080:	b	15024 <tcgetattr@plt+0x343c>
   15084:	ldr	r0, [pc, #1852]	; 157c8 <tcgetattr@plt+0x3be0>
   15088:	bl	1431c <tcgetattr@plt+0x2734>
   1508c:	b	156a0 <tcgetattr@plt+0x3ab8>
   15090:	ldr	r0, [pc, #1844]	; 157cc <tcgetattr@plt+0x3be4>
   15094:	bl	1431c <tcgetattr@plt+0x2734>
   15098:	cmp	r4, #3
   1509c:	ble	156a0 <tcgetattr@plt+0x3ab8>
   150a0:	add	r5, r6, #3
   150a4:	add	r4, r6, r4
   150a8:	ldr	r6, [pc, #1824]	; 157d0 <tcgetattr@plt+0x3be8>
   150ac:	ldrb	r1, [r5], #1
   150b0:	mov	r0, r6
   150b4:	bl	1431c <tcgetattr@plt+0x2734>
   150b8:	cmp	r5, r4
   150bc:	bne	150ac <tcgetattr@plt+0x34c4>
   150c0:	b	156a0 <tcgetattr@plt+0x3ab8>
   150c4:	ldr	r0, [pc, #1800]	; 157d4 <tcgetattr@plt+0x3bec>
   150c8:	bl	1431c <tcgetattr@plt+0x2734>
   150cc:	ldrb	r3, [r6, r9]
   150d0:	sxtb	r0, r3
   150d4:	and	r1, r3, #64	; 0x40
   150d8:	and	r3, r3, #32
   150dc:	ldr	r2, [pc, #1780]	; 157d8 <tcgetattr@plt+0x3bf0>
   150e0:	cmp	r3, #0
   150e4:	movne	r3, r2
   150e8:	moveq	r3, sl
   150ec:	ldr	r2, [pc, #1768]	; 157dc <tcgetattr@plt+0x3bf4>
   150f0:	cmp	r1, #0
   150f4:	moveq	r2, sl
   150f8:	ldr	r1, [pc, #1760]	; 157e0 <tcgetattr@plt+0x3bf8>
   150fc:	cmp	r0, #0
   15100:	movge	r1, sl
   15104:	ldr	r0, [pc, #1752]	; 157e4 <tcgetattr@plt+0x3bfc>
   15108:	bl	1431c <tcgetattr@plt+0x2734>
   1510c:	ldrb	r1, [r6, r9]
   15110:	bics	r3, r1, #227	; 0xe3
   15114:	bne	151b0 <tcgetattr@plt+0x35c8>
   15118:	add	r9, r8, #2
   1511c:	ldrb	r1, [r6, r9]
   15120:	ldr	r0, [pc, #1728]	; 157e8 <tcgetattr@plt+0x3c00>
   15124:	bl	1431c <tcgetattr@plt+0x2734>
   15128:	ldrb	r3, [r6, r9]
   1512c:	cmp	r3, #255	; 0xff
   15130:	beq	151bc <tcgetattr@plt+0x35d4>
   15134:	add	r5, r5, #3
   15138:	cmp	r5, fp
   1513c:	bge	15214 <tcgetattr@plt+0x362c>
   15140:	mov	r8, r5
   15144:	ldrb	r1, [r6, r5]
   15148:	cmp	r1, #18
   1514c:	ldrls	r3, [pc, #1520]	; 15744 <tcgetattr@plt+0x3b5c>
   15150:	addls	r1, r3, r1, lsl #2
   15154:	ldrls	r1, [r1, #288]	; 0x120
   15158:	ldrls	r0, [pc, #1676]	; 157ec <tcgetattr@plt+0x3c04>
   1515c:	ldrhi	r0, [pc, #1644]	; 157d0 <tcgetattr@plt+0x3be8>
   15160:	bl	1431c <tcgetattr@plt+0x2734>
   15164:	add	r9, r5, #1
   15168:	ldrb	r3, [r6, r9]
   1516c:	and	r3, r3, #3
   15170:	cmp	r3, #3
   15174:	ldrls	pc, [pc, r3, lsl #2]
   15178:	b	150cc <tcgetattr@plt+0x34e4>
   1517c:	andeq	r5, r1, r4, asr #1
   15180:	andeq	r5, r1, ip, lsl #3
   15184:	muleq	r1, r8, r1
   15188:	andeq	r5, r1, r4, lsr #3
   1518c:	ldr	r0, [pc, #1628]	; 157f0 <tcgetattr@plt+0x3c08>
   15190:	bl	1431c <tcgetattr@plt+0x2734>
   15194:	b	150cc <tcgetattr@plt+0x34e4>
   15198:	ldr	r0, [pc, #1620]	; 157f4 <tcgetattr@plt+0x3c0c>
   1519c:	bl	1431c <tcgetattr@plt+0x2734>
   151a0:	b	150cc <tcgetattr@plt+0x34e4>
   151a4:	ldr	r0, [pc, #1612]	; 157f8 <tcgetattr@plt+0x3c10>
   151a8:	bl	1431c <tcgetattr@plt+0x2734>
   151ac:	b	150cc <tcgetattr@plt+0x34e4>
   151b0:	ldr	r0, [pc, #1604]	; 157fc <tcgetattr@plt+0x3c14>
   151b4:	bl	1431c <tcgetattr@plt+0x2734>
   151b8:	b	15118 <tcgetattr@plt+0x3530>
   151bc:	add	r3, r6, r8
   151c0:	ldrb	r3, [r3, #3]
   151c4:	cmp	r3, #255	; 0xff
   151c8:	movne	r3, #0
   151cc:	moveq	r3, #1
   151d0:	cmp	r7, #60	; 0x3c
   151d4:	moveq	r3, #0
   151d8:	cmp	r3, #0
   151dc:	beq	151f8 <tcgetattr@plt+0x3610>
   151e0:	add	r5, r5, #1
   151e4:	mov	r8, r5
   151e8:	add	r3, r6, r5
   151ec:	ldrb	r3, [r3, #2]
   151f0:	cmp	r3, #255	; 0xff
   151f4:	bne	15134 <tcgetattr@plt+0x354c>
   151f8:	add	r8, r6, r8
   151fc:	ldrb	r3, [r8, #3]
   15200:	cmp	r3, #255	; 0xff
   15204:	cmpeq	r7, #0
   15208:	addeq	r5, r5, #2
   1520c:	b	15134 <tcgetattr@plt+0x354c>
   15210:	mov	r5, #2
   15214:	cmp	r4, r5
   15218:	ble	156a0 <tcgetattr@plt+0x3ab8>
   1521c:	add	r5, r6, r5
   15220:	add	r4, r6, r4
   15224:	ldr	r6, [pc, #1356]	; 15778 <tcgetattr@plt+0x3b90>
   15228:	ldrb	r1, [r5], #1
   1522c:	mov	r0, r6
   15230:	bl	1431c <tcgetattr@plt+0x2734>
   15234:	cmp	r5, r4
   15238:	bne	15228 <tcgetattr@plt+0x3640>
   1523c:	b	156a0 <tcgetattr@plt+0x3ab8>
   15240:	ldr	r0, [pc, #1464]	; 15800 <tcgetattr@plt+0x3c18>
   15244:	bl	1431c <tcgetattr@plt+0x2734>
   15248:	cmp	r4, #2
   1524c:	ble	15320 <tcgetattr@plt+0x3738>
   15250:	ldrb	r2, [r6, #2]
   15254:	and	r5, r2, #1
   15258:	and	r0, r2, #2
   1525c:	ldr	r3, [pc, #1356]	; 157b0 <tcgetattr@plt+0x3bc8>
   15260:	ldr	r1, [pc, #1436]	; 15804 <tcgetattr@plt+0x3c1c>
   15264:	cmp	r0, #0
   15268:	moveq	r1, r3
   1526c:	and	ip, r2, #8
   15270:	ldr	r0, [pc, #1424]	; 15808 <tcgetattr@plt+0x3c20>
   15274:	cmp	ip, #0
   15278:	moveq	r0, r3
   1527c:	and	lr, r2, #16
   15280:	ldr	ip, [pc, #1412]	; 1580c <tcgetattr@plt+0x3c24>
   15284:	cmp	lr, #0
   15288:	moveq	ip, r3
   1528c:	and	r2, r2, #4
   15290:	ldr	lr, [pc, #1352]	; 157e0 <tcgetattr@plt+0x3bf8>
   15294:	cmp	r2, #0
   15298:	movne	r2, lr
   1529c:	moveq	r2, r3
   152a0:	str	r2, [sp, #12]
   152a4:	str	ip, [sp, #8]
   152a8:	str	r0, [sp, #4]
   152ac:	str	r1, [sp]
   152b0:	mov	r2, r3
   152b4:	ldr	r3, [pc, #1364]	; 15810 <tcgetattr@plt+0x3c28>
   152b8:	cmp	r5, #0
   152bc:	moveq	r3, r2
   152c0:	ldr	r2, [pc, #1356]	; 15814 <tcgetattr@plt+0x3c2c>
   152c4:	mov	r1, #36	; 0x24
   152c8:	add	r0, sp, #20
   152cc:	bl	11a20 <snprintf@plt>
   152d0:	ldrb	r3, [sp, #20]
   152d4:	cmp	r3, #0
   152d8:	ldreq	r1, [pc, #1336]	; 15818 <tcgetattr@plt+0x3c30>
   152dc:	addne	r1, sp, #21
   152e0:	ldr	r0, [pc, #1128]	; 15750 <tcgetattr@plt+0x3b68>
   152e4:	bl	1431c <tcgetattr@plt+0x2734>
   152e8:	ldrb	r1, [r6, #2]
   152ec:	bics	r3, r1, #7
   152f0:	bne	1532c <tcgetattr@plt+0x3744>
   152f4:	cmp	r4, #3
   152f8:	ble	156a0 <tcgetattr@plt+0x3ab8>
   152fc:	add	r5, r6, #3
   15300:	add	r4, r6, r4
   15304:	ldr	r6, [pc, #1296]	; 1581c <tcgetattr@plt+0x3c34>
   15308:	ldrb	r1, [r5], #1
   1530c:	mov	r0, r6
   15310:	bl	1431c <tcgetattr@plt+0x2734>
   15314:	cmp	r5, r4
   15318:	bne	15308 <tcgetattr@plt+0x3720>
   1531c:	b	156a0 <tcgetattr@plt+0x3ab8>
   15320:	ldr	r0, [pc, #1272]	; 15820 <tcgetattr@plt+0x3c38>
   15324:	bl	1431c <tcgetattr@plt+0x2734>
   15328:	b	156a0 <tcgetattr@plt+0x3ab8>
   1532c:	ldr	r0, [pc, #1264]	; 15824 <tcgetattr@plt+0x3c3c>
   15330:	bl	1431c <tcgetattr@plt+0x2734>
   15334:	b	152f4 <tcgetattr@plt+0x370c>
   15338:	ldr	r0, [pc, #1164]	; 157cc <tcgetattr@plt+0x3be4>
   1533c:	bl	1431c <tcgetattr@plt+0x2734>
   15340:	cmp	r4, #2
   15344:	ble	156a0 <tcgetattr@plt+0x3ab8>
   15348:	add	r5, r6, #2
   1534c:	add	r4, r6, r4
   15350:	ldr	r6, [pc, #1144]	; 157d0 <tcgetattr@plt+0x3be8>
   15354:	ldrb	r1, [r5], #1
   15358:	mov	r0, r6
   1535c:	bl	1431c <tcgetattr@plt+0x2734>
   15360:	cmp	r4, r5
   15364:	bne	15354 <tcgetattr@plt+0x376c>
   15368:	b	156a0 <tcgetattr@plt+0x3ab8>
   1536c:	ldr	r0, [pc, #1204]	; 15828 <tcgetattr@plt+0x3c40>
   15370:	bl	1431c <tcgetattr@plt+0x2734>
   15374:	ldrb	r1, [r6, #1]
   15378:	cmp	r1, #0
   1537c:	beq	153c8 <tcgetattr@plt+0x37e0>
   15380:	cmp	r1, #1
   15384:	beq	153bc <tcgetattr@plt+0x37d4>
   15388:	ldr	r0, [pc, #996]	; 15774 <tcgetattr@plt+0x3b8c>
   1538c:	bl	1431c <tcgetattr@plt+0x2734>
   15390:	cmp	r4, #2
   15394:	ble	156a0 <tcgetattr@plt+0x3ab8>
   15398:	add	r5, r6, #2
   1539c:	add	r4, r6, r4
   153a0:	ldr	r8, [pc, #976]	; 15778 <tcgetattr@plt+0x3b90>
   153a4:	ldrb	r1, [r5], #1
   153a8:	mov	r0, r8
   153ac:	bl	1431c <tcgetattr@plt+0x2734>
   153b0:	cmp	r4, r5
   153b4:	bne	153a4 <tcgetattr@plt+0x37bc>
   153b8:	b	156a0 <tcgetattr@plt+0x3ab8>
   153bc:	ldr	r0, [pc, #960]	; 15784 <tcgetattr@plt+0x3b9c>
   153c0:	bl	1431c <tcgetattr@plt+0x2734>
   153c4:	b	15390 <tcgetattr@plt+0x37a8>
   153c8:	ldr	r0, [pc, #1116]	; 1582c <tcgetattr@plt+0x3c44>
   153cc:	bl	1431c <tcgetattr@plt+0x2734>
   153d0:	cmp	r4, #2
   153d4:	ble	156a0 <tcgetattr@plt+0x3ab8>
   153d8:	mov	r5, #2
   153dc:	ldr	fp, [pc, #1004]	; 157d0 <tcgetattr@plt+0x3be8>
   153e0:	ldr	sl, [pc, #1096]	; 15830 <tcgetattr@plt+0x3c48>
   153e4:	ldr	r9, [pc, #856]	; 15744 <tcgetattr@plt+0x3b5c>
   153e8:	b	15434 <tcgetattr@plt+0x384c>
   153ec:	ldr	r1, [pc, #1088]	; 15834 <tcgetattr@plt+0x3c4c>
   153f0:	b	15408 <tcgetattr@plt+0x3820>
   153f4:	ldr	r1, [pc, #1084]	; 15838 <tcgetattr@plt+0x3c50>
   153f8:	b	15408 <tcgetattr@plt+0x3820>
   153fc:	ldr	r1, [pc, #1080]	; 1583c <tcgetattr@plt+0x3c54>
   15400:	b	15408 <tcgetattr@plt+0x3820>
   15404:	ldr	r1, [pc, #1076]	; 15840 <tcgetattr@plt+0x3c58>
   15408:	add	r5, r5, #1
   1540c:	ldrb	r2, [r6, r5]
   15410:	cmp	r2, #39	; 0x27
   15414:	addls	r2, r9, r2, lsl #2
   15418:	ldrls	r2, [r2, #40]	; 0x28
   1541c:	ldrls	r0, [pc, #1056]	; 15844 <tcgetattr@plt+0x3c5c>
   15420:	movhi	r0, sl
   15424:	bl	1431c <tcgetattr@plt+0x2734>
   15428:	add	r5, r5, #1
   1542c:	cmp	r4, r5
   15430:	ble	156a0 <tcgetattr@plt+0x3ab8>
   15434:	add	r8, r6, r5
   15438:	ldrb	r1, [r6, r5]
   1543c:	sub	r3, r1, #250	; 0xfa
   15440:	cmp	r3, #4
   15444:	ldrls	pc, [pc, r3, lsl #2]
   15448:	b	154ec <tcgetattr@plt+0x3904>
   1544c:	andeq	r5, r1, r0, ror #8
   15450:	strdeq	r5, [r1], -r4
   15454:	strdeq	r5, [r1], -ip
   15458:	andeq	r5, r1, r4, lsl #8
   1545c:	andeq	r5, r1, ip, ror #7
   15460:	ldr	r0, [pc, #992]	; 15848 <tcgetattr@plt+0x3c60>
   15464:	bl	1431c <tcgetattr@plt+0x2734>
   15468:	add	r1, r5, #1
   1546c:	cmp	r4, r1
   15470:	ble	1571c <tcgetattr@plt+0x3b34>
   15474:	mov	r0, r8
   15478:	mov	r2, r1
   1547c:	mov	r5, r1
   15480:	b	1549c <tcgetattr@plt+0x38b4>
   15484:	add	r2, r2, #1
   15488:	add	r5, r3, #1
   1548c:	ldrb	r3, [r6, r3]
   15490:	strb	r3, [r0, #1]!
   15494:	cmp	r4, r5
   15498:	ble	154c8 <tcgetattr@plt+0x38e0>
   1549c:	ldrb	r3, [r6, r5]
   154a0:	cmp	r3, #240	; 0xf0
   154a4:	movne	r3, r5
   154a8:	bne	15484 <tcgetattr@plt+0x389c>
   154ac:	add	r3, r5, #1
   154b0:	cmp	r4, r3
   154b4:	beq	154c8 <tcgetattr@plt+0x38e0>
   154b8:	add	ip, r6, r5
   154bc:	ldrb	ip, [ip, #1]
   154c0:	cmp	ip, #240	; 0xf0
   154c4:	beq	15484 <tcgetattr@plt+0x389c>
   154c8:	sub	r2, r2, r1
   154cc:	add	r1, r6, r1
   154d0:	mov	r0, #0
   154d4:	bl	14bac <tcgetattr@plt+0x2fc4>
   154d8:	ldr	r0, [pc, #876]	; 1584c <tcgetattr@plt+0x3c64>
   154dc:	bl	1431c <tcgetattr@plt+0x2734>
   154e0:	ldr	r0, [pc, #872]	; 15850 <tcgetattr@plt+0x3c68>
   154e4:	bl	1431c <tcgetattr@plt+0x2734>
   154e8:	b	15428 <tcgetattr@plt+0x3840>
   154ec:	mov	r0, fp
   154f0:	bl	1431c <tcgetattr@plt+0x2734>
   154f4:	b	15428 <tcgetattr@plt+0x3840>
   154f8:	ldr	r0, [pc, #852]	; 15854 <tcgetattr@plt+0x3c6c>
   154fc:	bl	1431c <tcgetattr@plt+0x2734>
   15500:	ldrb	r1, [r6, #1]
   15504:	cmp	r1, #0
   15508:	beq	15524 <tcgetattr@plt+0x393c>
   1550c:	cmp	r1, #1
   15510:	beq	15538 <tcgetattr@plt+0x3950>
   15514:	mov	r2, r1
   15518:	ldr	r0, [pc, #580]	; 15764 <tcgetattr@plt+0x3b7c>
   1551c:	bl	1431c <tcgetattr@plt+0x2734>
   15520:	b	156a0 <tcgetattr@plt+0x3ab8>
   15524:	add	r2, r6, #2
   15528:	sub	r1, r4, #2
   1552c:	ldr	r0, [pc, #564]	; 15768 <tcgetattr@plt+0x3b80>
   15530:	bl	1431c <tcgetattr@plt+0x2734>
   15534:	b	156a0 <tcgetattr@plt+0x3ab8>
   15538:	ldr	r0, [pc, #556]	; 1576c <tcgetattr@plt+0x3b84>
   1553c:	bl	1431c <tcgetattr@plt+0x2734>
   15540:	b	156a0 <tcgetattr@plt+0x3ab8>
   15544:	ldr	r0, [pc, #780]	; 15858 <tcgetattr@plt+0x3c70>
   15548:	bl	1431c <tcgetattr@plt+0x2734>
   1554c:	ldrb	r3, [r6, #1]
   15550:	cmp	r3, #1
   15554:	beq	155a4 <tcgetattr@plt+0x39bc>
   15558:	bcc	1557c <tcgetattr@plt+0x3994>
   1555c:	cmp	r3, #2
   15560:	bne	156a0 <tcgetattr@plt+0x3ab8>
   15564:	ldr	r0, [pc, #752]	; 1585c <tcgetattr@plt+0x3c74>
   15568:	bl	1431c <tcgetattr@plt+0x2734>
   1556c:	b	15584 <tcgetattr@plt+0x399c>
   15570:	ldr	r0, [pc, #744]	; 15860 <tcgetattr@plt+0x3c78>
   15574:	bl	1431c <tcgetattr@plt+0x2734>
   15578:	b	1554c <tcgetattr@plt+0x3964>
   1557c:	ldr	r0, [pc, #736]	; 15864 <tcgetattr@plt+0x3c7c>
   15580:	bl	1431c <tcgetattr@plt+0x2734>
   15584:	cmp	r4, #2
   15588:	ble	156a0 <tcgetattr@plt+0x3ab8>
   1558c:	add	r5, r6, #2
   15590:	add	r4, r6, r4
   15594:	ldr	r8, [pc, #532]	; 157b0 <tcgetattr@plt+0x3bc8>
   15598:	mov	sl, r8
   1559c:	ldr	fp, [pc, #708]	; 15868 <tcgetattr@plt+0x3c80>
   155a0:	b	155c8 <tcgetattr@plt+0x39e0>
   155a4:	ldr	r0, [pc, #704]	; 1586c <tcgetattr@plt+0x3c84>
   155a8:	bl	1431c <tcgetattr@plt+0x2734>
   155ac:	b	15584 <tcgetattr@plt+0x399c>
   155b0:	mov	r1, r8
   155b4:	ldr	r0, [pc, #692]	; 15870 <tcgetattr@plt+0x3c88>
   155b8:	bl	1431c <tcgetattr@plt+0x2734>
   155bc:	mov	r8, sl
   155c0:	cmp	r5, r4
   155c4:	beq	1568c <tcgetattr@plt+0x3aa4>
   155c8:	mov	r9, r5
   155cc:	ldrb	r6, [r5], #1
   155d0:	cmp	r6, #3
   155d4:	ldrls	pc, [pc, r6, lsl #2]
   155d8:	b	15628 <tcgetattr@plt+0x3a40>
   155dc:			; <UNDEFINED> instruction: 0x000155b0
   155e0:	andeq	r5, r1, ip, ror #11
   155e4:	andeq	r5, r1, r0, lsl #12
   155e8:	andeq	r5, r1, r4, lsl r6
   155ec:	mov	r1, r8
   155f0:	ldr	r0, [pc, #636]	; 15874 <tcgetattr@plt+0x3c8c>
   155f4:	bl	1431c <tcgetattr@plt+0x2734>
   155f8:	mov	r8, sl
   155fc:	b	155c0 <tcgetattr@plt+0x39d8>
   15600:	mov	r1, r8
   15604:	ldr	r0, [pc, #620]	; 15878 <tcgetattr@plt+0x3c90>
   15608:	bl	1431c <tcgetattr@plt+0x2734>
   1560c:	mov	r8, sl
   15610:	b	155c0 <tcgetattr@plt+0x39d8>
   15614:	mov	r1, r8
   15618:	mov	r0, fp
   1561c:	bl	1431c <tcgetattr@plt+0x2734>
   15620:	mov	r8, sl
   15624:	b	155c0 <tcgetattr@plt+0x39d8>
   15628:	bl	11990 <__ctype_b_loc@plt>
   1562c:	ldr	r2, [r0]
   15630:	lsl	r3, r6, #1
   15634:	ldrh	r2, [r2, r3]
   15638:	subs	r3, r6, #34	; 0x22
   1563c:	movne	r3, #1
   15640:	ands	r3, r3, r2, lsr #14
   15644:	beq	15674 <tcgetattr@plt+0x3a8c>
   15648:	ldrb	r3, [r8]
   1564c:	cmp	r3, #0
   15650:	beq	15664 <tcgetattr@plt+0x3a7c>
   15654:	mov	r1, #1
   15658:	mov	r0, r9
   1565c:	bl	142e0 <tcgetattr@plt+0x26f8>
   15660:	b	155c0 <tcgetattr@plt+0x39d8>
   15664:	ldr	r0, [pc, #528]	; 1587c <tcgetattr@plt+0x3c94>
   15668:	bl	1431c <tcgetattr@plt+0x2734>
   1566c:	ldr	r8, [pc, #524]	; 15880 <tcgetattr@plt+0x3c98>
   15670:	b	15654 <tcgetattr@plt+0x3a6c>
   15674:	mov	r2, r6
   15678:	mov	r1, r8
   1567c:	ldr	r0, [pc, #512]	; 15884 <tcgetattr@plt+0x3c9c>
   15680:	bl	1431c <tcgetattr@plt+0x2734>
   15684:	mov	r8, sl
   15688:	b	155c0 <tcgetattr@plt+0x39d8>
   1568c:	ldr	r1, [pc, #492]	; 15880 <tcgetattr@plt+0x3c98>
   15690:	mov	r0, r8
   15694:	bl	1178c <strcmp@plt>
   15698:	cmp	r0, #0
   1569c:	beq	156b0 <tcgetattr@plt+0x3ac8>
   156a0:	cmp	r7, #0
   156a4:	bne	15710 <tcgetattr@plt+0x3b28>
   156a8:	add	sp, sp, #60	; 0x3c
   156ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156b0:	ldr	r0, [pc, #452]	; 1587c <tcgetattr@plt+0x3c94>
   156b4:	bl	1431c <tcgetattr@plt+0x2734>
   156b8:	b	156a0 <tcgetattr@plt+0x3ab8>
   156bc:	cmp	r1, #39	; 0x27
   156c0:	bhi	15704 <tcgetattr@plt+0x3b1c>
   156c4:	ldr	r3, [pc, #120]	; 15744 <tcgetattr@plt+0x3b5c>
   156c8:	add	r1, r3, r1, lsl #2
   156cc:	ldr	r1, [r1, #40]	; 0x28
   156d0:	ldr	r0, [pc, #432]	; 15888 <tcgetattr@plt+0x3ca0>
   156d4:	bl	1431c <tcgetattr@plt+0x2734>
   156d8:	cmp	r4, #1
   156dc:	ble	156a0 <tcgetattr@plt+0x3ab8>
   156e0:	add	r5, r6, #1
   156e4:	add	r4, r6, r4
   156e8:	ldr	r6, [pc, #224]	; 157d0 <tcgetattr@plt+0x3be8>
   156ec:	ldrb	r1, [r5], #1
   156f0:	mov	r0, r6
   156f4:	bl	1431c <tcgetattr@plt+0x2734>
   156f8:	cmp	r4, r5
   156fc:	bne	156ec <tcgetattr@plt+0x3b04>
   15700:	b	156a0 <tcgetattr@plt+0x3ab8>
   15704:	ldr	r0, [pc, #192]	; 157cc <tcgetattr@plt+0x3be4>
   15708:	bl	1431c <tcgetattr@plt+0x2734>
   1570c:	b	156d8 <tcgetattr@plt+0x3af0>
   15710:	ldr	r0, [pc, #312]	; 15850 <tcgetattr@plt+0x3c68>
   15714:	bl	1431c <tcgetattr@plt+0x2734>
   15718:	b	156a8 <tcgetattr@plt+0x3ac0>
   1571c:	mov	r2, #0
   15720:	add	r1, r6, r1
   15724:	mov	r0, r2
   15728:	bl	14bac <tcgetattr@plt+0x2fc4>
   1572c:	b	154e0 <tcgetattr@plt+0x38f8>
   15730:	andeq	r0, r2, r0, asr #9
   15734:			; <UNDEFINED> instruction: 0x000204b8
   15738:	andeq	r0, r2, r8, lsr r5
   1573c:	andeq	sl, r3, r0, ror #13
   15740:	andeq	r0, r2, ip, asr #10
   15744:	andeq	r2, r3, r0, lsl r3
   15748:	andeq	r0, r2, ip, asr r5
   1574c:	andeq	r0, r2, r0, ror #10
   15750:	andeq	pc, r1, ip, asr #30
   15754:	andeq	r0, r2, r4, ror #10
   15758:	andeq	r0, r2, r8, ror #10
   1575c:	andeq	r0, r2, r8, ror r5
   15760:	muleq	r2, r0, r5
   15764:			; <UNDEFINED> instruction: 0x000205b4
   15768:	andeq	r0, r2, r0, lsr #11
   1576c:	andeq	r0, r2, ip, lsr #11
   15770:	ldrdeq	r0, [r2], -r4
   15774:	andeq	r0, r2, r0, lsl r6
   15778:	andeq	r0, r2, r0, lsr #12
   1577c:	andeq	r0, r2, r4, ror #11
   15780:	strdeq	r0, [r2], -ip
   15784:	andeq	r0, r2, r8, lsl #12
   15788:	andeq	r0, r2, r8, lsr #12
   1578c:	andeq	r0, r2, ip, lsr r6
   15790:	andeq	r0, r2, r4, asr #12
   15794:	andeq	r0, r2, r8, asr #12
   15798:	andeq	r0, r2, r8, asr r6
   1579c:	andeq	r0, r2, r8, ror #12
   157a0:	andeq	r0, r2, r0, ror r6
   157a4:	andeq	r0, r2, ip, ror r6
   157a8:	muleq	r2, ip, r6
   157ac:	ldrdeq	r0, [r2], -ip
   157b0:	andeq	r0, r2, r0, ror r7
   157b4:	andeq	r0, r2, r8, lsl #13
   157b8:			; <UNDEFINED> instruction: 0x000206b4
   157bc:	andeq	r0, r2, r4, asr #13
   157c0:	muleq	r2, r0, r6
   157c4:	muleq	r2, r8, r6
   157c8:	andeq	r0, r2, r4, lsr #13
   157cc:	andeq	r0, r2, r8, asr #13
   157d0:	ldrdeq	r0, [r2], -r8
   157d4:	andeq	r0, r2, r0, ror #13
   157d8:	ldrdeq	r0, [r2], -ip
   157dc:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   157e0:	andeq	r0, r2, r8, asr #9
   157e4:	andeq	r0, r2, r4, lsr r7
   157e8:	andeq	r0, r2, r8, lsl r7
   157ec:	andeq	r0, r2, ip, ror #25
   157f0:	andeq	r0, r2, ip, ror #13
   157f4:	strdeq	r0, [r2], -r8
   157f8:	andeq	r0, r2, r4, lsl #14
   157fc:	andeq	r0, r2, r0, lsl r7
   15800:	andeq	r0, r2, r0, lsl #13
   15804:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   15808:	strdeq	r0, [r2], -ip
   1580c:	andeq	r0, r2, r8, lsl #10
   15810:	andeq	r0, r2, r8, ror #9
   15814:	andeq	r0, r2, r0, lsr r7
   15818:	andeq	r0, r2, r4, lsl r5
   1581c:	andeq	r0, r2, r4, asr #14
   15820:	andeq	r0, r2, r0, lsr #14
   15824:	andeq	r0, r2, ip, lsr r7
   15828:	andeq	r0, r2, ip, asr #14
   1582c:	andeq	r0, r2, r4, asr r7
   15830:	andeq	r0, r2, r8, ror #14
   15834:	andeq	r0, r2, ip, lsl r5
   15838:	andeq	r0, r2, r4, lsr #10
   1583c:	andeq	r0, r2, ip, lsr #10
   15840:	andeq	r0, r2, r8, lsl r5
   15844:	andeq	r0, r2, ip, asr r7
   15848:	andeq	r0, r2, r4, ror r7
   1584c:	andeq	r0, r2, r0, lsl #16
   15850:	andeq	r0, r2, r4, lsl #2
   15854:	andeq	r0, r2, ip, ror r7
   15858:	muleq	r2, r0, r7
   1585c:			; <UNDEFINED> instruction: 0x000207b8
   15860:	andeq	r0, r2, r0, lsr #15
   15864:	andeq	r0, r2, ip, lsr #15
   15868:	ldrdeq	r0, [r2], -ip
   1586c:			; <UNDEFINED> instruction: 0x000207b0
   15870:	andeq	r0, r2, r0, asr #15
   15874:	andeq	r0, r2, r8, asr #15
   15878:	ldrdeq	r0, [r2], -r4
   1587c:	andeq	r0, r2, r8, lsr #11
   15880:	andeq	r0, r2, r4, lsr r5
   15884:	andeq	r0, r2, r8, ror #15
   15888:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1588c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15890:	sub	sp, sp, #44	; 0x2c
   15894:	str	r0, [sp, #4]
   15898:	subs	r6, r2, #0
   1589c:	beq	15968 <tcgetattr@plt+0x3d80>
   158a0:	mov	r8, r1
   158a4:	ldr	r1, [sp, #4]
   158a8:	ldr	r0, [pc, #192]	; 15970 <tcgetattr@plt+0x3d88>
   158ac:	bl	1431c <tcgetattr@plt+0x2734>
   158b0:	ldr	r9, [pc, #188]	; 15974 <tcgetattr@plt+0x3d8c>
   158b4:	ldr	sl, [pc, #188]	; 15978 <tcgetattr@plt+0x3d90>
   158b8:	mov	fp, #0
   158bc:	b	15958 <tcgetattr@plt+0x3d70>
   158c0:	mov	r8, r5
   158c4:	add	r4, r4, #1
   158c8:	subs	r6, r6, #1
   158cc:	movne	r3, #1
   158d0:	moveq	r3, #0
   158d4:	cmp	r4, #19
   158d8:	movgt	r3, #0
   158dc:	andle	r3, r3, #1
   158e0:	cmp	r3, #0
   158e4:	beq	1592c <tcgetattr@plt+0x3d44>
   158e8:	ldrb	r1, [r5]
   158ec:	mov	r0, r9
   158f0:	bl	1431c <tcgetattr@plt+0x2734>
   158f4:	bl	11990 <__ctype_b_loc@plt>
   158f8:	ldrb	r3, [r5], #1
   158fc:	ldr	r1, [r0]
   15900:	lsl	r2, r3, #1
   15904:	ldrh	r2, [r1, r2]
   15908:	and	r2, r2, #16384	; 0x4000
   1590c:	cmp	r2, #0
   15910:	moveq	r3, #46	; 0x2e
   15914:	strb	r3, [r7, #1]!
   15918:	tst	r4, #1
   1591c:	beq	158c0 <tcgetattr@plt+0x3cd8>
   15920:	mov	r0, sl
   15924:	bl	1431c <tcgetattr@plt+0x2734>
   15928:	b	158c0 <tcgetattr@plt+0x3cd8>
   1592c:	add	r3, sp, #40	; 0x28
   15930:	add	r4, r3, r4
   15934:	strb	fp, [r4, #-32]	; 0xffffffe0
   15938:	add	r1, sp, #8
   1593c:	ldr	r0, [pc, #56]	; 1597c <tcgetattr@plt+0x3d94>
   15940:	bl	1431c <tcgetattr@plt+0x2734>
   15944:	cmp	r6, #0
   15948:	beq	15968 <tcgetattr@plt+0x3d80>
   1594c:	ldr	r1, [sp, #4]
   15950:	ldr	r0, [pc, #24]	; 15970 <tcgetattr@plt+0x3d88>
   15954:	bl	1431c <tcgetattr@plt+0x2734>
   15958:	mov	r5, r8
   1595c:	add	r7, sp, #7
   15960:	mov	r4, #0
   15964:	b	158e8 <tcgetattr@plt+0x3d00>
   15968:	add	sp, sp, #44	; 0x2c
   1596c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15970:	andeq	r0, r2, r4, lsl #16
   15974:	andeq	r0, r2, ip, lsl #16
   15978:			; <UNDEFINED> instruction: 0x000207b4
   1597c:	andeq	r0, r2, r4, lsl r8
   15980:	push	{r4, lr}
   15984:	mov	r2, #8192	; 0x2000
   15988:	ldr	r1, [pc, #192]	; 15a50 <tcgetattr@plt+0x3e68>
   1598c:	ldr	r3, [pc, #192]	; 15a54 <tcgetattr@plt+0x3e6c>
   15990:	ldr	r0, [r3]
   15994:	bl	117bc <read@plt>
   15998:	mov	r4, r0
   1599c:	ldr	r3, [pc, #180]	; 15a58 <tcgetattr@plt+0x3e70>
   159a0:	str	r0, [r3, #192]	; 0xc0
   159a4:	cmp	r0, #0
   159a8:	blt	15a18 <tcgetattr@plt+0x3e30>
   159ac:	cmp	r0, #0
   159b0:	beq	15a38 <tcgetattr@plt+0x3e50>
   159b4:	cmp	r4, #0
   159b8:	ble	15a0c <tcgetattr@plt+0x3e24>
   159bc:	ldr	r3, [pc, #152]	; 15a5c <tcgetattr@plt+0x3e74>
   159c0:	add	r2, r3, #168	; 0xa8
   159c4:	str	r2, [r3, #164]	; 0xa4
   159c8:	ldr	r3, [pc, #144]	; 15a60 <tcgetattr@plt+0x3e78>
   159cc:	ldr	r3, [r3, #4]
   159d0:	cmp	r3, #0
   159d4:	ble	159e4 <tcgetattr@plt+0x3dfc>
   159d8:	mov	r1, r4
   159dc:	ldr	r0, [pc, #128]	; 15a64 <tcgetattr@plt+0x3e7c>
   159e0:	bl	1431c <tcgetattr@plt+0x2734>
   159e4:	ldr	r3, [pc, #116]	; 15a60 <tcgetattr@plt+0x3e78>
   159e8:	ldr	r3, [r3, #8]
   159ec:	cmp	r3, #0
   159f0:	ble	15a0c <tcgetattr@plt+0x3e24>
   159f4:	ldr	r3, [pc, #92]	; 15a58 <tcgetattr@plt+0x3e70>
   159f8:	ldr	r2, [r3, #192]	; 0xc0
   159fc:	ldr	r3, [pc, #88]	; 15a5c <tcgetattr@plt+0x3e74>
   15a00:	ldr	r1, [r3, #164]	; 0xa4
   15a04:	ldr	r0, [pc, #92]	; 15a68 <tcgetattr@plt+0x3e80>
   15a08:	bl	1588c <tcgetattr@plt+0x3ca4>
   15a0c:	ldr	r3, [pc, #68]	; 15a58 <tcgetattr@plt+0x3e70>
   15a10:	ldr	r0, [r3, #192]	; 0xc0
   15a14:	pop	{r4, pc}
   15a18:	bl	11a14 <__errno_location@plt>
   15a1c:	ldr	r3, [r0]
   15a20:	cmp	r3, #11
   15a24:	bne	159b4 <tcgetattr@plt+0x3dcc>
   15a28:	mov	r2, #0
   15a2c:	ldr	r3, [pc, #36]	; 15a58 <tcgetattr@plt+0x3e70>
   15a30:	str	r2, [r3, #192]	; 0xc0
   15a34:	b	15a0c <tcgetattr@plt+0x3e24>
   15a38:	ldr	r1, [pc, #44]	; 15a6c <tcgetattr@plt+0x3e84>
   15a3c:	mov	r0, #6
   15a40:	bl	11aec <syslog@plt>
   15a44:	mov	r0, #0
   15a48:	bl	13024 <tcgetattr@plt+0x143c>
   15a4c:	b	15a0c <tcgetattr@plt+0x3e24>
   15a50:	andeq	r6, r3, r0, asr #11
   15a54:	andeq	sl, r3, ip, lsr #19
   15a58:	andeq	sl, r3, r8, lsl #10
   15a5c:	andeq	r6, r3, r8, lsl r5
   15a60:	andeq	sl, r3, r0, ror #13
   15a64:	andeq	r0, r2, r0, lsr r8
   15a68:	andeq	r0, r2, r8, asr #16
   15a6c:	andeq	r0, r2, ip, lsl r8
   15a70:	push	{r4, lr}
   15a74:	ldr	r3, [pc, #204]	; 15b48 <tcgetattr@plt+0x3f60>
   15a78:	ldr	r4, [r3, #80]	; 0x50
   15a7c:	ldr	r3, [pc, #200]	; 15b4c <tcgetattr@plt+0x3f64>
   15a80:	ldr	r3, [r3, #4]
   15a84:	sub	r4, r4, r3
   15a88:	cmp	r4, #0
   15a8c:	ble	15aec <tcgetattr@plt+0x3f04>
   15a90:	ldr	r3, [pc, #184]	; 15b50 <tcgetattr@plt+0x3f68>
   15a94:	ldr	r3, [r3, #4]
   15a98:	cmp	r3, #0
   15a9c:	ble	15aac <tcgetattr@plt+0x3ec4>
   15aa0:	mov	r1, r4
   15aa4:	ldr	r0, [pc, #168]	; 15b54 <tcgetattr@plt+0x3f6c>
   15aa8:	bl	1431c <tcgetattr@plt+0x2734>
   15aac:	ldr	r3, [pc, #156]	; 15b50 <tcgetattr@plt+0x3f68>
   15ab0:	ldr	r3, [r3, #12]
   15ab4:	cmp	r3, #0
   15ab8:	ble	15ad0 <tcgetattr@plt+0x3ee8>
   15abc:	mov	r2, r4
   15ac0:	ldr	r3, [pc, #132]	; 15b4c <tcgetattr@plt+0x3f64>
   15ac4:	ldr	r1, [r3, #4]
   15ac8:	ldr	r0, [pc, #136]	; 15b58 <tcgetattr@plt+0x3f70>
   15acc:	bl	1588c <tcgetattr@plt+0x3ca4>
   15ad0:	mov	r2, r4
   15ad4:	ldr	r3, [pc, #112]	; 15b4c <tcgetattr@plt+0x3f64>
   15ad8:	ldr	r1, [r3, #4]
   15adc:	ldr	r3, [pc, #120]	; 15b5c <tcgetattr@plt+0x3f74>
   15ae0:	ldr	r0, [r3]
   15ae4:	bl	11a50 <write@plt>
   15ae8:	mov	r4, r0
   15aec:	cmp	r4, #0
   15af0:	blt	15b28 <tcgetattr@plt+0x3f40>
   15af4:	ldr	r2, [pc, #80]	; 15b4c <tcgetattr@plt+0x3f64>
   15af8:	ldr	r3, [r2, #4]
   15afc:	add	r4, r3, r4
   15b00:	str	r4, [r2, #4]
   15b04:	ldr	r3, [pc, #60]	; 15b48 <tcgetattr@plt+0x3f60>
   15b08:	ldr	r3, [r3, #80]	; 0x50
   15b0c:	cmp	r4, r3
   15b10:	moveq	r3, r2
   15b14:	addeq	r2, r3, #8
   15b18:	ldreq	r1, [pc, #40]	; 15b48 <tcgetattr@plt+0x3f60>
   15b1c:	streq	r2, [r1, #80]	; 0x50
   15b20:	streq	r2, [r3, #4]
   15b24:	pop	{r4, pc}
   15b28:	bl	11a14 <__errno_location@plt>
   15b2c:	ldr	r3, [r0]
   15b30:	cmp	r3, #4
   15b34:	cmpne	r3, #11
   15b38:	popeq	{r4, pc}
   15b3c:	mov	r0, #0
   15b40:	bl	13024 <tcgetattr@plt+0x143c>
   15b44:	b	15af4 <tcgetattr@plt+0x3f0c>
   15b48:	andeq	r4, r3, r0, lsr #10
   15b4c:	andeq	r2, r3, r8, lsr #10
   15b50:	andeq	sl, r3, r0, ror #13
   15b54:	andeq	r0, r2, ip, asr #16
   15b58:	andeq	r0, r2, r4, ror #16
   15b5c:	ldrdeq	sl, [r3], -r0
   15b60:	push	{r4, r5, r6, r7, r8, lr}
   15b64:	mov	r7, r0
   15b68:	mov	r5, r1
   15b6c:	ldr	r3, [pc, #60]	; 15bb0 <tcgetattr@plt+0x3fc8>
   15b70:	ldr	r2, [r3, #80]	; 0x50
   15b74:	ldr	r3, [pc, #56]	; 15bb4 <tcgetattr@plt+0x3fcc>
   15b78:	sub	r3, r3, r2
   15b7c:	cmp	r3, r1
   15b80:	bhi	15ba8 <tcgetattr@plt+0x3fc0>
   15b84:	ldr	r6, [pc, #36]	; 15bb0 <tcgetattr@plt+0x3fc8>
   15b88:	ldr	r4, [r6, #80]	; 0x50
   15b8c:	mov	r2, r5
   15b90:	mov	r1, r7
   15b94:	mov	r0, r4
   15b98:	bl	11810 <memcpy@plt>
   15b9c:	add	r4, r4, r5
   15ba0:	str	r4, [r6, #80]	; 0x50
   15ba4:	pop	{r4, r5, r6, r7, r8, pc}
   15ba8:	bl	15a70 <tcgetattr@plt+0x3e88>
   15bac:	b	15b84 <tcgetattr@plt+0x3f9c>
   15bb0:	andeq	r4, r3, r0, lsr #10
   15bb4:	andeq	r4, r3, r0, lsr r5
   15bb8:	push	{r4, lr}
   15bbc:	mov	r2, #8192	; 0x2000
   15bc0:	ldr	r1, [pc, #152]	; 15c60 <tcgetattr@plt+0x4078>
   15bc4:	ldr	r3, [pc, #152]	; 15c64 <tcgetattr@plt+0x407c>
   15bc8:	ldr	r0, [r3]
   15bcc:	bl	117bc <read@plt>
   15bd0:	ldr	r3, [pc, #144]	; 15c68 <tcgetattr@plt+0x4080>
   15bd4:	str	r0, [r3, #196]	; 0xc4
   15bd8:	cmp	r0, #0
   15bdc:	blt	15c40 <tcgetattr@plt+0x4058>
   15be0:	ldr	r3, [pc, #132]	; 15c6c <tcgetattr@plt+0x4084>
   15be4:	add	r2, r3, #180	; 0xb4
   15be8:	str	r2, [r3, #176]	; 0xb0
   15bec:	ldr	r3, [pc, #124]	; 15c70 <tcgetattr@plt+0x4088>
   15bf0:	ldr	r3, [r3, #4]
   15bf4:	cmp	r3, #0
   15bf8:	ble	15c0c <tcgetattr@plt+0x4024>
   15bfc:	ldr	r3, [pc, #100]	; 15c68 <tcgetattr@plt+0x4080>
   15c00:	ldr	r1, [r3, #196]	; 0xc4
   15c04:	ldr	r0, [pc, #104]	; 15c74 <tcgetattr@plt+0x408c>
   15c08:	bl	1431c <tcgetattr@plt+0x2734>
   15c0c:	ldr	r3, [pc, #92]	; 15c70 <tcgetattr@plt+0x4088>
   15c10:	ldr	r3, [r3, #12]
   15c14:	cmp	r3, #0
   15c18:	ble	15c34 <tcgetattr@plt+0x404c>
   15c1c:	ldr	r3, [pc, #68]	; 15c68 <tcgetattr@plt+0x4080>
   15c20:	ldr	r2, [r3, #196]	; 0xc4
   15c24:	ldr	r3, [pc, #64]	; 15c6c <tcgetattr@plt+0x4084>
   15c28:	ldr	r1, [r3, #176]	; 0xb0
   15c2c:	ldr	r0, [pc, #68]	; 15c78 <tcgetattr@plt+0x4090>
   15c30:	bl	1588c <tcgetattr@plt+0x3ca4>
   15c34:	ldr	r3, [pc, #44]	; 15c68 <tcgetattr@plt+0x4080>
   15c38:	ldr	r0, [r3, #196]	; 0xc4
   15c3c:	pop	{r4, pc}
   15c40:	bl	11a14 <__errno_location@plt>
   15c44:	ldr	r3, [r0]
   15c48:	cmp	r3, #5
   15c4c:	cmpne	r3, #11
   15c50:	moveq	r2, #0
   15c54:	ldreq	r3, [pc, #12]	; 15c68 <tcgetattr@plt+0x4080>
   15c58:	streq	r2, [r3, #196]	; 0xc4
   15c5c:	b	15be0 <tcgetattr@plt+0x3ff8>
   15c60:	andeq	r8, r3, r4, asr #11
   15c64:	ldrdeq	sl, [r3], -r0
   15c68:	andeq	sl, r3, r8, lsl #10
   15c6c:	andeq	r8, r3, r0, lsl r5
   15c70:	andeq	sl, r3, r0, ror #13
   15c74:	andeq	r0, r2, r8, ror #16
   15c78:	andeq	r0, r2, r4, ror #16
   15c7c:	push	{r4, lr}
   15c80:	sub	sp, sp, #72	; 0x48
   15c84:	mov	r4, r0
   15c88:	mov	r1, #0
   15c8c:	str	r1, [sp, #12]
   15c90:	str	r1, [sp, #16]
   15c94:	str	r0, [sp, #20]
   15c98:	str	r0, [sp, #24]
   15c9c:	ldr	r3, [pc, #192]	; 15d64 <tcgetattr@plt+0x417c>
   15ca0:	str	r3, [sp]
   15ca4:	ldr	r3, [pc, #188]	; 15d68 <tcgetattr@plt+0x4180>
   15ca8:	mov	r2, r1
   15cac:	add	r0, sp, #28
   15cb0:	bl	1a704 <_obstack_begin@@Base>
   15cb4:	add	r0, sp, #12
   15cb8:	bl	13a0c <tcgetattr@plt+0x1e24>
   15cbc:	ldr	r3, [sp, #12]
   15cc0:	cmp	r3, #1
   15cc4:	bne	15d30 <tcgetattr@plt+0x4148>
   15cc8:	ldr	r0, [sp, #36]	; 0x24
   15ccc:	ldr	r3, [sp, #40]	; 0x28
   15cd0:	cmp	r0, r3
   15cd4:	ldrbeq	r2, [sp, #68]	; 0x44
   15cd8:	orreq	r2, r2, #2
   15cdc:	strbeq	r2, [sp, #68]	; 0x44
   15ce0:	ldr	r2, [sp, #52]	; 0x34
   15ce4:	add	r3, r3, r2
   15ce8:	bic	r3, r3, r2
   15cec:	str	r3, [sp, #40]	; 0x28
   15cf0:	ldr	r2, [sp, #32]
   15cf4:	ldr	r1, [sp, #44]	; 0x2c
   15cf8:	sub	r3, r3, r2
   15cfc:	sub	r2, r1, r2
   15d00:	cmp	r3, r2
   15d04:	strhi	r1, [sp, #40]	; 0x28
   15d08:	ldr	r3, [sp, #40]	; 0x28
   15d0c:	str	r3, [sp, #36]	; 0x24
   15d10:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   15d14:	mov	r4, r0
   15d18:	mov	r1, #0
   15d1c:	add	r0, sp, #28
   15d20:	bl	1a8a0 <_obstack_free@@Base>
   15d24:	mov	r0, r4
   15d28:	add	sp, sp, #72	; 0x48
   15d2c:	pop	{r4, pc}
   15d30:	mov	r2, r4
   15d34:	ldr	r1, [pc, #48]	; 15d6c <tcgetattr@plt+0x4184>
   15d38:	mov	r0, #3
   15d3c:	bl	11aec <syslog@plt>
   15d40:	ldr	r2, [sp, #24]
   15d44:	ldr	r3, [pc, #36]	; 15d70 <tcgetattr@plt+0x4188>
   15d48:	cmp	r2, #0
   15d4c:	moveq	r2, r3
   15d50:	ldr	r1, [pc, #28]	; 15d74 <tcgetattr@plt+0x418c>
   15d54:	mov	r0, #3
   15d58:	bl	11aec <syslog@plt>
   15d5c:	mov	r4, #0
   15d60:	b	15d18 <tcgetattr@plt+0x4130>
   15d64:	muleq	r1, ip, r4
   15d68:	andeq	fp, r1, r8, asr #8
   15d6c:	andeq	r0, r2, r8, lsl #17
   15d70:	andeq	r0, r2, r0, lsl #17
   15d74:	andeq	r0, r2, r0, lsr #17
   15d78:	push	{r4, lr}
   15d7c:	bl	15a70 <tcgetattr@plt+0x3e88>
   15d80:	bl	13314 <tcgetattr@plt+0x172c>
   15d84:	ldr	r3, [pc, #20]	; 15da0 <tcgetattr@plt+0x41b8>
   15d88:	ldr	r3, [r3, #60]	; 0x3c
   15d8c:	cmp	r3, #0
   15d90:	ldrbne	r0, [r3]
   15d94:	moveq	r0, #28
   15d98:	bl	13dc4 <tcgetattr@plt+0x21dc>
   15d9c:	pop	{r4, pc}
   15da0:	andeq	sl, r3, ip, lsl #18
   15da4:	push	{r4, lr}
   15da8:	bl	13314 <tcgetattr@plt+0x172c>
   15dac:	bl	130c8 <tcgetattr@plt+0x14e0>
   15db0:	ldr	r3, [pc, #20]	; 15dcc <tcgetattr@plt+0x41e4>
   15db4:	ldr	r3, [r3, #68]	; 0x44
   15db8:	cmp	r3, #0
   15dbc:	ldrbne	r0, [r3]
   15dc0:	moveq	r0, #4
   15dc4:	bl	13dc4 <tcgetattr@plt+0x21dc>
   15dc8:	pop	{r4, pc}
   15dcc:	andeq	sl, r3, ip, lsl #18
   15dd0:	push	{r4, lr}
   15dd4:	mov	r2, #0
   15dd8:	mov	r1, #251	; 0xfb
   15ddc:	mov	r0, #34	; 0x22
   15de0:	bl	180b4 <tcgetattr@plt+0x64cc>
   15de4:	pop	{r4, pc}
   15de8:	cmp	r1, #0
   15dec:	beq	15e48 <tcgetattr@plt+0x4260>
   15df0:	ldr	r3, [pc, #132]	; 15e7c <tcgetattr@plt+0x4294>
   15df4:	ldrb	r3, [r3, r0]
   15df8:	cmp	r3, #0
   15dfc:	bne	15e10 <tcgetattr@plt+0x4228>
   15e00:	ldr	r2, [pc, #120]	; 15e80 <tcgetattr@plt+0x4298>
   15e04:	ldrb	r2, [r2, r0]
   15e08:	tst	r2, #4
   15e0c:	bxne	lr
   15e10:	ldr	r2, [pc, #104]	; 15e80 <tcgetattr@plt+0x4298>
   15e14:	ldrb	r2, [r2, r0]
   15e18:	tst	r2, #8
   15e1c:	bxne	lr
   15e20:	cmp	r0, #6
   15e24:	biceq	r2, r2, #8
   15e28:	ldreq	r1, [pc, #80]	; 15e80 <tcgetattr@plt+0x4298>
   15e2c:	strbeq	r2, [r1, #6]
   15e30:	orrne	r2, r2, #8
   15e34:	ldrne	r1, [pc, #68]	; 15e80 <tcgetattr@plt+0x4298>
   15e38:	strbne	r2, [r1, r0]
   15e3c:	add	r3, r3, #1
   15e40:	ldr	r2, [pc, #52]	; 15e7c <tcgetattr@plt+0x4294>
   15e44:	strb	r3, [r2, r0]
   15e48:	push	{r4, lr}
   15e4c:	mov	r4, r0
   15e50:	mov	r1, r0
   15e54:	ldr	r0, [pc, #40]	; 15e84 <tcgetattr@plt+0x429c>
   15e58:	bl	14490 <tcgetattr@plt+0x28a8>
   15e5c:	ldr	r3, [pc, #36]	; 15e88 <tcgetattr@plt+0x42a0>
   15e60:	ldr	r3, [r3]
   15e64:	cmp	r3, #0
   15e68:	pople	{r4, pc}
   15e6c:	mov	r1, r4
   15e70:	ldr	r0, [pc, #20]	; 15e8c <tcgetattr@plt+0x42a4>
   15e74:	bl	14b48 <tcgetattr@plt+0x2f60>
   15e78:	pop	{r4, pc}
   15e7c:	andeq	sl, r3, r8, lsl #16
   15e80:	andeq	sl, r3, r4, lsl #14
   15e84:	andeq	r2, r3, r0, lsl #9
   15e88:	andeq	sl, r3, r0, ror #13
   15e8c:			; <UNDEFINED> instruction: 0x00020ab4
   15e90:	cmp	r1, #0
   15e94:	beq	15ee0 <tcgetattr@plt+0x42f8>
   15e98:	ldr	r3, [pc, #116]	; 15f14 <tcgetattr@plt+0x432c>
   15e9c:	ldrb	r3, [r3, r0]
   15ea0:	cmp	r3, #0
   15ea4:	bne	15eb8 <tcgetattr@plt+0x42d0>
   15ea8:	ldr	r2, [pc, #104]	; 15f18 <tcgetattr@plt+0x4330>
   15eac:	ldrb	r2, [r2, r0]
   15eb0:	tst	r2, #4
   15eb4:	bxeq	lr
   15eb8:	ldr	r2, [pc, #88]	; 15f18 <tcgetattr@plt+0x4330>
   15ebc:	ldrb	r2, [r2, r0]
   15ec0:	tst	r2, #8
   15ec4:	bxeq	lr
   15ec8:	bic	r2, r2, #8
   15ecc:	ldr	r1, [pc, #68]	; 15f18 <tcgetattr@plt+0x4330>
   15ed0:	strb	r2, [r1, r0]
   15ed4:	add	r3, r3, #1
   15ed8:	ldr	r2, [pc, #52]	; 15f14 <tcgetattr@plt+0x432c>
   15edc:	strb	r3, [r2, r0]
   15ee0:	push	{r4, lr}
   15ee4:	mov	r4, r0
   15ee8:	mov	r1, r0
   15eec:	ldr	r0, [pc, #40]	; 15f1c <tcgetattr@plt+0x4334>
   15ef0:	bl	14490 <tcgetattr@plt+0x28a8>
   15ef4:	ldr	r3, [pc, #36]	; 15f20 <tcgetattr@plt+0x4338>
   15ef8:	ldr	r3, [r3]
   15efc:	cmp	r3, #0
   15f00:	pople	{r4, pc}
   15f04:	mov	r1, r4
   15f08:	ldr	r0, [pc, #20]	; 15f24 <tcgetattr@plt+0x433c>
   15f0c:	bl	14b48 <tcgetattr@plt+0x2f60>
   15f10:	pop	{r4, pc}
   15f14:	andeq	sl, r3, r8, lsl #16
   15f18:	andeq	sl, r3, r4, lsl #14
   15f1c:	andeq	r2, r3, r8, lsl #9
   15f20:	andeq	sl, r3, r0, ror #13
   15f24:	andeq	r0, r2, r0, asr #21
   15f28:	cmp	r1, #0
   15f2c:	beq	15f78 <tcgetattr@plt+0x4390>
   15f30:	ldr	r3, [pc, #116]	; 15fac <tcgetattr@plt+0x43c4>
   15f34:	ldrb	r3, [r3, r0]
   15f38:	cmp	r3, #0
   15f3c:	bne	15f50 <tcgetattr@plt+0x4368>
   15f40:	ldr	r2, [pc, #104]	; 15fb0 <tcgetattr@plt+0x43c8>
   15f44:	ldrb	r2, [r2, r0]
   15f48:	tst	r2, #1
   15f4c:	bxne	lr
   15f50:	ldr	r2, [pc, #88]	; 15fb0 <tcgetattr@plt+0x43c8>
   15f54:	ldrb	r2, [r2, r0]
   15f58:	tst	r2, #2
   15f5c:	bxne	lr
   15f60:	orr	r2, r2, #2
   15f64:	ldr	r1, [pc, #68]	; 15fb0 <tcgetattr@plt+0x43c8>
   15f68:	strb	r2, [r1, r0]
   15f6c:	add	r3, r3, #1
   15f70:	ldr	r2, [pc, #52]	; 15fac <tcgetattr@plt+0x43c4>
   15f74:	strb	r3, [r2, r0]
   15f78:	push	{r4, lr}
   15f7c:	mov	r4, r0
   15f80:	mov	r1, r0
   15f84:	ldr	r0, [pc, #40]	; 15fb4 <tcgetattr@plt+0x43cc>
   15f88:	bl	14490 <tcgetattr@plt+0x28a8>
   15f8c:	ldr	r3, [pc, #36]	; 15fb8 <tcgetattr@plt+0x43d0>
   15f90:	ldr	r3, [r3]
   15f94:	cmp	r3, #0
   15f98:	pople	{r4, pc}
   15f9c:	mov	r1, r4
   15fa0:	ldr	r0, [pc, #20]	; 15fbc <tcgetattr@plt+0x43d4>
   15fa4:	bl	14b48 <tcgetattr@plt+0x2f60>
   15fa8:	pop	{r4, pc}
   15fac:	andeq	sl, r3, r0, ror #21
   15fb0:	andeq	sl, r3, r4, lsl #14
   15fb4:	muleq	r3, r0, r4
   15fb8:	andeq	sl, r3, r0, ror #13
   15fbc:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   15fc0:	push	{r4, lr}
   15fc4:	mov	r4, r0
   15fc8:	ldr	r3, [pc, #668]	; 1626c <tcgetattr@plt+0x4684>
   15fcc:	ldr	r3, [r3]
   15fd0:	cmp	r3, #0
   15fd4:	ble	15fe4 <tcgetattr@plt+0x43fc>
   15fd8:	mov	r1, r0
   15fdc:	ldr	r0, [pc, #652]	; 16270 <tcgetattr@plt+0x4688>
   15fe0:	bl	14b48 <tcgetattr@plt+0x2f60>
   15fe4:	ldr	r3, [pc, #648]	; 16274 <tcgetattr@plt+0x468c>
   15fe8:	ldrb	r3, [r3, r4]
   15fec:	cmp	r3, #0
   15ff0:	beq	16030 <tcgetattr@plt+0x4448>
   15ff4:	sub	r2, r3, #1
   15ff8:	uxtb	r2, r2
   15ffc:	ldr	r1, [pc, #624]	; 16274 <tcgetattr@plt+0x468c>
   16000:	strb	r2, [r1, r4]
   16004:	cmp	r2, #0
   16008:	beq	16030 <tcgetattr@plt+0x4448>
   1600c:	ldr	r2, [pc, #612]	; 16278 <tcgetattr@plt+0x4690>
   16010:	ldrb	r2, [r2, r4]
   16014:	tst	r2, #4
   16018:	bne	16110 <tcgetattr@plt+0x4528>
   1601c:	sub	r3, r3, #2
   16020:	uxtb	r3, r3
   16024:	strb	r3, [r1, r4]
   16028:	cmp	r3, #0
   1602c:	bne	16110 <tcgetattr@plt+0x4528>
   16030:	ldr	r3, [pc, #576]	; 16278 <tcgetattr@plt+0x4690>
   16034:	ldrb	r3, [r3, r4]
   16038:	tst	r3, #8
   1603c:	beq	16220 <tcgetattr@plt+0x4638>
   16040:	cmp	r4, #39	; 0x27
   16044:	ldrls	pc, [pc, r4, lsl #2]
   16048:	b	160f8 <tcgetattr@plt+0x4510>
   1604c:	andeq	r6, r1, r4, lsr #2
   16050:	andeq	r6, r1, ip, ror #1
   16054:	strdeq	r6, [r1], -r8
   16058:	strdeq	r6, [r1], -r8
   1605c:	strdeq	r6, [r1], -r8
   16060:	strdeq	r6, [r1], -r8
   16064:	andeq	r6, r1, ip, asr r1
   16068:	strdeq	r6, [r1], -r8
   1606c:	strdeq	r6, [r1], -r8
   16070:	strdeq	r6, [r1], -r8
   16074:	strdeq	r6, [r1], -r8
   16078:	strdeq	r6, [r1], -r8
   1607c:	strdeq	r6, [r1], -r8
   16080:	strdeq	r6, [r1], -r8
   16084:	strdeq	r6, [r1], -r8
   16088:	strdeq	r6, [r1], -r8
   1608c:	strdeq	r6, [r1], -r8
   16090:	strdeq	r6, [r1], -r8
   16094:	strdeq	r6, [r1], -r8
   16098:	strdeq	r6, [r1], -r8
   1609c:	strdeq	r6, [r1], -r8
   160a0:	strdeq	r6, [r1], -r8
   160a4:	strdeq	r6, [r1], -r8
   160a8:	strdeq	r6, [r1], -r8
   160ac:	muleq	r1, r8, r1
   160b0:	strdeq	r6, [r1], -r8
   160b4:	strdeq	r6, [r1], -r8
   160b8:	strdeq	r6, [r1], -r8
   160bc:	strdeq	r6, [r1], -r8
   160c0:	strdeq	r6, [r1], -r8
   160c4:	strdeq	r6, [r1], -r8
   160c8:	strdeq	r6, [r1], -r8
   160cc:			; <UNDEFINED> instruction: 0x000161b0
   160d0:	andeq	r6, r1, r0, ror r1
   160d4:	andeq	r6, r1, r8, lsr r1
   160d8:	andeq	r6, r1, r8, asr #3
   160dc:	andeq	r6, r1, r0, ror #3
   160e0:	strdeq	r6, [r1], -r8
   160e4:	strdeq	r6, [r1], -r8
   160e8:	strdeq	r6, [r1], -r8
   160ec:	mov	r2, #1
   160f0:	ldr	r3, [pc, #388]	; 1627c <tcgetattr@plt+0x4694>
   160f4:	str	r2, [r3, #24]
   160f8:	ldr	r2, [pc, #376]	; 16278 <tcgetattr@plt+0x4690>
   160fc:	ldrb	r3, [r2, r4]
   16100:	bic	r1, r3, #8
   16104:	strb	r1, [r2, r4]
   16108:	tst	r3, #4
   1610c:	bne	16210 <tcgetattr@plt+0x4628>
   16110:	ldr	r2, [pc, #352]	; 16278 <tcgetattr@plt+0x4690>
   16114:	ldrb	r3, [r2, r4]
   16118:	bic	r3, r3, #4
   1611c:	strb	r3, [r2, r4]
   16120:	pop	{r4, pc}
   16124:	bl	13314 <tcgetattr@plt+0x172c>
   16128:	mov	r0, #0
   1612c:	bl	13188 <tcgetattr@plt+0x15a0>
   16130:	bl	133dc <tcgetattr@plt+0x17f4>
   16134:	b	160f8 <tcgetattr@plt+0x4510>
   16138:	ldr	r3, [pc, #320]	; 16280 <tcgetattr@plt+0x4698>
   1613c:	ldr	r3, [r3]
   16140:	cmp	r3, #4
   16144:	bne	160f8 <tcgetattr@plt+0x4510>
   16148:	mov	r2, #0
   1614c:	mov	r1, #252	; 0xfc
   16150:	mov	r0, #34	; 0x22
   16154:	bl	180b4 <tcgetattr@plt+0x64cc>
   16158:	b	160f8 <tcgetattr@plt+0x4510>
   1615c:	ldr	r2, [pc, #276]	; 16278 <tcgetattr@plt+0x4690>
   16160:	ldrb	r3, [r2, #6]
   16164:	bic	r3, r3, #8
   16168:	strb	r3, [r2, #6]
   1616c:	pop	{r4, pc}
   16170:	ldr	r2, [pc, #268]	; 16284 <tcgetattr@plt+0x469c>
   16174:	ldrb	r3, [r2, #120]	; 0x78
   16178:	bic	r3, r3, #3
   1617c:	orr	r3, r3, #1
   16180:	strb	r3, [r2, #120]	; 0x78
   16184:	ldrb	r3, [r2, #128]	; 0x80
   16188:	bic	r3, r3, #3
   1618c:	orr	r3, r3, #1
   16190:	strb	r3, [r2, #128]	; 0x80
   16194:	b	160f8 <tcgetattr@plt+0x4510>
   16198:	ldr	r2, [pc, #232]	; 16288 <tcgetattr@plt+0x46a0>
   1619c:	ldr	r3, [r2]
   161a0:	add	r3, r3, #1
   161a4:	str	r3, [r2]
   161a8:	str	r3, [r2, #16]
   161ac:	b	160f8 <tcgetattr@plt+0x4510>
   161b0:	ldr	r2, [pc, #208]	; 16288 <tcgetattr@plt+0x46a0>
   161b4:	ldr	r3, [r2]
   161b8:	add	r3, r3, #1
   161bc:	str	r3, [r2]
   161c0:	str	r3, [r2, #20]
   161c4:	b	160f8 <tcgetattr@plt+0x4510>
   161c8:	ldr	r2, [pc, #184]	; 16288 <tcgetattr@plt+0x46a0>
   161cc:	ldr	r3, [r2]
   161d0:	add	r3, r3, #1
   161d4:	str	r3, [r2]
   161d8:	str	r3, [r2, #32]
   161dc:	b	160f8 <tcgetattr@plt+0x4510>
   161e0:	ldr	r2, [pc, #160]	; 16288 <tcgetattr@plt+0x46a0>
   161e4:	ldr	r3, [r2]
   161e8:	add	r3, r3, #1
   161ec:	str	r3, [r2]
   161f0:	str	r3, [r2, #28]
   161f4:	b	160f8 <tcgetattr@plt+0x4510>
   161f8:	ldr	r2, [pc, #136]	; 16288 <tcgetattr@plt+0x46a0>
   161fc:	ldr	r3, [r2]
   16200:	add	r3, r3, #1
   16204:	str	r3, [r2]
   16208:	str	r3, [r2, #24]
   1620c:	b	160f8 <tcgetattr@plt+0x4510>
   16210:	mov	r1, #0
   16214:	mov	r0, r4
   16218:	bl	15e90 <tcgetattr@plt+0x42a8>
   1621c:	b	16110 <tcgetattr@plt+0x4528>
   16220:	cmp	r4, #6
   16224:	bne	16110 <tcgetattr@plt+0x4528>
   16228:	ldr	r3, [pc, #80]	; 16280 <tcgetattr@plt+0x4698>
   1622c:	ldr	r3, [r3]
   16230:	cmp	r3, #1
   16234:	bgt	16110 <tcgetattr@plt+0x4528>
   16238:	mov	r2, #0
   1623c:	ldr	r3, [pc, #60]	; 16280 <tcgetattr@plt+0x4698>
   16240:	str	r2, [r3]
   16244:	mov	r1, #252	; 0xfc
   16248:	mov	r0, #34	; 0x22
   1624c:	bl	180b4 <tcgetattr@plt+0x64cc>
   16250:	mov	r1, #1
   16254:	mov	r0, #3
   16258:	bl	15f28 <tcgetattr@plt+0x4340>
   1625c:	mov	r1, #1
   16260:	mov	r0, r1
   16264:	bl	15f28 <tcgetattr@plt+0x4340>
   16268:	b	16110 <tcgetattr@plt+0x4528>
   1626c:	andeq	sl, r3, r0, ror #13
   16270:	andeq	r0, r2, r0, ror #21
   16274:	andeq	sl, r3, r8, lsl #16
   16278:	andeq	sl, r3, r4, lsl #14
   1627c:	andeq	r2, r3, r0, lsl #9
   16280:	strdeq	sl, [r3], -ip
   16284:	andeq	sl, r3, ip, lsl #18
   16288:			; <UNDEFINED> instruction: 0x0003a9b4
   1628c:	cmp	r1, #0
   16290:	beq	162dc <tcgetattr@plt+0x46f4>
   16294:	ldr	r3, [pc, #116]	; 16310 <tcgetattr@plt+0x4728>
   16298:	ldrb	r3, [r3, r0]
   1629c:	cmp	r3, #0
   162a0:	bne	162b4 <tcgetattr@plt+0x46cc>
   162a4:	ldr	r2, [pc, #104]	; 16314 <tcgetattr@plt+0x472c>
   162a8:	ldrb	r2, [r2, r0]
   162ac:	tst	r2, #1
   162b0:	bxeq	lr
   162b4:	ldr	r2, [pc, #88]	; 16314 <tcgetattr@plt+0x472c>
   162b8:	ldrb	r2, [r2, r0]
   162bc:	tst	r2, #2
   162c0:	bxeq	lr
   162c4:	bic	r2, r2, #2
   162c8:	ldr	r1, [pc, #68]	; 16314 <tcgetattr@plt+0x472c>
   162cc:	strb	r2, [r1, r0]
   162d0:	add	r3, r3, #1
   162d4:	ldr	r2, [pc, #52]	; 16310 <tcgetattr@plt+0x4728>
   162d8:	strb	r3, [r2, r0]
   162dc:	push	{r4, lr}
   162e0:	mov	r4, r0
   162e4:	mov	r1, r0
   162e8:	ldr	r0, [pc, #40]	; 16318 <tcgetattr@plt+0x4730>
   162ec:	bl	14490 <tcgetattr@plt+0x28a8>
   162f0:	ldr	r3, [pc, #36]	; 1631c <tcgetattr@plt+0x4734>
   162f4:	ldr	r3, [r3]
   162f8:	cmp	r3, #0
   162fc:	pople	{r4, pc}
   16300:	mov	r1, r4
   16304:	ldr	r0, [pc, #20]	; 16320 <tcgetattr@plt+0x4738>
   16308:	bl	14b48 <tcgetattr@plt+0x2f60>
   1630c:	pop	{r4, pc}
   16310:	andeq	sl, r3, r0, ror #21
   16314:	andeq	sl, r3, r4, lsl #14
   16318:	muleq	r3, ip, r4
   1631c:	andeq	sl, r3, r0, ror #13
   16320:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   16324:	push	{r4, r5, r6, lr}
   16328:	mov	r4, r0
   1632c:	ldr	r3, [pc, #688]	; 165e4 <tcgetattr@plt+0x49fc>
   16330:	ldr	r3, [r3]
   16334:	cmp	r3, #0
   16338:	ble	16348 <tcgetattr@plt+0x4760>
   1633c:	mov	r1, r0
   16340:	ldr	r0, [pc, #672]	; 165e8 <tcgetattr@plt+0x4a00>
   16344:	bl	14b48 <tcgetattr@plt+0x2f60>
   16348:	ldr	r3, [pc, #668]	; 165ec <tcgetattr@plt+0x4a04>
   1634c:	ldrb	r3, [r3, r4]
   16350:	cmp	r3, #0
   16354:	beq	163ac <tcgetattr@plt+0x47c4>
   16358:	sub	r2, r3, #1
   1635c:	uxtb	r2, r2
   16360:	ldr	r1, [pc, #644]	; 165ec <tcgetattr@plt+0x4a04>
   16364:	strb	r2, [r1, r4]
   16368:	cmp	r2, #0
   1636c:	beq	163ac <tcgetattr@plt+0x47c4>
   16370:	ldr	r2, [pc, #632]	; 165f0 <tcgetattr@plt+0x4a08>
   16374:	ldrb	r2, [r2, r4]
   16378:	tst	r2, #4
   1637c:	beq	164a8 <tcgetattr@plt+0x48c0>
   16380:	sub	r3, r3, #2
   16384:	uxtb	r3, r3
   16388:	mov	r2, r1
   1638c:	strb	r3, [r1, r4]
   16390:	cmp	r3, #0
   16394:	beq	163ac <tcgetattr@plt+0x47c4>
   16398:	ldr	r2, [pc, #592]	; 165f0 <tcgetattr@plt+0x4a08>
   1639c:	ldrb	r3, [r2, r4]
   163a0:	orr	r3, r3, #4
   163a4:	strb	r3, [r2, r4]
   163a8:	pop	{r4, r5, r6, pc}
   163ac:	ldr	r3, [pc, #572]	; 165f0 <tcgetattr@plt+0x4a08>
   163b0:	ldrb	r3, [r3, r4]
   163b4:	tst	r3, #8
   163b8:	bne	16544 <tcgetattr@plt+0x495c>
   163bc:	cmp	r4, #39	; 0x27
   163c0:	ldrls	pc, [pc, r4, lsl #2]
   163c4:	b	1648c <tcgetattr@plt+0x48a4>
   163c8:	andeq	r6, r1, r8, ror #8
   163cc:	andeq	r6, r1, r0, lsl #9
   163d0:	andeq	r6, r1, ip, lsl #9
   163d4:	muleq	r1, ip, r5
   163d8:	andeq	r6, r1, ip, lsl #9
   163dc:	andeq	r6, r1, ip, lsl #9
   163e0:			; <UNDEFINED> instruction: 0x000164bc
   163e4:	andeq	r6, r1, ip, lsl #9
   163e8:	andeq	r6, r1, ip, lsl #9
   163ec:	andeq	r6, r1, ip, lsl #9
   163f0:	andeq	r6, r1, ip, lsl #9
   163f4:	andeq	r6, r1, ip, lsl #9
   163f8:	andeq	r6, r1, ip, lsl #9
   163fc:	andeq	r6, r1, ip, lsl #9
   16400:	andeq	r6, r1, ip, lsl #9
   16404:	andeq	r6, r1, ip, lsl #9
   16408:	andeq	r6, r1, ip, lsl #9
   1640c:	andeq	r6, r1, ip, lsl #9
   16410:	andeq	r6, r1, ip, lsl #9
   16414:	andeq	r6, r1, ip, lsl #9
   16418:	andeq	r6, r1, ip, lsl #9
   1641c:	andeq	r6, r1, ip, lsl #9
   16420:	andeq	r6, r1, ip, lsl #9
   16424:	andeq	r6, r1, ip, lsl #9
   16428:	muleq	r1, ip, r5
   1642c:	andeq	r6, r1, ip, lsl #9
   16430:	andeq	r6, r1, ip, lsl #9
   16434:	andeq	r6, r1, ip, lsl #9
   16438:	andeq	r6, r1, ip, lsl #9
   1643c:	andeq	r6, r1, ip, lsl #9
   16440:	andeq	r6, r1, ip, lsl #9
   16444:	muleq	r1, ip, r5
   16448:	muleq	r1, ip, r5
   1644c:	andeq	r6, r1, ip, lsl #10
   16450:	andeq	r6, r1, r0, lsr r5
   16454:	muleq	r1, ip, r5
   16458:	muleq	r1, ip, r5
   1645c:	andeq	r6, r1, ip, lsl #9
   16460:	andeq	r6, r1, ip, lsl #9
   16464:	muleq	r1, ip, r5
   16468:	bl	13314 <tcgetattr@plt+0x172c>
   1646c:	mov	r0, #1
   16470:	bl	13188 <tcgetattr@plt+0x15a0>
   16474:	bl	133dc <tcgetattr@plt+0x17f4>
   16478:	mov	r5, #0
   1647c:	b	165a0 <tcgetattr@plt+0x49b8>
   16480:	mov	r2, #0
   16484:	ldr	r3, [pc, #360]	; 165f4 <tcgetattr@plt+0x4a0c>
   16488:	str	r2, [r3, #24]
   1648c:	ldr	r2, [pc, #344]	; 165ec <tcgetattr@plt+0x4a04>
   16490:	ldrb	r3, [r2, r4]
   16494:	add	r3, r3, #1
   16498:	strb	r3, [r2, r4]
   1649c:	mov	r1, #0
   164a0:	mov	r0, r4
   164a4:	bl	15e90 <tcgetattr@plt+0x42a8>
   164a8:	ldr	r2, [pc, #320]	; 165f0 <tcgetattr@plt+0x4a08>
   164ac:	ldrb	r3, [r2, r4]
   164b0:	orr	r3, r3, #4
   164b4:	strb	r3, [r2, r4]
   164b8:	pop	{r4, r5, r6, pc}
   164bc:	ldr	r3, [pc, #308]	; 165f8 <tcgetattr@plt+0x4a10>
   164c0:	ldr	r3, [r3]
   164c4:	cmp	r3, #0
   164c8:	ble	164e0 <tcgetattr@plt+0x48f8>
   164cc:	cmp	r3, #2
   164d0:	moveq	r2, #3
   164d4:	ldreq	r3, [pc, #284]	; 165f8 <tcgetattr@plt+0x4a10>
   164d8:	streq	r2, [r3]
   164dc:	pop	{r4, r5, r6, pc}
   164e0:	mov	r4, #1
   164e4:	ldr	r3, [pc, #268]	; 165f8 <tcgetattr@plt+0x4a10>
   164e8:	str	r4, [r3]
   164ec:	mov	r2, #0
   164f0:	mov	r1, #251	; 0xfb
   164f4:	mov	r0, #34	; 0x22
   164f8:	bl	180b4 <tcgetattr@plt+0x64cc>
   164fc:	mov	r1, r4
   16500:	mov	r0, #3
   16504:	bl	1628c <tcgetattr@plt+0x46a4>
   16508:	pop	{r4, r5, r6, pc}
   1650c:	ldr	r3, [pc, #232]	; 165fc <tcgetattr@plt+0x4a14>
   16510:	ldrb	r2, [r3, #120]	; 0x78
   16514:	orr	r2, r2, #3
   16518:	strb	r2, [r3, #120]	; 0x78
   1651c:	ldrb	r2, [r3, #128]	; 0x80
   16520:	orr	r2, r2, #3
   16524:	strb	r2, [r3, #128]	; 0x80
   16528:	mov	r5, #0
   1652c:	b	165a0 <tcgetattr@plt+0x49b8>
   16530:	mov	r2, #4
   16534:	ldr	r3, [pc, #188]	; 165f8 <tcgetattr@plt+0x4a10>
   16538:	str	r2, [r3]
   1653c:	ldr	r5, [pc, #188]	; 16600 <tcgetattr@plt+0x4a18>
   16540:	b	165a0 <tcgetattr@plt+0x49b8>
   16544:	cmp	r4, #33	; 0x21
   16548:	beq	165dc <tcgetattr@plt+0x49f4>
   1654c:	cmp	r4, #34	; 0x22
   16550:	beq	1657c <tcgetattr@plt+0x4994>
   16554:	cmp	r4, #1
   16558:	movne	r5, #0
   1655c:	bne	165bc <tcgetattr@plt+0x49d4>
   16560:	mov	r2, #0
   16564:	ldr	r3, [pc, #136]	; 165f4 <tcgetattr@plt+0x4a0c>
   16568:	str	r2, [r3, #24]
   1656c:	mov	r1, #1
   16570:	mov	r0, r1
   16574:	bl	15e90 <tcgetattr@plt+0x42a8>
   16578:	b	16398 <tcgetattr@plt+0x47b0>
   1657c:	mov	r1, #4
   16580:	ldr	r2, [pc, #112]	; 165f8 <tcgetattr@plt+0x4a10>
   16584:	str	r1, [r2]
   16588:	ldr	r5, [pc, #112]	; 16600 <tcgetattr@plt+0x4a18>
   1658c:	orr	r3, r3, #4
   16590:	ldr	r2, [pc, #88]	; 165f0 <tcgetattr@plt+0x4a08>
   16594:	strb	r3, [r2, r4]
   16598:	b	165d4 <tcgetattr@plt+0x49ec>
   1659c:	mov	r5, #0
   165a0:	ldr	r2, [pc, #72]	; 165f0 <tcgetattr@plt+0x4a08>
   165a4:	ldrb	r3, [r2, r4]
   165a8:	orr	r3, r3, #8
   165ac:	strb	r3, [r2, r4]
   165b0:	mov	r1, #0
   165b4:	mov	r0, r4
   165b8:	bl	15de8 <tcgetattr@plt+0x4200>
   165bc:	ldr	r2, [pc, #44]	; 165f0 <tcgetattr@plt+0x4a08>
   165c0:	ldrb	r3, [r2, r4]
   165c4:	orr	r3, r3, #4
   165c8:	strb	r3, [r2, r4]
   165cc:	cmp	r5, #0
   165d0:	popeq	{r4, r5, r6, pc}
   165d4:	blx	r5
   165d8:	pop	{r4, r5, r6, pc}
   165dc:	ldr	r5, [pc, #32]	; 16604 <tcgetattr@plt+0x4a1c>
   165e0:	b	1658c <tcgetattr@plt+0x49a4>
   165e4:	andeq	sl, r3, r0, ror #13
   165e8:	andeq	r0, r2, r0, lsl #22
   165ec:	andeq	sl, r3, r8, lsl #16
   165f0:	andeq	sl, r3, r4, lsl #14
   165f4:	andeq	r2, r3, r0, lsl #9
   165f8:	strdeq	sl, [r3], -ip
   165fc:	andeq	sl, r3, ip, lsl #18
   16600:	ldrdeq	r5, [r1], -r0
   16604:	andeq	r7, r1, r8, lsl #20
   16608:	push	{r4, r5, r6, lr}
   1660c:	mov	r4, r0
   16610:	ldr	r3, [pc, #488]	; 16800 <tcgetattr@plt+0x4c18>
   16614:	ldr	r3, [r3]
   16618:	cmp	r3, #0
   1661c:	ble	1662c <tcgetattr@plt+0x4a44>
   16620:	mov	r1, r0
   16624:	ldr	r0, [pc, #472]	; 16804 <tcgetattr@plt+0x4c1c>
   16628:	bl	14b48 <tcgetattr@plt+0x2f60>
   1662c:	ldr	r3, [pc, #468]	; 16808 <tcgetattr@plt+0x4c20>
   16630:	ldrb	r3, [r3, r4]
   16634:	cmp	r3, #0
   16638:	beq	1668c <tcgetattr@plt+0x4aa4>
   1663c:	sub	r2, r3, #1
   16640:	uxtb	r2, r2
   16644:	ldr	r1, [pc, #444]	; 16808 <tcgetattr@plt+0x4c20>
   16648:	strb	r2, [r1, r4]
   1664c:	cmp	r2, #0
   16650:	beq	1668c <tcgetattr@plt+0x4aa4>
   16654:	ldr	r2, [pc, #432]	; 1680c <tcgetattr@plt+0x4c24>
   16658:	ldrb	r2, [r2, r4]
   1665c:	tst	r2, #1
   16660:	beq	16678 <tcgetattr@plt+0x4a90>
   16664:	sub	r3, r3, #2
   16668:	uxtb	r3, r3
   1666c:	strb	r3, [r1, r4]
   16670:	cmp	r3, #0
   16674:	beq	1668c <tcgetattr@plt+0x4aa4>
   16678:	ldr	r2, [pc, #396]	; 1680c <tcgetattr@plt+0x4c24>
   1667c:	ldrb	r3, [r2, r4]
   16680:	orr	r3, r3, #1
   16684:	strb	r3, [r2, r4]
   16688:	pop	{r4, r5, r6, pc}
   1668c:	ldr	r3, [pc, #376]	; 1680c <tcgetattr@plt+0x4c24>
   16690:	ldrb	r3, [r3, r4]
   16694:	tst	r3, #2
   16698:	bne	16678 <tcgetattr@plt+0x4a90>
   1669c:	cmp	r4, #18
   166a0:	ldrls	pc, [pc, r4, lsl #2]
   166a4:	b	167d4 <tcgetattr@plt+0x4bec>
   166a8:	andeq	r6, r1, r8, lsl r7
   166ac:	strdeq	r6, [r1], -r4
   166b0:	ldrdeq	r6, [r1], -r4
   166b4:	andeq	r6, r1, r8, asr #14
   166b8:	ldrdeq	r6, [r1], -r4
   166bc:	andeq	r6, r1, r8, lsr #14
   166c0:	andeq	r6, r1, ip, ror r7
   166c4:	ldrdeq	r6, [r1], -r4
   166c8:	ldrdeq	r6, [r1], -r4
   166cc:	ldrdeq	r6, [r1], -r4
   166d0:	ldrdeq	r6, [r1], -r4
   166d4:	ldrdeq	r6, [r1], -r4
   166d8:	ldrdeq	r6, [r1], -r4
   166dc:	ldrdeq	r6, [r1], -r4
   166e0:	ldrdeq	r6, [r1], -r4
   166e4:	ldrdeq	r6, [r1], -r4
   166e8:	ldrdeq	r6, [r1], -r4
   166ec:	ldrdeq	r6, [r1], -r4
   166f0:	muleq	r1, ip, r7
   166f4:	ldr	r3, [pc, #276]	; 16810 <tcgetattr@plt+0x4c28>
   166f8:	ldr	r3, [r3]
   166fc:	cmp	r3, #0
   16700:	bne	16728 <tcgetattr@plt+0x4b40>
   16704:	bl	13314 <tcgetattr@plt+0x172c>
   16708:	mov	r0, #1
   1670c:	bl	1314c <tcgetattr@plt+0x1564>
   16710:	bl	133dc <tcgetattr@plt+0x17f4>
   16714:	b	16728 <tcgetattr@plt+0x4b40>
   16718:	bl	13314 <tcgetattr@plt+0x172c>
   1671c:	mov	r0, #1
   16720:	bl	131a8 <tcgetattr@plt+0x15c0>
   16724:	bl	133dc <tcgetattr@plt+0x17f4>
   16728:	ldr	r2, [pc, #220]	; 1680c <tcgetattr@plt+0x4c24>
   1672c:	ldrb	r3, [r2, r4]
   16730:	orr	r3, r3, #2
   16734:	strb	r3, [r2, r4]
   16738:	mov	r1, #0
   1673c:	mov	r0, r4
   16740:	bl	15f28 <tcgetattr@plt+0x4340>
   16744:	b	16678 <tcgetattr@plt+0x4a90>
   16748:	ldr	r3, [pc, #192]	; 16810 <tcgetattr@plt+0x4c28>
   1674c:	ldr	r3, [r3]
   16750:	cmp	r3, #1
   16754:	bne	16728 <tcgetattr@plt+0x4b40>
   16758:	mov	r2, #0
   1675c:	mov	r1, #252	; 0xfc
   16760:	mov	r0, #34	; 0x22
   16764:	bl	180b4 <tcgetattr@plt+0x64cc>
   16768:	ldr	r3, [pc, #164]	; 16814 <tcgetattr@plt+0x4c2c>
   1676c:	ldr	r3, [r3]
   16770:	clz	r3, r3
   16774:	lsr	r3, r3, #5
   16778:	b	167d8 <tcgetattr@plt+0x4bf0>
   1677c:	mov	r1, #0
   16780:	mov	r0, #6
   16784:	bl	15f28 <tcgetattr@plt+0x4340>
   16788:	ldr	r2, [pc, #124]	; 1680c <tcgetattr@plt+0x4c24>
   1678c:	ldrb	r3, [r2, #6]
   16790:	bic	r3, r3, #3
   16794:	strb	r3, [r2, #6]
   16798:	pop	{r4, r5, r6, pc}
   1679c:	ldr	r5, [pc, #104]	; 1680c <tcgetattr@plt+0x4c24>
   167a0:	ldrb	r3, [r5, #18]
   167a4:	orr	r3, r3, #2
   167a8:	strb	r3, [r5, #18]
   167ac:	mov	r1, #0
   167b0:	mov	r0, #18
   167b4:	bl	15f28 <tcgetattr@plt+0x4340>
   167b8:	ldrb	r3, [r5, #18]
   167bc:	orr	r3, r3, #1
   167c0:	strb	r3, [r5, #18]
   167c4:	bl	14368 <tcgetattr@plt+0x2780>
   167c8:	mov	r0, #1
   167cc:	bl	13024 <tcgetattr@plt+0x143c>
   167d0:	b	167e0 <tcgetattr@plt+0x4bf8>
   167d4:	mov	r3, #0
   167d8:	cmp	r3, #0
   167dc:	bne	16728 <tcgetattr@plt+0x4b40>
   167e0:	ldr	r2, [pc, #32]	; 16808 <tcgetattr@plt+0x4c20>
   167e4:	ldrb	r3, [r2, r4]
   167e8:	add	r3, r3, #1
   167ec:	strb	r3, [r2, r4]
   167f0:	mov	r1, #0
   167f4:	mov	r0, r4
   167f8:	bl	1628c <tcgetattr@plt+0x46a4>
   167fc:	b	16678 <tcgetattr@plt+0x4a90>
   16800:	andeq	sl, r3, r0, ror #13
   16804:	andeq	r0, r2, r0, lsl fp
   16808:	andeq	sl, r3, r0, ror #21
   1680c:	andeq	sl, r3, r4, lsl #14
   16810:	strdeq	sl, [r3], -ip
   16814:			; <UNDEFINED> instruction: 0x0003a9b0
   16818:	push	{r4, lr}
   1681c:	mov	r4, r0
   16820:	ldr	r3, [pc, #308]	; 1695c <tcgetattr@plt+0x4d74>
   16824:	ldr	r3, [r3]
   16828:	cmp	r3, #0
   1682c:	ble	1683c <tcgetattr@plt+0x4c54>
   16830:	mov	r1, r0
   16834:	ldr	r0, [pc, #292]	; 16960 <tcgetattr@plt+0x4d78>
   16838:	bl	14b48 <tcgetattr@plt+0x2f60>
   1683c:	ldr	r3, [pc, #288]	; 16964 <tcgetattr@plt+0x4d7c>
   16840:	ldrb	r3, [r3, r4]
   16844:	cmp	r3, #0
   16848:	beq	16888 <tcgetattr@plt+0x4ca0>
   1684c:	sub	r2, r3, #1
   16850:	uxtb	r2, r2
   16854:	ldr	r1, [pc, #264]	; 16964 <tcgetattr@plt+0x4d7c>
   16858:	strb	r2, [r1, r4]
   1685c:	cmp	r2, #0
   16860:	beq	16888 <tcgetattr@plt+0x4ca0>
   16864:	ldr	r2, [pc, #252]	; 16968 <tcgetattr@plt+0x4d80>
   16868:	ldrb	r2, [r2, r4]
   1686c:	tst	r2, #1
   16870:	bne	168c8 <tcgetattr@plt+0x4ce0>
   16874:	sub	r3, r3, #2
   16878:	uxtb	r3, r3
   1687c:	strb	r3, [r1, r4]
   16880:	cmp	r3, #0
   16884:	bne	168c8 <tcgetattr@plt+0x4ce0>
   16888:	ldr	r3, [pc, #216]	; 16968 <tcgetattr@plt+0x4d80>
   1688c:	ldrb	r3, [r3, r4]
   16890:	tst	r3, #2
   16894:	beq	168c8 <tcgetattr@plt+0x4ce0>
   16898:	cmp	r4, #1
   1689c:	beq	168f0 <tcgetattr@plt+0x4d08>
   168a0:	cmp	r4, #3
   168a4:	beq	16918 <tcgetattr@plt+0x4d30>
   168a8:	cmp	r4, #0
   168ac:	beq	168dc <tcgetattr@plt+0x4cf4>
   168b0:	ldr	r2, [pc, #176]	; 16968 <tcgetattr@plt+0x4d80>
   168b4:	ldrb	r3, [r2, r4]
   168b8:	bic	r1, r3, #2
   168bc:	strb	r1, [r2, r4]
   168c0:	tst	r3, #1
   168c4:	bne	1694c <tcgetattr@plt+0x4d64>
   168c8:	ldr	r2, [pc, #152]	; 16968 <tcgetattr@plt+0x4d80>
   168cc:	ldrb	r3, [r2, r4]
   168d0:	bic	r3, r3, #1
   168d4:	strb	r3, [r2, r4]
   168d8:	pop	{r4, pc}
   168dc:	bl	13314 <tcgetattr@plt+0x172c>
   168e0:	mov	r0, #0
   168e4:	bl	131a8 <tcgetattr@plt+0x15c0>
   168e8:	bl	133dc <tcgetattr@plt+0x17f4>
   168ec:	b	168b0 <tcgetattr@plt+0x4cc8>
   168f0:	ldr	r3, [pc, #116]	; 1696c <tcgetattr@plt+0x4d84>
   168f4:	ldr	r3, [r3]
   168f8:	cmp	r3, #4
   168fc:	cmpne	r3, #1
   16900:	beq	168b0 <tcgetattr@plt+0x4cc8>
   16904:	bl	13314 <tcgetattr@plt+0x172c>
   16908:	mov	r0, #0
   1690c:	bl	1314c <tcgetattr@plt+0x1564>
   16910:	bl	133dc <tcgetattr@plt+0x17f4>
   16914:	b	168b0 <tcgetattr@plt+0x4cc8>
   16918:	ldr	r3, [pc, #76]	; 1696c <tcgetattr@plt+0x4d84>
   1691c:	ldr	r3, [r3]
   16920:	bic	r3, r3, #2
   16924:	cmp	r3, #1
   16928:	bne	168b0 <tcgetattr@plt+0x4cc8>
   1692c:	mov	r2, #1
   16930:	ldr	r3, [pc, #52]	; 1696c <tcgetattr@plt+0x4d84>
   16934:	str	r2, [r3]
   16938:	mov	r2, #0
   1693c:	mov	r1, #251	; 0xfb
   16940:	mov	r0, #34	; 0x22
   16944:	bl	180b4 <tcgetattr@plt+0x64cc>
   16948:	b	168b0 <tcgetattr@plt+0x4cc8>
   1694c:	mov	r1, #0
   16950:	mov	r0, r4
   16954:	bl	1628c <tcgetattr@plt+0x46a4>
   16958:	b	168c8 <tcgetattr@plt+0x4ce0>
   1695c:	andeq	sl, r3, r0, ror #13
   16960:	andeq	r0, r2, ip, lsl fp
   16964:	andeq	sl, r3, r0, ror #21
   16968:	andeq	sl, r3, r4, lsl #14
   1696c:	strdeq	sl, [r3], -ip
   16970:	push	{r4, r5, lr}
   16974:	sub	sp, sp, #268	; 0x10c
   16978:	bl	14368 <tcgetattr@plt+0x2780>
   1697c:	mvn	r3, #0
   16980:	strb	r3, [sp, #8]
   16984:	mvn	r3, #5
   16988:	strb	r3, [sp, #9]
   1698c:	mov	r3, #5
   16990:	strb	r3, [sp, #10]
   16994:	mov	r3, #0
   16998:	strb	r3, [sp, #11]
   1699c:	ldr	r0, [pc, #1000]	; 16d8c <tcgetattr@plt+0x51a4>
   169a0:	add	r2, sp, #12
   169a4:	mvn	lr, #4
   169a8:	mvn	r4, #2
   169ac:	b	16a18 <tcgetattr@plt+0x4e30>
   169b0:	mov	r2, ip
   169b4:	tst	r1, #8
   169b8:	beq	16a08 <tcgetattr@plt+0x4e20>
   169bc:	add	r1, sp, #264	; 0x108
   169c0:	cmp	r2, r1
   169c4:	bcs	16d40 <tcgetattr@plt+0x5158>
   169c8:	mov	r1, r2
   169cc:	strb	r4, [r1], #1
   169d0:	add	ip, sp, #264	; 0x108
   169d4:	cmp	ip, r1
   169d8:	bls	16d40 <tcgetattr@plt+0x5158>
   169dc:	add	r1, r2, #2
   169e0:	strb	r3, [r2, #1]
   169e4:	cmp	r3, #255	; 0xff
   169e8:	cmpne	r3, #240	; 0xf0
   169ec:	bne	16a04 <tcgetattr@plt+0x4e1c>
   169f0:	cmp	r1, ip
   169f4:	bcs	16d40 <tcgetattr@plt+0x5158>
   169f8:	strb	r3, [r2, #2]
   169fc:	add	r2, r2, #3
   16a00:	b	16a08 <tcgetattr@plt+0x4e20>
   16a04:	mov	r2, r1
   16a08:	add	r3, r3, #1
   16a0c:	uxtb	r3, r3
   16a10:	cmp	r3, #40	; 0x28
   16a14:	beq	16a6c <tcgetattr@plt+0x4e84>
   16a18:	ldrb	r1, [r0, #1]!
   16a1c:	tst	r1, #2
   16a20:	beq	169b4 <tcgetattr@plt+0x4dcc>
   16a24:	add	ip, sp, #264	; 0x108
   16a28:	cmp	r2, ip
   16a2c:	bcs	16d40 <tcgetattr@plt+0x5158>
   16a30:	mov	ip, r2
   16a34:	strb	lr, [ip], #1
   16a38:	add	r5, sp, #264	; 0x108
   16a3c:	cmp	r5, ip
   16a40:	bls	16d40 <tcgetattr@plt+0x5158>
   16a44:	add	ip, r2, #2
   16a48:	strb	r3, [r2, #1]
   16a4c:	cmp	r3, #255	; 0xff
   16a50:	cmpne	r3, #240	; 0xf0
   16a54:	bne	169b0 <tcgetattr@plt+0x4dc8>
   16a58:	cmp	ip, r5
   16a5c:	bcs	16d40 <tcgetattr@plt+0x5158>
   16a60:	strb	r3, [r2, #2]
   16a64:	add	r2, r2, #3
   16a68:	b	169b4 <tcgetattr@plt+0x4dcc>
   16a6c:	ldr	r3, [pc, #796]	; 16d90 <tcgetattr@plt+0x51a8>
   16a70:	ldrb	r3, [r3, #33]	; 0x21
   16a74:	tst	r3, #8
   16a78:	beq	16b60 <tcgetattr@plt+0x4f78>
   16a7c:	add	r3, sp, #264	; 0x108
   16a80:	cmp	r2, r3
   16a84:	bcs	16d40 <tcgetattr@plt+0x5158>
   16a88:	mov	r3, r2
   16a8c:	mvn	r1, #5
   16a90:	strb	r1, [r3], #1
   16a94:	add	r1, sp, #264	; 0x108
   16a98:	cmp	r1, r3
   16a9c:	bls	16d40 <tcgetattr@plt+0x5158>
   16aa0:	add	r3, r2, #2
   16aa4:	mov	r1, #33	; 0x21
   16aa8:	strb	r1, [r2, #1]
   16aac:	ldr	r1, [pc, #736]	; 16d94 <tcgetattr@plt+0x51ac>
   16ab0:	ldr	r1, [r1]
   16ab4:	cmp	r1, #0
   16ab8:	beq	16c7c <tcgetattr@plt+0x5094>
   16abc:	add	r1, sp, #264	; 0x108
   16ac0:	cmp	r3, r1
   16ac4:	bcs	16d40 <tcgetattr@plt+0x5158>
   16ac8:	add	r3, r2, #3
   16acc:	mov	r1, #1
   16ad0:	strb	r1, [r2, #2]
   16ad4:	add	r2, sp, #264	; 0x108
   16ad8:	cmp	r3, r2
   16adc:	bcs	16d40 <tcgetattr@plt+0x5158>
   16ae0:	add	r2, r3, #1
   16ae4:	mvn	r1, #15
   16ae8:	strb	r1, [r3]
   16aec:	ldr	r1, [pc, #676]	; 16d98 <tcgetattr@plt+0x51b0>
   16af0:	ldr	r1, [r1]
   16af4:	cmp	r1, #0
   16af8:	blt	16b60 <tcgetattr@plt+0x4f78>
   16afc:	add	r0, sp, #264	; 0x108
   16b00:	cmp	r2, r0
   16b04:	bcs	16d40 <tcgetattr@plt+0x5158>
   16b08:	mvn	r2, #5
   16b0c:	strb	r2, [r3, #1]
   16b10:	add	r2, r3, #2
   16b14:	cmp	r0, r2
   16b18:	bls	16d40 <tcgetattr@plt+0x5158>
   16b1c:	add	r2, r3, #3
   16b20:	mov	r0, #33	; 0x21
   16b24:	strb	r0, [r3, #2]
   16b28:	cmp	r1, #0
   16b2c:	beq	16c98 <tcgetattr@plt+0x50b0>
   16b30:	add	r1, sp, #264	; 0x108
   16b34:	cmp	r2, r1
   16b38:	bcs	16d40 <tcgetattr@plt+0x5158>
   16b3c:	add	r1, r3, #4
   16b40:	mov	r2, #2
   16b44:	strb	r2, [r3, #3]
   16b48:	add	r3, sp, #264	; 0x108
   16b4c:	cmp	r1, r3
   16b50:	bcs	16d40 <tcgetattr@plt+0x5158>
   16b54:	add	r2, r1, #1
   16b58:	mvn	r3, #15
   16b5c:	strb	r3, [r1]
   16b60:	ldr	r3, [pc, #552]	; 16d90 <tcgetattr@plt+0x51a8>
   16b64:	ldrb	r3, [r3, #34]	; 0x22
   16b68:	tst	r3, #8
   16b6c:	beq	16d1c <tcgetattr@plt+0x5134>
   16b70:	add	r3, sp, #264	; 0x108
   16b74:	cmp	r2, r3
   16b78:	bcs	16d40 <tcgetattr@plt+0x5158>
   16b7c:	mov	r3, r2
   16b80:	mvn	r1, #5
   16b84:	strb	r1, [r3], #1
   16b88:	add	r1, sp, #264	; 0x108
   16b8c:	cmp	r1, r3
   16b90:	bls	16d40 <tcgetattr@plt+0x5158>
   16b94:	mov	r3, #34	; 0x22
   16b98:	strb	r3, [r2, #1]
   16b9c:	add	r3, r2, #2
   16ba0:	cmp	r1, r3
   16ba4:	bls	16d40 <tcgetattr@plt+0x5158>
   16ba8:	mov	r3, #1
   16bac:	strb	r3, [r2, #2]
   16bb0:	add	r3, r2, #3
   16bb4:	cmp	r1, r3
   16bb8:	bls	16d40 <tcgetattr@plt+0x5158>
   16bbc:	add	r3, r2, #4
   16bc0:	ldr	r1, [pc, #468]	; 16d9c <tcgetattr@plt+0x51b4>
   16bc4:	ldr	r1, [r1]
   16bc8:	uxtb	r0, r1
   16bcc:	strb	r0, [r2, #3]
   16bd0:	cmp	r1, #255	; 0xff
   16bd4:	cmpne	r1, #240	; 0xf0
   16bd8:	bne	16bf0 <tcgetattr@plt+0x5008>
   16bdc:	add	r1, sp, #264	; 0x108
   16be0:	cmp	r3, r1
   16be4:	bcs	16d40 <tcgetattr@plt+0x5158>
   16be8:	add	r3, r2, #5
   16bec:	strb	r0, [r2, #4]
   16bf0:	add	r2, sp, #264	; 0x108
   16bf4:	cmp	r3, r2
   16bf8:	bcs	16d40 <tcgetattr@plt+0x5158>
   16bfc:	mov	r2, r3
   16c00:	mvn	r1, #15
   16c04:	strb	r1, [r2], #1
   16c08:	add	r1, sp, #264	; 0x108
   16c0c:	cmp	r1, r2
   16c10:	bls	16d40 <tcgetattr@plt+0x5158>
   16c14:	mvn	r2, #5
   16c18:	strb	r2, [r3, #1]
   16c1c:	add	r2, r3, #2
   16c20:	cmp	r1, r2
   16c24:	bls	16d40 <tcgetattr@plt+0x5158>
   16c28:	mov	r2, #34	; 0x22
   16c2c:	strb	r2, [r3, #2]
   16c30:	add	r2, r3, #3
   16c34:	cmp	r1, r2
   16c38:	bls	16d40 <tcgetattr@plt+0x5158>
   16c3c:	add	r4, r3, #4
   16c40:	mov	r2, #3
   16c44:	strb	r2, [r3, #3]
   16c48:	mov	r0, #0
   16c4c:	bl	18690 <tcgetattr@plt+0x6aa8>
   16c50:	bl	1862c <tcgetattr@plt+0x6a44>
   16c54:	add	r0, sp, #4
   16c58:	bl	186f4 <tcgetattr@plt+0x6b0c>
   16c5c:	ldr	r3, [sp, #4]
   16c60:	add	r0, r3, r0
   16c64:	cmp	r3, r0
   16c68:	bcs	16d04 <tcgetattr@plt+0x511c>
   16c6c:	add	r2, sp, #264	; 0x108
   16c70:	cmp	r4, r2
   16c74:	bcc	16cd0 <tcgetattr@plt+0x50e8>
   16c78:	b	16d40 <tcgetattr@plt+0x5158>
   16c7c:	add	r1, sp, #264	; 0x108
   16c80:	cmp	r3, r1
   16c84:	bcs	16d40 <tcgetattr@plt+0x5158>
   16c88:	add	r3, r2, #3
   16c8c:	mov	r1, #0
   16c90:	strb	r1, [r2, #2]
   16c94:	b	16ad4 <tcgetattr@plt+0x4eec>
   16c98:	add	r1, sp, #264	; 0x108
   16c9c:	cmp	r2, r1
   16ca0:	bcs	16d40 <tcgetattr@plt+0x5158>
   16ca4:	add	r1, r3, #4
   16ca8:	mov	r2, #3
   16cac:	strb	r2, [r3, #3]
   16cb0:	b	16b48 <tcgetattr@plt+0x4f60>
   16cb4:	mov	r4, r1
   16cb8:	str	r3, [sp, #4]
   16cbc:	cmp	r0, r3
   16cc0:	beq	16d04 <tcgetattr@plt+0x511c>
   16cc4:	add	r2, sp, #264	; 0x108
   16cc8:	cmp	r4, r2
   16ccc:	bcs	16d40 <tcgetattr@plt+0x5158>
   16cd0:	add	r1, r4, #1
   16cd4:	ldrb	r2, [r3]
   16cd8:	strb	r2, [r4]
   16cdc:	ldrb	r2, [r3], #1
   16ce0:	cmp	r2, #255	; 0xff
   16ce4:	cmpne	r2, #240	; 0xf0
   16ce8:	bne	16cb4 <tcgetattr@plt+0x50cc>
   16cec:	add	ip, sp, #264	; 0x108
   16cf0:	cmp	r1, ip
   16cf4:	bcs	16d40 <tcgetattr@plt+0x5158>
   16cf8:	strb	r2, [r4, #1]
   16cfc:	add	r4, r4, #2
   16d00:	b	16cb8 <tcgetattr@plt+0x50d0>
   16d04:	add	r3, sp, #264	; 0x108
   16d08:	cmp	r4, r3
   16d0c:	bcs	16d40 <tcgetattr@plt+0x5158>
   16d10:	add	r2, r4, #1
   16d14:	mvn	r3, #15
   16d18:	strb	r3, [r4]
   16d1c:	add	r3, sp, #264	; 0x108
   16d20:	cmp	r2, r3
   16d24:	bcs	16d40 <tcgetattr@plt+0x5158>
   16d28:	mov	r3, r2
   16d2c:	mvn	r1, #0
   16d30:	strb	r1, [r3], #1
   16d34:	add	r1, sp, #264	; 0x108
   16d38:	cmp	r1, r3
   16d3c:	bhi	16d48 <tcgetattr@plt+0x5160>
   16d40:	add	sp, sp, #268	; 0x10c
   16d44:	pop	{r4, r5, pc}
   16d48:	mvn	r3, #15
   16d4c:	strb	r3, [r2, #1]
   16d50:	add	r2, r2, #2
   16d54:	add	r0, sp, #8
   16d58:	sub	r4, r2, r0
   16d5c:	mov	r1, r4
   16d60:	bl	14520 <tcgetattr@plt+0x2938>
   16d64:	bl	14368 <tcgetattr@plt+0x2780>
   16d68:	ldr	r3, [pc, #48]	; 16da0 <tcgetattr@plt+0x51b8>
   16d6c:	ldr	r3, [r3]
   16d70:	cmp	r3, #0
   16d74:	ble	16d40 <tcgetattr@plt+0x5158>
   16d78:	sub	r2, r4, #2
   16d7c:	add	r1, sp, #10
   16d80:	mov	r0, #62	; 0x3e
   16d84:	bl	14bac <tcgetattr@plt+0x2fc4>
   16d88:	b	16d40 <tcgetattr@plt+0x5158>
   16d8c:	andeq	sl, r3, r3, lsl #14
   16d90:	andeq	sl, r3, r4, lsl #14
   16d94:	ldrdeq	sl, [r3], -r4
   16d98:	andeq	sl, r3, r4, ror #23
   16d9c:	andeq	sl, r3, r8, lsl #18
   16da0:	andeq	sl, r3, r0, ror #13
   16da4:	push	{r4, r5, r6, r7, r8, r9, lr}
   16da8:	sub	sp, sp, #12
   16dac:	ldr	r3, [pc, #1752]	; 1748c <tcgetattr@plt+0x58a4>
   16db0:	ldr	r3, [r3]
   16db4:	cmp	r3, #0
   16db8:	ble	16dd8 <tcgetattr@plt+0x51f0>
   16dbc:	ldr	r3, [pc, #1740]	; 17490 <tcgetattr@plt+0x58a8>
   16dc0:	ldr	r1, [r3, #36]	; 0x24
   16dc4:	ldr	r2, [r3, #40]	; 0x28
   16dc8:	sub	r2, r2, r1
   16dcc:	add	r2, r2, #2
   16dd0:	mov	r0, #60	; 0x3c
   16dd4:	bl	14bac <tcgetattr@plt+0x2fc4>
   16dd8:	ldr	r2, [pc, #1712]	; 17490 <tcgetattr@plt+0x58a8>
   16ddc:	ldr	r3, [r2, #36]	; 0x24
   16de0:	add	r1, r3, #1
   16de4:	str	r1, [r2, #36]	; 0x24
   16de8:	ldrb	r0, [r3]
   16dec:	sub	r2, r0, #5
   16df0:	cmp	r2, #34	; 0x22
   16df4:	ldrls	pc, [pc, r2, lsl #2]
   16df8:	b	1728c <tcgetattr@plt+0x56a4>
   16dfc:	andeq	r7, r1, r4, lsr #4
   16e00:	andeq	r7, r1, ip, lsl #5
   16e04:	andeq	r7, r1, ip, lsl #5
   16e08:	andeq	r7, r1, ip, lsl #5
   16e0c:	andeq	r7, r1, ip, lsl #5
   16e10:	andeq	r7, r1, ip, lsl #5
   16e14:	andeq	r7, r1, ip, lsl #5
   16e18:	andeq	r7, r1, ip, lsl #5
   16e1c:	andeq	r7, r1, ip, lsl #5
   16e20:	andeq	r7, r1, ip, lsl #5
   16e24:	andeq	r7, r1, ip, lsl #5
   16e28:	andeq	r7, r1, ip, lsl #5
   16e2c:	andeq	r7, r1, ip, lsl #5
   16e30:	andeq	r7, r1, ip, lsl #5
   16e34:	andeq	r7, r1, ip, lsl #5
   16e38:	andeq	r7, r1, ip, lsl #5
   16e3c:	andeq	r7, r1, ip, lsl #5
   16e40:	andeq	r7, r1, ip, lsl #5
   16e44:	andeq	r7, r1, ip, lsl #5
   16e48:	andeq	r6, r1, ip, lsr pc
   16e4c:	andeq	r7, r1, ip, lsl #5
   16e50:	andeq	r7, r1, ip, lsl #5
   16e54:	andeq	r7, r1, ip, lsl #5
   16e58:	andeq	r7, r1, ip, lsl #5
   16e5c:	andeq	r7, r1, ip, lsl #5
   16e60:	andeq	r7, r1, ip, lsl #5
   16e64:	strdeq	r7, [r1], -r0
   16e68:	andeq	r6, r1, r8, lsl #29
   16e6c:	andeq	r7, r1, ip, lsl #5
   16e70:	andeq	r7, r1, r8, ror r1
   16e74:	andeq	r7, r1, r4, ror #4
   16e78:	andeq	r7, r1, r8, asr #5
   16e7c:	andeq	r7, r1, ip, lsl #5
   16e80:	andeq	r7, r1, ip, lsl #5
   16e84:	andeq	r7, r1, r8, asr #5
   16e88:	ldr	r2, [pc, #1540]	; 17494 <tcgetattr@plt+0x58ac>
   16e8c:	ldrb	r2, [r2, #32]
   16e90:	tst	r2, #4
   16e94:	beq	1728c <tcgetattr@plt+0x56a4>
   16e98:	ldr	r0, [pc, #1528]	; 17498 <tcgetattr@plt+0x58b0>
   16e9c:	ldr	r2, [r0]
   16ea0:	add	r2, r2, #1
   16ea4:	str	r2, [r0]
   16ea8:	str	r2, [r0, #20]
   16eac:	ldr	r2, [pc, #1500]	; 17490 <tcgetattr@plt+0x58a8>
   16eb0:	ldr	r2, [r2, #40]	; 0x28
   16eb4:	cmp	r1, r2
   16eb8:	bcs	1728c <tcgetattr@plt+0x56a4>
   16ebc:	add	r0, r3, #2
   16ec0:	ldr	r2, [pc, #1480]	; 17490 <tcgetattr@plt+0x58a8>
   16ec4:	str	r0, [r2, #36]	; 0x24
   16ec8:	ldrb	r3, [r3, #1]
   16ecc:	cmp	r3, #0
   16ed0:	bne	1728c <tcgetattr@plt+0x56a4>
   16ed4:	mov	r2, #10
   16ed8:	mov	r1, #0
   16edc:	bl	11798 <strtol@plt>
   16ee0:	mov	r4, r0
   16ee4:	ldr	r3, [pc, #1444]	; 17490 <tcgetattr@plt+0x58a8>
   16ee8:	ldr	r1, [r3, #40]	; 0x28
   16eec:	mov	r2, r3
   16ef0:	ldr	r3, [r2, #36]	; 0x24
   16ef4:	add	r0, r3, #1
   16ef8:	str	r0, [r2, #36]	; 0x24
   16efc:	ldrb	r3, [r3]
   16f00:	cmp	r3, #44	; 0x2c
   16f04:	beq	16f14 <tcgetattr@plt+0x532c>
   16f08:	cmp	r0, r1
   16f0c:	bcc	16ef0 <tcgetattr@plt+0x5308>
   16f10:	b	1728c <tcgetattr@plt+0x56a4>
   16f14:	cmp	r0, r1
   16f18:	bcs	1728c <tcgetattr@plt+0x56a4>
   16f1c:	mov	r2, #10
   16f20:	mov	r1, #0
   16f24:	bl	11798 <strtol@plt>
   16f28:	mov	r2, r0
   16f2c:	mov	r1, r4
   16f30:	mov	r0, #32
   16f34:	bl	180b4 <tcgetattr@plt+0x64cc>
   16f38:	b	1728c <tcgetattr@plt+0x56a4>
   16f3c:	ldr	r2, [pc, #1360]	; 17494 <tcgetattr@plt+0x58ac>
   16f40:	ldrb	r2, [r2, #24]
   16f44:	tst	r2, #4
   16f48:	beq	1728c <tcgetattr@plt+0x56a4>
   16f4c:	ldr	r0, [pc, #1348]	; 17498 <tcgetattr@plt+0x58b0>
   16f50:	ldr	r2, [r0]
   16f54:	add	r2, r2, #1
   16f58:	str	r2, [r0]
   16f5c:	str	r2, [r0, #16]
   16f60:	ldr	r2, [pc, #1320]	; 17490 <tcgetattr@plt+0x58a8>
   16f64:	ldr	r2, [r2, #40]	; 0x28
   16f68:	cmp	r1, r2
   16f6c:	bcs	1728c <tcgetattr@plt+0x56a4>
   16f70:	add	r1, r3, #2
   16f74:	ldr	r2, [pc, #1300]	; 17490 <tcgetattr@plt+0x58a8>
   16f78:	str	r1, [r2, #36]	; 0x24
   16f7c:	ldrb	r3, [r3, #1]
   16f80:	cmp	r3, #0
   16f84:	bne	1728c <tcgetattr@plt+0x56a4>
   16f88:	ldr	r3, [pc, #1292]	; 1749c <tcgetattr@plt+0x58b4>
   16f8c:	ldr	r0, [r3]
   16f90:	bl	1a49c <argp_parse@@Base+0xbf4>
   16f94:	ldr	r3, [pc, #1284]	; 174a0 <tcgetattr@plt+0x58b8>
   16f98:	str	r3, [sp]
   16f9c:	ldr	r3, [pc, #1280]	; 174a4 <tcgetattr@plt+0x58bc>
   16fa0:	mov	r2, #0
   16fa4:	mov	r1, r2
   16fa8:	ldr	r0, [pc, #1272]	; 174a8 <tcgetattr@plt+0x58c0>
   16fac:	bl	1a704 <_obstack_begin@@Base>
   16fb0:	ldr	r2, [pc, #1240]	; 17490 <tcgetattr@plt+0x58a8>
   16fb4:	ldr	r3, [r2, #36]	; 0x24
   16fb8:	ldr	r2, [r2, #40]	; 0x28
   16fbc:	cmp	r3, r2
   16fc0:	bcs	17040 <tcgetattr@plt+0x5458>
   16fc4:	ldr	r6, [pc, #1220]	; 17490 <tcgetattr@plt+0x58a8>
   16fc8:	ldr	r7, [pc, #1244]	; 174ac <tcgetattr@plt+0x58c4>
   16fcc:	ldr	r5, [pc, #1236]	; 174a8 <tcgetattr@plt+0x58c0>
   16fd0:	mov	r8, #1
   16fd4:	b	17008 <tcgetattr@plt+0x5420>
   16fd8:	ldr	r2, [r5, #16]
   16fdc:	ldr	r3, [r5, #12]
   16fe0:	cmp	r2, r3
   16fe4:	beq	17030 <tcgetattr@plt+0x5448>
   16fe8:	ldr	r3, [r5, #12]
   16fec:	add	r2, r3, #1
   16ff0:	str	r2, [r5, #12]
   16ff4:	strb	r4, [r3]
   16ff8:	ldr	r3, [r6, #36]	; 0x24
   16ffc:	ldr	r2, [r6, #40]	; 0x28
   17000:	cmp	r3, r2
   17004:	bcs	17040 <tcgetattr@plt+0x5458>
   17008:	add	r2, r3, #1
   1700c:	str	r2, [r6, #36]	; 0x24
   17010:	ldrb	r4, [r3]
   17014:	add	r3, r4, #128	; 0x80
   17018:	cmp	r3, r7
   1701c:	bhi	16fd8 <tcgetattr@plt+0x53f0>
   17020:	bl	1196c <__ctype_tolower_loc@plt>
   17024:	ldr	r3, [r0]
   17028:	ldr	r4, [r3, r4, lsl #2]
   1702c:	b	16fd8 <tcgetattr@plt+0x53f0>
   17030:	mov	r1, r8
   17034:	mov	r0, r5
   17038:	bl	1a754 <_obstack_newchunk@@Base>
   1703c:	b	16fe8 <tcgetattr@plt+0x5400>
   17040:	ldr	r3, [pc, #1120]	; 174a8 <tcgetattr@plt+0x58c0>
   17044:	ldr	r2, [r3, #16]
   17048:	ldr	r3, [r3, #12]
   1704c:	cmp	r2, r3
   17050:	beq	170e0 <tcgetattr@plt+0x54f8>
   17054:	ldr	r3, [pc, #1100]	; 174a8 <tcgetattr@plt+0x58c0>
   17058:	ldr	r2, [r3, #12]
   1705c:	add	r1, r2, #1
   17060:	str	r1, [r3, #12]
   17064:	mov	r1, #0
   17068:	strb	r1, [r2]
   1706c:	ldr	r0, [r3, #8]
   17070:	ldr	r3, [r3, #12]
   17074:	cmp	r0, r3
   17078:	ldreq	r1, [pc, #1064]	; 174a8 <tcgetattr@plt+0x58c0>
   1707c:	ldrbeq	r2, [r1, #40]	; 0x28
   17080:	orreq	r2, r2, #2
   17084:	strbeq	r2, [r1, #40]	; 0x28
   17088:	ldr	r1, [pc, #1048]	; 174a8 <tcgetattr@plt+0x58c0>
   1708c:	ldr	r2, [r1, #24]
   17090:	add	r3, r3, r2
   17094:	bic	r3, r3, r2
   17098:	str	r3, [r1, #12]
   1709c:	ldr	r2, [r1, #4]
   170a0:	ldr	r1, [r1, #16]
   170a4:	sub	r3, r3, r2
   170a8:	sub	r2, r1, r2
   170ac:	cmp	r3, r2
   170b0:	ldrhi	r3, [pc, #1008]	; 174a8 <tcgetattr@plt+0x58c0>
   170b4:	strhi	r1, [r3, #12]
   170b8:	ldr	r4, [pc, #1000]	; 174a8 <tcgetattr@plt+0x58c0>
   170bc:	ldr	r3, [r4, #12]
   170c0:	str	r3, [r4, #8]
   170c4:	bl	1b3b0 <_obstack_memory_used@@Base+0xa94>
   170c8:	ldr	r3, [pc, #972]	; 1749c <tcgetattr@plt+0x58b4>
   170cc:	str	r0, [r3]
   170d0:	mov	r1, #0
   170d4:	mov	r0, r4
   170d8:	bl	1a8a0 <_obstack_free@@Base>
   170dc:	b	1728c <tcgetattr@plt+0x56a4>
   170e0:	mov	r1, #1
   170e4:	ldr	r0, [pc, #956]	; 174a8 <tcgetattr@plt+0x58c0>
   170e8:	bl	1a754 <_obstack_newchunk@@Base>
   170ec:	b	17054 <tcgetattr@plt+0x546c>
   170f0:	ldr	r2, [pc, #924]	; 17494 <tcgetattr@plt+0x58ac>
   170f4:	ldrb	r2, [r2, #31]
   170f8:	tst	r2, #4
   170fc:	beq	1728c <tcgetattr@plt+0x56a4>
   17100:	ldr	r2, [pc, #904]	; 17490 <tcgetattr@plt+0x58a8>
   17104:	ldr	r2, [r2, #40]	; 0x28
   17108:	cmp	r1, r2
   1710c:	bcs	1728c <tcgetattr@plt+0x56a4>
   17110:	add	r1, r3, #2
   17114:	ldr	r0, [pc, #884]	; 17490 <tcgetattr@plt+0x58a8>
   17118:	str	r1, [r0, #36]	; 0x24
   1711c:	cmp	r2, r1
   17120:	bls	1728c <tcgetattr@plt+0x56a4>
   17124:	ldrb	r1, [r3, #1]
   17128:	add	r0, r3, #3
   1712c:	ldr	ip, [pc, #860]	; 17490 <tcgetattr@plt+0x58a8>
   17130:	str	r0, [ip, #36]	; 0x24
   17134:	cmp	r2, r0
   17138:	bls	1728c <tcgetattr@plt+0x56a4>
   1713c:	ldrb	lr, [r3, #2]
   17140:	add	r0, r3, #4
   17144:	str	r0, [ip, #36]	; 0x24
   17148:	cmp	r2, r0
   1714c:	bls	1728c <tcgetattr@plt+0x56a4>
   17150:	ldrb	r2, [r3, #3]
   17154:	add	ip, r3, #5
   17158:	ldr	r0, [pc, #816]	; 17490 <tcgetattr@plt+0x58a8>
   1715c:	str	ip, [r0, #36]	; 0x24
   17160:	ldrb	r3, [r3, #4]
   17164:	orr	r2, r3, r2, lsl #8
   17168:	orr	r1, lr, r1, lsl #8
   1716c:	mov	r0, #31
   17170:	bl	180b4 <tcgetattr@plt+0x64cc>
   17174:	b	1728c <tcgetattr@plt+0x56a4>
   17178:	ldr	r2, [pc, #788]	; 17494 <tcgetattr@plt+0x58ac>
   1717c:	ldrb	r2, [r2, #34]	; 0x22
   17180:	tst	r2, #4
   17184:	beq	1728c <tcgetattr@plt+0x56a4>
   17188:	ldr	r2, [pc, #768]	; 17490 <tcgetattr@plt+0x58a8>
   1718c:	ldr	r0, [r2, #40]	; 0x28
   17190:	cmp	r1, r0
   17194:	bcs	1728c <tcgetattr@plt+0x56a4>
   17198:	add	r2, r3, #2
   1719c:	ldr	r1, [pc, #748]	; 17490 <tcgetattr@plt+0x58a8>
   171a0:	str	r2, [r1, #36]	; 0x24
   171a4:	cmp	r0, r2
   171a8:	bls	1728c <tcgetattr@plt+0x56a4>
   171ac:	ldrb	r2, [r3, #1]
   171b0:	cmp	r2, #3
   171b4:	beq	171d0 <tcgetattr@plt+0x55e8>
   171b8:	cmp	r2, #1
   171bc:	beq	171f8 <tcgetattr@plt+0x5610>
   171c0:	add	r3, r3, #3
   171c4:	ldr	r2, [pc, #708]	; 17490 <tcgetattr@plt+0x58a8>
   171c8:	str	r3, [r2, #36]	; 0x24
   171cc:	b	1728c <tcgetattr@plt+0x56a4>
   171d0:	mov	r0, #1
   171d4:	bl	18690 <tcgetattr@plt+0x6aa8>
   171d8:	ldr	r3, [pc, #688]	; 17490 <tcgetattr@plt+0x58a8>
   171dc:	ldr	r0, [r3, #36]	; 0x24
   171e0:	ldr	r1, [r3, #40]	; 0x28
   171e4:	sub	r1, r1, r0
   171e8:	bl	18a58 <tcgetattr@plt+0x6e70>
   171ec:	mov	r0, #0
   171f0:	bl	186f4 <tcgetattr@plt+0x6b0c>
   171f4:	b	1728c <tcgetattr@plt+0x56a4>
   171f8:	add	r1, r3, #3
   171fc:	ldr	r2, [pc, #652]	; 17490 <tcgetattr@plt+0x58a8>
   17200:	str	r1, [r2, #36]	; 0x24
   17204:	ldrb	r2, [r3, #2]
   17208:	ldr	r3, [pc, #672]	; 174b0 <tcgetattr@plt+0x58c8>
   1720c:	str	r2, [r3]
   17210:	mov	r2, #0
   17214:	mov	r1, r2
   17218:	mov	r0, #1
   1721c:	bl	180b4 <tcgetattr@plt+0x64cc>
   17220:	b	1728c <tcgetattr@plt+0x56a4>
   17224:	ldr	r2, [pc, #612]	; 17490 <tcgetattr@plt+0x58a8>
   17228:	ldr	r2, [r2, #40]	; 0x28
   1722c:	cmp	r1, r2
   17230:	bcs	1728c <tcgetattr@plt+0x56a4>
   17234:	add	r1, r3, #2
   17238:	ldr	r2, [pc, #592]	; 17490 <tcgetattr@plt+0x58a8>
   1723c:	str	r1, [r2, #36]	; 0x24
   17240:	ldrb	r3, [r3, #1]
   17244:	cmp	r3, #1
   17248:	bne	1728c <tcgetattr@plt+0x56a4>
   1724c:	ldr	r3, [pc, #576]	; 17494 <tcgetattr@plt+0x58ac>
   17250:	ldrb	r3, [r3, #5]
   17254:	tst	r3, #1
   17258:	beq	1728c <tcgetattr@plt+0x56a4>
   1725c:	bl	16970 <tcgetattr@plt+0x4d88>
   17260:	b	1728c <tcgetattr@plt+0x56a4>
   17264:	ldr	r2, [pc, #548]	; 17490 <tcgetattr@plt+0x58a8>
   17268:	ldr	r2, [r2, #40]	; 0x28
   1726c:	cmp	r1, r2
   17270:	bcs	1728c <tcgetattr@plt+0x56a4>
   17274:	add	r0, r3, #2
   17278:	ldr	r1, [pc, #528]	; 17490 <tcgetattr@plt+0x58a8>
   1727c:	str	r0, [r1, #36]	; 0x24
   17280:	ldrb	r3, [r3, #1]
   17284:	cmp	r3, #0
   17288:	beq	17294 <tcgetattr@plt+0x56ac>
   1728c:	add	sp, sp, #12
   17290:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17294:	ldr	r1, [pc, #508]	; 17498 <tcgetattr@plt+0x58b0>
   17298:	ldr	r3, [r1]
   1729c:	add	r3, r3, #1
   172a0:	str	r3, [r1]
   172a4:	str	r3, [r1, #32]
   172a8:	mov	r3, #0
   172ac:	strb	r3, [r2]
   172b0:	mov	r2, #1
   172b4:	ldr	r3, [pc, #468]	; 17490 <tcgetattr@plt+0x58a8>
   172b8:	ldr	r1, [r3, #36]	; 0x24
   172bc:	ldr	r0, [pc, #496]	; 174b4 <tcgetattr@plt+0x58cc>
   172c0:	bl	119d8 <setenv@plt>
   172c4:	b	1728c <tcgetattr@plt+0x56a4>
   172c8:	ldr	r2, [pc, #448]	; 17490 <tcgetattr@plt+0x58a8>
   172cc:	ldr	ip, [r2, #40]	; 0x28
   172d0:	cmp	r1, ip
   172d4:	bcs	1728c <tcgetattr@plt+0x56a4>
   172d8:	mov	r4, r0
   172dc:	add	r1, r3, #2
   172e0:	str	r1, [r2, #36]	; 0x24
   172e4:	ldrb	r3, [r3, #1]
   172e8:	cmp	r3, #0
   172ec:	bne	17384 <tcgetattr@plt+0x579c>
   172f0:	cmp	r0, #36	; 0x24
   172f4:	beq	1736c <tcgetattr@plt+0x5784>
   172f8:	ldr	r2, [pc, #408]	; 17498 <tcgetattr@plt+0x58b0>
   172fc:	ldr	r3, [r2]
   17300:	add	r3, r3, #1
   17304:	str	r3, [r2]
   17308:	str	r3, [r2, #24]
   1730c:	cmp	r0, #39	; 0x27
   17310:	beq	17390 <tcgetattr@plt+0x57a8>
   17314:	ldr	r2, [pc, #372]	; 17490 <tcgetattr@plt+0x58a8>
   17318:	ldr	r3, [r2, #36]	; 0x24
   1731c:	cmp	ip, r3
   17320:	bls	1728c <tcgetattr@plt+0x56a4>
   17324:	add	r1, r3, #1
   17328:	str	r1, [r2, #36]	; 0x24
   1732c:	ldrb	r3, [r3]
   17330:	and	r3, r3, #253	; 0xfd
   17334:	cmp	r3, #1
   17338:	bne	17318 <tcgetattr@plt+0x5730>
   1733c:	ldr	r2, [pc, #332]	; 17490 <tcgetattr@plt+0x58a8>
   17340:	ldr	r3, [r2, #36]	; 0x24
   17344:	ldr	lr, [r2, #40]	; 0x28
   17348:	cmp	r3, lr
   1734c:	bcs	1728c <tcgetattr@plt+0x56a4>
   17350:	mov	r0, r3
   17354:	mov	ip, r3
   17358:	mov	r1, #0
   1735c:	mov	r5, r2
   17360:	mov	r6, r1
   17364:	mov	r7, #1
   17368:	b	17434 <tcgetattr@plt+0x584c>
   1736c:	ldr	r2, [pc, #292]	; 17498 <tcgetattr@plt+0x58b0>
   17370:	ldr	r3, [r2]
   17374:	add	r3, r3, #1
   17378:	str	r3, [r2]
   1737c:	str	r3, [r2, #28]
   17380:	b	17314 <tcgetattr@plt+0x572c>
   17384:	cmp	r3, #2
   17388:	bne	1728c <tcgetattr@plt+0x56a4>
   1738c:	b	1730c <tcgetattr@plt+0x5724>
   17390:	ldr	r2, [pc, #248]	; 17490 <tcgetattr@plt+0x58a8>
   17394:	ldr	r3, [r2, #36]	; 0x24
   17398:	cmp	ip, r3
   1739c:	bls	1728c <tcgetattr@plt+0x56a4>
   173a0:	add	r1, r3, #1
   173a4:	str	r1, [r2, #36]	; 0x24
   173a8:	ldrb	r3, [r3]
   173ac:	cmp	r3, #3
   173b0:	cmpne	r3, #0
   173b4:	bne	17394 <tcgetattr@plt+0x57ac>
   173b8:	b	1733c <tcgetattr@plt+0x5754>
   173bc:	cmp	r2, #1
   173c0:	beq	173dc <tcgetattr@plt+0x57f4>
   173c4:	cmp	r2, #0
   173c8:	bne	1744c <tcgetattr@plt+0x5864>
   173cc:	strb	r6, [ip]
   173d0:	ldr	ip, [r5, #36]	; 0x24
   173d4:	mov	r1, ip
   173d8:	b	17424 <tcgetattr@plt+0x583c>
   173dc:	strb	r6, [ip]
   173e0:	cmp	r1, #0
   173e4:	beq	17400 <tcgetattr@plt+0x5818>
   173e8:	mov	r2, r7
   173ec:	bl	119d8 <setenv@plt>
   173f0:	ldr	ip, [r5, #36]	; 0x24
   173f4:	mov	r0, ip
   173f8:	mov	r1, r6
   173fc:	b	17424 <tcgetattr@plt+0x583c>
   17400:	bl	11b94 <unsetenv@plt>
   17404:	b	173f0 <tcgetattr@plt+0x5808>
   17408:	cmp	r8, lr
   1740c:	bcs	17424 <tcgetattr@plt+0x583c>
   17410:	add	r2, r3, #2
   17414:	str	r2, [r5, #36]	; 0x24
   17418:	ldrb	r9, [r3, #1]
   1741c:	strb	r9, [ip]
   17420:	add	ip, ip, #1
   17424:	ldr	r3, [r5, #36]	; 0x24
   17428:	ldr	lr, [r5, #40]	; 0x28
   1742c:	cmp	r3, lr
   17430:	bcs	17468 <tcgetattr@plt+0x5880>
   17434:	add	r8, r3, #1
   17438:	str	r8, [r5, #36]	; 0x24
   1743c:	ldrb	r2, [r3]
   17440:	mov	r9, r2
   17444:	cmp	r4, #36	; 0x24
   17448:	beq	173bc <tcgetattr@plt+0x57d4>
   1744c:	cmp	r2, #3
   17450:	ldrls	pc, [pc, r2, lsl #2]
   17454:	b	1741c <tcgetattr@plt+0x5834>
   17458:	ldrdeq	r7, [r1], -ip
   1745c:	andeq	r7, r1, ip, asr #7
   17460:	andeq	r7, r1, r8, lsl #8
   17464:	ldrdeq	r7, [r1], -ip
   17468:	mov	r3, #0
   1746c:	strb	r3, [ip]
   17470:	cmp	r1, r3
   17474:	beq	17484 <tcgetattr@plt+0x589c>
   17478:	mov	r2, #1
   1747c:	bl	119d8 <setenv@plt>
   17480:	b	1728c <tcgetattr@plt+0x56a4>
   17484:	bl	11b94 <unsetenv@plt>
   17488:	b	1728c <tcgetattr@plt+0x56a4>
   1748c:	andeq	sl, r3, r0, ror #13
   17490:	andeq	r2, r3, r0, lsl #9
   17494:	andeq	sl, r3, r4, lsl #14
   17498:			; <UNDEFINED> instruction: 0x0003a9b4
   1749c:	andeq	sl, r3, r0, lsl #14
   174a0:	muleq	r1, ip, r4
   174a4:	andeq	fp, r1, r8, asr #8
   174a8:	ldrdeq	sl, [r3], -r8
   174ac:	andeq	r0, r0, pc, ror r1
   174b0:	ldrdeq	sl, [r3], -r8
   174b4:	andeq	r0, r2, ip, lsr #22
   174b8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174bc:	ldr	r5, [pc, #1288]	; 179cc <tcgetattr@plt+0x5de4>
   174c0:	ldr	r6, [pc, #1288]	; 179d0 <tcgetattr@plt+0x5de8>
   174c4:	ldr	r7, [pc, #1288]	; 179d4 <tcgetattr@plt+0x5dec>
   174c8:	sub	r8, r7, #512	; 0x200
   174cc:	ldr	sl, [pc, #1284]	; 179d8 <tcgetattr@plt+0x5df0>
   174d0:	ldr	r9, [pc, #1284]	; 179dc <tcgetattr@plt+0x5df4>
   174d4:	bl	13cf0 <tcgetattr@plt+0x2108>
   174d8:	mov	r4, r0
   174dc:	bl	13d9c <tcgetattr@plt+0x21b4>
   174e0:	cmp	r4, #0
   174e4:	movle	r3, #0
   174e8:	movgt	r3, #1
   174ec:	cmp	r0, #0
   174f0:	movne	r3, #0
   174f4:	cmp	r3, #0
   174f8:	beq	179c8 <tcgetattr@plt+0x5de0>
   174fc:	mov	r0, #0
   17500:	bl	13d48 <tcgetattr@plt+0x2160>
   17504:	mov	r4, r0
   17508:	ldr	r2, [r5, #44]	; 0x2c
   1750c:	cmp	r2, #8
   17510:	ldrls	pc, [pc, r2, lsl #2]
   17514:	b	179a0 <tcgetattr@plt+0x5db8>
   17518:	andeq	r7, r1, r0, asr r5
   1751c:	andeq	r7, r1, r8, lsl #17
   17520:	andeq	r7, r1, ip, lsr r5
   17524:	andeq	r7, r1, r4, lsl #16
   17528:	andeq	r7, r1, ip, lsr #16
   1752c:	andeq	r7, r1, r0, ror #18
   17530:	andeq	r7, r1, r0, ror r9
   17534:	andeq	r7, r1, r0, lsl #19
   17538:	muleq	r1, r0, r9
   1753c:	mov	r3, #0
   17540:	str	r3, [r5, #44]	; 0x2c
   17544:	cmp	r0, #10
   17548:	cmpne	r0, r3
   1754c:	beq	174d4 <tcgetattr@plt+0x58ec>
   17550:	cmp	r4, #255	; 0xff
   17554:	moveq	r3, #1
   17558:	streq	r3, [r5, #44]	; 0x2c
   1755c:	beq	174d4 <tcgetattr@plt+0x58ec>
   17560:	cmp	r4, #13
   17564:	beq	17574 <tcgetattr@plt+0x598c>
   17568:	mov	r0, r4
   1756c:	bl	13dc4 <tcgetattr@plt+0x21dc>
   17570:	b	174d4 <tcgetattr@plt+0x58ec>
   17574:	ldrb	r3, [r9]
   17578:	tst	r3, #4
   1757c:	bne	17568 <tcgetattr@plt+0x5980>
   17580:	mov	r0, #1
   17584:	bl	13d48 <tcgetattr@plt+0x2160>
   17588:	mov	fp, r0
   1758c:	ldr	r3, [pc, #1100]	; 179e0 <tcgetattr@plt+0x5df8>
   17590:	ldr	r3, [r3]
   17594:	cmp	r3, #0
   17598:	bne	175a8 <tcgetattr@plt+0x59c0>
   1759c:	mov	r3, #2
   175a0:	str	r3, [r5, #44]	; 0x2c
   175a4:	b	17568 <tcgetattr@plt+0x5980>
   175a8:	bl	13cf0 <tcgetattr@plt+0x2108>
   175ac:	cmp	r0, #0
   175b0:	ble	1759c <tcgetattr@plt+0x59b4>
   175b4:	cmp	fp, #10
   175b8:	beq	175d0 <tcgetattr@plt+0x59e8>
   175bc:	cmp	fp, #0
   175c0:	bne	1759c <tcgetattr@plt+0x59b4>
   175c4:	bl	13300 <tcgetattr@plt+0x1718>
   175c8:	cmp	r0, #0
   175cc:	beq	1759c <tcgetattr@plt+0x59b4>
   175d0:	mov	r0, #0
   175d4:	bl	13d48 <tcgetattr@plt+0x2160>
   175d8:	mov	r4, #10
   175dc:	b	17568 <tcgetattr@plt+0x5980>
   175e0:	ldr	r3, [pc, #1020]	; 179e4 <tcgetattr@plt+0x5dfc>
   175e4:	ldr	r3, [r3]
   175e8:	cmp	r3, #0
   175ec:	ble	175fc <tcgetattr@plt+0x5a14>
   175f0:	mov	r1, #244	; 0xf4
   175f4:	ldr	r0, [pc, #1004]	; 179e8 <tcgetattr@plt+0x5e00>
   175f8:	bl	14b48 <tcgetattr@plt+0x2f60>
   175fc:	bl	15a70 <tcgetattr@plt+0x3e88>
   17600:	bl	13314 <tcgetattr@plt+0x172c>
   17604:	ldr	r3, [sl, #28]
   17608:	cmp	r3, #0
   1760c:	ldrbne	r0, [r3]
   17610:	moveq	r0, #127	; 0x7f
   17614:	bl	13dc4 <tcgetattr@plt+0x21dc>
   17618:	mov	r3, #0
   1761c:	str	r3, [r5, #44]	; 0x2c
   17620:	b	174d4 <tcgetattr@plt+0x58ec>
   17624:	ldr	r3, [pc, #952]	; 179e4 <tcgetattr@plt+0x5dfc>
   17628:	ldr	r3, [r3]
   1762c:	cmp	r3, #0
   17630:	ble	17640 <tcgetattr@plt+0x5a58>
   17634:	mov	r1, #243	; 0xf3
   17638:	ldr	r0, [pc, #936]	; 179e8 <tcgetattr@plt+0x5e00>
   1763c:	bl	14b48 <tcgetattr@plt+0x2f60>
   17640:	bl	15d78 <tcgetattr@plt+0x4190>
   17644:	b	17618 <tcgetattr@plt+0x5a30>
   17648:	ldr	r3, [pc, #916]	; 179e4 <tcgetattr@plt+0x5dfc>
   1764c:	ldr	r3, [r3]
   17650:	cmp	r3, #0
   17654:	ble	17664 <tcgetattr@plt+0x5a7c>
   17658:	mov	r1, #246	; 0xf6
   1765c:	ldr	r0, [pc, #900]	; 179e8 <tcgetattr@plt+0x5e00>
   17660:	bl	14b48 <tcgetattr@plt+0x2f60>
   17664:	ldr	r0, [pc, #896]	; 179ec <tcgetattr@plt+0x5e04>
   17668:	bl	14490 <tcgetattr@plt+0x28a8>
   1766c:	b	17618 <tcgetattr@plt+0x5a30>
   17670:	ldr	r3, [pc, #876]	; 179e4 <tcgetattr@plt+0x5dfc>
   17674:	ldr	r3, [r3]
   17678:	cmp	r3, #0
   1767c:	ble	1768c <tcgetattr@plt+0x5aa4>
   17680:	mov	r1, #245	; 0xf5
   17684:	ldr	r0, [pc, #860]	; 179e8 <tcgetattr@plt+0x5e00>
   17688:	bl	14b48 <tcgetattr@plt+0x2f60>
   1768c:	bl	15a70 <tcgetattr@plt+0x3e88>
   17690:	bl	13314 <tcgetattr@plt+0x172c>
   17694:	ldr	r3, [sl, #36]	; 0x24
   17698:	cmp	r3, #0
   1769c:	beq	176ac <tcgetattr@plt+0x5ac4>
   176a0:	ldrb	r0, [r3]
   176a4:	cmp	r0, #0
   176a8:	bne	176e4 <tcgetattr@plt+0x5afc>
   176ac:	bl	13fb0 <tcgetattr@plt+0x23c8>
   176b0:	mov	r2, #242	; 0xf2
   176b4:	mov	r1, #255	; 0xff
   176b8:	ldr	r0, [pc, #816]	; 179f0 <tcgetattr@plt+0x5e08>
   176bc:	bl	14490 <tcgetattr@plt+0x28a8>
   176c0:	bl	13cb4 <tcgetattr@plt+0x20cc>
   176c4:	ldr	r3, [pc, #792]	; 179e4 <tcgetattr@plt+0x5dfc>
   176c8:	ldr	r3, [r3]
   176cc:	cmp	r3, #0
   176d0:	ble	17618 <tcgetattr@plt+0x5a30>
   176d4:	mov	r1, #242	; 0xf2
   176d8:	ldr	r0, [pc, #788]	; 179f4 <tcgetattr@plt+0x5e0c>
   176dc:	bl	14b48 <tcgetattr@plt+0x2f60>
   176e0:	b	17618 <tcgetattr@plt+0x5a30>
   176e4:	bl	13dc4 <tcgetattr@plt+0x21dc>
   176e8:	b	176ac <tcgetattr@plt+0x5ac4>
   176ec:	ldr	r3, [pc, #752]	; 179e4 <tcgetattr@plt+0x5dfc>
   176f0:	ldr	r3, [r3]
   176f4:	cmp	r3, #0
   176f8:	ble	17708 <tcgetattr@plt+0x5b20>
   176fc:	mov	r1, r4
   17700:	ldr	r0, [pc, #736]	; 179e8 <tcgetattr@plt+0x5e00>
   17704:	bl	14b48 <tcgetattr@plt+0x2f60>
   17708:	bl	15a70 <tcgetattr@plt+0x3e88>
   1770c:	bl	13314 <tcgetattr@plt+0x172c>
   17710:	cmp	r4, #247	; 0xf7
   17714:	ldreq	r3, [sl, #84]	; 0x54
   17718:	ldrne	r3, [sl, #92]	; 0x5c
   1771c:	ldrb	r0, [r3]
   17720:	cmp	r0, #0
   17724:	beq	17618 <tcgetattr@plt+0x5a30>
   17728:	bl	13dc4 <tcgetattr@plt+0x21dc>
   1772c:	b	17618 <tcgetattr@plt+0x5a30>
   17730:	ldr	r3, [pc, #684]	; 179e4 <tcgetattr@plt+0x5dfc>
   17734:	ldr	r3, [r3]
   17738:	cmp	r3, #0
   1773c:	ble	1774c <tcgetattr@plt+0x5b64>
   17740:	mov	r1, #242	; 0xf2
   17744:	ldr	r0, [pc, #668]	; 179e8 <tcgetattr@plt+0x5e00>
   17748:	bl	14b48 <tcgetattr@plt+0x2f60>
   1774c:	ldr	r3, [pc, #676]	; 179f8 <tcgetattr@plt+0x5e10>
   17750:	ldr	r0, [r3]
   17754:	bl	141bc <tcgetattr@plt+0x25d4>
   17758:	ldr	r3, [pc, #668]	; 179fc <tcgetattr@plt+0x5e14>
   1775c:	str	r0, [r3]
   17760:	ldr	r2, [pc, #664]	; 17a00 <tcgetattr@plt+0x5e18>
   17764:	ldr	r3, [r2]
   17768:	add	r3, r3, #1
   1776c:	str	r3, [r2]
   17770:	str	r3, [r2, #40]	; 0x28
   17774:	b	17618 <tcgetattr@plt+0x5a30>
   17778:	mov	r3, #3
   1777c:	str	r3, [r5, #44]	; 0x2c
   17780:	str	r8, [r6, #36]	; 0x24
   17784:	b	174d4 <tcgetattr@plt+0x58ec>
   17788:	mov	r3, #5
   1778c:	str	r3, [r5, #44]	; 0x2c
   17790:	b	174d4 <tcgetattr@plt+0x58ec>
   17794:	mov	r3, #6
   17798:	str	r3, [r5, #44]	; 0x2c
   1779c:	b	174d4 <tcgetattr@plt+0x58ec>
   177a0:	mov	r3, #7
   177a4:	str	r3, [r5, #44]	; 0x2c
   177a8:	b	174d4 <tcgetattr@plt+0x58ec>
   177ac:	mov	r3, #8
   177b0:	str	r3, [r5, #44]	; 0x2c
   177b4:	b	174d4 <tcgetattr@plt+0x58ec>
   177b8:	ldrb	r3, [r9, #25]
   177bc:	tst	r3, #4
   177c0:	beq	17618 <tcgetattr@plt+0x5a30>
   177c4:	bl	15da4 <tcgetattr@plt+0x41bc>
   177c8:	b	17618 <tcgetattr@plt+0x5a30>
   177cc:	bl	15da4 <tcgetattr@plt+0x41bc>
   177d0:	b	17618 <tcgetattr@plt+0x5a30>
   177d4:	bl	15a70 <tcgetattr@plt+0x3e88>
   177d8:	ldr	r3, [sl, #76]	; 0x4c
   177dc:	cmp	r3, #0
   177e0:	ldrbne	r0, [r3]
   177e4:	moveq	r0, #26
   177e8:	bl	13dc4 <tcgetattr@plt+0x21dc>
   177ec:	b	17618 <tcgetattr@plt+0x5a30>
   177f0:	bl	15d78 <tcgetattr@plt+0x4190>
   177f4:	b	17618 <tcgetattr@plt+0x5a30>
   177f8:	mov	r0, #255	; 0xff
   177fc:	bl	13dc4 <tcgetattr@plt+0x21dc>
   17800:	b	17618 <tcgetattr@plt+0x5a30>
   17804:	cmp	r0, #255	; 0xff
   17808:	moveq	r3, #4
   1780c:	streq	r3, [r5, #44]	; 0x2c
   17810:	beq	174d4 <tcgetattr@plt+0x58ec>
   17814:	ldr	r3, [r6, #36]	; 0x24
   17818:	cmp	r3, r7
   1781c:	addcc	r2, r3, #1
   17820:	strcc	r2, [r6, #36]	; 0x24
   17824:	strbcc	r0, [r3]
   17828:	b	174d4 <tcgetattr@plt+0x58ec>
   1782c:	cmp	r0, #240	; 0xf0
   17830:	beq	1790c <tcgetattr@plt+0x5d24>
   17834:	cmp	r0, #255	; 0xff
   17838:	beq	178e8 <tcgetattr@plt+0x5d00>
   1783c:	ldr	r3, [r6, #36]	; 0x24
   17840:	cmp	r3, r7
   17844:	bcs	1786c <tcgetattr@plt+0x5c84>
   17848:	add	r2, r3, #1
   1784c:	str	r2, [r6, #36]	; 0x24
   17850:	mvn	r2, #0
   17854:	strb	r2, [r3]
   17858:	ldr	r3, [r6, #36]	; 0x24
   1785c:	cmp	r3, r7
   17860:	addcc	r2, r3, #1
   17864:	strcc	r2, [r6, #36]	; 0x24
   17868:	strbcc	r0, [r3]
   1786c:	ldr	r3, [r6, #36]	; 0x24
   17870:	sub	r3, r3, #2
   17874:	str	r3, [r6, #40]	; 0x28
   17878:	str	r8, [r6, #36]	; 0x24
   1787c:	bl	16da4 <tcgetattr@plt+0x51bc>
   17880:	mov	r3, #1
   17884:	str	r3, [r5, #44]	; 0x2c
   17888:	sub	r3, r4, #236	; 0xec
   1788c:	cmp	r3, #19
   17890:	ldrls	pc, [pc, r3, lsl #2]
   17894:	b	17618 <tcgetattr@plt+0x5a30>
   17898:	andeq	r7, r1, ip, asr #15
   1789c:	ldrdeq	r7, [r1], -r4
   178a0:	strdeq	r7, [r1], -r0
   178a4:			; <UNDEFINED> instruction: 0x000177b8
   178a8:	andeq	r7, r1, r8, lsl r6
   178ac:	andeq	r7, r1, r8, lsl r6
   178b0:	andeq	r7, r1, r0, lsr r7
   178b4:	andeq	r7, r1, r4, lsr #12
   178b8:	andeq	r7, r1, r0, ror #11
   178bc:	andeq	r7, r1, r0, ror r6
   178c0:	andeq	r7, r1, r8, asr #12
   178c4:	andeq	r7, r1, ip, ror #13
   178c8:	andeq	r7, r1, ip, ror #13
   178cc:	andeq	r7, r1, r8, lsl r6
   178d0:	andeq	r7, r1, r8, ror r7
   178d4:	andeq	r7, r1, r8, lsl #15
   178d8:	muleq	r1, r4, r7
   178dc:	andeq	r7, r1, r0, lsr #15
   178e0:	andeq	r7, r1, ip, lsr #15
   178e4:	strdeq	r7, [r1], -r8
   178e8:	ldr	r3, [r6, #36]	; 0x24
   178ec:	cmp	r3, r7
   178f0:	addcc	r2, r3, #1
   178f4:	strcc	r2, [r6, #36]	; 0x24
   178f8:	mvncc	r2, #0
   178fc:	strbcc	r2, [r3]
   17900:	mov	r3, #3
   17904:	str	r3, [r5, #44]	; 0x2c
   17908:	b	174d4 <tcgetattr@plt+0x58ec>
   1790c:	ldr	r3, [r6, #36]	; 0x24
   17910:	cmp	r3, r7
   17914:	bcs	17940 <tcgetattr@plt+0x5d58>
   17918:	add	r2, r3, #1
   1791c:	str	r2, [r6, #36]	; 0x24
   17920:	mvn	r2, #0
   17924:	strb	r2, [r3]
   17928:	ldr	r3, [r6, #36]	; 0x24
   1792c:	cmp	r3, r7
   17930:	addcc	r2, r3, #1
   17934:	strcc	r2, [r6, #36]	; 0x24
   17938:	mvncc	r2, #15
   1793c:	strbcc	r2, [r3]
   17940:	ldr	r3, [r6, #36]	; 0x24
   17944:	sub	r3, r3, #2
   17948:	str	r3, [r6, #40]	; 0x28
   1794c:	str	r8, [r6, #36]	; 0x24
   17950:	bl	16da4 <tcgetattr@plt+0x51bc>
   17954:	mov	r3, #0
   17958:	str	r3, [r5, #44]	; 0x2c
   1795c:	b	174d4 <tcgetattr@plt+0x58ec>
   17960:	bl	16324 <tcgetattr@plt+0x473c>
   17964:	mov	r3, #0
   17968:	str	r3, [r5, #44]	; 0x2c
   1796c:	b	174d4 <tcgetattr@plt+0x58ec>
   17970:	bl	15fc0 <tcgetattr@plt+0x43d8>
   17974:	mov	r3, #0
   17978:	str	r3, [r5, #44]	; 0x2c
   1797c:	b	174d4 <tcgetattr@plt+0x58ec>
   17980:	bl	16608 <tcgetattr@plt+0x4a20>
   17984:	mov	r3, #0
   17988:	str	r3, [r5, #44]	; 0x2c
   1798c:	b	174d4 <tcgetattr@plt+0x58ec>
   17990:	bl	16818 <tcgetattr@plt+0x4c30>
   17994:	mov	r3, #0
   17998:	str	r3, [r5, #44]	; 0x2c
   1799c:	b	174d4 <tcgetattr@plt+0x58ec>
   179a0:	ldr	r4, [pc, #92]	; 17a04 <tcgetattr@plt+0x5e1c>
   179a4:	mov	r1, r4
   179a8:	mov	r0, #3
   179ac:	bl	11aec <syslog@plt>
   179b0:	ldr	r3, [pc, #20]	; 179cc <tcgetattr@plt+0x5de4>
   179b4:	ldr	r1, [r3, #44]	; 0x2c
   179b8:	mov	r0, r4
   179bc:	bl	117b0 <printf@plt>
   179c0:	mov	r0, #1
   179c4:	bl	119a8 <exit@plt>
   179c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179cc:	ldrdeq	sl, [r3], -r8
   179d0:	andeq	r2, r3, r0, lsl #9
   179d4:	andeq	sl, r3, r4, ror #28
   179d8:	andeq	sl, r3, ip, lsl #18
   179dc:	andeq	sl, r3, r4, lsl #14
   179e0:			; <UNDEFINED> instruction: 0x0003a9b0
   179e4:	andeq	sl, r3, r0, ror #13
   179e8:	andeq	r0, r2, r4, lsr fp
   179ec:	andeq	r0, r2, r4, asr #22
   179f0:	andeq	r0, r2, r8, ror #1
   179f4:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   179f8:	andeq	sl, r3, ip, lsr #19
   179fc:	ldrdeq	sl, [r3], -ip
   17a00:			; <UNDEFINED> instruction: 0x0003a9b4
   17a04:	andeq	r0, r2, r0, asr fp
   17a08:	ldr	r3, [pc, #284]	; 17b2c <tcgetattr@plt+0x5f44>
   17a0c:	ldrb	r3, [r3, #33]	; 0x21
   17a10:	tst	r3, #4
   17a14:	bxeq	lr
   17a18:	push	{lr}		; (str lr, [sp, #-4]!)
   17a1c:	sub	sp, sp, #28
   17a20:	bl	1311c <tcgetattr@plt+0x1534>
   17a24:	ldr	r3, [pc, #260]	; 17b30 <tcgetattr@plt+0x5f48>
   17a28:	ldr	r3, [r3]
   17a2c:	cmp	r0, r3
   17a30:	beq	17aa0 <tcgetattr@plt+0x5eb8>
   17a34:	bl	1311c <tcgetattr@plt+0x1534>
   17a38:	ldr	r3, [pc, #240]	; 17b30 <tcgetattr@plt+0x5f48>
   17a3c:	str	r0, [r3]
   17a40:	mov	r3, #240	; 0xf0
   17a44:	str	r3, [sp, #12]
   17a48:	mov	r2, #255	; 0xff
   17a4c:	str	r2, [sp, #8]
   17a50:	adds	r0, r0, #0
   17a54:	movne	r0, #1
   17a58:	str	r0, [sp, #4]
   17a5c:	mov	r3, #33	; 0x21
   17a60:	str	r3, [sp]
   17a64:	mov	r3, #250	; 0xfa
   17a68:	ldr	r1, [pc, #196]	; 17b34 <tcgetattr@plt+0x5f4c>
   17a6c:	add	r0, sp, #16
   17a70:	bl	11b04 <sprintf@plt>
   17a74:	mov	r1, #7
   17a78:	add	r0, sp, #16
   17a7c:	bl	14520 <tcgetattr@plt+0x2938>
   17a80:	ldr	r3, [pc, #176]	; 17b38 <tcgetattr@plt+0x5f50>
   17a84:	ldr	r3, [r3]
   17a88:	cmp	r3, #0
   17a8c:	ble	17aa0 <tcgetattr@plt+0x5eb8>
   17a90:	mov	r2, #5
   17a94:	add	r1, sp, #18
   17a98:	mov	r0, #62	; 0x3e
   17a9c:	bl	14bac <tcgetattr@plt+0x2fc4>
   17aa0:	bl	13134 <tcgetattr@plt+0x154c>
   17aa4:	ldr	r3, [pc, #144]	; 17b3c <tcgetattr@plt+0x5f54>
   17aa8:	ldr	r3, [r3]
   17aac:	cmp	r0, r3
   17ab0:	beq	17b24 <tcgetattr@plt+0x5f3c>
   17ab4:	bl	13134 <tcgetattr@plt+0x154c>
   17ab8:	ldr	r3, [pc, #124]	; 17b3c <tcgetattr@plt+0x5f54>
   17abc:	str	r0, [r3]
   17ac0:	cmp	r0, #0
   17ac4:	movne	r0, #2
   17ac8:	moveq	r0, #3
   17acc:	mov	r3, #240	; 0xf0
   17ad0:	str	r3, [sp, #12]
   17ad4:	mov	r2, #255	; 0xff
   17ad8:	str	r2, [sp, #8]
   17adc:	str	r0, [sp, #4]
   17ae0:	mov	r3, #33	; 0x21
   17ae4:	str	r3, [sp]
   17ae8:	mov	r3, #250	; 0xfa
   17aec:	ldr	r1, [pc, #64]	; 17b34 <tcgetattr@plt+0x5f4c>
   17af0:	add	r0, sp, #16
   17af4:	bl	11b04 <sprintf@plt>
   17af8:	mov	r1, #7
   17afc:	add	r0, sp, #16
   17b00:	bl	14520 <tcgetattr@plt+0x2938>
   17b04:	ldr	r3, [pc, #44]	; 17b38 <tcgetattr@plt+0x5f50>
   17b08:	ldr	r3, [r3]
   17b0c:	cmp	r3, #0
   17b10:	ble	17b24 <tcgetattr@plt+0x5f3c>
   17b14:	mov	r2, #5
   17b18:	add	r1, sp, #18
   17b1c:	mov	r0, #62	; 0x3e
   17b20:	bl	14bac <tcgetattr@plt+0x2fc4>
   17b24:	add	sp, sp, #28
   17b28:	pop	{pc}		; (ldr pc, [sp], #4)
   17b2c:	andeq	sl, r3, r4, lsl #14
   17b30:	ldrdeq	sl, [r3], -r4
   17b34:	andeq	r0, r2, r0, ror #1
   17b38:	andeq	sl, r3, r0, ror #13
   17b3c:	andeq	sl, r3, r4, ror #23
   17b40:	push	{r4, lr}
   17b44:	sub	sp, sp, #8
   17b48:	ldr	r3, [pc, #124]	; 17bcc <tcgetattr@plt+0x5fe4>
   17b4c:	ldr	r1, [r3]
   17b50:	cmn	r1, #1
   17b54:	beq	17b74 <tcgetattr@plt+0x5f8c>
   17b58:	mov	r4, r3
   17b5c:	ldr	r2, [r3, #4]
   17b60:	mov	r0, #32
   17b64:	bl	180b4 <tcgetattr@plt+0x64cc>
   17b68:	mov	r3, #0
   17b6c:	str	r3, [r4, #4]
   17b70:	str	r3, [r4]
   17b74:	ldr	r3, [pc, #84]	; 17bd0 <tcgetattr@plt+0x5fe8>
   17b78:	ldr	r3, [r3]
   17b7c:	cmp	r3, #0
   17b80:	bne	17b94 <tcgetattr@plt+0x5fac>
   17b84:	ldr	r2, [pc, #68]	; 17bd0 <tcgetattr@plt+0x5fe8>
   17b88:	ldr	r2, [r2, #4]
   17b8c:	cmp	r2, #0
   17b90:	beq	17bc0 <tcgetattr@plt+0x5fd8>
   17b94:	mov	r2, #0
   17b98:	str	r2, [sp, #4]
   17b9c:	strh	r3, [sp, #2]
   17ba0:	ldr	r3, [pc, #40]	; 17bd0 <tcgetattr@plt+0x5fe8>
   17ba4:	ldr	r3, [r3, #4]
   17ba8:	strh	r3, [sp]
   17bac:	mov	r2, sp
   17bb0:	ldr	r1, [pc, #28]	; 17bd4 <tcgetattr@plt+0x5fec>
   17bb4:	ldr	r3, [pc, #28]	; 17bd8 <tcgetattr@plt+0x5ff0>
   17bb8:	ldr	r0, [r3]
   17bbc:	bl	1a5ac <argp_parse@@Base+0xd04>
   17bc0:	bl	18b20 <tcgetattr@plt+0x6f38>
   17bc4:	add	sp, sp, #8
   17bc8:	pop	{r4, pc}
   17bcc:	andeq	r2, r3, ip, lsr #9
   17bd0:	andeq	sl, r3, r8, lsl #12
   17bd4:	andeq	r5, r0, r4, lsl r4
   17bd8:	ldrdeq	sl, [r3], -r0
   17bdc:	push	{r4, lr}
   17be0:	sub	sp, sp, #32
   17be4:	bl	131e8 <tcgetattr@plt+0x1600>
   17be8:	cmp	r0, #0
   17bec:	beq	17ce8 <tcgetattr@plt+0x6100>
   17bf0:	ldr	r3, [pc, #1172]	; 1808c <tcgetattr@plt+0x64a4>
   17bf4:	ldrb	r3, [r3]
   17bf8:	tst	r3, #8
   17bfc:	beq	17cd8 <tcgetattr@plt+0x60f0>
   17c00:	bl	13204 <tcgetattr@plt+0x161c>
   17c04:	cmp	r0, #0
   17c08:	beq	17d18 <tcgetattr@plt+0x6130>
   17c0c:	ldr	r3, [pc, #1144]	; 1808c <tcgetattr@plt+0x64a4>
   17c10:	ldrb	r3, [r3]
   17c14:	tst	r3, #2
   17c18:	beq	17d08 <tcgetattr@plt+0x6120>
   17c1c:	bl	17a08 <tcgetattr@plt+0x5e20>
   17c20:	bl	130d4 <tcgetattr@plt+0x14ec>
   17c24:	ldr	r3, [pc, #1124]	; 18090 <tcgetattr@plt+0x64a8>
   17c28:	str	r0, [r3]
   17c2c:	ldr	r3, [pc, #1120]	; 18094 <tcgetattr@plt+0x64ac>
   17c30:	ldr	r3, [r3]
   17c34:	cmp	r3, #0
   17c38:	beq	17c5c <tcgetattr@plt+0x6074>
   17c3c:	ldr	r3, [pc, #1108]	; 18098 <tcgetattr@plt+0x64b0>
   17c40:	ldr	r3, [r3]
   17c44:	adds	r3, r3, #0
   17c48:	movne	r3, #1
   17c4c:	cmp	r0, #0
   17c50:	movne	r3, #0
   17c54:	cmp	r3, #0
   17c58:	bne	17d38 <tcgetattr@plt+0x6150>
   17c5c:	ldr	r3, [pc, #1068]	; 18090 <tcgetattr@plt+0x64a8>
   17c60:	ldr	r4, [r3]
   17c64:	cmp	r4, #0
   17c68:	bne	17d4c <tcgetattr@plt+0x6164>
   17c6c:	ldr	r3, [pc, #1060]	; 18098 <tcgetattr@plt+0x64b0>
   17c70:	ldr	r3, [r3]
   17c74:	cmp	r3, #0
   17c78:	beq	17d7c <tcgetattr@plt+0x6194>
   17c7c:	ldr	r3, [pc, #1048]	; 1809c <tcgetattr@plt+0x64b4>
   17c80:	ldr	r3, [r3]
   17c84:	cmp	r3, #4
   17c88:	beq	17e3c <tcgetattr@plt+0x6254>
   17c8c:	cmp	r3, #1
   17c90:	beq	1807c <tcgetattr@plt+0x6494>
   17c94:	mov	r1, #1
   17c98:	mov	r0, r1
   17c9c:	bl	15f28 <tcgetattr@plt+0x4340>
   17ca0:	ldr	r3, [pc, #1000]	; 18090 <tcgetattr@plt+0x64a8>
   17ca4:	ldr	r2, [r3]
   17ca8:	ldr	r3, [pc, #1000]	; 18098 <tcgetattr@plt+0x64b0>
   17cac:	str	r2, [r3]
   17cb0:	cmp	r4, #0
   17cb4:	bne	17f88 <tcgetattr@plt+0x63a0>
   17cb8:	ldr	r3, [pc, #992]	; 180a0 <tcgetattr@plt+0x64b8>
   17cbc:	ldr	r3, [r3, #8]
   17cc0:	cmp	r3, #0
   17cc4:	beq	17f98 <tcgetattr@plt+0x63b0>
   17cc8:	bl	14368 <tcgetattr@plt+0x2780>
   17ccc:	bl	133dc <tcgetattr@plt+0x17f4>
   17cd0:	add	sp, sp, #32
   17cd4:	pop	{r4, pc}
   17cd8:	mov	r1, #1
   17cdc:	mov	r0, #0
   17ce0:	bl	15de8 <tcgetattr@plt+0x4200>
   17ce4:	b	17c00 <tcgetattr@plt+0x6018>
   17ce8:	ldr	r3, [pc, #924]	; 1808c <tcgetattr@plt+0x64a4>
   17cec:	ldrb	r3, [r3]
   17cf0:	tst	r3, #8
   17cf4:	beq	17c00 <tcgetattr@plt+0x6018>
   17cf8:	mov	r1, #1
   17cfc:	mov	r0, #0
   17d00:	bl	15e90 <tcgetattr@plt+0x42a8>
   17d04:	b	17c00 <tcgetattr@plt+0x6018>
   17d08:	mov	r1, #1
   17d0c:	mov	r0, #0
   17d10:	bl	15f28 <tcgetattr@plt+0x4340>
   17d14:	b	17c1c <tcgetattr@plt+0x6034>
   17d18:	ldr	r3, [pc, #876]	; 1808c <tcgetattr@plt+0x64a4>
   17d1c:	ldrb	r3, [r3]
   17d20:	tst	r3, #2
   17d24:	beq	17c1c <tcgetattr@plt+0x6034>
   17d28:	mov	r1, #1
   17d2c:	mov	r0, #0
   17d30:	bl	1628c <tcgetattr@plt+0x46a4>
   17d34:	b	17c1c <tcgetattr@plt+0x6034>
   17d38:	mov	r0, #1
   17d3c:	ldr	r3, [pc, #844]	; 18090 <tcgetattr@plt+0x64a8>
   17d40:	str	r0, [r3]
   17d44:	bl	130e8 <tcgetattr@plt+0x1500>
   17d48:	b	17c5c <tcgetattr@plt+0x6074>
   17d4c:	bl	13108 <tcgetattr@plt+0x1520>
   17d50:	cmp	r0, #0
   17d54:	moveq	r4, #1
   17d58:	bne	17de0 <tcgetattr@plt+0x61f8>
   17d5c:	ldr	r3, [pc, #824]	; 1809c <tcgetattr@plt+0x64b4>
   17d60:	ldr	r3, [r3]
   17d64:	cmp	r3, #3
   17d68:	beq	17df4 <tcgetattr@plt+0x620c>
   17d6c:	ldr	r3, [pc, #796]	; 18090 <tcgetattr@plt+0x64a8>
   17d70:	ldr	r3, [r3]
   17d74:	cmp	r3, #0
   17d78:	beq	17c6c <tcgetattr@plt+0x6084>
   17d7c:	ldr	r3, [pc, #792]	; 1809c <tcgetattr@plt+0x64b4>
   17d80:	ldr	r3, [r3]
   17d84:	cmp	r3, #4
   17d88:	beq	17e4c <tcgetattr@plt+0x6264>
   17d8c:	cmp	r3, #1
   17d90:	beq	17e10 <tcgetattr@plt+0x6228>
   17d94:	ldr	r3, [pc, #756]	; 18090 <tcgetattr@plt+0x64a8>
   17d98:	ldr	r3, [r3]
   17d9c:	cmp	r3, #0
   17da0:	beq	17f64 <tcgetattr@plt+0x637c>
   17da4:	ldr	r3, [pc, #748]	; 18098 <tcgetattr@plt+0x64b0>
   17da8:	ldr	r3, [r3]
   17dac:	cmp	r3, #0
   17db0:	bne	17fac <tcgetattr@plt+0x63c4>
   17db4:	ldr	r3, [pc, #736]	; 1809c <tcgetattr@plt+0x64b4>
   17db8:	ldr	r3, [r3]
   17dbc:	cmp	r3, #1
   17dc0:	beq	17ecc <tcgetattr@plt+0x62e4>
   17dc4:	cmp	r3, #4
   17dc8:	beq	17edc <tcgetattr@plt+0x62f4>
   17dcc:	ldr	r3, [pc, #700]	; 18090 <tcgetattr@plt+0x64a8>
   17dd0:	ldr	r2, [r3]
   17dd4:	ldr	r3, [pc, #700]	; 18098 <tcgetattr@plt+0x64b0>
   17dd8:	str	r2, [r3]
   17ddc:	b	17cb0 <tcgetattr@plt+0x60c8>
   17de0:	mov	r1, #1
   17de4:	mov	r0, r1
   17de8:	bl	1628c <tcgetattr@plt+0x46a4>
   17dec:	mov	r4, #0
   17df0:	b	17d5c <tcgetattr@plt+0x6174>
   17df4:	mov	r2, #1
   17df8:	ldr	r3, [pc, #668]	; 1809c <tcgetattr@plt+0x64b4>
   17dfc:	str	r2, [r3]
   17e00:	ldr	r3, [pc, #648]	; 18090 <tcgetattr@plt+0x64a8>
   17e04:	ldr	r3, [r3]
   17e08:	cmp	r3, #0
   17e0c:	beq	1806c <tcgetattr@plt+0x6484>
   17e10:	bl	1321c <tcgetattr@plt+0x1634>
   17e14:	cmp	r0, #0
   17e18:	beq	17e2c <tcgetattr@plt+0x6244>
   17e1c:	ldr	r3, [pc, #620]	; 18090 <tcgetattr@plt+0x64a8>
   17e20:	ldr	r3, [r3]
   17e24:	cmp	r3, #0
   17e28:	bne	17ebc <tcgetattr@plt+0x62d4>
   17e2c:	mov	r1, #1
   17e30:	mov	r0, #3
   17e34:	bl	15f28 <tcgetattr@plt+0x4340>
   17e38:	b	17d94 <tcgetattr@plt+0x61ac>
   17e3c:	mov	r1, #1
   17e40:	mov	r0, #34	; 0x22
   17e44:	bl	15e90 <tcgetattr@plt+0x42a8>
   17e48:	b	17c94 <tcgetattr@plt+0x60ac>
   17e4c:	mov	r2, #0
   17e50:	ldr	r3, [pc, #588]	; 180a4 <tcgetattr@plt+0x64bc>
   17e54:	str	r2, [r3]
   17e58:	bl	1321c <tcgetattr@plt+0x1634>
   17e5c:	cmp	r0, #0
   17e60:	ldrne	r2, [pc, #572]	; 180a4 <tcgetattr@plt+0x64bc>
   17e64:	ldrne	r3, [r2]
   17e68:	orrne	r3, r3, #1
   17e6c:	strne	r3, [r2]
   17e70:	bl	13230 <tcgetattr@plt+0x1648>
   17e74:	cmp	r0, #0
   17e78:	ldrne	r2, [pc, #548]	; 180a4 <tcgetattr@plt+0x64bc>
   17e7c:	ldrne	r3, [r2]
   17e80:	orrne	r3, r3, #2
   17e84:	strne	r3, [r2]
   17e88:	bl	13284 <tcgetattr@plt+0x169c>
   17e8c:	cmp	r0, #0
   17e90:	ldrne	r2, [pc, #524]	; 180a4 <tcgetattr@plt+0x64bc>
   17e94:	ldrne	r3, [r2]
   17e98:	orrne	r3, r3, #8
   17e9c:	strne	r3, [r2]
   17ea0:	bl	132c4 <tcgetattr@plt+0x16dc>
   17ea4:	cmp	r0, #0
   17ea8:	ldrne	r2, [pc, #500]	; 180a4 <tcgetattr@plt+0x64bc>
   17eac:	ldrne	r3, [r2]
   17eb0:	orrne	r3, r3, #16
   17eb4:	strne	r3, [r2]
   17eb8:	b	17d94 <tcgetattr@plt+0x61ac>
   17ebc:	mov	r1, #1
   17ec0:	mov	r0, #3
   17ec4:	bl	1628c <tcgetattr@plt+0x46a4>
   17ec8:	b	17d94 <tcgetattr@plt+0x61ac>
   17ecc:	mov	r1, #1
   17ed0:	mov	r0, #3
   17ed4:	bl	1628c <tcgetattr@plt+0x46a4>
   17ed8:	b	17dcc <tcgetattr@plt+0x61e4>
   17edc:	mov	r1, #1
   17ee0:	mov	r0, #34	; 0x22
   17ee4:	bl	15de8 <tcgetattr@plt+0x4200>
   17ee8:	mov	r3, #240	; 0xf0
   17eec:	str	r3, [sp, #16]
   17ef0:	mov	r2, #255	; 0xff
   17ef4:	str	r2, [sp, #12]
   17ef8:	ldr	r3, [pc, #420]	; 180a4 <tcgetattr@plt+0x64bc>
   17efc:	ldr	r3, [r3]
   17f00:	str	r3, [sp, #8]
   17f04:	mov	r3, #1
   17f08:	str	r3, [sp, #4]
   17f0c:	mov	r3, #34	; 0x22
   17f10:	str	r3, [sp]
   17f14:	mov	r3, #250	; 0xfa
   17f18:	ldr	r1, [pc, #392]	; 180a8 <tcgetattr@plt+0x64c0>
   17f1c:	add	r0, sp, #24
   17f20:	bl	11b04 <sprintf@plt>
   17f24:	mov	r1, #8
   17f28:	add	r0, sp, #24
   17f2c:	bl	14520 <tcgetattr@plt+0x2938>
   17f30:	ldr	r3, [pc, #372]	; 180ac <tcgetattr@plt+0x64c4>
   17f34:	ldr	r3, [r3]
   17f38:	cmp	r3, #0
   17f3c:	ble	17f50 <tcgetattr@plt+0x6368>
   17f40:	mov	r2, #6
   17f44:	add	r1, sp, #26
   17f48:	mov	r0, #62	; 0x3e
   17f4c:	bl	14bac <tcgetattr@plt+0x2fc4>
   17f50:	ldr	r3, [pc, #332]	; 180a4 <tcgetattr@plt+0x64bc>
   17f54:	ldr	r2, [r3]
   17f58:	ldr	r3, [pc, #336]	; 180b0 <tcgetattr@plt+0x64c8>
   17f5c:	str	r2, [r3]
   17f60:	b	17dcc <tcgetattr@plt+0x61e4>
   17f64:	ldr	r3, [pc, #304]	; 1809c <tcgetattr@plt+0x64b4>
   17f68:	ldr	r3, [r3]
   17f6c:	cmp	r3, #3
   17f70:	ble	17cb0 <tcgetattr@plt+0x60c8>
   17f74:	ldr	r3, [pc, #284]	; 18098 <tcgetattr@plt+0x64b0>
   17f78:	ldr	r3, [r3]
   17f7c:	cmp	r3, #0
   17f80:	beq	17cb0 <tcgetattr@plt+0x60c8>
   17f84:	b	17fbc <tcgetattr@plt+0x63d4>
   17f88:	mov	r1, #1
   17f8c:	mov	r0, r1
   17f90:	bl	15f28 <tcgetattr@plt+0x4340>
   17f94:	b	17cb8 <tcgetattr@plt+0x60d0>
   17f98:	mov	r2, #1
   17f9c:	ldr	r3, [pc, #252]	; 180a0 <tcgetattr@plt+0x64b8>
   17fa0:	str	r2, [r3, #8]
   17fa4:	bl	17b40 <tcgetattr@plt+0x5f58>
   17fa8:	b	17cc8 <tcgetattr@plt+0x60e0>
   17fac:	ldr	r3, [pc, #232]	; 1809c <tcgetattr@plt+0x64b4>
   17fb0:	ldr	r3, [r3]
   17fb4:	cmp	r3, #3
   17fb8:	ble	17cb0 <tcgetattr@plt+0x60c8>
   17fbc:	ldr	r3, [pc, #200]	; 1808c <tcgetattr@plt+0x64a4>
   17fc0:	ldrb	r3, [r3, #34]	; 0x22
   17fc4:	tst	r3, #4
   17fc8:	beq	17cb0 <tcgetattr@plt+0x60c8>
   17fcc:	ldr	r3, [pc, #208]	; 180a4 <tcgetattr@plt+0x64bc>
   17fd0:	ldr	r3, [r3]
   17fd4:	ldr	r2, [pc, #212]	; 180b0 <tcgetattr@plt+0x64c8>
   17fd8:	ldr	r2, [r2]
   17fdc:	cmp	r3, r2
   17fe0:	beq	18054 <tcgetattr@plt+0x646c>
   17fe4:	mov	r2, #240	; 0xf0
   17fe8:	str	r2, [sp, #16]
   17fec:	mov	r2, #255	; 0xff
   17ff0:	str	r2, [sp, #12]
   17ff4:	str	r3, [sp, #8]
   17ff8:	mov	r3, #1
   17ffc:	str	r3, [sp, #4]
   18000:	mov	r3, #34	; 0x22
   18004:	str	r3, [sp]
   18008:	mov	r3, #250	; 0xfa
   1800c:	ldr	r1, [pc, #148]	; 180a8 <tcgetattr@plt+0x64c0>
   18010:	add	r0, sp, #24
   18014:	bl	11b04 <sprintf@plt>
   18018:	mov	r1, #8
   1801c:	add	r0, sp, #24
   18020:	bl	14520 <tcgetattr@plt+0x2938>
   18024:	ldr	r3, [pc, #128]	; 180ac <tcgetattr@plt+0x64c4>
   18028:	ldr	r3, [r3]
   1802c:	cmp	r3, #0
   18030:	ble	18044 <tcgetattr@plt+0x645c>
   18034:	mov	r2, #6
   18038:	add	r1, sp, #26
   1803c:	mov	r0, #62	; 0x3e
   18040:	bl	14bac <tcgetattr@plt+0x2fc4>
   18044:	ldr	r3, [pc, #88]	; 180a4 <tcgetattr@plt+0x64bc>
   18048:	ldr	r2, [r3]
   1804c:	ldr	r3, [pc, #92]	; 180b0 <tcgetattr@plt+0x64c8>
   18050:	str	r2, [r3]
   18054:	mov	r0, #0
   18058:	bl	18690 <tcgetattr@plt+0x6aa8>
   1805c:	bl	189bc <tcgetattr@plt+0x6dd4>
   18060:	mov	r0, #0
   18064:	bl	186f4 <tcgetattr@plt+0x6b0c>
   18068:	b	17cb0 <tcgetattr@plt+0x60c8>
   1806c:	ldr	r3, [pc, #36]	; 18098 <tcgetattr@plt+0x64b0>
   18070:	ldr	r3, [r3]
   18074:	cmp	r3, #0
   18078:	beq	17d7c <tcgetattr@plt+0x6194>
   1807c:	mov	r1, #1
   18080:	mov	r0, #3
   18084:	bl	15f28 <tcgetattr@plt+0x4340>
   18088:	b	17c94 <tcgetattr@plt+0x60ac>
   1808c:	andeq	sl, r3, r4, lsl #14
   18090:	andeq	sl, r3, r8, lsr #19
   18094:	strdeq	sl, [r3], -r8
   18098:			; <UNDEFINED> instruction: 0x0003a9b0
   1809c:	strdeq	sl, [r3], -ip
   180a0:	andeq	sl, r3, r8, lsl #12
   180a4:	ldrdeq	sl, [r3], -r8
   180a8:	andeq	r0, r2, ip, ror #22
   180ac:	andeq	sl, r3, r0, ror #13
   180b0:	andeq	sl, r3, r8, lsl #18
   180b4:	push	{r4, r5, r6, lr}
   180b8:	sub	sp, sp, #32
   180bc:	mov	r4, r0
   180c0:	mov	r5, r1
   180c4:	mov	r6, r2
   180c8:	bl	13314 <tcgetattr@plt+0x172c>
   180cc:	sub	r0, r4, #1
   180d0:	cmp	r0, #33	; 0x21
   180d4:	ldrls	pc, [pc, r0, lsl #2]
   180d8:	b	1837c <tcgetattr@plt+0x6794>
   180dc:	andeq	r8, r1, r4, lsl r3
   180e0:	andeq	r8, r1, ip, ror r3
   180e4:	andeq	r8, r1, ip, ror r3
   180e8:	andeq	r8, r1, ip, ror r3
   180ec:	andeq	r8, r1, ip, ror r3
   180f0:	andeq	r8, r1, ip, ror r3
   180f4:	andeq	r8, r1, ip, ror r3
   180f8:	andeq	r8, r1, ip, ror r3
   180fc:	andeq	r8, r1, ip, ror r3
   18100:	andeq	r8, r1, ip, ror r3
   18104:	andeq	r8, r1, ip, ror r3
   18108:	andeq	r8, r1, ip, ror r3
   1810c:	andeq	r8, r1, ip, ror r3
   18110:	andeq	r8, r1, ip, ror r3
   18114:	andeq	r8, r1, ip, ror r3
   18118:	andeq	r8, r1, ip, ror r3
   1811c:	andeq	r8, r1, ip, ror r3
   18120:	andeq	r8, r1, ip, ror r3
   18124:	andeq	r8, r1, ip, ror r3
   18128:	andeq	r8, r1, ip, ror r3
   1812c:	andeq	r8, r1, ip, ror r3
   18130:	andeq	r8, r1, ip, ror r3
   18134:	andeq	r8, r1, ip, ror r3
   18138:	andeq	r8, r1, ip, ror r3
   1813c:	andeq	r8, r1, ip, ror r3
   18140:	andeq	r8, r1, ip, ror r3
   18144:	andeq	r8, r1, ip, ror r3
   18148:	andeq	r8, r1, ip, ror r3
   1814c:	andeq	r8, r1, ip, ror r3
   18150:	andeq	r8, r1, ip, ror r3
   18154:	andeq	r8, r1, r0, asr r4
   18158:	andeq	r8, r1, r8, lsl #9
   1815c:	andeq	r8, r1, ip, ror r3
   18160:	andeq	r8, r1, r4, ror #2
   18164:	cmp	r5, #251	; 0xfb
   18168:	movne	r5, #0
   1816c:	moveq	r5, #1
   18170:	ldr	r3, [pc, #836]	; 184bc <tcgetattr@plt+0x68d4>
   18174:	str	r5, [r3]
   18178:	ldr	r3, [pc, #832]	; 184c0 <tcgetattr@plt+0x68d8>
   1817c:	ldr	r3, [r3]
   18180:	cmp	r5, r3
   18184:	beq	1837c <tcgetattr@plt+0x6794>
   18188:	ldr	r3, [pc, #820]	; 184c4 <tcgetattr@plt+0x68dc>
   1818c:	ldr	r3, [r3]
   18190:	cmp	r3, #1
   18194:	beq	181ec <tcgetattr@plt+0x6604>
   18198:	ldr	r3, [pc, #804]	; 184c4 <tcgetattr@plt+0x68dc>
   1819c:	ldr	r3, [r3]
   181a0:	cmp	r3, #4
   181a4:	movne	r3, #0
   181a8:	moveq	r3, #1
   181ac:	cmp	r5, #0
   181b0:	moveq	r3, #0
   181b4:	cmp	r3, #0
   181b8:	bne	1822c <tcgetattr@plt+0x6644>
   181bc:	ldr	r4, [pc, #760]	; 184bc <tcgetattr@plt+0x68d4>
   181c0:	ldr	r0, [r4]
   181c4:	bl	130e8 <tcgetattr@plt+0x1500>
   181c8:	ldr	r3, [r4]
   181cc:	ldr	r2, [pc, #748]	; 184c0 <tcgetattr@plt+0x68d8>
   181d0:	str	r3, [r2]
   181d4:	cmp	r3, #0
   181d8:	bne	1837c <tcgetattr@plt+0x6794>
   181dc:	mov	r1, #1
   181e0:	mov	r0, r1
   181e4:	bl	15f28 <tcgetattr@plt+0x4340>
   181e8:	b	1837c <tcgetattr@plt+0x6794>
   181ec:	ldr	r3, [pc, #724]	; 184c8 <tcgetattr@plt+0x68e0>
   181f0:	ldr	r3, [r3]
   181f4:	cmp	r3, #0
   181f8:	beq	18198 <tcgetattr@plt+0x65b0>
   181fc:	bl	1321c <tcgetattr@plt+0x1634>
   18200:	cmp	r0, #0
   18204:	movne	r2, #1
   18208:	ldrne	r3, [pc, #684]	; 184bc <tcgetattr@plt+0x68d4>
   1820c:	strne	r2, [r3]
   18210:	ldr	r3, [pc, #676]	; 184bc <tcgetattr@plt+0x68d4>
   18214:	ldr	r5, [r3]
   18218:	ldr	r3, [pc, #672]	; 184c0 <tcgetattr@plt+0x68d8>
   1821c:	ldr	r3, [r3]
   18220:	cmp	r5, r3
   18224:	beq	18380 <tcgetattr@plt+0x6798>
   18228:	b	18198 <tcgetattr@plt+0x65b0>
   1822c:	mov	r2, #0
   18230:	ldr	r3, [pc, #660]	; 184cc <tcgetattr@plt+0x68e4>
   18234:	str	r2, [r3]
   18238:	bl	1321c <tcgetattr@plt+0x1634>
   1823c:	cmp	r0, #0
   18240:	ldrne	r2, [pc, #644]	; 184cc <tcgetattr@plt+0x68e4>
   18244:	ldrne	r3, [r2]
   18248:	orrne	r3, r3, #1
   1824c:	strne	r3, [r2]
   18250:	bl	13230 <tcgetattr@plt+0x1648>
   18254:	cmp	r0, #0
   18258:	ldrne	r2, [pc, #620]	; 184cc <tcgetattr@plt+0x68e4>
   1825c:	ldrne	r3, [r2]
   18260:	orrne	r3, r3, #2
   18264:	strne	r3, [r2]
   18268:	bl	13284 <tcgetattr@plt+0x169c>
   1826c:	cmp	r0, #0
   18270:	ldrne	r2, [pc, #596]	; 184cc <tcgetattr@plt+0x68e4>
   18274:	ldrne	r3, [r2]
   18278:	orrne	r3, r3, #8
   1827c:	strne	r3, [r2]
   18280:	bl	132c4 <tcgetattr@plt+0x16dc>
   18284:	cmp	r0, #0
   18288:	ldrne	r2, [pc, #572]	; 184cc <tcgetattr@plt+0x68e4>
   1828c:	ldrne	r3, [r2]
   18290:	orrne	r3, r3, #16
   18294:	strne	r3, [r2]
   18298:	mov	r3, #240	; 0xf0
   1829c:	str	r3, [sp, #16]
   182a0:	mov	r2, #255	; 0xff
   182a4:	str	r2, [sp, #12]
   182a8:	ldr	r3, [pc, #540]	; 184cc <tcgetattr@plt+0x68e4>
   182ac:	ldr	r3, [r3]
   182b0:	str	r3, [sp, #8]
   182b4:	mov	r3, #1
   182b8:	str	r3, [sp, #4]
   182bc:	mov	r3, #34	; 0x22
   182c0:	str	r3, [sp]
   182c4:	mov	r3, #250	; 0xfa
   182c8:	ldr	r1, [pc, #512]	; 184d0 <tcgetattr@plt+0x68e8>
   182cc:	add	r0, sp, #24
   182d0:	bl	11b04 <sprintf@plt>
   182d4:	mov	r1, #8
   182d8:	add	r0, sp, #24
   182dc:	bl	14520 <tcgetattr@plt+0x2938>
   182e0:	ldr	r3, [pc, #492]	; 184d4 <tcgetattr@plt+0x68ec>
   182e4:	ldr	r3, [r3]
   182e8:	cmp	r3, #0
   182ec:	ble	18300 <tcgetattr@plt+0x6718>
   182f0:	mov	r2, #6
   182f4:	add	r1, sp, #26
   182f8:	mov	r0, #62	; 0x3e
   182fc:	bl	14bac <tcgetattr@plt+0x2fc4>
   18300:	ldr	r3, [pc, #452]	; 184cc <tcgetattr@plt+0x68e4>
   18304:	ldr	r2, [r3]
   18308:	ldr	r3, [pc, #456]	; 184d8 <tcgetattr@plt+0x68f0>
   1830c:	str	r2, [r3]
   18310:	b	181bc <tcgetattr@plt+0x65d4>
   18314:	ldr	r2, [pc, #432]	; 184cc <tcgetattr@plt+0x68e4>
   18318:	ldr	r3, [r2]
   1831c:	and	r4, r3, #27
   18320:	str	r4, [r2]
   18324:	ldr	r2, [pc, #428]	; 184d8 <tcgetattr@plt+0x68f0>
   18328:	ldr	r6, [r2]
   1832c:	cmp	r4, r6
   18330:	beq	1837c <tcgetattr@plt+0x6794>
   18334:	ands	r5, r3, #4
   18338:	bne	18388 <tcgetattr@plt+0x67a0>
   1833c:	eor	r4, r4, r6
   18340:	tst	r4, #1
   18344:	bne	18390 <tcgetattr@plt+0x67a8>
   18348:	tst	r4, #2
   1834c:	bne	183a4 <tcgetattr@plt+0x67bc>
   18350:	tst	r4, #8
   18354:	bne	183b8 <tcgetattr@plt+0x67d0>
   18358:	tst	r4, #16
   1835c:	bne	183cc <tcgetattr@plt+0x67e4>
   18360:	bl	133dc <tcgetattr@plt+0x17f4>
   18364:	cmp	r5, #0
   18368:	beq	183e0 <tcgetattr@plt+0x67f8>
   1836c:	ldr	r3, [pc, #344]	; 184cc <tcgetattr@plt+0x68e4>
   18370:	ldr	r2, [r3]
   18374:	ldr	r3, [pc, #348]	; 184d8 <tcgetattr@plt+0x68f0>
   18378:	str	r2, [r3]
   1837c:	bl	14368 <tcgetattr@plt+0x2780>
   18380:	add	sp, sp, #32
   18384:	pop	{r4, r5, r6, pc}
   18388:	bl	17bdc <tcgetattr@plt+0x5ff4>
   1838c:	b	1833c <tcgetattr@plt+0x6754>
   18390:	ldr	r3, [pc, #308]	; 184cc <tcgetattr@plt+0x68e4>
   18394:	ldr	r0, [r3]
   18398:	and	r0, r0, #1
   1839c:	bl	13244 <tcgetattr@plt+0x165c>
   183a0:	b	18348 <tcgetattr@plt+0x6760>
   183a4:	ldr	r3, [pc, #288]	; 184cc <tcgetattr@plt+0x68e4>
   183a8:	ldr	r0, [r3]
   183ac:	and	r0, r0, #2
   183b0:	bl	13264 <tcgetattr@plt+0x167c>
   183b4:	b	18350 <tcgetattr@plt+0x6768>
   183b8:	ldr	r3, [pc, #268]	; 184cc <tcgetattr@plt+0x68e4>
   183bc:	ldr	r0, [r3]
   183c0:	and	r0, r0, #8
   183c4:	bl	132a4 <tcgetattr@plt+0x16bc>
   183c8:	b	18358 <tcgetattr@plt+0x6770>
   183cc:	ldr	r3, [pc, #248]	; 184cc <tcgetattr@plt+0x68e4>
   183d0:	ldr	r0, [r3]
   183d4:	and	r0, r0, #16
   183d8:	bl	132e0 <tcgetattr@plt+0x16f8>
   183dc:	b	18360 <tcgetattr@plt+0x6778>
   183e0:	mov	r3, #240	; 0xf0
   183e4:	str	r3, [sp, #16]
   183e8:	mov	r2, #255	; 0xff
   183ec:	str	r2, [sp, #12]
   183f0:	ldr	r3, [pc, #212]	; 184cc <tcgetattr@plt+0x68e4>
   183f4:	ldr	r3, [r3]
   183f8:	orr	r3, r3, #4
   183fc:	str	r3, [sp, #8]
   18400:	mov	r3, #1
   18404:	str	r3, [sp, #4]
   18408:	mov	r3, #34	; 0x22
   1840c:	str	r3, [sp]
   18410:	mov	r3, #250	; 0xfa
   18414:	ldr	r1, [pc, #180]	; 184d0 <tcgetattr@plt+0x68e8>
   18418:	add	r0, sp, #24
   1841c:	bl	11b04 <sprintf@plt>
   18420:	mov	r1, #8
   18424:	add	r0, sp, #24
   18428:	bl	14520 <tcgetattr@plt+0x2938>
   1842c:	ldr	r3, [pc, #160]	; 184d4 <tcgetattr@plt+0x68ec>
   18430:	ldr	r3, [r3]
   18434:	cmp	r3, #0
   18438:	ble	1836c <tcgetattr@plt+0x6784>
   1843c:	mov	r2, #6
   18440:	add	r1, sp, #26
   18444:	mov	r0, #62	; 0x3e
   18448:	bl	14bac <tcgetattr@plt+0x2fc4>
   1844c:	b	1836c <tcgetattr@plt+0x6784>
   18450:	ldr	r3, [pc, #132]	; 184dc <tcgetattr@plt+0x68f4>
   18454:	str	r5, [r3]
   18458:	str	r6, [r3, #4]
   1845c:	ldr	r3, [r3, #8]
   18460:	cmp	r3, #0
   18464:	beq	18380 <tcgetattr@plt+0x6798>
   18468:	strh	r5, [sp, #26]
   1846c:	add	r2, sp, #32
   18470:	strh	r6, [r2, #-8]!
   18474:	ldr	r1, [pc, #100]	; 184e0 <tcgetattr@plt+0x68f8>
   18478:	ldr	r3, [pc, #100]	; 184e4 <tcgetattr@plt+0x68fc>
   1847c:	ldr	r0, [r3]
   18480:	bl	1a5ac <argp_parse@@Base+0xd04>
   18484:	b	1837c <tcgetattr@plt+0x6794>
   18488:	ldr	r3, [pc, #88]	; 184e8 <tcgetattr@plt+0x6900>
   1848c:	str	r5, [r3]
   18490:	str	r6, [r3, #4]
   18494:	ldr	r3, [pc, #64]	; 184dc <tcgetattr@plt+0x68f4>
   18498:	ldr	r3, [r3, #8]
   1849c:	cmp	r3, #0
   184a0:	beq	18380 <tcgetattr@plt+0x6798>
   184a4:	mov	r0, r6
   184a8:	bl	13654 <tcgetattr@plt+0x1a6c>
   184ac:	mov	r0, r5
   184b0:	bl	13600 <tcgetattr@plt+0x1a18>
   184b4:	bl	133dc <tcgetattr@plt+0x17f4>
   184b8:	b	1837c <tcgetattr@plt+0x6794>
   184bc:	andeq	sl, r3, r8, lsr #19
   184c0:			; <UNDEFINED> instruction: 0x0003a9b0
   184c4:	strdeq	sl, [r3], -ip
   184c8:	strdeq	sl, [r3], -r8
   184cc:	ldrdeq	sl, [r3], -r8
   184d0:	andeq	r0, r2, ip, ror #22
   184d4:	andeq	sl, r3, r0, ror #13
   184d8:	andeq	sl, r3, r8, lsl #18
   184dc:	andeq	sl, r3, r8, lsl #12
   184e0:	andeq	r5, r0, r4, lsl r4
   184e4:	ldrdeq	sl, [r3], -r0
   184e8:	andeq	r2, r3, ip, lsr #9
   184ec:	ldr	r3, [pc, #4]	; 184f8 <tcgetattr@plt+0x6910>
   184f0:	ldr	r0, [r3, #8]
   184f4:	bx	lr
   184f8:	andeq	sl, r3, r8, lsl #12
   184fc:	push	{lr}		; (str lr, [sp, #-4]!)
   18500:	ldr	r3, [pc, #68]	; 1854c <tcgetattr@plt+0x6964>
   18504:	add	r0, r3, #144	; 0x90
   18508:	mov	lr, #0
   1850c:	ldrb	r2, [r3, #9]
   18510:	strb	r2, [r3, #11]
   18514:	cmp	r2, #0
   18518:	strbeq	lr, [r3, #10]
   1851c:	ldrbne	ip, [r3, #8]
   18520:	strbne	ip, [r3, #10]
   18524:	ldr	r1, [r3, #12]
   18528:	cmp	r1, #0
   1852c:	strbne	r2, [r1]
   18530:	add	r3, r3, #8
   18534:	cmp	r3, r0
   18538:	bne	1850c <tcgetattr@plt+0x6924>
   1853c:	mov	r2, #1
   18540:	ldr	r3, [pc, #8]	; 18550 <tcgetattr@plt+0x6968>
   18544:	str	r2, [r3]
   18548:	pop	{pc}		; (ldr pc, [sp], #4)
   1854c:	andeq	sl, r3, ip, lsl #18
   18550:	andeq	sl, r3, r4, lsl r6
   18554:	push	{r4, r5, r6, lr}
   18558:	bl	13314 <tcgetattr@plt+0x172c>
   1855c:	ldr	r4, [pc, #52]	; 18598 <tcgetattr@plt+0x69b0>
   18560:	mov	r5, #1
   18564:	mov	r6, #0
   18568:	add	r2, r4, #3
   1856c:	mov	r1, r4
   18570:	mov	r0, r5
   18574:	bl	1341c <tcgetattr@plt+0x1834>
   18578:	strb	r0, [r4, #-1]
   1857c:	strb	r6, [r4, #1]
   18580:	strb	r6, [r4, #2]
   18584:	add	r5, r5, #1
   18588:	add	r4, r4, #8
   1858c:	cmp	r5, #19
   18590:	bne	18568 <tcgetattr@plt+0x6980>
   18594:	pop	{r4, r5, r6, pc}
   18598:	andeq	sl, r3, r5, lsl r9
   1859c:	push	{lr}		; (str lr, [sp, #-4]!)
   185a0:	ldr	ip, [pc, #128]	; 18628 <tcgetattr@plt+0x6a40>
   185a4:	ldr	r3, [ip, #4]
   185a8:	add	lr, r3, #1
   185ac:	str	lr, [ip, #4]
   185b0:	strb	r0, [r3]
   185b4:	cmp	r0, #255	; 0xff
   185b8:	addeq	ip, r3, #2
   185bc:	ldreq	r0, [pc, #100]	; 18628 <tcgetattr@plt+0x6a40>
   185c0:	streq	ip, [r0, #4]
   185c4:	mvneq	r0, #0
   185c8:	strbeq	r0, [r3, #1]
   185cc:	ldr	r0, [pc, #84]	; 18628 <tcgetattr@plt+0x6a40>
   185d0:	ldr	r3, [r0, #4]
   185d4:	add	ip, r3, #1
   185d8:	str	ip, [r0, #4]
   185dc:	strb	r1, [r3]
   185e0:	cmp	r1, #255	; 0xff
   185e4:	addeq	r0, r3, #2
   185e8:	ldreq	r1, [pc, #56]	; 18628 <tcgetattr@plt+0x6a40>
   185ec:	streq	r0, [r1, #4]
   185f0:	mvneq	r1, #0
   185f4:	strbeq	r1, [r3, #1]
   185f8:	ldr	r1, [pc, #40]	; 18628 <tcgetattr@plt+0x6a40>
   185fc:	ldr	r3, [r1, #4]
   18600:	add	r0, r3, #1
   18604:	str	r0, [r1, #4]
   18608:	strb	r2, [r3]
   1860c:	cmp	r2, #255	; 0xff
   18610:	addeq	r1, r3, #2
   18614:	ldreq	r2, [pc, #12]	; 18628 <tcgetattr@plt+0x6a40>
   18618:	streq	r1, [r2, #4]
   1861c:	mvneq	r2, #0
   18620:	strbeq	r2, [r3, #1]
   18624:	pop	{pc}		; (ldr pc, [sp], #4)
   18628:	andeq	sl, r3, r4, lsl r6
   1862c:	push	{r4, r5, r6, lr}
   18630:	ldr	r5, [pc, #84]	; 1868c <tcgetattr@plt+0x6aa4>
   18634:	mov	r4, #1
   18638:	mov	r6, #0
   1863c:	b	1865c <tcgetattr@plt+0x6a74>
   18640:	ldrb	r2, [r5, #11]
   18644:	uxtb	r0, r4
   18648:	bl	1859c <tcgetattr@plt+0x69b4>
   1864c:	add	r4, r4, #1
   18650:	add	r5, r5, #8
   18654:	cmp	r4, #19
   18658:	beq	18688 <tcgetattr@plt+0x6aa0>
   1865c:	ldrb	r1, [r5, #10]
   18660:	tst	r1, #3
   18664:	bne	18640 <tcgetattr@plt+0x6a58>
   18668:	sub	r3, r4, #10
   1866c:	cmp	r3, #4
   18670:	bhi	1864c <tcgetattr@plt+0x6a64>
   18674:	mov	r2, r6
   18678:	orr	r1, r1, #3
   1867c:	uxtb	r0, r4
   18680:	bl	1859c <tcgetattr@plt+0x69b4>
   18684:	b	1864c <tcgetattr@plt+0x6a64>
   18688:	pop	{r4, r5, r6, pc}
   1868c:	andeq	sl, r3, ip, lsl #18
   18690:	push	{r4, lr}
   18694:	sub	sp, sp, #8
   18698:	mov	r2, #0
   1869c:	ldr	r3, [pc, #72]	; 186ec <tcgetattr@plt+0x6b04>
   186a0:	str	r2, [r3]
   186a4:	cmp	r0, r2
   186a8:	bne	186e4 <tcgetattr@plt+0x6afc>
   186ac:	ldr	r4, [pc, #56]	; 186ec <tcgetattr@plt+0x6b04>
   186b0:	mov	r3, #3
   186b4:	str	r3, [sp, #4]
   186b8:	mov	r3, #34	; 0x22
   186bc:	str	r3, [sp]
   186c0:	mov	r3, #250	; 0xfa
   186c4:	mov	r2, #255	; 0xff
   186c8:	ldr	r1, [pc, #32]	; 186f0 <tcgetattr@plt+0x6b08>
   186cc:	add	r0, r4, #8
   186d0:	bl	11b04 <sprintf@plt>
   186d4:	add	r3, r4, #12
   186d8:	str	r3, [r4, #4]
   186dc:	add	sp, sp, #8
   186e0:	pop	{r4, pc}
   186e4:	bl	13314 <tcgetattr@plt+0x172c>
   186e8:	b	186ac <tcgetattr@plt+0x6ac4>
   186ec:	andeq	sl, r3, r4, lsl r6
   186f0:	andeq	r0, r2, r4, ror #1
   186f4:	push	{r4, lr}
   186f8:	mov	r4, r0
   186fc:	ldr	r3, [pc, #204]	; 187d0 <tcgetattr@plt+0x6be8>
   18700:	ldr	r3, [r3]
   18704:	cmp	r3, #0
   18708:	bne	1875c <tcgetattr@plt+0x6b74>
   1870c:	ldr	r3, [pc, #188]	; 187d0 <tcgetattr@plt+0x6be8>
   18710:	ldr	r3, [r3, #116]	; 0x74
   18714:	cmp	r3, #0
   18718:	beq	18728 <tcgetattr@plt+0x6b40>
   1871c:	bl	184ec <tcgetattr@plt+0x6904>
   18720:	cmp	r0, #0
   18724:	popeq	{r4, pc}
   18728:	ldr	r3, [pc, #160]	; 187d0 <tcgetattr@plt+0x6be8>
   1872c:	ldr	r0, [r3, #4]
   18730:	add	r3, r3, #12
   18734:	cmp	r0, r3
   18738:	bls	187c0 <tcgetattr@plt+0x6bd8>
   1873c:	cmp	r4, #0
   18740:	beq	18764 <tcgetattr@plt+0x6b7c>
   18744:	sub	r2, r3, #12
   18748:	str	r3, [r4]
   1874c:	mvn	r3, #11
   18750:	sub	r3, r3, r2
   18754:	add	r0, r0, r3
   18758:	pop	{r4, pc}
   1875c:	bl	133dc <tcgetattr@plt+0x17f4>
   18760:	b	1870c <tcgetattr@plt+0x6b24>
   18764:	mov	r3, #240	; 0xf0
   18768:	mov	r2, #255	; 0xff
   1876c:	ldr	r1, [pc, #96]	; 187d4 <tcgetattr@plt+0x6bec>
   18770:	bl	11b04 <sprintf@plt>
   18774:	ldr	r0, [pc, #84]	; 187d0 <tcgetattr@plt+0x6be8>
   18778:	ldr	r3, [r0, #4]
   1877c:	add	r3, r3, #2
   18780:	str	r3, [r0, #4]
   18784:	add	r0, r0, #8
   18788:	sub	r4, r3, r0
   1878c:	mov	r1, r4
   18790:	bl	14520 <tcgetattr@plt+0x2938>
   18794:	bl	14368 <tcgetattr@plt+0x2780>
   18798:	ldr	r3, [pc, #56]	; 187d8 <tcgetattr@plt+0x6bf0>
   1879c:	ldr	r3, [r3]
   187a0:	cmp	r3, #0
   187a4:	ble	187c8 <tcgetattr@plt+0x6be0>
   187a8:	sub	r2, r4, #2
   187ac:	ldr	r1, [pc, #40]	; 187dc <tcgetattr@plt+0x6bf4>
   187b0:	mov	r0, #62	; 0x3e
   187b4:	bl	14bac <tcgetattr@plt+0x2fc4>
   187b8:	mov	r0, #0
   187bc:	pop	{r4, pc}
   187c0:	mov	r0, #0
   187c4:	pop	{r4, pc}
   187c8:	mov	r0, #0
   187cc:	pop	{r4, pc}
   187d0:	andeq	sl, r3, r4, lsl r6
   187d4:	andeq	r0, r2, r8, ror #1
   187d8:	andeq	sl, r3, r0, ror #13
   187dc:	andeq	sl, r3, lr, lsl r6
   187e0:	push	{r4, lr}
   187e4:	ldr	r3, [pc, #288]	; 1890c <tcgetattr@plt+0x6d24>
   187e8:	ldrb	r3, [r3, r0, lsl #3]
   187ec:	ands	ip, r1, #3
   187f0:	beq	18840 <tcgetattr@plt+0x6c58>
   187f4:	and	lr, r3, #3
   187f8:	cmp	ip, #3
   187fc:	beq	18860 <tcgetattr@plt+0x6c78>
   18800:	ldr	r3, [pc, #260]	; 1890c <tcgetattr@plt+0x6d24>
   18804:	add	r3, r3, r0, lsl #3
   18808:	ldr	r4, [r3, #4]
   1880c:	cmp	r4, #0
   18810:	beq	1889c <tcgetattr@plt+0x6cb4>
   18814:	ldr	r3, [pc, #240]	; 1890c <tcgetattr@plt+0x6d24>
   18818:	add	r3, r3, r0, lsl #3
   1881c:	strb	r2, [r3, #3]
   18820:	strb	r2, [r4]
   18824:	strb	r1, [r3, #2]
   18828:	mov	ip, #1
   1882c:	ldr	r3, [pc, #220]	; 18910 <tcgetattr@plt+0x6d28>
   18830:	str	ip, [r3]
   18834:	orr	r1, r1, #128	; 0x80
   18838:	bl	1859c <tcgetattr@plt+0x69b4>
   1883c:	pop	{r4, pc}
   18840:	ldr	r3, [pc, #196]	; 1890c <tcgetattr@plt+0x6d24>
   18844:	add	r3, r3, r0, lsl #3
   18848:	strb	r1, [r3, #2]
   1884c:	mov	ip, #0
   18850:	strb	ip, [r3, #3]
   18854:	orr	r1, r1, #128	; 0x80
   18858:	bl	1859c <tcgetattr@plt+0x69b4>
   1885c:	pop	{r4, pc}
   18860:	cmp	lr, #3
   18864:	ldreq	r3, [pc, #160]	; 1890c <tcgetattr@plt+0x6d24>
   18868:	addeq	r3, r3, r0, lsl #3
   1886c:	moveq	r2, #0
   18870:	strbeq	r2, [r3, #2]
   18874:	ldrne	r2, [pc, #144]	; 1890c <tcgetattr@plt+0x6d24>
   18878:	addne	r2, r2, r0, lsl #3
   1887c:	strbne	r3, [r2, #2]
   18880:	ldr	r3, [pc, #132]	; 1890c <tcgetattr@plt+0x6d24>
   18884:	add	r3, r3, r0, lsl #3
   18888:	ldrb	r2, [r3, #1]
   1888c:	strb	r2, [r3, #3]
   18890:	ldrb	r1, [r3, #2]
   18894:	bl	1859c <tcgetattr@plt+0x69b4>
   18898:	pop	{r4, pc}
   1889c:	cmp	lr, #3
   188a0:	beq	188c8 <tcgetattr@plt+0x6ce0>
   188a4:	cmp	ip, #1
   188a8:	cmpeq	lr, #1
   188ac:	bne	188e0 <tcgetattr@plt+0x6cf8>
   188b0:	and	r1, r1, #252	; 0xfc
   188b4:	ldr	r3, [pc, #80]	; 1890c <tcgetattr@plt+0x6d24>
   188b8:	add	r3, r3, r0, lsl #3
   188bc:	strb	r1, [r3, #2]
   188c0:	bl	1859c <tcgetattr@plt+0x69b4>
   188c4:	pop	{r4, pc}
   188c8:	ldr	r3, [pc, #60]	; 1890c <tcgetattr@plt+0x6d24>
   188cc:	add	r3, r3, r0, lsl #3
   188d0:	strb	r1, [r3, #2]
   188d4:	strb	r2, [r3, #3]
   188d8:	orr	r1, r1, #128	; 0x80
   188dc:	b	188c0 <tcgetattr@plt+0x6cd8>
   188e0:	bic	r1, r1, #3
   188e4:	orr	r1, r1, lr
   188e8:	ldr	r3, [pc, #28]	; 1890c <tcgetattr@plt+0x6d24>
   188ec:	add	r3, r3, r0, lsl #3
   188f0:	strb	r1, [r3, #2]
   188f4:	cmp	lr, #1
   188f8:	ldreq	r3, [pc, #12]	; 1890c <tcgetattr@plt+0x6d24>
   188fc:	addeq	r3, r3, r0, lsl #3
   18900:	ldrbeq	r2, [r3, #1]
   18904:	strbeq	r2, [r3, #3]
   18908:	b	188c0 <tcgetattr@plt+0x6cd8>
   1890c:	andeq	sl, r3, ip, lsl #18
   18910:	andeq	sl, r3, r4, lsl r6
   18914:	push	{r4, lr}
   18918:	cmp	r0, #18
   1891c:	bhi	18944 <tcgetattr@plt+0x6d5c>
   18920:	cmp	r0, #0
   18924:	bne	18960 <tcgetattr@plt+0x6d78>
   18928:	and	r1, r1, #3
   1892c:	cmp	r1, #3
   18930:	beq	18954 <tcgetattr@plt+0x6d6c>
   18934:	cmp	r1, #2
   18938:	popne	{r4, pc}
   1893c:	bl	1862c <tcgetattr@plt+0x6a44>
   18940:	pop	{r4, pc}
   18944:	mov	r2, #0
   18948:	mov	r1, r2
   1894c:	bl	1859c <tcgetattr@plt+0x69b4>
   18950:	pop	{r4, pc}
   18954:	bl	184fc <tcgetattr@plt+0x6914>
   18958:	bl	1862c <tcgetattr@plt+0x6a44>
   1895c:	pop	{r4, pc}
   18960:	and	lr, r1, #128	; 0x80
   18964:	ldr	r3, [pc, #76]	; 189b8 <tcgetattr@plt+0x6dd0>
   18968:	add	r3, r3, r0, lsl #3
   1896c:	ldrb	r3, [r3, #2]
   18970:	and	ip, r1, #3
   18974:	and	r3, r3, #3
   18978:	cmp	ip, r3
   1897c:	beq	18990 <tcgetattr@plt+0x6da8>
   18980:	cmp	lr, #0
   18984:	popne	{r4, pc}
   18988:	bl	187e0 <tcgetattr@plt+0x6bf8>
   1898c:	pop	{r4, pc}
   18990:	ldr	r3, [pc, #32]	; 189b8 <tcgetattr@plt+0x6dd0>
   18994:	add	r3, r3, r0, lsl #3
   18998:	ldrb	ip, [r3, #3]
   1899c:	adds	r3, lr, #0
   189a0:	movne	r3, #1
   189a4:	cmp	ip, r2
   189a8:	orreq	r3, r3, #1
   189ac:	cmp	r3, #0
   189b0:	beq	18980 <tcgetattr@plt+0x6d98>
   189b4:	pop	{r4, pc}
   189b8:	andeq	sl, r3, ip, lsl #18
   189bc:	push	{r4, r5, r6, r7, r8, lr}
   189c0:	ldr	r4, [pc, #140]	; 18a54 <tcgetattr@plt+0x6e6c>
   189c4:	mov	r6, #2
   189c8:	mov	r5, #1
   189cc:	mov	r7, #0
   189d0:	b	18a28 <tcgetattr@plt+0x6e40>
   189d4:	bl	130cc <tcgetattr@plt+0x14e4>
   189d8:	cmp	r0, #0
   189dc:	bne	18a1c <tcgetattr@plt+0x6e34>
   189e0:	ldr	r3, [r4, #12]
   189e4:	cmp	r3, #0
   189e8:	bne	18a3c <tcgetattr@plt+0x6e54>
   189ec:	b	18a1c <tcgetattr@plt+0x6e34>
   189f0:	strb	r2, [r4, #11]
   189f4:	ldrb	r3, [r3]
   189f8:	cmp	r3, #0
   189fc:	strbeq	r7, [r4, #10]
   18a00:	ldrbne	r3, [r4, #8]
   18a04:	strbne	r3, [r4, #10]
   18a08:	ldrb	r1, [r4, #10]
   18a0c:	uxtb	r0, r5
   18a10:	bl	1859c <tcgetattr@plt+0x69b4>
   18a14:	cmp	r6, #18
   18a18:	bgt	18a50 <tcgetattr@plt+0x6e68>
   18a1c:	add	r5, r5, #1
   18a20:	add	r6, r6, #1
   18a24:	add	r4, r4, #8
   18a28:	cmp	r5, #8
   18a2c:	beq	189d4 <tcgetattr@plt+0x6dec>
   18a30:	ldr	r3, [r4, #12]
   18a34:	cmp	r3, #0
   18a38:	beq	18a14 <tcgetattr@plt+0x6e2c>
   18a3c:	ldrb	r2, [r3]
   18a40:	ldrb	r0, [r4, #11]
   18a44:	cmp	r0, r2
   18a48:	bne	189f0 <tcgetattr@plt+0x6e08>
   18a4c:	b	18a14 <tcgetattr@plt+0x6e2c>
   18a50:	pop	{r4, r5, r6, r7, r8, pc}
   18a54:	andeq	sl, r3, ip, lsl #18
   18a58:	push	{r4, r5, r6, lr}
   18a5c:	mov	r4, r0
   18a60:	mov	r5, r1
   18a64:	bl	184ec <tcgetattr@plt+0x6904>
   18a68:	cmp	r0, #0
   18a6c:	beq	18ae0 <tcgetattr@plt+0x6ef8>
   18a70:	add	r5, r4, r5
   18a74:	cmp	r4, r5
   18a78:	popcs	{r4, r5, r6, pc}
   18a7c:	mov	r3, r4
   18a80:	ldrb	r0, [r3], #1
   18a84:	cmp	r5, r3
   18a88:	popls	{r4, r5, r6, pc}
   18a8c:	ldrb	r1, [r4, #1]
   18a90:	add	r3, r4, #2
   18a94:	cmp	r5, r3
   18a98:	popls	{r4, r5, r6, pc}
   18a9c:	add	r4, r4, #4
   18aa0:	ldrb	r2, [r4, #-2]
   18aa4:	bl	18914 <tcgetattr@plt+0x6d2c>
   18aa8:	sub	r3, r4, #1
   18aac:	cmp	r5, r3
   18ab0:	bls	18adc <tcgetattr@plt+0x6ef4>
   18ab4:	ldrb	r0, [r4, #-1]
   18ab8:	cmp	r5, r4
   18abc:	popls	{r4, r5, r6, pc}
   18ac0:	mov	r3, r4
   18ac4:	ldrb	r1, [r3], #3
   18ac8:	add	r4, r4, #1
   18acc:	cmp	r5, r4
   18ad0:	popls	{r4, r5, r6, pc}
   18ad4:	mov	r4, r3
   18ad8:	b	18aa0 <tcgetattr@plt+0x6eb8>
   18adc:	pop	{r4, r5, r6, pc}
   18ae0:	ldr	r3, [pc, #52]	; 18b1c <tcgetattr@plt+0x6f34>
   18ae4:	ldr	r3, [r3, #116]	; 0x74
   18ae8:	cmp	r3, #0
   18aec:	popne	{r4, r5, r6, pc}
   18af0:	ldr	r6, [pc, #36]	; 18b1c <tcgetattr@plt+0x6f34>
   18af4:	str	r5, [r6, #120]	; 0x78
   18af8:	mov	r0, r5
   18afc:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   18b00:	str	r0, [r6, #116]	; 0x74
   18b04:	cmp	r0, #0
   18b08:	popeq	{r4, r5, r6, pc}
   18b0c:	mov	r2, r5
   18b10:	mov	r1, r4
   18b14:	bl	11810 <memcpy@plt>
   18b18:	pop	{r4, r5, r6, pc}
   18b1c:	andeq	sl, r3, r4, lsl r6
   18b20:	ldr	r3, [pc, #68]	; 18b6c <tcgetattr@plt+0x6f84>
   18b24:	ldr	r3, [r3, #116]	; 0x74
   18b28:	cmp	r3, #0
   18b2c:	bxeq	lr
   18b30:	push	{r4, lr}
   18b34:	mov	r0, #1
   18b38:	bl	18690 <tcgetattr@plt+0x6aa8>
   18b3c:	ldr	r4, [pc, #40]	; 18b6c <tcgetattr@plt+0x6f84>
   18b40:	ldr	r1, [r4, #120]	; 0x78
   18b44:	ldr	r0, [r4, #116]	; 0x74
   18b48:	bl	18a58 <tcgetattr@plt+0x6e70>
   18b4c:	mov	r0, #0
   18b50:	bl	186f4 <tcgetattr@plt+0x6b0c>
   18b54:	ldr	r0, [r4, #116]	; 0x74
   18b58:	bl	1a49c <argp_parse@@Base+0xbf4>
   18b5c:	mov	r3, #0
   18b60:	str	r3, [r4, #116]	; 0x74
   18b64:	str	r3, [r4, #120]	; 0x78
   18b68:	pop	{r4, pc}
   18b6c:	andeq	sl, r3, r4, lsl r6
   18b70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18b74:	ldr	r5, [sp, #36]	; 0x24
   18b78:	ldr	r4, [r5]
   18b7c:	cmp	r4, r0
   18b80:	bge	18bb4 <tcgetattr@plt+0x6fcc>
   18b84:	add	lr, r1, r4
   18b88:	ldrb	ip, [r1, r4]
   18b8c:	cmp	ip, #9
   18b90:	cmpne	ip, #32
   18b94:	bne	18bb4 <tcgetattr@plt+0x6fcc>
   18b98:	add	r4, r4, #1
   18b9c:	cmp	r0, r4
   18ba0:	beq	18bb4 <tcgetattr@plt+0x6fcc>
   18ba4:	ldrb	ip, [lr, #1]!
   18ba8:	cmp	ip, #9
   18bac:	cmpne	ip, #32
   18bb0:	beq	18b98 <tcgetattr@plt+0x6fb0>
   18bb4:	str	r4, [r3]
   18bb8:	add	r3, r1, r4
   18bbc:	ldrb	lr, [r1, r4]
   18bc0:	cmp	lr, #34	; 0x22
   18bc4:	beq	18c0c <tcgetattr@plt+0x7024>
   18bc8:	cmp	lr, #39	; 0x27
   18bcc:	beq	18c0c <tcgetattr@plt+0x7024>
   18bd0:	add	r8, r1, r4
   18bd4:	ldrb	r1, [r1, r4]
   18bd8:	cmp	r1, #34	; 0x22
   18bdc:	beq	18bf8 <tcgetattr@plt+0x7010>
   18be0:	mov	r7, r2
   18be4:	mov	r9, r0
   18be8:	mov	r0, r2
   18bec:	bl	119cc <strchr@plt>
   18bf0:	cmp	r0, #0
   18bf4:	beq	18c2c <tcgetattr@plt+0x7044>
   18bf8:	ldr	r3, [sp, #32]
   18bfc:	str	r4, [r3]
   18c00:	add	r0, r4, #1
   18c04:	str	r0, [r5]
   18c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c0c:	add	r4, r4, #1
   18c10:	cmp	r0, r4
   18c14:	ble	18bd0 <tcgetattr@plt+0x6fe8>
   18c18:	ldrb	ip, [r3, #1]!
   18c1c:	cmp	ip, lr
   18c20:	bne	18c0c <tcgetattr@plt+0x7024>
   18c24:	b	18bf8 <tcgetattr@plt+0x7010>
   18c28:	mov	r4, r6
   18c2c:	add	r6, r4, #1
   18c30:	cmp	r9, r6
   18c34:	ble	18bf8 <tcgetattr@plt+0x7010>
   18c38:	ldrb	r1, [r8, #1]!
   18c3c:	and	r3, r1, #253	; 0xfd
   18c40:	cmp	r3, #32
   18c44:	cmpne	r1, #9
   18c48:	beq	18bf8 <tcgetattr@plt+0x7010>
   18c4c:	mov	r0, r7
   18c50:	bl	119cc <strchr@plt>
   18c54:	cmp	r0, #0
   18c58:	beq	18c28 <tcgetattr@plt+0x7040>
   18c5c:	b	18bf8 <tcgetattr@plt+0x7010>
   18c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c64:	sub	sp, sp, #36	; 0x24
   18c68:	mov	r6, r0
   18c6c:	str	r1, [sp, #12]
   18c70:	mov	r8, r2
   18c74:	mov	r7, r3
   18c78:	bl	119c0 <strlen@plt>
   18c7c:	mov	r3, #0
   18c80:	str	r3, [r8]
   18c84:	str	r3, [r7]
   18c88:	cmp	r0, r3
   18c8c:	ble	18e4c <tcgetattr@plt+0x7264>
   18c90:	mov	r5, r0
   18c94:	mov	r4, r0
   18c98:	bl	11990 <__ctype_b_loc@plt>
   18c9c:	ldr	r2, [r0]
   18ca0:	add	r0, r6, r5
   18ca4:	ldrb	r3, [r0, #-1]!
   18ca8:	lsl	r3, r3, #1
   18cac:	ldrh	r3, [r2, r3]
   18cb0:	tst	r3, #8192	; 0x2000
   18cb4:	beq	18ccc <tcgetattr@plt+0x70e4>
   18cb8:	subs	r4, r4, #1
   18cbc:	bne	18ca4 <tcgetattr@plt+0x70bc>
   18cc0:	mov	r0, #1
   18cc4:	add	sp, sp, #36	; 0x24
   18cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ccc:	cmp	r4, #0
   18cd0:	movle	r0, #1
   18cd4:	ble	18cc4 <tcgetattr@plt+0x70dc>
   18cd8:	mov	r3, #1
   18cdc:	str	r3, [r8]
   18ce0:	mov	r3, #0
   18ce4:	str	r3, [sp, #20]
   18ce8:	add	r9, sp, #20
   18cec:	add	r5, sp, #24
   18cf0:	b	18d00 <tcgetattr@plt+0x7118>
   18cf4:	ldr	r3, [r8]
   18cf8:	add	r3, r3, #1
   18cfc:	str	r3, [r8]
   18d00:	str	r9, [sp, #4]
   18d04:	str	r5, [sp]
   18d08:	add	r3, sp, #28
   18d0c:	ldr	r2, [sp, #12]
   18d10:	mov	r1, r6
   18d14:	mov	r0, r4
   18d18:	bl	18b70 <tcgetattr@plt+0x6f88>
   18d1c:	cmp	r0, r4
   18d20:	blt	18cf4 <tcgetattr@plt+0x710c>
   18d24:	ldr	r0, [r8]
   18d28:	mov	r1, #4
   18d2c:	add	r0, r0, #1
   18d30:	bl	1b3f8 <_obstack_memory_used@@Base+0xadc>
   18d34:	str	r0, [r7]
   18d38:	mov	r3, #0
   18d3c:	str	r3, [sp, #20]
   18d40:	ldr	r3, [r8]
   18d44:	cmp	r3, #0
   18d48:	ble	18e38 <tcgetattr@plt+0x7250>
   18d4c:	mov	r5, #0
   18d50:	add	fp, sp, #20
   18d54:	b	18dcc <tcgetattr@plt+0x71e4>
   18d58:	ldr	r3, [sp, #24]
   18d5c:	ldrb	r1, [r6, r3]
   18d60:	cmp	r1, #34	; 0x22
   18d64:	beq	18e24 <tcgetattr@plt+0x723c>
   18d68:	ldr	r3, [sp, #28]
   18d6c:	ldr	r0, [sp, #24]
   18d70:	sub	r0, r0, r3
   18d74:	add	r9, r0, #1
   18d78:	ldr	sl, [r7]
   18d7c:	mov	r1, #1
   18d80:	add	r0, r0, #2
   18d84:	bl	1b3f8 <_obstack_memory_used@@Base+0xadc>
   18d88:	str	r0, [sl, r5, lsl #2]
   18d8c:	ldr	r3, [r7]
   18d90:	ldr	r0, [r3, r5, lsl #2]
   18d94:	cmp	r0, #0
   18d98:	beq	18e54 <tcgetattr@plt+0x726c>
   18d9c:	mov	r2, r9
   18da0:	ldr	r1, [sp, #28]
   18da4:	add	r1, r6, r1
   18da8:	bl	11810 <memcpy@plt>
   18dac:	ldr	r3, [r7]
   18db0:	ldr	r3, [r3, r5, lsl #2]
   18db4:	mov	r2, #0
   18db8:	strb	r2, [r3, r9]
   18dbc:	add	r5, r5, #1
   18dc0:	ldr	r3, [r8]
   18dc4:	cmp	r3, r5
   18dc8:	ble	18e3c <tcgetattr@plt+0x7254>
   18dcc:	str	fp, [sp, #4]
   18dd0:	add	r3, sp, #24
   18dd4:	str	r3, [sp]
   18dd8:	add	r3, sp, #28
   18ddc:	ldr	r2, [sp, #12]
   18de0:	mov	r1, r6
   18de4:	mov	r0, r4
   18de8:	bl	18b70 <tcgetattr@plt+0x6f88>
   18dec:	ldr	r2, [sp, #28]
   18df0:	ldrb	r3, [r6, r2]
   18df4:	cmp	r3, #34	; 0x22
   18df8:	beq	18d58 <tcgetattr@plt+0x7170>
   18dfc:	cmp	r3, #39	; 0x27
   18e00:	bne	18d68 <tcgetattr@plt+0x7180>
   18e04:	ldr	r3, [sp, #24]
   18e08:	ldrb	r1, [r6, r3]
   18e0c:	cmp	r1, #39	; 0x27
   18e10:	addeq	r2, r2, #1
   18e14:	streq	r2, [sp, #28]
   18e18:	subeq	r3, r3, #1
   18e1c:	streq	r3, [sp, #24]
   18e20:	b	18d68 <tcgetattr@plt+0x7180>
   18e24:	add	r2, r2, #1
   18e28:	str	r2, [sp, #28]
   18e2c:	sub	r3, r3, #1
   18e30:	str	r3, [sp, #24]
   18e34:	b	18d68 <tcgetattr@plt+0x7180>
   18e38:	mov	r5, #0
   18e3c:	ldr	r3, [r7]
   18e40:	mov	r0, #0
   18e44:	str	r0, [r3, r5, lsl #2]
   18e48:	b	18cc4 <tcgetattr@plt+0x70dc>
   18e4c:	mov	r0, #1
   18e50:	b	18cc4 <tcgetattr@plt+0x70dc>
   18e54:	mov	r0, #1
   18e58:	b	18cc4 <tcgetattr@plt+0x70dc>
   18e5c:	push	{r4, r5, r6, lr}
   18e60:	mov	r6, r1
   18e64:	subs	r4, r0, #1
   18e68:	bmi	18e84 <tcgetattr@plt+0x729c>
   18e6c:	add	r5, r1, r0, lsl #2
   18e70:	ldr	r0, [r5, #-4]!
   18e74:	bl	1a49c <argp_parse@@Base+0xbf4>
   18e78:	sub	r4, r4, #1
   18e7c:	cmn	r4, #1
   18e80:	bne	18e70 <tcgetattr@plt+0x7288>
   18e84:	mov	r0, r6
   18e88:	bl	1a49c <argp_parse@@Base+0xbf4>
   18e8c:	mov	r0, #1
   18e90:	pop	{r4, r5, r6, pc}
   18e94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18e98:	subs	sl, r2, #0
   18e9c:	beq	18f68 <tcgetattr@plt+0x7380>
   18ea0:	mov	r6, r1
   18ea4:	mov	r8, r0
   18ea8:	mov	r0, #1
   18eac:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   18eb0:	subs	r4, r0, #0
   18eb4:	beq	18f70 <tcgetattr@plt+0x7388>
   18eb8:	mov	r3, #0
   18ebc:	strb	r3, [r4]
   18ec0:	cmp	r8, r3
   18ec4:	ble	18f5c <tcgetattr@plt+0x7374>
   18ec8:	sub	r6, r6, #4
   18ecc:	mov	r7, r3
   18ed0:	mov	r5, r3
   18ed4:	ldr	r9, [pc, #164]	; 18f80 <tcgetattr@plt+0x7398>
   18ed8:	ldr	r0, [r6, #4]
   18edc:	bl	119c0 <strlen@plt>
   18ee0:	add	r0, r0, #2
   18ee4:	add	r7, r7, r0
   18ee8:	mov	r1, r7
   18eec:	mov	r0, r4
   18ef0:	bl	1b478 <_obstack_memory_used@@Base+0xb5c>
   18ef4:	subs	r4, r0, #0
   18ef8:	beq	18f78 <tcgetattr@plt+0x7390>
   18efc:	cmp	r5, #0
   18f00:	beq	18f14 <tcgetattr@plt+0x732c>
   18f04:	mov	r0, r4
   18f08:	bl	119c0 <strlen@plt>
   18f0c:	ldrh	r3, [r9]
   18f10:	strh	r3, [r4, r0]
   18f14:	ldr	r1, [r6, #4]!
   18f18:	mov	r0, r4
   18f1c:	bl	118d0 <strcat@plt>
   18f20:	add	r5, r5, #1
   18f24:	cmp	r8, r5
   18f28:	bne	18ed8 <tcgetattr@plt+0x72f0>
   18f2c:	ldrb	r3, [r4]
   18f30:	cmp	r3, #0
   18f34:	movne	r5, #0
   18f38:	bne	18f44 <tcgetattr@plt+0x735c>
   18f3c:	b	18f5c <tcgetattr@plt+0x7374>
   18f40:	strb	r5, [r4, r0]
   18f44:	mov	r0, r4
   18f48:	bl	119c0 <strlen@plt>
   18f4c:	sub	r0, r0, #1
   18f50:	ldrb	r3, [r4, r0]
   18f54:	cmp	r3, #32
   18f58:	beq	18f40 <tcgetattr@plt+0x7358>
   18f5c:	str	r4, [sl]
   18f60:	mov	r0, #0
   18f64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18f68:	mov	r0, #1
   18f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18f70:	mov	r0, #1
   18f74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18f78:	mov	r0, #1
   18f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18f80:			; <UNDEFINED> instruction: 0x000207b4
   18f84:	push	{r4, r5, r6, r7, r8, r9, lr}
   18f88:	sub	sp, sp, #1072	; 0x430
   18f8c:	sub	sp, sp, #12
   18f90:	bl	11a14 <__errno_location@plt>
   18f94:	mov	r7, r0
   18f98:	mov	r4, #0
   18f9c:	mov	r6, r4
   18fa0:	mov	r8, r4
   18fa4:	b	18fd8 <tcgetattr@plt+0x73f0>
   18fa8:	mov	r3, #12
   18fac:	str	r3, [r7]
   18fb0:	mov	r0, r6
   18fb4:	bl	1a49c <argp_parse@@Base+0xbf4>
   18fb8:	mov	r0, r5
   18fbc:	add	sp, sp, #1072	; 0x430
   18fc0:	add	sp, sp, #12
   18fc4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18fc8:	ldr	r3, [r7]
   18fcc:	mov	r6, r5
   18fd0:	cmp	r3, #36	; 0x24
   18fd4:	bne	19028 <tcgetattr@plt+0x7440>
   18fd8:	str	r8, [r7]
   18fdc:	add	r4, r4, #256	; 0x100
   18fe0:	mov	r1, r4
   18fe4:	mov	r0, r6
   18fe8:	bl	1b478 <_obstack_memory_used@@Base+0xb5c>
   18fec:	subs	r5, r0, #0
   18ff0:	beq	18fa8 <tcgetattr@plt+0x73c0>
   18ff4:	mov	r1, r4
   18ff8:	mov	r0, r5
   18ffc:	bl	11918 <gethostname@plt>
   19000:	subs	r9, r0, #0
   19004:	bne	18fc8 <tcgetattr@plt+0x73e0>
   19008:	mov	r2, r4
   1900c:	mov	r1, r8
   19010:	mov	r0, r5
   19014:	bl	11a5c <memchr@plt>
   19018:	cmp	r0, #0
   1901c:	bne	18fc8 <tcgetattr@plt+0x73e0>
   19020:	mov	r6, r5
   19024:	b	18fd8 <tcgetattr@plt+0x73f0>
   19028:	cmp	r9, #0
   1902c:	cmpne	r3, #0
   19030:	bne	190a8 <tcgetattr@plt+0x74c0>
   19034:	mov	r2, #32
   19038:	mov	r1, #0
   1903c:	add	r0, sp, #20
   19040:	bl	11a38 <memset@plt>
   19044:	mov	r3, #2
   19048:	str	r3, [sp, #24]
   1904c:	add	r3, sp, #16
   19050:	add	r2, sp, #20
   19054:	mov	r1, #0
   19058:	mov	r0, r5
   1905c:	bl	11b64 <getaddrinfo@plt>
   19060:	cmp	r0, #0
   19064:	bne	18fb8 <tcgetattr@plt+0x73d0>
   19068:	ldr	r3, [sp, #16]
   1906c:	ldr	r1, [r3, #16]
   19070:	ldr	r0, [r3, #20]
   19074:	mov	r3, #8
   19078:	str	r3, [sp, #8]
   1907c:	mov	r3, #0
   19080:	str	r3, [sp, #4]
   19084:	str	r3, [sp]
   19088:	ldr	r3, [pc, #64]	; 190d0 <tcgetattr@plt+0x74e8>
   1908c:	add	r2, sp, #52	; 0x34
   19090:	bl	11abc <getnameinfo@plt>
   19094:	cmp	r0, #0
   19098:	beq	190b8 <tcgetattr@plt+0x74d0>
   1909c:	ldr	r0, [sp, #16]
   190a0:	bl	11b58 <freeaddrinfo@plt>
   190a4:	b	18fb8 <tcgetattr@plt+0x73d0>
   190a8:	mov	r0, r5
   190ac:	bl	1a49c <argp_parse@@Base+0xbf4>
   190b0:	mov	r5, #0
   190b4:	b	18fb8 <tcgetattr@plt+0x73d0>
   190b8:	mov	r0, r5
   190bc:	bl	1a49c <argp_parse@@Base+0xbf4>
   190c0:	add	r0, sp, #52	; 0x34
   190c4:	bl	11870 <strdup@plt>
   190c8:	mov	r5, r0
   190cc:	b	1909c <tcgetattr@plt+0x74b4>
   190d0:	andeq	r0, r0, r1, lsl #8
   190d4:	push	{r4, r5, lr}
   190d8:	sub	sp, sp, #284	; 0x11c
   190dc:	mov	r4, r0
   190e0:	mov	r5, r1
   190e4:	add	r0, sp, #144	; 0x90
   190e8:	bl	11ab0 <sigemptyset@plt>
   190ec:	add	r0, sp, #4
   190f0:	bl	11ab0 <sigemptyset@plt>
   190f4:	ldr	r3, [sp, #272]	; 0x110
   190f8:	orr	r3, r3, #268435456	; 0x10000000
   190fc:	str	r3, [sp, #272]	; 0x110
   19100:	str	r5, [sp, #140]	; 0x8c
   19104:	mov	r2, sp
   19108:	add	r1, sp, #140	; 0x8c
   1910c:	mov	r0, r4
   19110:	bl	118b8 <sigaction@plt>
   19114:	cmp	r0, #0
   19118:	ldrge	r0, [sp]
   1911c:	mvnlt	r0, #0
   19120:	add	sp, sp, #284	; 0x11c
   19124:	pop	{r4, r5, pc}
   19128:	push	{r4, r5, r6, r7, lr}
   1912c:	sub	sp, sp, #396	; 0x18c
   19130:	mov	r4, r0
   19134:	mov	r6, r1
   19138:	mov	r7, r2
   1913c:	mov	r5, r3
   19140:	mov	r2, #384	; 0x180
   19144:	mov	r1, #0
   19148:	add	r0, sp, #8
   1914c:	bl	11a38 <memset@plt>
   19150:	mov	r2, #4
   19154:	mov	r1, r7
   19158:	add	r0, sp, #48	; 0x30
   1915c:	bl	11a44 <strncpy@plt>
   19160:	mov	r2, #32
   19164:	mov	r1, r6
   19168:	add	r0, sp, #52	; 0x34
   1916c:	bl	11a44 <strncpy@plt>
   19170:	mov	r2, #256	; 0x100
   19174:	mov	r1, r5
   19178:	add	r0, sp, #84	; 0x54
   1917c:	bl	11a44 <strncpy@plt>
   19180:	mov	r2, #32
   19184:	mov	r1, r4
   19188:	add	r0, sp, #16
   1918c:	bl	11a44 <strncpy@plt>
   19190:	bl	1199c <getpid@plt>
   19194:	str	r0, [sp, #12]
   19198:	mov	r3, #6
   1919c:	strh	r3, [sp, #8]
   191a0:	mov	r1, #0
   191a4:	mov	r0, sp
   191a8:	bl	11900 <gettimeofday@plt>
   191ac:	ldr	r3, [sp]
   191b0:	str	r3, [sp, #348]	; 0x15c
   191b4:	ldr	r3, [sp, #4]
   191b8:	str	r3, [sp, #352]	; 0x160
   191bc:	bl	1187c <setutxent@plt>
   191c0:	add	r0, sp, #8
   191c4:	bl	11804 <pututxline@plt>
   191c8:	add	r1, sp, #8
   191cc:	ldr	r0, [pc, #12]	; 191e0 <tcgetattr@plt+0x75f8>
   191d0:	bl	11af8 <updwtmpx@plt>
   191d4:	bl	11a98 <endutxent@plt>
   191d8:	add	sp, sp, #396	; 0x18c
   191dc:	pop	{r4, r5, r6, r7, pc}
   191e0:	andeq	r0, r2, ip, lsl #23
   191e4:	push	{r4, r5, r6, lr}
   191e8:	mov	r5, r0
   191ec:	ldr	r4, [pc, #44]	; 19220 <tcgetattr@plt+0x7638>
   191f0:	mov	r2, #2
   191f4:	mov	r0, r4
   191f8:	bl	11a44 <strncpy@plt>
   191fc:	mov	r0, r5
   19200:	bl	119c0 <strlen@plt>
   19204:	sub	r1, r0, #2
   19208:	mov	r2, #2
   1920c:	add	r1, r5, r1
   19210:	add	r0, r4, r2
   19214:	bl	11a44 <strncpy@plt>
   19218:	mov	r0, r4
   1921c:	pop	{r4, r5, r6, pc}
   19220:	muleq	r3, r0, r6
   19224:	push	{r4, r5, lr}
   19228:	sub	sp, sp, #396	; 0x18c
   1922c:	mov	r2, #32
   19230:	mov	r1, r0
   19234:	add	r0, sp, #16
   19238:	bl	11a44 <strncpy@plt>
   1923c:	bl	1187c <setutxent@plt>
   19240:	add	r0, sp, #8
   19244:	bl	11a74 <getutxline@plt>
   19248:	subs	r4, r0, #0
   1924c:	beq	192b0 <tcgetattr@plt+0x76c8>
   19250:	mov	r3, #8
   19254:	strh	r3, [r4]
   19258:	mov	r5, #0
   1925c:	str	r5, [r4, #332]	; 0x14c
   19260:	mov	r1, r5
   19264:	mov	r0, sp
   19268:	bl	11900 <gettimeofday@plt>
   1926c:	ldr	r3, [sp]
   19270:	str	r3, [r4, #340]	; 0x154
   19274:	ldr	r3, [sp, #4]
   19278:	str	r3, [r4, #344]	; 0x158
   1927c:	mov	r2, #32
   19280:	mov	r1, r5
   19284:	add	r0, r4, #44	; 0x2c
   19288:	bl	11a38 <memset@plt>
   1928c:	mov	r2, #256	; 0x100
   19290:	mov	r1, r5
   19294:	add	r0, r4, #76	; 0x4c
   19298:	bl	11a38 <memset@plt>
   1929c:	mov	r0, r4
   192a0:	bl	11804 <pututxline@plt>
   192a4:	mov	r1, r4
   192a8:	ldr	r0, [pc, #12]	; 192bc <tcgetattr@plt+0x76d4>
   192ac:	bl	11af8 <updwtmpx@plt>
   192b0:	bl	11a98 <endutxent@plt>
   192b4:	add	sp, sp, #396	; 0x18c
   192b8:	pop	{r4, r5, pc}
   192bc:	andeq	r0, r2, ip, lsl #23
   192c0:	ldr	ip, [r0]
   192c4:	cmp	ip, #0
   192c8:	beq	1931c <tcgetattr@plt+0x7734>
   192cc:	push	{r4, r5, r6, lr}
   192d0:	mov	ip, r2
   192d4:	mov	r5, r1
   192d8:	mov	r4, r0
   192dc:	ldr	r2, [r0, #32]
   192e0:	str	r2, [r1, #36]	; 0x24
   192e4:	ldr	r2, [r0, #24]
   192e8:	str	r2, [r1, #28]
   192ec:	ldr	r2, [r0, #28]
   192f0:	str	r2, [r1, #32]
   192f4:	ldr	r2, [r0, #12]
   192f8:	str	r2, [r1, #20]
   192fc:	ldr	r6, [r0]
   19300:	mov	r2, r1
   19304:	mov	r1, r3
   19308:	mov	r0, ip
   1930c:	blx	r6
   19310:	ldr	r3, [r5, #36]	; 0x24
   19314:	str	r3, [r4, #32]
   19318:	pop	{r4, r5, r6, pc}
   1931c:	mov	r0, #7
   19320:	bx	lr
   19324:	push	{r4, r5, r6, lr}
   19328:	ldr	r5, [r0, #16]
   1932c:	ldr	r3, [r0]
   19330:	cmp	r3, #0
   19334:	beq	1934c <tcgetattr@plt+0x7764>
   19338:	ldr	r2, [r1, #8]
   1933c:	add	r2, r2, #1
   19340:	str	r2, [r1, #8]
   19344:	mov	r2, #0
   19348:	b	193a0 <tcgetattr@plt+0x77b8>
   1934c:	ldr	r3, [r0, #4]
   19350:	cmp	r3, #0
   19354:	ldrne	r3, [r1, #8]
   19358:	addne	r3, r3, #1
   1935c:	strne	r3, [r1, #8]
   19360:	cmp	r5, #0
   19364:	popeq	{r4, r5, r6, pc}
   19368:	ldr	r0, [r5]
   1936c:	cmp	r0, #0
   19370:	popeq	{r4, r5, r6, pc}
   19374:	mov	r4, r1
   19378:	mov	r1, r4
   1937c:	bl	19324 <tcgetattr@plt+0x773c>
   19380:	ldr	r3, [r4, #12]
   19384:	add	r3, r3, #1
   19388:	str	r3, [r4, #12]
   1938c:	ldr	r0, [r5, #16]!
   19390:	cmp	r0, #0
   19394:	bne	19378 <tcgetattr@plt+0x7790>
   19398:	pop	{r4, r5, r6, pc}
   1939c:	add	r2, r2, #1
   193a0:	add	r3, r3, #24
   193a4:	ldr	r0, [r3, #-20]	; 0xffffffec
   193a8:	cmp	r0, #0
   193ac:	bne	1939c <tcgetattr@plt+0x77b4>
   193b0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   193b4:	cmp	r0, #0
   193b8:	bne	1939c <tcgetattr@plt+0x77b4>
   193bc:	ldr	r0, [r3, #-8]
   193c0:	cmp	r0, #0
   193c4:	bne	1939c <tcgetattr@plt+0x77b4>
   193c8:	ldr	r0, [r3, #-4]
   193cc:	cmp	r0, #0
   193d0:	bne	1939c <tcgetattr@plt+0x77b4>
   193d4:	add	r0, r2, r2, lsl #1
   193d8:	ldr	r3, [r1]
   193dc:	add	r3, r3, r0
   193e0:	str	r3, [r1]
   193e4:	ldr	r3, [r1, #4]
   193e8:	add	r2, r3, r2
   193ec:	str	r2, [r1, #4]
   193f0:	b	19360 <tcgetattr@plt+0x7778>
   193f4:	cmp	r0, #86	; 0x56
   193f8:	beq	19404 <tcgetattr@plt+0x781c>
   193fc:	mov	r0, #7
   19400:	bx	lr
   19404:	push	{r4, lr}
   19408:	mov	r4, r2
   1940c:	ldr	r3, [pc, #100]	; 19478 <tcgetattr@plt+0x7890>
   19410:	ldr	r3, [r3]
   19414:	cmp	r3, #0
   19418:	beq	1943c <tcgetattr@plt+0x7854>
   1941c:	mov	r1, r2
   19420:	ldr	r0, [r2, #48]	; 0x30
   19424:	blx	r3
   19428:	ldr	r3, [r4, #16]
   1942c:	tst	r3, #32
   19430:	beq	19470 <tcgetattr@plt+0x7888>
   19434:	mov	r0, #0
   19438:	pop	{r4, pc}
   1943c:	ldr	r3, [pc, #56]	; 1947c <tcgetattr@plt+0x7894>
   19440:	ldr	r2, [r3]
   19444:	cmp	r2, #0
   19448:	beq	1945c <tcgetattr@plt+0x7874>
   1944c:	ldr	r1, [pc, #44]	; 19480 <tcgetattr@plt+0x7898>
   19450:	ldr	r0, [r4, #48]	; 0x30
   19454:	bl	119e4 <fprintf@plt>
   19458:	b	19428 <tcgetattr@plt+0x7840>
   1945c:	ldr	r2, [pc, #32]	; 19484 <tcgetattr@plt+0x789c>
   19460:	ldr	r1, [pc, #32]	; 19488 <tcgetattr@plt+0x78a0>
   19464:	mov	r0, r4
   19468:	bl	1e548 <argp_error@@Base>
   1946c:	b	19428 <tcgetattr@plt+0x7840>
   19470:	mov	r0, #0
   19474:	bl	119a8 <exit@plt>
   19478:	muleq	r3, ip, r6
   1947c:	andeq	sl, r3, r8, ror #28
   19480:	andeq	r0, r2, ip, asr lr
   19484:			; <UNDEFINED> instruction: 0x00020cb4
   19488:	andeq	pc, r1, ip, asr #30
   1948c:	push	{r4, r5, r6, lr}
   19490:	mov	r4, r2
   19494:	cmn	r0, #3
   19498:	beq	19534 <tcgetattr@plt+0x794c>
   1949c:	mov	r5, r1
   194a0:	ble	194cc <tcgetattr@plt+0x78e4>
   194a4:	cmn	r0, #2
   194a8:	beq	1954c <tcgetattr@plt+0x7964>
   194ac:	cmp	r0, #63	; 0x3f
   194b0:	bne	19590 <tcgetattr@plt+0x79a8>
   194b4:	ldr	r2, [pc, #228]	; 195a0 <tcgetattr@plt+0x79b8>
   194b8:	ldr	r1, [r4, #48]	; 0x30
   194bc:	mov	r0, r4
   194c0:	bl	1e48c <argp_state_help@@Base>
   194c4:	mov	r0, #0
   194c8:	pop	{r4, r5, r6, pc}
   194cc:	cmn	r0, #4
   194d0:	bne	19590 <tcgetattr@plt+0x79a8>
   194d4:	mov	r2, #10
   194d8:	mov	r1, #0
   194dc:	ldr	r0, [pc, #192]	; 195a4 <tcgetattr@plt+0x79bc>
   194e0:	cmp	r5, r1
   194e4:	movne	r0, r5
   194e8:	bl	11798 <strtol@plt>
   194ec:	ldr	r3, [pc, #180]	; 195a8 <tcgetattr@plt+0x79c0>
   194f0:	str	r0, [r3]
   194f4:	ldr	r2, [r3]
   194f8:	sub	r1, r2, #1
   194fc:	str	r1, [r3]
   19500:	cmp	r2, #0
   19504:	ble	19598 <tcgetattr@plt+0x79b0>
   19508:	mov	r5, #1
   1950c:	mov	r4, r3
   19510:	mov	r0, r5
   19514:	bl	11858 <sleep@plt>
   19518:	ldr	r3, [r4]
   1951c:	sub	r2, r3, #1
   19520:	str	r2, [r4]
   19524:	cmp	r3, #0
   19528:	bgt	19510 <tcgetattr@plt+0x7928>
   1952c:	mov	r0, #0
   19530:	pop	{r4, r5, r6, pc}
   19534:	ldr	r2, [pc, #112]	; 195ac <tcgetattr@plt+0x79c4>
   19538:	ldr	r1, [r4, #48]	; 0x30
   1953c:	mov	r0, r4
   19540:	bl	1e48c <argp_state_help@@Base>
   19544:	mov	r0, #0
   19548:	pop	{r4, r5, r6, pc}
   1954c:	ldr	r3, [pc, #92]	; 195b0 <tcgetattr@plt+0x79c8>
   19550:	str	r1, [r3]
   19554:	mov	r0, r1
   19558:	bl	1a3dc <argp_parse@@Base+0xb34>
   1955c:	str	r0, [r4, #40]	; 0x28
   19560:	ldr	r3, [pc, #76]	; 195b4 <tcgetattr@plt+0x79cc>
   19564:	str	r0, [r3]
   19568:	ldr	r3, [r4, #16]
   1956c:	and	r3, r3, #3
   19570:	cmp	r3, #1
   19574:	beq	19580 <tcgetattr@plt+0x7998>
   19578:	mov	r0, #0
   1957c:	pop	{r4, r5, r6, pc}
   19580:	ldr	r3, [r4, #8]
   19584:	str	r5, [r3]
   19588:	mov	r0, #0
   1958c:	pop	{r4, r5, r6, pc}
   19590:	mov	r0, #7
   19594:	pop	{r4, r5, r6, pc}
   19598:	mov	r0, #0
   1959c:	pop	{r4, r5, r6, pc}
   195a0:	andeq	r0, r0, sl, ror r2
   195a4:	ldrdeq	r0, [r2], -r8
   195a8:	muleq	r3, r8, r6
   195ac:	andeq	r0, r0, r1, lsl #4
   195b0:	andeq	r2, r3, r8, lsl #10
   195b4:	andeq	r2, r3, r0, lsl #10
   195b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195bc:	sub	sp, sp, #36	; 0x24
   195c0:	str	r0, [sp, #12]
   195c4:	str	r1, [sp, #16]
   195c8:	str	r2, [sp, #20]
   195cc:	mov	r8, r3
   195d0:	ldr	sl, [sp, #72]	; 0x48
   195d4:	ldr	r9, [r0]
   195d8:	ldr	r5, [r0, #16]
   195dc:	cmp	r9, #0
   195e0:	addne	r6, r9, #24
   195e4:	strne	r5, [sp, #28]
   195e8:	strne	r8, [sp, #24]
   195ec:	bne	196f8 <tcgetattr@plt+0x7b10>
   195f0:	ldr	r3, [sp, #12]
   195f4:	ldr	r3, [r3, #4]
   195f8:	cmp	r3, #0
   195fc:	moveq	r0, r8
   19600:	moveq	r8, #0
   19604:	beq	19684 <tcgetattr@plt+0x7a9c>
   19608:	ldr	r2, [sp, #12]
   1960c:	ldr	r3, [r2, #4]
   19610:	str	r3, [r8]
   19614:	str	r2, [r8, #4]
   19618:	ldr	r3, [sl, #4]
   1961c:	str	r3, [r8, #8]
   19620:	mov	r3, #0
   19624:	str	r3, [r8, #12]
   19628:	ldr	r2, [sp, #16]
   1962c:	str	r2, [r8, #16]
   19630:	ldr	r2, [sp, #20]
   19634:	str	r2, [r8, #20]
   19638:	str	r3, [r8, #24]
   1963c:	str	r3, [r8, #32]
   19640:	str	r3, [r8, #28]
   19644:	cmp	r5, r3
   19648:	beq	19680 <tcgetattr@plt+0x7a98>
   1964c:	ldr	r3, [r5]
   19650:	cmp	r3, #0
   19654:	beq	198a0 <tcgetattr@plt+0x7cb8>
   19658:	mov	r3, #0
   1965c:	add	r3, r3, #1
   19660:	ldr	r2, [r5, r3, lsl #4]
   19664:	cmp	r2, #0
   19668:	bne	1965c <tcgetattr@plt+0x7a74>
   1966c:	ldr	r2, [sl, #12]
   19670:	str	r2, [r8, #28]
   19674:	ldr	r2, [sl, #12]
   19678:	add	r3, r2, r3, lsl #2
   1967c:	str	r3, [sl, #12]
   19680:	add	r0, r8, #36	; 0x24
   19684:	cmp	r5, #0
   19688:	beq	196c4 <tcgetattr@plt+0x7adc>
   1968c:	ldr	ip, [r5]
   19690:	cmp	ip, #0
   19694:	beq	196c4 <tcgetattr@plt+0x7adc>
   19698:	mov	r2, #0
   1969c:	add	r4, r2, #1
   196a0:	str	sl, [sp]
   196a4:	mov	r3, r0
   196a8:	mov	r1, r8
   196ac:	mov	r0, ip
   196b0:	bl	195b8 <tcgetattr@plt+0x79d0>
   196b4:	ldr	ip, [r5, r4, lsl #4]
   196b8:	mov	r2, r4
   196bc:	cmp	ip, #0
   196c0:	bne	1969c <tcgetattr@plt+0x7ab4>
   196c4:	add	sp, sp, #36	; 0x24
   196c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196cc:	ldr	r0, [r4, #16]!
   196d0:	cmp	r0, #0
   196d4:	beq	197e0 <tcgetattr@plt+0x7bf8>
   196d8:	mov	r1, r7
   196dc:	bl	1178c <strcmp@plt>
   196e0:	cmp	r0, #0
   196e4:	bne	196cc <tcgetattr@plt+0x7ae4>
   196e8:	sub	r4, r4, fp
   196ec:	cmn	r4, #15
   196f0:	blt	197e0 <tcgetattr@plt+0x7bf8>
   196f4:	add	r6, r6, #24
   196f8:	sub	r2, r6, #24
   196fc:	mov	r8, r6
   19700:	ldr	r4, [r6, #-20]	; 0xffffffec
   19704:	cmp	r4, #0
   19708:	bne	19718 <tcgetattr@plt+0x7b30>
   1970c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   19710:	cmp	r3, #0
   19714:	beq	1987c <tcgetattr@plt+0x7c94>
   19718:	ldr	r3, [r8, #-12]
   1971c:	and	r1, r3, #4
   19720:	cmp	r1, #0
   19724:	moveq	r9, r2
   19728:	ldr	r5, [r9, #12]
   1972c:	ands	r5, r5, #8
   19730:	bne	196f4 <tcgetattr@plt+0x7b0c>
   19734:	tst	r3, #8
   19738:	bne	197bc <tcgetattr@plt+0x7bd4>
   1973c:	sub	r3, r4, #1
   19740:	cmp	r3, #254	; 0xfe
   19744:	bhi	197bc <tcgetattr@plt+0x7bd4>
   19748:	bl	11990 <__ctype_b_loc@plt>
   1974c:	ldr	r3, [r0]
   19750:	lsl	r4, r4, #1
   19754:	ldrh	r3, [r3, r4]
   19758:	tst	r3, #16384	; 0x4000
   1975c:	beq	197bc <tcgetattr@plt+0x7bd4>
   19760:	ldr	r3, [sl, #4]
   19764:	add	r2, r3, #1
   19768:	str	r2, [sl, #4]
   1976c:	ldr	r2, [r8, #-20]	; 0xffffffec
   19770:	strb	r2, [r3]
   19774:	ldr	r3, [r9, #8]
   19778:	cmp	r3, #0
   1977c:	beq	197b0 <tcgetattr@plt+0x7bc8>
   19780:	ldr	r3, [sl, #4]
   19784:	add	r2, r3, #1
   19788:	str	r2, [sl, #4]
   1978c:	mov	r2, #58	; 0x3a
   19790:	strb	r2, [r3]
   19794:	ldr	r3, [r9, #12]
   19798:	tst	r3, #1
   1979c:	ldrne	r3, [sl, #4]
   197a0:	addne	r2, r3, #1
   197a4:	strne	r2, [sl, #4]
   197a8:	movne	r2, #58	; 0x3a
   197ac:	strbne	r2, [r3]
   197b0:	ldr	r3, [sl, #4]
   197b4:	mov	r2, #0
   197b8:	strb	r2, [r3]
   197bc:	ldr	r7, [r8, #-24]	; 0xffffffe8
   197c0:	cmp	r7, #0
   197c4:	beq	196f4 <tcgetattr@plt+0x7b0c>
   197c8:	ldr	r3, [sl]
   197cc:	ldr	fp, [r3, #8]
   197d0:	ldr	r0, [fp]
   197d4:	cmp	r0, #0
   197d8:	movne	r4, fp
   197dc:	bne	196d8 <tcgetattr@plt+0x7af0>
   197e0:	ldr	r3, [sl, #8]
   197e4:	str	r7, [r3]
   197e8:	ldr	r3, [sl, #8]
   197ec:	ldr	r2, [r9, #8]
   197f0:	cmp	r2, #0
   197f4:	beq	1980c <tcgetattr@plt+0x7c24>
   197f8:	ldr	r5, [r9, #12]
   197fc:	and	r5, r5, #1
   19800:	cmp	r5, #0
   19804:	movne	r5, #2
   19808:	moveq	r5, #1
   1980c:	str	r5, [r3, #4]
   19810:	ldr	r3, [sl, #8]
   19814:	mov	r2, #0
   19818:	str	r2, [r3, #8]
   1981c:	ldr	r1, [sl, #8]
   19820:	ldr	r0, [r8, #-20]	; 0xffffffec
   19824:	cmp	r0, r2
   19828:	ldreq	r0, [r9, #4]
   1982c:	bic	r0, r0, #-16777216	; 0xff000000
   19830:	ldr	r3, [sl]
   19834:	ldr	r3, [r3, #48]	; 0x30
   19838:	ldr	r2, [sp, #24]
   1983c:	sub	r3, r2, r3
   19840:	asr	r3, r3, #2
   19844:	rsb	r2, r3, r3, lsl #3
   19848:	add	r2, r2, r2, lsl #6
   1984c:	add	r2, r3, r2, lsl #3
   19850:	rsb	r2, r2, r2, lsl #15
   19854:	add	r3, r3, r2, lsl #3
   19858:	add	r3, r3, #1
   1985c:	add	r3, r0, r3, lsl #24
   19860:	str	r3, [r1, #12]
   19864:	ldr	r3, [sl, #8]
   19868:	add	r2, r3, #16
   1986c:	str	r2, [sl, #8]
   19870:	mov	r2, #0
   19874:	str	r2, [r3, #16]
   19878:	b	196f4 <tcgetattr@plt+0x7b0c>
   1987c:	ldr	r3, [r6, #-8]
   19880:	cmp	r3, #0
   19884:	bne	19718 <tcgetattr@plt+0x7b30>
   19888:	ldr	r3, [r6, #-4]
   1988c:	cmp	r3, #0
   19890:	bne	19718 <tcgetattr@plt+0x7b30>
   19894:	ldr	r5, [sp, #28]
   19898:	ldr	r8, [sp, #24]
   1989c:	b	19608 <tcgetattr@plt+0x7a20>
   198a0:	mov	r3, #0
   198a4:	b	1966c <tcgetattr@plt+0x7a84>

000198a8 <argp_parse@@Base>:
   198a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198ac:	add	fp, sp, #32
   198b0:	sub	sp, sp, #220	; 0xdc
   198b4:	mov	r8, r0
   198b8:	str	r1, [fp, #-236]	; 0xffffff14
   198bc:	str	r2, [fp, #-232]	; 0xffffff18
   198c0:	mov	r6, r3
   198c4:	tst	r3, #1
   198c8:	bne	198f8 <argp_parse@@Base+0x50>
   198cc:	ldr	r3, [pc, #2548]	; 1a2c8 <argp_parse@@Base+0xa20>
   198d0:	ldr	r3, [r3]
   198d4:	cmp	r3, #0
   198d8:	moveq	r3, r2
   198dc:	ldreq	r2, [r3]
   198e0:	ldreq	r3, [pc, #2528]	; 1a2c8 <argp_parse@@Base+0xa20>
   198e4:	streq	r2, [r3]
   198e8:	ldr	r3, [pc, #2524]	; 1a2cc <argp_parse@@Base+0xa24>
   198ec:	ldr	r3, [r3]
   198f0:	cmp	r3, #0
   198f4:	beq	19ae8 <argp_parse@@Base+0x240>
   198f8:	tst	r6, #16
   198fc:	beq	19b00 <argp_parse@@Base+0x258>
   19900:	mov	r2, #36	; 0x24
   19904:	mov	r1, #0
   19908:	sub	r0, fp, #196	; 0xc4
   1990c:	bl	11a38 <memset@plt>
   19910:	ands	r3, r6, #4
   19914:	str	r3, [fp, #-240]	; 0xffffff10
   19918:	moveq	r3, #1
   1991c:	movne	r3, #0
   19920:	str	r3, [fp, #-228]	; 0xffffff1c
   19924:	mov	r3, #0
   19928:	str	r3, [fp, #-224]	; 0xffffff20
   1992c:	str	r3, [fp, #-220]	; 0xffffff24
   19930:	str	r3, [fp, #-216]	; 0xffffff28
   19934:	cmp	r8, r3
   19938:	beq	19948 <argp_parse@@Base+0xa0>
   1993c:	sub	r1, fp, #228	; 0xe4
   19940:	mov	r0, r8
   19944:	bl	19324 <tcgetattr@plt+0x773c>
   19948:	ldr	r4, [fp, #-220]	; 0xffffff24
   1994c:	add	r4, r4, #1
   19950:	add	r4, r4, r4, lsl #3
   19954:	lsl	r4, r4, #2
   19958:	ldr	r9, [fp, #-216]	; 0xffffff28
   1995c:	lsl	r9, r9, #2
   19960:	add	sl, r9, r4
   19964:	ldr	r5, [fp, #-224]	; 0xffffff20
   19968:	add	r5, r5, #1
   1996c:	add	r5, sl, r5, lsl #4
   19970:	ldr	r0, [fp, #-228]	; 0xffffff1c
   19974:	add	r0, r0, #1
   19978:	add	r0, r0, r5
   1997c:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   19980:	mov	r7, r0
   19984:	str	r0, [fp, #-40]	; 0xffffffd8
   19988:	cmp	r0, #0
   1998c:	moveq	r4, #12
   19990:	beq	1a118 <argp_parse@@Base+0x870>
   19994:	str	r0, [fp, #-112]	; 0xffffff90
   19998:	add	r4, r0, r4
   1999c:	str	r4, [fp, #-104]	; 0xffffff98
   199a0:	add	r3, r0, sl
   199a4:	str	r3, [fp, #-244]	; 0xffffff0c
   199a8:	str	r3, [fp, #-152]	; 0xffffff68
   199ac:	add	sl, r0, r5
   199b0:	str	sl, [fp, #-156]	; 0xffffff64
   199b4:	mov	r3, #1
   199b8:	str	r3, [fp, #-196]	; 0xffffff3c
   199bc:	str	r3, [fp, #-192]	; 0xffffff40
   199c0:	sub	ip, fp, #148	; 0x94
   199c4:	sub	lr, fp, #196	; 0xc4
   199c8:	ldm	lr!, {r0, r1, r2, r3}
   199cc:	stmia	ip!, {r0, r1, r2, r3}
   199d0:	ldm	lr!, {r0, r1, r2, r3}
   199d4:	stmia	ip!, {r0, r1, r2, r3}
   199d8:	ldr	r3, [lr]
   199dc:	str	r3, [ip]
   199e0:	mov	r2, r9
   199e4:	mov	r1, #0
   199e8:	mov	r0, r4
   199ec:	bl	11a38 <memset@plt>
   199f0:	sub	r3, fp, #160	; 0xa0
   199f4:	str	r3, [fp, #-212]	; 0xffffff2c
   199f8:	str	sl, [fp, #-208]	; 0xffffff30
   199fc:	ldr	r3, [fp, #-244]	; 0xffffff0c
   19a00:	str	r3, [fp, #-204]	; 0xffffff34
   19a04:	str	r4, [fp, #-200]	; 0xffffff38
   19a08:	tst	r6, #8
   19a0c:	beq	19b98 <argp_parse@@Base+0x2f0>
   19a10:	add	sl, sl, #1
   19a14:	str	sl, [fp, #-208]	; 0xffffff30
   19a18:	mov	r3, #45	; 0x2d
   19a1c:	strb	r3, [r7, r5]
   19a20:	mov	r3, #0
   19a24:	ldr	r2, [fp, #-208]	; 0xffffff30
   19a28:	strb	r3, [r2]
   19a2c:	ldr	r2, [fp, #-204]	; 0xffffff34
   19a30:	str	r3, [r2]
   19a34:	str	r8, [fp, #-160]	; 0xffffff60
   19a38:	cmp	r8, r3
   19a3c:	beq	19bb4 <argp_parse@@Base+0x30c>
   19a40:	sub	r3, fp, #212	; 0xd4
   19a44:	str	r3, [sp]
   19a48:	ldr	r3, [fp, #-112]	; 0xffffff90
   19a4c:	mov	r2, #0
   19a50:	mov	r1, r2
   19a54:	mov	r0, r8
   19a58:	bl	195b8 <tcgetattr@plt+0x79d0>
   19a5c:	str	r0, [fp, #-108]	; 0xffffff94
   19a60:	mov	r2, #56	; 0x38
   19a64:	mov	r1, #0
   19a68:	sub	r0, fp, #96	; 0x60
   19a6c:	bl	11a38 <memset@plt>
   19a70:	ldr	r3, [fp, #-160]	; 0xffffff60
   19a74:	str	r3, [fp, #-96]	; 0xffffffa0
   19a78:	ldr	r3, [fp, #-236]	; 0xffffff14
   19a7c:	str	r3, [fp, #-92]	; 0xffffffa4
   19a80:	ldr	r3, [fp, #-232]	; 0xffffff18
   19a84:	str	r3, [fp, #-88]	; 0xffffffa8
   19a88:	str	r6, [fp, #-80]	; 0xffffffb0
   19a8c:	ldr	r3, [pc, #2108]	; 1a2d0 <argp_parse@@Base+0xa28>
   19a90:	ldr	r3, [r3]
   19a94:	str	r3, [fp, #-52]	; 0xffffffcc
   19a98:	ldr	r3, [pc, #2100]	; 1a2d4 <argp_parse@@Base+0xa2c>
   19a9c:	ldr	r3, [r3]
   19aa0:	str	r3, [fp, #-48]	; 0xffffffd0
   19aa4:	sub	r3, fp, #160	; 0xa0
   19aa8:	str	r3, [fp, #-44]	; 0xffffffd4
   19aac:	mov	r3, #1
   19ab0:	str	r3, [fp, #-100]	; 0xffffff9c
   19ab4:	ldr	r3, [fp, #-112]	; 0xffffff90
   19ab8:	ldr	r2, [fp, #-108]	; 0xffffff94
   19abc:	cmp	r3, r2
   19ac0:	bcs	19c4c <argp_parse@@Base+0x3a4>
   19ac4:	ldr	r2, [fp, #8]
   19ac8:	str	r2, [r3, #24]
   19acc:	ldr	r5, [fp, #-112]	; 0xffffff90
   19ad0:	ldr	r3, [fp, #-108]	; 0xffffff94
   19ad4:	cmp	r5, r3
   19ad8:	bcs	19c58 <argp_parse@@Base+0x3b0>
   19adc:	ldr	r7, [pc, #2036]	; 1a2d8 <argp_parse@@Base+0xa30>
   19ae0:	mov	r6, #0
   19ae4:	b	19bf0 <argp_parse@@Base+0x348>
   19ae8:	ldr	r3, [fp, #-232]	; 0xffffff18
   19aec:	ldr	r0, [r3]
   19af0:	bl	1a3dc <argp_parse@@Base+0xb34>
   19af4:	ldr	r3, [pc, #2000]	; 1a2cc <argp_parse@@Base+0xa24>
   19af8:	str	r0, [r3]
   19afc:	b	198f8 <argp_parse@@Base+0x50>
   19b00:	sub	sp, sp, #72	; 0x48
   19b04:	add	r5, sp, #8
   19b08:	sub	sp, sp, #40	; 0x28
   19b0c:	add	r4, sp, #8
   19b10:	mov	r1, #0
   19b14:	str	r1, [r4]
   19b18:	str	r1, [r4, #4]
   19b1c:	str	r1, [r4, #8]
   19b20:	str	r1, [r4, #12]
   19b24:	str	r1, [r4, #20]
   19b28:	str	r1, [r4, #24]
   19b2c:	str	r5, [r4, #16]
   19b30:	mov	r2, #64	; 0x40
   19b34:	mov	r0, r5
   19b38:	bl	11a38 <memset@plt>
   19b3c:	cmp	r8, #0
   19b40:	addne	r3, r5, #16
   19b44:	strne	r8, [r5]
   19b48:	moveq	r3, r5
   19b4c:	ldr	r2, [pc, #1928]	; 1a2dc <argp_parse@@Base+0xa34>
   19b50:	str	r2, [r3]
   19b54:	ldr	r2, [pc, #1924]	; 1a2e0 <argp_parse@@Base+0xa38>
   19b58:	ldr	r2, [r2]
   19b5c:	cmp	r2, #0
   19b60:	beq	19b80 <argp_parse@@Base+0x2d8>
   19b64:	add	r2, r3, #32
   19b68:	ldr	r1, [pc, #1908]	; 1a2e4 <argp_parse@@Base+0xa3c>
   19b6c:	str	r1, [r3, #16]
   19b70:	mov	r3, #0
   19b74:	str	r3, [r2]
   19b78:	mov	r8, r4
   19b7c:	b	19900 <argp_parse@@Base+0x58>
   19b80:	ldr	r2, [pc, #1888]	; 1a2e8 <argp_parse@@Base+0xa40>
   19b84:	ldr	r2, [r2]
   19b88:	cmp	r2, #0
   19b8c:	addeq	r2, r3, #16
   19b90:	bne	19b64 <argp_parse@@Base+0x2bc>
   19b94:	b	19b70 <argp_parse@@Base+0x2c8>
   19b98:	ldr	r3, [fp, #-240]	; 0xffffff10
   19b9c:	cmp	r3, #0
   19ba0:	addne	sl, sl, #1
   19ba4:	strne	sl, [fp, #-208]	; 0xffffff30
   19ba8:	movne	r3, #43	; 0x2b
   19bac:	strbne	r3, [r7, r5]
   19bb0:	b	19a20 <argp_parse@@Base+0x178>
   19bb4:	ldr	r3, [fp, #-112]	; 0xffffff90
   19bb8:	str	r3, [fp, #-108]	; 0xffffff94
   19bbc:	b	19a60 <argp_parse@@Base+0x1b8>
   19bc0:	mov	r3, r6
   19bc4:	mov	r2, r7
   19bc8:	sub	r1, fp, #96	; 0x60
   19bcc:	mov	r0, r5
   19bd0:	bl	192c0 <tcgetattr@plt+0x76d8>
   19bd4:	add	r5, r5, #36	; 0x24
   19bd8:	ldr	r3, [fp, #-108]	; 0xffffff94
   19bdc:	cmp	r5, r3
   19be0:	bcs	19c3c <argp_parse@@Base+0x394>
   19be4:	cmp	r0, #7
   19be8:	cmpne	r0, #0
   19bec:	bne	19c3c <argp_parse@@Base+0x394>
   19bf0:	ldr	r3, [r5, #16]
   19bf4:	cmp	r3, #0
   19bf8:	ldrne	r2, [r5, #20]
   19bfc:	ldrne	r3, [r3, #28]
   19c00:	ldrne	r3, [r3, r2, lsl #2]
   19c04:	strne	r3, [r5, #24]
   19c08:	ldr	r3, [r5]
   19c0c:	cmp	r3, #0
   19c10:	bne	19bc0 <argp_parse@@Base+0x318>
   19c14:	ldr	r3, [r5, #4]
   19c18:	ldr	r3, [r3, #16]
   19c1c:	cmp	r3, #0
   19c20:	beq	19bc0 <argp_parse@@Base+0x318>
   19c24:	ldr	r3, [r3]
   19c28:	cmp	r3, #0
   19c2c:	ldrne	r3, [r5, #28]
   19c30:	ldrne	r2, [r5, #24]
   19c34:	strne	r2, [r3]
   19c38:	b	19bc0 <argp_parse@@Base+0x318>
   19c3c:	mov	r4, r0
   19c40:	cmp	r0, #7
   19c44:	beq	19c58 <argp_parse@@Base+0x3b0>
   19c48:	b	19c50 <argp_parse@@Base+0x3a8>
   19c4c:	mov	r4, #0
   19c50:	cmp	r4, #0
   19c54:	bne	1a118 <argp_parse@@Base+0x870>
   19c58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19c5c:	tst	r3, #2
   19c60:	moveq	r3, #1
   19c64:	streq	r3, [fp, #-144]	; 0xffffff70
   19c68:	beq	19c94 <argp_parse@@Base+0x3ec>
   19c6c:	mov	r2, #0
   19c70:	str	r2, [fp, #-144]	; 0xffffff70
   19c74:	tst	r3, #1
   19c78:	beq	19c94 <argp_parse@@Base+0x3ec>
   19c7c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19c80:	sub	r3, r3, #4
   19c84:	str	r3, [fp, #-88]	; 0xffffffa8
   19c88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19c8c:	add	r3, r3, #1
   19c90:	str	r3, [fp, #-92]	; 0xffffffa4
   19c94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19c98:	ldr	r2, [fp, #-232]	; 0xffffff18
   19c9c:	cmp	r2, r3
   19ca0:	beq	19cc0 <argp_parse@@Base+0x418>
   19ca4:	ldr	r3, [pc, #1568]	; 1a2cc <argp_parse@@Base+0xa24>
   19ca8:	ldr	r3, [r3]
   19cac:	str	r3, [fp, #-56]	; 0xffffffc8
   19cb0:	mov	r6, #0
   19cb4:	mov	sl, #1
   19cb8:	mvn	r9, #0
   19cbc:	b	19f30 <argp_parse@@Base+0x688>
   19cc0:	ldr	r0, [r2]
   19cc4:	cmp	r0, #0
   19cc8:	beq	19ca4 <argp_parse@@Base+0x3fc>
   19ccc:	bl	1a3dc <argp_parse@@Base+0xb34>
   19cd0:	str	r0, [fp, #-56]	; 0xffffffc8
   19cd4:	b	19cb0 <argp_parse@@Base+0x408>
   19cd8:	ldr	r3, [fp, #-84]	; 0xffffffac
   19cdc:	str	r3, [fp, #-148]	; 0xffffff6c
   19ce0:	str	r9, [fp, #-140]	; 0xffffff74
   19ce4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19ce8:	tst	r3, #64	; 0x40
   19cec:	beq	19db8 <argp_parse@@Base+0x510>
   19cf0:	sub	r3, fp, #148	; 0x94
   19cf4:	str	r3, [sp, #4]
   19cf8:	str	r6, [sp]
   19cfc:	ldr	r3, [fp, #-152]	; 0xffffff68
   19d00:	ldr	r2, [fp, #-156]	; 0xffffff64
   19d04:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19d08:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19d0c:	bl	1a578 <argp_parse@@Base+0xcd0>
   19d10:	mov	r5, r0
   19d14:	ldr	r4, [fp, #-148]	; 0xffffff6c
   19d18:	str	r4, [fp, #-84]	; 0xffffffac
   19d1c:	cmn	r5, #1
   19d20:	beq	19de0 <argp_parse@@Base+0x538>
   19d24:	cmp	r5, #63	; 0x3f
   19d28:	beq	19e0c <argp_parse@@Base+0x564>
   19d2c:	cmp	r5, #1
   19d30:	beq	19e44 <argp_parse@@Base+0x59c>
   19d34:	ldr	r4, [fp, #-136]	; 0xffffff78
   19d38:	asrs	r3, r5, #24
   19d3c:	bne	19ef0 <argp_parse@@Base+0x648>
   19d40:	mov	r1, r5
   19d44:	ldr	r0, [fp, #-156]	; 0xffffff64
   19d48:	bl	119cc <strchr@plt>
   19d4c:	subs	r1, r0, #0
   19d50:	beq	19da0 <argp_parse@@Base+0x4f8>
   19d54:	ldr	r0, [fp, #-112]	; 0xffffff90
   19d58:	ldr	r2, [fp, #-108]	; 0xffffff94
   19d5c:	cmp	r2, r0
   19d60:	bls	19da0 <argp_parse@@Base+0x4f8>
   19d64:	ldr	r3, [r0, #8]
   19d68:	cmp	r1, r3
   19d6c:	bcc	19d88 <argp_parse@@Base+0x4e0>
   19d70:	add	r0, r0, #36	; 0x24
   19d74:	cmp	r2, r0
   19d78:	bls	19da0 <argp_parse@@Base+0x4f8>
   19d7c:	ldr	r3, [r0, #8]
   19d80:	cmp	r1, r3
   19d84:	bcs	19d70 <argp_parse@@Base+0x4c8>
   19d88:	mov	r3, r4
   19d8c:	mov	r2, r5
   19d90:	sub	r1, fp, #96	; 0x60
   19d94:	bl	192c0 <tcgetattr@plt+0x76d8>
   19d98:	cmp	r0, #7
   19d9c:	bne	19f28 <argp_parse@@Base+0x680>
   19da0:	ldr	r3, [pc, #1348]	; 1a2ec <argp_parse@@Base+0xa44>
   19da4:	mov	r2, r5
   19da8:	ldr	r1, [pc, #1344]	; 1a2f0 <argp_parse@@Base+0xa48>
   19dac:	sub	r0, fp, #96	; 0x60
   19db0:	bl	1e548 <argp_error@@Base>
   19db4:	b	19fd0 <argp_parse@@Base+0x728>
   19db8:	sub	r3, fp, #148	; 0x94
   19dbc:	str	r3, [sp, #4]
   19dc0:	str	r6, [sp]
   19dc4:	ldr	r3, [fp, #-152]	; 0xffffff68
   19dc8:	ldr	r2, [fp, #-156]	; 0xffffff64
   19dcc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19dd0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19dd4:	bl	1a51c <argp_parse@@Base+0xc74>
   19dd8:	mov	r5, r0
   19ddc:	b	19d14 <argp_parse@@Base+0x46c>
   19de0:	str	r6, [fp, #-100]	; 0xffffff9c
   19de4:	cmp	r4, #1
   19de8:	ble	19f58 <argp_parse@@Base+0x6b0>
   19dec:	sub	r3, r4, #-1073741823	; 0xc0000001
   19df0:	ldr	r1, [pc, #1276]	; 1a2f4 <argp_parse@@Base+0xa4c>
   19df4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19df8:	ldr	r0, [r2, r3, lsl #2]
   19dfc:	bl	1178c <strcmp@plt>
   19e00:	cmp	r0, #0
   19e04:	streq	r4, [fp, #-72]	; 0xffffffb8
   19e08:	b	19f58 <argp_parse@@Base+0x6b0>
   19e0c:	ldr	r3, [fp, #-140]	; 0xffffff74
   19e10:	cmn	r3, #1
   19e14:	beq	19d34 <argp_parse@@Base+0x48c>
   19e18:	mov	r3, #0
   19e1c:	b	19fe0 <argp_parse@@Base+0x738>
   19e20:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19e24:	tst	r2, #4
   19e28:	movne	r3, #1
   19e2c:	bne	19fe0 <argp_parse@@Base+0x738>
   19e30:	add	r2, r3, #1
   19e34:	str	r2, [fp, #-84]	; 0xffffffac
   19e38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19e3c:	ldr	r3, [r2, r3, lsl #2]
   19e40:	str	r3, [fp, #-136]	; 0xffffff78
   19e44:	ldr	r7, [fp, #-136]	; 0xffffff78
   19e48:	ldr	r8, [fp, #-84]	; 0xffffffac
   19e4c:	sub	r8, r8, #1
   19e50:	str	r8, [fp, #-84]	; 0xffffffac
   19e54:	ldr	r5, [fp, #-112]	; 0xffffff90
   19e58:	ldr	r3, [fp, #-108]	; 0xffffff94
   19e5c:	cmp	r3, r5
   19e60:	bhi	19eac <argp_parse@@Base+0x604>
   19e64:	b	19ee8 <argp_parse@@Base+0x640>
   19e68:	ldr	r3, [fp, #-84]	; 0xffffffac
   19e6c:	sub	r3, r3, #1
   19e70:	str	r3, [fp, #-84]	; 0xffffffac
   19e74:	mov	r3, r6
   19e78:	ldr	r2, [pc, #1144]	; 1a2f8 <argp_parse@@Base+0xa50>
   19e7c:	sub	r1, fp, #96	; 0x60
   19e80:	mov	r0, r5
   19e84:	bl	192c0 <tcgetattr@plt+0x76d8>
   19e88:	add	r5, r5, #36	; 0x24
   19e8c:	ldr	r3, [fp, #-108]	; 0xffffff94
   19e90:	cmp	r5, r3
   19e94:	movcs	r3, #0
   19e98:	movcc	r3, #1
   19e9c:	cmp	r0, #7
   19ea0:	movne	r3, #0
   19ea4:	cmp	r3, #0
   19ea8:	beq	1a28c <argp_parse@@Base+0x9e4>
   19eac:	ldr	r3, [fp, #-84]	; 0xffffffac
   19eb0:	add	r3, r3, #1
   19eb4:	str	r3, [fp, #-84]	; 0xffffffac
   19eb8:	mov	r3, r7
   19ebc:	mov	r2, r6
   19ec0:	sub	r1, fp, #96	; 0x60
   19ec4:	mov	r0, r5
   19ec8:	bl	192c0 <tcgetattr@plt+0x76d8>
   19ecc:	cmp	r0, #7
   19ed0:	beq	19e68 <argp_parse@@Base+0x5c0>
   19ed4:	add	r5, r5, #36	; 0x24
   19ed8:	cmp	r0, #0
   19edc:	beq	1a29c <argp_parse@@Base+0x9f4>
   19ee0:	cmp	r0, #7
   19ee4:	bne	19f28 <argp_parse@@Base+0x680>
   19ee8:	mov	r5, #1
   19eec:	b	19fd0 <argp_parse@@Base+0x728>
   19ef0:	ands	r1, r5, #8388608	; 0x800000
   19ef4:	movne	r1, #-16777216	; 0xff000000
   19ef8:	bic	r2, r5, #-16777216	; 0xff000000
   19efc:	add	r0, r3, r3, lsl #3
   19f00:	lsl	r0, r0, #2
   19f04:	sub	r0, r0, #36	; 0x24
   19f08:	mov	r3, r4
   19f0c:	orr	r2, r2, r1
   19f10:	sub	r1, fp, #96	; 0x60
   19f14:	ldr	ip, [fp, #-112]	; 0xffffff90
   19f18:	add	r0, ip, r0
   19f1c:	bl	192c0 <tcgetattr@plt+0x76d8>
   19f20:	cmp	r0, #7
   19f24:	beq	19f70 <argp_parse@@Base+0x6c8>
   19f28:	cmp	r0, #0
   19f2c:	bne	1a080 <argp_parse@@Base+0x7d8>
   19f30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19f34:	cmp	r3, #0
   19f38:	beq	19f4c <argp_parse@@Base+0x6a4>
   19f3c:	ldr	r2, [fp, #-84]	; 0xffffffac
   19f40:	cmp	r3, r2
   19f44:	strgt	r6, [fp, #-72]	; 0xffffffb8
   19f48:	ble	19f58 <argp_parse@@Base+0x6b0>
   19f4c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19f50:	cmp	r3, #0
   19f54:	bne	19cd8 <argp_parse@@Base+0x430>
   19f58:	ldr	r3, [fp, #-84]	; 0xffffffac
   19f5c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19f60:	cmp	r3, r2
   19f64:	blt	19e20 <argp_parse@@Base+0x578>
   19f68:	mov	r3, #1
   19f6c:	b	19fe0 <argp_parse@@Base+0x738>
   19f70:	ldr	r3, [fp, #-152]	; 0xffffff68
   19f74:	ldr	r2, [r3, #12]
   19f78:	cmp	r2, r5
   19f7c:	beq	19fb0 <argp_parse@@Base+0x708>
   19f80:	ldr	r2, [r3]
   19f84:	cmp	r2, #0
   19f88:	beq	1a078 <argp_parse@@Base+0x7d0>
   19f8c:	add	r3, r3, #16
   19f90:	ldr	r2, [r3, #12]
   19f94:	cmp	r2, r5
   19f98:	beq	19fb0 <argp_parse@@Base+0x708>
   19f9c:	ldr	r2, [r3]
   19fa0:	cmp	r2, #0
   19fa4:	bne	19f8c <argp_parse@@Base+0x6e4>
   19fa8:	ldr	r2, [pc, #844]	; 1a2fc <argp_parse@@Base+0xa54>
   19fac:	b	19fc0 <argp_parse@@Base+0x718>
   19fb0:	ldr	r2, [r3]
   19fb4:	ldr	r3, [pc, #832]	; 1a2fc <argp_parse@@Base+0xa54>
   19fb8:	cmp	r2, #0
   19fbc:	moveq	r2, r3
   19fc0:	ldr	r3, [pc, #804]	; 1a2ec <argp_parse@@Base+0xa44>
   19fc4:	ldr	r1, [pc, #820]	; 1a300 <argp_parse@@Base+0xa58>
   19fc8:	sub	r0, fp, #96	; 0x60
   19fcc:	bl	1e548 <argp_error@@Base>
   19fd0:	add	r5, r5, #1
   19fd4:	bics	r3, r5, #2
   19fd8:	moveq	r3, #1
   19fdc:	movne	r3, #0
   19fe0:	cmp	r3, #0
   19fe4:	moveq	r4, #7
   19fe8:	beq	1a084 <argp_parse@@Base+0x7dc>
   19fec:	ldr	r3, [fp, #-84]	; 0xffffffac
   19ff0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19ff4:	cmp	r3, r2
   19ff8:	beq	1a124 <argp_parse@@Base+0x87c>
   19ffc:	ldr	r2, [fp, #4]
   1a000:	cmp	r2, #0
   1a004:	strne	r3, [r2]
   1a008:	beq	1a220 <argp_parse@@Base+0x978>
   1a00c:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a010:	sub	r5, r5, #36	; 0x24
   1a014:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a018:	cmp	r5, r3
   1a01c:	bcc	1a25c <argp_parse@@Base+0x9b4>
   1a020:	ldr	r7, [pc, #732]	; 1a304 <argp_parse@@Base+0xa5c>
   1a024:	mov	r6, #0
   1a028:	mov	r3, r6
   1a02c:	mov	r2, r7
   1a030:	sub	r1, fp, #96	; 0x60
   1a034:	mov	r0, r5
   1a038:	bl	192c0 <tcgetattr@plt+0x76d8>
   1a03c:	sub	r5, r5, #36	; 0x24
   1a040:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a044:	cmp	r5, r3
   1a048:	bcc	1a058 <argp_parse@@Base+0x7b0>
   1a04c:	cmp	r0, #7
   1a050:	cmpne	r0, #0
   1a054:	beq	1a028 <argp_parse@@Base+0x780>
   1a058:	mov	r4, r0
   1a05c:	cmp	r0, #7
   1a060:	moveq	r4, #0
   1a064:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a068:	sub	r5, r5, #36	; 0x24
   1a06c:	cmp	r3, r5
   1a070:	bls	1a0dc <argp_parse@@Base+0x834>
   1a074:	b	1a110 <argp_parse@@Base+0x868>
   1a078:	ldr	r2, [pc, #636]	; 1a2fc <argp_parse@@Base+0xa54>
   1a07c:	b	19fc0 <argp_parse@@Base+0x718>
   1a080:	mov	r4, r0
   1a084:	cmp	r4, #7
   1a088:	beq	1a244 <argp_parse@@Base+0x99c>
   1a08c:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a090:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a094:	cmp	r3, r5
   1a098:	bls	1a0c8 <argp_parse@@Base+0x820>
   1a09c:	ldr	r7, [pc, #612]	; 1a308 <argp_parse@@Base+0xa60>
   1a0a0:	mov	r6, #0
   1a0a4:	mov	r3, r6
   1a0a8:	mov	r2, r7
   1a0ac:	sub	r1, fp, #96	; 0x60
   1a0b0:	mov	r0, r5
   1a0b4:	bl	192c0 <tcgetattr@plt+0x76d8>
   1a0b8:	add	r5, r5, #36	; 0x24
   1a0bc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a0c0:	cmp	r5, r3
   1a0c4:	bcc	1a0a4 <argp_parse@@Base+0x7fc>
   1a0c8:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a0cc:	sub	r5, r5, #36	; 0x24
   1a0d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a0d4:	cmp	r3, r5
   1a0d8:	bhi	1a108 <argp_parse@@Base+0x860>
   1a0dc:	ldr	r7, [pc, #552]	; 1a30c <argp_parse@@Base+0xa64>
   1a0e0:	mov	r6, #0
   1a0e4:	mov	r3, r6
   1a0e8:	mov	r2, r7
   1a0ec:	sub	r1, fp, #96	; 0x60
   1a0f0:	mov	r0, r5
   1a0f4:	bl	192c0 <tcgetattr@plt+0x76d8>
   1a0f8:	sub	r5, r5, #36	; 0x24
   1a0fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a100:	cmp	r5, r3
   1a104:	bcs	1a0e4 <argp_parse@@Base+0x83c>
   1a108:	cmp	r4, #7
   1a10c:	moveq	r4, #22
   1a110:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a114:	bl	1a49c <argp_parse@@Base+0xbf4>
   1a118:	mov	r0, r4
   1a11c:	sub	sp, fp, #32
   1a120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a124:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a128:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a12c:	cmp	r6, r5
   1a130:	bcs	1a264 <argp_parse@@Base+0x9bc>
   1a134:	mov	r4, #0
   1a138:	ldr	r8, [pc, #464]	; 1a310 <argp_parse@@Base+0xa68>
   1a13c:	mov	r7, r4
   1a140:	mov	r0, r4
   1a144:	b	1a164 <argp_parse@@Base+0x8bc>
   1a148:	add	r6, r6, #36	; 0x24
   1a14c:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a150:	cmp	r6, r5
   1a154:	bcs	1a190 <argp_parse@@Base+0x8e8>
   1a158:	cmp	r0, #7
   1a15c:	cmpne	r0, #0
   1a160:	bne	1a188 <argp_parse@@Base+0x8e0>
   1a164:	ldr	r3, [r6, #12]
   1a168:	cmp	r3, #0
   1a16c:	bne	1a148 <argp_parse@@Base+0x8a0>
   1a170:	mov	r3, r7
   1a174:	mov	r2, r8
   1a178:	sub	r1, fp, #96	; 0x60
   1a17c:	mov	r0, r6
   1a180:	bl	192c0 <tcgetattr@plt+0x76d8>
   1a184:	b	1a148 <argp_parse@@Base+0x8a0>
   1a188:	mov	r4, r0
   1a18c:	b	1a1f4 <argp_parse@@Base+0x94c>
   1a190:	mov	r4, r0
   1a194:	sub	r5, r5, #36	; 0x24
   1a198:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a19c:	cmp	r3, r5
   1a1a0:	bhi	1a1f4 <argp_parse@@Base+0x94c>
   1a1a4:	cmp	r0, #0
   1a1a8:	cmpne	r0, #7
   1a1ac:	bne	1a1f4 <argp_parse@@Base+0x94c>
   1a1b0:	ldr	r7, [pc, #348]	; 1a314 <argp_parse@@Base+0xa6c>
   1a1b4:	mov	r6, #0
   1a1b8:	mov	r3, r6
   1a1bc:	mov	r2, r7
   1a1c0:	sub	r1, fp, #96	; 0x60
   1a1c4:	mov	r0, r5
   1a1c8:	bl	192c0 <tcgetattr@plt+0x76d8>
   1a1cc:	sub	r5, r5, #36	; 0x24
   1a1d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a1d4:	cmp	r5, r3
   1a1d8:	bcc	1a1f0 <argp_parse@@Base+0x948>
   1a1dc:	cmp	r0, #7
   1a1e0:	cmpne	r0, #0
   1a1e4:	beq	1a1b8 <argp_parse@@Base+0x910>
   1a1e8:	mov	r4, r0
   1a1ec:	b	1a1f4 <argp_parse@@Base+0x94c>
   1a1f0:	mov	r4, r0
   1a1f4:	cmp	r4, #7
   1a1f8:	beq	1a278 <argp_parse@@Base+0x9d0>
   1a1fc:	ldr	r3, [fp, #4]
   1a200:	cmp	r3, #0
   1a204:	beq	1a2bc <argp_parse@@Base+0xa14>
   1a208:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a20c:	ldr	r2, [fp, #4]
   1a210:	str	r3, [r2]
   1a214:	cmp	r4, #0
   1a218:	beq	1a00c <argp_parse@@Base+0x764>
   1a21c:	b	1a084 <argp_parse@@Base+0x7dc>
   1a220:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a224:	tst	r3, #2
   1a228:	bne	1a244 <argp_parse@@Base+0x99c>
   1a22c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a230:	cmp	r0, #0
   1a234:	beq	1a244 <argp_parse@@Base+0x99c>
   1a238:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a23c:	ldr	r1, [pc, #212]	; 1a318 <argp_parse@@Base+0xa70>
   1a240:	bl	119e4 <fprintf@plt>
   1a244:	mov	r2, #260	; 0x104
   1a248:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a24c:	sub	r0, fp, #96	; 0x60
   1a250:	bl	1e48c <argp_state_help@@Base>
   1a254:	mov	r4, #7
   1a258:	b	1a08c <argp_parse@@Base+0x7e4>
   1a25c:	mov	r4, #0
   1a260:	b	1a108 <argp_parse@@Base+0x860>
   1a264:	sub	r5, r5, #36	; 0x24
   1a268:	cmp	r6, r5
   1a26c:	movhi	r4, #0
   1a270:	bls	1a1b0 <argp_parse@@Base+0x908>
   1a274:	b	1a1fc <argp_parse@@Base+0x954>
   1a278:	ldr	r3, [fp, #4]
   1a27c:	cmp	r3, #0
   1a280:	movne	r4, #0
   1a284:	bne	1a208 <argp_parse@@Base+0x960>
   1a288:	b	1a00c <argp_parse@@Base+0x764>
   1a28c:	cmp	r0, #0
   1a290:	bne	19ee0 <argp_parse@@Base+0x638>
   1a294:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a298:	str	r3, [fp, #-84]	; 0xffffffac
   1a29c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a2a0:	cmp	r8, r3
   1a2a4:	sublt	r8, r3, r8
   1a2a8:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   1a2ac:	addlt	r8, r3, r8
   1a2b0:	strlt	r8, [r5, #-24]	; 0xffffffe8
   1a2b4:	strge	sl, [fp, #-100]	; 0xffffff9c
   1a2b8:	b	19f30 <argp_parse@@Base+0x688>
   1a2bc:	cmp	r4, #0
   1a2c0:	beq	1a00c <argp_parse@@Base+0x764>
   1a2c4:	b	1a08c <argp_parse@@Base+0x7e4>
   1a2c8:	andeq	r2, r3, r8, lsl #10
   1a2cc:	andeq	r2, r3, r0, lsl #10
   1a2d0:	andeq	r2, r3, r0, lsl r5
   1a2d4:	andeq	r2, r3, r4, lsl r5
   1a2d8:	tsteq	r0, r3
   1a2dc:	muleq	r2, ip, fp
   1a2e0:	andeq	sl, r3, r8, ror #28
   1a2e4:			; <UNDEFINED> instruction: 0x00020bb8
   1a2e8:	muleq	r3, ip, r6
   1a2ec:	ldrdeq	r0, [r2], -r4
   1a2f0:	andeq	r0, r2, r8, ror #25
   1a2f4:	andeq	r0, r2, r4, ror #25
   1a2f8:	tsteq	r0, r6
   1a2fc:	andeq	r0, r2, r0, ror #25
   1a300:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1a304:	tsteq	r0, r4
   1a308:	tsteq	r0, r5
   1a30c:	tsteq	r0, r7
   1a310:	tsteq	r0, r2
   1a314:	tsteq	r0, r1
   1a318:	strdeq	r0, [r2], -ip
   1a31c:	cmp	r1, #0
   1a320:	beq	1a36c <argp_parse@@Base+0xac4>
   1a324:	ldr	r2, [r1, #52]	; 0x34
   1a328:	ldr	r3, [r2, #48]	; 0x30
   1a32c:	ldr	r1, [r2, #52]	; 0x34
   1a330:	cmp	r3, r1
   1a334:	bcs	1a374 <argp_parse@@Base+0xacc>
   1a338:	ldr	r2, [r3, #4]
   1a33c:	cmp	r0, r2
   1a340:	beq	1a35c <argp_parse@@Base+0xab4>
   1a344:	add	r3, r3, #36	; 0x24
   1a348:	cmp	r3, r1
   1a34c:	bcs	1a364 <argp_parse@@Base+0xabc>
   1a350:	ldr	r2, [r3, #4]
   1a354:	cmp	r2, r0
   1a358:	bne	1a344 <argp_parse@@Base+0xa9c>
   1a35c:	ldr	r0, [r3, #24]
   1a360:	bx	lr
   1a364:	mov	r0, #0
   1a368:	bx	lr
   1a36c:	mov	r0, #0
   1a370:	bx	lr
   1a374:	mov	r0, #0
   1a378:	bx	lr
   1a37c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a380:	sub	sp, sp, #12
   1a384:	ldr	r3, [pc, #28]	; 1a3a8 <argp_parse@@Base+0xb00>
   1a388:	ldr	r1, [r3]
   1a38c:	ldr	r3, [r3, #4]
   1a390:	str	r3, [sp]
   1a394:	ldr	r3, [pc, #16]	; 1a3ac <argp_parse@@Base+0xb04>
   1a398:	ldr	r2, [pc, #16]	; 1a3b0 <argp_parse@@Base+0xb08>
   1a39c:	bl	1ad00 <_obstack_memory_used@@Base+0x3e4>
   1a3a0:	add	sp, sp, #12
   1a3a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3a8:	andeq	sl, r3, r0, lsr #13
   1a3ac:	ldrdeq	r0, [r2], -ip
   1a3b0:	andeq	r0, r2, ip, ror #27
   1a3b4:	ldr	r2, [pc, #20]	; 1a3d0 <argp_parse@@Base+0xb28>
   1a3b8:	ldr	r3, [pc, #20]	; 1a3d4 <argp_parse@@Base+0xb2c>
   1a3bc:	str	r2, [r3]
   1a3c0:	ldr	r3, [pc, #16]	; 1a3d8 <argp_parse@@Base+0xb30>
   1a3c4:	str	r0, [r3]
   1a3c8:	str	r1, [r3, #4]
   1a3cc:	bx	lr
   1a3d0:	andeq	sl, r1, ip, ror r3
   1a3d4:	muleq	r3, ip, r6
   1a3d8:	andeq	sl, r3, r0, lsr #13
   1a3dc:	ldrb	r3, [r0]
   1a3e0:	cmp	r3, #47	; 0x2f
   1a3e4:	bne	1a3f4 <argp_parse@@Base+0xb4c>
   1a3e8:	ldrb	r3, [r0, #1]!
   1a3ec:	cmp	r3, #47	; 0x2f
   1a3f0:	beq	1a3e8 <argp_parse@@Base+0xb40>
   1a3f4:	ldrb	r2, [r0]
   1a3f8:	cmp	r2, #0
   1a3fc:	bxeq	lr
   1a400:	push	{lr}		; (str lr, [sp, #-4]!)
   1a404:	mov	r1, r0
   1a408:	mov	r3, #0
   1a40c:	mov	lr, #1
   1a410:	mov	ip, r3
   1a414:	b	1a424 <argp_parse@@Base+0xb7c>
   1a418:	ldrb	r2, [r1, #1]!
   1a41c:	cmp	r2, #0
   1a420:	beq	1a440 <argp_parse@@Base+0xb98>
   1a424:	cmp	r2, #47	; 0x2f
   1a428:	moveq	r3, lr
   1a42c:	beq	1a418 <argp_parse@@Base+0xb70>
   1a430:	cmp	r3, #0
   1a434:	movne	r0, r1
   1a438:	movne	r3, ip
   1a43c:	b	1a418 <argp_parse@@Base+0xb70>
   1a440:	pop	{pc}		; (ldr pc, [sp], #4)
   1a444:	push	{r4, lr}
   1a448:	mov	r4, r0
   1a44c:	bl	119c0 <strlen@plt>
   1a450:	cmp	r0, #1
   1a454:	popls	{r4, pc}
   1a458:	sub	r3, r0, #1
   1a45c:	add	r2, r4, r3
   1a460:	ldrb	r1, [r4, r3]
   1a464:	cmp	r1, #47	; 0x2f
   1a468:	popne	{r4, pc}
   1a46c:	cmp	r3, #1
   1a470:	beq	1a494 <argp_parse@@Base+0xbec>
   1a474:	sub	r0, r3, #1
   1a478:	ldrb	r1, [r2, #-1]!
   1a47c:	cmp	r1, #47	; 0x2f
   1a480:	beq	1a48c <argp_parse@@Base+0xbe4>
   1a484:	mov	r0, r3
   1a488:	pop	{r4, pc}
   1a48c:	mov	r3, r0
   1a490:	b	1a46c <argp_parse@@Base+0xbc4>
   1a494:	mov	r0, #1
   1a498:	pop	{r4, pc}
   1a49c:	push	{r4, r5, lr}
   1a4a0:	sub	sp, sp, #12
   1a4a4:	mov	r5, r0
   1a4a8:	bl	11a14 <__errno_location@plt>
   1a4ac:	mov	r4, r0
   1a4b0:	ldr	r3, [r0]
   1a4b4:	str	r3, [sp]
   1a4b8:	str	r3, [sp, #4]
   1a4bc:	mov	r3, #0
   1a4c0:	str	r3, [r0]
   1a4c4:	mov	r0, r5
   1a4c8:	bl	117e0 <free@plt>
   1a4cc:	ldr	r3, [r4]
   1a4d0:	cmp	r3, #0
   1a4d4:	moveq	r3, #4
   1a4d8:	movne	r3, #0
   1a4dc:	add	r2, sp, #8
   1a4e0:	add	r3, r2, r3
   1a4e4:	ldr	r3, [r3, #-8]
   1a4e8:	str	r3, [r4]
   1a4ec:	add	sp, sp, #12
   1a4f0:	pop	{r4, r5, pc}
   1a4f4:	push	{lr}		; (str lr, [sp, #-4]!)
   1a4f8:	sub	sp, sp, #20
   1a4fc:	mov	ip, #0
   1a500:	str	ip, [sp, #8]
   1a504:	str	ip, [sp, #4]
   1a508:	ldr	ip, [sp, #24]
   1a50c:	str	ip, [sp]
   1a510:	bl	1f1c4 <argp_error@@Base+0xc7c>
   1a514:	add	sp, sp, #20
   1a518:	pop	{pc}		; (ldr pc, [sp], #4)
   1a51c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a520:	sub	sp, sp, #20
   1a524:	mov	ip, #0
   1a528:	str	ip, [sp, #12]
   1a52c:	ldr	lr, [sp, #28]
   1a530:	str	lr, [sp, #8]
   1a534:	str	ip, [sp, #4]
   1a538:	ldr	ip, [sp, #24]
   1a53c:	str	ip, [sp]
   1a540:	bl	1ec48 <argp_error@@Base+0x700>
   1a544:	add	sp, sp, #20
   1a548:	pop	{pc}		; (ldr pc, [sp], #4)
   1a54c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a550:	sub	sp, sp, #20
   1a554:	mov	ip, #0
   1a558:	str	ip, [sp, #8]
   1a55c:	mov	ip, #1
   1a560:	str	ip, [sp, #4]
   1a564:	ldr	ip, [sp, #24]
   1a568:	str	ip, [sp]
   1a56c:	bl	1f1c4 <argp_error@@Base+0xc7c>
   1a570:	add	sp, sp, #20
   1a574:	pop	{pc}		; (ldr pc, [sp], #4)
   1a578:	push	{lr}		; (str lr, [sp, #-4]!)
   1a57c:	sub	sp, sp, #20
   1a580:	mov	ip, #0
   1a584:	str	ip, [sp, #12]
   1a588:	ldr	ip, [sp, #28]
   1a58c:	str	ip, [sp, #8]
   1a590:	mov	ip, #1
   1a594:	str	ip, [sp, #4]
   1a598:	ldr	ip, [sp, #24]
   1a59c:	str	ip, [sp]
   1a5a0:	bl	1ec48 <argp_error@@Base+0x700>
   1a5a4:	add	sp, sp, #20
   1a5a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5ac:	push	{r1, r2, r3}
   1a5b0:	push	{lr}		; (str lr, [sp, #-4]!)
   1a5b4:	sub	sp, sp, #8
   1a5b8:	add	r3, sp, #20
   1a5bc:	str	r3, [sp, #4]
   1a5c0:	ldr	r2, [sp, #16]
   1a5c4:	ldr	r1, [sp, #12]
   1a5c8:	bl	118dc <ioctl@plt>
   1a5cc:	add	sp, sp, #8
   1a5d0:	pop	{lr}		; (ldr lr, [sp], #4)
   1a5d4:	add	sp, sp, #12
   1a5d8:	bx	lr
   1a5dc:	push	{r4, lr}
   1a5e0:	ldrb	r3, [r0, #40]	; 0x28
   1a5e4:	tst	r3, #1
   1a5e8:	bne	1a5fc <argp_parse@@Base+0xd54>
   1a5ec:	ldr	r3, [r0, #28]
   1a5f0:	mov	r0, r1
   1a5f4:	blx	r3
   1a5f8:	pop	{r4, pc}
   1a5fc:	ldr	r3, [r0, #28]
   1a600:	ldr	r0, [r0, #36]	; 0x24
   1a604:	blx	r3
   1a608:	pop	{r4, pc}
   1a60c:	push	{r4, lr}
   1a610:	ldrb	r3, [r0, #40]	; 0x28
   1a614:	tst	r3, #1
   1a618:	bne	1a62c <argp_parse@@Base+0xd84>
   1a61c:	ldr	r3, [r0, #32]
   1a620:	mov	r0, r1
   1a624:	blx	r3
   1a628:	pop	{r4, pc}
   1a62c:	ldr	r3, [r0, #32]
   1a630:	ldr	r0, [r0, #36]	; 0x24
   1a634:	blx	r3
   1a638:	pop	{r4, pc}
   1a63c:	push	{r4, r5, r6, lr}
   1a640:	mov	r4, r0
   1a644:	subs	r5, r2, #0
   1a648:	cmp	r2, #0
   1a64c:	moveq	r5, #8
   1a650:	ldr	r3, [pc, #112]	; 1a6c8 <argp_parse@@Base+0xe20>
   1a654:	cmp	r1, #0
   1a658:	moveq	r1, r3
   1a65c:	str	r1, [r0]
   1a660:	sub	r6, r5, #1
   1a664:	str	r6, [r0, #24]
   1a668:	bl	1a5dc <argp_parse@@Base+0xd34>
   1a66c:	str	r0, [r4, #4]
   1a670:	cmp	r0, #0
   1a674:	beq	1a6bc <argp_parse@@Base+0xe14>
   1a678:	add	r3, r0, #8
   1a67c:	add	r3, r3, r6
   1a680:	rsb	r5, r5, #0
   1a684:	and	r5, r5, r3
   1a688:	str	r5, [r4, #8]
   1a68c:	str	r5, [r4, #12]
   1a690:	ldr	r3, [r4]
   1a694:	add	r3, r0, r3
   1a698:	str	r3, [r0]
   1a69c:	str	r3, [r4, #16]
   1a6a0:	mov	r3, #0
   1a6a4:	str	r3, [r0, #4]
   1a6a8:	ldrb	r3, [r4, #40]	; 0x28
   1a6ac:	and	r3, r3, #249	; 0xf9
   1a6b0:	strb	r3, [r4, #40]	; 0x28
   1a6b4:	mov	r0, #1
   1a6b8:	pop	{r4, r5, r6, pc}
   1a6bc:	ldr	r3, [pc, #8]	; 1a6cc <argp_parse@@Base+0xe24>
   1a6c0:	ldr	r3, [r3]
   1a6c4:	blx	r3
   1a6c8:	andeq	r0, r0, r8, ror #31
   1a6cc:			; <UNDEFINED> instruction: 0x000324bc
   1a6d0:	push	{r4, lr}
   1a6d4:	ldr	r2, [pc, #24]	; 1a6f4 <argp_parse@@Base+0xe4c>
   1a6d8:	ldr	r1, [pc, #24]	; 1a6f8 <argp_parse@@Base+0xe50>
   1a6dc:	ldr	r3, [pc, #24]	; 1a6fc <argp_parse@@Base+0xe54>
   1a6e0:	ldr	r0, [r3]
   1a6e4:	bl	119e4 <fprintf@plt>
   1a6e8:	ldr	r3, [pc, #16]	; 1a700 <argp_parse@@Base+0xe58>
   1a6ec:	ldr	r0, [r3]
   1a6f0:	bl	119a8 <exit@plt>
   1a6f4:	strdeq	r0, [r2], -ip
   1a6f8:	andeq	r0, r2, ip, asr lr
   1a6fc:	andeq	r2, r3, r0, lsl r5
   1a700:	andeq	r2, r3, r8, ror #9

0001a704 <_obstack_begin@@Base>:
   1a704:	push	{r4, lr}
   1a708:	str	r3, [r0, #28]
   1a70c:	ldr	r3, [sp, #8]
   1a710:	str	r3, [r0, #32]
   1a714:	ldrb	r3, [r0, #40]	; 0x28
   1a718:	bic	r3, r3, #1
   1a71c:	strb	r3, [r0, #40]	; 0x28
   1a720:	bl	1a63c <argp_parse@@Base+0xd94>
   1a724:	pop	{r4, pc}

0001a728 <_obstack_begin_1@@Base>:
   1a728:	push	{r4, lr}
   1a72c:	str	r3, [r0, #28]
   1a730:	ldr	r3, [sp, #8]
   1a734:	str	r3, [r0, #32]
   1a738:	ldr	r3, [sp, #12]
   1a73c:	str	r3, [r0, #36]	; 0x24
   1a740:	ldrb	r3, [r0, #40]	; 0x28
   1a744:	orr	r3, r3, #1
   1a748:	strb	r3, [r0, #40]	; 0x28
   1a74c:	bl	1a63c <argp_parse@@Base+0xd94>
   1a750:	pop	{r4, pc}

0001a754 <_obstack_newchunk@@Base>:
   1a754:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a758:	ldr	r5, [r0, #12]
   1a75c:	ldr	r3, [r0, #8]
   1a760:	sub	r7, r5, r3
   1a764:	add	r1, r7, r1
   1a768:	ldr	r3, [r0, #24]
   1a76c:	adds	r3, r1, r3
   1a770:	movcc	r2, #1
   1a774:	movcs	r2, #0
   1a778:	cmp	r7, r1
   1a77c:	movhi	r1, #0
   1a780:	andls	r1, r2, #1
   1a784:	cmp	r1, #0
   1a788:	bne	1a798 <_obstack_newchunk@@Base+0x44>
   1a78c:	ldr	r3, [pc, #204]	; 1a860 <_obstack_newchunk@@Base+0x10c>
   1a790:	ldr	r3, [r3]
   1a794:	blx	r3
   1a798:	mov	r4, r0
   1a79c:	ldr	r8, [r0, #4]
   1a7a0:	add	r1, r3, r7, lsr #3
   1a7a4:	add	r1, r1, #100	; 0x64
   1a7a8:	ldr	r6, [r0]
   1a7ac:	cmp	r3, r6
   1a7b0:	movcc	r3, r6
   1a7b4:	cmp	r3, r1
   1a7b8:	movcs	r6, r3
   1a7bc:	movcc	r6, r1
   1a7c0:	mov	r1, r6
   1a7c4:	bl	1a5dc <argp_parse@@Base+0xd34>
   1a7c8:	subs	r9, r0, #0
   1a7cc:	beq	1a78c <_obstack_newchunk@@Base+0x38>
   1a7d0:	str	r9, [r4, #4]
   1a7d4:	str	r8, [r9, #4]
   1a7d8:	add	r1, r9, r6
   1a7dc:	str	r1, [r4, #16]
   1a7e0:	mov	r5, r9
   1a7e4:	str	r1, [r5], #8
   1a7e8:	ldr	r3, [r4, #24]
   1a7ec:	add	r5, r5, r3
   1a7f0:	bic	r5, r5, r3
   1a7f4:	mov	r2, r7
   1a7f8:	ldr	r1, [r4, #8]
   1a7fc:	mov	r0, r5
   1a800:	bl	11810 <memcpy@plt>
   1a804:	ldrb	r3, [r4, #40]	; 0x28
   1a808:	tst	r3, #2
   1a80c:	bne	1a82c <_obstack_newchunk@@Base+0xd8>
   1a810:	ldr	r2, [r4, #24]
   1a814:	add	r3, r8, #8
   1a818:	add	r3, r3, r2
   1a81c:	bic	r3, r3, r2
   1a820:	ldr	r2, [r4, #8]
   1a824:	cmp	r2, r3
   1a828:	beq	1a848 <_obstack_newchunk@@Base+0xf4>
   1a82c:	str	r5, [r4, #8]
   1a830:	add	r5, r5, r7
   1a834:	str	r5, [r4, #12]
   1a838:	ldrb	r3, [r4, #40]	; 0x28
   1a83c:	bic	r3, r3, #2
   1a840:	strb	r3, [r4, #40]	; 0x28
   1a844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a848:	ldr	r3, [r8, #4]
   1a84c:	str	r3, [r9, #4]
   1a850:	mov	r1, r8
   1a854:	mov	r0, r4
   1a858:	bl	1a60c <argp_parse@@Base+0xd64>
   1a85c:	b	1a82c <_obstack_newchunk@@Base+0xd8>
   1a860:			; <UNDEFINED> instruction: 0x000324bc

0001a864 <_obstack_allocated_p@@Base>:
   1a864:	ldr	r0, [r0, #4]
   1a868:	cmp	r0, #0
   1a86c:	bne	1a880 <_obstack_allocated_p@@Base+0x1c>
   1a870:	b	1a894 <_obstack_allocated_p@@Base+0x30>
   1a874:	ldr	r0, [r0, #4]
   1a878:	cmp	r0, #0
   1a87c:	beq	1a894 <_obstack_allocated_p@@Base+0x30>
   1a880:	cmp	r1, r0
   1a884:	bls	1a874 <_obstack_allocated_p@@Base+0x10>
   1a888:	ldr	r3, [r0]
   1a88c:	cmp	r1, r3
   1a890:	bhi	1a874 <_obstack_allocated_p@@Base+0x10>
   1a894:	adds	r0, r0, #0
   1a898:	movne	r0, #1
   1a89c:	bx	lr

0001a8a0 <_obstack_free@@Base>:
   1a8a0:	push	{r4, r5, r6, lr}
   1a8a4:	mov	r4, r0
   1a8a8:	mov	r6, r1
   1a8ac:	ldr	r1, [r0, #4]
   1a8b0:	cmp	r1, #0
   1a8b4:	bne	1a8e8 <_obstack_free@@Base+0x48>
   1a8b8:	cmp	r6, #0
   1a8bc:	popeq	{r4, r5, r6, pc}
   1a8c0:	bl	11bac <abort@plt>
   1a8c4:	ldr	r5, [r1, #4]
   1a8c8:	mov	r0, r4
   1a8cc:	bl	1a60c <argp_parse@@Base+0xd64>
   1a8d0:	ldrb	r3, [r4, #40]	; 0x28
   1a8d4:	orr	r3, r3, #2
   1a8d8:	strb	r3, [r4, #40]	; 0x28
   1a8dc:	mov	r1, r5
   1a8e0:	cmp	r5, #0
   1a8e4:	beq	1a8b8 <_obstack_free@@Base+0x18>
   1a8e8:	cmp	r6, r1
   1a8ec:	bls	1a8c4 <_obstack_free@@Base+0x24>
   1a8f0:	ldr	r3, [r1]
   1a8f4:	cmp	r6, r3
   1a8f8:	bhi	1a8c4 <_obstack_free@@Base+0x24>
   1a8fc:	cmp	r1, #0
   1a900:	beq	1a8b8 <_obstack_free@@Base+0x18>
   1a904:	str	r6, [r4, #12]
   1a908:	str	r6, [r4, #8]
   1a90c:	ldr	r3, [r1]
   1a910:	str	r3, [r4, #16]
   1a914:	str	r1, [r4, #4]
   1a918:	pop	{r4, r5, r6, pc}

0001a91c <_obstack_memory_used@@Base>:
   1a91c:	ldr	r3, [r0, #4]
   1a920:	cmp	r3, #0
   1a924:	beq	1a948 <_obstack_memory_used@@Base+0x2c>
   1a928:	mov	r0, #0
   1a92c:	ldr	r2, [r3]
   1a930:	sub	r2, r2, r3
   1a934:	add	r0, r0, r2
   1a938:	ldr	r3, [r3, #4]
   1a93c:	cmp	r3, #0
   1a940:	bne	1a92c <_obstack_memory_used@@Base+0x10>
   1a944:	bx	lr
   1a948:	mov	r0, #0
   1a94c:	bx	lr
   1a950:	push	{r4, r5, r6, lr}
   1a954:	subs	r4, r0, #0
   1a958:	beq	1a9d0 <_obstack_memory_used@@Base+0xb4>
   1a95c:	mov	r1, #47	; 0x2f
   1a960:	mov	r0, r4
   1a964:	bl	11ac8 <strrchr@plt>
   1a968:	cmp	r0, #0
   1a96c:	addne	r5, r0, #1
   1a970:	moveq	r5, r4
   1a974:	sub	r3, r5, r4
   1a978:	cmp	r3, #6
   1a97c:	ble	1a9bc <_obstack_memory_used@@Base+0xa0>
   1a980:	mov	r2, #7
   1a984:	ldr	r1, [pc, #96]	; 1a9ec <_obstack_memory_used@@Base+0xd0>
   1a988:	sub	r0, r5, #7
   1a98c:	bl	11ba0 <strncmp@plt>
   1a990:	cmp	r0, #0
   1a994:	bne	1a9bc <_obstack_memory_used@@Base+0xa0>
   1a998:	mov	r2, #3
   1a99c:	ldr	r1, [pc, #76]	; 1a9f0 <_obstack_memory_used@@Base+0xd4>
   1a9a0:	mov	r0, r5
   1a9a4:	bl	11ba0 <strncmp@plt>
   1a9a8:	cmp	r0, #0
   1a9ac:	addeq	r4, r5, #3
   1a9b0:	ldreq	r3, [pc, #60]	; 1a9f4 <_obstack_memory_used@@Base+0xd8>
   1a9b4:	streq	r4, [r3]
   1a9b8:	movne	r4, r5
   1a9bc:	ldr	r3, [pc, #52]	; 1a9f8 <_obstack_memory_used@@Base+0xdc>
   1a9c0:	str	r4, [r3]
   1a9c4:	ldr	r3, [pc, #48]	; 1a9fc <_obstack_memory_used@@Base+0xe0>
   1a9c8:	str	r4, [r3]
   1a9cc:	pop	{r4, r5, r6, pc}
   1a9d0:	ldr	r3, [pc, #40]	; 1aa00 <_obstack_memory_used@@Base+0xe4>
   1a9d4:	ldr	r3, [r3]
   1a9d8:	mov	r2, #55	; 0x37
   1a9dc:	mov	r1, #1
   1a9e0:	ldr	r0, [pc, #28]	; 1aa04 <_obstack_memory_used@@Base+0xe8>
   1a9e4:	bl	118c4 <fwrite@plt>
   1a9e8:	bl	11bac <abort@plt>
   1a9ec:	andeq	r0, r2, r8, asr #28
   1a9f0:	andeq	r0, r2, r0, asr lr
   1a9f4:	andeq	r2, r3, r0, lsl #10
   1a9f8:	andeq	sl, r3, r8, lsr #13
   1a9fc:	andeq	r2, r3, r8, lsl #10
   1aa00:	andeq	r2, r3, r0, lsl r5
   1aa04:	andeq	r0, r2, r0, lsl lr
   1aa08:	push	{r4, r5, r6, lr}
   1aa0c:	sub	sp, sp, #32
   1aa10:	mov	r4, r0
   1aa14:	ldr	r5, [sp, #48]	; 0x30
   1aa18:	ldr	r6, [sp, #52]	; 0x34
   1aa1c:	cmp	r1, #0
   1aa20:	beq	1aaa8 <_obstack_memory_used@@Base+0x18c>
   1aa24:	str	r3, [sp]
   1aa28:	mov	r3, r2
   1aa2c:	mov	r2, r1
   1aa30:	ldr	r1, [pc, #644]	; 1acbc <_obstack_memory_used@@Base+0x3a0>
   1aa34:	bl	119e4 <fprintf@plt>
   1aa38:	ldr	r3, [pc, #640]	; 1acc0 <_obstack_memory_used@@Base+0x3a4>
   1aa3c:	ldr	r2, [pc, #640]	; 1acc4 <_obstack_memory_used@@Base+0x3a8>
   1aa40:	ldr	r1, [pc, #640]	; 1acc8 <_obstack_memory_used@@Base+0x3ac>
   1aa44:	mov	r0, r4
   1aa48:	bl	119e4 <fprintf@plt>
   1aa4c:	mov	r1, r4
   1aa50:	mov	r0, #10
   1aa54:	bl	11ae0 <fputc@plt>
   1aa58:	ldr	r2, [pc, #620]	; 1accc <_obstack_memory_used@@Base+0x3b0>
   1aa5c:	ldr	r1, [pc, #620]	; 1acd0 <_obstack_memory_used@@Base+0x3b4>
   1aa60:	mov	r0, r4
   1aa64:	bl	119e4 <fprintf@plt>
   1aa68:	mov	r1, r4
   1aa6c:	mov	r0, #10
   1aa70:	bl	11ae0 <fputc@plt>
   1aa74:	cmp	r6, #9
   1aa78:	ldrls	pc, [pc, r6, lsl #2]
   1aa7c:	b	1ac6c <_obstack_memory_used@@Base+0x350>
   1aa80:	andeq	sl, r1, r4, asr #21
   1aa84:			; <UNDEFINED> instruction: 0x0001aab4
   1aa88:	andeq	sl, r1, ip, asr #21
   1aa8c:	andeq	sl, r1, r4, ror #21
   1aa90:	andeq	sl, r1, r4, lsl #22
   1aa94:	andeq	sl, r1, ip, lsr #22
   1aa98:	andeq	sl, r1, ip, asr fp
   1aa9c:	muleq	r1, r4, fp
   1aaa0:	ldrdeq	sl, [r1], -r4
   1aaa4:	andeq	sl, r1, ip, lsl ip
   1aaa8:	ldr	r1, [pc, #548]	; 1acd4 <_obstack_memory_used@@Base+0x3b8>
   1aaac:	bl	119e4 <fprintf@plt>
   1aab0:	b	1aa38 <_obstack_memory_used@@Base+0x11c>
   1aab4:	ldr	r2, [r5]
   1aab8:	ldr	r1, [pc, #536]	; 1acd8 <_obstack_memory_used@@Base+0x3bc>
   1aabc:	mov	r0, r4
   1aac0:	bl	119e4 <fprintf@plt>
   1aac4:	add	sp, sp, #32
   1aac8:	pop	{r4, r5, r6, pc}
   1aacc:	ldr	r3, [r5, #4]
   1aad0:	ldr	r2, [r5]
   1aad4:	ldr	r1, [pc, #512]	; 1acdc <_obstack_memory_used@@Base+0x3c0>
   1aad8:	mov	r0, r4
   1aadc:	bl	119e4 <fprintf@plt>
   1aae0:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1aae4:	ldr	r3, [r5, #4]
   1aae8:	ldr	r2, [r5]
   1aaec:	ldr	r1, [r5, #8]
   1aaf0:	str	r1, [sp]
   1aaf4:	ldr	r1, [pc, #484]	; 1ace0 <_obstack_memory_used@@Base+0x3c4>
   1aaf8:	mov	r0, r4
   1aafc:	bl	119e4 <fprintf@plt>
   1ab00:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1ab04:	ldr	r3, [r5, #4]
   1ab08:	ldr	r2, [r5]
   1ab0c:	ldr	r1, [r5, #12]
   1ab10:	str	r1, [sp, #4]
   1ab14:	ldr	r1, [r5, #8]
   1ab18:	str	r1, [sp]
   1ab1c:	ldr	r1, [pc, #448]	; 1ace4 <_obstack_memory_used@@Base+0x3c8>
   1ab20:	mov	r0, r4
   1ab24:	bl	119e4 <fprintf@plt>
   1ab28:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1ab2c:	ldr	r3, [r5, #4]
   1ab30:	ldr	r2, [r5]
   1ab34:	ldr	r1, [r5, #16]
   1ab38:	str	r1, [sp, #8]
   1ab3c:	ldr	r1, [r5, #12]
   1ab40:	str	r1, [sp, #4]
   1ab44:	ldr	r1, [r5, #8]
   1ab48:	str	r1, [sp]
   1ab4c:	ldr	r1, [pc, #404]	; 1ace8 <_obstack_memory_used@@Base+0x3cc>
   1ab50:	mov	r0, r4
   1ab54:	bl	119e4 <fprintf@plt>
   1ab58:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1ab5c:	ldr	r3, [r5, #4]
   1ab60:	ldr	r2, [r5]
   1ab64:	ldr	r1, [r5, #20]
   1ab68:	str	r1, [sp, #12]
   1ab6c:	ldr	r1, [r5, #16]
   1ab70:	str	r1, [sp, #8]
   1ab74:	ldr	r1, [r5, #12]
   1ab78:	str	r1, [sp, #4]
   1ab7c:	ldr	r1, [r5, #8]
   1ab80:	str	r1, [sp]
   1ab84:	ldr	r1, [pc, #352]	; 1acec <_obstack_memory_used@@Base+0x3d0>
   1ab88:	mov	r0, r4
   1ab8c:	bl	119e4 <fprintf@plt>
   1ab90:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1ab94:	ldr	r3, [r5, #4]
   1ab98:	ldr	r2, [r5]
   1ab9c:	ldr	r1, [r5, #24]
   1aba0:	str	r1, [sp, #16]
   1aba4:	ldr	r1, [r5, #20]
   1aba8:	str	r1, [sp, #12]
   1abac:	ldr	r1, [r5, #16]
   1abb0:	str	r1, [sp, #8]
   1abb4:	ldr	r1, [r5, #12]
   1abb8:	str	r1, [sp, #4]
   1abbc:	ldr	r1, [r5, #8]
   1abc0:	str	r1, [sp]
   1abc4:	ldr	r1, [pc, #292]	; 1acf0 <_obstack_memory_used@@Base+0x3d4>
   1abc8:	mov	r0, r4
   1abcc:	bl	119e4 <fprintf@plt>
   1abd0:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1abd4:	ldr	r3, [r5, #4]
   1abd8:	ldr	r2, [r5]
   1abdc:	ldr	r1, [r5, #28]
   1abe0:	str	r1, [sp, #20]
   1abe4:	ldr	r1, [r5, #24]
   1abe8:	str	r1, [sp, #16]
   1abec:	ldr	r1, [r5, #20]
   1abf0:	str	r1, [sp, #12]
   1abf4:	ldr	r1, [r5, #16]
   1abf8:	str	r1, [sp, #8]
   1abfc:	ldr	r1, [r5, #12]
   1ac00:	str	r1, [sp, #4]
   1ac04:	ldr	r1, [r5, #8]
   1ac08:	str	r1, [sp]
   1ac0c:	ldr	r1, [pc, #224]	; 1acf4 <_obstack_memory_used@@Base+0x3d8>
   1ac10:	mov	r0, r4
   1ac14:	bl	119e4 <fprintf@plt>
   1ac18:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1ac1c:	ldr	r3, [r5, #4]
   1ac20:	ldr	r2, [r5]
   1ac24:	ldr	r1, [r5, #32]
   1ac28:	str	r1, [sp, #24]
   1ac2c:	ldr	r1, [r5, #28]
   1ac30:	str	r1, [sp, #20]
   1ac34:	ldr	r1, [r5, #24]
   1ac38:	str	r1, [sp, #16]
   1ac3c:	ldr	r1, [r5, #20]
   1ac40:	str	r1, [sp, #12]
   1ac44:	ldr	r1, [r5, #16]
   1ac48:	str	r1, [sp, #8]
   1ac4c:	ldr	r1, [r5, #12]
   1ac50:	str	r1, [sp, #4]
   1ac54:	ldr	r1, [r5, #8]
   1ac58:	str	r1, [sp]
   1ac5c:	ldr	r1, [pc, #148]	; 1acf8 <_obstack_memory_used@@Base+0x3dc>
   1ac60:	mov	r0, r4
   1ac64:	bl	119e4 <fprintf@plt>
   1ac68:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1ac6c:	ldr	r3, [r5, #4]
   1ac70:	ldr	r2, [r5]
   1ac74:	ldr	r1, [r5, #32]
   1ac78:	str	r1, [sp, #24]
   1ac7c:	ldr	r1, [r5, #28]
   1ac80:	str	r1, [sp, #20]
   1ac84:	ldr	r1, [r5, #24]
   1ac88:	str	r1, [sp, #16]
   1ac8c:	ldr	r1, [r5, #20]
   1ac90:	str	r1, [sp, #12]
   1ac94:	ldr	r1, [r5, #16]
   1ac98:	str	r1, [sp, #8]
   1ac9c:	ldr	r1, [r5, #12]
   1aca0:	str	r1, [sp, #4]
   1aca4:	ldr	r1, [r5, #8]
   1aca8:	str	r1, [sp]
   1acac:	ldr	r1, [pc, #72]	; 1acfc <_obstack_memory_used@@Base+0x3e0>
   1acb0:	mov	r0, r4
   1acb4:	bl	119e4 <fprintf@plt>
   1acb8:	b	1aac4 <_obstack_memory_used@@Base+0x1a8>
   1acbc:	andeq	r0, r2, r4, asr lr
   1acc0:	andeq	r0, r0, r6, ror #15
   1acc4:	andeq	r0, r2, r8, ror #28
   1acc8:	andeq	r1, r2, r8, ror #2
   1accc:	andeq	r0, r2, ip, ror #28
   1acd0:	muleq	r2, r0, lr
   1acd4:	andeq	r0, r2, r0, ror #28
   1acd8:	andeq	r0, r2, ip, lsr pc
   1acdc:	andeq	r0, r2, ip, asr #30
   1ace0:	andeq	r0, r2, r4, ror #30
   1ace4:	andeq	r0, r2, r0, lsl #31
   1ace8:	andeq	r0, r2, r0, lsr #31
   1acec:	andeq	r0, r2, r4, asr #31
   1acf0:	andeq	r0, r2, ip, ror #31
   1acf4:	andeq	r1, r2, r8, lsl r0
   1acf8:	andeq	r1, r2, r8, asr #32
   1acfc:	andeq	r1, r2, ip, ror r0
   1ad00:	push	{r4, r5, lr}
   1ad04:	sub	sp, sp, #12
   1ad08:	ldr	r5, [sp, #24]
   1ad0c:	ldr	ip, [r5]
   1ad10:	cmp	ip, #0
   1ad14:	beq	1ad44 <_obstack_memory_used@@Base+0x428>
   1ad18:	mov	lr, r5
   1ad1c:	mov	ip, #0
   1ad20:	add	ip, ip, #1
   1ad24:	ldr	r4, [lr, #4]!
   1ad28:	cmp	r4, #0
   1ad2c:	bne	1ad20 <_obstack_memory_used@@Base+0x404>
   1ad30:	str	ip, [sp, #4]
   1ad34:	str	r5, [sp]
   1ad38:	bl	1aa08 <_obstack_memory_used@@Base+0xec>
   1ad3c:	add	sp, sp, #12
   1ad40:	pop	{r4, r5, pc}
   1ad44:	mov	ip, #0
   1ad48:	b	1ad30 <_obstack_memory_used@@Base+0x414>
   1ad4c:	push	{r4, r5, lr}
   1ad50:	sub	sp, sp, #52	; 0x34
   1ad54:	ldr	r4, [sp, #64]	; 0x40
   1ad58:	sub	r4, r4, #4
   1ad5c:	add	r5, sp, #4
   1ad60:	mov	ip, #0
   1ad64:	ldr	lr, [r4, #4]!
   1ad68:	str	lr, [r5, #4]!
   1ad6c:	cmp	lr, #0
   1ad70:	beq	1ad80 <_obstack_memory_used@@Base+0x464>
   1ad74:	add	ip, ip, #1
   1ad78:	cmp	ip, #10
   1ad7c:	bne	1ad64 <_obstack_memory_used@@Base+0x448>
   1ad80:	str	ip, [sp, #4]
   1ad84:	add	ip, sp, #8
   1ad88:	str	ip, [sp]
   1ad8c:	bl	1aa08 <_obstack_memory_used@@Base+0xec>
   1ad90:	add	sp, sp, #52	; 0x34
   1ad94:	pop	{r4, r5, pc}
   1ad98:	push	{r3}		; (str r3, [sp, #-4]!)
   1ad9c:	push	{lr}		; (str lr, [sp, #-4]!)
   1ada0:	sub	sp, sp, #16
   1ada4:	add	r3, sp, #24
   1ada8:	str	r3, [sp, #12]
   1adac:	str	r3, [sp]
   1adb0:	ldr	r3, [sp, #20]
   1adb4:	bl	1ad4c <_obstack_memory_used@@Base+0x430>
   1adb8:	add	sp, sp, #16
   1adbc:	pop	{lr}		; (ldr lr, [sp], #4)
   1adc0:	add	sp, sp, #4
   1adc4:	bx	lr
   1adc8:	push	{r4, lr}
   1adcc:	ldr	r3, [pc, #52]	; 1ae08 <_obstack_memory_used@@Base+0x4ec>
   1add0:	ldr	r1, [r3]
   1add4:	mov	r0, #10
   1add8:	bl	11ae0 <fputc@plt>
   1addc:	ldr	r1, [pc, #40]	; 1ae0c <_obstack_memory_used@@Base+0x4f0>
   1ade0:	ldr	r0, [pc, #40]	; 1ae10 <_obstack_memory_used@@Base+0x4f4>
   1ade4:	bl	117b0 <printf@plt>
   1ade8:	ldr	r2, [pc, #36]	; 1ae14 <_obstack_memory_used@@Base+0x4f8>
   1adec:	ldr	r1, [pc, #36]	; 1ae18 <_obstack_memory_used@@Base+0x4fc>
   1adf0:	ldr	r0, [pc, #36]	; 1ae1c <_obstack_memory_used@@Base+0x500>
   1adf4:	bl	117b0 <printf@plt>
   1adf8:	ldr	r1, [pc, #32]	; 1ae20 <_obstack_memory_used@@Base+0x504>
   1adfc:	ldr	r0, [pc, #32]	; 1ae24 <_obstack_memory_used@@Base+0x508>
   1ae00:	bl	117b0 <printf@plt>
   1ae04:	pop	{r4, pc}
   1ae08:	andeq	r2, r3, r4, lsl r5
   1ae0c:	strheq	r1, [r2], -r8
   1ae10:	ldrdeq	r1, [r2], -r0
   1ae14:	andeq	r1, r2, r4, ror #1
   1ae18:	andeq	r0, r2, ip, ror #27
   1ae1c:	andeq	r1, r2, ip, lsl #2
   1ae20:	andeq	r1, r2, r0, lsr #2
   1ae24:	andeq	r1, r2, r0, asr #2
   1ae28:	push	{r4, lr}
   1ae2c:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1ae30:	cmp	r0, #0
   1ae34:	popne	{r4, pc}
   1ae38:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1ae3c:	push	{r4, lr}
   1ae40:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1ae44:	cmp	r0, #0
   1ae48:	popne	{r4, pc}
   1ae4c:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1ae50:	push	{r4, lr}
   1ae54:	bl	1ae28 <_obstack_memory_used@@Base+0x50c>
   1ae58:	pop	{r4, pc}
   1ae5c:	push	{r4, r5, r6, lr}
   1ae60:	mov	r5, r0
   1ae64:	mov	r4, r1
   1ae68:	bl	1b478 <_obstack_memory_used@@Base+0xb5c>
   1ae6c:	cmp	r0, #0
   1ae70:	popne	{r4, r5, r6, pc}
   1ae74:	adds	r4, r4, #0
   1ae78:	movne	r4, #1
   1ae7c:	cmp	r5, #0
   1ae80:	orreq	r4, r4, #1
   1ae84:	cmp	r4, #0
   1ae88:	popeq	{r4, r5, r6, pc}
   1ae8c:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1ae90:	push	{r4, lr}
   1ae94:	cmp	r1, #0
   1ae98:	orreq	r1, r1, #1
   1ae9c:	bl	1b478 <_obstack_memory_used@@Base+0xb5c>
   1aea0:	cmp	r0, #0
   1aea4:	popne	{r4, pc}
   1aea8:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1aeac:	push	{r4, r5, r6, lr}
   1aeb0:	mov	r6, r0
   1aeb4:	mov	r5, r1
   1aeb8:	mov	r4, r2
   1aebc:	bl	1f25c <argp_error@@Base+0xd14>
   1aec0:	cmp	r0, #0
   1aec4:	popne	{r4, r5, r6, pc}
   1aec8:	cmp	r6, #0
   1aecc:	beq	1aedc <_obstack_memory_used@@Base+0x5c0>
   1aed0:	cmp	r5, #0
   1aed4:	cmpne	r4, #0
   1aed8:	popeq	{r4, r5, r6, pc}
   1aedc:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1aee0:	push	{r4, lr}
   1aee4:	bl	1aeac <_obstack_memory_used@@Base+0x590>
   1aee8:	pop	{r4, pc}
   1aeec:	push	{r4, lr}
   1aef0:	mov	ip, r1
   1aef4:	mov	r3, r2
   1aef8:	cmp	r2, #0
   1aefc:	cmpne	r1, #0
   1af00:	moveq	r3, #1
   1af04:	moveq	ip, r3
   1af08:	mov	r2, r3
   1af0c:	mov	r1, ip
   1af10:	bl	1f25c <argp_error@@Base+0xd14>
   1af14:	cmp	r0, #0
   1af18:	popne	{r4, pc}
   1af1c:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1af20:	push	{r4, lr}
   1af24:	mov	r2, r1
   1af28:	mov	r1, r0
   1af2c:	mov	r0, #0
   1af30:	bl	1aeac <_obstack_memory_used@@Base+0x590>
   1af34:	pop	{r4, pc}
   1af38:	push	{r4, lr}
   1af3c:	mov	r2, r1
   1af40:	mov	r1, r0
   1af44:	mov	r0, #0
   1af48:	bl	1aeec <_obstack_memory_used@@Base+0x5d0>
   1af4c:	pop	{r4, pc}
   1af50:	push	{r4, r5, r6, r7, r8, lr}
   1af54:	mov	r5, r1
   1af58:	mov	r6, r2
   1af5c:	ldr	r4, [r1]
   1af60:	subs	r7, r0, #0
   1af64:	beq	1af80 <_obstack_memory_used@@Base+0x664>
   1af68:	lsr	r2, r4, #1
   1af6c:	add	r3, r2, #1
   1af70:	mvn	r3, r3
   1af74:	cmp	r4, r3
   1af78:	bls	1afa4 <_obstack_memory_used@@Base+0x688>
   1af7c:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1af80:	cmp	r4, #0
   1af84:	bne	1afac <_obstack_memory_used@@Base+0x690>
   1af88:	mov	r1, r2
   1af8c:	mov	r0, #64	; 0x40
   1af90:	bl	1fa34 <argp_error@@Base+0x14ec>
   1af94:	cmp	r0, #0
   1af98:	movne	r4, r0
   1af9c:	addeq	r4, r0, #1
   1afa0:	b	1afac <_obstack_memory_used@@Base+0x690>
   1afa4:	add	r4, r4, #1
   1afa8:	add	r4, r4, r2
   1afac:	mov	r2, r6
   1afb0:	mov	r1, r4
   1afb4:	mov	r0, r7
   1afb8:	bl	1aeac <_obstack_memory_used@@Base+0x590>
   1afbc:	str	r4, [r5]
   1afc0:	pop	{r4, r5, r6, r7, r8, pc}
   1afc4:	push	{r4, lr}
   1afc8:	mov	r2, #1
   1afcc:	bl	1af50 <_obstack_memory_used@@Base+0x634>
   1afd0:	pop	{r4, pc}
   1afd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afd8:	sub	sp, sp, #12
   1afdc:	mov	fp, r0
   1afe0:	mov	sl, r1
   1afe4:	mov	r9, r2
   1afe8:	mov	r7, r3
   1afec:	ldr	r6, [sp, #48]	; 0x30
   1aff0:	ldr	r5, [r1]
   1aff4:	asrs	r4, r5, #1
   1aff8:	bmi	1b154 <_obstack_memory_used@@Base+0x838>
   1affc:	cmp	r5, #0
   1b000:	blt	1b168 <_obstack_memory_used@@Base+0x84c>
   1b004:	mvn	r3, #-2147483648	; 0x80000000
   1b008:	sub	r3, r3, r4
   1b00c:	cmp	r5, r3
   1b010:	movle	r3, #0
   1b014:	movgt	r3, #1
   1b018:	cmp	r3, #0
   1b01c:	addeq	r4, r4, r5
   1b020:	mvnne	r4, #-2147483648	; 0x80000000
   1b024:	mvn	r8, r7
   1b028:	lsr	r8, r8, #31
   1b02c:	cmp	r7, r4
   1b030:	movge	r3, #0
   1b034:	andlt	r3, r8, #1
   1b038:	cmp	r3, #0
   1b03c:	movne	r4, r7
   1b040:	cmp	r6, #0
   1b044:	blt	1b17c <_obstack_memory_used@@Base+0x860>
   1b048:	cmp	r6, #0
   1b04c:	beq	1b228 <_obstack_memory_used@@Base+0x90c>
   1b050:	cmp	r4, #0
   1b054:	blt	1b1d8 <_obstack_memory_used@@Base+0x8bc>
   1b058:	mov	r1, r6
   1b05c:	mvn	r0, #-2147483648	; 0x80000000
   1b060:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b064:	cmp	r0, r4
   1b068:	movge	r0, #0
   1b06c:	movlt	r0, #1
   1b070:	cmp	r0, #0
   1b074:	mvnne	r3, #-2147483648	; 0x80000000
   1b078:	strne	r3, [sp, #4]
   1b07c:	beq	1b210 <_obstack_memory_used@@Base+0x8f4>
   1b080:	mov	r1, r6
   1b084:	ldr	r0, [sp, #4]
   1b088:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b08c:	mov	r4, r0
   1b090:	mov	r1, r6
   1b094:	ldr	r0, [sp, #4]
   1b098:	bl	1fe60 <argp_error@@Base+0x1918>
   1b09c:	ldr	r3, [sp, #4]
   1b0a0:	sub	r1, r3, r1
   1b0a4:	cmp	fp, #0
   1b0a8:	moveq	r3, #0
   1b0ac:	streq	r3, [sl]
   1b0b0:	sub	r3, r4, r5
   1b0b4:	cmp	r3, r9
   1b0b8:	bge	1b140 <_obstack_memory_used@@Base+0x824>
   1b0bc:	cmp	r9, #0
   1b0c0:	blt	1b234 <_obstack_memory_used@@Base+0x918>
   1b0c4:	cmp	r5, #0
   1b0c8:	blt	1b248 <_obstack_memory_used@@Base+0x92c>
   1b0cc:	mvn	r3, #-2147483648	; 0x80000000
   1b0d0:	sub	r3, r3, r9
   1b0d4:	cmp	r5, r3
   1b0d8:	movle	r3, #0
   1b0dc:	movgt	r3, #1
   1b0e0:	cmp	r3, #0
   1b0e4:	bne	1b2f0 <_obstack_memory_used@@Base+0x9d4>
   1b0e8:	add	r5, r5, r9
   1b0ec:	mov	r4, r5
   1b0f0:	cmp	r7, r5
   1b0f4:	movge	r7, #0
   1b0f8:	andlt	r7, r8, #1
   1b0fc:	cmp	r7, #0
   1b100:	bne	1b2f0 <_obstack_memory_used@@Base+0x9d4>
   1b104:	cmp	r6, #0
   1b108:	blt	1b25c <_obstack_memory_used@@Base+0x940>
   1b10c:	cmp	r6, #0
   1b110:	beq	1b13c <_obstack_memory_used@@Base+0x820>
   1b114:	cmp	r5, #0
   1b118:	blt	1b2b8 <_obstack_memory_used@@Base+0x99c>
   1b11c:	mov	r1, r6
   1b120:	mvn	r0, #-2147483648	; 0x80000000
   1b124:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b128:	cmp	r5, r0
   1b12c:	movle	r0, #0
   1b130:	movgt	r0, #1
   1b134:	cmp	r0, #0
   1b138:	bne	1b2f0 <_obstack_memory_used@@Base+0x9d4>
   1b13c:	mul	r1, r5, r6
   1b140:	mov	r0, fp
   1b144:	bl	1ae5c <_obstack_memory_used@@Base+0x540>
   1b148:	str	r4, [sl]
   1b14c:	add	sp, sp, #12
   1b150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b154:	rsb	r3, r4, #-2147483648	; 0x80000000
   1b158:	cmp	r5, r3
   1b15c:	movge	r3, #0
   1b160:	movlt	r3, #1
   1b164:	b	1b018 <_obstack_memory_used@@Base+0x6fc>
   1b168:	rsb	r3, r5, #-2147483648	; 0x80000000
   1b16c:	cmp	r4, r3
   1b170:	movge	r3, #0
   1b174:	movlt	r3, #1
   1b178:	b	1b018 <_obstack_memory_used@@Base+0x6fc>
   1b17c:	cmp	r4, #0
   1b180:	blt	1b1a8 <_obstack_memory_used@@Base+0x88c>
   1b184:	cmn	r6, #1
   1b188:	beq	1b1c4 <_obstack_memory_used@@Base+0x8a8>
   1b18c:	mov	r1, r6
   1b190:	mov	r0, #-2147483648	; 0x80000000
   1b194:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b198:	cmp	r0, r4
   1b19c:	movge	r0, #0
   1b1a0:	movlt	r0, #1
   1b1a4:	b	1b070 <_obstack_memory_used@@Base+0x754>
   1b1a8:	mov	r1, r6
   1b1ac:	mvn	r0, #-2147483648	; 0x80000000
   1b1b0:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b1b4:	cmp	r0, r4
   1b1b8:	movle	r0, #0
   1b1bc:	movgt	r0, #1
   1b1c0:	b	1b070 <_obstack_memory_used@@Base+0x754>
   1b1c4:	add	r0, r4, #-2147483648	; 0x80000000
   1b1c8:	cmp	r0, #0
   1b1cc:	movle	r0, #0
   1b1d0:	movgt	r0, #1
   1b1d4:	b	1b070 <_obstack_memory_used@@Base+0x754>
   1b1d8:	cmn	r4, #1
   1b1dc:	beq	1b1fc <_obstack_memory_used@@Base+0x8e0>
   1b1e0:	mov	r1, r4
   1b1e4:	mov	r0, #-2147483648	; 0x80000000
   1b1e8:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b1ec:	cmp	r6, r0
   1b1f0:	movle	r0, #0
   1b1f4:	movgt	r0, #1
   1b1f8:	b	1b070 <_obstack_memory_used@@Base+0x754>
   1b1fc:	add	r0, r6, #-2147483648	; 0x80000000
   1b200:	cmp	r0, #0
   1b204:	movle	r0, #0
   1b208:	movgt	r0, #1
   1b20c:	b	1b070 <_obstack_memory_used@@Base+0x754>
   1b210:	mul	r1, r6, r4
   1b214:	cmp	r1, #63	; 0x3f
   1b218:	movle	r3, #64	; 0x40
   1b21c:	strle	r3, [sp, #4]
   1b220:	bgt	1b0a4 <_obstack_memory_used@@Base+0x788>
   1b224:	b	1b080 <_obstack_memory_used@@Base+0x764>
   1b228:	mov	r3, #64	; 0x40
   1b22c:	str	r3, [sp, #4]
   1b230:	b	1b080 <_obstack_memory_used@@Base+0x764>
   1b234:	rsb	r3, r9, #-2147483648	; 0x80000000
   1b238:	cmp	r5, r3
   1b23c:	movge	r3, #0
   1b240:	movlt	r3, #1
   1b244:	b	1b0e0 <_obstack_memory_used@@Base+0x7c4>
   1b248:	rsb	r3, r5, #-2147483648	; 0x80000000
   1b24c:	cmp	r9, r3
   1b250:	movge	r3, #0
   1b254:	movlt	r3, #1
   1b258:	b	1b0e0 <_obstack_memory_used@@Base+0x7c4>
   1b25c:	cmp	r5, #0
   1b260:	blt	1b288 <_obstack_memory_used@@Base+0x96c>
   1b264:	cmn	r6, #1
   1b268:	beq	1b2a4 <_obstack_memory_used@@Base+0x988>
   1b26c:	mov	r1, r6
   1b270:	mov	r0, #-2147483648	; 0x80000000
   1b274:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b278:	cmp	r5, r0
   1b27c:	movle	r0, #0
   1b280:	movgt	r0, #1
   1b284:	b	1b134 <_obstack_memory_used@@Base+0x818>
   1b288:	mov	r1, r6
   1b28c:	mvn	r0, #-2147483648	; 0x80000000
   1b290:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b294:	cmp	r5, r0
   1b298:	movge	r0, #0
   1b29c:	movlt	r0, #1
   1b2a0:	b	1b134 <_obstack_memory_used@@Base+0x818>
   1b2a4:	add	r0, r5, #-2147483648	; 0x80000000
   1b2a8:	cmp	r0, #0
   1b2ac:	movle	r0, #0
   1b2b0:	movgt	r0, #1
   1b2b4:	b	1b134 <_obstack_memory_used@@Base+0x818>
   1b2b8:	cmn	r5, #1
   1b2bc:	beq	1b2dc <_obstack_memory_used@@Base+0x9c0>
   1b2c0:	mov	r1, r5
   1b2c4:	mov	r0, #-2147483648	; 0x80000000
   1b2c8:	bl	1fc40 <argp_error@@Base+0x16f8>
   1b2cc:	cmp	r6, r0
   1b2d0:	movle	r0, #0
   1b2d4:	movgt	r0, #1
   1b2d8:	b	1b134 <_obstack_memory_used@@Base+0x818>
   1b2dc:	add	r0, r6, #-2147483648	; 0x80000000
   1b2e0:	cmp	r0, #0
   1b2e4:	movle	r0, #0
   1b2e8:	movgt	r0, #1
   1b2ec:	b	1b134 <_obstack_memory_used@@Base+0x818>
   1b2f0:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1b2f4:	push	{r4, lr}
   1b2f8:	bl	1b3f8 <_obstack_memory_used@@Base+0xadc>
   1b2fc:	cmp	r0, #0
   1b300:	popne	{r4, pc}
   1b304:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1b308:	push	{r4, lr}
   1b30c:	mov	r1, #1
   1b310:	bl	1b2f4 <_obstack_memory_used@@Base+0x9d8>
   1b314:	pop	{r4, pc}
   1b318:	push	{r4, lr}
   1b31c:	bl	1b3f8 <_obstack_memory_used@@Base+0xadc>
   1b320:	cmp	r0, #0
   1b324:	popne	{r4, pc}
   1b328:	bl	1b3cc <_obstack_memory_used@@Base+0xab0>
   1b32c:	push	{r4, lr}
   1b330:	mov	r1, #1
   1b334:	bl	1b318 <_obstack_memory_used@@Base+0x9fc>
   1b338:	pop	{r4, pc}
   1b33c:	push	{r4, r5, r6, lr}
   1b340:	mov	r5, r0
   1b344:	mov	r4, r1
   1b348:	mov	r0, r1
   1b34c:	bl	1ae28 <_obstack_memory_used@@Base+0x50c>
   1b350:	mov	r2, r4
   1b354:	mov	r1, r5
   1b358:	bl	11810 <memcpy@plt>
   1b35c:	pop	{r4, r5, r6, pc}
   1b360:	push	{r4, r5, r6, lr}
   1b364:	mov	r5, r0
   1b368:	mov	r4, r1
   1b36c:	mov	r0, r1
   1b370:	bl	1ae3c <_obstack_memory_used@@Base+0x520>
   1b374:	mov	r2, r4
   1b378:	mov	r1, r5
   1b37c:	bl	11810 <memcpy@plt>
   1b380:	pop	{r4, r5, r6, pc}
   1b384:	push	{r4, r5, r6, lr}
   1b388:	mov	r5, r0
   1b38c:	mov	r4, r1
   1b390:	add	r0, r1, #1
   1b394:	bl	1ae3c <_obstack_memory_used@@Base+0x520>
   1b398:	mov	r2, #0
   1b39c:	strb	r2, [r0, r4]
   1b3a0:	mov	r2, r4
   1b3a4:	mov	r1, r5
   1b3a8:	bl	11810 <memcpy@plt>
   1b3ac:	pop	{r4, r5, r6, pc}
   1b3b0:	push	{r4, lr}
   1b3b4:	mov	r4, r0
   1b3b8:	bl	119c0 <strlen@plt>
   1b3bc:	add	r1, r0, #1
   1b3c0:	mov	r0, r4
   1b3c4:	bl	1b33c <_obstack_memory_used@@Base+0xa20>
   1b3c8:	pop	{r4, pc}
   1b3cc:	push	{r4, lr}
   1b3d0:	ldr	r3, [pc, #20]	; 1b3ec <_obstack_memory_used@@Base+0xad0>
   1b3d4:	ldr	r0, [r3]
   1b3d8:	ldr	r3, [pc, #16]	; 1b3f0 <_obstack_memory_used@@Base+0xad4>
   1b3dc:	ldr	r2, [pc, #16]	; 1b3f4 <_obstack_memory_used@@Base+0xad8>
   1b3e0:	mov	r1, #0
   1b3e4:	bl	1190c <error@plt>
   1b3e8:	bl	11bac <abort@plt>
   1b3ec:	andeq	r2, r3, r8, ror #9
   1b3f0:	strdeq	r0, [r2], -ip
   1b3f4:	andeq	pc, r1, ip, asr #30
   1b3f8:	push	{r4, lr}
   1b3fc:	mov	r2, r0
   1b400:	mov	r3, r1
   1b404:	cmp	r1, #0
   1b408:	cmpne	r0, #0
   1b40c:	moveq	r3, #1
   1b410:	moveq	r2, r3
   1b414:	umull	r0, r1, r2, r3
   1b418:	cmp	r0, #0
   1b41c:	cmpge	r1, #0
   1b420:	bne	1b434 <_obstack_memory_used@@Base+0xb18>
   1b424:	mov	r1, r3
   1b428:	mov	r0, r2
   1b42c:	bl	11768 <calloc@plt>
   1b430:	pop	{r4, pc}
   1b434:	bl	11a14 <__errno_location@plt>
   1b438:	mov	r3, #12
   1b43c:	str	r3, [r0]
   1b440:	mov	r0, #0
   1b444:	pop	{r4, pc}
   1b448:	push	{r4, lr}
   1b44c:	cmp	r0, #0
   1b450:	moveq	r0, #1
   1b454:	cmp	r0, #0
   1b458:	blt	1b464 <_obstack_memory_used@@Base+0xb48>
   1b45c:	bl	11930 <malloc@plt>
   1b460:	pop	{r4, pc}
   1b464:	bl	11a14 <__errno_location@plt>
   1b468:	mov	r3, #12
   1b46c:	str	r3, [r0]
   1b470:	mov	r0, #0
   1b474:	pop	{r4, pc}
   1b478:	push	{r4, lr}
   1b47c:	cmp	r0, #0
   1b480:	beq	1b49c <_obstack_memory_used@@Base+0xb80>
   1b484:	cmp	r1, #0
   1b488:	beq	1b4a8 <_obstack_memory_used@@Base+0xb8c>
   1b48c:	cmp	r1, #0
   1b490:	blt	1b4b4 <_obstack_memory_used@@Base+0xb98>
   1b494:	bl	11888 <realloc@plt>
   1b498:	pop	{r4, pc}
   1b49c:	mov	r0, r1
   1b4a0:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1b4a4:	pop	{r4, pc}
   1b4a8:	bl	1a49c <argp_parse@@Base+0xbf4>
   1b4ac:	mov	r0, #0
   1b4b0:	pop	{r4, pc}
   1b4b4:	bl	11a14 <__errno_location@plt>
   1b4b8:	mov	r3, #12
   1b4bc:	str	r3, [r0]
   1b4c0:	mov	r0, #0
   1b4c4:	pop	{r4, pc}
   1b4c8:	ldr	r3, [r0]
   1b4cc:	ldr	r2, [r0, #4]
   1b4d0:	cmp	r2, #0
   1b4d4:	beq	1b510 <_obstack_memory_used@@Base+0xbf4>
   1b4d8:	add	r3, r3, #24
   1b4dc:	b	1b4ec <_obstack_memory_used@@Base+0xbd0>
   1b4e0:	add	r3, r3, #24
   1b4e4:	subs	r2, r2, #1
   1b4e8:	beq	1b508 <_obstack_memory_used@@Base+0xbec>
   1b4ec:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1b4f0:	cmp	r0, #0
   1b4f4:	beq	1b4e0 <_obstack_memory_used@@Base+0xbc4>
   1b4f8:	ldr	r1, [r3, #-12]
   1b4fc:	tst	r1, #2
   1b500:	bne	1b4e0 <_obstack_memory_used@@Base+0xbc4>
   1b504:	bx	lr
   1b508:	mov	r0, #0
   1b50c:	bx	lr
   1b510:	mov	r0, #0
   1b514:	bx	lr
   1b518:	ldr	r2, [r0, #8]
   1b51c:	cmp	r2, #0
   1b520:	beq	1b52c <_obstack_memory_used@@Base+0xc10>
   1b524:	mov	r0, #0
   1b528:	bx	lr
   1b52c:	ldr	r2, [r1, #8]
   1b530:	cmp	r2, #0
   1b534:	bne	1b524 <_obstack_memory_used@@Base+0xc08>
   1b538:	ldr	r2, [r0, #12]
   1b53c:	ldr	r1, [r1, #12]
   1b540:	orr	r2, r2, r1
   1b544:	tst	r2, #16
   1b548:	ldreq	r2, [r3]
   1b54c:	addeq	r1, r2, #1
   1b550:	streq	r1, [r3]
   1b554:	ldreq	r3, [r0, #4]
   1b558:	strbeq	r3, [r2]
   1b55c:	b	1b524 <_obstack_memory_used@@Base+0xc08>
   1b560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b564:	sub	sp, sp, #12
   1b568:	ldr	r4, [r0]
   1b56c:	ldr	r9, [r0, #8]
   1b570:	ldr	r5, [r0, #4]
   1b574:	cmp	r5, #0
   1b578:	beq	1b5cc <_obstack_memory_used@@Base+0xcb0>
   1b57c:	str	r3, [sp, #4]
   1b580:	str	r2, [sp]
   1b584:	mov	fp, r1
   1b588:	mov	sl, r4
   1b58c:	mov	r8, #0
   1b590:	b	1b60c <_obstack_memory_used@@Base+0xcf0>
   1b594:	and	r3, r6, #4
   1b598:	cmp	r3, #0
   1b59c:	moveq	sl, r4
   1b5a0:	tst	r6, #2
   1b5a4:	beq	1b5b0 <_obstack_memory_used@@Base+0xc94>
   1b5a8:	add	r9, r9, #1
   1b5ac:	b	1b5e8 <_obstack_memory_used@@Base+0xccc>
   1b5b0:	ldr	r3, [sp, #4]
   1b5b4:	ldr	r2, [sp]
   1b5b8:	mov	r1, sl
   1b5bc:	mov	r0, r4
   1b5c0:	blx	fp
   1b5c4:	mov	r8, r0
   1b5c8:	b	1b5a8 <_obstack_memory_used@@Base+0xc8c>
   1b5cc:	mov	r8, #0
   1b5d0:	mov	r0, r8
   1b5d4:	add	sp, sp, #12
   1b5d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5dc:	ldrb	r3, [r9]
   1b5e0:	cmp	r3, r7
   1b5e4:	beq	1b594 <_obstack_memory_used@@Base+0xc78>
   1b5e8:	add	r4, r4, #24
   1b5ec:	subs	r5, r5, #1
   1b5f0:	movne	r3, #1
   1b5f4:	moveq	r3, #0
   1b5f8:	cmp	r8, #0
   1b5fc:	movne	r3, #0
   1b600:	andeq	r3, r3, #1
   1b604:	cmp	r3, #0
   1b608:	beq	1b5d0 <_obstack_memory_used@@Base+0xcb4>
   1b60c:	ldr	r6, [r4, #12]
   1b610:	tst	r6, #8
   1b614:	bne	1b5e8 <_obstack_memory_used@@Base+0xccc>
   1b618:	ldr	r7, [r4, #4]
   1b61c:	sub	r3, r7, #1
   1b620:	cmp	r3, #254	; 0xfe
   1b624:	bhi	1b5e8 <_obstack_memory_used@@Base+0xccc>
   1b628:	bl	11990 <__ctype_b_loc@plt>
   1b62c:	ldr	r2, [r0]
   1b630:	lsl	r3, r7, #1
   1b634:	ldrh	r3, [r2, r3]
   1b638:	tst	r3, #16384	; 0x4000
   1b63c:	bne	1b5dc <_obstack_memory_used@@Base+0xcc0>
   1b640:	b	1b5e8 <_obstack_memory_used@@Base+0xccc>
   1b644:	push	{r4, r5, r6, lr}
   1b648:	ldr	r4, [r0, #12]
   1b64c:	ands	r4, r4, #8
   1b650:	movne	r4, #0
   1b654:	bne	1b684 <_obstack_memory_used@@Base+0xd68>
   1b658:	ldr	r5, [r0, #4]
   1b65c:	sub	r3, r5, #1
   1b660:	cmp	r3, #254	; 0xfe
   1b664:	bhi	1b684 <_obstack_memory_used@@Base+0xd68>
   1b668:	bl	11990 <__ctype_b_loc@plt>
   1b66c:	ldr	r2, [r0]
   1b670:	lsl	r3, r5, #1
   1b674:	ldrh	r3, [r2, r3]
   1b678:	and	r3, r3, #16384	; 0x4000
   1b67c:	cmp	r3, #0
   1b680:	movne	r4, r5
   1b684:	mov	r0, r4
   1b688:	pop	{r4, r5, r6, pc}
   1b68c:	push	{r4, lr}
   1b690:	mov	r4, r0
   1b694:	bl	11990 <__ctype_b_loc@plt>
   1b698:	b	1b6a4 <_obstack_memory_used@@Base+0xd88>
   1b69c:	add	r3, r3, #1
   1b6a0:	str	r3, [r4]
   1b6a4:	ldr	r3, [r4]
   1b6a8:	ldrb	r2, [r3]
   1b6ac:	ldr	ip, [r0]
   1b6b0:	lsl	r1, r2, #1
   1b6b4:	ldrh	r1, [ip, r1]
   1b6b8:	tst	r1, #8192	; 0x2000
   1b6bc:	bne	1b69c <_obstack_memory_used@@Base+0xd80>
   1b6c0:	subs	ip, r2, #45	; 0x2d
   1b6c4:	movne	ip, #1
   1b6c8:	cmp	r2, #0
   1b6cc:	beq	1b700 <_obstack_memory_used@@Base+0xde4>
   1b6d0:	tst	r1, #8
   1b6d4:	bne	1b700 <_obstack_memory_used@@Base+0xde4>
   1b6d8:	add	r3, r3, #1
   1b6dc:	str	r3, [r4]
   1b6e0:	ldrb	r2, [r3]
   1b6e4:	cmp	r2, #0
   1b6e8:	beq	1b700 <_obstack_memory_used@@Base+0xde4>
   1b6ec:	ldr	r1, [r0]
   1b6f0:	lsl	r2, r2, #1
   1b6f4:	ldrh	r2, [r1, r2]
   1b6f8:	tst	r2, #8
   1b6fc:	beq	1b6d8 <_obstack_memory_used@@Base+0xdbc>
   1b700:	mov	r0, ip
   1b704:	pop	{r4, pc}
   1b708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b70c:	add	fp, sp, #32
   1b710:	sub	sp, sp, #12
   1b714:	ldr	r5, [r0, #4]
   1b718:	cmp	r5, #0
   1b71c:	bne	1b728 <_obstack_memory_used@@Base+0xe0c>
   1b720:	sub	sp, fp, #32
   1b724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b728:	mov	r9, r1
   1b72c:	mov	r6, r0
   1b730:	ldr	r0, [r0, #8]
   1b734:	bl	119c0 <strlen@plt>
   1b738:	add	r3, r0, #15
   1b73c:	bic	r3, r3, #7
   1b740:	sub	sp, sp, r3
   1b744:	mov	sl, sp
   1b748:	sub	r7, fp, #36	; 0x24
   1b74c:	str	sp, [r7, #-4]!
   1b750:	ldr	r4, [r6]
   1b754:	ldr	r8, [pc, #336]	; 1b8ac <_obstack_memory_used@@Base+0xf90>
   1b758:	ldr	r2, [r4, #20]
   1b75c:	mov	r3, r7
   1b760:	ldr	r2, [r2, #24]
   1b764:	mov	r1, r8
   1b768:	mov	r0, r4
   1b76c:	bl	1b560 <_obstack_memory_used@@Base+0xc44>
   1b770:	add	r4, r4, #28
   1b774:	subs	r5, r5, #1
   1b778:	bne	1b758 <_obstack_memory_used@@Base+0xe3c>
   1b77c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b780:	cmp	sl, r3
   1b784:	bcc	1b7dc <_obstack_memory_used@@Base+0xec0>
   1b788:	ldr	r4, [r6]
   1b78c:	ldr	r5, [r6, #4]
   1b790:	cmp	r5, #0
   1b794:	beq	1b720 <_obstack_memory_used@@Base+0xe04>
   1b798:	ldr	r7, [pc, #272]	; 1b8b0 <_obstack_memory_used@@Base+0xf94>
   1b79c:	ldr	r2, [r4, #20]
   1b7a0:	mov	r3, r9
   1b7a4:	ldr	r2, [r2, #24]
   1b7a8:	mov	r1, r7
   1b7ac:	mov	r0, r4
   1b7b0:	bl	1b560 <_obstack_memory_used@@Base+0xc44>
   1b7b4:	add	r4, r4, #28
   1b7b8:	subs	r5, r5, #1
   1b7bc:	bne	1b79c <_obstack_memory_used@@Base+0xe80>
   1b7c0:	ldr	r7, [r6]
   1b7c4:	ldr	r8, [r6, #4]
   1b7c8:	cmp	r8, #0
   1b7cc:	beq	1b720 <_obstack_memory_used@@Base+0xe04>
   1b7d0:	add	r7, r7, #28
   1b7d4:	ldr	sl, [pc, #216]	; 1b8b4 <_obstack_memory_used@@Base+0xf98>
   1b7d8:	b	1b894 <_obstack_memory_used@@Base+0xf78>
   1b7dc:	add	r2, r3, #1
   1b7e0:	str	r2, [fp, #-40]	; 0xffffffd8
   1b7e4:	mov	r2, #0
   1b7e8:	strb	r2, [r3]
   1b7ec:	mov	r2, sl
   1b7f0:	ldr	r1, [pc, #192]	; 1b8b8 <_obstack_memory_used@@Base+0xf9c>
   1b7f4:	mov	r0, r9
   1b7f8:	bl	1f9b4 <argp_error@@Base+0x146c>
   1b7fc:	b	1b788 <_obstack_memory_used@@Base+0xe6c>
   1b800:	tst	r1, #16
   1b804:	bne	1b828 <_obstack_memory_used@@Base+0xf0c>
   1b808:	ldr	r3, [r6, #8]
   1b80c:	cmp	r3, #0
   1b810:	beq	1b878 <_obstack_memory_used@@Base+0xf5c>
   1b814:	tst	r1, #1
   1b818:	ldrne	r1, [pc, #156]	; 1b8bc <_obstack_memory_used@@Base+0xfa0>
   1b81c:	moveq	r1, sl
   1b820:	mov	r0, r9
   1b824:	bl	1f9b4 <argp_error@@Base+0x146c>
   1b828:	add	r4, r4, #24
   1b82c:	subs	r5, r5, #1
   1b830:	beq	1b888 <_obstack_memory_used@@Base+0xf6c>
   1b834:	ldr	r2, [r4]
   1b838:	cmp	r2, #0
   1b83c:	beq	1b828 <_obstack_memory_used@@Base+0xf0c>
   1b840:	ldr	r1, [r4, #12]
   1b844:	and	r3, r1, #4
   1b848:	cmp	r3, #0
   1b84c:	moveq	r6, r4
   1b850:	tst	r1, #2
   1b854:	bne	1b828 <_obstack_memory_used@@Base+0xf0c>
   1b858:	ldr	r3, [r4, #8]
   1b85c:	ldr	r0, [r6, #12]
   1b860:	orr	r1, r1, r0
   1b864:	cmp	r3, #0
   1b868:	beq	1b800 <_obstack_memory_used@@Base+0xee4>
   1b86c:	tst	r1, #16
   1b870:	beq	1b814 <_obstack_memory_used@@Base+0xef8>
   1b874:	b	1b828 <_obstack_memory_used@@Base+0xf0c>
   1b878:	ldr	r1, [pc, #64]	; 1b8c0 <_obstack_memory_used@@Base+0xfa4>
   1b87c:	mov	r0, r9
   1b880:	bl	1f9b4 <argp_error@@Base+0x146c>
   1b884:	b	1b828 <_obstack_memory_used@@Base+0xf0c>
   1b888:	add	r7, r7, #28
   1b88c:	subs	r8, r8, #1
   1b890:	beq	1b720 <_obstack_memory_used@@Base+0xe04>
   1b894:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1b898:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1b89c:	cmp	r5, #0
   1b8a0:	beq	1b888 <_obstack_memory_used@@Base+0xf6c>
   1b8a4:	mov	r6, r4
   1b8a8:	b	1b834 <_obstack_memory_used@@Base+0xf18>
   1b8ac:	andeq	fp, r1, r8, lsl r5
   1b8b0:	andeq	fp, r1, r8, asr fp
   1b8b4:	andeq	r1, r2, r8, asr r2
   1b8b8:	andeq	r1, r2, r0, asr #4
   1b8bc:	andeq	r1, r2, r8, asr #4
   1b8c0:	andeq	r1, r2, r4, ror #4
   1b8c4:	push	{r4, r5, r6, lr}
   1b8c8:	mov	r5, r0
   1b8cc:	ldr	r0, [r0, #12]
   1b8d0:	cmp	r0, #0
   1b8d4:	beq	1b8ec <_obstack_memory_used@@Base+0xfd0>
   1b8d8:	ldr	r4, [r0, #24]
   1b8dc:	bl	1a49c <argp_parse@@Base+0xbf4>
   1b8e0:	mov	r0, r4
   1b8e4:	cmp	r4, #0
   1b8e8:	bne	1b8d8 <_obstack_memory_used@@Base+0xfbc>
   1b8ec:	ldr	r3, [r5, #4]
   1b8f0:	cmp	r3, #0
   1b8f4:	bne	1b904 <_obstack_memory_used@@Base+0xfe8>
   1b8f8:	mov	r0, r5
   1b8fc:	bl	1a49c <argp_parse@@Base+0xbf4>
   1b900:	pop	{r4, r5, r6, pc}
   1b904:	ldr	r0, [r5]
   1b908:	bl	1a49c <argp_parse@@Base+0xbf4>
   1b90c:	ldr	r0, [r5, #8]
   1b910:	bl	1a49c <argp_parse@@Base+0xbf4>
   1b914:	b	1b8f8 <_obstack_memory_used@@Base+0xfdc>
   1b918:	push	{r4, r5, r6, r7, r8, lr}
   1b91c:	mov	r6, r1
   1b920:	ldr	r7, [r0]
   1b924:	ldr	r3, [r0, #4]
   1b928:	sub	r8, r3, #1
   1b92c:	cmp	r3, #0
   1b930:	bne	1b98c <_obstack_memory_used@@Base+0x1070>
   1b934:	mov	r7, #0
   1b938:	b	1b974 <_obstack_memory_used@@Base+0x1058>
   1b93c:	sub	r5, r5, #1
   1b940:	add	r4, r4, #24
   1b944:	cmn	r5, #1
   1b948:	beq	1b97c <_obstack_memory_used@@Base+0x1060>
   1b94c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1b950:	cmp	r0, #0
   1b954:	beq	1b93c <_obstack_memory_used@@Base+0x1020>
   1b958:	ldr	r3, [r4, #-12]
   1b95c:	tst	r3, #2
   1b960:	bne	1b93c <_obstack_memory_used@@Base+0x1020>
   1b964:	mov	r1, r6
   1b968:	bl	1178c <strcmp@plt>
   1b96c:	cmp	r0, #0
   1b970:	bne	1b93c <_obstack_memory_used@@Base+0x1020>
   1b974:	mov	r0, r7
   1b978:	pop	{r4, r5, r6, r7, r8, pc}
   1b97c:	add	r7, r7, #28
   1b980:	sub	r8, r8, #1
   1b984:	cmn	r8, #1
   1b988:	beq	1b9a8 <_obstack_memory_used@@Base+0x108c>
   1b98c:	ldr	r4, [r7]
   1b990:	ldr	r3, [r7, #4]
   1b994:	sub	r5, r3, #1
   1b998:	cmp	r3, #0
   1b99c:	beq	1b97c <_obstack_memory_used@@Base+0x1060>
   1b9a0:	add	r4, r4, #24
   1b9a4:	b	1b94c <_obstack_memory_used@@Base+0x1030>
   1b9a8:	mov	r7, #0
   1b9ac:	b	1b974 <_obstack_memory_used@@Base+0x1058>
   1b9b0:	push	{r4, r5, r6, lr}
   1b9b4:	ldr	r4, [r0, #16]
   1b9b8:	ldr	r0, [r0, #8]
   1b9bc:	cmp	r0, #0
   1b9c0:	moveq	r5, #0
   1b9c4:	beq	1b9d8 <_obstack_memory_used@@Base+0x10bc>
   1b9c8:	mov	r1, #10
   1b9cc:	bl	119cc <strchr@plt>
   1b9d0:	adds	r5, r0, #0
   1b9d4:	movne	r5, #1
   1b9d8:	cmp	r4, #0
   1b9dc:	beq	1ba00 <_obstack_memory_used@@Base+0x10e4>
   1b9e0:	ldr	r0, [r4]
   1b9e4:	cmp	r0, #0
   1b9e8:	beq	1ba00 <_obstack_memory_used@@Base+0x10e4>
   1b9ec:	bl	1b9b0 <_obstack_memory_used@@Base+0x1094>
   1b9f0:	add	r5, r5, r0
   1b9f4:	ldr	r0, [r4, #16]!
   1b9f8:	cmp	r0, #0
   1b9fc:	bne	1b9ec <_obstack_memory_used@@Base+0x10d0>
   1ba00:	mov	r0, r5
   1ba04:	pop	{r4, r5, r6, pc}
   1ba08:	push	{r4, r5, r6, r7, r8, lr}
   1ba0c:	mov	r4, r0
   1ba10:	mov	r5, r1
   1ba14:	ldr	r3, [r0, #28]
   1ba18:	ldr	r2, [r0, #24]
   1ba1c:	sub	r3, r3, r2
   1ba20:	ldr	r2, [r0, #16]
   1ba24:	cmp	r3, r2
   1ba28:	bhi	1ba44 <_obstack_memory_used@@Base+0x1128>
   1ba2c:	ldr	r3, [r4, #20]
   1ba30:	cmp	r3, #0
   1ba34:	subge	r5, r5, r3
   1ba38:	mov	r6, #32
   1ba3c:	mov	r7, #1
   1ba40:	b	1ba60 <_obstack_memory_used@@Base+0x1144>
   1ba44:	bl	1f320 <argp_error@@Base+0xdd8>
   1ba48:	b	1ba2c <_obstack_memory_used@@Base+0x1110>
   1ba4c:	ldr	r3, [r4, #28]
   1ba50:	add	r2, r3, #1
   1ba54:	str	r2, [r4, #28]
   1ba58:	strb	r6, [r3]
   1ba5c:	sub	r5, r5, #1
   1ba60:	cmp	r5, #0
   1ba64:	ble	1ba90 <_obstack_memory_used@@Base+0x1174>
   1ba68:	ldr	r2, [r4, #28]
   1ba6c:	ldr	r3, [r4, #32]
   1ba70:	cmp	r2, r3
   1ba74:	bcc	1ba4c <_obstack_memory_used@@Base+0x1130>
   1ba78:	mov	r1, r7
   1ba7c:	mov	r0, r4
   1ba80:	bl	1f8c4 <argp_error@@Base+0x137c>
   1ba84:	cmp	r0, #0
   1ba88:	beq	1ba5c <_obstack_memory_used@@Base+0x1140>
   1ba8c:	b	1ba4c <_obstack_memory_used@@Base+0x1130>
   1ba90:	pop	{r4, r5, r6, r7, r8, pc}
   1ba94:	push	{r4, r5, r6, lr}
   1ba98:	mov	r4, r0
   1ba9c:	mov	r5, r1
   1baa0:	ldr	r3, [r0, #28]
   1baa4:	ldr	r2, [r0, #24]
   1baa8:	sub	r3, r3, r2
   1baac:	ldr	r2, [r0, #16]
   1bab0:	cmp	r3, r2
   1bab4:	bhi	1baf8 <_obstack_memory_used@@Base+0x11dc>
   1bab8:	ldr	r3, [r4, #20]
   1babc:	cmp	r3, #0
   1bac0:	addge	r5, r5, r3
   1bac4:	ldr	r3, [r4, #8]
   1bac8:	cmp	r5, r3
   1bacc:	bcc	1bb18 <_obstack_memory_used@@Base+0x11fc>
   1bad0:	ldr	r2, [r4, #28]
   1bad4:	ldr	r3, [r4, #32]
   1bad8:	cmp	r2, r3
   1badc:	bcs	1bb00 <_obstack_memory_used@@Base+0x11e4>
   1bae0:	ldr	r3, [r4, #28]
   1bae4:	add	r2, r3, #1
   1bae8:	str	r2, [r4, #28]
   1baec:	mov	r2, #10
   1baf0:	strb	r2, [r3]
   1baf4:	pop	{r4, r5, r6, pc}
   1baf8:	bl	1f320 <argp_error@@Base+0xdd8>
   1bafc:	b	1bab8 <_obstack_memory_used@@Base+0x119c>
   1bb00:	mov	r1, #1
   1bb04:	mov	r0, r4
   1bb08:	bl	1f8c4 <argp_error@@Base+0x137c>
   1bb0c:	cmp	r0, #0
   1bb10:	popeq	{r4, r5, r6, pc}
   1bb14:	b	1bae0 <_obstack_memory_used@@Base+0x11c4>
   1bb18:	ldr	r2, [r4, #28]
   1bb1c:	ldr	r3, [r4, #32]
   1bb20:	cmp	r2, r3
   1bb24:	bcs	1bb40 <_obstack_memory_used@@Base+0x1224>
   1bb28:	ldr	r3, [r4, #28]
   1bb2c:	add	r2, r3, #1
   1bb30:	str	r2, [r4, #28]
   1bb34:	mov	r2, #32
   1bb38:	strb	r2, [r3]
   1bb3c:	pop	{r4, r5, r6, pc}
   1bb40:	mov	r1, #1
   1bb44:	mov	r0, r4
   1bb48:	bl	1f8c4 <argp_error@@Base+0x137c>
   1bb4c:	cmp	r0, #0
   1bb50:	bne	1bb28 <_obstack_memory_used@@Base+0x120c>
   1bb54:	pop	{r4, r5, r6, pc}
   1bb58:	push	{r4, r5, r6, lr}
   1bb5c:	ldr	r5, [r0, #8]
   1bb60:	ldr	r2, [r0, #12]
   1bb64:	ldr	ip, [r1, #12]
   1bb68:	orr	r2, r2, ip
   1bb6c:	cmp	r5, #0
   1bb70:	beq	1bbbc <_obstack_memory_used@@Base+0x12a0>
   1bb74:	tst	r2, #16
   1bb78:	bne	1bbb4 <_obstack_memory_used@@Base+0x1298>
   1bb7c:	mov	r6, r3
   1bb80:	mov	r4, r0
   1bb84:	tst	r2, #1
   1bb88:	bne	1bbcc <_obstack_memory_used@@Base+0x12b0>
   1bb8c:	mov	r0, r5
   1bb90:	bl	119c0 <strlen@plt>
   1bb94:	add	r1, r0, #6
   1bb98:	mov	r0, r6
   1bb9c:	bl	1ba94 <_obstack_memory_used@@Base+0x1178>
   1bba0:	mov	r3, r5
   1bba4:	ldr	r2, [r4, #4]
   1bba8:	ldr	r1, [pc, #52]	; 1bbe4 <_obstack_memory_used@@Base+0x12c8>
   1bbac:	mov	r0, r6
   1bbb0:	bl	1f9b4 <argp_error@@Base+0x146c>
   1bbb4:	mov	r0, #0
   1bbb8:	pop	{r4, r5, r6, pc}
   1bbbc:	ldr	r5, [r1, #8]
   1bbc0:	cmp	r5, #0
   1bbc4:	beq	1bbb4 <_obstack_memory_used@@Base+0x1298>
   1bbc8:	b	1bb74 <_obstack_memory_used@@Base+0x1258>
   1bbcc:	mov	r3, r5
   1bbd0:	ldr	r2, [r0, #4]
   1bbd4:	ldr	r1, [pc, #12]	; 1bbe8 <_obstack_memory_used@@Base+0x12cc>
   1bbd8:	mov	r0, r6
   1bbdc:	bl	1f9b4 <argp_error@@Base+0x146c>
   1bbe0:	b	1bbb4 <_obstack_memory_used@@Base+0x1298>
   1bbe4:	andeq	r1, r2, r8, ror r2
   1bbe8:	andeq	r1, r2, ip, ror #4
   1bbec:	push	{r4, r5, r6, lr}
   1bbf0:	subs	r5, r2, #0
   1bbf4:	popeq	{r4, r5, r6, pc}
   1bbf8:	ldr	ip, [r5, #20]
   1bbfc:	cmp	ip, #0
   1bc00:	popeq	{r4, r5, r6, pc}
   1bc04:	mov	r6, r1
   1bc08:	mov	r4, r0
   1bc0c:	mov	r1, r3
   1bc10:	mov	r0, r5
   1bc14:	bl	1a31c <argp_parse@@Base+0xa74>
   1bc18:	ldr	r3, [r5, #20]
   1bc1c:	mov	r2, r0
   1bc20:	mov	r1, r4
   1bc24:	mov	r0, r6
   1bc28:	blx	r3
   1bc2c:	pop	{r4, r5, r6, pc}
   1bc30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc34:	sub	sp, sp, #28
   1bc38:	str	r1, [sp, #16]
   1bc3c:	mov	r8, r2
   1bc40:	mov	r4, r3
   1bc44:	ldr	r5, [sp, #64]	; 0x40
   1bc48:	ldr	r3, [r2]
   1bc4c:	mov	r6, r3
   1bc50:	str	r3, [sp, #20]
   1bc54:	ldr	sl, [r0, #16]
   1bc58:	ldr	r2, [r0, #8]
   1bc5c:	mov	ip, r2
   1bc60:	str	r2, [sp, #12]
   1bc64:	mov	r3, r1
   1bc68:	mov	r2, r0
   1bc6c:	ldr	r1, [pc, #424]	; 1be1c <_obstack_memory_used@@Base+0x1500>
   1bc70:	mov	r0, ip
   1bc74:	bl	1bbec <_obstack_memory_used@@Base+0x12d0>
   1bc78:	subs	r3, r0, #0
   1bc7c:	str	r3, [sp, #8]
   1bc80:	beq	1be08 <_obstack_memory_used@@Base+0x14ec>
   1bc84:	mov	r1, #10
   1bc88:	mov	r0, r3
   1bc8c:	bl	117d4 <strchrnul@plt>
   1bc90:	mov	r7, r0
   1bc94:	ldrb	r3, [r0]
   1bc98:	cmp	r3, #0
   1bc9c:	beq	1bdd8 <_obstack_memory_used@@Base+0x14bc>
   1bca0:	ldrb	fp, [r6]
   1bca4:	cmp	fp, #0
   1bca8:	ble	1bdd0 <_obstack_memory_used@@Base+0x14b4>
   1bcac:	mov	r6, #0
   1bcb0:	add	r9, r0, #1
   1bcb4:	mov	r1, #10
   1bcb8:	mov	r0, r9
   1bcbc:	bl	117d4 <strchrnul@plt>
   1bcc0:	add	r6, r6, #1
   1bcc4:	cmp	r6, fp
   1bcc8:	bne	1bcb0 <_obstack_memory_used@@Base+0x1394>
   1bccc:	mov	r7, r0
   1bcd0:	ldr	r3, [r8]
   1bcd4:	add	r3, r3, #1
   1bcd8:	str	r3, [r8]
   1bcdc:	mov	fp, #1
   1bce0:	add	r1, r7, #1
   1bce4:	sub	r1, r1, r9
   1bce8:	mov	r0, r5
   1bcec:	bl	1ba94 <_obstack_memory_used@@Base+0x1178>
   1bcf0:	sub	r6, r7, r9
   1bcf4:	ldr	r3, [r5, #28]
   1bcf8:	add	r3, r3, r6
   1bcfc:	ldr	r2, [r5, #32]
   1bd00:	cmp	r2, r3
   1bd04:	bcs	1bd1c <_obstack_memory_used@@Base+0x1400>
   1bd08:	mov	r1, r6
   1bd0c:	mov	r0, r5
   1bd10:	bl	1f8c4 <argp_error@@Base+0x137c>
   1bd14:	cmp	r0, #0
   1bd18:	beq	1bd38 <_obstack_memory_used@@Base+0x141c>
   1bd1c:	mov	r2, r6
   1bd20:	mov	r1, r9
   1bd24:	ldr	r0, [r5, #28]
   1bd28:	bl	11810 <memcpy@plt>
   1bd2c:	ldr	r3, [r5, #28]
   1bd30:	add	r6, r3, r6
   1bd34:	str	r6, [r5, #28]
   1bd38:	ldr	r3, [sp, #12]
   1bd3c:	ldr	r2, [sp, #8]
   1bd40:	cmp	r3, r2
   1bd44:	bne	1bde4 <_obstack_memory_used@@Base+0x14c8>
   1bd48:	cmp	sl, #0
   1bd4c:	beq	1bd8c <_obstack_memory_used@@Base+0x1470>
   1bd50:	ldr	r0, [sl]
   1bd54:	cmp	r0, #0
   1bd58:	beq	1bd8c <_obstack_memory_used@@Base+0x1470>
   1bd5c:	mov	r3, r4
   1bd60:	ldr	r4, [sp, #16]
   1bd64:	str	r5, [sp]
   1bd68:	mov	r2, r8
   1bd6c:	mov	r1, r4
   1bd70:	bl	1bc30 <_obstack_memory_used@@Base+0x1314>
   1bd74:	clz	r3, r0
   1bd78:	lsr	r3, r3, #5
   1bd7c:	ldr	r0, [sl, #16]!
   1bd80:	cmp	r0, #0
   1bd84:	bne	1bd64 <_obstack_memory_used@@Base+0x1448>
   1bd88:	mov	r4, r3
   1bd8c:	cmp	r4, #0
   1bd90:	moveq	fp, #0
   1bd94:	andne	fp, fp, #1
   1bd98:	cmp	fp, #0
   1bd9c:	beq	1bdc0 <_obstack_memory_used@@Base+0x14a4>
   1bda0:	ldrb	r3, [r7]
   1bda4:	cmp	r3, #0
   1bda8:	bne	1bdf0 <_obstack_memory_used@@Base+0x14d4>
   1bdac:	ldr	r2, [sp, #20]
   1bdb0:	ldrb	r3, [r2]
   1bdb4:	cmp	r3, #0
   1bdb8:	movne	r3, #0
   1bdbc:	strbne	r3, [r2]
   1bdc0:	clz	r0, r4
   1bdc4:	lsr	r0, r0, #5
   1bdc8:	add	sp, sp, #28
   1bdcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdd0:	ldr	r9, [sp, #8]
   1bdd4:	b	1bcd0 <_obstack_memory_used@@Base+0x13b4>
   1bdd8:	ldr	r9, [sp, #8]
   1bddc:	mov	fp, #0
   1bde0:	b	1bce0 <_obstack_memory_used@@Base+0x13c4>
   1bde4:	mov	r0, r2
   1bde8:	bl	1a49c <argp_parse@@Base+0xbf4>
   1bdec:	b	1bd48 <_obstack_memory_used@@Base+0x142c>
   1bdf0:	ldr	r2, [sp, #20]
   1bdf4:	ldrb	r3, [r2]
   1bdf8:	add	r3, r3, #1
   1bdfc:	strb	r3, [r2]
   1be00:	mov	r4, #0
   1be04:	b	1bdc0 <_obstack_memory_used@@Base+0x14a4>
   1be08:	cmp	sl, #0
   1be0c:	beq	1bdc0 <_obstack_memory_used@@Base+0x14a4>
   1be10:	ldr	r7, [sp, #8]
   1be14:	mov	fp, #0
   1be18:	b	1bd50 <_obstack_memory_used@@Base+0x1434>
   1be1c:	andeq	r0, r0, #6
   1be20:	push	{r4, r5, r6, r7, r8, lr}
   1be24:	mov	r7, r0
   1be28:	mov	r4, r2
   1be2c:	ldr	r3, [r2, #16]
   1be30:	mov	r2, r1
   1be34:	ldr	r1, [pc, #448]	; 1bffc <_obstack_memory_used@@Base+0x16e0>
   1be38:	bl	1bbec <_obstack_memory_used@@Base+0x12d0>
   1be3c:	subs	r5, r0, #0
   1be40:	beq	1bf94 <_obstack_memory_used@@Base+0x1678>
   1be44:	ldrb	r3, [r5]
   1be48:	cmp	r3, #0
   1be4c:	beq	1bf88 <_obstack_memory_used@@Base+0x166c>
   1be50:	ldr	r3, [r4, #8]
   1be54:	ldr	r3, [r3]
   1be58:	cmp	r3, #0
   1be5c:	beq	1be88 <_obstack_memory_used@@Base+0x156c>
   1be60:	ldr	r6, [r4, #4]
   1be64:	ldr	r2, [r6, #28]
   1be68:	ldr	r3, [r6, #32]
   1be6c:	cmp	r2, r3
   1be70:	bcs	1bfa8 <_obstack_memory_used@@Base+0x168c>
   1be74:	ldr	r3, [r6, #28]
   1be78:	add	r2, r3, #1
   1be7c:	str	r2, [r6, #28]
   1be80:	mov	r2, #10
   1be84:	strb	r2, [r3]
   1be88:	ldr	r8, [pc, #368]	; 1c000 <_obstack_memory_used@@Base+0x16e4>
   1be8c:	ldr	r1, [r8, #24]
   1be90:	ldr	r0, [r4, #4]
   1be94:	bl	1ba08 <_obstack_memory_used@@Base+0x10ec>
   1be98:	ldr	r6, [r4, #4]
   1be9c:	ldr	r8, [r8, #24]
   1bea0:	ldr	r3, [r6, #28]
   1bea4:	ldr	r2, [r6, #24]
   1bea8:	sub	r3, r3, r2
   1beac:	ldr	r2, [r6, #16]
   1beb0:	cmp	r3, r2
   1beb4:	bhi	1bfc0 <_obstack_memory_used@@Base+0x16a4>
   1beb8:	str	r8, [r6, #4]
   1bebc:	ldr	r6, [r4, #4]
   1bec0:	ldr	r3, [pc, #312]	; 1c000 <_obstack_memory_used@@Base+0x16e4>
   1bec4:	ldr	r8, [r3, #24]
   1bec8:	ldr	r3, [r6, #28]
   1becc:	ldr	r2, [r6, #24]
   1bed0:	sub	r3, r3, r2
   1bed4:	ldr	r2, [r6, #16]
   1bed8:	cmp	r3, r2
   1bedc:	bhi	1bfcc <_obstack_memory_used@@Base+0x16b0>
   1bee0:	str	r8, [r6, #12]
   1bee4:	mov	r0, r5
   1bee8:	bl	119c0 <strlen@plt>
   1beec:	subs	r8, r0, #0
   1bef0:	beq	1bf3c <_obstack_memory_used@@Base+0x1620>
   1bef4:	ldr	r6, [r4, #4]
   1bef8:	ldr	r3, [r6, #28]
   1befc:	add	r3, r3, r8
   1bf00:	ldr	r2, [r6, #32]
   1bf04:	cmp	r2, r3
   1bf08:	bcs	1bf20 <_obstack_memory_used@@Base+0x1604>
   1bf0c:	mov	r1, r8
   1bf10:	mov	r0, r6
   1bf14:	bl	1f8c4 <argp_error@@Base+0x137c>
   1bf18:	cmp	r0, #0
   1bf1c:	beq	1bf3c <_obstack_memory_used@@Base+0x1620>
   1bf20:	mov	r2, r8
   1bf24:	mov	r1, r5
   1bf28:	ldr	r0, [r6, #28]
   1bf2c:	bl	11810 <memcpy@plt>
   1bf30:	ldr	r3, [r6, #28]
   1bf34:	add	r8, r3, r8
   1bf38:	str	r8, [r6, #28]
   1bf3c:	ldr	r6, [r4, #4]
   1bf40:	ldr	r3, [r6, #28]
   1bf44:	ldr	r2, [r6, #24]
   1bf48:	sub	r3, r3, r2
   1bf4c:	ldr	r2, [r6, #16]
   1bf50:	cmp	r3, r2
   1bf54:	bhi	1bfd8 <_obstack_memory_used@@Base+0x16bc>
   1bf58:	mov	r3, #0
   1bf5c:	str	r3, [r6, #4]
   1bf60:	ldr	r6, [r4, #4]
   1bf64:	ldr	r2, [r6, #28]
   1bf68:	ldr	r3, [r6, #32]
   1bf6c:	cmp	r2, r3
   1bf70:	bcs	1bfe4 <_obstack_memory_used@@Base+0x16c8>
   1bf74:	ldr	r3, [r6, #28]
   1bf78:	add	r2, r3, #1
   1bf7c:	str	r2, [r6, #28]
   1bf80:	mov	r2, #10
   1bf84:	strb	r2, [r3]
   1bf88:	ldr	r3, [r4, #8]
   1bf8c:	mov	r2, #1
   1bf90:	str	r2, [r3, #4]
   1bf94:	cmp	r7, r5
   1bf98:	popeq	{r4, r5, r6, r7, r8, pc}
   1bf9c:	mov	r0, r5
   1bfa0:	bl	1a49c <argp_parse@@Base+0xbf4>
   1bfa4:	pop	{r4, r5, r6, r7, r8, pc}
   1bfa8:	mov	r1, #1
   1bfac:	mov	r0, r6
   1bfb0:	bl	1f8c4 <argp_error@@Base+0x137c>
   1bfb4:	cmp	r0, #0
   1bfb8:	beq	1be88 <_obstack_memory_used@@Base+0x156c>
   1bfbc:	b	1be74 <_obstack_memory_used@@Base+0x1558>
   1bfc0:	mov	r0, r6
   1bfc4:	bl	1f320 <argp_error@@Base+0xdd8>
   1bfc8:	b	1beb8 <_obstack_memory_used@@Base+0x159c>
   1bfcc:	mov	r0, r6
   1bfd0:	bl	1f320 <argp_error@@Base+0xdd8>
   1bfd4:	b	1bee0 <_obstack_memory_used@@Base+0x15c4>
   1bfd8:	mov	r0, r6
   1bfdc:	bl	1f320 <argp_error@@Base+0xdd8>
   1bfe0:	b	1bf58 <_obstack_memory_used@@Base+0x163c>
   1bfe4:	mov	r1, #1
   1bfe8:	mov	r0, r6
   1bfec:	bl	1f8c4 <argp_error@@Base+0x137c>
   1bff0:	cmp	r0, #0
   1bff4:	beq	1bf88 <_obstack_memory_used@@Base+0x166c>
   1bff8:	b	1bf74 <_obstack_memory_used@@Base+0x1658>
   1bffc:	andeq	r0, r0, #3
   1c000:	andeq	r2, r3, r0, asr #9
   1c004:	push	{r4, r5, r6, r7, r8, lr}
   1c008:	mov	r6, r0
   1c00c:	mov	r4, r1
   1c010:	ldr	r3, [r1, #12]
   1c014:	cmp	r3, #0
   1c018:	beq	1c138 <_obstack_memory_used@@Base+0x181c>
   1c01c:	ldr	r3, [r1, #8]
   1c020:	ldr	r7, [r3]
   1c024:	ldr	r2, [r1]
   1c028:	ldr	r5, [r2, #16]
   1c02c:	ldr	r3, [r3, #4]
   1c030:	cmp	r3, #0
   1c034:	cmpne	r7, #0
   1c038:	beq	1c074 <_obstack_memory_used@@Base+0x1758>
   1c03c:	ldr	r2, [r2, #12]
   1c040:	ldr	r3, [r7, #12]
   1c044:	cmp	r2, r3
   1c048:	beq	1c074 <_obstack_memory_used@@Base+0x1758>
   1c04c:	ldr	r8, [r1, #4]
   1c050:	ldr	r2, [r8, #28]
   1c054:	ldr	r3, [r8, #32]
   1c058:	cmp	r2, r3
   1c05c:	bcs	1c114 <_obstack_memory_used@@Base+0x17f8>
   1c060:	ldr	r3, [r8, #28]
   1c064:	add	r2, r3, #1
   1c068:	str	r2, [r8, #28]
   1c06c:	mov	r2, #10
   1c070:	strb	r2, [r3]
   1c074:	cmp	r5, #0
   1c078:	beq	1c0fc <_obstack_memory_used@@Base+0x17e0>
   1c07c:	ldr	r0, [r5]
   1c080:	cmp	r0, #0
   1c084:	beq	1c0fc <_obstack_memory_used@@Base+0x17e0>
   1c088:	ldrb	r3, [r0]
   1c08c:	cmp	r3, #0
   1c090:	beq	1c0fc <_obstack_memory_used@@Base+0x17e0>
   1c094:	cmp	r7, #0
   1c098:	beq	1c0c8 <_obstack_memory_used@@Base+0x17ac>
   1c09c:	ldr	r3, [r7, #16]
   1c0a0:	cmp	r5, r3
   1c0a4:	beq	1c0fc <_obstack_memory_used@@Base+0x17e0>
   1c0a8:	cmp	r3, #0
   1c0ac:	beq	1c0c8 <_obstack_memory_used@@Base+0x17ac>
   1c0b0:	ldr	r3, [r3, #12]
   1c0b4:	cmp	r3, #0
   1c0b8:	cmpne	r5, r3
   1c0bc:	bne	1c0b0 <_obstack_memory_used@@Base+0x1794>
   1c0c0:	cmp	r5, r3
   1c0c4:	beq	1c0fc <_obstack_memory_used@@Base+0x17e0>
   1c0c8:	ldr	r3, [r4, #4]
   1c0cc:	ldr	r7, [r3, #12]
   1c0d0:	mov	r2, r4
   1c0d4:	ldr	r1, [r5, #16]
   1c0d8:	bl	1be20 <_obstack_memory_used@@Base+0x1504>
   1c0dc:	ldr	r5, [r4, #4]
   1c0e0:	ldr	r3, [r5, #28]
   1c0e4:	ldr	r2, [r5, #24]
   1c0e8:	sub	r3, r3, r2
   1c0ec:	ldr	r2, [r5, #16]
   1c0f0:	cmp	r3, r2
   1c0f4:	bhi	1c12c <_obstack_memory_used@@Base+0x1810>
   1c0f8:	str	r7, [r5, #12]
   1c0fc:	mov	r3, #0
   1c100:	str	r3, [r4, #12]
   1c104:	mov	r1, r6
   1c108:	ldr	r0, [r4, #4]
   1c10c:	bl	1ba08 <_obstack_memory_used@@Base+0x10ec>
   1c110:	pop	{r4, r5, r6, r7, r8, pc}
   1c114:	mov	r1, #1
   1c118:	mov	r0, r8
   1c11c:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c120:	cmp	r0, #0
   1c124:	beq	1c074 <_obstack_memory_used@@Base+0x1758>
   1c128:	b	1c060 <_obstack_memory_used@@Base+0x1744>
   1c12c:	mov	r0, r5
   1c130:	bl	1f320 <argp_error@@Base+0xdd8>
   1c134:	b	1c0f8 <_obstack_memory_used@@Base+0x17dc>
   1c138:	ldr	r5, [r1, #4]
   1c13c:	ldr	r3, [r5, #28]
   1c140:	add	r3, r3, #2
   1c144:	ldr	r2, [r5, #32]
   1c148:	cmp	r2, r3
   1c14c:	bcs	1c164 <_obstack_memory_used@@Base+0x1848>
   1c150:	mov	r1, #2
   1c154:	mov	r0, r5
   1c158:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c15c:	cmp	r0, #0
   1c160:	beq	1c104 <_obstack_memory_used@@Base+0x17e8>
   1c164:	ldr	r3, [r5, #28]
   1c168:	ldr	r2, [pc, #20]	; 1c184 <_obstack_memory_used@@Base+0x1868>
   1c16c:	ldrh	r2, [r2]
   1c170:	strh	r2, [r3]
   1c174:	ldr	r3, [r5, #28]
   1c178:	add	r3, r3, #2
   1c17c:	str	r3, [r5, #28]
   1c180:	b	1c104 <_obstack_memory_used@@Base+0x17e8>
   1c184:	andeq	r1, r2, r4, lsl #5
   1c188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c18c:	sub	sp, sp, #28
   1c190:	mov	fp, r0
   1c194:	str	r1, [sp, #8]
   1c198:	mov	r6, r2
   1c19c:	mov	r8, r3
   1c1a0:	ldr	r7, [sp, #64]	; 0x40
   1c1a4:	ldr	r5, [sp, #68]	; 0x44
   1c1a8:	ldr	r9, [r0, #12]
   1c1ac:	ldr	r3, [r0, #16]
   1c1b0:	str	r3, [sp, #16]
   1c1b4:	cmp	r9, #0
   1c1b8:	beq	1c614 <_obstack_memory_used@@Base+0x1cf8>
   1c1bc:	mov	r1, #11
   1c1c0:	mov	r0, r9
   1c1c4:	bl	119cc <strchr@plt>
   1c1c8:	cmp	r6, #0
   1c1cc:	beq	1c4c4 <_obstack_memory_used@@Base+0x1ba8>
   1c1d0:	cmp	r0, #0
   1c1d4:	addne	r9, r0, #1
   1c1d8:	beq	1c5fc <_obstack_memory_used@@Base+0x1ce0>
   1c1dc:	ldr	r3, [fp, #20]
   1c1e0:	cmp	r3, #0
   1c1e4:	movne	sl, #0
   1c1e8:	beq	1c604 <_obstack_memory_used@@Base+0x1ce8>
   1c1ec:	ldr	r1, [sp, #8]
   1c1f0:	mov	r0, fp
   1c1f4:	bl	1a31c <argp_parse@@Base+0xa74>
   1c1f8:	str	r0, [sp, #12]
   1c1fc:	ldr	r3, [fp, #20]
   1c200:	ldr	r2, [pc, #1140]	; 1c67c <_obstack_memory_used@@Base+0x1d60>
   1c204:	ldr	r0, [pc, #1140]	; 1c680 <_obstack_memory_used@@Base+0x1d64>
   1c208:	cmp	r6, #0
   1c20c:	moveq	r0, r2
   1c210:	ldr	r2, [sp, #12]
   1c214:	mov	r1, r9
   1c218:	blx	r3
   1c21c:	mov	r4, r0
   1c220:	cmp	r4, #0
   1c224:	beq	1c5b4 <_obstack_memory_used@@Base+0x1c98>
   1c228:	cmp	r8, #0
   1c22c:	beq	1c254 <_obstack_memory_used@@Base+0x1938>
   1c230:	ldr	r2, [r5, #28]
   1c234:	ldr	r3, [r5, #32]
   1c238:	cmp	r2, r3
   1c23c:	bcs	1c508 <_obstack_memory_used@@Base+0x1bec>
   1c240:	ldr	r3, [r5, #28]
   1c244:	add	r2, r3, #1
   1c248:	str	r2, [r5, #28]
   1c24c:	mov	r2, #10
   1c250:	strb	r2, [r3]
   1c254:	cmp	r4, r9
   1c258:	movne	r3, #0
   1c25c:	moveq	r3, #1
   1c260:	cmp	sl, #0
   1c264:	moveq	r3, #0
   1c268:	cmp	r3, #0
   1c26c:	beq	1c520 <_obstack_memory_used@@Base+0x1c04>
   1c270:	ldr	r3, [r5, #28]
   1c274:	add	r3, r3, sl
   1c278:	ldr	r2, [r5, #32]
   1c27c:	cmp	r2, r3
   1c280:	bcs	1c298 <_obstack_memory_used@@Base+0x197c>
   1c284:	mov	r1, sl
   1c288:	mov	r0, r5
   1c28c:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c290:	cmp	r0, #0
   1c294:	beq	1c2b4 <_obstack_memory_used@@Base+0x1998>
   1c298:	mov	r2, sl
   1c29c:	mov	r1, r9
   1c2a0:	ldr	r0, [r5, #28]
   1c2a4:	bl	11810 <memcpy@plt>
   1c2a8:	ldr	r3, [r5, #28]
   1c2ac:	add	r3, r3, sl
   1c2b0:	str	r3, [r5, #28]
   1c2b4:	ldr	r3, [r5, #28]
   1c2b8:	ldr	r2, [r5, #24]
   1c2bc:	sub	r3, r3, r2
   1c2c0:	ldr	r2, [r5, #16]
   1c2c4:	cmp	r3, r2
   1c2c8:	bhi	1c580 <_obstack_memory_used@@Base+0x1c64>
   1c2cc:	ldr	r3, [r5, #20]
   1c2d0:	bic	r3, r3, r3, asr #31
   1c2d4:	ldr	r2, [r5, #4]
   1c2d8:	cmp	r2, r3
   1c2dc:	bcs	1c304 <_obstack_memory_used@@Base+0x19e8>
   1c2e0:	ldr	r2, [r5, #28]
   1c2e4:	ldr	r3, [r5, #32]
   1c2e8:	cmp	r2, r3
   1c2ec:	bcs	1c58c <_obstack_memory_used@@Base+0x1c70>
   1c2f0:	ldr	r3, [r5, #28]
   1c2f4:	add	r2, r3, #1
   1c2f8:	str	r2, [r5, #28]
   1c2fc:	mov	r2, #10
   1c300:	strb	r2, [r3]
   1c304:	cmp	r4, r9
   1c308:	moveq	r4, #1
   1c30c:	bne	1c5a4 <_obstack_memory_used@@Base+0x1c88>
   1c310:	cmp	r9, #0
   1c314:	cmpne	sl, #0
   1c318:	beq	1c330 <_obstack_memory_used@@Base+0x1a14>
   1c31c:	ldr	r3, [fp, #20]
   1c320:	cmp	r3, #0
   1c324:	beq	1c43c <_obstack_memory_used@@Base+0x1b20>
   1c328:	mov	r0, r9
   1c32c:	bl	1a49c <argp_parse@@Base+0xbf4>
   1c330:	cmp	r6, #0
   1c334:	beq	1c43c <_obstack_memory_used@@Base+0x1b20>
   1c338:	ldr	r3, [fp, #20]
   1c33c:	cmp	r3, #0
   1c340:	beq	1c43c <_obstack_memory_used@@Base+0x1b20>
   1c344:	ldr	r2, [sp, #12]
   1c348:	mov	r1, #0
   1c34c:	ldr	r0, [pc, #816]	; 1c684 <_obstack_memory_used@@Base+0x1d68>
   1c350:	blx	r3
   1c354:	subs	r9, r0, #0
   1c358:	beq	1c43c <_obstack_memory_used@@Base+0x1b20>
   1c35c:	orrs	r3, r8, r4
   1c360:	beq	1c388 <_obstack_memory_used@@Base+0x1a6c>
   1c364:	ldr	r2, [r5, #28]
   1c368:	ldr	r3, [r5, #32]
   1c36c:	cmp	r2, r3
   1c370:	bcs	1c5bc <_obstack_memory_used@@Base+0x1ca0>
   1c374:	ldr	r3, [r5, #28]
   1c378:	add	r2, r3, #1
   1c37c:	str	r2, [r5, #28]
   1c380:	mov	r2, #10
   1c384:	strb	r2, [r3]
   1c388:	mov	r0, r9
   1c38c:	bl	119c0 <strlen@plt>
   1c390:	subs	r4, r0, #0
   1c394:	beq	1c3dc <_obstack_memory_used@@Base+0x1ac0>
   1c398:	ldr	r3, [r5, #28]
   1c39c:	add	r3, r3, r4
   1c3a0:	ldr	r2, [r5, #32]
   1c3a4:	cmp	r2, r3
   1c3a8:	bcs	1c3c0 <_obstack_memory_used@@Base+0x1aa4>
   1c3ac:	mov	r1, r4
   1c3b0:	mov	r0, r5
   1c3b4:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c3b8:	cmp	r0, #0
   1c3bc:	beq	1c3dc <_obstack_memory_used@@Base+0x1ac0>
   1c3c0:	mov	r2, r4
   1c3c4:	mov	r1, r9
   1c3c8:	ldr	r0, [r5, #28]
   1c3cc:	bl	11810 <memcpy@plt>
   1c3d0:	ldr	r3, [r5, #28]
   1c3d4:	add	r4, r3, r4
   1c3d8:	str	r4, [r5, #28]
   1c3dc:	mov	r0, r9
   1c3e0:	bl	1a49c <argp_parse@@Base+0xbf4>
   1c3e4:	ldr	r3, [r5, #28]
   1c3e8:	ldr	r2, [r5, #24]
   1c3ec:	sub	r3, r3, r2
   1c3f0:	ldr	r2, [r5, #16]
   1c3f4:	cmp	r3, r2
   1c3f8:	bhi	1c5d4 <_obstack_memory_used@@Base+0x1cb8>
   1c3fc:	ldr	r3, [r5, #20]
   1c400:	bic	r3, r3, r3, asr #31
   1c404:	ldr	r2, [r5, #4]
   1c408:	cmp	r2, r3
   1c40c:	movcs	r4, #1
   1c410:	bcs	1c43c <_obstack_memory_used@@Base+0x1b20>
   1c414:	ldr	r2, [r5, #28]
   1c418:	ldr	r3, [r5, #32]
   1c41c:	cmp	r2, r3
   1c420:	bcs	1c5e0 <_obstack_memory_used@@Base+0x1cc4>
   1c424:	ldr	r3, [r5, #28]
   1c428:	add	r2, r3, #1
   1c42c:	str	r2, [r5, #28]
   1c430:	mov	r2, #10
   1c434:	strb	r2, [r3]
   1c438:	mov	r4, #1
   1c43c:	ldr	r3, [sp, #16]
   1c440:	cmp	r3, #0
   1c444:	beq	1c4b8 <_obstack_memory_used@@Base+0x1b9c>
   1c448:	ldr	r0, [r3]
   1c44c:	cmp	r0, #0
   1c450:	beq	1c4b8 <_obstack_memory_used@@Base+0x1b9c>
   1c454:	clz	r9, r7
   1c458:	lsr	r9, r9, #5
   1c45c:	cmp	r7, #0
   1c460:	cmpne	r4, #0
   1c464:	bne	1c4b8 <_obstack_memory_used@@Base+0x1b9c>
   1c468:	mov	sl, r3
   1c46c:	ldr	fp, [sp, #8]
   1c470:	orrs	r3, r8, r4
   1c474:	str	r5, [sp, #4]
   1c478:	str	r7, [sp]
   1c47c:	movne	r3, #1
   1c480:	moveq	r3, #0
   1c484:	mov	r2, r6
   1c488:	mov	r1, fp
   1c48c:	bl	1c188 <_obstack_memory_used@@Base+0x186c>
   1c490:	orr	r4, r4, r0
   1c494:	ldr	r0, [sl, #16]
   1c498:	cmp	r0, #0
   1c49c:	beq	1c4b8 <_obstack_memory_used@@Base+0x1b9c>
   1c4a0:	add	sl, sl, #16
   1c4a4:	cmp	r4, #0
   1c4a8:	movne	r3, r9
   1c4ac:	orreq	r3, r9, #1
   1c4b0:	cmp	r3, #0
   1c4b4:	bne	1c470 <_obstack_memory_used@@Base+0x1b54>
   1c4b8:	mov	r0, r4
   1c4bc:	add	sp, sp, #28
   1c4c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4c4:	cmp	r0, #0
   1c4c8:	beq	1c64c <_obstack_memory_used@@Base+0x1d30>
   1c4cc:	sub	sl, r0, r9
   1c4d0:	ldr	r3, [fp, #20]
   1c4d4:	cmp	r3, #0
   1c4d8:	beq	1c4f8 <_obstack_memory_used@@Base+0x1bdc>
   1c4dc:	cmp	sl, #0
   1c4e0:	beq	1c1ec <_obstack_memory_used@@Base+0x18d0>
   1c4e4:	mov	r1, sl
   1c4e8:	mov	r0, r9
   1c4ec:	bl	117f8 <strndup@plt>
   1c4f0:	mov	r9, r0
   1c4f4:	b	1c1ec <_obstack_memory_used@@Base+0x18d0>
   1c4f8:	mov	r4, r9
   1c4fc:	mov	r3, #0
   1c500:	str	r3, [sp, #12]
   1c504:	b	1c228 <_obstack_memory_used@@Base+0x190c>
   1c508:	mov	r1, #1
   1c50c:	mov	r0, r5
   1c510:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c514:	cmp	r0, #0
   1c518:	beq	1c254 <_obstack_memory_used@@Base+0x1938>
   1c51c:	b	1c240 <_obstack_memory_used@@Base+0x1924>
   1c520:	mov	r0, r4
   1c524:	bl	119c0 <strlen@plt>
   1c528:	subs	r3, r0, #0
   1c52c:	mov	r1, r3
   1c530:	str	r3, [sp, #20]
   1c534:	beq	1c2b4 <_obstack_memory_used@@Base+0x1998>
   1c538:	ldr	r3, [r5, #28]
   1c53c:	add	r3, r3, r1
   1c540:	ldr	r2, [r5, #32]
   1c544:	cmp	r2, r3
   1c548:	bcs	1c55c <_obstack_memory_used@@Base+0x1c40>
   1c54c:	mov	r0, r5
   1c550:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c554:	cmp	r0, #0
   1c558:	beq	1c2b4 <_obstack_memory_used@@Base+0x1998>
   1c55c:	ldr	r2, [sp, #20]
   1c560:	mov	r1, r4
   1c564:	ldr	r0, [r5, #28]
   1c568:	bl	11810 <memcpy@plt>
   1c56c:	ldr	r3, [r5, #28]
   1c570:	ldr	r2, [sp, #20]
   1c574:	add	r3, r3, r2
   1c578:	str	r3, [r5, #28]
   1c57c:	b	1c2b4 <_obstack_memory_used@@Base+0x1998>
   1c580:	mov	r0, r5
   1c584:	bl	1f320 <argp_error@@Base+0xdd8>
   1c588:	b	1c2cc <_obstack_memory_used@@Base+0x19b0>
   1c58c:	mov	r1, #1
   1c590:	mov	r0, r5
   1c594:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c598:	cmp	r0, #0
   1c59c:	beq	1c304 <_obstack_memory_used@@Base+0x19e8>
   1c5a0:	b	1c2f0 <_obstack_memory_used@@Base+0x19d4>
   1c5a4:	mov	r0, r4
   1c5a8:	bl	1a49c <argp_parse@@Base+0xbf4>
   1c5ac:	mov	r4, #1
   1c5b0:	b	1c310 <_obstack_memory_used@@Base+0x19f4>
   1c5b4:	mov	r4, #0
   1c5b8:	b	1c310 <_obstack_memory_used@@Base+0x19f4>
   1c5bc:	mov	r1, #1
   1c5c0:	mov	r0, r5
   1c5c4:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c5c8:	cmp	r0, #0
   1c5cc:	beq	1c388 <_obstack_memory_used@@Base+0x1a6c>
   1c5d0:	b	1c374 <_obstack_memory_used@@Base+0x1a58>
   1c5d4:	mov	r0, r5
   1c5d8:	bl	1f320 <argp_error@@Base+0xdd8>
   1c5dc:	b	1c3fc <_obstack_memory_used@@Base+0x1ae0>
   1c5e0:	mov	r1, #1
   1c5e4:	mov	r0, r5
   1c5e8:	bl	1f8c4 <argp_error@@Base+0x137c>
   1c5ec:	cmp	r0, #0
   1c5f0:	moveq	r4, #1
   1c5f4:	beq	1c43c <_obstack_memory_used@@Base+0x1b20>
   1c5f8:	b	1c424 <_obstack_memory_used@@Base+0x1b08>
   1c5fc:	mov	r9, #0
   1c600:	b	1c1dc <_obstack_memory_used@@Base+0x18c0>
   1c604:	mov	r4, r9
   1c608:	mov	sl, #0
   1c60c:	str	sl, [sp, #12]
   1c610:	b	1c220 <_obstack_memory_used@@Base+0x1904>
   1c614:	ldr	r3, [r0, #20]
   1c618:	cmp	r3, #0
   1c61c:	movne	sl, #0
   1c620:	bne	1c1ec <_obstack_memory_used@@Base+0x18d0>
   1c624:	mov	r3, r9
   1c628:	cmp	r9, #0
   1c62c:	moveq	r4, #0
   1c630:	streq	r4, [sp, #12]
   1c634:	beq	1c330 <_obstack_memory_used@@Base+0x1a14>
   1c638:	mov	r4, r9
   1c63c:	mov	r9, r3
   1c640:	mov	sl, #0
   1c644:	str	sl, [sp, #12]
   1c648:	b	1c228 <_obstack_memory_used@@Base+0x190c>
   1c64c:	ldr	r3, [fp, #20]
   1c650:	cmp	r3, #0
   1c654:	moveq	r3, r9
   1c658:	beq	1c628 <_obstack_memory_used@@Base+0x1d0c>
   1c65c:	ldr	r1, [sp, #8]
   1c660:	mov	r0, fp
   1c664:	bl	1a31c <argp_parse@@Base+0xa74>
   1c668:	str	r0, [sp, #12]
   1c66c:	ldr	r3, [fp, #20]
   1c670:	mov	sl, #0
   1c674:	ldr	r0, [pc]	; 1c67c <_obstack_memory_used@@Base+0x1d60>
   1c678:	b	1c210 <_obstack_memory_used@@Base+0x18f4>
   1c67c:	andeq	r0, r0, #1
   1c680:	andeq	r0, r0, #2
   1c684:	andeq	r0, r0, #4
   1c688:	ldr	r3, [r0, #12]
   1c68c:	ldr	r2, [r1, #12]
   1c690:	cmp	r3, r2
   1c694:	beq	1c6ec <_obstack_memory_used@@Base+0x1dd0>
   1c698:	push	{r4, r5, r6, lr}
   1c69c:	mov	r5, r1
   1c6a0:	mov	r4, r0
   1c6a4:	mov	r1, r2
   1c6a8:	mov	r0, r3
   1c6ac:	bl	1c688 <_obstack_memory_used@@Base+0x1d6c>
   1c6b0:	subs	r3, r0, #0
   1c6b4:	bne	1c6e4 <_obstack_memory_used@@Base+0x1dc8>
   1c6b8:	ldr	r0, [r4, #8]
   1c6bc:	ldr	r3, [r5, #8]
   1c6c0:	mvn	r2, r3
   1c6c4:	lsr	r2, r2, #31
   1c6c8:	cmp	r2, r0, lsr #31
   1c6cc:	subne	r3, r0, r3
   1c6d0:	subeq	r3, r3, r0
   1c6d4:	cmp	r3, #0
   1c6d8:	ldreq	r3, [r5, #4]
   1c6dc:	ldreq	r0, [r4, #4]
   1c6e0:	subeq	r3, r3, r0
   1c6e4:	mov	r0, r3
   1c6e8:	pop	{r4, r5, r6, pc}
   1c6ec:	ldr	r2, [r0, #8]
   1c6f0:	ldr	r3, [r1, #8]
   1c6f4:	mvn	ip, r3
   1c6f8:	lsr	ip, ip, #31
   1c6fc:	cmp	ip, r2, lsr #31
   1c700:	subne	r3, r2, r3
   1c704:	subeq	r3, r3, r2
   1c708:	cmp	r3, #0
   1c70c:	ldreq	r3, [r1, #4]
   1c710:	ldreq	r0, [r0, #4]
   1c714:	subeq	r3, r3, r0
   1c718:	mov	r0, r3
   1c71c:	bx	lr
   1c720:	push	{r4, r5, r6, r7, r8, lr}
   1c724:	sub	sp, sp, #8
   1c728:	ldr	lr, [r0, #16]
   1c72c:	cmp	lr, #0
   1c730:	movne	r2, lr
   1c734:	bne	1c744 <_obstack_memory_used@@Base+0x1e28>
   1c738:	ldr	ip, [r0, #12]
   1c73c:	b	1c754 <_obstack_memory_used@@Base+0x1e38>
   1c740:	mov	r2, r3
   1c744:	ldr	r3, [r2, #12]
   1c748:	cmp	r3, #0
   1c74c:	bne	1c740 <_obstack_memory_used@@Base+0x1e24>
   1c750:	ldr	ip, [r2, #8]
   1c754:	ldr	r5, [r1, #16]
   1c758:	cmp	r5, #0
   1c75c:	movne	r2, r5
   1c760:	bne	1c770 <_obstack_memory_used@@Base+0x1e54>
   1c764:	ldr	r4, [r1, #12]
   1c768:	b	1c780 <_obstack_memory_used@@Base+0x1e64>
   1c76c:	mov	r2, r3
   1c770:	ldr	r3, [r2, #12]
   1c774:	cmp	r3, #0
   1c778:	bne	1c76c <_obstack_memory_used@@Base+0x1e50>
   1c77c:	ldr	r4, [r2, #8]
   1c780:	mvn	r3, r4
   1c784:	lsr	r3, r3, #31
   1c788:	cmp	r3, ip, lsr #31
   1c78c:	subne	r4, ip, r4
   1c790:	subeq	r4, r4, ip
   1c794:	cmp	r4, #0
   1c798:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c79c:	adds	r4, r5, #0
   1c7a0:	movne	r4, #1
   1c7a4:	cmp	lr, #0
   1c7a8:	rsbeq	r4, r4, #0
   1c7ac:	rsbne	r4, r4, #1
   1c7b0:	cmp	r4, #0
   1c7b4:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c7b8:	mov	r6, r1
   1c7bc:	mov	r7, r0
   1c7c0:	cmp	lr, #0
   1c7c4:	beq	1c850 <_obstack_memory_used@@Base+0x1f34>
   1c7c8:	ldr	ip, [lr, #20]
   1c7cc:	ldr	r2, [r5, #20]
   1c7d0:	cmp	ip, r2
   1c7d4:	ble	1c80c <_obstack_memory_used@@Base+0x1ef0>
   1c7d8:	mov	r0, lr
   1c7dc:	ldr	r0, [r0, #12]
   1c7e0:	ldr	r3, [r0, #20]
   1c7e4:	cmp	r2, r3
   1c7e8:	blt	1c7dc <_obstack_memory_used@@Base+0x1ec0>
   1c7ec:	mov	r1, r5
   1c7f0:	bl	1c688 <_obstack_memory_used@@Base+0x1d6c>
   1c7f4:	subs	r4, r0, #0
   1c7f8:	cmp	r0, #0
   1c7fc:	moveq	r4, #1
   1c800:	mov	r0, r4
   1c804:	add	sp, sp, #8
   1c808:	pop	{r4, r5, r6, r7, r8, pc}
   1c80c:	cmp	ip, r2
   1c810:	bge	1c83c <_obstack_memory_used@@Base+0x1f20>
   1c814:	mov	r1, r5
   1c818:	ldr	r1, [r1, #12]
   1c81c:	ldr	r3, [r1, #20]
   1c820:	cmp	ip, r3
   1c824:	blt	1c818 <_obstack_memory_used@@Base+0x1efc>
   1c828:	mov	r0, lr
   1c82c:	bl	1c688 <_obstack_memory_used@@Base+0x1d6c>
   1c830:	subs	r4, r0, #0
   1c834:	mvneq	r4, #0
   1c838:	b	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c83c:	mov	r1, r5
   1c840:	mov	r0, lr
   1c844:	bl	1c688 <_obstack_memory_used@@Base+0x1d6c>
   1c848:	subs	r4, r0, #0
   1c84c:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c850:	ldr	r3, [r7, #12]
   1c854:	ldr	r4, [r6, #12]
   1c858:	mvn	r2, r4
   1c85c:	lsr	r2, r2, #31
   1c860:	cmp	r2, r3, lsr #31
   1c864:	subne	r4, r3, r4
   1c868:	subeq	r4, r4, r3
   1c86c:	cmp	r4, #0
   1c870:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c874:	mov	r0, r7
   1c878:	bl	1b4c8 <_obstack_memory_used@@Base+0xbac>
   1c87c:	mov	r5, r0
   1c880:	str	r0, [sp]
   1c884:	mov	r0, r6
   1c888:	bl	1b4c8 <_obstack_memory_used@@Base+0xbac>
   1c88c:	str	r0, [sp, #4]
   1c890:	ldr	r3, [r7]
   1c894:	ldr	r3, [r3, #12]
   1c898:	adds	r5, r5, #0
   1c89c:	movne	r5, #1
   1c8a0:	ands	r3, r5, r3, lsr #3
   1c8a4:	beq	1c9e8 <_obstack_memory_used@@Base+0x20cc>
   1c8a8:	mov	r0, sp
   1c8ac:	bl	1b68c <_obstack_memory_used@@Base+0xd70>
   1c8b0:	adds	r5, r0, #0
   1c8b4:	movne	r5, #1
   1c8b8:	ldr	r3, [r6]
   1c8bc:	ldr	r0, [r3, #12]
   1c8c0:	ands	r0, r0, #8
   1c8c4:	beq	1c8e4 <_obstack_memory_used@@Base+0x1fc8>
   1c8c8:	ldr	r3, [sp, #4]
   1c8cc:	cmp	r3, #0
   1c8d0:	beq	1c9e0 <_obstack_memory_used@@Base+0x20c4>
   1c8d4:	add	r0, sp, #4
   1c8d8:	bl	1b68c <_obstack_memory_used@@Base+0xd70>
   1c8dc:	adds	r0, r0, #0
   1c8e0:	movne	r0, #1
   1c8e4:	subs	r4, r5, r0
   1c8e8:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c8ec:	ldr	r2, [r7, #20]
   1c8f0:	ldr	r4, [pc, #276]	; 1ca0c <_obstack_memory_used@@Base+0x20f0>
   1c8f4:	mov	r3, #0
   1c8f8:	ldr	r2, [r2, #24]
   1c8fc:	mov	r1, r4
   1c900:	mov	r0, r7
   1c904:	bl	1b560 <_obstack_memory_used@@Base+0xc44>
   1c908:	mov	r5, r0
   1c90c:	uxtb	r8, r0
   1c910:	ldr	r2, [r6, #20]
   1c914:	mov	r3, #0
   1c918:	ldr	r2, [r2, #24]
   1c91c:	mov	r1, r4
   1c920:	mov	r0, r6
   1c924:	bl	1b560 <_obstack_memory_used@@Base+0xc44>
   1c928:	uxtb	r7, r0
   1c92c:	cmp	r8, #0
   1c930:	movne	r5, r8
   1c934:	bne	1c948 <_obstack_memory_used@@Base+0x202c>
   1c938:	ldr	r3, [sp]
   1c93c:	cmp	r3, #0
   1c940:	ldrbne	r5, [r3]
   1c944:	moveq	r5, #0
   1c948:	cmp	r7, #0
   1c94c:	uxtbne	r6, r0
   1c950:	bne	1c964 <_obstack_memory_used@@Base+0x2048>
   1c954:	ldr	r3, [sp, #4]
   1c958:	cmp	r3, #0
   1c95c:	ldrbne	r6, [r3]
   1c960:	moveq	r6, #0
   1c964:	bl	1196c <__ctype_tolower_loc@plt>
   1c968:	ldr	r3, [r0]
   1c96c:	ldr	r4, [r3, r5, lsl #2]
   1c970:	ldr	r3, [r3, r6, lsl #2]
   1c974:	subs	r4, r4, r3
   1c978:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c97c:	subs	r4, r6, r5
   1c980:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c984:	adds	r4, r7, #0
   1c988:	movne	r4, #1
   1c98c:	cmp	r8, #0
   1c990:	rsbeq	r4, r4, #0
   1c994:	rsbne	r4, r4, #1
   1c998:	cmp	r4, #0
   1c99c:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c9a0:	cmp	r8, #0
   1c9a4:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c9a8:	ldr	r0, [sp]
   1c9ac:	ldr	r1, [sp, #4]
   1c9b0:	adds	r4, r1, #0
   1c9b4:	movne	r4, #1
   1c9b8:	cmp	r0, #0
   1c9bc:	rsbeq	r4, r4, #0
   1c9c0:	rsbne	r4, r4, #1
   1c9c4:	cmp	r4, #0
   1c9c8:	bne	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c9cc:	cmp	r0, #0
   1c9d0:	beq	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c9d4:	bl	11894 <strcasecmp@plt>
   1c9d8:	mov	r4, r0
   1c9dc:	b	1c800 <_obstack_memory_used@@Base+0x1ee4>
   1c9e0:	mov	r0, r4
   1c9e4:	b	1c8e4 <_obstack_memory_used@@Base+0x1fc8>
   1c9e8:	ldr	r3, [r6]
   1c9ec:	ldr	r3, [r3, #12]
   1c9f0:	tst	r3, #8
   1c9f4:	beq	1c8ec <_obstack_memory_used@@Base+0x1fd0>
   1c9f8:	ldr	r3, [sp, #4]
   1c9fc:	cmp	r3, #0
   1ca00:	movne	r5, r4
   1ca04:	bne	1c8d4 <_obstack_memory_used@@Base+0x1fb8>
   1ca08:	b	1c8ec <_obstack_memory_used@@Base+0x1fd0>
   1ca0c:	andeq	fp, r1, r4, asr #12
   1ca10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca14:	sub	sp, sp, #52	; 0x34
   1ca18:	str	r0, [sp, #24]
   1ca1c:	str	r1, [sp, #28]
   1ca20:	ldr	r2, [r0, #16]
   1ca24:	str	r2, [sp, #8]
   1ca28:	ldr	r5, [r0]
   1ca2c:	mov	r0, #16
   1ca30:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1ca34:	subs	fp, r0, #0
   1ca38:	beq	1ca68 <_obstack_memory_used@@Base+0x214c>
   1ca3c:	mov	r3, #0
   1ca40:	str	r3, [fp, #4]
   1ca44:	str	r3, [fp, #12]
   1ca48:	cmp	r5, r3
   1ca4c:	beq	1cc40 <_obstack_memory_used@@Base+0x2324>
   1ca50:	ldr	r4, [r5, #12]
   1ca54:	ands	r4, r4, #4
   1ca58:	bne	1ca7c <_obstack_memory_used@@Base+0x2160>
   1ca5c:	add	r6, r5, #24
   1ca60:	mov	r8, r3
   1ca64:	b	1caa4 <_obstack_memory_used@@Base+0x2188>
   1ca68:	ldr	r3, [pc, #1576]	; 1d098 <_obstack_memory_used@@Base+0x277c>
   1ca6c:	ldr	r2, [pc, #1576]	; 1d09c <_obstack_memory_used@@Base+0x2780>
   1ca70:	ldr	r1, [pc, #1576]	; 1d0a0 <_obstack_memory_used@@Base+0x2784>
   1ca74:	ldr	r0, [pc, #1576]	; 1d0a4 <_obstack_memory_used@@Base+0x2788>
   1ca78:	bl	11bdc <__assert_fail@plt>
   1ca7c:	ldr	r3, [pc, #1556]	; 1d098 <_obstack_memory_used@@Base+0x277c>
   1ca80:	mov	r2, #460	; 0x1cc
   1ca84:	ldr	r1, [pc, #1556]	; 1d0a0 <_obstack_memory_used@@Base+0x2784>
   1ca88:	ldr	r0, [pc, #1560]	; 1d0a8 <_obstack_memory_used@@Base+0x278c>
   1ca8c:	bl	11bdc <__assert_fail@plt>
   1ca90:	ldr	r2, [fp, #4]
   1ca94:	add	r2, r2, #1
   1ca98:	str	r2, [fp, #4]
   1ca9c:	b	1cacc <_obstack_memory_used@@Base+0x21b0>
   1caa0:	add	r6, r6, #24
   1caa4:	mov	r3, r6
   1caa8:	ldr	r2, [r6, #-20]	; 0xffffffec
   1caac:	cmp	r2, #0
   1cab0:	bne	1cac0 <_obstack_memory_used@@Base+0x21a4>
   1cab4:	ldr	r2, [r6, #-24]	; 0xffffffe8
   1cab8:	cmp	r2, #0
   1cabc:	beq	1cb04 <_obstack_memory_used@@Base+0x21e8>
   1cac0:	ldr	r2, [r3, #-12]
   1cac4:	tst	r2, #4
   1cac8:	beq	1ca90 <_obstack_memory_used@@Base+0x2174>
   1cacc:	ldr	r2, [r3, #-12]
   1cad0:	tst	r2, #8
   1cad4:	bne	1caa0 <_obstack_memory_used@@Base+0x2184>
   1cad8:	ldr	r7, [r3, #-20]	; 0xffffffec
   1cadc:	sub	r3, r7, #1
   1cae0:	cmp	r3, #254	; 0xfe
   1cae4:	bhi	1caa0 <_obstack_memory_used@@Base+0x2184>
   1cae8:	bl	11990 <__ctype_b_loc@plt>
   1caec:	ldr	r3, [r0]
   1caf0:	lsl	r7, r7, #1
   1caf4:	ldrh	r3, [r3, r7]
   1caf8:	tst	r3, #16384	; 0x4000
   1cafc:	addne	r8, r8, #1
   1cb00:	b	1caa0 <_obstack_memory_used@@Base+0x2184>
   1cb04:	ldr	r2, [r6, #-8]
   1cb08:	cmp	r2, #0
   1cb0c:	bne	1cac0 <_obstack_memory_used@@Base+0x21a4>
   1cb10:	ldr	r2, [r6, #-4]
   1cb14:	cmp	r2, #0
   1cb18:	bne	1cac0 <_obstack_memory_used@@Base+0x21a4>
   1cb1c:	ldr	r0, [fp, #4]
   1cb20:	rsb	r0, r0, r0, lsl #3
   1cb24:	lsl	r0, r0, #2
   1cb28:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1cb2c:	str	r0, [fp]
   1cb30:	add	r0, r8, #1
   1cb34:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1cb38:	str	r0, [fp, #8]
   1cb3c:	ldr	r8, [fp]
   1cb40:	cmp	r0, #0
   1cb44:	cmpne	r8, #0
   1cb48:	bne	1cb60 <_obstack_memory_used@@Base+0x2244>
   1cb4c:	ldr	r3, [pc, #1348]	; 1d098 <_obstack_memory_used@@Base+0x277c>
   1cb50:	ldr	r2, [pc, #1364]	; 1d0ac <_obstack_memory_used@@Base+0x2790>
   1cb54:	ldr	r1, [pc, #1348]	; 1d0a0 <_obstack_memory_used@@Base+0x2784>
   1cb58:	ldr	r0, [pc, #1360]	; 1d0b0 <_obstack_memory_used@@Base+0x2794>
   1cb5c:	bl	11bdc <__assert_fail@plt>
   1cb60:	ldr	r2, [fp, #4]
   1cb64:	ldr	r3, [pc, #1352]	; 1d0b4 <_obstack_memory_used@@Base+0x2798>
   1cb68:	cmp	r2, r3
   1cb6c:	addls	r8, r8, #28
   1cb70:	movls	r7, r0
   1cb74:	movls	sl, #0
   1cb78:	bls	1cbc4 <_obstack_memory_used@@Base+0x22a8>
   1cb7c:	ldr	r3, [pc, #1300]	; 1d098 <_obstack_memory_used@@Base+0x277c>
   1cb80:	mov	r2, #476	; 0x1dc
   1cb84:	ldr	r1, [pc, #1300]	; 1d0a0 <_obstack_memory_used@@Base+0x2784>
   1cb88:	ldr	r0, [pc, #1320]	; 1d0b8 <_obstack_memory_used@@Base+0x279c>
   1cb8c:	bl	11bdc <__assert_fail@plt>
   1cb90:	ldr	r3, [r5, #4]
   1cb94:	cmp	r3, #0
   1cb98:	addeq	r9, r4, #1
   1cb9c:	movne	r9, r4
   1cba0:	b	1cc08 <_obstack_memory_used@@Base+0x22ec>
   1cba4:	ldr	r3, [r5, #16]
   1cba8:	cmp	r3, #0
   1cbac:	bne	1cfb4 <_obstack_memory_used@@Base+0x2698>
   1cbb0:	ldr	r3, [r5, #20]
   1cbb4:	cmp	r3, #0
   1cbb8:	bne	1cfb4 <_obstack_memory_used@@Base+0x2698>
   1cbbc:	add	r8, r8, #28
   1cbc0:	mov	r4, r9
   1cbc4:	ldr	r3, [r5, #4]
   1cbc8:	cmp	r3, #0
   1cbcc:	bne	1cbdc <_obstack_memory_used@@Base+0x22c0>
   1cbd0:	ldr	r3, [r5]
   1cbd4:	cmp	r3, #0
   1cbd8:	beq	1cc20 <_obstack_memory_used@@Base+0x2304>
   1cbdc:	mov	r6, r8
   1cbe0:	str	r5, [r8, #-28]	; 0xffffffe4
   1cbe4:	str	sl, [r8, #-24]	; 0xffffffe8
   1cbe8:	str	r7, [r8, #-20]	; 0xffffffec
   1cbec:	ldr	r9, [r5, #20]
   1cbf0:	cmp	r9, #0
   1cbf4:	bne	1cc08 <_obstack_memory_used@@Base+0x22ec>
   1cbf8:	ldr	r3, [r5]
   1cbfc:	cmp	r3, #0
   1cc00:	movne	r9, r4
   1cc04:	beq	1cb90 <_obstack_memory_used@@Base+0x2274>
   1cc08:	str	r9, [r6, #-16]
   1cc0c:	ldr	r3, [sp, #28]
   1cc10:	str	r3, [r6, #-12]
   1cc14:	ldr	r3, [sp, #24]
   1cc18:	str	r3, [r6, #-8]
   1cc1c:	b	1cfc0 <_obstack_memory_used@@Base+0x26a4>
   1cc20:	ldr	r3, [r5, #16]
   1cc24:	cmp	r3, #0
   1cc28:	bne	1cbdc <_obstack_memory_used@@Base+0x22c0>
   1cc2c:	ldr	r3, [r5, #20]
   1cc30:	cmp	r3, #0
   1cc34:	bne	1cbdc <_obstack_memory_used@@Base+0x22c0>
   1cc38:	mov	r3, #0
   1cc3c:	strb	r3, [r7]
   1cc40:	ldr	r3, [sp, #8]
   1cc44:	cmp	r3, #0
   1cc48:	beq	1cf84 <_obstack_memory_used@@Base+0x2668>
   1cc4c:	ldr	r3, [r3]
   1cc50:	cmp	r3, #0
   1cc54:	beq	1cf84 <_obstack_memory_used@@Base+0x2668>
   1cc58:	add	r3, fp, #12
   1cc5c:	str	r3, [sp, #44]	; 0x2c
   1cc60:	str	fp, [sp, #20]
   1cc64:	b	1ccf4 <_obstack_memory_used@@Base+0x23d8>
   1cc68:	ldr	r1, [sp, #28]
   1cc6c:	b	1cd74 <_obstack_memory_used@@Base+0x2458>
   1cc70:	mov	r2, r3
   1cc74:	ldr	r3, [r2, #24]
   1cc78:	cmp	r3, #0
   1cc7c:	bne	1cc70 <_obstack_memory_used@@Base+0x2354>
   1cc80:	add	r2, r2, #24
   1cc84:	ldr	r1, [sp, #16]
   1cc88:	ldr	r3, [r1, #12]
   1cc8c:	str	r3, [r2]
   1cc90:	mov	r2, #0
   1cc94:	str	r2, [r1, #12]
   1cc98:	ldr	r3, [r1, #4]
   1cc9c:	cmp	r3, r2
   1cca0:	beq	1ccd8 <_obstack_memory_used@@Base+0x23bc>
   1cca4:	ldr	r0, [sp, #20]
   1cca8:	ldr	r2, [r0, #4]
   1ccac:	cmp	r2, #0
   1ccb0:	bne	1cd9c <_obstack_memory_used@@Base+0x2480>
   1ccb4:	str	r3, [r0, #4]
   1ccb8:	mov	r2, r1
   1ccbc:	ldr	r3, [r1]
   1ccc0:	str	r3, [r0]
   1ccc4:	ldr	r3, [r2, #8]
   1ccc8:	str	r3, [r0, #8]
   1cccc:	mov	r3, r2
   1ccd0:	mov	r2, #0
   1ccd4:	str	r2, [r3, #4]
   1ccd8:	ldr	r0, [sp, #16]
   1ccdc:	bl	1b8c4 <_obstack_memory_used@@Base+0xfa8>
   1cce0:	ldr	r2, [sp, #8]
   1cce4:	ldr	r3, [r2, #16]!
   1cce8:	str	r2, [sp, #8]
   1ccec:	cmp	r3, #0
   1ccf0:	beq	1cf80 <_obstack_memory_used@@Base+0x2664>
   1ccf4:	ldr	r3, [sp, #8]
   1ccf8:	ldr	r4, [r3, #12]
   1ccfc:	cmp	r4, #0
   1cd00:	bne	1cd10 <_obstack_memory_used@@Base+0x23f4>
   1cd04:	ldr	r3, [r3, #8]
   1cd08:	cmp	r3, #0
   1cd0c:	beq	1cc68 <_obstack_memory_used@@Base+0x234c>
   1cd10:	ldr	r2, [sp, #8]
   1cd14:	ldr	r5, [r2, #8]
   1cd18:	ldr	r7, [sp, #24]
   1cd1c:	ldr	r3, [r7, #16]
   1cd20:	sub	r3, r2, r3
   1cd24:	asr	r6, r3, #4
   1cd28:	mov	r0, #28
   1cd2c:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1cd30:	subs	r1, r0, #0
   1cd34:	beq	1cd74 <_obstack_memory_used@@Base+0x2458>
   1cd38:	str	r4, [r1, #8]
   1cd3c:	str	r5, [r1]
   1cd40:	str	r6, [r1, #4]
   1cd44:	ldr	r3, [sp, #28]
   1cd48:	str	r3, [r1, #12]
   1cd4c:	str	r7, [r1, #16]
   1cd50:	cmp	r3, #0
   1cd54:	ldrne	r3, [r3, #20]
   1cd58:	addne	r3, r3, #1
   1cd5c:	moveq	r3, #0
   1cd60:	str	r3, [r1, #20]
   1cd64:	ldr	r2, [sp, #20]
   1cd68:	ldr	r3, [r2, #12]
   1cd6c:	str	r3, [r1, #24]
   1cd70:	str	r1, [r2, #12]
   1cd74:	ldr	r3, [sp, #8]
   1cd78:	ldr	r0, [r3]
   1cd7c:	bl	1ca10 <_obstack_memory_used@@Base+0x20f4>
   1cd80:	str	r0, [sp, #16]
   1cd84:	ldr	r3, [sp, #20]
   1cd88:	ldr	r2, [r3, #12]
   1cd8c:	cmp	r2, #0
   1cd90:	ldreq	r2, [sp, #44]	; 0x2c
   1cd94:	bne	1cc74 <_obstack_memory_used@@Base+0x2358>
   1cd98:	b	1cc84 <_obstack_memory_used@@Base+0x2368>
   1cd9c:	add	r3, r3, r2
   1cda0:	str	r3, [sp, #36]	; 0x24
   1cda4:	rsb	r0, r3, r3, lsl #3
   1cda8:	lsl	r0, r0, #2
   1cdac:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1cdb0:	mov	r4, r0
   1cdb4:	str	r0, [sp, #32]
   1cdb8:	ldr	r3, [sp, #20]
   1cdbc:	ldr	r0, [r3, #8]
   1cdc0:	bl	119c0 <strlen@plt>
   1cdc4:	mov	r6, r0
   1cdc8:	ldr	r3, [sp, #16]
   1cdcc:	ldr	r0, [r3, #8]
   1cdd0:	bl	119c0 <strlen@plt>
   1cdd4:	add	r0, r6, r0
   1cdd8:	add	r0, r0, #1
   1cddc:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1cde0:	mov	sl, r0
   1cde4:	cmp	r4, #0
   1cde8:	cmpne	r0, #0
   1cdec:	beq	1ceb8 <_obstack_memory_used@@Base+0x259c>
   1cdf0:	ldr	r3, [sp, #36]	; 0x24
   1cdf4:	ldr	r2, [pc, #696]	; 1d0b4 <_obstack_memory_used@@Base+0x2798>
   1cdf8:	cmp	r3, r2
   1cdfc:	bhi	1cecc <_obstack_memory_used@@Base+0x25b0>
   1ce00:	ldr	r5, [sp, #20]
   1ce04:	ldr	r2, [r5]
   1ce08:	mov	r1, r2
   1ce0c:	str	r2, [sp, #40]	; 0x28
   1ce10:	ldr	r4, [r5, #4]
   1ce14:	rsb	r7, r4, r4, lsl #3
   1ce18:	lsl	r7, r7, #2
   1ce1c:	mov	r2, r7
   1ce20:	ldr	r8, [sp, #32]
   1ce24:	mov	r0, r8
   1ce28:	bl	11984 <mempcpy@plt>
   1ce2c:	ldr	r3, [sp, #16]
   1ce30:	ldr	r1, [r3, #4]
   1ce34:	str	r1, [sp, #4]
   1ce38:	rsb	r2, r1, r1, lsl #3
   1ce3c:	lsl	r2, r2, #2
   1ce40:	ldr	r1, [r3]
   1ce44:	bl	11810 <memcpy@plt>
   1ce48:	ldr	r5, [r5, #8]
   1ce4c:	mov	r2, r6
   1ce50:	mov	r1, r5
   1ce54:	mov	r0, sl
   1ce58:	bl	11810 <memcpy@plt>
   1ce5c:	cmp	r4, #0
   1ce60:	beq	1cee0 <_obstack_memory_used@@Base+0x25c4>
   1ce64:	mov	r2, r8
   1ce68:	ldr	r3, [r2, #8]
   1ce6c:	sub	r3, r3, r5
   1ce70:	add	r3, sl, r3
   1ce74:	str	r3, [r2, #8]
   1ce78:	add	r2, r2, #28
   1ce7c:	subs	r4, r4, #1
   1ce80:	bne	1ce68 <_obstack_memory_used@@Base+0x254c>
   1ce84:	ldr	r3, [sp, #32]
   1ce88:	add	r7, r3, r7
   1ce8c:	add	r3, sl, r6
   1ce90:	str	r3, [sp, #12]
   1ce94:	ldr	r2, [sp, #16]
   1ce98:	ldr	r8, [r2, #8]
   1ce9c:	ldr	r2, [sp, #4]
   1cea0:	cmp	r2, #0
   1cea4:	beq	1cf48 <_obstack_memory_used@@Base+0x262c>
   1cea8:	add	r9, r7, #28
   1ceac:	mov	fp, r3
   1ceb0:	sub	r7, r3, #1
   1ceb4:	b	1cf30 <_obstack_memory_used@@Base+0x2614>
   1ceb8:	ldr	r3, [pc, #508]	; 1d0bc <_obstack_memory_used@@Base+0x27a0>
   1cebc:	ldr	r2, [pc, #508]	; 1d0c0 <_obstack_memory_used@@Base+0x27a4>
   1cec0:	ldr	r1, [pc, #472]	; 1d0a0 <_obstack_memory_used@@Base+0x2784>
   1cec4:	ldr	r0, [pc, #504]	; 1d0c4 <_obstack_memory_used@@Base+0x27a8>
   1cec8:	bl	11bdc <__assert_fail@plt>
   1cecc:	ldr	r3, [pc, #488]	; 1d0bc <_obstack_memory_used@@Base+0x27a0>
   1ced0:	mov	r2, #972	; 0x3cc
   1ced4:	ldr	r1, [pc, #452]	; 1d0a0 <_obstack_memory_used@@Base+0x2784>
   1ced8:	ldr	r0, [pc, #488]	; 1d0c8 <_obstack_memory_used@@Base+0x27ac>
   1cedc:	bl	11bdc <__assert_fail@plt>
   1cee0:	ldr	r7, [sp, #32]
   1cee4:	b	1ce8c <_obstack_memory_used@@Base+0x2570>
   1cee8:	ldr	r3, [sp, #12]
   1ceec:	cmp	sl, r3
   1cef0:	bcs	1d088 <_obstack_memory_used@@Base+0x276c>
   1cef4:	ldrb	r3, [sl]
   1cef8:	cmp	r3, r1
   1cefc:	beq	1d090 <_obstack_memory_used@@Base+0x2774>
   1cf00:	mov	r3, sl
   1cf04:	cmp	r7, r3
   1cf08:	beq	1d088 <_obstack_memory_used@@Base+0x276c>
   1cf0c:	ldrb	r2, [r3, #1]!
   1cf10:	cmp	r2, r1
   1cf14:	bne	1cf04 <_obstack_memory_used@@Base+0x25e8>
   1cf18:	b	1d090 <_obstack_memory_used@@Base+0x2774>
   1cf1c:	add	r9, r9, #28
   1cf20:	ldr	r3, [sp, #4]
   1cf24:	subs	r3, r3, #1
   1cf28:	str	r3, [sp, #4]
   1cf2c:	beq	1cf4c <_obstack_memory_used@@Base+0x2630>
   1cf30:	str	fp, [r9, #-20]	; 0xffffffec
   1cf34:	ldr	r5, [r9, #-24]	; 0xffffffe8
   1cf38:	ldr	r4, [r9, #-28]	; 0xffffffe4
   1cf3c:	cmp	r5, #0
   1cf40:	bne	1d050 <_obstack_memory_used@@Base+0x2734>
   1cf44:	b	1cf1c <_obstack_memory_used@@Base+0x2600>
   1cf48:	ldr	fp, [sp, #12]
   1cf4c:	mov	r3, #0
   1cf50:	strb	r3, [fp]
   1cf54:	ldr	r0, [sp, #40]	; 0x28
   1cf58:	bl	1a49c <argp_parse@@Base+0xbf4>
   1cf5c:	ldr	r4, [sp, #20]
   1cf60:	ldr	r0, [r4, #8]
   1cf64:	bl	1a49c <argp_parse@@Base+0xbf4>
   1cf68:	ldr	r2, [sp, #32]
   1cf6c:	str	r2, [r4]
   1cf70:	ldr	r2, [sp, #36]	; 0x24
   1cf74:	str	r2, [r4, #4]
   1cf78:	str	sl, [r4, #8]
   1cf7c:	b	1ccd8 <_obstack_memory_used@@Base+0x23bc>
   1cf80:	ldr	fp, [sp, #20]
   1cf84:	mov	r0, fp
   1cf88:	add	sp, sp, #52	; 0x34
   1cf8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cf90:	strb	r4, [r7]
   1cf94:	add	r7, r7, #1
   1cf98:	add	r5, r5, #24
   1cf9c:	ldr	r3, [r5, #4]
   1cfa0:	cmp	r3, #0
   1cfa4:	bne	1cfb4 <_obstack_memory_used@@Base+0x2698>
   1cfa8:	ldr	r3, [r5]
   1cfac:	cmp	r3, #0
   1cfb0:	beq	1cba4 <_obstack_memory_used@@Base+0x2288>
   1cfb4:	ldr	r3, [r5, #12]
   1cfb8:	tst	r3, #4
   1cfbc:	beq	1cbbc <_obstack_memory_used@@Base+0x22a0>
   1cfc0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1cfc4:	add	r3, r3, #1
   1cfc8:	str	r3, [r6, #-24]	; 0xffffffe8
   1cfcc:	ldr	r3, [r5, #12]
   1cfd0:	tst	r3, #8
   1cfd4:	bne	1cf98 <_obstack_memory_used@@Base+0x267c>
   1cfd8:	ldr	r4, [r5, #4]
   1cfdc:	sub	r3, r4, #1
   1cfe0:	cmp	r3, #254	; 0xfe
   1cfe4:	bhi	1cf98 <_obstack_memory_used@@Base+0x267c>
   1cfe8:	bl	11990 <__ctype_b_loc@plt>
   1cfec:	ldr	r2, [r0]
   1cff0:	lsl	r3, r4, #1
   1cff4:	ldrh	r3, [r2, r3]
   1cff8:	tst	r3, #16384	; 0x4000
   1cffc:	beq	1cf98 <_obstack_memory_used@@Base+0x267c>
   1d000:	uxtb	r4, r4
   1d004:	ldr	r3, [fp, #8]
   1d008:	cmp	r3, r7
   1d00c:	bcs	1cf90 <_obstack_memory_used@@Base+0x2674>
   1d010:	ldrb	r2, [r3]
   1d014:	cmp	r2, r4
   1d018:	beq	1cf98 <_obstack_memory_used@@Base+0x267c>
   1d01c:	sub	r1, r7, #1
   1d020:	cmp	r3, r1
   1d024:	beq	1cf90 <_obstack_memory_used@@Base+0x2674>
   1d028:	ldrb	r2, [r3, #1]!
   1d02c:	cmp	r2, r4
   1d030:	bne	1d020 <_obstack_memory_used@@Base+0x2704>
   1d034:	b	1cf98 <_obstack_memory_used@@Base+0x267c>
   1d038:	ldrb	r1, [r8]
   1d03c:	cmp	r1, r6
   1d040:	beq	1cee8 <_obstack_memory_used@@Base+0x25cc>
   1d044:	add	r4, r4, #24
   1d048:	subs	r5, r5, #1
   1d04c:	beq	1cf1c <_obstack_memory_used@@Base+0x2600>
   1d050:	ldr	r3, [r4, #12]
   1d054:	tst	r3, #8
   1d058:	bne	1d044 <_obstack_memory_used@@Base+0x2728>
   1d05c:	ldr	r6, [r4, #4]
   1d060:	sub	r3, r6, #1
   1d064:	cmp	r3, #254	; 0xfe
   1d068:	bhi	1d044 <_obstack_memory_used@@Base+0x2728>
   1d06c:	bl	11990 <__ctype_b_loc@plt>
   1d070:	ldr	r2, [r0]
   1d074:	lsl	r3, r6, #1
   1d078:	ldrh	r3, [r2, r3]
   1d07c:	tst	r3, #16384	; 0x4000
   1d080:	bne	1d038 <_obstack_memory_used@@Base+0x271c>
   1d084:	b	1d044 <_obstack_memory_used@@Base+0x2728>
   1d088:	strb	r1, [fp]
   1d08c:	add	fp, fp, #1
   1d090:	add	r8, r8, #1
   1d094:	b	1d044 <_obstack_memory_used@@Base+0x2728>
   1d098:	muleq	r2, r8, r1
   1d09c:	andeq	r0, r0, r2, asr #3
   1d0a0:	andeq	r1, r2, r8, lsl #5
   1d0a4:	muleq	r2, r4, r2
   1d0a8:	muleq	r2, r8, r2
   1d0ac:	ldrdeq	r0, [r0], -sl
   1d0b0:	andeq	r1, r2, r8, lsr #5
   1d0b4:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1d0b8:	andeq	r1, r2, ip, asr #5
   1d0bc:	andeq	r1, r2, r4, lsr #3
   1d0c0:	andeq	r0, r0, sl, asr #7
   1d0c4:	andeq	r1, r2, r8, lsl #6
   1d0c8:	andeq	r1, r2, r4, lsr #6

0001d0cc <argp_failure@@Base>:
   1d0cc:	push	{r3}		; (str r3, [sp, #-4]!)
   1d0d0:	push	{r4, r5, r6, r7, lr}
   1d0d4:	sub	sp, sp, #200	; 0xc8
   1d0d8:	mov	r7, r1
   1d0dc:	mov	r6, r2
   1d0e0:	subs	r5, r0, #0
   1d0e4:	beq	1d234 <argp_failure@@Base+0x168>
   1d0e8:	ldr	r3, [r5, #16]
   1d0ec:	tst	r3, #2
   1d0f0:	bne	1d224 <argp_failure@@Base+0x158>
   1d0f4:	ldr	r4, [r5, #44]	; 0x2c
   1d0f8:	cmp	r4, #0
   1d0fc:	beq	1d224 <argp_failure@@Base+0x158>
   1d100:	mov	r0, r4
   1d104:	bl	11b1c <flockfile@plt>
   1d108:	ldr	r0, [r5, #40]	; 0x28
   1d10c:	mov	r1, r4
   1d110:	bl	11774 <fputs_unlocked@plt>
   1d114:	ldr	r3, [sp, #220]	; 0xdc
   1d118:	cmp	r3, #0
   1d11c:	beq	1d178 <argp_failure@@Base+0xac>
   1d120:	add	r3, sp, #224	; 0xe0
   1d124:	str	r3, [sp]
   1d128:	ldr	r3, [r4, #20]
   1d12c:	ldr	r2, [r4, #24]
   1d130:	cmp	r3, r2
   1d134:	addcc	r2, r3, #1
   1d138:	strcc	r2, [r4, #20]
   1d13c:	movcc	r2, #58	; 0x3a
   1d140:	strbcc	r2, [r3]
   1d144:	bcs	1d258 <argp_failure@@Base+0x18c>
   1d148:	ldr	r3, [r4, #20]
   1d14c:	ldr	r2, [r4, #24]
   1d150:	cmp	r3, r2
   1d154:	addcc	r2, r3, #1
   1d158:	strcc	r2, [r4, #20]
   1d15c:	movcc	r2, #32
   1d160:	strbcc	r2, [r3]
   1d164:	bcs	1d268 <argp_failure@@Base+0x19c>
   1d168:	ldr	r2, [sp]
   1d16c:	ldr	r1, [sp, #220]	; 0xdc
   1d170:	mov	r0, r4
   1d174:	bl	11ad4 <vfprintf@plt>
   1d178:	cmp	r6, #0
   1d17c:	beq	1d1e0 <argp_failure@@Base+0x114>
   1d180:	ldr	r3, [r4, #20]
   1d184:	ldr	r2, [r4, #24]
   1d188:	cmp	r3, r2
   1d18c:	addcc	r2, r3, #1
   1d190:	strcc	r2, [r4, #20]
   1d194:	movcc	r2, #58	; 0x3a
   1d198:	strbcc	r2, [r3]
   1d19c:	bcs	1d278 <argp_failure@@Base+0x1ac>
   1d1a0:	ldr	r3, [r4, #20]
   1d1a4:	ldr	r2, [r4, #24]
   1d1a8:	cmp	r3, r2
   1d1ac:	addcc	r2, r3, #1
   1d1b0:	strcc	r2, [r4, #20]
   1d1b4:	movcc	r2, #32
   1d1b8:	strbcc	r2, [r3]
   1d1bc:	bcs	1d288 <argp_failure@@Base+0x1bc>
   1d1c0:	mov	r2, #200	; 0xc8
   1d1c4:	mov	r1, sp
   1d1c8:	mov	r0, r6
   1d1cc:	bl	11a2c <strerror_r@plt>
   1d1d0:	cmp	r0, #0
   1d1d4:	beq	1d298 <argp_failure@@Base+0x1cc>
   1d1d8:	mov	r1, r4
   1d1dc:	bl	11774 <fputs_unlocked@plt>
   1d1e0:	ldr	r3, [r4, #20]
   1d1e4:	ldr	r2, [r4, #24]
   1d1e8:	cmp	r3, r2
   1d1ec:	addcc	r2, r3, #1
   1d1f0:	strcc	r2, [r4, #20]
   1d1f4:	movcc	r2, #10
   1d1f8:	strbcc	r2, [r3]
   1d1fc:	bcs	1d2b0 <argp_failure@@Base+0x1e4>
   1d200:	mov	r0, r4
   1d204:	bl	118a0 <funlockfile@plt>
   1d208:	cmp	r7, #0
   1d20c:	beq	1d224 <argp_failure@@Base+0x158>
   1d210:	cmp	r5, #0
   1d214:	beq	1d2c0 <argp_failure@@Base+0x1f4>
   1d218:	ldr	r3, [r5, #16]
   1d21c:	tst	r3, #32
   1d220:	beq	1d2c0 <argp_failure@@Base+0x1f4>
   1d224:	add	sp, sp, #200	; 0xc8
   1d228:	pop	{r4, r5, r6, r7, lr}
   1d22c:	add	sp, sp, #4
   1d230:	bx	lr
   1d234:	ldr	r3, [pc, #140]	; 1d2c8 <argp_failure@@Base+0x1fc>
   1d238:	ldr	r4, [r3]
   1d23c:	cmp	r4, #0
   1d240:	beq	1d224 <argp_failure@@Base+0x158>
   1d244:	mov	r0, r4
   1d248:	bl	11b1c <flockfile@plt>
   1d24c:	ldr	r3, [pc, #120]	; 1d2cc <argp_failure@@Base+0x200>
   1d250:	ldr	r0, [r3]
   1d254:	b	1d10c <argp_failure@@Base+0x40>
   1d258:	mov	r1, #58	; 0x3a
   1d25c:	mov	r0, r4
   1d260:	bl	11aa4 <__overflow@plt>
   1d264:	b	1d148 <argp_failure@@Base+0x7c>
   1d268:	mov	r1, #32
   1d26c:	mov	r0, r4
   1d270:	bl	11aa4 <__overflow@plt>
   1d274:	b	1d168 <argp_failure@@Base+0x9c>
   1d278:	mov	r1, #58	; 0x3a
   1d27c:	mov	r0, r4
   1d280:	bl	11aa4 <__overflow@plt>
   1d284:	b	1d1a0 <argp_failure@@Base+0xd4>
   1d288:	mov	r1, #32
   1d28c:	mov	r0, r4
   1d290:	bl	11aa4 <__overflow@plt>
   1d294:	b	1d1c0 <argp_failure@@Base+0xf4>
   1d298:	mov	r0, r6
   1d29c:	bl	11948 <strerror@plt>
   1d2a0:	ldr	r3, [pc, #40]	; 1d2d0 <argp_failure@@Base+0x204>
   1d2a4:	cmp	r0, #0
   1d2a8:	moveq	r0, r3
   1d2ac:	b	1d1d8 <argp_failure@@Base+0x10c>
   1d2b0:	mov	r1, #10
   1d2b4:	mov	r0, r4
   1d2b8:	bl	11aa4 <__overflow@plt>
   1d2bc:	b	1d200 <argp_failure@@Base+0x134>
   1d2c0:	mov	r0, r7
   1d2c4:	bl	119a8 <exit@plt>
   1d2c8:	andeq	r2, r3, r0, lsl r5
   1d2cc:	andeq	r2, r3, r0, lsl #10
   1d2d0:	andeq	r1, r2, r8, asr r3
   1d2d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2d8:	add	fp, sp, #32
   1d2dc:	sub	sp, sp, #108	; 0x6c
   1d2e0:	str	r0, [fp, #-112]	; 0xffffff90
   1d2e4:	str	r1, [fp, #-100]	; 0xffffff9c
   1d2e8:	str	r3, [fp, #-104]	; 0xffffff98
   1d2ec:	subs	r3, r2, #0
   1d2f0:	str	r3, [fp, #-132]	; 0xffffff7c
   1d2f4:	beq	1e360 <argp_failure@@Base+0x1294>
   1d2f8:	mov	r0, r3
   1d2fc:	bl	11b1c <flockfile@plt>
   1d300:	ldr	r3, [pc, #3772]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1d304:	ldr	r3, [r3, #36]	; 0x24
   1d308:	str	r3, [fp, #-108]	; 0xffffff94
   1d30c:	cmp	r3, #0
   1d310:	beq	1d3e8 <argp_failure@@Base+0x31c>
   1d314:	mov	r3, #0
   1d318:	ldr	r2, [pc, #3748]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1d31c:	ldr	r2, [r2, #32]
   1d320:	mov	r1, r3
   1d324:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1d328:	bl	1f2a8 <argp_error@@Base+0xd60>
   1d32c:	subs	sl, r0, #0
   1d330:	beq	1d794 <argp_failure@@Base+0x6c8>
   1d334:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d338:	tst	r3, #11
   1d33c:	moveq	r3, #0
   1d340:	streq	r3, [fp, #-108]	; 0xffffff94
   1d344:	bne	1d7a0 <argp_failure@@Base+0x6d4>
   1d348:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d34c:	tst	r3, #3
   1d350:	moveq	r4, #0
   1d354:	bne	1d824 <argp_failure@@Base+0x758>
   1d358:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d35c:	tst	r3, #16
   1d360:	bne	1da20 <argp_failure@@Base+0x954>
   1d364:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d368:	tst	r3, #4
   1d36c:	bne	1da48 <argp_failure@@Base+0x97c>
   1d370:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d374:	tst	r3, #8
   1d378:	beq	1e2d4 <argp_failure@@Base+0x1208>
   1d37c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d380:	ldr	r3, [r3, #4]
   1d384:	cmp	r3, #0
   1d388:	beq	1e2d4 <argp_failure@@Base+0x1208>
   1d38c:	cmp	r4, #0
   1d390:	beq	1d3b8 <argp_failure@@Base+0x2ec>
   1d394:	ldr	r2, [sl, #28]
   1d398:	ldr	r3, [sl, #32]
   1d39c:	cmp	r2, r3
   1d3a0:	bcs	1da64 <argp_failure@@Base+0x998>
   1d3a4:	ldr	r3, [sl, #28]
   1d3a8:	add	r2, r3, #1
   1d3ac:	str	r2, [sl, #28]
   1d3b0:	mov	r2, #10
   1d3b4:	strb	r2, [r3]
   1d3b8:	mov	r3, #0
   1d3bc:	str	r3, [fp, #-88]	; 0xffffffa8
   1d3c0:	str	r3, [fp, #-84]	; 0xffffffac
   1d3c4:	str	r3, [fp, #-80]	; 0xffffffb0
   1d3c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d3cc:	ldr	r2, [r3]
   1d3d0:	str	r2, [fp, #-96]	; 0xffffffa0
   1d3d4:	ldr	r3, [r3, #4]
   1d3d8:	str	r3, [fp, #-120]	; 0xffffff88
   1d3dc:	cmp	r3, #0
   1d3e0:	bne	1de4c <argp_failure@@Base+0xd80>
   1d3e4:	b	1e2d0 <argp_failure@@Base+0x1204>
   1d3e8:	ldr	r0, [pc, #3452]	; 1e16c <argp_failure@@Base+0x10a0>
   1d3ec:	bl	11924 <getenv@plt>
   1d3f0:	mov	r9, r0
   1d3f4:	sub	ip, fp, #76	; 0x4c
   1d3f8:	ldr	lr, [pc, #3524]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1d3fc:	ldm	lr!, {r0, r1, r2, r3}
   1d400:	stmia	ip!, {r0, r1, r2, r3}
   1d404:	ldm	lr!, {r0, r1, r2, r3}
   1d408:	stmia	ip!, {r0, r1, r2, r3}
   1d40c:	ldm	lr, {r0, r1}
   1d410:	stm	ip, {r0, r1}
   1d414:	cmp	r9, #0
   1d418:	ldrne	sl, [pc, #3408]	; 1e170 <argp_failure@@Base+0x10a4>
   1d41c:	addne	r8, sl, #168	; 0xa8
   1d420:	bne	1d6c4 <argp_failure@@Base+0x5f8>
   1d424:	b	1d314 <argp_failure@@Base+0x248>
   1d428:	mov	r5, r3
   1d42c:	mov	r9, r5
   1d430:	mov	r3, r5
   1d434:	ldrb	r0, [r3], #1
   1d438:	lsl	r2, r0, #1
   1d43c:	ldrh	r2, [r1, r2]
   1d440:	tst	r2, #8192	; 0x2000
   1d444:	bne	1d428 <argp_failure@@Base+0x35c>
   1d448:	tst	r2, #1024	; 0x400
   1d44c:	beq	1d6bc <argp_failure@@Base+0x5f0>
   1d450:	cmp	r0, #95	; 0x5f
   1d454:	cmpne	r0, #45	; 0x2d
   1d458:	moveq	r3, #1
   1d45c:	movne	r3, #0
   1d460:	lsl	r2, r2, #28
   1d464:	orrs	r3, r3, r2, lsr #31
   1d468:	beq	1e3e4 <argp_failure@@Base+0x1318>
   1d46c:	mov	r4, r5
   1d470:	ldrb	r3, [r4, #1]!
   1d474:	lsl	r2, r3, #1
   1d478:	ldrh	r2, [r1, r2]
   1d47c:	lsl	r2, r2, #28
   1d480:	cmp	r3, #95	; 0x5f
   1d484:	cmpne	r3, #45	; 0x2d
   1d488:	moveq	r3, #1
   1d48c:	movne	r3, #0
   1d490:	orrs	r3, r3, r2, lsr #31
   1d494:	bne	1d470 <argp_failure@@Base+0x3a4>
   1d498:	sub	r5, r4, r5
   1d49c:	ldrb	r3, [r4]
   1d4a0:	lsl	r2, r3, #1
   1d4a4:	ldrh	r2, [r1, r2]
   1d4a8:	tst	r2, #8192	; 0x2000
   1d4ac:	beq	1d4c4 <argp_failure@@Base+0x3f8>
   1d4b0:	ldrb	r3, [r4, #1]!
   1d4b4:	lsl	r2, r3, #1
   1d4b8:	ldrh	r2, [r1, r2]
   1d4bc:	tst	r2, #8192	; 0x2000
   1d4c0:	bne	1d4b0 <argp_failure@@Base+0x3e4>
   1d4c4:	cmp	r3, #44	; 0x2c
   1d4c8:	cmpne	r3, #0
   1d4cc:	beq	1e3fc <argp_failure@@Base+0x1330>
   1d4d0:	cmp	r3, #61	; 0x3d
   1d4d4:	beq	1d4fc <argp_failure@@Base+0x430>
   1d4d8:	ldrb	r3, [r4]
   1d4dc:	lsl	r3, r3, #1
   1d4e0:	ldrh	r3, [r1, r3]
   1d4e4:	tst	r3, #2048	; 0x800
   1d4e8:	bne	1d57c <argp_failure@@Base+0x4b0>
   1d4ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d4f0:	str	r3, [fp, #-96]	; 0xffffffa0
   1d4f4:	str	r3, [fp, #-116]	; 0xffffff8c
   1d4f8:	b	1e410 <argp_failure@@Base+0x1344>
   1d4fc:	add	r2, r4, #1
   1d500:	ldrb	r3, [r4, #1]
   1d504:	lsl	r3, r3, #1
   1d508:	ldrh	r3, [r1, r3]
   1d50c:	tst	r3, #8192	; 0x2000
   1d510:	beq	1e3f4 <argp_failure@@Base+0x1328>
   1d514:	ldrb	r3, [r2, #1]!
   1d518:	lsl	r3, r3, #1
   1d51c:	ldrh	r3, [r1, r3]
   1d520:	tst	r3, #8192	; 0x2000
   1d524:	bne	1d514 <argp_failure@@Base+0x448>
   1d528:	mov	r4, r2
   1d52c:	b	1d4d8 <argp_failure@@Base+0x40c>
   1d530:	ldrb	r3, [r9, #1]
   1d534:	cmp	r3, #111	; 0x6f
   1d538:	movne	r3, #1
   1d53c:	strne	r3, [fp, #-96]	; 0xffffffa0
   1d540:	strne	r3, [fp, #-116]	; 0xffffff8c
   1d544:	bne	1e410 <argp_failure@@Base+0x1344>
   1d548:	ldrb	r3, [r9, #2]
   1d54c:	cmp	r3, #45	; 0x2d
   1d550:	movne	r3, #1
   1d554:	strne	r3, [fp, #-96]	; 0xffffffa0
   1d558:	strne	r3, [fp, #-116]	; 0xffffff8c
   1d55c:	bne	1e410 <argp_failure@@Base+0x1344>
   1d560:	add	r9, r9, #3
   1d564:	sub	r5, r5, #3
   1d568:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d56c:	str	r3, [fp, #-116]	; 0xffffff8c
   1d570:	mov	r3, #1
   1d574:	str	r3, [fp, #-96]	; 0xffffffa0
   1d578:	b	1e410 <argp_failure@@Base+0x1344>
   1d57c:	mov	r2, #10
   1d580:	mov	r1, #0
   1d584:	mov	r0, r4
   1d588:	bl	11798 <strtol@plt>
   1d58c:	str	r0, [fp, #-116]	; 0xffffff8c
   1d590:	ldr	r2, [r6]
   1d594:	ldrb	r3, [r4]
   1d598:	lsl	r3, r3, #1
   1d59c:	ldrh	r3, [r2, r3]
   1d5a0:	tst	r3, #2048	; 0x800
   1d5a4:	beq	1d5bc <argp_failure@@Base+0x4f0>
   1d5a8:	ldrb	r3, [r4, #1]!
   1d5ac:	lsl	r3, r3, #1
   1d5b0:	ldrh	r3, [r2, r3]
   1d5b4:	tst	r3, #2048	; 0x800
   1d5b8:	bne	1d5a8 <argp_failure@@Base+0x4dc>
   1d5bc:	ldrb	r3, [r4]
   1d5c0:	lsl	r3, r3, #1
   1d5c4:	ldrh	r3, [r2, r3]
   1d5c8:	tst	r3, #8192	; 0x2000
   1d5cc:	beq	1d5f0 <argp_failure@@Base+0x524>
   1d5d0:	ldrb	r3, [r4, #1]!
   1d5d4:	lsl	r3, r3, #1
   1d5d8:	ldrh	r3, [r2, r3]
   1d5dc:	tst	r3, #8192	; 0x2000
   1d5e0:	bne	1d5d0 <argp_failure@@Base+0x504>
   1d5e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d5e8:	str	r3, [fp, #-96]	; 0xffffffa0
   1d5ec:	b	1e410 <argp_failure@@Base+0x1344>
   1d5f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d5f4:	str	r3, [fp, #-96]	; 0xffffffa0
   1d5f8:	b	1e410 <argp_failure@@Base+0x1344>
   1d5fc:	str	r9, [sp, #4]
   1d600:	str	r7, [sp]
   1d604:	ldr	r3, [pc, #2920]	; 1e174 <argp_failure@@Base+0x10a8>
   1d608:	mov	r2, #0
   1d60c:	mov	r1, r2
   1d610:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1d614:	bl	1d0cc <argp_failure@@Base>
   1d618:	b	1d680 <argp_failure@@Base+0x5b4>
   1d61c:	add	r6, r6, #16
   1d620:	cmp	r6, r8
   1d624:	beq	1d69c <argp_failure@@Base+0x5d0>
   1d628:	mov	r0, r6
   1d62c:	bl	119c0 <strlen@plt>
   1d630:	mov	r7, r0
   1d634:	cmp	r0, r5
   1d638:	bne	1d61c <argp_failure@@Base+0x550>
   1d63c:	mov	r2, r5
   1d640:	mov	r1, r6
   1d644:	mov	r0, r9
   1d648:	bl	11ba0 <strncmp@plt>
   1d64c:	cmp	r0, #0
   1d650:	bne	1d61c <argp_failure@@Base+0x550>
   1d654:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d658:	cmp	r3, #0
   1d65c:	beq	1d66c <argp_failure@@Base+0x5a0>
   1d660:	ldrb	r3, [r6, #14]
   1d664:	cmp	r3, #0
   1d668:	beq	1d5fc <argp_failure@@Base+0x530>
   1d66c:	ldrb	r3, [r6, #15]
   1d670:	sub	r2, fp, #36	; 0x24
   1d674:	add	r3, r2, r3
   1d678:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1d67c:	str	r2, [r3, #-40]	; 0xffffffd8
   1d680:	cmp	r6, r8
   1d684:	beq	1d69c <argp_failure@@Base+0x5d0>
   1d688:	ldrb	r3, [r4]
   1d68c:	cmp	r3, #44	; 0x2c
   1d690:	addeq	r9, r4, #1
   1d694:	movne	r9, r4
   1d698:	b	1d6c4 <argp_failure@@Base+0x5f8>
   1d69c:	str	r9, [sp, #4]
   1d6a0:	str	r5, [sp]
   1d6a4:	ldr	r3, [pc, #2764]	; 1e178 <argp_failure@@Base+0x10ac>
   1d6a8:	mov	r2, #0
   1d6ac:	mov	r1, r2
   1d6b0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1d6b4:	bl	1d0cc <argp_failure@@Base>
   1d6b8:	b	1d688 <argp_failure@@Base+0x5bc>
   1d6bc:	cmp	r0, #0
   1d6c0:	bne	1d6e4 <argp_failure@@Base+0x618>
   1d6c4:	ldrb	r3, [r9]
   1d6c8:	cmp	r3, #0
   1d6cc:	beq	1d6fc <argp_failure@@Base+0x630>
   1d6d0:	bl	11990 <__ctype_b_loc@plt>
   1d6d4:	mov	r6, r0
   1d6d8:	ldr	r1, [r0]
   1d6dc:	mov	r5, r9
   1d6e0:	b	1d42c <argp_failure@@Base+0x360>
   1d6e4:	str	r5, [sp]
   1d6e8:	ldr	r3, [pc, #2700]	; 1e17c <argp_failure@@Base+0x10b0>
   1d6ec:	mov	r2, #0
   1d6f0:	mov	r1, r2
   1d6f4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1d6f8:	bl	1d0cc <argp_failure@@Base>
   1d6fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d700:	ldr	r3, [pc, #2680]	; 1e180 <argp_failure@@Base+0x10b4>
   1d704:	add	r1, r3, #144	; 0x90
   1d708:	add	r3, r3, #16
   1d70c:	cmp	r3, r1
   1d710:	beq	1d764 <argp_failure@@Base+0x698>
   1d714:	ldrb	r2, [r3, #14]
   1d718:	cmp	r2, #0
   1d71c:	bne	1d708 <argp_failure@@Base+0x63c>
   1d720:	ldrb	r2, [r3, #15]
   1d724:	cmp	r2, #32
   1d728:	beq	1d708 <argp_failure@@Base+0x63c>
   1d72c:	sub	ip, fp, #36	; 0x24
   1d730:	add	r2, ip, r2
   1d734:	ldr	r2, [r2, #-40]	; 0xffffffd8
   1d738:	cmp	r2, r0
   1d73c:	blt	1d708 <argp_failure@@Base+0x63c>
   1d740:	str	r3, [sp, #4]
   1d744:	ldr	r3, [pc, #2616]	; 1e184 <argp_failure@@Base+0x10b8>
   1d748:	str	r3, [sp]
   1d74c:	ldr	r3, [pc, #2612]	; 1e188 <argp_failure@@Base+0x10bc>
   1d750:	mov	r2, #0
   1d754:	mov	r1, r2
   1d758:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1d75c:	bl	1d0cc <argp_failure@@Base>
   1d760:	b	1d314 <argp_failure@@Base+0x248>
   1d764:	ldr	r4, [pc, #2648]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1d768:	mov	ip, r4
   1d76c:	sub	lr, fp, #76	; 0x4c
   1d770:	ldm	lr!, {r0, r1, r2, r3}
   1d774:	stmia	ip!, {r0, r1, r2, r3}
   1d778:	ldm	lr!, {r0, r1, r2, r3}
   1d77c:	stmia	ip!, {r0, r1, r2, r3}
   1d780:	ldm	lr, {r0, r1}
   1d784:	stm	ip, {r0, r1}
   1d788:	mov	r3, #1
   1d78c:	str	r3, [r4, #36]	; 0x24
   1d790:	b	1d314 <argp_failure@@Base+0x248>
   1d794:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1d798:	bl	118a0 <funlockfile@plt>
   1d79c:	b	1e360 <argp_failure@@Base+0x1294>
   1d7a0:	mov	r1, #0
   1d7a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   1d7a8:	bl	1ca10 <_obstack_memory_used@@Base+0x20f4>
   1d7ac:	str	r0, [fp, #-108]	; 0xffffff94
   1d7b0:	ldr	r1, [pc, #2516]	; 1e18c <argp_failure@@Base+0x10c0>
   1d7b4:	bl	1b918 <_obstack_memory_used@@Base+0xffc>
   1d7b8:	cmp	r0, #0
   1d7bc:	mvnne	r3, #0
   1d7c0:	strne	r3, [r0, #12]
   1d7c4:	ldr	r1, [pc, #2500]	; 1e190 <argp_failure@@Base+0x10c4>
   1d7c8:	ldr	r0, [fp, #-108]	; 0xffffff94
   1d7cc:	bl	1b918 <_obstack_memory_used@@Base+0xffc>
   1d7d0:	cmp	r0, #0
   1d7d4:	mvnne	r3, #0
   1d7d8:	strne	r3, [r0, #12]
   1d7dc:	ldr	r0, [fp, #-108]	; 0xffffff94
   1d7e0:	ldr	r3, [r0, #4]
   1d7e4:	cmp	r3, #0
   1d7e8:	beq	1d348 <argp_failure@@Base+0x27c>
   1d7ec:	ldr	r2, [r0]
   1d7f0:	mov	r3, #0
   1d7f4:	str	r3, [r2, #24]
   1d7f8:	add	r3, r3, #1
   1d7fc:	add	r2, r2, #28
   1d800:	ldr	r1, [r0, #4]
   1d804:	cmp	r3, r1
   1d808:	bcc	1d7f4 <argp_failure@@Base+0x728>
   1d80c:	ldr	r3, [pc, #2432]	; 1e194 <argp_failure@@Base+0x10c8>
   1d810:	mov	r2, #28
   1d814:	ldr	r0, [fp, #-108]	; 0xffffff94
   1d818:	ldr	r0, [r0]
   1d81c:	bl	11b40 <qsort@plt>
   1d820:	b	1d348 <argp_failure@@Base+0x27c>
   1d824:	ldr	r0, [fp, #-112]	; 0xffffff90
   1d828:	bl	1b9b0 <_obstack_memory_used@@Base+0x1094>
   1d82c:	mov	r2, r0
   1d830:	add	r3, r0, #14
   1d834:	bic	r3, r3, #7
   1d838:	sub	sp, sp, r3
   1d83c:	add	r8, sp, #8
   1d840:	mov	r1, #0
   1d844:	mov	r0, r8
   1d848:	bl	11a38 <memset@plt>
   1d84c:	mov	r5, #1
   1d850:	ldr	r4, [pc, #2412]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1d854:	ldr	r9, [pc, #2364]	; 1e198 <argp_failure@@Base+0x10cc>
   1d858:	str	r8, [fp, #-96]	; 0xffffffa0
   1d85c:	ldr	r8, [fp, #-104]	; 0xffffff98
   1d860:	b	1d910 <argp_failure@@Base+0x844>
   1d864:	mov	r0, sl
   1d868:	bl	1f320 <argp_error@@Base+0xdd8>
   1d86c:	b	1d92c <argp_failure@@Base+0x860>
   1d870:	mov	r0, sl
   1d874:	bl	1f320 <argp_error@@Base+0xdd8>
   1d878:	b	1d974 <argp_failure@@Base+0x8a8>
   1d87c:	mov	r1, sl
   1d880:	ldr	r0, [fp, #-108]	; 0xffffff94
   1d884:	bl	1b708 <_obstack_memory_used@@Base+0xdec>
   1d888:	orr	r8, r8, #2
   1d88c:	str	sl, [sp]
   1d890:	mov	r3, #1
   1d894:	sub	r2, fp, #76	; 0x4c
   1d898:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1d89c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1d8a0:	bl	1bc30 <_obstack_memory_used@@Base+0x1314>
   1d8a4:	mov	r6, r0
   1d8a8:	ldr	r3, [sl, #28]
   1d8ac:	ldr	r2, [sl, #24]
   1d8b0:	sub	r3, r3, r2
   1d8b4:	ldr	r2, [sl, #16]
   1d8b8:	cmp	r3, r2
   1d8bc:	bhi	1d9e4 <argp_failure@@Base+0x918>
   1d8c0:	str	r7, [sl, #12]
   1d8c4:	ldr	r3, [sl, #28]
   1d8c8:	ldr	r2, [sl, #24]
   1d8cc:	sub	r3, r3, r2
   1d8d0:	ldr	r2, [sl, #16]
   1d8d4:	cmp	r3, r2
   1d8d8:	bhi	1d9f0 <argp_failure@@Base+0x924>
   1d8dc:	str	r5, [sl, #4]
   1d8e0:	ldr	r2, [sl, #28]
   1d8e4:	ldr	r3, [sl, #32]
   1d8e8:	cmp	r2, r3
   1d8ec:	bcs	1d9fc <argp_failure@@Base+0x930>
   1d8f0:	ldr	r3, [sl, #28]
   1d8f4:	add	r2, r3, #1
   1d8f8:	str	r2, [sl, #28]
   1d8fc:	mov	r2, #10
   1d900:	strb	r2, [r3]
   1d904:	mov	r5, #0
   1d908:	cmp	r6, r5
   1d90c:	beq	1da14 <argp_failure@@Base+0x948>
   1d910:	ldr	r6, [r4, #28]
   1d914:	ldr	r3, [sl, #28]
   1d918:	ldr	r2, [sl, #24]
   1d91c:	sub	r3, r3, r2
   1d920:	ldr	r2, [sl, #16]
   1d924:	cmp	r3, r2
   1d928:	bhi	1d864 <argp_failure@@Base+0x798>
   1d92c:	ldr	r7, [sl, #12]
   1d930:	str	r6, [sl, #12]
   1d934:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d938:	str	r3, [fp, #-76]	; 0xffffffb4
   1d93c:	cmp	r5, #0
   1d940:	ldr	r3, [fp, #4]
   1d944:	ldrne	r2, [pc, #2128]	; 1e19c <argp_failure@@Base+0x10d0>
   1d948:	ldreq	r2, [pc, #2128]	; 1e1a0 <argp_failure@@Base+0x10d4>
   1d94c:	mov	r1, r9
   1d950:	mov	r0, sl
   1d954:	bl	1f9b4 <argp_error@@Base+0x146c>
   1d958:	ldr	r6, [r4, #28]
   1d95c:	ldr	r3, [sl, #28]
   1d960:	ldr	r2, [sl, #24]
   1d964:	sub	r3, r3, r2
   1d968:	ldr	r2, [sl, #16]
   1d96c:	cmp	r3, r2
   1d970:	bhi	1d870 <argp_failure@@Base+0x7a4>
   1d974:	ldr	r5, [sl, #4]
   1d978:	str	r6, [sl, #4]
   1d97c:	tst	r8, #2
   1d980:	beq	1d87c <argp_failure@@Base+0x7b0>
   1d984:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d988:	ldr	r3, [r3, #4]
   1d98c:	cmp	r3, #0
   1d990:	beq	1d88c <argp_failure@@Base+0x7c0>
   1d994:	ldr	r3, [sl, #28]
   1d998:	add	r3, r3, #12
   1d99c:	ldr	r2, [sl, #32]
   1d9a0:	cmp	r2, r3
   1d9a4:	bcs	1d9bc <argp_failure@@Base+0x8f0>
   1d9a8:	mov	r1, #12
   1d9ac:	mov	r0, sl
   1d9b0:	bl	1f8c4 <argp_error@@Base+0x137c>
   1d9b4:	cmp	r0, #0
   1d9b8:	beq	1d88c <argp_failure@@Base+0x7c0>
   1d9bc:	ldr	ip, [sl, #28]
   1d9c0:	ldr	r3, [pc, #2012]	; 1e1a4 <argp_failure@@Base+0x10d8>
   1d9c4:	ldm	r3!, {r0, r1, r2}
   1d9c8:	str	r0, [ip]
   1d9cc:	str	r1, [ip, #4]
   1d9d0:	str	r2, [ip, #8]
   1d9d4:	ldr	r3, [sl, #28]
   1d9d8:	add	r3, r3, #12
   1d9dc:	str	r3, [sl, #28]
   1d9e0:	b	1d88c <argp_failure@@Base+0x7c0>
   1d9e4:	mov	r0, sl
   1d9e8:	bl	1f320 <argp_error@@Base+0xdd8>
   1d9ec:	b	1d8c0 <argp_failure@@Base+0x7f4>
   1d9f0:	mov	r0, sl
   1d9f4:	bl	1f320 <argp_error@@Base+0xdd8>
   1d9f8:	b	1d8dc <argp_failure@@Base+0x810>
   1d9fc:	mov	r1, #1
   1da00:	mov	r0, sl
   1da04:	bl	1f8c4 <argp_error@@Base+0x137c>
   1da08:	cmp	r0, #0
   1da0c:	beq	1d904 <argp_failure@@Base+0x838>
   1da10:	b	1d8f0 <argp_failure@@Base+0x824>
   1da14:	str	r8, [fp, #-104]	; 0xffffff98
   1da18:	mov	r4, #1
   1da1c:	b	1d358 <argp_failure@@Base+0x28c>
   1da20:	str	sl, [sp, #4]
   1da24:	mov	r3, #1
   1da28:	str	r3, [sp]
   1da2c:	mov	r3, #0
   1da30:	mov	r2, r3
   1da34:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1da38:	ldr	r0, [fp, #-112]	; 0xffffff90
   1da3c:	bl	1c188 <_obstack_memory_used@@Base+0x186c>
   1da40:	orr	r4, r4, r0
   1da44:	b	1d364 <argp_failure@@Base+0x298>
   1da48:	ldr	r3, [fp, #4]
   1da4c:	mov	r2, r3
   1da50:	ldr	r1, [pc, #1872]	; 1e1a8 <argp_failure@@Base+0x10dc>
   1da54:	mov	r0, sl
   1da58:	bl	1f9b4 <argp_error@@Base+0x146c>
   1da5c:	mov	r4, #1
   1da60:	b	1d370 <argp_failure@@Base+0x2a4>
   1da64:	mov	r1, #1
   1da68:	mov	r0, sl
   1da6c:	bl	1f8c4 <argp_error@@Base+0x137c>
   1da70:	cmp	r0, #0
   1da74:	beq	1d3b8 <argp_failure@@Base+0x2ec>
   1da78:	b	1d3a4 <argp_failure@@Base+0x2d8>
   1da7c:	mov	r0, sl
   1da80:	bl	1f320 <argp_error@@Base+0xdd8>
   1da84:	b	1de70 <argp_failure@@Base+0xda4>
   1da88:	add	r3, r3, #24
   1da8c:	subs	r2, r2, #1
   1da90:	beq	1dab4 <argp_failure@@Base+0x9e8>
   1da94:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1da98:	cmp	r1, #0
   1da9c:	beq	1da88 <argp_failure@@Base+0x9bc>
   1daa0:	ldr	r1, [r3, #-12]
   1daa4:	tst	r1, #2
   1daa8:	bne	1da88 <argp_failure@@Base+0x9bc>
   1daac:	mov	r3, #1
   1dab0:	str	r3, [fp, #-116]	; 0xffffff8c
   1dab4:	ldr	r3, [pc, #1800]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1dab8:	ldr	r4, [r3, #8]
   1dabc:	ldr	r3, [sl, #28]
   1dac0:	ldr	r2, [sl, #24]
   1dac4:	sub	r3, r3, r2
   1dac8:	ldr	r2, [sl, #16]
   1dacc:	cmp	r3, r2
   1dad0:	bhi	1daf0 <argp_failure@@Base+0xa24>
   1dad4:	str	r4, [sl, #12]
   1dad8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1dadc:	ldr	r5, [r3, #4]
   1dae0:	cmp	r5, #0
   1dae4:	beq	1dbec <argp_failure@@Base+0xb20>
   1dae8:	mov	r4, r8
   1daec:	b	1e430 <argp_failure@@Base+0x1364>
   1daf0:	mov	r0, sl
   1daf4:	bl	1f320 <argp_error@@Base+0xdd8>
   1daf8:	b	1dad4 <argp_failure@@Base+0xa08>
   1dafc:	tst	r6, #2
   1db00:	beq	1db0c <argp_failure@@Base+0xa40>
   1db04:	add	r9, r9, #1
   1db08:	b	1e424 <argp_failure@@Base+0x1358>
   1db0c:	sub	r1, fp, #76	; 0x4c
   1db10:	ldr	r3, [pc, #1708]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1db14:	ldr	r0, [r3, #8]
   1db18:	bl	1c004 <_obstack_memory_used@@Base+0x16e8>
   1db1c:	ldr	r2, [sl, #28]
   1db20:	ldr	r3, [sl, #32]
   1db24:	cmp	r2, r3
   1db28:	bcs	1dba8 <argp_failure@@Base+0xadc>
   1db2c:	ldr	r3, [sl, #28]
   1db30:	add	r2, r3, #1
   1db34:	str	r2, [sl, #28]
   1db38:	mov	r2, #45	; 0x2d
   1db3c:	strb	r2, [r3]
   1db40:	ldrb	r6, [r9]
   1db44:	ldr	r2, [sl, #28]
   1db48:	ldr	r3, [sl, #32]
   1db4c:	cmp	r2, r3
   1db50:	bcs	1dbc0 <argp_failure@@Base+0xaf4>
   1db54:	ldr	r3, [sl, #28]
   1db58:	add	r2, r3, #1
   1db5c:	str	r2, [sl, #28]
   1db60:	strb	r6, [r3]
   1db64:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1db68:	cmp	r3, #0
   1db6c:	beq	1db80 <argp_failure@@Base+0xab4>
   1db70:	ldr	r3, [pc, #1612]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1db74:	ldr	r3, [r3]
   1db78:	cmp	r3, #0
   1db7c:	beq	1dbd8 <argp_failure@@Base+0xb0c>
   1db80:	ldr	r2, [r8, #8]
   1db84:	cmp	r2, #0
   1db88:	beq	1db04 <argp_failure@@Base+0xa38>
   1db8c:	ldr	r3, [r8, #12]
   1db90:	tst	r3, #1
   1db94:	ldrne	r1, [pc, #1552]	; 1e1ac <argp_failure@@Base+0x10e0>
   1db98:	ldreq	r1, [pc, #1552]	; 1e1b0 <argp_failure@@Base+0x10e4>
   1db9c:	mov	r0, sl
   1dba0:	bl	1f9b4 <argp_error@@Base+0x146c>
   1dba4:	b	1db04 <argp_failure@@Base+0xa38>
   1dba8:	mov	r1, #1
   1dbac:	mov	r0, sl
   1dbb0:	bl	1f8c4 <argp_error@@Base+0x137c>
   1dbb4:	cmp	r0, #0
   1dbb8:	beq	1db40 <argp_failure@@Base+0xa74>
   1dbbc:	b	1db2c <argp_failure@@Base+0xa60>
   1dbc0:	mov	r1, #1
   1dbc4:	mov	r0, sl
   1dbc8:	bl	1f8c4 <argp_error@@Base+0x137c>
   1dbcc:	cmp	r0, #0
   1dbd0:	beq	1db64 <argp_failure@@Base+0xa98>
   1dbd4:	b	1db54 <argp_failure@@Base+0xa88>
   1dbd8:	ldr	r3, [r8, #8]
   1dbdc:	cmp	r3, #0
   1dbe0:	movne	r3, #1
   1dbe4:	strne	r3, [fp, #-80]	; 0xffffffb0
   1dbe8:	b	1db04 <argp_failure@@Base+0xa38>
   1dbec:	ldr	r3, [r8, #12]
   1dbf0:	tst	r3, #8
   1dbf4:	beq	1dcd0 <argp_failure@@Base+0xc04>
   1dbf8:	ldr	r3, [pc, #1476]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1dbfc:	ldr	r4, [r3, #16]
   1dc00:	ldr	r3, [sl, #28]
   1dc04:	ldr	r2, [sl, #24]
   1dc08:	sub	r3, r3, r2
   1dc0c:	ldr	r2, [sl, #16]
   1dc10:	cmp	r3, r2
   1dc14:	bhi	1dc34 <argp_failure@@Base+0xb68>
   1dc18:	str	r4, [sl, #12]
   1dc1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1dc20:	ldr	r5, [r3, #4]
   1dc24:	cmp	r5, #0
   1dc28:	beq	1dd84 <argp_failure@@Base+0xcb8>
   1dc2c:	add	r4, r8, #24
   1dc30:	b	1dc68 <argp_failure@@Base+0xb9c>
   1dc34:	mov	r0, sl
   1dc38:	bl	1f320 <argp_error@@Base+0xdd8>
   1dc3c:	b	1dc18 <argp_failure@@Base+0xb4c>
   1dc40:	mov	r2, r6
   1dc44:	mov	r1, r7
   1dc48:	ldr	r0, [sl, #28]
   1dc4c:	bl	11810 <memcpy@plt>
   1dc50:	ldr	r3, [sl, #28]
   1dc54:	add	r6, r3, r6
   1dc58:	str	r6, [sl, #28]
   1dc5c:	add	r4, r4, #24
   1dc60:	subs	r5, r5, #1
   1dc64:	beq	1dd84 <argp_failure@@Base+0xcb8>
   1dc68:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1dc6c:	cmp	r3, #0
   1dc70:	beq	1dc5c <argp_failure@@Base+0xb90>
   1dc74:	ldr	r3, [r4, #-12]
   1dc78:	tst	r3, #2
   1dc7c:	bne	1dc5c <argp_failure@@Base+0xb90>
   1dc80:	sub	r1, fp, #76	; 0x4c
   1dc84:	ldr	r3, [pc, #1336]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1dc88:	ldr	r0, [r3, #16]
   1dc8c:	bl	1c004 <_obstack_memory_used@@Base+0x16e8>
   1dc90:	ldr	r7, [r4, #-24]	; 0xffffffe8
   1dc94:	mov	r0, r7
   1dc98:	bl	119c0 <strlen@plt>
   1dc9c:	subs	r6, r0, #0
   1dca0:	beq	1dc5c <argp_failure@@Base+0xb90>
   1dca4:	ldr	r3, [sl, #28]
   1dca8:	add	r3, r3, r6
   1dcac:	ldr	r2, [sl, #32]
   1dcb0:	cmp	r2, r3
   1dcb4:	bcs	1dc40 <argp_failure@@Base+0xb74>
   1dcb8:	mov	r1, r6
   1dcbc:	mov	r0, sl
   1dcc0:	bl	1f8c4 <argp_error@@Base+0x137c>
   1dcc4:	cmp	r0, #0
   1dcc8:	beq	1dc5c <argp_failure@@Base+0xb90>
   1dccc:	b	1dc40 <argp_failure@@Base+0xb74>
   1dcd0:	ldr	r3, [pc, #1260]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1dcd4:	ldr	r4, [r3, #12]
   1dcd8:	ldr	r3, [sl, #28]
   1dcdc:	ldr	r2, [sl, #24]
   1dce0:	sub	r3, r3, r2
   1dce4:	ldr	r2, [sl, #16]
   1dce8:	cmp	r3, r2
   1dcec:	bhi	1dd0c <argp_failure@@Base+0xc40>
   1dcf0:	str	r4, [sl, #12]
   1dcf4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1dcf8:	ldr	r5, [r3, #4]
   1dcfc:	cmp	r5, #0
   1dd00:	beq	1dd84 <argp_failure@@Base+0xcb8>
   1dd04:	add	r4, r8, #24
   1dd08:	b	1dd24 <argp_failure@@Base+0xc58>
   1dd0c:	mov	r0, sl
   1dd10:	bl	1f320 <argp_error@@Base+0xdd8>
   1dd14:	b	1dcf0 <argp_failure@@Base+0xc24>
   1dd18:	add	r4, r4, #24
   1dd1c:	subs	r5, r5, #1
   1dd20:	beq	1dd84 <argp_failure@@Base+0xcb8>
   1dd24:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1dd28:	cmp	r3, #0
   1dd2c:	beq	1dd18 <argp_failure@@Base+0xc4c>
   1dd30:	ldr	r3, [r4, #-12]
   1dd34:	tst	r3, #2
   1dd38:	bne	1dd18 <argp_failure@@Base+0xc4c>
   1dd3c:	sub	r1, fp, #76	; 0x4c
   1dd40:	ldr	r3, [pc, #1148]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1dd44:	ldr	r0, [r3, #12]
   1dd48:	bl	1c004 <_obstack_memory_used@@Base+0x16e8>
   1dd4c:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1dd50:	ldr	r1, [pc, #1116]	; 1e1b4 <argp_failure@@Base+0x10e8>
   1dd54:	mov	r0, sl
   1dd58:	bl	1f9b4 <argp_error@@Base+0x146c>
   1dd5c:	ldr	r2, [r8, #8]
   1dd60:	cmp	r2, #0
   1dd64:	beq	1dd18 <argp_failure@@Base+0xc4c>
   1dd68:	ldr	r3, [r8, #12]
   1dd6c:	tst	r3, #1
   1dd70:	ldrne	r1, [pc, #1088]	; 1e1b8 <argp_failure@@Base+0x10ec>
   1dd74:	ldreq	r1, [pc, #1088]	; 1e1bc <argp_failure@@Base+0x10f0>
   1dd78:	mov	r0, sl
   1dd7c:	bl	1f9b4 <argp_error@@Base+0x146c>
   1dd80:	b	1dd18 <argp_failure@@Base+0xc4c>
   1dd84:	ldr	r3, [sl, #28]
   1dd88:	ldr	r2, [sl, #24]
   1dd8c:	sub	r3, r3, r2
   1dd90:	ldr	r2, [sl, #16]
   1dd94:	cmp	r3, r2
   1dd98:	bhi	1ded8 <argp_failure@@Base+0xe0c>
   1dd9c:	mov	r3, #0
   1dda0:	str	r3, [sl, #4]
   1dda4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1dda8:	cmp	r3, #0
   1ddac:	beq	1defc <argp_failure@@Base+0xe30>
   1ddb0:	ldr	r3, [r8, #12]
   1ddb4:	tst	r3, #8
   1ddb8:	bne	1dde4 <argp_failure@@Base+0xd18>
   1ddbc:	ldr	r4, [r8, #4]
   1ddc0:	sub	r3, r4, #1
   1ddc4:	cmp	r3, #254	; 0xfe
   1ddc8:	bhi	1dde4 <argp_failure@@Base+0xd18>
   1ddcc:	bl	11990 <__ctype_b_loc@plt>
   1ddd0:	ldr	r3, [r0]
   1ddd4:	lsl	r4, r4, #1
   1ddd8:	ldrh	r3, [r3, r4]
   1dddc:	tst	r3, #16384	; 0x4000
   1dde0:	bne	1ddf0 <argp_failure@@Base+0xd24>
   1dde4:	ldr	r3, [r8]
   1dde8:	cmp	r3, #0
   1ddec:	beq	1dee4 <argp_failure@@Base+0xe18>
   1ddf0:	ldr	r3, [sl, #28]
   1ddf4:	ldr	r2, [sl, #24]
   1ddf8:	sub	r3, r3, r2
   1ddfc:	ldr	r2, [sl, #16]
   1de00:	cmp	r3, r2
   1de04:	bhi	1e154 <argp_failure@@Base+0x1088>
   1de08:	ldr	r3, [fp, #-124]	; 0xffffff84
   1de0c:	str	r3, [sl, #4]
   1de10:	ldr	r3, [sl, #28]
   1de14:	ldr	r2, [sl, #24]
   1de18:	sub	r3, r3, r2
   1de1c:	ldr	r2, [sl, #16]
   1de20:	cmp	r3, r2
   1de24:	bhi	1e160 <argp_failure@@Base+0x1094>
   1de28:	ldr	r3, [fp, #-128]	; 0xffffff80
   1de2c:	str	r3, [sl, #12]
   1de30:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1de34:	add	r3, r3, #28
   1de38:	str	r3, [fp, #-96]	; 0xffffffa0
   1de3c:	ldr	r3, [fp, #-120]	; 0xffffff88
   1de40:	subs	r3, r3, #1
   1de44:	str	r3, [fp, #-120]	; 0xffffff88
   1de48:	beq	1e1d8 <argp_failure@@Base+0x110c>
   1de4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1de50:	ldr	r8, [r3]
   1de54:	ldr	r9, [r3, #8]
   1de58:	ldr	r3, [sl, #28]
   1de5c:	ldr	r2, [sl, #24]
   1de60:	sub	r3, r3, r2
   1de64:	ldr	r2, [sl, #16]
   1de68:	cmp	r3, r2
   1de6c:	bhi	1da7c <argp_failure@@Base+0x9b0>
   1de70:	ldr	r3, [sl, #4]
   1de74:	str	r3, [fp, #-124]	; 0xffffff84
   1de78:	mov	r3, #0
   1de7c:	str	r3, [sl, #4]
   1de80:	ldr	r3, [sl, #12]
   1de84:	str	r3, [fp, #-128]	; 0xffffff80
   1de88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1de8c:	str	r2, [fp, #-76]	; 0xffffffb4
   1de90:	str	sl, [fp, #-72]	; 0xffffffb8
   1de94:	sub	r3, fp, #88	; 0x58
   1de98:	str	r3, [fp, #-68]	; 0xffffffbc
   1de9c:	mov	r3, #1
   1dea0:	str	r3, [fp, #-64]	; 0xffffffc0
   1dea4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1dea8:	str	r3, [fp, #-60]	; 0xffffffc4
   1deac:	ldr	r3, [r8, #12]
   1deb0:	ands	r3, r3, #8
   1deb4:	str	r3, [fp, #-116]	; 0xffffff8c
   1deb8:	movne	r3, #0
   1debc:	strne	r3, [fp, #-116]	; 0xffffff8c
   1dec0:	bne	1dab4 <argp_failure@@Base+0x9e8>
   1dec4:	ldr	r2, [r2, #4]
   1dec8:	cmp	r2, #0
   1decc:	beq	1dab4 <argp_failure@@Base+0x9e8>
   1ded0:	add	r3, r8, #24
   1ded4:	b	1da94 <argp_failure@@Base+0x9c8>
   1ded8:	mov	r0, sl
   1dedc:	bl	1f320 <argp_error@@Base+0xdd8>
   1dee0:	b	1dd9c <argp_failure@@Base+0xcd0>
   1dee4:	sub	r2, fp, #76	; 0x4c
   1dee8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1deec:	ldr	r1, [r3, #20]
   1def0:	ldr	r0, [r8, #16]
   1def4:	bl	1be20 <_obstack_memory_used@@Base+0x1504>
   1def8:	b	1e054 <argp_failure@@Base+0xf88>
   1defc:	ldr	r7, [r8, #16]
   1df00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1df04:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1df08:	ldr	r2, [r2, #20]
   1df0c:	ldr	r1, [r8, #4]
   1df10:	mov	r0, r7
   1df14:	bl	1bbec <_obstack_memory_used@@Base+0x12d0>
   1df18:	subs	r4, r0, #0
   1df1c:	beq	1e010 <argp_failure@@Base+0xf44>
   1df20:	ldrb	r3, [r4]
   1df24:	cmp	r3, #0
   1df28:	beq	1e008 <argp_failure@@Base+0xf3c>
   1df2c:	ldr	r3, [sl, #28]
   1df30:	ldr	r2, [sl, #24]
   1df34:	sub	r3, r3, r2
   1df38:	ldr	r2, [sl, #16]
   1df3c:	cmp	r3, r2
   1df40:	bhi	1e060 <argp_failure@@Base+0xf94>
   1df44:	ldr	r5, [sl, #20]
   1df48:	bic	r5, r5, r5, asr #31
   1df4c:	ldr	r3, [pc, #624]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1df50:	ldr	r6, [r3, #20]
   1df54:	str	r6, [sl, #4]
   1df58:	ldr	r3, [pc, #612]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1df5c:	ldr	r6, [r3, #20]
   1df60:	ldr	r3, [sl, #28]
   1df64:	ldr	r2, [sl, #24]
   1df68:	sub	r3, r3, r2
   1df6c:	ldr	r2, [sl, #16]
   1df70:	cmp	r3, r2
   1df74:	bhi	1e09c <argp_failure@@Base+0xfd0>
   1df78:	str	r6, [sl, #12]
   1df7c:	ldr	r3, [pc, #576]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1df80:	ldr	r1, [r3, #20]
   1df84:	add	r3, r1, #3
   1df88:	cmp	r3, r5
   1df8c:	bcs	1e0c0 <argp_failure@@Base+0xff4>
   1df90:	ldr	r2, [sl, #28]
   1df94:	ldr	r3, [sl, #32]
   1df98:	cmp	r2, r3
   1df9c:	bcs	1e0a8 <argp_failure@@Base+0xfdc>
   1dfa0:	ldr	r3, [sl, #28]
   1dfa4:	add	r2, r3, #1
   1dfa8:	str	r2, [sl, #28]
   1dfac:	mov	r2, #10
   1dfb0:	strb	r2, [r3]
   1dfb4:	mov	r0, r4
   1dfb8:	bl	119c0 <strlen@plt>
   1dfbc:	subs	r5, r0, #0
   1dfc0:	beq	1e008 <argp_failure@@Base+0xf3c>
   1dfc4:	ldr	r3, [sl, #28]
   1dfc8:	add	r3, r3, r5
   1dfcc:	ldr	r2, [sl, #32]
   1dfd0:	cmp	r2, r3
   1dfd4:	bcs	1dfec <argp_failure@@Base+0xf20>
   1dfd8:	mov	r1, r5
   1dfdc:	mov	r0, sl
   1dfe0:	bl	1f8c4 <argp_error@@Base+0x137c>
   1dfe4:	cmp	r0, #0
   1dfe8:	beq	1e008 <argp_failure@@Base+0xf3c>
   1dfec:	mov	r2, r5
   1dff0:	mov	r1, r4
   1dff4:	ldr	r0, [sl, #28]
   1dff8:	bl	11810 <memcpy@plt>
   1dffc:	ldr	r3, [sl, #28]
   1e000:	add	r5, r3, r5
   1e004:	str	r5, [sl, #28]
   1e008:	cmp	r7, r4
   1e00c:	bne	1e124 <argp_failure@@Base+0x1058>
   1e010:	ldr	r3, [sl, #28]
   1e014:	ldr	r2, [sl, #24]
   1e018:	sub	r3, r3, r2
   1e01c:	ldr	r2, [sl, #16]
   1e020:	cmp	r3, r2
   1e024:	bhi	1e130 <argp_failure@@Base+0x1064>
   1e028:	mov	r3, #0
   1e02c:	str	r3, [sl, #4]
   1e030:	ldr	r2, [sl, #28]
   1e034:	ldr	r3, [sl, #32]
   1e038:	cmp	r2, r3
   1e03c:	bcs	1e13c <argp_failure@@Base+0x1070>
   1e040:	ldr	r3, [sl, #28]
   1e044:	add	r2, r3, #1
   1e048:	str	r2, [sl, #28]
   1e04c:	mov	r2, #10
   1e050:	strb	r2, [r3]
   1e054:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1e058:	str	r3, [fp, #-88]	; 0xffffffa8
   1e05c:	b	1ddf0 <argp_failure@@Base+0xd24>
   1e060:	mov	r0, sl
   1e064:	bl	1f320 <argp_error@@Base+0xdd8>
   1e068:	ldr	r5, [sl, #20]
   1e06c:	bic	r5, r5, r5, asr #31
   1e070:	ldr	r3, [pc, #332]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1e074:	ldr	r6, [r3, #20]
   1e078:	ldr	r3, [sl, #28]
   1e07c:	ldr	r2, [sl, #24]
   1e080:	sub	r3, r3, r2
   1e084:	ldr	r2, [sl, #16]
   1e088:	cmp	r3, r2
   1e08c:	bls	1df54 <argp_failure@@Base+0xe88>
   1e090:	mov	r0, sl
   1e094:	bl	1f320 <argp_error@@Base+0xdd8>
   1e098:	b	1df54 <argp_failure@@Base+0xe88>
   1e09c:	mov	r0, sl
   1e0a0:	bl	1f320 <argp_error@@Base+0xdd8>
   1e0a4:	b	1df78 <argp_failure@@Base+0xeac>
   1e0a8:	mov	r1, #1
   1e0ac:	mov	r0, sl
   1e0b0:	bl	1f8c4 <argp_error@@Base+0x137c>
   1e0b4:	cmp	r0, #0
   1e0b8:	beq	1dfb4 <argp_failure@@Base+0xee8>
   1e0bc:	b	1dfa0 <argp_failure@@Base+0xed4>
   1e0c0:	cmp	r1, r5
   1e0c4:	bhi	1e118 <argp_failure@@Base+0x104c>
   1e0c8:	ldr	r3, [sl, #28]
   1e0cc:	add	r3, r3, #3
   1e0d0:	ldr	r2, [sl, #32]
   1e0d4:	cmp	r2, r3
   1e0d8:	bcs	1e0f0 <argp_failure@@Base+0x1024>
   1e0dc:	mov	r1, #3
   1e0e0:	mov	r0, sl
   1e0e4:	bl	1f8c4 <argp_error@@Base+0x137c>
   1e0e8:	cmp	r0, #0
   1e0ec:	beq	1dfb4 <argp_failure@@Base+0xee8>
   1e0f0:	ldr	r3, [sl, #28]
   1e0f4:	ldr	r2, [pc, #196]	; 1e1c0 <argp_failure@@Base+0x10f4>
   1e0f8:	ldrh	r1, [r2]
   1e0fc:	ldrb	r2, [r2, #2]
   1e100:	strh	r1, [r3]
   1e104:	strb	r2, [r3, #2]
   1e108:	ldr	r3, [sl, #28]
   1e10c:	add	r3, r3, #3
   1e110:	str	r3, [sl, #28]
   1e114:	b	1dfb4 <argp_failure@@Base+0xee8>
   1e118:	mov	r0, sl
   1e11c:	bl	1ba08 <_obstack_memory_used@@Base+0x10ec>
   1e120:	b	1dfb4 <argp_failure@@Base+0xee8>
   1e124:	mov	r0, r4
   1e128:	bl	1a49c <argp_parse@@Base+0xbf4>
   1e12c:	b	1e010 <argp_failure@@Base+0xf44>
   1e130:	mov	r0, sl
   1e134:	bl	1f320 <argp_error@@Base+0xdd8>
   1e138:	b	1e028 <argp_failure@@Base+0xf5c>
   1e13c:	mov	r1, #1
   1e140:	mov	r0, sl
   1e144:	bl	1f8c4 <argp_error@@Base+0x137c>
   1e148:	cmp	r0, #0
   1e14c:	beq	1e054 <argp_failure@@Base+0xf88>
   1e150:	b	1e040 <argp_failure@@Base+0xf74>
   1e154:	mov	r0, sl
   1e158:	bl	1f320 <argp_error@@Base+0xdd8>
   1e15c:	b	1de08 <argp_failure@@Base+0xd3c>
   1e160:	mov	r0, sl
   1e164:	bl	1f320 <argp_error@@Base+0xdd8>
   1e168:	b	1de28 <argp_failure@@Base+0xd5c>
   1e16c:	andeq	r1, r2, r0, ror r3
   1e170:	muleq	r2, r8, r1
   1e174:	andeq	r1, r2, r0, lsl #7
   1e178:			; <UNDEFINED> instruction: 0x000213b0
   1e17c:	ldrdeq	r1, [r2], -r8
   1e180:			; <UNDEFINED> instruction: 0x000211b0
   1e184:	andeq	r1, r2, ip, lsr #8
   1e188:	strdeq	r1, [r2], -r8
   1e18c:	andeq	r0, r2, ip, lsr sp
   1e190:	andeq	r0, r2, ip, lsl sp
   1e194:	andeq	ip, r1, r0, lsr #14
   1e198:	andeq	r1, r2, ip, lsr r4
   1e19c:	andeq	r1, r2, r4, lsr r4
   1e1a0:	andeq	r1, r2, r4, asr #8
   1e1a4:	andeq	r1, r2, ip, asr #8
   1e1a8:	andeq	r1, r2, ip, asr r4
   1e1ac:	muleq	r2, r4, r4
   1e1b0:	andeq	r0, r2, ip, ror #25
   1e1b4:	muleq	r2, ip, r4
   1e1b8:	andeq	r1, r2, r4, lsr #9
   1e1bc:	andeq	r1, r2, ip, lsr #9
   1e1c0:			; <UNDEFINED> instruction: 0x000214b0
   1e1c4:	andeq	r2, r3, r0, asr #9
   1e1c8:	andeq	r0, r0, #5
   1e1cc:			; <UNDEFINED> instruction: 0x000214b4
   1e1d0:	andeq	sl, r3, r4, ror #28
   1e1d4:	andeq	r1, r2, r8, lsr #10
   1e1d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e1dc:	cmp	r3, #0
   1e1e0:	beq	1e2d0 <argp_failure@@Base+0x1204>
   1e1e4:	ldr	r3, [pc, #-40]	; 1e1c4 <argp_failure@@Base+0x10f8>
   1e1e8:	ldr	r3, [r3, #4]
   1e1ec:	cmp	r3, #0
   1e1f0:	beq	1e2d0 <argp_failure@@Base+0x1204>
   1e1f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1e1f8:	cmp	r3, #0
   1e1fc:	ldrne	r2, [r3]
   1e200:	moveq	r2, #0
   1e204:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1e208:	ldr	r1, [pc, #-72]	; 1e1c8 <argp_failure@@Base+0x10fc>
   1e20c:	ldr	r0, [pc, #-72]	; 1e1cc <argp_failure@@Base+0x1100>
   1e210:	bl	1bbec <_obstack_memory_used@@Base+0x12d0>
   1e214:	subs	r4, r0, #0
   1e218:	beq	1e2d0 <argp_failure@@Base+0x1204>
   1e21c:	ldrb	r3, [r4]
   1e220:	cmp	r3, #0
   1e224:	beq	1e2c4 <argp_failure@@Base+0x11f8>
   1e228:	ldr	r2, [sl, #28]
   1e22c:	ldr	r3, [sl, #32]
   1e230:	cmp	r2, r3
   1e234:	bcs	1e368 <argp_failure@@Base+0x129c>
   1e238:	ldr	r3, [sl, #28]
   1e23c:	add	r2, r3, #1
   1e240:	str	r2, [sl, #28]
   1e244:	mov	r2, #10
   1e248:	strb	r2, [r3]
   1e24c:	mov	r0, r4
   1e250:	bl	119c0 <strlen@plt>
   1e254:	subs	r5, r0, #0
   1e258:	beq	1e2a0 <argp_failure@@Base+0x11d4>
   1e25c:	ldr	r3, [sl, #28]
   1e260:	add	r3, r3, r5
   1e264:	ldr	r2, [sl, #32]
   1e268:	cmp	r2, r3
   1e26c:	bcs	1e284 <argp_failure@@Base+0x11b8>
   1e270:	mov	r1, r5
   1e274:	mov	r0, sl
   1e278:	bl	1f8c4 <argp_error@@Base+0x137c>
   1e27c:	cmp	r0, #0
   1e280:	beq	1e2a0 <argp_failure@@Base+0x11d4>
   1e284:	mov	r2, r5
   1e288:	mov	r1, r4
   1e28c:	ldr	r0, [sl, #28]
   1e290:	bl	11810 <memcpy@plt>
   1e294:	ldr	r3, [sl, #28]
   1e298:	add	r5, r3, r5
   1e29c:	str	r5, [sl, #28]
   1e2a0:	ldr	r2, [sl, #28]
   1e2a4:	ldr	r3, [sl, #32]
   1e2a8:	cmp	r2, r3
   1e2ac:	bcs	1e380 <argp_failure@@Base+0x12b4>
   1e2b0:	ldr	r3, [sl, #28]
   1e2b4:	add	r2, r3, #1
   1e2b8:	str	r2, [sl, #28]
   1e2bc:	mov	r2, #10
   1e2c0:	strb	r2, [r3]
   1e2c4:	ldr	r3, [pc, #-256]	; 1e1cc <argp_failure@@Base+0x1100>
   1e2c8:	cmp	r4, r3
   1e2cc:	bne	1e398 <argp_failure@@Base+0x12cc>
   1e2d0:	mov	r4, #1
   1e2d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e2d8:	tst	r3, #32
   1e2dc:	bne	1e3a4 <argp_failure@@Base+0x12d8>
   1e2e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e2e4:	tst	r3, #64	; 0x40
   1e2e8:	beq	1e33c <argp_failure@@Base+0x1270>
   1e2ec:	ldr	r3, [pc, #-292]	; 1e1d0 <argp_failure@@Base+0x1104>
   1e2f0:	ldr	r3, [r3]
   1e2f4:	cmp	r3, #0
   1e2f8:	beq	1e33c <argp_failure@@Base+0x1270>
   1e2fc:	cmp	r4, #0
   1e300:	beq	1e328 <argp_failure@@Base+0x125c>
   1e304:	ldr	r2, [sl, #28]
   1e308:	ldr	r3, [sl, #32]
   1e30c:	cmp	r2, r3
   1e310:	bcs	1e3cc <argp_failure@@Base+0x1300>
   1e314:	ldr	r3, [sl, #28]
   1e318:	add	r2, r3, #1
   1e31c:	str	r2, [sl, #28]
   1e320:	mov	r2, #10
   1e324:	strb	r2, [r3]
   1e328:	ldr	r3, [pc, #-352]	; 1e1d0 <argp_failure@@Base+0x1104>
   1e32c:	ldr	r2, [r3]
   1e330:	ldr	r1, [pc, #-356]	; 1e1d4 <argp_failure@@Base+0x1108>
   1e334:	mov	r0, sl
   1e338:	bl	1f9b4 <argp_error@@Base+0x146c>
   1e33c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1e340:	bl	118a0 <funlockfile@plt>
   1e344:	ldr	r3, [fp, #-108]	; 0xffffff94
   1e348:	cmp	r3, #0
   1e34c:	beq	1e358 <argp_failure@@Base+0x128c>
   1e350:	mov	r0, r3
   1e354:	bl	1b8c4 <_obstack_memory_used@@Base+0xfa8>
   1e358:	mov	r0, sl
   1e35c:	bl	1f884 <argp_error@@Base+0x133c>
   1e360:	sub	sp, fp, #32
   1e364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e368:	mov	r1, #1
   1e36c:	mov	r0, sl
   1e370:	bl	1f8c4 <argp_error@@Base+0x137c>
   1e374:	cmp	r0, #0
   1e378:	beq	1e24c <argp_failure@@Base+0x1180>
   1e37c:	b	1e238 <argp_failure@@Base+0x116c>
   1e380:	mov	r1, #1
   1e384:	mov	r0, sl
   1e388:	bl	1f8c4 <argp_error@@Base+0x137c>
   1e38c:	cmp	r0, #0
   1e390:	beq	1e2c4 <argp_failure@@Base+0x11f8>
   1e394:	b	1e2b0 <argp_failure@@Base+0x11e4>
   1e398:	mov	r0, r4
   1e39c:	bl	1a49c <argp_parse@@Base+0xbf4>
   1e3a0:	b	1e2d0 <argp_failure@@Base+0x1204>
   1e3a4:	str	sl, [sp, #4]
   1e3a8:	mov	r3, #0
   1e3ac:	str	r3, [sp]
   1e3b0:	mov	r3, r4
   1e3b4:	mov	r2, #1
   1e3b8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1e3bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   1e3c0:	bl	1c188 <_obstack_memory_used@@Base+0x186c>
   1e3c4:	orr	r4, r4, r0
   1e3c8:	b	1e2e0 <argp_failure@@Base+0x1214>
   1e3cc:	mov	r1, #1
   1e3d0:	mov	r0, sl
   1e3d4:	bl	1f8c4 <argp_error@@Base+0x137c>
   1e3d8:	cmp	r0, #0
   1e3dc:	beq	1e328 <argp_failure@@Base+0x125c>
   1e3e0:	b	1e314 <argp_failure@@Base+0x1248>
   1e3e4:	ldrb	r3, [r5]
   1e3e8:	mov	r4, r5
   1e3ec:	mov	r5, #0
   1e3f0:	b	1d4c4 <argp_failure@@Base+0x3f8>
   1e3f4:	mov	r4, r2
   1e3f8:	b	1d4d8 <argp_failure@@Base+0x40c>
   1e3fc:	cmp	r0, #110	; 0x6e
   1e400:	beq	1d530 <argp_failure@@Base+0x464>
   1e404:	mov	r3, #1
   1e408:	str	r3, [fp, #-96]	; 0xffffffa0
   1e40c:	str	r3, [fp, #-116]	; 0xffffff8c
   1e410:	add	r6, sl, #24
   1e414:	b	1d628 <argp_failure@@Base+0x55c>
   1e418:	ldrb	r3, [r9]
   1e41c:	cmp	r7, r3
   1e420:	beq	1dafc <argp_failure@@Base+0xa30>
   1e424:	add	r4, r4, #24
   1e428:	subs	r5, r5, #1
   1e42c:	beq	1dbec <argp_failure@@Base+0xb20>
   1e430:	ldr	r6, [r4, #12]
   1e434:	tst	r6, #8
   1e438:	bne	1e424 <argp_failure@@Base+0x1358>
   1e43c:	ldr	r7, [r4, #4]
   1e440:	sub	r3, r7, #1
   1e444:	cmp	r3, #254	; 0xfe
   1e448:	bhi	1e424 <argp_failure@@Base+0x1358>
   1e44c:	bl	11990 <__ctype_b_loc@plt>
   1e450:	ldr	r2, [r0]
   1e454:	lsl	r3, r7, #1
   1e458:	ldrh	r3, [r2, r3]
   1e45c:	tst	r3, #16384	; 0x4000
   1e460:	bne	1e418 <argp_failure@@Base+0x134c>
   1e464:	b	1e424 <argp_failure@@Base+0x1358>

0001e468 <argp_help@@Base>:
   1e468:	push	{lr}		; (str lr, [sp, #-4]!)
   1e46c:	sub	sp, sp, #12
   1e470:	str	r3, [sp]
   1e474:	mov	r3, r2
   1e478:	mov	r2, r1
   1e47c:	mov	r1, #0
   1e480:	bl	1d2d4 <argp_failure@@Base+0x208>
   1e484:	add	sp, sp, #12
   1e488:	pop	{pc}		; (ldr pc, [sp], #4)

0001e48c <argp_state_help@@Base>:
   1e48c:	push	{r4, r5, lr}
   1e490:	sub	sp, sp, #12
   1e494:	mov	r5, r2
   1e498:	subs	r4, r0, #0
   1e49c:	beq	1e500 <argp_state_help@@Base+0x74>
   1e4a0:	ldr	r3, [r4, #16]
   1e4a4:	tst	r3, #2
   1e4a8:	bne	1e4f8 <argp_state_help@@Base+0x6c>
   1e4ac:	cmp	r1, #0
   1e4b0:	beq	1e4f8 <argp_state_help@@Base+0x6c>
   1e4b4:	ldr	r3, [r4, #16]
   1e4b8:	tst	r3, #64	; 0x40
   1e4bc:	orrne	r5, r5, #128	; 0x80
   1e4c0:	ldr	r0, [r4]
   1e4c4:	ldr	r3, [r4, #40]	; 0x28
   1e4c8:	str	r3, [sp]
   1e4cc:	mov	r3, r5
   1e4d0:	mov	r2, r1
   1e4d4:	mov	r1, r4
   1e4d8:	bl	1d2d4 <argp_failure@@Base+0x208>
   1e4dc:	ldr	r3, [r4, #16]
   1e4e0:	tst	r3, #32
   1e4e4:	bne	1e4f8 <argp_state_help@@Base+0x6c>
   1e4e8:	tst	r5, #256	; 0x100
   1e4ec:	bne	1e52c <argp_state_help@@Base+0xa0>
   1e4f0:	tst	r5, #512	; 0x200
   1e4f4:	bne	1e538 <argp_state_help@@Base+0xac>
   1e4f8:	add	sp, sp, #12
   1e4fc:	pop	{r4, r5, pc}
   1e500:	cmp	r1, #0
   1e504:	beq	1e4f8 <argp_state_help@@Base+0x6c>
   1e508:	ldr	r3, [pc, #48]	; 1e540 <argp_state_help@@Base+0xb4>
   1e50c:	ldr	r3, [r3]
   1e510:	str	r3, [sp]
   1e514:	mov	r3, r2
   1e518:	mov	r2, r1
   1e51c:	mov	r1, #0
   1e520:	mov	r0, r1
   1e524:	bl	1d2d4 <argp_failure@@Base+0x208>
   1e528:	b	1e4e8 <argp_state_help@@Base+0x5c>
   1e52c:	ldr	r3, [pc, #16]	; 1e544 <argp_state_help@@Base+0xb8>
   1e530:	ldr	r0, [r3]
   1e534:	bl	119a8 <exit@plt>
   1e538:	mov	r0, #0
   1e53c:	bl	119a8 <exit@plt>
   1e540:	andeq	r2, r3, r0, lsl #10
   1e544:	strdeq	r2, [r3], -r8

0001e548 <argp_error@@Base>:
   1e548:	push	{r1, r2, r3}
   1e54c:	push	{r4, r5, lr}
   1e550:	sub	sp, sp, #8
   1e554:	subs	r5, r0, #0
   1e558:	beq	1e628 <argp_error@@Base+0xe0>
   1e55c:	ldr	r3, [r5, #16]
   1e560:	tst	r3, #2
   1e564:	bne	1e618 <argp_error@@Base+0xd0>
   1e568:	ldr	r4, [r5, #44]	; 0x2c
   1e56c:	cmp	r4, #0
   1e570:	beq	1e618 <argp_error@@Base+0xd0>
   1e574:	mov	r0, r4
   1e578:	bl	11b1c <flockfile@plt>
   1e57c:	add	r3, sp, #24
   1e580:	str	r3, [sp, #4]
   1e584:	ldr	r0, [r5, #40]	; 0x28
   1e588:	mov	r1, r4
   1e58c:	bl	11774 <fputs_unlocked@plt>
   1e590:	ldr	r3, [r4, #20]
   1e594:	ldr	r2, [r4, #24]
   1e598:	cmp	r3, r2
   1e59c:	addcc	r2, r3, #1
   1e5a0:	strcc	r2, [r4, #20]
   1e5a4:	movcc	r2, #58	; 0x3a
   1e5a8:	strbcc	r2, [r3]
   1e5ac:	bcs	1e654 <argp_error@@Base+0x10c>
   1e5b0:	ldr	r3, [r4, #20]
   1e5b4:	ldr	r2, [r4, #24]
   1e5b8:	cmp	r3, r2
   1e5bc:	addcc	r2, r3, #1
   1e5c0:	strcc	r2, [r4, #20]
   1e5c4:	movcc	r2, #32
   1e5c8:	strbcc	r2, [r3]
   1e5cc:	bcs	1e664 <argp_error@@Base+0x11c>
   1e5d0:	ldr	r2, [sp, #4]
   1e5d4:	ldr	r1, [sp, #20]
   1e5d8:	mov	r0, r4
   1e5dc:	bl	11ad4 <vfprintf@plt>
   1e5e0:	ldr	r3, [r4, #20]
   1e5e4:	ldr	r2, [r4, #24]
   1e5e8:	cmp	r3, r2
   1e5ec:	addcc	r2, r3, #1
   1e5f0:	strcc	r2, [r4, #20]
   1e5f4:	movcc	r2, #10
   1e5f8:	strbcc	r2, [r3]
   1e5fc:	bcs	1e674 <argp_error@@Base+0x12c>
   1e600:	mov	r2, #260	; 0x104
   1e604:	mov	r1, r4
   1e608:	mov	r0, r5
   1e60c:	bl	1e48c <argp_state_help@@Base>
   1e610:	mov	r0, r4
   1e614:	bl	118a0 <funlockfile@plt>
   1e618:	add	sp, sp, #8
   1e61c:	pop	{r4, r5, lr}
   1e620:	add	sp, sp, #12
   1e624:	bx	lr
   1e628:	ldr	r3, [pc, #84]	; 1e684 <argp_error@@Base+0x13c>
   1e62c:	ldr	r4, [r3]
   1e630:	cmp	r4, #0
   1e634:	beq	1e618 <argp_error@@Base+0xd0>
   1e638:	mov	r0, r4
   1e63c:	bl	11b1c <flockfile@plt>
   1e640:	add	r3, sp, #24
   1e644:	str	r3, [sp, #4]
   1e648:	ldr	r3, [pc, #56]	; 1e688 <argp_error@@Base+0x140>
   1e64c:	ldr	r0, [r3]
   1e650:	b	1e588 <argp_error@@Base+0x40>
   1e654:	mov	r1, #58	; 0x3a
   1e658:	mov	r0, r4
   1e65c:	bl	11aa4 <__overflow@plt>
   1e660:	b	1e5b0 <argp_error@@Base+0x68>
   1e664:	mov	r1, #32
   1e668:	mov	r0, r4
   1e66c:	bl	11aa4 <__overflow@plt>
   1e670:	b	1e5d0 <argp_error@@Base+0x88>
   1e674:	mov	r1, #10
   1e678:	mov	r0, r4
   1e67c:	bl	11aa4 <__overflow@plt>
   1e680:	b	1e600 <argp_error@@Base+0xb8>
   1e684:	andeq	r2, r3, r0, lsl r5
   1e688:	andeq	r2, r3, r0, lsl #10
   1e68c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e690:	ldr	r4, [r1, #28]
   1e694:	ldr	r5, [r1, #32]
   1e698:	ldr	r6, [r1]
   1e69c:	add	r7, r0, r5, lsl #2
   1e6a0:	b	1e6d8 <argp_error@@Base+0x190>
   1e6a4:	cmp	sl, #0
   1e6a8:	ble	1e6d4 <argp_error@@Base+0x18c>
   1e6ac:	add	r2, r0, r4, lsl #2
   1e6b0:	sub	r3, r6, sl
   1e6b4:	add	r3, r0, r3, lsl #2
   1e6b8:	add	r8, r0, r6, lsl #2
   1e6bc:	ldr	ip, [r2]
   1e6c0:	ldr	lr, [r3]
   1e6c4:	str	lr, [r2], #4
   1e6c8:	str	ip, [r3], #4
   1e6cc:	cmp	r3, r8
   1e6d0:	bne	1e6bc <argp_error@@Base+0x174>
   1e6d4:	sub	r6, r6, sl
   1e6d8:	cmp	r6, r5
   1e6dc:	movle	r3, #0
   1e6e0:	movgt	r3, #1
   1e6e4:	cmp	r4, r5
   1e6e8:	movge	r3, #0
   1e6ec:	cmp	r3, #0
   1e6f0:	beq	1e73c <argp_error@@Base+0x1f4>
   1e6f4:	sub	r9, r6, r5
   1e6f8:	sub	sl, r5, r4
   1e6fc:	cmp	r9, sl
   1e700:	bgt	1e6a4 <argp_error@@Base+0x15c>
   1e704:	cmp	r9, #0
   1e708:	addgt	r3, r0, r4, lsl #2
   1e70c:	addgt	r8, r9, r4
   1e710:	addgt	r8, r0, r8, lsl #2
   1e714:	movgt	r2, r7
   1e718:	ble	1e734 <argp_error@@Base+0x1ec>
   1e71c:	ldr	ip, [r3]
   1e720:	ldr	lr, [r2]
   1e724:	str	lr, [r3], #4
   1e728:	str	ip, [r2], #4
   1e72c:	cmp	r3, r8
   1e730:	bne	1e71c <argp_error@@Base+0x1d4>
   1e734:	add	r4, r4, r9
   1e738:	b	1e6d8 <argp_error@@Base+0x190>
   1e73c:	ldr	r0, [r1]
   1e740:	ldr	r3, [r1, #32]
   1e744:	sub	r2, r0, r3
   1e748:	ldr	r3, [r1, #28]
   1e74c:	add	r3, r3, r2
   1e750:	str	r3, [r1, #28]
   1e754:	str	r0, [r1, #32]
   1e758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e75c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e760:	sub	sp, sp, #44	; 0x2c
   1e764:	str	r0, [sp, #20]
   1e768:	str	r1, [sp, #12]
   1e76c:	str	r2, [sp, #24]
   1e770:	str	r3, [sp, #8]
   1e774:	ldr	fp, [sp, #88]	; 0x58
   1e778:	ldr	sl, [fp, #20]
   1e77c:	ldrb	r3, [sl]
   1e780:	cmp	r3, #0
   1e784:	cmpne	r3, #61	; 0x3d
   1e788:	beq	1e7c4 <argp_error@@Base+0x27c>
   1e78c:	mov	r8, sl
   1e790:	ldrb	r3, [r8, #1]!
   1e794:	cmp	r3, #0
   1e798:	cmpne	r3, #61	; 0x3d
   1e79c:	bne	1e790 <argp_error@@Base+0x248>
   1e7a0:	sub	r7, r8, sl
   1e7a4:	ldr	r5, [sp, #8]
   1e7a8:	ldr	r3, [r5]
   1e7ac:	str	r3, [sp, #16]
   1e7b0:	cmp	r3, #0
   1e7b4:	beq	1eab8 <argp_error@@Base+0x570>
   1e7b8:	mov	r4, r3
   1e7bc:	mov	r6, #0
   1e7c0:	b	1e7dc <argp_error@@Base+0x294>
   1e7c4:	mov	r8, sl
   1e7c8:	b	1e7a0 <argp_error@@Base+0x258>
   1e7cc:	add	r6, r6, #1
   1e7d0:	ldr	r4, [r5, #16]!
   1e7d4:	cmp	r4, #0
   1e7d8:	beq	1e814 <argp_error@@Base+0x2cc>
   1e7dc:	mov	r9, r5
   1e7e0:	mov	r2, r7
   1e7e4:	mov	r1, sl
   1e7e8:	mov	r0, r4
   1e7ec:	bl	11ba0 <strncmp@plt>
   1e7f0:	cmp	r0, #0
   1e7f4:	bne	1e7cc <argp_error@@Base+0x284>
   1e7f8:	mov	r0, r4
   1e7fc:	bl	119c0 <strlen@plt>
   1e800:	cmp	r7, r0
   1e804:	bne	1e7cc <argp_error@@Base+0x284>
   1e808:	cmp	r5, #0
   1e80c:	strne	r6, [sp, #28]
   1e810:	bne	1ea68 <argp_error@@Base+0x520>
   1e814:	ldr	r4, [sp, #8]
   1e818:	mvn	r3, #0
   1e81c:	str	r3, [sp, #28]
   1e820:	mov	sl, #0
   1e824:	str	sl, [sp, #36]	; 0x24
   1e828:	mov	r5, sl
   1e82c:	mov	r9, sl
   1e830:	str	r8, [sp, #32]
   1e834:	mov	r8, sl
   1e838:	ldr	r0, [sp, #16]
   1e83c:	b	1e88c <argp_error@@Base+0x344>
   1e840:	ldr	r2, [r9, #8]
   1e844:	ldr	r3, [r4, #8]
   1e848:	cmp	r2, r3
   1e84c:	bne	1e8c4 <argp_error@@Base+0x37c>
   1e850:	ldr	r2, [r9, #12]
   1e854:	ldr	r3, [r4, #12]
   1e858:	cmp	r2, r3
   1e85c:	bne	1e8c4 <argp_error@@Base+0x37c>
   1e860:	b	1e87c <argp_error@@Base+0x334>
   1e864:	cmp	r8, #0
   1e868:	moveq	sl, #1
   1e86c:	beq	1e87c <argp_error@@Base+0x334>
   1e870:	mov	sl, #1
   1e874:	mov	r3, #1
   1e878:	strb	r3, [r8, r5]
   1e87c:	add	r5, r5, #1
   1e880:	ldr	r0, [r4, #16]!
   1e884:	cmp	r0, #0
   1e888:	beq	1e92c <argp_error@@Base+0x3e4>
   1e88c:	mov	r2, r7
   1e890:	ldr	r1, [fp, #20]
   1e894:	bl	11ba0 <strncmp@plt>
   1e898:	cmp	r0, #0
   1e89c:	bne	1e87c <argp_error@@Base+0x334>
   1e8a0:	cmp	r9, #0
   1e8a4:	beq	1e918 <argp_error@@Base+0x3d0>
   1e8a8:	ldr	r3, [sp, #84]	; 0x54
   1e8ac:	cmp	r3, #0
   1e8b0:	bne	1e8c4 <argp_error@@Base+0x37c>
   1e8b4:	ldr	r2, [r9, #4]
   1e8b8:	ldr	r3, [r4, #4]
   1e8bc:	cmp	r2, r3
   1e8c0:	beq	1e840 <argp_error@@Base+0x2f8>
   1e8c4:	cmp	sl, #0
   1e8c8:	bne	1e87c <argp_error@@Base+0x334>
   1e8cc:	ldr	r3, [sp, #92]	; 0x5c
   1e8d0:	cmp	r3, #0
   1e8d4:	beq	1e864 <argp_error@@Base+0x31c>
   1e8d8:	cmp	r8, #0
   1e8dc:	bne	1e874 <argp_error@@Base+0x32c>
   1e8e0:	mov	r0, r6
   1e8e4:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1e8e8:	subs	r8, r0, #0
   1e8ec:	beq	1e924 <argp_error@@Base+0x3dc>
   1e8f0:	mov	r2, r6
   1e8f4:	mov	r1, #0
   1e8f8:	mov	r0, r8
   1e8fc:	bl	11a38 <memset@plt>
   1e900:	ldr	r3, [sp, #28]
   1e904:	mov	r2, #1
   1e908:	strb	r2, [r8, r3]
   1e90c:	mov	r3, #1
   1e910:	str	r3, [sp, #36]	; 0x24
   1e914:	b	1e874 <argp_error@@Base+0x32c>
   1e918:	str	r5, [sp, #28]
   1e91c:	mov	r9, r4
   1e920:	b	1e87c <argp_error@@Base+0x334>
   1e924:	mov	sl, #1
   1e928:	b	1e87c <argp_error@@Base+0x334>
   1e92c:	mov	r3, r8
   1e930:	str	r8, [sp, #16]
   1e934:	ldr	r8, [sp, #32]
   1e938:	cmp	sl, #0
   1e93c:	cmpeq	r3, #0
   1e940:	beq	1ea60 <argp_error@@Base+0x518>
   1e944:	ldr	r3, [sp, #92]	; 0x5c
   1e948:	cmp	r3, #0
   1e94c:	beq	1e97c <argp_error@@Base+0x434>
   1e950:	cmp	sl, #0
   1e954:	beq	1e9b8 <argp_error@@Base+0x470>
   1e958:	ldr	r3, [sp, #12]
   1e95c:	ldr	r2, [r3]
   1e960:	ldr	r3, [pc, #708]	; 1ec2c <argp_error@@Base+0x6e4>
   1e964:	ldr	r0, [r3]
   1e968:	ldr	r3, [fp, #20]
   1e96c:	str	r3, [sp]
   1e970:	ldr	r3, [sp, #96]	; 0x60
   1e974:	ldr	r1, [pc, #692]	; 1ec30 <argp_error@@Base+0x6e8>
   1e978:	bl	119e4 <fprintf@plt>
   1e97c:	ldr	r3, [sp, #36]	; 0x24
   1e980:	cmp	r3, #0
   1e984:	bne	1ea54 <argp_error@@Base+0x50c>
   1e988:	ldr	r4, [fp, #20]
   1e98c:	mov	r0, r4
   1e990:	bl	119c0 <strlen@plt>
   1e994:	add	r0, r4, r0
   1e998:	str	r0, [fp, #20]
   1e99c:	ldr	r3, [fp]
   1e9a0:	add	r3, r3, #1
   1e9a4:	str	r3, [fp]
   1e9a8:	mov	r3, #0
   1e9ac:	str	r3, [fp, #8]
   1e9b0:	mov	r0, #63	; 0x3f
   1e9b4:	b	1ebac <argp_error@@Base+0x664>
   1e9b8:	ldr	r4, [pc, #620]	; 1ec2c <argp_error@@Base+0x6e4>
   1e9bc:	ldr	r0, [r4]
   1e9c0:	bl	11b1c <flockfile@plt>
   1e9c4:	ldr	r3, [sp, #12]
   1e9c8:	ldr	r2, [r3]
   1e9cc:	ldr	r0, [r4]
   1e9d0:	ldr	r3, [fp, #20]
   1e9d4:	str	r3, [sp]
   1e9d8:	ldr	r3, [sp, #96]	; 0x60
   1e9dc:	ldr	r1, [pc, #592]	; 1ec34 <argp_error@@Base+0x6ec>
   1e9e0:	bl	119e4 <fprintf@plt>
   1e9e4:	cmp	r6, #0
   1e9e8:	ble	1ea38 <argp_error@@Base+0x4f0>
   1e9ec:	ldr	r3, [sp, #16]
   1e9f0:	mov	r4, r3
   1e9f4:	add	r6, r3, r6
   1e9f8:	ldr	r7, [pc, #568]	; 1ec38 <argp_error@@Base+0x6f0>
   1e9fc:	ldr	r5, [pc, #552]	; 1ec2c <argp_error@@Base+0x6e4>
   1ea00:	ldr	r8, [sp, #8]
   1ea04:	b	1ea14 <argp_error@@Base+0x4cc>
   1ea08:	add	sl, sl, #1
   1ea0c:	cmp	r4, r6
   1ea10:	beq	1ea38 <argp_error@@Base+0x4f0>
   1ea14:	ldrb	r3, [r4], #1
   1ea18:	cmp	r3, #0
   1ea1c:	beq	1ea08 <argp_error@@Base+0x4c0>
   1ea20:	ldr	r3, [r8, sl, lsl #4]
   1ea24:	ldr	r2, [sp, #96]	; 0x60
   1ea28:	mov	r1, r7
   1ea2c:	ldr	r0, [r5]
   1ea30:	bl	119e4 <fprintf@plt>
   1ea34:	b	1ea08 <argp_error@@Base+0x4c0>
   1ea38:	ldr	r4, [pc, #492]	; 1ec2c <argp_error@@Base+0x6e4>
   1ea3c:	ldr	r1, [r4]
   1ea40:	mov	r0, #10
   1ea44:	bl	11ae0 <fputc@plt>
   1ea48:	ldr	r0, [r4]
   1ea4c:	bl	118a0 <funlockfile@plt>
   1ea50:	b	1e97c <argp_error@@Base+0x434>
   1ea54:	ldr	r0, [sp, #16]
   1ea58:	bl	1a49c <argp_parse@@Base+0xbf4>
   1ea5c:	b	1e988 <argp_error@@Base+0x440>
   1ea60:	cmp	r9, #0
   1ea64:	beq	1eab8 <argp_error@@Base+0x570>
   1ea68:	ldr	r2, [fp]
   1ea6c:	add	r3, r2, #1
   1ea70:	str	r3, [fp]
   1ea74:	mov	r1, #0
   1ea78:	str	r1, [fp, #20]
   1ea7c:	ldrb	r1, [r8]
   1ea80:	cmp	r1, #0
   1ea84:	beq	1eb78 <argp_error@@Base+0x630>
   1ea88:	ldr	r3, [r9, #4]
   1ea8c:	cmp	r3, #0
   1ea90:	addne	r8, r8, #1
   1ea94:	strne	r8, [fp, #12]
   1ea98:	bne	1eb84 <argp_error@@Base+0x63c>
   1ea9c:	ldr	r3, [sp, #92]	; 0x5c
   1eaa0:	cmp	r3, #0
   1eaa4:	bne	1eb50 <argp_error@@Base+0x608>
   1eaa8:	ldr	r3, [r9, #12]
   1eaac:	str	r3, [fp, #8]
   1eab0:	mov	r0, #63	; 0x3f
   1eab4:	b	1ebac <argp_error@@Base+0x664>
   1eab8:	ldr	r3, [sp, #84]	; 0x54
   1eabc:	cmp	r3, #0
   1eac0:	bne	1eaf0 <argp_error@@Base+0x5a8>
   1eac4:	ldr	r3, [sp, #92]	; 0x5c
   1eac8:	cmp	r3, #0
   1eacc:	bne	1eb28 <argp_error@@Base+0x5e0>
   1ead0:	mov	r2, #0
   1ead4:	str	r2, [fp, #20]
   1ead8:	ldr	r3, [fp]
   1eadc:	add	r3, r3, #1
   1eae0:	str	r3, [fp]
   1eae4:	str	r2, [fp, #8]
   1eae8:	mov	r0, #63	; 0x3f
   1eaec:	b	1ebac <argp_error@@Base+0x664>
   1eaf0:	ldr	r3, [fp]
   1eaf4:	ldr	r2, [sp, #12]
   1eaf8:	ldr	r3, [r2, r3, lsl #2]
   1eafc:	ldrb	r3, [r3, #1]
   1eb00:	cmp	r3, #45	; 0x2d
   1eb04:	beq	1eac4 <argp_error@@Base+0x57c>
   1eb08:	ldr	r3, [fp, #20]
   1eb0c:	ldrb	r1, [r3]
   1eb10:	ldr	r0, [sp, #24]
   1eb14:	bl	119cc <strchr@plt>
   1eb18:	cmp	r0, #0
   1eb1c:	beq	1eac4 <argp_error@@Base+0x57c>
   1eb20:	mvn	r0, #0
   1eb24:	b	1ebac <argp_error@@Base+0x664>
   1eb28:	ldr	r3, [sp, #12]
   1eb2c:	ldr	r2, [r3]
   1eb30:	ldr	r3, [pc, #244]	; 1ec2c <argp_error@@Base+0x6e4>
   1eb34:	ldr	r0, [r3]
   1eb38:	ldr	r3, [fp, #20]
   1eb3c:	str	r3, [sp]
   1eb40:	ldr	r3, [sp, #96]	; 0x60
   1eb44:	ldr	r1, [pc, #240]	; 1ec3c <argp_error@@Base+0x6f4>
   1eb48:	bl	119e4 <fprintf@plt>
   1eb4c:	b	1ead0 <argp_error@@Base+0x588>
   1eb50:	ldr	r3, [sp, #12]
   1eb54:	ldr	r2, [r3]
   1eb58:	ldr	r3, [pc, #204]	; 1ec2c <argp_error@@Base+0x6e4>
   1eb5c:	ldr	r0, [r3]
   1eb60:	ldr	r3, [r9]
   1eb64:	str	r3, [sp]
   1eb68:	ldr	r3, [sp, #96]	; 0x60
   1eb6c:	ldr	r1, [pc, #204]	; 1ec40 <argp_error@@Base+0x6f8>
   1eb70:	bl	119e4 <fprintf@plt>
   1eb74:	b	1eaa8 <argp_error@@Base+0x560>
   1eb78:	ldr	r1, [r9, #4]
   1eb7c:	cmp	r1, #1
   1eb80:	beq	1ebb4 <argp_error@@Base+0x66c>
   1eb84:	ldr	r3, [sp, #80]	; 0x50
   1eb88:	cmp	r3, #0
   1eb8c:	ldrne	r2, [sp, #28]
   1eb90:	strne	r2, [r3]
   1eb94:	ldr	r3, [r9, #8]
   1eb98:	cmp	r3, #0
   1eb9c:	ldrne	r2, [r9, #12]
   1eba0:	strne	r2, [r3]
   1eba4:	movne	r0, #0
   1eba8:	ldreq	r0, [r9, #12]
   1ebac:	add	sp, sp, #44	; 0x2c
   1ebb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ebb4:	ldr	r1, [sp, #20]
   1ebb8:	cmp	r3, r1
   1ebbc:	bge	1ebd8 <argp_error@@Base+0x690>
   1ebc0:	add	r2, r2, #2
   1ebc4:	str	r2, [fp]
   1ebc8:	ldr	r2, [sp, #12]
   1ebcc:	ldr	r3, [r2, r3, lsl #2]
   1ebd0:	str	r3, [fp, #12]
   1ebd4:	b	1eb84 <argp_error@@Base+0x63c>
   1ebd8:	ldr	r3, [sp, #92]	; 0x5c
   1ebdc:	cmp	r3, #0
   1ebe0:	bne	1ec04 <argp_error@@Base+0x6bc>
   1ebe4:	ldr	r3, [r9, #12]
   1ebe8:	str	r3, [fp, #8]
   1ebec:	ldr	r3, [sp, #24]
   1ebf0:	ldrb	r0, [r3]
   1ebf4:	cmp	r0, #58	; 0x3a
   1ebf8:	moveq	r0, #58	; 0x3a
   1ebfc:	movne	r0, #63	; 0x3f
   1ec00:	b	1ebac <argp_error@@Base+0x664>
   1ec04:	ldr	r3, [sp, #12]
   1ec08:	ldr	r2, [r3]
   1ec0c:	ldr	r3, [pc, #24]	; 1ec2c <argp_error@@Base+0x6e4>
   1ec10:	ldr	r0, [r3]
   1ec14:	ldr	r3, [r9]
   1ec18:	str	r3, [sp]
   1ec1c:	ldr	r3, [sp, #96]	; 0x60
   1ec20:	ldr	r1, [pc, #28]	; 1ec44 <argp_error@@Base+0x6fc>
   1ec24:	bl	119e4 <fprintf@plt>
   1ec28:	b	1ebe4 <argp_error@@Base+0x69c>
   1ec2c:	andeq	r2, r3, r0, lsl r5
   1ec30:	andeq	r1, r2, ip, lsr r5
   1ec34:	andeq	r1, r2, ip, asr r5
   1ec38:	andeq	r1, r2, ip, lsl #11
   1ec3c:	muleq	r2, r4, r5
   1ec40:			; <UNDEFINED> instruction: 0x000215b4
   1ec44:	andeq	r1, r2, r4, ror #11
   1ec48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec4c:	sub	sp, sp, #36	; 0x24
   1ec50:	str	r3, [sp, #24]
   1ec54:	ldr	r4, [sp, #80]	; 0x50
   1ec58:	ldr	r8, [r4, #4]
   1ec5c:	subs	r5, r0, #0
   1ec60:	ble	1f168 <argp_error@@Base+0xc20>
   1ec64:	mov	r9, r1
   1ec68:	mov	r6, r2
   1ec6c:	mov	r3, #0
   1ec70:	str	r3, [r4, #12]
   1ec74:	ldr	r3, [r4]
   1ec78:	cmp	r3, #0
   1ec7c:	beq	1eca0 <argp_error@@Base+0x758>
   1ec80:	ldr	r3, [r4, #16]
   1ec84:	cmp	r3, #0
   1ec88:	beq	1eca8 <argp_error@@Base+0x760>
   1ec8c:	ldrb	r3, [r2]
   1ec90:	sub	r3, r3, #43	; 0x2b
   1ec94:	tst	r3, #253	; 0xfd
   1ec98:	addeq	r6, r2, #1
   1ec9c:	b	1ed04 <argp_error@@Base+0x7bc>
   1eca0:	mov	r3, #1
   1eca4:	str	r3, [r4]
   1eca8:	ldr	r3, [r4]
   1ecac:	str	r3, [r4, #32]
   1ecb0:	str	r3, [r4, #28]
   1ecb4:	mov	r3, #0
   1ecb8:	str	r3, [r4, #20]
   1ecbc:	ldrb	r3, [r6]
   1ecc0:	cmp	r3, #45	; 0x2d
   1ecc4:	moveq	r3, #2
   1ecc8:	streq	r3, [r4, #24]
   1eccc:	addeq	r6, r6, #1
   1ecd0:	beq	1ecfc <argp_error@@Base+0x7b4>
   1ecd4:	cmp	r3, #43	; 0x2b
   1ecd8:	moveq	r3, #0
   1ecdc:	streq	r3, [r4, #24]
   1ece0:	addeq	r6, r6, #1
   1ece4:	beq	1ecfc <argp_error@@Base+0x7b4>
   1ece8:	ldr	r3, [sp, #84]	; 0x54
   1ecec:	cmp	r3, #0
   1ecf0:	beq	1eda0 <argp_error@@Base+0x858>
   1ecf4:	mov	r3, #0
   1ecf8:	str	r3, [r4, #24]
   1ecfc:	mov	r3, #1
   1ed00:	str	r3, [r4, #16]
   1ed04:	ldrb	r3, [r6]
   1ed08:	cmp	r3, #58	; 0x3a
   1ed0c:	moveq	r8, #0
   1ed10:	ldr	r3, [r4, #20]
   1ed14:	cmp	r3, #0
   1ed18:	beq	1ed28 <argp_error@@Base+0x7e0>
   1ed1c:	ldrb	r3, [r3]
   1ed20:	cmp	r3, #0
   1ed24:	bne	1eeb4 <argp_error@@Base+0x96c>
   1ed28:	ldr	r3, [r4]
   1ed2c:	ldr	r2, [r4, #32]
   1ed30:	cmp	r2, r3
   1ed34:	strgt	r3, [r4, #32]
   1ed38:	ldr	r2, [r4, #28]
   1ed3c:	cmp	r3, r2
   1ed40:	strlt	r3, [r4, #28]
   1ed44:	ldr	r2, [r4, #24]
   1ed48:	cmp	r2, #1
   1ed4c:	beq	1edbc <argp_error@@Base+0x874>
   1ed50:	ldr	r7, [r4]
   1ed54:	cmp	r5, r7
   1ed58:	beq	1ee40 <argp_error@@Base+0x8f8>
   1ed5c:	ldr	sl, [r9, r7, lsl #2]
   1ed60:	ldr	r1, [pc, #1088]	; 1f1a8 <argp_error@@Base+0xc60>
   1ed64:	mov	r0, sl
   1ed68:	bl	1178c <strcmp@plt>
   1ed6c:	cmp	r0, #0
   1ed70:	bne	1f178 <argp_error@@Base+0xc30>
   1ed74:	add	r7, r7, #1
   1ed78:	str	r7, [r4]
   1ed7c:	ldr	r2, [r4, #28]
   1ed80:	ldr	r3, [r4, #32]
   1ed84:	cmp	r7, r3
   1ed88:	cmpne	r2, r3
   1ed8c:	beq	1ee30 <argp_error@@Base+0x8e8>
   1ed90:	mov	r1, r4
   1ed94:	mov	r0, r9
   1ed98:	bl	1e68c <argp_error@@Base+0x144>
   1ed9c:	b	1ee38 <argp_error@@Base+0x8f0>
   1eda0:	ldr	r0, [pc, #1028]	; 1f1ac <argp_error@@Base+0xc64>
   1eda4:	bl	11924 <getenv@plt>
   1eda8:	cmp	r0, #0
   1edac:	bne	1ecf4 <argp_error@@Base+0x7ac>
   1edb0:	mov	r3, #1
   1edb4:	str	r3, [r4, #24]
   1edb8:	b	1ecfc <argp_error@@Base+0x7b4>
   1edbc:	ldr	r2, [r4, #32]
   1edc0:	ldr	r1, [r4, #28]
   1edc4:	cmp	r1, r2
   1edc8:	cmpne	r3, r2
   1edcc:	beq	1ede0 <argp_error@@Base+0x898>
   1edd0:	mov	r1, r4
   1edd4:	mov	r0, r9
   1edd8:	bl	1e68c <argp_error@@Base+0x144>
   1eddc:	b	1ede8 <argp_error@@Base+0x8a0>
   1ede0:	cmp	r3, r2
   1ede4:	strne	r3, [r4, #28]
   1ede8:	ldr	r3, [r4]
   1edec:	cmp	r5, r3
   1edf0:	ble	1ee28 <argp_error@@Base+0x8e0>
   1edf4:	add	r1, r9, r3, lsl #2
   1edf8:	b	1ee0c <argp_error@@Base+0x8c4>
   1edfc:	add	r3, r3, #1
   1ee00:	str	r3, [r4]
   1ee04:	cmp	r5, r3
   1ee08:	beq	1ee28 <argp_error@@Base+0x8e0>
   1ee0c:	ldr	r2, [r1], #4
   1ee10:	ldrb	r0, [r2]
   1ee14:	cmp	r0, #45	; 0x2d
   1ee18:	bne	1edfc <argp_error@@Base+0x8b4>
   1ee1c:	ldrb	r2, [r2, #1]
   1ee20:	cmp	r2, #0
   1ee24:	beq	1edfc <argp_error@@Base+0x8b4>
   1ee28:	str	r3, [r4, #32]
   1ee2c:	b	1ed50 <argp_error@@Base+0x808>
   1ee30:	cmp	r2, r3
   1ee34:	streq	r7, [r4, #28]
   1ee38:	str	r5, [r4, #32]
   1ee3c:	str	r5, [r4]
   1ee40:	ldr	r3, [r4, #28]
   1ee44:	ldr	r2, [r4, #32]
   1ee48:	cmp	r3, r2
   1ee4c:	mvneq	r0, #0
   1ee50:	strne	r3, [r4]
   1ee54:	mvnne	r0, #0
   1ee58:	b	1efb8 <argp_error@@Base+0xa70>
   1ee5c:	ldrb	r1, [sl, #1]
   1ee60:	cmp	r1, #0
   1ee64:	beq	1f184 <argp_error@@Base+0xc3c>
   1ee68:	ldr	r3, [sp, #24]
   1ee6c:	cmp	r3, #0
   1ee70:	beq	1eea4 <argp_error@@Base+0x95c>
   1ee74:	cmp	r1, #45	; 0x2d
   1ee78:	beq	1ef1c <argp_error@@Base+0x9d4>
   1ee7c:	ldr	r3, [sp, #76]	; 0x4c
   1ee80:	cmp	r3, #0
   1ee84:	beq	1eea4 <argp_error@@Base+0x95c>
   1ee88:	ldrb	r3, [sl, #2]
   1ee8c:	cmp	r3, #0
   1ee90:	bne	1ef5c <argp_error@@Base+0xa14>
   1ee94:	mov	r0, r6
   1ee98:	bl	119cc <strchr@plt>
   1ee9c:	cmp	r0, #0
   1eea0:	beq	1ef5c <argp_error@@Base+0xa14>
   1eea4:	ldr	r3, [r4]
   1eea8:	ldr	r3, [r9, r3, lsl #2]
   1eeac:	add	r3, r3, #1
   1eeb0:	str	r3, [r4, #20]
   1eeb4:	ldr	sl, [r4, #20]
   1eeb8:	add	fp, sl, #1
   1eebc:	str	fp, [r4, #20]
   1eec0:	ldrb	r7, [sl]
   1eec4:	str	r7, [sp, #28]
   1eec8:	mov	r1, r7
   1eecc:	mov	r0, r6
   1eed0:	bl	119cc <strchr@plt>
   1eed4:	ldrb	r3, [sl, #1]
   1eed8:	cmp	r3, #0
   1eedc:	ldreq	r3, [r4]
   1eee0:	addeq	r3, r3, #1
   1eee4:	streq	r3, [r4]
   1eee8:	sub	r3, r7, #58	; 0x3a
   1eeec:	uxtb	r3, r3
   1eef0:	cmp	r0, #0
   1eef4:	cmpne	r3, #1
   1eef8:	bls	1efa4 <argp_error@@Base+0xa5c>
   1eefc:	ldrb	r3, [r0]
   1ef00:	cmp	r3, #87	; 0x57
   1ef04:	beq	1efdc <argp_error@@Base+0xa94>
   1ef08:	ldrb	r3, [r0, #1]
   1ef0c:	cmp	r3, #58	; 0x3a
   1ef10:	beq	1f0a8 <argp_error@@Base+0xb60>
   1ef14:	mov	r0, r7
   1ef18:	b	1efb8 <argp_error@@Base+0xa70>
   1ef1c:	add	sl, sl, #2
   1ef20:	str	sl, [r4, #20]
   1ef24:	ldr	r3, [pc, #636]	; 1f1a8 <argp_error@@Base+0xc60>
   1ef28:	str	r3, [sp, #16]
   1ef2c:	str	r8, [sp, #12]
   1ef30:	str	r4, [sp, #8]
   1ef34:	ldr	r3, [sp, #76]	; 0x4c
   1ef38:	str	r3, [sp, #4]
   1ef3c:	ldr	r3, [sp, #72]	; 0x48
   1ef40:	str	r3, [sp]
   1ef44:	ldr	r3, [sp, #24]
   1ef48:	mov	r2, r6
   1ef4c:	mov	r1, r9
   1ef50:	mov	r0, r5
   1ef54:	bl	1e75c <argp_error@@Base+0x214>
   1ef58:	b	1efb8 <argp_error@@Base+0xa70>
   1ef5c:	add	sl, sl, #1
   1ef60:	str	sl, [r4, #20]
   1ef64:	ldr	r3, [pc, #580]	; 1f1b0 <argp_error@@Base+0xc68>
   1ef68:	str	r3, [sp, #16]
   1ef6c:	str	r8, [sp, #12]
   1ef70:	str	r4, [sp, #8]
   1ef74:	ldr	r3, [sp, #76]	; 0x4c
   1ef78:	str	r3, [sp, #4]
   1ef7c:	ldr	r3, [sp, #72]	; 0x48
   1ef80:	str	r3, [sp]
   1ef84:	ldr	r3, [sp, #24]
   1ef88:	mov	r2, r6
   1ef8c:	mov	r1, r9
   1ef90:	mov	r0, r5
   1ef94:	bl	1e75c <argp_error@@Base+0x214>
   1ef98:	cmn	r0, #1
   1ef9c:	bne	1efb8 <argp_error@@Base+0xa70>
   1efa0:	b	1eea4 <argp_error@@Base+0x95c>
   1efa4:	cmp	r8, #0
   1efa8:	bne	1efc0 <argp_error@@Base+0xa78>
   1efac:	ldr	r3, [sp, #28]
   1efb0:	str	r3, [r4, #8]
   1efb4:	mov	r0, #63	; 0x3f
   1efb8:	add	sp, sp, #36	; 0x24
   1efbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1efc0:	ldr	r3, [sp, #28]
   1efc4:	ldr	r2, [r9]
   1efc8:	ldr	r1, [pc, #484]	; 1f1b4 <argp_error@@Base+0xc6c>
   1efcc:	ldr	r0, [pc, #484]	; 1f1b8 <argp_error@@Base+0xc70>
   1efd0:	ldr	r0, [r0]
   1efd4:	bl	119e4 <fprintf@plt>
   1efd8:	b	1efac <argp_error@@Base+0xa64>
   1efdc:	ldrb	r3, [r0, #1]
   1efe0:	ldr	r2, [sp, #24]
   1efe4:	cmp	r3, #59	; 0x3b
   1efe8:	movne	r3, #0
   1efec:	moveq	r3, #1
   1eff0:	cmp	r2, #0
   1eff4:	moveq	r3, #0
   1eff8:	cmp	r3, #0
   1effc:	beq	1ef08 <argp_error@@Base+0x9c0>
   1f000:	ldrb	r3, [sl, #1]
   1f004:	cmp	r3, #0
   1f008:	strne	fp, [r4, #12]
   1f00c:	bne	1f024 <argp_error@@Base+0xadc>
   1f010:	ldr	r3, [r4]
   1f014:	cmp	r5, r3
   1f018:	beq	1f068 <argp_error@@Base+0xb20>
   1f01c:	ldr	r3, [r9, r3, lsl #2]
   1f020:	str	r3, [r4, #12]
   1f024:	ldr	r3, [r4, #12]
   1f028:	str	r3, [r4, #20]
   1f02c:	mov	r3, #0
   1f030:	str	r3, [r4, #12]
   1f034:	ldr	r2, [pc, #384]	; 1f1bc <argp_error@@Base+0xc74>
   1f038:	str	r2, [sp, #16]
   1f03c:	str	r8, [sp, #12]
   1f040:	str	r4, [sp, #8]
   1f044:	str	r3, [sp, #4]
   1f048:	ldr	r3, [sp, #72]	; 0x48
   1f04c:	str	r3, [sp]
   1f050:	ldr	r3, [sp, #24]
   1f054:	mov	r2, r6
   1f058:	mov	r1, r9
   1f05c:	mov	r0, r5
   1f060:	bl	1e75c <argp_error@@Base+0x214>
   1f064:	b	1efb8 <argp_error@@Base+0xa70>
   1f068:	cmp	r8, #0
   1f06c:	bne	1f08c <argp_error@@Base+0xb44>
   1f070:	ldr	r3, [sp, #28]
   1f074:	str	r3, [r4, #8]
   1f078:	ldrb	r0, [r6]
   1f07c:	cmp	r0, #58	; 0x3a
   1f080:	moveq	r0, #58	; 0x3a
   1f084:	movne	r0, #63	; 0x3f
   1f088:	b	1efb8 <argp_error@@Base+0xa70>
   1f08c:	ldr	r3, [sp, #28]
   1f090:	ldr	r2, [r9]
   1f094:	ldr	r1, [pc, #292]	; 1f1c0 <argp_error@@Base+0xc78>
   1f098:	ldr	r0, [pc, #280]	; 1f1b8 <argp_error@@Base+0xc70>
   1f09c:	ldr	r0, [r0]
   1f0a0:	bl	119e4 <fprintf@plt>
   1f0a4:	b	1f070 <argp_error@@Base+0xb28>
   1f0a8:	ldrb	r3, [r0, #2]
   1f0ac:	cmp	r3, #58	; 0x3a
   1f0b0:	beq	1f0dc <argp_error@@Base+0xb94>
   1f0b4:	ldrb	r3, [sl, #1]
   1f0b8:	cmp	r3, #0
   1f0bc:	beq	1f108 <argp_error@@Base+0xbc0>
   1f0c0:	str	fp, [r4, #12]
   1f0c4:	ldr	r3, [r4]
   1f0c8:	add	r3, r3, #1
   1f0cc:	str	r3, [r4]
   1f0d0:	mov	r3, #0
   1f0d4:	str	r3, [r4, #20]
   1f0d8:	b	1ef14 <argp_error@@Base+0x9cc>
   1f0dc:	ldrb	r3, [sl, #1]
   1f0e0:	cmp	r3, #0
   1f0e4:	strne	fp, [r4, #12]
   1f0e8:	ldrne	r3, [r4]
   1f0ec:	addne	r3, r3, #1
   1f0f0:	strne	r3, [r4]
   1f0f4:	moveq	r3, #0
   1f0f8:	streq	r3, [r4, #12]
   1f0fc:	mov	r3, #0
   1f100:	str	r3, [r4, #20]
   1f104:	b	1ef14 <argp_error@@Base+0x9cc>
   1f108:	ldr	r3, [r4]
   1f10c:	cmp	r5, r3
   1f110:	beq	1f128 <argp_error@@Base+0xbe0>
   1f114:	add	r2, r3, #1
   1f118:	str	r2, [r4]
   1f11c:	ldr	r3, [r9, r3, lsl #2]
   1f120:	str	r3, [r4, #12]
   1f124:	b	1f0d0 <argp_error@@Base+0xb88>
   1f128:	cmp	r8, #0
   1f12c:	bne	1f14c <argp_error@@Base+0xc04>
   1f130:	ldr	r3, [sp, #28]
   1f134:	str	r3, [r4, #8]
   1f138:	ldrb	r7, [r6]
   1f13c:	cmp	r7, #58	; 0x3a
   1f140:	moveq	r7, #58	; 0x3a
   1f144:	movne	r7, #63	; 0x3f
   1f148:	b	1f0d0 <argp_error@@Base+0xb88>
   1f14c:	ldr	r3, [sp, #28]
   1f150:	ldr	r2, [r9]
   1f154:	ldr	r1, [pc, #100]	; 1f1c0 <argp_error@@Base+0xc78>
   1f158:	ldr	r0, [pc, #88]	; 1f1b8 <argp_error@@Base+0xc70>
   1f15c:	ldr	r0, [r0]
   1f160:	bl	119e4 <fprintf@plt>
   1f164:	b	1f130 <argp_error@@Base+0xbe8>
   1f168:	mvn	r0, #0
   1f16c:	b	1efb8 <argp_error@@Base+0xa70>
   1f170:	mvn	r0, #0
   1f174:	b	1efb8 <argp_error@@Base+0xa70>
   1f178:	ldrb	r3, [sl]
   1f17c:	cmp	r3, #45	; 0x2d
   1f180:	beq	1ee5c <argp_error@@Base+0x914>
   1f184:	ldr	r3, [r4, #24]
   1f188:	cmp	r3, #0
   1f18c:	beq	1f170 <argp_error@@Base+0xc28>
   1f190:	add	r3, r7, #1
   1f194:	str	r3, [r4]
   1f198:	ldr	r3, [r9, r7, lsl #2]
   1f19c:	str	r3, [r4, #12]
   1f1a0:	mov	r0, #1
   1f1a4:	b	1efb8 <argp_error@@Base+0xa70>
   1f1a8:	andeq	r0, r2, r4, ror #25
   1f1ac:	andeq	r1, r2, ip, lsl #12
   1f1b0:	andeq	r1, r2, ip, lsl r6
   1f1b4:	andeq	r1, r2, r0, lsr #12
   1f1b8:	andeq	r2, r3, r0, lsl r5
   1f1bc:	andeq	r1, r2, r8, ror #12
   1f1c0:	andeq	r1, r2, ip, lsr r6
   1f1c4:	push	{r4, r5, lr}
   1f1c8:	sub	sp, sp, #20
   1f1cc:	ldr	r4, [pc, #84]	; 1f228 <argp_error@@Base+0xce0>
   1f1d0:	ldr	r5, [pc, #84]	; 1f22c <argp_error@@Base+0xce4>
   1f1d4:	ldr	ip, [r5]
   1f1d8:	str	ip, [r4]
   1f1dc:	ldr	ip, [r5, #4]
   1f1e0:	str	ip, [r4, #4]
   1f1e4:	ldr	ip, [sp, #40]	; 0x28
   1f1e8:	str	ip, [sp, #12]
   1f1ec:	str	r4, [sp, #8]
   1f1f0:	ldr	ip, [sp, #36]	; 0x24
   1f1f4:	str	ip, [sp, #4]
   1f1f8:	ldr	ip, [sp, #32]
   1f1fc:	str	ip, [sp]
   1f200:	bl	1ec48 <argp_error@@Base+0x700>
   1f204:	ldr	r3, [r4]
   1f208:	str	r3, [r5]
   1f20c:	ldr	r2, [r4, #12]
   1f210:	ldr	r3, [pc, #24]	; 1f230 <argp_error@@Base+0xce8>
   1f214:	str	r2, [r3]
   1f218:	ldr	r3, [r4, #8]
   1f21c:	str	r3, [r5, #8]
   1f220:	add	sp, sp, #20
   1f224:	pop	{r4, r5, pc}
   1f228:	andeq	sl, r3, ip, lsr #13
   1f22c:	andeq	r2, r3, ip, ror #9
   1f230:	andeq	sl, r3, ip, ror #28
   1f234:	push	{lr}		; (str lr, [sp, #-4]!)
   1f238:	sub	sp, sp, #20
   1f23c:	mov	r3, #1
   1f240:	str	r3, [sp, #8]
   1f244:	mov	r3, #0
   1f248:	str	r3, [sp, #4]
   1f24c:	str	r3, [sp]
   1f250:	bl	1f1c4 <argp_error@@Base+0xc7c>
   1f254:	add	sp, sp, #20
   1f258:	pop	{pc}		; (ldr pc, [sp], #4)
   1f25c:	push	{r4, r5, r6, lr}
   1f260:	mov	r6, r0
   1f264:	mov	r5, r1
   1f268:	subs	r4, r2, #0
   1f26c:	beq	1f298 <argp_error@@Base+0xd50>
   1f270:	mov	r1, r4
   1f274:	mvn	r0, #0
   1f278:	bl	1fa34 <argp_error@@Base+0x14ec>
   1f27c:	cmp	r0, r5
   1f280:	bcs	1f298 <argp_error@@Base+0xd50>
   1f284:	bl	11a14 <__errno_location@plt>
   1f288:	mov	r3, #12
   1f28c:	str	r3, [r0]
   1f290:	mov	r0, #0
   1f294:	pop	{r4, r5, r6, pc}
   1f298:	mul	r1, r5, r4
   1f29c:	mov	r0, r6
   1f2a0:	bl	1b478 <_obstack_memory_used@@Base+0xb5c>
   1f2a4:	pop	{r4, r5, r6, pc}
   1f2a8:	push	{r4, r5, r6, r7, r8, lr}
   1f2ac:	mov	r8, r0
   1f2b0:	mov	r7, r1
   1f2b4:	mov	r6, r2
   1f2b8:	mov	r5, r3
   1f2bc:	mov	r0, #36	; 0x24
   1f2c0:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1f2c4:	subs	r4, r0, #0
   1f2c8:	beq	1f308 <argp_error@@Base+0xdc0>
   1f2cc:	str	r8, [r4]
   1f2d0:	str	r7, [r4, #4]
   1f2d4:	str	r6, [r4, #8]
   1f2d8:	str	r5, [r4, #12]
   1f2dc:	mov	r3, #0
   1f2e0:	str	r3, [r4, #20]
   1f2e4:	str	r3, [r4, #16]
   1f2e8:	mov	r0, #200	; 0xc8
   1f2ec:	bl	1b448 <_obstack_memory_used@@Base+0xb2c>
   1f2f0:	str	r0, [r4, #24]
   1f2f4:	cmp	r0, #0
   1f2f8:	strne	r0, [r4, #28]
   1f2fc:	addne	r0, r0, #200	; 0xc8
   1f300:	strne	r0, [r4, #32]
   1f304:	beq	1f310 <argp_error@@Base+0xdc8>
   1f308:	mov	r0, r4
   1f30c:	pop	{r4, r5, r6, r7, r8, pc}
   1f310:	mov	r0, r4
   1f314:	bl	1a49c <argp_parse@@Base+0xbf4>
   1f318:	mov	r4, #0
   1f31c:	b	1f308 <argp_error@@Base+0xdc0>
   1f320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f324:	sub	sp, sp, #20
   1f328:	mov	r4, r0
   1f32c:	ldr	r2, [r0, #24]
   1f330:	ldr	r3, [r0, #16]
   1f334:	add	r9, r2, r3
   1f338:	mov	sl, #32
   1f33c:	b	1f3e8 <argp_error@@Base+0xea0>
   1f340:	add	r5, r5, #1
   1f344:	cmp	r6, r5
   1f348:	beq	1f378 <argp_error@@Base+0xe30>
   1f34c:	ldr	r0, [r4]
   1f350:	ldr	r3, [r0, #20]
   1f354:	ldr	r2, [r0, #24]
   1f358:	cmp	r3, r2
   1f35c:	addcc	r2, r3, #1
   1f360:	strcc	r2, [r0, #20]
   1f364:	strbcc	sl, [r3]
   1f368:	bcc	1f340 <argp_error@@Base+0xdf8>
   1f36c:	mov	r1, sl
   1f370:	bl	11aa4 <__overflow@plt>
   1f374:	b	1f340 <argp_error@@Base+0xdf8>
   1f378:	str	r6, [r4, #20]
   1f37c:	ldr	fp, [r4, #28]
   1f380:	str	fp, [sp, #8]
   1f384:	str	r9, [sp, #4]
   1f388:	sub	r3, fp, r9
   1f38c:	str	r3, [sp]
   1f390:	mov	r2, r3
   1f394:	mov	r1, #10
   1f398:	mov	r0, r9
   1f39c:	bl	11a5c <memchr@plt>
   1f3a0:	mov	r7, r0
   1f3a4:	ldr	r3, [r4, #20]
   1f3a8:	cmp	r3, #0
   1f3ac:	movlt	r3, #0
   1f3b0:	strlt	r3, [r4, #20]
   1f3b4:	cmp	r7, #0
   1f3b8:	beq	1f458 <argp_error@@Base+0xf10>
   1f3bc:	ldr	r0, [r4, #20]
   1f3c0:	mov	r5, r7
   1f3c4:	ldr	r8, [r4, #8]
   1f3c8:	ldr	r3, [sp, #4]
   1f3cc:	sub	r3, r7, r3
   1f3d0:	add	r3, r3, r0
   1f3d4:	cmp	r3, r8
   1f3d8:	bge	1f4a8 <argp_error@@Base+0xf60>
   1f3dc:	mov	r3, #0
   1f3e0:	str	r3, [r4, #20]
   1f3e4:	add	r9, r7, #1
   1f3e8:	ldr	fp, [r4, #28]
   1f3ec:	cmp	r9, fp
   1f3f0:	bcs	1f490 <argp_error@@Base+0xf48>
   1f3f4:	ldr	r3, [r4, #20]
   1f3f8:	cmp	r3, #0
   1f3fc:	bne	1f37c <argp_error@@Base+0xe34>
   1f400:	ldr	r6, [r4, #4]
   1f404:	cmp	r6, #0
   1f408:	beq	1f854 <argp_error@@Base+0x130c>
   1f40c:	add	r3, fp, r6
   1f410:	ldr	r2, [r4, #32]
   1f414:	cmp	r2, r3
   1f418:	movls	r5, #0
   1f41c:	bls	1f34c <argp_error@@Base+0xe04>
   1f420:	add	r5, r9, r6
   1f424:	sub	r2, fp, r9
   1f428:	mov	r1, r9
   1f42c:	mov	r0, r5
   1f430:	bl	117c8 <memmove@plt>
   1f434:	ldr	r3, [r4, #28]
   1f438:	add	r3, r3, r6
   1f43c:	str	r3, [r4, #28]
   1f440:	mov	r2, r6
   1f444:	mov	r1, sl
   1f448:	mov	r0, r9
   1f44c:	bl	11a38 <memset@plt>
   1f450:	mov	r9, r5
   1f454:	b	1f378 <argp_error@@Base+0xe30>
   1f458:	ldr	r3, [r4, #20]
   1f45c:	ldr	r2, [sp]
   1f460:	add	r3, r2, r3
   1f464:	ldr	r6, [r4, #8]
   1f468:	cmp	r3, r6
   1f46c:	bcc	1f48c <argp_error@@Base+0xf44>
   1f470:	sub	r6, r6, #1
   1f474:	ldr	r3, [r4, #12]
   1f478:	str	r3, [sp, #12]
   1f47c:	cmp	r3, #0
   1f480:	blt	1f59c <argp_error@@Base+0x1054>
   1f484:	mov	r7, fp
   1f488:	b	1f4bc <argp_error@@Base+0xf74>
   1f48c:	str	r3, [r4, #20]
   1f490:	ldr	r3, [r4, #28]
   1f494:	ldr	r2, [r4, #24]
   1f498:	sub	r3, r3, r2
   1f49c:	str	r3, [r4, #16]
   1f4a0:	add	sp, sp, #20
   1f4a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f4a8:	sub	r6, r8, #1
   1f4ac:	ldr	r3, [r4, #12]
   1f4b0:	str	r3, [sp, #12]
   1f4b4:	cmp	r3, #0
   1f4b8:	blt	1f550 <argp_error@@Base+0x1008>
   1f4bc:	ldr	r5, [r4, #20]
   1f4c0:	rsb	r5, r5, #1
   1f4c4:	add	r5, r5, r6
   1f4c8:	adds	r5, r9, r5
   1f4cc:	bcs	1f87c <argp_error@@Base+0x1334>
   1f4d0:	bl	11990 <__ctype_b_loc@plt>
   1f4d4:	ldr	r0, [r0]
   1f4d8:	mov	r3, r5
   1f4dc:	mov	r1, r3
   1f4e0:	sub	r3, r3, #1
   1f4e4:	ldrb	r2, [r1]
   1f4e8:	lsl	r2, r2, #1
   1f4ec:	ldrh	r2, [r0, r2]
   1f4f0:	tst	r2, #1
   1f4f4:	bne	1f5bc <argp_error@@Base+0x1074>
   1f4f8:	mov	r1, r3
   1f4fc:	cmp	r3, r9
   1f500:	bcs	1f4dc <argp_error@@Base+0xf94>
   1f504:	add	r6, r1, #1
   1f508:	cmp	r6, r9
   1f50c:	bhi	1f5f8 <argp_error@@Base+0x10b0>
   1f510:	cmp	r5, r7
   1f514:	bcs	1f6a8 <argp_error@@Base+0x1160>
   1f518:	add	r6, r5, #1
   1f51c:	mov	r8, r7
   1f520:	mov	r5, r6
   1f524:	cmp	r8, r6
   1f528:	beq	1f6a8 <argp_error@@Base+0x1160>
   1f52c:	bl	11990 <__ctype_b_loc@plt>
   1f530:	add	r6, r6, #1
   1f534:	ldrb	r3, [r5]
   1f538:	ldr	r2, [r0]
   1f53c:	lsl	r3, r3, #1
   1f540:	ldrh	r3, [r2, r3]
   1f544:	tst	r3, #1
   1f548:	beq	1f520 <argp_error@@Base+0xfd8>
   1f54c:	b	1f6bc <argp_error@@Base+0x1174>
   1f550:	cmp	fp, r7
   1f554:	bls	1f59c <argp_error@@Base+0x1054>
   1f558:	sub	r0, r6, r0
   1f55c:	ldr	r3, [sp, #8]
   1f560:	sub	r2, r3, r7
   1f564:	mov	r1, r7
   1f568:	add	r0, r9, r0
   1f56c:	bl	117c8 <memmove@plt>
   1f570:	ldr	r3, [r4, #20]
   1f574:	sub	r6, r6, r3
   1f578:	add	r6, r9, r6
   1f57c:	sub	r5, r6, r7
   1f580:	ldr	r3, [r4, #28]
   1f584:	sub	r5, r3, r5
   1f588:	str	r5, [r4, #28]
   1f58c:	mov	r3, #0
   1f590:	str	r3, [r4, #20]
   1f594:	add	r9, r9, r8
   1f598:	b	1f3e8 <argp_error@@Base+0xea0>
   1f59c:	ldr	r3, [r4, #20]
   1f5a0:	ldr	r2, [sp]
   1f5a4:	add	r3, r2, r3
   1f5a8:	str	r3, [r4, #20]
   1f5ac:	sub	r3, r6, r3
   1f5b0:	add	r3, fp, r3
   1f5b4:	str	r3, [r4, #28]
   1f5b8:	b	1f490 <argp_error@@Base+0xf48>
   1f5bc:	add	r6, r1, #1
   1f5c0:	cmp	r6, r9
   1f5c4:	bls	1f510 <argp_error@@Base+0xfc8>
   1f5c8:	cmp	r1, r9
   1f5cc:	bcc	1f5f8 <argp_error@@Base+0x10b0>
   1f5d0:	sub	ip, r9, #1
   1f5d4:	mov	r1, r3
   1f5d8:	cmp	ip, r3
   1f5dc:	beq	1f5f8 <argp_error@@Base+0x10b0>
   1f5e0:	sub	r3, r3, #1
   1f5e4:	ldrb	r2, [r1]
   1f5e8:	lsl	r2, r2, #1
   1f5ec:	ldrh	r2, [r0, r2]
   1f5f0:	tst	r2, #1
   1f5f4:	bne	1f5d4 <argp_error@@Base+0x108c>
   1f5f8:	add	r5, r1, #1
   1f5fc:	ldr	r3, [sp]
   1f600:	add	r3, r3, #1
   1f604:	add	r3, r9, r3
   1f608:	cmp	r6, r3
   1f60c:	beq	1f6e0 <argp_error@@Base+0x1198>
   1f610:	add	r3, r5, #1
   1f614:	sub	r3, r6, r3
   1f618:	ldr	r2, [sp, #12]
   1f61c:	cmp	r3, r2
   1f620:	bge	1f6f8 <argp_error@@Base+0x11b0>
   1f624:	cmp	r6, fp
   1f628:	bcs	1f6f8 <argp_error@@Base+0x11b0>
   1f62c:	ldr	r3, [r4, #32]
   1f630:	ldr	r2, [sp, #8]
   1f634:	sub	r3, r3, r2
   1f638:	ldr	r2, [sp, #12]
   1f63c:	add	r2, r2, #1
   1f640:	cmp	r3, r2
   1f644:	bgt	1f740 <argp_error@@Base+0x11f8>
   1f648:	ldr	r0, [r4, #24]
   1f64c:	cmp	r5, r0
   1f650:	bls	1f664 <argp_error@@Base+0x111c>
   1f654:	ldr	r3, [r4]
   1f658:	sub	r2, r5, r0
   1f65c:	mov	r1, #1
   1f660:	bl	11834 <fwrite_unlocked@plt>
   1f664:	ldr	r0, [r4]
   1f668:	ldr	r3, [r0, #20]
   1f66c:	ldr	r2, [r0, #24]
   1f670:	cmp	r3, r2
   1f674:	addcc	r2, r3, #1
   1f678:	strcc	r2, [r0, #20]
   1f67c:	movcc	r2, #10
   1f680:	strbcc	r2, [r3]
   1f684:	bcs	1f78c <argp_error@@Base+0x1244>
   1f688:	ldr	r7, [r4, #24]
   1f68c:	ldr	r3, [sp, #4]
   1f690:	sub	r3, r3, r7
   1f694:	ldr	r2, [sp]
   1f698:	add	r3, r2, r3
   1f69c:	str	r3, [sp]
   1f6a0:	mov	r9, r7
   1f6a4:	b	1f708 <argp_error@@Base+0x11c0>
   1f6a8:	cmp	r5, r7
   1f6ac:	moveq	r3, #0
   1f6b0:	streq	r3, [r4, #20]
   1f6b4:	addeq	r9, r7, #1
   1f6b8:	beq	1f3e8 <argp_error@@Base+0xea0>
   1f6bc:	bl	11990 <__ctype_b_loc@plt>
   1f6c0:	ldr	r2, [r0]
   1f6c4:	mov	r6, r5
   1f6c8:	ldrb	r3, [r6, #1]!
   1f6cc:	lsl	r3, r3, #1
   1f6d0:	ldrh	r3, [r2, r3]
   1f6d4:	tst	r3, #1
   1f6d8:	bne	1f6c8 <argp_error@@Base+0x1180>
   1f6dc:	b	1f5fc <argp_error@@Base+0x10b4>
   1f6e0:	ldr	r3, [r4, #32]
   1f6e4:	sub	r3, r3, r5
   1f6e8:	ldr	r2, [sp, #12]
   1f6ec:	add	r2, r2, #1
   1f6f0:	cmp	r3, r2
   1f6f4:	blt	1f624 <argp_error@@Base+0x10dc>
   1f6f8:	mov	r3, #10
   1f6fc:	strb	r3, [r5]
   1f700:	mov	r7, r9
   1f704:	add	r9, r5, #1
   1f708:	mov	r8, r6
   1f70c:	ldr	r3, [r4, #12]
   1f710:	sub	r2, r6, r9
   1f714:	cmp	r2, r3
   1f718:	bge	1f7a8 <argp_error@@Base+0x1260>
   1f71c:	ldr	r2, [sp]
   1f720:	add	r2, r2, #1
   1f724:	add	r2, r7, r2
   1f728:	cmp	r6, r2
   1f72c:	beq	1f798 <argp_error@@Base+0x1250>
   1f730:	cmp	r3, #0
   1f734:	movgt	r5, #0
   1f738:	bgt	1f80c <argp_error@@Base+0x12c4>
   1f73c:	b	1f7cc <argp_error@@Base+0x1284>
   1f740:	ldr	r3, [sp, #8]
   1f744:	sub	r7, r3, r6
   1f748:	mov	r0, r2
   1f74c:	mov	r2, r7
   1f750:	mov	r1, r6
   1f754:	add	r0, r5, r0
   1f758:	bl	117c8 <memmove@plt>
   1f75c:	ldr	r6, [r4, #12]
   1f760:	add	r6, r6, #1
   1f764:	add	r6, r5, r6
   1f768:	add	r7, r6, r7
   1f76c:	ldr	r3, [sp, #4]
   1f770:	sub	r3, r7, r3
   1f774:	str	r3, [sp]
   1f778:	mov	r3, #10
   1f77c:	strb	r3, [r5]
   1f780:	mov	r7, r9
   1f784:	add	r9, r5, #1
   1f788:	b	1f708 <argp_error@@Base+0x11c0>
   1f78c:	mov	r1, #10
   1f790:	bl	11aa4 <__overflow@plt>
   1f794:	b	1f688 <argp_error@@Base+0x1140>
   1f798:	ldr	r2, [r4, #32]
   1f79c:	sub	r2, r2, r6
   1f7a0:	cmp	r3, r2
   1f7a4:	bgt	1f730 <argp_error@@Base+0x11e8>
   1f7a8:	cmp	r3, #0
   1f7ac:	ble	1f7cc <argp_error@@Base+0x1284>
   1f7b0:	mov	r3, r9
   1f7b4:	strb	sl, [r3], #1
   1f7b8:	sub	r1, r3, r9
   1f7bc:	ldr	r2, [r4, #12]
   1f7c0:	cmp	r1, r2
   1f7c4:	blt	1f7b4 <argp_error@@Base+0x126c>
   1f7c8:	mov	r9, r3
   1f7cc:	cmp	r9, r6
   1f7d0:	bcc	1f838 <argp_error@@Base+0x12f0>
   1f7d4:	sub	r7, r8, r7
   1f7d8:	ldr	r3, [sp]
   1f7dc:	sub	r7, r3, r7
   1f7e0:	add	r7, r9, r7
   1f7e4:	str	r7, [r4, #28]
   1f7e8:	ldr	r3, [r4, #12]
   1f7ec:	cmp	r3, #0
   1f7f0:	mvneq	r3, #0
   1f7f4:	str	r3, [r4, #20]
   1f7f8:	b	1f3e8 <argp_error@@Base+0xea0>
   1f7fc:	add	r5, r5, #1
   1f800:	ldr	r3, [r4, #12]
   1f804:	cmp	r3, r5
   1f808:	ble	1f7cc <argp_error@@Base+0x1284>
   1f80c:	ldr	r0, [r4]
   1f810:	ldr	r3, [r0, #20]
   1f814:	ldr	r2, [r0, #24]
   1f818:	cmp	r3, r2
   1f81c:	addcc	r2, r3, #1
   1f820:	strcc	r2, [r0, #20]
   1f824:	strbcc	sl, [r3]
   1f828:	bcc	1f7fc <argp_error@@Base+0x12b4>
   1f82c:	mov	r1, sl
   1f830:	bl	11aa4 <__overflow@plt>
   1f834:	b	1f7fc <argp_error@@Base+0x12b4>
   1f838:	ldr	r3, [sp]
   1f83c:	add	r2, r7, r3
   1f840:	sub	r2, r2, r8
   1f844:	mov	r1, r6
   1f848:	mov	r0, r9
   1f84c:	bl	117c8 <memmove@plt>
   1f850:	b	1f7d4 <argp_error@@Base+0x128c>
   1f854:	str	fp, [sp, #8]
   1f858:	str	r9, [sp, #4]
   1f85c:	sub	r3, fp, r9
   1f860:	str	r3, [sp]
   1f864:	mov	r2, r3
   1f868:	mov	r1, #10
   1f86c:	mov	r0, r9
   1f870:	bl	11a5c <memchr@plt>
   1f874:	mov	r7, r0
   1f878:	b	1f3b4 <argp_error@@Base+0xe6c>
   1f87c:	mov	r1, r5
   1f880:	b	1f504 <argp_error@@Base+0xfbc>
   1f884:	push	{r4, lr}
   1f888:	mov	r4, r0
   1f88c:	bl	1f320 <argp_error@@Base+0xdd8>
   1f890:	ldr	r2, [r4, #28]
   1f894:	ldr	r0, [r4, #24]
   1f898:	cmp	r2, r0
   1f89c:	bls	1f8b0 <argp_error@@Base+0x1368>
   1f8a0:	ldr	r3, [r4]
   1f8a4:	sub	r2, r2, r0
   1f8a8:	mov	r1, #1
   1f8ac:	bl	11834 <fwrite_unlocked@plt>
   1f8b0:	ldr	r0, [r4, #24]
   1f8b4:	bl	1a49c <argp_parse@@Base+0xbf4>
   1f8b8:	mov	r0, r4
   1f8bc:	bl	1a49c <argp_parse@@Base+0xbf4>
   1f8c0:	pop	{r4, pc}
   1f8c4:	ldr	r3, [r0, #32]
   1f8c8:	ldr	r2, [r0, #28]
   1f8cc:	sub	r3, r3, r2
   1f8d0:	cmp	r3, r1
   1f8d4:	bcc	1f8e0 <argp_error@@Base+0x1398>
   1f8d8:	mov	r0, #1
   1f8dc:	bx	lr
   1f8e0:	push	{r4, r5, r6, lr}
   1f8e4:	mov	r5, r1
   1f8e8:	mov	r4, r0
   1f8ec:	bl	1f320 <argp_error@@Base+0xdd8>
   1f8f0:	ldr	r0, [r4, #24]
   1f8f4:	ldr	r2, [r4, #28]
   1f8f8:	ldr	r3, [r4]
   1f8fc:	sub	r2, r2, r0
   1f900:	mov	r1, #1
   1f904:	bl	11834 <fwrite_unlocked@plt>
   1f908:	ldr	r2, [r4, #28]
   1f90c:	ldr	r3, [r4, #24]
   1f910:	sub	r1, r2, r3
   1f914:	cmp	r0, r1
   1f918:	bne	1f95c <argp_error@@Base+0x1414>
   1f91c:	str	r3, [r4, #28]
   1f920:	mov	r2, #0
   1f924:	str	r2, [r4, #16]
   1f928:	ldr	r1, [r4, #32]
   1f92c:	sub	r1, r1, r3
   1f930:	cmp	r5, r1
   1f934:	bls	1f954 <argp_error@@Base+0x140c>
   1f938:	adds	r5, r5, r1
   1f93c:	bcc	1f988 <argp_error@@Base+0x1440>
   1f940:	bl	11a14 <__errno_location@plt>
   1f944:	mov	r3, #12
   1f948:	str	r3, [r0]
   1f94c:	mov	r0, #0
   1f950:	pop	{r4, r5, r6, pc}
   1f954:	mov	r0, #1
   1f958:	pop	{r4, r5, r6, pc}
   1f95c:	sub	r2, r2, r0
   1f960:	str	r2, [r4, #28]
   1f964:	ldr	r1, [r4, #16]
   1f968:	sub	r1, r1, r0
   1f96c:	str	r1, [r4, #16]
   1f970:	sub	r2, r2, r3
   1f974:	add	r1, r3, r0
   1f978:	mov	r0, r3
   1f97c:	bl	117c8 <memmove@plt>
   1f980:	mov	r0, #0
   1f984:	pop	{r4, r5, r6, pc}
   1f988:	mov	r1, r5
   1f98c:	mov	r0, r3
   1f990:	bl	1b478 <_obstack_memory_used@@Base+0xb5c>
   1f994:	cmp	r0, #0
   1f998:	beq	1f940 <argp_error@@Base+0x13f8>
   1f99c:	str	r0, [r4, #24]
   1f9a0:	add	r5, r0, r5
   1f9a4:	str	r5, [r4, #32]
   1f9a8:	str	r0, [r4, #28]
   1f9ac:	mov	r0, #1
   1f9b0:	pop	{r4, r5, r6, pc}
   1f9b4:	push	{r1, r2, r3}
   1f9b8:	push	{r4, r5, r6, r7, lr}
   1f9bc:	sub	sp, sp, #8
   1f9c0:	mov	r5, r0
   1f9c4:	ldr	r7, [sp, #28]
   1f9c8:	mov	r1, #150	; 0x96
   1f9cc:	add	r6, sp, #32
   1f9d0:	mov	r0, r5
   1f9d4:	bl	1f8c4 <argp_error@@Base+0x137c>
   1f9d8:	cmp	r0, #0
   1f9dc:	beq	1fa10 <argp_error@@Base+0x14c8>
   1f9e0:	str	r6, [sp, #4]
   1f9e4:	ldr	r0, [r5, #28]
   1f9e8:	ldr	r4, [r5, #32]
   1f9ec:	sub	r4, r4, r0
   1f9f0:	mov	r3, r6
   1f9f4:	mov	r2, r7
   1f9f8:	mov	r1, r4
   1f9fc:	bl	11b28 <vsnprintf@plt>
   1fa00:	cmp	r4, r0
   1fa04:	bhi	1fa18 <argp_error@@Base+0x14d0>
   1fa08:	add	r1, r0, #1
   1fa0c:	b	1f9d0 <argp_error@@Base+0x1488>
   1fa10:	mvn	r0, #0
   1fa14:	b	1fa24 <argp_error@@Base+0x14dc>
   1fa18:	ldr	r3, [r5, #28]
   1fa1c:	add	r3, r3, r0
   1fa20:	str	r3, [r5, #28]
   1fa24:	add	sp, sp, #8
   1fa28:	pop	{r4, r5, r6, r7, lr}
   1fa2c:	add	sp, sp, #12
   1fa30:	bx	lr
   1fa34:	subs	r2, r1, #1
   1fa38:	bxeq	lr
   1fa3c:	bcc	1fc14 <argp_error@@Base+0x16cc>
   1fa40:	cmp	r0, r1
   1fa44:	bls	1fbf8 <argp_error@@Base+0x16b0>
   1fa48:	tst	r1, r2
   1fa4c:	beq	1fc04 <argp_error@@Base+0x16bc>
   1fa50:	clz	r3, r0
   1fa54:	clz	r2, r1
   1fa58:	sub	r3, r2, r3
   1fa5c:	rsbs	r3, r3, #31
   1fa60:	addne	r3, r3, r3, lsl #1
   1fa64:	mov	r2, #0
   1fa68:	addne	pc, pc, r3, lsl #2
   1fa6c:	nop			; (mov r0, r0)
   1fa70:	cmp	r0, r1, lsl #31
   1fa74:	adc	r2, r2, r2
   1fa78:	subcs	r0, r0, r1, lsl #31
   1fa7c:	cmp	r0, r1, lsl #30
   1fa80:	adc	r2, r2, r2
   1fa84:	subcs	r0, r0, r1, lsl #30
   1fa88:	cmp	r0, r1, lsl #29
   1fa8c:	adc	r2, r2, r2
   1fa90:	subcs	r0, r0, r1, lsl #29
   1fa94:	cmp	r0, r1, lsl #28
   1fa98:	adc	r2, r2, r2
   1fa9c:	subcs	r0, r0, r1, lsl #28
   1faa0:	cmp	r0, r1, lsl #27
   1faa4:	adc	r2, r2, r2
   1faa8:	subcs	r0, r0, r1, lsl #27
   1faac:	cmp	r0, r1, lsl #26
   1fab0:	adc	r2, r2, r2
   1fab4:	subcs	r0, r0, r1, lsl #26
   1fab8:	cmp	r0, r1, lsl #25
   1fabc:	adc	r2, r2, r2
   1fac0:	subcs	r0, r0, r1, lsl #25
   1fac4:	cmp	r0, r1, lsl #24
   1fac8:	adc	r2, r2, r2
   1facc:	subcs	r0, r0, r1, lsl #24
   1fad0:	cmp	r0, r1, lsl #23
   1fad4:	adc	r2, r2, r2
   1fad8:	subcs	r0, r0, r1, lsl #23
   1fadc:	cmp	r0, r1, lsl #22
   1fae0:	adc	r2, r2, r2
   1fae4:	subcs	r0, r0, r1, lsl #22
   1fae8:	cmp	r0, r1, lsl #21
   1faec:	adc	r2, r2, r2
   1faf0:	subcs	r0, r0, r1, lsl #21
   1faf4:	cmp	r0, r1, lsl #20
   1faf8:	adc	r2, r2, r2
   1fafc:	subcs	r0, r0, r1, lsl #20
   1fb00:	cmp	r0, r1, lsl #19
   1fb04:	adc	r2, r2, r2
   1fb08:	subcs	r0, r0, r1, lsl #19
   1fb0c:	cmp	r0, r1, lsl #18
   1fb10:	adc	r2, r2, r2
   1fb14:	subcs	r0, r0, r1, lsl #18
   1fb18:	cmp	r0, r1, lsl #17
   1fb1c:	adc	r2, r2, r2
   1fb20:	subcs	r0, r0, r1, lsl #17
   1fb24:	cmp	r0, r1, lsl #16
   1fb28:	adc	r2, r2, r2
   1fb2c:	subcs	r0, r0, r1, lsl #16
   1fb30:	cmp	r0, r1, lsl #15
   1fb34:	adc	r2, r2, r2
   1fb38:	subcs	r0, r0, r1, lsl #15
   1fb3c:	cmp	r0, r1, lsl #14
   1fb40:	adc	r2, r2, r2
   1fb44:	subcs	r0, r0, r1, lsl #14
   1fb48:	cmp	r0, r1, lsl #13
   1fb4c:	adc	r2, r2, r2
   1fb50:	subcs	r0, r0, r1, lsl #13
   1fb54:	cmp	r0, r1, lsl #12
   1fb58:	adc	r2, r2, r2
   1fb5c:	subcs	r0, r0, r1, lsl #12
   1fb60:	cmp	r0, r1, lsl #11
   1fb64:	adc	r2, r2, r2
   1fb68:	subcs	r0, r0, r1, lsl #11
   1fb6c:	cmp	r0, r1, lsl #10
   1fb70:	adc	r2, r2, r2
   1fb74:	subcs	r0, r0, r1, lsl #10
   1fb78:	cmp	r0, r1, lsl #9
   1fb7c:	adc	r2, r2, r2
   1fb80:	subcs	r0, r0, r1, lsl #9
   1fb84:	cmp	r0, r1, lsl #8
   1fb88:	adc	r2, r2, r2
   1fb8c:	subcs	r0, r0, r1, lsl #8
   1fb90:	cmp	r0, r1, lsl #7
   1fb94:	adc	r2, r2, r2
   1fb98:	subcs	r0, r0, r1, lsl #7
   1fb9c:	cmp	r0, r1, lsl #6
   1fba0:	adc	r2, r2, r2
   1fba4:	subcs	r0, r0, r1, lsl #6
   1fba8:	cmp	r0, r1, lsl #5
   1fbac:	adc	r2, r2, r2
   1fbb0:	subcs	r0, r0, r1, lsl #5
   1fbb4:	cmp	r0, r1, lsl #4
   1fbb8:	adc	r2, r2, r2
   1fbbc:	subcs	r0, r0, r1, lsl #4
   1fbc0:	cmp	r0, r1, lsl #3
   1fbc4:	adc	r2, r2, r2
   1fbc8:	subcs	r0, r0, r1, lsl #3
   1fbcc:	cmp	r0, r1, lsl #2
   1fbd0:	adc	r2, r2, r2
   1fbd4:	subcs	r0, r0, r1, lsl #2
   1fbd8:	cmp	r0, r1, lsl #1
   1fbdc:	adc	r2, r2, r2
   1fbe0:	subcs	r0, r0, r1, lsl #1
   1fbe4:	cmp	r0, r1
   1fbe8:	adc	r2, r2, r2
   1fbec:	subcs	r0, r0, r1
   1fbf0:	mov	r0, r2
   1fbf4:	bx	lr
   1fbf8:	moveq	r0, #1
   1fbfc:	movne	r0, #0
   1fc00:	bx	lr
   1fc04:	clz	r2, r1
   1fc08:	rsb	r2, r2, #31
   1fc0c:	lsr	r0, r0, r2
   1fc10:	bx	lr
   1fc14:	cmp	r0, #0
   1fc18:	mvnne	r0, #0
   1fc1c:	b	1fe80 <argp_error@@Base+0x1938>
   1fc20:	cmp	r1, #0
   1fc24:	beq	1fc14 <argp_error@@Base+0x16cc>
   1fc28:	push	{r0, r1, lr}
   1fc2c:	bl	1fa34 <argp_error@@Base+0x14ec>
   1fc30:	pop	{r1, r2, lr}
   1fc34:	mul	r3, r2, r0
   1fc38:	sub	r1, r1, r3
   1fc3c:	bx	lr
   1fc40:	cmp	r1, #0
   1fc44:	beq	1fe50 <argp_error@@Base+0x1908>
   1fc48:	eor	ip, r0, r1
   1fc4c:	rsbmi	r1, r1, #0
   1fc50:	subs	r2, r1, #1
   1fc54:	beq	1fe1c <argp_error@@Base+0x18d4>
   1fc58:	movs	r3, r0
   1fc5c:	rsbmi	r3, r0, #0
   1fc60:	cmp	r3, r1
   1fc64:	bls	1fe28 <argp_error@@Base+0x18e0>
   1fc68:	tst	r1, r2
   1fc6c:	beq	1fe38 <argp_error@@Base+0x18f0>
   1fc70:	clz	r2, r3
   1fc74:	clz	r0, r1
   1fc78:	sub	r2, r0, r2
   1fc7c:	rsbs	r2, r2, #31
   1fc80:	addne	r2, r2, r2, lsl #1
   1fc84:	mov	r0, #0
   1fc88:	addne	pc, pc, r2, lsl #2
   1fc8c:	nop			; (mov r0, r0)
   1fc90:	cmp	r3, r1, lsl #31
   1fc94:	adc	r0, r0, r0
   1fc98:	subcs	r3, r3, r1, lsl #31
   1fc9c:	cmp	r3, r1, lsl #30
   1fca0:	adc	r0, r0, r0
   1fca4:	subcs	r3, r3, r1, lsl #30
   1fca8:	cmp	r3, r1, lsl #29
   1fcac:	adc	r0, r0, r0
   1fcb0:	subcs	r3, r3, r1, lsl #29
   1fcb4:	cmp	r3, r1, lsl #28
   1fcb8:	adc	r0, r0, r0
   1fcbc:	subcs	r3, r3, r1, lsl #28
   1fcc0:	cmp	r3, r1, lsl #27
   1fcc4:	adc	r0, r0, r0
   1fcc8:	subcs	r3, r3, r1, lsl #27
   1fccc:	cmp	r3, r1, lsl #26
   1fcd0:	adc	r0, r0, r0
   1fcd4:	subcs	r3, r3, r1, lsl #26
   1fcd8:	cmp	r3, r1, lsl #25
   1fcdc:	adc	r0, r0, r0
   1fce0:	subcs	r3, r3, r1, lsl #25
   1fce4:	cmp	r3, r1, lsl #24
   1fce8:	adc	r0, r0, r0
   1fcec:	subcs	r3, r3, r1, lsl #24
   1fcf0:	cmp	r3, r1, lsl #23
   1fcf4:	adc	r0, r0, r0
   1fcf8:	subcs	r3, r3, r1, lsl #23
   1fcfc:	cmp	r3, r1, lsl #22
   1fd00:	adc	r0, r0, r0
   1fd04:	subcs	r3, r3, r1, lsl #22
   1fd08:	cmp	r3, r1, lsl #21
   1fd0c:	adc	r0, r0, r0
   1fd10:	subcs	r3, r3, r1, lsl #21
   1fd14:	cmp	r3, r1, lsl #20
   1fd18:	adc	r0, r0, r0
   1fd1c:	subcs	r3, r3, r1, lsl #20
   1fd20:	cmp	r3, r1, lsl #19
   1fd24:	adc	r0, r0, r0
   1fd28:	subcs	r3, r3, r1, lsl #19
   1fd2c:	cmp	r3, r1, lsl #18
   1fd30:	adc	r0, r0, r0
   1fd34:	subcs	r3, r3, r1, lsl #18
   1fd38:	cmp	r3, r1, lsl #17
   1fd3c:	adc	r0, r0, r0
   1fd40:	subcs	r3, r3, r1, lsl #17
   1fd44:	cmp	r3, r1, lsl #16
   1fd48:	adc	r0, r0, r0
   1fd4c:	subcs	r3, r3, r1, lsl #16
   1fd50:	cmp	r3, r1, lsl #15
   1fd54:	adc	r0, r0, r0
   1fd58:	subcs	r3, r3, r1, lsl #15
   1fd5c:	cmp	r3, r1, lsl #14
   1fd60:	adc	r0, r0, r0
   1fd64:	subcs	r3, r3, r1, lsl #14
   1fd68:	cmp	r3, r1, lsl #13
   1fd6c:	adc	r0, r0, r0
   1fd70:	subcs	r3, r3, r1, lsl #13
   1fd74:	cmp	r3, r1, lsl #12
   1fd78:	adc	r0, r0, r0
   1fd7c:	subcs	r3, r3, r1, lsl #12
   1fd80:	cmp	r3, r1, lsl #11
   1fd84:	adc	r0, r0, r0
   1fd88:	subcs	r3, r3, r1, lsl #11
   1fd8c:	cmp	r3, r1, lsl #10
   1fd90:	adc	r0, r0, r0
   1fd94:	subcs	r3, r3, r1, lsl #10
   1fd98:	cmp	r3, r1, lsl #9
   1fd9c:	adc	r0, r0, r0
   1fda0:	subcs	r3, r3, r1, lsl #9
   1fda4:	cmp	r3, r1, lsl #8
   1fda8:	adc	r0, r0, r0
   1fdac:	subcs	r3, r3, r1, lsl #8
   1fdb0:	cmp	r3, r1, lsl #7
   1fdb4:	adc	r0, r0, r0
   1fdb8:	subcs	r3, r3, r1, lsl #7
   1fdbc:	cmp	r3, r1, lsl #6
   1fdc0:	adc	r0, r0, r0
   1fdc4:	subcs	r3, r3, r1, lsl #6
   1fdc8:	cmp	r3, r1, lsl #5
   1fdcc:	adc	r0, r0, r0
   1fdd0:	subcs	r3, r3, r1, lsl #5
   1fdd4:	cmp	r3, r1, lsl #4
   1fdd8:	adc	r0, r0, r0
   1fddc:	subcs	r3, r3, r1, lsl #4
   1fde0:	cmp	r3, r1, lsl #3
   1fde4:	adc	r0, r0, r0
   1fde8:	subcs	r3, r3, r1, lsl #3
   1fdec:	cmp	r3, r1, lsl #2
   1fdf0:	adc	r0, r0, r0
   1fdf4:	subcs	r3, r3, r1, lsl #2
   1fdf8:	cmp	r3, r1, lsl #1
   1fdfc:	adc	r0, r0, r0
   1fe00:	subcs	r3, r3, r1, lsl #1
   1fe04:	cmp	r3, r1
   1fe08:	adc	r0, r0, r0
   1fe0c:	subcs	r3, r3, r1
   1fe10:	cmp	ip, #0
   1fe14:	rsbmi	r0, r0, #0
   1fe18:	bx	lr
   1fe1c:	teq	ip, r0
   1fe20:	rsbmi	r0, r0, #0
   1fe24:	bx	lr
   1fe28:	movcc	r0, #0
   1fe2c:	asreq	r0, ip, #31
   1fe30:	orreq	r0, r0, #1
   1fe34:	bx	lr
   1fe38:	clz	r2, r1
   1fe3c:	rsb	r2, r2, #31
   1fe40:	cmp	ip, #0
   1fe44:	lsr	r0, r3, r2
   1fe48:	rsbmi	r0, r0, #0
   1fe4c:	bx	lr
   1fe50:	cmp	r0, #0
   1fe54:	mvngt	r0, #-2147483648	; 0x80000000
   1fe58:	movlt	r0, #-2147483648	; 0x80000000
   1fe5c:	b	1fe80 <argp_error@@Base+0x1938>
   1fe60:	cmp	r1, #0
   1fe64:	beq	1fe50 <argp_error@@Base+0x1908>
   1fe68:	push	{r0, r1, lr}
   1fe6c:	bl	1fc48 <argp_error@@Base+0x1700>
   1fe70:	pop	{r1, r2, lr}
   1fe74:	mul	r3, r2, r0
   1fe78:	sub	r1, r1, r3
   1fe7c:	bx	lr
   1fe80:	push	{r1, lr}
   1fe84:	mov	r0, #8
   1fe88:	bl	11780 <raise@plt>
   1fe8c:	pop	{r1, pc}
   1fe90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fe94:	mov	r7, r0
   1fe98:	ldr	r6, [pc, #72]	; 1fee8 <argp_error@@Base+0x19a0>
   1fe9c:	ldr	r5, [pc, #72]	; 1feec <argp_error@@Base+0x19a4>
   1fea0:	add	r6, pc, r6
   1fea4:	add	r5, pc, r5
   1fea8:	sub	r6, r6, r5
   1feac:	mov	r8, r1
   1feb0:	mov	r9, r2
   1feb4:	bl	11748 <calloc@plt-0x20>
   1feb8:	asrs	r6, r6, #2
   1febc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fec0:	mov	r4, #0
   1fec4:	add	r4, r4, #1
   1fec8:	ldr	r3, [r5], #4
   1fecc:	mov	r2, r9
   1fed0:	mov	r1, r8
   1fed4:	mov	r0, r7
   1fed8:	blx	r3
   1fedc:	cmp	r6, r4
   1fee0:	bne	1fec4 <argp_error@@Base+0x197c>
   1fee4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fee8:	andeq	r2, r1, r0, asr r0
   1feec:	andeq	r2, r1, r8, asr #32
   1fef0:	bx	lr

Disassembly of section .fini:

0001fef4 <.fini>:
   1fef4:	push	{r3, lr}
   1fef8:	pop	{r3, pc}
